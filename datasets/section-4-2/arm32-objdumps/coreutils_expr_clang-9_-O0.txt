
../repos/coreutils/src/expr:     file format elf32-littlearm


Disassembly of section .init:

0001115c <.init>:
   1115c:	push	{r3, lr}
   11160:	bl	114dc <__assert_fail@plt+0x48>
   11164:	pop	{r3, pc}

Disassembly of section .plt:

00011168 <pthread_mutex_unlock@plt-0x14>:
   11168:	push	{lr}		; (str lr, [sp, #-4]!)
   1116c:	ldr	lr, [pc, #4]	; 11178 <pthread_mutex_unlock@plt-0x4>
   11170:	add	lr, pc, lr
   11174:	ldr	pc, [lr, #8]!
   11178:	andeq	r4, r4, r8, lsl #29

0001117c <pthread_mutex_unlock@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #68, 20	; 0x44000
   11184:	ldr	pc, [ip, #3720]!	; 0xe88

00011188 <calloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #68, 20	; 0x44000
   11190:	ldr	pc, [ip, #3712]!	; 0xe80

00011194 <fputs_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #68, 20	; 0x44000
   1119c:	ldr	pc, [ip, #3704]!	; 0xe78

000111a0 <wctype@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #68, 20	; 0x44000
   111a8:	ldr	pc, [ip, #3696]!	; 0xe70

000111ac <raise@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #68, 20	; 0x44000
   111b4:	ldr	pc, [ip, #3688]!	; 0xe68

000111b8 <wcrtomb@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #68, 20	; 0x44000
   111c0:	ldr	pc, [ip, #3680]!	; 0xe60

000111c4 <iswctype@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #68, 20	; 0x44000
   111cc:	ldr	pc, [ip, #3672]!	; 0xe58

000111d0 <strcmp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #68, 20	; 0x44000
   111d8:	ldr	pc, [ip, #3664]!	; 0xe50

000111dc <strcspn@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #68, 20	; 0x44000
   111e4:	ldr	pc, [ip, #3656]!	; 0xe48

000111e8 <printf@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #68, 20	; 0x44000
   111f0:	ldr	pc, [ip, #3648]!	; 0xe40

000111f4 <pthread_mutex_destroy@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #68, 20	; 0x44000
   111fc:	ldr	pc, [ip, #3640]!	; 0xe38

00011200 <fflush@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #68, 20	; 0x44000
   11208:	ldr	pc, [ip, #3632]!	; 0xe30

0001120c <wcwidth@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #68, 20	; 0x44000
   11214:	ldr	pc, [ip, #3624]!	; 0xe28

00011218 <memmove@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #68, 20	; 0x44000
   11220:	ldr	pc, [ip, #3616]!	; 0xe20

00011224 <free@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #68, 20	; 0x44000
   1122c:	ldr	pc, [ip, #3608]!	; 0xe18

00011230 <pthread_mutex_lock@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #68, 20	; 0x44000
   11238:	ldr	pc, [ip, #3600]!	; 0xe10

0001123c <_exit@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #68, 20	; 0x44000
   11244:	ldr	pc, [ip, #3592]!	; 0xe08

00011248 <memcpy@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #68, 20	; 0x44000
   11250:	ldr	pc, [ip, #3584]!	; 0xe00

00011254 <tolower@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #68, 20	; 0x44000
   1125c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011260 <pthread_mutex_init@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #68, 20	; 0x44000
   11268:	ldr	pc, [ip, #3568]!	; 0xdf0

0001126c <towlower@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #68, 20	; 0x44000
   11274:	ldr	pc, [ip, #3560]!	; 0xde8

00011278 <mbsinit@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #68, 20	; 0x44000
   11280:	ldr	pc, [ip, #3552]!	; 0xde0

00011284 <memcmp@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #68, 20	; 0x44000
   1128c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011290 <realloc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #68, 20	; 0x44000
   11298:	ldr	pc, [ip, #3536]!	; 0xdd0

0001129c <textdomain@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #68, 20	; 0x44000
   112a4:	ldr	pc, [ip, #3528]!	; 0xdc8

000112a8 <iswcntrl@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #68, 20	; 0x44000
   112b0:	ldr	pc, [ip, #3520]!	; 0xdc0

000112b4 <iswprint@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #68, 20	; 0x44000
   112bc:	ldr	pc, [ip, #3512]!	; 0xdb8

000112c0 <fwrite@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #68, 20	; 0x44000
   112c8:	ldr	pc, [ip, #3504]!	; 0xdb0

000112cc <lseek64@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #68, 20	; 0x44000
   112d4:	ldr	pc, [ip, #3496]!	; 0xda8

000112d8 <__ctype_get_mb_cur_max@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #68, 20	; 0x44000
   112e0:	ldr	pc, [ip, #3488]!	; 0xda0

000112e4 <__fpending@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #68, 20	; 0x44000
   112ec:	ldr	pc, [ip, #3480]!	; 0xd98

000112f0 <ferror_unlocked@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #68, 20	; 0x44000
   112f8:	ldr	pc, [ip, #3472]!	; 0xd90

000112fc <mbrtowc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #68, 20	; 0x44000
   11304:	ldr	pc, [ip, #3464]!	; 0xd88

00011308 <error@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #68, 20	; 0x44000
   11310:	ldr	pc, [ip, #3456]!	; 0xd80

00011314 <strcoll@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #68, 20	; 0x44000
   1131c:	ldr	pc, [ip, #3448]!	; 0xd78

00011320 <puts@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #68, 20	; 0x44000
   11328:	ldr	pc, [ip, #3440]!	; 0xd70

0001132c <malloc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #68, 20	; 0x44000
   11334:	ldr	pc, [ip, #3432]!	; 0xd68

00011338 <__libc_start_main@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #68, 20	; 0x44000
   11340:	ldr	pc, [ip, #3424]!	; 0xd60

00011344 <__freading@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #68, 20	; 0x44000
   1134c:	ldr	pc, [ip, #3416]!	; 0xd58

00011350 <__gmon_start__@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #68, 20	; 0x44000
   11358:	ldr	pc, [ip, #3408]!	; 0xd50

0001135c <getopt_long@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #68, 20	; 0x44000
   11364:	ldr	pc, [ip, #3400]!	; 0xd48

00011368 <__ctype_b_loc@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #68, 20	; 0x44000
   11370:	ldr	pc, [ip, #3392]!	; 0xd40

00011374 <exit@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #68, 20	; 0x44000
   1137c:	ldr	pc, [ip, #3384]!	; 0xd38

00011380 <gettext@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #68, 20	; 0x44000
   11388:	ldr	pc, [ip, #3376]!	; 0xd30

0001138c <strlen@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #68, 20	; 0x44000
   11394:	ldr	pc, [ip, #3368]!	; 0xd28

00011398 <strchr@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #68, 20	; 0x44000
   113a0:	ldr	pc, [ip, #3360]!	; 0xd20

000113a4 <fprintf@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #68, 20	; 0x44000
   113ac:	ldr	pc, [ip, #3352]!	; 0xd18

000113b0 <__errno_location@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #68, 20	; 0x44000
   113b8:	ldr	pc, [ip, #3344]!	; 0xd10

000113bc <iswalnum@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #68, 20	; 0x44000
   113c4:	ldr	pc, [ip, #3336]!	; 0xd08

000113c8 <__cxa_atexit@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #68, 20	; 0x44000
   113d0:	ldr	pc, [ip, #3328]!	; 0xd00

000113d4 <memset@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #68, 20	; 0x44000
   113dc:	ldr	pc, [ip, #3320]!	; 0xcf8

000113e0 <btowc@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #68, 20	; 0x44000
   113e8:	ldr	pc, [ip, #3312]!	; 0xcf0

000113ec <fileno@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #68, 20	; 0x44000
   113f4:	ldr	pc, [ip, #3304]!	; 0xce8

000113f8 <memchr@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #68, 20	; 0x44000
   11400:	ldr	pc, [ip, #3296]!	; 0xce0

00011404 <fclose@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #68, 20	; 0x44000
   1140c:	ldr	pc, [ip, #3288]!	; 0xcd8

00011410 <fseeko64@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #68, 20	; 0x44000
   11418:	ldr	pc, [ip, #3280]!	; 0xcd0

0001141c <setlocale@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #68, 20	; 0x44000
   11424:	ldr	pc, [ip, #3272]!	; 0xcc8

00011428 <toupper@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #68, 20	; 0x44000
   11430:	ldr	pc, [ip, #3264]!	; 0xcc0

00011434 <strrchr@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #68, 20	; 0x44000
   1143c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011440 <nl_langinfo@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #68, 20	; 0x44000
   11448:	ldr	pc, [ip, #3248]!	; 0xcb0

0001144c <bindtextdomain@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #68, 20	; 0x44000
   11454:	ldr	pc, [ip, #3240]!	; 0xca8

00011458 <towupper@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #68, 20	; 0x44000
   11460:	ldr	pc, [ip, #3232]!	; 0xca0

00011464 <fputs@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #68, 20	; 0x44000
   1146c:	ldr	pc, [ip, #3224]!	; 0xc98

00011470 <strncmp@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #68, 20	; 0x44000
   11478:	ldr	pc, [ip, #3216]!	; 0xc90

0001147c <abort@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #68, 20	; 0x44000
   11484:	ldr	pc, [ip, #3208]!	; 0xc88

00011488 <putchar_unlocked@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #68, 20	; 0x44000
   11490:	ldr	pc, [ip, #3200]!	; 0xc80

00011494 <__assert_fail@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #68, 20	; 0x44000
   1149c:	ldr	pc, [ip, #3192]!	; 0xc78

Disassembly of section .text:

000114a0 <.text>:
   114a0:	mov	fp, #0
   114a4:	mov	lr, #0
   114a8:	pop	{r1}		; (ldr r1, [sp], #4)
   114ac:	mov	r2, sp
   114b0:	push	{r2}		; (str r2, [sp, #-4]!)
   114b4:	push	{r0}		; (str r0, [sp, #-4]!)
   114b8:	ldr	ip, [pc, #16]	; 114d0 <__assert_fail@plt+0x3c>
   114bc:	push	{ip}		; (str ip, [sp, #-4]!)
   114c0:	ldr	r0, [pc, #12]	; 114d4 <__assert_fail@plt+0x40>
   114c4:	ldr	r3, [pc, #12]	; 114d8 <__assert_fail@plt+0x44>
   114c8:	bl	11338 <__libc_start_main@plt>
   114cc:	bl	1147c <abort@plt>
   114d0:	andeq	r3, r4, r0, ror #9
   114d4:	andeq	r1, r1, r0, ror #18
   114d8:	andeq	r3, r4, r0, lsl #9
   114dc:	ldr	r3, [pc, #20]	; 114f8 <__assert_fail@plt+0x64>
   114e0:	ldr	r2, [pc, #20]	; 114fc <__assert_fail@plt+0x68>
   114e4:	add	r3, pc, r3
   114e8:	ldr	r2, [r3, r2]
   114ec:	cmp	r2, #0
   114f0:	bxeq	lr
   114f4:	b	11350 <__gmon_start__@plt>
   114f8:	andeq	r4, r4, r4, lsl fp
   114fc:	andeq	r0, r0, r8, lsl r1
   11500:	ldr	r0, [pc, #24]	; 11520 <__assert_fail@plt+0x8c>
   11504:	ldr	r3, [pc, #24]	; 11524 <__assert_fail@plt+0x90>
   11508:	cmp	r3, r0
   1150c:	bxeq	lr
   11510:	ldr	r3, [pc, #16]	; 11528 <__assert_fail@plt+0x94>
   11514:	cmp	r3, #0
   11518:	bxeq	lr
   1151c:	bx	r3
   11520:	andeq	r6, r5, r4, ror r1
   11524:	andeq	r6, r5, r4, ror r1
   11528:	andeq	r0, r0, r0
   1152c:	ldr	r0, [pc, #36]	; 11558 <__assert_fail@plt+0xc4>
   11530:	ldr	r1, [pc, #36]	; 1155c <__assert_fail@plt+0xc8>
   11534:	sub	r1, r1, r0
   11538:	asr	r1, r1, #2
   1153c:	add	r1, r1, r1, lsr #31
   11540:	asrs	r1, r1, #1
   11544:	bxeq	lr
   11548:	ldr	r3, [pc, #16]	; 11560 <__assert_fail@plt+0xcc>
   1154c:	cmp	r3, #0
   11550:	bxeq	lr
   11554:	bx	r3
   11558:	andeq	r6, r5, r4, ror r1
   1155c:	andeq	r6, r5, r4, ror r1
   11560:	andeq	r0, r0, r0
   11564:	push	{r4, lr}
   11568:	ldr	r4, [pc, #24]	; 11588 <__assert_fail@plt+0xf4>
   1156c:	ldrb	r3, [r4]
   11570:	cmp	r3, #0
   11574:	popne	{r4, pc}
   11578:	bl	11500 <__assert_fail@plt+0x6c>
   1157c:	mov	r3, #1
   11580:	strb	r3, [r4]
   11584:	pop	{r4, pc}
   11588:	muleq	r5, r4, r1
   1158c:	b	1152c <__assert_fail@plt+0x98>
   11590:	push	{fp, lr}
   11594:	mov	fp, sp
   11598:	sub	sp, sp, #64	; 0x40
   1159c:	str	r0, [fp, #-4]
   115a0:	ldr	r0, [fp, #-4]
   115a4:	cmp	r0, #0
   115a8:	beq	115f4 <__assert_fail@plt+0x160>
   115ac:	b	115b0 <__assert_fail@plt+0x11c>
   115b0:	movw	r0, #24968	; 0x6188
   115b4:	movt	r0, #5
   115b8:	ldr	r0, [r0]
   115bc:	movw	r1, #13576	; 0x3508
   115c0:	movt	r1, #4
   115c4:	str	r0, [fp, #-8]
   115c8:	mov	r0, r1
   115cc:	bl	11380 <gettext@plt>
   115d0:	movw	r1, #24996	; 0x61a4
   115d4:	movt	r1, #5
   115d8:	ldr	r2, [r1]
   115dc:	ldr	r1, [fp, #-8]
   115e0:	str	r0, [fp, #-12]
   115e4:	mov	r0, r1
   115e8:	ldr	r1, [fp, #-12]
   115ec:	bl	113a4 <fprintf@plt>
   115f0:	b	117ac <__assert_fail@plt+0x318>
   115f4:	movw	r0, #13615	; 0x352f
   115f8:	movt	r0, #4
   115fc:	bl	11380 <gettext@plt>
   11600:	movw	r1, #24996	; 0x61a4
   11604:	movt	r1, #5
   11608:	ldr	r2, [r1]
   1160c:	ldr	r1, [r1]
   11610:	str	r1, [fp, #-16]
   11614:	mov	r1, r2
   11618:	ldr	r2, [fp, #-16]
   1161c:	bl	111e8 <printf@plt>
   11620:	movw	r1, #10
   11624:	str	r0, [fp, #-20]	; 0xffffffec
   11628:	mov	r0, r1
   1162c:	bl	11488 <putchar_unlocked@plt>
   11630:	movw	r1, #13654	; 0x3556
   11634:	movt	r1, #4
   11638:	str	r0, [fp, #-24]	; 0xffffffe8
   1163c:	mov	r0, r1
   11640:	bl	11380 <gettext@plt>
   11644:	movw	r1, #24972	; 0x618c
   11648:	movt	r1, #5
   1164c:	ldr	r1, [r1]
   11650:	bl	11194 <fputs_unlocked@plt>
   11654:	movw	r1, #13699	; 0x3583
   11658:	movt	r1, #4
   1165c:	str	r0, [fp, #-28]	; 0xffffffe4
   11660:	mov	r0, r1
   11664:	bl	11380 <gettext@plt>
   11668:	movw	r1, #24972	; 0x618c
   1166c:	movt	r1, #5
   11670:	ldr	r1, [r1]
   11674:	bl	11194 <fputs_unlocked@plt>
   11678:	movw	r1, #13753	; 0x35b9
   1167c:	movt	r1, #4
   11680:	str	r0, [sp, #32]
   11684:	mov	r0, r1
   11688:	bl	11380 <gettext@plt>
   1168c:	movw	r1, #24972	; 0x618c
   11690:	movt	r1, #5
   11694:	ldr	r1, [r1]
   11698:	bl	11194 <fputs_unlocked@plt>
   1169c:	movw	r1, #14027	; 0x36cb
   116a0:	movt	r1, #4
   116a4:	str	r0, [sp, #28]
   116a8:	mov	r0, r1
   116ac:	bl	11380 <gettext@plt>
   116b0:	movw	r1, #24972	; 0x618c
   116b4:	movt	r1, #5
   116b8:	ldr	r1, [r1]
   116bc:	bl	11194 <fputs_unlocked@plt>
   116c0:	movw	r1, #14317	; 0x37ed
   116c4:	movt	r1, #4
   116c8:	str	r0, [sp, #24]
   116cc:	mov	r0, r1
   116d0:	bl	11380 <gettext@plt>
   116d4:	movw	r1, #24972	; 0x618c
   116d8:	movt	r1, #5
   116dc:	ldr	r1, [r1]
   116e0:	bl	11194 <fputs_unlocked@plt>
   116e4:	movw	r1, #14430	; 0x385e
   116e8:	movt	r1, #4
   116ec:	str	r0, [sp, #20]
   116f0:	mov	r0, r1
   116f4:	bl	11380 <gettext@plt>
   116f8:	movw	r1, #24972	; 0x618c
   116fc:	movt	r1, #5
   11700:	ldr	r1, [r1]
   11704:	bl	11194 <fputs_unlocked@plt>
   11708:	movw	r1, #14617	; 0x3919
   1170c:	movt	r1, #4
   11710:	str	r0, [sp, #16]
   11714:	mov	r0, r1
   11718:	bl	11380 <gettext@plt>
   1171c:	movw	r1, #24972	; 0x618c
   11720:	movt	r1, #5
   11724:	ldr	r1, [r1]
   11728:	bl	11194 <fputs_unlocked@plt>
   1172c:	movw	r1, #14927	; 0x3a4f
   11730:	movt	r1, #4
   11734:	str	r0, [sp, #12]
   11738:	mov	r0, r1
   1173c:	bl	11380 <gettext@plt>
   11740:	movw	r1, #24972	; 0x618c
   11744:	movt	r1, #5
   11748:	ldr	r1, [r1]
   1174c:	bl	11194 <fputs_unlocked@plt>
   11750:	movw	r1, #15128	; 0x3b18
   11754:	movt	r1, #4
   11758:	str	r0, [sp, #8]
   1175c:	mov	r0, r1
   11760:	bl	11380 <gettext@plt>
   11764:	movw	r1, #24972	; 0x618c
   11768:	movt	r1, #5
   1176c:	ldr	r1, [r1]
   11770:	bl	11194 <fputs_unlocked@plt>
   11774:	movw	r1, #15420	; 0x3c3c
   11778:	movt	r1, #4
   1177c:	str	r0, [sp, #4]
   11780:	mov	r0, r1
   11784:	bl	11380 <gettext@plt>
   11788:	movw	r1, #24972	; 0x618c
   1178c:	movt	r1, #5
   11790:	ldr	r1, [r1]
   11794:	bl	11194 <fputs_unlocked@plt>
   11798:	movw	r1, #15576	; 0x3cd8
   1179c:	movt	r1, #4
   117a0:	str	r0, [sp]
   117a4:	mov	r0, r1
   117a8:	bl	117b4 <__assert_fail@plt+0x320>
   117ac:	ldr	r0, [fp, #-4]
   117b0:	bl	11374 <exit@plt>
   117b4:	push	{fp, lr}
   117b8:	mov	fp, sp
   117bc:	sub	sp, sp, #88	; 0x58
   117c0:	add	r1, sp, #28
   117c4:	movw	r2, #16424	; 0x4028
   117c8:	movt	r2, #4
   117cc:	str	r0, [fp, #-4]
   117d0:	mov	r0, r1
   117d4:	str	r1, [sp, #12]
   117d8:	mov	r1, r2
   117dc:	movw	r2, #56	; 0x38
   117e0:	bl	11248 <memcpy@plt>
   117e4:	ldr	r0, [fp, #-4]
   117e8:	str	r0, [sp, #24]
   117ec:	ldr	r0, [sp, #12]
   117f0:	str	r0, [sp, #20]
   117f4:	ldr	r0, [sp, #20]
   117f8:	ldr	r0, [r0]
   117fc:	movw	r1, #0
   11800:	cmp	r0, r1
   11804:	movw	r0, #0
   11808:	str	r0, [sp, #8]
   1180c:	beq	11838 <__assert_fail@plt+0x3a4>
   11810:	ldr	r0, [fp, #-4]
   11814:	ldr	r1, [sp, #20]
   11818:	ldr	r1, [r1]
   1181c:	bl	111d0 <strcmp@plt>
   11820:	cmp	r0, #0
   11824:	movw	r0, #0
   11828:	moveq	r0, #1
   1182c:	mvn	r1, #0
   11830:	eor	r0, r0, r1
   11834:	str	r0, [sp, #8]
   11838:	ldr	r0, [sp, #8]
   1183c:	tst	r0, #1
   11840:	beq	11854 <__assert_fail@plt+0x3c0>
   11844:	ldr	r0, [sp, #20]
   11848:	add	r0, r0, #8
   1184c:	str	r0, [sp, #20]
   11850:	b	117f4 <__assert_fail@plt+0x360>
   11854:	ldr	r0, [sp, #20]
   11858:	ldr	r0, [r0, #4]
   1185c:	movw	r1, #0
   11860:	cmp	r0, r1
   11864:	beq	11874 <__assert_fail@plt+0x3e0>
   11868:	ldr	r0, [sp, #20]
   1186c:	ldr	r0, [r0, #4]
   11870:	str	r0, [sp, #24]
   11874:	movw	r0, #15824	; 0x3dd0
   11878:	movt	r0, #4
   1187c:	bl	11380 <gettext@plt>
   11880:	movw	r1, #15605	; 0x3cf5
   11884:	movt	r1, #4
   11888:	movw	r2, #15847	; 0x3de7
   1188c:	movt	r2, #4
   11890:	bl	111e8 <printf@plt>
   11894:	movw	r1, #5
   11898:	str	r0, [sp, #4]
   1189c:	mov	r0, r1
   118a0:	movw	r1, #0
   118a4:	bl	1141c <setlocale@plt>
   118a8:	str	r0, [sp, #16]
   118ac:	ldr	r0, [sp, #16]
   118b0:	movw	r1, #0
   118b4:	cmp	r0, r1
   118b8:	beq	118f4 <__assert_fail@plt+0x460>
   118bc:	ldr	r0, [sp, #16]
   118c0:	movw	r1, #15887	; 0x3e0f
   118c4:	movt	r1, #4
   118c8:	movw	r2, #3
   118cc:	bl	11470 <strncmp@plt>
   118d0:	cmp	r0, #0
   118d4:	beq	118f4 <__assert_fail@plt+0x460>
   118d8:	movw	r0, #15891	; 0x3e13
   118dc:	movt	r0, #4
   118e0:	bl	11380 <gettext@plt>
   118e4:	movw	r1, #24972	; 0x618c
   118e8:	movt	r1, #5
   118ec:	ldr	r1, [r1]
   118f0:	bl	11194 <fputs_unlocked@plt>
   118f4:	movw	r0, #15962	; 0x3e5a
   118f8:	movt	r0, #4
   118fc:	bl	11380 <gettext@plt>
   11900:	ldr	r2, [fp, #-4]
   11904:	movw	r1, #15847	; 0x3de7
   11908:	movt	r1, #4
   1190c:	bl	111e8 <printf@plt>
   11910:	movw	r1, #15989	; 0x3e75
   11914:	movt	r1, #4
   11918:	str	r0, [sp]
   1191c:	mov	r0, r1
   11920:	bl	11380 <gettext@plt>
   11924:	ldr	r1, [sp, #24]
   11928:	ldr	r2, [sp, #24]
   1192c:	ldr	r3, [fp, #-4]
   11930:	cmp	r2, r3
   11934:	movw	r2, #0
   11938:	moveq	r2, #1
   1193c:	tst	r2, #1
   11940:	movw	r2, #16039	; 0x3ea7
   11944:	movt	r2, #4
   11948:	movw	r3, #15757	; 0x3d8d
   1194c:	movt	r3, #4
   11950:	movne	r2, r3
   11954:	bl	111e8 <printf@plt>
   11958:	mov	sp, fp
   1195c:	pop	{fp, pc}
   11960:	push	{fp, lr}
   11964:	mov	fp, sp
   11968:	sub	sp, sp, #72	; 0x48
   1196c:	movw	r2, #0
   11970:	str	r2, [fp, #-4]
   11974:	str	r0, [fp, #-8]
   11978:	str	r1, [fp, #-12]
   1197c:	ldr	r0, [fp, #-12]
   11980:	ldr	r0, [r0]
   11984:	bl	21188 <__assert_fail@plt+0xfcf4>
   11988:	movw	r0, #6
   1198c:	movw	r1, #16039	; 0x3ea7
   11990:	movt	r1, #4
   11994:	bl	1141c <setlocale@plt>
   11998:	movw	r1, #15609	; 0x3cf9
   1199c:	movt	r1, #4
   119a0:	str	r0, [fp, #-24]	; 0xffffffe8
   119a4:	mov	r0, r1
   119a8:	movw	r1, #15581	; 0x3cdd
   119ac:	movt	r1, #4
   119b0:	bl	1144c <bindtextdomain@plt>
   119b4:	movw	r1, #15609	; 0x3cf9
   119b8:	movt	r1, #4
   119bc:	str	r0, [fp, #-28]	; 0xffffffe4
   119c0:	mov	r0, r1
   119c4:	bl	1129c <textdomain@plt>
   119c8:	movw	r1, #3
   119cc:	str	r0, [fp, #-32]	; 0xffffffe0
   119d0:	mov	r0, r1
   119d4:	bl	11b6c <__assert_fail@plt+0x6d8>
   119d8:	movw	r0, #14188	; 0x376c
   119dc:	movt	r0, #1
   119e0:	bl	434e4 <__assert_fail@plt+0x32050>
   119e4:	ldr	r1, [fp, #-8]
   119e8:	ldr	r2, [fp, #-12]
   119ec:	str	r0, [sp, #36]	; 0x24
   119f0:	mov	r0, r1
   119f4:	mov	r1, r2
   119f8:	movw	r2, #15576	; 0x3cd8
   119fc:	movt	r2, #4
   11a00:	movw	r3, #15605	; 0x3cf5
   11a04:	movt	r3, #4
   11a08:	movw	ip, #15619	; 0x3d03
   11a0c:	movt	ip, #4
   11a10:	str	ip, [sp]
   11a14:	movw	ip, #5520	; 0x1590
   11a18:	movt	ip, #1
   11a1c:	str	ip, [sp, #4]
   11a20:	movw	ip, #15634	; 0x3d12
   11a24:	movt	ip, #4
   11a28:	str	ip, [sp, #8]
   11a2c:	movw	ip, #15646	; 0x3d1e
   11a30:	movt	ip, #4
   11a34:	str	ip, [sp, #12]
   11a38:	movw	ip, #15661	; 0x3d2d
   11a3c:	movt	ip, #4
   11a40:	str	ip, [sp, #16]
   11a44:	movw	ip, #0
   11a48:	str	ip, [sp, #20]
   11a4c:	bl	209e0 <__assert_fail@plt+0xf54c>
   11a50:	ldr	r0, [fp, #-8]
   11a54:	str	r0, [fp, #-20]	; 0xffffffec
   11a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a5c:	movw	r1, #1
   11a60:	cmp	r1, r0
   11a64:	bcs	11aa0 <__assert_fail@plt+0x60c>
   11a68:	ldr	r0, [fp, #-12]
   11a6c:	ldr	r0, [r0, #4]
   11a70:	movw	r1, #15673	; 0x3d39
   11a74:	movt	r1, #4
   11a78:	bl	111d0 <strcmp@plt>
   11a7c:	cmp	r0, #0
   11a80:	bne	11aa0 <__assert_fail@plt+0x60c>
   11a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a88:	mvn	r1, #0
   11a8c:	add	r0, r0, r1
   11a90:	str	r0, [fp, #-20]	; 0xffffffec
   11a94:	ldr	r0, [fp, #-12]
   11a98:	add	r0, r0, #4
   11a9c:	str	r0, [fp, #-12]
   11aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11aa4:	cmp	r0, #1
   11aa8:	bhi	11ad4 <__assert_fail@plt+0x640>
   11aac:	movw	r0, #15676	; 0x3d3c
   11ab0:	movt	r0, #4
   11ab4:	bl	11380 <gettext@plt>
   11ab8:	movw	r1, #0
   11abc:	str	r0, [sp, #32]
   11ac0:	mov	r0, r1
   11ac4:	ldr	r2, [sp, #32]
   11ac8:	bl	11308 <error@plt>
   11acc:	movw	r0, #2
   11ad0:	bl	11590 <__assert_fail@plt+0xfc>
   11ad4:	ldr	r0, [fp, #-12]
   11ad8:	add	r0, r0, #4
   11adc:	movw	r1, #24984	; 0x6198
   11ae0:	movt	r1, #5
   11ae4:	str	r0, [r1]
   11ae8:	movw	r0, #1
   11aec:	and	r0, r0, #1
   11af0:	bl	11b98 <__assert_fail@plt+0x704>
   11af4:	str	r0, [fp, #-16]
   11af8:	bl	11c64 <__assert_fail@plt+0x7d0>
   11afc:	tst	r0, #1
   11b00:	bne	11b50 <__assert_fail@plt+0x6bc>
   11b04:	movw	r0, #15692	; 0x3d4c
   11b08:	movt	r0, #4
   11b0c:	bl	11380 <gettext@plt>
   11b10:	movw	r1, #24984	; 0x6198
   11b14:	movt	r1, #5
   11b18:	ldr	r1, [r1]
   11b1c:	ldr	r2, [r1]
   11b20:	movw	r1, #0
   11b24:	str	r0, [sp, #28]
   11b28:	mov	r0, r1
   11b2c:	movw	r1, #8
   11b30:	bl	23378 <__assert_fail@plt+0x11ee4>
   11b34:	movw	r1, #2
   11b38:	str	r0, [sp, #24]
   11b3c:	mov	r0, r1
   11b40:	movw	r1, #0
   11b44:	ldr	r2, [sp, #28]
   11b48:	ldr	r3, [sp, #24]
   11b4c:	bl	11308 <error@plt>
   11b50:	ldr	r0, [fp, #-16]
   11b54:	bl	11c8c <__assert_fail@plt+0x7f8>
   11b58:	ldr	r0, [fp, #-16]
   11b5c:	bl	11d1c <__assert_fail@plt+0x888>
   11b60:	and	r0, r0, #1
   11b64:	mov	sp, fp
   11b68:	pop	{fp, pc}
   11b6c:	sub	sp, sp, #4
   11b70:	str	r0, [sp]
   11b74:	ldr	r0, [sp]
   11b78:	cmp	r0, #1
   11b7c:	beq	11b90 <__assert_fail@plt+0x6fc>
   11b80:	ldr	r0, [sp]
   11b84:	movw	r1, #24868	; 0x6124
   11b88:	movt	r1, #5
   11b8c:	str	r0, [r1]
   11b90:	add	sp, sp, #4
   11b94:	bx	lr
   11b98:	push	{fp, lr}
   11b9c:	mov	fp, sp
   11ba0:	sub	sp, sp, #16
   11ba4:	and	r0, r0, #1
   11ba8:	strb	r0, [fp, #-1]
   11bac:	ldrb	r0, [fp, #-1]
   11bb0:	and	r0, r0, #1
   11bb4:	bl	11e28 <__assert_fail@plt+0x994>
   11bb8:	str	r0, [sp, #8]
   11bbc:	movw	r0, #16040	; 0x3ea8
   11bc0:	movt	r0, #4
   11bc4:	bl	11ef4 <__assert_fail@plt+0xa60>
   11bc8:	tst	r0, #1
   11bcc:	beq	11c54 <__assert_fail@plt+0x7c0>
   11bd0:	ldrb	r0, [fp, #-1]
   11bd4:	tst	r0, #1
   11bd8:	movw	r0, #0
   11bdc:	str	r0, [sp]
   11be0:	beq	11bf0 <__assert_fail@plt+0x75c>
   11be4:	ldr	r0, [sp, #8]
   11be8:	bl	11d1c <__assert_fail@plt+0x888>
   11bec:	str	r0, [sp]
   11bf0:	ldr	r0, [sp]
   11bf4:	and	r0, r0, #1
   11bf8:	bl	11e28 <__assert_fail@plt+0x994>
   11bfc:	str	r0, [sp, #4]
   11c00:	ldr	r0, [sp, #8]
   11c04:	bl	11d1c <__assert_fail@plt+0x888>
   11c08:	tst	r0, #1
   11c0c:	beq	11c48 <__assert_fail@plt+0x7b4>
   11c10:	ldr	r0, [sp, #8]
   11c14:	bl	11f9c <__assert_fail@plt+0xb08>
   11c18:	ldr	r0, [sp, #4]
   11c1c:	str	r0, [sp, #8]
   11c20:	ldr	r0, [sp, #8]
   11c24:	bl	11d1c <__assert_fail@plt+0x888>
   11c28:	tst	r0, #1
   11c2c:	beq	11c44 <__assert_fail@plt+0x7b0>
   11c30:	ldr	r0, [sp, #8]
   11c34:	bl	11f9c <__assert_fail@plt+0xb08>
   11c38:	movw	r0, #0
   11c3c:	bl	11fe8 <__assert_fail@plt+0xb54>
   11c40:	str	r0, [sp, #8]
   11c44:	b	11c50 <__assert_fail@plt+0x7bc>
   11c48:	ldr	r0, [sp, #4]
   11c4c:	bl	11f9c <__assert_fail@plt+0xb08>
   11c50:	b	11c60 <__assert_fail@plt+0x7cc>
   11c54:	ldr	r0, [sp, #8]
   11c58:	mov	sp, fp
   11c5c:	pop	{fp, pc}
   11c60:	b	11bbc <__assert_fail@plt+0x728>
   11c64:	movw	r0, #24984	; 0x6198
   11c68:	movt	r0, #5
   11c6c:	ldr	r0, [r0]
   11c70:	ldr	r0, [r0]
   11c74:	movw	r1, #0
   11c78:	cmp	r0, r1
   11c7c:	movw	r0, #0
   11c80:	moveq	r0, #1
   11c84:	and	r0, r0, #1
   11c88:	bx	lr
   11c8c:	push	{fp, lr}
   11c90:	mov	fp, sp
   11c94:	sub	sp, sp, #16
   11c98:	str	r0, [fp, #-4]
   11c9c:	ldr	r0, [fp, #-4]
   11ca0:	ldr	r0, [r0]
   11ca4:	cmp	r0, #0
   11ca8:	str	r0, [sp, #8]
   11cac:	beq	11cc4 <__assert_fail@plt+0x830>
   11cb0:	b	11cb4 <__assert_fail@plt+0x820>
   11cb4:	ldr	r0, [sp, #8]
   11cb8:	cmp	r0, #1
   11cbc:	beq	11d00 <__assert_fail@plt+0x86c>
   11cc0:	b	11d10 <__assert_fail@plt+0x87c>
   11cc4:	movw	r0, #24972	; 0x618c
   11cc8:	movt	r0, #5
   11ccc:	ldr	r0, [r0]
   11cd0:	ldr	r1, [fp, #-4]
   11cd4:	add	r1, r1, #4
   11cd8:	movw	r2, #10
   11cdc:	str	r1, [sp, #4]
   11ce0:	mov	r1, r2
   11ce4:	ldr	r2, [sp, #4]
   11ce8:	bl	1e7b0 <__assert_fail@plt+0xd31c>
   11cec:	movw	r1, #10
   11cf0:	str	r0, [sp]
   11cf4:	mov	r0, r1
   11cf8:	bl	11488 <putchar_unlocked@plt>
   11cfc:	b	11d14 <__assert_fail@plt+0x880>
   11d00:	ldr	r0, [fp, #-4]
   11d04:	ldr	r0, [r0, #4]
   11d08:	bl	11320 <puts@plt>
   11d0c:	b	11d14 <__assert_fail@plt+0x880>
   11d10:	bl	1147c <abort@plt>
   11d14:	mov	sp, fp
   11d18:	pop	{fp, pc}
   11d1c:	push	{fp, lr}
   11d20:	mov	fp, sp
   11d24:	sub	sp, sp, #16
   11d28:	str	r0, [sp, #8]
   11d2c:	ldr	r0, [sp, #8]
   11d30:	ldr	r0, [r0]
   11d34:	cmp	r0, #0
   11d38:	str	r0, [sp]
   11d3c:	beq	11d54 <__assert_fail@plt+0x8c0>
   11d40:	b	11d44 <__assert_fail@plt+0x8b0>
   11d44:	ldr	r0, [sp]
   11d48:	cmp	r0, #1
   11d4c:	beq	11d78 <__assert_fail@plt+0x8e4>
   11d50:	b	11e14 <__assert_fail@plt+0x980>
   11d54:	ldr	r0, [sp, #8]
   11d58:	add	r0, r0, #4
   11d5c:	bl	17284 <__assert_fail@plt+0x5df0>
   11d60:	cmp	r0, #0
   11d64:	movw	r0, #0
   11d68:	moveq	r0, #1
   11d6c:	and	r0, r0, #1
   11d70:	strb	r0, [fp, #-1]
   11d74:	b	11e18 <__assert_fail@plt+0x984>
   11d78:	ldr	r0, [sp, #8]
   11d7c:	ldr	r0, [r0, #4]
   11d80:	str	r0, [sp, #4]
   11d84:	ldr	r0, [sp, #4]
   11d88:	ldrb	r0, [r0]
   11d8c:	cmp	r0, #0
   11d90:	bne	11da4 <__assert_fail@plt+0x910>
   11d94:	movw	r0, #1
   11d98:	and	r0, r0, #1
   11d9c:	strb	r0, [fp, #-1]
   11da0:	b	11e18 <__assert_fail@plt+0x984>
   11da4:	ldr	r0, [sp, #4]
   11da8:	ldrb	r0, [r0]
   11dac:	cmp	r0, #45	; 0x2d
   11db0:	movw	r0, #0
   11db4:	moveq	r0, #1
   11db8:	and	r0, r0, #1
   11dbc:	ldr	r1, [sp, #4]
   11dc0:	add	r0, r1, r0
   11dc4:	str	r0, [sp, #4]
   11dc8:	ldr	r0, [sp, #4]
   11dcc:	ldrb	r0, [r0]
   11dd0:	cmp	r0, #48	; 0x30
   11dd4:	beq	11de8 <__assert_fail@plt+0x954>
   11dd8:	movw	r0, #0
   11ddc:	and	r0, r0, #1
   11de0:	strb	r0, [fp, #-1]
   11de4:	b	11e18 <__assert_fail@plt+0x984>
   11de8:	b	11dec <__assert_fail@plt+0x958>
   11dec:	ldr	r0, [sp, #4]
   11df0:	add	r1, r0, #1
   11df4:	str	r1, [sp, #4]
   11df8:	ldrsb	r0, [r0, #1]
   11dfc:	cmp	r0, #0
   11e00:	bne	11dc8 <__assert_fail@plt+0x934>
   11e04:	movw	r0, #1
   11e08:	and	r0, r0, #1
   11e0c:	strb	r0, [fp, #-1]
   11e10:	b	11e18 <__assert_fail@plt+0x984>
   11e14:	bl	1147c <abort@plt>
   11e18:	ldrb	r0, [fp, #-1]
   11e1c:	and	r0, r0, #1
   11e20:	mov	sp, fp
   11e24:	pop	{fp, pc}
   11e28:	push	{fp, lr}
   11e2c:	mov	fp, sp
   11e30:	sub	sp, sp, #16
   11e34:	and	r0, r0, #1
   11e38:	strb	r0, [fp, #-1]
   11e3c:	ldrb	r0, [fp, #-1]
   11e40:	and	r0, r0, #1
   11e44:	bl	1202c <__assert_fail@plt+0xb98>
   11e48:	str	r0, [sp, #8]
   11e4c:	movw	r0, #16042	; 0x3eaa
   11e50:	movt	r0, #4
   11e54:	bl	11ef4 <__assert_fail@plt+0xa60>
   11e58:	tst	r0, #1
   11e5c:	beq	11ee4 <__assert_fail@plt+0xa50>
   11e60:	ldrb	r0, [fp, #-1]
   11e64:	tst	r0, #1
   11e68:	movw	r0, #0
   11e6c:	str	r0, [sp]
   11e70:	beq	11e88 <__assert_fail@plt+0x9f4>
   11e74:	ldr	r0, [sp, #8]
   11e78:	bl	11d1c <__assert_fail@plt+0x888>
   11e7c:	mvn	r1, #0
   11e80:	eor	r0, r0, r1
   11e84:	str	r0, [sp]
   11e88:	ldr	r0, [sp]
   11e8c:	and	r0, r0, #1
   11e90:	bl	1202c <__assert_fail@plt+0xb98>
   11e94:	str	r0, [sp, #4]
   11e98:	ldr	r0, [sp, #8]
   11e9c:	bl	11d1c <__assert_fail@plt+0x888>
   11ea0:	tst	r0, #1
   11ea4:	bne	11eb8 <__assert_fail@plt+0xa24>
   11ea8:	ldr	r0, [sp, #4]
   11eac:	bl	11d1c <__assert_fail@plt+0x888>
   11eb0:	tst	r0, #1
   11eb4:	beq	11ed8 <__assert_fail@plt+0xa44>
   11eb8:	ldr	r0, [sp, #8]
   11ebc:	bl	11f9c <__assert_fail@plt+0xb08>
   11ec0:	ldr	r0, [sp, #4]
   11ec4:	bl	11f9c <__assert_fail@plt+0xb08>
   11ec8:	movw	r0, #0
   11ecc:	bl	11fe8 <__assert_fail@plt+0xb54>
   11ed0:	str	r0, [sp, #8]
   11ed4:	b	11ee0 <__assert_fail@plt+0xa4c>
   11ed8:	ldr	r0, [sp, #4]
   11edc:	bl	11f9c <__assert_fail@plt+0xb08>
   11ee0:	b	11ef0 <__assert_fail@plt+0xa5c>
   11ee4:	ldr	r0, [sp, #8]
   11ee8:	mov	sp, fp
   11eec:	pop	{fp, pc}
   11ef0:	b	11e4c <__assert_fail@plt+0x9b8>
   11ef4:	push	{fp, lr}
   11ef8:	mov	fp, sp
   11efc:	sub	sp, sp, #16
   11f00:	str	r0, [sp, #8]
   11f04:	movw	r0, #24984	; 0x6198
   11f08:	movt	r0, #5
   11f0c:	ldr	r0, [r0]
   11f10:	ldr	r0, [r0]
   11f14:	movw	r1, #0
   11f18:	cmp	r0, r1
   11f1c:	bne	11f30 <__assert_fail@plt+0xa9c>
   11f20:	movw	r0, #0
   11f24:	and	r0, r0, #1
   11f28:	strb	r0, [fp, #-1]
   11f2c:	b	11f8c <__assert_fail@plt+0xaf8>
   11f30:	movw	r0, #24984	; 0x6198
   11f34:	movt	r0, #5
   11f38:	ldr	r1, [r0]
   11f3c:	ldr	r1, [r1]
   11f40:	ldr	r2, [sp, #8]
   11f44:	str	r0, [sp]
   11f48:	mov	r0, r1
   11f4c:	mov	r1, r2
   11f50:	bl	111d0 <strcmp@plt>
   11f54:	clz	r0, r0
   11f58:	lsr	r0, r0, #5
   11f5c:	strb	r0, [sp, #7]
   11f60:	ldrb	r0, [sp, #7]
   11f64:	and	r0, r0, #1
   11f68:	ldr	r1, [sp]
   11f6c:	ldr	r2, [r1]
   11f70:	add	r0, r2, r0, lsl #2
   11f74:	movw	r2, #24984	; 0x6198
   11f78:	movt	r2, #5
   11f7c:	str	r0, [r2]
   11f80:	ldrb	r0, [sp, #7]
   11f84:	and	r0, r0, #1
   11f88:	strb	r0, [fp, #-1]
   11f8c:	ldrb	r0, [fp, #-1]
   11f90:	and	r0, r0, #1
   11f94:	mov	sp, fp
   11f98:	pop	{fp, pc}
   11f9c:	push	{fp, lr}
   11fa0:	mov	fp, sp
   11fa4:	sub	sp, sp, #8
   11fa8:	str	r0, [sp, #4]
   11fac:	ldr	r0, [sp, #4]
   11fb0:	ldr	r0, [r0]
   11fb4:	cmp	r0, #1
   11fb8:	bne	11fcc <__assert_fail@plt+0xb38>
   11fbc:	ldr	r0, [sp, #4]
   11fc0:	ldr	r0, [r0, #4]
   11fc4:	bl	1388c <__assert_fail@plt+0x23f8>
   11fc8:	b	11fd8 <__assert_fail@plt+0xb44>
   11fcc:	ldr	r0, [sp, #4]
   11fd0:	add	r0, r0, #4
   11fd4:	bl	15f44 <__assert_fail@plt+0x4ab0>
   11fd8:	ldr	r0, [sp, #4]
   11fdc:	bl	1388c <__assert_fail@plt+0x23f8>
   11fe0:	mov	sp, fp
   11fe4:	pop	{fp, pc}
   11fe8:	push	{fp, lr}
   11fec:	mov	fp, sp
   11ff0:	sub	sp, sp, #8
   11ff4:	str	r0, [sp, #4]
   11ff8:	movw	r0, #16
   11ffc:	bl	3cae4 <__assert_fail@plt+0x2b650>
   12000:	str	r0, [sp]
   12004:	ldr	r0, [sp]
   12008:	movw	r1, #0
   1200c:	str	r1, [r0]
   12010:	ldr	r0, [sp]
   12014:	add	r0, r0, #4
   12018:	ldr	r1, [sp, #4]
   1201c:	bl	162d4 <__assert_fail@plt+0x4e40>
   12020:	ldr	r0, [sp]
   12024:	mov	sp, fp
   12028:	pop	{fp, pc}
   1202c:	push	{fp, lr}
   12030:	mov	fp, sp
   12034:	sub	sp, sp, #56	; 0x38
   12038:	and	r0, r0, #1
   1203c:	strb	r0, [fp, #-1]
   12040:	ldrb	r0, [fp, #-1]
   12044:	and	r0, r0, #1
   12048:	bl	123b8 <__assert_fail@plt+0xf24>
   1204c:	str	r0, [fp, #-8]
   12050:	movw	r0, #0
   12054:	strb	r0, [fp, #-17]	; 0xffffffef
   12058:	movw	r0, #16044	; 0x3eac
   1205c:	movt	r0, #4
   12060:	bl	11ef4 <__assert_fail@plt+0xa60>
   12064:	tst	r0, #1
   12068:	beq	12078 <__assert_fail@plt+0xbe4>
   1206c:	movw	r0, #0
   12070:	str	r0, [fp, #-16]
   12074:	b	1214c <__assert_fail@plt+0xcb8>
   12078:	movw	r0, #16046	; 0x3eae
   1207c:	movt	r0, #4
   12080:	bl	11ef4 <__assert_fail@plt+0xa60>
   12084:	tst	r0, #1
   12088:	beq	12098 <__assert_fail@plt+0xc04>
   1208c:	movw	r0, #1
   12090:	str	r0, [fp, #-16]
   12094:	b	12148 <__assert_fail@plt+0xcb4>
   12098:	movw	r0, #16053	; 0x3eb5
   1209c:	movt	r0, #4
   120a0:	bl	11ef4 <__assert_fail@plt+0xa60>
   120a4:	tst	r0, #1
   120a8:	bne	120c0 <__assert_fail@plt+0xc2c>
   120ac:	movw	r0, #16049	; 0x3eb1
   120b0:	movt	r0, #4
   120b4:	bl	11ef4 <__assert_fail@plt+0xa60>
   120b8:	tst	r0, #1
   120bc:	beq	120cc <__assert_fail@plt+0xc38>
   120c0:	movw	r0, #2
   120c4:	str	r0, [fp, #-16]
   120c8:	b	12144 <__assert_fail@plt+0xcb0>
   120cc:	movw	r0, #16052	; 0x3eb4
   120d0:	movt	r0, #4
   120d4:	bl	11ef4 <__assert_fail@plt+0xa60>
   120d8:	tst	r0, #1
   120dc:	beq	120ec <__assert_fail@plt+0xc58>
   120e0:	movw	r0, #3
   120e4:	str	r0, [fp, #-16]
   120e8:	b	12140 <__assert_fail@plt+0xcac>
   120ec:	movw	r0, #16055	; 0x3eb7
   120f0:	movt	r0, #4
   120f4:	bl	11ef4 <__assert_fail@plt+0xa60>
   120f8:	tst	r0, #1
   120fc:	beq	1210c <__assert_fail@plt+0xc78>
   12100:	movw	r0, #4
   12104:	str	r0, [fp, #-16]
   12108:	b	1213c <__assert_fail@plt+0xca8>
   1210c:	movw	r0, #16058	; 0x3eba
   12110:	movt	r0, #4
   12114:	bl	11ef4 <__assert_fail@plt+0xa60>
   12118:	tst	r0, #1
   1211c:	beq	1212c <__assert_fail@plt+0xc98>
   12120:	movw	r0, #5
   12124:	str	r0, [fp, #-16]
   12128:	b	12138 <__assert_fail@plt+0xca4>
   1212c:	ldr	r0, [fp, #-8]
   12130:	mov	sp, fp
   12134:	pop	{fp, pc}
   12138:	b	1213c <__assert_fail@plt+0xca8>
   1213c:	b	12140 <__assert_fail@plt+0xcac>
   12140:	b	12144 <__assert_fail@plt+0xcb0>
   12144:	b	12148 <__assert_fail@plt+0xcb4>
   12148:	b	1214c <__assert_fail@plt+0xcb8>
   1214c:	ldrb	r0, [fp, #-1]
   12150:	and	r0, r0, #1
   12154:	bl	123b8 <__assert_fail@plt+0xf24>
   12158:	str	r0, [fp, #-12]
   1215c:	ldrb	r0, [fp, #-1]
   12160:	tst	r0, #1
   12164:	beq	12394 <__assert_fail@plt+0xf00>
   12168:	ldr	r0, [fp, #-8]
   1216c:	bl	124f0 <__assert_fail@plt+0x105c>
   12170:	ldr	r0, [fp, #-12]
   12174:	bl	124f0 <__assert_fail@plt+0x105c>
   12178:	ldr	r0, [fp, #-8]
   1217c:	ldr	r0, [r0, #4]
   12180:	bl	12584 <__assert_fail@plt+0x10f0>
   12184:	tst	r0, #1
   12188:	beq	121bc <__assert_fail@plt+0xd28>
   1218c:	ldr	r0, [fp, #-12]
   12190:	ldr	r0, [r0, #4]
   12194:	bl	12584 <__assert_fail@plt+0x10f0>
   12198:	tst	r0, #1
   1219c:	beq	121bc <__assert_fail@plt+0xd28>
   121a0:	ldr	r0, [fp, #-8]
   121a4:	ldr	r0, [r0, #4]
   121a8:	ldr	r1, [fp, #-12]
   121ac:	ldr	r1, [r1, #4]
   121b0:	bl	3b7e0 <__assert_fail@plt+0x2a34c>
   121b4:	str	r0, [fp, #-24]	; 0xffffffe8
   121b8:	b	122ac <__assert_fail@plt+0xe18>
   121bc:	bl	113b0 <__errno_location@plt>
   121c0:	movw	r1, #0
   121c4:	str	r1, [r0]
   121c8:	ldr	r0, [fp, #-8]
   121cc:	ldr	r0, [r0, #4]
   121d0:	ldr	r1, [fp, #-12]
   121d4:	ldr	r1, [r1, #4]
   121d8:	bl	11314 <strcoll@plt>
   121dc:	str	r0, [fp, #-24]	; 0xffffffe8
   121e0:	bl	113b0 <__errno_location@plt>
   121e4:	ldr	r0, [r0]
   121e8:	cmp	r0, #0
   121ec:	beq	122a8 <__assert_fail@plt+0xe14>
   121f0:	bl	113b0 <__errno_location@plt>
   121f4:	ldr	r1, [r0]
   121f8:	movw	r0, #16060	; 0x3ebc
   121fc:	movt	r0, #4
   12200:	str	r1, [sp, #28]
   12204:	bl	11380 <gettext@plt>
   12208:	movw	r1, #0
   1220c:	str	r0, [sp, #24]
   12210:	mov	r0, r1
   12214:	ldr	r1, [sp, #28]
   12218:	ldr	r2, [sp, #24]
   1221c:	bl	11308 <error@plt>
   12220:	movw	r0, #16085	; 0x3ed5
   12224:	movt	r0, #4
   12228:	bl	11380 <gettext@plt>
   1222c:	movw	r1, #0
   12230:	str	r0, [sp, #20]
   12234:	mov	r0, r1
   12238:	ldr	r2, [sp, #20]
   1223c:	bl	11308 <error@plt>
   12240:	movw	r0, #16127	; 0x3eff
   12244:	movt	r0, #4
   12248:	bl	11380 <gettext@plt>
   1224c:	ldr	r1, [fp, #-8]
   12250:	ldr	r2, [r1, #4]
   12254:	movw	r1, #0
   12258:	str	r0, [sp, #16]
   1225c:	mov	r0, r1
   12260:	movw	r1, #8
   12264:	bl	23378 <__assert_fail@plt+0x11ee4>
   12268:	ldr	r1, [fp, #-12]
   1226c:	ldr	r2, [r1, #4]
   12270:	movw	r1, #1
   12274:	str	r0, [sp, #12]
   12278:	mov	r0, r1
   1227c:	movw	r1, #8
   12280:	bl	23378 <__assert_fail@plt+0x11ee4>
   12284:	movw	r1, #2
   12288:	str	r0, [sp, #8]
   1228c:	mov	r0, r1
   12290:	movw	r1, #0
   12294:	ldr	r2, [sp, #16]
   12298:	ldr	r3, [sp, #12]
   1229c:	ldr	ip, [sp, #8]
   122a0:	str	ip, [sp]
   122a4:	bl	11308 <error@plt>
   122a8:	b	122ac <__assert_fail@plt+0xe18>
   122ac:	ldr	r0, [fp, #-16]
   122b0:	cmp	r0, #5
   122b4:	str	r0, [sp, #4]
   122b8:	bhi	1238c <__assert_fail@plt+0xef8>
   122bc:	add	r0, pc, #8
   122c0:	ldr	r1, [sp, #4]
   122c4:	ldr	r0, [r0, r1, lsl #2]
   122c8:	mov	pc, r0
   122cc:	andeq	r2, r1, r4, ror #5
   122d0:	andeq	r2, r1, r0, lsl #6
   122d4:	andeq	r2, r1, ip, lsl r3
   122d8:	andeq	r2, r1, r8, lsr r3
   122dc:	andeq	r2, r1, r4, asr r3
   122e0:	andeq	r2, r1, r0, ror r3
   122e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122e8:	cmp	r0, #0
   122ec:	movw	r0, #0
   122f0:	movlt	r0, #1
   122f4:	and	r0, r0, #1
   122f8:	strb	r0, [fp, #-17]	; 0xffffffef
   122fc:	b	12390 <__assert_fail@plt+0xefc>
   12300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12304:	cmp	r0, #0
   12308:	movw	r0, #0
   1230c:	movle	r0, #1
   12310:	and	r0, r0, #1
   12314:	strb	r0, [fp, #-17]	; 0xffffffef
   12318:	b	12390 <__assert_fail@plt+0xefc>
   1231c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12320:	cmp	r0, #0
   12324:	movw	r0, #0
   12328:	moveq	r0, #1
   1232c:	and	r0, r0, #1
   12330:	strb	r0, [fp, #-17]	; 0xffffffef
   12334:	b	12390 <__assert_fail@plt+0xefc>
   12338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1233c:	cmp	r0, #0
   12340:	movw	r0, #0
   12344:	movne	r0, #1
   12348:	and	r0, r0, #1
   1234c:	strb	r0, [fp, #-17]	; 0xffffffef
   12350:	b	12390 <__assert_fail@plt+0xefc>
   12354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12358:	cmp	r0, #0
   1235c:	movw	r0, #0
   12360:	movge	r0, #1
   12364:	and	r0, r0, #1
   12368:	strb	r0, [fp, #-17]	; 0xffffffef
   1236c:	b	12390 <__assert_fail@plt+0xefc>
   12370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12374:	cmp	r0, #0
   12378:	movw	r0, #0
   1237c:	movgt	r0, #1
   12380:	and	r0, r0, #1
   12384:	strb	r0, [fp, #-17]	; 0xffffffef
   12388:	b	12390 <__assert_fail@plt+0xefc>
   1238c:	bl	1147c <abort@plt>
   12390:	b	12394 <__assert_fail@plt+0xf00>
   12394:	ldr	r0, [fp, #-8]
   12398:	bl	11f9c <__assert_fail@plt+0xb08>
   1239c:	ldr	r0, [fp, #-12]
   123a0:	bl	11f9c <__assert_fail@plt+0xb08>
   123a4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   123a8:	and	r0, r0, #1
   123ac:	bl	11fe8 <__assert_fail@plt+0xb54>
   123b0:	str	r0, [fp, #-8]
   123b4:	b	12050 <__assert_fail@plt+0xbbc>
   123b8:	push	{fp, lr}
   123bc:	mov	fp, sp
   123c0:	sub	sp, sp, #24
   123c4:	and	r0, r0, #1
   123c8:	strb	r0, [fp, #-1]
   123cc:	ldrb	r0, [fp, #-1]
   123d0:	and	r0, r0, #1
   123d4:	bl	1260c <__assert_fail@plt+0x1178>
   123d8:	str	r0, [fp, #-8]
   123dc:	movw	r0, #16163	; 0x3f23
   123e0:	movt	r0, #4
   123e4:	bl	11ef4 <__assert_fail@plt+0xa60>
   123e8:	tst	r0, #1
   123ec:	beq	123fc <__assert_fail@plt+0xf68>
   123f0:	movw	r0, #0
   123f4:	str	r0, [sp, #8]
   123f8:	b	1242c <__assert_fail@plt+0xf98>
   123fc:	movw	r0, #15674	; 0x3d3a
   12400:	movt	r0, #4
   12404:	bl	11ef4 <__assert_fail@plt+0xa60>
   12408:	tst	r0, #1
   1240c:	beq	1241c <__assert_fail@plt+0xf88>
   12410:	movw	r0, #1
   12414:	str	r0, [sp, #8]
   12418:	b	12428 <__assert_fail@plt+0xf94>
   1241c:	ldr	r0, [fp, #-8]
   12420:	mov	sp, fp
   12424:	pop	{fp, pc}
   12428:	b	1242c <__assert_fail@plt+0xf98>
   1242c:	ldrb	r0, [fp, #-1]
   12430:	and	r0, r0, #1
   12434:	bl	1260c <__assert_fail@plt+0x1178>
   12438:	str	r0, [sp, #12]
   1243c:	ldrb	r0, [fp, #-1]
   12440:	tst	r0, #1
   12444:	beq	124e4 <__assert_fail@plt+0x1050>
   12448:	ldr	r0, [fp, #-8]
   1244c:	bl	127d0 <__assert_fail@plt+0x133c>
   12450:	tst	r0, #1
   12454:	beq	12468 <__assert_fail@plt+0xfd4>
   12458:	ldr	r0, [sp, #12]
   1245c:	bl	127d0 <__assert_fail@plt+0x133c>
   12460:	tst	r0, #1
   12464:	bne	1248c <__assert_fail@plt+0xff8>
   12468:	movw	r0, #16165	; 0x3f25
   1246c:	movt	r0, #4
   12470:	bl	11380 <gettext@plt>
   12474:	movw	r1, #2
   12478:	str	r0, [sp, #4]
   1247c:	mov	r0, r1
   12480:	movw	r1, #0
   12484:	ldr	r2, [sp, #4]
   12488:	bl	11308 <error@plt>
   1248c:	ldr	r0, [sp, #8]
   12490:	cmp	r0, #0
   12494:	movw	r0, #0
   12498:	moveq	r0, #1
   1249c:	tst	r0, #1
   124a0:	movw	r0, #31584	; 0x7b60
   124a4:	movt	r0, #1
   124a8:	movw	r1, #30360	; 0x7698
   124ac:	movt	r1, #1
   124b0:	movne	r0, r1
   124b4:	ldr	r1, [fp, #-8]
   124b8:	add	r1, r1, #4
   124bc:	ldr	r2, [fp, #-8]
   124c0:	add	r2, r2, #4
   124c4:	ldr	r3, [sp, #12]
   124c8:	add	r3, r3, #4
   124cc:	str	r0, [sp]
   124d0:	mov	r0, r1
   124d4:	mov	r1, r2
   124d8:	mov	r2, r3
   124dc:	ldr	r3, [sp]
   124e0:	blx	r3
   124e4:	ldr	r0, [sp, #12]
   124e8:	bl	11f9c <__assert_fail@plt+0xb08>
   124ec:	b	123dc <__assert_fail@plt+0xf48>
   124f0:	push	{fp, lr}
   124f4:	mov	fp, sp
   124f8:	sub	sp, sp, #16
   124fc:	str	r0, [fp, #-4]
   12500:	ldr	r0, [fp, #-4]
   12504:	ldr	r0, [r0]
   12508:	cmp	r0, #0
   1250c:	str	r0, [sp, #4]
   12510:	beq	12528 <__assert_fail@plt+0x1094>
   12514:	b	12518 <__assert_fail@plt+0x1084>
   12518:	ldr	r0, [sp, #4]
   1251c:	cmp	r0, #1
   12520:	beq	12574 <__assert_fail@plt+0x10e0>
   12524:	b	12578 <__assert_fail@plt+0x10e4>
   12528:	ldr	r0, [fp, #-4]
   1252c:	add	r0, r0, #4
   12530:	movw	r1, #0
   12534:	str	r0, [sp]
   12538:	mov	r0, r1
   1253c:	movw	r1, #10
   12540:	ldr	r2, [sp]
   12544:	bl	1de64 <__assert_fail@plt+0xc9d0>
   12548:	str	r0, [sp, #8]
   1254c:	ldr	r0, [fp, #-4]
   12550:	add	r0, r0, #4
   12554:	bl	15f44 <__assert_fail@plt+0x4ab0>
   12558:	ldr	r0, [sp, #8]
   1255c:	ldr	r1, [fp, #-4]
   12560:	str	r0, [r1, #4]
   12564:	ldr	r0, [fp, #-4]
   12568:	movw	r1, #1
   1256c:	str	r1, [r0]
   12570:	b	1257c <__assert_fail@plt+0x10e8>
   12574:	b	1257c <__assert_fail@plt+0x10e8>
   12578:	bl	1147c <abort@plt>
   1257c:	mov	sp, fp
   12580:	pop	{fp, pc}
   12584:	sub	sp, sp, #8
   12588:	str	r0, [sp]
   1258c:	ldr	r0, [sp]
   12590:	ldrb	r0, [r0]
   12594:	cmp	r0, #45	; 0x2d
   12598:	movw	r0, #0
   1259c:	moveq	r0, #1
   125a0:	and	r0, r0, #1
   125a4:	ldr	r1, [sp]
   125a8:	add	r0, r1, r0
   125ac:	str	r0, [sp]
   125b0:	ldr	r0, [sp]
   125b4:	ldrb	r0, [r0]
   125b8:	sub	r0, r0, #48	; 0x30
   125bc:	cmp	r0, #9
   125c0:	bls	125d4 <__assert_fail@plt+0x1140>
   125c4:	movw	r0, #0
   125c8:	and	r0, r0, #1
   125cc:	strb	r0, [sp, #7]
   125d0:	b	125fc <__assert_fail@plt+0x1168>
   125d4:	b	125d8 <__assert_fail@plt+0x1144>
   125d8:	ldr	r0, [sp]
   125dc:	add	r1, r0, #1
   125e0:	str	r1, [sp]
   125e4:	ldrsb	r0, [r0, #1]
   125e8:	cmp	r0, #0
   125ec:	bne	125b0 <__assert_fail@plt+0x111c>
   125f0:	movw	r0, #1
   125f4:	and	r0, r0, #1
   125f8:	strb	r0, [sp, #7]
   125fc:	ldrb	r0, [sp, #7]
   12600:	and	r0, r0, #1
   12604:	add	sp, sp, #8
   12608:	bx	lr
   1260c:	push	{fp, lr}
   12610:	mov	fp, sp
   12614:	sub	sp, sp, #32
   12618:	and	r0, r0, #1
   1261c:	strb	r0, [fp, #-1]
   12620:	ldrb	r0, [fp, #-1]
   12624:	and	r0, r0, #1
   12628:	bl	128b0 <__assert_fail@plt+0x141c>
   1262c:	str	r0, [fp, #-8]
   12630:	movw	r0, #16186	; 0x3f3a
   12634:	movt	r0, #4
   12638:	bl	11ef4 <__assert_fail@plt+0xa60>
   1263c:	tst	r0, #1
   12640:	beq	12650 <__assert_fail@plt+0x11bc>
   12644:	movw	r0, #0
   12648:	str	r0, [sp, #16]
   1264c:	b	126a4 <__assert_fail@plt+0x1210>
   12650:	movw	r0, #23138	; 0x5a62
   12654:	movt	r0, #4
   12658:	bl	11ef4 <__assert_fail@plt+0xa60>
   1265c:	tst	r0, #1
   12660:	beq	12670 <__assert_fail@plt+0x11dc>
   12664:	movw	r0, #1
   12668:	str	r0, [sp, #16]
   1266c:	b	126a0 <__assert_fail@plt+0x120c>
   12670:	movw	r0, #16188	; 0x3f3c
   12674:	movt	r0, #4
   12678:	bl	11ef4 <__assert_fail@plt+0xa60>
   1267c:	tst	r0, #1
   12680:	beq	12690 <__assert_fail@plt+0x11fc>
   12684:	movw	r0, #2
   12688:	str	r0, [sp, #16]
   1268c:	b	1269c <__assert_fail@plt+0x1208>
   12690:	ldr	r0, [fp, #-8]
   12694:	mov	sp, fp
   12698:	pop	{fp, pc}
   1269c:	b	126a0 <__assert_fail@plt+0x120c>
   126a0:	b	126a4 <__assert_fail@plt+0x1210>
   126a4:	ldrb	r0, [fp, #-1]
   126a8:	and	r0, r0, #1
   126ac:	bl	128b0 <__assert_fail@plt+0x141c>
   126b0:	str	r0, [fp, #-12]
   126b4:	ldrb	r0, [fp, #-1]
   126b8:	tst	r0, #1
   126bc:	beq	127c4 <__assert_fail@plt+0x1330>
   126c0:	ldr	r0, [fp, #-8]
   126c4:	bl	127d0 <__assert_fail@plt+0x133c>
   126c8:	tst	r0, #1
   126cc:	beq	126e0 <__assert_fail@plt+0x124c>
   126d0:	ldr	r0, [fp, #-12]
   126d4:	bl	127d0 <__assert_fail@plt+0x133c>
   126d8:	tst	r0, #1
   126dc:	bne	12704 <__assert_fail@plt+0x1270>
   126e0:	movw	r0, #16165	; 0x3f25
   126e4:	movt	r0, #4
   126e8:	bl	11380 <gettext@plt>
   126ec:	movw	r1, #2
   126f0:	str	r0, [sp, #12]
   126f4:	mov	r0, r1
   126f8:	movw	r1, #0
   126fc:	ldr	r2, [sp, #12]
   12700:	bl	11308 <error@plt>
   12704:	ldr	r0, [sp, #16]
   12708:	cmp	r0, #0
   1270c:	beq	12748 <__assert_fail@plt+0x12b4>
   12710:	ldr	r0, [fp, #-12]
   12714:	add	r0, r0, #4
   12718:	bl	17284 <__assert_fail@plt+0x5df0>
   1271c:	cmp	r0, #0
   12720:	bne	12748 <__assert_fail@plt+0x12b4>
   12724:	movw	r0, #16190	; 0x3f3e
   12728:	movt	r0, #4
   1272c:	bl	11380 <gettext@plt>
   12730:	movw	r1, #2
   12734:	str	r0, [sp, #8]
   12738:	mov	r0, r1
   1273c:	movw	r1, #0
   12740:	ldr	r2, [sp, #8]
   12744:	bl	11308 <error@plt>
   12748:	ldr	r0, [sp, #16]
   1274c:	cmp	r0, #0
   12750:	bne	12764 <__assert_fail@plt+0x12d0>
   12754:	movw	r0, #31924	; 0x7cb4
   12758:	movt	r0, #1
   1275c:	str	r0, [sp, #4]
   12760:	b	12790 <__assert_fail@plt+0x12fc>
   12764:	ldr	r0, [sp, #16]
   12768:	cmp	r0, #1
   1276c:	movw	r0, #0
   12770:	moveq	r0, #1
   12774:	tst	r0, #1
   12778:	movw	r0, #34880	; 0x8840
   1277c:	movt	r0, #1
   12780:	movw	r1, #34696	; 0x8788
   12784:	movt	r1, #1
   12788:	movne	r0, r1
   1278c:	str	r0, [sp, #4]
   12790:	ldr	r0, [sp, #4]
   12794:	ldr	r1, [fp, #-8]
   12798:	add	r1, r1, #4
   1279c:	ldr	r2, [fp, #-8]
   127a0:	add	r2, r2, #4
   127a4:	ldr	r3, [fp, #-12]
   127a8:	add	r3, r3, #4
   127ac:	str	r0, [sp]
   127b0:	mov	r0, r1
   127b4:	mov	r1, r2
   127b8:	mov	r2, r3
   127bc:	ldr	r3, [sp]
   127c0:	blx	r3
   127c4:	ldr	r0, [fp, #-12]
   127c8:	bl	11f9c <__assert_fail@plt+0xb08>
   127cc:	b	12630 <__assert_fail@plt+0x119c>
   127d0:	push	{fp, lr}
   127d4:	mov	fp, sp
   127d8:	sub	sp, sp, #16
   127dc:	str	r0, [sp, #8]
   127e0:	ldr	r0, [sp, #8]
   127e4:	ldr	r0, [r0]
   127e8:	cmp	r0, #0
   127ec:	str	r0, [sp]
   127f0:	beq	12808 <__assert_fail@plt+0x1374>
   127f4:	b	127f8 <__assert_fail@plt+0x1364>
   127f8:	ldr	r0, [sp]
   127fc:	cmp	r0, #1
   12800:	beq	12818 <__assert_fail@plt+0x1384>
   12804:	b	1289c <__assert_fail@plt+0x1408>
   12808:	movw	r0, #1
   1280c:	and	r0, r0, #1
   12810:	strb	r0, [fp, #-1]
   12814:	b	128a0 <__assert_fail@plt+0x140c>
   12818:	ldr	r0, [sp, #8]
   1281c:	ldr	r0, [r0, #4]
   12820:	str	r0, [sp, #4]
   12824:	ldr	r0, [sp, #4]
   12828:	bl	12584 <__assert_fail@plt+0x10f0>
   1282c:	tst	r0, #1
   12830:	bne	12844 <__assert_fail@plt+0x13b0>
   12834:	movw	r0, #0
   12838:	and	r0, r0, #1
   1283c:	strb	r0, [fp, #-1]
   12840:	b	128a0 <__assert_fail@plt+0x140c>
   12844:	ldr	r0, [sp, #8]
   12848:	add	r0, r0, #4
   1284c:	ldr	r1, [sp, #4]
   12850:	movw	r2, #10
   12854:	bl	1e778 <__assert_fail@plt+0xd2e4>
   12858:	cmp	r0, #0
   1285c:	beq	12878 <__assert_fail@plt+0x13e4>
   12860:	ldr	r3, [sp, #4]
   12864:	movw	r0, #3
   12868:	movw	r1, #34	; 0x22
   1286c:	movw	r2, #16496	; 0x4070
   12870:	movt	r2, #4
   12874:	bl	11308 <error@plt>
   12878:	ldr	r0, [sp, #4]
   1287c:	bl	1388c <__assert_fail@plt+0x23f8>
   12880:	ldr	r0, [sp, #8]
   12884:	movw	r1, #0
   12888:	str	r1, [r0]
   1288c:	movw	r0, #1
   12890:	and	r0, r0, #1
   12894:	strb	r0, [fp, #-1]
   12898:	b	128a0 <__assert_fail@plt+0x140c>
   1289c:	bl	1147c <abort@plt>
   128a0:	ldrb	r0, [fp, #-1]
   128a4:	and	r0, r0, #1
   128a8:	mov	sp, fp
   128ac:	pop	{fp, pc}
   128b0:	push	{fp, lr}
   128b4:	mov	fp, sp
   128b8:	sub	sp, sp, #16
   128bc:	and	r0, r0, #1
   128c0:	strb	r0, [fp, #-1]
   128c4:	ldrb	r0, [fp, #-1]
   128c8:	and	r0, r0, #1
   128cc:	bl	12940 <__assert_fail@plt+0x14ac>
   128d0:	str	r0, [sp, #8]
   128d4:	movw	r0, #16207	; 0x3f4f
   128d8:	movt	r0, #4
   128dc:	bl	11ef4 <__assert_fail@plt+0xa60>
   128e0:	tst	r0, #1
   128e4:	beq	12930 <__assert_fail@plt+0x149c>
   128e8:	ldrb	r0, [fp, #-1]
   128ec:	and	r0, r0, #1
   128f0:	bl	12940 <__assert_fail@plt+0x14ac>
   128f4:	str	r0, [sp, #4]
   128f8:	ldrb	r0, [fp, #-1]
   128fc:	tst	r0, #1
   12900:	beq	12924 <__assert_fail@plt+0x1490>
   12904:	ldr	r0, [sp, #8]
   12908:	ldr	r1, [sp, #4]
   1290c:	bl	12bec <__assert_fail@plt+0x1758>
   12910:	str	r0, [sp]
   12914:	ldr	r0, [sp, #8]
   12918:	bl	11f9c <__assert_fail@plt+0xb08>
   1291c:	ldr	r0, [sp]
   12920:	str	r0, [sp, #8]
   12924:	ldr	r0, [sp, #4]
   12928:	bl	11f9c <__assert_fail@plt+0xb08>
   1292c:	b	1293c <__assert_fail@plt+0x14a8>
   12930:	ldr	r0, [sp, #8]
   12934:	mov	sp, fp
   12938:	pop	{fp, pc}
   1293c:	b	128d4 <__assert_fail@plt+0x1440>
   12940:	push	{fp, lr}
   12944:	mov	fp, sp
   12948:	sub	sp, sp, #48	; 0x30
   1294c:	and	r0, r0, #1
   12950:	strb	r0, [fp, #-5]
   12954:	movw	r0, #16163	; 0x3f23
   12958:	movt	r0, #4
   1295c:	bl	11ef4 <__assert_fail@plt+0xa60>
   12960:	tst	r0, #1
   12964:	beq	12990 <__assert_fail@plt+0x14fc>
   12968:	bl	12e84 <__assert_fail@plt+0x19f0>
   1296c:	movw	r0, #24984	; 0x6198
   12970:	movt	r0, #5
   12974:	ldr	r1, [r0]
   12978:	add	r2, r1, #4
   1297c:	str	r2, [r0]
   12980:	ldr	r0, [r1]
   12984:	bl	12ef8 <__assert_fail@plt+0x1a64>
   12988:	str	r0, [fp, #-4]
   1298c:	b	12be0 <__assert_fail@plt+0x174c>
   12990:	movw	r0, #16209	; 0x3f51
   12994:	movt	r0, #4
   12998:	bl	11ef4 <__assert_fail@plt+0xa60>
   1299c:	tst	r0, #1
   129a0:	beq	129e4 <__assert_fail@plt+0x1550>
   129a4:	ldrb	r0, [fp, #-5]
   129a8:	and	r0, r0, #1
   129ac:	bl	12940 <__assert_fail@plt+0x14ac>
   129b0:	str	r0, [fp, #-16]
   129b4:	ldr	r0, [fp, #-16]
   129b8:	bl	124f0 <__assert_fail@plt+0x105c>
   129bc:	ldr	r0, [fp, #-16]
   129c0:	ldr	r0, [r0, #4]
   129c4:	bl	20d7c <__assert_fail@plt+0xf8e8>
   129c8:	bl	11fe8 <__assert_fail@plt+0xb54>
   129cc:	str	r0, [fp, #-20]	; 0xffffffec
   129d0:	ldr	r0, [fp, #-16]
   129d4:	bl	11f9c <__assert_fail@plt+0xb08>
   129d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   129dc:	str	r0, [fp, #-4]
   129e0:	b	12be0 <__assert_fail@plt+0x174c>
   129e4:	movw	r0, #16216	; 0x3f58
   129e8:	movt	r0, #4
   129ec:	bl	11ef4 <__assert_fail@plt+0xa60>
   129f0:	tst	r0, #1
   129f4:	beq	12a5c <__assert_fail@plt+0x15c8>
   129f8:	ldrb	r0, [fp, #-5]
   129fc:	and	r0, r0, #1
   12a00:	bl	12940 <__assert_fail@plt+0x14ac>
   12a04:	str	r0, [fp, #-12]
   12a08:	ldrb	r0, [fp, #-5]
   12a0c:	and	r0, r0, #1
   12a10:	bl	12940 <__assert_fail@plt+0x14ac>
   12a14:	str	r0, [fp, #-16]
   12a18:	ldrb	r0, [fp, #-5]
   12a1c:	tst	r0, #1
   12a20:	beq	12a40 <__assert_fail@plt+0x15ac>
   12a24:	ldr	r0, [fp, #-12]
   12a28:	ldr	r1, [fp, #-16]
   12a2c:	bl	12bec <__assert_fail@plt+0x1758>
   12a30:	str	r0, [fp, #-20]	; 0xffffffec
   12a34:	ldr	r0, [fp, #-12]
   12a38:	bl	11f9c <__assert_fail@plt+0xb08>
   12a3c:	b	12a48 <__assert_fail@plt+0x15b4>
   12a40:	ldr	r0, [fp, #-12]
   12a44:	str	r0, [fp, #-20]	; 0xffffffec
   12a48:	ldr	r0, [fp, #-16]
   12a4c:	bl	11f9c <__assert_fail@plt+0xb08>
   12a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a54:	str	r0, [fp, #-4]
   12a58:	b	12be0 <__assert_fail@plt+0x174c>
   12a5c:	movw	r0, #16222	; 0x3f5e
   12a60:	movt	r0, #4
   12a64:	bl	11ef4 <__assert_fail@plt+0xa60>
   12a68:	tst	r0, #1
   12a6c:	beq	12ae0 <__assert_fail@plt+0x164c>
   12a70:	ldrb	r0, [fp, #-5]
   12a74:	and	r0, r0, #1
   12a78:	bl	12940 <__assert_fail@plt+0x14ac>
   12a7c:	str	r0, [fp, #-12]
   12a80:	ldrb	r0, [fp, #-5]
   12a84:	and	r0, r0, #1
   12a88:	bl	12940 <__assert_fail@plt+0x14ac>
   12a8c:	str	r0, [fp, #-16]
   12a90:	ldr	r0, [fp, #-12]
   12a94:	bl	124f0 <__assert_fail@plt+0x105c>
   12a98:	ldr	r0, [fp, #-16]
   12a9c:	bl	124f0 <__assert_fail@plt+0x105c>
   12aa0:	ldr	r0, [fp, #-12]
   12aa4:	ldr	r0, [r0, #4]
   12aa8:	ldr	r1, [fp, #-16]
   12aac:	ldr	r1, [r1, #4]
   12ab0:	bl	12f3c <__assert_fail@plt+0x1aa8>
   12ab4:	str	r0, [sp, #16]
   12ab8:	ldr	r0, [sp, #16]
   12abc:	bl	11fe8 <__assert_fail@plt+0xb54>
   12ac0:	str	r0, [fp, #-20]	; 0xffffffec
   12ac4:	ldr	r0, [fp, #-12]
   12ac8:	bl	11f9c <__assert_fail@plt+0xb08>
   12acc:	ldr	r0, [fp, #-16]
   12ad0:	bl	11f9c <__assert_fail@plt+0xb08>
   12ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ad8:	str	r0, [fp, #-4]
   12adc:	b	12be0 <__assert_fail@plt+0x174c>
   12ae0:	movw	r0, #16228	; 0x3f64
   12ae4:	movt	r0, #4
   12ae8:	bl	11ef4 <__assert_fail@plt+0xa60>
   12aec:	tst	r0, #1
   12af0:	beq	12bd0 <__assert_fail@plt+0x173c>
   12af4:	ldrb	r0, [fp, #-5]
   12af8:	and	r0, r0, #1
   12afc:	bl	12940 <__assert_fail@plt+0x14ac>
   12b00:	str	r0, [fp, #-12]
   12b04:	ldrb	r0, [fp, #-5]
   12b08:	and	r0, r0, #1
   12b0c:	bl	12940 <__assert_fail@plt+0x14ac>
   12b10:	str	r0, [sp, #24]
   12b14:	ldrb	r0, [fp, #-5]
   12b18:	and	r0, r0, #1
   12b1c:	bl	12940 <__assert_fail@plt+0x14ac>
   12b20:	str	r0, [sp, #20]
   12b24:	ldr	r0, [fp, #-12]
   12b28:	bl	124f0 <__assert_fail@plt+0x105c>
   12b2c:	ldr	r0, [sp, #24]
   12b30:	bl	127d0 <__assert_fail@plt+0x133c>
   12b34:	tst	r0, #1
   12b38:	beq	12b4c <__assert_fail@plt+0x16b8>
   12b3c:	ldr	r0, [sp, #20]
   12b40:	bl	127d0 <__assert_fail@plt+0x133c>
   12b44:	tst	r0, #1
   12b48:	bne	12b60 <__assert_fail@plt+0x16cc>
   12b4c:	movw	r0, #16039	; 0x3ea7
   12b50:	movt	r0, #4
   12b54:	bl	12ef8 <__assert_fail@plt+0x1a64>
   12b58:	str	r0, [fp, #-20]	; 0xffffffec
   12b5c:	b	12bac <__assert_fail@plt+0x1718>
   12b60:	ldr	r0, [sp, #24]
   12b64:	add	r0, r0, #4
   12b68:	bl	131c4 <__assert_fail@plt+0x1d30>
   12b6c:	str	r0, [sp, #12]
   12b70:	ldr	r0, [sp, #20]
   12b74:	add	r0, r0, #4
   12b78:	bl	131c4 <__assert_fail@plt+0x1d30>
   12b7c:	str	r0, [sp, #8]
   12b80:	ldr	r0, [fp, #-12]
   12b84:	ldr	r0, [r0, #4]
   12b88:	ldr	r1, [sp, #12]
   12b8c:	ldr	r2, [sp, #8]
   12b90:	bl	1323c <__assert_fail@plt+0x1da8>
   12b94:	str	r0, [sp, #4]
   12b98:	ldr	r0, [sp, #4]
   12b9c:	bl	12ef8 <__assert_fail@plt+0x1a64>
   12ba0:	str	r0, [fp, #-20]	; 0xffffffec
   12ba4:	ldr	r0, [sp, #4]
   12ba8:	bl	1388c <__assert_fail@plt+0x23f8>
   12bac:	ldr	r0, [fp, #-12]
   12bb0:	bl	11f9c <__assert_fail@plt+0xb08>
   12bb4:	ldr	r0, [sp, #24]
   12bb8:	bl	11f9c <__assert_fail@plt+0xb08>
   12bbc:	ldr	r0, [sp, #20]
   12bc0:	bl	11f9c <__assert_fail@plt+0xb08>
   12bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bc8:	str	r0, [fp, #-4]
   12bcc:	b	12be0 <__assert_fail@plt+0x174c>
   12bd0:	ldrb	r0, [fp, #-5]
   12bd4:	and	r0, r0, #1
   12bd8:	bl	134c8 <__assert_fail@plt+0x2034>
   12bdc:	str	r0, [fp, #-4]
   12be0:	ldr	r0, [fp, #-4]
   12be4:	mov	sp, fp
   12be8:	pop	{fp, pc}
   12bec:	push	{r4, r5, fp, lr}
   12bf0:	add	fp, sp, #8
   12bf4:	sub	sp, sp, #360	; 0x168
   12bf8:	str	r0, [fp, #-12]
   12bfc:	str	r1, [fp, #-16]
   12c00:	ldr	r0, [fp, #-12]
   12c04:	bl	124f0 <__assert_fail@plt+0x105c>
   12c08:	ldr	r0, [fp, #-16]
   12c0c:	bl	124f0 <__assert_fail@plt+0x105c>
   12c10:	add	r0, sp, #56	; 0x38
   12c14:	movw	r1, #0
   12c18:	str	r1, [sp, #44]	; 0x2c
   12c1c:	str	r1, [sp, #48]	; 0x30
   12c20:	str	r1, [sp, #52]	; 0x34
   12c24:	str	r1, [fp, #-56]	; 0xffffffc8
   12c28:	str	r1, [fp, #-52]	; 0xffffffcc
   12c2c:	str	r0, [fp, #-40]	; 0xffffffd8
   12c30:	str	r1, [fp, #-36]	; 0xffffffdc
   12c34:	movw	r0, #25304	; 0x62d8
   12c38:	movt	r0, #5
   12c3c:	movw	r1, #710	; 0x2c6
   12c40:	str	r1, [r0]
   12c44:	ldr	r0, [fp, #-16]
   12c48:	ldr	r0, [r0, #4]
   12c4c:	ldr	r1, [fp, #-16]
   12c50:	ldr	r1, [r1, #4]
   12c54:	str	r0, [sp, #32]
   12c58:	mov	r0, r1
   12c5c:	bl	1138c <strlen@plt>
   12c60:	ldr	r1, [sp, #32]
   12c64:	str	r0, [sp, #28]
   12c68:	mov	r0, r1
   12c6c:	ldr	r1, [sp, #28]
   12c70:	sub	r2, fp, #56	; 0x38
   12c74:	bl	2391c <__assert_fail@plt+0x12488>
   12c78:	str	r0, [fp, #-24]	; 0xffffffe8
   12c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c80:	movw	r1, #0
   12c84:	cmp	r0, r1
   12c88:	beq	12ca4 <__assert_fail@plt+0x1810>
   12c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c90:	movw	r0, #2
   12c94:	movw	r1, #0
   12c98:	movw	r2, #16496	; 0x4070
   12c9c:	movt	r2, #4
   12ca0:	bl	11308 <error@plt>
   12ca4:	ldrb	r0, [fp, #-28]	; 0xffffffe4
   12ca8:	and	r0, r0, #127	; 0x7f
   12cac:	strb	r0, [fp, #-28]	; 0xffffffe4
   12cb0:	ldr	r0, [fp, #-12]
   12cb4:	ldr	r1, [r0, #4]
   12cb8:	ldr	r0, [fp, #-12]
   12cbc:	ldr	r0, [r0, #4]
   12cc0:	str	r1, [sp, #24]
   12cc4:	bl	1138c <strlen@plt>
   12cc8:	sub	r1, fp, #56	; 0x38
   12ccc:	str	r0, [sp, #20]
   12cd0:	mov	r0, r1
   12cd4:	ldr	r1, [sp, #24]
   12cd8:	ldr	r2, [sp, #20]
   12cdc:	movw	r3, #0
   12ce0:	add	ip, sp, #44	; 0x2c
   12ce4:	str	ip, [sp]
   12ce8:	bl	25d28 <__assert_fail@plt+0x14894>
   12cec:	str	r0, [sp, #40]	; 0x28
   12cf0:	ldr	r0, [sp, #40]	; 0x28
   12cf4:	movw	r1, #0
   12cf8:	cmp	r1, r0
   12cfc:	bgt	12db0 <__assert_fail@plt+0x191c>
   12d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d04:	cmp	r0, #0
   12d08:	bls	12d6c <__assert_fail@plt+0x18d8>
   12d0c:	ldr	r0, [sp, #52]	; 0x34
   12d10:	ldr	r0, [r0, #4]
   12d14:	cmp	r0, #0
   12d18:	bge	12d30 <__assert_fail@plt+0x189c>
   12d1c:	movw	r0, #16039	; 0x3ea7
   12d20:	movt	r0, #4
   12d24:	bl	12ef8 <__assert_fail@plt+0x1a64>
   12d28:	str	r0, [fp, #-20]	; 0xffffffec
   12d2c:	b	12d68 <__assert_fail@plt+0x18d4>
   12d30:	ldr	r0, [fp, #-12]
   12d34:	ldr	r0, [r0, #4]
   12d38:	ldr	r1, [sp, #52]	; 0x34
   12d3c:	ldr	r1, [r1, #4]
   12d40:	add	r0, r0, r1
   12d44:	movw	r1, #0
   12d48:	strb	r1, [r0]
   12d4c:	ldr	r0, [fp, #-12]
   12d50:	ldr	r0, [r0, #4]
   12d54:	ldr	r1, [sp, #48]	; 0x30
   12d58:	ldr	r1, [r1, #4]
   12d5c:	add	r0, r0, r1
   12d60:	bl	12ef8 <__assert_fail@plt+0x1a64>
   12d64:	str	r0, [fp, #-20]	; 0xffffffec
   12d68:	b	12dac <__assert_fail@plt+0x1918>
   12d6c:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   12d70:	cmp	r0, #1
   12d74:	bne	12d84 <__assert_fail@plt+0x18f0>
   12d78:	ldr	r0, [sp, #40]	; 0x28
   12d7c:	str	r0, [sp, #16]
   12d80:	b	12d98 <__assert_fail@plt+0x1904>
   12d84:	ldr	r0, [fp, #-12]
   12d88:	ldr	r0, [r0, #4]
   12d8c:	ldr	r1, [sp, #40]	; 0x28
   12d90:	bl	13634 <__assert_fail@plt+0x21a0>
   12d94:	str	r0, [sp, #16]
   12d98:	ldr	r0, [sp, #16]
   12d9c:	str	r0, [sp, #36]	; 0x24
   12da0:	ldr	r0, [sp, #36]	; 0x24
   12da4:	bl	11fe8 <__assert_fail@plt+0xb54>
   12da8:	str	r0, [fp, #-20]	; 0xffffffec
   12dac:	b	12e48 <__assert_fail@plt+0x19b4>
   12db0:	ldr	r0, [sp, #40]	; 0x28
   12db4:	cmn	r0, #1
   12db8:	bne	12dec <__assert_fail@plt+0x1958>
   12dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dc0:	cmp	r0, #0
   12dc4:	bls	12ddc <__assert_fail@plt+0x1948>
   12dc8:	movw	r0, #16039	; 0x3ea7
   12dcc:	movt	r0, #4
   12dd0:	bl	12ef8 <__assert_fail@plt+0x1a64>
   12dd4:	str	r0, [fp, #-20]	; 0xffffffec
   12dd8:	b	12de8 <__assert_fail@plt+0x1954>
   12ddc:	movw	r0, #0
   12de0:	bl	11fe8 <__assert_fail@plt+0xb54>
   12de4:	str	r0, [fp, #-20]	; 0xffffffec
   12de8:	b	12e44 <__assert_fail@plt+0x19b0>
   12dec:	ldr	r0, [sp, #40]	; 0x28
   12df0:	cmn	r0, #2
   12df4:	bne	12e08 <__assert_fail@plt+0x1974>
   12df8:	bl	113b0 <__errno_location@plt>
   12dfc:	ldr	r0, [r0]
   12e00:	str	r0, [sp, #12]
   12e04:	b	12e14 <__assert_fail@plt+0x1980>
   12e08:	movw	r0, #75	; 0x4b
   12e0c:	str	r0, [sp, #12]
   12e10:	b	12e14 <__assert_fail@plt+0x1980>
   12e14:	ldr	r0, [sp, #12]
   12e18:	movw	r1, #16385	; 0x4001
   12e1c:	movt	r1, #4
   12e20:	str	r0, [sp, #8]
   12e24:	mov	r0, r1
   12e28:	bl	11380 <gettext@plt>
   12e2c:	movw	r1, #3
   12e30:	str	r0, [sp, #4]
   12e34:	mov	r0, r1
   12e38:	ldr	r1, [sp, #8]
   12e3c:	ldr	r2, [sp, #4]
   12e40:	bl	11308 <error@plt>
   12e44:	b	12e48 <__assert_fail@plt+0x19b4>
   12e48:	ldr	r0, [sp, #44]	; 0x2c
   12e4c:	movw	r1, #0
   12e50:	cmp	r1, r0
   12e54:	bcs	12e68 <__assert_fail@plt+0x19d4>
   12e58:	ldr	r0, [sp, #48]	; 0x30
   12e5c:	bl	1388c <__assert_fail@plt+0x23f8>
   12e60:	ldr	r0, [sp, #52]	; 0x34
   12e64:	bl	1388c <__assert_fail@plt+0x23f8>
   12e68:	movw	r0, #0
   12e6c:	str	r0, [fp, #-40]	; 0xffffffd8
   12e70:	sub	r0, fp, #56	; 0x38
   12e74:	bl	24924 <__assert_fail@plt+0x13490>
   12e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e7c:	sub	sp, fp, #8
   12e80:	pop	{r4, r5, fp, pc}
   12e84:	push	{fp, lr}
   12e88:	mov	fp, sp
   12e8c:	sub	sp, sp, #8
   12e90:	bl	11c64 <__assert_fail@plt+0x7d0>
   12e94:	tst	r0, #1
   12e98:	beq	12ef0 <__assert_fail@plt+0x1a5c>
   12e9c:	movw	r0, #16235	; 0x3f6b
   12ea0:	movt	r0, #4
   12ea4:	bl	11380 <gettext@plt>
   12ea8:	movw	r1, #24984	; 0x6198
   12eac:	movt	r1, #5
   12eb0:	ldr	r1, [r1]
   12eb4:	mvn	r2, #3
   12eb8:	add	r1, r1, r2
   12ebc:	ldr	r2, [r1]
   12ec0:	movw	r1, #0
   12ec4:	str	r0, [sp, #4]
   12ec8:	mov	r0, r1
   12ecc:	movw	r1, #8
   12ed0:	bl	23378 <__assert_fail@plt+0x11ee4>
   12ed4:	movw	r1, #2
   12ed8:	str	r0, [sp]
   12edc:	mov	r0, r1
   12ee0:	movw	r1, #0
   12ee4:	ldr	r2, [sp, #4]
   12ee8:	ldr	r3, [sp]
   12eec:	bl	11308 <error@plt>
   12ef0:	mov	sp, fp
   12ef4:	pop	{fp, pc}
   12ef8:	push	{fp, lr}
   12efc:	mov	fp, sp
   12f00:	sub	sp, sp, #8
   12f04:	str	r0, [sp, #4]
   12f08:	movw	r0, #16
   12f0c:	bl	3cae4 <__assert_fail@plt+0x2b650>
   12f10:	str	r0, [sp]
   12f14:	ldr	r0, [sp]
   12f18:	movw	r1, #1
   12f1c:	str	r1, [r0]
   12f20:	ldr	r0, [sp, #4]
   12f24:	bl	3f7e4 <__assert_fail@plt+0x2e350>
   12f28:	ldr	r1, [sp]
   12f2c:	str	r0, [r1, #4]
   12f30:	ldr	r0, [sp]
   12f34:	mov	sp, fp
   12f38:	pop	{fp, pc}
   12f3c:	push	{fp, lr}
   12f40:	mov	fp, sp
   12f44:	sub	sp, sp, #152	; 0x98
   12f48:	str	r0, [fp, #-8]
   12f4c:	str	r1, [fp, #-12]
   12f50:	movw	r0, #0
   12f54:	str	r0, [fp, #-16]
   12f58:	ldr	r0, [fp, #-12]
   12f5c:	ldrb	r0, [r0]
   12f60:	cmp	r0, #0
   12f64:	bne	12f74 <__assert_fail@plt+0x1ae0>
   12f68:	movw	r0, #0
   12f6c:	str	r0, [fp, #-4]
   12f70:	b	131b8 <__assert_fail@plt+0x1d24>
   12f74:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   12f78:	cmp	r0, #1
   12f7c:	bls	1316c <__assert_fail@plt+0x1cd8>
   12f80:	ldr	r0, [fp, #-8]
   12f84:	str	r0, [fp, #-56]	; 0xffffffc8
   12f88:	movw	r0, #0
   12f8c:	strb	r0, [fp, #-72]	; 0xffffffb8
   12f90:	sub	r1, fp, #72	; 0x48
   12f94:	add	r1, r1, #4
   12f98:	str	r0, [sp, #16]
   12f9c:	mov	r0, r1
   12fa0:	ldr	r1, [sp, #16]
   12fa4:	and	r1, r1, #255	; 0xff
   12fa8:	movw	r2, #8
   12fac:	bl	113d4 <memset@plt>
   12fb0:	ldr	r0, [sp, #16]
   12fb4:	strb	r0, [fp, #-60]	; 0xffffffc4
   12fb8:	sub	r0, fp, #72	; 0x48
   12fbc:	bl	20e68 <__assert_fail@plt+0xf9d4>
   12fc0:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   12fc4:	tst	r0, #1
   12fc8:	movw	r0, #0
   12fcc:	str	r0, [sp, #12]
   12fd0:	beq	12fe8 <__assert_fail@plt+0x1b54>
   12fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fd8:	cmp	r0, #0
   12fdc:	movw	r0, #0
   12fe0:	moveq	r0, #1
   12fe4:	str	r0, [sp, #12]
   12fe8:	ldr	r0, [sp, #12]
   12fec:	mvn	r1, #0
   12ff0:	eor	r0, r0, r1
   12ff4:	tst	r0, #1
   12ff8:	beq	13160 <__assert_fail@plt+0x1ccc>
   12ffc:	ldr	r0, [fp, #-16]
   13000:	add	r0, r0, #1
   13004:	str	r0, [fp, #-16]
   13008:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1300c:	cmp	r0, #1
   13010:	bne	13040 <__assert_fail@plt+0x1bac>
   13014:	ldr	r0, [fp, #-12]
   13018:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1301c:	ldrb	r1, [r1]
   13020:	bl	20c50 <__assert_fail@plt+0xf7bc>
   13024:	movw	r1, #0
   13028:	cmp	r0, r1
   1302c:	beq	1303c <__assert_fail@plt+0x1ba8>
   13030:	ldr	r0, [fp, #-16]
   13034:	str	r0, [fp, #-4]
   13038:	b	131b8 <__assert_fail@plt+0x1d24>
   1303c:	b	13140 <__assert_fail@plt+0x1cac>
   13040:	ldr	r0, [fp, #-12]
   13044:	str	r0, [sp, #40]	; 0x28
   13048:	movw	r0, #0
   1304c:	strb	r0, [sp, #24]
   13050:	add	r1, sp, #24
   13054:	add	r1, r1, #4
   13058:	str	r0, [sp, #8]
   1305c:	mov	r0, r1
   13060:	ldr	r1, [sp, #8]
   13064:	and	r1, r1, #255	; 0xff
   13068:	movw	r2, #8
   1306c:	bl	113d4 <memset@plt>
   13070:	ldr	r0, [sp, #8]
   13074:	strb	r0, [sp, #36]	; 0x24
   13078:	add	r0, sp, #24
   1307c:	bl	20e68 <__assert_fail@plt+0xf9d4>
   13080:	ldrb	r0, [sp, #48]	; 0x30
   13084:	tst	r0, #1
   13088:	movw	r0, #0
   1308c:	str	r0, [sp, #4]
   13090:	beq	130a8 <__assert_fail@plt+0x1c14>
   13094:	ldr	r0, [sp, #52]	; 0x34
   13098:	cmp	r0, #0
   1309c:	movw	r0, #0
   130a0:	moveq	r0, #1
   130a4:	str	r0, [sp, #4]
   130a8:	ldr	r0, [sp, #4]
   130ac:	mvn	r1, #0
   130b0:	eor	r0, r0, r1
   130b4:	tst	r0, #1
   130b8:	beq	1313c <__assert_fail@plt+0x1ca8>
   130bc:	ldrb	r0, [sp, #48]	; 0x30
   130c0:	tst	r0, #1
   130c4:	beq	130e8 <__assert_fail@plt+0x1c54>
   130c8:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   130cc:	tst	r0, #1
   130d0:	beq	130e8 <__assert_fail@plt+0x1c54>
   130d4:	ldr	r0, [sp, #52]	; 0x34
   130d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130dc:	cmp	r0, r1
   130e0:	beq	13110 <__assert_fail@plt+0x1c7c>
   130e4:	b	1311c <__assert_fail@plt+0x1c88>
   130e8:	ldr	r0, [sp, #44]	; 0x2c
   130ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   130f0:	cmp	r0, r1
   130f4:	bne	1311c <__assert_fail@plt+0x1c88>
   130f8:	ldr	r0, [sp, #40]	; 0x28
   130fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13100:	ldr	r2, [sp, #44]	; 0x2c
   13104:	bl	11284 <memcmp@plt>
   13108:	cmp	r0, #0
   1310c:	bne	1311c <__assert_fail@plt+0x1c88>
   13110:	ldr	r0, [fp, #-16]
   13114:	str	r0, [fp, #-4]
   13118:	b	131b8 <__assert_fail@plt+0x1d24>
   1311c:	b	13120 <__assert_fail@plt+0x1c8c>
   13120:	ldr	r0, [sp, #44]	; 0x2c
   13124:	ldr	r1, [sp, #40]	; 0x28
   13128:	add	r0, r1, r0
   1312c:	str	r0, [sp, #40]	; 0x28
   13130:	movw	r0, #0
   13134:	strb	r0, [sp, #36]	; 0x24
   13138:	b	13078 <__assert_fail@plt+0x1be4>
   1313c:	b	13140 <__assert_fail@plt+0x1cac>
   13140:	b	13144 <__assert_fail@plt+0x1cb0>
   13144:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13148:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1314c:	add	r0, r1, r0
   13150:	str	r0, [fp, #-56]	; 0xffffffc8
   13154:	movw	r0, #0
   13158:	strb	r0, [fp, #-60]	; 0xffffffc4
   1315c:	b	12fb8 <__assert_fail@plt+0x1b24>
   13160:	movw	r0, #0
   13164:	str	r0, [fp, #-4]
   13168:	b	131b8 <__assert_fail@plt+0x1d24>
   1316c:	ldr	r0, [fp, #-8]
   13170:	ldr	r1, [fp, #-12]
   13174:	bl	111dc <strcspn@plt>
   13178:	str	r0, [sp, #20]
   1317c:	ldr	r0, [fp, #-8]
   13180:	ldr	r1, [sp, #20]
   13184:	add	r0, r0, r1
   13188:	ldrb	r0, [r0]
   1318c:	cmp	r0, #0
   13190:	beq	131a4 <__assert_fail@plt+0x1d10>
   13194:	ldr	r0, [sp, #20]
   13198:	add	r0, r0, #1
   1319c:	str	r0, [sp]
   131a0:	b	131b0 <__assert_fail@plt+0x1d1c>
   131a4:	movw	r0, #0
   131a8:	str	r0, [sp]
   131ac:	b	131b0 <__assert_fail@plt+0x1d1c>
   131b0:	ldr	r0, [sp]
   131b4:	str	r0, [fp, #-4]
   131b8:	ldr	r0, [fp, #-4]
   131bc:	mov	sp, fp
   131c0:	pop	{fp, pc}
   131c4:	push	{fp, lr}
   131c8:	mov	fp, sp
   131cc:	sub	sp, sp, #16
   131d0:	str	r0, [sp, #8]
   131d4:	ldr	r0, [sp, #8]
   131d8:	bl	17284 <__assert_fail@plt+0x5df0>
   131dc:	cmp	r0, #0
   131e0:	bge	131f0 <__assert_fail@plt+0x1d5c>
   131e4:	mvn	r0, #0
   131e8:	str	r0, [fp, #-4]
   131ec:	b	13230 <__assert_fail@plt+0x1d9c>
   131f0:	ldr	r0, [sp, #8]
   131f4:	bl	16420 <__assert_fail@plt+0x4f8c>
   131f8:	cmp	r0, #0
   131fc:	beq	13228 <__assert_fail@plt+0x1d94>
   13200:	ldr	r0, [sp, #8]
   13204:	bl	167b4 <__assert_fail@plt+0x5320>
   13208:	str	r0, [sp, #4]
   1320c:	ldr	r0, [sp, #4]
   13210:	cmn	r0, #1
   13214:	bcs	13224 <__assert_fail@plt+0x1d90>
   13218:	ldr	r0, [sp, #4]
   1321c:	str	r0, [fp, #-4]
   13220:	b	13230 <__assert_fail@plt+0x1d9c>
   13224:	b	13228 <__assert_fail@plt+0x1d94>
   13228:	mvn	r0, #1
   1322c:	str	r0, [fp, #-4]
   13230:	ldr	r0, [fp, #-4]
   13234:	mov	sp, fp
   13238:	pop	{fp, pc}
   1323c:	push	{fp, lr}
   13240:	mov	fp, sp
   13244:	sub	sp, sp, #136	; 0x88
   13248:	str	r0, [fp, #-8]
   1324c:	str	r1, [fp, #-12]
   13250:	str	r2, [fp, #-16]
   13254:	ldr	r0, [fp, #-8]
   13258:	bl	1138c <strlen@plt>
   1325c:	str	r0, [fp, #-28]	; 0xffffffe4
   13260:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   13264:	cmp	r0, #1
   13268:	bls	1327c <__assert_fail@plt+0x1de8>
   1326c:	ldr	r0, [fp, #-8]
   13270:	bl	20d7c <__assert_fail@plt+0xf8e8>
   13274:	str	r0, [sp, #36]	; 0x24
   13278:	b	13284 <__assert_fail@plt+0x1df0>
   1327c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13280:	str	r0, [sp, #36]	; 0x24
   13284:	ldr	r0, [sp, #36]	; 0x24
   13288:	str	r0, [fp, #-32]	; 0xffffffe0
   1328c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13290:	ldr	r1, [fp, #-12]
   13294:	cmp	r0, r1
   13298:	bcc	132c0 <__assert_fail@plt+0x1e2c>
   1329c:	ldr	r0, [fp, #-12]
   132a0:	cmp	r0, #0
   132a4:	beq	132c0 <__assert_fail@plt+0x1e2c>
   132a8:	ldr	r0, [fp, #-16]
   132ac:	cmp	r0, #0
   132b0:	beq	132c0 <__assert_fail@plt+0x1e2c>
   132b4:	ldr	r0, [fp, #-16]
   132b8:	cmn	r0, #1
   132bc:	bne	132d4 <__assert_fail@plt+0x1e40>
   132c0:	movw	r0, #16039	; 0x3ea7
   132c4:	movt	r0, #4
   132c8:	bl	3f7e4 <__assert_fail@plt+0x2e350>
   132cc:	str	r0, [fp, #-4]
   132d0:	b	134bc <__assert_fail@plt+0x2028>
   132d4:	ldr	r0, [fp, #-16]
   132d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   132dc:	ldr	r2, [fp, #-12]
   132e0:	sub	r1, r1, r2
   132e4:	add	r1, r1, #1
   132e8:	cmp	r0, r1
   132ec:	bcs	132fc <__assert_fail@plt+0x1e68>
   132f0:	ldr	r0, [fp, #-16]
   132f4:	str	r0, [sp, #32]
   132f8:	b	13310 <__assert_fail@plt+0x1e7c>
   132fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13300:	ldr	r1, [fp, #-12]
   13304:	sub	r0, r0, r1
   13308:	add	r0, r0, #1
   1330c:	str	r0, [sp, #32]
   13310:	ldr	r0, [sp, #32]
   13314:	str	r0, [fp, #-36]	; 0xffffffdc
   13318:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   1331c:	cmp	r0, #1
   13320:	bne	13370 <__assert_fail@plt+0x1edc>
   13324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13328:	add	r0, r0, #1
   1332c:	bl	3cae4 <__assert_fail@plt+0x2b650>
   13330:	str	r0, [fp, #-20]	; 0xffffffec
   13334:	ldr	r0, [fp, #-20]	; 0xffffffec
   13338:	ldr	r1, [fp, #-8]
   1333c:	ldr	r2, [fp, #-12]
   13340:	add	r1, r1, r2
   13344:	mvn	r2, #0
   13348:	add	r1, r1, r2
   1334c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13350:	str	r0, [sp, #28]
   13354:	str	r2, [sp, #24]
   13358:	bl	11248 <memcpy@plt>
   1335c:	ldr	r1, [sp, #28]
   13360:	ldr	r2, [sp, #24]
   13364:	add	r3, r1, r2
   13368:	str	r3, [fp, #-24]	; 0xffffffe8
   1336c:	b	134a8 <__assert_fail@plt+0x2014>
   13370:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13374:	add	r0, r0, #1
   13378:	bl	3cae4 <__assert_fail@plt+0x2b650>
   1337c:	str	r0, [fp, #-20]	; 0xffffffec
   13380:	str	r0, [fp, #-24]	; 0xffffffe8
   13384:	movw	r0, #1
   13388:	str	r0, [sp, #40]	; 0x28
   1338c:	ldr	r0, [fp, #-8]
   13390:	str	r0, [sp, #60]	; 0x3c
   13394:	movw	r0, #0
   13398:	strb	r0, [sp, #44]	; 0x2c
   1339c:	add	r1, sp, #44	; 0x2c
   133a0:	add	r1, r1, #4
   133a4:	str	r0, [sp, #20]
   133a8:	mov	r0, r1
   133ac:	ldr	r1, [sp, #20]
   133b0:	and	r1, r1, #255	; 0xff
   133b4:	movw	r2, #8
   133b8:	bl	113d4 <memset@plt>
   133bc:	ldr	r0, [sp, #20]
   133c0:	strb	r0, [sp, #56]	; 0x38
   133c4:	add	r0, sp, #44	; 0x2c
   133c8:	bl	20e68 <__assert_fail@plt+0xf9d4>
   133cc:	ldrb	r0, [sp, #68]	; 0x44
   133d0:	tst	r0, #1
   133d4:	movw	r0, #0
   133d8:	str	r0, [sp, #16]
   133dc:	beq	133f4 <__assert_fail@plt+0x1f60>
   133e0:	ldr	r0, [sp, #72]	; 0x48
   133e4:	cmp	r0, #0
   133e8:	movw	r0, #0
   133ec:	moveq	r0, #1
   133f0:	str	r0, [sp, #16]
   133f4:	ldr	r0, [sp, #16]
   133f8:	mvn	r1, #0
   133fc:	eor	r0, r0, r1
   13400:	tst	r0, #1
   13404:	movw	r0, #0
   13408:	str	r0, [sp, #12]
   1340c:	beq	13424 <__assert_fail@plt+0x1f90>
   13410:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13414:	cmp	r0, #0
   13418:	movw	r0, #0
   1341c:	movhi	r0, #1
   13420:	str	r0, [sp, #12]
   13424:	ldr	r0, [sp, #12]
   13428:	tst	r0, #1
   1342c:	beq	134a4 <__assert_fail@plt+0x2010>
   13430:	ldr	r0, [sp, #40]	; 0x28
   13434:	ldr	r1, [fp, #-12]
   13438:	cmp	r0, r1
   1343c:	bcs	13444 <__assert_fail@plt+0x1fb0>
   13440:	b	1347c <__assert_fail@plt+0x1fe8>
   13444:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13448:	mvn	r1, #0
   1344c:	add	r0, r0, r1
   13450:	str	r0, [fp, #-36]	; 0xffffffdc
   13454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13458:	ldr	r1, [sp, #60]	; 0x3c
   1345c:	ldr	r2, [sp, #64]	; 0x40
   13460:	str	r0, [sp, #8]
   13464:	str	r2, [sp, #4]
   13468:	bl	11248 <memcpy@plt>
   1346c:	ldr	r1, [sp, #8]
   13470:	ldr	r2, [sp, #4]
   13474:	add	r3, r1, r2
   13478:	str	r3, [fp, #-24]	; 0xffffffe8
   1347c:	ldr	r0, [sp, #64]	; 0x40
   13480:	ldr	r1, [sp, #60]	; 0x3c
   13484:	add	r0, r1, r0
   13488:	str	r0, [sp, #60]	; 0x3c
   1348c:	movw	r0, #0
   13490:	strb	r0, [sp, #56]	; 0x38
   13494:	ldr	r0, [sp, #40]	; 0x28
   13498:	add	r0, r0, #1
   1349c:	str	r0, [sp, #40]	; 0x28
   134a0:	b	133c4 <__assert_fail@plt+0x1f30>
   134a4:	b	134a8 <__assert_fail@plt+0x2014>
   134a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134ac:	movw	r1, #0
   134b0:	strb	r1, [r0]
   134b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   134b8:	str	r0, [fp, #-4]
   134bc:	ldr	r0, [fp, #-4]
   134c0:	mov	sp, fp
   134c4:	pop	{fp, pc}
   134c8:	push	{fp, lr}
   134cc:	mov	fp, sp
   134d0:	sub	sp, sp, #32
   134d4:	and	r0, r0, #1
   134d8:	strb	r0, [fp, #-5]
   134dc:	bl	12e84 <__assert_fail@plt+0x19f0>
   134e0:	movw	r0, #16275	; 0x3f93
   134e4:	movt	r0, #4
   134e8:	bl	11ef4 <__assert_fail@plt+0xa60>
   134ec:	tst	r0, #1
   134f0:	beq	135d0 <__assert_fail@plt+0x213c>
   134f4:	ldrb	r0, [fp, #-5]
   134f8:	and	r0, r0, #1
   134fc:	bl	11b98 <__assert_fail@plt+0x704>
   13500:	str	r0, [fp, #-12]
   13504:	bl	11c64 <__assert_fail@plt+0x7d0>
   13508:	tst	r0, #1
   1350c:	beq	13564 <__assert_fail@plt+0x20d0>
   13510:	movw	r0, #16277	; 0x3f95
   13514:	movt	r0, #4
   13518:	bl	11380 <gettext@plt>
   1351c:	movw	r1, #24984	; 0x6198
   13520:	movt	r1, #5
   13524:	ldr	r1, [r1]
   13528:	mvn	r2, #3
   1352c:	add	r1, r1, r2
   13530:	ldr	r2, [r1]
   13534:	movw	r1, #0
   13538:	str	r0, [sp, #16]
   1353c:	mov	r0, r1
   13540:	movw	r1, #8
   13544:	bl	23378 <__assert_fail@plt+0x11ee4>
   13548:	movw	r1, #2
   1354c:	str	r0, [sp, #12]
   13550:	mov	r0, r1
   13554:	movw	r1, #0
   13558:	ldr	r2, [sp, #16]
   1355c:	ldr	r3, [sp, #12]
   13560:	bl	11308 <error@plt>
   13564:	movw	r0, #18980	; 0x4a24
   13568:	movt	r0, #4
   1356c:	bl	11ef4 <__assert_fail@plt+0xa60>
   13570:	tst	r0, #1
   13574:	bne	135c4 <__assert_fail@plt+0x2130>
   13578:	movw	r0, #16314	; 0x3fba
   1357c:	movt	r0, #4
   13580:	bl	11380 <gettext@plt>
   13584:	movw	r1, #24984	; 0x6198
   13588:	movt	r1, #5
   1358c:	ldr	r1, [r1]
   13590:	ldr	r2, [r1]
   13594:	movw	r1, #0
   13598:	str	r0, [sp, #8]
   1359c:	mov	r0, r1
   135a0:	movw	r1, #8
   135a4:	bl	23378 <__assert_fail@plt+0x11ee4>
   135a8:	movw	r1, #2
   135ac:	str	r0, [sp, #4]
   135b0:	mov	r0, r1
   135b4:	movw	r1, #0
   135b8:	ldr	r2, [sp, #8]
   135bc:	ldr	r3, [sp, #4]
   135c0:	bl	11308 <error@plt>
   135c4:	ldr	r0, [fp, #-12]
   135c8:	str	r0, [fp, #-4]
   135cc:	b	13628 <__assert_fail@plt+0x2194>
   135d0:	movw	r0, #18980	; 0x4a24
   135d4:	movt	r0, #4
   135d8:	bl	11ef4 <__assert_fail@plt+0xa60>
   135dc:	tst	r0, #1
   135e0:	beq	13608 <__assert_fail@plt+0x2174>
   135e4:	movw	r0, #16356	; 0x3fe4
   135e8:	movt	r0, #4
   135ec:	bl	11380 <gettext@plt>
   135f0:	movw	r1, #2
   135f4:	str	r0, [sp]
   135f8:	mov	r0, r1
   135fc:	movw	r1, #0
   13600:	ldr	r2, [sp]
   13604:	bl	11308 <error@plt>
   13608:	movw	r0, #24984	; 0x6198
   1360c:	movt	r0, #5
   13610:	ldr	r1, [r0]
   13614:	add	r2, r1, #4
   13618:	str	r2, [r0]
   1361c:	ldr	r0, [r1]
   13620:	bl	12ef8 <__assert_fail@plt+0x1a64>
   13624:	str	r0, [fp, #-4]
   13628:	ldr	r0, [fp, #-4]
   1362c:	mov	sp, fp
   13630:	pop	{fp, pc}
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	sub	sp, sp, #80	; 0x50
   13640:	str	r0, [fp, #-4]
   13644:	str	r1, [fp, #-8]
   13648:	movw	r0, #0
   1364c:	str	r0, [sp, #12]
   13650:	ldr	r0, [fp, #-4]
   13654:	str	r0, [sp, #32]
   13658:	movw	r0, #0
   1365c:	strb	r0, [sp, #16]
   13660:	add	r1, sp, #16
   13664:	add	r1, r1, #4
   13668:	str	r0, [sp, #4]
   1366c:	mov	r0, r1
   13670:	ldr	r1, [sp, #4]
   13674:	and	r1, r1, #255	; 0xff
   13678:	movw	r2, #8
   1367c:	bl	113d4 <memset@plt>
   13680:	ldr	r0, [sp, #4]
   13684:	strb	r0, [sp, #28]
   13688:	add	r0, sp, #16
   1368c:	bl	20e68 <__assert_fail@plt+0xf9d4>
   13690:	ldrb	r0, [sp, #40]	; 0x28
   13694:	tst	r0, #1
   13698:	movw	r0, #0
   1369c:	str	r0, [sp]
   136a0:	beq	136b8 <__assert_fail@plt+0x2224>
   136a4:	ldr	r0, [sp, #44]	; 0x2c
   136a8:	cmp	r0, #0
   136ac:	movw	r0, #0
   136b0:	moveq	r0, #1
   136b4:	str	r0, [sp]
   136b8:	ldr	r0, [sp]
   136bc:	mvn	r1, #0
   136c0:	eor	r0, r0, r1
   136c4:	tst	r0, #1
   136c8:	beq	13718 <__assert_fail@plt+0x2284>
   136cc:	ldr	r0, [sp, #32]
   136d0:	ldr	r1, [fp, #-4]
   136d4:	sub	r0, r0, r1
   136d8:	str	r0, [sp, #8]
   136dc:	ldr	r0, [sp, #8]
   136e0:	ldr	r1, [fp, #-8]
   136e4:	cmp	r0, r1
   136e8:	bcc	136f0 <__assert_fail@plt+0x225c>
   136ec:	b	13718 <__assert_fail@plt+0x2284>
   136f0:	ldr	r0, [sp, #12]
   136f4:	add	r0, r0, #1
   136f8:	str	r0, [sp, #12]
   136fc:	ldr	r0, [sp, #36]	; 0x24
   13700:	ldr	r1, [sp, #32]
   13704:	add	r0, r1, r0
   13708:	str	r0, [sp, #32]
   1370c:	movw	r0, #0
   13710:	strb	r0, [sp, #28]
   13714:	b	13688 <__assert_fail@plt+0x21f4>
   13718:	ldr	r0, [sp, #12]
   1371c:	mov	sp, fp
   13720:	pop	{fp, pc}
   13724:	sub	sp, sp, #4
   13728:	str	r0, [sp]
   1372c:	ldr	r0, [sp]
   13730:	movw	r1, #24988	; 0x619c
   13734:	movt	r1, #5
   13738:	str	r0, [r1]
   1373c:	add	sp, sp, #4
   13740:	bx	lr
   13744:	sub	sp, sp, #4
   13748:	and	r0, r0, #1
   1374c:	strb	r0, [sp, #3]
   13750:	ldrb	r0, [sp, #3]
   13754:	and	r0, r0, #1
   13758:	movw	r1, #24992	; 0x61a0
   1375c:	movt	r1, #5
   13760:	strb	r0, [r1]
   13764:	add	sp, sp, #4
   13768:	bx	lr
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	sub	sp, sp, #24
   13778:	movw	r0, #24972	; 0x618c
   1377c:	movt	r0, #5
   13780:	ldr	r0, [r0]
   13784:	bl	3fad4 <__assert_fail@plt+0x2e640>
   13788:	cmp	r0, #0
   1378c:	beq	1385c <__assert_fail@plt+0x23c8>
   13790:	movw	r0, #24992	; 0x61a0
   13794:	movt	r0, #5
   13798:	ldrb	r0, [r0]
   1379c:	tst	r0, #1
   137a0:	beq	137b4 <__assert_fail@plt+0x2320>
   137a4:	bl	113b0 <__errno_location@plt>
   137a8:	ldr	r0, [r0]
   137ac:	cmp	r0, #32
   137b0:	beq	1385c <__assert_fail@plt+0x23c8>
   137b4:	movw	r0, #16480	; 0x4060
   137b8:	movt	r0, #4
   137bc:	bl	11380 <gettext@plt>
   137c0:	str	r0, [fp, #-4]
   137c4:	movw	r0, #24988	; 0x619c
   137c8:	movt	r0, #5
   137cc:	ldr	r0, [r0]
   137d0:	movw	r1, #0
   137d4:	cmp	r0, r1
   137d8:	beq	13830 <__assert_fail@plt+0x239c>
   137dc:	bl	113b0 <__errno_location@plt>
   137e0:	ldr	r1, [r0]
   137e4:	movw	r0, #24988	; 0x619c
   137e8:	movt	r0, #5
   137ec:	ldr	r0, [r0]
   137f0:	str	r1, [fp, #-8]
   137f4:	bl	23548 <__assert_fail@plt+0x120b4>
   137f8:	ldr	r1, [fp, #-4]
   137fc:	movw	r2, #0
   13800:	str	r0, [sp, #12]
   13804:	mov	r0, r2
   13808:	ldr	r2, [fp, #-8]
   1380c:	str	r1, [sp, #8]
   13810:	mov	r1, r2
   13814:	movw	r2, #16492	; 0x406c
   13818:	movt	r2, #4
   1381c:	ldr	r3, [sp, #12]
   13820:	ldr	ip, [sp, #8]
   13824:	str	ip, [sp]
   13828:	bl	11308 <error@plt>
   1382c:	b	1384c <__assert_fail@plt+0x23b8>
   13830:	bl	113b0 <__errno_location@plt>
   13834:	ldr	r1, [r0]
   13838:	ldr	r3, [fp, #-4]
   1383c:	movw	r0, #0
   13840:	movw	r2, #16496	; 0x4070
   13844:	movt	r2, #4
   13848:	bl	11308 <error@plt>
   1384c:	movw	r0, #24868	; 0x6124
   13850:	movt	r0, #5
   13854:	ldr	r0, [r0]
   13858:	bl	1123c <_exit@plt>
   1385c:	movw	r0, #24968	; 0x6188
   13860:	movt	r0, #5
   13864:	ldr	r0, [r0]
   13868:	bl	3fad4 <__assert_fail@plt+0x2e640>
   1386c:	cmp	r0, #0
   13870:	beq	13884 <__assert_fail@plt+0x23f0>
   13874:	movw	r0, #24868	; 0x6124
   13878:	movt	r0, #5
   1387c:	ldr	r0, [r0]
   13880:	bl	1123c <_exit@plt>
   13884:	mov	sp, fp
   13888:	pop	{fp, pc}
   1388c:	push	{fp, lr}
   13890:	mov	fp, sp
   13894:	sub	sp, sp, #16
   13898:	str	r0, [fp, #-4]
   1389c:	bl	113b0 <__errno_location@plt>
   138a0:	ldr	r0, [r0]
   138a4:	str	r0, [sp, #8]
   138a8:	ldr	r0, [fp, #-4]
   138ac:	bl	11224 <free@plt>
   138b0:	ldr	r0, [sp, #8]
   138b4:	str	r0, [sp, #4]
   138b8:	bl	113b0 <__errno_location@plt>
   138bc:	ldr	r1, [sp, #4]
   138c0:	str	r1, [r0]
   138c4:	mov	sp, fp
   138c8:	pop	{fp, pc}
   138cc:	andeq	r0, r0, r0
   138d0:	sub	sp, sp, #12
   138d4:	str	r0, [sp, #8]
   138d8:	str	r1, [sp, #4]
   138dc:	str	r2, [sp]
   138e0:	ldr	r0, [sp, #8]
   138e4:	movw	r1, #0
   138e8:	cmp	r0, r1
   138ec:	beq	13904 <__assert_fail@plt+0x2470>
   138f0:	movw	r0, #24872	; 0x6128
   138f4:	movt	r0, #5
   138f8:	ldr	r0, [r0]
   138fc:	ldr	r1, [sp, #8]
   13900:	str	r0, [r1]
   13904:	ldr	r0, [sp, #4]
   13908:	movw	r1, #0
   1390c:	cmp	r0, r1
   13910:	beq	13928 <__assert_fail@plt+0x2494>
   13914:	movw	r0, #24876	; 0x612c
   13918:	movt	r0, #5
   1391c:	ldr	r0, [r0]
   13920:	ldr	r1, [sp, #4]
   13924:	str	r0, [r1]
   13928:	ldr	r0, [sp]
   1392c:	movw	r1, #0
   13930:	cmp	r0, r1
   13934:	beq	1394c <__assert_fail@plt+0x24b8>
   13938:	movw	r0, #24880	; 0x6130
   1393c:	movt	r0, #5
   13940:	ldr	r0, [r0]
   13944:	ldr	r1, [sp]
   13948:	str	r0, [r1]
   1394c:	add	sp, sp, #12
   13950:	bx	lr
   13954:	sub	sp, sp, #12
   13958:	str	r0, [sp, #8]
   1395c:	str	r1, [sp, #4]
   13960:	str	r2, [sp]
   13964:	ldr	r0, [sp, #8]
   13968:	movw	r1, #0
   1396c:	cmp	r0, r1
   13970:	bne	13980 <__assert_fail@plt+0x24ec>
   13974:	movw	r0, #14832	; 0x39f0
   13978:	movt	r0, #1
   1397c:	str	r0, [sp, #8]
   13980:	ldr	r0, [sp, #4]
   13984:	movw	r1, #0
   13988:	cmp	r0, r1
   1398c:	bne	1399c <__assert_fail@plt+0x2508>
   13990:	movw	r0, #14948	; 0x3a64
   13994:	movt	r0, #1
   13998:	str	r0, [sp, #4]
   1399c:	ldr	r0, [sp]
   139a0:	movw	r1, #0
   139a4:	cmp	r0, r1
   139a8:	bne	139b8 <__assert_fail@plt+0x2524>
   139ac:	movw	r0, #15028	; 0x3ab4
   139b0:	movt	r0, #1
   139b4:	str	r0, [sp]
   139b8:	ldr	r0, [sp, #8]
   139bc:	movw	r1, #24872	; 0x6128
   139c0:	movt	r1, #5
   139c4:	str	r0, [r1]
   139c8:	ldr	r0, [sp, #4]
   139cc:	movw	r1, #24876	; 0x612c
   139d0:	movt	r1, #5
   139d4:	str	r0, [r1]
   139d8:	ldr	r0, [sp]
   139dc:	movw	r1, #24880	; 0x6130
   139e0:	movt	r1, #5
   139e4:	str	r0, [r1]
   139e8:	add	sp, sp, #12
   139ec:	bx	lr
   139f0:	push	{fp, lr}
   139f4:	mov	fp, sp
   139f8:	sub	sp, sp, #8
   139fc:	str	r0, [sp, #4]
   13a00:	ldr	r0, [sp, #4]
   13a04:	cmp	r0, #0
   13a08:	bls	13a10 <__assert_fail@plt+0x257c>
   13a0c:	b	13a30 <__assert_fail@plt+0x259c>
   13a10:	movw	r0, #20076	; 0x4e6c
   13a14:	movt	r0, #4
   13a18:	movw	r1, #16512	; 0x4080
   13a1c:	movt	r1, #4
   13a20:	movw	r2, #291	; 0x123
   13a24:	movw	r3, #19206	; 0x4b06
   13a28:	movt	r3, #4
   13a2c:	bl	11494 <__assert_fail@plt>
   13a30:	ldr	r0, [sp, #4]
   13a34:	bl	3f908 <__assert_fail@plt+0x2e474>
   13a38:	str	r0, [sp]
   13a3c:	ldr	r0, [sp]
   13a40:	movw	r1, #0
   13a44:	cmp	r0, r1
   13a48:	bne	13a58 <__assert_fail@plt+0x25c4>
   13a4c:	movw	r0, #19238	; 0x4b26
   13a50:	movt	r0, #4
   13a54:	bl	1a998 <__assert_fail@plt+0x9504>
   13a58:	ldr	r0, [sp]
   13a5c:	mov	sp, fp
   13a60:	pop	{fp, pc}
   13a64:	push	{fp, lr}
   13a68:	mov	fp, sp
   13a6c:	sub	sp, sp, #16
   13a70:	str	r0, [fp, #-4]
   13a74:	str	r1, [sp, #8]
   13a78:	str	r2, [sp, #4]
   13a7c:	ldr	r0, [fp, #-4]
   13a80:	ldr	r1, [sp, #4]
   13a84:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   13a88:	str	r0, [sp]
   13a8c:	ldr	r0, [sp]
   13a90:	movw	r1, #0
   13a94:	cmp	r0, r1
   13a98:	bne	13aa8 <__assert_fail@plt+0x2614>
   13a9c:	movw	r0, #19283	; 0x4b53
   13aa0:	movt	r0, #4
   13aa4:	bl	1a998 <__assert_fail@plt+0x9504>
   13aa8:	ldr	r0, [sp]
   13aac:	mov	sp, fp
   13ab0:	pop	{fp, pc}
   13ab4:	push	{fp, lr}
   13ab8:	mov	fp, sp
   13abc:	sub	sp, sp, #8
   13ac0:	str	r0, [sp, #4]
   13ac4:	str	r1, [sp]
   13ac8:	ldr	r0, [sp, #4]
   13acc:	bl	1388c <__assert_fail@plt+0x23f8>
   13ad0:	mov	sp, fp
   13ad4:	pop	{fp, pc}
   13ad8:	sub	sp, sp, #16
   13adc:	str	r0, [sp, #12]
   13ae0:	str	r1, [sp, #8]
   13ae4:	str	r2, [sp, #4]
   13ae8:	movw	r0, #0
   13aec:	str	r0, [sp]
   13af0:	ldr	r0, [sp]
   13af4:	ldr	r1, [sp, #4]
   13af8:	cmp	r0, r1
   13afc:	bge	13b28 <__assert_fail@plt+0x2694>
   13b00:	ldr	r0, [sp, #8]
   13b04:	ldr	r1, [sp]
   13b08:	ldr	r0, [r0, r1, lsl #2]
   13b0c:	ldr	r2, [sp, #12]
   13b10:	add	r1, r2, r1, lsl #2
   13b14:	str	r0, [r1]
   13b18:	ldr	r0, [sp]
   13b1c:	add	r0, r0, #1
   13b20:	str	r0, [sp]
   13b24:	b	13af0 <__assert_fail@plt+0x265c>
   13b28:	add	sp, sp, #16
   13b2c:	bx	lr
   13b30:	sub	sp, sp, #12
   13b34:	str	r0, [sp, #8]
   13b38:	str	r1, [sp, #4]
   13b3c:	str	r2, [sp]
   13b40:	ldr	r0, [sp]
   13b44:	mvn	r1, #0
   13b48:	add	r0, r0, r1
   13b4c:	str	r0, [sp]
   13b50:	cmp	r0, #0
   13b54:	blt	13b74 <__assert_fail@plt+0x26e0>
   13b58:	ldr	r0, [sp, #4]
   13b5c:	ldr	r1, [sp]
   13b60:	ldr	r0, [r0, r1, lsl #2]
   13b64:	ldr	r2, [sp, #8]
   13b68:	add	r1, r2, r1, lsl #2
   13b6c:	str	r0, [r1]
   13b70:	b	13b40 <__assert_fail@plt+0x26ac>
   13b74:	add	sp, sp, #12
   13b78:	bx	lr
   13b7c:	sub	sp, sp, #16
   13b80:	str	r0, [sp, #8]
   13b84:	str	r1, [sp, #4]
   13b88:	str	r2, [sp]
   13b8c:	ldr	r0, [sp]
   13b90:	mvn	r1, #0
   13b94:	add	r0, r0, r1
   13b98:	str	r0, [sp]
   13b9c:	cmp	r0, #0
   13ba0:	blt	13c00 <__assert_fail@plt+0x276c>
   13ba4:	ldr	r0, [sp, #8]
   13ba8:	ldr	r1, [sp]
   13bac:	ldr	r0, [r0, r1, lsl #2]
   13bb0:	ldr	r2, [sp, #4]
   13bb4:	add	r1, r2, r1, lsl #2
   13bb8:	ldr	r1, [r1]
   13bbc:	cmp	r0, r1
   13bc0:	beq	13bfc <__assert_fail@plt+0x2768>
   13bc4:	ldr	r0, [sp, #8]
   13bc8:	ldr	r1, [sp]
   13bcc:	ldr	r0, [r0, r1, lsl #2]
   13bd0:	ldr	r2, [sp, #4]
   13bd4:	add	r1, r2, r1, lsl #2
   13bd8:	ldr	r1, [r1]
   13bdc:	cmp	r0, r1
   13be0:	movw	r0, #0
   13be4:	movhi	r0, #1
   13be8:	tst	r0, #1
   13bec:	movw	r0, #1
   13bf0:	mvneq	r0, #0
   13bf4:	str	r0, [sp, #12]
   13bf8:	b	13c08 <__assert_fail@plt+0x2774>
   13bfc:	b	13b8c <__assert_fail@plt+0x26f8>
   13c00:	movw	r0, #0
   13c04:	str	r0, [sp, #12]
   13c08:	ldr	r0, [sp, #12]
   13c0c:	add	sp, sp, #16
   13c10:	bx	lr
   13c14:	push	{fp, lr}
   13c18:	mov	fp, sp
   13c1c:	sub	sp, sp, #8
   13c20:	str	r0, [sp, #4]
   13c24:	str	r1, [sp]
   13c28:	ldr	r0, [sp, #4]
   13c2c:	ldr	r1, [sp]
   13c30:	bl	13c4c <__assert_fail@plt+0x27b8>
   13c34:	cmp	r0, #0
   13c38:	movw	r0, #0
   13c3c:	moveq	r0, #1
   13c40:	and	r0, r0, #1
   13c44:	mov	sp, fp
   13c48:	pop	{fp, pc}
   13c4c:	sub	sp, sp, #12
   13c50:	str	r0, [sp, #8]
   13c54:	str	r1, [sp, #4]
   13c58:	ldr	r0, [sp, #4]
   13c5c:	cmp	r0, #0
   13c60:	movw	r0, #0
   13c64:	str	r0, [sp]
   13c68:	ble	13c90 <__assert_fail@plt+0x27fc>
   13c6c:	ldr	r0, [sp, #8]
   13c70:	ldr	r1, [sp, #4]
   13c74:	sub	r1, r1, #1
   13c78:	add	r0, r0, r1, lsl #2
   13c7c:	ldr	r0, [r0]
   13c80:	cmp	r0, #0
   13c84:	movw	r0, #0
   13c88:	moveq	r0, #1
   13c8c:	str	r0, [sp]
   13c90:	ldr	r0, [sp]
   13c94:	tst	r0, #1
   13c98:	beq	13cb0 <__assert_fail@plt+0x281c>
   13c9c:	ldr	r0, [sp, #4]
   13ca0:	mvn	r1, #0
   13ca4:	add	r0, r0, r1
   13ca8:	str	r0, [sp, #4]
   13cac:	b	13c58 <__assert_fail@plt+0x27c4>
   13cb0:	ldr	r0, [sp, #4]
   13cb4:	add	sp, sp, #12
   13cb8:	bx	lr
   13cbc:	sub	sp, sp, #8
   13cc0:	str	r0, [sp, #4]
   13cc4:	str	r1, [sp]
   13cc8:	ldr	r0, [sp]
   13ccc:	mvn	r1, #0
   13cd0:	add	r0, r0, r1
   13cd4:	str	r0, [sp]
   13cd8:	cmp	r0, #0
   13cdc:	blt	13cf8 <__assert_fail@plt+0x2864>
   13ce0:	ldr	r0, [sp, #4]
   13ce4:	ldr	r1, [sp]
   13ce8:	add	r0, r0, r1, lsl #2
   13cec:	movw	r1, #0
   13cf0:	str	r1, [r0]
   13cf4:	b	13cc8 <__assert_fail@plt+0x2834>
   13cf8:	add	sp, sp, #8
   13cfc:	bx	lr
   13d00:	push	{fp, lr}
   13d04:	mov	fp, sp
   13d08:	sub	sp, sp, #24
   13d0c:	str	r0, [fp, #-4]
   13d10:	str	r1, [fp, #-8]
   13d14:	str	r2, [sp, #12]
   13d18:	str	r3, [sp, #8]
   13d1c:	ldr	r0, [sp, #12]
   13d20:	cmp	r0, #0
   13d24:	ble	13d2c <__assert_fail@plt+0x2898>
   13d28:	b	13d4c <__assert_fail@plt+0x28b8>
   13d2c:	movw	r0, #19893	; 0x4db5
   13d30:	movt	r0, #4
   13d34:	movw	r1, #16512	; 0x4080
   13d38:	movt	r1, #4
   13d3c:	movw	r2, #442	; 0x1ba
   13d40:	movw	r3, #16529	; 0x4091
   13d44:	movt	r3, #4
   13d48:	bl	11494 <__assert_fail@plt>
   13d4c:	movw	r0, #0
   13d50:	str	r0, [sp, #4]
   13d54:	ldr	r0, [fp, #-8]
   13d58:	ldr	r1, [sp, #4]
   13d5c:	ldr	r0, [r0, r1, lsl #2]
   13d60:	ldr	r1, [sp, #8]
   13d64:	add	r0, r0, r1
   13d68:	str	r0, [sp]
   13d6c:	ldr	r0, [sp]
   13d70:	ldr	r1, [sp, #8]
   13d74:	mov	r2, #0
   13d78:	cmp	r0, r1
   13d7c:	movwcc	r2, #1
   13d80:	str	r2, [sp, #8]
   13d84:	ldr	r0, [sp]
   13d88:	ldr	r1, [fp, #-4]
   13d8c:	ldr	r2, [sp, #4]
   13d90:	add	r1, r1, r2, lsl #2
   13d94:	str	r0, [r1]
   13d98:	ldr	r0, [sp, #4]
   13d9c:	add	r0, r0, #1
   13da0:	str	r0, [sp, #4]
   13da4:	ldr	r1, [sp, #12]
   13da8:	cmp	r0, r1
   13dac:	blt	13d54 <__assert_fail@plt+0x28c0>
   13db0:	ldr	r0, [sp, #8]
   13db4:	mov	sp, fp
   13db8:	pop	{fp, pc}
   13dbc:	sub	sp, sp, #36	; 0x24
   13dc0:	str	r0, [sp, #32]
   13dc4:	str	r1, [sp, #28]
   13dc8:	str	r2, [sp, #24]
   13dcc:	str	r3, [sp, #20]
   13dd0:	movw	r0, #0
   13dd4:	str	r0, [sp, #16]
   13dd8:	str	r0, [sp, #12]
   13ddc:	ldr	r0, [sp, #16]
   13de0:	ldr	r1, [sp, #20]
   13de4:	cmp	r0, r1
   13de8:	bge	13e84 <__assert_fail@plt+0x29f0>
   13dec:	ldr	r0, [sp, #28]
   13df0:	ldr	r1, [sp, #16]
   13df4:	ldr	r0, [r0, r1, lsl #2]
   13df8:	str	r0, [sp, #8]
   13dfc:	ldr	r0, [sp, #24]
   13e00:	ldr	r1, [sp, #16]
   13e04:	ldr	r0, [r0, r1, lsl #2]
   13e08:	str	r0, [sp, #4]
   13e0c:	ldr	r0, [sp, #8]
   13e10:	ldr	r1, [sp, #12]
   13e14:	add	r0, r0, r1
   13e18:	str	r0, [sp]
   13e1c:	ldr	r0, [sp]
   13e20:	ldr	r1, [sp, #12]
   13e24:	mov	r2, #0
   13e28:	cmp	r0, r1
   13e2c:	movwcc	r2, #1
   13e30:	str	r2, [sp, #12]
   13e34:	ldr	r0, [sp, #4]
   13e38:	ldr	r1, [sp]
   13e3c:	add	r0, r1, r0
   13e40:	str	r0, [sp]
   13e44:	ldr	r0, [sp]
   13e48:	ldr	r1, [sp, #4]
   13e4c:	ldr	r2, [sp, #12]
   13e50:	add	r3, r2, #1
   13e54:	cmp	r0, r1
   13e58:	movcc	r2, r3
   13e5c:	str	r2, [sp, #12]
   13e60:	ldr	r0, [sp]
   13e64:	ldr	r1, [sp, #32]
   13e68:	ldr	r2, [sp, #16]
   13e6c:	add	r1, r1, r2, lsl #2
   13e70:	str	r0, [r1]
   13e74:	ldr	r0, [sp, #16]
   13e78:	add	r0, r0, #1
   13e7c:	str	r0, [sp, #16]
   13e80:	b	13ddc <__assert_fail@plt+0x2948>
   13e84:	ldr	r0, [sp, #12]
   13e88:	add	sp, sp, #36	; 0x24
   13e8c:	bx	lr
   13e90:	push	{fp, lr}
   13e94:	mov	fp, sp
   13e98:	sub	sp, sp, #24
   13e9c:	ldr	ip, [fp, #8]
   13ea0:	str	r0, [fp, #-4]
   13ea4:	str	r1, [fp, #-8]
   13ea8:	str	r2, [sp, #12]
   13eac:	str	r3, [sp, #8]
   13eb0:	ldr	r0, [sp, #12]
   13eb4:	ldr	r1, [fp, #8]
   13eb8:	cmp	r0, r1
   13ebc:	blt	13ec4 <__assert_fail@plt+0x2a30>
   13ec0:	b	13ee4 <__assert_fail@plt+0x2a50>
   13ec4:	movw	r0, #16590	; 0x40ce
   13ec8:	movt	r0, #4
   13ecc:	movw	r1, #16512	; 0x4080
   13ed0:	movt	r1, #4
   13ed4:	movw	r2, #480	; 0x1e0
   13ed8:	movw	r3, #16599	; 0x40d7
   13edc:	movt	r3, #4
   13ee0:	bl	11494 <__assert_fail@plt>
   13ee4:	ldr	r0, [fp, #-4]
   13ee8:	ldr	r1, [fp, #-8]
   13eec:	ldr	r2, [sp, #8]
   13ef0:	ldr	r3, [fp, #8]
   13ef4:	bl	13dbc <__assert_fail@plt+0x2928>
   13ef8:	str	r0, [sp, #4]
   13efc:	ldr	r0, [sp, #12]
   13f00:	ldr	r1, [fp, #8]
   13f04:	cmp	r0, r1
   13f08:	ble	13f38 <__assert_fail@plt+0x2aa4>
   13f0c:	ldr	r0, [fp, #-4]
   13f10:	ldr	r1, [fp, #8]
   13f14:	add	r0, r0, r1, lsl #2
   13f18:	ldr	r2, [fp, #-8]
   13f1c:	add	r1, r2, r1, lsl #2
   13f20:	ldr	r2, [sp, #12]
   13f24:	ldr	r3, [fp, #8]
   13f28:	sub	r2, r2, r3
   13f2c:	ldr	r3, [sp, #4]
   13f30:	bl	13d00 <__assert_fail@plt+0x286c>
   13f34:	str	r0, [sp, #4]
   13f38:	ldr	r0, [sp, #4]
   13f3c:	mov	sp, fp
   13f40:	pop	{fp, pc}
   13f44:	push	{fp, lr}
   13f48:	mov	fp, sp
   13f4c:	sub	sp, sp, #32
   13f50:	str	r0, [fp, #-4]
   13f54:	str	r1, [fp, #-8]
   13f58:	str	r2, [fp, #-12]
   13f5c:	str	r3, [sp, #16]
   13f60:	ldr	r0, [fp, #-12]
   13f64:	cmp	r0, #0
   13f68:	ble	13f70 <__assert_fail@plt+0x2adc>
   13f6c:	b	13f90 <__assert_fail@plt+0x2afc>
   13f70:	movw	r0, #19893	; 0x4db5
   13f74:	movt	r0, #4
   13f78:	movw	r1, #16512	; 0x4080
   13f7c:	movt	r1, #4
   13f80:	movw	r2, #493	; 0x1ed
   13f84:	movw	r3, #16669	; 0x411d
   13f88:	movt	r3, #4
   13f8c:	bl	11494 <__assert_fail@plt>
   13f90:	movw	r0, #0
   13f94:	str	r0, [sp, #12]
   13f98:	ldr	r0, [fp, #-8]
   13f9c:	ldr	r1, [sp, #12]
   13fa0:	ldr	r0, [r0, r1, lsl #2]
   13fa4:	str	r0, [sp, #8]
   13fa8:	ldr	r0, [sp, #8]
   13fac:	ldr	r1, [sp, #16]
   13fb0:	mov	r2, #0
   13fb4:	cmp	r0, r1
   13fb8:	movwcc	r2, #1
   13fbc:	str	r2, [sp, #4]
   13fc0:	ldr	r0, [sp, #8]
   13fc4:	ldr	r1, [sp, #16]
   13fc8:	sub	r0, r0, r1
   13fcc:	ldr	r1, [fp, #-4]
   13fd0:	ldr	r2, [sp, #12]
   13fd4:	add	r1, r1, r2, lsl #2
   13fd8:	str	r0, [r1]
   13fdc:	ldr	r0, [sp, #4]
   13fe0:	str	r0, [sp, #16]
   13fe4:	ldr	r0, [sp, #12]
   13fe8:	add	r0, r0, #1
   13fec:	str	r0, [sp, #12]
   13ff0:	ldr	r1, [fp, #-12]
   13ff4:	cmp	r0, r1
   13ff8:	blt	13f98 <__assert_fail@plt+0x2b04>
   13ffc:	ldr	r0, [sp, #16]
   14000:	mov	sp, fp
   14004:	pop	{fp, pc}
   14008:	sub	sp, sp, #32
   1400c:	str	r0, [sp, #28]
   14010:	str	r1, [sp, #24]
   14014:	str	r2, [sp, #20]
   14018:	str	r3, [sp, #16]
   1401c:	movw	r0, #0
   14020:	str	r0, [sp, #12]
   14024:	str	r0, [sp, #8]
   14028:	ldr	r0, [sp, #12]
   1402c:	ldr	r1, [sp, #16]
   14030:	cmp	r0, r1
   14034:	bge	140c8 <__assert_fail@plt+0x2c34>
   14038:	ldr	r0, [sp, #24]
   1403c:	ldr	r1, [sp, #12]
   14040:	ldr	r0, [r0, r1, lsl #2]
   14044:	str	r0, [sp, #4]
   14048:	ldr	r0, [sp, #20]
   1404c:	ldr	r1, [sp, #12]
   14050:	ldr	r0, [r0, r1, lsl #2]
   14054:	str	r0, [sp]
   14058:	ldr	r0, [sp, #8]
   1405c:	ldr	r1, [sp]
   14060:	add	r0, r1, r0
   14064:	str	r0, [sp]
   14068:	ldr	r0, [sp]
   1406c:	ldr	r1, [sp, #8]
   14070:	mov	r2, #0
   14074:	cmp	r0, r1
   14078:	movwcc	r2, #1
   1407c:	str	r2, [sp, #8]
   14080:	ldr	r0, [sp, #4]
   14084:	ldr	r1, [sp]
   14088:	ldr	r2, [sp, #8]
   1408c:	add	r3, r2, #1
   14090:	cmp	r0, r1
   14094:	movcc	r2, r3
   14098:	str	r2, [sp, #8]
   1409c:	ldr	r0, [sp, #4]
   140a0:	ldr	r1, [sp]
   140a4:	sub	r0, r0, r1
   140a8:	ldr	r1, [sp, #28]
   140ac:	ldr	r2, [sp, #12]
   140b0:	add	r1, r1, r2, lsl #2
   140b4:	str	r0, [r1]
   140b8:	ldr	r0, [sp, #12]
   140bc:	add	r0, r0, #1
   140c0:	str	r0, [sp, #12]
   140c4:	b	14028 <__assert_fail@plt+0x2b94>
   140c8:	ldr	r0, [sp, #8]
   140cc:	add	sp, sp, #32
   140d0:	bx	lr
   140d4:	push	{fp, lr}
   140d8:	mov	fp, sp
   140dc:	sub	sp, sp, #24
   140e0:	ldr	ip, [fp, #8]
   140e4:	str	r0, [fp, #-4]
   140e8:	str	r1, [fp, #-8]
   140ec:	str	r2, [sp, #12]
   140f0:	str	r3, [sp, #8]
   140f4:	ldr	r0, [sp, #12]
   140f8:	ldr	r1, [fp, #8]
   140fc:	cmp	r0, r1
   14100:	blt	14108 <__assert_fail@plt+0x2c74>
   14104:	b	14128 <__assert_fail@plt+0x2c94>
   14108:	movw	r0, #16590	; 0x40ce
   1410c:	movt	r0, #4
   14110:	movw	r1, #16512	; 0x4080
   14114:	movt	r1, #4
   14118:	movw	r2, #532	; 0x214
   1411c:	movw	r3, #16730	; 0x415a
   14120:	movt	r3, #4
   14124:	bl	11494 <__assert_fail@plt>
   14128:	ldr	r0, [fp, #-4]
   1412c:	ldr	r1, [fp, #-8]
   14130:	ldr	r2, [sp, #8]
   14134:	ldr	r3, [fp, #8]
   14138:	bl	14008 <__assert_fail@plt+0x2b74>
   1413c:	str	r0, [sp, #4]
   14140:	ldr	r0, [sp, #12]
   14144:	ldr	r1, [fp, #8]
   14148:	cmp	r0, r1
   1414c:	ble	1417c <__assert_fail@plt+0x2ce8>
   14150:	ldr	r0, [fp, #-4]
   14154:	ldr	r1, [fp, #8]
   14158:	add	r0, r0, r1, lsl #2
   1415c:	ldr	r2, [fp, #-8]
   14160:	add	r1, r2, r1, lsl #2
   14164:	ldr	r2, [sp, #12]
   14168:	ldr	r3, [fp, #8]
   1416c:	sub	r2, r2, r3
   14170:	ldr	r3, [sp, #4]
   14174:	bl	13f44 <__assert_fail@plt+0x2ab0>
   14178:	str	r0, [sp, #4]
   1417c:	ldr	r0, [sp, #4]
   14180:	mov	sp, fp
   14184:	pop	{fp, pc}
   14188:	push	{fp, lr}
   1418c:	mov	fp, sp
   14190:	sub	sp, sp, #80	; 0x50
   14194:	str	r0, [fp, #-4]
   14198:	str	r1, [fp, #-8]
   1419c:	str	r2, [fp, #-12]
   141a0:	str	r3, [fp, #-16]
   141a4:	ldr	r0, [fp, #-12]
   141a8:	cmp	r0, #1
   141ac:	blt	141b4 <__assert_fail@plt+0x2d20>
   141b0:	b	141d4 <__assert_fail@plt+0x2d40>
   141b4:	movw	r0, #17069	; 0x42ad
   141b8:	movt	r0, #4
   141bc:	movw	r1, #16512	; 0x4080
   141c0:	movt	r1, #4
   141c4:	movw	r2, #545	; 0x221
   141c8:	movw	r3, #16800	; 0x41a0
   141cc:	movt	r3, #4
   141d0:	bl	11494 <__assert_fail@plt>
   141d4:	movw	r0, #0
   141d8:	str	r0, [fp, #-24]	; 0xffffffe8
   141dc:	ldr	r0, [fp, #-8]
   141e0:	add	r1, r0, #4
   141e4:	str	r1, [fp, #-8]
   141e8:	ldr	r0, [r0]
   141ec:	str	r0, [fp, #-20]	; 0xffffffec
   141f0:	movw	r0, #32
   141f4:	str	r0, [fp, #-36]	; 0xffffffdc
   141f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   141fc:	str	r0, [sp, #8]
   14200:	ldr	r0, [fp, #-16]
   14204:	str	r0, [sp, #4]
   14208:	ldr	r0, [sp, #8]
   1420c:	movw	r1, #65535	; 0xffff
   14210:	and	r0, r0, r1
   14214:	str	r0, [sp, #24]
   14218:	ldr	r0, [sp, #8]
   1421c:	lsr	r0, r0, #16
   14220:	str	r0, [sp, #16]
   14224:	ldr	r0, [sp, #4]
   14228:	and	r0, r0, r1
   1422c:	str	r0, [sp, #20]
   14230:	ldr	r0, [sp, #4]
   14234:	lsr	r0, r0, #16
   14238:	str	r0, [sp, #12]
   1423c:	ldr	r0, [sp, #24]
   14240:	ldr	r1, [sp, #20]
   14244:	mul	r0, r0, r1
   14248:	str	r0, [sp, #40]	; 0x28
   1424c:	ldr	r0, [sp, #24]
   14250:	ldr	r1, [sp, #12]
   14254:	mul	r0, r0, r1
   14258:	str	r0, [sp, #36]	; 0x24
   1425c:	ldr	r0, [sp, #16]
   14260:	ldr	r1, [sp, #20]
   14264:	mul	r0, r0, r1
   14268:	str	r0, [sp, #32]
   1426c:	ldr	r0, [sp, #16]
   14270:	ldr	r1, [sp, #12]
   14274:	mul	r0, r0, r1
   14278:	str	r0, [sp, #28]
   1427c:	ldr	r0, [sp, #40]	; 0x28
   14280:	lsr	r0, r0, #16
   14284:	ldr	r1, [sp, #36]	; 0x24
   14288:	add	r0, r1, r0
   1428c:	str	r0, [sp, #36]	; 0x24
   14290:	ldr	r0, [sp, #32]
   14294:	ldr	r1, [sp, #36]	; 0x24
   14298:	add	r0, r1, r0
   1429c:	str	r0, [sp, #36]	; 0x24
   142a0:	ldr	r0, [sp, #36]	; 0x24
   142a4:	ldr	r1, [sp, #32]
   142a8:	cmp	r0, r1
   142ac:	bcs	142bc <__assert_fail@plt+0x2e28>
   142b0:	ldr	r0, [sp, #28]
   142b4:	add	r0, r0, #65536	; 0x10000
   142b8:	str	r0, [sp, #28]
   142bc:	ldr	r0, [sp, #28]
   142c0:	ldr	r1, [sp, #36]	; 0x24
   142c4:	lsr	r1, r1, #16
   142c8:	add	r0, r0, r1
   142cc:	str	r0, [fp, #-28]	; 0xffffffe4
   142d0:	ldr	r0, [sp, #36]	; 0x24
   142d4:	lsl	r0, r0, #16
   142d8:	ldr	r1, [sp, #40]	; 0x28
   142dc:	movw	r2, #65535	; 0xffff
   142e0:	and	r1, r1, r2
   142e4:	add	r0, r0, r1
   142e8:	str	r0, [fp, #-32]	; 0xffffffe0
   142ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   142f4:	add	r0, r1, r0
   142f8:	str	r0, [fp, #-32]	; 0xffffffe0
   142fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14300:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14304:	cmp	r0, r1
   14308:	movw	r0, #0
   1430c:	movcc	r0, #1
   14310:	and	r0, r0, #1
   14314:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14318:	add	r0, r0, r1
   1431c:	str	r0, [fp, #-24]	; 0xffffffe8
   14320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14324:	ldr	r1, [fp, #-4]
   14328:	add	r2, r1, #4
   1432c:	str	r2, [fp, #-4]
   14330:	str	r0, [r1]
   14334:	ldr	r0, [fp, #-12]
   14338:	mvn	r1, #0
   1433c:	add	r0, r0, r1
   14340:	str	r0, [fp, #-12]
   14344:	cmp	r0, #0
   14348:	bne	141dc <__assert_fail@plt+0x2d48>
   1434c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14350:	mov	sp, fp
   14354:	pop	{fp, pc}
   14358:	push	{fp, lr}
   1435c:	mov	fp, sp
   14360:	sub	sp, sp, #80	; 0x50
   14364:	str	r0, [fp, #-4]
   14368:	str	r1, [fp, #-8]
   1436c:	str	r2, [fp, #-12]
   14370:	str	r3, [fp, #-16]
   14374:	ldr	r0, [fp, #-12]
   14378:	cmp	r0, #1
   1437c:	blt	14384 <__assert_fail@plt+0x2ef0>
   14380:	b	143a4 <__assert_fail@plt+0x2f10>
   14384:	movw	r0, #17069	; 0x42ad
   14388:	movt	r0, #4
   1438c:	movw	r1, #16512	; 0x4080
   14390:	movt	r1, #4
   14394:	movw	r2, #568	; 0x238
   14398:	movw	r3, #16861	; 0x41dd
   1439c:	movt	r3, #4
   143a0:	bl	11494 <__assert_fail@plt>
   143a4:	movw	r0, #0
   143a8:	str	r0, [fp, #-24]	; 0xffffffe8
   143ac:	ldr	r0, [fp, #-8]
   143b0:	add	r1, r0, #4
   143b4:	str	r1, [fp, #-8]
   143b8:	ldr	r0, [r0]
   143bc:	str	r0, [fp, #-20]	; 0xffffffec
   143c0:	movw	r0, #32
   143c4:	str	r0, [sp, #40]	; 0x28
   143c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   143cc:	str	r0, [sp, #4]
   143d0:	ldr	r0, [fp, #-16]
   143d4:	str	r0, [sp]
   143d8:	ldr	r0, [sp, #4]
   143dc:	movw	r1, #65535	; 0xffff
   143e0:	and	r0, r0, r1
   143e4:	str	r0, [sp, #20]
   143e8:	ldr	r0, [sp, #4]
   143ec:	lsr	r0, r0, #16
   143f0:	str	r0, [sp, #12]
   143f4:	ldr	r0, [sp]
   143f8:	and	r0, r0, r1
   143fc:	str	r0, [sp, #16]
   14400:	ldr	r0, [sp]
   14404:	lsr	r0, r0, #16
   14408:	str	r0, [sp, #8]
   1440c:	ldr	r0, [sp, #20]
   14410:	ldr	r1, [sp, #16]
   14414:	mul	r0, r0, r1
   14418:	str	r0, [sp, #36]	; 0x24
   1441c:	ldr	r0, [sp, #20]
   14420:	ldr	r1, [sp, #8]
   14424:	mul	r0, r0, r1
   14428:	str	r0, [sp, #32]
   1442c:	ldr	r0, [sp, #12]
   14430:	ldr	r1, [sp, #16]
   14434:	mul	r0, r0, r1
   14438:	str	r0, [sp, #28]
   1443c:	ldr	r0, [sp, #12]
   14440:	ldr	r1, [sp, #8]
   14444:	mul	r0, r0, r1
   14448:	str	r0, [sp, #24]
   1444c:	ldr	r0, [sp, #36]	; 0x24
   14450:	lsr	r0, r0, #16
   14454:	ldr	r1, [sp, #32]
   14458:	add	r0, r1, r0
   1445c:	str	r0, [sp, #32]
   14460:	ldr	r0, [sp, #28]
   14464:	ldr	r1, [sp, #32]
   14468:	add	r0, r1, r0
   1446c:	str	r0, [sp, #32]
   14470:	ldr	r0, [sp, #32]
   14474:	ldr	r1, [sp, #28]
   14478:	cmp	r0, r1
   1447c:	bcs	1448c <__assert_fail@plt+0x2ff8>
   14480:	ldr	r0, [sp, #24]
   14484:	add	r0, r0, #65536	; 0x10000
   14488:	str	r0, [sp, #24]
   1448c:	ldr	r0, [sp, #24]
   14490:	ldr	r1, [sp, #32]
   14494:	lsr	r1, r1, #16
   14498:	add	r0, r0, r1
   1449c:	str	r0, [fp, #-28]	; 0xffffffe4
   144a0:	ldr	r0, [sp, #32]
   144a4:	lsl	r0, r0, #16
   144a8:	ldr	r1, [sp, #36]	; 0x24
   144ac:	movw	r2, #65535	; 0xffff
   144b0:	and	r1, r1, r2
   144b4:	add	r0, r0, r1
   144b8:	str	r0, [fp, #-32]	; 0xffffffe0
   144bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   144c4:	add	r0, r1, r0
   144c8:	str	r0, [fp, #-32]	; 0xffffffe0
   144cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144d4:	cmp	r0, r1
   144d8:	movw	r0, #0
   144dc:	movcc	r0, #1
   144e0:	and	r0, r0, #1
   144e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144e8:	add	r0, r0, r1
   144ec:	str	r0, [fp, #-24]	; 0xffffffe8
   144f0:	ldr	r0, [fp, #-4]
   144f4:	ldr	r0, [r0]
   144f8:	str	r0, [fp, #-36]	; 0xffffffdc
   144fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14500:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14504:	add	r0, r0, r1
   14508:	str	r0, [fp, #-32]	; 0xffffffe0
   1450c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14510:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14514:	cmp	r0, r1
   14518:	movw	r0, #0
   1451c:	movcc	r0, #1
   14520:	and	r0, r0, #1
   14524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14528:	add	r0, r1, r0
   1452c:	str	r0, [fp, #-24]	; 0xffffffe8
   14530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14534:	ldr	r1, [fp, #-4]
   14538:	add	r2, r1, #4
   1453c:	str	r2, [fp, #-4]
   14540:	str	r0, [r1]
   14544:	ldr	r0, [fp, #-12]
   14548:	mvn	r1, #0
   1454c:	add	r0, r0, r1
   14550:	str	r0, [fp, #-12]
   14554:	cmp	r0, #0
   14558:	bne	143ac <__assert_fail@plt+0x2f18>
   1455c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14560:	mov	sp, fp
   14564:	pop	{fp, pc}
   14568:	push	{fp, lr}
   1456c:	mov	fp, sp
   14570:	sub	sp, sp, #80	; 0x50
   14574:	str	r0, [fp, #-4]
   14578:	str	r1, [fp, #-8]
   1457c:	str	r2, [fp, #-12]
   14580:	str	r3, [fp, #-16]
   14584:	ldr	r0, [fp, #-12]
   14588:	cmp	r0, #1
   1458c:	blt	14594 <__assert_fail@plt+0x3100>
   14590:	b	145b4 <__assert_fail@plt+0x3120>
   14594:	movw	r0, #17069	; 0x42ad
   14598:	movt	r0, #4
   1459c:	movw	r1, #16512	; 0x4080
   145a0:	movt	r1, #4
   145a4:	movw	r2, #594	; 0x252
   145a8:	movw	r3, #16925	; 0x421d
   145ac:	movt	r3, #4
   145b0:	bl	11494 <__assert_fail@plt>
   145b4:	movw	r0, #0
   145b8:	str	r0, [fp, #-24]	; 0xffffffe8
   145bc:	ldr	r0, [fp, #-8]
   145c0:	add	r1, r0, #4
   145c4:	str	r1, [fp, #-8]
   145c8:	ldr	r0, [r0]
   145cc:	str	r0, [fp, #-20]	; 0xffffffec
   145d0:	movw	r0, #32
   145d4:	str	r0, [sp, #40]	; 0x28
   145d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   145dc:	str	r0, [sp, #4]
   145e0:	ldr	r0, [fp, #-16]
   145e4:	str	r0, [sp]
   145e8:	ldr	r0, [sp, #4]
   145ec:	movw	r1, #65535	; 0xffff
   145f0:	and	r0, r0, r1
   145f4:	str	r0, [sp, #20]
   145f8:	ldr	r0, [sp, #4]
   145fc:	lsr	r0, r0, #16
   14600:	str	r0, [sp, #12]
   14604:	ldr	r0, [sp]
   14608:	and	r0, r0, r1
   1460c:	str	r0, [sp, #16]
   14610:	ldr	r0, [sp]
   14614:	lsr	r0, r0, #16
   14618:	str	r0, [sp, #8]
   1461c:	ldr	r0, [sp, #20]
   14620:	ldr	r1, [sp, #16]
   14624:	mul	r0, r0, r1
   14628:	str	r0, [sp, #36]	; 0x24
   1462c:	ldr	r0, [sp, #20]
   14630:	ldr	r1, [sp, #8]
   14634:	mul	r0, r0, r1
   14638:	str	r0, [sp, #32]
   1463c:	ldr	r0, [sp, #12]
   14640:	ldr	r1, [sp, #16]
   14644:	mul	r0, r0, r1
   14648:	str	r0, [sp, #28]
   1464c:	ldr	r0, [sp, #12]
   14650:	ldr	r1, [sp, #8]
   14654:	mul	r0, r0, r1
   14658:	str	r0, [sp, #24]
   1465c:	ldr	r0, [sp, #36]	; 0x24
   14660:	lsr	r0, r0, #16
   14664:	ldr	r1, [sp, #32]
   14668:	add	r0, r1, r0
   1466c:	str	r0, [sp, #32]
   14670:	ldr	r0, [sp, #28]
   14674:	ldr	r1, [sp, #32]
   14678:	add	r0, r1, r0
   1467c:	str	r0, [sp, #32]
   14680:	ldr	r0, [sp, #32]
   14684:	ldr	r1, [sp, #28]
   14688:	cmp	r0, r1
   1468c:	bcs	1469c <__assert_fail@plt+0x3208>
   14690:	ldr	r0, [sp, #24]
   14694:	add	r0, r0, #65536	; 0x10000
   14698:	str	r0, [sp, #24]
   1469c:	ldr	r0, [sp, #24]
   146a0:	ldr	r1, [sp, #32]
   146a4:	lsr	r1, r1, #16
   146a8:	add	r0, r0, r1
   146ac:	str	r0, [fp, #-28]	; 0xffffffe4
   146b0:	ldr	r0, [sp, #32]
   146b4:	lsl	r0, r0, #16
   146b8:	ldr	r1, [sp, #36]	; 0x24
   146bc:	movw	r2, #65535	; 0xffff
   146c0:	and	r1, r1, r2
   146c4:	add	r0, r0, r1
   146c8:	str	r0, [fp, #-32]	; 0xffffffe0
   146cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   146d4:	add	r0, r1, r0
   146d8:	str	r0, [fp, #-32]	; 0xffffffe0
   146dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   146e4:	cmp	r0, r1
   146e8:	movw	r0, #0
   146ec:	movcc	r0, #1
   146f0:	and	r0, r0, #1
   146f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146f8:	add	r0, r0, r1
   146fc:	str	r0, [fp, #-24]	; 0xffffffe8
   14700:	ldr	r0, [fp, #-4]
   14704:	ldr	r0, [r0]
   14708:	str	r0, [fp, #-36]	; 0xffffffdc
   1470c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14710:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14714:	sub	r0, r0, r1
   14718:	str	r0, [fp, #-32]	; 0xffffffe0
   1471c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14720:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14724:	cmp	r0, r1
   14728:	movw	r0, #0
   1472c:	movhi	r0, #1
   14730:	and	r0, r0, #1
   14734:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14738:	add	r0, r1, r0
   1473c:	str	r0, [fp, #-24]	; 0xffffffe8
   14740:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14744:	ldr	r1, [fp, #-4]
   14748:	add	r2, r1, #4
   1474c:	str	r2, [fp, #-4]
   14750:	str	r0, [r1]
   14754:	ldr	r0, [fp, #-12]
   14758:	mvn	r1, #0
   1475c:	add	r0, r0, r1
   14760:	str	r0, [fp, #-12]
   14764:	cmp	r0, #0
   14768:	bne	145bc <__assert_fail@plt+0x3128>
   1476c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14770:	mov	sp, fp
   14774:	pop	{fp, pc}
   14778:	push	{fp, lr}
   1477c:	mov	fp, sp
   14780:	sub	sp, sp, #16
   14784:	ldr	ip, [fp, #8]
   14788:	str	r0, [fp, #-4]
   1478c:	str	r1, [sp, #8]
   14790:	str	r2, [sp, #4]
   14794:	str	r3, [sp]
   14798:	ldr	r0, [sp, #4]
   1479c:	ldr	r1, [fp, #8]
   147a0:	cmp	r0, r1
   147a4:	blt	147ac <__assert_fail@plt+0x3318>
   147a8:	b	147cc <__assert_fail@plt+0x3338>
   147ac:	movw	r0, #16989	; 0x425d
   147b0:	movt	r0, #4
   147b4:	movw	r1, #16512	; 0x4080
   147b8:	movt	r1, #4
   147bc:	movw	r2, #618	; 0x26a
   147c0:	movw	r3, #16998	; 0x4266
   147c4:	movt	r3, #4
   147c8:	bl	11494 <__assert_fail@plt>
   147cc:	ldr	r0, [fp, #8]
   147d0:	cmp	r0, #1
   147d4:	blt	147dc <__assert_fail@plt+0x3348>
   147d8:	b	147fc <__assert_fail@plt+0x3368>
   147dc:	movw	r0, #17068	; 0x42ac
   147e0:	movt	r0, #4
   147e4:	movw	r1, #16512	; 0x4080
   147e8:	movt	r1, #4
   147ec:	movw	r2, #619	; 0x26b
   147f0:	movw	r3, #16998	; 0x4266
   147f4:	movt	r3, #4
   147f8:	bl	11494 <__assert_fail@plt>
   147fc:	ldr	r0, [fp, #-4]
   14800:	ldr	r1, [sp, #4]
   14804:	ldr	r2, [fp, #8]
   14808:	add	r1, r1, r2
   1480c:	add	r0, r0, r1, lsl #2
   14810:	ldr	r1, [sp, #8]
   14814:	cmp	r0, r1
   14818:	bls	14834 <__assert_fail@plt+0x33a0>
   1481c:	ldr	r0, [sp, #8]
   14820:	ldr	r1, [sp, #4]
   14824:	add	r0, r0, r1, lsl #2
   14828:	ldr	r1, [fp, #-4]
   1482c:	cmp	r0, r1
   14830:	bhi	14838 <__assert_fail@plt+0x33a4>
   14834:	b	14858 <__assert_fail@plt+0x33c4>
   14838:	movw	r0, #17076	; 0x42b4
   1483c:	movt	r0, #4
   14840:	movw	r1, #16512	; 0x4080
   14844:	movt	r1, #4
   14848:	movw	r2, #620	; 0x26c
   1484c:	movw	r3, #16998	; 0x4266
   14850:	movt	r3, #4
   14854:	bl	11494 <__assert_fail@plt>
   14858:	ldr	r0, [fp, #-4]
   1485c:	ldr	r1, [sp, #4]
   14860:	ldr	r2, [fp, #8]
   14864:	add	r1, r1, r2
   14868:	add	r0, r0, r1, lsl #2
   1486c:	ldr	r1, [sp]
   14870:	cmp	r0, r1
   14874:	bls	14890 <__assert_fail@plt+0x33fc>
   14878:	ldr	r0, [sp]
   1487c:	ldr	r1, [fp, #8]
   14880:	add	r0, r0, r1, lsl #2
   14884:	ldr	r1, [fp, #-4]
   14888:	cmp	r0, r1
   1488c:	bhi	14894 <__assert_fail@plt+0x3400>
   14890:	b	148b4 <__assert_fail@plt+0x3420>
   14894:	movw	r0, #17116	; 0x42dc
   14898:	movt	r0, #4
   1489c:	movw	r1, #16512	; 0x4080
   148a0:	movt	r1, #4
   148a4:	movw	r2, #621	; 0x26d
   148a8:	movw	r3, #16998	; 0x4266
   148ac:	movt	r3, #4
   148b0:	bl	11494 <__assert_fail@plt>
   148b4:	ldr	r0, [fp, #-4]
   148b8:	ldr	r1, [sp, #8]
   148bc:	ldr	r2, [sp, #4]
   148c0:	ldr	r3, [sp]
   148c4:	ldr	r3, [r3]
   148c8:	bl	14188 <__assert_fail@plt+0x2cf4>
   148cc:	ldr	r1, [fp, #-4]
   148d0:	ldr	r2, [sp, #4]
   148d4:	add	r1, r1, r2, lsl #2
   148d8:	str	r0, [r1]
   148dc:	ldr	r0, [fp, #8]
   148e0:	mvn	r1, #0
   148e4:	add	r0, r0, r1
   148e8:	str	r0, [fp, #8]
   148ec:	cmp	r0, #1
   148f0:	blt	14938 <__assert_fail@plt+0x34a4>
   148f4:	ldr	r0, [fp, #-4]
   148f8:	add	r0, r0, #4
   148fc:	str	r0, [fp, #-4]
   14900:	ldr	r0, [sp]
   14904:	add	r0, r0, #4
   14908:	str	r0, [sp]
   1490c:	ldr	r0, [fp, #-4]
   14910:	ldr	r1, [sp, #8]
   14914:	ldr	r2, [sp, #4]
   14918:	ldr	r3, [sp]
   1491c:	ldr	r3, [r3]
   14920:	bl	14358 <__assert_fail@plt+0x2ec4>
   14924:	ldr	r1, [fp, #-4]
   14928:	ldr	r2, [sp, #4]
   1492c:	add	r1, r1, r2, lsl #2
   14930:	str	r0, [r1]
   14934:	b	148dc <__assert_fail@plt+0x3448>
   14938:	ldr	r0, [fp, #-4]
   1493c:	ldr	r1, [sp, #4]
   14940:	add	r0, r0, r1, lsl #2
   14944:	ldr	r0, [r0]
   14948:	mov	sp, fp
   1494c:	pop	{fp, pc}
   14950:	push	{fp, lr}
   14954:	mov	fp, sp
   14958:	sub	sp, sp, #24
   1495c:	str	r0, [fp, #-4]
   14960:	str	r1, [fp, #-8]
   14964:	str	r2, [sp, #12]
   14968:	str	r3, [sp, #8]
   1496c:	ldr	r0, [fp, #-4]
   14970:	ldr	r1, [fp, #-8]
   14974:	ldr	r2, [sp, #8]
   14978:	ldr	r3, [sp, #12]
   1497c:	ldr	ip, [sp, #8]
   14980:	str	ip, [sp]
   14984:	bl	14778 <__assert_fail@plt+0x32e4>
   14988:	mov	sp, fp
   1498c:	pop	{fp, pc}
   14990:	push	{fp, lr}
   14994:	mov	fp, sp
   14998:	sub	sp, sp, #16
   1499c:	str	r0, [fp, #-4]
   149a0:	str	r1, [sp, #8]
   149a4:	str	r2, [sp, #4]
   149a8:	ldr	r0, [fp, #-4]
   149ac:	ldr	r1, [sp, #8]
   149b0:	ldr	r2, [sp, #4]
   149b4:	ldr	r3, [sp, #8]
   149b8:	ldr	ip, [sp, #4]
   149bc:	str	ip, [sp]
   149c0:	bl	14778 <__assert_fail@plt+0x32e4>
   149c4:	mov	sp, fp
   149c8:	pop	{fp, pc}
   149cc:	push	{fp, lr}
   149d0:	mov	fp, sp
   149d4:	sub	sp, sp, #32
   149d8:	str	r0, [fp, #-4]
   149dc:	str	r1, [fp, #-8]
   149e0:	str	r2, [fp, #-12]
   149e4:	str	r3, [sp, #16]
   149e8:	ldr	r0, [fp, #-12]
   149ec:	cmp	r0, #1
   149f0:	blt	149f8 <__assert_fail@plt+0x3564>
   149f4:	b	14a18 <__assert_fail@plt+0x3584>
   149f8:	movw	r0, #17069	; 0x42ad
   149fc:	movt	r0, #4
   14a00:	movw	r1, #16512	; 0x4080
   14a04:	movt	r1, #4
   14a08:	movw	r2, #659	; 0x293
   14a0c:	movw	r3, #17156	; 0x4304
   14a10:	movt	r3, #4
   14a14:	bl	11494 <__assert_fail@plt>
   14a18:	ldr	r0, [sp, #16]
   14a1c:	cmp	r0, #1
   14a20:	bcc	14a28 <__assert_fail@plt+0x3594>
   14a24:	b	14a48 <__assert_fail@plt+0x35b4>
   14a28:	movw	r0, #17221	; 0x4345
   14a2c:	movt	r0, #4
   14a30:	movw	r1, #16512	; 0x4080
   14a34:	movt	r1, #4
   14a38:	movw	r2, #660	; 0x294
   14a3c:	movw	r3, #17156	; 0x4304
   14a40:	movt	r3, #4
   14a44:	bl	11494 <__assert_fail@plt>
   14a48:	ldr	r0, [sp, #16]
   14a4c:	cmp	r0, #32
   14a50:	bcs	14a58 <__assert_fail@plt+0x35c4>
   14a54:	b	14a78 <__assert_fail@plt+0x35e4>
   14a58:	movw	r0, #17230	; 0x434e
   14a5c:	movt	r0, #4
   14a60:	movw	r1, #16512	; 0x4080
   14a64:	movt	r1, #4
   14a68:	movw	r2, #661	; 0x295
   14a6c:	movw	r3, #17156	; 0x4304
   14a70:	movt	r3, #4
   14a74:	bl	11494 <__assert_fail@plt>
   14a78:	ldr	r0, [fp, #-12]
   14a7c:	ldr	r1, [fp, #-8]
   14a80:	add	r0, r1, r0, lsl #2
   14a84:	str	r0, [fp, #-8]
   14a88:	ldr	r0, [fp, #-12]
   14a8c:	ldr	r1, [fp, #-4]
   14a90:	add	r0, r1, r0, lsl #2
   14a94:	str	r0, [fp, #-4]
   14a98:	ldr	r0, [sp, #16]
   14a9c:	movw	r1, #32
   14aa0:	sub	r0, r1, r0
   14aa4:	str	r0, [sp, #4]
   14aa8:	ldr	r0, [fp, #-8]
   14aac:	mvn	r1, #3
   14ab0:	add	r2, r0, r1
   14ab4:	str	r2, [fp, #-8]
   14ab8:	add	r0, r0, r1
   14abc:	ldr	r0, [r0]
   14ac0:	str	r0, [sp, #8]
   14ac4:	ldr	r0, [sp, #8]
   14ac8:	ldr	r1, [sp, #4]
   14acc:	lsr	r0, r0, r1
   14ad0:	str	r0, [sp]
   14ad4:	ldr	r0, [sp, #8]
   14ad8:	ldr	r1, [sp, #16]
   14adc:	lsl	r0, r0, r1
   14ae0:	str	r0, [sp, #12]
   14ae4:	ldr	r0, [fp, #-12]
   14ae8:	mvn	r1, #0
   14aec:	add	r0, r0, r1
   14af0:	str	r0, [fp, #-12]
   14af4:	cmp	r0, #0
   14af8:	beq	14b54 <__assert_fail@plt+0x36c0>
   14afc:	ldr	r0, [fp, #-8]
   14b00:	mvn	r1, #3
   14b04:	add	r2, r0, r1
   14b08:	str	r2, [fp, #-8]
   14b0c:	add	r0, r0, r1
   14b10:	ldr	r0, [r0]
   14b14:	str	r0, [sp, #8]
   14b18:	ldr	r0, [sp, #12]
   14b1c:	ldr	r2, [sp, #8]
   14b20:	ldr	r3, [sp, #4]
   14b24:	lsr	r2, r2, r3
   14b28:	orr	r0, r0, r2
   14b2c:	ldr	r2, [fp, #-4]
   14b30:	add	r3, r2, r1
   14b34:	str	r3, [fp, #-4]
   14b38:	add	r1, r2, r1
   14b3c:	str	r0, [r1]
   14b40:	ldr	r0, [sp, #8]
   14b44:	ldr	r1, [sp, #16]
   14b48:	lsl	r0, r0, r1
   14b4c:	str	r0, [sp, #12]
   14b50:	b	14ae4 <__assert_fail@plt+0x3650>
   14b54:	ldr	r0, [sp, #12]
   14b58:	ldr	r1, [fp, #-4]
   14b5c:	mvn	r2, #3
   14b60:	add	r3, r1, r2
   14b64:	str	r3, [fp, #-4]
   14b68:	add	r1, r1, r2
   14b6c:	str	r0, [r1]
   14b70:	ldr	r0, [sp]
   14b74:	mov	sp, fp
   14b78:	pop	{fp, pc}
   14b7c:	push	{fp, lr}
   14b80:	mov	fp, sp
   14b84:	sub	sp, sp, #32
   14b88:	str	r0, [fp, #-4]
   14b8c:	str	r1, [fp, #-8]
   14b90:	str	r2, [fp, #-12]
   14b94:	str	r3, [sp, #16]
   14b98:	ldr	r0, [fp, #-12]
   14b9c:	cmp	r0, #1
   14ba0:	blt	14ba8 <__assert_fail@plt+0x3714>
   14ba4:	b	14bc8 <__assert_fail@plt+0x3734>
   14ba8:	movw	r0, #17069	; 0x42ad
   14bac:	movt	r0, #4
   14bb0:	movw	r1, #16512	; 0x4080
   14bb4:	movt	r1, #4
   14bb8:	movw	r2, #689	; 0x2b1
   14bbc:	movw	r3, #17250	; 0x4362
   14bc0:	movt	r3, #4
   14bc4:	bl	11494 <__assert_fail@plt>
   14bc8:	ldr	r0, [sp, #16]
   14bcc:	cmp	r0, #1
   14bd0:	bcc	14bd8 <__assert_fail@plt+0x3744>
   14bd4:	b	14bf8 <__assert_fail@plt+0x3764>
   14bd8:	movw	r0, #17221	; 0x4345
   14bdc:	movt	r0, #4
   14be0:	movw	r1, #16512	; 0x4080
   14be4:	movt	r1, #4
   14be8:	movw	r2, #690	; 0x2b2
   14bec:	movw	r3, #17250	; 0x4362
   14bf0:	movt	r3, #4
   14bf4:	bl	11494 <__assert_fail@plt>
   14bf8:	ldr	r0, [sp, #16]
   14bfc:	cmp	r0, #32
   14c00:	bcs	14c08 <__assert_fail@plt+0x3774>
   14c04:	b	14c28 <__assert_fail@plt+0x3794>
   14c08:	movw	r0, #17230	; 0x434e
   14c0c:	movt	r0, #4
   14c10:	movw	r1, #16512	; 0x4080
   14c14:	movt	r1, #4
   14c18:	movw	r2, #691	; 0x2b3
   14c1c:	movw	r3, #17250	; 0x4362
   14c20:	movt	r3, #4
   14c24:	bl	11494 <__assert_fail@plt>
   14c28:	ldr	r0, [sp, #16]
   14c2c:	movw	r1, #32
   14c30:	sub	r0, r1, r0
   14c34:	str	r0, [sp, #4]
   14c38:	ldr	r0, [fp, #-8]
   14c3c:	add	r1, r0, #4
   14c40:	str	r1, [fp, #-8]
   14c44:	ldr	r0, [r0]
   14c48:	str	r0, [sp, #12]
   14c4c:	ldr	r0, [sp, #12]
   14c50:	ldr	r1, [sp, #4]
   14c54:	lsl	r0, r0, r1
   14c58:	str	r0, [sp]
   14c5c:	ldr	r0, [sp, #12]
   14c60:	ldr	r1, [sp, #16]
   14c64:	lsr	r0, r0, r1
   14c68:	str	r0, [sp, #8]
   14c6c:	ldr	r0, [fp, #-12]
   14c70:	mvn	r1, #0
   14c74:	add	r0, r0, r1
   14c78:	str	r0, [fp, #-12]
   14c7c:	cmp	r0, #0
   14c80:	beq	14cd0 <__assert_fail@plt+0x383c>
   14c84:	ldr	r0, [fp, #-8]
   14c88:	add	r1, r0, #4
   14c8c:	str	r1, [fp, #-8]
   14c90:	ldr	r0, [r0]
   14c94:	str	r0, [sp, #12]
   14c98:	ldr	r0, [sp, #8]
   14c9c:	ldr	r1, [sp, #12]
   14ca0:	ldr	r2, [sp, #4]
   14ca4:	lsl	r1, r1, r2
   14ca8:	orr	r0, r0, r1
   14cac:	ldr	r1, [fp, #-4]
   14cb0:	add	r2, r1, #4
   14cb4:	str	r2, [fp, #-4]
   14cb8:	str	r0, [r1]
   14cbc:	ldr	r0, [sp, #12]
   14cc0:	ldr	r1, [sp, #16]
   14cc4:	lsr	r0, r0, r1
   14cc8:	str	r0, [sp, #8]
   14ccc:	b	14c6c <__assert_fail@plt+0x37d8>
   14cd0:	ldr	r0, [sp, #8]
   14cd4:	ldr	r1, [fp, #-4]
   14cd8:	str	r0, [r1]
   14cdc:	ldr	r0, [sp]
   14ce0:	mov	sp, fp
   14ce4:	pop	{fp, pc}
   14ce8:	push	{fp, lr}
   14cec:	mov	fp, sp
   14cf0:	sub	sp, sp, #16
   14cf4:	str	r0, [fp, #-4]
   14cf8:	str	r1, [sp, #8]
   14cfc:	ldr	r0, [sp, #8]
   14d00:	lsr	r0, r0, #5
   14d04:	str	r0, [sp, #4]
   14d08:	ldr	r0, [fp, #-4]
   14d0c:	ldr	r1, [sp, #4]
   14d10:	add	r0, r0, r1, lsl #2
   14d14:	ldr	r0, [r0]
   14d18:	ldr	r1, [sp, #8]
   14d1c:	and	r1, r1, #31
   14d20:	mvn	r2, #0
   14d24:	lsl	r1, r2, r1
   14d28:	and	r0, r0, r1
   14d2c:	ldr	r1, [sp, #4]
   14d30:	ldr	r2, [fp, #-4]
   14d34:	ldr	r3, [sp, #4]
   14d38:	movw	ip, #0
   14d3c:	str	ip, [sp]
   14d40:	bl	14d4c <__assert_fail@plt+0x38b8>
   14d44:	mov	sp, fp
   14d48:	pop	{fp, pc}
   14d4c:	push	{fp, lr}
   14d50:	mov	fp, sp
   14d54:	sub	sp, sp, #48	; 0x30
   14d58:	ldr	ip, [fp, #8]
   14d5c:	str	r0, [fp, #-8]
   14d60:	str	r1, [fp, #-12]
   14d64:	str	r2, [fp, #-16]
   14d68:	str	r3, [fp, #-20]	; 0xffffffec
   14d6c:	ldr	r0, [fp, #8]
   14d70:	cmp	r0, #0
   14d74:	beq	14d84 <__assert_fail@plt+0x38f0>
   14d78:	ldr	r0, [fp, #8]
   14d7c:	cmn	r0, #1
   14d80:	bne	14d88 <__assert_fail@plt+0x38f4>
   14d84:	b	14da8 <__assert_fail@plt+0x3914>
   14d88:	movw	r0, #19330	; 0x4b82
   14d8c:	movt	r0, #4
   14d90:	movw	r1, #16512	; 0x4080
   14d94:	movt	r1, #4
   14d98:	movw	r2, #715	; 0x2cb
   14d9c:	movw	r3, #19360	; 0x4ba0
   14da0:	movt	r3, #4
   14da4:	bl	11494 <__assert_fail@plt>
   14da8:	ldr	r0, [fp, #-12]
   14dac:	movw	r1, #0
   14db0:	cmp	r1, r0
   14db4:	bgt	14dcc <__assert_fail@plt+0x3938>
   14db8:	ldr	r0, [fp, #-12]
   14dbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14dc0:	cmp	r0, r1
   14dc4:	bgt	14dcc <__assert_fail@plt+0x3938>
   14dc8:	b	14dec <__assert_fail@plt+0x3958>
   14dcc:	movw	r0, #19443	; 0x4bf3
   14dd0:	movt	r0, #4
   14dd4:	movw	r1, #16512	; 0x4080
   14dd8:	movt	r1, #4
   14ddc:	movw	r2, #716	; 0x2cc
   14de0:	movw	r3, #19360	; 0x4ba0
   14de4:	movt	r3, #4
   14de8:	bl	11494 <__assert_fail@plt>
   14dec:	b	14df0 <__assert_fail@plt+0x395c>
   14df0:	ldr	r0, [fp, #-8]
   14df4:	cmp	r0, #0
   14df8:	bne	14e68 <__assert_fail@plt+0x39d4>
   14dfc:	ldr	r0, [fp, #-12]
   14e00:	add	r0, r0, #1
   14e04:	str	r0, [fp, #-12]
   14e08:	ldr	r0, [fp, #-12]
   14e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e10:	cmp	r0, r1
   14e14:	bne	14e48 <__assert_fail@plt+0x39b4>
   14e18:	ldr	r0, [fp, #8]
   14e1c:	cmp	r0, #0
   14e20:	bne	14e30 <__assert_fail@plt+0x399c>
   14e24:	mvn	r0, #0
   14e28:	str	r0, [sp]
   14e2c:	b	14e3c <__assert_fail@plt+0x39a8>
   14e30:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e34:	lsl	r0, r0, #5
   14e38:	str	r0, [sp]
   14e3c:	ldr	r0, [sp]
   14e40:	str	r0, [fp, #-4]
   14e44:	b	14f44 <__assert_fail@plt+0x3ab0>
   14e48:	ldr	r0, [fp, #8]
   14e4c:	ldr	r1, [fp, #-16]
   14e50:	ldr	r2, [fp, #-12]
   14e54:	add	r1, r1, r2, lsl #2
   14e58:	ldr	r1, [r1]
   14e5c:	eor	r0, r0, r1
   14e60:	str	r0, [fp, #-8]
   14e64:	b	14df0 <__assert_fail@plt+0x395c>
   14e68:	b	14e6c <__assert_fail@plt+0x39d8>
   14e6c:	ldr	r0, [fp, #-8]
   14e70:	str	r0, [sp, #20]
   14e74:	movw	r0, #0
   14e78:	str	r0, [sp, #16]
   14e7c:	ldr	r0, [sp, #20]
   14e80:	ldr	r1, [sp, #20]
   14e84:	movw	r2, #0
   14e88:	sub	r1, r2, r1
   14e8c:	and	r0, r0, r1
   14e90:	str	r0, [sp, #12]
   14e94:	str	r2, [sp, #8]
   14e98:	movw	r0, #8
   14e9c:	str	r0, [sp, #4]
   14ea0:	ldr	r0, [sp, #4]
   14ea4:	movw	r1, #32
   14ea8:	cmp	r1, r0
   14eac:	bls	14ee8 <__assert_fail@plt+0x3a54>
   14eb0:	b	14eb4 <__assert_fail@plt+0x3a20>
   14eb4:	ldr	r0, [sp, #12]
   14eb8:	and	r0, r0, #-16777216	; 0xff000000
   14ebc:	cmp	r0, #0
   14ec0:	bne	14ee4 <__assert_fail@plt+0x3a50>
   14ec4:	ldr	r0, [sp, #4]
   14ec8:	ldr	r1, [sp, #12]
   14ecc:	lsl	r0, r1, r0
   14ed0:	str	r0, [sp, #12]
   14ed4:	ldr	r0, [sp, #8]
   14ed8:	add	r0, r0, #8
   14edc:	str	r0, [sp, #8]
   14ee0:	b	14eb4 <__assert_fail@plt+0x3a20>
   14ee4:	b	14ee8 <__assert_fail@plt+0x3a54>
   14ee8:	b	14eec <__assert_fail@plt+0x3a58>
   14eec:	ldr	r0, [sp, #12]
   14ef0:	and	r0, r0, #-2147483648	; 0x80000000
   14ef4:	cmp	r0, #0
   14ef8:	bne	14f18 <__assert_fail@plt+0x3a84>
   14efc:	ldr	r0, [sp, #12]
   14f00:	lsl	r0, r0, #1
   14f04:	str	r0, [sp, #12]
   14f08:	ldr	r0, [sp, #8]
   14f0c:	add	r0, r0, #1
   14f10:	str	r0, [sp, #8]
   14f14:	b	14eec <__assert_fail@plt+0x3a58>
   14f18:	ldr	r0, [sp, #8]
   14f1c:	str	r0, [sp, #16]
   14f20:	ldr	r0, [sp, #16]
   14f24:	movw	r1, #31
   14f28:	sub	r0, r1, r0
   14f2c:	str	r0, [sp, #24]
   14f30:	ldr	r0, [fp, #-12]
   14f34:	lsl	r0, r0, #5
   14f38:	ldr	r1, [sp, #24]
   14f3c:	add	r0, r0, r1
   14f40:	str	r0, [fp, #-4]
   14f44:	ldr	r0, [fp, #-4]
   14f48:	mov	sp, fp
   14f4c:	pop	{fp, pc}
   14f50:	push	{fp, lr}
   14f54:	mov	fp, sp
   14f58:	sub	sp, sp, #24
   14f5c:	str	r0, [fp, #-4]
   14f60:	str	r1, [fp, #-8]
   14f64:	ldr	r0, [fp, #-8]
   14f68:	lsr	r0, r0, #5
   14f6c:	str	r0, [sp, #12]
   14f70:	ldr	r0, [fp, #-4]
   14f74:	ldr	r1, [sp, #12]
   14f78:	add	r0, r0, r1, lsl #2
   14f7c:	ldr	r0, [r0]
   14f80:	mvn	r1, #0
   14f84:	eor	r0, r0, r1
   14f88:	ldr	r2, [fp, #-8]
   14f8c:	and	r2, r2, #31
   14f90:	lsl	r2, r1, r2
   14f94:	and	r0, r0, r2
   14f98:	ldr	r2, [sp, #12]
   14f9c:	ldr	r3, [fp, #-4]
   14fa0:	ldr	ip, [sp, #12]
   14fa4:	str	r1, [sp, #8]
   14fa8:	mov	r1, r2
   14fac:	mov	r2, r3
   14fb0:	mov	r3, ip
   14fb4:	ldr	ip, [sp, #8]
   14fb8:	str	ip, [sp]
   14fbc:	bl	14d4c <__assert_fail@plt+0x38b8>
   14fc0:	mov	sp, fp
   14fc4:	pop	{fp, pc}
   14fc8:	sub	sp, sp, #12
   14fcc:	str	r0, [sp, #8]
   14fd0:	str	r1, [sp, #4]
   14fd4:	str	r2, [sp]
   14fd8:	ldr	r0, [sp]
   14fdc:	mvn	r1, #0
   14fe0:	add	r0, r0, r1
   14fe4:	str	r0, [sp]
   14fe8:	cmp	r0, #0
   14fec:	blt	1501c <__assert_fail@plt+0x3b88>
   14ff0:	ldr	r0, [sp, #4]
   14ff4:	add	r1, r0, #4
   14ff8:	str	r1, [sp, #4]
   14ffc:	ldr	r0, [r0]
   15000:	mvn	r1, #0
   15004:	eor	r0, r0, r1
   15008:	ldr	r1, [sp, #8]
   1500c:	add	r2, r1, #4
   15010:	str	r2, [sp, #8]
   15014:	str	r0, [r1]
   15018:	b	14fd8 <__assert_fail@plt+0x3b44>
   1501c:	add	sp, sp, #12
   15020:	bx	lr
   15024:	push	{fp, lr}
   15028:	mov	fp, sp
   1502c:	sub	sp, sp, #16
   15030:	str	r0, [sp, #8]
   15034:	str	r1, [sp, #4]
   15038:	str	r2, [sp]
   1503c:	ldr	r0, [sp, #4]
   15040:	ldr	r0, [r0]
   15044:	cmp	r0, #0
   15048:	bne	15098 <__assert_fail@plt+0x3c04>
   1504c:	ldr	r0, [sp, #8]
   15050:	movw	r1, #0
   15054:	str	r1, [r0]
   15058:	ldr	r0, [sp]
   1505c:	mvn	r1, #0
   15060:	add	r0, r0, r1
   15064:	str	r0, [sp]
   15068:	cmp	r0, #0
   1506c:	bne	1507c <__assert_fail@plt+0x3be8>
   15070:	movw	r0, #0
   15074:	str	r0, [fp, #-4]
   15078:	b	150e4 <__assert_fail@plt+0x3c50>
   1507c:	ldr	r0, [sp, #4]
   15080:	add	r0, r0, #4
   15084:	str	r0, [sp, #4]
   15088:	ldr	r0, [sp, #8]
   1508c:	add	r0, r0, #4
   15090:	str	r0, [sp, #8]
   15094:	b	1503c <__assert_fail@plt+0x3ba8>
   15098:	ldr	r0, [sp, #4]
   1509c:	ldr	r0, [r0]
   150a0:	movw	r1, #0
   150a4:	sub	r0, r1, r0
   150a8:	ldr	r1, [sp, #8]
   150ac:	str	r0, [r1]
   150b0:	ldr	r0, [sp, #8]
   150b4:	add	r0, r0, #4
   150b8:	str	r0, [sp, #8]
   150bc:	ldr	r1, [sp, #4]
   150c0:	add	r1, r1, #4
   150c4:	str	r1, [sp, #4]
   150c8:	ldr	r2, [sp]
   150cc:	mvn	r3, #0
   150d0:	add	r2, r2, r3
   150d4:	str	r2, [sp]
   150d8:	bl	14fc8 <__assert_fail@plt+0x3b34>
   150dc:	movw	r0, #1
   150e0:	str	r0, [fp, #-4]
   150e4:	ldr	r0, [fp, #-4]
   150e8:	mov	sp, fp
   150ec:	pop	{fp, pc}
   150f0:	sub	sp, sp, #88	; 0x58
   150f4:	str	r0, [sp, #84]	; 0x54
   150f8:	str	r1, [sp, #80]	; 0x50
   150fc:	ldr	r0, [sp, #84]	; 0x54
   15100:	movw	r1, #65535	; 0xffff
   15104:	and	r0, r0, r1
   15108:	str	r0, [sp, #60]	; 0x3c
   1510c:	ldr	r0, [sp, #84]	; 0x54
   15110:	lsr	r0, r0, #16
   15114:	str	r0, [sp, #56]	; 0x38
   15118:	ldr	r0, [sp, #84]	; 0x54
   1511c:	mvn	r2, #0
   15120:	eor	r0, r0, r2
   15124:	ldr	r3, [sp, #56]	; 0x38
   15128:	udiv	r0, r0, r3
   1512c:	str	r0, [sp, #52]	; 0x34
   15130:	ldr	r0, [sp, #84]	; 0x54
   15134:	eor	r0, r0, r2
   15138:	ldr	r2, [sp, #52]	; 0x34
   1513c:	ldr	r3, [sp, #56]	; 0x38
   15140:	mul	r2, r2, r3
   15144:	sub	r0, r0, r2
   15148:	lsl	r0, r0, #16
   1514c:	orr	r0, r0, r1
   15150:	str	r0, [sp, #76]	; 0x4c
   15154:	ldr	r0, [sp, #52]	; 0x34
   15158:	ldr	r1, [sp, #60]	; 0x3c
   1515c:	mul	r0, r0, r1
   15160:	str	r0, [sp, #68]	; 0x44
   15164:	ldr	r0, [sp, #76]	; 0x4c
   15168:	ldr	r1, [sp, #68]	; 0x44
   1516c:	cmp	r0, r1
   15170:	bcs	151dc <__assert_fail@plt+0x3d48>
   15174:	ldr	r0, [sp, #52]	; 0x34
   15178:	mvn	r1, #0
   1517c:	add	r0, r0, r1
   15180:	str	r0, [sp, #52]	; 0x34
   15184:	ldr	r0, [sp, #84]	; 0x54
   15188:	ldr	r1, [sp, #76]	; 0x4c
   1518c:	add	r0, r1, r0
   15190:	str	r0, [sp, #76]	; 0x4c
   15194:	ldr	r0, [sp, #76]	; 0x4c
   15198:	ldr	r1, [sp, #84]	; 0x54
   1519c:	cmp	r0, r1
   151a0:	bcc	151d8 <__assert_fail@plt+0x3d44>
   151a4:	ldr	r0, [sp, #76]	; 0x4c
   151a8:	ldr	r1, [sp, #68]	; 0x44
   151ac:	cmp	r0, r1
   151b0:	bcs	151d4 <__assert_fail@plt+0x3d40>
   151b4:	ldr	r0, [sp, #52]	; 0x34
   151b8:	mvn	r1, #0
   151bc:	add	r0, r0, r1
   151c0:	str	r0, [sp, #52]	; 0x34
   151c4:	ldr	r0, [sp, #84]	; 0x54
   151c8:	ldr	r1, [sp, #76]	; 0x4c
   151cc:	add	r0, r1, r0
   151d0:	str	r0, [sp, #76]	; 0x4c
   151d4:	b	151d8 <__assert_fail@plt+0x3d44>
   151d8:	b	151dc <__assert_fail@plt+0x3d48>
   151dc:	ldr	r0, [sp, #68]	; 0x44
   151e0:	ldr	r1, [sp, #76]	; 0x4c
   151e4:	sub	r0, r1, r0
   151e8:	str	r0, [sp, #76]	; 0x4c
   151ec:	ldr	r0, [sp, #76]	; 0x4c
   151f0:	lsr	r0, r0, #16
   151f4:	ldr	r1, [sp, #52]	; 0x34
   151f8:	mul	r0, r0, r1
   151fc:	ldr	r1, [sp, #76]	; 0x4c
   15200:	add	r0, r0, r1
   15204:	str	r0, [sp, #68]	; 0x44
   15208:	ldr	r0, [sp, #68]	; 0x44
   1520c:	lsr	r0, r0, #16
   15210:	add	r0, r0, #1
   15214:	str	r0, [sp, #64]	; 0x40
   15218:	ldr	r0, [sp, #76]	; 0x4c
   1521c:	lsl	r0, r0, #16
   15220:	movw	r1, #65535	; 0xffff
   15224:	add	r0, r0, r1
   15228:	ldr	r1, [sp, #64]	; 0x40
   1522c:	ldr	r2, [sp, #84]	; 0x54
   15230:	mul	r1, r1, r2
   15234:	sub	r0, r0, r1
   15238:	str	r0, [sp, #76]	; 0x4c
   1523c:	ldr	r0, [sp, #76]	; 0x4c
   15240:	ldr	r1, [sp, #68]	; 0x44
   15244:	lsl	r1, r1, #16
   15248:	mvn	r2, #0
   1524c:	and	r1, r1, r2
   15250:	cmp	r0, r1
   15254:	bcc	15278 <__assert_fail@plt+0x3de4>
   15258:	ldr	r0, [sp, #64]	; 0x40
   1525c:	mvn	r1, #0
   15260:	add	r0, r0, r1
   15264:	str	r0, [sp, #64]	; 0x40
   15268:	ldr	r0, [sp, #84]	; 0x54
   1526c:	ldr	r1, [sp, #76]	; 0x4c
   15270:	add	r0, r1, r0
   15274:	str	r0, [sp, #76]	; 0x4c
   15278:	ldr	r0, [sp, #52]	; 0x34
   1527c:	lsl	r0, r0, #16
   15280:	ldr	r1, [sp, #64]	; 0x40
   15284:	add	r0, r0, r1
   15288:	str	r0, [sp, #72]	; 0x48
   1528c:	ldr	r0, [sp, #76]	; 0x4c
   15290:	ldr	r1, [sp, #84]	; 0x54
   15294:	cmp	r0, r1
   15298:	bcc	152b8 <__assert_fail@plt+0x3e24>
   1529c:	ldr	r0, [sp, #72]	; 0x48
   152a0:	add	r0, r0, #1
   152a4:	str	r0, [sp, #72]	; 0x48
   152a8:	ldr	r0, [sp, #84]	; 0x54
   152ac:	ldr	r1, [sp, #76]	; 0x4c
   152b0:	sub	r0, r1, r0
   152b4:	str	r0, [sp, #76]	; 0x4c
   152b8:	ldr	r0, [sp, #80]	; 0x50
   152bc:	cmp	r0, #0
   152c0:	bls	154d4 <__assert_fail@plt+0x4040>
   152c4:	ldr	r0, [sp, #76]	; 0x4c
   152c8:	mvn	r1, #0
   152cc:	eor	r0, r0, r1
   152d0:	str	r0, [sp, #76]	; 0x4c
   152d4:	ldr	r0, [sp, #80]	; 0x50
   152d8:	ldr	r1, [sp, #76]	; 0x4c
   152dc:	add	r0, r1, r0
   152e0:	str	r0, [sp, #76]	; 0x4c
   152e4:	ldr	r0, [sp, #76]	; 0x4c
   152e8:	ldr	r1, [sp, #80]	; 0x50
   152ec:	cmp	r0, r1
   152f0:	bcs	15344 <__assert_fail@plt+0x3eb0>
   152f4:	ldr	r0, [sp, #72]	; 0x48
   152f8:	mvn	r1, #0
   152fc:	add	r0, r0, r1
   15300:	str	r0, [sp, #72]	; 0x48
   15304:	ldr	r0, [sp, #76]	; 0x4c
   15308:	ldr	r1, [sp, #84]	; 0x54
   1530c:	cmp	r0, r1
   15310:	bcc	15334 <__assert_fail@plt+0x3ea0>
   15314:	ldr	r0, [sp, #72]	; 0x48
   15318:	mvn	r1, #0
   1531c:	add	r0, r0, r1
   15320:	str	r0, [sp, #72]	; 0x48
   15324:	ldr	r0, [sp, #84]	; 0x54
   15328:	ldr	r1, [sp, #76]	; 0x4c
   1532c:	sub	r0, r1, r0
   15330:	str	r0, [sp, #76]	; 0x4c
   15334:	ldr	r0, [sp, #84]	; 0x54
   15338:	ldr	r1, [sp, #76]	; 0x4c
   1533c:	sub	r0, r1, r0
   15340:	str	r0, [sp, #76]	; 0x4c
   15344:	b	15348 <__assert_fail@plt+0x3eb4>
   15348:	movw	r0, #32
   1534c:	str	r0, [sp, #40]	; 0x28
   15350:	ldr	r0, [sp, #80]	; 0x50
   15354:	str	r0, [sp, #4]
   15358:	ldr	r0, [sp, #72]	; 0x48
   1535c:	str	r0, [sp]
   15360:	ldr	r0, [sp, #4]
   15364:	movw	r1, #65535	; 0xffff
   15368:	and	r0, r0, r1
   1536c:	str	r0, [sp, #20]
   15370:	ldr	r0, [sp, #4]
   15374:	lsr	r0, r0, #16
   15378:	str	r0, [sp, #12]
   1537c:	ldr	r0, [sp]
   15380:	and	r0, r0, r1
   15384:	str	r0, [sp, #16]
   15388:	ldr	r0, [sp]
   1538c:	lsr	r0, r0, #16
   15390:	str	r0, [sp, #8]
   15394:	ldr	r0, [sp, #20]
   15398:	ldr	r1, [sp, #16]
   1539c:	mul	r0, r0, r1
   153a0:	str	r0, [sp, #36]	; 0x24
   153a4:	ldr	r0, [sp, #20]
   153a8:	ldr	r1, [sp, #8]
   153ac:	mul	r0, r0, r1
   153b0:	str	r0, [sp, #32]
   153b4:	ldr	r0, [sp, #12]
   153b8:	ldr	r1, [sp, #16]
   153bc:	mul	r0, r0, r1
   153c0:	str	r0, [sp, #28]
   153c4:	ldr	r0, [sp, #12]
   153c8:	ldr	r1, [sp, #8]
   153cc:	mul	r0, r0, r1
   153d0:	str	r0, [sp, #24]
   153d4:	ldr	r0, [sp, #36]	; 0x24
   153d8:	lsr	r0, r0, #16
   153dc:	ldr	r1, [sp, #32]
   153e0:	add	r0, r1, r0
   153e4:	str	r0, [sp, #32]
   153e8:	ldr	r0, [sp, #28]
   153ec:	ldr	r1, [sp, #32]
   153f0:	add	r0, r1, r0
   153f4:	str	r0, [sp, #32]
   153f8:	ldr	r0, [sp, #32]
   153fc:	ldr	r1, [sp, #28]
   15400:	cmp	r0, r1
   15404:	bcs	15414 <__assert_fail@plt+0x3f80>
   15408:	ldr	r0, [sp, #24]
   1540c:	add	r0, r0, #65536	; 0x10000
   15410:	str	r0, [sp, #24]
   15414:	ldr	r0, [sp, #24]
   15418:	ldr	r1, [sp, #32]
   1541c:	lsr	r1, r1, #16
   15420:	add	r0, r0, r1
   15424:	str	r0, [sp, #48]	; 0x30
   15428:	ldr	r0, [sp, #32]
   1542c:	lsl	r0, r0, #16
   15430:	ldr	r1, [sp, #36]	; 0x24
   15434:	movw	r2, #65535	; 0xffff
   15438:	and	r1, r1, r2
   1543c:	add	r0, r0, r1
   15440:	str	r0, [sp, #44]	; 0x2c
   15444:	ldr	r0, [sp, #48]	; 0x30
   15448:	ldr	r1, [sp, #76]	; 0x4c
   1544c:	add	r0, r1, r0
   15450:	str	r0, [sp, #76]	; 0x4c
   15454:	ldr	r0, [sp, #76]	; 0x4c
   15458:	ldr	r1, [sp, #48]	; 0x30
   1545c:	cmp	r0, r1
   15460:	bcs	154d0 <__assert_fail@plt+0x403c>
   15464:	ldr	r0, [sp, #72]	; 0x48
   15468:	mvn	r1, #0
   1546c:	add	r0, r0, r1
   15470:	str	r0, [sp, #72]	; 0x48
   15474:	ldr	r0, [sp, #76]	; 0x4c
   15478:	ldr	r1, [sp, #84]	; 0x54
   1547c:	cmp	r0, r1
   15480:	movw	r0, #0
   15484:	movhi	r0, #1
   15488:	and	r0, r0, #1
   1548c:	ldr	r1, [sp, #76]	; 0x4c
   15490:	ldr	r2, [sp, #84]	; 0x54
   15494:	cmp	r1, r2
   15498:	movw	r1, #0
   1549c:	moveq	r1, #1
   154a0:	and	r1, r1, #1
   154a4:	ldr	r2, [sp, #44]	; 0x2c
   154a8:	ldr	r3, [sp, #80]	; 0x50
   154ac:	cmp	r2, r3
   154b0:	movw	r2, #0
   154b4:	movhi	r2, #1
   154b8:	and	r2, r2, #1
   154bc:	and	r1, r1, r2
   154c0:	orr	r0, r0, r1
   154c4:	ldr	r1, [sp, #72]	; 0x48
   154c8:	sub	r0, r1, r0
   154cc:	str	r0, [sp, #72]	; 0x48
   154d0:	b	154d4 <__assert_fail@plt+0x4040>
   154d4:	ldr	r0, [sp, #72]	; 0x48
   154d8:	add	sp, sp, #88	; 0x58
   154dc:	bx	lr
   154e0:	push	{fp, lr}
   154e4:	mov	fp, sp
   154e8:	sub	sp, sp, #40	; 0x28
   154ec:	str	r0, [fp, #-8]
   154f0:	str	r1, [fp, #-12]
   154f4:	str	r2, [fp, #-16]
   154f8:	str	r3, [sp, #20]
   154fc:	ldr	r0, [sp, #20]
   15500:	cmp	r0, #0
   15504:	ble	1550c <__assert_fail@plt+0x4078>
   15508:	b	1552c <__assert_fail@plt+0x4098>
   1550c:	movw	r0, #17315	; 0x43a3
   15510:	movt	r0, #4
   15514:	movw	r1, #16512	; 0x4080
   15518:	movt	r1, #4
   1551c:	movw	r2, #1316	; 0x524
   15520:	movw	r3, #17322	; 0x43aa
   15524:	movt	r3, #4
   15528:	bl	11494 <__assert_fail@plt>
   1552c:	ldr	r0, [fp, #-16]
   15530:	ldr	r1, [sp, #20]
   15534:	sub	r1, r1, #1
   15538:	add	r0, r0, r1, lsl #2
   1553c:	ldr	r0, [r0]
   15540:	cmp	r0, #0
   15544:	bls	1554c <__assert_fail@plt+0x40b8>
   15548:	b	1556c <__assert_fail@plt+0x40d8>
   1554c:	movw	r0, #17382	; 0x43e6
   15550:	movt	r0, #4
   15554:	movw	r1, #16512	; 0x4080
   15558:	movt	r1, #4
   1555c:	movw	r2, #1317	; 0x525
   15560:	movw	r3, #17322	; 0x43aa
   15564:	movt	r3, #4
   15568:	bl	11494 <__assert_fail@plt>
   1556c:	ldr	r0, [fp, #-12]
   15570:	bl	155e4 <__assert_fail@plt+0x4150>
   15574:	str	r0, [sp, #16]
   15578:	ldr	r0, [sp, #16]
   1557c:	cmp	r0, #0
   15580:	beq	155a0 <__assert_fail@plt+0x410c>
   15584:	ldr	r0, [fp, #-8]
   15588:	ldr	r1, [sp, #16]
   1558c:	ldr	r2, [fp, #-16]
   15590:	ldr	r3, [sp, #20]
   15594:	bl	156e4 <__assert_fail@plt+0x4250>
   15598:	str	r0, [fp, #-4]
   1559c:	b	155d8 <__assert_fail@plt+0x4144>
   155a0:	ldr	r1, [fp, #-12]
   155a4:	add	r0, sp, #8
   155a8:	bl	15834 <__assert_fail@plt+0x43a0>
   155ac:	ldr	r0, [fp, #-8]
   155b0:	ldr	r1, [fp, #-12]
   155b4:	ldr	r3, [fp, #-16]
   155b8:	ldr	r2, [sp, #20]
   155bc:	add	ip, sp, #8
   155c0:	str	r2, [sp, #4]
   155c4:	mov	r2, ip
   155c8:	ldr	ip, [sp, #4]
   155cc:	str	ip, [sp]
   155d0:	bl	158b0 <__assert_fail@plt+0x441c>
   155d4:	str	r0, [fp, #-4]
   155d8:	ldr	r0, [fp, #-4]
   155dc:	mov	sp, fp
   155e0:	pop	{fp, pc}
   155e4:	sub	sp, sp, #12
   155e8:	str	r0, [sp, #4]
   155ec:	ldr	r0, [sp, #4]
   155f0:	cmp	r0, #2
   155f4:	str	r0, [sp]
   155f8:	beq	15670 <__assert_fail@plt+0x41dc>
   155fc:	b	15600 <__assert_fail@plt+0x416c>
   15600:	ldr	r0, [sp]
   15604:	cmp	r0, #4
   15608:	beq	1567c <__assert_fail@plt+0x41e8>
   1560c:	b	15610 <__assert_fail@plt+0x417c>
   15610:	ldr	r0, [sp]
   15614:	cmp	r0, #8
   15618:	beq	15688 <__assert_fail@plt+0x41f4>
   1561c:	b	15620 <__assert_fail@plt+0x418c>
   15620:	ldr	r0, [sp]
   15624:	cmp	r0, #16
   15628:	beq	15694 <__assert_fail@plt+0x4200>
   1562c:	b	15630 <__assert_fail@plt+0x419c>
   15630:	ldr	r0, [sp]
   15634:	cmp	r0, #32
   15638:	beq	156a0 <__assert_fail@plt+0x420c>
   1563c:	b	15640 <__assert_fail@plt+0x41ac>
   15640:	ldr	r0, [sp]
   15644:	cmp	r0, #64	; 0x40
   15648:	beq	156ac <__assert_fail@plt+0x4218>
   1564c:	b	15650 <__assert_fail@plt+0x41bc>
   15650:	ldr	r0, [sp]
   15654:	cmp	r0, #128	; 0x80
   15658:	beq	156b8 <__assert_fail@plt+0x4224>
   1565c:	b	15660 <__assert_fail@plt+0x41cc>
   15660:	ldr	r0, [sp]
   15664:	cmp	r0, #256	; 0x100
   15668:	beq	156c4 <__assert_fail@plt+0x4230>
   1566c:	b	156d0 <__assert_fail@plt+0x423c>
   15670:	movw	r0, #1
   15674:	str	r0, [sp, #8]
   15678:	b	156d8 <__assert_fail@plt+0x4244>
   1567c:	movw	r0, #2
   15680:	str	r0, [sp, #8]
   15684:	b	156d8 <__assert_fail@plt+0x4244>
   15688:	movw	r0, #3
   1568c:	str	r0, [sp, #8]
   15690:	b	156d8 <__assert_fail@plt+0x4244>
   15694:	movw	r0, #4
   15698:	str	r0, [sp, #8]
   1569c:	b	156d8 <__assert_fail@plt+0x4244>
   156a0:	movw	r0, #5
   156a4:	str	r0, [sp, #8]
   156a8:	b	156d8 <__assert_fail@plt+0x4244>
   156ac:	movw	r0, #6
   156b0:	str	r0, [sp, #8]
   156b4:	b	156d8 <__assert_fail@plt+0x4244>
   156b8:	movw	r0, #7
   156bc:	str	r0, [sp, #8]
   156c0:	b	156d8 <__assert_fail@plt+0x4244>
   156c4:	movw	r0, #8
   156c8:	str	r0, [sp, #8]
   156cc:	b	156d8 <__assert_fail@plt+0x4244>
   156d0:	movw	r0, #0
   156d4:	str	r0, [sp, #8]
   156d8:	ldr	r0, [sp, #8]
   156dc:	add	sp, sp, #12
   156e0:	bx	lr
   156e4:	push	{fp, lr}
   156e8:	mov	fp, sp
   156ec:	sub	sp, sp, #48	; 0x30
   156f0:	str	r0, [fp, #-4]
   156f4:	str	r1, [fp, #-8]
   156f8:	str	r2, [fp, #-12]
   156fc:	str	r3, [fp, #-16]
   15700:	ldr	r0, [fp, #-16]
   15704:	sub	r0, r0, #1
   15708:	lsl	r1, r0, #5
   1570c:	ldr	r2, [fp, #-12]
   15710:	add	r0, r2, r0, lsl #2
   15714:	ldr	r0, [r0]
   15718:	str	r1, [sp, #4]
   1571c:	bl	1d930 <__assert_fail@plt+0xc49c>
   15720:	ldr	r1, [sp, #4]
   15724:	add	r0, r1, r0
   15728:	ldr	r1, [fp, #-8]
   1572c:	add	r0, r0, r1
   15730:	sub	r0, r0, #1
   15734:	ldr	r1, [fp, #-8]
   15738:	udiv	r0, r0, r1
   1573c:	str	r0, [sp, #24]
   15740:	ldr	r0, [fp, #-8]
   15744:	movw	r1, #1
   15748:	lsl	r0, r1, r0
   1574c:	sub	r0, r0, #1
   15750:	strb	r0, [fp, #-17]	; 0xffffffef
   15754:	movw	r0, #0
   15758:	str	r0, [sp, #16]
   1575c:	ldr	r1, [sp, #24]
   15760:	str	r1, [sp, #20]
   15764:	str	r0, [sp, #12]
   15768:	ldr	r0, [sp, #20]
   1576c:	mvn	r1, #0
   15770:	add	r1, r0, r1
   15774:	str	r1, [sp, #20]
   15778:	cmp	r0, #0
   1577c:	bls	15828 <__assert_fail@plt+0x4394>
   15780:	ldr	r0, [fp, #-12]
   15784:	ldr	r1, [sp, #16]
   15788:	add	r0, r0, r1, lsl #2
   1578c:	ldr	r0, [r0]
   15790:	ldr	r1, [sp, #12]
   15794:	lsr	r0, r0, r1
   15798:	strb	r0, [sp, #11]
   1579c:	ldr	r0, [fp, #-8]
   157a0:	ldr	r1, [sp, #12]
   157a4:	add	r0, r1, r0
   157a8:	str	r0, [sp, #12]
   157ac:	ldr	r0, [sp, #12]
   157b0:	cmp	r0, #32
   157b4:	bcc	15808 <__assert_fail@plt+0x4374>
   157b8:	ldr	r0, [sp, #16]
   157bc:	add	r0, r0, #1
   157c0:	str	r0, [sp, #16]
   157c4:	ldr	r1, [fp, #-16]
   157c8:	cmp	r0, r1
   157cc:	bge	15808 <__assert_fail@plt+0x4374>
   157d0:	ldr	r0, [sp, #12]
   157d4:	sub	r0, r0, #32
   157d8:	str	r0, [sp, #12]
   157dc:	ldr	r0, [fp, #-12]
   157e0:	ldr	r1, [sp, #16]
   157e4:	add	r0, r0, r1, lsl #2
   157e8:	ldr	r0, [r0]
   157ec:	ldr	r1, [fp, #-8]
   157f0:	ldr	r2, [sp, #12]
   157f4:	sub	r1, r1, r2
   157f8:	lsl	r0, r0, r1
   157fc:	ldrb	r1, [sp, #11]
   15800:	orr	r0, r1, r0
   15804:	strb	r0, [sp, #11]
   15808:	ldrb	r0, [sp, #11]
   1580c:	ldrb	r1, [fp, #-17]	; 0xffffffef
   15810:	and	r0, r0, r1
   15814:	ldr	r1, [fp, #-4]
   15818:	ldr	r2, [sp, #20]
   1581c:	add	r1, r1, r2
   15820:	strb	r0, [r1]
   15824:	b	15768 <__assert_fail@plt+0x42d4>
   15828:	ldr	r0, [sp, #24]
   1582c:	mov	sp, fp
   15830:	pop	{fp, pc}
   15834:	sub	sp, sp, #20
   15838:	str	r0, [sp, #16]
   1583c:	str	r1, [sp, #12]
   15840:	ldr	r0, [sp, #12]
   15844:	mvn	r1, #0
   15848:	udiv	r0, r1, r0
   1584c:	str	r0, [sp, #8]
   15850:	movw	r0, #1
   15854:	str	r0, [sp]
   15858:	ldr	r0, [sp, #12]
   1585c:	str	r0, [sp, #4]
   15860:	ldr	r0, [sp, #4]
   15864:	ldr	r1, [sp, #8]
   15868:	cmp	r0, r1
   1586c:	bhi	15890 <__assert_fail@plt+0x43fc>
   15870:	ldr	r0, [sp, #12]
   15874:	ldr	r1, [sp, #4]
   15878:	mul	r0, r1, r0
   1587c:	str	r0, [sp, #4]
   15880:	ldr	r0, [sp]
   15884:	add	r0, r0, #1
   15888:	str	r0, [sp]
   1588c:	b	15860 <__assert_fail@plt+0x43cc>
   15890:	ldr	r0, [sp]
   15894:	ldr	r1, [sp, #16]
   15898:	str	r0, [r1]
   1589c:	ldr	r0, [sp, #4]
   158a0:	ldr	r1, [sp, #16]
   158a4:	str	r0, [r1, #4]
   158a8:	add	sp, sp, #20
   158ac:	bx	lr
   158b0:	push	{fp, lr}
   158b4:	mov	fp, sp
   158b8:	sub	sp, sp, #80	; 0x50
   158bc:	ldr	ip, [fp, #8]
   158c0:	str	r0, [fp, #-4]
   158c4:	str	r1, [fp, #-8]
   158c8:	str	r2, [fp, #-12]
   158cc:	str	r3, [fp, #-16]
   158d0:	ldr	r1, [fp, #-8]
   158d4:	sub	r0, fp, #32
   158d8:	str	ip, [sp, #8]
   158dc:	bl	1da20 <__assert_fail@plt+0xc58c>
   158e0:	movw	r0, #0
   158e4:	str	r0, [fp, #-36]	; 0xffffffdc
   158e8:	ldr	r0, [fp, #8]
   158ec:	cmp	r0, #1
   158f0:	ble	159d0 <__assert_fail@plt+0x453c>
   158f4:	ldr	r0, [fp, #-12]
   158f8:	ldr	r1, [r0, #4]
   158fc:	add	r0, sp, #24
   15900:	bl	1da20 <__assert_fail@plt+0xc58c>
   15904:	ldr	r0, [fp, #-16]
   15908:	ldr	r2, [fp, #8]
   1590c:	add	r3, sp, #24
   15910:	str	r0, [sp, #4]
   15914:	ldr	r1, [sp, #4]
   15918:	bl	1db40 <__assert_fail@plt+0xc6ac>
   1591c:	str	r0, [sp, #20]
   15920:	ldr	r0, [fp, #-16]
   15924:	ldr	r1, [fp, #8]
   15928:	sub	r1, r1, #1
   1592c:	add	r0, r0, r1, lsl #2
   15930:	ldr	r0, [r0]
   15934:	cmp	r0, #0
   15938:	movw	r0, #0
   1593c:	moveq	r0, #1
   15940:	and	r0, r0, #1
   15944:	ldr	r1, [fp, #8]
   15948:	sub	r0, r1, r0
   1594c:	str	r0, [fp, #8]
   15950:	ldr	r0, [fp, #-4]
   15954:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15958:	add	r0, r0, r1
   1595c:	ldr	r1, [sp, #20]
   15960:	sub	r2, fp, #32
   15964:	bl	1f038 <__assert_fail@plt+0xdba4>
   15968:	str	r0, [sp, #16]
   1596c:	ldr	r0, [sp, #16]
   15970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15974:	add	r0, r1, r0
   15978:	str	r0, [fp, #-36]	; 0xffffffdc
   1597c:	ldr	r0, [sp, #16]
   15980:	ldr	r1, [fp, #-12]
   15984:	ldr	r1, [r1]
   15988:	cmp	r0, r1
   1598c:	bcs	159bc <__assert_fail@plt+0x4528>
   15990:	ldr	r0, [fp, #-4]
   15994:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15998:	add	r2, r1, #1
   1599c:	str	r2, [fp, #-36]	; 0xffffffdc
   159a0:	add	r0, r0, r1
   159a4:	movw	r1, #0
   159a8:	strb	r1, [r0]
   159ac:	ldr	r0, [sp, #16]
   159b0:	add	r0, r0, #1
   159b4:	str	r0, [sp, #16]
   159b8:	b	1597c <__assert_fail@plt+0x44e8>
   159bc:	b	159c0 <__assert_fail@plt+0x452c>
   159c0:	ldr	r0, [fp, #8]
   159c4:	cmp	r0, #1
   159c8:	bgt	15904 <__assert_fail@plt+0x4470>
   159cc:	b	159d0 <__assert_fail@plt+0x453c>
   159d0:	ldr	r0, [fp, #-4]
   159d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159d8:	add	r0, r0, r1
   159dc:	ldr	r1, [fp, #-16]
   159e0:	ldr	r1, [r1]
   159e4:	sub	r2, fp, #32
   159e8:	bl	1f038 <__assert_fail@plt+0xdba4>
   159ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159f0:	add	r0, r1, r0
   159f4:	str	r0, [fp, #-36]	; 0xffffffdc
   159f8:	movw	r0, #0
   159fc:	str	r0, [sp, #40]	; 0x28
   15a00:	ldr	r0, [sp, #40]	; 0x28
   15a04:	lsl	r0, r0, #1
   15a08:	add	r0, r0, #1
   15a0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a10:	cmp	r0, r1
   15a14:	bcs	15a88 <__assert_fail@plt+0x45f4>
   15a18:	ldr	r0, [fp, #-4]
   15a1c:	ldr	r1, [sp, #40]	; 0x28
   15a20:	add	r0, r0, r1
   15a24:	ldrb	r0, [r0]
   15a28:	strb	r0, [sp, #15]
   15a2c:	ldr	r0, [fp, #-4]
   15a30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a34:	ldr	r2, [sp, #40]	; 0x28
   15a38:	sub	r1, r1, r2
   15a3c:	sub	r1, r1, #1
   15a40:	add	r0, r0, r1
   15a44:	ldrb	r0, [r0]
   15a48:	ldr	r1, [fp, #-4]
   15a4c:	ldr	r2, [sp, #40]	; 0x28
   15a50:	add	r1, r1, r2
   15a54:	strb	r0, [r1]
   15a58:	ldrb	r0, [sp, #15]
   15a5c:	ldr	r1, [fp, #-4]
   15a60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15a64:	ldr	r3, [sp, #40]	; 0x28
   15a68:	sub	r2, r2, r3
   15a6c:	sub	r2, r2, #1
   15a70:	add	r1, r1, r2
   15a74:	strb	r0, [r1]
   15a78:	ldr	r0, [sp, #40]	; 0x28
   15a7c:	add	r0, r0, #1
   15a80:	str	r0, [sp, #40]	; 0x28
   15a84:	b	15a00 <__assert_fail@plt+0x456c>
   15a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15a8c:	mov	sp, fp
   15a90:	pop	{fp, pc}
   15a94:	push	{fp, lr}
   15a98:	mov	fp, sp
   15a9c:	sub	sp, sp, #40	; 0x28
   15aa0:	str	r0, [fp, #-8]
   15aa4:	str	r1, [fp, #-12]
   15aa8:	str	r2, [fp, #-16]
   15aac:	str	r3, [sp, #20]
   15ab0:	ldr	r0, [fp, #-16]
   15ab4:	cmp	r0, #0
   15ab8:	bne	15ac8 <__assert_fail@plt+0x4634>
   15abc:	movw	r0, #0
   15ac0:	str	r0, [fp, #-4]
   15ac4:	b	15b28 <__assert_fail@plt+0x4694>
   15ac8:	ldr	r0, [sp, #20]
   15acc:	bl	155e4 <__assert_fail@plt+0x4150>
   15ad0:	str	r0, [sp, #16]
   15ad4:	ldr	r0, [sp, #16]
   15ad8:	cmp	r0, #0
   15adc:	beq	15afc <__assert_fail@plt+0x4668>
   15ae0:	ldr	r0, [fp, #-8]
   15ae4:	ldr	r1, [fp, #-12]
   15ae8:	ldr	r2, [fp, #-16]
   15aec:	ldr	r3, [sp, #16]
   15af0:	bl	15b34 <__assert_fail@plt+0x46a0>
   15af4:	str	r0, [fp, #-4]
   15af8:	b	15b28 <__assert_fail@plt+0x4694>
   15afc:	ldr	r1, [sp, #20]
   15b00:	add	r0, sp, #8
   15b04:	bl	15834 <__assert_fail@plt+0x43a0>
   15b08:	ldr	r0, [fp, #-8]
   15b0c:	ldr	r1, [fp, #-12]
   15b10:	ldr	r2, [fp, #-16]
   15b14:	ldr	r3, [sp, #20]
   15b18:	add	ip, sp, #8
   15b1c:	str	ip, [sp]
   15b20:	bl	15c50 <__assert_fail@plt+0x47bc>
   15b24:	str	r0, [fp, #-4]
   15b28:	ldr	r0, [fp, #-4]
   15b2c:	mov	sp, fp
   15b30:	pop	{fp, pc}
   15b34:	push	{fp, lr}
   15b38:	mov	fp, sp
   15b3c:	sub	sp, sp, #32
   15b40:	str	r0, [fp, #-4]
   15b44:	str	r1, [fp, #-8]
   15b48:	str	r2, [fp, #-12]
   15b4c:	str	r3, [sp, #16]
   15b50:	movw	r0, #0
   15b54:	str	r0, [sp, #8]
   15b58:	str	r0, [sp, #12]
   15b5c:	str	r0, [sp, #4]
   15b60:	ldr	r0, [fp, #-12]
   15b64:	mvn	r1, #0
   15b68:	add	r1, r0, r1
   15b6c:	str	r1, [fp, #-12]
   15b70:	cmp	r0, #0
   15b74:	bls	15c08 <__assert_fail@plt+0x4774>
   15b78:	ldr	r0, [fp, #-8]
   15b7c:	ldr	r1, [fp, #-12]
   15b80:	add	r0, r0, r1
   15b84:	ldrb	r0, [r0]
   15b88:	ldr	r1, [sp, #4]
   15b8c:	lsl	r0, r0, r1
   15b90:	ldr	r1, [sp, #8]
   15b94:	orr	r0, r1, r0
   15b98:	str	r0, [sp, #8]
   15b9c:	ldr	r0, [sp, #16]
   15ba0:	ldr	r1, [sp, #4]
   15ba4:	add	r0, r1, r0
   15ba8:	str	r0, [sp, #4]
   15bac:	ldr	r0, [sp, #4]
   15bb0:	cmp	r0, #32
   15bb4:	bcc	15c04 <__assert_fail@plt+0x4770>
   15bb8:	ldr	r0, [sp, #4]
   15bbc:	sub	r0, r0, #32
   15bc0:	str	r0, [sp, #4]
   15bc4:	ldr	r0, [sp, #8]
   15bc8:	ldr	r1, [fp, #-4]
   15bcc:	ldr	r2, [sp, #12]
   15bd0:	add	r3, r2, #1
   15bd4:	str	r3, [sp, #12]
   15bd8:	add	r1, r1, r2, lsl #2
   15bdc:	str	r0, [r1]
   15be0:	ldr	r0, [fp, #-8]
   15be4:	ldr	r1, [fp, #-12]
   15be8:	add	r0, r0, r1
   15bec:	ldrb	r0, [r0]
   15bf0:	ldr	r1, [sp, #16]
   15bf4:	ldr	r2, [sp, #4]
   15bf8:	sub	r1, r1, r2
   15bfc:	lsr	r0, r0, r1
   15c00:	str	r0, [sp, #8]
   15c04:	b	15b60 <__assert_fail@plt+0x46cc>
   15c08:	ldr	r0, [sp, #8]
   15c0c:	cmp	r0, #0
   15c10:	beq	15c34 <__assert_fail@plt+0x47a0>
   15c14:	ldr	r0, [sp, #8]
   15c18:	ldr	r1, [fp, #-4]
   15c1c:	ldr	r2, [sp, #12]
   15c20:	add	r3, r2, #1
   15c24:	str	r3, [sp, #12]
   15c28:	add	r1, r1, r2, lsl #2
   15c2c:	str	r0, [r1]
   15c30:	b	15c44 <__assert_fail@plt+0x47b0>
   15c34:	ldr	r0, [fp, #-4]
   15c38:	ldr	r1, [sp, #12]
   15c3c:	bl	13c4c <__assert_fail@plt+0x27b8>
   15c40:	str	r0, [sp, #12]
   15c44:	ldr	r0, [sp, #12]
   15c48:	mov	sp, fp
   15c4c:	pop	{fp, pc}
   15c50:	push	{fp, lr}
   15c54:	mov	fp, sp
   15c58:	sub	sp, sp, #40	; 0x28
   15c5c:	ldr	ip, [fp, #8]
   15c60:	str	r0, [fp, #-4]
   15c64:	str	r1, [fp, #-8]
   15c68:	str	r2, [fp, #-12]
   15c6c:	str	r3, [fp, #-16]
   15c70:	ldr	r0, [fp, #-12]
   15c74:	cmp	r0, #0
   15c78:	bls	15c80 <__assert_fail@plt+0x47ec>
   15c7c:	b	15ca0 <__assert_fail@plt+0x480c>
   15c80:	movw	r0, #19604	; 0x4c94
   15c84:	movt	r0, #4
   15c88:	movw	r1, #16512	; 0x4080
   15c8c:	movt	r1, #4
   15c90:	movw	r2, #1370	; 0x55a
   15c94:	movw	r3, #19611	; 0x4c9b
   15c98:	movt	r3, #4
   15c9c:	bl	11494 <__assert_fail@plt>
   15ca0:	ldr	r0, [fp, #-12]
   15ca4:	sub	r0, r0, #1
   15ca8:	ldr	r1, [fp, #8]
   15cac:	ldr	r1, [r1]
   15cb0:	udiv	r2, r0, r1
   15cb4:	mls	r0, r2, r1, r0
   15cb8:	add	r0, r0, #1
   15cbc:	str	r0, [sp, #12]
   15cc0:	movw	r0, #0
   15cc4:	str	r0, [sp, #8]
   15cc8:	ldr	r0, [fp, #-8]
   15ccc:	ldr	r1, [sp, #8]
   15cd0:	add	r2, r1, #1
   15cd4:	str	r2, [sp, #8]
   15cd8:	add	r0, r0, r1
   15cdc:	ldrb	r0, [r0]
   15ce0:	str	r0, [sp, #16]
   15ce4:	ldr	r0, [sp, #12]
   15ce8:	mvn	r1, #0
   15cec:	add	r0, r0, r1
   15cf0:	str	r0, [sp, #12]
   15cf4:	cmp	r0, #0
   15cf8:	beq	15d2c <__assert_fail@plt+0x4898>
   15cfc:	ldr	r0, [sp, #16]
   15d00:	ldr	r1, [fp, #-16]
   15d04:	mul	r0, r0, r1
   15d08:	ldr	r1, [fp, #-8]
   15d0c:	ldr	r2, [sp, #8]
   15d10:	add	r3, r2, #1
   15d14:	str	r3, [sp, #8]
   15d18:	add	r1, r1, r2
   15d1c:	ldrb	r1, [r1]
   15d20:	add	r0, r0, r1
   15d24:	str	r0, [sp, #16]
   15d28:	b	15ce4 <__assert_fail@plt+0x4850>
   15d2c:	ldr	r0, [sp, #16]
   15d30:	ldr	r1, [fp, #-4]
   15d34:	str	r0, [r1]
   15d38:	movw	r0, #1
   15d3c:	str	r0, [sp, #20]
   15d40:	ldr	r0, [sp, #8]
   15d44:	ldr	r1, [fp, #-12]
   15d48:	cmp	r0, r1
   15d4c:	bcs	15e2c <__assert_fail@plt+0x4998>
   15d50:	ldr	r0, [fp, #-8]
   15d54:	ldr	r1, [sp, #8]
   15d58:	add	r2, r1, #1
   15d5c:	str	r2, [sp, #8]
   15d60:	add	r0, r0, r1
   15d64:	ldrb	r0, [r0]
   15d68:	str	r0, [sp, #16]
   15d6c:	movw	r0, #1
   15d70:	str	r0, [sp, #12]
   15d74:	ldr	r0, [sp, #12]
   15d78:	ldr	r1, [fp, #8]
   15d7c:	ldr	r1, [r1]
   15d80:	cmp	r0, r1
   15d84:	bcs	15dc4 <__assert_fail@plt+0x4930>
   15d88:	ldr	r0, [sp, #16]
   15d8c:	ldr	r1, [fp, #-16]
   15d90:	mul	r0, r0, r1
   15d94:	ldr	r1, [fp, #-8]
   15d98:	ldr	r2, [sp, #8]
   15d9c:	add	r3, r2, #1
   15da0:	str	r3, [sp, #8]
   15da4:	add	r1, r1, r2
   15da8:	ldrb	r1, [r1]
   15dac:	add	r0, r0, r1
   15db0:	str	r0, [sp, #16]
   15db4:	ldr	r0, [sp, #12]
   15db8:	add	r0, r0, #1
   15dbc:	str	r0, [sp, #12]
   15dc0:	b	15d74 <__assert_fail@plt+0x48e0>
   15dc4:	ldr	r0, [fp, #-4]
   15dc8:	ldr	r1, [fp, #-4]
   15dcc:	ldr	r2, [sp, #20]
   15dd0:	ldr	r3, [fp, #8]
   15dd4:	ldr	r3, [r3, #4]
   15dd8:	bl	14188 <__assert_fail@plt+0x2cf4>
   15ddc:	str	r0, [sp, #4]
   15de0:	ldr	r0, [fp, #-4]
   15de4:	ldr	r1, [fp, #-4]
   15de8:	ldr	r2, [sp, #20]
   15dec:	ldr	r3, [sp, #16]
   15df0:	bl	13d00 <__assert_fail@plt+0x286c>
   15df4:	ldr	r1, [sp, #4]
   15df8:	add	r0, r1, r0
   15dfc:	str	r0, [sp, #4]
   15e00:	ldr	r0, [sp, #4]
   15e04:	cmp	r0, #0
   15e08:	bls	15e28 <__assert_fail@plt+0x4994>
   15e0c:	ldr	r0, [sp, #4]
   15e10:	ldr	r1, [fp, #-4]
   15e14:	ldr	r2, [sp, #20]
   15e18:	add	r3, r2, #1
   15e1c:	str	r3, [sp, #20]
   15e20:	add	r1, r1, r2, lsl #2
   15e24:	str	r0, [r1]
   15e28:	b	15d40 <__assert_fail@plt+0x48ac>
   15e2c:	ldr	r0, [sp, #8]
   15e30:	ldr	r1, [fp, #-12]
   15e34:	cmp	r0, r1
   15e38:	bne	15e40 <__assert_fail@plt+0x49ac>
   15e3c:	b	15e60 <__assert_fail@plt+0x49cc>
   15e40:	movw	r0, #19719	; 0x4d07
   15e44:	movt	r0, #4
   15e48:	movw	r1, #16512	; 0x4080
   15e4c:	movt	r1, #4
   15e50:	movw	r2, #1394	; 0x572
   15e54:	movw	r3, #19611	; 0x4c9b
   15e58:	movt	r3, #4
   15e5c:	bl	11494 <__assert_fail@plt>
   15e60:	ldr	r0, [sp, #20]
   15e64:	mov	sp, fp
   15e68:	pop	{fp, pc}
   15e6c:	sub	sp, sp, #4
   15e70:	str	r0, [sp]
   15e74:	ldr	r0, [sp]
   15e78:	movw	r1, #0
   15e7c:	str	r1, [r0]
   15e80:	ldr	r0, [sp]
   15e84:	str	r1, [r0, #4]
   15e88:	ldr	r0, [sp]
   15e8c:	movw	r1, #16504	; 0x4078
   15e90:	movt	r1, #4
   15e94:	str	r1, [r0, #8]
   15e98:	add	sp, sp, #4
   15e9c:	bx	lr
   15ea0:	push	{fp, lr}
   15ea4:	mov	fp, sp
   15ea8:	sub	sp, sp, #16
   15eac:	str	r0, [fp, #-4]
   15eb0:	str	r1, [sp, #8]
   15eb4:	ldr	r0, [sp, #8]
   15eb8:	sub	r1, r0, #1
   15ebc:	cmp	r0, #0
   15ec0:	movne	r0, r1
   15ec4:	str	r0, [sp, #8]
   15ec8:	ldr	r0, [sp, #8]
   15ecc:	lsr	r0, r0, #5
   15ed0:	add	r0, r0, #1
   15ed4:	str	r0, [sp, #4]
   15ed8:	ldr	r0, [sp, #4]
   15edc:	ldr	r1, [fp, #-4]
   15ee0:	str	r0, [r1]
   15ee4:	ldr	r0, [fp, #-4]
   15ee8:	movw	r1, #0
   15eec:	str	r1, [r0, #4]
   15ef0:	ldr	r0, [sp, #4]
   15ef4:	bl	15f08 <__assert_fail@plt+0x4a74>
   15ef8:	ldr	r1, [fp, #-4]
   15efc:	str	r0, [r1, #8]
   15f00:	mov	sp, fp
   15f04:	pop	{fp, pc}
   15f08:	push	{fp, lr}
   15f0c:	mov	fp, sp
   15f10:	sub	sp, sp, #8
   15f14:	str	r0, [sp, #4]
   15f18:	movw	r0, #24872	; 0x6128
   15f1c:	movt	r0, #5
   15f20:	ldr	r0, [r0]
   15f24:	ldr	r1, [sp, #4]
   15f28:	lsl	r1, r1, #2
   15f2c:	str	r0, [sp]
   15f30:	mov	r0, r1
   15f34:	ldr	r1, [sp]
   15f38:	blx	r1
   15f3c:	mov	sp, fp
   15f40:	pop	{fp, pc}
   15f44:	push	{fp, lr}
   15f48:	mov	fp, sp
   15f4c:	sub	sp, sp, #8
   15f50:	str	r0, [sp, #4]
   15f54:	ldr	r0, [sp, #4]
   15f58:	ldr	r0, [r0]
   15f5c:	cmp	r0, #0
   15f60:	beq	15f78 <__assert_fail@plt+0x4ae4>
   15f64:	ldr	r0, [sp, #4]
   15f68:	ldr	r0, [r0, #8]
   15f6c:	ldr	r1, [sp, #4]
   15f70:	ldr	r1, [r1]
   15f74:	bl	15f80 <__assert_fail@plt+0x4aec>
   15f78:	mov	sp, fp
   15f7c:	pop	{fp, pc}
   15f80:	push	{fp, lr}
   15f84:	mov	fp, sp
   15f88:	sub	sp, sp, #16
   15f8c:	str	r0, [fp, #-4]
   15f90:	str	r1, [sp, #8]
   15f94:	movw	r0, #24880	; 0x6130
   15f98:	movt	r0, #5
   15f9c:	ldr	r0, [r0]
   15fa0:	ldr	r1, [fp, #-4]
   15fa4:	ldr	r2, [sp, #8]
   15fa8:	lsl	r2, r2, #2
   15fac:	str	r0, [sp, #4]
   15fb0:	mov	r0, r1
   15fb4:	mov	r1, r2
   15fb8:	ldr	r2, [sp, #4]
   15fbc:	blx	r2
   15fc0:	mov	sp, fp
   15fc4:	pop	{fp, pc}
   15fc8:	push	{fp, lr}
   15fcc:	mov	fp, sp
   15fd0:	sub	sp, sp, #16
   15fd4:	str	r0, [fp, #-4]
   15fd8:	str	r1, [sp, #8]
   15fdc:	ldr	r0, [sp, #8]
   15fe0:	cmp	r0, #0
   15fe4:	blt	15ff8 <__assert_fail@plt+0x4b64>
   15fe8:	ldr	r0, [fp, #-4]
   15fec:	ldr	r1, [sp, #8]
   15ff0:	bl	16064 <__assert_fail@plt+0x4bd0>
   15ff4:	b	1605c <__assert_fail@plt+0x4bc8>
   15ff8:	ldr	r0, [fp, #-4]
   15ffc:	mvn	r1, #0
   16000:	str	r1, [r0, #4]
   16004:	ldr	r0, [sp, #8]
   16008:	add	r0, r0, #1
   1600c:	sub	r0, r0, #1
   16010:	movw	r1, #0
   16014:	sub	r0, r1, r0
   16018:	ldr	r1, [fp, #-4]
   1601c:	ldr	r1, [r1]
   16020:	movw	r2, #1
   16024:	cmp	r2, r1
   16028:	str	r0, [sp, #4]
   1602c:	ble	16044 <__assert_fail@plt+0x4bb0>
   16030:	ldr	r0, [fp, #-4]
   16034:	movw	r1, #1
   16038:	bl	160ec <__assert_fail@plt+0x4c58>
   1603c:	str	r0, [sp]
   16040:	b	16050 <__assert_fail@plt+0x4bbc>
   16044:	ldr	r0, [fp, #-4]
   16048:	ldr	r0, [r0, #8]
   1604c:	str	r0, [sp]
   16050:	ldr	r0, [sp]
   16054:	ldr	r1, [sp, #4]
   16058:	str	r1, [r0]
   1605c:	mov	sp, fp
   16060:	pop	{fp, pc}
   16064:	push	{fp, lr}
   16068:	mov	fp, sp
   1606c:	sub	sp, sp, #16
   16070:	str	r0, [fp, #-4]
   16074:	str	r1, [sp, #8]
   16078:	ldr	r0, [sp, #8]
   1607c:	cmp	r0, #0
   16080:	bls	160d8 <__assert_fail@plt+0x4c44>
   16084:	ldr	r0, [fp, #-4]
   16088:	movw	r1, #1
   1608c:	str	r1, [r0, #4]
   16090:	ldr	r0, [sp, #8]
   16094:	ldr	r2, [fp, #-4]
   16098:	ldr	r2, [r2]
   1609c:	cmp	r1, r2
   160a0:	str	r0, [sp, #4]
   160a4:	ble	160bc <__assert_fail@plt+0x4c28>
   160a8:	ldr	r0, [fp, #-4]
   160ac:	movw	r1, #1
   160b0:	bl	160ec <__assert_fail@plt+0x4c58>
   160b4:	str	r0, [sp]
   160b8:	b	160c8 <__assert_fail@plt+0x4c34>
   160bc:	ldr	r0, [fp, #-4]
   160c0:	ldr	r0, [r0, #8]
   160c4:	str	r0, [sp]
   160c8:	ldr	r0, [sp]
   160cc:	ldr	r1, [sp, #4]
   160d0:	str	r1, [r0]
   160d4:	b	160e4 <__assert_fail@plt+0x4c50>
   160d8:	ldr	r0, [fp, #-4]
   160dc:	movw	r1, #0
   160e0:	str	r1, [r0, #4]
   160e4:	mov	sp, fp
   160e8:	pop	{fp, pc}
   160ec:	push	{fp, lr}
   160f0:	mov	fp, sp
   160f4:	sub	sp, sp, #16
   160f8:	str	r0, [fp, #-4]
   160fc:	str	r1, [sp, #8]
   16100:	ldr	r0, [sp, #8]
   16104:	cmp	r0, #1
   16108:	ble	16118 <__assert_fail@plt+0x4c84>
   1610c:	ldr	r0, [sp, #8]
   16110:	str	r0, [sp, #4]
   16114:	b	16124 <__assert_fail@plt+0x4c90>
   16118:	movw	r0, #1
   1611c:	str	r0, [sp, #4]
   16120:	b	16124 <__assert_fail@plt+0x4c90>
   16124:	ldr	r0, [sp, #4]
   16128:	str	r0, [sp, #8]
   1612c:	ldr	r0, [fp, #-4]
   16130:	ldr	r0, [r0]
   16134:	cmp	r0, #0
   16138:	beq	16160 <__assert_fail@plt+0x4ccc>
   1613c:	ldr	r0, [fp, #-4]
   16140:	ldr	r0, [r0, #8]
   16144:	ldr	r1, [fp, #-4]
   16148:	ldr	r1, [r1]
   1614c:	ldr	r2, [sp, #8]
   16150:	bl	1f324 <__assert_fail@plt+0xde90>
   16154:	ldr	r1, [fp, #-4]
   16158:	str	r0, [r1, #8]
   1615c:	b	16170 <__assert_fail@plt+0x4cdc>
   16160:	ldr	r0, [sp, #8]
   16164:	bl	15f08 <__assert_fail@plt+0x4a74>
   16168:	ldr	r1, [fp, #-4]
   1616c:	str	r0, [r1, #8]
   16170:	ldr	r0, [sp, #8]
   16174:	ldr	r1, [fp, #-4]
   16178:	str	r0, [r1]
   1617c:	ldr	r0, [fp, #-4]
   16180:	ldr	r0, [r0, #4]
   16184:	cmp	r0, #0
   16188:	blt	1619c <__assert_fail@plt+0x4d08>
   1618c:	ldr	r0, [fp, #-4]
   16190:	ldr	r0, [r0, #4]
   16194:	str	r0, [sp]
   16198:	b	161b0 <__assert_fail@plt+0x4d1c>
   1619c:	ldr	r0, [fp, #-4]
   161a0:	ldr	r0, [r0, #4]
   161a4:	movw	r1, #0
   161a8:	sub	r0, r1, r0
   161ac:	str	r0, [sp]
   161b0:	ldr	r0, [sp]
   161b4:	ldr	r1, [sp, #8]
   161b8:	cmp	r0, r1
   161bc:	ble	161cc <__assert_fail@plt+0x4d38>
   161c0:	ldr	r0, [fp, #-4]
   161c4:	movw	r1, #0
   161c8:	str	r1, [r0, #4]
   161cc:	ldr	r0, [fp, #-4]
   161d0:	ldr	r0, [r0, #8]
   161d4:	mov	sp, fp
   161d8:	pop	{fp, pc}
   161dc:	push	{fp, lr}
   161e0:	mov	fp, sp
   161e4:	sub	sp, sp, #24
   161e8:	str	r0, [fp, #-4]
   161ec:	str	r1, [fp, #-8]
   161f0:	ldr	r0, [fp, #-4]
   161f4:	ldr	r1, [fp, #-8]
   161f8:	cmp	r0, r1
   161fc:	beq	1629c <__assert_fail@plt+0x4e08>
   16200:	ldr	r0, [fp, #-8]
   16204:	ldr	r0, [r0, #4]
   16208:	cmp	r0, #0
   1620c:	blt	16220 <__assert_fail@plt+0x4d8c>
   16210:	ldr	r0, [fp, #-8]
   16214:	ldr	r0, [r0, #4]
   16218:	str	r0, [sp, #4]
   1621c:	b	16234 <__assert_fail@plt+0x4da0>
   16220:	ldr	r0, [fp, #-8]
   16224:	ldr	r0, [r0, #4]
   16228:	movw	r1, #0
   1622c:	sub	r0, r1, r0
   16230:	str	r0, [sp, #4]
   16234:	ldr	r0, [sp, #4]
   16238:	str	r0, [sp, #12]
   1623c:	ldr	r0, [sp, #12]
   16240:	ldr	r1, [fp, #-4]
   16244:	ldr	r1, [r1]
   16248:	cmp	r0, r1
   1624c:	ble	16264 <__assert_fail@plt+0x4dd0>
   16250:	ldr	r0, [fp, #-4]
   16254:	ldr	r1, [sp, #12]
   16258:	bl	160ec <__assert_fail@plt+0x4c58>
   1625c:	str	r0, [sp]
   16260:	b	16270 <__assert_fail@plt+0x4ddc>
   16264:	ldr	r0, [fp, #-4]
   16268:	ldr	r0, [r0, #8]
   1626c:	str	r0, [sp]
   16270:	ldr	r0, [sp]
   16274:	str	r0, [sp, #8]
   16278:	ldr	r0, [sp, #8]
   1627c:	ldr	r1, [fp, #-8]
   16280:	ldr	r1, [r1, #8]
   16284:	ldr	r2, [sp, #12]
   16288:	bl	13ad8 <__assert_fail@plt+0x2644>
   1628c:	ldr	r0, [fp, #-8]
   16290:	ldr	r0, [r0, #4]
   16294:	ldr	r1, [fp, #-4]
   16298:	str	r0, [r1, #4]
   1629c:	mov	sp, fp
   162a0:	pop	{fp, pc}
   162a4:	push	{fp, lr}
   162a8:	mov	fp, sp
   162ac:	sub	sp, sp, #8
   162b0:	str	r0, [sp, #4]
   162b4:	str	r1, [sp]
   162b8:	ldr	r0, [sp, #4]
   162bc:	bl	15e6c <__assert_fail@plt+0x49d8>
   162c0:	ldr	r0, [sp, #4]
   162c4:	ldr	r1, [sp]
   162c8:	bl	15fc8 <__assert_fail@plt+0x4b34>
   162cc:	mov	sp, fp
   162d0:	pop	{fp, pc}
   162d4:	push	{fp, lr}
   162d8:	mov	fp, sp
   162dc:	sub	sp, sp, #8
   162e0:	str	r0, [sp, #4]
   162e4:	str	r1, [sp]
   162e8:	ldr	r0, [sp, #4]
   162ec:	bl	15e6c <__assert_fail@plt+0x49d8>
   162f0:	ldr	r0, [sp, #4]
   162f4:	ldr	r1, [sp]
   162f8:	bl	16064 <__assert_fail@plt+0x4bd0>
   162fc:	mov	sp, fp
   16300:	pop	{fp, pc}
   16304:	push	{fp, lr}
   16308:	mov	fp, sp
   1630c:	sub	sp, sp, #8
   16310:	str	r0, [sp, #4]
   16314:	str	r1, [sp]
   16318:	ldr	r0, [sp, #4]
   1631c:	bl	15e6c <__assert_fail@plt+0x49d8>
   16320:	ldr	r0, [sp, #4]
   16324:	ldr	r1, [sp]
   16328:	bl	161dc <__assert_fail@plt+0x4d48>
   1632c:	mov	sp, fp
   16330:	pop	{fp, pc}
   16334:	push	{fp, lr}
   16338:	mov	fp, sp
   1633c:	sub	sp, sp, #8
   16340:	ldr	r1, [pc, #68]	; 1638c <__assert_fail@plt+0x4ef8>
   16344:	str	r0, [sp, #4]
   16348:	ldr	r0, [sp, #4]
   1634c:	bl	16394 <__assert_fail@plt+0x4f00>
   16350:	cmp	r0, #0
   16354:	movw	r0, #0
   16358:	str	r0, [sp]
   1635c:	bgt	1637c <__assert_fail@plt+0x4ee8>
   16360:	ldr	r1, [pc, #40]	; 16390 <__assert_fail@plt+0x4efc>
   16364:	ldr	r0, [sp, #4]
   16368:	bl	16394 <__assert_fail@plt+0x4f00>
   1636c:	cmp	r0, #0
   16370:	movw	r0, #0
   16374:	movge	r0, #1
   16378:	str	r0, [sp]
   1637c:	ldr	r0, [sp]
   16380:	and	r0, r0, #1
   16384:	mov	sp, fp
   16388:	pop	{fp, pc}
   1638c:	svcvc	0x00ffffff
   16390:	andhi	r0, r0, r0
   16394:	push	{fp, lr}
   16398:	mov	fp, sp
   1639c:	sub	sp, sp, #16
   163a0:	str	r0, [sp, #8]
   163a4:	str	r1, [sp, #4]
   163a8:	ldr	r0, [sp, #8]
   163ac:	ldr	r0, [r0, #4]
   163b0:	str	r0, [sp]
   163b4:	ldr	r0, [sp, #4]
   163b8:	cmp	r0, #0
   163bc:	blt	163d4 <__assert_fail@plt+0x4f40>
   163c0:	ldr	r0, [sp, #8]
   163c4:	ldr	r1, [sp, #4]
   163c8:	bl	172c8 <__assert_fail@plt+0x5e34>
   163cc:	str	r0, [fp, #-4]
   163d0:	b	16414 <__assert_fail@plt+0x4f80>
   163d4:	ldr	r0, [sp]
   163d8:	cmp	r0, #0
   163dc:	blt	163ec <__assert_fail@plt+0x4f58>
   163e0:	movw	r0, #1
   163e4:	str	r0, [fp, #-4]
   163e8:	b	16414 <__assert_fail@plt+0x4f80>
   163ec:	ldr	r0, [sp, #8]
   163f0:	ldr	r1, [sp, #4]
   163f4:	add	r1, r1, #1
   163f8:	sub	r1, r1, #1
   163fc:	movw	r2, #0
   16400:	sub	r1, r2, r1
   16404:	bl	165c0 <__assert_fail@plt+0x512c>
   16408:	movw	r1, #0
   1640c:	sub	r0, r1, r0
   16410:	str	r0, [fp, #-4]
   16414:	ldr	r0, [fp, #-4]
   16418:	mov	sp, fp
   1641c:	pop	{fp, pc}
   16420:	push	{fp, lr}
   16424:	mov	fp, sp
   16428:	sub	sp, sp, #16
   1642c:	str	r0, [fp, #-4]
   16430:	ldr	r0, [fp, #-4]
   16434:	ldr	r0, [r0, #4]
   16438:	str	r0, [sp, #8]
   1643c:	ldr	r0, [sp, #8]
   16440:	cmp	r0, #0
   16444:	movw	r0, #0
   16448:	str	r0, [sp, #4]
   1644c:	blt	16470 <__assert_fail@plt+0x4fdc>
   16450:	ldr	r0, [fp, #-4]
   16454:	ldr	r0, [r0, #8]
   16458:	ldr	r1, [sp, #8]
   1645c:	bl	16480 <__assert_fail@plt+0x4fec>
   16460:	cmp	r0, #0
   16464:	movw	r0, #0
   16468:	movne	r0, #1
   1646c:	str	r0, [sp, #4]
   16470:	ldr	r0, [sp, #4]
   16474:	and	r0, r0, #1
   16478:	mov	sp, fp
   1647c:	pop	{fp, pc}
   16480:	sub	sp, sp, #24
   16484:	str	r0, [sp, #20]
   16488:	str	r1, [sp, #16]
   1648c:	movw	r0, #1
   16490:	str	r0, [sp, #12]
   16494:	movw	r0, #0
   16498:	str	r0, [sp, #8]
   1649c:	ldr	r0, [sp, #16]
   164a0:	ldr	r1, [sp, #12]
   164a4:	cmp	r0, r1
   164a8:	movw	r0, #1
   164ac:	str	r0, [sp, #4]
   164b0:	ble	164fc <__assert_fail@plt+0x5068>
   164b4:	ldr	r0, [sp, #20]
   164b8:	ldr	r1, [sp, #12]
   164bc:	add	r0, r0, r1, lsl #2
   164c0:	ldr	r0, [r0]
   164c4:	ldr	r1, [sp, #8]
   164c8:	cmp	r0, r1
   164cc:	movw	r0, #0
   164d0:	str	r0, [sp]
   164d4:	bcs	164f4 <__assert_fail@plt+0x5060>
   164d8:	ldr	r0, [sp, #16]
   164dc:	ldr	r1, [sp, #12]
   164e0:	add	r1, r1, #1
   164e4:	cmp	r0, r1
   164e8:	movw	r0, #0
   164ec:	moveq	r0, #1
   164f0:	str	r0, [sp]
   164f4:	ldr	r0, [sp]
   164f8:	str	r0, [sp, #4]
   164fc:	ldr	r0, [sp, #4]
   16500:	and	r0, r0, #1
   16504:	add	sp, sp, #24
   16508:	bx	lr
   1650c:	push	{fp, lr}
   16510:	mov	fp, sp
   16514:	sub	sp, sp, #8
   16518:	ldr	r1, [pc, #68]	; 16564 <__assert_fail@plt+0x50d0>
   1651c:	str	r0, [sp, #4]
   16520:	ldr	r0, [sp, #4]
   16524:	bl	16394 <__assert_fail@plt+0x4f00>
   16528:	cmp	r0, #0
   1652c:	movw	r0, #0
   16530:	str	r0, [sp]
   16534:	bgt	16554 <__assert_fail@plt+0x50c0>
   16538:	ldr	r1, [pc, #40]	; 16568 <__assert_fail@plt+0x50d4>
   1653c:	ldr	r0, [sp, #4]
   16540:	bl	16394 <__assert_fail@plt+0x4f00>
   16544:	cmp	r0, #0
   16548:	movw	r0, #0
   1654c:	movge	r0, #1
   16550:	str	r0, [sp]
   16554:	ldr	r0, [sp]
   16558:	and	r0, r0, #1
   1655c:	mov	sp, fp
   16560:	pop	{fp, pc}
   16564:	svcvc	0x00ffffff
   16568:	andhi	r0, r0, r0
   1656c:	push	{fp, lr}
   16570:	mov	fp, sp
   16574:	sub	sp, sp, #8
   16578:	str	r0, [sp, #4]
   1657c:	ldr	r0, [sp, #4]
   16580:	ldr	r0, [r0, #4]
   16584:	cmp	r0, #0
   16588:	movw	r0, #0
   1658c:	str	r0, [sp]
   16590:	blt	165b0 <__assert_fail@plt+0x511c>
   16594:	ldr	r0, [sp, #4]
   16598:	mvn	r1, #0
   1659c:	bl	165c0 <__assert_fail@plt+0x512c>
   165a0:	cmp	r0, #0
   165a4:	movw	r0, #0
   165a8:	movle	r0, #1
   165ac:	str	r0, [sp]
   165b0:	ldr	r0, [sp]
   165b4:	and	r0, r0, #1
   165b8:	mov	sp, fp
   165bc:	pop	{fp, pc}
   165c0:	push	{fp, lr}
   165c4:	mov	fp, sp
   165c8:	sub	sp, sp, #24
   165cc:	str	r0, [fp, #-8]
   165d0:	str	r1, [sp, #12]
   165d4:	ldr	r0, [fp, #-8]
   165d8:	ldr	r0, [r0, #4]
   165dc:	cmp	r0, #0
   165e0:	blt	165f4 <__assert_fail@plt+0x5160>
   165e4:	ldr	r0, [fp, #-8]
   165e8:	ldr	r0, [r0, #4]
   165ec:	str	r0, [sp]
   165f0:	b	16608 <__assert_fail@plt+0x5174>
   165f4:	ldr	r0, [fp, #-8]
   165f8:	ldr	r0, [r0, #4]
   165fc:	movw	r1, #0
   16600:	sub	r0, r1, r0
   16604:	str	r0, [sp]
   16608:	ldr	r0, [sp]
   1660c:	str	r0, [sp, #8]
   16610:	ldr	r0, [fp, #-8]
   16614:	ldr	r0, [r0, #8]
   16618:	ldr	r1, [sp, #8]
   1661c:	bl	16480 <__assert_fail@plt+0x4fec>
   16620:	cmp	r0, #0
   16624:	bne	16634 <__assert_fail@plt+0x51a0>
   16628:	movw	r0, #1
   1662c:	str	r0, [fp, #-4]
   16630:	b	16678 <__assert_fail@plt+0x51e4>
   16634:	ldr	r0, [fp, #-8]
   16638:	bl	167b4 <__assert_fail@plt+0x5320>
   1663c:	str	r0, [sp, #4]
   16640:	ldr	r0, [sp, #4]
   16644:	ldr	r1, [sp, #12]
   16648:	cmp	r0, r1
   1664c:	movw	r0, #0
   16650:	movhi	r0, #1
   16654:	and	r0, r0, #1
   16658:	ldr	r1, [sp, #4]
   1665c:	ldr	r2, [sp, #12]
   16660:	cmp	r1, r2
   16664:	movw	r1, #0
   16668:	movcc	r1, #1
   1666c:	and	r1, r1, #1
   16670:	sub	r0, r0, r1
   16674:	str	r0, [fp, #-4]
   16678:	ldr	r0, [fp, #-4]
   1667c:	mov	sp, fp
   16680:	pop	{fp, pc}
   16684:	push	{fp, lr}
   16688:	mov	fp, sp
   1668c:	sub	sp, sp, #8
   16690:	str	r0, [sp, #4]
   16694:	ldr	r0, [sp, #4]
   16698:	movw	r1, #32767	; 0x7fff
   1669c:	bl	16394 <__assert_fail@plt+0x4f00>
   166a0:	cmp	r0, #0
   166a4:	movw	r0, #0
   166a8:	str	r0, [sp]
   166ac:	bgt	166cc <__assert_fail@plt+0x5238>
   166b0:	ldr	r1, [pc, #36]	; 166dc <__assert_fail@plt+0x5248>
   166b4:	ldr	r0, [sp, #4]
   166b8:	bl	16394 <__assert_fail@plt+0x4f00>
   166bc:	cmp	r0, #0
   166c0:	movw	r0, #0
   166c4:	movge	r0, #1
   166c8:	str	r0, [sp]
   166cc:	ldr	r0, [sp]
   166d0:	and	r0, r0, #1
   166d4:	mov	sp, fp
   166d8:	pop	{fp, pc}
   166dc:			; <UNDEFINED> instruction: 0xffff8000
   166e0:	push	{fp, lr}
   166e4:	mov	fp, sp
   166e8:	sub	sp, sp, #8
   166ec:	str	r0, [sp, #4]
   166f0:	ldr	r0, [sp, #4]
   166f4:	ldr	r0, [r0, #4]
   166f8:	cmp	r0, #0
   166fc:	movw	r0, #0
   16700:	str	r0, [sp]
   16704:	blt	16724 <__assert_fail@plt+0x5290>
   16708:	ldr	r0, [sp, #4]
   1670c:	movw	r1, #65535	; 0xffff
   16710:	bl	165c0 <__assert_fail@plt+0x512c>
   16714:	cmp	r0, #0
   16718:	movw	r0, #0
   1671c:	movle	r0, #1
   16720:	str	r0, [sp]
   16724:	ldr	r0, [sp]
   16728:	and	r0, r0, #1
   1672c:	mov	sp, fp
   16730:	pop	{fp, pc}
   16734:	push	{fp, lr}
   16738:	mov	fp, sp
   1673c:	sub	sp, sp, #16
   16740:	str	r0, [sp, #8]
   16744:	ldr	r0, [sp, #8]
   16748:	bl	167b4 <__assert_fail@plt+0x5320>
   1674c:	str	r0, [sp, #4]
   16750:	movw	r0, #1
   16754:	str	r0, [sp]
   16758:	ldr	r0, [sp, #8]
   1675c:	ldr	r0, [r0, #4]
   16760:	cmp	r0, #0
   16764:	bge	16794 <__assert_fail@plt+0x5300>
   16768:	ldr	r0, [pc, #64]	; 167b0 <__assert_fail@plt+0x531c>
   1676c:	ldr	r1, [sp]
   16770:	movw	r2, #0
   16774:	sub	r1, r2, r1
   16778:	ldr	r2, [sp, #4]
   1677c:	ldr	r3, [sp]
   16780:	sub	r2, r2, r3
   16784:	and	r0, r2, r0
   16788:	sub	r0, r1, r0
   1678c:	str	r0, [fp, #-4]
   16790:	b	167a4 <__assert_fail@plt+0x5310>
   16794:	ldr	r0, [pc, #20]	; 167b0 <__assert_fail@plt+0x531c>
   16798:	ldr	r1, [sp, #4]
   1679c:	and	r0, r1, r0
   167a0:	str	r0, [fp, #-4]
   167a4:	ldr	r0, [fp, #-4]
   167a8:	mov	sp, fp
   167ac:	pop	{fp, pc}
   167b0:	svcvc	0x00ffffff
   167b4:	sub	sp, sp, #8
   167b8:	str	r0, [sp, #4]
   167bc:	ldr	r0, [sp, #4]
   167c0:	ldr	r0, [r0, #4]
   167c4:	cmp	r0, #0
   167c8:	bne	167d8 <__assert_fail@plt+0x5344>
   167cc:	movw	r0, #0
   167d0:	str	r0, [sp]
   167d4:	b	167e8 <__assert_fail@plt+0x5354>
   167d8:	ldr	r0, [sp, #4]
   167dc:	ldr	r0, [r0, #8]
   167e0:	ldr	r0, [r0]
   167e4:	str	r0, [sp]
   167e8:	ldr	r0, [sp]
   167ec:	add	sp, sp, #8
   167f0:	bx	lr
   167f4:	sub	sp, sp, #8
   167f8:	str	r0, [sp, #4]
   167fc:	ldr	r0, [sp, #4]
   16800:	ldr	r0, [r0, #4]
   16804:	cmp	r0, #0
   16808:	blt	1681c <__assert_fail@plt+0x5388>
   1680c:	ldr	r0, [sp, #4]
   16810:	ldr	r0, [r0, #4]
   16814:	str	r0, [sp]
   16818:	b	16830 <__assert_fail@plt+0x539c>
   1681c:	ldr	r0, [sp, #4]
   16820:	ldr	r0, [r0, #4]
   16824:	movw	r1, #0
   16828:	sub	r0, r1, r0
   1682c:	str	r0, [sp]
   16830:	ldr	r0, [sp]
   16834:	add	sp, sp, #8
   16838:	bx	lr
   1683c:	sub	sp, sp, #20
   16840:	str	r0, [sp, #12]
   16844:	str	r1, [sp, #8]
   16848:	ldr	r0, [sp, #8]
   1684c:	cmp	r0, #0
   16850:	blt	168bc <__assert_fail@plt+0x5428>
   16854:	ldr	r0, [sp, #8]
   16858:	ldr	r1, [sp, #12]
   1685c:	ldr	r1, [r1, #4]
   16860:	cmp	r1, #0
   16864:	str	r0, [sp, #4]
   16868:	blt	1687c <__assert_fail@plt+0x53e8>
   1686c:	ldr	r0, [sp, #12]
   16870:	ldr	r0, [r0, #4]
   16874:	str	r0, [sp]
   16878:	b	16890 <__assert_fail@plt+0x53fc>
   1687c:	ldr	r0, [sp, #12]
   16880:	ldr	r0, [r0, #4]
   16884:	movw	r1, #0
   16888:	sub	r0, r1, r0
   1688c:	str	r0, [sp]
   16890:	ldr	r0, [sp]
   16894:	ldr	r1, [sp, #4]
   16898:	cmp	r1, r0
   1689c:	bge	168bc <__assert_fail@plt+0x5428>
   168a0:	ldr	r0, [sp, #12]
   168a4:	ldr	r0, [r0, #8]
   168a8:	ldr	r1, [sp, #8]
   168ac:	add	r0, r0, r1, lsl #2
   168b0:	ldr	r0, [r0]
   168b4:	str	r0, [sp, #16]
   168b8:	b	168c4 <__assert_fail@plt+0x5430>
   168bc:	movw	r0, #0
   168c0:	str	r0, [sp, #16]
   168c4:	ldr	r0, [sp, #16]
   168c8:	add	sp, sp, #20
   168cc:	bx	lr
   168d0:	push	{fp, lr}
   168d4:	mov	fp, sp
   168d8:	sub	sp, sp, #8
   168dc:	str	r0, [sp, #4]
   168e0:	str	r1, [sp]
   168e4:	ldr	r0, [sp, #4]
   168e8:	ldr	r1, [sp]
   168ec:	sub	r2, r1, #1
   168f0:	cmp	r1, #0
   168f4:	movne	r1, r2
   168f8:	lsr	r1, r1, #5
   168fc:	add	r1, r1, #1
   16900:	bl	160ec <__assert_fail@plt+0x4c58>
   16904:	mov	sp, fp
   16908:	pop	{fp, pc}
   1690c:	sub	sp, sp, #4
   16910:	str	r0, [sp]
   16914:	ldr	r0, [sp]
   16918:	ldr	r0, [r0, #8]
   1691c:	add	sp, sp, #4
   16920:	bx	lr
   16924:	push	{fp, lr}
   16928:	mov	fp, sp
   1692c:	sub	sp, sp, #16
   16930:	str	r0, [fp, #-4]
   16934:	str	r1, [sp, #8]
   16938:	ldr	r0, [sp, #8]
   1693c:	cmp	r0, #0
   16940:	ble	16948 <__assert_fail@plt+0x54b4>
   16944:	b	16968 <__assert_fail@plt+0x54d4>
   16948:	movw	r0, #19893	; 0x4db5
   1694c:	movt	r0, #4
   16950:	movw	r1, #16512	; 0x4080
   16954:	movt	r1, #4
   16958:	movw	r2, #1663	; 0x67f
   1695c:	movw	r3, #17395	; 0x43f3
   16960:	movt	r3, #4
   16964:	bl	11494 <__assert_fail@plt>
   16968:	ldr	r0, [sp, #8]
   1696c:	ldr	r1, [fp, #-4]
   16970:	ldr	r1, [r1]
   16974:	cmp	r0, r1
   16978:	ble	16990 <__assert_fail@plt+0x54fc>
   1697c:	ldr	r0, [fp, #-4]
   16980:	ldr	r1, [sp, #8]
   16984:	bl	160ec <__assert_fail@plt+0x4c58>
   16988:	str	r0, [sp, #4]
   1698c:	b	1699c <__assert_fail@plt+0x5508>
   16990:	ldr	r0, [fp, #-4]
   16994:	ldr	r0, [r0, #8]
   16998:	str	r0, [sp, #4]
   1699c:	ldr	r0, [sp, #4]
   169a0:	mov	sp, fp
   169a4:	pop	{fp, pc}
   169a8:	push	{fp, lr}
   169ac:	mov	fp, sp
   169b0:	sub	sp, sp, #8
   169b4:	str	r0, [sp, #4]
   169b8:	str	r1, [sp]
   169bc:	ldr	r0, [sp, #4]
   169c0:	ldr	r1, [sp]
   169c4:	bl	16924 <__assert_fail@plt+0x5490>
   169c8:	mov	sp, fp
   169cc:	pop	{fp, pc}
   169d0:	push	{fp, lr}
   169d4:	mov	fp, sp
   169d8:	sub	sp, sp, #32
   169dc:	str	r0, [fp, #-4]
   169e0:	str	r1, [fp, #-8]
   169e4:	ldr	r0, [fp, #-4]
   169e8:	ldr	r0, [r0, #8]
   169ec:	ldr	r1, [fp, #-8]
   169f0:	cmp	r1, #0
   169f4:	str	r0, [sp, #16]
   169f8:	blt	16a08 <__assert_fail@plt+0x5574>
   169fc:	ldr	r0, [fp, #-8]
   16a00:	str	r0, [sp, #12]
   16a04:	b	16a18 <__assert_fail@plt+0x5584>
   16a08:	ldr	r0, [fp, #-8]
   16a0c:	movw	r1, #0
   16a10:	sub	r0, r1, r0
   16a14:	str	r0, [sp, #12]
   16a18:	ldr	r0, [sp, #12]
   16a1c:	ldr	r1, [sp, #16]
   16a20:	str	r0, [sp, #8]
   16a24:	mov	r0, r1
   16a28:	ldr	r1, [sp, #8]
   16a2c:	bl	13c4c <__assert_fail@plt+0x27b8>
   16a30:	str	r0, [fp, #-12]
   16a34:	ldr	r0, [fp, #-8]
   16a38:	cmp	r0, #0
   16a3c:	bge	16a54 <__assert_fail@plt+0x55c0>
   16a40:	ldr	r0, [fp, #-12]
   16a44:	movw	r1, #0
   16a48:	sub	r0, r1, r0
   16a4c:	str	r0, [sp, #4]
   16a50:	b	16a5c <__assert_fail@plt+0x55c8>
   16a54:	ldr	r0, [fp, #-12]
   16a58:	str	r0, [sp, #4]
   16a5c:	ldr	r0, [sp, #4]
   16a60:	ldr	r1, [fp, #-4]
   16a64:	str	r0, [r1, #4]
   16a68:	mov	sp, fp
   16a6c:	pop	{fp, pc}
   16a70:	push	{fp, lr}
   16a74:	mov	fp, sp
   16a78:	sub	sp, sp, #16
   16a7c:	str	r0, [fp, #-4]
   16a80:	str	r1, [sp, #8]
   16a84:	str	r2, [sp, #4]
   16a88:	ldr	r0, [fp, #-4]
   16a8c:	ldr	r1, [sp, #8]
   16a90:	ldr	r2, [sp, #4]
   16a94:	bl	16abc <__assert_fail@plt+0x5628>
   16a98:	ldr	r1, [fp, #-4]
   16a9c:	ldr	r2, [sp, #4]
   16aa0:	str	r0, [sp]
   16aa4:	mov	r0, r1
   16aa8:	mov	r1, r2
   16aac:	bl	169d0 <__assert_fail@plt+0x553c>
   16ab0:	ldr	r0, [fp, #-4]
   16ab4:	mov	sp, fp
   16ab8:	pop	{fp, pc}
   16abc:	sub	sp, sp, #12
   16ac0:	str	r0, [sp, #8]
   16ac4:	str	r1, [sp, #4]
   16ac8:	str	r2, [sp]
   16acc:	ldr	r0, [sp, #8]
   16ad0:	movw	r1, #0
   16ad4:	str	r1, [r0]
   16ad8:	ldr	r0, [sp, #4]
   16adc:	ldr	r1, [sp, #8]
   16ae0:	str	r0, [r1, #8]
   16ae4:	ldr	r0, [sp]
   16ae8:	ldr	r1, [sp, #8]
   16aec:	str	r0, [r1, #4]
   16af0:	ldr	r0, [sp, #8]
   16af4:	add	sp, sp, #12
   16af8:	bx	lr
   16afc:	nop	{0}
   16b00:	push	{fp, lr}
   16b04:	mov	fp, sp
   16b08:	sub	sp, sp, #64	; 0x40
   16b0c:	str	r0, [fp, #-4]
   16b10:	vstr	d0, [fp, #-16]
   16b14:	vldr	d16, [fp, #-16]
   16b18:	vldr	d17, [fp, #-16]
   16b1c:	vcmp.f64	d16, d17
   16b20:	vmrs	APSR_nzcv, fpscr
   16b24:	bne	16b44 <__assert_fail@plt+0x56b0>
   16b28:	vldr	d16, [fp, #-16]
   16b2c:	vldr	d17, [fp, #-16]
   16b30:	vmov.f64	d18, #96	; 0x3f000000  0.5
   16b34:	vmul.f64	d17, d17, d18
   16b38:	vcmp.f64	d16, d17
   16b3c:	vmrs	APSR_nzcv, fpscr
   16b40:	bne	16b54 <__assert_fail@plt+0x56c0>
   16b44:	ldr	r0, [fp, #-4]
   16b48:	movw	r1, #0
   16b4c:	str	r1, [r0, #4]
   16b50:	b	16d90 <__assert_fail@plt+0x58fc>
   16b54:	vldr	d16, [fp, #-16]
   16b58:	vcmpe.f64	d16, #0.0
   16b5c:	vmrs	APSR_nzcv, fpscr
   16b60:	movw	r0, #0
   16b64:	movmi	r0, #1
   16b68:	and	r0, r0, #1
   16b6c:	str	r0, [fp, #-20]	; 0xffffffec
   16b70:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b74:	cmp	r0, #0
   16b78:	beq	16b88 <__assert_fail@plt+0x56f4>
   16b7c:	vldr	d16, [fp, #-16]
   16b80:	vneg.f64	d16, d16
   16b84:	vstr	d16, [fp, #-16]
   16b88:	vldr	d16, [fp, #-16]
   16b8c:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16b90:	vcmpe.f64	d16, d17
   16b94:	vmrs	APSR_nzcv, fpscr
   16b98:	bpl	16bac <__assert_fail@plt+0x5718>
   16b9c:	ldr	r0, [fp, #-4]
   16ba0:	movw	r1, #0
   16ba4:	str	r1, [r0, #4]
   16ba8:	b	16d90 <__assert_fail@plt+0x58fc>
   16bac:	vldr	d16, [pc, #484]	; 16d98 <__assert_fail@plt+0x5904>
   16bb0:	vstr	d16, [sp, #24]
   16bb4:	vldr	d16, [sp, #24]
   16bb8:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16bbc:	vdiv.f64	d16, d17, d16
   16bc0:	vstr	d16, [sp, #16]
   16bc4:	movw	r0, #1
   16bc8:	str	r0, [fp, #-28]	; 0xffffffe4
   16bcc:	vldr	d16, [fp, #-16]
   16bd0:	vldr	d17, [sp, #24]
   16bd4:	vcmpe.f64	d16, d17
   16bd8:	vmrs	APSR_nzcv, fpscr
   16bdc:	blt	16c00 <__assert_fail@plt+0x576c>
   16be0:	vldr	d16, [sp, #16]
   16be4:	vldr	d17, [fp, #-16]
   16be8:	vmul.f64	d16, d17, d16
   16bec:	vstr	d16, [fp, #-16]
   16bf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16bf4:	add	r0, r0, #1
   16bf8:	str	r0, [fp, #-28]	; 0xffffffe4
   16bfc:	b	16bcc <__assert_fail@plt+0x5738>
   16c00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c04:	ldr	r1, [fp, #-4]
   16c08:	ldr	r1, [r1]
   16c0c:	cmp	r0, r1
   16c10:	ble	16c28 <__assert_fail@plt+0x5794>
   16c14:	ldr	r0, [fp, #-4]
   16c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16c1c:	bl	160ec <__assert_fail@plt+0x4c58>
   16c20:	str	r0, [sp, #8]
   16c24:	b	16c34 <__assert_fail@plt+0x57a0>
   16c28:	ldr	r0, [fp, #-4]
   16c2c:	ldr	r0, [r0, #8]
   16c30:	str	r0, [sp, #8]
   16c34:	ldr	r0, [sp, #8]
   16c38:	str	r0, [fp, #-24]	; 0xffffffe8
   16c3c:	vldr	d16, [fp, #-16]
   16c40:	vcvt.u32.f64	s0, d16
   16c44:	vmov	r0, s0
   16c48:	str	r0, [sp, #12]
   16c4c:	ldr	r0, [sp, #12]
   16c50:	vmov	s0, r0
   16c54:	vcvt.f64.u32	d16, s0
   16c58:	vldr	d17, [fp, #-16]
   16c5c:	vsub.f64	d16, d17, d16
   16c60:	vstr	d16, [fp, #-16]
   16c64:	vldr	d16, [fp, #-16]
   16c68:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16c6c:	vcmpe.f64	d16, d17
   16c70:	vmrs	APSR_nzcv, fpscr
   16c74:	bpl	16c7c <__assert_fail@plt+0x57e8>
   16c78:	b	16c9c <__assert_fail@plt+0x5808>
   16c7c:	movw	r0, #17446	; 0x4426
   16c80:	movt	r0, #4
   16c84:	movw	r1, #16512	; 0x4080
   16c88:	movt	r1, #4
   16c8c:	movw	r2, #1736	; 0x6c8
   16c90:	movw	r3, #17454	; 0x442e
   16c94:	movt	r3, #4
   16c98:	bl	11494 <__assert_fail@plt>
   16c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ca0:	sub	r0, r0, #1
   16ca4:	str	r0, [sp, #32]
   16ca8:	ldr	r0, [sp, #12]
   16cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cb0:	ldr	r2, [sp, #32]
   16cb4:	add	r1, r1, r2, lsl #2
   16cb8:	str	r0, [r1]
   16cbc:	ldr	r0, [sp, #32]
   16cc0:	mvn	r1, #0
   16cc4:	add	r0, r0, r1
   16cc8:	str	r0, [sp, #32]
   16ccc:	cmp	r0, #0
   16cd0:	blt	16d5c <__assert_fail@plt+0x58c8>
   16cd4:	vldr	d16, [sp, #24]
   16cd8:	vldr	d17, [fp, #-16]
   16cdc:	vmul.f64	d16, d16, d17
   16ce0:	vstr	d16, [fp, #-16]
   16ce4:	vldr	d16, [fp, #-16]
   16ce8:	vcvt.u32.f64	s0, d16
   16cec:	vmov	r0, s0
   16cf0:	str	r0, [sp, #12]
   16cf4:	ldr	r0, [sp, #12]
   16cf8:	vmov	s0, r0
   16cfc:	vcvt.f64.u32	d16, s0
   16d00:	vldr	d17, [fp, #-16]
   16d04:	vsub.f64	d16, d17, d16
   16d08:	vstr	d16, [fp, #-16]
   16d0c:	vldr	d16, [fp, #-16]
   16d10:	vmov.f64	d17, #112	; 0x3f800000  1.0
   16d14:	vcmpe.f64	d16, d17
   16d18:	vmrs	APSR_nzcv, fpscr
   16d1c:	bpl	16d24 <__assert_fail@plt+0x5890>
   16d20:	b	16d44 <__assert_fail@plt+0x58b0>
   16d24:	movw	r0, #17446	; 0x4426
   16d28:	movt	r0, #4
   16d2c:	movw	r1, #16512	; 0x4080
   16d30:	movt	r1, #4
   16d34:	movw	r2, #1744	; 0x6d0
   16d38:	movw	r3, #17454	; 0x442e
   16d3c:	movt	r3, #4
   16d40:	bl	11494 <__assert_fail@plt>
   16d44:	ldr	r0, [sp, #12]
   16d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d4c:	ldr	r2, [sp, #32]
   16d50:	add	r1, r1, r2, lsl #2
   16d54:	str	r0, [r1]
   16d58:	b	16cbc <__assert_fail@plt+0x5828>
   16d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d60:	cmp	r0, #0
   16d64:	beq	16d7c <__assert_fail@plt+0x58e8>
   16d68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d6c:	movw	r1, #0
   16d70:	sub	r0, r1, r0
   16d74:	str	r0, [sp, #4]
   16d78:	b	16d84 <__assert_fail@plt+0x58f0>
   16d7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d80:	str	r0, [sp, #4]
   16d84:	ldr	r0, [sp, #4]
   16d88:	ldr	r1, [fp, #-4]
   16d8c:	str	r0, [r1, #4]
   16d90:	mov	sp, fp
   16d94:	pop	{fp, pc}
   16d98:	andeq	r0, r0, r0
   16d9c:	mvnsmi	r0, r0
   16da0:	push	{fp, lr}
   16da4:	mov	fp, sp
   16da8:	sub	sp, sp, #16
   16dac:	str	r0, [fp, #-4]
   16db0:	vstr	d0, [sp]
   16db4:	ldr	r0, [fp, #-4]
   16db8:	bl	15e6c <__assert_fail@plt+0x49d8>
   16dbc:	ldr	r0, [fp, #-4]
   16dc0:	vldr	d0, [sp]
   16dc4:	bl	16b00 <__assert_fail@plt+0x566c>
   16dc8:	mov	sp, fp
   16dcc:	pop	{fp, pc}
   16dd0:	sub	sp, sp, #56	; 0x38
   16dd4:	vldr	d16, [pc, #556]	; 17008 <__assert_fail@plt+0x5b74>
   16dd8:	str	r0, [sp, #44]	; 0x2c
   16ddc:	vstr	d16, [sp, #16]
   16de0:	ldr	r0, [sp, #44]	; 0x2c
   16de4:	ldr	r0, [r0, #4]
   16de8:	cmp	r0, #0
   16dec:	blt	16e00 <__assert_fail@plt+0x596c>
   16df0:	ldr	r0, [sp, #44]	; 0x2c
   16df4:	ldr	r0, [r0, #4]
   16df8:	str	r0, [sp]
   16dfc:	b	16e14 <__assert_fail@plt+0x5980>
   16e00:	ldr	r0, [sp, #44]	; 0x2c
   16e04:	ldr	r0, [r0, #4]
   16e08:	movw	r1, #0
   16e0c:	sub	r0, r1, r0
   16e10:	str	r0, [sp]
   16e14:	ldr	r0, [sp]
   16e18:	str	r0, [sp, #32]
   16e1c:	ldr	r0, [sp, #32]
   16e20:	cmp	r0, #0
   16e24:	bne	16e34 <__assert_fail@plt+0x59a0>
   16e28:	vldr	d16, [pc, #480]	; 17010 <__assert_fail@plt+0x5b7c>
   16e2c:	vstr	d16, [sp, #48]	; 0x30
   16e30:	b	16ffc <__assert_fail@plt+0x5b68>
   16e34:	ldr	r0, [sp, #44]	; 0x2c
   16e38:	ldr	r0, [r0, #8]
   16e3c:	ldr	r1, [sp, #32]
   16e40:	sub	r1, r1, #1
   16e44:	str	r1, [sp, #32]
   16e48:	add	r0, r0, r1, lsl #2
   16e4c:	ldr	r0, [r0]
   16e50:	str	r0, [sp, #36]	; 0x24
   16e54:	ldr	r0, [sp, #36]	; 0x24
   16e58:	str	r0, [sp, #12]
   16e5c:	movw	r0, #0
   16e60:	str	r0, [sp, #8]
   16e64:	movw	r0, #8
   16e68:	str	r0, [sp, #4]
   16e6c:	ldr	r0, [sp, #4]
   16e70:	movw	r1, #32
   16e74:	cmp	r1, r0
   16e78:	bls	16eb4 <__assert_fail@plt+0x5a20>
   16e7c:	b	16e80 <__assert_fail@plt+0x59ec>
   16e80:	ldr	r0, [sp, #12]
   16e84:	and	r0, r0, #-16777216	; 0xff000000
   16e88:	cmp	r0, #0
   16e8c:	bne	16eb0 <__assert_fail@plt+0x5a1c>
   16e90:	ldr	r0, [sp, #4]
   16e94:	ldr	r1, [sp, #12]
   16e98:	lsl	r0, r1, r0
   16e9c:	str	r0, [sp, #12]
   16ea0:	ldr	r0, [sp, #8]
   16ea4:	add	r0, r0, #8
   16ea8:	str	r0, [sp, #8]
   16eac:	b	16e80 <__assert_fail@plt+0x59ec>
   16eb0:	b	16eb4 <__assert_fail@plt+0x5a20>
   16eb4:	b	16eb8 <__assert_fail@plt+0x5a24>
   16eb8:	ldr	r0, [sp, #12]
   16ebc:	and	r0, r0, #-2147483648	; 0x80000000
   16ec0:	cmp	r0, #0
   16ec4:	bne	16ee4 <__assert_fail@plt+0x5a50>
   16ec8:	ldr	r0, [sp, #12]
   16ecc:	lsl	r0, r0, #1
   16ed0:	str	r0, [sp, #12]
   16ed4:	ldr	r0, [sp, #8]
   16ed8:	add	r0, r0, #1
   16edc:	str	r0, [sp, #8]
   16ee0:	b	16eb8 <__assert_fail@plt+0x5a24>
   16ee4:	ldr	r0, [sp, #8]
   16ee8:	str	r0, [sp, #40]	; 0x28
   16eec:	ldr	r0, [sp, #40]	; 0x28
   16ef0:	add	r0, r0, #53	; 0x35
   16ef4:	sub	r0, r0, #32
   16ef8:	str	r0, [sp, #40]	; 0x28
   16efc:	ldr	r0, [sp, #40]	; 0x28
   16f00:	cmp	r0, #0
   16f04:	bge	16f28 <__assert_fail@plt+0x5a94>
   16f08:	ldr	r0, [sp, #40]	; 0x28
   16f0c:	movw	r1, #0
   16f10:	sub	r0, r1, r0
   16f14:	mvn	r1, #0
   16f18:	lsl	r0, r1, r0
   16f1c:	ldr	r1, [sp, #36]	; 0x24
   16f20:	and	r0, r1, r0
   16f24:	str	r0, [sp, #36]	; 0x24
   16f28:	ldr	r0, [sp, #36]	; 0x24
   16f2c:	vmov	s0, r0
   16f30:	vcvt.f64.u32	d16, s0
   16f34:	vstr	d16, [sp, #24]
   16f38:	ldr	r0, [sp, #32]
   16f3c:	mvn	r1, #0
   16f40:	add	r0, r0, r1
   16f44:	str	r0, [sp, #32]
   16f48:	cmp	r0, #0
   16f4c:	blt	16fd8 <__assert_fail@plt+0x5b44>
   16f50:	vldr	d16, [sp, #16]
   16f54:	vldr	d17, [sp, #24]
   16f58:	vmul.f64	d16, d16, d17
   16f5c:	vstr	d16, [sp, #24]
   16f60:	ldr	r0, [sp, #40]	; 0x28
   16f64:	cmp	r0, #0
   16f68:	ble	16fd4 <__assert_fail@plt+0x5b40>
   16f6c:	ldr	r0, [sp, #44]	; 0x2c
   16f70:	ldr	r0, [r0, #8]
   16f74:	ldr	r1, [sp, #32]
   16f78:	add	r0, r0, r1, lsl #2
   16f7c:	ldr	r0, [r0]
   16f80:	str	r0, [sp, #36]	; 0x24
   16f84:	ldr	r0, [sp, #40]	; 0x28
   16f88:	sub	r0, r0, #32
   16f8c:	str	r0, [sp, #40]	; 0x28
   16f90:	ldr	r0, [sp, #40]	; 0x28
   16f94:	cmp	r0, #0
   16f98:	bge	16fbc <__assert_fail@plt+0x5b28>
   16f9c:	ldr	r0, [sp, #40]	; 0x28
   16fa0:	movw	r1, #0
   16fa4:	sub	r0, r1, r0
   16fa8:	mvn	r1, #0
   16fac:	lsl	r0, r1, r0
   16fb0:	ldr	r1, [sp, #36]	; 0x24
   16fb4:	and	r0, r1, r0
   16fb8:	str	r0, [sp, #36]	; 0x24
   16fbc:	ldr	r0, [sp, #36]	; 0x24
   16fc0:	vmov	s0, r0
   16fc4:	vcvt.f64.u32	d16, s0
   16fc8:	vldr	d17, [sp, #24]
   16fcc:	vadd.f64	d16, d17, d16
   16fd0:	vstr	d16, [sp, #24]
   16fd4:	b	16f38 <__assert_fail@plt+0x5aa4>
   16fd8:	ldr	r0, [sp, #44]	; 0x2c
   16fdc:	ldr	r0, [r0, #4]
   16fe0:	cmp	r0, #0
   16fe4:	bge	16ff4 <__assert_fail@plt+0x5b60>
   16fe8:	vldr	d16, [sp, #24]
   16fec:	vneg.f64	d16, d16
   16ff0:	vstr	d16, [sp, #24]
   16ff4:	vldr	d16, [sp, #24]
   16ff8:	vstr	d16, [sp, #48]	; 0x30
   16ffc:	vldr	d0, [sp, #48]	; 0x30
   17000:	add	sp, sp, #56	; 0x38
   17004:	bx	lr
   17008:	andeq	r0, r0, r0
   1700c:	mvnsmi	r0, r0
	...
   17018:	sub	sp, sp, #72	; 0x48
   1701c:	str	r0, [sp, #64]	; 0x40
   17020:	vstr	d0, [sp, #56]	; 0x38
   17024:	ldr	r0, [sp, #64]	; 0x40
   17028:	ldr	r0, [r0, #4]
   1702c:	str	r0, [sp, #52]	; 0x34
   17030:	vldr	d16, [sp, #56]	; 0x38
   17034:	vcmpe.f64	d16, #0.0
   17038:	vmrs	APSR_nzcv, fpscr
   1703c:	blt	1704c <__assert_fail@plt+0x5bb8>
   17040:	vldr	d16, [sp, #56]	; 0x38
   17044:	vstr	d16, [sp, #8]
   17048:	b	17058 <__assert_fail@plt+0x5bc4>
   1704c:	vldr	d16, [sp, #56]	; 0x38
   17050:	vneg.f64	d16, d16
   17054:	vstr	d16, [sp, #8]
   17058:	vldr	d16, [sp, #8]
   1705c:	vstr	d16, [sp, #56]	; 0x38
   17060:	ldr	r0, [sp, #52]	; 0x34
   17064:	cmp	r0, #0
   17068:	beq	171b4 <__assert_fail@plt+0x5d20>
   1706c:	ldr	r0, [sp, #52]	; 0x34
   17070:	cmp	r0, #0
   17074:	blt	17084 <__assert_fail@plt+0x5bf0>
   17078:	ldr	r0, [sp, #52]	; 0x34
   1707c:	str	r0, [sp, #4]
   17080:	b	17094 <__assert_fail@plt+0x5c00>
   17084:	ldr	r0, [sp, #52]	; 0x34
   17088:	movw	r1, #0
   1708c:	sub	r0, r1, r0
   17090:	str	r0, [sp, #4]
   17094:	ldr	r0, [sp, #4]
   17098:	vldr	d16, [pc, #328]	; 171e8 <__assert_fail@plt+0x5d54>
   1709c:	str	r0, [sp, #52]	; 0x34
   170a0:	vstr	d16, [sp, #40]	; 0x28
   170a4:	vldr	d16, [sp, #40]	; 0x28
   170a8:	vmov.f64	d17, #112	; 0x3f800000  1.0
   170ac:	vdiv.f64	d16, d17, d16
   170b0:	vstr	d16, [sp, #32]
   170b4:	movw	r0, #1
   170b8:	str	r0, [sp, #28]
   170bc:	ldr	r0, [sp, #28]
   170c0:	ldr	r1, [sp, #52]	; 0x34
   170c4:	cmp	r0, r1
   170c8:	bge	170ec <__assert_fail@plt+0x5c58>
   170cc:	vldr	d16, [sp, #32]
   170d0:	vldr	d17, [sp, #56]	; 0x38
   170d4:	vmul.f64	d16, d17, d16
   170d8:	vstr	d16, [sp, #56]	; 0x38
   170dc:	ldr	r0, [sp, #28]
   170e0:	add	r0, r0, #1
   170e4:	str	r0, [sp, #28]
   170e8:	b	170bc <__assert_fail@plt+0x5c28>
   170ec:	vldr	d16, [sp, #56]	; 0x38
   170f0:	vldr	d17, [sp, #40]	; 0x28
   170f4:	vcmpe.f64	d16, d17
   170f8:	vmrs	APSR_nzcv, fpscr
   170fc:	blt	1710c <__assert_fail@plt+0x5c78>
   17100:	mvn	r0, #0
   17104:	str	r0, [sp, #68]	; 0x44
   17108:	b	171d8 <__assert_fail@plt+0x5d44>
   1710c:	ldr	r0, [sp, #52]	; 0x34
   17110:	str	r0, [sp, #28]
   17114:	ldr	r0, [sp, #28]
   17118:	mvn	r1, #0
   1711c:	add	r1, r0, r1
   17120:	str	r1, [sp, #28]
   17124:	cmp	r0, #0
   17128:	ble	171b0 <__assert_fail@plt+0x5d1c>
   1712c:	vldr	d16, [sp, #56]	; 0x38
   17130:	vcvt.u32.f64	s0, d16
   17134:	vstr	s0, [sp, #24]
   17138:	ldr	r0, [sp, #64]	; 0x40
   1713c:	ldr	r0, [r0, #8]
   17140:	ldr	r1, [sp, #28]
   17144:	add	r0, r0, r1, lsl #2
   17148:	ldr	r0, [r0]
   1714c:	str	r0, [sp, #20]
   17150:	ldr	r0, [sp, #20]
   17154:	ldr	r1, [sp, #24]
   17158:	cmp	r0, r1
   1715c:	bls	1716c <__assert_fail@plt+0x5cd8>
   17160:	movw	r0, #1
   17164:	str	r0, [sp, #68]	; 0x44
   17168:	b	171d8 <__assert_fail@plt+0x5d44>
   1716c:	ldr	r0, [sp, #20]
   17170:	ldr	r1, [sp, #24]
   17174:	cmp	r0, r1
   17178:	bcs	17188 <__assert_fail@plt+0x5cf4>
   1717c:	mvn	r0, #0
   17180:	str	r0, [sp, #68]	; 0x44
   17184:	b	171d8 <__assert_fail@plt+0x5d44>
   17188:	b	1718c <__assert_fail@plt+0x5cf8>
   1718c:	vldr	d16, [sp, #40]	; 0x28
   17190:	vldr	d17, [sp, #56]	; 0x38
   17194:	ldr	r0, [sp, #24]
   17198:	vmov	s0, r0
   1719c:	vcvt.f64.u32	d18, s0
   171a0:	vsub.f64	d17, d17, d18
   171a4:	vmul.f64	d16, d16, d17
   171a8:	vstr	d16, [sp, #56]	; 0x38
   171ac:	b	17114 <__assert_fail@plt+0x5c80>
   171b0:	b	171b4 <__assert_fail@plt+0x5d20>
   171b4:	vldr	d16, [sp, #56]	; 0x38
   171b8:	vcmpe.f64	d16, #0.0
   171bc:	vmrs	APSR_nzcv, fpscr
   171c0:	movw	r0, #0
   171c4:	movgt	r0, #1
   171c8:	and	r0, r0, #1
   171cc:	movw	r1, #0
   171d0:	sub	r0, r1, r0
   171d4:	str	r0, [sp, #68]	; 0x44
   171d8:	ldr	r0, [sp, #68]	; 0x44
   171dc:	add	sp, sp, #72	; 0x48
   171e0:	bx	lr
   171e4:	nop	{0}
   171e8:	andeq	r0, r0, r0
   171ec:	mvnsmi	r0, r0
   171f0:	push	{fp, lr}
   171f4:	mov	fp, sp
   171f8:	sub	sp, sp, #16
   171fc:	str	r0, [sp, #8]
   17200:	vstr	d0, [sp]
   17204:	ldr	r0, [sp, #8]
   17208:	ldr	r0, [r0, #4]
   1720c:	cmp	r0, #0
   17210:	bge	1724c <__assert_fail@plt+0x5db8>
   17214:	vldr	d16, [sp]
   17218:	vcmpe.f64	d16, #0.0
   1721c:	vmrs	APSR_nzcv, fpscr
   17220:	blt	17230 <__assert_fail@plt+0x5d9c>
   17224:	mvn	r0, #0
   17228:	str	r0, [fp, #-4]
   1722c:	b	17278 <__assert_fail@plt+0x5de4>
   17230:	ldr	r0, [sp, #8]
   17234:	vldr	d0, [sp]
   17238:	bl	17018 <__assert_fail@plt+0x5b84>
   1723c:	movw	r1, #0
   17240:	sub	r0, r1, r0
   17244:	str	r0, [fp, #-4]
   17248:	b	17278 <__assert_fail@plt+0x5de4>
   1724c:	vldr	d16, [sp]
   17250:	vcmpe.f64	d16, #0.0
   17254:	vmrs	APSR_nzcv, fpscr
   17258:	bpl	17268 <__assert_fail@plt+0x5dd4>
   1725c:	movw	r0, #1
   17260:	str	r0, [fp, #-4]
   17264:	b	17278 <__assert_fail@plt+0x5de4>
   17268:	ldr	r0, [sp, #8]
   1726c:	vldr	d0, [sp]
   17270:	bl	17018 <__assert_fail@plt+0x5b84>
   17274:	str	r0, [fp, #-4]
   17278:	ldr	r0, [fp, #-4]
   1727c:	mov	sp, fp
   17280:	pop	{fp, pc}
   17284:	sub	sp, sp, #4
   17288:	str	r0, [sp]
   1728c:	ldr	r0, [sp]
   17290:	ldr	r0, [r0, #4]
   17294:	cmp	r0, #0
   17298:	movw	r0, #0
   1729c:	movgt	r0, #1
   172a0:	and	r0, r0, #1
   172a4:	ldr	r1, [sp]
   172a8:	ldr	r1, [r1, #4]
   172ac:	cmp	r1, #0
   172b0:	movw	r1, #0
   172b4:	movlt	r1, #1
   172b8:	and	r1, r1, #1
   172bc:	sub	r0, r0, r1
   172c0:	add	sp, sp, #4
   172c4:	bx	lr
   172c8:	push	{fp, lr}
   172cc:	mov	fp, sp
   172d0:	sub	sp, sp, #16
   172d4:	str	r0, [sp, #8]
   172d8:	str	r1, [sp, #4]
   172dc:	ldr	r0, [sp, #8]
   172e0:	ldr	r0, [r0, #4]
   172e4:	str	r0, [sp]
   172e8:	ldr	r0, [sp]
   172ec:	cmp	r0, #0
   172f0:	bge	17300 <__assert_fail@plt+0x5e6c>
   172f4:	mvn	r0, #0
   172f8:	str	r0, [fp, #-4]
   172fc:	b	17310 <__assert_fail@plt+0x5e7c>
   17300:	ldr	r0, [sp, #8]
   17304:	ldr	r1, [sp, #4]
   17308:	bl	165c0 <__assert_fail@plt+0x512c>
   1730c:	str	r0, [fp, #-4]
   17310:	ldr	r0, [fp, #-4]
   17314:	mov	sp, fp
   17318:	pop	{fp, pc}
   1731c:	push	{fp, lr}
   17320:	mov	fp, sp
   17324:	sub	sp, sp, #24
   17328:	str	r0, [fp, #-8]
   1732c:	str	r1, [sp, #12]
   17330:	ldr	r0, [fp, #-8]
   17334:	ldr	r0, [r0, #4]
   17338:	str	r0, [sp, #8]
   1733c:	ldr	r0, [sp, #12]
   17340:	ldr	r0, [r0, #4]
   17344:	str	r0, [sp, #4]
   17348:	ldr	r0, [sp, #8]
   1734c:	ldr	r1, [sp, #4]
   17350:	cmp	r0, r1
   17354:	beq	17380 <__assert_fail@plt+0x5eec>
   17358:	ldr	r0, [sp, #8]
   1735c:	ldr	r1, [sp, #4]
   17360:	cmp	r0, r1
   17364:	movw	r0, #0
   17368:	movlt	r0, #1
   1736c:	tst	r0, #1
   17370:	mvn	r0, #0
   17374:	moveq	r0, #1
   17378:	str	r0, [fp, #-4]
   1737c:	b	173d0 <__assert_fail@plt+0x5f3c>
   17380:	ldr	r0, [sp, #8]
   17384:	cmp	r0, #0
   17388:	blt	173ac <__assert_fail@plt+0x5f18>
   1738c:	ldr	r0, [fp, #-8]
   17390:	ldr	r0, [r0, #8]
   17394:	ldr	r1, [sp, #12]
   17398:	ldr	r1, [r1, #8]
   1739c:	ldr	r2, [sp, #8]
   173a0:	bl	13b7c <__assert_fail@plt+0x26e8>
   173a4:	str	r0, [fp, #-4]
   173a8:	b	173d0 <__assert_fail@plt+0x5f3c>
   173ac:	ldr	r0, [sp, #12]
   173b0:	ldr	r0, [r0, #8]
   173b4:	ldr	r1, [fp, #-8]
   173b8:	ldr	r1, [r1, #8]
   173bc:	ldr	r2, [sp, #8]
   173c0:	movw	r3, #0
   173c4:	sub	r2, r3, r2
   173c8:	bl	13b7c <__assert_fail@plt+0x26e8>
   173cc:	str	r0, [fp, #-4]
   173d0:	ldr	r0, [fp, #-4]
   173d4:	mov	sp, fp
   173d8:	pop	{fp, pc}
   173dc:	push	{fp, lr}
   173e0:	mov	fp, sp
   173e4:	sub	sp, sp, #32
   173e8:	str	r0, [fp, #-4]
   173ec:	str	r1, [fp, #-8]
   173f0:	ldr	r0, [fp, #-4]
   173f4:	ldr	r0, [r0, #8]
   173f8:	ldr	r1, [fp, #-4]
   173fc:	ldr	r1, [r1, #4]
   17400:	cmp	r1, #0
   17404:	str	r0, [fp, #-12]
   17408:	blt	1741c <__assert_fail@plt+0x5f88>
   1740c:	ldr	r0, [fp, #-4]
   17410:	ldr	r0, [r0, #4]
   17414:	str	r0, [sp, #16]
   17418:	b	17430 <__assert_fail@plt+0x5f9c>
   1741c:	ldr	r0, [fp, #-4]
   17420:	ldr	r0, [r0, #4]
   17424:	movw	r1, #0
   17428:	sub	r0, r1, r0
   1742c:	str	r0, [sp, #16]
   17430:	ldr	r0, [sp, #16]
   17434:	ldr	r1, [fp, #-8]
   17438:	ldr	r2, [r1, #8]
   1743c:	ldr	r1, [fp, #-8]
   17440:	ldr	r1, [r1, #4]
   17444:	cmp	r1, #0
   17448:	str	r0, [sp, #12]
   1744c:	str	r2, [sp, #8]
   17450:	blt	17464 <__assert_fail@plt+0x5fd0>
   17454:	ldr	r0, [fp, #-8]
   17458:	ldr	r0, [r0, #4]
   1745c:	str	r0, [sp, #4]
   17460:	b	17478 <__assert_fail@plt+0x5fe4>
   17464:	ldr	r0, [fp, #-8]
   17468:	ldr	r0, [r0, #4]
   1746c:	movw	r1, #0
   17470:	sub	r0, r1, r0
   17474:	str	r0, [sp, #4]
   17478:	ldr	r0, [sp, #4]
   1747c:	ldr	r1, [fp, #-12]
   17480:	str	r0, [sp]
   17484:	mov	r0, r1
   17488:	ldr	r1, [sp, #12]
   1748c:	ldr	r2, [sp, #8]
   17490:	ldr	r3, [sp]
   17494:	bl	174a0 <__assert_fail@plt+0x600c>
   17498:	mov	sp, fp
   1749c:	pop	{fp, pc}
   174a0:	push	{fp, lr}
   174a4:	mov	fp, sp
   174a8:	sub	sp, sp, #24
   174ac:	str	r0, [fp, #-8]
   174b0:	str	r1, [sp, #12]
   174b4:	str	r2, [sp, #8]
   174b8:	str	r3, [sp, #4]
   174bc:	ldr	r0, [sp, #12]
   174c0:	ldr	r1, [sp, #4]
   174c4:	cmp	r0, r1
   174c8:	beq	174f4 <__assert_fail@plt+0x6060>
   174cc:	ldr	r0, [sp, #12]
   174d0:	ldr	r1, [sp, #4]
   174d4:	cmp	r0, r1
   174d8:	movw	r0, #0
   174dc:	movlt	r0, #1
   174e0:	tst	r0, #1
   174e4:	mvn	r0, #0
   174e8:	moveq	r0, #1
   174ec:	str	r0, [fp, #-4]
   174f0:	b	17508 <__assert_fail@plt+0x6074>
   174f4:	ldr	r0, [fp, #-8]
   174f8:	ldr	r1, [sp, #8]
   174fc:	ldr	r2, [sp, #12]
   17500:	bl	13b7c <__assert_fail@plt+0x26e8>
   17504:	str	r0, [fp, #-4]
   17508:	ldr	r0, [fp, #-4]
   1750c:	mov	sp, fp
   17510:	pop	{fp, pc}
   17514:	push	{fp, lr}
   17518:	mov	fp, sp
   1751c:	sub	sp, sp, #16
   17520:	str	r0, [fp, #-4]
   17524:	str	r1, [sp, #8]
   17528:	ldr	r0, [fp, #-4]
   1752c:	ldr	r1, [sp, #8]
   17530:	bl	161dc <__assert_fail@plt+0x4d48>
   17534:	ldr	r0, [fp, #-4]
   17538:	ldr	r0, [r0, #4]
   1753c:	cmp	r0, #0
   17540:	blt	17554 <__assert_fail@plt+0x60c0>
   17544:	ldr	r0, [fp, #-4]
   17548:	ldr	r0, [r0, #4]
   1754c:	str	r0, [sp, #4]
   17550:	b	17568 <__assert_fail@plt+0x60d4>
   17554:	ldr	r0, [fp, #-4]
   17558:	ldr	r0, [r0, #4]
   1755c:	movw	r1, #0
   17560:	sub	r0, r1, r0
   17564:	str	r0, [sp, #4]
   17568:	ldr	r0, [sp, #4]
   1756c:	ldr	r1, [fp, #-4]
   17570:	str	r0, [r1, #4]
   17574:	mov	sp, fp
   17578:	pop	{fp, pc}
   1757c:	push	{fp, lr}
   17580:	mov	fp, sp
   17584:	sub	sp, sp, #8
   17588:	str	r0, [sp, #4]
   1758c:	str	r1, [sp]
   17590:	ldr	r0, [sp, #4]
   17594:	ldr	r1, [sp]
   17598:	bl	161dc <__assert_fail@plt+0x4d48>
   1759c:	ldr	r0, [sp, #4]
   175a0:	ldr	r0, [r0, #4]
   175a4:	movw	r1, #0
   175a8:	sub	r0, r1, r0
   175ac:	ldr	r1, [sp, #4]
   175b0:	str	r0, [r1, #4]
   175b4:	mov	sp, fp
   175b8:	pop	{fp, pc}
   175bc:	sub	sp, sp, #20
   175c0:	str	r0, [sp, #16]
   175c4:	str	r1, [sp, #12]
   175c8:	ldr	r0, [sp, #16]
   175cc:	ldr	r0, [r0, #4]
   175d0:	str	r0, [sp, #8]
   175d4:	ldr	r0, [sp, #12]
   175d8:	ldr	r0, [r0, #4]
   175dc:	ldr	r1, [sp, #16]
   175e0:	str	r0, [r1, #4]
   175e4:	ldr	r0, [sp, #8]
   175e8:	ldr	r1, [sp, #12]
   175ec:	str	r0, [r1, #4]
   175f0:	b	175f4 <__assert_fail@plt+0x6160>
   175f4:	ldr	r0, [sp, #16]
   175f8:	ldr	r0, [r0]
   175fc:	str	r0, [sp, #4]
   17600:	ldr	r0, [sp, #12]
   17604:	ldr	r0, [r0]
   17608:	ldr	r1, [sp, #16]
   1760c:	str	r0, [r1]
   17610:	ldr	r0, [sp, #4]
   17614:	ldr	r1, [sp, #12]
   17618:	str	r0, [r1]
   1761c:	b	17620 <__assert_fail@plt+0x618c>
   17620:	ldr	r0, [sp, #16]
   17624:	ldr	r0, [r0, #8]
   17628:	str	r0, [sp]
   1762c:	ldr	r0, [sp, #12]
   17630:	ldr	r0, [r0, #8]
   17634:	ldr	r1, [sp, #16]
   17638:	str	r0, [r1, #8]
   1763c:	ldr	r0, [sp]
   17640:	ldr	r1, [sp, #12]
   17644:	str	r0, [r1, #8]
   17648:	add	sp, sp, #20
   1764c:	bx	lr
   17650:	push	{fp, lr}
   17654:	mov	fp, sp
   17658:	sub	sp, sp, #24
   1765c:	mov	r3, sp
   17660:	str	r0, [fp, #-4]
   17664:	str	r1, [fp, #-8]
   17668:	str	r2, [sp, #12]
   1766c:	ldr	r1, [sp, #12]
   17670:	mov	r0, r3
   17674:	bl	162d4 <__assert_fail@plt+0x4e40>
   17678:	mov	r2, sp
   1767c:	ldr	r0, [fp, #-4]
   17680:	ldr	r1, [fp, #-8]
   17684:	bl	17698 <__assert_fail@plt+0x6204>
   17688:	mov	r0, sp
   1768c:	bl	15f44 <__assert_fail@plt+0x4ab0>
   17690:	mov	sp, fp
   17694:	pop	{fp, pc}
   17698:	push	{fp, lr}
   1769c:	mov	fp, sp
   176a0:	sub	sp, sp, #24
   176a4:	str	r0, [fp, #-4]
   176a8:	str	r1, [fp, #-8]
   176ac:	str	r2, [sp, #12]
   176b0:	ldr	r0, [fp, #-8]
   176b4:	ldr	r0, [r0, #4]
   176b8:	ldr	r1, [sp, #12]
   176bc:	ldr	r1, [r1, #4]
   176c0:	eor	r0, r0, r1
   176c4:	cmp	r0, #0
   176c8:	blt	176e4 <__assert_fail@plt+0x6250>
   176cc:	ldr	r0, [fp, #-4]
   176d0:	ldr	r1, [fp, #-8]
   176d4:	ldr	r2, [sp, #12]
   176d8:	bl	177b0 <__assert_fail@plt+0x631c>
   176dc:	str	r0, [sp, #8]
   176e0:	b	176f8 <__assert_fail@plt+0x6264>
   176e4:	ldr	r0, [fp, #-4]
   176e8:	ldr	r1, [fp, #-8]
   176ec:	ldr	r2, [sp, #12]
   176f0:	bl	17924 <__assert_fail@plt+0x6490>
   176f4:	str	r0, [sp, #8]
   176f8:	ldr	r0, [fp, #-8]
   176fc:	ldr	r0, [r0, #4]
   17700:	cmp	r0, #0
   17704:	blt	17714 <__assert_fail@plt+0x6280>
   17708:	ldr	r0, [sp, #8]
   1770c:	str	r0, [sp, #4]
   17710:	b	17724 <__assert_fail@plt+0x6290>
   17714:	ldr	r0, [sp, #8]
   17718:	movw	r1, #0
   1771c:	sub	r0, r1, r0
   17720:	str	r0, [sp, #4]
   17724:	ldr	r0, [sp, #4]
   17728:	ldr	r1, [fp, #-4]
   1772c:	str	r0, [r1, #4]
   17730:	mov	sp, fp
   17734:	pop	{fp, pc}
   17738:	push	{fp, lr}
   1773c:	mov	fp, sp
   17740:	sub	sp, sp, #16
   17744:	str	r0, [fp, #-4]
   17748:	str	r1, [sp, #8]
   1774c:	str	r2, [sp, #4]
   17750:	ldr	r0, [fp, #-4]
   17754:	ldr	r1, [sp, #4]
   17758:	ldr	r2, [sp, #8]
   1775c:	bl	17774 <__assert_fail@plt+0x62e0>
   17760:	ldr	r0, [fp, #-4]
   17764:	ldr	r1, [fp, #-4]
   17768:	bl	1757c <__assert_fail@plt+0x60e8>
   1776c:	mov	sp, fp
   17770:	pop	{fp, pc}
   17774:	push	{fp, lr}
   17778:	mov	fp, sp
   1777c:	sub	sp, sp, #16
   17780:	str	r0, [fp, #-4]
   17784:	str	r1, [sp, #8]
   17788:	str	r2, [sp, #4]
   1778c:	ldr	r0, [fp, #-4]
   17790:	ldr	r1, [sp, #4]
   17794:	bl	1757c <__assert_fail@plt+0x60e8>
   17798:	ldr	r0, [fp, #-4]
   1779c:	ldr	r1, [fp, #-4]
   177a0:	ldr	r2, [sp, #8]
   177a4:	bl	17650 <__assert_fail@plt+0x61bc>
   177a8:	mov	sp, fp
   177ac:	pop	{fp, pc}
   177b0:	push	{fp, lr}
   177b4:	mov	fp, sp
   177b8:	sub	sp, sp, #56	; 0x38
   177bc:	str	r0, [fp, #-4]
   177c0:	str	r1, [fp, #-8]
   177c4:	str	r2, [fp, #-12]
   177c8:	ldr	r0, [fp, #-8]
   177cc:	ldr	r0, [r0, #4]
   177d0:	cmp	r0, #0
   177d4:	blt	177e8 <__assert_fail@plt+0x6354>
   177d8:	ldr	r0, [fp, #-8]
   177dc:	ldr	r0, [r0, #4]
   177e0:	str	r0, [sp, #16]
   177e4:	b	177fc <__assert_fail@plt+0x6368>
   177e8:	ldr	r0, [fp, #-8]
   177ec:	ldr	r0, [r0, #4]
   177f0:	movw	r1, #0
   177f4:	sub	r0, r1, r0
   177f8:	str	r0, [sp, #16]
   177fc:	ldr	r0, [sp, #16]
   17800:	str	r0, [fp, #-16]
   17804:	ldr	r0, [fp, #-12]
   17808:	ldr	r0, [r0, #4]
   1780c:	cmp	r0, #0
   17810:	blt	17824 <__assert_fail@plt+0x6390>
   17814:	ldr	r0, [fp, #-12]
   17818:	ldr	r0, [r0, #4]
   1781c:	str	r0, [sp, #12]
   17820:	b	17838 <__assert_fail@plt+0x63a4>
   17824:	ldr	r0, [fp, #-12]
   17828:	ldr	r0, [r0, #4]
   1782c:	movw	r1, #0
   17830:	sub	r0, r1, r0
   17834:	str	r0, [sp, #12]
   17838:	ldr	r0, [sp, #12]
   1783c:	str	r0, [fp, #-20]	; 0xffffffec
   17840:	ldr	r0, [fp, #-16]
   17844:	ldr	r1, [fp, #-20]	; 0xffffffec
   17848:	cmp	r0, r1
   1784c:	bge	1788c <__assert_fail@plt+0x63f8>
   17850:	b	17854 <__assert_fail@plt+0x63c0>
   17854:	ldr	r0, [fp, #-8]
   17858:	str	r0, [sp, #24]
   1785c:	ldr	r0, [fp, #-12]
   17860:	str	r0, [fp, #-8]
   17864:	ldr	r0, [sp, #24]
   17868:	str	r0, [fp, #-12]
   1786c:	b	17870 <__assert_fail@plt+0x63dc>
   17870:	ldr	r0, [fp, #-16]
   17874:	str	r0, [sp, #20]
   17878:	ldr	r0, [fp, #-20]	; 0xffffffec
   1787c:	str	r0, [fp, #-16]
   17880:	ldr	r0, [sp, #20]
   17884:	str	r0, [fp, #-20]	; 0xffffffec
   17888:	b	1788c <__assert_fail@plt+0x63f8>
   1788c:	ldr	r0, [fp, #-16]
   17890:	add	r0, r0, #1
   17894:	ldr	r1, [fp, #-4]
   17898:	ldr	r1, [r1]
   1789c:	cmp	r0, r1
   178a0:	ble	178bc <__assert_fail@plt+0x6428>
   178a4:	ldr	r0, [fp, #-4]
   178a8:	ldr	r1, [fp, #-16]
   178ac:	add	r1, r1, #1
   178b0:	bl	160ec <__assert_fail@plt+0x4c58>
   178b4:	str	r0, [sp, #8]
   178b8:	b	178c8 <__assert_fail@plt+0x6434>
   178bc:	ldr	r0, [fp, #-4]
   178c0:	ldr	r0, [r0, #8]
   178c4:	str	r0, [sp, #8]
   178c8:	ldr	r0, [sp, #8]
   178cc:	str	r0, [fp, #-24]	; 0xffffffe8
   178d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178d4:	ldr	r1, [fp, #-8]
   178d8:	ldr	r1, [r1, #8]
   178dc:	ldr	r2, [fp, #-16]
   178e0:	ldr	r3, [fp, #-12]
   178e4:	ldr	r3, [r3, #8]
   178e8:	ldr	ip, [fp, #-20]	; 0xffffffec
   178ec:	mov	lr, sp
   178f0:	str	ip, [lr]
   178f4:	bl	13e90 <__assert_fail@plt+0x29fc>
   178f8:	str	r0, [sp, #28]
   178fc:	ldr	r0, [sp, #28]
   17900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17904:	ldr	r2, [fp, #-16]
   17908:	add	r1, r1, r2, lsl #2
   1790c:	str	r0, [r1]
   17910:	ldr	r0, [fp, #-16]
   17914:	ldr	r1, [sp, #28]
   17918:	add	r0, r0, r1
   1791c:	mov	sp, fp
   17920:	pop	{fp, pc}
   17924:	push	{fp, lr}
   17928:	mov	fp, sp
   1792c:	sub	sp, sp, #64	; 0x40
   17930:	str	r0, [fp, #-8]
   17934:	str	r1, [fp, #-12]
   17938:	str	r2, [fp, #-16]
   1793c:	ldr	r0, [fp, #-12]
   17940:	ldr	r0, [r0, #4]
   17944:	cmp	r0, #0
   17948:	blt	1795c <__assert_fail@plt+0x64c8>
   1794c:	ldr	r0, [fp, #-12]
   17950:	ldr	r0, [r0, #4]
   17954:	str	r0, [sp, #20]
   17958:	b	17970 <__assert_fail@plt+0x64dc>
   1795c:	ldr	r0, [fp, #-12]
   17960:	ldr	r0, [r0, #4]
   17964:	movw	r1, #0
   17968:	sub	r0, r1, r0
   1796c:	str	r0, [sp, #20]
   17970:	ldr	r0, [sp, #20]
   17974:	str	r0, [fp, #-20]	; 0xffffffec
   17978:	ldr	r0, [fp, #-16]
   1797c:	ldr	r0, [r0, #4]
   17980:	cmp	r0, #0
   17984:	blt	17998 <__assert_fail@plt+0x6504>
   17988:	ldr	r0, [fp, #-16]
   1798c:	ldr	r0, [r0, #4]
   17990:	str	r0, [sp, #16]
   17994:	b	179ac <__assert_fail@plt+0x6518>
   17998:	ldr	r0, [fp, #-16]
   1799c:	ldr	r0, [r0, #4]
   179a0:	movw	r1, #0
   179a4:	sub	r0, r1, r0
   179a8:	str	r0, [sp, #16]
   179ac:	ldr	r0, [sp, #16]
   179b0:	str	r0, [fp, #-24]	; 0xffffffe8
   179b4:	ldr	r0, [fp, #-12]
   179b8:	ldr	r0, [r0, #8]
   179bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   179c0:	ldr	r2, [fp, #-16]
   179c4:	ldr	r2, [r2, #8]
   179c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179cc:	bl	174a0 <__assert_fail@plt+0x600c>
   179d0:	str	r0, [fp, #-28]	; 0xffffffe4
   179d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   179d8:	cmp	r0, #0
   179dc:	ble	17a8c <__assert_fail@plt+0x65f8>
   179e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   179e4:	ldr	r1, [fp, #-8]
   179e8:	ldr	r1, [r1]
   179ec:	cmp	r0, r1
   179f0:	ble	17a08 <__assert_fail@plt+0x6574>
   179f4:	ldr	r0, [fp, #-8]
   179f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   179fc:	bl	160ec <__assert_fail@plt+0x4c58>
   17a00:	str	r0, [sp, #12]
   17a04:	b	17a14 <__assert_fail@plt+0x6580>
   17a08:	ldr	r0, [fp, #-8]
   17a0c:	ldr	r0, [r0, #8]
   17a10:	str	r0, [sp, #12]
   17a14:	ldr	r0, [sp, #12]
   17a18:	str	r0, [sp, #32]
   17a1c:	ldr	r0, [sp, #32]
   17a20:	ldr	r1, [fp, #-12]
   17a24:	ldr	r1, [r1, #8]
   17a28:	ldr	r2, [fp, #-20]	; 0xffffffec
   17a2c:	ldr	r3, [fp, #-16]
   17a30:	ldr	r3, [r3, #8]
   17a34:	ldr	ip, [fp, #-24]	; 0xffffffe8
   17a38:	str	ip, [sp]
   17a3c:	bl	140d4 <__assert_fail@plt+0x2c40>
   17a40:	str	r0, [sp, #28]
   17a44:	ldr	r0, [sp, #28]
   17a48:	cmp	r0, #0
   17a4c:	bne	17a54 <__assert_fail@plt+0x65c0>
   17a50:	b	17a74 <__assert_fail@plt+0x65e0>
   17a54:	movw	r0, #17493	; 0x4455
   17a58:	movt	r0, #4
   17a5c:	movw	r1, #16512	; 0x4080
   17a60:	movt	r1, #4
   17a64:	movw	r2, #2006	; 0x7d6
   17a68:	movw	r3, #19782	; 0x4d46
   17a6c:	movt	r3, #4
   17a70:	bl	11494 <__assert_fail@plt>
   17a74:	b	17a78 <__assert_fail@plt+0x65e4>
   17a78:	ldr	r0, [sp, #32]
   17a7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a80:	bl	13c4c <__assert_fail@plt+0x27b8>
   17a84:	str	r0, [fp, #-4]
   17a88:	b	17b54 <__assert_fail@plt+0x66c0>
   17a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a90:	cmp	r0, #0
   17a94:	bge	17b4c <__assert_fail@plt+0x66b8>
   17a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a9c:	ldr	r1, [fp, #-8]
   17aa0:	ldr	r1, [r1]
   17aa4:	cmp	r0, r1
   17aa8:	ble	17ac0 <__assert_fail@plt+0x662c>
   17aac:	ldr	r0, [fp, #-8]
   17ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ab4:	bl	160ec <__assert_fail@plt+0x4c58>
   17ab8:	str	r0, [sp, #8]
   17abc:	b	17acc <__assert_fail@plt+0x6638>
   17ac0:	ldr	r0, [fp, #-8]
   17ac4:	ldr	r0, [r0, #8]
   17ac8:	str	r0, [sp, #8]
   17acc:	ldr	r0, [sp, #8]
   17ad0:	str	r0, [sp, #32]
   17ad4:	ldr	r0, [sp, #32]
   17ad8:	ldr	r1, [fp, #-16]
   17adc:	ldr	r1, [r1, #8]
   17ae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ae4:	ldr	r3, [fp, #-12]
   17ae8:	ldr	r3, [r3, #8]
   17aec:	ldr	ip, [fp, #-20]	; 0xffffffec
   17af0:	str	ip, [sp]
   17af4:	bl	140d4 <__assert_fail@plt+0x2c40>
   17af8:	str	r0, [sp, #24]
   17afc:	ldr	r0, [sp, #24]
   17b00:	cmp	r0, #0
   17b04:	bne	17b0c <__assert_fail@plt+0x6678>
   17b08:	b	17b2c <__assert_fail@plt+0x6698>
   17b0c:	movw	r0, #17493	; 0x4455
   17b10:	movt	r0, #4
   17b14:	movw	r1, #16512	; 0x4080
   17b18:	movt	r1, #4
   17b1c:	movw	r2, #2012	; 0x7dc
   17b20:	movw	r3, #19782	; 0x4d46
   17b24:	movt	r3, #4
   17b28:	bl	11494 <__assert_fail@plt>
   17b2c:	b	17b30 <__assert_fail@plt+0x669c>
   17b30:	ldr	r0, [sp, #32]
   17b34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b38:	bl	13c4c <__assert_fail@plt+0x27b8>
   17b3c:	movw	r1, #0
   17b40:	sub	r0, r1, r0
   17b44:	str	r0, [fp, #-4]
   17b48:	b	17b54 <__assert_fail@plt+0x66c0>
   17b4c:	movw	r0, #0
   17b50:	str	r0, [fp, #-4]
   17b54:	ldr	r0, [fp, #-4]
   17b58:	mov	sp, fp
   17b5c:	pop	{fp, pc}
   17b60:	push	{fp, lr}
   17b64:	mov	fp, sp
   17b68:	sub	sp, sp, #24
   17b6c:	str	r0, [fp, #-4]
   17b70:	str	r1, [fp, #-8]
   17b74:	str	r2, [sp, #12]
   17b78:	ldr	r0, [fp, #-8]
   17b7c:	ldr	r0, [r0, #4]
   17b80:	ldr	r1, [sp, #12]
   17b84:	ldr	r1, [r1, #4]
   17b88:	eor	r0, r0, r1
   17b8c:	cmp	r0, #0
   17b90:	blt	17bac <__assert_fail@plt+0x6718>
   17b94:	ldr	r0, [fp, #-4]
   17b98:	ldr	r1, [fp, #-8]
   17b9c:	ldr	r2, [sp, #12]
   17ba0:	bl	17924 <__assert_fail@plt+0x6490>
   17ba4:	str	r0, [sp, #8]
   17ba8:	b	17bc0 <__assert_fail@plt+0x672c>
   17bac:	ldr	r0, [fp, #-4]
   17bb0:	ldr	r1, [fp, #-8]
   17bb4:	ldr	r2, [sp, #12]
   17bb8:	bl	177b0 <__assert_fail@plt+0x631c>
   17bbc:	str	r0, [sp, #8]
   17bc0:	ldr	r0, [fp, #-8]
   17bc4:	ldr	r0, [r0, #4]
   17bc8:	cmp	r0, #0
   17bcc:	blt	17bdc <__assert_fail@plt+0x6748>
   17bd0:	ldr	r0, [sp, #8]
   17bd4:	str	r0, [sp, #4]
   17bd8:	b	17bec <__assert_fail@plt+0x6758>
   17bdc:	ldr	r0, [sp, #8]
   17be0:	movw	r1, #0
   17be4:	sub	r0, r1, r0
   17be8:	str	r0, [sp, #4]
   17bec:	ldr	r0, [sp, #4]
   17bf0:	ldr	r1, [fp, #-4]
   17bf4:	str	r0, [r1, #4]
   17bf8:	mov	sp, fp
   17bfc:	pop	{fp, pc}
   17c00:	push	{fp, lr}
   17c04:	mov	fp, sp
   17c08:	sub	sp, sp, #16
   17c0c:	str	r0, [fp, #-4]
   17c10:	str	r1, [sp, #8]
   17c14:	str	r2, [sp, #4]
   17c18:	ldr	r0, [sp, #4]
   17c1c:	cmp	r0, #0
   17c20:	bge	17c54 <__assert_fail@plt+0x67c0>
   17c24:	ldr	r0, [fp, #-4]
   17c28:	ldr	r1, [sp, #8]
   17c2c:	ldr	r2, [sp, #4]
   17c30:	add	r2, r2, #1
   17c34:	sub	r2, r2, #1
   17c38:	movw	r3, #0
   17c3c:	sub	r2, r3, r2
   17c40:	bl	17c6c <__assert_fail@plt+0x67d8>
   17c44:	ldr	r0, [fp, #-4]
   17c48:	ldr	r1, [fp, #-4]
   17c4c:	bl	1757c <__assert_fail@plt+0x60e8>
   17c50:	b	17c64 <__assert_fail@plt+0x67d0>
   17c54:	ldr	r0, [fp, #-4]
   17c58:	ldr	r1, [sp, #8]
   17c5c:	ldr	r2, [sp, #4]
   17c60:	bl	17c6c <__assert_fail@plt+0x67d8>
   17c64:	mov	sp, fp
   17c68:	pop	{fp, pc}
   17c6c:	push	{fp, lr}
   17c70:	mov	fp, sp
   17c74:	sub	sp, sp, #24
   17c78:	mov	r3, sp
   17c7c:	str	r0, [fp, #-4]
   17c80:	str	r1, [fp, #-8]
   17c84:	str	r2, [sp, #12]
   17c88:	ldr	r1, [sp, #12]
   17c8c:	mov	r0, r3
   17c90:	bl	162d4 <__assert_fail@plt+0x4e40>
   17c94:	mov	r2, sp
   17c98:	ldr	r0, [fp, #-4]
   17c9c:	ldr	r1, [fp, #-8]
   17ca0:	bl	17cb4 <__assert_fail@plt+0x6820>
   17ca4:	mov	r0, sp
   17ca8:	bl	15f44 <__assert_fail@plt+0x4ab0>
   17cac:	mov	sp, fp
   17cb0:	pop	{fp, pc}
   17cb4:	push	{fp, lr}
   17cb8:	mov	fp, sp
   17cbc:	sub	sp, sp, #64	; 0x40
   17cc0:	str	r0, [fp, #-4]
   17cc4:	str	r1, [fp, #-8]
   17cc8:	str	r2, [fp, #-12]
   17ccc:	ldr	r0, [fp, #-8]
   17cd0:	ldr	r0, [r0, #4]
   17cd4:	str	r0, [fp, #-20]	; 0xffffffec
   17cd8:	ldr	r0, [fp, #-12]
   17cdc:	ldr	r0, [r0, #4]
   17ce0:	str	r0, [fp, #-24]	; 0xffffffe8
   17ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ce8:	cmp	r0, #0
   17cec:	beq	17cfc <__assert_fail@plt+0x6868>
   17cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf4:	cmp	r0, #0
   17cf8:	bne	17d0c <__assert_fail@plt+0x6878>
   17cfc:	ldr	r0, [fp, #-4]
   17d00:	movw	r1, #0
   17d04:	str	r1, [r0, #4]
   17d08:	b	17e8c <__assert_fail@plt+0x69f8>
   17d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d14:	eor	r0, r0, r1
   17d18:	cmp	r0, #0
   17d1c:	movw	r0, #0
   17d20:	movlt	r0, #1
   17d24:	and	r0, r0, #1
   17d28:	str	r0, [fp, #-16]
   17d2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d30:	cmp	r0, #0
   17d34:	blt	17d44 <__assert_fail@plt+0x68b0>
   17d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d3c:	str	r0, [sp, #16]
   17d40:	b	17d54 <__assert_fail@plt+0x68c0>
   17d44:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d48:	movw	r1, #0
   17d4c:	sub	r0, r1, r0
   17d50:	str	r0, [sp, #16]
   17d54:	ldr	r0, [sp, #16]
   17d58:	str	r0, [fp, #-20]	; 0xffffffec
   17d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d60:	cmp	r0, #0
   17d64:	blt	17d74 <__assert_fail@plt+0x68e0>
   17d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d6c:	str	r0, [sp, #12]
   17d70:	b	17d84 <__assert_fail@plt+0x68f0>
   17d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d78:	movw	r1, #0
   17d7c:	sub	r0, r1, r0
   17d80:	str	r0, [sp, #12]
   17d84:	ldr	r0, [sp, #12]
   17d88:	str	r0, [fp, #-24]	; 0xffffffe8
   17d8c:	add	r0, sp, #24
   17d90:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d98:	add	r1, r1, r2
   17d9c:	lsl	r1, r1, #5
   17da0:	bl	15ea0 <__assert_fail@plt+0x4a0c>
   17da4:	ldr	r0, [sp, #32]
   17da8:	str	r0, [sp, #20]
   17dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   17db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17db4:	cmp	r0, r1
   17db8:	blt	17de4 <__assert_fail@plt+0x6950>
   17dbc:	ldr	r0, [sp, #20]
   17dc0:	ldr	r1, [fp, #-8]
   17dc4:	ldr	r1, [r1, #8]
   17dc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17dcc:	ldr	r3, [fp, #-12]
   17dd0:	ldr	r3, [r3, #8]
   17dd4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   17dd8:	str	ip, [sp]
   17ddc:	bl	14778 <__assert_fail@plt+0x32e4>
   17de0:	b	17e08 <__assert_fail@plt+0x6974>
   17de4:	ldr	r0, [sp, #20]
   17de8:	ldr	r1, [fp, #-12]
   17dec:	ldr	r1, [r1, #8]
   17df0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17df4:	ldr	r3, [fp, #-8]
   17df8:	ldr	r3, [r3, #8]
   17dfc:	ldr	ip, [fp, #-20]	; 0xffffffec
   17e00:	str	ip, [sp]
   17e04:	bl	14778 <__assert_fail@plt+0x32e4>
   17e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e10:	add	r0, r0, r1
   17e14:	str	r0, [fp, #-28]	; 0xffffffe4
   17e18:	ldr	r0, [sp, #20]
   17e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e20:	sub	r1, r1, #1
   17e24:	add	r0, r0, r1, lsl #2
   17e28:	ldr	r0, [r0]
   17e2c:	cmp	r0, #0
   17e30:	movw	r0, #0
   17e34:	moveq	r0, #1
   17e38:	and	r0, r0, #1
   17e3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e40:	sub	r0, r1, r0
   17e44:	str	r0, [fp, #-28]	; 0xffffffe4
   17e48:	ldr	r0, [fp, #-16]
   17e4c:	cmp	r0, #0
   17e50:	beq	17e68 <__assert_fail@plt+0x69d4>
   17e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e58:	movw	r1, #0
   17e5c:	sub	r0, r1, r0
   17e60:	str	r0, [sp, #8]
   17e64:	b	17e70 <__assert_fail@plt+0x69dc>
   17e68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e6c:	str	r0, [sp, #8]
   17e70:	ldr	r0, [sp, #8]
   17e74:	add	r1, sp, #24
   17e78:	str	r0, [sp, #28]
   17e7c:	ldr	r0, [fp, #-4]
   17e80:	bl	175bc <__assert_fail@plt+0x6128>
   17e84:	add	r0, sp, #24
   17e88:	bl	15f44 <__assert_fail@plt+0x4ab0>
   17e8c:	mov	sp, fp
   17e90:	pop	{fp, pc}
   17e94:	push	{fp, lr}
   17e98:	mov	fp, sp
   17e9c:	sub	sp, sp, #48	; 0x30
   17ea0:	str	r0, [fp, #-4]
   17ea4:	str	r1, [fp, #-8]
   17ea8:	str	r2, [fp, #-12]
   17eac:	ldr	r0, [fp, #-8]
   17eb0:	ldr	r0, [r0, #4]
   17eb4:	cmp	r0, #0
   17eb8:	blt	17ecc <__assert_fail@plt+0x6a38>
   17ebc:	ldr	r0, [fp, #-8]
   17ec0:	ldr	r0, [r0, #4]
   17ec4:	str	r0, [sp, #8]
   17ec8:	b	17ee0 <__assert_fail@plt+0x6a4c>
   17ecc:	ldr	r0, [fp, #-8]
   17ed0:	ldr	r0, [r0, #4]
   17ed4:	movw	r1, #0
   17ed8:	sub	r0, r1, r0
   17edc:	str	r0, [sp, #8]
   17ee0:	ldr	r0, [sp, #8]
   17ee4:	str	r0, [fp, #-16]
   17ee8:	ldr	r0, [fp, #-16]
   17eec:	cmp	r0, #0
   17ef0:	bne	17f04 <__assert_fail@plt+0x6a70>
   17ef4:	ldr	r0, [fp, #-4]
   17ef8:	movw	r1, #0
   17efc:	str	r1, [r0, #4]
   17f00:	b	1804c <__assert_fail@plt+0x6bb8>
   17f04:	ldr	r0, [fp, #-12]
   17f08:	lsr	r0, r0, #5
   17f0c:	str	r0, [sp, #24]
   17f10:	ldr	r0, [fp, #-12]
   17f14:	and	r0, r0, #31
   17f18:	str	r0, [sp, #20]
   17f1c:	ldr	r0, [fp, #-16]
   17f20:	ldr	r1, [sp, #24]
   17f24:	add	r0, r0, r1
   17f28:	ldr	r1, [sp, #20]
   17f2c:	cmp	r1, #0
   17f30:	movw	r1, #0
   17f34:	movhi	r1, #1
   17f38:	and	r1, r1, #1
   17f3c:	add	r0, r0, r1
   17f40:	str	r0, [fp, #-20]	; 0xffffffec
   17f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f48:	ldr	r1, [fp, #-4]
   17f4c:	ldr	r1, [r1]
   17f50:	cmp	r0, r1
   17f54:	ble	17f6c <__assert_fail@plt+0x6ad8>
   17f58:	ldr	r0, [fp, #-4]
   17f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f60:	bl	160ec <__assert_fail@plt+0x4c58>
   17f64:	str	r0, [sp, #4]
   17f68:	b	17f78 <__assert_fail@plt+0x6ae4>
   17f6c:	ldr	r0, [fp, #-4]
   17f70:	ldr	r0, [r0, #8]
   17f74:	str	r0, [sp, #4]
   17f78:	ldr	r0, [sp, #4]
   17f7c:	str	r0, [sp, #16]
   17f80:	ldr	r0, [sp, #20]
   17f84:	cmp	r0, #0
   17f88:	bls	17fec <__assert_fail@plt+0x6b58>
   17f8c:	ldr	r0, [sp, #16]
   17f90:	ldr	r1, [sp, #24]
   17f94:	add	r0, r0, r1, lsl #2
   17f98:	ldr	r1, [fp, #-8]
   17f9c:	ldr	r1, [r1, #8]
   17fa0:	ldr	r2, [fp, #-16]
   17fa4:	ldr	r3, [sp, #20]
   17fa8:	bl	149cc <__assert_fail@plt+0x3538>
   17fac:	str	r0, [sp, #12]
   17fb0:	ldr	r0, [sp, #12]
   17fb4:	ldr	r1, [sp, #16]
   17fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fbc:	sub	r2, r2, #1
   17fc0:	add	r1, r1, r2, lsl #2
   17fc4:	str	r0, [r1]
   17fc8:	ldr	r0, [sp, #12]
   17fcc:	cmp	r0, #0
   17fd0:	movw	r0, #0
   17fd4:	moveq	r0, #1
   17fd8:	and	r0, r0, #1
   17fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17fe0:	sub	r0, r1, r0
   17fe4:	str	r0, [fp, #-20]	; 0xffffffec
   17fe8:	b	18008 <__assert_fail@plt+0x6b74>
   17fec:	ldr	r0, [sp, #16]
   17ff0:	ldr	r1, [sp, #24]
   17ff4:	add	r0, r0, r1, lsl #2
   17ff8:	ldr	r1, [fp, #-8]
   17ffc:	ldr	r1, [r1, #8]
   18000:	ldr	r2, [fp, #-16]
   18004:	bl	13b30 <__assert_fail@plt+0x269c>
   18008:	ldr	r0, [sp, #16]
   1800c:	ldr	r1, [sp, #24]
   18010:	bl	13cbc <__assert_fail@plt+0x2828>
   18014:	ldr	r0, [fp, #-8]
   18018:	ldr	r0, [r0, #4]
   1801c:	cmp	r0, #0
   18020:	bge	18038 <__assert_fail@plt+0x6ba4>
   18024:	ldr	r0, [fp, #-20]	; 0xffffffec
   18028:	movw	r1, #0
   1802c:	sub	r0, r1, r0
   18030:	str	r0, [sp]
   18034:	b	18040 <__assert_fail@plt+0x6bac>
   18038:	ldr	r0, [fp, #-20]	; 0xffffffec
   1803c:	str	r0, [sp]
   18040:	ldr	r0, [sp]
   18044:	ldr	r1, [fp, #-4]
   18048:	str	r0, [r1, #4]
   1804c:	mov	sp, fp
   18050:	pop	{fp, pc}
   18054:	push	{fp, lr}
   18058:	mov	fp, sp
   1805c:	sub	sp, sp, #32
   18060:	add	r3, sp, #8
   18064:	str	r0, [fp, #-4]
   18068:	str	r1, [fp, #-8]
   1806c:	str	r2, [fp, #-12]
   18070:	ldr	r1, [fp, #-12]
   18074:	mov	r0, r3
   18078:	bl	162d4 <__assert_fail@plt+0x4e40>
   1807c:	add	r0, sp, #8
   18080:	ldr	r1, [fp, #-8]
   18084:	str	r0, [sp, #4]
   18088:	ldr	r2, [sp, #4]
   1808c:	bl	17cb4 <__assert_fail@plt+0x6820>
   18090:	add	r2, sp, #8
   18094:	ldr	r0, [fp, #-4]
   18098:	ldr	r1, [fp, #-4]
   1809c:	bl	17698 <__assert_fail@plt+0x6204>
   180a0:	add	r0, sp, #8
   180a4:	bl	15f44 <__assert_fail@plt+0x4ab0>
   180a8:	mov	sp, fp
   180ac:	pop	{fp, pc}
   180b0:	push	{fp, lr}
   180b4:	mov	fp, sp
   180b8:	sub	sp, sp, #32
   180bc:	add	r3, sp, #8
   180c0:	str	r0, [fp, #-4]
   180c4:	str	r1, [fp, #-8]
   180c8:	str	r2, [fp, #-12]
   180cc:	ldr	r1, [fp, #-12]
   180d0:	mov	r0, r3
   180d4:	bl	162d4 <__assert_fail@plt+0x4e40>
   180d8:	add	r0, sp, #8
   180dc:	ldr	r1, [fp, #-8]
   180e0:	str	r0, [sp, #4]
   180e4:	ldr	r2, [sp, #4]
   180e8:	bl	17cb4 <__assert_fail@plt+0x6820>
   180ec:	add	r2, sp, #8
   180f0:	ldr	r0, [fp, #-4]
   180f4:	ldr	r1, [fp, #-4]
   180f8:	bl	17b60 <__assert_fail@plt+0x66cc>
   180fc:	add	r0, sp, #8
   18100:	bl	15f44 <__assert_fail@plt+0x4ab0>
   18104:	mov	sp, fp
   18108:	pop	{fp, pc}
   1810c:	push	{fp, lr}
   18110:	mov	fp, sp
   18114:	sub	sp, sp, #24
   18118:	mov	r3, sp
   1811c:	str	r0, [fp, #-4]
   18120:	str	r1, [fp, #-8]
   18124:	str	r2, [sp, #12]
   18128:	mov	r0, r3
   1812c:	bl	15e6c <__assert_fail@plt+0x49d8>
   18130:	mov	r0, sp
   18134:	ldr	r1, [fp, #-8]
   18138:	ldr	r2, [sp, #12]
   1813c:	bl	17cb4 <__assert_fail@plt+0x6820>
   18140:	mov	r2, sp
   18144:	ldr	r0, [fp, #-4]
   18148:	ldr	r1, [fp, #-4]
   1814c:	bl	17698 <__assert_fail@plt+0x6204>
   18150:	mov	r0, sp
   18154:	bl	15f44 <__assert_fail@plt+0x4ab0>
   18158:	mov	sp, fp
   1815c:	pop	{fp, pc}
   18160:	push	{fp, lr}
   18164:	mov	fp, sp
   18168:	sub	sp, sp, #24
   1816c:	mov	r3, sp
   18170:	str	r0, [fp, #-4]
   18174:	str	r1, [fp, #-8]
   18178:	str	r2, [sp, #12]
   1817c:	mov	r0, r3
   18180:	bl	15e6c <__assert_fail@plt+0x49d8>
   18184:	mov	r0, sp
   18188:	ldr	r1, [fp, #-8]
   1818c:	ldr	r2, [sp, #12]
   18190:	bl	17cb4 <__assert_fail@plt+0x6820>
   18194:	mov	r2, sp
   18198:	ldr	r0, [fp, #-4]
   1819c:	ldr	r1, [fp, #-4]
   181a0:	bl	17b60 <__assert_fail@plt+0x66cc>
   181a4:	mov	r0, sp
   181a8:	bl	15f44 <__assert_fail@plt+0x4ab0>
   181ac:	mov	sp, fp
   181b0:	pop	{fp, pc}
   181b4:	push	{fp, lr}
   181b8:	mov	fp, sp
   181bc:	sub	sp, sp, #24
   181c0:	str	r0, [fp, #-4]
   181c4:	str	r1, [fp, #-8]
   181c8:	str	r2, [sp, #12]
   181cc:	str	r3, [sp, #8]
   181d0:	ldr	r0, [fp, #-4]
   181d4:	ldr	r1, [fp, #-8]
   181d8:	ldr	r2, [sp, #12]
   181dc:	ldr	r3, [sp, #8]
   181e0:	movw	ip, #1
   181e4:	str	ip, [sp]
   181e8:	bl	181f4 <__assert_fail@plt+0x6d60>
   181ec:	mov	sp, fp
   181f0:	pop	{fp, pc}
   181f4:	push	{fp, lr}
   181f8:	mov	fp, sp
   181fc:	sub	sp, sp, #120	; 0x78
   18200:	ldr	ip, [fp, #8]
   18204:	str	r0, [fp, #-8]
   18208:	str	r1, [fp, #-12]
   1820c:	str	r2, [fp, #-16]
   18210:	str	r3, [fp, #-20]	; 0xffffffec
   18214:	ldr	r0, [fp, #-16]
   18218:	ldr	r0, [r0, #4]
   1821c:	str	r0, [fp, #-24]	; 0xffffffe8
   18220:	ldr	r0, [fp, #-20]	; 0xffffffec
   18224:	ldr	r0, [r0, #4]
   18228:	str	r0, [fp, #-28]	; 0xffffffe4
   1822c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18230:	cmp	r0, #0
   18234:	bne	18244 <__assert_fail@plt+0x6db0>
   18238:	movw	r0, #19864	; 0x4d98
   1823c:	movt	r0, #4
   18240:	bl	1a998 <__assert_fail@plt+0x9504>
   18244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18248:	cmp	r0, #0
   1824c:	bne	18294 <__assert_fail@plt+0x6e00>
   18250:	ldr	r0, [fp, #-8]
   18254:	movw	r1, #0
   18258:	cmp	r0, r1
   1825c:	beq	1826c <__assert_fail@plt+0x6dd8>
   18260:	ldr	r0, [fp, #-8]
   18264:	movw	r1, #0
   18268:	str	r1, [r0, #4]
   1826c:	ldr	r0, [fp, #-12]
   18270:	movw	r1, #0
   18274:	cmp	r0, r1
   18278:	beq	18288 <__assert_fail@plt+0x6df4>
   1827c:	ldr	r0, [fp, #-12]
   18280:	movw	r1, #0
   18284:	str	r1, [r0, #4]
   18288:	movw	r0, #0
   1828c:	str	r0, [fp, #-4]
   18290:	b	18680 <__assert_fail@plt+0x71ec>
   18294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18298:	cmp	r0, #0
   1829c:	blt	182ac <__assert_fail@plt+0x6e18>
   182a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a4:	str	r0, [sp, #36]	; 0x24
   182a8:	b	182bc <__assert_fail@plt+0x6e28>
   182ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182b0:	movw	r1, #0
   182b4:	sub	r0, r1, r0
   182b8:	str	r0, [sp, #36]	; 0x24
   182bc:	ldr	r0, [sp, #36]	; 0x24
   182c0:	str	r0, [fp, #-32]	; 0xffffffe0
   182c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   182c8:	cmp	r0, #0
   182cc:	blt	182dc <__assert_fail@plt+0x6e48>
   182d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   182d4:	str	r0, [sp, #32]
   182d8:	b	182ec <__assert_fail@plt+0x6e58>
   182dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   182e0:	movw	r1, #0
   182e4:	sub	r0, r1, r0
   182e8:	str	r0, [sp, #32]
   182ec:	ldr	r0, [sp, #32]
   182f0:	str	r0, [fp, #-36]	; 0xffffffdc
   182f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   182f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182fc:	eor	r0, r0, r1
   18300:	str	r0, [fp, #-40]	; 0xffffffd8
   18304:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18308:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1830c:	cmp	r0, r1
   18310:	bge	18410 <__assert_fail@plt+0x6f7c>
   18314:	ldr	r0, [fp, #8]
   18318:	cmp	r0, #1
   1831c:	bne	1836c <__assert_fail@plt+0x6ed8>
   18320:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18324:	cmp	r0, #0
   18328:	blt	1836c <__assert_fail@plt+0x6ed8>
   1832c:	ldr	r0, [fp, #-12]
   18330:	movw	r1, #0
   18334:	cmp	r0, r1
   18338:	beq	1834c <__assert_fail@plt+0x6eb8>
   1833c:	ldr	r0, [fp, #-12]
   18340:	ldr	r1, [fp, #-16]
   18344:	ldr	r2, [fp, #-20]	; 0xffffffec
   18348:	bl	17b60 <__assert_fail@plt+0x66cc>
   1834c:	ldr	r0, [fp, #-8]
   18350:	movw	r1, #0
   18354:	cmp	r0, r1
   18358:	beq	18368 <__assert_fail@plt+0x6ed4>
   1835c:	ldr	r0, [fp, #-8]
   18360:	movw	r1, #1
   18364:	bl	16064 <__assert_fail@plt+0x4bd0>
   18368:	b	18404 <__assert_fail@plt+0x6f70>
   1836c:	ldr	r0, [fp, #8]
   18370:	cmp	r0, #0
   18374:	bne	183c4 <__assert_fail@plt+0x6f30>
   18378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1837c:	cmp	r0, #0
   18380:	bge	183c4 <__assert_fail@plt+0x6f30>
   18384:	ldr	r0, [fp, #-12]
   18388:	movw	r1, #0
   1838c:	cmp	r0, r1
   18390:	beq	183a4 <__assert_fail@plt+0x6f10>
   18394:	ldr	r0, [fp, #-12]
   18398:	ldr	r1, [fp, #-16]
   1839c:	ldr	r2, [fp, #-20]	; 0xffffffec
   183a0:	bl	17698 <__assert_fail@plt+0x6204>
   183a4:	ldr	r0, [fp, #-8]
   183a8:	movw	r1, #0
   183ac:	cmp	r0, r1
   183b0:	beq	183c0 <__assert_fail@plt+0x6f2c>
   183b4:	ldr	r0, [fp, #-8]
   183b8:	mvn	r1, #0
   183bc:	bl	15fc8 <__assert_fail@plt+0x4b34>
   183c0:	b	18400 <__assert_fail@plt+0x6f6c>
   183c4:	ldr	r0, [fp, #-12]
   183c8:	movw	r1, #0
   183cc:	cmp	r0, r1
   183d0:	beq	183e0 <__assert_fail@plt+0x6f4c>
   183d4:	ldr	r0, [fp, #-12]
   183d8:	ldr	r1, [fp, #-16]
   183dc:	bl	161dc <__assert_fail@plt+0x4d48>
   183e0:	ldr	r0, [fp, #-8]
   183e4:	movw	r1, #0
   183e8:	cmp	r0, r1
   183ec:	beq	183fc <__assert_fail@plt+0x6f68>
   183f0:	ldr	r0, [fp, #-8]
   183f4:	movw	r1, #0
   183f8:	str	r1, [r0, #4]
   183fc:	b	18400 <__assert_fail@plt+0x6f6c>
   18400:	b	18404 <__assert_fail@plt+0x6f70>
   18404:	movw	r0, #1
   18408:	str	r0, [fp, #-4]
   1840c:	b	18680 <__assert_fail@plt+0x71ec>
   18410:	add	r0, sp, #40	; 0x28
   18414:	ldr	r1, [fp, #-16]
   18418:	bl	16304 <__assert_fail@plt+0x4e70>
   1841c:	ldr	r0, [sp, #48]	; 0x30
   18420:	str	r0, [fp, #-44]	; 0xffffffd4
   18424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18428:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1842c:	sub	r0, r0, r1
   18430:	add	r0, r0, #1
   18434:	str	r0, [fp, #-52]	; 0xffffffcc
   18438:	ldr	r0, [fp, #-8]
   1843c:	movw	r1, #0
   18440:	cmp	r0, r1
   18444:	beq	18464 <__assert_fail@plt+0x6fd0>
   18448:	add	r0, sp, #52	; 0x34
   1844c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18450:	lsl	r1, r1, #5
   18454:	bl	15ea0 <__assert_fail@plt+0x4a0c>
   18458:	ldr	r0, [sp, #60]	; 0x3c
   1845c:	str	r0, [fp, #-48]	; 0xffffffd0
   18460:	b	1846c <__assert_fail@plt+0x6fd8>
   18464:	movw	r0, #0
   18468:	str	r0, [fp, #-48]	; 0xffffffd0
   1846c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18474:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18478:	ldr	r3, [fp, #-20]	; 0xffffffec
   1847c:	ldr	r3, [r3, #8]
   18480:	ldr	ip, [fp, #-36]	; 0xffffffdc
   18484:	str	ip, [sp]
   18488:	bl	1f3ac <__assert_fail@plt+0xdf18>
   1848c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18490:	movw	r1, #0
   18494:	cmp	r0, r1
   18498:	beq	184fc <__assert_fail@plt+0x7068>
   1849c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   184a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184a4:	sub	r1, r1, #1
   184a8:	add	r0, r0, r1, lsl #2
   184ac:	ldr	r0, [r0]
   184b0:	cmp	r0, #0
   184b4:	movw	r0, #0
   184b8:	moveq	r0, #1
   184bc:	and	r0, r0, #1
   184c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184c4:	sub	r0, r1, r0
   184c8:	str	r0, [fp, #-52]	; 0xffffffcc
   184cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   184d0:	cmp	r0, #0
   184d4:	bge	184ec <__assert_fail@plt+0x7058>
   184d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   184dc:	movw	r1, #0
   184e0:	sub	r0, r1, r0
   184e4:	str	r0, [sp, #28]
   184e8:	b	184f4 <__assert_fail@plt+0x7060>
   184ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   184f0:	str	r0, [sp, #28]
   184f4:	ldr	r0, [sp, #28]
   184f8:	str	r0, [sp, #56]	; 0x38
   184fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18500:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18504:	bl	13c4c <__assert_fail@plt+0x27b8>
   18508:	str	r0, [fp, #-56]	; 0xffffffc8
   1850c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18510:	cmp	r0, #0
   18514:	bge	1852c <__assert_fail@plt+0x7098>
   18518:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1851c:	movw	r1, #0
   18520:	sub	r0, r1, r0
   18524:	str	r0, [sp, #24]
   18528:	b	18534 <__assert_fail@plt+0x70a0>
   1852c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18530:	str	r0, [sp, #24]
   18534:	ldr	r0, [sp, #24]
   18538:	str	r0, [sp, #44]	; 0x2c
   1853c:	ldr	r0, [fp, #8]
   18540:	cmp	r0, #0
   18544:	bne	185ac <__assert_fail@plt+0x7118>
   18548:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1854c:	cmp	r0, #0
   18550:	bge	185ac <__assert_fail@plt+0x7118>
   18554:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18558:	cmp	r0, #0
   1855c:	beq	185ac <__assert_fail@plt+0x7118>
   18560:	ldr	r0, [fp, #-8]
   18564:	movw	r1, #0
   18568:	cmp	r0, r1
   1856c:	beq	18584 <__assert_fail@plt+0x70f0>
   18570:	add	r0, sp, #52	; 0x34
   18574:	str	r0, [sp, #20]
   18578:	ldr	r1, [sp, #20]
   1857c:	movw	r2, #1
   18580:	bl	17738 <__assert_fail@plt+0x62a4>
   18584:	ldr	r0, [fp, #-12]
   18588:	movw	r1, #0
   1858c:	cmp	r0, r1
   18590:	beq	185a8 <__assert_fail@plt+0x7114>
   18594:	add	r0, sp, #40	; 0x28
   18598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1859c:	str	r0, [sp, #16]
   185a0:	ldr	r1, [sp, #16]
   185a4:	bl	17698 <__assert_fail@plt+0x6204>
   185a8:	b	18620 <__assert_fail@plt+0x718c>
   185ac:	ldr	r0, [fp, #8]
   185b0:	cmp	r0, #1
   185b4:	bne	1861c <__assert_fail@plt+0x7188>
   185b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   185bc:	cmp	r0, #0
   185c0:	blt	1861c <__assert_fail@plt+0x7188>
   185c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   185c8:	cmp	r0, #0
   185cc:	beq	1861c <__assert_fail@plt+0x7188>
   185d0:	ldr	r0, [fp, #-8]
   185d4:	movw	r1, #0
   185d8:	cmp	r0, r1
   185dc:	beq	185f4 <__assert_fail@plt+0x7160>
   185e0:	add	r0, sp, #52	; 0x34
   185e4:	str	r0, [sp, #12]
   185e8:	ldr	r1, [sp, #12]
   185ec:	movw	r2, #1
   185f0:	bl	17650 <__assert_fail@plt+0x61bc>
   185f4:	ldr	r0, [fp, #-12]
   185f8:	movw	r1, #0
   185fc:	cmp	r0, r1
   18600:	beq	18618 <__assert_fail@plt+0x7184>
   18604:	add	r0, sp, #40	; 0x28
   18608:	ldr	r2, [fp, #-20]	; 0xffffffec
   1860c:	str	r0, [sp, #8]
   18610:	ldr	r1, [sp, #8]
   18614:	bl	17b60 <__assert_fail@plt+0x66cc>
   18618:	b	1861c <__assert_fail@plt+0x7188>
   1861c:	b	18620 <__assert_fail@plt+0x718c>
   18620:	ldr	r0, [fp, #-8]
   18624:	movw	r1, #0
   18628:	cmp	r0, r1
   1862c:	beq	18644 <__assert_fail@plt+0x71b0>
   18630:	add	r0, sp, #52	; 0x34
   18634:	ldr	r1, [fp, #-8]
   18638:	bl	175bc <__assert_fail@plt+0x6128>
   1863c:	add	r0, sp, #52	; 0x34
   18640:	bl	15f44 <__assert_fail@plt+0x4ab0>
   18644:	ldr	r0, [fp, #-12]
   18648:	movw	r1, #0
   1864c:	cmp	r0, r1
   18650:	beq	18660 <__assert_fail@plt+0x71cc>
   18654:	add	r0, sp, #40	; 0x28
   18658:	ldr	r1, [fp, #-12]
   1865c:	bl	175bc <__assert_fail@plt+0x6128>
   18660:	add	r0, sp, #40	; 0x28
   18664:	bl	15f44 <__assert_fail@plt+0x4ab0>
   18668:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1866c:	cmp	r0, #0
   18670:	movw	r0, #0
   18674:	movne	r0, #1
   18678:	and	r0, r0, #1
   1867c:	str	r0, [fp, #-4]
   18680:	ldr	r0, [fp, #-4]
   18684:	mov	sp, fp
   18688:	pop	{fp, pc}
   1868c:	push	{fp, lr}
   18690:	mov	fp, sp
   18694:	sub	sp, sp, #24
   18698:	str	r0, [fp, #-4]
   1869c:	str	r1, [fp, #-8]
   186a0:	str	r2, [sp, #12]
   186a4:	str	r3, [sp, #8]
   186a8:	ldr	r0, [fp, #-4]
   186ac:	ldr	r1, [fp, #-8]
   186b0:	ldr	r2, [sp, #12]
   186b4:	ldr	r3, [sp, #8]
   186b8:	movw	ip, #0
   186bc:	str	ip, [sp]
   186c0:	bl	181f4 <__assert_fail@plt+0x6d60>
   186c4:	mov	sp, fp
   186c8:	pop	{fp, pc}
   186cc:	push	{fp, lr}
   186d0:	mov	fp, sp
   186d4:	sub	sp, sp, #24
   186d8:	str	r0, [fp, #-4]
   186dc:	str	r1, [fp, #-8]
   186e0:	str	r2, [sp, #12]
   186e4:	str	r3, [sp, #8]
   186e8:	ldr	r0, [fp, #-4]
   186ec:	ldr	r1, [fp, #-8]
   186f0:	ldr	r2, [sp, #12]
   186f4:	ldr	r3, [sp, #8]
   186f8:	movw	ip, #2
   186fc:	str	ip, [sp]
   18700:	bl	181f4 <__assert_fail@plt+0x6d60>
   18704:	mov	sp, fp
   18708:	pop	{fp, pc}
   1870c:	push	{fp, lr}
   18710:	mov	fp, sp
   18714:	sub	sp, sp, #16
   18718:	str	r0, [fp, #-4]
   1871c:	str	r1, [sp, #8]
   18720:	str	r2, [sp, #4]
   18724:	ldr	r0, [fp, #-4]
   18728:	ldr	r2, [sp, #8]
   1872c:	ldr	r3, [sp, #4]
   18730:	movw	r1, #0
   18734:	movw	ip, #1
   18738:	str	ip, [sp]
   1873c:	bl	181f4 <__assert_fail@plt+0x6d60>
   18740:	mov	sp, fp
   18744:	pop	{fp, pc}
   18748:	push	{fp, lr}
   1874c:	mov	fp, sp
   18750:	sub	sp, sp, #24
   18754:	str	r0, [fp, #-4]
   18758:	str	r1, [fp, #-8]
   1875c:	str	r2, [sp, #12]
   18760:	ldr	r0, [fp, #-4]
   18764:	ldr	r2, [fp, #-8]
   18768:	ldr	r3, [sp, #12]
   1876c:	movw	r1, #0
   18770:	str	r1, [sp, #8]
   18774:	ldr	ip, [sp, #8]
   18778:	str	ip, [sp]
   1877c:	bl	181f4 <__assert_fail@plt+0x6d60>
   18780:	mov	sp, fp
   18784:	pop	{fp, pc}
   18788:	push	{fp, lr}
   1878c:	mov	fp, sp
   18790:	sub	sp, sp, #16
   18794:	str	r0, [fp, #-4]
   18798:	str	r1, [sp, #8]
   1879c:	str	r2, [sp, #4]
   187a0:	ldr	r0, [fp, #-4]
   187a4:	ldr	r2, [sp, #8]
   187a8:	ldr	r3, [sp, #4]
   187ac:	movw	r1, #0
   187b0:	movw	ip, #2
   187b4:	str	ip, [sp]
   187b8:	bl	181f4 <__assert_fail@plt+0x6d60>
   187bc:	mov	sp, fp
   187c0:	pop	{fp, pc}
   187c4:	push	{fp, lr}
   187c8:	mov	fp, sp
   187cc:	sub	sp, sp, #16
   187d0:	str	r0, [fp, #-4]
   187d4:	str	r1, [sp, #8]
   187d8:	str	r2, [sp, #4]
   187dc:	ldr	r1, [fp, #-4]
   187e0:	ldr	r2, [sp, #8]
   187e4:	ldr	r3, [sp, #4]
   187e8:	movw	r0, #0
   187ec:	movw	ip, #1
   187f0:	str	ip, [sp]
   187f4:	bl	181f4 <__assert_fail@plt+0x6d60>
   187f8:	mov	sp, fp
   187fc:	pop	{fp, pc}
   18800:	push	{fp, lr}
   18804:	mov	fp, sp
   18808:	sub	sp, sp, #24
   1880c:	str	r0, [fp, #-4]
   18810:	str	r1, [fp, #-8]
   18814:	str	r2, [sp, #12]
   18818:	ldr	r1, [fp, #-4]
   1881c:	ldr	r2, [fp, #-8]
   18820:	ldr	r3, [sp, #12]
   18824:	movw	r0, #0
   18828:	str	r0, [sp, #8]
   1882c:	ldr	ip, [sp, #8]
   18830:	str	ip, [sp]
   18834:	bl	181f4 <__assert_fail@plt+0x6d60>
   18838:	mov	sp, fp
   1883c:	pop	{fp, pc}
   18840:	push	{fp, lr}
   18844:	mov	fp, sp
   18848:	sub	sp, sp, #16
   1884c:	str	r0, [fp, #-4]
   18850:	str	r1, [sp, #8]
   18854:	str	r2, [sp, #4]
   18858:	ldr	r1, [fp, #-4]
   1885c:	ldr	r2, [sp, #8]
   18860:	ldr	r3, [sp, #4]
   18864:	movw	r0, #0
   18868:	movw	ip, #2
   1886c:	str	ip, [sp]
   18870:	bl	181f4 <__assert_fail@plt+0x6d60>
   18874:	mov	sp, fp
   18878:	pop	{fp, pc}
   1887c:	push	{fp, lr}
   18880:	mov	fp, sp
   18884:	sub	sp, sp, #16
   18888:	str	r0, [fp, #-4]
   1888c:	str	r1, [sp, #8]
   18890:	str	r2, [sp, #4]
   18894:	ldr	r1, [fp, #-4]
   18898:	ldr	r2, [sp, #8]
   1889c:	ldr	r3, [sp, #4]
   188a0:	ldr	r0, [sp, #4]
   188a4:	ldr	r0, [r0, #4]
   188a8:	cmp	r0, #0
   188ac:	movw	r0, #0
   188b0:	movge	r0, #1
   188b4:	tst	r0, #1
   188b8:	movw	r0, #0
   188bc:	mov	ip, r0
   188c0:	moveq	ip, #1
   188c4:	str	ip, [sp]
   188c8:	bl	181f4 <__assert_fail@plt+0x6d60>
   188cc:	mov	sp, fp
   188d0:	pop	{fp, pc}
   188d4:	push	{fp, lr}
   188d8:	mov	fp, sp
   188dc:	sub	sp, sp, #16
   188e0:	str	r0, [fp, #-4]
   188e4:	str	r1, [sp, #8]
   188e8:	str	r2, [sp, #4]
   188ec:	ldr	r0, [fp, #-4]
   188f0:	ldr	r1, [sp, #8]
   188f4:	ldr	r2, [sp, #4]
   188f8:	movw	r3, #1
   188fc:	bl	18908 <__assert_fail@plt+0x7474>
   18900:	mov	sp, fp
   18904:	pop	{fp, pc}
   18908:	push	{fp, lr}
   1890c:	mov	fp, sp
   18910:	sub	sp, sp, #48	; 0x30
   18914:	str	r0, [fp, #-4]
   18918:	str	r1, [fp, #-8]
   1891c:	str	r2, [fp, #-12]
   18920:	str	r3, [fp, #-16]
   18924:	ldr	r0, [fp, #-8]
   18928:	ldr	r0, [r0, #4]
   1892c:	str	r0, [fp, #-20]	; 0xffffffec
   18930:	ldr	r0, [fp, #-20]	; 0xffffffec
   18934:	cmp	r0, #0
   18938:	bne	1894c <__assert_fail@plt+0x74b8>
   1893c:	ldr	r0, [fp, #-4]
   18940:	movw	r1, #0
   18944:	str	r1, [r0, #4]
   18948:	b	18b5c <__assert_fail@plt+0x76c8>
   1894c:	ldr	r0, [fp, #-12]
   18950:	lsr	r0, r0, #5
   18954:	str	r0, [sp, #20]
   18958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1895c:	cmp	r0, #0
   18960:	blt	18970 <__assert_fail@plt+0x74dc>
   18964:	ldr	r0, [fp, #-20]	; 0xffffffec
   18968:	str	r0, [sp, #8]
   1896c:	b	18980 <__assert_fail@plt+0x74ec>
   18970:	ldr	r0, [fp, #-20]	; 0xffffffec
   18974:	movw	r1, #0
   18978:	sub	r0, r1, r0
   1897c:	str	r0, [sp, #8]
   18980:	ldr	r0, [sp, #8]
   18984:	ldr	r1, [sp, #20]
   18988:	sub	r0, r0, r1
   1898c:	str	r0, [sp, #24]
   18990:	ldr	r0, [fp, #-12]
   18994:	and	r0, r0, #31
   18998:	str	r0, [fp, #-12]
   1899c:	ldr	r0, [fp, #-16]
   189a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   189a4:	cmp	r1, #0
   189a8:	movw	r1, #0
   189ac:	movgt	r1, #1
   189b0:	tst	r1, #1
   189b4:	movw	r1, #1
   189b8:	moveq	r1, #0
   189bc:	cmp	r0, r1
   189c0:	bne	18a40 <__assert_fail@plt+0x75ac>
   189c4:	ldr	r0, [sp, #24]
   189c8:	cmp	r0, #0
   189cc:	movw	r0, #1
   189d0:	str	r0, [sp, #4]
   189d4:	ble	18a30 <__assert_fail@plt+0x759c>
   189d8:	ldr	r0, [fp, #-8]
   189dc:	ldr	r0, [r0, #8]
   189e0:	ldr	r1, [sp, #20]
   189e4:	bl	13c14 <__assert_fail@plt+0x2780>
   189e8:	cmp	r0, #0
   189ec:	movw	r0, #1
   189f0:	str	r0, [sp, #4]
   189f4:	beq	18a30 <__assert_fail@plt+0x759c>
   189f8:	ldr	r0, [fp, #-8]
   189fc:	ldr	r0, [r0, #8]
   18a00:	ldr	r1, [sp, #20]
   18a04:	add	r0, r0, r1, lsl #2
   18a08:	ldr	r0, [r0]
   18a0c:	ldr	r1, [fp, #-12]
   18a10:	movw	r2, #1
   18a14:	lsl	r1, r2, r1
   18a18:	sub	r1, r1, #1
   18a1c:	and	r0, r0, r1
   18a20:	cmp	r0, #0
   18a24:	movw	r0, #0
   18a28:	movne	r0, #1
   18a2c:	str	r0, [sp, #4]
   18a30:	ldr	r0, [sp, #4]
   18a34:	and	r0, r0, #1
   18a38:	str	r0, [sp, #12]
   18a3c:	b	18a48 <__assert_fail@plt+0x75b4>
   18a40:	movw	r0, #0
   18a44:	str	r0, [sp, #12]
   18a48:	ldr	r0, [sp, #24]
   18a4c:	cmp	r0, #0
   18a50:	bgt	18a60 <__assert_fail@plt+0x75cc>
   18a54:	movw	r0, #0
   18a58:	str	r0, [sp, #24]
   18a5c:	b	18b1c <__assert_fail@plt+0x7688>
   18a60:	ldr	r0, [sp, #24]
   18a64:	ldr	r1, [fp, #-4]
   18a68:	ldr	r1, [r1]
   18a6c:	cmp	r0, r1
   18a70:	ble	18a88 <__assert_fail@plt+0x75f4>
   18a74:	ldr	r0, [fp, #-4]
   18a78:	ldr	r1, [sp, #24]
   18a7c:	bl	160ec <__assert_fail@plt+0x4c58>
   18a80:	str	r0, [sp]
   18a84:	b	18a94 <__assert_fail@plt+0x7600>
   18a88:	ldr	r0, [fp, #-4]
   18a8c:	ldr	r0, [r0, #8]
   18a90:	str	r0, [sp]
   18a94:	ldr	r0, [sp]
   18a98:	str	r0, [sp, #16]
   18a9c:	ldr	r0, [fp, #-12]
   18aa0:	cmp	r0, #0
   18aa4:	beq	18afc <__assert_fail@plt+0x7668>
   18aa8:	ldr	r0, [sp, #16]
   18aac:	ldr	r1, [fp, #-8]
   18ab0:	ldr	r1, [r1, #8]
   18ab4:	ldr	r2, [sp, #20]
   18ab8:	add	r1, r1, r2, lsl #2
   18abc:	ldr	r2, [sp, #24]
   18ac0:	ldr	r3, [fp, #-12]
   18ac4:	bl	14b7c <__assert_fail@plt+0x36e8>
   18ac8:	ldr	r1, [sp, #16]
   18acc:	ldr	r2, [sp, #24]
   18ad0:	sub	r2, r2, #1
   18ad4:	add	r1, r1, r2, lsl #2
   18ad8:	ldr	r1, [r1]
   18adc:	cmp	r1, #0
   18ae0:	movw	r1, #0
   18ae4:	moveq	r1, #1
   18ae8:	and	r1, r1, #1
   18aec:	ldr	r2, [sp, #24]
   18af0:	sub	r1, r2, r1
   18af4:	str	r1, [sp, #24]
   18af8:	b	18b18 <__assert_fail@plt+0x7684>
   18afc:	ldr	r0, [sp, #16]
   18b00:	ldr	r1, [fp, #-8]
   18b04:	ldr	r1, [r1, #8]
   18b08:	ldr	r2, [sp, #20]
   18b0c:	add	r1, r1, r2, lsl #2
   18b10:	ldr	r2, [sp, #24]
   18b14:	bl	13ad8 <__assert_fail@plt+0x2644>
   18b18:	b	18b1c <__assert_fail@plt+0x7688>
   18b1c:	ldr	r0, [sp, #24]
   18b20:	ldr	r1, [fp, #-4]
   18b24:	str	r0, [r1, #4]
   18b28:	ldr	r0, [sp, #12]
   18b2c:	cmp	r0, #0
   18b30:	beq	18b44 <__assert_fail@plt+0x76b0>
   18b34:	ldr	r0, [fp, #-4]
   18b38:	ldr	r1, [fp, #-4]
   18b3c:	movw	r2, #1
   18b40:	bl	17650 <__assert_fail@plt+0x61bc>
   18b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   18b48:	cmp	r0, #0
   18b4c:	bge	18b5c <__assert_fail@plt+0x76c8>
   18b50:	ldr	r0, [fp, #-4]
   18b54:	ldr	r1, [fp, #-4]
   18b58:	bl	1757c <__assert_fail@plt+0x60e8>
   18b5c:	mov	sp, fp
   18b60:	pop	{fp, pc}
   18b64:	push	{fp, lr}
   18b68:	mov	fp, sp
   18b6c:	sub	sp, sp, #16
   18b70:	str	r0, [fp, #-4]
   18b74:	str	r1, [sp, #8]
   18b78:	str	r2, [sp, #4]
   18b7c:	ldr	r0, [fp, #-4]
   18b80:	ldr	r1, [sp, #8]
   18b84:	ldr	r2, [sp, #4]
   18b88:	movw	r3, #0
   18b8c:	bl	18908 <__assert_fail@plt+0x7474>
   18b90:	mov	sp, fp
   18b94:	pop	{fp, pc}
   18b98:	push	{fp, lr}
   18b9c:	mov	fp, sp
   18ba0:	sub	sp, sp, #16
   18ba4:	str	r0, [fp, #-4]
   18ba8:	str	r1, [sp, #8]
   18bac:	str	r2, [sp, #4]
   18bb0:	ldr	r0, [fp, #-4]
   18bb4:	ldr	r1, [sp, #8]
   18bb8:	ldr	r2, [sp, #4]
   18bbc:	movw	r3, #2
   18bc0:	bl	18908 <__assert_fail@plt+0x7474>
   18bc4:	mov	sp, fp
   18bc8:	pop	{fp, pc}
   18bcc:	push	{fp, lr}
   18bd0:	mov	fp, sp
   18bd4:	sub	sp, sp, #16
   18bd8:	str	r0, [fp, #-4]
   18bdc:	str	r1, [sp, #8]
   18be0:	str	r2, [sp, #4]
   18be4:	ldr	r0, [fp, #-4]
   18be8:	ldr	r1, [sp, #8]
   18bec:	ldr	r2, [sp, #4]
   18bf0:	movw	r3, #1
   18bf4:	bl	18c00 <__assert_fail@plt+0x776c>
   18bf8:	mov	sp, fp
   18bfc:	pop	{fp, pc}
   18c00:	push	{fp, lr}
   18c04:	mov	fp, sp
   18c08:	sub	sp, sp, #64	; 0x40
   18c0c:	str	r0, [fp, #-4]
   18c10:	str	r1, [fp, #-8]
   18c14:	str	r2, [fp, #-12]
   18c18:	str	r3, [fp, #-16]
   18c1c:	ldr	r0, [fp, #-8]
   18c20:	ldr	r0, [r0, #4]
   18c24:	str	r0, [fp, #-20]	; 0xffffffec
   18c28:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c2c:	cmp	r0, #0
   18c30:	beq	18c40 <__assert_fail@plt+0x77ac>
   18c34:	ldr	r0, [fp, #-12]
   18c38:	cmp	r0, #0
   18c3c:	bne	18c50 <__assert_fail@plt+0x77bc>
   18c40:	ldr	r0, [fp, #-4]
   18c44:	movw	r1, #0
   18c48:	str	r1, [r0, #4]
   18c4c:	b	18f58 <__assert_fail@plt+0x7ac4>
   18c50:	ldr	r0, [fp, #-12]
   18c54:	add	r0, r0, #31
   18c58:	lsr	r0, r0, #5
   18c5c:	str	r0, [fp, #-28]	; 0xffffffe4
   18c60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18c64:	cmp	r0, #0
   18c68:	ble	18c70 <__assert_fail@plt+0x77dc>
   18c6c:	b	18c90 <__assert_fail@plt+0x77fc>
   18c70:	movw	r0, #18824	; 0x4988
   18c74:	movt	r0, #4
   18c78:	movw	r1, #16512	; 0x4080
   18c7c:	movt	r1, #4
   18c80:	movw	r2, #2427	; 0x97b
   18c84:	movw	r3, #19973	; 0x4e05
   18c88:	movt	r3, #4
   18c8c:	bl	11494 <__assert_fail@plt>
   18c90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18c94:	ldr	r1, [fp, #-4]
   18c98:	ldr	r1, [r1]
   18c9c:	cmp	r0, r1
   18ca0:	ble	18cb8 <__assert_fail@plt+0x7824>
   18ca4:	ldr	r0, [fp, #-4]
   18ca8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18cac:	bl	160ec <__assert_fail@plt+0x4c58>
   18cb0:	str	r0, [sp, #16]
   18cb4:	b	18cc4 <__assert_fail@plt+0x7830>
   18cb8:	ldr	r0, [fp, #-4]
   18cbc:	ldr	r0, [r0, #8]
   18cc0:	str	r0, [sp, #16]
   18cc4:	ldr	r0, [sp, #16]
   18cc8:	str	r0, [sp, #32]
   18ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18cd0:	cmp	r0, #0
   18cd4:	blt	18ce4 <__assert_fail@plt+0x7850>
   18cd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18cdc:	str	r0, [sp, #12]
   18ce0:	b	18cf4 <__assert_fail@plt+0x7860>
   18ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ce8:	movw	r1, #0
   18cec:	sub	r0, r1, r0
   18cf0:	str	r0, [sp, #12]
   18cf4:	ldr	r0, [sp, #12]
   18cf8:	str	r0, [fp, #-24]	; 0xffffffe8
   18cfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d00:	lsl	r0, r0, #5
   18d04:	ldr	r1, [fp, #-12]
   18d08:	sub	r0, r0, r1
   18d0c:	mvn	r1, #0
   18d10:	lsr	r0, r1, r0
   18d14:	str	r0, [sp, #28]
   18d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d20:	cmp	r0, r1
   18d24:	ble	18e54 <__assert_fail@plt+0x79c0>
   18d28:	ldr	r0, [fp, #-16]
   18d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d30:	cmp	r1, #0
   18d34:	movw	r1, #0
   18d38:	movgt	r1, #1
   18d3c:	tst	r1, #1
   18d40:	movw	r1, #1
   18d44:	moveq	r1, #0
   18d48:	cmp	r0, r1
   18d4c:	bne	18e24 <__assert_fail@plt+0x7990>
   18d50:	b	18d54 <__assert_fail@plt+0x78c0>
   18d54:	ldr	r0, [sp, #32]
   18d58:	ldr	r1, [fp, #-8]
   18d5c:	ldr	r1, [r1, #8]
   18d60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d64:	bl	15024 <__assert_fail@plt+0x3b90>
   18d68:	cmp	r0, #0
   18d6c:	movw	r0, #0
   18d70:	movne	r0, #1
   18d74:	mvn	r1, #0
   18d78:	eor	r0, r0, r1
   18d7c:	and	r0, r0, #1
   18d80:	str	r0, [sp, #20]
   18d84:	ldr	r0, [sp, #20]
   18d88:	cmp	r0, #0
   18d8c:	bne	18d94 <__assert_fail@plt+0x7900>
   18d90:	b	18db4 <__assert_fail@plt+0x7920>
   18d94:	movw	r0, #17493	; 0x4455
   18d98:	movt	r0, #4
   18d9c:	movw	r1, #16512	; 0x4080
   18da0:	movt	r1, #4
   18da4:	movw	r2, #2443	; 0x98b
   18da8:	movw	r3, #19973	; 0x4e05
   18dac:	movt	r3, #4
   18db0:	bl	11494 <__assert_fail@plt>
   18db4:	b	18db8 <__assert_fail@plt+0x7924>
   18db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dbc:	str	r0, [sp, #24]
   18dc0:	ldr	r0, [sp, #24]
   18dc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dc8:	sub	r1, r1, #1
   18dcc:	cmp	r0, r1
   18dd0:	bge	18df8 <__assert_fail@plt+0x7964>
   18dd4:	ldr	r0, [sp, #32]
   18dd8:	ldr	r1, [sp, #24]
   18ddc:	add	r0, r0, r1, lsl #2
   18de0:	mvn	r1, #0
   18de4:	str	r1, [r0]
   18de8:	ldr	r0, [sp, #24]
   18dec:	add	r0, r0, #1
   18df0:	str	r0, [sp, #24]
   18df4:	b	18dc0 <__assert_fail@plt+0x792c>
   18df8:	ldr	r0, [sp, #28]
   18dfc:	ldr	r1, [sp, #32]
   18e00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18e04:	sub	r2, r2, #1
   18e08:	add	r1, r1, r2, lsl #2
   18e0c:	str	r0, [r1]
   18e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e14:	movw	r1, #0
   18e18:	sub	r0, r1, r0
   18e1c:	str	r0, [fp, #-20]	; 0xffffffec
   18e20:	b	18e50 <__assert_fail@plt+0x79bc>
   18e24:	ldr	r0, [fp, #-4]
   18e28:	ldr	r1, [fp, #-8]
   18e2c:	cmp	r0, r1
   18e30:	beq	18e48 <__assert_fail@plt+0x79b4>
   18e34:	ldr	r0, [sp, #32]
   18e38:	ldr	r1, [fp, #-8]
   18e3c:	ldr	r1, [r1, #8]
   18e40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e44:	bl	13ad8 <__assert_fail@plt+0x2644>
   18e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e4c:	str	r0, [fp, #-28]	; 0xffffffe4
   18e50:	b	18f14 <__assert_fail@plt+0x7a80>
   18e54:	ldr	r0, [fp, #-4]
   18e58:	ldr	r1, [fp, #-8]
   18e5c:	cmp	r0, r1
   18e60:	beq	18e7c <__assert_fail@plt+0x79e8>
   18e64:	ldr	r0, [sp, #32]
   18e68:	ldr	r1, [fp, #-8]
   18e6c:	ldr	r1, [r1, #8]
   18e70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18e74:	sub	r2, r2, #1
   18e78:	bl	13ad8 <__assert_fail@plt+0x2644>
   18e7c:	ldr	r0, [fp, #-8]
   18e80:	ldr	r0, [r0, #8]
   18e84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e88:	sub	r1, r1, #1
   18e8c:	ldr	r0, [r0, r1, lsl #2]
   18e90:	ldr	r2, [sp, #28]
   18e94:	and	r0, r0, r2
   18e98:	ldr	r2, [sp, #32]
   18e9c:	add	r1, r2, r1, lsl #2
   18ea0:	str	r0, [r1]
   18ea4:	ldr	r0, [fp, #-16]
   18ea8:	ldr	r1, [fp, #-20]	; 0xffffffec
   18eac:	cmp	r1, #0
   18eb0:	movw	r1, #0
   18eb4:	movgt	r1, #1
   18eb8:	tst	r1, #1
   18ebc:	movw	r1, #1
   18ec0:	moveq	r1, #0
   18ec4:	cmp	r0, r1
   18ec8:	bne	18f10 <__assert_fail@plt+0x7a7c>
   18ecc:	ldr	r0, [sp, #32]
   18ed0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18ed4:	str	r0, [sp, #8]
   18ed8:	ldr	r1, [sp, #8]
   18edc:	bl	15024 <__assert_fail@plt+0x3b90>
   18ee0:	ldr	r1, [sp, #28]
   18ee4:	ldr	r2, [sp, #32]
   18ee8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18eec:	sub	r3, r3, #1
   18ef0:	add	r2, r2, r3, lsl #2
   18ef4:	ldr	r3, [r2]
   18ef8:	and	r1, r3, r1
   18efc:	str	r1, [r2]
   18f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f04:	movw	r2, #0
   18f08:	sub	r1, r2, r1
   18f0c:	str	r1, [fp, #-20]	; 0xffffffec
   18f10:	b	18f14 <__assert_fail@plt+0x7a80>
   18f14:	ldr	r0, [sp, #32]
   18f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f1c:	bl	13c4c <__assert_fail@plt+0x27b8>
   18f20:	str	r0, [fp, #-28]	; 0xffffffe4
   18f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f28:	cmp	r0, #0
   18f2c:	bge	18f44 <__assert_fail@plt+0x7ab0>
   18f30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f34:	movw	r1, #0
   18f38:	sub	r0, r1, r0
   18f3c:	str	r0, [sp, #4]
   18f40:	b	18f4c <__assert_fail@plt+0x7ab8>
   18f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f48:	str	r0, [sp, #4]
   18f4c:	ldr	r0, [sp, #4]
   18f50:	ldr	r1, [fp, #-4]
   18f54:	str	r0, [r1, #4]
   18f58:	mov	sp, fp
   18f5c:	pop	{fp, pc}
   18f60:	push	{fp, lr}
   18f64:	mov	fp, sp
   18f68:	sub	sp, sp, #16
   18f6c:	str	r0, [fp, #-4]
   18f70:	str	r1, [sp, #8]
   18f74:	str	r2, [sp, #4]
   18f78:	ldr	r0, [fp, #-4]
   18f7c:	ldr	r1, [sp, #8]
   18f80:	ldr	r2, [sp, #4]
   18f84:	movw	r3, #0
   18f88:	bl	18c00 <__assert_fail@plt+0x776c>
   18f8c:	mov	sp, fp
   18f90:	pop	{fp, pc}
   18f94:	push	{fp, lr}
   18f98:	mov	fp, sp
   18f9c:	sub	sp, sp, #16
   18fa0:	str	r0, [fp, #-4]
   18fa4:	str	r1, [sp, #8]
   18fa8:	str	r2, [sp, #4]
   18fac:	ldr	r0, [fp, #-4]
   18fb0:	ldr	r1, [sp, #8]
   18fb4:	ldr	r2, [sp, #4]
   18fb8:	movw	r3, #2
   18fbc:	bl	18c00 <__assert_fail@plt+0x776c>
   18fc0:	mov	sp, fp
   18fc4:	pop	{fp, pc}
   18fc8:	push	{fp, lr}
   18fcc:	mov	fp, sp
   18fd0:	sub	sp, sp, #24
   18fd4:	str	r0, [fp, #-4]
   18fd8:	str	r1, [fp, #-8]
   18fdc:	str	r2, [sp, #12]
   18fe0:	ldr	r0, [fp, #-4]
   18fe4:	ldr	r2, [fp, #-8]
   18fe8:	ldr	r3, [sp, #12]
   18fec:	movw	r1, #0
   18ff0:	movw	ip, #2
   18ff4:	str	ip, [sp]
   18ff8:	bl	181f4 <__assert_fail@plt+0x6d60>
   18ffc:	str	r0, [sp, #8]
   19000:	ldr	r0, [sp, #8]
   19004:	cmp	r0, #0
   19008:	bne	19010 <__assert_fail@plt+0x7b7c>
   1900c:	b	19030 <__assert_fail@plt+0x7b9c>
   19010:	movw	r0, #17493	; 0x4455
   19014:	movt	r0, #4
   19018:	movw	r1, #16512	; 0x4080
   1901c:	movt	r1, #4
   19020:	movw	r2, #2521	; 0x9d9
   19024:	movw	r3, #17503	; 0x445f
   19028:	movt	r3, #4
   1902c:	bl	11494 <__assert_fail@plt>
   19030:	b	19034 <__assert_fail@plt+0x7ba0>
   19034:	mov	sp, fp
   19038:	pop	{fp, pc}
   1903c:	push	{fp, lr}
   19040:	mov	fp, sp
   19044:	sub	sp, sp, #16
   19048:	str	r0, [fp, #-4]
   1904c:	str	r1, [sp, #8]
   19050:	ldr	r2, [fp, #-4]
   19054:	ldr	r3, [sp, #8]
   19058:	movw	r0, #0
   1905c:	str	r0, [sp, #4]
   19060:	ldr	r1, [sp, #4]
   19064:	movw	ip, #2
   19068:	str	ip, [sp]
   1906c:	bl	181f4 <__assert_fail@plt+0x6d60>
   19070:	cmp	r0, #0
   19074:	movw	r0, #0
   19078:	moveq	r0, #1
   1907c:	and	r0, r0, #1
   19080:	mov	sp, fp
   19084:	pop	{fp, pc}
   19088:	push	{fp, lr}
   1908c:	mov	fp, sp
   19090:	sub	sp, sp, #32
   19094:	str	r0, [fp, #-8]
   19098:	str	r1, [fp, #-12]
   1909c:	str	r2, [sp, #16]
   190a0:	ldr	r0, [sp, #16]
   190a4:	bl	17284 <__assert_fail@plt+0x5df0>
   190a8:	cmp	r0, #0
   190ac:	bne	190d4 <__assert_fail@plt+0x7c40>
   190b0:	ldr	r0, [fp, #-8]
   190b4:	ldr	r1, [fp, #-12]
   190b8:	bl	1731c <__assert_fail@plt+0x5e88>
   190bc:	cmp	r0, #0
   190c0:	movw	r0, #0
   190c4:	moveq	r0, #1
   190c8:	and	r0, r0, #1
   190cc:	str	r0, [fp, #-4]
   190d0:	b	19110 <__assert_fail@plt+0x7c7c>
   190d4:	add	r0, sp, #4
   190d8:	bl	15e6c <__assert_fail@plt+0x49d8>
   190dc:	add	r0, sp, #4
   190e0:	ldr	r1, [fp, #-8]
   190e4:	ldr	r2, [fp, #-12]
   190e8:	bl	17b60 <__assert_fail@plt+0x66cc>
   190ec:	add	r0, sp, #4
   190f0:	ldr	r1, [sp, #16]
   190f4:	bl	1903c <__assert_fail@plt+0x7ba8>
   190f8:	add	r1, sp, #4
   190fc:	str	r0, [sp]
   19100:	mov	r0, r1
   19104:	bl	15f44 <__assert_fail@plt+0x4ab0>
   19108:	ldr	r0, [sp]
   1910c:	str	r0, [fp, #-4]
   19110:	ldr	r0, [fp, #-4]
   19114:	mov	sp, fp
   19118:	pop	{fp, pc}
   1911c:	push	{fp, lr}
   19120:	mov	fp, sp
   19124:	sub	sp, sp, #24
   19128:	str	r0, [fp, #-4]
   1912c:	str	r1, [fp, #-8]
   19130:	str	r2, [sp, #12]
   19134:	str	r3, [sp, #8]
   19138:	ldr	r0, [fp, #-4]
   1913c:	ldr	r1, [fp, #-8]
   19140:	ldr	r2, [sp, #12]
   19144:	ldr	r3, [sp, #8]
   19148:	movw	ip, #1
   1914c:	str	ip, [sp]
   19150:	bl	1915c <__assert_fail@plt+0x7cc8>
   19154:	mov	sp, fp
   19158:	pop	{fp, pc}
   1915c:	push	{fp, lr}
   19160:	mov	fp, sp
   19164:	sub	sp, sp, #56	; 0x38
   19168:	ldr	ip, [fp, #8]
   1916c:	add	lr, sp, #24
   19170:	str	r0, [fp, #-4]
   19174:	str	r1, [fp, #-8]
   19178:	str	r2, [fp, #-12]
   1917c:	str	r3, [fp, #-16]
   19180:	mov	r0, lr
   19184:	str	ip, [sp, #8]
   19188:	bl	15e6c <__assert_fail@plt+0x49d8>
   1918c:	add	r0, sp, #12
   19190:	ldr	r1, [fp, #-16]
   19194:	bl	162d4 <__assert_fail@plt+0x4e40>
   19198:	add	r3, sp, #12
   1919c:	add	r1, sp, #24
   191a0:	ldr	r0, [fp, #-4]
   191a4:	ldr	r2, [fp, #-12]
   191a8:	ldr	ip, [fp, #8]
   191ac:	str	ip, [sp]
   191b0:	bl	181f4 <__assert_fail@plt+0x6d60>
   191b4:	add	r1, sp, #12
   191b8:	str	r0, [sp, #4]
   191bc:	mov	r0, r1
   191c0:	bl	15f44 <__assert_fail@plt+0x4ab0>
   191c4:	add	r0, sp, #24
   191c8:	bl	167b4 <__assert_fail@plt+0x5320>
   191cc:	str	r0, [fp, #-20]	; 0xffffffec
   191d0:	ldr	r0, [fp, #-8]
   191d4:	movw	r1, #0
   191d8:	cmp	r0, r1
   191dc:	beq	191ec <__assert_fail@plt+0x7d58>
   191e0:	add	r1, sp, #24
   191e4:	ldr	r0, [fp, #-8]
   191e8:	bl	175bc <__assert_fail@plt+0x6128>
   191ec:	add	r0, sp, #24
   191f0:	bl	15f44 <__assert_fail@plt+0x4ab0>
   191f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   191f8:	mov	sp, fp
   191fc:	pop	{fp, pc}
   19200:	push	{fp, lr}
   19204:	mov	fp, sp
   19208:	sub	sp, sp, #24
   1920c:	str	r0, [fp, #-4]
   19210:	str	r1, [fp, #-8]
   19214:	str	r2, [sp, #12]
   19218:	str	r3, [sp, #8]
   1921c:	ldr	r0, [fp, #-4]
   19220:	ldr	r1, [fp, #-8]
   19224:	ldr	r2, [sp, #12]
   19228:	ldr	r3, [sp, #8]
   1922c:	movw	ip, #0
   19230:	str	ip, [sp]
   19234:	bl	1915c <__assert_fail@plt+0x7cc8>
   19238:	mov	sp, fp
   1923c:	pop	{fp, pc}
   19240:	push	{fp, lr}
   19244:	mov	fp, sp
   19248:	sub	sp, sp, #24
   1924c:	str	r0, [fp, #-4]
   19250:	str	r1, [fp, #-8]
   19254:	str	r2, [sp, #12]
   19258:	str	r3, [sp, #8]
   1925c:	ldr	r0, [fp, #-4]
   19260:	ldr	r1, [fp, #-8]
   19264:	ldr	r2, [sp, #12]
   19268:	ldr	r3, [sp, #8]
   1926c:	movw	ip, #2
   19270:	str	ip, [sp]
   19274:	bl	1915c <__assert_fail@plt+0x7cc8>
   19278:	mov	sp, fp
   1927c:	pop	{fp, pc}
   19280:	push	{fp, lr}
   19284:	mov	fp, sp
   19288:	sub	sp, sp, #16
   1928c:	str	r0, [fp, #-4]
   19290:	str	r1, [sp, #8]
   19294:	str	r2, [sp, #4]
   19298:	ldr	r0, [fp, #-4]
   1929c:	ldr	r2, [sp, #8]
   192a0:	ldr	r3, [sp, #4]
   192a4:	movw	r1, #0
   192a8:	movw	ip, #1
   192ac:	str	ip, [sp]
   192b0:	bl	1915c <__assert_fail@plt+0x7cc8>
   192b4:	mov	sp, fp
   192b8:	pop	{fp, pc}
   192bc:	push	{fp, lr}
   192c0:	mov	fp, sp
   192c4:	sub	sp, sp, #24
   192c8:	str	r0, [fp, #-4]
   192cc:	str	r1, [fp, #-8]
   192d0:	str	r2, [sp, #12]
   192d4:	ldr	r0, [fp, #-4]
   192d8:	ldr	r2, [fp, #-8]
   192dc:	ldr	r3, [sp, #12]
   192e0:	movw	r1, #0
   192e4:	str	r1, [sp, #8]
   192e8:	ldr	ip, [sp, #8]
   192ec:	str	ip, [sp]
   192f0:	bl	1915c <__assert_fail@plt+0x7cc8>
   192f4:	mov	sp, fp
   192f8:	pop	{fp, pc}
   192fc:	push	{fp, lr}
   19300:	mov	fp, sp
   19304:	sub	sp, sp, #16
   19308:	str	r0, [fp, #-4]
   1930c:	str	r1, [sp, #8]
   19310:	str	r2, [sp, #4]
   19314:	ldr	r0, [fp, #-4]
   19318:	ldr	r2, [sp, #8]
   1931c:	ldr	r3, [sp, #4]
   19320:	movw	r1, #0
   19324:	movw	ip, #2
   19328:	str	ip, [sp]
   1932c:	bl	1915c <__assert_fail@plt+0x7cc8>
   19330:	mov	sp, fp
   19334:	pop	{fp, pc}
   19338:	push	{fp, lr}
   1933c:	mov	fp, sp
   19340:	sub	sp, sp, #16
   19344:	str	r0, [fp, #-4]
   19348:	str	r1, [sp, #8]
   1934c:	str	r2, [sp, #4]
   19350:	ldr	r1, [fp, #-4]
   19354:	ldr	r2, [sp, #8]
   19358:	ldr	r3, [sp, #4]
   1935c:	movw	r0, #0
   19360:	movw	ip, #1
   19364:	str	ip, [sp]
   19368:	bl	1915c <__assert_fail@plt+0x7cc8>
   1936c:	mov	sp, fp
   19370:	pop	{fp, pc}
   19374:	push	{fp, lr}
   19378:	mov	fp, sp
   1937c:	sub	sp, sp, #24
   19380:	str	r0, [fp, #-4]
   19384:	str	r1, [fp, #-8]
   19388:	str	r2, [sp, #12]
   1938c:	ldr	r1, [fp, #-4]
   19390:	ldr	r2, [fp, #-8]
   19394:	ldr	r3, [sp, #12]
   19398:	movw	r0, #0
   1939c:	str	r0, [sp, #8]
   193a0:	ldr	ip, [sp, #8]
   193a4:	str	ip, [sp]
   193a8:	bl	1915c <__assert_fail@plt+0x7cc8>
   193ac:	mov	sp, fp
   193b0:	pop	{fp, pc}
   193b4:	push	{fp, lr}
   193b8:	mov	fp, sp
   193bc:	sub	sp, sp, #16
   193c0:	str	r0, [fp, #-4]
   193c4:	str	r1, [sp, #8]
   193c8:	str	r2, [sp, #4]
   193cc:	ldr	r1, [fp, #-4]
   193d0:	ldr	r2, [sp, #8]
   193d4:	ldr	r3, [sp, #4]
   193d8:	movw	r0, #0
   193dc:	movw	ip, #2
   193e0:	str	ip, [sp]
   193e4:	bl	1915c <__assert_fail@plt+0x7cc8>
   193e8:	mov	sp, fp
   193ec:	pop	{fp, pc}
   193f0:	push	{fp, lr}
   193f4:	mov	fp, sp
   193f8:	sub	sp, sp, #16
   193fc:	str	r0, [fp, #-4]
   19400:	str	r1, [sp, #8]
   19404:	ldr	r2, [fp, #-4]
   19408:	ldr	r3, [sp, #8]
   1940c:	movw	r0, #0
   19410:	str	r0, [sp, #4]
   19414:	ldr	r1, [sp, #4]
   19418:	movw	ip, #1
   1941c:	str	ip, [sp]
   19420:	bl	1915c <__assert_fail@plt+0x7cc8>
   19424:	mov	sp, fp
   19428:	pop	{fp, pc}
   1942c:	push	{fp, lr}
   19430:	mov	fp, sp
   19434:	sub	sp, sp, #16
   19438:	str	r0, [fp, #-4]
   1943c:	str	r1, [sp, #8]
   19440:	ldr	r2, [fp, #-4]
   19444:	ldr	r3, [sp, #8]
   19448:	movw	r0, #0
   1944c:	str	r0, [sp, #4]
   19450:	ldr	r1, [sp, #4]
   19454:	ldr	ip, [sp, #4]
   19458:	str	ip, [sp]
   1945c:	bl	1915c <__assert_fail@plt+0x7cc8>
   19460:	mov	sp, fp
   19464:	pop	{fp, pc}
   19468:	push	{fp, lr}
   1946c:	mov	fp, sp
   19470:	sub	sp, sp, #16
   19474:	str	r0, [fp, #-4]
   19478:	str	r1, [sp, #8]
   1947c:	ldr	r2, [fp, #-4]
   19480:	ldr	r3, [sp, #8]
   19484:	movw	r0, #0
   19488:	str	r0, [sp, #4]
   1948c:	ldr	r1, [sp, #4]
   19490:	movw	ip, #2
   19494:	str	ip, [sp]
   19498:	bl	1915c <__assert_fail@plt+0x7cc8>
   1949c:	mov	sp, fp
   194a0:	pop	{fp, pc}
   194a4:	push	{fp, lr}
   194a8:	mov	fp, sp
   194ac:	sub	sp, sp, #24
   194b0:	str	r0, [fp, #-4]
   194b4:	str	r1, [fp, #-8]
   194b8:	str	r2, [sp, #12]
   194bc:	ldr	r1, [fp, #-4]
   194c0:	ldr	r2, [fp, #-8]
   194c4:	ldr	r3, [sp, #12]
   194c8:	movw	r0, #0
   194cc:	str	r0, [sp, #8]
   194d0:	ldr	ip, [sp, #8]
   194d4:	str	ip, [sp]
   194d8:	bl	1915c <__assert_fail@plt+0x7cc8>
   194dc:	mov	sp, fp
   194e0:	pop	{fp, pc}
   194e4:	push	{fp, lr}
   194e8:	mov	fp, sp
   194ec:	sub	sp, sp, #24
   194f0:	str	r0, [fp, #-4]
   194f4:	str	r1, [fp, #-8]
   194f8:	str	r2, [sp, #12]
   194fc:	ldr	r0, [fp, #-4]
   19500:	ldr	r2, [fp, #-8]
   19504:	ldr	r3, [sp, #12]
   19508:	movw	r1, #0
   1950c:	movw	ip, #2
   19510:	str	ip, [sp]
   19514:	bl	1915c <__assert_fail@plt+0x7cc8>
   19518:	str	r0, [sp, #8]
   1951c:	ldr	r0, [sp, #8]
   19520:	cmp	r0, #0
   19524:	bne	1952c <__assert_fail@plt+0x8098>
   19528:	b	1954c <__assert_fail@plt+0x80b8>
   1952c:	movw	r0, #17493	; 0x4455
   19530:	movt	r0, #4
   19534:	movw	r1, #16512	; 0x4080
   19538:	movt	r1, #4
   1953c:	movw	r2, #2647	; 0xa57
   19540:	movw	r3, #17581	; 0x44ad
   19544:	movt	r3, #4
   19548:	bl	11494 <__assert_fail@plt>
   1954c:	b	19550 <__assert_fail@plt+0x80bc>
   19550:	mov	sp, fp
   19554:	pop	{fp, pc}
   19558:	push	{fp, lr}
   1955c:	mov	fp, sp
   19560:	sub	sp, sp, #16
   19564:	str	r0, [fp, #-4]
   19568:	str	r1, [sp, #8]
   1956c:	ldr	r2, [fp, #-4]
   19570:	ldr	r3, [sp, #8]
   19574:	movw	r0, #0
   19578:	str	r0, [sp, #4]
   1957c:	ldr	r1, [sp, #4]
   19580:	movw	ip, #2
   19584:	str	ip, [sp]
   19588:	bl	1915c <__assert_fail@plt+0x7cc8>
   1958c:	cmp	r0, #0
   19590:	movw	r0, #0
   19594:	moveq	r0, #1
   19598:	and	r0, r0, #1
   1959c:	mov	sp, fp
   195a0:	pop	{fp, pc}
   195a4:	push	{fp, lr}
   195a8:	mov	fp, sp
   195ac:	sub	sp, sp, #32
   195b0:	add	r3, sp, #8
   195b4:	str	r0, [fp, #-4]
   195b8:	str	r1, [fp, #-8]
   195bc:	str	r2, [fp, #-12]
   195c0:	ldr	r1, [fp, #-12]
   195c4:	mov	r0, r3
   195c8:	bl	162d4 <__assert_fail@plt+0x4e40>
   195cc:	add	r0, sp, #8
   195d0:	ldr	r1, [fp, #-8]
   195d4:	str	r0, [sp, #4]
   195d8:	ldr	r2, [sp, #4]
   195dc:	bl	19628 <__assert_fail@plt+0x8194>
   195e0:	ldr	r0, [fp, #-12]
   195e4:	cmp	r0, #0
   195e8:	bls	195f8 <__assert_fail@plt+0x8164>
   195ec:	add	r0, sp, #8
   195f0:	bl	167b4 <__assert_fail@plt+0x5320>
   195f4:	str	r0, [fp, #-12]
   195f8:	ldr	r0, [fp, #-4]
   195fc:	movw	r1, #0
   19600:	cmp	r0, r1
   19604:	beq	19614 <__assert_fail@plt+0x8180>
   19608:	add	r0, sp, #8
   1960c:	ldr	r1, [fp, #-4]
   19610:	bl	175bc <__assert_fail@plt+0x6128>
   19614:	add	r0, sp, #8
   19618:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1961c:	ldr	r0, [fp, #-12]
   19620:	mov	sp, fp
   19624:	pop	{fp, pc}
   19628:	push	{fp, lr}
   1962c:	mov	fp, sp
   19630:	sub	sp, sp, #88	; 0x58
   19634:	str	r0, [fp, #-4]
   19638:	str	r1, [fp, #-8]
   1963c:	str	r2, [fp, #-12]
   19640:	ldr	r0, [fp, #-8]
   19644:	ldr	r0, [r0, #4]
   19648:	cmp	r0, #0
   1964c:	bne	19660 <__assert_fail@plt+0x81cc>
   19650:	ldr	r0, [fp, #-4]
   19654:	ldr	r1, [fp, #-12]
   19658:	bl	17514 <__assert_fail@plt+0x6080>
   1965c:	b	19874 <__assert_fail@plt+0x83e0>
   19660:	ldr	r0, [fp, #-12]
   19664:	ldr	r0, [r0, #4]
   19668:	cmp	r0, #0
   1966c:	bne	19680 <__assert_fail@plt+0x81ec>
   19670:	ldr	r0, [fp, #-4]
   19674:	ldr	r1, [fp, #-8]
   19678:	bl	17514 <__assert_fail@plt+0x6080>
   1967c:	b	19874 <__assert_fail@plt+0x83e0>
   19680:	sub	r0, fp, #24
   19684:	bl	15e6c <__assert_fail@plt+0x49d8>
   19688:	sub	r0, fp, #36	; 0x24
   1968c:	bl	15e6c <__assert_fail@plt+0x49d8>
   19690:	sub	r0, fp, #24
   19694:	ldr	r1, [fp, #-8]
   19698:	bl	17514 <__assert_fail@plt+0x6080>
   1969c:	sub	r0, fp, #24
   196a0:	bl	1987c <__assert_fail@plt+0x83e8>
   196a4:	sub	r1, fp, #36	; 0x24
   196a8:	str	r0, [fp, #-40]	; 0xffffffd8
   196ac:	ldr	r0, [fp, #-12]
   196b0:	str	r0, [sp, #28]
   196b4:	mov	r0, r1
   196b8:	ldr	r1, [sp, #28]
   196bc:	bl	17514 <__assert_fail@plt+0x6080>
   196c0:	sub	r0, fp, #36	; 0x24
   196c4:	bl	1987c <__assert_fail@plt+0x83e8>
   196c8:	str	r0, [sp, #44]	; 0x2c
   196cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196d0:	ldr	r1, [sp, #44]	; 0x2c
   196d4:	cmp	r0, r1
   196d8:	bcs	196e8 <__assert_fail@plt+0x8254>
   196dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196e0:	str	r0, [sp, #24]
   196e4:	b	196f0 <__assert_fail@plt+0x825c>
   196e8:	ldr	r0, [sp, #44]	; 0x2c
   196ec:	str	r0, [sp, #24]
   196f0:	ldr	r0, [sp, #24]
   196f4:	str	r0, [sp, #40]	; 0x28
   196f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   196fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19700:	cmp	r0, r1
   19704:	bge	19714 <__assert_fail@plt+0x8280>
   19708:	sub	r1, fp, #36	; 0x24
   1970c:	sub	r0, fp, #24
   19710:	bl	175bc <__assert_fail@plt+0x6128>
   19714:	sub	r2, fp, #36	; 0x24
   19718:	sub	r0, fp, #24
   1971c:	str	r0, [sp, #20]
   19720:	ldr	r1, [sp, #20]
   19724:	bl	18840 <__assert_fail@plt+0x73ac>
   19728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1972c:	cmp	r0, #0
   19730:	bne	19744 <__assert_fail@plt+0x82b0>
   19734:	sub	r1, fp, #36	; 0x24
   19738:	ldr	r0, [fp, #-4]
   1973c:	bl	175bc <__assert_fail@plt+0x6128>
   19740:	b	19854 <__assert_fail@plt+0x83c0>
   19744:	b	19748 <__assert_fail@plt+0x82b4>
   19748:	sub	r0, fp, #24
   1974c:	bl	1987c <__assert_fail@plt+0x83e8>
   19750:	sub	r1, fp, #36	; 0x24
   19754:	sub	r2, fp, #24
   19758:	str	r0, [sp, #16]
   1975c:	mov	r0, r2
   19760:	bl	1731c <__assert_fail@plt+0x5e88>
   19764:	str	r0, [sp, #36]	; 0x24
   19768:	ldr	r0, [sp, #36]	; 0x24
   1976c:	cmp	r0, #0
   19770:	bne	19784 <__assert_fail@plt+0x82f0>
   19774:	sub	r1, fp, #24
   19778:	ldr	r0, [fp, #-4]
   1977c:	bl	175bc <__assert_fail@plt+0x6128>
   19780:	b	19850 <__assert_fail@plt+0x83bc>
   19784:	ldr	r0, [sp, #36]	; 0x24
   19788:	cmp	r0, #0
   1978c:	bge	1979c <__assert_fail@plt+0x8308>
   19790:	sub	r1, fp, #36	; 0x24
   19794:	sub	r0, fp, #24
   19798:	bl	175bc <__assert_fail@plt+0x6128>
   1979c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197a0:	cmp	r0, #1
   197a4:	bne	19838 <__assert_fail@plt+0x83a4>
   197a8:	sub	r2, fp, #36	; 0x24
   197ac:	sub	r0, fp, #24
   197b0:	str	r0, [sp, #12]
   197b4:	ldr	r1, [sp, #12]
   197b8:	bl	18840 <__assert_fail@plt+0x73ac>
   197bc:	ldr	r0, [fp, #-4]
   197c0:	ldr	r0, [r0]
   197c4:	movw	r1, #1
   197c8:	cmp	r1, r0
   197cc:	ble	197e4 <__assert_fail@plt+0x8350>
   197d0:	ldr	r0, [fp, #-4]
   197d4:	movw	r1, #1
   197d8:	bl	160ec <__assert_fail@plt+0x4c58>
   197dc:	str	r0, [sp, #8]
   197e0:	b	197f0 <__assert_fail@plt+0x835c>
   197e4:	ldr	r0, [fp, #-4]
   197e8:	ldr	r0, [r0, #8]
   197ec:	str	r0, [sp, #8]
   197f0:	ldr	r0, [sp, #8]
   197f4:	str	r0, [sp, #32]
   197f8:	ldr	r0, [fp, #-16]
   197fc:	ldr	r0, [r0]
   19800:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19804:	ldr	r1, [r1]
   19808:	bl	198f0 <__assert_fail@plt+0x845c>
   1980c:	ldr	r1, [sp, #32]
   19810:	str	r0, [r1]
   19814:	ldr	r0, [sp, #32]
   19818:	ldr	r0, [r0]
   1981c:	cmp	r0, #0
   19820:	movw	r0, #0
   19824:	movne	r0, #1
   19828:	and	r0, r0, #1
   1982c:	ldr	r1, [fp, #-4]
   19830:	str	r0, [r1, #4]
   19834:	b	19850 <__assert_fail@plt+0x83bc>
   19838:	sub	r2, fp, #36	; 0x24
   1983c:	sub	r0, fp, #24
   19840:	str	r0, [sp, #4]
   19844:	ldr	r1, [sp, #4]
   19848:	bl	17b60 <__assert_fail@plt+0x66cc>
   1984c:	b	19748 <__assert_fail@plt+0x82b4>
   19850:	b	19854 <__assert_fail@plt+0x83c0>
   19854:	sub	r0, fp, #24
   19858:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1985c:	sub	r0, fp, #36	; 0x24
   19860:	bl	15f44 <__assert_fail@plt+0x4ab0>
   19864:	ldr	r0, [fp, #-4]
   19868:	ldr	r1, [fp, #-4]
   1986c:	ldr	r2, [sp, #40]	; 0x28
   19870:	bl	17e94 <__assert_fail@plt+0x6a00>
   19874:	mov	sp, fp
   19878:	pop	{fp, pc}
   1987c:	push	{fp, lr}
   19880:	mov	fp, sp
   19884:	sub	sp, sp, #8
   19888:	str	r0, [sp, #4]
   1988c:	ldr	r0, [sp, #4]
   19890:	ldr	r0, [r0, #4]
   19894:	cmp	r0, #0
   19898:	ble	198a0 <__assert_fail@plt+0x840c>
   1989c:	b	198c0 <__assert_fail@plt+0x842c>
   198a0:	movw	r0, #20069	; 0x4e65
   198a4:	movt	r0, #4
   198a8:	movw	r1, #16512	; 0x4080
   198ac:	movt	r1, #4
   198b0:	movw	r2, #2723	; 0xaa3
   198b4:	movw	r3, #20085	; 0x4e75
   198b8:	movt	r3, #4
   198bc:	bl	11494 <__assert_fail@plt>
   198c0:	ldr	r0, [sp, #4]
   198c4:	ldr	r0, [r0, #8]
   198c8:	movw	r1, #0
   198cc:	bl	14ce8 <__assert_fail@plt+0x3854>
   198d0:	str	r0, [sp]
   198d4:	ldr	r0, [sp, #4]
   198d8:	ldr	r1, [sp, #4]
   198dc:	ldr	r2, [sp]
   198e0:	bl	18b98 <__assert_fail@plt+0x7704>
   198e4:	ldr	r0, [sp]
   198e8:	mov	sp, fp
   198ec:	pop	{fp, pc}
   198f0:	push	{fp, lr}
   198f4:	mov	fp, sp
   198f8:	sub	sp, sp, #40	; 0x28
   198fc:	str	r0, [fp, #-8]
   19900:	str	r1, [fp, #-12]
   19904:	ldr	r0, [fp, #-8]
   19908:	ldr	r1, [fp, #-12]
   1990c:	orr	r0, r0, r1
   19910:	cmp	r0, #0
   19914:	bls	1991c <__assert_fail@plt+0x8488>
   19918:	b	1993c <__assert_fail@plt+0x84a8>
   1991c:	movw	r0, #20126	; 0x4e9e
   19920:	movt	r0, #4
   19924:	movw	r1, #16512	; 0x4080
   19928:	movt	r1, #4
   1992c:	movw	r2, #2663	; 0xa67
   19930:	movw	r3, #20138	; 0x4eaa
   19934:	movt	r3, #4
   19938:	bl	11494 <__assert_fail@plt>
   1993c:	ldr	r0, [fp, #-8]
   19940:	cmp	r0, #0
   19944:	bne	19954 <__assert_fail@plt+0x84c0>
   19948:	ldr	r0, [fp, #-12]
   1994c:	str	r0, [fp, #-4]
   19950:	b	19b4c <__assert_fail@plt+0x86b8>
   19954:	ldr	r0, [fp, #-12]
   19958:	cmp	r0, #0
   1995c:	bne	1996c <__assert_fail@plt+0x84d8>
   19960:	ldr	r0, [fp, #-8]
   19964:	str	r0, [fp, #-4]
   19968:	b	19b4c <__assert_fail@plt+0x86b8>
   1996c:	b	19970 <__assert_fail@plt+0x84dc>
   19970:	b	19974 <__assert_fail@plt+0x84e0>
   19974:	ldr	r0, [fp, #-8]
   19978:	ldr	r1, [fp, #-12]
   1997c:	orr	r0, r0, r1
   19980:	str	r0, [sp, #20]
   19984:	movw	r0, #0
   19988:	str	r0, [sp, #16]
   1998c:	ldr	r0, [sp, #20]
   19990:	ldr	r1, [sp, #20]
   19994:	movw	r2, #0
   19998:	sub	r1, r2, r1
   1999c:	and	r0, r0, r1
   199a0:	str	r0, [sp, #12]
   199a4:	str	r2, [sp, #8]
   199a8:	movw	r0, #8
   199ac:	str	r0, [sp, #4]
   199b0:	ldr	r0, [sp, #4]
   199b4:	movw	r1, #32
   199b8:	cmp	r1, r0
   199bc:	bls	199f8 <__assert_fail@plt+0x8564>
   199c0:	b	199c4 <__assert_fail@plt+0x8530>
   199c4:	ldr	r0, [sp, #12]
   199c8:	and	r0, r0, #-16777216	; 0xff000000
   199cc:	cmp	r0, #0
   199d0:	bne	199f4 <__assert_fail@plt+0x8560>
   199d4:	ldr	r0, [sp, #4]
   199d8:	ldr	r1, [sp, #12]
   199dc:	lsl	r0, r1, r0
   199e0:	str	r0, [sp, #12]
   199e4:	ldr	r0, [sp, #8]
   199e8:	add	r0, r0, #8
   199ec:	str	r0, [sp, #8]
   199f0:	b	199c4 <__assert_fail@plt+0x8530>
   199f4:	b	199f8 <__assert_fail@plt+0x8564>
   199f8:	b	199fc <__assert_fail@plt+0x8568>
   199fc:	ldr	r0, [sp, #12]
   19a00:	and	r0, r0, #-2147483648	; 0x80000000
   19a04:	cmp	r0, #0
   19a08:	bne	19a28 <__assert_fail@plt+0x8594>
   19a0c:	ldr	r0, [sp, #12]
   19a10:	lsl	r0, r0, #1
   19a14:	str	r0, [sp, #12]
   19a18:	ldr	r0, [sp, #8]
   19a1c:	add	r0, r0, #1
   19a20:	str	r0, [sp, #8]
   19a24:	b	199fc <__assert_fail@plt+0x8568>
   19a28:	ldr	r0, [sp, #8]
   19a2c:	str	r0, [sp, #16]
   19a30:	ldr	r0, [sp, #16]
   19a34:	movw	r1, #31
   19a38:	sub	r0, r1, r0
   19a3c:	str	r0, [fp, #-16]
   19a40:	ldr	r0, [fp, #-16]
   19a44:	ldr	r1, [fp, #-8]
   19a48:	lsr	r0, r1, r0
   19a4c:	str	r0, [fp, #-8]
   19a50:	ldr	r0, [fp, #-16]
   19a54:	ldr	r1, [fp, #-12]
   19a58:	lsr	r0, r1, r0
   19a5c:	str	r0, [fp, #-12]
   19a60:	ldr	r0, [fp, #-8]
   19a64:	and	r0, r0, #1
   19a68:	cmp	r0, #0
   19a6c:	bne	19a90 <__assert_fail@plt+0x85fc>
   19a70:	b	19a74 <__assert_fail@plt+0x85e0>
   19a74:	ldr	r0, [fp, #-8]
   19a78:	str	r0, [sp]
   19a7c:	ldr	r0, [fp, #-12]
   19a80:	str	r0, [fp, #-8]
   19a84:	ldr	r0, [sp]
   19a88:	str	r0, [fp, #-12]
   19a8c:	b	19a90 <__assert_fail@plt+0x85fc>
   19a90:	b	19a94 <__assert_fail@plt+0x8600>
   19a94:	ldr	r0, [fp, #-12]
   19a98:	and	r0, r0, #1
   19a9c:	cmp	r0, #0
   19aa0:	bne	19ab4 <__assert_fail@plt+0x8620>
   19aa4:	ldr	r0, [fp, #-12]
   19aa8:	lsr	r0, r0, #1
   19aac:	str	r0, [fp, #-12]
   19ab0:	b	19a94 <__assert_fail@plt+0x8600>
   19ab4:	b	19ab8 <__assert_fail@plt+0x8624>
   19ab8:	ldr	r0, [fp, #-8]
   19abc:	ldr	r1, [fp, #-12]
   19ac0:	cmp	r0, r1
   19ac4:	beq	19b3c <__assert_fail@plt+0x86a8>
   19ac8:	ldr	r0, [fp, #-8]
   19acc:	ldr	r1, [fp, #-12]
   19ad0:	cmp	r0, r1
   19ad4:	bls	19b08 <__assert_fail@plt+0x8674>
   19ad8:	ldr	r0, [fp, #-12]
   19adc:	ldr	r1, [fp, #-8]
   19ae0:	sub	r0, r1, r0
   19ae4:	str	r0, [fp, #-8]
   19ae8:	ldr	r0, [fp, #-8]
   19aec:	lsr	r0, r0, #1
   19af0:	str	r0, [fp, #-8]
   19af4:	ldr	r0, [fp, #-8]
   19af8:	and	r0, r0, #1
   19afc:	cmp	r0, #0
   19b00:	beq	19ae8 <__assert_fail@plt+0x8654>
   19b04:	b	19b38 <__assert_fail@plt+0x86a4>
   19b08:	ldr	r0, [fp, #-8]
   19b0c:	ldr	r1, [fp, #-12]
   19b10:	sub	r0, r1, r0
   19b14:	str	r0, [fp, #-12]
   19b18:	ldr	r0, [fp, #-12]
   19b1c:	lsr	r0, r0, #1
   19b20:	str	r0, [fp, #-12]
   19b24:	ldr	r0, [fp, #-12]
   19b28:	and	r0, r0, #1
   19b2c:	cmp	r0, #0
   19b30:	beq	19b18 <__assert_fail@plt+0x8684>
   19b34:	b	19b38 <__assert_fail@plt+0x86a4>
   19b38:	b	19ab8 <__assert_fail@plt+0x8624>
   19b3c:	ldr	r0, [fp, #-8]
   19b40:	ldr	r1, [fp, #-16]
   19b44:	lsl	r0, r0, r1
   19b48:	str	r0, [fp, #-4]
   19b4c:	ldr	r0, [fp, #-4]
   19b50:	mov	sp, fp
   19b54:	pop	{fp, pc}
   19b58:	push	{fp, lr}
   19b5c:	mov	fp, sp
   19b60:	sub	sp, sp, #232	; 0xe8
   19b64:	ldr	ip, [fp, #8]
   19b68:	str	r0, [fp, #-4]
   19b6c:	str	r1, [fp, #-8]
   19b70:	str	r2, [fp, #-12]
   19b74:	str	r3, [fp, #-16]
   19b78:	ldr	r0, [fp, #-16]
   19b7c:	ldr	r0, [r0, #4]
   19b80:	cmp	r0, #0
   19b84:	bne	19bdc <__assert_fail@plt+0x8748>
   19b88:	ldr	r0, [fp, #8]
   19b8c:	bl	17284 <__assert_fail@plt+0x5df0>
   19b90:	str	r0, [fp, #-108]	; 0xffffff94
   19b94:	ldr	r0, [fp, #-4]
   19b98:	ldr	r1, [fp, #8]
   19b9c:	bl	17514 <__assert_fail@plt+0x6080>
   19ba0:	ldr	r0, [fp, #-8]
   19ba4:	movw	r1, #0
   19ba8:	cmp	r0, r1
   19bac:	beq	19bbc <__assert_fail@plt+0x8728>
   19bb0:	ldr	r0, [fp, #-8]
   19bb4:	movw	r1, #0
   19bb8:	str	r1, [r0, #4]
   19bbc:	ldr	r0, [fp, #-12]
   19bc0:	movw	r1, #0
   19bc4:	cmp	r0, r1
   19bc8:	beq	19bd8 <__assert_fail@plt+0x8744>
   19bcc:	ldr	r0, [fp, #-12]
   19bd0:	ldr	r1, [fp, #-108]	; 0xffffff94
   19bd4:	bl	15fc8 <__assert_fail@plt+0x4b34>
   19bd8:	b	1a1bc <__assert_fail@plt+0x8d28>
   19bdc:	ldr	r0, [fp, #8]
   19be0:	ldr	r0, [r0, #4]
   19be4:	cmp	r0, #0
   19be8:	bne	19c40 <__assert_fail@plt+0x87ac>
   19bec:	ldr	r0, [fp, #-16]
   19bf0:	bl	17284 <__assert_fail@plt+0x5df0>
   19bf4:	str	r0, [fp, #-112]	; 0xffffff90
   19bf8:	ldr	r0, [fp, #-4]
   19bfc:	ldr	r1, [fp, #-16]
   19c00:	bl	17514 <__assert_fail@plt+0x6080>
   19c04:	ldr	r0, [fp, #-8]
   19c08:	movw	r1, #0
   19c0c:	cmp	r0, r1
   19c10:	beq	19c20 <__assert_fail@plt+0x878c>
   19c14:	ldr	r0, [fp, #-8]
   19c18:	ldr	r1, [fp, #-112]	; 0xffffff90
   19c1c:	bl	15fc8 <__assert_fail@plt+0x4b34>
   19c20:	ldr	r0, [fp, #-12]
   19c24:	movw	r1, #0
   19c28:	cmp	r0, r1
   19c2c:	beq	19c3c <__assert_fail@plt+0x87a8>
   19c30:	ldr	r0, [fp, #-12]
   19c34:	movw	r1, #0
   19c38:	str	r1, [r0, #4]
   19c3c:	b	1a1bc <__assert_fail@plt+0x8d28>
   19c40:	sub	r0, fp, #28
   19c44:	bl	15e6c <__assert_fail@plt+0x49d8>
   19c48:	sub	r0, fp, #40	; 0x28
   19c4c:	bl	15e6c <__assert_fail@plt+0x49d8>
   19c50:	sub	r0, fp, #52	; 0x34
   19c54:	bl	15e6c <__assert_fail@plt+0x49d8>
   19c58:	sub	r0, fp, #64	; 0x40
   19c5c:	bl	15e6c <__assert_fail@plt+0x49d8>
   19c60:	sub	r0, fp, #76	; 0x4c
   19c64:	bl	15e6c <__assert_fail@plt+0x49d8>
   19c68:	sub	r0, fp, #88	; 0x58
   19c6c:	bl	15e6c <__assert_fail@plt+0x49d8>
   19c70:	sub	r0, fp, #28
   19c74:	ldr	r1, [fp, #-16]
   19c78:	bl	17514 <__assert_fail@plt+0x6080>
   19c7c:	sub	r0, fp, #28
   19c80:	bl	1987c <__assert_fail@plt+0x83e8>
   19c84:	sub	r1, fp, #40	; 0x28
   19c88:	str	r0, [fp, #-92]	; 0xffffffa4
   19c8c:	ldr	r0, [fp, #8]
   19c90:	str	r0, [sp, #96]	; 0x60
   19c94:	mov	r0, r1
   19c98:	ldr	r1, [sp, #96]	; 0x60
   19c9c:	bl	17514 <__assert_fail@plt+0x6080>
   19ca0:	sub	r0, fp, #40	; 0x28
   19ca4:	bl	1987c <__assert_fail@plt+0x83e8>
   19ca8:	str	r0, [fp, #-96]	; 0xffffffa0
   19cac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19cb0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19cb4:	cmp	r0, r1
   19cb8:	bcs	19cc8 <__assert_fail@plt+0x8834>
   19cbc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19cc0:	str	r0, [sp, #92]	; 0x5c
   19cc4:	b	19cd0 <__assert_fail@plt+0x883c>
   19cc8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ccc:	str	r0, [sp, #92]	; 0x5c
   19cd0:	ldr	r0, [sp, #92]	; 0x5c
   19cd4:	str	r0, [fp, #-100]	; 0xffffff9c
   19cd8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19cdc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19ce0:	sub	r0, r1, r0
   19ce4:	str	r0, [fp, #-92]	; 0xffffffa4
   19ce8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19cec:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19cf0:	sub	r0, r1, r0
   19cf4:	str	r0, [fp, #-96]	; 0xffffffa0
   19cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19d00:	cmp	r0, r1
   19d04:	bge	19d68 <__assert_fail@plt+0x88d4>
   19d08:	sub	r1, fp, #40	; 0x28
   19d0c:	sub	r0, fp, #28
   19d10:	bl	175bc <__assert_fail@plt+0x6128>
   19d14:	ldr	r0, [fp, #-16]
   19d18:	str	r0, [sp, #116]	; 0x74
   19d1c:	ldr	r0, [fp, #8]
   19d20:	str	r0, [fp, #-16]
   19d24:	ldr	r0, [sp, #116]	; 0x74
   19d28:	str	r0, [fp, #8]
   19d2c:	b	19d30 <__assert_fail@plt+0x889c>
   19d30:	ldr	r0, [fp, #-8]
   19d34:	str	r0, [sp, #112]	; 0x70
   19d38:	ldr	r0, [fp, #-12]
   19d3c:	str	r0, [fp, #-8]
   19d40:	ldr	r0, [sp, #112]	; 0x70
   19d44:	str	r0, [fp, #-12]
   19d48:	b	19d4c <__assert_fail@plt+0x88b8>
   19d4c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19d50:	str	r0, [sp, #108]	; 0x6c
   19d54:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19d58:	str	r0, [fp, #-92]	; 0xffffffa4
   19d5c:	ldr	r0, [sp, #108]	; 0x6c
   19d60:	str	r0, [fp, #-96]	; 0xffffffa0
   19d64:	b	19d68 <__assert_fail@plt+0x88d4>
   19d68:	sub	r3, fp, #40	; 0x28
   19d6c:	sub	r0, fp, #28
   19d70:	sub	r1, fp, #88	; 0x58
   19d74:	str	r0, [sp, #88]	; 0x58
   19d78:	mov	r0, r1
   19d7c:	ldr	r1, [sp, #88]	; 0x58
   19d80:	ldr	r2, [sp, #88]	; 0x58
   19d84:	bl	186cc <__assert_fail@plt+0x7238>
   19d88:	sub	r0, fp, #88	; 0x58
   19d8c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19d90:	str	r0, [sp, #84]	; 0x54
   19d94:	ldr	r1, [sp, #84]	; 0x54
   19d98:	bl	17e94 <__assert_fail@plt+0x6a00>
   19d9c:	sub	r0, fp, #64	; 0x40
   19da0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19da4:	bl	1a1c4 <__assert_fail@plt+0x8d30>
   19da8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19dac:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19db0:	add	r0, r0, r1
   19db4:	str	r0, [fp, #-104]	; 0xffffff98
   19db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dbc:	cmp	r0, #0
   19dc0:	ble	19f20 <__assert_fail@plt+0x8a8c>
   19dc4:	sub	r0, fp, #28
   19dc8:	bl	1987c <__assert_fail@plt+0x83e8>
   19dcc:	sub	r1, fp, #76	; 0x4c
   19dd0:	str	r0, [sp, #104]	; 0x68
   19dd4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19dd8:	ldr	r2, [sp, #104]	; 0x68
   19ddc:	add	r0, r0, r2
   19de0:	str	r0, [sp, #80]	; 0x50
   19de4:	mov	r0, r1
   19de8:	ldr	r1, [sp, #80]	; 0x50
   19dec:	bl	1a1c4 <__assert_fail@plt+0x8d30>
   19df0:	ldr	r0, [sp, #104]	; 0x68
   19df4:	ldr	r1, [fp, #-104]	; 0xffffff98
   19df8:	add	r0, r1, r0
   19dfc:	str	r0, [fp, #-104]	; 0xffffff98
   19e00:	sub	r1, fp, #40	; 0x28
   19e04:	sub	r0, fp, #28
   19e08:	bl	1731c <__assert_fail@plt+0x5e88>
   19e0c:	str	r0, [sp, #100]	; 0x64
   19e10:	ldr	r0, [sp, #100]	; 0x64
   19e14:	cmp	r0, #0
   19e18:	bne	19e20 <__assert_fail@plt+0x898c>
   19e1c:	b	19f1c <__assert_fail@plt+0x8a88>
   19e20:	ldr	r0, [sp, #100]	; 0x64
   19e24:	cmp	r0, #0
   19e28:	bge	19e9c <__assert_fail@plt+0x8a08>
   19e2c:	sub	r2, fp, #28
   19e30:	sub	r0, fp, #40	; 0x28
   19e34:	str	r0, [sp, #76]	; 0x4c
   19e38:	ldr	r1, [sp, #76]	; 0x4c
   19e3c:	bl	17b60 <__assert_fail@plt+0x66cc>
   19e40:	sub	r2, fp, #88	; 0x58
   19e44:	sub	r0, fp, #76	; 0x4c
   19e48:	str	r0, [sp, #72]	; 0x48
   19e4c:	ldr	r1, [sp, #72]	; 0x48
   19e50:	bl	17698 <__assert_fail@plt+0x6204>
   19e54:	sub	r2, fp, #64	; 0x40
   19e58:	sub	r0, fp, #52	; 0x34
   19e5c:	str	r0, [sp, #68]	; 0x44
   19e60:	ldr	r1, [sp, #68]	; 0x44
   19e64:	bl	17698 <__assert_fail@plt+0x6204>
   19e68:	sub	r0, fp, #40	; 0x28
   19e6c:	bl	1987c <__assert_fail@plt+0x83e8>
   19e70:	sub	r1, fp, #88	; 0x58
   19e74:	str	r0, [sp, #104]	; 0x68
   19e78:	ldr	r2, [sp, #104]	; 0x68
   19e7c:	mov	r0, r1
   19e80:	bl	17e94 <__assert_fail@plt+0x6a00>
   19e84:	sub	r0, fp, #64	; 0x40
   19e88:	ldr	r2, [sp, #104]	; 0x68
   19e8c:	str	r0, [sp, #64]	; 0x40
   19e90:	ldr	r1, [sp, #64]	; 0x40
   19e94:	bl	17e94 <__assert_fail@plt+0x6a00>
   19e98:	b	19f08 <__assert_fail@plt+0x8a74>
   19e9c:	sub	r2, fp, #40	; 0x28
   19ea0:	sub	r0, fp, #28
   19ea4:	str	r0, [sp, #60]	; 0x3c
   19ea8:	ldr	r1, [sp, #60]	; 0x3c
   19eac:	bl	17b60 <__assert_fail@plt+0x66cc>
   19eb0:	sub	r0, fp, #88	; 0x58
   19eb4:	sub	r1, fp, #76	; 0x4c
   19eb8:	str	r0, [sp, #56]	; 0x38
   19ebc:	ldr	r2, [sp, #56]	; 0x38
   19ec0:	bl	17698 <__assert_fail@plt+0x6204>
   19ec4:	sub	r0, fp, #64	; 0x40
   19ec8:	sub	r1, fp, #52	; 0x34
   19ecc:	str	r0, [sp, #52]	; 0x34
   19ed0:	ldr	r2, [sp, #52]	; 0x34
   19ed4:	bl	17698 <__assert_fail@plt+0x6204>
   19ed8:	sub	r0, fp, #28
   19edc:	bl	1987c <__assert_fail@plt+0x83e8>
   19ee0:	sub	r1, fp, #76	; 0x4c
   19ee4:	str	r0, [sp, #104]	; 0x68
   19ee8:	ldr	r2, [sp, #104]	; 0x68
   19eec:	mov	r0, r1
   19ef0:	bl	17e94 <__assert_fail@plt+0x6a00>
   19ef4:	sub	r0, fp, #52	; 0x34
   19ef8:	ldr	r2, [sp, #104]	; 0x68
   19efc:	str	r0, [sp, #48]	; 0x30
   19f00:	ldr	r1, [sp, #48]	; 0x30
   19f04:	bl	17e94 <__assert_fail@plt+0x6a00>
   19f08:	ldr	r0, [sp, #104]	; 0x68
   19f0c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19f10:	add	r0, r1, r0
   19f14:	str	r0, [fp, #-104]	; 0xffffff98
   19f18:	b	19e00 <__assert_fail@plt+0x896c>
   19f1c:	b	19f2c <__assert_fail@plt+0x8a98>
   19f20:	sub	r0, fp, #76	; 0x4c
   19f24:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19f28:	bl	1a1c4 <__assert_fail@plt+0x8d30>
   19f2c:	sub	r0, fp, #40	; 0x28
   19f30:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19f34:	str	r0, [sp, #44]	; 0x2c
   19f38:	ldr	r1, [sp, #44]	; 0x2c
   19f3c:	bl	17e94 <__assert_fail@plt+0x6a00>
   19f40:	sub	r0, fp, #52	; 0x34
   19f44:	str	r0, [sp, #40]	; 0x28
   19f48:	ldr	r1, [sp, #40]	; 0x28
   19f4c:	bl	1757c <__assert_fail@plt+0x60e8>
   19f50:	sub	r2, fp, #40	; 0x28
   19f54:	sub	r0, fp, #64	; 0x40
   19f58:	ldr	r1, [fp, #8]
   19f5c:	bl	18fc8 <__assert_fail@plt+0x7b34>
   19f60:	sub	r0, fp, #64	; 0x40
   19f64:	str	r0, [sp, #36]	; 0x24
   19f68:	ldr	r1, [sp, #36]	; 0x24
   19f6c:	bl	17514 <__assert_fail@plt+0x6080>
   19f70:	sub	r2, fp, #40	; 0x28
   19f74:	sub	r0, fp, #88	; 0x58
   19f78:	ldr	r1, [fp, #-16]
   19f7c:	bl	18fc8 <__assert_fail@plt+0x7b34>
   19f80:	sub	r0, fp, #88	; 0x58
   19f84:	str	r0, [sp, #32]
   19f88:	ldr	r1, [sp, #32]
   19f8c:	bl	17514 <__assert_fail@plt+0x6080>
   19f90:	ldr	r0, [fp, #-104]	; 0xffffff98
   19f94:	mvn	r1, #0
   19f98:	add	r1, r0, r1
   19f9c:	str	r1, [fp, #-104]	; 0xffffff98
   19fa0:	cmp	r0, #0
   19fa4:	bls	1a0c0 <__assert_fail@plt+0x8c2c>
   19fa8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19fac:	cmp	r0, #0
   19fb0:	movw	r0, #0
   19fb4:	movne	r0, #1
   19fb8:	and	r0, r0, #1
   19fbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fc0:	ldr	r1, [r1]
   19fc4:	and	r0, r0, r1
   19fc8:	cmp	r0, #0
   19fcc:	bne	19ff8 <__assert_fail@plt+0x8b64>
   19fd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19fd4:	cmp	r0, #0
   19fd8:	movw	r0, #0
   19fdc:	movne	r0, #1
   19fe0:	and	r0, r0, #1
   19fe4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19fe8:	ldr	r1, [r1]
   19fec:	and	r0, r0, r1
   19ff0:	cmp	r0, #0
   19ff4:	beq	1a020 <__assert_fail@plt+0x8b8c>
   19ff8:	sub	r2, fp, #64	; 0x40
   19ffc:	sub	r0, fp, #52	; 0x34
   1a000:	str	r0, [sp, #28]
   1a004:	ldr	r1, [sp, #28]
   1a008:	bl	17b60 <__assert_fail@plt+0x66cc>
   1a00c:	sub	r2, fp, #88	; 0x58
   1a010:	sub	r0, fp, #76	; 0x4c
   1a014:	str	r0, [sp, #24]
   1a018:	ldr	r1, [sp, #24]
   1a01c:	bl	17698 <__assert_fail@plt+0x6204>
   1a020:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a024:	cmp	r0, #0
   1a028:	movw	r0, #0
   1a02c:	movne	r0, #1
   1a030:	and	r0, r0, #1
   1a034:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a038:	ldr	r1, [r1]
   1a03c:	and	r0, r0, r1
   1a040:	cmp	r0, #0
   1a044:	bne	1a074 <__assert_fail@plt+0x8be0>
   1a048:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a04c:	cmp	r0, #0
   1a050:	movw	r0, #0
   1a054:	movne	r0, #1
   1a058:	and	r0, r0, #1
   1a05c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a060:	ldr	r1, [r1]
   1a064:	and	r0, r0, r1
   1a068:	cmp	r0, #0
   1a06c:	bne	1a074 <__assert_fail@plt+0x8be0>
   1a070:	b	1a094 <__assert_fail@plt+0x8c00>
   1a074:	movw	r0, #17655	; 0x44f7
   1a078:	movt	r0, #4
   1a07c:	movw	r1, #16512	; 0x4080
   1a080:	movt	r1, #4
   1a084:	movw	r2, #2950	; 0xb86
   1a088:	movw	r3, #17690	; 0x451a
   1a08c:	movt	r3, #4
   1a090:	bl	11494 <__assert_fail@plt>
   1a094:	sub	r0, fp, #52	; 0x34
   1a098:	str	r0, [sp, #20]
   1a09c:	ldr	r1, [sp, #20]
   1a0a0:	movw	r2, #1
   1a0a4:	bl	18b98 <__assert_fail@plt+0x7704>
   1a0a8:	sub	r0, fp, #76	; 0x4c
   1a0ac:	str	r0, [sp, #16]
   1a0b0:	ldr	r1, [sp, #16]
   1a0b4:	movw	r2, #1
   1a0b8:	bl	18b98 <__assert_fail@plt+0x7704>
   1a0bc:	b	19f90 <__assert_fail@plt+0x8afc>
   1a0c0:	sub	r0, fp, #64	; 0x40
   1a0c4:	sub	r1, fp, #52	; 0x34
   1a0c8:	str	r0, [sp, #12]
   1a0cc:	ldr	r2, [sp, #12]
   1a0d0:	bl	17698 <__assert_fail@plt+0x6204>
   1a0d4:	sub	r1, fp, #64	; 0x40
   1a0d8:	sub	r0, fp, #52	; 0x34
   1a0dc:	bl	173dc <__assert_fail@plt+0x5f48>
   1a0e0:	cmp	r0, #0
   1a0e4:	ble	1a108 <__assert_fail@plt+0x8c74>
   1a0e8:	sub	r1, fp, #64	; 0x40
   1a0ec:	sub	r0, fp, #52	; 0x34
   1a0f0:	bl	175bc <__assert_fail@plt+0x6128>
   1a0f4:	sub	r2, fp, #88	; 0x58
   1a0f8:	sub	r0, fp, #76	; 0x4c
   1a0fc:	str	r0, [sp, #8]
   1a100:	ldr	r1, [sp, #8]
   1a104:	bl	17b60 <__assert_fail@plt+0x66cc>
   1a108:	ldr	r0, [fp, #-16]
   1a10c:	ldr	r0, [r0, #4]
   1a110:	cmp	r0, #0
   1a114:	bge	1a128 <__assert_fail@plt+0x8c94>
   1a118:	sub	r0, fp, #52	; 0x34
   1a11c:	str	r0, [sp, #4]
   1a120:	ldr	r1, [sp, #4]
   1a124:	bl	1757c <__assert_fail@plt+0x60e8>
   1a128:	ldr	r0, [fp, #8]
   1a12c:	ldr	r0, [r0, #4]
   1a130:	cmp	r0, #0
   1a134:	bge	1a148 <__assert_fail@plt+0x8cb4>
   1a138:	sub	r0, fp, #76	; 0x4c
   1a13c:	str	r0, [sp]
   1a140:	ldr	r1, [sp]
   1a144:	bl	1757c <__assert_fail@plt+0x60e8>
   1a148:	sub	r1, fp, #40	; 0x28
   1a14c:	ldr	r0, [fp, #-4]
   1a150:	bl	175bc <__assert_fail@plt+0x6128>
   1a154:	ldr	r0, [fp, #-8]
   1a158:	movw	r1, #0
   1a15c:	cmp	r0, r1
   1a160:	beq	1a170 <__assert_fail@plt+0x8cdc>
   1a164:	sub	r1, fp, #52	; 0x34
   1a168:	ldr	r0, [fp, #-8]
   1a16c:	bl	175bc <__assert_fail@plt+0x6128>
   1a170:	ldr	r0, [fp, #-12]
   1a174:	movw	r1, #0
   1a178:	cmp	r0, r1
   1a17c:	beq	1a18c <__assert_fail@plt+0x8cf8>
   1a180:	sub	r1, fp, #76	; 0x4c
   1a184:	ldr	r0, [fp, #-12]
   1a188:	bl	175bc <__assert_fail@plt+0x6128>
   1a18c:	sub	r0, fp, #28
   1a190:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a194:	sub	r0, fp, #40	; 0x28
   1a198:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a19c:	sub	r0, fp, #52	; 0x34
   1a1a0:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a1a4:	sub	r0, fp, #64	; 0x40
   1a1a8:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a1ac:	sub	r0, fp, #76	; 0x4c
   1a1b0:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a1b4:	sub	r0, fp, #88	; 0x58
   1a1b8:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a1bc:	mov	sp, fp
   1a1c0:	pop	{fp, pc}
   1a1c4:	push	{fp, lr}
   1a1c8:	mov	fp, sp
   1a1cc:	sub	sp, sp, #8
   1a1d0:	str	r0, [sp, #4]
   1a1d4:	str	r1, [sp]
   1a1d8:	ldr	r0, [sp, #4]
   1a1dc:	ldr	r1, [sp]
   1a1e0:	bl	1c00c <__assert_fail@plt+0xab78>
   1a1e4:	cmp	r0, #0
   1a1e8:	bne	1a21c <__assert_fail@plt+0x8d88>
   1a1ec:	ldr	r0, [sp, #4]
   1a1f0:	ldr	r0, [r0, #4]
   1a1f4:	cmp	r0, #0
   1a1f8:	blt	1a20c <__assert_fail@plt+0x8d78>
   1a1fc:	ldr	r0, [sp, #4]
   1a200:	ldr	r1, [sp]
   1a204:	bl	1c16c <__assert_fail@plt+0xacd8>
   1a208:	b	1a218 <__assert_fail@plt+0x8d84>
   1a20c:	ldr	r0, [sp, #4]
   1a210:	ldr	r1, [sp]
   1a214:	bl	1c380 <__assert_fail@plt+0xaeec>
   1a218:	b	1a21c <__assert_fail@plt+0x8d88>
   1a21c:	mov	sp, fp
   1a220:	pop	{fp, pc}
   1a224:	push	{fp, lr}
   1a228:	mov	fp, sp
   1a22c:	sub	sp, sp, #32
   1a230:	str	r0, [fp, #-4]
   1a234:	str	r1, [fp, #-8]
   1a238:	str	r2, [fp, #-12]
   1a23c:	ldr	r0, [fp, #-8]
   1a240:	ldr	r0, [r0, #4]
   1a244:	cmp	r0, #0
   1a248:	beq	1a25c <__assert_fail@plt+0x8dc8>
   1a24c:	ldr	r0, [fp, #-12]
   1a250:	ldr	r0, [r0, #4]
   1a254:	cmp	r0, #0
   1a258:	bne	1a26c <__assert_fail@plt+0x8dd8>
   1a25c:	ldr	r0, [fp, #-4]
   1a260:	movw	r1, #0
   1a264:	str	r1, [r0, #4]
   1a268:	b	1a2bc <__assert_fail@plt+0x8e28>
   1a26c:	add	r0, sp, #8
   1a270:	bl	15e6c <__assert_fail@plt+0x49d8>
   1a274:	add	r0, sp, #8
   1a278:	ldr	r1, [fp, #-8]
   1a27c:	ldr	r2, [fp, #-12]
   1a280:	bl	19628 <__assert_fail@plt+0x8194>
   1a284:	add	r0, sp, #8
   1a288:	ldr	r1, [fp, #-8]
   1a28c:	str	r0, [sp, #4]
   1a290:	ldr	r2, [sp, #4]
   1a294:	bl	18fc8 <__assert_fail@plt+0x7b34>
   1a298:	add	r1, sp, #8
   1a29c:	ldr	r0, [fp, #-4]
   1a2a0:	ldr	r2, [fp, #-12]
   1a2a4:	bl	17cb4 <__assert_fail@plt+0x6820>
   1a2a8:	add	r0, sp, #8
   1a2ac:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a2b0:	ldr	r0, [fp, #-4]
   1a2b4:	ldr	r1, [fp, #-4]
   1a2b8:	bl	17514 <__assert_fail@plt+0x6080>
   1a2bc:	mov	sp, fp
   1a2c0:	pop	{fp, pc}
   1a2c4:	push	{fp, lr}
   1a2c8:	mov	fp, sp
   1a2cc:	sub	sp, sp, #16
   1a2d0:	str	r0, [fp, #-4]
   1a2d4:	str	r1, [sp, #8]
   1a2d8:	str	r2, [sp, #4]
   1a2dc:	ldr	r0, [sp, #4]
   1a2e0:	cmp	r0, #0
   1a2e4:	beq	1a2f8 <__assert_fail@plt+0x8e64>
   1a2e8:	ldr	r0, [sp, #8]
   1a2ec:	ldr	r0, [r0, #4]
   1a2f0:	cmp	r0, #0
   1a2f4:	bne	1a308 <__assert_fail@plt+0x8e74>
   1a2f8:	ldr	r0, [fp, #-4]
   1a2fc:	movw	r1, #0
   1a300:	str	r1, [r0, #4]
   1a304:	b	1a340 <__assert_fail@plt+0x8eac>
   1a308:	ldr	r1, [sp, #8]
   1a30c:	ldr	r2, [sp, #4]
   1a310:	movw	r0, #0
   1a314:	bl	195a4 <__assert_fail@plt+0x8110>
   1a318:	ldr	r1, [sp, #4]
   1a31c:	udiv	r0, r1, r0
   1a320:	str	r0, [sp, #4]
   1a324:	ldr	r0, [fp, #-4]
   1a328:	ldr	r1, [sp, #8]
   1a32c:	ldr	r2, [sp, #4]
   1a330:	bl	17c6c <__assert_fail@plt+0x67d8>
   1a334:	ldr	r0, [fp, #-4]
   1a338:	ldr	r1, [fp, #-4]
   1a33c:	bl	17514 <__assert_fail@plt+0x6080>
   1a340:	mov	sp, fp
   1a344:	pop	{fp, pc}
   1a348:	push	{fp, lr}
   1a34c:	mov	fp, sp
   1a350:	sub	sp, sp, #64	; 0x40
   1a354:	str	r0, [fp, #-8]
   1a358:	str	r1, [fp, #-12]
   1a35c:	str	r2, [fp, #-16]
   1a360:	ldr	r0, [fp, #-12]
   1a364:	ldr	r0, [r0, #4]
   1a368:	cmp	r0, #0
   1a36c:	beq	1a384 <__assert_fail@plt+0x8ef0>
   1a370:	ldr	r0, [fp, #-16]
   1a374:	movw	r1, #1
   1a378:	bl	165c0 <__assert_fail@plt+0x512c>
   1a37c:	cmp	r0, #0
   1a380:	bgt	1a390 <__assert_fail@plt+0x8efc>
   1a384:	movw	r0, #0
   1a388:	str	r0, [fp, #-4]
   1a38c:	b	1a464 <__assert_fail@plt+0x8fd0>
   1a390:	sub	r0, fp, #28
   1a394:	bl	15e6c <__assert_fail@plt+0x49d8>
   1a398:	add	r0, sp, #24
   1a39c:	bl	15e6c <__assert_fail@plt+0x49d8>
   1a3a0:	add	r1, sp, #24
   1a3a4:	sub	r0, fp, #28
   1a3a8:	ldr	r3, [fp, #-12]
   1a3ac:	ldr	r2, [fp, #-16]
   1a3b0:	movw	ip, #0
   1a3b4:	str	r2, [sp, #16]
   1a3b8:	mov	r2, ip
   1a3bc:	ldr	ip, [sp, #16]
   1a3c0:	str	ip, [sp]
   1a3c4:	bl	19b58 <__assert_fail@plt+0x86c4>
   1a3c8:	sub	r0, fp, #28
   1a3cc:	movw	r1, #1
   1a3d0:	bl	172c8 <__assert_fail@plt+0x5e34>
   1a3d4:	cmp	r0, #0
   1a3d8:	movw	r0, #0
   1a3dc:	moveq	r0, #1
   1a3e0:	and	r0, r0, #1
   1a3e4:	str	r0, [sp, #20]
   1a3e8:	ldr	r0, [sp, #20]
   1a3ec:	cmp	r0, #0
   1a3f0:	beq	1a44c <__assert_fail@plt+0x8fb8>
   1a3f4:	ldr	r0, [sp, #28]
   1a3f8:	cmp	r0, #0
   1a3fc:	bge	1a440 <__assert_fail@plt+0x8fac>
   1a400:	ldr	r0, [fp, #-16]
   1a404:	ldr	r0, [r0, #4]
   1a408:	cmp	r0, #0
   1a40c:	blt	1a428 <__assert_fail@plt+0x8f94>
   1a410:	add	r0, sp, #24
   1a414:	ldr	r2, [fp, #-16]
   1a418:	str	r0, [sp, #12]
   1a41c:	ldr	r1, [sp, #12]
   1a420:	bl	17698 <__assert_fail@plt+0x6204>
   1a424:	b	1a43c <__assert_fail@plt+0x8fa8>
   1a428:	add	r0, sp, #24
   1a42c:	ldr	r2, [fp, #-16]
   1a430:	str	r0, [sp, #8]
   1a434:	ldr	r1, [sp, #8]
   1a438:	bl	17b60 <__assert_fail@plt+0x66cc>
   1a43c:	b	1a440 <__assert_fail@plt+0x8fac>
   1a440:	add	r1, sp, #24
   1a444:	ldr	r0, [fp, #-8]
   1a448:	bl	175bc <__assert_fail@plt+0x6128>
   1a44c:	sub	r0, fp, #28
   1a450:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a454:	add	r0, sp, #24
   1a458:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a45c:	ldr	r0, [sp, #20]
   1a460:	str	r0, [fp, #-4]
   1a464:	ldr	r0, [fp, #-4]
   1a468:	mov	sp, fp
   1a46c:	pop	{fp, pc}
   1a470:	push	{fp, lr}
   1a474:	mov	fp, sp
   1a478:	sub	sp, sp, #40	; 0x28
   1a47c:	add	r3, sp, #12
   1a480:	str	r0, [fp, #-4]
   1a484:	str	r1, [fp, #-8]
   1a488:	str	r2, [fp, #-12]
   1a48c:	mov	r0, r3
   1a490:	movw	r1, #1
   1a494:	bl	162d4 <__assert_fail@plt+0x4e40>
   1a498:	ldr	r0, [pc, #112]	; 1a510 <__assert_fail@plt+0x907c>
   1a49c:	str	r0, [fp, #-16]
   1a4a0:	add	r0, sp, #12
   1a4a4:	str	r0, [sp, #8]
   1a4a8:	ldr	r1, [sp, #8]
   1a4ac:	ldr	r2, [sp, #8]
   1a4b0:	bl	17cb4 <__assert_fail@plt+0x6820>
   1a4b4:	ldr	r0, [fp, #-12]
   1a4b8:	ldr	r1, [fp, #-16]
   1a4bc:	and	r0, r0, r1
   1a4c0:	cmp	r0, #0
   1a4c4:	beq	1a4dc <__assert_fail@plt+0x9048>
   1a4c8:	add	r0, sp, #12
   1a4cc:	ldr	r2, [fp, #-8]
   1a4d0:	str	r0, [sp, #4]
   1a4d4:	ldr	r1, [sp, #4]
   1a4d8:	bl	17cb4 <__assert_fail@plt+0x6820>
   1a4dc:	ldr	r0, [fp, #-16]
   1a4e0:	lsr	r0, r0, #1
   1a4e4:	str	r0, [fp, #-16]
   1a4e8:	ldr	r0, [fp, #-16]
   1a4ec:	cmp	r0, #0
   1a4f0:	bhi	1a4a0 <__assert_fail@plt+0x900c>
   1a4f4:	add	r1, sp, #12
   1a4f8:	ldr	r0, [fp, #-4]
   1a4fc:	bl	175bc <__assert_fail@plt+0x6128>
   1a500:	add	r0, sp, #12
   1a504:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a508:	mov	sp, fp
   1a50c:	pop	{fp, pc}
   1a510:	andhi	r0, r0, r0
   1a514:	push	{fp, lr}
   1a518:	mov	fp, sp
   1a51c:	sub	sp, sp, #24
   1a520:	mov	r3, sp
   1a524:	str	r0, [fp, #-4]
   1a528:	str	r1, [fp, #-8]
   1a52c:	str	r2, [sp, #12]
   1a530:	ldr	r1, [fp, #-8]
   1a534:	mov	r0, r3
   1a538:	bl	162d4 <__assert_fail@plt+0x4e40>
   1a53c:	mov	r1, sp
   1a540:	ldr	r0, [fp, #-4]
   1a544:	ldr	r2, [sp, #12]
   1a548:	bl	1a470 <__assert_fail@plt+0x8fdc>
   1a54c:	mov	r0, sp
   1a550:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a554:	mov	sp, fp
   1a558:	pop	{fp, pc}
   1a55c:	push	{fp, lr}
   1a560:	mov	fp, sp
   1a564:	sub	sp, sp, #144	; 0x90
   1a568:	str	r0, [fp, #-4]
   1a56c:	str	r1, [fp, #-8]
   1a570:	str	r2, [fp, #-12]
   1a574:	str	r3, [fp, #-16]
   1a578:	movw	r0, #0
   1a57c:	str	r0, [sp, #68]	; 0x44
   1a580:	ldr	r0, [fp, #-12]
   1a584:	ldr	r0, [r0, #4]
   1a588:	cmp	r0, #0
   1a58c:	blt	1a5a0 <__assert_fail@plt+0x910c>
   1a590:	ldr	r0, [fp, #-12]
   1a594:	ldr	r0, [r0, #4]
   1a598:	str	r0, [sp, #40]	; 0x28
   1a59c:	b	1a5b4 <__assert_fail@plt+0x9120>
   1a5a0:	ldr	r0, [fp, #-12]
   1a5a4:	ldr	r0, [r0, #4]
   1a5a8:	movw	r1, #0
   1a5ac:	sub	r0, r1, r0
   1a5b0:	str	r0, [sp, #40]	; 0x28
   1a5b4:	ldr	r0, [sp, #40]	; 0x28
   1a5b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a5bc:	ldr	r0, [fp, #-16]
   1a5c0:	ldr	r0, [r0, #4]
   1a5c4:	cmp	r0, #0
   1a5c8:	blt	1a5dc <__assert_fail@plt+0x9148>
   1a5cc:	ldr	r0, [fp, #-16]
   1a5d0:	ldr	r0, [r0, #4]
   1a5d4:	str	r0, [sp, #36]	; 0x24
   1a5d8:	b	1a5f0 <__assert_fail@plt+0x915c>
   1a5dc:	ldr	r0, [fp, #-16]
   1a5e0:	ldr	r0, [r0, #4]
   1a5e4:	movw	r1, #0
   1a5e8:	sub	r0, r1, r0
   1a5ec:	str	r0, [sp, #36]	; 0x24
   1a5f0:	ldr	r0, [sp, #36]	; 0x24
   1a5f4:	str	r0, [fp, #-48]	; 0xffffffd0
   1a5f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a5fc:	cmp	r0, #0
   1a600:	bne	1a610 <__assert_fail@plt+0x917c>
   1a604:	movw	r0, #17798	; 0x4586
   1a608:	movt	r0, #4
   1a60c:	bl	1a998 <__assert_fail@plt+0x9504>
   1a610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a614:	cmp	r0, #0
   1a618:	bne	1a62c <__assert_fail@plt+0x9198>
   1a61c:	ldr	r0, [fp, #-4]
   1a620:	movw	r1, #1
   1a624:	bl	16064 <__assert_fail@plt+0x4bd0>
   1a628:	b	1a98c <__assert_fail@plt+0x94f8>
   1a62c:	ldr	r0, [fp, #-16]
   1a630:	ldr	r0, [r0, #8]
   1a634:	str	r0, [fp, #-52]	; 0xffffffcc
   1a638:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a63c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a640:	sub	r0, fp, #68	; 0x44
   1a644:	bl	1a9cc <__assert_fail@plt+0x9538>
   1a648:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a64c:	str	r0, [sp, #72]	; 0x48
   1a650:	ldr	r0, [sp, #72]	; 0x48
   1a654:	cmp	r0, #0
   1a658:	bls	1a6c4 <__assert_fail@plt+0x9230>
   1a65c:	movw	r0, #0
   1a660:	str	r0, [fp, #-68]	; 0xffffffbc
   1a664:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a668:	bl	15f08 <__assert_fail@plt+0x4a74>
   1a66c:	str	r0, [sp, #68]	; 0x44
   1a670:	ldr	r0, [sp, #68]	; 0x44
   1a674:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a678:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a67c:	ldr	r3, [sp, #72]	; 0x48
   1a680:	bl	149cc <__assert_fail@plt+0x3538>
   1a684:	str	r0, [sp, #64]	; 0x40
   1a688:	ldr	r0, [sp, #64]	; 0x40
   1a68c:	cmp	r0, #0
   1a690:	bne	1a698 <__assert_fail@plt+0x9204>
   1a694:	b	1a6b8 <__assert_fail@plt+0x9224>
   1a698:	movw	r0, #17493	; 0x4455
   1a69c:	movt	r0, #4
   1a6a0:	movw	r1, #16512	; 0x4080
   1a6a4:	movt	r1, #4
   1a6a8:	movw	r2, #3116	; 0xc2c
   1a6ac:	movw	r3, #17821	; 0x459d
   1a6b0:	movt	r3, #4
   1a6b4:	bl	11494 <__assert_fail@plt>
   1a6b8:	b	1a6bc <__assert_fail@plt+0x9228>
   1a6bc:	ldr	r0, [sp, #68]	; 0x44
   1a6c0:	str	r0, [fp, #-52]	; 0xffffffcc
   1a6c4:	sub	r0, fp, #40	; 0x28
   1a6c8:	bl	15e6c <__assert_fail@plt+0x49d8>
   1a6cc:	ldr	r0, [fp, #-12]
   1a6d0:	ldr	r0, [r0, #4]
   1a6d4:	cmp	r0, #0
   1a6d8:	bge	1a704 <__assert_fail@plt+0x9270>
   1a6dc:	sub	r0, fp, #40	; 0x28
   1a6e0:	ldr	r1, [fp, #-8]
   1a6e4:	ldr	r2, [fp, #-16]
   1a6e8:	bl	1a348 <__assert_fail@plt+0x8eb4>
   1a6ec:	cmp	r0, #0
   1a6f0:	bne	1a700 <__assert_fail@plt+0x926c>
   1a6f4:	movw	r0, #17917	; 0x45fd
   1a6f8:	movt	r0, #4
   1a6fc:	bl	1a998 <__assert_fail@plt+0x9504>
   1a700:	b	1a810 <__assert_fail@plt+0x937c>
   1a704:	sub	r0, fp, #40	; 0x28
   1a708:	ldr	r1, [fp, #-8]
   1a70c:	bl	17514 <__assert_fail@plt+0x6080>
   1a710:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a714:	str	r0, [sp, #60]	; 0x3c
   1a718:	ldr	r0, [sp, #60]	; 0x3c
   1a71c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a720:	cmp	r0, r1
   1a724:	blt	1a760 <__assert_fail@plt+0x92cc>
   1a728:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a72c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a730:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a734:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a738:	movw	ip, #0
   1a73c:	str	r0, [sp, #32]
   1a740:	mov	r0, ip
   1a744:	ldr	ip, [sp, #32]
   1a748:	str	ip, [sp]
   1a74c:	sub	lr, fp, #68	; 0x44
   1a750:	str	lr, [sp, #4]
   1a754:	bl	1abf8 <__assert_fail@plt+0x9764>
   1a758:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a75c:	str	r0, [sp, #60]	; 0x3c
   1a760:	ldr	r0, [fp, #-8]
   1a764:	ldr	r0, [r0, #4]
   1a768:	cmp	r0, #0
   1a76c:	bge	1a800 <__assert_fail@plt+0x936c>
   1a770:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a774:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a778:	cmp	r0, r1
   1a77c:	ble	1a794 <__assert_fail@plt+0x9300>
   1a780:	sub	r0, fp, #40	; 0x28
   1a784:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a788:	bl	160ec <__assert_fail@plt+0x4c58>
   1a78c:	str	r0, [sp, #28]
   1a790:	b	1a79c <__assert_fail@plt+0x9308>
   1a794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a798:	str	r0, [sp, #28]
   1a79c:	ldr	r0, [sp, #28]
   1a7a0:	str	r0, [sp, #56]	; 0x38
   1a7a4:	ldr	r0, [sp, #56]	; 0x38
   1a7a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a7ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a7b0:	ldr	r3, [sp, #56]	; 0x38
   1a7b4:	ldr	ip, [sp, #60]	; 0x3c
   1a7b8:	str	ip, [sp]
   1a7bc:	bl	140d4 <__assert_fail@plt+0x2c40>
   1a7c0:	str	r0, [sp, #52]	; 0x34
   1a7c4:	ldr	r0, [sp, #52]	; 0x34
   1a7c8:	cmp	r0, #0
   1a7cc:	bne	1a7d4 <__assert_fail@plt+0x9340>
   1a7d0:	b	1a7f4 <__assert_fail@plt+0x9360>
   1a7d4:	movw	r0, #17493	; 0x4455
   1a7d8:	movt	r0, #4
   1a7dc:	movw	r1, #16512	; 0x4080
   1a7e0:	movt	r1, #4
   1a7e4:	movw	r2, #3145	; 0xc49
   1a7e8:	movw	r3, #17821	; 0x459d
   1a7ec:	movt	r3, #4
   1a7f0:	bl	11494 <__assert_fail@plt>
   1a7f4:	b	1a7f8 <__assert_fail@plt+0x9364>
   1a7f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a7fc:	str	r0, [sp, #60]	; 0x3c
   1a800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a804:	ldr	r1, [sp, #60]	; 0x3c
   1a808:	bl	13c4c <__assert_fail@plt+0x27b8>
   1a80c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a810:	sub	r0, fp, #28
   1a814:	movw	r1, #1
   1a818:	bl	162d4 <__assert_fail@plt+0x4e40>
   1a81c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a820:	mvn	r1, #0
   1a824:	add	r0, r0, r1
   1a828:	str	r0, [fp, #-44]	; 0xffffffd4
   1a82c:	cmp	r0, #0
   1a830:	blt	1a8fc <__assert_fail@plt+0x9468>
   1a834:	ldr	r0, [pc, #344]	; 1a994 <__assert_fail@plt+0x9500>
   1a838:	ldr	r1, [fp, #-12]
   1a83c:	ldr	r1, [r1, #8]
   1a840:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a844:	add	r1, r1, r2, lsl #2
   1a848:	ldr	r1, [r1]
   1a84c:	str	r1, [sp, #48]	; 0x30
   1a850:	str	r0, [sp, #44]	; 0x2c
   1a854:	sub	r0, fp, #28
   1a858:	str	r0, [sp, #24]
   1a85c:	ldr	r1, [sp, #24]
   1a860:	ldr	r2, [sp, #24]
   1a864:	bl	17cb4 <__assert_fail@plt+0x6820>
   1a868:	ldr	r0, [sp, #48]	; 0x30
   1a86c:	ldr	r1, [sp, #44]	; 0x2c
   1a870:	and	r0, r0, r1
   1a874:	cmp	r0, #0
   1a878:	beq	1a890 <__assert_fail@plt+0x93fc>
   1a87c:	sub	r2, fp, #40	; 0x28
   1a880:	sub	r0, fp, #28
   1a884:	str	r0, [sp, #20]
   1a888:	ldr	r1, [sp, #20]
   1a88c:	bl	17cb4 <__assert_fail@plt+0x6820>
   1a890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a894:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a898:	cmp	r0, r1
   1a89c:	ble	1a8e0 <__assert_fail@plt+0x944c>
   1a8a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a8a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a8a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a8ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a8b0:	movw	ip, #0
   1a8b4:	str	r0, [sp, #16]
   1a8b8:	mov	r0, ip
   1a8bc:	ldr	ip, [sp, #16]
   1a8c0:	str	ip, [sp]
   1a8c4:	sub	lr, fp, #68	; 0x44
   1a8c8:	str	lr, [sp, #4]
   1a8cc:	bl	1abf8 <__assert_fail@plt+0x9764>
   1a8d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a8d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a8d8:	bl	13c4c <__assert_fail@plt+0x27b8>
   1a8dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a8e0:	ldr	r0, [sp, #44]	; 0x2c
   1a8e4:	lsr	r0, r0, #1
   1a8e8:	str	r0, [sp, #44]	; 0x2c
   1a8ec:	ldr	r0, [sp, #44]	; 0x2c
   1a8f0:	cmp	r0, #0
   1a8f4:	bhi	1a854 <__assert_fail@plt+0x93c0>
   1a8f8:	b	1a81c <__assert_fail@plt+0x9388>
   1a8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a900:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a904:	cmp	r0, r1
   1a908:	blt	1a954 <__assert_fail@plt+0x94c0>
   1a90c:	ldr	r0, [sp, #72]	; 0x48
   1a910:	str	r0, [fp, #-68]	; 0xffffffbc
   1a914:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a918:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a91c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a920:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a924:	movw	ip, #0
   1a928:	str	r0, [sp, #12]
   1a92c:	mov	r0, ip
   1a930:	ldr	ip, [sp, #12]
   1a934:	str	ip, [sp]
   1a938:	sub	lr, fp, #68	; 0x44
   1a93c:	str	lr, [sp, #4]
   1a940:	bl	1abf8 <__assert_fail@plt+0x9764>
   1a944:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a948:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a94c:	bl	13c4c <__assert_fail@plt+0x27b8>
   1a950:	str	r0, [fp, #-24]	; 0xffffffe8
   1a954:	ldr	r0, [sp, #68]	; 0x44
   1a958:	movw	r1, #0
   1a95c:	cmp	r0, r1
   1a960:	beq	1a970 <__assert_fail@plt+0x94dc>
   1a964:	ldr	r0, [sp, #68]	; 0x44
   1a968:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a96c:	bl	15f80 <__assert_fail@plt+0x4aec>
   1a970:	sub	r1, fp, #28
   1a974:	ldr	r0, [fp, #-4]
   1a978:	bl	175bc <__assert_fail@plt+0x6128>
   1a97c:	sub	r0, fp, #28
   1a980:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a984:	sub	r0, fp, #40	; 0x28
   1a988:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1a98c:	mov	sp, fp
   1a990:	pop	{fp, pc}
   1a994:	andhi	r0, r0, r0
   1a998:	push	{fp, lr}
   1a99c:	mov	fp, sp
   1a9a0:	sub	sp, sp, #8
   1a9a4:	str	r0, [sp, #4]
   1a9a8:	movw	r0, #24968	; 0x6188
   1a9ac:	movt	r0, #5
   1a9b0:	ldr	r0, [r0]
   1a9b4:	ldr	r2, [sp, #4]
   1a9b8:	movw	r1, #22411	; 0x578b
   1a9bc:	movt	r1, #4
   1a9c0:	bl	113a4 <fprintf@plt>
   1a9c4:	str	r0, [sp]
   1a9c8:	bl	1147c <abort@plt>
   1a9cc:	push	{fp, lr}
   1a9d0:	mov	fp, sp
   1a9d4:	sub	sp, sp, #40	; 0x28
   1a9d8:	str	r0, [fp, #-4]
   1a9dc:	str	r1, [fp, #-8]
   1a9e0:	str	r2, [fp, #-12]
   1a9e4:	ldr	r0, [fp, #-12]
   1a9e8:	cmp	r0, #0
   1a9ec:	ble	1a9f4 <__assert_fail@plt+0x9560>
   1a9f0:	b	1aa14 <__assert_fail@plt+0x9580>
   1a9f4:	movw	r0, #19892	; 0x4db4
   1a9f8:	movt	r0, #4
   1a9fc:	movw	r1, #16512	; 0x4080
   1aa00:	movt	r1, #4
   1aa04:	movw	r2, #932	; 0x3a4
   1aa08:	movw	r3, #20181	; 0x4ed5
   1aa0c:	movt	r3, #4
   1aa10:	bl	11494 <__assert_fail@plt>
   1aa14:	ldr	r0, [fp, #-12]
   1aa18:	cmp	r0, #1
   1aa1c:	bne	1aa34 <__assert_fail@plt+0x95a0>
   1aa20:	ldr	r0, [fp, #-4]
   1aa24:	ldr	r1, [fp, #-8]
   1aa28:	ldr	r1, [r1]
   1aa2c:	bl	1da20 <__assert_fail@plt+0xc58c>
   1aa30:	b	1abf0 <__assert_fail@plt+0x975c>
   1aa34:	ldr	r0, [fp, #-12]
   1aa38:	cmp	r0, #2
   1aa3c:	bne	1aa5c <__assert_fail@plt+0x95c8>
   1aa40:	ldr	r0, [fp, #-4]
   1aa44:	ldr	r1, [fp, #-8]
   1aa48:	ldr	r1, [r1, #4]
   1aa4c:	ldr	r2, [fp, #-8]
   1aa50:	ldr	r2, [r2]
   1aa54:	bl	1f508 <__assert_fail@plt+0xe074>
   1aa58:	b	1abec <__assert_fail@plt+0x9758>
   1aa5c:	ldr	r0, [fp, #-8]
   1aa60:	ldr	r1, [fp, #-12]
   1aa64:	add	r0, r0, r1, lsl #2
   1aa68:	ldr	r0, [r0, #-4]
   1aa6c:	str	r0, [sp, #20]
   1aa70:	ldr	r0, [fp, #-8]
   1aa74:	ldr	r1, [fp, #-12]
   1aa78:	sub	r1, r1, #2
   1aa7c:	add	r0, r0, r1, lsl #2
   1aa80:	ldr	r0, [r0]
   1aa84:	str	r0, [sp, #16]
   1aa88:	ldr	r0, [sp, #20]
   1aa8c:	cmp	r0, #0
   1aa90:	bls	1aa98 <__assert_fail@plt+0x9604>
   1aa94:	b	1aab8 <__assert_fail@plt+0x9624>
   1aa98:	movw	r0, #20252	; 0x4f1c
   1aa9c:	movt	r0, #4
   1aaa0:	movw	r1, #16512	; 0x4080
   1aaa4:	movt	r1, #4
   1aaa8:	movw	r2, #945	; 0x3b1
   1aaac:	movw	r3, #20181	; 0x4ed5
   1aab0:	movt	r3, #4
   1aab4:	bl	11494 <__assert_fail@plt>
   1aab8:	b	1aabc <__assert_fail@plt+0x9628>
   1aabc:	ldr	r0, [sp, #20]
   1aac0:	str	r0, [sp, #12]
   1aac4:	movw	r0, #0
   1aac8:	str	r0, [sp, #8]
   1aacc:	movw	r0, #8
   1aad0:	str	r0, [sp, #4]
   1aad4:	ldr	r0, [sp, #4]
   1aad8:	movw	r1, #32
   1aadc:	cmp	r1, r0
   1aae0:	bls	1ab1c <__assert_fail@plt+0x9688>
   1aae4:	b	1aae8 <__assert_fail@plt+0x9654>
   1aae8:	ldr	r0, [sp, #12]
   1aaec:	and	r0, r0, #-16777216	; 0xff000000
   1aaf0:	cmp	r0, #0
   1aaf4:	bne	1ab18 <__assert_fail@plt+0x9684>
   1aaf8:	ldr	r0, [sp, #4]
   1aafc:	ldr	r1, [sp, #12]
   1ab00:	lsl	r0, r1, r0
   1ab04:	str	r0, [sp, #12]
   1ab08:	ldr	r0, [sp, #8]
   1ab0c:	add	r0, r0, #8
   1ab10:	str	r0, [sp, #8]
   1ab14:	b	1aae8 <__assert_fail@plt+0x9654>
   1ab18:	b	1ab1c <__assert_fail@plt+0x9688>
   1ab1c:	b	1ab20 <__assert_fail@plt+0x968c>
   1ab20:	ldr	r0, [sp, #12]
   1ab24:	and	r0, r0, #-2147483648	; 0x80000000
   1ab28:	cmp	r0, #0
   1ab2c:	bne	1ab4c <__assert_fail@plt+0x96b8>
   1ab30:	ldr	r0, [sp, #12]
   1ab34:	lsl	r0, r0, #1
   1ab38:	str	r0, [sp, #12]
   1ab3c:	ldr	r0, [sp, #8]
   1ab40:	add	r0, r0, #1
   1ab44:	str	r0, [sp, #8]
   1ab48:	b	1ab20 <__assert_fail@plt+0x968c>
   1ab4c:	ldr	r0, [sp, #8]
   1ab50:	str	r0, [fp, #-16]
   1ab54:	ldr	r0, [fp, #-16]
   1ab58:	ldr	r1, [fp, #-4]
   1ab5c:	str	r0, [r1]
   1ab60:	ldr	r0, [fp, #-16]
   1ab64:	cmp	r0, #0
   1ab68:	bls	1abc0 <__assert_fail@plt+0x972c>
   1ab6c:	ldr	r0, [sp, #20]
   1ab70:	ldr	r1, [fp, #-16]
   1ab74:	lsl	r0, r0, r1
   1ab78:	ldr	r2, [sp, #16]
   1ab7c:	rsb	r1, r1, #32
   1ab80:	orr	r0, r0, r2, lsr r1
   1ab84:	str	r0, [sp, #20]
   1ab88:	ldr	r0, [sp, #16]
   1ab8c:	ldr	r1, [fp, #-16]
   1ab90:	lsl	r0, r0, r1
   1ab94:	ldr	r1, [fp, #-8]
   1ab98:	ldr	r2, [fp, #-12]
   1ab9c:	sub	r2, r2, #3
   1aba0:	add	r1, r1, r2, lsl #2
   1aba4:	ldr	r1, [r1]
   1aba8:	ldr	r2, [fp, #-16]
   1abac:	movw	r3, #32
   1abb0:	sub	r2, r3, r2
   1abb4:	lsr	r1, r1, r2
   1abb8:	orr	r0, r0, r1
   1abbc:	str	r0, [sp, #16]
   1abc0:	ldr	r0, [sp, #20]
   1abc4:	ldr	r1, [fp, #-4]
   1abc8:	str	r0, [r1, #4]
   1abcc:	ldr	r0, [sp, #16]
   1abd0:	ldr	r1, [fp, #-4]
   1abd4:	str	r0, [r1, #8]
   1abd8:	ldr	r0, [sp, #20]
   1abdc:	ldr	r1, [sp, #16]
   1abe0:	bl	150f0 <__assert_fail@plt+0x3c5c>
   1abe4:	ldr	r1, [fp, #-4]
   1abe8:	str	r0, [r1, #12]
   1abec:	b	1abf0 <__assert_fail@plt+0x975c>
   1abf0:	mov	sp, fp
   1abf4:	pop	{fp, pc}
   1abf8:	push	{r4, sl, fp, lr}
   1abfc:	add	fp, sp, #8
   1ac00:	sub	sp, sp, #40	; 0x28
   1ac04:	ldr	ip, [fp, #12]
   1ac08:	ldr	lr, [fp, #8]
   1ac0c:	str	r0, [fp, #-12]
   1ac10:	str	r1, [fp, #-16]
   1ac14:	str	r2, [fp, #-20]	; 0xffffffec
   1ac18:	str	r3, [sp, #24]
   1ac1c:	ldr	r0, [fp, #8]
   1ac20:	cmp	r0, #0
   1ac24:	ble	1ac2c <__assert_fail@plt+0x9798>
   1ac28:	b	1ac4c <__assert_fail@plt+0x97b8>
   1ac2c:	movw	r0, #19892	; 0x4db4
   1ac30:	movt	r0, #4
   1ac34:	movw	r1, #16512	; 0x4080
   1ac38:	movt	r1, #4
   1ac3c:	movw	r2, #1113	; 0x459
   1ac40:	movw	r3, #20332	; 0x4f6c
   1ac44:	movt	r3, #4
   1ac48:	bl	11494 <__assert_fail@plt>
   1ac4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac50:	ldr	r1, [fp, #8]
   1ac54:	cmp	r0, r1
   1ac58:	blt	1ac60 <__assert_fail@plt+0x97cc>
   1ac5c:	b	1ac80 <__assert_fail@plt+0x97ec>
   1ac60:	movw	r0, #19964	; 0x4dfc
   1ac64:	movt	r0, #4
   1ac68:	movw	r1, #16512	; 0x4080
   1ac6c:	movt	r1, #4
   1ac70:	movw	r2, #1114	; 0x45a
   1ac74:	movw	r3, #20332	; 0x4f6c
   1ac78:	movt	r3, #4
   1ac7c:	bl	11494 <__assert_fail@plt>
   1ac80:	ldr	r0, [fp, #8]
   1ac84:	cmp	r0, #1
   1ac88:	bne	1acac <__assert_fail@plt+0x9818>
   1ac8c:	ldr	r0, [fp, #-12]
   1ac90:	ldr	r1, [fp, #-16]
   1ac94:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac98:	ldr	r3, [fp, #12]
   1ac9c:	bl	1db40 <__assert_fail@plt+0xc6ac>
   1aca0:	ldr	r1, [fp, #-16]
   1aca4:	str	r0, [r1]
   1aca8:	b	1ae6c <__assert_fail@plt+0x99d8>
   1acac:	ldr	r0, [fp, #8]
   1acb0:	cmp	r0, #2
   1acb4:	bne	1acd0 <__assert_fail@plt+0x983c>
   1acb8:	ldr	r0, [fp, #-12]
   1acbc:	ldr	r1, [fp, #-16]
   1acc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1acc4:	ldr	r3, [fp, #12]
   1acc8:	bl	1f670 <__assert_fail@plt+0xe1dc>
   1accc:	b	1ae68 <__assert_fail@plt+0x99d4>
   1acd0:	ldr	r0, [fp, #12]
   1acd4:	ldr	r0, [r0, #4]
   1acd8:	ldr	r1, [sp, #24]
   1acdc:	ldr	r2, [fp, #8]
   1ace0:	sub	r2, r2, #1
   1ace4:	add	r1, r1, r2, lsl #2
   1ace8:	ldr	r1, [r1]
   1acec:	cmp	r0, r1
   1acf0:	bne	1acf8 <__assert_fail@plt+0x9864>
   1acf4:	b	1ad18 <__assert_fail@plt+0x9884>
   1acf8:	movw	r0, #20436	; 0x4fd4
   1acfc:	movt	r0, #4
   1ad00:	movw	r1, #16512	; 0x4080
   1ad04:	movt	r1, #4
   1ad08:	movw	r2, #1125	; 0x465
   1ad0c:	movw	r3, #20332	; 0x4f6c
   1ad10:	movt	r3, #4
   1ad14:	bl	11494 <__assert_fail@plt>
   1ad18:	ldr	r0, [fp, #12]
   1ad1c:	ldr	r0, [r0, #8]
   1ad20:	ldr	r1, [sp, #24]
   1ad24:	ldr	r2, [fp, #8]
   1ad28:	sub	r2, r2, #2
   1ad2c:	add	r1, r1, r2, lsl #2
   1ad30:	ldr	r1, [r1]
   1ad34:	cmp	r0, r1
   1ad38:	bne	1ad40 <__assert_fail@plt+0x98ac>
   1ad3c:	b	1ad60 <__assert_fail@plt+0x98cc>
   1ad40:	movw	r0, #20456	; 0x4fe8
   1ad44:	movt	r0, #4
   1ad48:	movw	r1, #16512	; 0x4080
   1ad4c:	movt	r1, #4
   1ad50:	movw	r2, #1126	; 0x466
   1ad54:	movw	r3, #20332	; 0x4f6c
   1ad58:	movt	r3, #4
   1ad5c:	bl	11494 <__assert_fail@plt>
   1ad60:	ldr	r0, [fp, #12]
   1ad64:	ldr	r0, [r0, #4]
   1ad68:	and	r0, r0, #-2147483648	; 0x80000000
   1ad6c:	cmp	r0, #0
   1ad70:	beq	1ad78 <__assert_fail@plt+0x98e4>
   1ad74:	b	1ad98 <__assert_fail@plt+0x9904>
   1ad78:	movw	r0, #20476	; 0x4ffc
   1ad7c:	movt	r0, #4
   1ad80:	movw	r1, #16512	; 0x4080
   1ad84:	movt	r1, #4
   1ad88:	movw	r2, #1127	; 0x467
   1ad8c:	movw	r3, #20332	; 0x4f6c
   1ad90:	movt	r3, #4
   1ad94:	bl	11494 <__assert_fail@plt>
   1ad98:	ldr	r0, [fp, #12]
   1ad9c:	ldr	r0, [r0]
   1ada0:	str	r0, [sp, #16]
   1ada4:	ldr	r0, [sp, #16]
   1ada8:	cmp	r0, #0
   1adac:	bls	1adcc <__assert_fail@plt+0x9938>
   1adb0:	ldr	r0, [fp, #-16]
   1adb4:	ldr	r1, [fp, #-16]
   1adb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1adbc:	ldr	r3, [sp, #16]
   1adc0:	bl	149cc <__assert_fail@plt+0x3538>
   1adc4:	str	r0, [sp, #20]
   1adc8:	b	1add4 <__assert_fail@plt+0x9940>
   1adcc:	movw	r0, #0
   1add0:	str	r0, [sp, #20]
   1add4:	ldr	r0, [fp, #-12]
   1add8:	ldr	r1, [fp, #-16]
   1addc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ade0:	ldr	r3, [sp, #20]
   1ade4:	ldr	ip, [sp, #24]
   1ade8:	ldr	lr, [fp, #8]
   1adec:	ldr	r4, [fp, #12]
   1adf0:	ldr	r4, [r4, #12]
   1adf4:	str	ip, [sp]
   1adf8:	str	lr, [sp, #4]
   1adfc:	str	r4, [sp, #8]
   1ae00:	bl	1fc4c <__assert_fail@plt+0xe7b8>
   1ae04:	ldr	r0, [sp, #16]
   1ae08:	cmp	r0, #0
   1ae0c:	bls	1ae64 <__assert_fail@plt+0x99d0>
   1ae10:	b	1ae14 <__assert_fail@plt+0x9980>
   1ae14:	ldr	r0, [fp, #-16]
   1ae18:	ldr	r1, [fp, #-16]
   1ae1c:	ldr	r2, [fp, #8]
   1ae20:	ldr	r3, [sp, #16]
   1ae24:	bl	14b7c <__assert_fail@plt+0x36e8>
   1ae28:	str	r0, [sp, #12]
   1ae2c:	ldr	r0, [sp, #12]
   1ae30:	cmp	r0, #0
   1ae34:	bne	1ae3c <__assert_fail@plt+0x99a8>
   1ae38:	b	1ae5c <__assert_fail@plt+0x99c8>
   1ae3c:	movw	r0, #17493	; 0x4455
   1ae40:	movt	r0, #4
   1ae44:	movw	r1, #16512	; 0x4080
   1ae48:	movt	r1, #4
   1ae4c:	movw	r2, #1138	; 0x472
   1ae50:	movw	r3, #20332	; 0x4f6c
   1ae54:	movt	r3, #4
   1ae58:	bl	11494 <__assert_fail@plt>
   1ae5c:	b	1ae60 <__assert_fail@plt+0x99cc>
   1ae60:	b	1ae64 <__assert_fail@plt+0x99d0>
   1ae64:	b	1ae68 <__assert_fail@plt+0x99d4>
   1ae68:	b	1ae6c <__assert_fail@plt+0x99d8>
   1ae6c:	sub	sp, fp, #8
   1ae70:	pop	{r4, sl, fp, pc}
   1ae74:	push	{fp, lr}
   1ae78:	mov	fp, sp
   1ae7c:	sub	sp, sp, #32
   1ae80:	add	ip, sp, #4
   1ae84:	str	r0, [fp, #-4]
   1ae88:	str	r1, [fp, #-8]
   1ae8c:	str	r2, [fp, #-12]
   1ae90:	str	r3, [sp, #16]
   1ae94:	ldr	r1, [fp, #-12]
   1ae98:	mov	r0, ip
   1ae9c:	bl	162d4 <__assert_fail@plt+0x4e40>
   1aea0:	add	r2, sp, #4
   1aea4:	ldr	r0, [fp, #-4]
   1aea8:	ldr	r1, [fp, #-8]
   1aeac:	ldr	r3, [sp, #16]
   1aeb0:	bl	1a55c <__assert_fail@plt+0x90c8>
   1aeb4:	add	r0, sp, #4
   1aeb8:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1aebc:	mov	sp, fp
   1aec0:	pop	{fp, pc}
   1aec4:	push	{fp, lr}
   1aec8:	mov	fp, sp
   1aecc:	sub	sp, sp, #88	; 0x58
   1aed0:	str	r0, [fp, #-4]
   1aed4:	str	r1, [fp, #-8]
   1aed8:	str	r2, [fp, #-12]
   1aedc:	str	r3, [fp, #-16]
   1aee0:	ldr	r0, [fp, #-12]
   1aee4:	ldr	r0, [r0, #4]
   1aee8:	cmp	r0, #0
   1aeec:	movw	r0, #0
   1aef0:	movlt	r0, #1
   1aef4:	and	r0, r0, #1
   1aef8:	str	r0, [fp, #-20]	; 0xffffffec
   1aefc:	ldr	r0, [fp, #-16]
   1af00:	mvn	r1, #0
   1af04:	eor	r0, r0, r1
   1af08:	ldr	r1, [fp, #-20]	; 0xffffffec
   1af0c:	and	r0, r0, r1
   1af10:	cmp	r0, #0
   1af14:	beq	1af24 <__assert_fail@plt+0x9a90>
   1af18:	movw	r0, #17970	; 0x4632
   1af1c:	movt	r0, #4
   1af20:	bl	1a998 <__assert_fail@plt+0x9504>
   1af24:	ldr	r0, [fp, #-16]
   1af28:	cmp	r0, #0
   1af2c:	bne	1af3c <__assert_fail@plt+0x9aa8>
   1af30:	movw	r0, #18018	; 0x4662
   1af34:	movt	r0, #4
   1af38:	bl	1a998 <__assert_fail@plt+0x9504>
   1af3c:	ldr	r0, [fp, #-12]
   1af40:	movw	r1, #1
   1af44:	bl	165c0 <__assert_fail@plt+0x512c>
   1af48:	cmp	r0, #0
   1af4c:	bgt	1af8c <__assert_fail@plt+0x9af8>
   1af50:	ldr	r0, [fp, #-4]
   1af54:	movw	r1, #0
   1af58:	cmp	r0, r1
   1af5c:	beq	1af6c <__assert_fail@plt+0x9ad8>
   1af60:	ldr	r0, [fp, #-4]
   1af64:	ldr	r1, [fp, #-12]
   1af68:	bl	161dc <__assert_fail@plt+0x4d48>
   1af6c:	ldr	r0, [fp, #-8]
   1af70:	movw	r1, #0
   1af74:	cmp	r0, r1
   1af78:	beq	1af88 <__assert_fail@plt+0x9af4>
   1af7c:	ldr	r0, [fp, #-8]
   1af80:	movw	r1, #0
   1af84:	str	r1, [r0, #4]
   1af88:	b	1b150 <__assert_fail@plt+0x9cbc>
   1af8c:	add	r0, sp, #40	; 0x28
   1af90:	bl	15e6c <__assert_fail@plt+0x49d8>
   1af94:	sub	r0, fp, #36	; 0x24
   1af98:	bl	15e6c <__assert_fail@plt+0x49d8>
   1af9c:	ldr	r0, [fp, #-12]
   1afa0:	movw	r1, #2
   1afa4:	bl	1b158 <__assert_fail@plt+0x9cc4>
   1afa8:	sub	r1, fp, #36	; 0x24
   1afac:	sub	r0, r0, #1
   1afb0:	ldr	r2, [fp, #-16]
   1afb4:	udiv	r0, r0, r2
   1afb8:	add	r0, r0, #1
   1afbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1afc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afc4:	str	r0, [sp, #24]
   1afc8:	mov	r0, r1
   1afcc:	ldr	r1, [sp, #24]
   1afd0:	bl	1a1c4 <__assert_fail@plt+0x8d30>
   1afd4:	ldr	r0, [fp, #-16]
   1afd8:	cmp	r0, #2
   1afdc:	bne	1b040 <__assert_fail@plt+0x9bac>
   1afe0:	b	1afe4 <__assert_fail@plt+0x9b50>
   1afe4:	sub	r1, fp, #36	; 0x24
   1afe8:	add	r0, sp, #40	; 0x28
   1afec:	bl	175bc <__assert_fail@plt+0x6128>
   1aff0:	add	r2, sp, #40	; 0x28
   1aff4:	sub	r0, fp, #36	; 0x24
   1aff8:	ldr	r1, [fp, #-12]
   1affc:	bl	18788 <__assert_fail@plt+0x72f4>
   1b000:	add	r2, sp, #40	; 0x28
   1b004:	sub	r0, fp, #36	; 0x24
   1b008:	str	r0, [sp, #20]
   1b00c:	ldr	r1, [sp, #20]
   1b010:	bl	17698 <__assert_fail@plt+0x6204>
   1b014:	sub	r0, fp, #36	; 0x24
   1b018:	str	r0, [sp, #16]
   1b01c:	ldr	r1, [sp, #16]
   1b020:	movw	r2, #1
   1b024:	bl	18b98 <__assert_fail@plt+0x7704>
   1b028:	add	r1, sp, #40	; 0x28
   1b02c:	sub	r0, fp, #36	; 0x24
   1b030:	bl	173dc <__assert_fail@plt+0x5f48>
   1b034:	cmp	r0, #0
   1b038:	blt	1afe4 <__assert_fail@plt+0x9b50>
   1b03c:	b	1b0f4 <__assert_fail@plt+0x9c60>
   1b040:	add	r0, sp, #28
   1b044:	bl	15e6c <__assert_fail@plt+0x49d8>
   1b048:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b04c:	cmp	r0, #0
   1b050:	beq	1b064 <__assert_fail@plt+0x9bd0>
   1b054:	sub	r0, fp, #36	; 0x24
   1b058:	str	r0, [sp, #12]
   1b05c:	ldr	r1, [sp, #12]
   1b060:	bl	1757c <__assert_fail@plt+0x60e8>
   1b064:	b	1b068 <__assert_fail@plt+0x9bd4>
   1b068:	sub	r1, fp, #36	; 0x24
   1b06c:	add	r0, sp, #40	; 0x28
   1b070:	bl	175bc <__assert_fail@plt+0x6128>
   1b074:	add	r1, sp, #40	; 0x28
   1b078:	sub	r0, fp, #36	; 0x24
   1b07c:	ldr	r2, [fp, #-16]
   1b080:	sub	r2, r2, #1
   1b084:	bl	1a470 <__assert_fail@plt+0x8fdc>
   1b088:	sub	r0, fp, #36	; 0x24
   1b08c:	ldr	r1, [fp, #-12]
   1b090:	str	r0, [sp, #8]
   1b094:	ldr	r2, [sp, #8]
   1b098:	bl	18788 <__assert_fail@plt+0x72f4>
   1b09c:	add	r1, sp, #40	; 0x28
   1b0a0:	add	r0, sp, #28
   1b0a4:	ldr	r2, [fp, #-16]
   1b0a8:	sub	r2, r2, #1
   1b0ac:	bl	17c6c <__assert_fail@plt+0x67d8>
   1b0b0:	add	r2, sp, #28
   1b0b4:	sub	r0, fp, #36	; 0x24
   1b0b8:	str	r0, [sp, #4]
   1b0bc:	ldr	r1, [sp, #4]
   1b0c0:	bl	17698 <__assert_fail@plt+0x6204>
   1b0c4:	sub	r0, fp, #36	; 0x24
   1b0c8:	ldr	r2, [fp, #-16]
   1b0cc:	str	r0, [sp]
   1b0d0:	ldr	r1, [sp]
   1b0d4:	bl	192fc <__assert_fail@plt+0x7e68>
   1b0d8:	add	r1, sp, #40	; 0x28
   1b0dc:	sub	r0, fp, #36	; 0x24
   1b0e0:	bl	173dc <__assert_fail@plt+0x5f48>
   1b0e4:	cmp	r0, #0
   1b0e8:	blt	1b068 <__assert_fail@plt+0x9bd4>
   1b0ec:	add	r0, sp, #28
   1b0f0:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b0f4:	ldr	r0, [fp, #-8]
   1b0f8:	movw	r1, #0
   1b0fc:	cmp	r0, r1
   1b100:	beq	1b124 <__assert_fail@plt+0x9c90>
   1b104:	add	r1, sp, #40	; 0x28
   1b108:	sub	r0, fp, #36	; 0x24
   1b10c:	ldr	r2, [fp, #-16]
   1b110:	bl	1a470 <__assert_fail@plt+0x8fdc>
   1b114:	sub	r2, fp, #36	; 0x24
   1b118:	ldr	r0, [fp, #-8]
   1b11c:	ldr	r1, [fp, #-12]
   1b120:	bl	17b60 <__assert_fail@plt+0x66cc>
   1b124:	ldr	r0, [fp, #-4]
   1b128:	movw	r1, #0
   1b12c:	cmp	r0, r1
   1b130:	beq	1b140 <__assert_fail@plt+0x9cac>
   1b134:	add	r1, sp, #40	; 0x28
   1b138:	ldr	r0, [fp, #-4]
   1b13c:	bl	175bc <__assert_fail@plt+0x6128>
   1b140:	add	r0, sp, #40	; 0x28
   1b144:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b148:	sub	r0, fp, #36	; 0x24
   1b14c:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b150:	mov	sp, fp
   1b154:	pop	{fp, pc}
   1b158:	push	{fp, lr}
   1b15c:	mov	fp, sp
   1b160:	sub	sp, sp, #72	; 0x48
   1b164:	str	r0, [fp, #-8]
   1b168:	str	r1, [fp, #-12]
   1b16c:	ldr	r0, [fp, #-12]
   1b170:	cmp	r0, #2
   1b174:	blt	1b17c <__assert_fail@plt+0x9ce8>
   1b178:	b	1b19c <__assert_fail@plt+0x9d08>
   1b17c:	movw	r0, #18564	; 0x4884
   1b180:	movt	r0, #4
   1b184:	movw	r1, #16512	; 0x4080
   1b188:	movt	r1, #4
   1b18c:	movw	r2, #4191	; 0x105f
   1b190:	movw	r3, #18574	; 0x488e
   1b194:	movt	r3, #4
   1b198:	bl	11494 <__assert_fail@plt>
   1b19c:	ldr	r0, [fp, #-12]
   1b1a0:	cmp	r0, #62	; 0x3e
   1b1a4:	bgt	1b1ac <__assert_fail@plt+0x9d18>
   1b1a8:	b	1b1cc <__assert_fail@plt+0x9d38>
   1b1ac:	movw	r0, #18623	; 0x48bf
   1b1b0:	movt	r0, #4
   1b1b4:	movw	r1, #16512	; 0x4080
   1b1b8:	movt	r1, #4
   1b1bc:	movw	r2, #4192	; 0x1060
   1b1c0:	movw	r3, #18574	; 0x488e
   1b1c4:	movt	r3, #4
   1b1c8:	bl	11494 <__assert_fail@plt>
   1b1cc:	ldr	r0, [fp, #-8]
   1b1d0:	ldr	r0, [r0, #4]
   1b1d4:	cmp	r0, #0
   1b1d8:	blt	1b1ec <__assert_fail@plt+0x9d58>
   1b1dc:	ldr	r0, [fp, #-8]
   1b1e0:	ldr	r0, [r0, #4]
   1b1e4:	str	r0, [sp, #16]
   1b1e8:	b	1b200 <__assert_fail@plt+0x9d6c>
   1b1ec:	ldr	r0, [fp, #-8]
   1b1f0:	ldr	r0, [r0, #4]
   1b1f4:	movw	r1, #0
   1b1f8:	sub	r0, r1, r0
   1b1fc:	str	r0, [sp, #16]
   1b200:	ldr	r0, [sp, #16]
   1b204:	str	r0, [fp, #-16]
   1b208:	ldr	r0, [fp, #-16]
   1b20c:	cmp	r0, #0
   1b210:	bne	1b220 <__assert_fail@plt+0x9d8c>
   1b214:	movw	r0, #1
   1b218:	str	r0, [fp, #-4]
   1b21c:	b	1b404 <__assert_fail@plt+0x9f70>
   1b220:	ldr	r0, [fp, #-8]
   1b224:	ldr	r0, [r0, #8]
   1b228:	str	r0, [fp, #-24]	; 0xffffffe8
   1b22c:	ldr	r0, [fp, #-16]
   1b230:	sub	r0, r0, #1
   1b234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b238:	ldr	r1, [r1, r0, lsl #2]
   1b23c:	str	r0, [sp, #12]
   1b240:	mov	r0, r1
   1b244:	bl	1d930 <__assert_fail@plt+0xc49c>
   1b248:	ldr	r1, [sp, #12]
   1b24c:	add	r0, r0, r1, lsl #5
   1b250:	str	r0, [fp, #-32]	; 0xffffffe0
   1b254:	ldr	r0, [fp, #-12]
   1b258:	sub	r0, r0, #2
   1b25c:	cmp	r0, #30
   1b260:	str	r0, [sp, #8]
   1b264:	bhi	1b358 <__assert_fail@plt+0x9ec4>
   1b268:	add	r0, pc, #8
   1b26c:	ldr	r1, [sp, #8]
   1b270:	ldr	r0, [r0, r1, lsl #2]
   1b274:	mov	pc, r0
   1b278:	strdeq	fp, [r1], -r4
   1b27c:	andeq	fp, r1, r8, asr r3
   1b280:	andeq	fp, r1, r0, lsl #6
   1b284:	andeq	fp, r1, r8, asr r3
   1b288:	andeq	fp, r1, r8, asr r3
   1b28c:	andeq	fp, r1, r8, asr r3
   1b290:	andeq	fp, r1, r4, lsl r3
   1b294:	andeq	fp, r1, r8, asr r3
   1b298:	andeq	fp, r1, r8, asr r3
   1b29c:	andeq	fp, r1, r8, asr r3
   1b2a0:	andeq	fp, r1, r8, asr r3
   1b2a4:	andeq	fp, r1, r8, asr r3
   1b2a8:	andeq	fp, r1, r8, asr r3
   1b2ac:	andeq	fp, r1, r8, asr r3
   1b2b0:	andeq	fp, r1, ip, lsr #6
   1b2b4:	andeq	fp, r1, r8, asr r3
   1b2b8:	andeq	fp, r1, r8, asr r3
   1b2bc:	andeq	fp, r1, r8, asr r3
   1b2c0:	andeq	fp, r1, r8, asr r3
   1b2c4:	andeq	fp, r1, r8, asr r3
   1b2c8:	andeq	fp, r1, r8, asr r3
   1b2cc:	andeq	fp, r1, r8, asr r3
   1b2d0:	andeq	fp, r1, r8, asr r3
   1b2d4:	andeq	fp, r1, r8, asr r3
   1b2d8:	andeq	fp, r1, r8, asr r3
   1b2dc:	andeq	fp, r1, r8, asr r3
   1b2e0:	andeq	fp, r1, r8, asr r3
   1b2e4:	andeq	fp, r1, r8, asr r3
   1b2e8:	andeq	fp, r1, r8, asr r3
   1b2ec:	andeq	fp, r1, r8, asr r3
   1b2f0:	andeq	fp, r1, r0, asr #6
   1b2f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b2f8:	str	r0, [fp, #-4]
   1b2fc:	b	1b404 <__assert_fail@plt+0x9f70>
   1b300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b304:	add	r0, r0, #1
   1b308:	lsr	r0, r0, #1
   1b30c:	str	r0, [fp, #-4]
   1b310:	b	1b404 <__assert_fail@plt+0x9f70>
   1b314:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b318:	add	r0, r0, #2
   1b31c:	movw	r1, #3
   1b320:	udiv	r0, r0, r1
   1b324:	str	r0, [fp, #-4]
   1b328:	b	1b404 <__assert_fail@plt+0x9f70>
   1b32c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b330:	add	r0, r0, #3
   1b334:	lsr	r0, r0, #2
   1b338:	str	r0, [fp, #-4]
   1b33c:	b	1b404 <__assert_fail@plt+0x9f70>
   1b340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b344:	add	r0, r0, #4
   1b348:	movw	r1, #5
   1b34c:	udiv	r0, r0, r1
   1b350:	str	r0, [fp, #-4]
   1b354:	b	1b404 <__assert_fail@plt+0x9f70>
   1b358:	ldr	r0, [fp, #-16]
   1b35c:	bl	15f08 <__assert_fail@plt+0x4a74>
   1b360:	str	r0, [fp, #-28]	; 0xffffffe4
   1b364:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b36c:	ldr	r2, [fp, #-16]
   1b370:	bl	13ad8 <__assert_fail@plt+0x2644>
   1b374:	ldr	r1, [fp, #-12]
   1b378:	add	r0, sp, #24
   1b37c:	bl	1da20 <__assert_fail@plt+0xc58c>
   1b380:	ldr	r0, [fp, #-16]
   1b384:	str	r0, [fp, #-20]	; 0xffffffec
   1b388:	movw	r0, #0
   1b38c:	str	r0, [sp, #20]
   1b390:	ldr	r0, [sp, #20]
   1b394:	add	r0, r0, #1
   1b398:	str	r0, [sp, #20]
   1b39c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b3a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b3a4:	add	r3, sp, #24
   1b3a8:	str	r0, [sp, #4]
   1b3ac:	ldr	r1, [sp, #4]
   1b3b0:	bl	1db40 <__assert_fail@plt+0xc6ac>
   1b3b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b3b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b3bc:	sub	r2, r2, #1
   1b3c0:	add	r1, r1, r2, lsl #2
   1b3c4:	ldr	r1, [r1]
   1b3c8:	cmp	r1, #0
   1b3cc:	movw	r1, #0
   1b3d0:	moveq	r1, #1
   1b3d4:	and	r1, r1, #1
   1b3d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b3dc:	sub	r1, r2, r1
   1b3e0:	str	r1, [fp, #-20]	; 0xffffffec
   1b3e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b3e8:	cmp	r0, #0
   1b3ec:	bgt	1b390 <__assert_fail@plt+0x9efc>
   1b3f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b3f4:	ldr	r1, [fp, #-16]
   1b3f8:	bl	15f80 <__assert_fail@plt+0x4aec>
   1b3fc:	ldr	r0, [sp, #20]
   1b400:	str	r0, [fp, #-4]
   1b404:	ldr	r0, [fp, #-4]
   1b408:	mov	sp, fp
   1b40c:	pop	{fp, pc}
   1b410:	push	{fp, lr}
   1b414:	mov	fp, sp
   1b418:	sub	sp, sp, #32
   1b41c:	add	r3, sp, #4
   1b420:	str	r0, [fp, #-4]
   1b424:	str	r1, [fp, #-8]
   1b428:	str	r2, [fp, #-12]
   1b42c:	mov	r0, r3
   1b430:	bl	15e6c <__assert_fail@plt+0x49d8>
   1b434:	add	r1, sp, #4
   1b438:	ldr	r0, [fp, #-4]
   1b43c:	ldr	r2, [fp, #-8]
   1b440:	ldr	r3, [fp, #-12]
   1b444:	bl	1aec4 <__assert_fail@plt+0x9a30>
   1b448:	add	r0, sp, #4
   1b44c:	ldr	r1, [sp, #8]
   1b450:	cmp	r1, #0
   1b454:	movw	r1, #0
   1b458:	moveq	r1, #1
   1b45c:	and	r1, r1, #1
   1b460:	str	r1, [sp, #16]
   1b464:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b468:	ldr	r0, [sp, #16]
   1b46c:	mov	sp, fp
   1b470:	pop	{fp, pc}
   1b474:	push	{fp, lr}
   1b478:	mov	fp, sp
   1b47c:	sub	sp, sp, #16
   1b480:	str	r0, [fp, #-4]
   1b484:	str	r1, [sp, #8]
   1b488:	str	r2, [sp, #4]
   1b48c:	ldr	r0, [fp, #-4]
   1b490:	ldr	r1, [sp, #8]
   1b494:	ldr	r2, [sp, #4]
   1b498:	movw	r3, #2
   1b49c:	bl	1aec4 <__assert_fail@plt+0x9a30>
   1b4a0:	mov	sp, fp
   1b4a4:	pop	{fp, pc}
   1b4a8:	push	{fp, lr}
   1b4ac:	mov	fp, sp
   1b4b0:	sub	sp, sp, #8
   1b4b4:	str	r0, [sp, #4]
   1b4b8:	str	r1, [sp]
   1b4bc:	ldr	r0, [sp, #4]
   1b4c0:	ldr	r2, [sp]
   1b4c4:	movw	r1, #0
   1b4c8:	movw	r3, #2
   1b4cc:	bl	1aec4 <__assert_fail@plt+0x9a30>
   1b4d0:	mov	sp, fp
   1b4d4:	pop	{fp, pc}
   1b4d8:	push	{fp, lr}
   1b4dc:	mov	fp, sp
   1b4e0:	sub	sp, sp, #8
   1b4e4:	str	r0, [sp]
   1b4e8:	ldr	r0, [sp]
   1b4ec:	ldr	r0, [r0, #4]
   1b4f0:	cmp	r0, #0
   1b4f4:	bgt	1b518 <__assert_fail@plt+0xa084>
   1b4f8:	ldr	r0, [sp]
   1b4fc:	ldr	r0, [r0, #4]
   1b500:	cmp	r0, #0
   1b504:	movw	r0, #0
   1b508:	moveq	r0, #1
   1b50c:	and	r0, r0, #1
   1b510:	str	r0, [sp, #4]
   1b514:	b	1b52c <__assert_fail@plt+0xa098>
   1b518:	ldr	r1, [sp]
   1b51c:	movw	r0, #0
   1b520:	movw	r2, #2
   1b524:	bl	1b410 <__assert_fail@plt+0x9f7c>
   1b528:	str	r0, [sp, #4]
   1b52c:	ldr	r0, [sp, #4]
   1b530:	mov	sp, fp
   1b534:	pop	{fp, pc}
   1b538:	push	{fp, lr}
   1b53c:	mov	fp, sp
   1b540:	sub	sp, sp, #24
   1b544:	str	r0, [fp, #-4]
   1b548:	str	r1, [fp, #-8]
   1b54c:	ldr	r0, [fp, #-8]
   1b550:	cmp	r0, #0
   1b554:	ble	1b55c <__assert_fail@plt+0xa0c8>
   1b558:	b	1b57c <__assert_fail@plt+0xa0e8>
   1b55c:	movw	r0, #19893	; 0x4db5
   1b560:	movt	r0, #4
   1b564:	movw	r1, #16512	; 0x4080
   1b568:	movt	r1, #4
   1b56c:	movw	r2, #3302	; 0xce6
   1b570:	movw	r3, #18044	; 0x467c
   1b574:	movt	r3, #4
   1b578:	bl	11494 <__assert_fail@plt>
   1b57c:	ldr	r0, [fp, #-4]
   1b580:	ldr	r1, [fp, #-8]
   1b584:	sub	r1, r1, #1
   1b588:	add	r0, r0, r1, lsl #2
   1b58c:	ldr	r0, [r0]
   1b590:	cmp	r0, #0
   1b594:	beq	1b59c <__assert_fail@plt+0xa108>
   1b598:	b	1b5bc <__assert_fail@plt+0xa128>
   1b59c:	movw	r0, #18091	; 0x46ab
   1b5a0:	movt	r0, #4
   1b5a4:	movw	r1, #16512	; 0x4080
   1b5a8:	movt	r1, #4
   1b5ac:	movw	r2, #3303	; 0xce7
   1b5b0:	movw	r3, #18044	; 0x467c
   1b5b4:	movt	r3, #4
   1b5b8:	bl	11494 <__assert_fail@plt>
   1b5bc:	add	r0, sp, #4
   1b5c0:	ldr	r1, [fp, #-4]
   1b5c4:	ldr	r2, [fp, #-8]
   1b5c8:	bl	16abc <__assert_fail@plt+0x5628>
   1b5cc:	movw	r1, #0
   1b5d0:	str	r0, [sp]
   1b5d4:	mov	r0, r1
   1b5d8:	ldr	r1, [sp]
   1b5dc:	movw	r2, #2
   1b5e0:	bl	1b410 <__assert_fail@plt+0x9f7c>
   1b5e4:	mov	sp, fp
   1b5e8:	pop	{fp, pc}
   1b5ec:	push	{fp, lr}
   1b5f0:	mov	fp, sp
   1b5f4:	sub	sp, sp, #72	; 0x48
   1b5f8:	str	r0, [fp, #-4]
   1b5fc:	str	r1, [fp, #-8]
   1b600:	str	r2, [fp, #-12]
   1b604:	str	r3, [fp, #-16]
   1b608:	ldr	r0, [fp, #-16]
   1b60c:	cmp	r0, #0
   1b610:	ble	1b618 <__assert_fail@plt+0xa184>
   1b614:	b	1b638 <__assert_fail@plt+0xa1a4>
   1b618:	movw	r0, #19893	; 0x4db5
   1b61c:	movt	r0, #4
   1b620:	movw	r1, #16512	; 0x4080
   1b624:	movt	r1, #4
   1b628:	movw	r2, #3313	; 0xcf1
   1b62c:	movw	r3, #18104	; 0x46b8
   1b630:	movt	r3, #4
   1b634:	bl	11494 <__assert_fail@plt>
   1b638:	ldr	r0, [fp, #-12]
   1b63c:	ldr	r1, [fp, #-16]
   1b640:	sub	r1, r1, #1
   1b644:	add	r0, r0, r1, lsl #2
   1b648:	ldr	r0, [r0]
   1b64c:	cmp	r0, #0
   1b650:	beq	1b658 <__assert_fail@plt+0xa1c4>
   1b654:	b	1b678 <__assert_fail@plt+0xa1e4>
   1b658:	movw	r0, #18091	; 0x46ab
   1b65c:	movt	r0, #4
   1b660:	movw	r1, #16512	; 0x4080
   1b664:	movt	r1, #4
   1b668:	movw	r2, #3314	; 0xcf2
   1b66c:	movw	r3, #18104	; 0x46b8
   1b670:	movt	r3, #4
   1b674:	bl	11494 <__assert_fail@plt>
   1b678:	add	r0, sp, #32
   1b67c:	bl	15e6c <__assert_fail@plt+0x49d8>
   1b680:	sub	r0, fp, #28
   1b684:	bl	15e6c <__assert_fail@plt+0x49d8>
   1b688:	add	r0, sp, #20
   1b68c:	add	r1, sp, #32
   1b690:	sub	r2, fp, #28
   1b694:	ldr	r3, [fp, #-12]
   1b698:	ldr	ip, [fp, #-16]
   1b69c:	str	r1, [sp, #12]
   1b6a0:	mov	r1, r3
   1b6a4:	str	r2, [sp, #8]
   1b6a8:	mov	r2, ip
   1b6ac:	bl	16abc <__assert_fail@plt+0x5628>
   1b6b0:	ldr	r1, [sp, #8]
   1b6b4:	str	r0, [sp, #4]
   1b6b8:	mov	r0, r1
   1b6bc:	ldr	r1, [sp, #12]
   1b6c0:	ldr	r2, [sp, #4]
   1b6c4:	movw	r3, #2
   1b6c8:	bl	1aec4 <__assert_fail@plt+0x9a30>
   1b6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6d0:	ldr	r1, [fp, #-16]
   1b6d4:	add	r1, r1, #1
   1b6d8:	movw	r2, #2
   1b6dc:	sdiv	r1, r1, r2
   1b6e0:	cmp	r0, r1
   1b6e4:	bne	1b6ec <__assert_fail@plt+0xa258>
   1b6e8:	b	1b70c <__assert_fail@plt+0xa278>
   1b6ec:	movw	r0, #18164	; 0x46f4
   1b6f0:	movt	r0, #4
   1b6f4:	movw	r1, #16512	; 0x4080
   1b6f8:	movt	r1, #4
   1b6fc:	movw	r2, #3320	; 0xcf8
   1b700:	movw	r3, #18104	; 0x46b8
   1b704:	movt	r3, #4
   1b708:	bl	11494 <__assert_fail@plt>
   1b70c:	ldr	r0, [fp, #-4]
   1b710:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b718:	bl	13b30 <__assert_fail@plt+0x269c>
   1b71c:	sub	r0, fp, #28
   1b720:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b724:	ldr	r0, [sp, #36]	; 0x24
   1b728:	str	r0, [sp, #16]
   1b72c:	ldr	r0, [fp, #-8]
   1b730:	movw	r1, #0
   1b734:	cmp	r0, r1
   1b738:	beq	1b74c <__assert_fail@plt+0xa2b8>
   1b73c:	ldr	r0, [fp, #-8]
   1b740:	ldr	r1, [sp, #40]	; 0x28
   1b744:	ldr	r2, [sp, #16]
   1b748:	bl	13b30 <__assert_fail@plt+0x269c>
   1b74c:	add	r0, sp, #32
   1b750:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b754:	ldr	r0, [sp, #16]
   1b758:	mov	sp, fp
   1b75c:	pop	{fp, pc}
   1b760:	push	{fp, lr}
   1b764:	mov	fp, sp
   1b768:	sub	sp, sp, #16
   1b76c:	str	r0, [fp, #-4]
   1b770:	str	r1, [sp, #8]
   1b774:	str	r2, [sp, #4]
   1b778:	ldr	r0, [fp, #-4]
   1b77c:	ldr	r1, [sp, #8]
   1b780:	ldr	r2, [sp, #8]
   1b784:	cmp	r2, #0
   1b788:	movw	r2, #0
   1b78c:	moveq	r2, #1
   1b790:	and	r2, r2, #1
   1b794:	add	r1, r1, r2
   1b798:	bl	16064 <__assert_fail@plt+0x4bd0>
   1b79c:	ldr	r0, [sp, #4]
   1b7a0:	add	r0, r0, #1
   1b7a4:	cmp	r0, #2
   1b7a8:	bcs	1b7b0 <__assert_fail@plt+0xa31c>
   1b7ac:	b	1b7e8 <__assert_fail@plt+0xa354>
   1b7b0:	b	1b7b4 <__assert_fail@plt+0xa320>
   1b7b4:	ldr	r0, [sp, #8]
   1b7b8:	ldr	r1, [sp, #4]
   1b7bc:	add	r1, r1, #1
   1b7c0:	cmp	r0, r1
   1b7c4:	bls	1b7e8 <__assert_fail@plt+0xa354>
   1b7c8:	ldr	r0, [fp, #-4]
   1b7cc:	ldr	r1, [fp, #-4]
   1b7d0:	ldr	r2, [sp, #4]
   1b7d4:	ldr	r3, [sp, #8]
   1b7d8:	sub	r2, r3, r2
   1b7dc:	str	r2, [sp, #8]
   1b7e0:	bl	17c6c <__assert_fail@plt+0x67d8>
   1b7e4:	b	1b7b4 <__assert_fail@plt+0xa320>
   1b7e8:	mov	sp, fp
   1b7ec:	pop	{fp, pc}
   1b7f0:	push	{fp, lr}
   1b7f4:	mov	fp, sp
   1b7f8:	sub	sp, sp, #8
   1b7fc:	str	r0, [sp, #4]
   1b800:	str	r1, [sp]
   1b804:	ldr	r0, [sp, #4]
   1b808:	ldr	r1, [sp]
   1b80c:	movw	r2, #2
   1b810:	bl	1b760 <__assert_fail@plt+0xa2cc>
   1b814:	mov	sp, fp
   1b818:	pop	{fp, pc}
   1b81c:	push	{fp, lr}
   1b820:	mov	fp, sp
   1b824:	sub	sp, sp, #8
   1b828:	str	r0, [sp, #4]
   1b82c:	str	r1, [sp]
   1b830:	ldr	r0, [sp, #4]
   1b834:	ldr	r1, [sp]
   1b838:	movw	r2, #1
   1b83c:	bl	1b760 <__assert_fail@plt+0xa2cc>
   1b840:	mov	sp, fp
   1b844:	pop	{fp, pc}
   1b848:	push	{fp, lr}
   1b84c:	mov	fp, sp
   1b850:	sub	sp, sp, #32
   1b854:	str	r0, [fp, #-4]
   1b858:	str	r1, [fp, #-8]
   1b85c:	str	r2, [fp, #-12]
   1b860:	ldr	r0, [fp, #-4]
   1b864:	ldr	r1, [fp, #-12]
   1b868:	ldr	r2, [fp, #-8]
   1b86c:	cmp	r1, r2
   1b870:	movw	r1, #0
   1b874:	movls	r1, #1
   1b878:	and	r1, r1, #1
   1b87c:	bl	16064 <__assert_fail@plt+0x4bd0>
   1b880:	ldr	r0, [fp, #-12]
   1b884:	ldr	r1, [fp, #-8]
   1b888:	lsr	r1, r1, #1
   1b88c:	cmp	r0, r1
   1b890:	bls	1b8cc <__assert_fail@plt+0xa438>
   1b894:	ldr	r0, [fp, #-12]
   1b898:	ldr	r1, [fp, #-8]
   1b89c:	cmp	r0, r1
   1b8a0:	bhi	1b8b8 <__assert_fail@plt+0xa424>
   1b8a4:	ldr	r0, [fp, #-8]
   1b8a8:	ldr	r1, [fp, #-12]
   1b8ac:	sub	r0, r0, r1
   1b8b0:	str	r0, [sp, #4]
   1b8b4:	b	1b8c4 <__assert_fail@plt+0xa430>
   1b8b8:	movw	r0, #0
   1b8bc:	str	r0, [sp, #4]
   1b8c0:	b	1b8c4 <__assert_fail@plt+0xa430>
   1b8c4:	ldr	r0, [sp, #4]
   1b8c8:	str	r0, [fp, #-12]
   1b8cc:	add	r0, sp, #8
   1b8d0:	bl	15e6c <__assert_fail@plt+0x49d8>
   1b8d4:	add	r0, sp, #8
   1b8d8:	ldr	r1, [fp, #-12]
   1b8dc:	bl	1b81c <__assert_fail@plt+0xa388>
   1b8e0:	ldr	r0, [fp, #-12]
   1b8e4:	cmp	r0, #0
   1b8e8:	bls	1b91c <__assert_fail@plt+0xa488>
   1b8ec:	ldr	r0, [fp, #-4]
   1b8f0:	ldr	r1, [fp, #-4]
   1b8f4:	ldr	r2, [fp, #-8]
   1b8f8:	mvn	r3, #0
   1b8fc:	add	r3, r2, r3
   1b900:	str	r3, [fp, #-8]
   1b904:	bl	17c6c <__assert_fail@plt+0x67d8>
   1b908:	ldr	r0, [fp, #-12]
   1b90c:	mvn	r1, #0
   1b910:	add	r0, r0, r1
   1b914:	str	r0, [fp, #-12]
   1b918:	b	1b8e0 <__assert_fail@plt+0xa44c>
   1b91c:	add	r2, sp, #8
   1b920:	ldr	r0, [fp, #-4]
   1b924:	ldr	r1, [fp, #-4]
   1b928:	bl	18fc8 <__assert_fail@plt+0x7b34>
   1b92c:	add	r0, sp, #8
   1b930:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1b934:	mov	sp, fp
   1b938:	pop	{fp, pc}
   1b93c:	push	{fp, lr}
   1b940:	mov	fp, sp
   1b944:	sub	sp, sp, #72	; 0x48
   1b948:	str	r0, [fp, #-8]
   1b94c:	str	r1, [fp, #-12]
   1b950:	ldr	r0, [fp, #-8]
   1b954:	ldr	r0, [r0, #4]
   1b958:	cmp	r0, #0
   1b95c:	movw	r0, #0
   1b960:	movne	r0, #1
   1b964:	and	r0, r0, #1
   1b968:	ldr	r1, [fp, #-8]
   1b96c:	ldr	r1, [r1, #8]
   1b970:	ldr	r1, [r1]
   1b974:	and	r0, r0, r1
   1b978:	cmp	r0, #0
   1b97c:	bne	1b9ac <__assert_fail@plt+0xa518>
   1b980:	ldr	r0, [fp, #-8]
   1b984:	movw	r1, #2
   1b988:	bl	165c0 <__assert_fail@plt+0x512c>
   1b98c:	cmp	r0, #0
   1b990:	movw	r0, #0
   1b994:	moveq	r0, #1
   1b998:	tst	r0, #1
   1b99c:	movw	r0, #2
   1b9a0:	moveq	r0, #0
   1b9a4:	str	r0, [fp, #-4]
   1b9a8:	b	1bc08 <__assert_fail@plt+0xa774>
   1b9ac:	ldr	r0, [fp, #-8]
   1b9b0:	ldr	r0, [r0, #4]
   1b9b4:	cmp	r0, #0
   1b9b8:	beq	1b9c0 <__assert_fail@plt+0xa52c>
   1b9bc:	b	1b9e0 <__assert_fail@plt+0xa54c>
   1b9c0:	movw	r0, #18187	; 0x470b
   1b9c4:	movt	r0, #4
   1b9c8:	movw	r1, #16512	; 0x4080
   1b9cc:	movt	r1, #4
   1b9d0:	movw	r2, #3590	; 0xe06
   1b9d4:	movw	r3, #18204	; 0x471c
   1b9d8:	movt	r3, #4
   1b9dc:	bl	11494 <__assert_fail@plt>
   1b9e0:	ldr	r0, [fp, #-8]
   1b9e4:	movw	r1, #64	; 0x40
   1b9e8:	bl	165c0 <__assert_fail@plt+0x512c>
   1b9ec:	cmp	r0, #0
   1b9f0:	bge	1ba18 <__assert_fail@plt+0xa584>
   1b9f4:	ldr	r0, [pc, #540]	; 1bc18 <__assert_fail@plt+0xa784>
   1b9f8:	ldr	r1, [fp, #-8]
   1b9fc:	ldr	r1, [r1, #8]
   1ba00:	ldr	r1, [r1]
   1ba04:	lsr	r1, r1, #1
   1ba08:	lsr	r0, r0, r1
   1ba0c:	and	r0, r0, #2
   1ba10:	str	r0, [fp, #-4]
   1ba14:	b	1bc08 <__assert_fail@plt+0xa774>
   1ba18:	ldr	r2, [pc, #500]	; 1bc14 <__assert_fail@plt+0xa780>
   1ba1c:	ldr	r1, [fp, #-8]
   1ba20:	movw	r0, #0
   1ba24:	bl	195a4 <__assert_fail@plt+0x8110>
   1ba28:	cmp	r0, #1
   1ba2c:	beq	1ba3c <__assert_fail@plt+0xa5a8>
   1ba30:	movw	r0, #0
   1ba34:	str	r0, [fp, #-4]
   1ba38:	b	1bc08 <__assert_fail@plt+0xa774>
   1ba3c:	ldr	r0, [fp, #-8]
   1ba40:	movw	r1, #961	; 0x3c1
   1ba44:	bl	165c0 <__assert_fail@plt+0x512c>
   1ba48:	cmp	r0, #0
   1ba4c:	bge	1ba5c <__assert_fail@plt+0xa5c8>
   1ba50:	movw	r0, #2
   1ba54:	str	r0, [fp, #-4]
   1ba58:	b	1bc08 <__assert_fail@plt+0xa774>
   1ba5c:	sub	r0, fp, #24
   1ba60:	bl	15e6c <__assert_fail@plt+0x49d8>
   1ba64:	add	r0, sp, #36	; 0x24
   1ba68:	bl	15e6c <__assert_fail@plt+0x49d8>
   1ba6c:	sub	r0, fp, #24
   1ba70:	ldr	r1, [fp, #-8]
   1ba74:	bl	17514 <__assert_fail@plt+0x6080>
   1ba78:	ldr	r0, [fp, #-16]
   1ba7c:	ldr	r1, [r0]
   1ba80:	sub	r1, r1, #1
   1ba84:	str	r1, [r0]
   1ba88:	ldr	r0, [fp, #-16]
   1ba8c:	movw	r1, #0
   1ba90:	bl	14ce8 <__assert_fail@plt+0x3854>
   1ba94:	sub	r1, fp, #24
   1ba98:	add	r2, sp, #36	; 0x24
   1ba9c:	str	r0, [sp, #20]
   1baa0:	ldr	r0, [sp, #20]
   1baa4:	str	r0, [sp, #8]
   1baa8:	mov	r0, r2
   1baac:	ldr	r2, [sp, #8]
   1bab0:	bl	18b98 <__assert_fail@plt+0x7704>
   1bab4:	add	r0, sp, #24
   1bab8:	movw	r1, #2
   1babc:	bl	162d4 <__assert_fail@plt+0x4e40>
   1bac0:	add	r3, sp, #36	; 0x24
   1bac4:	add	r2, sp, #24
   1bac8:	sub	r1, fp, #24
   1bacc:	ldr	r0, [fp, #-8]
   1bad0:	ldr	ip, [sp, #20]
   1bad4:	str	ip, [sp]
   1bad8:	bl	1bc1c <__assert_fail@plt+0xa788>
   1badc:	cmp	r0, #0
   1bae0:	movw	r0, #0
   1bae4:	str	r0, [sp, #4]
   1bae8:	beq	1bb08 <__assert_fail@plt+0xa674>
   1baec:	add	r1, sp, #24
   1baf0:	ldr	r0, [fp, #-8]
   1baf4:	bl	1bd1c <__assert_fail@plt+0xa888>
   1baf8:	cmp	r0, #0
   1bafc:	movw	r0, #0
   1bb00:	movne	r0, #1
   1bb04:	str	r0, [sp, #4]
   1bb08:	ldr	r0, [sp, #4]
   1bb0c:	and	r0, r0, #1
   1bb10:	str	r0, [sp, #16]
   1bb14:	ldr	r0, [fp, #-12]
   1bb18:	sub	r0, r0, #24
   1bb1c:	str	r0, [fp, #-12]
   1bb20:	movw	r0, #0
   1bb24:	str	r0, [sp, #12]
   1bb28:	ldr	r0, [sp, #16]
   1bb2c:	ldr	r1, [sp, #12]
   1bb30:	ldr	r2, [fp, #-12]
   1bb34:	cmp	r1, r2
   1bb38:	movw	r1, #0
   1bb3c:	movlt	r1, #1
   1bb40:	and	r1, r1, #1
   1bb44:	and	r0, r0, r1
   1bb48:	cmp	r0, #0
   1bb4c:	beq	1bbe8 <__assert_fail@plt+0xa754>
   1bb50:	add	r0, sp, #24
   1bb54:	ldr	r1, [sp, #12]
   1bb58:	ldr	r2, [sp, #12]
   1bb5c:	mul	r1, r1, r2
   1bb60:	ldr	r2, [sp, #12]
   1bb64:	add	r1, r1, r2
   1bb68:	add	r1, r1, #41	; 0x29
   1bb6c:	bl	16064 <__assert_fail@plt+0x4bd0>
   1bb70:	sub	r1, fp, #24
   1bb74:	add	r0, sp, #24
   1bb78:	bl	1731c <__assert_fail@plt+0x5e88>
   1bb7c:	cmp	r0, #0
   1bb80:	blt	1bbb8 <__assert_fail@plt+0xa724>
   1bb84:	ldr	r0, [sp, #12]
   1bb88:	cmp	r0, #30
   1bb8c:	blt	1bb94 <__assert_fail@plt+0xa700>
   1bb90:	b	1bbb4 <__assert_fail@plt+0xa720>
   1bb94:	movw	r0, #18254	; 0x474e
   1bb98:	movt	r0, #4
   1bb9c:	movw	r1, #16512	; 0x4080
   1bba0:	movt	r1, #4
   1bba4:	movw	r2, #3629	; 0xe2d
   1bba8:	movw	r3, #18204	; 0x471c
   1bbac:	movt	r3, #4
   1bbb0:	bl	11494 <__assert_fail@plt>
   1bbb4:	b	1bbe8 <__assert_fail@plt+0xa754>
   1bbb8:	add	r3, sp, #36	; 0x24
   1bbbc:	add	r2, sp, #24
   1bbc0:	sub	r1, fp, #24
   1bbc4:	ldr	r0, [fp, #-8]
   1bbc8:	ldr	ip, [sp, #20]
   1bbcc:	str	ip, [sp]
   1bbd0:	bl	1bc1c <__assert_fail@plt+0xa788>
   1bbd4:	str	r0, [sp, #16]
   1bbd8:	ldr	r0, [sp, #12]
   1bbdc:	add	r0, r0, #1
   1bbe0:	str	r0, [sp, #12]
   1bbe4:	b	1bb28 <__assert_fail@plt+0xa694>
   1bbe8:	sub	r0, fp, #24
   1bbec:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1bbf0:	add	r0, sp, #36	; 0x24
   1bbf4:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1bbf8:	add	r0, sp, #24
   1bbfc:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1bc00:	ldr	r0, [sp, #16]
   1bc04:	str	r0, [fp, #-4]
   1bc08:	ldr	r0, [fp, #-4]
   1bc0c:	mov	sp, fp
   1bc10:	pop	{fp, pc}
   1bc14:	smullgt	sp, pc, r7, r7	; <UNPREDICTABLE>
   1bc18:	stmdbgt	r9!, {r2, r3, r4, r6, r7, r9, sl, ip, pc}^
   1bc1c:	push	{fp, lr}
   1bc20:	mov	fp, sp
   1bc24:	sub	sp, sp, #24
   1bc28:	ldr	ip, [fp, #8]
   1bc2c:	str	r0, [fp, #-8]
   1bc30:	str	r1, [sp, #12]
   1bc34:	str	r2, [sp, #8]
   1bc38:	str	r3, [sp, #4]
   1bc3c:	ldr	r0, [fp, #8]
   1bc40:	cmp	r0, #0
   1bc44:	bls	1bc4c <__assert_fail@plt+0xa7b8>
   1bc48:	b	1bc6c <__assert_fail@plt+0xa7d8>
   1bc4c:	movw	r0, #20783	; 0x512f
   1bc50:	movt	r0, #4
   1bc54:	movw	r1, #16512	; 0x4080
   1bc58:	movt	r1, #4
   1bc5c:	movw	r2, #3550	; 0xdde
   1bc60:	movw	r3, #20789	; 0x5135
   1bc64:	movt	r3, #4
   1bc68:	bl	11494 <__assert_fail@plt>
   1bc6c:	ldr	r0, [sp, #8]
   1bc70:	ldr	r1, [sp, #8]
   1bc74:	ldr	r2, [sp, #4]
   1bc78:	ldr	r3, [fp, #-8]
   1bc7c:	bl	1a55c <__assert_fail@plt+0x90c8>
   1bc80:	ldr	r0, [sp, #8]
   1bc84:	movw	r1, #1
   1bc88:	bl	172c8 <__assert_fail@plt+0x5e34>
   1bc8c:	cmp	r0, #0
   1bc90:	beq	1bca8 <__assert_fail@plt+0xa814>
   1bc94:	ldr	r0, [sp, #8]
   1bc98:	ldr	r1, [sp, #12]
   1bc9c:	bl	1731c <__assert_fail@plt+0x5e88>
   1bca0:	cmp	r0, #0
   1bca4:	bne	1bcb4 <__assert_fail@plt+0xa820>
   1bca8:	movw	r0, #1
   1bcac:	str	r0, [fp, #-4]
   1bcb0:	b	1bd10 <__assert_fail@plt+0xa87c>
   1bcb4:	b	1bcb8 <__assert_fail@plt+0xa824>
   1bcb8:	ldr	r0, [fp, #8]
   1bcbc:	mvn	r1, #0
   1bcc0:	add	r0, r0, r1
   1bcc4:	str	r0, [fp, #8]
   1bcc8:	cmp	r0, #0
   1bccc:	bls	1bd08 <__assert_fail@plt+0xa874>
   1bcd0:	ldr	r0, [sp, #8]
   1bcd4:	ldr	r1, [sp, #8]
   1bcd8:	ldr	r3, [fp, #-8]
   1bcdc:	movw	r2, #2
   1bce0:	bl	1ae74 <__assert_fail@plt+0x99e0>
   1bce4:	ldr	r0, [sp, #8]
   1bce8:	ldr	r1, [sp, #12]
   1bcec:	bl	1731c <__assert_fail@plt+0x5e88>
   1bcf0:	cmp	r0, #0
   1bcf4:	bne	1bd04 <__assert_fail@plt+0xa870>
   1bcf8:	movw	r0, #1
   1bcfc:	str	r0, [fp, #-4]
   1bd00:	b	1bd10 <__assert_fail@plt+0xa87c>
   1bd04:	b	1bcb8 <__assert_fail@plt+0xa824>
   1bd08:	movw	r0, #0
   1bd0c:	str	r0, [fp, #-4]
   1bd10:	ldr	r0, [fp, #-4]
   1bd14:	mov	sp, fp
   1bd18:	pop	{fp, pc}
   1bd1c:	push	{fp, lr}
   1bd20:	mov	fp, sp
   1bd24:	sub	sp, sp, #104	; 0x68
   1bd28:	sub	r2, fp, #40	; 0x28
   1bd2c:	str	r0, [fp, #-8]
   1bd30:	str	r1, [fp, #-12]
   1bd34:	ldr	r0, [fp, #-8]
   1bd38:	ldr	r1, [r0, #8]
   1bd3c:	ldr	r0, [fp, #-8]
   1bd40:	ldr	r0, [r0, #4]
   1bd44:	cmp	r0, #0
   1bd48:	str	r2, [sp, #44]	; 0x2c
   1bd4c:	str	r1, [sp, #40]	; 0x28
   1bd50:	blt	1bd64 <__assert_fail@plt+0xa8d0>
   1bd54:	ldr	r0, [fp, #-8]
   1bd58:	ldr	r0, [r0, #4]
   1bd5c:	str	r0, [sp, #36]	; 0x24
   1bd60:	b	1bd78 <__assert_fail@plt+0xa8e4>
   1bd64:	ldr	r0, [fp, #-8]
   1bd68:	ldr	r0, [r0, #4]
   1bd6c:	movw	r1, #0
   1bd70:	sub	r0, r1, r0
   1bd74:	str	r0, [sp, #36]	; 0x24
   1bd78:	ldr	r0, [sp, #36]	; 0x24
   1bd7c:	ldr	r1, [sp, #44]	; 0x2c
   1bd80:	str	r0, [sp, #32]
   1bd84:	mov	r0, r1
   1bd88:	ldr	r1, [sp, #40]	; 0x28
   1bd8c:	ldr	r2, [sp, #32]
   1bd90:	bl	16abc <__assert_fail@plt+0x5628>
   1bd94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bd98:	cmp	r1, #0
   1bd9c:	movw	r1, #0
   1bda0:	movne	r1, #1
   1bda4:	and	r1, r1, #1
   1bda8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bdac:	ldr	r2, [r2]
   1bdb0:	and	r1, r1, r2
   1bdb4:	cmp	r1, #0
   1bdb8:	beq	1bdc0 <__assert_fail@plt+0xa92c>
   1bdbc:	b	1bde0 <__assert_fail@plt+0xa94c>
   1bdc0:	movw	r0, #20904	; 0x51a8
   1bdc4:	movt	r0, #4
   1bdc8:	movw	r1, #16512	; 0x4080
   1bdcc:	movt	r1, #4
   1bdd0:	movw	r2, #3504	; 0xdb0
   1bdd4:	movw	r3, #20918	; 0x51b6
   1bdd8:	movt	r3, #4
   1bddc:	bl	11494 <__assert_fail@plt>
   1bde0:	sub	r1, fp, #40	; 0x28
   1bde4:	ldr	r0, [fp, #-12]
   1bde8:	movw	r2, #2
   1bdec:	bl	1b410 <__assert_fail@plt+0x9f7c>
   1bdf0:	cmp	r0, #0
   1bdf4:	beq	1be04 <__assert_fail@plt+0xa970>
   1bdf8:	movw	r0, #0
   1bdfc:	str	r0, [fp, #-4]
   1be00:	b	1c000 <__assert_fail@plt+0xab6c>
   1be04:	ldr	r0, [fp, #-12]
   1be08:	ldr	r0, [r0, #4]
   1be0c:	cmp	r0, #1
   1be10:	bne	1be2c <__assert_fail@plt+0xa998>
   1be14:	ldr	r0, [fp, #-12]
   1be18:	ldr	r0, [r0, #8]
   1be1c:	ldr	r0, [r0]
   1be20:	sub	r0, r0, #1
   1be24:	str	r0, [sp, #28]
   1be28:	b	1be38 <__assert_fail@plt+0xa9a4>
   1be2c:	mvn	r0, #0
   1be30:	str	r0, [sp, #28]
   1be34:	b	1be38 <__assert_fail@plt+0xa9a4>
   1be38:	ldr	r0, [sp, #28]
   1be3c:	str	r0, [fp, #-44]	; 0xffffffd4
   1be40:	movw	r0, #3
   1be44:	str	r0, [fp, #-48]	; 0xffffffd0
   1be48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1be50:	cmp	r0, r1
   1be54:	bcc	1be78 <__assert_fail@plt+0xa9e4>
   1be58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be5c:	cmn	r0, #1
   1be60:	movw	r0, #0
   1be64:	movne	r0, #1
   1be68:	and	r0, r0, #1
   1be6c:	add	r0, r0, #1
   1be70:	str	r0, [fp, #-4]
   1be74:	b	1c000 <__assert_fail@plt+0xab6c>
   1be78:	sub	r0, fp, #40	; 0x28
   1be7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1be80:	add	r1, r1, #2
   1be84:	str	r1, [fp, #-48]	; 0xffffffd0
   1be88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1be8c:	bl	19468 <__assert_fail@plt+0x7fd4>
   1be90:	str	r0, [sp, #48]	; 0x30
   1be94:	ldr	r0, [sp, #48]	; 0x30
   1be98:	cmp	r0, #0
   1be9c:	bne	1beac <__assert_fail@plt+0xaa18>
   1bea0:	movw	r0, #0
   1bea4:	str	r0, [fp, #-4]
   1bea8:	b	1c000 <__assert_fail@plt+0xab6c>
   1beac:	b	1beb0 <__assert_fail@plt+0xaa1c>
   1beb0:	ldr	r0, [sp, #48]	; 0x30
   1beb4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1beb8:	bl	20368 <__assert_fail@plt+0xeed4>
   1bebc:	cmp	r0, #1
   1bec0:	beq	1be48 <__assert_fail@plt+0xa9b4>
   1bec4:	sub	r0, fp, #28
   1bec8:	bl	15e6c <__assert_fail@plt+0x49d8>
   1becc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bed0:	ldr	r0, [r0]
   1bed4:	mvn	r1, #0
   1bed8:	eor	r0, r0, r1
   1bedc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bee0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bee4:	movw	ip, #0
   1bee8:	str	r1, [sp, #24]
   1beec:	mov	r1, ip
   1bef0:	ldr	ip, [sp, #24]
   1bef4:	str	ip, [sp]
   1bef8:	bl	14d4c <__assert_fail@plt+0x38b8>
   1befc:	str	r0, [fp, #-16]
   1bf00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf04:	and	r0, r0, #2
   1bf08:	cmp	r0, #0
   1bf0c:	beq	1bf24 <__assert_fail@plt+0xaa90>
   1bf10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf14:	lsr	r0, r0, #2
   1bf18:	add	r0, r0, #1
   1bf1c:	str	r0, [sp, #20]
   1bf20:	b	1bf38 <__assert_fail@plt+0xaaa4>
   1bf24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf28:	lsr	r0, r0, #2
   1bf2c:	movw	r1, #0
   1bf30:	sub	r0, r1, r0
   1bf34:	str	r0, [sp, #20]
   1bf38:	ldr	r0, [sp, #20]
   1bf3c:	sub	r1, fp, #40	; 0x28
   1bf40:	sub	r2, fp, #28
   1bf44:	str	r0, [sp, #52]	; 0x34
   1bf48:	ldr	r0, [fp, #-12]
   1bf4c:	ldr	r3, [sp, #52]	; 0x34
   1bf50:	ldr	ip, [fp, #-16]
   1bf54:	str	r0, [sp, #16]
   1bf58:	mov	r0, r2
   1bf5c:	ldr	r2, [sp, #16]
   1bf60:	str	r1, [sp, #12]
   1bf64:	mov	r1, r2
   1bf68:	mov	r2, r3
   1bf6c:	mov	r3, ip
   1bf70:	ldr	ip, [sp, #12]
   1bf74:	str	ip, [sp]
   1bf78:	bl	20694 <__assert_fail@plt+0xf200>
   1bf7c:	cmp	r0, #0
   1bf80:	bne	1bfe0 <__assert_fail@plt+0xab4c>
   1bf84:	b	1bf88 <__assert_fail@plt+0xaaf4>
   1bf88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf8c:	cmp	r0, #0
   1bf90:	movw	r0, #0
   1bf94:	str	r0, [sp, #8]
   1bf98:	beq	1bfbc <__assert_fail@plt+0xab28>
   1bf9c:	ldr	r0, [fp, #-16]
   1bfa0:	mvn	r1, #0
   1bfa4:	add	r0, r0, r1
   1bfa8:	str	r0, [fp, #-16]
   1bfac:	cmp	r0, #0
   1bfb0:	movw	r0, #0
   1bfb4:	movne	r0, #1
   1bfb8:	str	r0, [sp, #8]
   1bfbc:	ldr	r0, [sp, #8]
   1bfc0:	tst	r0, #1
   1bfc4:	beq	1bfdc <__assert_fail@plt+0xab48>
   1bfc8:	sub	r2, fp, #40	; 0x28
   1bfcc:	sub	r0, fp, #28
   1bfd0:	ldr	r1, [fp, #-12]
   1bfd4:	bl	20970 <__assert_fail@plt+0xf4dc>
   1bfd8:	b	1bf88 <__assert_fail@plt+0xaaf4>
   1bfdc:	b	1bfe0 <__assert_fail@plt+0xab4c>
   1bfe0:	sub	r0, fp, #28
   1bfe4:	bl	15f44 <__assert_fail@plt+0x4ab0>
   1bfe8:	ldr	r0, [fp, #-16]
   1bfec:	cmp	r0, #0
   1bff0:	movw	r0, #0
   1bff4:	movne	r0, #1
   1bff8:	and	r0, r0, #1
   1bffc:	str	r0, [fp, #-4]
   1c000:	ldr	r0, [fp, #-4]
   1c004:	mov	sp, fp
   1c008:	pop	{fp, pc}
   1c00c:	sub	sp, sp, #40	; 0x28
   1c010:	str	r0, [sp, #32]
   1c014:	str	r1, [sp, #28]
   1c018:	ldr	r0, [sp, #32]
   1c01c:	ldr	r0, [r0, #4]
   1c020:	str	r0, [sp, #16]
   1c024:	ldr	r0, [sp, #16]
   1c028:	cmp	r0, #0
   1c02c:	blt	1c03c <__assert_fail@plt+0xaba8>
   1c030:	ldr	r0, [sp, #16]
   1c034:	str	r0, [sp]
   1c038:	b	1c04c <__assert_fail@plt+0xabb8>
   1c03c:	ldr	r0, [sp, #16]
   1c040:	movw	r1, #0
   1c044:	sub	r0, r1, r0
   1c048:	str	r0, [sp]
   1c04c:	ldr	r0, [sp]
   1c050:	str	r0, [sp, #12]
   1c054:	ldr	r0, [sp, #28]
   1c058:	lsr	r0, r0, #5
   1c05c:	str	r0, [sp, #24]
   1c060:	ldr	r0, [sp, #24]
   1c064:	ldr	r1, [sp, #12]
   1c068:	cmp	r0, r1
   1c06c:	blt	1c08c <__assert_fail@plt+0xabf8>
   1c070:	ldr	r0, [sp, #16]
   1c074:	cmp	r0, #0
   1c078:	movw	r0, #0
   1c07c:	movlt	r0, #1
   1c080:	and	r0, r0, #1
   1c084:	str	r0, [sp, #36]	; 0x24
   1c088:	b	1c160 <__assert_fail@plt+0xaccc>
   1c08c:	ldr	r0, [sp, #28]
   1c090:	and	r0, r0, #31
   1c094:	str	r0, [sp, #20]
   1c098:	ldr	r0, [sp, #32]
   1c09c:	ldr	r0, [r0, #8]
   1c0a0:	ldr	r1, [sp, #24]
   1c0a4:	add	r0, r0, r1, lsl #2
   1c0a8:	ldr	r0, [r0]
   1c0ac:	str	r0, [sp, #8]
   1c0b0:	ldr	r0, [sp, #8]
   1c0b4:	ldr	r1, [sp, #20]
   1c0b8:	lsr	r0, r0, r1
   1c0bc:	and	r0, r0, #1
   1c0c0:	str	r0, [sp, #4]
   1c0c4:	ldr	r0, [sp, #16]
   1c0c8:	cmp	r0, #0
   1c0cc:	bge	1c158 <__assert_fail@plt+0xacc4>
   1c0d0:	ldr	r0, [sp, #20]
   1c0d4:	cmp	r0, #0
   1c0d8:	bls	1c108 <__assert_fail@plt+0xac74>
   1c0dc:	ldr	r0, [sp, #8]
   1c0e0:	ldr	r1, [sp, #20]
   1c0e4:	movw	r2, #32
   1c0e8:	sub	r1, r2, r1
   1c0ec:	lsl	r0, r0, r1
   1c0f0:	cmp	r0, #0
   1c0f4:	bls	1c108 <__assert_fail@plt+0xac74>
   1c0f8:	ldr	r0, [sp, #4]
   1c0fc:	eor	r0, r0, #1
   1c100:	str	r0, [sp, #36]	; 0x24
   1c104:	b	1c160 <__assert_fail@plt+0xaccc>
   1c108:	b	1c10c <__assert_fail@plt+0xac78>
   1c10c:	ldr	r0, [sp, #24]
   1c110:	mvn	r1, #0
   1c114:	add	r0, r0, r1
   1c118:	str	r0, [sp, #24]
   1c11c:	cmp	r0, #0
   1c120:	blt	1c154 <__assert_fail@plt+0xacc0>
   1c124:	ldr	r0, [sp, #32]
   1c128:	ldr	r0, [r0, #8]
   1c12c:	ldr	r1, [sp, #24]
   1c130:	add	r0, r0, r1, lsl #2
   1c134:	ldr	r0, [r0]
   1c138:	cmp	r0, #0
   1c13c:	bls	1c150 <__assert_fail@plt+0xacbc>
   1c140:	ldr	r0, [sp, #4]
   1c144:	eor	r0, r0, #1
   1c148:	str	r0, [sp, #36]	; 0x24
   1c14c:	b	1c160 <__assert_fail@plt+0xaccc>
   1c150:	b	1c10c <__assert_fail@plt+0xac78>
   1c154:	b	1c158 <__assert_fail@plt+0xacc4>
   1c158:	ldr	r0, [sp, #4]
   1c15c:	str	r0, [sp, #36]	; 0x24
   1c160:	ldr	r0, [sp, #36]	; 0x24
   1c164:	add	sp, sp, #40	; 0x28
   1c168:	bx	lr
   1c16c:	push	{fp, lr}
   1c170:	mov	fp, sp
   1c174:	sub	sp, sp, #56	; 0x38
   1c178:	str	r0, [fp, #-4]
   1c17c:	str	r1, [fp, #-8]
   1c180:	ldr	r0, [fp, #-4]
   1c184:	ldr	r0, [r0, #4]
   1c188:	cmp	r0, #0
   1c18c:	blt	1c1a0 <__assert_fail@plt+0xad0c>
   1c190:	ldr	r0, [fp, #-4]
   1c194:	ldr	r0, [r0, #4]
   1c198:	str	r0, [sp, #20]
   1c19c:	b	1c1b4 <__assert_fail@plt+0xad20>
   1c1a0:	ldr	r0, [fp, #-4]
   1c1a4:	ldr	r0, [r0, #4]
   1c1a8:	movw	r1, #0
   1c1ac:	sub	r0, r1, r0
   1c1b0:	str	r0, [sp, #20]
   1c1b4:	ldr	r0, [sp, #20]
   1c1b8:	str	r0, [fp, #-12]
   1c1bc:	ldr	r0, [fp, #-8]
   1c1c0:	lsr	r0, r0, #5
   1c1c4:	str	r0, [fp, #-16]
   1c1c8:	ldr	r0, [fp, #-8]
   1c1cc:	and	r0, r0, #31
   1c1d0:	movw	r1, #1
   1c1d4:	lsl	r0, r1, r0
   1c1d8:	str	r0, [fp, #-20]	; 0xffffffec
   1c1dc:	ldr	r0, [fp, #-16]
   1c1e0:	ldr	r1, [fp, #-12]
   1c1e4:	cmp	r0, r1
   1c1e8:	blt	1c290 <__assert_fail@plt+0xadfc>
   1c1ec:	ldr	r0, [fp, #-16]
   1c1f0:	add	r0, r0, #1
   1c1f4:	ldr	r1, [fp, #-4]
   1c1f8:	ldr	r1, [r1]
   1c1fc:	cmp	r0, r1
   1c200:	ble	1c21c <__assert_fail@plt+0xad88>
   1c204:	ldr	r0, [fp, #-4]
   1c208:	ldr	r1, [fp, #-16]
   1c20c:	add	r1, r1, #1
   1c210:	bl	160ec <__assert_fail@plt+0x4c58>
   1c214:	str	r0, [sp, #16]
   1c218:	b	1c228 <__assert_fail@plt+0xad94>
   1c21c:	ldr	r0, [fp, #-4]
   1c220:	ldr	r0, [r0, #8]
   1c224:	str	r0, [sp, #16]
   1c228:	ldr	r0, [sp, #16]
   1c22c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c230:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c238:	ldr	r2, [fp, #-16]
   1c23c:	add	r1, r1, r2, lsl #2
   1c240:	str	r0, [r1]
   1c244:	ldr	r0, [fp, #-12]
   1c248:	str	r0, [sp, #28]
   1c24c:	ldr	r0, [sp, #28]
   1c250:	ldr	r1, [fp, #-16]
   1c254:	cmp	r0, r1
   1c258:	bge	1c280 <__assert_fail@plt+0xadec>
   1c25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c260:	ldr	r1, [sp, #28]
   1c264:	add	r0, r0, r1, lsl #2
   1c268:	movw	r1, #0
   1c26c:	str	r1, [r0]
   1c270:	ldr	r0, [sp, #28]
   1c274:	add	r0, r0, #1
   1c278:	str	r0, [sp, #28]
   1c27c:	b	1c24c <__assert_fail@plt+0xadb8>
   1c280:	ldr	r0, [fp, #-16]
   1c284:	add	r0, r0, #1
   1c288:	str	r0, [fp, #-12]
   1c28c:	b	1c340 <__assert_fail@plt+0xaeac>
   1c290:	ldr	r0, [fp, #-4]
   1c294:	ldr	r0, [r0, #8]
   1c298:	str	r0, [fp, #-24]	; 0xffffffe8
   1c29c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2a0:	ldr	r1, [fp, #-16]
   1c2a4:	add	r0, r0, r1, lsl #2
   1c2a8:	mov	r1, r0
   1c2ac:	ldr	r2, [fp, #-12]
   1c2b0:	ldr	r3, [fp, #-16]
   1c2b4:	sub	r2, r2, r3
   1c2b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c2bc:	str	r0, [sp, #12]
   1c2c0:	mov	r0, r1
   1c2c4:	ldr	r1, [sp, #12]
   1c2c8:	bl	13d00 <__assert_fail@plt+0x286c>
   1c2cc:	str	r0, [sp, #24]
   1c2d0:	ldr	r0, [sp, #24]
   1c2d4:	cmp	r0, #0
   1c2d8:	bls	1c33c <__assert_fail@plt+0xaea8>
   1c2dc:	ldr	r0, [fp, #-12]
   1c2e0:	add	r0, r0, #1
   1c2e4:	ldr	r1, [fp, #-4]
   1c2e8:	ldr	r1, [r1]
   1c2ec:	cmp	r0, r1
   1c2f0:	ble	1c30c <__assert_fail@plt+0xae78>
   1c2f4:	ldr	r0, [fp, #-4]
   1c2f8:	ldr	r1, [fp, #-12]
   1c2fc:	add	r1, r1, #1
   1c300:	bl	160ec <__assert_fail@plt+0x4c58>
   1c304:	str	r0, [sp, #8]
   1c308:	b	1c318 <__assert_fail@plt+0xae84>
   1c30c:	ldr	r0, [fp, #-4]
   1c310:	ldr	r0, [r0, #8]
   1c314:	str	r0, [sp, #8]
   1c318:	ldr	r0, [sp, #8]
   1c31c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c320:	ldr	r0, [sp, #24]
   1c324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c328:	ldr	r2, [fp, #-12]
   1c32c:	add	r3, r2, #1
   1c330:	str	r3, [fp, #-12]
   1c334:	add	r1, r1, r2, lsl #2
   1c338:	str	r0, [r1]
   1c33c:	b	1c340 <__assert_fail@plt+0xaeac>
   1c340:	ldr	r0, [fp, #-4]
   1c344:	ldr	r0, [r0, #4]
   1c348:	cmp	r0, #0
   1c34c:	bge	1c364 <__assert_fail@plt+0xaed0>
   1c350:	ldr	r0, [fp, #-12]
   1c354:	movw	r1, #0
   1c358:	sub	r0, r1, r0
   1c35c:	str	r0, [sp, #4]
   1c360:	b	1c36c <__assert_fail@plt+0xaed8>
   1c364:	ldr	r0, [fp, #-12]
   1c368:	str	r0, [sp, #4]
   1c36c:	ldr	r0, [sp, #4]
   1c370:	ldr	r1, [fp, #-4]
   1c374:	str	r0, [r1, #4]
   1c378:	mov	sp, fp
   1c37c:	pop	{fp, pc}
   1c380:	push	{fp, lr}
   1c384:	mov	fp, sp
   1c388:	sub	sp, sp, #40	; 0x28
   1c38c:	str	r0, [fp, #-4]
   1c390:	str	r1, [fp, #-8]
   1c394:	ldr	r0, [fp, #-4]
   1c398:	ldr	r0, [r0, #4]
   1c39c:	cmp	r0, #0
   1c3a0:	blt	1c3b4 <__assert_fail@plt+0xaf20>
   1c3a4:	ldr	r0, [fp, #-4]
   1c3a8:	ldr	r0, [r0, #4]
   1c3ac:	str	r0, [sp, #8]
   1c3b0:	b	1c3c8 <__assert_fail@plt+0xaf34>
   1c3b4:	ldr	r0, [fp, #-4]
   1c3b8:	ldr	r0, [r0, #4]
   1c3bc:	movw	r1, #0
   1c3c0:	sub	r0, r1, r0
   1c3c4:	str	r0, [sp, #8]
   1c3c8:	ldr	r0, [sp, #8]
   1c3cc:	str	r0, [fp, #-12]
   1c3d0:	ldr	r0, [fp, #-4]
   1c3d4:	ldr	r0, [r0, #8]
   1c3d8:	str	r0, [sp, #20]
   1c3dc:	ldr	r0, [fp, #-8]
   1c3e0:	lsr	r0, r0, #5
   1c3e4:	str	r0, [fp, #-16]
   1c3e8:	ldr	r0, [fp, #-8]
   1c3ec:	and	r0, r0, #31
   1c3f0:	movw	r1, #1
   1c3f4:	lsl	r0, r1, r0
   1c3f8:	str	r0, [sp, #16]
   1c3fc:	ldr	r0, [fp, #-16]
   1c400:	ldr	r1, [fp, #-12]
   1c404:	cmp	r0, r1
   1c408:	bge	1c410 <__assert_fail@plt+0xaf7c>
   1c40c:	b	1c430 <__assert_fail@plt+0xaf9c>
   1c410:	movw	r0, #21198	; 0x52ce
   1c414:	movt	r0, #4
   1c418:	movw	r1, #16512	; 0x4080
   1c41c:	movt	r1, #4
   1c420:	movw	r2, #3753	; 0xea9
   1c424:	movw	r3, #21214	; 0x52de
   1c428:	movt	r3, #4
   1c42c:	bl	11494 <__assert_fail@plt>
   1c430:	b	1c434 <__assert_fail@plt+0xafa0>
   1c434:	ldr	r0, [sp, #20]
   1c438:	ldr	r1, [fp, #-16]
   1c43c:	add	r0, r0, r1, lsl #2
   1c440:	mov	r1, r0
   1c444:	ldr	r2, [fp, #-12]
   1c448:	ldr	r3, [fp, #-16]
   1c44c:	sub	r2, r2, r3
   1c450:	ldr	r3, [sp, #16]
   1c454:	str	r0, [sp, #4]
   1c458:	mov	r0, r1
   1c45c:	ldr	r1, [sp, #4]
   1c460:	bl	13f44 <__assert_fail@plt+0x2ab0>
   1c464:	str	r0, [sp, #12]
   1c468:	ldr	r0, [sp, #12]
   1c46c:	cmp	r0, #0
   1c470:	bne	1c478 <__assert_fail@plt+0xafe4>
   1c474:	b	1c498 <__assert_fail@plt+0xb004>
   1c478:	movw	r0, #17493	; 0x4455
   1c47c:	movt	r0, #4
   1c480:	movw	r1, #16512	; 0x4080
   1c484:	movt	r1, #4
   1c488:	movw	r2, #3756	; 0xeac
   1c48c:	movw	r3, #21214	; 0x52de
   1c490:	movt	r3, #4
   1c494:	bl	11494 <__assert_fail@plt>
   1c498:	b	1c49c <__assert_fail@plt+0xb008>
   1c49c:	ldr	r0, [sp, #20]
   1c4a0:	ldr	r1, [fp, #-12]
   1c4a4:	bl	13c4c <__assert_fail@plt+0x27b8>
   1c4a8:	str	r0, [fp, #-12]
   1c4ac:	ldr	r0, [fp, #-4]
   1c4b0:	ldr	r0, [r0, #4]
   1c4b4:	cmp	r0, #0
   1c4b8:	bge	1c4d0 <__assert_fail@plt+0xb03c>
   1c4bc:	ldr	r0, [fp, #-12]
   1c4c0:	movw	r1, #0
   1c4c4:	sub	r0, r1, r0
   1c4c8:	str	r0, [sp]
   1c4cc:	b	1c4d8 <__assert_fail@plt+0xb044>
   1c4d0:	ldr	r0, [fp, #-12]
   1c4d4:	str	r0, [sp]
   1c4d8:	ldr	r0, [sp]
   1c4dc:	ldr	r1, [fp, #-4]
   1c4e0:	str	r0, [r1, #4]
   1c4e4:	mov	sp, fp
   1c4e8:	pop	{fp, pc}
   1c4ec:	push	{fp, lr}
   1c4f0:	mov	fp, sp
   1c4f4:	sub	sp, sp, #8
   1c4f8:	str	r0, [sp, #4]
   1c4fc:	str	r1, [sp]
   1c500:	ldr	r0, [sp, #4]
   1c504:	ldr	r1, [sp]
   1c508:	bl	1c00c <__assert_fail@plt+0xab78>
   1c50c:	cmp	r0, #0
   1c510:	beq	1c544 <__assert_fail@plt+0xb0b0>
   1c514:	ldr	r0, [sp, #4]
   1c518:	ldr	r0, [r0, #4]
   1c51c:	cmp	r0, #0
   1c520:	blt	1c534 <__assert_fail@plt+0xb0a0>
   1c524:	ldr	r0, [sp, #4]
   1c528:	ldr	r1, [sp]
   1c52c:	bl	1c380 <__assert_fail@plt+0xaeec>
   1c530:	b	1c540 <__assert_fail@plt+0xb0ac>
   1c534:	ldr	r0, [sp, #4]
   1c538:	ldr	r1, [sp]
   1c53c:	bl	1c16c <__assert_fail@plt+0xacd8>
   1c540:	b	1c544 <__assert_fail@plt+0xb0b0>
   1c544:	mov	sp, fp
   1c548:	pop	{fp, pc}
   1c54c:	push	{fp, lr}
   1c550:	mov	fp, sp
   1c554:	sub	sp, sp, #8
   1c558:	str	r0, [sp, #4]
   1c55c:	str	r1, [sp]
   1c560:	ldr	r0, [sp, #4]
   1c564:	ldr	r1, [sp]
   1c568:	bl	1c00c <__assert_fail@plt+0xab78>
   1c56c:	ldr	r1, [sp, #4]
   1c570:	ldr	r1, [r1, #4]
   1c574:	cmp	r1, #0
   1c578:	movw	r1, #0
   1c57c:	movlt	r1, #1
   1c580:	and	r1, r1, #1
   1c584:	eor	r0, r0, r1
   1c588:	cmp	r0, #0
   1c58c:	beq	1c5a0 <__assert_fail@plt+0xb10c>
   1c590:	ldr	r0, [sp, #4]
   1c594:	ldr	r1, [sp]
   1c598:	bl	1c380 <__assert_fail@plt+0xaeec>
   1c59c:	b	1c5ac <__assert_fail@plt+0xb118>
   1c5a0:	ldr	r0, [sp, #4]
   1c5a4:	ldr	r1, [sp]
   1c5a8:	bl	1c16c <__assert_fail@plt+0xacd8>
   1c5ac:	mov	sp, fp
   1c5b0:	pop	{fp, pc}
   1c5b4:	push	{fp, lr}
   1c5b8:	mov	fp, sp
   1c5bc:	sub	sp, sp, #8
   1c5c0:	str	r0, [sp, #4]
   1c5c4:	str	r1, [sp]
   1c5c8:	ldr	r0, [sp, #4]
   1c5cc:	ldr	r1, [sp]
   1c5d0:	movw	r2, #1
   1c5d4:	bl	17650 <__assert_fail@plt+0x61bc>
   1c5d8:	ldr	r0, [sp, #4]
   1c5dc:	ldr	r1, [sp, #4]
   1c5e0:	bl	1757c <__assert_fail@plt+0x60e8>
   1c5e4:	mov	sp, fp
   1c5e8:	pop	{fp, pc}
   1c5ec:	push	{fp, lr}
   1c5f0:	mov	fp, sp
   1c5f4:	sub	sp, sp, #104	; 0x68
   1c5f8:	str	r0, [fp, #-4]
   1c5fc:	str	r1, [fp, #-8]
   1c600:	str	r2, [fp, #-12]
   1c604:	ldr	r0, [fp, #-8]
   1c608:	ldr	r0, [r0, #4]
   1c60c:	cmp	r0, #0
   1c610:	blt	1c624 <__assert_fail@plt+0xb190>
   1c614:	ldr	r0, [fp, #-8]
   1c618:	ldr	r0, [r0, #4]
   1c61c:	str	r0, [sp, #16]
   1c620:	b	1c638 <__assert_fail@plt+0xb1a4>
   1c624:	ldr	r0, [fp, #-8]
   1c628:	ldr	r0, [r0, #4]
   1c62c:	movw	r1, #0
   1c630:	sub	r0, r1, r0
   1c634:	str	r0, [sp, #16]
   1c638:	ldr	r0, [sp, #16]
   1c63c:	str	r0, [fp, #-16]
   1c640:	ldr	r0, [fp, #-12]
   1c644:	ldr	r0, [r0, #4]
   1c648:	cmp	r0, #0
   1c64c:	blt	1c660 <__assert_fail@plt+0xb1cc>
   1c650:	ldr	r0, [fp, #-12]
   1c654:	ldr	r0, [r0, #4]
   1c658:	str	r0, [sp, #12]
   1c65c:	b	1c674 <__assert_fail@plt+0xb1e0>
   1c660:	ldr	r0, [fp, #-12]
   1c664:	ldr	r0, [r0, #4]
   1c668:	movw	r1, #0
   1c66c:	sub	r0, r1, r0
   1c670:	str	r0, [sp, #12]
   1c674:	ldr	r0, [sp, #12]
   1c678:	str	r0, [fp, #-20]	; 0xffffffec
   1c67c:	ldr	r0, [fp, #-16]
   1c680:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c684:	cmp	r0, r1
   1c688:	bge	1c6c8 <__assert_fail@plt+0xb234>
   1c68c:	b	1c690 <__assert_fail@plt+0xb1fc>
   1c690:	ldr	r0, [fp, #-8]
   1c694:	str	r0, [sp, #24]
   1c698:	ldr	r0, [fp, #-12]
   1c69c:	str	r0, [fp, #-8]
   1c6a0:	ldr	r0, [sp, #24]
   1c6a4:	str	r0, [fp, #-12]
   1c6a8:	b	1c6ac <__assert_fail@plt+0xb218>
   1c6ac:	ldr	r0, [fp, #-16]
   1c6b0:	str	r0, [sp, #20]
   1c6b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6b8:	str	r0, [fp, #-16]
   1c6bc:	ldr	r0, [sp, #20]
   1c6c0:	str	r0, [fp, #-20]	; 0xffffffec
   1c6c4:	b	1c6c8 <__assert_fail@plt+0xb234>
   1c6c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6cc:	cmp	r0, #0
   1c6d0:	bne	1c6e4 <__assert_fail@plt+0xb250>
   1c6d4:	ldr	r0, [fp, #-4]
   1c6d8:	movw	r1, #0
   1c6dc:	str	r1, [r0, #4]
   1c6e0:	b	1ca04 <__assert_fail@plt+0xb570>
   1c6e4:	ldr	r0, [fp, #-8]
   1c6e8:	ldr	r0, [r0, #4]
   1c6ec:	cmp	r0, #0
   1c6f0:	movw	r0, #0
   1c6f4:	movlt	r0, #1
   1c6f8:	and	r0, r0, #1
   1c6fc:	str	r0, [sp, #48]	; 0x30
   1c700:	ldr	r0, [fp, #-12]
   1c704:	ldr	r0, [r0, #4]
   1c708:	cmp	r0, #0
   1c70c:	movw	r0, #0
   1c710:	movlt	r0, #1
   1c714:	and	r0, r0, #1
   1c718:	str	r0, [sp, #44]	; 0x2c
   1c71c:	ldr	r0, [sp, #48]	; 0x30
   1c720:	ldr	r1, [sp, #44]	; 0x2c
   1c724:	and	r0, r0, r1
   1c728:	str	r0, [sp, #40]	; 0x28
   1c72c:	ldr	r0, [sp, #48]	; 0x30
   1c730:	movw	r1, #0
   1c734:	sub	r0, r1, r0
   1c738:	str	r0, [fp, #-44]	; 0xffffffd4
   1c73c:	ldr	r0, [sp, #44]	; 0x2c
   1c740:	sub	r0, r1, r0
   1c744:	str	r0, [fp, #-48]	; 0xffffffd0
   1c748:	ldr	r0, [sp, #40]	; 0x28
   1c74c:	sub	r0, r1, r0
   1c750:	str	r0, [sp, #52]	; 0x34
   1c754:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c758:	cmp	r0, #0
   1c75c:	beq	1c76c <__assert_fail@plt+0xb2d8>
   1c760:	ldr	r0, [fp, #-16]
   1c764:	str	r0, [sp, #8]
   1c768:	b	1c774 <__assert_fail@plt+0xb2e0>
   1c76c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c770:	str	r0, [sp, #8]
   1c774:	ldr	r0, [sp, #8]
   1c778:	str	r0, [fp, #-24]	; 0xffffffe8
   1c77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c780:	ldr	r1, [sp, #40]	; 0x28
   1c784:	add	r0, r0, r1
   1c788:	ldr	r1, [fp, #-4]
   1c78c:	ldr	r1, [r1]
   1c790:	cmp	r0, r1
   1c794:	ble	1c7b4 <__assert_fail@plt+0xb320>
   1c798:	ldr	r0, [fp, #-4]
   1c79c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7a0:	ldr	r2, [sp, #40]	; 0x28
   1c7a4:	add	r1, r1, r2
   1c7a8:	bl	160ec <__assert_fail@plt+0x4c58>
   1c7ac:	str	r0, [sp, #4]
   1c7b0:	b	1c7c0 <__assert_fail@plt+0xb32c>
   1c7b4:	ldr	r0, [fp, #-4]
   1c7b8:	ldr	r0, [r0, #8]
   1c7bc:	str	r0, [sp, #4]
   1c7c0:	ldr	r0, [sp, #4]
   1c7c4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c7c8:	ldr	r0, [fp, #-8]
   1c7cc:	ldr	r0, [r0, #8]
   1c7d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c7d4:	ldr	r0, [fp, #-12]
   1c7d8:	ldr	r0, [r0, #8]
   1c7dc:	str	r0, [fp, #-36]	; 0xffffffdc
   1c7e0:	movw	r0, #0
   1c7e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c7e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c7ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c7f0:	ldr	r0, [r0, r1, lsl #2]
   1c7f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c7f8:	eor	r0, r0, r1
   1c7fc:	ldr	r1, [sp, #48]	; 0x30
   1c800:	add	r0, r0, r1
   1c804:	str	r0, [sp, #36]	; 0x24
   1c808:	ldr	r0, [sp, #36]	; 0x24
   1c80c:	ldr	r1, [sp, #48]	; 0x30
   1c810:	mov	r2, #0
   1c814:	cmp	r0, r1
   1c818:	mov	r0, r2
   1c81c:	movwcc	r0, #1
   1c820:	str	r0, [sp, #48]	; 0x30
   1c824:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c82c:	ldr	r0, [r0, r1, lsl #2]
   1c830:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c834:	eor	r0, r0, r1
   1c838:	ldr	r1, [sp, #44]	; 0x2c
   1c83c:	add	r0, r0, r1
   1c840:	str	r0, [sp, #32]
   1c844:	ldr	r0, [sp, #32]
   1c848:	ldr	r1, [sp, #44]	; 0x2c
   1c84c:	cmp	r0, r1
   1c850:	mov	r0, r2
   1c854:	movwcc	r0, #1
   1c858:	str	r0, [sp, #44]	; 0x2c
   1c85c:	ldr	r0, [sp, #36]	; 0x24
   1c860:	ldr	r1, [sp, #32]
   1c864:	and	r0, r0, r1
   1c868:	ldr	r1, [sp, #52]	; 0x34
   1c86c:	eor	r0, r0, r1
   1c870:	ldr	r1, [sp, #40]	; 0x28
   1c874:	add	r0, r0, r1
   1c878:	str	r0, [sp, #28]
   1c87c:	ldr	r0, [sp, #28]
   1c880:	ldr	r1, [sp, #40]	; 0x28
   1c884:	cmp	r0, r1
   1c888:	movwcc	r2, #1
   1c88c:	str	r2, [sp, #40]	; 0x28
   1c890:	ldr	r0, [sp, #28]
   1c894:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c898:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c89c:	add	r1, r1, r2, lsl #2
   1c8a0:	str	r0, [r1]
   1c8a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c8a8:	add	r0, r0, #1
   1c8ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1c8b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c8b4:	cmp	r0, r1
   1c8b8:	blt	1c7e8 <__assert_fail@plt+0xb354>
   1c8bc:	ldr	r0, [sp, #44]	; 0x2c
   1c8c0:	cmp	r0, #0
   1c8c4:	bne	1c8cc <__assert_fail@plt+0xb438>
   1c8c8:	b	1c8ec <__assert_fail@plt+0xb458>
   1c8cc:	movw	r0, #18262	; 0x4756
   1c8d0:	movt	r0, #4
   1c8d4:	movw	r1, #16512	; 0x4080
   1c8d8:	movt	r1, #4
   1c8dc:	movw	r2, #3854	; 0xf0e
   1c8e0:	movw	r3, #18270	; 0x475e
   1c8e4:	movt	r3, #4
   1c8e8:	bl	11494 <__assert_fail@plt>
   1c8ec:	b	1c8f0 <__assert_fail@plt+0xb45c>
   1c8f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c8f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8f8:	cmp	r0, r1
   1c8fc:	bge	1c994 <__assert_fail@plt+0xb500>
   1c900:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c904:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c908:	ldr	r0, [r0, r1, lsl #2]
   1c90c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c910:	eor	r0, r0, r1
   1c914:	ldr	r1, [sp, #48]	; 0x30
   1c918:	add	r0, r0, r1
   1c91c:	str	r0, [sp, #36]	; 0x24
   1c920:	ldr	r0, [sp, #36]	; 0x24
   1c924:	ldr	r1, [sp, #48]	; 0x30
   1c928:	mov	r2, #0
   1c92c:	cmp	r0, r1
   1c930:	mov	r0, r2
   1c934:	movwcc	r0, #1
   1c938:	str	r0, [sp, #48]	; 0x30
   1c93c:	ldr	r0, [sp, #36]	; 0x24
   1c940:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c944:	and	r0, r0, r1
   1c948:	ldr	r1, [sp, #52]	; 0x34
   1c94c:	eor	r0, r0, r1
   1c950:	ldr	r1, [sp, #40]	; 0x28
   1c954:	add	r0, r0, r1
   1c958:	str	r0, [sp, #28]
   1c95c:	ldr	r0, [sp, #28]
   1c960:	ldr	r1, [sp, #40]	; 0x28
   1c964:	cmp	r0, r1
   1c968:	movwcc	r2, #1
   1c96c:	str	r2, [sp, #40]	; 0x28
   1c970:	ldr	r0, [sp, #28]
   1c974:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c978:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c97c:	add	r1, r1, r2, lsl #2
   1c980:	str	r0, [r1]
   1c984:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c988:	add	r0, r0, #1
   1c98c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c990:	b	1c8f0 <__assert_fail@plt+0xb45c>
   1c994:	ldr	r0, [sp, #40]	; 0x28
   1c998:	cmp	r0, #0
   1c99c:	beq	1c9c0 <__assert_fail@plt+0xb52c>
   1c9a0:	ldr	r0, [sp, #40]	; 0x28
   1c9a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c9ac:	add	r3, r2, #1
   1c9b0:	str	r3, [fp, #-24]	; 0xffffffe8
   1c9b4:	add	r1, r1, r2, lsl #2
   1c9b8:	str	r0, [r1]
   1c9bc:	b	1c9d0 <__assert_fail@plt+0xb53c>
   1c9c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9c8:	bl	13c4c <__assert_fail@plt+0x27b8>
   1c9cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9d0:	ldr	r0, [sp, #52]	; 0x34
   1c9d4:	cmp	r0, #0
   1c9d8:	beq	1c9f0 <__assert_fail@plt+0xb55c>
   1c9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9e0:	movw	r1, #0
   1c9e4:	sub	r0, r1, r0
   1c9e8:	str	r0, [sp]
   1c9ec:	b	1c9f8 <__assert_fail@plt+0xb564>
   1c9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9f4:	str	r0, [sp]
   1c9f8:	ldr	r0, [sp]
   1c9fc:	ldr	r1, [fp, #-4]
   1ca00:	str	r0, [r1, #4]
   1ca04:	mov	sp, fp
   1ca08:	pop	{fp, pc}
   1ca0c:	push	{fp, lr}
   1ca10:	mov	fp, sp
   1ca14:	sub	sp, sp, #104	; 0x68
   1ca18:	str	r0, [fp, #-4]
   1ca1c:	str	r1, [fp, #-8]
   1ca20:	str	r2, [fp, #-12]
   1ca24:	ldr	r0, [fp, #-8]
   1ca28:	ldr	r0, [r0, #4]
   1ca2c:	cmp	r0, #0
   1ca30:	blt	1ca44 <__assert_fail@plt+0xb5b0>
   1ca34:	ldr	r0, [fp, #-8]
   1ca38:	ldr	r0, [r0, #4]
   1ca3c:	str	r0, [sp, #16]
   1ca40:	b	1ca58 <__assert_fail@plt+0xb5c4>
   1ca44:	ldr	r0, [fp, #-8]
   1ca48:	ldr	r0, [r0, #4]
   1ca4c:	movw	r1, #0
   1ca50:	sub	r0, r1, r0
   1ca54:	str	r0, [sp, #16]
   1ca58:	ldr	r0, [sp, #16]
   1ca5c:	str	r0, [fp, #-16]
   1ca60:	ldr	r0, [fp, #-12]
   1ca64:	ldr	r0, [r0, #4]
   1ca68:	cmp	r0, #0
   1ca6c:	blt	1ca80 <__assert_fail@plt+0xb5ec>
   1ca70:	ldr	r0, [fp, #-12]
   1ca74:	ldr	r0, [r0, #4]
   1ca78:	str	r0, [sp, #12]
   1ca7c:	b	1ca94 <__assert_fail@plt+0xb600>
   1ca80:	ldr	r0, [fp, #-12]
   1ca84:	ldr	r0, [r0, #4]
   1ca88:	movw	r1, #0
   1ca8c:	sub	r0, r1, r0
   1ca90:	str	r0, [sp, #12]
   1ca94:	ldr	r0, [sp, #12]
   1ca98:	str	r0, [fp, #-20]	; 0xffffffec
   1ca9c:	ldr	r0, [fp, #-16]
   1caa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1caa4:	cmp	r0, r1
   1caa8:	bge	1cae8 <__assert_fail@plt+0xb654>
   1caac:	b	1cab0 <__assert_fail@plt+0xb61c>
   1cab0:	ldr	r0, [fp, #-8]
   1cab4:	str	r0, [sp, #24]
   1cab8:	ldr	r0, [fp, #-12]
   1cabc:	str	r0, [fp, #-8]
   1cac0:	ldr	r0, [sp, #24]
   1cac4:	str	r0, [fp, #-12]
   1cac8:	b	1cacc <__assert_fail@plt+0xb638>
   1cacc:	ldr	r0, [fp, #-16]
   1cad0:	str	r0, [sp, #20]
   1cad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cad8:	str	r0, [fp, #-16]
   1cadc:	ldr	r0, [sp, #20]
   1cae0:	str	r0, [fp, #-20]	; 0xffffffec
   1cae4:	b	1cae8 <__assert_fail@plt+0xb654>
   1cae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1caec:	cmp	r0, #0
   1caf0:	bne	1cb04 <__assert_fail@plt+0xb670>
   1caf4:	ldr	r0, [fp, #-4]
   1caf8:	ldr	r1, [fp, #-8]
   1cafc:	bl	161dc <__assert_fail@plt+0x4d48>
   1cb00:	b	1ce24 <__assert_fail@plt+0xb990>
   1cb04:	ldr	r0, [fp, #-8]
   1cb08:	ldr	r0, [r0, #4]
   1cb0c:	cmp	r0, #0
   1cb10:	movw	r0, #0
   1cb14:	movlt	r0, #1
   1cb18:	and	r0, r0, #1
   1cb1c:	str	r0, [sp, #48]	; 0x30
   1cb20:	ldr	r0, [fp, #-12]
   1cb24:	ldr	r0, [r0, #4]
   1cb28:	cmp	r0, #0
   1cb2c:	movw	r0, #0
   1cb30:	movlt	r0, #1
   1cb34:	and	r0, r0, #1
   1cb38:	str	r0, [sp, #44]	; 0x2c
   1cb3c:	ldr	r0, [sp, #48]	; 0x30
   1cb40:	ldr	r1, [sp, #44]	; 0x2c
   1cb44:	orr	r0, r0, r1
   1cb48:	str	r0, [sp, #40]	; 0x28
   1cb4c:	ldr	r0, [sp, #48]	; 0x30
   1cb50:	movw	r1, #0
   1cb54:	sub	r0, r1, r0
   1cb58:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb5c:	ldr	r0, [sp, #44]	; 0x2c
   1cb60:	sub	r0, r1, r0
   1cb64:	str	r0, [fp, #-48]	; 0xffffffd0
   1cb68:	ldr	r0, [sp, #40]	; 0x28
   1cb6c:	sub	r0, r1, r0
   1cb70:	str	r0, [sp, #52]	; 0x34
   1cb74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cb78:	cmp	r0, #0
   1cb7c:	beq	1cb8c <__assert_fail@plt+0xb6f8>
   1cb80:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb84:	str	r0, [sp, #8]
   1cb88:	b	1cb94 <__assert_fail@plt+0xb700>
   1cb8c:	ldr	r0, [fp, #-16]
   1cb90:	str	r0, [sp, #8]
   1cb94:	ldr	r0, [sp, #8]
   1cb98:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cba0:	ldr	r1, [sp, #40]	; 0x28
   1cba4:	add	r0, r0, r1
   1cba8:	ldr	r1, [fp, #-4]
   1cbac:	ldr	r1, [r1]
   1cbb0:	cmp	r0, r1
   1cbb4:	ble	1cbd4 <__assert_fail@plt+0xb740>
   1cbb8:	ldr	r0, [fp, #-4]
   1cbbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbc0:	ldr	r2, [sp, #40]	; 0x28
   1cbc4:	add	r1, r1, r2
   1cbc8:	bl	160ec <__assert_fail@plt+0x4c58>
   1cbcc:	str	r0, [sp, #4]
   1cbd0:	b	1cbe0 <__assert_fail@plt+0xb74c>
   1cbd4:	ldr	r0, [fp, #-4]
   1cbd8:	ldr	r0, [r0, #8]
   1cbdc:	str	r0, [sp, #4]
   1cbe0:	ldr	r0, [sp, #4]
   1cbe4:	str	r0, [fp, #-40]	; 0xffffffd8
   1cbe8:	ldr	r0, [fp, #-8]
   1cbec:	ldr	r0, [r0, #8]
   1cbf0:	str	r0, [fp, #-32]	; 0xffffffe0
   1cbf4:	ldr	r0, [fp, #-12]
   1cbf8:	ldr	r0, [r0, #8]
   1cbfc:	str	r0, [fp, #-36]	; 0xffffffdc
   1cc00:	movw	r0, #0
   1cc04:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc10:	ldr	r0, [r0, r1, lsl #2]
   1cc14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cc18:	eor	r0, r0, r1
   1cc1c:	ldr	r1, [sp, #48]	; 0x30
   1cc20:	add	r0, r0, r1
   1cc24:	str	r0, [sp, #36]	; 0x24
   1cc28:	ldr	r0, [sp, #36]	; 0x24
   1cc2c:	ldr	r1, [sp, #48]	; 0x30
   1cc30:	mov	r2, #0
   1cc34:	cmp	r0, r1
   1cc38:	mov	r0, r2
   1cc3c:	movwcc	r0, #1
   1cc40:	str	r0, [sp, #48]	; 0x30
   1cc44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cc48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc4c:	ldr	r0, [r0, r1, lsl #2]
   1cc50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cc54:	eor	r0, r0, r1
   1cc58:	ldr	r1, [sp, #44]	; 0x2c
   1cc5c:	add	r0, r0, r1
   1cc60:	str	r0, [sp, #32]
   1cc64:	ldr	r0, [sp, #32]
   1cc68:	ldr	r1, [sp, #44]	; 0x2c
   1cc6c:	cmp	r0, r1
   1cc70:	mov	r0, r2
   1cc74:	movwcc	r0, #1
   1cc78:	str	r0, [sp, #44]	; 0x2c
   1cc7c:	ldr	r0, [sp, #36]	; 0x24
   1cc80:	ldr	r1, [sp, #32]
   1cc84:	orr	r0, r0, r1
   1cc88:	ldr	r1, [sp, #52]	; 0x34
   1cc8c:	eor	r0, r0, r1
   1cc90:	ldr	r1, [sp, #40]	; 0x28
   1cc94:	add	r0, r0, r1
   1cc98:	str	r0, [sp, #28]
   1cc9c:	ldr	r0, [sp, #28]
   1cca0:	ldr	r1, [sp, #40]	; 0x28
   1cca4:	cmp	r0, r1
   1cca8:	movwcc	r2, #1
   1ccac:	str	r2, [sp, #40]	; 0x28
   1ccb0:	ldr	r0, [sp, #28]
   1ccb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ccb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ccbc:	add	r1, r1, r2, lsl #2
   1ccc0:	str	r0, [r1]
   1ccc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccc8:	add	r0, r0, #1
   1cccc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ccd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ccd4:	cmp	r0, r1
   1ccd8:	blt	1cc08 <__assert_fail@plt+0xb774>
   1ccdc:	ldr	r0, [sp, #44]	; 0x2c
   1cce0:	cmp	r0, #0
   1cce4:	bne	1ccec <__assert_fail@plt+0xb858>
   1cce8:	b	1cd0c <__assert_fail@plt+0xb878>
   1ccec:	movw	r0, #18262	; 0x4756
   1ccf0:	movt	r0, #4
   1ccf4:	movw	r1, #16512	; 0x4080
   1ccf8:	movt	r1, #4
   1ccfc:	movw	r2, #3927	; 0xf57
   1cd00:	movw	r3, #18343	; 0x47a7
   1cd04:	movt	r3, #4
   1cd08:	bl	11494 <__assert_fail@plt>
   1cd0c:	b	1cd10 <__assert_fail@plt+0xb87c>
   1cd10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd18:	cmp	r0, r1
   1cd1c:	bge	1cdb4 <__assert_fail@plt+0xb920>
   1cd20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd28:	ldr	r0, [r0, r1, lsl #2]
   1cd2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cd30:	eor	r0, r0, r1
   1cd34:	ldr	r1, [sp, #48]	; 0x30
   1cd38:	add	r0, r0, r1
   1cd3c:	str	r0, [sp, #36]	; 0x24
   1cd40:	ldr	r0, [sp, #36]	; 0x24
   1cd44:	ldr	r1, [sp, #48]	; 0x30
   1cd48:	mov	r2, #0
   1cd4c:	cmp	r0, r1
   1cd50:	mov	r0, r2
   1cd54:	movwcc	r0, #1
   1cd58:	str	r0, [sp, #48]	; 0x30
   1cd5c:	ldr	r0, [sp, #36]	; 0x24
   1cd60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cd64:	orr	r0, r0, r1
   1cd68:	ldr	r1, [sp, #52]	; 0x34
   1cd6c:	eor	r0, r0, r1
   1cd70:	ldr	r1, [sp, #40]	; 0x28
   1cd74:	add	r0, r0, r1
   1cd78:	str	r0, [sp, #28]
   1cd7c:	ldr	r0, [sp, #28]
   1cd80:	ldr	r1, [sp, #40]	; 0x28
   1cd84:	cmp	r0, r1
   1cd88:	movwcc	r2, #1
   1cd8c:	str	r2, [sp, #40]	; 0x28
   1cd90:	ldr	r0, [sp, #28]
   1cd94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cd98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cd9c:	add	r1, r1, r2, lsl #2
   1cda0:	str	r0, [r1]
   1cda4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cda8:	add	r0, r0, #1
   1cdac:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdb0:	b	1cd10 <__assert_fail@plt+0xb87c>
   1cdb4:	ldr	r0, [sp, #40]	; 0x28
   1cdb8:	cmp	r0, #0
   1cdbc:	beq	1cde0 <__assert_fail@plt+0xb94c>
   1cdc0:	ldr	r0, [sp, #40]	; 0x28
   1cdc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cdc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cdcc:	add	r3, r2, #1
   1cdd0:	str	r3, [fp, #-24]	; 0xffffffe8
   1cdd4:	add	r1, r1, r2, lsl #2
   1cdd8:	str	r0, [r1]
   1cddc:	b	1cdf0 <__assert_fail@plt+0xb95c>
   1cde0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cde4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cde8:	bl	13c4c <__assert_fail@plt+0x27b8>
   1cdec:	str	r0, [fp, #-24]	; 0xffffffe8
   1cdf0:	ldr	r0, [sp, #52]	; 0x34
   1cdf4:	cmp	r0, #0
   1cdf8:	beq	1ce10 <__assert_fail@plt+0xb97c>
   1cdfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce00:	movw	r1, #0
   1ce04:	sub	r0, r1, r0
   1ce08:	str	r0, [sp]
   1ce0c:	b	1ce18 <__assert_fail@plt+0xb984>
   1ce10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce14:	str	r0, [sp]
   1ce18:	ldr	r0, [sp]
   1ce1c:	ldr	r1, [fp, #-4]
   1ce20:	str	r0, [r1, #4]
   1ce24:	mov	sp, fp
   1ce28:	pop	{fp, pc}
   1ce2c:	push	{fp, lr}
   1ce30:	mov	fp, sp
   1ce34:	sub	sp, sp, #96	; 0x60
   1ce38:	str	r0, [fp, #-4]
   1ce3c:	str	r1, [fp, #-8]
   1ce40:	str	r2, [fp, #-12]
   1ce44:	ldr	r0, [fp, #-8]
   1ce48:	ldr	r0, [r0, #4]
   1ce4c:	cmp	r0, #0
   1ce50:	blt	1ce64 <__assert_fail@plt+0xb9d0>
   1ce54:	ldr	r0, [fp, #-8]
   1ce58:	ldr	r0, [r0, #4]
   1ce5c:	str	r0, [sp, #12]
   1ce60:	b	1ce78 <__assert_fail@plt+0xb9e4>
   1ce64:	ldr	r0, [fp, #-8]
   1ce68:	ldr	r0, [r0, #4]
   1ce6c:	movw	r1, #0
   1ce70:	sub	r0, r1, r0
   1ce74:	str	r0, [sp, #12]
   1ce78:	ldr	r0, [sp, #12]
   1ce7c:	str	r0, [fp, #-16]
   1ce80:	ldr	r0, [fp, #-12]
   1ce84:	ldr	r0, [r0, #4]
   1ce88:	cmp	r0, #0
   1ce8c:	blt	1cea0 <__assert_fail@plt+0xba0c>
   1ce90:	ldr	r0, [fp, #-12]
   1ce94:	ldr	r0, [r0, #4]
   1ce98:	str	r0, [sp, #8]
   1ce9c:	b	1ceb4 <__assert_fail@plt+0xba20>
   1cea0:	ldr	r0, [fp, #-12]
   1cea4:	ldr	r0, [r0, #4]
   1cea8:	movw	r1, #0
   1ceac:	sub	r0, r1, r0
   1ceb0:	str	r0, [sp, #8]
   1ceb4:	ldr	r0, [sp, #8]
   1ceb8:	str	r0, [fp, #-20]	; 0xffffffec
   1cebc:	ldr	r0, [fp, #-16]
   1cec0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cec4:	cmp	r0, r1
   1cec8:	bge	1cf08 <__assert_fail@plt+0xba74>
   1cecc:	b	1ced0 <__assert_fail@plt+0xba3c>
   1ced0:	ldr	r0, [fp, #-8]
   1ced4:	str	r0, [sp, #20]
   1ced8:	ldr	r0, [fp, #-12]
   1cedc:	str	r0, [fp, #-8]
   1cee0:	ldr	r0, [sp, #20]
   1cee4:	str	r0, [fp, #-12]
   1cee8:	b	1ceec <__assert_fail@plt+0xba58>
   1ceec:	ldr	r0, [fp, #-16]
   1cef0:	str	r0, [sp, #16]
   1cef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cef8:	str	r0, [fp, #-16]
   1cefc:	ldr	r0, [sp, #16]
   1cf00:	str	r0, [fp, #-20]	; 0xffffffec
   1cf04:	b	1cf08 <__assert_fail@plt+0xba74>
   1cf08:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf0c:	cmp	r0, #0
   1cf10:	bne	1cf24 <__assert_fail@plt+0xba90>
   1cf14:	ldr	r0, [fp, #-4]
   1cf18:	ldr	r1, [fp, #-8]
   1cf1c:	bl	161dc <__assert_fail@plt+0x4d48>
   1cf20:	b	1d214 <__assert_fail@plt+0xbd80>
   1cf24:	ldr	r0, [fp, #-8]
   1cf28:	ldr	r0, [r0, #4]
   1cf2c:	cmp	r0, #0
   1cf30:	movw	r0, #0
   1cf34:	movlt	r0, #1
   1cf38:	and	r0, r0, #1
   1cf3c:	str	r0, [sp, #44]	; 0x2c
   1cf40:	ldr	r0, [fp, #-12]
   1cf44:	ldr	r0, [r0, #4]
   1cf48:	cmp	r0, #0
   1cf4c:	movw	r0, #0
   1cf50:	movlt	r0, #1
   1cf54:	and	r0, r0, #1
   1cf58:	str	r0, [sp, #40]	; 0x28
   1cf5c:	ldr	r0, [sp, #44]	; 0x2c
   1cf60:	ldr	r1, [sp, #40]	; 0x28
   1cf64:	eor	r0, r0, r1
   1cf68:	str	r0, [sp, #36]	; 0x24
   1cf6c:	ldr	r0, [sp, #44]	; 0x2c
   1cf70:	movw	r1, #0
   1cf74:	sub	r0, r1, r0
   1cf78:	str	r0, [fp, #-40]	; 0xffffffd8
   1cf7c:	ldr	r0, [sp, #40]	; 0x28
   1cf80:	sub	r0, r1, r0
   1cf84:	str	r0, [fp, #-44]	; 0xffffffd4
   1cf88:	ldr	r0, [sp, #36]	; 0x24
   1cf8c:	sub	r0, r1, r0
   1cf90:	str	r0, [sp, #48]	; 0x30
   1cf94:	ldr	r0, [fp, #-16]
   1cf98:	ldr	r1, [sp, #36]	; 0x24
   1cf9c:	add	r0, r0, r1
   1cfa0:	ldr	r1, [fp, #-4]
   1cfa4:	ldr	r1, [r1]
   1cfa8:	cmp	r0, r1
   1cfac:	ble	1cfcc <__assert_fail@plt+0xbb38>
   1cfb0:	ldr	r0, [fp, #-4]
   1cfb4:	ldr	r1, [fp, #-16]
   1cfb8:	ldr	r2, [sp, #36]	; 0x24
   1cfbc:	add	r1, r1, r2
   1cfc0:	bl	160ec <__assert_fail@plt+0x4c58>
   1cfc4:	str	r0, [sp, #4]
   1cfc8:	b	1cfd8 <__assert_fail@plt+0xbb44>
   1cfcc:	ldr	r0, [fp, #-4]
   1cfd0:	ldr	r0, [r0, #8]
   1cfd4:	str	r0, [sp, #4]
   1cfd8:	ldr	r0, [sp, #4]
   1cfdc:	str	r0, [fp, #-36]	; 0xffffffdc
   1cfe0:	ldr	r0, [fp, #-8]
   1cfe4:	ldr	r0, [r0, #8]
   1cfe8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfec:	ldr	r0, [fp, #-12]
   1cff0:	ldr	r0, [r0, #8]
   1cff4:	str	r0, [fp, #-32]	; 0xffffffe0
   1cff8:	movw	r0, #0
   1cffc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d000:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d008:	ldr	r0, [r0, r1, lsl #2]
   1d00c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d010:	eor	r0, r0, r1
   1d014:	ldr	r1, [sp, #44]	; 0x2c
   1d018:	add	r0, r0, r1
   1d01c:	str	r0, [sp, #32]
   1d020:	ldr	r0, [sp, #32]
   1d024:	ldr	r1, [sp, #44]	; 0x2c
   1d028:	mov	r2, #0
   1d02c:	cmp	r0, r1
   1d030:	mov	r0, r2
   1d034:	movwcc	r0, #1
   1d038:	str	r0, [sp, #44]	; 0x2c
   1d03c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d044:	ldr	r0, [r0, r1, lsl #2]
   1d048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d04c:	eor	r0, r0, r1
   1d050:	ldr	r1, [sp, #40]	; 0x28
   1d054:	add	r0, r0, r1
   1d058:	str	r0, [sp, #28]
   1d05c:	ldr	r0, [sp, #28]
   1d060:	ldr	r1, [sp, #40]	; 0x28
   1d064:	cmp	r0, r1
   1d068:	mov	r0, r2
   1d06c:	movwcc	r0, #1
   1d070:	str	r0, [sp, #40]	; 0x28
   1d074:	ldr	r0, [sp, #32]
   1d078:	ldr	r1, [sp, #28]
   1d07c:	eor	r0, r0, r1
   1d080:	ldr	r1, [sp, #48]	; 0x30
   1d084:	eor	r0, r0, r1
   1d088:	ldr	r1, [sp, #36]	; 0x24
   1d08c:	add	r0, r0, r1
   1d090:	str	r0, [sp, #24]
   1d094:	ldr	r0, [sp, #24]
   1d098:	ldr	r1, [sp, #36]	; 0x24
   1d09c:	cmp	r0, r1
   1d0a0:	movwcc	r2, #1
   1d0a4:	str	r2, [sp, #36]	; 0x24
   1d0a8:	ldr	r0, [sp, #24]
   1d0ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d0b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d0b4:	add	r1, r1, r2, lsl #2
   1d0b8:	str	r0, [r1]
   1d0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0c0:	add	r0, r0, #1
   1d0c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d0c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d0cc:	cmp	r0, r1
   1d0d0:	blt	1d000 <__assert_fail@plt+0xbb6c>
   1d0d4:	ldr	r0, [sp, #40]	; 0x28
   1d0d8:	cmp	r0, #0
   1d0dc:	bne	1d0e4 <__assert_fail@plt+0xbc50>
   1d0e0:	b	1d104 <__assert_fail@plt+0xbc70>
   1d0e4:	movw	r0, #18262	; 0x4756
   1d0e8:	movt	r0, #4
   1d0ec:	movw	r1, #16512	; 0x4080
   1d0f0:	movt	r1, #4
   1d0f4:	movw	r2, #3996	; 0xf9c
   1d0f8:	movw	r3, #18416	; 0x47f0
   1d0fc:	movt	r3, #4
   1d100:	bl	11494 <__assert_fail@plt>
   1d104:	b	1d108 <__assert_fail@plt+0xbc74>
   1d108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d10c:	ldr	r1, [fp, #-16]
   1d110:	cmp	r0, r1
   1d114:	bge	1d1a4 <__assert_fail@plt+0xbd10>
   1d118:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d11c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d120:	ldr	r0, [r0, r1, lsl #2]
   1d124:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d128:	eor	r0, r0, r1
   1d12c:	ldr	r1, [sp, #44]	; 0x2c
   1d130:	add	r0, r0, r1
   1d134:	str	r0, [sp, #32]
   1d138:	ldr	r0, [sp, #32]
   1d13c:	ldr	r1, [sp, #44]	; 0x2c
   1d140:	mov	r2, #0
   1d144:	cmp	r0, r1
   1d148:	mov	r0, r2
   1d14c:	movwcc	r0, #1
   1d150:	str	r0, [sp, #44]	; 0x2c
   1d154:	ldr	r0, [sp, #32]
   1d158:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d15c:	eor	r0, r0, r1
   1d160:	ldr	r1, [sp, #36]	; 0x24
   1d164:	add	r0, r0, r1
   1d168:	str	r0, [sp, #24]
   1d16c:	ldr	r0, [sp, #24]
   1d170:	ldr	r1, [sp, #36]	; 0x24
   1d174:	cmp	r0, r1
   1d178:	movwcc	r2, #1
   1d17c:	str	r2, [sp, #36]	; 0x24
   1d180:	ldr	r0, [sp, #24]
   1d184:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d18c:	add	r1, r1, r2, lsl #2
   1d190:	str	r0, [r1]
   1d194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d198:	add	r0, r0, #1
   1d19c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d1a0:	b	1d108 <__assert_fail@plt+0xbc74>
   1d1a4:	ldr	r0, [sp, #36]	; 0x24
   1d1a8:	cmp	r0, #0
   1d1ac:	beq	1d1d0 <__assert_fail@plt+0xbd3c>
   1d1b0:	ldr	r0, [sp, #36]	; 0x24
   1d1b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d1b8:	ldr	r2, [fp, #-16]
   1d1bc:	add	r3, r2, #1
   1d1c0:	str	r3, [fp, #-16]
   1d1c4:	add	r1, r1, r2, lsl #2
   1d1c8:	str	r0, [r1]
   1d1cc:	b	1d1e0 <__assert_fail@plt+0xbd4c>
   1d1d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d1d4:	ldr	r1, [fp, #-16]
   1d1d8:	bl	13c4c <__assert_fail@plt+0x27b8>
   1d1dc:	str	r0, [fp, #-16]
   1d1e0:	ldr	r0, [sp, #48]	; 0x30
   1d1e4:	cmp	r0, #0
   1d1e8:	beq	1d200 <__assert_fail@plt+0xbd6c>
   1d1ec:	ldr	r0, [fp, #-16]
   1d1f0:	movw	r1, #0
   1d1f4:	sub	r0, r1, r0
   1d1f8:	str	r0, [sp]
   1d1fc:	b	1d208 <__assert_fail@plt+0xbd74>
   1d200:	ldr	r0, [fp, #-16]
   1d204:	str	r0, [sp]
   1d208:	ldr	r0, [sp]
   1d20c:	ldr	r1, [fp, #-4]
   1d210:	str	r0, [r1, #4]
   1d214:	mov	sp, fp
   1d218:	pop	{fp, pc}
   1d21c:	push	{fp, lr}
   1d220:	mov	fp, sp
   1d224:	sub	sp, sp, #16
   1d228:	str	r0, [fp, #-4]
   1d22c:	str	r1, [sp, #8]
   1d230:	movw	r0, #0
   1d234:	str	r0, [sp]
   1d238:	str	r0, [sp, #4]
   1d23c:	ldr	r0, [sp, #4]
   1d240:	ldr	r1, [sp, #8]
   1d244:	cmp	r0, r1
   1d248:	bge	1d27c <__assert_fail@plt+0xbde8>
   1d24c:	ldr	r0, [fp, #-4]
   1d250:	ldr	r1, [sp, #4]
   1d254:	add	r0, r0, r1, lsl #2
   1d258:	ldr	r0, [r0]
   1d25c:	bl	1d288 <__assert_fail@plt+0xbdf4>
   1d260:	ldr	r1, [sp]
   1d264:	add	r0, r1, r0
   1d268:	str	r0, [sp]
   1d26c:	ldr	r0, [sp, #4]
   1d270:	add	r0, r0, #1
   1d274:	str	r0, [sp, #4]
   1d278:	b	1d23c <__assert_fail@plt+0xbda8>
   1d27c:	ldr	r0, [sp]
   1d280:	mov	sp, fp
   1d284:	pop	{fp, pc}
   1d288:	sub	sp, sp, #16
   1d28c:	str	r0, [sp, #12]
   1d290:	movw	r0, #16
   1d294:	str	r0, [sp, #4]
   1d298:	movw	r0, #0
   1d29c:	str	r0, [sp, #8]
   1d2a0:	ldr	r0, [sp, #12]
   1d2a4:	cmp	r0, #0
   1d2a8:	bls	1d358 <__assert_fail@plt+0xbec4>
   1d2ac:	ldr	r0, [sp, #12]
   1d2b0:	ldr	r1, [sp, #12]
   1d2b4:	lsr	r1, r1, #1
   1d2b8:	movw	r2, #21845	; 0x5555
   1d2bc:	and	r1, r1, r2
   1d2c0:	sub	r0, r0, r1
   1d2c4:	str	r0, [sp]
   1d2c8:	ldr	r0, [sp]
   1d2cc:	lsr	r0, r0, #2
   1d2d0:	movw	r1, #13107	; 0x3333
   1d2d4:	and	r0, r0, r1
   1d2d8:	ldr	r2, [sp]
   1d2dc:	and	r1, r2, r1
   1d2e0:	add	r0, r0, r1
   1d2e4:	str	r0, [sp]
   1d2e8:	ldr	r0, [sp]
   1d2ec:	lsr	r0, r0, #4
   1d2f0:	ldr	r1, [sp]
   1d2f4:	add	r0, r0, r1
   1d2f8:	str	r0, [sp]
   1d2fc:	ldr	r0, [sp]
   1d300:	lsr	r0, r0, #8
   1d304:	and	r0, r0, #15
   1d308:	ldr	r1, [sp]
   1d30c:	and	r1, r1, #15
   1d310:	add	r0, r0, r1
   1d314:	str	r0, [sp]
   1d318:	ldr	r0, [sp]
   1d31c:	ldr	r1, [sp, #8]
   1d320:	add	r0, r1, r0
   1d324:	str	r0, [sp, #8]
   1d328:	ldr	r0, [sp, #4]
   1d32c:	movw	r1, #32
   1d330:	cmp	r1, r0
   1d334:	bls	1d34c <__assert_fail@plt+0xbeb8>
   1d338:	ldr	r0, [sp, #4]
   1d33c:	ldr	r1, [sp, #12]
   1d340:	lsr	r0, r1, r0
   1d344:	str	r0, [sp, #12]
   1d348:	b	1d354 <__assert_fail@plt+0xbec0>
   1d34c:	movw	r0, #0
   1d350:	str	r0, [sp, #12]
   1d354:	b	1d2a0 <__assert_fail@plt+0xbe0c>
   1d358:	ldr	r0, [sp, #8]
   1d35c:	add	sp, sp, #16
   1d360:	bx	lr
   1d364:	push	{fp, lr}
   1d368:	mov	fp, sp
   1d36c:	sub	sp, sp, #16
   1d370:	str	r0, [sp, #8]
   1d374:	ldr	r0, [sp, #8]
   1d378:	ldr	r0, [r0, #4]
   1d37c:	str	r0, [sp, #4]
   1d380:	ldr	r0, [sp, #4]
   1d384:	cmp	r0, #0
   1d388:	bge	1d398 <__assert_fail@plt+0xbf04>
   1d38c:	mvn	r0, #0
   1d390:	str	r0, [fp, #-4]
   1d394:	b	1d3ac <__assert_fail@plt+0xbf18>
   1d398:	ldr	r0, [sp, #8]
   1d39c:	ldr	r0, [r0, #8]
   1d3a0:	ldr	r1, [sp, #4]
   1d3a4:	bl	1d21c <__assert_fail@plt+0xbd88>
   1d3a8:	str	r0, [fp, #-4]
   1d3ac:	ldr	r0, [fp, #-4]
   1d3b0:	mov	sp, fp
   1d3b4:	pop	{fp, pc}
   1d3b8:	push	{fp, lr}
   1d3bc:	mov	fp, sp
   1d3c0:	sub	sp, sp, #64	; 0x40
   1d3c4:	str	r0, [fp, #-8]
   1d3c8:	str	r1, [fp, #-12]
   1d3cc:	ldr	r0, [fp, #-8]
   1d3d0:	ldr	r0, [r0, #4]
   1d3d4:	str	r0, [fp, #-16]
   1d3d8:	ldr	r0, [fp, #-12]
   1d3dc:	ldr	r0, [r0, #4]
   1d3e0:	str	r0, [fp, #-20]	; 0xffffffec
   1d3e4:	ldr	r0, [fp, #-16]
   1d3e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d3ec:	eor	r0, r0, r1
   1d3f0:	cmp	r0, #0
   1d3f4:	bge	1d404 <__assert_fail@plt+0xbf70>
   1d3f8:	mvn	r0, #0
   1d3fc:	str	r0, [fp, #-4]
   1d400:	b	1d668 <__assert_fail@plt+0xc1d4>
   1d404:	ldr	r0, [fp, #-16]
   1d408:	cmp	r0, #0
   1d40c:	movw	r0, #0
   1d410:	movlt	r0, #1
   1d414:	and	r0, r0, #1
   1d418:	str	r0, [sp, #32]
   1d41c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d420:	movw	r1, #0
   1d424:	sub	r0, r1, r0
   1d428:	str	r0, [sp, #20]
   1d42c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d430:	cmp	r0, #0
   1d434:	beq	1d484 <__assert_fail@plt+0xbff0>
   1d438:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d43c:	cmp	r0, #0
   1d440:	bge	1d448 <__assert_fail@plt+0xbfb4>
   1d444:	b	1d468 <__assert_fail@plt+0xbfd4>
   1d448:	movw	r0, #18489	; 0x4839
   1d44c:	movt	r0, #4
   1d450:	movw	r1, #16512	; 0x4080
   1d454:	movt	r1, #4
   1d458:	movw	r2, #4079	; 0xfef
   1d45c:	movw	r3, #18496	; 0x4840
   1d460:	movt	r3, #4
   1d464:	bl	11494 <__assert_fail@plt>
   1d468:	ldr	r0, [fp, #-16]
   1d46c:	movw	r1, #0
   1d470:	sub	r0, r1, r0
   1d474:	str	r0, [fp, #-16]
   1d478:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d47c:	sub	r0, r1, r0
   1d480:	str	r0, [fp, #-20]	; 0xffffffec
   1d484:	ldr	r0, [fp, #-8]
   1d488:	ldr	r0, [r0, #8]
   1d48c:	str	r0, [sp, #16]
   1d490:	ldr	r0, [fp, #-12]
   1d494:	ldr	r0, [r0, #8]
   1d498:	str	r0, [sp, #12]
   1d49c:	ldr	r0, [fp, #-16]
   1d4a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4a4:	cmp	r0, r1
   1d4a8:	bge	1d4f0 <__assert_fail@plt+0xc05c>
   1d4ac:	b	1d4b0 <__assert_fail@plt+0xc01c>
   1d4b0:	b	1d4b4 <__assert_fail@plt+0xc020>
   1d4b4:	ldr	r0, [sp, #16]
   1d4b8:	str	r0, [sp, #4]
   1d4bc:	ldr	r0, [sp, #12]
   1d4c0:	str	r0, [sp, #16]
   1d4c4:	ldr	r0, [sp, #4]
   1d4c8:	str	r0, [sp, #12]
   1d4cc:	b	1d4d0 <__assert_fail@plt+0xc03c>
   1d4d0:	ldr	r0, [fp, #-16]
   1d4d4:	str	r0, [sp]
   1d4d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d4dc:	str	r0, [fp, #-16]
   1d4e0:	ldr	r0, [sp]
   1d4e4:	str	r0, [fp, #-20]	; 0xffffffec
   1d4e8:	b	1d4ec <__assert_fail@plt+0xc058>
   1d4ec:	b	1d4f0 <__assert_fail@plt+0xc05c>
   1d4f0:	movw	r0, #0
   1d4f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d4f8:	str	r0, [sp, #8]
   1d4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d500:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d504:	cmp	r0, r1
   1d508:	bge	1d5b0 <__assert_fail@plt+0xc11c>
   1d50c:	ldr	r0, [sp, #16]
   1d510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d514:	ldr	r0, [r0, r1, lsl #2]
   1d518:	ldr	r1, [sp, #20]
   1d51c:	eor	r0, r0, r1
   1d520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d524:	add	r0, r0, r1
   1d528:	str	r0, [sp, #28]
   1d52c:	ldr	r0, [sp, #28]
   1d530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d534:	mov	r2, #0
   1d538:	cmp	r0, r1
   1d53c:	movwcc	r2, #1
   1d540:	str	r2, [fp, #-28]	; 0xffffffe4
   1d544:	ldr	r0, [sp, #12]
   1d548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d54c:	add	r0, r0, r1, lsl #2
   1d550:	ldr	r0, [r0]
   1d554:	ldr	r1, [sp, #20]
   1d558:	eor	r0, r0, r1
   1d55c:	ldr	r1, [sp, #32]
   1d560:	add	r0, r0, r1
   1d564:	str	r0, [sp, #24]
   1d568:	ldr	r0, [sp, #24]
   1d56c:	ldr	r1, [sp, #32]
   1d570:	cmp	r0, r1
   1d574:	movw	r0, #0
   1d578:	movcc	r0, #1
   1d57c:	and	r0, r0, #1
   1d580:	str	r0, [sp, #32]
   1d584:	ldr	r0, [sp, #28]
   1d588:	ldr	r1, [sp, #24]
   1d58c:	eor	r0, r0, r1
   1d590:	bl	1d288 <__assert_fail@plt+0xbdf4>
   1d594:	ldr	r1, [sp, #8]
   1d598:	add	r0, r1, r0
   1d59c:	str	r0, [sp, #8]
   1d5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5a4:	add	r0, r0, #1
   1d5a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d5ac:	b	1d4fc <__assert_fail@plt+0xc068>
   1d5b0:	ldr	r0, [sp, #32]
   1d5b4:	cmp	r0, #0
   1d5b8:	bne	1d5c0 <__assert_fail@plt+0xc12c>
   1d5bc:	b	1d5e0 <__assert_fail@plt+0xc14c>
   1d5c0:	movw	r0, #18262	; 0x4756
   1d5c4:	movt	r0, #4
   1d5c8:	movw	r1, #16512	; 0x4080
   1d5cc:	movt	r1, #4
   1d5d0:	movw	r2, #4100	; 0x1004
   1d5d4:	movw	r3, #18496	; 0x4840
   1d5d8:	movt	r3, #4
   1d5dc:	bl	11494 <__assert_fail@plt>
   1d5e0:	b	1d5e4 <__assert_fail@plt+0xc150>
   1d5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5e8:	ldr	r1, [fp, #-16]
   1d5ec:	cmp	r0, r1
   1d5f0:	bge	1d660 <__assert_fail@plt+0xc1cc>
   1d5f4:	ldr	r0, [sp, #16]
   1d5f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5fc:	add	r0, r0, r1, lsl #2
   1d600:	ldr	r0, [r0]
   1d604:	ldr	r1, [sp, #20]
   1d608:	eor	r0, r0, r1
   1d60c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d610:	add	r0, r0, r1
   1d614:	str	r0, [sp, #28]
   1d618:	ldr	r0, [sp, #28]
   1d61c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d620:	cmp	r0, r1
   1d624:	movw	r0, #0
   1d628:	movcc	r0, #1
   1d62c:	and	r0, r0, #1
   1d630:	str	r0, [fp, #-28]	; 0xffffffe4
   1d634:	ldr	r0, [sp, #28]
   1d638:	ldr	r1, [sp, #20]
   1d63c:	eor	r0, r0, r1
   1d640:	bl	1d288 <__assert_fail@plt+0xbdf4>
   1d644:	ldr	r1, [sp, #8]
   1d648:	add	r0, r1, r0
   1d64c:	str	r0, [sp, #8]
   1d650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d654:	add	r0, r0, #1
   1d658:	str	r0, [fp, #-24]	; 0xffffffe8
   1d65c:	b	1d5e4 <__assert_fail@plt+0xc150>
   1d660:	ldr	r0, [sp, #8]
   1d664:	str	r0, [fp, #-4]
   1d668:	ldr	r0, [fp, #-4]
   1d66c:	mov	sp, fp
   1d670:	pop	{fp, pc}
   1d674:	push	{fp, lr}
   1d678:	mov	fp, sp
   1d67c:	sub	sp, sp, #48	; 0x30
   1d680:	str	r0, [fp, #-8]
   1d684:	str	r1, [fp, #-12]
   1d688:	ldr	r0, [fp, #-8]
   1d68c:	ldr	r0, [r0, #4]
   1d690:	str	r0, [fp, #-20]	; 0xffffffec
   1d694:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d698:	cmp	r0, #0
   1d69c:	blt	1d6ac <__assert_fail@plt+0xc218>
   1d6a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6a4:	str	r0, [sp, #8]
   1d6a8:	b	1d6bc <__assert_fail@plt+0xc228>
   1d6ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6b0:	movw	r1, #0
   1d6b4:	sub	r0, r1, r0
   1d6b8:	str	r0, [sp, #8]
   1d6bc:	ldr	r0, [sp, #8]
   1d6c0:	str	r0, [sp, #24]
   1d6c4:	ldr	r0, [fp, #-12]
   1d6c8:	lsr	r0, r0, #5
   1d6cc:	str	r0, [sp, #20]
   1d6d0:	ldr	r0, [sp, #20]
   1d6d4:	ldr	r1, [sp, #24]
   1d6d8:	cmp	r0, r1
   1d6dc:	blt	1d70c <__assert_fail@plt+0xc278>
   1d6e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6e4:	cmp	r0, #0
   1d6e8:	blt	1d6f8 <__assert_fail@plt+0xc264>
   1d6ec:	mvn	r0, #0
   1d6f0:	str	r0, [sp, #4]
   1d6f4:	b	1d700 <__assert_fail@plt+0xc26c>
   1d6f8:	ldr	r0, [fp, #-12]
   1d6fc:	str	r0, [sp, #4]
   1d700:	ldr	r0, [sp, #4]
   1d704:	str	r0, [fp, #-4]
   1d708:	b	1d7d4 <__assert_fail@plt+0xc340>
   1d70c:	ldr	r0, [fp, #-8]
   1d710:	ldr	r0, [r0, #8]
   1d714:	str	r0, [fp, #-16]
   1d718:	mov	r0, #0
   1d71c:	str	r0, [sp, #12]
   1d720:	ldr	r0, [fp, #-16]
   1d724:	ldr	r1, [sp, #20]
   1d728:	add	r0, r0, r1, lsl #2
   1d72c:	ldr	r0, [r0]
   1d730:	str	r0, [sp, #16]
   1d734:	ldr	r0, [fp, #-12]
   1d738:	cmp	r0, #0
   1d73c:	beq	1d7b4 <__assert_fail@plt+0xc320>
   1d740:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d744:	cmp	r0, #0
   1d748:	bge	1d798 <__assert_fail@plt+0xc304>
   1d74c:	ldr	r0, [fp, #-16]
   1d750:	ldr	r1, [sp, #20]
   1d754:	bl	13c14 <__assert_fail@plt+0x2780>
   1d758:	str	r0, [sp, #12]
   1d75c:	ldr	r0, [sp, #16]
   1d760:	mvn	r1, #0
   1d764:	eor	r0, r0, r1
   1d768:	ldr	r1, [sp, #12]
   1d76c:	add	r0, r0, r1
   1d770:	str	r0, [sp, #16]
   1d774:	ldr	r0, [sp, #16]
   1d778:	ldr	r1, [sp, #12]
   1d77c:	cmp	r0, r1
   1d780:	movw	r0, #0
   1d784:	movcs	r0, #1
   1d788:	and	r0, r0, #1
   1d78c:	movw	r1, #0
   1d790:	sub	r0, r1, r0
   1d794:	str	r0, [sp, #12]
   1d798:	ldr	r0, [fp, #-12]
   1d79c:	and	r0, r0, #31
   1d7a0:	mvn	r1, #0
   1d7a4:	lsl	r0, r1, r0
   1d7a8:	ldr	r1, [sp, #16]
   1d7ac:	and	r0, r1, r0
   1d7b0:	str	r0, [sp, #16]
   1d7b4:	ldr	r0, [sp, #16]
   1d7b8:	ldr	r1, [sp, #20]
   1d7bc:	ldr	r2, [fp, #-16]
   1d7c0:	ldr	r3, [sp, #24]
   1d7c4:	ldr	ip, [sp, #12]
   1d7c8:	str	ip, [sp]
   1d7cc:	bl	14d4c <__assert_fail@plt+0x38b8>
   1d7d0:	str	r0, [fp, #-4]
   1d7d4:	ldr	r0, [fp, #-4]
   1d7d8:	mov	sp, fp
   1d7dc:	pop	{fp, pc}
   1d7e0:	push	{fp, lr}
   1d7e4:	mov	fp, sp
   1d7e8:	sub	sp, sp, #48	; 0x30
   1d7ec:	str	r0, [fp, #-8]
   1d7f0:	str	r1, [fp, #-12]
   1d7f4:	ldr	r0, [fp, #-8]
   1d7f8:	ldr	r0, [r0, #4]
   1d7fc:	str	r0, [fp, #-20]	; 0xffffffec
   1d800:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d804:	cmp	r0, #0
   1d808:	movw	r0, #0
   1d80c:	movge	r0, #1
   1d810:	and	r0, r0, #1
   1d814:	movw	r1, #0
   1d818:	sub	r0, r1, r0
   1d81c:	str	r0, [sp, #12]
   1d820:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d824:	cmp	r0, #0
   1d828:	blt	1d838 <__assert_fail@plt+0xc3a4>
   1d82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d830:	str	r0, [sp, #8]
   1d834:	b	1d848 <__assert_fail@plt+0xc3b4>
   1d838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d83c:	movw	r1, #0
   1d840:	sub	r0, r1, r0
   1d844:	str	r0, [sp, #8]
   1d848:	ldr	r0, [sp, #8]
   1d84c:	str	r0, [sp, #24]
   1d850:	ldr	r0, [fp, #-12]
   1d854:	lsr	r0, r0, #5
   1d858:	str	r0, [sp, #20]
   1d85c:	ldr	r0, [sp, #20]
   1d860:	ldr	r1, [sp, #24]
   1d864:	cmp	r0, r1
   1d868:	blt	1d89c <__assert_fail@plt+0xc408>
   1d86c:	ldr	r0, [sp, #12]
   1d870:	cmp	r0, #0
   1d874:	beq	1d884 <__assert_fail@plt+0xc3f0>
   1d878:	ldr	r0, [fp, #-12]
   1d87c:	str	r0, [sp, #4]
   1d880:	b	1d890 <__assert_fail@plt+0xc3fc>
   1d884:	mvn	r0, #0
   1d888:	str	r0, [sp, #4]
   1d88c:	b	1d890 <__assert_fail@plt+0xc3fc>
   1d890:	ldr	r0, [sp, #4]
   1d894:	str	r0, [fp, #-4]
   1d898:	b	1d924 <__assert_fail@plt+0xc490>
   1d89c:	ldr	r0, [fp, #-8]
   1d8a0:	ldr	r0, [r0, #8]
   1d8a4:	str	r0, [fp, #-16]
   1d8a8:	ldr	r0, [fp, #-16]
   1d8ac:	ldr	r1, [sp, #20]
   1d8b0:	add	r0, r0, r1, lsl #2
   1d8b4:	ldr	r0, [r0]
   1d8b8:	ldr	r1, [sp, #12]
   1d8bc:	eor	r0, r0, r1
   1d8c0:	str	r0, [sp, #16]
   1d8c4:	ldr	r0, [sp, #12]
   1d8c8:	cmp	r0, #0
   1d8cc:	bne	1d8e8 <__assert_fail@plt+0xc454>
   1d8d0:	ldr	r0, [fp, #-16]
   1d8d4:	ldr	r1, [sp, #20]
   1d8d8:	bl	13c14 <__assert_fail@plt+0x2780>
   1d8dc:	ldr	r1, [sp, #16]
   1d8e0:	sub	r0, r1, r0
   1d8e4:	str	r0, [sp, #16]
   1d8e8:	ldr	r0, [fp, #-12]
   1d8ec:	and	r0, r0, #31
   1d8f0:	mvn	r1, #0
   1d8f4:	lsl	r0, r1, r0
   1d8f8:	ldr	r1, [sp, #16]
   1d8fc:	and	r0, r1, r0
   1d900:	str	r0, [sp, #16]
   1d904:	ldr	r0, [sp, #16]
   1d908:	ldr	r1, [sp, #20]
   1d90c:	ldr	r2, [fp, #-16]
   1d910:	ldr	r3, [sp, #24]
   1d914:	ldr	ip, [sp, #12]
   1d918:	str	ip, [sp]
   1d91c:	bl	14d4c <__assert_fail@plt+0x38b8>
   1d920:	str	r0, [fp, #-4]
   1d924:	ldr	r0, [fp, #-4]
   1d928:	mov	sp, fp
   1d92c:	pop	{fp, pc}
   1d930:	push	{fp, lr}
   1d934:	mov	fp, sp
   1d938:	sub	sp, sp, #24
   1d93c:	str	r0, [fp, #-4]
   1d940:	ldr	r0, [fp, #-4]
   1d944:	cmp	r0, #0
   1d948:	bls	1d950 <__assert_fail@plt+0xc4bc>
   1d94c:	b	1d970 <__assert_fail@plt+0xc4dc>
   1d950:	movw	r0, #21264	; 0x5310
   1d954:	movt	r0, #4
   1d958:	movw	r1, #16512	; 0x4080
   1d95c:	movt	r1, #4
   1d960:	movw	r2, #1210	; 0x4ba
   1d964:	movw	r3, #21270	; 0x5316
   1d968:	movt	r3, #4
   1d96c:	bl	11494 <__assert_fail@plt>
   1d970:	b	1d974 <__assert_fail@plt+0xc4e0>
   1d974:	ldr	r0, [fp, #-4]
   1d978:	str	r0, [sp, #12]
   1d97c:	movw	r0, #0
   1d980:	str	r0, [sp, #8]
   1d984:	movw	r0, #8
   1d988:	str	r0, [sp, #4]
   1d98c:	ldr	r0, [sp, #4]
   1d990:	movw	r1, #32
   1d994:	cmp	r1, r0
   1d998:	bls	1d9d4 <__assert_fail@plt+0xc540>
   1d99c:	b	1d9a0 <__assert_fail@plt+0xc50c>
   1d9a0:	ldr	r0, [sp, #12]
   1d9a4:	and	r0, r0, #-16777216	; 0xff000000
   1d9a8:	cmp	r0, #0
   1d9ac:	bne	1d9d0 <__assert_fail@plt+0xc53c>
   1d9b0:	ldr	r0, [sp, #4]
   1d9b4:	ldr	r1, [sp, #12]
   1d9b8:	lsl	r0, r1, r0
   1d9bc:	str	r0, [sp, #12]
   1d9c0:	ldr	r0, [sp, #8]
   1d9c4:	add	r0, r0, #8
   1d9c8:	str	r0, [sp, #8]
   1d9cc:	b	1d9a0 <__assert_fail@plt+0xc50c>
   1d9d0:	b	1d9d4 <__assert_fail@plt+0xc540>
   1d9d4:	b	1d9d8 <__assert_fail@plt+0xc544>
   1d9d8:	ldr	r0, [sp, #12]
   1d9dc:	and	r0, r0, #-2147483648	; 0x80000000
   1d9e0:	cmp	r0, #0
   1d9e4:	bne	1da04 <__assert_fail@plt+0xc570>
   1d9e8:	ldr	r0, [sp, #12]
   1d9ec:	lsl	r0, r0, #1
   1d9f0:	str	r0, [sp, #12]
   1d9f4:	ldr	r0, [sp, #8]
   1d9f8:	add	r0, r0, #1
   1d9fc:	str	r0, [sp, #8]
   1da00:	b	1d9d8 <__assert_fail@plt+0xc544>
   1da04:	ldr	r0, [sp, #8]
   1da08:	str	r0, [fp, #-8]
   1da0c:	ldr	r0, [fp, #-8]
   1da10:	movw	r1, #32
   1da14:	sub	r0, r1, r0
   1da18:	mov	sp, fp
   1da1c:	pop	{fp, pc}
   1da20:	push	{fp, lr}
   1da24:	mov	fp, sp
   1da28:	sub	sp, sp, #24
   1da2c:	str	r0, [fp, #-4]
   1da30:	str	r1, [fp, #-8]
   1da34:	ldr	r0, [fp, #-8]
   1da38:	cmp	r0, #0
   1da3c:	bls	1da44 <__assert_fail@plt+0xc5b0>
   1da40:	b	1da64 <__assert_fail@plt+0xc5d0>
   1da44:	movw	r0, #21317	; 0x5345
   1da48:	movt	r0, #4
   1da4c:	movw	r1, #16512	; 0x4080
   1da50:	movt	r1, #4
   1da54:	movw	r2, #902	; 0x386
   1da58:	movw	r3, #21323	; 0x534b
   1da5c:	movt	r3, #4
   1da60:	bl	11494 <__assert_fail@plt>
   1da64:	b	1da68 <__assert_fail@plt+0xc5d4>
   1da68:	ldr	r0, [fp, #-8]
   1da6c:	str	r0, [sp, #8]
   1da70:	movw	r0, #0
   1da74:	str	r0, [sp, #4]
   1da78:	movw	r0, #8
   1da7c:	str	r0, [sp]
   1da80:	ldr	r0, [sp]
   1da84:	movw	r1, #32
   1da88:	cmp	r1, r0
   1da8c:	bls	1dac8 <__assert_fail@plt+0xc634>
   1da90:	b	1da94 <__assert_fail@plt+0xc600>
   1da94:	ldr	r0, [sp, #8]
   1da98:	and	r0, r0, #-16777216	; 0xff000000
   1da9c:	cmp	r0, #0
   1daa0:	bne	1dac4 <__assert_fail@plt+0xc630>
   1daa4:	ldr	r0, [sp]
   1daa8:	ldr	r1, [sp, #8]
   1daac:	lsl	r0, r1, r0
   1dab0:	str	r0, [sp, #8]
   1dab4:	ldr	r0, [sp, #4]
   1dab8:	add	r0, r0, #8
   1dabc:	str	r0, [sp, #4]
   1dac0:	b	1da94 <__assert_fail@plt+0xc600>
   1dac4:	b	1dac8 <__assert_fail@plt+0xc634>
   1dac8:	b	1dacc <__assert_fail@plt+0xc638>
   1dacc:	ldr	r0, [sp, #8]
   1dad0:	and	r0, r0, #-2147483648	; 0x80000000
   1dad4:	cmp	r0, #0
   1dad8:	bne	1daf8 <__assert_fail@plt+0xc664>
   1dadc:	ldr	r0, [sp, #8]
   1dae0:	lsl	r0, r0, #1
   1dae4:	str	r0, [sp, #8]
   1dae8:	ldr	r0, [sp, #4]
   1daec:	add	r0, r0, #1
   1daf0:	str	r0, [sp, #4]
   1daf4:	b	1dacc <__assert_fail@plt+0xc638>
   1daf8:	ldr	r0, [sp, #4]
   1dafc:	str	r0, [sp, #12]
   1db00:	ldr	r0, [sp, #12]
   1db04:	ldr	r1, [fp, #-4]
   1db08:	str	r0, [r1]
   1db0c:	ldr	r0, [fp, #-8]
   1db10:	ldr	r1, [sp, #12]
   1db14:	lsl	r0, r0, r1
   1db18:	ldr	r1, [fp, #-4]
   1db1c:	str	r0, [r1, #4]
   1db20:	ldr	r0, [fp, #-4]
   1db24:	ldr	r0, [r0, #4]
   1db28:	movw	r1, #0
   1db2c:	bl	150f0 <__assert_fail@plt+0x3c5c>
   1db30:	ldr	r1, [fp, #-4]
   1db34:	str	r0, [r1, #12]
   1db38:	mov	sp, fp
   1db3c:	pop	{fp, pc}
   1db40:	push	{fp, lr}
   1db44:	mov	fp, sp
   1db48:	sub	sp, sp, #104	; 0x68
   1db4c:	str	r0, [fp, #-4]
   1db50:	str	r1, [fp, #-8]
   1db54:	str	r2, [fp, #-12]
   1db58:	str	r3, [fp, #-16]
   1db5c:	movw	r0, #0
   1db60:	str	r0, [fp, #-32]	; 0xffffffe0
   1db64:	str	r0, [fp, #-36]	; 0xffffffdc
   1db68:	ldr	r0, [fp, #-16]
   1db6c:	ldr	r0, [r0]
   1db70:	cmp	r0, #0
   1db74:	bls	1dbcc <__assert_fail@plt+0xc738>
   1db78:	ldr	r0, [fp, #-4]
   1db7c:	str	r0, [fp, #-32]	; 0xffffffe0
   1db80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1db84:	movw	r1, #0
   1db88:	cmp	r0, r1
   1db8c:	bne	1dba4 <__assert_fail@plt+0xc710>
   1db90:	ldr	r0, [fp, #-12]
   1db94:	str	r0, [fp, #-36]	; 0xffffffdc
   1db98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1db9c:	bl	15f08 <__assert_fail@plt+0x4a74>
   1dba0:	str	r0, [fp, #-32]	; 0xffffffe0
   1dba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dba8:	ldr	r1, [fp, #-8]
   1dbac:	ldr	r2, [fp, #-12]
   1dbb0:	ldr	r3, [fp, #-16]
   1dbb4:	ldr	r3, [r3]
   1dbb8:	bl	149cc <__assert_fail@plt+0x3538>
   1dbbc:	str	r0, [fp, #-28]	; 0xffffffe4
   1dbc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dbc4:	str	r0, [fp, #-8]
   1dbc8:	b	1dbd4 <__assert_fail@plt+0xc740>
   1dbcc:	movw	r0, #0
   1dbd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dbd4:	ldr	r0, [fp, #-16]
   1dbd8:	ldr	r0, [r0, #4]
   1dbdc:	str	r0, [fp, #-20]	; 0xffffffec
   1dbe0:	ldr	r0, [fp, #-16]
   1dbe4:	ldr	r0, [r0, #12]
   1dbe8:	str	r0, [fp, #-24]	; 0xffffffe8
   1dbec:	ldr	r0, [fp, #-12]
   1dbf0:	mvn	r1, #0
   1dbf4:	add	r0, r0, r1
   1dbf8:	str	r0, [fp, #-12]
   1dbfc:	cmp	r0, #0
   1dc00:	blt	1de34 <__assert_fail@plt+0xc9a0>
   1dc04:	b	1dc08 <__assert_fail@plt+0xc774>
   1dc08:	b	1dc0c <__assert_fail@plt+0xc778>
   1dc0c:	movw	r0, #32
   1dc10:	str	r0, [sp, #44]	; 0x2c
   1dc14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc18:	str	r0, [sp, #8]
   1dc1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc20:	str	r0, [sp, #4]
   1dc24:	ldr	r0, [sp, #8]
   1dc28:	movw	r1, #65535	; 0xffff
   1dc2c:	and	r0, r0, r1
   1dc30:	str	r0, [sp, #24]
   1dc34:	ldr	r0, [sp, #8]
   1dc38:	lsr	r0, r0, #16
   1dc3c:	str	r0, [sp, #16]
   1dc40:	ldr	r0, [sp, #4]
   1dc44:	and	r0, r0, r1
   1dc48:	str	r0, [sp, #20]
   1dc4c:	ldr	r0, [sp, #4]
   1dc50:	lsr	r0, r0, #16
   1dc54:	str	r0, [sp, #12]
   1dc58:	ldr	r0, [sp, #24]
   1dc5c:	ldr	r1, [sp, #20]
   1dc60:	mul	r0, r0, r1
   1dc64:	str	r0, [sp, #40]	; 0x28
   1dc68:	ldr	r0, [sp, #24]
   1dc6c:	ldr	r1, [sp, #12]
   1dc70:	mul	r0, r0, r1
   1dc74:	str	r0, [sp, #36]	; 0x24
   1dc78:	ldr	r0, [sp, #16]
   1dc7c:	ldr	r1, [sp, #20]
   1dc80:	mul	r0, r0, r1
   1dc84:	str	r0, [sp, #32]
   1dc88:	ldr	r0, [sp, #16]
   1dc8c:	ldr	r1, [sp, #12]
   1dc90:	mul	r0, r0, r1
   1dc94:	str	r0, [sp, #28]
   1dc98:	ldr	r0, [sp, #40]	; 0x28
   1dc9c:	lsr	r0, r0, #16
   1dca0:	ldr	r1, [sp, #36]	; 0x24
   1dca4:	add	r0, r1, r0
   1dca8:	str	r0, [sp, #36]	; 0x24
   1dcac:	ldr	r0, [sp, #32]
   1dcb0:	ldr	r1, [sp, #36]	; 0x24
   1dcb4:	add	r0, r1, r0
   1dcb8:	str	r0, [sp, #36]	; 0x24
   1dcbc:	ldr	r0, [sp, #36]	; 0x24
   1dcc0:	ldr	r1, [sp, #32]
   1dcc4:	cmp	r0, r1
   1dcc8:	bcs	1dcd8 <__assert_fail@plt+0xc844>
   1dccc:	ldr	r0, [sp, #28]
   1dcd0:	add	r0, r0, #65536	; 0x10000
   1dcd4:	str	r0, [sp, #28]
   1dcd8:	ldr	r0, [sp, #28]
   1dcdc:	ldr	r1, [sp, #36]	; 0x24
   1dce0:	lsr	r1, r1, #16
   1dce4:	add	r0, r0, r1
   1dce8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dcec:	ldr	r0, [sp, #36]	; 0x24
   1dcf0:	lsl	r0, r0, #16
   1dcf4:	ldr	r1, [sp, #40]	; 0x28
   1dcf8:	movw	r2, #65535	; 0xffff
   1dcfc:	and	r1, r1, r2
   1dd00:	add	r0, r0, r1
   1dd04:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd08:	b	1dd0c <__assert_fail@plt+0xc878>
   1dd0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dd10:	ldr	r1, [fp, #-8]
   1dd14:	ldr	r2, [fp, #-12]
   1dd18:	add	r1, r1, r2, lsl #2
   1dd1c:	ldr	r1, [r1]
   1dd20:	add	r0, r0, r1
   1dd24:	str	r0, [sp]
   1dd28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dd30:	add	r1, r1, #1
   1dd34:	add	r0, r0, r1
   1dd38:	ldr	r1, [sp]
   1dd3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dd40:	cmp	r1, r2
   1dd44:	movw	r1, #0
   1dd48:	movcc	r1, #1
   1dd4c:	and	r1, r1, #1
   1dd50:	add	r0, r0, r1
   1dd54:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd58:	ldr	r0, [sp]
   1dd5c:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd60:	ldr	r0, [fp, #-8]
   1dd64:	ldr	r1, [fp, #-12]
   1dd68:	add	r0, r0, r1, lsl #2
   1dd6c:	ldr	r0, [r0]
   1dd70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dd74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dd78:	mul	r1, r1, r2
   1dd7c:	sub	r0, r0, r1
   1dd80:	str	r0, [sp, #52]	; 0x34
   1dd84:	ldr	r0, [sp, #52]	; 0x34
   1dd88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dd8c:	cmp	r0, r1
   1dd90:	movw	r0, #0
   1dd94:	movhi	r0, #1
   1dd98:	and	r0, r0, #1
   1dd9c:	movw	r1, #0
   1dda0:	sub	r0, r1, r0
   1dda4:	str	r0, [sp, #48]	; 0x30
   1dda8:	ldr	r0, [sp, #48]	; 0x30
   1ddac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ddb0:	add	r0, r1, r0
   1ddb4:	str	r0, [fp, #-44]	; 0xffffffd4
   1ddb8:	ldr	r0, [sp, #48]	; 0x30
   1ddbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ddc0:	and	r0, r0, r1
   1ddc4:	ldr	r1, [sp, #52]	; 0x34
   1ddc8:	add	r0, r1, r0
   1ddcc:	str	r0, [sp, #52]	; 0x34
   1ddd0:	ldr	r0, [sp, #52]	; 0x34
   1ddd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ddd8:	cmp	r0, r1
   1dddc:	bcc	1ddfc <__assert_fail@plt+0xc968>
   1dde0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dde4:	ldr	r1, [sp, #52]	; 0x34
   1dde8:	sub	r0, r1, r0
   1ddec:	str	r0, [sp, #52]	; 0x34
   1ddf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ddf4:	add	r0, r0, #1
   1ddf8:	str	r0, [fp, #-44]	; 0xffffffd4
   1ddfc:	ldr	r0, [sp, #52]	; 0x34
   1de00:	str	r0, [fp, #-28]	; 0xffffffe4
   1de04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1de08:	str	r0, [fp, #-40]	; 0xffffffd8
   1de0c:	ldr	r0, [fp, #-4]
   1de10:	movw	r1, #0
   1de14:	cmp	r0, r1
   1de18:	beq	1de30 <__assert_fail@plt+0xc99c>
   1de1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1de20:	ldr	r1, [fp, #-4]
   1de24:	ldr	r2, [fp, #-12]
   1de28:	add	r1, r1, r2, lsl #2
   1de2c:	str	r0, [r1]
   1de30:	b	1dbec <__assert_fail@plt+0xc758>
   1de34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de38:	cmp	r0, #0
   1de3c:	beq	1de4c <__assert_fail@plt+0xc9b8>
   1de40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1de48:	bl	15f80 <__assert_fail@plt+0x4aec>
   1de4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1de50:	ldr	r1, [fp, #-16]
   1de54:	ldr	r1, [r1]
   1de58:	lsr	r0, r0, r1
   1de5c:	mov	sp, fp
   1de60:	pop	{fp, pc}
   1de64:	push	{fp, lr}
   1de68:	mov	fp, sp
   1de6c:	sub	sp, sp, #80	; 0x50
   1de70:	str	r0, [fp, #-8]
   1de74:	str	r1, [fp, #-12]
   1de78:	str	r2, [fp, #-16]
   1de7c:	movw	r0, #18634	; 0x48ca
   1de80:	movt	r0, #4
   1de84:	str	r0, [fp, #-24]	; 0xffffffe8
   1de88:	ldr	r0, [fp, #-12]
   1de8c:	cmp	r0, #1
   1de90:	ble	1ded0 <__assert_fail@plt+0xca3c>
   1de94:	ldr	r0, [fp, #-12]
   1de98:	cmp	r0, #36	; 0x24
   1de9c:	bgt	1deb0 <__assert_fail@plt+0xca1c>
   1dea0:	movw	r0, #18697	; 0x4909
   1dea4:	movt	r0, #4
   1dea8:	str	r0, [fp, #-24]	; 0xffffffe8
   1deac:	b	1decc <__assert_fail@plt+0xca38>
   1deb0:	ldr	r0, [fp, #-12]
   1deb4:	cmp	r0, #62	; 0x3e
   1deb8:	ble	1dec8 <__assert_fail@plt+0xca34>
   1debc:	movw	r0, #0
   1dec0:	str	r0, [fp, #-4]
   1dec4:	b	1e1ac <__assert_fail@plt+0xcd18>
   1dec8:	b	1decc <__assert_fail@plt+0xca38>
   1decc:	b	1df18 <__assert_fail@plt+0xca84>
   1ded0:	ldr	r0, [fp, #-12]
   1ded4:	cmn	r0, #1
   1ded8:	blt	1dee8 <__assert_fail@plt+0xca54>
   1dedc:	movw	r0, #10
   1dee0:	str	r0, [fp, #-12]
   1dee4:	b	1df14 <__assert_fail@plt+0xca80>
   1dee8:	ldr	r0, [fp, #-12]
   1deec:	movw	r1, #0
   1def0:	sub	r0, r1, r0
   1def4:	str	r0, [fp, #-12]
   1def8:	ldr	r0, [fp, #-12]
   1defc:	cmp	r0, #36	; 0x24
   1df00:	ble	1df10 <__assert_fail@plt+0xca7c>
   1df04:	movw	r0, #0
   1df08:	str	r0, [fp, #-4]
   1df0c:	b	1e1ac <__assert_fail@plt+0xcd18>
   1df10:	b	1df14 <__assert_fail@plt+0xca80>
   1df14:	b	1df18 <__assert_fail@plt+0xca84>
   1df18:	ldr	r0, [fp, #-16]
   1df1c:	ldr	r1, [fp, #-12]
   1df20:	bl	1b158 <__assert_fail@plt+0x9cc4>
   1df24:	add	r0, r0, #1
   1df28:	str	r0, [fp, #-36]	; 0xffffffdc
   1df2c:	ldr	r0, [fp, #-8]
   1df30:	movw	r1, #0
   1df34:	cmp	r0, r1
   1df38:	bne	1df70 <__assert_fail@plt+0xcadc>
   1df3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df40:	add	r0, r0, #1
   1df44:	str	r0, [sp, #40]	; 0x28
   1df48:	movw	r0, #24872	; 0x6128
   1df4c:	movt	r0, #5
   1df50:	ldr	r0, [r0]
   1df54:	ldr	r1, [sp, #40]	; 0x28
   1df58:	str	r0, [sp, #24]
   1df5c:	mov	r0, r1
   1df60:	ldr	r1, [sp, #24]
   1df64:	blx	r1
   1df68:	str	r0, [fp, #-8]
   1df6c:	b	1df78 <__assert_fail@plt+0xcae4>
   1df70:	movw	r0, #0
   1df74:	str	r0, [sp, #40]	; 0x28
   1df78:	ldr	r0, [fp, #-16]
   1df7c:	ldr	r0, [r0, #4]
   1df80:	cmp	r0, #0
   1df84:	blt	1df98 <__assert_fail@plt+0xcb04>
   1df88:	ldr	r0, [fp, #-16]
   1df8c:	ldr	r0, [r0, #4]
   1df90:	str	r0, [sp, #20]
   1df94:	b	1dfac <__assert_fail@plt+0xcb18>
   1df98:	ldr	r0, [fp, #-16]
   1df9c:	ldr	r0, [r0, #4]
   1dfa0:	movw	r1, #0
   1dfa4:	sub	r0, r1, r0
   1dfa8:	str	r0, [sp, #20]
   1dfac:	ldr	r0, [sp, #20]
   1dfb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dfb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfb8:	cmp	r0, #0
   1dfbc:	bne	1dfd8 <__assert_fail@plt+0xcb44>
   1dfc0:	ldr	r0, [fp, #-8]
   1dfc4:	movw	r1, #48	; 0x30
   1dfc8:	strb	r1, [r0]
   1dfcc:	movw	r0, #1
   1dfd0:	str	r0, [fp, #-36]	; 0xffffffdc
   1dfd4:	b	1e138 <__assert_fail@plt+0xcca4>
   1dfd8:	movw	r0, #0
   1dfdc:	str	r0, [fp, #-32]	; 0xffffffe0
   1dfe0:	ldr	r0, [fp, #-16]
   1dfe4:	ldr	r0, [r0, #4]
   1dfe8:	cmp	r0, #0
   1dfec:	bge	1e00c <__assert_fail@plt+0xcb78>
   1dff0:	ldr	r0, [fp, #-8]
   1dff4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dff8:	add	r2, r1, #1
   1dffc:	str	r2, [fp, #-32]	; 0xffffffe0
   1e000:	add	r0, r0, r1
   1e004:	movw	r1, #45	; 0x2d
   1e008:	strb	r1, [r0]
   1e00c:	ldr	r0, [fp, #-12]
   1e010:	bl	155e4 <__assert_fail@plt+0x4150>
   1e014:	str	r0, [fp, #-20]	; 0xffffffec
   1e018:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e01c:	cmp	r0, #0
   1e020:	beq	1e06c <__assert_fail@plt+0xcbd8>
   1e024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e028:	ldr	r1, [fp, #-8]
   1e02c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e030:	add	r1, r1, r2
   1e034:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e038:	ldr	r3, [fp, #-16]
   1e03c:	ldr	r3, [r3, #8]
   1e040:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1e044:	str	r0, [sp, #16]
   1e048:	mov	r0, r1
   1e04c:	mov	r1, r2
   1e050:	mov	r2, r3
   1e054:	mov	r3, ip
   1e058:	bl	156e4 <__assert_fail@plt+0x4250>
   1e05c:	ldr	r1, [sp, #16]
   1e060:	add	r0, r1, r0
   1e064:	str	r0, [fp, #-36]	; 0xffffffdc
   1e068:	b	1e0e4 <__assert_fail@plt+0xcc50>
   1e06c:	ldr	r1, [fp, #-12]
   1e070:	add	r0, sp, #32
   1e074:	bl	15834 <__assert_fail@plt+0x43a0>
   1e078:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e07c:	bl	15f08 <__assert_fail@plt+0x4a74>
   1e080:	str	r0, [sp, #28]
   1e084:	ldr	r0, [sp, #28]
   1e088:	ldr	r1, [fp, #-16]
   1e08c:	ldr	r1, [r1, #8]
   1e090:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e094:	bl	13ad8 <__assert_fail@plt+0x2644>
   1e098:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e09c:	ldr	r1, [fp, #-8]
   1e0a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e0a4:	add	r1, r1, r2
   1e0a8:	ldr	r2, [fp, #-12]
   1e0ac:	ldr	r3, [sp, #28]
   1e0b0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1e0b4:	str	r0, [sp, #12]
   1e0b8:	mov	r0, r1
   1e0bc:	mov	r1, r2
   1e0c0:	add	r2, sp, #32
   1e0c4:	str	ip, [sp]
   1e0c8:	bl	158b0 <__assert_fail@plt+0x441c>
   1e0cc:	ldr	r1, [sp, #12]
   1e0d0:	add	r0, r1, r0
   1e0d4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e0d8:	ldr	r0, [sp, #28]
   1e0dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e0e0:	bl	15f80 <__assert_fail@plt+0x4aec>
   1e0e4:	b	1e0e8 <__assert_fail@plt+0xcc54>
   1e0e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e0f0:	cmp	r0, r1
   1e0f4:	bcs	1e134 <__assert_fail@plt+0xcca0>
   1e0f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0fc:	ldr	r1, [fp, #-8]
   1e100:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e104:	add	r1, r1, r2
   1e108:	ldrb	r1, [r1]
   1e10c:	add	r0, r0, r1
   1e110:	ldrb	r0, [r0]
   1e114:	ldr	r1, [fp, #-8]
   1e118:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e11c:	add	r1, r1, r2
   1e120:	strb	r0, [r1]
   1e124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e128:	add	r0, r0, #1
   1e12c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e130:	b	1e0e8 <__assert_fail@plt+0xcc54>
   1e134:	b	1e138 <__assert_fail@plt+0xcca4>
   1e138:	ldr	r0, [fp, #-8]
   1e13c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e140:	add	r0, r0, r1
   1e144:	movw	r1, #0
   1e148:	strb	r1, [r0]
   1e14c:	ldr	r0, [sp, #40]	; 0x28
   1e150:	cmp	r0, #0
   1e154:	beq	1e1a4 <__assert_fail@plt+0xcd10>
   1e158:	ldr	r0, [sp, #40]	; 0x28
   1e15c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e160:	add	r1, r1, #1
   1e164:	cmp	r0, r1
   1e168:	beq	1e1a4 <__assert_fail@plt+0xcd10>
   1e16c:	movw	r0, #24876	; 0x612c
   1e170:	movt	r0, #5
   1e174:	ldr	r0, [r0]
   1e178:	ldr	r1, [fp, #-8]
   1e17c:	ldr	r2, [sp, #40]	; 0x28
   1e180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e184:	add	r3, r3, #1
   1e188:	str	r0, [sp, #8]
   1e18c:	mov	r0, r1
   1e190:	mov	r1, r2
   1e194:	mov	r2, r3
   1e198:	ldr	r3, [sp, #8]
   1e19c:	blx	r3
   1e1a0:	str	r0, [fp, #-8]
   1e1a4:	ldr	r0, [fp, #-8]
   1e1a8:	str	r0, [fp, #-4]
   1e1ac:	ldr	r0, [fp, #-4]
   1e1b0:	mov	sp, fp
   1e1b4:	pop	{fp, pc}
   1e1b8:	push	{fp, lr}
   1e1bc:	mov	fp, sp
   1e1c0:	sub	sp, sp, #96	; 0x60
   1e1c4:	str	r0, [fp, #-8]
   1e1c8:	str	r1, [fp, #-12]
   1e1cc:	str	r2, [fp, #-16]
   1e1d0:	ldr	r0, [fp, #-16]
   1e1d4:	cmp	r0, #0
   1e1d8:	beq	1e1f4 <__assert_fail@plt+0xcd60>
   1e1dc:	ldr	r0, [fp, #-16]
   1e1e0:	cmp	r0, #2
   1e1e4:	blt	1e1f8 <__assert_fail@plt+0xcd64>
   1e1e8:	ldr	r0, [fp, #-16]
   1e1ec:	cmp	r0, #62	; 0x3e
   1e1f0:	bgt	1e1f8 <__assert_fail@plt+0xcd64>
   1e1f4:	b	1e218 <__assert_fail@plt+0xcd84>
   1e1f8:	movw	r0, #18734	; 0x492e
   1e1fc:	movt	r0, #4
   1e200:	movw	r1, #16512	; 0x4080
   1e204:	movt	r1, #4
   1e208:	movw	r2, #4320	; 0x10e0
   1e20c:	movw	r3, #18773	; 0x4955
   1e210:	movt	r3, #4
   1e214:	bl	11494 <__assert_fail@plt>
   1e218:	b	1e21c <__assert_fail@plt+0xcd88>
   1e21c:	bl	11368 <__ctype_b_loc@plt>
   1e220:	ldr	r0, [r0]
   1e224:	ldr	r1, [fp, #-12]
   1e228:	ldrb	r1, [r1]
   1e22c:	mov	r2, r1
   1e230:	add	r0, r0, r1, lsl #1
   1e234:	ldrh	r0, [r0]
   1e238:	and	r0, r0, #8192	; 0x2000
   1e23c:	cmp	r0, #0
   1e240:	beq	1e254 <__assert_fail@plt+0xcdc0>
   1e244:	ldr	r0, [fp, #-12]
   1e248:	add	r0, r0, #1
   1e24c:	str	r0, [fp, #-12]
   1e250:	b	1e21c <__assert_fail@plt+0xcd88>
   1e254:	ldr	r0, [fp, #-12]
   1e258:	ldrb	r0, [r0]
   1e25c:	cmp	r0, #45	; 0x2d
   1e260:	movw	r0, #0
   1e264:	moveq	r0, #1
   1e268:	and	r0, r0, #1
   1e26c:	str	r0, [sp, #48]	; 0x30
   1e270:	ldr	r0, [sp, #48]	; 0x30
   1e274:	ldr	r1, [fp, #-12]
   1e278:	add	r0, r1, r0
   1e27c:	str	r0, [fp, #-12]
   1e280:	ldr	r0, [fp, #-16]
   1e284:	cmp	r0, #0
   1e288:	bne	1e328 <__assert_fail@plt+0xce94>
   1e28c:	ldr	r0, [fp, #-12]
   1e290:	ldrb	r0, [r0]
   1e294:	cmp	r0, #48	; 0x30
   1e298:	bne	1e31c <__assert_fail@plt+0xce88>
   1e29c:	ldr	r0, [fp, #-12]
   1e2a0:	ldrb	r0, [r0, #1]
   1e2a4:	cmp	r0, #120	; 0x78
   1e2a8:	beq	1e2bc <__assert_fail@plt+0xce28>
   1e2ac:	ldr	r0, [fp, #-12]
   1e2b0:	ldrb	r0, [r0, #1]
   1e2b4:	cmp	r0, #88	; 0x58
   1e2b8:	bne	1e2d4 <__assert_fail@plt+0xce40>
   1e2bc:	movw	r0, #16
   1e2c0:	str	r0, [fp, #-16]
   1e2c4:	ldr	r0, [fp, #-12]
   1e2c8:	add	r0, r0, #2
   1e2cc:	str	r0, [fp, #-12]
   1e2d0:	b	1e318 <__assert_fail@plt+0xce84>
   1e2d4:	ldr	r0, [fp, #-12]
   1e2d8:	ldrb	r0, [r0, #1]
   1e2dc:	cmp	r0, #98	; 0x62
   1e2e0:	beq	1e2f4 <__assert_fail@plt+0xce60>
   1e2e4:	ldr	r0, [fp, #-12]
   1e2e8:	ldrb	r0, [r0, #1]
   1e2ec:	cmp	r0, #66	; 0x42
   1e2f0:	bne	1e30c <__assert_fail@plt+0xce78>
   1e2f4:	movw	r0, #2
   1e2f8:	str	r0, [fp, #-16]
   1e2fc:	ldr	r0, [fp, #-12]
   1e300:	add	r0, r0, #2
   1e304:	str	r0, [fp, #-12]
   1e308:	b	1e314 <__assert_fail@plt+0xce80>
   1e30c:	movw	r0, #8
   1e310:	str	r0, [fp, #-16]
   1e314:	b	1e318 <__assert_fail@plt+0xce84>
   1e318:	b	1e324 <__assert_fail@plt+0xce90>
   1e31c:	movw	r0, #10
   1e320:	str	r0, [fp, #-16]
   1e324:	b	1e328 <__assert_fail@plt+0xce94>
   1e328:	ldr	r0, [fp, #-12]
   1e32c:	ldrsb	r0, [r0]
   1e330:	cmp	r0, #0
   1e334:	bne	1e350 <__assert_fail@plt+0xcebc>
   1e338:	ldr	r0, [fp, #-8]
   1e33c:	movw	r1, #0
   1e340:	str	r1, [r0, #4]
   1e344:	mvn	r0, #0
   1e348:	str	r0, [fp, #-4]
   1e34c:	b	1e76c <__assert_fail@plt+0xd2d8>
   1e350:	ldr	r0, [fp, #-12]
   1e354:	bl	1138c <strlen@plt>
   1e358:	str	r0, [fp, #-44]	; 0xffffffd4
   1e35c:	movw	r0, #24872	; 0x6128
   1e360:	movt	r0, #5
   1e364:	ldr	r0, [r0]
   1e368:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e36c:	str	r0, [sp, #28]
   1e370:	mov	r0, r1
   1e374:	ldr	r1, [sp, #28]
   1e378:	blx	r1
   1e37c:	str	r0, [sp, #44]	; 0x2c
   1e380:	ldr	r0, [fp, #-16]
   1e384:	cmp	r0, #36	; 0x24
   1e388:	movw	r0, #0
   1e38c:	movgt	r0, #1
   1e390:	tst	r0, #1
   1e394:	movw	r0, #36	; 0x24
   1e398:	moveq	r0, #10
   1e39c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e3a0:	movw	r0, #0
   1e3a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1e3a8:	ldr	r0, [fp, #-12]
   1e3ac:	ldrsb	r0, [r0]
   1e3b0:	cmp	r0, #0
   1e3b4:	beq	1e51c <__assert_fail@plt+0xd088>
   1e3b8:	bl	11368 <__ctype_b_loc@plt>
   1e3bc:	ldr	r0, [r0]
   1e3c0:	ldr	r1, [fp, #-12]
   1e3c4:	ldrb	r1, [r1]
   1e3c8:	mov	r2, r1
   1e3cc:	add	r0, r0, r1, lsl #1
   1e3d0:	ldrh	r0, [r0]
   1e3d4:	and	r0, r0, #8192	; 0x2000
   1e3d8:	cmp	r0, #0
   1e3dc:	beq	1e3e4 <__assert_fail@plt+0xcf50>
   1e3e0:	b	1e50c <__assert_fail@plt+0xd078>
   1e3e4:	ldr	r0, [fp, #-12]
   1e3e8:	ldrb	r0, [r0]
   1e3ec:	cmp	r0, #48	; 0x30
   1e3f0:	blt	1e418 <__assert_fail@plt+0xcf84>
   1e3f4:	ldr	r0, [fp, #-12]
   1e3f8:	ldrb	r0, [r0]
   1e3fc:	cmp	r0, #57	; 0x39
   1e400:	bgt	1e418 <__assert_fail@plt+0xcf84>
   1e404:	ldr	r0, [fp, #-12]
   1e408:	ldrb	r0, [r0]
   1e40c:	sub	r0, r0, #48	; 0x30
   1e410:	str	r0, [sp, #40]	; 0x28
   1e414:	b	1e49c <__assert_fail@plt+0xd008>
   1e418:	ldr	r0, [fp, #-12]
   1e41c:	ldrb	r0, [r0]
   1e420:	cmp	r0, #97	; 0x61
   1e424:	blt	1e454 <__assert_fail@plt+0xcfc0>
   1e428:	ldr	r0, [fp, #-12]
   1e42c:	ldrb	r0, [r0]
   1e430:	cmp	r0, #122	; 0x7a
   1e434:	bgt	1e454 <__assert_fail@plt+0xcfc0>
   1e438:	ldr	r0, [fp, #-12]
   1e43c:	ldrb	r0, [r0]
   1e440:	sub	r0, r0, #97	; 0x61
   1e444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e448:	add	r0, r0, r1
   1e44c:	str	r0, [sp, #40]	; 0x28
   1e450:	b	1e498 <__assert_fail@plt+0xd004>
   1e454:	ldr	r0, [fp, #-12]
   1e458:	ldrb	r0, [r0]
   1e45c:	cmp	r0, #65	; 0x41
   1e460:	blt	1e48c <__assert_fail@plt+0xcff8>
   1e464:	ldr	r0, [fp, #-12]
   1e468:	ldrb	r0, [r0]
   1e46c:	cmp	r0, #90	; 0x5a
   1e470:	bgt	1e48c <__assert_fail@plt+0xcff8>
   1e474:	ldr	r0, [fp, #-12]
   1e478:	ldrb	r0, [r0]
   1e47c:	sub	r0, r0, #65	; 0x41
   1e480:	add	r0, r0, #10
   1e484:	str	r0, [sp, #40]	; 0x28
   1e488:	b	1e494 <__assert_fail@plt+0xd000>
   1e48c:	ldr	r0, [fp, #-16]
   1e490:	str	r0, [sp, #40]	; 0x28
   1e494:	b	1e498 <__assert_fail@plt+0xd004>
   1e498:	b	1e49c <__assert_fail@plt+0xd008>
   1e49c:	b	1e4a0 <__assert_fail@plt+0xd00c>
   1e4a0:	ldr	r0, [sp, #40]	; 0x28
   1e4a4:	ldr	r1, [fp, #-16]
   1e4a8:	cmp	r0, r1
   1e4ac:	bcc	1e4f0 <__assert_fail@plt+0xd05c>
   1e4b0:	movw	r0, #24880	; 0x6130
   1e4b4:	movt	r0, #5
   1e4b8:	ldr	r0, [r0]
   1e4bc:	ldr	r1, [sp, #44]	; 0x2c
   1e4c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e4c4:	str	r0, [sp, #24]
   1e4c8:	mov	r0, r1
   1e4cc:	mov	r1, r2
   1e4d0:	ldr	r2, [sp, #24]
   1e4d4:	blx	r2
   1e4d8:	ldr	r0, [fp, #-8]
   1e4dc:	movw	r1, #0
   1e4e0:	str	r1, [r0, #4]
   1e4e4:	mvn	r0, #0
   1e4e8:	str	r0, [fp, #-4]
   1e4ec:	b	1e76c <__assert_fail@plt+0xd2d8>
   1e4f0:	ldr	r0, [sp, #40]	; 0x28
   1e4f4:	ldr	r1, [sp, #44]	; 0x2c
   1e4f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e4fc:	add	r3, r2, #1
   1e500:	str	r3, [fp, #-40]	; 0xffffffd8
   1e504:	add	r1, r1, r2
   1e508:	strb	r0, [r1]
   1e50c:	ldr	r0, [fp, #-12]
   1e510:	add	r0, r0, #1
   1e514:	str	r0, [fp, #-12]
   1e518:	b	1e3a8 <__assert_fail@plt+0xcf14>
   1e51c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e520:	cmp	r0, #0
   1e524:	bne	1e568 <__assert_fail@plt+0xd0d4>
   1e528:	movw	r0, #24880	; 0x6130
   1e52c:	movt	r0, #5
   1e530:	ldr	r0, [r0]
   1e534:	ldr	r1, [sp, #44]	; 0x2c
   1e538:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e53c:	str	r0, [sp, #20]
   1e540:	mov	r0, r1
   1e544:	mov	r1, r2
   1e548:	ldr	r2, [sp, #20]
   1e54c:	blx	r2
   1e550:	ldr	r0, [fp, #-8]
   1e554:	movw	r1, #0
   1e558:	str	r1, [r0, #4]
   1e55c:	mvn	r0, #0
   1e560:	str	r0, [fp, #-4]
   1e564:	b	1e76c <__assert_fail@plt+0xd2d8>
   1e568:	ldr	r0, [fp, #-16]
   1e56c:	bl	155e4 <__assert_fail@plt+0x4150>
   1e570:	str	r0, [fp, #-20]	; 0xffffffec
   1e574:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e578:	cmp	r0, #0
   1e57c:	bls	1e5f0 <__assert_fail@plt+0xd15c>
   1e580:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e584:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e588:	mul	r0, r0, r1
   1e58c:	add	r0, r0, #31
   1e590:	lsr	r0, r0, #5
   1e594:	str	r0, [fp, #-32]	; 0xffffffe0
   1e598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e59c:	ldr	r1, [fp, #-8]
   1e5a0:	ldr	r1, [r1]
   1e5a4:	cmp	r0, r1
   1e5a8:	ble	1e5c0 <__assert_fail@plt+0xd12c>
   1e5ac:	ldr	r0, [fp, #-8]
   1e5b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e5b4:	bl	160ec <__assert_fail@plt+0x4c58>
   1e5b8:	str	r0, [sp, #16]
   1e5bc:	b	1e5cc <__assert_fail@plt+0xd138>
   1e5c0:	ldr	r0, [fp, #-8]
   1e5c4:	ldr	r0, [r0, #8]
   1e5c8:	str	r0, [sp, #16]
   1e5cc:	ldr	r0, [sp, #16]
   1e5d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e5d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e5d8:	ldr	r1, [sp, #44]	; 0x2c
   1e5dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e5e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e5e4:	bl	15b34 <__assert_fail@plt+0x46a0>
   1e5e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e5ec:	b	1e6d4 <__assert_fail@plt+0xd240>
   1e5f0:	ldr	r1, [fp, #-16]
   1e5f4:	add	r0, sp, #32
   1e5f8:	bl	15834 <__assert_fail@plt+0x43a0>
   1e5fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e600:	ldr	r1, [sp, #32]
   1e604:	add	r0, r0, r1
   1e608:	sub	r0, r0, #1
   1e60c:	ldr	r1, [sp, #32]
   1e610:	udiv	r0, r0, r1
   1e614:	str	r0, [fp, #-32]	; 0xffffffe0
   1e618:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e61c:	ldr	r1, [fp, #-8]
   1e620:	ldr	r1, [r1]
   1e624:	cmp	r0, r1
   1e628:	ble	1e640 <__assert_fail@plt+0xd1ac>
   1e62c:	ldr	r0, [fp, #-8]
   1e630:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e634:	bl	160ec <__assert_fail@plt+0x4c58>
   1e638:	str	r0, [sp, #12]
   1e63c:	b	1e64c <__assert_fail@plt+0xd1b8>
   1e640:	ldr	r0, [fp, #-8]
   1e644:	ldr	r0, [r0, #8]
   1e648:	str	r0, [sp, #12]
   1e64c:	ldr	r0, [sp, #12]
   1e650:	str	r0, [fp, #-36]	; 0xffffffdc
   1e654:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e658:	ldr	r1, [sp, #44]	; 0x2c
   1e65c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e660:	ldr	r3, [fp, #-16]
   1e664:	add	ip, sp, #32
   1e668:	str	ip, [sp]
   1e66c:	bl	15c50 <__assert_fail@plt+0x47bc>
   1e670:	str	r0, [fp, #-28]	; 0xffffffe4
   1e674:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e678:	cmp	r0, #0
   1e67c:	ble	1e684 <__assert_fail@plt+0xd1f0>
   1e680:	b	1e6a4 <__assert_fail@plt+0xd210>
   1e684:	movw	r0, #18824	; 0x4988
   1e688:	movt	r0, #4
   1e68c:	movw	r1, #16512	; 0x4080
   1e690:	movt	r1, #4
   1e694:	movw	r2, #4405	; 0x1135
   1e698:	movw	r3, #18773	; 0x4955
   1e69c:	movt	r3, #4
   1e6a0:	bl	11494 <__assert_fail@plt>
   1e6a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e6a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e6ac:	sub	r1, r1, #1
   1e6b0:	add	r0, r0, r1, lsl #2
   1e6b4:	ldr	r0, [r0]
   1e6b8:	cmp	r0, #0
   1e6bc:	movw	r0, #0
   1e6c0:	moveq	r0, #1
   1e6c4:	and	r0, r0, #1
   1e6c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e6cc:	sub	r0, r1, r0
   1e6d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e6d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e6d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e6dc:	cmp	r0, r1
   1e6e0:	bgt	1e6e8 <__assert_fail@plt+0xd254>
   1e6e4:	b	1e708 <__assert_fail@plt+0xd274>
   1e6e8:	movw	r0, #18831	; 0x498f
   1e6ec:	movt	r0, #4
   1e6f0:	movw	r1, #16512	; 0x4080
   1e6f4:	movt	r1, #4
   1e6f8:	movw	r2, #4408	; 0x1138
   1e6fc:	movw	r3, #18773	; 0x4955
   1e700:	movt	r3, #4
   1e704:	bl	11494 <__assert_fail@plt>
   1e708:	movw	r0, #24880	; 0x6130
   1e70c:	movt	r0, #5
   1e710:	ldr	r0, [r0]
   1e714:	ldr	r1, [sp, #44]	; 0x2c
   1e718:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e71c:	str	r0, [sp, #8]
   1e720:	mov	r0, r1
   1e724:	mov	r1, r2
   1e728:	ldr	r2, [sp, #8]
   1e72c:	blx	r2
   1e730:	ldr	r0, [sp, #48]	; 0x30
   1e734:	cmp	r0, #0
   1e738:	beq	1e750 <__assert_fail@plt+0xd2bc>
   1e73c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e740:	movw	r1, #0
   1e744:	sub	r0, r1, r0
   1e748:	str	r0, [sp, #4]
   1e74c:	b	1e758 <__assert_fail@plt+0xd2c4>
   1e750:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e754:	str	r0, [sp, #4]
   1e758:	ldr	r0, [sp, #4]
   1e75c:	ldr	r1, [fp, #-8]
   1e760:	str	r0, [r1, #4]
   1e764:	movw	r0, #0
   1e768:	str	r0, [fp, #-4]
   1e76c:	ldr	r0, [fp, #-4]
   1e770:	mov	sp, fp
   1e774:	pop	{fp, pc}
   1e778:	push	{fp, lr}
   1e77c:	mov	fp, sp
   1e780:	sub	sp, sp, #16
   1e784:	str	r0, [fp, #-4]
   1e788:	str	r1, [sp, #8]
   1e78c:	str	r2, [sp, #4]
   1e790:	ldr	r0, [fp, #-4]
   1e794:	bl	15e6c <__assert_fail@plt+0x49d8>
   1e798:	ldr	r0, [fp, #-4]
   1e79c:	ldr	r1, [sp, #8]
   1e7a0:	ldr	r2, [sp, #4]
   1e7a4:	bl	1e1b8 <__assert_fail@plt+0xcd24>
   1e7a8:	mov	sp, fp
   1e7ac:	pop	{fp, pc}
   1e7b0:	push	{fp, lr}
   1e7b4:	mov	fp, sp
   1e7b8:	sub	sp, sp, #32
   1e7bc:	str	r0, [fp, #-8]
   1e7c0:	str	r1, [fp, #-12]
   1e7c4:	str	r2, [sp, #16]
   1e7c8:	ldr	r1, [fp, #-12]
   1e7cc:	ldr	r2, [sp, #16]
   1e7d0:	movw	r0, #0
   1e7d4:	bl	1de64 <__assert_fail@plt+0xc9d0>
   1e7d8:	str	r0, [sp, #12]
   1e7dc:	ldr	r0, [sp, #12]
   1e7e0:	movw	r1, #0
   1e7e4:	cmp	r0, r1
   1e7e8:	bne	1e7f8 <__assert_fail@plt+0xd364>
   1e7ec:	movw	r0, #0
   1e7f0:	str	r0, [fp, #-4]
   1e7f4:	b	1e850 <__assert_fail@plt+0xd3bc>
   1e7f8:	ldr	r0, [sp, #12]
   1e7fc:	bl	1138c <strlen@plt>
   1e800:	str	r0, [sp, #8]
   1e804:	ldr	r0, [sp, #12]
   1e808:	ldr	r2, [sp, #8]
   1e80c:	ldr	r3, [fp, #-8]
   1e810:	movw	r1, #1
   1e814:	bl	112c0 <fwrite@plt>
   1e818:	str	r0, [sp, #4]
   1e81c:	movw	r0, #24880	; 0x6130
   1e820:	movt	r0, #5
   1e824:	ldr	r0, [r0]
   1e828:	ldr	r1, [sp, #12]
   1e82c:	ldr	r2, [sp, #8]
   1e830:	add	r2, r2, #1
   1e834:	str	r0, [sp]
   1e838:	mov	r0, r1
   1e83c:	mov	r1, r2
   1e840:	ldr	r2, [sp]
   1e844:	blx	r2
   1e848:	ldr	r0, [sp, #4]
   1e84c:	str	r0, [fp, #-4]
   1e850:	ldr	r0, [fp, #-4]
   1e854:	mov	sp, fp
   1e858:	pop	{fp, pc}
   1e85c:	push	{r4, sl, fp, lr}
   1e860:	add	fp, sp, #8
   1e864:	sub	sp, sp, #56	; 0x38
   1e868:	ldr	ip, [fp, #16]
   1e86c:	ldr	lr, [fp, #12]
   1e870:	ldr	r4, [fp, #8]
   1e874:	str	r0, [fp, #-12]
   1e878:	str	r1, [fp, #-16]
   1e87c:	str	r2, [fp, #-20]	; 0xffffffec
   1e880:	str	r3, [fp, #-24]	; 0xffffffe8
   1e884:	ldr	r0, [fp, #12]
   1e888:	cmp	r0, #0
   1e88c:	beq	1e89c <__assert_fail@plt+0xd408>
   1e890:	movw	r0, #18843	; 0x499b
   1e894:	movt	r0, #4
   1e898:	bl	1a998 <__assert_fail@plt+0x9504>
   1e89c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8a0:	cmp	r0, #1
   1e8a4:	beq	1e8b4 <__assert_fail@plt+0xd420>
   1e8a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8ac:	cmn	r0, #1
   1e8b0:	bne	1e8b8 <__assert_fail@plt+0xd424>
   1e8b4:	b	1e8d8 <__assert_fail@plt+0xd444>
   1e8b8:	movw	r0, #18876	; 0x49bc
   1e8bc:	movt	r0, #4
   1e8c0:	movw	r1, #16512	; 0x4080
   1e8c4:	movt	r1, #4
   1e8c8:	movw	r2, #4468	; 0x1174
   1e8cc:	movw	r3, #18902	; 0x49d6
   1e8d0:	movt	r3, #4
   1e8d4:	bl	11494 <__assert_fail@plt>
   1e8d8:	ldr	r0, [fp, #8]
   1e8dc:	cmn	r0, #1
   1e8e0:	blt	1e8f4 <__assert_fail@plt+0xd460>
   1e8e4:	ldr	r0, [fp, #8]
   1e8e8:	cmp	r0, #1
   1e8ec:	bgt	1e8f4 <__assert_fail@plt+0xd460>
   1e8f0:	b	1e914 <__assert_fail@plt+0xd480>
   1e8f4:	movw	r0, #18982	; 0x4a26
   1e8f8:	movt	r0, #4
   1e8fc:	movw	r1, #16512	; 0x4080
   1e900:	movt	r1, #4
   1e904:	movw	r2, #4469	; 0x1175
   1e908:	movw	r3, #18902	; 0x49d6
   1e90c:	movt	r3, #4
   1e910:	bl	11494 <__assert_fail@plt>
   1e914:	ldr	r0, [fp, #8]
   1e918:	cmp	r0, #0
   1e91c:	bne	1e928 <__assert_fail@plt+0xd494>
   1e920:	bl	1eb90 <__assert_fail@plt+0xd6fc>
   1e924:	str	r0, [fp, #8]
   1e928:	ldr	r0, [fp, #16]
   1e92c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e930:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e934:	ldr	r1, [fp, #8]
   1e938:	cmp	r0, r1
   1e93c:	beq	1e950 <__assert_fail@plt+0xd4bc>
   1e940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e944:	lsl	r0, r0, #1
   1e948:	str	r0, [sp, #4]
   1e94c:	b	1e95c <__assert_fail@plt+0xd4c8>
   1e950:	movw	r0, #0
   1e954:	str	r0, [sp, #4]
   1e958:	b	1e95c <__assert_fail@plt+0xd4c8>
   1e95c:	ldr	r0, [sp, #4]
   1e960:	str	r0, [sp, #32]
   1e964:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e968:	cmp	r0, #1
   1e96c:	bne	1e99c <__assert_fail@plt+0xd508>
   1e970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e974:	ldr	r1, [fp, #-16]
   1e978:	sub	r1, r1, #1
   1e97c:	mul	r0, r0, r1
   1e980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e984:	add	r0, r1, r0
   1e988:	str	r0, [fp, #-28]	; 0xffffffe4
   1e98c:	ldr	r0, [sp, #32]
   1e990:	movw	r1, #0
   1e994:	sub	r0, r1, r0
   1e998:	str	r0, [sp, #32]
   1e99c:	ldr	r0, [fp, #8]
   1e9a0:	cmp	r0, #1
   1e9a4:	bne	1e9bc <__assert_fail@plt+0xd528>
   1e9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9ac:	sub	r0, r0, #1
   1e9b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e9b4:	add	r0, r1, r0
   1e9b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9c0:	ldr	r1, [fp, #-16]
   1e9c4:	mul	r0, r0, r1
   1e9c8:	add	r0, r0, #3
   1e9cc:	lsr	r0, r0, #2
   1e9d0:	str	r0, [sp, #24]
   1e9d4:	ldr	r0, [sp, #24]
   1e9d8:	ldr	r1, [fp, #-12]
   1e9dc:	ldr	r1, [r1]
   1e9e0:	cmp	r0, r1
   1e9e4:	ble	1e9fc <__assert_fail@plt+0xd568>
   1e9e8:	ldr	r0, [fp, #-12]
   1e9ec:	ldr	r1, [sp, #24]
   1e9f0:	bl	160ec <__assert_fail@plt+0x4c58>
   1e9f4:	str	r0, [sp]
   1e9f8:	b	1ea08 <__assert_fail@plt+0xd574>
   1e9fc:	ldr	r0, [fp, #-12]
   1ea00:	ldr	r0, [r0, #8]
   1ea04:	str	r0, [sp]
   1ea08:	ldr	r0, [sp]
   1ea0c:	str	r0, [sp, #28]
   1ea10:	movw	r0, #0
   1ea14:	str	r0, [sp, #20]
   1ea18:	str	r0, [sp, #16]
   1ea1c:	str	r0, [sp, #12]
   1ea20:	ldr	r0, [fp, #-16]
   1ea24:	cmp	r0, #0
   1ea28:	bls	1eaf4 <__assert_fail@plt+0xd660>
   1ea2c:	movw	r0, #0
   1ea30:	str	r0, [sp, #8]
   1ea34:	ldr	r0, [sp, #8]
   1ea38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea3c:	cmp	r0, r1
   1ea40:	bcs	1eacc <__assert_fail@plt+0xd638>
   1ea44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea48:	ldrb	r0, [r0]
   1ea4c:	ldr	r1, [sp, #16]
   1ea50:	add	r2, r1, #1
   1ea54:	str	r2, [sp, #16]
   1ea58:	lsl	r1, r1, #3
   1ea5c:	lsl	r0, r0, r1
   1ea60:	ldr	r1, [sp, #20]
   1ea64:	orr	r0, r1, r0
   1ea68:	str	r0, [sp, #20]
   1ea6c:	ldr	r0, [sp, #16]
   1ea70:	cmp	r0, #4
   1ea74:	bne	1eaa0 <__assert_fail@plt+0xd60c>
   1ea78:	ldr	r0, [sp, #20]
   1ea7c:	ldr	r1, [sp, #28]
   1ea80:	ldr	r2, [sp, #12]
   1ea84:	add	r3, r2, #1
   1ea88:	str	r3, [sp, #12]
   1ea8c:	add	r1, r1, r2, lsl #2
   1ea90:	str	r0, [r1]
   1ea94:	movw	r0, #0
   1ea98:	str	r0, [sp, #16]
   1ea9c:	str	r0, [sp, #20]
   1eaa0:	b	1eaa4 <__assert_fail@plt+0xd610>
   1eaa4:	ldr	r0, [sp, #8]
   1eaa8:	add	r0, r0, #1
   1eaac:	str	r0, [sp, #8]
   1eab0:	ldr	r0, [fp, #8]
   1eab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eab8:	movw	r2, #0
   1eabc:	sub	r0, r2, r0
   1eac0:	add	r0, r1, r0
   1eac4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eac8:	b	1ea34 <__assert_fail@plt+0xd5a0>
   1eacc:	b	1ead0 <__assert_fail@plt+0xd63c>
   1ead0:	ldr	r0, [fp, #-16]
   1ead4:	mvn	r1, #0
   1ead8:	add	r0, r0, r1
   1eadc:	str	r0, [fp, #-16]
   1eae0:	ldr	r0, [sp, #32]
   1eae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eae8:	add	r0, r1, r0
   1eaec:	str	r0, [fp, #-28]	; 0xffffffe4
   1eaf0:	b	1ea20 <__assert_fail@plt+0xd58c>
   1eaf4:	ldr	r0, [sp, #12]
   1eaf8:	ldr	r1, [sp, #16]
   1eafc:	cmp	r1, #0
   1eb00:	movw	r1, #0
   1eb04:	movhi	r1, #1
   1eb08:	and	r1, r1, #1
   1eb0c:	add	r0, r0, r1
   1eb10:	ldr	r1, [sp, #24]
   1eb14:	cmp	r0, r1
   1eb18:	bne	1eb20 <__assert_fail@plt+0xd68c>
   1eb1c:	b	1eb40 <__assert_fail@plt+0xd6ac>
   1eb20:	movw	r0, #19010	; 0x4a42
   1eb24:	movt	r0, #4
   1eb28:	movw	r1, #16512	; 0x4080
   1eb2c:	movt	r1, #4
   1eb30:	movw	r2, #4507	; 0x119b
   1eb34:	movw	r3, #18902	; 0x49d6
   1eb38:	movt	r3, #4
   1eb3c:	bl	11494 <__assert_fail@plt>
   1eb40:	ldr	r0, [sp, #20]
   1eb44:	cmp	r0, #0
   1eb48:	beq	1eb6c <__assert_fail@plt+0xd6d8>
   1eb4c:	ldr	r0, [sp, #20]
   1eb50:	ldr	r1, [sp, #28]
   1eb54:	ldr	r2, [sp, #12]
   1eb58:	add	r3, r2, #1
   1eb5c:	str	r3, [sp, #12]
   1eb60:	add	r1, r1, r2, lsl #2
   1eb64:	str	r0, [r1]
   1eb68:	b	1eb7c <__assert_fail@plt+0xd6e8>
   1eb6c:	ldr	r0, [sp, #28]
   1eb70:	ldr	r1, [sp, #12]
   1eb74:	bl	13c4c <__assert_fail@plt+0x27b8>
   1eb78:	str	r0, [sp, #12]
   1eb7c:	ldr	r0, [sp, #12]
   1eb80:	ldr	r1, [fp, #-12]
   1eb84:	str	r0, [r1, #4]
   1eb88:	sub	sp, fp, #8
   1eb8c:	pop	{r4, sl, fp, pc}
   1eb90:	sub	sp, sp, #4
   1eb94:	movw	r0, #16508	; 0x407c
   1eb98:	movt	r0, #4
   1eb9c:	str	r0, [sp]
   1eba0:	ldr	r0, [sp]
   1eba4:	ldrb	r0, [r0]
   1eba8:	movw	r1, #1
   1ebac:	sub	r0, r1, r0
   1ebb0:	add	sp, sp, #4
   1ebb4:	bx	lr
   1ebb8:	push	{r4, sl, fp, lr}
   1ebbc:	add	fp, sp, #8
   1ebc0:	sub	sp, sp, #72	; 0x48
   1ebc4:	ldr	ip, [fp, #16]
   1ebc8:	ldr	lr, [fp, #12]
   1ebcc:	ldr	r4, [fp, #8]
   1ebd0:	str	r0, [fp, #-12]
   1ebd4:	str	r1, [fp, #-16]
   1ebd8:	str	r2, [fp, #-20]	; 0xffffffec
   1ebdc:	str	r3, [fp, #-24]	; 0xffffffe8
   1ebe0:	ldr	r0, [fp, #12]
   1ebe4:	cmp	r0, #0
   1ebe8:	beq	1ebf8 <__assert_fail@plt+0xd764>
   1ebec:	movw	r0, #19032	; 0x4a58
   1ebf0:	movt	r0, #4
   1ebf4:	bl	1a998 <__assert_fail@plt+0x9504>
   1ebf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ebfc:	cmp	r0, #1
   1ec00:	beq	1ec10 <__assert_fail@plt+0xd77c>
   1ec04:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec08:	cmn	r0, #1
   1ec0c:	bne	1ec14 <__assert_fail@plt+0xd780>
   1ec10:	b	1ec34 <__assert_fail@plt+0xd7a0>
   1ec14:	movw	r0, #18876	; 0x49bc
   1ec18:	movt	r0, #4
   1ec1c:	movw	r1, #16512	; 0x4080
   1ec20:	movt	r1, #4
   1ec24:	movw	r2, #4526	; 0x11ae
   1ec28:	movw	r3, #19065	; 0x4a79
   1ec2c:	movt	r3, #4
   1ec30:	bl	11494 <__assert_fail@plt>
   1ec34:	ldr	r0, [fp, #8]
   1ec38:	cmn	r0, #1
   1ec3c:	blt	1ec50 <__assert_fail@plt+0xd7bc>
   1ec40:	ldr	r0, [fp, #8]
   1ec44:	cmp	r0, #1
   1ec48:	bgt	1ec50 <__assert_fail@plt+0xd7bc>
   1ec4c:	b	1ec70 <__assert_fail@plt+0xd7dc>
   1ec50:	movw	r0, #18982	; 0x4a26
   1ec54:	movt	r0, #4
   1ec58:	movw	r1, #16512	; 0x4080
   1ec5c:	movt	r1, #4
   1ec60:	movw	r2, #4527	; 0x11af
   1ec64:	movw	r3, #19065	; 0x4a79
   1ec68:	movt	r3, #4
   1ec6c:	bl	11494 <__assert_fail@plt>
   1ec70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec74:	cmp	r0, #0
   1ec78:	bhi	1ec8c <__assert_fail@plt+0xd7f8>
   1ec7c:	ldr	r0, [fp, #16]
   1ec80:	ldr	r0, [r0, #4]
   1ec84:	cmp	r0, #0
   1ec88:	bne	1ec90 <__assert_fail@plt+0xd7fc>
   1ec8c:	b	1ecb0 <__assert_fail@plt+0xd81c>
   1ec90:	movw	r0, #19148	; 0x4acc
   1ec94:	movt	r0, #4
   1ec98:	movw	r1, #16512	; 0x4080
   1ec9c:	movt	r1, #4
   1eca0:	movw	r2, #4528	; 0x11b0
   1eca4:	movw	r3, #19065	; 0x4a79
   1eca8:	movt	r3, #4
   1ecac:	bl	11494 <__assert_fail@plt>
   1ecb0:	ldr	r0, [fp, #16]
   1ecb4:	ldr	r0, [r0, #4]
   1ecb8:	str	r0, [fp, #-32]	; 0xffffffe0
   1ecbc:	movw	r0, #0
   1ecc0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ecc8:	cmp	r0, #0
   1eccc:	beq	1f010 <__assert_fail@plt+0xdb7c>
   1ecd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ecd4:	cmp	r0, #0
   1ecd8:	blt	1ece8 <__assert_fail@plt+0xd854>
   1ecdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ece0:	str	r0, [sp, #8]
   1ece4:	b	1ecf8 <__assert_fail@plt+0xd864>
   1ece8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ecec:	movw	r1, #0
   1ecf0:	sub	r0, r1, r0
   1ecf4:	str	r0, [sp, #8]
   1ecf8:	ldr	r0, [sp, #8]
   1ecfc:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed00:	ldr	r0, [fp, #16]
   1ed04:	ldr	r0, [r0, #8]
   1ed08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ed0c:	sub	r1, r1, #1
   1ed10:	add	r0, r0, r1, lsl #2
   1ed14:	ldr	r0, [r0]
   1ed18:	str	r0, [sp, #32]
   1ed1c:	ldr	r0, [sp, #32]
   1ed20:	cmp	r0, #0
   1ed24:	beq	1ed2c <__assert_fail@plt+0xd898>
   1ed28:	b	1ed4c <__assert_fail@plt+0xd8b8>
   1ed2c:	movw	r0, #19177	; 0x4ae9
   1ed30:	movt	r0, #4
   1ed34:	movw	r1, #16512	; 0x4080
   1ed38:	movt	r1, #4
   1ed3c:	movw	r2, #4548	; 0x11c4
   1ed40:	movw	r3, #19065	; 0x4a79
   1ed44:	movt	r3, #4
   1ed48:	bl	11494 <__assert_fail@plt>
   1ed4c:	movw	r0, #0
   1ed50:	str	r0, [fp, #-36]	; 0xffffffdc
   1ed54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ed58:	cmp	r0, #0
   1ed5c:	bne	1ed98 <__assert_fail@plt+0xd904>
   1ed60:	b	1ed64 <__assert_fail@plt+0xd8d0>
   1ed64:	movw	r0, #8
   1ed68:	str	r0, [sp, #20]
   1ed6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ed70:	add	r0, r0, #1
   1ed74:	str	r0, [fp, #-36]	; 0xffffffdc
   1ed78:	ldr	r0, [sp, #20]
   1ed7c:	ldr	r1, [sp, #32]
   1ed80:	lsr	r0, r1, r0
   1ed84:	str	r0, [sp, #32]
   1ed88:	ldr	r0, [sp, #32]
   1ed8c:	cmp	r0, #0
   1ed90:	bne	1ed64 <__assert_fail@plt+0xd8d0>
   1ed94:	b	1ed98 <__assert_fail@plt+0xd904>
   1ed98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ed9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eda0:	sub	r1, r1, #1
   1eda4:	lsl	r1, r1, #2
   1eda8:	add	r0, r0, r1
   1edac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edb0:	add	r0, r0, r1
   1edb4:	sub	r0, r0, #1
   1edb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edbc:	udiv	r0, r0, r1
   1edc0:	str	r0, [fp, #-28]	; 0xffffffe4
   1edc4:	ldr	r0, [fp, #-12]
   1edc8:	movw	r1, #0
   1edcc:	cmp	r0, r1
   1edd0:	bne	1ee00 <__assert_fail@plt+0xd96c>
   1edd4:	movw	r0, #24872	; 0x6128
   1edd8:	movt	r0, #5
   1eddc:	ldr	r0, [r0]
   1ede0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ede4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ede8:	mul	r1, r1, r2
   1edec:	str	r0, [sp, #4]
   1edf0:	mov	r0, r1
   1edf4:	ldr	r1, [sp, #4]
   1edf8:	blx	r1
   1edfc:	str	r0, [fp, #-12]
   1ee00:	ldr	r0, [fp, #8]
   1ee04:	cmp	r0, #0
   1ee08:	bne	1ee14 <__assert_fail@plt+0xd980>
   1ee0c:	bl	1eb90 <__assert_fail@plt+0xd6fc>
   1ee10:	str	r0, [fp, #8]
   1ee14:	ldr	r0, [fp, #-12]
   1ee18:	str	r0, [sp, #40]	; 0x28
   1ee1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee20:	ldr	r1, [fp, #8]
   1ee24:	cmp	r0, r1
   1ee28:	beq	1ee3c <__assert_fail@plt+0xd9a8>
   1ee2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee30:	lsl	r0, r0, #1
   1ee34:	str	r0, [sp]
   1ee38:	b	1ee48 <__assert_fail@plt+0xd9b4>
   1ee3c:	movw	r0, #0
   1ee40:	str	r0, [sp]
   1ee44:	b	1ee48 <__assert_fail@plt+0xd9b4>
   1ee48:	ldr	r0, [sp]
   1ee4c:	str	r0, [sp, #36]	; 0x24
   1ee50:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee54:	cmp	r0, #1
   1ee58:	bne	1ee88 <__assert_fail@plt+0xd9f4>
   1ee5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ee64:	sub	r1, r1, #1
   1ee68:	mul	r0, r0, r1
   1ee6c:	ldr	r1, [sp, #40]	; 0x28
   1ee70:	add	r0, r1, r0
   1ee74:	str	r0, [sp, #40]	; 0x28
   1ee78:	ldr	r0, [sp, #36]	; 0x24
   1ee7c:	movw	r1, #0
   1ee80:	sub	r0, r1, r0
   1ee84:	str	r0, [sp, #36]	; 0x24
   1ee88:	ldr	r0, [fp, #8]
   1ee8c:	cmp	r0, #1
   1ee90:	bne	1eea8 <__assert_fail@plt+0xda14>
   1ee94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee98:	sub	r0, r0, #1
   1ee9c:	ldr	r1, [sp, #40]	; 0x28
   1eea0:	add	r0, r1, r0
   1eea4:	str	r0, [sp, #40]	; 0x28
   1eea8:	movw	r0, #0
   1eeac:	str	r0, [sp, #28]
   1eeb0:	str	r0, [sp, #24]
   1eeb4:	str	r0, [fp, #-36]	; 0xffffffdc
   1eeb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eec0:	cmp	r0, r1
   1eec4:	bcs	1efa4 <__assert_fail@plt+0xdb10>
   1eec8:	movw	r0, #0
   1eecc:	str	r0, [sp, #16]
   1eed0:	ldr	r0, [sp, #16]
   1eed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eed8:	cmp	r0, r1
   1eedc:	bcs	1ef80 <__assert_fail@plt+0xdaec>
   1eee0:	movw	r0, #8
   1eee4:	str	r0, [sp, #12]
   1eee8:	ldr	r0, [sp, #28]
   1eeec:	cmp	r0, #0
   1eef0:	bne	1ef2c <__assert_fail@plt+0xda98>
   1eef4:	ldr	r0, [sp, #24]
   1eef8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eefc:	cmp	r0, r1
   1ef00:	bge	1ef24 <__assert_fail@plt+0xda90>
   1ef04:	ldr	r0, [fp, #16]
   1ef08:	ldr	r0, [r0, #8]
   1ef0c:	ldr	r1, [sp, #24]
   1ef10:	add	r2, r1, #1
   1ef14:	str	r2, [sp, #24]
   1ef18:	add	r0, r0, r1, lsl #2
   1ef1c:	ldr	r0, [r0]
   1ef20:	str	r0, [sp, #32]
   1ef24:	movw	r0, #4
   1ef28:	str	r0, [sp, #28]
   1ef2c:	ldr	r0, [sp, #32]
   1ef30:	ldr	r1, [sp, #40]	; 0x28
   1ef34:	strb	r0, [r1]
   1ef38:	ldr	r0, [sp, #12]
   1ef3c:	ldr	r1, [sp, #32]
   1ef40:	lsr	r0, r1, r0
   1ef44:	str	r0, [sp, #32]
   1ef48:	ldr	r0, [sp, #28]
   1ef4c:	mvn	r1, #0
   1ef50:	add	r0, r0, r1
   1ef54:	str	r0, [sp, #28]
   1ef58:	ldr	r0, [sp, #16]
   1ef5c:	add	r0, r0, #1
   1ef60:	str	r0, [sp, #16]
   1ef64:	ldr	r0, [fp, #8]
   1ef68:	ldr	r1, [sp, #40]	; 0x28
   1ef6c:	movw	r2, #0
   1ef70:	sub	r0, r2, r0
   1ef74:	add	r0, r1, r0
   1ef78:	str	r0, [sp, #40]	; 0x28
   1ef7c:	b	1eed0 <__assert_fail@plt+0xda3c>
   1ef80:	b	1ef84 <__assert_fail@plt+0xdaf0>
   1ef84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ef88:	add	r0, r0, #1
   1ef8c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ef90:	ldr	r0, [sp, #36]	; 0x24
   1ef94:	ldr	r1, [sp, #40]	; 0x28
   1ef98:	add	r0, r1, r0
   1ef9c:	str	r0, [sp, #40]	; 0x28
   1efa0:	b	1eeb8 <__assert_fail@plt+0xda24>
   1efa4:	ldr	r0, [sp, #24]
   1efa8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1efac:	cmp	r0, r1
   1efb0:	bne	1efb8 <__assert_fail@plt+0xdb24>
   1efb4:	b	1efd8 <__assert_fail@plt+0xdb44>
   1efb8:	movw	r0, #19187	; 0x4af3
   1efbc:	movt	r0, #4
   1efc0:	movw	r1, #16512	; 0x4080
   1efc4:	movt	r1, #4
   1efc8:	movw	r2, #4611	; 0x1203
   1efcc:	movw	r3, #19065	; 0x4a79
   1efd0:	movt	r3, #4
   1efd4:	bl	11494 <__assert_fail@plt>
   1efd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1efdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1efe0:	cmp	r0, r1
   1efe4:	bne	1efec <__assert_fail@plt+0xdb58>
   1efe8:	b	1f00c <__assert_fail@plt+0xdb78>
   1efec:	movw	r0, #19195	; 0x4afb
   1eff0:	movt	r0, #4
   1eff4:	movw	r1, #16512	; 0x4080
   1eff8:	movt	r1, #4
   1effc:	movw	r2, #4612	; 0x1204
   1f000:	movw	r3, #19065	; 0x4a79
   1f004:	movt	r3, #4
   1f008:	bl	11494 <__assert_fail@plt>
   1f00c:	b	1f010 <__assert_fail@plt+0xdb7c>
   1f010:	ldr	r0, [fp, #-16]
   1f014:	movw	r1, #0
   1f018:	cmp	r0, r1
   1f01c:	beq	1f02c <__assert_fail@plt+0xdb98>
   1f020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f024:	ldr	r1, [fp, #-16]
   1f028:	str	r0, [r1]
   1f02c:	ldr	r0, [fp, #-12]
   1f030:	sub	sp, fp, #8
   1f034:	pop	{r4, sl, fp, pc}
   1f038:	push	{fp, lr}
   1f03c:	mov	fp, sp
   1f040:	sub	sp, sp, #96	; 0x60
   1f044:	str	r0, [fp, #-4]
   1f048:	str	r1, [fp, #-8]
   1f04c:	str	r2, [fp, #-12]
   1f050:	movw	r0, #0
   1f054:	str	r0, [fp, #-16]
   1f058:	ldr	r0, [fp, #-8]
   1f05c:	cmp	r0, #0
   1f060:	bls	1f318 <__assert_fail@plt+0xde84>
   1f064:	ldr	r0, [fp, #-8]
   1f068:	ldr	r1, [fp, #-12]
   1f06c:	ldr	r1, [r1]
   1f070:	movw	r2, #32
   1f074:	sub	r1, r2, r1
   1f078:	lsr	r0, r0, r1
   1f07c:	str	r0, [fp, #-20]	; 0xffffffec
   1f080:	ldr	r0, [fp, #-8]
   1f084:	ldr	r1, [fp, #-12]
   1f088:	ldr	r1, [r1]
   1f08c:	lsl	r0, r0, r1
   1f090:	str	r0, [fp, #-24]	; 0xffffffe8
   1f094:	b	1f098 <__assert_fail@plt+0xdc04>
   1f098:	movw	r0, #32
   1f09c:	str	r0, [sp, #48]	; 0x30
   1f0a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f0a4:	str	r0, [sp, #12]
   1f0a8:	ldr	r0, [fp, #-12]
   1f0ac:	ldr	r0, [r0, #12]
   1f0b0:	str	r0, [sp, #8]
   1f0b4:	ldr	r0, [sp, #12]
   1f0b8:	movw	r1, #65535	; 0xffff
   1f0bc:	and	r0, r0, r1
   1f0c0:	str	r0, [sp, #28]
   1f0c4:	ldr	r0, [sp, #12]
   1f0c8:	lsr	r0, r0, #16
   1f0cc:	str	r0, [sp, #20]
   1f0d0:	ldr	r0, [sp, #8]
   1f0d4:	and	r0, r0, r1
   1f0d8:	str	r0, [sp, #24]
   1f0dc:	ldr	r0, [sp, #8]
   1f0e0:	lsr	r0, r0, #16
   1f0e4:	str	r0, [sp, #16]
   1f0e8:	ldr	r0, [sp, #28]
   1f0ec:	ldr	r1, [sp, #24]
   1f0f0:	mul	r0, r0, r1
   1f0f4:	str	r0, [sp, #44]	; 0x2c
   1f0f8:	ldr	r0, [sp, #28]
   1f0fc:	ldr	r1, [sp, #16]
   1f100:	mul	r0, r0, r1
   1f104:	str	r0, [sp, #40]	; 0x28
   1f108:	ldr	r0, [sp, #20]
   1f10c:	ldr	r1, [sp, #24]
   1f110:	mul	r0, r0, r1
   1f114:	str	r0, [sp, #36]	; 0x24
   1f118:	ldr	r0, [sp, #20]
   1f11c:	ldr	r1, [sp, #16]
   1f120:	mul	r0, r0, r1
   1f124:	str	r0, [sp, #32]
   1f128:	ldr	r0, [sp, #44]	; 0x2c
   1f12c:	lsr	r0, r0, #16
   1f130:	ldr	r1, [sp, #40]	; 0x28
   1f134:	add	r0, r1, r0
   1f138:	str	r0, [sp, #40]	; 0x28
   1f13c:	ldr	r0, [sp, #36]	; 0x24
   1f140:	ldr	r1, [sp, #40]	; 0x28
   1f144:	add	r0, r1, r0
   1f148:	str	r0, [sp, #40]	; 0x28
   1f14c:	ldr	r0, [sp, #40]	; 0x28
   1f150:	ldr	r1, [sp, #36]	; 0x24
   1f154:	cmp	r0, r1
   1f158:	bcs	1f168 <__assert_fail@plt+0xdcd4>
   1f15c:	ldr	r0, [sp, #32]
   1f160:	add	r0, r0, #65536	; 0x10000
   1f164:	str	r0, [sp, #32]
   1f168:	ldr	r0, [sp, #32]
   1f16c:	ldr	r1, [sp, #40]	; 0x28
   1f170:	lsr	r1, r1, #16
   1f174:	add	r0, r0, r1
   1f178:	str	r0, [fp, #-32]	; 0xffffffe0
   1f17c:	ldr	r0, [sp, #40]	; 0x28
   1f180:	lsl	r0, r0, #16
   1f184:	ldr	r1, [sp, #44]	; 0x2c
   1f188:	movw	r2, #65535	; 0xffff
   1f18c:	and	r1, r1, r2
   1f190:	add	r0, r0, r1
   1f194:	str	r0, [fp, #-36]	; 0xffffffdc
   1f198:	b	1f19c <__assert_fail@plt+0xdd08>
   1f19c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f1a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1a4:	add	r0, r0, r1
   1f1a8:	str	r0, [sp, #4]
   1f1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f1b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f1b4:	add	r1, r1, #1
   1f1b8:	add	r0, r0, r1
   1f1bc:	ldr	r1, [sp, #4]
   1f1c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f1c4:	cmp	r1, r2
   1f1c8:	movw	r1, #0
   1f1cc:	movcc	r1, #1
   1f1d0:	and	r1, r1, #1
   1f1d4:	add	r0, r0, r1
   1f1d8:	str	r0, [fp, #-32]	; 0xffffffe0
   1f1dc:	ldr	r0, [sp, #4]
   1f1e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1f1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f1ec:	ldr	r2, [fp, #-12]
   1f1f0:	ldr	r2, [r2, #4]
   1f1f4:	mul	r1, r1, r2
   1f1f8:	sub	r0, r0, r1
   1f1fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1f200:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f204:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f208:	cmp	r0, r1
   1f20c:	movw	r0, #0
   1f210:	movhi	r0, #1
   1f214:	and	r0, r0, #1
   1f218:	movw	r1, #0
   1f21c:	sub	r0, r1, r0
   1f220:	str	r0, [fp, #-44]	; 0xffffffd4
   1f224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f228:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f22c:	add	r0, r1, r0
   1f230:	str	r0, [fp, #-32]	; 0xffffffe0
   1f234:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f238:	ldr	r1, [fp, #-12]
   1f23c:	ldr	r1, [r1, #4]
   1f240:	and	r0, r0, r1
   1f244:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f248:	add	r0, r1, r0
   1f24c:	str	r0, [fp, #-40]	; 0xffffffd8
   1f250:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f254:	ldr	r1, [fp, #-12]
   1f258:	ldr	r1, [r1, #4]
   1f25c:	cmp	r0, r1
   1f260:	bcc	1f284 <__assert_fail@plt+0xddf0>
   1f264:	ldr	r0, [fp, #-12]
   1f268:	ldr	r0, [r0, #4]
   1f26c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f270:	sub	r0, r1, r0
   1f274:	str	r0, [fp, #-40]	; 0xffffffd8
   1f278:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f27c:	add	r0, r0, #1
   1f280:	str	r0, [fp, #-32]	; 0xffffffe0
   1f284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f288:	str	r0, [fp, #-28]	; 0xffffffe4
   1f28c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f290:	str	r0, [fp, #-8]
   1f294:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f298:	ldr	r1, [fp, #-12]
   1f29c:	ldr	r1, [r1]
   1f2a0:	movw	r2, #32
   1f2a4:	sub	r1, r2, r1
   1f2a8:	mvn	r2, #0
   1f2ac:	lsr	r1, r2, r1
   1f2b0:	and	r0, r0, r1
   1f2b4:	cmp	r0, #0
   1f2b8:	bne	1f2c0 <__assert_fail@plt+0xde2c>
   1f2bc:	b	1f2e0 <__assert_fail@plt+0xde4c>
   1f2c0:	movw	r0, #19461	; 0x4c05
   1f2c4:	movt	r0, #4
   1f2c8:	movw	r1, #16512	; 0x4080
   1f2cc:	movt	r1, #4
   1f2d0:	movw	r2, #1259	; 0x4eb
   1f2d4:	movw	r3, #19520	; 0x4c40
   1f2d8:	movt	r3, #4
   1f2dc:	bl	11494 <__assert_fail@plt>
   1f2e0:	ldr	r0, [fp, #-12]
   1f2e4:	ldr	r0, [r0]
   1f2e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f2ec:	lsr	r0, r1, r0
   1f2f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f2f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f2f8:	ldr	r1, [fp, #-4]
   1f2fc:	ldr	r2, [fp, #-16]
   1f300:	add	r1, r1, r2
   1f304:	strb	r0, [r1]
   1f308:	ldr	r0, [fp, #-16]
   1f30c:	add	r0, r0, #1
   1f310:	str	r0, [fp, #-16]
   1f314:	b	1f058 <__assert_fail@plt+0xdbc4>
   1f318:	ldr	r0, [fp, #-16]
   1f31c:	mov	sp, fp
   1f320:	pop	{fp, pc}
   1f324:	push	{fp, lr}
   1f328:	mov	fp, sp
   1f32c:	sub	sp, sp, #16
   1f330:	str	r0, [fp, #-4]
   1f334:	str	r1, [sp, #8]
   1f338:	str	r2, [sp, #4]
   1f33c:	ldr	r0, [sp, #4]
   1f340:	cmp	r0, #0
   1f344:	ble	1f34c <__assert_fail@plt+0xdeb8>
   1f348:	b	1f36c <__assert_fail@plt+0xded8>
   1f34c:	movw	r0, #20076	; 0x4e6c
   1f350:	movt	r0, #4
   1f354:	movw	r1, #16512	; 0x4080
   1f358:	movt	r1, #4
   1f35c:	movw	r2, #368	; 0x170
   1f360:	movw	r3, #19727	; 0x4d0f
   1f364:	movt	r3, #4
   1f368:	bl	11494 <__assert_fail@plt>
   1f36c:	movw	r0, #24876	; 0x612c
   1f370:	movt	r0, #5
   1f374:	ldr	r0, [r0]
   1f378:	ldr	r1, [fp, #-4]
   1f37c:	ldr	r2, [sp, #8]
   1f380:	lsl	r2, r2, #2
   1f384:	ldr	r3, [sp, #4]
   1f388:	lsl	r3, r3, #2
   1f38c:	str	r0, [sp]
   1f390:	mov	r0, r1
   1f394:	mov	r1, r2
   1f398:	mov	r2, r3
   1f39c:	ldr	r3, [sp]
   1f3a0:	blx	r3
   1f3a4:	mov	sp, fp
   1f3a8:	pop	{fp, pc}
   1f3ac:	push	{fp, lr}
   1f3b0:	mov	fp, sp
   1f3b4:	sub	sp, sp, #48	; 0x30
   1f3b8:	ldr	ip, [fp, #8]
   1f3bc:	str	r0, [fp, #-4]
   1f3c0:	str	r1, [fp, #-8]
   1f3c4:	str	r2, [fp, #-12]
   1f3c8:	str	r3, [fp, #-16]
   1f3cc:	movw	r0, #0
   1f3d0:	str	r0, [sp, #12]
   1f3d4:	ldr	r0, [fp, #8]
   1f3d8:	cmp	r0, #0
   1f3dc:	ble	1f3e4 <__assert_fail@plt+0xdf50>
   1f3e0:	b	1f404 <__assert_fail@plt+0xdf70>
   1f3e4:	movw	r0, #19892	; 0x4db4
   1f3e8:	movt	r0, #4
   1f3ec:	movw	r1, #16512	; 0x4080
   1f3f0:	movt	r1, #4
   1f3f4:	movw	r2, #1148	; 0x47c
   1f3f8:	movw	r3, #19899	; 0x4dbb
   1f3fc:	movt	r3, #4
   1f400:	bl	11494 <__assert_fail@plt>
   1f404:	ldr	r0, [fp, #-12]
   1f408:	ldr	r1, [fp, #8]
   1f40c:	cmp	r0, r1
   1f410:	blt	1f418 <__assert_fail@plt+0xdf84>
   1f414:	b	1f438 <__assert_fail@plt+0xdfa4>
   1f418:	movw	r0, #19964	; 0x4dfc
   1f41c:	movt	r0, #4
   1f420:	movw	r1, #16512	; 0x4080
   1f424:	movt	r1, #4
   1f428:	movw	r2, #1149	; 0x47d
   1f42c:	movw	r3, #19899	; 0x4dbb
   1f430:	movt	r3, #4
   1f434:	bl	11494 <__assert_fail@plt>
   1f438:	ldr	r1, [fp, #-16]
   1f43c:	ldr	r2, [fp, #8]
   1f440:	add	r0, sp, #16
   1f444:	bl	1a9cc <__assert_fail@plt+0x9538>
   1f448:	ldr	r0, [fp, #8]
   1f44c:	cmp	r0, #2
   1f450:	ble	1f4c0 <__assert_fail@plt+0xe02c>
   1f454:	ldr	r0, [sp, #16]
   1f458:	cmp	r0, #0
   1f45c:	bls	1f4c0 <__assert_fail@plt+0xe02c>
   1f460:	ldr	r0, [fp, #8]
   1f464:	bl	15f08 <__assert_fail@plt+0x4a74>
   1f468:	str	r0, [sp, #12]
   1f46c:	ldr	r0, [sp, #12]
   1f470:	ldr	r1, [fp, #-16]
   1f474:	ldr	r2, [fp, #8]
   1f478:	ldr	r3, [sp, #16]
   1f47c:	bl	149cc <__assert_fail@plt+0x3538>
   1f480:	str	r0, [sp, #8]
   1f484:	ldr	r0, [sp, #8]
   1f488:	cmp	r0, #0
   1f48c:	bne	1f494 <__assert_fail@plt+0xe000>
   1f490:	b	1f4b4 <__assert_fail@plt+0xe020>
   1f494:	movw	r0, #17493	; 0x4455
   1f498:	movt	r0, #4
   1f49c:	movw	r1, #16512	; 0x4080
   1f4a0:	movt	r1, #4
   1f4a4:	movw	r2, #1155	; 0x483
   1f4a8:	movw	r3, #19899	; 0x4dbb
   1f4ac:	movt	r3, #4
   1f4b0:	bl	11494 <__assert_fail@plt>
   1f4b4:	b	1f4b8 <__assert_fail@plt+0xe024>
   1f4b8:	ldr	r0, [sp, #12]
   1f4bc:	str	r0, [fp, #-16]
   1f4c0:	ldr	r0, [fp, #-4]
   1f4c4:	ldr	r1, [fp, #-8]
   1f4c8:	ldr	r2, [fp, #-12]
   1f4cc:	ldr	r3, [fp, #-16]
   1f4d0:	ldr	ip, [fp, #8]
   1f4d4:	str	ip, [sp]
   1f4d8:	add	ip, sp, #16
   1f4dc:	str	ip, [sp, #4]
   1f4e0:	bl	1abf8 <__assert_fail@plt+0x9764>
   1f4e4:	ldr	r0, [sp, #12]
   1f4e8:	movw	r1, #0
   1f4ec:	cmp	r0, r1
   1f4f0:	beq	1f500 <__assert_fail@plt+0xe06c>
   1f4f4:	ldr	r0, [sp, #12]
   1f4f8:	ldr	r1, [fp, #8]
   1f4fc:	bl	15f80 <__assert_fail@plt+0x4aec>
   1f500:	mov	sp, fp
   1f504:	pop	{fp, pc}
   1f508:	push	{fp, lr}
   1f50c:	mov	fp, sp
   1f510:	sub	sp, sp, #32
   1f514:	str	r0, [fp, #-4]
   1f518:	str	r1, [fp, #-8]
   1f51c:	str	r2, [fp, #-12]
   1f520:	ldr	r0, [fp, #-8]
   1f524:	cmp	r0, #0
   1f528:	bls	1f530 <__assert_fail@plt+0xe09c>
   1f52c:	b	1f550 <__assert_fail@plt+0xe0bc>
   1f530:	movw	r0, #20252	; 0x4f1c
   1f534:	movt	r0, #4
   1f538:	movw	r1, #16512	; 0x4080
   1f53c:	movt	r1, #4
   1f540:	movw	r2, #915	; 0x393
   1f544:	movw	r3, #20259	; 0x4f23
   1f548:	movt	r3, #4
   1f54c:	bl	11494 <__assert_fail@plt>
   1f550:	b	1f554 <__assert_fail@plt+0xe0c0>
   1f554:	ldr	r0, [fp, #-8]
   1f558:	str	r0, [sp, #12]
   1f55c:	movw	r0, #0
   1f560:	str	r0, [sp, #8]
   1f564:	movw	r0, #8
   1f568:	str	r0, [sp, #4]
   1f56c:	ldr	r0, [sp, #4]
   1f570:	movw	r1, #32
   1f574:	cmp	r1, r0
   1f578:	bls	1f5b4 <__assert_fail@plt+0xe120>
   1f57c:	b	1f580 <__assert_fail@plt+0xe0ec>
   1f580:	ldr	r0, [sp, #12]
   1f584:	and	r0, r0, #-16777216	; 0xff000000
   1f588:	cmp	r0, #0
   1f58c:	bne	1f5b0 <__assert_fail@plt+0xe11c>
   1f590:	ldr	r0, [sp, #4]
   1f594:	ldr	r1, [sp, #12]
   1f598:	lsl	r0, r1, r0
   1f59c:	str	r0, [sp, #12]
   1f5a0:	ldr	r0, [sp, #8]
   1f5a4:	add	r0, r0, #8
   1f5a8:	str	r0, [sp, #8]
   1f5ac:	b	1f580 <__assert_fail@plt+0xe0ec>
   1f5b0:	b	1f5b4 <__assert_fail@plt+0xe120>
   1f5b4:	b	1f5b8 <__assert_fail@plt+0xe124>
   1f5b8:	ldr	r0, [sp, #12]
   1f5bc:	and	r0, r0, #-2147483648	; 0x80000000
   1f5c0:	cmp	r0, #0
   1f5c4:	bne	1f5e4 <__assert_fail@plt+0xe150>
   1f5c8:	ldr	r0, [sp, #12]
   1f5cc:	lsl	r0, r0, #1
   1f5d0:	str	r0, [sp, #12]
   1f5d4:	ldr	r0, [sp, #8]
   1f5d8:	add	r0, r0, #1
   1f5dc:	str	r0, [sp, #8]
   1f5e0:	b	1f5b8 <__assert_fail@plt+0xe124>
   1f5e4:	ldr	r0, [sp, #8]
   1f5e8:	str	r0, [sp, #16]
   1f5ec:	ldr	r0, [sp, #16]
   1f5f0:	ldr	r1, [fp, #-4]
   1f5f4:	str	r0, [r1]
   1f5f8:	ldr	r0, [sp, #16]
   1f5fc:	cmp	r0, #0
   1f600:	bls	1f63c <__assert_fail@plt+0xe1a8>
   1f604:	ldr	r0, [fp, #-8]
   1f608:	ldr	r1, [sp, #16]
   1f60c:	lsl	r0, r0, r1
   1f610:	ldr	r1, [fp, #-12]
   1f614:	ldr	r2, [sp, #16]
   1f618:	movw	r3, #32
   1f61c:	sub	r2, r3, r2
   1f620:	lsr	r1, r1, r2
   1f624:	orr	r0, r0, r1
   1f628:	str	r0, [fp, #-8]
   1f62c:	ldr	r0, [sp, #16]
   1f630:	ldr	r1, [fp, #-12]
   1f634:	lsl	r0, r1, r0
   1f638:	str	r0, [fp, #-12]
   1f63c:	ldr	r0, [fp, #-8]
   1f640:	ldr	r1, [fp, #-4]
   1f644:	str	r0, [r1, #4]
   1f648:	ldr	r0, [fp, #-12]
   1f64c:	ldr	r1, [fp, #-4]
   1f650:	str	r0, [r1, #8]
   1f654:	ldr	r0, [fp, #-8]
   1f658:	ldr	r1, [fp, #-12]
   1f65c:	bl	150f0 <__assert_fail@plt+0x3c5c>
   1f660:	ldr	r1, [fp, #-4]
   1f664:	str	r0, [r1, #12]
   1f668:	mov	sp, fp
   1f66c:	pop	{fp, pc}
   1f670:	push	{fp, lr}
   1f674:	mov	fp, sp
   1f678:	sub	sp, sp, #176	; 0xb0
   1f67c:	str	r0, [fp, #-4]
   1f680:	str	r1, [fp, #-8]
   1f684:	str	r2, [fp, #-12]
   1f688:	str	r3, [fp, #-16]
   1f68c:	ldr	r0, [fp, #-12]
   1f690:	cmp	r0, #2
   1f694:	blt	1f69c <__assert_fail@plt+0xe208>
   1f698:	b	1f6bc <__assert_fail@plt+0xe228>
   1f69c:	movw	r0, #20510	; 0x501e
   1f6a0:	movt	r0, #4
   1f6a4:	movw	r1, #16512	; 0x4080
   1f6a8:	movt	r1, #4
   1f6ac:	movw	r2, #1009	; 0x3f1
   1f6b0:	movw	r3, #20518	; 0x5026
   1f6b4:	movt	r3, #4
   1f6b8:	bl	11494 <__assert_fail@plt>
   1f6bc:	ldr	r0, [fp, #-16]
   1f6c0:	ldr	r0, [r0]
   1f6c4:	str	r0, [fp, #-20]	; 0xffffffec
   1f6c8:	ldr	r0, [fp, #-16]
   1f6cc:	ldr	r0, [r0, #4]
   1f6d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6d4:	ldr	r0, [fp, #-16]
   1f6d8:	ldr	r0, [r0, #8]
   1f6dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1f6e0:	ldr	r0, [fp, #-16]
   1f6e4:	ldr	r0, [r0, #12]
   1f6e8:	str	r0, [fp, #-36]	; 0xffffffdc
   1f6ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f6f0:	cmp	r0, #0
   1f6f4:	bls	1f714 <__assert_fail@plt+0xe280>
   1f6f8:	ldr	r0, [fp, #-8]
   1f6fc:	ldr	r1, [fp, #-8]
   1f700:	ldr	r2, [fp, #-12]
   1f704:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f708:	bl	149cc <__assert_fail@plt+0x3538>
   1f70c:	str	r0, [fp, #-40]	; 0xffffffd8
   1f710:	b	1f71c <__assert_fail@plt+0xe288>
   1f714:	movw	r0, #0
   1f718:	str	r0, [fp, #-40]	; 0xffffffd8
   1f71c:	ldr	r0, [fp, #-8]
   1f720:	ldr	r1, [fp, #-12]
   1f724:	sub	r1, r1, #1
   1f728:	add	r0, r0, r1, lsl #2
   1f72c:	ldr	r0, [r0]
   1f730:	str	r0, [fp, #-44]	; 0xffffffd4
   1f734:	ldr	r0, [fp, #-12]
   1f738:	sub	r0, r0, #2
   1f73c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f740:	ldr	r0, [fp, #-8]
   1f744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f748:	add	r0, r0, r1, lsl #2
   1f74c:	ldr	r0, [r0]
   1f750:	str	r0, [fp, #-48]	; 0xffffffd0
   1f754:	b	1f758 <__assert_fail@plt+0xe2c4>
   1f758:	movw	r0, #32
   1f75c:	str	r0, [fp, #-72]	; 0xffffffb8
   1f760:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f764:	str	r0, [sp, #68]	; 0x44
   1f768:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f76c:	str	r0, [sp, #64]	; 0x40
   1f770:	ldr	r0, [sp, #68]	; 0x44
   1f774:	movw	r1, #65535	; 0xffff
   1f778:	and	r0, r0, r1
   1f77c:	str	r0, [sp, #84]	; 0x54
   1f780:	ldr	r0, [sp, #68]	; 0x44
   1f784:	lsr	r0, r0, #16
   1f788:	str	r0, [sp, #76]	; 0x4c
   1f78c:	ldr	r0, [sp, #64]	; 0x40
   1f790:	and	r0, r0, r1
   1f794:	str	r0, [sp, #80]	; 0x50
   1f798:	ldr	r0, [sp, #64]	; 0x40
   1f79c:	lsr	r0, r0, #16
   1f7a0:	str	r0, [sp, #72]	; 0x48
   1f7a4:	ldr	r0, [sp, #84]	; 0x54
   1f7a8:	ldr	r1, [sp, #80]	; 0x50
   1f7ac:	mul	r0, r0, r1
   1f7b0:	str	r0, [fp, #-76]	; 0xffffffb4
   1f7b4:	ldr	r0, [sp, #84]	; 0x54
   1f7b8:	ldr	r1, [sp, #72]	; 0x48
   1f7bc:	mul	r0, r0, r1
   1f7c0:	str	r0, [fp, #-80]	; 0xffffffb0
   1f7c4:	ldr	r0, [sp, #76]	; 0x4c
   1f7c8:	ldr	r1, [sp, #80]	; 0x50
   1f7cc:	mul	r0, r0, r1
   1f7d0:	str	r0, [fp, #-84]	; 0xffffffac
   1f7d4:	ldr	r0, [sp, #76]	; 0x4c
   1f7d8:	ldr	r1, [sp, #72]	; 0x48
   1f7dc:	mul	r0, r0, r1
   1f7e0:	str	r0, [sp, #88]	; 0x58
   1f7e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1f7e8:	lsr	r0, r0, #16
   1f7ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f7f0:	add	r0, r1, r0
   1f7f4:	str	r0, [fp, #-80]	; 0xffffffb0
   1f7f8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1f7fc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f800:	add	r0, r1, r0
   1f804:	str	r0, [fp, #-80]	; 0xffffffb0
   1f808:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1f80c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1f810:	cmp	r0, r1
   1f814:	bcs	1f824 <__assert_fail@plt+0xe390>
   1f818:	ldr	r0, [sp, #88]	; 0x58
   1f81c:	add	r0, r0, #65536	; 0x10000
   1f820:	str	r0, [sp, #88]	; 0x58
   1f824:	ldr	r0, [sp, #88]	; 0x58
   1f828:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f82c:	lsr	r1, r1, #16
   1f830:	add	r0, r0, r1
   1f834:	str	r0, [fp, #-52]	; 0xffffffcc
   1f838:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1f83c:	lsl	r0, r0, #16
   1f840:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1f844:	movw	r2, #65535	; 0xffff
   1f848:	and	r1, r1, r2
   1f84c:	add	r0, r0, r1
   1f850:	str	r0, [fp, #-56]	; 0xffffffc8
   1f854:	b	1f858 <__assert_fail@plt+0xe3c4>
   1f858:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f85c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f860:	add	r0, r0, r1
   1f864:	str	r0, [sp, #60]	; 0x3c
   1f868:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f86c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f870:	add	r0, r0, r1
   1f874:	ldr	r1, [sp, #60]	; 0x3c
   1f878:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f87c:	cmp	r1, r2
   1f880:	movw	r1, #0
   1f884:	movcc	r1, #1
   1f888:	and	r1, r1, #1
   1f88c:	add	r0, r0, r1
   1f890:	str	r0, [fp, #-52]	; 0xffffffcc
   1f894:	ldr	r0, [sp, #60]	; 0x3c
   1f898:	str	r0, [fp, #-56]	; 0xffffffc8
   1f89c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f8a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f8a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f8a8:	mul	r1, r1, r2
   1f8ac:	sub	r0, r0, r1
   1f8b0:	str	r0, [fp, #-40]	; 0xffffffd8
   1f8b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f8b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f8bc:	sub	r0, r0, r1
   1f8c0:	str	r0, [sp, #56]	; 0x38
   1f8c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f8c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f8cc:	sub	r0, r0, r1
   1f8d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1f8d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f8d8:	cmp	r1, r2
   1f8dc:	movw	r1, #0
   1f8e0:	movcc	r1, #1
   1f8e4:	and	r1, r1, #1
   1f8e8:	sub	r0, r0, r1
   1f8ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1f8f0:	ldr	r0, [sp, #56]	; 0x38
   1f8f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1f8f8:	b	1f8fc <__assert_fail@plt+0xe468>
   1f8fc:	movw	r0, #32
   1f900:	str	r0, [sp, #52]	; 0x34
   1f904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f908:	str	r0, [sp, #16]
   1f90c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f910:	str	r0, [sp, #12]
   1f914:	ldr	r0, [sp, #16]
   1f918:	movw	r1, #65535	; 0xffff
   1f91c:	and	r0, r0, r1
   1f920:	str	r0, [sp, #32]
   1f924:	ldr	r0, [sp, #16]
   1f928:	lsr	r0, r0, #16
   1f92c:	str	r0, [sp, #24]
   1f930:	ldr	r0, [sp, #12]
   1f934:	and	r0, r0, r1
   1f938:	str	r0, [sp, #28]
   1f93c:	ldr	r0, [sp, #12]
   1f940:	lsr	r0, r0, #16
   1f944:	str	r0, [sp, #20]
   1f948:	ldr	r0, [sp, #32]
   1f94c:	ldr	r1, [sp, #28]
   1f950:	mul	r0, r0, r1
   1f954:	str	r0, [sp, #48]	; 0x30
   1f958:	ldr	r0, [sp, #32]
   1f95c:	ldr	r1, [sp, #20]
   1f960:	mul	r0, r0, r1
   1f964:	str	r0, [sp, #44]	; 0x2c
   1f968:	ldr	r0, [sp, #24]
   1f96c:	ldr	r1, [sp, #28]
   1f970:	mul	r0, r0, r1
   1f974:	str	r0, [sp, #40]	; 0x28
   1f978:	ldr	r0, [sp, #24]
   1f97c:	ldr	r1, [sp, #20]
   1f980:	mul	r0, r0, r1
   1f984:	str	r0, [sp, #36]	; 0x24
   1f988:	ldr	r0, [sp, #48]	; 0x30
   1f98c:	lsr	r0, r0, #16
   1f990:	ldr	r1, [sp, #44]	; 0x2c
   1f994:	add	r0, r1, r0
   1f998:	str	r0, [sp, #44]	; 0x2c
   1f99c:	ldr	r0, [sp, #40]	; 0x28
   1f9a0:	ldr	r1, [sp, #44]	; 0x2c
   1f9a4:	add	r0, r1, r0
   1f9a8:	str	r0, [sp, #44]	; 0x2c
   1f9ac:	ldr	r0, [sp, #44]	; 0x2c
   1f9b0:	ldr	r1, [sp, #40]	; 0x28
   1f9b4:	cmp	r0, r1
   1f9b8:	bcs	1f9c8 <__assert_fail@plt+0xe534>
   1f9bc:	ldr	r0, [sp, #36]	; 0x24
   1f9c0:	add	r0, r0, #65536	; 0x10000
   1f9c4:	str	r0, [sp, #36]	; 0x24
   1f9c8:	ldr	r0, [sp, #36]	; 0x24
   1f9cc:	ldr	r1, [sp, #44]	; 0x2c
   1f9d0:	lsr	r1, r1, #16
   1f9d4:	add	r0, r0, r1
   1f9d8:	str	r0, [fp, #-60]	; 0xffffffc4
   1f9dc:	ldr	r0, [sp, #44]	; 0x2c
   1f9e0:	lsl	r0, r0, #16
   1f9e4:	ldr	r1, [sp, #48]	; 0x30
   1f9e8:	movw	r2, #65535	; 0xffff
   1f9ec:	and	r1, r1, r2
   1f9f0:	add	r0, r0, r1
   1f9f4:	str	r0, [fp, #-64]	; 0xffffffc0
   1f9f8:	b	1f9fc <__assert_fail@plt+0xe568>
   1f9fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fa00:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1fa04:	sub	r0, r0, r1
   1fa08:	str	r0, [sp, #8]
   1fa0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fa10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1fa14:	sub	r0, r0, r1
   1fa18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fa1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1fa20:	cmp	r1, r2
   1fa24:	movw	r1, #0
   1fa28:	movcc	r1, #1
   1fa2c:	and	r1, r1, #1
   1fa30:	sub	r0, r0, r1
   1fa34:	str	r0, [fp, #-40]	; 0xffffffd8
   1fa38:	ldr	r0, [sp, #8]
   1fa3c:	str	r0, [fp, #-44]	; 0xffffffd4
   1fa40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fa44:	add	r0, r0, #1
   1fa48:	str	r0, [fp, #-52]	; 0xffffffcc
   1fa4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fa50:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1fa54:	cmp	r0, r1
   1fa58:	movw	r0, #0
   1fa5c:	movcs	r0, #1
   1fa60:	and	r0, r0, #1
   1fa64:	movw	r1, #0
   1fa68:	sub	r0, r1, r0
   1fa6c:	str	r0, [fp, #-68]	; 0xffffffbc
   1fa70:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1fa74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fa78:	add	r0, r1, r0
   1fa7c:	str	r0, [fp, #-52]	; 0xffffffcc
   1fa80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fa84:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1fa88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa8c:	and	r1, r1, r2
   1fa90:	add	r0, r0, r1
   1fa94:	str	r0, [sp, #4]
   1fa98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fa9c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1faa0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1faa4:	and	r1, r1, r2
   1faa8:	add	r0, r0, r1
   1faac:	ldr	r1, [sp, #4]
   1fab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fab4:	cmp	r1, r2
   1fab8:	movw	r1, #0
   1fabc:	movcc	r1, #1
   1fac0:	and	r1, r1, #1
   1fac4:	add	r0, r0, r1
   1fac8:	str	r0, [fp, #-40]	; 0xffffffd8
   1facc:	ldr	r0, [sp, #4]
   1fad0:	str	r0, [fp, #-44]	; 0xffffffd4
   1fad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fad8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fadc:	cmp	r0, r1
   1fae0:	bcc	1fb5c <__assert_fail@plt+0xe6c8>
   1fae4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1faec:	cmp	r0, r1
   1faf0:	bhi	1fb04 <__assert_fail@plt+0xe670>
   1faf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1faf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fafc:	cmp	r0, r1
   1fb00:	bcc	1fb58 <__assert_fail@plt+0xe6c4>
   1fb04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fb08:	add	r0, r0, #1
   1fb0c:	str	r0, [fp, #-52]	; 0xffffffcc
   1fb10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fb14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fb18:	sub	r0, r0, r1
   1fb1c:	str	r0, [sp]
   1fb20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fb28:	sub	r0, r0, r1
   1fb2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fb30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fb34:	cmp	r1, r2
   1fb38:	movw	r1, #0
   1fb3c:	movcc	r1, #1
   1fb40:	and	r1, r1, #1
   1fb44:	sub	r0, r0, r1
   1fb48:	str	r0, [fp, #-40]	; 0xffffffd8
   1fb4c:	ldr	r0, [sp]
   1fb50:	str	r0, [fp, #-44]	; 0xffffffd4
   1fb54:	b	1fb58 <__assert_fail@plt+0xe6c4>
   1fb58:	b	1fb5c <__assert_fail@plt+0xe6c8>
   1fb5c:	b	1fb60 <__assert_fail@plt+0xe6cc>
   1fb60:	ldr	r0, [fp, #-4]
   1fb64:	movw	r1, #0
   1fb68:	cmp	r0, r1
   1fb6c:	beq	1fb84 <__assert_fail@plt+0xe6f0>
   1fb70:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fb74:	ldr	r1, [fp, #-4]
   1fb78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fb7c:	add	r1, r1, r2, lsl #2
   1fb80:	str	r0, [r1]
   1fb84:	b	1fb88 <__assert_fail@plt+0xe6f4>
   1fb88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb8c:	mvn	r1, #0
   1fb90:	add	r0, r0, r1
   1fb94:	str	r0, [fp, #-24]	; 0xffffffe8
   1fb98:	cmp	r0, #0
   1fb9c:	bge	1f740 <__assert_fail@plt+0xe2ac>
   1fba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fba4:	cmp	r0, #0
   1fba8:	bls	1fc2c <__assert_fail@plt+0xe798>
   1fbac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fbb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fbb4:	movw	r2, #32
   1fbb8:	sub	r1, r2, r1
   1fbbc:	mvn	r2, #0
   1fbc0:	lsr	r1, r2, r1
   1fbc4:	and	r0, r0, r1
   1fbc8:	cmp	r0, #0
   1fbcc:	bne	1fbd4 <__assert_fail@plt+0xe740>
   1fbd0:	b	1fbf4 <__assert_fail@plt+0xe760>
   1fbd4:	movw	r0, #20602	; 0x507a
   1fbd8:	movt	r0, #4
   1fbdc:	movw	r1, #16512	; 0x4080
   1fbe0:	movt	r1, #4
   1fbe4:	movw	r2, #1036	; 0x40c
   1fbe8:	movw	r3, #20518	; 0x5026
   1fbec:	movt	r3, #4
   1fbf0:	bl	11494 <__assert_fail@plt>
   1fbf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fbf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fbfc:	lsr	r0, r0, r1
   1fc00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fc04:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc08:	movw	r3, #32
   1fc0c:	sub	r2, r3, r2
   1fc10:	lsl	r1, r1, r2
   1fc14:	orr	r0, r0, r1
   1fc18:	str	r0, [fp, #-44]	; 0xffffffd4
   1fc1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fc24:	lsr	r0, r1, r0
   1fc28:	str	r0, [fp, #-40]	; 0xffffffd8
   1fc2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fc30:	ldr	r1, [fp, #-8]
   1fc34:	str	r0, [r1, #4]
   1fc38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fc3c:	ldr	r1, [fp, #-8]
   1fc40:	str	r0, [r1]
   1fc44:	mov	sp, fp
   1fc48:	pop	{fp, pc}
   1fc4c:	push	{r4, sl, fp, lr}
   1fc50:	add	fp, sp, #8
   1fc54:	sub	sp, sp, #176	; 0xb0
   1fc58:	ldr	ip, [fp, #16]
   1fc5c:	ldr	lr, [fp, #12]
   1fc60:	ldr	r4, [fp, #8]
   1fc64:	str	r0, [fp, #-12]
   1fc68:	str	r1, [fp, #-16]
   1fc6c:	str	r2, [fp, #-20]	; 0xffffffec
   1fc70:	str	r3, [fp, #-24]	; 0xffffffe8
   1fc74:	ldr	r0, [fp, #12]
   1fc78:	cmp	r0, #2
   1fc7c:	ble	1fc84 <__assert_fail@plt+0xe7f0>
   1fc80:	b	1fca4 <__assert_fail@plt+0xe810>
   1fc84:	movw	r0, #20656	; 0x50b0
   1fc88:	movt	r0, #4
   1fc8c:	movw	r1, #16512	; 0x4080
   1fc90:	movt	r1, #4
   1fc94:	movw	r2, #1057	; 0x421
   1fc98:	movw	r3, #20663	; 0x50b7
   1fc9c:	movt	r3, #4
   1fca0:	bl	11494 <__assert_fail@plt>
   1fca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fca8:	ldr	r1, [fp, #12]
   1fcac:	cmp	r0, r1
   1fcb0:	blt	1fcb8 <__assert_fail@plt+0xe824>
   1fcb4:	b	1fcd8 <__assert_fail@plt+0xe844>
   1fcb8:	movw	r0, #19964	; 0x4dfc
   1fcbc:	movt	r0, #4
   1fcc0:	movw	r1, #16512	; 0x4080
   1fcc4:	movt	r1, #4
   1fcc8:	movw	r2, #1058	; 0x422
   1fccc:	movw	r3, #20663	; 0x50b7
   1fcd0:	movt	r3, #4
   1fcd4:	bl	11494 <__assert_fail@plt>
   1fcd8:	ldr	r0, [fp, #8]
   1fcdc:	ldr	r1, [fp, #12]
   1fce0:	add	r0, r0, r1, lsl #2
   1fce4:	ldr	r0, [r0, #-4]
   1fce8:	str	r0, [fp, #-32]	; 0xffffffe0
   1fcec:	ldr	r0, [fp, #8]
   1fcf0:	ldr	r1, [fp, #12]
   1fcf4:	sub	r1, r1, #2
   1fcf8:	add	r0, r0, r1, lsl #2
   1fcfc:	ldr	r0, [r0]
   1fd00:	str	r0, [fp, #-36]	; 0xffffffdc
   1fd04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fd08:	and	r0, r0, #-2147483648	; 0x80000000
   1fd0c:	cmp	r0, #0
   1fd10:	beq	1fd18 <__assert_fail@plt+0xe884>
   1fd14:	b	1fd38 <__assert_fail@plt+0xe8a4>
   1fd18:	movw	r0, #20754	; 0x5112
   1fd1c:	movt	r0, #4
   1fd20:	movw	r1, #16512	; 0x4080
   1fd24:	movt	r1, #4
   1fd28:	movw	r2, #1063	; 0x427
   1fd2c:	movw	r3, #20663	; 0x50b7
   1fd30:	movt	r3, #4
   1fd34:	bl	11494 <__assert_fail@plt>
   1fd38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd3c:	ldr	r1, [fp, #12]
   1fd40:	sub	r0, r0, r1
   1fd44:	str	r0, [fp, #-28]	; 0xffffffe4
   1fd48:	ldr	r0, [fp, #-16]
   1fd4c:	ldr	r1, [fp, #12]
   1fd50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fd54:	add	r1, r1, r2
   1fd58:	sub	r1, r1, #1
   1fd5c:	add	r0, r0, r1, lsl #2
   1fd60:	ldr	r0, [r0]
   1fd64:	str	r0, [fp, #-52]	; 0xffffffcc
   1fd68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fd70:	cmp	r0, r1
   1fd74:	bne	1fdd0 <__assert_fail@plt+0xe93c>
   1fd78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fd7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fd80:	cmp	r0, r1
   1fd84:	bne	1fdd0 <__assert_fail@plt+0xe93c>
   1fd88:	mvn	r0, #0
   1fd8c:	str	r0, [fp, #-48]	; 0xffffffd0
   1fd90:	ldr	r0, [fp, #-16]
   1fd94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd98:	add	r0, r0, r1, lsl #2
   1fd9c:	ldr	r1, [fp, #8]
   1fda0:	ldr	r2, [fp, #12]
   1fda4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fda8:	bl	14568 <__assert_fail@plt+0x30d4>
   1fdac:	ldr	r1, [fp, #-16]
   1fdb0:	ldr	r2, [fp, #12]
   1fdb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fdb8:	add	r2, r2, r3
   1fdbc:	sub	r2, r2, #1
   1fdc0:	add	r1, r1, r2, lsl #2
   1fdc4:	ldr	r1, [r1]
   1fdc8:	str	r1, [fp, #-24]	; 0xffffffe8
   1fdcc:	b	20308 <__assert_fail@plt+0xee74>
   1fdd0:	b	1fdd4 <__assert_fail@plt+0xe940>
   1fdd4:	b	1fdd8 <__assert_fail@plt+0xe944>
   1fdd8:	movw	r0, #32
   1fddc:	str	r0, [fp, #-72]	; 0xffffffb8
   1fde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fde4:	str	r0, [sp, #76]	; 0x4c
   1fde8:	ldr	r0, [fp, #16]
   1fdec:	str	r0, [sp, #72]	; 0x48
   1fdf0:	ldr	r0, [sp, #76]	; 0x4c
   1fdf4:	movw	r1, #65535	; 0xffff
   1fdf8:	and	r0, r0, r1
   1fdfc:	str	r0, [sp, #92]	; 0x5c
   1fe00:	ldr	r0, [sp, #76]	; 0x4c
   1fe04:	lsr	r0, r0, #16
   1fe08:	str	r0, [sp, #84]	; 0x54
   1fe0c:	ldr	r0, [sp, #72]	; 0x48
   1fe10:	and	r0, r0, r1
   1fe14:	str	r0, [sp, #88]	; 0x58
   1fe18:	ldr	r0, [sp, #72]	; 0x48
   1fe1c:	lsr	r0, r0, #16
   1fe20:	str	r0, [sp, #80]	; 0x50
   1fe24:	ldr	r0, [sp, #92]	; 0x5c
   1fe28:	ldr	r1, [sp, #88]	; 0x58
   1fe2c:	mul	r0, r0, r1
   1fe30:	str	r0, [fp, #-76]	; 0xffffffb4
   1fe34:	ldr	r0, [sp, #92]	; 0x5c
   1fe38:	ldr	r1, [sp, #80]	; 0x50
   1fe3c:	mul	r0, r0, r1
   1fe40:	str	r0, [fp, #-80]	; 0xffffffb0
   1fe44:	ldr	r0, [sp, #84]	; 0x54
   1fe48:	ldr	r1, [sp, #88]	; 0x58
   1fe4c:	mul	r0, r0, r1
   1fe50:	str	r0, [fp, #-84]	; 0xffffffac
   1fe54:	ldr	r0, [sp, #84]	; 0x54
   1fe58:	ldr	r1, [sp, #80]	; 0x50
   1fe5c:	mul	r0, r0, r1
   1fe60:	str	r0, [fp, #-88]	; 0xffffffa8
   1fe64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1fe68:	lsr	r0, r0, #16
   1fe6c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1fe70:	add	r0, r1, r0
   1fe74:	str	r0, [fp, #-80]	; 0xffffffb0
   1fe78:	ldr	r0, [fp, #-84]	; 0xffffffac
   1fe7c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1fe80:	add	r0, r1, r0
   1fe84:	str	r0, [fp, #-80]	; 0xffffffb0
   1fe88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1fe8c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1fe90:	cmp	r0, r1
   1fe94:	bcs	1fea4 <__assert_fail@plt+0xea10>
   1fe98:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1fe9c:	add	r0, r0, #65536	; 0x10000
   1fea0:	str	r0, [fp, #-88]	; 0xffffffa8
   1fea4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1fea8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1feac:	lsr	r1, r1, #16
   1feb0:	add	r0, r0, r1
   1feb4:	str	r0, [fp, #-48]	; 0xffffffd0
   1feb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1febc:	lsl	r0, r0, #16
   1fec0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1fec4:	movw	r2, #65535	; 0xffff
   1fec8:	and	r1, r1, r2
   1fecc:	add	r0, r0, r1
   1fed0:	str	r0, [fp, #-56]	; 0xffffffc8
   1fed4:	b	1fed8 <__assert_fail@plt+0xea44>
   1fed8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fedc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fee0:	add	r0, r0, r1
   1fee4:	str	r0, [sp, #68]	; 0x44
   1fee8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1feec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fef0:	add	r0, r0, r1
   1fef4:	ldr	r1, [sp, #68]	; 0x44
   1fef8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1fefc:	cmp	r1, r2
   1ff00:	movw	r1, #0
   1ff04:	movcc	r1, #1
   1ff08:	and	r1, r1, #1
   1ff0c:	add	r0, r0, r1
   1ff10:	str	r0, [fp, #-48]	; 0xffffffd0
   1ff14:	ldr	r0, [sp, #68]	; 0x44
   1ff18:	str	r0, [fp, #-56]	; 0xffffffc8
   1ff1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ff20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ff24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ff28:	mul	r1, r1, r2
   1ff2c:	sub	r0, r0, r1
   1ff30:	str	r0, [fp, #-24]	; 0xffffffe8
   1ff34:	ldr	r0, [fp, #-16]
   1ff38:	ldr	r1, [fp, #12]
   1ff3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ff40:	add	r1, r1, r2
   1ff44:	add	r0, r0, r1, lsl #2
   1ff48:	ldr	r0, [r0, #-8]
   1ff4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ff50:	sub	r0, r0, r1
   1ff54:	str	r0, [sp, #64]	; 0x40
   1ff58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ff5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ff60:	sub	r0, r0, r1
   1ff64:	ldr	r1, [fp, #-16]
   1ff68:	ldr	r2, [fp, #12]
   1ff6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff70:	add	r2, r2, r3
   1ff74:	sub	r2, r2, #2
   1ff78:	add	r1, r1, r2, lsl #2
   1ff7c:	ldr	r1, [r1]
   1ff80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ff84:	cmp	r1, r2
   1ff88:	movw	r1, #0
   1ff8c:	movcc	r1, #1
   1ff90:	and	r1, r1, #1
   1ff94:	sub	r0, r0, r1
   1ff98:	str	r0, [fp, #-24]	; 0xffffffe8
   1ff9c:	ldr	r0, [sp, #64]	; 0x40
   1ffa0:	str	r0, [fp, #-52]	; 0xffffffcc
   1ffa4:	b	1ffa8 <__assert_fail@plt+0xeb14>
   1ffa8:	movw	r0, #32
   1ffac:	str	r0, [sp, #60]	; 0x3c
   1ffb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ffb4:	str	r0, [sp, #24]
   1ffb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ffbc:	str	r0, [sp, #20]
   1ffc0:	ldr	r0, [sp, #24]
   1ffc4:	movw	r1, #65535	; 0xffff
   1ffc8:	and	r0, r0, r1
   1ffcc:	str	r0, [sp, #40]	; 0x28
   1ffd0:	ldr	r0, [sp, #24]
   1ffd4:	lsr	r0, r0, #16
   1ffd8:	str	r0, [sp, #32]
   1ffdc:	ldr	r0, [sp, #20]
   1ffe0:	and	r0, r0, r1
   1ffe4:	str	r0, [sp, #36]	; 0x24
   1ffe8:	ldr	r0, [sp, #20]
   1ffec:	lsr	r0, r0, #16
   1fff0:	str	r0, [sp, #28]
   1fff4:	ldr	r0, [sp, #40]	; 0x28
   1fff8:	ldr	r1, [sp, #36]	; 0x24
   1fffc:	mul	r0, r0, r1
   20000:	str	r0, [sp, #56]	; 0x38
   20004:	ldr	r0, [sp, #40]	; 0x28
   20008:	ldr	r1, [sp, #28]
   2000c:	mul	r0, r0, r1
   20010:	str	r0, [sp, #52]	; 0x34
   20014:	ldr	r0, [sp, #32]
   20018:	ldr	r1, [sp, #36]	; 0x24
   2001c:	mul	r0, r0, r1
   20020:	str	r0, [sp, #48]	; 0x30
   20024:	ldr	r0, [sp, #32]
   20028:	ldr	r1, [sp, #28]
   2002c:	mul	r0, r0, r1
   20030:	str	r0, [sp, #44]	; 0x2c
   20034:	ldr	r0, [sp, #56]	; 0x38
   20038:	lsr	r0, r0, #16
   2003c:	ldr	r1, [sp, #52]	; 0x34
   20040:	add	r0, r1, r0
   20044:	str	r0, [sp, #52]	; 0x34
   20048:	ldr	r0, [sp, #48]	; 0x30
   2004c:	ldr	r1, [sp, #52]	; 0x34
   20050:	add	r0, r1, r0
   20054:	str	r0, [sp, #52]	; 0x34
   20058:	ldr	r0, [sp, #52]	; 0x34
   2005c:	ldr	r1, [sp, #48]	; 0x30
   20060:	cmp	r0, r1
   20064:	bcs	20074 <__assert_fail@plt+0xebe0>
   20068:	ldr	r0, [sp, #44]	; 0x2c
   2006c:	add	r0, r0, #65536	; 0x10000
   20070:	str	r0, [sp, #44]	; 0x2c
   20074:	ldr	r0, [sp, #44]	; 0x2c
   20078:	ldr	r1, [sp, #52]	; 0x34
   2007c:	lsr	r1, r1, #16
   20080:	add	r0, r0, r1
   20084:	str	r0, [fp, #-60]	; 0xffffffc4
   20088:	ldr	r0, [sp, #52]	; 0x34
   2008c:	lsl	r0, r0, #16
   20090:	ldr	r1, [sp, #56]	; 0x38
   20094:	movw	r2, #65535	; 0xffff
   20098:	and	r1, r1, r2
   2009c:	add	r0, r0, r1
   200a0:	str	r0, [fp, #-64]	; 0xffffffc0
   200a4:	b	200a8 <__assert_fail@plt+0xec14>
   200a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   200ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   200b0:	sub	r0, r0, r1
   200b4:	str	r0, [sp, #16]
   200b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   200bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   200c0:	sub	r0, r0, r1
   200c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   200c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   200cc:	cmp	r1, r2
   200d0:	movw	r1, #0
   200d4:	movcc	r1, #1
   200d8:	and	r1, r1, #1
   200dc:	sub	r0, r0, r1
   200e0:	str	r0, [fp, #-24]	; 0xffffffe8
   200e4:	ldr	r0, [sp, #16]
   200e8:	str	r0, [fp, #-52]	; 0xffffffcc
   200ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   200f0:	add	r0, r0, #1
   200f4:	str	r0, [fp, #-48]	; 0xffffffd0
   200f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   200fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20100:	cmp	r0, r1
   20104:	movw	r0, #0
   20108:	movcs	r0, #1
   2010c:	and	r0, r0, #1
   20110:	movw	r1, #0
   20114:	sub	r0, r1, r0
   20118:	str	r0, [fp, #-68]	; 0xffffffbc
   2011c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   20120:	ldr	r1, [fp, #-48]	; 0xffffffd0
   20124:	add	r0, r1, r0
   20128:	str	r0, [fp, #-48]	; 0xffffffd0
   2012c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20130:	ldr	r1, [fp, #-68]	; 0xffffffbc
   20134:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20138:	and	r1, r1, r2
   2013c:	add	r0, r0, r1
   20140:	str	r0, [sp, #12]
   20144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20148:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2014c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20150:	and	r1, r1, r2
   20154:	add	r0, r0, r1
   20158:	ldr	r1, [sp, #12]
   2015c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   20160:	cmp	r1, r2
   20164:	movw	r1, #0
   20168:	movcc	r1, #1
   2016c:	and	r1, r1, #1
   20170:	add	r0, r0, r1
   20174:	str	r0, [fp, #-24]	; 0xffffffe8
   20178:	ldr	r0, [sp, #12]
   2017c:	str	r0, [fp, #-52]	; 0xffffffcc
   20180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20184:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20188:	cmp	r0, r1
   2018c:	bcc	20208 <__assert_fail@plt+0xed74>
   20190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20194:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20198:	cmp	r0, r1
   2019c:	bhi	201b0 <__assert_fail@plt+0xed1c>
   201a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   201a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   201a8:	cmp	r0, r1
   201ac:	bcc	20204 <__assert_fail@plt+0xed70>
   201b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   201b4:	add	r0, r0, #1
   201b8:	str	r0, [fp, #-48]	; 0xffffffd0
   201bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   201c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   201c4:	sub	r0, r0, r1
   201c8:	str	r0, [sp, #8]
   201cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   201d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   201d4:	sub	r0, r0, r1
   201d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   201dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   201e0:	cmp	r1, r2
   201e4:	movw	r1, #0
   201e8:	movcc	r1, #1
   201ec:	and	r1, r1, #1
   201f0:	sub	r0, r0, r1
   201f4:	str	r0, [fp, #-24]	; 0xffffffe8
   201f8:	ldr	r0, [sp, #8]
   201fc:	str	r0, [fp, #-52]	; 0xffffffcc
   20200:	b	20204 <__assert_fail@plt+0xed70>
   20204:	b	20208 <__assert_fail@plt+0xed74>
   20208:	b	2020c <__assert_fail@plt+0xed78>
   2020c:	ldr	r0, [fp, #-16]
   20210:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20214:	add	r0, r0, r1, lsl #2
   20218:	ldr	r1, [fp, #8]
   2021c:	ldr	r2, [fp, #12]
   20220:	sub	r2, r2, #2
   20224:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20228:	bl	14568 <__assert_fail@plt+0x30d4>
   2022c:	str	r0, [fp, #-40]	; 0xffffffd8
   20230:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20234:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20238:	mov	r2, #0
   2023c:	cmp	r0, r1
   20240:	mov	r0, r2
   20244:	movwcc	r0, #1
   20248:	str	r0, [fp, #-44]	; 0xffffffd4
   2024c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20250:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20254:	sub	r0, r0, r1
   20258:	str	r0, [fp, #-52]	; 0xffffffcc
   2025c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20260:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20264:	cmp	r0, r1
   20268:	movwcc	r2, #1
   2026c:	str	r2, [fp, #-40]	; 0xffffffd8
   20270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20274:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20278:	sub	r0, r0, r1
   2027c:	str	r0, [fp, #-24]	; 0xffffffe8
   20280:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20284:	ldr	r1, [fp, #-16]
   20288:	ldr	r2, [fp, #12]
   2028c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20290:	add	r2, r2, r3
   20294:	sub	r2, r2, #2
   20298:	add	r1, r1, r2, lsl #2
   2029c:	str	r0, [r1]
   202a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   202a4:	cmp	r0, #0
   202a8:	beq	20304 <__assert_fail@plt+0xee70>
   202ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   202b0:	ldr	r1, [fp, #-16]
   202b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   202b8:	add	r1, r1, r2, lsl #2
   202bc:	mov	r2, r1
   202c0:	ldr	r3, [fp, #8]
   202c4:	ldr	ip, [fp, #12]
   202c8:	sub	ip, ip, #1
   202cc:	str	r0, [sp, #4]
   202d0:	mov	r0, r2
   202d4:	mov	r2, r3
   202d8:	mov	r3, ip
   202dc:	bl	13dbc <__assert_fail@plt+0x2928>
   202e0:	ldr	r1, [sp, #4]
   202e4:	add	r0, r1, r0
   202e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   202ec:	add	r0, r1, r0
   202f0:	str	r0, [fp, #-24]	; 0xffffffe8
   202f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   202f8:	mvn	r1, #0
   202fc:	add	r0, r0, r1
   20300:	str	r0, [fp, #-48]	; 0xffffffd0
   20304:	b	20308 <__assert_fail@plt+0xee74>
   20308:	ldr	r0, [fp, #-12]
   2030c:	movw	r1, #0
   20310:	cmp	r0, r1
   20314:	beq	2032c <__assert_fail@plt+0xee98>
   20318:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2031c:	ldr	r1, [fp, #-12]
   20320:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20324:	add	r1, r1, r2, lsl #2
   20328:	str	r0, [r1]
   2032c:	b	20330 <__assert_fail@plt+0xee9c>
   20330:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20334:	mvn	r1, #0
   20338:	add	r0, r0, r1
   2033c:	str	r0, [fp, #-28]	; 0xffffffe4
   20340:	cmp	r0, #0
   20344:	bge	1fd48 <__assert_fail@plt+0xe8b4>
   20348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2034c:	ldr	r1, [fp, #-16]
   20350:	ldr	r2, [fp, #12]
   20354:	sub	r2, r2, #1
   20358:	add	r1, r1, r2, lsl #2
   2035c:	str	r0, [r1]
   20360:	sub	sp, fp, #8
   20364:	pop	{r4, sl, fp, pc}
   20368:	push	{fp, lr}
   2036c:	mov	fp, sp
   20370:	sub	sp, sp, #56	; 0x38
   20374:	str	r0, [fp, #-4]
   20378:	str	r1, [fp, #-8]
   2037c:	movw	r0, #0
   20380:	str	r0, [fp, #-16]
   20384:	ldr	r0, [fp, #-8]
   20388:	and	r0, r0, #1
   2038c:	cmp	r0, #0
   20390:	beq	20398 <__assert_fail@plt+0xef04>
   20394:	b	203b8 <__assert_fail@plt+0xef24>
   20398:	movw	r0, #20976	; 0x51f0
   2039c:	movt	r0, #4
   203a0:	movw	r1, #16512	; 0x4080
   203a4:	movt	r1, #4
   203a8:	movw	r2, #3383	; 0xd37
   203ac:	movw	r3, #20982	; 0x51f6
   203b0:	movt	r3, #4
   203b4:	bl	11494 <__assert_fail@plt>
   203b8:	ldr	r0, [fp, #-4]
   203bc:	cmp	r0, #0
   203c0:	beq	203c8 <__assert_fail@plt+0xef34>
   203c4:	b	203e8 <__assert_fail@plt+0xef54>
   203c8:	movw	r0, #21027	; 0x5223
   203cc:	movt	r0, #4
   203d0:	movw	r1, #16512	; 0x4080
   203d4:	movt	r1, #4
   203d8:	movw	r2, #3384	; 0xd38
   203dc:	movw	r3, #20982	; 0x51f6
   203e0:	movt	r3, #4
   203e4:	bl	11494 <__assert_fail@plt>
   203e8:	ldr	r0, [fp, #-8]
   203ec:	lsr	r0, r0, #1
   203f0:	str	r0, [fp, #-8]
   203f4:	ldr	r0, [fp, #-4]
   203f8:	str	r0, [fp, #-20]	; 0xffffffec
   203fc:	movw	r0, #0
   20400:	str	r0, [fp, #-24]	; 0xffffffe8
   20404:	ldr	r0, [fp, #-20]	; 0xffffffec
   20408:	ldr	r1, [fp, #-20]	; 0xffffffec
   2040c:	movw	r2, #0
   20410:	sub	r1, r2, r1
   20414:	and	r0, r0, r1
   20418:	str	r0, [sp, #28]
   2041c:	str	r2, [sp, #24]
   20420:	movw	r0, #8
   20424:	str	r0, [sp, #20]
   20428:	ldr	r0, [sp, #20]
   2042c:	movw	r1, #32
   20430:	cmp	r1, r0
   20434:	bls	20470 <__assert_fail@plt+0xefdc>
   20438:	b	2043c <__assert_fail@plt+0xefa8>
   2043c:	ldr	r0, [sp, #28]
   20440:	and	r0, r0, #-16777216	; 0xff000000
   20444:	cmp	r0, #0
   20448:	bne	2046c <__assert_fail@plt+0xefd8>
   2044c:	ldr	r0, [sp, #20]
   20450:	ldr	r1, [sp, #28]
   20454:	lsl	r0, r1, r0
   20458:	str	r0, [sp, #28]
   2045c:	ldr	r0, [sp, #24]
   20460:	add	r0, r0, #8
   20464:	str	r0, [sp, #24]
   20468:	b	2043c <__assert_fail@plt+0xefa8>
   2046c:	b	20470 <__assert_fail@plt+0xefdc>
   20470:	b	20474 <__assert_fail@plt+0xefe0>
   20474:	ldr	r0, [sp, #28]
   20478:	and	r0, r0, #-2147483648	; 0x80000000
   2047c:	cmp	r0, #0
   20480:	bne	204a0 <__assert_fail@plt+0xf00c>
   20484:	ldr	r0, [sp, #28]
   20488:	lsl	r0, r0, #1
   2048c:	str	r0, [sp, #28]
   20490:	ldr	r0, [sp, #24]
   20494:	add	r0, r0, #1
   20498:	str	r0, [sp, #24]
   2049c:	b	20474 <__assert_fail@plt+0xefe0>
   204a0:	ldr	r0, [sp, #24]
   204a4:	str	r0, [fp, #-24]	; 0xffffffe8
   204a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   204ac:	movw	r1, #31
   204b0:	sub	r0, r1, r0
   204b4:	str	r0, [fp, #-12]
   204b8:	ldr	r0, [fp, #-4]
   204bc:	lsr	r0, r0, #1
   204c0:	str	r0, [fp, #-4]
   204c4:	ldr	r0, [fp, #-12]
   204c8:	ldr	r1, [fp, #-4]
   204cc:	lsr	r0, r1, r0
   204d0:	str	r0, [fp, #-4]
   204d4:	ldr	r0, [fp, #-12]
   204d8:	ldr	r1, [fp, #-8]
   204dc:	ldr	r2, [fp, #-8]
   204e0:	lsr	r2, r2, #1
   204e4:	eor	r1, r1, r2
   204e8:	and	r0, r0, r1
   204ec:	ldr	r1, [fp, #-16]
   204f0:	eor	r0, r1, r0
   204f4:	str	r0, [fp, #-16]
   204f8:	ldr	r0, [fp, #-4]
   204fc:	ldr	r1, [fp, #-8]
   20500:	cmp	r0, r1
   20504:	bcs	20578 <__assert_fail@plt+0xf0e4>
   20508:	ldr	r0, [fp, #-4]
   2050c:	cmp	r0, #0
   20510:	bne	2053c <__assert_fail@plt+0xf0a8>
   20514:	ldr	r0, [fp, #-16]
   20518:	and	r0, r0, #1
   2051c:	cmp	r0, #0
   20520:	movw	r0, #0
   20524:	movne	r0, #1
   20528:	tst	r0, #1
   2052c:	mvn	r0, #0
   20530:	moveq	r0, #1
   20534:	mov	sp, fp
   20538:	pop	{fp, pc}
   2053c:	ldr	r0, [fp, #-4]
   20540:	ldr	r1, [fp, #-8]
   20544:	and	r0, r0, r1
   20548:	ldr	r1, [fp, #-16]
   2054c:	eor	r0, r1, r0
   20550:	str	r0, [fp, #-16]
   20554:	ldr	r0, [fp, #-8]
   20558:	ldr	r1, [fp, #-4]
   2055c:	sub	r0, r0, r1
   20560:	str	r0, [fp, #-4]
   20564:	ldr	r0, [fp, #-4]
   20568:	ldr	r1, [fp, #-8]
   2056c:	sub	r0, r1, r0
   20570:	str	r0, [fp, #-8]
   20574:	b	205bc <__assert_fail@plt+0xf128>
   20578:	ldr	r0, [fp, #-8]
   2057c:	ldr	r1, [fp, #-4]
   20580:	sub	r0, r1, r0
   20584:	str	r0, [fp, #-4]
   20588:	ldr	r0, [fp, #-4]
   2058c:	cmp	r0, #0
   20590:	beq	20598 <__assert_fail@plt+0xf104>
   20594:	b	205b8 <__assert_fail@plt+0xf124>
   20598:	movw	r0, #21027	; 0x5223
   2059c:	movt	r0, #4
   205a0:	movw	r1, #16512	; 0x4080
   205a4:	movt	r1, #4
   205a8:	movw	r2, #3410	; 0xd52
   205ac:	movw	r3, #20982	; 0x51f6
   205b0:	movt	r3, #4
   205b4:	bl	11494 <__assert_fail@plt>
   205b8:	b	205bc <__assert_fail@plt+0xf128>
   205bc:	b	205c0 <__assert_fail@plt+0xf12c>
   205c0:	ldr	r0, [fp, #-4]
   205c4:	str	r0, [sp, #16]
   205c8:	movw	r0, #0
   205cc:	str	r0, [sp, #12]
   205d0:	ldr	r0, [sp, #16]
   205d4:	ldr	r1, [sp, #16]
   205d8:	movw	r2, #0
   205dc:	sub	r1, r2, r1
   205e0:	and	r0, r0, r1
   205e4:	str	r0, [sp, #8]
   205e8:	str	r2, [sp, #4]
   205ec:	movw	r0, #8
   205f0:	str	r0, [sp]
   205f4:	ldr	r0, [sp]
   205f8:	movw	r1, #32
   205fc:	cmp	r1, r0
   20600:	bls	2063c <__assert_fail@plt+0xf1a8>
   20604:	b	20608 <__assert_fail@plt+0xf174>
   20608:	ldr	r0, [sp, #8]
   2060c:	and	r0, r0, #-16777216	; 0xff000000
   20610:	cmp	r0, #0
   20614:	bne	20638 <__assert_fail@plt+0xf1a4>
   20618:	ldr	r0, [sp]
   2061c:	ldr	r1, [sp, #8]
   20620:	lsl	r0, r1, r0
   20624:	str	r0, [sp, #8]
   20628:	ldr	r0, [sp, #4]
   2062c:	add	r0, r0, #8
   20630:	str	r0, [sp, #4]
   20634:	b	20608 <__assert_fail@plt+0xf174>
   20638:	b	2063c <__assert_fail@plt+0xf1a8>
   2063c:	b	20640 <__assert_fail@plt+0xf1ac>
   20640:	ldr	r0, [sp, #8]
   20644:	and	r0, r0, #-2147483648	; 0x80000000
   20648:	cmp	r0, #0
   2064c:	bne	2066c <__assert_fail@plt+0xf1d8>
   20650:	ldr	r0, [sp, #8]
   20654:	lsl	r0, r0, #1
   20658:	str	r0, [sp, #8]
   2065c:	ldr	r0, [sp, #4]
   20660:	add	r0, r0, #1
   20664:	str	r0, [sp, #4]
   20668:	b	20640 <__assert_fail@plt+0xf1ac>
   2066c:	ldr	r0, [sp, #4]
   20670:	str	r0, [sp, #12]
   20674:	ldr	r0, [sp, #12]
   20678:	movw	r1, #31
   2067c:	sub	r0, r1, r0
   20680:	str	r0, [fp, #-12]
   20684:	ldr	r0, [fp, #-12]
   20688:	add	r0, r0, #1
   2068c:	str	r0, [fp, #-12]
   20690:	b	204c4 <__assert_fail@plt+0xf030>
   20694:	push	{fp, lr}
   20698:	mov	fp, sp
   2069c:	sub	sp, sp, #56	; 0x38
   206a0:	ldr	ip, [fp, #8]
   206a4:	str	r0, [fp, #-4]
   206a8:	str	r1, [fp, #-8]
   206ac:	str	r2, [fp, #-12]
   206b0:	str	r3, [fp, #-16]
   206b4:	ldr	r0, [fp, #-16]
   206b8:	cmp	r0, #0
   206bc:	bls	206c4 <__assert_fail@plt+0xf230>
   206c0:	b	206e4 <__assert_fail@plt+0xf250>
   206c4:	movw	r0, #21034	; 0x522a
   206c8:	movt	r0, #4
   206cc:	movw	r1, #16512	; 0x4080
   206d0:	movt	r1, #4
   206d4:	movw	r2, #3442	; 0xd72
   206d8:	movw	r3, #21041	; 0x5231
   206dc:	movt	r3, #4
   206e0:	bl	11494 <__assert_fail@plt>
   206e4:	ldr	r0, [fp, #-12]
   206e8:	cmp	r0, #1073741824	; 0x40000000
   206ec:	bgt	206f4 <__assert_fail@plt+0xf260>
   206f0:	b	20714 <__assert_fail@plt+0xf280>
   206f4:	movw	r0, #21132	; 0x528c
   206f8:	movt	r0, #4
   206fc:	movw	r1, #16512	; 0x4080
   20700:	movt	r1, #4
   20704:	movw	r2, #3443	; 0xd73
   20708:	movw	r3, #21041	; 0x5231
   2070c:	movt	r3, #4
   20710:	bl	11494 <__assert_fail@plt>
   20714:	ldr	r0, [pc, #592]	; 2096c <__assert_fail@plt+0xf4d8>
   20718:	ldr	r1, [fp, #-12]
   2071c:	cmp	r1, r0
   20720:	blt	20728 <__assert_fail@plt+0xf294>
   20724:	b	20748 <__assert_fail@plt+0xf2b4>
   20728:	movw	r0, #21154	; 0x52a2
   2072c:	movt	r0, #4
   20730:	movw	r1, #16512	; 0x4080
   20734:	movt	r1, #4
   20738:	movw	r2, #3444	; 0xd74
   2073c:	movw	r3, #21041	; 0x5231
   20740:	movt	r3, #4
   20744:	bl	11494 <__assert_fail@plt>
   20748:	ldr	r0, [fp, #8]
   2074c:	movw	r1, #4
   20750:	bl	172c8 <__assert_fail@plt+0x5e34>
   20754:	cmp	r0, #0
   20758:	ble	20760 <__assert_fail@plt+0xf2cc>
   2075c:	b	20780 <__assert_fail@plt+0xf2ec>
   20760:	movw	r0, #21176	; 0x52b8
   20764:	movt	r0, #4
   20768:	movw	r1, #16512	; 0x4080
   2076c:	movt	r1, #4
   20770:	movw	r2, #3445	; 0xd75
   20774:	movw	r3, #21041	; 0x5231
   20778:	movt	r3, #4
   2077c:	bl	11494 <__assert_fail@plt>
   20780:	ldr	r0, [fp, #8]
   20784:	ldr	r0, [r0, #4]
   20788:	cmp	r0, #0
   2078c:	movw	r0, #0
   20790:	movne	r0, #1
   20794:	and	r0, r0, #1
   20798:	ldr	r1, [fp, #8]
   2079c:	ldr	r1, [r1, #8]
   207a0:	ldr	r1, [r1]
   207a4:	and	r0, r0, r1
   207a8:	cmp	r0, #0
   207ac:	beq	207b4 <__assert_fail@plt+0xf320>
   207b0:	b	207d4 <__assert_fail@plt+0xf340>
   207b4:	movw	r0, #20904	; 0x51a8
   207b8:	movt	r0, #4
   207bc:	movw	r1, #16512	; 0x4080
   207c0:	movt	r1, #4
   207c4:	movw	r2, #3446	; 0xd76
   207c8:	movw	r3, #21041	; 0x5231
   207cc:	movt	r3, #4
   207d0:	bl	11494 <__assert_fail@plt>
   207d4:	add	r0, sp, #24
   207d8:	movw	r1, #1
   207dc:	bl	162d4 <__assert_fail@plt+0x4e40>
   207e0:	ldr	r0, [fp, #-4]
   207e4:	movw	r1, #1
   207e8:	bl	16064 <__assert_fail@plt+0x4bd0>
   207ec:	ldr	r0, [fp, #-8]
   207f0:	ldr	r1, [fp, #-12]
   207f4:	bl	15fc8 <__assert_fail@plt+0x4b34>
   207f8:	ldr	r0, [fp, #8]
   207fc:	movw	r1, #2
   20800:	bl	1b158 <__assert_fail@plt+0x9cc4>
   20804:	sub	r0, r0, #1
   20808:	str	r0, [fp, #-20]	; 0xffffffec
   2080c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20810:	mvn	r1, #0
   20814:	add	r0, r0, r1
   20818:	str	r0, [fp, #-20]	; 0xffffffec
   2081c:	ldr	r1, [fp, #-16]
   20820:	cmp	r0, r1
   20824:	bcc	20940 <__assert_fail@plt+0xf4ac>
   20828:	add	r0, sp, #24
   2082c:	ldr	r2, [fp, #-4]
   20830:	str	r0, [sp, #16]
   20834:	ldr	r1, [sp, #16]
   20838:	bl	17cb4 <__assert_fail@plt+0x6820>
   2083c:	ldr	r0, [fp, #-4]
   20840:	ldr	r1, [fp, #-8]
   20844:	ldr	r2, [fp, #8]
   20848:	bl	20970 <__assert_fail@plt+0xf4dc>
   2084c:	ldr	r0, [fp, #-16]
   20850:	ldr	r1, [fp, #-20]	; 0xffffffec
   20854:	cmp	r0, r1
   20858:	beq	20870 <__assert_fail@plt+0xf3dc>
   2085c:	ldr	r0, [fp, #8]
   20860:	ldr	r1, [fp, #-20]	; 0xffffffec
   20864:	bl	1c00c <__assert_fail@plt+0xab78>
   20868:	cmp	r0, #0
   2086c:	beq	20928 <__assert_fail@plt+0xf494>
   20870:	ldr	r0, [fp, #-8]
   20874:	ldr	r1, [fp, #-8]
   20878:	ldr	r2, [fp, #-12]
   2087c:	bl	17c00 <__assert_fail@plt+0x676c>
   20880:	add	r0, sp, #24
   20884:	ldr	r1, [fp, #-4]
   20888:	bl	175bc <__assert_fail@plt+0x6128>
   2088c:	add	r0, sp, #24
   20890:	ldr	r2, [fp, #-4]
   20894:	str	r0, [sp, #12]
   20898:	ldr	r1, [sp, #12]
   2089c:	bl	17698 <__assert_fail@plt+0x6204>
   208a0:	ldr	r0, [sp, #28]
   208a4:	cmp	r0, #0
   208a8:	movw	r0, #0
   208ac:	movne	r0, #1
   208b0:	and	r0, r0, #1
   208b4:	ldr	r1, [sp, #32]
   208b8:	ldr	r1, [r1]
   208bc:	and	r0, r0, r1
   208c0:	cmp	r0, #0
   208c4:	beq	208dc <__assert_fail@plt+0xf448>
   208c8:	add	r0, sp, #24
   208cc:	ldr	r2, [fp, #8]
   208d0:	str	r0, [sp, #8]
   208d4:	ldr	r1, [sp, #8]
   208d8:	bl	17698 <__assert_fail@plt+0x6204>
   208dc:	add	r0, sp, #24
   208e0:	str	r0, [sp, #4]
   208e4:	ldr	r1, [sp, #4]
   208e8:	movw	r2, #1
   208ec:	bl	18b98 <__assert_fail@plt+0x7704>
   208f0:	ldr	r0, [fp, #-4]
   208f4:	ldr	r1, [fp, #-4]
   208f8:	ldr	r2, [fp, #-12]
   208fc:	mvn	r3, #1
   20900:	mul	r2, r2, r3
   20904:	bl	17c00 <__assert_fail@plt+0x676c>
   20908:	add	r1, sp, #24
   2090c:	ldr	r0, [fp, #-4]
   20910:	ldr	r2, [fp, #-4]
   20914:	bl	17698 <__assert_fail@plt+0x6204>
   20918:	ldr	r0, [fp, #-4]
   2091c:	ldr	r1, [fp, #-4]
   20920:	ldr	r2, [fp, #8]
   20924:	bl	18840 <__assert_fail@plt+0x73ac>
   20928:	add	r0, sp, #24
   2092c:	ldr	r2, [fp, #8]
   20930:	str	r0, [sp]
   20934:	ldr	r1, [sp]
   20938:	bl	18840 <__assert_fail@plt+0x73ac>
   2093c:	b	2080c <__assert_fail@plt+0xf378>
   20940:	add	r0, sp, #24
   20944:	ldr	r1, [sp, #28]
   20948:	cmp	r1, #0
   2094c:	movw	r1, #0
   20950:	moveq	r1, #1
   20954:	and	r1, r1, #1
   20958:	str	r1, [sp, #20]
   2095c:	bl	15f44 <__assert_fail@plt+0x4ab0>
   20960:	ldr	r0, [sp, #20]
   20964:	mov	sp, fp
   20968:	pop	{fp, pc}
   2096c:	andgt	r0, r0, r1
   20970:	push	{fp, lr}
   20974:	mov	fp, sp
   20978:	sub	sp, sp, #16
   2097c:	str	r0, [fp, #-4]
   20980:	str	r1, [sp, #8]
   20984:	str	r2, [sp, #4]
   20988:	ldr	r0, [sp, #8]
   2098c:	ldr	r1, [sp, #8]
   20990:	ldr	r2, [sp, #4]
   20994:	bl	1887c <__assert_fail@plt+0x73e8>
   20998:	ldr	r0, [fp, #-4]
   2099c:	ldr	r1, [fp, #-4]
   209a0:	ldr	r2, [fp, #-4]
   209a4:	bl	17cb4 <__assert_fail@plt+0x6820>
   209a8:	ldr	r0, [fp, #-4]
   209ac:	ldr	r1, [sp, #8]
   209b0:	movw	r2, #2
   209b4:	bl	180b0 <__assert_fail@plt+0x6c1c>
   209b8:	ldr	r0, [fp, #-4]
   209bc:	ldr	r1, [fp, #-4]
   209c0:	ldr	r2, [sp, #4]
   209c4:	bl	18840 <__assert_fail@plt+0x73ac>
   209c8:	ldr	r0, [sp, #8]
   209cc:	ldr	r1, [sp, #8]
   209d0:	ldr	r2, [sp, #8]
   209d4:	bl	17cb4 <__assert_fail@plt+0x6820>
   209d8:	mov	sp, fp
   209dc:	pop	{fp, pc}
   209e0:	push	{fp, lr}
   209e4:	mov	fp, sp
   209e8:	sub	sp, sp, #40	; 0x28
   209ec:	ldr	ip, [fp, #12]
   209f0:	ldr	lr, [fp, #8]
   209f4:	str	r0, [fp, #-4]
   209f8:	str	r1, [fp, #-8]
   209fc:	str	r2, [fp, #-12]
   20a00:	str	r3, [fp, #-16]
   20a04:	movw	r0, #24976	; 0x6190
   20a08:	movt	r0, #5
   20a0c:	ldr	r1, [r0]
   20a10:	str	r1, [sp, #16]
   20a14:	movw	r1, #0
   20a18:	str	r1, [r0]
   20a1c:	ldr	r0, [fp, #-4]
   20a20:	cmp	r0, #2
   20a24:	bne	20ad8 <__assert_fail@plt+0xf644>
   20a28:	ldr	r0, [fp, #-4]
   20a2c:	ldr	r1, [fp, #-8]
   20a30:	movw	r2, #16163	; 0x3f23
   20a34:	movt	r2, #4
   20a38:	movw	r3, #21400	; 0x5398
   20a3c:	movt	r3, #4
   20a40:	movw	ip, #0
   20a44:	str	ip, [sp]
   20a48:	bl	1135c <getopt_long@plt>
   20a4c:	str	r0, [sp, #20]
   20a50:	cmn	r0, #1
   20a54:	beq	20ad8 <__assert_fail@plt+0xf644>
   20a58:	ldr	r0, [sp, #20]
   20a5c:	cmp	r0, #104	; 0x68
   20a60:	str	r0, [sp, #8]
   20a64:	beq	20a7c <__assert_fail@plt+0xf5e8>
   20a68:	b	20a6c <__assert_fail@plt+0xf5d8>
   20a6c:	ldr	r0, [sp, #8]
   20a70:	cmp	r0, #118	; 0x76
   20a74:	beq	20a98 <__assert_fail@plt+0xf604>
   20a78:	b	20ad0 <__assert_fail@plt+0xf63c>
   20a7c:	ldr	r0, [fp, #12]
   20a80:	movw	r1, #0
   20a84:	str	r0, [sp, #4]
   20a88:	mov	r0, r1
   20a8c:	ldr	r1, [sp, #4]
   20a90:	blx	r1
   20a94:	b	20ad4 <__assert_fail@plt+0xf640>
   20a98:	add	r0, fp, #16
   20a9c:	str	r0, [sp, #12]
   20aa0:	movw	r0, #24972	; 0x618c
   20aa4:	movt	r0, #5
   20aa8:	ldr	r0, [r0]
   20aac:	ldr	r1, [fp, #-12]
   20ab0:	ldr	r2, [fp, #-16]
   20ab4:	ldr	r3, [fp, #8]
   20ab8:	ldr	ip, [sp, #12]
   20abc:	mov	lr, sp
   20ac0:	str	ip, [lr]
   20ac4:	bl	3c884 <__assert_fail@plt+0x2b3f0>
   20ac8:	movw	r0, #0
   20acc:	bl	11374 <exit@plt>
   20ad0:	b	20ad4 <__assert_fail@plt+0xf640>
   20ad4:	b	20ad8 <__assert_fail@plt+0xf644>
   20ad8:	ldr	r0, [sp, #16]
   20adc:	movw	r1, #24976	; 0x6190
   20ae0:	movt	r1, #5
   20ae4:	str	r0, [r1]
   20ae8:	movw	r0, #24960	; 0x6180
   20aec:	movt	r0, #5
   20af0:	movw	r1, #0
   20af4:	str	r1, [r0]
   20af8:	mov	sp, fp
   20afc:	pop	{fp, pc}
   20b00:	push	{r4, sl, fp, lr}
   20b04:	add	fp, sp, #8
   20b08:	sub	sp, sp, #64	; 0x40
   20b0c:	ldr	ip, [fp, #16]
   20b10:	ldr	lr, [fp, #12]
   20b14:	ldr	r4, [fp, #8]
   20b18:	str	r0, [fp, #-12]
   20b1c:	str	r1, [fp, #-16]
   20b20:	str	r2, [fp, #-20]	; 0xffffffec
   20b24:	str	r3, [fp, #-24]	; 0xffffffe8
   20b28:	and	r0, lr, #1
   20b2c:	strb	r0, [fp, #-25]	; 0xffffffe7
   20b30:	movw	r0, #24976	; 0x6190
   20b34:	movt	r0, #5
   20b38:	ldr	r1, [r0]
   20b3c:	str	r1, [sp, #36]	; 0x24
   20b40:	movw	r1, #1
   20b44:	str	r1, [r0]
   20b48:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   20b4c:	tst	r0, #1
   20b50:	movw	r0, #16163	; 0x3f23
   20b54:	movt	r0, #4
   20b58:	movw	r1, #16039	; 0x3ea7
   20b5c:	movt	r1, #4
   20b60:	movne	r0, r1
   20b64:	str	r0, [sp, #32]
   20b68:	ldr	r0, [fp, #-12]
   20b6c:	ldr	r1, [fp, #-16]
   20b70:	ldr	r2, [sp, #32]
   20b74:	movw	r3, #21400	; 0x5398
   20b78:	movt	r3, #4
   20b7c:	movw	lr, #0
   20b80:	str	lr, [sp]
   20b84:	str	ip, [sp, #24]
   20b88:	str	r4, [sp, #20]
   20b8c:	bl	1135c <getopt_long@plt>
   20b90:	str	r0, [fp, #-32]	; 0xffffffe0
   20b94:	cmn	r0, #1
   20b98:	beq	20c38 <__assert_fail@plt+0xf7a4>
   20b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20ba0:	cmp	r0, #104	; 0x68
   20ba4:	str	r0, [sp, #16]
   20ba8:	beq	20bc0 <__assert_fail@plt+0xf72c>
   20bac:	b	20bb0 <__assert_fail@plt+0xf71c>
   20bb0:	ldr	r0, [sp, #16]
   20bb4:	cmp	r0, #118	; 0x76
   20bb8:	beq	20bdc <__assert_fail@plt+0xf748>
   20bbc:	b	20c14 <__assert_fail@plt+0xf780>
   20bc0:	ldr	r0, [fp, #16]
   20bc4:	movw	r1, #0
   20bc8:	str	r0, [sp, #12]
   20bcc:	mov	r0, r1
   20bd0:	ldr	r1, [sp, #12]
   20bd4:	blx	r1
   20bd8:	b	20c34 <__assert_fail@plt+0xf7a0>
   20bdc:	add	r0, fp, #20
   20be0:	str	r0, [sp, #28]
   20be4:	movw	r0, #24972	; 0x618c
   20be8:	movt	r0, #5
   20bec:	ldr	r0, [r0]
   20bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   20bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20bf8:	ldr	r3, [fp, #8]
   20bfc:	ldr	ip, [sp, #28]
   20c00:	mov	lr, sp
   20c04:	str	ip, [lr]
   20c08:	bl	3c884 <__assert_fail@plt+0x2b3f0>
   20c0c:	movw	r0, #0
   20c10:	bl	11374 <exit@plt>
   20c14:	ldr	r0, [fp, #16]
   20c18:	movw	r1, #24868	; 0x6124
   20c1c:	movt	r1, #5
   20c20:	ldr	r1, [r1]
   20c24:	str	r0, [sp, #8]
   20c28:	mov	r0, r1
   20c2c:	ldr	r1, [sp, #8]
   20c30:	blx	r1
   20c34:	b	20c38 <__assert_fail@plt+0xf7a4>
   20c38:	ldr	r0, [sp, #36]	; 0x24
   20c3c:	movw	r1, #24976	; 0x6190
   20c40:	movt	r1, #5
   20c44:	str	r0, [r1]
   20c48:	sub	sp, fp, #8
   20c4c:	pop	{r4, sl, fp, pc}
   20c50:	push	{fp, lr}
   20c54:	mov	fp, sp
   20c58:	sub	sp, sp, #80	; 0x50
   20c5c:	str	r0, [fp, #-8]
   20c60:	str	r1, [fp, #-12]
   20c64:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   20c68:	cmp	r0, #1
   20c6c:	bls	20d60 <__assert_fail@plt+0xf8cc>
   20c70:	ldr	r0, [fp, #-12]
   20c74:	and	r0, r0, #255	; 0xff
   20c78:	cmp	r0, #48	; 0x30
   20c7c:	blt	20d60 <__assert_fail@plt+0xf8cc>
   20c80:	ldr	r0, [fp, #-8]
   20c84:	str	r0, [sp, #28]
   20c88:	movw	r0, #0
   20c8c:	strb	r0, [sp, #12]
   20c90:	add	r1, sp, #12
   20c94:	add	r1, r1, #4
   20c98:	str	r0, [sp, #8]
   20c9c:	mov	r0, r1
   20ca0:	ldr	r1, [sp, #8]
   20ca4:	and	r1, r1, #255	; 0xff
   20ca8:	movw	r2, #8
   20cac:	bl	113d4 <memset@plt>
   20cb0:	ldr	r0, [sp, #8]
   20cb4:	strb	r0, [sp, #24]
   20cb8:	add	r0, sp, #12
   20cbc:	bl	20e68 <__assert_fail@plt+0xf9d4>
   20cc0:	ldrb	r0, [sp, #36]	; 0x24
   20cc4:	tst	r0, #1
   20cc8:	movw	r0, #0
   20ccc:	str	r0, [sp, #4]
   20cd0:	beq	20ce8 <__assert_fail@plt+0xf854>
   20cd4:	ldr	r0, [sp, #40]	; 0x28
   20cd8:	cmp	r0, #0
   20cdc:	movw	r0, #0
   20ce0:	moveq	r0, #1
   20ce4:	str	r0, [sp, #4]
   20ce8:	ldr	r0, [sp, #4]
   20cec:	mvn	r1, #0
   20cf0:	eor	r0, r0, r1
   20cf4:	tst	r0, #1
   20cf8:	bne	20d00 <__assert_fail@plt+0xf86c>
   20cfc:	b	20d54 <__assert_fail@plt+0xf8c0>
   20d00:	ldr	r0, [sp, #32]
   20d04:	cmp	r0, #1
   20d08:	bne	20d28 <__assert_fail@plt+0xf894>
   20d0c:	ldr	r0, [sp, #28]
   20d10:	ldrb	r0, [r0]
   20d14:	ldr	r1, [fp, #-12]
   20d18:	and	r1, r1, #255	; 0xff
   20d1c:	cmp	r0, r1
   20d20:	bne	20d28 <__assert_fail@plt+0xf894>
   20d24:	b	20d48 <__assert_fail@plt+0xf8b4>
   20d28:	b	20d2c <__assert_fail@plt+0xf898>
   20d2c:	ldr	r0, [sp, #32]
   20d30:	ldr	r1, [sp, #28]
   20d34:	add	r0, r1, r0
   20d38:	str	r0, [sp, #28]
   20d3c:	movw	r0, #0
   20d40:	strb	r0, [sp, #24]
   20d44:	b	20cb8 <__assert_fail@plt+0xf824>
   20d48:	ldr	r0, [sp, #28]
   20d4c:	str	r0, [fp, #-4]
   20d50:	b	20d70 <__assert_fail@plt+0xf8dc>
   20d54:	movw	r0, #0
   20d58:	str	r0, [fp, #-4]
   20d5c:	b	20d70 <__assert_fail@plt+0xf8dc>
   20d60:	ldr	r0, [fp, #-8]
   20d64:	ldr	r1, [fp, #-12]
   20d68:	bl	11398 <strchr@plt>
   20d6c:	str	r0, [fp, #-4]
   20d70:	ldr	r0, [fp, #-4]
   20d74:	mov	sp, fp
   20d78:	pop	{fp, pc}
   20d7c:	push	{fp, lr}
   20d80:	mov	fp, sp
   20d84:	sub	sp, sp, #80	; 0x50
   20d88:	str	r0, [fp, #-8]
   20d8c:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   20d90:	cmp	r0, #1
   20d94:	bls	20e50 <__assert_fail@plt+0xf9bc>
   20d98:	movw	r0, #0
   20d9c:	str	r0, [fp, #-12]
   20da0:	ldr	r0, [fp, #-8]
   20da4:	str	r0, [sp, #28]
   20da8:	movw	r0, #0
   20dac:	strb	r0, [sp, #12]
   20db0:	add	r1, sp, #12
   20db4:	add	r1, r1, #4
   20db8:	str	r0, [sp, #8]
   20dbc:	mov	r0, r1
   20dc0:	ldr	r1, [sp, #8]
   20dc4:	and	r1, r1, #255	; 0xff
   20dc8:	movw	r2, #8
   20dcc:	bl	113d4 <memset@plt>
   20dd0:	ldr	r0, [sp, #8]
   20dd4:	strb	r0, [sp, #24]
   20dd8:	add	r0, sp, #12
   20ddc:	bl	20e68 <__assert_fail@plt+0xf9d4>
   20de0:	ldrb	r0, [sp, #36]	; 0x24
   20de4:	tst	r0, #1
   20de8:	movw	r0, #0
   20dec:	str	r0, [sp, #4]
   20df0:	beq	20e08 <__assert_fail@plt+0xf974>
   20df4:	ldr	r0, [sp, #40]	; 0x28
   20df8:	cmp	r0, #0
   20dfc:	movw	r0, #0
   20e00:	moveq	r0, #1
   20e04:	str	r0, [sp, #4]
   20e08:	ldr	r0, [sp, #4]
   20e0c:	mvn	r1, #0
   20e10:	eor	r0, r0, r1
   20e14:	tst	r0, #1
   20e18:	beq	20e44 <__assert_fail@plt+0xf9b0>
   20e1c:	ldr	r0, [fp, #-12]
   20e20:	add	r0, r0, #1
   20e24:	str	r0, [fp, #-12]
   20e28:	ldr	r0, [sp, #32]
   20e2c:	ldr	r1, [sp, #28]
   20e30:	add	r0, r1, r0
   20e34:	str	r0, [sp, #28]
   20e38:	movw	r0, #0
   20e3c:	strb	r0, [sp, #24]
   20e40:	b	20dd8 <__assert_fail@plt+0xf944>
   20e44:	ldr	r0, [fp, #-12]
   20e48:	str	r0, [fp, #-4]
   20e4c:	b	20e5c <__assert_fail@plt+0xf9c8>
   20e50:	ldr	r0, [fp, #-8]
   20e54:	bl	1138c <strlen@plt>
   20e58:	str	r0, [fp, #-4]
   20e5c:	ldr	r0, [fp, #-4]
   20e60:	mov	sp, fp
   20e64:	pop	{fp, pc}
   20e68:	push	{fp, lr}
   20e6c:	mov	fp, sp
   20e70:	sub	sp, sp, #24
   20e74:	str	r0, [fp, #-4]
   20e78:	ldr	r0, [fp, #-4]
   20e7c:	ldrb	r0, [r0, #12]
   20e80:	tst	r0, #1
   20e84:	beq	20e8c <__assert_fail@plt+0xf9f8>
   20e88:	b	210c4 <__assert_fail@plt+0xfc30>
   20e8c:	ldr	r0, [fp, #-4]
   20e90:	ldrb	r0, [r0]
   20e94:	tst	r0, #1
   20e98:	beq	20ea0 <__assert_fail@plt+0xfa0c>
   20e9c:	b	20f2c <__assert_fail@plt+0xfa98>
   20ea0:	ldr	r0, [fp, #-4]
   20ea4:	ldr	r0, [r0, #16]
   20ea8:	ldrb	r0, [r0]
   20eac:	bl	415c0 <__assert_fail@plt+0x3012c>
   20eb0:	tst	r0, #1
   20eb4:	beq	20ee8 <__assert_fail@plt+0xfa54>
   20eb8:	ldr	r0, [fp, #-4]
   20ebc:	movw	r1, #1
   20ec0:	str	r1, [r0, #20]
   20ec4:	ldr	r0, [fp, #-4]
   20ec8:	ldr	r0, [r0, #16]
   20ecc:	ldrb	r0, [r0]
   20ed0:	ldr	r1, [fp, #-4]
   20ed4:	str	r0, [r1, #28]
   20ed8:	ldr	r0, [fp, #-4]
   20edc:	movw	r1, #1
   20ee0:	strb	r1, [r0, #24]
   20ee4:	b	210b8 <__assert_fail@plt+0xfc24>
   20ee8:	ldr	r0, [fp, #-4]
   20eec:	add	r0, r0, #4
   20ef0:	bl	11278 <mbsinit@plt>
   20ef4:	cmp	r0, #0
   20ef8:	beq	20f00 <__assert_fail@plt+0xfa6c>
   20efc:	b	20f20 <__assert_fail@plt+0xfa8c>
   20f00:	movw	r0, #21448	; 0x53c8
   20f04:	movt	r0, #4
   20f08:	movw	r1, #21471	; 0x53df
   20f0c:	movt	r1, #4
   20f10:	movw	r2, #143	; 0x8f
   20f14:	movw	r3, #21487	; 0x53ef
   20f18:	movt	r3, #4
   20f1c:	bl	11494 <__assert_fail@plt>
   20f20:	ldr	r0, [fp, #-4]
   20f24:	movw	r1, #1
   20f28:	strb	r1, [r0]
   20f2c:	ldr	r0, [fp, #-4]
   20f30:	add	r0, r0, #16
   20f34:	add	r0, r0, #12
   20f38:	ldr	r1, [fp, #-4]
   20f3c:	ldr	r1, [r1, #16]
   20f40:	ldr	r2, [fp, #-4]
   20f44:	ldr	r2, [r2, #16]
   20f48:	str	r0, [fp, #-8]
   20f4c:	str	r1, [sp, #12]
   20f50:	str	r2, [sp, #8]
   20f54:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   20f58:	ldr	r1, [sp, #8]
   20f5c:	str	r0, [sp, #4]
   20f60:	mov	r0, r1
   20f64:	ldr	r1, [sp, #4]
   20f68:	bl	3b77c <__assert_fail@plt+0x2a2e8>
   20f6c:	ldr	r1, [fp, #-4]
   20f70:	add	r3, r1, #4
   20f74:	ldr	r1, [fp, #-8]
   20f78:	str	r0, [sp]
   20f7c:	mov	r0, r1
   20f80:	ldr	r1, [sp, #12]
   20f84:	ldr	r2, [sp]
   20f88:	bl	41610 <__assert_fail@plt+0x3017c>
   20f8c:	ldr	r1, [fp, #-4]
   20f90:	str	r0, [r1, #20]
   20f94:	ldr	r0, [fp, #-4]
   20f98:	ldr	r0, [r0, #20]
   20f9c:	cmn	r0, #1
   20fa0:	bne	20fc0 <__assert_fail@plt+0xfb2c>
   20fa4:	ldr	r0, [fp, #-4]
   20fa8:	movw	r1, #1
   20fac:	str	r1, [r0, #20]
   20fb0:	ldr	r0, [fp, #-4]
   20fb4:	movw	r1, #0
   20fb8:	strb	r1, [r0, #24]
   20fbc:	b	210b4 <__assert_fail@plt+0xfc20>
   20fc0:	ldr	r0, [fp, #-4]
   20fc4:	ldr	r0, [r0, #20]
   20fc8:	cmn	r0, #2
   20fcc:	bne	20ff4 <__assert_fail@plt+0xfb60>
   20fd0:	ldr	r0, [fp, #-4]
   20fd4:	ldr	r0, [r0, #16]
   20fd8:	bl	1138c <strlen@plt>
   20fdc:	ldr	r1, [fp, #-4]
   20fe0:	str	r0, [r1, #20]
   20fe4:	ldr	r0, [fp, #-4]
   20fe8:	movw	r1, #0
   20fec:	strb	r1, [r0, #24]
   20ff0:	b	210b0 <__assert_fail@plt+0xfc1c>
   20ff4:	ldr	r0, [fp, #-4]
   20ff8:	ldr	r0, [r0, #20]
   20ffc:	cmp	r0, #0
   21000:	bne	21080 <__assert_fail@plt+0xfbec>
   21004:	ldr	r0, [fp, #-4]
   21008:	movw	r1, #1
   2100c:	str	r1, [r0, #20]
   21010:	ldr	r0, [fp, #-4]
   21014:	ldr	r0, [r0, #16]
   21018:	ldrb	r0, [r0]
   2101c:	cmp	r0, #0
   21020:	bne	21028 <__assert_fail@plt+0xfb94>
   21024:	b	21048 <__assert_fail@plt+0xfbb4>
   21028:	movw	r0, #21535	; 0x541f
   2102c:	movt	r0, #4
   21030:	movw	r1, #21471	; 0x53df
   21034:	movt	r1, #4
   21038:	movw	r2, #171	; 0xab
   2103c:	movw	r3, #21487	; 0x53ef
   21040:	movt	r3, #4
   21044:	bl	11494 <__assert_fail@plt>
   21048:	ldr	r0, [fp, #-4]
   2104c:	ldr	r0, [r0, #28]
   21050:	cmp	r0, #0
   21054:	bne	2105c <__assert_fail@plt+0xfbc8>
   21058:	b	2107c <__assert_fail@plt+0xfbe8>
   2105c:	movw	r0, #21558	; 0x5436
   21060:	movt	r0, #4
   21064:	movw	r1, #21471	; 0x53df
   21068:	movt	r1, #4
   2106c:	movw	r2, #172	; 0xac
   21070:	movw	r3, #21487	; 0x53ef
   21074:	movt	r3, #4
   21078:	bl	11494 <__assert_fail@plt>
   2107c:	b	21080 <__assert_fail@plt+0xfbec>
   21080:	ldr	r0, [fp, #-4]
   21084:	movw	r1, #1
   21088:	strb	r1, [r0, #24]
   2108c:	ldr	r0, [fp, #-4]
   21090:	add	r0, r0, #4
   21094:	bl	11278 <mbsinit@plt>
   21098:	cmp	r0, #0
   2109c:	beq	210ac <__assert_fail@plt+0xfc18>
   210a0:	ldr	r0, [fp, #-4]
   210a4:	movw	r1, #0
   210a8:	strb	r1, [r0]
   210ac:	b	210b0 <__assert_fail@plt+0xfc1c>
   210b0:	b	210b4 <__assert_fail@plt+0xfc20>
   210b4:	b	210b8 <__assert_fail@plt+0xfc24>
   210b8:	ldr	r0, [fp, #-4]
   210bc:	movw	r1, #1
   210c0:	strb	r1, [r0, #12]
   210c4:	mov	sp, fp
   210c8:	pop	{fp, pc}
   210cc:	sub	sp, sp, #8
   210d0:	str	r0, [sp, #4]
   210d4:	str	r1, [sp]
   210d8:	ldr	r0, [sp]
   210dc:	ldr	r1, [sp, #4]
   210e0:	ldr	r2, [r1, #16]
   210e4:	add	r0, r2, r0
   210e8:	str	r0, [r1, #16]
   210ec:	add	sp, sp, #8
   210f0:	bx	lr
   210f4:	push	{fp, lr}
   210f8:	mov	fp, sp
   210fc:	sub	sp, sp, #8
   21100:	str	r0, [sp, #4]
   21104:	str	r1, [sp]
   21108:	ldr	r0, [sp]
   2110c:	ldrb	r0, [r0]
   21110:	ldr	r1, [sp, #4]
   21114:	and	r2, r0, #1
   21118:	strb	r2, [r1]
   2111c:	tst	r0, #1
   21120:	beq	21140 <__assert_fail@plt+0xfcac>
   21124:	ldr	r0, [sp, #4]
   21128:	ldr	r1, [sp]
   2112c:	ldr	r2, [r1, #4]
   21130:	str	r2, [r0, #4]
   21134:	ldr	r1, [r1, #8]
   21138:	str	r1, [r0, #8]
   2113c:	b	21158 <__assert_fail@plt+0xfcc4>
   21140:	ldr	r0, [sp, #4]
   21144:	add	r0, r0, #4
   21148:	movw	r1, #0
   2114c:	and	r1, r1, #255	; 0xff
   21150:	movw	r2, #8
   21154:	bl	113d4 <memset@plt>
   21158:	ldr	r0, [sp]
   2115c:	ldrb	r0, [r0, #12]
   21160:	ldr	r1, [sp, #4]
   21164:	and	r0, r0, #1
   21168:	strb	r0, [r1, #12]
   2116c:	ldr	r0, [sp, #4]
   21170:	add	r0, r0, #16
   21174:	ldr	r1, [sp]
   21178:	add	r1, r1, #16
   2117c:	bl	41510 <__assert_fail@plt+0x3007c>
   21180:	mov	sp, fp
   21184:	pop	{fp, pc}
   21188:	push	{fp, lr}
   2118c:	mov	fp, sp
   21190:	sub	sp, sp, #24
   21194:	str	r0, [fp, #-4]
   21198:	ldr	r0, [fp, #-4]
   2119c:	movw	r1, #0
   211a0:	cmp	r0, r1
   211a4:	bne	211c8 <__assert_fail@plt+0xfd34>
   211a8:	movw	r0, #24968	; 0x6188
   211ac:	movt	r0, #5
   211b0:	ldr	r1, [r0]
   211b4:	movw	r0, #21576	; 0x5448
   211b8:	movt	r0, #4
   211bc:	bl	11464 <fputs@plt>
   211c0:	str	r0, [sp, #8]
   211c4:	bl	1147c <abort@plt>
   211c8:	ldr	r0, [fp, #-4]
   211cc:	movw	r1, #47	; 0x2f
   211d0:	bl	11434 <strrchr@plt>
   211d4:	str	r0, [fp, #-8]
   211d8:	ldr	r0, [fp, #-8]
   211dc:	movw	r1, #0
   211e0:	cmp	r0, r1
   211e4:	beq	211f8 <__assert_fail@plt+0xfd64>
   211e8:	ldr	r0, [fp, #-8]
   211ec:	add	r0, r0, #1
   211f0:	str	r0, [sp, #4]
   211f4:	b	21200 <__assert_fail@plt+0xfd6c>
   211f8:	ldr	r0, [fp, #-4]
   211fc:	str	r0, [sp, #4]
   21200:	ldr	r0, [sp, #4]
   21204:	str	r0, [sp, #12]
   21208:	ldr	r0, [sp, #12]
   2120c:	ldr	r1, [fp, #-4]
   21210:	sub	r0, r0, r1
   21214:	cmp	r0, #7
   21218:	blt	21284 <__assert_fail@plt+0xfdf0>
   2121c:	ldr	r0, [sp, #12]
   21220:	mvn	r1, #6
   21224:	add	r0, r0, r1
   21228:	movw	r1, #21632	; 0x5480
   2122c:	movt	r1, #4
   21230:	movw	r2, #7
   21234:	bl	11470 <strncmp@plt>
   21238:	cmp	r0, #0
   2123c:	bne	21284 <__assert_fail@plt+0xfdf0>
   21240:	ldr	r0, [sp, #12]
   21244:	str	r0, [fp, #-4]
   21248:	ldr	r0, [sp, #12]
   2124c:	movw	r1, #21640	; 0x5488
   21250:	movt	r1, #4
   21254:	movw	r2, #3
   21258:	bl	11470 <strncmp@plt>
   2125c:	cmp	r0, #0
   21260:	bne	21280 <__assert_fail@plt+0xfdec>
   21264:	ldr	r0, [sp, #12]
   21268:	add	r0, r0, #3
   2126c:	str	r0, [fp, #-4]
   21270:	ldr	r0, [fp, #-4]
   21274:	movw	r1, #24952	; 0x6178
   21278:	movt	r1, #5
   2127c:	str	r0, [r1]
   21280:	b	21284 <__assert_fail@plt+0xfdf0>
   21284:	ldr	r0, [fp, #-4]
   21288:	movw	r1, #24996	; 0x61a4
   2128c:	movt	r1, #5
   21290:	str	r0, [r1]
   21294:	ldr	r0, [fp, #-4]
   21298:	movw	r1, #24956	; 0x617c
   2129c:	movt	r1, #5
   212a0:	str	r0, [r1]
   212a4:	mov	sp, fp
   212a8:	pop	{fp, pc}
   212ac:	push	{fp, lr}
   212b0:	mov	fp, sp
   212b4:	sub	sp, sp, #24
   212b8:	str	r0, [fp, #-4]
   212bc:	bl	113b0 <__errno_location@plt>
   212c0:	ldr	r0, [r0]
   212c4:	str	r0, [fp, #-8]
   212c8:	ldr	r0, [fp, #-4]
   212cc:	movw	r1, #0
   212d0:	cmp	r0, r1
   212d4:	beq	212e4 <__assert_fail@plt+0xfe50>
   212d8:	ldr	r0, [fp, #-4]
   212dc:	str	r0, [sp, #8]
   212e0:	b	212f4 <__assert_fail@plt+0xfe60>
   212e4:	movw	r0, #25000	; 0x61a8
   212e8:	movt	r0, #5
   212ec:	str	r0, [sp, #8]
   212f0:	b	212f4 <__assert_fail@plt+0xfe60>
   212f4:	ldr	r0, [sp, #8]
   212f8:	movw	r1, #48	; 0x30
   212fc:	bl	3f71c <__assert_fail@plt+0x2e288>
   21300:	str	r0, [sp, #12]
   21304:	ldr	r0, [fp, #-8]
   21308:	str	r0, [sp, #4]
   2130c:	bl	113b0 <__errno_location@plt>
   21310:	ldr	r1, [sp, #4]
   21314:	str	r1, [r0]
   21318:	ldr	r0, [sp, #12]
   2131c:	mov	sp, fp
   21320:	pop	{fp, pc}
   21324:	sub	sp, sp, #8
   21328:	str	r0, [sp, #4]
   2132c:	ldr	r0, [sp, #4]
   21330:	movw	r1, #0
   21334:	cmp	r0, r1
   21338:	beq	21348 <__assert_fail@plt+0xfeb4>
   2133c:	ldr	r0, [sp, #4]
   21340:	str	r0, [sp]
   21344:	b	21358 <__assert_fail@plt+0xfec4>
   21348:	movw	r0, #25000	; 0x61a8
   2134c:	movt	r0, #5
   21350:	str	r0, [sp]
   21354:	b	21358 <__assert_fail@plt+0xfec4>
   21358:	ldr	r0, [sp]
   2135c:	ldr	r0, [r0]
   21360:	add	sp, sp, #8
   21364:	bx	lr
   21368:	sub	sp, sp, #16
   2136c:	str	r0, [sp, #12]
   21370:	str	r1, [sp, #8]
   21374:	ldr	r0, [sp, #8]
   21378:	ldr	r1, [sp, #12]
   2137c:	movw	r2, #0
   21380:	cmp	r1, r2
   21384:	str	r0, [sp, #4]
   21388:	beq	21398 <__assert_fail@plt+0xff04>
   2138c:	ldr	r0, [sp, #12]
   21390:	str	r0, [sp]
   21394:	b	213a8 <__assert_fail@plt+0xff14>
   21398:	movw	r0, #25000	; 0x61a8
   2139c:	movt	r0, #5
   213a0:	str	r0, [sp]
   213a4:	b	213a8 <__assert_fail@plt+0xff14>
   213a8:	ldr	r0, [sp]
   213ac:	ldr	r1, [sp, #4]
   213b0:	str	r1, [r0]
   213b4:	add	sp, sp, #16
   213b8:	bx	lr
   213bc:	sub	sp, sp, #32
   213c0:	str	r0, [sp, #28]
   213c4:	strb	r1, [sp, #27]
   213c8:	str	r2, [sp, #20]
   213cc:	ldrb	r0, [sp, #27]
   213d0:	strb	r0, [sp, #19]
   213d4:	ldr	r0, [sp, #28]
   213d8:	movw	r1, #0
   213dc:	cmp	r0, r1
   213e0:	beq	213f0 <__assert_fail@plt+0xff5c>
   213e4:	ldr	r0, [sp, #28]
   213e8:	str	r0, [sp]
   213ec:	b	21400 <__assert_fail@plt+0xff6c>
   213f0:	movw	r0, #25000	; 0x61a8
   213f4:	movt	r0, #5
   213f8:	str	r0, [sp]
   213fc:	b	21400 <__assert_fail@plt+0xff6c>
   21400:	ldr	r0, [sp]
   21404:	add	r0, r0, #8
   21408:	ldrb	r1, [sp, #19]
   2140c:	lsr	r1, r1, #5
   21410:	add	r0, r0, r1, lsl #2
   21414:	str	r0, [sp, #12]
   21418:	ldrb	r0, [sp, #19]
   2141c:	and	r0, r0, #31
   21420:	str	r0, [sp, #8]
   21424:	ldr	r0, [sp, #12]
   21428:	ldr	r0, [r0]
   2142c:	ldr	r1, [sp, #8]
   21430:	lsr	r0, r0, r1
   21434:	and	r0, r0, #1
   21438:	str	r0, [sp, #4]
   2143c:	ldr	r0, [sp, #20]
   21440:	and	r0, r0, #1
   21444:	ldr	r1, [sp, #4]
   21448:	eor	r0, r0, r1
   2144c:	ldr	r1, [sp, #8]
   21450:	lsl	r0, r0, r1
   21454:	ldr	r1, [sp, #12]
   21458:	ldr	r2, [r1]
   2145c:	eor	r0, r2, r0
   21460:	str	r0, [r1]
   21464:	ldr	r0, [sp, #4]
   21468:	add	sp, sp, #32
   2146c:	bx	lr
   21470:	sub	sp, sp, #12
   21474:	str	r0, [sp, #8]
   21478:	str	r1, [sp, #4]
   2147c:	ldr	r0, [sp, #8]
   21480:	movw	r1, #0
   21484:	cmp	r0, r1
   21488:	bne	21498 <__assert_fail@plt+0x10004>
   2148c:	movw	r0, #25000	; 0x61a8
   21490:	movt	r0, #5
   21494:	str	r0, [sp, #8]
   21498:	ldr	r0, [sp, #8]
   2149c:	ldr	r0, [r0, #4]
   214a0:	str	r0, [sp]
   214a4:	ldr	r0, [sp, #4]
   214a8:	ldr	r1, [sp, #8]
   214ac:	str	r0, [r1, #4]
   214b0:	ldr	r0, [sp]
   214b4:	add	sp, sp, #12
   214b8:	bx	lr
   214bc:	push	{fp, lr}
   214c0:	mov	fp, sp
   214c4:	sub	sp, sp, #16
   214c8:	str	r0, [fp, #-4]
   214cc:	str	r1, [sp, #8]
   214d0:	str	r2, [sp, #4]
   214d4:	ldr	r0, [fp, #-4]
   214d8:	movw	r1, #0
   214dc:	cmp	r0, r1
   214e0:	bne	214f0 <__assert_fail@plt+0x1005c>
   214e4:	movw	r0, #25000	; 0x61a8
   214e8:	movt	r0, #5
   214ec:	str	r0, [fp, #-4]
   214f0:	ldr	r0, [fp, #-4]
   214f4:	movw	r1, #10
   214f8:	str	r1, [r0]
   214fc:	ldr	r0, [sp, #8]
   21500:	movw	r1, #0
   21504:	cmp	r0, r1
   21508:	beq	2151c <__assert_fail@plt+0x10088>
   2150c:	ldr	r0, [sp, #4]
   21510:	movw	r1, #0
   21514:	cmp	r0, r1
   21518:	bne	21520 <__assert_fail@plt+0x1008c>
   2151c:	bl	1147c <abort@plt>
   21520:	ldr	r0, [sp, #8]
   21524:	ldr	r1, [fp, #-4]
   21528:	str	r0, [r1, #40]	; 0x28
   2152c:	ldr	r0, [sp, #4]
   21530:	ldr	r1, [fp, #-4]
   21534:	str	r0, [r1, #44]	; 0x2c
   21538:	mov	sp, fp
   2153c:	pop	{fp, pc}
   21540:	push	{r4, r5, r6, sl, fp, lr}
   21544:	add	fp, sp, #16
   21548:	sub	sp, sp, #56	; 0x38
   2154c:	ldr	ip, [fp, #8]
   21550:	str	r0, [fp, #-20]	; 0xffffffec
   21554:	str	r1, [fp, #-24]	; 0xffffffe8
   21558:	str	r2, [fp, #-28]	; 0xffffffe4
   2155c:	str	r3, [fp, #-32]	; 0xffffffe0
   21560:	ldr	r0, [fp, #8]
   21564:	movw	r1, #0
   21568:	cmp	r0, r1
   2156c:	beq	2157c <__assert_fail@plt+0x100e8>
   21570:	ldr	r0, [fp, #8]
   21574:	str	r0, [sp, #24]
   21578:	b	2158c <__assert_fail@plt+0x100f8>
   2157c:	movw	r0, #25000	; 0x61a8
   21580:	movt	r0, #5
   21584:	str	r0, [sp, #24]
   21588:	b	2158c <__assert_fail@plt+0x100f8>
   2158c:	ldr	r0, [sp, #24]
   21590:	str	r0, [sp, #36]	; 0x24
   21594:	bl	113b0 <__errno_location@plt>
   21598:	ldr	r0, [r0]
   2159c:	str	r0, [sp, #32]
   215a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   215a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   215a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   215ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   215b0:	ldr	ip, [sp, #36]	; 0x24
   215b4:	ldr	ip, [ip]
   215b8:	ldr	lr, [sp, #36]	; 0x24
   215bc:	ldr	lr, [lr, #4]
   215c0:	ldr	r4, [sp, #36]	; 0x24
   215c4:	add	r4, r4, #8
   215c8:	ldr	r5, [sp, #36]	; 0x24
   215cc:	ldr	r5, [r5, #40]	; 0x28
   215d0:	ldr	r6, [sp, #36]	; 0x24
   215d4:	ldr	r6, [r6, #44]	; 0x2c
   215d8:	str	ip, [sp]
   215dc:	str	lr, [sp, #4]
   215e0:	str	r4, [sp, #8]
   215e4:	str	r5, [sp, #12]
   215e8:	str	r6, [sp, #16]
   215ec:	bl	21614 <__assert_fail@plt+0x10180>
   215f0:	str	r0, [sp, #28]
   215f4:	ldr	r0, [sp, #32]
   215f8:	str	r0, [sp, #20]
   215fc:	bl	113b0 <__errno_location@plt>
   21600:	ldr	r1, [sp, #20]
   21604:	str	r1, [r0]
   21608:	ldr	r0, [sp, #28]
   2160c:	sub	sp, fp, #16
   21610:	pop	{r4, r5, r6, sl, fp, pc}
   21614:	push	{r4, r5, r6, sl, fp, lr}
   21618:	add	fp, sp, #16
   2161c:	sub	sp, sp, #160	; 0xa0
   21620:	ldr	ip, [fp, #24]
   21624:	ldr	lr, [fp, #20]
   21628:	ldr	r4, [fp, #16]
   2162c:	ldr	r5, [fp, #12]
   21630:	ldr	r6, [fp, #8]
   21634:	str	r0, [fp, #-24]	; 0xffffffe8
   21638:	str	r1, [fp, #-28]	; 0xffffffe4
   2163c:	str	r2, [fp, #-32]	; 0xffffffe0
   21640:	str	r3, [fp, #-36]	; 0xffffffdc
   21644:	movw	r0, #0
   21648:	str	r0, [fp, #-44]	; 0xffffffd4
   2164c:	str	r0, [fp, #-48]	; 0xffffffd0
   21650:	str	r0, [fp, #-52]	; 0xffffffcc
   21654:	str	r0, [fp, #-56]	; 0xffffffc8
   21658:	movw	r0, #0
   2165c:	strb	r0, [fp, #-57]	; 0xffffffc7
   21660:	str	ip, [sp, #72]	; 0x48
   21664:	str	lr, [sp, #68]	; 0x44
   21668:	str	r4, [sp, #64]	; 0x40
   2166c:	str	r5, [sp, #60]	; 0x3c
   21670:	str	r6, [sp, #56]	; 0x38
   21674:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   21678:	cmp	r0, #1
   2167c:	movw	r0, #0
   21680:	moveq	r0, #1
   21684:	and	r0, r0, #1
   21688:	strb	r0, [fp, #-58]	; 0xffffffc6
   2168c:	ldr	r0, [fp, #12]
   21690:	and	r0, r0, #2
   21694:	cmp	r0, #0
   21698:	movw	r0, #0
   2169c:	movne	r0, #1
   216a0:	and	r0, r0, #1
   216a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   216a8:	movw	r0, #0
   216ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   216b0:	strb	r0, [fp, #-61]	; 0xffffffc3
   216b4:	movw	r0, #1
   216b8:	strb	r0, [fp, #-62]	; 0xffffffc2
   216bc:	ldr	r0, [fp, #8]
   216c0:	cmp	r0, #10
   216c4:	str	r0, [sp, #52]	; 0x34
   216c8:	bhi	218f0 <__assert_fail@plt+0x1045c>
   216cc:	add	r0, pc, #8
   216d0:	ldr	r1, [sp, #52]	; 0x34
   216d4:	ldr	r0, [r0, r1, lsl #2]
   216d8:	mov	pc, r0
   216dc:	andeq	r1, r2, r4, ror #17
   216e0:	andeq	r1, r2, r0, ror #16
   216e4:	andeq	r1, r2, r0, lsl #17
   216e8:	andeq	r1, r2, r8, asr r8
   216ec:	andeq	r1, r2, r8, ror #16
   216f0:	andeq	r1, r2, r8, lsl r7
   216f4:	andeq	r1, r2, r8, lsl #14
   216f8:	andeq	r1, r2, ip, ror r7
   216fc:	muleq	r2, r0, r7
   21700:	muleq	r2, r0, r7
   21704:	muleq	r2, r0, r7
   21708:	movw	r0, #5
   2170c:	str	r0, [fp, #8]
   21710:	movw	r0, #1
   21714:	strb	r0, [fp, #-59]	; 0xffffffc5
   21718:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2171c:	tst	r0, #1
   21720:	bne	2175c <__assert_fail@plt+0x102c8>
   21724:	b	21728 <__assert_fail@plt+0x10294>
   21728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2172c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21730:	cmp	r0, r1
   21734:	bcs	2174c <__assert_fail@plt+0x102b8>
   21738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2173c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21740:	add	r0, r0, r1
   21744:	movw	r1, #34	; 0x22
   21748:	strb	r1, [r0]
   2174c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21750:	add	r0, r0, #1
   21754:	str	r0, [fp, #-44]	; 0xffffffd4
   21758:	b	2175c <__assert_fail@plt+0x102c8>
   2175c:	movw	r0, #1
   21760:	strb	r0, [fp, #-57]	; 0xffffffc7
   21764:	movw	r0, #21720	; 0x54d8
   21768:	movt	r0, #4
   2176c:	str	r0, [fp, #-52]	; 0xffffffcc
   21770:	movw	r0, #1
   21774:	str	r0, [fp, #-56]	; 0xffffffc8
   21778:	b	218f4 <__assert_fail@plt+0x10460>
   2177c:	movw	r0, #1
   21780:	strb	r0, [fp, #-57]	; 0xffffffc7
   21784:	movw	r0, #0
   21788:	strb	r0, [fp, #-59]	; 0xffffffc5
   2178c:	b	218f4 <__assert_fail@plt+0x10460>
   21790:	ldr	r0, [fp, #8]
   21794:	cmp	r0, #10
   21798:	beq	217c4 <__assert_fail@plt+0x10330>
   2179c:	ldr	r1, [fp, #8]
   217a0:	movw	r0, #21722	; 0x54da
   217a4:	movt	r0, #4
   217a8:	bl	23808 <__assert_fail@plt+0x12374>
   217ac:	str	r0, [fp, #20]
   217b0:	ldr	r1, [fp, #8]
   217b4:	movw	r0, #16383	; 0x3fff
   217b8:	movt	r0, #4
   217bc:	bl	23808 <__assert_fail@plt+0x12374>
   217c0:	str	r0, [fp, #24]
   217c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   217c8:	tst	r0, #1
   217cc:	bne	21838 <__assert_fail@plt+0x103a4>
   217d0:	ldr	r0, [fp, #20]
   217d4:	str	r0, [fp, #-52]	; 0xffffffcc
   217d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   217dc:	ldrsb	r0, [r0]
   217e0:	cmp	r0, #0
   217e4:	beq	21834 <__assert_fail@plt+0x103a0>
   217e8:	b	217ec <__assert_fail@plt+0x10358>
   217ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   217f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   217f4:	cmp	r0, r1
   217f8:	bcs	21814 <__assert_fail@plt+0x10380>
   217fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21800:	ldrb	r0, [r0]
   21804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21808:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2180c:	add	r1, r1, r2
   21810:	strb	r0, [r1]
   21814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21818:	add	r0, r0, #1
   2181c:	str	r0, [fp, #-44]	; 0xffffffd4
   21820:	b	21824 <__assert_fail@plt+0x10390>
   21824:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21828:	add	r0, r0, #1
   2182c:	str	r0, [fp, #-52]	; 0xffffffcc
   21830:	b	217d8 <__assert_fail@plt+0x10344>
   21834:	b	21838 <__assert_fail@plt+0x103a4>
   21838:	movw	r0, #1
   2183c:	strb	r0, [fp, #-57]	; 0xffffffc7
   21840:	ldr	r0, [fp, #24]
   21844:	str	r0, [fp, #-52]	; 0xffffffcc
   21848:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2184c:	bl	1138c <strlen@plt>
   21850:	str	r0, [fp, #-56]	; 0xffffffc8
   21854:	b	218f4 <__assert_fail@plt+0x10460>
   21858:	movw	r0, #1
   2185c:	strb	r0, [fp, #-57]	; 0xffffffc7
   21860:	movw	r0, #1
   21864:	strb	r0, [fp, #-59]	; 0xffffffc5
   21868:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2186c:	tst	r0, #1
   21870:	bne	2187c <__assert_fail@plt+0x103e8>
   21874:	movw	r0, #1
   21878:	strb	r0, [fp, #-57]	; 0xffffffc7
   2187c:	b	21880 <__assert_fail@plt+0x103ec>
   21880:	movw	r0, #2
   21884:	str	r0, [fp, #8]
   21888:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2188c:	tst	r0, #1
   21890:	bne	218cc <__assert_fail@plt+0x10438>
   21894:	b	21898 <__assert_fail@plt+0x10404>
   21898:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2189c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   218a0:	cmp	r0, r1
   218a4:	bcs	218bc <__assert_fail@plt+0x10428>
   218a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   218b0:	add	r0, r0, r1
   218b4:	movw	r1, #39	; 0x27
   218b8:	strb	r1, [r0]
   218bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   218c0:	add	r0, r0, #1
   218c4:	str	r0, [fp, #-44]	; 0xffffffd4
   218c8:	b	218cc <__assert_fail@plt+0x10438>
   218cc:	movw	r0, #16383	; 0x3fff
   218d0:	movt	r0, #4
   218d4:	str	r0, [fp, #-52]	; 0xffffffcc
   218d8:	movw	r0, #1
   218dc:	str	r0, [fp, #-56]	; 0xffffffc8
   218e0:	b	218f4 <__assert_fail@plt+0x10460>
   218e4:	movw	r0, #0
   218e8:	strb	r0, [fp, #-59]	; 0xffffffc5
   218ec:	b	218f4 <__assert_fail@plt+0x10460>
   218f0:	bl	1147c <abort@plt>
   218f4:	movw	r0, #0
   218f8:	str	r0, [fp, #-40]	; 0xffffffd8
   218fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21900:	cmn	r0, #1
   21904:	bne	21930 <__assert_fail@plt+0x1049c>
   21908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2190c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21910:	add	r0, r0, r1
   21914:	ldrb	r0, [r0]
   21918:	cmp	r0, #0
   2191c:	movw	r0, #0
   21920:	moveq	r0, #1
   21924:	and	r0, r0, #1
   21928:	str	r0, [sp, #48]	; 0x30
   2192c:	b	2194c <__assert_fail@plt+0x104b8>
   21930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21934:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21938:	cmp	r0, r1
   2193c:	movw	r0, #0
   21940:	moveq	r0, #1
   21944:	and	r0, r0, #1
   21948:	str	r0, [sp, #48]	; 0x30
   2194c:	ldr	r0, [sp, #48]	; 0x30
   21950:	cmp	r0, #0
   21954:	movw	r0, #0
   21958:	movne	r0, #1
   2195c:	mvn	r1, #0
   21960:	eor	r0, r0, r1
   21964:	tst	r0, #1
   21968:	beq	22b54 <__assert_fail@plt+0x116c0>
   2196c:	movw	r0, #0
   21970:	strb	r0, [fp, #-65]	; 0xffffffbf
   21974:	strb	r0, [fp, #-66]	; 0xffffffbe
   21978:	strb	r0, [fp, #-67]	; 0xffffffbd
   2197c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   21980:	tst	r0, #1
   21984:	beq	21a30 <__assert_fail@plt+0x1059c>
   21988:	ldr	r0, [fp, #8]
   2198c:	cmp	r0, #2
   21990:	beq	21a30 <__assert_fail@plt+0x1059c>
   21994:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21998:	cmp	r0, #0
   2199c:	beq	21a30 <__assert_fail@plt+0x1059c>
   219a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   219a4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   219a8:	add	r0, r0, r1
   219ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   219b0:	cmn	r1, #1
   219b4:	str	r0, [sp, #44]	; 0x2c
   219b8:	bne	219e0 <__assert_fail@plt+0x1054c>
   219bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   219c0:	movw	r1, #1
   219c4:	cmp	r1, r0
   219c8:	bcs	219e0 <__assert_fail@plt+0x1054c>
   219cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   219d0:	bl	1138c <strlen@plt>
   219d4:	str	r0, [fp, #-36]	; 0xffffffdc
   219d8:	str	r0, [sp, #40]	; 0x28
   219dc:	b	219e8 <__assert_fail@plt+0x10554>
   219e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   219e4:	str	r0, [sp, #40]	; 0x28
   219e8:	ldr	r0, [sp, #40]	; 0x28
   219ec:	ldr	r1, [sp, #44]	; 0x2c
   219f0:	cmp	r1, r0
   219f4:	bhi	21a30 <__assert_fail@plt+0x1059c>
   219f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   219fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21a00:	add	r0, r0, r1
   21a04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21a08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21a0c:	bl	11284 <memcmp@plt>
   21a10:	cmp	r0, #0
   21a14:	bne	21a30 <__assert_fail@plt+0x1059c>
   21a18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21a1c:	tst	r0, #1
   21a20:	beq	21a28 <__assert_fail@plt+0x10594>
   21a24:	b	22cd4 <__assert_fail@plt+0x11840>
   21a28:	movw	r0, #1
   21a2c:	strb	r0, [fp, #-65]	; 0xffffffbf
   21a30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21a34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21a38:	ldrb	r0, [r0, r1]
   21a3c:	strb	r0, [fp, #-63]	; 0xffffffc1
   21a40:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   21a44:	mov	r1, r0
   21a48:	cmp	r0, #126	; 0x7e
   21a4c:	str	r1, [sp, #36]	; 0x24
   21a50:	bhi	222c0 <__assert_fail@plt+0x10e2c>
   21a54:	add	r0, pc, #8
   21a58:	ldr	r1, [sp, #36]	; 0x24
   21a5c:	ldr	r0, [r0, r1, lsl #2]
   21a60:	mov	pc, r0
   21a64:	andeq	r1, r2, r0, ror #24
   21a68:	andeq	r2, r2, r0, asr #5
   21a6c:	andeq	r2, r2, r0, asr #5
   21a70:	andeq	r2, r2, r0, asr #5
   21a74:	andeq	r2, r2, r0, asr #5
   21a78:	andeq	r2, r2, r0, asr #5
   21a7c:	andeq	r2, r2, r0, asr #5
   21a80:	andeq	r2, r2, r8, rrx
   21a84:	andeq	r2, r2, r4, ror r0
   21a88:	andeq	r2, r2, r4, lsr #1
   21a8c:	andeq	r2, r2, ip, lsl #1
   21a90:	strheq	r2, [r2], -r0
   21a94:	andeq	r2, r2, r0, lsl #1
   21a98:	muleq	r2, r8, r0
   21a9c:	andeq	r2, r2, r0, asr #5
   21aa0:	andeq	r2, r2, r0, asr #5
   21aa4:	andeq	r2, r2, r0, asr #5
   21aa8:	andeq	r2, r2, r0, asr #5
   21aac:	andeq	r2, r2, r0, asr #5
   21ab0:	andeq	r2, r2, r0, asr #5
   21ab4:	andeq	r2, r2, r0, asr #5
   21ab8:	andeq	r2, r2, r0, asr #5
   21abc:	andeq	r2, r2, r0, asr #5
   21ac0:	andeq	r2, r2, r0, asr #5
   21ac4:	andeq	r2, r2, r0, asr #5
   21ac8:	andeq	r2, r2, r0, asr #5
   21acc:	andeq	r2, r2, r0, asr #5
   21ad0:	andeq	r2, r2, r0, asr #5
   21ad4:	andeq	r2, r2, r0, asr #5
   21ad8:	andeq	r2, r2, r0, asr #5
   21adc:	andeq	r2, r2, r0, asr #5
   21ae0:	andeq	r2, r2, r0, asr #5
   21ae4:	muleq	r2, r4, r1
   21ae8:	muleq	r2, ip, r1
   21aec:	muleq	r2, ip, r1
   21af0:	andeq	r2, r2, r0, lsl #3
   21af4:	muleq	r2, ip, r1
   21af8:			; <UNDEFINED> instruction: 0x000222b4
   21afc:	muleq	r2, ip, r1
   21b00:			; <UNDEFINED> instruction: 0x000221bc
   21b04:	muleq	r2, ip, r1
   21b08:	muleq	r2, ip, r1
   21b0c:	muleq	r2, ip, r1
   21b10:			; <UNDEFINED> instruction: 0x000222b4
   21b14:			; <UNDEFINED> instruction: 0x000222b4
   21b18:			; <UNDEFINED> instruction: 0x000222b4
   21b1c:			; <UNDEFINED> instruction: 0x000222b4
   21b20:			; <UNDEFINED> instruction: 0x000222b4
   21b24:			; <UNDEFINED> instruction: 0x000222b4
   21b28:			; <UNDEFINED> instruction: 0x000222b4
   21b2c:			; <UNDEFINED> instruction: 0x000222b4
   21b30:			; <UNDEFINED> instruction: 0x000222b4
   21b34:			; <UNDEFINED> instruction: 0x000222b4
   21b38:			; <UNDEFINED> instruction: 0x000222b4
   21b3c:			; <UNDEFINED> instruction: 0x000222b4
   21b40:			; <UNDEFINED> instruction: 0x000222b4
   21b44:			; <UNDEFINED> instruction: 0x000222b4
   21b48:			; <UNDEFINED> instruction: 0x000222b4
   21b4c:			; <UNDEFINED> instruction: 0x000222b4
   21b50:	muleq	r2, ip, r1
   21b54:	muleq	r2, ip, r1
   21b58:	muleq	r2, ip, r1
   21b5c:	muleq	r2, ip, r1
   21b60:	andeq	r1, r2, ip, ror #28
   21b64:	andeq	r2, r2, r0, asr #5
   21b68:			; <UNDEFINED> instruction: 0x000222b4
   21b6c:			; <UNDEFINED> instruction: 0x000222b4
   21b70:			; <UNDEFINED> instruction: 0x000222b4
   21b74:			; <UNDEFINED> instruction: 0x000222b4
   21b78:			; <UNDEFINED> instruction: 0x000222b4
   21b7c:			; <UNDEFINED> instruction: 0x000222b4
   21b80:			; <UNDEFINED> instruction: 0x000222b4
   21b84:			; <UNDEFINED> instruction: 0x000222b4
   21b88:			; <UNDEFINED> instruction: 0x000222b4
   21b8c:			; <UNDEFINED> instruction: 0x000222b4
   21b90:			; <UNDEFINED> instruction: 0x000222b4
   21b94:			; <UNDEFINED> instruction: 0x000222b4
   21b98:			; <UNDEFINED> instruction: 0x000222b4
   21b9c:			; <UNDEFINED> instruction: 0x000222b4
   21ba0:			; <UNDEFINED> instruction: 0x000222b4
   21ba4:			; <UNDEFINED> instruction: 0x000222b4
   21ba8:			; <UNDEFINED> instruction: 0x000222b4
   21bac:			; <UNDEFINED> instruction: 0x000222b4
   21bb0:			; <UNDEFINED> instruction: 0x000222b4
   21bb4:			; <UNDEFINED> instruction: 0x000222b4
   21bb8:			; <UNDEFINED> instruction: 0x000222b4
   21bbc:			; <UNDEFINED> instruction: 0x000222b4
   21bc0:			; <UNDEFINED> instruction: 0x000222b4
   21bc4:			; <UNDEFINED> instruction: 0x000222b4
   21bc8:			; <UNDEFINED> instruction: 0x000222b4
   21bcc:			; <UNDEFINED> instruction: 0x000222b4
   21bd0:	muleq	r2, ip, r1
   21bd4:	strheq	r2, [r2], -ip
   21bd8:			; <UNDEFINED> instruction: 0x000222b4
   21bdc:	muleq	r2, ip, r1
   21be0:			; <UNDEFINED> instruction: 0x000222b4
   21be4:	muleq	r2, ip, r1
   21be8:			; <UNDEFINED> instruction: 0x000222b4
   21bec:			; <UNDEFINED> instruction: 0x000222b4
   21bf0:			; <UNDEFINED> instruction: 0x000222b4
   21bf4:			; <UNDEFINED> instruction: 0x000222b4
   21bf8:			; <UNDEFINED> instruction: 0x000222b4
   21bfc:			; <UNDEFINED> instruction: 0x000222b4
   21c00:			; <UNDEFINED> instruction: 0x000222b4
   21c04:			; <UNDEFINED> instruction: 0x000222b4
   21c08:			; <UNDEFINED> instruction: 0x000222b4
   21c0c:			; <UNDEFINED> instruction: 0x000222b4
   21c10:			; <UNDEFINED> instruction: 0x000222b4
   21c14:			; <UNDEFINED> instruction: 0x000222b4
   21c18:			; <UNDEFINED> instruction: 0x000222b4
   21c1c:			; <UNDEFINED> instruction: 0x000222b4
   21c20:			; <UNDEFINED> instruction: 0x000222b4
   21c24:			; <UNDEFINED> instruction: 0x000222b4
   21c28:			; <UNDEFINED> instruction: 0x000222b4
   21c2c:			; <UNDEFINED> instruction: 0x000222b4
   21c30:			; <UNDEFINED> instruction: 0x000222b4
   21c34:			; <UNDEFINED> instruction: 0x000222b4
   21c38:			; <UNDEFINED> instruction: 0x000222b4
   21c3c:			; <UNDEFINED> instruction: 0x000222b4
   21c40:			; <UNDEFINED> instruction: 0x000222b4
   21c44:			; <UNDEFINED> instruction: 0x000222b4
   21c48:			; <UNDEFINED> instruction: 0x000222b4
   21c4c:			; <UNDEFINED> instruction: 0x000222b4
   21c50:	andeq	r2, r2, ip, asr #2
   21c54:	muleq	r2, ip, r1
   21c58:	andeq	r2, r2, ip, asr #2
   21c5c:	andeq	r2, r2, r0, lsl #3
   21c60:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   21c64:	tst	r0, #1
   21c68:	beq	21e50 <__assert_fail@plt+0x109bc>
   21c6c:	b	21c70 <__assert_fail@plt+0x107dc>
   21c70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21c74:	tst	r0, #1
   21c78:	beq	21c80 <__assert_fail@plt+0x107ec>
   21c7c:	b	22cd4 <__assert_fail@plt+0x11840>
   21c80:	movw	r0, #1
   21c84:	strb	r0, [fp, #-66]	; 0xffffffbe
   21c88:	ldr	r0, [fp, #8]
   21c8c:	cmp	r0, #2
   21c90:	bne	21d44 <__assert_fail@plt+0x108b0>
   21c94:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   21c98:	tst	r0, #1
   21c9c:	bne	21d44 <__assert_fail@plt+0x108b0>
   21ca0:	b	21ca4 <__assert_fail@plt+0x10810>
   21ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ca8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21cac:	cmp	r0, r1
   21cb0:	bcs	21cc8 <__assert_fail@plt+0x10834>
   21cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21cb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21cbc:	add	r0, r0, r1
   21cc0:	movw	r1, #39	; 0x27
   21cc4:	strb	r1, [r0]
   21cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ccc:	add	r0, r0, #1
   21cd0:	str	r0, [fp, #-44]	; 0xffffffd4
   21cd4:	b	21cd8 <__assert_fail@plt+0x10844>
   21cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21cdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21ce0:	cmp	r0, r1
   21ce4:	bcs	21cfc <__assert_fail@plt+0x10868>
   21ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21cec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21cf0:	add	r0, r0, r1
   21cf4:	movw	r1, #36	; 0x24
   21cf8:	strb	r1, [r0]
   21cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d00:	add	r0, r0, #1
   21d04:	str	r0, [fp, #-44]	; 0xffffffd4
   21d08:	b	21d0c <__assert_fail@plt+0x10878>
   21d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d14:	cmp	r0, r1
   21d18:	bcs	21d30 <__assert_fail@plt+0x1089c>
   21d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21d24:	add	r0, r0, r1
   21d28:	movw	r1, #39	; 0x27
   21d2c:	strb	r1, [r0]
   21d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d34:	add	r0, r0, #1
   21d38:	str	r0, [fp, #-44]	; 0xffffffd4
   21d3c:	movw	r0, #1
   21d40:	strb	r0, [fp, #-60]	; 0xffffffc4
   21d44:	b	21d48 <__assert_fail@plt+0x108b4>
   21d48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d50:	cmp	r0, r1
   21d54:	bcs	21d6c <__assert_fail@plt+0x108d8>
   21d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21d60:	add	r0, r0, r1
   21d64:	movw	r1, #92	; 0x5c
   21d68:	strb	r1, [r0]
   21d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21d70:	add	r0, r0, #1
   21d74:	str	r0, [fp, #-44]	; 0xffffffd4
   21d78:	b	21d7c <__assert_fail@plt+0x108e8>
   21d7c:	ldr	r0, [fp, #8]
   21d80:	cmp	r0, #2
   21d84:	beq	21e44 <__assert_fail@plt+0x109b0>
   21d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21d8c:	add	r0, r0, #1
   21d90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21d94:	cmp	r0, r1
   21d98:	bcs	21e44 <__assert_fail@plt+0x109b0>
   21d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21da0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21da4:	add	r1, r1, #1
   21da8:	add	r0, r0, r1
   21dac:	ldrb	r0, [r0]
   21db0:	movw	r1, #48	; 0x30
   21db4:	cmp	r1, r0
   21db8:	bgt	21e44 <__assert_fail@plt+0x109b0>
   21dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21dc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21dc4:	add	r1, r1, #1
   21dc8:	add	r0, r0, r1
   21dcc:	ldrb	r0, [r0]
   21dd0:	cmp	r0, #57	; 0x39
   21dd4:	bgt	21e44 <__assert_fail@plt+0x109b0>
   21dd8:	b	21ddc <__assert_fail@plt+0x10948>
   21ddc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21de4:	cmp	r0, r1
   21de8:	bcs	21e00 <__assert_fail@plt+0x1096c>
   21dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21df0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21df4:	add	r0, r0, r1
   21df8:	movw	r1, #48	; 0x30
   21dfc:	strb	r1, [r0]
   21e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21e04:	add	r0, r0, #1
   21e08:	str	r0, [fp, #-44]	; 0xffffffd4
   21e0c:	b	21e10 <__assert_fail@plt+0x1097c>
   21e10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21e14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21e18:	cmp	r0, r1
   21e1c:	bcs	21e34 <__assert_fail@plt+0x109a0>
   21e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21e28:	add	r0, r0, r1
   21e2c:	movw	r1, #48	; 0x30
   21e30:	strb	r1, [r0]
   21e34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21e38:	add	r0, r0, #1
   21e3c:	str	r0, [fp, #-44]	; 0xffffffd4
   21e40:	b	21e44 <__assert_fail@plt+0x109b0>
   21e44:	movw	r0, #48	; 0x30
   21e48:	strb	r0, [fp, #-63]	; 0xffffffc1
   21e4c:	b	21e68 <__assert_fail@plt+0x109d4>
   21e50:	ldr	r0, [fp, #12]
   21e54:	and	r0, r0, #1
   21e58:	cmp	r0, #0
   21e5c:	beq	21e64 <__assert_fail@plt+0x109d0>
   21e60:	b	22b44 <__assert_fail@plt+0x116b0>
   21e64:	b	21e68 <__assert_fail@plt+0x109d4>
   21e68:	b	228e0 <__assert_fail@plt+0x1144c>
   21e6c:	ldr	r0, [fp, #8]
   21e70:	cmp	r0, #2
   21e74:	str	r0, [sp, #32]
   21e78:	beq	21e90 <__assert_fail@plt+0x109fc>
   21e7c:	b	21e80 <__assert_fail@plt+0x109ec>
   21e80:	ldr	r0, [sp, #32]
   21e84:	cmp	r0, #5
   21e88:	beq	21ea4 <__assert_fail@plt+0x10a10>
   21e8c:	b	22060 <__assert_fail@plt+0x10bcc>
   21e90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21e94:	tst	r0, #1
   21e98:	beq	21ea0 <__assert_fail@plt+0x10a0c>
   21e9c:	b	22cd4 <__assert_fail@plt+0x11840>
   21ea0:	b	22064 <__assert_fail@plt+0x10bd0>
   21ea4:	ldr	r0, [fp, #12]
   21ea8:	and	r0, r0, #4
   21eac:	cmp	r0, #0
   21eb0:	beq	2205c <__assert_fail@plt+0x10bc8>
   21eb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21eb8:	add	r0, r0, #2
   21ebc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21ec0:	cmp	r0, r1
   21ec4:	bcs	2205c <__assert_fail@plt+0x10bc8>
   21ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21ecc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21ed0:	add	r1, r1, #1
   21ed4:	add	r0, r0, r1
   21ed8:	ldrb	r0, [r0]
   21edc:	cmp	r0, #63	; 0x3f
   21ee0:	bne	2205c <__assert_fail@plt+0x10bc8>
   21ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21ee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21eec:	add	r0, r1, r0
   21ef0:	ldrb	r0, [r0, #2]
   21ef4:	mov	r1, r0
   21ef8:	cmp	r0, #33	; 0x21
   21efc:	str	r1, [sp, #28]
   21f00:	beq	21f50 <__assert_fail@plt+0x10abc>
   21f04:	b	21f08 <__assert_fail@plt+0x10a74>
   21f08:	ldr	r0, [sp, #28]
   21f0c:	sub	r1, r0, #39	; 0x27
   21f10:	cmp	r1, #3
   21f14:	bcc	21f50 <__assert_fail@plt+0x10abc>
   21f18:	b	21f1c <__assert_fail@plt+0x10a88>
   21f1c:	ldr	r0, [sp, #28]
   21f20:	cmp	r0, #45	; 0x2d
   21f24:	beq	21f50 <__assert_fail@plt+0x10abc>
   21f28:	b	21f2c <__assert_fail@plt+0x10a98>
   21f2c:	ldr	r0, [sp, #28]
   21f30:	cmp	r0, #47	; 0x2f
   21f34:	beq	21f50 <__assert_fail@plt+0x10abc>
   21f38:	b	21f3c <__assert_fail@plt+0x10aa8>
   21f3c:	ldr	r0, [sp, #28]
   21f40:	sub	r1, r0, #60	; 0x3c
   21f44:	cmp	r1, #2
   21f48:	bhi	22054 <__assert_fail@plt+0x10bc0>
   21f4c:	b	21f50 <__assert_fail@plt+0x10abc>
   21f50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   21f54:	tst	r0, #1
   21f58:	beq	21f60 <__assert_fail@plt+0x10acc>
   21f5c:	b	22cd4 <__assert_fail@plt+0x11840>
   21f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21f68:	add	r1, r1, #2
   21f6c:	add	r0, r0, r1
   21f70:	ldrb	r0, [r0]
   21f74:	strb	r0, [fp, #-63]	; 0xffffffc1
   21f78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21f7c:	add	r0, r0, #2
   21f80:	str	r0, [fp, #-40]	; 0xffffffd8
   21f84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21f88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21f8c:	cmp	r0, r1
   21f90:	bcs	21fa8 <__assert_fail@plt+0x10b14>
   21f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21f9c:	add	r0, r0, r1
   21fa0:	movw	r1, #63	; 0x3f
   21fa4:	strb	r1, [r0]
   21fa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21fac:	add	r0, r0, #1
   21fb0:	str	r0, [fp, #-44]	; 0xffffffd4
   21fb4:	b	21fb8 <__assert_fail@plt+0x10b24>
   21fb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21fbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21fc0:	cmp	r0, r1
   21fc4:	bcs	21fdc <__assert_fail@plt+0x10b48>
   21fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21fd0:	add	r0, r0, r1
   21fd4:	movw	r1, #34	; 0x22
   21fd8:	strb	r1, [r0]
   21fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21fe0:	add	r0, r0, #1
   21fe4:	str	r0, [fp, #-44]	; 0xffffffd4
   21fe8:	b	21fec <__assert_fail@plt+0x10b58>
   21fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ff0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21ff4:	cmp	r0, r1
   21ff8:	bcs	22010 <__assert_fail@plt+0x10b7c>
   21ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22000:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22004:	add	r0, r0, r1
   22008:	movw	r1, #34	; 0x22
   2200c:	strb	r1, [r0]
   22010:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22014:	add	r0, r0, #1
   22018:	str	r0, [fp, #-44]	; 0xffffffd4
   2201c:	b	22020 <__assert_fail@plt+0x10b8c>
   22020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22024:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22028:	cmp	r0, r1
   2202c:	bcs	22044 <__assert_fail@plt+0x10bb0>
   22030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22034:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22038:	add	r0, r0, r1
   2203c:	movw	r1, #63	; 0x3f
   22040:	strb	r1, [r0]
   22044:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22048:	add	r0, r0, #1
   2204c:	str	r0, [fp, #-44]	; 0xffffffd4
   22050:	b	22058 <__assert_fail@plt+0x10bc4>
   22054:	b	22058 <__assert_fail@plt+0x10bc4>
   22058:	b	2205c <__assert_fail@plt+0x10bc8>
   2205c:	b	22064 <__assert_fail@plt+0x10bd0>
   22060:	b	22064 <__assert_fail@plt+0x10bd0>
   22064:	b	228e0 <__assert_fail@plt+0x1144c>
   22068:	movw	r0, #97	; 0x61
   2206c:	strb	r0, [fp, #-64]	; 0xffffffc0
   22070:	b	22130 <__assert_fail@plt+0x10c9c>
   22074:	movw	r0, #98	; 0x62
   22078:	strb	r0, [fp, #-64]	; 0xffffffc0
   2207c:	b	22130 <__assert_fail@plt+0x10c9c>
   22080:	movw	r0, #102	; 0x66
   22084:	strb	r0, [fp, #-64]	; 0xffffffc0
   22088:	b	22130 <__assert_fail@plt+0x10c9c>
   2208c:	movw	r0, #110	; 0x6e
   22090:	strb	r0, [fp, #-64]	; 0xffffffc0
   22094:	b	22110 <__assert_fail@plt+0x10c7c>
   22098:	movw	r0, #114	; 0x72
   2209c:	strb	r0, [fp, #-64]	; 0xffffffc0
   220a0:	b	22110 <__assert_fail@plt+0x10c7c>
   220a4:	movw	r0, #116	; 0x74
   220a8:	strb	r0, [fp, #-64]	; 0xffffffc0
   220ac:	b	22110 <__assert_fail@plt+0x10c7c>
   220b0:	movw	r0, #118	; 0x76
   220b4:	strb	r0, [fp, #-64]	; 0xffffffc0
   220b8:	b	22130 <__assert_fail@plt+0x10c9c>
   220bc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   220c0:	strb	r0, [fp, #-64]	; 0xffffffc0
   220c4:	ldr	r0, [fp, #8]
   220c8:	cmp	r0, #2
   220cc:	bne	220e4 <__assert_fail@plt+0x10c50>
   220d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   220d4:	tst	r0, #1
   220d8:	beq	220e0 <__assert_fail@plt+0x10c4c>
   220dc:	b	22cd4 <__assert_fail@plt+0x11840>
   220e0:	b	22a68 <__assert_fail@plt+0x115d4>
   220e4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   220e8:	tst	r0, #1
   220ec:	beq	2210c <__assert_fail@plt+0x10c78>
   220f0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   220f4:	tst	r0, #1
   220f8:	beq	2210c <__assert_fail@plt+0x10c78>
   220fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22100:	cmp	r0, #0
   22104:	beq	2210c <__assert_fail@plt+0x10c78>
   22108:	b	22a68 <__assert_fail@plt+0x115d4>
   2210c:	b	22110 <__assert_fail@plt+0x10c7c>
   22110:	ldr	r0, [fp, #8]
   22114:	cmp	r0, #2
   22118:	bne	2212c <__assert_fail@plt+0x10c98>
   2211c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22120:	tst	r0, #1
   22124:	beq	2212c <__assert_fail@plt+0x10c98>
   22128:	b	22cd4 <__assert_fail@plt+0x11840>
   2212c:	b	22130 <__assert_fail@plt+0x10c9c>
   22130:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   22134:	tst	r0, #1
   22138:	beq	22148 <__assert_fail@plt+0x10cb4>
   2213c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   22140:	strb	r0, [fp, #-63]	; 0xffffffc1
   22144:	b	22954 <__assert_fail@plt+0x114c0>
   22148:	b	228e0 <__assert_fail@plt+0x1144c>
   2214c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22150:	cmn	r0, #1
   22154:	bne	2216c <__assert_fail@plt+0x10cd8>
   22158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2215c:	ldrb	r0, [r0, #1]
   22160:	cmp	r0, #0
   22164:	beq	2217c <__assert_fail@plt+0x10ce8>
   22168:	b	22178 <__assert_fail@plt+0x10ce4>
   2216c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22170:	cmp	r0, #1
   22174:	beq	2217c <__assert_fail@plt+0x10ce8>
   22178:	b	228e0 <__assert_fail@plt+0x1144c>
   2217c:	b	22180 <__assert_fail@plt+0x10cec>
   22180:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22184:	cmp	r0, #0
   22188:	beq	22190 <__assert_fail@plt+0x10cfc>
   2218c:	b	228e0 <__assert_fail@plt+0x1144c>
   22190:	b	22194 <__assert_fail@plt+0x10d00>
   22194:	movw	r0, #1
   22198:	strb	r0, [fp, #-67]	; 0xffffffbd
   2219c:	ldr	r0, [fp, #8]
   221a0:	cmp	r0, #2
   221a4:	bne	221b8 <__assert_fail@plt+0x10d24>
   221a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   221ac:	tst	r0, #1
   221b0:	beq	221b8 <__assert_fail@plt+0x10d24>
   221b4:	b	22cd4 <__assert_fail@plt+0x11840>
   221b8:	b	228e0 <__assert_fail@plt+0x1144c>
   221bc:	movw	r0, #1
   221c0:	strb	r0, [fp, #-61]	; 0xffffffc3
   221c4:	strb	r0, [fp, #-67]	; 0xffffffbd
   221c8:	ldr	r0, [fp, #8]
   221cc:	cmp	r0, #2
   221d0:	bne	222b0 <__assert_fail@plt+0x10e1c>
   221d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   221d8:	tst	r0, #1
   221dc:	beq	221e4 <__assert_fail@plt+0x10d50>
   221e0:	b	22cd4 <__assert_fail@plt+0x11840>
   221e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   221e8:	cmp	r0, #0
   221ec:	beq	2220c <__assert_fail@plt+0x10d78>
   221f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   221f4:	cmp	r0, #0
   221f8:	bne	2220c <__assert_fail@plt+0x10d78>
   221fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22200:	str	r0, [fp, #-48]	; 0xffffffd0
   22204:	movw	r0, #0
   22208:	str	r0, [fp, #-28]	; 0xffffffe4
   2220c:	b	22210 <__assert_fail@plt+0x10d7c>
   22210:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22214:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22218:	cmp	r0, r1
   2221c:	bcs	22234 <__assert_fail@plt+0x10da0>
   22220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22224:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22228:	add	r0, r0, r1
   2222c:	movw	r1, #39	; 0x27
   22230:	strb	r1, [r0]
   22234:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22238:	add	r0, r0, #1
   2223c:	str	r0, [fp, #-44]	; 0xffffffd4
   22240:	b	22244 <__assert_fail@plt+0x10db0>
   22244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2224c:	cmp	r0, r1
   22250:	bcs	22268 <__assert_fail@plt+0x10dd4>
   22254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22258:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2225c:	add	r0, r0, r1
   22260:	movw	r1, #92	; 0x5c
   22264:	strb	r1, [r0]
   22268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2226c:	add	r0, r0, #1
   22270:	str	r0, [fp, #-44]	; 0xffffffd4
   22274:	b	22278 <__assert_fail@plt+0x10de4>
   22278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2227c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22280:	cmp	r0, r1
   22284:	bcs	2229c <__assert_fail@plt+0x10e08>
   22288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2228c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22290:	add	r0, r0, r1
   22294:	movw	r1, #39	; 0x27
   22298:	strb	r1, [r0]
   2229c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   222a0:	add	r0, r0, #1
   222a4:	str	r0, [fp, #-44]	; 0xffffffd4
   222a8:	movw	r0, #0
   222ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   222b0:	b	228e0 <__assert_fail@plt+0x1144c>
   222b4:	movw	r0, #1
   222b8:	strb	r0, [fp, #-67]	; 0xffffffbd
   222bc:	b	228e0 <__assert_fail@plt+0x1144c>
   222c0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   222c4:	tst	r0, #1
   222c8:	beq	22308 <__assert_fail@plt+0x10e74>
   222cc:	mov	r0, #1
   222d0:	str	r0, [fp, #-72]	; 0xffffffb8
   222d4:	bl	11368 <__ctype_b_loc@plt>
   222d8:	ldr	r0, [r0]
   222dc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   222e0:	mov	r2, r1
   222e4:	add	r0, r0, r1, lsl #1
   222e8:	ldrh	r0, [r0]
   222ec:	and	r0, r0, #16384	; 0x4000
   222f0:	cmp	r0, #0
   222f4:	movw	r0, #0
   222f8:	movne	r0, #1
   222fc:	and	r0, r0, #1
   22300:	strb	r0, [fp, #-73]	; 0xffffffb7
   22304:	b	22594 <__assert_fail@plt+0x11100>
   22308:	sub	r0, fp, #84	; 0x54
   2230c:	movw	r1, #0
   22310:	and	r1, r1, #255	; 0xff
   22314:	movw	r2, #8
   22318:	bl	113d4 <memset@plt>
   2231c:	movw	r0, #0
   22320:	str	r0, [fp, #-72]	; 0xffffffb8
   22324:	movw	r0, #1
   22328:	strb	r0, [fp, #-73]	; 0xffffffb7
   2232c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22330:	cmn	r0, #1
   22334:	bne	22344 <__assert_fail@plt+0x10eb0>
   22338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2233c:	bl	1138c <strlen@plt>
   22340:	str	r0, [fp, #-36]	; 0xffffffdc
   22344:	b	22348 <__assert_fail@plt+0x10eb4>
   22348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2234c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22350:	ldr	r2, [fp, #-72]	; 0xffffffb8
   22354:	add	r1, r1, r2
   22358:	add	r1, r0, r1
   2235c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22360:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22364:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22368:	add	r2, r2, r3
   2236c:	sub	r2, r0, r2
   22370:	add	r0, sp, #88	; 0x58
   22374:	sub	r3, fp, #84	; 0x54
   22378:	bl	41610 <__assert_fail@plt+0x3017c>
   2237c:	str	r0, [sp, #84]	; 0x54
   22380:	ldr	r0, [sp, #84]	; 0x54
   22384:	cmp	r0, #0
   22388:	bne	22390 <__assert_fail@plt+0x10efc>
   2238c:	b	22590 <__assert_fail@plt+0x110fc>
   22390:	ldr	r0, [sp, #84]	; 0x54
   22394:	cmn	r0, #1
   22398:	bne	223a8 <__assert_fail@plt+0x10f14>
   2239c:	movw	r0, #0
   223a0:	strb	r0, [fp, #-73]	; 0xffffffb7
   223a4:	b	22590 <__assert_fail@plt+0x110fc>
   223a8:	ldr	r0, [sp, #84]	; 0x54
   223ac:	cmn	r0, #2
   223b0:	bne	22424 <__assert_fail@plt+0x10f90>
   223b4:	movw	r0, #0
   223b8:	strb	r0, [fp, #-73]	; 0xffffffb7
   223bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   223c0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   223c4:	add	r0, r0, r1
   223c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   223cc:	cmp	r0, r1
   223d0:	movw	r0, #0
   223d4:	str	r0, [sp, #24]
   223d8:	bcs	22404 <__assert_fail@plt+0x10f70>
   223dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   223e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   223e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   223e8:	add	r1, r1, r2
   223ec:	add	r0, r0, r1
   223f0:	ldrb	r0, [r0]
   223f4:	cmp	r0, #0
   223f8:	movw	r0, #0
   223fc:	movne	r0, #1
   22400:	str	r0, [sp, #24]
   22404:	ldr	r0, [sp, #24]
   22408:	tst	r0, #1
   2240c:	beq	22420 <__assert_fail@plt+0x10f8c>
   22410:	ldr	r0, [fp, #-72]	; 0xffffffb8
   22414:	add	r0, r0, #1
   22418:	str	r0, [fp, #-72]	; 0xffffffb8
   2241c:	b	223bc <__assert_fail@plt+0x10f28>
   22420:	b	22590 <__assert_fail@plt+0x110fc>
   22424:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22428:	tst	r0, #1
   2242c:	beq	22538 <__assert_fail@plt+0x110a4>
   22430:	ldr	r0, [fp, #8]
   22434:	cmp	r0, #2
   22438:	bne	22538 <__assert_fail@plt+0x110a4>
   2243c:	movw	r0, #1
   22440:	str	r0, [sp, #80]	; 0x50
   22444:	ldr	r0, [sp, #80]	; 0x50
   22448:	ldr	r1, [sp, #84]	; 0x54
   2244c:	cmp	r0, r1
   22450:	bcs	22534 <__assert_fail@plt+0x110a0>
   22454:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22458:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2245c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   22460:	add	r1, r1, r2
   22464:	ldr	r2, [sp, #80]	; 0x50
   22468:	add	r1, r1, r2
   2246c:	ldrb	r0, [r0, r1]
   22470:	sub	r0, r0, #91	; 0x5b
   22474:	cmp	r0, #33	; 0x21
   22478:	str	r0, [sp, #20]
   2247c:	bhi	2251c <__assert_fail@plt+0x11088>
   22480:	add	r0, pc, #8
   22484:	ldr	r1, [sp, #20]
   22488:	ldr	r0, [r0, r1, lsl #2]
   2248c:	mov	pc, r0
   22490:	andeq	r2, r2, r8, lsl r5
   22494:	andeq	r2, r2, r8, lsl r5
   22498:	andeq	r2, r2, ip, lsl r5
   2249c:	andeq	r2, r2, r8, lsl r5
   224a0:	andeq	r2, r2, ip, lsl r5
   224a4:	andeq	r2, r2, r8, lsl r5
   224a8:	andeq	r2, r2, ip, lsl r5
   224ac:	andeq	r2, r2, ip, lsl r5
   224b0:	andeq	r2, r2, ip, lsl r5
   224b4:	andeq	r2, r2, ip, lsl r5
   224b8:	andeq	r2, r2, ip, lsl r5
   224bc:	andeq	r2, r2, ip, lsl r5
   224c0:	andeq	r2, r2, ip, lsl r5
   224c4:	andeq	r2, r2, ip, lsl r5
   224c8:	andeq	r2, r2, ip, lsl r5
   224cc:	andeq	r2, r2, ip, lsl r5
   224d0:	andeq	r2, r2, ip, lsl r5
   224d4:	andeq	r2, r2, ip, lsl r5
   224d8:	andeq	r2, r2, ip, lsl r5
   224dc:	andeq	r2, r2, ip, lsl r5
   224e0:	andeq	r2, r2, ip, lsl r5
   224e4:	andeq	r2, r2, ip, lsl r5
   224e8:	andeq	r2, r2, ip, lsl r5
   224ec:	andeq	r2, r2, ip, lsl r5
   224f0:	andeq	r2, r2, ip, lsl r5
   224f4:	andeq	r2, r2, ip, lsl r5
   224f8:	andeq	r2, r2, ip, lsl r5
   224fc:	andeq	r2, r2, ip, lsl r5
   22500:	andeq	r2, r2, ip, lsl r5
   22504:	andeq	r2, r2, ip, lsl r5
   22508:	andeq	r2, r2, ip, lsl r5
   2250c:	andeq	r2, r2, ip, lsl r5
   22510:	andeq	r2, r2, ip, lsl r5
   22514:	andeq	r2, r2, r8, lsl r5
   22518:	b	22cd4 <__assert_fail@plt+0x11840>
   2251c:	b	22520 <__assert_fail@plt+0x1108c>
   22520:	b	22524 <__assert_fail@plt+0x11090>
   22524:	ldr	r0, [sp, #80]	; 0x50
   22528:	add	r0, r0, #1
   2252c:	str	r0, [sp, #80]	; 0x50
   22530:	b	22444 <__assert_fail@plt+0x10fb0>
   22534:	b	22538 <__assert_fail@plt+0x110a4>
   22538:	ldr	r0, [sp, #88]	; 0x58
   2253c:	bl	112b4 <iswprint@plt>
   22540:	cmp	r0, #0
   22544:	bne	22550 <__assert_fail@plt+0x110bc>
   22548:	movw	r0, #0
   2254c:	strb	r0, [fp, #-73]	; 0xffffffb7
   22550:	ldr	r0, [sp, #84]	; 0x54
   22554:	ldr	r1, [fp, #-72]	; 0xffffffb8
   22558:	add	r0, r1, r0
   2255c:	str	r0, [fp, #-72]	; 0xffffffb8
   22560:	b	22564 <__assert_fail@plt+0x110d0>
   22564:	b	22568 <__assert_fail@plt+0x110d4>
   22568:	b	2256c <__assert_fail@plt+0x110d8>
   2256c:	sub	r0, fp, #84	; 0x54
   22570:	bl	11278 <mbsinit@plt>
   22574:	cmp	r0, #0
   22578:	movw	r0, #0
   2257c:	movne	r0, #1
   22580:	mvn	r1, #0
   22584:	eor	r0, r0, r1
   22588:	tst	r0, #1
   2258c:	bne	22348 <__assert_fail@plt+0x10eb4>
   22590:	b	22594 <__assert_fail@plt+0x11100>
   22594:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   22598:	and	r0, r0, #1
   2259c:	strb	r0, [fp, #-67]	; 0xffffffbd
   225a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   225a4:	movw	r1, #1
   225a8:	cmp	r1, r0
   225ac:	bcc	225c8 <__assert_fail@plt+0x11134>
   225b0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   225b4:	tst	r0, #1
   225b8:	beq	228dc <__assert_fail@plt+0x11448>
   225bc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   225c0:	tst	r0, #1
   225c4:	bne	228dc <__assert_fail@plt+0x11448>
   225c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   225cc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   225d0:	add	r0, r0, r1
   225d4:	str	r0, [sp, #76]	; 0x4c
   225d8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   225dc:	tst	r0, #1
   225e0:	beq	22790 <__assert_fail@plt+0x112fc>
   225e4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   225e8:	tst	r0, #1
   225ec:	bne	22790 <__assert_fail@plt+0x112fc>
   225f0:	b	225f4 <__assert_fail@plt+0x11160>
   225f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   225f8:	tst	r0, #1
   225fc:	beq	22604 <__assert_fail@plt+0x11170>
   22600:	b	22cd4 <__assert_fail@plt+0x11840>
   22604:	movw	r0, #1
   22608:	strb	r0, [fp, #-66]	; 0xffffffbe
   2260c:	ldr	r0, [fp, #8]
   22610:	cmp	r0, #2
   22614:	bne	226c8 <__assert_fail@plt+0x11234>
   22618:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2261c:	tst	r0, #1
   22620:	bne	226c8 <__assert_fail@plt+0x11234>
   22624:	b	22628 <__assert_fail@plt+0x11194>
   22628:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2262c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22630:	cmp	r0, r1
   22634:	bcs	2264c <__assert_fail@plt+0x111b8>
   22638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2263c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22640:	add	r0, r0, r1
   22644:	movw	r1, #39	; 0x27
   22648:	strb	r1, [r0]
   2264c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22650:	add	r0, r0, #1
   22654:	str	r0, [fp, #-44]	; 0xffffffd4
   22658:	b	2265c <__assert_fail@plt+0x111c8>
   2265c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22664:	cmp	r0, r1
   22668:	bcs	22680 <__assert_fail@plt+0x111ec>
   2266c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22670:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22674:	add	r0, r0, r1
   22678:	movw	r1, #36	; 0x24
   2267c:	strb	r1, [r0]
   22680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22684:	add	r0, r0, #1
   22688:	str	r0, [fp, #-44]	; 0xffffffd4
   2268c:	b	22690 <__assert_fail@plt+0x111fc>
   22690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22694:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22698:	cmp	r0, r1
   2269c:	bcs	226b4 <__assert_fail@plt+0x11220>
   226a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   226a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   226a8:	add	r0, r0, r1
   226ac:	movw	r1, #39	; 0x27
   226b0:	strb	r1, [r0]
   226b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   226b8:	add	r0, r0, #1
   226bc:	str	r0, [fp, #-44]	; 0xffffffd4
   226c0:	movw	r0, #1
   226c4:	strb	r0, [fp, #-60]	; 0xffffffc4
   226c8:	b	226cc <__assert_fail@plt+0x11238>
   226cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   226d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   226d4:	cmp	r0, r1
   226d8:	bcs	226f0 <__assert_fail@plt+0x1125c>
   226dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   226e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   226e4:	add	r0, r0, r1
   226e8:	movw	r1, #92	; 0x5c
   226ec:	strb	r1, [r0]
   226f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   226f4:	add	r0, r0, #1
   226f8:	str	r0, [fp, #-44]	; 0xffffffd4
   226fc:	b	22700 <__assert_fail@plt+0x1126c>
   22700:	b	22704 <__assert_fail@plt+0x11270>
   22704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2270c:	cmp	r0, r1
   22710:	bcs	22730 <__assert_fail@plt+0x1129c>
   22714:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   22718:	asr	r0, r0, #6
   2271c:	add	r0, r0, #48	; 0x30
   22720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22724:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22728:	add	r1, r1, r2
   2272c:	strb	r0, [r1]
   22730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22734:	add	r0, r0, #1
   22738:	str	r0, [fp, #-44]	; 0xffffffd4
   2273c:	b	22740 <__assert_fail@plt+0x112ac>
   22740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22748:	cmp	r0, r1
   2274c:	bcs	22770 <__assert_fail@plt+0x112dc>
   22750:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   22754:	asr	r0, r0, #3
   22758:	and	r0, r0, #7
   2275c:	add	r0, r0, #48	; 0x30
   22760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22764:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22768:	add	r1, r1, r2
   2276c:	strb	r0, [r1]
   22770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22774:	add	r0, r0, #1
   22778:	str	r0, [fp, #-44]	; 0xffffffd4
   2277c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   22780:	and	r0, r0, #7
   22784:	add	r0, r0, #48	; 0x30
   22788:	strb	r0, [fp, #-63]	; 0xffffffc1
   2278c:	b	227dc <__assert_fail@plt+0x11348>
   22790:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   22794:	tst	r0, #1
   22798:	beq	227d8 <__assert_fail@plt+0x11344>
   2279c:	b	227a0 <__assert_fail@plt+0x1130c>
   227a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   227a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   227a8:	cmp	r0, r1
   227ac:	bcs	227c4 <__assert_fail@plt+0x11330>
   227b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   227b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   227b8:	add	r0, r0, r1
   227bc:	movw	r1, #92	; 0x5c
   227c0:	strb	r1, [r0]
   227c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   227c8:	add	r0, r0, #1
   227cc:	str	r0, [fp, #-44]	; 0xffffffd4
   227d0:	movw	r0, #0
   227d4:	strb	r0, [fp, #-65]	; 0xffffffbf
   227d8:	b	227dc <__assert_fail@plt+0x11348>
   227dc:	ldr	r0, [sp, #76]	; 0x4c
   227e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   227e4:	add	r1, r1, #1
   227e8:	cmp	r0, r1
   227ec:	bhi	227f4 <__assert_fail@plt+0x11360>
   227f0:	b	228d8 <__assert_fail@plt+0x11444>
   227f4:	b	227f8 <__assert_fail@plt+0x11364>
   227f8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   227fc:	tst	r0, #1
   22800:	beq	22880 <__assert_fail@plt+0x113ec>
   22804:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   22808:	tst	r0, #1
   2280c:	bne	22880 <__assert_fail@plt+0x113ec>
   22810:	b	22814 <__assert_fail@plt+0x11380>
   22814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22818:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2281c:	cmp	r0, r1
   22820:	bcs	22838 <__assert_fail@plt+0x113a4>
   22824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22828:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2282c:	add	r0, r0, r1
   22830:	movw	r1, #39	; 0x27
   22834:	strb	r1, [r0]
   22838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2283c:	add	r0, r0, #1
   22840:	str	r0, [fp, #-44]	; 0xffffffd4
   22844:	b	22848 <__assert_fail@plt+0x113b4>
   22848:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2284c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22850:	cmp	r0, r1
   22854:	bcs	2286c <__assert_fail@plt+0x113d8>
   22858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2285c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22860:	add	r0, r0, r1
   22864:	movw	r1, #39	; 0x27
   22868:	strb	r1, [r0]
   2286c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22870:	add	r0, r0, #1
   22874:	str	r0, [fp, #-44]	; 0xffffffd4
   22878:	movw	r0, #0
   2287c:	strb	r0, [fp, #-60]	; 0xffffffc4
   22880:	b	22884 <__assert_fail@plt+0x113f0>
   22884:	b	22888 <__assert_fail@plt+0x113f4>
   22888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2288c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22890:	cmp	r0, r1
   22894:	bcs	228ac <__assert_fail@plt+0x11418>
   22898:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2289c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   228a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   228a4:	add	r1, r1, r2
   228a8:	strb	r0, [r1]
   228ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   228b0:	add	r0, r0, #1
   228b4:	str	r0, [fp, #-44]	; 0xffffffd4
   228b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   228bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   228c0:	add	r1, r1, #1
   228c4:	str	r1, [fp, #-40]	; 0xffffffd8
   228c8:	add	r0, r0, r1
   228cc:	ldrb	r0, [r0]
   228d0:	strb	r0, [fp, #-63]	; 0xffffffc1
   228d4:	b	225d8 <__assert_fail@plt+0x11144>
   228d8:	b	22a68 <__assert_fail@plt+0x115d4>
   228dc:	b	228e0 <__assert_fail@plt+0x1144c>
   228e0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   228e4:	tst	r0, #1
   228e8:	beq	228f8 <__assert_fail@plt+0x11464>
   228ec:	ldr	r0, [fp, #8]
   228f0:	cmp	r0, #2
   228f4:	bne	22904 <__assert_fail@plt+0x11470>
   228f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   228fc:	tst	r0, #1
   22900:	beq	22940 <__assert_fail@plt+0x114ac>
   22904:	ldr	r0, [fp, #16]
   22908:	movw	r1, #0
   2290c:	cmp	r0, r1
   22910:	beq	22940 <__assert_fail@plt+0x114ac>
   22914:	ldr	r0, [fp, #16]
   22918:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   2291c:	lsr	r1, r1, #5
   22920:	add	r0, r0, r1, lsl #2
   22924:	ldr	r0, [r0]
   22928:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   2292c:	and	r1, r1, #31
   22930:	lsr	r0, r0, r1
   22934:	and	r0, r0, #1
   22938:	cmp	r0, #0
   2293c:	bne	22950 <__assert_fail@plt+0x114bc>
   22940:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   22944:	tst	r0, #1
   22948:	bne	22950 <__assert_fail@plt+0x114bc>
   2294c:	b	22a68 <__assert_fail@plt+0x115d4>
   22950:	b	22954 <__assert_fail@plt+0x114c0>
   22954:	b	22958 <__assert_fail@plt+0x114c4>
   22958:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2295c:	tst	r0, #1
   22960:	beq	22968 <__assert_fail@plt+0x114d4>
   22964:	b	22cd4 <__assert_fail@plt+0x11840>
   22968:	movw	r0, #1
   2296c:	strb	r0, [fp, #-66]	; 0xffffffbe
   22970:	ldr	r0, [fp, #8]
   22974:	cmp	r0, #2
   22978:	bne	22a2c <__assert_fail@plt+0x11598>
   2297c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   22980:	tst	r0, #1
   22984:	bne	22a2c <__assert_fail@plt+0x11598>
   22988:	b	2298c <__assert_fail@plt+0x114f8>
   2298c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22994:	cmp	r0, r1
   22998:	bcs	229b0 <__assert_fail@plt+0x1151c>
   2299c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   229a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   229a4:	add	r0, r0, r1
   229a8:	movw	r1, #39	; 0x27
   229ac:	strb	r1, [r0]
   229b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   229b4:	add	r0, r0, #1
   229b8:	str	r0, [fp, #-44]	; 0xffffffd4
   229bc:	b	229c0 <__assert_fail@plt+0x1152c>
   229c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   229c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   229c8:	cmp	r0, r1
   229cc:	bcs	229e4 <__assert_fail@plt+0x11550>
   229d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   229d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   229d8:	add	r0, r0, r1
   229dc:	movw	r1, #36	; 0x24
   229e0:	strb	r1, [r0]
   229e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   229e8:	add	r0, r0, #1
   229ec:	str	r0, [fp, #-44]	; 0xffffffd4
   229f0:	b	229f4 <__assert_fail@plt+0x11560>
   229f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   229f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   229fc:	cmp	r0, r1
   22a00:	bcs	22a18 <__assert_fail@plt+0x11584>
   22a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22a0c:	add	r0, r0, r1
   22a10:	movw	r1, #39	; 0x27
   22a14:	strb	r1, [r0]
   22a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a1c:	add	r0, r0, #1
   22a20:	str	r0, [fp, #-44]	; 0xffffffd4
   22a24:	movw	r0, #1
   22a28:	strb	r0, [fp, #-60]	; 0xffffffc4
   22a2c:	b	22a30 <__assert_fail@plt+0x1159c>
   22a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a38:	cmp	r0, r1
   22a3c:	bcs	22a54 <__assert_fail@plt+0x115c0>
   22a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22a48:	add	r0, r0, r1
   22a4c:	movw	r1, #92	; 0x5c
   22a50:	strb	r1, [r0]
   22a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a58:	add	r0, r0, #1
   22a5c:	str	r0, [fp, #-44]	; 0xffffffd4
   22a60:	b	22a64 <__assert_fail@plt+0x115d0>
   22a64:	b	22a68 <__assert_fail@plt+0x115d4>
   22a68:	b	22a6c <__assert_fail@plt+0x115d8>
   22a6c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   22a70:	tst	r0, #1
   22a74:	beq	22af4 <__assert_fail@plt+0x11660>
   22a78:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   22a7c:	tst	r0, #1
   22a80:	bne	22af4 <__assert_fail@plt+0x11660>
   22a84:	b	22a88 <__assert_fail@plt+0x115f4>
   22a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22a8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a90:	cmp	r0, r1
   22a94:	bcs	22aac <__assert_fail@plt+0x11618>
   22a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22aa0:	add	r0, r0, r1
   22aa4:	movw	r1, #39	; 0x27
   22aa8:	strb	r1, [r0]
   22aac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ab0:	add	r0, r0, #1
   22ab4:	str	r0, [fp, #-44]	; 0xffffffd4
   22ab8:	b	22abc <__assert_fail@plt+0x11628>
   22abc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ac4:	cmp	r0, r1
   22ac8:	bcs	22ae0 <__assert_fail@plt+0x1164c>
   22acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22ad0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22ad4:	add	r0, r0, r1
   22ad8:	movw	r1, #39	; 0x27
   22adc:	strb	r1, [r0]
   22ae0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ae4:	add	r0, r0, #1
   22ae8:	str	r0, [fp, #-44]	; 0xffffffd4
   22aec:	movw	r0, #0
   22af0:	strb	r0, [fp, #-60]	; 0xffffffc4
   22af4:	b	22af8 <__assert_fail@plt+0x11664>
   22af8:	b	22afc <__assert_fail@plt+0x11668>
   22afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b04:	cmp	r0, r1
   22b08:	bcs	22b20 <__assert_fail@plt+0x1168c>
   22b0c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   22b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22b14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22b18:	add	r1, r1, r2
   22b1c:	strb	r0, [r1]
   22b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b24:	add	r0, r0, #1
   22b28:	str	r0, [fp, #-44]	; 0xffffffd4
   22b2c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   22b30:	tst	r0, #1
   22b34:	bne	22b40 <__assert_fail@plt+0x116ac>
   22b38:	movw	r0, #0
   22b3c:	strb	r0, [fp, #-62]	; 0xffffffc2
   22b40:	b	22b44 <__assert_fail@plt+0x116b0>
   22b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22b48:	add	r0, r0, #1
   22b4c:	str	r0, [fp, #-40]	; 0xffffffd8
   22b50:	b	218fc <__assert_fail@plt+0x10468>
   22b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b58:	cmp	r0, #0
   22b5c:	bne	22b7c <__assert_fail@plt+0x116e8>
   22b60:	ldr	r0, [fp, #8]
   22b64:	cmp	r0, #2
   22b68:	bne	22b7c <__assert_fail@plt+0x116e8>
   22b6c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22b70:	tst	r0, #1
   22b74:	beq	22b7c <__assert_fail@plt+0x116e8>
   22b78:	b	22cd4 <__assert_fail@plt+0x11840>
   22b7c:	ldr	r0, [fp, #8]
   22b80:	cmp	r0, #2
   22b84:	bne	22c24 <__assert_fail@plt+0x11790>
   22b88:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22b8c:	tst	r0, #1
   22b90:	bne	22c24 <__assert_fail@plt+0x11790>
   22b94:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   22b98:	tst	r0, #1
   22b9c:	beq	22c24 <__assert_fail@plt+0x11790>
   22ba0:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   22ba4:	tst	r0, #1
   22ba8:	beq	22bf0 <__assert_fail@plt+0x1175c>
   22bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22bb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22bb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22bb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22bbc:	ldr	ip, [fp, #12]
   22bc0:	ldr	lr, [fp, #16]
   22bc4:	ldr	r4, [fp, #20]
   22bc8:	ldr	r5, [fp, #24]
   22bcc:	movw	r6, #5
   22bd0:	str	r6, [sp]
   22bd4:	str	ip, [sp, #4]
   22bd8:	str	lr, [sp, #8]
   22bdc:	str	r4, [sp, #12]
   22be0:	str	r5, [sp, #16]
   22be4:	bl	21614 <__assert_fail@plt+0x10180>
   22be8:	str	r0, [fp, #-20]	; 0xffffffec
   22bec:	b	22d3c <__assert_fail@plt+0x118a8>
   22bf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22bf4:	cmp	r0, #0
   22bf8:	bne	22c1c <__assert_fail@plt+0x11788>
   22bfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22c00:	cmp	r0, #0
   22c04:	beq	22c1c <__assert_fail@plt+0x11788>
   22c08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22c0c:	str	r0, [fp, #-28]	; 0xffffffe4
   22c10:	movw	r0, #0
   22c14:	str	r0, [fp, #-44]	; 0xffffffd4
   22c18:	b	216bc <__assert_fail@plt+0x10228>
   22c1c:	b	22c20 <__assert_fail@plt+0x1178c>
   22c20:	b	22c24 <__assert_fail@plt+0x11790>
   22c24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22c28:	movw	r1, #0
   22c2c:	cmp	r0, r1
   22c30:	beq	22ca4 <__assert_fail@plt+0x11810>
   22c34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   22c38:	tst	r0, #1
   22c3c:	bne	22ca4 <__assert_fail@plt+0x11810>
   22c40:	b	22c44 <__assert_fail@plt+0x117b0>
   22c44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22c48:	ldrsb	r0, [r0]
   22c4c:	cmp	r0, #0
   22c50:	beq	22ca0 <__assert_fail@plt+0x1180c>
   22c54:	b	22c58 <__assert_fail@plt+0x117c4>
   22c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22c5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22c60:	cmp	r0, r1
   22c64:	bcs	22c80 <__assert_fail@plt+0x117ec>
   22c68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22c6c:	ldrb	r0, [r0]
   22c70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22c74:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22c78:	add	r1, r1, r2
   22c7c:	strb	r0, [r1]
   22c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22c84:	add	r0, r0, #1
   22c88:	str	r0, [fp, #-44]	; 0xffffffd4
   22c8c:	b	22c90 <__assert_fail@plt+0x117fc>
   22c90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22c94:	add	r0, r0, #1
   22c98:	str	r0, [fp, #-52]	; 0xffffffcc
   22c9c:	b	22c44 <__assert_fail@plt+0x117b0>
   22ca0:	b	22ca4 <__assert_fail@plt+0x11810>
   22ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ca8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22cac:	cmp	r0, r1
   22cb0:	bcs	22cc8 <__assert_fail@plt+0x11834>
   22cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22cb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22cbc:	add	r0, r0, r1
   22cc0:	movw	r1, #0
   22cc4:	strb	r1, [r0]
   22cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22ccc:	str	r0, [fp, #-20]	; 0xffffffec
   22cd0:	b	22d3c <__assert_fail@plt+0x118a8>
   22cd4:	ldr	r0, [fp, #8]
   22cd8:	cmp	r0, #2
   22cdc:	bne	22cf4 <__assert_fail@plt+0x11860>
   22ce0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   22ce4:	tst	r0, #1
   22ce8:	beq	22cf4 <__assert_fail@plt+0x11860>
   22cec:	movw	r0, #4
   22cf0:	str	r0, [fp, #8]
   22cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22cfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22d00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22d04:	ldr	ip, [fp, #8]
   22d08:	ldr	lr, [fp, #12]
   22d0c:	mvn	r4, #2
   22d10:	and	lr, lr, r4
   22d14:	ldr	r4, [fp, #20]
   22d18:	ldr	r5, [fp, #24]
   22d1c:	str	ip, [sp]
   22d20:	str	lr, [sp, #4]
   22d24:	movw	ip, #0
   22d28:	str	ip, [sp, #8]
   22d2c:	str	r4, [sp, #12]
   22d30:	str	r5, [sp, #16]
   22d34:	bl	21614 <__assert_fail@plt+0x10180>
   22d38:	str	r0, [fp, #-20]	; 0xffffffec
   22d3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22d40:	sub	sp, fp, #16
   22d44:	pop	{r4, r5, r6, sl, fp, pc}
   22d48:	push	{fp, lr}
   22d4c:	mov	fp, sp
   22d50:	sub	sp, sp, #16
   22d54:	str	r0, [fp, #-4]
   22d58:	str	r1, [sp, #8]
   22d5c:	str	r2, [sp, #4]
   22d60:	ldr	r0, [fp, #-4]
   22d64:	ldr	r1, [sp, #8]
   22d68:	ldr	r3, [sp, #4]
   22d6c:	movw	r2, #0
   22d70:	bl	22d7c <__assert_fail@plt+0x118e8>
   22d74:	mov	sp, fp
   22d78:	pop	{fp, pc}
   22d7c:	push	{r4, r5, r6, sl, fp, lr}
   22d80:	add	fp, sp, #16
   22d84:	sub	sp, sp, #80	; 0x50
   22d88:	str	r0, [fp, #-20]	; 0xffffffec
   22d8c:	str	r1, [fp, #-24]	; 0xffffffe8
   22d90:	str	r2, [fp, #-28]	; 0xffffffe4
   22d94:	str	r3, [fp, #-32]	; 0xffffffe0
   22d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d9c:	movw	r1, #0
   22da0:	cmp	r0, r1
   22da4:	beq	22db4 <__assert_fail@plt+0x11920>
   22da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22dac:	str	r0, [sp, #40]	; 0x28
   22db0:	b	22dc4 <__assert_fail@plt+0x11930>
   22db4:	movw	r0, #25000	; 0x61a8
   22db8:	movt	r0, #5
   22dbc:	str	r0, [sp, #40]	; 0x28
   22dc0:	b	22dc4 <__assert_fail@plt+0x11930>
   22dc4:	ldr	r0, [sp, #40]	; 0x28
   22dc8:	str	r0, [fp, #-36]	; 0xffffffdc
   22dcc:	bl	113b0 <__errno_location@plt>
   22dd0:	ldr	r0, [r0]
   22dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   22dd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22ddc:	ldr	r0, [r0, #4]
   22de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22de4:	movw	r2, #0
   22de8:	cmp	r1, r2
   22dec:	movw	r1, #0
   22df0:	movne	r1, #1
   22df4:	tst	r1, #1
   22df8:	mov	r1, r2
   22dfc:	moveq	r1, #1
   22e00:	orr	r0, r0, r1
   22e04:	str	r0, [fp, #-44]	; 0xffffffd4
   22e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22e10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22e14:	ldr	r1, [r1]
   22e18:	ldr	ip, [fp, #-44]	; 0xffffffd4
   22e1c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   22e20:	add	lr, lr, #8
   22e24:	ldr	r4, [fp, #-36]	; 0xffffffdc
   22e28:	ldr	r4, [r4, #40]	; 0x28
   22e2c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   22e30:	ldr	r5, [r5, #44]	; 0x2c
   22e34:	str	r0, [sp, #36]	; 0x24
   22e38:	mov	r0, r2
   22e3c:	str	r1, [sp, #32]
   22e40:	mov	r1, r2
   22e44:	ldr	r2, [sp, #36]	; 0x24
   22e48:	ldr	r6, [sp, #32]
   22e4c:	str	r6, [sp]
   22e50:	str	ip, [sp, #4]
   22e54:	str	lr, [sp, #8]
   22e58:	str	r4, [sp, #12]
   22e5c:	str	r5, [sp, #16]
   22e60:	bl	21614 <__assert_fail@plt+0x10180>
   22e64:	add	r0, r0, #1
   22e68:	str	r0, [sp, #48]	; 0x30
   22e6c:	ldr	r0, [sp, #48]	; 0x30
   22e70:	bl	3cb5c <__assert_fail@plt+0x2b6c8>
   22e74:	str	r0, [sp, #44]	; 0x2c
   22e78:	ldr	r0, [sp, #44]	; 0x2c
   22e7c:	ldr	r1, [sp, #48]	; 0x30
   22e80:	ldr	r2, [fp, #-20]	; 0xffffffec
   22e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22e88:	ldr	ip, [fp, #-36]	; 0xffffffdc
   22e8c:	ldr	ip, [ip]
   22e90:	ldr	lr, [fp, #-44]	; 0xffffffd4
   22e94:	ldr	r4, [fp, #-36]	; 0xffffffdc
   22e98:	add	r4, r4, #8
   22e9c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   22ea0:	ldr	r5, [r5, #40]	; 0x28
   22ea4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   22ea8:	ldr	r6, [r6, #44]	; 0x2c
   22eac:	str	ip, [sp]
   22eb0:	str	lr, [sp, #4]
   22eb4:	str	r4, [sp, #8]
   22eb8:	str	r5, [sp, #12]
   22ebc:	str	r6, [sp, #16]
   22ec0:	bl	21614 <__assert_fail@plt+0x10180>
   22ec4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22ec8:	str	r0, [sp, #28]
   22ecc:	str	r1, [sp, #24]
   22ed0:	bl	113b0 <__errno_location@plt>
   22ed4:	ldr	r1, [sp, #24]
   22ed8:	str	r1, [r0]
   22edc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22ee0:	movw	r2, #0
   22ee4:	cmp	r0, r2
   22ee8:	beq	22efc <__assert_fail@plt+0x11a68>
   22eec:	ldr	r0, [sp, #48]	; 0x30
   22ef0:	sub	r0, r0, #1
   22ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ef8:	str	r0, [r1]
   22efc:	ldr	r0, [sp, #44]	; 0x2c
   22f00:	sub	sp, fp, #16
   22f04:	pop	{r4, r5, r6, sl, fp, pc}
   22f08:	push	{fp, lr}
   22f0c:	mov	fp, sp
   22f10:	sub	sp, sp, #8
   22f14:	movw	r0, #24884	; 0x6134
   22f18:	movt	r0, #5
   22f1c:	ldr	r0, [r0]
   22f20:	str	r0, [sp, #4]
   22f24:	movw	r0, #1
   22f28:	str	r0, [sp]
   22f2c:	ldr	r0, [sp]
   22f30:	movw	r1, #24888	; 0x6138
   22f34:	movt	r1, #5
   22f38:	ldr	r1, [r1]
   22f3c:	cmp	r0, r1
   22f40:	bge	22f68 <__assert_fail@plt+0x11ad4>
   22f44:	ldr	r0, [sp, #4]
   22f48:	ldr	r1, [sp]
   22f4c:	add	r0, r0, r1, lsl #3
   22f50:	ldr	r0, [r0, #4]
   22f54:	bl	1388c <__assert_fail@plt+0x23f8>
   22f58:	ldr	r0, [sp]
   22f5c:	add	r0, r0, #1
   22f60:	str	r0, [sp]
   22f64:	b	22f2c <__assert_fail@plt+0x11a98>
   22f68:	ldr	r0, [sp, #4]
   22f6c:	ldr	r0, [r0, #4]
   22f70:	movw	r1, #25048	; 0x61d8
   22f74:	movt	r1, #5
   22f78:	cmp	r0, r1
   22f7c:	beq	22fa8 <__assert_fail@plt+0x11b14>
   22f80:	ldr	r0, [sp, #4]
   22f84:	ldr	r0, [r0, #4]
   22f88:	bl	1388c <__assert_fail@plt+0x23f8>
   22f8c:	movw	r0, #256	; 0x100
   22f90:	movw	r1, #24892	; 0x613c
   22f94:	movt	r1, #5
   22f98:	str	r0, [r1]
   22f9c:	movw	r0, #25048	; 0x61d8
   22fa0:	movt	r0, #5
   22fa4:	str	r0, [r1, #4]
   22fa8:	ldr	r0, [sp, #4]
   22fac:	movw	r1, #24892	; 0x613c
   22fb0:	movt	r1, #5
   22fb4:	cmp	r0, r1
   22fb8:	beq	22fd8 <__assert_fail@plt+0x11b44>
   22fbc:	ldr	r0, [sp, #4]
   22fc0:	bl	1388c <__assert_fail@plt+0x23f8>
   22fc4:	movw	r0, #24884	; 0x6134
   22fc8:	movt	r0, #5
   22fcc:	movw	r1, #24892	; 0x613c
   22fd0:	movt	r1, #5
   22fd4:	str	r1, [r0]
   22fd8:	movw	r0, #24888	; 0x6138
   22fdc:	movt	r0, #5
   22fe0:	movw	r1, #1
   22fe4:	str	r1, [r0]
   22fe8:	mov	sp, fp
   22fec:	pop	{fp, pc}
   22ff0:	push	{fp, lr}
   22ff4:	mov	fp, sp
   22ff8:	sub	sp, sp, #8
   22ffc:	str	r0, [sp, #4]
   23000:	str	r1, [sp]
   23004:	ldr	r0, [sp, #4]
   23008:	ldr	r1, [sp]
   2300c:	mvn	r2, #0
   23010:	movw	r3, #25000	; 0x61a8
   23014:	movt	r3, #5
   23018:	bl	23024 <__assert_fail@plt+0x11b90>
   2301c:	mov	sp, fp
   23020:	pop	{fp, pc}
   23024:	push	{r4, r5, r6, sl, fp, lr}
   23028:	add	fp, sp, #16
   2302c:	sub	sp, sp, #80	; 0x50
   23030:	str	r0, [fp, #-20]	; 0xffffffec
   23034:	str	r1, [fp, #-24]	; 0xffffffe8
   23038:	str	r2, [fp, #-28]	; 0xffffffe4
   2303c:	str	r3, [fp, #-32]	; 0xffffffe0
   23040:	bl	113b0 <__errno_location@plt>
   23044:	ldr	r1, [pc, #672]	; 232ec <__assert_fail@plt+0x11e58>
   23048:	ldr	r0, [r0]
   2304c:	str	r0, [fp, #-36]	; 0xffffffdc
   23050:	movw	r0, #24884	; 0x6134
   23054:	movt	r0, #5
   23058:	ldr	r0, [r0]
   2305c:	str	r0, [fp, #-40]	; 0xffffffd8
   23060:	str	r1, [fp, #-44]	; 0xffffffd4
   23064:	ldr	r0, [fp, #-20]	; 0xffffffec
   23068:	movw	r1, #0
   2306c:	cmp	r1, r0
   23070:	bgt	23084 <__assert_fail@plt+0x11bf0>
   23074:	ldr	r0, [fp, #-20]	; 0xffffffec
   23078:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2307c:	cmp	r0, r1
   23080:	blt	23088 <__assert_fail@plt+0x11bf4>
   23084:	bl	1147c <abort@plt>
   23088:	movw	r0, #24888	; 0x6138
   2308c:	movt	r0, #5
   23090:	ldr	r0, [r0]
   23094:	ldr	r1, [fp, #-20]	; 0xffffffec
   23098:	cmp	r0, r1
   2309c:	bgt	23194 <__assert_fail@plt+0x11d00>
   230a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   230a4:	movw	r1, #24892	; 0x613c
   230a8:	movt	r1, #5
   230ac:	cmp	r0, r1
   230b0:	movw	r0, #0
   230b4:	moveq	r0, #1
   230b8:	and	r0, r0, #1
   230bc:	strb	r0, [fp, #-45]	; 0xffffffd3
   230c0:	movw	r0, #24888	; 0x6138
   230c4:	movt	r0, #5
   230c8:	ldr	r0, [r0]
   230cc:	str	r0, [sp, #44]	; 0x2c
   230d0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   230d4:	tst	r0, #1
   230d8:	beq	230e8 <__assert_fail@plt+0x11c54>
   230dc:	movw	r0, #0
   230e0:	str	r0, [sp, #24]
   230e4:	b	230f0 <__assert_fail@plt+0x11c5c>
   230e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   230ec:	str	r0, [sp, #24]
   230f0:	ldr	r0, [sp, #24]
   230f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   230f8:	movw	r2, #24888	; 0x6138
   230fc:	movt	r2, #5
   23100:	ldr	r2, [r2]
   23104:	sub	r1, r1, r2
   23108:	add	r2, r1, #1
   2310c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23110:	add	r1, sp, #44	; 0x2c
   23114:	movw	ip, #8
   23118:	str	ip, [sp]
   2311c:	bl	3cd98 <__assert_fail@plt+0x2b904>
   23120:	str	r0, [fp, #-40]	; 0xffffffd8
   23124:	movw	r1, #24884	; 0x6134
   23128:	movt	r1, #5
   2312c:	str	r0, [r1]
   23130:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   23134:	tst	r0, #1
   23138:	beq	23158 <__assert_fail@plt+0x11cc4>
   2313c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23140:	movw	r1, #24892	; 0x613c
   23144:	movt	r1, #5
   23148:	ldr	r2, [r1]
   2314c:	str	r2, [r0]
   23150:	ldr	r1, [r1, #4]
   23154:	str	r1, [r0, #4]
   23158:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2315c:	movw	r1, #24888	; 0x6138
   23160:	movt	r1, #5
   23164:	ldr	r1, [r1]
   23168:	add	r0, r0, r1, lsl #3
   2316c:	ldr	r2, [sp, #44]	; 0x2c
   23170:	sub	r1, r2, r1
   23174:	lsl	r2, r1, #3
   23178:	movw	r1, #0
   2317c:	and	r1, r1, #255	; 0xff
   23180:	bl	113d4 <memset@plt>
   23184:	ldr	r0, [sp, #44]	; 0x2c
   23188:	movw	r1, #24888	; 0x6138
   2318c:	movt	r1, #5
   23190:	str	r0, [r1]
   23194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23198:	ldr	r1, [fp, #-20]	; 0xffffffec
   2319c:	ldr	r0, [r0, r1, lsl #3]
   231a0:	str	r0, [sp, #40]	; 0x28
   231a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   231a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   231ac:	add	r0, r0, r1, lsl #3
   231b0:	ldr	r0, [r0, #4]
   231b4:	str	r0, [sp, #36]	; 0x24
   231b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   231bc:	ldr	r0, [r0, #4]
   231c0:	orr	r0, r0, #1
   231c4:	str	r0, [sp, #32]
   231c8:	ldr	r0, [sp, #36]	; 0x24
   231cc:	ldr	r1, [sp, #40]	; 0x28
   231d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   231d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   231d8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   231dc:	ldr	ip, [ip]
   231e0:	ldr	lr, [sp, #32]
   231e4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   231e8:	add	r4, r4, #8
   231ec:	ldr	r5, [fp, #-32]	; 0xffffffe0
   231f0:	ldr	r5, [r5, #40]	; 0x28
   231f4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   231f8:	ldr	r6, [r6, #44]	; 0x2c
   231fc:	str	ip, [sp]
   23200:	str	lr, [sp, #4]
   23204:	str	r4, [sp, #8]
   23208:	str	r5, [sp, #12]
   2320c:	str	r6, [sp, #16]
   23210:	bl	21614 <__assert_fail@plt+0x10180>
   23214:	str	r0, [sp, #28]
   23218:	ldr	r0, [sp, #40]	; 0x28
   2321c:	ldr	r1, [sp, #28]
   23220:	cmp	r0, r1
   23224:	bhi	232cc <__assert_fail@plt+0x11e38>
   23228:	ldr	r0, [sp, #28]
   2322c:	add	r0, r0, #1
   23230:	str	r0, [sp, #40]	; 0x28
   23234:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23238:	ldr	r2, [fp, #-20]	; 0xffffffec
   2323c:	add	r1, r1, r2, lsl #3
   23240:	str	r0, [r1]
   23244:	ldr	r0, [sp, #36]	; 0x24
   23248:	movw	r1, #25048	; 0x61d8
   2324c:	movt	r1, #5
   23250:	cmp	r0, r1
   23254:	beq	23260 <__assert_fail@plt+0x11dcc>
   23258:	ldr	r0, [sp, #36]	; 0x24
   2325c:	bl	1388c <__assert_fail@plt+0x23f8>
   23260:	ldr	r0, [sp, #40]	; 0x28
   23264:	bl	3cb5c <__assert_fail@plt+0x2b6c8>
   23268:	mov	r1, r0
   2326c:	str	r0, [sp, #36]	; 0x24
   23270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23274:	ldr	r2, [fp, #-20]	; 0xffffffec
   23278:	add	r0, r0, r2, lsl #3
   2327c:	str	r1, [r0, #4]
   23280:	ldr	r0, [sp, #36]	; 0x24
   23284:	ldr	r1, [sp, #40]	; 0x28
   23288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2328c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23290:	ldr	ip, [fp, #-32]	; 0xffffffe0
   23294:	ldr	ip, [ip]
   23298:	ldr	lr, [sp, #32]
   2329c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   232a0:	add	r4, r4, #8
   232a4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   232a8:	ldr	r5, [r5, #40]	; 0x28
   232ac:	ldr	r6, [fp, #-32]	; 0xffffffe0
   232b0:	ldr	r6, [r6, #44]	; 0x2c
   232b4:	str	ip, [sp]
   232b8:	str	lr, [sp, #4]
   232bc:	str	r4, [sp, #8]
   232c0:	str	r5, [sp, #12]
   232c4:	str	r6, [sp, #16]
   232c8:	bl	21614 <__assert_fail@plt+0x10180>
   232cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   232d0:	str	r0, [sp, #20]
   232d4:	bl	113b0 <__errno_location@plt>
   232d8:	ldr	r1, [sp, #20]
   232dc:	str	r1, [r0]
   232e0:	ldr	r0, [sp, #36]	; 0x24
   232e4:	sub	sp, fp, #16
   232e8:	pop	{r4, r5, r6, sl, fp, pc}
   232ec:	svcvc	0x00ffffff
   232f0:	push	{fp, lr}
   232f4:	mov	fp, sp
   232f8:	sub	sp, sp, #16
   232fc:	str	r0, [fp, #-4]
   23300:	str	r1, [sp, #8]
   23304:	str	r2, [sp, #4]
   23308:	ldr	r0, [fp, #-4]
   2330c:	ldr	r1, [sp, #8]
   23310:	ldr	r2, [sp, #4]
   23314:	movw	r3, #25000	; 0x61a8
   23318:	movt	r3, #5
   2331c:	bl	23024 <__assert_fail@plt+0x11b90>
   23320:	mov	sp, fp
   23324:	pop	{fp, pc}
   23328:	push	{fp, lr}
   2332c:	mov	fp, sp
   23330:	sub	sp, sp, #8
   23334:	str	r0, [sp, #4]
   23338:	ldr	r1, [sp, #4]
   2333c:	movw	r0, #0
   23340:	bl	22ff0 <__assert_fail@plt+0x11b5c>
   23344:	mov	sp, fp
   23348:	pop	{fp, pc}
   2334c:	push	{fp, lr}
   23350:	mov	fp, sp
   23354:	sub	sp, sp, #8
   23358:	str	r0, [sp, #4]
   2335c:	str	r1, [sp]
   23360:	ldr	r1, [sp, #4]
   23364:	ldr	r2, [sp]
   23368:	movw	r0, #0
   2336c:	bl	232f0 <__assert_fail@plt+0x11e5c>
   23370:	mov	sp, fp
   23374:	pop	{fp, pc}
   23378:	push	{fp, lr}
   2337c:	mov	fp, sp
   23380:	sub	sp, sp, #64	; 0x40
   23384:	str	r0, [fp, #-4]
   23388:	str	r1, [fp, #-8]
   2338c:	str	r2, [fp, #-12]
   23390:	ldr	r1, [fp, #-8]
   23394:	add	r0, sp, #4
   23398:	bl	233b8 <__assert_fail@plt+0x11f24>
   2339c:	ldr	r0, [fp, #-4]
   233a0:	ldr	r1, [fp, #-12]
   233a4:	mvn	r2, #0
   233a8:	add	r3, sp, #4
   233ac:	bl	23024 <__assert_fail@plt+0x11b90>
   233b0:	mov	sp, fp
   233b4:	pop	{fp, pc}
   233b8:	push	{fp, lr}
   233bc:	mov	fp, sp
   233c0:	sub	sp, sp, #8
   233c4:	str	r1, [sp, #4]
   233c8:	mov	r1, r0
   233cc:	str	r0, [sp]
   233d0:	mov	r0, r1
   233d4:	movw	r1, #0
   233d8:	and	r1, r1, #255	; 0xff
   233dc:	movw	r2, #48	; 0x30
   233e0:	bl	113d4 <memset@plt>
   233e4:	ldr	r0, [sp, #4]
   233e8:	cmp	r0, #10
   233ec:	bne	233f4 <__assert_fail@plt+0x11f60>
   233f0:	bl	1147c <abort@plt>
   233f4:	ldr	r0, [sp, #4]
   233f8:	ldr	r1, [sp]
   233fc:	str	r0, [r1]
   23400:	mov	sp, fp
   23404:	pop	{fp, pc}
   23408:	push	{fp, lr}
   2340c:	mov	fp, sp
   23410:	sub	sp, sp, #64	; 0x40
   23414:	str	r0, [fp, #-4]
   23418:	str	r1, [fp, #-8]
   2341c:	str	r2, [fp, #-12]
   23420:	str	r3, [fp, #-16]
   23424:	ldr	r1, [fp, #-8]
   23428:	mov	r0, sp
   2342c:	bl	233b8 <__assert_fail@plt+0x11f24>
   23430:	ldr	r0, [fp, #-4]
   23434:	ldr	r1, [fp, #-12]
   23438:	ldr	r2, [fp, #-16]
   2343c:	mov	r3, sp
   23440:	bl	23024 <__assert_fail@plt+0x11b90>
   23444:	mov	sp, fp
   23448:	pop	{fp, pc}
   2344c:	push	{fp, lr}
   23450:	mov	fp, sp
   23454:	sub	sp, sp, #8
   23458:	str	r0, [sp, #4]
   2345c:	str	r1, [sp]
   23460:	ldr	r1, [sp, #4]
   23464:	ldr	r2, [sp]
   23468:	movw	r0, #0
   2346c:	bl	23378 <__assert_fail@plt+0x11ee4>
   23470:	mov	sp, fp
   23474:	pop	{fp, pc}
   23478:	push	{fp, lr}
   2347c:	mov	fp, sp
   23480:	sub	sp, sp, #16
   23484:	str	r0, [fp, #-4]
   23488:	str	r1, [sp, #8]
   2348c:	str	r2, [sp, #4]
   23490:	ldr	r1, [fp, #-4]
   23494:	ldr	r2, [sp, #8]
   23498:	ldr	r3, [sp, #4]
   2349c:	movw	r0, #0
   234a0:	bl	23408 <__assert_fail@plt+0x11f74>
   234a4:	mov	sp, fp
   234a8:	pop	{fp, pc}
   234ac:	push	{fp, lr}
   234b0:	mov	fp, sp
   234b4:	sub	sp, sp, #72	; 0x48
   234b8:	movw	r3, #25000	; 0x61a8
   234bc:	movt	r3, #5
   234c0:	str	r0, [fp, #-4]
   234c4:	str	r1, [fp, #-8]
   234c8:	strb	r2, [fp, #-9]
   234cc:	add	r0, sp, #12
   234d0:	mov	r1, r0
   234d4:	str	r0, [sp, #8]
   234d8:	mov	r0, r1
   234dc:	mov	r1, r3
   234e0:	movw	r2, #48	; 0x30
   234e4:	bl	11248 <memcpy@plt>
   234e8:	ldr	r0, [sp, #8]
   234ec:	ldrb	r1, [fp, #-9]
   234f0:	movw	r2, #1
   234f4:	bl	213bc <__assert_fail@plt+0xff28>
   234f8:	ldr	r1, [fp, #-4]
   234fc:	ldr	r2, [fp, #-8]
   23500:	movw	r3, #0
   23504:	str	r0, [sp, #4]
   23508:	mov	r0, r3
   2350c:	add	r3, sp, #12
   23510:	bl	23024 <__assert_fail@plt+0x11b90>
   23514:	mov	sp, fp
   23518:	pop	{fp, pc}
   2351c:	push	{fp, lr}
   23520:	mov	fp, sp
   23524:	sub	sp, sp, #8
   23528:	str	r0, [sp, #4]
   2352c:	strb	r1, [sp, #3]
   23530:	ldr	r0, [sp, #4]
   23534:	mvn	r1, #0
   23538:	ldrb	r2, [sp, #3]
   2353c:	bl	234ac <__assert_fail@plt+0x12018>
   23540:	mov	sp, fp
   23544:	pop	{fp, pc}
   23548:	push	{fp, lr}
   2354c:	mov	fp, sp
   23550:	sub	sp, sp, #8
   23554:	str	r0, [sp, #4]
   23558:	ldr	r0, [sp, #4]
   2355c:	movw	r1, #58	; 0x3a
   23560:	and	r1, r1, #255	; 0xff
   23564:	bl	2351c <__assert_fail@plt+0x12088>
   23568:	mov	sp, fp
   2356c:	pop	{fp, pc}
   23570:	push	{fp, lr}
   23574:	mov	fp, sp
   23578:	sub	sp, sp, #8
   2357c:	str	r0, [sp, #4]
   23580:	str	r1, [sp]
   23584:	ldr	r0, [sp, #4]
   23588:	ldr	r1, [sp]
   2358c:	movw	r2, #58	; 0x3a
   23590:	and	r2, r2, #255	; 0xff
   23594:	bl	234ac <__assert_fail@plt+0x12018>
   23598:	mov	sp, fp
   2359c:	pop	{fp, pc}
   235a0:	push	{fp, lr}
   235a4:	mov	fp, sp
   235a8:	sub	sp, sp, #120	; 0x78
   235ac:	str	r0, [fp, #-4]
   235b0:	str	r1, [fp, #-8]
   235b4:	str	r2, [fp, #-12]
   235b8:	ldr	r1, [fp, #-8]
   235bc:	add	r0, sp, #12
   235c0:	bl	233b8 <__assert_fail@plt+0x11f24>
   235c4:	add	r0, sp, #60	; 0x3c
   235c8:	mov	r1, r0
   235cc:	add	r2, sp, #12
   235d0:	str	r0, [sp, #8]
   235d4:	mov	r0, r1
   235d8:	mov	r1, r2
   235dc:	movw	r2, #48	; 0x30
   235e0:	bl	11248 <memcpy@plt>
   235e4:	ldr	r0, [sp, #8]
   235e8:	movw	r1, #58	; 0x3a
   235ec:	and	r1, r1, #255	; 0xff
   235f0:	movw	r2, #1
   235f4:	bl	213bc <__assert_fail@plt+0xff28>
   235f8:	ldr	r1, [fp, #-4]
   235fc:	ldr	r2, [fp, #-12]
   23600:	str	r0, [sp, #4]
   23604:	mov	r0, r1
   23608:	mov	r1, r2
   2360c:	mvn	r2, #0
   23610:	add	r3, sp, #60	; 0x3c
   23614:	bl	23024 <__assert_fail@plt+0x11b90>
   23618:	mov	sp, fp
   2361c:	pop	{fp, pc}
   23620:	push	{fp, lr}
   23624:	mov	fp, sp
   23628:	sub	sp, sp, #24
   2362c:	str	r0, [fp, #-4]
   23630:	str	r1, [fp, #-8]
   23634:	str	r2, [sp, #12]
   23638:	str	r3, [sp, #8]
   2363c:	ldr	r0, [fp, #-4]
   23640:	ldr	r1, [fp, #-8]
   23644:	ldr	r2, [sp, #12]
   23648:	ldr	r3, [sp, #8]
   2364c:	mvn	ip, #0
   23650:	str	ip, [sp]
   23654:	bl	23660 <__assert_fail@plt+0x121cc>
   23658:	mov	sp, fp
   2365c:	pop	{fp, pc}
   23660:	push	{fp, lr}
   23664:	mov	fp, sp
   23668:	sub	sp, sp, #72	; 0x48
   2366c:	ldr	ip, [fp, #8]
   23670:	movw	lr, #25000	; 0x61a8
   23674:	movt	lr, #5
   23678:	str	r0, [fp, #-4]
   2367c:	str	r1, [fp, #-8]
   23680:	str	r2, [fp, #-12]
   23684:	str	r3, [fp, #-16]
   23688:	add	r0, sp, #8
   2368c:	mov	r1, r0
   23690:	str	r0, [sp, #4]
   23694:	mov	r0, r1
   23698:	mov	r1, lr
   2369c:	movw	r2, #48	; 0x30
   236a0:	str	ip, [sp]
   236a4:	bl	11248 <memcpy@plt>
   236a8:	ldr	r1, [fp, #-8]
   236ac:	ldr	r2, [fp, #-12]
   236b0:	ldr	r0, [sp, #4]
   236b4:	bl	214bc <__assert_fail@plt+0x10028>
   236b8:	ldr	r0, [fp, #-4]
   236bc:	ldr	r1, [fp, #-16]
   236c0:	ldr	r2, [fp, #8]
   236c4:	add	r3, sp, #8
   236c8:	bl	23024 <__assert_fail@plt+0x11b90>
   236cc:	mov	sp, fp
   236d0:	pop	{fp, pc}
   236d4:	push	{fp, lr}
   236d8:	mov	fp, sp
   236dc:	sub	sp, sp, #16
   236e0:	str	r0, [fp, #-4]
   236e4:	str	r1, [sp, #8]
   236e8:	str	r2, [sp, #4]
   236ec:	ldr	r1, [fp, #-4]
   236f0:	ldr	r2, [sp, #8]
   236f4:	ldr	r3, [sp, #4]
   236f8:	movw	r0, #0
   236fc:	bl	23620 <__assert_fail@plt+0x1218c>
   23700:	mov	sp, fp
   23704:	pop	{fp, pc}
   23708:	push	{fp, lr}
   2370c:	mov	fp, sp
   23710:	sub	sp, sp, #24
   23714:	str	r0, [fp, #-4]
   23718:	str	r1, [fp, #-8]
   2371c:	str	r2, [sp, #12]
   23720:	str	r3, [sp, #8]
   23724:	ldr	r1, [fp, #-4]
   23728:	ldr	r2, [fp, #-8]
   2372c:	ldr	r3, [sp, #12]
   23730:	ldr	r0, [sp, #8]
   23734:	movw	ip, #0
   23738:	str	r0, [sp, #4]
   2373c:	mov	r0, ip
   23740:	ldr	ip, [sp, #4]
   23744:	str	ip, [sp]
   23748:	bl	23660 <__assert_fail@plt+0x121cc>
   2374c:	mov	sp, fp
   23750:	pop	{fp, pc}
   23754:	push	{fp, lr}
   23758:	mov	fp, sp
   2375c:	sub	sp, sp, #16
   23760:	str	r0, [fp, #-4]
   23764:	str	r1, [sp, #8]
   23768:	str	r2, [sp, #4]
   2376c:	ldr	r0, [fp, #-4]
   23770:	ldr	r1, [sp, #8]
   23774:	ldr	r2, [sp, #4]
   23778:	movw	r3, #24900	; 0x6144
   2377c:	movt	r3, #5
   23780:	bl	23024 <__assert_fail@plt+0x11b90>
   23784:	mov	sp, fp
   23788:	pop	{fp, pc}
   2378c:	push	{fp, lr}
   23790:	mov	fp, sp
   23794:	sub	sp, sp, #8
   23798:	str	r0, [sp, #4]
   2379c:	str	r1, [sp]
   237a0:	ldr	r1, [sp, #4]
   237a4:	ldr	r2, [sp]
   237a8:	movw	r0, #0
   237ac:	bl	23754 <__assert_fail@plt+0x122c0>
   237b0:	mov	sp, fp
   237b4:	pop	{fp, pc}
   237b8:	push	{fp, lr}
   237bc:	mov	fp, sp
   237c0:	sub	sp, sp, #8
   237c4:	str	r0, [sp, #4]
   237c8:	str	r1, [sp]
   237cc:	ldr	r0, [sp, #4]
   237d0:	ldr	r1, [sp]
   237d4:	mvn	r2, #0
   237d8:	bl	23754 <__assert_fail@plt+0x122c0>
   237dc:	mov	sp, fp
   237e0:	pop	{fp, pc}
   237e4:	push	{fp, lr}
   237e8:	mov	fp, sp
   237ec:	sub	sp, sp, #8
   237f0:	str	r0, [sp, #4]
   237f4:	ldr	r1, [sp, #4]
   237f8:	movw	r0, #0
   237fc:	bl	237b8 <__assert_fail@plt+0x12324>
   23800:	mov	sp, fp
   23804:	pop	{fp, pc}
   23808:	push	{fp, lr}
   2380c:	mov	fp, sp
   23810:	sub	sp, sp, #24
   23814:	str	r0, [fp, #-8]
   23818:	str	r1, [sp, #12]
   2381c:	ldr	r0, [fp, #-8]
   23820:	bl	11380 <gettext@plt>
   23824:	str	r0, [sp, #8]
   23828:	ldr	r0, [sp, #8]
   2382c:	ldr	r1, [fp, #-8]
   23830:	cmp	r0, r1
   23834:	beq	23844 <__assert_fail@plt+0x123b0>
   23838:	ldr	r0, [sp, #8]
   2383c:	str	r0, [fp, #-4]
   23840:	b	23910 <__assert_fail@plt+0x1247c>
   23844:	bl	41450 <__assert_fail@plt+0x2ffbc>
   23848:	str	r0, [sp, #4]
   2384c:	ldr	r0, [sp, #4]
   23850:	movw	r1, #21724	; 0x54dc
   23854:	movt	r1, #4
   23858:	bl	3fa1c <__assert_fail@plt+0x2e588>
   2385c:	cmp	r0, #0
   23860:	bne	23898 <__assert_fail@plt+0x12404>
   23864:	ldr	r0, [fp, #-8]
   23868:	ldrb	r0, [r0]
   2386c:	cmp	r0, #96	; 0x60
   23870:	movw	r0, #0
   23874:	moveq	r0, #1
   23878:	tst	r0, #1
   2387c:	movw	r0, #21734	; 0x54e6
   23880:	movt	r0, #4
   23884:	movw	r1, #21730	; 0x54e2
   23888:	movt	r1, #4
   2388c:	movne	r0, r1
   23890:	str	r0, [fp, #-4]
   23894:	b	23910 <__assert_fail@plt+0x1247c>
   23898:	ldr	r0, [sp, #4]
   2389c:	movw	r1, #21738	; 0x54ea
   238a0:	movt	r1, #4
   238a4:	bl	3fa1c <__assert_fail@plt+0x2e588>
   238a8:	cmp	r0, #0
   238ac:	bne	238e4 <__assert_fail@plt+0x12450>
   238b0:	ldr	r0, [fp, #-8]
   238b4:	ldrb	r0, [r0]
   238b8:	cmp	r0, #96	; 0x60
   238bc:	movw	r0, #0
   238c0:	moveq	r0, #1
   238c4:	tst	r0, #1
   238c8:	movw	r0, #21750	; 0x54f6
   238cc:	movt	r0, #4
   238d0:	movw	r1, #21746	; 0x54f2
   238d4:	movt	r1, #4
   238d8:	movne	r0, r1
   238dc:	str	r0, [fp, #-4]
   238e0:	b	23910 <__assert_fail@plt+0x1247c>
   238e4:	ldr	r0, [sp, #12]
   238e8:	cmp	r0, #9
   238ec:	movw	r0, #0
   238f0:	moveq	r0, #1
   238f4:	tst	r0, #1
   238f8:	movw	r0, #16383	; 0x3fff
   238fc:	movt	r0, #4
   23900:	movw	r1, #21720	; 0x54d8
   23904:	movt	r1, #4
   23908:	movne	r0, r1
   2390c:	str	r0, [fp, #-4]
   23910:	ldr	r0, [fp, #-4]
   23914:	mov	sp, fp
   23918:	pop	{fp, pc}
   2391c:	push	{fp, lr}
   23920:	mov	fp, sp
   23924:	sub	sp, sp, #24
   23928:	str	r0, [fp, #-8]
   2392c:	str	r1, [sp, #12]
   23930:	str	r2, [sp, #8]
   23934:	movw	r0, #25304	; 0x62d8
   23938:	movt	r0, #5
   2393c:	ldr	r0, [r0]
   23940:	and	r0, r0, #33554432	; 0x2000000
   23944:	ldr	r1, [sp, #8]
   23948:	ldrb	r2, [r1, #28]
   2394c:	and	r2, r2, #239	; 0xef
   23950:	orr	r0, r2, r0, lsr #21
   23954:	strb	r0, [r1, #28]
   23958:	ldr	r0, [sp, #8]
   2395c:	ldrb	r1, [r0, #28]
   23960:	and	r1, r1, #127	; 0x7f
   23964:	movw	r2, #128	; 0x80
   23968:	orr	r1, r1, r2
   2396c:	strb	r1, [r0, #28]
   23970:	ldr	r0, [sp, #8]
   23974:	ldr	r1, [fp, #-8]
   23978:	ldr	r2, [sp, #12]
   2397c:	movw	r3, #25304	; 0x62d8
   23980:	movt	r3, #5
   23984:	ldr	r3, [r3]
   23988:	bl	239dc <__assert_fail@plt+0x12548>
   2398c:	str	r0, [sp, #4]
   23990:	ldr	r0, [sp, #4]
   23994:	cmp	r0, #0
   23998:	bne	239a8 <__assert_fail@plt+0x12514>
   2399c:	movw	r0, #0
   239a0:	str	r0, [fp, #-4]
   239a4:	b	239d0 <__assert_fail@plt+0x1253c>
   239a8:	ldr	r0, [sp, #4]
   239ac:	movw	r1, #22224	; 0x56d0
   239b0:	movt	r1, #4
   239b4:	add	r0, r1, r0, lsl #2
   239b8:	ldr	r0, [r0]
   239bc:	movw	r1, #21840	; 0x5550
   239c0:	movt	r1, #4
   239c4:	add	r0, r1, r0
   239c8:	bl	11380 <gettext@plt>
   239cc:	str	r0, [fp, #-4]
   239d0:	ldr	r0, [fp, #-4]
   239d4:	mov	sp, fp
   239d8:	pop	{fp, pc}
   239dc:	push	{r4, sl, fp, lr}
   239e0:	add	fp, sp, #8
   239e4:	sub	sp, sp, #136	; 0x88
   239e8:	str	r0, [fp, #-16]
   239ec:	str	r1, [fp, #-20]	; 0xffffffec
   239f0:	str	r2, [fp, #-24]	; 0xffffffe8
   239f4:	str	r3, [fp, #-28]	; 0xffffffe4
   239f8:	mov	r0, #0
   239fc:	str	r0, [fp, #-32]	; 0xffffffe0
   23a00:	ldr	r1, [fp, #-16]
   23a04:	ldrb	r2, [r1, #28]
   23a08:	and	r2, r2, #247	; 0xf7
   23a0c:	strb	r2, [r1, #28]
   23a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23a14:	ldr	r2, [fp, #-16]
   23a18:	str	r1, [r2, #12]
   23a1c:	ldr	r1, [fp, #-16]
   23a20:	ldrb	r2, [r1, #28]
   23a24:	and	r2, r2, #191	; 0xbf
   23a28:	strb	r2, [r1, #28]
   23a2c:	ldr	r1, [fp, #-16]
   23a30:	ldrb	r2, [r1, #28]
   23a34:	and	r2, r2, #223	; 0xdf
   23a38:	strb	r2, [r1, #28]
   23a3c:	ldr	r1, [fp, #-16]
   23a40:	str	r0, [r1, #8]
   23a44:	ldr	r1, [fp, #-16]
   23a48:	str	r0, [r1, #24]
   23a4c:	ldr	r0, [fp, #-16]
   23a50:	ldrb	r1, [r0, #28]
   23a54:	and	r1, r1, #254	; 0xfe
   23a58:	strb	r1, [r0, #28]
   23a5c:	ldr	r0, [fp, #-16]
   23a60:	ldrb	r1, [r0, #28]
   23a64:	bic	r1, r1, #6
   23a68:	strb	r1, [r0, #28]
   23a6c:	ldr	r0, [fp, #-16]
   23a70:	ldr	r0, [r0]
   23a74:	str	r0, [fp, #-36]	; 0xffffffdc
   23a78:	ldr	r0, [fp, #-16]
   23a7c:	ldr	r0, [r0, #4]
   23a80:	cmp	r0, #160	; 0xa0
   23a84:	bcs	23ad0 <__assert_fail@plt+0x1263c>
   23a88:	ldr	r0, [fp, #-16]
   23a8c:	ldr	r0, [r0]
   23a90:	movw	r1, #160	; 0xa0
   23a94:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   23a98:	str	r0, [fp, #-36]	; 0xffffffdc
   23a9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23aa0:	movw	r1, #0
   23aa4:	cmp	r0, r1
   23aa8:	bne	23ab8 <__assert_fail@plt+0x12624>
   23aac:	movw	r0, #12
   23ab0:	str	r0, [fp, #-12]
   23ab4:	b	23da0 <__assert_fail@plt+0x1290c>
   23ab8:	ldr	r0, [fp, #-16]
   23abc:	movw	r1, #160	; 0xa0
   23ac0:	str	r1, [r0, #4]
   23ac4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23ac8:	ldr	r1, [fp, #-16]
   23acc:	str	r0, [r1]
   23ad0:	ldr	r0, [fp, #-16]
   23ad4:	movw	r1, #160	; 0xa0
   23ad8:	str	r1, [r0, #8]
   23adc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23ae0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23ae4:	bl	26790 <__assert_fail@plt+0x152fc>
   23ae8:	str	r0, [fp, #-32]	; 0xffffffe0
   23aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23af0:	cmp	r0, #0
   23af4:	movw	r0, #0
   23af8:	str	r0, [sp, #20]
   23afc:	bne	23b60 <__assert_fail@plt+0x126cc>
   23b00:	movw	r0, #0
   23b04:	movt	r0, #0
   23b08:	cmp	r0, #0
   23b0c:	bne	23b28 <__assert_fail@plt+0x12694>
   23b10:	b	23b14 <__assert_fail@plt+0x12680>
   23b14:	movw	r0, #0
   23b18:	movt	r0, #0
   23b1c:	cmp	r0, #0
   23b20:	beq	23b40 <__assert_fail@plt+0x126ac>
   23b24:	b	23b28 <__assert_fail@plt+0x12694>
   23b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b2c:	add	r0, r0, #136	; 0x88
   23b30:	movw	r1, #0
   23b34:	bl	11260 <pthread_mutex_init@plt>
   23b38:	str	r0, [sp, #16]
   23b3c:	b	23b4c <__assert_fail@plt+0x126b8>
   23b40:	movw	r0, #0
   23b44:	str	r0, [sp, #16]
   23b48:	b	23b4c <__assert_fail@plt+0x126b8>
   23b4c:	ldr	r0, [sp, #16]
   23b50:	cmp	r0, #0
   23b54:	movw	r0, #0
   23b58:	movne	r0, #1
   23b5c:	str	r0, [sp, #20]
   23b60:	ldr	r0, [sp, #20]
   23b64:	tst	r0, #1
   23b68:	beq	23b74 <__assert_fail@plt+0x126e0>
   23b6c:	movw	r0, #12
   23b70:	str	r0, [fp, #-32]	; 0xffffffe0
   23b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b78:	cmp	r0, #0
   23b7c:	beq	23ba8 <__assert_fail@plt+0x12714>
   23b80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b84:	bl	249e0 <__assert_fail@plt+0x1354c>
   23b88:	ldr	r0, [fp, #-16]
   23b8c:	movw	r1, #0
   23b90:	str	r1, [r0]
   23b94:	ldr	r0, [fp, #-16]
   23b98:	str	r1, [r0, #4]
   23b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23ba0:	str	r0, [fp, #-12]
   23ba4:	b	23da0 <__assert_fail@plt+0x1290c>
   23ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
   23bac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23bb0:	ldr	r0, [fp, #-16]
   23bb4:	ldr	r3, [r0, #20]
   23bb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23bbc:	and	r0, r0, #4194304	; 0x400000
   23bc0:	cmp	r0, #0
   23bc4:	movw	r0, #0
   23bc8:	movne	r0, #1
   23bcc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   23bd0:	add	lr, sp, #24
   23bd4:	str	r0, [sp, #12]
   23bd8:	mov	r0, lr
   23bdc:	ldr	lr, [sp, #12]
   23be0:	and	r4, lr, #1
   23be4:	str	r4, [sp]
   23be8:	str	ip, [sp, #4]
   23bec:	bl	26d9c <__assert_fail@plt+0x15908>
   23bf0:	str	r0, [fp, #-32]	; 0xffffffe0
   23bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23bf8:	cmp	r0, #0
   23bfc:	beq	23c78 <__assert_fail@plt+0x127e4>
   23c00:	b	23c04 <__assert_fail@plt+0x12770>
   23c04:	ldr	r0, [fp, #-16]
   23c08:	bl	26fb0 <__assert_fail@plt+0x15b1c>
   23c0c:	add	r0, sp, #24
   23c10:	bl	27048 <__assert_fail@plt+0x15bb4>
   23c14:	movw	r0, #0
   23c18:	movt	r0, #0
   23c1c:	cmp	r0, #0
   23c20:	bne	23c3c <__assert_fail@plt+0x127a8>
   23c24:	b	23c28 <__assert_fail@plt+0x12794>
   23c28:	movw	r0, #0
   23c2c:	movt	r0, #0
   23c30:	cmp	r0, #0
   23c34:	beq	23c4c <__assert_fail@plt+0x127b8>
   23c38:	b	23c3c <__assert_fail@plt+0x127a8>
   23c3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23c40:	add	r0, r0, #136	; 0x88
   23c44:	bl	111f4 <pthread_mutex_destroy@plt>
   23c48:	b	23c50 <__assert_fail@plt+0x127bc>
   23c4c:	b	23c50 <__assert_fail@plt+0x127bc>
   23c50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23c54:	bl	249e0 <__assert_fail@plt+0x1354c>
   23c58:	ldr	r0, [fp, #-16]
   23c5c:	movw	r1, #0
   23c60:	str	r1, [r0]
   23c64:	ldr	r0, [fp, #-16]
   23c68:	str	r1, [r0, #4]
   23c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c70:	str	r0, [fp, #-12]
   23c74:	b	23da0 <__assert_fail@plt+0x1290c>
   23c78:	ldr	r0, [fp, #-16]
   23c7c:	movw	r1, #0
   23c80:	str	r1, [r0, #24]
   23c84:	ldr	r1, [fp, #-16]
   23c88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23c8c:	add	r0, sp, #24
   23c90:	sub	r3, fp, #32
   23c94:	bl	27094 <__assert_fail@plt+0x15c00>
   23c98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c9c:	str	r0, [r1, #52]	; 0x34
   23ca0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23ca4:	ldr	r0, [r0, #52]	; 0x34
   23ca8:	movw	r1, #0
   23cac:	cmp	r0, r1
   23cb0:	bne	23cb8 <__assert_fail@plt+0x12824>
   23cb4:	b	23c04 <__assert_fail@plt+0x12770>
   23cb8:	ldr	r0, [fp, #-16]
   23cbc:	bl	27210 <__assert_fail@plt+0x15d7c>
   23cc0:	str	r0, [fp, #-32]	; 0xffffffe0
   23cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23cc8:	cmp	r0, #0
   23ccc:	beq	23cd4 <__assert_fail@plt+0x12840>
   23cd0:	b	23c04 <__assert_fail@plt+0x12770>
   23cd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23cd8:	ldrb	r0, [r0, #88]	; 0x58
   23cdc:	ubfx	r0, r0, #2, #1
   23ce0:	and	r0, r0, #255	; 0xff
   23ce4:	cmp	r0, #0
   23ce8:	beq	23d18 <__assert_fail@plt+0x12884>
   23cec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23cf0:	and	r0, r0, #4194304	; 0x400000
   23cf4:	cmp	r0, #0
   23cf8:	bne	23d18 <__assert_fail@plt+0x12884>
   23cfc:	ldr	r0, [fp, #-16]
   23d00:	ldr	r0, [r0, #20]
   23d04:	movw	r1, #0
   23d08:	cmp	r0, r1
   23d0c:	bne	23d18 <__assert_fail@plt+0x12884>
   23d10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d14:	bl	275e4 <__assert_fail@plt+0x16150>
   23d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d1c:	bl	278f0 <__assert_fail@plt+0x1645c>
   23d20:	str	r0, [fp, #-32]	; 0xffffffe0
   23d24:	ldr	r0, [fp, #-16]
   23d28:	bl	26fb0 <__assert_fail@plt+0x15b1c>
   23d2c:	add	r0, sp, #24
   23d30:	bl	27048 <__assert_fail@plt+0x15bb4>
   23d34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d38:	cmp	r0, #0
   23d3c:	beq	23d98 <__assert_fail@plt+0x12904>
   23d40:	movw	r0, #0
   23d44:	movt	r0, #0
   23d48:	cmp	r0, #0
   23d4c:	bne	23d68 <__assert_fail@plt+0x128d4>
   23d50:	b	23d54 <__assert_fail@plt+0x128c0>
   23d54:	movw	r0, #0
   23d58:	movt	r0, #0
   23d5c:	cmp	r0, #0
   23d60:	beq	23d78 <__assert_fail@plt+0x128e4>
   23d64:	b	23d68 <__assert_fail@plt+0x128d4>
   23d68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d6c:	add	r0, r0, #136	; 0x88
   23d70:	bl	111f4 <pthread_mutex_destroy@plt>
   23d74:	b	23d7c <__assert_fail@plt+0x128e8>
   23d78:	b	23d7c <__assert_fail@plt+0x128e8>
   23d7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d80:	bl	249e0 <__assert_fail@plt+0x1354c>
   23d84:	ldr	r0, [fp, #-16]
   23d88:	movw	r1, #0
   23d8c:	str	r1, [r0]
   23d90:	ldr	r0, [fp, #-16]
   23d94:	str	r1, [r0, #4]
   23d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d9c:	str	r0, [fp, #-12]
   23da0:	ldr	r0, [fp, #-12]
   23da4:	sub	sp, fp, #8
   23da8:	pop	{r4, sl, fp, pc}
   23dac:	sub	sp, sp, #8
   23db0:	str	r0, [sp, #4]
   23db4:	movw	r0, #25304	; 0x62d8
   23db8:	movt	r0, #5
   23dbc:	ldr	r1, [r0]
   23dc0:	str	r1, [sp]
   23dc4:	ldr	r1, [sp, #4]
   23dc8:	str	r1, [r0]
   23dcc:	ldr	r0, [sp]
   23dd0:	add	sp, sp, #8
   23dd4:	bx	lr
   23dd8:	push	{fp, lr}
   23ddc:	mov	fp, sp
   23de0:	sub	sp, sp, #16
   23de4:	str	r0, [fp, #-4]
   23de8:	ldr	r0, [fp, #-4]
   23dec:	ldr	r0, [r0]
   23df0:	str	r0, [sp, #8]
   23df4:	ldr	r0, [fp, #-4]
   23df8:	ldr	r0, [r0, #16]
   23dfc:	str	r0, [sp, #4]
   23e00:	ldr	r0, [sp, #4]
   23e04:	movw	r1, #0
   23e08:	and	r1, r1, #255	; 0xff
   23e0c:	movw	r2, #256	; 0x100
   23e10:	bl	113d4 <memset@plt>
   23e14:	ldr	r0, [fp, #-4]
   23e18:	ldr	r1, [sp, #8]
   23e1c:	ldr	r1, [r1, #36]	; 0x24
   23e20:	ldr	r2, [sp, #4]
   23e24:	bl	23ed0 <__assert_fail@plt+0x12a3c>
   23e28:	ldr	r0, [sp, #8]
   23e2c:	ldr	r0, [r0, #36]	; 0x24
   23e30:	ldr	r1, [sp, #8]
   23e34:	ldr	r1, [r1, #40]	; 0x28
   23e38:	cmp	r0, r1
   23e3c:	beq	23e54 <__assert_fail@plt+0x129c0>
   23e40:	ldr	r0, [fp, #-4]
   23e44:	ldr	r1, [sp, #8]
   23e48:	ldr	r1, [r1, #40]	; 0x28
   23e4c:	ldr	r2, [sp, #4]
   23e50:	bl	23ed0 <__assert_fail@plt+0x12a3c>
   23e54:	ldr	r0, [sp, #8]
   23e58:	ldr	r0, [r0, #36]	; 0x24
   23e5c:	ldr	r1, [sp, #8]
   23e60:	ldr	r1, [r1, #44]	; 0x2c
   23e64:	cmp	r0, r1
   23e68:	beq	23e80 <__assert_fail@plt+0x129ec>
   23e6c:	ldr	r0, [fp, #-4]
   23e70:	ldr	r1, [sp, #8]
   23e74:	ldr	r1, [r1, #44]	; 0x2c
   23e78:	ldr	r2, [sp, #4]
   23e7c:	bl	23ed0 <__assert_fail@plt+0x12a3c>
   23e80:	ldr	r0, [sp, #8]
   23e84:	ldr	r0, [r0, #36]	; 0x24
   23e88:	ldr	r1, [sp, #8]
   23e8c:	ldr	r1, [r1, #48]	; 0x30
   23e90:	cmp	r0, r1
   23e94:	beq	23eac <__assert_fail@plt+0x12a18>
   23e98:	ldr	r0, [fp, #-4]
   23e9c:	ldr	r1, [sp, #8]
   23ea0:	ldr	r1, [r1, #48]	; 0x30
   23ea4:	ldr	r2, [sp, #4]
   23ea8:	bl	23ed0 <__assert_fail@plt+0x12a3c>
   23eac:	ldr	r0, [fp, #-4]
   23eb0:	ldrb	r1, [r0, #28]
   23eb4:	bic	r1, r1, #8
   23eb8:	movw	r2, #8
   23ebc:	orr	r1, r1, r2
   23ec0:	strb	r1, [r0, #28]
   23ec4:	movw	r0, #0
   23ec8:	mov	sp, fp
   23ecc:	pop	{fp, pc}
   23ed0:	push	{r4, r5, fp, lr}
   23ed4:	add	fp, sp, #8
   23ed8:	sub	sp, sp, #504	; 0x1f8
   23edc:	str	r0, [fp, #-84]	; 0xffffffac
   23ee0:	str	r1, [fp, #-88]	; 0xffffffa8
   23ee4:	str	r2, [fp, #-92]	; 0xffffffa4
   23ee8:	ldr	r0, [fp, #-84]	; 0xffffffac
   23eec:	ldr	r0, [r0]
   23ef0:	str	r0, [fp, #-96]	; 0xffffffa0
   23ef4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   23ef8:	ldr	r0, [r0, #92]	; 0x5c
   23efc:	cmp	r0, #1
   23f00:	movw	r0, #0
   23f04:	str	r0, [sp, #60]	; 0x3c
   23f08:	bne	23f28 <__assert_fail@plt+0x12a94>
   23f0c:	ldr	r0, [fp, #-84]	; 0xffffffac
   23f10:	ldr	r0, [r0, #12]
   23f14:	and	r0, r0, #4194304	; 0x400000
   23f18:	cmp	r0, #0
   23f1c:	movw	r0, #0
   23f20:	movne	r0, #1
   23f24:	str	r0, [sp, #60]	; 0x3c
   23f28:	ldr	r0, [sp, #60]	; 0x3c
   23f2c:	and	r0, r0, #1
   23f30:	strb	r0, [fp, #-101]	; 0xffffff9b
   23f34:	movw	r0, #0
   23f38:	str	r0, [fp, #-100]	; 0xffffff9c
   23f3c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   23f40:	ldr	r1, [fp, #-88]	; 0xffffffa8
   23f44:	ldr	r1, [r1, #8]
   23f48:	cmp	r0, r1
   23f4c:	bge	2464c <__assert_fail@plt+0x131b8>
   23f50:	ldr	r0, [fp, #-88]	; 0xffffffa8
   23f54:	ldr	r0, [r0, #12]
   23f58:	ldr	r1, [fp, #-100]	; 0xffffff9c
   23f5c:	ldr	r0, [r0, r1, lsl #2]
   23f60:	str	r0, [fp, #-108]	; 0xffffff94
   23f64:	ldr	r0, [fp, #-96]	; 0xffffffa0
   23f68:	ldr	r0, [r0]
   23f6c:	ldr	r1, [fp, #-108]	; 0xffffff94
   23f70:	add	r0, r0, r1, lsl #3
   23f74:	ldr	r0, [r0, #4]
   23f78:	and	r0, r0, #255	; 0xff
   23f7c:	str	r0, [fp, #-112]	; 0xffffff90
   23f80:	ldr	r0, [fp, #-112]	; 0xffffff90
   23f84:	cmp	r0, #1
   23f88:	bne	241ec <__assert_fail@plt+0x12d58>
   23f8c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   23f90:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   23f94:	ldr	r2, [fp, #-96]	; 0xffffffa0
   23f98:	ldr	r2, [r2]
   23f9c:	ldr	r3, [fp, #-108]	; 0xffffff94
   23fa0:	add	r2, r2, r3, lsl #3
   23fa4:	ldrb	r2, [r2]
   23fa8:	str	r0, [fp, #-72]	; 0xffffffb8
   23fac:	and	r0, r1, #1
   23fb0:	strb	r0, [fp, #-73]	; 0xffffffb7
   23fb4:	str	r2, [fp, #-80]	; 0xffffffb0
   23fb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   23fbc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   23fc0:	add	r0, r0, r1
   23fc4:	movw	r1, #1
   23fc8:	strb	r1, [r0]
   23fcc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   23fd0:	tst	r0, #1
   23fd4:	beq	23ffc <__assert_fail@plt+0x12b68>
   23fd8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   23fdc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   23fe0:	str	r0, [sp, #56]	; 0x38
   23fe4:	mov	r0, r1
   23fe8:	bl	11254 <tolower@plt>
   23fec:	ldr	r1, [sp, #56]	; 0x38
   23ff0:	add	r0, r1, r0
   23ff4:	movw	r1, #1
   23ff8:	strb	r1, [r0]
   23ffc:	ldr	r0, [fp, #-84]	; 0xffffffac
   24000:	ldr	r0, [r0, #12]
   24004:	and	r0, r0, #4194304	; 0x400000
   24008:	cmp	r0, #0
   2400c:	beq	241e8 <__assert_fail@plt+0x12d54>
   24010:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24014:	ldr	r0, [r0, #92]	; 0x5c
   24018:	cmp	r0, #1
   2401c:	ble	241e8 <__assert_fail@plt+0x12d54>
   24020:	sub	r0, fp, #128	; 0x80
   24024:	str	r0, [fp, #-132]	; 0xffffff7c
   24028:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2402c:	ldr	r0, [r0]
   24030:	ldr	r1, [fp, #-108]	; 0xffffff94
   24034:	add	r0, r0, r1, lsl #3
   24038:	ldrb	r0, [r0]
   2403c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   24040:	add	r2, r1, #1
   24044:	str	r2, [fp, #-132]	; 0xffffff7c
   24048:	strb	r0, [r1]
   2404c:	ldr	r0, [fp, #-108]	; 0xffffff94
   24050:	add	r0, r0, #1
   24054:	str	r0, [fp, #-108]	; 0xffffff94
   24058:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2405c:	ldr	r1, [r1, #8]
   24060:	cmp	r0, r1
   24064:	movw	r0, #0
   24068:	str	r0, [sp, #52]	; 0x34
   2406c:	bcs	240c4 <__assert_fail@plt+0x12c30>
   24070:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24074:	ldr	r0, [r0]
   24078:	ldr	r1, [fp, #-108]	; 0xffffff94
   2407c:	add	r0, r0, r1, lsl #3
   24080:	ldr	r0, [r0, #4]
   24084:	and	r0, r0, #255	; 0xff
   24088:	cmp	r0, #1
   2408c:	movw	r0, #0
   24090:	str	r0, [sp, #52]	; 0x34
   24094:	bne	240c4 <__assert_fail@plt+0x12c30>
   24098:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2409c:	ldr	r0, [r0]
   240a0:	ldr	r1, [fp, #-108]	; 0xffffff94
   240a4:	add	r0, r0, r1, lsl #3
   240a8:	ldr	r0, [r0, #4]
   240ac:	lsr	r0, r0, #21
   240b0:	and	r0, r0, #1
   240b4:	cmp	r0, #0
   240b8:	movw	r0, #0
   240bc:	movne	r0, #1
   240c0:	str	r0, [sp, #52]	; 0x34
   240c4:	ldr	r0, [sp, #52]	; 0x34
   240c8:	tst	r0, #1
   240cc:	beq	240f8 <__assert_fail@plt+0x12c64>
   240d0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   240d4:	ldr	r0, [r0]
   240d8:	ldr	r1, [fp, #-108]	; 0xffffff94
   240dc:	add	r0, r0, r1, lsl #3
   240e0:	ldrb	r0, [r0]
   240e4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   240e8:	add	r2, r1, #1
   240ec:	str	r2, [fp, #-132]	; 0xffffff7c
   240f0:	strb	r0, [r1]
   240f4:	b	2404c <__assert_fail@plt+0x12bb8>
   240f8:	sub	r0, fp, #128	; 0x80
   240fc:	sub	r1, fp, #144	; 0x90
   24100:	mov	r2, r1
   24104:	str	r0, [sp, #48]	; 0x30
   24108:	mov	r0, r2
   2410c:	movw	r2, #0
   24110:	and	r2, r2, #255	; 0xff
   24114:	str	r1, [sp, #44]	; 0x2c
   24118:	mov	r1, r2
   2411c:	movw	r2, #8
   24120:	bl	113d4 <memset@plt>
   24124:	ldr	r0, [fp, #-132]	; 0xffffff7c
   24128:	ldr	r1, [sp, #48]	; 0x30
   2412c:	sub	r2, r0, r1
   24130:	sub	r0, fp, #136	; 0x88
   24134:	ldr	r3, [sp, #44]	; 0x2c
   24138:	bl	41610 <__assert_fail@plt+0x3017c>
   2413c:	sub	r1, fp, #128	; 0x80
   24140:	ldr	r2, [fp, #-132]	; 0xffffff7c
   24144:	sub	r1, r2, r1
   24148:	cmp	r0, r1
   2414c:	bne	241e4 <__assert_fail@plt+0x12d50>
   24150:	sub	r0, fp, #128	; 0x80
   24154:	ldr	r1, [fp, #-136]	; 0xffffff78
   24158:	str	r0, [sp, #40]	; 0x28
   2415c:	mov	r0, r1
   24160:	bl	1126c <towlower@plt>
   24164:	ldr	r1, [sp, #40]	; 0x28
   24168:	str	r0, [sp, #36]	; 0x24
   2416c:	mov	r0, r1
   24170:	ldr	r1, [sp, #36]	; 0x24
   24174:	sub	r2, fp, #144	; 0x90
   24178:	bl	111b8 <wcrtomb@plt>
   2417c:	cmn	r0, #1
   24180:	beq	241e4 <__assert_fail@plt+0x12d50>
   24184:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24188:	ldrb	r1, [fp, #-128]	; 0xffffff80
   2418c:	str	r0, [fp, #-60]	; 0xffffffc4
   24190:	movw	r0, #0
   24194:	strb	r0, [fp, #-61]	; 0xffffffc3
   24198:	str	r1, [fp, #-68]	; 0xffffffbc
   2419c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   241a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   241a4:	add	r0, r0, r1
   241a8:	movw	r1, #1
   241ac:	strb	r1, [r0]
   241b0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   241b4:	tst	r0, #1
   241b8:	beq	241e0 <__assert_fail@plt+0x12d4c>
   241bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   241c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   241c4:	str	r0, [sp, #32]
   241c8:	mov	r0, r1
   241cc:	bl	11254 <tolower@plt>
   241d0:	ldr	r1, [sp, #32]
   241d4:	add	r0, r1, r0
   241d8:	movw	r1, #1
   241dc:	strb	r1, [r0]
   241e0:	b	241e4 <__assert_fail@plt+0x12d50>
   241e4:	b	241e8 <__assert_fail@plt+0x12d54>
   241e8:	b	24638 <__assert_fail@plt+0x131a4>
   241ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   241f0:	cmp	r0, #3
   241f4:	bne	242fc <__assert_fail@plt+0x12e68>
   241f8:	movw	r0, #0
   241fc:	str	r0, [fp, #-148]	; 0xffffff6c
   24200:	str	r0, [fp, #-152]	; 0xffffff68
   24204:	ldr	r0, [fp, #-148]	; 0xffffff6c
   24208:	cmp	r0, #8
   2420c:	bge	242f8 <__assert_fail@plt+0x12e64>
   24210:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24214:	ldr	r0, [r0]
   24218:	ldr	r1, [fp, #-108]	; 0xffffff94
   2421c:	ldr	r0, [r0, r1, lsl #3]
   24220:	ldr	r1, [fp, #-148]	; 0xffffff6c
   24224:	add	r0, r0, r1, lsl #2
   24228:	ldr	r0, [r0]
   2422c:	str	r0, [fp, #-160]	; 0xffffff60
   24230:	movw	r0, #0
   24234:	str	r0, [fp, #-156]	; 0xffffff64
   24238:	ldr	r0, [fp, #-156]	; 0xffffff64
   2423c:	cmp	r0, #32
   24240:	bge	242e4 <__assert_fail@plt+0x12e50>
   24244:	ldr	r0, [fp, #-160]	; 0xffffff60
   24248:	ldr	r1, [fp, #-156]	; 0xffffff64
   2424c:	movw	r2, #1
   24250:	lsl	r1, r2, r1
   24254:	and	r0, r0, r1
   24258:	cmp	r0, #0
   2425c:	beq	242c4 <__assert_fail@plt+0x12e30>
   24260:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24264:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   24268:	ldr	r2, [fp, #-152]	; 0xffffff68
   2426c:	str	r0, [fp, #-48]	; 0xffffffd0
   24270:	and	r0, r1, #1
   24274:	strb	r0, [fp, #-49]	; 0xffffffcf
   24278:	str	r2, [fp, #-56]	; 0xffffffc8
   2427c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24280:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24284:	add	r0, r0, r1
   24288:	movw	r1, #1
   2428c:	strb	r1, [r0]
   24290:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   24294:	tst	r0, #1
   24298:	beq	242c0 <__assert_fail@plt+0x12e2c>
   2429c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   242a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   242a4:	str	r0, [sp, #28]
   242a8:	mov	r0, r1
   242ac:	bl	11254 <tolower@plt>
   242b0:	ldr	r1, [sp, #28]
   242b4:	add	r0, r1, r0
   242b8:	movw	r1, #1
   242bc:	strb	r1, [r0]
   242c0:	b	242c4 <__assert_fail@plt+0x12e30>
   242c4:	b	242c8 <__assert_fail@plt+0x12e34>
   242c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   242cc:	add	r0, r0, #1
   242d0:	str	r0, [fp, #-156]	; 0xffffff64
   242d4:	ldr	r0, [fp, #-152]	; 0xffffff68
   242d8:	add	r0, r0, #1
   242dc:	str	r0, [fp, #-152]	; 0xffffff68
   242e0:	b	24238 <__assert_fail@plt+0x12da4>
   242e4:	b	242e8 <__assert_fail@plt+0x12e54>
   242e8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   242ec:	add	r0, r0, #1
   242f0:	str	r0, [fp, #-148]	; 0xffffff6c
   242f4:	b	24204 <__assert_fail@plt+0x12d70>
   242f8:	b	24634 <__assert_fail@plt+0x131a0>
   242fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   24300:	cmp	r0, #6
   24304:	bne	245cc <__assert_fail@plt+0x13138>
   24308:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2430c:	ldr	r0, [r0]
   24310:	ldr	r1, [fp, #-108]	; 0xffffff94
   24314:	add	r0, r0, r1, lsl #3
   24318:	ldr	r0, [r0]
   2431c:	str	r0, [fp, #-164]	; 0xffffff5c
   24320:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24324:	ldr	r0, [r0, #92]	; 0x5c
   24328:	cmp	r0, #1
   2432c:	ble	24430 <__assert_fail@plt+0x12f9c>
   24330:	ldr	r0, [fp, #-164]	; 0xffffff5c
   24334:	ldr	r0, [r0, #36]	; 0x24
   24338:	cmp	r0, #0
   2433c:	bne	24368 <__assert_fail@plt+0x12ed4>
   24340:	ldr	r0, [fp, #-164]	; 0xffffff5c
   24344:	ldrb	r0, [r0, #16]
   24348:	and	r0, r0, #1
   2434c:	and	r0, r0, #255	; 0xff
   24350:	cmp	r0, #0
   24354:	bne	24368 <__assert_fail@plt+0x12ed4>
   24358:	ldr	r0, [fp, #-164]	; 0xffffff5c
   2435c:	ldr	r0, [r0, #32]
   24360:	cmp	r0, #0
   24364:	beq	24430 <__assert_fail@plt+0x12f9c>
   24368:	movw	r0, #0
   2436c:	strb	r0, [fp, #-169]	; 0xffffff57
   24370:	sub	r0, fp, #180	; 0xb4
   24374:	mov	r1, r0
   24378:	str	r0, [sp, #24]
   2437c:	mov	r0, r1
   24380:	movw	r1, #0
   24384:	and	r1, r1, #255	; 0xff
   24388:	movw	r2, #8
   2438c:	bl	113d4 <memset@plt>
   24390:	movw	r0, #0
   24394:	sub	r1, fp, #169	; 0xa9
   24398:	movw	r2, #1
   2439c:	ldr	r3, [sp, #24]
   243a0:	bl	41610 <__assert_fail@plt+0x3017c>
   243a4:	cmn	r0, #2
   243a8:	bne	2440c <__assert_fail@plt+0x12f78>
   243ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   243b0:	ldrb	r1, [fp, #-169]	; 0xffffff57
   243b4:	str	r0, [fp, #-36]	; 0xffffffdc
   243b8:	movw	r0, #0
   243bc:	strb	r0, [fp, #-37]	; 0xffffffdb
   243c0:	str	r1, [fp, #-44]	; 0xffffffd4
   243c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   243c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   243cc:	add	r0, r0, r1
   243d0:	movw	r1, #1
   243d4:	strb	r1, [r0]
   243d8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   243dc:	tst	r0, #1
   243e0:	beq	24408 <__assert_fail@plt+0x12f74>
   243e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   243e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   243ec:	str	r0, [sp, #20]
   243f0:	mov	r0, r1
   243f4:	bl	11254 <tolower@plt>
   243f8:	ldr	r1, [sp, #20]
   243fc:	add	r0, r1, r0
   24400:	movw	r1, #1
   24404:	strb	r1, [r0]
   24408:	b	2440c <__assert_fail@plt+0x12f78>
   2440c:	b	24410 <__assert_fail@plt+0x12f7c>
   24410:	ldrb	r0, [fp, #-169]	; 0xffffff57
   24414:	movw	r1, #1
   24418:	add	r0, r0, r1
   2441c:	strb	r0, [fp, #-169]	; 0xffffff57
   24420:	and	r0, r0, #255	; 0xff
   24424:	cmp	r0, #0
   24428:	bne	24370 <__assert_fail@plt+0x12edc>
   2442c:	b	245c8 <__assert_fail@plt+0x13134>
   24430:	movw	r0, #0
   24434:	str	r0, [fp, #-168]	; 0xffffff58
   24438:	ldr	r0, [fp, #-168]	; 0xffffff58
   2443c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   24440:	ldr	r1, [r1, #20]
   24444:	cmp	r0, r1
   24448:	bge	245c4 <__assert_fail@plt+0x13130>
   2444c:	mov	r0, #0
   24450:	str	r0, [sp, #68]	; 0x44
   24454:	str	r0, [sp, #64]	; 0x40
   24458:	add	r0, sp, #76	; 0x4c
   2445c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   24460:	ldr	r1, [r1]
   24464:	ldr	r2, [fp, #-168]	; 0xffffff58
   24468:	add	r1, r1, r2, lsl #2
   2446c:	ldr	r1, [r1]
   24470:	add	r2, sp, #64	; 0x40
   24474:	bl	111b8 <wcrtomb@plt>
   24478:	cmn	r0, #1
   2447c:	beq	244e4 <__assert_fail@plt+0x13050>
   24480:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24484:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   24488:	ldrb	r2, [sp, #76]	; 0x4c
   2448c:	str	r0, [fp, #-24]	; 0xffffffe8
   24490:	and	r0, r1, #1
   24494:	strb	r0, [fp, #-25]	; 0xffffffe7
   24498:	str	r2, [fp, #-32]	; 0xffffffe0
   2449c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   244a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   244a4:	add	r0, r0, r1
   244a8:	movw	r1, #1
   244ac:	strb	r1, [r0]
   244b0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   244b4:	tst	r0, #1
   244b8:	beq	244e0 <__assert_fail@plt+0x1304c>
   244bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   244c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   244c4:	str	r0, [sp, #16]
   244c8:	mov	r0, r1
   244cc:	bl	11254 <tolower@plt>
   244d0:	ldr	r1, [sp, #16]
   244d4:	add	r0, r1, r0
   244d8:	movw	r1, #1
   244dc:	strb	r1, [r0]
   244e0:	b	244e4 <__assert_fail@plt+0x13050>
   244e4:	ldr	r0, [fp, #-84]	; 0xffffffac
   244e8:	ldr	r0, [r0, #12]
   244ec:	and	r0, r0, #4194304	; 0x400000
   244f0:	cmp	r0, #0
   244f4:	beq	245b0 <__assert_fail@plt+0x1311c>
   244f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   244fc:	ldr	r0, [r0, #92]	; 0x5c
   24500:	cmp	r0, #1
   24504:	ble	245b0 <__assert_fail@plt+0x1311c>
   24508:	add	r0, sp, #76	; 0x4c
   2450c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   24510:	ldr	r1, [r1]
   24514:	ldr	r2, [fp, #-168]	; 0xffffff58
   24518:	add	r1, r1, r2, lsl #2
   2451c:	ldr	r1, [r1]
   24520:	str	r0, [sp, #12]
   24524:	mov	r0, r1
   24528:	bl	1126c <towlower@plt>
   2452c:	ldr	r1, [sp, #12]
   24530:	str	r0, [sp, #8]
   24534:	mov	r0, r1
   24538:	ldr	r1, [sp, #8]
   2453c:	add	r2, sp, #64	; 0x40
   24540:	bl	111b8 <wcrtomb@plt>
   24544:	cmn	r0, #1
   24548:	beq	245ac <__assert_fail@plt+0x13118>
   2454c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   24550:	ldrb	r1, [sp, #76]	; 0x4c
   24554:	str	r0, [fp, #-12]
   24558:	movw	r0, #0
   2455c:	strb	r0, [fp, #-13]
   24560:	str	r1, [fp, #-20]	; 0xffffffec
   24564:	ldr	r0, [fp, #-12]
   24568:	ldr	r1, [fp, #-20]	; 0xffffffec
   2456c:	add	r0, r0, r1
   24570:	movw	r1, #1
   24574:	strb	r1, [r0]
   24578:	ldrb	r0, [fp, #-13]
   2457c:	tst	r0, #1
   24580:	beq	245a8 <__assert_fail@plt+0x13114>
   24584:	ldr	r0, [fp, #-12]
   24588:	ldr	r1, [fp, #-20]	; 0xffffffec
   2458c:	str	r0, [sp, #4]
   24590:	mov	r0, r1
   24594:	bl	11254 <tolower@plt>
   24598:	ldr	r1, [sp, #4]
   2459c:	add	r0, r1, r0
   245a0:	movw	r1, #1
   245a4:	strb	r1, [r0]
   245a8:	b	245ac <__assert_fail@plt+0x13118>
   245ac:	b	245b0 <__assert_fail@plt+0x1311c>
   245b0:	b	245b4 <__assert_fail@plt+0x13120>
   245b4:	ldr	r0, [fp, #-168]	; 0xffffff58
   245b8:	add	r0, r0, #1
   245bc:	str	r0, [fp, #-168]	; 0xffffff58
   245c0:	b	24438 <__assert_fail@plt+0x12fa4>
   245c4:	b	245c8 <__assert_fail@plt+0x13134>
   245c8:	b	24630 <__assert_fail@plt+0x1319c>
   245cc:	ldr	r0, [fp, #-112]	; 0xffffff90
   245d0:	cmp	r0, #5
   245d4:	beq	245f0 <__assert_fail@plt+0x1315c>
   245d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   245dc:	cmp	r0, #7
   245e0:	beq	245f0 <__assert_fail@plt+0x1315c>
   245e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   245e8:	cmp	r0, #2
   245ec:	bne	2462c <__assert_fail@plt+0x13198>
   245f0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   245f4:	movw	r1, #1
   245f8:	and	r1, r1, #255	; 0xff
   245fc:	movw	r2, #256	; 0x100
   24600:	bl	113d4 <memset@plt>
   24604:	ldr	r0, [fp, #-112]	; 0xffffff90
   24608:	cmp	r0, #2
   2460c:	bne	24628 <__assert_fail@plt+0x13194>
   24610:	ldr	r0, [fp, #-84]	; 0xffffffac
   24614:	ldrb	r1, [r0, #28]
   24618:	bic	r1, r1, #1
   2461c:	movw	r2, #1
   24620:	orr	r1, r1, r2
   24624:	strb	r1, [r0, #28]
   24628:	b	2464c <__assert_fail@plt+0x131b8>
   2462c:	b	24630 <__assert_fail@plt+0x1319c>
   24630:	b	24634 <__assert_fail@plt+0x131a0>
   24634:	b	24638 <__assert_fail@plt+0x131a4>
   24638:	b	2463c <__assert_fail@plt+0x131a8>
   2463c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   24640:	add	r0, r0, #1
   24644:	str	r0, [fp, #-100]	; 0xffffff9c
   24648:	b	23f3c <__assert_fail@plt+0x12aa8>
   2464c:	sub	sp, fp, #8
   24650:	pop	{r4, r5, fp, pc}
   24654:	push	{fp, lr}
   24658:	mov	fp, sp
   2465c:	sub	sp, sp, #40	; 0x28
   24660:	ldr	r3, [pc, #440]	; 24820 <__assert_fail@plt+0x1338c>
   24664:	ldr	ip, [pc, #440]	; 24824 <__assert_fail@plt+0x13390>
   24668:	str	r0, [fp, #-8]
   2466c:	str	r1, [fp, #-12]
   24670:	str	r2, [fp, #-16]
   24674:	ldr	r0, [fp, #-16]
   24678:	and	r0, r0, #1
   2467c:	cmp	r0, #0
   24680:	movw	r0, #0
   24684:	movne	r0, #1
   24688:	tst	r0, #1
   2468c:	movne	ip, r3
   24690:	str	ip, [sp, #16]
   24694:	ldr	r0, [fp, #-8]
   24698:	movw	r1, #0
   2469c:	str	r1, [r0]
   246a0:	ldr	r0, [fp, #-8]
   246a4:	str	r1, [r0, #4]
   246a8:	ldr	r0, [fp, #-8]
   246ac:	str	r1, [r0, #8]
   246b0:	movw	r0, #256	; 0x100
   246b4:	bl	3f908 <__assert_fail@plt+0x2e474>
   246b8:	ldr	r1, [fp, #-8]
   246bc:	str	r0, [r1, #16]
   246c0:	ldr	r0, [fp, #-8]
   246c4:	ldr	r0, [r0, #16]
   246c8:	movw	r1, #0
   246cc:	cmp	r0, r1
   246d0:	bne	246e0 <__assert_fail@plt+0x1324c>
   246d4:	movw	r0, #12
   246d8:	str	r0, [fp, #-4]
   246dc:	b	24814 <__assert_fail@plt+0x13380>
   246e0:	ldr	r0, [pc, #320]	; 24828 <__assert_fail@plt+0x13394>
   246e4:	ldr	r1, [fp, #-16]
   246e8:	and	r1, r1, #2
   246ec:	cmp	r1, #0
   246f0:	movw	r1, #0
   246f4:	movne	r1, #1
   246f8:	tst	r1, #1
   246fc:	moveq	r0, #0
   24700:	ldr	r1, [sp, #16]
   24704:	orr	r0, r1, r0
   24708:	str	r0, [sp, #16]
   2470c:	ldr	r0, [fp, #-16]
   24710:	and	r0, r0, #4
   24714:	cmp	r0, #0
   24718:	beq	24750 <__assert_fail@plt+0x132bc>
   2471c:	ldr	r0, [sp, #16]
   24720:	bic	r0, r0, #64	; 0x40
   24724:	str	r0, [sp, #16]
   24728:	ldr	r0, [sp, #16]
   2472c:	orr	r0, r0, #256	; 0x100
   24730:	str	r0, [sp, #16]
   24734:	ldr	r0, [fp, #-8]
   24738:	ldrb	r1, [r0, #28]
   2473c:	and	r1, r1, #127	; 0x7f
   24740:	movw	r2, #128	; 0x80
   24744:	orr	r1, r1, r2
   24748:	strb	r1, [r0, #28]
   2474c:	b	24760 <__assert_fail@plt+0x132cc>
   24750:	ldr	r0, [fp, #-8]
   24754:	ldrb	r1, [r0, #28]
   24758:	and	r1, r1, #127	; 0x7f
   2475c:	strb	r1, [r0, #28]
   24760:	ldrb	r0, [fp, #-16]
   24764:	and	r0, r0, #8
   24768:	ldr	r1, [fp, #-8]
   2476c:	ldrb	r2, [r1, #28]
   24770:	lsl	r0, r0, #1
   24774:	bic	r2, r2, #16
   24778:	orr	r0, r2, r0
   2477c:	strb	r0, [r1, #28]
   24780:	ldr	r0, [fp, #-8]
   24784:	movw	r1, #0
   24788:	str	r1, [r0, #20]
   2478c:	ldr	r0, [fp, #-8]
   24790:	ldr	r1, [fp, #-12]
   24794:	ldr	r2, [fp, #-12]
   24798:	str	r0, [sp, #12]
   2479c:	mov	r0, r2
   247a0:	str	r1, [sp, #8]
   247a4:	bl	1138c <strlen@plt>
   247a8:	ldr	r3, [sp, #16]
   247ac:	ldr	r1, [sp, #12]
   247b0:	str	r0, [sp, #4]
   247b4:	mov	r0, r1
   247b8:	ldr	r1, [sp, #8]
   247bc:	ldr	r2, [sp, #4]
   247c0:	bl	239dc <__assert_fail@plt+0x12548>
   247c4:	str	r0, [sp, #20]
   247c8:	ldr	r0, [sp, #20]
   247cc:	cmp	r0, #16
   247d0:	bne	247dc <__assert_fail@plt+0x13348>
   247d4:	movw	r0, #8
   247d8:	str	r0, [sp, #20]
   247dc:	ldr	r0, [sp, #20]
   247e0:	cmp	r0, #0
   247e4:	bne	247f4 <__assert_fail@plt+0x13360>
   247e8:	ldr	r0, [fp, #-8]
   247ec:	bl	23dd8 <__assert_fail@plt+0x12944>
   247f0:	b	2480c <__assert_fail@plt+0x13378>
   247f4:	ldr	r0, [fp, #-8]
   247f8:	ldr	r0, [r0, #16]
   247fc:	bl	1388c <__assert_fail@plt+0x23f8>
   24800:	ldr	r0, [fp, #-8]
   24804:	movw	r1, #0
   24808:	str	r1, [r0, #16]
   2480c:	ldr	r0, [sp, #20]
   24810:	str	r0, [fp, #-4]
   24814:	ldr	r0, [fp, #-4]
   24818:	mov	sp, fp
   2481c:	pop	{fp, pc}
   24820:	strdeq	fp, [r3], -ip
   24824:	smlabteq	r1, r6, r2, r0
   24828:	subeq	r0, r0, r0
   2482c:	push	{fp, lr}
   24830:	mov	fp, sp
   24834:	sub	sp, sp, #40	; 0x28
   24838:	str	r0, [fp, #-4]
   2483c:	str	r1, [fp, #-8]
   24840:	str	r2, [fp, #-12]
   24844:	str	r3, [fp, #-16]
   24848:	movw	r0, #17
   2484c:	str	r0, [sp, #12]
   24850:	ldr	r0, [fp, #-4]
   24854:	cmp	r0, #0
   24858:	movw	r0, #1
   2485c:	str	r0, [sp, #4]
   24860:	blt	2487c <__assert_fail@plt+0x133e8>
   24864:	ldr	r0, [fp, #-4]
   24868:	ldr	r1, [sp, #12]
   2486c:	cmp	r0, r1
   24870:	movw	r0, #0
   24874:	movge	r0, #1
   24878:	str	r0, [sp, #4]
   2487c:	ldr	r0, [sp, #4]
   24880:	tst	r0, #1
   24884:	beq	2488c <__assert_fail@plt+0x133f8>
   24888:	bl	1147c <abort@plt>
   2488c:	ldr	r0, [fp, #-4]
   24890:	movw	r1, #22224	; 0x56d0
   24894:	movt	r1, #4
   24898:	add	r0, r1, r0, lsl #2
   2489c:	ldr	r0, [r0]
   248a0:	movw	r1, #21840	; 0x5550
   248a4:	movt	r1, #4
   248a8:	add	r0, r1, r0
   248ac:	bl	11380 <gettext@plt>
   248b0:	str	r0, [sp, #20]
   248b4:	ldr	r0, [sp, #20]
   248b8:	bl	1138c <strlen@plt>
   248bc:	add	r0, r0, #1
   248c0:	str	r0, [sp, #16]
   248c4:	ldr	r0, [fp, #-16]
   248c8:	cmp	r0, #0
   248cc:	beq	24918 <__assert_fail@plt+0x13484>
   248d0:	ldr	r0, [sp, #16]
   248d4:	str	r0, [sp, #8]
   248d8:	ldr	r0, [sp, #16]
   248dc:	ldr	r1, [fp, #-16]
   248e0:	cmp	r0, r1
   248e4:	bls	24908 <__assert_fail@plt+0x13474>
   248e8:	ldr	r0, [fp, #-16]
   248ec:	sub	r0, r0, #1
   248f0:	str	r0, [sp, #8]
   248f4:	ldr	r0, [fp, #-12]
   248f8:	ldr	r1, [sp, #8]
   248fc:	add	r0, r0, r1
   24900:	movw	r1, #0
   24904:	strb	r1, [r0]
   24908:	ldr	r0, [fp, #-12]
   2490c:	ldr	r1, [sp, #20]
   24910:	ldr	r2, [sp, #8]
   24914:	bl	11248 <memcpy@plt>
   24918:	ldr	r0, [sp, #16]
   2491c:	mov	sp, fp
   24920:	pop	{fp, pc}
   24924:	push	{fp, lr}
   24928:	mov	fp, sp
   2492c:	sub	sp, sp, #8
   24930:	str	r0, [sp, #4]
   24934:	ldr	r0, [sp, #4]
   24938:	ldr	r0, [r0]
   2493c:	str	r0, [sp]
   24940:	ldr	r0, [sp]
   24944:	movw	r1, #0
   24948:	cmp	r0, r1
   2494c:	beq	24994 <__assert_fail@plt+0x13500>
   24950:	movw	r0, #0
   24954:	movt	r0, #0
   24958:	cmp	r0, #0
   2495c:	bne	24978 <__assert_fail@plt+0x134e4>
   24960:	b	24964 <__assert_fail@plt+0x134d0>
   24964:	movw	r0, #0
   24968:	movt	r0, #0
   2496c:	cmp	r0, #0
   24970:	beq	24988 <__assert_fail@plt+0x134f4>
   24974:	b	24978 <__assert_fail@plt+0x134e4>
   24978:	ldr	r0, [sp]
   2497c:	add	r0, r0, #136	; 0x88
   24980:	bl	111f4 <pthread_mutex_destroy@plt>
   24984:	b	2498c <__assert_fail@plt+0x134f8>
   24988:	b	2498c <__assert_fail@plt+0x134f8>
   2498c:	ldr	r0, [sp]
   24990:	bl	249e0 <__assert_fail@plt+0x1354c>
   24994:	ldr	r0, [sp, #4]
   24998:	movw	r1, #0
   2499c:	str	r1, [r0]
   249a0:	ldr	r0, [sp, #4]
   249a4:	str	r1, [r0, #4]
   249a8:	ldr	r0, [sp, #4]
   249ac:	ldr	r0, [r0, #16]
   249b0:	bl	1388c <__assert_fail@plt+0x23f8>
   249b4:	ldr	r0, [sp, #4]
   249b8:	movw	r1, #0
   249bc:	str	r1, [r0, #16]
   249c0:	ldr	r0, [sp, #4]
   249c4:	ldr	r0, [r0, #20]
   249c8:	bl	1388c <__assert_fail@plt+0x23f8>
   249cc:	ldr	r0, [sp, #4]
   249d0:	movw	r1, #0
   249d4:	str	r1, [r0, #20]
   249d8:	mov	sp, fp
   249dc:	pop	{fp, pc}
   249e0:	push	{fp, lr}
   249e4:	mov	fp, sp
   249e8:	sub	sp, sp, #24
   249ec:	str	r0, [fp, #-4]
   249f0:	ldr	r0, [fp, #-4]
   249f4:	ldr	r0, [r0]
   249f8:	movw	r1, #0
   249fc:	cmp	r0, r1
   24a00:	beq	24a48 <__assert_fail@plt+0x135b4>
   24a04:	movw	r0, #0
   24a08:	str	r0, [fp, #-8]
   24a0c:	ldr	r0, [fp, #-8]
   24a10:	ldr	r1, [fp, #-4]
   24a14:	ldr	r1, [r1, #8]
   24a18:	cmp	r0, r1
   24a1c:	bcs	24a44 <__assert_fail@plt+0x135b0>
   24a20:	ldr	r0, [fp, #-4]
   24a24:	ldr	r0, [r0]
   24a28:	ldr	r1, [fp, #-8]
   24a2c:	add	r0, r0, r1, lsl #3
   24a30:	bl	26620 <__assert_fail@plt+0x1518c>
   24a34:	ldr	r0, [fp, #-8]
   24a38:	add	r0, r0, #1
   24a3c:	str	r0, [fp, #-8]
   24a40:	b	24a0c <__assert_fail@plt+0x13578>
   24a44:	b	24a48 <__assert_fail@plt+0x135b4>
   24a48:	ldr	r0, [fp, #-4]
   24a4c:	ldr	r0, [r0, #12]
   24a50:	bl	1388c <__assert_fail@plt+0x23f8>
   24a54:	movw	r0, #0
   24a58:	str	r0, [fp, #-8]
   24a5c:	ldr	r0, [fp, #-8]
   24a60:	ldr	r1, [fp, #-4]
   24a64:	ldr	r1, [r1, #8]
   24a68:	cmp	r0, r1
   24a6c:	bcs	24b20 <__assert_fail@plt+0x1368c>
   24a70:	ldr	r0, [fp, #-4]
   24a74:	ldr	r0, [r0, #24]
   24a78:	movw	r1, #0
   24a7c:	cmp	r0, r1
   24a80:	beq	24aa4 <__assert_fail@plt+0x13610>
   24a84:	ldr	r0, [fp, #-4]
   24a88:	ldr	r0, [r0, #24]
   24a8c:	ldr	r1, [fp, #-8]
   24a90:	movw	r2, #12
   24a94:	mul	r1, r1, r2
   24a98:	add	r0, r0, r1
   24a9c:	ldr	r0, [r0, #8]
   24aa0:	bl	1388c <__assert_fail@plt+0x23f8>
   24aa4:	ldr	r0, [fp, #-4]
   24aa8:	ldr	r0, [r0, #28]
   24aac:	movw	r1, #0
   24ab0:	cmp	r0, r1
   24ab4:	beq	24ad8 <__assert_fail@plt+0x13644>
   24ab8:	ldr	r0, [fp, #-4]
   24abc:	ldr	r0, [r0, #28]
   24ac0:	ldr	r1, [fp, #-8]
   24ac4:	movw	r2, #12
   24ac8:	mul	r1, r1, r2
   24acc:	add	r0, r0, r1
   24ad0:	ldr	r0, [r0, #8]
   24ad4:	bl	1388c <__assert_fail@plt+0x23f8>
   24ad8:	ldr	r0, [fp, #-4]
   24adc:	ldr	r0, [r0, #20]
   24ae0:	movw	r1, #0
   24ae4:	cmp	r0, r1
   24ae8:	beq	24b0c <__assert_fail@plt+0x13678>
   24aec:	ldr	r0, [fp, #-4]
   24af0:	ldr	r0, [r0, #20]
   24af4:	ldr	r1, [fp, #-8]
   24af8:	movw	r2, #12
   24afc:	mul	r1, r1, r2
   24b00:	add	r0, r0, r1
   24b04:	ldr	r0, [r0, #8]
   24b08:	bl	1388c <__assert_fail@plt+0x23f8>
   24b0c:	b	24b10 <__assert_fail@plt+0x1367c>
   24b10:	ldr	r0, [fp, #-8]
   24b14:	add	r0, r0, #1
   24b18:	str	r0, [fp, #-8]
   24b1c:	b	24a5c <__assert_fail@plt+0x135c8>
   24b20:	ldr	r0, [fp, #-4]
   24b24:	ldr	r0, [r0, #20]
   24b28:	bl	1388c <__assert_fail@plt+0x23f8>
   24b2c:	ldr	r0, [fp, #-4]
   24b30:	ldr	r0, [r0, #24]
   24b34:	bl	1388c <__assert_fail@plt+0x23f8>
   24b38:	ldr	r0, [fp, #-4]
   24b3c:	ldr	r0, [r0, #28]
   24b40:	bl	1388c <__assert_fail@plt+0x23f8>
   24b44:	ldr	r0, [fp, #-4]
   24b48:	ldr	r0, [r0]
   24b4c:	bl	1388c <__assert_fail@plt+0x23f8>
   24b50:	ldr	r0, [fp, #-4]
   24b54:	ldr	r0, [r0, #32]
   24b58:	movw	r1, #0
   24b5c:	cmp	r0, r1
   24b60:	beq	24c08 <__assert_fail@plt+0x13774>
   24b64:	movw	r0, #0
   24b68:	str	r0, [fp, #-8]
   24b6c:	ldr	r0, [fp, #-8]
   24b70:	ldr	r1, [fp, #-4]
   24b74:	ldr	r1, [r1, #68]	; 0x44
   24b78:	cmp	r0, r1
   24b7c:	bhi	24c04 <__assert_fail@plt+0x13770>
   24b80:	ldr	r0, [fp, #-4]
   24b84:	ldr	r0, [r0, #32]
   24b88:	ldr	r1, [fp, #-8]
   24b8c:	movw	r2, #12
   24b90:	mul	r1, r1, r2
   24b94:	add	r0, r0, r1
   24b98:	str	r0, [sp, #8]
   24b9c:	movw	r0, #0
   24ba0:	str	r0, [sp, #12]
   24ba4:	ldr	r0, [sp, #12]
   24ba8:	ldr	r1, [sp, #8]
   24bac:	ldr	r1, [r1]
   24bb0:	cmp	r0, r1
   24bb4:	bge	24be8 <__assert_fail@plt+0x13754>
   24bb8:	ldr	r0, [sp, #8]
   24bbc:	ldr	r0, [r0, #8]
   24bc0:	ldr	r1, [sp, #12]
   24bc4:	add	r0, r0, r1, lsl #2
   24bc8:	ldr	r0, [r0]
   24bcc:	str	r0, [sp, #4]
   24bd0:	ldr	r0, [sp, #4]
   24bd4:	bl	266b0 <__assert_fail@plt+0x1521c>
   24bd8:	ldr	r0, [sp, #12]
   24bdc:	add	r0, r0, #1
   24be0:	str	r0, [sp, #12]
   24be4:	b	24ba4 <__assert_fail@plt+0x13710>
   24be8:	ldr	r0, [sp, #8]
   24bec:	ldr	r0, [r0, #8]
   24bf0:	bl	1388c <__assert_fail@plt+0x23f8>
   24bf4:	ldr	r0, [fp, #-8]
   24bf8:	add	r0, r0, #1
   24bfc:	str	r0, [fp, #-8]
   24c00:	b	24b6c <__assert_fail@plt+0x136d8>
   24c04:	b	24c08 <__assert_fail@plt+0x13774>
   24c08:	ldr	r0, [fp, #-4]
   24c0c:	ldr	r0, [r0, #32]
   24c10:	bl	1388c <__assert_fail@plt+0x23f8>
   24c14:	ldr	r0, [fp, #-4]
   24c18:	ldr	r0, [r0, #60]	; 0x3c
   24c1c:	movw	r1, #22292	; 0x5714
   24c20:	movt	r1, #4
   24c24:	cmp	r0, r1
   24c28:	beq	24c38 <__assert_fail@plt+0x137a4>
   24c2c:	ldr	r0, [fp, #-4]
   24c30:	ldr	r0, [r0, #60]	; 0x3c
   24c34:	bl	1388c <__assert_fail@plt+0x23f8>
   24c38:	ldr	r0, [fp, #-4]
   24c3c:	ldr	r0, [r0, #132]	; 0x84
   24c40:	bl	1388c <__assert_fail@plt+0x23f8>
   24c44:	ldr	r0, [fp, #-4]
   24c48:	bl	1388c <__assert_fail@plt+0x23f8>
   24c4c:	mov	sp, fp
   24c50:	pop	{fp, pc}
   24c54:	push	{r4, r5, r6, sl, fp, lr}
   24c58:	add	fp, sp, #16
   24c5c:	sub	sp, sp, #56	; 0x38
   24c60:	ldr	ip, [fp, #8]
   24c64:	str	r0, [fp, #-24]	; 0xffffffe8
   24c68:	str	r1, [fp, #-28]	; 0xffffffe4
   24c6c:	str	r2, [fp, #-32]	; 0xffffffe0
   24c70:	str	r3, [sp, #36]	; 0x24
   24c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c78:	ldr	r0, [r0]
   24c7c:	str	r0, [sp, #20]
   24c80:	ldr	r0, [fp, #8]
   24c84:	mvn	r1, #7
   24c88:	and	r0, r0, r1
   24c8c:	cmp	r0, #0
   24c90:	beq	24ca0 <__assert_fail@plt+0x1380c>
   24c94:	movw	r0, #2
   24c98:	str	r0, [fp, #-20]	; 0xffffffec
   24c9c:	b	24e08 <__assert_fail@plt+0x13974>
   24ca0:	ldr	r0, [fp, #8]
   24ca4:	and	r0, r0, #4
   24ca8:	cmp	r0, #0
   24cac:	beq	24ccc <__assert_fail@plt+0x13838>
   24cb0:	ldr	r0, [sp, #36]	; 0x24
   24cb4:	ldr	r0, [r0]
   24cb8:	str	r0, [sp, #28]
   24cbc:	ldr	r0, [sp, #36]	; 0x24
   24cc0:	ldr	r0, [r0, #4]
   24cc4:	str	r0, [sp, #24]
   24cc8:	b	24ce0 <__assert_fail@plt+0x1384c>
   24ccc:	movw	r0, #0
   24cd0:	str	r0, [sp, #28]
   24cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24cd8:	bl	1138c <strlen@plt>
   24cdc:	str	r0, [sp, #24]
   24ce0:	movw	r0, #0
   24ce4:	movt	r0, #0
   24ce8:	cmp	r0, #0
   24cec:	bne	24d08 <__assert_fail@plt+0x13874>
   24cf0:	b	24cf4 <__assert_fail@plt+0x13860>
   24cf4:	movw	r0, #0
   24cf8:	movt	r0, #0
   24cfc:	cmp	r0, #0
   24d00:	beq	24d18 <__assert_fail@plt+0x13884>
   24d04:	b	24d08 <__assert_fail@plt+0x13874>
   24d08:	ldr	r0, [sp, #20]
   24d0c:	add	r0, r0, #136	; 0x88
   24d10:	bl	11230 <pthread_mutex_lock@plt>
   24d14:	b	24d1c <__assert_fail@plt+0x13888>
   24d18:	b	24d1c <__assert_fail@plt+0x13888>
   24d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d20:	ldrb	r0, [r0, #28]
   24d24:	ubfx	r0, r0, #4, #1
   24d28:	and	r0, r0, #255	; 0xff
   24d2c:	cmp	r0, #0
   24d30:	beq	24d74 <__assert_fail@plt+0x138e0>
   24d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24d3c:	ldr	r2, [sp, #24]
   24d40:	ldr	r3, [sp, #28]
   24d44:	ldr	ip, [sp, #24]
   24d48:	ldr	lr, [sp, #24]
   24d4c:	ldr	r4, [fp, #8]
   24d50:	str	ip, [sp]
   24d54:	str	lr, [sp, #4]
   24d58:	movw	ip, #0
   24d5c:	str	ip, [sp, #8]
   24d60:	str	ip, [sp, #12]
   24d64:	str	r4, [sp, #16]
   24d68:	bl	24e14 <__assert_fail@plt+0x13980>
   24d6c:	str	r0, [sp, #32]
   24d70:	b	24db4 <__assert_fail@plt+0x13920>
   24d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24d7c:	ldr	r2, [sp, #24]
   24d80:	ldr	r3, [sp, #28]
   24d84:	ldr	ip, [sp, #24]
   24d88:	ldr	lr, [sp, #24]
   24d8c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   24d90:	ldr	r5, [sp, #36]	; 0x24
   24d94:	ldr	r6, [fp, #8]
   24d98:	str	ip, [sp]
   24d9c:	str	lr, [sp, #4]
   24da0:	str	r4, [sp, #8]
   24da4:	str	r5, [sp, #12]
   24da8:	str	r6, [sp, #16]
   24dac:	bl	24e14 <__assert_fail@plt+0x13980>
   24db0:	str	r0, [sp, #32]
   24db4:	movw	r0, #0
   24db8:	movt	r0, #0
   24dbc:	cmp	r0, #0
   24dc0:	bne	24ddc <__assert_fail@plt+0x13948>
   24dc4:	b	24dc8 <__assert_fail@plt+0x13934>
   24dc8:	movw	r0, #0
   24dcc:	movt	r0, #0
   24dd0:	cmp	r0, #0
   24dd4:	beq	24dec <__assert_fail@plt+0x13958>
   24dd8:	b	24ddc <__assert_fail@plt+0x13948>
   24ddc:	ldr	r0, [sp, #20]
   24de0:	add	r0, r0, #136	; 0x88
   24de4:	bl	1117c <pthread_mutex_unlock@plt>
   24de8:	b	24df0 <__assert_fail@plt+0x1395c>
   24dec:	b	24df0 <__assert_fail@plt+0x1395c>
   24df0:	ldr	r0, [sp, #32]
   24df4:	cmp	r0, #0
   24df8:	movw	r0, #0
   24dfc:	movne	r0, #1
   24e00:	and	r0, r0, #1
   24e04:	str	r0, [fp, #-20]	; 0xffffffec
   24e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   24e0c:	sub	sp, fp, #16
   24e10:	pop	{r4, r5, r6, sl, fp, pc}
   24e14:	push	{r4, r5, r6, sl, fp, lr}
   24e18:	add	fp, sp, #16
   24e1c:	sub	sp, sp, #376	; 0x178
   24e20:	ldr	ip, [fp, #24]
   24e24:	ldr	lr, [fp, #20]
   24e28:	ldr	r4, [fp, #16]
   24e2c:	ldr	r5, [fp, #12]
   24e30:	ldr	r6, [fp, #8]
   24e34:	str	r0, [fp, #-24]	; 0xffffffe8
   24e38:	str	r1, [fp, #-28]	; 0xffffffe4
   24e3c:	str	r2, [fp, #-32]	; 0xffffffe0
   24e40:	str	r3, [fp, #-36]	; 0xffffffdc
   24e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e48:	ldr	r0, [r0]
   24e4c:	str	r0, [fp, #-44]	; 0xffffffd4
   24e50:	mvn	r0, #0
   24e54:	str	r0, [fp, #-72]	; 0xffffffb8
   24e58:	add	r0, sp, #172	; 0xac
   24e5c:	mov	r1, #0
   24e60:	mov	r2, #136	; 0x88
   24e64:	str	ip, [sp, #148]	; 0x94
   24e68:	str	lr, [sp, #144]	; 0x90
   24e6c:	str	r4, [sp, #140]	; 0x8c
   24e70:	str	r5, [sp, #136]	; 0x88
   24e74:	str	r6, [sp, #132]	; 0x84
   24e78:	bl	113d4 <memset@plt>
   24e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24e80:	str	r1, [sp, #256]	; 0x100
   24e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24e88:	ldr	r1, [r1, #16]
   24e8c:	movw	r2, #0
   24e90:	cmp	r1, r2
   24e94:	beq	24ee8 <__assert_fail@plt+0x13a54>
   24e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e9c:	ldrb	r0, [r0, #28]
   24ea0:	ubfx	r0, r0, #3, #1
   24ea4:	and	r0, r0, #255	; 0xff
   24ea8:	cmp	r0, #0
   24eac:	beq	24ee8 <__assert_fail@plt+0x13a54>
   24eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24eb4:	ldr	r1, [fp, #8]
   24eb8:	cmp	r0, r1
   24ebc:	beq	24ee8 <__assert_fail@plt+0x13a54>
   24ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24ec4:	ldrb	r0, [r0, #28]
   24ec8:	and	r0, r0, #1
   24ecc:	and	r0, r0, #255	; 0xff
   24ed0:	cmp	r0, #0
   24ed4:	bne	24ee8 <__assert_fail@plt+0x13a54>
   24ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24edc:	ldr	r0, [r0, #16]
   24ee0:	str	r0, [sp, #128]	; 0x80
   24ee4:	b	24ef4 <__assert_fail@plt+0x13a60>
   24ee8:	movw	r0, #0
   24eec:	str	r0, [sp, #128]	; 0x80
   24ef0:	b	24ef4 <__assert_fail@plt+0x13a60>
   24ef4:	ldr	r0, [sp, #128]	; 0x80
   24ef8:	str	r0, [sp, #168]	; 0xa8
   24efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24f00:	ldr	r0, [r0, #20]
   24f04:	str	r0, [sp, #164]	; 0xa4
   24f08:	ldr	r0, [fp, #16]
   24f0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24f10:	ldr	r1, [r1, #24]
   24f14:	cmp	r0, r1
   24f18:	bls	24f38 <__assert_fail@plt+0x13aa4>
   24f1c:	ldr	r0, [fp, #16]
   24f20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24f24:	ldr	r1, [r1, #24]
   24f28:	add	r1, r1, #1
   24f2c:	sub	r0, r0, r1
   24f30:	str	r0, [sp, #124]	; 0x7c
   24f34:	b	24f44 <__assert_fail@plt+0x13ab0>
   24f38:	movw	r0, #0
   24f3c:	str	r0, [sp, #124]	; 0x7c
   24f40:	b	24f44 <__assert_fail@plt+0x13ab0>
   24f44:	ldr	r0, [sp, #124]	; 0x7c
   24f48:	str	r0, [fp, #-76]	; 0xffffffb4
   24f4c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   24f50:	ldr	r1, [fp, #16]
   24f54:	sub	r0, r1, r0
   24f58:	str	r0, [fp, #16]
   24f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24f60:	ldr	r0, [r0, #8]
   24f64:	cmp	r0, #0
   24f68:	movw	r0, #1
   24f6c:	str	r0, [sp, #120]	; 0x78
   24f70:	beq	24fe4 <__assert_fail@plt+0x13b50>
   24f74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24f78:	ldr	r0, [r0, #36]	; 0x24
   24f7c:	movw	r1, #0
   24f80:	cmp	r0, r1
   24f84:	movw	r0, #1
   24f88:	str	r0, [sp, #120]	; 0x78
   24f8c:	beq	24fe4 <__assert_fail@plt+0x13b50>
   24f90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24f94:	ldr	r0, [r0, #40]	; 0x28
   24f98:	movw	r1, #0
   24f9c:	cmp	r0, r1
   24fa0:	movw	r0, #1
   24fa4:	str	r0, [sp, #120]	; 0x78
   24fa8:	beq	24fe4 <__assert_fail@plt+0x13b50>
   24fac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24fb0:	ldr	r0, [r0, #44]	; 0x2c
   24fb4:	movw	r1, #0
   24fb8:	cmp	r0, r1
   24fbc:	movw	r0, #1
   24fc0:	str	r0, [sp, #120]	; 0x78
   24fc4:	beq	24fe4 <__assert_fail@plt+0x13b50>
   24fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24fcc:	ldr	r0, [r0, #48]	; 0x30
   24fd0:	movw	r1, #0
   24fd4:	cmp	r0, r1
   24fd8:	movw	r0, #0
   24fdc:	moveq	r0, #1
   24fe0:	str	r0, [sp, #120]	; 0x78
   24fe4:	ldr	r0, [sp, #120]	; 0x78
   24fe8:	tst	r0, #1
   24fec:	beq	24ffc <__assert_fail@plt+0x13b68>
   24ff0:	movw	r0, #1
   24ff4:	str	r0, [fp, #-20]	; 0xffffffec
   24ff8:	b	25d18 <__assert_fail@plt+0x14884>
   24ffc:	ldr	r0, [fp, #8]
   25000:	movw	r1, #0
   25004:	cmp	r1, r0
   25008:	bgt	25020 <__assert_fail@plt+0x13b8c>
   2500c:	ldr	r0, [fp, #8]
   25010:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25014:	cmp	r0, r1
   25018:	bgt	25020 <__assert_fail@plt+0x13b8c>
   2501c:	b	25020 <__assert_fail@plt+0x13b8c>
   25020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25024:	ldr	r0, [r0, #36]	; 0x24
   25028:	ldr	r0, [r0, #8]
   2502c:	cmp	r0, #0
   25030:	bne	250a4 <__assert_fail@plt+0x13c10>
   25034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25038:	ldr	r0, [r0, #40]	; 0x28
   2503c:	ldr	r0, [r0, #8]
   25040:	cmp	r0, #0
   25044:	bne	250a4 <__assert_fail@plt+0x13c10>
   25048:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2504c:	ldr	r0, [r0, #44]	; 0x2c
   25050:	ldr	r0, [r0, #8]
   25054:	cmp	r0, #0
   25058:	beq	25074 <__assert_fail@plt+0x13be0>
   2505c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25060:	ldrb	r0, [r0, #28]
   25064:	lsr	r0, r0, #7
   25068:	and	r0, r0, #255	; 0xff
   2506c:	cmp	r0, #0
   25070:	bne	250a4 <__assert_fail@plt+0x13c10>
   25074:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25078:	cmp	r0, #0
   2507c:	beq	25098 <__assert_fail@plt+0x13c04>
   25080:	ldr	r0, [fp, #8]
   25084:	cmp	r0, #0
   25088:	beq	25098 <__assert_fail@plt+0x13c04>
   2508c:	movw	r0, #1
   25090:	str	r0, [fp, #-20]	; 0xffffffec
   25094:	b	25d18 <__assert_fail@plt+0x14884>
   25098:	movw	r0, #0
   2509c:	str	r0, [fp, #8]
   250a0:	str	r0, [fp, #-36]	; 0xffffffdc
   250a4:	ldr	r0, [fp, #16]
   250a8:	cmp	r0, #0
   250ac:	movw	r0, #1
   250b0:	str	r0, [sp, #116]	; 0x74
   250b4:	bne	250d0 <__assert_fail@plt+0x13c3c>
   250b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   250bc:	ldr	r0, [r0, #76]	; 0x4c
   250c0:	cmp	r0, #0
   250c4:	movw	r0, #0
   250c8:	movne	r0, #1
   250cc:	str	r0, [sp, #116]	; 0x74
   250d0:	ldr	r0, [sp, #116]	; 0x74
   250d4:	add	r1, sp, #172	; 0xac
   250d8:	and	r0, r0, #1
   250dc:	strb	r0, [fp, #-57]	; 0xffffffc7
   250e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   250e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   250e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   250ec:	ldr	r3, [r3, #8]
   250f0:	add	r3, r3, #1
   250f4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   250f8:	ldr	ip, [ip, #20]
   250fc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   25100:	ldr	lr, [lr, #12]
   25104:	and	lr, lr, #4194304	; 0x400000
   25108:	cmp	lr, #0
   2510c:	movw	lr, #0
   25110:	movne	lr, #1
   25114:	ldr	r4, [fp, #-44]	; 0xffffffd4
   25118:	str	r0, [sp, #112]	; 0x70
   2511c:	mov	r0, r1
   25120:	ldr	r1, [sp, #112]	; 0x70
   25124:	str	ip, [sp]
   25128:	and	ip, lr, #1
   2512c:	str	ip, [sp, #4]
   25130:	str	r4, [sp, #8]
   25134:	bl	3187c <__assert_fail@plt+0x203e8>
   25138:	str	r0, [fp, #-40]	; 0xffffffd8
   2513c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25140:	cmp	r0, #0
   25144:	beq	2514c <__assert_fail@plt+0x13cb8>
   25148:	b	25ce8 <__assert_fail@plt+0x14854>
   2514c:	ldr	r0, [fp, #12]
   25150:	str	r0, [sp, #228]	; 0xe4
   25154:	ldr	r0, [fp, #12]
   25158:	str	r0, [sp, #224]	; 0xe0
   2515c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25160:	ldrb	r0, [r0, #28]
   25164:	lsr	r0, r0, #7
   25168:	strb	r0, [sp, #249]	; 0xf9
   2516c:	ldr	r1, [fp, #24]
   25170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25174:	ldr	r0, [r0, #76]	; 0x4c
   25178:	lsl	r2, r0, #1
   2517c:	add	r0, sp, #172	; 0xac
   25180:	bl	31a10 <__assert_fail@plt+0x2057c>
   25184:	str	r0, [fp, #-40]	; 0xffffffd8
   25188:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2518c:	cmp	r0, #0
   25190:	beq	25198 <__assert_fail@plt+0x13d04>
   25194:	b	25ce8 <__assert_fail@plt+0x14854>
   25198:	ldr	r0, [fp, #16]
   2519c:	cmp	r0, #1
   251a0:	bhi	251bc <__assert_fail@plt+0x13d28>
   251a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   251a8:	ldrb	r0, [r0, #88]	; 0x58
   251ac:	ubfx	r0, r0, #1, #1
   251b0:	and	r0, r0, #255	; 0xff
   251b4:	cmp	r0, #0
   251b8:	beq	2520c <__assert_fail@plt+0x13d78>
   251bc:	ldr	r0, [pc, #2912]	; 25d24 <__assert_fail@plt+0x14890>
   251c0:	ldr	r1, [sp, #208]	; 0xd0
   251c4:	cmp	r0, r1
   251c8:	bhi	251d8 <__assert_fail@plt+0x13d44>
   251cc:	movw	r0, #12
   251d0:	str	r0, [fp, #-40]	; 0xffffffd8
   251d4:	b	25ce8 <__assert_fail@plt+0x14854>
   251d8:	ldr	r0, [sp, #208]	; 0xd0
   251dc:	add	r0, r0, #1
   251e0:	lsl	r0, r0, #2
   251e4:	bl	3f908 <__assert_fail@plt+0x2e474>
   251e8:	str	r0, [sp, #272]	; 0x110
   251ec:	ldr	r0, [sp, #272]	; 0x110
   251f0:	movw	r1, #0
   251f4:	cmp	r0, r1
   251f8:	bne	25208 <__assert_fail@plt+0x13d74>
   251fc:	movw	r0, #12
   25200:	str	r0, [fp, #-40]	; 0xffffffd8
   25204:	b	25ce8 <__assert_fail@plt+0x14854>
   25208:	b	2520c <__assert_fail@plt+0x13d78>
   2520c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25210:	str	r0, [fp, #-68]	; 0xffffffbc
   25214:	ldr	r0, [fp, #24]
   25218:	and	r0, r0, #1
   2521c:	cmp	r0, #0
   25220:	movw	r0, #0
   25224:	movne	r0, #1
   25228:	tst	r0, #1
   2522c:	movw	r0, #4
   25230:	moveq	r0, #6
   25234:	str	r0, [sp, #232]	; 0xe8
   25238:	ldr	r0, [fp, #8]
   2523c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25240:	cmp	r0, r1
   25244:	movw	r0, #0
   25248:	movlt	r0, #1
   2524c:	tst	r0, #1
   25250:	mvn	r0, #0
   25254:	moveq	r0, #1
   25258:	str	r0, [fp, #-56]	; 0xffffffc8
   2525c:	ldr	r0, [fp, #8]
   25260:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25264:	cmp	r0, r1
   25268:	bge	25278 <__assert_fail@plt+0x13de4>
   2526c:	ldr	r0, [fp, #8]
   25270:	str	r0, [sp, #108]	; 0x6c
   25274:	b	25280 <__assert_fail@plt+0x13dec>
   25278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2527c:	str	r0, [sp, #108]	; 0x6c
   25280:	ldr	r0, [sp, #108]	; 0x6c
   25284:	str	r0, [fp, #-48]	; 0xffffffd0
   25288:	ldr	r0, [fp, #8]
   2528c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25290:	cmp	r0, r1
   25294:	bge	252a4 <__assert_fail@plt+0x13e10>
   25298:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2529c:	str	r0, [sp, #104]	; 0x68
   252a0:	b	252ac <__assert_fail@plt+0x13e18>
   252a4:	ldr	r0, [fp, #8]
   252a8:	str	r0, [sp, #104]	; 0x68
   252ac:	ldr	r0, [sp, #104]	; 0x68
   252b0:	str	r0, [fp, #-52]	; 0xffffffcc
   252b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   252b8:	ldr	r0, [r0, #92]	; 0x5c
   252bc:	cmp	r0, #1
   252c0:	movw	r0, #0
   252c4:	moveq	r0, #1
   252c8:	and	r0, r0, #1
   252cc:	strb	r0, [fp, #-77]	; 0xffffffb3
   252d0:	ldr	r0, [sp, #168]	; 0xa8
   252d4:	movw	r1, #0
   252d8:	cmp	r0, r1
   252dc:	beq	25398 <__assert_fail@plt+0x13f04>
   252e0:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   252e4:	tst	r0, #1
   252e8:	movw	r0, #1
   252ec:	str	r0, [sp, #100]	; 0x64
   252f0:	bne	25338 <__assert_fail@plt+0x13ea4>
   252f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   252f8:	ldr	r0, [r0, #12]
   252fc:	and	r0, r0, #4194304	; 0x400000
   25300:	cmp	r0, #0
   25304:	movw	r0, #1
   25308:	str	r0, [sp, #96]	; 0x60
   2530c:	bne	25328 <__assert_fail@plt+0x13e94>
   25310:	ldr	r0, [sp, #164]	; 0xa4
   25314:	movw	r1, #0
   25318:	cmp	r0, r1
   2531c:	movw	r0, #0
   25320:	movne	r0, #1
   25324:	str	r0, [sp, #96]	; 0x60
   25328:	ldr	r0, [sp, #96]	; 0x60
   2532c:	mvn	r1, #0
   25330:	eor	r0, r0, r1
   25334:	str	r0, [sp, #100]	; 0x64
   25338:	ldr	r0, [sp, #100]	; 0x64
   2533c:	tst	r0, #1
   25340:	movw	r0, #4
   25344:	moveq	r0, #0
   25348:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2534c:	ldr	r2, [fp, #8]
   25350:	cmp	r1, r2
   25354:	movw	r1, #0
   25358:	movle	r1, #1
   2535c:	tst	r1, #1
   25360:	movw	r1, #2
   25364:	moveq	r1, #0
   25368:	orr	r0, r0, r1
   2536c:	ldr	r1, [sp, #164]	; 0xa4
   25370:	movw	r2, #0
   25374:	cmp	r1, r2
   25378:	movw	r1, #0
   2537c:	movne	r1, #1
   25380:	tst	r1, #1
   25384:	movw	r1, #1
   25388:	moveq	r1, #0
   2538c:	orr	r0, r0, r1
   25390:	str	r0, [sp, #92]	; 0x5c
   25394:	b	253a4 <__assert_fail@plt+0x13f10>
   25398:	movw	r0, #8
   2539c:	str	r0, [sp, #92]	; 0x5c
   253a0:	b	253a4 <__assert_fail@plt+0x13f10>
   253a4:	ldr	r0, [sp, #92]	; 0x5c
   253a8:	str	r0, [fp, #-64]	; 0xffffffc0
   253ac:	movw	r0, #1
   253b0:	str	r0, [fp, #-40]	; 0xffffffd8
   253b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   253b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   253bc:	cmp	r0, r1
   253c0:	blt	253d4 <__assert_fail@plt+0x13f40>
   253c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   253c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   253cc:	cmp	r0, r1
   253d0:	bge	253d8 <__assert_fail@plt+0x13f44>
   253d4:	b	25ce8 <__assert_fail@plt+0x14854>
   253d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   253dc:	sub	r0, r0, #4
   253e0:	cmp	r0, #4
   253e4:	str	r0, [sp, #88]	; 0x58
   253e8:	bhi	25670 <__assert_fail@plt+0x141dc>
   253ec:	add	r0, pc, #8
   253f0:	ldr	r1, [sp, #88]	; 0x58
   253f4:	ldr	r0, [r0, r1, lsl #2]
   253f8:	mov	pc, r0
   253fc:	andeq	r5, r2, r4, lsr #11
   25400:	andeq	r5, r2, r4, lsr #11
   25404:	muleq	r2, r0, r4
   25408:	andeq	r5, r2, r4, lsl r4
   2540c:	andeq	r5, r2, r0, lsl r4
   25410:	b	25764 <__assert_fail@plt+0x142d0>
   25414:	b	25418 <__assert_fail@plt+0x13f84>
   25418:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2541c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   25420:	cmp	r0, r1
   25424:	movw	r0, #0
   25428:	str	r0, [sp, #84]	; 0x54
   2542c:	bge	25470 <__assert_fail@plt+0x13fdc>
   25430:	ldr	r0, [sp, #168]	; 0xa8
   25434:	ldr	r1, [sp, #164]	; 0xa4
   25438:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2543c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25440:	add	r2, r2, r3
   25444:	ldrb	r2, [r2]
   25448:	add	r1, r1, r2
   2544c:	ldrb	r1, [r1]
   25450:	add	r0, r0, r1
   25454:	ldrsb	r0, [r0]
   25458:	cmp	r0, #0
   2545c:	movw	r0, #0
   25460:	movne	r0, #1
   25464:	mvn	r1, #0
   25468:	eor	r0, r0, r1
   2546c:	str	r0, [sp, #84]	; 0x54
   25470:	ldr	r0, [sp, #84]	; 0x54
   25474:	tst	r0, #1
   25478:	beq	2548c <__assert_fail@plt+0x13ff8>
   2547c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25480:	add	r0, r0, #1
   25484:	str	r0, [fp, #-68]	; 0xffffffbc
   25488:	b	25418 <__assert_fail@plt+0x13f84>
   2548c:	b	25500 <__assert_fail@plt+0x1406c>
   25490:	b	25494 <__assert_fail@plt+0x14000>
   25494:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25498:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2549c:	cmp	r0, r1
   254a0:	movw	r0, #0
   254a4:	str	r0, [sp, #80]	; 0x50
   254a8:	bge	254e0 <__assert_fail@plt+0x1404c>
   254ac:	ldr	r0, [sp, #168]	; 0xa8
   254b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   254b4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   254b8:	add	r1, r1, r2
   254bc:	ldrb	r1, [r1]
   254c0:	add	r0, r0, r1
   254c4:	ldrsb	r0, [r0]
   254c8:	cmp	r0, #0
   254cc:	movw	r0, #0
   254d0:	movne	r0, #1
   254d4:	mvn	r1, #0
   254d8:	eor	r0, r0, r1
   254dc:	str	r0, [sp, #80]	; 0x50
   254e0:	ldr	r0, [sp, #80]	; 0x50
   254e4:	tst	r0, #1
   254e8:	beq	254fc <__assert_fail@plt+0x14068>
   254ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   254f0:	add	r0, r0, #1
   254f4:	str	r0, [fp, #-68]	; 0xffffffbc
   254f8:	b	25494 <__assert_fail@plt+0x14000>
   254fc:	b	25500 <__assert_fail@plt+0x1406c>
   25500:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25504:	ldr	r1, [fp, #-52]	; 0xffffffcc
   25508:	cmp	r0, r1
   2550c:	bne	255a0 <__assert_fail@plt+0x1410c>
   25510:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25514:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25518:	cmp	r0, r1
   2551c:	blt	2552c <__assert_fail@plt+0x14098>
   25520:	movw	r0, #0
   25524:	str	r0, [sp, #76]	; 0x4c
   25528:	b	25540 <__assert_fail@plt+0x140ac>
   2552c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25530:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25534:	add	r0, r0, r1
   25538:	ldrb	r0, [r0]
   2553c:	str	r0, [sp, #76]	; 0x4c
   25540:	ldr	r0, [sp, #76]	; 0x4c
   25544:	str	r0, [fp, #-84]	; 0xffffffac
   25548:	ldr	r0, [sp, #168]	; 0xa8
   2554c:	ldr	r1, [sp, #164]	; 0xa4
   25550:	movw	r2, #0
   25554:	cmp	r1, r2
   25558:	str	r0, [sp, #72]	; 0x48
   2555c:	beq	25578 <__assert_fail@plt+0x140e4>
   25560:	ldr	r0, [sp, #164]	; 0xa4
   25564:	ldr	r1, [fp, #-84]	; 0xffffffac
   25568:	add	r0, r0, r1
   2556c:	ldrb	r0, [r0]
   25570:	str	r0, [sp, #68]	; 0x44
   25574:	b	25580 <__assert_fail@plt+0x140ec>
   25578:	ldr	r0, [fp, #-84]	; 0xffffffac
   2557c:	str	r0, [sp, #68]	; 0x44
   25580:	ldr	r0, [sp, #68]	; 0x44
   25584:	ldr	r1, [sp, #72]	; 0x48
   25588:	add	r0, r1, r0
   2558c:	ldrsb	r0, [r0]
   25590:	cmp	r0, #0
   25594:	bne	2559c <__assert_fail@plt+0x14108>
   25598:	b	25ce8 <__assert_fail@plt+0x14854>
   2559c:	b	255a0 <__assert_fail@plt+0x1410c>
   255a0:	b	25764 <__assert_fail@plt+0x142d0>
   255a4:	b	255a8 <__assert_fail@plt+0x14114>
   255a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   255ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   255b0:	cmp	r0, r1
   255b4:	blt	25658 <__assert_fail@plt+0x141c4>
   255b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   255bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   255c0:	cmp	r0, r1
   255c4:	blt	255d4 <__assert_fail@plt+0x14140>
   255c8:	movw	r0, #0
   255cc:	str	r0, [sp, #64]	; 0x40
   255d0:	b	255e8 <__assert_fail@plt+0x14154>
   255d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   255d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   255dc:	add	r0, r0, r1
   255e0:	ldrb	r0, [r0]
   255e4:	str	r0, [sp, #64]	; 0x40
   255e8:	ldr	r0, [sp, #64]	; 0x40
   255ec:	str	r0, [fp, #-84]	; 0xffffffac
   255f0:	ldr	r0, [sp, #168]	; 0xa8
   255f4:	ldr	r1, [sp, #164]	; 0xa4
   255f8:	movw	r2, #0
   255fc:	cmp	r1, r2
   25600:	str	r0, [sp, #60]	; 0x3c
   25604:	beq	25620 <__assert_fail@plt+0x1418c>
   25608:	ldr	r0, [sp, #164]	; 0xa4
   2560c:	ldr	r1, [fp, #-84]	; 0xffffffac
   25610:	add	r0, r0, r1
   25614:	ldrb	r0, [r0]
   25618:	str	r0, [sp, #56]	; 0x38
   2561c:	b	25628 <__assert_fail@plt+0x14194>
   25620:	ldr	r0, [fp, #-84]	; 0xffffffac
   25624:	str	r0, [sp, #56]	; 0x38
   25628:	ldr	r0, [sp, #56]	; 0x38
   2562c:	ldr	r1, [sp, #60]	; 0x3c
   25630:	add	r0, r1, r0
   25634:	ldrsb	r0, [r0]
   25638:	cmp	r0, #0
   2563c:	beq	25644 <__assert_fail@plt+0x141b0>
   25640:	b	25658 <__assert_fail@plt+0x141c4>
   25644:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25648:	mvn	r1, #0
   2564c:	add	r0, r0, r1
   25650:	str	r0, [fp, #-68]	; 0xffffffbc
   25654:	b	255a8 <__assert_fail@plt+0x14114>
   25658:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2565c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25660:	cmp	r0, r1
   25664:	bge	2566c <__assert_fail@plt+0x141d8>
   25668:	b	25ce8 <__assert_fail@plt+0x14854>
   2566c:	b	25764 <__assert_fail@plt+0x142d0>
   25670:	b	25674 <__assert_fail@plt+0x141e0>
   25674:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25678:	ldr	r1, [sp, #196]	; 0xc4
   2567c:	sub	r0, r0, r1
   25680:	str	r0, [sp, #160]	; 0xa0
   25684:	ldr	r0, [sp, #160]	; 0xa0
   25688:	ldr	r1, [sp, #204]	; 0xcc
   2568c:	cmp	r0, r1
   25690:	bcc	256c8 <__assert_fail@plt+0x14234>
   25694:	add	r0, sp, #172	; 0xac
   25698:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2569c:	ldr	r2, [fp, #24]
   256a0:	bl	31b60 <__assert_fail@plt+0x206cc>
   256a4:	str	r0, [fp, #-40]	; 0xffffffd8
   256a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   256ac:	cmp	r0, #0
   256b0:	beq	256b8 <__assert_fail@plt+0x14224>
   256b4:	b	25ce8 <__assert_fail@plt+0x14854>
   256b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   256bc:	ldr	r1, [sp, #196]	; 0xc4
   256c0:	sub	r0, r0, r1
   256c4:	str	r0, [sp, #160]	; 0xa0
   256c8:	ldr	r0, [sp, #160]	; 0xa0
   256cc:	ldr	r1, [sp, #200]	; 0xc8
   256d0:	cmp	r0, r1
   256d4:	bcs	256f0 <__assert_fail@plt+0x1425c>
   256d8:	ldr	r0, [sp, #176]	; 0xb0
   256dc:	ldr	r1, [sp, #160]	; 0xa0
   256e0:	add	r0, r0, r1
   256e4:	ldrb	r0, [r0]
   256e8:	str	r0, [sp, #52]	; 0x34
   256ec:	b	256fc <__assert_fail@plt+0x14268>
   256f0:	movw	r0, #0
   256f4:	str	r0, [sp, #52]	; 0x34
   256f8:	b	256fc <__assert_fail@plt+0x14268>
   256fc:	ldr	r0, [sp, #52]	; 0x34
   25700:	str	r0, [fp, #-84]	; 0xffffffac
   25704:	ldr	r0, [sp, #168]	; 0xa8
   25708:	ldr	r1, [fp, #-84]	; 0xffffffac
   2570c:	add	r0, r0, r1
   25710:	ldrsb	r0, [r0]
   25714:	cmp	r0, #0
   25718:	beq	25720 <__assert_fail@plt+0x1428c>
   2571c:	b	25760 <__assert_fail@plt+0x142cc>
   25720:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25724:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25728:	add	r0, r1, r0
   2572c:	str	r0, [fp, #-68]	; 0xffffffbc
   25730:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25734:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25738:	cmp	r0, r1
   2573c:	blt	25750 <__assert_fail@plt+0x142bc>
   25740:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25744:	ldr	r1, [fp, #-52]	; 0xffffffcc
   25748:	cmp	r0, r1
   2574c:	ble	2575c <__assert_fail@plt+0x142c8>
   25750:	movw	r0, #1
   25754:	str	r0, [fp, #-40]	; 0xffffffd8
   25758:	b	25ce8 <__assert_fail@plt+0x14854>
   2575c:	b	25674 <__assert_fail@plt+0x141e0>
   25760:	b	25764 <__assert_fail@plt+0x142d0>
   25764:	add	r0, sp, #172	; 0xac
   25768:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2576c:	ldr	r2, [fp, #24]
   25770:	bl	31b60 <__assert_fail@plt+0x206cc>
   25774:	str	r0, [fp, #-40]	; 0xffffffd8
   25778:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2577c:	cmp	r0, #0
   25780:	beq	25788 <__assert_fail@plt+0x142f4>
   25784:	b	25ce8 <__assert_fail@plt+0x14854>
   25788:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   2578c:	tst	r0, #1
   25790:	bne	257b8 <__assert_fail@plt+0x14324>
   25794:	ldr	r0, [sp, #200]	; 0xc8
   25798:	movw	r1, #0
   2579c:	cmp	r1, r0
   257a0:	beq	257b8 <__assert_fail@plt+0x14324>
   257a4:	ldr	r0, [sp, #180]	; 0xb4
   257a8:	ldr	r0, [r0]
   257ac:	cmn	r0, #1
   257b0:	bne	257b8 <__assert_fail@plt+0x14324>
   257b4:	b	2593c <__assert_fail@plt+0x144a8>
   257b8:	movw	r0, #0
   257bc:	str	r0, [sp, #292]	; 0x124
   257c0:	str	r0, [sp, #280]	; 0x118
   257c4:	str	r0, [sp, #276]	; 0x114
   257c8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   257cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   257d0:	ldr	r2, [fp, #8]
   257d4:	cmp	r1, r2
   257d8:	str	r0, [sp, #48]	; 0x30
   257dc:	bgt	257ec <__assert_fail@plt+0x14358>
   257e0:	sub	r0, fp, #68	; 0x44
   257e4:	str	r0, [sp, #44]	; 0x2c
   257e8:	b	257f8 <__assert_fail@plt+0x14364>
   257ec:	movw	r0, #0
   257f0:	str	r0, [sp, #44]	; 0x2c
   257f4:	b	257f8 <__assert_fail@plt+0x14364>
   257f8:	ldr	r0, [sp, #44]	; 0x2c
   257fc:	add	r1, sp, #172	; 0xac
   25800:	str	r0, [sp, #40]	; 0x28
   25804:	mov	r0, r1
   25808:	ldr	r1, [sp, #48]	; 0x30
   2580c:	and	r1, r1, #1
   25810:	ldr	r2, [sp, #40]	; 0x28
   25814:	bl	3274c <__assert_fail@plt+0x212b8>
   25818:	str	r0, [fp, #-72]	; 0xffffffb8
   2581c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   25820:	cmn	r0, #1
   25824:	beq	25934 <__assert_fail@plt+0x144a0>
   25828:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2582c:	cmn	r0, #2
   25830:	bne	25840 <__assert_fail@plt+0x143ac>
   25834:	movw	r0, #12
   25838:	str	r0, [fp, #-40]	; 0xffffffd8
   2583c:	b	25ce8 <__assert_fail@plt+0x14854>
   25840:	ldr	r0, [fp, #-72]	; 0xffffffb8
   25844:	str	r0, [sp, #264]	; 0x108
   25848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2584c:	ldrb	r0, [r0, #28]
   25850:	ubfx	r0, r0, #4, #1
   25854:	and	r0, r0, #255	; 0xff
   25858:	cmp	r0, #0
   2585c:	bne	2586c <__assert_fail@plt+0x143d8>
   25860:	ldr	r0, [fp, #16]
   25864:	cmp	r0, #1
   25868:	bhi	2587c <__assert_fail@plt+0x143e8>
   2586c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25870:	ldr	r0, [r0, #76]	; 0x4c
   25874:	cmp	r0, #0
   25878:	beq	258a4 <__assert_fail@plt+0x14410>
   2587c:	ldr	r0, [sp, #272]	; 0x110
   25880:	ldr	r1, [fp, #-72]	; 0xffffffb8
   25884:	add	r0, r0, r1, lsl #2
   25888:	ldr	r0, [r0]
   2588c:	str	r0, [sp, #156]	; 0x9c
   25890:	ldr	r1, [sp, #156]	; 0x9c
   25894:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25898:	add	r0, sp, #172	; 0xac
   2589c:	bl	32cd8 <__assert_fail@plt+0x21844>
   258a0:	str	r0, [sp, #268]	; 0x10c
   258a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   258a8:	ldrb	r0, [r0, #28]
   258ac:	ubfx	r0, r0, #4, #1
   258b0:	and	r0, r0, #255	; 0xff
   258b4:	cmp	r0, #0
   258b8:	bne	258e0 <__assert_fail@plt+0x1444c>
   258bc:	ldr	r0, [fp, #16]
   258c0:	cmp	r0, #1
   258c4:	bls	258e0 <__assert_fail@plt+0x1444c>
   258c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   258cc:	ldrb	r0, [r0, #88]	; 0x58
   258d0:	and	r0, r0, #1
   258d4:	and	r0, r0, #255	; 0xff
   258d8:	cmp	r0, #0
   258dc:	bne	258f0 <__assert_fail@plt+0x1445c>
   258e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   258e4:	ldr	r0, [r0, #76]	; 0x4c
   258e8:	cmp	r0, #0
   258ec:	beq	25928 <__assert_fail@plt+0x14494>
   258f0:	add	r0, sp, #172	; 0xac
   258f4:	bl	32db0 <__assert_fail@plt+0x2191c>
   258f8:	str	r0, [fp, #-40]	; 0xffffffd8
   258fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25900:	cmp	r0, #0
   25904:	bne	2590c <__assert_fail@plt+0x14478>
   25908:	b	25950 <__assert_fail@plt+0x144bc>
   2590c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25910:	cmp	r0, #1
   25914:	beq	2591c <__assert_fail@plt+0x14488>
   25918:	b	25ce8 <__assert_fail@plt+0x14854>
   2591c:	mvn	r0, #0
   25920:	str	r0, [fp, #-72]	; 0xffffffb8
   25924:	b	2592c <__assert_fail@plt+0x14498>
   25928:	b	25950 <__assert_fail@plt+0x144bc>
   2592c:	b	25930 <__assert_fail@plt+0x1449c>
   25930:	b	25934 <__assert_fail@plt+0x144a0>
   25934:	add	r0, sp, #172	; 0xac
   25938:	bl	330fc <__assert_fail@plt+0x21c68>
   2593c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25940:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25944:	add	r0, r1, r0
   25948:	str	r0, [fp, #-68]	; 0xffffffbc
   2594c:	b	253ac <__assert_fail@plt+0x13f18>
   25950:	ldr	r0, [fp, #-72]	; 0xffffffb8
   25954:	cmn	r0, #1
   25958:	beq	25960 <__assert_fail@plt+0x144cc>
   2595c:	b	25960 <__assert_fail@plt+0x144cc>
   25960:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25964:	cmp	r0, #0
   25968:	bne	25970 <__assert_fail@plt+0x144dc>
   2596c:	b	25970 <__assert_fail@plt+0x144dc>
   25970:	ldr	r0, [fp, #16]
   25974:	cmp	r0, #0
   25978:	bls	25ce4 <__assert_fail@plt+0x14850>
   2597c:	movw	r0, #1
   25980:	str	r0, [sp, #152]	; 0x98
   25984:	ldr	r0, [sp, #152]	; 0x98
   25988:	ldr	r1, [fp, #16]
   2598c:	cmp	r0, r1
   25990:	bcs	259cc <__assert_fail@plt+0x14538>
   25994:	ldr	r0, [fp, #20]
   25998:	ldr	r1, [sp, #152]	; 0x98
   2599c:	add	r0, r0, r1, lsl #3
   259a0:	mvn	r1, #0
   259a4:	str	r1, [r0, #4]
   259a8:	ldr	r0, [fp, #20]
   259ac:	ldr	r1, [sp, #152]	; 0x98
   259b0:	add	r0, r0, r1, lsl #3
   259b4:	mvn	r1, #0
   259b8:	str	r1, [r0]
   259bc:	ldr	r0, [sp, #152]	; 0x98
   259c0:	add	r0, r0, #1
   259c4:	str	r0, [sp, #152]	; 0x98
   259c8:	b	25984 <__assert_fail@plt+0x144f0>
   259cc:	ldr	r0, [fp, #20]
   259d0:	mov	r1, #0
   259d4:	str	r1, [r0]
   259d8:	ldr	r0, [sp, #264]	; 0x108
   259dc:	ldr	r1, [fp, #20]
   259e0:	str	r0, [r1, #4]
   259e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   259e8:	ldrb	r0, [r0, #28]
   259ec:	ubfx	r0, r0, #4, #1
   259f0:	and	r0, r0, #255	; 0xff
   259f4:	cmp	r0, #0
   259f8:	bne	25a9c <__assert_fail@plt+0x14608>
   259fc:	ldr	r0, [fp, #16]
   25a00:	cmp	r0, #1
   25a04:	bls	25a9c <__assert_fail@plt+0x14608>
   25a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25a0c:	ldr	r2, [fp, #16]
   25a10:	ldr	r3, [fp, #20]
   25a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25a18:	ldrb	r1, [r1, #88]	; 0x58
   25a1c:	and	r1, r1, #1
   25a20:	and	r1, r1, #255	; 0xff
   25a24:	cmp	r1, #0
   25a28:	movw	r1, #0
   25a2c:	str	r0, [sp, #36]	; 0x24
   25a30:	str	r2, [sp, #32]
   25a34:	str	r3, [sp, #28]
   25a38:	str	r1, [sp, #24]
   25a3c:	beq	25a58 <__assert_fail@plt+0x145c4>
   25a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25a44:	ldr	r0, [r0, #76]	; 0x4c
   25a48:	cmp	r0, #0
   25a4c:	movw	r0, #0
   25a50:	movgt	r0, #1
   25a54:	str	r0, [sp, #24]
   25a58:	ldr	r0, [sp, #24]
   25a5c:	ldr	r1, [sp, #36]	; 0x24
   25a60:	str	r0, [sp, #20]
   25a64:	mov	r0, r1
   25a68:	add	r1, sp, #172	; 0xac
   25a6c:	ldr	r2, [sp, #32]
   25a70:	ldr	r3, [sp, #28]
   25a74:	ldr	ip, [sp, #20]
   25a78:	and	lr, ip, #1
   25a7c:	str	lr, [sp]
   25a80:	bl	33208 <__assert_fail@plt+0x21d74>
   25a84:	str	r0, [fp, #-40]	; 0xffffffd8
   25a88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25a8c:	cmp	r0, #0
   25a90:	beq	25a98 <__assert_fail@plt+0x14604>
   25a94:	b	25ce8 <__assert_fail@plt+0x14854>
   25a98:	b	25a9c <__assert_fail@plt+0x14608>
   25a9c:	movw	r0, #0
   25aa0:	str	r0, [sp, #152]	; 0x98
   25aa4:	ldr	r0, [sp, #152]	; 0x98
   25aa8:	ldr	r1, [fp, #16]
   25aac:	cmp	r0, r1
   25ab0:	bcs	25bd0 <__assert_fail@plt+0x1473c>
   25ab4:	ldr	r0, [fp, #20]
   25ab8:	ldr	r1, [sp, #152]	; 0x98
   25abc:	add	r0, r0, r1, lsl #3
   25ac0:	ldr	r0, [r0]
   25ac4:	cmn	r0, #1
   25ac8:	beq	25bbc <__assert_fail@plt+0x14728>
   25acc:	ldrb	r0, [sp, #248]	; 0xf8
   25ad0:	cmp	r0, #0
   25ad4:	beq	25b88 <__assert_fail@plt+0x146f4>
   25ad8:	ldr	r0, [fp, #20]
   25adc:	ldr	r1, [sp, #152]	; 0x98
   25ae0:	add	r0, r0, r1, lsl #3
   25ae4:	ldr	r0, [r0]
   25ae8:	ldr	r1, [sp, #200]	; 0xc8
   25aec:	cmp	r0, r1
   25af0:	bne	25b00 <__assert_fail@plt+0x1466c>
   25af4:	ldr	r0, [sp, #204]	; 0xcc
   25af8:	str	r0, [sp, #16]
   25afc:	b	25b1c <__assert_fail@plt+0x14688>
   25b00:	ldr	r0, [sp, #184]	; 0xb8
   25b04:	ldr	r1, [fp, #20]
   25b08:	ldr	r2, [sp, #152]	; 0x98
   25b0c:	ldr	r1, [r1, r2, lsl #3]
   25b10:	add	r0, r0, r1, lsl #2
   25b14:	ldr	r0, [r0]
   25b18:	str	r0, [sp, #16]
   25b1c:	ldr	r0, [sp, #16]
   25b20:	ldr	r1, [fp, #20]
   25b24:	ldr	r2, [sp, #152]	; 0x98
   25b28:	str	r0, [r1, r2, lsl #3]
   25b2c:	ldr	r0, [fp, #20]
   25b30:	ldr	r1, [sp, #152]	; 0x98
   25b34:	add	r0, r0, r1, lsl #3
   25b38:	ldr	r0, [r0, #4]
   25b3c:	ldr	r1, [sp, #200]	; 0xc8
   25b40:	cmp	r0, r1
   25b44:	bne	25b54 <__assert_fail@plt+0x146c0>
   25b48:	ldr	r0, [sp, #204]	; 0xcc
   25b4c:	str	r0, [sp, #12]
   25b50:	b	25b74 <__assert_fail@plt+0x146e0>
   25b54:	ldr	r0, [sp, #184]	; 0xb8
   25b58:	ldr	r1, [fp, #20]
   25b5c:	ldr	r2, [sp, #152]	; 0x98
   25b60:	add	r1, r1, r2, lsl #3
   25b64:	ldr	r1, [r1, #4]
   25b68:	add	r0, r0, r1, lsl #2
   25b6c:	ldr	r0, [r0]
   25b70:	str	r0, [sp, #12]
   25b74:	ldr	r0, [sp, #12]
   25b78:	ldr	r1, [fp, #20]
   25b7c:	ldr	r2, [sp, #152]	; 0x98
   25b80:	add	r1, r1, r2, lsl #3
   25b84:	str	r0, [r1, #4]
   25b88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25b8c:	ldr	r1, [fp, #20]
   25b90:	ldr	r2, [sp, #152]	; 0x98
   25b94:	ldr	r3, [r1, r2, lsl #3]
   25b98:	add	r0, r3, r0
   25b9c:	str	r0, [r1, r2, lsl #3]
   25ba0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   25ba4:	ldr	r1, [fp, #20]
   25ba8:	ldr	r2, [sp, #152]	; 0x98
   25bac:	add	r1, r1, r2, lsl #3
   25bb0:	ldr	r2, [r1, #4]
   25bb4:	add	r0, r2, r0
   25bb8:	str	r0, [r1, #4]
   25bbc:	b	25bc0 <__assert_fail@plt+0x1472c>
   25bc0:	ldr	r0, [sp, #152]	; 0x98
   25bc4:	add	r0, r0, #1
   25bc8:	str	r0, [sp, #152]	; 0x98
   25bcc:	b	25aa4 <__assert_fail@plt+0x14610>
   25bd0:	movw	r0, #0
   25bd4:	str	r0, [sp, #152]	; 0x98
   25bd8:	ldr	r0, [sp, #152]	; 0x98
   25bdc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   25be0:	cmp	r0, r1
   25be4:	bge	25c2c <__assert_fail@plt+0x14798>
   25be8:	ldr	r0, [fp, #20]
   25bec:	ldr	r1, [fp, #16]
   25bf0:	ldr	r2, [sp, #152]	; 0x98
   25bf4:	add	r1, r1, r2
   25bf8:	mvn	r2, #0
   25bfc:	str	r2, [r0, r1, lsl #3]
   25c00:	ldr	r0, [fp, #20]
   25c04:	ldr	r1, [fp, #16]
   25c08:	ldr	r2, [sp, #152]	; 0x98
   25c0c:	add	r1, r1, r2
   25c10:	add	r0, r0, r1, lsl #3
   25c14:	mvn	r1, #0
   25c18:	str	r1, [r0, #4]
   25c1c:	ldr	r0, [sp, #152]	; 0x98
   25c20:	add	r0, r0, #1
   25c24:	str	r0, [sp, #152]	; 0x98
   25c28:	b	25bd8 <__assert_fail@plt+0x14744>
   25c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25c30:	ldr	r0, [r0, #132]	; 0x84
   25c34:	movw	r1, #0
   25c38:	cmp	r0, r1
   25c3c:	beq	25ce0 <__assert_fail@plt+0x1484c>
   25c40:	movw	r0, #0
   25c44:	str	r0, [sp, #152]	; 0x98
   25c48:	ldr	r0, [sp, #152]	; 0x98
   25c4c:	add	r0, r0, #1
   25c50:	ldr	r1, [fp, #16]
   25c54:	cmp	r0, r1
   25c58:	bcs	25cdc <__assert_fail@plt+0x14848>
   25c5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25c60:	ldr	r0, [r0, #132]	; 0x84
   25c64:	ldr	r1, [sp, #152]	; 0x98
   25c68:	add	r0, r0, r1, lsl #2
   25c6c:	ldr	r0, [r0]
   25c70:	ldr	r1, [sp, #152]	; 0x98
   25c74:	cmp	r0, r1
   25c78:	beq	25cc8 <__assert_fail@plt+0x14834>
   25c7c:	ldr	r0, [fp, #20]
   25c80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25c84:	ldr	r1, [r1, #132]	; 0x84
   25c88:	ldr	r2, [sp, #152]	; 0x98
   25c8c:	ldr	r1, [r1, r2, lsl #2]
   25c90:	add	r1, r0, r1, lsl #3
   25c94:	ldr	r1, [r1, #8]
   25c98:	add	r0, r0, r2, lsl #3
   25c9c:	str	r1, [r0, #8]
   25ca0:	ldr	r0, [fp, #20]
   25ca4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25ca8:	ldr	r1, [r1, #132]	; 0x84
   25cac:	ldr	r2, [sp, #152]	; 0x98
   25cb0:	ldr	r1, [r1, r2, lsl #2]
   25cb4:	add	r1, r0, r1, lsl #3
   25cb8:	ldr	r1, [r1, #12]
   25cbc:	add	r2, r2, #1
   25cc0:	add	r0, r0, r2, lsl #3
   25cc4:	str	r1, [r0, #4]
   25cc8:	b	25ccc <__assert_fail@plt+0x14838>
   25ccc:	ldr	r0, [sp, #152]	; 0x98
   25cd0:	add	r0, r0, #1
   25cd4:	str	r0, [sp, #152]	; 0x98
   25cd8:	b	25c48 <__assert_fail@plt+0x147b4>
   25cdc:	b	25ce0 <__assert_fail@plt+0x1484c>
   25ce0:	b	25ce4 <__assert_fail@plt+0x14850>
   25ce4:	b	25ce8 <__assert_fail@plt+0x14854>
   25ce8:	ldr	r0, [sp, #272]	; 0x110
   25cec:	bl	1388c <__assert_fail@plt+0x23f8>
   25cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25cf4:	ldr	r0, [r0, #76]	; 0x4c
   25cf8:	cmp	r0, #0
   25cfc:	beq	25d08 <__assert_fail@plt+0x14874>
   25d00:	add	r0, sp, #172	; 0xac
   25d04:	bl	335d0 <__assert_fail@plt+0x2213c>
   25d08:	add	r0, sp, #172	; 0xac
   25d0c:	bl	27048 <__assert_fail@plt+0x15bb4>
   25d10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25d14:	str	r0, [fp, #-20]	; 0xffffffec
   25d18:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d1c:	sub	sp, fp, #16
   25d20:	pop	{r4, r5, r6, sl, fp, pc}
   25d24:	svccc	0x00ffffff
   25d28:	push	{r4, r5, fp, lr}
   25d2c:	add	fp, sp, #8
   25d30:	sub	sp, sp, #40	; 0x28
   25d34:	ldr	ip, [fp, #8]
   25d38:	str	r0, [fp, #-12]
   25d3c:	str	r1, [fp, #-16]
   25d40:	str	r2, [fp, #-20]	; 0xffffffec
   25d44:	str	r3, [sp, #24]
   25d48:	ldr	r0, [fp, #-12]
   25d4c:	ldr	r1, [fp, #-16]
   25d50:	ldr	r2, [fp, #-20]	; 0xffffffec
   25d54:	ldr	r3, [sp, #24]
   25d58:	ldr	lr, [fp, #-20]	; 0xffffffec
   25d5c:	ldr	r4, [fp, #8]
   25d60:	movw	r5, #0
   25d64:	str	r5, [sp]
   25d68:	str	lr, [sp, #4]
   25d6c:	str	r4, [sp, #8]
   25d70:	movw	lr, #1
   25d74:	and	lr, lr, #1
   25d78:	str	lr, [sp, #12]
   25d7c:	str	ip, [sp, #20]
   25d80:	bl	25d8c <__assert_fail@plt+0x148f8>
   25d84:	sub	sp, fp, #8
   25d88:	pop	{r4, r5, fp, pc}
   25d8c:	push	{r4, r5, r6, sl, fp, lr}
   25d90:	add	fp, sp, #16
   25d94:	sub	sp, sp, #96	; 0x60
   25d98:	ldr	ip, [fp, #20]
   25d9c:	ldr	lr, [fp, #16]
   25da0:	ldr	r4, [fp, #12]
   25da4:	ldr	r5, [fp, #8]
   25da8:	str	r0, [fp, #-24]	; 0xffffffe8
   25dac:	str	r1, [fp, #-28]	; 0xffffffe4
   25db0:	str	r2, [fp, #-32]	; 0xffffffe0
   25db4:	str	r3, [fp, #-36]	; 0xffffffdc
   25db8:	and	r0, ip, #1
   25dbc:	strb	r0, [fp, #-37]	; 0xffffffdb
   25dc0:	movw	r0, #0
   25dc4:	str	r0, [sp, #52]	; 0x34
   25dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25dcc:	ldr	r0, [r0]
   25dd0:	str	r0, [sp, #48]	; 0x30
   25dd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25dd8:	ldr	r1, [fp, #8]
   25ddc:	add	r0, r0, r1
   25de0:	str	r0, [sp, #44]	; 0x2c
   25de4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25de8:	cmp	r0, #0
   25dec:	movw	r0, #1
   25df0:	str	r0, [sp, #40]	; 0x28
   25df4:	blt	25e10 <__assert_fail@plt+0x1497c>
   25df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25dfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25e00:	cmp	r0, r1
   25e04:	movw	r0, #0
   25e08:	movgt	r0, #1
   25e0c:	str	r0, [sp, #40]	; 0x28
   25e10:	ldr	r0, [sp, #40]	; 0x28
   25e14:	tst	r0, #1
   25e18:	beq	25e28 <__assert_fail@plt+0x14994>
   25e1c:	mvn	r0, #0
   25e20:	str	r0, [fp, #-20]	; 0xffffffec
   25e24:	b	26240 <__assert_fail@plt+0x14dac>
   25e28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e2c:	ldr	r1, [sp, #44]	; 0x2c
   25e30:	cmp	r0, r1
   25e34:	movw	r0, #1
   25e38:	str	r0, [sp, #36]	; 0x24
   25e3c:	blt	25e78 <__assert_fail@plt+0x149e4>
   25e40:	ldr	r0, [fp, #8]
   25e44:	movw	r1, #0
   25e48:	cmp	r1, r0
   25e4c:	movw	r0, #0
   25e50:	str	r0, [sp, #32]
   25e54:	bgt	25e70 <__assert_fail@plt+0x149dc>
   25e58:	ldr	r0, [sp, #44]	; 0x2c
   25e5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25e60:	cmp	r0, r1
   25e64:	movw	r0, #0
   25e68:	movlt	r0, #1
   25e6c:	str	r0, [sp, #32]
   25e70:	ldr	r0, [sp, #32]
   25e74:	str	r0, [sp, #36]	; 0x24
   25e78:	ldr	r0, [sp, #36]	; 0x24
   25e7c:	tst	r0, #1
   25e80:	beq	25e90 <__assert_fail@plt+0x149fc>
   25e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e88:	str	r0, [sp, #44]	; 0x2c
   25e8c:	b	25ef0 <__assert_fail@plt+0x14a5c>
   25e90:	ldr	r0, [sp, #44]	; 0x2c
   25e94:	cmp	r0, #0
   25e98:	movw	r0, #1
   25e9c:	str	r0, [sp, #28]
   25ea0:	blt	25ed8 <__assert_fail@plt+0x14a44>
   25ea4:	ldr	r0, [fp, #8]
   25ea8:	cmp	r0, #0
   25eac:	movw	r0, #0
   25eb0:	str	r0, [sp, #24]
   25eb4:	bge	25ed0 <__assert_fail@plt+0x14a3c>
   25eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ebc:	ldr	r1, [sp, #44]	; 0x2c
   25ec0:	cmp	r0, r1
   25ec4:	movw	r0, #0
   25ec8:	movle	r0, #1
   25ecc:	str	r0, [sp, #24]
   25ed0:	ldr	r0, [sp, #24]
   25ed4:	str	r0, [sp, #28]
   25ed8:	ldr	r0, [sp, #28]
   25edc:	tst	r0, #1
   25ee0:	beq	25eec <__assert_fail@plt+0x14a58>
   25ee4:	movw	r0, #0
   25ee8:	str	r0, [sp, #44]	; 0x2c
   25eec:	b	25ef0 <__assert_fail@plt+0x14a5c>
   25ef0:	movw	r0, #0
   25ef4:	movt	r0, #0
   25ef8:	cmp	r0, #0
   25efc:	bne	25f18 <__assert_fail@plt+0x14a84>
   25f00:	b	25f04 <__assert_fail@plt+0x14a70>
   25f04:	movw	r0, #0
   25f08:	movt	r0, #0
   25f0c:	cmp	r0, #0
   25f10:	beq	25f28 <__assert_fail@plt+0x14a94>
   25f14:	b	25f18 <__assert_fail@plt+0x14a84>
   25f18:	ldr	r0, [sp, #48]	; 0x30
   25f1c:	add	r0, r0, #136	; 0x88
   25f20:	bl	11230 <pthread_mutex_lock@plt>
   25f24:	b	25f2c <__assert_fail@plt+0x14a98>
   25f28:	b	25f2c <__assert_fail@plt+0x14a98>
   25f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25f30:	ldrb	r0, [r0, #28]
   25f34:	ldr	r1, [sp, #52]	; 0x34
   25f38:	orr	r2, r1, #1
   25f3c:	mov	r3, #1
   25f40:	tst	r3, r0, lsr #5
   25f44:	movne	r1, r2
   25f48:	str	r1, [sp, #52]	; 0x34
   25f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25f50:	ldrb	r0, [r0, #28]
   25f54:	ubfx	r0, r0, #6, #1
   25f58:	and	r0, r0, #255	; 0xff
   25f5c:	cmp	r0, #0
   25f60:	movw	r0, #0
   25f64:	movne	r0, #1
   25f68:	tst	r0, #1
   25f6c:	movw	r0, #2
   25f70:	moveq	r0, #0
   25f74:	ldr	r1, [sp, #52]	; 0x34
   25f78:	orr	r0, r1, r0
   25f7c:	str	r0, [sp, #52]	; 0x34
   25f80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25f84:	ldr	r1, [sp, #44]	; 0x2c
   25f88:	cmp	r0, r1
   25f8c:	bge	25fc4 <__assert_fail@plt+0x14b30>
   25f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25f94:	ldr	r0, [r0, #16]
   25f98:	movw	r1, #0
   25f9c:	cmp	r0, r1
   25fa0:	beq	25fc4 <__assert_fail@plt+0x14b30>
   25fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25fa8:	ldrb	r0, [r0, #28]
   25fac:	ubfx	r0, r0, #3, #1
   25fb0:	and	r0, r0, #255	; 0xff
   25fb4:	cmp	r0, #0
   25fb8:	bne	25fc4 <__assert_fail@plt+0x14b30>
   25fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25fc0:	bl	23dd8 <__assert_fail@plt+0x12944>
   25fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25fc8:	ldrb	r0, [r0, #28]
   25fcc:	ubfx	r0, r0, #4, #1
   25fd0:	and	r0, r0, #255	; 0xff
   25fd4:	cmp	r0, #0
   25fd8:	beq	25fe4 <__assert_fail@plt+0x14b50>
   25fdc:	movw	r0, #0
   25fe0:	str	r0, [fp, #16]
   25fe4:	ldr	r0, [fp, #16]
   25fe8:	movw	r1, #0
   25fec:	cmp	r0, r1
   25ff0:	bne	26000 <__assert_fail@plt+0x14b6c>
   25ff4:	movw	r0, #1
   25ff8:	str	r0, [fp, #-52]	; 0xffffffcc
   25ffc:	b	2608c <__assert_fail@plt+0x14bf8>
   26000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26004:	ldrb	r0, [r0, #28]
   26008:	ubfx	r0, r0, #1, #2
   2600c:	and	r0, r0, #255	; 0xff
   26010:	cmp	r0, #2
   26014:	movw	r0, #0
   26018:	str	r0, [sp, #20]
   2601c:	bne	26040 <__assert_fail@plt+0x14bac>
   26020:	ldr	r0, [fp, #16]
   26024:	ldr	r0, [r0]
   26028:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2602c:	ldr	r1, [r1, #24]
   26030:	cmp	r0, r1
   26034:	movw	r0, #0
   26038:	movls	r0, #1
   2603c:	str	r0, [sp, #20]
   26040:	ldr	r0, [sp, #20]
   26044:	tst	r0, #1
   26048:	beq	26078 <__assert_fail@plt+0x14be4>
   2604c:	ldr	r0, [fp, #16]
   26050:	ldr	r0, [r0]
   26054:	str	r0, [fp, #-52]	; 0xffffffcc
   26058:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2605c:	cmp	r0, #1
   26060:	bge	26074 <__assert_fail@plt+0x14be0>
   26064:	movw	r0, #0
   26068:	str	r0, [fp, #16]
   2606c:	movw	r0, #1
   26070:	str	r0, [fp, #-52]	; 0xffffffcc
   26074:	b	26088 <__assert_fail@plt+0x14bf4>
   26078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2607c:	ldr	r0, [r0, #24]
   26080:	add	r0, r0, #1
   26084:	str	r0, [fp, #-52]	; 0xffffffcc
   26088:	b	2608c <__assert_fail@plt+0x14bf8>
   2608c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26090:	lsl	r0, r0, #3
   26094:	bl	3f908 <__assert_fail@plt+0x2e474>
   26098:	str	r0, [fp, #-48]	; 0xffffffd0
   2609c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   260a0:	movw	r1, #0
   260a4:	cmp	r0, r1
   260a8:	bne	260b8 <__assert_fail@plt+0x14c24>
   260ac:	mvn	r0, #1
   260b0:	str	r0, [sp, #56]	; 0x38
   260b4:	b	261fc <__assert_fail@plt+0x14d68>
   260b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   260bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   260c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   260c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   260c8:	ldr	ip, [sp, #44]	; 0x2c
   260cc:	ldr	lr, [fp, #12]
   260d0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   260d4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   260d8:	ldr	r6, [sp, #52]	; 0x34
   260dc:	str	ip, [sp]
   260e0:	str	lr, [sp, #4]
   260e4:	str	r4, [sp, #8]
   260e8:	str	r5, [sp, #12]
   260ec:	str	r6, [sp, #16]
   260f0:	bl	24e14 <__assert_fail@plt+0x13980>
   260f4:	str	r0, [fp, #-44]	; 0xffffffd4
   260f8:	movw	r0, #0
   260fc:	str	r0, [sp, #56]	; 0x38
   26100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26104:	cmp	r0, #0
   26108:	beq	26130 <__assert_fail@plt+0x14c9c>
   2610c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26110:	cmp	r0, #1
   26114:	movw	r0, #0
   26118:	moveq	r0, #1
   2611c:	tst	r0, #1
   26120:	mvn	r0, #0
   26124:	mvneq	r0, #1
   26128:	str	r0, [sp, #56]	; 0x38
   2612c:	b	2619c <__assert_fail@plt+0x14d08>
   26130:	ldr	r0, [fp, #16]
   26134:	movw	r1, #0
   26138:	cmp	r0, r1
   2613c:	beq	26198 <__assert_fail@plt+0x14d04>
   26140:	ldr	r0, [fp, #16]
   26144:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26148:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2614c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26150:	ldrb	r3, [r3, #28]
   26154:	ubfx	r3, r3, #1, #2
   26158:	bl	31608 <__assert_fail@plt+0x20174>
   2615c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26160:	ldrb	r2, [r1, #28]
   26164:	and	r0, r0, #3
   26168:	and	r2, r2, #249	; 0xf9
   2616c:	orr	r0, r2, r0, lsl #1
   26170:	strb	r0, [r1, #28]
   26174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26178:	ldrb	r0, [r0, #28]
   2617c:	ubfx	r0, r0, #1, #2
   26180:	and	r0, r0, #255	; 0xff
   26184:	cmp	r0, #0
   26188:	bne	26194 <__assert_fail@plt+0x14d00>
   2618c:	mvn	r0, #1
   26190:	str	r0, [sp, #56]	; 0x38
   26194:	b	26198 <__assert_fail@plt+0x14d04>
   26198:	b	2619c <__assert_fail@plt+0x14d08>
   2619c:	ldr	r0, [sp, #56]	; 0x38
   261a0:	cmp	r0, #0
   261a4:	bne	261f4 <__assert_fail@plt+0x14d60>
   261a8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   261ac:	tst	r0, #1
   261b0:	beq	261e4 <__assert_fail@plt+0x14d50>
   261b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   261b8:	ldr	r0, [r0]
   261bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   261c0:	cmp	r0, r1
   261c4:	bne	261cc <__assert_fail@plt+0x14d38>
   261c8:	b	261cc <__assert_fail@plt+0x14d38>
   261cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   261d0:	ldr	r0, [r0, #4]
   261d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   261d8:	sub	r0, r0, r1
   261dc:	str	r0, [sp, #56]	; 0x38
   261e0:	b	261f0 <__assert_fail@plt+0x14d5c>
   261e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   261e8:	ldr	r0, [r0]
   261ec:	str	r0, [sp, #56]	; 0x38
   261f0:	b	261f4 <__assert_fail@plt+0x14d60>
   261f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   261f8:	bl	1388c <__assert_fail@plt+0x23f8>
   261fc:	movw	r0, #0
   26200:	movt	r0, #0
   26204:	cmp	r0, #0
   26208:	bne	26224 <__assert_fail@plt+0x14d90>
   2620c:	b	26210 <__assert_fail@plt+0x14d7c>
   26210:	movw	r0, #0
   26214:	movt	r0, #0
   26218:	cmp	r0, #0
   2621c:	beq	26234 <__assert_fail@plt+0x14da0>
   26220:	b	26224 <__assert_fail@plt+0x14d90>
   26224:	ldr	r0, [sp, #48]	; 0x30
   26228:	add	r0, r0, #136	; 0x88
   2622c:	bl	1117c <pthread_mutex_unlock@plt>
   26230:	b	26238 <__assert_fail@plt+0x14da4>
   26234:	b	26238 <__assert_fail@plt+0x14da4>
   26238:	ldr	r0, [sp, #56]	; 0x38
   2623c:	str	r0, [fp, #-20]	; 0xffffffec
   26240:	ldr	r0, [fp, #-20]	; 0xffffffec
   26244:	sub	sp, fp, #16
   26248:	pop	{r4, r5, r6, sl, fp, pc}
   2624c:	push	{r4, r5, r6, sl, fp, lr}
   26250:	add	fp, sp, #16
   26254:	sub	sp, sp, #40	; 0x28
   26258:	ldr	ip, [fp, #12]
   2625c:	ldr	lr, [fp, #8]
   26260:	str	r0, [fp, #-20]	; 0xffffffec
   26264:	str	r1, [fp, #-24]	; 0xffffffe8
   26268:	str	r2, [sp, #28]
   2626c:	str	r3, [sp, #24]
   26270:	ldr	r0, [fp, #-20]	; 0xffffffec
   26274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26278:	ldr	r2, [sp, #28]
   2627c:	ldr	r3, [sp, #24]
   26280:	ldr	r4, [fp, #8]
   26284:	ldr	r5, [sp, #28]
   26288:	ldr	r6, [fp, #12]
   2628c:	str	r4, [sp]
   26290:	str	r5, [sp, #4]
   26294:	str	r6, [sp, #8]
   26298:	movw	r4, #0
   2629c:	and	r4, r4, #1
   262a0:	str	r4, [sp, #12]
   262a4:	str	ip, [sp, #20]
   262a8:	str	lr, [sp, #16]
   262ac:	bl	25d8c <__assert_fail@plt+0x148f8>
   262b0:	sub	sp, fp, #16
   262b4:	pop	{r4, r5, r6, sl, fp, pc}
   262b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   262bc:	add	fp, sp, #24
   262c0:	sub	sp, sp, #56	; 0x38
   262c4:	ldr	ip, [fp, #20]
   262c8:	ldr	lr, [fp, #16]
   262cc:	ldr	r4, [fp, #12]
   262d0:	ldr	r5, [fp, #8]
   262d4:	str	r0, [fp, #-28]	; 0xffffffe4
   262d8:	str	r1, [fp, #-32]	; 0xffffffe0
   262dc:	str	r2, [fp, #-36]	; 0xffffffdc
   262e0:	str	r3, [sp, #40]	; 0x28
   262e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   262e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   262ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   262f0:	ldr	r3, [sp, #40]	; 0x28
   262f4:	ldr	r6, [fp, #8]
   262f8:	ldr	r7, [fp, #12]
   262fc:	ldr	r8, [fp, #16]
   26300:	ldr	r9, [fp, #20]
   26304:	str	r6, [sp]
   26308:	str	r7, [sp, #4]
   2630c:	movw	r6, #0
   26310:	str	r6, [sp, #8]
   26314:	str	r8, [sp, #12]
   26318:	str	r9, [sp, #16]
   2631c:	movw	r6, #1
   26320:	and	r6, r6, #1
   26324:	str	r6, [sp, #20]
   26328:	str	ip, [sp, #36]	; 0x24
   2632c:	str	lr, [sp, #32]
   26330:	str	r4, [sp, #28]
   26334:	str	r5, [sp, #24]
   26338:	bl	26344 <__assert_fail@plt+0x14eb0>
   2633c:	sub	sp, fp, #24
   26340:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26344:	push	{r4, r5, r6, r7, fp, lr}
   26348:	add	fp, sp, #16
   2634c:	sub	sp, sp, #64	; 0x40
   26350:	ldr	ip, [fp, #28]
   26354:	ldr	lr, [fp, #24]
   26358:	ldr	r4, [fp, #20]
   2635c:	ldr	r5, [fp, #16]
   26360:	ldr	r6, [fp, #12]
   26364:	ldr	r7, [fp, #8]
   26368:	str	r0, [fp, #-24]	; 0xffffffe8
   2636c:	str	r1, [fp, #-28]	; 0xffffffe4
   26370:	str	r2, [fp, #-32]	; 0xffffffe0
   26374:	str	r3, [fp, #-36]	; 0xffffffdc
   26378:	and	r0, ip, #1
   2637c:	strb	r0, [fp, #-37]	; 0xffffffdb
   26380:	movw	r0, #0
   26384:	str	r0, [sp, #24]
   26388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2638c:	cmp	r0, #0
   26390:	movw	r0, #1
   26394:	str	r0, [sp, #20]
   26398:	blt	263e4 <__assert_fail@plt+0x14f50>
   2639c:	ldr	r0, [fp, #8]
   263a0:	cmp	r0, #0
   263a4:	movw	r0, #1
   263a8:	str	r0, [sp, #20]
   263ac:	blt	263e4 <__assert_fail@plt+0x14f50>
   263b0:	ldr	r0, [fp, #24]
   263b4:	cmp	r0, #0
   263b8:	movw	r0, #1
   263bc:	str	r0, [sp, #20]
   263c0:	blt	263e4 <__assert_fail@plt+0x14f50>
   263c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   263c8:	ldr	r1, [fp, #8]
   263cc:	add	r1, r0, r1
   263d0:	mov	r2, #1
   263d4:	cmp	r1, r0
   263d8:	movwvc	r2, #0
   263dc:	str	r1, [sp, #28]
   263e0:	str	r2, [sp, #20]
   263e4:	ldr	r0, [sp, #20]
   263e8:	tst	r0, #1
   263ec:	beq	263fc <__assert_fail@plt+0x14f68>
   263f0:	mvn	r0, #1
   263f4:	str	r0, [fp, #-20]	; 0xffffffec
   263f8:	b	264d8 <__assert_fail@plt+0x15044>
   263fc:	ldr	r0, [fp, #8]
   26400:	cmp	r0, #0
   26404:	ble	26484 <__assert_fail@plt+0x14ff0>
   26408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2640c:	cmp	r0, #0
   26410:	ble	26478 <__assert_fail@plt+0x14fe4>
   26414:	ldr	r0, [sp, #28]
   26418:	mov	r1, r0
   2641c:	str	r1, [sp, #16]
   26420:	bl	3f908 <__assert_fail@plt+0x2e474>
   26424:	str	r0, [sp, #24]
   26428:	ldr	r0, [sp, #24]
   2642c:	movw	r1, #0
   26430:	cmp	r0, r1
   26434:	bne	26444 <__assert_fail@plt+0x14fb0>
   26438:	mvn	r0, #1
   2643c:	str	r0, [fp, #-20]	; 0xffffffec
   26440:	b	264d8 <__assert_fail@plt+0x15044>
   26444:	ldr	r0, [sp, #24]
   26448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2644c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26450:	bl	11248 <memcpy@plt>
   26454:	ldr	r0, [sp, #24]
   26458:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2645c:	add	r0, r0, r1
   26460:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26464:	ldr	r2, [fp, #8]
   26468:	bl	11248 <memcpy@plt>
   2646c:	ldr	r0, [sp, #24]
   26470:	str	r0, [sp, #36]	; 0x24
   26474:	b	26480 <__assert_fail@plt+0x14fec>
   26478:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2647c:	str	r0, [sp, #36]	; 0x24
   26480:	b	2648c <__assert_fail@plt+0x14ff8>
   26484:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26488:	str	r0, [sp, #36]	; 0x24
   2648c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26490:	ldr	r1, [sp, #36]	; 0x24
   26494:	ldr	r2, [sp, #28]
   26498:	ldr	r3, [fp, #12]
   2649c:	ldr	ip, [fp, #16]
   264a0:	ldr	lr, [fp, #24]
   264a4:	ldr	r4, [fp, #20]
   264a8:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   264ac:	str	ip, [sp]
   264b0:	str	lr, [sp, #4]
   264b4:	str	r4, [sp, #8]
   264b8:	and	ip, r5, #1
   264bc:	str	ip, [sp, #12]
   264c0:	bl	25d8c <__assert_fail@plt+0x148f8>
   264c4:	str	r0, [sp, #32]
   264c8:	ldr	r0, [sp, #24]
   264cc:	bl	1388c <__assert_fail@plt+0x23f8>
   264d0:	ldr	r0, [sp, #32]
   264d4:	str	r0, [fp, #-20]	; 0xffffffec
   264d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   264dc:	sub	sp, fp, #16
   264e0:	pop	{r4, r5, r6, r7, fp, pc}
   264e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   264e8:	add	fp, sp, #28
   264ec:	sub	sp, sp, #68	; 0x44
   264f0:	ldr	ip, [fp, #24]
   264f4:	ldr	lr, [fp, #20]
   264f8:	ldr	r4, [fp, #16]
   264fc:	ldr	r5, [fp, #12]
   26500:	ldr	r6, [fp, #8]
   26504:	str	r0, [fp, #-32]	; 0xffffffe0
   26508:	str	r1, [fp, #-36]	; 0xffffffdc
   2650c:	str	r2, [fp, #-40]	; 0xffffffd8
   26510:	str	r3, [fp, #-44]	; 0xffffffd4
   26514:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26518:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2651c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26520:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26524:	ldr	r7, [fp, #8]
   26528:	ldr	r8, [fp, #12]
   2652c:	ldr	r9, [fp, #16]
   26530:	ldr	sl, [fp, #20]
   26534:	str	r0, [sp, #48]	; 0x30
   26538:	ldr	r0, [fp, #24]
   2653c:	str	r0, [sp, #44]	; 0x2c
   26540:	ldr	r0, [sp, #48]	; 0x30
   26544:	str	r7, [sp]
   26548:	str	r8, [sp, #4]
   2654c:	str	r9, [sp, #8]
   26550:	str	sl, [sp, #12]
   26554:	ldr	r7, [sp, #44]	; 0x2c
   26558:	str	r7, [sp, #16]
   2655c:	movw	r8, #0
   26560:	and	r8, r8, #1
   26564:	str	r8, [sp, #20]
   26568:	str	ip, [sp, #40]	; 0x28
   2656c:	str	lr, [sp, #36]	; 0x24
   26570:	str	r4, [sp, #32]
   26574:	str	r5, [sp, #28]
   26578:	str	r6, [sp, #24]
   2657c:	bl	26344 <__assert_fail@plt+0x14eb0>
   26580:	sub	sp, fp, #28
   26584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26588:	sub	sp, sp, #16
   2658c:	ldr	ip, [sp, #16]
   26590:	str	r0, [sp, #12]
   26594:	str	r1, [sp, #8]
   26598:	str	r2, [sp, #4]
   2659c:	str	r3, [sp]
   265a0:	ldr	r0, [sp, #4]
   265a4:	cmp	r0, #0
   265a8:	beq	265ec <__assert_fail@plt+0x15158>
   265ac:	ldr	r0, [sp, #12]
   265b0:	ldrb	r1, [r0, #28]
   265b4:	bic	r1, r1, #6
   265b8:	movw	r2, #2
   265bc:	orr	r1, r1, r2
   265c0:	strb	r1, [r0, #28]
   265c4:	ldr	r0, [sp, #4]
   265c8:	ldr	r1, [sp, #8]
   265cc:	str	r0, [r1]
   265d0:	ldr	r0, [sp]
   265d4:	ldr	r1, [sp, #8]
   265d8:	str	r0, [r1, #4]
   265dc:	ldr	r0, [sp, #16]
   265e0:	ldr	r1, [sp, #8]
   265e4:	str	r0, [r1, #8]
   265e8:	b	26618 <__assert_fail@plt+0x15184>
   265ec:	ldr	r0, [sp, #12]
   265f0:	ldrb	r1, [r0, #28]
   265f4:	bic	r1, r1, #6
   265f8:	strb	r1, [r0, #28]
   265fc:	ldr	r0, [sp, #8]
   26600:	movw	r1, #0
   26604:	str	r1, [r0]
   26608:	ldr	r0, [sp, #8]
   2660c:	str	r1, [r0, #8]
   26610:	ldr	r0, [sp, #8]
   26614:	str	r1, [r0, #4]
   26618:	add	sp, sp, #16
   2661c:	bx	lr
   26620:	push	{fp, lr}
   26624:	mov	fp, sp
   26628:	sub	sp, sp, #8
   2662c:	str	r0, [sp, #4]
   26630:	ldr	r0, [sp, #4]
   26634:	ldr	r0, [r0, #4]
   26638:	and	r0, r0, #255	; 0xff
   2663c:	cmp	r0, #6
   26640:	bne	2666c <__assert_fail@plt+0x151d8>
   26644:	ldr	r0, [sp, #4]
   26648:	ldr	r0, [r0, #4]
   2664c:	lsr	r0, r0, #18
   26650:	and	r0, r0, #1
   26654:	cmp	r0, #0
   26658:	bne	2666c <__assert_fail@plt+0x151d8>
   2665c:	ldr	r0, [sp, #4]
   26660:	ldr	r0, [r0]
   26664:	bl	26740 <__assert_fail@plt+0x152ac>
   26668:	b	266a8 <__assert_fail@plt+0x15214>
   2666c:	ldr	r0, [sp, #4]
   26670:	ldr	r0, [r0, #4]
   26674:	and	r0, r0, #255	; 0xff
   26678:	cmp	r0, #3
   2667c:	bne	266a4 <__assert_fail@plt+0x15210>
   26680:	ldr	r0, [sp, #4]
   26684:	ldr	r0, [r0, #4]
   26688:	lsr	r0, r0, #18
   2668c:	and	r0, r0, #1
   26690:	cmp	r0, #0
   26694:	bne	266a4 <__assert_fail@plt+0x15210>
   26698:	ldr	r0, [sp, #4]
   2669c:	ldr	r0, [r0]
   266a0:	bl	1388c <__assert_fail@plt+0x23f8>
   266a4:	b	266a8 <__assert_fail@plt+0x15214>
   266a8:	mov	sp, fp
   266ac:	pop	{fp, pc}
   266b0:	push	{fp, lr}
   266b4:	mov	fp, sp
   266b8:	sub	sp, sp, #8
   266bc:	str	r0, [sp, #4]
   266c0:	ldr	r0, [sp, #4]
   266c4:	ldr	r0, [r0, #24]
   266c8:	bl	1388c <__assert_fail@plt+0x23f8>
   266cc:	ldr	r0, [sp, #4]
   266d0:	ldr	r0, [r0, #36]	; 0x24
   266d4:	bl	1388c <__assert_fail@plt+0x23f8>
   266d8:	ldr	r0, [sp, #4]
   266dc:	ldr	r0, [r0, #40]	; 0x28
   266e0:	ldr	r1, [sp, #4]
   266e4:	add	r1, r1, #4
   266e8:	cmp	r0, r1
   266ec:	beq	2670c <__assert_fail@plt+0x15278>
   266f0:	ldr	r0, [sp, #4]
   266f4:	ldr	r0, [r0, #40]	; 0x28
   266f8:	ldr	r0, [r0, #8]
   266fc:	bl	1388c <__assert_fail@plt+0x23f8>
   26700:	ldr	r0, [sp, #4]
   26704:	ldr	r0, [r0, #40]	; 0x28
   26708:	bl	1388c <__assert_fail@plt+0x23f8>
   2670c:	ldr	r0, [sp, #4]
   26710:	ldr	r0, [r0, #12]
   26714:	bl	1388c <__assert_fail@plt+0x23f8>
   26718:	ldr	r0, [sp, #4]
   2671c:	ldr	r0, [r0, #48]	; 0x30
   26720:	bl	1388c <__assert_fail@plt+0x23f8>
   26724:	ldr	r0, [sp, #4]
   26728:	ldr	r0, [r0, #44]	; 0x2c
   2672c:	bl	1388c <__assert_fail@plt+0x23f8>
   26730:	ldr	r0, [sp, #4]
   26734:	bl	1388c <__assert_fail@plt+0x23f8>
   26738:	mov	sp, fp
   2673c:	pop	{fp, pc}
   26740:	push	{fp, lr}
   26744:	mov	fp, sp
   26748:	sub	sp, sp, #8
   2674c:	str	r0, [sp, #4]
   26750:	ldr	r0, [sp, #4]
   26754:	ldr	r0, [r0]
   26758:	bl	1388c <__assert_fail@plt+0x23f8>
   2675c:	ldr	r0, [sp, #4]
   26760:	ldr	r0, [r0, #4]
   26764:	bl	1388c <__assert_fail@plt+0x23f8>
   26768:	ldr	r0, [sp, #4]
   2676c:	ldr	r0, [r0, #8]
   26770:	bl	1388c <__assert_fail@plt+0x23f8>
   26774:	ldr	r0, [sp, #4]
   26778:	ldr	r0, [r0, #12]
   2677c:	bl	1388c <__assert_fail@plt+0x23f8>
   26780:	ldr	r0, [sp, #4]
   26784:	bl	1388c <__assert_fail@plt+0x23f8>
   26788:	mov	sp, fp
   2678c:	pop	{fp, pc}
   26790:	push	{fp, lr}
   26794:	mov	fp, sp
   26798:	sub	sp, sp, #120	; 0x78
   2679c:	str	r0, [fp, #-8]
   267a0:	str	r1, [fp, #-12]
   267a4:	movw	r0, #4
   267a8:	str	r0, [fp, #-24]	; 0xffffffe8
   267ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267b0:	movw	r1, #8
   267b4:	cmp	r1, r0
   267b8:	bcs	267c8 <__assert_fail@plt+0x15334>
   267bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267c0:	str	r0, [fp, #-48]	; 0xffffffd0
   267c4:	b	267d4 <__assert_fail@plt+0x15340>
   267c8:	movw	r0, #8
   267cc:	str	r0, [fp, #-48]	; 0xffffffd0
   267d0:	b	267d4 <__assert_fail@plt+0x15340>
   267d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   267d8:	movw	r1, #12
   267dc:	cmp	r1, r0
   267e0:	bcs	26818 <__assert_fail@plt+0x15384>
   267e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267e8:	movw	r1, #8
   267ec:	cmp	r1, r0
   267f0:	bcs	26800 <__assert_fail@plt+0x1536c>
   267f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267f8:	str	r0, [fp, #-52]	; 0xffffffcc
   267fc:	b	2680c <__assert_fail@plt+0x15378>
   26800:	movw	r0, #8
   26804:	str	r0, [fp, #-52]	; 0xffffffcc
   26808:	b	2680c <__assert_fail@plt+0x15378>
   2680c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26810:	str	r0, [fp, #-56]	; 0xffffffc8
   26814:	b	26824 <__assert_fail@plt+0x15390>
   26818:	movw	r0, #12
   2681c:	str	r0, [fp, #-56]	; 0xffffffc8
   26820:	b	26824 <__assert_fail@plt+0x15390>
   26824:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26828:	movw	r1, #8
   2682c:	cmp	r1, r0
   26830:	bcs	268b8 <__assert_fail@plt+0x15424>
   26834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26838:	movw	r1, #8
   2683c:	cmp	r1, r0
   26840:	bcs	26850 <__assert_fail@plt+0x153bc>
   26844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26848:	str	r0, [sp, #60]	; 0x3c
   2684c:	b	2685c <__assert_fail@plt+0x153c8>
   26850:	movw	r0, #8
   26854:	str	r0, [sp, #60]	; 0x3c
   26858:	b	2685c <__assert_fail@plt+0x153c8>
   2685c:	ldr	r0, [sp, #60]	; 0x3c
   26860:	movw	r1, #12
   26864:	cmp	r1, r0
   26868:	bcs	268a0 <__assert_fail@plt+0x1540c>
   2686c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26870:	movw	r1, #8
   26874:	cmp	r1, r0
   26878:	bcs	26888 <__assert_fail@plt+0x153f4>
   2687c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26880:	str	r0, [sp, #56]	; 0x38
   26884:	b	26894 <__assert_fail@plt+0x15400>
   26888:	movw	r0, #8
   2688c:	str	r0, [sp, #56]	; 0x38
   26890:	b	26894 <__assert_fail@plt+0x15400>
   26894:	ldr	r0, [sp, #56]	; 0x38
   26898:	str	r0, [sp, #52]	; 0x34
   2689c:	b	268ac <__assert_fail@plt+0x15418>
   268a0:	movw	r0, #12
   268a4:	str	r0, [sp, #52]	; 0x34
   268a8:	b	268ac <__assert_fail@plt+0x15418>
   268ac:	ldr	r0, [sp, #52]	; 0x34
   268b0:	str	r0, [sp, #48]	; 0x30
   268b4:	b	268c4 <__assert_fail@plt+0x15430>
   268b8:	movw	r0, #8
   268bc:	str	r0, [sp, #48]	; 0x30
   268c0:	b	268c4 <__assert_fail@plt+0x15430>
   268c4:	ldr	r0, [sp, #48]	; 0x30
   268c8:	movw	r1, #12
   268cc:	cmp	r1, r0
   268d0:	bcs	269f8 <__assert_fail@plt+0x15564>
   268d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268d8:	movw	r1, #8
   268dc:	cmp	r1, r0
   268e0:	bcs	268f0 <__assert_fail@plt+0x1545c>
   268e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268e8:	str	r0, [sp, #44]	; 0x2c
   268ec:	b	268fc <__assert_fail@plt+0x15468>
   268f0:	movw	r0, #8
   268f4:	str	r0, [sp, #44]	; 0x2c
   268f8:	b	268fc <__assert_fail@plt+0x15468>
   268fc:	ldr	r0, [sp, #44]	; 0x2c
   26900:	movw	r1, #12
   26904:	cmp	r1, r0
   26908:	bcs	26940 <__assert_fail@plt+0x154ac>
   2690c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26910:	movw	r1, #8
   26914:	cmp	r1, r0
   26918:	bcs	26928 <__assert_fail@plt+0x15494>
   2691c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26920:	str	r0, [sp, #40]	; 0x28
   26924:	b	26934 <__assert_fail@plt+0x154a0>
   26928:	movw	r0, #8
   2692c:	str	r0, [sp, #40]	; 0x28
   26930:	b	26934 <__assert_fail@plt+0x154a0>
   26934:	ldr	r0, [sp, #40]	; 0x28
   26938:	str	r0, [sp, #36]	; 0x24
   2693c:	b	2694c <__assert_fail@plt+0x154b8>
   26940:	movw	r0, #12
   26944:	str	r0, [sp, #36]	; 0x24
   26948:	b	2694c <__assert_fail@plt+0x154b8>
   2694c:	ldr	r0, [sp, #36]	; 0x24
   26950:	movw	r1, #8
   26954:	cmp	r1, r0
   26958:	bcs	269e0 <__assert_fail@plt+0x1554c>
   2695c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26960:	movw	r1, #8
   26964:	cmp	r1, r0
   26968:	bcs	26978 <__assert_fail@plt+0x154e4>
   2696c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26970:	str	r0, [sp, #32]
   26974:	b	26984 <__assert_fail@plt+0x154f0>
   26978:	movw	r0, #8
   2697c:	str	r0, [sp, #32]
   26980:	b	26984 <__assert_fail@plt+0x154f0>
   26984:	ldr	r0, [sp, #32]
   26988:	movw	r1, #12
   2698c:	cmp	r1, r0
   26990:	bcs	269c8 <__assert_fail@plt+0x15534>
   26994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26998:	movw	r1, #8
   2699c:	cmp	r1, r0
   269a0:	bcs	269b0 <__assert_fail@plt+0x1551c>
   269a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   269a8:	str	r0, [sp, #28]
   269ac:	b	269bc <__assert_fail@plt+0x15528>
   269b0:	movw	r0, #8
   269b4:	str	r0, [sp, #28]
   269b8:	b	269bc <__assert_fail@plt+0x15528>
   269bc:	ldr	r0, [sp, #28]
   269c0:	str	r0, [sp, #24]
   269c4:	b	269d4 <__assert_fail@plt+0x15540>
   269c8:	movw	r0, #12
   269cc:	str	r0, [sp, #24]
   269d0:	b	269d4 <__assert_fail@plt+0x15540>
   269d4:	ldr	r0, [sp, #24]
   269d8:	str	r0, [sp, #20]
   269dc:	b	269ec <__assert_fail@plt+0x15558>
   269e0:	movw	r0, #8
   269e4:	str	r0, [sp, #20]
   269e8:	b	269ec <__assert_fail@plt+0x15558>
   269ec:	ldr	r0, [sp, #20]
   269f0:	str	r0, [sp, #16]
   269f4:	b	26a04 <__assert_fail@plt+0x15570>
   269f8:	movw	r0, #12
   269fc:	str	r0, [sp, #16]
   26a00:	b	26a04 <__assert_fail@plt+0x15570>
   26a04:	ldr	r0, [sp, #16]
   26a08:	ldr	r1, [pc, #904]	; 26d98 <__assert_fail@plt+0x15904>
   26a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   26a10:	ldr	r0, [fp, #-8]
   26a14:	movw	r2, #0
   26a18:	and	r2, r2, #255	; 0xff
   26a1c:	str	r1, [sp, #12]
   26a20:	mov	r1, r2
   26a24:	movw	r2, #160	; 0xa0
   26a28:	bl	113d4 <memset@plt>
   26a2c:	ldr	r0, [fp, #-8]
   26a30:	movw	r1, #31
   26a34:	str	r1, [r0, #64]	; 0x40
   26a38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26a3c:	mvn	r1, #0
   26a40:	udiv	r0, r1, r0
   26a44:	ldr	r1, [sp, #12]
   26a48:	cmp	r1, r0
   26a4c:	bcs	26a5c <__assert_fail@plt+0x155c8>
   26a50:	ldr	r0, [pc, #832]	; 26d98 <__assert_fail@plt+0x15904>
   26a54:	str	r0, [sp, #8]
   26a58:	b	26a6c <__assert_fail@plt+0x155d8>
   26a5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26a60:	mvn	r1, #0
   26a64:	udiv	r0, r1, r0
   26a68:	str	r0, [sp, #8]
   26a6c:	ldr	r0, [sp, #8]
   26a70:	lsr	r0, r0, #1
   26a74:	ldr	r1, [fp, #-12]
   26a78:	cmp	r0, r1
   26a7c:	bhi	26a8c <__assert_fail@plt+0x155f8>
   26a80:	movw	r0, #12
   26a84:	str	r0, [fp, #-4]
   26a88:	b	26d8c <__assert_fail@plt+0x158f8>
   26a8c:	ldr	r0, [fp, #-12]
   26a90:	add	r0, r0, #1
   26a94:	ldr	r1, [fp, #-8]
   26a98:	str	r0, [r1, #4]
   26a9c:	ldr	r0, [fp, #-8]
   26aa0:	ldr	r0, [r0, #4]
   26aa4:	lsl	r0, r0, #3
   26aa8:	bl	3f908 <__assert_fail@plt+0x2e474>
   26aac:	ldr	r1, [fp, #-8]
   26ab0:	str	r0, [r1]
   26ab4:	movw	r0, #1
   26ab8:	str	r0, [fp, #-16]
   26abc:	ldr	r0, [fp, #-16]
   26ac0:	ldr	r1, [fp, #-12]
   26ac4:	cmp	r0, r1
   26ac8:	bls	26ad0 <__assert_fail@plt+0x1563c>
   26acc:	b	26ae4 <__assert_fail@plt+0x15650>
   26ad0:	b	26ad4 <__assert_fail@plt+0x15640>
   26ad4:	ldr	r0, [fp, #-16]
   26ad8:	lsl	r0, r0, #1
   26adc:	str	r0, [fp, #-16]
   26ae0:	b	26abc <__assert_fail@plt+0x15628>
   26ae4:	ldr	r1, [fp, #-16]
   26ae8:	movw	r0, #12
   26aec:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   26af0:	ldr	r1, [fp, #-8]
   26af4:	str	r0, [r1, #32]
   26af8:	ldr	r0, [fp, #-16]
   26afc:	sub	r0, r0, #1
   26b00:	ldr	r1, [fp, #-8]
   26b04:	str	r0, [r1, #68]	; 0x44
   26b08:	bl	112d8 <__ctype_get_mb_cur_max@plt>
   26b0c:	ldr	r1, [fp, #-8]
   26b10:	str	r0, [r1, #92]	; 0x5c
   26b14:	movw	r0, #14
   26b18:	bl	11440 <nl_langinfo@plt>
   26b1c:	str	r0, [fp, #-20]	; 0xffffffec
   26b20:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b24:	ldrb	r0, [r0]
   26b28:	cmp	r0, #85	; 0x55
   26b2c:	beq	26b40 <__assert_fail@plt+0x156ac>
   26b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b34:	ldrb	r0, [r0]
   26b38:	cmp	r0, #117	; 0x75
   26b3c:	bne	26bd0 <__assert_fail@plt+0x1573c>
   26b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b44:	ldrb	r0, [r0, #1]
   26b48:	cmp	r0, #84	; 0x54
   26b4c:	beq	26b60 <__assert_fail@plt+0x156cc>
   26b50:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b54:	ldrb	r0, [r0, #1]
   26b58:	cmp	r0, #116	; 0x74
   26b5c:	bne	26bd0 <__assert_fail@plt+0x1573c>
   26b60:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b64:	ldrb	r0, [r0, #2]
   26b68:	cmp	r0, #70	; 0x46
   26b6c:	beq	26b80 <__assert_fail@plt+0x156ec>
   26b70:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b74:	ldrb	r0, [r0, #2]
   26b78:	cmp	r0, #102	; 0x66
   26b7c:	bne	26bd0 <__assert_fail@plt+0x1573c>
   26b80:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b84:	add	r0, r0, #3
   26b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   26b8c:	ldrb	r1, [r1, #3]
   26b90:	cmp	r1, #45	; 0x2d
   26b94:	movw	r1, #0
   26b98:	moveq	r1, #1
   26b9c:	and	r1, r1, #1
   26ba0:	add	r0, r0, r1
   26ba4:	movw	r1, #21728	; 0x54e0
   26ba8:	movt	r1, #4
   26bac:	bl	111d0 <strcmp@plt>
   26bb0:	cmp	r0, #0
   26bb4:	bne	26bd0 <__assert_fail@plt+0x1573c>
   26bb8:	ldr	r0, [fp, #-8]
   26bbc:	ldrb	r1, [r0, #88]	; 0x58
   26bc0:	bic	r1, r1, #4
   26bc4:	movw	r2, #4
   26bc8:	orr	r1, r1, r2
   26bcc:	strb	r1, [r0, #88]	; 0x58
   26bd0:	ldr	r0, [fp, #-8]
   26bd4:	ldrb	r1, [r0, #88]	; 0x58
   26bd8:	bic	r1, r1, #8
   26bdc:	strb	r1, [r0, #88]	; 0x58
   26be0:	ldr	r0, [fp, #-8]
   26be4:	ldr	r0, [r0, #92]	; 0x5c
   26be8:	cmp	r0, #1
   26bec:	ble	26d34 <__assert_fail@plt+0x158a0>
   26bf0:	ldr	r0, [fp, #-8]
   26bf4:	ldrb	r0, [r0, #88]	; 0x58
   26bf8:	ubfx	r0, r0, #2, #1
   26bfc:	and	r0, r0, #255	; 0xff
   26c00:	cmp	r0, #0
   26c04:	beq	26c1c <__assert_fail@plt+0x15788>
   26c08:	ldr	r0, [fp, #-8]
   26c0c:	movw	r1, #22292	; 0x5714
   26c10:	movt	r1, #4
   26c14:	str	r1, [r0, #60]	; 0x3c
   26c18:	b	26d30 <__assert_fail@plt+0x1589c>
   26c1c:	movw	r0, #32
   26c20:	movw	r1, #1
   26c24:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   26c28:	ldr	r1, [fp, #-8]
   26c2c:	str	r0, [r1, #60]	; 0x3c
   26c30:	ldr	r0, [fp, #-8]
   26c34:	ldr	r0, [r0, #60]	; 0x3c
   26c38:	movw	r1, #0
   26c3c:	cmp	r0, r1
   26c40:	bne	26c50 <__assert_fail@plt+0x157bc>
   26c44:	movw	r0, #12
   26c48:	str	r0, [fp, #-4]
   26c4c:	b	26d8c <__assert_fail@plt+0x158f8>
   26c50:	movw	r0, #0
   26c54:	str	r0, [fp, #-32]	; 0xffffffe0
   26c58:	str	r0, [fp, #-40]	; 0xffffffd8
   26c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26c60:	cmp	r0, #8
   26c64:	bge	26d2c <__assert_fail@plt+0x15898>
   26c68:	movw	r0, #0
   26c6c:	str	r0, [fp, #-36]	; 0xffffffdc
   26c70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26c74:	cmp	r0, #32
   26c78:	bge	26d18 <__assert_fail@plt+0x15884>
   26c7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26c80:	bl	113e0 <btowc@plt>
   26c84:	str	r0, [fp, #-44]	; 0xffffffd4
   26c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26c8c:	cmn	r0, #1
   26c90:	beq	26cbc <__assert_fail@plt+0x15828>
   26c94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26c98:	mov	r1, #1
   26c9c:	lsl	r0, r1, r0
   26ca0:	ldr	r1, [fp, #-8]
   26ca4:	ldr	r1, [r1, #60]	; 0x3c
   26ca8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26cac:	add	r1, r1, r2, lsl #2
   26cb0:	ldr	r2, [r1]
   26cb4:	orr	r0, r2, r0
   26cb8:	str	r0, [r1]
   26cbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26cc0:	mvn	r1, #127	; 0x7f
   26cc4:	and	r0, r0, r1
   26cc8:	cmp	r0, #0
   26ccc:	bne	26cf8 <__assert_fail@plt+0x15864>
   26cd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26cd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26cd8:	cmp	r0, r1
   26cdc:	beq	26cf8 <__assert_fail@plt+0x15864>
   26ce0:	ldr	r0, [fp, #-8]
   26ce4:	ldrb	r1, [r0, #88]	; 0x58
   26ce8:	bic	r1, r1, #8
   26cec:	movw	r2, #8
   26cf0:	orr	r1, r1, r2
   26cf4:	strb	r1, [r0, #88]	; 0x58
   26cf8:	b	26cfc <__assert_fail@plt+0x15868>
   26cfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26d00:	add	r0, r0, #1
   26d04:	str	r0, [fp, #-36]	; 0xffffffdc
   26d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26d0c:	add	r0, r0, #1
   26d10:	str	r0, [fp, #-40]	; 0xffffffd8
   26d14:	b	26c70 <__assert_fail@plt+0x157dc>
   26d18:	b	26d1c <__assert_fail@plt+0x15888>
   26d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26d20:	add	r0, r0, #1
   26d24:	str	r0, [fp, #-32]	; 0xffffffe0
   26d28:	b	26c5c <__assert_fail@plt+0x157c8>
   26d2c:	b	26d30 <__assert_fail@plt+0x1589c>
   26d30:	b	26d34 <__assert_fail@plt+0x158a0>
   26d34:	ldr	r0, [fp, #-8]
   26d38:	ldr	r0, [r0]
   26d3c:	movw	r1, #0
   26d40:	cmp	r0, r1
   26d44:	movw	r0, #1
   26d48:	str	r0, [sp, #4]
   26d4c:	beq	26d6c <__assert_fail@plt+0x158d8>
   26d50:	ldr	r0, [fp, #-8]
   26d54:	ldr	r0, [r0, #32]
   26d58:	movw	r1, #0
   26d5c:	cmp	r0, r1
   26d60:	movw	r0, #0
   26d64:	moveq	r0, #1
   26d68:	str	r0, [sp, #4]
   26d6c:	ldr	r0, [sp, #4]
   26d70:	tst	r0, #1
   26d74:	beq	26d84 <__assert_fail@plt+0x158f0>
   26d78:	movw	r0, #12
   26d7c:	str	r0, [fp, #-4]
   26d80:	b	26d8c <__assert_fail@plt+0x158f8>
   26d84:	movw	r0, #0
   26d88:	str	r0, [fp, #-4]
   26d8c:	ldr	r0, [fp, #-4]
   26d90:	mov	sp, fp
   26d94:	pop	{fp, pc}
   26d98:	svcvc	0x00ffffff
   26d9c:	push	{fp, lr}
   26da0:	mov	fp, sp
   26da4:	sub	sp, sp, #48	; 0x30
   26da8:	ldr	ip, [fp, #12]
   26dac:	ldr	lr, [fp, #8]
   26db0:	str	r0, [fp, #-8]
   26db4:	str	r1, [fp, #-12]
   26db8:	str	r2, [fp, #-16]
   26dbc:	str	r3, [fp, #-20]	; 0xffffffec
   26dc0:	and	r0, lr, #1
   26dc4:	strb	r0, [fp, #-21]	; 0xffffffeb
   26dc8:	ldr	r0, [fp, #-8]
   26dcc:	movw	r1, #0
   26dd0:	and	r1, r1, #255	; 0xff
   26dd4:	movw	r2, #84	; 0x54
   26dd8:	str	ip, [sp, #16]
   26ddc:	bl	113d4 <memset@plt>
   26de0:	ldr	r0, [fp, #-12]
   26de4:	ldr	r1, [fp, #-16]
   26de8:	ldr	r2, [fp, #-8]
   26dec:	ldr	r3, [fp, #-20]	; 0xffffffec
   26df0:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   26df4:	ldr	lr, [fp, #12]
   26df8:	and	ip, ip, #1
   26dfc:	str	ip, [sp]
   26e00:	str	lr, [sp, #4]
   26e04:	bl	27c54 <__assert_fail@plt+0x167c0>
   26e08:	ldr	r0, [fp, #-16]
   26e0c:	cmp	r0, #0
   26e10:	ble	26e44 <__assert_fail@plt+0x159b0>
   26e14:	ldr	r0, [fp, #-8]
   26e18:	ldr	r1, [fp, #-16]
   26e1c:	add	r1, r1, #1
   26e20:	bl	27d54 <__assert_fail@plt+0x168c0>
   26e24:	str	r0, [sp, #20]
   26e28:	ldr	r0, [sp, #20]
   26e2c:	cmp	r0, #0
   26e30:	beq	26e40 <__assert_fail@plt+0x159ac>
   26e34:	ldr	r0, [sp, #20]
   26e38:	str	r0, [fp, #-4]
   26e3c:	b	26fa4 <__assert_fail@plt+0x15b10>
   26e40:	b	26e44 <__assert_fail@plt+0x159b0>
   26e44:	ldr	r0, [fp, #-8]
   26e48:	ldrb	r0, [r0, #75]	; 0x4b
   26e4c:	cmp	r0, #0
   26e50:	beq	26e64 <__assert_fail@plt+0x159d0>
   26e54:	ldr	r0, [fp, #-8]
   26e58:	ldr	r0, [r0, #4]
   26e5c:	str	r0, [sp, #12]
   26e60:	b	26e6c <__assert_fail@plt+0x159d8>
   26e64:	ldr	r0, [fp, #-12]
   26e68:	str	r0, [sp, #12]
   26e6c:	ldr	r0, [sp, #12]
   26e70:	ldr	r1, [fp, #-8]
   26e74:	str	r0, [r1, #4]
   26e78:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   26e7c:	tst	r0, #1
   26e80:	beq	26f3c <__assert_fail@plt+0x15aa8>
   26e84:	ldr	r0, [fp, #12]
   26e88:	ldr	r0, [r0, #92]	; 0x5c
   26e8c:	cmp	r0, #1
   26e90:	ble	26f30 <__assert_fail@plt+0x15a9c>
   26e94:	b	26e98 <__assert_fail@plt+0x15a04>
   26e98:	ldr	r0, [fp, #-8]
   26e9c:	bl	27eac <__assert_fail@plt+0x16a18>
   26ea0:	str	r0, [sp, #20]
   26ea4:	ldr	r0, [sp, #20]
   26ea8:	cmp	r0, #0
   26eac:	beq	26ebc <__assert_fail@plt+0x15a28>
   26eb0:	ldr	r0, [sp, #20]
   26eb4:	str	r0, [fp, #-4]
   26eb8:	b	26fa4 <__assert_fail@plt+0x15b10>
   26ebc:	ldr	r0, [fp, #-8]
   26ec0:	ldr	r0, [r0, #32]
   26ec4:	ldr	r1, [fp, #-16]
   26ec8:	cmp	r0, r1
   26ecc:	blt	26ed4 <__assert_fail@plt+0x15a40>
   26ed0:	b	26f2c <__assert_fail@plt+0x15a98>
   26ed4:	ldr	r0, [fp, #-8]
   26ed8:	ldr	r0, [r0, #36]	; 0x24
   26edc:	ldr	r1, [fp, #-8]
   26ee0:	ldr	r1, [r1, #28]
   26ee4:	ldr	r2, [fp, #12]
   26ee8:	ldr	r2, [r2, #92]	; 0x5c
   26eec:	add	r1, r1, r2
   26ef0:	cmp	r0, r1
   26ef4:	ble	26efc <__assert_fail@plt+0x15a68>
   26ef8:	b	26f2c <__assert_fail@plt+0x15a98>
   26efc:	ldr	r0, [fp, #-8]
   26f00:	ldr	r1, [r0, #36]	; 0x24
   26f04:	lsl	r1, r1, #1
   26f08:	bl	27d54 <__assert_fail@plt+0x168c0>
   26f0c:	str	r0, [sp, #20]
   26f10:	ldr	r0, [sp, #20]
   26f14:	cmp	r0, #0
   26f18:	beq	26f28 <__assert_fail@plt+0x15a94>
   26f1c:	ldr	r0, [sp, #20]
   26f20:	str	r0, [fp, #-4]
   26f24:	b	26fa4 <__assert_fail@plt+0x15b10>
   26f28:	b	26e98 <__assert_fail@plt+0x15a04>
   26f2c:	b	26f38 <__assert_fail@plt+0x15aa4>
   26f30:	ldr	r0, [fp, #-8]
   26f34:	bl	28954 <__assert_fail@plt+0x174c0>
   26f38:	b	26f9c <__assert_fail@plt+0x15b08>
   26f3c:	ldr	r0, [fp, #12]
   26f40:	ldr	r0, [r0, #92]	; 0x5c
   26f44:	cmp	r0, #1
   26f48:	ble	26f58 <__assert_fail@plt+0x15ac4>
   26f4c:	ldr	r0, [fp, #-8]
   26f50:	bl	28a58 <__assert_fail@plt+0x175c4>
   26f54:	b	26f98 <__assert_fail@plt+0x15b04>
   26f58:	ldr	r0, [fp, #-20]	; 0xffffffec
   26f5c:	movw	r1, #0
   26f60:	cmp	r0, r1
   26f64:	beq	26f74 <__assert_fail@plt+0x15ae0>
   26f68:	ldr	r0, [fp, #-8]
   26f6c:	bl	28d98 <__assert_fail@plt+0x17904>
   26f70:	b	26f94 <__assert_fail@plt+0x15b00>
   26f74:	ldr	r0, [fp, #-8]
   26f78:	ldr	r0, [r0, #36]	; 0x24
   26f7c:	ldr	r1, [fp, #-8]
   26f80:	str	r0, [r1, #28]
   26f84:	ldr	r0, [fp, #-8]
   26f88:	ldr	r0, [r0, #36]	; 0x24
   26f8c:	ldr	r1, [fp, #-8]
   26f90:	str	r0, [r1, #32]
   26f94:	b	26f98 <__assert_fail@plt+0x15b04>
   26f98:	b	26f9c <__assert_fail@plt+0x15b08>
   26f9c:	movw	r0, #0
   26fa0:	str	r0, [fp, #-4]
   26fa4:	ldr	r0, [fp, #-4]
   26fa8:	mov	sp, fp
   26fac:	pop	{fp, pc}
   26fb0:	push	{fp, lr}
   26fb4:	mov	fp, sp
   26fb8:	sub	sp, sp, #16
   26fbc:	str	r0, [fp, #-4]
   26fc0:	ldr	r0, [fp, #-4]
   26fc4:	ldr	r0, [r0]
   26fc8:	str	r0, [sp, #8]
   26fcc:	ldr	r0, [sp, #8]
   26fd0:	ldr	r0, [r0, #56]	; 0x38
   26fd4:	str	r0, [sp, #4]
   26fd8:	ldr	r0, [sp, #4]
   26fdc:	movw	r1, #0
   26fe0:	cmp	r0, r1
   26fe4:	beq	27008 <__assert_fail@plt+0x15b74>
   26fe8:	ldr	r0, [sp, #4]
   26fec:	ldr	r0, [r0]
   26ff0:	str	r0, [sp]
   26ff4:	ldr	r0, [sp, #4]
   26ff8:	bl	1388c <__assert_fail@plt+0x23f8>
   26ffc:	ldr	r0, [sp]
   27000:	str	r0, [sp, #4]
   27004:	b	26fd8 <__assert_fail@plt+0x15b44>
   27008:	ldr	r0, [sp, #8]
   2700c:	movw	r1, #0
   27010:	str	r1, [r0, #56]	; 0x38
   27014:	ldr	r0, [sp, #8]
   27018:	movw	r2, #31
   2701c:	str	r2, [r0, #64]	; 0x40
   27020:	ldr	r0, [sp, #8]
   27024:	str	r1, [r0, #52]	; 0x34
   27028:	ldr	r0, [sp, #8]
   2702c:	ldr	r0, [r0, #16]
   27030:	bl	1388c <__assert_fail@plt+0x23f8>
   27034:	ldr	r0, [sp, #8]
   27038:	movw	r1, #0
   2703c:	str	r1, [r0, #16]
   27040:	mov	sp, fp
   27044:	pop	{fp, pc}
   27048:	push	{fp, lr}
   2704c:	mov	fp, sp
   27050:	sub	sp, sp, #8
   27054:	str	r0, [sp, #4]
   27058:	ldr	r0, [sp, #4]
   2705c:	ldr	r0, [r0, #8]
   27060:	bl	1388c <__assert_fail@plt+0x23f8>
   27064:	ldr	r0, [sp, #4]
   27068:	ldr	r0, [r0, #12]
   2706c:	bl	1388c <__assert_fail@plt+0x23f8>
   27070:	ldr	r0, [sp, #4]
   27074:	ldrsb	r0, [r0, #75]	; 0x4b
   27078:	cmp	r0, #0
   2707c:	beq	2708c <__assert_fail@plt+0x15bf8>
   27080:	ldr	r0, [sp, #4]
   27084:	ldr	r0, [r0, #4]
   27088:	bl	1388c <__assert_fail@plt+0x23f8>
   2708c:	mov	sp, fp
   27090:	pop	{fp, pc}
   27094:	push	{fp, lr}
   27098:	mov	fp, sp
   2709c:	sub	sp, sp, #72	; 0x48
   270a0:	str	r0, [fp, #-8]
   270a4:	str	r1, [fp, #-12]
   270a8:	str	r2, [fp, #-16]
   270ac:	str	r3, [fp, #-20]	; 0xffffffec
   270b0:	ldr	r0, [fp, #-12]
   270b4:	ldr	r0, [r0]
   270b8:	str	r0, [fp, #-24]	; 0xffffffe8
   270bc:	ldr	r0, [fp, #-16]
   270c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   270c4:	str	r0, [r1, #128]	; 0x80
   270c8:	ldr	r1, [fp, #-8]
   270cc:	ldr	r0, [fp, #-16]
   270d0:	orr	r2, r0, #8388608	; 0x800000
   270d4:	add	r0, sp, #28
   270d8:	bl	28e74 <__assert_fail@plt+0x179e0>
   270dc:	ldr	r0, [fp, #-8]
   270e0:	ldr	r1, [fp, #-12]
   270e4:	ldr	r3, [fp, #-16]
   270e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   270ec:	add	ip, sp, #28
   270f0:	str	r2, [sp, #24]
   270f4:	mov	r2, ip
   270f8:	movw	ip, #0
   270fc:	str	ip, [sp]
   27100:	ldr	ip, [sp, #24]
   27104:	str	ip, [sp, #4]
   27108:	bl	28eb4 <__assert_fail@plt+0x17a20>
   2710c:	str	r0, [fp, #-28]	; 0xffffffe4
   27110:	ldr	r0, [fp, #-20]	; 0xffffffec
   27114:	ldr	r0, [r0]
   27118:	cmp	r0, #0
   2711c:	movw	r0, #0
   27120:	str	r0, [sp, #20]
   27124:	beq	27140 <__assert_fail@plt+0x15cac>
   27128:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2712c:	movw	r1, #0
   27130:	cmp	r0, r1
   27134:	movw	r0, #0
   27138:	moveq	r0, #1
   2713c:	str	r0, [sp, #20]
   27140:	ldr	r0, [sp, #20]
   27144:	tst	r0, #1
   27148:	beq	27158 <__assert_fail@plt+0x15cc4>
   2714c:	movw	r0, #0
   27150:	str	r0, [fp, #-4]
   27154:	b	27204 <__assert_fail@plt+0x15d70>
   27158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2715c:	movw	r1, #0
   27160:	str	r1, [sp, #16]
   27164:	ldr	r2, [sp, #16]
   27168:	movw	r3, #2
   2716c:	bl	29108 <__assert_fail@plt+0x17c74>
   27170:	str	r0, [fp, #-32]	; 0xffffffe0
   27174:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27178:	movw	r1, #0
   2717c:	cmp	r0, r1
   27180:	beq	271a0 <__assert_fail@plt+0x15d0c>
   27184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2718c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27190:	movw	r3, #16
   27194:	bl	29108 <__assert_fail@plt+0x17c74>
   27198:	str	r0, [sp, #36]	; 0x24
   2719c:	b	271a8 <__assert_fail@plt+0x15d14>
   271a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   271a4:	str	r0, [sp, #36]	; 0x24
   271a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   271ac:	movw	r1, #0
   271b0:	cmp	r0, r1
   271b4:	movw	r0, #1
   271b8:	str	r0, [sp, #12]
   271bc:	beq	271d8 <__assert_fail@plt+0x15d44>
   271c0:	ldr	r0, [sp, #36]	; 0x24
   271c4:	movw	r1, #0
   271c8:	cmp	r0, r1
   271cc:	movw	r0, #0
   271d0:	moveq	r0, #1
   271d4:	str	r0, [sp, #12]
   271d8:	ldr	r0, [sp, #12]
   271dc:	tst	r0, #1
   271e0:	beq	271fc <__assert_fail@plt+0x15d68>
   271e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   271e8:	movw	r1, #12
   271ec:	str	r1, [r0]
   271f0:	movw	r0, #0
   271f4:	str	r0, [fp, #-4]
   271f8:	b	27204 <__assert_fail@plt+0x15d70>
   271fc:	ldr	r0, [sp, #36]	; 0x24
   27200:	str	r0, [fp, #-4]
   27204:	ldr	r0, [fp, #-4]
   27208:	mov	sp, fp
   2720c:	pop	{fp, pc}
   27210:	push	{fp, lr}
   27214:	mov	fp, sp
   27218:	sub	sp, sp, #48	; 0x30
   2721c:	str	r0, [fp, #-8]
   27220:	ldr	r0, [fp, #-8]
   27224:	ldr	r0, [r0]
   27228:	str	r0, [fp, #-12]
   2722c:	ldr	r0, [fp, #-12]
   27230:	ldr	r0, [r0, #4]
   27234:	lsl	r0, r0, #2
   27238:	bl	3f908 <__assert_fail@plt+0x2e474>
   2723c:	ldr	r1, [fp, #-12]
   27240:	str	r0, [r1, #12]
   27244:	ldr	r0, [fp, #-12]
   27248:	ldr	r0, [r0, #4]
   2724c:	lsl	r0, r0, #2
   27250:	bl	3f908 <__assert_fail@plt+0x2e474>
   27254:	ldr	r1, [fp, #-12]
   27258:	str	r0, [r1, #16]
   2725c:	ldr	r0, [fp, #-12]
   27260:	ldr	r0, [r0, #4]
   27264:	movw	r1, #12
   27268:	mul	r0, r0, r1
   2726c:	bl	3f908 <__assert_fail@plt+0x2e474>
   27270:	ldr	r1, [fp, #-12]
   27274:	str	r0, [r1, #20]
   27278:	ldr	r0, [fp, #-12]
   2727c:	ldr	r0, [r0, #4]
   27280:	movw	r1, #12
   27284:	mul	r0, r0, r1
   27288:	bl	3f908 <__assert_fail@plt+0x2e474>
   2728c:	ldr	r1, [fp, #-12]
   27290:	str	r0, [r1, #24]
   27294:	ldr	r0, [fp, #-12]
   27298:	ldr	r0, [r0, #12]
   2729c:	movw	r1, #0
   272a0:	cmp	r0, r1
   272a4:	movw	r0, #1
   272a8:	str	r0, [sp, #24]
   272ac:	beq	27304 <__assert_fail@plt+0x15e70>
   272b0:	ldr	r0, [fp, #-12]
   272b4:	ldr	r0, [r0, #16]
   272b8:	movw	r1, #0
   272bc:	cmp	r0, r1
   272c0:	movw	r0, #1
   272c4:	str	r0, [sp, #24]
   272c8:	beq	27304 <__assert_fail@plt+0x15e70>
   272cc:	ldr	r0, [fp, #-12]
   272d0:	ldr	r0, [r0, #20]
   272d4:	movw	r1, #0
   272d8:	cmp	r0, r1
   272dc:	movw	r0, #1
   272e0:	str	r0, [sp, #24]
   272e4:	beq	27304 <__assert_fail@plt+0x15e70>
   272e8:	ldr	r0, [fp, #-12]
   272ec:	ldr	r0, [r0, #24]
   272f0:	movw	r1, #0
   272f4:	cmp	r0, r1
   272f8:	movw	r0, #0
   272fc:	moveq	r0, #1
   27300:	str	r0, [sp, #24]
   27304:	ldr	r0, [sp, #24]
   27308:	tst	r0, #1
   2730c:	beq	2731c <__assert_fail@plt+0x15e88>
   27310:	movw	r0, #12
   27314:	str	r0, [fp, #-4]
   27318:	b	275d8 <__assert_fail@plt+0x16144>
   2731c:	ldr	r0, [fp, #-8]
   27320:	ldr	r0, [r0, #24]
   27324:	lsl	r0, r0, #2
   27328:	bl	3f908 <__assert_fail@plt+0x2e474>
   2732c:	ldr	r1, [fp, #-12]
   27330:	str	r0, [r1, #132]	; 0x84
   27334:	ldr	r0, [fp, #-12]
   27338:	ldr	r0, [r0, #132]	; 0x84
   2733c:	movw	r1, #0
   27340:	cmp	r0, r1
   27344:	beq	27434 <__assert_fail@plt+0x15fa0>
   27348:	movw	r0, #0
   2734c:	str	r0, [fp, #-20]	; 0xffffffec
   27350:	ldr	r0, [fp, #-20]	; 0xffffffec
   27354:	ldr	r1, [fp, #-8]
   27358:	ldr	r1, [r1, #24]
   2735c:	cmp	r0, r1
   27360:	bcs	2738c <__assert_fail@plt+0x15ef8>
   27364:	ldr	r0, [fp, #-20]	; 0xffffffec
   27368:	mov	r1, r0
   2736c:	ldr	r2, [fp, #-12]
   27370:	ldr	r2, [r2, #132]	; 0x84
   27374:	add	r0, r2, r0, lsl #2
   27378:	str	r1, [r0]
   2737c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27380:	add	r0, r0, #1
   27384:	str	r0, [fp, #-20]	; 0xffffffec
   27388:	b	27350 <__assert_fail@plt+0x15ebc>
   2738c:	ldr	r0, [fp, #-12]
   27390:	ldr	r0, [r0, #52]	; 0x34
   27394:	ldr	r1, [fp, #-12]
   27398:	movw	r2, #59804	; 0xe99c
   2739c:	movt	r2, #2
   273a0:	str	r1, [sp, #20]
   273a4:	mov	r1, r2
   273a8:	ldr	r2, [sp, #20]
   273ac:	bl	2e880 <__assert_fail@plt+0x1d3ec>
   273b0:	movw	r1, #0
   273b4:	str	r1, [fp, #-20]	; 0xffffffec
   273b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   273bc:	ldr	r1, [fp, #-8]
   273c0:	ldr	r1, [r1, #24]
   273c4:	cmp	r0, r1
   273c8:	bcs	27404 <__assert_fail@plt+0x15f70>
   273cc:	ldr	r0, [fp, #-12]
   273d0:	ldr	r0, [r0, #132]	; 0x84
   273d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   273d8:	add	r0, r0, r1, lsl #2
   273dc:	ldr	r0, [r0]
   273e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   273e4:	cmp	r0, r1
   273e8:	beq	273f0 <__assert_fail@plt+0x15f5c>
   273ec:	b	27404 <__assert_fail@plt+0x15f70>
   273f0:	b	273f4 <__assert_fail@plt+0x15f60>
   273f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   273f8:	add	r0, r0, #1
   273fc:	str	r0, [fp, #-20]	; 0xffffffec
   27400:	b	273b8 <__assert_fail@plt+0x15f24>
   27404:	ldr	r0, [fp, #-20]	; 0xffffffec
   27408:	ldr	r1, [fp, #-8]
   2740c:	ldr	r1, [r1, #24]
   27410:	cmp	r0, r1
   27414:	bne	27430 <__assert_fail@plt+0x15f9c>
   27418:	ldr	r0, [fp, #-12]
   2741c:	ldr	r0, [r0, #132]	; 0x84
   27420:	bl	1388c <__assert_fail@plt+0x23f8>
   27424:	ldr	r0, [fp, #-12]
   27428:	movw	r1, #0
   2742c:	str	r1, [r0, #132]	; 0x84
   27430:	b	27434 <__assert_fail@plt+0x15fa0>
   27434:	ldr	r0, [fp, #-12]
   27438:	ldr	r0, [r0, #52]	; 0x34
   2743c:	ldr	r1, [fp, #-8]
   27440:	movw	r2, #60176	; 0xeb10
   27444:	movt	r2, #2
   27448:	str	r1, [sp, #16]
   2744c:	mov	r1, r2
   27450:	ldr	r2, [sp, #16]
   27454:	bl	2a4f8 <__assert_fail@plt+0x19064>
   27458:	str	r0, [fp, #-16]
   2745c:	ldr	r0, [fp, #-16]
   27460:	cmp	r0, #0
   27464:	beq	27474 <__assert_fail@plt+0x15fe0>
   27468:	ldr	r0, [fp, #-16]
   2746c:	str	r0, [fp, #-4]
   27470:	b	275d8 <__assert_fail@plt+0x16144>
   27474:	ldr	r0, [fp, #-12]
   27478:	ldr	r0, [r0, #52]	; 0x34
   2747c:	ldr	r1, [fp, #-12]
   27480:	movw	r2, #60444	; 0xec1c
   27484:	movt	r2, #2
   27488:	str	r1, [sp, #12]
   2748c:	mov	r1, r2
   27490:	ldr	r2, [sp, #12]
   27494:	bl	2a4f8 <__assert_fail@plt+0x19064>
   27498:	str	r0, [fp, #-16]
   2749c:	ldr	r0, [fp, #-16]
   274a0:	cmp	r0, #0
   274a4:	beq	274b4 <__assert_fail@plt+0x16020>
   274a8:	ldr	r0, [fp, #-16]
   274ac:	str	r0, [fp, #-4]
   274b0:	b	275d8 <__assert_fail@plt+0x16144>
   274b4:	ldr	r0, [fp, #-12]
   274b8:	ldr	r0, [r0, #52]	; 0x34
   274bc:	ldr	r1, [fp, #-12]
   274c0:	movw	r2, #60716	; 0xed2c
   274c4:	movt	r2, #2
   274c8:	str	r1, [sp, #8]
   274cc:	mov	r1, r2
   274d0:	ldr	r2, [sp, #8]
   274d4:	bl	2e880 <__assert_fail@plt+0x1d3ec>
   274d8:	ldr	r1, [fp, #-12]
   274dc:	ldr	r1, [r1, #52]	; 0x34
   274e0:	ldr	r2, [fp, #-12]
   274e4:	str	r0, [sp, #4]
   274e8:	mov	r0, r1
   274ec:	movw	r1, #60936	; 0xee08
   274f0:	movt	r1, #2
   274f4:	bl	2e880 <__assert_fail@plt+0x1d3ec>
   274f8:	str	r0, [fp, #-16]
   274fc:	ldr	r0, [fp, #-16]
   27500:	cmp	r0, #0
   27504:	beq	27514 <__assert_fail@plt+0x16080>
   27508:	ldr	r0, [fp, #-16]
   2750c:	str	r0, [fp, #-4]
   27510:	b	275d8 <__assert_fail@plt+0x16144>
   27514:	ldr	r0, [fp, #-12]
   27518:	bl	2f070 <__assert_fail@plt+0x1dbdc>
   2751c:	str	r0, [fp, #-16]
   27520:	ldr	r0, [fp, #-16]
   27524:	cmp	r0, #0
   27528:	beq	27538 <__assert_fail@plt+0x160a4>
   2752c:	ldr	r0, [fp, #-16]
   27530:	str	r0, [fp, #-4]
   27534:	b	275d8 <__assert_fail@plt+0x16144>
   27538:	ldr	r0, [fp, #-8]
   2753c:	ldrb	r0, [r0, #28]
   27540:	ubfx	r0, r0, #4, #1
   27544:	and	r0, r0, #255	; 0xff
   27548:	cmp	r0, #0
   2754c:	bne	27578 <__assert_fail@plt+0x160e4>
   27550:	ldr	r0, [fp, #-8]
   27554:	ldr	r0, [r0, #24]
   27558:	cmp	r0, #0
   2755c:	bls	27578 <__assert_fail@plt+0x160e4>
   27560:	ldr	r0, [fp, #-12]
   27564:	ldrb	r0, [r0, #88]	; 0x58
   27568:	and	r0, r0, #1
   2756c:	and	r0, r0, #255	; 0xff
   27570:	cmp	r0, #0
   27574:	bne	27588 <__assert_fail@plt+0x160f4>
   27578:	ldr	r0, [fp, #-12]
   2757c:	ldr	r0, [r0, #76]	; 0x4c
   27580:	cmp	r0, #0
   27584:	beq	275d0 <__assert_fail@plt+0x1613c>
   27588:	ldr	r0, [fp, #-12]
   2758c:	ldr	r0, [r0, #8]
   27590:	movw	r1, #12
   27594:	mul	r0, r0, r1
   27598:	bl	3f908 <__assert_fail@plt+0x2e474>
   2759c:	ldr	r1, [fp, #-12]
   275a0:	str	r0, [r1, #28]
   275a4:	ldr	r0, [fp, #-12]
   275a8:	ldr	r0, [r0, #28]
   275ac:	movw	r1, #0
   275b0:	cmp	r0, r1
   275b4:	bne	275c4 <__assert_fail@plt+0x16130>
   275b8:	movw	r0, #12
   275bc:	str	r0, [fp, #-4]
   275c0:	b	275d8 <__assert_fail@plt+0x16144>
   275c4:	ldr	r0, [fp, #-12]
   275c8:	bl	2f1b8 <__assert_fail@plt+0x1dd24>
   275cc:	str	r0, [fp, #-16]
   275d0:	ldr	r0, [fp, #-16]
   275d4:	str	r0, [fp, #-4]
   275d8:	ldr	r0, [fp, #-4]
   275dc:	mov	sp, fp
   275e0:	pop	{fp, pc}
   275e4:	push	{fp, lr}
   275e8:	mov	fp, sp
   275ec:	sub	sp, sp, #32
   275f0:	str	r0, [fp, #-4]
   275f4:	movw	r0, #0
   275f8:	strb	r0, [fp, #-13]
   275fc:	strb	r0, [fp, #-14]
   27600:	movw	r0, #0
   27604:	str	r0, [fp, #-8]
   27608:	ldr	r0, [fp, #-8]
   2760c:	ldr	r1, [fp, #-4]
   27610:	ldr	r1, [r1, #8]
   27614:	cmp	r0, r1
   27618:	bcs	27798 <__assert_fail@plt+0x16304>
   2761c:	ldr	r0, [fp, #-4]
   27620:	ldr	r0, [r0]
   27624:	ldr	r1, [fp, #-8]
   27628:	add	r0, r0, r1, lsl #3
   2762c:	ldrb	r0, [r0, #4]
   27630:	sub	r0, r0, #1
   27634:	cmp	r0, #11
   27638:	str	r0, [sp, #8]
   2763c:	bhi	27780 <__assert_fail@plt+0x162ec>
   27640:	add	r0, pc, #8
   27644:	ldr	r1, [sp, #8]
   27648:	ldr	r0, [r0, r1, lsl #2]
   2764c:	mov	pc, r0
   27650:	andeq	r7, r2, r0, lsl #13
   27654:	andeq	r7, r2, r0, lsl r7
   27658:	andeq	r7, r2, r8, lsl r7
   2765c:	andeq	r7, r2, r0, lsl r7
   27660:	andeq	r7, r2, r4, lsl #14
   27664:	andeq	r7, r2, r4, lsl r7
   27668:	andeq	r7, r2, r0, lsl #15
   2766c:	andeq	r7, r2, r0, lsl r7
   27670:	andeq	r7, r2, r0, lsl r7
   27674:	andeq	r7, r2, r0, lsl r7
   27678:	andeq	r7, r2, r0, lsl r7
   2767c:	andeq	r7, r2, r8, lsr #13
   27680:	ldr	r0, [fp, #-4]
   27684:	ldr	r0, [r0]
   27688:	ldr	r1, [fp, #-8]
   2768c:	add	r0, r0, r1, lsl #3
   27690:	ldrb	r0, [r0]
   27694:	cmp	r0, #128	; 0x80
   27698:	blt	276a4 <__assert_fail@plt+0x16210>
   2769c:	movw	r0, #1
   276a0:	strb	r0, [fp, #-13]
   276a4:	b	27784 <__assert_fail@plt+0x162f0>
   276a8:	ldr	r0, [fp, #-4]
   276ac:	ldr	r0, [r0]
   276b0:	ldr	r1, [fp, #-8]
   276b4:	ldr	r0, [r0, r1, lsl #3]
   276b8:	cmp	r0, #16
   276bc:	str	r0, [sp, #4]
   276c0:	beq	276f8 <__assert_fail@plt+0x16264>
   276c4:	b	276c8 <__assert_fail@plt+0x16234>
   276c8:	ldr	r0, [sp, #4]
   276cc:	cmp	r0, #32
   276d0:	beq	276f8 <__assert_fail@plt+0x16264>
   276d4:	b	276d8 <__assert_fail@plt+0x16244>
   276d8:	ldr	r0, [sp, #4]
   276dc:	cmp	r0, #64	; 0x40
   276e0:	beq	276f8 <__assert_fail@plt+0x16264>
   276e4:	b	276e8 <__assert_fail@plt+0x16254>
   276e8:	ldr	r0, [sp, #4]
   276ec:	cmp	r0, #128	; 0x80
   276f0:	bne	276fc <__assert_fail@plt+0x16268>
   276f4:	b	276f8 <__assert_fail@plt+0x16264>
   276f8:	b	27700 <__assert_fail@plt+0x1626c>
   276fc:	b	278e8 <__assert_fail@plt+0x16454>
   27700:	b	27784 <__assert_fail@plt+0x162f0>
   27704:	movw	r0, #1
   27708:	strb	r0, [fp, #-14]
   2770c:	b	27784 <__assert_fail@plt+0x162f0>
   27710:	b	27784 <__assert_fail@plt+0x162f0>
   27714:	b	278e8 <__assert_fail@plt+0x16454>
   27718:	movw	r0, #0
   2771c:	str	r0, [sp, #12]
   27720:	movw	r0, #4
   27724:	str	r0, [fp, #-12]
   27728:	ldr	r0, [fp, #-12]
   2772c:	cmp	r0, #8
   27730:	bge	2777c <__assert_fail@plt+0x162e8>
   27734:	ldr	r0, [fp, #-4]
   27738:	ldr	r0, [r0]
   2773c:	ldr	r1, [fp, #-8]
   27740:	ldr	r0, [r0, r1, lsl #3]
   27744:	ldr	r1, [fp, #-12]
   27748:	add	r0, r0, r1, lsl #2
   2774c:	ldr	r0, [r0]
   27750:	ldr	r1, [sp, #12]
   27754:	lsr	r0, r0, r1
   27758:	cmp	r0, #0
   2775c:	beq	27764 <__assert_fail@plt+0x162d0>
   27760:	b	278e8 <__assert_fail@plt+0x16454>
   27764:	movw	r0, #0
   27768:	str	r0, [sp, #12]
   2776c:	ldr	r0, [fp, #-12]
   27770:	add	r0, r0, #1
   27774:	str	r0, [fp, #-12]
   27778:	b	27728 <__assert_fail@plt+0x16294>
   2777c:	b	27784 <__assert_fail@plt+0x162f0>
   27780:	bl	1147c <abort@plt>
   27784:	b	27788 <__assert_fail@plt+0x162f4>
   27788:	ldr	r0, [fp, #-8]
   2778c:	add	r0, r0, #1
   27790:	str	r0, [fp, #-8]
   27794:	b	27608 <__assert_fail@plt+0x16174>
   27798:	ldrb	r0, [fp, #-13]
   2779c:	tst	r0, #1
   277a0:	bne	277b0 <__assert_fail@plt+0x1631c>
   277a4:	ldrb	r0, [fp, #-14]
   277a8:	tst	r0, #1
   277ac:	beq	2788c <__assert_fail@plt+0x163f8>
   277b0:	movw	r0, #0
   277b4:	str	r0, [fp, #-8]
   277b8:	ldr	r0, [fp, #-8]
   277bc:	ldr	r1, [fp, #-4]
   277c0:	ldr	r1, [r1, #8]
   277c4:	cmp	r0, r1
   277c8:	bcs	27888 <__assert_fail@plt+0x163f4>
   277cc:	ldr	r0, [fp, #-4]
   277d0:	ldr	r0, [r0]
   277d4:	ldr	r1, [fp, #-8]
   277d8:	add	r0, r0, r1, lsl #3
   277dc:	ldr	r0, [r0, #4]
   277e0:	and	r0, r0, #255	; 0xff
   277e4:	cmp	r0, #1
   277e8:	bne	2782c <__assert_fail@plt+0x16398>
   277ec:	ldr	r0, [fp, #-4]
   277f0:	ldr	r0, [r0]
   277f4:	ldr	r1, [fp, #-8]
   277f8:	add	r0, r0, r1, lsl #3
   277fc:	ldrb	r0, [r0]
   27800:	cmp	r0, #128	; 0x80
   27804:	blt	2782c <__assert_fail@plt+0x16398>
   27808:	ldr	r0, [fp, #-4]
   2780c:	ldr	r0, [r0]
   27810:	ldr	r1, [fp, #-8]
   27814:	add	r0, r0, r1, lsl #3
   27818:	ldr	r1, [r0, #4]
   2781c:	mvn	r2, #2097152	; 0x200000
   27820:	and	r1, r1, r2
   27824:	str	r1, [r0, #4]
   27828:	b	27874 <__assert_fail@plt+0x163e0>
   2782c:	ldr	r0, [fp, #-4]
   27830:	ldr	r0, [r0]
   27834:	ldr	r1, [fp, #-8]
   27838:	add	r0, r0, r1, lsl #3
   2783c:	ldr	r0, [r0, #4]
   27840:	and	r0, r0, #255	; 0xff
   27844:	cmp	r0, #5
   27848:	bne	27870 <__assert_fail@plt+0x163dc>
   2784c:	ldr	r0, [fp, #-4]
   27850:	ldr	r0, [r0]
   27854:	ldr	r1, [fp, #-8]
   27858:	add	r0, r0, r1, lsl #3
   2785c:	ldr	r1, [r0, #4]
   27860:	mvn	r2, #255	; 0xff
   27864:	and	r1, r1, r2
   27868:	orr	r1, r1, #7
   2786c:	str	r1, [r0, #4]
   27870:	b	27874 <__assert_fail@plt+0x163e0>
   27874:	b	27878 <__assert_fail@plt+0x163e4>
   27878:	ldr	r0, [fp, #-8]
   2787c:	add	r0, r0, #1
   27880:	str	r0, [fp, #-8]
   27884:	b	277b8 <__assert_fail@plt+0x16324>
   27888:	b	2788c <__assert_fail@plt+0x163f8>
   2788c:	ldr	r0, [fp, #-4]
   27890:	mov	r1, #1
   27894:	str	r1, [r0, #92]	; 0x5c
   27898:	ldr	r0, [fp, #-4]
   2789c:	ldrb	r1, [r0, #88]	; 0x58
   278a0:	bic	r1, r1, #4
   278a4:	strb	r1, [r0, #88]	; 0x58
   278a8:	ldr	r0, [fp, #-4]
   278ac:	ldr	r0, [r0, #76]	; 0x4c
   278b0:	cmp	r0, #0
   278b4:	movw	r0, #1
   278b8:	str	r0, [sp]
   278bc:	bgt	278c8 <__assert_fail@plt+0x16434>
   278c0:	ldrb	r0, [fp, #-14]
   278c4:	str	r0, [sp]
   278c8:	ldr	r0, [sp]
   278cc:	ldr	r1, [fp, #-4]
   278d0:	and	r0, r0, #1
   278d4:	ldrb	r2, [r1, #88]	; 0x58
   278d8:	lsl	r0, r0, #1
   278dc:	bic	r2, r2, #2
   278e0:	orr	r0, r2, r0
   278e4:	strb	r0, [r1, #88]	; 0x58
   278e8:	mov	sp, fp
   278ec:	pop	{fp, pc}
   278f0:	push	{fp, lr}
   278f4:	mov	fp, sp
   278f8:	sub	sp, sp, #64	; 0x40
   278fc:	str	r0, [fp, #-8]
   27900:	ldr	r0, [fp, #-8]
   27904:	ldr	r0, [r0, #52]	; 0x34
   27908:	ldr	r0, [r0, #12]
   2790c:	ldr	r0, [r0, #28]
   27910:	str	r0, [fp, #-12]
   27914:	ldr	r0, [fp, #-12]
   27918:	ldr	r1, [fp, #-8]
   2791c:	str	r0, [r1, #72]	; 0x48
   27920:	ldr	r0, [fp, #-8]
   27924:	ldr	r0, [r0, #24]
   27928:	ldr	r1, [fp, #-12]
   2792c:	movw	r2, #12
   27930:	mul	r1, r1, r2
   27934:	add	r1, r0, r1
   27938:	add	r0, sp, #32
   2793c:	bl	30c08 <__assert_fail@plt+0x1f774>
   27940:	str	r0, [fp, #-20]	; 0xffffffec
   27944:	ldr	r0, [fp, #-20]	; 0xffffffec
   27948:	cmp	r0, #0
   2794c:	beq	2795c <__assert_fail@plt+0x164c8>
   27950:	ldr	r0, [fp, #-20]	; 0xffffffec
   27954:	str	r0, [fp, #-4]
   27958:	b	27c48 <__assert_fail@plt+0x167b4>
   2795c:	ldr	r0, [fp, #-8]
   27960:	ldr	r0, [r0, #76]	; 0x4c
   27964:	cmp	r0, #0
   27968:	ble	27afc <__assert_fail@plt+0x16668>
   2796c:	movw	r0, #0
   27970:	str	r0, [fp, #-16]
   27974:	ldr	r0, [fp, #-16]
   27978:	ldr	r1, [sp, #36]	; 0x24
   2797c:	cmp	r0, r1
   27980:	bge	27af8 <__assert_fail@plt+0x16664>
   27984:	ldr	r0, [sp, #40]	; 0x28
   27988:	ldr	r1, [fp, #-16]
   2798c:	ldr	r0, [r0, r1, lsl #2]
   27990:	str	r0, [sp, #28]
   27994:	ldr	r0, [fp, #-8]
   27998:	ldr	r0, [r0]
   2799c:	ldr	r1, [sp, #28]
   279a0:	add	r0, r0, r1, lsl #3
   279a4:	ldr	r0, [r0, #4]
   279a8:	and	r0, r0, #255	; 0xff
   279ac:	str	r0, [sp, #24]
   279b0:	ldr	r0, [sp, #24]
   279b4:	cmp	r0, #4
   279b8:	beq	279c0 <__assert_fail@plt+0x1652c>
   279bc:	b	27ae8 <__assert_fail@plt+0x16654>
   279c0:	movw	r0, #0
   279c4:	str	r0, [sp, #20]
   279c8:	ldr	r0, [sp, #20]
   279cc:	ldr	r1, [sp, #36]	; 0x24
   279d0:	cmp	r0, r1
   279d4:	bge	27a44 <__assert_fail@plt+0x165b0>
   279d8:	ldr	r0, [fp, #-8]
   279dc:	ldr	r0, [r0]
   279e0:	ldr	r1, [sp, #40]	; 0x28
   279e4:	ldr	r2, [sp, #20]
   279e8:	ldr	r1, [r1, r2, lsl #2]
   279ec:	add	r0, r0, r1, lsl #3
   279f0:	str	r0, [sp, #16]
   279f4:	ldr	r0, [sp, #16]
   279f8:	ldr	r0, [r0, #4]
   279fc:	and	r0, r0, #255	; 0xff
   27a00:	cmp	r0, #9
   27a04:	bne	27a30 <__assert_fail@plt+0x1659c>
   27a08:	ldr	r0, [sp, #16]
   27a0c:	ldr	r0, [r0]
   27a10:	ldr	r1, [fp, #-8]
   27a14:	ldr	r1, [r1]
   27a18:	ldr	r2, [sp, #28]
   27a1c:	add	r1, r1, r2, lsl #3
   27a20:	ldr	r1, [r1]
   27a24:	cmp	r0, r1
   27a28:	bne	27a30 <__assert_fail@plt+0x1659c>
   27a2c:	b	27a44 <__assert_fail@plt+0x165b0>
   27a30:	b	27a34 <__assert_fail@plt+0x165a0>
   27a34:	ldr	r0, [sp, #20]
   27a38:	add	r0, r0, #1
   27a3c:	str	r0, [sp, #20]
   27a40:	b	279c8 <__assert_fail@plt+0x16534>
   27a44:	ldr	r0, [sp, #20]
   27a48:	ldr	r1, [sp, #36]	; 0x24
   27a4c:	cmp	r0, r1
   27a50:	bne	27a58 <__assert_fail@plt+0x165c4>
   27a54:	b	27ae8 <__assert_fail@plt+0x16654>
   27a58:	ldr	r0, [sp, #24]
   27a5c:	cmp	r0, #4
   27a60:	bne	27ae4 <__assert_fail@plt+0x16650>
   27a64:	ldr	r0, [fp, #-8]
   27a68:	ldr	r0, [r0, #20]
   27a6c:	ldr	r1, [sp, #28]
   27a70:	movw	r2, #12
   27a74:	mul	r1, r1, r2
   27a78:	add	r0, r0, r1
   27a7c:	ldr	r0, [r0, #8]
   27a80:	ldr	r0, [r0]
   27a84:	str	r0, [sp, #12]
   27a88:	ldr	r1, [sp, #12]
   27a8c:	add	r0, sp, #32
   27a90:	bl	30cdc <__assert_fail@plt+0x1f848>
   27a94:	cmp	r0, #0
   27a98:	bne	27ae0 <__assert_fail@plt+0x1664c>
   27a9c:	ldr	r0, [fp, #-8]
   27aa0:	ldr	r0, [r0, #24]
   27aa4:	ldr	r1, [sp, #12]
   27aa8:	movw	r2, #12
   27aac:	mul	r1, r1, r2
   27ab0:	add	r1, r0, r1
   27ab4:	add	r0, sp, #32
   27ab8:	bl	30330 <__assert_fail@plt+0x1ee9c>
   27abc:	str	r0, [sp, #8]
   27ac0:	ldr	r0, [sp, #8]
   27ac4:	cmp	r0, #0
   27ac8:	beq	27ad8 <__assert_fail@plt+0x16644>
   27acc:	ldr	r0, [sp, #8]
   27ad0:	str	r0, [fp, #-4]
   27ad4:	b	27c48 <__assert_fail@plt+0x167b4>
   27ad8:	movw	r0, #0
   27adc:	str	r0, [fp, #-16]
   27ae0:	b	27ae4 <__assert_fail@plt+0x16650>
   27ae4:	b	27ae8 <__assert_fail@plt+0x16654>
   27ae8:	ldr	r0, [fp, #-16]
   27aec:	add	r0, r0, #1
   27af0:	str	r0, [fp, #-16]
   27af4:	b	27974 <__assert_fail@plt+0x164e0>
   27af8:	b	27afc <__assert_fail@plt+0x16668>
   27afc:	ldr	r1, [fp, #-8]
   27b00:	sub	r0, fp, #20
   27b04:	add	r2, sp, #32
   27b08:	movw	r3, #0
   27b0c:	bl	30dcc <__assert_fail@plt+0x1f938>
   27b10:	ldr	r1, [fp, #-8]
   27b14:	str	r0, [r1, #36]	; 0x24
   27b18:	ldr	r0, [fp, #-8]
   27b1c:	ldr	r0, [r0, #36]	; 0x24
   27b20:	movw	r1, #0
   27b24:	cmp	r0, r1
   27b28:	bne	27b38 <__assert_fail@plt+0x166a4>
   27b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27b30:	str	r0, [fp, #-4]
   27b34:	b	27c48 <__assert_fail@plt+0x167b4>
   27b38:	ldr	r0, [fp, #-8]
   27b3c:	ldr	r0, [r0, #36]	; 0x24
   27b40:	ldrb	r0, [r0, #52]	; 0x34
   27b44:	lsr	r0, r0, #7
   27b48:	and	r0, r0, #255	; 0xff
   27b4c:	cmp	r0, #0
   27b50:	beq	27c18 <__assert_fail@plt+0x16784>
   27b54:	ldr	r1, [fp, #-8]
   27b58:	sub	r0, fp, #20
   27b5c:	add	r2, sp, #32
   27b60:	movw	r3, #1
   27b64:	bl	30dcc <__assert_fail@plt+0x1f938>
   27b68:	ldr	r1, [fp, #-8]
   27b6c:	str	r0, [r1, #40]	; 0x28
   27b70:	ldr	r1, [fp, #-8]
   27b74:	sub	r0, fp, #20
   27b78:	add	r2, sp, #32
   27b7c:	movw	r3, #2
   27b80:	bl	30dcc <__assert_fail@plt+0x1f938>
   27b84:	ldr	r1, [fp, #-8]
   27b88:	str	r0, [r1, #44]	; 0x2c
   27b8c:	ldr	r1, [fp, #-8]
   27b90:	sub	r0, fp, #20
   27b94:	add	r2, sp, #32
   27b98:	movw	r3, #6
   27b9c:	bl	30dcc <__assert_fail@plt+0x1f938>
   27ba0:	ldr	r1, [fp, #-8]
   27ba4:	str	r0, [r1, #48]	; 0x30
   27ba8:	ldr	r0, [fp, #-8]
   27bac:	ldr	r0, [r0, #40]	; 0x28
   27bb0:	movw	r1, #0
   27bb4:	cmp	r0, r1
   27bb8:	movw	r0, #1
   27bbc:	str	r0, [sp, #4]
   27bc0:	beq	27bfc <__assert_fail@plt+0x16768>
   27bc4:	ldr	r0, [fp, #-8]
   27bc8:	ldr	r0, [r0, #44]	; 0x2c
   27bcc:	movw	r1, #0
   27bd0:	cmp	r0, r1
   27bd4:	movw	r0, #1
   27bd8:	str	r0, [sp, #4]
   27bdc:	beq	27bfc <__assert_fail@plt+0x16768>
   27be0:	ldr	r0, [fp, #-8]
   27be4:	ldr	r0, [r0, #48]	; 0x30
   27be8:	movw	r1, #0
   27bec:	cmp	r0, r1
   27bf0:	movw	r0, #0
   27bf4:	moveq	r0, #1
   27bf8:	str	r0, [sp, #4]
   27bfc:	ldr	r0, [sp, #4]
   27c00:	tst	r0, #1
   27c04:	beq	27c14 <__assert_fail@plt+0x16780>
   27c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c0c:	str	r0, [fp, #-4]
   27c10:	b	27c48 <__assert_fail@plt+0x167b4>
   27c14:	b	27c38 <__assert_fail@plt+0x167a4>
   27c18:	ldr	r0, [fp, #-8]
   27c1c:	ldr	r0, [r0, #36]	; 0x24
   27c20:	ldr	r1, [fp, #-8]
   27c24:	str	r0, [r1, #48]	; 0x30
   27c28:	ldr	r1, [fp, #-8]
   27c2c:	str	r0, [r1, #44]	; 0x2c
   27c30:	ldr	r1, [fp, #-8]
   27c34:	str	r0, [r1, #40]	; 0x28
   27c38:	ldr	r0, [sp, #40]	; 0x28
   27c3c:	bl	1388c <__assert_fail@plt+0x23f8>
   27c40:	movw	r0, #0
   27c44:	str	r0, [fp, #-4]
   27c48:	ldr	r0, [fp, #-4]
   27c4c:	mov	sp, fp
   27c50:	pop	{fp, pc}
   27c54:	push	{fp, lr}
   27c58:	mov	fp, sp
   27c5c:	sub	sp, sp, #24
   27c60:	ldr	ip, [fp, #12]
   27c64:	ldr	lr, [fp, #8]
   27c68:	str	r0, [fp, #-4]
   27c6c:	str	r1, [fp, #-8]
   27c70:	str	r2, [sp, #12]
   27c74:	str	r3, [sp, #8]
   27c78:	and	r0, lr, #1
   27c7c:	strb	r0, [sp, #7]
   27c80:	ldr	r0, [fp, #-4]
   27c84:	ldr	r1, [sp, #12]
   27c88:	str	r0, [r1]
   27c8c:	ldr	r0, [fp, #-8]
   27c90:	ldr	r1, [sp, #12]
   27c94:	str	r0, [r1, #48]	; 0x30
   27c98:	ldr	r0, [fp, #-8]
   27c9c:	ldr	r1, [sp, #12]
   27ca0:	str	r0, [r1, #44]	; 0x2c
   27ca4:	ldr	r0, [sp, #8]
   27ca8:	ldr	r1, [sp, #12]
   27cac:	str	r0, [r1, #64]	; 0x40
   27cb0:	ldrb	r0, [sp, #7]
   27cb4:	and	r0, r0, #1
   27cb8:	ldr	r1, [sp, #12]
   27cbc:	strb	r0, [r1, #72]	; 0x48
   27cc0:	ldr	r0, [sp, #8]
   27cc4:	movw	r1, #0
   27cc8:	cmp	r0, r1
   27ccc:	movw	r0, #1
   27cd0:	str	r0, [sp]
   27cd4:	bne	27ce0 <__assert_fail@plt+0x1684c>
   27cd8:	ldrb	r0, [sp, #7]
   27cdc:	str	r0, [sp]
   27ce0:	ldr	r0, [sp]
   27ce4:	and	r0, r0, #1
   27ce8:	ldr	r1, [sp, #12]
   27cec:	strb	r0, [r1, #75]	; 0x4b
   27cf0:	ldr	r0, [fp, #12]
   27cf4:	ldr	r0, [r0, #92]	; 0x5c
   27cf8:	ldr	r1, [sp, #12]
   27cfc:	str	r0, [r1, #80]	; 0x50
   27d00:	ldr	r0, [fp, #12]
   27d04:	ldrb	r0, [r0, #88]	; 0x58
   27d08:	ubfx	r0, r0, #2, #1
   27d0c:	ldr	r1, [sp, #12]
   27d10:	strb	r0, [r1, #73]	; 0x49
   27d14:	ldr	r0, [fp, #12]
   27d18:	ldrb	r0, [r0, #88]	; 0x58
   27d1c:	ubfx	r0, r0, #3, #1
   27d20:	and	r0, r0, #255	; 0xff
   27d24:	ldr	r1, [sp, #12]
   27d28:	strb	r0, [r1, #74]	; 0x4a
   27d2c:	ldr	r0, [sp, #12]
   27d30:	ldr	r0, [r0, #48]	; 0x30
   27d34:	ldr	r1, [sp, #12]
   27d38:	str	r0, [r1, #56]	; 0x38
   27d3c:	ldr	r0, [sp, #12]
   27d40:	ldr	r0, [r0, #56]	; 0x38
   27d44:	ldr	r1, [sp, #12]
   27d48:	str	r0, [r1, #52]	; 0x34
   27d4c:	mov	sp, fp
   27d50:	pop	{fp, pc}
   27d54:	push	{fp, lr}
   27d58:	mov	fp, sp
   27d5c:	sub	sp, sp, #32
   27d60:	str	r0, [fp, #-8]
   27d64:	str	r1, [fp, #-12]
   27d68:	ldr	r0, [fp, #-8]
   27d6c:	ldr	r0, [r0, #80]	; 0x50
   27d70:	cmp	r0, #1
   27d74:	ble	27e34 <__assert_fail@plt+0x169a0>
   27d78:	ldr	r0, [pc, #296]	; 27ea8 <__assert_fail@plt+0x16a14>
   27d7c:	movw	r1, #4
   27d80:	str	r1, [sp, #12]
   27d84:	ldr	r1, [fp, #-12]
   27d88:	cmp	r0, r1
   27d8c:	bcs	27d9c <__assert_fail@plt+0x16908>
   27d90:	movw	r0, #12
   27d94:	str	r0, [fp, #-4]
   27d98:	b	27e9c <__assert_fail@plt+0x16a08>
   27d9c:	ldr	r0, [fp, #-8]
   27da0:	ldr	r0, [r0, #8]
   27da4:	ldr	r1, [fp, #-12]
   27da8:	lsl	r1, r1, #2
   27dac:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   27db0:	str	r0, [sp, #16]
   27db4:	ldr	r0, [sp, #16]
   27db8:	movw	r1, #0
   27dbc:	cmp	r0, r1
   27dc0:	bne	27dd0 <__assert_fail@plt+0x1693c>
   27dc4:	movw	r0, #12
   27dc8:	str	r0, [fp, #-4]
   27dcc:	b	27e9c <__assert_fail@plt+0x16a08>
   27dd0:	ldr	r0, [sp, #16]
   27dd4:	ldr	r1, [fp, #-8]
   27dd8:	str	r0, [r1, #8]
   27ddc:	ldr	r0, [fp, #-8]
   27de0:	ldr	r0, [r0, #12]
   27de4:	movw	r1, #0
   27de8:	cmp	r0, r1
   27dec:	beq	27e30 <__assert_fail@plt+0x1699c>
   27df0:	ldr	r0, [fp, #-8]
   27df4:	ldr	r0, [r0, #12]
   27df8:	ldr	r1, [fp, #-12]
   27dfc:	lsl	r1, r1, #2
   27e00:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   27e04:	str	r0, [sp, #8]
   27e08:	ldr	r0, [sp, #8]
   27e0c:	movw	r1, #0
   27e10:	cmp	r0, r1
   27e14:	bne	27e24 <__assert_fail@plt+0x16990>
   27e18:	movw	r0, #12
   27e1c:	str	r0, [fp, #-4]
   27e20:	b	27e9c <__assert_fail@plt+0x16a08>
   27e24:	ldr	r0, [sp, #8]
   27e28:	ldr	r1, [fp, #-8]
   27e2c:	str	r0, [r1, #12]
   27e30:	b	27e34 <__assert_fail@plt+0x169a0>
   27e34:	ldr	r0, [fp, #-8]
   27e38:	ldrsb	r0, [r0, #75]	; 0x4b
   27e3c:	cmp	r0, #0
   27e40:	beq	27e88 <__assert_fail@plt+0x169f4>
   27e44:	ldr	r0, [fp, #-8]
   27e48:	ldr	r0, [r0, #4]
   27e4c:	ldr	r1, [fp, #-12]
   27e50:	mov	r2, r1
   27e54:	str	r2, [sp]
   27e58:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   27e5c:	str	r0, [sp, #4]
   27e60:	ldr	r0, [sp, #4]
   27e64:	movw	r1, #0
   27e68:	cmp	r0, r1
   27e6c:	bne	27e7c <__assert_fail@plt+0x169e8>
   27e70:	movw	r0, #12
   27e74:	str	r0, [fp, #-4]
   27e78:	b	27e9c <__assert_fail@plt+0x16a08>
   27e7c:	ldr	r0, [sp, #4]
   27e80:	ldr	r1, [fp, #-8]
   27e84:	str	r0, [r1, #4]
   27e88:	ldr	r0, [fp, #-12]
   27e8c:	ldr	r1, [fp, #-8]
   27e90:	str	r0, [r1, #36]	; 0x24
   27e94:	movw	r0, #0
   27e98:	str	r0, [fp, #-4]
   27e9c:	ldr	r0, [fp, #-4]
   27ea0:	mov	sp, fp
   27ea4:	pop	{fp, pc}
   27ea8:	svccc	0x00ffffff
   27eac:	push	{fp, lr}
   27eb0:	mov	fp, sp
   27eb4:	sub	sp, sp, #184	; 0xb8
   27eb8:	str	r0, [fp, #-8]
   27ebc:	ldr	r0, [fp, #-8]
   27ec0:	ldr	r0, [r0, #28]
   27ec4:	str	r0, [fp, #-24]	; 0xffffffe8
   27ec8:	ldr	r0, [fp, #-8]
   27ecc:	ldr	r0, [r0, #36]	; 0x24
   27ed0:	ldr	r1, [fp, #-8]
   27ed4:	ldr	r1, [r1, #48]	; 0x30
   27ed8:	cmp	r0, r1
   27edc:	ble	27ef0 <__assert_fail@plt+0x16a5c>
   27ee0:	ldr	r0, [fp, #-8]
   27ee4:	ldr	r0, [r0, #48]	; 0x30
   27ee8:	str	r0, [sp, #24]
   27eec:	b	27efc <__assert_fail@plt+0x16a68>
   27ef0:	ldr	r0, [fp, #-8]
   27ef4:	ldr	r0, [r0, #36]	; 0x24
   27ef8:	str	r0, [sp, #24]
   27efc:	ldr	r0, [sp, #24]
   27f00:	str	r0, [fp, #-28]	; 0xffffffe4
   27f04:	ldr	r0, [fp, #-8]
   27f08:	ldrsb	r0, [r0, #74]	; 0x4a
   27f0c:	cmp	r0, #0
   27f10:	bne	28270 <__assert_fail@plt+0x16ddc>
   27f14:	ldr	r0, [fp, #-8]
   27f18:	ldr	r0, [r0, #64]	; 0x40
   27f1c:	movw	r1, #0
   27f20:	cmp	r0, r1
   27f24:	bne	28270 <__assert_fail@plt+0x16ddc>
   27f28:	ldr	r0, [fp, #-8]
   27f2c:	ldrsb	r0, [r0, #76]	; 0x4c
   27f30:	cmp	r0, #0
   27f34:	bne	28270 <__assert_fail@plt+0x16ddc>
   27f38:	b	27f3c <__assert_fail@plt+0x16aa8>
   27f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27f40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27f44:	cmp	r0, r1
   27f48:	bge	2824c <__assert_fail@plt+0x16db8>
   27f4c:	ldr	r0, [fp, #-8]
   27f50:	ldr	r0, [r0]
   27f54:	ldr	r1, [fp, #-8]
   27f58:	ldr	r1, [r1, #24]
   27f5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27f60:	add	r1, r1, r2
   27f64:	add	r0, r0, r1
   27f68:	ldrb	r0, [r0]
   27f6c:	strb	r0, [sp, #79]	; 0x4f
   27f70:	ldrb	r0, [sp, #79]	; 0x4f
   27f74:	mvn	r1, #127	; 0x7f
   27f78:	and	r0, r0, r1
   27f7c:	cmp	r0, #0
   27f80:	bne	27ff8 <__assert_fail@plt+0x16b64>
   27f84:	ldr	r0, [fp, #-8]
   27f88:	add	r0, r0, #16
   27f8c:	bl	11278 <mbsinit@plt>
   27f90:	cmp	r0, #0
   27f94:	beq	27ff8 <__assert_fail@plt+0x16b64>
   27f98:	ldrb	r0, [sp, #79]	; 0x4f
   27f9c:	bl	11458 <towupper@plt>
   27fa0:	str	r0, [sp, #72]	; 0x48
   27fa4:	ldr	r0, [sp, #72]	; 0x48
   27fa8:	mvn	r1, #127	; 0x7f
   27fac:	and	r0, r0, r1
   27fb0:	cmp	r0, #0
   27fb4:	bne	27ff4 <__assert_fail@plt+0x16b60>
   27fb8:	ldr	r0, [sp, #72]	; 0x48
   27fbc:	ldr	r1, [fp, #-8]
   27fc0:	ldr	r1, [r1, #4]
   27fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27fc8:	strb	r0, [r1, r2]
   27fcc:	ldr	r0, [sp, #72]	; 0x48
   27fd0:	ldr	r1, [fp, #-8]
   27fd4:	ldr	r1, [r1, #8]
   27fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27fdc:	add	r1, r1, r2, lsl #2
   27fe0:	str	r0, [r1]
   27fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27fe8:	add	r0, r0, #1
   27fec:	str	r0, [fp, #-24]	; 0xffffffe8
   27ff0:	b	27f3c <__assert_fail@plt+0x16aa8>
   27ff4:	b	27ff8 <__assert_fail@plt+0x16b64>
   27ff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28000:	sub	r0, r0, r1
   28004:	str	r0, [fp, #-32]	; 0xffffffe0
   28008:	ldr	r0, [fp, #-8]
   2800c:	ldr	r1, [r0, #16]
   28010:	str	r1, [fp, #-16]
   28014:	ldr	r0, [r0, #20]
   28018:	str	r0, [fp, #-12]
   2801c:	ldr	r0, [fp, #-8]
   28020:	ldr	r0, [r0]
   28024:	ldr	r1, [fp, #-8]
   28028:	ldr	r1, [r1, #24]
   2802c:	add	r0, r0, r1
   28030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28034:	add	r1, r0, r1
   28038:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2803c:	ldr	r0, [fp, #-8]
   28040:	add	r3, r0, #16
   28044:	add	r0, sp, #80	; 0x50
   28048:	bl	41610 <__assert_fail@plt+0x3017c>
   2804c:	str	r0, [fp, #-36]	; 0xffffffdc
   28050:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28054:	movw	r1, #0
   28058:	cmp	r1, r0
   2805c:	movw	r0, #0
   28060:	str	r0, [sp, #20]
   28064:	bcs	2807c <__assert_fail@plt+0x16be8>
   28068:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2806c:	cmn	r0, #2
   28070:	movw	r0, #0
   28074:	movcc	r0, #1
   28078:	str	r0, [sp, #20]
   2807c:	ldr	r0, [sp, #20]
   28080:	tst	r0, #1
   28084:	beq	28198 <__assert_fail@plt+0x16d04>
   28088:	ldr	r0, [sp, #80]	; 0x50
   2808c:	bl	11458 <towupper@plt>
   28090:	str	r0, [sp, #68]	; 0x44
   28094:	ldr	r0, [sp, #68]	; 0x44
   28098:	ldr	r1, [sp, #80]	; 0x50
   2809c:	cmp	r0, r1
   280a0:	beq	280f8 <__assert_fail@plt+0x16c64>
   280a4:	add	r0, sp, #84	; 0x54
   280a8:	ldr	r1, [sp, #68]	; 0x44
   280ac:	sub	r2, fp, #16
   280b0:	bl	111b8 <wcrtomb@plt>
   280b4:	str	r0, [sp, #64]	; 0x40
   280b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   280bc:	ldr	r1, [sp, #64]	; 0x40
   280c0:	cmp	r0, r1
   280c4:	bne	280e8 <__assert_fail@plt+0x16c54>
   280c8:	add	r1, sp, #84	; 0x54
   280cc:	ldr	r0, [fp, #-8]
   280d0:	ldr	r0, [r0, #4]
   280d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   280d8:	add	r0, r0, r2
   280dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   280e0:	bl	11248 <memcpy@plt>
   280e4:	b	280f4 <__assert_fail@plt+0x16c60>
   280e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   280ec:	str	r0, [fp, #-20]	; 0xffffffec
   280f0:	b	28290 <__assert_fail@plt+0x16dfc>
   280f4:	b	2812c <__assert_fail@plt+0x16c98>
   280f8:	ldr	r0, [fp, #-8]
   280fc:	ldr	r0, [r0, #4]
   28100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28104:	add	r0, r0, r1
   28108:	ldr	r1, [fp, #-8]
   2810c:	ldr	r1, [r1]
   28110:	ldr	r2, [fp, #-8]
   28114:	ldr	r2, [r2, #24]
   28118:	add	r1, r1, r2
   2811c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28120:	add	r1, r1, r2
   28124:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28128:	bl	11248 <memcpy@plt>
   2812c:	ldr	r0, [sp, #68]	; 0x44
   28130:	ldr	r1, [fp, #-8]
   28134:	ldr	r1, [r1, #8]
   28138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2813c:	add	r3, r2, #1
   28140:	str	r3, [fp, #-24]	; 0xffffffe8
   28144:	add	r1, r1, r2, lsl #2
   28148:	str	r0, [r1]
   2814c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28150:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28154:	add	r0, r0, r1
   28158:	sub	r0, r0, #1
   2815c:	str	r0, [fp, #-32]	; 0xffffffe0
   28160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28164:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28168:	cmp	r0, r1
   2816c:	bge	28194 <__assert_fail@plt+0x16d00>
   28170:	ldr	r0, [fp, #-8]
   28174:	ldr	r0, [r0, #8]
   28178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2817c:	add	r2, r1, #1
   28180:	str	r2, [fp, #-24]	; 0xffffffe8
   28184:	add	r0, r0, r1, lsl #2
   28188:	mvn	r1, #0
   2818c:	str	r1, [r0]
   28190:	b	28160 <__assert_fail@plt+0x16ccc>
   28194:	b	28248 <__assert_fail@plt+0x16db4>
   28198:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2819c:	cmn	r0, #1
   281a0:	beq	281d4 <__assert_fail@plt+0x16d40>
   281a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   281a8:	cmp	r0, #0
   281ac:	beq	281d4 <__assert_fail@plt+0x16d40>
   281b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   281b4:	cmn	r0, #2
   281b8:	bne	2822c <__assert_fail@plt+0x16d98>
   281bc:	ldr	r0, [fp, #-8]
   281c0:	ldr	r0, [r0, #36]	; 0x24
   281c4:	ldr	r1, [fp, #-8]
   281c8:	ldr	r1, [r1, #48]	; 0x30
   281cc:	cmp	r0, r1
   281d0:	blt	2822c <__assert_fail@plt+0x16d98>
   281d4:	ldrb	r0, [sp, #79]	; 0x4f
   281d8:	ldr	r1, [fp, #-8]
   281dc:	ldr	r1, [r1, #4]
   281e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   281e4:	strb	r0, [r1, r2]
   281e8:	ldrb	r0, [sp, #79]	; 0x4f
   281ec:	ldr	r1, [fp, #-8]
   281f0:	ldr	r1, [r1, #8]
   281f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   281f8:	add	r3, r2, #1
   281fc:	str	r3, [fp, #-24]	; 0xffffffe8
   28200:	add	r1, r1, r2, lsl #2
   28204:	str	r0, [r1]
   28208:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2820c:	cmn	r0, #1
   28210:	bne	28228 <__assert_fail@plt+0x16d94>
   28214:	ldr	r0, [fp, #-8]
   28218:	ldr	r1, [fp, #-16]
   2821c:	str	r1, [r0, #16]
   28220:	ldr	r1, [fp, #-12]
   28224:	str	r1, [r0, #20]
   28228:	b	28244 <__assert_fail@plt+0x16db0>
   2822c:	ldr	r0, [fp, #-8]
   28230:	ldr	r1, [fp, #-16]
   28234:	str	r1, [r0, #16]
   28238:	ldr	r1, [fp, #-12]
   2823c:	str	r1, [r0, #20]
   28240:	b	2824c <__assert_fail@plt+0x16db8>
   28244:	b	28248 <__assert_fail@plt+0x16db4>
   28248:	b	27f3c <__assert_fail@plt+0x16aa8>
   2824c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28250:	ldr	r1, [fp, #-8]
   28254:	str	r0, [r1, #28]
   28258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2825c:	ldr	r1, [fp, #-8]
   28260:	str	r0, [r1, #32]
   28264:	movw	r0, #0
   28268:	str	r0, [fp, #-4]
   2826c:	b	28948 <__assert_fail@plt+0x174b4>
   28270:	ldr	r0, [fp, #-8]
   28274:	ldr	r0, [r0, #32]
   28278:	str	r0, [fp, #-20]	; 0xffffffec
   2827c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28280:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28284:	cmp	r0, r1
   28288:	bge	28924 <__assert_fail@plt+0x17490>
   2828c:	b	28290 <__assert_fail@plt+0x16dfc>
   28290:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28298:	sub	r0, r0, r1
   2829c:	str	r0, [fp, #-32]	; 0xffffffe0
   282a0:	ldr	r0, [fp, #-8]
   282a4:	ldr	r1, [r0, #16]
   282a8:	str	r1, [fp, #-16]
   282ac:	ldr	r0, [r0, #20]
   282b0:	str	r0, [fp, #-12]
   282b4:	ldr	r0, [fp, #-8]
   282b8:	ldr	r0, [r0, #64]	; 0x40
   282bc:	movw	r1, #0
   282c0:	cmp	r0, r1
   282c4:	beq	2837c <__assert_fail@plt+0x16ee8>
   282c8:	movw	r0, #0
   282cc:	str	r0, [sp, #52]	; 0x34
   282d0:	ldr	r0, [sp, #52]	; 0x34
   282d4:	ldr	r1, [fp, #-8]
   282d8:	ldr	r1, [r1, #80]	; 0x50
   282dc:	cmp	r0, r1
   282e0:	movw	r0, #0
   282e4:	str	r0, [sp, #16]
   282e8:	bge	28304 <__assert_fail@plt+0x16e70>
   282ec:	ldr	r0, [sp, #52]	; 0x34
   282f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   282f4:	cmp	r0, r1
   282f8:	movw	r0, #0
   282fc:	movlt	r0, #1
   28300:	str	r0, [sp, #16]
   28304:	ldr	r0, [sp, #16]
   28308:	tst	r0, #1
   2830c:	beq	28370 <__assert_fail@plt+0x16edc>
   28310:	ldr	r0, [fp, #-8]
   28314:	ldr	r0, [r0]
   28318:	ldr	r1, [fp, #-8]
   2831c:	ldr	r1, [r1, #24]
   28320:	ldr	r2, [fp, #-20]	; 0xffffffec
   28324:	add	r1, r1, r2
   28328:	ldr	r2, [sp, #52]	; 0x34
   2832c:	add	r1, r1, r2
   28330:	add	r0, r0, r1
   28334:	ldrb	r0, [r0]
   28338:	str	r0, [sp, #48]	; 0x30
   2833c:	ldr	r0, [fp, #-8]
   28340:	ldr	r0, [r0, #64]	; 0x40
   28344:	ldr	r1, [sp, #48]	; 0x30
   28348:	add	r0, r0, r1
   2834c:	ldrb	r0, [r0]
   28350:	ldr	r1, [sp, #52]	; 0x34
   28354:	add	r2, sp, #84	; 0x54
   28358:	add	r1, r2, r1
   2835c:	strb	r0, [r1]
   28360:	ldr	r0, [sp, #52]	; 0x34
   28364:	add	r0, r0, #1
   28368:	str	r0, [sp, #52]	; 0x34
   2836c:	b	282d0 <__assert_fail@plt+0x16e3c>
   28370:	add	r0, sp, #84	; 0x54
   28374:	str	r0, [sp, #56]	; 0x38
   28378:	b	2839c <__assert_fail@plt+0x16f08>
   2837c:	ldr	r0, [fp, #-8]
   28380:	ldr	r0, [r0]
   28384:	ldr	r1, [fp, #-8]
   28388:	ldr	r1, [r1, #24]
   2838c:	add	r0, r0, r1
   28390:	ldr	r1, [fp, #-20]	; 0xffffffec
   28394:	add	r0, r0, r1
   28398:	str	r0, [sp, #56]	; 0x38
   2839c:	ldr	r1, [sp, #56]	; 0x38
   283a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   283a4:	ldr	r0, [fp, #-8]
   283a8:	add	r3, r0, #16
   283ac:	add	r0, sp, #60	; 0x3c
   283b0:	bl	41610 <__assert_fail@plt+0x3017c>
   283b4:	str	r0, [fp, #-36]	; 0xffffffdc
   283b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   283bc:	movw	r1, #0
   283c0:	cmp	r1, r0
   283c4:	movw	r0, #0
   283c8:	str	r0, [sp, #12]
   283cc:	bcs	283e4 <__assert_fail@plt+0x16f50>
   283d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   283d4:	cmn	r0, #2
   283d8:	movw	r0, #0
   283dc:	movcc	r0, #1
   283e0:	str	r0, [sp, #12]
   283e4:	ldr	r0, [sp, #12]
   283e8:	tst	r0, #1
   283ec:	beq	287e8 <__assert_fail@plt+0x17354>
   283f0:	ldr	r0, [sp, #60]	; 0x3c
   283f4:	bl	11458 <towupper@plt>
   283f8:	str	r0, [sp, #44]	; 0x2c
   283fc:	ldr	r0, [sp, #44]	; 0x2c
   28400:	ldr	r1, [sp, #60]	; 0x3c
   28404:	cmp	r0, r1
   28408:	beq	286f0 <__assert_fail@plt+0x1725c>
   2840c:	add	r0, sp, #84	; 0x54
   28410:	ldr	r1, [sp, #44]	; 0x2c
   28414:	sub	r2, fp, #16
   28418:	bl	111b8 <wcrtomb@plt>
   2841c:	str	r0, [sp, #40]	; 0x28
   28420:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28424:	ldr	r1, [sp, #40]	; 0x28
   28428:	cmp	r0, r1
   2842c:	bne	28450 <__assert_fail@plt+0x16fbc>
   28430:	add	r1, sp, #84	; 0x54
   28434:	ldr	r0, [fp, #-8]
   28438:	ldr	r0, [r0, #4]
   2843c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28440:	add	r0, r0, r2
   28444:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28448:	bl	11248 <memcpy@plt>
   2844c:	b	286ec <__assert_fail@plt+0x17258>
   28450:	ldr	r0, [sp, #40]	; 0x28
   28454:	cmn	r0, #1
   28458:	beq	286cc <__assert_fail@plt+0x17238>
   2845c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28460:	ldr	r1, [sp, #40]	; 0x28
   28464:	add	r0, r0, r1
   28468:	ldr	r1, [fp, #-8]
   2846c:	ldr	r1, [r1, #36]	; 0x24
   28470:	cmp	r0, r1
   28474:	bls	28490 <__assert_fail@plt+0x16ffc>
   28478:	ldr	r0, [fp, #-8]
   2847c:	ldr	r1, [fp, #-16]
   28480:	str	r1, [r0, #16]
   28484:	ldr	r1, [fp, #-12]
   28488:	str	r1, [r0, #20]
   2848c:	b	28924 <__assert_fail@plt+0x17490>
   28490:	ldr	r0, [fp, #-8]
   28494:	ldr	r0, [r0, #12]
   28498:	movw	r1, #0
   2849c:	cmp	r0, r1
   284a0:	bne	284e0 <__assert_fail@plt+0x1704c>
   284a4:	ldr	r0, [fp, #-8]
   284a8:	ldr	r0, [r0, #36]	; 0x24
   284ac:	lsl	r0, r0, #2
   284b0:	bl	3f908 <__assert_fail@plt+0x2e474>
   284b4:	ldr	r1, [fp, #-8]
   284b8:	str	r0, [r1, #12]
   284bc:	ldr	r0, [fp, #-8]
   284c0:	ldr	r0, [r0, #12]
   284c4:	movw	r1, #0
   284c8:	cmp	r0, r1
   284cc:	bne	284dc <__assert_fail@plt+0x17048>
   284d0:	movw	r0, #12
   284d4:	str	r0, [fp, #-4]
   284d8:	b	28948 <__assert_fail@plt+0x174b4>
   284dc:	b	284e0 <__assert_fail@plt+0x1704c>
   284e0:	ldr	r0, [fp, #-8]
   284e4:	ldrsb	r0, [r0, #76]	; 0x4c
   284e8:	cmp	r0, #0
   284ec:	bne	2853c <__assert_fail@plt+0x170a8>
   284f0:	movw	r0, #0
   284f4:	str	r0, [sp, #36]	; 0x24
   284f8:	ldr	r0, [sp, #36]	; 0x24
   284fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28500:	cmp	r0, r1
   28504:	bcs	28530 <__assert_fail@plt+0x1709c>
   28508:	ldr	r0, [sp, #36]	; 0x24
   2850c:	mov	r1, r0
   28510:	ldr	r2, [fp, #-8]
   28514:	ldr	r2, [r2, #12]
   28518:	add	r0, r2, r0, lsl #2
   2851c:	str	r1, [r0]
   28520:	ldr	r0, [sp, #36]	; 0x24
   28524:	add	r0, r0, #1
   28528:	str	r0, [sp, #36]	; 0x24
   2852c:	b	284f8 <__assert_fail@plt+0x17064>
   28530:	ldr	r0, [fp, #-8]
   28534:	movw	r1, #1
   28538:	strb	r1, [r0, #76]	; 0x4c
   2853c:	ldr	r0, [fp, #-8]
   28540:	ldr	r0, [r0, #4]
   28544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28548:	add	r0, r0, r1
   2854c:	ldr	r2, [sp, #40]	; 0x28
   28550:	add	r1, sp, #84	; 0x54
   28554:	bl	11248 <memcpy@plt>
   28558:	ldr	r1, [sp, #44]	; 0x2c
   2855c:	ldr	r2, [fp, #-8]
   28560:	ldr	r2, [r2, #8]
   28564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28568:	str	r1, [r2, r3, lsl #2]
   2856c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28570:	ldr	r2, [fp, #-8]
   28574:	ldr	r2, [r2, #12]
   28578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2857c:	add	r2, r2, r3, lsl #2
   28580:	str	r1, [r2]
   28584:	movw	r1, #1
   28588:	str	r1, [sp, #36]	; 0x24
   2858c:	ldr	r0, [sp, #36]	; 0x24
   28590:	ldr	r1, [sp, #40]	; 0x28
   28594:	cmp	r0, r1
   28598:	bcs	28620 <__assert_fail@plt+0x1718c>
   2859c:	ldr	r0, [fp, #-20]	; 0xffffffec
   285a0:	ldr	r1, [sp, #36]	; 0x24
   285a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   285a8:	cmp	r1, r2
   285ac:	str	r0, [sp, #8]
   285b0:	bcs	285c0 <__assert_fail@plt+0x1712c>
   285b4:	ldr	r0, [sp, #36]	; 0x24
   285b8:	str	r0, [sp, #4]
   285bc:	b	285cc <__assert_fail@plt+0x17138>
   285c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   285c4:	sub	r0, r0, #1
   285c8:	str	r0, [sp, #4]
   285cc:	ldr	r0, [sp, #4]
   285d0:	ldr	r1, [sp, #8]
   285d4:	add	r0, r1, r0
   285d8:	ldr	r2, [fp, #-8]
   285dc:	ldr	r2, [r2, #12]
   285e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   285e4:	ldr	ip, [sp, #36]	; 0x24
   285e8:	add	r3, r3, ip
   285ec:	str	r0, [r2, r3, lsl #2]
   285f0:	ldr	r0, [fp, #-8]
   285f4:	ldr	r0, [r0, #8]
   285f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   285fc:	ldr	r3, [sp, #36]	; 0x24
   28600:	add	r2, r2, r3
   28604:	add	r0, r0, r2, lsl #2
   28608:	mvn	r2, #0
   2860c:	str	r2, [r0]
   28610:	ldr	r0, [sp, #36]	; 0x24
   28614:	add	r0, r0, #1
   28618:	str	r0, [sp, #36]	; 0x24
   2861c:	b	2858c <__assert_fail@plt+0x170f8>
   28620:	ldr	r0, [sp, #40]	; 0x28
   28624:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28628:	sub	r0, r0, r1
   2862c:	ldr	r1, [fp, #-8]
   28630:	ldr	r2, [r1, #48]	; 0x30
   28634:	add	r0, r2, r0
   28638:	str	r0, [r1, #48]	; 0x30
   2863c:	ldr	r0, [fp, #-8]
   28640:	ldr	r0, [r0, #52]	; 0x34
   28644:	ldr	r1, [fp, #-20]	; 0xffffffec
   28648:	cmp	r0, r1
   2864c:	ble	2866c <__assert_fail@plt+0x171d8>
   28650:	ldr	r0, [sp, #40]	; 0x28
   28654:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28658:	sub	r0, r0, r1
   2865c:	ldr	r1, [fp, #-8]
   28660:	ldr	r2, [r1, #56]	; 0x38
   28664:	add	r0, r2, r0
   28668:	str	r0, [r1, #56]	; 0x38
   2866c:	ldr	r0, [fp, #-8]
   28670:	ldr	r0, [r0, #36]	; 0x24
   28674:	ldr	r1, [fp, #-8]
   28678:	ldr	r1, [r1, #48]	; 0x30
   2867c:	cmp	r0, r1
   28680:	ble	28694 <__assert_fail@plt+0x17200>
   28684:	ldr	r0, [fp, #-8]
   28688:	ldr	r0, [r0, #48]	; 0x30
   2868c:	str	r0, [sp]
   28690:	b	286a0 <__assert_fail@plt+0x1720c>
   28694:	ldr	r0, [fp, #-8]
   28698:	ldr	r0, [r0, #36]	; 0x24
   2869c:	str	r0, [sp]
   286a0:	ldr	r0, [sp]
   286a4:	str	r0, [fp, #-28]	; 0xffffffe4
   286a8:	ldr	r0, [sp, #40]	; 0x28
   286ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   286b0:	add	r0, r1, r0
   286b4:	str	r0, [fp, #-24]	; 0xffffffe8
   286b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   286bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   286c0:	add	r0, r1, r0
   286c4:	str	r0, [fp, #-20]	; 0xffffffec
   286c8:	b	2827c <__assert_fail@plt+0x16de8>
   286cc:	ldr	r0, [fp, #-8]
   286d0:	ldr	r0, [r0, #4]
   286d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   286d8:	add	r0, r0, r1
   286dc:	ldr	r1, [sp, #56]	; 0x38
   286e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   286e4:	bl	11248 <memcpy@plt>
   286e8:	b	286ec <__assert_fail@plt+0x17258>
   286ec:	b	2870c <__assert_fail@plt+0x17278>
   286f0:	ldr	r0, [fp, #-8]
   286f4:	ldr	r0, [r0, #4]
   286f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   286fc:	add	r0, r0, r1
   28700:	ldr	r1, [sp, #56]	; 0x38
   28704:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28708:	bl	11248 <memcpy@plt>
   2870c:	ldr	r0, [fp, #-8]
   28710:	ldrb	r0, [r0, #76]	; 0x4c
   28714:	cmp	r0, #0
   28718:	beq	2876c <__assert_fail@plt+0x172d8>
   2871c:	movw	r0, #0
   28720:	str	r0, [sp, #32]
   28724:	ldr	r0, [sp, #32]
   28728:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2872c:	cmp	r0, r1
   28730:	bcs	28768 <__assert_fail@plt+0x172d4>
   28734:	ldr	r0, [fp, #-20]	; 0xffffffec
   28738:	ldr	r1, [sp, #32]
   2873c:	add	r0, r0, r1
   28740:	ldr	r2, [fp, #-8]
   28744:	ldr	r2, [r2, #12]
   28748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2874c:	add	r1, r3, r1
   28750:	add	r1, r2, r1, lsl #2
   28754:	str	r0, [r1]
   28758:	ldr	r0, [sp, #32]
   2875c:	add	r0, r0, #1
   28760:	str	r0, [sp, #32]
   28764:	b	28724 <__assert_fail@plt+0x17290>
   28768:	b	2876c <__assert_fail@plt+0x172d8>
   2876c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28770:	ldr	r1, [fp, #-20]	; 0xffffffec
   28774:	add	r0, r1, r0
   28778:	str	r0, [fp, #-20]	; 0xffffffec
   2877c:	ldr	r0, [sp, #44]	; 0x2c
   28780:	ldr	r1, [fp, #-8]
   28784:	ldr	r1, [r1, #8]
   28788:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2878c:	add	r3, r2, #1
   28790:	str	r3, [fp, #-24]	; 0xffffffe8
   28794:	add	r1, r1, r2, lsl #2
   28798:	str	r0, [r1]
   2879c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   287a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   287a4:	add	r0, r0, r1
   287a8:	sub	r0, r0, #1
   287ac:	str	r0, [fp, #-32]	; 0xffffffe0
   287b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   287b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   287b8:	cmp	r0, r1
   287bc:	bge	287e4 <__assert_fail@plt+0x17350>
   287c0:	ldr	r0, [fp, #-8]
   287c4:	ldr	r0, [r0, #8]
   287c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   287cc:	add	r2, r1, #1
   287d0:	str	r2, [fp, #-24]	; 0xffffffe8
   287d4:	add	r0, r0, r1, lsl #2
   287d8:	mvn	r1, #0
   287dc:	str	r1, [r0]
   287e0:	b	287b0 <__assert_fail@plt+0x1731c>
   287e4:	b	28920 <__assert_fail@plt+0x1748c>
   287e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   287ec:	cmn	r0, #1
   287f0:	beq	28824 <__assert_fail@plt+0x17390>
   287f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   287f8:	cmp	r0, #0
   287fc:	beq	28824 <__assert_fail@plt+0x17390>
   28800:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28804:	cmn	r0, #2
   28808:	bne	28904 <__assert_fail@plt+0x17470>
   2880c:	ldr	r0, [fp, #-8]
   28810:	ldr	r0, [r0, #36]	; 0x24
   28814:	ldr	r1, [fp, #-8]
   28818:	ldr	r1, [r1, #48]	; 0x30
   2881c:	cmp	r0, r1
   28820:	blt	28904 <__assert_fail@plt+0x17470>
   28824:	ldr	r0, [fp, #-8]
   28828:	ldr	r0, [r0]
   2882c:	ldr	r1, [fp, #-8]
   28830:	ldr	r1, [r1, #24]
   28834:	ldr	r2, [fp, #-20]	; 0xffffffec
   28838:	add	r1, r1, r2
   2883c:	add	r0, r0, r1
   28840:	ldrb	r0, [r0]
   28844:	str	r0, [sp, #28]
   28848:	ldr	r0, [fp, #-8]
   2884c:	ldr	r0, [r0, #64]	; 0x40
   28850:	movw	r1, #0
   28854:	cmp	r0, r1
   28858:	beq	28874 <__assert_fail@plt+0x173e0>
   2885c:	ldr	r0, [fp, #-8]
   28860:	ldr	r0, [r0, #64]	; 0x40
   28864:	ldr	r1, [sp, #28]
   28868:	add	r0, r0, r1
   2886c:	ldrb	r0, [r0]
   28870:	str	r0, [sp, #28]
   28874:	ldr	r0, [sp, #28]
   28878:	ldr	r1, [fp, #-8]
   2887c:	ldr	r1, [r1, #4]
   28880:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28884:	add	r1, r1, r2
   28888:	strb	r0, [r1]
   2888c:	ldr	r0, [fp, #-8]
   28890:	ldrb	r0, [r0, #76]	; 0x4c
   28894:	cmp	r0, #0
   28898:	beq	288b4 <__assert_fail@plt+0x17420>
   2889c:	ldr	r0, [fp, #-20]	; 0xffffffec
   288a0:	ldr	r1, [fp, #-8]
   288a4:	ldr	r1, [r1, #12]
   288a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   288ac:	add	r1, r1, r2, lsl #2
   288b0:	str	r0, [r1]
   288b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   288b8:	add	r0, r0, #1
   288bc:	str	r0, [fp, #-20]	; 0xffffffec
   288c0:	ldr	r0, [sp, #28]
   288c4:	ldr	r1, [fp, #-8]
   288c8:	ldr	r1, [r1, #8]
   288cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   288d0:	add	r3, r2, #1
   288d4:	str	r3, [fp, #-24]	; 0xffffffe8
   288d8:	add	r1, r1, r2, lsl #2
   288dc:	str	r0, [r1]
   288e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   288e4:	cmn	r0, #1
   288e8:	bne	28900 <__assert_fail@plt+0x1746c>
   288ec:	ldr	r0, [fp, #-8]
   288f0:	ldr	r1, [fp, #-16]
   288f4:	str	r1, [r0, #16]
   288f8:	ldr	r1, [fp, #-12]
   288fc:	str	r1, [r0, #20]
   28900:	b	2891c <__assert_fail@plt+0x17488>
   28904:	ldr	r0, [fp, #-8]
   28908:	ldr	r1, [fp, #-16]
   2890c:	str	r1, [r0, #16]
   28910:	ldr	r1, [fp, #-12]
   28914:	str	r1, [r0, #20]
   28918:	b	28924 <__assert_fail@plt+0x17490>
   2891c:	b	28920 <__assert_fail@plt+0x1748c>
   28920:	b	2827c <__assert_fail@plt+0x16de8>
   28924:	b	28928 <__assert_fail@plt+0x17494>
   28928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2892c:	ldr	r1, [fp, #-8]
   28930:	str	r0, [r1, #28]
   28934:	ldr	r0, [fp, #-20]	; 0xffffffec
   28938:	ldr	r1, [fp, #-8]
   2893c:	str	r0, [r1, #32]
   28940:	movw	r0, #0
   28944:	str	r0, [fp, #-4]
   28948:	ldr	r0, [fp, #-4]
   2894c:	mov	sp, fp
   28950:	pop	{fp, pc}
   28954:	push	{fp, lr}
   28958:	mov	fp, sp
   2895c:	sub	sp, sp, #24
   28960:	str	r0, [fp, #-4]
   28964:	ldr	r0, [fp, #-4]
   28968:	ldr	r0, [r0, #36]	; 0x24
   2896c:	ldr	r1, [fp, #-4]
   28970:	ldr	r1, [r1, #48]	; 0x30
   28974:	cmp	r0, r1
   28978:	ble	2898c <__assert_fail@plt+0x174f8>
   2897c:	ldr	r0, [fp, #-4]
   28980:	ldr	r0, [r0, #48]	; 0x30
   28984:	str	r0, [sp, #4]
   28988:	b	28998 <__assert_fail@plt+0x17504>
   2898c:	ldr	r0, [fp, #-4]
   28990:	ldr	r0, [r0, #36]	; 0x24
   28994:	str	r0, [sp, #4]
   28998:	ldr	r0, [sp, #4]
   2899c:	str	r0, [sp, #12]
   289a0:	ldr	r0, [fp, #-4]
   289a4:	ldr	r0, [r0, #28]
   289a8:	str	r0, [fp, #-8]
   289ac:	ldr	r0, [fp, #-8]
   289b0:	ldr	r1, [sp, #12]
   289b4:	cmp	r0, r1
   289b8:	bge	28a38 <__assert_fail@plt+0x175a4>
   289bc:	ldr	r0, [fp, #-4]
   289c0:	ldr	r0, [r0]
   289c4:	ldr	r1, [fp, #-4]
   289c8:	ldr	r1, [r1, #24]
   289cc:	ldr	r2, [fp, #-8]
   289d0:	add	r1, r1, r2
   289d4:	add	r0, r0, r1
   289d8:	ldrb	r0, [r0]
   289dc:	str	r0, [sp, #8]
   289e0:	ldr	r0, [fp, #-4]
   289e4:	ldr	r0, [r0, #64]	; 0x40
   289e8:	movw	r1, #0
   289ec:	cmp	r0, r1
   289f0:	beq	28a0c <__assert_fail@plt+0x17578>
   289f4:	ldr	r0, [fp, #-4]
   289f8:	ldr	r0, [r0, #64]	; 0x40
   289fc:	ldr	r1, [sp, #8]
   28a00:	add	r0, r0, r1
   28a04:	ldrb	r0, [r0]
   28a08:	str	r0, [sp, #8]
   28a0c:	ldr	r0, [sp, #8]
   28a10:	bl	11428 <toupper@plt>
   28a14:	ldr	r1, [fp, #-4]
   28a18:	ldr	r1, [r1, #4]
   28a1c:	ldr	r2, [fp, #-8]
   28a20:	add	r1, r1, r2
   28a24:	strb	r0, [r1]
   28a28:	ldr	r0, [fp, #-8]
   28a2c:	add	r0, r0, #1
   28a30:	str	r0, [fp, #-8]
   28a34:	b	289ac <__assert_fail@plt+0x17518>
   28a38:	ldr	r0, [fp, #-8]
   28a3c:	ldr	r1, [fp, #-4]
   28a40:	str	r0, [r1, #28]
   28a44:	ldr	r0, [fp, #-8]
   28a48:	ldr	r1, [fp, #-4]
   28a4c:	str	r0, [r1, #32]
   28a50:	mov	sp, fp
   28a54:	pop	{fp, pc}
   28a58:	push	{fp, lr}
   28a5c:	mov	fp, sp
   28a60:	sub	sp, sp, #128	; 0x80
   28a64:	str	r0, [fp, #-4]
   28a68:	ldr	r0, [fp, #-4]
   28a6c:	ldr	r0, [r0, #36]	; 0x24
   28a70:	ldr	r1, [fp, #-4]
   28a74:	ldr	r1, [r1, #48]	; 0x30
   28a78:	cmp	r0, r1
   28a7c:	ble	28a90 <__assert_fail@plt+0x175fc>
   28a80:	ldr	r0, [fp, #-4]
   28a84:	ldr	r0, [r0, #48]	; 0x30
   28a88:	str	r0, [sp, #16]
   28a8c:	b	28a9c <__assert_fail@plt+0x17608>
   28a90:	ldr	r0, [fp, #-4]
   28a94:	ldr	r0, [r0, #36]	; 0x24
   28a98:	str	r0, [sp, #16]
   28a9c:	ldr	r0, [sp, #16]
   28aa0:	str	r0, [sp, #44]	; 0x2c
   28aa4:	ldr	r0, [fp, #-4]
   28aa8:	ldr	r0, [r0, #28]
   28aac:	str	r0, [sp, #48]	; 0x30
   28ab0:	ldr	r0, [sp, #48]	; 0x30
   28ab4:	ldr	r1, [sp, #44]	; 0x2c
   28ab8:	cmp	r0, r1
   28abc:	bge	28d78 <__assert_fail@plt+0x178e4>
   28ac0:	ldr	r0, [sp, #44]	; 0x2c
   28ac4:	ldr	r1, [sp, #48]	; 0x30
   28ac8:	sub	r0, r0, r1
   28acc:	str	r0, [sp, #40]	; 0x28
   28ad0:	ldr	r0, [fp, #-4]
   28ad4:	ldr	r1, [r0, #16]
   28ad8:	str	r1, [sp, #52]	; 0x34
   28adc:	ldr	r0, [r0, #20]
   28ae0:	str	r0, [sp, #56]	; 0x38
   28ae4:	ldr	r0, [fp, #-4]
   28ae8:	ldr	r0, [r0, #64]	; 0x40
   28aec:	movw	r1, #0
   28af0:	cmp	r0, r1
   28af4:	beq	28bc8 <__assert_fail@plt+0x17734>
   28af8:	movw	r0, #0
   28afc:	str	r0, [sp, #24]
   28b00:	ldr	r0, [sp, #24]
   28b04:	ldr	r1, [fp, #-4]
   28b08:	ldr	r1, [r1, #80]	; 0x50
   28b0c:	cmp	r0, r1
   28b10:	movw	r0, #0
   28b14:	str	r0, [sp, #12]
   28b18:	bge	28b34 <__assert_fail@plt+0x176a0>
   28b1c:	ldr	r0, [sp, #24]
   28b20:	ldr	r1, [sp, #40]	; 0x28
   28b24:	cmp	r0, r1
   28b28:	movw	r0, #0
   28b2c:	movlt	r0, #1
   28b30:	str	r0, [sp, #12]
   28b34:	ldr	r0, [sp, #12]
   28b38:	tst	r0, #1
   28b3c:	beq	28bbc <__assert_fail@plt+0x17728>
   28b40:	ldr	r0, [fp, #-4]
   28b44:	ldr	r0, [r0]
   28b48:	ldr	r1, [fp, #-4]
   28b4c:	ldr	r1, [r1, #24]
   28b50:	ldr	r2, [sp, #48]	; 0x30
   28b54:	add	r1, r1, r2
   28b58:	ldr	r2, [sp, #24]
   28b5c:	add	r1, r1, r2
   28b60:	add	r0, r0, r1
   28b64:	ldrb	r0, [r0]
   28b68:	str	r0, [sp, #20]
   28b6c:	ldr	r0, [fp, #-4]
   28b70:	ldr	r0, [r0, #64]	; 0x40
   28b74:	ldr	r1, [sp, #20]
   28b78:	add	r0, r0, r1
   28b7c:	ldrb	r0, [r0]
   28b80:	ldr	r1, [fp, #-4]
   28b84:	ldr	r1, [r1, #4]
   28b88:	ldr	r2, [sp, #48]	; 0x30
   28b8c:	ldr	r3, [sp, #24]
   28b90:	add	r2, r2, r3
   28b94:	add	r1, r1, r2
   28b98:	strb	r0, [r1]
   28b9c:	ldr	r1, [sp, #24]
   28ba0:	add	r2, sp, #60	; 0x3c
   28ba4:	add	r1, r2, r1
   28ba8:	strb	r0, [r1]
   28bac:	ldr	r0, [sp, #24]
   28bb0:	add	r0, r0, #1
   28bb4:	str	r0, [sp, #24]
   28bb8:	b	28b00 <__assert_fail@plt+0x1766c>
   28bbc:	add	r0, sp, #60	; 0x3c
   28bc0:	str	r0, [sp, #28]
   28bc4:	b	28be8 <__assert_fail@plt+0x17754>
   28bc8:	ldr	r0, [fp, #-4]
   28bcc:	ldr	r0, [r0]
   28bd0:	ldr	r1, [fp, #-4]
   28bd4:	ldr	r1, [r1, #24]
   28bd8:	add	r0, r0, r1
   28bdc:	ldr	r1, [sp, #48]	; 0x30
   28be0:	add	r0, r0, r1
   28be4:	str	r0, [sp, #28]
   28be8:	ldr	r1, [sp, #28]
   28bec:	ldr	r2, [sp, #40]	; 0x28
   28bf0:	ldr	r0, [fp, #-4]
   28bf4:	add	r3, r0, #16
   28bf8:	add	r0, sp, #32
   28bfc:	bl	41610 <__assert_fail@plt+0x3017c>
   28c00:	str	r0, [sp, #36]	; 0x24
   28c04:	ldr	r0, [sp, #36]	; 0x24
   28c08:	cmn	r0, #1
   28c0c:	movw	r0, #1
   28c10:	str	r0, [sp, #8]
   28c14:	beq	28c68 <__assert_fail@plt+0x177d4>
   28c18:	ldr	r0, [sp, #36]	; 0x24
   28c1c:	cmp	r0, #0
   28c20:	movw	r0, #1
   28c24:	str	r0, [sp, #8]
   28c28:	beq	28c68 <__assert_fail@plt+0x177d4>
   28c2c:	ldr	r0, [sp, #36]	; 0x24
   28c30:	cmn	r0, #2
   28c34:	movw	r0, #0
   28c38:	str	r0, [sp, #4]
   28c3c:	bne	28c60 <__assert_fail@plt+0x177cc>
   28c40:	ldr	r0, [fp, #-4]
   28c44:	ldr	r0, [r0, #36]	; 0x24
   28c48:	ldr	r1, [fp, #-4]
   28c4c:	ldr	r1, [r1, #48]	; 0x30
   28c50:	cmp	r0, r1
   28c54:	movw	r0, #0
   28c58:	movge	r0, #1
   28c5c:	str	r0, [sp, #4]
   28c60:	ldr	r0, [sp, #4]
   28c64:	str	r0, [sp, #8]
   28c68:	ldr	r0, [sp, #8]
   28c6c:	tst	r0, #1
   28c70:	beq	28ce4 <__assert_fail@plt+0x17850>
   28c74:	movw	r0, #1
   28c78:	str	r0, [sp, #36]	; 0x24
   28c7c:	ldr	r0, [fp, #-4]
   28c80:	ldr	r0, [r0]
   28c84:	ldr	r1, [fp, #-4]
   28c88:	ldr	r1, [r1, #24]
   28c8c:	ldr	r2, [sp, #48]	; 0x30
   28c90:	add	r1, r1, r2
   28c94:	add	r0, r0, r1
   28c98:	ldrb	r0, [r0]
   28c9c:	str	r0, [sp, #32]
   28ca0:	ldr	r0, [fp, #-4]
   28ca4:	ldr	r0, [r0, #64]	; 0x40
   28ca8:	movw	r1, #0
   28cac:	cmp	r0, r1
   28cb0:	beq	28ccc <__assert_fail@plt+0x17838>
   28cb4:	ldr	r0, [fp, #-4]
   28cb8:	ldr	r0, [r0, #64]	; 0x40
   28cbc:	ldr	r1, [sp, #32]
   28cc0:	add	r0, r0, r1
   28cc4:	ldrb	r0, [r0]
   28cc8:	str	r0, [sp, #32]
   28ccc:	ldr	r0, [fp, #-4]
   28cd0:	ldr	r1, [sp, #52]	; 0x34
   28cd4:	str	r1, [r0, #16]
   28cd8:	ldr	r1, [sp, #56]	; 0x38
   28cdc:	str	r1, [r0, #20]
   28ce0:	b	28d0c <__assert_fail@plt+0x17878>
   28ce4:	ldr	r0, [sp, #36]	; 0x24
   28ce8:	cmn	r0, #2
   28cec:	bne	28d08 <__assert_fail@plt+0x17874>
   28cf0:	ldr	r0, [fp, #-4]
   28cf4:	ldr	r1, [sp, #52]	; 0x34
   28cf8:	str	r1, [r0, #16]
   28cfc:	ldr	r1, [sp, #56]	; 0x38
   28d00:	str	r1, [r0, #20]
   28d04:	b	28d78 <__assert_fail@plt+0x178e4>
   28d08:	b	28d0c <__assert_fail@plt+0x17878>
   28d0c:	ldr	r0, [sp, #32]
   28d10:	ldr	r1, [fp, #-4]
   28d14:	ldr	r1, [r1, #8]
   28d18:	ldr	r2, [sp, #48]	; 0x30
   28d1c:	add	r3, r2, #1
   28d20:	str	r3, [sp, #48]	; 0x30
   28d24:	add	r1, r1, r2, lsl #2
   28d28:	str	r0, [r1]
   28d2c:	ldr	r0, [sp, #48]	; 0x30
   28d30:	ldr	r1, [sp, #36]	; 0x24
   28d34:	add	r0, r0, r1
   28d38:	sub	r0, r0, #1
   28d3c:	str	r0, [sp, #40]	; 0x28
   28d40:	ldr	r0, [sp, #48]	; 0x30
   28d44:	ldr	r1, [sp, #40]	; 0x28
   28d48:	cmp	r0, r1
   28d4c:	bge	28d74 <__assert_fail@plt+0x178e0>
   28d50:	ldr	r0, [fp, #-4]
   28d54:	ldr	r0, [r0, #8]
   28d58:	ldr	r1, [sp, #48]	; 0x30
   28d5c:	add	r2, r1, #1
   28d60:	str	r2, [sp, #48]	; 0x30
   28d64:	add	r0, r0, r1, lsl #2
   28d68:	mvn	r1, #0
   28d6c:	str	r1, [r0]
   28d70:	b	28d40 <__assert_fail@plt+0x178ac>
   28d74:	b	28ab0 <__assert_fail@plt+0x1761c>
   28d78:	ldr	r0, [sp, #48]	; 0x30
   28d7c:	ldr	r1, [fp, #-4]
   28d80:	str	r0, [r1, #28]
   28d84:	ldr	r0, [sp, #48]	; 0x30
   28d88:	ldr	r1, [fp, #-4]
   28d8c:	str	r0, [r1, #32]
   28d90:	mov	sp, fp
   28d94:	pop	{fp, pc}
   28d98:	sub	sp, sp, #20
   28d9c:	str	r0, [sp, #16]
   28da0:	ldr	r0, [sp, #16]
   28da4:	ldr	r0, [r0, #36]	; 0x24
   28da8:	ldr	r1, [sp, #16]
   28dac:	ldr	r1, [r1, #48]	; 0x30
   28db0:	cmp	r0, r1
   28db4:	ble	28dc8 <__assert_fail@plt+0x17934>
   28db8:	ldr	r0, [sp, #16]
   28dbc:	ldr	r0, [r0, #48]	; 0x30
   28dc0:	str	r0, [sp]
   28dc4:	b	28dd4 <__assert_fail@plt+0x17940>
   28dc8:	ldr	r0, [sp, #16]
   28dcc:	ldr	r0, [r0, #36]	; 0x24
   28dd0:	str	r0, [sp]
   28dd4:	ldr	r0, [sp]
   28dd8:	str	r0, [sp, #8]
   28ddc:	ldr	r0, [sp, #16]
   28de0:	ldr	r0, [r0, #28]
   28de4:	str	r0, [sp, #12]
   28de8:	ldr	r0, [sp, #12]
   28dec:	ldr	r1, [sp, #8]
   28df0:	cmp	r0, r1
   28df4:	bge	28e54 <__assert_fail@plt+0x179c0>
   28df8:	ldr	r0, [sp, #16]
   28dfc:	ldr	r0, [r0]
   28e00:	ldr	r1, [sp, #16]
   28e04:	ldr	r1, [r1, #24]
   28e08:	ldr	r2, [sp, #12]
   28e0c:	add	r1, r1, r2
   28e10:	add	r0, r0, r1
   28e14:	ldrb	r0, [r0]
   28e18:	str	r0, [sp, #4]
   28e1c:	ldr	r0, [sp, #16]
   28e20:	ldr	r0, [r0, #64]	; 0x40
   28e24:	ldr	r1, [sp, #4]
   28e28:	add	r0, r0, r1
   28e2c:	ldrb	r0, [r0]
   28e30:	ldr	r1, [sp, #16]
   28e34:	ldr	r1, [r1, #4]
   28e38:	ldr	r2, [sp, #12]
   28e3c:	add	r1, r1, r2
   28e40:	strb	r0, [r1]
   28e44:	ldr	r0, [sp, #12]
   28e48:	add	r0, r0, #1
   28e4c:	str	r0, [sp, #12]
   28e50:	b	28de8 <__assert_fail@plt+0x17954>
   28e54:	ldr	r0, [sp, #12]
   28e58:	ldr	r1, [sp, #16]
   28e5c:	str	r0, [r1, #28]
   28e60:	ldr	r0, [sp, #12]
   28e64:	ldr	r1, [sp, #16]
   28e68:	str	r0, [r1, #32]
   28e6c:	add	sp, sp, #20
   28e70:	bx	lr
   28e74:	push	{fp, lr}
   28e78:	mov	fp, sp
   28e7c:	sub	sp, sp, #16
   28e80:	str	r0, [fp, #-4]
   28e84:	str	r1, [sp, #8]
   28e88:	str	r2, [sp, #4]
   28e8c:	ldr	r0, [fp, #-4]
   28e90:	ldr	r1, [sp, #8]
   28e94:	ldr	r2, [sp, #4]
   28e98:	bl	291e4 <__assert_fail@plt+0x17d50>
   28e9c:	ldr	r1, [sp, #8]
   28ea0:	ldr	r2, [r1, #40]	; 0x28
   28ea4:	add	r0, r2, r0
   28ea8:	str	r0, [r1, #40]	; 0x28
   28eac:	mov	sp, fp
   28eb0:	pop	{fp, pc}
   28eb4:	push	{r4, r5, fp, lr}
   28eb8:	add	fp, sp, #8
   28ebc:	sub	sp, sp, #64	; 0x40
   28ec0:	ldr	ip, [fp, #12]
   28ec4:	ldr	lr, [fp, #8]
   28ec8:	str	r0, [fp, #-16]
   28ecc:	str	r1, [fp, #-20]	; 0xffffffec
   28ed0:	str	r2, [fp, #-24]	; 0xffffffe8
   28ed4:	str	r3, [fp, #-28]	; 0xffffffe4
   28ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   28edc:	ldr	r0, [r0]
   28ee0:	str	r0, [fp, #-32]	; 0xffffffe0
   28ee4:	movw	r0, #0
   28ee8:	str	r0, [sp, #32]
   28eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28ef0:	ldr	r0, [r0, #84]	; 0x54
   28ef4:	str	r0, [sp, #28]
   28ef8:	ldr	r0, [fp, #-16]
   28efc:	ldr	r1, [fp, #-20]	; 0xffffffec
   28f00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28f04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28f08:	ldr	r4, [fp, #8]
   28f0c:	ldr	r5, [fp, #12]
   28f10:	str	r4, [sp]
   28f14:	str	r5, [sp, #4]
   28f18:	str	ip, [sp, #20]
   28f1c:	str	lr, [sp, #16]
   28f20:	bl	2a26c <__assert_fail@plt+0x18dd8>
   28f24:	str	r0, [sp, #36]	; 0x24
   28f28:	ldr	r0, [fp, #12]
   28f2c:	ldr	r0, [r0]
   28f30:	cmp	r0, #0
   28f34:	movw	r0, #0
   28f38:	str	r0, [sp, #12]
   28f3c:	beq	28f58 <__assert_fail@plt+0x17ac4>
   28f40:	ldr	r0, [sp, #36]	; 0x24
   28f44:	movw	r1, #0
   28f48:	cmp	r0, r1
   28f4c:	movw	r0, #0
   28f50:	moveq	r0, #1
   28f54:	str	r0, [sp, #12]
   28f58:	ldr	r0, [sp, #12]
   28f5c:	tst	r0, #1
   28f60:	beq	28f70 <__assert_fail@plt+0x17adc>
   28f64:	movw	r0, #0
   28f68:	str	r0, [fp, #-12]
   28f6c:	b	290fc <__assert_fail@plt+0x17c68>
   28f70:	b	28f74 <__assert_fail@plt+0x17ae0>
   28f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28f78:	ldr	r0, [r0, #4]
   28f7c:	and	r0, r0, #255	; 0xff
   28f80:	cmp	r0, #10
   28f84:	bne	290f4 <__assert_fail@plt+0x17c60>
   28f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28f8c:	ldr	r1, [fp, #-16]
   28f90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28f94:	orr	r2, r2, #8388608	; 0x800000
   28f98:	bl	28e74 <__assert_fail@plt+0x179e0>
   28f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28fa0:	ldr	r0, [r0, #4]
   28fa4:	and	r0, r0, #255	; 0xff
   28fa8:	cmp	r0, #10
   28fac:	beq	290a8 <__assert_fail@plt+0x17c14>
   28fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28fb4:	ldr	r0, [r0, #4]
   28fb8:	and	r0, r0, #255	; 0xff
   28fbc:	cmp	r0, #2
   28fc0:	beq	290a8 <__assert_fail@plt+0x17c14>
   28fc4:	ldr	r0, [fp, #8]
   28fc8:	cmp	r0, #0
   28fcc:	beq	28fe4 <__assert_fail@plt+0x17b50>
   28fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28fd4:	ldr	r0, [r0, #4]
   28fd8:	and	r0, r0, #255	; 0xff
   28fdc:	cmp	r0, #9
   28fe0:	beq	290a8 <__assert_fail@plt+0x17c14>
   28fe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28fe8:	ldr	r0, [r0, #84]	; 0x54
   28fec:	str	r0, [sp, #24]
   28ff0:	ldr	r0, [sp, #28]
   28ff4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28ff8:	str	r0, [r1, #84]	; 0x54
   28ffc:	ldr	r0, [fp, #-16]
   29000:	ldr	r1, [fp, #-20]	; 0xffffffec
   29004:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2900c:	ldr	ip, [fp, #8]
   29010:	ldr	lr, [fp, #12]
   29014:	str	ip, [sp]
   29018:	str	lr, [sp, #4]
   2901c:	bl	2a26c <__assert_fail@plt+0x18dd8>
   29020:	str	r0, [sp, #32]
   29024:	ldr	r0, [fp, #12]
   29028:	ldr	r0, [r0]
   2902c:	cmp	r0, #0
   29030:	movw	r0, #0
   29034:	str	r0, [sp, #8]
   29038:	beq	29054 <__assert_fail@plt+0x17bc0>
   2903c:	ldr	r0, [sp, #32]
   29040:	movw	r1, #0
   29044:	cmp	r0, r1
   29048:	movw	r0, #0
   2904c:	moveq	r0, #1
   29050:	str	r0, [sp, #8]
   29054:	ldr	r0, [sp, #8]
   29058:	tst	r0, #1
   2905c:	beq	29090 <__assert_fail@plt+0x17bfc>
   29060:	ldr	r0, [sp, #36]	; 0x24
   29064:	movw	r1, #0
   29068:	cmp	r0, r1
   2906c:	beq	29084 <__assert_fail@plt+0x17bf0>
   29070:	ldr	r0, [sp, #36]	; 0x24
   29074:	movw	r1, #42600	; 0xa668
   29078:	movt	r1, #2
   2907c:	movw	r2, #0
   29080:	bl	2a4f8 <__assert_fail@plt+0x19064>
   29084:	movw	r0, #0
   29088:	str	r0, [fp, #-12]
   2908c:	b	290fc <__assert_fail@plt+0x17c68>
   29090:	ldr	r0, [sp, #24]
   29094:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29098:	ldr	r2, [r1, #84]	; 0x54
   2909c:	orr	r0, r2, r0
   290a0:	str	r0, [r1, #84]	; 0x54
   290a4:	b	290b0 <__assert_fail@plt+0x17c1c>
   290a8:	movw	r0, #0
   290ac:	str	r0, [sp, #32]
   290b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   290b4:	ldr	r1, [sp, #36]	; 0x24
   290b8:	ldr	r2, [sp, #32]
   290bc:	movw	r3, #10
   290c0:	bl	29108 <__assert_fail@plt+0x17c74>
   290c4:	str	r0, [sp, #36]	; 0x24
   290c8:	ldr	r0, [sp, #36]	; 0x24
   290cc:	movw	r1, #0
   290d0:	cmp	r0, r1
   290d4:	bne	290f0 <__assert_fail@plt+0x17c5c>
   290d8:	ldr	r0, [fp, #12]
   290dc:	movw	r1, #12
   290e0:	str	r1, [r0]
   290e4:	movw	r0, #0
   290e8:	str	r0, [fp, #-12]
   290ec:	b	290fc <__assert_fail@plt+0x17c68>
   290f0:	b	28f74 <__assert_fail@plt+0x17ae0>
   290f4:	ldr	r0, [sp, #36]	; 0x24
   290f8:	str	r0, [fp, #-12]
   290fc:	ldr	r0, [fp, #-12]
   29100:	sub	sp, fp, #8
   29104:	pop	{r4, r5, fp, pc}
   29108:	push	{fp, lr}
   2910c:	mov	fp, sp
   29110:	sub	sp, sp, #32
   29114:	add	ip, sp, #8
   29118:	ldr	lr, [pc, #192]	; 291e0 <__assert_fail@plt+0x17d4c>
   2911c:	str	r0, [fp, #-4]
   29120:	str	r1, [fp, #-8]
   29124:	str	r2, [fp, #-12]
   29128:	str	r3, [sp, #16]
   2912c:	mov	r0, ip
   29130:	movw	r1, #0
   29134:	and	r1, r1, #255	; 0xff
   29138:	movw	r2, #4
   2913c:	str	ip, [sp, #4]
   29140:	str	lr, [sp]
   29144:	bl	113d4 <memset@plt>
   29148:	ldr	r0, [sp, #16]
   2914c:	ldr	r1, [sp, #12]
   29150:	and	r0, r0, #255	; 0xff
   29154:	mvn	r2, #255	; 0xff
   29158:	and	r1, r1, r2
   2915c:	orr	r0, r1, r0
   29160:	str	r0, [sp, #12]
   29164:	ldr	r0, [sp, #12]
   29168:	ldr	r1, [sp]
   2916c:	and	r0, r0, r1
   29170:	str	r0, [sp, #12]
   29174:	ldr	r0, [sp, #12]
   29178:	mvn	r2, #262144	; 0x40000
   2917c:	and	r0, r0, r2
   29180:	str	r0, [sp, #12]
   29184:	ldr	r0, [sp, #12]
   29188:	mvn	r2, #524288	; 0x80000
   2918c:	and	r0, r0, r2
   29190:	str	r0, [sp, #12]
   29194:	ldr	r0, [sp, #12]
   29198:	mvn	r2, #1048576	; 0x100000
   2919c:	and	r0, r0, r2
   291a0:	str	r0, [sp, #12]
   291a4:	ldr	r0, [sp, #12]
   291a8:	mvn	r2, #2097152	; 0x200000
   291ac:	and	r0, r0, r2
   291b0:	str	r0, [sp, #12]
   291b4:	ldr	r0, [sp, #12]
   291b8:	mvn	r2, #4194304	; 0x400000
   291bc:	and	r0, r0, r2
   291c0:	str	r0, [sp, #12]
   291c4:	ldr	r0, [fp, #-4]
   291c8:	ldr	r1, [fp, #-8]
   291cc:	ldr	r2, [fp, #-12]
   291d0:	ldr	r3, [sp, #4]
   291d4:	bl	2b16c <__assert_fail@plt+0x19cd8>
   291d8:	mov	sp, fp
   291dc:	pop	{fp, pc}
   291e0:			; <UNDEFINED> instruction: 0xfffc00ff
   291e4:	push	{fp, lr}
   291e8:	mov	fp, sp
   291ec:	sub	sp, sp, #64	; 0x40
   291f0:	str	r0, [fp, #-8]
   291f4:	str	r1, [fp, #-12]
   291f8:	str	r2, [fp, #-16]
   291fc:	ldr	r0, [fp, #-12]
   29200:	ldr	r0, [r0, #56]	; 0x38
   29204:	ldr	r1, [fp, #-12]
   29208:	ldr	r1, [r1, #40]	; 0x28
   2920c:	cmp	r0, r1
   29210:	bgt	29238 <__assert_fail@plt+0x17da4>
   29214:	ldr	r0, [fp, #-8]
   29218:	ldr	r1, [r0, #4]
   2921c:	mvn	r2, #255	; 0xff
   29220:	and	r1, r1, r2
   29224:	orr	r1, r1, #2
   29228:	str	r1, [r0, #4]
   2922c:	movw	r0, #0
   29230:	str	r0, [fp, #-4]
   29234:	b	2a040 <__assert_fail@plt+0x18bac>
   29238:	ldr	r0, [fp, #-12]
   2923c:	ldr	r0, [r0, #4]
   29240:	ldr	r1, [fp, #-12]
   29244:	ldr	r1, [r1, #40]	; 0x28
   29248:	add	r1, r1, #0
   2924c:	add	r0, r0, r1
   29250:	ldrb	r0, [r0]
   29254:	strb	r0, [fp, #-17]	; 0xffffffef
   29258:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2925c:	ldr	r1, [fp, #-8]
   29260:	strb	r0, [r1]
   29264:	ldr	r0, [fp, #-8]
   29268:	ldr	r1, [r0, #4]
   2926c:	mvn	r2, #4194304	; 0x400000
   29270:	and	r1, r1, r2
   29274:	str	r1, [r0, #4]
   29278:	ldr	r0, [fp, #-8]
   2927c:	ldr	r1, [r0, #4]
   29280:	mvn	r2, #2097152	; 0x200000
   29284:	and	r1, r1, r2
   29288:	str	r1, [r0, #4]
   2928c:	ldr	r0, [fp, #-12]
   29290:	ldr	r0, [r0, #80]	; 0x50
   29294:	cmp	r0, #1
   29298:	ble	2930c <__assert_fail@plt+0x17e78>
   2929c:	ldr	r0, [fp, #-12]
   292a0:	ldr	r0, [r0, #40]	; 0x28
   292a4:	ldr	r1, [fp, #-12]
   292a8:	ldr	r1, [r1, #28]
   292ac:	cmp	r0, r1
   292b0:	beq	2930c <__assert_fail@plt+0x17e78>
   292b4:	ldr	r0, [fp, #-12]
   292b8:	ldr	r1, [r0, #8]
   292bc:	ldr	r0, [r0, #40]	; 0x28
   292c0:	add	r0, r1, r0, lsl #2
   292c4:	ldr	r0, [r0]
   292c8:	cmn	r0, #1
   292cc:	bne	2930c <__assert_fail@plt+0x17e78>
   292d0:	ldr	r0, [fp, #-8]
   292d4:	ldr	r1, [r0, #4]
   292d8:	mvn	r2, #255	; 0xff
   292dc:	and	r1, r1, r2
   292e0:	orr	r1, r1, #1
   292e4:	str	r1, [r0, #4]
   292e8:	ldr	r0, [fp, #-8]
   292ec:	ldr	r1, [r0, #4]
   292f0:	mvn	r2, #2097152	; 0x200000
   292f4:	and	r1, r1, r2
   292f8:	orr	r1, r1, #2097152	; 0x200000
   292fc:	str	r1, [r0, #4]
   29300:	movw	r0, #1
   29304:	str	r0, [fp, #-4]
   29308:	b	2a040 <__assert_fail@plt+0x18bac>
   2930c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   29310:	cmp	r0, #92	; 0x5c
   29314:	bne	299e4 <__assert_fail@plt+0x18550>
   29318:	ldr	r0, [fp, #-12]
   2931c:	ldr	r0, [r0, #40]	; 0x28
   29320:	add	r0, r0, #1
   29324:	ldr	r1, [fp, #-12]
   29328:	ldr	r1, [r1, #48]	; 0x30
   2932c:	cmp	r0, r1
   29330:	blt	29358 <__assert_fail@plt+0x17ec4>
   29334:	ldr	r0, [fp, #-8]
   29338:	ldr	r1, [r0, #4]
   2933c:	mvn	r2, #255	; 0xff
   29340:	and	r1, r1, r2
   29344:	orr	r1, r1, #36	; 0x24
   29348:	str	r1, [r0, #4]
   2934c:	movw	r0, #1
   29350:	str	r0, [fp, #-4]
   29354:	b	2a040 <__assert_fail@plt+0x18bac>
   29358:	ldr	r0, [fp, #-12]
   2935c:	movw	r1, #1
   29360:	bl	2a050 <__assert_fail@plt+0x18bbc>
   29364:	strb	r0, [fp, #-18]	; 0xffffffee
   29368:	ldrb	r0, [fp, #-18]	; 0xffffffee
   2936c:	ldr	r1, [fp, #-8]
   29370:	strb	r0, [r1]
   29374:	ldr	r0, [fp, #-8]
   29378:	ldr	r1, [r0, #4]
   2937c:	mvn	r2, #255	; 0xff
   29380:	and	r1, r1, r2
   29384:	orr	r1, r1, #1
   29388:	str	r1, [r0, #4]
   2938c:	ldr	r0, [fp, #-12]
   29390:	ldr	r0, [r0, #80]	; 0x50
   29394:	cmp	r0, #1
   29398:	ble	2941c <__assert_fail@plt+0x17f88>
   2939c:	ldr	r0, [fp, #-12]
   293a0:	ldr	r1, [fp, #-12]
   293a4:	ldr	r1, [r1, #40]	; 0x28
   293a8:	add	r1, r1, #1
   293ac:	bl	2a210 <__assert_fail@plt+0x18d7c>
   293b0:	str	r0, [fp, #-24]	; 0xffffffe8
   293b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   293b8:	bl	113bc <iswalnum@plt>
   293bc:	cmp	r0, #0
   293c0:	movw	r0, #1
   293c4:	str	r0, [sp, #20]
   293c8:	bne	293e0 <__assert_fail@plt+0x17f4c>
   293cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   293d0:	cmp	r0, #95	; 0x5f
   293d4:	movw	r0, #0
   293d8:	moveq	r0, #1
   293dc:	str	r0, [sp, #20]
   293e0:	ldr	r0, [sp, #20]
   293e4:	and	r0, r0, #1
   293e8:	cmp	r0, #0
   293ec:	movw	r0, #0
   293f0:	movne	r0, #1
   293f4:	and	r0, r0, #1
   293f8:	ldr	r1, [fp, #-8]
   293fc:	ldr	r2, [r1, #4]
   29400:	and	r0, r0, #1
   29404:	lsl	r0, r0, #22
   29408:	mvn	r3, #4194304	; 0x400000
   2940c:	and	r2, r2, r3
   29410:	orr	r0, r2, r0
   29414:	str	r0, [r1, #4]
   29418:	b	29494 <__assert_fail@plt+0x18000>
   2941c:	bl	11368 <__ctype_b_loc@plt>
   29420:	ldr	r0, [r0]
   29424:	ldrb	r1, [fp, #-18]	; 0xffffffee
   29428:	mov	r2, r1
   2942c:	add	r0, r0, r1, lsl #1
   29430:	ldrh	r0, [r0]
   29434:	and	r0, r0, #8
   29438:	cmp	r0, #0
   2943c:	movw	r0, #1
   29440:	str	r0, [sp, #16]
   29444:	bne	2945c <__assert_fail@plt+0x17fc8>
   29448:	ldrb	r0, [fp, #-18]	; 0xffffffee
   2944c:	cmp	r0, #95	; 0x5f
   29450:	movw	r0, #0
   29454:	moveq	r0, #1
   29458:	str	r0, [sp, #16]
   2945c:	ldr	r0, [sp, #16]
   29460:	and	r0, r0, #1
   29464:	cmp	r0, #0
   29468:	movw	r0, #0
   2946c:	movne	r0, #1
   29470:	and	r0, r0, #1
   29474:	ldr	r1, [fp, #-8]
   29478:	ldr	r2, [r1, #4]
   2947c:	and	r0, r0, #1
   29480:	lsl	r0, r0, #22
   29484:	mvn	r3, #4194304	; 0x400000
   29488:	and	r2, r2, r3
   2948c:	orr	r0, r2, r0
   29490:	str	r0, [r1, #4]
   29494:	ldrb	r0, [fp, #-18]	; 0xffffffee
   29498:	sub	r0, r0, #39	; 0x27
   2949c:	cmp	r0, #86	; 0x56
   294a0:	str	r0, [sp, #12]
   294a4:	bhi	299d4 <__assert_fail@plt+0x18540>
   294a8:	add	r0, pc, #8
   294ac:	ldr	r1, [sp, #12]
   294b0:	ldr	r0, [r0, r1, lsl #2]
   294b4:	mov	pc, r0
   294b8:	andeq	r9, r2, r4, asr r8
   294bc:	andeq	r9, r2, ip, lsl #17
   294c0:			; <UNDEFINED> instruction: 0x000298b8
   294c4:	ldrdeq	r9, [r2], -r4
   294c8:	andeq	r9, r2, r4, ror #17
   294cc:	ldrdeq	r9, [r2], -r4
   294d0:	ldrdeq	r9, [r2], -r4
   294d4:	ldrdeq	r9, [r2], -r4
   294d8:	ldrdeq	r9, [r2], -r4
   294dc:	ldrdeq	r9, [r2], -r4
   294e0:	andeq	r9, r2, r0, asr r6
   294e4:	andeq	r9, r2, r0, asr r6
   294e8:	andeq	r9, r2, r0, asr r6
   294ec:	andeq	r9, r2, r0, asr r6
   294f0:	andeq	r9, r2, r0, asr r6
   294f4:	andeq	r9, r2, r0, asr r6
   294f8:	andeq	r9, r2, r0, asr r6
   294fc:	andeq	r9, r2, r0, asr r6
   29500:	andeq	r9, r2, r0, asr r6
   29504:	ldrdeq	r9, [r2], -r4
   29508:	ldrdeq	r9, [r2], -r4
   2950c:	andeq	r9, r2, ip, lsl #13
   29510:	ldrdeq	r9, [r2], -r4
   29514:	andeq	r9, r2, r4, asr #13
   29518:	andeq	r9, r2, r0, lsr #18
   2951c:	ldrdeq	r9, [r2], -r4
   29520:	ldrdeq	r9, [r2], -r4
   29524:	andeq	r9, r2, r4, lsr r7
   29528:	ldrdeq	r9, [r2], -r4
   2952c:	ldrdeq	r9, [r2], -r4
   29530:	ldrdeq	r9, [r2], -r4
   29534:	ldrdeq	r9, [r2], -r4
   29538:	ldrdeq	r9, [r2], -r4
   2953c:	ldrdeq	r9, [r2], -r4
   29540:	ldrdeq	r9, [r2], -r4
   29544:	ldrdeq	r9, [r2], -r4
   29548:	ldrdeq	r9, [r2], -r4
   2954c:	ldrdeq	r9, [r2], -r4
   29550:	ldrdeq	r9, [r2], -r4
   29554:	ldrdeq	r9, [r2], -r4
   29558:	ldrdeq	r9, [r2], -r4
   2955c:	ldrdeq	r9, [r2], -r4
   29560:	ldrdeq	r9, [r2], -r4
   29564:	ldrdeq	r9, [r2], -r4
   29568:	strdeq	r9, [r2], -r0
   2956c:	ldrdeq	r9, [r2], -r4
   29570:	ldrdeq	r9, [r2], -r4
   29574:	ldrdeq	r9, [r2], -r4
   29578:	muleq	r2, r8, r7
   2957c:	ldrdeq	r9, [r2], -r4
   29580:	ldrdeq	r9, [r2], -r4
   29584:	ldrdeq	r9, [r2], -r4
   29588:	ldrdeq	r9, [r2], -r4
   2958c:	ldrdeq	r9, [r2], -r4
   29590:	ldrdeq	r9, [r2], -r4
   29594:	ldrdeq	r9, [r2], -r4
   29598:	ldrdeq	r9, [r2], -r4
   2959c:	andeq	r9, r2, ip, lsl r8
   295a0:	ldrdeq	r9, [r2], -r4
   295a4:	strdeq	r9, [r2], -ip
   295a8:	ldrdeq	r9, [r2], -r4
   295ac:	ldrdeq	r9, [r2], -r4
   295b0:	ldrdeq	r9, [r2], -r4
   295b4:	ldrdeq	r9, [r2], -r4
   295b8:	ldrdeq	r9, [r2], -r4
   295bc:	ldrdeq	r9, [r2], -r4
   295c0:	ldrdeq	r9, [r2], -r4
   295c4:	ldrdeq	r9, [r2], -r4
   295c8:	ldrdeq	r9, [r2], -r4
   295cc:	ldrdeq	r9, [r2], -r4
   295d0:	ldrdeq	r9, [r2], -r4
   295d4:	ldrdeq	r9, [r2], -r4
   295d8:	ldrdeq	r9, [r2], -r4
   295dc:	ldrdeq	r9, [r2], -r4
   295e0:	ldrdeq	r9, [r2], -r4
   295e4:	ldrdeq	r9, [r2], -r4
   295e8:	andeq	r9, r2, r4, asr #15
   295ec:	ldrdeq	r9, [r2], -r4
   295f0:	ldrdeq	r9, [r2], -r4
   295f4:	ldrdeq	r9, [r2], -r4
   295f8:	andeq	r9, r2, ip, ror #14
   295fc:	ldrdeq	r9, [r2], -r4
   29600:	ldrdeq	r9, [r2], -r4
   29604:	ldrdeq	r9, [r2], -r4
   29608:	andeq	r9, r2, ip, asr r9
   2960c:	andeq	r9, r2, r4, lsl r6
   29610:	muleq	r2, r8, r9
   29614:	ldr	r0, [fp, #-16]
   29618:	and	r0, r0, #1024	; 0x400
   2961c:	cmp	r0, #0
   29620:	bne	2964c <__assert_fail@plt+0x181b8>
   29624:	ldr	r0, [fp, #-16]
   29628:	and	r0, r0, #32768	; 0x8000
   2962c:	cmp	r0, #0
   29630:	bne	2964c <__assert_fail@plt+0x181b8>
   29634:	ldr	r0, [fp, #-8]
   29638:	ldr	r1, [r0, #4]
   2963c:	mvn	r2, #255	; 0xff
   29640:	and	r1, r1, r2
   29644:	orr	r1, r1, #10
   29648:	str	r1, [r0, #4]
   2964c:	b	299d8 <__assert_fail@plt+0x18544>
   29650:	ldr	r0, [fp, #-16]
   29654:	and	r0, r0, #16384	; 0x4000
   29658:	cmp	r0, #0
   2965c:	bne	29688 <__assert_fail@plt+0x181f4>
   29660:	ldr	r0, [fp, #-8]
   29664:	ldr	r1, [r0, #4]
   29668:	mvn	r2, #255	; 0xff
   2966c:	and	r1, r1, r2
   29670:	orr	r1, r1, #4
   29674:	str	r1, [r0, #4]
   29678:	ldrb	r0, [fp, #-18]	; 0xffffffee
   2967c:	sub	r0, r0, #49	; 0x31
   29680:	ldr	r1, [fp, #-8]
   29684:	str	r0, [r1]
   29688:	b	299d8 <__assert_fail@plt+0x18544>
   2968c:	ldr	r0, [fp, #-16]
   29690:	and	r0, r0, #524288	; 0x80000
   29694:	cmp	r0, #0
   29698:	bne	296c0 <__assert_fail@plt+0x1822c>
   2969c:	ldr	r0, [fp, #-8]
   296a0:	ldr	r1, [r0, #4]
   296a4:	mvn	r2, #255	; 0xff
   296a8:	and	r1, r1, r2
   296ac:	orr	r1, r1, #12
   296b0:	str	r1, [r0, #4]
   296b4:	ldr	r0, [fp, #-8]
   296b8:	movw	r1, #6
   296bc:	str	r1, [r0]
   296c0:	b	299d8 <__assert_fail@plt+0x18544>
   296c4:	ldr	r0, [fp, #-16]
   296c8:	and	r0, r0, #524288	; 0x80000
   296cc:	cmp	r0, #0
   296d0:	bne	296f8 <__assert_fail@plt+0x18264>
   296d4:	ldr	r0, [fp, #-8]
   296d8:	ldr	r1, [r0, #4]
   296dc:	mvn	r2, #255	; 0xff
   296e0:	and	r1, r1, r2
   296e4:	orr	r1, r1, #12
   296e8:	str	r1, [r0, #4]
   296ec:	ldr	r0, [fp, #-8]
   296f0:	movw	r1, #9
   296f4:	str	r1, [r0]
   296f8:	b	299d8 <__assert_fail@plt+0x18544>
   296fc:	ldr	r0, [fp, #-16]
   29700:	and	r0, r0, #524288	; 0x80000
   29704:	cmp	r0, #0
   29708:	bne	29730 <__assert_fail@plt+0x1829c>
   2970c:	ldr	r0, [fp, #-8]
   29710:	ldr	r1, [r0, #4]
   29714:	mvn	r2, #255	; 0xff
   29718:	and	r1, r1, r2
   2971c:	orr	r1, r1, #12
   29720:	str	r1, [r0, #4]
   29724:	ldr	r0, [fp, #-8]
   29728:	movw	r1, #256	; 0x100
   2972c:	str	r1, [r0]
   29730:	b	299d8 <__assert_fail@plt+0x18544>
   29734:	ldr	r0, [fp, #-16]
   29738:	and	r0, r0, #524288	; 0x80000
   2973c:	cmp	r0, #0
   29740:	bne	29768 <__assert_fail@plt+0x182d4>
   29744:	ldr	r0, [fp, #-8]
   29748:	ldr	r1, [r0, #4]
   2974c:	mvn	r2, #255	; 0xff
   29750:	and	r1, r1, r2
   29754:	orr	r1, r1, #12
   29758:	str	r1, [r0, #4]
   2975c:	ldr	r0, [fp, #-8]
   29760:	movw	r1, #512	; 0x200
   29764:	str	r1, [r0]
   29768:	b	299d8 <__assert_fail@plt+0x18544>
   2976c:	ldr	r0, [fp, #-16]
   29770:	and	r0, r0, #524288	; 0x80000
   29774:	cmp	r0, #0
   29778:	bne	29794 <__assert_fail@plt+0x18300>
   2977c:	ldr	r0, [fp, #-8]
   29780:	ldr	r1, [r0, #4]
   29784:	mvn	r2, #255	; 0xff
   29788:	and	r1, r1, r2
   2978c:	orr	r1, r1, #32
   29790:	str	r1, [r0, #4]
   29794:	b	299d8 <__assert_fail@plt+0x18544>
   29798:	ldr	r0, [fp, #-16]
   2979c:	and	r0, r0, #524288	; 0x80000
   297a0:	cmp	r0, #0
   297a4:	bne	297c0 <__assert_fail@plt+0x1832c>
   297a8:	ldr	r0, [fp, #-8]
   297ac:	ldr	r1, [r0, #4]
   297b0:	mvn	r2, #255	; 0xff
   297b4:	and	r1, r1, r2
   297b8:	orr	r1, r1, #33	; 0x21
   297bc:	str	r1, [r0, #4]
   297c0:	b	299d8 <__assert_fail@plt+0x18544>
   297c4:	ldr	r0, [fp, #-16]
   297c8:	and	r0, r0, #524288	; 0x80000
   297cc:	cmp	r0, #0
   297d0:	bne	297ec <__assert_fail@plt+0x18358>
   297d4:	ldr	r0, [fp, #-8]
   297d8:	ldr	r1, [r0, #4]
   297dc:	mvn	r2, #255	; 0xff
   297e0:	and	r1, r1, r2
   297e4:	orr	r1, r1, #34	; 0x22
   297e8:	str	r1, [r0, #4]
   297ec:	b	299d8 <__assert_fail@plt+0x18544>
   297f0:	ldr	r0, [fp, #-16]
   297f4:	and	r0, r0, #524288	; 0x80000
   297f8:	cmp	r0, #0
   297fc:	bne	29818 <__assert_fail@plt+0x18384>
   29800:	ldr	r0, [fp, #-8]
   29804:	ldr	r1, [r0, #4]
   29808:	mvn	r2, #255	; 0xff
   2980c:	and	r1, r1, r2
   29810:	orr	r1, r1, #35	; 0x23
   29814:	str	r1, [r0, #4]
   29818:	b	299d8 <__assert_fail@plt+0x18544>
   2981c:	ldr	r0, [fp, #-16]
   29820:	and	r0, r0, #524288	; 0x80000
   29824:	cmp	r0, #0
   29828:	bne	29850 <__assert_fail@plt+0x183bc>
   2982c:	ldr	r0, [fp, #-8]
   29830:	ldr	r1, [r0, #4]
   29834:	mvn	r2, #255	; 0xff
   29838:	and	r1, r1, r2
   2983c:	orr	r1, r1, #12
   29840:	str	r1, [r0, #4]
   29844:	ldr	r0, [fp, #-8]
   29848:	movw	r1, #64	; 0x40
   2984c:	str	r1, [r0]
   29850:	b	299d8 <__assert_fail@plt+0x18544>
   29854:	ldr	r0, [fp, #-16]
   29858:	and	r0, r0, #524288	; 0x80000
   2985c:	cmp	r0, #0
   29860:	bne	29888 <__assert_fail@plt+0x183f4>
   29864:	ldr	r0, [fp, #-8]
   29868:	ldr	r1, [r0, #4]
   2986c:	mvn	r2, #255	; 0xff
   29870:	and	r1, r1, r2
   29874:	orr	r1, r1, #12
   29878:	str	r1, [r0, #4]
   2987c:	ldr	r0, [fp, #-8]
   29880:	movw	r1, #128	; 0x80
   29884:	str	r1, [r0]
   29888:	b	299d8 <__assert_fail@plt+0x18544>
   2988c:	ldr	r0, [fp, #-16]
   29890:	and	r0, r0, #8192	; 0x2000
   29894:	cmp	r0, #0
   29898:	bne	298b4 <__assert_fail@plt+0x18420>
   2989c:	ldr	r0, [fp, #-8]
   298a0:	ldr	r1, [r0, #4]
   298a4:	mvn	r2, #255	; 0xff
   298a8:	and	r1, r1, r2
   298ac:	orr	r1, r1, #8
   298b0:	str	r1, [r0, #4]
   298b4:	b	299d8 <__assert_fail@plt+0x18544>
   298b8:	ldr	r0, [fp, #-16]
   298bc:	and	r0, r0, #8192	; 0x2000
   298c0:	cmp	r0, #0
   298c4:	bne	298e0 <__assert_fail@plt+0x1844c>
   298c8:	ldr	r0, [fp, #-8]
   298cc:	ldr	r1, [r0, #4]
   298d0:	mvn	r2, #255	; 0xff
   298d4:	and	r1, r1, r2
   298d8:	orr	r1, r1, #9
   298dc:	str	r1, [r0, #4]
   298e0:	b	299d8 <__assert_fail@plt+0x18544>
   298e4:	ldr	r0, [fp, #-16]
   298e8:	and	r0, r0, #1024	; 0x400
   298ec:	cmp	r0, #0
   298f0:	bne	2991c <__assert_fail@plt+0x18488>
   298f4:	ldr	r0, [fp, #-16]
   298f8:	and	r0, r0, #2
   298fc:	cmp	r0, #0
   29900:	beq	2991c <__assert_fail@plt+0x18488>
   29904:	ldr	r0, [fp, #-8]
   29908:	ldr	r1, [r0, #4]
   2990c:	mvn	r2, #255	; 0xff
   29910:	and	r1, r1, r2
   29914:	orr	r1, r1, #18
   29918:	str	r1, [r0, #4]
   2991c:	b	299d8 <__assert_fail@plt+0x18544>
   29920:	ldr	r0, [fp, #-16]
   29924:	and	r0, r0, #1024	; 0x400
   29928:	cmp	r0, #0
   2992c:	bne	29958 <__assert_fail@plt+0x184c4>
   29930:	ldr	r0, [fp, #-16]
   29934:	and	r0, r0, #2
   29938:	cmp	r0, #0
   2993c:	beq	29958 <__assert_fail@plt+0x184c4>
   29940:	ldr	r0, [fp, #-8]
   29944:	ldr	r1, [r0, #4]
   29948:	mvn	r2, #255	; 0xff
   2994c:	and	r1, r1, r2
   29950:	orr	r1, r1, #19
   29954:	str	r1, [r0, #4]
   29958:	b	299d8 <__assert_fail@plt+0x18544>
   2995c:	ldr	r0, [fp, #-16]
   29960:	and	r0, r0, #512	; 0x200
   29964:	cmp	r0, #0
   29968:	beq	29994 <__assert_fail@plt+0x18500>
   2996c:	ldr	r0, [fp, #-16]
   29970:	and	r0, r0, #4096	; 0x1000
   29974:	cmp	r0, #0
   29978:	bne	29994 <__assert_fail@plt+0x18500>
   2997c:	ldr	r0, [fp, #-8]
   29980:	ldr	r1, [r0, #4]
   29984:	mvn	r2, #255	; 0xff
   29988:	and	r1, r1, r2
   2998c:	orr	r1, r1, #23
   29990:	str	r1, [r0, #4]
   29994:	b	299d8 <__assert_fail@plt+0x18544>
   29998:	ldr	r0, [fp, #-16]
   2999c:	and	r0, r0, #512	; 0x200
   299a0:	cmp	r0, #0
   299a4:	beq	299d0 <__assert_fail@plt+0x1853c>
   299a8:	ldr	r0, [fp, #-16]
   299ac:	and	r0, r0, #4096	; 0x1000
   299b0:	cmp	r0, #0
   299b4:	bne	299d0 <__assert_fail@plt+0x1853c>
   299b8:	ldr	r0, [fp, #-8]
   299bc:	ldr	r1, [r0, #4]
   299c0:	mvn	r2, #255	; 0xff
   299c4:	and	r1, r1, r2
   299c8:	orr	r1, r1, #24
   299cc:	str	r1, [r0, #4]
   299d0:	b	299d8 <__assert_fail@plt+0x18544>
   299d4:	b	299d8 <__assert_fail@plt+0x18544>
   299d8:	movw	r0, #2
   299dc:	str	r0, [fp, #-4]
   299e0:	b	2a040 <__assert_fail@plt+0x18bac>
   299e4:	ldr	r0, [fp, #-8]
   299e8:	ldr	r1, [r0, #4]
   299ec:	mvn	r2, #255	; 0xff
   299f0:	and	r1, r1, r2
   299f4:	orr	r1, r1, #1
   299f8:	str	r1, [r0, #4]
   299fc:	ldr	r0, [fp, #-12]
   29a00:	ldr	r0, [r0, #80]	; 0x50
   29a04:	cmp	r0, #1
   29a08:	ble	29a88 <__assert_fail@plt+0x185f4>
   29a0c:	ldr	r0, [fp, #-12]
   29a10:	ldr	r1, [fp, #-12]
   29a14:	ldr	r1, [r1, #40]	; 0x28
   29a18:	bl	2a210 <__assert_fail@plt+0x18d7c>
   29a1c:	str	r0, [fp, #-28]	; 0xffffffe4
   29a20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29a24:	bl	113bc <iswalnum@plt>
   29a28:	cmp	r0, #0
   29a2c:	movw	r0, #1
   29a30:	str	r0, [sp, #8]
   29a34:	bne	29a4c <__assert_fail@plt+0x185b8>
   29a38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29a3c:	cmp	r0, #95	; 0x5f
   29a40:	movw	r0, #0
   29a44:	moveq	r0, #1
   29a48:	str	r0, [sp, #8]
   29a4c:	ldr	r0, [sp, #8]
   29a50:	and	r0, r0, #1
   29a54:	cmp	r0, #0
   29a58:	movw	r0, #0
   29a5c:	movne	r0, #1
   29a60:	and	r0, r0, #1
   29a64:	ldr	r1, [fp, #-8]
   29a68:	ldr	r2, [r1, #4]
   29a6c:	and	r0, r0, #1
   29a70:	lsl	r0, r0, #22
   29a74:	mvn	r3, #4194304	; 0x400000
   29a78:	and	r2, r2, r3
   29a7c:	orr	r0, r2, r0
   29a80:	str	r0, [r1, #4]
   29a84:	b	29af8 <__assert_fail@plt+0x18664>
   29a88:	bl	11368 <__ctype_b_loc@plt>
   29a8c:	ldr	r0, [r0]
   29a90:	ldr	r1, [fp, #-8]
   29a94:	ldrb	r1, [r1]
   29a98:	mov	r2, r1
   29a9c:	add	r0, r0, r1, lsl #1
   29aa0:	ldrh	r0, [r0]
   29aa4:	and	r0, r0, #8
   29aa8:	cmp	r0, #0
   29aac:	movw	r0, #1
   29ab0:	str	r0, [sp, #4]
   29ab4:	bne	29ad0 <__assert_fail@plt+0x1863c>
   29ab8:	ldr	r0, [fp, #-8]
   29abc:	ldrb	r0, [r0]
   29ac0:	cmp	r0, #95	; 0x5f
   29ac4:	movw	r0, #0
   29ac8:	moveq	r0, #1
   29acc:	str	r0, [sp, #4]
   29ad0:	ldr	r0, [sp, #4]
   29ad4:	and	r0, r0, #1
   29ad8:	ldr	r1, [fp, #-8]
   29adc:	ldr	r2, [r1, #4]
   29ae0:	and	r0, r0, #1
   29ae4:	lsl	r0, r0, #22
   29ae8:	mvn	r3, #4194304	; 0x400000
   29aec:	and	r2, r2, r3
   29af0:	orr	r0, r2, r0
   29af4:	str	r0, [r1, #4]
   29af8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   29afc:	sub	r0, r0, #10
   29b00:	cmp	r0, #115	; 0x73
   29b04:	str	r0, [sp]
   29b08:	bhi	2a034 <__assert_fail@plt+0x18ba0>
   29b0c:	add	r0, pc, #8
   29b10:	ldr	r1, [sp]
   29b14:	ldr	r0, [r0, r1, lsl #2]
   29b18:	mov	pc, r0
   29b1c:	andeq	r9, r2, ip, ror #25
   29b20:	andeq	sl, r2, r4, lsr r0
   29b24:	andeq	sl, r2, r4, lsr r0
   29b28:	andeq	sl, r2, r4, lsr r0
   29b2c:	andeq	sl, r2, r4, lsr r0
   29b30:	andeq	sl, r2, r4, lsr r0
   29b34:	andeq	sl, r2, r4, lsr r0
   29b38:	andeq	sl, r2, r4, lsr r0
   29b3c:	andeq	sl, r2, r4, lsr r0
   29b40:	andeq	sl, r2, r4, lsr r0
   29b44:	andeq	sl, r2, r4, lsr r0
   29b48:	andeq	sl, r2, r4, lsr r0
   29b4c:	andeq	sl, r2, r4, lsr r0
   29b50:	andeq	sl, r2, r4, lsr r0
   29b54:	andeq	sl, r2, r4, lsr r0
   29b58:	andeq	sl, r2, r4, lsr r0
   29b5c:	andeq	sl, r2, r4, lsr r0
   29b60:	andeq	sl, r2, r4, lsr r0
   29b64:	andeq	sl, r2, r4, lsr r0
   29b68:	andeq	sl, r2, r4, lsr r0
   29b6c:	andeq	sl, r2, r4, lsr r0
   29b70:	andeq	sl, r2, r4, lsr r0
   29b74:	andeq	sl, r2, r4, lsr r0
   29b78:	andeq	sl, r2, r4, lsr r0
   29b7c:	andeq	sl, r2, r4, lsr r0
   29b80:	andeq	sl, r2, r4, lsr r0
   29b84:	andeq	r9, r2, r4, lsl #31
   29b88:	andeq	sl, r2, r4, lsr r0
   29b8c:	andeq	sl, r2, r4, lsr r0
   29b90:	andeq	sl, r2, r4, lsr r0
   29b94:	andeq	r9, r2, r0, ror #28
   29b98:	andeq	r9, r2, ip, lsl #29
   29b9c:	andeq	r9, r2, r4, asr sp
   29ba0:	andeq	r9, r2, r0, ror sp
   29ba4:	andeq	sl, r2, r4, lsr r0
   29ba8:	andeq	sl, r2, r4, lsr r0
   29bac:	ldrdeq	r9, [r2], -r4
   29bb0:	andeq	sl, r2, r4, lsr r0
   29bb4:	andeq	sl, r2, r4, lsr r0
   29bb8:	andeq	sl, r2, r4, lsr r0
   29bbc:	andeq	sl, r2, r4, lsr r0
   29bc0:	andeq	sl, r2, r4, lsr r0
   29bc4:	andeq	sl, r2, r4, lsr r0
   29bc8:	andeq	sl, r2, r4, lsr r0
   29bcc:	andeq	sl, r2, r4, lsr r0
   29bd0:	andeq	sl, r2, r4, lsr r0
   29bd4:	andeq	sl, r2, r4, lsr r0
   29bd8:	andeq	sl, r2, r4, lsr r0
   29bdc:	andeq	sl, r2, r4, lsr r0
   29be0:	andeq	sl, r2, r4, lsr r0
   29be4:	andeq	sl, r2, r4, lsr r0
   29be8:	andeq	sl, r2, r4, lsr r0
   29bec:	andeq	sl, r2, r4, lsr r0
   29bf0:	andeq	r9, r2, ip, lsr #27
   29bf4:	andeq	sl, r2, r4, lsr r0
   29bf8:	andeq	sl, r2, r4, lsr r0
   29bfc:	andeq	sl, r2, r4, lsr r0
   29c00:	andeq	sl, r2, r4, lsr r0
   29c04:	andeq	sl, r2, r4, lsr r0
   29c08:	andeq	sl, r2, r4, lsr r0
   29c0c:	andeq	sl, r2, r4, lsr r0
   29c10:	andeq	sl, r2, r4, lsr r0
   29c14:	andeq	sl, r2, r4, lsr r0
   29c18:	andeq	sl, r2, r4, lsr r0
   29c1c:	andeq	sl, r2, r4, lsr r0
   29c20:	andeq	sl, r2, r4, lsr r0
   29c24:	andeq	sl, r2, r4, lsr r0
   29c28:	andeq	sl, r2, r4, lsr r0
   29c2c:	andeq	sl, r2, r4, lsr r0
   29c30:	andeq	sl, r2, r4, lsr r0
   29c34:	andeq	sl, r2, r4, lsr r0
   29c38:	andeq	sl, r2, r4, lsr r0
   29c3c:	andeq	sl, r2, r4, lsr r0
   29c40:	andeq	sl, r2, r4, lsr r0
   29c44:	andeq	sl, r2, r4, lsr r0
   29c48:	andeq	sl, r2, r4, lsr r0
   29c4c:	andeq	sl, r2, r4, lsr r0
   29c50:	andeq	sl, r2, r4, lsr r0
   29c54:	andeq	sl, r2, r4, lsr r0
   29c58:	andeq	sl, r2, r4, lsr r0
   29c5c:	andeq	sl, r2, r4, lsr r0
   29c60:			; <UNDEFINED> instruction: 0x00029eb8
   29c64:	andeq	sl, r2, r4, lsr r0
   29c68:	andeq	sl, r2, r4, lsr r0
   29c6c:	strdeq	r9, [r2], -r0
   29c70:	andeq	sl, r2, r4, lsr r0
   29c74:	andeq	sl, r2, r4, lsr r0
   29c78:	andeq	sl, r2, r4, lsr r0
   29c7c:	andeq	sl, r2, r4, lsr r0
   29c80:	andeq	sl, r2, r4, lsr r0
   29c84:	andeq	sl, r2, r4, lsr r0
   29c88:	andeq	sl, r2, r4, lsr r0
   29c8c:	andeq	sl, r2, r4, lsr r0
   29c90:	andeq	sl, r2, r4, lsr r0
   29c94:	andeq	sl, r2, r4, lsr r0
   29c98:	andeq	sl, r2, r4, lsr r0
   29c9c:	andeq	sl, r2, r4, lsr r0
   29ca0:	andeq	sl, r2, r4, lsr r0
   29ca4:	andeq	sl, r2, r4, lsr r0
   29ca8:	andeq	sl, r2, r4, lsr r0
   29cac:	andeq	sl, r2, r4, lsr r0
   29cb0:	andeq	sl, r2, r4, lsr r0
   29cb4:	andeq	sl, r2, r4, lsr r0
   29cb8:	andeq	sl, r2, r4, lsr r0
   29cbc:	andeq	sl, r2, r4, lsr r0
   29cc0:	andeq	sl, r2, r4, lsr r0
   29cc4:	andeq	sl, r2, r4, lsr r0
   29cc8:	andeq	sl, r2, r4, lsr r0
   29ccc:	andeq	sl, r2, r4, lsr r0
   29cd0:	andeq	sl, r2, r4, lsr r0
   29cd4:	andeq	sl, r2, r4, lsr r0
   29cd8:	andeq	sl, r2, r4, lsr r0
   29cdc:	andeq	sl, r2, r4, lsr r0
   29ce0:	andeq	r9, r2, r8, ror #27
   29ce4:	andeq	r9, r2, r8, lsl sp
   29ce8:	andeq	r9, r2, r4, lsr #28
   29cec:	ldr	r0, [fp, #-16]
   29cf0:	and	r0, r0, #2048	; 0x800
   29cf4:	cmp	r0, #0
   29cf8:	beq	29d14 <__assert_fail@plt+0x18880>
   29cfc:	ldr	r0, [fp, #-8]
   29d00:	ldr	r1, [r0, #4]
   29d04:	mvn	r2, #255	; 0xff
   29d08:	and	r1, r1, r2
   29d0c:	orr	r1, r1, #10
   29d10:	str	r1, [r0, #4]
   29d14:	b	2a038 <__assert_fail@plt+0x18ba4>
   29d18:	ldr	r0, [fp, #-16]
   29d1c:	and	r0, r0, #1024	; 0x400
   29d20:	cmp	r0, #0
   29d24:	bne	29d50 <__assert_fail@plt+0x188bc>
   29d28:	ldr	r0, [fp, #-16]
   29d2c:	and	r0, r0, #32768	; 0x8000
   29d30:	cmp	r0, #0
   29d34:	beq	29d50 <__assert_fail@plt+0x188bc>
   29d38:	ldr	r0, [fp, #-8]
   29d3c:	ldr	r1, [r0, #4]
   29d40:	mvn	r2, #255	; 0xff
   29d44:	and	r1, r1, r2
   29d48:	orr	r1, r1, #10
   29d4c:	str	r1, [r0, #4]
   29d50:	b	2a038 <__assert_fail@plt+0x18ba4>
   29d54:	ldr	r0, [fp, #-8]
   29d58:	ldr	r1, [r0, #4]
   29d5c:	mvn	r2, #255	; 0xff
   29d60:	and	r1, r1, r2
   29d64:	orr	r1, r1, #11
   29d68:	str	r1, [r0, #4]
   29d6c:	b	2a038 <__assert_fail@plt+0x18ba4>
   29d70:	ldr	r0, [fp, #-16]
   29d74:	and	r0, r0, #1024	; 0x400
   29d78:	cmp	r0, #0
   29d7c:	bne	29da8 <__assert_fail@plt+0x18914>
   29d80:	ldr	r0, [fp, #-16]
   29d84:	and	r0, r0, #2
   29d88:	cmp	r0, #0
   29d8c:	bne	29da8 <__assert_fail@plt+0x18914>
   29d90:	ldr	r0, [fp, #-8]
   29d94:	ldr	r1, [r0, #4]
   29d98:	mvn	r2, #255	; 0xff
   29d9c:	and	r1, r1, r2
   29da0:	orr	r1, r1, #18
   29da4:	str	r1, [r0, #4]
   29da8:	b	2a038 <__assert_fail@plt+0x18ba4>
   29dac:	ldr	r0, [fp, #-16]
   29db0:	and	r0, r0, #1024	; 0x400
   29db4:	cmp	r0, #0
   29db8:	bne	29de4 <__assert_fail@plt+0x18950>
   29dbc:	ldr	r0, [fp, #-16]
   29dc0:	and	r0, r0, #2
   29dc4:	cmp	r0, #0
   29dc8:	bne	29de4 <__assert_fail@plt+0x18950>
   29dcc:	ldr	r0, [fp, #-8]
   29dd0:	ldr	r1, [r0, #4]
   29dd4:	mvn	r2, #255	; 0xff
   29dd8:	and	r1, r1, r2
   29ddc:	orr	r1, r1, #19
   29de0:	str	r1, [r0, #4]
   29de4:	b	2a038 <__assert_fail@plt+0x18ba4>
   29de8:	ldr	r0, [fp, #-16]
   29dec:	and	r0, r0, #512	; 0x200
   29df0:	cmp	r0, #0
   29df4:	beq	29e20 <__assert_fail@plt+0x1898c>
   29df8:	ldr	r0, [fp, #-16]
   29dfc:	and	r0, r0, #4096	; 0x1000
   29e00:	cmp	r0, #0
   29e04:	beq	29e20 <__assert_fail@plt+0x1898c>
   29e08:	ldr	r0, [fp, #-8]
   29e0c:	ldr	r1, [r0, #4]
   29e10:	mvn	r2, #255	; 0xff
   29e14:	and	r1, r1, r2
   29e18:	orr	r1, r1, #23
   29e1c:	str	r1, [r0, #4]
   29e20:	b	2a038 <__assert_fail@plt+0x18ba4>
   29e24:	ldr	r0, [fp, #-16]
   29e28:	and	r0, r0, #512	; 0x200
   29e2c:	cmp	r0, #0
   29e30:	beq	29e5c <__assert_fail@plt+0x189c8>
   29e34:	ldr	r0, [fp, #-16]
   29e38:	and	r0, r0, #4096	; 0x1000
   29e3c:	cmp	r0, #0
   29e40:	beq	29e5c <__assert_fail@plt+0x189c8>
   29e44:	ldr	r0, [fp, #-8]
   29e48:	ldr	r1, [r0, #4]
   29e4c:	mvn	r2, #255	; 0xff
   29e50:	and	r1, r1, r2
   29e54:	orr	r1, r1, #24
   29e58:	str	r1, [r0, #4]
   29e5c:	b	2a038 <__assert_fail@plt+0x18ba4>
   29e60:	ldr	r0, [fp, #-16]
   29e64:	and	r0, r0, #8192	; 0x2000
   29e68:	cmp	r0, #0
   29e6c:	beq	29e88 <__assert_fail@plt+0x189f4>
   29e70:	ldr	r0, [fp, #-8]
   29e74:	ldr	r1, [r0, #4]
   29e78:	mvn	r2, #255	; 0xff
   29e7c:	and	r1, r1, r2
   29e80:	orr	r1, r1, #8
   29e84:	str	r1, [r0, #4]
   29e88:	b	2a038 <__assert_fail@plt+0x18ba4>
   29e8c:	ldr	r0, [fp, #-16]
   29e90:	and	r0, r0, #8192	; 0x2000
   29e94:	cmp	r0, #0
   29e98:	beq	29eb4 <__assert_fail@plt+0x18a20>
   29e9c:	ldr	r0, [fp, #-8]
   29ea0:	ldr	r1, [r0, #4]
   29ea4:	mvn	r2, #255	; 0xff
   29ea8:	and	r1, r1, r2
   29eac:	orr	r1, r1, #9
   29eb0:	str	r1, [r0, #4]
   29eb4:	b	2a038 <__assert_fail@plt+0x18ba4>
   29eb8:	ldr	r0, [fp, #-8]
   29ebc:	ldr	r1, [r0, #4]
   29ec0:	mvn	r2, #255	; 0xff
   29ec4:	and	r1, r1, r2
   29ec8:	orr	r1, r1, #20
   29ecc:	str	r1, [r0, #4]
   29ed0:	b	2a038 <__assert_fail@plt+0x18ba4>
   29ed4:	ldr	r0, [fp, #-8]
   29ed8:	ldr	r1, [r0, #4]
   29edc:	mvn	r2, #255	; 0xff
   29ee0:	and	r1, r1, r2
   29ee4:	orr	r1, r1, #5
   29ee8:	str	r1, [r0, #4]
   29eec:	b	2a038 <__assert_fail@plt+0x18ba4>
   29ef0:	ldr	r0, [pc, #340]	; 2a04c <__assert_fail@plt+0x18bb8>
   29ef4:	ldr	r1, [fp, #-16]
   29ef8:	and	r0, r1, r0
   29efc:	cmp	r0, #0
   29f00:	bne	29f5c <__assert_fail@plt+0x18ac8>
   29f04:	ldr	r0, [fp, #-12]
   29f08:	ldr	r0, [r0, #40]	; 0x28
   29f0c:	cmp	r0, #0
   29f10:	beq	29f5c <__assert_fail@plt+0x18ac8>
   29f14:	ldr	r0, [fp, #-12]
   29f18:	ldr	r0, [r0, #4]
   29f1c:	ldr	r1, [fp, #-12]
   29f20:	ldr	r1, [r1, #40]	; 0x28
   29f24:	mvn	r2, #0
   29f28:	add	r1, r1, r2
   29f2c:	add	r0, r0, r1
   29f30:	ldrb	r0, [r0]
   29f34:	strb	r0, [fp, #-29]	; 0xffffffe3
   29f38:	ldr	r0, [fp, #-16]
   29f3c:	and	r0, r0, #2048	; 0x800
   29f40:	cmp	r0, #0
   29f44:	beq	29f54 <__assert_fail@plt+0x18ac0>
   29f48:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   29f4c:	cmp	r0, #10
   29f50:	beq	29f58 <__assert_fail@plt+0x18ac4>
   29f54:	b	2a038 <__assert_fail@plt+0x18ba4>
   29f58:	b	29f5c <__assert_fail@plt+0x18ac8>
   29f5c:	ldr	r0, [fp, #-8]
   29f60:	ldr	r1, [r0, #4]
   29f64:	mvn	r2, #255	; 0xff
   29f68:	and	r1, r1, r2
   29f6c:	orr	r1, r1, #12
   29f70:	str	r1, [r0, #4]
   29f74:	ldr	r0, [fp, #-8]
   29f78:	movw	r1, #16
   29f7c:	str	r1, [r0]
   29f80:	b	2a038 <__assert_fail@plt+0x18ba4>
   29f84:	ldr	r0, [fp, #-16]
   29f88:	and	r0, r0, #8
   29f8c:	cmp	r0, #0
   29f90:	bne	2a00c <__assert_fail@plt+0x18b78>
   29f94:	ldr	r0, [fp, #-12]
   29f98:	ldr	r0, [r0, #40]	; 0x28
   29f9c:	add	r0, r0, #1
   29fa0:	ldr	r1, [fp, #-12]
   29fa4:	ldr	r1, [r1, #48]	; 0x30
   29fa8:	cmp	r0, r1
   29fac:	beq	2a00c <__assert_fail@plt+0x18b78>
   29fb0:	ldr	r0, [fp, #-12]
   29fb4:	ldr	r1, [r0, #40]	; 0x28
   29fb8:	add	r1, r1, #1
   29fbc:	str	r1, [r0, #40]	; 0x28
   29fc0:	ldr	r1, [fp, #-12]
   29fc4:	ldr	r2, [fp, #-16]
   29fc8:	add	r0, sp, #24
   29fcc:	bl	291e4 <__assert_fail@plt+0x17d50>
   29fd0:	ldr	r1, [fp, #-12]
   29fd4:	ldr	r2, [r1, #40]	; 0x28
   29fd8:	mvn	r3, #0
   29fdc:	add	r2, r2, r3
   29fe0:	str	r2, [r1, #40]	; 0x28
   29fe4:	ldr	r1, [sp, #28]
   29fe8:	and	r1, r1, #255	; 0xff
   29fec:	cmp	r1, #10
   29ff0:	beq	2a008 <__assert_fail@plt+0x18b74>
   29ff4:	ldr	r0, [sp, #28]
   29ff8:	and	r0, r0, #255	; 0xff
   29ffc:	cmp	r0, #9
   2a000:	beq	2a008 <__assert_fail@plt+0x18b74>
   2a004:	b	2a038 <__assert_fail@plt+0x18ba4>
   2a008:	b	2a00c <__assert_fail@plt+0x18b78>
   2a00c:	ldr	r0, [fp, #-8]
   2a010:	ldr	r1, [r0, #4]
   2a014:	mvn	r2, #255	; 0xff
   2a018:	and	r1, r1, r2
   2a01c:	orr	r1, r1, #12
   2a020:	str	r1, [r0, #4]
   2a024:	ldr	r0, [fp, #-8]
   2a028:	movw	r1, #32
   2a02c:	str	r1, [r0]
   2a030:	b	2a038 <__assert_fail@plt+0x18ba4>
   2a034:	b	2a038 <__assert_fail@plt+0x18ba4>
   2a038:	movw	r0, #1
   2a03c:	str	r0, [fp, #-4]
   2a040:	ldr	r0, [fp, #-4]
   2a044:	mov	sp, fp
   2a048:	pop	{fp, pc}
   2a04c:	addeq	r0, r0, r8
   2a050:	sub	sp, sp, #20
   2a054:	str	r0, [sp, #12]
   2a058:	str	r1, [sp, #8]
   2a05c:	ldr	r0, [sp, #12]
   2a060:	ldrsb	r0, [r0, #75]	; 0x4b
   2a064:	cmp	r0, #0
   2a068:	movw	r0, #0
   2a06c:	movne	r0, #1
   2a070:	mvn	r1, #0
   2a074:	eor	r0, r0, r1
   2a078:	tst	r0, #1
   2a07c:	beq	2a0a8 <__assert_fail@plt+0x18c14>
   2a080:	ldr	r0, [sp, #12]
   2a084:	ldr	r0, [r0, #4]
   2a088:	ldr	r1, [sp, #12]
   2a08c:	ldr	r1, [r1, #40]	; 0x28
   2a090:	ldr	r2, [sp, #8]
   2a094:	add	r1, r1, r2
   2a098:	add	r0, r0, r1
   2a09c:	ldrb	r0, [r0]
   2a0a0:	strb	r0, [sp, #19]
   2a0a4:	b	2a204 <__assert_fail@plt+0x18d70>
   2a0a8:	ldr	r0, [sp, #12]
   2a0ac:	ldr	r0, [r0, #80]	; 0x50
   2a0b0:	cmp	r0, #1
   2a0b4:	ble	2a150 <__assert_fail@plt+0x18cbc>
   2a0b8:	ldr	r0, [sp, #12]
   2a0bc:	ldr	r1, [r0, #8]
   2a0c0:	ldr	r0, [r0, #40]	; 0x28
   2a0c4:	ldr	r2, [sp, #8]
   2a0c8:	add	r0, r0, r2
   2a0cc:	add	r0, r1, r0, lsl #2
   2a0d0:	ldr	r0, [r0]
   2a0d4:	cmn	r0, #1
   2a0d8:	beq	2a128 <__assert_fail@plt+0x18c94>
   2a0dc:	ldr	r0, [sp, #12]
   2a0e0:	ldr	r0, [r0, #28]
   2a0e4:	ldr	r1, [sp, #12]
   2a0e8:	ldr	r1, [r1, #40]	; 0x28
   2a0ec:	ldr	r2, [sp, #8]
   2a0f0:	add	r1, r1, r2
   2a0f4:	add	r1, r1, #1
   2a0f8:	cmp	r0, r1
   2a0fc:	beq	2a150 <__assert_fail@plt+0x18cbc>
   2a100:	ldr	r0, [sp, #12]
   2a104:	ldr	r1, [r0, #8]
   2a108:	ldr	r0, [r0, #40]	; 0x28
   2a10c:	ldr	r2, [sp, #8]
   2a110:	add	r0, r0, r2
   2a114:	add	r0, r0, #1
   2a118:	add	r0, r1, r0, lsl #2
   2a11c:	ldr	r0, [r0]
   2a120:	cmn	r0, #1
   2a124:	bne	2a150 <__assert_fail@plt+0x18cbc>
   2a128:	ldr	r0, [sp, #12]
   2a12c:	ldr	r0, [r0, #4]
   2a130:	ldr	r1, [sp, #12]
   2a134:	ldr	r1, [r1, #40]	; 0x28
   2a138:	ldr	r2, [sp, #8]
   2a13c:	add	r1, r1, r2
   2a140:	add	r0, r0, r1
   2a144:	ldrb	r0, [r0]
   2a148:	strb	r0, [sp, #19]
   2a14c:	b	2a204 <__assert_fail@plt+0x18d70>
   2a150:	ldr	r0, [sp, #12]
   2a154:	ldr	r0, [r0, #40]	; 0x28
   2a158:	ldr	r1, [sp, #8]
   2a15c:	add	r0, r0, r1
   2a160:	str	r0, [sp]
   2a164:	ldr	r0, [sp, #12]
   2a168:	ldrsb	r0, [r0, #76]	; 0x4c
   2a16c:	cmp	r0, #0
   2a170:	beq	2a18c <__assert_fail@plt+0x18cf8>
   2a174:	ldr	r0, [sp, #12]
   2a178:	ldr	r0, [r0, #12]
   2a17c:	ldr	r1, [sp]
   2a180:	add	r0, r0, r1, lsl #2
   2a184:	ldr	r0, [r0]
   2a188:	str	r0, [sp]
   2a18c:	ldr	r0, [sp, #12]
   2a190:	ldr	r0, [r0]
   2a194:	ldr	r1, [sp, #12]
   2a198:	ldr	r1, [r1, #24]
   2a19c:	ldr	r2, [sp]
   2a1a0:	add	r1, r1, r2
   2a1a4:	add	r0, r0, r1
   2a1a8:	ldrb	r0, [r0]
   2a1ac:	str	r0, [sp, #4]
   2a1b0:	ldr	r0, [sp, #12]
   2a1b4:	ldrb	r0, [r0, #76]	; 0x4c
   2a1b8:	cmp	r0, #0
   2a1bc:	beq	2a1fc <__assert_fail@plt+0x18d68>
   2a1c0:	ldr	r0, [sp, #4]
   2a1c4:	mvn	r1, #127	; 0x7f
   2a1c8:	and	r0, r0, r1
   2a1cc:	cmp	r0, #0
   2a1d0:	beq	2a1fc <__assert_fail@plt+0x18d68>
   2a1d4:	ldr	r0, [sp, #12]
   2a1d8:	ldr	r0, [r0, #4]
   2a1dc:	ldr	r1, [sp, #12]
   2a1e0:	ldr	r1, [r1, #40]	; 0x28
   2a1e4:	ldr	r2, [sp, #8]
   2a1e8:	add	r1, r1, r2
   2a1ec:	add	r0, r0, r1
   2a1f0:	ldrb	r0, [r0]
   2a1f4:	strb	r0, [sp, #19]
   2a1f8:	b	2a204 <__assert_fail@plt+0x18d70>
   2a1fc:	ldr	r0, [sp, #4]
   2a200:	strb	r0, [sp, #19]
   2a204:	ldrb	r0, [sp, #19]
   2a208:	add	sp, sp, #20
   2a20c:	bx	lr
   2a210:	sub	sp, sp, #12
   2a214:	str	r0, [sp, #4]
   2a218:	str	r1, [sp]
   2a21c:	ldr	r0, [sp, #4]
   2a220:	ldr	r0, [r0, #80]	; 0x50
   2a224:	cmp	r0, #1
   2a228:	bne	2a248 <__assert_fail@plt+0x18db4>
   2a22c:	ldr	r0, [sp, #4]
   2a230:	ldr	r0, [r0, #4]
   2a234:	ldr	r1, [sp]
   2a238:	add	r0, r0, r1
   2a23c:	ldrb	r0, [r0]
   2a240:	str	r0, [sp, #8]
   2a244:	b	2a260 <__assert_fail@plt+0x18dcc>
   2a248:	ldr	r0, [sp, #4]
   2a24c:	ldr	r0, [r0, #8]
   2a250:	ldr	r1, [sp]
   2a254:	add	r0, r0, r1, lsl #2
   2a258:	ldr	r0, [r0]
   2a25c:	str	r0, [sp, #8]
   2a260:	ldr	r0, [sp, #8]
   2a264:	add	sp, sp, #12
   2a268:	bx	lr
   2a26c:	push	{r4, r5, fp, lr}
   2a270:	add	fp, sp, #8
   2a274:	sub	sp, sp, #72	; 0x48
   2a278:	ldr	ip, [fp, #12]
   2a27c:	ldr	lr, [fp, #8]
   2a280:	str	r0, [fp, #-16]
   2a284:	str	r1, [fp, #-20]	; 0xffffffec
   2a288:	str	r2, [fp, #-24]	; 0xffffffe8
   2a28c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a290:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a294:	ldr	r0, [r0]
   2a298:	str	r0, [sp, #40]	; 0x28
   2a29c:	ldr	r0, [fp, #-16]
   2a2a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a2a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a2a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a2ac:	ldr	r4, [fp, #8]
   2a2b0:	ldr	r5, [fp, #12]
   2a2b4:	str	r4, [sp]
   2a2b8:	str	r5, [sp, #4]
   2a2bc:	str	ip, [sp, #32]
   2a2c0:	str	lr, [sp, #28]
   2a2c4:	bl	2a694 <__assert_fail@plt+0x19200>
   2a2c8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a2cc:	ldr	r0, [fp, #12]
   2a2d0:	ldr	r0, [r0]
   2a2d4:	cmp	r0, #0
   2a2d8:	movw	r0, #0
   2a2dc:	str	r0, [sp, #24]
   2a2e0:	beq	2a2fc <__assert_fail@plt+0x18e68>
   2a2e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2e8:	movw	r1, #0
   2a2ec:	cmp	r0, r1
   2a2f0:	movw	r0, #0
   2a2f4:	moveq	r0, #1
   2a2f8:	str	r0, [sp, #24]
   2a2fc:	ldr	r0, [sp, #24]
   2a300:	tst	r0, #1
   2a304:	beq	2a314 <__assert_fail@plt+0x18e80>
   2a308:	movw	r0, #0
   2a30c:	str	r0, [fp, #-12]
   2a310:	b	2a4ec <__assert_fail@plt+0x19058>
   2a314:	b	2a318 <__assert_fail@plt+0x18e84>
   2a318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a31c:	ldr	r0, [r0, #4]
   2a320:	and	r0, r0, #255	; 0xff
   2a324:	cmp	r0, #10
   2a328:	movw	r0, #0
   2a32c:	str	r0, [sp, #20]
   2a330:	beq	2a388 <__assert_fail@plt+0x18ef4>
   2a334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a338:	ldr	r0, [r0, #4]
   2a33c:	and	r0, r0, #255	; 0xff
   2a340:	cmp	r0, #2
   2a344:	movw	r0, #0
   2a348:	str	r0, [sp, #20]
   2a34c:	beq	2a388 <__assert_fail@plt+0x18ef4>
   2a350:	ldr	r0, [fp, #8]
   2a354:	cmp	r0, #0
   2a358:	movw	r0, #1
   2a35c:	str	r0, [sp, #16]
   2a360:	beq	2a380 <__assert_fail@plt+0x18eec>
   2a364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a368:	ldr	r0, [r0, #4]
   2a36c:	and	r0, r0, #255	; 0xff
   2a370:	cmp	r0, #9
   2a374:	movw	r0, #0
   2a378:	movne	r0, #1
   2a37c:	str	r0, [sp, #16]
   2a380:	ldr	r0, [sp, #16]
   2a384:	str	r0, [sp, #20]
   2a388:	ldr	r0, [sp, #20]
   2a38c:	tst	r0, #1
   2a390:	beq	2a4e4 <__assert_fail@plt+0x19050>
   2a394:	ldr	r0, [fp, #-16]
   2a398:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a39c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a3a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a3a4:	ldr	ip, [fp, #8]
   2a3a8:	ldr	lr, [fp, #12]
   2a3ac:	str	ip, [sp]
   2a3b0:	str	lr, [sp, #4]
   2a3b4:	bl	2a694 <__assert_fail@plt+0x19200>
   2a3b8:	str	r0, [fp, #-36]	; 0xffffffdc
   2a3bc:	ldr	r0, [fp, #12]
   2a3c0:	ldr	r0, [r0]
   2a3c4:	cmp	r0, #0
   2a3c8:	movw	r0, #0
   2a3cc:	str	r0, [sp, #12]
   2a3d0:	beq	2a3ec <__assert_fail@plt+0x18f58>
   2a3d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a3d8:	movw	r1, #0
   2a3dc:	cmp	r0, r1
   2a3e0:	movw	r0, #0
   2a3e4:	moveq	r0, #1
   2a3e8:	str	r0, [sp, #12]
   2a3ec:	ldr	r0, [sp, #12]
   2a3f0:	tst	r0, #1
   2a3f4:	beq	2a428 <__assert_fail@plt+0x18f94>
   2a3f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a3fc:	movw	r1, #0
   2a400:	cmp	r0, r1
   2a404:	beq	2a41c <__assert_fail@plt+0x18f88>
   2a408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a40c:	movw	r1, #42600	; 0xa668
   2a410:	movt	r1, #2
   2a414:	movw	r2, #0
   2a418:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2a41c:	movw	r0, #0
   2a420:	str	r0, [fp, #-12]
   2a424:	b	2a4ec <__assert_fail@plt+0x19058>
   2a428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a42c:	movw	r1, #0
   2a430:	cmp	r0, r1
   2a434:	beq	2a4c4 <__assert_fail@plt+0x19030>
   2a438:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a43c:	movw	r1, #0
   2a440:	cmp	r0, r1
   2a444:	beq	2a4c4 <__assert_fail@plt+0x19030>
   2a448:	ldr	r0, [sp, #40]	; 0x28
   2a44c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a450:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a454:	movw	r3, #16
   2a458:	bl	29108 <__assert_fail@plt+0x17c74>
   2a45c:	str	r0, [sp, #36]	; 0x24
   2a460:	ldr	r0, [sp, #36]	; 0x24
   2a464:	movw	r1, #0
   2a468:	cmp	r0, r1
   2a46c:	bne	2a4b8 <__assert_fail@plt+0x19024>
   2a470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a474:	movw	r1, #42600	; 0xa668
   2a478:	movt	r1, #2
   2a47c:	movw	r2, #0
   2a480:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2a484:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a488:	str	r0, [sp, #8]
   2a48c:	mov	r0, r1
   2a490:	movw	r1, #42600	; 0xa668
   2a494:	movt	r1, #2
   2a498:	movw	r2, #0
   2a49c:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2a4a0:	ldr	r1, [fp, #12]
   2a4a4:	movw	r2, #12
   2a4a8:	str	r2, [r1]
   2a4ac:	movw	r1, #0
   2a4b0:	str	r1, [fp, #-12]
   2a4b4:	b	2a4ec <__assert_fail@plt+0x19058>
   2a4b8:	ldr	r0, [sp, #36]	; 0x24
   2a4bc:	str	r0, [fp, #-32]	; 0xffffffe0
   2a4c0:	b	2a4e0 <__assert_fail@plt+0x1904c>
   2a4c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4c8:	movw	r1, #0
   2a4cc:	cmp	r0, r1
   2a4d0:	bne	2a4dc <__assert_fail@plt+0x19048>
   2a4d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a4d8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a4dc:	b	2a4e0 <__assert_fail@plt+0x1904c>
   2a4e0:	b	2a318 <__assert_fail@plt+0x18e84>
   2a4e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4e8:	str	r0, [fp, #-12]
   2a4ec:	ldr	r0, [fp, #-12]
   2a4f0:	sub	sp, fp, #8
   2a4f4:	pop	{r4, r5, fp, pc}
   2a4f8:	push	{fp, lr}
   2a4fc:	mov	fp, sp
   2a500:	sub	sp, sp, #40	; 0x28
   2a504:	str	r0, [fp, #-8]
   2a508:	str	r1, [fp, #-12]
   2a50c:	str	r2, [fp, #-16]
   2a510:	ldr	r0, [fp, #-8]
   2a514:	str	r0, [sp, #20]
   2a518:	b	2a51c <__assert_fail@plt+0x19088>
   2a51c:	ldr	r0, [sp, #20]
   2a520:	ldr	r0, [r0, #4]
   2a524:	movw	r1, #0
   2a528:	cmp	r0, r1
   2a52c:	movw	r0, #1
   2a530:	str	r0, [sp, #8]
   2a534:	bne	2a554 <__assert_fail@plt+0x190c0>
   2a538:	ldr	r0, [sp, #20]
   2a53c:	ldr	r0, [r0, #8]
   2a540:	movw	r1, #0
   2a544:	cmp	r0, r1
   2a548:	movw	r0, #0
   2a54c:	movne	r0, #1
   2a550:	str	r0, [sp, #8]
   2a554:	ldr	r0, [sp, #8]
   2a558:	tst	r0, #1
   2a55c:	beq	2a594 <__assert_fail@plt+0x19100>
   2a560:	ldr	r0, [sp, #20]
   2a564:	ldr	r0, [r0, #4]
   2a568:	movw	r1, #0
   2a56c:	cmp	r0, r1
   2a570:	beq	2a584 <__assert_fail@plt+0x190f0>
   2a574:	ldr	r0, [sp, #20]
   2a578:	ldr	r0, [r0, #4]
   2a57c:	str	r0, [sp, #20]
   2a580:	b	2a590 <__assert_fail@plt+0x190fc>
   2a584:	ldr	r0, [sp, #20]
   2a588:	ldr	r0, [r0, #8]
   2a58c:	str	r0, [sp, #20]
   2a590:	b	2a51c <__assert_fail@plt+0x19088>
   2a594:	b	2a598 <__assert_fail@plt+0x19104>
   2a598:	ldr	r0, [fp, #-12]
   2a59c:	ldr	r1, [fp, #-16]
   2a5a0:	ldr	r2, [sp, #20]
   2a5a4:	str	r0, [sp, #4]
   2a5a8:	mov	r0, r1
   2a5ac:	mov	r1, r2
   2a5b0:	ldr	r2, [sp, #4]
   2a5b4:	blx	r2
   2a5b8:	str	r0, [sp, #12]
   2a5bc:	ldr	r0, [sp, #12]
   2a5c0:	cmp	r0, #0
   2a5c4:	beq	2a5d4 <__assert_fail@plt+0x19140>
   2a5c8:	ldr	r0, [sp, #12]
   2a5cc:	str	r0, [fp, #-4]
   2a5d0:	b	2a65c <__assert_fail@plt+0x191c8>
   2a5d4:	ldr	r0, [sp, #20]
   2a5d8:	ldr	r0, [r0]
   2a5dc:	movw	r1, #0
   2a5e0:	cmp	r0, r1
   2a5e4:	bne	2a5f4 <__assert_fail@plt+0x19160>
   2a5e8:	movw	r0, #0
   2a5ec:	str	r0, [fp, #-4]
   2a5f0:	b	2a65c <__assert_fail@plt+0x191c8>
   2a5f4:	ldr	r0, [sp, #20]
   2a5f8:	str	r0, [sp, #16]
   2a5fc:	ldr	r0, [sp, #20]
   2a600:	ldr	r0, [r0]
   2a604:	str	r0, [sp, #20]
   2a608:	ldr	r0, [sp, #20]
   2a60c:	ldr	r0, [r0, #8]
   2a610:	ldr	r1, [sp, #16]
   2a614:	cmp	r0, r1
   2a618:	movw	r0, #1
   2a61c:	str	r0, [sp]
   2a620:	beq	2a640 <__assert_fail@plt+0x191ac>
   2a624:	ldr	r0, [sp, #20]
   2a628:	ldr	r0, [r0, #8]
   2a62c:	movw	r1, #0
   2a630:	cmp	r0, r1
   2a634:	movw	r0, #0
   2a638:	moveq	r0, #1
   2a63c:	str	r0, [sp]
   2a640:	ldr	r0, [sp]
   2a644:	tst	r0, #1
   2a648:	bne	2a598 <__assert_fail@plt+0x19104>
   2a64c:	ldr	r0, [sp, #20]
   2a650:	ldr	r0, [r0, #8]
   2a654:	str	r0, [sp, #20]
   2a658:	b	2a518 <__assert_fail@plt+0x19084>
   2a65c:	ldr	r0, [fp, #-4]
   2a660:	mov	sp, fp
   2a664:	pop	{fp, pc}
   2a668:	push	{fp, lr}
   2a66c:	mov	fp, sp
   2a670:	sub	sp, sp, #8
   2a674:	str	r0, [sp, #4]
   2a678:	str	r1, [sp]
   2a67c:	ldr	r0, [sp]
   2a680:	add	r0, r0, #20
   2a684:	bl	26620 <__assert_fail@plt+0x1518c>
   2a688:	movw	r0, #0
   2a68c:	mov	sp, fp
   2a690:	pop	{fp, pc}
   2a694:	push	{fp, lr}
   2a698:	mov	fp, sp
   2a69c:	sub	sp, sp, #152	; 0x98
   2a6a0:	ldr	ip, [fp, #12]
   2a6a4:	ldr	lr, [fp, #8]
   2a6a8:	str	r0, [fp, #-8]
   2a6ac:	str	r1, [fp, #-12]
   2a6b0:	str	r2, [fp, #-16]
   2a6b4:	str	r3, [fp, #-20]	; 0xffffffec
   2a6b8:	ldr	r0, [fp, #-12]
   2a6bc:	ldr	r0, [r0]
   2a6c0:	str	r0, [fp, #-24]	; 0xffffffe8
   2a6c4:	ldr	r0, [fp, #-16]
   2a6c8:	ldrb	r0, [r0, #4]
   2a6cc:	sub	r0, r0, #1
   2a6d0:	str	r0, [fp, #-48]	; 0xffffffd0
   2a6d4:	add	r0, pc, #8
   2a6d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a6dc:	ldr	r0, [r0, r1, lsl #2]
   2a6e0:	mov	pc, r0
   2a6e4:	andeq	sl, r2, r4, ror r7
   2a6e8:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   2a6ec:			; <UNDEFINED> instruction: 0x0002afb8
   2a6f0:	ldrdeq	sl, [r2], -r4
   2a6f4:	andeq	sl, r2, r4, asr #27
   2a6f8:			; <UNDEFINED> instruction: 0x0002afb8
   2a6fc:			; <UNDEFINED> instruction: 0x0002afb8
   2a700:	strdeq	sl, [r2], -r0
   2a704:	andeq	sl, r2, r8, asr #22
   2a708:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   2a70c:	andeq	sl, r2, ip, asr #21
   2a710:	andeq	sl, r2, r8, ror #23
   2a714:			; <UNDEFINED> instruction: 0x0002afb8
   2a718:			; <UNDEFINED> instruction: 0x0002afb8
   2a71c:			; <UNDEFINED> instruction: 0x0002afb8
   2a720:			; <UNDEFINED> instruction: 0x0002afb8
   2a724:			; <UNDEFINED> instruction: 0x0002afb8
   2a728:	andeq	sl, r2, ip, asr #21
   2a72c:	andeq	sl, r2, ip, asr #21
   2a730:	andeq	sl, r2, r8, ror #18
   2a734:			; <UNDEFINED> instruction: 0x0002afb8
   2a738:			; <UNDEFINED> instruction: 0x0002afb8
   2a73c:	andeq	sl, r2, r0, lsr #21
   2a740:	andeq	sl, r2, r8, lsl #23
   2a744:			; <UNDEFINED> instruction: 0x0002afb8
   2a748:			; <UNDEFINED> instruction: 0x0002afb8
   2a74c:			; <UNDEFINED> instruction: 0x0002afb8
   2a750:			; <UNDEFINED> instruction: 0x0002afb8
   2a754:			; <UNDEFINED> instruction: 0x0002afb8
   2a758:			; <UNDEFINED> instruction: 0x0002afb8
   2a75c:			; <UNDEFINED> instruction: 0x0002afb8
   2a760:	andeq	sl, r2, r4, lsr lr
   2a764:	andeq	sl, r2, r4, lsr lr
   2a768:	andeq	sl, r2, r4, ror #29
   2a76c:	andeq	sl, r2, r4, ror #29
   2a770:	andeq	sl, r2, r0, lsr #31
   2a774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a778:	ldr	r3, [fp, #-16]
   2a77c:	movw	r1, #0
   2a780:	str	r1, [fp, #-52]	; 0xffffffcc
   2a784:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2a788:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2a78c:	str	r0, [fp, #-28]	; 0xffffffe4
   2a790:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a794:	movw	r1, #0
   2a798:	cmp	r0, r1
   2a79c:	bne	2a7b8 <__assert_fail@plt+0x19324>
   2a7a0:	ldr	r0, [fp, #12]
   2a7a4:	movw	r1, #12
   2a7a8:	str	r1, [r0]
   2a7ac:	movw	r0, #0
   2a7b0:	str	r0, [fp, #-4]
   2a7b4:	b	2b160 <__assert_fail@plt+0x19ccc>
   2a7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a7bc:	ldr	r0, [r0, #92]	; 0x5c
   2a7c0:	cmp	r0, #1
   2a7c4:	ble	2a8ec <__assert_fail@plt+0x19458>
   2a7c8:	b	2a7cc <__assert_fail@plt+0x19338>
   2a7cc:	ldr	r0, [fp, #-8]
   2a7d0:	ldr	r0, [r0, #56]	; 0x38
   2a7d4:	ldr	r1, [fp, #-8]
   2a7d8:	ldr	r1, [r1, #40]	; 0x28
   2a7dc:	cmp	r0, r1
   2a7e0:	movw	r0, #0
   2a7e4:	str	r0, [fp, #-56]	; 0xffffffc8
   2a7e8:	ble	2a840 <__assert_fail@plt+0x193ac>
   2a7ec:	ldr	r0, [fp, #-8]
   2a7f0:	ldr	r0, [r0, #40]	; 0x28
   2a7f4:	ldr	r1, [fp, #-8]
   2a7f8:	ldr	r1, [r1, #28]
   2a7fc:	cmp	r0, r1
   2a800:	movw	r0, #1
   2a804:	str	r0, [fp, #-60]	; 0xffffffc4
   2a808:	beq	2a830 <__assert_fail@plt+0x1939c>
   2a80c:	ldr	r0, [fp, #-8]
   2a810:	ldr	r1, [r0, #8]
   2a814:	ldr	r0, [r0, #40]	; 0x28
   2a818:	add	r0, r1, r0, lsl #2
   2a81c:	ldr	r0, [r0]
   2a820:	cmn	r0, #1
   2a824:	movw	r0, #0
   2a828:	movne	r0, #1
   2a82c:	str	r0, [fp, #-60]	; 0xffffffc4
   2a830:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2a834:	mvn	r1, #0
   2a838:	eor	r0, r0, r1
   2a83c:	str	r0, [fp, #-56]	; 0xffffffc8
   2a840:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a844:	tst	r0, #1
   2a848:	beq	2a8e8 <__assert_fail@plt+0x19454>
   2a84c:	ldr	r0, [fp, #-16]
   2a850:	ldr	r1, [fp, #-8]
   2a854:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a858:	bl	28e74 <__assert_fail@plt+0x179e0>
   2a85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a860:	ldr	r3, [fp, #-16]
   2a864:	movw	r1, #0
   2a868:	str	r1, [fp, #-64]	; 0xffffffc0
   2a86c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2a870:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2a874:	str	r0, [fp, #-32]	; 0xffffffe0
   2a878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a87c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a880:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a884:	movw	r3, #16
   2a888:	bl	29108 <__assert_fail@plt+0x17c74>
   2a88c:	str	r0, [fp, #-28]	; 0xffffffe4
   2a890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a894:	movw	r1, #0
   2a898:	cmp	r0, r1
   2a89c:	movw	r0, #1
   2a8a0:	str	r0, [fp, #-68]	; 0xffffffbc
   2a8a4:	beq	2a8c0 <__assert_fail@plt+0x1942c>
   2a8a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a8ac:	movw	r1, #0
   2a8b0:	cmp	r0, r1
   2a8b4:	movw	r0, #0
   2a8b8:	moveq	r0, #1
   2a8bc:	str	r0, [fp, #-68]	; 0xffffffbc
   2a8c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a8c4:	tst	r0, #1
   2a8c8:	beq	2a8e4 <__assert_fail@plt+0x19450>
   2a8cc:	ldr	r0, [fp, #12]
   2a8d0:	movw	r1, #12
   2a8d4:	str	r1, [r0]
   2a8d8:	movw	r0, #0
   2a8dc:	str	r0, [fp, #-4]
   2a8e0:	b	2b160 <__assert_fail@plt+0x19ccc>
   2a8e4:	b	2a7cc <__assert_fail@plt+0x19338>
   2a8e8:	b	2a8ec <__assert_fail@plt+0x19458>
   2a8ec:	b	2afb8 <__assert_fail@plt+0x19b24>
   2a8f0:	ldr	r0, [fp, #-8]
   2a8f4:	ldr	r1, [fp, #-12]
   2a8f8:	ldr	r2, [fp, #-16]
   2a8fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a900:	ldr	ip, [fp, #8]
   2a904:	add	ip, ip, #1
   2a908:	ldr	lr, [fp, #12]
   2a90c:	str	ip, [sp]
   2a910:	str	lr, [sp, #4]
   2a914:	bl	2b2d0 <__assert_fail@plt+0x19e3c>
   2a918:	str	r0, [fp, #-28]	; 0xffffffe4
   2a91c:	ldr	r0, [fp, #12]
   2a920:	ldr	r0, [r0]
   2a924:	cmp	r0, #0
   2a928:	movw	r0, #0
   2a92c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a930:	beq	2a94c <__assert_fail@plt+0x194b8>
   2a934:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a938:	movw	r1, #0
   2a93c:	cmp	r0, r1
   2a940:	movw	r0, #0
   2a944:	moveq	r0, #1
   2a948:	str	r0, [fp, #-72]	; 0xffffffb8
   2a94c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2a950:	tst	r0, #1
   2a954:	beq	2a964 <__assert_fail@plt+0x194d0>
   2a958:	movw	r0, #0
   2a95c:	str	r0, [fp, #-4]
   2a960:	b	2b160 <__assert_fail@plt+0x19ccc>
   2a964:	b	2afb8 <__assert_fail@plt+0x19b24>
   2a968:	ldr	r0, [fp, #-8]
   2a96c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a970:	ldr	r2, [fp, #-16]
   2a974:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a978:	ldr	ip, [fp, #12]
   2a97c:	str	ip, [sp]
   2a980:	bl	2b490 <__assert_fail@plt+0x19ffc>
   2a984:	str	r0, [fp, #-28]	; 0xffffffe4
   2a988:	ldr	r0, [fp, #12]
   2a98c:	ldr	r0, [r0]
   2a990:	cmp	r0, #0
   2a994:	movw	r0, #0
   2a998:	str	r0, [sp, #76]	; 0x4c
   2a99c:	beq	2a9b8 <__assert_fail@plt+0x19524>
   2a9a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a9a4:	movw	r1, #0
   2a9a8:	cmp	r0, r1
   2a9ac:	movw	r0, #0
   2a9b0:	moveq	r0, #1
   2a9b4:	str	r0, [sp, #76]	; 0x4c
   2a9b8:	ldr	r0, [sp, #76]	; 0x4c
   2a9bc:	tst	r0, #1
   2a9c0:	beq	2a9d0 <__assert_fail@plt+0x1953c>
   2a9c4:	movw	r0, #0
   2a9c8:	str	r0, [fp, #-4]
   2a9cc:	b	2b160 <__assert_fail@plt+0x19ccc>
   2a9d0:	b	2afb8 <__assert_fail@plt+0x19b24>
   2a9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a9d8:	ldr	r0, [r0, #84]	; 0x54
   2a9dc:	ldr	r1, [fp, #-16]
   2a9e0:	ldr	r1, [r1]
   2a9e4:	movw	r2, #1
   2a9e8:	lsl	r1, r2, r1
   2a9ec:	and	r0, r0, r1
   2a9f0:	cmp	r0, #0
   2a9f4:	bne	2aa10 <__assert_fail@plt+0x1957c>
   2a9f8:	ldr	r0, [fp, #12]
   2a9fc:	movw	r1, #6
   2aa00:	str	r1, [r0]
   2aa04:	movw	r0, #0
   2aa08:	str	r0, [fp, #-4]
   2aa0c:	b	2b160 <__assert_fail@plt+0x19ccc>
   2aa10:	ldr	r0, [fp, #-16]
   2aa14:	ldr	r0, [r0]
   2aa18:	movw	r1, #1
   2aa1c:	lsl	r0, r1, r0
   2aa20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2aa24:	ldr	r2, [r1, #80]	; 0x50
   2aa28:	orr	r0, r2, r0
   2aa2c:	str	r0, [r1, #80]	; 0x50
   2aa30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aa34:	ldr	r3, [fp, #-16]
   2aa38:	movw	r1, #0
   2aa3c:	str	r1, [sp, #72]	; 0x48
   2aa40:	ldr	r2, [sp, #72]	; 0x48
   2aa44:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2aa48:	str	r0, [fp, #-28]	; 0xffffffe4
   2aa4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aa50:	movw	r1, #0
   2aa54:	cmp	r0, r1
   2aa58:	bne	2aa74 <__assert_fail@plt+0x195e0>
   2aa5c:	ldr	r0, [fp, #12]
   2aa60:	movw	r1, #12
   2aa64:	str	r1, [r0]
   2aa68:	movw	r0, #0
   2aa6c:	str	r0, [fp, #-4]
   2aa70:	b	2b160 <__assert_fail@plt+0x19ccc>
   2aa74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aa78:	ldr	r1, [r0, #76]	; 0x4c
   2aa7c:	add	r1, r1, #1
   2aa80:	str	r1, [r0, #76]	; 0x4c
   2aa84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aa88:	ldrb	r1, [r0, #88]	; 0x58
   2aa8c:	bic	r1, r1, #2
   2aa90:	movw	r2, #2
   2aa94:	orr	r1, r1, r2
   2aa98:	strb	r1, [r0, #88]	; 0x58
   2aa9c:	b	2afb8 <__assert_fail@plt+0x19b24>
   2aaa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2aaa4:	and	r0, r0, #16777216	; 0x1000000
   2aaa8:	cmp	r0, #0
   2aaac:	beq	2aac8 <__assert_fail@plt+0x19634>
   2aab0:	ldr	r0, [fp, #12]
   2aab4:	movw	r1, #13
   2aab8:	str	r1, [r0]
   2aabc:	movw	r0, #0
   2aac0:	str	r0, [fp, #-4]
   2aac4:	b	2b160 <__assert_fail@plt+0x19ccc>
   2aac8:	b	2aacc <__assert_fail@plt+0x19638>
   2aacc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2aad0:	and	r0, r0, #32
   2aad4:	cmp	r0, #0
   2aad8:	beq	2aaf4 <__assert_fail@plt+0x19660>
   2aadc:	ldr	r0, [fp, #12]
   2aae0:	movw	r1, #13
   2aae4:	str	r1, [r0]
   2aae8:	movw	r0, #0
   2aaec:	str	r0, [fp, #-4]
   2aaf0:	b	2b160 <__assert_fail@plt+0x19ccc>
   2aaf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2aaf8:	and	r0, r0, #16
   2aafc:	cmp	r0, #0
   2ab00:	beq	2ab40 <__assert_fail@plt+0x196ac>
   2ab04:	ldr	r0, [fp, #-16]
   2ab08:	ldr	r1, [fp, #-8]
   2ab0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ab10:	bl	28e74 <__assert_fail@plt+0x179e0>
   2ab14:	ldr	r0, [fp, #-8]
   2ab18:	ldr	r1, [fp, #-12]
   2ab1c:	ldr	r2, [fp, #-16]
   2ab20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab24:	ldr	ip, [fp, #8]
   2ab28:	ldr	lr, [fp, #12]
   2ab2c:	str	ip, [sp]
   2ab30:	str	lr, [sp, #4]
   2ab34:	bl	2a694 <__assert_fail@plt+0x19200>
   2ab38:	str	r0, [fp, #-4]
   2ab3c:	b	2b160 <__assert_fail@plt+0x19ccc>
   2ab40:	b	2ab44 <__assert_fail@plt+0x196b0>
   2ab44:	b	2ab48 <__assert_fail@plt+0x196b4>
   2ab48:	ldr	r0, [fp, #-16]
   2ab4c:	ldr	r0, [r0, #4]
   2ab50:	and	r0, r0, #255	; 0xff
   2ab54:	cmp	r0, #9
   2ab58:	bne	2ab84 <__assert_fail@plt+0x196f0>
   2ab5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ab60:	and	r0, r0, #131072	; 0x20000
   2ab64:	cmp	r0, #0
   2ab68:	bne	2ab84 <__assert_fail@plt+0x196f0>
   2ab6c:	ldr	r0, [fp, #12]
   2ab70:	movw	r1, #16
   2ab74:	str	r1, [r0]
   2ab78:	movw	r0, #0
   2ab7c:	str	r0, [fp, #-4]
   2ab80:	b	2b160 <__assert_fail@plt+0x19ccc>
   2ab84:	b	2ab88 <__assert_fail@plt+0x196f4>
   2ab88:	ldr	r0, [fp, #-16]
   2ab8c:	ldr	r1, [r0, #4]
   2ab90:	mvn	r2, #255	; 0xff
   2ab94:	and	r1, r1, r2
   2ab98:	orr	r1, r1, #1
   2ab9c:	str	r1, [r0, #4]
   2aba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aba4:	ldr	r3, [fp, #-16]
   2aba8:	movw	r1, #0
   2abac:	str	r1, [sp, #68]	; 0x44
   2abb0:	ldr	r2, [sp, #68]	; 0x44
   2abb4:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2abb8:	str	r0, [fp, #-28]	; 0xffffffe4
   2abbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2abc0:	movw	r1, #0
   2abc4:	cmp	r0, r1
   2abc8:	bne	2abe4 <__assert_fail@plt+0x19750>
   2abcc:	ldr	r0, [fp, #12]
   2abd0:	movw	r1, #12
   2abd4:	str	r1, [r0]
   2abd8:	movw	r0, #0
   2abdc:	str	r0, [fp, #-4]
   2abe0:	b	2b160 <__assert_fail@plt+0x19ccc>
   2abe4:	b	2afb8 <__assert_fail@plt+0x19b24>
   2abe8:	ldr	r0, [fp, #-16]
   2abec:	ldr	r0, [r0]
   2abf0:	movw	r1, #783	; 0x30f
   2abf4:	and	r0, r0, r1
   2abf8:	cmp	r0, #0
   2abfc:	beq	2ac20 <__assert_fail@plt+0x1978c>
   2ac00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ac04:	ldrb	r0, [r0, #88]	; 0x58
   2ac08:	ubfx	r0, r0, #4, #1
   2ac0c:	and	r0, r0, #255	; 0xff
   2ac10:	cmp	r0, #0
   2ac14:	bne	2ac20 <__assert_fail@plt+0x1978c>
   2ac18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ac1c:	bl	2bdb8 <__assert_fail@plt+0x1a924>
   2ac20:	ldr	r0, [fp, #-16]
   2ac24:	ldr	r0, [r0]
   2ac28:	cmp	r0, #256	; 0x100
   2ac2c:	beq	2ac40 <__assert_fail@plt+0x197ac>
   2ac30:	ldr	r0, [fp, #-16]
   2ac34:	ldr	r0, [r0]
   2ac38:	cmp	r0, #512	; 0x200
   2ac3c:	bne	2ad60 <__assert_fail@plt+0x198cc>
   2ac40:	ldr	r0, [fp, #-16]
   2ac44:	ldr	r0, [r0]
   2ac48:	cmp	r0, #256	; 0x100
   2ac4c:	bne	2ac88 <__assert_fail@plt+0x197f4>
   2ac50:	ldr	r0, [fp, #-16]
   2ac54:	movw	r1, #6
   2ac58:	str	r1, [r0]
   2ac5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ac60:	ldr	r3, [fp, #-16]
   2ac64:	movw	r1, #0
   2ac68:	str	r1, [sp, #64]	; 0x40
   2ac6c:	ldr	r2, [sp, #64]	; 0x40
   2ac70:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2ac74:	str	r0, [fp, #-36]	; 0xffffffdc
   2ac78:	ldr	r0, [fp, #-16]
   2ac7c:	movw	r1, #9
   2ac80:	str	r1, [r0]
   2ac84:	b	2acbc <__assert_fail@plt+0x19828>
   2ac88:	ldr	r0, [fp, #-16]
   2ac8c:	movw	r1, #5
   2ac90:	str	r1, [r0]
   2ac94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ac98:	ldr	r3, [fp, #-16]
   2ac9c:	movw	r1, #0
   2aca0:	str	r1, [sp, #60]	; 0x3c
   2aca4:	ldr	r2, [sp, #60]	; 0x3c
   2aca8:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2acac:	str	r0, [fp, #-36]	; 0xffffffdc
   2acb0:	ldr	r0, [fp, #-16]
   2acb4:	movw	r1, #10
   2acb8:	str	r1, [r0]
   2acbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2acc0:	ldr	r3, [fp, #-16]
   2acc4:	movw	r1, #0
   2acc8:	str	r1, [sp, #56]	; 0x38
   2accc:	ldr	r2, [sp, #56]	; 0x38
   2acd0:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2acd4:	str	r0, [fp, #-40]	; 0xffffffd8
   2acd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2acdc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ace0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ace4:	movw	r3, #10
   2ace8:	bl	29108 <__assert_fail@plt+0x17c74>
   2acec:	str	r0, [fp, #-28]	; 0xffffffe4
   2acf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2acf4:	movw	r1, #0
   2acf8:	cmp	r0, r1
   2acfc:	movw	r0, #1
   2ad00:	str	r0, [sp, #52]	; 0x34
   2ad04:	beq	2ad38 <__assert_fail@plt+0x198a4>
   2ad08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ad0c:	movw	r1, #0
   2ad10:	cmp	r0, r1
   2ad14:	movw	r0, #1
   2ad18:	str	r0, [sp, #52]	; 0x34
   2ad1c:	beq	2ad38 <__assert_fail@plt+0x198a4>
   2ad20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ad24:	movw	r1, #0
   2ad28:	cmp	r0, r1
   2ad2c:	movw	r0, #0
   2ad30:	moveq	r0, #1
   2ad34:	str	r0, [sp, #52]	; 0x34
   2ad38:	ldr	r0, [sp, #52]	; 0x34
   2ad3c:	tst	r0, #1
   2ad40:	beq	2ad5c <__assert_fail@plt+0x198c8>
   2ad44:	ldr	r0, [fp, #12]
   2ad48:	movw	r1, #12
   2ad4c:	str	r1, [r0]
   2ad50:	movw	r0, #0
   2ad54:	str	r0, [fp, #-4]
   2ad58:	b	2b160 <__assert_fail@plt+0x19ccc>
   2ad5c:	b	2ada8 <__assert_fail@plt+0x19914>
   2ad60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ad64:	ldr	r3, [fp, #-16]
   2ad68:	movw	r1, #0
   2ad6c:	str	r1, [sp, #48]	; 0x30
   2ad70:	ldr	r2, [sp, #48]	; 0x30
   2ad74:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2ad78:	str	r0, [fp, #-28]	; 0xffffffe4
   2ad7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ad80:	movw	r1, #0
   2ad84:	cmp	r0, r1
   2ad88:	bne	2ada4 <__assert_fail@plt+0x19910>
   2ad8c:	ldr	r0, [fp, #12]
   2ad90:	movw	r1, #12
   2ad94:	str	r1, [r0]
   2ad98:	movw	r0, #0
   2ad9c:	str	r0, [fp, #-4]
   2ada0:	b	2b160 <__assert_fail@plt+0x19ccc>
   2ada4:	b	2ada8 <__assert_fail@plt+0x19914>
   2ada8:	ldr	r0, [fp, #-16]
   2adac:	ldr	r1, [fp, #-8]
   2adb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2adb4:	bl	28e74 <__assert_fail@plt+0x179e0>
   2adb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2adbc:	str	r0, [fp, #-4]
   2adc0:	b	2b160 <__assert_fail@plt+0x19ccc>
   2adc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2adc8:	ldr	r3, [fp, #-16]
   2adcc:	movw	r1, #0
   2add0:	str	r1, [sp, #44]	; 0x2c
   2add4:	ldr	r2, [sp, #44]	; 0x2c
   2add8:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2addc:	str	r0, [fp, #-28]	; 0xffffffe4
   2ade0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ade4:	movw	r1, #0
   2ade8:	cmp	r0, r1
   2adec:	bne	2ae08 <__assert_fail@plt+0x19974>
   2adf0:	ldr	r0, [fp, #12]
   2adf4:	movw	r1, #12
   2adf8:	str	r1, [r0]
   2adfc:	movw	r0, #0
   2ae00:	str	r0, [fp, #-4]
   2ae04:	b	2b160 <__assert_fail@plt+0x19ccc>
   2ae08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ae0c:	ldr	r0, [r0, #92]	; 0x5c
   2ae10:	cmp	r0, #1
   2ae14:	ble	2ae30 <__assert_fail@plt+0x1999c>
   2ae18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ae1c:	ldrb	r1, [r0, #88]	; 0x58
   2ae20:	bic	r1, r1, #2
   2ae24:	movw	r2, #2
   2ae28:	orr	r1, r1, r2
   2ae2c:	strb	r1, [r0, #88]	; 0x58
   2ae30:	b	2afb8 <__assert_fail@plt+0x19b24>
   2ae34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ae38:	ldr	r1, [fp, #-8]
   2ae3c:	ldr	r1, [r1, #64]	; 0x40
   2ae40:	ldr	r2, [fp, #-16]
   2ae44:	ldr	r2, [r2, #4]
   2ae48:	and	r2, r2, #255	; 0xff
   2ae4c:	cmp	r2, #33	; 0x21
   2ae50:	movw	r2, #0
   2ae54:	moveq	r2, #1
   2ae58:	ldr	r3, [fp, #12]
   2ae5c:	movw	ip, #22336	; 0x5740
   2ae60:	movt	ip, #4
   2ae64:	str	r2, [sp, #40]	; 0x28
   2ae68:	mov	r2, ip
   2ae6c:	movw	ip, #15889	; 0x3e11
   2ae70:	movt	ip, #4
   2ae74:	str	r3, [sp, #36]	; 0x24
   2ae78:	mov	r3, ip
   2ae7c:	ldr	ip, [sp, #40]	; 0x28
   2ae80:	and	lr, ip, #1
   2ae84:	str	lr, [sp]
   2ae88:	ldr	lr, [sp, #36]	; 0x24
   2ae8c:	str	lr, [sp, #4]
   2ae90:	bl	2bf68 <__assert_fail@plt+0x1aad4>
   2ae94:	str	r0, [fp, #-28]	; 0xffffffe4
   2ae98:	ldr	r0, [fp, #12]
   2ae9c:	ldr	r0, [r0]
   2aea0:	cmp	r0, #0
   2aea4:	movw	r0, #0
   2aea8:	str	r0, [sp, #32]
   2aeac:	beq	2aec8 <__assert_fail@plt+0x19a34>
   2aeb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aeb4:	movw	r1, #0
   2aeb8:	cmp	r0, r1
   2aebc:	movw	r0, #0
   2aec0:	moveq	r0, #1
   2aec4:	str	r0, [sp, #32]
   2aec8:	ldr	r0, [sp, #32]
   2aecc:	tst	r0, #1
   2aed0:	beq	2aee0 <__assert_fail@plt+0x19a4c>
   2aed4:	movw	r0, #0
   2aed8:	str	r0, [fp, #-4]
   2aedc:	b	2b160 <__assert_fail@plt+0x19ccc>
   2aee0:	b	2afb8 <__assert_fail@plt+0x19b24>
   2aee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2aee8:	ldr	r1, [fp, #-8]
   2aeec:	ldr	r1, [r1, #64]	; 0x40
   2aef0:	ldr	r2, [fp, #-16]
   2aef4:	ldr	r2, [r2, #4]
   2aef8:	and	r2, r2, #255	; 0xff
   2aefc:	cmp	r2, #35	; 0x23
   2af00:	movw	r2, #0
   2af04:	moveq	r2, #1
   2af08:	ldr	r3, [fp, #12]
   2af0c:	movw	ip, #22342	; 0x5746
   2af10:	movt	ip, #4
   2af14:	str	r2, [sp, #28]
   2af18:	mov	r2, ip
   2af1c:	movw	ip, #16039	; 0x3ea7
   2af20:	movt	ip, #4
   2af24:	str	r3, [sp, #24]
   2af28:	mov	r3, ip
   2af2c:	ldr	ip, [sp, #28]
   2af30:	and	lr, ip, #1
   2af34:	str	lr, [sp]
   2af38:	ldr	lr, [sp, #24]
   2af3c:	str	lr, [sp, #4]
   2af40:	bl	2bf68 <__assert_fail@plt+0x1aad4>
   2af44:	str	r0, [fp, #-28]	; 0xffffffe4
   2af48:	ldr	r0, [fp, #12]
   2af4c:	ldr	r0, [r0]
   2af50:	cmp	r0, #0
   2af54:	movw	r0, #0
   2af58:	str	r0, [sp, #20]
   2af5c:	beq	2af78 <__assert_fail@plt+0x19ae4>
   2af60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2af64:	movw	r1, #0
   2af68:	cmp	r0, r1
   2af6c:	movw	r0, #0
   2af70:	moveq	r0, #1
   2af74:	str	r0, [sp, #20]
   2af78:	ldr	r0, [sp, #20]
   2af7c:	tst	r0, #1
   2af80:	beq	2af90 <__assert_fail@plt+0x19afc>
   2af84:	movw	r0, #0
   2af88:	str	r0, [fp, #-4]
   2af8c:	b	2b160 <__assert_fail@plt+0x19ccc>
   2af90:	b	2afb8 <__assert_fail@plt+0x19b24>
   2af94:	movw	r0, #0
   2af98:	str	r0, [fp, #-4]
   2af9c:	b	2b160 <__assert_fail@plt+0x19ccc>
   2afa0:	ldr	r0, [fp, #12]
   2afa4:	movw	r1, #5
   2afa8:	str	r1, [r0]
   2afac:	movw	r0, #0
   2afb0:	str	r0, [fp, #-4]
   2afb4:	b	2b160 <__assert_fail@plt+0x19ccc>
   2afb8:	ldr	r0, [fp, #-16]
   2afbc:	ldr	r1, [fp, #-8]
   2afc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2afc4:	bl	28e74 <__assert_fail@plt+0x179e0>
   2afc8:	ldr	r0, [fp, #-16]
   2afcc:	ldr	r0, [r0, #4]
   2afd0:	and	r0, r0, #255	; 0xff
   2afd4:	cmp	r0, #11
   2afd8:	movw	r0, #1
   2afdc:	str	r0, [sp, #16]
   2afe0:	beq	2b038 <__assert_fail@plt+0x19ba4>
   2afe4:	ldr	r0, [fp, #-16]
   2afe8:	ldr	r0, [r0, #4]
   2afec:	and	r0, r0, #255	; 0xff
   2aff0:	cmp	r0, #18
   2aff4:	movw	r0, #1
   2aff8:	str	r0, [sp, #16]
   2affc:	beq	2b038 <__assert_fail@plt+0x19ba4>
   2b000:	ldr	r0, [fp, #-16]
   2b004:	ldr	r0, [r0, #4]
   2b008:	and	r0, r0, #255	; 0xff
   2b00c:	cmp	r0, #19
   2b010:	movw	r0, #1
   2b014:	str	r0, [sp, #16]
   2b018:	beq	2b038 <__assert_fail@plt+0x19ba4>
   2b01c:	ldr	r0, [fp, #-16]
   2b020:	ldr	r0, [r0, #4]
   2b024:	and	r0, r0, #255	; 0xff
   2b028:	cmp	r0, #23
   2b02c:	movw	r0, #0
   2b030:	moveq	r0, #1
   2b034:	str	r0, [sp, #16]
   2b038:	ldr	r0, [sp, #16]
   2b03c:	tst	r0, #1
   2b040:	beq	2b158 <__assert_fail@plt+0x19cc4>
   2b044:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b048:	ldr	r1, [fp, #-8]
   2b04c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b050:	ldr	r3, [fp, #-16]
   2b054:	ldr	ip, [fp, #-20]	; 0xffffffec
   2b058:	ldr	lr, [fp, #12]
   2b05c:	str	ip, [sp]
   2b060:	str	lr, [sp, #4]
   2b064:	bl	2c29c <__assert_fail@plt+0x1ae08>
   2b068:	str	r0, [fp, #-44]	; 0xffffffd4
   2b06c:	ldr	r0, [fp, #12]
   2b070:	ldr	r0, [r0]
   2b074:	cmp	r0, #0
   2b078:	movw	r0, #0
   2b07c:	str	r0, [sp, #12]
   2b080:	beq	2b09c <__assert_fail@plt+0x19c08>
   2b084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b088:	movw	r1, #0
   2b08c:	cmp	r0, r1
   2b090:	movw	r0, #0
   2b094:	moveq	r0, #1
   2b098:	str	r0, [sp, #12]
   2b09c:	ldr	r0, [sp, #12]
   2b0a0:	tst	r0, #1
   2b0a4:	beq	2b0d8 <__assert_fail@plt+0x19c44>
   2b0a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b0ac:	movw	r1, #0
   2b0b0:	cmp	r0, r1
   2b0b4:	beq	2b0cc <__assert_fail@plt+0x19c38>
   2b0b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b0bc:	movw	r1, #42600	; 0xa668
   2b0c0:	movt	r1, #2
   2b0c4:	movw	r2, #0
   2b0c8:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2b0cc:	movw	r0, #0
   2b0d0:	str	r0, [fp, #-4]
   2b0d4:	b	2b160 <__assert_fail@plt+0x19ccc>
   2b0d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b0dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2b0e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b0e4:	and	r0, r0, #16777216	; 0x1000000
   2b0e8:	cmp	r0, #0
   2b0ec:	beq	2b154 <__assert_fail@plt+0x19cc0>
   2b0f0:	ldr	r0, [fp, #-16]
   2b0f4:	ldr	r0, [r0, #4]
   2b0f8:	and	r0, r0, #255	; 0xff
   2b0fc:	cmp	r0, #11
   2b100:	beq	2b118 <__assert_fail@plt+0x19c84>
   2b104:	ldr	r0, [fp, #-16]
   2b108:	ldr	r0, [r0, #4]
   2b10c:	and	r0, r0, #255	; 0xff
   2b110:	cmp	r0, #23
   2b114:	bne	2b154 <__assert_fail@plt+0x19cc0>
   2b118:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b11c:	movw	r1, #0
   2b120:	cmp	r0, r1
   2b124:	beq	2b13c <__assert_fail@plt+0x19ca8>
   2b128:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b12c:	movw	r1, #42600	; 0xa668
   2b130:	movt	r1, #2
   2b134:	movw	r2, #0
   2b138:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2b13c:	ldr	r0, [fp, #12]
   2b140:	movw	r1, #13
   2b144:	str	r1, [r0]
   2b148:	movw	r0, #0
   2b14c:	str	r0, [fp, #-4]
   2b150:	b	2b160 <__assert_fail@plt+0x19ccc>
   2b154:	b	2afc8 <__assert_fail@plt+0x19b34>
   2b158:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b15c:	str	r0, [fp, #-4]
   2b160:	ldr	r0, [fp, #-4]
   2b164:	mov	sp, fp
   2b168:	pop	{fp, pc}
   2b16c:	push	{fp, lr}
   2b170:	mov	fp, sp
   2b174:	sub	sp, sp, #32
   2b178:	str	r0, [fp, #-8]
   2b17c:	str	r1, [fp, #-12]
   2b180:	str	r2, [sp, #16]
   2b184:	str	r3, [sp, #12]
   2b188:	ldr	r0, [fp, #-8]
   2b18c:	ldr	r0, [r0, #64]	; 0x40
   2b190:	cmp	r0, #31
   2b194:	bne	2b1e8 <__assert_fail@plt+0x19d54>
   2b198:	movw	r0, #996	; 0x3e4
   2b19c:	bl	3f908 <__assert_fail@plt+0x2e474>
   2b1a0:	str	r0, [sp, #4]
   2b1a4:	ldr	r0, [sp, #4]
   2b1a8:	movw	r1, #0
   2b1ac:	cmp	r0, r1
   2b1b0:	bne	2b1c0 <__assert_fail@plt+0x19d2c>
   2b1b4:	movw	r0, #0
   2b1b8:	str	r0, [fp, #-4]
   2b1bc:	b	2b2c4 <__assert_fail@plt+0x19e30>
   2b1c0:	ldr	r0, [fp, #-8]
   2b1c4:	ldr	r0, [r0, #56]	; 0x38
   2b1c8:	ldr	r1, [sp, #4]
   2b1cc:	str	r0, [r1]
   2b1d0:	ldr	r0, [sp, #4]
   2b1d4:	ldr	r1, [fp, #-8]
   2b1d8:	str	r0, [r1, #56]	; 0x38
   2b1dc:	ldr	r0, [fp, #-8]
   2b1e0:	movw	r1, #0
   2b1e4:	str	r1, [r0, #64]	; 0x40
   2b1e8:	ldr	r0, [fp, #-8]
   2b1ec:	ldr	r1, [r0, #56]	; 0x38
   2b1f0:	ldr	r2, [r0, #64]	; 0x40
   2b1f4:	add	r1, r1, #4
   2b1f8:	add	r3, r2, #1
   2b1fc:	str	r3, [r0, #64]	; 0x40
   2b200:	add	r0, r1, r2, lsl #5
   2b204:	str	r0, [sp, #8]
   2b208:	ldr	r0, [sp, #8]
   2b20c:	movw	r1, #0
   2b210:	str	r1, [r0]
   2b214:	ldr	r0, [fp, #-12]
   2b218:	ldr	r2, [sp, #8]
   2b21c:	str	r0, [r2, #4]
   2b220:	ldr	r0, [sp, #16]
   2b224:	ldr	r2, [sp, #8]
   2b228:	str	r0, [r2, #8]
   2b22c:	ldr	r0, [sp, #8]
   2b230:	ldr	r2, [sp, #12]
   2b234:	ldr	r3, [r2]
   2b238:	str	r3, [r0, #20]
   2b23c:	ldr	r2, [r2, #4]
   2b240:	str	r2, [r0, #24]
   2b244:	ldr	r0, [sp, #8]
   2b248:	ldr	r2, [r0, #24]
   2b24c:	mvn	r3, #262144	; 0x40000
   2b250:	and	r2, r2, r3
   2b254:	str	r2, [r0, #24]
   2b258:	ldr	r0, [sp, #8]
   2b25c:	ldr	r2, [r0, #24]
   2b260:	mvn	r3, #524288	; 0x80000
   2b264:	and	r2, r2, r3
   2b268:	str	r2, [r0, #24]
   2b26c:	ldr	r0, [sp, #8]
   2b270:	str	r1, [r0, #12]
   2b274:	ldr	r0, [sp, #8]
   2b278:	str	r1, [r0, #16]
   2b27c:	ldr	r0, [sp, #8]
   2b280:	mvn	r2, #0
   2b284:	str	r2, [r0, #28]
   2b288:	ldr	r0, [fp, #-12]
   2b28c:	cmp	r0, r1
   2b290:	beq	2b2a0 <__assert_fail@plt+0x19e0c>
   2b294:	ldr	r0, [sp, #8]
   2b298:	ldr	r1, [fp, #-12]
   2b29c:	str	r0, [r1]
   2b2a0:	ldr	r0, [sp, #16]
   2b2a4:	movw	r1, #0
   2b2a8:	cmp	r0, r1
   2b2ac:	beq	2b2bc <__assert_fail@plt+0x19e28>
   2b2b0:	ldr	r0, [sp, #8]
   2b2b4:	ldr	r1, [sp, #16]
   2b2b8:	str	r0, [r1]
   2b2bc:	ldr	r0, [sp, #8]
   2b2c0:	str	r0, [fp, #-4]
   2b2c4:	ldr	r0, [fp, #-4]
   2b2c8:	mov	sp, fp
   2b2cc:	pop	{fp, pc}
   2b2d0:	push	{fp, lr}
   2b2d4:	mov	fp, sp
   2b2d8:	sub	sp, sp, #56	; 0x38
   2b2dc:	ldr	ip, [fp, #12]
   2b2e0:	ldr	lr, [fp, #8]
   2b2e4:	str	r0, [fp, #-8]
   2b2e8:	str	r1, [fp, #-12]
   2b2ec:	str	r2, [fp, #-16]
   2b2f0:	str	r3, [fp, #-20]	; 0xffffffec
   2b2f4:	ldr	r0, [fp, #-12]
   2b2f8:	ldr	r0, [r0]
   2b2fc:	str	r0, [fp, #-24]	; 0xffffffe8
   2b300:	ldr	r0, [fp, #-12]
   2b304:	ldr	r1, [r0, #24]
   2b308:	add	r2, r1, #1
   2b30c:	str	r2, [r0, #24]
   2b310:	str	r1, [sp, #24]
   2b314:	ldr	r0, [fp, #-16]
   2b318:	ldr	r1, [fp, #-8]
   2b31c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b320:	orr	r2, r2, #8388608	; 0x800000
   2b324:	str	ip, [sp, #20]
   2b328:	str	lr, [sp, #16]
   2b32c:	bl	28e74 <__assert_fail@plt+0x179e0>
   2b330:	ldr	r0, [fp, #-16]
   2b334:	ldr	r0, [r0, #4]
   2b338:	and	r0, r0, #255	; 0xff
   2b33c:	cmp	r0, #9
   2b340:	bne	2b350 <__assert_fail@plt+0x19ebc>
   2b344:	movw	r0, #0
   2b348:	str	r0, [sp, #28]
   2b34c:	b	2b408 <__assert_fail@plt+0x19f74>
   2b350:	ldr	r0, [fp, #-8]
   2b354:	ldr	r1, [fp, #-12]
   2b358:	ldr	r2, [fp, #-16]
   2b35c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b360:	ldr	ip, [fp, #8]
   2b364:	ldr	lr, [fp, #12]
   2b368:	str	ip, [sp]
   2b36c:	str	lr, [sp, #4]
   2b370:	bl	28eb4 <__assert_fail@plt+0x17a20>
   2b374:	str	r0, [sp, #28]
   2b378:	ldr	r0, [fp, #12]
   2b37c:	ldr	r0, [r0]
   2b380:	cmp	r0, #0
   2b384:	movw	r0, #0
   2b388:	str	r0, [sp, #12]
   2b38c:	bne	2b3ac <__assert_fail@plt+0x19f18>
   2b390:	ldr	r0, [fp, #-16]
   2b394:	ldr	r0, [r0, #4]
   2b398:	and	r0, r0, #255	; 0xff
   2b39c:	cmp	r0, #9
   2b3a0:	movw	r0, #0
   2b3a4:	movne	r0, #1
   2b3a8:	str	r0, [sp, #12]
   2b3ac:	ldr	r0, [sp, #12]
   2b3b0:	tst	r0, #1
   2b3b4:	beq	2b3e8 <__assert_fail@plt+0x19f54>
   2b3b8:	ldr	r0, [sp, #28]
   2b3bc:	movw	r1, #0
   2b3c0:	cmp	r0, r1
   2b3c4:	beq	2b3dc <__assert_fail@plt+0x19f48>
   2b3c8:	ldr	r0, [sp, #28]
   2b3cc:	movw	r1, #42600	; 0xa668
   2b3d0:	movt	r1, #2
   2b3d4:	movw	r2, #0
   2b3d8:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2b3dc:	ldr	r0, [fp, #12]
   2b3e0:	movw	r1, #8
   2b3e4:	str	r1, [r0]
   2b3e8:	ldr	r0, [fp, #12]
   2b3ec:	ldr	r0, [r0]
   2b3f0:	cmp	r0, #0
   2b3f4:	beq	2b404 <__assert_fail@plt+0x19f70>
   2b3f8:	movw	r0, #0
   2b3fc:	str	r0, [fp, #-4]
   2b400:	b	2b484 <__assert_fail@plt+0x19ff0>
   2b404:	b	2b408 <__assert_fail@plt+0x19f74>
   2b408:	ldr	r0, [sp, #24]
   2b40c:	cmp	r0, #8
   2b410:	bhi	2b430 <__assert_fail@plt+0x19f9c>
   2b414:	ldr	r0, [sp, #24]
   2b418:	movw	r1, #1
   2b41c:	lsl	r0, r1, r0
   2b420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b424:	ldr	r2, [r1, #84]	; 0x54
   2b428:	orr	r0, r2, r0
   2b42c:	str	r0, [r1, #84]	; 0x54
   2b430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b434:	ldr	r1, [sp, #28]
   2b438:	movw	r2, #0
   2b43c:	movw	r3, #17
   2b440:	bl	29108 <__assert_fail@plt+0x17c74>
   2b444:	str	r0, [sp, #28]
   2b448:	ldr	r0, [sp, #28]
   2b44c:	movw	r1, #0
   2b450:	cmp	r0, r1
   2b454:	bne	2b470 <__assert_fail@plt+0x19fdc>
   2b458:	ldr	r0, [fp, #12]
   2b45c:	movw	r1, #12
   2b460:	str	r1, [r0]
   2b464:	movw	r0, #0
   2b468:	str	r0, [fp, #-4]
   2b46c:	b	2b484 <__assert_fail@plt+0x19ff0>
   2b470:	ldr	r0, [sp, #24]
   2b474:	ldr	r1, [sp, #28]
   2b478:	str	r0, [r1, #20]
   2b47c:	ldr	r0, [sp, #28]
   2b480:	str	r0, [fp, #-4]
   2b484:	ldr	r0, [fp, #-4]
   2b488:	mov	sp, fp
   2b48c:	pop	{fp, pc}
   2b490:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b494:	add	fp, sp, #24
   2b498:	sub	sp, sp, #304	; 0x130
   2b49c:	ldr	ip, [fp, #8]
   2b4a0:	str	r0, [fp, #-36]	; 0xffffffdc
   2b4a4:	str	r1, [fp, #-40]	; 0xffffffd8
   2b4a8:	str	r2, [fp, #-44]	; 0xffffffd4
   2b4ac:	str	r3, [fp, #-48]	; 0xffffffd0
   2b4b0:	movw	r0, #0
   2b4b4:	str	r0, [fp, #-52]	; 0xffffffcc
   2b4b8:	str	r0, [fp, #-56]	; 0xffffffc8
   2b4bc:	str	r0, [fp, #-60]	; 0xffffffc4
   2b4c0:	str	r0, [fp, #-64]	; 0xffffffc0
   2b4c4:	str	r0, [fp, #-68]	; 0xffffffbc
   2b4c8:	str	r0, [fp, #-72]	; 0xffffffb8
   2b4cc:	str	r0, [fp, #-92]	; 0xffffffa4
   2b4d0:	str	r0, [fp, #-96]	; 0xffffffa0
   2b4d4:	str	r0, [fp, #-100]	; 0xffffff9c
   2b4d8:	str	r0, [fp, #-104]	; 0xffffff98
   2b4dc:	str	r0, [fp, #-108]	; 0xffffff94
   2b4e0:	movw	r0, #0
   2b4e4:	strb	r0, [fp, #-109]	; 0xffffff93
   2b4e8:	movw	r0, #1
   2b4ec:	strb	r0, [fp, #-121]	; 0xffffff87
   2b4f0:	movw	r0, #32
   2b4f4:	movw	r1, #1
   2b4f8:	str	ip, [sp, #88]	; 0x58
   2b4fc:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   2b500:	str	r0, [fp, #-84]	; 0xffffffac
   2b504:	movw	r0, #40	; 0x28
   2b508:	movw	r1, #1
   2b50c:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   2b510:	str	r0, [fp, #-88]	; 0xffffffa8
   2b514:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b518:	movw	r1, #0
   2b51c:	cmp	r0, r1
   2b520:	movw	r0, #1
   2b524:	str	r0, [sp, #84]	; 0x54
   2b528:	beq	2b544 <__assert_fail@plt+0x1a0b0>
   2b52c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b530:	movw	r1, #0
   2b534:	cmp	r0, r1
   2b538:	movw	r0, #0
   2b53c:	moveq	r0, #1
   2b540:	str	r0, [sp, #84]	; 0x54
   2b544:	ldr	r0, [sp, #84]	; 0x54
   2b548:	tst	r0, #1
   2b54c:	beq	2b578 <__assert_fail@plt+0x1a0e4>
   2b550:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b554:	bl	1388c <__assert_fail@plt+0x23f8>
   2b558:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b55c:	bl	1388c <__assert_fail@plt+0x23f8>
   2b560:	ldr	r0, [fp, #8]
   2b564:	movw	r1, #12
   2b568:	str	r1, [r0]
   2b56c:	movw	r0, #0
   2b570:	str	r0, [fp, #-32]	; 0xffffffe0
   2b574:	b	2bdac <__assert_fail@plt+0x1a918>
   2b578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b57c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b580:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b584:	bl	2c8e8 <__assert_fail@plt+0x1b454>
   2b588:	str	r0, [fp, #-120]	; 0xffffff88
   2b58c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b590:	ldr	r0, [r0, #4]
   2b594:	and	r0, r0, #255	; 0xff
   2b598:	cmp	r0, #2
   2b59c:	bne	2b5b0 <__assert_fail@plt+0x1a11c>
   2b5a0:	ldr	r0, [fp, #8]
   2b5a4:	movw	r1, #2
   2b5a8:	str	r1, [r0]
   2b5ac:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b5b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b5b4:	ldr	r0, [r0, #4]
   2b5b8:	and	r0, r0, #255	; 0xff
   2b5bc:	cmp	r0, #25
   2b5c0:	bne	2b64c <__assert_fail@plt+0x1a1b8>
   2b5c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b5c8:	ldrb	r1, [r0, #16]
   2b5cc:	bic	r1, r1, #1
   2b5d0:	movw	r2, #1
   2b5d4:	orr	r1, r1, r2
   2b5d8:	strb	r1, [r0, #16]
   2b5dc:	strb	r2, [fp, #-109]	; 0xffffff93
   2b5e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2b5e4:	and	r0, r0, #256	; 0x100
   2b5e8:	cmp	r0, #0
   2b5ec:	beq	2b5fc <__assert_fail@plt+0x1a168>
   2b5f0:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b5f4:	movw	r1, #10
   2b5f8:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2b5fc:	ldr	r0, [fp, #-120]	; 0xffffff88
   2b600:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b604:	ldr	r2, [r1, #40]	; 0x28
   2b608:	add	r0, r2, r0
   2b60c:	str	r0, [r1, #40]	; 0x28
   2b610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b614:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b618:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b61c:	bl	2c8e8 <__assert_fail@plt+0x1b454>
   2b620:	str	r0, [fp, #-120]	; 0xffffff88
   2b624:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b628:	ldr	r0, [r0, #4]
   2b62c:	and	r0, r0, #255	; 0xff
   2b630:	cmp	r0, #2
   2b634:	bne	2b648 <__assert_fail@plt+0x1a1b4>
   2b638:	ldr	r0, [fp, #8]
   2b63c:	movw	r1, #2
   2b640:	str	r1, [r0]
   2b644:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b648:	b	2b64c <__assert_fail@plt+0x1a1b8>
   2b64c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b650:	ldr	r0, [r0, #4]
   2b654:	and	r0, r0, #255	; 0xff
   2b658:	cmp	r0, #21
   2b65c:	bne	2b678 <__assert_fail@plt+0x1a1e4>
   2b660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b664:	ldr	r1, [r0, #4]
   2b668:	mvn	r2, #255	; 0xff
   2b66c:	and	r1, r1, r2
   2b670:	orr	r1, r1, #1
   2b674:	str	r1, [r0, #4]
   2b678:	b	2b67c <__assert_fail@plt+0x1a1e8>
   2b67c:	add	r0, sp, #156	; 0x9c
   2b680:	movw	r1, #0
   2b684:	str	r1, [sp, #116]	; 0x74
   2b688:	movw	r1, #0
   2b68c:	strb	r1, [sp, #115]	; 0x73
   2b690:	str	r0, [fp, #-128]	; 0xffffff80
   2b694:	movw	r0, #3
   2b698:	str	r0, [fp, #-132]	; 0xffffff7c
   2b69c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b6a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b6a4:	ldr	r3, [fp, #-120]	; 0xffffff88
   2b6a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b6ac:	ldr	ip, [fp, #-48]	; 0xffffffd0
   2b6b0:	ldrb	lr, [fp, #-121]	; 0xffffff87
   2b6b4:	sub	r4, fp, #132	; 0x84
   2b6b8:	str	r0, [sp, #80]	; 0x50
   2b6bc:	mov	r0, r4
   2b6c0:	ldr	r4, [sp, #80]	; 0x50
   2b6c4:	str	r4, [sp]
   2b6c8:	str	ip, [sp, #4]
   2b6cc:	and	ip, lr, #1
   2b6d0:	str	ip, [sp, #8]
   2b6d4:	bl	2cca0 <__assert_fail@plt+0x1b80c>
   2b6d8:	str	r0, [sp, #120]	; 0x78
   2b6dc:	ldr	r0, [sp, #120]	; 0x78
   2b6e0:	cmp	r0, #0
   2b6e4:	beq	2b6f8 <__assert_fail@plt+0x1a264>
   2b6e8:	ldr	r0, [sp, #120]	; 0x78
   2b6ec:	ldr	r1, [fp, #8]
   2b6f0:	str	r0, [r1]
   2b6f4:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b6f8:	movw	r0, #0
   2b6fc:	strb	r0, [fp, #-121]	; 0xffffff87
   2b700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b704:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b708:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b70c:	bl	2c8e8 <__assert_fail@plt+0x1b454>
   2b710:	str	r0, [fp, #-120]	; 0xffffff88
   2b714:	ldr	r0, [fp, #-132]	; 0xffffff7c
   2b718:	cmp	r0, #4
   2b71c:	beq	2b804 <__assert_fail@plt+0x1a370>
   2b720:	ldr	r0, [fp, #-132]	; 0xffffff7c
   2b724:	cmp	r0, #2
   2b728:	beq	2b804 <__assert_fail@plt+0x1a370>
   2b72c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b730:	ldr	r0, [r0, #4]
   2b734:	and	r0, r0, #255	; 0xff
   2b738:	cmp	r0, #2
   2b73c:	bne	2b750 <__assert_fail@plt+0x1a2bc>
   2b740:	ldr	r0, [fp, #8]
   2b744:	movw	r1, #7
   2b748:	str	r1, [r0]
   2b74c:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b754:	ldr	r0, [r0, #4]
   2b758:	and	r0, r0, #255	; 0xff
   2b75c:	cmp	r0, #22
   2b760:	bne	2b800 <__assert_fail@plt+0x1a36c>
   2b764:	ldr	r0, [fp, #-120]	; 0xffffff88
   2b768:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b76c:	ldr	r2, [r1, #40]	; 0x28
   2b770:	add	r0, r2, r0
   2b774:	str	r0, [r1, #40]	; 0x28
   2b778:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b77c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b780:	add	r0, sp, #104	; 0x68
   2b784:	bl	2c8e8 <__assert_fail@plt+0x1b454>
   2b788:	str	r0, [sp, #116]	; 0x74
   2b78c:	ldr	r0, [sp, #108]	; 0x6c
   2b790:	and	r0, r0, #255	; 0xff
   2b794:	cmp	r0, #2
   2b798:	bne	2b7ac <__assert_fail@plt+0x1a318>
   2b79c:	ldr	r0, [fp, #8]
   2b7a0:	movw	r1, #7
   2b7a4:	str	r1, [r0]
   2b7a8:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b7ac:	ldr	r0, [sp, #108]	; 0x6c
   2b7b0:	and	r0, r0, #255	; 0xff
   2b7b4:	cmp	r0, #21
   2b7b8:	bne	2b7f4 <__assert_fail@plt+0x1a360>
   2b7bc:	ldr	r0, [fp, #-120]	; 0xffffff88
   2b7c0:	movw	r1, #0
   2b7c4:	sub	r0, r1, r0
   2b7c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b7cc:	ldr	r2, [r1, #40]	; 0x28
   2b7d0:	add	r0, r2, r0
   2b7d4:	str	r0, [r1, #40]	; 0x28
   2b7d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b7dc:	ldr	r1, [r0, #4]
   2b7e0:	mvn	r2, #255	; 0xff
   2b7e4:	and	r1, r1, r2
   2b7e8:	orr	r1, r1, #1
   2b7ec:	str	r1, [r0, #4]
   2b7f0:	b	2b7fc <__assert_fail@plt+0x1a368>
   2b7f4:	movw	r0, #1
   2b7f8:	strb	r0, [sp, #115]	; 0x73
   2b7fc:	b	2b800 <__assert_fail@plt+0x1a36c>
   2b800:	b	2b804 <__assert_fail@plt+0x1a370>
   2b804:	ldrb	r0, [sp, #115]	; 0x73
   2b808:	and	r0, r0, #1
   2b80c:	cmp	r0, #1
   2b810:	bne	2b934 <__assert_fail@plt+0x1a4a0>
   2b814:	add	r0, sp, #124	; 0x7c
   2b818:	str	r0, [fp, #-136]	; 0xffffff78
   2b81c:	movw	r0, #3
   2b820:	str	r0, [fp, #-140]	; 0xffffff74
   2b824:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b828:	ldr	r3, [sp, #116]	; 0x74
   2b82c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b830:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b834:	sub	ip, fp, #140	; 0x8c
   2b838:	str	r0, [sp, #76]	; 0x4c
   2b83c:	mov	r0, ip
   2b840:	add	ip, sp, #104	; 0x68
   2b844:	str	r2, [sp, #72]	; 0x48
   2b848:	mov	r2, ip
   2b84c:	ldr	ip, [sp, #76]	; 0x4c
   2b850:	str	ip, [sp]
   2b854:	ldr	lr, [sp, #72]	; 0x48
   2b858:	str	lr, [sp, #4]
   2b85c:	movw	r4, #1
   2b860:	and	r4, r4, #1
   2b864:	str	r4, [sp, #8]
   2b868:	bl	2cca0 <__assert_fail@plt+0x1b80c>
   2b86c:	str	r0, [sp, #120]	; 0x78
   2b870:	ldr	r0, [sp, #120]	; 0x78
   2b874:	cmp	r0, #0
   2b878:	beq	2b88c <__assert_fail@plt+0x1a3f8>
   2b87c:	ldr	r0, [sp, #120]	; 0x78
   2b880:	ldr	r1, [fp, #8]
   2b884:	str	r0, [r1]
   2b888:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b88c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b890:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b894:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b898:	bl	2c8e8 <__assert_fail@plt+0x1b454>
   2b89c:	str	r0, [fp, #-120]	; 0xffffff88
   2b8a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b8a4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b8a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b8ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b8b0:	ldr	ip, [fp, #-60]	; 0xffffffc4
   2b8b4:	ldr	lr, [fp, #-52]	; 0xffffffcc
   2b8b8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   2b8bc:	ldr	r5, [fp, #-64]	; 0xffffffc0
   2b8c0:	ldr	r6, [fp, #-68]	; 0xffffffbc
   2b8c4:	ldr	r7, [fp, #-72]	; 0xffffffb8
   2b8c8:	sub	r8, fp, #96	; 0x60
   2b8cc:	str	r2, [sp, #68]	; 0x44
   2b8d0:	mov	r2, r8
   2b8d4:	sub	r8, fp, #132	; 0x84
   2b8d8:	str	r3, [sp, #64]	; 0x40
   2b8dc:	mov	r3, r8
   2b8e0:	sub	r8, fp, #140	; 0x8c
   2b8e4:	str	r8, [sp]
   2b8e8:	ldr	r8, [sp, #68]	; 0x44
   2b8ec:	str	r8, [sp, #4]
   2b8f0:	ldr	r9, [sp, #64]	; 0x40
   2b8f4:	str	r9, [sp, #8]
   2b8f8:	str	ip, [sp, #12]
   2b8fc:	str	lr, [sp, #16]
   2b900:	str	r4, [sp, #20]
   2b904:	str	r5, [sp, #24]
   2b908:	str	r6, [sp, #28]
   2b90c:	str	r7, [sp, #32]
   2b910:	bl	2ce20 <__assert_fail@plt+0x1b98c>
   2b914:	ldr	r1, [fp, #8]
   2b918:	str	r0, [r1]
   2b91c:	ldr	r0, [fp, #8]
   2b920:	ldr	r0, [r0]
   2b924:	cmp	r0, #0
   2b928:	beq	2b930 <__assert_fail@plt+0x1a49c>
   2b92c:	b	2bd94 <__assert_fail@plt+0x1a900>
   2b930:	b	2bae0 <__assert_fail@plt+0x1a64c>
   2b934:	ldr	r0, [fp, #-132]	; 0xffffff7c
   2b938:	str	r0, [sp, #60]	; 0x3c
   2b93c:	add	r0, pc, #8
   2b940:	ldr	r1, [sp, #60]	; 0x3c
   2b944:	ldr	r0, [r0, r1, lsl #2]
   2b948:	mov	pc, r0
   2b94c:	andeq	fp, r2, r0, ror #18
   2b950:	andeq	fp, r2, r0, ror r9
   2b954:	strdeq	fp, [r2], -r4
   2b958:	andeq	fp, r2, r8, lsr #20
   2b95c:	andeq	fp, r2, r8, lsl #21
   2b960:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b964:	ldrb	r1, [fp, #-128]	; 0xffffff80
   2b968:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2b96c:	b	2badc <__assert_fail@plt+0x1a648>
   2b970:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2b974:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b978:	ldr	r1, [r1, #20]
   2b97c:	cmp	r0, r1
   2b980:	bne	2b9d0 <__assert_fail@plt+0x1a53c>
   2b984:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b988:	ldr	r0, [r0, #20]
   2b98c:	mov	r1, #1
   2b990:	orr	r0, r1, r0, lsl #1
   2b994:	str	r0, [fp, #-100]	; 0xffffff9c
   2b998:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b99c:	ldr	r0, [r0]
   2b9a0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2b9a4:	lsl	r1, r1, #2
   2b9a8:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2b9ac:	str	r0, [sp, #100]	; 0x64
   2b9b0:	ldr	r0, [sp, #100]	; 0x64
   2b9b4:	movw	r1, #0
   2b9b8:	cmp	r0, r1
   2b9bc:	bne	2b9c4 <__assert_fail@plt+0x1a530>
   2b9c0:	b	2bd88 <__assert_fail@plt+0x1a8f4>
   2b9c4:	ldr	r0, [sp, #100]	; 0x64
   2b9c8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b9cc:	str	r0, [r1]
   2b9d0:	ldr	r0, [fp, #-128]	; 0xffffff80
   2b9d4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b9d8:	ldr	r2, [r1]
   2b9dc:	ldr	r3, [r1, #20]
   2b9e0:	add	ip, r3, #1
   2b9e4:	str	ip, [r1, #20]
   2b9e8:	add	r1, r2, r3, lsl #2
   2b9ec:	str	r0, [r1]
   2b9f0:	b	2badc <__assert_fail@plt+0x1a648>
   2b9f4:	ldr	r0, [fp, #-84]	; 0xffffffac
   2b9f8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b9fc:	ldr	r3, [fp, #-128]	; 0xffffff80
   2ba00:	sub	r2, fp, #104	; 0x68
   2ba04:	bl	2d2a4 <__assert_fail@plt+0x1be10>
   2ba08:	ldr	r1, [fp, #8]
   2ba0c:	str	r0, [r1]
   2ba10:	ldr	r0, [fp, #8]
   2ba14:	ldr	r0, [r0]
   2ba18:	cmp	r0, #0
   2ba1c:	beq	2ba24 <__assert_fail@plt+0x1a590>
   2ba20:	b	2bd94 <__assert_fail@plt+0x1a900>
   2ba24:	b	2badc <__assert_fail@plt+0x1a648>
   2ba28:	ldr	r0, [fp, #-84]	; 0xffffffac
   2ba2c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2ba30:	ldr	r3, [fp, #-128]	; 0xffffff80
   2ba34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2ba38:	ldr	ip, [fp, #-64]	; 0xffffffc0
   2ba3c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   2ba40:	ldr	r4, [fp, #-72]	; 0xffffffb8
   2ba44:	sub	r5, fp, #92	; 0x5c
   2ba48:	str	r2, [sp, #56]	; 0x38
   2ba4c:	mov	r2, r5
   2ba50:	ldr	r5, [sp, #56]	; 0x38
   2ba54:	str	r5, [sp]
   2ba58:	str	ip, [sp, #4]
   2ba5c:	str	lr, [sp, #8]
   2ba60:	str	r4, [sp, #12]
   2ba64:	bl	2d300 <__assert_fail@plt+0x1be6c>
   2ba68:	ldr	r1, [fp, #8]
   2ba6c:	str	r0, [r1]
   2ba70:	ldr	r0, [fp, #8]
   2ba74:	ldr	r0, [r0]
   2ba78:	cmp	r0, #0
   2ba7c:	beq	2ba84 <__assert_fail@plt+0x1a5f0>
   2ba80:	b	2bd94 <__assert_fail@plt+0x1a900>
   2ba84:	b	2badc <__assert_fail@plt+0x1a648>
   2ba88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ba8c:	ldr	r0, [r0, #64]	; 0x40
   2ba90:	ldr	r1, [fp, #-84]	; 0xffffffac
   2ba94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ba98:	ldr	r3, [fp, #-128]	; 0xffffff80
   2ba9c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   2baa0:	sub	lr, fp, #108	; 0x6c
   2baa4:	str	r3, [sp, #52]	; 0x34
   2baa8:	mov	r3, lr
   2baac:	ldr	lr, [sp, #52]	; 0x34
   2bab0:	str	lr, [sp]
   2bab4:	str	ip, [sp, #4]
   2bab8:	bl	2d384 <__assert_fail@plt+0x1bef0>
   2babc:	ldr	r1, [fp, #8]
   2bac0:	str	r0, [r1]
   2bac4:	ldr	r0, [fp, #8]
   2bac8:	ldr	r0, [r0]
   2bacc:	cmp	r0, #0
   2bad0:	beq	2bad8 <__assert_fail@plt+0x1a644>
   2bad4:	b	2bd94 <__assert_fail@plt+0x1a900>
   2bad8:	b	2badc <__assert_fail@plt+0x1a648>
   2badc:	b	2bae0 <__assert_fail@plt+0x1a64c>
   2bae0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bae4:	ldr	r0, [r0, #4]
   2bae8:	and	r0, r0, #255	; 0xff
   2baec:	cmp	r0, #2
   2baf0:	bne	2bb04 <__assert_fail@plt+0x1a670>
   2baf4:	ldr	r0, [fp, #8]
   2baf8:	movw	r1, #7
   2bafc:	str	r1, [r0]
   2bb00:	b	2bd94 <__assert_fail@plt+0x1a900>
   2bb04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bb08:	ldr	r0, [r0, #4]
   2bb0c:	and	r0, r0, #255	; 0xff
   2bb10:	cmp	r0, #21
   2bb14:	bne	2bb1c <__assert_fail@plt+0x1a688>
   2bb18:	b	2bb20 <__assert_fail@plt+0x1a68c>
   2bb1c:	b	2b67c <__assert_fail@plt+0x1a1e8>
   2bb20:	ldr	r0, [fp, #-120]	; 0xffffff88
   2bb24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bb28:	ldr	r2, [r1, #40]	; 0x28
   2bb2c:	add	r0, r2, r0
   2bb30:	str	r0, [r1, #40]	; 0x28
   2bb34:	ldrb	r0, [fp, #-109]	; 0xffffff93
   2bb38:	tst	r0, #1
   2bb3c:	beq	2bb48 <__assert_fail@plt+0x1a6b4>
   2bb40:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bb44:	bl	2e024 <__assert_fail@plt+0x1cb90>
   2bb48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bb4c:	ldr	r0, [r0, #92]	; 0x5c
   2bb50:	cmp	r0, #1
   2bb54:	ble	2bb68 <__assert_fail@plt+0x1a6d4>
   2bb58:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bb5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bb60:	ldr	r1, [r1, #60]	; 0x3c
   2bb64:	bl	2e06c <__assert_fail@plt+0x1cbd8>
   2bb68:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bb6c:	ldr	r0, [r0, #20]
   2bb70:	cmp	r0, #0
   2bb74:	bne	2bbe0 <__assert_fail@plt+0x1a74c>
   2bb78:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bb7c:	ldr	r0, [r0, #24]
   2bb80:	cmp	r0, #0
   2bb84:	bne	2bbe0 <__assert_fail@plt+0x1a74c>
   2bb88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bb8c:	ldr	r0, [r0, #28]
   2bb90:	cmp	r0, #0
   2bb94:	bne	2bbe0 <__assert_fail@plt+0x1a74c>
   2bb98:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bb9c:	ldr	r0, [r0, #32]
   2bba0:	cmp	r0, #0
   2bba4:	bne	2bbe0 <__assert_fail@plt+0x1a74c>
   2bba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bbac:	ldr	r0, [r0, #92]	; 0x5c
   2bbb0:	cmp	r0, #1
   2bbb4:	ble	2bd24 <__assert_fail@plt+0x1a890>
   2bbb8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bbbc:	ldr	r0, [r0, #36]	; 0x24
   2bbc0:	cmp	r0, #0
   2bbc4:	bne	2bbe0 <__assert_fail@plt+0x1a74c>
   2bbc8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bbcc:	ldrb	r0, [r0, #16]
   2bbd0:	and	r0, r0, #1
   2bbd4:	and	r0, r0, #255	; 0xff
   2bbd8:	cmp	r0, #0
   2bbdc:	beq	2bd24 <__assert_fail@plt+0x1a890>
   2bbe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bbe4:	ldrb	r1, [r0, #88]	; 0x58
   2bbe8:	bic	r1, r1, #2
   2bbec:	movw	r2, #2
   2bbf0:	orr	r1, r1, r2
   2bbf4:	strb	r1, [r0, #88]	; 0x58
   2bbf8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2bbfc:	mvn	r1, #255	; 0xff
   2bc00:	and	r0, r0, r1
   2bc04:	orr	r0, r0, #6
   2bc08:	str	r0, [fp, #-76]	; 0xffffffb4
   2bc0c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bc10:	str	r0, [fp, #-80]	; 0xffffffb0
   2bc14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bc18:	movw	r1, #0
   2bc1c:	str	r1, [sp, #48]	; 0x30
   2bc20:	ldr	r2, [sp, #48]	; 0x30
   2bc24:	sub	r3, fp, #80	; 0x50
   2bc28:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2bc2c:	str	r0, [sp, #96]	; 0x60
   2bc30:	ldr	r0, [sp, #96]	; 0x60
   2bc34:	movw	r1, #0
   2bc38:	cmp	r0, r1
   2bc3c:	bne	2bc44 <__assert_fail@plt+0x1a7b0>
   2bc40:	b	2bd88 <__assert_fail@plt+0x1a8f4>
   2bc44:	movw	r0, #0
   2bc48:	str	r0, [sp, #92]	; 0x5c
   2bc4c:	ldr	r0, [sp, #92]	; 0x5c
   2bc50:	cmp	r0, #8
   2bc54:	bge	2bc88 <__assert_fail@plt+0x1a7f4>
   2bc58:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bc5c:	ldr	r1, [sp, #92]	; 0x5c
   2bc60:	add	r0, r0, r1, lsl #2
   2bc64:	ldr	r0, [r0]
   2bc68:	cmp	r0, #0
   2bc6c:	beq	2bc74 <__assert_fail@plt+0x1a7e0>
   2bc70:	b	2bc88 <__assert_fail@plt+0x1a7f4>
   2bc74:	b	2bc78 <__assert_fail@plt+0x1a7e4>
   2bc78:	ldr	r0, [sp, #92]	; 0x5c
   2bc7c:	add	r0, r0, #1
   2bc80:	str	r0, [sp, #92]	; 0x5c
   2bc84:	b	2bc4c <__assert_fail@plt+0x1a7b8>
   2bc88:	ldr	r0, [sp, #92]	; 0x5c
   2bc8c:	cmp	r0, #8
   2bc90:	bge	2bd10 <__assert_fail@plt+0x1a87c>
   2bc94:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2bc98:	mvn	r1, #255	; 0xff
   2bc9c:	and	r0, r0, r1
   2bca0:	orr	r0, r0, #3
   2bca4:	str	r0, [fp, #-76]	; 0xffffffb4
   2bca8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bcac:	str	r0, [fp, #-80]	; 0xffffffb0
   2bcb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bcb4:	movw	r1, #0
   2bcb8:	str	r1, [sp, #44]	; 0x2c
   2bcbc:	ldr	r2, [sp, #44]	; 0x2c
   2bcc0:	sub	r3, fp, #80	; 0x50
   2bcc4:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2bcc8:	str	r0, [fp, #-116]	; 0xffffff8c
   2bccc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2bcd0:	movw	r1, #0
   2bcd4:	cmp	r0, r1
   2bcd8:	bne	2bce0 <__assert_fail@plt+0x1a84c>
   2bcdc:	b	2bd88 <__assert_fail@plt+0x1a8f4>
   2bce0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bce4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2bce8:	ldr	r2, [sp, #96]	; 0x60
   2bcec:	movw	r3, #10
   2bcf0:	bl	29108 <__assert_fail@plt+0x17c74>
   2bcf4:	str	r0, [fp, #-116]	; 0xffffff8c
   2bcf8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2bcfc:	movw	r1, #0
   2bd00:	cmp	r0, r1
   2bd04:	bne	2bd0c <__assert_fail@plt+0x1a878>
   2bd08:	b	2bd88 <__assert_fail@plt+0x1a8f4>
   2bd0c:	b	2bd20 <__assert_fail@plt+0x1a88c>
   2bd10:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bd14:	bl	1388c <__assert_fail@plt+0x23f8>
   2bd18:	ldr	r0, [sp, #96]	; 0x60
   2bd1c:	str	r0, [fp, #-116]	; 0xffffff8c
   2bd20:	b	2bd7c <__assert_fail@plt+0x1a8e8>
   2bd24:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bd28:	bl	26740 <__assert_fail@plt+0x152ac>
   2bd2c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2bd30:	mvn	r1, #255	; 0xff
   2bd34:	and	r0, r0, r1
   2bd38:	orr	r0, r0, #3
   2bd3c:	str	r0, [fp, #-76]	; 0xffffffb4
   2bd40:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bd44:	str	r0, [fp, #-80]	; 0xffffffb0
   2bd48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bd4c:	movw	r1, #0
   2bd50:	str	r1, [sp, #40]	; 0x28
   2bd54:	ldr	r2, [sp, #40]	; 0x28
   2bd58:	sub	r3, fp, #80	; 0x50
   2bd5c:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2bd60:	str	r0, [fp, #-116]	; 0xffffff8c
   2bd64:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2bd68:	movw	r1, #0
   2bd6c:	cmp	r0, r1
   2bd70:	bne	2bd78 <__assert_fail@plt+0x1a8e4>
   2bd74:	b	2bd88 <__assert_fail@plt+0x1a8f4>
   2bd78:	b	2bd7c <__assert_fail@plt+0x1a8e8>
   2bd7c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2bd80:	str	r0, [fp, #-32]	; 0xffffffe0
   2bd84:	b	2bdac <__assert_fail@plt+0x1a918>
   2bd88:	ldr	r0, [fp, #8]
   2bd8c:	movw	r1, #12
   2bd90:	str	r1, [r0]
   2bd94:	ldr	r0, [fp, #-84]	; 0xffffffac
   2bd98:	bl	1388c <__assert_fail@plt+0x23f8>
   2bd9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bda0:	bl	26740 <__assert_fail@plt+0x152ac>
   2bda4:	movw	r0, #0
   2bda8:	str	r0, [fp, #-32]	; 0xffffffe0
   2bdac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bdb0:	sub	sp, fp, #24
   2bdb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bdb8:	push	{fp, lr}
   2bdbc:	mov	fp, sp
   2bdc0:	sub	sp, sp, #32
   2bdc4:	str	r0, [fp, #-4]
   2bdc8:	mov	r0, #0
   2bdcc:	str	r0, [fp, #-8]
   2bdd0:	str	r0, [sp, #16]
   2bdd4:	ldr	r0, [fp, #-4]
   2bdd8:	ldrb	r1, [r0, #88]	; 0x58
   2bddc:	orr	r1, r1, #16
   2bde0:	strb	r1, [r0, #88]	; 0x58
   2bde4:	ldr	r0, [fp, #-4]
   2bde8:	ldrb	r0, [r0, #88]	; 0x58
   2bdec:	ubfx	r0, r0, #3, #1
   2bdf0:	and	r0, r0, #255	; 0xff
   2bdf4:	cmp	r0, #0
   2bdf8:	bne	2beb0 <__assert_fail@plt+0x1aa1c>
   2bdfc:	mov	r0, #0
   2be00:	str	r0, [sp, #12]
   2be04:	movw	r0, #0
   2be08:	movt	r0, #1023	; 0x3ff
   2be0c:	str	r0, [sp, #8]
   2be10:	mvn	r0, #2013265921	; 0x78000001
   2be14:	str	r0, [sp, #4]
   2be18:	mvn	r0, #-134217727	; 0xf8000001
   2be1c:	str	r0, [sp]
   2be20:	ldr	r0, [sp, #12]
   2be24:	ldr	r1, [fp, #-4]
   2be28:	str	r0, [r1, #96]	; 0x60
   2be2c:	ldr	r0, [sp, #8]
   2be30:	ldr	r1, [fp, #-4]
   2be34:	str	r0, [r1, #100]	; 0x64
   2be38:	ldr	r0, [sp, #4]
   2be3c:	ldr	r1, [fp, #-4]
   2be40:	str	r0, [r1, #104]	; 0x68
   2be44:	ldr	r0, [sp]
   2be48:	ldr	r1, [fp, #-4]
   2be4c:	str	r0, [r1, #108]	; 0x6c
   2be50:	mov	r0, #4
   2be54:	str	r0, [fp, #-8]
   2be58:	mov	r0, #128	; 0x80
   2be5c:	str	r0, [sp, #16]
   2be60:	ldr	r0, [fp, #-4]
   2be64:	ldrb	r0, [r0, #88]	; 0x58
   2be68:	ubfx	r0, r0, #2, #1
   2be6c:	and	r0, r0, #255	; 0xff
   2be70:	cmp	r0, #0
   2be74:	beq	2beac <__assert_fail@plt+0x1aa18>
   2be78:	ldr	r0, [fp, #-4]
   2be7c:	add	r0, r0, #96	; 0x60
   2be80:	ldr	r1, [fp, #-8]
   2be84:	add	r0, r0, r1, lsl #2
   2be88:	ldr	r1, [sp, #16]
   2be8c:	movw	r2, #256	; 0x100
   2be90:	sub	r1, r2, r1
   2be94:	movw	r2, #8
   2be98:	sdiv	r2, r1, r2
   2be9c:	movw	r1, #0
   2bea0:	and	r1, r1, #255	; 0xff
   2bea4:	bl	113d4 <memset@plt>
   2bea8:	b	2bf60 <__assert_fail@plt+0x1aacc>
   2beac:	b	2beb0 <__assert_fail@plt+0x1aa1c>
   2beb0:	b	2beb4 <__assert_fail@plt+0x1aa20>
   2beb4:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2beb8:	ldr	r0, [fp, #-8]
   2bebc:	cmp	r0, #8
   2bec0:	bge	2bf60 <__assert_fail@plt+0x1aacc>
   2bec4:	movw	r0, #0
   2bec8:	str	r0, [fp, #-12]
   2becc:	ldr	r0, [fp, #-12]
   2bed0:	cmp	r0, #32
   2bed4:	bge	2bf4c <__assert_fail@plt+0x1aab8>
   2bed8:	bl	11368 <__ctype_b_loc@plt>
   2bedc:	ldr	r0, [r0]
   2bee0:	ldr	r1, [sp, #16]
   2bee4:	add	r0, r0, r1, lsl #1
   2bee8:	ldrh	r0, [r0]
   2beec:	and	r0, r0, #8
   2bef0:	cmp	r0, #0
   2bef4:	bne	2bf04 <__assert_fail@plt+0x1aa70>
   2bef8:	ldr	r0, [sp, #16]
   2befc:	cmp	r0, #95	; 0x5f
   2bf00:	bne	2bf2c <__assert_fail@plt+0x1aa98>
   2bf04:	ldr	r0, [fp, #-12]
   2bf08:	mov	r1, #1
   2bf0c:	lsl	r0, r1, r0
   2bf10:	ldr	r1, [fp, #-4]
   2bf14:	add	r1, r1, #96	; 0x60
   2bf18:	ldr	r2, [fp, #-8]
   2bf1c:	add	r1, r1, r2, lsl #2
   2bf20:	ldr	r2, [r1]
   2bf24:	orr	r0, r2, r0
   2bf28:	str	r0, [r1]
   2bf2c:	b	2bf30 <__assert_fail@plt+0x1aa9c>
   2bf30:	ldr	r0, [fp, #-12]
   2bf34:	add	r0, r0, #1
   2bf38:	str	r0, [fp, #-12]
   2bf3c:	ldr	r0, [sp, #16]
   2bf40:	add	r0, r0, #1
   2bf44:	str	r0, [sp, #16]
   2bf48:	b	2becc <__assert_fail@plt+0x1aa38>
   2bf4c:	b	2bf50 <__assert_fail@plt+0x1aabc>
   2bf50:	ldr	r0, [fp, #-8]
   2bf54:	add	r0, r0, #1
   2bf58:	str	r0, [fp, #-8]
   2bf5c:	b	2beb8 <__assert_fail@plt+0x1aa24>
   2bf60:	mov	sp, fp
   2bf64:	pop	{fp, pc}
   2bf68:	push	{fp, lr}
   2bf6c:	mov	fp, sp
   2bf70:	sub	sp, sp, #80	; 0x50
   2bf74:	ldr	ip, [fp, #12]
   2bf78:	ldr	lr, [fp, #8]
   2bf7c:	str	r0, [fp, #-8]
   2bf80:	str	r1, [fp, #-12]
   2bf84:	str	r2, [fp, #-16]
   2bf88:	str	r3, [fp, #-20]	; 0xffffffec
   2bf8c:	and	r0, lr, #1
   2bf90:	strb	r0, [fp, #-21]	; 0xffffffeb
   2bf94:	movw	r0, #0
   2bf98:	str	r0, [fp, #-36]	; 0xffffffdc
   2bf9c:	movw	r0, #32
   2bfa0:	movw	r1, #1
   2bfa4:	str	ip, [sp, #20]
   2bfa8:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   2bfac:	str	r0, [fp, #-28]	; 0xffffffe4
   2bfb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bfb4:	movw	r1, #0
   2bfb8:	cmp	r0, r1
   2bfbc:	bne	2bfd8 <__assert_fail@plt+0x1ab44>
   2bfc0:	ldr	r0, [fp, #12]
   2bfc4:	movw	r1, #12
   2bfc8:	str	r1, [r0]
   2bfcc:	movw	r0, #0
   2bfd0:	str	r0, [fp, #-4]
   2bfd4:	b	2c28c <__assert_fail@plt+0x1adf8>
   2bfd8:	movw	r0, #40	; 0x28
   2bfdc:	movw	r1, #1
   2bfe0:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   2bfe4:	str	r0, [fp, #-32]	; 0xffffffe0
   2bfe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bfec:	movw	r1, #0
   2bff0:	cmp	r0, r1
   2bff4:	bne	2c018 <__assert_fail@plt+0x1ab84>
   2bff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bffc:	bl	1388c <__assert_fail@plt+0x23f8>
   2c000:	ldr	r0, [fp, #12]
   2c004:	movw	r1, #12
   2c008:	str	r1, [r0]
   2c00c:	movw	r0, #0
   2c010:	str	r0, [fp, #-4]
   2c014:	b	2c28c <__assert_fail@plt+0x1adf8>
   2c018:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c01c:	ldrb	r1, [r0, #16]
   2c020:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   2c024:	and	r2, r2, #1
   2c028:	bic	r1, r1, #1
   2c02c:	orr	r1, r1, r2
   2c030:	strb	r1, [r0, #16]
   2c034:	ldr	r0, [fp, #-12]
   2c038:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c03c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c040:	ldr	r3, [fp, #-16]
   2c044:	sub	ip, fp, #36	; 0x24
   2c048:	str	r3, [sp, #16]
   2c04c:	mov	r3, ip
   2c050:	ldr	ip, [sp, #16]
   2c054:	str	ip, [sp]
   2c058:	movw	lr, #0
   2c05c:	str	lr, [sp, #4]
   2c060:	bl	2d384 <__assert_fail@plt+0x1bef0>
   2c064:	str	r0, [sp, #40]	; 0x28
   2c068:	ldr	r0, [sp, #40]	; 0x28
   2c06c:	cmp	r0, #0
   2c070:	beq	2c09c <__assert_fail@plt+0x1ac08>
   2c074:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c078:	bl	1388c <__assert_fail@plt+0x23f8>
   2c07c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c080:	bl	26740 <__assert_fail@plt+0x152ac>
   2c084:	ldr	r0, [sp, #40]	; 0x28
   2c088:	ldr	r1, [fp, #12]
   2c08c:	str	r0, [r1]
   2c090:	movw	r0, #0
   2c094:	str	r0, [fp, #-4]
   2c098:	b	2c28c <__assert_fail@plt+0x1adf8>
   2c09c:	b	2c0a0 <__assert_fail@plt+0x1ac0c>
   2c0a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c0a4:	ldrsb	r0, [r0]
   2c0a8:	cmp	r0, #0
   2c0ac:	beq	2c0d0 <__assert_fail@plt+0x1ac3c>
   2c0b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c0b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0b8:	ldrb	r1, [r1]
   2c0bc:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2c0c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c0c4:	add	r0, r0, #1
   2c0c8:	str	r0, [fp, #-20]	; 0xffffffec
   2c0cc:	b	2c0a0 <__assert_fail@plt+0x1ac0c>
   2c0d0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   2c0d4:	tst	r0, #1
   2c0d8:	beq	2c0e4 <__assert_fail@plt+0x1ac50>
   2c0dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c0e0:	bl	2e024 <__assert_fail@plt+0x1cb90>
   2c0e4:	ldr	r0, [fp, #-8]
   2c0e8:	ldr	r0, [r0, #92]	; 0x5c
   2c0ec:	cmp	r0, #1
   2c0f0:	ble	2c104 <__assert_fail@plt+0x1ac70>
   2c0f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c0f8:	ldr	r1, [fp, #-8]
   2c0fc:	ldr	r1, [r1, #60]	; 0x3c
   2c100:	bl	2e06c <__assert_fail@plt+0x1cbd8>
   2c104:	ldr	r0, [pc, #396]	; 2c298 <__assert_fail@plt+0x1ae04>
   2c108:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c10c:	str	r1, [sp, #28]
   2c110:	ldr	r1, [sp, #32]
   2c114:	mvn	r2, #255	; 0xff
   2c118:	and	r1, r1, r2
   2c11c:	orr	r1, r1, #3
   2c120:	str	r1, [sp, #32]
   2c124:	ldr	r1, [sp, #32]
   2c128:	and	r0, r1, r0
   2c12c:	str	r0, [sp, #32]
   2c130:	ldr	r0, [sp, #32]
   2c134:	mvn	r1, #262144	; 0x40000
   2c138:	and	r0, r0, r1
   2c13c:	str	r0, [sp, #32]
   2c140:	ldr	r0, [sp, #32]
   2c144:	mvn	r1, #524288	; 0x80000
   2c148:	and	r0, r0, r1
   2c14c:	str	r0, [sp, #32]
   2c150:	ldr	r0, [sp, #32]
   2c154:	mvn	r1, #1048576	; 0x100000
   2c158:	and	r0, r0, r1
   2c15c:	str	r0, [sp, #32]
   2c160:	ldr	r0, [sp, #32]
   2c164:	mvn	r1, #2097152	; 0x200000
   2c168:	and	r0, r0, r1
   2c16c:	str	r0, [sp, #32]
   2c170:	ldr	r0, [sp, #32]
   2c174:	mvn	r1, #4194304	; 0x400000
   2c178:	and	r0, r0, r1
   2c17c:	str	r0, [sp, #32]
   2c180:	ldr	r0, [fp, #-8]
   2c184:	movw	r1, #0
   2c188:	str	r1, [sp, #12]
   2c18c:	ldr	r2, [sp, #12]
   2c190:	add	r3, sp, #28
   2c194:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2c198:	str	r0, [sp, #36]	; 0x24
   2c19c:	ldr	r0, [sp, #36]	; 0x24
   2c1a0:	movw	r1, #0
   2c1a4:	cmp	r0, r1
   2c1a8:	bne	2c1b0 <__assert_fail@plt+0x1ad1c>
   2c1ac:	b	2c268 <__assert_fail@plt+0x1add4>
   2c1b0:	ldr	r0, [fp, #-8]
   2c1b4:	ldr	r0, [r0, #92]	; 0x5c
   2c1b8:	cmp	r0, #1
   2c1bc:	ble	2c250 <__assert_fail@plt+0x1adbc>
   2c1c0:	mov	r0, #6
   2c1c4:	strb	r0, [sp, #32]
   2c1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c1cc:	str	r0, [sp, #28]
   2c1d0:	ldr	r0, [fp, #-8]
   2c1d4:	ldrb	r1, [r0, #88]	; 0x58
   2c1d8:	bic	r1, r1, #2
   2c1dc:	movw	r2, #2
   2c1e0:	orr	r1, r1, r2
   2c1e4:	strb	r1, [r0, #88]	; 0x58
   2c1e8:	ldr	r0, [fp, #-8]
   2c1ec:	movw	r1, #0
   2c1f0:	str	r1, [sp, #8]
   2c1f4:	ldr	r2, [sp, #8]
   2c1f8:	add	r3, sp, #28
   2c1fc:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2c200:	str	r0, [sp, #24]
   2c204:	ldr	r0, [sp, #24]
   2c208:	movw	r1, #0
   2c20c:	cmp	r0, r1
   2c210:	bne	2c218 <__assert_fail@plt+0x1ad84>
   2c214:	b	2c268 <__assert_fail@plt+0x1add4>
   2c218:	ldr	r0, [fp, #-8]
   2c21c:	ldr	r1, [sp, #36]	; 0x24
   2c220:	ldr	r2, [sp, #24]
   2c224:	movw	r3, #10
   2c228:	bl	29108 <__assert_fail@plt+0x17c74>
   2c22c:	str	r0, [sp, #36]	; 0x24
   2c230:	ldr	r0, [sp, #24]
   2c234:	movw	r1, #0
   2c238:	cmp	r0, r1
   2c23c:	beq	2c24c <__assert_fail@plt+0x1adb8>
   2c240:	ldr	r0, [sp, #36]	; 0x24
   2c244:	str	r0, [fp, #-4]
   2c248:	b	2c28c <__assert_fail@plt+0x1adf8>
   2c24c:	b	2c264 <__assert_fail@plt+0x1add0>
   2c250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c254:	bl	26740 <__assert_fail@plt+0x152ac>
   2c258:	ldr	r0, [sp, #36]	; 0x24
   2c25c:	str	r0, [fp, #-4]
   2c260:	b	2c28c <__assert_fail@plt+0x1adf8>
   2c264:	b	2c268 <__assert_fail@plt+0x1add4>
   2c268:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c26c:	bl	1388c <__assert_fail@plt+0x23f8>
   2c270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c274:	bl	26740 <__assert_fail@plt+0x152ac>
   2c278:	ldr	r0, [fp, #12]
   2c27c:	movw	r1, #12
   2c280:	str	r1, [r0]
   2c284:	movw	r0, #0
   2c288:	str	r0, [fp, #-4]
   2c28c:	ldr	r0, [fp, #-4]
   2c290:	mov	sp, fp
   2c294:	pop	{fp, pc}
   2c298:			; <UNDEFINED> instruction: 0xfffc00ff
   2c29c:	push	{fp, lr}
   2c2a0:	mov	fp, sp
   2c2a4:	sub	sp, sp, #96	; 0x60
   2c2a8:	ldr	ip, [fp, #12]
   2c2ac:	ldr	lr, [fp, #8]
   2c2b0:	str	r0, [fp, #-8]
   2c2b4:	str	r1, [fp, #-12]
   2c2b8:	str	r2, [fp, #-16]
   2c2bc:	str	r3, [fp, #-20]	; 0xffffffec
   2c2c0:	movw	r0, #0
   2c2c4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c2c8:	str	r0, [fp, #-28]	; 0xffffffe4
   2c2cc:	ldr	r0, [fp, #-12]
   2c2d0:	ldr	r0, [r0, #40]	; 0x28
   2c2d4:	str	r0, [fp, #-44]	; 0xffffffd4
   2c2d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c2dc:	ldr	r1, [r0]
   2c2e0:	str	r1, [sp, #44]	; 0x2c
   2c2e4:	ldr	r0, [r0, #4]
   2c2e8:	str	r0, [sp, #48]	; 0x30
   2c2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c2f0:	ldr	r0, [r0, #4]
   2c2f4:	and	r0, r0, #255	; 0xff
   2c2f8:	cmp	r0, #23
   2c2fc:	bne	2c580 <__assert_fail@plt+0x1b0ec>
   2c300:	movw	r0, #0
   2c304:	str	r0, [fp, #-40]	; 0xffffffd8
   2c308:	ldr	r0, [fp, #-12]
   2c30c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c310:	ldr	r2, [fp, #8]
   2c314:	bl	2e530 <__assert_fail@plt+0x1d09c>
   2c318:	str	r0, [fp, #-36]	; 0xffffffdc
   2c31c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c320:	cmn	r0, #1
   2c324:	bne	2c374 <__assert_fail@plt+0x1aee0>
   2c328:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c32c:	ldr	r0, [r0, #4]
   2c330:	and	r0, r0, #255	; 0xff
   2c334:	cmp	r0, #1
   2c338:	bne	2c358 <__assert_fail@plt+0x1aec4>
   2c33c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c340:	ldrb	r0, [r0]
   2c344:	cmp	r0, #44	; 0x2c
   2c348:	bne	2c358 <__assert_fail@plt+0x1aec4>
   2c34c:	movw	r0, #0
   2c350:	str	r0, [fp, #-36]	; 0xffffffdc
   2c354:	b	2c370 <__assert_fail@plt+0x1aedc>
   2c358:	ldr	r0, [fp, #12]
   2c35c:	movw	r1, #10
   2c360:	str	r1, [r0]
   2c364:	movw	r0, #0
   2c368:	str	r0, [fp, #-4]
   2c36c:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c370:	b	2c374 <__assert_fail@plt+0x1aee0>
   2c374:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c378:	cmn	r0, #2
   2c37c:	beq	2c3f8 <__assert_fail@plt+0x1af64>
   2c380:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c384:	ldr	r0, [r0, #4]
   2c388:	and	r0, r0, #255	; 0xff
   2c38c:	cmp	r0, #24
   2c390:	bne	2c3a0 <__assert_fail@plt+0x1af0c>
   2c394:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c398:	str	r0, [sp, #36]	; 0x24
   2c39c:	b	2c3f0 <__assert_fail@plt+0x1af5c>
   2c3a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c3a4:	ldr	r0, [r0, #4]
   2c3a8:	and	r0, r0, #255	; 0xff
   2c3ac:	cmp	r0, #1
   2c3b0:	bne	2c3dc <__assert_fail@plt+0x1af48>
   2c3b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c3b8:	ldrb	r0, [r0]
   2c3bc:	cmp	r0, #44	; 0x2c
   2c3c0:	bne	2c3dc <__assert_fail@plt+0x1af48>
   2c3c4:	ldr	r0, [fp, #-12]
   2c3c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c3cc:	ldr	r2, [fp, #8]
   2c3d0:	bl	2e530 <__assert_fail@plt+0x1d09c>
   2c3d4:	str	r0, [sp, #32]
   2c3d8:	b	2c3e8 <__assert_fail@plt+0x1af54>
   2c3dc:	mvn	r0, #1
   2c3e0:	str	r0, [sp, #32]
   2c3e4:	b	2c3e8 <__assert_fail@plt+0x1af54>
   2c3e8:	ldr	r0, [sp, #32]
   2c3ec:	str	r0, [sp, #36]	; 0x24
   2c3f0:	ldr	r0, [sp, #36]	; 0x24
   2c3f4:	str	r0, [fp, #-40]	; 0xffffffd8
   2c3f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c3fc:	cmn	r0, #2
   2c400:	movw	r0, #1
   2c404:	str	r0, [sp, #28]
   2c408:	beq	2c420 <__assert_fail@plt+0x1af8c>
   2c40c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c410:	cmn	r0, #2
   2c414:	movw	r0, #0
   2c418:	moveq	r0, #1
   2c41c:	str	r0, [sp, #28]
   2c420:	ldr	r0, [sp, #28]
   2c424:	tst	r0, #1
   2c428:	beq	2c4d0 <__assert_fail@plt+0x1b03c>
   2c42c:	ldr	r0, [fp, #8]
   2c430:	and	r0, r0, #2097152	; 0x200000
   2c434:	cmp	r0, #0
   2c438:	movw	r0, #0
   2c43c:	movne	r0, #1
   2c440:	mvn	r1, #0
   2c444:	eor	r0, r0, r1
   2c448:	tst	r0, #1
   2c44c:	beq	2c48c <__assert_fail@plt+0x1aff8>
   2c450:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c454:	ldr	r0, [r0, #4]
   2c458:	and	r0, r0, #255	; 0xff
   2c45c:	cmp	r0, #2
   2c460:	bne	2c474 <__assert_fail@plt+0x1afe0>
   2c464:	ldr	r0, [fp, #12]
   2c468:	movw	r1, #9
   2c46c:	str	r1, [r0]
   2c470:	b	2c480 <__assert_fail@plt+0x1afec>
   2c474:	ldr	r0, [fp, #12]
   2c478:	movw	r1, #10
   2c47c:	str	r1, [r0]
   2c480:	movw	r0, #0
   2c484:	str	r0, [fp, #-4]
   2c488:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c48c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2c490:	ldr	r1, [fp, #-12]
   2c494:	str	r0, [r1, #40]	; 0x28
   2c498:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c49c:	ldr	r1, [sp, #44]	; 0x2c
   2c4a0:	str	r1, [r0]
   2c4a4:	ldr	r1, [sp, #48]	; 0x30
   2c4a8:	str	r1, [r0, #4]
   2c4ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c4b0:	ldr	r1, [r0, #4]
   2c4b4:	mvn	r2, #255	; 0xff
   2c4b8:	and	r1, r1, r2
   2c4bc:	orr	r1, r1, #1
   2c4c0:	str	r1, [r0, #4]
   2c4c4:	ldr	r0, [fp, #-8]
   2c4c8:	str	r0, [fp, #-4]
   2c4cc:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c4d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c4d4:	cmn	r0, #1
   2c4d8:	beq	2c4f4 <__assert_fail@plt+0x1b060>
   2c4dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c4e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c4e4:	cmp	r0, r1
   2c4e8:	movw	r0, #1
   2c4ec:	str	r0, [sp, #24]
   2c4f0:	bgt	2c510 <__assert_fail@plt+0x1b07c>
   2c4f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c4f8:	ldr	r0, [r0, #4]
   2c4fc:	and	r0, r0, #255	; 0xff
   2c500:	cmp	r0, #24
   2c504:	movw	r0, #0
   2c508:	movne	r0, #1
   2c50c:	str	r0, [sp, #24]
   2c510:	ldr	r0, [sp, #24]
   2c514:	tst	r0, #1
   2c518:	beq	2c534 <__assert_fail@plt+0x1b0a0>
   2c51c:	ldr	r0, [fp, #12]
   2c520:	movw	r1, #10
   2c524:	str	r1, [r0]
   2c528:	movw	r0, #0
   2c52c:	str	r0, [fp, #-4]
   2c530:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c534:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c538:	cmn	r0, #1
   2c53c:	bne	2c54c <__assert_fail@plt+0x1b0b8>
   2c540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c544:	str	r0, [sp, #20]
   2c548:	b	2c554 <__assert_fail@plt+0x1b0c0>
   2c54c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c550:	str	r0, [sp, #20]
   2c554:	ldr	r0, [sp, #20]
   2c558:	movw	r1, #32767	; 0x7fff
   2c55c:	cmp	r1, r0
   2c560:	bge	2c57c <__assert_fail@plt+0x1b0e8>
   2c564:	ldr	r0, [fp, #12]
   2c568:	movw	r1, #15
   2c56c:	str	r1, [r0]
   2c570:	movw	r0, #0
   2c574:	str	r0, [fp, #-4]
   2c578:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c57c:	b	2c5d0 <__assert_fail@plt+0x1b13c>
   2c580:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c584:	ldr	r0, [r0, #4]
   2c588:	and	r0, r0, #255	; 0xff
   2c58c:	cmp	r0, #18
   2c590:	movw	r0, #0
   2c594:	moveq	r0, #1
   2c598:	tst	r0, #1
   2c59c:	movw	r0, #1
   2c5a0:	mov	r1, r0
   2c5a4:	moveq	r1, #0
   2c5a8:	str	r1, [fp, #-36]	; 0xffffffdc
   2c5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c5b0:	ldr	r1, [r1, #4]
   2c5b4:	and	r1, r1, #255	; 0xff
   2c5b8:	cmp	r1, #19
   2c5bc:	movw	r1, #0
   2c5c0:	moveq	r1, #1
   2c5c4:	tst	r1, #1
   2c5c8:	mvneq	r0, #0
   2c5cc:	str	r0, [fp, #-40]	; 0xffffffd8
   2c5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5d4:	ldr	r1, [fp, #-12]
   2c5d8:	ldr	r2, [fp, #8]
   2c5dc:	bl	28e74 <__assert_fail@plt+0x179e0>
   2c5e0:	ldr	r0, [fp, #-8]
   2c5e4:	movw	r1, #0
   2c5e8:	cmp	r0, r1
   2c5ec:	bne	2c5fc <__assert_fail@plt+0x1b168>
   2c5f0:	movw	r0, #0
   2c5f4:	str	r0, [fp, #-4]
   2c5f8:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c5fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c600:	cmp	r0, #0
   2c604:	movw	r0, #0
   2c608:	str	r0, [sp, #16]
   2c60c:	bne	2c624 <__assert_fail@plt+0x1b190>
   2c610:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c614:	cmp	r0, #0
   2c618:	movw	r0, #0
   2c61c:	moveq	r0, #1
   2c620:	str	r0, [sp, #16]
   2c624:	ldr	r0, [sp, #16]
   2c628:	tst	r0, #1
   2c62c:	beq	2c650 <__assert_fail@plt+0x1b1bc>
   2c630:	ldr	r0, [fp, #-8]
   2c634:	movw	r1, #42600	; 0xa668
   2c638:	movt	r1, #2
   2c63c:	movw	r2, #0
   2c640:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2c644:	movw	r1, #0
   2c648:	str	r1, [fp, #-4]
   2c64c:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c650:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c654:	cmp	r0, #0
   2c658:	ble	2c744 <__assert_fail@plt+0x1b2b0>
   2c65c:	ldr	r0, [fp, #-8]
   2c660:	str	r0, [fp, #-24]	; 0xffffffe8
   2c664:	movw	r0, #2
   2c668:	str	r0, [fp, #-32]	; 0xffffffe0
   2c66c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c670:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c674:	cmp	r0, r1
   2c678:	bgt	2c6f8 <__assert_fail@plt+0x1b264>
   2c67c:	ldr	r0, [fp, #-8]
   2c680:	ldr	r1, [fp, #-16]
   2c684:	bl	2e690 <__assert_fail@plt+0x1d1fc>
   2c688:	str	r0, [fp, #-8]
   2c68c:	ldr	r0, [fp, #-16]
   2c690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c694:	ldr	r2, [fp, #-8]
   2c698:	movw	r3, #16
   2c69c:	bl	29108 <__assert_fail@plt+0x17c74>
   2c6a0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c6a4:	ldr	r0, [fp, #-8]
   2c6a8:	movw	r1, #0
   2c6ac:	cmp	r0, r1
   2c6b0:	movw	r0, #1
   2c6b4:	str	r0, [sp, #12]
   2c6b8:	beq	2c6d4 <__assert_fail@plt+0x1b240>
   2c6bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6c0:	movw	r1, #0
   2c6c4:	cmp	r0, r1
   2c6c8:	movw	r0, #0
   2c6cc:	moveq	r0, #1
   2c6d0:	str	r0, [sp, #12]
   2c6d4:	ldr	r0, [sp, #12]
   2c6d8:	tst	r0, #1
   2c6dc:	beq	2c6e4 <__assert_fail@plt+0x1b250>
   2c6e0:	b	2c8c8 <__assert_fail@plt+0x1b434>
   2c6e4:	b	2c6e8 <__assert_fail@plt+0x1b254>
   2c6e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c6ec:	add	r0, r0, #1
   2c6f0:	str	r0, [fp, #-32]	; 0xffffffe0
   2c6f4:	b	2c66c <__assert_fail@plt+0x1b1d8>
   2c6f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c6fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c700:	cmp	r0, r1
   2c704:	bne	2c714 <__assert_fail@plt+0x1b280>
   2c708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c70c:	str	r0, [fp, #-4]
   2c710:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c714:	ldr	r0, [fp, #-8]
   2c718:	ldr	r1, [fp, #-16]
   2c71c:	bl	2e690 <__assert_fail@plt+0x1d1fc>
   2c720:	str	r0, [fp, #-8]
   2c724:	ldr	r0, [fp, #-8]
   2c728:	movw	r1, #0
   2c72c:	cmp	r0, r1
   2c730:	bne	2c738 <__assert_fail@plt+0x1b2a4>
   2c734:	b	2c8c8 <__assert_fail@plt+0x1b434>
   2c738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c73c:	str	r0, [fp, #-28]	; 0xffffffe4
   2c740:	b	2c74c <__assert_fail@plt+0x1b2b8>
   2c744:	movw	r0, #0
   2c748:	str	r0, [fp, #-28]	; 0xffffffe4
   2c74c:	ldr	r0, [fp, #-8]
   2c750:	ldr	r0, [r0, #24]
   2c754:	and	r0, r0, #255	; 0xff
   2c758:	cmp	r0, #17
   2c75c:	bne	2c780 <__assert_fail@plt+0x1b2ec>
   2c760:	ldr	r0, [fp, #-8]
   2c764:	ldr	r0, [r0, #20]
   2c768:	str	r0, [sp, #40]	; 0x28
   2c76c:	ldr	r0, [fp, #-8]
   2c770:	ldr	r2, [sp, #40]	; 0x28
   2c774:	movw	r1, #59424	; 0xe820
   2c778:	movt	r1, #2
   2c77c:	bl	2a4f8 <__assert_fail@plt+0x19064>
   2c780:	ldr	r0, [fp, #-16]
   2c784:	ldr	r1, [fp, #-8]
   2c788:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c78c:	cmn	r2, #1
   2c790:	movw	r2, #0
   2c794:	moveq	r2, #1
   2c798:	tst	r2, #1
   2c79c:	movw	r2, #11
   2c7a0:	moveq	r2, #10
   2c7a4:	movw	r3, #0
   2c7a8:	str	r2, [sp, #8]
   2c7ac:	mov	r2, r3
   2c7b0:	ldr	r3, [sp, #8]
   2c7b4:	bl	29108 <__assert_fail@plt+0x17c74>
   2c7b8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c7c0:	movw	r1, #0
   2c7c4:	cmp	r0, r1
   2c7c8:	bne	2c7d0 <__assert_fail@plt+0x1b33c>
   2c7cc:	b	2c8c8 <__assert_fail@plt+0x1b434>
   2c7d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c7d4:	add	r0, r0, #2
   2c7d8:	str	r0, [fp, #-32]	; 0xffffffe0
   2c7dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c7e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c7e4:	cmp	r0, r1
   2c7e8:	bgt	2c894 <__assert_fail@plt+0x1b400>
   2c7ec:	ldr	r0, [fp, #-8]
   2c7f0:	ldr	r1, [fp, #-16]
   2c7f4:	bl	2e690 <__assert_fail@plt+0x1d1fc>
   2c7f8:	str	r0, [fp, #-8]
   2c7fc:	ldr	r0, [fp, #-16]
   2c800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c804:	ldr	r2, [fp, #-8]
   2c808:	movw	r3, #16
   2c80c:	bl	29108 <__assert_fail@plt+0x17c74>
   2c810:	str	r0, [fp, #-24]	; 0xffffffe8
   2c814:	ldr	r0, [fp, #-8]
   2c818:	movw	r1, #0
   2c81c:	cmp	r0, r1
   2c820:	movw	r0, #1
   2c824:	str	r0, [sp, #4]
   2c828:	beq	2c844 <__assert_fail@plt+0x1b3b0>
   2c82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c830:	movw	r1, #0
   2c834:	cmp	r0, r1
   2c838:	movw	r0, #0
   2c83c:	moveq	r0, #1
   2c840:	str	r0, [sp, #4]
   2c844:	ldr	r0, [sp, #4]
   2c848:	tst	r0, #1
   2c84c:	beq	2c854 <__assert_fail@plt+0x1b3c0>
   2c850:	b	2c8c8 <__assert_fail@plt+0x1b434>
   2c854:	ldr	r0, [fp, #-16]
   2c858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c85c:	movw	r2, #0
   2c860:	movw	r3, #10
   2c864:	bl	29108 <__assert_fail@plt+0x17c74>
   2c868:	str	r0, [fp, #-24]	; 0xffffffe8
   2c86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c870:	movw	r1, #0
   2c874:	cmp	r0, r1
   2c878:	bne	2c880 <__assert_fail@plt+0x1b3ec>
   2c87c:	b	2c8c8 <__assert_fail@plt+0x1b434>
   2c880:	b	2c884 <__assert_fail@plt+0x1b3f0>
   2c884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c888:	add	r0, r0, #1
   2c88c:	str	r0, [fp, #-32]	; 0xffffffe0
   2c890:	b	2c7dc <__assert_fail@plt+0x1b348>
   2c894:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c898:	movw	r1, #0
   2c89c:	cmp	r0, r1
   2c8a0:	beq	2c8bc <__assert_fail@plt+0x1b428>
   2c8a4:	ldr	r0, [fp, #-16]
   2c8a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c8ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c8b0:	movw	r3, #16
   2c8b4:	bl	29108 <__assert_fail@plt+0x17c74>
   2c8b8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c8c0:	str	r0, [fp, #-4]
   2c8c4:	b	2c8dc <__assert_fail@plt+0x1b448>
   2c8c8:	ldr	r0, [fp, #12]
   2c8cc:	movw	r1, #12
   2c8d0:	str	r1, [r0]
   2c8d4:	movw	r0, #0
   2c8d8:	str	r0, [fp, #-4]
   2c8dc:	ldr	r0, [fp, #-4]
   2c8e0:	mov	sp, fp
   2c8e4:	pop	{fp, pc}
   2c8e8:	sub	sp, sp, #32
   2c8ec:	str	r0, [sp, #24]
   2c8f0:	str	r1, [sp, #20]
   2c8f4:	str	r2, [sp, #16]
   2c8f8:	ldr	r0, [sp, #20]
   2c8fc:	ldr	r0, [r0, #56]	; 0x38
   2c900:	ldr	r1, [sp, #20]
   2c904:	ldr	r1, [r1, #40]	; 0x28
   2c908:	cmp	r0, r1
   2c90c:	bgt	2c934 <__assert_fail@plt+0x1b4a0>
   2c910:	ldr	r0, [sp, #24]
   2c914:	ldr	r1, [r0, #4]
   2c918:	mvn	r2, #255	; 0xff
   2c91c:	and	r1, r1, r2
   2c920:	orr	r1, r1, #2
   2c924:	str	r1, [r0, #4]
   2c928:	movw	r0, #0
   2c92c:	str	r0, [sp, #28]
   2c930:	b	2cc4c <__assert_fail@plt+0x1b7b8>
   2c934:	ldr	r0, [sp, #20]
   2c938:	ldr	r0, [r0, #4]
   2c93c:	ldr	r1, [sp, #20]
   2c940:	ldr	r1, [r1, #40]	; 0x28
   2c944:	add	r1, r1, #0
   2c948:	add	r0, r0, r1
   2c94c:	ldrb	r0, [r0]
   2c950:	strb	r0, [sp, #15]
   2c954:	ldrb	r0, [sp, #15]
   2c958:	ldr	r1, [sp, #24]
   2c95c:	strb	r0, [r1]
   2c960:	ldr	r0, [sp, #20]
   2c964:	ldr	r0, [r0, #80]	; 0x50
   2c968:	cmp	r0, #1
   2c96c:	ble	2c9c8 <__assert_fail@plt+0x1b534>
   2c970:	ldr	r0, [sp, #20]
   2c974:	ldr	r0, [r0, #40]	; 0x28
   2c978:	ldr	r1, [sp, #20]
   2c97c:	ldr	r1, [r1, #28]
   2c980:	cmp	r0, r1
   2c984:	beq	2c9c8 <__assert_fail@plt+0x1b534>
   2c988:	ldr	r0, [sp, #20]
   2c98c:	ldr	r1, [r0, #8]
   2c990:	ldr	r0, [r0, #40]	; 0x28
   2c994:	add	r0, r1, r0, lsl #2
   2c998:	ldr	r0, [r0]
   2c99c:	cmn	r0, #1
   2c9a0:	bne	2c9c8 <__assert_fail@plt+0x1b534>
   2c9a4:	ldr	r0, [sp, #24]
   2c9a8:	ldr	r1, [r0, #4]
   2c9ac:	mvn	r2, #255	; 0xff
   2c9b0:	and	r1, r1, r2
   2c9b4:	orr	r1, r1, #1
   2c9b8:	str	r1, [r0, #4]
   2c9bc:	movw	r0, #1
   2c9c0:	str	r0, [sp, #28]
   2c9c4:	b	2cc4c <__assert_fail@plt+0x1b7b8>
   2c9c8:	ldrb	r0, [sp, #15]
   2c9cc:	cmp	r0, #92	; 0x5c
   2c9d0:	bne	2ca60 <__assert_fail@plt+0x1b5cc>
   2c9d4:	ldr	r0, [sp, #16]
   2c9d8:	and	r0, r0, #1
   2c9dc:	cmp	r0, #0
   2c9e0:	beq	2ca60 <__assert_fail@plt+0x1b5cc>
   2c9e4:	ldr	r0, [sp, #20]
   2c9e8:	ldr	r0, [r0, #40]	; 0x28
   2c9ec:	add	r0, r0, #1
   2c9f0:	ldr	r1, [sp, #20]
   2c9f4:	ldr	r1, [r1, #48]	; 0x30
   2c9f8:	cmp	r0, r1
   2c9fc:	bge	2ca60 <__assert_fail@plt+0x1b5cc>
   2ca00:	ldr	r0, [sp, #20]
   2ca04:	ldr	r1, [r0, #40]	; 0x28
   2ca08:	add	r1, r1, #1
   2ca0c:	str	r1, [r0, #40]	; 0x28
   2ca10:	ldr	r0, [sp, #20]
   2ca14:	ldr	r0, [r0, #4]
   2ca18:	ldr	r1, [sp, #20]
   2ca1c:	ldr	r1, [r1, #40]	; 0x28
   2ca20:	add	r1, r1, #0
   2ca24:	add	r0, r0, r1
   2ca28:	ldrb	r0, [r0]
   2ca2c:	strb	r0, [sp, #14]
   2ca30:	ldrb	r0, [sp, #14]
   2ca34:	ldr	r1, [sp, #24]
   2ca38:	strb	r0, [r1]
   2ca3c:	ldr	r0, [sp, #24]
   2ca40:	ldr	r1, [r0, #4]
   2ca44:	mvn	r2, #255	; 0xff
   2ca48:	and	r1, r1, r2
   2ca4c:	orr	r1, r1, #1
   2ca50:	str	r1, [r0, #4]
   2ca54:	movw	r0, #1
   2ca58:	str	r0, [sp, #28]
   2ca5c:	b	2cc4c <__assert_fail@plt+0x1b7b8>
   2ca60:	ldrb	r0, [sp, #15]
   2ca64:	cmp	r0, #91	; 0x5b
   2ca68:	bne	2cba0 <__assert_fail@plt+0x1b70c>
   2ca6c:	ldr	r0, [sp, #20]
   2ca70:	ldr	r0, [r0, #40]	; 0x28
   2ca74:	add	r0, r0, #1
   2ca78:	ldr	r1, [sp, #20]
   2ca7c:	ldr	r1, [r1, #48]	; 0x30
   2ca80:	cmp	r0, r1
   2ca84:	bge	2caac <__assert_fail@plt+0x1b618>
   2ca88:	ldr	r0, [sp, #20]
   2ca8c:	ldr	r0, [r0, #4]
   2ca90:	ldr	r1, [sp, #20]
   2ca94:	ldr	r1, [r1, #40]	; 0x28
   2ca98:	add	r1, r1, #1
   2ca9c:	add	r0, r0, r1
   2caa0:	ldrb	r0, [r0]
   2caa4:	strb	r0, [sp, #13]
   2caa8:	b	2cab4 <__assert_fail@plt+0x1b620>
   2caac:	movw	r0, #0
   2cab0:	strb	r0, [sp, #13]
   2cab4:	ldrb	r0, [sp, #13]
   2cab8:	ldr	r1, [sp, #24]
   2cabc:	strb	r0, [r1]
   2cac0:	mov	r0, #2
   2cac4:	str	r0, [sp, #8]
   2cac8:	ldrb	r0, [sp, #13]
   2cacc:	mov	r1, r0
   2cad0:	cmp	r0, #46	; 0x2e
   2cad4:	str	r1, [sp, #4]
   2cad8:	beq	2cb00 <__assert_fail@plt+0x1b66c>
   2cadc:	b	2cae0 <__assert_fail@plt+0x1b64c>
   2cae0:	ldr	r0, [sp, #4]
   2cae4:	cmp	r0, #58	; 0x3a
   2cae8:	beq	2cb38 <__assert_fail@plt+0x1b6a4>
   2caec:	b	2caf0 <__assert_fail@plt+0x1b65c>
   2caf0:	ldr	r0, [sp, #4]
   2caf4:	cmp	r0, #61	; 0x3d
   2caf8:	beq	2cb1c <__assert_fail@plt+0x1b688>
   2cafc:	b	2cb68 <__assert_fail@plt+0x1b6d4>
   2cb00:	ldr	r0, [sp, #24]
   2cb04:	ldr	r1, [r0, #4]
   2cb08:	mvn	r2, #255	; 0xff
   2cb0c:	and	r1, r1, r2
   2cb10:	orr	r1, r1, #26
   2cb14:	str	r1, [r0, #4]
   2cb18:	b	2cb94 <__assert_fail@plt+0x1b700>
   2cb1c:	ldr	r0, [sp, #24]
   2cb20:	ldr	r1, [r0, #4]
   2cb24:	mvn	r2, #255	; 0xff
   2cb28:	and	r1, r1, r2
   2cb2c:	orr	r1, r1, #28
   2cb30:	str	r1, [r0, #4]
   2cb34:	b	2cb94 <__assert_fail@plt+0x1b700>
   2cb38:	ldr	r0, [sp, #16]
   2cb3c:	and	r0, r0, #4
   2cb40:	cmp	r0, #0
   2cb44:	beq	2cb64 <__assert_fail@plt+0x1b6d0>
   2cb48:	ldr	r0, [sp, #24]
   2cb4c:	ldr	r1, [r0, #4]
   2cb50:	mvn	r2, #255	; 0xff
   2cb54:	and	r1, r1, r2
   2cb58:	orr	r1, r1, #30
   2cb5c:	str	r1, [r0, #4]
   2cb60:	b	2cb94 <__assert_fail@plt+0x1b700>
   2cb64:	b	2cb68 <__assert_fail@plt+0x1b6d4>
   2cb68:	ldr	r0, [sp, #24]
   2cb6c:	ldr	r1, [r0, #4]
   2cb70:	mvn	r2, #255	; 0xff
   2cb74:	and	r1, r1, r2
   2cb78:	orr	r1, r1, #1
   2cb7c:	str	r1, [r0, #4]
   2cb80:	ldrb	r0, [sp, #15]
   2cb84:	ldr	r1, [sp, #24]
   2cb88:	strb	r0, [r1]
   2cb8c:	movw	r0, #1
   2cb90:	str	r0, [sp, #8]
   2cb94:	ldr	r0, [sp, #8]
   2cb98:	str	r0, [sp, #28]
   2cb9c:	b	2cc4c <__assert_fail@plt+0x1b7b8>
   2cba0:	ldrb	r0, [sp, #15]
   2cba4:	mov	r1, r0
   2cba8:	cmp	r0, #45	; 0x2d
   2cbac:	str	r1, [sp]
   2cbb0:	beq	2cbd8 <__assert_fail@plt+0x1b744>
   2cbb4:	b	2cbb8 <__assert_fail@plt+0x1b724>
   2cbb8:	ldr	r0, [sp]
   2cbbc:	cmp	r0, #93	; 0x5d
   2cbc0:	beq	2cbf4 <__assert_fail@plt+0x1b760>
   2cbc4:	b	2cbc8 <__assert_fail@plt+0x1b734>
   2cbc8:	ldr	r0, [sp]
   2cbcc:	cmp	r0, #94	; 0x5e
   2cbd0:	beq	2cc10 <__assert_fail@plt+0x1b77c>
   2cbd4:	b	2cc2c <__assert_fail@plt+0x1b798>
   2cbd8:	ldr	r0, [sp, #24]
   2cbdc:	ldr	r1, [r0, #4]
   2cbe0:	mvn	r2, #255	; 0xff
   2cbe4:	and	r1, r1, r2
   2cbe8:	orr	r1, r1, #22
   2cbec:	str	r1, [r0, #4]
   2cbf0:	b	2cc44 <__assert_fail@plt+0x1b7b0>
   2cbf4:	ldr	r0, [sp, #24]
   2cbf8:	ldr	r1, [r0, #4]
   2cbfc:	mvn	r2, #255	; 0xff
   2cc00:	and	r1, r1, r2
   2cc04:	orr	r1, r1, #21
   2cc08:	str	r1, [r0, #4]
   2cc0c:	b	2cc44 <__assert_fail@plt+0x1b7b0>
   2cc10:	ldr	r0, [sp, #24]
   2cc14:	ldr	r1, [r0, #4]
   2cc18:	mvn	r2, #255	; 0xff
   2cc1c:	and	r1, r1, r2
   2cc20:	orr	r1, r1, #25
   2cc24:	str	r1, [r0, #4]
   2cc28:	b	2cc44 <__assert_fail@plt+0x1b7b0>
   2cc2c:	ldr	r0, [sp, #24]
   2cc30:	ldr	r1, [r0, #4]
   2cc34:	mvn	r2, #255	; 0xff
   2cc38:	and	r1, r1, r2
   2cc3c:	orr	r1, r1, #1
   2cc40:	str	r1, [r0, #4]
   2cc44:	movw	r0, #1
   2cc48:	str	r0, [sp, #28]
   2cc4c:	ldr	r0, [sp, #28]
   2cc50:	add	sp, sp, #32
   2cc54:	bx	lr
   2cc58:	sub	sp, sp, #8
   2cc5c:	str	r0, [sp, #4]
   2cc60:	str	r1, [sp]
   2cc64:	ldr	r0, [sp]
   2cc68:	asr	r1, r0, #31
   2cc6c:	add	r1, r0, r1, lsr #27
   2cc70:	bic	r2, r1, #31
   2cc74:	sub	r0, r0, r2
   2cc78:	mov	r2, #1
   2cc7c:	lsl	r0, r2, r0
   2cc80:	ldr	r2, [sp, #4]
   2cc84:	asr	r1, r1, #5
   2cc88:	add	r1, r2, r1, lsl #2
   2cc8c:	ldr	r2, [r1]
   2cc90:	orr	r0, r2, r0
   2cc94:	str	r0, [r1]
   2cc98:	add	sp, sp, #8
   2cc9c:	bx	lr
   2cca0:	push	{r4, sl, fp, lr}
   2cca4:	add	fp, sp, #8
   2cca8:	sub	sp, sp, #48	; 0x30
   2ccac:	ldr	ip, [fp, #16]
   2ccb0:	ldr	lr, [fp, #12]
   2ccb4:	ldr	r4, [fp, #8]
   2ccb8:	str	r0, [fp, #-16]
   2ccbc:	str	r1, [fp, #-20]	; 0xffffffec
   2ccc0:	str	r2, [fp, #-24]	; 0xffffffe8
   2ccc4:	str	r3, [sp, #28]
   2ccc8:	and	r0, ip, #1
   2cccc:	strb	r0, [sp, #27]
   2ccd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ccd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ccd8:	ldr	r1, [r1, #40]	; 0x28
   2ccdc:	str	lr, [sp, #8]
   2cce0:	str	r4, [sp, #4]
   2cce4:	bl	2e0c4 <__assert_fail@plt+0x1cc30>
   2cce8:	str	r0, [sp, #20]
   2ccec:	ldr	r0, [sp, #20]
   2ccf0:	cmp	r0, #1
   2ccf4:	ble	2cd3c <__assert_fail@plt+0x1b8a8>
   2ccf8:	ldr	r0, [fp, #-16]
   2ccfc:	movw	r1, #1
   2cd00:	str	r1, [r0]
   2cd04:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cd08:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cd0c:	ldr	r1, [r1, #40]	; 0x28
   2cd10:	bl	2a210 <__assert_fail@plt+0x18d7c>
   2cd14:	ldr	r1, [fp, #-16]
   2cd18:	str	r0, [r1, #4]
   2cd1c:	ldr	r0, [sp, #20]
   2cd20:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cd24:	ldr	r2, [r1, #40]	; 0x28
   2cd28:	add	r0, r2, r0
   2cd2c:	str	r0, [r1, #40]	; 0x28
   2cd30:	movw	r0, #0
   2cd34:	str	r0, [fp, #-12]
   2cd38:	b	2ce14 <__assert_fail@plt+0x1b980>
   2cd3c:	ldr	r0, [sp, #28]
   2cd40:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cd44:	ldr	r2, [r1, #40]	; 0x28
   2cd48:	add	r0, r2, r0
   2cd4c:	str	r0, [r1, #40]	; 0x28
   2cd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd54:	ldr	r0, [r0, #4]
   2cd58:	and	r0, r0, #255	; 0xff
   2cd5c:	cmp	r0, #26
   2cd60:	beq	2cd8c <__assert_fail@plt+0x1b8f8>
   2cd64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd68:	ldr	r0, [r0, #4]
   2cd6c:	and	r0, r0, #255	; 0xff
   2cd70:	cmp	r0, #30
   2cd74:	beq	2cd8c <__assert_fail@plt+0x1b8f8>
   2cd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd7c:	ldr	r0, [r0, #4]
   2cd80:	and	r0, r0, #255	; 0xff
   2cd84:	cmp	r0, #28
   2cd88:	bne	2cda4 <__assert_fail@plt+0x1b910>
   2cd8c:	ldr	r0, [fp, #-16]
   2cd90:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cd94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cd98:	bl	2e160 <__assert_fail@plt+0x1cccc>
   2cd9c:	str	r0, [fp, #-12]
   2cda0:	b	2ce14 <__assert_fail@plt+0x1b980>
   2cda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cda8:	ldr	r0, [r0, #4]
   2cdac:	and	r0, r0, #255	; 0xff
   2cdb0:	cmp	r0, #22
   2cdb4:	bne	2cdf4 <__assert_fail@plt+0x1b960>
   2cdb8:	ldrb	r0, [sp, #27]
   2cdbc:	tst	r0, #1
   2cdc0:	bne	2cdf4 <__assert_fail@plt+0x1b960>
   2cdc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cdc8:	ldr	r2, [fp, #12]
   2cdcc:	add	r0, sp, #12
   2cdd0:	bl	2c8e8 <__assert_fail@plt+0x1b454>
   2cdd4:	ldr	r1, [sp, #16]
   2cdd8:	and	r1, r1, #255	; 0xff
   2cddc:	cmp	r1, #21
   2cde0:	beq	2cdf0 <__assert_fail@plt+0x1b95c>
   2cde4:	movw	r0, #11
   2cde8:	str	r0, [fp, #-12]
   2cdec:	b	2ce14 <__assert_fail@plt+0x1b980>
   2cdf0:	b	2cdf4 <__assert_fail@plt+0x1b960>
   2cdf4:	ldr	r0, [fp, #-16]
   2cdf8:	movw	r1, #0
   2cdfc:	str	r1, [r0]
   2ce00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce04:	ldrb	r0, [r0]
   2ce08:	ldr	r2, [fp, #-16]
   2ce0c:	strb	r0, [r2, #4]
   2ce10:	str	r1, [fp, #-12]
   2ce14:	ldr	r0, [fp, #-12]
   2ce18:	sub	sp, fp, #8
   2ce1c:	pop	{r4, sl, fp, pc}
   2ce20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ce24:	add	fp, sp, #28
   2ce28:	sub	sp, sp, #100	; 0x64
   2ce2c:	ldr	ip, [fp, #40]	; 0x28
   2ce30:	ldr	lr, [fp, #36]	; 0x24
   2ce34:	ldr	r4, [fp, #32]
   2ce38:	ldr	r5, [fp, #28]
   2ce3c:	ldr	r6, [fp, #24]
   2ce40:	ldr	r7, [fp, #20]
   2ce44:	ldr	r8, [fp, #16]
   2ce48:	ldr	r9, [fp, #12]
   2ce4c:	ldr	sl, [fp, #8]
   2ce50:	str	r0, [fp, #-36]	; 0xffffffdc
   2ce54:	str	r1, [fp, #-40]	; 0xffffffd8
   2ce58:	str	r2, [fp, #-44]	; 0xffffffd4
   2ce5c:	str	r3, [fp, #-48]	; 0xffffffd0
   2ce60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ce64:	ldr	r0, [r0]
   2ce68:	cmp	r0, #2
   2ce6c:	movw	r0, #1
   2ce70:	str	r0, [sp, #44]	; 0x2c
   2ce74:	beq	2cec0 <__assert_fail@plt+0x1ba2c>
   2ce78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ce7c:	ldr	r0, [r0]
   2ce80:	cmp	r0, #4
   2ce84:	movw	r0, #1
   2ce88:	str	r0, [sp, #44]	; 0x2c
   2ce8c:	beq	2cec0 <__assert_fail@plt+0x1ba2c>
   2ce90:	ldr	r0, [fp, #8]
   2ce94:	ldr	r0, [r0]
   2ce98:	cmp	r0, #2
   2ce9c:	movw	r0, #1
   2cea0:	str	r0, [sp, #44]	; 0x2c
   2cea4:	beq	2cec0 <__assert_fail@plt+0x1ba2c>
   2cea8:	ldr	r0, [fp, #8]
   2ceac:	ldr	r0, [r0]
   2ceb0:	cmp	r0, #4
   2ceb4:	movw	r0, #0
   2ceb8:	moveq	r0, #1
   2cebc:	str	r0, [sp, #44]	; 0x2c
   2cec0:	ldr	r0, [sp, #44]	; 0x2c
   2cec4:	tst	r0, #1
   2cec8:	beq	2ced8 <__assert_fail@plt+0x1ba44>
   2cecc:	movw	r0, #11
   2ced0:	str	r0, [fp, #-32]	; 0xffffffe0
   2ced4:	b	2d298 <__assert_fail@plt+0x1be04>
   2ced8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cedc:	ldr	r0, [r0]
   2cee0:	cmp	r0, #3
   2cee4:	bne	2cf04 <__assert_fail@plt+0x1ba70>
   2cee8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ceec:	ldr	r0, [r0, #4]
   2cef0:	bl	1138c <strlen@plt>
   2cef4:	cmp	r0, #1
   2cef8:	movw	r0, #1
   2cefc:	str	r0, [sp, #40]	; 0x28
   2cf00:	bhi	2cf40 <__assert_fail@plt+0x1baac>
   2cf04:	ldr	r0, [fp, #8]
   2cf08:	ldr	r0, [r0]
   2cf0c:	cmp	r0, #3
   2cf10:	movw	r0, #0
   2cf14:	str	r0, [sp, #36]	; 0x24
   2cf18:	bne	2cf38 <__assert_fail@plt+0x1baa4>
   2cf1c:	ldr	r0, [fp, #8]
   2cf20:	ldr	r0, [r0, #4]
   2cf24:	bl	1138c <strlen@plt>
   2cf28:	cmp	r0, #1
   2cf2c:	movw	r0, #0
   2cf30:	movhi	r0, #1
   2cf34:	str	r0, [sp, #36]	; 0x24
   2cf38:	ldr	r0, [sp, #36]	; 0x24
   2cf3c:	str	r0, [sp, #40]	; 0x28
   2cf40:	ldr	r0, [sp, #40]	; 0x28
   2cf44:	tst	r0, #1
   2cf48:	beq	2cf58 <__assert_fail@plt+0x1bac4>
   2cf4c:	movw	r0, #3
   2cf50:	str	r0, [fp, #-32]	; 0xffffffe0
   2cf54:	b	2d298 <__assert_fail@plt+0x1be04>
   2cf58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cf5c:	ldr	r0, [r0]
   2cf60:	cmp	r0, #0
   2cf64:	bne	2cf78 <__assert_fail@plt+0x1bae4>
   2cf68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cf6c:	ldrb	r0, [r0, #4]
   2cf70:	str	r0, [sp, #32]
   2cf74:	b	2cfb0 <__assert_fail@plt+0x1bb1c>
   2cf78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cf7c:	ldr	r0, [r0]
   2cf80:	cmp	r0, #3
   2cf84:	bne	2cf9c <__assert_fail@plt+0x1bb08>
   2cf88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cf8c:	ldr	r0, [r0, #4]
   2cf90:	ldrb	r0, [r0]
   2cf94:	str	r0, [sp, #28]
   2cf98:	b	2cfa8 <__assert_fail@plt+0x1bb14>
   2cf9c:	movw	r0, #0
   2cfa0:	str	r0, [sp, #28]
   2cfa4:	b	2cfa8 <__assert_fail@plt+0x1bb14>
   2cfa8:	ldr	r0, [sp, #28]
   2cfac:	str	r0, [sp, #32]
   2cfb0:	ldr	r0, [sp, #32]
   2cfb4:	str	r0, [fp, #-52]	; 0xffffffcc
   2cfb8:	ldr	r0, [fp, #8]
   2cfbc:	ldr	r0, [r0]
   2cfc0:	cmp	r0, #0
   2cfc4:	bne	2cfd8 <__assert_fail@plt+0x1bb44>
   2cfc8:	ldr	r0, [fp, #8]
   2cfcc:	ldrb	r0, [r0, #4]
   2cfd0:	str	r0, [sp, #24]
   2cfd4:	b	2d010 <__assert_fail@plt+0x1bb7c>
   2cfd8:	ldr	r0, [fp, #8]
   2cfdc:	ldr	r0, [r0]
   2cfe0:	cmp	r0, #3
   2cfe4:	bne	2cffc <__assert_fail@plt+0x1bb68>
   2cfe8:	ldr	r0, [fp, #8]
   2cfec:	ldr	r0, [r0, #4]
   2cff0:	ldrb	r0, [r0]
   2cff4:	str	r0, [sp, #20]
   2cff8:	b	2d008 <__assert_fail@plt+0x1bb74>
   2cffc:	movw	r0, #0
   2d000:	str	r0, [sp, #20]
   2d004:	b	2d008 <__assert_fail@plt+0x1bb74>
   2d008:	ldr	r0, [sp, #20]
   2d00c:	str	r0, [sp, #24]
   2d010:	ldr	r0, [sp, #24]
   2d014:	str	r0, [fp, #-56]	; 0xffffffc8
   2d018:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d01c:	ldr	r0, [r0]
   2d020:	cmp	r0, #0
   2d024:	beq	2d038 <__assert_fail@plt+0x1bba4>
   2d028:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d02c:	ldr	r0, [r0]
   2d030:	cmp	r0, #3
   2d034:	bne	2d050 <__assert_fail@plt+0x1bbbc>
   2d038:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2d03c:	ldr	r1, [fp, #12]
   2d040:	and	r0, r0, #255	; 0xff
   2d044:	bl	2e4e8 <__assert_fail@plt+0x1d054>
   2d048:	str	r0, [sp, #16]
   2d04c:	b	2d05c <__assert_fail@plt+0x1bbc8>
   2d050:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d054:	ldr	r0, [r0, #4]
   2d058:	str	r0, [sp, #16]
   2d05c:	ldr	r0, [sp, #16]
   2d060:	str	r0, [fp, #-60]	; 0xffffffc4
   2d064:	ldr	r0, [fp, #8]
   2d068:	ldr	r0, [r0]
   2d06c:	cmp	r0, #0
   2d070:	beq	2d084 <__assert_fail@plt+0x1bbf0>
   2d074:	ldr	r0, [fp, #8]
   2d078:	ldr	r0, [r0]
   2d07c:	cmp	r0, #3
   2d080:	bne	2d09c <__assert_fail@plt+0x1bc08>
   2d084:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d088:	ldr	r1, [fp, #12]
   2d08c:	and	r0, r0, #255	; 0xff
   2d090:	bl	2e4e8 <__assert_fail@plt+0x1d054>
   2d094:	str	r0, [sp, #12]
   2d098:	b	2d0a8 <__assert_fail@plt+0x1bc14>
   2d09c:	ldr	r0, [fp, #8]
   2d0a0:	ldr	r0, [r0, #4]
   2d0a4:	str	r0, [sp, #12]
   2d0a8:	ldr	r0, [sp, #12]
   2d0ac:	str	r0, [sp, #64]	; 0x40
   2d0b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d0b4:	cmn	r0, #1
   2d0b8:	beq	2d0c8 <__assert_fail@plt+0x1bc34>
   2d0bc:	ldr	r0, [sp, #64]	; 0x40
   2d0c0:	cmn	r0, #1
   2d0c4:	bne	2d0d4 <__assert_fail@plt+0x1bc40>
   2d0c8:	movw	r0, #3
   2d0cc:	str	r0, [fp, #-32]	; 0xffffffe0
   2d0d0:	b	2d298 <__assert_fail@plt+0x1be04>
   2d0d4:	ldr	r0, [fp, #16]
   2d0d8:	and	r0, r0, #65536	; 0x10000
   2d0dc:	cmp	r0, #0
   2d0e0:	movw	r0, #0
   2d0e4:	str	r0, [sp, #8]
   2d0e8:	beq	2d104 <__assert_fail@plt+0x1bc70>
   2d0ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d0f0:	ldr	r1, [sp, #64]	; 0x40
   2d0f4:	cmp	r0, r1
   2d0f8:	movw	r0, #0
   2d0fc:	movhi	r0, #1
   2d100:	str	r0, [sp, #8]
   2d104:	ldr	r0, [sp, #8]
   2d108:	tst	r0, #1
   2d10c:	beq	2d11c <__assert_fail@plt+0x1bc88>
   2d110:	movw	r0, #11
   2d114:	str	r0, [fp, #-32]	; 0xffffffe0
   2d118:	b	2d298 <__assert_fail@plt+0x1be04>
   2d11c:	b	2d120 <__assert_fail@plt+0x1bc8c>
   2d120:	ldr	r0, [fp, #12]
   2d124:	ldr	r0, [r0, #92]	; 0x5c
   2d128:	cmp	r0, #1
   2d12c:	ble	2d23c <__assert_fail@plt+0x1bda8>
   2d130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d134:	ldr	r0, [r0]
   2d138:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d13c:	ldr	r1, [r1, #32]
   2d140:	cmp	r0, r1
   2d144:	bne	2d208 <__assert_fail@plt+0x1bd74>
   2d148:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d14c:	ldr	r0, [r0, #32]
   2d150:	mov	r1, #1
   2d154:	orr	r0, r1, r0, lsl #1
   2d158:	str	r0, [sp, #52]	; 0x34
   2d15c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d160:	ldr	r0, [r0, #4]
   2d164:	ldr	r1, [sp, #52]	; 0x34
   2d168:	lsl	r1, r1, #2
   2d16c:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2d170:	str	r0, [sp, #60]	; 0x3c
   2d174:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d178:	ldr	r0, [r0, #8]
   2d17c:	ldr	r1, [sp, #52]	; 0x34
   2d180:	lsl	r1, r1, #2
   2d184:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2d188:	str	r0, [sp, #56]	; 0x38
   2d18c:	ldr	r0, [sp, #60]	; 0x3c
   2d190:	movw	r1, #0
   2d194:	cmp	r0, r1
   2d198:	movw	r0, #1
   2d19c:	str	r0, [sp, #4]
   2d1a0:	beq	2d1bc <__assert_fail@plt+0x1bd28>
   2d1a4:	ldr	r0, [sp, #56]	; 0x38
   2d1a8:	movw	r1, #0
   2d1ac:	cmp	r0, r1
   2d1b0:	movw	r0, #0
   2d1b4:	moveq	r0, #1
   2d1b8:	str	r0, [sp, #4]
   2d1bc:	ldr	r0, [sp, #4]
   2d1c0:	tst	r0, #1
   2d1c4:	beq	2d1e4 <__assert_fail@plt+0x1bd50>
   2d1c8:	ldr	r0, [sp, #60]	; 0x3c
   2d1cc:	bl	1388c <__assert_fail@plt+0x23f8>
   2d1d0:	ldr	r0, [sp, #56]	; 0x38
   2d1d4:	bl	1388c <__assert_fail@plt+0x23f8>
   2d1d8:	movw	r0, #12
   2d1dc:	str	r0, [fp, #-32]	; 0xffffffe0
   2d1e0:	b	2d298 <__assert_fail@plt+0x1be04>
   2d1e4:	ldr	r0, [sp, #60]	; 0x3c
   2d1e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d1ec:	str	r0, [r1, #4]
   2d1f0:	ldr	r0, [sp, #56]	; 0x38
   2d1f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d1f8:	str	r0, [r1, #8]
   2d1fc:	ldr	r0, [sp, #52]	; 0x34
   2d200:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d204:	str	r0, [r1]
   2d208:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d20c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d210:	ldr	r2, [r1, #4]
   2d214:	ldr	r1, [r1, #32]
   2d218:	str	r0, [r2, r1, lsl #2]
   2d21c:	ldr	r0, [sp, #64]	; 0x40
   2d220:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d224:	ldr	r2, [r1, #8]
   2d228:	ldr	r3, [r1, #32]
   2d22c:	add	ip, r3, #1
   2d230:	str	ip, [r1, #32]
   2d234:	add	r1, r2, r3, lsl #2
   2d238:	str	r0, [r1]
   2d23c:	movw	r0, #0
   2d240:	str	r0, [sp, #48]	; 0x30
   2d244:	ldr	r0, [sp, #48]	; 0x30
   2d248:	cmp	r0, #256	; 0x100
   2d24c:	bcs	2d290 <__assert_fail@plt+0x1bdfc>
   2d250:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d254:	ldr	r1, [sp, #48]	; 0x30
   2d258:	cmp	r0, r1
   2d25c:	bhi	2d27c <__assert_fail@plt+0x1bde8>
   2d260:	ldr	r0, [sp, #48]	; 0x30
   2d264:	ldr	r1, [sp, #64]	; 0x40
   2d268:	cmp	r0, r1
   2d26c:	bhi	2d27c <__assert_fail@plt+0x1bde8>
   2d270:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d274:	ldr	r1, [sp, #48]	; 0x30
   2d278:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d27c:	b	2d280 <__assert_fail@plt+0x1bdec>
   2d280:	ldr	r0, [sp, #48]	; 0x30
   2d284:	add	r0, r0, #1
   2d288:	str	r0, [sp, #48]	; 0x30
   2d28c:	b	2d244 <__assert_fail@plt+0x1bdb0>
   2d290:	movw	r0, #0
   2d294:	str	r0, [fp, #-32]	; 0xffffffe0
   2d298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d29c:	sub	sp, fp, #28
   2d2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d2a4:	push	{fp, lr}
   2d2a8:	mov	fp, sp
   2d2ac:	sub	sp, sp, #24
   2d2b0:	str	r0, [fp, #-8]
   2d2b4:	str	r1, [sp, #12]
   2d2b8:	str	r2, [sp, #8]
   2d2bc:	str	r3, [sp, #4]
   2d2c0:	ldr	r0, [sp, #4]
   2d2c4:	bl	1138c <strlen@plt>
   2d2c8:	cmp	r0, #1
   2d2cc:	beq	2d2dc <__assert_fail@plt+0x1be48>
   2d2d0:	movw	r0, #3
   2d2d4:	str	r0, [fp, #-4]
   2d2d8:	b	2d2f4 <__assert_fail@plt+0x1be60>
   2d2dc:	ldr	r0, [fp, #-8]
   2d2e0:	ldr	r1, [sp, #4]
   2d2e4:	ldrb	r1, [r1]
   2d2e8:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d2ec:	movw	r0, #0
   2d2f0:	str	r0, [fp, #-4]
   2d2f4:	ldr	r0, [fp, #-4]
   2d2f8:	mov	sp, fp
   2d2fc:	pop	{fp, pc}
   2d300:	push	{r4, r5, fp, lr}
   2d304:	add	fp, sp, #8
   2d308:	sub	sp, sp, #40	; 0x28
   2d30c:	ldr	ip, [fp, #20]
   2d310:	ldr	lr, [fp, #16]
   2d314:	ldr	r4, [fp, #12]
   2d318:	ldr	r5, [fp, #8]
   2d31c:	str	r0, [fp, #-16]
   2d320:	str	r1, [fp, #-20]	; 0xffffffec
   2d324:	str	r2, [sp, #24]
   2d328:	str	r3, [sp, #20]
   2d32c:	ldr	r0, [sp, #20]
   2d330:	str	ip, [sp, #12]
   2d334:	str	lr, [sp, #8]
   2d338:	str	r4, [sp, #4]
   2d33c:	str	r5, [sp]
   2d340:	bl	1138c <strlen@plt>
   2d344:	str	r0, [sp, #16]
   2d348:	ldr	r0, [sp, #16]
   2d34c:	cmp	r0, #1
   2d350:	beq	2d360 <__assert_fail@plt+0x1becc>
   2d354:	movw	r0, #3
   2d358:	str	r0, [fp, #-12]
   2d35c:	b	2d378 <__assert_fail@plt+0x1bee4>
   2d360:	ldr	r0, [fp, #-16]
   2d364:	ldr	r1, [sp, #20]
   2d368:	ldrb	r1, [r1]
   2d36c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d370:	movw	r0, #0
   2d374:	str	r0, [fp, #-12]
   2d378:	ldr	r0, [fp, #-12]
   2d37c:	sub	sp, fp, #8
   2d380:	pop	{r4, r5, fp, pc}
   2d384:	push	{fp, lr}
   2d388:	mov	fp, sp
   2d38c:	sub	sp, sp, #40	; 0x28
   2d390:	ldr	ip, [fp, #12]
   2d394:	ldr	lr, [fp, #8]
   2d398:	str	r0, [fp, #-8]
   2d39c:	str	r1, [fp, #-12]
   2d3a0:	str	r2, [fp, #-16]
   2d3a4:	str	r3, [sp, #20]
   2d3a8:	ldr	r0, [fp, #8]
   2d3ac:	str	r0, [sp, #12]
   2d3b0:	ldr	r0, [fp, #12]
   2d3b4:	and	r0, r0, #4194304	; 0x400000
   2d3b8:	cmp	r0, #0
   2d3bc:	beq	2d3fc <__assert_fail@plt+0x1bf68>
   2d3c0:	ldr	r0, [sp, #12]
   2d3c4:	movw	r1, #22348	; 0x574c
   2d3c8:	movt	r1, #4
   2d3cc:	bl	111d0 <strcmp@plt>
   2d3d0:	cmp	r0, #0
   2d3d4:	beq	2d3f0 <__assert_fail@plt+0x1bf5c>
   2d3d8:	ldr	r0, [sp, #12]
   2d3dc:	movw	r1, #22354	; 0x5752
   2d3e0:	movt	r1, #4
   2d3e4:	bl	111d0 <strcmp@plt>
   2d3e8:	cmp	r0, #0
   2d3ec:	bne	2d3fc <__assert_fail@plt+0x1bf68>
   2d3f0:	movw	r0, #22360	; 0x5758
   2d3f4:	movt	r0, #4
   2d3f8:	str	r0, [sp, #12]
   2d3fc:	ldr	r0, [sp, #20]
   2d400:	ldr	r0, [r0]
   2d404:	ldr	r1, [fp, #-16]
   2d408:	ldr	r1, [r1, #36]	; 0x24
   2d40c:	cmp	r0, r1
   2d410:	bne	2d474 <__assert_fail@plt+0x1bfe0>
   2d414:	ldr	r0, [fp, #-16]
   2d418:	ldr	r0, [r0, #36]	; 0x24
   2d41c:	mov	r1, #1
   2d420:	orr	r0, r1, r0, lsl #1
   2d424:	str	r0, [sp, #8]
   2d428:	ldr	r0, [fp, #-16]
   2d42c:	ldr	r0, [r0, #12]
   2d430:	ldr	r1, [sp, #8]
   2d434:	lsl	r1, r1, #2
   2d438:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2d43c:	str	r0, [sp, #4]
   2d440:	ldr	r0, [sp, #4]
   2d444:	movw	r1, #0
   2d448:	cmp	r0, r1
   2d44c:	bne	2d45c <__assert_fail@plt+0x1bfc8>
   2d450:	movw	r0, #12
   2d454:	str	r0, [fp, #-4]
   2d458:	b	2e018 <__assert_fail@plt+0x1cb84>
   2d45c:	ldr	r0, [sp, #4]
   2d460:	ldr	r1, [fp, #-16]
   2d464:	str	r0, [r1, #12]
   2d468:	ldr	r0, [sp, #8]
   2d46c:	ldr	r1, [sp, #20]
   2d470:	str	r0, [r1]
   2d474:	ldr	r0, [sp, #12]
   2d478:	bl	111a0 <wctype@plt>
   2d47c:	ldr	r1, [fp, #-16]
   2d480:	ldr	r2, [r1, #12]
   2d484:	ldr	r3, [r1, #36]	; 0x24
   2d488:	add	ip, r3, #1
   2d48c:	str	ip, [r1, #36]	; 0x24
   2d490:	add	r1, r2, r3, lsl #2
   2d494:	str	r0, [r1]
   2d498:	ldr	r0, [sp, #12]
   2d49c:	movw	r1, #22336	; 0x5740
   2d4a0:	movt	r1, #4
   2d4a4:	bl	111d0 <strcmp@plt>
   2d4a8:	cmp	r0, #0
   2d4ac:	bne	2d588 <__assert_fail@plt+0x1c0f4>
   2d4b0:	b	2d4b4 <__assert_fail@plt+0x1c020>
   2d4b4:	ldr	r0, [fp, #-8]
   2d4b8:	movw	r1, #0
   2d4bc:	cmp	r0, r1
   2d4c0:	beq	2d528 <__assert_fail@plt+0x1c094>
   2d4c4:	movw	r0, #0
   2d4c8:	str	r0, [sp, #16]
   2d4cc:	ldr	r0, [sp, #16]
   2d4d0:	cmp	r0, #256	; 0x100
   2d4d4:	bge	2d524 <__assert_fail@plt+0x1c090>
   2d4d8:	bl	11368 <__ctype_b_loc@plt>
   2d4dc:	ldr	r0, [r0]
   2d4e0:	ldr	r1, [sp, #16]
   2d4e4:	add	r0, r0, r1, lsl #1
   2d4e8:	ldrh	r0, [r0]
   2d4ec:	and	r0, r0, #8
   2d4f0:	cmp	r0, #0
   2d4f4:	beq	2d510 <__assert_fail@plt+0x1c07c>
   2d4f8:	ldr	r0, [fp, #-12]
   2d4fc:	ldr	r1, [fp, #-8]
   2d500:	ldr	r2, [sp, #16]
   2d504:	add	r1, r1, r2
   2d508:	ldrb	r1, [r1]
   2d50c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d510:	b	2d514 <__assert_fail@plt+0x1c080>
   2d514:	ldr	r0, [sp, #16]
   2d518:	add	r0, r0, #1
   2d51c:	str	r0, [sp, #16]
   2d520:	b	2d4cc <__assert_fail@plt+0x1c038>
   2d524:	b	2d580 <__assert_fail@plt+0x1c0ec>
   2d528:	movw	r0, #0
   2d52c:	str	r0, [sp, #16]
   2d530:	ldr	r0, [sp, #16]
   2d534:	cmp	r0, #256	; 0x100
   2d538:	bge	2d57c <__assert_fail@plt+0x1c0e8>
   2d53c:	bl	11368 <__ctype_b_loc@plt>
   2d540:	ldr	r0, [r0]
   2d544:	ldr	r1, [sp, #16]
   2d548:	add	r0, r0, r1, lsl #1
   2d54c:	ldrh	r0, [r0]
   2d550:	and	r0, r0, #8
   2d554:	cmp	r0, #0
   2d558:	beq	2d568 <__assert_fail@plt+0x1c0d4>
   2d55c:	ldr	r0, [fp, #-12]
   2d560:	ldr	r1, [sp, #16]
   2d564:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d568:	b	2d56c <__assert_fail@plt+0x1c0d8>
   2d56c:	ldr	r0, [sp, #16]
   2d570:	add	r0, r0, #1
   2d574:	str	r0, [sp, #16]
   2d578:	b	2d530 <__assert_fail@plt+0x1c09c>
   2d57c:	b	2d580 <__assert_fail@plt+0x1c0ec>
   2d580:	b	2d584 <__assert_fail@plt+0x1c0f0>
   2d584:	b	2e010 <__assert_fail@plt+0x1cb7c>
   2d588:	ldr	r0, [sp, #12]
   2d58c:	movw	r1, #22366	; 0x575e
   2d590:	movt	r1, #4
   2d594:	bl	111d0 <strcmp@plt>
   2d598:	cmp	r0, #0
   2d59c:	bne	2d678 <__assert_fail@plt+0x1c1e4>
   2d5a0:	b	2d5a4 <__assert_fail@plt+0x1c110>
   2d5a4:	ldr	r0, [fp, #-8]
   2d5a8:	movw	r1, #0
   2d5ac:	cmp	r0, r1
   2d5b0:	beq	2d618 <__assert_fail@plt+0x1c184>
   2d5b4:	movw	r0, #0
   2d5b8:	str	r0, [sp, #16]
   2d5bc:	ldr	r0, [sp, #16]
   2d5c0:	cmp	r0, #256	; 0x100
   2d5c4:	bge	2d614 <__assert_fail@plt+0x1c180>
   2d5c8:	bl	11368 <__ctype_b_loc@plt>
   2d5cc:	ldr	r0, [r0]
   2d5d0:	ldr	r1, [sp, #16]
   2d5d4:	add	r0, r0, r1, lsl #1
   2d5d8:	ldrh	r0, [r0]
   2d5dc:	and	r0, r0, #2
   2d5e0:	cmp	r0, #0
   2d5e4:	beq	2d600 <__assert_fail@plt+0x1c16c>
   2d5e8:	ldr	r0, [fp, #-12]
   2d5ec:	ldr	r1, [fp, #-8]
   2d5f0:	ldr	r2, [sp, #16]
   2d5f4:	add	r1, r1, r2
   2d5f8:	ldrb	r1, [r1]
   2d5fc:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d600:	b	2d604 <__assert_fail@plt+0x1c170>
   2d604:	ldr	r0, [sp, #16]
   2d608:	add	r0, r0, #1
   2d60c:	str	r0, [sp, #16]
   2d610:	b	2d5bc <__assert_fail@plt+0x1c128>
   2d614:	b	2d670 <__assert_fail@plt+0x1c1dc>
   2d618:	movw	r0, #0
   2d61c:	str	r0, [sp, #16]
   2d620:	ldr	r0, [sp, #16]
   2d624:	cmp	r0, #256	; 0x100
   2d628:	bge	2d66c <__assert_fail@plt+0x1c1d8>
   2d62c:	bl	11368 <__ctype_b_loc@plt>
   2d630:	ldr	r0, [r0]
   2d634:	ldr	r1, [sp, #16]
   2d638:	add	r0, r0, r1, lsl #1
   2d63c:	ldrh	r0, [r0]
   2d640:	and	r0, r0, #2
   2d644:	cmp	r0, #0
   2d648:	beq	2d658 <__assert_fail@plt+0x1c1c4>
   2d64c:	ldr	r0, [fp, #-12]
   2d650:	ldr	r1, [sp, #16]
   2d654:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d658:	b	2d65c <__assert_fail@plt+0x1c1c8>
   2d65c:	ldr	r0, [sp, #16]
   2d660:	add	r0, r0, #1
   2d664:	str	r0, [sp, #16]
   2d668:	b	2d620 <__assert_fail@plt+0x1c18c>
   2d66c:	b	2d670 <__assert_fail@plt+0x1c1dc>
   2d670:	b	2d674 <__assert_fail@plt+0x1c1e0>
   2d674:	b	2e00c <__assert_fail@plt+0x1cb78>
   2d678:	ldr	r0, [sp, #12]
   2d67c:	movw	r1, #22354	; 0x5752
   2d680:	movt	r1, #4
   2d684:	bl	111d0 <strcmp@plt>
   2d688:	cmp	r0, #0
   2d68c:	bne	2d768 <__assert_fail@plt+0x1c2d4>
   2d690:	b	2d694 <__assert_fail@plt+0x1c200>
   2d694:	ldr	r0, [fp, #-8]
   2d698:	movw	r1, #0
   2d69c:	cmp	r0, r1
   2d6a0:	beq	2d708 <__assert_fail@plt+0x1c274>
   2d6a4:	movw	r0, #0
   2d6a8:	str	r0, [sp, #16]
   2d6ac:	ldr	r0, [sp, #16]
   2d6b0:	cmp	r0, #256	; 0x100
   2d6b4:	bge	2d704 <__assert_fail@plt+0x1c270>
   2d6b8:	bl	11368 <__ctype_b_loc@plt>
   2d6bc:	ldr	r0, [r0]
   2d6c0:	ldr	r1, [sp, #16]
   2d6c4:	add	r0, r0, r1, lsl #1
   2d6c8:	ldrh	r0, [r0]
   2d6cc:	and	r0, r0, #512	; 0x200
   2d6d0:	cmp	r0, #0
   2d6d4:	beq	2d6f0 <__assert_fail@plt+0x1c25c>
   2d6d8:	ldr	r0, [fp, #-12]
   2d6dc:	ldr	r1, [fp, #-8]
   2d6e0:	ldr	r2, [sp, #16]
   2d6e4:	add	r1, r1, r2
   2d6e8:	ldrb	r1, [r1]
   2d6ec:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d6f0:	b	2d6f4 <__assert_fail@plt+0x1c260>
   2d6f4:	ldr	r0, [sp, #16]
   2d6f8:	add	r0, r0, #1
   2d6fc:	str	r0, [sp, #16]
   2d700:	b	2d6ac <__assert_fail@plt+0x1c218>
   2d704:	b	2d760 <__assert_fail@plt+0x1c2cc>
   2d708:	movw	r0, #0
   2d70c:	str	r0, [sp, #16]
   2d710:	ldr	r0, [sp, #16]
   2d714:	cmp	r0, #256	; 0x100
   2d718:	bge	2d75c <__assert_fail@plt+0x1c2c8>
   2d71c:	bl	11368 <__ctype_b_loc@plt>
   2d720:	ldr	r0, [r0]
   2d724:	ldr	r1, [sp, #16]
   2d728:	add	r0, r0, r1, lsl #1
   2d72c:	ldrh	r0, [r0]
   2d730:	and	r0, r0, #512	; 0x200
   2d734:	cmp	r0, #0
   2d738:	beq	2d748 <__assert_fail@plt+0x1c2b4>
   2d73c:	ldr	r0, [fp, #-12]
   2d740:	ldr	r1, [sp, #16]
   2d744:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d748:	b	2d74c <__assert_fail@plt+0x1c2b8>
   2d74c:	ldr	r0, [sp, #16]
   2d750:	add	r0, r0, #1
   2d754:	str	r0, [sp, #16]
   2d758:	b	2d710 <__assert_fail@plt+0x1c27c>
   2d75c:	b	2d760 <__assert_fail@plt+0x1c2cc>
   2d760:	b	2d764 <__assert_fail@plt+0x1c2d0>
   2d764:	b	2e008 <__assert_fail@plt+0x1cb74>
   2d768:	ldr	r0, [sp, #12]
   2d76c:	movw	r1, #22342	; 0x5746
   2d770:	movt	r1, #4
   2d774:	bl	111d0 <strcmp@plt>
   2d778:	cmp	r0, #0
   2d77c:	bne	2d858 <__assert_fail@plt+0x1c3c4>
   2d780:	b	2d784 <__assert_fail@plt+0x1c2f0>
   2d784:	ldr	r0, [fp, #-8]
   2d788:	movw	r1, #0
   2d78c:	cmp	r0, r1
   2d790:	beq	2d7f8 <__assert_fail@plt+0x1c364>
   2d794:	movw	r0, #0
   2d798:	str	r0, [sp, #16]
   2d79c:	ldr	r0, [sp, #16]
   2d7a0:	cmp	r0, #256	; 0x100
   2d7a4:	bge	2d7f4 <__assert_fail@plt+0x1c360>
   2d7a8:	bl	11368 <__ctype_b_loc@plt>
   2d7ac:	ldr	r0, [r0]
   2d7b0:	ldr	r1, [sp, #16]
   2d7b4:	add	r0, r0, r1, lsl #1
   2d7b8:	ldrh	r0, [r0]
   2d7bc:	and	r0, r0, #8192	; 0x2000
   2d7c0:	cmp	r0, #0
   2d7c4:	beq	2d7e0 <__assert_fail@plt+0x1c34c>
   2d7c8:	ldr	r0, [fp, #-12]
   2d7cc:	ldr	r1, [fp, #-8]
   2d7d0:	ldr	r2, [sp, #16]
   2d7d4:	add	r1, r1, r2
   2d7d8:	ldrb	r1, [r1]
   2d7dc:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d7e0:	b	2d7e4 <__assert_fail@plt+0x1c350>
   2d7e4:	ldr	r0, [sp, #16]
   2d7e8:	add	r0, r0, #1
   2d7ec:	str	r0, [sp, #16]
   2d7f0:	b	2d79c <__assert_fail@plt+0x1c308>
   2d7f4:	b	2d850 <__assert_fail@plt+0x1c3bc>
   2d7f8:	movw	r0, #0
   2d7fc:	str	r0, [sp, #16]
   2d800:	ldr	r0, [sp, #16]
   2d804:	cmp	r0, #256	; 0x100
   2d808:	bge	2d84c <__assert_fail@plt+0x1c3b8>
   2d80c:	bl	11368 <__ctype_b_loc@plt>
   2d810:	ldr	r0, [r0]
   2d814:	ldr	r1, [sp, #16]
   2d818:	add	r0, r0, r1, lsl #1
   2d81c:	ldrh	r0, [r0]
   2d820:	and	r0, r0, #8192	; 0x2000
   2d824:	cmp	r0, #0
   2d828:	beq	2d838 <__assert_fail@plt+0x1c3a4>
   2d82c:	ldr	r0, [fp, #-12]
   2d830:	ldr	r1, [sp, #16]
   2d834:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d838:	b	2d83c <__assert_fail@plt+0x1c3a8>
   2d83c:	ldr	r0, [sp, #16]
   2d840:	add	r0, r0, #1
   2d844:	str	r0, [sp, #16]
   2d848:	b	2d800 <__assert_fail@plt+0x1c36c>
   2d84c:	b	2d850 <__assert_fail@plt+0x1c3bc>
   2d850:	b	2d854 <__assert_fail@plt+0x1c3c0>
   2d854:	b	2e004 <__assert_fail@plt+0x1cb70>
   2d858:	ldr	r0, [sp, #12]
   2d85c:	movw	r1, #22360	; 0x5758
   2d860:	movt	r1, #4
   2d864:	bl	111d0 <strcmp@plt>
   2d868:	cmp	r0, #0
   2d86c:	bne	2d948 <__assert_fail@plt+0x1c4b4>
   2d870:	b	2d874 <__assert_fail@plt+0x1c3e0>
   2d874:	ldr	r0, [fp, #-8]
   2d878:	movw	r1, #0
   2d87c:	cmp	r0, r1
   2d880:	beq	2d8e8 <__assert_fail@plt+0x1c454>
   2d884:	movw	r0, #0
   2d888:	str	r0, [sp, #16]
   2d88c:	ldr	r0, [sp, #16]
   2d890:	cmp	r0, #256	; 0x100
   2d894:	bge	2d8e4 <__assert_fail@plt+0x1c450>
   2d898:	bl	11368 <__ctype_b_loc@plt>
   2d89c:	ldr	r0, [r0]
   2d8a0:	ldr	r1, [sp, #16]
   2d8a4:	add	r0, r0, r1, lsl #1
   2d8a8:	ldrh	r0, [r0]
   2d8ac:	and	r0, r0, #1024	; 0x400
   2d8b0:	cmp	r0, #0
   2d8b4:	beq	2d8d0 <__assert_fail@plt+0x1c43c>
   2d8b8:	ldr	r0, [fp, #-12]
   2d8bc:	ldr	r1, [fp, #-8]
   2d8c0:	ldr	r2, [sp, #16]
   2d8c4:	add	r1, r1, r2
   2d8c8:	ldrb	r1, [r1]
   2d8cc:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d8d0:	b	2d8d4 <__assert_fail@plt+0x1c440>
   2d8d4:	ldr	r0, [sp, #16]
   2d8d8:	add	r0, r0, #1
   2d8dc:	str	r0, [sp, #16]
   2d8e0:	b	2d88c <__assert_fail@plt+0x1c3f8>
   2d8e4:	b	2d940 <__assert_fail@plt+0x1c4ac>
   2d8e8:	movw	r0, #0
   2d8ec:	str	r0, [sp, #16]
   2d8f0:	ldr	r0, [sp, #16]
   2d8f4:	cmp	r0, #256	; 0x100
   2d8f8:	bge	2d93c <__assert_fail@plt+0x1c4a8>
   2d8fc:	bl	11368 <__ctype_b_loc@plt>
   2d900:	ldr	r0, [r0]
   2d904:	ldr	r1, [sp, #16]
   2d908:	add	r0, r0, r1, lsl #1
   2d90c:	ldrh	r0, [r0]
   2d910:	and	r0, r0, #1024	; 0x400
   2d914:	cmp	r0, #0
   2d918:	beq	2d928 <__assert_fail@plt+0x1c494>
   2d91c:	ldr	r0, [fp, #-12]
   2d920:	ldr	r1, [sp, #16]
   2d924:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d928:	b	2d92c <__assert_fail@plt+0x1c498>
   2d92c:	ldr	r0, [sp, #16]
   2d930:	add	r0, r0, #1
   2d934:	str	r0, [sp, #16]
   2d938:	b	2d8f0 <__assert_fail@plt+0x1c45c>
   2d93c:	b	2d940 <__assert_fail@plt+0x1c4ac>
   2d940:	b	2d944 <__assert_fail@plt+0x1c4b0>
   2d944:	b	2e000 <__assert_fail@plt+0x1cb6c>
   2d948:	ldr	r0, [sp, #12]
   2d94c:	movw	r1, #22397	; 0x577d
   2d950:	movt	r1, #4
   2d954:	bl	111d0 <strcmp@plt>
   2d958:	cmp	r0, #0
   2d95c:	bne	2da38 <__assert_fail@plt+0x1c5a4>
   2d960:	b	2d964 <__assert_fail@plt+0x1c4d0>
   2d964:	ldr	r0, [fp, #-8]
   2d968:	movw	r1, #0
   2d96c:	cmp	r0, r1
   2d970:	beq	2d9d8 <__assert_fail@plt+0x1c544>
   2d974:	movw	r0, #0
   2d978:	str	r0, [sp, #16]
   2d97c:	ldr	r0, [sp, #16]
   2d980:	cmp	r0, #256	; 0x100
   2d984:	bge	2d9d4 <__assert_fail@plt+0x1c540>
   2d988:	bl	11368 <__ctype_b_loc@plt>
   2d98c:	ldr	r0, [r0]
   2d990:	ldr	r1, [sp, #16]
   2d994:	add	r0, r0, r1, lsl #1
   2d998:	ldrh	r0, [r0]
   2d99c:	and	r0, r0, #2048	; 0x800
   2d9a0:	cmp	r0, #0
   2d9a4:	beq	2d9c0 <__assert_fail@plt+0x1c52c>
   2d9a8:	ldr	r0, [fp, #-12]
   2d9ac:	ldr	r1, [fp, #-8]
   2d9b0:	ldr	r2, [sp, #16]
   2d9b4:	add	r1, r1, r2
   2d9b8:	ldrb	r1, [r1]
   2d9bc:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2d9c0:	b	2d9c4 <__assert_fail@plt+0x1c530>
   2d9c4:	ldr	r0, [sp, #16]
   2d9c8:	add	r0, r0, #1
   2d9cc:	str	r0, [sp, #16]
   2d9d0:	b	2d97c <__assert_fail@plt+0x1c4e8>
   2d9d4:	b	2da30 <__assert_fail@plt+0x1c59c>
   2d9d8:	movw	r0, #0
   2d9dc:	str	r0, [sp, #16]
   2d9e0:	ldr	r0, [sp, #16]
   2d9e4:	cmp	r0, #256	; 0x100
   2d9e8:	bge	2da2c <__assert_fail@plt+0x1c598>
   2d9ec:	bl	11368 <__ctype_b_loc@plt>
   2d9f0:	ldr	r0, [r0]
   2d9f4:	ldr	r1, [sp, #16]
   2d9f8:	add	r0, r0, r1, lsl #1
   2d9fc:	ldrh	r0, [r0]
   2da00:	and	r0, r0, #2048	; 0x800
   2da04:	cmp	r0, #0
   2da08:	beq	2da18 <__assert_fail@plt+0x1c584>
   2da0c:	ldr	r0, [fp, #-12]
   2da10:	ldr	r1, [sp, #16]
   2da14:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2da18:	b	2da1c <__assert_fail@plt+0x1c588>
   2da1c:	ldr	r0, [sp, #16]
   2da20:	add	r0, r0, #1
   2da24:	str	r0, [sp, #16]
   2da28:	b	2d9e0 <__assert_fail@plt+0x1c54c>
   2da2c:	b	2da30 <__assert_fail@plt+0x1c59c>
   2da30:	b	2da34 <__assert_fail@plt+0x1c5a0>
   2da34:	b	2dffc <__assert_fail@plt+0x1cb68>
   2da38:	ldr	r0, [sp, #12]
   2da3c:	movw	r1, #22372	; 0x5764
   2da40:	movt	r1, #4
   2da44:	bl	111d0 <strcmp@plt>
   2da48:	cmp	r0, #0
   2da4c:	bne	2db28 <__assert_fail@plt+0x1c694>
   2da50:	b	2da54 <__assert_fail@plt+0x1c5c0>
   2da54:	ldr	r0, [fp, #-8]
   2da58:	movw	r1, #0
   2da5c:	cmp	r0, r1
   2da60:	beq	2dac8 <__assert_fail@plt+0x1c634>
   2da64:	movw	r0, #0
   2da68:	str	r0, [sp, #16]
   2da6c:	ldr	r0, [sp, #16]
   2da70:	cmp	r0, #256	; 0x100
   2da74:	bge	2dac4 <__assert_fail@plt+0x1c630>
   2da78:	bl	11368 <__ctype_b_loc@plt>
   2da7c:	ldr	r0, [r0]
   2da80:	ldr	r1, [sp, #16]
   2da84:	add	r0, r0, r1, lsl #1
   2da88:	ldrh	r0, [r0]
   2da8c:	and	r0, r0, #16384	; 0x4000
   2da90:	cmp	r0, #0
   2da94:	beq	2dab0 <__assert_fail@plt+0x1c61c>
   2da98:	ldr	r0, [fp, #-12]
   2da9c:	ldr	r1, [fp, #-8]
   2daa0:	ldr	r2, [sp, #16]
   2daa4:	add	r1, r1, r2
   2daa8:	ldrb	r1, [r1]
   2daac:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dab0:	b	2dab4 <__assert_fail@plt+0x1c620>
   2dab4:	ldr	r0, [sp, #16]
   2dab8:	add	r0, r0, #1
   2dabc:	str	r0, [sp, #16]
   2dac0:	b	2da6c <__assert_fail@plt+0x1c5d8>
   2dac4:	b	2db20 <__assert_fail@plt+0x1c68c>
   2dac8:	movw	r0, #0
   2dacc:	str	r0, [sp, #16]
   2dad0:	ldr	r0, [sp, #16]
   2dad4:	cmp	r0, #256	; 0x100
   2dad8:	bge	2db1c <__assert_fail@plt+0x1c688>
   2dadc:	bl	11368 <__ctype_b_loc@plt>
   2dae0:	ldr	r0, [r0]
   2dae4:	ldr	r1, [sp, #16]
   2dae8:	add	r0, r0, r1, lsl #1
   2daec:	ldrh	r0, [r0]
   2daf0:	and	r0, r0, #16384	; 0x4000
   2daf4:	cmp	r0, #0
   2daf8:	beq	2db08 <__assert_fail@plt+0x1c674>
   2dafc:	ldr	r0, [fp, #-12]
   2db00:	ldr	r1, [sp, #16]
   2db04:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2db08:	b	2db0c <__assert_fail@plt+0x1c678>
   2db0c:	ldr	r0, [sp, #16]
   2db10:	add	r0, r0, #1
   2db14:	str	r0, [sp, #16]
   2db18:	b	2dad0 <__assert_fail@plt+0x1c63c>
   2db1c:	b	2db20 <__assert_fail@plt+0x1c68c>
   2db20:	b	2db24 <__assert_fail@plt+0x1c690>
   2db24:	b	2dff8 <__assert_fail@plt+0x1cb64>
   2db28:	ldr	r0, [sp, #12]
   2db2c:	movw	r1, #22348	; 0x574c
   2db30:	movt	r1, #4
   2db34:	bl	111d0 <strcmp@plt>
   2db38:	cmp	r0, #0
   2db3c:	bne	2dc18 <__assert_fail@plt+0x1c784>
   2db40:	b	2db44 <__assert_fail@plt+0x1c6b0>
   2db44:	ldr	r0, [fp, #-8]
   2db48:	movw	r1, #0
   2db4c:	cmp	r0, r1
   2db50:	beq	2dbb8 <__assert_fail@plt+0x1c724>
   2db54:	movw	r0, #0
   2db58:	str	r0, [sp, #16]
   2db5c:	ldr	r0, [sp, #16]
   2db60:	cmp	r0, #256	; 0x100
   2db64:	bge	2dbb4 <__assert_fail@plt+0x1c720>
   2db68:	bl	11368 <__ctype_b_loc@plt>
   2db6c:	ldr	r0, [r0]
   2db70:	ldr	r1, [sp, #16]
   2db74:	add	r0, r0, r1, lsl #1
   2db78:	ldrh	r0, [r0]
   2db7c:	and	r0, r0, #256	; 0x100
   2db80:	cmp	r0, #0
   2db84:	beq	2dba0 <__assert_fail@plt+0x1c70c>
   2db88:	ldr	r0, [fp, #-12]
   2db8c:	ldr	r1, [fp, #-8]
   2db90:	ldr	r2, [sp, #16]
   2db94:	add	r1, r1, r2
   2db98:	ldrb	r1, [r1]
   2db9c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dba0:	b	2dba4 <__assert_fail@plt+0x1c710>
   2dba4:	ldr	r0, [sp, #16]
   2dba8:	add	r0, r0, #1
   2dbac:	str	r0, [sp, #16]
   2dbb0:	b	2db5c <__assert_fail@plt+0x1c6c8>
   2dbb4:	b	2dc10 <__assert_fail@plt+0x1c77c>
   2dbb8:	movw	r0, #0
   2dbbc:	str	r0, [sp, #16]
   2dbc0:	ldr	r0, [sp, #16]
   2dbc4:	cmp	r0, #256	; 0x100
   2dbc8:	bge	2dc0c <__assert_fail@plt+0x1c778>
   2dbcc:	bl	11368 <__ctype_b_loc@plt>
   2dbd0:	ldr	r0, [r0]
   2dbd4:	ldr	r1, [sp, #16]
   2dbd8:	add	r0, r0, r1, lsl #1
   2dbdc:	ldrh	r0, [r0]
   2dbe0:	and	r0, r0, #256	; 0x100
   2dbe4:	cmp	r0, #0
   2dbe8:	beq	2dbf8 <__assert_fail@plt+0x1c764>
   2dbec:	ldr	r0, [fp, #-12]
   2dbf0:	ldr	r1, [sp, #16]
   2dbf4:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dbf8:	b	2dbfc <__assert_fail@plt+0x1c768>
   2dbfc:	ldr	r0, [sp, #16]
   2dc00:	add	r0, r0, #1
   2dc04:	str	r0, [sp, #16]
   2dc08:	b	2dbc0 <__assert_fail@plt+0x1c72c>
   2dc0c:	b	2dc10 <__assert_fail@plt+0x1c77c>
   2dc10:	b	2dc14 <__assert_fail@plt+0x1c780>
   2dc14:	b	2dff4 <__assert_fail@plt+0x1cb60>
   2dc18:	ldr	r0, [sp, #12]
   2dc1c:	movw	r1, #22378	; 0x576a
   2dc20:	movt	r1, #4
   2dc24:	bl	111d0 <strcmp@plt>
   2dc28:	cmp	r0, #0
   2dc2c:	bne	2dd08 <__assert_fail@plt+0x1c874>
   2dc30:	b	2dc34 <__assert_fail@plt+0x1c7a0>
   2dc34:	ldr	r0, [fp, #-8]
   2dc38:	movw	r1, #0
   2dc3c:	cmp	r0, r1
   2dc40:	beq	2dca8 <__assert_fail@plt+0x1c814>
   2dc44:	movw	r0, #0
   2dc48:	str	r0, [sp, #16]
   2dc4c:	ldr	r0, [sp, #16]
   2dc50:	cmp	r0, #256	; 0x100
   2dc54:	bge	2dca4 <__assert_fail@plt+0x1c810>
   2dc58:	bl	11368 <__ctype_b_loc@plt>
   2dc5c:	ldr	r0, [r0]
   2dc60:	ldr	r1, [sp, #16]
   2dc64:	add	r0, r0, r1, lsl #1
   2dc68:	ldrh	r0, [r0]
   2dc6c:	and	r0, r0, #1
   2dc70:	cmp	r0, #0
   2dc74:	beq	2dc90 <__assert_fail@plt+0x1c7fc>
   2dc78:	ldr	r0, [fp, #-12]
   2dc7c:	ldr	r1, [fp, #-8]
   2dc80:	ldr	r2, [sp, #16]
   2dc84:	add	r1, r1, r2
   2dc88:	ldrb	r1, [r1]
   2dc8c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dc90:	b	2dc94 <__assert_fail@plt+0x1c800>
   2dc94:	ldr	r0, [sp, #16]
   2dc98:	add	r0, r0, #1
   2dc9c:	str	r0, [sp, #16]
   2dca0:	b	2dc4c <__assert_fail@plt+0x1c7b8>
   2dca4:	b	2dd00 <__assert_fail@plt+0x1c86c>
   2dca8:	movw	r0, #0
   2dcac:	str	r0, [sp, #16]
   2dcb0:	ldr	r0, [sp, #16]
   2dcb4:	cmp	r0, #256	; 0x100
   2dcb8:	bge	2dcfc <__assert_fail@plt+0x1c868>
   2dcbc:	bl	11368 <__ctype_b_loc@plt>
   2dcc0:	ldr	r0, [r0]
   2dcc4:	ldr	r1, [sp, #16]
   2dcc8:	add	r0, r0, r1, lsl #1
   2dccc:	ldrh	r0, [r0]
   2dcd0:	and	r0, r0, #1
   2dcd4:	cmp	r0, #0
   2dcd8:	beq	2dce8 <__assert_fail@plt+0x1c854>
   2dcdc:	ldr	r0, [fp, #-12]
   2dce0:	ldr	r1, [sp, #16]
   2dce4:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dce8:	b	2dcec <__assert_fail@plt+0x1c858>
   2dcec:	ldr	r0, [sp, #16]
   2dcf0:	add	r0, r0, #1
   2dcf4:	str	r0, [sp, #16]
   2dcf8:	b	2dcb0 <__assert_fail@plt+0x1c81c>
   2dcfc:	b	2dd00 <__assert_fail@plt+0x1c86c>
   2dd00:	b	2dd04 <__assert_fail@plt+0x1c870>
   2dd04:	b	2dff0 <__assert_fail@plt+0x1cb5c>
   2dd08:	ldr	r0, [sp, #12]
   2dd0c:	movw	r1, #22384	; 0x5770
   2dd10:	movt	r1, #4
   2dd14:	bl	111d0 <strcmp@plt>
   2dd18:	cmp	r0, #0
   2dd1c:	bne	2ddf8 <__assert_fail@plt+0x1c964>
   2dd20:	b	2dd24 <__assert_fail@plt+0x1c890>
   2dd24:	ldr	r0, [fp, #-8]
   2dd28:	movw	r1, #0
   2dd2c:	cmp	r0, r1
   2dd30:	beq	2dd98 <__assert_fail@plt+0x1c904>
   2dd34:	movw	r0, #0
   2dd38:	str	r0, [sp, #16]
   2dd3c:	ldr	r0, [sp, #16]
   2dd40:	cmp	r0, #256	; 0x100
   2dd44:	bge	2dd94 <__assert_fail@plt+0x1c900>
   2dd48:	bl	11368 <__ctype_b_loc@plt>
   2dd4c:	ldr	r0, [r0]
   2dd50:	ldr	r1, [sp, #16]
   2dd54:	add	r0, r0, r1, lsl #1
   2dd58:	ldrh	r0, [r0]
   2dd5c:	and	r0, r0, #32768	; 0x8000
   2dd60:	cmp	r0, #0
   2dd64:	beq	2dd80 <__assert_fail@plt+0x1c8ec>
   2dd68:	ldr	r0, [fp, #-12]
   2dd6c:	ldr	r1, [fp, #-8]
   2dd70:	ldr	r2, [sp, #16]
   2dd74:	add	r1, r1, r2
   2dd78:	ldrb	r1, [r1]
   2dd7c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dd80:	b	2dd84 <__assert_fail@plt+0x1c8f0>
   2dd84:	ldr	r0, [sp, #16]
   2dd88:	add	r0, r0, #1
   2dd8c:	str	r0, [sp, #16]
   2dd90:	b	2dd3c <__assert_fail@plt+0x1c8a8>
   2dd94:	b	2ddf0 <__assert_fail@plt+0x1c95c>
   2dd98:	movw	r0, #0
   2dd9c:	str	r0, [sp, #16]
   2dda0:	ldr	r0, [sp, #16]
   2dda4:	cmp	r0, #256	; 0x100
   2dda8:	bge	2ddec <__assert_fail@plt+0x1c958>
   2ddac:	bl	11368 <__ctype_b_loc@plt>
   2ddb0:	ldr	r0, [r0]
   2ddb4:	ldr	r1, [sp, #16]
   2ddb8:	add	r0, r0, r1, lsl #1
   2ddbc:	ldrh	r0, [r0]
   2ddc0:	and	r0, r0, #32768	; 0x8000
   2ddc4:	cmp	r0, #0
   2ddc8:	beq	2ddd8 <__assert_fail@plt+0x1c944>
   2ddcc:	ldr	r0, [fp, #-12]
   2ddd0:	ldr	r1, [sp, #16]
   2ddd4:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2ddd8:	b	2dddc <__assert_fail@plt+0x1c948>
   2dddc:	ldr	r0, [sp, #16]
   2dde0:	add	r0, r0, #1
   2dde4:	str	r0, [sp, #16]
   2dde8:	b	2dda0 <__assert_fail@plt+0x1c90c>
   2ddec:	b	2ddf0 <__assert_fail@plt+0x1c95c>
   2ddf0:	b	2ddf4 <__assert_fail@plt+0x1c960>
   2ddf4:	b	2dfec <__assert_fail@plt+0x1cb58>
   2ddf8:	ldr	r0, [sp, #12]
   2ddfc:	movw	r1, #22390	; 0x5776
   2de00:	movt	r1, #4
   2de04:	bl	111d0 <strcmp@plt>
   2de08:	cmp	r0, #0
   2de0c:	bne	2dee8 <__assert_fail@plt+0x1ca54>
   2de10:	b	2de14 <__assert_fail@plt+0x1c980>
   2de14:	ldr	r0, [fp, #-8]
   2de18:	movw	r1, #0
   2de1c:	cmp	r0, r1
   2de20:	beq	2de88 <__assert_fail@plt+0x1c9f4>
   2de24:	movw	r0, #0
   2de28:	str	r0, [sp, #16]
   2de2c:	ldr	r0, [sp, #16]
   2de30:	cmp	r0, #256	; 0x100
   2de34:	bge	2de84 <__assert_fail@plt+0x1c9f0>
   2de38:	bl	11368 <__ctype_b_loc@plt>
   2de3c:	ldr	r0, [r0]
   2de40:	ldr	r1, [sp, #16]
   2de44:	add	r0, r0, r1, lsl #1
   2de48:	ldrh	r0, [r0]
   2de4c:	and	r0, r0, #4
   2de50:	cmp	r0, #0
   2de54:	beq	2de70 <__assert_fail@plt+0x1c9dc>
   2de58:	ldr	r0, [fp, #-12]
   2de5c:	ldr	r1, [fp, #-8]
   2de60:	ldr	r2, [sp, #16]
   2de64:	add	r1, r1, r2
   2de68:	ldrb	r1, [r1]
   2de6c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2de70:	b	2de74 <__assert_fail@plt+0x1c9e0>
   2de74:	ldr	r0, [sp, #16]
   2de78:	add	r0, r0, #1
   2de7c:	str	r0, [sp, #16]
   2de80:	b	2de2c <__assert_fail@plt+0x1c998>
   2de84:	b	2dee0 <__assert_fail@plt+0x1ca4c>
   2de88:	movw	r0, #0
   2de8c:	str	r0, [sp, #16]
   2de90:	ldr	r0, [sp, #16]
   2de94:	cmp	r0, #256	; 0x100
   2de98:	bge	2dedc <__assert_fail@plt+0x1ca48>
   2de9c:	bl	11368 <__ctype_b_loc@plt>
   2dea0:	ldr	r0, [r0]
   2dea4:	ldr	r1, [sp, #16]
   2dea8:	add	r0, r0, r1, lsl #1
   2deac:	ldrh	r0, [r0]
   2deb0:	and	r0, r0, #4
   2deb4:	cmp	r0, #0
   2deb8:	beq	2dec8 <__assert_fail@plt+0x1ca34>
   2debc:	ldr	r0, [fp, #-12]
   2dec0:	ldr	r1, [sp, #16]
   2dec4:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dec8:	b	2decc <__assert_fail@plt+0x1ca38>
   2decc:	ldr	r0, [sp, #16]
   2ded0:	add	r0, r0, #1
   2ded4:	str	r0, [sp, #16]
   2ded8:	b	2de90 <__assert_fail@plt+0x1c9fc>
   2dedc:	b	2dee0 <__assert_fail@plt+0x1ca4c>
   2dee0:	b	2dee4 <__assert_fail@plt+0x1ca50>
   2dee4:	b	2dfe8 <__assert_fail@plt+0x1cb54>
   2dee8:	ldr	r0, [sp, #12]
   2deec:	movw	r1, #22396	; 0x577c
   2def0:	movt	r1, #4
   2def4:	bl	111d0 <strcmp@plt>
   2def8:	cmp	r0, #0
   2defc:	bne	2dfd8 <__assert_fail@plt+0x1cb44>
   2df00:	b	2df04 <__assert_fail@plt+0x1ca70>
   2df04:	ldr	r0, [fp, #-8]
   2df08:	movw	r1, #0
   2df0c:	cmp	r0, r1
   2df10:	beq	2df78 <__assert_fail@plt+0x1cae4>
   2df14:	movw	r0, #0
   2df18:	str	r0, [sp, #16]
   2df1c:	ldr	r0, [sp, #16]
   2df20:	cmp	r0, #256	; 0x100
   2df24:	bge	2df74 <__assert_fail@plt+0x1cae0>
   2df28:	bl	11368 <__ctype_b_loc@plt>
   2df2c:	ldr	r0, [r0]
   2df30:	ldr	r1, [sp, #16]
   2df34:	add	r0, r0, r1, lsl #1
   2df38:	ldrh	r0, [r0]
   2df3c:	and	r0, r0, #4096	; 0x1000
   2df40:	cmp	r0, #0
   2df44:	beq	2df60 <__assert_fail@plt+0x1cacc>
   2df48:	ldr	r0, [fp, #-12]
   2df4c:	ldr	r1, [fp, #-8]
   2df50:	ldr	r2, [sp, #16]
   2df54:	add	r1, r1, r2
   2df58:	ldrb	r1, [r1]
   2df5c:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2df60:	b	2df64 <__assert_fail@plt+0x1cad0>
   2df64:	ldr	r0, [sp, #16]
   2df68:	add	r0, r0, #1
   2df6c:	str	r0, [sp, #16]
   2df70:	b	2df1c <__assert_fail@plt+0x1ca88>
   2df74:	b	2dfd0 <__assert_fail@plt+0x1cb3c>
   2df78:	movw	r0, #0
   2df7c:	str	r0, [sp, #16]
   2df80:	ldr	r0, [sp, #16]
   2df84:	cmp	r0, #256	; 0x100
   2df88:	bge	2dfcc <__assert_fail@plt+0x1cb38>
   2df8c:	bl	11368 <__ctype_b_loc@plt>
   2df90:	ldr	r0, [r0]
   2df94:	ldr	r1, [sp, #16]
   2df98:	add	r0, r0, r1, lsl #1
   2df9c:	ldrh	r0, [r0]
   2dfa0:	and	r0, r0, #4096	; 0x1000
   2dfa4:	cmp	r0, #0
   2dfa8:	beq	2dfb8 <__assert_fail@plt+0x1cb24>
   2dfac:	ldr	r0, [fp, #-12]
   2dfb0:	ldr	r1, [sp, #16]
   2dfb4:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   2dfb8:	b	2dfbc <__assert_fail@plt+0x1cb28>
   2dfbc:	ldr	r0, [sp, #16]
   2dfc0:	add	r0, r0, #1
   2dfc4:	str	r0, [sp, #16]
   2dfc8:	b	2df80 <__assert_fail@plt+0x1caec>
   2dfcc:	b	2dfd0 <__assert_fail@plt+0x1cb3c>
   2dfd0:	b	2dfd4 <__assert_fail@plt+0x1cb40>
   2dfd4:	b	2dfe4 <__assert_fail@plt+0x1cb50>
   2dfd8:	movw	r0, #4
   2dfdc:	str	r0, [fp, #-4]
   2dfe0:	b	2e018 <__assert_fail@plt+0x1cb84>
   2dfe4:	b	2dfe8 <__assert_fail@plt+0x1cb54>
   2dfe8:	b	2dfec <__assert_fail@plt+0x1cb58>
   2dfec:	b	2dff0 <__assert_fail@plt+0x1cb5c>
   2dff0:	b	2dff4 <__assert_fail@plt+0x1cb60>
   2dff4:	b	2dff8 <__assert_fail@plt+0x1cb64>
   2dff8:	b	2dffc <__assert_fail@plt+0x1cb68>
   2dffc:	b	2e000 <__assert_fail@plt+0x1cb6c>
   2e000:	b	2e004 <__assert_fail@plt+0x1cb70>
   2e004:	b	2e008 <__assert_fail@plt+0x1cb74>
   2e008:	b	2e00c <__assert_fail@plt+0x1cb78>
   2e00c:	b	2e010 <__assert_fail@plt+0x1cb7c>
   2e010:	movw	r0, #0
   2e014:	str	r0, [fp, #-4]
   2e018:	ldr	r0, [fp, #-4]
   2e01c:	mov	sp, fp
   2e020:	pop	{fp, pc}
   2e024:	sub	sp, sp, #8
   2e028:	str	r0, [sp, #4]
   2e02c:	movw	r0, #0
   2e030:	str	r0, [sp]
   2e034:	ldr	r0, [sp]
   2e038:	cmp	r0, #8
   2e03c:	bge	2e064 <__assert_fail@plt+0x1cbd0>
   2e040:	ldr	r0, [sp, #4]
   2e044:	ldr	r1, [sp]
   2e048:	ldr	r1, [r0, r1, lsl #2]!
   2e04c:	mvn	r1, r1
   2e050:	str	r1, [r0]
   2e054:	ldr	r0, [sp]
   2e058:	add	r0, r0, #1
   2e05c:	str	r0, [sp]
   2e060:	b	2e034 <__assert_fail@plt+0x1cba0>
   2e064:	add	sp, sp, #8
   2e068:	bx	lr
   2e06c:	sub	sp, sp, #12
   2e070:	str	r0, [sp, #8]
   2e074:	str	r1, [sp, #4]
   2e078:	movw	r0, #0
   2e07c:	str	r0, [sp]
   2e080:	ldr	r0, [sp]
   2e084:	cmp	r0, #8
   2e088:	bge	2e0bc <__assert_fail@plt+0x1cc28>
   2e08c:	ldr	r0, [sp, #4]
   2e090:	ldr	r1, [sp]
   2e094:	ldr	r0, [r0, r1, lsl #2]
   2e098:	ldr	r2, [sp, #8]
   2e09c:	add	r1, r2, r1, lsl #2
   2e0a0:	ldr	r2, [r1]
   2e0a4:	and	r0, r2, r0
   2e0a8:	str	r0, [r1]
   2e0ac:	ldr	r0, [sp]
   2e0b0:	add	r0, r0, #1
   2e0b4:	str	r0, [sp]
   2e0b8:	b	2e080 <__assert_fail@plt+0x1cbec>
   2e0bc:	add	sp, sp, #12
   2e0c0:	bx	lr
   2e0c4:	sub	sp, sp, #16
   2e0c8:	str	r0, [sp, #8]
   2e0cc:	str	r1, [sp, #4]
   2e0d0:	ldr	r0, [sp, #8]
   2e0d4:	ldr	r0, [r0, #80]	; 0x50
   2e0d8:	cmp	r0, #1
   2e0dc:	bne	2e0ec <__assert_fail@plt+0x1cc58>
   2e0e0:	movw	r0, #1
   2e0e4:	str	r0, [sp, #12]
   2e0e8:	b	2e154 <__assert_fail@plt+0x1ccc0>
   2e0ec:	movw	r0, #1
   2e0f0:	str	r0, [sp]
   2e0f4:	ldr	r0, [sp, #4]
   2e0f8:	ldr	r1, [sp]
   2e0fc:	add	r0, r0, r1
   2e100:	ldr	r1, [sp, #8]
   2e104:	ldr	r1, [r1, #28]
   2e108:	cmp	r0, r1
   2e10c:	bge	2e14c <__assert_fail@plt+0x1ccb8>
   2e110:	ldr	r0, [sp, #8]
   2e114:	ldr	r0, [r0, #8]
   2e118:	ldr	r1, [sp, #4]
   2e11c:	ldr	r2, [sp]
   2e120:	add	r1, r1, r2
   2e124:	add	r0, r0, r1, lsl #2
   2e128:	ldr	r0, [r0]
   2e12c:	cmn	r0, #1
   2e130:	beq	2e138 <__assert_fail@plt+0x1cca4>
   2e134:	b	2e14c <__assert_fail@plt+0x1ccb8>
   2e138:	b	2e13c <__assert_fail@plt+0x1cca8>
   2e13c:	ldr	r0, [sp]
   2e140:	add	r0, r0, #1
   2e144:	str	r0, [sp]
   2e148:	b	2e0f4 <__assert_fail@plt+0x1cc60>
   2e14c:	ldr	r0, [sp]
   2e150:	str	r0, [sp, #12]
   2e154:	ldr	r0, [sp, #12]
   2e158:	add	sp, sp, #16
   2e15c:	bx	lr
   2e160:	push	{fp, lr}
   2e164:	mov	fp, sp
   2e168:	sub	sp, sp, #32
   2e16c:	str	r0, [fp, #-8]
   2e170:	str	r1, [fp, #-12]
   2e174:	str	r2, [sp, #16]
   2e178:	ldr	r0, [sp, #16]
   2e17c:	ldrb	r0, [r0]
   2e180:	strb	r0, [sp, #14]
   2e184:	movw	r0, #0
   2e188:	str	r0, [sp, #8]
   2e18c:	ldr	r0, [fp, #-12]
   2e190:	ldr	r0, [r0, #56]	; 0x38
   2e194:	ldr	r1, [fp, #-12]
   2e198:	ldr	r1, [r1, #40]	; 0x28
   2e19c:	cmp	r0, r1
   2e1a0:	bgt	2e1b0 <__assert_fail@plt+0x1cd1c>
   2e1a4:	movw	r0, #7
   2e1a8:	str	r0, [fp, #-4]
   2e1ac:	b	2e334 <__assert_fail@plt+0x1cea0>
   2e1b0:	b	2e1b4 <__assert_fail@plt+0x1cd20>
   2e1b4:	ldr	r0, [sp, #8]
   2e1b8:	cmp	r0, #32
   2e1bc:	blt	2e1cc <__assert_fail@plt+0x1cd38>
   2e1c0:	movw	r0, #7
   2e1c4:	str	r0, [fp, #-4]
   2e1c8:	b	2e334 <__assert_fail@plt+0x1cea0>
   2e1cc:	ldr	r0, [sp, #16]
   2e1d0:	ldr	r0, [r0, #4]
   2e1d4:	and	r0, r0, #255	; 0xff
   2e1d8:	cmp	r0, #30
   2e1dc:	bne	2e1f0 <__assert_fail@plt+0x1cd5c>
   2e1e0:	ldr	r0, [fp, #-12]
   2e1e4:	bl	2e340 <__assert_fail@plt+0x1ceac>
   2e1e8:	strb	r0, [sp, #15]
   2e1ec:	b	2e214 <__assert_fail@plt+0x1cd80>
   2e1f0:	ldr	r0, [fp, #-12]
   2e1f4:	ldr	r0, [r0, #4]
   2e1f8:	ldr	r1, [fp, #-12]
   2e1fc:	ldr	r2, [r1, #40]	; 0x28
   2e200:	add	r3, r2, #1
   2e204:	str	r3, [r1, #40]	; 0x28
   2e208:	add	r0, r0, r2
   2e20c:	ldrb	r0, [r0]
   2e210:	strb	r0, [sp, #15]
   2e214:	ldr	r0, [fp, #-12]
   2e218:	ldr	r0, [r0, #56]	; 0x38
   2e21c:	ldr	r1, [fp, #-12]
   2e220:	ldr	r1, [r1, #40]	; 0x28
   2e224:	cmp	r0, r1
   2e228:	bgt	2e238 <__assert_fail@plt+0x1cda4>
   2e22c:	movw	r0, #7
   2e230:	str	r0, [fp, #-4]
   2e234:	b	2e334 <__assert_fail@plt+0x1cea0>
   2e238:	ldrb	r0, [sp, #15]
   2e23c:	ldrb	r1, [sp, #14]
   2e240:	cmp	r0, r1
   2e244:	bne	2e270 <__assert_fail@plt+0x1cddc>
   2e248:	ldr	r0, [fp, #-12]
   2e24c:	ldr	r0, [r0, #4]
   2e250:	ldr	r1, [fp, #-12]
   2e254:	ldr	r1, [r1, #40]	; 0x28
   2e258:	add	r1, r1, #0
   2e25c:	add	r0, r0, r1
   2e260:	ldrb	r0, [r0]
   2e264:	cmp	r0, #93	; 0x5d
   2e268:	bne	2e270 <__assert_fail@plt+0x1cddc>
   2e26c:	b	2e298 <__assert_fail@plt+0x1ce04>
   2e270:	ldrb	r0, [sp, #15]
   2e274:	ldr	r1, [fp, #-8]
   2e278:	ldr	r1, [r1, #4]
   2e27c:	ldr	r2, [sp, #8]
   2e280:	add	r1, r1, r2
   2e284:	strb	r0, [r1]
   2e288:	ldr	r0, [sp, #8]
   2e28c:	add	r0, r0, #1
   2e290:	str	r0, [sp, #8]
   2e294:	b	2e1b4 <__assert_fail@plt+0x1cd20>
   2e298:	ldr	r0, [fp, #-12]
   2e29c:	ldr	r1, [r0, #40]	; 0x28
   2e2a0:	add	r1, r1, #1
   2e2a4:	str	r1, [r0, #40]	; 0x28
   2e2a8:	ldr	r0, [fp, #-8]
   2e2ac:	ldr	r0, [r0, #4]
   2e2b0:	ldr	r1, [sp, #8]
   2e2b4:	mov	r2, #0
   2e2b8:	strb	r2, [r0, r1]
   2e2bc:	ldr	r0, [sp, #16]
   2e2c0:	ldrb	r0, [r0, #4]
   2e2c4:	mov	r1, r0
   2e2c8:	cmp	r0, #26
   2e2cc:	str	r1, [sp, #4]
   2e2d0:	beq	2e2f8 <__assert_fail@plt+0x1ce64>
   2e2d4:	b	2e2d8 <__assert_fail@plt+0x1ce44>
   2e2d8:	ldr	r0, [sp, #4]
   2e2dc:	cmp	r0, #28
   2e2e0:	beq	2e308 <__assert_fail@plt+0x1ce74>
   2e2e4:	b	2e2e8 <__assert_fail@plt+0x1ce54>
   2e2e8:	ldr	r0, [sp, #4]
   2e2ec:	cmp	r0, #30
   2e2f0:	beq	2e318 <__assert_fail@plt+0x1ce84>
   2e2f4:	b	2e328 <__assert_fail@plt+0x1ce94>
   2e2f8:	ldr	r0, [fp, #-8]
   2e2fc:	movw	r1, #3
   2e300:	str	r1, [r0]
   2e304:	b	2e32c <__assert_fail@plt+0x1ce98>
   2e308:	ldr	r0, [fp, #-8]
   2e30c:	movw	r1, #2
   2e310:	str	r1, [r0]
   2e314:	b	2e32c <__assert_fail@plt+0x1ce98>
   2e318:	ldr	r0, [fp, #-8]
   2e31c:	movw	r1, #4
   2e320:	str	r1, [r0]
   2e324:	b	2e32c <__assert_fail@plt+0x1ce98>
   2e328:	b	2e32c <__assert_fail@plt+0x1ce98>
   2e32c:	movw	r0, #0
   2e330:	str	r0, [fp, #-4]
   2e334:	ldr	r0, [fp, #-4]
   2e338:	mov	sp, fp
   2e33c:	pop	{fp, pc}
   2e340:	push	{fp, lr}
   2e344:	mov	fp, sp
   2e348:	sub	sp, sp, #16
   2e34c:	str	r0, [sp, #8]
   2e350:	ldr	r0, [sp, #8]
   2e354:	ldrsb	r0, [r0, #75]	; 0x4b
   2e358:	cmp	r0, #0
   2e35c:	movw	r0, #0
   2e360:	movne	r0, #1
   2e364:	mvn	r1, #0
   2e368:	eor	r0, r0, r1
   2e36c:	tst	r0, #1
   2e370:	beq	2e39c <__assert_fail@plt+0x1cf08>
   2e374:	ldr	r0, [sp, #8]
   2e378:	ldr	r0, [r0, #4]
   2e37c:	ldr	r1, [sp, #8]
   2e380:	ldr	r2, [r1, #40]	; 0x28
   2e384:	add	r3, r2, #1
   2e388:	str	r3, [r1, #40]	; 0x28
   2e38c:	add	r0, r0, r2
   2e390:	ldrb	r0, [r0]
   2e394:	strb	r0, [fp, #-1]
   2e398:	b	2e4dc <__assert_fail@plt+0x1d048>
   2e39c:	ldr	r0, [sp, #8]
   2e3a0:	ldrsb	r0, [r0, #76]	; 0x4c
   2e3a4:	cmp	r0, #0
   2e3a8:	beq	2e4ac <__assert_fail@plt+0x1d018>
   2e3ac:	ldr	r0, [sp, #8]
   2e3b0:	ldr	r0, [r0, #40]	; 0x28
   2e3b4:	ldr	r1, [sp, #8]
   2e3b8:	ldr	r1, [r1, #28]
   2e3bc:	cmp	r0, r1
   2e3c0:	beq	2e408 <__assert_fail@plt+0x1cf74>
   2e3c4:	ldr	r0, [sp, #8]
   2e3c8:	ldr	r1, [r0, #8]
   2e3cc:	ldr	r0, [r0, #40]	; 0x28
   2e3d0:	add	r0, r1, r0, lsl #2
   2e3d4:	ldr	r0, [r0]
   2e3d8:	cmn	r0, #1
   2e3dc:	bne	2e408 <__assert_fail@plt+0x1cf74>
   2e3e0:	ldr	r0, [sp, #8]
   2e3e4:	ldr	r0, [r0, #4]
   2e3e8:	ldr	r1, [sp, #8]
   2e3ec:	ldr	r2, [r1, #40]	; 0x28
   2e3f0:	add	r3, r2, #1
   2e3f4:	str	r3, [r1, #40]	; 0x28
   2e3f8:	add	r0, r0, r2
   2e3fc:	ldrb	r0, [r0]
   2e400:	strb	r0, [fp, #-1]
   2e404:	b	2e4dc <__assert_fail@plt+0x1d048>
   2e408:	ldr	r0, [sp, #8]
   2e40c:	ldr	r1, [r0, #12]
   2e410:	ldr	r0, [r0, #40]	; 0x28
   2e414:	add	r0, r1, r0, lsl #2
   2e418:	ldr	r0, [r0]
   2e41c:	str	r0, [sp, #4]
   2e420:	ldr	r0, [sp, #8]
   2e424:	ldr	r0, [r0]
   2e428:	ldr	r1, [sp, #8]
   2e42c:	ldr	r1, [r1, #24]
   2e430:	ldr	r2, [sp, #4]
   2e434:	add	r1, r1, r2
   2e438:	add	r0, r0, r1
   2e43c:	ldrb	r0, [r0]
   2e440:	str	r0, [sp]
   2e444:	ldr	r0, [sp]
   2e448:	mvn	r1, #127	; 0x7f
   2e44c:	and	r0, r0, r1
   2e450:	cmp	r0, #0
   2e454:	beq	2e480 <__assert_fail@plt+0x1cfec>
   2e458:	ldr	r0, [sp, #8]
   2e45c:	ldr	r0, [r0, #4]
   2e460:	ldr	r1, [sp, #8]
   2e464:	ldr	r2, [r1, #40]	; 0x28
   2e468:	add	r3, r2, #1
   2e46c:	str	r3, [r1, #40]	; 0x28
   2e470:	add	r0, r0, r2
   2e474:	ldrb	r0, [r0]
   2e478:	strb	r0, [fp, #-1]
   2e47c:	b	2e4dc <__assert_fail@plt+0x1d048>
   2e480:	ldr	r0, [sp, #8]
   2e484:	ldr	r1, [sp, #8]
   2e488:	ldr	r1, [r1, #40]	; 0x28
   2e48c:	bl	2e0c4 <__assert_fail@plt+0x1cc30>
   2e490:	ldr	r1, [sp, #8]
   2e494:	ldr	r2, [r1, #40]	; 0x28
   2e498:	add	r0, r2, r0
   2e49c:	str	r0, [r1, #40]	; 0x28
   2e4a0:	ldr	r0, [sp]
   2e4a4:	strb	r0, [fp, #-1]
   2e4a8:	b	2e4dc <__assert_fail@plt+0x1d048>
   2e4ac:	ldr	r0, [sp, #8]
   2e4b0:	ldr	r0, [r0]
   2e4b4:	ldr	r1, [sp, #8]
   2e4b8:	ldr	r1, [r1, #24]
   2e4bc:	ldr	r2, [sp, #8]
   2e4c0:	ldr	r3, [r2, #40]	; 0x28
   2e4c4:	add	ip, r3, #1
   2e4c8:	str	ip, [r2, #40]	; 0x28
   2e4cc:	add	r1, r1, r3
   2e4d0:	add	r0, r0, r1
   2e4d4:	ldrb	r0, [r0]
   2e4d8:	strb	r0, [fp, #-1]
   2e4dc:	ldrb	r0, [fp, #-1]
   2e4e0:	mov	sp, fp
   2e4e4:	pop	{fp, pc}
   2e4e8:	push	{fp, lr}
   2e4ec:	mov	fp, sp
   2e4f0:	sub	sp, sp, #16
   2e4f4:	strb	r0, [fp, #-1]
   2e4f8:	str	r1, [sp, #8]
   2e4fc:	ldr	r0, [sp, #8]
   2e500:	ldr	r0, [r0, #92]	; 0x5c
   2e504:	cmp	r0, #1
   2e508:	ble	2e51c <__assert_fail@plt+0x1d088>
   2e50c:	ldrb	r0, [fp, #-1]
   2e510:	bl	113e0 <btowc@plt>
   2e514:	str	r0, [sp, #4]
   2e518:	b	2e524 <__assert_fail@plt+0x1d090>
   2e51c:	ldrb	r0, [fp, #-1]
   2e520:	str	r0, [sp, #4]
   2e524:	ldr	r0, [sp, #4]
   2e528:	mov	sp, fp
   2e52c:	pop	{fp, pc}
   2e530:	push	{fp, lr}
   2e534:	mov	fp, sp
   2e538:	sub	sp, sp, #40	; 0x28
   2e53c:	str	r0, [fp, #-8]
   2e540:	str	r1, [fp, #-12]
   2e544:	str	r2, [fp, #-16]
   2e548:	mvn	r0, #0
   2e54c:	str	r0, [sp, #20]
   2e550:	ldr	r0, [fp, #-12]
   2e554:	ldr	r1, [fp, #-8]
   2e558:	ldr	r2, [fp, #-16]
   2e55c:	bl	28e74 <__assert_fail@plt+0x179e0>
   2e560:	ldr	r0, [fp, #-12]
   2e564:	ldrb	r0, [r0]
   2e568:	strb	r0, [sp, #19]
   2e56c:	ldr	r0, [fp, #-12]
   2e570:	ldr	r0, [r0, #4]
   2e574:	and	r0, r0, #255	; 0xff
   2e578:	cmp	r0, #2
   2e57c:	bne	2e58c <__assert_fail@plt+0x1d0f8>
   2e580:	mvn	r0, #1
   2e584:	str	r0, [fp, #-4]
   2e588:	b	2e684 <__assert_fail@plt+0x1d1f0>
   2e58c:	ldr	r0, [fp, #-12]
   2e590:	ldr	r0, [r0, #4]
   2e594:	and	r0, r0, #255	; 0xff
   2e598:	cmp	r0, #24
   2e59c:	beq	2e5ac <__assert_fail@plt+0x1d118>
   2e5a0:	ldrb	r0, [sp, #19]
   2e5a4:	cmp	r0, #44	; 0x2c
   2e5a8:	bne	2e5b0 <__assert_fail@plt+0x1d11c>
   2e5ac:	b	2e67c <__assert_fail@plt+0x1d1e8>
   2e5b0:	ldr	r0, [fp, #-12]
   2e5b4:	ldr	r0, [r0, #4]
   2e5b8:	and	r0, r0, #255	; 0xff
   2e5bc:	cmp	r0, #1
   2e5c0:	bne	2e5ec <__assert_fail@plt+0x1d158>
   2e5c4:	ldrb	r0, [sp, #19]
   2e5c8:	cmp	r0, #48	; 0x30
   2e5cc:	blt	2e5ec <__assert_fail@plt+0x1d158>
   2e5d0:	ldrb	r0, [sp, #19]
   2e5d4:	movw	r1, #57	; 0x39
   2e5d8:	cmp	r1, r0
   2e5dc:	blt	2e5ec <__assert_fail@plt+0x1d158>
   2e5e0:	ldr	r0, [sp, #20]
   2e5e4:	cmn	r0, #2
   2e5e8:	bne	2e5f8 <__assert_fail@plt+0x1d164>
   2e5ec:	mvn	r0, #1
   2e5f0:	str	r0, [sp, #12]
   2e5f4:	b	2e670 <__assert_fail@plt+0x1d1dc>
   2e5f8:	ldr	r0, [sp, #20]
   2e5fc:	cmn	r0, #1
   2e600:	bne	2e614 <__assert_fail@plt+0x1d180>
   2e604:	ldrb	r0, [sp, #19]
   2e608:	sub	r0, r0, #48	; 0x30
   2e60c:	str	r0, [sp, #8]
   2e610:	b	2e668 <__assert_fail@plt+0x1d1d4>
   2e614:	ldr	r0, [sp, #20]
   2e618:	movw	r1, #10
   2e61c:	mul	r0, r0, r1
   2e620:	ldrb	r1, [sp, #19]
   2e624:	add	r0, r0, r1
   2e628:	sub	r0, r0, #48	; 0x30
   2e62c:	movw	r1, #32768	; 0x8000
   2e630:	cmp	r1, r0
   2e634:	bge	2e644 <__assert_fail@plt+0x1d1b0>
   2e638:	movw	r0, #32768	; 0x8000
   2e63c:	str	r0, [sp, #4]
   2e640:	b	2e660 <__assert_fail@plt+0x1d1cc>
   2e644:	ldr	r0, [sp, #20]
   2e648:	movw	r1, #10
   2e64c:	mul	r0, r0, r1
   2e650:	ldrb	r1, [sp, #19]
   2e654:	add	r0, r0, r1
   2e658:	sub	r0, r0, #48	; 0x30
   2e65c:	str	r0, [sp, #4]
   2e660:	ldr	r0, [sp, #4]
   2e664:	str	r0, [sp, #8]
   2e668:	ldr	r0, [sp, #8]
   2e66c:	str	r0, [sp, #12]
   2e670:	ldr	r0, [sp, #12]
   2e674:	str	r0, [sp, #20]
   2e678:	b	2e550 <__assert_fail@plt+0x1d0bc>
   2e67c:	ldr	r0, [sp, #20]
   2e680:	str	r0, [fp, #-4]
   2e684:	ldr	r0, [fp, #-4]
   2e688:	mov	sp, fp
   2e68c:	pop	{fp, pc}
   2e690:	push	{fp, lr}
   2e694:	mov	fp, sp
   2e698:	sub	sp, sp, #40	; 0x28
   2e69c:	str	r0, [fp, #-8]
   2e6a0:	str	r1, [fp, #-12]
   2e6a4:	add	r0, sp, #20
   2e6a8:	str	r0, [sp, #16]
   2e6ac:	ldr	r0, [fp, #-8]
   2e6b0:	ldr	r0, [r0]
   2e6b4:	str	r0, [sp, #12]
   2e6b8:	ldr	r0, [fp, #-8]
   2e6bc:	str	r0, [fp, #-16]
   2e6c0:	ldr	r0, [fp, #-12]
   2e6c4:	ldr	r1, [fp, #-16]
   2e6c8:	add	r3, r1, #20
   2e6cc:	movw	r1, #0
   2e6d0:	str	r1, [sp, #4]
   2e6d4:	ldr	r2, [sp, #4]
   2e6d8:	bl	2b16c <__assert_fail@plt+0x19cd8>
   2e6dc:	ldr	r1, [sp, #16]
   2e6e0:	str	r0, [r1]
   2e6e4:	ldr	r0, [sp, #16]
   2e6e8:	ldr	r0, [r0]
   2e6ec:	movw	r1, #0
   2e6f0:	cmp	r0, r1
   2e6f4:	bne	2e704 <__assert_fail@plt+0x1d270>
   2e6f8:	movw	r0, #0
   2e6fc:	str	r0, [fp, #-4]
   2e700:	b	2e814 <__assert_fail@plt+0x1d380>
   2e704:	ldr	r0, [sp, #12]
   2e708:	ldr	r1, [sp, #16]
   2e70c:	ldr	r1, [r1]
   2e710:	str	r0, [r1]
   2e714:	ldr	r0, [sp, #16]
   2e718:	ldr	r0, [r0]
   2e71c:	ldr	r1, [r0, #24]
   2e720:	mvn	r2, #262144	; 0x40000
   2e724:	and	r1, r1, r2
   2e728:	orr	r1, r1, #262144	; 0x40000
   2e72c:	str	r1, [r0, #24]
   2e730:	ldr	r0, [sp, #16]
   2e734:	ldr	r0, [r0]
   2e738:	str	r0, [sp, #12]
   2e73c:	ldr	r0, [fp, #-16]
   2e740:	ldr	r0, [r0, #4]
   2e744:	movw	r1, #0
   2e748:	cmp	r0, r1
   2e74c:	beq	2e76c <__assert_fail@plt+0x1d2d8>
   2e750:	ldr	r0, [fp, #-16]
   2e754:	ldr	r0, [r0, #4]
   2e758:	str	r0, [fp, #-16]
   2e75c:	ldr	r0, [sp, #12]
   2e760:	add	r0, r0, #4
   2e764:	str	r0, [sp, #16]
   2e768:	b	2e810 <__assert_fail@plt+0x1d37c>
   2e76c:	movw	r0, #0
   2e770:	str	r0, [sp, #8]
   2e774:	ldr	r0, [fp, #-16]
   2e778:	ldr	r0, [r0, #8]
   2e77c:	ldr	r1, [sp, #8]
   2e780:	cmp	r0, r1
   2e784:	movw	r0, #1
   2e788:	str	r0, [sp]
   2e78c:	beq	2e7ac <__assert_fail@plt+0x1d318>
   2e790:	ldr	r0, [fp, #-16]
   2e794:	ldr	r0, [r0, #8]
   2e798:	movw	r1, #0
   2e79c:	cmp	r0, r1
   2e7a0:	movw	r0, #0
   2e7a4:	moveq	r0, #1
   2e7a8:	str	r0, [sp]
   2e7ac:	ldr	r0, [sp]
   2e7b0:	tst	r0, #1
   2e7b4:	beq	2e7f8 <__assert_fail@plt+0x1d364>
   2e7b8:	ldr	r0, [fp, #-16]
   2e7bc:	str	r0, [sp, #8]
   2e7c0:	ldr	r0, [fp, #-16]
   2e7c4:	ldr	r0, [r0]
   2e7c8:	str	r0, [fp, #-16]
   2e7cc:	ldr	r0, [sp, #12]
   2e7d0:	ldr	r0, [r0]
   2e7d4:	str	r0, [sp, #12]
   2e7d8:	ldr	r0, [fp, #-16]
   2e7dc:	movw	r1, #0
   2e7e0:	cmp	r0, r1
   2e7e4:	bne	2e7f4 <__assert_fail@plt+0x1d360>
   2e7e8:	ldr	r0, [sp, #20]
   2e7ec:	str	r0, [fp, #-4]
   2e7f0:	b	2e814 <__assert_fail@plt+0x1d380>
   2e7f4:	b	2e774 <__assert_fail@plt+0x1d2e0>
   2e7f8:	ldr	r0, [fp, #-16]
   2e7fc:	ldr	r0, [r0, #8]
   2e800:	str	r0, [fp, #-16]
   2e804:	ldr	r0, [sp, #12]
   2e808:	add	r0, r0, #8
   2e80c:	str	r0, [sp, #16]
   2e810:	b	2e6c0 <__assert_fail@plt+0x1d22c>
   2e814:	ldr	r0, [fp, #-4]
   2e818:	mov	sp, fp
   2e81c:	pop	{fp, pc}
   2e820:	sub	sp, sp, #12
   2e824:	str	r0, [sp, #8]
   2e828:	str	r1, [sp, #4]
   2e82c:	ldr	r0, [sp, #8]
   2e830:	str	r0, [sp]
   2e834:	ldr	r0, [sp, #4]
   2e838:	ldr	r0, [r0, #24]
   2e83c:	and	r0, r0, #255	; 0xff
   2e840:	cmp	r0, #17
   2e844:	bne	2e874 <__assert_fail@plt+0x1d3e0>
   2e848:	ldr	r0, [sp, #4]
   2e84c:	ldr	r0, [r0, #20]
   2e850:	ldr	r1, [sp]
   2e854:	cmp	r0, r1
   2e858:	bne	2e874 <__assert_fail@plt+0x1d3e0>
   2e85c:	ldr	r0, [sp, #4]
   2e860:	ldr	r1, [r0, #24]
   2e864:	mvn	r2, #524288	; 0x80000
   2e868:	and	r1, r1, r2
   2e86c:	orr	r1, r1, #524288	; 0x80000
   2e870:	str	r1, [r0, #24]
   2e874:	movw	r0, #0
   2e878:	add	sp, sp, #12
   2e87c:	bx	lr
   2e880:	push	{fp, lr}
   2e884:	mov	fp, sp
   2e888:	sub	sp, sp, #40	; 0x28
   2e88c:	str	r0, [fp, #-8]
   2e890:	str	r1, [fp, #-12]
   2e894:	str	r2, [fp, #-16]
   2e898:	ldr	r0, [fp, #-8]
   2e89c:	str	r0, [sp, #20]
   2e8a0:	ldr	r0, [fp, #-12]
   2e8a4:	ldr	r1, [fp, #-16]
   2e8a8:	ldr	r2, [sp, #20]
   2e8ac:	str	r0, [sp, #8]
   2e8b0:	mov	r0, r1
   2e8b4:	mov	r1, r2
   2e8b8:	ldr	r2, [sp, #8]
   2e8bc:	blx	r2
   2e8c0:	str	r0, [sp, #16]
   2e8c4:	ldr	r0, [sp, #16]
   2e8c8:	cmp	r0, #0
   2e8cc:	beq	2e8dc <__assert_fail@plt+0x1d448>
   2e8d0:	ldr	r0, [sp, #16]
   2e8d4:	str	r0, [fp, #-4]
   2e8d8:	b	2e990 <__assert_fail@plt+0x1d4fc>
   2e8dc:	ldr	r0, [sp, #20]
   2e8e0:	ldr	r0, [r0, #4]
   2e8e4:	movw	r1, #0
   2e8e8:	cmp	r0, r1
   2e8ec:	beq	2e900 <__assert_fail@plt+0x1d46c>
   2e8f0:	ldr	r0, [sp, #20]
   2e8f4:	ldr	r0, [r0, #4]
   2e8f8:	str	r0, [sp, #20]
   2e8fc:	b	2e98c <__assert_fail@plt+0x1d4f8>
   2e900:	movw	r0, #0
   2e904:	str	r0, [sp, #12]
   2e908:	ldr	r0, [sp, #20]
   2e90c:	ldr	r0, [r0, #8]
   2e910:	ldr	r1, [sp, #12]
   2e914:	cmp	r0, r1
   2e918:	movw	r0, #1
   2e91c:	str	r0, [sp, #4]
   2e920:	beq	2e940 <__assert_fail@plt+0x1d4ac>
   2e924:	ldr	r0, [sp, #20]
   2e928:	ldr	r0, [r0, #8]
   2e92c:	movw	r1, #0
   2e930:	cmp	r0, r1
   2e934:	movw	r0, #0
   2e938:	moveq	r0, #1
   2e93c:	str	r0, [sp, #4]
   2e940:	ldr	r0, [sp, #4]
   2e944:	tst	r0, #1
   2e948:	beq	2e980 <__assert_fail@plt+0x1d4ec>
   2e94c:	ldr	r0, [sp, #20]
   2e950:	str	r0, [sp, #12]
   2e954:	ldr	r0, [sp, #20]
   2e958:	ldr	r0, [r0]
   2e95c:	str	r0, [sp, #20]
   2e960:	ldr	r0, [sp, #20]
   2e964:	movw	r1, #0
   2e968:	cmp	r0, r1
   2e96c:	bne	2e97c <__assert_fail@plt+0x1d4e8>
   2e970:	movw	r0, #0
   2e974:	str	r0, [fp, #-4]
   2e978:	b	2e990 <__assert_fail@plt+0x1d4fc>
   2e97c:	b	2e908 <__assert_fail@plt+0x1d474>
   2e980:	ldr	r0, [sp, #20]
   2e984:	ldr	r0, [r0, #8]
   2e988:	str	r0, [sp, #20]
   2e98c:	b	2e8a0 <__assert_fail@plt+0x1d40c>
   2e990:	ldr	r0, [fp, #-4]
   2e994:	mov	sp, fp
   2e998:	pop	{fp, pc}
   2e99c:	sub	sp, sp, #20
   2e9a0:	str	r0, [sp, #16]
   2e9a4:	str	r1, [sp, #12]
   2e9a8:	ldr	r0, [sp, #16]
   2e9ac:	str	r0, [sp, #8]
   2e9b0:	ldr	r0, [sp, #12]
   2e9b4:	ldr	r0, [r0, #24]
   2e9b8:	and	r0, r0, #255	; 0xff
   2e9bc:	cmp	r0, #4
   2e9c0:	bne	2ea24 <__assert_fail@plt+0x1d590>
   2e9c4:	ldr	r0, [sp, #8]
   2e9c8:	ldr	r0, [r0, #132]	; 0x84
   2e9cc:	movw	r1, #0
   2e9d0:	cmp	r0, r1
   2e9d4:	beq	2ea24 <__assert_fail@plt+0x1d590>
   2e9d8:	ldr	r0, [sp, #12]
   2e9dc:	ldr	r0, [r0, #20]
   2e9e0:	str	r0, [sp, #4]
   2e9e4:	ldr	r0, [sp, #8]
   2e9e8:	ldr	r0, [r0, #132]	; 0x84
   2e9ec:	ldr	r1, [sp, #4]
   2e9f0:	add	r0, r0, r1, lsl #2
   2e9f4:	ldr	r0, [r0]
   2e9f8:	ldr	r1, [sp, #12]
   2e9fc:	str	r0, [r1, #20]
   2ea00:	ldr	r0, [sp, #12]
   2ea04:	ldr	r0, [r0, #20]
   2ea08:	movw	r1, #1
   2ea0c:	lsl	r0, r1, r0
   2ea10:	ldr	r1, [sp, #8]
   2ea14:	ldr	r2, [r1, #80]	; 0x50
   2ea18:	orr	r0, r2, r0
   2ea1c:	str	r0, [r1, #80]	; 0x50
   2ea20:	b	2eb04 <__assert_fail@plt+0x1d670>
   2ea24:	ldr	r0, [sp, #12]
   2ea28:	ldr	r0, [r0, #24]
   2ea2c:	and	r0, r0, #255	; 0xff
   2ea30:	cmp	r0, #17
   2ea34:	bne	2eb00 <__assert_fail@plt+0x1d66c>
   2ea38:	ldr	r0, [sp, #12]
   2ea3c:	ldr	r0, [r0, #4]
   2ea40:	movw	r1, #0
   2ea44:	cmp	r0, r1
   2ea48:	beq	2eb00 <__assert_fail@plt+0x1d66c>
   2ea4c:	ldr	r0, [sp, #12]
   2ea50:	ldr	r0, [r0, #4]
   2ea54:	ldr	r0, [r0, #24]
   2ea58:	and	r0, r0, #255	; 0xff
   2ea5c:	cmp	r0, #17
   2ea60:	bne	2eb00 <__assert_fail@plt+0x1d66c>
   2ea64:	ldr	r0, [sp, #12]
   2ea68:	ldr	r0, [r0, #4]
   2ea6c:	ldr	r0, [r0, #20]
   2ea70:	str	r0, [sp]
   2ea74:	ldr	r0, [sp, #12]
   2ea78:	ldr	r0, [r0, #4]
   2ea7c:	ldr	r0, [r0, #4]
   2ea80:	ldr	r1, [sp, #12]
   2ea84:	str	r0, [r1, #4]
   2ea88:	ldr	r0, [sp, #12]
   2ea8c:	ldr	r0, [r0, #4]
   2ea90:	movw	r1, #0
   2ea94:	cmp	r0, r1
   2ea98:	beq	2eaac <__assert_fail@plt+0x1d618>
   2ea9c:	ldr	r0, [sp, #12]
   2eaa0:	ldr	r1, [sp, #12]
   2eaa4:	ldr	r1, [r1, #4]
   2eaa8:	str	r0, [r1]
   2eaac:	ldr	r0, [sp, #8]
   2eab0:	ldr	r0, [r0, #132]	; 0x84
   2eab4:	ldr	r1, [sp, #12]
   2eab8:	ldr	r1, [r1, #20]
   2eabc:	ldr	r1, [r0, r1, lsl #2]
   2eac0:	ldr	r2, [sp]
   2eac4:	add	r0, r0, r2, lsl #2
   2eac8:	str	r1, [r0]
   2eacc:	ldr	r0, [sp]
   2ead0:	cmp	r0, #32
   2ead4:	bge	2eafc <__assert_fail@plt+0x1d668>
   2ead8:	ldr	r0, [sp]
   2eadc:	movw	r1, #1
   2eae0:	lsl	r0, r1, r0
   2eae4:	mvn	r1, #0
   2eae8:	eor	r0, r0, r1
   2eaec:	ldr	r1, [sp, #8]
   2eaf0:	ldr	r2, [r1, #80]	; 0x50
   2eaf4:	and	r0, r2, r0
   2eaf8:	str	r0, [r1, #80]	; 0x50
   2eafc:	b	2eb00 <__assert_fail@plt+0x1d66c>
   2eb00:	b	2eb04 <__assert_fail@plt+0x1d670>
   2eb04:	movw	r0, #0
   2eb08:	add	sp, sp, #20
   2eb0c:	bx	lr
   2eb10:	push	{fp, lr}
   2eb14:	mov	fp, sp
   2eb18:	sub	sp, sp, #16
   2eb1c:	str	r0, [fp, #-4]
   2eb20:	str	r1, [sp, #8]
   2eb24:	ldr	r0, [fp, #-4]
   2eb28:	str	r0, [sp, #4]
   2eb2c:	movw	r0, #0
   2eb30:	str	r0, [sp]
   2eb34:	ldr	r1, [sp, #8]
   2eb38:	ldr	r1, [r1, #4]
   2eb3c:	cmp	r1, r0
   2eb40:	beq	2eba0 <__assert_fail@plt+0x1d70c>
   2eb44:	ldr	r0, [sp, #8]
   2eb48:	ldr	r0, [r0, #4]
   2eb4c:	ldr	r0, [r0, #24]
   2eb50:	and	r0, r0, #255	; 0xff
   2eb54:	cmp	r0, #17
   2eb58:	bne	2eba0 <__assert_fail@plt+0x1d70c>
   2eb5c:	ldr	r1, [sp, #4]
   2eb60:	ldr	r0, [sp, #8]
   2eb64:	ldr	r2, [r0, #4]
   2eb68:	mov	r0, sp
   2eb6c:	bl	2f314 <__assert_fail@plt+0x1de80>
   2eb70:	ldr	r1, [sp, #8]
   2eb74:	str	r0, [r1, #4]
   2eb78:	ldr	r0, [sp, #8]
   2eb7c:	ldr	r0, [r0, #4]
   2eb80:	movw	r1, #0
   2eb84:	cmp	r0, r1
   2eb88:	beq	2eb9c <__assert_fail@plt+0x1d708>
   2eb8c:	ldr	r0, [sp, #8]
   2eb90:	ldr	r1, [sp, #8]
   2eb94:	ldr	r1, [r1, #4]
   2eb98:	str	r0, [r1]
   2eb9c:	b	2eba0 <__assert_fail@plt+0x1d70c>
   2eba0:	ldr	r0, [sp, #8]
   2eba4:	ldr	r0, [r0, #8]
   2eba8:	movw	r1, #0
   2ebac:	cmp	r0, r1
   2ebb0:	beq	2ec10 <__assert_fail@plt+0x1d77c>
   2ebb4:	ldr	r0, [sp, #8]
   2ebb8:	ldr	r0, [r0, #8]
   2ebbc:	ldr	r0, [r0, #24]
   2ebc0:	and	r0, r0, #255	; 0xff
   2ebc4:	cmp	r0, #17
   2ebc8:	bne	2ec10 <__assert_fail@plt+0x1d77c>
   2ebcc:	ldr	r1, [sp, #4]
   2ebd0:	ldr	r0, [sp, #8]
   2ebd4:	ldr	r2, [r0, #8]
   2ebd8:	mov	r0, sp
   2ebdc:	bl	2f314 <__assert_fail@plt+0x1de80>
   2ebe0:	ldr	r1, [sp, #8]
   2ebe4:	str	r0, [r1, #8]
   2ebe8:	ldr	r0, [sp, #8]
   2ebec:	ldr	r0, [r0, #8]
   2ebf0:	movw	r1, #0
   2ebf4:	cmp	r0, r1
   2ebf8:	beq	2ec0c <__assert_fail@plt+0x1d778>
   2ebfc:	ldr	r0, [sp, #8]
   2ec00:	ldr	r1, [sp, #8]
   2ec04:	ldr	r1, [r1, #8]
   2ec08:	str	r0, [r1]
   2ec0c:	b	2ec10 <__assert_fail@plt+0x1d77c>
   2ec10:	ldr	r0, [sp]
   2ec14:	mov	sp, fp
   2ec18:	pop	{fp, pc}
   2ec1c:	push	{fp, lr}
   2ec20:	mov	fp, sp
   2ec24:	sub	sp, sp, #24
   2ec28:	str	r0, [fp, #-8]
   2ec2c:	str	r1, [sp, #12]
   2ec30:	ldr	r0, [fp, #-8]
   2ec34:	str	r0, [sp, #8]
   2ec38:	ldr	r0, [sp, #12]
   2ec3c:	ldr	r0, [r0, #24]
   2ec40:	and	r0, r0, #255	; 0xff
   2ec44:	cmp	r0, #16
   2ec48:	bne	2ec78 <__assert_fail@plt+0x1d7e4>
   2ec4c:	ldr	r0, [sp, #12]
   2ec50:	ldr	r0, [r0, #4]
   2ec54:	ldr	r0, [r0, #12]
   2ec58:	ldr	r1, [sp, #12]
   2ec5c:	str	r0, [r1, #12]
   2ec60:	ldr	r0, [sp, #12]
   2ec64:	ldr	r0, [r0, #4]
   2ec68:	ldr	r0, [r0, #28]
   2ec6c:	ldr	r1, [sp, #12]
   2ec70:	str	r0, [r1, #28]
   2ec74:	b	2ed14 <__assert_fail@plt+0x1d880>
   2ec78:	ldr	r0, [sp, #12]
   2ec7c:	str	r0, [r0, #12]
   2ec80:	ldr	r0, [sp, #8]
   2ec84:	ldr	r1, [sp, #12]
   2ec88:	ldr	r2, [r1, #20]
   2ec8c:	ldr	r1, [r1, #24]
   2ec90:	str	r1, [sp, #4]
   2ec94:	mov	r1, r2
   2ec98:	ldr	r2, [sp, #4]
   2ec9c:	bl	2f53c <__assert_fail@plt+0x1e0a8>
   2eca0:	ldr	r1, [sp, #12]
   2eca4:	str	r0, [r1, #28]
   2eca8:	ldr	r0, [sp, #12]
   2ecac:	ldr	r0, [r0, #28]
   2ecb0:	cmn	r0, #1
   2ecb4:	bne	2ecc4 <__assert_fail@plt+0x1d830>
   2ecb8:	movw	r0, #12
   2ecbc:	str	r0, [fp, #-4]
   2ecc0:	b	2ed1c <__assert_fail@plt+0x1d888>
   2ecc4:	ldr	r0, [sp, #12]
   2ecc8:	ldr	r0, [r0, #24]
   2eccc:	and	r0, r0, #255	; 0xff
   2ecd0:	cmp	r0, #12
   2ecd4:	bne	2ed10 <__assert_fail@plt+0x1d87c>
   2ecd8:	ldr	r0, [pc, #72]	; 2ed28 <__assert_fail@plt+0x1d894>
   2ecdc:	ldr	r1, [sp, #12]
   2ece0:	ldr	r2, [r1, #20]
   2ece4:	ldr	r1, [r1, #28]
   2ece8:	ldr	r3, [sp, #8]
   2ecec:	ldr	r3, [r3]
   2ecf0:	add	r1, r3, r1, lsl #3
   2ecf4:	ldr	r3, [r1, #4]
   2ecf8:	movw	ip, #1023	; 0x3ff
   2ecfc:	and	r2, r2, ip
   2ed00:	lsl	r2, r2, #8
   2ed04:	and	r0, r3, r0
   2ed08:	orr	r0, r0, r2
   2ed0c:	str	r0, [r1, #4]
   2ed10:	b	2ed14 <__assert_fail@plt+0x1d880>
   2ed14:	movw	r0, #0
   2ed18:	str	r0, [fp, #-4]
   2ed1c:	ldr	r0, [fp, #-4]
   2ed20:	mov	sp, fp
   2ed24:	pop	{fp, pc}
   2ed28:			; <UNDEFINED> instruction: 0xfffc00ff
   2ed2c:	sub	sp, sp, #12
   2ed30:	str	r0, [sp, #8]
   2ed34:	str	r1, [sp, #4]
   2ed38:	ldr	r0, [sp, #4]
   2ed3c:	ldrb	r0, [r0, #24]
   2ed40:	mov	r1, r0
   2ed44:	cmp	r0, #11
   2ed48:	str	r1, [sp]
   2ed4c:	beq	2ed64 <__assert_fail@plt+0x1d8d0>
   2ed50:	b	2ed54 <__assert_fail@plt+0x1d8c0>
   2ed54:	ldr	r0, [sp]
   2ed58:	cmp	r0, #16
   2ed5c:	beq	2ed78 <__assert_fail@plt+0x1d8e4>
   2ed60:	b	2eda8 <__assert_fail@plt+0x1d914>
   2ed64:	ldr	r0, [sp, #4]
   2ed68:	ldr	r1, [sp, #4]
   2ed6c:	ldr	r1, [r1, #4]
   2ed70:	str	r0, [r1, #16]
   2ed74:	b	2edfc <__assert_fail@plt+0x1d968>
   2ed78:	ldr	r0, [sp, #4]
   2ed7c:	ldr	r0, [r0, #8]
   2ed80:	ldr	r0, [r0, #12]
   2ed84:	ldr	r1, [sp, #4]
   2ed88:	ldr	r1, [r1, #4]
   2ed8c:	str	r0, [r1, #16]
   2ed90:	ldr	r0, [sp, #4]
   2ed94:	ldr	r0, [r0, #16]
   2ed98:	ldr	r1, [sp, #4]
   2ed9c:	ldr	r1, [r1, #8]
   2eda0:	str	r0, [r1, #16]
   2eda4:	b	2edfc <__assert_fail@plt+0x1d968>
   2eda8:	ldr	r0, [sp, #4]
   2edac:	ldr	r0, [r0, #4]
   2edb0:	movw	r1, #0
   2edb4:	cmp	r0, r1
   2edb8:	beq	2edd0 <__assert_fail@plt+0x1d93c>
   2edbc:	ldr	r0, [sp, #4]
   2edc0:	ldr	r0, [r0, #16]
   2edc4:	ldr	r1, [sp, #4]
   2edc8:	ldr	r1, [r1, #4]
   2edcc:	str	r0, [r1, #16]
   2edd0:	ldr	r0, [sp, #4]
   2edd4:	ldr	r0, [r0, #8]
   2edd8:	movw	r1, #0
   2eddc:	cmp	r0, r1
   2ede0:	beq	2edf8 <__assert_fail@plt+0x1d964>
   2ede4:	ldr	r0, [sp, #4]
   2ede8:	ldr	r0, [r0, #16]
   2edec:	ldr	r1, [sp, #4]
   2edf0:	ldr	r1, [r1, #8]
   2edf4:	str	r0, [r1, #16]
   2edf8:	b	2edfc <__assert_fail@plt+0x1d968>
   2edfc:	movw	r0, #0
   2ee00:	add	sp, sp, #12
   2ee04:	bx	lr
   2ee08:	push	{fp, lr}
   2ee0c:	mov	fp, sp
   2ee10:	sub	sp, sp, #32
   2ee14:	str	r0, [fp, #-4]
   2ee18:	str	r1, [fp, #-8]
   2ee1c:	ldr	r0, [fp, #-4]
   2ee20:	str	r0, [fp, #-12]
   2ee24:	ldr	r0, [fp, #-8]
   2ee28:	ldr	r0, [r0, #28]
   2ee2c:	str	r0, [sp, #16]
   2ee30:	mov	r0, #0
   2ee34:	str	r0, [sp, #12]
   2ee38:	ldr	r0, [fp, #-8]
   2ee3c:	ldrb	r0, [r0, #24]
   2ee40:	sub	r0, r0, #2
   2ee44:	cmp	r0, #14
   2ee48:	str	r0, [sp]
   2ee4c:	bhi	2f028 <__assert_fail@plt+0x1db94>
   2ee50:	add	r0, pc, #8
   2ee54:	ldr	r1, [sp]
   2ee58:	ldr	r0, [r0, r1, lsl #2]
   2ee5c:	mov	pc, r0
   2ee60:	andeq	lr, r2, r0, lsr #29
   2ee64:	andeq	pc, r2, r8, lsr #32
   2ee68:	andeq	lr, r2, r8, asr #31
   2ee6c:	andeq	pc, r2, r8, lsr #32
   2ee70:	andeq	pc, r2, r8, lsr #32
   2ee74:	andeq	pc, r2, r8, lsr #32
   2ee78:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2ee7c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2ee80:			; <UNDEFINED> instruction: 0x0002eebc
   2ee84:			; <UNDEFINED> instruction: 0x0002eebc
   2ee88:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2ee8c:	andeq	pc, r2, r8, lsr #32
   2ee90:	andeq	pc, r2, r8, lsr #32
   2ee94:	andeq	pc, r2, r8, lsr #32
   2ee98:	muleq	r2, ip, lr
   2ee9c:	b	2f064 <__assert_fail@plt+0x1dbd0>
   2eea0:	ldr	r0, [fp, #-8]
   2eea4:	ldr	r0, [r0, #16]
   2eea8:	movw	r1, #0
   2eeac:	cmp	r0, r1
   2eeb0:	bne	2eeb8 <__assert_fail@plt+0x1da24>
   2eeb4:	b	2eeb8 <__assert_fail@plt+0x1da24>
   2eeb8:	b	2f064 <__assert_fail@plt+0x1dbd0>
   2eebc:	ldr	r0, [fp, #-12]
   2eec0:	ldrb	r1, [r0, #88]	; 0x58
   2eec4:	bic	r1, r1, #1
   2eec8:	movw	r2, #1
   2eecc:	orr	r1, r1, r2
   2eed0:	strb	r1, [r0, #88]	; 0x58
   2eed4:	ldr	r0, [fp, #-8]
   2eed8:	ldr	r0, [r0, #4]
   2eedc:	movw	r1, #0
   2eee0:	cmp	r0, r1
   2eee4:	beq	2ef00 <__assert_fail@plt+0x1da6c>
   2eee8:	ldr	r0, [fp, #-8]
   2eeec:	ldr	r0, [r0, #4]
   2eef0:	ldr	r0, [r0, #12]
   2eef4:	ldr	r0, [r0, #28]
   2eef8:	str	r0, [sp, #8]
   2eefc:	b	2ef10 <__assert_fail@plt+0x1da7c>
   2ef00:	ldr	r0, [fp, #-8]
   2ef04:	ldr	r0, [r0, #16]
   2ef08:	ldr	r0, [r0, #28]
   2ef0c:	str	r0, [sp, #8]
   2ef10:	ldr	r0, [fp, #-8]
   2ef14:	ldr	r0, [r0, #8]
   2ef18:	movw	r1, #0
   2ef1c:	cmp	r0, r1
   2ef20:	beq	2ef3c <__assert_fail@plt+0x1daa8>
   2ef24:	ldr	r0, [fp, #-8]
   2ef28:	ldr	r0, [r0, #8]
   2ef2c:	ldr	r0, [r0, #12]
   2ef30:	ldr	r0, [r0, #28]
   2ef34:	str	r0, [sp, #4]
   2ef38:	b	2ef4c <__assert_fail@plt+0x1dab8>
   2ef3c:	ldr	r0, [fp, #-8]
   2ef40:	ldr	r0, [r0, #16]
   2ef44:	ldr	r0, [r0, #28]
   2ef48:	str	r0, [sp, #4]
   2ef4c:	ldr	r0, [sp, #8]
   2ef50:	cmn	r0, #1
   2ef54:	ble	2ef5c <__assert_fail@plt+0x1dac8>
   2ef58:	b	2ef5c <__assert_fail@plt+0x1dac8>
   2ef5c:	ldr	r0, [sp, #4]
   2ef60:	cmn	r0, #1
   2ef64:	ble	2ef6c <__assert_fail@plt+0x1dad8>
   2ef68:	b	2ef6c <__assert_fail@plt+0x1dad8>
   2ef6c:	ldr	r0, [fp, #-12]
   2ef70:	ldr	r0, [r0, #20]
   2ef74:	ldr	r1, [sp, #16]
   2ef78:	movw	r2, #12
   2ef7c:	mul	r1, r1, r2
   2ef80:	add	r0, r0, r1
   2ef84:	ldr	r1, [sp, #8]
   2ef88:	ldr	r2, [sp, #4]
   2ef8c:	bl	2f858 <__assert_fail@plt+0x1e3c4>
   2ef90:	str	r0, [sp, #12]
   2ef94:	b	2f064 <__assert_fail@plt+0x1dbd0>
   2ef98:	ldr	r0, [fp, #-12]
   2ef9c:	ldr	r0, [r0, #20]
   2efa0:	ldr	r1, [sp, #16]
   2efa4:	movw	r2, #12
   2efa8:	mul	r1, r1, r2
   2efac:	add	r0, r0, r1
   2efb0:	ldr	r1, [fp, #-8]
   2efb4:	ldr	r1, [r1, #16]
   2efb8:	ldr	r1, [r1, #28]
   2efbc:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   2efc0:	str	r0, [sp, #12]
   2efc4:	b	2f064 <__assert_fail@plt+0x1dbd0>
   2efc8:	ldr	r0, [fp, #-8]
   2efcc:	ldr	r0, [r0, #16]
   2efd0:	ldr	r0, [r0, #28]
   2efd4:	ldr	r1, [fp, #-12]
   2efd8:	ldr	r1, [r1, #12]
   2efdc:	ldr	r2, [sp, #16]
   2efe0:	add	r1, r1, r2, lsl #2
   2efe4:	str	r0, [r1]
   2efe8:	ldr	r0, [fp, #-8]
   2efec:	ldr	r0, [r0, #24]
   2eff0:	and	r0, r0, #255	; 0xff
   2eff4:	cmp	r0, #4
   2eff8:	bne	2f024 <__assert_fail@plt+0x1db90>
   2effc:	ldr	r0, [fp, #-12]
   2f000:	ldr	r1, [r0, #12]
   2f004:	ldr	r0, [r0, #20]
   2f008:	ldr	r2, [sp, #16]
   2f00c:	add	r3, r2, r2, lsl #1
   2f010:	add	r0, r0, r3, lsl #2
   2f014:	add	r1, r1, r2, lsl #2
   2f018:	ldr	r1, [r1]
   2f01c:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   2f020:	str	r0, [sp, #12]
   2f024:	b	2f064 <__assert_fail@plt+0x1dbd0>
   2f028:	ldr	r0, [fp, #-8]
   2f02c:	ldr	r0, [r0, #24]
   2f030:	and	r0, r0, #255	; 0xff
   2f034:	and	r0, r0, #8
   2f038:	cmp	r0, #0
   2f03c:	bne	2f044 <__assert_fail@plt+0x1dbb0>
   2f040:	b	2f044 <__assert_fail@plt+0x1dbb0>
   2f044:	ldr	r0, [fp, #-8]
   2f048:	ldr	r0, [r0, #16]
   2f04c:	ldr	r0, [r0, #28]
   2f050:	ldr	r1, [fp, #-12]
   2f054:	ldr	r1, [r1, #12]
   2f058:	ldr	r2, [sp, #16]
   2f05c:	add	r1, r1, r2, lsl #2
   2f060:	str	r0, [r1]
   2f064:	ldr	r0, [sp, #12]
   2f068:	mov	sp, fp
   2f06c:	pop	{fp, pc}
   2f070:	push	{fp, lr}
   2f074:	mov	fp, sp
   2f078:	sub	sp, sp, #32
   2f07c:	str	r0, [fp, #-8]
   2f080:	ldr	r0, [fp, #-8]
   2f084:	ldr	r0, [r0, #8]
   2f088:	cmp	r0, #0
   2f08c:	bls	2f094 <__assert_fail@plt+0x1dc00>
   2f090:	b	2f094 <__assert_fail@plt+0x1dc00>
   2f094:	movw	r0, #0
   2f098:	strb	r0, [fp, #-13]
   2f09c:	movw	r0, #0
   2f0a0:	str	r0, [fp, #-12]
   2f0a4:	ldr	r0, [fp, #-12]
   2f0a8:	ldr	r1, [fp, #-8]
   2f0ac:	ldr	r1, [r1, #8]
   2f0b0:	cmp	r0, r1
   2f0b4:	bne	2f0d8 <__assert_fail@plt+0x1dc44>
   2f0b8:	ldrb	r0, [fp, #-13]
   2f0bc:	tst	r0, #1
   2f0c0:	bne	2f0c8 <__assert_fail@plt+0x1dc34>
   2f0c4:	b	2f1a4 <__assert_fail@plt+0x1dd10>
   2f0c8:	movw	r0, #0
   2f0cc:	strb	r0, [fp, #-13]
   2f0d0:	movw	r0, #0
   2f0d4:	str	r0, [fp, #-12]
   2f0d8:	ldr	r0, [fp, #-8]
   2f0dc:	ldr	r0, [r0, #24]
   2f0e0:	ldr	r1, [fp, #-12]
   2f0e4:	movw	r2, #12
   2f0e8:	mul	r1, r1, r2
   2f0ec:	add	r0, r0, r1
   2f0f0:	ldr	r0, [r0, #4]
   2f0f4:	cmn	r0, #1
   2f0f8:	beq	2f100 <__assert_fail@plt+0x1dc6c>
   2f0fc:	b	2f100 <__assert_fail@plt+0x1dc6c>
   2f100:	ldr	r0, [fp, #-8]
   2f104:	ldr	r0, [r0, #24]
   2f108:	ldr	r1, [fp, #-12]
   2f10c:	movw	r2, #12
   2f110:	mul	r1, r1, r2
   2f114:	add	r0, r0, r1
   2f118:	ldr	r0, [r0, #4]
   2f11c:	cmp	r0, #0
   2f120:	beq	2f128 <__assert_fail@plt+0x1dc94>
   2f124:	b	2f194 <__assert_fail@plt+0x1dd00>
   2f128:	ldr	r1, [fp, #-8]
   2f12c:	ldr	r2, [fp, #-12]
   2f130:	mov	r0, sp
   2f134:	movw	r3, #1
   2f138:	and	r3, r3, #1
   2f13c:	bl	2f9e4 <__assert_fail@plt+0x1e550>
   2f140:	str	r0, [sp, #12]
   2f144:	ldr	r0, [sp, #12]
   2f148:	cmp	r0, #0
   2f14c:	beq	2f15c <__assert_fail@plt+0x1dcc8>
   2f150:	ldr	r0, [sp, #12]
   2f154:	str	r0, [fp, #-4]
   2f158:	b	2f1ac <__assert_fail@plt+0x1dd18>
   2f15c:	ldr	r0, [fp, #-8]
   2f160:	ldr	r0, [r0, #24]
   2f164:	ldr	r1, [fp, #-12]
   2f168:	movw	r2, #12
   2f16c:	mul	r1, r1, r2
   2f170:	add	r0, r0, r1
   2f174:	ldr	r0, [r0, #4]
   2f178:	cmp	r0, #0
   2f17c:	bne	2f190 <__assert_fail@plt+0x1dcfc>
   2f180:	movw	r0, #1
   2f184:	strb	r0, [fp, #-13]
   2f188:	ldr	r0, [sp, #8]
   2f18c:	bl	1388c <__assert_fail@plt+0x23f8>
   2f190:	b	2f194 <__assert_fail@plt+0x1dd00>
   2f194:	ldr	r0, [fp, #-12]
   2f198:	add	r0, r0, #1
   2f19c:	str	r0, [fp, #-12]
   2f1a0:	b	2f0a4 <__assert_fail@plt+0x1dc10>
   2f1a4:	movw	r0, #0
   2f1a8:	str	r0, [fp, #-4]
   2f1ac:	ldr	r0, [fp, #-4]
   2f1b0:	mov	sp, fp
   2f1b4:	pop	{fp, pc}
   2f1b8:	push	{fp, lr}
   2f1bc:	mov	fp, sp
   2f1c0:	sub	sp, sp, #24
   2f1c4:	str	r0, [fp, #-8]
   2f1c8:	movw	r0, #0
   2f1cc:	str	r0, [sp, #8]
   2f1d0:	ldr	r0, [sp, #8]
   2f1d4:	ldr	r1, [fp, #-8]
   2f1d8:	ldr	r1, [r1, #8]
   2f1dc:	cmp	r0, r1
   2f1e0:	bcs	2f218 <__assert_fail@plt+0x1dd84>
   2f1e4:	ldr	r0, [fp, #-8]
   2f1e8:	ldr	r0, [r0, #28]
   2f1ec:	ldr	r1, [sp, #8]
   2f1f0:	movw	r2, #12
   2f1f4:	mul	r1, r1, r2
   2f1f8:	add	r0, r0, r1
   2f1fc:	movw	r1, #0
   2f200:	and	r1, r1, #255	; 0xff
   2f204:	bl	113d4 <memset@plt>
   2f208:	ldr	r0, [sp, #8]
   2f20c:	add	r0, r0, #1
   2f210:	str	r0, [sp, #8]
   2f214:	b	2f1d0 <__assert_fail@plt+0x1dd3c>
   2f218:	movw	r0, #0
   2f21c:	str	r0, [sp, #12]
   2f220:	ldr	r0, [sp, #12]
   2f224:	ldr	r1, [fp, #-8]
   2f228:	ldr	r1, [r1, #8]
   2f22c:	cmp	r0, r1
   2f230:	bcs	2f300 <__assert_fail@plt+0x1de6c>
   2f234:	ldr	r0, [fp, #-8]
   2f238:	ldr	r0, [r0, #24]
   2f23c:	ldr	r1, [sp, #12]
   2f240:	movw	r2, #12
   2f244:	mul	r1, r1, r2
   2f248:	add	r0, r0, r1
   2f24c:	ldr	r0, [r0, #8]
   2f250:	str	r0, [sp]
   2f254:	movw	r0, #0
   2f258:	str	r0, [sp, #8]
   2f25c:	ldr	r0, [sp, #8]
   2f260:	ldr	r1, [fp, #-8]
   2f264:	ldr	r1, [r1, #24]
   2f268:	ldr	r2, [sp, #12]
   2f26c:	movw	r3, #12
   2f270:	mul	r2, r2, r3
   2f274:	add	r1, r1, r2
   2f278:	ldr	r1, [r1, #4]
   2f27c:	cmp	r0, r1
   2f280:	bge	2f2ec <__assert_fail@plt+0x1de58>
   2f284:	ldr	r0, [fp, #-8]
   2f288:	ldr	r0, [r0, #28]
   2f28c:	ldr	r1, [sp]
   2f290:	ldr	r2, [sp, #8]
   2f294:	add	r1, r1, r2, lsl #2
   2f298:	ldr	r1, [r1]
   2f29c:	movw	r2, #12
   2f2a0:	mul	r1, r1, r2
   2f2a4:	add	r0, r0, r1
   2f2a8:	ldr	r1, [sp, #12]
   2f2ac:	bl	30b48 <__assert_fail@plt+0x1f6b4>
   2f2b0:	and	r0, r0, #1
   2f2b4:	strb	r0, [sp, #7]
   2f2b8:	ldrb	r0, [sp, #7]
   2f2bc:	mvn	r1, #0
   2f2c0:	eor	r0, r0, r1
   2f2c4:	tst	r0, #1
   2f2c8:	beq	2f2d8 <__assert_fail@plt+0x1de44>
   2f2cc:	movw	r0, #12
   2f2d0:	str	r0, [fp, #-4]
   2f2d4:	b	2f308 <__assert_fail@plt+0x1de74>
   2f2d8:	b	2f2dc <__assert_fail@plt+0x1de48>
   2f2dc:	ldr	r0, [sp, #8]
   2f2e0:	add	r0, r0, #1
   2f2e4:	str	r0, [sp, #8]
   2f2e8:	b	2f25c <__assert_fail@plt+0x1ddc8>
   2f2ec:	b	2f2f0 <__assert_fail@plt+0x1de5c>
   2f2f0:	ldr	r0, [sp, #12]
   2f2f4:	add	r0, r0, #1
   2f2f8:	str	r0, [sp, #12]
   2f2fc:	b	2f220 <__assert_fail@plt+0x1dd8c>
   2f300:	movw	r0, #0
   2f304:	str	r0, [fp, #-4]
   2f308:	ldr	r0, [fp, #-4]
   2f30c:	mov	sp, fp
   2f310:	pop	{fp, pc}
   2f314:	push	{fp, lr}
   2f318:	mov	fp, sp
   2f31c:	sub	sp, sp, #56	; 0x38
   2f320:	str	r0, [fp, #-8]
   2f324:	str	r1, [fp, #-12]
   2f328:	str	r2, [fp, #-16]
   2f32c:	ldr	r0, [fp, #-12]
   2f330:	ldr	r0, [r0]
   2f334:	str	r0, [fp, #-20]	; 0xffffffec
   2f338:	ldr	r0, [fp, #-16]
   2f33c:	ldr	r0, [r0, #4]
   2f340:	str	r0, [fp, #-24]	; 0xffffffe8
   2f344:	ldr	r0, [fp, #-12]
   2f348:	ldrb	r0, [r0, #28]
   2f34c:	ubfx	r0, r0, #4, #1
   2f350:	and	r0, r0, #255	; 0xff
   2f354:	cmp	r0, #0
   2f358:	beq	2f3b4 <__assert_fail@plt+0x1df20>
   2f35c:	ldr	r0, [fp, #-16]
   2f360:	ldr	r0, [r0, #4]
   2f364:	movw	r1, #0
   2f368:	cmp	r0, r1
   2f36c:	beq	2f3b4 <__assert_fail@plt+0x1df20>
   2f370:	ldr	r0, [fp, #-16]
   2f374:	ldr	r0, [r0, #20]
   2f378:	cmp	r0, #32
   2f37c:	bge	2f3a4 <__assert_fail@plt+0x1df10>
   2f380:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f384:	ldr	r0, [r0, #80]	; 0x50
   2f388:	ldr	r1, [fp, #-16]
   2f38c:	ldr	r1, [r1, #20]
   2f390:	movw	r2, #1
   2f394:	lsl	r1, r2, r1
   2f398:	and	r0, r0, r1
   2f39c:	cmp	r0, #0
   2f3a0:	bne	2f3b4 <__assert_fail@plt+0x1df20>
   2f3a4:	ldr	r0, [fp, #-16]
   2f3a8:	ldr	r0, [r0, #4]
   2f3ac:	str	r0, [fp, #-4]
   2f3b0:	b	2f530 <__assert_fail@plt+0x1e09c>
   2f3b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f3b8:	movw	r1, #0
   2f3bc:	str	r1, [sp, #12]
   2f3c0:	ldr	r2, [sp, #12]
   2f3c4:	movw	r3, #8
   2f3c8:	bl	29108 <__assert_fail@plt+0x17c74>
   2f3cc:	str	r0, [sp, #28]
   2f3d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f3d4:	movw	r1, #0
   2f3d8:	str	r1, [sp, #8]
   2f3dc:	ldr	r2, [sp, #8]
   2f3e0:	movw	r3, #9
   2f3e4:	bl	29108 <__assert_fail@plt+0x17c74>
   2f3e8:	str	r0, [sp, #24]
   2f3ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3f0:	movw	r1, #0
   2f3f4:	cmp	r0, r1
   2f3f8:	beq	2f418 <__assert_fail@plt+0x1df84>
   2f3fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f404:	ldr	r2, [sp, #24]
   2f408:	movw	r3, #16
   2f40c:	bl	29108 <__assert_fail@plt+0x17c74>
   2f410:	str	r0, [sp, #4]
   2f414:	b	2f420 <__assert_fail@plt+0x1df8c>
   2f418:	ldr	r0, [sp, #24]
   2f41c:	str	r0, [sp, #4]
   2f420:	ldr	r0, [sp, #4]
   2f424:	str	r0, [sp, #20]
   2f428:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f42c:	ldr	r1, [sp, #28]
   2f430:	ldr	r2, [sp, #20]
   2f434:	movw	r3, #16
   2f438:	bl	29108 <__assert_fail@plt+0x17c74>
   2f43c:	str	r0, [sp, #16]
   2f440:	ldr	r0, [sp, #16]
   2f444:	movw	r1, #0
   2f448:	cmp	r0, r1
   2f44c:	movw	r0, #1
   2f450:	str	r0, [sp]
   2f454:	beq	2f4a0 <__assert_fail@plt+0x1e00c>
   2f458:	ldr	r0, [sp, #20]
   2f45c:	movw	r1, #0
   2f460:	cmp	r0, r1
   2f464:	movw	r0, #1
   2f468:	str	r0, [sp]
   2f46c:	beq	2f4a0 <__assert_fail@plt+0x1e00c>
   2f470:	ldr	r0, [sp, #28]
   2f474:	movw	r1, #0
   2f478:	cmp	r0, r1
   2f47c:	movw	r0, #1
   2f480:	str	r0, [sp]
   2f484:	beq	2f4a0 <__assert_fail@plt+0x1e00c>
   2f488:	ldr	r0, [sp, #24]
   2f48c:	movw	r1, #0
   2f490:	cmp	r0, r1
   2f494:	movw	r0, #0
   2f498:	moveq	r0, #1
   2f49c:	str	r0, [sp]
   2f4a0:	ldr	r0, [sp]
   2f4a4:	tst	r0, #1
   2f4a8:	beq	2f4c4 <__assert_fail@plt+0x1e030>
   2f4ac:	ldr	r0, [fp, #-8]
   2f4b0:	movw	r1, #12
   2f4b4:	str	r1, [r0]
   2f4b8:	movw	r0, #0
   2f4bc:	str	r0, [fp, #-4]
   2f4c0:	b	2f530 <__assert_fail@plt+0x1e09c>
   2f4c4:	ldr	r0, [fp, #-16]
   2f4c8:	ldr	r0, [r0, #20]
   2f4cc:	ldr	r1, [sp, #24]
   2f4d0:	str	r0, [r1, #20]
   2f4d4:	ldr	r1, [sp, #28]
   2f4d8:	str	r0, [r1, #20]
   2f4dc:	ldr	r0, [fp, #-16]
   2f4e0:	ldr	r0, [r0, #24]
   2f4e4:	lsr	r0, r0, #19
   2f4e8:	and	r0, r0, #1
   2f4ec:	ldr	r1, [sp, #24]
   2f4f0:	ldr	r2, [r1, #24]
   2f4f4:	and	r0, r0, #1
   2f4f8:	lsl	r3, r0, #19
   2f4fc:	mvn	ip, #524288	; 0x80000
   2f500:	and	r2, r2, ip
   2f504:	orr	r2, r2, r3
   2f508:	str	r2, [r1, #24]
   2f50c:	ldr	r1, [sp, #28]
   2f510:	ldr	r2, [r1, #24]
   2f514:	and	r0, r0, #1
   2f518:	lsl	r0, r0, #19
   2f51c:	and	r2, r2, ip
   2f520:	orr	r0, r2, r0
   2f524:	str	r0, [r1, #24]
   2f528:	ldr	r0, [sp, #16]
   2f52c:	str	r0, [fp, #-4]
   2f530:	ldr	r0, [fp, #-4]
   2f534:	mov	sp, fp
   2f538:	pop	{fp, pc}
   2f53c:	push	{fp, lr}
   2f540:	mov	fp, sp
   2f544:	sub	sp, sp, #64	; 0x40
   2f548:	str	r1, [fp, #-12]
   2f54c:	str	r2, [fp, #-8]
   2f550:	str	r0, [fp, #-16]
   2f554:	ldr	r0, [fp, #-16]
   2f558:	ldr	r0, [r0, #8]
   2f55c:	ldr	r1, [fp, #-16]
   2f560:	ldr	r1, [r1, #4]
   2f564:	cmp	r0, r1
   2f568:	bcc	2f71c <__assert_fail@plt+0x1e288>
   2f56c:	ldr	r0, [pc, #732]	; 2f850 <__assert_fail@plt+0x1e3bc>
   2f570:	ldr	r1, [fp, #-16]
   2f574:	ldr	r1, [r1, #4]
   2f578:	lsl	r1, r1, #1
   2f57c:	str	r1, [fp, #-20]	; 0xffffffec
   2f580:	movw	r1, #12
   2f584:	str	r1, [sp, #20]
   2f588:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f58c:	cmp	r0, r1
   2f590:	bcs	2f5a0 <__assert_fail@plt+0x1e10c>
   2f594:	mvn	r0, #0
   2f598:	str	r0, [fp, #-4]
   2f59c:	b	2f844 <__assert_fail@plt+0x1e3b0>
   2f5a0:	ldr	r0, [fp, #-16]
   2f5a4:	ldr	r0, [r0]
   2f5a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f5ac:	lsl	r1, r1, #3
   2f5b0:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2f5b4:	str	r0, [sp, #24]
   2f5b8:	ldr	r0, [sp, #24]
   2f5bc:	movw	r1, #0
   2f5c0:	cmp	r0, r1
   2f5c4:	bne	2f5d4 <__assert_fail@plt+0x1e140>
   2f5c8:	mvn	r0, #0
   2f5cc:	str	r0, [fp, #-4]
   2f5d0:	b	2f844 <__assert_fail@plt+0x1e3b0>
   2f5d4:	ldr	r0, [sp, #24]
   2f5d8:	ldr	r1, [fp, #-16]
   2f5dc:	str	r0, [r1]
   2f5e0:	ldr	r0, [fp, #-16]
   2f5e4:	ldr	r0, [r0, #12]
   2f5e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f5ec:	lsl	r1, r1, #2
   2f5f0:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2f5f4:	str	r0, [fp, #-24]	; 0xffffffe8
   2f5f8:	ldr	r0, [fp, #-16]
   2f5fc:	ldr	r0, [r0, #16]
   2f600:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f604:	lsl	r1, r1, #2
   2f608:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2f60c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f610:	ldr	r0, [fp, #-16]
   2f614:	ldr	r0, [r0, #20]
   2f618:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f61c:	movw	r2, #12
   2f620:	mul	r1, r1, r2
   2f624:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2f628:	str	r0, [sp, #32]
   2f62c:	ldr	r0, [fp, #-16]
   2f630:	ldr	r0, [r0, #24]
   2f634:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f638:	movw	r2, #12
   2f63c:	mul	r1, r1, r2
   2f640:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   2f644:	str	r0, [sp, #28]
   2f648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f64c:	movw	r1, #0
   2f650:	cmp	r0, r1
   2f654:	movw	r0, #1
   2f658:	str	r0, [sp, #16]
   2f65c:	beq	2f6a8 <__assert_fail@plt+0x1e214>
   2f660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f664:	movw	r1, #0
   2f668:	cmp	r0, r1
   2f66c:	movw	r0, #1
   2f670:	str	r0, [sp, #16]
   2f674:	beq	2f6a8 <__assert_fail@plt+0x1e214>
   2f678:	ldr	r0, [sp, #32]
   2f67c:	movw	r1, #0
   2f680:	cmp	r0, r1
   2f684:	movw	r0, #1
   2f688:	str	r0, [sp, #16]
   2f68c:	beq	2f6a8 <__assert_fail@plt+0x1e214>
   2f690:	ldr	r0, [sp, #28]
   2f694:	movw	r1, #0
   2f698:	cmp	r0, r1
   2f69c:	movw	r0, #0
   2f6a0:	moveq	r0, #1
   2f6a4:	str	r0, [sp, #16]
   2f6a8:	ldr	r0, [sp, #16]
   2f6ac:	tst	r0, #1
   2f6b0:	beq	2f6e0 <__assert_fail@plt+0x1e24c>
   2f6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6b8:	bl	1388c <__assert_fail@plt+0x23f8>
   2f6bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f6c0:	bl	1388c <__assert_fail@plt+0x23f8>
   2f6c4:	ldr	r0, [sp, #32]
   2f6c8:	bl	1388c <__assert_fail@plt+0x23f8>
   2f6cc:	ldr	r0, [sp, #28]
   2f6d0:	bl	1388c <__assert_fail@plt+0x23f8>
   2f6d4:	mvn	r0, #0
   2f6d8:	str	r0, [fp, #-4]
   2f6dc:	b	2f844 <__assert_fail@plt+0x1e3b0>
   2f6e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6e4:	ldr	r1, [fp, #-16]
   2f6e8:	str	r0, [r1, #12]
   2f6ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f6f0:	ldr	r1, [fp, #-16]
   2f6f4:	str	r0, [r1, #16]
   2f6f8:	ldr	r0, [sp, #32]
   2f6fc:	ldr	r1, [fp, #-16]
   2f700:	str	r0, [r1, #20]
   2f704:	ldr	r0, [sp, #28]
   2f708:	ldr	r1, [fp, #-16]
   2f70c:	str	r0, [r1, #24]
   2f710:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f714:	ldr	r1, [fp, #-16]
   2f718:	str	r0, [r1, #4]
   2f71c:	ldr	r0, [pc, #304]	; 2f854 <__assert_fail@plt+0x1e3c0>
   2f720:	ldr	r1, [fp, #-16]
   2f724:	ldr	r2, [r1]
   2f728:	ldr	r1, [r1, #8]
   2f72c:	add	r1, r2, r1, lsl #3
   2f730:	vldr	d16, [fp, #-12]
   2f734:	vstr	d16, [r1]
   2f738:	ldr	r1, [fp, #-16]
   2f73c:	ldr	r2, [r1]
   2f740:	ldr	r1, [r1, #8]
   2f744:	add	r1, r2, r1, lsl #3
   2f748:	ldr	r2, [r1, #4]
   2f74c:	and	r0, r2, r0
   2f750:	str	r0, [r1, #4]
   2f754:	ldr	r0, [fp, #-8]
   2f758:	and	r0, r0, #255	; 0xff
   2f75c:	cmp	r0, #5
   2f760:	bne	2f77c <__assert_fail@plt+0x1e2e8>
   2f764:	ldr	r0, [fp, #-16]
   2f768:	ldr	r0, [r0, #92]	; 0x5c
   2f76c:	cmp	r0, #1
   2f770:	movw	r0, #1
   2f774:	str	r0, [sp, #12]
   2f778:	bgt	2f794 <__assert_fail@plt+0x1e300>
   2f77c:	ldr	r0, [fp, #-8]
   2f780:	and	r0, r0, #255	; 0xff
   2f784:	cmp	r0, #6
   2f788:	movw	r0, #0
   2f78c:	moveq	r0, #1
   2f790:	str	r0, [sp, #12]
   2f794:	ldr	r0, [sp, #12]
   2f798:	and	r0, r0, #1
   2f79c:	ldr	r1, [fp, #-16]
   2f7a0:	ldr	r2, [r1]
   2f7a4:	ldr	r1, [r1, #8]
   2f7a8:	add	r1, r2, r1, lsl #3
   2f7ac:	ldr	r2, [r1, #4]
   2f7b0:	bic	r2, r2, #1048576	; 0x100000
   2f7b4:	orr	r0, r2, r0, lsl #20
   2f7b8:	str	r0, [r1, #4]
   2f7bc:	ldr	r0, [fp, #-16]
   2f7c0:	ldr	r1, [r0, #8]
   2f7c4:	ldr	r0, [r0, #12]
   2f7c8:	add	r0, r0, r1, lsl #2
   2f7cc:	mvn	r1, #0
   2f7d0:	str	r1, [r0]
   2f7d4:	ldr	r0, [fp, #-16]
   2f7d8:	ldr	r0, [r0, #20]
   2f7dc:	ldr	r1, [fp, #-16]
   2f7e0:	ldr	r1, [r1, #8]
   2f7e4:	movw	r2, #12
   2f7e8:	mul	r1, r1, r2
   2f7ec:	add	r0, r0, r1
   2f7f0:	movw	r1, #0
   2f7f4:	and	r3, r1, #255	; 0xff
   2f7f8:	str	r1, [sp, #8]
   2f7fc:	mov	r1, r3
   2f800:	str	r2, [sp, #4]
   2f804:	bl	113d4 <memset@plt>
   2f808:	ldr	r0, [fp, #-16]
   2f80c:	ldr	r0, [r0, #24]
   2f810:	ldr	r1, [fp, #-16]
   2f814:	ldr	r1, [r1, #8]
   2f818:	ldr	r2, [sp, #4]
   2f81c:	mul	r1, r1, r2
   2f820:	add	r0, r0, r1
   2f824:	ldr	r1, [sp, #8]
   2f828:	and	r1, r1, #255	; 0xff
   2f82c:	bl	113d4 <memset@plt>
   2f830:	ldr	r0, [fp, #-16]
   2f834:	ldr	r1, [r0, #8]
   2f838:	add	r2, r1, #1
   2f83c:	str	r2, [r0, #8]
   2f840:	str	r1, [fp, #-4]
   2f844:	ldr	r0, [fp, #-4]
   2f848:	mov	sp, fp
   2f84c:	pop	{fp, pc}
   2f850:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   2f854:			; <UNDEFINED> instruction: 0xfffc00ff
   2f858:	push	{fp, lr}
   2f85c:	mov	fp, sp
   2f860:	sub	sp, sp, #16
   2f864:	str	r0, [sp, #8]
   2f868:	str	r1, [sp, #4]
   2f86c:	str	r2, [sp]
   2f870:	ldr	r0, [sp, #8]
   2f874:	movw	r1, #2
   2f878:	str	r1, [r0]
   2f87c:	movw	r0, #8
   2f880:	bl	3f908 <__assert_fail@plt+0x2e474>
   2f884:	ldr	r1, [sp, #8]
   2f888:	str	r0, [r1, #8]
   2f88c:	ldr	r0, [sp, #8]
   2f890:	ldr	r0, [r0, #8]
   2f894:	movw	r1, #0
   2f898:	cmp	r0, r1
   2f89c:	bne	2f8ac <__assert_fail@plt+0x1e418>
   2f8a0:	movw	r0, #12
   2f8a4:	str	r0, [fp, #-4]
   2f8a8:	b	2f948 <__assert_fail@plt+0x1e4b4>
   2f8ac:	ldr	r0, [sp, #4]
   2f8b0:	ldr	r1, [sp]
   2f8b4:	cmp	r0, r1
   2f8b8:	bne	2f8dc <__assert_fail@plt+0x1e448>
   2f8bc:	ldr	r0, [sp, #8]
   2f8c0:	movw	r1, #1
   2f8c4:	str	r1, [r0, #4]
   2f8c8:	ldr	r0, [sp, #4]
   2f8cc:	ldr	r1, [sp, #8]
   2f8d0:	ldr	r1, [r1, #8]
   2f8d4:	str	r0, [r1]
   2f8d8:	b	2f940 <__assert_fail@plt+0x1e4ac>
   2f8dc:	ldr	r0, [sp, #8]
   2f8e0:	movw	r1, #2
   2f8e4:	str	r1, [r0, #4]
   2f8e8:	ldr	r0, [sp, #4]
   2f8ec:	ldr	r1, [sp]
   2f8f0:	cmp	r0, r1
   2f8f4:	bge	2f91c <__assert_fail@plt+0x1e488>
   2f8f8:	ldr	r0, [sp, #4]
   2f8fc:	ldr	r1, [sp, #8]
   2f900:	ldr	r1, [r1, #8]
   2f904:	str	r0, [r1]
   2f908:	ldr	r0, [sp]
   2f90c:	ldr	r1, [sp, #8]
   2f910:	ldr	r1, [r1, #8]
   2f914:	str	r0, [r1, #4]
   2f918:	b	2f93c <__assert_fail@plt+0x1e4a8>
   2f91c:	ldr	r0, [sp]
   2f920:	ldr	r1, [sp, #8]
   2f924:	ldr	r1, [r1, #8]
   2f928:	str	r0, [r1]
   2f92c:	ldr	r0, [sp, #4]
   2f930:	ldr	r1, [sp, #8]
   2f934:	ldr	r1, [r1, #8]
   2f938:	str	r0, [r1, #4]
   2f93c:	b	2f940 <__assert_fail@plt+0x1e4ac>
   2f940:	movw	r0, #0
   2f944:	str	r0, [fp, #-4]
   2f948:	ldr	r0, [fp, #-4]
   2f94c:	mov	sp, fp
   2f950:	pop	{fp, pc}
   2f954:	push	{fp, lr}
   2f958:	mov	fp, sp
   2f95c:	sub	sp, sp, #16
   2f960:	str	r0, [sp, #8]
   2f964:	str	r1, [sp, #4]
   2f968:	ldr	r0, [sp, #8]
   2f96c:	movw	r1, #1
   2f970:	str	r1, [r0]
   2f974:	ldr	r0, [sp, #8]
   2f978:	str	r1, [r0, #4]
   2f97c:	movw	r0, #4
   2f980:	bl	3f908 <__assert_fail@plt+0x2e474>
   2f984:	ldr	r1, [sp, #8]
   2f988:	str	r0, [r1, #8]
   2f98c:	ldr	r0, [sp, #8]
   2f990:	ldr	r0, [r0, #8]
   2f994:	movw	r1, #0
   2f998:	cmp	r0, r1
   2f99c:	bne	2f9c0 <__assert_fail@plt+0x1e52c>
   2f9a0:	ldr	r0, [sp, #8]
   2f9a4:	movw	r1, #0
   2f9a8:	str	r1, [r0, #4]
   2f9ac:	ldr	r0, [sp, #8]
   2f9b0:	str	r1, [r0]
   2f9b4:	movw	r0, #12
   2f9b8:	str	r0, [fp, #-4]
   2f9bc:	b	2f9d8 <__assert_fail@plt+0x1e544>
   2f9c0:	ldr	r0, [sp, #4]
   2f9c4:	ldr	r1, [sp, #8]
   2f9c8:	ldr	r1, [r1, #8]
   2f9cc:	str	r0, [r1]
   2f9d0:	movw	r0, #0
   2f9d4:	str	r0, [fp, #-4]
   2f9d8:	ldr	r0, [fp, #-4]
   2f9dc:	mov	sp, fp
   2f9e0:	pop	{fp, pc}
   2f9e4:	push	{fp, lr}
   2f9e8:	mov	fp, sp
   2f9ec:	sub	sp, sp, #72	; 0x48
   2f9f0:	str	r0, [fp, #-8]
   2f9f4:	str	r1, [fp, #-12]
   2f9f8:	str	r2, [fp, #-16]
   2f9fc:	and	r0, r3, #1
   2fa00:	strb	r0, [fp, #-17]	; 0xffffffef
   2fa04:	movw	r0, #0
   2fa08:	strb	r0, [sp, #31]
   2fa0c:	ldr	r0, [fp, #-12]
   2fa10:	ldr	r0, [r0, #20]
   2fa14:	ldr	r1, [fp, #-16]
   2fa18:	movw	r2, #12
   2fa1c:	mul	r1, r1, r2
   2fa20:	add	r0, r0, r1
   2fa24:	ldr	r0, [r0, #4]
   2fa28:	add	r1, r0, #1
   2fa2c:	add	r0, sp, #32
   2fa30:	bl	2fdb8 <__assert_fail@plt+0x1e924>
   2fa34:	str	r0, [fp, #-24]	; 0xffffffe8
   2fa38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa3c:	cmp	r0, #0
   2fa40:	beq	2fa50 <__assert_fail@plt+0x1e5bc>
   2fa44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa48:	str	r0, [fp, #-4]
   2fa4c:	b	2fdac <__assert_fail@plt+0x1e918>
   2fa50:	ldr	r0, [fp, #-16]
   2fa54:	ldr	r1, [sp, #36]	; 0x24
   2fa58:	ldr	r2, [sp, #40]	; 0x28
   2fa5c:	add	r3, r1, #1
   2fa60:	str	r3, [sp, #36]	; 0x24
   2fa64:	str	r0, [r2, r1, lsl #2]
   2fa68:	ldr	r0, [fp, #-12]
   2fa6c:	ldr	r0, [r0, #24]
   2fa70:	ldr	r1, [fp, #-16]
   2fa74:	add	r1, r1, r1, lsl #1
   2fa78:	add	r0, r0, r1, lsl #2
   2fa7c:	mvn	r1, #0
   2fa80:	str	r1, [r0, #4]
   2fa84:	ldr	r0, [fp, #-12]
   2fa88:	ldr	r0, [r0]
   2fa8c:	ldr	r1, [fp, #-16]
   2fa90:	add	r0, r0, r1, lsl #3
   2fa94:	ldr	r0, [r0, #4]
   2fa98:	lsr	r0, r0, #8
   2fa9c:	movw	r1, #1023	; 0x3ff
   2faa0:	and	r0, r0, r1
   2faa4:	cmp	r0, #0
   2faa8:	beq	2fb70 <__assert_fail@plt+0x1e6dc>
   2faac:	ldr	r0, [fp, #-12]
   2fab0:	ldr	r0, [r0, #20]
   2fab4:	ldr	r1, [fp, #-16]
   2fab8:	movw	r2, #12
   2fabc:	mul	r1, r1, r2
   2fac0:	add	r0, r0, r1
   2fac4:	ldr	r0, [r0, #4]
   2fac8:	cmp	r0, #0
   2facc:	beq	2fb70 <__assert_fail@plt+0x1e6dc>
   2fad0:	ldr	r0, [fp, #-12]
   2fad4:	ldr	r1, [r0]
   2fad8:	ldr	r0, [r0, #20]
   2fadc:	ldr	r2, [fp, #-16]
   2fae0:	add	r2, r2, r2, lsl #1
   2fae4:	add	r0, r0, r2, lsl #2
   2fae8:	ldr	r0, [r0, #8]
   2faec:	ldr	r0, [r0]
   2faf0:	add	r0, r1, r0, lsl #3
   2faf4:	ldr	r0, [r0, #4]
   2faf8:	lsr	r0, r0, #18
   2fafc:	and	r0, r0, #1
   2fb00:	cmp	r0, #0
   2fb04:	bne	2fb70 <__assert_fail@plt+0x1e6dc>
   2fb08:	ldr	r0, [fp, #-12]
   2fb0c:	ldr	r1, [fp, #-16]
   2fb10:	mov	r2, r1
   2fb14:	mov	r3, r1
   2fb18:	mov	ip, r1
   2fb1c:	ldr	lr, [r0]
   2fb20:	add	r1, lr, r1, lsl #3
   2fb24:	ldr	r1, [r1, #4]
   2fb28:	lsr	r1, r1, #8
   2fb2c:	movw	lr, #1023	; 0x3ff
   2fb30:	and	r1, r1, lr
   2fb34:	str	r1, [sp, #8]
   2fb38:	mov	r1, r2
   2fb3c:	mov	r2, r3
   2fb40:	mov	r3, ip
   2fb44:	ldr	ip, [sp, #8]
   2fb48:	str	ip, [sp]
   2fb4c:	bl	2fe2c <__assert_fail@plt+0x1e998>
   2fb50:	str	r0, [fp, #-24]	; 0xffffffe8
   2fb54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb58:	cmp	r0, #0
   2fb5c:	beq	2fb6c <__assert_fail@plt+0x1e6d8>
   2fb60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb64:	str	r0, [fp, #-4]
   2fb68:	b	2fdac <__assert_fail@plt+0x1e918>
   2fb6c:	b	2fb70 <__assert_fail@plt+0x1e6dc>
   2fb70:	ldr	r0, [fp, #-12]
   2fb74:	ldr	r0, [r0]
   2fb78:	ldr	r1, [fp, #-16]
   2fb7c:	add	r0, r0, r1, lsl #3
   2fb80:	ldr	r0, [r0, #4]
   2fb84:	and	r0, r0, #255	; 0xff
   2fb88:	and	r0, r0, #8
   2fb8c:	cmp	r0, #0
   2fb90:	beq	2fd1c <__assert_fail@plt+0x1e888>
   2fb94:	movw	r0, #0
   2fb98:	str	r0, [fp, #-28]	; 0xffffffe4
   2fb9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fba0:	ldr	r1, [fp, #-12]
   2fba4:	ldr	r1, [r1, #20]
   2fba8:	ldr	r2, [fp, #-16]
   2fbac:	movw	r3, #12
   2fbb0:	mul	r2, r2, r3
   2fbb4:	add	r1, r1, r2
   2fbb8:	ldr	r1, [r1, #4]
   2fbbc:	cmp	r0, r1
   2fbc0:	bge	2fd18 <__assert_fail@plt+0x1e884>
   2fbc4:	ldr	r0, [fp, #-12]
   2fbc8:	ldr	r0, [r0, #20]
   2fbcc:	ldr	r1, [fp, #-16]
   2fbd0:	add	r1, r1, r1, lsl #1
   2fbd4:	add	r0, r0, r1, lsl #2
   2fbd8:	ldr	r0, [r0, #8]
   2fbdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2fbe0:	add	r0, r0, r1, lsl #2
   2fbe4:	ldr	r0, [r0]
   2fbe8:	str	r0, [sp, #12]
   2fbec:	ldr	r0, [fp, #-12]
   2fbf0:	ldr	r0, [r0, #24]
   2fbf4:	ldr	r1, [sp, #12]
   2fbf8:	movw	r2, #12
   2fbfc:	mul	r1, r1, r2
   2fc00:	add	r0, r0, r1
   2fc04:	ldr	r0, [r0, #4]
   2fc08:	cmn	r0, #1
   2fc0c:	bne	2fc1c <__assert_fail@plt+0x1e788>
   2fc10:	movw	r0, #1
   2fc14:	strb	r0, [sp, #31]
   2fc18:	b	2fd08 <__assert_fail@plt+0x1e874>
   2fc1c:	ldr	r0, [fp, #-12]
   2fc20:	ldr	r0, [r0, #24]
   2fc24:	ldr	r1, [sp, #12]
   2fc28:	movw	r2, #12
   2fc2c:	mul	r1, r1, r2
   2fc30:	add	r0, r0, r1
   2fc34:	ldr	r0, [r0, #4]
   2fc38:	cmp	r0, #0
   2fc3c:	bne	2fc78 <__assert_fail@plt+0x1e7e4>
   2fc40:	ldr	r1, [fp, #-12]
   2fc44:	ldr	r2, [sp, #12]
   2fc48:	add	r0, sp, #16
   2fc4c:	movw	r3, #0
   2fc50:	and	r3, r3, #1
   2fc54:	bl	2f9e4 <__assert_fail@plt+0x1e550>
   2fc58:	str	r0, [fp, #-24]	; 0xffffffe8
   2fc5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc60:	cmp	r0, #0
   2fc64:	beq	2fc74 <__assert_fail@plt+0x1e7e0>
   2fc68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc6c:	str	r0, [fp, #-4]
   2fc70:	b	2fdac <__assert_fail@plt+0x1e918>
   2fc74:	b	2fca8 <__assert_fail@plt+0x1e814>
   2fc78:	ldr	r0, [fp, #-12]
   2fc7c:	ldr	r0, [r0, #24]
   2fc80:	ldr	r1, [sp, #12]
   2fc84:	movw	r2, #12
   2fc88:	mul	r1, r1, r2
   2fc8c:	add	r0, r0, r1
   2fc90:	ldr	r1, [r0]
   2fc94:	str	r1, [sp, #16]
   2fc98:	ldr	r1, [r0, #4]
   2fc9c:	str	r1, [sp, #20]
   2fca0:	ldr	r0, [r0, #8]
   2fca4:	str	r0, [sp, #24]
   2fca8:	add	r0, sp, #32
   2fcac:	add	r1, sp, #16
   2fcb0:	bl	30330 <__assert_fail@plt+0x1ee9c>
   2fcb4:	str	r0, [fp, #-24]	; 0xffffffe8
   2fcb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcbc:	cmp	r0, #0
   2fcc0:	beq	2fcd0 <__assert_fail@plt+0x1e83c>
   2fcc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcc8:	str	r0, [fp, #-4]
   2fccc:	b	2fdac <__assert_fail@plt+0x1e918>
   2fcd0:	ldr	r0, [fp, #-12]
   2fcd4:	ldr	r0, [r0, #24]
   2fcd8:	ldr	r1, [sp, #12]
   2fcdc:	movw	r2, #12
   2fce0:	mul	r1, r1, r2
   2fce4:	add	r0, r0, r1
   2fce8:	ldr	r0, [r0, #4]
   2fcec:	cmp	r0, #0
   2fcf0:	bne	2fd04 <__assert_fail@plt+0x1e870>
   2fcf4:	movw	r0, #1
   2fcf8:	strb	r0, [sp, #31]
   2fcfc:	ldr	r0, [sp, #24]
   2fd00:	bl	1388c <__assert_fail@plt+0x23f8>
   2fd04:	b	2fd08 <__assert_fail@plt+0x1e874>
   2fd08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fd0c:	add	r0, r0, #1
   2fd10:	str	r0, [fp, #-28]	; 0xffffffe4
   2fd14:	b	2fb9c <__assert_fail@plt+0x1e708>
   2fd18:	b	2fd1c <__assert_fail@plt+0x1e888>
   2fd1c:	ldrb	r0, [sp, #31]
   2fd20:	tst	r0, #1
   2fd24:	beq	2fd58 <__assert_fail@plt+0x1e8c4>
   2fd28:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2fd2c:	tst	r0, #1
   2fd30:	bne	2fd58 <__assert_fail@plt+0x1e8c4>
   2fd34:	ldr	r0, [fp, #-12]
   2fd38:	ldr	r0, [r0, #24]
   2fd3c:	ldr	r1, [fp, #-16]
   2fd40:	movw	r2, #12
   2fd44:	mul	r1, r1, r2
   2fd48:	add	r0, r0, r1
   2fd4c:	movw	r1, #0
   2fd50:	str	r1, [r0, #4]
   2fd54:	b	2fd88 <__assert_fail@plt+0x1e8f4>
   2fd58:	ldr	r0, [fp, #-12]
   2fd5c:	ldr	r0, [r0, #24]
   2fd60:	ldr	r1, [fp, #-16]
   2fd64:	movw	r2, #12
   2fd68:	mul	r1, r1, r2
   2fd6c:	add	r0, r0, r1
   2fd70:	ldr	r1, [sp, #32]
   2fd74:	str	r1, [r0]
   2fd78:	ldr	r1, [sp, #36]	; 0x24
   2fd7c:	str	r1, [r0, #4]
   2fd80:	ldr	r1, [sp, #40]	; 0x28
   2fd84:	str	r1, [r0, #8]
   2fd88:	ldr	r0, [fp, #-8]
   2fd8c:	ldr	r1, [sp, #32]
   2fd90:	str	r1, [r0]
   2fd94:	ldr	r1, [sp, #36]	; 0x24
   2fd98:	str	r1, [r0, #4]
   2fd9c:	ldr	r1, [sp, #40]	; 0x28
   2fda0:	str	r1, [r0, #8]
   2fda4:	movw	r0, #0
   2fda8:	str	r0, [fp, #-4]
   2fdac:	ldr	r0, [fp, #-4]
   2fdb0:	mov	sp, fp
   2fdb4:	pop	{fp, pc}
   2fdb8:	push	{fp, lr}
   2fdbc:	mov	fp, sp
   2fdc0:	sub	sp, sp, #16
   2fdc4:	str	r0, [sp, #8]
   2fdc8:	str	r1, [sp, #4]
   2fdcc:	ldr	r0, [sp, #4]
   2fdd0:	ldr	r1, [sp, #8]
   2fdd4:	str	r0, [r1]
   2fdd8:	ldr	r0, [sp, #8]
   2fddc:	mov	r1, #0
   2fde0:	str	r1, [r0, #4]
   2fde4:	ldr	r0, [sp, #4]
   2fde8:	lsl	r0, r0, #2
   2fdec:	bl	3f908 <__assert_fail@plt+0x2e474>
   2fdf0:	ldr	r1, [sp, #8]
   2fdf4:	str	r0, [r1, #8]
   2fdf8:	ldr	r0, [sp, #8]
   2fdfc:	ldr	r0, [r0, #8]
   2fe00:	movw	r1, #0
   2fe04:	cmp	r0, r1
   2fe08:	bne	2fe18 <__assert_fail@plt+0x1e984>
   2fe0c:	movw	r0, #12
   2fe10:	str	r0, [fp, #-4]
   2fe14:	b	2fe20 <__assert_fail@plt+0x1e98c>
   2fe18:	movw	r0, #0
   2fe1c:	str	r0, [fp, #-4]
   2fe20:	ldr	r0, [fp, #-4]
   2fe24:	mov	sp, fp
   2fe28:	pop	{fp, pc}
   2fe2c:	push	{fp, lr}
   2fe30:	mov	fp, sp
   2fe34:	sub	sp, sp, #56	; 0x38
   2fe38:	ldr	ip, [fp, #8]
   2fe3c:	str	r0, [fp, #-8]
   2fe40:	str	r1, [fp, #-12]
   2fe44:	str	r2, [fp, #-16]
   2fe48:	str	r3, [fp, #-20]	; 0xffffffec
   2fe4c:	ldr	r0, [fp, #8]
   2fe50:	str	r0, [sp, #20]
   2fe54:	ldr	r0, [fp, #-12]
   2fe58:	str	r0, [fp, #-24]	; 0xffffffe8
   2fe5c:	ldr	r0, [fp, #-16]
   2fe60:	str	r0, [sp, #28]
   2fe64:	ldr	r0, [fp, #-8]
   2fe68:	ldr	r0, [r0]
   2fe6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fe70:	add	r0, r0, r1, lsl #3
   2fe74:	ldr	r0, [r0, #4]
   2fe78:	and	r0, r0, #255	; 0xff
   2fe7c:	cmp	r0, #4
   2fe80:	bne	2ff50 <__assert_fail@plt+0x1eabc>
   2fe84:	ldr	r0, [fp, #-8]
   2fe88:	ldr	r0, [r0, #12]
   2fe8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fe90:	add	r0, r0, r1, lsl #2
   2fe94:	ldr	r0, [r0]
   2fe98:	str	r0, [sp, #16]
   2fe9c:	ldr	r0, [fp, #-8]
   2fea0:	ldr	r0, [r0, #20]
   2fea4:	ldr	r1, [sp, #28]
   2fea8:	movw	r2, #12
   2feac:	mul	r1, r1, r2
   2feb0:	add	r0, r0, r1
   2feb4:	movw	r1, #0
   2feb8:	str	r1, [r0, #4]
   2febc:	ldr	r0, [fp, #-8]
   2fec0:	ldr	r1, [sp, #16]
   2fec4:	ldr	r2, [sp, #20]
   2fec8:	bl	30738 <__assert_fail@plt+0x1f2a4>
   2fecc:	str	r0, [sp, #12]
   2fed0:	ldr	r0, [sp, #12]
   2fed4:	cmn	r0, #1
   2fed8:	bne	2fee8 <__assert_fail@plt+0x1ea54>
   2fedc:	movw	r0, #12
   2fee0:	str	r0, [fp, #-4]
   2fee4:	b	30324 <__assert_fail@plt+0x1ee90>
   2fee8:	ldr	r0, [fp, #-8]
   2feec:	ldr	r0, [r0, #12]
   2fef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fef4:	ldr	r1, [r0, r1, lsl #2]
   2fef8:	ldr	r2, [sp, #28]
   2fefc:	add	r0, r0, r2, lsl #2
   2ff00:	str	r1, [r0]
   2ff04:	ldr	r0, [fp, #-8]
   2ff08:	ldr	r0, [r0, #20]
   2ff0c:	ldr	r1, [sp, #28]
   2ff10:	movw	r2, #12
   2ff14:	mul	r1, r1, r2
   2ff18:	add	r0, r0, r1
   2ff1c:	ldr	r1, [sp, #12]
   2ff20:	bl	30820 <__assert_fail@plt+0x1f38c>
   2ff24:	and	r0, r0, #1
   2ff28:	strb	r0, [sp, #27]
   2ff2c:	ldrb	r0, [sp, #27]
   2ff30:	mvn	r1, #0
   2ff34:	eor	r0, r0, r1
   2ff38:	tst	r0, #1
   2ff3c:	beq	2ff4c <__assert_fail@plt+0x1eab8>
   2ff40:	movw	r0, #12
   2ff44:	str	r0, [fp, #-4]
   2ff48:	b	30324 <__assert_fail@plt+0x1ee90>
   2ff4c:	b	30308 <__assert_fail@plt+0x1ee74>
   2ff50:	ldr	r0, [fp, #-8]
   2ff54:	ldr	r0, [r0, #20]
   2ff58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ff5c:	movw	r2, #12
   2ff60:	mul	r1, r1, r2
   2ff64:	add	r0, r0, r1
   2ff68:	ldr	r0, [r0, #4]
   2ff6c:	cmp	r0, #0
   2ff70:	bne	2ff94 <__assert_fail@plt+0x1eb00>
   2ff74:	ldr	r0, [fp, #-8]
   2ff78:	ldr	r0, [r0, #12]
   2ff7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ff80:	ldr	r1, [r0, r1, lsl #2]
   2ff84:	ldr	r2, [sp, #28]
   2ff88:	add	r0, r0, r2, lsl #2
   2ff8c:	str	r1, [r0]
   2ff90:	b	3031c <__assert_fail@plt+0x1ee88>
   2ff94:	ldr	r0, [fp, #-8]
   2ff98:	ldr	r0, [r0, #20]
   2ff9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ffa0:	movw	r2, #12
   2ffa4:	mul	r1, r1, r2
   2ffa8:	add	r0, r0, r1
   2ffac:	ldr	r0, [r0, #4]
   2ffb0:	cmp	r0, #1
   2ffb4:	bne	30108 <__assert_fail@plt+0x1ec74>
   2ffb8:	ldr	r0, [fp, #-8]
   2ffbc:	ldr	r0, [r0, #20]
   2ffc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ffc4:	movw	r2, #12
   2ffc8:	mul	r1, r1, r2
   2ffcc:	add	r0, r0, r1
   2ffd0:	ldr	r0, [r0, #8]
   2ffd4:	ldr	r0, [r0]
   2ffd8:	str	r0, [sp, #16]
   2ffdc:	ldr	r0, [fp, #-8]
   2ffe0:	ldr	r0, [r0, #20]
   2ffe4:	ldr	r1, [sp, #28]
   2ffe8:	mul	r1, r1, r2
   2ffec:	add	r0, r0, r1
   2fff0:	movw	r1, #0
   2fff4:	str	r1, [r0, #4]
   2fff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fffc:	ldr	r1, [fp, #-20]	; 0xffffffec
   30000:	cmp	r0, r1
   30004:	bne	30064 <__assert_fail@plt+0x1ebd0>
   30008:	ldr	r0, [sp, #28]
   3000c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30010:	cmp	r0, r1
   30014:	beq	30064 <__assert_fail@plt+0x1ebd0>
   30018:	ldr	r0, [fp, #-8]
   3001c:	ldr	r0, [r0, #20]
   30020:	ldr	r1, [sp, #28]
   30024:	movw	r2, #12
   30028:	mul	r1, r1, r2
   3002c:	add	r0, r0, r1
   30030:	ldr	r1, [sp, #16]
   30034:	bl	30820 <__assert_fail@plt+0x1f38c>
   30038:	and	r0, r0, #1
   3003c:	strb	r0, [sp, #27]
   30040:	ldrb	r0, [sp, #27]
   30044:	mvn	r1, #0
   30048:	eor	r0, r0, r1
   3004c:	tst	r0, #1
   30050:	beq	30060 <__assert_fail@plt+0x1ebcc>
   30054:	movw	r0, #12
   30058:	str	r0, [fp, #-4]
   3005c:	b	30324 <__assert_fail@plt+0x1ee90>
   30060:	b	3031c <__assert_fail@plt+0x1ee88>
   30064:	ldr	r0, [fp, #-8]
   30068:	ldr	r0, [r0]
   3006c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30070:	add	r0, r0, r1, lsl #3
   30074:	ldr	r0, [r0, #4]
   30078:	lsr	r0, r0, #8
   3007c:	movw	r1, #1023	; 0x3ff
   30080:	and	r0, r0, r1
   30084:	ldr	r1, [sp, #20]
   30088:	orr	r0, r1, r0
   3008c:	str	r0, [sp, #20]
   30090:	ldr	r0, [fp, #-8]
   30094:	ldr	r1, [sp, #16]
   30098:	ldr	r2, [sp, #20]
   3009c:	bl	30738 <__assert_fail@plt+0x1f2a4>
   300a0:	str	r0, [sp, #12]
   300a4:	ldr	r0, [sp, #12]
   300a8:	cmn	r0, #1
   300ac:	bne	300bc <__assert_fail@plt+0x1ec28>
   300b0:	movw	r0, #12
   300b4:	str	r0, [fp, #-4]
   300b8:	b	30324 <__assert_fail@plt+0x1ee90>
   300bc:	ldr	r0, [fp, #-8]
   300c0:	ldr	r0, [r0, #20]
   300c4:	ldr	r1, [sp, #28]
   300c8:	movw	r2, #12
   300cc:	mul	r1, r1, r2
   300d0:	add	r0, r0, r1
   300d4:	ldr	r1, [sp, #12]
   300d8:	bl	30820 <__assert_fail@plt+0x1f38c>
   300dc:	and	r0, r0, #1
   300e0:	strb	r0, [sp, #27]
   300e4:	ldrb	r0, [sp, #27]
   300e8:	mvn	r1, #0
   300ec:	eor	r0, r0, r1
   300f0:	tst	r0, #1
   300f4:	beq	30104 <__assert_fail@plt+0x1ec70>
   300f8:	movw	r0, #12
   300fc:	str	r0, [fp, #-4]
   30100:	b	30324 <__assert_fail@plt+0x1ee90>
   30104:	b	30300 <__assert_fail@plt+0x1ee6c>
   30108:	ldr	r0, [fp, #-8]
   3010c:	ldr	r0, [r0, #20]
   30110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30114:	movw	r2, #12
   30118:	mul	r1, r1, r2
   3011c:	add	r0, r0, r1
   30120:	ldr	r0, [r0, #8]
   30124:	ldr	r0, [r0]
   30128:	str	r0, [sp, #16]
   3012c:	ldr	r0, [fp, #-8]
   30130:	ldr	r0, [r0, #20]
   30134:	ldr	r1, [sp, #28]
   30138:	mul	r1, r1, r2
   3013c:	add	r0, r0, r1
   30140:	movw	r1, #0
   30144:	str	r1, [r0, #4]
   30148:	ldr	r0, [fp, #-8]
   3014c:	ldr	r1, [sp, #16]
   30150:	ldr	r2, [sp, #20]
   30154:	bl	30a58 <__assert_fail@plt+0x1f5c4>
   30158:	str	r0, [sp, #12]
   3015c:	ldr	r0, [sp, #12]
   30160:	cmn	r0, #1
   30164:	bne	30218 <__assert_fail@plt+0x1ed84>
   30168:	ldr	r0, [fp, #-8]
   3016c:	ldr	r1, [sp, #16]
   30170:	ldr	r2, [sp, #20]
   30174:	bl	30738 <__assert_fail@plt+0x1f2a4>
   30178:	str	r0, [sp, #12]
   3017c:	ldr	r0, [sp, #12]
   30180:	cmn	r0, #1
   30184:	bne	30194 <__assert_fail@plt+0x1ed00>
   30188:	movw	r0, #12
   3018c:	str	r0, [fp, #-4]
   30190:	b	30324 <__assert_fail@plt+0x1ee90>
   30194:	ldr	r0, [fp, #-8]
   30198:	ldr	r0, [r0, #20]
   3019c:	ldr	r1, [sp, #28]
   301a0:	movw	r2, #12
   301a4:	mul	r1, r1, r2
   301a8:	add	r0, r0, r1
   301ac:	ldr	r1, [sp, #12]
   301b0:	bl	30820 <__assert_fail@plt+0x1f38c>
   301b4:	and	r0, r0, #1
   301b8:	strb	r0, [sp, #27]
   301bc:	ldrb	r0, [sp, #27]
   301c0:	mvn	r1, #0
   301c4:	eor	r0, r0, r1
   301c8:	tst	r0, #1
   301cc:	beq	301dc <__assert_fail@plt+0x1ed48>
   301d0:	movw	r0, #12
   301d4:	str	r0, [fp, #-4]
   301d8:	b	30324 <__assert_fail@plt+0x1ee90>
   301dc:	ldr	r0, [fp, #-8]
   301e0:	ldr	r1, [sp, #16]
   301e4:	ldr	r2, [sp, #12]
   301e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   301ec:	ldr	ip, [sp, #20]
   301f0:	str	ip, [sp]
   301f4:	bl	2fe2c <__assert_fail@plt+0x1e998>
   301f8:	str	r0, [sp, #8]
   301fc:	ldr	r0, [sp, #8]
   30200:	cmp	r0, #0
   30204:	beq	30214 <__assert_fail@plt+0x1ed80>
   30208:	ldr	r0, [sp, #8]
   3020c:	str	r0, [fp, #-4]
   30210:	b	30324 <__assert_fail@plt+0x1ee90>
   30214:	b	30264 <__assert_fail@plt+0x1edd0>
   30218:	ldr	r0, [fp, #-8]
   3021c:	ldr	r0, [r0, #20]
   30220:	ldr	r1, [sp, #28]
   30224:	movw	r2, #12
   30228:	mul	r1, r1, r2
   3022c:	add	r0, r0, r1
   30230:	ldr	r1, [sp, #12]
   30234:	bl	30820 <__assert_fail@plt+0x1f38c>
   30238:	and	r0, r0, #1
   3023c:	strb	r0, [sp, #27]
   30240:	ldrb	r0, [sp, #27]
   30244:	mvn	r1, #0
   30248:	eor	r0, r0, r1
   3024c:	tst	r0, #1
   30250:	beq	30260 <__assert_fail@plt+0x1edcc>
   30254:	movw	r0, #12
   30258:	str	r0, [fp, #-4]
   3025c:	b	30324 <__assert_fail@plt+0x1ee90>
   30260:	b	30264 <__assert_fail@plt+0x1edd0>
   30264:	ldr	r0, [fp, #-8]
   30268:	ldr	r0, [r0, #20]
   3026c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30270:	movw	r2, #12
   30274:	mul	r1, r1, r2
   30278:	add	r0, r0, r1
   3027c:	ldr	r0, [r0, #8]
   30280:	ldr	r0, [r0, #4]
   30284:	str	r0, [sp, #16]
   30288:	ldr	r0, [fp, #-8]
   3028c:	ldr	r1, [sp, #16]
   30290:	ldr	r2, [sp, #20]
   30294:	bl	30738 <__assert_fail@plt+0x1f2a4>
   30298:	str	r0, [sp, #12]
   3029c:	ldr	r0, [sp, #12]
   302a0:	cmn	r0, #1
   302a4:	bne	302b4 <__assert_fail@plt+0x1ee20>
   302a8:	movw	r0, #12
   302ac:	str	r0, [fp, #-4]
   302b0:	b	30324 <__assert_fail@plt+0x1ee90>
   302b4:	ldr	r0, [fp, #-8]
   302b8:	ldr	r0, [r0, #20]
   302bc:	ldr	r1, [sp, #28]
   302c0:	movw	r2, #12
   302c4:	mul	r1, r1, r2
   302c8:	add	r0, r0, r1
   302cc:	ldr	r1, [sp, #12]
   302d0:	bl	30820 <__assert_fail@plt+0x1f38c>
   302d4:	and	r0, r0, #1
   302d8:	strb	r0, [sp, #27]
   302dc:	ldrb	r0, [sp, #27]
   302e0:	mvn	r1, #0
   302e4:	eor	r0, r0, r1
   302e8:	tst	r0, #1
   302ec:	beq	302fc <__assert_fail@plt+0x1ee68>
   302f0:	movw	r0, #12
   302f4:	str	r0, [fp, #-4]
   302f8:	b	30324 <__assert_fail@plt+0x1ee90>
   302fc:	b	30300 <__assert_fail@plt+0x1ee6c>
   30300:	b	30304 <__assert_fail@plt+0x1ee70>
   30304:	b	30308 <__assert_fail@plt+0x1ee74>
   30308:	ldr	r0, [sp, #16]
   3030c:	str	r0, [fp, #-24]	; 0xffffffe8
   30310:	ldr	r0, [sp, #12]
   30314:	str	r0, [sp, #28]
   30318:	b	2fe64 <__assert_fail@plt+0x1e9d0>
   3031c:	movw	r0, #0
   30320:	str	r0, [fp, #-4]
   30324:	ldr	r0, [fp, #-4]
   30328:	mov	sp, fp
   3032c:	pop	{fp, pc}
   30330:	push	{fp, lr}
   30334:	mov	fp, sp
   30338:	sub	sp, sp, #40	; 0x28
   3033c:	str	r0, [fp, #-8]
   30340:	str	r1, [fp, #-12]
   30344:	ldr	r0, [fp, #-12]
   30348:	movw	r1, #0
   3034c:	cmp	r0, r1
   30350:	beq	30364 <__assert_fail@plt+0x1eed0>
   30354:	ldr	r0, [fp, #-12]
   30358:	ldr	r0, [r0, #4]
   3035c:	cmp	r0, #0
   30360:	bne	30370 <__assert_fail@plt+0x1eedc>
   30364:	movw	r0, #0
   30368:	str	r0, [fp, #-4]
   3036c:	b	3072c <__assert_fail@plt+0x1f298>
   30370:	ldr	r0, [fp, #-8]
   30374:	ldr	r0, [r0]
   30378:	ldr	r1, [fp, #-12]
   3037c:	ldr	r1, [r1, #4]
   30380:	lsl	r1, r1, #1
   30384:	ldr	r2, [fp, #-8]
   30388:	ldr	r2, [r2, #4]
   3038c:	add	r1, r1, r2
   30390:	cmp	r0, r1
   30394:	bge	30400 <__assert_fail@plt+0x1ef6c>
   30398:	ldr	r0, [fp, #-12]
   3039c:	ldr	r0, [r0, #4]
   303a0:	ldr	r1, [fp, #-8]
   303a4:	ldr	r1, [r1]
   303a8:	add	r0, r0, r1
   303ac:	lsl	r0, r0, #1
   303b0:	str	r0, [sp, #8]
   303b4:	ldr	r0, [fp, #-8]
   303b8:	ldr	r0, [r0, #8]
   303bc:	ldr	r1, [sp, #8]
   303c0:	lsl	r1, r1, #2
   303c4:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   303c8:	str	r0, [sp, #4]
   303cc:	ldr	r0, [sp, #4]
   303d0:	movw	r1, #0
   303d4:	cmp	r0, r1
   303d8:	bne	303e8 <__assert_fail@plt+0x1ef54>
   303dc:	movw	r0, #12
   303e0:	str	r0, [fp, #-4]
   303e4:	b	3072c <__assert_fail@plt+0x1f298>
   303e8:	ldr	r0, [sp, #4]
   303ec:	ldr	r1, [fp, #-8]
   303f0:	str	r0, [r1, #8]
   303f4:	ldr	r0, [sp, #8]
   303f8:	ldr	r1, [fp, #-8]
   303fc:	str	r0, [r1]
   30400:	ldr	r0, [fp, #-8]
   30404:	ldr	r0, [r0, #4]
   30408:	cmp	r0, #0
   3040c:	bne	30460 <__assert_fail@plt+0x1efcc>
   30410:	ldr	r0, [fp, #-8]
   30414:	ldr	r0, [r0, #8]
   30418:	movw	r1, #0
   3041c:	cmp	r0, r1
   30420:	beq	30428 <__assert_fail@plt+0x1ef94>
   30424:	b	30428 <__assert_fail@plt+0x1ef94>
   30428:	ldr	r0, [fp, #-12]
   3042c:	ldr	r0, [r0, #4]
   30430:	ldr	r1, [fp, #-8]
   30434:	str	r0, [r1, #4]
   30438:	ldr	r0, [fp, #-8]
   3043c:	ldr	r0, [r0, #8]
   30440:	ldr	r1, [fp, #-12]
   30444:	ldr	r2, [r1, #4]
   30448:	ldr	r1, [r1, #8]
   3044c:	lsl	r2, r2, #2
   30450:	bl	11248 <memcpy@plt>
   30454:	movw	r0, #0
   30458:	str	r0, [fp, #-4]
   3045c:	b	3072c <__assert_fail@plt+0x1f298>
   30460:	ldr	r0, [fp, #-8]
   30464:	ldr	r0, [r0, #4]
   30468:	ldr	r1, [fp, #-12]
   3046c:	ldr	r1, [r1, #4]
   30470:	lsl	r1, r1, #1
   30474:	add	r0, r0, r1
   30478:	str	r0, [sp, #16]
   3047c:	ldr	r0, [fp, #-12]
   30480:	ldr	r0, [r0, #4]
   30484:	sub	r0, r0, #1
   30488:	str	r0, [fp, #-16]
   3048c:	ldr	r0, [fp, #-8]
   30490:	ldr	r0, [r0, #4]
   30494:	sub	r0, r0, #1
   30498:	str	r0, [sp, #20]
   3049c:	ldr	r0, [fp, #-16]
   304a0:	cmp	r0, #0
   304a4:	movw	r0, #0
   304a8:	str	r0, [sp]
   304ac:	blt	304c4 <__assert_fail@plt+0x1f030>
   304b0:	ldr	r0, [sp, #20]
   304b4:	cmp	r0, #0
   304b8:	movw	r0, #0
   304bc:	movge	r0, #1
   304c0:	str	r0, [sp]
   304c4:	ldr	r0, [sp]
   304c8:	tst	r0, #1
   304cc:	beq	30598 <__assert_fail@plt+0x1f104>
   304d0:	ldr	r0, [fp, #-8]
   304d4:	ldr	r0, [r0, #8]
   304d8:	ldr	r1, [sp, #20]
   304dc:	ldr	r0, [r0, r1, lsl #2]
   304e0:	ldr	r1, [fp, #-12]
   304e4:	ldr	r1, [r1, #8]
   304e8:	ldr	r2, [fp, #-16]
   304ec:	add	r1, r1, r2, lsl #2
   304f0:	ldr	r1, [r1]
   304f4:	cmp	r0, r1
   304f8:	bne	3051c <__assert_fail@plt+0x1f088>
   304fc:	ldr	r0, [fp, #-16]
   30500:	mvn	r1, #0
   30504:	add	r0, r0, r1
   30508:	str	r0, [fp, #-16]
   3050c:	ldr	r0, [sp, #20]
   30510:	add	r0, r0, r1
   30514:	str	r0, [sp, #20]
   30518:	b	30594 <__assert_fail@plt+0x1f100>
   3051c:	ldr	r0, [fp, #-8]
   30520:	ldr	r0, [r0, #8]
   30524:	ldr	r1, [sp, #20]
   30528:	ldr	r0, [r0, r1, lsl #2]
   3052c:	ldr	r1, [fp, #-12]
   30530:	ldr	r1, [r1, #8]
   30534:	ldr	r2, [fp, #-16]
   30538:	add	r1, r1, r2, lsl #2
   3053c:	ldr	r1, [r1]
   30540:	cmp	r0, r1
   30544:	bge	30580 <__assert_fail@plt+0x1f0ec>
   30548:	ldr	r0, [fp, #-12]
   3054c:	ldr	r0, [r0, #8]
   30550:	ldr	r1, [fp, #-16]
   30554:	sub	r2, r1, #1
   30558:	str	r2, [fp, #-16]
   3055c:	ldr	r0, [r0, r1, lsl #2]
   30560:	ldr	r1, [fp, #-8]
   30564:	ldr	r1, [r1, #8]
   30568:	ldr	r2, [sp, #16]
   3056c:	sub	r2, r2, #1
   30570:	str	r2, [sp, #16]
   30574:	add	r1, r1, r2, lsl #2
   30578:	str	r0, [r1]
   3057c:	b	30590 <__assert_fail@plt+0x1f0fc>
   30580:	ldr	r0, [sp, #20]
   30584:	mvn	r1, #0
   30588:	add	r0, r0, r1
   3058c:	str	r0, [sp, #20]
   30590:	b	30594 <__assert_fail@plt+0x1f100>
   30594:	b	3049c <__assert_fail@plt+0x1f008>
   30598:	ldr	r0, [fp, #-16]
   3059c:	cmp	r0, #0
   305a0:	blt	305e0 <__assert_fail@plt+0x1f14c>
   305a4:	ldr	r0, [fp, #-16]
   305a8:	ldr	r1, [sp, #16]
   305ac:	mvn	r0, r0
   305b0:	add	r0, r0, r1
   305b4:	str	r0, [sp, #16]
   305b8:	ldr	r0, [fp, #-8]
   305bc:	ldr	r0, [r0, #8]
   305c0:	ldr	r1, [sp, #16]
   305c4:	add	r0, r0, r1, lsl #2
   305c8:	ldr	r1, [fp, #-12]
   305cc:	ldr	r1, [r1, #8]
   305d0:	ldr	r2, [fp, #-16]
   305d4:	add	r2, r2, #1
   305d8:	lsl	r2, r2, #2
   305dc:	bl	11248 <memcpy@plt>
   305e0:	ldr	r0, [fp, #-8]
   305e4:	ldr	r0, [r0, #4]
   305e8:	sub	r0, r0, #1
   305ec:	str	r0, [sp, #20]
   305f0:	ldr	r0, [fp, #-8]
   305f4:	ldr	r0, [r0, #4]
   305f8:	ldr	r1, [fp, #-12]
   305fc:	ldr	r1, [r1, #4]
   30600:	lsl	r1, r1, #1
   30604:	add	r0, r0, r1
   30608:	sub	r0, r0, #1
   3060c:	str	r0, [fp, #-16]
   30610:	ldr	r0, [fp, #-16]
   30614:	ldr	r1, [sp, #16]
   30618:	sub	r0, r0, r1
   3061c:	add	r0, r0, #1
   30620:	str	r0, [sp, #12]
   30624:	ldr	r0, [sp, #12]
   30628:	cmp	r0, #0
   3062c:	bne	3063c <__assert_fail@plt+0x1f1a8>
   30630:	movw	r0, #0
   30634:	str	r0, [fp, #-4]
   30638:	b	3072c <__assert_fail@plt+0x1f298>
   3063c:	ldr	r0, [sp, #12]
   30640:	ldr	r1, [fp, #-8]
   30644:	ldr	r2, [r1, #4]
   30648:	add	r0, r2, r0
   3064c:	str	r0, [r1, #4]
   30650:	ldr	r0, [fp, #-8]
   30654:	ldr	r0, [r0, #8]
   30658:	ldr	r1, [fp, #-16]
   3065c:	ldr	r1, [r0, r1, lsl #2]
   30660:	ldr	r2, [sp, #20]
   30664:	add	r0, r0, r2, lsl #2
   30668:	ldr	r0, [r0]
   3066c:	cmp	r1, r0
   30670:	ble	306c4 <__assert_fail@plt+0x1f230>
   30674:	ldr	r0, [fp, #-8]
   30678:	ldr	r0, [r0, #8]
   3067c:	ldr	r1, [fp, #-16]
   30680:	sub	r2, r1, #1
   30684:	str	r2, [fp, #-16]
   30688:	ldr	r0, [r0, r1, lsl #2]
   3068c:	ldr	r1, [fp, #-8]
   30690:	ldr	r1, [r1, #8]
   30694:	ldr	r2, [sp, #20]
   30698:	ldr	r3, [sp, #12]
   3069c:	sub	ip, r3, #1
   306a0:	str	ip, [sp, #12]
   306a4:	add	r2, r2, r3
   306a8:	add	r1, r1, r2, lsl #2
   306ac:	str	r0, [r1]
   306b0:	ldr	r0, [sp, #12]
   306b4:	cmp	r0, #0
   306b8:	bne	306c0 <__assert_fail@plt+0x1f22c>
   306bc:	b	30724 <__assert_fail@plt+0x1f290>
   306c0:	b	30720 <__assert_fail@plt+0x1f28c>
   306c4:	ldr	r0, [fp, #-8]
   306c8:	ldr	r0, [r0, #8]
   306cc:	ldr	r1, [sp, #20]
   306d0:	ldr	r2, [r0, r1, lsl #2]
   306d4:	ldr	r3, [sp, #12]
   306d8:	add	r1, r1, r3
   306dc:	add	r0, r0, r1, lsl #2
   306e0:	str	r2, [r0]
   306e4:	ldr	r0, [sp, #20]
   306e8:	mvn	r1, #0
   306ec:	add	r0, r0, r1
   306f0:	str	r0, [sp, #20]
   306f4:	cmp	r0, #0
   306f8:	bge	3071c <__assert_fail@plt+0x1f288>
   306fc:	ldr	r0, [fp, #-8]
   30700:	ldr	r0, [r0, #8]
   30704:	ldr	r1, [sp, #16]
   30708:	add	r1, r0, r1, lsl #2
   3070c:	ldr	r2, [sp, #12]
   30710:	lsl	r2, r2, #2
   30714:	bl	11248 <memcpy@plt>
   30718:	b	30724 <__assert_fail@plt+0x1f290>
   3071c:	b	30720 <__assert_fail@plt+0x1f28c>
   30720:	b	30650 <__assert_fail@plt+0x1f1bc>
   30724:	movw	r0, #0
   30728:	str	r0, [fp, #-4]
   3072c:	ldr	r0, [fp, #-4]
   30730:	mov	sp, fp
   30734:	pop	{fp, pc}
   30738:	push	{fp, lr}
   3073c:	mov	fp, sp
   30740:	sub	sp, sp, #24
   30744:	str	r0, [fp, #-4]
   30748:	str	r1, [fp, #-8]
   3074c:	str	r2, [sp, #12]
   30750:	ldr	r0, [fp, #-4]
   30754:	ldr	r1, [r0]
   30758:	ldr	r2, [fp, #-8]
   3075c:	ldr	r2, [r1, r2, lsl #3]!
   30760:	ldr	r1, [r1, #4]
   30764:	str	r1, [sp, #4]
   30768:	mov	r1, r2
   3076c:	ldr	r2, [sp, #4]
   30770:	bl	2f53c <__assert_fail@plt+0x1e0a8>
   30774:	str	r0, [sp, #8]
   30778:	ldr	r0, [sp, #8]
   3077c:	cmn	r0, #1
   30780:	beq	30814 <__assert_fail@plt+0x1f380>
   30784:	ldr	r0, [sp, #12]
   30788:	ldr	r1, [fp, #-4]
   3078c:	ldr	r1, [r1]
   30790:	ldr	r2, [sp, #8]
   30794:	add	r1, r1, r2, lsl #3
   30798:	ldr	r2, [r1, #4]
   3079c:	bfc	r0, #10, #22
   307a0:	bfc	r2, #8, #10
   307a4:	orr	r0, r2, r0, lsl #8
   307a8:	str	r0, [r1, #4]
   307ac:	ldr	r0, [fp, #-4]
   307b0:	ldr	r0, [r0]
   307b4:	ldr	r1, [fp, #-8]
   307b8:	add	r1, r0, r1, lsl #3
   307bc:	ldr	r1, [r1, #4]
   307c0:	ldr	r2, [sp, #8]
   307c4:	add	r0, r0, r2, lsl #3
   307c8:	ldr	r2, [r0, #4]
   307cc:	orr	r1, r2, r1
   307d0:	ubfx	r1, r1, #8, #10
   307d4:	bfc	r2, #8, #10
   307d8:	orr	r1, r2, r1, lsl #8
   307dc:	str	r1, [r0, #4]
   307e0:	ldr	r0, [fp, #-4]
   307e4:	ldr	r0, [r0]
   307e8:	ldr	r1, [sp, #8]
   307ec:	add	r0, r0, r1, lsl #3
   307f0:	ldr	r1, [r0, #4]
   307f4:	orr	r1, r1, #262144	; 0x40000
   307f8:	str	r1, [r0, #4]
   307fc:	ldr	r0, [fp, #-8]
   30800:	ldr	r1, [fp, #-4]
   30804:	ldr	r1, [r1, #16]
   30808:	ldr	r2, [sp, #8]
   3080c:	add	r1, r1, r2, lsl #2
   30810:	str	r0, [r1]
   30814:	ldr	r0, [sp, #8]
   30818:	mov	sp, fp
   3081c:	pop	{fp, pc}
   30820:	push	{fp, lr}
   30824:	mov	fp, sp
   30828:	sub	sp, sp, #24
   3082c:	str	r0, [fp, #-8]
   30830:	str	r1, [sp, #12]
   30834:	ldr	r0, [fp, #-8]
   30838:	ldr	r0, [r0]
   3083c:	cmp	r0, #0
   30840:	bne	30868 <__assert_fail@plt+0x1f3d4>
   30844:	ldr	r0, [fp, #-8]
   30848:	ldr	r1, [sp, #12]
   3084c:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   30850:	cmp	r0, #0
   30854:	movw	r0, #0
   30858:	moveq	r0, #1
   3085c:	and	r0, r0, #1
   30860:	strb	r0, [fp, #-1]
   30864:	b	30a48 <__assert_fail@plt+0x1f5b4>
   30868:	ldr	r0, [fp, #-8]
   3086c:	ldr	r0, [r0, #4]
   30870:	cmp	r0, #0
   30874:	bne	308c0 <__assert_fail@plt+0x1f42c>
   30878:	ldr	r0, [fp, #-8]
   3087c:	ldr	r0, [r0, #8]
   30880:	movw	r1, #0
   30884:	cmp	r0, r1
   30888:	beq	30890 <__assert_fail@plt+0x1f3fc>
   3088c:	b	30890 <__assert_fail@plt+0x1f3fc>
   30890:	ldr	r0, [sp, #12]
   30894:	ldr	r1, [fp, #-8]
   30898:	ldr	r1, [r1, #8]
   3089c:	str	r0, [r1]
   308a0:	ldr	r0, [fp, #-8]
   308a4:	ldr	r1, [r0, #4]
   308a8:	add	r1, r1, #1
   308ac:	str	r1, [r0, #4]
   308b0:	movw	r0, #1
   308b4:	and	r0, r0, #1
   308b8:	strb	r0, [fp, #-1]
   308bc:	b	30a48 <__assert_fail@plt+0x1f5b4>
   308c0:	ldr	r0, [fp, #-8]
   308c4:	ldr	r0, [r0]
   308c8:	ldr	r1, [fp, #-8]
   308cc:	ldr	r1, [r1, #4]
   308d0:	cmp	r0, r1
   308d4:	bne	3092c <__assert_fail@plt+0x1f498>
   308d8:	ldr	r0, [fp, #-8]
   308dc:	ldr	r1, [r0]
   308e0:	lsl	r1, r1, #1
   308e4:	str	r1, [r0]
   308e8:	ldr	r0, [fp, #-8]
   308ec:	ldr	r1, [r0]
   308f0:	ldr	r0, [r0, #8]
   308f4:	lsl	r1, r1, #2
   308f8:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   308fc:	str	r0, [sp, #4]
   30900:	ldr	r0, [sp, #4]
   30904:	movw	r1, #0
   30908:	cmp	r0, r1
   3090c:	bne	30920 <__assert_fail@plt+0x1f48c>
   30910:	movw	r0, #0
   30914:	and	r0, r0, #1
   30918:	strb	r0, [fp, #-1]
   3091c:	b	30a48 <__assert_fail@plt+0x1f5b4>
   30920:	ldr	r0, [sp, #4]
   30924:	ldr	r1, [fp, #-8]
   30928:	str	r0, [r1, #8]
   3092c:	ldr	r0, [sp, #12]
   30930:	ldr	r1, [fp, #-8]
   30934:	ldr	r1, [r1, #8]
   30938:	ldr	r1, [r1]
   3093c:	cmp	r0, r1
   30940:	bge	3098c <__assert_fail@plt+0x1f4f8>
   30944:	ldr	r0, [fp, #-8]
   30948:	ldr	r0, [r0, #4]
   3094c:	str	r0, [sp, #8]
   30950:	ldr	r0, [sp, #8]
   30954:	cmp	r0, #0
   30958:	ble	30988 <__assert_fail@plt+0x1f4f4>
   3095c:	ldr	r0, [fp, #-8]
   30960:	ldr	r0, [r0, #8]
   30964:	ldr	r1, [sp, #8]
   30968:	add	r0, r0, r1, lsl #2
   3096c:	ldr	r1, [r0, #-4]
   30970:	str	r1, [r0]
   30974:	ldr	r0, [sp, #8]
   30978:	mvn	r1, #0
   3097c:	add	r0, r0, r1
   30980:	str	r0, [sp, #8]
   30984:	b	30950 <__assert_fail@plt+0x1f4bc>
   30988:	b	30a14 <__assert_fail@plt+0x1f580>
   3098c:	ldr	r0, [fp, #-8]
   30990:	ldr	r0, [r0, #4]
   30994:	str	r0, [sp, #8]
   30998:	ldr	r0, [fp, #-8]
   3099c:	ldr	r0, [r0, #8]
   309a0:	ldr	r1, [sp, #8]
   309a4:	sub	r1, r1, #1
   309a8:	add	r0, r0, r1, lsl #2
   309ac:	ldr	r0, [r0]
   309b0:	ldr	r1, [sp, #12]
   309b4:	cmp	r0, r1
   309b8:	ble	309e8 <__assert_fail@plt+0x1f554>
   309bc:	ldr	r0, [fp, #-8]
   309c0:	ldr	r0, [r0, #8]
   309c4:	ldr	r1, [sp, #8]
   309c8:	add	r0, r0, r1, lsl #2
   309cc:	ldr	r1, [r0, #-4]
   309d0:	str	r1, [r0]
   309d4:	ldr	r0, [sp, #8]
   309d8:	mvn	r1, #0
   309dc:	add	r0, r0, r1
   309e0:	str	r0, [sp, #8]
   309e4:	b	30998 <__assert_fail@plt+0x1f504>
   309e8:	ldr	r0, [fp, #-8]
   309ec:	ldr	r0, [r0, #8]
   309f0:	ldr	r1, [sp, #8]
   309f4:	sub	r1, r1, #1
   309f8:	add	r0, r0, r1, lsl #2
   309fc:	ldr	r0, [r0]
   30a00:	ldr	r1, [sp, #12]
   30a04:	cmp	r0, r1
   30a08:	bge	30a10 <__assert_fail@plt+0x1f57c>
   30a0c:	b	30a10 <__assert_fail@plt+0x1f57c>
   30a10:	b	30a14 <__assert_fail@plt+0x1f580>
   30a14:	ldr	r0, [sp, #12]
   30a18:	ldr	r1, [fp, #-8]
   30a1c:	ldr	r1, [r1, #8]
   30a20:	ldr	r2, [sp, #8]
   30a24:	add	r1, r1, r2, lsl #2
   30a28:	str	r0, [r1]
   30a2c:	ldr	r0, [fp, #-8]
   30a30:	ldr	r1, [r0, #4]
   30a34:	add	r1, r1, #1
   30a38:	str	r1, [r0, #4]
   30a3c:	movw	r0, #1
   30a40:	and	r0, r0, #1
   30a44:	strb	r0, [fp, #-1]
   30a48:	ldrb	r0, [fp, #-1]
   30a4c:	and	r0, r0, #1
   30a50:	mov	sp, fp
   30a54:	pop	{fp, pc}
   30a58:	sub	sp, sp, #24
   30a5c:	str	r0, [sp, #16]
   30a60:	str	r1, [sp, #12]
   30a64:	str	r2, [sp, #8]
   30a68:	ldr	r0, [sp, #16]
   30a6c:	ldr	r0, [r0, #8]
   30a70:	sub	r0, r0, #1
   30a74:	str	r0, [sp, #4]
   30a78:	ldr	r0, [sp, #16]
   30a7c:	ldr	r0, [r0]
   30a80:	ldr	r1, [sp, #4]
   30a84:	add	r0, r0, r1, lsl #3
   30a88:	ldr	r0, [r0, #4]
   30a8c:	lsr	r0, r0, #18
   30a90:	and	r0, r0, #1
   30a94:	cmp	r0, #0
   30a98:	movw	r0, #0
   30a9c:	str	r0, [sp]
   30aa0:	beq	30ab8 <__assert_fail@plt+0x1f624>
   30aa4:	ldr	r0, [sp, #4]
   30aa8:	cmp	r0, #0
   30aac:	movw	r0, #0
   30ab0:	movgt	r0, #1
   30ab4:	str	r0, [sp]
   30ab8:	ldr	r0, [sp]
   30abc:	tst	r0, #1
   30ac0:	beq	30b34 <__assert_fail@plt+0x1f6a0>
   30ac4:	ldr	r0, [sp, #12]
   30ac8:	ldr	r1, [sp, #16]
   30acc:	ldr	r1, [r1, #16]
   30ad0:	ldr	r2, [sp, #4]
   30ad4:	add	r1, r1, r2, lsl #2
   30ad8:	ldr	r1, [r1]
   30adc:	cmp	r0, r1
   30ae0:	bne	30b1c <__assert_fail@plt+0x1f688>
   30ae4:	ldr	r0, [sp, #8]
   30ae8:	ldr	r1, [sp, #16]
   30aec:	ldr	r1, [r1]
   30af0:	ldr	r2, [sp, #4]
   30af4:	add	r1, r1, r2, lsl #3
   30af8:	ldr	r1, [r1, #4]
   30afc:	lsr	r1, r1, #8
   30b00:	movw	r2, #1023	; 0x3ff
   30b04:	and	r1, r1, r2
   30b08:	cmp	r0, r1
   30b0c:	bne	30b1c <__assert_fail@plt+0x1f688>
   30b10:	ldr	r0, [sp, #4]
   30b14:	str	r0, [sp, #20]
   30b18:	b	30b3c <__assert_fail@plt+0x1f6a8>
   30b1c:	b	30b20 <__assert_fail@plt+0x1f68c>
   30b20:	ldr	r0, [sp, #4]
   30b24:	mvn	r1, #0
   30b28:	add	r0, r0, r1
   30b2c:	str	r0, [sp, #4]
   30b30:	b	30a78 <__assert_fail@plt+0x1f5e4>
   30b34:	mvn	r0, #0
   30b38:	str	r0, [sp, #20]
   30b3c:	ldr	r0, [sp, #20]
   30b40:	add	sp, sp, #24
   30b44:	bx	lr
   30b48:	push	{fp, lr}
   30b4c:	mov	fp, sp
   30b50:	sub	sp, sp, #16
   30b54:	str	r0, [sp, #8]
   30b58:	str	r1, [sp, #4]
   30b5c:	ldr	r0, [sp, #8]
   30b60:	ldr	r0, [r0]
   30b64:	ldr	r1, [sp, #8]
   30b68:	ldr	r1, [r1, #4]
   30b6c:	cmp	r0, r1
   30b70:	bne	30bcc <__assert_fail@plt+0x1f738>
   30b74:	ldr	r0, [sp, #8]
   30b78:	ldr	r1, [r0]
   30b7c:	mov	r2, #2
   30b80:	add	r1, r2, r1, lsl #1
   30b84:	str	r1, [r0]
   30b88:	ldr	r0, [sp, #8]
   30b8c:	ldr	r1, [r0]
   30b90:	ldr	r0, [r0, #8]
   30b94:	lsl	r1, r1, #2
   30b98:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   30b9c:	str	r0, [sp]
   30ba0:	ldr	r0, [sp]
   30ba4:	movw	r1, #0
   30ba8:	cmp	r0, r1
   30bac:	bne	30bc0 <__assert_fail@plt+0x1f72c>
   30bb0:	movw	r0, #0
   30bb4:	and	r0, r0, #1
   30bb8:	strb	r0, [fp, #-1]
   30bbc:	b	30bf8 <__assert_fail@plt+0x1f764>
   30bc0:	ldr	r0, [sp]
   30bc4:	ldr	r1, [sp, #8]
   30bc8:	str	r0, [r1, #8]
   30bcc:	ldr	r0, [sp, #4]
   30bd0:	ldr	r1, [sp, #8]
   30bd4:	ldr	r2, [r1, #4]
   30bd8:	ldr	r3, [r1, #8]
   30bdc:	add	ip, r2, #1
   30be0:	str	ip, [r1, #4]
   30be4:	add	r1, r3, r2, lsl #2
   30be8:	str	r0, [r1]
   30bec:	movw	r0, #1
   30bf0:	and	r0, r0, #1
   30bf4:	strb	r0, [fp, #-1]
   30bf8:	ldrb	r0, [fp, #-1]
   30bfc:	and	r0, r0, #1
   30c00:	mov	sp, fp
   30c04:	pop	{fp, pc}
   30c08:	push	{fp, lr}
   30c0c:	mov	fp, sp
   30c10:	sub	sp, sp, #16
   30c14:	str	r0, [sp, #8]
   30c18:	str	r1, [sp, #4]
   30c1c:	ldr	r0, [sp, #4]
   30c20:	ldr	r0, [r0, #4]
   30c24:	ldr	r1, [sp, #8]
   30c28:	str	r0, [r1, #4]
   30c2c:	ldr	r0, [sp, #4]
   30c30:	ldr	r0, [r0, #4]
   30c34:	cmp	r0, #0
   30c38:	ble	30cb4 <__assert_fail@plt+0x1f820>
   30c3c:	ldr	r0, [sp, #8]
   30c40:	ldr	r1, [r0, #4]
   30c44:	str	r1, [r0]
   30c48:	ldr	r0, [sp, #8]
   30c4c:	ldr	r0, [r0]
   30c50:	lsl	r0, r0, #2
   30c54:	bl	3f908 <__assert_fail@plt+0x2e474>
   30c58:	ldr	r1, [sp, #8]
   30c5c:	str	r0, [r1, #8]
   30c60:	ldr	r0, [sp, #8]
   30c64:	ldr	r0, [r0, #8]
   30c68:	movw	r1, #0
   30c6c:	cmp	r0, r1
   30c70:	bne	30c94 <__assert_fail@plt+0x1f800>
   30c74:	ldr	r0, [sp, #8]
   30c78:	movw	r1, #0
   30c7c:	str	r1, [r0, #4]
   30c80:	ldr	r0, [sp, #8]
   30c84:	str	r1, [r0]
   30c88:	movw	r0, #12
   30c8c:	str	r0, [fp, #-4]
   30c90:	b	30cd0 <__assert_fail@plt+0x1f83c>
   30c94:	ldr	r0, [sp, #8]
   30c98:	ldr	r0, [r0, #8]
   30c9c:	ldr	r1, [sp, #4]
   30ca0:	ldr	r2, [r1, #4]
   30ca4:	ldr	r1, [r1, #8]
   30ca8:	lsl	r2, r2, #2
   30cac:	bl	11248 <memcpy@plt>
   30cb0:	b	30cc8 <__assert_fail@plt+0x1f834>
   30cb4:	ldr	r0, [sp, #8]
   30cb8:	movw	r1, #0
   30cbc:	and	r1, r1, #255	; 0xff
   30cc0:	movw	r2, #12
   30cc4:	bl	113d4 <memset@plt>
   30cc8:	movw	r0, #0
   30ccc:	str	r0, [fp, #-4]
   30cd0:	ldr	r0, [fp, #-4]
   30cd4:	mov	sp, fp
   30cd8:	pop	{fp, pc}
   30cdc:	sub	sp, sp, #28
   30ce0:	str	r0, [sp, #20]
   30ce4:	str	r1, [sp, #16]
   30ce8:	ldr	r0, [sp, #20]
   30cec:	ldr	r0, [r0, #4]
   30cf0:	cmp	r0, #0
   30cf4:	bgt	30d04 <__assert_fail@plt+0x1f870>
   30cf8:	movw	r0, #0
   30cfc:	str	r0, [sp, #24]
   30d00:	b	30dc0 <__assert_fail@plt+0x1f92c>
   30d04:	movw	r0, #0
   30d08:	str	r0, [sp, #12]
   30d0c:	ldr	r0, [sp, #20]
   30d10:	ldr	r0, [r0, #4]
   30d14:	sub	r0, r0, #1
   30d18:	str	r0, [sp, #8]
   30d1c:	ldr	r0, [sp, #12]
   30d20:	ldr	r1, [sp, #8]
   30d24:	cmp	r0, r1
   30d28:	bcs	30d7c <__assert_fail@plt+0x1f8e8>
   30d2c:	ldr	r0, [sp, #12]
   30d30:	ldr	r1, [sp, #8]
   30d34:	add	r0, r0, r1
   30d38:	lsr	r0, r0, #1
   30d3c:	str	r0, [sp, #4]
   30d40:	ldr	r0, [sp, #20]
   30d44:	ldr	r0, [r0, #8]
   30d48:	ldr	r1, [sp, #4]
   30d4c:	add	r0, r0, r1, lsl #2
   30d50:	ldr	r0, [r0]
   30d54:	ldr	r1, [sp, #16]
   30d58:	cmp	r0, r1
   30d5c:	bge	30d70 <__assert_fail@plt+0x1f8dc>
   30d60:	ldr	r0, [sp, #4]
   30d64:	add	r0, r0, #1
   30d68:	str	r0, [sp, #12]
   30d6c:	b	30d78 <__assert_fail@plt+0x1f8e4>
   30d70:	ldr	r0, [sp, #4]
   30d74:	str	r0, [sp, #8]
   30d78:	b	30d1c <__assert_fail@plt+0x1f888>
   30d7c:	ldr	r0, [sp, #20]
   30d80:	ldr	r0, [r0, #8]
   30d84:	ldr	r1, [sp, #12]
   30d88:	add	r0, r0, r1, lsl #2
   30d8c:	ldr	r0, [r0]
   30d90:	ldr	r1, [sp, #16]
   30d94:	cmp	r0, r1
   30d98:	bne	30dac <__assert_fail@plt+0x1f918>
   30d9c:	ldr	r0, [sp, #12]
   30da0:	add	r0, r0, #1
   30da4:	str	r0, [sp]
   30da8:	b	30db8 <__assert_fail@plt+0x1f924>
   30dac:	movw	r0, #0
   30db0:	str	r0, [sp]
   30db4:	b	30db8 <__assert_fail@plt+0x1f924>
   30db8:	ldr	r0, [sp]
   30dbc:	str	r0, [sp, #24]
   30dc0:	ldr	r0, [sp, #24]
   30dc4:	add	sp, sp, #28
   30dc8:	bx	lr
   30dcc:	push	{fp, lr}
   30dd0:	mov	fp, sp
   30dd4:	sub	sp, sp, #40	; 0x28
   30dd8:	str	r0, [fp, #-8]
   30ddc:	str	r1, [fp, #-12]
   30de0:	str	r2, [fp, #-16]
   30de4:	str	r3, [sp, #20]
   30de8:	ldr	r0, [fp, #-16]
   30dec:	ldr	r0, [r0, #4]
   30df0:	cmp	r0, #0
   30df4:	bne	30e0c <__assert_fail@plt+0x1f978>
   30df8:	ldr	r0, [fp, #-8]
   30dfc:	movw	r1, #0
   30e00:	str	r1, [r0]
   30e04:	str	r1, [fp, #-4]
   30e08:	b	30f1c <__assert_fail@plt+0x1fa88>
   30e0c:	ldr	r0, [fp, #-16]
   30e10:	ldr	r1, [sp, #20]
   30e14:	bl	30f28 <__assert_fail@plt+0x1fa94>
   30e18:	str	r0, [sp, #16]
   30e1c:	ldr	r0, [fp, #-12]
   30e20:	ldr	r0, [r0, #32]
   30e24:	ldr	r1, [sp, #16]
   30e28:	ldr	r2, [fp, #-12]
   30e2c:	ldr	r2, [r2, #68]	; 0x44
   30e30:	and	r1, r1, r2
   30e34:	movw	r2, #12
   30e38:	mul	r1, r1, r2
   30e3c:	add	r0, r0, r1
   30e40:	str	r0, [sp, #8]
   30e44:	movw	r0, #0
   30e48:	str	r0, [sp, #4]
   30e4c:	ldr	r0, [sp, #4]
   30e50:	ldr	r1, [sp, #8]
   30e54:	ldr	r1, [r1]
   30e58:	cmp	r0, r1
   30e5c:	bge	30ee0 <__assert_fail@plt+0x1fa4c>
   30e60:	ldr	r0, [sp, #8]
   30e64:	ldr	r0, [r0, #8]
   30e68:	ldr	r1, [sp, #4]
   30e6c:	add	r0, r0, r1, lsl #2
   30e70:	ldr	r0, [r0]
   30e74:	str	r0, [sp]
   30e78:	ldr	r0, [sp]
   30e7c:	ldr	r0, [r0]
   30e80:	ldr	r1, [sp, #16]
   30e84:	cmp	r0, r1
   30e88:	bne	30ecc <__assert_fail@plt+0x1fa38>
   30e8c:	ldr	r0, [sp]
   30e90:	ldrb	r0, [r0, #52]	; 0x34
   30e94:	and	r0, r0, #15
   30e98:	and	r0, r0, #255	; 0xff
   30e9c:	ldr	r1, [sp, #20]
   30ea0:	cmp	r0, r1
   30ea4:	bne	30ecc <__assert_fail@plt+0x1fa38>
   30ea8:	ldr	r0, [sp]
   30eac:	ldr	r0, [r0, #40]	; 0x28
   30eb0:	ldr	r1, [fp, #-16]
   30eb4:	bl	30fa0 <__assert_fail@plt+0x1fb0c>
   30eb8:	tst	r0, #1
   30ebc:	beq	30ecc <__assert_fail@plt+0x1fa38>
   30ec0:	ldr	r0, [sp]
   30ec4:	str	r0, [fp, #-4]
   30ec8:	b	30f1c <__assert_fail@plt+0x1fa88>
   30ecc:	b	30ed0 <__assert_fail@plt+0x1fa3c>
   30ed0:	ldr	r0, [sp, #4]
   30ed4:	add	r0, r0, #1
   30ed8:	str	r0, [sp, #4]
   30edc:	b	30e4c <__assert_fail@plt+0x1f9b8>
   30ee0:	ldr	r0, [fp, #-12]
   30ee4:	ldr	r1, [fp, #-16]
   30ee8:	ldr	r2, [sp, #20]
   30eec:	ldr	r3, [sp, #16]
   30ef0:	bl	31070 <__assert_fail@plt+0x1fbdc>
   30ef4:	str	r0, [sp, #12]
   30ef8:	ldr	r0, [sp, #12]
   30efc:	movw	r1, #0
   30f00:	cmp	r0, r1
   30f04:	bne	30f14 <__assert_fail@plt+0x1fa80>
   30f08:	ldr	r0, [fp, #-8]
   30f0c:	movw	r1, #12
   30f10:	str	r1, [r0]
   30f14:	ldr	r0, [sp, #12]
   30f18:	str	r0, [fp, #-4]
   30f1c:	ldr	r0, [fp, #-4]
   30f20:	mov	sp, fp
   30f24:	pop	{fp, pc}
   30f28:	sub	sp, sp, #16
   30f2c:	str	r0, [sp, #12]
   30f30:	str	r1, [sp, #8]
   30f34:	ldr	r0, [sp, #12]
   30f38:	ldr	r0, [r0, #4]
   30f3c:	ldr	r1, [sp, #8]
   30f40:	add	r0, r0, r1
   30f44:	str	r0, [sp, #4]
   30f48:	movw	r0, #0
   30f4c:	str	r0, [sp]
   30f50:	ldr	r0, [sp]
   30f54:	ldr	r1, [sp, #12]
   30f58:	ldr	r1, [r1, #4]
   30f5c:	cmp	r0, r1
   30f60:	bge	30f94 <__assert_fail@plt+0x1fb00>
   30f64:	ldr	r0, [sp, #12]
   30f68:	ldr	r0, [r0, #8]
   30f6c:	ldr	r1, [sp]
   30f70:	add	r0, r0, r1, lsl #2
   30f74:	ldr	r0, [r0]
   30f78:	ldr	r1, [sp, #4]
   30f7c:	add	r0, r1, r0
   30f80:	str	r0, [sp, #4]
   30f84:	ldr	r0, [sp]
   30f88:	add	r0, r0, #1
   30f8c:	str	r0, [sp]
   30f90:	b	30f50 <__assert_fail@plt+0x1fabc>
   30f94:	ldr	r0, [sp, #4]
   30f98:	add	sp, sp, #16
   30f9c:	bx	lr
   30fa0:	sub	sp, sp, #16
   30fa4:	str	r0, [sp, #8]
   30fa8:	str	r1, [sp, #4]
   30fac:	ldr	r0, [sp, #8]
   30fb0:	movw	r1, #0
   30fb4:	cmp	r0, r1
   30fb8:	beq	30fe4 <__assert_fail@plt+0x1fb50>
   30fbc:	ldr	r0, [sp, #4]
   30fc0:	movw	r1, #0
   30fc4:	cmp	r0, r1
   30fc8:	beq	30fe4 <__assert_fail@plt+0x1fb50>
   30fcc:	ldr	r0, [sp, #8]
   30fd0:	ldr	r0, [r0, #4]
   30fd4:	ldr	r1, [sp, #4]
   30fd8:	ldr	r1, [r1, #4]
   30fdc:	cmp	r0, r1
   30fe0:	beq	30ff4 <__assert_fail@plt+0x1fb60>
   30fe4:	movw	r0, #0
   30fe8:	and	r0, r0, #1
   30fec:	strb	r0, [sp, #15]
   30ff0:	b	31060 <__assert_fail@plt+0x1fbcc>
   30ff4:	ldr	r0, [sp, #8]
   30ff8:	ldr	r0, [r0, #4]
   30ffc:	str	r0, [sp]
   31000:	ldr	r0, [sp]
   31004:	mvn	r1, #0
   31008:	add	r0, r0, r1
   3100c:	str	r0, [sp]
   31010:	cmp	r0, #0
   31014:	blt	31054 <__assert_fail@plt+0x1fbc0>
   31018:	ldr	r0, [sp, #8]
   3101c:	ldr	r0, [r0, #8]
   31020:	ldr	r1, [sp]
   31024:	ldr	r0, [r0, r1, lsl #2]
   31028:	ldr	r2, [sp, #4]
   3102c:	ldr	r2, [r2, #8]
   31030:	add	r1, r2, r1, lsl #2
   31034:	ldr	r1, [r1]
   31038:	cmp	r0, r1
   3103c:	beq	31050 <__assert_fail@plt+0x1fbbc>
   31040:	movw	r0, #0
   31044:	and	r0, r0, #1
   31048:	strb	r0, [sp, #15]
   3104c:	b	31060 <__assert_fail@plt+0x1fbcc>
   31050:	b	31000 <__assert_fail@plt+0x1fb6c>
   31054:	movw	r0, #1
   31058:	and	r0, r0, #1
   3105c:	strb	r0, [sp, #15]
   31060:	ldrb	r0, [sp, #15]
   31064:	and	r0, r0, #1
   31068:	add	sp, sp, #16
   3106c:	bx	lr
   31070:	push	{fp, lr}
   31074:	mov	fp, sp
   31078:	sub	sp, sp, #56	; 0x38
   3107c:	str	r0, [fp, #-8]
   31080:	str	r1, [fp, #-12]
   31084:	str	r2, [fp, #-16]
   31088:	str	r3, [fp, #-20]	; 0xffffffec
   3108c:	movw	r0, #0
   31090:	str	r0, [sp, #28]
   31094:	movw	r0, #56	; 0x38
   31098:	movw	r1, #1
   3109c:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   310a0:	str	r0, [sp, #20]
   310a4:	ldr	r0, [sp, #20]
   310a8:	movw	r1, #0
   310ac:	cmp	r0, r1
   310b0:	bne	310c0 <__assert_fail@plt+0x1fc2c>
   310b4:	movw	r0, #0
   310b8:	str	r0, [fp, #-4]
   310bc:	b	313bc <__assert_fail@plt+0x1ff28>
   310c0:	ldr	r0, [sp, #20]
   310c4:	add	r0, r0, #4
   310c8:	ldr	r1, [fp, #-12]
   310cc:	bl	30c08 <__assert_fail@plt+0x1f774>
   310d0:	str	r0, [sp, #24]
   310d4:	ldr	r0, [sp, #24]
   310d8:	cmp	r0, #0
   310dc:	beq	310f4 <__assert_fail@plt+0x1fc60>
   310e0:	ldr	r0, [sp, #20]
   310e4:	bl	1388c <__assert_fail@plt+0x23f8>
   310e8:	movw	r0, #0
   310ec:	str	r0, [fp, #-4]
   310f0:	b	313bc <__assert_fail@plt+0x1ff28>
   310f4:	ldr	r0, [fp, #-16]
   310f8:	ldr	r1, [sp, #20]
   310fc:	ldrb	r2, [r1, #52]	; 0x34
   31100:	and	r0, r0, #15
   31104:	bic	r2, r2, #15
   31108:	orr	r0, r2, r0
   3110c:	strb	r0, [r1, #52]	; 0x34
   31110:	ldr	r0, [sp, #20]
   31114:	add	r0, r0, #4
   31118:	ldr	r1, [sp, #20]
   3111c:	str	r0, [r1, #40]	; 0x28
   31120:	movw	r0, #0
   31124:	str	r0, [fp, #-24]	; 0xffffffe8
   31128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3112c:	ldr	r1, [fp, #-12]
   31130:	ldr	r1, [r1, #4]
   31134:	cmp	r0, r1
   31138:	bge	31384 <__assert_fail@plt+0x1fef0>
   3113c:	ldr	r0, [fp, #-8]
   31140:	ldr	r0, [r0]
   31144:	ldr	r1, [fp, #-12]
   31148:	ldr	r1, [r1, #8]
   3114c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31150:	ldr	r1, [r1, r2, lsl #2]
   31154:	add	r0, r0, r1, lsl #3
   31158:	str	r0, [sp, #16]
   3115c:	ldr	r0, [sp, #16]
   31160:	ldr	r0, [r0, #4]
   31164:	and	r0, r0, #255	; 0xff
   31168:	str	r0, [sp, #12]
   3116c:	ldr	r0, [sp, #16]
   31170:	ldr	r0, [r0, #4]
   31174:	lsr	r0, r0, #8
   31178:	movw	r1, #1023	; 0x3ff
   3117c:	and	r0, r0, r1
   31180:	str	r0, [sp, #8]
   31184:	ldr	r0, [sp, #12]
   31188:	cmp	r0, #1
   3118c:	bne	311a0 <__assert_fail@plt+0x1fd0c>
   31190:	ldr	r0, [sp, #8]
   31194:	cmp	r0, #0
   31198:	bne	311a0 <__assert_fail@plt+0x1fd0c>
   3119c:	b	31374 <__assert_fail@plt+0x1fee0>
   311a0:	ldr	r0, [sp, #16]
   311a4:	ldr	r0, [r0, #4]
   311a8:	ldr	r1, [sp, #20]
   311ac:	ldrb	r2, [r1, #52]	; 0x34
   311b0:	lsr	r3, r2, #5
   311b4:	orr	r0, r3, r0, lsr #20
   311b8:	and	r0, r0, #1
   311bc:	lsl	r0, r0, #5
   311c0:	bic	r2, r2, #32
   311c4:	orr	r0, r2, r0
   311c8:	strb	r0, [r1, #52]	; 0x34
   311cc:	ldr	r0, [sp, #12]
   311d0:	cmp	r0, #2
   311d4:	bne	311f4 <__assert_fail@plt+0x1fd60>
   311d8:	ldr	r0, [sp, #20]
   311dc:	ldrb	r1, [r0, #52]	; 0x34
   311e0:	bic	r1, r1, #16
   311e4:	movw	r2, #16
   311e8:	orr	r1, r1, r2
   311ec:	strb	r1, [r0, #52]	; 0x34
   311f0:	b	3121c <__assert_fail@plt+0x1fd88>
   311f4:	ldr	r0, [sp, #12]
   311f8:	cmp	r0, #4
   311fc:	bne	31218 <__assert_fail@plt+0x1fd84>
   31200:	ldr	r0, [sp, #20]
   31204:	ldrb	r1, [r0, #52]	; 0x34
   31208:	bic	r1, r1, #64	; 0x40
   3120c:	movw	r2, #64	; 0x40
   31210:	orr	r1, r1, r2
   31214:	strb	r1, [r0, #52]	; 0x34
   31218:	b	3121c <__assert_fail@plt+0x1fd88>
   3121c:	ldr	r0, [sp, #8]
   31220:	cmp	r0, #0
   31224:	beq	31370 <__assert_fail@plt+0x1fedc>
   31228:	ldr	r0, [sp, #20]
   3122c:	ldr	r0, [r0, #40]	; 0x28
   31230:	ldr	r1, [sp, #20]
   31234:	add	r1, r1, #4
   31238:	cmp	r0, r1
   3123c:	bne	312c8 <__assert_fail@plt+0x1fe34>
   31240:	movw	r0, #12
   31244:	bl	3f908 <__assert_fail@plt+0x2e474>
   31248:	str	r0, [sp, #4]
   3124c:	ldr	r0, [sp, #4]
   31250:	movw	r1, #0
   31254:	cmp	r0, r1
   31258:	bne	31270 <__assert_fail@plt+0x1fddc>
   3125c:	ldr	r0, [sp, #20]
   31260:	bl	266b0 <__assert_fail@plt+0x1521c>
   31264:	movw	r0, #0
   31268:	str	r0, [fp, #-4]
   3126c:	b	313bc <__assert_fail@plt+0x1ff28>
   31270:	ldr	r0, [sp, #4]
   31274:	ldr	r1, [sp, #20]
   31278:	str	r0, [r1, #40]	; 0x28
   3127c:	ldr	r0, [sp, #20]
   31280:	ldr	r0, [r0, #40]	; 0x28
   31284:	ldr	r1, [fp, #-12]
   31288:	bl	30c08 <__assert_fail@plt+0x1f774>
   3128c:	cmp	r0, #0
   31290:	beq	312a8 <__assert_fail@plt+0x1fe14>
   31294:	ldr	r0, [sp, #20]
   31298:	bl	266b0 <__assert_fail@plt+0x1521c>
   3129c:	movw	r0, #0
   312a0:	str	r0, [fp, #-4]
   312a4:	b	313bc <__assert_fail@plt+0x1ff28>
   312a8:	mov	r0, #0
   312ac:	str	r0, [sp, #28]
   312b0:	ldr	r0, [sp, #20]
   312b4:	ldrb	r1, [r0, #52]	; 0x34
   312b8:	and	r1, r1, #127	; 0x7f
   312bc:	movw	r2, #128	; 0x80
   312c0:	orr	r1, r1, r2
   312c4:	strb	r1, [r0, #52]	; 0x34
   312c8:	ldr	r0, [sp, #8]
   312cc:	and	r0, r0, #1
   312d0:	cmp	r0, #0
   312d4:	beq	312e8 <__assert_fail@plt+0x1fe54>
   312d8:	ldr	r0, [fp, #-16]
   312dc:	and	r0, r0, #1
   312e0:	cmp	r0, #0
   312e4:	beq	31348 <__assert_fail@plt+0x1feb4>
   312e8:	ldr	r0, [sp, #8]
   312ec:	and	r0, r0, #2
   312f0:	cmp	r0, #0
   312f4:	beq	31308 <__assert_fail@plt+0x1fe74>
   312f8:	ldr	r0, [fp, #-16]
   312fc:	and	r0, r0, #1
   31300:	cmp	r0, #0
   31304:	bne	31348 <__assert_fail@plt+0x1feb4>
   31308:	ldr	r0, [sp, #8]
   3130c:	and	r0, r0, #16
   31310:	cmp	r0, #0
   31314:	beq	31328 <__assert_fail@plt+0x1fe94>
   31318:	ldr	r0, [fp, #-16]
   3131c:	and	r0, r0, #2
   31320:	cmp	r0, #0
   31324:	beq	31348 <__assert_fail@plt+0x1feb4>
   31328:	ldr	r0, [sp, #8]
   3132c:	and	r0, r0, #64	; 0x40
   31330:	cmp	r0, #0
   31334:	beq	3136c <__assert_fail@plt+0x1fed8>
   31338:	ldr	r0, [fp, #-16]
   3133c:	and	r0, r0, #4
   31340:	cmp	r0, #0
   31344:	bne	3136c <__assert_fail@plt+0x1fed8>
   31348:	ldr	r0, [sp, #20]
   3134c:	add	r0, r0, #4
   31350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31354:	ldr	r2, [sp, #28]
   31358:	sub	r1, r1, r2
   3135c:	bl	313c8 <__assert_fail@plt+0x1ff34>
   31360:	ldr	r0, [sp, #28]
   31364:	add	r0, r0, #1
   31368:	str	r0, [sp, #28]
   3136c:	b	31370 <__assert_fail@plt+0x1fedc>
   31370:	b	31374 <__assert_fail@plt+0x1fee0>
   31374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31378:	add	r0, r0, #1
   3137c:	str	r0, [fp, #-24]	; 0xffffffe8
   31380:	b	31128 <__assert_fail@plt+0x1fc94>
   31384:	ldr	r0, [fp, #-8]
   31388:	ldr	r1, [sp, #20]
   3138c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31390:	bl	31450 <__assert_fail@plt+0x1ffbc>
   31394:	str	r0, [sp, #24]
   31398:	ldr	r0, [sp, #24]
   3139c:	cmp	r0, #0
   313a0:	beq	313b4 <__assert_fail@plt+0x1ff20>
   313a4:	ldr	r0, [sp, #20]
   313a8:	bl	266b0 <__assert_fail@plt+0x1521c>
   313ac:	movw	r0, #0
   313b0:	str	r0, [sp, #20]
   313b4:	ldr	r0, [sp, #20]
   313b8:	str	r0, [fp, #-4]
   313bc:	ldr	r0, [fp, #-4]
   313c0:	mov	sp, fp
   313c4:	pop	{fp, pc}
   313c8:	sub	sp, sp, #8
   313cc:	str	r0, [sp, #4]
   313d0:	str	r1, [sp]
   313d4:	ldr	r0, [sp]
   313d8:	cmp	r0, #0
   313dc:	blt	313f4 <__assert_fail@plt+0x1ff60>
   313e0:	ldr	r0, [sp]
   313e4:	ldr	r1, [sp, #4]
   313e8:	ldr	r1, [r1, #4]
   313ec:	cmp	r0, r1
   313f0:	blt	313f8 <__assert_fail@plt+0x1ff64>
   313f4:	b	31448 <__assert_fail@plt+0x1ffb4>
   313f8:	ldr	r0, [sp, #4]
   313fc:	ldr	r1, [r0, #4]
   31400:	mvn	r2, #0
   31404:	add	r1, r1, r2
   31408:	str	r1, [r0, #4]
   3140c:	ldr	r0, [sp]
   31410:	ldr	r1, [sp, #4]
   31414:	ldr	r1, [r1, #4]
   31418:	cmp	r0, r1
   3141c:	bge	31448 <__assert_fail@plt+0x1ffb4>
   31420:	ldr	r0, [sp, #4]
   31424:	ldr	r0, [r0, #8]
   31428:	ldr	r1, [sp]
   3142c:	add	r0, r0, r1, lsl #2
   31430:	ldr	r1, [r0, #4]
   31434:	str	r1, [r0]
   31438:	ldr	r0, [sp]
   3143c:	add	r0, r0, #1
   31440:	str	r0, [sp]
   31444:	b	3140c <__assert_fail@plt+0x1ff78>
   31448:	add	sp, sp, #8
   3144c:	bx	lr
   31450:	push	{fp, lr}
   31454:	mov	fp, sp
   31458:	sub	sp, sp, #40	; 0x28
   3145c:	str	r0, [fp, #-8]
   31460:	str	r1, [fp, #-12]
   31464:	str	r2, [fp, #-16]
   31468:	ldr	r0, [fp, #-16]
   3146c:	ldr	r1, [fp, #-12]
   31470:	str	r0, [r1]
   31474:	ldr	r0, [fp, #-12]
   31478:	add	r0, r0, #16
   3147c:	ldr	r1, [fp, #-12]
   31480:	ldr	r1, [r1, #8]
   31484:	bl	2fdb8 <__assert_fail@plt+0x1e924>
   31488:	str	r0, [sp, #16]
   3148c:	ldr	r0, [sp, #16]
   31490:	cmp	r0, #0
   31494:	beq	314a4 <__assert_fail@plt+0x20010>
   31498:	movw	r0, #12
   3149c:	str	r0, [fp, #-4]
   314a0:	b	315fc <__assert_fail@plt+0x20168>
   314a4:	movw	r0, #0
   314a8:	str	r0, [sp, #12]
   314ac:	ldr	r0, [sp, #12]
   314b0:	ldr	r1, [fp, #-12]
   314b4:	ldr	r1, [r1, #8]
   314b8:	cmp	r0, r1
   314bc:	bge	31534 <__assert_fail@plt+0x200a0>
   314c0:	ldr	r0, [fp, #-12]
   314c4:	ldr	r0, [r0, #12]
   314c8:	ldr	r1, [sp, #12]
   314cc:	ldr	r0, [r0, r1, lsl #2]
   314d0:	str	r0, [sp, #8]
   314d4:	ldr	r0, [fp, #-8]
   314d8:	ldr	r0, [r0]
   314dc:	ldr	r1, [sp, #8]
   314e0:	add	r0, r0, r1, lsl #3
   314e4:	ldr	r0, [r0, #4]
   314e8:	and	r0, r0, #255	; 0xff
   314ec:	and	r0, r0, #8
   314f0:	cmp	r0, #0
   314f4:	bne	31520 <__assert_fail@plt+0x2008c>
   314f8:	ldr	r0, [fp, #-12]
   314fc:	add	r0, r0, #16
   31500:	ldr	r1, [sp, #8]
   31504:	bl	30b48 <__assert_fail@plt+0x1f6b4>
   31508:	tst	r0, #1
   3150c:	bne	3151c <__assert_fail@plt+0x20088>
   31510:	movw	r0, #12
   31514:	str	r0, [fp, #-4]
   31518:	b	315fc <__assert_fail@plt+0x20168>
   3151c:	b	31520 <__assert_fail@plt+0x2008c>
   31520:	b	31524 <__assert_fail@plt+0x20090>
   31524:	ldr	r0, [sp, #12]
   31528:	add	r0, r0, #1
   3152c:	str	r0, [sp, #12]
   31530:	b	314ac <__assert_fail@plt+0x20018>
   31534:	ldr	r0, [fp, #-8]
   31538:	ldr	r0, [r0, #32]
   3153c:	ldr	r1, [fp, #-16]
   31540:	ldr	r2, [fp, #-8]
   31544:	ldr	r2, [r2, #68]	; 0x44
   31548:	and	r1, r1, r2
   3154c:	movw	r2, #12
   31550:	mul	r1, r1, r2
   31554:	add	r0, r0, r1
   31558:	str	r0, [sp, #20]
   3155c:	ldr	r0, [sp, #20]
   31560:	ldr	r0, [r0, #4]
   31564:	ldr	r1, [sp, #20]
   31568:	ldr	r1, [r1]
   3156c:	cmp	r0, r1
   31570:	bgt	315d4 <__assert_fail@plt+0x20140>
   31574:	ldr	r0, [sp, #20]
   31578:	ldr	r0, [r0]
   3157c:	mov	r1, #2
   31580:	add	r0, r1, r0, lsl #1
   31584:	str	r0, [sp, #4]
   31588:	ldr	r0, [sp, #20]
   3158c:	ldr	r0, [r0, #8]
   31590:	ldr	r1, [sp, #4]
   31594:	lsl	r1, r1, #2
   31598:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   3159c:	str	r0, [sp]
   315a0:	ldr	r0, [sp]
   315a4:	movw	r1, #0
   315a8:	cmp	r0, r1
   315ac:	bne	315bc <__assert_fail@plt+0x20128>
   315b0:	movw	r0, #12
   315b4:	str	r0, [fp, #-4]
   315b8:	b	315fc <__assert_fail@plt+0x20168>
   315bc:	ldr	r0, [sp]
   315c0:	ldr	r1, [sp, #20]
   315c4:	str	r0, [r1, #8]
   315c8:	ldr	r0, [sp, #4]
   315cc:	ldr	r1, [sp, #20]
   315d0:	str	r0, [r1, #4]
   315d4:	ldr	r0, [fp, #-12]
   315d8:	ldr	r1, [sp, #20]
   315dc:	ldr	r2, [r1]
   315e0:	ldr	r3, [r1, #8]
   315e4:	add	ip, r2, #1
   315e8:	str	ip, [r1]
   315ec:	add	r1, r3, r2, lsl #2
   315f0:	str	r0, [r1]
   315f4:	movw	r0, #0
   315f8:	str	r0, [fp, #-4]
   315fc:	ldr	r0, [fp, #-4]
   31600:	mov	sp, fp
   31604:	pop	{fp, pc}
   31608:	push	{fp, lr}
   3160c:	mov	fp, sp
   31610:	sub	sp, sp, #40	; 0x28
   31614:	str	r0, [fp, #-8]
   31618:	str	r1, [fp, #-12]
   3161c:	str	r2, [fp, #-16]
   31620:	str	r3, [sp, #20]
   31624:	movw	r0, #1
   31628:	str	r0, [sp, #16]
   3162c:	ldr	r0, [fp, #-16]
   31630:	add	r0, r0, #1
   31634:	str	r0, [sp, #8]
   31638:	ldr	r0, [sp, #20]
   3163c:	cmp	r0, #0
   31640:	bne	316c8 <__assert_fail@plt+0x20234>
   31644:	ldr	r0, [sp, #8]
   31648:	lsl	r0, r0, #2
   3164c:	bl	3f908 <__assert_fail@plt+0x2e474>
   31650:	ldr	r1, [fp, #-8]
   31654:	str	r0, [r1, #4]
   31658:	ldr	r0, [fp, #-8]
   3165c:	ldr	r0, [r0, #4]
   31660:	movw	r1, #0
   31664:	cmp	r0, r1
   31668:	bne	31678 <__assert_fail@plt+0x201e4>
   3166c:	movw	r0, #0
   31670:	str	r0, [fp, #-4]
   31674:	b	31870 <__assert_fail@plt+0x203dc>
   31678:	ldr	r0, [sp, #8]
   3167c:	lsl	r0, r0, #2
   31680:	bl	3f908 <__assert_fail@plt+0x2e474>
   31684:	ldr	r1, [fp, #-8]
   31688:	str	r0, [r1, #8]
   3168c:	ldr	r0, [fp, #-8]
   31690:	ldr	r0, [r0, #8]
   31694:	movw	r1, #0
   31698:	cmp	r0, r1
   3169c:	bne	316b8 <__assert_fail@plt+0x20224>
   316a0:	ldr	r0, [fp, #-8]
   316a4:	ldr	r0, [r0, #4]
   316a8:	bl	1388c <__assert_fail@plt+0x23f8>
   316ac:	movw	r0, #0
   316b0:	str	r0, [fp, #-4]
   316b4:	b	31870 <__assert_fail@plt+0x203dc>
   316b8:	ldr	r0, [sp, #8]
   316bc:	ldr	r1, [fp, #-8]
   316c0:	str	r0, [r1]
   316c4:	b	317b4 <__assert_fail@plt+0x20320>
   316c8:	ldr	r0, [sp, #20]
   316cc:	cmp	r0, #1
   316d0:	bne	31780 <__assert_fail@plt+0x202ec>
   316d4:	ldr	r0, [sp, #8]
   316d8:	ldr	r1, [fp, #-8]
   316dc:	ldr	r1, [r1]
   316e0:	cmp	r0, r1
   316e4:	bls	3177c <__assert_fail@plt+0x202e8>
   316e8:	ldr	r0, [fp, #-8]
   316ec:	ldr	r0, [r0, #4]
   316f0:	ldr	r1, [sp, #8]
   316f4:	lsl	r1, r1, #2
   316f8:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   316fc:	str	r0, [sp, #4]
   31700:	ldr	r0, [sp, #4]
   31704:	movw	r1, #0
   31708:	cmp	r0, r1
   3170c:	bne	3171c <__assert_fail@plt+0x20288>
   31710:	movw	r0, #0
   31714:	str	r0, [fp, #-4]
   31718:	b	31870 <__assert_fail@plt+0x203dc>
   3171c:	ldr	r0, [fp, #-8]
   31720:	ldr	r0, [r0, #8]
   31724:	ldr	r1, [sp, #8]
   31728:	lsl	r1, r1, #2
   3172c:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   31730:	str	r0, [sp]
   31734:	ldr	r0, [sp]
   31738:	movw	r1, #0
   3173c:	cmp	r0, r1
   31740:	bne	31758 <__assert_fail@plt+0x202c4>
   31744:	ldr	r0, [sp, #4]
   31748:	bl	1388c <__assert_fail@plt+0x23f8>
   3174c:	movw	r0, #0
   31750:	str	r0, [fp, #-4]
   31754:	b	31870 <__assert_fail@plt+0x203dc>
   31758:	ldr	r0, [sp, #4]
   3175c:	ldr	r1, [fp, #-8]
   31760:	str	r0, [r1, #4]
   31764:	ldr	r0, [sp]
   31768:	ldr	r1, [fp, #-8]
   3176c:	str	r0, [r1, #8]
   31770:	ldr	r0, [sp, #8]
   31774:	ldr	r1, [fp, #-8]
   31778:	str	r0, [r1]
   3177c:	b	317b0 <__assert_fail@plt+0x2031c>
   31780:	ldr	r0, [sp, #20]
   31784:	cmp	r0, #2
   31788:	bne	31790 <__assert_fail@plt+0x202fc>
   3178c:	b	31790 <__assert_fail@plt+0x202fc>
   31790:	ldr	r0, [fp, #-16]
   31794:	ldr	r1, [fp, #-8]
   31798:	ldr	r1, [r1]
   3179c:	cmp	r0, r1
   317a0:	bhi	317a8 <__assert_fail@plt+0x20314>
   317a4:	b	317a8 <__assert_fail@plt+0x20314>
   317a8:	movw	r0, #2
   317ac:	str	r0, [sp, #16]
   317b0:	b	317b4 <__assert_fail@plt+0x20320>
   317b4:	movw	r0, #0
   317b8:	str	r0, [sp, #12]
   317bc:	ldr	r0, [sp, #12]
   317c0:	ldr	r1, [fp, #-16]
   317c4:	cmp	r0, r1
   317c8:	bge	31814 <__assert_fail@plt+0x20380>
   317cc:	ldr	r0, [fp, #-12]
   317d0:	ldr	r1, [sp, #12]
   317d4:	ldr	r0, [r0, r1, lsl #3]
   317d8:	ldr	r2, [fp, #-8]
   317dc:	ldr	r2, [r2, #4]
   317e0:	str	r0, [r2, r1, lsl #2]
   317e4:	ldr	r0, [fp, #-12]
   317e8:	ldr	r1, [sp, #12]
   317ec:	add	r0, r0, r1, lsl #3
   317f0:	ldr	r0, [r0, #4]
   317f4:	ldr	r2, [fp, #-8]
   317f8:	ldr	r2, [r2, #8]
   317fc:	add	r1, r2, r1, lsl #2
   31800:	str	r0, [r1]
   31804:	ldr	r0, [sp, #12]
   31808:	add	r0, r0, #1
   3180c:	str	r0, [sp, #12]
   31810:	b	317bc <__assert_fail@plt+0x20328>
   31814:	b	31818 <__assert_fail@plt+0x20384>
   31818:	ldr	r0, [sp, #12]
   3181c:	ldr	r1, [fp, #-8]
   31820:	ldr	r1, [r1]
   31824:	cmp	r0, r1
   31828:	bcs	31868 <__assert_fail@plt+0x203d4>
   3182c:	ldr	r0, [fp, #-8]
   31830:	ldr	r0, [r0, #8]
   31834:	ldr	r1, [sp, #12]
   31838:	mvn	r2, #0
   3183c:	str	r2, [r0, r1, lsl #2]
   31840:	ldr	r0, [fp, #-8]
   31844:	ldr	r0, [r0, #4]
   31848:	ldr	r1, [sp, #12]
   3184c:	add	r0, r0, r1, lsl #2
   31850:	mvn	r1, #0
   31854:	str	r1, [r0]
   31858:	ldr	r0, [sp, #12]
   3185c:	add	r0, r0, #1
   31860:	str	r0, [sp, #12]
   31864:	b	31818 <__assert_fail@plt+0x20384>
   31868:	ldr	r0, [sp, #16]
   3186c:	str	r0, [fp, #-4]
   31870:	ldr	r0, [fp, #-4]
   31874:	mov	sp, fp
   31878:	pop	{fp, pc}
   3187c:	push	{r4, sl, fp, lr}
   31880:	add	fp, sp, #8
   31884:	sub	sp, sp, #56	; 0x38
   31888:	ldr	ip, [fp, #16]
   3188c:	ldr	lr, [fp, #12]
   31890:	ldr	r4, [fp, #8]
   31894:	str	r0, [fp, #-16]
   31898:	str	r1, [fp, #-20]	; 0xffffffec
   3189c:	str	r2, [fp, #-24]	; 0xffffffe8
   318a0:	str	r3, [fp, #-28]	; 0xffffffe4
   318a4:	and	r0, lr, #1
   318a8:	strb	r0, [fp, #-29]	; 0xffffffe3
   318ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   318b0:	ldr	r1, [fp, #16]
   318b4:	ldr	r1, [r1, #92]	; 0x5c
   318b8:	cmp	r0, r1
   318bc:	bge	318cc <__assert_fail@plt+0x20438>
   318c0:	ldr	r0, [fp, #16]
   318c4:	ldr	r0, [r0, #92]	; 0x5c
   318c8:	str	r0, [fp, #-28]	; 0xffffffe4
   318cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318d0:	add	r0, r0, #1
   318d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   318d8:	cmp	r0, r1
   318dc:	bge	318f0 <__assert_fail@plt+0x2045c>
   318e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318e4:	add	r0, r0, #1
   318e8:	str	r0, [sp, #20]
   318ec:	b	318f8 <__assert_fail@plt+0x20464>
   318f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   318f4:	str	r0, [sp, #20]
   318f8:	ldr	r0, [sp, #20]
   318fc:	str	r0, [sp, #24]
   31900:	ldr	r0, [fp, #-20]	; 0xffffffec
   31904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31908:	ldr	r2, [fp, #-16]
   3190c:	ldr	r3, [fp, #8]
   31910:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   31914:	ldr	lr, [fp, #16]
   31918:	and	ip, ip, #1
   3191c:	str	ip, [sp]
   31920:	str	lr, [sp, #4]
   31924:	bl	27c54 <__assert_fail@plt+0x167c0>
   31928:	ldr	r0, [fp, #-16]
   3192c:	ldr	r1, [sp, #24]
   31930:	bl	27d54 <__assert_fail@plt+0x168c0>
   31934:	str	r0, [sp, #28]
   31938:	ldr	r0, [sp, #28]
   3193c:	cmp	r0, #0
   31940:	beq	31950 <__assert_fail@plt+0x204bc>
   31944:	ldr	r0, [sp, #28]
   31948:	str	r0, [fp, #-12]
   3194c:	b	31a04 <__assert_fail@plt+0x20570>
   31950:	ldr	r0, [fp, #16]
   31954:	add	r0, r0, #96	; 0x60
   31958:	ldr	r1, [fp, #-16]
   3195c:	str	r0, [r1, #68]	; 0x44
   31960:	ldr	r0, [fp, #16]
   31964:	ldrb	r0, [r0, #88]	; 0x58
   31968:	ubfx	r0, r0, #4, #1
   3196c:	and	r0, r0, #255	; 0xff
   31970:	ldr	r1, [fp, #-16]
   31974:	strb	r0, [r1, #78]	; 0x4e
   31978:	ldr	r0, [fp, #-16]
   3197c:	ldrb	r0, [r0, #75]	; 0x4b
   31980:	cmp	r0, #0
   31984:	beq	31998 <__assert_fail@plt+0x20504>
   31988:	ldr	r0, [fp, #-16]
   3198c:	ldr	r0, [r0, #4]
   31990:	str	r0, [sp, #16]
   31994:	b	319a0 <__assert_fail@plt+0x2050c>
   31998:	ldr	r0, [fp, #-20]	; 0xffffffec
   3199c:	str	r0, [sp, #16]
   319a0:	ldr	r0, [sp, #16]
   319a4:	ldr	r1, [fp, #-16]
   319a8:	str	r0, [r1, #4]
   319ac:	ldr	r0, [fp, #-16]
   319b0:	ldrb	r0, [r0, #75]	; 0x4b
   319b4:	cmp	r0, #0
   319b8:	bne	319cc <__assert_fail@plt+0x20538>
   319bc:	ldr	r0, [fp, #16]
   319c0:	ldr	r0, [r0, #92]	; 0x5c
   319c4:	cmp	r0, #1
   319c8:	ble	319d8 <__assert_fail@plt+0x20544>
   319cc:	movw	r0, #0
   319d0:	str	r0, [sp, #12]
   319d4:	b	319e0 <__assert_fail@plt+0x2054c>
   319d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   319dc:	str	r0, [sp, #12]
   319e0:	ldr	r0, [sp, #12]
   319e4:	ldr	r1, [fp, #-16]
   319e8:	str	r0, [r1, #28]
   319ec:	ldr	r0, [fp, #-16]
   319f0:	ldr	r0, [r0, #28]
   319f4:	ldr	r1, [fp, #-16]
   319f8:	str	r0, [r1, #32]
   319fc:	movw	r0, #0
   31a00:	str	r0, [fp, #-12]
   31a04:	ldr	r0, [fp, #-12]
   31a08:	sub	sp, fp, #8
   31a0c:	pop	{r4, sl, fp, pc}
   31a10:	push	{fp, lr}
   31a14:	mov	fp, sp
   31a18:	sub	sp, sp, #32
   31a1c:	str	r0, [fp, #-8]
   31a20:	str	r1, [fp, #-12]
   31a24:	str	r2, [sp, #16]
   31a28:	ldr	r0, [fp, #-12]
   31a2c:	ldr	r1, [fp, #-8]
   31a30:	str	r0, [r1, #88]	; 0x58
   31a34:	ldr	r0, [fp, #-8]
   31a38:	mvn	r1, #0
   31a3c:	str	r1, [r0, #92]	; 0x5c
   31a40:	ldr	r0, [sp, #16]
   31a44:	cmp	r0, #0
   31a48:	ble	31b24 <__assert_fail@plt+0x20690>
   31a4c:	ldr	r0, [pc, #264]	; 31b5c <__assert_fail@plt+0x206c8>
   31a50:	movw	r1, #24
   31a54:	str	r1, [sp, #12]
   31a58:	ldr	r1, [sp, #12]
   31a5c:	mvn	r2, #0
   31a60:	udiv	r1, r2, r1
   31a64:	cmp	r0, r1
   31a68:	bcs	31a78 <__assert_fail@plt+0x205e4>
   31a6c:	ldr	r0, [pc, #232]	; 31b5c <__assert_fail@plt+0x206c8>
   31a70:	str	r0, [sp, #8]
   31a74:	b	31a88 <__assert_fail@plt+0x205f4>
   31a78:	ldr	r0, [sp, #12]
   31a7c:	mvn	r1, #0
   31a80:	udiv	r0, r1, r0
   31a84:	str	r0, [sp, #8]
   31a88:	ldr	r0, [sp, #8]
   31a8c:	ldr	r1, [sp, #16]
   31a90:	cmp	r0, r1
   31a94:	bcs	31aa4 <__assert_fail@plt+0x20610>
   31a98:	movw	r0, #12
   31a9c:	str	r0, [fp, #-4]
   31aa0:	b	31b50 <__assert_fail@plt+0x206bc>
   31aa4:	ldr	r0, [sp, #16]
   31aa8:	add	r0, r0, r0, lsl #1
   31aac:	lsl	r0, r0, #3
   31ab0:	bl	3f908 <__assert_fail@plt+0x2e474>
   31ab4:	ldr	r1, [fp, #-8]
   31ab8:	str	r0, [r1, #116]	; 0x74
   31abc:	ldr	r0, [sp, #16]
   31ac0:	lsl	r0, r0, #2
   31ac4:	bl	3f908 <__assert_fail@plt+0x2e474>
   31ac8:	ldr	r1, [fp, #-8]
   31acc:	str	r0, [r1, #132]	; 0x84
   31ad0:	ldr	r0, [fp, #-8]
   31ad4:	ldr	r0, [r0, #116]	; 0x74
   31ad8:	movw	r1, #0
   31adc:	cmp	r0, r1
   31ae0:	movw	r0, #1
   31ae4:	str	r0, [sp, #4]
   31ae8:	beq	31b08 <__assert_fail@plt+0x20674>
   31aec:	ldr	r0, [fp, #-8]
   31af0:	ldr	r0, [r0, #132]	; 0x84
   31af4:	movw	r1, #0
   31af8:	cmp	r0, r1
   31afc:	movw	r0, #0
   31b00:	moveq	r0, #1
   31b04:	str	r0, [sp, #4]
   31b08:	ldr	r0, [sp, #4]
   31b0c:	tst	r0, #1
   31b10:	beq	31b20 <__assert_fail@plt+0x2068c>
   31b14:	movw	r0, #12
   31b18:	str	r0, [fp, #-4]
   31b1c:	b	31b50 <__assert_fail@plt+0x206bc>
   31b20:	b	31b24 <__assert_fail@plt+0x20690>
   31b24:	ldr	r0, [sp, #16]
   31b28:	ldr	r1, [fp, #-8]
   31b2c:	str	r0, [r1, #112]	; 0x70
   31b30:	ldr	r0, [fp, #-8]
   31b34:	movw	r1, #1
   31b38:	str	r1, [r0, #120]	; 0x78
   31b3c:	ldr	r0, [sp, #16]
   31b40:	ldr	r1, [fp, #-8]
   31b44:	str	r0, [r1, #128]	; 0x80
   31b48:	movw	r0, #0
   31b4c:	str	r0, [fp, #-4]
   31b50:	ldr	r0, [fp, #-4]
   31b54:	mov	sp, fp
   31b58:	pop	{fp, pc}
   31b5c:	svcvc	0x00ffffff
   31b60:	push	{fp, lr}
   31b64:	mov	fp, sp
   31b68:	sub	sp, sp, #128	; 0x80
   31b6c:	str	r0, [fp, #-8]
   31b70:	str	r1, [fp, #-12]
   31b74:	str	r2, [fp, #-16]
   31b78:	ldr	r0, [fp, #-8]
   31b7c:	ldr	r0, [r0, #24]
   31b80:	ldr	r1, [fp, #-12]
   31b84:	cmp	r0, r1
   31b88:	bgt	31ba4 <__assert_fail@plt+0x20710>
   31b8c:	ldr	r0, [fp, #-12]
   31b90:	ldr	r1, [fp, #-8]
   31b94:	ldr	r1, [r1, #24]
   31b98:	sub	r0, r0, r1
   31b9c:	str	r0, [fp, #-20]	; 0xffffffec
   31ba0:	b	31c64 <__assert_fail@plt+0x207d0>
   31ba4:	ldr	r0, [fp, #-8]
   31ba8:	ldr	r0, [r0, #80]	; 0x50
   31bac:	cmp	r0, #1
   31bb0:	ble	31bcc <__assert_fail@plt+0x20738>
   31bb4:	ldr	r0, [fp, #-8]
   31bb8:	add	r0, r0, #16
   31bbc:	movw	r1, #0
   31bc0:	and	r1, r1, #255	; 0xff
   31bc4:	movw	r2, #8
   31bc8:	bl	113d4 <memset@plt>
   31bcc:	ldr	r0, [fp, #-8]
   31bd0:	ldr	r0, [r0, #44]	; 0x2c
   31bd4:	ldr	r1, [fp, #-8]
   31bd8:	str	r0, [r1, #48]	; 0x30
   31bdc:	ldr	r0, [fp, #-8]
   31be0:	ldr	r0, [r0, #52]	; 0x34
   31be4:	ldr	r1, [fp, #-8]
   31be8:	str	r0, [r1, #56]	; 0x38
   31bec:	ldr	r0, [fp, #-8]
   31bf0:	movw	r1, #0
   31bf4:	str	r1, [r0, #28]
   31bf8:	ldr	r0, [fp, #-8]
   31bfc:	str	r1, [r0, #24]
   31c00:	ldr	r0, [fp, #-8]
   31c04:	str	r1, [r0, #32]
   31c08:	ldr	r0, [fp, #-8]
   31c0c:	movw	r1, #0
   31c10:	strb	r1, [r0, #76]	; 0x4c
   31c14:	ldr	r0, [fp, #-16]
   31c18:	and	r0, r0, #1
   31c1c:	cmp	r0, #0
   31c20:	movw	r0, #0
   31c24:	movne	r0, #1
   31c28:	tst	r0, #1
   31c2c:	movw	r0, #4
   31c30:	moveq	r0, #6
   31c34:	ldr	r1, [fp, #-8]
   31c38:	str	r0, [r1, #60]	; 0x3c
   31c3c:	ldr	r0, [fp, #-8]
   31c40:	ldrsb	r0, [r0, #75]	; 0x4b
   31c44:	cmp	r0, #0
   31c48:	bne	31c5c <__assert_fail@plt+0x207c8>
   31c4c:	ldr	r0, [fp, #-8]
   31c50:	ldr	r0, [r0]
   31c54:	ldr	r1, [fp, #-8]
   31c58:	str	r0, [r1, #4]
   31c5c:	ldr	r0, [fp, #-12]
   31c60:	str	r0, [fp, #-20]	; 0xffffffec
   31c64:	ldr	r0, [fp, #-20]	; 0xffffffec
   31c68:	cmp	r0, #0
   31c6c:	beq	32644 <__assert_fail@plt+0x211b0>
   31c70:	ldr	r0, [fp, #-20]	; 0xffffffec
   31c74:	ldr	r1, [fp, #-8]
   31c78:	ldr	r1, [r1, #32]
   31c7c:	cmp	r0, r1
   31c80:	bge	3212c <__assert_fail@plt+0x20c98>
   31c84:	ldr	r0, [fp, #-8]
   31c88:	ldrb	r0, [r0, #76]	; 0x4c
   31c8c:	cmp	r0, #0
   31c90:	beq	32058 <__assert_fail@plt+0x20bc4>
   31c94:	movw	r0, #0
   31c98:	str	r0, [fp, #-24]	; 0xffffffe8
   31c9c:	ldr	r0, [fp, #-8]
   31ca0:	ldr	r0, [r0, #28]
   31ca4:	str	r0, [fp, #-28]	; 0xffffffe4
   31ca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31cb0:	add	r0, r0, r1
   31cb4:	add	r0, r0, r0, lsr #31
   31cb8:	asr	r0, r0, #1
   31cbc:	str	r0, [fp, #-32]	; 0xffffffe0
   31cc0:	ldr	r0, [fp, #-8]
   31cc4:	ldr	r0, [r0, #12]
   31cc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31ccc:	add	r0, r0, r1, lsl #2
   31cd0:	ldr	r0, [r0]
   31cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   31cd8:	cmp	r0, r1
   31cdc:	ble	31cec <__assert_fail@plt+0x20858>
   31ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ce4:	str	r0, [fp, #-28]	; 0xffffffe4
   31ce8:	b	31d24 <__assert_fail@plt+0x20890>
   31cec:	ldr	r0, [fp, #-8]
   31cf0:	ldr	r0, [r0, #12]
   31cf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31cf8:	add	r0, r0, r1, lsl #2
   31cfc:	ldr	r0, [r0]
   31d00:	ldr	r1, [fp, #-20]	; 0xffffffec
   31d04:	cmp	r0, r1
   31d08:	bge	31d1c <__assert_fail@plt+0x20888>
   31d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31d10:	add	r0, r0, #1
   31d14:	str	r0, [fp, #-24]	; 0xffffffe8
   31d18:	b	31d20 <__assert_fail@plt+0x2088c>
   31d1c:	b	31d38 <__assert_fail@plt+0x208a4>
   31d20:	b	31d24 <__assert_fail@plt+0x20890>
   31d24:	b	31d28 <__assert_fail@plt+0x20894>
   31d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31d30:	cmp	r0, r1
   31d34:	blt	31ca8 <__assert_fail@plt+0x20814>
   31d38:	ldr	r0, [fp, #-8]
   31d3c:	ldr	r0, [r0, #12]
   31d40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31d44:	add	r0, r0, r1, lsl #2
   31d48:	ldr	r0, [r0]
   31d4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31d50:	cmp	r0, r1
   31d54:	bge	31d64 <__assert_fail@plt+0x208d0>
   31d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31d5c:	add	r0, r0, #1
   31d60:	str	r0, [fp, #-32]	; 0xffffffe0
   31d64:	ldr	r0, [fp, #-8]
   31d68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31d6c:	sub	r1, r1, #1
   31d70:	ldr	r2, [fp, #-16]
   31d74:	bl	33608 <__assert_fail@plt+0x22174>
   31d78:	ldr	r1, [fp, #-8]
   31d7c:	str	r0, [r1, #60]	; 0x3c
   31d80:	ldr	r0, [fp, #-8]
   31d84:	ldr	r0, [r0, #28]
   31d88:	ldr	r1, [fp, #-20]	; 0xffffffec
   31d8c:	cmp	r0, r1
   31d90:	ble	31e94 <__assert_fail@plt+0x20a00>
   31d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   31d9c:	cmp	r0, r1
   31da0:	bne	31e94 <__assert_fail@plt+0x20a00>
   31da4:	ldr	r0, [fp, #-8]
   31da8:	ldr	r0, [r0, #12]
   31dac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31db0:	add	r0, r0, r1, lsl #2
   31db4:	ldr	r0, [r0]
   31db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   31dbc:	cmp	r0, r1
   31dc0:	bne	31e94 <__assert_fail@plt+0x20a00>
   31dc4:	ldr	r0, [fp, #-8]
   31dc8:	ldr	r1, [r0, #8]
   31dcc:	ldr	r0, [r0, #28]
   31dd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   31dd4:	add	r3, r1, r2, lsl #2
   31dd8:	sub	r0, r0, r2
   31ddc:	lsl	r2, r0, #2
   31de0:	mov	r0, r1
   31de4:	mov	r1, r3
   31de8:	bl	11218 <memmove@plt>
   31dec:	ldr	r0, [fp, #-8]
   31df0:	ldr	r0, [r0, #4]
   31df4:	ldr	r1, [fp, #-8]
   31df8:	ldr	r1, [r1, #4]
   31dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   31e00:	add	r1, r1, r2
   31e04:	ldr	r2, [fp, #-8]
   31e08:	ldr	r2, [r2, #28]
   31e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e10:	sub	r2, r2, r3
   31e14:	bl	11218 <memmove@plt>
   31e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   31e1c:	ldr	r1, [fp, #-8]
   31e20:	ldr	r2, [r1, #28]
   31e24:	sub	r0, r2, r0
   31e28:	str	r0, [r1, #28]
   31e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31e30:	ldr	r1, [fp, #-8]
   31e34:	ldr	r2, [r1, #32]
   31e38:	sub	r0, r2, r0
   31e3c:	str	r0, [r1, #32]
   31e40:	movw	r0, #0
   31e44:	str	r0, [fp, #-24]	; 0xffffffe8
   31e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e4c:	ldr	r1, [fp, #-8]
   31e50:	ldr	r1, [r1, #28]
   31e54:	cmp	r0, r1
   31e58:	bge	31e90 <__assert_fail@plt+0x209fc>
   31e5c:	ldr	r0, [fp, #-8]
   31e60:	ldr	r0, [r0, #12]
   31e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31e68:	ldr	r2, [fp, #-20]	; 0xffffffec
   31e6c:	add	r3, r1, r2
   31e70:	ldr	r3, [r0, r3, lsl #2]
   31e74:	sub	r2, r3, r2
   31e78:	add	r0, r0, r1, lsl #2
   31e7c:	str	r2, [r0]
   31e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e84:	add	r0, r0, #1
   31e88:	str	r0, [fp, #-24]	; 0xffffffe8
   31e8c:	b	31e48 <__assert_fail@plt+0x209b4>
   31e90:	b	32054 <__assert_fail@plt+0x20bc0>
   31e94:	ldr	r0, [fp, #-8]
   31e98:	ldr	r0, [r0, #44]	; 0x2c
   31e9c:	ldr	r1, [fp, #-12]
   31ea0:	sub	r0, r0, r1
   31ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   31ea8:	add	r0, r0, r1
   31eac:	ldr	r1, [fp, #-8]
   31eb0:	str	r0, [r1, #48]	; 0x30
   31eb4:	ldr	r0, [fp, #-8]
   31eb8:	ldr	r0, [r0, #52]	; 0x34
   31ebc:	ldr	r1, [fp, #-12]
   31ec0:	sub	r0, r0, r1
   31ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   31ec8:	add	r0, r0, r1
   31ecc:	ldr	r1, [fp, #-8]
   31ed0:	str	r0, [r1, #56]	; 0x38
   31ed4:	ldr	r0, [fp, #-8]
   31ed8:	movw	r1, #0
   31edc:	strb	r1, [r0, #76]	; 0x4c
   31ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ee4:	cmp	r0, #0
   31ee8:	movw	r0, #0
   31eec:	str	r0, [sp, #24]
   31ef0:	ble	31f20 <__assert_fail@plt+0x20a8c>
   31ef4:	ldr	r0, [fp, #-8]
   31ef8:	ldr	r0, [r0, #12]
   31efc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f00:	sub	r1, r1, #1
   31f04:	add	r0, r0, r1, lsl #2
   31f08:	ldr	r0, [r0]
   31f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31f10:	cmp	r0, r1
   31f14:	movw	r0, #0
   31f18:	moveq	r0, #1
   31f1c:	str	r0, [sp, #24]
   31f20:	ldr	r0, [sp, #24]
   31f24:	tst	r0, #1
   31f28:	beq	31f40 <__assert_fail@plt+0x20aac>
   31f2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31f30:	mvn	r1, #0
   31f34:	add	r0, r0, r1
   31f38:	str	r0, [fp, #-32]	; 0xffffffe0
   31f3c:	b	31ee0 <__assert_fail@plt+0x20a4c>
   31f40:	b	31f44 <__assert_fail@plt+0x20ab0>
   31f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31f48:	ldr	r1, [fp, #-8]
   31f4c:	ldr	r1, [r1, #28]
   31f50:	cmp	r0, r1
   31f54:	bge	31f88 <__assert_fail@plt+0x20af4>
   31f58:	ldr	r0, [fp, #-8]
   31f5c:	ldr	r0, [r0, #8]
   31f60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f64:	add	r0, r0, r1, lsl #2
   31f68:	ldr	r0, [r0]
   31f6c:	cmn	r0, #1
   31f70:	beq	31f78 <__assert_fail@plt+0x20ae4>
   31f74:	b	31f88 <__assert_fail@plt+0x20af4>
   31f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31f7c:	add	r0, r0, #1
   31f80:	str	r0, [fp, #-32]	; 0xffffffe0
   31f84:	b	31f44 <__assert_fail@plt+0x20ab0>
   31f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31f8c:	ldr	r1, [fp, #-8]
   31f90:	ldr	r1, [r1, #28]
   31f94:	cmp	r0, r1
   31f98:	bne	31fac <__assert_fail@plt+0x20b18>
   31f9c:	ldr	r0, [fp, #-8]
   31fa0:	movw	r1, #0
   31fa4:	str	r1, [r0, #28]
   31fa8:	b	32044 <__assert_fail@plt+0x20bb0>
   31fac:	ldr	r0, [fp, #-8]
   31fb0:	ldr	r0, [r0, #12]
   31fb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31fb8:	add	r0, r0, r1, lsl #2
   31fbc:	ldr	r0, [r0]
   31fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   31fc4:	sub	r0, r0, r1
   31fc8:	ldr	r1, [fp, #-8]
   31fcc:	str	r0, [r1, #28]
   31fd0:	ldr	r0, [fp, #-8]
   31fd4:	ldr	r0, [r0, #28]
   31fd8:	cmp	r0, #0
   31fdc:	beq	32040 <__assert_fail@plt+0x20bac>
   31fe0:	movw	r0, #0
   31fe4:	str	r0, [fp, #-24]	; 0xffffffe8
   31fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31fec:	ldr	r1, [fp, #-8]
   31ff0:	ldr	r1, [r1, #28]
   31ff4:	cmp	r0, r1
   31ff8:	bge	32024 <__assert_fail@plt+0x20b90>
   31ffc:	ldr	r0, [fp, #-8]
   32000:	ldr	r0, [r0, #8]
   32004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32008:	add	r0, r0, r1, lsl #2
   3200c:	mvn	r1, #0
   32010:	str	r1, [r0]
   32014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32018:	add	r0, r0, #1
   3201c:	str	r0, [fp, #-24]	; 0xffffffe8
   32020:	b	31fe8 <__assert_fail@plt+0x20b54>
   32024:	ldr	r0, [fp, #-8]
   32028:	ldr	r0, [r0, #4]
   3202c:	ldr	r1, [fp, #-8]
   32030:	ldr	r2, [r1, #28]
   32034:	movw	r1, #255	; 0xff
   32038:	and	r1, r1, #255	; 0xff
   3203c:	bl	113d4 <memset@plt>
   32040:	b	32044 <__assert_fail@plt+0x20bb0>
   32044:	ldr	r0, [fp, #-8]
   32048:	ldr	r0, [r0, #28]
   3204c:	ldr	r1, [fp, #-8]
   32050:	str	r0, [r1, #32]
   32054:	b	32128 <__assert_fail@plt+0x20c94>
   32058:	ldr	r0, [fp, #-8]
   3205c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32060:	sub	r1, r1, #1
   32064:	ldr	r2, [fp, #-16]
   32068:	bl	33608 <__assert_fail@plt+0x22174>
   3206c:	ldr	r1, [fp, #-8]
   32070:	str	r0, [r1, #60]	; 0x3c
   32074:	ldr	r0, [fp, #-8]
   32078:	ldr	r0, [r0, #80]	; 0x50
   3207c:	cmp	r0, #1
   32080:	ble	320ac <__assert_fail@plt+0x20c18>
   32084:	ldr	r0, [fp, #-8]
   32088:	ldr	r1, [r0, #8]
   3208c:	ldr	r0, [r0, #28]
   32090:	ldr	r2, [fp, #-20]	; 0xffffffec
   32094:	add	r3, r1, r2, lsl #2
   32098:	sub	r0, r0, r2
   3209c:	lsl	r2, r0, #2
   320a0:	mov	r0, r1
   320a4:	mov	r1, r3
   320a8:	bl	11218 <memmove@plt>
   320ac:	ldr	r0, [fp, #-8]
   320b0:	ldrb	r0, [r0, #75]	; 0x4b
   320b4:	cmp	r0, #0
   320b8:	beq	320e8 <__assert_fail@plt+0x20c54>
   320bc:	ldr	r0, [fp, #-8]
   320c0:	ldr	r0, [r0, #4]
   320c4:	ldr	r1, [fp, #-8]
   320c8:	ldr	r1, [r1, #4]
   320cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   320d0:	add	r1, r1, r2
   320d4:	ldr	r2, [fp, #-8]
   320d8:	ldr	r2, [r2, #28]
   320dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   320e0:	sub	r2, r2, r3
   320e4:	bl	11218 <memmove@plt>
   320e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   320ec:	ldr	r1, [fp, #-8]
   320f0:	ldr	r2, [r1, #28]
   320f4:	sub	r0, r2, r0
   320f8:	str	r0, [r1, #28]
   320fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   32100:	ldr	r1, [fp, #-8]
   32104:	ldr	r2, [r1, #32]
   32108:	sub	r0, r2, r0
   3210c:	str	r0, [r1, #32]
   32110:	ldr	r0, [fp, #-8]
   32114:	ldr	r0, [r0, #28]
   32118:	cmp	r0, #0
   3211c:	ble	32124 <__assert_fail@plt+0x20c90>
   32120:	b	32124 <__assert_fail@plt+0x20c90>
   32124:	b	32128 <__assert_fail@plt+0x20c94>
   32128:	b	3261c <__assert_fail@plt+0x21188>
   3212c:	ldr	r0, [fp, #-8]
   32130:	ldr	r0, [r0, #28]
   32134:	str	r0, [fp, #-36]	; 0xffffffdc
   32138:	ldr	r0, [fp, #-8]
   3213c:	ldrb	r0, [r0, #76]	; 0x4c
   32140:	cmp	r0, #0
   32144:	beq	32194 <__assert_fail@plt+0x20d00>
   32148:	ldr	r0, [fp, #-8]
   3214c:	ldr	r0, [r0, #44]	; 0x2c
   32150:	ldr	r1, [fp, #-12]
   32154:	sub	r0, r0, r1
   32158:	ldr	r1, [fp, #-20]	; 0xffffffec
   3215c:	add	r0, r0, r1
   32160:	ldr	r1, [fp, #-8]
   32164:	str	r0, [r1, #48]	; 0x30
   32168:	ldr	r0, [fp, #-8]
   3216c:	ldr	r0, [r0, #52]	; 0x34
   32170:	ldr	r1, [fp, #-12]
   32174:	sub	r0, r0, r1
   32178:	ldr	r1, [fp, #-20]	; 0xffffffec
   3217c:	add	r0, r0, r1
   32180:	ldr	r1, [fp, #-8]
   32184:	str	r0, [r1, #56]	; 0x38
   32188:	ldr	r0, [fp, #-8]
   3218c:	movw	r1, #0
   32190:	strb	r1, [r0, #76]	; 0x4c
   32194:	ldr	r0, [fp, #-8]
   32198:	movw	r1, #0
   3219c:	str	r1, [r0, #28]
   321a0:	ldr	r0, [fp, #-8]
   321a4:	ldr	r0, [r0, #80]	; 0x50
   321a8:	cmp	r0, #1
   321ac:	ble	3254c <__assert_fail@plt+0x210b8>
   321b0:	mvn	r0, #0
   321b4:	str	r0, [fp, #-44]	; 0xffffffd4
   321b8:	ldr	r0, [fp, #-8]
   321bc:	ldrsb	r0, [r0, #73]	; 0x49
   321c0:	cmp	r0, #0
   321c4:	beq	323d8 <__assert_fail@plt+0x20f44>
   321c8:	ldr	r0, [fp, #-8]
   321cc:	ldr	r0, [r0]
   321d0:	ldr	r1, [fp, #-8]
   321d4:	ldr	r1, [r1, #24]
   321d8:	add	r0, r0, r1
   321dc:	str	r0, [fp, #-48]	; 0xffffffd0
   321e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   321e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   321e8:	ldr	r2, [fp, #-8]
   321ec:	ldr	r2, [r2, #80]	; 0x50
   321f0:	sub	r1, r1, r2
   321f4:	add	r0, r0, r1
   321f8:	str	r0, [fp, #-56]	; 0xffffffc8
   321fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   32200:	ldr	r1, [fp, #-8]
   32204:	ldr	r1, [r1]
   32208:	cmp	r0, r1
   3220c:	bcs	3221c <__assert_fail@plt+0x20d88>
   32210:	ldr	r0, [fp, #-8]
   32214:	ldr	r0, [r0]
   32218:	str	r0, [fp, #-56]	; 0xffffffc8
   3221c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32220:	ldr	r1, [fp, #-20]	; 0xffffffec
   32224:	add	r0, r0, r1
   32228:	mvn	r1, #0
   3222c:	add	r0, r0, r1
   32230:	str	r0, [fp, #-52]	; 0xffffffcc
   32234:	ldr	r0, [fp, #-52]	; 0xffffffcc
   32238:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3223c:	cmp	r0, r1
   32240:	bcc	323d4 <__assert_fail@plt+0x20f40>
   32244:	ldr	r0, [fp, #-52]	; 0xffffffcc
   32248:	ldrb	r0, [r0]
   3224c:	and	r0, r0, #192	; 0xc0
   32250:	cmp	r0, #128	; 0x80
   32254:	beq	323bc <__assert_fail@plt+0x20f28>
   32258:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3225c:	ldr	r1, [fp, #-8]
   32260:	ldr	r1, [r1, #48]	; 0x30
   32264:	add	r0, r0, r1
   32268:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3226c:	sub	r0, r0, r1
   32270:	str	r0, [sp, #56]	; 0x38
   32274:	ldr	r0, [fp, #-52]	; 0xffffffcc
   32278:	str	r0, [sp, #40]	; 0x28
   3227c:	ldr	r0, [fp, #-8]
   32280:	ldr	r0, [r0, #64]	; 0x40
   32284:	movw	r1, #0
   32288:	cmp	r0, r1
   3228c:	beq	32310 <__assert_fail@plt+0x20e7c>
   32290:	ldr	r0, [sp, #56]	; 0x38
   32294:	cmp	r0, #6
   32298:	bge	322a8 <__assert_fail@plt+0x20e14>
   3229c:	ldr	r0, [sp, #56]	; 0x38
   322a0:	str	r0, [sp, #20]
   322a4:	b	322b4 <__assert_fail@plt+0x20e20>
   322a8:	movw	r0, #6
   322ac:	str	r0, [sp, #20]
   322b0:	b	322b4 <__assert_fail@plt+0x20e20>
   322b4:	ldr	r0, [sp, #20]
   322b8:	str	r0, [sp, #36]	; 0x24
   322bc:	ldr	r0, [sp, #36]	; 0x24
   322c0:	mvn	r1, #0
   322c4:	add	r0, r0, r1
   322c8:	str	r0, [sp, #36]	; 0x24
   322cc:	cmp	r0, #0
   322d0:	blt	32308 <__assert_fail@plt+0x20e74>
   322d4:	ldr	r0, [fp, #-8]
   322d8:	ldr	r0, [r0, #64]	; 0x40
   322dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   322e0:	ldr	r2, [sp, #36]	; 0x24
   322e4:	add	r1, r1, r2
   322e8:	ldrb	r1, [r1]
   322ec:	add	r0, r0, r1
   322f0:	ldrb	r0, [r0]
   322f4:	ldr	r1, [sp, #36]	; 0x24
   322f8:	add	r2, sp, #50	; 0x32
   322fc:	add	r1, r2, r1
   32300:	strb	r0, [r1]
   32304:	b	322bc <__assert_fail@plt+0x20e28>
   32308:	add	r0, sp, #50	; 0x32
   3230c:	str	r0, [sp, #40]	; 0x28
   32310:	add	r0, sp, #64	; 0x40
   32314:	mov	r1, r0
   32318:	str	r0, [sp, #16]
   3231c:	mov	r0, r1
   32320:	movw	r1, #0
   32324:	and	r1, r1, #255	; 0xff
   32328:	movw	r2, #8
   3232c:	bl	113d4 <memset@plt>
   32330:	ldr	r1, [sp, #40]	; 0x28
   32334:	ldr	r2, [sp, #56]	; 0x38
   32338:	add	r0, sp, #60	; 0x3c
   3233c:	ldr	r3, [sp, #16]
   32340:	bl	41610 <__assert_fail@plt+0x3017c>
   32344:	str	r0, [sp, #44]	; 0x2c
   32348:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3234c:	ldr	r1, [fp, #-20]	; 0xffffffec
   32350:	add	r0, r0, r1
   32354:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32358:	sub	r0, r0, r1
   3235c:	ldr	r1, [sp, #44]	; 0x2c
   32360:	cmp	r0, r1
   32364:	bhi	323b8 <__assert_fail@plt+0x20f24>
   32368:	ldr	r0, [sp, #44]	; 0x2c
   3236c:	cmn	r0, #2
   32370:	bcs	323b8 <__assert_fail@plt+0x20f24>
   32374:	ldr	r0, [fp, #-8]
   32378:	add	r0, r0, #16
   3237c:	movw	r1, #0
   32380:	and	r1, r1, #255	; 0xff
   32384:	movw	r2, #8
   32388:	bl	113d4 <memset@plt>
   3238c:	ldr	r0, [sp, #44]	; 0x2c
   32390:	ldr	r1, [fp, #-48]	; 0xffffffd0
   32394:	ldr	r2, [fp, #-20]	; 0xffffffec
   32398:	add	r1, r1, r2
   3239c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   323a0:	sub	r1, r1, r2
   323a4:	sub	r0, r0, r1
   323a8:	ldr	r1, [fp, #-8]
   323ac:	str	r0, [r1, #28]
   323b0:	ldr	r0, [sp, #60]	; 0x3c
   323b4:	str	r0, [fp, #-44]	; 0xffffffd4
   323b8:	b	323d4 <__assert_fail@plt+0x20f40>
   323bc:	b	323c0 <__assert_fail@plt+0x20f2c>
   323c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   323c4:	mvn	r1, #0
   323c8:	add	r0, r0, r1
   323cc:	str	r0, [fp, #-52]	; 0xffffffcc
   323d0:	b	32234 <__assert_fail@plt+0x20da0>
   323d4:	b	323d8 <__assert_fail@plt+0x20f44>
   323d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   323dc:	cmn	r0, #1
   323e0:	bne	32404 <__assert_fail@plt+0x20f70>
   323e4:	ldr	r0, [fp, #-8]
   323e8:	ldr	r1, [fp, #-12]
   323ec:	sub	r2, fp, #44	; 0x2c
   323f0:	bl	33808 <__assert_fail@plt+0x22374>
   323f4:	ldr	r1, [fp, #-12]
   323f8:	sub	r0, r0, r1
   323fc:	ldr	r1, [fp, #-8]
   32400:	str	r0, [r1, #28]
   32404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   32408:	cmn	r0, #1
   3240c:	bne	32430 <__assert_fail@plt+0x20f9c>
   32410:	ldr	r0, [fp, #-8]
   32414:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32418:	sub	r1, r1, #1
   3241c:	ldr	r2, [fp, #-16]
   32420:	bl	33608 <__assert_fail@plt+0x22174>
   32424:	ldr	r1, [fp, #-8]
   32428:	str	r0, [r1, #60]	; 0x3c
   3242c:	b	324b4 <__assert_fail@plt+0x21020>
   32430:	ldr	r0, [fp, #-8]
   32434:	ldrb	r0, [r0, #78]	; 0x4e
   32438:	cmp	r0, #0
   3243c:	beq	32468 <__assert_fail@plt+0x20fd4>
   32440:	ldr	r0, [fp, #-44]	; 0xffffffd4
   32444:	bl	113bc <iswalnum@plt>
   32448:	cmp	r0, #0
   3244c:	bne	3245c <__assert_fail@plt+0x20fc8>
   32450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   32454:	cmp	r0, #95	; 0x5f
   32458:	bne	32468 <__assert_fail@plt+0x20fd4>
   3245c:	movw	r0, #1
   32460:	str	r0, [sp, #12]
   32464:	b	324a8 <__assert_fail@plt+0x21014>
   32468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3246c:	cmp	r0, #10
   32470:	movw	r0, #0
   32474:	str	r0, [sp, #8]
   32478:	bne	32494 <__assert_fail@plt+0x21000>
   3247c:	ldr	r0, [fp, #-8]
   32480:	ldrb	r0, [r0, #77]	; 0x4d
   32484:	cmp	r0, #0
   32488:	movw	r0, #0
   3248c:	movne	r0, #1
   32490:	str	r0, [sp, #8]
   32494:	ldr	r0, [sp, #8]
   32498:	tst	r0, #1
   3249c:	movw	r0, #2
   324a0:	moveq	r0, #0
   324a4:	str	r0, [sp, #12]
   324a8:	ldr	r0, [sp, #12]
   324ac:	ldr	r1, [fp, #-8]
   324b0:	str	r0, [r1, #60]	; 0x3c
   324b4:	ldr	r0, [fp, #-8]
   324b8:	ldr	r0, [r0, #28]
   324bc:	cmp	r0, #0
   324c0:	beq	32538 <__assert_fail@plt+0x210a4>
   324c4:	movw	r0, #0
   324c8:	str	r0, [fp, #-40]	; 0xffffffd8
   324cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   324d0:	ldr	r1, [fp, #-8]
   324d4:	ldr	r1, [r1, #28]
   324d8:	cmp	r0, r1
   324dc:	bge	32508 <__assert_fail@plt+0x21074>
   324e0:	ldr	r0, [fp, #-8]
   324e4:	ldr	r0, [r0, #8]
   324e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   324ec:	add	r0, r0, r1, lsl #2
   324f0:	mvn	r1, #0
   324f4:	str	r1, [r0]
   324f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   324fc:	add	r0, r0, #1
   32500:	str	r0, [fp, #-40]	; 0xffffffd8
   32504:	b	324cc <__assert_fail@plt+0x21038>
   32508:	ldr	r0, [fp, #-8]
   3250c:	ldrsb	r0, [r0, #75]	; 0x4b
   32510:	cmp	r0, #0
   32514:	beq	32534 <__assert_fail@plt+0x210a0>
   32518:	ldr	r0, [fp, #-8]
   3251c:	ldr	r0, [r0, #4]
   32520:	ldr	r1, [fp, #-8]
   32524:	ldr	r2, [r1, #28]
   32528:	movw	r1, #255	; 0xff
   3252c:	and	r1, r1, #255	; 0xff
   32530:	bl	113d4 <memset@plt>
   32534:	b	32538 <__assert_fail@plt+0x210a4>
   32538:	ldr	r0, [fp, #-8]
   3253c:	ldr	r0, [r0, #28]
   32540:	ldr	r1, [fp, #-8]
   32544:	str	r0, [r1, #32]
   32548:	b	32618 <__assert_fail@plt+0x21184>
   3254c:	ldr	r0, [fp, #-8]
   32550:	ldr	r0, [r0]
   32554:	ldr	r1, [fp, #-8]
   32558:	ldr	r1, [r1, #24]
   3255c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32560:	add	r1, r1, r2
   32564:	sub	r1, r1, #1
   32568:	add	r0, r0, r1
   3256c:	ldrb	r0, [r0]
   32570:	str	r0, [sp, #32]
   32574:	ldr	r0, [fp, #-8]
   32578:	movw	r1, #0
   3257c:	str	r1, [r0, #32]
   32580:	ldr	r0, [fp, #-8]
   32584:	ldr	r0, [r0, #64]	; 0x40
   32588:	cmp	r0, r1
   3258c:	beq	325a8 <__assert_fail@plt+0x21114>
   32590:	ldr	r0, [fp, #-8]
   32594:	ldr	r0, [r0, #64]	; 0x40
   32598:	ldr	r1, [sp, #32]
   3259c:	add	r0, r0, r1
   325a0:	ldrb	r0, [r0]
   325a4:	str	r0, [sp, #32]
   325a8:	ldr	r0, [fp, #-8]
   325ac:	ldr	r0, [r0, #68]	; 0x44
   325b0:	ldr	r1, [sp, #32]
   325b4:	bl	33978 <__assert_fail@plt+0x224e4>
   325b8:	tst	r0, #1
   325bc:	beq	325cc <__assert_fail@plt+0x21138>
   325c0:	movw	r0, #1
   325c4:	str	r0, [sp, #4]
   325c8:	b	3260c <__assert_fail@plt+0x21178>
   325cc:	ldr	r0, [sp, #32]
   325d0:	cmp	r0, #10
   325d4:	movw	r0, #0
   325d8:	str	r0, [sp]
   325dc:	bne	325f8 <__assert_fail@plt+0x21164>
   325e0:	ldr	r0, [fp, #-8]
   325e4:	ldrb	r0, [r0, #77]	; 0x4d
   325e8:	cmp	r0, #0
   325ec:	movw	r0, #0
   325f0:	movne	r0, #1
   325f4:	str	r0, [sp]
   325f8:	ldr	r0, [sp]
   325fc:	tst	r0, #1
   32600:	movw	r0, #2
   32604:	moveq	r0, #0
   32608:	str	r0, [sp, #4]
   3260c:	ldr	r0, [sp, #4]
   32610:	ldr	r1, [fp, #-8]
   32614:	str	r0, [r1, #60]	; 0x3c
   32618:	b	3261c <__assert_fail@plt+0x21188>
   3261c:	ldr	r0, [fp, #-8]
   32620:	ldrb	r0, [r0, #75]	; 0x4b
   32624:	cmp	r0, #0
   32628:	bne	32640 <__assert_fail@plt+0x211ac>
   3262c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32630:	ldr	r1, [fp, #-8]
   32634:	ldr	r2, [r1, #4]
   32638:	add	r0, r2, r0
   3263c:	str	r0, [r1, #4]
   32640:	b	32644 <__assert_fail@plt+0x211b0>
   32644:	ldr	r0, [fp, #-12]
   32648:	ldr	r1, [fp, #-8]
   3264c:	str	r0, [r1, #24]
   32650:	ldr	r0, [fp, #-20]	; 0xffffffec
   32654:	ldr	r1, [fp, #-8]
   32658:	ldr	r2, [r1, #48]	; 0x30
   3265c:	sub	r0, r2, r0
   32660:	str	r0, [r1, #48]	; 0x30
   32664:	ldr	r0, [fp, #-20]	; 0xffffffec
   32668:	ldr	r1, [fp, #-8]
   3266c:	ldr	r2, [r1, #56]	; 0x38
   32670:	sub	r0, r2, r0
   32674:	str	r0, [r1, #56]	; 0x38
   32678:	ldr	r0, [fp, #-8]
   3267c:	ldr	r0, [r0, #80]	; 0x50
   32680:	cmp	r0, #1
   32684:	ble	326cc <__assert_fail@plt+0x21238>
   32688:	ldr	r0, [fp, #-8]
   3268c:	ldrsb	r0, [r0, #72]	; 0x48
   32690:	cmp	r0, #0
   32694:	beq	326c0 <__assert_fail@plt+0x2122c>
   32698:	ldr	r0, [fp, #-8]
   3269c:	bl	27eac <__assert_fail@plt+0x16a18>
   326a0:	str	r0, [sp, #28]
   326a4:	ldr	r0, [sp, #28]
   326a8:	cmp	r0, #0
   326ac:	beq	326bc <__assert_fail@plt+0x21228>
   326b0:	ldr	r0, [sp, #28]
   326b4:	str	r0, [fp, #-4]
   326b8:	b	32740 <__assert_fail@plt+0x212ac>
   326bc:	b	326c8 <__assert_fail@plt+0x21234>
   326c0:	ldr	r0, [fp, #-8]
   326c4:	bl	28a58 <__assert_fail@plt+0x175c4>
   326c8:	b	32730 <__assert_fail@plt+0x2129c>
   326cc:	ldr	r0, [fp, #-8]
   326d0:	ldrb	r0, [r0, #75]	; 0x4b
   326d4:	cmp	r0, #0
   326d8:	beq	3271c <__assert_fail@plt+0x21288>
   326dc:	ldr	r0, [fp, #-8]
   326e0:	ldrsb	r0, [r0, #72]	; 0x48
   326e4:	cmp	r0, #0
   326e8:	beq	326f8 <__assert_fail@plt+0x21264>
   326ec:	ldr	r0, [fp, #-8]
   326f0:	bl	28954 <__assert_fail@plt+0x174c0>
   326f4:	b	32718 <__assert_fail@plt+0x21284>
   326f8:	ldr	r0, [fp, #-8]
   326fc:	ldr	r0, [r0, #64]	; 0x40
   32700:	movw	r1, #0
   32704:	cmp	r0, r1
   32708:	beq	32714 <__assert_fail@plt+0x21280>
   3270c:	ldr	r0, [fp, #-8]
   32710:	bl	28d98 <__assert_fail@plt+0x17904>
   32714:	b	32718 <__assert_fail@plt+0x21284>
   32718:	b	3272c <__assert_fail@plt+0x21298>
   3271c:	ldr	r0, [fp, #-8]
   32720:	ldr	r0, [r0, #48]	; 0x30
   32724:	ldr	r1, [fp, #-8]
   32728:	str	r0, [r1, #28]
   3272c:	b	32730 <__assert_fail@plt+0x2129c>
   32730:	ldr	r0, [fp, #-8]
   32734:	movw	r1, #0
   32738:	str	r1, [r0, #40]	; 0x28
   3273c:	str	r1, [fp, #-4]
   32740:	ldr	r0, [fp, #-4]
   32744:	mov	sp, fp
   32748:	pop	{fp, pc}
   3274c:	push	{fp, lr}
   32750:	mov	fp, sp
   32754:	sub	sp, sp, #80	; 0x50
   32758:	str	r0, [fp, #-32]	; 0xffffffe0
   3275c:	and	r0, r1, #1
   32760:	strb	r0, [fp, #-33]	; 0xffffffdf
   32764:	str	r2, [sp, #40]	; 0x28
   32768:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3276c:	ldr	r0, [r0, #84]	; 0x54
   32770:	str	r0, [sp, #36]	; 0x24
   32774:	mov	r0, #0
   32778:	str	r0, [sp, #28]
   3277c:	mvn	r1, #0
   32780:	str	r1, [sp, #24]
   32784:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32788:	ldr	r1, [r1, #40]	; 0x28
   3278c:	str	r1, [sp, #20]
   32790:	ldr	r1, [sp, #40]	; 0x28
   32794:	cmp	r1, #0
   32798:	movwne	r1, #1
   3279c:	strb	r1, [sp, #15]
   327a0:	ldr	r1, [sp, #20]
   327a4:	str	r1, [sp, #8]
   327a8:	str	r0, [sp, #32]
   327ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   327b0:	ldr	r1, [sp, #20]
   327b4:	add	r2, sp, #32
   327b8:	str	r2, [fp, #-8]
   327bc:	str	r0, [fp, #-12]
   327c0:	str	r1, [fp, #-16]
   327c4:	ldr	r0, [fp, #-12]
   327c8:	ldr	r0, [r0, #84]	; 0x54
   327cc:	str	r0, [fp, #-20]	; 0xffffffec
   327d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   327d4:	ldr	r0, [r0, #36]	; 0x24
   327d8:	ldrb	r0, [r0, #52]	; 0x34
   327dc:	lsr	r0, r0, #7
   327e0:	and	r0, r0, #255	; 0xff
   327e4:	cmp	r0, #0
   327e8:	beq	328d8 <__assert_fail@plt+0x21444>
   327ec:	ldr	r0, [fp, #-12]
   327f0:	ldr	r1, [fp, #-16]
   327f4:	sub	r1, r1, #1
   327f8:	ldr	r2, [fp, #-12]
   327fc:	ldr	r2, [r2, #88]	; 0x58
   32800:	bl	33608 <__assert_fail@plt+0x22174>
   32804:	str	r0, [fp, #-24]	; 0xffffffe8
   32808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3280c:	and	r0, r0, #1
   32810:	cmp	r0, #0
   32814:	beq	32828 <__assert_fail@plt+0x21394>
   32818:	ldr	r0, [fp, #-20]	; 0xffffffec
   3281c:	ldr	r0, [r0, #40]	; 0x28
   32820:	str	r0, [fp, #-4]
   32824:	b	328e4 <__assert_fail@plt+0x21450>
   32828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3282c:	cmp	r0, #0
   32830:	bne	32844 <__assert_fail@plt+0x213b0>
   32834:	ldr	r0, [fp, #-20]	; 0xffffffec
   32838:	ldr	r0, [r0, #36]	; 0x24
   3283c:	str	r0, [fp, #-4]
   32840:	b	328e4 <__assert_fail@plt+0x21450>
   32844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32848:	and	r0, r0, #4
   3284c:	cmp	r0, #0
   32850:	beq	32874 <__assert_fail@plt+0x213e0>
   32854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32858:	and	r0, r0, #2
   3285c:	cmp	r0, #0
   32860:	beq	32874 <__assert_fail@plt+0x213e0>
   32864:	ldr	r0, [fp, #-20]	; 0xffffffec
   32868:	ldr	r0, [r0, #48]	; 0x30
   3286c:	str	r0, [fp, #-4]
   32870:	b	328e4 <__assert_fail@plt+0x21450>
   32874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32878:	and	r0, r0, #2
   3287c:	cmp	r0, #0
   32880:	beq	32894 <__assert_fail@plt+0x21400>
   32884:	ldr	r0, [fp, #-20]	; 0xffffffec
   32888:	ldr	r0, [r0, #44]	; 0x2c
   3288c:	str	r0, [fp, #-4]
   32890:	b	328e4 <__assert_fail@plt+0x21450>
   32894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32898:	and	r0, r0, #4
   3289c:	cmp	r0, #0
   328a0:	beq	328c8 <__assert_fail@plt+0x21434>
   328a4:	ldr	r0, [fp, #-8]
   328a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   328ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   328b0:	ldr	r2, [r2, #36]	; 0x24
   328b4:	ldr	r2, [r2, #40]	; 0x28
   328b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   328bc:	bl	30dcc <__assert_fail@plt+0x1f938>
   328c0:	str	r0, [fp, #-4]
   328c4:	b	328e4 <__assert_fail@plt+0x21450>
   328c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   328cc:	ldr	r0, [r0, #36]	; 0x24
   328d0:	str	r0, [fp, #-4]
   328d4:	b	328e4 <__assert_fail@plt+0x21450>
   328d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   328dc:	ldr	r0, [r0, #36]	; 0x24
   328e0:	str	r0, [fp, #-4]
   328e4:	ldr	r0, [fp, #-4]
   328e8:	str	r0, [sp, #16]
   328ec:	ldr	r0, [sp, #16]
   328f0:	movw	r1, #0
   328f4:	cmp	r0, r1
   328f8:	bne	32918 <__assert_fail@plt+0x21484>
   328fc:	ldr	r0, [sp, #32]
   32900:	cmp	r0, #12
   32904:	bne	3290c <__assert_fail@plt+0x21478>
   32908:	b	3290c <__assert_fail@plt+0x21478>
   3290c:	mvn	r0, #1
   32910:	str	r0, [fp, #-28]	; 0xffffffe4
   32914:	b	32ccc <__assert_fail@plt+0x21838>
   32918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3291c:	ldr	r0, [r0, #100]	; 0x64
   32920:	movw	r1, #0
   32924:	cmp	r0, r1
   32928:	beq	329dc <__assert_fail@plt+0x21548>
   3292c:	ldr	r0, [sp, #16]
   32930:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32934:	ldr	r1, [r1, #100]	; 0x64
   32938:	ldr	r2, [sp, #20]
   3293c:	add	r1, r1, r2, lsl #2
   32940:	str	r0, [r1]
   32944:	ldr	r0, [sp, #36]	; 0x24
   32948:	ldr	r0, [r0, #76]	; 0x4c
   3294c:	cmp	r0, #0
   32950:	beq	329d8 <__assert_fail@plt+0x21544>
   32954:	movw	r0, #0
   32958:	strb	r0, [sp, #15]
   3295c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32960:	ldr	r1, [sp, #16]
   32964:	add	r1, r1, #4
   32968:	movw	r2, #0
   3296c:	bl	339c4 <__assert_fail@plt+0x22530>
   32970:	str	r0, [sp, #32]
   32974:	ldr	r0, [sp, #32]
   32978:	cmp	r0, #0
   3297c:	beq	3298c <__assert_fail@plt+0x214f8>
   32980:	ldr	r0, [sp, #32]
   32984:	str	r0, [fp, #-28]	; 0xffffffe4
   32988:	b	32ccc <__assert_fail@plt+0x21838>
   3298c:	ldr	r0, [sp, #16]
   32990:	ldrb	r0, [r0, #52]	; 0x34
   32994:	ubfx	r0, r0, #6, #1
   32998:	and	r0, r0, #255	; 0xff
   3299c:	cmp	r0, #0
   329a0:	beq	329d4 <__assert_fail@plt+0x21540>
   329a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   329a8:	ldr	r1, [sp, #16]
   329ac:	add	r1, r1, #4
   329b0:	bl	33ad8 <__assert_fail@plt+0x22644>
   329b4:	str	r0, [sp, #32]
   329b8:	ldr	r0, [sp, #32]
   329bc:	cmp	r0, #0
   329c0:	beq	329d0 <__assert_fail@plt+0x2153c>
   329c4:	ldr	r0, [sp, #32]
   329c8:	str	r0, [fp, #-28]	; 0xffffffe4
   329cc:	b	32ccc <__assert_fail@plt+0x21838>
   329d0:	b	329d4 <__assert_fail@plt+0x21540>
   329d4:	b	329d8 <__assert_fail@plt+0x21544>
   329d8:	b	329dc <__assert_fail@plt+0x21548>
   329dc:	ldr	r0, [sp, #16]
   329e0:	ldrb	r0, [r0, #52]	; 0x34
   329e4:	ubfx	r0, r0, #4, #1
   329e8:	and	r0, r0, #255	; 0xff
   329ec:	cmp	r0, #0
   329f0:	beq	32a54 <__assert_fail@plt+0x215c0>
   329f4:	ldr	r0, [sp, #16]
   329f8:	ldrb	r0, [r0, #52]	; 0x34
   329fc:	lsr	r0, r0, #7
   32a00:	and	r0, r0, #255	; 0xff
   32a04:	cmp	r0, #0
   32a08:	beq	32a24 <__assert_fail@plt+0x21590>
   32a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32a10:	ldr	r1, [sp, #16]
   32a14:	ldr	r2, [sp, #20]
   32a18:	bl	32cd8 <__assert_fail@plt+0x21844>
   32a1c:	cmp	r0, #0
   32a20:	beq	32a50 <__assert_fail@plt+0x215bc>
   32a24:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   32a28:	tst	r0, #1
   32a2c:	bne	32a3c <__assert_fail@plt+0x215a8>
   32a30:	ldr	r0, [sp, #20]
   32a34:	str	r0, [fp, #-28]	; 0xffffffe4
   32a38:	b	32ccc <__assert_fail@plt+0x21838>
   32a3c:	ldr	r0, [sp, #20]
   32a40:	str	r0, [sp, #24]
   32a44:	movw	r0, #1
   32a48:	str	r0, [sp, #28]
   32a4c:	b	32a50 <__assert_fail@plt+0x215bc>
   32a50:	b	32a54 <__assert_fail@plt+0x215c0>
   32a54:	b	32a58 <__assert_fail@plt+0x215c4>
   32a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32a5c:	ldr	r0, [r0, #56]	; 0x38
   32a60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32a64:	ldr	r1, [r1, #40]	; 0x28
   32a68:	cmp	r0, r1
   32a6c:	movw	r0, #0
   32a70:	movle	r0, #1
   32a74:	mvn	r1, #0
   32a78:	eor	r0, r0, r1
   32a7c:	tst	r0, #1
   32a80:	beq	32ca0 <__assert_fail@plt+0x2180c>
   32a84:	ldr	r0, [sp, #16]
   32a88:	str	r0, [sp, #4]
   32a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32a90:	ldr	r0, [r0, #40]	; 0x28
   32a94:	add	r0, r0, #1
   32a98:	str	r0, [sp]
   32a9c:	ldr	r0, [sp]
   32aa0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32aa4:	ldr	r1, [r1, #36]	; 0x24
   32aa8:	cmp	r0, r1
   32aac:	blt	32ac8 <__assert_fail@plt+0x21634>
   32ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32ab4:	ldr	r0, [r0, #36]	; 0x24
   32ab8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32abc:	ldr	r1, [r1, #48]	; 0x30
   32ac0:	cmp	r0, r1
   32ac4:	blt	32af4 <__assert_fail@plt+0x21660>
   32ac8:	ldr	r0, [sp]
   32acc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32ad0:	ldr	r1, [r1, #28]
   32ad4:	cmp	r0, r1
   32ad8:	blt	32b34 <__assert_fail@plt+0x216a0>
   32adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32ae0:	ldr	r0, [r0, #28]
   32ae4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32ae8:	ldr	r1, [r1, #48]	; 0x30
   32aec:	cmp	r0, r1
   32af0:	bge	32b34 <__assert_fail@plt+0x216a0>
   32af4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32af8:	ldr	r1, [sp]
   32afc:	add	r1, r1, #1
   32b00:	bl	34014 <__assert_fail@plt+0x22b80>
   32b04:	str	r0, [sp, #32]
   32b08:	ldr	r0, [sp, #32]
   32b0c:	cmp	r0, #0
   32b10:	beq	32b30 <__assert_fail@plt+0x2169c>
   32b14:	ldr	r0, [sp, #32]
   32b18:	cmp	r0, #12
   32b1c:	bne	32b24 <__assert_fail@plt+0x21690>
   32b20:	b	32b24 <__assert_fail@plt+0x21690>
   32b24:	mvn	r0, #1
   32b28:	str	r0, [fp, #-28]	; 0xffffffe4
   32b2c:	b	32ccc <__assert_fail@plt+0x21838>
   32b30:	b	32b34 <__assert_fail@plt+0x216a0>
   32b34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32b38:	ldr	r2, [sp, #16]
   32b3c:	add	r0, sp, #32
   32b40:	bl	3422c <__assert_fail@plt+0x22d98>
   32b44:	str	r0, [sp, #16]
   32b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b4c:	ldr	r0, [r0, #100]	; 0x64
   32b50:	movw	r1, #0
   32b54:	cmp	r0, r1
   32b58:	beq	32b70 <__assert_fail@plt+0x216dc>
   32b5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32b60:	ldr	r2, [sp, #16]
   32b64:	add	r0, sp, #32
   32b68:	bl	343b0 <__assert_fail@plt+0x22f1c>
   32b6c:	str	r0, [sp, #16]
   32b70:	ldr	r0, [sp, #16]
   32b74:	movw	r1, #0
   32b78:	cmp	r0, r1
   32b7c:	bne	32be8 <__assert_fail@plt+0x21754>
   32b80:	ldr	r0, [sp, #32]
   32b84:	cmp	r0, #0
   32b88:	beq	32b98 <__assert_fail@plt+0x21704>
   32b8c:	mvn	r0, #1
   32b90:	str	r0, [fp, #-28]	; 0xffffffe4
   32b94:	b	32ccc <__assert_fail@plt+0x21838>
   32b98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b9c:	ldr	r0, [r0, #100]	; 0x64
   32ba0:	movw	r1, #0
   32ba4:	cmp	r0, r1
   32ba8:	beq	32be0 <__assert_fail@plt+0x2174c>
   32bac:	ldr	r0, [sp, #28]
   32bb0:	cmp	r0, #0
   32bb4:	beq	32bc4 <__assert_fail@plt+0x21730>
   32bb8:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   32bbc:	tst	r0, #1
   32bc0:	beq	32be0 <__assert_fail@plt+0x2174c>
   32bc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32bc8:	add	r0, sp, #32
   32bcc:	bl	3462c <__assert_fail@plt+0x23198>
   32bd0:	str	r0, [sp, #16]
   32bd4:	movw	r1, #0
   32bd8:	cmp	r0, r1
   32bdc:	bne	32be4 <__assert_fail@plt+0x21750>
   32be0:	b	32ca0 <__assert_fail@plt+0x2180c>
   32be4:	b	32be8 <__assert_fail@plt+0x21754>
   32be8:	ldrb	r0, [sp, #15]
   32bec:	tst	r0, #1
   32bf0:	beq	32c1c <__assert_fail@plt+0x21788>
   32bf4:	ldr	r0, [sp, #4]
   32bf8:	ldr	r1, [sp, #16]
   32bfc:	cmp	r0, r1
   32c00:	bne	32c10 <__assert_fail@plt+0x2177c>
   32c04:	ldr	r0, [sp]
   32c08:	str	r0, [sp, #8]
   32c0c:	b	32c18 <__assert_fail@plt+0x21784>
   32c10:	movw	r0, #0
   32c14:	strb	r0, [sp, #15]
   32c18:	b	32c1c <__assert_fail@plt+0x21788>
   32c1c:	ldr	r0, [sp, #16]
   32c20:	ldrb	r0, [r0, #52]	; 0x34
   32c24:	ubfx	r0, r0, #4, #1
   32c28:	and	r0, r0, #255	; 0xff
   32c2c:	cmp	r0, #0
   32c30:	beq	32c9c <__assert_fail@plt+0x21808>
   32c34:	ldr	r0, [sp, #16]
   32c38:	ldrb	r0, [r0, #52]	; 0x34
   32c3c:	lsr	r0, r0, #7
   32c40:	and	r0, r0, #255	; 0xff
   32c44:	cmp	r0, #0
   32c48:	beq	32c68 <__assert_fail@plt+0x217d4>
   32c4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c50:	ldr	r1, [sp, #16]
   32c54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32c58:	ldr	r2, [r2, #40]	; 0x28
   32c5c:	bl	32cd8 <__assert_fail@plt+0x21844>
   32c60:	cmp	r0, #0
   32c64:	beq	32c98 <__assert_fail@plt+0x21804>
   32c68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c6c:	ldr	r0, [r0, #40]	; 0x28
   32c70:	str	r0, [sp, #24]
   32c74:	movw	r0, #1
   32c78:	str	r0, [sp, #28]
   32c7c:	movw	r0, #0
   32c80:	str	r0, [sp, #40]	; 0x28
   32c84:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   32c88:	tst	r0, #1
   32c8c:	bne	32c94 <__assert_fail@plt+0x21800>
   32c90:	b	32ca0 <__assert_fail@plt+0x2180c>
   32c94:	b	32c98 <__assert_fail@plt+0x21804>
   32c98:	b	32c9c <__assert_fail@plt+0x21808>
   32c9c:	b	32a58 <__assert_fail@plt+0x215c4>
   32ca0:	ldr	r0, [sp, #40]	; 0x28
   32ca4:	movw	r1, #0
   32ca8:	cmp	r0, r1
   32cac:	beq	32cc4 <__assert_fail@plt+0x21830>
   32cb0:	ldr	r0, [sp, #8]
   32cb4:	ldr	r1, [sp, #40]	; 0x28
   32cb8:	ldr	r2, [r1]
   32cbc:	add	r0, r2, r0
   32cc0:	str	r0, [r1]
   32cc4:	ldr	r0, [sp, #24]
   32cc8:	str	r0, [fp, #-28]	; 0xffffffe4
   32ccc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32cd0:	mov	sp, fp
   32cd4:	pop	{fp, pc}
   32cd8:	push	{fp, lr}
   32cdc:	mov	fp, sp
   32ce0:	sub	sp, sp, #24
   32ce4:	str	r0, [fp, #-8]
   32ce8:	str	r1, [sp, #12]
   32cec:	str	r2, [sp, #8]
   32cf0:	ldr	r0, [sp, #12]
   32cf4:	ldrb	r0, [r0, #52]	; 0x34
   32cf8:	ubfx	r0, r0, #4, #1
   32cfc:	and	r0, r0, #255	; 0xff
   32d00:	cmp	r0, #0
   32d04:	beq	32d0c <__assert_fail@plt+0x21878>
   32d08:	b	32d0c <__assert_fail@plt+0x21878>
   32d0c:	ldr	r0, [fp, #-8]
   32d10:	ldr	r1, [sp, #8]
   32d14:	ldr	r2, [fp, #-8]
   32d18:	ldr	r2, [r2, #88]	; 0x58
   32d1c:	bl	33608 <__assert_fail@plt+0x22174>
   32d20:	str	r0, [sp]
   32d24:	movw	r0, #0
   32d28:	str	r0, [sp, #4]
   32d2c:	ldr	r0, [sp, #4]
   32d30:	ldr	r1, [sp, #12]
   32d34:	ldr	r1, [r1, #8]
   32d38:	cmp	r0, r1
   32d3c:	bge	32d9c <__assert_fail@plt+0x21908>
   32d40:	ldr	r0, [fp, #-8]
   32d44:	ldr	r0, [r0, #84]	; 0x54
   32d48:	ldr	r1, [sp, #12]
   32d4c:	ldr	r1, [r1, #12]
   32d50:	ldr	r2, [sp, #4]
   32d54:	add	r1, r1, r2, lsl #2
   32d58:	ldr	r1, [r1]
   32d5c:	ldr	r2, [sp]
   32d60:	bl	38ab0 <__assert_fail@plt+0x2761c>
   32d64:	tst	r0, #1
   32d68:	beq	32d88 <__assert_fail@plt+0x218f4>
   32d6c:	ldr	r0, [sp, #12]
   32d70:	ldr	r0, [r0, #12]
   32d74:	ldr	r1, [sp, #4]
   32d78:	add	r0, r0, r1, lsl #2
   32d7c:	ldr	r0, [r0]
   32d80:	str	r0, [fp, #-4]
   32d84:	b	32da4 <__assert_fail@plt+0x21910>
   32d88:	b	32d8c <__assert_fail@plt+0x218f8>
   32d8c:	ldr	r0, [sp, #4]
   32d90:	add	r0, r0, #1
   32d94:	str	r0, [sp, #4]
   32d98:	b	32d2c <__assert_fail@plt+0x21898>
   32d9c:	movw	r0, #0
   32da0:	str	r0, [fp, #-4]
   32da4:	ldr	r0, [fp, #-4]
   32da8:	mov	sp, fp
   32dac:	pop	{fp, pc}
   32db0:	push	{fp, lr}
   32db4:	mov	fp, sp
   32db8:	sub	sp, sp, #80	; 0x50
   32dbc:	str	r0, [fp, #-8]
   32dc0:	ldr	r0, [fp, #-8]
   32dc4:	ldr	r0, [r0, #84]	; 0x54
   32dc8:	str	r0, [fp, #-12]
   32dcc:	movw	r0, #0
   32dd0:	str	r0, [fp, #-32]	; 0xffffffe0
   32dd4:	ldr	r1, [fp, #-8]
   32dd8:	ldr	r1, [r1, #100]	; 0x64
   32ddc:	cmp	r1, r0
   32de0:	beq	32de8 <__assert_fail@plt+0x21954>
   32de4:	b	32de8 <__assert_fail@plt+0x21954>
   32de8:	ldr	r0, [pc, #776]	; 330f8 <__assert_fail@plt+0x21c64>
   32dec:	ldr	r1, [fp, #-8]
   32df0:	ldr	r1, [r1, #92]	; 0x5c
   32df4:	str	r1, [fp, #-20]	; 0xffffffec
   32df8:	ldr	r1, [fp, #-8]
   32dfc:	ldr	r1, [r1, #96]	; 0x60
   32e00:	str	r1, [fp, #-16]
   32e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   32e08:	cmp	r0, r1
   32e0c:	bhi	32e1c <__assert_fail@plt+0x21988>
   32e10:	movw	r0, #12
   32e14:	str	r0, [fp, #-4]
   32e18:	b	330ec <__assert_fail@plt+0x21c58>
   32e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32e20:	add	r0, r0, #1
   32e24:	lsl	r0, r0, #2
   32e28:	bl	3f908 <__assert_fail@plt+0x2e474>
   32e2c:	str	r0, [fp, #-28]	; 0xffffffe4
   32e30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32e34:	movw	r1, #0
   32e38:	cmp	r0, r1
   32e3c:	bne	32e4c <__assert_fail@plt+0x219b8>
   32e40:	movw	r0, #12
   32e44:	str	r0, [fp, #-24]	; 0xffffffe8
   32e48:	b	330d4 <__assert_fail@plt+0x21c40>
   32e4c:	ldr	r0, [fp, #-12]
   32e50:	ldr	r0, [r0, #76]	; 0x4c
   32e54:	cmp	r0, #0
   32e58:	beq	33024 <__assert_fail@plt+0x21b90>
   32e5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32e60:	add	r0, r0, #1
   32e64:	lsl	r0, r0, #2
   32e68:	bl	3f908 <__assert_fail@plt+0x2e474>
   32e6c:	str	r0, [fp, #-32]	; 0xffffffe0
   32e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32e74:	movw	r1, #0
   32e78:	cmp	r0, r1
   32e7c:	bne	32e8c <__assert_fail@plt+0x219f8>
   32e80:	movw	r0, #12
   32e84:	str	r0, [fp, #-24]	; 0xffffffe8
   32e88:	b	330d4 <__assert_fail@plt+0x21c40>
   32e8c:	b	32e90 <__assert_fail@plt+0x219fc>
   32e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   32e98:	add	r1, r1, #1
   32e9c:	lsl	r2, r1, #2
   32ea0:	movw	r1, #0
   32ea4:	and	r1, r1, #255	; 0xff
   32ea8:	bl	113d4 <memset@plt>
   32eac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32eb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32eb4:	ldr	r3, [fp, #-16]
   32eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   32ebc:	add	ip, sp, #20
   32ec0:	str	r0, [sp, #16]
   32ec4:	mov	r0, ip
   32ec8:	ldr	ip, [sp, #16]
   32ecc:	str	ip, [sp]
   32ed0:	bl	38be0 <__assert_fail@plt+0x2774c>
   32ed4:	ldr	r0, [fp, #-8]
   32ed8:	add	r1, sp, #20
   32edc:	bl	38c54 <__assert_fail@plt+0x277c0>
   32ee0:	str	r0, [fp, #-24]	; 0xffffffe8
   32ee4:	ldr	r0, [sp, #44]	; 0x2c
   32ee8:	bl	1388c <__assert_fail@plt+0x23f8>
   32eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ef0:	cmp	r0, #0
   32ef4:	beq	32efc <__assert_fail@plt+0x21a68>
   32ef8:	b	330d4 <__assert_fail@plt+0x21c40>
   32efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32f00:	ldr	r0, [r0]
   32f04:	movw	r1, #0
   32f08:	cmp	r0, r1
   32f0c:	bne	32f24 <__assert_fail@plt+0x21a90>
   32f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32f14:	ldr	r0, [r0]
   32f18:	movw	r1, #0
   32f1c:	cmp	r0, r1
   32f20:	beq	32f28 <__assert_fail@plt+0x21a94>
   32f24:	b	32fe4 <__assert_fail@plt+0x21b50>
   32f28:	b	32f2c <__assert_fail@plt+0x21a98>
   32f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32f30:	mvn	r1, #0
   32f34:	add	r0, r0, r1
   32f38:	str	r0, [fp, #-20]	; 0xffffffec
   32f3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32f40:	cmp	r0, #0
   32f44:	bge	32f54 <__assert_fail@plt+0x21ac0>
   32f48:	movw	r0, #1
   32f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   32f50:	b	330d4 <__assert_fail@plt+0x21c40>
   32f54:	b	32f58 <__assert_fail@plt+0x21ac4>
   32f58:	ldr	r0, [fp, #-8]
   32f5c:	ldr	r0, [r0, #100]	; 0x64
   32f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   32f64:	add	r0, r0, r1, lsl #2
   32f68:	ldr	r0, [r0]
   32f6c:	movw	r1, #0
   32f70:	cmp	r0, r1
   32f74:	movw	r0, #1
   32f78:	str	r0, [sp, #12]
   32f7c:	beq	32fb4 <__assert_fail@plt+0x21b20>
   32f80:	ldr	r0, [fp, #-8]
   32f84:	ldr	r0, [r0, #100]	; 0x64
   32f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   32f8c:	ldr	r0, [r0, r1, lsl #2]
   32f90:	ldrb	r0, [r0, #52]	; 0x34
   32f94:	ubfx	r0, r0, #4, #1
   32f98:	and	r0, r0, #255	; 0xff
   32f9c:	cmp	r0, #0
   32fa0:	movw	r0, #0
   32fa4:	movne	r0, #1
   32fa8:	mvn	r1, #0
   32fac:	eor	r0, r0, r1
   32fb0:	str	r0, [sp, #12]
   32fb4:	ldr	r0, [sp, #12]
   32fb8:	tst	r0, #1
   32fbc:	bne	32f2c <__assert_fail@plt+0x21a98>
   32fc0:	ldr	r0, [fp, #-8]
   32fc4:	ldr	r1, [r0, #100]	; 0x64
   32fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   32fcc:	add	r1, r1, r2, lsl #2
   32fd0:	ldr	r1, [r1]
   32fd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   32fd8:	bl	32cd8 <__assert_fail@plt+0x21844>
   32fdc:	str	r0, [fp, #-16]
   32fe0:	b	32e90 <__assert_fail@plt+0x219fc>
   32fe4:	ldr	r0, [fp, #-12]
   32fe8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32fec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32ff4:	add	r3, r3, #1
   32ff8:	bl	38e4c <__assert_fail@plt+0x279b8>
   32ffc:	str	r0, [fp, #-24]	; 0xffffffe8
   33000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33004:	bl	1388c <__assert_fail@plt+0x23f8>
   33008:	movw	r0, #0
   3300c:	str	r0, [fp, #-32]	; 0xffffffe0
   33010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33014:	cmp	r0, #0
   33018:	beq	33020 <__assert_fail@plt+0x21b8c>
   3301c:	b	330d4 <__assert_fail@plt+0x21c40>
   33020:	b	33098 <__assert_fail@plt+0x21c04>
   33024:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33028:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3302c:	ldr	r3, [fp, #-16]
   33030:	ldr	r0, [fp, #-20]	; 0xffffffec
   33034:	add	ip, sp, #20
   33038:	str	r0, [sp, #8]
   3303c:	mov	r0, ip
   33040:	ldr	ip, [sp, #8]
   33044:	str	ip, [sp]
   33048:	bl	38be0 <__assert_fail@plt+0x2774c>
   3304c:	ldr	r0, [fp, #-8]
   33050:	add	r1, sp, #20
   33054:	bl	38c54 <__assert_fail@plt+0x277c0>
   33058:	str	r0, [fp, #-24]	; 0xffffffe8
   3305c:	ldr	r0, [sp, #44]	; 0x2c
   33060:	bl	1388c <__assert_fail@plt+0x23f8>
   33064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33068:	cmp	r0, #0
   3306c:	beq	33074 <__assert_fail@plt+0x21be0>
   33070:	b	330d4 <__assert_fail@plt+0x21c40>
   33074:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33078:	ldr	r0, [r0]
   3307c:	movw	r1, #0
   33080:	cmp	r0, r1
   33084:	bne	33094 <__assert_fail@plt+0x21c00>
   33088:	movw	r0, #1
   3308c:	str	r0, [fp, #-24]	; 0xffffffe8
   33090:	b	330d4 <__assert_fail@plt+0x21c40>
   33094:	b	33098 <__assert_fail@plt+0x21c04>
   33098:	ldr	r0, [fp, #-8]
   3309c:	ldr	r0, [r0, #100]	; 0x64
   330a0:	bl	1388c <__assert_fail@plt+0x23f8>
   330a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   330a8:	ldr	r1, [fp, #-8]
   330ac:	str	r0, [r1, #100]	; 0x64
   330b0:	movw	r0, #0
   330b4:	str	r0, [fp, #-28]	; 0xffffffe4
   330b8:	ldr	r1, [fp, #-16]
   330bc:	ldr	r2, [fp, #-8]
   330c0:	str	r1, [r2, #96]	; 0x60
   330c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   330c8:	ldr	r2, [fp, #-8]
   330cc:	str	r1, [r2, #92]	; 0x5c
   330d0:	str	r0, [fp, #-24]	; 0xffffffe8
   330d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   330d8:	bl	1388c <__assert_fail@plt+0x23f8>
   330dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   330e0:	bl	1388c <__assert_fail@plt+0x23f8>
   330e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   330e8:	str	r0, [fp, #-4]
   330ec:	ldr	r0, [fp, #-4]
   330f0:	mov	sp, fp
   330f4:	pop	{fp, pc}
   330f8:	svccc	0x00ffffff
   330fc:	push	{fp, lr}
   33100:	mov	fp, sp
   33104:	sub	sp, sp, #24
   33108:	str	r0, [fp, #-4]
   3310c:	movw	r0, #0
   33110:	str	r0, [fp, #-8]
   33114:	ldr	r0, [fp, #-8]
   33118:	ldr	r1, [fp, #-4]
   3311c:	ldr	r1, [r1, #124]	; 0x7c
   33120:	cmp	r0, r1
   33124:	bge	331ec <__assert_fail@plt+0x21d58>
   33128:	ldr	r0, [fp, #-4]
   3312c:	ldr	r0, [r0, #132]	; 0x84
   33130:	ldr	r1, [fp, #-8]
   33134:	add	r0, r0, r1, lsl #2
   33138:	ldr	r0, [r0]
   3313c:	str	r0, [sp, #8]
   33140:	movw	r0, #0
   33144:	str	r0, [sp, #12]
   33148:	ldr	r0, [sp, #12]
   3314c:	ldr	r1, [sp, #8]
   33150:	ldr	r1, [r1, #16]
   33154:	cmp	r0, r1
   33158:	bge	33198 <__assert_fail@plt+0x21d04>
   3315c:	ldr	r0, [sp, #8]
   33160:	ldr	r0, [r0, #20]
   33164:	ldr	r1, [sp, #12]
   33168:	add	r0, r0, r1, lsl #2
   3316c:	ldr	r0, [r0]
   33170:	str	r0, [sp, #4]
   33174:	ldr	r0, [sp, #4]
   33178:	ldr	r0, [r0, #16]
   3317c:	bl	1388c <__assert_fail@plt+0x23f8>
   33180:	ldr	r0, [sp, #4]
   33184:	bl	1388c <__assert_fail@plt+0x23f8>
   33188:	ldr	r0, [sp, #12]
   3318c:	add	r0, r0, #1
   33190:	str	r0, [sp, #12]
   33194:	b	33148 <__assert_fail@plt+0x21cb4>
   33198:	ldr	r0, [sp, #8]
   3319c:	ldr	r0, [r0, #20]
   331a0:	bl	1388c <__assert_fail@plt+0x23f8>
   331a4:	ldr	r0, [sp, #8]
   331a8:	ldr	r0, [r0, #8]
   331ac:	movw	r1, #0
   331b0:	cmp	r0, r1
   331b4:	beq	331d4 <__assert_fail@plt+0x21d40>
   331b8:	ldr	r0, [sp, #8]
   331bc:	ldr	r0, [r0, #8]
   331c0:	ldr	r0, [r0, #8]
   331c4:	bl	1388c <__assert_fail@plt+0x23f8>
   331c8:	ldr	r0, [sp, #8]
   331cc:	ldr	r0, [r0, #8]
   331d0:	bl	1388c <__assert_fail@plt+0x23f8>
   331d4:	ldr	r0, [sp, #8]
   331d8:	bl	1388c <__assert_fail@plt+0x23f8>
   331dc:	ldr	r0, [fp, #-8]
   331e0:	add	r0, r0, #1
   331e4:	str	r0, [fp, #-8]
   331e8:	b	33114 <__assert_fail@plt+0x21c80>
   331ec:	ldr	r0, [fp, #-4]
   331f0:	movw	r1, #0
   331f4:	str	r1, [r0, #124]	; 0x7c
   331f8:	ldr	r0, [fp, #-4]
   331fc:	str	r1, [r0, #108]	; 0x6c
   33200:	mov	sp, fp
   33204:	pop	{fp, pc}
   33208:	push	{r4, sl, fp, lr}
   3320c:	add	fp, sp, #8
   33210:	sub	sp, sp, #240	; 0xf0
   33214:	ldr	ip, [fp, #8]
   33218:	str	r0, [fp, #-16]
   3321c:	str	r1, [fp, #-20]	; 0xffffffec
   33220:	str	r2, [fp, #-24]	; 0xffffffe8
   33224:	str	r3, [fp, #-28]	; 0xffffffe4
   33228:	and	r0, ip, #1
   3322c:	strb	r0, [fp, #-29]	; 0xffffffe3
   33230:	ldr	r0, [fp, #-16]
   33234:	ldr	r0, [r0]
   33238:	str	r0, [fp, #-36]	; 0xffffffdc
   3323c:	movw	r0, #22324	; 0x5734
   33240:	movt	r0, #4
   33244:	ldr	r1, [r0]
   33248:	str	r1, [fp, #-72]	; 0xffffffb8
   3324c:	ldr	r1, [r0, #4]
   33250:	str	r1, [fp, #-68]	; 0xffffffbc
   33254:	ldr	r0, [r0, #8]
   33258:	str	r0, [fp, #-64]	; 0xffffffc0
   3325c:	add	r0, sp, #36	; 0x24
   33260:	bl	3aa58 <__assert_fail@plt+0x295c4>
   33264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33268:	cmp	r0, #1
   3326c:	bls	33274 <__assert_fail@plt+0x21de0>
   33270:	b	33274 <__assert_fail@plt+0x21de0>
   33274:	ldr	r0, [fp, #-20]	; 0xffffffec
   33278:	ldr	r0, [r0, #100]	; 0x64
   3327c:	movw	r1, #0
   33280:	cmp	r0, r1
   33284:	beq	3328c <__assert_fail@plt+0x21df8>
   33288:	b	3328c <__assert_fail@plt+0x21df8>
   3328c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   33290:	tst	r0, #1
   33294:	beq	332e0 <__assert_fail@plt+0x21e4c>
   33298:	sub	r0, fp, #72	; 0x48
   3329c:	str	r0, [fp, #-60]	; 0xffffffc4
   332a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   332a4:	ldr	r0, [r0, #4]
   332a8:	movw	r1, #24
   332ac:	mul	r0, r0, r1
   332b0:	bl	3f908 <__assert_fail@plt+0x2e474>
   332b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   332b8:	str	r0, [r1, #8]
   332bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   332c0:	ldr	r0, [r0, #8]
   332c4:	movw	r1, #0
   332c8:	cmp	r0, r1
   332cc:	bne	332dc <__assert_fail@plt+0x21e48>
   332d0:	movw	r0, #12
   332d4:	str	r0, [fp, #-12]
   332d8:	b	335c4 <__assert_fail@plt+0x22130>
   332dc:	b	332e8 <__assert_fail@plt+0x21e54>
   332e0:	movw	r0, #0
   332e4:	str	r0, [fp, #-60]	; 0xffffffc4
   332e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   332ec:	ldr	r0, [r0, #72]	; 0x48
   332f0:	str	r0, [fp, #-44]	; 0xffffffd4
   332f4:	sub	r0, fp, #56	; 0x38
   332f8:	movw	r1, #0
   332fc:	and	r1, r1, #255	; 0xff
   33300:	movw	r2, #12
   33304:	bl	113d4 <memset@plt>
   33308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3330c:	add	r0, sp, #36	; 0x24
   33310:	bl	3aa90 <__assert_fail@plt+0x295fc>
   33314:	tst	r0, #1
   33318:	bne	33338 <__assert_fail@plt+0x21ea4>
   3331c:	add	r0, sp, #36	; 0x24
   33320:	bl	3ab50 <__assert_fail@plt+0x296bc>
   33324:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33328:	bl	3ab8c <__assert_fail@plt+0x296f8>
   3332c:	movw	r1, #12
   33330:	str	r1, [fp, #-12]
   33334:	b	335c4 <__assert_fail@plt+0x22130>
   33338:	add	r0, sp, #36	; 0x24
   3333c:	bl	3ac30 <__assert_fail@plt+0x2979c>
   33340:	str	r0, [sp, #32]
   33344:	ldr	r0, [sp, #32]
   33348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3334c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33350:	lsl	r2, r2, #3
   33354:	bl	11248 <memcpy@plt>
   33358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3335c:	ldr	r0, [r0]
   33360:	str	r0, [fp, #-40]	; 0xffffffd8
   33364:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3336c:	ldr	r1, [r1, #4]
   33370:	cmp	r0, r1
   33374:	bgt	335a8 <__assert_fail@plt+0x22114>
   33378:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3337c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33380:	ldr	r2, [sp, #32]
   33384:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33388:	ldr	ip, [fp, #-40]	; 0xffffffd8
   3338c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   33390:	str	ip, [sp]
   33394:	str	lr, [sp, #4]
   33398:	bl	3ac48 <__assert_fail@plt+0x297b4>
   3339c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   333a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   333a4:	ldr	r1, [r1, #4]
   333a8:	cmp	r0, r1
   333ac:	bne	333c4 <__assert_fail@plt+0x21f30>
   333b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   333b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   333b8:	ldr	r1, [r1, #96]	; 0x60
   333bc:	cmp	r0, r1
   333c0:	beq	333e8 <__assert_fail@plt+0x21f54>
   333c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   333c8:	movw	r1, #0
   333cc:	cmp	r0, r1
   333d0:	beq	334c8 <__assert_fail@plt+0x22034>
   333d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   333d8:	sub	r0, fp, #56	; 0x38
   333dc:	bl	30cdc <__assert_fail@plt+0x1f848>
   333e0:	cmp	r0, #0
   333e4:	beq	334c8 <__assert_fail@plt+0x22034>
   333e8:	mvn	r0, #0
   333ec:	str	r0, [fp, #-44]	; 0xffffffd4
   333f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   333f4:	movw	r1, #0
   333f8:	cmp	r0, r1
   333fc:	beq	33498 <__assert_fail@plt+0x22004>
   33400:	movw	r0, #0
   33404:	str	r0, [sp, #28]
   33408:	ldr	r0, [sp, #28]
   3340c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33410:	cmp	r0, r1
   33414:	bcs	33494 <__assert_fail@plt+0x22000>
   33418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3341c:	ldr	r1, [sp, #28]
   33420:	add	r0, r0, r1, lsl #3
   33424:	ldr	r0, [r0]
   33428:	cmn	r0, #1
   3342c:	ble	33480 <__assert_fail@plt+0x21fec>
   33430:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33434:	ldr	r1, [sp, #28]
   33438:	add	r0, r0, r1, lsl #3
   3343c:	ldr	r0, [r0, #4]
   33440:	cmn	r0, #1
   33444:	bne	33480 <__assert_fail@plt+0x21fec>
   33448:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3344c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33454:	ldr	r1, [sp, #32]
   33458:	sub	ip, fp, #40	; 0x28
   3345c:	str	r1, [sp, #24]
   33460:	mov	r1, ip
   33464:	ldr	ip, [sp, #24]
   33468:	str	ip, [sp]
   3346c:	sub	lr, fp, #56	; 0x38
   33470:	str	lr, [sp, #4]
   33474:	bl	3ade8 <__assert_fail@plt+0x29954>
   33478:	str	r0, [fp, #-44]	; 0xffffffd4
   3347c:	b	33494 <__assert_fail@plt+0x22000>
   33480:	b	33484 <__assert_fail@plt+0x21ff0>
   33484:	ldr	r0, [sp, #28]
   33488:	add	r0, r0, #1
   3348c:	str	r0, [sp, #28]
   33490:	b	33408 <__assert_fail@plt+0x21f74>
   33494:	b	33498 <__assert_fail@plt+0x22004>
   33498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3349c:	cmp	r0, #0
   334a0:	bge	334c4 <__assert_fail@plt+0x22030>
   334a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   334a8:	bl	1388c <__assert_fail@plt+0x23f8>
   334ac:	add	r0, sp, #36	; 0x24
   334b0:	bl	3ab50 <__assert_fail@plt+0x296bc>
   334b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   334b8:	bl	3ab8c <__assert_fail@plt+0x296f8>
   334bc:	str	r0, [fp, #-12]
   334c0:	b	335c4 <__assert_fail@plt+0x22130>
   334c4:	b	334c8 <__assert_fail@plt+0x22034>
   334c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   334cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   334d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   334d4:	ldr	r3, [sp, #32]
   334d8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   334dc:	ldr	lr, [fp, #-60]	; 0xffffffc4
   334e0:	sub	r4, fp, #40	; 0x28
   334e4:	str	r4, [sp]
   334e8:	str	ip, [sp, #4]
   334ec:	sub	ip, fp, #56	; 0x38
   334f0:	str	ip, [sp, #8]
   334f4:	str	lr, [sp, #12]
   334f8:	bl	3af80 <__assert_fail@plt+0x29aec>
   334fc:	str	r0, [fp, #-44]	; 0xffffffd4
   33500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33504:	cmp	r0, #0
   33508:	bge	335a4 <__assert_fail@plt+0x22110>
   3350c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33510:	cmn	r0, #2
   33514:	bne	3353c <__assert_fail@plt+0x220a8>
   33518:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3351c:	bl	1388c <__assert_fail@plt+0x23f8>
   33520:	add	r0, sp, #36	; 0x24
   33524:	bl	3ab50 <__assert_fail@plt+0x296bc>
   33528:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3352c:	bl	3ab8c <__assert_fail@plt+0x296f8>
   33530:	movw	r1, #12
   33534:	str	r1, [fp, #-12]
   33538:	b	335c4 <__assert_fail@plt+0x22130>
   3353c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33548:	ldr	r1, [sp, #32]
   3354c:	sub	ip, fp, #40	; 0x28
   33550:	str	r1, [sp, #20]
   33554:	mov	r1, ip
   33558:	ldr	ip, [sp, #20]
   3355c:	str	ip, [sp]
   33560:	sub	lr, fp, #56	; 0x38
   33564:	str	lr, [sp, #4]
   33568:	bl	3ade8 <__assert_fail@plt+0x29954>
   3356c:	str	r0, [fp, #-44]	; 0xffffffd4
   33570:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33574:	cmp	r0, #0
   33578:	bge	335a0 <__assert_fail@plt+0x2210c>
   3357c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33580:	bl	1388c <__assert_fail@plt+0x23f8>
   33584:	add	r0, sp, #36	; 0x24
   33588:	bl	3ab50 <__assert_fail@plt+0x296bc>
   3358c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   33590:	bl	3ab8c <__assert_fail@plt+0x296f8>
   33594:	movw	r1, #1
   33598:	str	r1, [fp, #-12]
   3359c:	b	335c4 <__assert_fail@plt+0x22130>
   335a0:	b	335a4 <__assert_fail@plt+0x22110>
   335a4:	b	33364 <__assert_fail@plt+0x21ed0>
   335a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   335ac:	bl	1388c <__assert_fail@plt+0x23f8>
   335b0:	add	r0, sp, #36	; 0x24
   335b4:	bl	3ab50 <__assert_fail@plt+0x296bc>
   335b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   335bc:	bl	3ab8c <__assert_fail@plt+0x296f8>
   335c0:	str	r0, [fp, #-12]
   335c4:	ldr	r0, [fp, #-12]
   335c8:	sub	sp, fp, #8
   335cc:	pop	{r4, sl, fp, pc}
   335d0:	push	{fp, lr}
   335d4:	mov	fp, sp
   335d8:	sub	sp, sp, #8
   335dc:	str	r0, [sp, #4]
   335e0:	ldr	r0, [sp, #4]
   335e4:	bl	330fc <__assert_fail@plt+0x21c68>
   335e8:	ldr	r0, [sp, #4]
   335ec:	ldr	r0, [r0, #132]	; 0x84
   335f0:	bl	1388c <__assert_fail@plt+0x23f8>
   335f4:	ldr	r0, [sp, #4]
   335f8:	ldr	r0, [r0, #116]	; 0x74
   335fc:	bl	1388c <__assert_fail@plt+0x23f8>
   33600:	mov	sp, fp
   33604:	pop	{fp, pc}
   33608:	push	{fp, lr}
   3360c:	mov	fp, sp
   33610:	sub	sp, sp, #40	; 0x28
   33614:	str	r0, [fp, #-8]
   33618:	str	r1, [fp, #-12]
   3361c:	str	r2, [fp, #-16]
   33620:	ldr	r0, [fp, #-12]
   33624:	cmp	r0, #0
   33628:	bge	3363c <__assert_fail@plt+0x221a8>
   3362c:	ldr	r0, [fp, #-8]
   33630:	ldr	r0, [r0, #60]	; 0x3c
   33634:	str	r0, [fp, #-4]
   33638:	b	337fc <__assert_fail@plt+0x22368>
   3363c:	ldr	r0, [fp, #-12]
   33640:	ldr	r1, [fp, #-8]
   33644:	ldr	r1, [r1, #48]	; 0x30
   33648:	cmp	r0, r1
   3364c:	bne	33678 <__assert_fail@plt+0x221e4>
   33650:	ldr	r0, [fp, #-16]
   33654:	and	r0, r0, #2
   33658:	cmp	r0, #0
   3365c:	movw	r0, #0
   33660:	movne	r0, #1
   33664:	tst	r0, #1
   33668:	movw	r0, #8
   3366c:	moveq	r0, #10
   33670:	str	r0, [fp, #-4]
   33674:	b	337fc <__assert_fail@plt+0x22368>
   33678:	ldr	r0, [fp, #-8]
   3367c:	ldr	r0, [r0, #80]	; 0x50
   33680:	cmp	r0, #1
   33684:	ble	33780 <__assert_fail@plt+0x222ec>
   33688:	ldr	r0, [fp, #-12]
   3368c:	str	r0, [sp, #12]
   33690:	ldr	r0, [fp, #-8]
   33694:	ldr	r0, [r0, #8]
   33698:	ldr	r1, [sp, #12]
   3369c:	add	r0, r0, r1, lsl #2
   336a0:	ldr	r0, [r0]
   336a4:	cmn	r0, #1
   336a8:	bne	336ec <__assert_fail@plt+0x22258>
   336ac:	ldr	r0, [sp, #12]
   336b0:	cmp	r0, #0
   336b4:	blt	336bc <__assert_fail@plt+0x22228>
   336b8:	b	336bc <__assert_fail@plt+0x22228>
   336bc:	ldr	r0, [sp, #12]
   336c0:	mvn	r1, #0
   336c4:	add	r0, r0, r1
   336c8:	str	r0, [sp, #12]
   336cc:	ldr	r0, [sp, #12]
   336d0:	cmp	r0, #0
   336d4:	bge	336e8 <__assert_fail@plt+0x22254>
   336d8:	ldr	r0, [fp, #-8]
   336dc:	ldr	r0, [r0, #60]	; 0x3c
   336e0:	str	r0, [fp, #-4]
   336e4:	b	337fc <__assert_fail@plt+0x22368>
   336e8:	b	33690 <__assert_fail@plt+0x221fc>
   336ec:	ldr	r0, [fp, #-8]
   336f0:	ldr	r0, [r0, #8]
   336f4:	ldr	r1, [sp, #12]
   336f8:	add	r0, r0, r1, lsl #2
   336fc:	ldr	r0, [r0]
   33700:	str	r0, [sp, #16]
   33704:	ldr	r0, [fp, #-8]
   33708:	ldrb	r0, [r0, #78]	; 0x4e
   3370c:	cmp	r0, #0
   33710:	beq	3373c <__assert_fail@plt+0x222a8>
   33714:	ldr	r0, [sp, #16]
   33718:	bl	113bc <iswalnum@plt>
   3371c:	cmp	r0, #0
   33720:	bne	33730 <__assert_fail@plt+0x2229c>
   33724:	ldr	r0, [sp, #16]
   33728:	cmp	r0, #95	; 0x5f
   3372c:	bne	3373c <__assert_fail@plt+0x222a8>
   33730:	movw	r0, #1
   33734:	str	r0, [fp, #-4]
   33738:	b	337fc <__assert_fail@plt+0x22368>
   3373c:	ldr	r0, [sp, #16]
   33740:	cmp	r0, #10
   33744:	movw	r0, #0
   33748:	str	r0, [sp, #8]
   3374c:	bne	33768 <__assert_fail@plt+0x222d4>
   33750:	ldr	r0, [fp, #-8]
   33754:	ldrb	r0, [r0, #77]	; 0x4d
   33758:	cmp	r0, #0
   3375c:	movw	r0, #0
   33760:	movne	r0, #1
   33764:	str	r0, [sp, #8]
   33768:	ldr	r0, [sp, #8]
   3376c:	tst	r0, #1
   33770:	movw	r0, #2
   33774:	moveq	r0, #0
   33778:	str	r0, [fp, #-4]
   3377c:	b	337fc <__assert_fail@plt+0x22368>
   33780:	ldr	r0, [fp, #-8]
   33784:	ldr	r0, [r0, #4]
   33788:	ldr	r1, [fp, #-12]
   3378c:	add	r0, r0, r1
   33790:	ldrb	r0, [r0]
   33794:	str	r0, [sp, #20]
   33798:	ldr	r0, [fp, #-8]
   3379c:	ldr	r0, [r0, #68]	; 0x44
   337a0:	ldr	r1, [sp, #20]
   337a4:	bl	33978 <__assert_fail@plt+0x224e4>
   337a8:	tst	r0, #1
   337ac:	beq	337bc <__assert_fail@plt+0x22328>
   337b0:	movw	r0, #1
   337b4:	str	r0, [fp, #-4]
   337b8:	b	337fc <__assert_fail@plt+0x22368>
   337bc:	ldr	r0, [sp, #20]
   337c0:	cmp	r0, #10
   337c4:	movw	r0, #0
   337c8:	str	r0, [sp, #4]
   337cc:	bne	337e8 <__assert_fail@plt+0x22354>
   337d0:	ldr	r0, [fp, #-8]
   337d4:	ldrb	r0, [r0, #77]	; 0x4d
   337d8:	cmp	r0, #0
   337dc:	movw	r0, #0
   337e0:	movne	r0, #1
   337e4:	str	r0, [sp, #4]
   337e8:	ldr	r0, [sp, #4]
   337ec:	tst	r0, #1
   337f0:	movw	r0, #2
   337f4:	moveq	r0, #0
   337f8:	str	r0, [fp, #-4]
   337fc:	ldr	r0, [fp, #-4]
   33800:	mov	sp, fp
   33804:	pop	{fp, pc}
   33808:	push	{fp, lr}
   3380c:	mov	fp, sp
   33810:	sub	sp, sp, #48	; 0x30
   33814:	str	r0, [fp, #-4]
   33818:	str	r1, [fp, #-8]
   3381c:	str	r2, [fp, #-12]
   33820:	mvn	r0, #0
   33824:	str	r0, [sp, #16]
   33828:	ldr	r0, [fp, #-4]
   3382c:	ldr	r0, [r0, #24]
   33830:	ldr	r1, [fp, #-4]
   33834:	ldr	r1, [r1, #32]
   33838:	add	r0, r0, r1
   3383c:	str	r0, [sp, #24]
   33840:	ldr	r0, [sp, #24]
   33844:	ldr	r1, [fp, #-8]
   33848:	cmp	r0, r1
   3384c:	bge	33960 <__assert_fail@plt+0x224cc>
   33850:	ldr	r0, [fp, #-4]
   33854:	ldr	r0, [r0, #44]	; 0x2c
   33858:	ldr	r1, [sp, #24]
   3385c:	sub	r0, r0, r1
   33860:	str	r0, [sp, #8]
   33864:	ldr	r0, [fp, #-4]
   33868:	ldr	r1, [r0, #16]
   3386c:	str	r1, [fp, #-20]	; 0xffffffec
   33870:	ldr	r0, [r0, #20]
   33874:	str	r0, [fp, #-16]
   33878:	ldr	r0, [fp, #-4]
   3387c:	ldr	r0, [r0]
   33880:	ldr	r1, [sp, #24]
   33884:	add	r1, r0, r1
   33888:	ldr	r2, [sp, #8]
   3388c:	ldr	r0, [fp, #-4]
   33890:	add	r3, r0, #16
   33894:	add	r0, sp, #12
   33898:	bl	41610 <__assert_fail@plt+0x3017c>
   3389c:	str	r0, [sp, #20]
   338a0:	ldr	r0, [sp, #20]
   338a4:	cmn	r0, #2
   338a8:	movw	r0, #1
   338ac:	str	r0, [sp, #4]
   338b0:	beq	338dc <__assert_fail@plt+0x22448>
   338b4:	ldr	r0, [sp, #20]
   338b8:	cmn	r0, #1
   338bc:	movw	r0, #1
   338c0:	str	r0, [sp, #4]
   338c4:	beq	338dc <__assert_fail@plt+0x22448>
   338c8:	ldr	r0, [sp, #20]
   338cc:	cmp	r0, #0
   338d0:	movw	r0, #0
   338d4:	moveq	r0, #1
   338d8:	str	r0, [sp, #4]
   338dc:	ldr	r0, [sp, #4]
   338e0:	tst	r0, #1
   338e4:	beq	33944 <__assert_fail@plt+0x224b0>
   338e8:	ldr	r0, [sp, #20]
   338ec:	cmp	r0, #0
   338f0:	beq	33900 <__assert_fail@plt+0x2246c>
   338f4:	ldr	r0, [sp, #8]
   338f8:	cmp	r0, #0
   338fc:	bne	3390c <__assert_fail@plt+0x22478>
   33900:	movw	r0, #0
   33904:	str	r0, [sp, #16]
   33908:	b	33924 <__assert_fail@plt+0x22490>
   3390c:	ldr	r0, [fp, #-4]
   33910:	ldr	r0, [r0]
   33914:	ldr	r1, [sp, #24]
   33918:	add	r0, r0, r1
   3391c:	ldrb	r0, [r0]
   33920:	str	r0, [sp, #16]
   33924:	movw	r0, #1
   33928:	str	r0, [sp, #20]
   3392c:	ldr	r0, [fp, #-4]
   33930:	ldr	r1, [fp, #-20]	; 0xffffffec
   33934:	str	r1, [r0, #16]
   33938:	ldr	r1, [fp, #-16]
   3393c:	str	r1, [r0, #20]
   33940:	b	3394c <__assert_fail@plt+0x224b8>
   33944:	ldr	r0, [sp, #12]
   33948:	str	r0, [sp, #16]
   3394c:	ldr	r0, [sp, #20]
   33950:	ldr	r1, [sp, #24]
   33954:	add	r0, r1, r0
   33958:	str	r0, [sp, #24]
   3395c:	b	33840 <__assert_fail@plt+0x223ac>
   33960:	ldr	r0, [sp, #16]
   33964:	ldr	r1, [fp, #-12]
   33968:	str	r0, [r1]
   3396c:	ldr	r0, [sp, #24]
   33970:	mov	sp, fp
   33974:	pop	{fp, pc}
   33978:	sub	sp, sp, #8
   3397c:	str	r0, [sp, #4]
   33980:	str	r1, [sp]
   33984:	ldr	r0, [sp, #4]
   33988:	ldr	r1, [sp]
   3398c:	asr	r2, r1, #31
   33990:	add	r2, r1, r2, lsr #27
   33994:	asr	r3, r2, #5
   33998:	ldr	r0, [r0, r3, lsl #2]
   3399c:	bic	r2, r2, #31
   339a0:	sub	r1, r1, r2
   339a4:	lsr	r0, r0, r1
   339a8:	and	r0, r0, #1
   339ac:	cmp	r0, #0
   339b0:	movw	r0, #0
   339b4:	movne	r0, #1
   339b8:	and	r0, r0, #1
   339bc:	add	sp, sp, #8
   339c0:	bx	lr
   339c4:	push	{fp, lr}
   339c8:	mov	fp, sp
   339cc:	sub	sp, sp, #32
   339d0:	str	r0, [fp, #-8]
   339d4:	str	r1, [fp, #-12]
   339d8:	str	r2, [sp, #16]
   339dc:	ldr	r0, [fp, #-8]
   339e0:	ldr	r0, [r0, #84]	; 0x54
   339e4:	str	r0, [sp, #12]
   339e8:	movw	r0, #0
   339ec:	str	r0, [sp, #8]
   339f0:	ldr	r0, [sp, #8]
   339f4:	ldr	r1, [fp, #-12]
   339f8:	ldr	r1, [r1, #4]
   339fc:	cmp	r0, r1
   33a00:	bge	33ac4 <__assert_fail@plt+0x22630>
   33a04:	ldr	r0, [fp, #-12]
   33a08:	ldr	r0, [r0, #8]
   33a0c:	ldr	r1, [sp, #8]
   33a10:	ldr	r0, [r0, r1, lsl #2]
   33a14:	str	r0, [sp]
   33a18:	ldr	r0, [sp, #12]
   33a1c:	ldr	r0, [r0]
   33a20:	ldr	r1, [sp]
   33a24:	add	r0, r0, r1, lsl #3
   33a28:	ldr	r0, [r0, #4]
   33a2c:	and	r0, r0, #255	; 0xff
   33a30:	cmp	r0, #8
   33a34:	bne	33ab0 <__assert_fail@plt+0x2261c>
   33a38:	ldr	r0, [sp, #12]
   33a3c:	ldr	r0, [r0]
   33a40:	ldr	r1, [sp]
   33a44:	add	r0, r0, r1, lsl #3
   33a48:	ldr	r0, [r0]
   33a4c:	cmp	r0, #32
   33a50:	bge	33ab0 <__assert_fail@plt+0x2261c>
   33a54:	ldr	r0, [sp, #12]
   33a58:	ldr	r1, [r0]
   33a5c:	ldr	r0, [r0, #80]	; 0x50
   33a60:	ldr	r2, [sp]
   33a64:	add	r1, r1, r2, lsl #3
   33a68:	ldr	r1, [r1]
   33a6c:	movw	r2, #1
   33a70:	lsl	r1, r2, r1
   33a74:	and	r0, r0, r1
   33a78:	cmp	r0, #0
   33a7c:	beq	33ab0 <__assert_fail@plt+0x2261c>
   33a80:	ldr	r0, [fp, #-8]
   33a84:	ldr	r1, [sp]
   33a88:	ldr	r2, [sp, #16]
   33a8c:	bl	34710 <__assert_fail@plt+0x2327c>
   33a90:	str	r0, [sp, #4]
   33a94:	ldr	r0, [sp, #4]
   33a98:	cmp	r0, #0
   33a9c:	beq	33aac <__assert_fail@plt+0x22618>
   33aa0:	ldr	r0, [sp, #4]
   33aa4:	str	r0, [fp, #-4]
   33aa8:	b	33acc <__assert_fail@plt+0x22638>
   33aac:	b	33ab0 <__assert_fail@plt+0x2261c>
   33ab0:	b	33ab4 <__assert_fail@plt+0x22620>
   33ab4:	ldr	r0, [sp, #8]
   33ab8:	add	r0, r0, #1
   33abc:	str	r0, [sp, #8]
   33ac0:	b	339f0 <__assert_fail@plt+0x2255c>
   33ac4:	movw	r0, #0
   33ac8:	str	r0, [fp, #-4]
   33acc:	ldr	r0, [fp, #-4]
   33ad0:	mov	sp, fp
   33ad4:	pop	{fp, pc}
   33ad8:	push	{fp, lr}
   33adc:	mov	fp, sp
   33ae0:	sub	sp, sp, #96	; 0x60
   33ae4:	str	r0, [fp, #-4]
   33ae8:	str	r1, [fp, #-8]
   33aec:	ldr	r0, [fp, #-4]
   33af0:	ldr	r0, [r0, #84]	; 0x54
   33af4:	str	r0, [fp, #-12]
   33af8:	ldr	r0, [fp, #-4]
   33afc:	ldr	r0, [r0, #40]	; 0x28
   33b00:	str	r0, [fp, #-24]	; 0xffffffe8
   33b04:	movw	r0, #0
   33b08:	str	r0, [fp, #-20]	; 0xffffffec
   33b0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33b10:	ldr	r1, [fp, #-8]
   33b14:	ldr	r1, [r1, #4]
   33b18:	cmp	r0, r1
   33b1c:	bge	34000 <__assert_fail@plt+0x22b6c>
   33b20:	ldr	r0, [fp, #-8]
   33b24:	ldr	r0, [r0, #8]
   33b28:	ldr	r1, [fp, #-20]	; 0xffffffec
   33b2c:	ldr	r0, [r0, r1, lsl #2]
   33b30:	str	r0, [fp, #-40]	; 0xffffffd8
   33b34:	ldr	r0, [fp, #-12]
   33b38:	ldr	r0, [r0]
   33b3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33b40:	add	r0, r0, r1, lsl #3
   33b44:	str	r0, [sp, #48]	; 0x30
   33b48:	ldr	r0, [sp, #48]	; 0x30
   33b4c:	ldr	r0, [r0, #4]
   33b50:	and	r0, r0, #255	; 0xff
   33b54:	cmp	r0, #4
   33b58:	beq	33b60 <__assert_fail@plt+0x226cc>
   33b5c:	b	33ff0 <__assert_fail@plt+0x22b5c>
   33b60:	ldr	r0, [sp, #48]	; 0x30
   33b64:	ldr	r0, [r0, #4]
   33b68:	lsr	r0, r0, #8
   33b6c:	movw	r1, #1023	; 0x3ff
   33b70:	and	r0, r0, r1
   33b74:	cmp	r0, #0
   33b78:	beq	33c5c <__assert_fail@plt+0x227c8>
   33b7c:	ldr	r0, [fp, #-4]
   33b80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33b84:	ldr	r2, [fp, #-4]
   33b88:	ldr	r2, [r2, #88]	; 0x58
   33b8c:	bl	33608 <__assert_fail@plt+0x22174>
   33b90:	str	r0, [fp, #-44]	; 0xffffffd4
   33b94:	ldr	r0, [sp, #48]	; 0x30
   33b98:	ldr	r0, [r0, #4]
   33b9c:	lsr	r0, r0, #8
   33ba0:	movw	r1, #1023	; 0x3ff
   33ba4:	and	r0, r0, r1
   33ba8:	and	r0, r0, #4
   33bac:	cmp	r0, #0
   33bb0:	beq	33bc4 <__assert_fail@plt+0x22730>
   33bb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33bb8:	and	r0, r0, #1
   33bbc:	cmp	r0, #0
   33bc0:	beq	33c54 <__assert_fail@plt+0x227c0>
   33bc4:	ldr	r0, [sp, #48]	; 0x30
   33bc8:	ldr	r0, [r0, #4]
   33bcc:	lsr	r0, r0, #8
   33bd0:	movw	r1, #1023	; 0x3ff
   33bd4:	and	r0, r0, r1
   33bd8:	and	r0, r0, #8
   33bdc:	cmp	r0, #0
   33be0:	beq	33bf4 <__assert_fail@plt+0x22760>
   33be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33be8:	and	r0, r0, #1
   33bec:	cmp	r0, #0
   33bf0:	bne	33c54 <__assert_fail@plt+0x227c0>
   33bf4:	ldr	r0, [sp, #48]	; 0x30
   33bf8:	ldr	r0, [r0, #4]
   33bfc:	lsr	r0, r0, #8
   33c00:	movw	r1, #1023	; 0x3ff
   33c04:	and	r0, r0, r1
   33c08:	and	r0, r0, #32
   33c0c:	cmp	r0, #0
   33c10:	beq	33c24 <__assert_fail@plt+0x22790>
   33c14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33c18:	and	r0, r0, #2
   33c1c:	cmp	r0, #0
   33c20:	beq	33c54 <__assert_fail@plt+0x227c0>
   33c24:	ldr	r0, [sp, #48]	; 0x30
   33c28:	ldr	r0, [r0, #4]
   33c2c:	lsr	r0, r0, #8
   33c30:	movw	r1, #1023	; 0x3ff
   33c34:	and	r0, r0, r1
   33c38:	and	r0, r0, #128	; 0x80
   33c3c:	cmp	r0, #0
   33c40:	beq	33c58 <__assert_fail@plt+0x227c4>
   33c44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33c48:	and	r0, r0, #8
   33c4c:	cmp	r0, #0
   33c50:	bne	33c58 <__assert_fail@plt+0x227c4>
   33c54:	b	33ff0 <__assert_fail@plt+0x22b5c>
   33c58:	b	33c5c <__assert_fail@plt+0x227c8>
   33c5c:	ldr	r0, [fp, #-4]
   33c60:	ldr	r0, [r0, #108]	; 0x6c
   33c64:	str	r0, [fp, #-36]	; 0xffffffdc
   33c68:	ldr	r0, [fp, #-4]
   33c6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c74:	bl	34860 <__assert_fail@plt+0x233cc>
   33c78:	str	r0, [fp, #-16]
   33c7c:	ldr	r0, [fp, #-16]
   33c80:	cmp	r0, #0
   33c84:	beq	33c8c <__assert_fail@plt+0x227f8>
   33c88:	b	34008 <__assert_fail@plt+0x22b74>
   33c8c:	ldr	r0, [fp, #-12]
   33c90:	ldr	r0, [r0, #12]
   33c94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33c98:	add	r0, r0, r1, lsl #2
   33c9c:	ldr	r0, [r0]
   33ca0:	cmn	r0, #1
   33ca4:	beq	33cac <__assert_fail@plt+0x22818>
   33ca8:	b	33cac <__assert_fail@plt+0x22818>
   33cac:	b	33cb0 <__assert_fail@plt+0x2281c>
   33cb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33cb4:	ldr	r1, [fp, #-4]
   33cb8:	ldr	r1, [r1, #108]	; 0x6c
   33cbc:	cmp	r0, r1
   33cc0:	bge	33fec <__assert_fail@plt+0x22b58>
   33cc4:	ldr	r0, [fp, #-4]
   33cc8:	ldr	r0, [r0, #116]	; 0x74
   33ccc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33cd0:	movw	r2, #24
   33cd4:	mul	r1, r1, r2
   33cd8:	add	r0, r0, r1
   33cdc:	str	r0, [sp, #32]
   33ce0:	ldr	r0, [sp, #32]
   33ce4:	ldr	r0, [r0]
   33ce8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   33cec:	cmp	r0, r1
   33cf0:	bne	33d08 <__assert_fail@plt+0x22874>
   33cf4:	ldr	r0, [sp, #32]
   33cf8:	ldr	r0, [r0, #4]
   33cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33d00:	cmp	r0, r1
   33d04:	beq	33d0c <__assert_fail@plt+0x22878>
   33d08:	b	33fdc <__assert_fail@plt+0x22b48>
   33d0c:	ldr	r0, [sp, #32]
   33d10:	ldr	r0, [r0, #12]
   33d14:	ldr	r1, [sp, #32]
   33d18:	ldr	r1, [r1, #8]
   33d1c:	sub	r0, r0, r1
   33d20:	str	r0, [sp, #40]	; 0x28
   33d24:	ldr	r0, [sp, #40]	; 0x28
   33d28:	cmp	r0, #0
   33d2c:	bne	33d68 <__assert_fail@plt+0x228d4>
   33d30:	ldr	r0, [fp, #-12]
   33d34:	ldr	r0, [r0, #24]
   33d38:	ldr	r1, [fp, #-12]
   33d3c:	ldr	r1, [r1, #20]
   33d40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33d44:	movw	r3, #12
   33d48:	mul	r2, r2, r3
   33d4c:	add	r1, r1, r2
   33d50:	ldr	r1, [r1, #8]
   33d54:	ldr	r1, [r1]
   33d58:	mul	r1, r1, r3
   33d5c:	add	r0, r0, r1
   33d60:	str	r0, [sp, #16]
   33d64:	b	33d90 <__assert_fail@plt+0x228fc>
   33d68:	ldr	r0, [fp, #-12]
   33d6c:	ldr	r1, [r0, #12]
   33d70:	ldr	r0, [r0, #24]
   33d74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33d78:	add	r1, r1, r2, lsl #2
   33d7c:	ldr	r1, [r1]
   33d80:	movw	r2, #12
   33d84:	mul	r1, r1, r2
   33d88:	add	r0, r0, r1
   33d8c:	str	r0, [sp, #16]
   33d90:	ldr	r0, [sp, #16]
   33d94:	str	r0, [sp, #44]	; 0x2c
   33d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33d9c:	ldr	r1, [sp, #32]
   33da0:	ldr	r2, [r1, #8]
   33da4:	ldr	r1, [r1, #12]
   33da8:	add	r0, r0, r1
   33dac:	sub	r0, r0, r2
   33db0:	str	r0, [fp, #-28]	; 0xffffffe4
   33db4:	ldr	r0, [fp, #-4]
   33db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33dbc:	sub	r1, r1, #1
   33dc0:	ldr	r2, [r0, #88]	; 0x58
   33dc4:	bl	33608 <__assert_fail@plt+0x22174>
   33dc8:	str	r0, [fp, #-44]	; 0xffffffd4
   33dcc:	ldr	r0, [fp, #-4]
   33dd0:	ldr	r0, [r0, #100]	; 0x64
   33dd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33dd8:	ldr	r0, [r0, r1, lsl #2]
   33ddc:	str	r0, [sp, #36]	; 0x24
   33de0:	ldr	r0, [fp, #-4]
   33de4:	ldr	r0, [r0, #100]	; 0x64
   33de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33dec:	add	r0, r0, r1, lsl #2
   33df0:	ldr	r0, [r0]
   33df4:	movw	r1, #0
   33df8:	cmp	r0, r1
   33dfc:	bne	33e0c <__assert_fail@plt+0x22978>
   33e00:	movw	r0, #0
   33e04:	str	r0, [sp, #12]
   33e08:	b	33e28 <__assert_fail@plt+0x22994>
   33e0c:	ldr	r0, [fp, #-4]
   33e10:	ldr	r0, [r0, #100]	; 0x64
   33e14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33e18:	add	r0, r0, r1, lsl #2
   33e1c:	ldr	r0, [r0]
   33e20:	ldr	r0, [r0, #8]
   33e24:	str	r0, [sp, #12]
   33e28:	ldr	r0, [sp, #12]
   33e2c:	str	r0, [fp, #-32]	; 0xffffffe0
   33e30:	ldr	r0, [sp, #36]	; 0x24
   33e34:	movw	r1, #0
   33e38:	cmp	r0, r1
   33e3c:	bne	33eb4 <__assert_fail@plt+0x22a20>
   33e40:	ldr	r1, [fp, #-12]
   33e44:	ldr	r2, [sp, #44]	; 0x2c
   33e48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33e4c:	sub	r0, fp, #16
   33e50:	bl	30dcc <__assert_fail@plt+0x1f938>
   33e54:	ldr	r1, [fp, #-4]
   33e58:	ldr	r1, [r1, #100]	; 0x64
   33e5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33e60:	str	r0, [r1, r2, lsl #2]
   33e64:	ldr	r0, [fp, #-4]
   33e68:	ldr	r0, [r0, #100]	; 0x64
   33e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33e70:	add	r0, r0, r1, lsl #2
   33e74:	ldr	r0, [r0]
   33e78:	movw	r1, #0
   33e7c:	cmp	r0, r1
   33e80:	movw	r0, #0
   33e84:	str	r0, [sp, #8]
   33e88:	bne	33ea0 <__assert_fail@plt+0x22a0c>
   33e8c:	ldr	r0, [fp, #-16]
   33e90:	cmp	r0, #0
   33e94:	movw	r0, #0
   33e98:	movne	r0, #1
   33e9c:	str	r0, [sp, #8]
   33ea0:	ldr	r0, [sp, #8]
   33ea4:	tst	r0, #1
   33ea8:	beq	33eb0 <__assert_fail@plt+0x22a1c>
   33eac:	b	34008 <__assert_fail@plt+0x22b74>
   33eb0:	b	33f60 <__assert_fail@plt+0x22acc>
   33eb4:	ldr	r0, [sp, #36]	; 0x24
   33eb8:	ldr	r1, [r0, #40]	; 0x28
   33ebc:	ldr	r2, [sp, #44]	; 0x2c
   33ec0:	add	r0, sp, #20
   33ec4:	bl	34dfc <__assert_fail@plt+0x23968>
   33ec8:	str	r0, [fp, #-16]
   33ecc:	ldr	r0, [fp, #-16]
   33ed0:	cmp	r0, #0
   33ed4:	beq	33ee4 <__assert_fail@plt+0x22a50>
   33ed8:	ldr	r0, [sp, #28]
   33edc:	bl	1388c <__assert_fail@plt+0x23f8>
   33ee0:	b	34008 <__assert_fail@plt+0x22b74>
   33ee4:	ldr	r1, [fp, #-12]
   33ee8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33eec:	sub	r0, fp, #16
   33ef0:	add	r2, sp, #20
   33ef4:	bl	30dcc <__assert_fail@plt+0x1f938>
   33ef8:	ldr	r1, [fp, #-4]
   33efc:	ldr	r1, [r1, #100]	; 0x64
   33f00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33f04:	str	r0, [r1, r2, lsl #2]
   33f08:	ldr	r0, [sp, #28]
   33f0c:	bl	1388c <__assert_fail@plt+0x23f8>
   33f10:	ldr	r0, [fp, #-4]
   33f14:	ldr	r0, [r0, #100]	; 0x64
   33f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33f1c:	add	r0, r0, r1, lsl #2
   33f20:	ldr	r0, [r0]
   33f24:	movw	r1, #0
   33f28:	cmp	r0, r1
   33f2c:	movw	r0, #0
   33f30:	str	r0, [sp, #4]
   33f34:	bne	33f4c <__assert_fail@plt+0x22ab8>
   33f38:	ldr	r0, [fp, #-16]
   33f3c:	cmp	r0, #0
   33f40:	movw	r0, #0
   33f44:	movne	r0, #1
   33f48:	str	r0, [sp, #4]
   33f4c:	ldr	r0, [sp, #4]
   33f50:	tst	r0, #1
   33f54:	beq	33f5c <__assert_fail@plt+0x22ac8>
   33f58:	b	34008 <__assert_fail@plt+0x22b74>
   33f5c:	b	33f60 <__assert_fail@plt+0x22acc>
   33f60:	ldr	r0, [sp, #40]	; 0x28
   33f64:	cmp	r0, #0
   33f68:	bne	33fd8 <__assert_fail@plt+0x22b44>
   33f6c:	ldr	r0, [fp, #-4]
   33f70:	ldr	r0, [r0, #100]	; 0x64
   33f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33f78:	add	r0, r0, r1, lsl #2
   33f7c:	ldr	r0, [r0]
   33f80:	ldr	r0, [r0, #8]
   33f84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   33f88:	cmp	r0, r1
   33f8c:	ble	33fd8 <__assert_fail@plt+0x22b44>
   33f90:	ldr	r0, [fp, #-4]
   33f94:	ldr	r1, [sp, #44]	; 0x2c
   33f98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33f9c:	bl	339c4 <__assert_fail@plt+0x22530>
   33fa0:	str	r0, [fp, #-16]
   33fa4:	ldr	r0, [fp, #-16]
   33fa8:	cmp	r0, #0
   33fac:	beq	33fb4 <__assert_fail@plt+0x22b20>
   33fb0:	b	34008 <__assert_fail@plt+0x22b74>
   33fb4:	ldr	r0, [fp, #-4]
   33fb8:	ldr	r1, [sp, #44]	; 0x2c
   33fbc:	bl	33ad8 <__assert_fail@plt+0x22644>
   33fc0:	str	r0, [fp, #-16]
   33fc4:	ldr	r0, [fp, #-16]
   33fc8:	cmp	r0, #0
   33fcc:	beq	33fd4 <__assert_fail@plt+0x22b40>
   33fd0:	b	34008 <__assert_fail@plt+0x22b74>
   33fd4:	b	33fd8 <__assert_fail@plt+0x22b44>
   33fd8:	b	33fdc <__assert_fail@plt+0x22b48>
   33fdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33fe0:	add	r0, r0, #1
   33fe4:	str	r0, [fp, #-36]	; 0xffffffdc
   33fe8:	b	33cb0 <__assert_fail@plt+0x2281c>
   33fec:	b	33ff0 <__assert_fail@plt+0x22b5c>
   33ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ff4:	add	r0, r0, #1
   33ff8:	str	r0, [fp, #-20]	; 0xffffffec
   33ffc:	b	33b0c <__assert_fail@plt+0x22678>
   34000:	movw	r0, #0
   34004:	str	r0, [fp, #-16]
   34008:	ldr	r0, [fp, #-16]
   3400c:	mov	sp, fp
   34010:	pop	{fp, pc}
   34014:	push	{fp, lr}
   34018:	mov	fp, sp
   3401c:	sub	sp, sp, #48	; 0x30
   34020:	ldr	r2, [pc, #512]	; 34228 <__assert_fail@plt+0x22d94>
   34024:	str	r0, [fp, #-8]
   34028:	str	r1, [fp, #-12]
   3402c:	ldr	r0, [fp, #-8]
   34030:	str	r0, [fp, #-20]	; 0xffffffec
   34034:	ldr	r0, [fp, #-20]	; 0xffffffec
   34038:	ldr	r0, [r0, #36]	; 0x24
   3403c:	cmp	r2, r0
   34040:	bhi	34050 <__assert_fail@plt+0x22bbc>
   34044:	movw	r0, #12
   34048:	str	r0, [fp, #-4]
   3404c:	b	3421c <__assert_fail@plt+0x22d88>
   34050:	ldr	r0, [fp, #-20]	; 0xffffffec
   34054:	ldr	r1, [fp, #-12]
   34058:	ldr	r2, [r0, #36]	; 0x24
   3405c:	ldr	r3, [r0, #48]	; 0x30
   34060:	lsl	r2, r2, #1
   34064:	cmp	r3, r2
   34068:	str	r0, [sp, #20]
   3406c:	str	r1, [sp, #16]
   34070:	bge	34084 <__assert_fail@plt+0x22bf0>
   34074:	ldr	r0, [fp, #-20]	; 0xffffffec
   34078:	ldr	r0, [r0, #48]	; 0x30
   3407c:	str	r0, [sp, #12]
   34080:	b	34094 <__assert_fail@plt+0x22c00>
   34084:	ldr	r0, [fp, #-20]	; 0xffffffec
   34088:	ldr	r0, [r0, #36]	; 0x24
   3408c:	lsl	r0, r0, #1
   34090:	str	r0, [sp, #12]
   34094:	ldr	r0, [sp, #12]
   34098:	ldr	r1, [sp, #16]
   3409c:	cmp	r1, r0
   340a0:	bge	340e8 <__assert_fail@plt+0x22c54>
   340a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   340a8:	ldr	r1, [r0, #36]	; 0x24
   340ac:	ldr	r0, [r0, #48]	; 0x30
   340b0:	lsl	r1, r1, #1
   340b4:	cmp	r0, r1
   340b8:	bge	340cc <__assert_fail@plt+0x22c38>
   340bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   340c0:	ldr	r0, [r0, #48]	; 0x30
   340c4:	str	r0, [sp, #8]
   340c8:	b	340dc <__assert_fail@plt+0x22c48>
   340cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   340d0:	ldr	r0, [r0, #36]	; 0x24
   340d4:	lsl	r0, r0, #1
   340d8:	str	r0, [sp, #8]
   340dc:	ldr	r0, [sp, #8]
   340e0:	str	r0, [sp, #4]
   340e4:	b	340f0 <__assert_fail@plt+0x22c5c>
   340e8:	ldr	r0, [fp, #-12]
   340ec:	str	r0, [sp, #4]
   340f0:	ldr	r0, [sp, #4]
   340f4:	ldr	r1, [sp, #20]
   340f8:	str	r0, [sp]
   340fc:	mov	r0, r1
   34100:	ldr	r1, [sp]
   34104:	bl	27d54 <__assert_fail@plt+0x168c0>
   34108:	str	r0, [fp, #-16]
   3410c:	ldr	r0, [fp, #-16]
   34110:	cmp	r0, #0
   34114:	beq	34124 <__assert_fail@plt+0x22c90>
   34118:	ldr	r0, [fp, #-16]
   3411c:	str	r0, [fp, #-4]
   34120:	b	3421c <__assert_fail@plt+0x22d88>
   34124:	ldr	r0, [fp, #-8]
   34128:	ldr	r0, [r0, #100]	; 0x64
   3412c:	movw	r1, #0
   34130:	cmp	r0, r1
   34134:	beq	34180 <__assert_fail@plt+0x22cec>
   34138:	ldr	r0, [fp, #-8]
   3413c:	ldr	r0, [r0, #100]	; 0x64
   34140:	ldr	r1, [fp, #-20]	; 0xffffffec
   34144:	ldr	r1, [r1, #36]	; 0x24
   34148:	add	r1, r1, #1
   3414c:	lsl	r1, r1, #2
   34150:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   34154:	str	r0, [sp, #24]
   34158:	ldr	r0, [sp, #24]
   3415c:	movw	r1, #0
   34160:	cmp	r0, r1
   34164:	bne	34174 <__assert_fail@plt+0x22ce0>
   34168:	movw	r0, #12
   3416c:	str	r0, [fp, #-4]
   34170:	b	3421c <__assert_fail@plt+0x22d88>
   34174:	ldr	r0, [sp, #24]
   34178:	ldr	r1, [fp, #-8]
   3417c:	str	r0, [r1, #100]	; 0x64
   34180:	ldr	r0, [fp, #-20]	; 0xffffffec
   34184:	ldrsb	r0, [r0, #72]	; 0x48
   34188:	cmp	r0, #0
   3418c:	beq	341d4 <__assert_fail@plt+0x22d40>
   34190:	ldr	r0, [fp, #-20]	; 0xffffffec
   34194:	ldr	r0, [r0, #80]	; 0x50
   34198:	cmp	r0, #1
   3419c:	ble	341c8 <__assert_fail@plt+0x22d34>
   341a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   341a4:	bl	27eac <__assert_fail@plt+0x16a18>
   341a8:	str	r0, [fp, #-16]
   341ac:	ldr	r0, [fp, #-16]
   341b0:	cmp	r0, #0
   341b4:	beq	341c4 <__assert_fail@plt+0x22d30>
   341b8:	ldr	r0, [fp, #-16]
   341bc:	str	r0, [fp, #-4]
   341c0:	b	3421c <__assert_fail@plt+0x22d88>
   341c4:	b	341d0 <__assert_fail@plt+0x22d3c>
   341c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   341cc:	bl	28954 <__assert_fail@plt+0x174c0>
   341d0:	b	34214 <__assert_fail@plt+0x22d80>
   341d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   341d8:	ldr	r0, [r0, #80]	; 0x50
   341dc:	cmp	r0, #1
   341e0:	ble	341f0 <__assert_fail@plt+0x22d5c>
   341e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   341e8:	bl	28a58 <__assert_fail@plt+0x175c4>
   341ec:	b	34210 <__assert_fail@plt+0x22d7c>
   341f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   341f4:	ldr	r0, [r0, #64]	; 0x40
   341f8:	movw	r1, #0
   341fc:	cmp	r0, r1
   34200:	beq	3420c <__assert_fail@plt+0x22d78>
   34204:	ldr	r0, [fp, #-20]	; 0xffffffec
   34208:	bl	28d98 <__assert_fail@plt+0x17904>
   3420c:	b	34210 <__assert_fail@plt+0x22d7c>
   34210:	b	34214 <__assert_fail@plt+0x22d80>
   34214:	movw	r0, #0
   34218:	str	r0, [fp, #-4]
   3421c:	ldr	r0, [fp, #-4]
   34220:	mov	sp, fp
   34224:	pop	{fp, pc}
   34228:	svcne	0x00ffffff
   3422c:	push	{fp, lr}
   34230:	mov	fp, sp
   34234:	sub	sp, sp, #32
   34238:	str	r0, [fp, #-8]
   3423c:	str	r1, [fp, #-12]
   34240:	str	r2, [sp, #16]
   34244:	ldr	r0, [sp, #16]
   34248:	ldrb	r0, [r0, #52]	; 0x34
   3424c:	ubfx	r0, r0, #5, #1
   34250:	and	r0, r0, #255	; 0xff
   34254:	cmp	r0, #0
   34258:	beq	34290 <__assert_fail@plt+0x22dfc>
   3425c:	ldr	r0, [fp, #-12]
   34260:	ldr	r1, [sp, #16]
   34264:	bl	375a8 <__assert_fail@plt+0x26114>
   34268:	ldr	r1, [fp, #-8]
   3426c:	str	r0, [r1]
   34270:	ldr	r0, [fp, #-8]
   34274:	ldr	r0, [r0]
   34278:	cmp	r0, #0
   3427c:	beq	3428c <__assert_fail@plt+0x22df8>
   34280:	movw	r0, #0
   34284:	str	r0, [fp, #-4]
   34288:	b	343a4 <__assert_fail@plt+0x22f10>
   3428c:	b	34290 <__assert_fail@plt+0x22dfc>
   34290:	ldr	r0, [fp, #-12]
   34294:	ldr	r0, [r0, #4]
   34298:	ldr	r1, [fp, #-12]
   3429c:	ldr	r2, [r1, #40]	; 0x28
   342a0:	add	r3, r2, #1
   342a4:	str	r3, [r1, #40]	; 0x28
   342a8:	add	r0, r0, r2
   342ac:	ldrb	r0, [r0]
   342b0:	strb	r0, [sp, #11]
   342b4:	ldr	r0, [sp, #16]
   342b8:	ldr	r0, [r0, #44]	; 0x2c
   342bc:	str	r0, [sp, #12]
   342c0:	ldr	r0, [sp, #12]
   342c4:	movw	r1, #0
   342c8:	cmp	r0, r1
   342cc:	beq	342ec <__assert_fail@plt+0x22e58>
   342d0:	ldr	r0, [sp, #12]
   342d4:	ldrb	r1, [sp, #11]
   342d8:	mov	r2, r1
   342dc:	add	r0, r0, r1, lsl #2
   342e0:	ldr	r0, [r0]
   342e4:	str	r0, [fp, #-4]
   342e8:	b	343a4 <__assert_fail@plt+0x22f10>
   342ec:	ldr	r0, [sp, #16]
   342f0:	ldr	r0, [r0, #48]	; 0x30
   342f4:	str	r0, [sp, #12]
   342f8:	ldr	r0, [sp, #12]
   342fc:	movw	r1, #0
   34300:	cmp	r0, r1
   34304:	beq	34370 <__assert_fail@plt+0x22edc>
   34308:	ldr	r0, [fp, #-12]
   3430c:	ldr	r1, [fp, #-12]
   34310:	ldr	r1, [r1, #40]	; 0x28
   34314:	sub	r1, r1, #1
   34318:	ldr	r2, [fp, #-12]
   3431c:	ldr	r2, [r2, #88]	; 0x58
   34320:	bl	33608 <__assert_fail@plt+0x22174>
   34324:	str	r0, [sp, #4]
   34328:	ldr	r0, [sp, #4]
   3432c:	and	r0, r0, #1
   34330:	cmp	r0, #0
   34334:	beq	34354 <__assert_fail@plt+0x22ec0>
   34338:	ldr	r0, [sp, #12]
   3433c:	ldrb	r1, [sp, #11]
   34340:	orr	r1, r1, #256	; 0x100
   34344:	add	r0, r0, r1, lsl #2
   34348:	ldr	r0, [r0]
   3434c:	str	r0, [fp, #-4]
   34350:	b	343a4 <__assert_fail@plt+0x22f10>
   34354:	ldr	r0, [sp, #12]
   34358:	ldrb	r1, [sp, #11]
   3435c:	mov	r2, r1
   34360:	add	r0, r0, r1, lsl #2
   34364:	ldr	r0, [r0]
   34368:	str	r0, [fp, #-4]
   3436c:	b	343a4 <__assert_fail@plt+0x22f10>
   34370:	ldr	r0, [fp, #-12]
   34374:	ldr	r0, [r0, #84]	; 0x54
   34378:	ldr	r1, [sp, #16]
   3437c:	bl	37984 <__assert_fail@plt+0x264f0>
   34380:	tst	r0, #1
   34384:	bne	343a0 <__assert_fail@plt+0x22f0c>
   34388:	ldr	r0, [fp, #-8]
   3438c:	movw	r1, #12
   34390:	str	r1, [r0]
   34394:	movw	r0, #0
   34398:	str	r0, [fp, #-4]
   3439c:	b	343a4 <__assert_fail@plt+0x22f10>
   343a0:	b	342b4 <__assert_fail@plt+0x22e20>
   343a4:	ldr	r0, [fp, #-4]
   343a8:	mov	sp, fp
   343ac:	pop	{fp, pc}
   343b0:	push	{fp, lr}
   343b4:	mov	fp, sp
   343b8:	sub	sp, sp, #56	; 0x38
   343bc:	str	r0, [fp, #-8]
   343c0:	str	r1, [fp, #-12]
   343c4:	str	r2, [fp, #-16]
   343c8:	ldr	r0, [fp, #-12]
   343cc:	ldr	r0, [r0, #84]	; 0x54
   343d0:	str	r0, [fp, #-20]	; 0xffffffec
   343d4:	ldr	r0, [fp, #-12]
   343d8:	ldr	r0, [r0, #40]	; 0x28
   343dc:	str	r0, [fp, #-24]	; 0xffffffe8
   343e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   343e4:	ldr	r1, [fp, #-12]
   343e8:	ldr	r1, [r1, #104]	; 0x68
   343ec:	cmp	r0, r1
   343f0:	ble	3441c <__assert_fail@plt+0x22f88>
   343f4:	ldr	r0, [fp, #-16]
   343f8:	ldr	r1, [fp, #-12]
   343fc:	ldr	r1, [r1, #100]	; 0x64
   34400:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34404:	add	r1, r1, r2, lsl #2
   34408:	str	r0, [r1]
   3440c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34410:	ldr	r1, [fp, #-12]
   34414:	str	r0, [r1, #104]	; 0x68
   34418:	b	34558 <__assert_fail@plt+0x230c4>
   3441c:	ldr	r0, [fp, #-12]
   34420:	ldr	r0, [r0, #100]	; 0x64
   34424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34428:	add	r0, r0, r1, lsl #2
   3442c:	ldr	r0, [r0]
   34430:	movw	r1, #0
   34434:	cmp	r0, r1
   34438:	bne	34458 <__assert_fail@plt+0x22fc4>
   3443c:	ldr	r0, [fp, #-16]
   34440:	ldr	r1, [fp, #-12]
   34444:	ldr	r1, [r1, #100]	; 0x64
   34448:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3444c:	add	r1, r1, r2, lsl #2
   34450:	str	r0, [r1]
   34454:	b	34554 <__assert_fail@plt+0x230c0>
   34458:	mov	r0, #0
   3445c:	str	r0, [sp, #4]
   34460:	ldr	r0, [fp, #-12]
   34464:	ldr	r0, [r0, #100]	; 0x64
   34468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3446c:	add	r0, r0, r1, lsl #2
   34470:	ldr	r0, [r0]
   34474:	str	r0, [sp, #28]
   34478:	ldr	r0, [sp, #28]
   3447c:	ldr	r0, [r0, #40]	; 0x28
   34480:	str	r0, [sp, #8]
   34484:	ldr	r0, [fp, #-16]
   34488:	movw	r1, #0
   3448c:	cmp	r0, r1
   34490:	beq	344d8 <__assert_fail@plt+0x23044>
   34494:	ldr	r0, [fp, #-16]
   34498:	ldr	r0, [r0, #40]	; 0x28
   3449c:	str	r0, [sp, #4]
   344a0:	ldr	r1, [sp, #4]
   344a4:	ldr	r2, [sp, #8]
   344a8:	add	r0, sp, #12
   344ac:	bl	34dfc <__assert_fail@plt+0x23968>
   344b0:	ldr	r1, [fp, #-8]
   344b4:	str	r0, [r1]
   344b8:	ldr	r0, [fp, #-8]
   344bc:	ldr	r0, [r0]
   344c0:	cmp	r0, #0
   344c4:	beq	344d4 <__assert_fail@plt+0x23040>
   344c8:	movw	r0, #0
   344cc:	str	r0, [fp, #-4]
   344d0:	b	34620 <__assert_fail@plt+0x2318c>
   344d4:	b	344f4 <__assert_fail@plt+0x23060>
   344d8:	ldr	r0, [sp, #8]
   344dc:	ldr	r1, [r0]
   344e0:	str	r1, [sp, #12]
   344e4:	ldr	r1, [r0, #4]
   344e8:	str	r1, [sp, #16]
   344ec:	ldr	r0, [r0, #8]
   344f0:	str	r0, [sp, #20]
   344f4:	ldr	r0, [fp, #-12]
   344f8:	ldr	r1, [r0, #40]	; 0x28
   344fc:	ldr	r2, [r0, #88]	; 0x58
   34500:	sub	r1, r1, #1
   34504:	bl	33608 <__assert_fail@plt+0x22174>
   34508:	str	r0, [sp, #24]
   3450c:	ldr	r0, [fp, #-8]
   34510:	ldr	r1, [fp, #-20]	; 0xffffffec
   34514:	ldr	r3, [sp, #24]
   34518:	add	r2, sp, #12
   3451c:	bl	30dcc <__assert_fail@plt+0x1f938>
   34520:	ldr	r1, [fp, #-12]
   34524:	ldr	r1, [r1, #100]	; 0x64
   34528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3452c:	add	r1, r1, r2, lsl #2
   34530:	str	r0, [r1]
   34534:	str	r0, [fp, #-16]
   34538:	ldr	r0, [sp, #4]
   3453c:	movw	r1, #0
   34540:	cmp	r0, r1
   34544:	beq	34550 <__assert_fail@plt+0x230bc>
   34548:	ldr	r0, [sp, #20]
   3454c:	bl	1388c <__assert_fail@plt+0x23f8>
   34550:	b	34554 <__assert_fail@plt+0x230c0>
   34554:	b	34558 <__assert_fail@plt+0x230c4>
   34558:	ldr	r0, [fp, #-20]	; 0xffffffec
   3455c:	ldr	r0, [r0, #76]	; 0x4c
   34560:	cmp	r0, #0
   34564:	beq	34618 <__assert_fail@plt+0x23184>
   34568:	ldr	r0, [fp, #-16]
   3456c:	movw	r1, #0
   34570:	cmp	r0, r1
   34574:	beq	34618 <__assert_fail@plt+0x23184>
   34578:	ldr	r0, [fp, #-12]
   3457c:	ldr	r1, [fp, #-16]
   34580:	add	r1, r1, #4
   34584:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34588:	bl	339c4 <__assert_fail@plt+0x22530>
   3458c:	ldr	r1, [fp, #-8]
   34590:	str	r0, [r1]
   34594:	ldr	r0, [fp, #-8]
   34598:	ldr	r0, [r0]
   3459c:	cmp	r0, #0
   345a0:	beq	345b0 <__assert_fail@plt+0x2311c>
   345a4:	movw	r0, #0
   345a8:	str	r0, [fp, #-4]
   345ac:	b	34620 <__assert_fail@plt+0x2318c>
   345b0:	ldr	r0, [fp, #-16]
   345b4:	ldrb	r0, [r0, #52]	; 0x34
   345b8:	ubfx	r0, r0, #6, #1
   345bc:	and	r0, r0, #255	; 0xff
   345c0:	cmp	r0, #0
   345c4:	beq	34614 <__assert_fail@plt+0x23180>
   345c8:	ldr	r0, [fp, #-12]
   345cc:	ldr	r1, [fp, #-16]
   345d0:	add	r1, r1, #4
   345d4:	bl	33ad8 <__assert_fail@plt+0x22644>
   345d8:	ldr	r1, [fp, #-8]
   345dc:	str	r0, [r1]
   345e0:	ldr	r0, [fp, #-8]
   345e4:	ldr	r0, [r0]
   345e8:	cmp	r0, #0
   345ec:	beq	345fc <__assert_fail@plt+0x23168>
   345f0:	movw	r0, #0
   345f4:	str	r0, [fp, #-4]
   345f8:	b	34620 <__assert_fail@plt+0x2318c>
   345fc:	ldr	r0, [fp, #-12]
   34600:	ldr	r0, [r0, #100]	; 0x64
   34604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34608:	add	r0, r0, r1, lsl #2
   3460c:	ldr	r0, [r0]
   34610:	str	r0, [fp, #-16]
   34614:	b	34618 <__assert_fail@plt+0x23184>
   34618:	ldr	r0, [fp, #-16]
   3461c:	str	r0, [fp, #-4]
   34620:	ldr	r0, [fp, #-4]
   34624:	mov	sp, fp
   34628:	pop	{fp, pc}
   3462c:	push	{fp, lr}
   34630:	mov	fp, sp
   34634:	sub	sp, sp, #32
   34638:	str	r0, [fp, #-8]
   3463c:	str	r1, [fp, #-12]
   34640:	ldr	r0, [fp, #-12]
   34644:	ldr	r0, [r0, #104]	; 0x68
   34648:	str	r0, [sp, #12]
   3464c:	ldr	r0, [fp, #-12]
   34650:	ldr	r0, [r0, #40]	; 0x28
   34654:	str	r0, [sp, #8]
   34658:	ldr	r0, [sp, #8]
   3465c:	add	r0, r0, #1
   34660:	str	r0, [sp, #8]
   34664:	ldr	r1, [sp, #12]
   34668:	cmp	r0, r1
   3466c:	ble	3467c <__assert_fail@plt+0x231e8>
   34670:	movw	r0, #0
   34674:	str	r0, [fp, #-4]
   34678:	b	34704 <__assert_fail@plt+0x23270>
   3467c:	ldr	r0, [fp, #-12]
   34680:	ldr	r1, [r0, #40]	; 0x28
   34684:	add	r1, r1, #1
   34688:	str	r1, [r0, #40]	; 0x28
   3468c:	ldr	r0, [fp, #-12]
   34690:	ldr	r0, [r0, #100]	; 0x64
   34694:	ldr	r1, [sp, #8]
   34698:	add	r0, r0, r1, lsl #2
   3469c:	ldr	r0, [r0]
   346a0:	movw	r1, #0
   346a4:	cmp	r0, r1
   346a8:	beq	34658 <__assert_fail@plt+0x231c4>
   346ac:	ldr	r0, [fp, #-8]
   346b0:	ldr	r1, [fp, #-12]
   346b4:	movw	r2, #0
   346b8:	bl	343b0 <__assert_fail@plt+0x22f1c>
   346bc:	str	r0, [sp, #16]
   346c0:	ldr	r0, [fp, #-8]
   346c4:	ldr	r0, [r0]
   346c8:	cmp	r0, #0
   346cc:	movw	r0, #0
   346d0:	str	r0, [sp, #4]
   346d4:	bne	346f0 <__assert_fail@plt+0x2325c>
   346d8:	ldr	r0, [sp, #16]
   346dc:	movw	r1, #0
   346e0:	cmp	r0, r1
   346e4:	movw	r0, #0
   346e8:	moveq	r0, #1
   346ec:	str	r0, [sp, #4]
   346f0:	ldr	r0, [sp, #4]
   346f4:	tst	r0, #1
   346f8:	bne	34640 <__assert_fail@plt+0x231ac>
   346fc:	ldr	r0, [sp, #16]
   34700:	str	r0, [fp, #-4]
   34704:	ldr	r0, [fp, #-4]
   34708:	mov	sp, fp
   3470c:	pop	{fp, pc}
   34710:	push	{fp, lr}
   34714:	mov	fp, sp
   34718:	sub	sp, sp, #24
   3471c:	str	r0, [fp, #-8]
   34720:	str	r1, [sp, #12]
   34724:	str	r2, [sp, #8]
   34728:	ldr	r0, [fp, #-8]
   3472c:	ldr	r0, [r0, #132]	; 0x84
   34730:	movw	r1, #0
   34734:	cmp	r0, r1
   34738:	beq	34740 <__assert_fail@plt+0x232ac>
   3473c:	b	34740 <__assert_fail@plt+0x232ac>
   34740:	ldr	r0, [fp, #-8]
   34744:	ldr	r0, [r0, #128]	; 0x80
   34748:	cmp	r0, #0
   3474c:	ble	34754 <__assert_fail@plt+0x232c0>
   34750:	b	34754 <__assert_fail@plt+0x232c0>
   34754:	ldr	r0, [fp, #-8]
   34758:	ldr	r0, [r0, #124]	; 0x7c
   3475c:	ldr	r1, [fp, #-8]
   34760:	ldr	r1, [r1, #128]	; 0x80
   34764:	cmp	r0, r1
   34768:	bne	347c8 <__assert_fail@plt+0x23334>
   3476c:	ldr	r0, [fp, #-8]
   34770:	ldr	r0, [r0, #128]	; 0x80
   34774:	lsl	r0, r0, #1
   34778:	str	r0, [sp, #4]
   3477c:	ldr	r0, [fp, #-8]
   34780:	ldr	r0, [r0, #132]	; 0x84
   34784:	ldr	r1, [sp, #4]
   34788:	lsl	r1, r1, #2
   3478c:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   34790:	str	r0, [sp]
   34794:	ldr	r0, [sp]
   34798:	movw	r1, #0
   3479c:	cmp	r0, r1
   347a0:	bne	347b0 <__assert_fail@plt+0x2331c>
   347a4:	movw	r0, #12
   347a8:	str	r0, [fp, #-4]
   347ac:	b	34854 <__assert_fail@plt+0x233c0>
   347b0:	ldr	r0, [sp]
   347b4:	ldr	r1, [fp, #-8]
   347b8:	str	r0, [r1, #132]	; 0x84
   347bc:	ldr	r0, [sp, #4]
   347c0:	ldr	r1, [fp, #-8]
   347c4:	str	r0, [r1, #128]	; 0x80
   347c8:	mov	r0, #1
   347cc:	mov	r1, #24
   347d0:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   347d4:	ldr	r1, [fp, #-8]
   347d8:	ldr	r2, [r1, #124]	; 0x7c
   347dc:	ldr	r1, [r1, #132]	; 0x84
   347e0:	str	r0, [r1, r2, lsl #2]
   347e4:	ldr	r0, [fp, #-8]
   347e8:	ldr	r1, [r0, #124]	; 0x7c
   347ec:	ldr	r0, [r0, #132]	; 0x84
   347f0:	add	r0, r0, r1, lsl #2
   347f4:	ldr	r0, [r0]
   347f8:	movw	r1, #0
   347fc:	cmp	r0, r1
   34800:	bne	34810 <__assert_fail@plt+0x2337c>
   34804:	movw	r0, #12
   34808:	str	r0, [fp, #-4]
   3480c:	b	34854 <__assert_fail@plt+0x233c0>
   34810:	ldr	r0, [sp, #12]
   34814:	ldr	r1, [fp, #-8]
   34818:	ldr	r2, [r1, #124]	; 0x7c
   3481c:	ldr	r1, [r1, #132]	; 0x84
   34820:	ldr	r1, [r1, r2, lsl #2]
   34824:	str	r0, [r1, #4]
   34828:	ldr	r0, [sp, #8]
   3482c:	ldr	r1, [fp, #-8]
   34830:	ldr	r2, [r1, #124]	; 0x7c
   34834:	ldr	r3, [r1, #132]	; 0x84
   34838:	add	ip, r2, #1
   3483c:	str	ip, [r1, #124]	; 0x7c
   34840:	add	r1, r3, r2, lsl #2
   34844:	ldr	r1, [r1]
   34848:	str	r0, [r1]
   3484c:	movw	r0, #0
   34850:	str	r0, [fp, #-4]
   34854:	ldr	r0, [fp, #-4]
   34858:	mov	sp, fp
   3485c:	pop	{fp, pc}
   34860:	push	{fp, lr}
   34864:	mov	fp, sp
   34868:	sub	sp, sp, #96	; 0x60
   3486c:	str	r0, [fp, #-8]
   34870:	str	r1, [fp, #-12]
   34874:	str	r2, [fp, #-16]
   34878:	ldr	r0, [fp, #-8]
   3487c:	ldr	r0, [r0, #84]	; 0x54
   34880:	str	r0, [fp, #-20]	; 0xffffffec
   34884:	ldr	r0, [fp, #-8]
   34888:	ldr	r0, [r0, #4]
   3488c:	str	r0, [fp, #-32]	; 0xffffffe0
   34890:	ldr	r0, [fp, #-8]
   34894:	ldr	r1, [fp, #-16]
   34898:	bl	35148 <__assert_fail@plt+0x23cb4>
   3489c:	str	r0, [fp, #-36]	; 0xffffffdc
   348a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   348a4:	cmn	r0, #1
   348a8:	beq	34908 <__assert_fail@plt+0x23474>
   348ac:	ldr	r0, [fp, #-8]
   348b0:	ldr	r0, [r0, #116]	; 0x74
   348b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   348b8:	movw	r2, #24
   348bc:	mul	r1, r1, r2
   348c0:	add	r0, r0, r1
   348c4:	str	r0, [fp, #-40]	; 0xffffffd8
   348c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   348cc:	ldr	r0, [r0]
   348d0:	ldr	r1, [fp, #-12]
   348d4:	cmp	r0, r1
   348d8:	bne	348e8 <__assert_fail@plt+0x23454>
   348dc:	movw	r0, #0
   348e0:	str	r0, [fp, #-4]
   348e4:	b	34df0 <__assert_fail@plt+0x2395c>
   348e8:	b	348ec <__assert_fail@plt+0x23458>
   348ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   348f0:	add	r1, r0, #24
   348f4:	str	r1, [fp, #-40]	; 0xffffffd8
   348f8:	ldrsb	r0, [r0, #20]
   348fc:	cmp	r0, #0
   34900:	bne	348c8 <__assert_fail@plt+0x23434>
   34904:	b	34908 <__assert_fail@plt+0x23474>
   34908:	ldr	r0, [fp, #-20]	; 0xffffffec
   3490c:	ldr	r0, [r0]
   34910:	ldr	r1, [fp, #-12]
   34914:	add	r0, r0, r1, lsl #3
   34918:	ldr	r0, [r0]
   3491c:	str	r0, [fp, #-24]	; 0xffffffe8
   34920:	movw	r0, #0
   34924:	str	r0, [fp, #-28]	; 0xffffffe4
   34928:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3492c:	ldr	r1, [fp, #-8]
   34930:	ldr	r1, [r1, #124]	; 0x7c
   34934:	cmp	r0, r1
   34938:	bge	34de8 <__assert_fail@plt+0x23954>
   3493c:	ldr	r0, [fp, #-8]
   34940:	ldr	r0, [r0, #132]	; 0x84
   34944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34948:	ldr	r0, [r0, r1, lsl #2]
   3494c:	str	r0, [sp, #48]	; 0x30
   34950:	ldr	r0, [fp, #-20]	; 0xffffffec
   34954:	ldr	r0, [r0]
   34958:	ldr	r1, [sp, #48]	; 0x30
   3495c:	ldr	r1, [r1, #4]
   34960:	add	r0, r0, r1, lsl #3
   34964:	ldr	r0, [r0]
   34968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3496c:	cmp	r0, r1
   34970:	beq	34978 <__assert_fail@plt+0x234e4>
   34974:	b	34dd8 <__assert_fail@plt+0x23944>
   34978:	ldr	r0, [sp, #48]	; 0x30
   3497c:	ldr	r0, [r0]
   34980:	str	r0, [sp, #36]	; 0x24
   34984:	ldr	r0, [fp, #-16]
   34988:	str	r0, [sp, #32]
   3498c:	movw	r0, #0
   34990:	str	r0, [sp, #40]	; 0x28
   34994:	ldr	r0, [sp, #40]	; 0x28
   34998:	ldr	r1, [sp, #48]	; 0x30
   3499c:	ldr	r1, [r1, #16]
   349a0:	cmp	r0, r1
   349a4:	bge	34b10 <__assert_fail@plt+0x2367c>
   349a8:	ldr	r0, [sp, #48]	; 0x30
   349ac:	ldr	r0, [r0, #20]
   349b0:	ldr	r1, [sp, #40]	; 0x28
   349b4:	add	r0, r0, r1, lsl #2
   349b8:	ldr	r0, [r0]
   349bc:	str	r0, [sp, #44]	; 0x2c
   349c0:	ldr	r0, [sp, #44]	; 0x2c
   349c4:	ldr	r0, [r0, #4]
   349c8:	ldr	r1, [sp, #36]	; 0x24
   349cc:	sub	r0, r0, r1
   349d0:	str	r0, [sp, #28]
   349d4:	ldr	r0, [sp, #28]
   349d8:	cmp	r0, #0
   349dc:	ble	34a88 <__assert_fail@plt+0x235f4>
   349e0:	ldr	r0, [sp, #32]
   349e4:	ldr	r1, [sp, #28]
   349e8:	add	r0, r0, r1
   349ec:	ldr	r1, [fp, #-8]
   349f0:	ldr	r1, [r1, #28]
   349f4:	cmp	r0, r1
   349f8:	ble	34a58 <__assert_fail@plt+0x235c4>
   349fc:	ldr	r0, [sp, #32]
   34a00:	ldr	r1, [sp, #28]
   34a04:	add	r0, r0, r1
   34a08:	ldr	r1, [fp, #-8]
   34a0c:	ldr	r1, [r1, #48]	; 0x30
   34a10:	cmp	r0, r1
   34a14:	ble	34a1c <__assert_fail@plt+0x23588>
   34a18:	b	34b10 <__assert_fail@plt+0x2367c>
   34a1c:	ldr	r0, [fp, #-8]
   34a20:	ldr	r1, [sp, #32]
   34a24:	ldr	r2, [sp, #28]
   34a28:	add	r1, r1, r2
   34a2c:	bl	35230 <__assert_fail@plt+0x23d9c>
   34a30:	str	r0, [fp, #-44]	; 0xffffffd4
   34a34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34a38:	cmp	r0, #0
   34a3c:	beq	34a4c <__assert_fail@plt+0x235b8>
   34a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34a44:	str	r0, [fp, #-4]
   34a48:	b	34df0 <__assert_fail@plt+0x2395c>
   34a4c:	ldr	r0, [fp, #-8]
   34a50:	ldr	r0, [r0, #4]
   34a54:	str	r0, [fp, #-32]	; 0xffffffe0
   34a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34a5c:	ldr	r1, [sp, #32]
   34a60:	add	r0, r0, r1
   34a64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34a68:	ldr	r2, [sp, #36]	; 0x24
   34a6c:	add	r1, r1, r2
   34a70:	ldr	r2, [sp, #28]
   34a74:	bl	11284 <memcmp@plt>
   34a78:	cmp	r0, #0
   34a7c:	beq	34a84 <__assert_fail@plt+0x235f0>
   34a80:	b	34b10 <__assert_fail@plt+0x2367c>
   34a84:	b	34a88 <__assert_fail@plt+0x235f4>
   34a88:	ldr	r0, [sp, #28]
   34a8c:	ldr	r1, [sp, #32]
   34a90:	add	r0, r1, r0
   34a94:	str	r0, [sp, #32]
   34a98:	ldr	r0, [sp, #28]
   34a9c:	ldr	r1, [sp, #36]	; 0x24
   34aa0:	add	r0, r1, r0
   34aa4:	str	r0, [sp, #36]	; 0x24
   34aa8:	ldr	r0, [fp, #-8]
   34aac:	ldr	r1, [sp, #48]	; 0x30
   34ab0:	ldr	r2, [sp, #44]	; 0x2c
   34ab4:	ldr	r3, [fp, #-12]
   34ab8:	ldr	ip, [fp, #-16]
   34abc:	str	ip, [sp]
   34ac0:	bl	3534c <__assert_fail@plt+0x23eb8>
   34ac4:	str	r0, [fp, #-44]	; 0xffffffd4
   34ac8:	ldr	r0, [fp, #-8]
   34acc:	ldr	r0, [r0, #4]
   34ad0:	str	r0, [fp, #-32]	; 0xffffffe0
   34ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34ad8:	cmp	r0, #1
   34adc:	bne	34ae4 <__assert_fail@plt+0x23650>
   34ae0:	b	34b00 <__assert_fail@plt+0x2366c>
   34ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34ae8:	cmp	r0, #0
   34aec:	beq	34afc <__assert_fail@plt+0x23668>
   34af0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34af4:	str	r0, [fp, #-4]
   34af8:	b	34df0 <__assert_fail@plt+0x2395c>
   34afc:	b	34b00 <__assert_fail@plt+0x2366c>
   34b00:	ldr	r0, [sp, #40]	; 0x28
   34b04:	add	r0, r0, #1
   34b08:	str	r0, [sp, #40]	; 0x28
   34b0c:	b	34994 <__assert_fail@plt+0x23500>
   34b10:	ldr	r0, [sp, #40]	; 0x28
   34b14:	ldr	r1, [sp, #48]	; 0x30
   34b18:	ldr	r1, [r1, #16]
   34b1c:	cmp	r0, r1
   34b20:	bge	34b28 <__assert_fail@plt+0x23694>
   34b24:	b	34dd8 <__assert_fail@plt+0x23944>
   34b28:	ldr	r0, [sp, #40]	; 0x28
   34b2c:	cmp	r0, #0
   34b30:	ble	34b40 <__assert_fail@plt+0x236ac>
   34b34:	ldr	r0, [sp, #36]	; 0x24
   34b38:	add	r0, r0, #1
   34b3c:	str	r0, [sp, #36]	; 0x24
   34b40:	b	34b44 <__assert_fail@plt+0x236b0>
   34b44:	ldr	r0, [sp, #36]	; 0x24
   34b48:	ldr	r1, [fp, #-16]
   34b4c:	cmp	r0, r1
   34b50:	bgt	34dd4 <__assert_fail@plt+0x23940>
   34b54:	ldr	r0, [sp, #36]	; 0x24
   34b58:	ldr	r1, [sp, #48]	; 0x30
   34b5c:	ldr	r1, [r1]
   34b60:	sub	r0, r0, r1
   34b64:	str	r0, [sp, #20]
   34b68:	ldr	r0, [sp, #20]
   34b6c:	cmp	r0, #0
   34b70:	ble	34c14 <__assert_fail@plt+0x23780>
   34b74:	ldr	r0, [sp, #32]
   34b78:	ldr	r1, [fp, #-8]
   34b7c:	ldr	r1, [r1, #28]
   34b80:	cmp	r0, r1
   34b84:	blt	34bd8 <__assert_fail@plt+0x23744>
   34b88:	ldr	r0, [sp, #32]
   34b8c:	ldr	r1, [fp, #-8]
   34b90:	ldr	r1, [r1, #48]	; 0x30
   34b94:	cmp	r0, r1
   34b98:	blt	34ba0 <__assert_fail@plt+0x2370c>
   34b9c:	b	34dd4 <__assert_fail@plt+0x23940>
   34ba0:	ldr	r0, [fp, #-8]
   34ba4:	ldr	r1, [sp, #32]
   34ba8:	add	r1, r1, #1
   34bac:	bl	34014 <__assert_fail@plt+0x22b80>
   34bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   34bb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34bb8:	cmp	r0, #0
   34bbc:	beq	34bcc <__assert_fail@plt+0x23738>
   34bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34bc4:	str	r0, [fp, #-4]
   34bc8:	b	34df0 <__assert_fail@plt+0x2395c>
   34bcc:	ldr	r0, [fp, #-8]
   34bd0:	ldr	r0, [r0, #4]
   34bd4:	str	r0, [fp, #-32]	; 0xffffffe0
   34bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34bdc:	ldr	r1, [sp, #32]
   34be0:	add	r2, r1, #1
   34be4:	str	r2, [sp, #32]
   34be8:	add	r0, r0, r1
   34bec:	ldrb	r0, [r0]
   34bf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34bf4:	ldr	r2, [sp, #36]	; 0x24
   34bf8:	sub	r2, r2, #1
   34bfc:	add	r1, r1, r2
   34c00:	ldrb	r1, [r1]
   34c04:	cmp	r0, r1
   34c08:	beq	34c10 <__assert_fail@plt+0x2377c>
   34c0c:	b	34dd4 <__assert_fail@plt+0x23940>
   34c10:	b	34c14 <__assert_fail@plt+0x23780>
   34c14:	ldr	r0, [fp, #-8]
   34c18:	ldr	r0, [r0, #100]	; 0x64
   34c1c:	ldr	r1, [sp, #36]	; 0x24
   34c20:	add	r0, r0, r1, lsl #2
   34c24:	ldr	r0, [r0]
   34c28:	movw	r1, #0
   34c2c:	cmp	r0, r1
   34c30:	bne	34c38 <__assert_fail@plt+0x237a4>
   34c34:	b	34dc4 <__assert_fail@plt+0x23930>
   34c38:	ldr	r0, [fp, #-8]
   34c3c:	ldr	r0, [r0, #100]	; 0x64
   34c40:	ldr	r1, [sp, #36]	; 0x24
   34c44:	add	r0, r0, r1, lsl #2
   34c48:	ldr	r0, [r0]
   34c4c:	add	r0, r0, #4
   34c50:	str	r0, [sp, #16]
   34c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   34c58:	ldr	r1, [sp, #16]
   34c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34c60:	movw	r3, #9
   34c64:	bl	35440 <__assert_fail@plt+0x23fac>
   34c68:	str	r0, [sp, #24]
   34c6c:	ldr	r0, [sp, #24]
   34c70:	cmn	r0, #1
   34c74:	bne	34c7c <__assert_fail@plt+0x237e8>
   34c78:	b	34dc4 <__assert_fail@plt+0x23930>
   34c7c:	ldr	r0, [sp, #48]	; 0x30
   34c80:	ldr	r0, [r0, #8]
   34c84:	movw	r1, #0
   34c88:	cmp	r0, r1
   34c8c:	bne	34cd8 <__assert_fail@plt+0x23844>
   34c90:	ldr	r0, [sp, #36]	; 0x24
   34c94:	ldr	r1, [sp, #48]	; 0x30
   34c98:	ldr	r1, [r1]
   34c9c:	sub	r0, r0, r1
   34ca0:	add	r1, r0, #1
   34ca4:	movw	r0, #12
   34ca8:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   34cac:	ldr	r1, [sp, #48]	; 0x30
   34cb0:	str	r0, [r1, #8]
   34cb4:	ldr	r0, [sp, #48]	; 0x30
   34cb8:	ldr	r0, [r0, #8]
   34cbc:	movw	r1, #0
   34cc0:	cmp	r0, r1
   34cc4:	bne	34cd4 <__assert_fail@plt+0x23840>
   34cc8:	movw	r0, #12
   34ccc:	str	r0, [fp, #-4]
   34cd0:	b	34df0 <__assert_fail@plt+0x2395c>
   34cd4:	b	34cd8 <__assert_fail@plt+0x23844>
   34cd8:	ldr	r0, [fp, #-8]
   34cdc:	ldr	r1, [sp, #48]	; 0x30
   34ce0:	ldr	r1, [r1, #8]
   34ce4:	ldr	r2, [sp, #48]	; 0x30
   34ce8:	ldr	r2, [r2, #4]
   34cec:	ldr	r3, [sp, #48]	; 0x30
   34cf0:	ldr	r3, [r3]
   34cf4:	ldr	ip, [sp, #24]
   34cf8:	ldr	lr, [sp, #36]	; 0x24
   34cfc:	str	ip, [sp]
   34d00:	str	lr, [sp, #4]
   34d04:	movw	ip, #9
   34d08:	str	ip, [sp, #8]
   34d0c:	bl	354f8 <__assert_fail@plt+0x24064>
   34d10:	str	r0, [fp, #-44]	; 0xffffffd4
   34d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34d18:	cmp	r0, #1
   34d1c:	bne	34d24 <__assert_fail@plt+0x23890>
   34d20:	b	34dc4 <__assert_fail@plt+0x23930>
   34d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34d28:	cmp	r0, #0
   34d2c:	beq	34d3c <__assert_fail@plt+0x238a8>
   34d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34d34:	str	r0, [fp, #-4]
   34d38:	b	34df0 <__assert_fail@plt+0x2395c>
   34d3c:	ldr	r0, [sp, #48]	; 0x30
   34d40:	ldr	r1, [sp, #24]
   34d44:	ldr	r2, [sp, #36]	; 0x24
   34d48:	bl	35c30 <__assert_fail@plt+0x2479c>
   34d4c:	str	r0, [sp, #44]	; 0x2c
   34d50:	ldr	r0, [sp, #44]	; 0x2c
   34d54:	movw	r1, #0
   34d58:	cmp	r0, r1
   34d5c:	bne	34d6c <__assert_fail@plt+0x238d8>
   34d60:	movw	r0, #12
   34d64:	str	r0, [fp, #-4]
   34d68:	b	34df0 <__assert_fail@plt+0x2395c>
   34d6c:	ldr	r0, [fp, #-8]
   34d70:	ldr	r1, [sp, #48]	; 0x30
   34d74:	ldr	r2, [sp, #44]	; 0x2c
   34d78:	ldr	r3, [fp, #-12]
   34d7c:	ldr	ip, [fp, #-16]
   34d80:	str	ip, [sp]
   34d84:	bl	3534c <__assert_fail@plt+0x23eb8>
   34d88:	str	r0, [fp, #-44]	; 0xffffffd4
   34d8c:	ldr	r0, [fp, #-8]
   34d90:	ldr	r0, [r0, #4]
   34d94:	str	r0, [fp, #-32]	; 0xffffffe0
   34d98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34d9c:	cmp	r0, #1
   34da0:	bne	34da8 <__assert_fail@plt+0x23914>
   34da4:	b	34dc4 <__assert_fail@plt+0x23930>
   34da8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34dac:	cmp	r0, #0
   34db0:	beq	34dc0 <__assert_fail@plt+0x2392c>
   34db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34db8:	str	r0, [fp, #-4]
   34dbc:	b	34df0 <__assert_fail@plt+0x2395c>
   34dc0:	b	34dc4 <__assert_fail@plt+0x23930>
   34dc4:	ldr	r0, [sp, #36]	; 0x24
   34dc8:	add	r0, r0, #1
   34dcc:	str	r0, [sp, #36]	; 0x24
   34dd0:	b	34b44 <__assert_fail@plt+0x236b0>
   34dd4:	b	34dd8 <__assert_fail@plt+0x23944>
   34dd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34ddc:	add	r0, r0, #1
   34de0:	str	r0, [fp, #-28]	; 0xffffffe4
   34de4:	b	34928 <__assert_fail@plt+0x23494>
   34de8:	movw	r0, #0
   34dec:	str	r0, [fp, #-4]
   34df0:	ldr	r0, [fp, #-4]
   34df4:	mov	sp, fp
   34df8:	pop	{fp, pc}
   34dfc:	push	{fp, lr}
   34e00:	mov	fp, sp
   34e04:	sub	sp, sp, #32
   34e08:	str	r0, [fp, #-8]
   34e0c:	str	r1, [fp, #-12]
   34e10:	str	r2, [sp, #16]
   34e14:	ldr	r0, [fp, #-12]
   34e18:	movw	r1, #0
   34e1c:	cmp	r0, r1
   34e20:	beq	34eac <__assert_fail@plt+0x23a18>
   34e24:	ldr	r0, [fp, #-12]
   34e28:	ldr	r0, [r0, #4]
   34e2c:	cmp	r0, #0
   34e30:	ble	34eac <__assert_fail@plt+0x23a18>
   34e34:	ldr	r0, [sp, #16]
   34e38:	movw	r1, #0
   34e3c:	cmp	r0, r1
   34e40:	beq	34eac <__assert_fail@plt+0x23a18>
   34e44:	ldr	r0, [sp, #16]
   34e48:	ldr	r0, [r0, #4]
   34e4c:	cmp	r0, #0
   34e50:	ble	34eac <__assert_fail@plt+0x23a18>
   34e54:	ldr	r0, [fp, #-12]
   34e58:	ldr	r0, [r0, #4]
   34e5c:	ldr	r1, [sp, #16]
   34e60:	ldr	r1, [r1, #4]
   34e64:	add	r0, r0, r1
   34e68:	ldr	r1, [fp, #-8]
   34e6c:	str	r0, [r1]
   34e70:	ldr	r0, [fp, #-8]
   34e74:	ldr	r0, [r0]
   34e78:	lsl	r0, r0, #2
   34e7c:	bl	3f908 <__assert_fail@plt+0x2e474>
   34e80:	ldr	r1, [fp, #-8]
   34e84:	str	r0, [r1, #8]
   34e88:	ldr	r0, [fp, #-8]
   34e8c:	ldr	r0, [r0, #8]
   34e90:	movw	r1, #0
   34e94:	cmp	r0, r1
   34e98:	bne	34ea8 <__assert_fail@plt+0x23a14>
   34e9c:	movw	r0, #12
   34ea0:	str	r0, [fp, #-4]
   34ea4:	b	3513c <__assert_fail@plt+0x23ca8>
   34ea8:	b	34f38 <__assert_fail@plt+0x23aa4>
   34eac:	ldr	r0, [fp, #-12]
   34eb0:	movw	r1, #0
   34eb4:	cmp	r0, r1
   34eb8:	beq	34ee0 <__assert_fail@plt+0x23a4c>
   34ebc:	ldr	r0, [fp, #-12]
   34ec0:	ldr	r0, [r0, #4]
   34ec4:	cmp	r0, #0
   34ec8:	ble	34ee0 <__assert_fail@plt+0x23a4c>
   34ecc:	ldr	r0, [fp, #-8]
   34ed0:	ldr	r1, [fp, #-12]
   34ed4:	bl	30c08 <__assert_fail@plt+0x1f774>
   34ed8:	str	r0, [fp, #-4]
   34edc:	b	3513c <__assert_fail@plt+0x23ca8>
   34ee0:	ldr	r0, [sp, #16]
   34ee4:	movw	r1, #0
   34ee8:	cmp	r0, r1
   34eec:	beq	34f14 <__assert_fail@plt+0x23a80>
   34ef0:	ldr	r0, [sp, #16]
   34ef4:	ldr	r0, [r0, #4]
   34ef8:	cmp	r0, #0
   34efc:	ble	34f14 <__assert_fail@plt+0x23a80>
   34f00:	ldr	r0, [fp, #-8]
   34f04:	ldr	r1, [sp, #16]
   34f08:	bl	30c08 <__assert_fail@plt+0x1f774>
   34f0c:	str	r0, [fp, #-4]
   34f10:	b	3513c <__assert_fail@plt+0x23ca8>
   34f14:	ldr	r0, [fp, #-8]
   34f18:	movw	r1, #0
   34f1c:	and	r1, r1, #255	; 0xff
   34f20:	movw	r2, #12
   34f24:	bl	113d4 <memset@plt>
   34f28:	b	34f2c <__assert_fail@plt+0x23a98>
   34f2c:	movw	r0, #0
   34f30:	str	r0, [fp, #-4]
   34f34:	b	3513c <__assert_fail@plt+0x23ca8>
   34f38:	movw	r0, #0
   34f3c:	str	r0, [sp, #4]
   34f40:	str	r0, [sp, #8]
   34f44:	str	r0, [sp, #12]
   34f48:	ldr	r0, [sp, #12]
   34f4c:	ldr	r1, [fp, #-12]
   34f50:	ldr	r1, [r1, #4]
   34f54:	cmp	r0, r1
   34f58:	movw	r0, #0
   34f5c:	str	r0, [sp]
   34f60:	bge	34f80 <__assert_fail@plt+0x23aec>
   34f64:	ldr	r0, [sp, #8]
   34f68:	ldr	r1, [sp, #16]
   34f6c:	ldr	r1, [r1, #4]
   34f70:	cmp	r0, r1
   34f74:	movw	r0, #0
   34f78:	movlt	r0, #1
   34f7c:	str	r0, [sp]
   34f80:	ldr	r0, [sp]
   34f84:	tst	r0, #1
   34f88:	beq	35060 <__assert_fail@plt+0x23bcc>
   34f8c:	ldr	r0, [fp, #-12]
   34f90:	ldr	r0, [r0, #8]
   34f94:	ldr	r1, [sp, #12]
   34f98:	ldr	r0, [r0, r1, lsl #2]
   34f9c:	ldr	r1, [sp, #16]
   34fa0:	ldr	r1, [r1, #8]
   34fa4:	ldr	r2, [sp, #8]
   34fa8:	add	r1, r1, r2, lsl #2
   34fac:	ldr	r1, [r1]
   34fb0:	cmp	r0, r1
   34fb4:	ble	34ff0 <__assert_fail@plt+0x23b5c>
   34fb8:	ldr	r0, [sp, #16]
   34fbc:	ldr	r0, [r0, #8]
   34fc0:	ldr	r1, [sp, #8]
   34fc4:	add	r2, r1, #1
   34fc8:	str	r2, [sp, #8]
   34fcc:	ldr	r0, [r0, r1, lsl #2]
   34fd0:	ldr	r1, [fp, #-8]
   34fd4:	ldr	r1, [r1, #8]
   34fd8:	ldr	r2, [sp, #4]
   34fdc:	add	r3, r2, #1
   34fe0:	str	r3, [sp, #4]
   34fe4:	add	r1, r1, r2, lsl #2
   34fe8:	str	r0, [r1]
   34fec:	b	34f48 <__assert_fail@plt+0x23ab4>
   34ff0:	ldr	r0, [fp, #-12]
   34ff4:	ldr	r0, [r0, #8]
   34ff8:	ldr	r1, [sp, #12]
   34ffc:	ldr	r0, [r0, r1, lsl #2]
   35000:	ldr	r1, [sp, #16]
   35004:	ldr	r1, [r1, #8]
   35008:	ldr	r2, [sp, #8]
   3500c:	add	r1, r1, r2, lsl #2
   35010:	ldr	r1, [r1]
   35014:	cmp	r0, r1
   35018:	bne	35028 <__assert_fail@plt+0x23b94>
   3501c:	ldr	r0, [sp, #8]
   35020:	add	r0, r0, #1
   35024:	str	r0, [sp, #8]
   35028:	ldr	r0, [fp, #-12]
   3502c:	ldr	r0, [r0, #8]
   35030:	ldr	r1, [sp, #12]
   35034:	add	r2, r1, #1
   35038:	str	r2, [sp, #12]
   3503c:	ldr	r0, [r0, r1, lsl #2]
   35040:	ldr	r1, [fp, #-8]
   35044:	ldr	r1, [r1, #8]
   35048:	ldr	r2, [sp, #4]
   3504c:	add	r3, r2, #1
   35050:	str	r3, [sp, #4]
   35054:	add	r1, r1, r2, lsl #2
   35058:	str	r0, [r1]
   3505c:	b	34f48 <__assert_fail@plt+0x23ab4>
   35060:	ldr	r0, [sp, #12]
   35064:	ldr	r1, [fp, #-12]
   35068:	ldr	r1, [r1, #4]
   3506c:	cmp	r0, r1
   35070:	bge	350c4 <__assert_fail@plt+0x23c30>
   35074:	ldr	r0, [fp, #-8]
   35078:	ldr	r0, [r0, #8]
   3507c:	ldr	r1, [sp, #4]
   35080:	add	r0, r0, r1, lsl #2
   35084:	ldr	r1, [fp, #-12]
   35088:	ldr	r2, [r1, #4]
   3508c:	ldr	r1, [r1, #8]
   35090:	ldr	r3, [sp, #12]
   35094:	add	r1, r1, r3, lsl #2
   35098:	sub	r2, r2, r3
   3509c:	lsl	r2, r2, #2
   350a0:	bl	11248 <memcpy@plt>
   350a4:	ldr	r0, [fp, #-12]
   350a8:	ldr	r0, [r0, #4]
   350ac:	ldr	r1, [sp, #12]
   350b0:	sub	r0, r0, r1
   350b4:	ldr	r1, [sp, #4]
   350b8:	add	r0, r1, r0
   350bc:	str	r0, [sp, #4]
   350c0:	b	35128 <__assert_fail@plt+0x23c94>
   350c4:	ldr	r0, [sp, #8]
   350c8:	ldr	r1, [sp, #16]
   350cc:	ldr	r1, [r1, #4]
   350d0:	cmp	r0, r1
   350d4:	bge	35124 <__assert_fail@plt+0x23c90>
   350d8:	ldr	r0, [fp, #-8]
   350dc:	ldr	r0, [r0, #8]
   350e0:	ldr	r1, [sp, #4]
   350e4:	add	r0, r0, r1, lsl #2
   350e8:	ldr	r1, [sp, #16]
   350ec:	ldr	r2, [r1, #4]
   350f0:	ldr	r1, [r1, #8]
   350f4:	ldr	r3, [sp, #8]
   350f8:	add	r1, r1, r3, lsl #2
   350fc:	sub	r2, r2, r3
   35100:	lsl	r2, r2, #2
   35104:	bl	11248 <memcpy@plt>
   35108:	ldr	r0, [sp, #16]
   3510c:	ldr	r0, [r0, #4]
   35110:	ldr	r1, [sp, #8]
   35114:	sub	r0, r0, r1
   35118:	ldr	r1, [sp, #4]
   3511c:	add	r0, r1, r0
   35120:	str	r0, [sp, #4]
   35124:	b	35128 <__assert_fail@plt+0x23c94>
   35128:	ldr	r0, [sp, #4]
   3512c:	ldr	r1, [fp, #-8]
   35130:	str	r0, [r1, #4]
   35134:	movw	r0, #0
   35138:	str	r0, [fp, #-4]
   3513c:	ldr	r0, [fp, #-4]
   35140:	mov	sp, fp
   35144:	pop	{fp, pc}
   35148:	sub	sp, sp, #28
   3514c:	str	r0, [sp, #20]
   35150:	str	r1, [sp, #16]
   35154:	ldr	r0, [sp, #20]
   35158:	ldr	r0, [r0, #108]	; 0x6c
   3515c:	str	r0, [sp, #8]
   35160:	str	r0, [sp]
   35164:	movw	r0, #0
   35168:	str	r0, [sp, #12]
   3516c:	ldr	r0, [sp, #12]
   35170:	ldr	r1, [sp, #8]
   35174:	cmp	r0, r1
   35178:	bge	351d8 <__assert_fail@plt+0x23d44>
   3517c:	ldr	r0, [sp, #12]
   35180:	ldr	r1, [sp, #8]
   35184:	add	r0, r0, r1
   35188:	movw	r1, #2
   3518c:	sdiv	r0, r0, r1
   35190:	str	r0, [sp, #4]
   35194:	ldr	r0, [sp, #20]
   35198:	ldr	r0, [r0, #116]	; 0x74
   3519c:	ldr	r1, [sp, #4]
   351a0:	movw	r2, #24
   351a4:	mul	r1, r1, r2
   351a8:	add	r0, r0, r1
   351ac:	ldr	r0, [r0, #4]
   351b0:	ldr	r1, [sp, #16]
   351b4:	cmp	r0, r1
   351b8:	bge	351cc <__assert_fail@plt+0x23d38>
   351bc:	ldr	r0, [sp, #4]
   351c0:	add	r0, r0, #1
   351c4:	str	r0, [sp, #12]
   351c8:	b	351d4 <__assert_fail@plt+0x23d40>
   351cc:	ldr	r0, [sp, #4]
   351d0:	str	r0, [sp, #8]
   351d4:	b	3516c <__assert_fail@plt+0x23cd8>
   351d8:	ldr	r0, [sp, #12]
   351dc:	ldr	r1, [sp]
   351e0:	cmp	r0, r1
   351e4:	bge	3521c <__assert_fail@plt+0x23d88>
   351e8:	ldr	r0, [sp, #20]
   351ec:	ldr	r0, [r0, #116]	; 0x74
   351f0:	ldr	r1, [sp, #12]
   351f4:	movw	r2, #24
   351f8:	mul	r1, r1, r2
   351fc:	add	r0, r0, r1
   35200:	ldr	r0, [r0, #4]
   35204:	ldr	r1, [sp, #16]
   35208:	cmp	r0, r1
   3520c:	bne	3521c <__assert_fail@plt+0x23d88>
   35210:	ldr	r0, [sp, #12]
   35214:	str	r0, [sp, #24]
   35218:	b	35224 <__assert_fail@plt+0x23d90>
   3521c:	mvn	r0, #0
   35220:	str	r0, [sp, #24]
   35224:	ldr	r0, [sp, #24]
   35228:	add	sp, sp, #28
   3522c:	bx	lr
   35230:	push	{fp, lr}
   35234:	mov	fp, sp
   35238:	sub	sp, sp, #24
   3523c:	str	r0, [fp, #-8]
   35240:	str	r1, [sp, #12]
   35244:	ldr	r0, [fp, #-8]
   35248:	ldr	r0, [r0, #104]	; 0x68
   3524c:	str	r0, [sp, #8]
   35250:	ldr	r0, [sp, #12]
   35254:	ldr	r1, [fp, #-8]
   35258:	ldr	r1, [r1, #36]	; 0x24
   3525c:	cmp	r0, r1
   35260:	blt	3527c <__assert_fail@plt+0x23de8>
   35264:	ldr	r0, [fp, #-8]
   35268:	ldr	r0, [r0, #36]	; 0x24
   3526c:	ldr	r1, [fp, #-8]
   35270:	ldr	r1, [r1, #48]	; 0x30
   35274:	cmp	r0, r1
   35278:	blt	352a8 <__assert_fail@plt+0x23e14>
   3527c:	ldr	r0, [sp, #12]
   35280:	ldr	r1, [fp, #-8]
   35284:	ldr	r1, [r1, #28]
   35288:	cmp	r0, r1
   3528c:	blt	352d8 <__assert_fail@plt+0x23e44>
   35290:	ldr	r0, [fp, #-8]
   35294:	ldr	r0, [r0, #28]
   35298:	ldr	r1, [fp, #-8]
   3529c:	ldr	r1, [r1, #48]	; 0x30
   352a0:	cmp	r0, r1
   352a4:	bge	352d8 <__assert_fail@plt+0x23e44>
   352a8:	ldr	r0, [fp, #-8]
   352ac:	ldr	r1, [sp, #12]
   352b0:	add	r1, r1, #1
   352b4:	bl	34014 <__assert_fail@plt+0x22b80>
   352b8:	str	r0, [sp, #4]
   352bc:	ldr	r0, [sp, #4]
   352c0:	cmp	r0, #0
   352c4:	beq	352d4 <__assert_fail@plt+0x23e40>
   352c8:	ldr	r0, [sp, #4]
   352cc:	str	r0, [fp, #-4]
   352d0:	b	35340 <__assert_fail@plt+0x23eac>
   352d4:	b	352d8 <__assert_fail@plt+0x23e44>
   352d8:	ldr	r0, [sp, #8]
   352dc:	ldr	r1, [sp, #12]
   352e0:	cmp	r0, r1
   352e4:	bge	35338 <__assert_fail@plt+0x23ea4>
   352e8:	ldr	r0, [fp, #-8]
   352ec:	ldr	r0, [r0, #100]	; 0x64
   352f0:	movw	r1, #0
   352f4:	cmp	r0, r1
   352f8:	beq	35300 <__assert_fail@plt+0x23e6c>
   352fc:	b	35300 <__assert_fail@plt+0x23e6c>
   35300:	ldr	r0, [fp, #-8]
   35304:	ldr	r0, [r0, #100]	; 0x64
   35308:	ldr	r1, [sp, #8]
   3530c:	add	r0, r0, r1, lsl #2
   35310:	add	r0, r0, #4
   35314:	ldr	r2, [sp, #12]
   35318:	sub	r1, r2, r1
   3531c:	lsl	r2, r1, #2
   35320:	movw	r1, #0
   35324:	and	r1, r1, #255	; 0xff
   35328:	bl	113d4 <memset@plt>
   3532c:	ldr	r0, [sp, #12]
   35330:	ldr	r1, [fp, #-8]
   35334:	str	r0, [r1, #104]	; 0x68
   35338:	movw	r0, #0
   3533c:	str	r0, [fp, #-4]
   35340:	ldr	r0, [fp, #-4]
   35344:	mov	sp, fp
   35348:	pop	{fp, pc}
   3534c:	push	{r4, sl, fp, lr}
   35350:	add	fp, sp, #8
   35354:	sub	sp, sp, #48	; 0x30
   35358:	ldr	ip, [fp, #8]
   3535c:	str	r0, [fp, #-16]
   35360:	str	r1, [fp, #-20]	; 0xffffffec
   35364:	str	r2, [fp, #-24]	; 0xffffffe8
   35368:	str	r3, [sp, #28]
   3536c:	ldr	r0, [fp, #-16]
   35370:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35374:	add	r1, r1, #8
   35378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3537c:	ldr	r2, [r2]
   35380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35384:	ldr	r3, [r3, #4]
   35388:	ldr	lr, [sp, #28]
   3538c:	ldr	r4, [fp, #8]
   35390:	str	lr, [sp]
   35394:	str	r4, [sp, #4]
   35398:	movw	lr, #8
   3539c:	str	lr, [sp, #8]
   353a0:	str	ip, [sp, #16]
   353a4:	bl	354f8 <__assert_fail@plt+0x24064>
   353a8:	str	r0, [sp, #24]
   353ac:	ldr	r0, [sp, #24]
   353b0:	cmp	r0, #0
   353b4:	beq	353c4 <__assert_fail@plt+0x23f30>
   353b8:	ldr	r0, [sp, #24]
   353bc:	str	r0, [fp, #-12]
   353c0:	b	35434 <__assert_fail@plt+0x23fa0>
   353c4:	ldr	r0, [fp, #-16]
   353c8:	ldr	r1, [sp, #28]
   353cc:	ldr	r2, [fp, #8]
   353d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   353d4:	ldr	r3, [r3]
   353d8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   353dc:	ldr	ip, [ip, #4]
   353e0:	str	ip, [sp]
   353e4:	bl	35d34 <__assert_fail@plt+0x248a0>
   353e8:	str	r0, [sp, #24]
   353ec:	ldr	r0, [sp, #24]
   353f0:	cmp	r0, #0
   353f4:	beq	35404 <__assert_fail@plt+0x23f70>
   353f8:	ldr	r0, [sp, #24]
   353fc:	str	r0, [fp, #-12]
   35400:	b	35434 <__assert_fail@plt+0x23fa0>
   35404:	ldr	r0, [fp, #8]
   35408:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3540c:	ldr	r1, [r1, #4]
   35410:	add	r0, r0, r1
   35414:	ldr	r1, [fp, #-20]	; 0xffffffec
   35418:	ldr	r1, [r1]
   3541c:	sub	r0, r0, r1
   35420:	str	r0, [sp, #20]
   35424:	ldr	r0, [fp, #-16]
   35428:	ldr	r1, [sp, #20]
   3542c:	bl	35230 <__assert_fail@plt+0x23d9c>
   35430:	str	r0, [fp, #-12]
   35434:	ldr	r0, [fp, #-12]
   35438:	sub	sp, fp, #8
   3543c:	pop	{r4, sl, fp, pc}
   35440:	sub	sp, sp, #32
   35444:	str	r0, [sp, #24]
   35448:	str	r1, [sp, #20]
   3544c:	str	r2, [sp, #16]
   35450:	str	r3, [sp, #12]
   35454:	movw	r0, #0
   35458:	str	r0, [sp, #8]
   3545c:	ldr	r0, [sp, #8]
   35460:	ldr	r1, [sp, #20]
   35464:	ldr	r1, [r1, #4]
   35468:	cmp	r0, r1
   3546c:	bge	354e4 <__assert_fail@plt+0x24050>
   35470:	ldr	r0, [sp, #20]
   35474:	ldr	r0, [r0, #8]
   35478:	ldr	r1, [sp, #8]
   3547c:	ldr	r0, [r0, r1, lsl #2]
   35480:	str	r0, [sp, #4]
   35484:	ldr	r0, [sp, #24]
   35488:	ldr	r0, [r0]
   3548c:	ldr	r1, [sp, #4]
   35490:	add	r0, r0, r1, lsl #3
   35494:	str	r0, [sp]
   35498:	ldr	r0, [sp]
   3549c:	ldr	r0, [r0, #4]
   354a0:	and	r0, r0, #255	; 0xff
   354a4:	ldr	r1, [sp, #12]
   354a8:	cmp	r0, r1
   354ac:	bne	354d0 <__assert_fail@plt+0x2403c>
   354b0:	ldr	r0, [sp]
   354b4:	ldr	r0, [r0]
   354b8:	ldr	r1, [sp, #16]
   354bc:	cmp	r0, r1
   354c0:	bne	354d0 <__assert_fail@plt+0x2403c>
   354c4:	ldr	r0, [sp, #4]
   354c8:	str	r0, [sp, #28]
   354cc:	b	354ec <__assert_fail@plt+0x24058>
   354d0:	b	354d4 <__assert_fail@plt+0x24040>
   354d4:	ldr	r0, [sp, #8]
   354d8:	add	r0, r0, #1
   354dc:	str	r0, [sp, #8]
   354e0:	b	3545c <__assert_fail@plt+0x23fc8>
   354e4:	mvn	r0, #0
   354e8:	str	r0, [sp, #28]
   354ec:	ldr	r0, [sp, #28]
   354f0:	add	sp, sp, #32
   354f4:	bx	lr
   354f8:	push	{r4, sl, fp, lr}
   354fc:	add	fp, sp, #8
   35500:	sub	sp, sp, #128	; 0x80
   35504:	ldr	ip, [fp, #16]
   35508:	ldr	lr, [fp, #12]
   3550c:	ldr	r4, [fp, #8]
   35510:	str	r0, [fp, #-16]
   35514:	str	r1, [fp, #-20]	; 0xffffffec
   35518:	str	r2, [fp, #-24]	; 0xffffffe8
   3551c:	str	r3, [fp, #-28]	; 0xffffffe4
   35520:	ldr	r0, [fp, #-16]
   35524:	ldr	r0, [r0, #84]	; 0x54
   35528:	str	r0, [fp, #-32]	; 0xffffffe0
   3552c:	mov	r0, #0
   35530:	str	r0, [fp, #-36]	; 0xffffffdc
   35534:	str	r0, [fp, #-56]	; 0xffffffc8
   35538:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3553c:	ldr	r0, [r0]
   35540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35544:	add	r0, r0, r1, lsl #3
   35548:	ldr	r0, [r0]
   3554c:	str	r0, [fp, #-40]	; 0xffffffd8
   35550:	ldr	r0, [fp, #-20]	; 0xffffffec
   35554:	ldr	r0, [r0, #4]
   35558:	ldr	r1, [fp, #12]
   3555c:	ldr	r2, [fp, #-16]
   35560:	ldr	r2, [r2, #120]	; 0x78
   35564:	add	r1, r1, r2
   35568:	add	r1, r1, #1
   3556c:	cmp	r0, r1
   35570:	bge	3565c <__assert_fail@plt+0x241c8>
   35574:	ldr	r0, [pc, #1708]	; 35c28 <__assert_fail@plt+0x24794>
   35578:	ldr	r1, [fp, #-20]	; 0xffffffec
   3557c:	ldr	r1, [r1, #4]
   35580:	str	r1, [sp, #48]	; 0x30
   35584:	ldr	r1, [fp, #12]
   35588:	ldr	r2, [fp, #-16]
   3558c:	ldr	r2, [r2, #120]	; 0x78
   35590:	add	r1, r1, r2
   35594:	add	r1, r1, #1
   35598:	str	r1, [sp, #44]	; 0x2c
   3559c:	ldr	r1, [sp, #48]	; 0x30
   355a0:	sub	r0, r0, r1
   355a4:	ldr	r1, [sp, #44]	; 0x2c
   355a8:	cmp	r0, r1
   355ac:	bge	355bc <__assert_fail@plt+0x24128>
   355b0:	movw	r0, #12
   355b4:	str	r0, [fp, #-12]
   355b8:	b	35c1c <__assert_fail@plt+0x24788>
   355bc:	ldr	r0, [pc, #1640]	; 35c2c <__assert_fail@plt+0x24798>
   355c0:	ldr	r1, [sp, #48]	; 0x30
   355c4:	ldr	r2, [sp, #44]	; 0x2c
   355c8:	add	r1, r1, r2
   355cc:	str	r1, [sp, #40]	; 0x28
   355d0:	ldr	r1, [sp, #40]	; 0x28
   355d4:	cmp	r0, r1
   355d8:	bcs	355e8 <__assert_fail@plt+0x24154>
   355dc:	movw	r0, #12
   355e0:	str	r0, [fp, #-12]
   355e4:	b	35c1c <__assert_fail@plt+0x24788>
   355e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   355ec:	ldr	r0, [r0, #8]
   355f0:	ldr	r1, [sp, #40]	; 0x28
   355f4:	lsl	r1, r1, #2
   355f8:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   355fc:	str	r0, [sp, #52]	; 0x34
   35600:	ldr	r0, [sp, #52]	; 0x34
   35604:	movw	r1, #0
   35608:	cmp	r0, r1
   3560c:	bne	3561c <__assert_fail@plt+0x24188>
   35610:	movw	r0, #12
   35614:	str	r0, [fp, #-12]
   35618:	b	35c1c <__assert_fail@plt+0x24788>
   3561c:	ldr	r0, [sp, #52]	; 0x34
   35620:	ldr	r1, [fp, #-20]	; 0xffffffec
   35624:	str	r0, [r1, #8]
   35628:	ldr	r0, [sp, #40]	; 0x28
   3562c:	ldr	r1, [fp, #-20]	; 0xffffffec
   35630:	str	r0, [r1, #4]
   35634:	ldr	r0, [sp, #52]	; 0x34
   35638:	ldr	r1, [sp, #48]	; 0x30
   3563c:	add	r0, r0, r1, lsl #2
   35640:	ldr	r2, [fp, #-20]	; 0xffffffec
   35644:	ldr	r2, [r2, #4]
   35648:	sub	r1, r2, r1
   3564c:	lsl	r2, r1, #2
   35650:	movw	r1, #0
   35654:	and	r1, r1, #255	; 0xff
   35658:	bl	113d4 <memset@plt>
   3565c:	ldr	r0, [fp, #-20]	; 0xffffffec
   35660:	ldr	r0, [r0]
   35664:	cmp	r0, #0
   35668:	beq	3567c <__assert_fail@plt+0x241e8>
   3566c:	ldr	r0, [fp, #-20]	; 0xffffffec
   35670:	ldr	r0, [r0]
   35674:	str	r0, [sp, #36]	; 0x24
   35678:	b	35684 <__assert_fail@plt+0x241f0>
   3567c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35680:	str	r0, [sp, #36]	; 0x24
   35684:	ldr	r0, [sp, #36]	; 0x24
   35688:	str	r0, [fp, #-48]	; 0xffffffd0
   3568c:	ldr	r0, [fp, #-16]
   35690:	ldr	r0, [r0, #100]	; 0x64
   35694:	str	r0, [sp, #60]	; 0x3c
   35698:	ldr	r0, [fp, #-16]
   3569c:	ldr	r0, [r0, #40]	; 0x28
   356a0:	str	r0, [fp, #-44]	; 0xffffffd4
   356a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   356a8:	ldr	r0, [r0, #8]
   356ac:	ldr	r1, [fp, #-16]
   356b0:	str	r0, [r1, #100]	; 0x64
   356b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   356b8:	ldr	r1, [fp, #-16]
   356bc:	str	r0, [r1, #40]	; 0x28
   356c0:	ldr	r0, [fp, #-16]
   356c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   356c8:	sub	r1, r1, #1
   356cc:	ldr	r2, [fp, #-16]
   356d0:	ldr	r2, [r2, #88]	; 0x58
   356d4:	bl	33608 <__assert_fail@plt+0x22174>
   356d8:	str	r0, [sp, #56]	; 0x38
   356dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   356e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   356e4:	cmp	r0, r1
   356e8:	bne	35750 <__assert_fail@plt+0x242bc>
   356ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   356f0:	add	r0, sp, #64	; 0x40
   356f4:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   356f8:	str	r0, [fp, #-36]	; 0xffffffdc
   356fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35700:	cmp	r0, #0
   35704:	beq	35714 <__assert_fail@plt+0x24280>
   35708:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3570c:	str	r0, [fp, #-12]
   35710:	b	35c1c <__assert_fail@plt+0x24788>
   35714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35718:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3571c:	ldr	r3, [fp, #16]
   35720:	add	r1, sp, #64	; 0x40
   35724:	bl	35f8c <__assert_fail@plt+0x24af8>
   35728:	str	r0, [fp, #-36]	; 0xffffffdc
   3572c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35730:	cmp	r0, #0
   35734:	beq	3574c <__assert_fail@plt+0x242b8>
   35738:	ldr	r0, [sp, #72]	; 0x48
   3573c:	bl	1388c <__assert_fail@plt+0x23f8>
   35740:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35744:	str	r0, [fp, #-12]
   35748:	b	35c1c <__assert_fail@plt+0x24788>
   3574c:	b	357d8 <__assert_fail@plt+0x24344>
   35750:	ldr	r0, [fp, #-16]
   35754:	ldr	r0, [r0, #100]	; 0x64
   35758:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3575c:	add	r0, r0, r1, lsl #2
   35760:	ldr	r0, [r0]
   35764:	str	r0, [fp, #-56]	; 0xffffffc8
   35768:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3576c:	movw	r1, #0
   35770:	cmp	r0, r1
   35774:	beq	357c0 <__assert_fail@plt+0x2432c>
   35778:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3577c:	ldrb	r0, [r0, #52]	; 0x34
   35780:	ubfx	r0, r0, #6, #1
   35784:	and	r0, r0, #255	; 0xff
   35788:	cmp	r0, #0
   3578c:	beq	357c0 <__assert_fail@plt+0x2432c>
   35790:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35794:	add	r1, r0, #4
   35798:	add	r0, sp, #64	; 0x40
   3579c:	bl	30c08 <__assert_fail@plt+0x1f774>
   357a0:	str	r0, [fp, #-36]	; 0xffffffdc
   357a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   357a8:	cmp	r0, #0
   357ac:	beq	357bc <__assert_fail@plt+0x24328>
   357b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   357b4:	str	r0, [fp, #-12]
   357b8:	b	35c1c <__assert_fail@plt+0x24788>
   357bc:	b	357d4 <__assert_fail@plt+0x24340>
   357c0:	add	r0, sp, #64	; 0x40
   357c4:	movw	r1, #0
   357c8:	and	r1, r1, #255	; 0xff
   357cc:	movw	r2, #12
   357d0:	bl	113d4 <memset@plt>
   357d4:	b	357d8 <__assert_fail@plt+0x24344>
   357d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   357dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   357e0:	cmp	r0, r1
   357e4:	beq	35810 <__assert_fail@plt+0x2437c>
   357e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   357ec:	movw	r1, #0
   357f0:	cmp	r0, r1
   357f4:	beq	358e8 <__assert_fail@plt+0x24454>
   357f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   357fc:	ldrb	r0, [r0, #52]	; 0x34
   35800:	ubfx	r0, r0, #6, #1
   35804:	and	r0, r0, #255	; 0xff
   35808:	cmp	r0, #0
   3580c:	beq	358e8 <__assert_fail@plt+0x24454>
   35810:	ldr	r0, [sp, #68]	; 0x44
   35814:	cmp	r0, #0
   35818:	beq	3586c <__assert_fail@plt+0x243d8>
   3581c:	ldr	r0, [fp, #-16]
   35820:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35828:	ldr	r1, [fp, #16]
   3582c:	add	ip, sp, #64	; 0x40
   35830:	str	r1, [sp, #32]
   35834:	mov	r1, ip
   35838:	ldr	ip, [sp, #32]
   3583c:	str	ip, [sp]
   35840:	bl	36130 <__assert_fail@plt+0x24c9c>
   35844:	str	r0, [fp, #-36]	; 0xffffffdc
   35848:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3584c:	cmp	r0, #0
   35850:	beq	35868 <__assert_fail@plt+0x243d4>
   35854:	ldr	r0, [sp, #72]	; 0x48
   35858:	bl	1388c <__assert_fail@plt+0x23f8>
   3585c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35860:	str	r0, [fp, #-12]
   35864:	b	35c1c <__assert_fail@plt+0x24788>
   35868:	b	3586c <__assert_fail@plt+0x243d8>
   3586c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35870:	ldr	r3, [sp, #56]	; 0x38
   35874:	sub	r0, fp, #36	; 0x24
   35878:	add	r2, sp, #64	; 0x40
   3587c:	bl	30dcc <__assert_fail@plt+0x1f938>
   35880:	str	r0, [fp, #-56]	; 0xffffffc8
   35884:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35888:	movw	r1, #0
   3588c:	cmp	r0, r1
   35890:	movw	r0, #0
   35894:	str	r0, [sp, #28]
   35898:	bne	358b0 <__assert_fail@plt+0x2441c>
   3589c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   358a0:	cmp	r0, #0
   358a4:	movw	r0, #0
   358a8:	movne	r0, #1
   358ac:	str	r0, [sp, #28]
   358b0:	ldr	r0, [sp, #28]
   358b4:	tst	r0, #1
   358b8:	beq	358d0 <__assert_fail@plt+0x2443c>
   358bc:	ldr	r0, [sp, #72]	; 0x48
   358c0:	bl	1388c <__assert_fail@plt+0x23f8>
   358c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   358c8:	str	r0, [fp, #-12]
   358cc:	b	35c1c <__assert_fail@plt+0x24788>
   358d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   358d4:	ldr	r1, [fp, #-16]
   358d8:	ldr	r1, [r1, #100]	; 0x64
   358dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   358e0:	add	r1, r1, r2, lsl #2
   358e4:	str	r0, [r1]
   358e8:	movw	r0, #0
   358ec:	str	r0, [fp, #-52]	; 0xffffffcc
   358f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   358f4:	ldr	r1, [fp, #12]
   358f8:	cmp	r0, r1
   358fc:	movw	r0, #0
   35900:	str	r0, [sp, #24]
   35904:	bge	35924 <__assert_fail@plt+0x24490>
   35908:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3590c:	ldr	r1, [fp, #-16]
   35910:	ldr	r1, [r1, #120]	; 0x78
   35914:	cmp	r0, r1
   35918:	movw	r0, #0
   3591c:	movle	r0, #1
   35920:	str	r0, [sp, #24]
   35924:	ldr	r0, [sp, #24]
   35928:	tst	r0, #1
   3592c:	beq	35b68 <__assert_fail@plt+0x246d4>
   35930:	mov	r0, #0
   35934:	str	r0, [sp, #68]	; 0x44
   35938:	ldr	r0, [fp, #-16]
   3593c:	ldr	r0, [r0, #100]	; 0x64
   35940:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35944:	add	r1, r1, #1
   35948:	add	r0, r0, r1, lsl #2
   3594c:	ldr	r0, [r0]
   35950:	movw	r1, #0
   35954:	cmp	r0, r1
   35958:	beq	359a8 <__assert_fail@plt+0x24514>
   3595c:	ldr	r0, [fp, #-16]
   35960:	ldr	r0, [r0, #100]	; 0x64
   35964:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35968:	add	r1, r1, #1
   3596c:	add	r0, r0, r1, lsl #2
   35970:	ldr	r0, [r0]
   35974:	add	r1, r0, #4
   35978:	add	r0, sp, #64	; 0x40
   3597c:	bl	30330 <__assert_fail@plt+0x1ee9c>
   35980:	str	r0, [fp, #-36]	; 0xffffffdc
   35984:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35988:	cmp	r0, #0
   3598c:	beq	359a4 <__assert_fail@plt+0x24510>
   35990:	ldr	r0, [sp, #72]	; 0x48
   35994:	bl	1388c <__assert_fail@plt+0x23f8>
   35998:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3599c:	str	r0, [fp, #-12]
   359a0:	b	35c1c <__assert_fail@plt+0x24788>
   359a4:	b	359a8 <__assert_fail@plt+0x24514>
   359a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   359ac:	movw	r1, #0
   359b0:	cmp	r0, r1
   359b4:	beq	359f8 <__assert_fail@plt+0x24564>
   359b8:	ldr	r0, [fp, #-16]
   359bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   359c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   359c4:	add	r2, r2, #16
   359c8:	add	r3, sp, #64	; 0x40
   359cc:	bl	36500 <__assert_fail@plt+0x2506c>
   359d0:	str	r0, [fp, #-36]	; 0xffffffdc
   359d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   359d8:	cmp	r0, #0
   359dc:	beq	359f4 <__assert_fail@plt+0x24560>
   359e0:	ldr	r0, [sp, #72]	; 0x48
   359e4:	bl	1388c <__assert_fail@plt+0x23f8>
   359e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   359ec:	str	r0, [fp, #-12]
   359f0:	b	35c1c <__assert_fail@plt+0x24788>
   359f4:	b	359f8 <__assert_fail@plt+0x24564>
   359f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   359fc:	add	r0, r0, #1
   35a00:	str	r0, [fp, #-48]	; 0xffffffd0
   35a04:	ldr	r0, [sp, #68]	; 0x44
   35a08:	cmp	r0, #0
   35a0c:	beq	35a98 <__assert_fail@plt+0x24604>
   35a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35a18:	ldr	r3, [fp, #16]
   35a1c:	add	r1, sp, #64	; 0x40
   35a20:	bl	35f8c <__assert_fail@plt+0x24af8>
   35a24:	str	r0, [fp, #-36]	; 0xffffffdc
   35a28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35a2c:	cmp	r0, #0
   35a30:	beq	35a48 <__assert_fail@plt+0x245b4>
   35a34:	ldr	r0, [sp, #72]	; 0x48
   35a38:	bl	1388c <__assert_fail@plt+0x23f8>
   35a3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35a40:	str	r0, [fp, #-12]
   35a44:	b	35c1c <__assert_fail@plt+0x24788>
   35a48:	ldr	r0, [fp, #-16]
   35a4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35a54:	ldr	r1, [fp, #16]
   35a58:	add	ip, sp, #64	; 0x40
   35a5c:	str	r1, [sp, #20]
   35a60:	mov	r1, ip
   35a64:	ldr	ip, [sp, #20]
   35a68:	str	ip, [sp]
   35a6c:	bl	36130 <__assert_fail@plt+0x24c9c>
   35a70:	str	r0, [fp, #-36]	; 0xffffffdc
   35a74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35a78:	cmp	r0, #0
   35a7c:	beq	35a94 <__assert_fail@plt+0x24600>
   35a80:	ldr	r0, [sp, #72]	; 0x48
   35a84:	bl	1388c <__assert_fail@plt+0x23f8>
   35a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35a8c:	str	r0, [fp, #-12]
   35a90:	b	35c1c <__assert_fail@plt+0x24788>
   35a94:	b	35a98 <__assert_fail@plt+0x24604>
   35a98:	ldr	r0, [fp, #-16]
   35a9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35aa0:	sub	r1, r1, #1
   35aa4:	ldr	r2, [fp, #-16]
   35aa8:	ldr	r2, [r2, #88]	; 0x58
   35aac:	bl	33608 <__assert_fail@plt+0x22174>
   35ab0:	str	r0, [sp, #56]	; 0x38
   35ab4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35ab8:	ldr	r3, [sp, #56]	; 0x38
   35abc:	sub	r0, fp, #36	; 0x24
   35ac0:	add	r2, sp, #64	; 0x40
   35ac4:	bl	30dcc <__assert_fail@plt+0x1f938>
   35ac8:	str	r0, [fp, #-56]	; 0xffffffc8
   35acc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35ad0:	movw	r1, #0
   35ad4:	cmp	r0, r1
   35ad8:	movw	r0, #0
   35adc:	str	r0, [sp, #16]
   35ae0:	bne	35af8 <__assert_fail@plt+0x24664>
   35ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35ae8:	cmp	r0, #0
   35aec:	movw	r0, #0
   35af0:	movne	r0, #1
   35af4:	str	r0, [sp, #16]
   35af8:	ldr	r0, [sp, #16]
   35afc:	tst	r0, #1
   35b00:	beq	35b18 <__assert_fail@plt+0x24684>
   35b04:	ldr	r0, [sp, #72]	; 0x48
   35b08:	bl	1388c <__assert_fail@plt+0x23f8>
   35b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   35b10:	str	r0, [fp, #-12]
   35b14:	b	35c1c <__assert_fail@plt+0x24788>
   35b18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35b1c:	ldr	r1, [fp, #-16]
   35b20:	ldr	r1, [r1, #100]	; 0x64
   35b24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35b28:	add	r1, r1, r2, lsl #2
   35b2c:	str	r0, [r1]
   35b30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35b34:	movw	r1, #0
   35b38:	cmp	r0, r1
   35b3c:	bne	35b50 <__assert_fail@plt+0x246bc>
   35b40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   35b44:	add	r0, r0, #1
   35b48:	str	r0, [sp, #12]
   35b4c:	b	35b5c <__assert_fail@plt+0x246c8>
   35b50:	movw	r0, #0
   35b54:	str	r0, [sp, #12]
   35b58:	b	35b5c <__assert_fail@plt+0x246c8>
   35b5c:	ldr	r0, [sp, #12]
   35b60:	str	r0, [fp, #-52]	; 0xffffffcc
   35b64:	b	358f0 <__assert_fail@plt+0x2445c>
   35b68:	ldr	r0, [sp, #72]	; 0x48
   35b6c:	bl	1388c <__assert_fail@plt+0x23f8>
   35b70:	ldr	r0, [fp, #-16]
   35b74:	ldr	r0, [r0, #100]	; 0x64
   35b78:	ldr	r1, [fp, #12]
   35b7c:	add	r0, r0, r1, lsl #2
   35b80:	ldr	r0, [r0]
   35b84:	movw	r1, #0
   35b88:	cmp	r0, r1
   35b8c:	bne	35b9c <__assert_fail@plt+0x24708>
   35b90:	movw	r0, #0
   35b94:	str	r0, [sp, #8]
   35b98:	b	35bb8 <__assert_fail@plt+0x24724>
   35b9c:	ldr	r0, [fp, #-16]
   35ba0:	ldr	r0, [r0, #100]	; 0x64
   35ba4:	ldr	r1, [fp, #12]
   35ba8:	add	r0, r0, r1, lsl #2
   35bac:	ldr	r0, [r0]
   35bb0:	add	r0, r0, #4
   35bb4:	str	r0, [sp, #8]
   35bb8:	ldr	r0, [sp, #8]
   35bbc:	str	r0, [fp, #-60]	; 0xffffffc4
   35bc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35bc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   35bc8:	str	r0, [r1]
   35bcc:	ldr	r0, [sp, #60]	; 0x3c
   35bd0:	ldr	r1, [fp, #-16]
   35bd4:	str	r0, [r1, #100]	; 0x64
   35bd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   35bdc:	ldr	r1, [fp, #-16]
   35be0:	str	r0, [r1, #40]	; 0x28
   35be4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35be8:	movw	r1, #0
   35bec:	cmp	r0, r1
   35bf0:	beq	35c14 <__assert_fail@plt+0x24780>
   35bf4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35bf8:	ldr	r1, [fp, #8]
   35bfc:	bl	30cdc <__assert_fail@plt+0x1f848>
   35c00:	cmp	r0, #0
   35c04:	beq	35c14 <__assert_fail@plt+0x24780>
   35c08:	movw	r0, #0
   35c0c:	str	r0, [fp, #-12]
   35c10:	b	35c1c <__assert_fail@plt+0x24788>
   35c14:	movw	r0, #1
   35c18:	str	r0, [fp, #-12]
   35c1c:	ldr	r0, [fp, #-12]
   35c20:	sub	sp, fp, #8
   35c24:	pop	{r4, sl, fp, pc}
   35c28:	svcvc	0x00ffffff
   35c2c:	svccc	0x00ffffff
   35c30:	push	{fp, lr}
   35c34:	mov	fp, sp
   35c38:	sub	sp, sp, #32
   35c3c:	str	r0, [fp, #-8]
   35c40:	str	r1, [fp, #-12]
   35c44:	str	r2, [sp, #16]
   35c48:	ldr	r0, [fp, #-8]
   35c4c:	ldr	r0, [r0, #16]
   35c50:	ldr	r1, [fp, #-8]
   35c54:	ldr	r1, [r1, #12]
   35c58:	cmp	r0, r1
   35c5c:	bne	35cc0 <__assert_fail@plt+0x2482c>
   35c60:	ldr	r0, [fp, #-8]
   35c64:	ldr	r0, [r0, #12]
   35c68:	mov	r1, #1
   35c6c:	orr	r0, r1, r0, lsl #1
   35c70:	str	r0, [sp, #8]
   35c74:	ldr	r0, [fp, #-8]
   35c78:	ldr	r0, [r0, #20]
   35c7c:	ldr	r1, [sp, #8]
   35c80:	lsl	r1, r1, #2
   35c84:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   35c88:	str	r0, [sp, #4]
   35c8c:	ldr	r0, [sp, #4]
   35c90:	movw	r1, #0
   35c94:	cmp	r0, r1
   35c98:	bne	35ca8 <__assert_fail@plt+0x24814>
   35c9c:	movw	r0, #0
   35ca0:	str	r0, [fp, #-4]
   35ca4:	b	35d28 <__assert_fail@plt+0x24894>
   35ca8:	ldr	r0, [sp, #4]
   35cac:	ldr	r1, [fp, #-8]
   35cb0:	str	r0, [r1, #20]
   35cb4:	ldr	r0, [sp, #8]
   35cb8:	ldr	r1, [fp, #-8]
   35cbc:	str	r0, [r1, #12]
   35cc0:	movw	r0, #1
   35cc4:	movw	r1, #20
   35cc8:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   35ccc:	str	r0, [sp, #12]
   35cd0:	ldr	r0, [sp, #12]
   35cd4:	movw	r1, #0
   35cd8:	cmp	r0, r1
   35cdc:	beq	35d20 <__assert_fail@plt+0x2488c>
   35ce0:	ldr	r0, [sp, #12]
   35ce4:	ldr	r1, [fp, #-8]
   35ce8:	ldr	r2, [r1, #16]
   35cec:	ldr	r1, [r1, #20]
   35cf0:	add	r1, r1, r2, lsl #2
   35cf4:	str	r0, [r1]
   35cf8:	ldr	r0, [fp, #-12]
   35cfc:	ldr	r1, [sp, #12]
   35d00:	str	r0, [r1]
   35d04:	ldr	r0, [sp, #16]
   35d08:	ldr	r1, [sp, #12]
   35d0c:	str	r0, [r1, #4]
   35d10:	ldr	r0, [fp, #-8]
   35d14:	ldr	r1, [r0, #16]
   35d18:	add	r1, r1, #1
   35d1c:	str	r1, [r0, #16]
   35d20:	ldr	r0, [sp, #12]
   35d24:	str	r0, [fp, #-4]
   35d28:	ldr	r0, [fp, #-4]
   35d2c:	mov	sp, fp
   35d30:	pop	{fp, pc}
   35d34:	push	{fp, lr}
   35d38:	mov	fp, sp
   35d3c:	sub	sp, sp, #24
   35d40:	ldr	ip, [fp, #8]
   35d44:	str	r0, [fp, #-8]
   35d48:	str	r1, [sp, #12]
   35d4c:	str	r2, [sp, #8]
   35d50:	str	r3, [sp, #4]
   35d54:	ldr	r0, [fp, #-8]
   35d58:	ldr	r0, [r0, #108]	; 0x6c
   35d5c:	ldr	r1, [fp, #-8]
   35d60:	ldr	r1, [r1, #112]	; 0x70
   35d64:	cmp	r0, r1
   35d68:	blt	35df8 <__assert_fail@plt+0x24964>
   35d6c:	ldr	r0, [fp, #-8]
   35d70:	ldr	r1, [r0, #112]	; 0x70
   35d74:	ldr	r0, [r0, #116]	; 0x74
   35d78:	lsl	r1, r1, #1
   35d7c:	movw	r2, #24
   35d80:	mul	r1, r1, r2
   35d84:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   35d88:	str	r0, [sp]
   35d8c:	ldr	r0, [sp]
   35d90:	movw	r1, #0
   35d94:	cmp	r0, r1
   35d98:	bne	35db4 <__assert_fail@plt+0x24920>
   35d9c:	ldr	r0, [fp, #-8]
   35da0:	ldr	r0, [r0, #116]	; 0x74
   35da4:	bl	1388c <__assert_fail@plt+0x23f8>
   35da8:	movw	r0, #12
   35dac:	str	r0, [fp, #-4]
   35db0:	b	35f80 <__assert_fail@plt+0x24aec>
   35db4:	ldr	r0, [sp]
   35db8:	ldr	r1, [fp, #-8]
   35dbc:	str	r0, [r1, #116]	; 0x74
   35dc0:	ldr	r0, [fp, #-8]
   35dc4:	ldr	r1, [r0, #108]	; 0x6c
   35dc8:	ldr	r2, [r0, #112]	; 0x70
   35dcc:	ldr	r0, [r0, #116]	; 0x74
   35dd0:	add	r1, r1, r1, lsl #1
   35dd4:	add	r0, r0, r1, lsl #3
   35dd8:	add	r1, r2, r2, lsl #1
   35ddc:	lsl	r2, r1, #3
   35de0:	mov	r1, #0
   35de4:	bl	113d4 <memset@plt>
   35de8:	ldr	r1, [fp, #-8]
   35dec:	ldr	r2, [r1, #112]	; 0x70
   35df0:	lsl	r2, r2, #1
   35df4:	str	r2, [r1, #112]	; 0x70
   35df8:	ldr	r0, [fp, #-8]
   35dfc:	ldr	r0, [r0, #108]	; 0x6c
   35e00:	cmp	r0, #0
   35e04:	ble	35e60 <__assert_fail@plt+0x249cc>
   35e08:	ldr	r0, [fp, #-8]
   35e0c:	ldr	r0, [r0, #116]	; 0x74
   35e10:	ldr	r1, [fp, #-8]
   35e14:	ldr	r1, [r1, #108]	; 0x6c
   35e18:	sub	r1, r1, #1
   35e1c:	movw	r2, #24
   35e20:	mul	r1, r1, r2
   35e24:	add	r0, r0, r1
   35e28:	ldr	r0, [r0, #4]
   35e2c:	ldr	r1, [sp, #8]
   35e30:	cmp	r0, r1
   35e34:	bne	35e60 <__assert_fail@plt+0x249cc>
   35e38:	ldr	r0, [fp, #-8]
   35e3c:	ldr	r0, [r0, #116]	; 0x74
   35e40:	ldr	r1, [fp, #-8]
   35e44:	ldr	r1, [r1, #108]	; 0x6c
   35e48:	sub	r1, r1, #1
   35e4c:	movw	r2, #24
   35e50:	mul	r1, r1, r2
   35e54:	add	r0, r0, r1
   35e58:	movw	r1, #1
   35e5c:	strb	r1, [r0, #20]
   35e60:	ldr	r0, [sp, #12]
   35e64:	ldr	r1, [fp, #-8]
   35e68:	ldr	r1, [r1, #116]	; 0x74
   35e6c:	ldr	r2, [fp, #-8]
   35e70:	ldr	r2, [r2, #108]	; 0x6c
   35e74:	movw	r3, #24
   35e78:	mul	r2, r2, r3
   35e7c:	add	r1, r1, r2
   35e80:	str	r0, [r1]
   35e84:	ldr	r0, [sp, #8]
   35e88:	ldr	r1, [fp, #-8]
   35e8c:	ldr	r1, [r1, #116]	; 0x74
   35e90:	ldr	r2, [fp, #-8]
   35e94:	ldr	r2, [r2, #108]	; 0x6c
   35e98:	mul	r2, r2, r3
   35e9c:	add	r1, r1, r2
   35ea0:	str	r0, [r1, #4]
   35ea4:	ldr	r0, [sp, #4]
   35ea8:	ldr	r1, [fp, #-8]
   35eac:	ldr	r1, [r1, #116]	; 0x74
   35eb0:	ldr	r2, [fp, #-8]
   35eb4:	ldr	r2, [r2, #108]	; 0x6c
   35eb8:	mul	r2, r2, r3
   35ebc:	add	r1, r1, r2
   35ec0:	str	r0, [r1, #8]
   35ec4:	ldr	r0, [fp, #8]
   35ec8:	ldr	r1, [fp, #-8]
   35ecc:	ldr	r1, [r1, #116]	; 0x74
   35ed0:	ldr	r2, [fp, #-8]
   35ed4:	ldr	r2, [r2, #108]	; 0x6c
   35ed8:	mul	r2, r2, r3
   35edc:	add	r1, r1, r2
   35ee0:	str	r0, [r1, #12]
   35ee4:	ldr	r0, [sp, #4]
   35ee8:	ldr	r1, [fp, #8]
   35eec:	cmp	r0, r1
   35ef0:	movw	r0, #0
   35ef4:	moveq	r0, #1
   35ef8:	tst	r0, #1
   35efc:	mvn	r0, #0
   35f00:	moveq	r0, #0
   35f04:	ldr	r1, [fp, #-8]
   35f08:	ldr	r1, [r1, #116]	; 0x74
   35f0c:	ldr	r2, [fp, #-8]
   35f10:	ldr	r2, [r2, #108]	; 0x6c
   35f14:	mul	r2, r2, r3
   35f18:	add	r1, r1, r2
   35f1c:	str	r0, [r1, #16]
   35f20:	ldr	r0, [fp, #-8]
   35f24:	ldr	r0, [r0, #116]	; 0x74
   35f28:	ldr	r1, [fp, #-8]
   35f2c:	ldr	r2, [r1, #108]	; 0x6c
   35f30:	add	ip, r2, #1
   35f34:	str	ip, [r1, #108]	; 0x6c
   35f38:	mul	r1, r2, r3
   35f3c:	add	r0, r0, r1
   35f40:	movw	r1, #0
   35f44:	strb	r1, [r0, #20]
   35f48:	ldr	r0, [fp, #-8]
   35f4c:	ldr	r0, [r0, #120]	; 0x78
   35f50:	ldr	r1, [fp, #8]
   35f54:	ldr	r2, [sp, #4]
   35f58:	sub	r1, r1, r2
   35f5c:	cmp	r0, r1
   35f60:	bge	35f78 <__assert_fail@plt+0x24ae4>
   35f64:	ldr	r0, [fp, #8]
   35f68:	ldr	r1, [sp, #4]
   35f6c:	sub	r0, r0, r1
   35f70:	ldr	r1, [fp, #-8]
   35f74:	str	r0, [r1, #120]	; 0x78
   35f78:	movw	r0, #0
   35f7c:	str	r0, [fp, #-4]
   35f80:	ldr	r0, [fp, #-4]
   35f84:	mov	sp, fp
   35f88:	pop	{fp, pc}
   35f8c:	push	{fp, lr}
   35f90:	mov	fp, sp
   35f94:	sub	sp, sp, #64	; 0x40
   35f98:	str	r0, [fp, #-8]
   35f9c:	str	r1, [fp, #-12]
   35fa0:	str	r2, [fp, #-16]
   35fa4:	str	r3, [fp, #-20]	; 0xffffffec
   35fa8:	ldr	r0, [fp, #-12]
   35fac:	ldr	r0, [r0, #4]
   35fb0:	cmp	r0, #0
   35fb4:	beq	35fbc <__assert_fail@plt+0x24b28>
   35fb8:	b	35fbc <__assert_fail@plt+0x24b28>
   35fbc:	ldr	r0, [fp, #-12]
   35fc0:	ldr	r1, [r0, #4]
   35fc4:	add	r0, sp, #20
   35fc8:	bl	2fdb8 <__assert_fail@plt+0x1e924>
   35fcc:	str	r0, [fp, #-24]	; 0xffffffe8
   35fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35fd4:	cmp	r0, #0
   35fd8:	beq	35fe8 <__assert_fail@plt+0x24b54>
   35fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35fe0:	str	r0, [fp, #-4]
   35fe4:	b	36124 <__assert_fail@plt+0x24c90>
   35fe8:	movw	r0, #0
   35fec:	str	r0, [fp, #-28]	; 0xffffffe4
   35ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35ff4:	ldr	r1, [fp, #-12]
   35ff8:	ldr	r1, [r1, #4]
   35ffc:	cmp	r0, r1
   36000:	bge	360f4 <__assert_fail@plt+0x24c60>
   36004:	ldr	r0, [fp, #-12]
   36008:	ldr	r0, [r0, #8]
   3600c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36010:	add	r0, r0, r1, lsl #2
   36014:	ldr	r0, [r0]
   36018:	str	r0, [sp, #16]
   3601c:	ldr	r0, [fp, #-8]
   36020:	ldr	r0, [r0, #24]
   36024:	ldr	r1, [sp, #16]
   36028:	movw	r2, #12
   3602c:	mul	r1, r1, r2
   36030:	add	r0, r0, r1
   36034:	str	r0, [sp, #12]
   36038:	ldr	r0, [fp, #-8]
   3603c:	ldr	r1, [sp, #12]
   36040:	ldr	r2, [fp, #-16]
   36044:	ldr	r3, [fp, #-20]	; 0xffffffec
   36048:	bl	35440 <__assert_fail@plt+0x23fac>
   3604c:	str	r0, [sp, #32]
   36050:	ldr	r0, [sp, #32]
   36054:	cmn	r0, #1
   36058:	bne	36090 <__assert_fail@plt+0x24bfc>
   3605c:	ldr	r1, [sp, #12]
   36060:	add	r0, sp, #20
   36064:	bl	30330 <__assert_fail@plt+0x1ee9c>
   36068:	str	r0, [fp, #-24]	; 0xffffffe8
   3606c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36070:	cmp	r0, #0
   36074:	beq	3608c <__assert_fail@plt+0x24bf8>
   36078:	ldr	r0, [sp, #28]
   3607c:	bl	1388c <__assert_fail@plt+0x23f8>
   36080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36084:	str	r0, [fp, #-4]
   36088:	b	36124 <__assert_fail@plt+0x24c90>
   3608c:	b	360e0 <__assert_fail@plt+0x24c4c>
   36090:	ldr	r0, [fp, #-8]
   36094:	ldr	r2, [sp, #16]
   36098:	ldr	r3, [fp, #-16]
   3609c:	ldr	r1, [fp, #-20]	; 0xffffffec
   360a0:	add	ip, sp, #20
   360a4:	str	r1, [sp, #8]
   360a8:	mov	r1, ip
   360ac:	ldr	ip, [sp, #8]
   360b0:	str	ip, [sp]
   360b4:	bl	367ec <__assert_fail@plt+0x25358>
   360b8:	str	r0, [fp, #-24]	; 0xffffffe8
   360bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   360c0:	cmp	r0, #0
   360c4:	beq	360dc <__assert_fail@plt+0x24c48>
   360c8:	ldr	r0, [sp, #28]
   360cc:	bl	1388c <__assert_fail@plt+0x23f8>
   360d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   360d4:	str	r0, [fp, #-4]
   360d8:	b	36124 <__assert_fail@plt+0x24c90>
   360dc:	b	360e0 <__assert_fail@plt+0x24c4c>
   360e0:	b	360e4 <__assert_fail@plt+0x24c50>
   360e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   360e8:	add	r0, r0, #1
   360ec:	str	r0, [fp, #-28]	; 0xffffffe4
   360f0:	b	35ff0 <__assert_fail@plt+0x24b5c>
   360f4:	ldr	r0, [fp, #-12]
   360f8:	ldr	r0, [r0, #8]
   360fc:	bl	1388c <__assert_fail@plt+0x23f8>
   36100:	ldr	r0, [fp, #-12]
   36104:	ldr	r1, [sp, #20]
   36108:	str	r1, [r0]
   3610c:	ldr	r1, [sp, #24]
   36110:	str	r1, [r0, #4]
   36114:	ldr	r1, [sp, #28]
   36118:	str	r1, [r0, #8]
   3611c:	movw	r0, #0
   36120:	str	r0, [fp, #-4]
   36124:	ldr	r0, [fp, #-4]
   36128:	mov	sp, fp
   3612c:	pop	{fp, pc}
   36130:	push	{fp, lr}
   36134:	mov	fp, sp
   36138:	sub	sp, sp, #112	; 0x70
   3613c:	ldr	ip, [fp, #8]
   36140:	str	r0, [fp, #-8]
   36144:	str	r1, [fp, #-12]
   36148:	str	r2, [fp, #-16]
   3614c:	str	r3, [fp, #-20]	; 0xffffffec
   36150:	ldr	r0, [fp, #-8]
   36154:	ldr	r0, [r0, #84]	; 0x54
   36158:	str	r0, [fp, #-24]	; 0xffffffe8
   3615c:	ldr	r0, [fp, #-8]
   36160:	ldr	r1, [fp, #-16]
   36164:	str	ip, [sp, #28]
   36168:	bl	35148 <__assert_fail@plt+0x23cb4>
   3616c:	str	r0, [fp, #-32]	; 0xffffffe0
   36170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36174:	cmn	r0, #1
   36178:	bne	36188 <__assert_fail@plt+0x24cf4>
   3617c:	movw	r0, #0
   36180:	str	r0, [fp, #-4]
   36184:	b	364f4 <__assert_fail@plt+0x25060>
   36188:	b	3618c <__assert_fail@plt+0x24cf8>
   3618c:	ldr	r0, [fp, #-8]
   36190:	ldr	r0, [r0, #116]	; 0x74
   36194:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36198:	movw	r2, #24
   3619c:	mul	r1, r1, r2
   361a0:	add	r0, r0, r1
   361a4:	str	r0, [fp, #-36]	; 0xffffffdc
   361a8:	ldr	r0, [fp, #-12]
   361ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   361b0:	ldr	r1, [r1]
   361b4:	bl	30cdc <__assert_fail@plt+0x1f848>
   361b8:	cmp	r0, #0
   361bc:	bne	361c4 <__assert_fail@plt+0x24d30>
   361c0:	b	364d4 <__assert_fail@plt+0x25040>
   361c4:	ldr	r0, [fp, #-16]
   361c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   361cc:	ldr	r1, [r1, #12]
   361d0:	add	r0, r0, r1
   361d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   361d8:	ldr	r1, [r1, #8]
   361dc:	sub	r0, r0, r1
   361e0:	str	r0, [fp, #-40]	; 0xffffffd8
   361e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   361e8:	ldr	r1, [fp, #-16]
   361ec:	cmp	r0, r1
   361f0:	bne	36314 <__assert_fail@plt+0x24e80>
   361f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   361f8:	ldr	r0, [r0, #20]
   361fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36200:	ldr	r1, [r1]
   36204:	movw	r2, #12
   36208:	mul	r1, r1, r2
   3620c:	add	r0, r0, r1
   36210:	ldr	r0, [r0, #8]
   36214:	ldr	r0, [r0]
   36218:	str	r0, [fp, #-44]	; 0xffffffd4
   3621c:	ldr	r0, [fp, #-12]
   36220:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36224:	bl	30cdc <__assert_fail@plt+0x1f848>
   36228:	cmp	r0, #0
   3622c:	beq	36234 <__assert_fail@plt+0x24da0>
   36230:	b	364d4 <__assert_fail@plt+0x25040>
   36234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36238:	add	r0, sp, #56	; 0x38
   3623c:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   36240:	str	r0, [fp, #-28]	; 0xffffffe4
   36244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36248:	ldr	r2, [fp, #-20]	; 0xffffffec
   3624c:	ldr	r3, [fp, #8]
   36250:	add	r1, sp, #56	; 0x38
   36254:	bl	35f8c <__assert_fail@plt+0x24af8>
   36258:	str	r0, [sp, #52]	; 0x34
   3625c:	ldr	r0, [fp, #-12]
   36260:	add	r1, sp, #56	; 0x38
   36264:	bl	30330 <__assert_fail@plt+0x1ee9c>
   36268:	str	r0, [sp, #48]	; 0x30
   3626c:	ldr	r0, [sp, #64]	; 0x40
   36270:	bl	1388c <__assert_fail@plt+0x23f8>
   36274:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36278:	cmp	r0, #0
   3627c:	movw	r0, #1
   36280:	str	r0, [sp, #24]
   36284:	bne	362b0 <__assert_fail@plt+0x24e1c>
   36288:	ldr	r0, [sp, #52]	; 0x34
   3628c:	cmp	r0, #0
   36290:	movw	r0, #1
   36294:	str	r0, [sp, #24]
   36298:	bne	362b0 <__assert_fail@plt+0x24e1c>
   3629c:	ldr	r0, [sp, #48]	; 0x30
   362a0:	cmp	r0, #0
   362a4:	movw	r0, #0
   362a8:	movne	r0, #1
   362ac:	str	r0, [sp, #24]
   362b0:	ldr	r0, [sp, #24]
   362b4:	tst	r0, #1
   362b8:	beq	36310 <__assert_fail@plt+0x24e7c>
   362bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   362c0:	cmp	r0, #0
   362c4:	beq	362d4 <__assert_fail@plt+0x24e40>
   362c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   362cc:	str	r0, [sp, #20]
   362d0:	b	362fc <__assert_fail@plt+0x24e68>
   362d4:	ldr	r0, [sp, #52]	; 0x34
   362d8:	cmp	r0, #0
   362dc:	beq	362ec <__assert_fail@plt+0x24e58>
   362e0:	ldr	r0, [sp, #52]	; 0x34
   362e4:	str	r0, [sp, #16]
   362e8:	b	362f4 <__assert_fail@plt+0x24e60>
   362ec:	ldr	r0, [sp, #48]	; 0x30
   362f0:	str	r0, [sp, #16]
   362f4:	ldr	r0, [sp, #16]
   362f8:	str	r0, [sp, #20]
   362fc:	ldr	r0, [sp, #20]
   36300:	str	r0, [fp, #-28]	; 0xffffffe4
   36304:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36308:	str	r0, [fp, #-4]
   3630c:	b	364f4 <__assert_fail@plt+0x25060>
   36310:	b	3618c <__assert_fail@plt+0x24cf8>
   36314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36318:	ldr	r0, [r0, #12]
   3631c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36320:	ldr	r1, [r1]
   36324:	ldr	r0, [r0, r1, lsl #2]
   36328:	str	r0, [fp, #-44]	; 0xffffffd4
   3632c:	ldr	r0, [fp, #-8]
   36330:	ldr	r0, [r0, #100]	; 0x64
   36334:	ldr	r1, [fp, #-40]	; 0xffffffd8
   36338:	add	r0, r0, r1, lsl #2
   3633c:	ldr	r0, [r0]
   36340:	movw	r1, #0
   36344:	cmp	r0, r1
   36348:	beq	36424 <__assert_fail@plt+0x24f90>
   3634c:	ldr	r0, [fp, #-8]
   36350:	ldr	r0, [r0, #100]	; 0x64
   36354:	ldr	r1, [fp, #-40]	; 0xffffffd8
   36358:	add	r0, r0, r1, lsl #2
   3635c:	ldr	r0, [r0]
   36360:	add	r0, r0, #4
   36364:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36368:	bl	30cdc <__assert_fail@plt+0x1f848>
   3636c:	cmp	r0, #0
   36370:	beq	36378 <__assert_fail@plt+0x24ee4>
   36374:	b	364d4 <__assert_fail@plt+0x25040>
   36378:	ldr	r0, [fp, #-8]
   3637c:	ldr	r0, [r0, #100]	; 0x64
   36380:	ldr	r1, [fp, #-40]	; 0xffffffd8
   36384:	add	r0, r0, r1, lsl #2
   36388:	ldr	r0, [r0]
   3638c:	add	r1, r0, #4
   36390:	add	r0, sp, #36	; 0x24
   36394:	bl	30c08 <__assert_fail@plt+0x1f774>
   36398:	str	r0, [fp, #-28]	; 0xffffffe4
   3639c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   363a0:	add	r0, sp, #36	; 0x24
   363a4:	bl	30820 <__assert_fail@plt+0x1f38c>
   363a8:	and	r0, r0, #1
   363ac:	strb	r0, [sp, #35]	; 0x23
   363b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   363b4:	cmp	r0, #0
   363b8:	movw	r0, #1
   363bc:	str	r0, [sp, #12]
   363c0:	bne	363d4 <__assert_fail@plt+0x24f40>
   363c4:	ldrb	r0, [sp, #35]	; 0x23
   363c8:	mvn	r1, #0
   363cc:	eor	r0, r0, r1
   363d0:	str	r0, [sp, #12]
   363d4:	ldr	r0, [sp, #12]
   363d8:	tst	r0, #1
   363dc:	beq	36420 <__assert_fail@plt+0x24f8c>
   363e0:	ldr	r0, [sp, #44]	; 0x2c
   363e4:	bl	1388c <__assert_fail@plt+0x23f8>
   363e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   363ec:	cmp	r0, #0
   363f0:	beq	36400 <__assert_fail@plt+0x24f6c>
   363f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   363f8:	str	r0, [sp, #8]
   363fc:	b	3640c <__assert_fail@plt+0x24f78>
   36400:	movw	r0, #12
   36404:	str	r0, [sp, #8]
   36408:	b	3640c <__assert_fail@plt+0x24f78>
   3640c:	ldr	r0, [sp, #8]
   36410:	str	r0, [fp, #-28]	; 0xffffffe4
   36414:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36418:	str	r0, [fp, #-4]
   3641c:	b	364f4 <__assert_fail@plt+0x25060>
   36420:	b	36450 <__assert_fail@plt+0x24fbc>
   36424:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36428:	add	r0, sp, #36	; 0x24
   3642c:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   36430:	str	r0, [fp, #-28]	; 0xffffffe4
   36434:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36438:	cmp	r0, #0
   3643c:	beq	3644c <__assert_fail@plt+0x24fb8>
   36440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36444:	str	r0, [fp, #-4]
   36448:	b	364f4 <__assert_fail@plt+0x25060>
   3644c:	b	36450 <__assert_fail@plt+0x24fbc>
   36450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36454:	sub	r0, fp, #28
   36458:	add	r2, sp, #36	; 0x24
   3645c:	bl	369dc <__assert_fail@plt+0x25548>
   36460:	ldr	r1, [fp, #-8]
   36464:	ldr	r1, [r1, #100]	; 0x64
   36468:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3646c:	str	r0, [r1, r2, lsl #2]
   36470:	ldr	r0, [sp, #44]	; 0x2c
   36474:	bl	1388c <__assert_fail@plt+0x23f8>
   36478:	ldr	r0, [fp, #-8]
   3647c:	ldr	r0, [r0, #100]	; 0x64
   36480:	ldr	r1, [fp, #-40]	; 0xffffffd8
   36484:	add	r0, r0, r1, lsl #2
   36488:	ldr	r0, [r0]
   3648c:	movw	r1, #0
   36490:	cmp	r0, r1
   36494:	movw	r0, #0
   36498:	str	r0, [sp, #4]
   3649c:	bne	364b4 <__assert_fail@plt+0x25020>
   364a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   364a4:	cmp	r0, #0
   364a8:	movw	r0, #0
   364ac:	movne	r0, #1
   364b0:	str	r0, [sp, #4]
   364b4:	ldr	r0, [sp, #4]
   364b8:	tst	r0, #1
   364bc:	beq	364cc <__assert_fail@plt+0x25038>
   364c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   364c4:	str	r0, [fp, #-4]
   364c8:	b	364f4 <__assert_fail@plt+0x25060>
   364cc:	b	364d0 <__assert_fail@plt+0x2503c>
   364d0:	b	364d4 <__assert_fail@plt+0x25040>
   364d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   364d8:	add	r1, r0, #24
   364dc:	str	r1, [fp, #-36]	; 0xffffffdc
   364e0:	ldrsb	r0, [r0, #20]
   364e4:	cmp	r0, #0
   364e8:	bne	361a8 <__assert_fail@plt+0x24d14>
   364ec:	movw	r0, #0
   364f0:	str	r0, [fp, #-4]
   364f4:	ldr	r0, [fp, #-4]
   364f8:	mov	sp, fp
   364fc:	pop	{fp, pc}
   36500:	push	{fp, lr}
   36504:	mov	fp, sp
   36508:	sub	sp, sp, #80	; 0x50
   3650c:	str	r0, [fp, #-8]
   36510:	str	r1, [fp, #-12]
   36514:	str	r2, [fp, #-16]
   36518:	str	r3, [fp, #-20]	; 0xffffffec
   3651c:	ldr	r0, [fp, #-8]
   36520:	ldr	r0, [r0, #84]	; 0x54
   36524:	str	r0, [fp, #-24]	; 0xffffffe8
   36528:	movw	r0, #0
   3652c:	str	r0, [fp, #-36]	; 0xffffffdc
   36530:	add	r1, sp, #32
   36534:	str	r0, [sp, #8]
   36538:	mov	r0, r1
   3653c:	movw	r1, #0
   36540:	and	r1, r1, #255	; 0xff
   36544:	movw	r2, #12
   36548:	bl	113d4 <memset@plt>
   3654c:	ldr	r0, [sp, #8]
   36550:	str	r0, [fp, #-32]	; 0xffffffe0
   36554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36558:	ldr	r1, [fp, #-16]
   3655c:	ldr	r1, [r1, #4]
   36560:	cmp	r0, r1
   36564:	bge	367d0 <__assert_fail@plt+0x2533c>
   36568:	mov	r0, #0
   3656c:	str	r0, [sp, #28]
   36570:	ldr	r0, [fp, #-16]
   36574:	ldr	r0, [r0, #8]
   36578:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3657c:	ldr	r0, [r0, r1, lsl #2]
   36580:	str	r0, [sp, #24]
   36584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36588:	ldr	r0, [r0]
   3658c:	ldr	r1, [sp, #24]
   36590:	add	r0, r0, r1, lsl #3
   36594:	ldr	r0, [r0, #4]
   36598:	and	r0, r0, #255	; 0xff
   3659c:	and	r0, r0, #8
   365a0:	cmp	r0, #0
   365a4:	bne	365ac <__assert_fail@plt+0x25118>
   365a8:	b	365ac <__assert_fail@plt+0x25118>
   365ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   365b0:	ldr	r0, [r0]
   365b4:	ldr	r1, [sp, #24]
   365b8:	add	r0, r0, r1, lsl #3
   365bc:	ldr	r0, [r0, #4]
   365c0:	lsr	r0, r0, #20
   365c4:	and	r0, r0, #1
   365c8:	cmp	r0, #0
   365cc:	beq	3673c <__assert_fail@plt+0x252a8>
   365d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   365d4:	ldr	r1, [sp, #24]
   365d8:	ldr	r2, [fp, #-8]
   365dc:	ldr	r3, [fp, #-12]
   365e0:	bl	36d34 <__assert_fail@plt+0x258a0>
   365e4:	str	r0, [sp, #28]
   365e8:	ldr	r0, [sp, #28]
   365ec:	cmp	r0, #1
   365f0:	ble	36738 <__assert_fail@plt+0x252a4>
   365f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   365f8:	ldr	r0, [r0, #12]
   365fc:	ldr	r1, [sp, #24]
   36600:	ldr	r0, [r0, r1, lsl #2]
   36604:	str	r0, [sp, #16]
   36608:	ldr	r0, [fp, #-12]
   3660c:	ldr	r1, [sp, #28]
   36610:	add	r0, r0, r1
   36614:	str	r0, [sp, #12]
   36618:	ldr	r0, [fp, #-8]
   3661c:	ldr	r0, [r0, #100]	; 0x64
   36620:	ldr	r1, [sp, #12]
   36624:	add	r0, r0, r1, lsl #2
   36628:	ldr	r0, [r0]
   3662c:	str	r0, [sp, #20]
   36630:	movw	r0, #0
   36634:	str	r0, [sp, #36]	; 0x24
   36638:	ldr	r1, [sp, #20]
   3663c:	cmp	r1, r0
   36640:	beq	3667c <__assert_fail@plt+0x251e8>
   36644:	ldr	r0, [sp, #20]
   36648:	add	r1, r0, #4
   3664c:	add	r0, sp, #32
   36650:	bl	30330 <__assert_fail@plt+0x1ee9c>
   36654:	str	r0, [fp, #-36]	; 0xffffffdc
   36658:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3665c:	cmp	r0, #0
   36660:	beq	36678 <__assert_fail@plt+0x251e4>
   36664:	ldr	r0, [sp, #40]	; 0x28
   36668:	bl	1388c <__assert_fail@plt+0x23f8>
   3666c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36670:	str	r0, [fp, #-4]
   36674:	b	367e0 <__assert_fail@plt+0x2534c>
   36678:	b	3667c <__assert_fail@plt+0x251e8>
   3667c:	ldr	r1, [sp, #16]
   36680:	add	r0, sp, #32
   36684:	bl	30820 <__assert_fail@plt+0x1f38c>
   36688:	and	r0, r0, #1
   3668c:	strb	r0, [fp, #-25]	; 0xffffffe7
   36690:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   36694:	mvn	r1, #0
   36698:	eor	r0, r0, r1
   3669c:	tst	r0, #1
   366a0:	beq	366b8 <__assert_fail@plt+0x25224>
   366a4:	ldr	r0, [sp, #40]	; 0x28
   366a8:	bl	1388c <__assert_fail@plt+0x23f8>
   366ac:	movw	r0, #12
   366b0:	str	r0, [fp, #-4]
   366b4:	b	367e0 <__assert_fail@plt+0x2534c>
   366b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   366bc:	sub	r0, fp, #36	; 0x24
   366c0:	add	r2, sp, #32
   366c4:	bl	369dc <__assert_fail@plt+0x25548>
   366c8:	ldr	r1, [fp, #-8]
   366cc:	ldr	r1, [r1, #100]	; 0x64
   366d0:	ldr	r2, [sp, #12]
   366d4:	str	r0, [r1, r2, lsl #2]
   366d8:	ldr	r0, [fp, #-8]
   366dc:	ldr	r0, [r0, #100]	; 0x64
   366e0:	ldr	r1, [sp, #12]
   366e4:	add	r0, r0, r1, lsl #2
   366e8:	ldr	r0, [r0]
   366ec:	movw	r1, #0
   366f0:	cmp	r0, r1
   366f4:	movw	r0, #0
   366f8:	str	r0, [sp, #4]
   366fc:	bne	36714 <__assert_fail@plt+0x25280>
   36700:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36704:	cmp	r0, #0
   36708:	movw	r0, #0
   3670c:	movne	r0, #1
   36710:	str	r0, [sp, #4]
   36714:	ldr	r0, [sp, #4]
   36718:	tst	r0, #1
   3671c:	beq	36734 <__assert_fail@plt+0x252a0>
   36720:	ldr	r0, [sp, #40]	; 0x28
   36724:	bl	1388c <__assert_fail@plt+0x23f8>
   36728:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3672c:	str	r0, [fp, #-4]
   36730:	b	367e0 <__assert_fail@plt+0x2534c>
   36734:	b	36738 <__assert_fail@plt+0x252a4>
   36738:	b	3673c <__assert_fail@plt+0x252a8>
   3673c:	ldr	r0, [sp, #28]
   36740:	cmp	r0, #0
   36744:	bne	3676c <__assert_fail@plt+0x252d8>
   36748:	ldr	r0, [fp, #-8]
   3674c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36750:	ldr	r1, [r1]
   36754:	ldr	r2, [sp, #24]
   36758:	add	r1, r1, r2, lsl #3
   3675c:	ldr	r2, [fp, #-12]
   36760:	bl	3731c <__assert_fail@plt+0x25e88>
   36764:	tst	r0, #1
   36768:	beq	367bc <__assert_fail@plt+0x25328>
   3676c:	ldr	r0, [fp, #-20]	; 0xffffffec
   36770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36774:	ldr	r1, [r1, #12]
   36778:	ldr	r2, [sp, #24]
   3677c:	add	r1, r1, r2, lsl #2
   36780:	ldr	r1, [r1]
   36784:	bl	30820 <__assert_fail@plt+0x1f38c>
   36788:	and	r0, r0, #1
   3678c:	strb	r0, [fp, #-25]	; 0xffffffe7
   36790:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   36794:	mvn	r1, #0
   36798:	eor	r0, r0, r1
   3679c:	tst	r0, #1
   367a0:	beq	367b8 <__assert_fail@plt+0x25324>
   367a4:	ldr	r0, [sp, #40]	; 0x28
   367a8:	bl	1388c <__assert_fail@plt+0x23f8>
   367ac:	movw	r0, #12
   367b0:	str	r0, [fp, #-4]
   367b4:	b	367e0 <__assert_fail@plt+0x2534c>
   367b8:	b	367bc <__assert_fail@plt+0x25328>
   367bc:	b	367c0 <__assert_fail@plt+0x2532c>
   367c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   367c4:	add	r0, r0, #1
   367c8:	str	r0, [fp, #-32]	; 0xffffffe0
   367cc:	b	36554 <__assert_fail@plt+0x250c0>
   367d0:	ldr	r0, [sp, #40]	; 0x28
   367d4:	bl	1388c <__assert_fail@plt+0x23f8>
   367d8:	movw	r0, #0
   367dc:	str	r0, [fp, #-4]
   367e0:	ldr	r0, [fp, #-4]
   367e4:	mov	sp, fp
   367e8:	pop	{fp, pc}
   367ec:	push	{fp, lr}
   367f0:	mov	fp, sp
   367f4:	sub	sp, sp, #40	; 0x28
   367f8:	ldr	ip, [fp, #8]
   367fc:	str	r0, [fp, #-8]
   36800:	str	r1, [fp, #-12]
   36804:	str	r2, [fp, #-16]
   36808:	str	r3, [sp, #20]
   3680c:	ldr	r0, [fp, #-16]
   36810:	str	r0, [sp, #16]
   36814:	ldr	r0, [fp, #-12]
   36818:	ldr	r1, [sp, #16]
   3681c:	bl	30cdc <__assert_fail@plt+0x1f848>
   36820:	cmp	r0, #0
   36824:	movw	r0, #0
   36828:	movne	r0, #1
   3682c:	mvn	r1, #0
   36830:	eor	r0, r0, r1
   36834:	tst	r0, #1
   36838:	beq	369c8 <__assert_fail@plt+0x25534>
   3683c:	ldr	r0, [fp, #-8]
   36840:	ldr	r0, [r0]
   36844:	ldr	r1, [sp, #16]
   36848:	add	r0, r0, r1, lsl #3
   3684c:	ldr	r0, [r0, #4]
   36850:	and	r0, r0, #255	; 0xff
   36854:	ldr	r1, [fp, #8]
   36858:	cmp	r0, r1
   3685c:	bne	368c8 <__assert_fail@plt+0x25434>
   36860:	ldr	r0, [fp, #-8]
   36864:	ldr	r0, [r0]
   36868:	ldr	r1, [sp, #16]
   3686c:	add	r0, r0, r1, lsl #3
   36870:	ldr	r0, [r0]
   36874:	ldr	r1, [sp, #20]
   36878:	cmp	r0, r1
   3687c:	bne	368c8 <__assert_fail@plt+0x25434>
   36880:	ldr	r0, [fp, #8]
   36884:	cmp	r0, #9
   36888:	bne	368c4 <__assert_fail@plt+0x25430>
   3688c:	ldr	r0, [fp, #-12]
   36890:	ldr	r1, [sp, #16]
   36894:	bl	30820 <__assert_fail@plt+0x1f38c>
   36898:	and	r0, r0, #1
   3689c:	strb	r0, [sp, #15]
   368a0:	ldrb	r0, [sp, #15]
   368a4:	mvn	r1, #0
   368a8:	eor	r0, r0, r1
   368ac:	tst	r0, #1
   368b0:	beq	368c0 <__assert_fail@plt+0x2542c>
   368b4:	movw	r0, #12
   368b8:	str	r0, [fp, #-4]
   368bc:	b	369d0 <__assert_fail@plt+0x2553c>
   368c0:	b	368c4 <__assert_fail@plt+0x25430>
   368c4:	b	369c8 <__assert_fail@plt+0x25534>
   368c8:	ldr	r0, [fp, #-12]
   368cc:	ldr	r1, [sp, #16]
   368d0:	bl	30820 <__assert_fail@plt+0x1f38c>
   368d4:	and	r0, r0, #1
   368d8:	strb	r0, [sp, #15]
   368dc:	ldrb	r0, [sp, #15]
   368e0:	mvn	r1, #0
   368e4:	eor	r0, r0, r1
   368e8:	tst	r0, #1
   368ec:	beq	368fc <__assert_fail@plt+0x25468>
   368f0:	movw	r0, #12
   368f4:	str	r0, [fp, #-4]
   368f8:	b	369d0 <__assert_fail@plt+0x2553c>
   368fc:	ldr	r0, [fp, #-8]
   36900:	ldr	r0, [r0, #20]
   36904:	ldr	r1, [sp, #16]
   36908:	movw	r2, #12
   3690c:	mul	r1, r1, r2
   36910:	add	r0, r0, r1
   36914:	ldr	r0, [r0, #4]
   36918:	cmp	r0, #0
   3691c:	bne	36924 <__assert_fail@plt+0x25490>
   36920:	b	369c8 <__assert_fail@plt+0x25534>
   36924:	ldr	r0, [fp, #-8]
   36928:	ldr	r0, [r0, #20]
   3692c:	ldr	r1, [sp, #16]
   36930:	movw	r2, #12
   36934:	mul	r1, r1, r2
   36938:	add	r0, r0, r1
   3693c:	ldr	r0, [r0, #4]
   36940:	cmp	r0, #2
   36944:	bne	369a0 <__assert_fail@plt+0x2550c>
   36948:	ldr	r0, [fp, #-8]
   3694c:	ldr	r1, [fp, #-12]
   36950:	ldr	r2, [fp, #-8]
   36954:	ldr	r2, [r2, #20]
   36958:	ldr	r3, [sp, #16]
   3695c:	movw	ip, #12
   36960:	mul	r3, r3, ip
   36964:	add	r2, r2, r3
   36968:	ldr	r2, [r2, #8]
   3696c:	ldr	r2, [r2, #4]
   36970:	ldr	r3, [sp, #20]
   36974:	ldr	ip, [fp, #8]
   36978:	str	ip, [sp]
   3697c:	bl	367ec <__assert_fail@plt+0x25358>
   36980:	str	r0, [sp, #8]
   36984:	ldr	r0, [sp, #8]
   36988:	cmp	r0, #0
   3698c:	beq	3699c <__assert_fail@plt+0x25508>
   36990:	ldr	r0, [sp, #8]
   36994:	str	r0, [fp, #-4]
   36998:	b	369d0 <__assert_fail@plt+0x2553c>
   3699c:	b	369a0 <__assert_fail@plt+0x2550c>
   369a0:	ldr	r0, [fp, #-8]
   369a4:	ldr	r0, [r0, #20]
   369a8:	ldr	r1, [sp, #16]
   369ac:	movw	r2, #12
   369b0:	mul	r1, r1, r2
   369b4:	add	r0, r0, r1
   369b8:	ldr	r0, [r0, #8]
   369bc:	ldr	r0, [r0]
   369c0:	str	r0, [sp, #16]
   369c4:	b	36814 <__assert_fail@plt+0x25380>
   369c8:	movw	r0, #0
   369cc:	str	r0, [fp, #-4]
   369d0:	ldr	r0, [fp, #-4]
   369d4:	mov	sp, fp
   369d8:	pop	{fp, pc}
   369dc:	push	{fp, lr}
   369e0:	mov	fp, sp
   369e4:	sub	sp, sp, #40	; 0x28
   369e8:	str	r0, [fp, #-8]
   369ec:	str	r1, [fp, #-12]
   369f0:	str	r2, [fp, #-16]
   369f4:	ldr	r0, [fp, #-16]
   369f8:	ldr	r0, [r0, #4]
   369fc:	cmp	r0, #0
   36a00:	bne	36a18 <__assert_fail@plt+0x25584>
   36a04:	ldr	r0, [fp, #-8]
   36a08:	movw	r1, #0
   36a0c:	str	r1, [r0]
   36a10:	str	r1, [fp, #-4]
   36a14:	b	36b0c <__assert_fail@plt+0x25678>
   36a18:	ldr	r0, [fp, #-16]
   36a1c:	movw	r1, #0
   36a20:	bl	30f28 <__assert_fail@plt+0x1fa94>
   36a24:	str	r0, [sp, #20]
   36a28:	ldr	r0, [fp, #-12]
   36a2c:	ldr	r0, [r0, #32]
   36a30:	ldr	r1, [sp, #20]
   36a34:	ldr	r2, [fp, #-12]
   36a38:	ldr	r2, [r2, #68]	; 0x44
   36a3c:	and	r1, r1, r2
   36a40:	movw	r2, #12
   36a44:	mul	r1, r1, r2
   36a48:	add	r0, r0, r1
   36a4c:	str	r0, [sp, #12]
   36a50:	movw	r0, #0
   36a54:	str	r0, [sp, #8]
   36a58:	ldr	r0, [sp, #8]
   36a5c:	ldr	r1, [sp, #12]
   36a60:	ldr	r1, [r1]
   36a64:	cmp	r0, r1
   36a68:	bge	36ad4 <__assert_fail@plt+0x25640>
   36a6c:	ldr	r0, [sp, #12]
   36a70:	ldr	r0, [r0, #8]
   36a74:	ldr	r1, [sp, #8]
   36a78:	add	r0, r0, r1, lsl #2
   36a7c:	ldr	r0, [r0]
   36a80:	str	r0, [sp, #4]
   36a84:	ldr	r0, [sp, #20]
   36a88:	ldr	r1, [sp, #4]
   36a8c:	ldr	r1, [r1]
   36a90:	cmp	r0, r1
   36a94:	beq	36a9c <__assert_fail@plt+0x25608>
   36a98:	b	36ac4 <__assert_fail@plt+0x25630>
   36a9c:	ldr	r0, [sp, #4]
   36aa0:	add	r0, r0, #4
   36aa4:	ldr	r1, [fp, #-16]
   36aa8:	bl	30fa0 <__assert_fail@plt+0x1fb0c>
   36aac:	tst	r0, #1
   36ab0:	beq	36ac0 <__assert_fail@plt+0x2562c>
   36ab4:	ldr	r0, [sp, #4]
   36ab8:	str	r0, [fp, #-4]
   36abc:	b	36b0c <__assert_fail@plt+0x25678>
   36ac0:	b	36ac4 <__assert_fail@plt+0x25630>
   36ac4:	ldr	r0, [sp, #8]
   36ac8:	add	r0, r0, #1
   36acc:	str	r0, [sp, #8]
   36ad0:	b	36a58 <__assert_fail@plt+0x255c4>
   36ad4:	ldr	r0, [fp, #-12]
   36ad8:	ldr	r1, [fp, #-16]
   36adc:	ldr	r2, [sp, #20]
   36ae0:	bl	36b18 <__assert_fail@plt+0x25684>
   36ae4:	str	r0, [sp, #16]
   36ae8:	ldr	r0, [sp, #16]
   36aec:	movw	r1, #0
   36af0:	cmp	r0, r1
   36af4:	bne	36b04 <__assert_fail@plt+0x25670>
   36af8:	ldr	r0, [fp, #-8]
   36afc:	movw	r1, #12
   36b00:	str	r1, [r0]
   36b04:	ldr	r0, [sp, #16]
   36b08:	str	r0, [fp, #-4]
   36b0c:	ldr	r0, [fp, #-4]
   36b10:	mov	sp, fp
   36b14:	pop	{fp, pc}
   36b18:	push	{fp, lr}
   36b1c:	mov	fp, sp
   36b20:	sub	sp, sp, #40	; 0x28
   36b24:	str	r0, [fp, #-8]
   36b28:	str	r1, [fp, #-12]
   36b2c:	str	r2, [fp, #-16]
   36b30:	movw	r0, #56	; 0x38
   36b34:	movw	r1, #1
   36b38:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   36b3c:	str	r0, [sp, #12]
   36b40:	ldr	r0, [sp, #12]
   36b44:	movw	r1, #0
   36b48:	cmp	r0, r1
   36b4c:	bne	36b5c <__assert_fail@plt+0x256c8>
   36b50:	movw	r0, #0
   36b54:	str	r0, [fp, #-4]
   36b58:	b	36d28 <__assert_fail@plt+0x25894>
   36b5c:	ldr	r0, [sp, #12]
   36b60:	add	r0, r0, #4
   36b64:	ldr	r1, [fp, #-12]
   36b68:	bl	30c08 <__assert_fail@plt+0x1f774>
   36b6c:	str	r0, [sp, #16]
   36b70:	ldr	r0, [sp, #16]
   36b74:	cmp	r0, #0
   36b78:	beq	36b90 <__assert_fail@plt+0x256fc>
   36b7c:	ldr	r0, [sp, #12]
   36b80:	bl	1388c <__assert_fail@plt+0x23f8>
   36b84:	movw	r0, #0
   36b88:	str	r0, [fp, #-4]
   36b8c:	b	36d28 <__assert_fail@plt+0x25894>
   36b90:	ldr	r0, [sp, #12]
   36b94:	add	r0, r0, #4
   36b98:	ldr	r1, [sp, #12]
   36b9c:	str	r0, [r1, #40]	; 0x28
   36ba0:	movw	r0, #0
   36ba4:	str	r0, [sp, #20]
   36ba8:	ldr	r0, [sp, #20]
   36bac:	ldr	r1, [fp, #-12]
   36bb0:	ldr	r1, [r1, #4]
   36bb4:	cmp	r0, r1
   36bb8:	bge	36cf0 <__assert_fail@plt+0x2585c>
   36bbc:	ldr	r0, [fp, #-8]
   36bc0:	ldr	r0, [r0]
   36bc4:	ldr	r1, [fp, #-12]
   36bc8:	ldr	r1, [r1, #8]
   36bcc:	ldr	r2, [sp, #20]
   36bd0:	ldr	r1, [r1, r2, lsl #2]
   36bd4:	add	r0, r0, r1, lsl #3
   36bd8:	str	r0, [sp, #8]
   36bdc:	ldr	r0, [sp, #8]
   36be0:	ldr	r0, [r0, #4]
   36be4:	and	r0, r0, #255	; 0xff
   36be8:	str	r0, [sp, #4]
   36bec:	ldr	r0, [sp, #4]
   36bf0:	cmp	r0, #1
   36bf4:	bne	36c18 <__assert_fail@plt+0x25784>
   36bf8:	ldr	r0, [sp, #8]
   36bfc:	ldr	r0, [r0, #4]
   36c00:	lsr	r0, r0, #8
   36c04:	movw	r1, #1023	; 0x3ff
   36c08:	and	r0, r0, r1
   36c0c:	cmp	r0, #0
   36c10:	bne	36c18 <__assert_fail@plt+0x25784>
   36c14:	b	36ce0 <__assert_fail@plt+0x2584c>
   36c18:	ldr	r0, [sp, #8]
   36c1c:	ldr	r0, [r0, #4]
   36c20:	ldr	r1, [sp, #12]
   36c24:	ldrb	r2, [r1, #52]	; 0x34
   36c28:	lsr	r3, r2, #5
   36c2c:	orr	r0, r3, r0, lsr #20
   36c30:	and	r0, r0, #1
   36c34:	lsl	r0, r0, #5
   36c38:	bic	r2, r2, #32
   36c3c:	orr	r0, r2, r0
   36c40:	strb	r0, [r1, #52]	; 0x34
   36c44:	ldr	r0, [sp, #4]
   36c48:	cmp	r0, #2
   36c4c:	bne	36c6c <__assert_fail@plt+0x257d8>
   36c50:	ldr	r0, [sp, #12]
   36c54:	ldrb	r1, [r0, #52]	; 0x34
   36c58:	bic	r1, r1, #16
   36c5c:	movw	r2, #16
   36c60:	orr	r1, r1, r2
   36c64:	strb	r1, [r0, #52]	; 0x34
   36c68:	b	36cdc <__assert_fail@plt+0x25848>
   36c6c:	ldr	r0, [sp, #4]
   36c70:	cmp	r0, #4
   36c74:	bne	36c94 <__assert_fail@plt+0x25800>
   36c78:	ldr	r0, [sp, #12]
   36c7c:	ldrb	r1, [r0, #52]	; 0x34
   36c80:	bic	r1, r1, #64	; 0x40
   36c84:	movw	r2, #64	; 0x40
   36c88:	orr	r1, r1, r2
   36c8c:	strb	r1, [r0, #52]	; 0x34
   36c90:	b	36cd8 <__assert_fail@plt+0x25844>
   36c94:	ldr	r0, [sp, #4]
   36c98:	cmp	r0, #12
   36c9c:	beq	36cbc <__assert_fail@plt+0x25828>
   36ca0:	ldr	r0, [sp, #8]
   36ca4:	ldr	r0, [r0, #4]
   36ca8:	lsr	r0, r0, #8
   36cac:	movw	r1, #1023	; 0x3ff
   36cb0:	and	r0, r0, r1
   36cb4:	cmp	r0, #0
   36cb8:	beq	36cd4 <__assert_fail@plt+0x25840>
   36cbc:	ldr	r0, [sp, #12]
   36cc0:	ldrb	r1, [r0, #52]	; 0x34
   36cc4:	and	r1, r1, #127	; 0x7f
   36cc8:	movw	r2, #128	; 0x80
   36ccc:	orr	r1, r1, r2
   36cd0:	strb	r1, [r0, #52]	; 0x34
   36cd4:	b	36cd8 <__assert_fail@plt+0x25844>
   36cd8:	b	36cdc <__assert_fail@plt+0x25848>
   36cdc:	b	36ce0 <__assert_fail@plt+0x2584c>
   36ce0:	ldr	r0, [sp, #20]
   36ce4:	add	r0, r0, #1
   36ce8:	str	r0, [sp, #20]
   36cec:	b	36ba8 <__assert_fail@plt+0x25714>
   36cf0:	ldr	r0, [fp, #-8]
   36cf4:	ldr	r1, [sp, #12]
   36cf8:	ldr	r2, [fp, #-16]
   36cfc:	bl	31450 <__assert_fail@plt+0x1ffbc>
   36d00:	str	r0, [sp, #16]
   36d04:	ldr	r0, [sp, #16]
   36d08:	cmp	r0, #0
   36d0c:	beq	36d20 <__assert_fail@plt+0x2588c>
   36d10:	ldr	r0, [sp, #12]
   36d14:	bl	266b0 <__assert_fail@plt+0x1521c>
   36d18:	movw	r0, #0
   36d1c:	str	r0, [sp, #12]
   36d20:	ldr	r0, [sp, #12]
   36d24:	str	r0, [fp, #-4]
   36d28:	ldr	r0, [fp, #-4]
   36d2c:	mov	sp, fp
   36d30:	pop	{fp, pc}
   36d34:	push	{fp, lr}
   36d38:	mov	fp, sp
   36d3c:	sub	sp, sp, #72	; 0x48
   36d40:	str	r0, [fp, #-8]
   36d44:	str	r1, [fp, #-12]
   36d48:	str	r2, [fp, #-16]
   36d4c:	str	r3, [fp, #-20]	; 0xffffffec
   36d50:	ldr	r0, [fp, #-8]
   36d54:	ldr	r0, [r0]
   36d58:	ldr	r1, [fp, #-12]
   36d5c:	add	r0, r0, r1, lsl #3
   36d60:	str	r0, [fp, #-24]	; 0xffffffe8
   36d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36d68:	ldr	r0, [r0, #4]
   36d6c:	and	r0, r0, #255	; 0xff
   36d70:	cmp	r0, #7
   36d74:	bne	36fe4 <__assert_fail@plt+0x25b50>
   36d78:	ldr	r0, [fp, #-16]
   36d7c:	ldr	r0, [r0, #4]
   36d80:	ldr	r1, [fp, #-20]	; 0xffffffec
   36d84:	add	r0, r0, r1
   36d88:	ldrb	r0, [r0]
   36d8c:	strb	r0, [sp, #35]	; 0x23
   36d90:	ldrb	r0, [sp, #35]	; 0x23
   36d94:	cmp	r0, #194	; 0xc2
   36d98:	bge	36da8 <__assert_fail@plt+0x25914>
   36d9c:	movw	r0, #0
   36da0:	str	r0, [fp, #-4]
   36da4:	b	37310 <__assert_fail@plt+0x25e7c>
   36da8:	ldr	r0, [fp, #-20]	; 0xffffffec
   36dac:	add	r0, r0, #2
   36db0:	ldr	r1, [fp, #-16]
   36db4:	ldr	r1, [r1, #48]	; 0x30
   36db8:	cmp	r0, r1
   36dbc:	ble	36dcc <__assert_fail@plt+0x25938>
   36dc0:	movw	r0, #0
   36dc4:	str	r0, [fp, #-4]
   36dc8:	b	37310 <__assert_fail@plt+0x25e7c>
   36dcc:	ldr	r0, [fp, #-16]
   36dd0:	ldr	r0, [r0, #4]
   36dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   36dd8:	add	r1, r1, #1
   36ddc:	add	r0, r0, r1
   36de0:	ldrb	r0, [r0]
   36de4:	strb	r0, [sp, #34]	; 0x22
   36de8:	ldrb	r0, [sp, #35]	; 0x23
   36dec:	cmp	r0, #224	; 0xe0
   36df0:	bge	36e34 <__assert_fail@plt+0x259a0>
   36df4:	ldrb	r0, [sp, #34]	; 0x22
   36df8:	cmp	r0, #128	; 0x80
   36dfc:	movw	r0, #1
   36e00:	str	r0, [sp, #12]
   36e04:	blt	36e1c <__assert_fail@plt+0x25988>
   36e08:	ldrb	r0, [sp, #34]	; 0x22
   36e0c:	cmp	r0, #191	; 0xbf
   36e10:	movw	r0, #0
   36e14:	movgt	r0, #1
   36e18:	str	r0, [sp, #12]
   36e1c:	ldr	r0, [sp, #12]
   36e20:	tst	r0, #1
   36e24:	movw	r0, #0
   36e28:	moveq	r0, #2
   36e2c:	str	r0, [fp, #-4]
   36e30:	b	37310 <__assert_fail@plt+0x25e7c>
   36e34:	ldrb	r0, [sp, #35]	; 0x23
   36e38:	cmp	r0, #240	; 0xf0
   36e3c:	bge	36e70 <__assert_fail@plt+0x259dc>
   36e40:	movw	r0, #3
   36e44:	str	r0, [fp, #-28]	; 0xffffffe4
   36e48:	ldrb	r0, [sp, #35]	; 0x23
   36e4c:	cmp	r0, #224	; 0xe0
   36e50:	bne	36e6c <__assert_fail@plt+0x259d8>
   36e54:	ldrb	r0, [sp, #34]	; 0x22
   36e58:	cmp	r0, #160	; 0xa0
   36e5c:	bge	36e6c <__assert_fail@plt+0x259d8>
   36e60:	movw	r0, #0
   36e64:	str	r0, [fp, #-4]
   36e68:	b	37310 <__assert_fail@plt+0x25e7c>
   36e6c:	b	36f3c <__assert_fail@plt+0x25aa8>
   36e70:	ldrb	r0, [sp, #35]	; 0x23
   36e74:	cmp	r0, #248	; 0xf8
   36e78:	bge	36eac <__assert_fail@plt+0x25a18>
   36e7c:	movw	r0, #4
   36e80:	str	r0, [fp, #-28]	; 0xffffffe4
   36e84:	ldrb	r0, [sp, #35]	; 0x23
   36e88:	cmp	r0, #240	; 0xf0
   36e8c:	bne	36ea8 <__assert_fail@plt+0x25a14>
   36e90:	ldrb	r0, [sp, #34]	; 0x22
   36e94:	cmp	r0, #144	; 0x90
   36e98:	bge	36ea8 <__assert_fail@plt+0x25a14>
   36e9c:	movw	r0, #0
   36ea0:	str	r0, [fp, #-4]
   36ea4:	b	37310 <__assert_fail@plt+0x25e7c>
   36ea8:	b	36f38 <__assert_fail@plt+0x25aa4>
   36eac:	ldrb	r0, [sp, #35]	; 0x23
   36eb0:	cmp	r0, #252	; 0xfc
   36eb4:	bge	36ee8 <__assert_fail@plt+0x25a54>
   36eb8:	movw	r0, #5
   36ebc:	str	r0, [fp, #-28]	; 0xffffffe4
   36ec0:	ldrb	r0, [sp, #35]	; 0x23
   36ec4:	cmp	r0, #248	; 0xf8
   36ec8:	bne	36ee4 <__assert_fail@plt+0x25a50>
   36ecc:	ldrb	r0, [sp, #34]	; 0x22
   36ed0:	cmp	r0, #136	; 0x88
   36ed4:	bge	36ee4 <__assert_fail@plt+0x25a50>
   36ed8:	movw	r0, #0
   36edc:	str	r0, [fp, #-4]
   36ee0:	b	37310 <__assert_fail@plt+0x25e7c>
   36ee4:	b	36f34 <__assert_fail@plt+0x25aa0>
   36ee8:	ldrb	r0, [sp, #35]	; 0x23
   36eec:	cmp	r0, #254	; 0xfe
   36ef0:	bge	36f24 <__assert_fail@plt+0x25a90>
   36ef4:	movw	r0, #6
   36ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   36efc:	ldrb	r0, [sp, #35]	; 0x23
   36f00:	cmp	r0, #252	; 0xfc
   36f04:	bne	36f20 <__assert_fail@plt+0x25a8c>
   36f08:	ldrb	r0, [sp, #34]	; 0x22
   36f0c:	cmp	r0, #132	; 0x84
   36f10:	bge	36f20 <__assert_fail@plt+0x25a8c>
   36f14:	movw	r0, #0
   36f18:	str	r0, [fp, #-4]
   36f1c:	b	37310 <__assert_fail@plt+0x25e7c>
   36f20:	b	36f30 <__assert_fail@plt+0x25a9c>
   36f24:	movw	r0, #0
   36f28:	str	r0, [fp, #-4]
   36f2c:	b	37310 <__assert_fail@plt+0x25e7c>
   36f30:	b	36f34 <__assert_fail@plt+0x25aa0>
   36f34:	b	36f38 <__assert_fail@plt+0x25aa4>
   36f38:	b	36f3c <__assert_fail@plt+0x25aa8>
   36f3c:	b	36f40 <__assert_fail@plt+0x25aac>
   36f40:	ldr	r0, [fp, #-20]	; 0xffffffec
   36f44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36f48:	add	r0, r0, r1
   36f4c:	ldr	r1, [fp, #-16]
   36f50:	ldr	r1, [r1, #48]	; 0x30
   36f54:	cmp	r0, r1
   36f58:	ble	36f68 <__assert_fail@plt+0x25ad4>
   36f5c:	movw	r0, #0
   36f60:	str	r0, [fp, #-4]
   36f64:	b	37310 <__assert_fail@plt+0x25e7c>
   36f68:	movw	r0, #1
   36f6c:	str	r0, [sp, #36]	; 0x24
   36f70:	ldr	r0, [sp, #36]	; 0x24
   36f74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36f78:	cmp	r0, r1
   36f7c:	bge	36fd8 <__assert_fail@plt+0x25b44>
   36f80:	ldr	r0, [fp, #-16]
   36f84:	ldr	r0, [r0, #4]
   36f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   36f8c:	ldr	r2, [sp, #36]	; 0x24
   36f90:	add	r1, r1, r2
   36f94:	add	r0, r0, r1
   36f98:	ldrb	r0, [r0]
   36f9c:	strb	r0, [sp, #34]	; 0x22
   36fa0:	ldrb	r0, [sp, #34]	; 0x22
   36fa4:	cmp	r0, #128	; 0x80
   36fa8:	blt	36fb8 <__assert_fail@plt+0x25b24>
   36fac:	ldrb	r0, [sp, #34]	; 0x22
   36fb0:	cmp	r0, #191	; 0xbf
   36fb4:	ble	36fc4 <__assert_fail@plt+0x25b30>
   36fb8:	movw	r0, #0
   36fbc:	str	r0, [fp, #-4]
   36fc0:	b	37310 <__assert_fail@plt+0x25e7c>
   36fc4:	b	36fc8 <__assert_fail@plt+0x25b34>
   36fc8:	ldr	r0, [sp, #36]	; 0x24
   36fcc:	add	r0, r0, #1
   36fd0:	str	r0, [sp, #36]	; 0x24
   36fd4:	b	36f70 <__assert_fail@plt+0x25adc>
   36fd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36fdc:	str	r0, [fp, #-4]
   36fe0:	b	37310 <__assert_fail@plt+0x25e7c>
   36fe4:	ldr	r0, [fp, #-16]
   36fe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   36fec:	bl	2e0c4 <__assert_fail@plt+0x1cc30>
   36ff0:	str	r0, [fp, #-28]	; 0xffffffe4
   36ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36ff8:	ldr	r0, [r0, #4]
   36ffc:	and	r0, r0, #255	; 0xff
   37000:	cmp	r0, #5
   37004:	bne	37098 <__assert_fail@plt+0x25c04>
   37008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3700c:	cmp	r0, #1
   37010:	bgt	37020 <__assert_fail@plt+0x25b8c>
   37014:	movw	r0, #0
   37018:	str	r0, [fp, #-4]
   3701c:	b	37310 <__assert_fail@plt+0x25e7c>
   37020:	ldr	r0, [fp, #-8]
   37024:	ldr	r0, [r0, #128]	; 0x80
   37028:	and	r0, r0, #64	; 0x40
   3702c:	cmp	r0, #0
   37030:	bne	37050 <__assert_fail@plt+0x25bbc>
   37034:	ldr	r0, [fp, #-16]
   37038:	ldr	r0, [r0, #4]
   3703c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37040:	add	r0, r0, r1
   37044:	ldrb	r0, [r0]
   37048:	cmp	r0, #10
   3704c:	beq	37080 <__assert_fail@plt+0x25bec>
   37050:	ldr	r0, [fp, #-8]
   37054:	ldr	r0, [r0, #128]	; 0x80
   37058:	and	r0, r0, #128	; 0x80
   3705c:	cmp	r0, #0
   37060:	beq	3708c <__assert_fail@plt+0x25bf8>
   37064:	ldr	r0, [fp, #-16]
   37068:	ldr	r0, [r0, #4]
   3706c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37070:	add	r0, r0, r1
   37074:	ldrb	r0, [r0]
   37078:	cmp	r0, #0
   3707c:	bne	3708c <__assert_fail@plt+0x25bf8>
   37080:	movw	r0, #0
   37084:	str	r0, [fp, #-4]
   37088:	b	37310 <__assert_fail@plt+0x25e7c>
   3708c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37090:	str	r0, [fp, #-4]
   37094:	b	37310 <__assert_fail@plt+0x25e7c>
   37098:	ldr	r0, [fp, #-16]
   3709c:	ldr	r1, [fp, #-20]	; 0xffffffec
   370a0:	bl	37590 <__assert_fail@plt+0x260fc>
   370a4:	str	r0, [fp, #-32]	; 0xffffffe0
   370a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   370ac:	cmp	r0, #1
   370b0:	bgt	370c0 <__assert_fail@plt+0x25c2c>
   370b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   370b8:	cmp	r0, #1
   370bc:	ble	370cc <__assert_fail@plt+0x25c38>
   370c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   370c4:	cmp	r0, #0
   370c8:	bne	370d8 <__assert_fail@plt+0x25c44>
   370cc:	movw	r0, #0
   370d0:	str	r0, [fp, #-4]
   370d4:	b	37310 <__assert_fail@plt+0x25e7c>
   370d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   370dc:	ldr	r0, [r0, #4]
   370e0:	and	r0, r0, #255	; 0xff
   370e4:	cmp	r0, #6
   370e8:	bne	37308 <__assert_fail@plt+0x25e74>
   370ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   370f0:	ldr	r0, [r0]
   370f4:	str	r0, [sp, #28]
   370f8:	movw	r0, #0
   370fc:	str	r0, [sp, #24]
   37100:	ldr	r0, [sp, #28]
   37104:	ldr	r0, [r0, #32]
   37108:	cmp	r0, #0
   3710c:	bne	37130 <__assert_fail@plt+0x25c9c>
   37110:	ldr	r0, [sp, #28]
   37114:	ldr	r0, [r0, #36]	; 0x24
   37118:	cmp	r0, #0
   3711c:	bne	37130 <__assert_fail@plt+0x25c9c>
   37120:	ldr	r0, [sp, #28]
   37124:	ldr	r0, [r0, #20]
   37128:	cmp	r0, #0
   3712c:	beq	37144 <__assert_fail@plt+0x25cb0>
   37130:	ldr	r0, [fp, #-16]
   37134:	ldr	r1, [fp, #-20]	; 0xffffffec
   37138:	bl	2a210 <__assert_fail@plt+0x18d7c>
   3713c:	str	r0, [sp, #8]
   37140:	b	37150 <__assert_fail@plt+0x25cbc>
   37144:	movw	r0, #0
   37148:	str	r0, [sp, #8]
   3714c:	b	37150 <__assert_fail@plt+0x25cbc>
   37150:	ldr	r0, [sp, #8]
   37154:	str	r0, [sp, #20]
   37158:	movw	r0, #0
   3715c:	str	r0, [sp, #36]	; 0x24
   37160:	ldr	r0, [sp, #36]	; 0x24
   37164:	ldr	r1, [sp, #28]
   37168:	ldr	r1, [r1, #20]
   3716c:	cmp	r0, r1
   37170:	bge	371b4 <__assert_fail@plt+0x25d20>
   37174:	ldr	r0, [sp, #20]
   37178:	ldr	r1, [sp, #28]
   3717c:	ldr	r1, [r1]
   37180:	ldr	r2, [sp, #36]	; 0x24
   37184:	add	r1, r1, r2, lsl #2
   37188:	ldr	r1, [r1]
   3718c:	cmp	r0, r1
   37190:	bne	371a0 <__assert_fail@plt+0x25d0c>
   37194:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37198:	str	r0, [sp, #24]
   3719c:	b	3729c <__assert_fail@plt+0x25e08>
   371a0:	b	371a4 <__assert_fail@plt+0x25d10>
   371a4:	ldr	r0, [sp, #36]	; 0x24
   371a8:	add	r0, r0, #1
   371ac:	str	r0, [sp, #36]	; 0x24
   371b0:	b	37160 <__assert_fail@plt+0x25ccc>
   371b4:	movw	r0, #0
   371b8:	str	r0, [sp, #36]	; 0x24
   371bc:	ldr	r0, [sp, #36]	; 0x24
   371c0:	ldr	r1, [sp, #28]
   371c4:	ldr	r1, [r1, #36]	; 0x24
   371c8:	cmp	r0, r1
   371cc:	bge	3721c <__assert_fail@plt+0x25d88>
   371d0:	ldr	r0, [sp, #28]
   371d4:	ldr	r0, [r0, #12]
   371d8:	ldr	r1, [sp, #36]	; 0x24
   371dc:	add	r0, r0, r1, lsl #2
   371e0:	ldr	r0, [r0]
   371e4:	str	r0, [sp, #16]
   371e8:	ldr	r0, [sp, #20]
   371ec:	ldr	r1, [sp, #16]
   371f0:	bl	111c4 <iswctype@plt>
   371f4:	cmp	r0, #0
   371f8:	beq	37208 <__assert_fail@plt+0x25d74>
   371fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37200:	str	r0, [sp, #24]
   37204:	b	3729c <__assert_fail@plt+0x25e08>
   37208:	b	3720c <__assert_fail@plt+0x25d78>
   3720c:	ldr	r0, [sp, #36]	; 0x24
   37210:	add	r0, r0, #1
   37214:	str	r0, [sp, #36]	; 0x24
   37218:	b	371bc <__assert_fail@plt+0x25d28>
   3721c:	movw	r0, #0
   37220:	str	r0, [sp, #36]	; 0x24
   37224:	ldr	r0, [sp, #36]	; 0x24
   37228:	ldr	r1, [sp, #28]
   3722c:	ldr	r1, [r1, #32]
   37230:	cmp	r0, r1
   37234:	bge	37298 <__assert_fail@plt+0x25e04>
   37238:	ldr	r0, [sp, #28]
   3723c:	ldr	r0, [r0, #4]
   37240:	ldr	r1, [sp, #36]	; 0x24
   37244:	add	r0, r0, r1, lsl #2
   37248:	ldr	r0, [r0]
   3724c:	ldr	r1, [sp, #20]
   37250:	cmp	r0, r1
   37254:	bhi	37284 <__assert_fail@plt+0x25df0>
   37258:	ldr	r0, [sp, #20]
   3725c:	ldr	r1, [sp, #28]
   37260:	ldr	r1, [r1, #8]
   37264:	ldr	r2, [sp, #36]	; 0x24
   37268:	add	r1, r1, r2, lsl #2
   3726c:	ldr	r1, [r1]
   37270:	cmp	r0, r1
   37274:	bhi	37284 <__assert_fail@plt+0x25df0>
   37278:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3727c:	str	r0, [sp, #24]
   37280:	b	3729c <__assert_fail@plt+0x25e08>
   37284:	b	37288 <__assert_fail@plt+0x25df4>
   37288:	ldr	r0, [sp, #36]	; 0x24
   3728c:	add	r0, r0, #1
   37290:	str	r0, [sp, #36]	; 0x24
   37294:	b	37224 <__assert_fail@plt+0x25d90>
   37298:	b	3729c <__assert_fail@plt+0x25e08>
   3729c:	ldr	r0, [sp, #28]
   372a0:	ldrb	r0, [r0, #16]
   372a4:	and	r0, r0, #1
   372a8:	and	r0, r0, #255	; 0xff
   372ac:	cmp	r0, #0
   372b0:	bne	372c0 <__assert_fail@plt+0x25e2c>
   372b4:	ldr	r0, [sp, #24]
   372b8:	str	r0, [fp, #-4]
   372bc:	b	37310 <__assert_fail@plt+0x25e7c>
   372c0:	ldr	r0, [sp, #24]
   372c4:	cmp	r0, #0
   372c8:	ble	372d8 <__assert_fail@plt+0x25e44>
   372cc:	movw	r0, #0
   372d0:	str	r0, [fp, #-4]
   372d4:	b	37310 <__assert_fail@plt+0x25e7c>
   372d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   372dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   372e0:	cmp	r0, r1
   372e4:	ble	372f4 <__assert_fail@plt+0x25e60>
   372e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   372ec:	str	r0, [sp, #4]
   372f0:	b	372fc <__assert_fail@plt+0x25e68>
   372f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   372f8:	str	r0, [sp, #4]
   372fc:	ldr	r0, [sp, #4]
   37300:	str	r0, [fp, #-4]
   37304:	b	37310 <__assert_fail@plt+0x25e7c>
   37308:	movw	r0, #0
   3730c:	str	r0, [fp, #-4]
   37310:	ldr	r0, [fp, #-4]
   37314:	mov	sp, fp
   37318:	pop	{fp, pc}
   3731c:	push	{fp, lr}
   37320:	mov	fp, sp
   37324:	sub	sp, sp, #32
   37328:	str	r0, [fp, #-8]
   3732c:	str	r1, [fp, #-12]
   37330:	str	r2, [sp, #16]
   37334:	ldr	r0, [fp, #-8]
   37338:	ldr	r0, [r0, #4]
   3733c:	ldr	r1, [sp, #16]
   37340:	ldrb	r0, [r0, r1]
   37344:	strb	r0, [sp, #15]
   37348:	ldr	r0, [fp, #-12]
   3734c:	ldrb	r0, [r0, #4]
   37350:	sub	r0, r0, #1
   37354:	cmp	r0, #6
   37358:	str	r0, [sp, #4]
   3735c:	bhi	3745c <__assert_fail@plt+0x25fc8>
   37360:	add	r0, pc, #8
   37364:	ldr	r1, [sp, #4]
   37368:	ldr	r0, [r0, r1, lsl #2]
   3736c:	mov	pc, r0
   37370:	andeq	r7, r3, ip, lsl #7
   37374:	andeq	r7, r3, ip, asr r4
   37378:			; <UNDEFINED> instruction: 0x000373b4
   3737c:	andeq	r7, r3, ip, asr r4
   37380:	andeq	r7, r3, r0, lsl #8
   37384:	andeq	r7, r3, ip, asr r4
   37388:	andeq	r7, r3, r0, ror #7
   3738c:	ldr	r0, [fp, #-12]
   37390:	ldrb	r0, [r0]
   37394:	ldrb	r1, [sp, #15]
   37398:	cmp	r0, r1
   3739c:	beq	373b0 <__assert_fail@plt+0x25f1c>
   373a0:	movw	r0, #0
   373a4:	and	r0, r0, #1
   373a8:	strb	r0, [fp, #-1]
   373ac:	b	37580 <__assert_fail@plt+0x260ec>
   373b0:	b	3746c <__assert_fail@plt+0x25fd8>
   373b4:	ldr	r0, [fp, #-12]
   373b8:	ldr	r0, [r0]
   373bc:	ldrb	r1, [sp, #15]
   373c0:	bl	33978 <__assert_fail@plt+0x224e4>
   373c4:	tst	r0, #1
   373c8:	bne	373dc <__assert_fail@plt+0x25f48>
   373cc:	movw	r0, #0
   373d0:	and	r0, r0, #1
   373d4:	strb	r0, [fp, #-1]
   373d8:	b	37580 <__assert_fail@plt+0x260ec>
   373dc:	b	3746c <__assert_fail@plt+0x25fd8>
   373e0:	ldrb	r0, [sp, #15]
   373e4:	cmp	r0, #128	; 0x80
   373e8:	blt	373fc <__assert_fail@plt+0x25f68>
   373ec:	movw	r0, #0
   373f0:	and	r0, r0, #1
   373f4:	strb	r0, [fp, #-1]
   373f8:	b	37580 <__assert_fail@plt+0x260ec>
   373fc:	b	37400 <__assert_fail@plt+0x25f6c>
   37400:	ldrb	r0, [sp, #15]
   37404:	cmp	r0, #10
   37408:	bne	37424 <__assert_fail@plt+0x25f90>
   3740c:	ldr	r0, [fp, #-8]
   37410:	ldr	r0, [r0, #84]	; 0x54
   37414:	ldr	r0, [r0, #128]	; 0x80
   37418:	and	r0, r0, #64	; 0x40
   3741c:	cmp	r0, #0
   37420:	beq	37448 <__assert_fail@plt+0x25fb4>
   37424:	ldrb	r0, [sp, #15]
   37428:	cmp	r0, #0
   3742c:	bne	37458 <__assert_fail@plt+0x25fc4>
   37430:	ldr	r0, [fp, #-8]
   37434:	ldr	r0, [r0, #84]	; 0x54
   37438:	ldr	r0, [r0, #128]	; 0x80
   3743c:	and	r0, r0, #128	; 0x80
   37440:	cmp	r0, #0
   37444:	beq	37458 <__assert_fail@plt+0x25fc4>
   37448:	movw	r0, #0
   3744c:	and	r0, r0, #1
   37450:	strb	r0, [fp, #-1]
   37454:	b	37580 <__assert_fail@plt+0x260ec>
   37458:	b	3746c <__assert_fail@plt+0x25fd8>
   3745c:	movw	r0, #0
   37460:	and	r0, r0, #1
   37464:	strb	r0, [fp, #-1]
   37468:	b	37580 <__assert_fail@plt+0x260ec>
   3746c:	ldr	r0, [fp, #-12]
   37470:	ldr	r0, [r0, #4]
   37474:	lsr	r0, r0, #8
   37478:	movw	r1, #1023	; 0x3ff
   3747c:	and	r0, r0, r1
   37480:	cmp	r0, #0
   37484:	beq	37574 <__assert_fail@plt+0x260e0>
   37488:	ldr	r0, [fp, #-8]
   3748c:	ldr	r1, [sp, #16]
   37490:	ldr	r2, [fp, #-8]
   37494:	ldr	r2, [r2, #88]	; 0x58
   37498:	bl	33608 <__assert_fail@plt+0x22174>
   3749c:	str	r0, [sp, #8]
   374a0:	ldr	r0, [fp, #-12]
   374a4:	ldr	r0, [r0, #4]
   374a8:	lsr	r0, r0, #8
   374ac:	movw	r1, #1023	; 0x3ff
   374b0:	and	r0, r0, r1
   374b4:	and	r0, r0, #4
   374b8:	cmp	r0, #0
   374bc:	beq	374d0 <__assert_fail@plt+0x2603c>
   374c0:	ldr	r0, [sp, #8]
   374c4:	and	r0, r0, #1
   374c8:	cmp	r0, #0
   374cc:	beq	37560 <__assert_fail@plt+0x260cc>
   374d0:	ldr	r0, [fp, #-12]
   374d4:	ldr	r0, [r0, #4]
   374d8:	lsr	r0, r0, #8
   374dc:	movw	r1, #1023	; 0x3ff
   374e0:	and	r0, r0, r1
   374e4:	and	r0, r0, #8
   374e8:	cmp	r0, #0
   374ec:	beq	37500 <__assert_fail@plt+0x2606c>
   374f0:	ldr	r0, [sp, #8]
   374f4:	and	r0, r0, #1
   374f8:	cmp	r0, #0
   374fc:	bne	37560 <__assert_fail@plt+0x260cc>
   37500:	ldr	r0, [fp, #-12]
   37504:	ldr	r0, [r0, #4]
   37508:	lsr	r0, r0, #8
   3750c:	movw	r1, #1023	; 0x3ff
   37510:	and	r0, r0, r1
   37514:	and	r0, r0, #32
   37518:	cmp	r0, #0
   3751c:	beq	37530 <__assert_fail@plt+0x2609c>
   37520:	ldr	r0, [sp, #8]
   37524:	and	r0, r0, #2
   37528:	cmp	r0, #0
   3752c:	beq	37560 <__assert_fail@plt+0x260cc>
   37530:	ldr	r0, [fp, #-12]
   37534:	ldr	r0, [r0, #4]
   37538:	lsr	r0, r0, #8
   3753c:	movw	r1, #1023	; 0x3ff
   37540:	and	r0, r0, r1
   37544:	and	r0, r0, #128	; 0x80
   37548:	cmp	r0, #0
   3754c:	beq	37570 <__assert_fail@plt+0x260dc>
   37550:	ldr	r0, [sp, #8]
   37554:	and	r0, r0, #8
   37558:	cmp	r0, #0
   3755c:	bne	37570 <__assert_fail@plt+0x260dc>
   37560:	movw	r0, #0
   37564:	and	r0, r0, #1
   37568:	strb	r0, [fp, #-1]
   3756c:	b	37580 <__assert_fail@plt+0x260ec>
   37570:	b	37574 <__assert_fail@plt+0x260e0>
   37574:	movw	r0, #1
   37578:	and	r0, r0, #1
   3757c:	strb	r0, [fp, #-1]
   37580:	ldrb	r0, [fp, #-1]
   37584:	and	r0, r0, #1
   37588:	mov	sp, fp
   3758c:	pop	{fp, pc}
   37590:	sub	sp, sp, #8
   37594:	str	r0, [sp, #4]
   37598:	str	r1, [sp]
   3759c:	movw	r0, #1
   375a0:	add	sp, sp, #8
   375a4:	bx	lr
   375a8:	push	{fp, lr}
   375ac:	mov	fp, sp
   375b0:	sub	sp, sp, #72	; 0x48
   375b4:	str	r0, [fp, #-8]
   375b8:	str	r1, [fp, #-12]
   375bc:	ldr	r0, [fp, #-8]
   375c0:	ldr	r0, [r0, #84]	; 0x54
   375c4:	str	r0, [fp, #-16]
   375c8:	movw	r0, #0
   375cc:	str	r0, [fp, #-24]	; 0xffffffe8
   375d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   375d4:	ldr	r1, [fp, #-12]
   375d8:	ldr	r1, [r1, #8]
   375dc:	cmp	r0, r1
   375e0:	bge	37970 <__assert_fail@plt+0x264dc>
   375e4:	ldr	r0, [fp, #-12]
   375e8:	ldr	r0, [r0, #12]
   375ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   375f0:	ldr	r0, [r0, r1, lsl #2]
   375f4:	str	r0, [sp, #28]
   375f8:	ldr	r0, [fp, #-16]
   375fc:	ldr	r0, [r0]
   37600:	ldr	r1, [sp, #28]
   37604:	add	r0, r0, r1, lsl #3
   37608:	ldr	r0, [r0, #4]
   3760c:	lsr	r0, r0, #20
   37610:	and	r0, r0, #1
   37614:	cmp	r0, #0
   37618:	bne	37620 <__assert_fail@plt+0x2618c>
   3761c:	b	37960 <__assert_fail@plt+0x264cc>
   37620:	ldr	r0, [fp, #-16]
   37624:	ldr	r0, [r0]
   37628:	ldr	r1, [sp, #28]
   3762c:	add	r0, r0, r1, lsl #3
   37630:	ldr	r0, [r0, #4]
   37634:	lsr	r0, r0, #8
   37638:	movw	r1, #1023	; 0x3ff
   3763c:	and	r0, r0, r1
   37640:	cmp	r0, #0
   37644:	beq	37754 <__assert_fail@plt+0x262c0>
   37648:	ldr	r0, [fp, #-8]
   3764c:	ldr	r1, [r0, #40]	; 0x28
   37650:	ldr	r2, [r0, #88]	; 0x58
   37654:	bl	33608 <__assert_fail@plt+0x22174>
   37658:	str	r0, [sp, #16]
   3765c:	ldr	r0, [fp, #-16]
   37660:	ldr	r0, [r0]
   37664:	ldr	r1, [sp, #28]
   37668:	add	r0, r0, r1, lsl #3
   3766c:	ldr	r0, [r0, #4]
   37670:	lsr	r0, r0, #8
   37674:	movw	r1, #1023	; 0x3ff
   37678:	and	r0, r0, r1
   3767c:	and	r0, r0, #4
   37680:	cmp	r0, #0
   37684:	beq	37698 <__assert_fail@plt+0x26204>
   37688:	ldr	r0, [sp, #16]
   3768c:	and	r0, r0, #1
   37690:	cmp	r0, #0
   37694:	beq	3774c <__assert_fail@plt+0x262b8>
   37698:	ldr	r0, [fp, #-16]
   3769c:	ldr	r0, [r0]
   376a0:	ldr	r1, [sp, #28]
   376a4:	add	r0, r0, r1, lsl #3
   376a8:	ldr	r0, [r0, #4]
   376ac:	lsr	r0, r0, #8
   376b0:	movw	r1, #1023	; 0x3ff
   376b4:	and	r0, r0, r1
   376b8:	and	r0, r0, #8
   376bc:	cmp	r0, #0
   376c0:	beq	376d4 <__assert_fail@plt+0x26240>
   376c4:	ldr	r0, [sp, #16]
   376c8:	and	r0, r0, #1
   376cc:	cmp	r0, #0
   376d0:	bne	3774c <__assert_fail@plt+0x262b8>
   376d4:	ldr	r0, [fp, #-16]
   376d8:	ldr	r0, [r0]
   376dc:	ldr	r1, [sp, #28]
   376e0:	add	r0, r0, r1, lsl #3
   376e4:	ldr	r0, [r0, #4]
   376e8:	lsr	r0, r0, #8
   376ec:	movw	r1, #1023	; 0x3ff
   376f0:	and	r0, r0, r1
   376f4:	and	r0, r0, #32
   376f8:	cmp	r0, #0
   376fc:	beq	37710 <__assert_fail@plt+0x2627c>
   37700:	ldr	r0, [sp, #16]
   37704:	and	r0, r0, #2
   37708:	cmp	r0, #0
   3770c:	beq	3774c <__assert_fail@plt+0x262b8>
   37710:	ldr	r0, [fp, #-16]
   37714:	ldr	r0, [r0]
   37718:	ldr	r1, [sp, #28]
   3771c:	add	r0, r0, r1, lsl #3
   37720:	ldr	r0, [r0, #4]
   37724:	lsr	r0, r0, #8
   37728:	movw	r1, #1023	; 0x3ff
   3772c:	and	r0, r0, r1
   37730:	and	r0, r0, #128	; 0x80
   37734:	cmp	r0, #0
   37738:	beq	37750 <__assert_fail@plt+0x262bc>
   3773c:	ldr	r0, [sp, #16]
   37740:	and	r0, r0, #8
   37744:	cmp	r0, #0
   37748:	bne	37750 <__assert_fail@plt+0x262bc>
   3774c:	b	37960 <__assert_fail@plt+0x264cc>
   37750:	b	37754 <__assert_fail@plt+0x262c0>
   37754:	ldr	r0, [fp, #-16]
   37758:	ldr	r1, [sp, #28]
   3775c:	ldr	r2, [fp, #-8]
   37760:	ldr	r3, [fp, #-8]
   37764:	ldr	r3, [r3, #40]	; 0x28
   37768:	bl	36d34 <__assert_fail@plt+0x258a0>
   3776c:	str	r0, [sp, #24]
   37770:	ldr	r0, [sp, #24]
   37774:	cmp	r0, #0
   37778:	bne	37780 <__assert_fail@plt+0x262ec>
   3777c:	b	37960 <__assert_fail@plt+0x264cc>
   37780:	ldr	r0, [fp, #-8]
   37784:	ldr	r0, [r0, #40]	; 0x28
   37788:	ldr	r1, [sp, #24]
   3778c:	add	r0, r0, r1
   37790:	str	r0, [sp, #20]
   37794:	ldr	r0, [fp, #-8]
   37798:	ldr	r0, [r0, #120]	; 0x78
   3779c:	ldr	r1, [sp, #24]
   377a0:	cmp	r0, r1
   377a4:	bge	377b4 <__assert_fail@plt+0x26320>
   377a8:	ldr	r0, [sp, #24]
   377ac:	str	r0, [sp, #8]
   377b0:	b	377c0 <__assert_fail@plt+0x2632c>
   377b4:	ldr	r0, [fp, #-8]
   377b8:	ldr	r0, [r0, #120]	; 0x78
   377bc:	str	r0, [sp, #8]
   377c0:	ldr	r0, [sp, #8]
   377c4:	ldr	r1, [fp, #-8]
   377c8:	str	r0, [r1, #120]	; 0x78
   377cc:	ldr	r0, [fp, #-8]
   377d0:	ldr	r1, [sp, #20]
   377d4:	bl	35230 <__assert_fail@plt+0x23d9c>
   377d8:	str	r0, [fp, #-20]	; 0xffffffec
   377dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   377e0:	cmp	r0, #0
   377e4:	beq	377f4 <__assert_fail@plt+0x26360>
   377e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   377ec:	str	r0, [fp, #-4]
   377f0:	b	37978 <__assert_fail@plt+0x264e4>
   377f4:	ldr	r0, [fp, #-16]
   377f8:	ldr	r0, [r0, #12]
   377fc:	ldr	r1, [sp, #28]
   37800:	add	r0, r0, r1, lsl #2
   37804:	ldr	r0, [r0]
   37808:	cmn	r0, #1
   3780c:	beq	37814 <__assert_fail@plt+0x26380>
   37810:	b	37814 <__assert_fail@plt+0x26380>
   37814:	ldr	r0, [fp, #-16]
   37818:	ldr	r1, [r0, #12]
   3781c:	ldr	r0, [r0, #24]
   37820:	ldr	r2, [sp, #28]
   37824:	ldr	r1, [r1, r2, lsl #2]
   37828:	add	r1, r1, r1, lsl #1
   3782c:	add	r0, r0, r1, lsl #2
   37830:	str	r0, [sp, #32]
   37834:	ldr	r0, [fp, #-8]
   37838:	ldr	r0, [r0, #100]	; 0x64
   3783c:	ldr	r1, [sp, #20]
   37840:	add	r0, r0, r1, lsl #2
   37844:	ldr	r0, [r0]
   37848:	str	r0, [sp, #12]
   3784c:	ldr	r0, [sp, #12]
   37850:	movw	r1, #0
   37854:	cmp	r0, r1
   37858:	bne	3787c <__assert_fail@plt+0x263e8>
   3785c:	ldr	r0, [sp, #32]
   37860:	ldr	r1, [r0]
   37864:	str	r1, [sp, #36]	; 0x24
   37868:	ldr	r1, [r0, #4]
   3786c:	str	r1, [sp, #40]	; 0x28
   37870:	ldr	r0, [r0, #8]
   37874:	str	r0, [sp, #44]	; 0x2c
   37878:	b	378b0 <__assert_fail@plt+0x2641c>
   3787c:	ldr	r0, [sp, #12]
   37880:	ldr	r1, [r0, #40]	; 0x28
   37884:	ldr	r2, [sp, #32]
   37888:	add	r0, sp, #36	; 0x24
   3788c:	bl	34dfc <__assert_fail@plt+0x23968>
   37890:	str	r0, [fp, #-20]	; 0xffffffec
   37894:	ldr	r0, [fp, #-20]	; 0xffffffec
   37898:	cmp	r0, #0
   3789c:	beq	378ac <__assert_fail@plt+0x26418>
   378a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   378a4:	str	r0, [fp, #-4]
   378a8:	b	37978 <__assert_fail@plt+0x264e4>
   378ac:	b	378b0 <__assert_fail@plt+0x2641c>
   378b0:	ldr	r0, [fp, #-8]
   378b4:	ldr	r1, [sp, #20]
   378b8:	sub	r1, r1, #1
   378bc:	ldr	r2, [r0, #88]	; 0x58
   378c0:	bl	33608 <__assert_fail@plt+0x22174>
   378c4:	str	r0, [sp, #16]
   378c8:	ldr	r1, [fp, #-16]
   378cc:	ldr	r3, [sp, #16]
   378d0:	sub	r0, fp, #20
   378d4:	add	r2, sp, #36	; 0x24
   378d8:	bl	30dcc <__assert_fail@plt+0x1f938>
   378dc:	ldr	r1, [fp, #-8]
   378e0:	ldr	r1, [r1, #100]	; 0x64
   378e4:	ldr	r2, [sp, #20]
   378e8:	add	r1, r1, r2, lsl #2
   378ec:	str	r0, [r1]
   378f0:	ldr	r0, [sp, #12]
   378f4:	movw	r1, #0
   378f8:	cmp	r0, r1
   378fc:	beq	37908 <__assert_fail@plt+0x26474>
   37900:	ldr	r0, [sp, #44]	; 0x2c
   37904:	bl	1388c <__assert_fail@plt+0x23f8>
   37908:	ldr	r0, [fp, #-8]
   3790c:	ldr	r0, [r0, #100]	; 0x64
   37910:	ldr	r1, [sp, #20]
   37914:	add	r0, r0, r1, lsl #2
   37918:	ldr	r0, [r0]
   3791c:	movw	r1, #0
   37920:	cmp	r0, r1
   37924:	movw	r0, #0
   37928:	str	r0, [sp, #4]
   3792c:	bne	37944 <__assert_fail@plt+0x264b0>
   37930:	ldr	r0, [fp, #-20]	; 0xffffffec
   37934:	cmp	r0, #0
   37938:	movw	r0, #0
   3793c:	movne	r0, #1
   37940:	str	r0, [sp, #4]
   37944:	ldr	r0, [sp, #4]
   37948:	tst	r0, #1
   3794c:	beq	3795c <__assert_fail@plt+0x264c8>
   37950:	ldr	r0, [fp, #-20]	; 0xffffffec
   37954:	str	r0, [fp, #-4]
   37958:	b	37978 <__assert_fail@plt+0x264e4>
   3795c:	b	37960 <__assert_fail@plt+0x264cc>
   37960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37964:	add	r0, r0, #1
   37968:	str	r0, [fp, #-24]	; 0xffffffe8
   3796c:	b	375d0 <__assert_fail@plt+0x2613c>
   37970:	movw	r0, #0
   37974:	str	r0, [fp, #-4]
   37978:	ldr	r0, [fp, #-4]
   3797c:	mov	sp, fp
   37980:	pop	{fp, pc}
   37984:	push	{r4, r5, fp, lr}
   37988:	add	fp, sp, #8
   3798c:	sub	sp, sp, #2160	; 0x870
   37990:	sub	sp, sp, #12288	; 0x3000
   37994:	add	r3, sp, #20
   37998:	sub	lr, fp, #6144	; 0x1800
   3799c:	sub	r2, lr, #100	; 0x64
   379a0:	str	r0, [fp, #-16]
   379a4:	str	r1, [fp, #-20]	; 0xffffffec
   379a8:	movw	r0, #0
   379ac:	strb	r0, [fp, #-37]	; 0xffffffdb
   379b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   379b4:	movw	r1, #0
   379b8:	str	r1, [r0, #44]	; 0x2c
   379bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   379c0:	str	r1, [r0, #48]	; 0x30
   379c4:	ldr	r0, [fp, #-16]
   379c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   379cc:	bl	381ac <__assert_fail@plt+0x26d18>
   379d0:	str	r0, [fp, #-52]	; 0xffffffcc
   379d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   379d8:	cmp	r0, #0
   379dc:	bgt	37a44 <__assert_fail@plt+0x265b0>
   379e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   379e4:	cmp	r0, #0
   379e8:	bne	37a34 <__assert_fail@plt+0x265a0>
   379ec:	movw	r0, #4
   379f0:	movw	r1, #256	; 0x100
   379f4:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   379f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   379fc:	str	r0, [r1, #44]	; 0x2c
   37a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   37a04:	ldr	r0, [r0, #44]	; 0x2c
   37a08:	movw	r1, #0
   37a0c:	cmp	r0, r1
   37a10:	bne	37a24 <__assert_fail@plt+0x26590>
   37a14:	movw	r0, #0
   37a18:	and	r0, r0, #1
   37a1c:	strb	r0, [fp, #-9]
   37a20:	b	3819c <__assert_fail@plt+0x26d08>
   37a24:	movw	r0, #1
   37a28:	and	r0, r0, #1
   37a2c:	strb	r0, [fp, #-9]
   37a30:	b	3819c <__assert_fail@plt+0x26d08>
   37a34:	movw	r0, #0
   37a38:	and	r0, r0, #1
   37a3c:	strb	r0, [fp, #-9]
   37a40:	b	3819c <__assert_fail@plt+0x26d08>
   37a44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   37a48:	add	r1, r0, #1
   37a4c:	sub	lr, fp, #3072	; 0xc00
   37a50:	sub	r0, lr, #68	; 0x44
   37a54:	bl	2fdb8 <__assert_fail@plt+0x1e924>
   37a58:	str	r0, [fp, #-24]	; 0xffffffe8
   37a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37a60:	cmp	r0, #0
   37a64:	beq	37acc <__assert_fail@plt+0x26638>
   37a68:	b	37a6c <__assert_fail@plt+0x265d8>
   37a6c:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   37a70:	bl	1388c <__assert_fail@plt+0x23f8>
   37a74:	movw	r0, #0
   37a78:	str	r0, [fp, #-28]	; 0xffffffe4
   37a7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37a80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37a84:	cmp	r0, r1
   37a88:	bge	37abc <__assert_fail@plt+0x26628>
   37a8c:	sub	lr, fp, #6144	; 0x1800
   37a90:	sub	r0, lr, #100	; 0x64
   37a94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37a98:	movw	r2, #12
   37a9c:	mul	r1, r1, r2
   37aa0:	add	r0, r0, r1
   37aa4:	ldr	r0, [r0, #8]
   37aa8:	bl	1388c <__assert_fail@plt+0x23f8>
   37aac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37ab0:	add	r0, r0, #1
   37ab4:	str	r0, [fp, #-28]	; 0xffffffe4
   37ab8:	b	37a7c <__assert_fail@plt+0x265e8>
   37abc:	movw	r0, #0
   37ac0:	and	r0, r0, #1
   37ac4:	strb	r0, [fp, #-9]
   37ac8:	b	3819c <__assert_fail@plt+0x26d08>
   37acc:	sub	lr, fp, #3072	; 0xc00
   37ad0:	sub	r0, lr, #100	; 0x64
   37ad4:	bl	3898c <__assert_fail@plt+0x274f8>
   37ad8:	movw	r0, #0
   37adc:	str	r0, [fp, #-28]	; 0xffffffe4
   37ae0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37ae4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37ae8:	cmp	r0, r1
   37aec:	bge	37dbc <__assert_fail@plt+0x26928>
   37af0:	movw	r0, #0
   37af4:	str	r0, [fp, #-3136]	; 0xfffff3c0
   37af8:	str	r0, [fp, #-32]	; 0xffffffe0
   37afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37b04:	movw	r2, #12
   37b08:	mul	r1, r1, r2
   37b0c:	sub	lr, fp, #6144	; 0x1800
   37b10:	sub	r2, lr, #100	; 0x64
   37b14:	add	r1, r2, r1
   37b18:	ldr	r1, [r1, #4]
   37b1c:	cmp	r0, r1
   37b20:	bge	37bb4 <__assert_fail@plt+0x26720>
   37b24:	ldr	r0, [fp, #-16]
   37b28:	ldr	r0, [r0, #12]
   37b2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37b30:	add	r1, r1, r1, lsl #1
   37b34:	sub	lr, fp, #6144	; 0x1800
   37b38:	sub	r2, lr, #100	; 0x64
   37b3c:	add	r1, r2, r1, lsl #2
   37b40:	ldr	r1, [r1, #8]
   37b44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37b48:	ldr	r1, [r1, r2, lsl #2]
   37b4c:	add	r0, r0, r1, lsl #2
   37b50:	ldr	r0, [r0]
   37b54:	str	r0, [sp, #16]
   37b58:	ldr	r0, [sp, #16]
   37b5c:	cmn	r0, #1
   37b60:	beq	37ba0 <__assert_fail@plt+0x2670c>
   37b64:	ldr	r0, [fp, #-16]
   37b68:	ldr	r0, [r0, #24]
   37b6c:	ldr	r1, [sp, #16]
   37b70:	movw	r2, #12
   37b74:	mul	r1, r1, r2
   37b78:	add	r1, r0, r1
   37b7c:	sub	lr, fp, #3072	; 0xc00
   37b80:	sub	r0, lr, #68	; 0x44
   37b84:	bl	30330 <__assert_fail@plt+0x1ee9c>
   37b88:	str	r0, [fp, #-24]	; 0xffffffe8
   37b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b90:	cmp	r0, #0
   37b94:	beq	37b9c <__assert_fail@plt+0x26708>
   37b98:	b	37a6c <__assert_fail@plt+0x265d8>
   37b9c:	b	37ba0 <__assert_fail@plt+0x2670c>
   37ba0:	b	37ba4 <__assert_fail@plt+0x26710>
   37ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37ba8:	add	r0, r0, #1
   37bac:	str	r0, [fp, #-32]	; 0xffffffe0
   37bb0:	b	37afc <__assert_fail@plt+0x26668>
   37bb4:	ldr	r1, [fp, #-16]
   37bb8:	sub	r0, fp, #24
   37bbc:	sub	lr, fp, #3072	; 0xc00
   37bc0:	sub	r2, lr, #68	; 0x44
   37bc4:	mov	r3, #0
   37bc8:	bl	30dcc <__assert_fail@plt+0x1f938>
   37bcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37bd0:	sub	lr, fp, #1024	; 0x400
   37bd4:	sub	r2, lr, #56	; 0x38
   37bd8:	str	r0, [r2, r1, lsl #2]
   37bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37be0:	add	r0, r2, r0, lsl #2
   37be4:	ldr	r0, [r0]
   37be8:	movw	r1, #0
   37bec:	cmp	r0, r1
   37bf0:	movw	r0, #0
   37bf4:	str	r0, [sp, #12]
   37bf8:	bne	37c10 <__assert_fail@plt+0x2677c>
   37bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c00:	cmp	r0, #0
   37c04:	movw	r0, #0
   37c08:	movne	r0, #1
   37c0c:	str	r0, [sp, #12]
   37c10:	ldr	r0, [sp, #12]
   37c14:	tst	r0, #1
   37c18:	beq	37c20 <__assert_fail@plt+0x2678c>
   37c1c:	b	37a6c <__assert_fail@plt+0x265d8>
   37c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37c24:	sub	lr, fp, #1024	; 0x400
   37c28:	sub	r1, lr, #56	; 0x38
   37c2c:	ldr	r0, [r1, r0, lsl #2]
   37c30:	ldrb	r0, [r0, #52]	; 0x34
   37c34:	lsr	r0, r0, #7
   37c38:	and	r0, r0, #255	; 0xff
   37c3c:	cmp	r0, #0
   37c40:	beq	37d60 <__assert_fail@plt+0x268cc>
   37c44:	ldr	r1, [fp, #-16]
   37c48:	sub	r0, fp, #24
   37c4c:	sub	lr, fp, #3072	; 0xc00
   37c50:	sub	r2, lr, #68	; 0x44
   37c54:	mov	r3, #1
   37c58:	bl	30dcc <__assert_fail@plt+0x1f938>
   37c5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37c60:	sub	lr, fp, #2048	; 0x800
   37c64:	sub	r2, lr, #56	; 0x38
   37c68:	str	r0, [r2, r1, lsl #2]
   37c6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37c70:	add	r0, r2, r0, lsl #2
   37c74:	ldr	r0, [r0]
   37c78:	movw	r1, #0
   37c7c:	cmp	r0, r1
   37c80:	movw	r0, #0
   37c84:	str	r0, [sp, #8]
   37c88:	bne	37ca0 <__assert_fail@plt+0x2680c>
   37c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c90:	cmp	r0, #0
   37c94:	movw	r0, #0
   37c98:	movne	r0, #1
   37c9c:	str	r0, [sp, #8]
   37ca0:	ldr	r0, [sp, #8]
   37ca4:	tst	r0, #1
   37ca8:	beq	37cb0 <__assert_fail@plt+0x2681c>
   37cac:	b	37a6c <__assert_fail@plt+0x265d8>
   37cb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37cb4:	sub	lr, fp, #1024	; 0x400
   37cb8:	sub	r1, lr, #56	; 0x38
   37cbc:	ldr	r1, [r1, r0, lsl #2]
   37cc0:	sub	lr, fp, #2048	; 0x800
   37cc4:	sub	r2, lr, #56	; 0x38
   37cc8:	add	r0, r2, r0, lsl #2
   37ccc:	ldr	r0, [r0]
   37cd0:	cmp	r1, r0
   37cd4:	beq	37cf0 <__assert_fail@plt+0x2685c>
   37cd8:	ldr	r0, [fp, #-16]
   37cdc:	ldr	r0, [r0, #92]	; 0x5c
   37ce0:	cmp	r0, #1
   37ce4:	ble	37cf0 <__assert_fail@plt+0x2685c>
   37ce8:	movw	r0, #1
   37cec:	strb	r0, [fp, #-37]	; 0xffffffdb
   37cf0:	ldr	r1, [fp, #-16]
   37cf4:	sub	r0, fp, #24
   37cf8:	sub	lr, fp, #3072	; 0xc00
   37cfc:	sub	r2, lr, #68	; 0x44
   37d00:	mov	r3, #2
   37d04:	bl	30dcc <__assert_fail@plt+0x1f938>
   37d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37d0c:	sub	lr, fp, #3072	; 0xc00
   37d10:	sub	r2, lr, #56	; 0x38
   37d14:	str	r0, [r2, r1, lsl #2]
   37d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37d1c:	add	r0, r2, r0, lsl #2
   37d20:	ldr	r0, [r0]
   37d24:	movw	r1, #0
   37d28:	cmp	r0, r1
   37d2c:	movw	r0, #0
   37d30:	str	r0, [sp, #4]
   37d34:	bne	37d4c <__assert_fail@plt+0x268b8>
   37d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d3c:	cmp	r0, #0
   37d40:	movw	r0, #0
   37d44:	movne	r0, #1
   37d48:	str	r0, [sp, #4]
   37d4c:	ldr	r0, [sp, #4]
   37d50:	tst	r0, #1
   37d54:	beq	37d5c <__assert_fail@plt+0x268c8>
   37d58:	b	37a6c <__assert_fail@plt+0x265d8>
   37d5c:	b	37d94 <__assert_fail@plt+0x26900>
   37d60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37d64:	sub	lr, fp, #1024	; 0x400
   37d68:	sub	r1, lr, #56	; 0x38
   37d6c:	ldr	r2, [r1, r0, lsl #2]
   37d70:	sub	lr, fp, #2048	; 0x800
   37d74:	sub	r3, lr, #56	; 0x38
   37d78:	str	r2, [r3, r0, lsl #2]
   37d7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37d80:	ldr	r1, [r1, r0, lsl #2]
   37d84:	sub	lr, fp, #3072	; 0xc00
   37d88:	sub	r2, lr, #56	; 0x38
   37d8c:	add	r0, r2, r0, lsl #2
   37d90:	str	r1, [r0]
   37d94:	sub	lr, fp, #3072	; 0xc00
   37d98:	sub	r0, lr, #100	; 0x64
   37d9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37da0:	add	r2, sp, #20
   37da4:	add	r1, r2, r1, lsl #5
   37da8:	bl	389b8 <__assert_fail@plt+0x27524>
   37dac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37db0:	add	r0, r0, #1
   37db4:	str	r0, [fp, #-28]	; 0xffffffe4
   37db8:	b	37ae0 <__assert_fail@plt+0x2664c>
   37dbc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   37dc0:	tst	r0, #1
   37dc4:	bne	37f44 <__assert_fail@plt+0x26ab0>
   37dc8:	movw	r0, #4
   37dcc:	movw	r1, #256	; 0x100
   37dd0:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   37dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   37dd8:	str	r0, [r1, #44]	; 0x2c
   37ddc:	str	r0, [fp, #-56]	; 0xffffffc8
   37de0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37de4:	movw	r1, #0
   37de8:	cmp	r0, r1
   37dec:	bne	37df4 <__assert_fail@plt+0x26960>
   37df0:	b	37a6c <__assert_fail@plt+0x265d8>
   37df4:	movw	r0, #0
   37df8:	str	r0, [fp, #-28]	; 0xffffffe4
   37dfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37e00:	cmp	r0, #8
   37e04:	bge	37f40 <__assert_fail@plt+0x26aac>
   37e08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37e0c:	lsl	r0, r0, #5
   37e10:	str	r0, [fp, #-36]	; 0xffffffdc
   37e14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37e18:	sub	lr, fp, #3072	; 0xc00
   37e1c:	sub	r1, lr, #100	; 0x64
   37e20:	add	r0, r1, r0, lsl #2
   37e24:	ldr	r0, [r0]
   37e28:	str	r0, [fp, #-44]	; 0xffffffd4
   37e2c:	movw	r0, #1
   37e30:	str	r0, [fp, #-48]	; 0xffffffd0
   37e34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37e38:	cmp	r0, #0
   37e3c:	beq	37f2c <__assert_fail@plt+0x26a98>
   37e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37e44:	and	r0, r0, #1
   37e48:	cmp	r0, #0
   37e4c:	beq	37f00 <__assert_fail@plt+0x26a6c>
   37e50:	movw	r0, #0
   37e54:	str	r0, [fp, #-32]	; 0xffffffe0
   37e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37e5c:	add	r1, sp, #20
   37e60:	add	r0, r1, r0, lsl #5
   37e64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37e68:	add	r0, r0, r1, lsl #2
   37e6c:	ldr	r0, [r0]
   37e70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   37e74:	and	r0, r0, r1
   37e78:	cmp	r0, #0
   37e7c:	bne	37e94 <__assert_fail@plt+0x26a00>
   37e80:	b	37e84 <__assert_fail@plt+0x269f0>
   37e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37e88:	add	r0, r0, #1
   37e8c:	str	r0, [fp, #-32]	; 0xffffffe0
   37e90:	b	37e58 <__assert_fail@plt+0x269c4>
   37e94:	ldr	r0, [fp, #-16]
   37e98:	add	r0, r0, #96	; 0x60
   37e9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37ea0:	add	r0, r0, r1, lsl #2
   37ea4:	ldr	r0, [r0]
   37ea8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   37eac:	and	r0, r0, r1
   37eb0:	cmp	r0, #0
   37eb4:	beq	37edc <__assert_fail@plt+0x26a48>
   37eb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37ebc:	sub	lr, fp, #2048	; 0x800
   37ec0:	sub	r1, lr, #56	; 0x38
   37ec4:	ldr	r0, [r1, r0, lsl #2]
   37ec8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   37ecc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37ed0:	add	r1, r1, r2, lsl #2
   37ed4:	str	r0, [r1]
   37ed8:	b	37efc <__assert_fail@plt+0x26a68>
   37edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37ee0:	sub	lr, fp, #1024	; 0x400
   37ee4:	sub	r1, lr, #56	; 0x38
   37ee8:	ldr	r0, [r1, r0, lsl #2]
   37eec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   37ef0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37ef4:	add	r1, r1, r2, lsl #2
   37ef8:	str	r0, [r1]
   37efc:	b	37f00 <__assert_fail@plt+0x26a6c>
   37f00:	b	37f04 <__assert_fail@plt+0x26a70>
   37f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37f08:	lsl	r0, r0, #1
   37f0c:	str	r0, [fp, #-48]	; 0xffffffd0
   37f10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37f14:	lsr	r0, r0, #1
   37f18:	str	r0, [fp, #-44]	; 0xffffffd4
   37f1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37f20:	add	r0, r0, #1
   37f24:	str	r0, [fp, #-36]	; 0xffffffdc
   37f28:	b	37e34 <__assert_fail@plt+0x269a0>
   37f2c:	b	37f30 <__assert_fail@plt+0x26a9c>
   37f30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f34:	add	r0, r0, #1
   37f38:	str	r0, [fp, #-28]	; 0xffffffe4
   37f3c:	b	37dfc <__assert_fail@plt+0x26968>
   37f40:	b	38094 <__assert_fail@plt+0x26c00>
   37f44:	movw	r0, #4
   37f48:	movw	r1, #512	; 0x200
   37f4c:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   37f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   37f54:	str	r0, [r1, #48]	; 0x30
   37f58:	str	r0, [fp, #-56]	; 0xffffffc8
   37f5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37f60:	movw	r1, #0
   37f64:	cmp	r0, r1
   37f68:	bne	37f70 <__assert_fail@plt+0x26adc>
   37f6c:	b	37a6c <__assert_fail@plt+0x265d8>
   37f70:	movw	r0, #0
   37f74:	str	r0, [fp, #-28]	; 0xffffffe4
   37f78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f7c:	cmp	r0, #8
   37f80:	bge	38090 <__assert_fail@plt+0x26bfc>
   37f84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f88:	lsl	r0, r0, #5
   37f8c:	str	r0, [fp, #-36]	; 0xffffffdc
   37f90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f94:	sub	lr, fp, #3072	; 0xc00
   37f98:	sub	r1, lr, #100	; 0x64
   37f9c:	add	r0, r1, r0, lsl #2
   37fa0:	ldr	r0, [r0]
   37fa4:	str	r0, [fp, #-44]	; 0xffffffd4
   37fa8:	movw	r0, #1
   37fac:	str	r0, [fp, #-48]	; 0xffffffd0
   37fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37fb4:	cmp	r0, #0
   37fb8:	beq	3807c <__assert_fail@plt+0x26be8>
   37fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37fc0:	and	r0, r0, #1
   37fc4:	cmp	r0, #0
   37fc8:	beq	38050 <__assert_fail@plt+0x26bbc>
   37fcc:	movw	r0, #0
   37fd0:	str	r0, [fp, #-32]	; 0xffffffe0
   37fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37fd8:	add	r1, sp, #20
   37fdc:	add	r0, r1, r0, lsl #5
   37fe0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37fe4:	add	r0, r0, r1, lsl #2
   37fe8:	ldr	r0, [r0]
   37fec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   37ff0:	and	r0, r0, r1
   37ff4:	cmp	r0, #0
   37ff8:	bne	38010 <__assert_fail@plt+0x26b7c>
   37ffc:	b	38000 <__assert_fail@plt+0x26b6c>
   38000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38004:	add	r0, r0, #1
   38008:	str	r0, [fp, #-32]	; 0xffffffe0
   3800c:	b	37fd4 <__assert_fail@plt+0x26b40>
   38010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38014:	sub	lr, fp, #1024	; 0x400
   38018:	sub	r1, lr, #56	; 0x38
   3801c:	ldr	r0, [r1, r0, lsl #2]
   38020:	ldr	r1, [fp, #-56]	; 0xffffffc8
   38024:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38028:	str	r0, [r1, r2, lsl #2]
   3802c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38030:	sub	lr, fp, #2048	; 0x800
   38034:	sub	r1, lr, #56	; 0x38
   38038:	ldr	r0, [r1, r0, lsl #2]
   3803c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   38040:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38044:	add	r2, r2, #256	; 0x100
   38048:	add	r1, r1, r2, lsl #2
   3804c:	str	r0, [r1]
   38050:	b	38054 <__assert_fail@plt+0x26bc0>
   38054:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38058:	lsl	r0, r0, #1
   3805c:	str	r0, [fp, #-48]	; 0xffffffd0
   38060:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38064:	lsr	r0, r0, #1
   38068:	str	r0, [fp, #-44]	; 0xffffffd4
   3806c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38070:	add	r0, r0, #1
   38074:	str	r0, [fp, #-36]	; 0xffffffdc
   38078:	b	37fb0 <__assert_fail@plt+0x26b1c>
   3807c:	b	38080 <__assert_fail@plt+0x26bec>
   38080:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38084:	add	r0, r0, #1
   38088:	str	r0, [fp, #-28]	; 0xffffffe4
   3808c:	b	37f78 <__assert_fail@plt+0x26ae4>
   38090:	b	38094 <__assert_fail@plt+0x26c00>
   38094:	sub	lr, fp, #3072	; 0xc00
   38098:	sub	r0, lr, #100	; 0x64
   3809c:	movw	r1, #10
   380a0:	bl	33978 <__assert_fail@plt+0x224e4>
   380a4:	tst	r0, #1
   380a8:	beq	38140 <__assert_fail@plt+0x26cac>
   380ac:	movw	r0, #0
   380b0:	str	r0, [fp, #-32]	; 0xffffffe0
   380b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   380b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   380bc:	cmp	r0, r1
   380c0:	bge	3813c <__assert_fail@plt+0x26ca8>
   380c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   380c8:	add	r1, sp, #20
   380cc:	add	r0, r1, r0, lsl #5
   380d0:	movw	r1, #10
   380d4:	bl	33978 <__assert_fail@plt+0x224e4>
   380d8:	tst	r0, #1
   380dc:	beq	38128 <__assert_fail@plt+0x26c94>
   380e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   380e4:	sub	lr, fp, #3072	; 0xc00
   380e8:	sub	r1, lr, #56	; 0x38
   380ec:	add	r0, r1, r0, lsl #2
   380f0:	ldr	r0, [r0]
   380f4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   380f8:	str	r0, [r1, #40]	; 0x28
   380fc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   38100:	tst	r0, #1
   38104:	beq	38124 <__assert_fail@plt+0x26c90>
   38108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3810c:	sub	lr, fp, #3072	; 0xc00
   38110:	sub	r1, lr, #56	; 0x38
   38114:	add	r0, r1, r0, lsl #2
   38118:	ldr	r0, [r0]
   3811c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   38120:	str	r0, [r1, #1064]	; 0x428
   38124:	b	3813c <__assert_fail@plt+0x26ca8>
   38128:	b	3812c <__assert_fail@plt+0x26c98>
   3812c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38130:	add	r0, r0, #1
   38134:	str	r0, [fp, #-32]	; 0xffffffe0
   38138:	b	380b4 <__assert_fail@plt+0x26c20>
   3813c:	b	38140 <__assert_fail@plt+0x26cac>
   38140:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   38144:	bl	1388c <__assert_fail@plt+0x23f8>
   38148:	movw	r0, #0
   3814c:	str	r0, [fp, #-28]	; 0xffffffe4
   38150:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38154:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38158:	cmp	r0, r1
   3815c:	bge	38190 <__assert_fail@plt+0x26cfc>
   38160:	sub	lr, fp, #6144	; 0x1800
   38164:	sub	r0, lr, #100	; 0x64
   38168:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3816c:	movw	r2, #12
   38170:	mul	r1, r1, r2
   38174:	add	r0, r0, r1
   38178:	ldr	r0, [r0, #8]
   3817c:	bl	1388c <__assert_fail@plt+0x23f8>
   38180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38184:	add	r0, r0, #1
   38188:	str	r0, [fp, #-28]	; 0xffffffe4
   3818c:	b	38150 <__assert_fail@plt+0x26cbc>
   38190:	movw	r0, #1
   38194:	and	r0, r0, #1
   38198:	strb	r0, [fp, #-9]
   3819c:	ldrb	r0, [fp, #-9]
   381a0:	and	r0, r0, #1
   381a4:	sub	sp, fp, #8
   381a8:	pop	{r4, r5, fp, pc}
   381ac:	push	{fp, lr}
   381b0:	mov	fp, sp
   381b4:	sub	sp, sp, #184	; 0xb8
   381b8:	sub	ip, fp, #76	; 0x4c
   381bc:	str	r0, [fp, #-8]
   381c0:	str	r1, [fp, #-12]
   381c4:	str	r2, [fp, #-16]
   381c8:	str	r3, [fp, #-20]	; 0xffffffec
   381cc:	ldr	r0, [fp, #-12]
   381d0:	add	r0, r0, #4
   381d4:	str	r0, [fp, #-80]	; 0xffffffb0
   381d8:	mov	r0, ip
   381dc:	bl	3898c <__assert_fail@plt+0x274f8>
   381e0:	movw	r0, #0
   381e4:	str	r0, [fp, #-44]	; 0xffffffd4
   381e8:	str	r0, [fp, #-32]	; 0xffffffe0
   381ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   381f0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   381f4:	ldr	r1, [r1, #4]
   381f8:	cmp	r0, r1
   381fc:	bge	38918 <__assert_fail@plt+0x27484>
   38200:	ldr	r0, [fp, #-8]
   38204:	ldr	r0, [r0]
   38208:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3820c:	ldr	r1, [r1, #8]
   38210:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38214:	ldr	r1, [r1, r2, lsl #2]
   38218:	add	r0, r0, r1, lsl #3
   3821c:	str	r0, [fp, #-84]	; 0xffffffac
   38220:	ldr	r0, [fp, #-84]	; 0xffffffac
   38224:	ldr	r0, [r0, #4]
   38228:	and	r0, r0, #255	; 0xff
   3822c:	str	r0, [fp, #-88]	; 0xffffffa8
   38230:	ldr	r0, [fp, #-84]	; 0xffffffac
   38234:	ldr	r0, [r0, #4]
   38238:	lsr	r0, r0, #8
   3823c:	movw	r1, #1023	; 0x3ff
   38240:	and	r0, r0, r1
   38244:	str	r0, [sp, #92]	; 0x5c
   38248:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3824c:	cmp	r0, #1
   38250:	bne	38268 <__assert_fail@plt+0x26dd4>
   38254:	sub	r0, fp, #76	; 0x4c
   38258:	ldr	r1, [fp, #-84]	; 0xffffffac
   3825c:	ldrb	r1, [r1]
   38260:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   38264:	b	38378 <__assert_fail@plt+0x26ee4>
   38268:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3826c:	cmp	r0, #3
   38270:	bne	38288 <__assert_fail@plt+0x26df4>
   38274:	sub	r0, fp, #76	; 0x4c
   38278:	ldr	r1, [fp, #-84]	; 0xffffffac
   3827c:	ldr	r1, [r1]
   38280:	bl	389b8 <__assert_fail@plt+0x27524>
   38284:	b	38374 <__assert_fail@plt+0x26ee0>
   38288:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3828c:	cmp	r0, #5
   38290:	bne	38304 <__assert_fail@plt+0x26e70>
   38294:	ldr	r0, [fp, #-8]
   38298:	ldr	r0, [r0, #92]	; 0x5c
   3829c:	cmp	r0, #1
   382a0:	ble	382b8 <__assert_fail@plt+0x26e24>
   382a4:	sub	r0, fp, #76	; 0x4c
   382a8:	ldr	r1, [fp, #-8]
   382ac:	ldr	r1, [r1, #60]	; 0x3c
   382b0:	bl	389b8 <__assert_fail@plt+0x27524>
   382b4:	b	382c0 <__assert_fail@plt+0x26e2c>
   382b8:	sub	r0, fp, #76	; 0x4c
   382bc:	bl	38a10 <__assert_fail@plt+0x2757c>
   382c0:	ldr	r0, [fp, #-8]
   382c4:	ldr	r0, [r0, #128]	; 0x80
   382c8:	and	r0, r0, #64	; 0x40
   382cc:	cmp	r0, #0
   382d0:	bne	382e0 <__assert_fail@plt+0x26e4c>
   382d4:	sub	r0, fp, #76	; 0x4c
   382d8:	movw	r1, #10
   382dc:	bl	38a3c <__assert_fail@plt+0x275a8>
   382e0:	ldr	r0, [fp, #-8]
   382e4:	ldr	r0, [r0, #128]	; 0x80
   382e8:	and	r0, r0, #128	; 0x80
   382ec:	cmp	r0, #0
   382f0:	beq	38300 <__assert_fail@plt+0x26e6c>
   382f4:	sub	r0, fp, #76	; 0x4c
   382f8:	movw	r1, #0
   382fc:	bl	38a3c <__assert_fail@plt+0x275a8>
   38300:	b	38370 <__assert_fail@plt+0x26edc>
   38304:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38308:	cmp	r0, #7
   3830c:	bne	38368 <__assert_fail@plt+0x26ed4>
   38310:	sub	r0, fp, #76	; 0x4c
   38314:	movw	r1, #255	; 0xff
   38318:	and	r1, r1, #255	; 0xff
   3831c:	movw	r2, #16
   38320:	bl	113d4 <memset@plt>
   38324:	ldr	r0, [fp, #-8]
   38328:	ldr	r0, [r0, #128]	; 0x80
   3832c:	and	r0, r0, #64	; 0x40
   38330:	cmp	r0, #0
   38334:	bne	38344 <__assert_fail@plt+0x26eb0>
   38338:	sub	r0, fp, #76	; 0x4c
   3833c:	movw	r1, #10
   38340:	bl	38a3c <__assert_fail@plt+0x275a8>
   38344:	ldr	r0, [fp, #-8]
   38348:	ldr	r0, [r0, #128]	; 0x80
   3834c:	and	r0, r0, #128	; 0x80
   38350:	cmp	r0, #0
   38354:	beq	38364 <__assert_fail@plt+0x26ed0>
   38358:	sub	r0, fp, #76	; 0x4c
   3835c:	movw	r1, #0
   38360:	bl	38a3c <__assert_fail@plt+0x275a8>
   38364:	b	3836c <__assert_fail@plt+0x26ed8>
   38368:	b	38908 <__assert_fail@plt+0x27474>
   3836c:	b	38370 <__assert_fail@plt+0x26edc>
   38370:	b	38374 <__assert_fail@plt+0x26ee0>
   38374:	b	38378 <__assert_fail@plt+0x26ee4>
   38378:	ldr	r0, [sp, #92]	; 0x5c
   3837c:	cmp	r0, #0
   38380:	beq	38654 <__assert_fail@plt+0x271c0>
   38384:	ldr	r0, [sp, #92]	; 0x5c
   38388:	and	r0, r0, #32
   3838c:	cmp	r0, #0
   38390:	beq	383d8 <__assert_fail@plt+0x26f44>
   38394:	sub	r0, fp, #76	; 0x4c
   38398:	movw	r1, #10
   3839c:	bl	33978 <__assert_fail@plt+0x224e4>
   383a0:	sub	r1, fp, #76	; 0x4c
   383a4:	and	r0, r0, #1
   383a8:	strb	r0, [sp, #91]	; 0x5b
   383ac:	mov	r0, r1
   383b0:	bl	3898c <__assert_fail@plt+0x274f8>
   383b4:	ldrb	r0, [sp, #91]	; 0x5b
   383b8:	tst	r0, #1
   383bc:	beq	383d0 <__assert_fail@plt+0x26f3c>
   383c0:	sub	r0, fp, #76	; 0x4c
   383c4:	movw	r1, #10
   383c8:	bl	2cc58 <__assert_fail@plt+0x1b7c4>
   383cc:	b	383d4 <__assert_fail@plt+0x26f40>
   383d0:	b	38908 <__assert_fail@plt+0x27474>
   383d4:	b	383d8 <__assert_fail@plt+0x26f44>
   383d8:	ldr	r0, [sp, #92]	; 0x5c
   383dc:	and	r0, r0, #128	; 0x80
   383e0:	cmp	r0, #0
   383e4:	beq	383f4 <__assert_fail@plt+0x26f60>
   383e8:	sub	r0, fp, #76	; 0x4c
   383ec:	bl	3898c <__assert_fail@plt+0x274f8>
   383f0:	b	38908 <__assert_fail@plt+0x27474>
   383f4:	ldr	r0, [sp, #92]	; 0x5c
   383f8:	and	r0, r0, #4
   383fc:	cmp	r0, #0
   38400:	beq	38520 <__assert_fail@plt+0x2708c>
   38404:	movw	r0, #0
   38408:	str	r0, [sp, #84]	; 0x54
   3840c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38410:	cmp	r0, #1
   38414:	bne	3843c <__assert_fail@plt+0x26fa8>
   38418:	ldr	r0, [fp, #-84]	; 0xffffffac
   3841c:	ldr	r0, [r0, #4]
   38420:	lsr	r0, r0, #22
   38424:	and	r0, r0, #1
   38428:	cmp	r0, #0
   3842c:	bne	3843c <__assert_fail@plt+0x26fa8>
   38430:	sub	r0, fp, #76	; 0x4c
   38434:	bl	3898c <__assert_fail@plt+0x274f8>
   38438:	b	38908 <__assert_fail@plt+0x27474>
   3843c:	ldr	r0, [fp, #-8]
   38440:	ldr	r0, [r0, #92]	; 0x5c
   38444:	cmp	r0, #1
   38448:	ble	384b4 <__assert_fail@plt+0x27020>
   3844c:	movw	r0, #0
   38450:	str	r0, [fp, #-36]	; 0xffffffdc
   38454:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38458:	cmp	r0, #8
   3845c:	bge	384b0 <__assert_fail@plt+0x2701c>
   38460:	ldr	r0, [fp, #-8]
   38464:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38468:	add	r2, r0, r1, lsl #2
   3846c:	ldr	r2, [r2, #96]	; 0x60
   38470:	ldr	r0, [r0, #60]	; 0x3c
   38474:	ldr	r0, [r0, r1, lsl #2]
   38478:	mvn	r0, r0
   3847c:	orr	r0, r2, r0
   38480:	sub	r2, fp, #76	; 0x4c
   38484:	add	r1, r2, r1, lsl #2
   38488:	ldr	r2, [r1]
   3848c:	and	r0, r2, r0
   38490:	str	r0, [r1]
   38494:	ldr	r1, [sp, #84]	; 0x54
   38498:	orr	r0, r1, r0
   3849c:	str	r0, [sp, #84]	; 0x54
   384a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   384a4:	add	r0, r0, #1
   384a8:	str	r0, [fp, #-36]	; 0xffffffdc
   384ac:	b	38454 <__assert_fail@plt+0x26fc0>
   384b0:	b	3850c <__assert_fail@plt+0x27078>
   384b4:	movw	r0, #0
   384b8:	str	r0, [fp, #-36]	; 0xffffffdc
   384bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   384c0:	cmp	r0, #8
   384c4:	bge	38508 <__assert_fail@plt+0x27074>
   384c8:	ldr	r0, [fp, #-8]
   384cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   384d0:	add	r0, r0, r1, lsl #2
   384d4:	ldr	r0, [r0, #96]	; 0x60
   384d8:	sub	r2, fp, #76	; 0x4c
   384dc:	add	r1, r2, r1, lsl #2
   384e0:	ldr	r2, [r1]
   384e4:	and	r0, r2, r0
   384e8:	str	r0, [r1]
   384ec:	ldr	r1, [sp, #84]	; 0x54
   384f0:	orr	r0, r1, r0
   384f4:	str	r0, [sp, #84]	; 0x54
   384f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   384fc:	add	r0, r0, #1
   38500:	str	r0, [fp, #-36]	; 0xffffffdc
   38504:	b	384bc <__assert_fail@plt+0x27028>
   38508:	b	3850c <__assert_fail@plt+0x27078>
   3850c:	ldr	r0, [sp, #84]	; 0x54
   38510:	cmp	r0, #0
   38514:	bne	3851c <__assert_fail@plt+0x27088>
   38518:	b	38908 <__assert_fail@plt+0x27474>
   3851c:	b	38520 <__assert_fail@plt+0x2708c>
   38520:	ldr	r0, [sp, #92]	; 0x5c
   38524:	and	r0, r0, #8
   38528:	cmp	r0, #0
   3852c:	beq	38650 <__assert_fail@plt+0x271bc>
   38530:	movw	r0, #0
   38534:	str	r0, [sp, #80]	; 0x50
   38538:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3853c:	cmp	r0, #1
   38540:	bne	38568 <__assert_fail@plt+0x270d4>
   38544:	ldr	r0, [fp, #-84]	; 0xffffffac
   38548:	ldr	r0, [r0, #4]
   3854c:	lsr	r0, r0, #22
   38550:	and	r0, r0, #1
   38554:	cmp	r0, #0
   38558:	beq	38568 <__assert_fail@plt+0x270d4>
   3855c:	sub	r0, fp, #76	; 0x4c
   38560:	bl	3898c <__assert_fail@plt+0x274f8>
   38564:	b	38908 <__assert_fail@plt+0x27474>
   38568:	ldr	r0, [fp, #-8]
   3856c:	ldr	r0, [r0, #92]	; 0x5c
   38570:	cmp	r0, #1
   38574:	ble	385e0 <__assert_fail@plt+0x2714c>
   38578:	movw	r0, #0
   3857c:	str	r0, [fp, #-36]	; 0xffffffdc
   38580:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38584:	cmp	r0, #8
   38588:	bge	385dc <__assert_fail@plt+0x27148>
   3858c:	ldr	r0, [fp, #-8]
   38590:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38594:	add	r2, r0, r1, lsl #2
   38598:	ldr	r2, [r2, #96]	; 0x60
   3859c:	ldr	r0, [r0, #60]	; 0x3c
   385a0:	ldr	r0, [r0, r1, lsl #2]
   385a4:	and	r0, r2, r0
   385a8:	mvn	r0, r0
   385ac:	sub	r2, fp, #76	; 0x4c
   385b0:	add	r1, r2, r1, lsl #2
   385b4:	ldr	r2, [r1]
   385b8:	and	r0, r2, r0
   385bc:	str	r0, [r1]
   385c0:	ldr	r1, [sp, #80]	; 0x50
   385c4:	orr	r0, r1, r0
   385c8:	str	r0, [sp, #80]	; 0x50
   385cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   385d0:	add	r0, r0, #1
   385d4:	str	r0, [fp, #-36]	; 0xffffffdc
   385d8:	b	38580 <__assert_fail@plt+0x270ec>
   385dc:	b	3863c <__assert_fail@plt+0x271a8>
   385e0:	movw	r0, #0
   385e4:	str	r0, [fp, #-36]	; 0xffffffdc
   385e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   385ec:	cmp	r0, #8
   385f0:	bge	38638 <__assert_fail@plt+0x271a4>
   385f4:	ldr	r0, [fp, #-8]
   385f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   385fc:	add	r0, r0, r1, lsl #2
   38600:	ldr	r0, [r0, #96]	; 0x60
   38604:	mvn	r0, r0
   38608:	sub	r2, fp, #76	; 0x4c
   3860c:	add	r1, r2, r1, lsl #2
   38610:	ldr	r2, [r1]
   38614:	and	r0, r2, r0
   38618:	str	r0, [r1]
   3861c:	ldr	r1, [sp, #80]	; 0x50
   38620:	orr	r0, r1, r0
   38624:	str	r0, [sp, #80]	; 0x50
   38628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3862c:	add	r0, r0, #1
   38630:	str	r0, [fp, #-36]	; 0xffffffdc
   38634:	b	385e8 <__assert_fail@plt+0x27154>
   38638:	b	3863c <__assert_fail@plt+0x271a8>
   3863c:	ldr	r0, [sp, #80]	; 0x50
   38640:	cmp	r0, #0
   38644:	bne	3864c <__assert_fail@plt+0x271b8>
   38648:	b	38908 <__assert_fail@plt+0x27474>
   3864c:	b	38650 <__assert_fail@plt+0x271bc>
   38650:	b	38654 <__assert_fail@plt+0x271c0>
   38654:	movw	r0, #0
   38658:	str	r0, [fp, #-36]	; 0xffffffdc
   3865c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38660:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38664:	cmp	r0, r1
   38668:	bge	38890 <__assert_fail@plt+0x273fc>
   3866c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38670:	cmp	r0, #1
   38674:	bne	3869c <__assert_fail@plt+0x27208>
   38678:	ldr	r0, [fp, #-20]	; 0xffffffec
   3867c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38680:	add	r0, r0, r1, lsl #5
   38684:	ldr	r1, [fp, #-84]	; 0xffffffac
   38688:	ldrb	r1, [r1]
   3868c:	bl	33978 <__assert_fail@plt+0x224e4>
   38690:	tst	r0, #1
   38694:	bne	3869c <__assert_fail@plt+0x27208>
   38698:	b	38880 <__assert_fail@plt+0x273ec>
   3869c:	movw	r0, #0
   386a0:	str	r0, [sp, #12]
   386a4:	str	r0, [fp, #-40]	; 0xffffffd8
   386a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   386ac:	cmp	r0, #8
   386b0:	bge	386fc <__assert_fail@plt+0x27268>
   386b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   386b8:	sub	r1, fp, #76	; 0x4c
   386bc:	ldr	r1, [r1, r0, lsl #2]
   386c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   386c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   386c8:	add	r2, r2, r3, lsl #5
   386cc:	ldr	r2, [r2, r0, lsl #2]
   386d0:	and	r1, r1, r2
   386d4:	add	r2, sp, #48	; 0x30
   386d8:	add	r0, r2, r0, lsl #2
   386dc:	str	r1, [r0]
   386e0:	ldr	r0, [sp, #12]
   386e4:	orr	r0, r0, r1
   386e8:	str	r0, [sp, #12]
   386ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   386f0:	add	r0, r0, #1
   386f4:	str	r0, [fp, #-40]	; 0xffffffd8
   386f8:	b	386a8 <__assert_fail@plt+0x27214>
   386fc:	ldr	r0, [sp, #12]
   38700:	cmp	r0, #0
   38704:	bne	3870c <__assert_fail@plt+0x27278>
   38708:	b	38880 <__assert_fail@plt+0x273ec>
   3870c:	movw	r0, #0
   38710:	str	r0, [sp, #4]
   38714:	str	r0, [sp, #8]
   38718:	str	r0, [fp, #-40]	; 0xffffffd8
   3871c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38720:	cmp	r0, #8
   38724:	bge	3879c <__assert_fail@plt+0x27308>
   38728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3872c:	sub	r1, fp, #76	; 0x4c
   38730:	ldr	r2, [r1, r0, lsl #2]
   38734:	ldr	r3, [fp, #-20]	; 0xffffffec
   38738:	ldr	ip, [fp, #-36]	; 0xffffffdc
   3873c:	add	r3, r3, ip, lsl #5
   38740:	ldr	r3, [r3, r0, lsl #2]
   38744:	bic	r2, r3, r2
   38748:	add	r3, sp, #16
   3874c:	str	r2, [r3, r0, lsl #2]
   38750:	ldr	r0, [sp, #8]
   38754:	orr	r0, r0, r2
   38758:	str	r0, [sp, #8]
   3875c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38760:	add	r2, r1, r0, lsl #2
   38764:	ldr	r1, [r1, r0, lsl #2]
   38768:	ldr	r3, [fp, #-20]	; 0xffffffec
   3876c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   38770:	add	r3, r3, ip, lsl #5
   38774:	ldr	r0, [r3, r0, lsl #2]
   38778:	bic	r0, r1, r0
   3877c:	str	r0, [r2]
   38780:	ldr	r1, [sp, #4]
   38784:	orr	r0, r1, r0
   38788:	str	r0, [sp, #4]
   3878c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38790:	add	r0, r0, #1
   38794:	str	r0, [fp, #-40]	; 0xffffffd8
   38798:	b	3871c <__assert_fail@plt+0x27288>
   3879c:	ldr	r0, [sp, #8]
   387a0:	cmp	r0, #0
   387a4:	beq	38824 <__assert_fail@plt+0x27390>
   387a8:	add	r1, sp, #48	; 0x30
   387ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   387b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   387b4:	add	r0, r0, r2, lsl #5
   387b8:	add	r2, sp, #16
   387bc:	str	r1, [sp]
   387c0:	mov	r1, r2
   387c4:	bl	38a84 <__assert_fail@plt+0x275f0>
   387c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   387cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   387d0:	add	r0, r0, r1, lsl #5
   387d4:	ldr	r1, [sp]
   387d8:	bl	38a84 <__assert_fail@plt+0x275f0>
   387dc:	ldr	r0, [fp, #-16]
   387e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   387e4:	movw	r2, #12
   387e8:	mul	r1, r1, r2
   387ec:	add	r0, r0, r1
   387f0:	ldr	r1, [fp, #-16]
   387f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   387f8:	mul	r2, r3, r2
   387fc:	add	r1, r1, r2
   38800:	bl	30c08 <__assert_fail@plt+0x1f774>
   38804:	str	r0, [fp, #-24]	; 0xffffffe8
   38808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3880c:	cmp	r0, #0
   38810:	beq	38818 <__assert_fail@plt+0x27384>
   38814:	b	38934 <__assert_fail@plt+0x274a0>
   38818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3881c:	add	r0, r0, #1
   38820:	str	r0, [fp, #-44]	; 0xffffffd4
   38824:	ldr	r0, [fp, #-16]
   38828:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3882c:	add	r1, r1, r1, lsl #1
   38830:	add	r0, r0, r1, lsl #2
   38834:	ldr	r1, [fp, #-80]	; 0xffffffb0
   38838:	ldr	r1, [r1, #8]
   3883c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38840:	add	r1, r1, r2, lsl #2
   38844:	ldr	r1, [r1]
   38848:	bl	30820 <__assert_fail@plt+0x1f38c>
   3884c:	and	r0, r0, #1
   38850:	strb	r0, [fp, #-25]	; 0xffffffe7
   38854:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   38858:	mvn	r1, #0
   3885c:	eor	r0, r0, r1
   38860:	tst	r0, #1
   38864:	beq	3886c <__assert_fail@plt+0x273d8>
   38868:	b	38934 <__assert_fail@plt+0x274a0>
   3886c:	ldr	r0, [sp, #4]
   38870:	cmp	r0, #0
   38874:	bne	3887c <__assert_fail@plt+0x273e8>
   38878:	b	38890 <__assert_fail@plt+0x273fc>
   3887c:	b	38880 <__assert_fail@plt+0x273ec>
   38880:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38884:	add	r0, r0, #1
   38888:	str	r0, [fp, #-36]	; 0xffffffdc
   3888c:	b	3865c <__assert_fail@plt+0x271c8>
   38890:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38894:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38898:	cmp	r0, r1
   3889c:	bne	38904 <__assert_fail@plt+0x27470>
   388a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   388a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   388a8:	add	r0, r0, r1, lsl #5
   388ac:	sub	r1, fp, #76	; 0x4c
   388b0:	bl	38a84 <__assert_fail@plt+0x275f0>
   388b4:	ldr	r0, [fp, #-16]
   388b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   388bc:	add	r1, r1, r1, lsl #1
   388c0:	add	r0, r0, r1, lsl #2
   388c4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   388c8:	ldr	r1, [r1, #8]
   388cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   388d0:	add	r1, r1, r2, lsl #2
   388d4:	ldr	r1, [r1]
   388d8:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   388dc:	str	r0, [fp, #-24]	; 0xffffffe8
   388e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   388e4:	cmp	r0, #0
   388e8:	beq	388f0 <__assert_fail@plt+0x2745c>
   388ec:	b	38934 <__assert_fail@plt+0x274a0>
   388f0:	sub	r0, fp, #76	; 0x4c
   388f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   388f8:	add	r1, r1, #1
   388fc:	str	r1, [fp, #-44]	; 0xffffffd4
   38900:	bl	3898c <__assert_fail@plt+0x274f8>
   38904:	b	38908 <__assert_fail@plt+0x27474>
   38908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3890c:	add	r0, r0, #1
   38910:	str	r0, [fp, #-32]	; 0xffffffe0
   38914:	b	381ec <__assert_fail@plt+0x26d58>
   38918:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3891c:	cmp	r0, #256	; 0x100
   38920:	bgt	38928 <__assert_fail@plt+0x27494>
   38924:	b	38928 <__assert_fail@plt+0x27494>
   38928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3892c:	str	r0, [fp, #-4]
   38930:	b	38980 <__assert_fail@plt+0x274ec>
   38934:	movw	r0, #0
   38938:	str	r0, [fp, #-36]	; 0xffffffdc
   3893c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38944:	cmp	r0, r1
   38948:	bge	38978 <__assert_fail@plt+0x274e4>
   3894c:	ldr	r0, [fp, #-16]
   38950:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38954:	movw	r2, #12
   38958:	mul	r1, r1, r2
   3895c:	add	r0, r0, r1
   38960:	ldr	r0, [r0, #8]
   38964:	bl	1388c <__assert_fail@plt+0x23f8>
   38968:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3896c:	add	r0, r0, #1
   38970:	str	r0, [fp, #-36]	; 0xffffffdc
   38974:	b	3893c <__assert_fail@plt+0x274a8>
   38978:	mvn	r0, #0
   3897c:	str	r0, [fp, #-4]
   38980:	ldr	r0, [fp, #-4]
   38984:	mov	sp, fp
   38988:	pop	{fp, pc}
   3898c:	push	{fp, lr}
   38990:	mov	fp, sp
   38994:	sub	sp, sp, #8
   38998:	str	r0, [sp, #4]
   3899c:	ldr	r0, [sp, #4]
   389a0:	movw	r1, #0
   389a4:	and	r1, r1, #255	; 0xff
   389a8:	movw	r2, #32
   389ac:	bl	113d4 <memset@plt>
   389b0:	mov	sp, fp
   389b4:	pop	{fp, pc}
   389b8:	sub	sp, sp, #12
   389bc:	str	r0, [sp, #8]
   389c0:	str	r1, [sp, #4]
   389c4:	movw	r0, #0
   389c8:	str	r0, [sp]
   389cc:	ldr	r0, [sp]
   389d0:	cmp	r0, #8
   389d4:	bge	38a08 <__assert_fail@plt+0x27574>
   389d8:	ldr	r0, [sp, #4]
   389dc:	ldr	r1, [sp]
   389e0:	ldr	r0, [r0, r1, lsl #2]
   389e4:	ldr	r2, [sp, #8]
   389e8:	add	r1, r2, r1, lsl #2
   389ec:	ldr	r2, [r1]
   389f0:	orr	r0, r2, r0
   389f4:	str	r0, [r1]
   389f8:	ldr	r0, [sp]
   389fc:	add	r0, r0, #1
   38a00:	str	r0, [sp]
   38a04:	b	389cc <__assert_fail@plt+0x27538>
   38a08:	add	sp, sp, #12
   38a0c:	bx	lr
   38a10:	push	{fp, lr}
   38a14:	mov	fp, sp
   38a18:	sub	sp, sp, #8
   38a1c:	str	r0, [sp, #4]
   38a20:	ldr	r0, [sp, #4]
   38a24:	movw	r1, #255	; 0xff
   38a28:	and	r1, r1, #255	; 0xff
   38a2c:	movw	r2, #32
   38a30:	bl	113d4 <memset@plt>
   38a34:	mov	sp, fp
   38a38:	pop	{fp, pc}
   38a3c:	sub	sp, sp, #8
   38a40:	str	r0, [sp, #4]
   38a44:	str	r1, [sp]
   38a48:	ldr	r0, [sp]
   38a4c:	asr	r1, r0, #31
   38a50:	add	r1, r0, r1, lsr #27
   38a54:	bic	r2, r1, #31
   38a58:	sub	r0, r0, r2
   38a5c:	mov	r2, #1
   38a60:	mvn	r0, r2, lsl r0
   38a64:	ldr	r2, [sp, #4]
   38a68:	asr	r1, r1, #5
   38a6c:	add	r1, r2, r1, lsl #2
   38a70:	ldr	r2, [r1]
   38a74:	and	r0, r2, r0
   38a78:	str	r0, [r1]
   38a7c:	add	sp, sp, #8
   38a80:	bx	lr
   38a84:	push	{fp, lr}
   38a88:	mov	fp, sp
   38a8c:	sub	sp, sp, #8
   38a90:	str	r0, [sp, #4]
   38a94:	str	r1, [sp]
   38a98:	ldr	r0, [sp, #4]
   38a9c:	ldr	r1, [sp]
   38aa0:	movw	r2, #32
   38aa4:	bl	11248 <memcpy@plt>
   38aa8:	mov	sp, fp
   38aac:	pop	{fp, pc}
   38ab0:	sub	sp, sp, #24
   38ab4:	str	r0, [sp, #16]
   38ab8:	str	r1, [sp, #12]
   38abc:	str	r2, [sp, #8]
   38ac0:	ldr	r0, [sp, #16]
   38ac4:	ldr	r0, [r0]
   38ac8:	ldr	r1, [sp, #12]
   38acc:	add	r0, r0, r1, lsl #3
   38ad0:	ldrb	r0, [r0, #4]
   38ad4:	str	r0, [sp, #4]
   38ad8:	ldr	r0, [sp, #16]
   38adc:	ldr	r0, [r0]
   38ae0:	ldr	r1, [sp, #12]
   38ae4:	add	r0, r0, r1, lsl #3
   38ae8:	ldr	r0, [r0, #4]
   38aec:	lsr	r0, r0, #8
   38af0:	movw	r1, #1023	; 0x3ff
   38af4:	and	r0, r0, r1
   38af8:	str	r0, [sp]
   38afc:	ldr	r0, [sp, #4]
   38b00:	cmp	r0, #2
   38b04:	beq	38b18 <__assert_fail@plt+0x27684>
   38b08:	movw	r0, #0
   38b0c:	and	r0, r0, #1
   38b10:	strb	r0, [sp, #23]
   38b14:	b	38bd0 <__assert_fail@plt+0x2773c>
   38b18:	ldr	r0, [sp]
   38b1c:	cmp	r0, #0
   38b20:	bne	38b34 <__assert_fail@plt+0x276a0>
   38b24:	movw	r0, #1
   38b28:	and	r0, r0, #1
   38b2c:	strb	r0, [sp, #23]
   38b30:	b	38bd0 <__assert_fail@plt+0x2773c>
   38b34:	ldr	r0, [sp]
   38b38:	and	r0, r0, #4
   38b3c:	cmp	r0, #0
   38b40:	beq	38b54 <__assert_fail@plt+0x276c0>
   38b44:	ldr	r0, [sp, #8]
   38b48:	and	r0, r0, #1
   38b4c:	cmp	r0, #0
   38b50:	beq	38bb4 <__assert_fail@plt+0x27720>
   38b54:	ldr	r0, [sp]
   38b58:	and	r0, r0, #8
   38b5c:	cmp	r0, #0
   38b60:	beq	38b74 <__assert_fail@plt+0x276e0>
   38b64:	ldr	r0, [sp, #8]
   38b68:	and	r0, r0, #1
   38b6c:	cmp	r0, #0
   38b70:	bne	38bb4 <__assert_fail@plt+0x27720>
   38b74:	ldr	r0, [sp]
   38b78:	and	r0, r0, #32
   38b7c:	cmp	r0, #0
   38b80:	beq	38b94 <__assert_fail@plt+0x27700>
   38b84:	ldr	r0, [sp, #8]
   38b88:	and	r0, r0, #2
   38b8c:	cmp	r0, #0
   38b90:	beq	38bb4 <__assert_fail@plt+0x27720>
   38b94:	ldr	r0, [sp]
   38b98:	and	r0, r0, #128	; 0x80
   38b9c:	cmp	r0, #0
   38ba0:	beq	38bc4 <__assert_fail@plt+0x27730>
   38ba4:	ldr	r0, [sp, #8]
   38ba8:	and	r0, r0, #8
   38bac:	cmp	r0, #0
   38bb0:	bne	38bc4 <__assert_fail@plt+0x27730>
   38bb4:	movw	r0, #0
   38bb8:	and	r0, r0, #1
   38bbc:	strb	r0, [sp, #23]
   38bc0:	b	38bd0 <__assert_fail@plt+0x2773c>
   38bc4:	movw	r0, #1
   38bc8:	and	r0, r0, #1
   38bcc:	strb	r0, [sp, #23]
   38bd0:	ldrb	r0, [sp, #23]
   38bd4:	and	r0, r0, #1
   38bd8:	add	sp, sp, #24
   38bdc:	bx	lr
   38be0:	push	{fp, lr}
   38be4:	mov	fp, sp
   38be8:	sub	sp, sp, #24
   38bec:	ldr	ip, [fp, #8]
   38bf0:	str	r0, [fp, #-4]
   38bf4:	str	r1, [fp, #-8]
   38bf8:	str	r2, [sp, #12]
   38bfc:	str	r3, [sp, #8]
   38c00:	ldr	r0, [fp, #-8]
   38c04:	ldr	r1, [fp, #-4]
   38c08:	str	r0, [r1]
   38c0c:	ldr	r0, [sp, #12]
   38c10:	ldr	r1, [fp, #-4]
   38c14:	str	r0, [r1, #4]
   38c18:	ldr	r0, [sp, #8]
   38c1c:	ldr	r1, [fp, #-4]
   38c20:	str	r0, [r1, #8]
   38c24:	ldr	r0, [fp, #8]
   38c28:	ldr	r1, [fp, #-4]
   38c2c:	str	r0, [r1, #12]
   38c30:	ldr	r0, [fp, #-4]
   38c34:	add	r0, r0, #16
   38c38:	movw	r1, #0
   38c3c:	and	r1, r1, #255	; 0xff
   38c40:	movw	r2, #12
   38c44:	str	ip, [sp, #4]
   38c48:	bl	113d4 <memset@plt>
   38c4c:	mov	sp, fp
   38c50:	pop	{fp, pc}
   38c54:	push	{fp, lr}
   38c58:	mov	fp, sp
   38c5c:	sub	sp, sp, #40	; 0x28
   38c60:	str	r0, [fp, #-8]
   38c64:	str	r1, [fp, #-12]
   38c68:	movw	r0, #0
   38c6c:	str	r0, [sp, #20]
   38c70:	ldr	r1, [fp, #-12]
   38c74:	ldr	r1, [r1, #12]
   38c78:	str	r1, [sp, #16]
   38c7c:	ldr	r1, [fp, #-8]
   38c80:	ldr	r1, [r1, #100]	; 0x64
   38c84:	cmp	r1, r0
   38c88:	beq	38cb0 <__assert_fail@plt+0x2781c>
   38c8c:	ldr	r0, [fp, #-8]
   38c90:	ldr	r0, [r0, #100]	; 0x64
   38c94:	ldr	r1, [sp, #16]
   38c98:	add	r0, r0, r1, lsl #2
   38c9c:	ldr	r0, [r0]
   38ca0:	movw	r1, #0
   38ca4:	cmp	r0, r1
   38ca8:	beq	38cb0 <__assert_fail@plt+0x2781c>
   38cac:	b	38cb0 <__assert_fail@plt+0x2781c>
   38cb0:	ldr	r0, [fp, #-12]
   38cb4:	ldr	r1, [r0, #8]
   38cb8:	add	r0, sp, #4
   38cbc:	bl	2f954 <__assert_fail@plt+0x1e4c0>
   38cc0:	str	r0, [fp, #-16]
   38cc4:	ldr	r0, [fp, #-16]
   38cc8:	cmp	r0, #0
   38ccc:	beq	38cdc <__assert_fail@plt+0x27848>
   38cd0:	ldr	r0, [fp, #-16]
   38cd4:	str	r0, [fp, #-4]
   38cd8:	b	38e40 <__assert_fail@plt+0x279ac>
   38cdc:	ldr	r0, [fp, #-8]
   38ce0:	ldr	r1, [fp, #-12]
   38ce4:	ldr	r2, [sp, #16]
   38ce8:	add	r3, sp, #4
   38cec:	bl	38f94 <__assert_fail@plt+0x27b00>
   38cf0:	str	r0, [fp, #-16]
   38cf4:	ldr	r0, [fp, #-16]
   38cf8:	cmp	r0, #0
   38cfc:	beq	38d04 <__assert_fail@plt+0x27870>
   38d00:	b	38e30 <__assert_fail@plt+0x2799c>
   38d04:	b	38d08 <__assert_fail@plt+0x27874>
   38d08:	ldr	r0, [sp, #16]
   38d0c:	cmp	r0, #0
   38d10:	ble	38e28 <__assert_fail@plt+0x27994>
   38d14:	ldr	r0, [fp, #-12]
   38d18:	ldr	r0, [r0]
   38d1c:	ldr	r1, [sp, #16]
   38d20:	add	r0, r0, r1, lsl #2
   38d24:	ldr	r0, [r0]
   38d28:	movw	r1, #0
   38d2c:	cmp	r0, r1
   38d30:	bne	38d44 <__assert_fail@plt+0x278b0>
   38d34:	ldr	r0, [sp, #20]
   38d38:	add	r0, r0, #1
   38d3c:	str	r0, [sp]
   38d40:	b	38d50 <__assert_fail@plt+0x278bc>
   38d44:	movw	r0, #0
   38d48:	str	r0, [sp]
   38d4c:	b	38d50 <__assert_fail@plt+0x278bc>
   38d50:	ldr	r0, [sp]
   38d54:	str	r0, [sp, #20]
   38d58:	ldr	r0, [sp, #20]
   38d5c:	ldr	r1, [fp, #-8]
   38d60:	ldr	r1, [r1, #120]	; 0x78
   38d64:	cmp	r0, r1
   38d68:	ble	38d9c <__assert_fail@plt+0x27908>
   38d6c:	ldr	r0, [fp, #-12]
   38d70:	ldr	r0, [r0]
   38d74:	ldr	r1, [sp, #16]
   38d78:	lsl	r2, r1, #2
   38d7c:	movw	r1, #0
   38d80:	and	r1, r1, #255	; 0xff
   38d84:	bl	113d4 <memset@plt>
   38d88:	ldr	r0, [sp, #12]
   38d8c:	bl	1388c <__assert_fail@plt+0x23f8>
   38d90:	movw	r0, #0
   38d94:	str	r0, [fp, #-4]
   38d98:	b	38e40 <__assert_fail@plt+0x279ac>
   38d9c:	mov	r0, #0
   38da0:	str	r0, [sp, #8]
   38da4:	ldr	r0, [sp, #16]
   38da8:	sub	r0, r0, #1
   38dac:	str	r0, [sp, #16]
   38db0:	ldr	r0, [fp, #-8]
   38db4:	ldr	r0, [r0, #100]	; 0x64
   38db8:	ldr	r1, [sp, #16]
   38dbc:	add	r0, r0, r1, lsl #2
   38dc0:	ldr	r0, [r0]
   38dc4:	movw	r1, #0
   38dc8:	cmp	r0, r1
   38dcc:	beq	38dfc <__assert_fail@plt+0x27968>
   38dd0:	ldr	r0, [fp, #-8]
   38dd4:	ldr	r1, [fp, #-12]
   38dd8:	ldr	r2, [sp, #16]
   38ddc:	add	r3, sp, #4
   38de0:	bl	39198 <__assert_fail@plt+0x27d04>
   38de4:	str	r0, [fp, #-16]
   38de8:	ldr	r0, [fp, #-16]
   38dec:	cmp	r0, #0
   38df0:	beq	38df8 <__assert_fail@plt+0x27964>
   38df4:	b	38e30 <__assert_fail@plt+0x2799c>
   38df8:	b	38dfc <__assert_fail@plt+0x27968>
   38dfc:	ldr	r0, [fp, #-8]
   38e00:	ldr	r1, [fp, #-12]
   38e04:	ldr	r2, [sp, #16]
   38e08:	add	r3, sp, #4
   38e0c:	bl	38f94 <__assert_fail@plt+0x27b00>
   38e10:	str	r0, [fp, #-16]
   38e14:	ldr	r0, [fp, #-16]
   38e18:	cmp	r0, #0
   38e1c:	beq	38e24 <__assert_fail@plt+0x27990>
   38e20:	b	38e30 <__assert_fail@plt+0x2799c>
   38e24:	b	38d08 <__assert_fail@plt+0x27874>
   38e28:	movw	r0, #0
   38e2c:	str	r0, [fp, #-16]
   38e30:	ldr	r0, [sp, #12]
   38e34:	bl	1388c <__assert_fail@plt+0x23f8>
   38e38:	ldr	r0, [fp, #-16]
   38e3c:	str	r0, [fp, #-4]
   38e40:	ldr	r0, [fp, #-4]
   38e44:	mov	sp, fp
   38e48:	pop	{fp, pc}
   38e4c:	push	{fp, lr}
   38e50:	mov	fp, sp
   38e54:	sub	sp, sp, #48	; 0x30
   38e58:	str	r0, [fp, #-8]
   38e5c:	str	r1, [fp, #-12]
   38e60:	str	r2, [fp, #-16]
   38e64:	str	r3, [fp, #-20]	; 0xffffffec
   38e68:	movw	r0, #0
   38e6c:	str	r0, [sp, #24]
   38e70:	ldr	r0, [sp, #24]
   38e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   38e78:	cmp	r0, r1
   38e7c:	bge	38f80 <__assert_fail@plt+0x27aec>
   38e80:	ldr	r0, [fp, #-12]
   38e84:	ldr	r1, [sp, #24]
   38e88:	add	r0, r0, r1, lsl #2
   38e8c:	ldr	r0, [r0]
   38e90:	movw	r1, #0
   38e94:	cmp	r0, r1
   38e98:	bne	38eb8 <__assert_fail@plt+0x27a24>
   38e9c:	ldr	r0, [fp, #-16]
   38ea0:	ldr	r1, [sp, #24]
   38ea4:	ldr	r0, [r0, r1, lsl #2]
   38ea8:	ldr	r2, [fp, #-12]
   38eac:	add	r1, r2, r1, lsl #2
   38eb0:	str	r0, [r1]
   38eb4:	b	38f6c <__assert_fail@plt+0x27ad8>
   38eb8:	ldr	r0, [fp, #-16]
   38ebc:	ldr	r1, [sp, #24]
   38ec0:	add	r0, r0, r1, lsl #2
   38ec4:	ldr	r0, [r0]
   38ec8:	movw	r1, #0
   38ecc:	cmp	r0, r1
   38ed0:	beq	38f68 <__assert_fail@plt+0x27ad4>
   38ed4:	ldr	r0, [fp, #-12]
   38ed8:	ldr	r1, [sp, #24]
   38edc:	ldr	r0, [r0, r1, lsl #2]
   38ee0:	add	r0, r0, #4
   38ee4:	ldr	r2, [fp, #-16]
   38ee8:	add	r1, r2, r1, lsl #2
   38eec:	ldr	r1, [r1]
   38ef0:	add	r2, r1, #4
   38ef4:	add	r1, sp, #8
   38ef8:	str	r0, [sp, #4]
   38efc:	mov	r0, r1
   38f00:	ldr	r1, [sp, #4]
   38f04:	bl	34dfc <__assert_fail@plt+0x23968>
   38f08:	str	r0, [sp, #20]
   38f0c:	ldr	r0, [sp, #20]
   38f10:	cmp	r0, #0
   38f14:	beq	38f24 <__assert_fail@plt+0x27a90>
   38f18:	ldr	r0, [sp, #20]
   38f1c:	str	r0, [fp, #-4]
   38f20:	b	38f88 <__assert_fail@plt+0x27af4>
   38f24:	ldr	r1, [fp, #-8]
   38f28:	add	r0, sp, #20
   38f2c:	add	r2, sp, #8
   38f30:	bl	369dc <__assert_fail@plt+0x25548>
   38f34:	ldr	r1, [fp, #-12]
   38f38:	ldr	r2, [sp, #24]
   38f3c:	add	r1, r1, r2, lsl #2
   38f40:	str	r0, [r1]
   38f44:	ldr	r0, [sp, #16]
   38f48:	bl	1388c <__assert_fail@plt+0x23f8>
   38f4c:	ldr	r0, [sp, #20]
   38f50:	cmp	r0, #0
   38f54:	beq	38f64 <__assert_fail@plt+0x27ad0>
   38f58:	ldr	r0, [sp, #20]
   38f5c:	str	r0, [fp, #-4]
   38f60:	b	38f88 <__assert_fail@plt+0x27af4>
   38f64:	b	38f68 <__assert_fail@plt+0x27ad4>
   38f68:	b	38f6c <__assert_fail@plt+0x27ad8>
   38f6c:	b	38f70 <__assert_fail@plt+0x27adc>
   38f70:	ldr	r0, [sp, #24]
   38f74:	add	r0, r0, #1
   38f78:	str	r0, [sp, #24]
   38f7c:	b	38e70 <__assert_fail@plt+0x279dc>
   38f80:	movw	r0, #0
   38f84:	str	r0, [fp, #-4]
   38f88:	ldr	r0, [fp, #-4]
   38f8c:	mov	sp, fp
   38f90:	pop	{fp, pc}
   38f94:	push	{fp, lr}
   38f98:	mov	fp, sp
   38f9c:	sub	sp, sp, #48	; 0x30
   38fa0:	str	r0, [fp, #-8]
   38fa4:	str	r1, [fp, #-12]
   38fa8:	str	r2, [fp, #-16]
   38fac:	str	r3, [fp, #-20]	; 0xffffffec
   38fb0:	ldr	r0, [fp, #-8]
   38fb4:	ldr	r0, [r0, #84]	; 0x54
   38fb8:	str	r0, [sp, #24]
   38fbc:	mov	r0, #0
   38fc0:	str	r0, [sp, #20]
   38fc4:	ldr	r0, [fp, #-8]
   38fc8:	ldr	r0, [r0, #100]	; 0x64
   38fcc:	ldr	r1, [fp, #-16]
   38fd0:	add	r0, r0, r1, lsl #2
   38fd4:	ldr	r0, [r0]
   38fd8:	movw	r1, #0
   38fdc:	cmp	r0, r1
   38fe0:	bne	38ff0 <__assert_fail@plt+0x27b5c>
   38fe4:	movw	r0, #0
   38fe8:	str	r0, [sp, #12]
   38fec:	b	3900c <__assert_fail@plt+0x27b78>
   38ff0:	ldr	r0, [fp, #-8]
   38ff4:	ldr	r0, [r0, #100]	; 0x64
   38ff8:	ldr	r1, [fp, #-16]
   38ffc:	add	r0, r0, r1, lsl #2
   39000:	ldr	r0, [r0]
   39004:	add	r0, r0, #4
   39008:	str	r0, [sp, #12]
   3900c:	ldr	r0, [sp, #12]
   39010:	str	r0, [sp, #16]
   39014:	ldr	r0, [fp, #-20]	; 0xffffffec
   39018:	ldr	r0, [r0, #4]
   3901c:	cmp	r0, #0
   39020:	bne	39040 <__assert_fail@plt+0x27bac>
   39024:	ldr	r0, [fp, #-12]
   39028:	ldr	r0, [r0]
   3902c:	ldr	r1, [fp, #-16]
   39030:	add	r0, r0, r1, lsl #2
   39034:	movw	r1, #0
   39038:	str	r1, [r0]
   3903c:	b	3911c <__assert_fail@plt+0x27c88>
   39040:	ldr	r0, [sp, #16]
   39044:	movw	r1, #0
   39048:	cmp	r0, r1
   3904c:	beq	390dc <__assert_fail@plt+0x27c48>
   39050:	ldr	r0, [sp, #24]
   39054:	ldr	r1, [fp, #-20]	; 0xffffffec
   39058:	ldr	r2, [sp, #16]
   3905c:	bl	393ec <__assert_fail@plt+0x27f58>
   39060:	str	r0, [sp, #20]
   39064:	ldr	r0, [sp, #20]
   39068:	cmp	r0, #0
   3906c:	beq	3907c <__assert_fail@plt+0x27be8>
   39070:	ldr	r0, [sp, #20]
   39074:	str	r0, [fp, #-4]
   39078:	b	3918c <__assert_fail@plt+0x27cf8>
   3907c:	ldr	r0, [fp, #-12]
   39080:	ldr	r0, [r0, #20]
   39084:	cmp	r0, #0
   39088:	beq	390d8 <__assert_fail@plt+0x27c44>
   3908c:	ldr	r0, [sp, #24]
   39090:	ldr	r1, [fp, #-20]	; 0xffffffec
   39094:	ldr	r2, [sp, #16]
   39098:	ldr	r3, [fp, #-12]
   3909c:	add	r3, r3, #16
   390a0:	ldr	ip, [fp, #-8]
   390a4:	ldr	ip, [ip, #116]	; 0x74
   390a8:	ldr	lr, [fp, #-16]
   390ac:	str	ip, [sp]
   390b0:	str	lr, [sp, #4]
   390b4:	bl	39520 <__assert_fail@plt+0x2808c>
   390b8:	str	r0, [sp, #20]
   390bc:	ldr	r0, [sp, #20]
   390c0:	cmp	r0, #0
   390c4:	beq	390d4 <__assert_fail@plt+0x27c40>
   390c8:	ldr	r0, [sp, #20]
   390cc:	str	r0, [fp, #-4]
   390d0:	b	3918c <__assert_fail@plt+0x27cf8>
   390d4:	b	390d8 <__assert_fail@plt+0x27c44>
   390d8:	b	390dc <__assert_fail@plt+0x27c48>
   390dc:	ldr	r1, [sp, #24]
   390e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   390e4:	add	r0, sp, #20
   390e8:	bl	369dc <__assert_fail@plt+0x25548>
   390ec:	ldr	r1, [fp, #-12]
   390f0:	ldr	r1, [r1]
   390f4:	ldr	r2, [fp, #-16]
   390f8:	add	r1, r1, r2, lsl #2
   390fc:	str	r0, [r1]
   39100:	ldr	r0, [sp, #20]
   39104:	cmp	r0, #0
   39108:	beq	39118 <__assert_fail@plt+0x27c84>
   3910c:	ldr	r0, [sp, #20]
   39110:	str	r0, [fp, #-4]
   39114:	b	3918c <__assert_fail@plt+0x27cf8>
   39118:	b	3911c <__assert_fail@plt+0x27c88>
   3911c:	ldr	r0, [sp, #16]
   39120:	movw	r1, #0
   39124:	cmp	r0, r1
   39128:	beq	39184 <__assert_fail@plt+0x27cf0>
   3912c:	ldr	r0, [fp, #-8]
   39130:	ldr	r0, [r0, #100]	; 0x64
   39134:	ldr	r1, [fp, #-16]
   39138:	ldr	r0, [r0, r1, lsl #2]
   3913c:	ldrb	r0, [r0, #52]	; 0x34
   39140:	ubfx	r0, r0, #6, #1
   39144:	and	r0, r0, #255	; 0xff
   39148:	cmp	r0, #0
   3914c:	beq	39184 <__assert_fail@plt+0x27cf0>
   39150:	ldr	r0, [fp, #-8]
   39154:	ldr	r1, [fp, #-12]
   39158:	ldr	r2, [fp, #-16]
   3915c:	ldr	r3, [sp, #16]
   39160:	bl	398e8 <__assert_fail@plt+0x28454>
   39164:	str	r0, [sp, #20]
   39168:	ldr	r0, [sp, #20]
   3916c:	cmp	r0, #0
   39170:	beq	39180 <__assert_fail@plt+0x27cec>
   39174:	ldr	r0, [sp, #20]
   39178:	str	r0, [fp, #-4]
   3917c:	b	3918c <__assert_fail@plt+0x27cf8>
   39180:	b	39184 <__assert_fail@plt+0x27cf0>
   39184:	movw	r0, #0
   39188:	str	r0, [fp, #-4]
   3918c:	ldr	r0, [fp, #-4]
   39190:	mov	sp, fp
   39194:	pop	{fp, pc}
   39198:	push	{fp, lr}
   3919c:	mov	fp, sp
   391a0:	sub	sp, sp, #56	; 0x38
   391a4:	str	r0, [fp, #-8]
   391a8:	str	r1, [fp, #-12]
   391ac:	str	r2, [fp, #-16]
   391b0:	str	r3, [fp, #-20]	; 0xffffffec
   391b4:	ldr	r0, [fp, #-8]
   391b8:	ldr	r0, [r0, #84]	; 0x54
   391bc:	str	r0, [fp, #-24]	; 0xffffffe8
   391c0:	ldr	r0, [fp, #-8]
   391c4:	ldr	r0, [r0, #100]	; 0x64
   391c8:	ldr	r1, [fp, #-16]
   391cc:	add	r0, r0, r1, lsl #2
   391d0:	ldr	r0, [r0]
   391d4:	add	r0, r0, #16
   391d8:	str	r0, [sp, #28]
   391dc:	movw	r0, #0
   391e0:	str	r0, [sp, #24]
   391e4:	ldr	r0, [sp, #24]
   391e8:	ldr	r1, [sp, #28]
   391ec:	ldr	r1, [r1, #4]
   391f0:	cmp	r0, r1
   391f4:	bge	393d8 <__assert_fail@plt+0x27f44>
   391f8:	ldr	r0, [sp, #28]
   391fc:	ldr	r0, [r0, #8]
   39200:	ldr	r1, [sp, #24]
   39204:	ldr	r0, [r0, r1, lsl #2]
   39208:	str	r0, [sp, #20]
   3920c:	mov	r0, #0
   39210:	str	r0, [sp, #16]
   39214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39218:	ldr	r0, [r0]
   3921c:	ldr	r1, [sp, #20]
   39220:	add	r0, r0, r1, lsl #3
   39224:	ldr	r0, [r0, #4]
   39228:	and	r0, r0, #255	; 0xff
   3922c:	and	r0, r0, #8
   39230:	cmp	r0, #0
   39234:	bne	3923c <__assert_fail@plt+0x27da8>
   39238:	b	3923c <__assert_fail@plt+0x27da8>
   3923c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39240:	ldr	r0, [r0]
   39244:	ldr	r1, [sp, #20]
   39248:	add	r0, r0, r1, lsl #3
   3924c:	ldr	r0, [r0, #4]
   39250:	lsr	r0, r0, #20
   39254:	and	r0, r0, #1
   39258:	cmp	r0, #0
   3925c:	beq	39284 <__assert_fail@plt+0x27df0>
   39260:	ldr	r0, [fp, #-8]
   39264:	ldr	r1, [fp, #-12]
   39268:	ldr	r2, [sp, #20]
   3926c:	ldr	r3, [fp, #-16]
   39270:	ldr	ip, [fp, #-12]
   39274:	ldr	ip, [ip, #12]
   39278:	str	ip, [sp]
   3927c:	bl	3a974 <__assert_fail@plt+0x294e0>
   39280:	str	r0, [sp, #16]
   39284:	ldr	r0, [sp, #16]
   39288:	cmp	r0, #0
   3928c:	bne	39318 <__assert_fail@plt+0x27e84>
   39290:	ldr	r0, [fp, #-8]
   39294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39298:	ldr	r1, [r1]
   3929c:	ldr	r2, [sp, #20]
   392a0:	add	r1, r1, r2, lsl #3
   392a4:	ldr	r2, [fp, #-16]
   392a8:	bl	3731c <__assert_fail@plt+0x25e88>
   392ac:	tst	r0, #1
   392b0:	beq	39318 <__assert_fail@plt+0x27e84>
   392b4:	ldr	r0, [fp, #-12]
   392b8:	ldr	r0, [r0]
   392bc:	ldr	r1, [fp, #-16]
   392c0:	add	r1, r1, #1
   392c4:	add	r0, r0, r1, lsl #2
   392c8:	ldr	r0, [r0]
   392cc:	movw	r1, #0
   392d0:	cmp	r0, r1
   392d4:	beq	39318 <__assert_fail@plt+0x27e84>
   392d8:	ldr	r0, [fp, #-12]
   392dc:	ldr	r0, [r0]
   392e0:	ldr	r1, [fp, #-16]
   392e4:	add	r0, r0, r1, lsl #2
   392e8:	ldr	r0, [r0, #4]
   392ec:	add	r0, r0, #4
   392f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   392f4:	ldr	r1, [r1, #12]
   392f8:	ldr	r2, [sp, #20]
   392fc:	add	r1, r1, r2, lsl #2
   39300:	ldr	r1, [r1]
   39304:	bl	30cdc <__assert_fail@plt+0x1f848>
   39308:	cmp	r0, #0
   3930c:	beq	39318 <__assert_fail@plt+0x27e84>
   39310:	movw	r0, #1
   39314:	str	r0, [sp, #16]
   39318:	ldr	r0, [sp, #16]
   3931c:	cmp	r0, #0
   39320:	bne	39328 <__assert_fail@plt+0x27e94>
   39324:	b	393c8 <__assert_fail@plt+0x27f34>
   39328:	ldr	r0, [fp, #-12]
   3932c:	ldr	r0, [r0, #20]
   39330:	cmp	r0, #0
   39334:	beq	39390 <__assert_fail@plt+0x27efc>
   39338:	ldr	r0, [fp, #-16]
   3933c:	ldr	r1, [sp, #16]
   39340:	add	r0, r0, r1
   39344:	str	r0, [sp, #8]
   39348:	ldr	r0, [fp, #-8]
   3934c:	ldr	r1, [fp, #-12]
   39350:	add	r1, r1, #16
   39354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39358:	ldr	r2, [r2, #12]
   3935c:	ldr	r3, [sp, #20]
   39360:	add	r2, r2, r3, lsl #2
   39364:	ldr	r2, [r2]
   39368:	ldr	r3, [sp, #8]
   3936c:	ldr	ip, [sp, #20]
   39370:	ldr	lr, [fp, #-16]
   39374:	str	ip, [sp]
   39378:	str	lr, [sp, #4]
   3937c:	bl	3a3ec <__assert_fail@plt+0x28f58>
   39380:	tst	r0, #1
   39384:	beq	3938c <__assert_fail@plt+0x27ef8>
   39388:	b	393c8 <__assert_fail@plt+0x27f34>
   3938c:	b	39390 <__assert_fail@plt+0x27efc>
   39390:	ldr	r0, [fp, #-20]	; 0xffffffec
   39394:	ldr	r1, [sp, #20]
   39398:	bl	30820 <__assert_fail@plt+0x1f38c>
   3939c:	and	r0, r0, #1
   393a0:	strb	r0, [sp, #15]
   393a4:	ldrb	r0, [sp, #15]
   393a8:	mvn	r1, #0
   393ac:	eor	r0, r0, r1
   393b0:	tst	r0, #1
   393b4:	beq	393c4 <__assert_fail@plt+0x27f30>
   393b8:	movw	r0, #12
   393bc:	str	r0, [fp, #-4]
   393c0:	b	393e0 <__assert_fail@plt+0x27f4c>
   393c4:	b	393c8 <__assert_fail@plt+0x27f34>
   393c8:	ldr	r0, [sp, #24]
   393cc:	add	r0, r0, #1
   393d0:	str	r0, [sp, #24]
   393d4:	b	391e4 <__assert_fail@plt+0x27d50>
   393d8:	movw	r0, #0
   393dc:	str	r0, [fp, #-4]
   393e0:	ldr	r0, [fp, #-4]
   393e4:	mov	sp, fp
   393e8:	pop	{fp, pc}
   393ec:	push	{fp, lr}
   393f0:	mov	fp, sp
   393f4:	sub	sp, sp, #32
   393f8:	str	r0, [fp, #-8]
   393fc:	str	r1, [fp, #-12]
   39400:	str	r2, [sp, #16]
   39404:	movw	r0, #0
   39408:	str	r0, [sp, #12]
   3940c:	ldr	r1, [fp, #-8]
   39410:	ldr	r2, [fp, #-12]
   39414:	add	r0, sp, #12
   39418:	bl	369dc <__assert_fail@plt+0x25548>
   3941c:	str	r0, [sp, #4]
   39420:	ldr	r0, [sp, #12]
   39424:	cmp	r0, #0
   39428:	beq	39438 <__assert_fail@plt+0x27fa4>
   3942c:	ldr	r0, [sp, #12]
   39430:	str	r0, [fp, #-4]
   39434:	b	39514 <__assert_fail@plt+0x28080>
   39438:	ldr	r0, [sp, #4]
   3943c:	ldr	r0, [r0, #28]
   39440:	cmp	r0, #0
   39444:	bne	394fc <__assert_fail@plt+0x28068>
   39448:	ldr	r0, [sp, #4]
   3944c:	add	r0, r0, #28
   39450:	ldr	r1, [fp, #-12]
   39454:	ldr	r1, [r1, #4]
   39458:	bl	2fdb8 <__assert_fail@plt+0x1e924>
   3945c:	str	r0, [sp, #12]
   39460:	ldr	r0, [sp, #12]
   39464:	cmp	r0, #0
   39468:	beq	39478 <__assert_fail@plt+0x27fe4>
   3946c:	movw	r0, #12
   39470:	str	r0, [fp, #-4]
   39474:	b	39514 <__assert_fail@plt+0x28080>
   39478:	movw	r0, #0
   3947c:	str	r0, [sp, #8]
   39480:	ldr	r0, [sp, #8]
   39484:	ldr	r1, [fp, #-12]
   39488:	ldr	r1, [r1, #4]
   3948c:	cmp	r0, r1
   39490:	bge	394f8 <__assert_fail@plt+0x28064>
   39494:	ldr	r0, [sp, #4]
   39498:	add	r0, r0, #28
   3949c:	ldr	r1, [fp, #-8]
   394a0:	ldr	r1, [r1, #28]
   394a4:	ldr	r2, [fp, #-12]
   394a8:	ldr	r2, [r2, #8]
   394ac:	ldr	r3, [sp, #8]
   394b0:	add	r2, r2, r3, lsl #2
   394b4:	ldr	r2, [r2]
   394b8:	movw	r3, #12
   394bc:	mul	r2, r2, r3
   394c0:	add	r1, r1, r2
   394c4:	bl	30330 <__assert_fail@plt+0x1ee9c>
   394c8:	str	r0, [sp, #12]
   394cc:	ldr	r0, [sp, #12]
   394d0:	cmp	r0, #0
   394d4:	beq	394e4 <__assert_fail@plt+0x28050>
   394d8:	movw	r0, #12
   394dc:	str	r0, [fp, #-4]
   394e0:	b	39514 <__assert_fail@plt+0x28080>
   394e4:	b	394e8 <__assert_fail@plt+0x28054>
   394e8:	ldr	r0, [sp, #8]
   394ec:	add	r0, r0, #1
   394f0:	str	r0, [sp, #8]
   394f4:	b	39480 <__assert_fail@plt+0x27fec>
   394f8:	b	394fc <__assert_fail@plt+0x28068>
   394fc:	ldr	r0, [fp, #-12]
   39500:	ldr	r1, [sp, #16]
   39504:	ldr	r2, [sp, #4]
   39508:	add	r2, r2, #28
   3950c:	bl	39d18 <__assert_fail@plt+0x28884>
   39510:	str	r0, [fp, #-4]
   39514:	ldr	r0, [fp, #-4]
   39518:	mov	sp, fp
   3951c:	pop	{fp, pc}
   39520:	push	{fp, lr}
   39524:	mov	fp, sp
   39528:	sub	sp, sp, #72	; 0x48
   3952c:	ldr	ip, [fp, #12]
   39530:	ldr	lr, [fp, #8]
   39534:	str	r0, [fp, #-8]
   39538:	str	r1, [fp, #-12]
   3953c:	str	r2, [fp, #-16]
   39540:	str	r3, [fp, #-20]	; 0xffffffec
   39544:	movw	r0, #0
   39548:	str	r0, [fp, #-32]	; 0xffffffe0
   3954c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39550:	ldr	r1, [fp, #-20]	; 0xffffffec
   39554:	ldr	r1, [r1, #4]
   39558:	cmp	r0, r1
   3955c:	bge	398d4 <__assert_fail@plt+0x28440>
   39560:	ldr	r0, [fp, #8]
   39564:	ldr	r1, [fp, #-20]	; 0xffffffec
   39568:	ldr	r1, [r1, #8]
   3956c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39570:	add	r1, r1, r2, lsl #2
   39574:	ldr	r1, [r1]
   39578:	movw	r2, #24
   3957c:	mul	r1, r1, r2
   39580:	add	r0, r0, r1
   39584:	str	r0, [sp, #32]
   39588:	ldr	r0, [fp, #12]
   3958c:	ldr	r1, [sp, #32]
   39590:	ldr	r1, [r1, #8]
   39594:	cmp	r0, r1
   39598:	ble	395b0 <__assert_fail@plt+0x2811c>
   3959c:	ldr	r0, [sp, #32]
   395a0:	ldr	r0, [r0, #4]
   395a4:	ldr	r1, [fp, #12]
   395a8:	cmp	r0, r1
   395ac:	bge	395b4 <__assert_fail@plt+0x28120>
   395b0:	b	398c4 <__assert_fail@plt+0x28430>
   395b4:	ldr	r0, [fp, #-8]
   395b8:	ldr	r0, [r0]
   395bc:	ldr	r1, [sp, #32]
   395c0:	ldr	r1, [r1]
   395c4:	add	r0, r0, r1, lsl #3
   395c8:	ldr	r0, [r0]
   395cc:	str	r0, [sp, #36]	; 0x24
   395d0:	ldr	r0, [sp, #32]
   395d4:	ldr	r0, [r0, #12]
   395d8:	ldr	r1, [fp, #12]
   395dc:	cmp	r0, r1
   395e0:	bne	397ec <__assert_fail@plt+0x28358>
   395e4:	mvn	r0, #0
   395e8:	str	r0, [sp, #28]
   395ec:	str	r0, [sp, #24]
   395f0:	movw	r0, #0
   395f4:	str	r0, [fp, #-28]	; 0xffffffe4
   395f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   395fc:	ldr	r1, [fp, #-12]
   39600:	ldr	r1, [r1, #4]
   39604:	cmp	r0, r1
   39608:	bge	396c0 <__assert_fail@plt+0x2822c>
   3960c:	ldr	r0, [fp, #-12]
   39610:	ldr	r0, [r0, #8]
   39614:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39618:	ldr	r0, [r0, r1, lsl #2]
   3961c:	str	r0, [sp, #20]
   39620:	ldr	r0, [fp, #-8]
   39624:	ldr	r0, [r0]
   39628:	ldr	r1, [sp, #20]
   3962c:	add	r0, r0, r1, lsl #3
   39630:	ldr	r0, [r0, #4]
   39634:	and	r0, r0, #255	; 0xff
   39638:	str	r0, [sp, #16]
   3963c:	ldr	r0, [sp, #16]
   39640:	cmp	r0, #8
   39644:	bne	39674 <__assert_fail@plt+0x281e0>
   39648:	ldr	r0, [sp, #36]	; 0x24
   3964c:	ldr	r1, [fp, #-8]
   39650:	ldr	r1, [r1]
   39654:	ldr	r2, [sp, #20]
   39658:	add	r1, r1, r2, lsl #3
   3965c:	ldr	r1, [r1]
   39660:	cmp	r0, r1
   39664:	bne	39674 <__assert_fail@plt+0x281e0>
   39668:	ldr	r0, [sp, #20]
   3966c:	str	r0, [sp, #28]
   39670:	b	396ac <__assert_fail@plt+0x28218>
   39674:	ldr	r0, [sp, #16]
   39678:	cmp	r0, #9
   3967c:	bne	396a8 <__assert_fail@plt+0x28214>
   39680:	ldr	r0, [sp, #36]	; 0x24
   39684:	ldr	r1, [fp, #-8]
   39688:	ldr	r1, [r1]
   3968c:	ldr	r2, [sp, #20]
   39690:	add	r1, r1, r2, lsl #3
   39694:	ldr	r1, [r1]
   39698:	cmp	r0, r1
   3969c:	bne	396a8 <__assert_fail@plt+0x28214>
   396a0:	ldr	r0, [sp, #20]
   396a4:	str	r0, [sp, #24]
   396a8:	b	396ac <__assert_fail@plt+0x28218>
   396ac:	b	396b0 <__assert_fail@plt+0x2821c>
   396b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   396b4:	add	r0, r0, #1
   396b8:	str	r0, [fp, #-28]	; 0xffffffe4
   396bc:	b	395f8 <__assert_fail@plt+0x28164>
   396c0:	ldr	r0, [sp, #28]
   396c4:	cmp	r0, #0
   396c8:	blt	39700 <__assert_fail@plt+0x2826c>
   396cc:	ldr	r0, [fp, #-8]
   396d0:	ldr	r1, [sp, #28]
   396d4:	ldr	r2, [fp, #-12]
   396d8:	ldr	r3, [fp, #-16]
   396dc:	bl	3a160 <__assert_fail@plt+0x28ccc>
   396e0:	str	r0, [fp, #-24]	; 0xffffffe8
   396e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   396e8:	cmp	r0, #0
   396ec:	beq	396fc <__assert_fail@plt+0x28268>
   396f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   396f4:	str	r0, [fp, #-4]
   396f8:	b	398dc <__assert_fail@plt+0x28448>
   396fc:	b	39700 <__assert_fail@plt+0x2826c>
   39700:	ldr	r0, [sp, #24]
   39704:	cmp	r0, #0
   39708:	blt	397e8 <__assert_fail@plt+0x28354>
   3970c:	movw	r0, #0
   39710:	str	r0, [fp, #-28]	; 0xffffffe4
   39714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39718:	ldr	r1, [fp, #-12]
   3971c:	ldr	r1, [r1, #4]
   39720:	cmp	r0, r1
   39724:	bge	397e4 <__assert_fail@plt+0x28350>
   39728:	ldr	r0, [fp, #-12]
   3972c:	ldr	r0, [r0, #8]
   39730:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39734:	add	r0, r0, r1, lsl #2
   39738:	ldr	r0, [r0]
   3973c:	str	r0, [sp, #12]
   39740:	ldr	r0, [fp, #-8]
   39744:	ldr	r0, [r0, #28]
   39748:	ldr	r1, [sp, #12]
   3974c:	movw	r2, #12
   39750:	mul	r1, r1, r2
   39754:	add	r0, r0, r1
   39758:	ldr	r1, [sp, #24]
   3975c:	bl	30cdc <__assert_fail@plt+0x1f848>
   39760:	cmp	r0, #0
   39764:	bne	397d0 <__assert_fail@plt+0x2833c>
   39768:	ldr	r0, [fp, #-8]
   3976c:	ldr	r0, [r0, #24]
   39770:	ldr	r1, [sp, #12]
   39774:	movw	r2, #12
   39778:	mul	r1, r1, r2
   3977c:	add	r0, r0, r1
   39780:	ldr	r1, [sp, #24]
   39784:	bl	30cdc <__assert_fail@plt+0x1f848>
   39788:	cmp	r0, #0
   3978c:	bne	397d0 <__assert_fail@plt+0x2833c>
   39790:	ldr	r0, [fp, #-8]
   39794:	ldr	r1, [sp, #12]
   39798:	ldr	r2, [fp, #-12]
   3979c:	ldr	r3, [fp, #-16]
   397a0:	bl	3a160 <__assert_fail@plt+0x28ccc>
   397a4:	str	r0, [fp, #-24]	; 0xffffffe8
   397a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   397ac:	cmp	r0, #0
   397b0:	beq	397c0 <__assert_fail@plt+0x2832c>
   397b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   397b8:	str	r0, [fp, #-4]
   397bc:	b	398dc <__assert_fail@plt+0x28448>
   397c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397c4:	mvn	r1, #0
   397c8:	add	r0, r0, r1
   397cc:	str	r0, [fp, #-28]	; 0xffffffe4
   397d0:	b	397d4 <__assert_fail@plt+0x28340>
   397d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397d8:	add	r0, r0, #1
   397dc:	str	r0, [fp, #-28]	; 0xffffffe4
   397e0:	b	39714 <__assert_fail@plt+0x28280>
   397e4:	b	397e8 <__assert_fail@plt+0x28354>
   397e8:	b	398c0 <__assert_fail@plt+0x2842c>
   397ec:	movw	r0, #0
   397f0:	str	r0, [fp, #-28]	; 0xffffffe4
   397f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397f8:	ldr	r1, [fp, #-12]
   397fc:	ldr	r1, [r1, #4]
   39800:	cmp	r0, r1
   39804:	bge	398bc <__assert_fail@plt+0x28428>
   39808:	ldr	r0, [fp, #-12]
   3980c:	ldr	r0, [r0, #8]
   39810:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39814:	ldr	r0, [r0, r1, lsl #2]
   39818:	str	r0, [sp, #8]
   3981c:	ldr	r0, [fp, #-8]
   39820:	ldr	r0, [r0]
   39824:	ldr	r1, [sp, #8]
   39828:	add	r0, r0, r1, lsl #3
   3982c:	ldr	r0, [r0, #4]
   39830:	and	r0, r0, #255	; 0xff
   39834:	str	r0, [sp, #4]
   39838:	ldr	r0, [sp, #4]
   3983c:	cmp	r0, #9
   39840:	beq	39850 <__assert_fail@plt+0x283bc>
   39844:	ldr	r0, [sp, #4]
   39848:	cmp	r0, #8
   3984c:	bne	398a8 <__assert_fail@plt+0x28414>
   39850:	ldr	r0, [sp, #36]	; 0x24
   39854:	ldr	r1, [fp, #-8]
   39858:	ldr	r1, [r1]
   3985c:	ldr	r2, [sp, #8]
   39860:	add	r1, r1, r2, lsl #3
   39864:	ldr	r1, [r1]
   39868:	cmp	r0, r1
   3986c:	beq	39874 <__assert_fail@plt+0x283e0>
   39870:	b	398ac <__assert_fail@plt+0x28418>
   39874:	ldr	r0, [fp, #-8]
   39878:	ldr	r1, [sp, #8]
   3987c:	ldr	r2, [fp, #-12]
   39880:	ldr	r3, [fp, #-16]
   39884:	bl	3a160 <__assert_fail@plt+0x28ccc>
   39888:	str	r0, [fp, #-24]	; 0xffffffe8
   3988c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39890:	cmp	r0, #0
   39894:	beq	398a4 <__assert_fail@plt+0x28410>
   39898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3989c:	str	r0, [fp, #-4]
   398a0:	b	398dc <__assert_fail@plt+0x28448>
   398a4:	b	398a8 <__assert_fail@plt+0x28414>
   398a8:	b	398ac <__assert_fail@plt+0x28418>
   398ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   398b0:	add	r0, r0, #1
   398b4:	str	r0, [fp, #-28]	; 0xffffffe4
   398b8:	b	397f4 <__assert_fail@plt+0x28360>
   398bc:	b	398c0 <__assert_fail@plt+0x2842c>
   398c0:	b	398c4 <__assert_fail@plt+0x28430>
   398c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   398c8:	add	r0, r0, #1
   398cc:	str	r0, [fp, #-32]	; 0xffffffe0
   398d0:	b	3954c <__assert_fail@plt+0x280b8>
   398d4:	movw	r0, #0
   398d8:	str	r0, [fp, #-4]
   398dc:	ldr	r0, [fp, #-4]
   398e0:	mov	sp, fp
   398e4:	pop	{fp, pc}
   398e8:	push	{fp, lr}
   398ec:	mov	fp, sp
   398f0:	sub	sp, sp, #128	; 0x80
   398f4:	str	r0, [fp, #-8]
   398f8:	str	r1, [fp, #-12]
   398fc:	str	r2, [fp, #-16]
   39900:	str	r3, [fp, #-20]	; 0xffffffec
   39904:	ldr	r0, [fp, #-8]
   39908:	ldr	r0, [r0, #84]	; 0x54
   3990c:	str	r0, [fp, #-24]	; 0xffffffe8
   39910:	ldr	r0, [fp, #-8]
   39914:	ldr	r1, [fp, #-16]
   39918:	bl	35148 <__assert_fail@plt+0x23cb4>
   3991c:	str	r0, [sp, #60]	; 0x3c
   39920:	ldr	r0, [sp, #60]	; 0x3c
   39924:	cmn	r0, #1
   39928:	bne	39938 <__assert_fail@plt+0x284a4>
   3992c:	movw	r0, #0
   39930:	str	r0, [fp, #-4]
   39934:	b	39d0c <__assert_fail@plt+0x28878>
   39938:	movw	r0, #0
   3993c:	str	r0, [sp, #64]	; 0x40
   39940:	str	r0, [fp, #-32]	; 0xffffffe0
   39944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39948:	ldr	r1, [fp, #-20]	; 0xffffffec
   3994c:	ldr	r1, [r1, #4]
   39950:	cmp	r0, r1
   39954:	bge	39ce4 <__assert_fail@plt+0x28850>
   39958:	ldr	r0, [fp, #-20]	; 0xffffffec
   3995c:	ldr	r0, [r0, #8]
   39960:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39964:	ldr	r0, [r0, r1, lsl #2]
   39968:	str	r0, [fp, #-36]	; 0xffffffdc
   3996c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39970:	ldr	r0, [r0]
   39974:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39978:	add	r0, r0, r1, lsl #3
   3997c:	ldr	r0, [r0, #4]
   39980:	and	r0, r0, #255	; 0xff
   39984:	str	r0, [sp, #52]	; 0x34
   39988:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3998c:	ldr	r1, [fp, #-12]
   39990:	ldr	r1, [r1, #8]
   39994:	cmp	r0, r1
   39998:	bne	399b4 <__assert_fail@plt+0x28520>
   3999c:	ldr	r0, [fp, #-16]
   399a0:	ldr	r1, [fp, #-12]
   399a4:	ldr	r1, [r1, #12]
   399a8:	cmp	r0, r1
   399ac:	bne	399b4 <__assert_fail@plt+0x28520>
   399b0:	b	39cd4 <__assert_fail@plt+0x28840>
   399b4:	ldr	r0, [sp, #52]	; 0x34
   399b8:	cmp	r0, #4
   399bc:	beq	399c4 <__assert_fail@plt+0x28530>
   399c0:	b	39cd4 <__assert_fail@plt+0x28840>
   399c4:	ldr	r0, [fp, #-8]
   399c8:	ldr	r0, [r0, #116]	; 0x74
   399cc:	ldr	r1, [sp, #60]	; 0x3c
   399d0:	movw	r2, #24
   399d4:	mul	r1, r1, r2
   399d8:	add	r0, r0, r1
   399dc:	str	r0, [sp, #48]	; 0x30
   399e0:	ldr	r0, [sp, #60]	; 0x3c
   399e4:	str	r0, [sp, #56]	; 0x38
   399e8:	ldr	r0, [sp, #48]	; 0x30
   399ec:	ldr	r0, [r0]
   399f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   399f4:	cmp	r0, r1
   399f8:	beq	39a00 <__assert_fail@plt+0x2856c>
   399fc:	b	39cac <__assert_fail@plt+0x28818>
   39a00:	ldr	r0, [sp, #48]	; 0x30
   39a04:	ldr	r0, [r0, #12]
   39a08:	ldr	r1, [sp, #48]	; 0x30
   39a0c:	ldr	r1, [r1, #8]
   39a10:	sub	r0, r0, r1
   39a14:	str	r0, [sp, #44]	; 0x2c
   39a18:	ldr	r0, [fp, #-16]
   39a1c:	ldr	r1, [sp, #44]	; 0x2c
   39a20:	add	r0, r0, r1
   39a24:	str	r0, [sp, #40]	; 0x28
   39a28:	ldr	r0, [sp, #44]	; 0x2c
   39a2c:	cmp	r0, #0
   39a30:	beq	39a50 <__assert_fail@plt+0x285bc>
   39a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39a38:	ldr	r0, [r0, #12]
   39a3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39a40:	add	r0, r0, r1, lsl #2
   39a44:	ldr	r0, [r0]
   39a48:	str	r0, [sp, #24]
   39a4c:	b	39a74 <__assert_fail@plt+0x285e0>
   39a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39a54:	ldr	r0, [r0, #20]
   39a58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39a5c:	movw	r2, #12
   39a60:	mul	r1, r1, r2
   39a64:	add	r0, r0, r1
   39a68:	ldr	r0, [r0, #8]
   39a6c:	ldr	r0, [r0]
   39a70:	str	r0, [sp, #24]
   39a74:	ldr	r0, [sp, #24]
   39a78:	str	r0, [sp, #36]	; 0x24
   39a7c:	ldr	r0, [sp, #40]	; 0x28
   39a80:	ldr	r1, [fp, #-12]
   39a84:	ldr	r1, [r1, #12]
   39a88:	cmp	r0, r1
   39a8c:	bgt	39b28 <__assert_fail@plt+0x28694>
   39a90:	ldr	r0, [fp, #-12]
   39a94:	ldr	r0, [r0]
   39a98:	ldr	r1, [sp, #40]	; 0x28
   39a9c:	add	r0, r0, r1, lsl #2
   39aa0:	ldr	r0, [r0]
   39aa4:	movw	r1, #0
   39aa8:	cmp	r0, r1
   39aac:	beq	39b28 <__assert_fail@plt+0x28694>
   39ab0:	ldr	r0, [fp, #-12]
   39ab4:	ldr	r0, [r0]
   39ab8:	ldr	r1, [sp, #40]	; 0x28
   39abc:	add	r0, r0, r1, lsl #2
   39ac0:	ldr	r0, [r0]
   39ac4:	movw	r1, #0
   39ac8:	cmp	r0, r1
   39acc:	beq	39b28 <__assert_fail@plt+0x28694>
   39ad0:	ldr	r0, [fp, #-12]
   39ad4:	ldr	r0, [r0]
   39ad8:	ldr	r1, [sp, #40]	; 0x28
   39adc:	add	r0, r0, r1, lsl #2
   39ae0:	ldr	r0, [r0]
   39ae4:	add	r0, r0, #4
   39ae8:	ldr	r1, [sp, #36]	; 0x24
   39aec:	bl	30cdc <__assert_fail@plt+0x1f848>
   39af0:	cmp	r0, #0
   39af4:	beq	39b28 <__assert_fail@plt+0x28694>
   39af8:	ldr	r0, [fp, #-8]
   39afc:	ldr	r1, [fp, #-12]
   39b00:	add	r1, r1, #16
   39b04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39b08:	ldr	r3, [fp, #-16]
   39b0c:	ldr	ip, [sp, #36]	; 0x24
   39b10:	ldr	lr, [sp, #40]	; 0x28
   39b14:	str	ip, [sp]
   39b18:	str	lr, [sp, #4]
   39b1c:	bl	3a3ec <__assert_fail@plt+0x28f58>
   39b20:	tst	r0, #1
   39b24:	beq	39b2c <__assert_fail@plt+0x28698>
   39b28:	b	39cac <__assert_fail@plt+0x28818>
   39b2c:	ldr	r0, [sp, #64]	; 0x40
   39b30:	movw	r1, #0
   39b34:	cmp	r0, r1
   39b38:	bne	39b90 <__assert_fail@plt+0x286fc>
   39b3c:	ldr	r0, [fp, #-12]
   39b40:	add	r1, sp, #64	; 0x40
   39b44:	mov	r2, r1
   39b48:	str	r0, [sp, #20]
   39b4c:	mov	r0, r2
   39b50:	ldr	r2, [sp, #20]
   39b54:	str	r1, [sp, #16]
   39b58:	mov	r1, r2
   39b5c:	movw	r2, #28
   39b60:	bl	11248 <memcpy@plt>
   39b64:	ldr	r0, [sp, #16]
   39b68:	add	r0, r0, #16
   39b6c:	ldr	r1, [fp, #-12]
   39b70:	add	r1, r1, #16
   39b74:	bl	30c08 <__assert_fail@plt+0x1f774>
   39b78:	str	r0, [fp, #-28]	; 0xffffffe4
   39b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39b80:	cmp	r0, #0
   39b84:	beq	39b8c <__assert_fail@plt+0x286f8>
   39b88:	b	39cec <__assert_fail@plt+0x28858>
   39b8c:	b	39b90 <__assert_fail@plt+0x286fc>
   39b90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   39b94:	str	r0, [sp, #72]	; 0x48
   39b98:	ldr	r0, [fp, #-16]
   39b9c:	str	r0, [sp, #76]	; 0x4c
   39ba0:	add	r0, sp, #64	; 0x40
   39ba4:	add	r0, r0, #16
   39ba8:	ldr	r1, [sp, #56]	; 0x38
   39bac:	bl	30820 <__assert_fail@plt+0x1f38c>
   39bb0:	and	r0, r0, #1
   39bb4:	strb	r0, [sp, #35]	; 0x23
   39bb8:	ldrb	r0, [sp, #35]	; 0x23
   39bbc:	mvn	r1, #0
   39bc0:	eor	r0, r0, r1
   39bc4:	tst	r0, #1
   39bc8:	beq	39bd8 <__assert_fail@plt+0x28744>
   39bcc:	movw	r0, #12
   39bd0:	str	r0, [fp, #-28]	; 0xffffffe4
   39bd4:	b	39cec <__assert_fail@plt+0x28858>
   39bd8:	ldr	r0, [sp, #64]	; 0x40
   39bdc:	ldr	r1, [fp, #-16]
   39be0:	add	r0, r0, r1, lsl #2
   39be4:	ldr	r0, [r0]
   39be8:	str	r0, [sp, #28]
   39bec:	ldr	r0, [fp, #-8]
   39bf0:	add	r1, sp, #64	; 0x40
   39bf4:	bl	38c54 <__assert_fail@plt+0x277c0>
   39bf8:	str	r0, [fp, #-28]	; 0xffffffe4
   39bfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39c00:	cmp	r0, #0
   39c04:	beq	39c0c <__assert_fail@plt+0x28778>
   39c08:	b	39cec <__assert_fail@plt+0x28858>
   39c0c:	ldr	r0, [fp, #-12]
   39c10:	ldr	r0, [r0, #4]
   39c14:	movw	r1, #0
   39c18:	cmp	r0, r1
   39c1c:	beq	39c54 <__assert_fail@plt+0x287c0>
   39c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39c24:	ldr	r1, [fp, #-12]
   39c28:	ldr	r1, [r1, #4]
   39c2c:	ldr	r2, [sp, #64]	; 0x40
   39c30:	ldr	r3, [fp, #-16]
   39c34:	add	r3, r3, #1
   39c38:	bl	38e4c <__assert_fail@plt+0x279b8>
   39c3c:	str	r0, [fp, #-28]	; 0xffffffe4
   39c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39c44:	cmp	r0, #0
   39c48:	beq	39c50 <__assert_fail@plt+0x287bc>
   39c4c:	b	39cec <__assert_fail@plt+0x28858>
   39c50:	b	39c54 <__assert_fail@plt+0x287c0>
   39c54:	ldr	r0, [sp, #28]
   39c58:	ldr	r1, [sp, #64]	; 0x40
   39c5c:	ldr	r2, [fp, #-16]
   39c60:	add	r1, r1, r2, lsl #2
   39c64:	str	r0, [r1]
   39c68:	add	r0, sp, #64	; 0x40
   39c6c:	add	r1, r0, #16
   39c70:	add	r0, r0, #16
   39c74:	ldr	r2, [sp, #56]	; 0x38
   39c78:	str	r1, [sp, #12]
   39c7c:	mov	r1, r2
   39c80:	bl	30cdc <__assert_fail@plt+0x1f848>
   39c84:	sub	r1, r0, #1
   39c88:	ldr	r0, [sp, #12]
   39c8c:	bl	313c8 <__assert_fail@plt+0x1ff34>
   39c90:	ldr	r0, [fp, #-8]
   39c94:	ldr	r0, [r0, #116]	; 0x74
   39c98:	ldr	r1, [sp, #56]	; 0x38
   39c9c:	movw	r2, #24
   39ca0:	mul	r1, r1, r2
   39ca4:	add	r0, r0, r1
   39ca8:	str	r0, [sp, #48]	; 0x30
   39cac:	ldr	r0, [sp, #56]	; 0x38
   39cb0:	add	r0, r0, #1
   39cb4:	str	r0, [sp, #56]	; 0x38
   39cb8:	ldr	r0, [sp, #48]	; 0x30
   39cbc:	add	r1, r0, #24
   39cc0:	str	r1, [sp, #48]	; 0x30
   39cc4:	ldrsb	r0, [r0, #20]
   39cc8:	cmp	r0, #0
   39ccc:	bne	399e8 <__assert_fail@plt+0x28554>
   39cd0:	b	39cd4 <__assert_fail@plt+0x28840>
   39cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39cd8:	add	r0, r0, #1
   39cdc:	str	r0, [fp, #-32]	; 0xffffffe0
   39ce0:	b	39944 <__assert_fail@plt+0x284b0>
   39ce4:	movw	r0, #0
   39ce8:	str	r0, [fp, #-28]	; 0xffffffe4
   39cec:	ldr	r0, [sp, #64]	; 0x40
   39cf0:	movw	r1, #0
   39cf4:	cmp	r0, r1
   39cf8:	beq	39d04 <__assert_fail@plt+0x28870>
   39cfc:	ldr	r0, [sp, #88]	; 0x58
   39d00:	bl	1388c <__assert_fail@plt+0x23f8>
   39d04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39d08:	str	r0, [fp, #-4]
   39d0c:	ldr	r0, [fp, #-4]
   39d10:	mov	sp, fp
   39d14:	pop	{fp, pc}
   39d18:	push	{fp, lr}
   39d1c:	mov	fp, sp
   39d20:	sub	sp, sp, #56	; 0x38
   39d24:	str	r0, [fp, #-8]
   39d28:	str	r1, [fp, #-12]
   39d2c:	str	r2, [fp, #-16]
   39d30:	ldr	r0, [fp, #-12]
   39d34:	ldr	r0, [r0, #4]
   39d38:	cmp	r0, #0
   39d3c:	beq	39d50 <__assert_fail@plt+0x288bc>
   39d40:	ldr	r0, [fp, #-16]
   39d44:	ldr	r0, [r0, #4]
   39d48:	cmp	r0, #0
   39d4c:	bne	39d5c <__assert_fail@plt+0x288c8>
   39d50:	movw	r0, #0
   39d54:	str	r0, [fp, #-4]
   39d58:	b	3a154 <__assert_fail@plt+0x28cc0>
   39d5c:	ldr	r0, [fp, #-12]
   39d60:	ldr	r0, [r0, #4]
   39d64:	ldr	r1, [fp, #-16]
   39d68:	ldr	r1, [r1, #4]
   39d6c:	add	r0, r0, r1
   39d70:	ldr	r1, [fp, #-8]
   39d74:	ldr	r1, [r1, #4]
   39d78:	add	r0, r0, r1
   39d7c:	ldr	r1, [fp, #-8]
   39d80:	ldr	r1, [r1]
   39d84:	cmp	r0, r1
   39d88:	ble	39dfc <__assert_fail@plt+0x28968>
   39d8c:	ldr	r0, [fp, #-12]
   39d90:	ldr	r0, [r0, #4]
   39d94:	ldr	r1, [fp, #-16]
   39d98:	ldr	r1, [r1, #4]
   39d9c:	add	r0, r0, r1
   39da0:	ldr	r1, [fp, #-8]
   39da4:	ldr	r1, [r1]
   39da8:	add	r0, r0, r1
   39dac:	str	r0, [sp, #12]
   39db0:	ldr	r0, [fp, #-8]
   39db4:	ldr	r0, [r0, #8]
   39db8:	ldr	r1, [sp, #12]
   39dbc:	lsl	r1, r1, #2
   39dc0:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   39dc4:	str	r0, [sp, #8]
   39dc8:	ldr	r0, [sp, #8]
   39dcc:	movw	r1, #0
   39dd0:	cmp	r0, r1
   39dd4:	bne	39de4 <__assert_fail@plt+0x28950>
   39dd8:	movw	r0, #12
   39ddc:	str	r0, [fp, #-4]
   39de0:	b	3a154 <__assert_fail@plt+0x28cc0>
   39de4:	ldr	r0, [sp, #8]
   39de8:	ldr	r1, [fp, #-8]
   39dec:	str	r0, [r1, #8]
   39df0:	ldr	r0, [sp, #12]
   39df4:	ldr	r1, [fp, #-8]
   39df8:	str	r0, [r1]
   39dfc:	ldr	r0, [fp, #-8]
   39e00:	ldr	r0, [r0, #4]
   39e04:	ldr	r1, [fp, #-12]
   39e08:	ldr	r1, [r1, #4]
   39e0c:	add	r0, r0, r1
   39e10:	ldr	r1, [fp, #-16]
   39e14:	ldr	r1, [r1, #4]
   39e18:	add	r0, r0, r1
   39e1c:	str	r0, [sp, #16]
   39e20:	ldr	r0, [fp, #-12]
   39e24:	ldr	r0, [r0, #4]
   39e28:	sub	r0, r0, #1
   39e2c:	str	r0, [fp, #-20]	; 0xffffffec
   39e30:	ldr	r0, [fp, #-16]
   39e34:	ldr	r0, [r0, #4]
   39e38:	sub	r0, r0, #1
   39e3c:	str	r0, [fp, #-24]	; 0xffffffe8
   39e40:	ldr	r0, [fp, #-8]
   39e44:	ldr	r0, [r0, #4]
   39e48:	sub	r0, r0, #1
   39e4c:	str	r0, [sp, #24]
   39e50:	ldr	r0, [fp, #-12]
   39e54:	ldr	r0, [r0, #8]
   39e58:	ldr	r1, [fp, #-20]	; 0xffffffec
   39e5c:	ldr	r0, [r0, r1, lsl #2]
   39e60:	ldr	r1, [fp, #-16]
   39e64:	ldr	r1, [r1, #8]
   39e68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39e6c:	add	r1, r1, r2, lsl #2
   39e70:	ldr	r1, [r1]
   39e74:	cmp	r0, r1
   39e78:	bne	39f84 <__assert_fail@plt+0x28af0>
   39e7c:	b	39e80 <__assert_fail@plt+0x289ec>
   39e80:	ldr	r0, [sp, #24]
   39e84:	cmp	r0, #0
   39e88:	movw	r0, #0
   39e8c:	str	r0, [sp, #4]
   39e90:	blt	39ec8 <__assert_fail@plt+0x28a34>
   39e94:	ldr	r0, [fp, #-8]
   39e98:	ldr	r0, [r0, #8]
   39e9c:	ldr	r1, [sp, #24]
   39ea0:	ldr	r0, [r0, r1, lsl #2]
   39ea4:	ldr	r1, [fp, #-12]
   39ea8:	ldr	r1, [r1, #8]
   39eac:	ldr	r2, [fp, #-20]	; 0xffffffec
   39eb0:	add	r1, r1, r2, lsl #2
   39eb4:	ldr	r1, [r1]
   39eb8:	cmp	r0, r1
   39ebc:	movw	r0, #0
   39ec0:	movgt	r0, #1
   39ec4:	str	r0, [sp, #4]
   39ec8:	ldr	r0, [sp, #4]
   39ecc:	tst	r0, #1
   39ed0:	beq	39ee8 <__assert_fail@plt+0x28a54>
   39ed4:	ldr	r0, [sp, #24]
   39ed8:	mvn	r1, #0
   39edc:	add	r0, r0, r1
   39ee0:	str	r0, [sp, #24]
   39ee4:	b	39e80 <__assert_fail@plt+0x289ec>
   39ee8:	ldr	r0, [sp, #24]
   39eec:	cmp	r0, #0
   39ef0:	blt	39f20 <__assert_fail@plt+0x28a8c>
   39ef4:	ldr	r0, [fp, #-8]
   39ef8:	ldr	r0, [r0, #8]
   39efc:	ldr	r1, [sp, #24]
   39f00:	ldr	r0, [r0, r1, lsl #2]
   39f04:	ldr	r1, [fp, #-12]
   39f08:	ldr	r1, [r1, #8]
   39f0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   39f10:	add	r1, r1, r2, lsl #2
   39f14:	ldr	r1, [r1]
   39f18:	cmp	r0, r1
   39f1c:	beq	39f4c <__assert_fail@plt+0x28ab8>
   39f20:	ldr	r0, [fp, #-12]
   39f24:	ldr	r0, [r0, #8]
   39f28:	ldr	r1, [fp, #-20]	; 0xffffffec
   39f2c:	ldr	r0, [r0, r1, lsl #2]
   39f30:	ldr	r1, [fp, #-8]
   39f34:	ldr	r1, [r1, #8]
   39f38:	ldr	r2, [sp, #16]
   39f3c:	sub	r2, r2, #1
   39f40:	str	r2, [sp, #16]
   39f44:	add	r1, r1, r2, lsl #2
   39f48:	str	r0, [r1]
   39f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39f50:	mvn	r1, #0
   39f54:	add	r0, r0, r1
   39f58:	str	r0, [fp, #-20]	; 0xffffffec
   39f5c:	cmp	r0, #0
   39f60:	blt	39f7c <__assert_fail@plt+0x28ae8>
   39f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39f68:	mvn	r1, #0
   39f6c:	add	r0, r0, r1
   39f70:	str	r0, [fp, #-24]	; 0xffffffe8
   39f74:	cmp	r0, #0
   39f78:	bge	39f80 <__assert_fail@plt+0x28aec>
   39f7c:	b	39ff8 <__assert_fail@plt+0x28b64>
   39f80:	b	39ff4 <__assert_fail@plt+0x28b60>
   39f84:	ldr	r0, [fp, #-12]
   39f88:	ldr	r0, [r0, #8]
   39f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39f90:	ldr	r0, [r0, r1, lsl #2]
   39f94:	ldr	r1, [fp, #-16]
   39f98:	ldr	r1, [r1, #8]
   39f9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39fa0:	add	r1, r1, r2, lsl #2
   39fa4:	ldr	r1, [r1]
   39fa8:	cmp	r0, r1
   39fac:	bge	39fd0 <__assert_fail@plt+0x28b3c>
   39fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39fb4:	mvn	r1, #0
   39fb8:	add	r0, r0, r1
   39fbc:	str	r0, [fp, #-24]	; 0xffffffe8
   39fc0:	cmp	r0, #0
   39fc4:	bge	39fcc <__assert_fail@plt+0x28b38>
   39fc8:	b	39ff8 <__assert_fail@plt+0x28b64>
   39fcc:	b	39ff0 <__assert_fail@plt+0x28b5c>
   39fd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   39fd4:	mvn	r1, #0
   39fd8:	add	r0, r0, r1
   39fdc:	str	r0, [fp, #-20]	; 0xffffffec
   39fe0:	cmp	r0, #0
   39fe4:	bge	39fec <__assert_fail@plt+0x28b58>
   39fe8:	b	39ff8 <__assert_fail@plt+0x28b64>
   39fec:	b	39ff0 <__assert_fail@plt+0x28b5c>
   39ff0:	b	39ff4 <__assert_fail@plt+0x28b60>
   39ff4:	b	39e50 <__assert_fail@plt+0x289bc>
   39ff8:	ldr	r0, [fp, #-8]
   39ffc:	ldr	r0, [r0, #4]
   3a000:	sub	r0, r0, #1
   3a004:	str	r0, [sp, #24]
   3a008:	ldr	r0, [fp, #-8]
   3a00c:	ldr	r0, [r0, #4]
   3a010:	ldr	r1, [fp, #-12]
   3a014:	ldr	r1, [r1, #4]
   3a018:	add	r0, r0, r1
   3a01c:	ldr	r1, [fp, #-16]
   3a020:	ldr	r1, [r1, #4]
   3a024:	add	r0, r0, r1
   3a028:	sub	r0, r0, #1
   3a02c:	str	r0, [sp, #28]
   3a030:	ldr	r0, [sp, #28]
   3a034:	ldr	r1, [sp, #16]
   3a038:	sub	r0, r0, r1
   3a03c:	add	r0, r0, #1
   3a040:	str	r0, [sp, #20]
   3a044:	ldr	r0, [sp, #20]
   3a048:	ldr	r1, [fp, #-8]
   3a04c:	ldr	r2, [r1, #4]
   3a050:	add	r0, r2, r0
   3a054:	str	r0, [r1, #4]
   3a058:	ldr	r0, [sp, #20]
   3a05c:	cmp	r0, #0
   3a060:	ble	3a130 <__assert_fail@plt+0x28c9c>
   3a064:	ldr	r0, [sp, #24]
   3a068:	cmp	r0, #0
   3a06c:	blt	3a130 <__assert_fail@plt+0x28c9c>
   3a070:	b	3a074 <__assert_fail@plt+0x28be0>
   3a074:	ldr	r0, [fp, #-8]
   3a078:	ldr	r0, [r0, #8]
   3a07c:	ldr	r1, [sp, #28]
   3a080:	ldr	r1, [r0, r1, lsl #2]
   3a084:	ldr	r2, [sp, #24]
   3a088:	add	r0, r0, r2, lsl #2
   3a08c:	ldr	r0, [r0]
   3a090:	cmp	r1, r0
   3a094:	ble	3a0e8 <__assert_fail@plt+0x28c54>
   3a098:	ldr	r0, [fp, #-8]
   3a09c:	ldr	r0, [r0, #8]
   3a0a0:	ldr	r1, [sp, #28]
   3a0a4:	sub	r2, r1, #1
   3a0a8:	str	r2, [sp, #28]
   3a0ac:	ldr	r0, [r0, r1, lsl #2]
   3a0b0:	ldr	r1, [fp, #-8]
   3a0b4:	ldr	r1, [r1, #8]
   3a0b8:	ldr	r2, [sp, #24]
   3a0bc:	ldr	r3, [sp, #20]
   3a0c0:	sub	ip, r3, #1
   3a0c4:	str	ip, [sp, #20]
   3a0c8:	add	r2, r2, r3
   3a0cc:	add	r1, r1, r2, lsl #2
   3a0d0:	str	r0, [r1]
   3a0d4:	ldr	r0, [sp, #20]
   3a0d8:	cmp	r0, #0
   3a0dc:	bne	3a0e4 <__assert_fail@plt+0x28c50>
   3a0e0:	b	3a12c <__assert_fail@plt+0x28c98>
   3a0e4:	b	3a128 <__assert_fail@plt+0x28c94>
   3a0e8:	ldr	r0, [fp, #-8]
   3a0ec:	ldr	r0, [r0, #8]
   3a0f0:	ldr	r1, [sp, #24]
   3a0f4:	ldr	r2, [r0, r1, lsl #2]
   3a0f8:	ldr	r3, [sp, #20]
   3a0fc:	add	r1, r1, r3
   3a100:	add	r0, r0, r1, lsl #2
   3a104:	str	r2, [r0]
   3a108:	ldr	r0, [sp, #24]
   3a10c:	mvn	r1, #0
   3a110:	add	r0, r0, r1
   3a114:	str	r0, [sp, #24]
   3a118:	cmp	r0, #0
   3a11c:	bge	3a124 <__assert_fail@plt+0x28c90>
   3a120:	b	3a12c <__assert_fail@plt+0x28c98>
   3a124:	b	3a128 <__assert_fail@plt+0x28c94>
   3a128:	b	3a074 <__assert_fail@plt+0x28be0>
   3a12c:	b	3a130 <__assert_fail@plt+0x28c9c>
   3a130:	ldr	r0, [fp, #-8]
   3a134:	ldr	r0, [r0, #8]
   3a138:	ldr	r1, [sp, #16]
   3a13c:	add	r1, r0, r1, lsl #2
   3a140:	ldr	r2, [sp, #20]
   3a144:	lsl	r2, r2, #2
   3a148:	bl	11248 <memcpy@plt>
   3a14c:	movw	r0, #0
   3a150:	str	r0, [fp, #-4]
   3a154:	ldr	r0, [fp, #-4]
   3a158:	mov	sp, fp
   3a15c:	pop	{fp, pc}
   3a160:	push	{fp, lr}
   3a164:	mov	fp, sp
   3a168:	sub	sp, sp, #72	; 0x48
   3a16c:	str	r0, [fp, #-8]
   3a170:	str	r1, [fp, #-12]
   3a174:	str	r2, [fp, #-16]
   3a178:	str	r3, [fp, #-20]	; 0xffffffec
   3a17c:	ldr	r0, [fp, #-8]
   3a180:	ldr	r0, [r0, #28]
   3a184:	ldr	r1, [fp, #-12]
   3a188:	movw	r2, #12
   3a18c:	mul	r1, r1, r2
   3a190:	add	r0, r0, r1
   3a194:	str	r0, [fp, #-32]	; 0xffffffe0
   3a198:	add	r0, sp, #28
   3a19c:	movw	r1, #0
   3a1a0:	and	r1, r1, #255	; 0xff
   3a1a4:	bl	113d4 <memset@plt>
   3a1a8:	movw	r0, #0
   3a1ac:	str	r0, [fp, #-24]	; 0xffffffe8
   3a1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a1b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a1b8:	ldr	r1, [r1, #4]
   3a1bc:	cmp	r0, r1
   3a1c0:	bge	3a354 <__assert_fail@plt+0x28ec0>
   3a1c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a1c8:	ldr	r0, [r0, #8]
   3a1cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a1d0:	add	r0, r0, r1, lsl #2
   3a1d4:	ldr	r0, [r0]
   3a1d8:	str	r0, [sp, #24]
   3a1dc:	ldr	r0, [sp, #24]
   3a1e0:	ldr	r1, [fp, #-12]
   3a1e4:	cmp	r0, r1
   3a1e8:	bne	3a1f0 <__assert_fail@plt+0x28d5c>
   3a1ec:	b	3a344 <__assert_fail@plt+0x28eb0>
   3a1f0:	ldr	r0, [fp, #-8]
   3a1f4:	ldr	r0, [r0]
   3a1f8:	ldr	r1, [sp, #24]
   3a1fc:	add	r0, r0, r1, lsl #3
   3a200:	ldr	r0, [r0, #4]
   3a204:	and	r0, r0, #255	; 0xff
   3a208:	and	r0, r0, #8
   3a20c:	cmp	r0, #0
   3a210:	beq	3a340 <__assert_fail@plt+0x28eac>
   3a214:	ldr	r0, [fp, #-8]
   3a218:	ldr	r0, [r0, #20]
   3a21c:	ldr	r1, [sp, #24]
   3a220:	movw	r2, #12
   3a224:	mul	r1, r1, r2
   3a228:	add	r0, r0, r1
   3a22c:	ldr	r0, [r0, #8]
   3a230:	ldr	r0, [r0]
   3a234:	str	r0, [sp, #20]
   3a238:	ldr	r0, [fp, #-8]
   3a23c:	ldr	r0, [r0, #20]
   3a240:	ldr	r1, [sp, #24]
   3a244:	mul	r1, r1, r2
   3a248:	add	r0, r0, r1
   3a24c:	ldr	r0, [r0, #4]
   3a250:	cmp	r0, #1
   3a254:	ble	3a280 <__assert_fail@plt+0x28dec>
   3a258:	ldr	r0, [fp, #-8]
   3a25c:	ldr	r0, [r0, #20]
   3a260:	ldr	r1, [sp, #24]
   3a264:	movw	r2, #12
   3a268:	mul	r1, r1, r2
   3a26c:	add	r0, r0, r1
   3a270:	ldr	r0, [r0, #8]
   3a274:	ldr	r0, [r0, #4]
   3a278:	str	r0, [sp, #4]
   3a27c:	b	3a28c <__assert_fail@plt+0x28df8>
   3a280:	mvn	r0, #0
   3a284:	str	r0, [sp, #4]
   3a288:	b	3a28c <__assert_fail@plt+0x28df8>
   3a28c:	ldr	r0, [sp, #4]
   3a290:	str	r0, [sp, #16]
   3a294:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a298:	ldr	r1, [sp, #20]
   3a29c:	bl	30cdc <__assert_fail@plt+0x1f848>
   3a2a0:	cmp	r0, #0
   3a2a4:	bne	3a2bc <__assert_fail@plt+0x28e28>
   3a2a8:	ldr	r0, [fp, #-16]
   3a2ac:	ldr	r1, [sp, #20]
   3a2b0:	bl	30cdc <__assert_fail@plt+0x1f848>
   3a2b4:	cmp	r0, #0
   3a2b8:	bne	3a2f0 <__assert_fail@plt+0x28e5c>
   3a2bc:	ldr	r0, [sp, #16]
   3a2c0:	cmp	r0, #0
   3a2c4:	ble	3a33c <__assert_fail@plt+0x28ea8>
   3a2c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a2cc:	ldr	r1, [sp, #16]
   3a2d0:	bl	30cdc <__assert_fail@plt+0x1f848>
   3a2d4:	cmp	r0, #0
   3a2d8:	bne	3a33c <__assert_fail@plt+0x28ea8>
   3a2dc:	ldr	r0, [fp, #-16]
   3a2e0:	ldr	r1, [sp, #16]
   3a2e4:	bl	30cdc <__assert_fail@plt+0x1f848>
   3a2e8:	cmp	r0, #0
   3a2ec:	beq	3a33c <__assert_fail@plt+0x28ea8>
   3a2f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a2f4:	ldr	r0, [fp, #-8]
   3a2f8:	ldr	r0, [r0, #28]
   3a2fc:	ldr	r2, [sp, #24]
   3a300:	movw	r3, #12
   3a304:	mul	r2, r2, r3
   3a308:	add	r2, r0, r2
   3a30c:	add	r0, sp, #28
   3a310:	bl	39d18 <__assert_fail@plt+0x28884>
   3a314:	str	r0, [fp, #-28]	; 0xffffffe4
   3a318:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a31c:	cmp	r0, #0
   3a320:	beq	3a338 <__assert_fail@plt+0x28ea4>
   3a324:	ldr	r0, [sp, #36]	; 0x24
   3a328:	bl	1388c <__assert_fail@plt+0x23f8>
   3a32c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a330:	str	r0, [fp, #-4]
   3a334:	b	3a3e0 <__assert_fail@plt+0x28f4c>
   3a338:	b	3a33c <__assert_fail@plt+0x28ea8>
   3a33c:	b	3a340 <__assert_fail@plt+0x28eac>
   3a340:	b	3a344 <__assert_fail@plt+0x28eb0>
   3a344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a348:	add	r0, r0, #1
   3a34c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a350:	b	3a1b0 <__assert_fail@plt+0x28d1c>
   3a354:	movw	r0, #0
   3a358:	str	r0, [fp, #-24]	; 0xffffffe8
   3a35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a360:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a364:	ldr	r1, [r1, #4]
   3a368:	cmp	r0, r1
   3a36c:	bge	3a3d0 <__assert_fail@plt+0x28f3c>
   3a370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a374:	ldr	r0, [r0, #8]
   3a378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a37c:	add	r0, r0, r1, lsl #2
   3a380:	ldr	r0, [r0]
   3a384:	str	r0, [sp, #12]
   3a388:	ldr	r1, [sp, #12]
   3a38c:	add	r0, sp, #28
   3a390:	bl	30cdc <__assert_fail@plt+0x1f848>
   3a394:	cmp	r0, #0
   3a398:	bne	3a3bc <__assert_fail@plt+0x28f28>
   3a39c:	ldr	r0, [fp, #-16]
   3a3a0:	ldr	r1, [sp, #12]
   3a3a4:	bl	30cdc <__assert_fail@plt+0x1f848>
   3a3a8:	sub	r0, r0, #1
   3a3ac:	str	r0, [sp, #8]
   3a3b0:	ldr	r0, [fp, #-16]
   3a3b4:	ldr	r1, [sp, #8]
   3a3b8:	bl	313c8 <__assert_fail@plt+0x1ff34>
   3a3bc:	b	3a3c0 <__assert_fail@plt+0x28f2c>
   3a3c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a3c4:	add	r0, r0, #1
   3a3c8:	str	r0, [fp, #-24]	; 0xffffffe8
   3a3cc:	b	3a35c <__assert_fail@plt+0x28ec8>
   3a3d0:	ldr	r0, [sp, #36]	; 0x24
   3a3d4:	bl	1388c <__assert_fail@plt+0x23f8>
   3a3d8:	movw	r0, #0
   3a3dc:	str	r0, [fp, #-4]
   3a3e0:	ldr	r0, [fp, #-4]
   3a3e4:	mov	sp, fp
   3a3e8:	pop	{fp, pc}
   3a3ec:	push	{r4, sl, fp, lr}
   3a3f0:	add	fp, sp, #8
   3a3f4:	sub	sp, sp, #72	; 0x48
   3a3f8:	ldr	ip, [fp, #12]
   3a3fc:	ldr	lr, [fp, #8]
   3a400:	str	r0, [fp, #-16]
   3a404:	str	r1, [fp, #-20]	; 0xffffffec
   3a408:	str	r2, [fp, #-24]	; 0xffffffe8
   3a40c:	str	r3, [fp, #-28]	; 0xffffffe4
   3a410:	ldr	r0, [fp, #-16]
   3a414:	ldr	r0, [r0, #84]	; 0x54
   3a418:	str	r0, [fp, #-32]	; 0xffffffe0
   3a41c:	ldr	r0, [fp, #-16]
   3a420:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3a424:	str	ip, [sp, #16]
   3a428:	str	lr, [sp, #12]
   3a42c:	bl	35148 <__assert_fail@plt+0x23cb4>
   3a430:	str	r0, [sp, #32]
   3a434:	ldr	r0, [fp, #-16]
   3a438:	ldr	r1, [fp, #12]
   3a43c:	bl	35148 <__assert_fail@plt+0x23cb4>
   3a440:	str	r0, [sp, #28]
   3a444:	movw	r0, #0
   3a448:	str	r0, [fp, #-36]	; 0xffffffdc
   3a44c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a450:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a454:	ldr	r1, [r1, #4]
   3a458:	cmp	r0, r1
   3a45c:	bge	3a540 <__assert_fail@plt+0x290ac>
   3a460:	ldr	r0, [fp, #-16]
   3a464:	ldr	r0, [r0, #116]	; 0x74
   3a468:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a46c:	ldr	r1, [r1, #8]
   3a470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a474:	ldr	r1, [r1, r2, lsl #2]
   3a478:	add	r1, r1, r1, lsl #1
   3a47c:	add	r0, r0, r1, lsl #3
   3a480:	str	r0, [sp, #20]
   3a484:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a488:	ldr	r0, [r0]
   3a48c:	ldr	r1, [sp, #20]
   3a490:	ldr	r1, [r1]
   3a494:	ldr	r0, [r0, r1, lsl #3]
   3a498:	str	r0, [sp, #24]
   3a49c:	ldr	r0, [fp, #-16]
   3a4a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a4a4:	ldr	r1, [r1, #8]
   3a4a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a4ac:	ldr	r1, [r1, r2, lsl #2]
   3a4b0:	ldr	r2, [sp, #24]
   3a4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a4b8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   3a4bc:	ldr	lr, [sp, #32]
   3a4c0:	mov	r4, sp
   3a4c4:	str	lr, [r4, #4]
   3a4c8:	str	ip, [r4]
   3a4cc:	bl	3a55c <__assert_fail@plt+0x290c8>
   3a4d0:	str	r0, [sp, #36]	; 0x24
   3a4d4:	ldr	r0, [fp, #-16]
   3a4d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a4dc:	ldr	r1, [r1, #8]
   3a4e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a4e4:	add	r1, r1, r2, lsl #2
   3a4e8:	ldr	r1, [r1]
   3a4ec:	ldr	r2, [sp, #24]
   3a4f0:	ldr	r3, [fp, #8]
   3a4f4:	ldr	ip, [fp, #12]
   3a4f8:	ldr	lr, [sp, #28]
   3a4fc:	str	ip, [sp]
   3a500:	str	lr, [sp, #4]
   3a504:	bl	3a55c <__assert_fail@plt+0x290c8>
   3a508:	str	r0, [sp, #40]	; 0x28
   3a50c:	ldr	r0, [sp, #40]	; 0x28
   3a510:	ldr	r1, [sp, #36]	; 0x24
   3a514:	cmp	r0, r1
   3a518:	bne	3a520 <__assert_fail@plt+0x2908c>
   3a51c:	b	3a530 <__assert_fail@plt+0x2909c>
   3a520:	movw	r0, #1
   3a524:	and	r0, r0, #1
   3a528:	strb	r0, [fp, #-9]
   3a52c:	b	3a54c <__assert_fail@plt+0x290b8>
   3a530:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a534:	add	r0, r0, #1
   3a538:	str	r0, [fp, #-36]	; 0xffffffdc
   3a53c:	b	3a44c <__assert_fail@plt+0x28fb8>
   3a540:	movw	r0, #0
   3a544:	and	r0, r0, #1
   3a548:	strb	r0, [fp, #-9]
   3a54c:	ldrb	r0, [fp, #-9]
   3a550:	and	r0, r0, #1
   3a554:	sub	sp, fp, #8
   3a558:	pop	{r4, sl, fp, pc}
   3a55c:	push	{fp, lr}
   3a560:	mov	fp, sp
   3a564:	sub	sp, sp, #32
   3a568:	ldr	ip, [fp, #12]
   3a56c:	ldr	lr, [fp, #8]
   3a570:	str	r0, [fp, #-8]
   3a574:	str	r1, [fp, #-12]
   3a578:	str	r2, [sp, #16]
   3a57c:	str	r3, [sp, #12]
   3a580:	ldr	r0, [fp, #-8]
   3a584:	ldr	r0, [r0, #116]	; 0x74
   3a588:	ldr	r1, [fp, #-12]
   3a58c:	movw	r2, #24
   3a590:	mul	r1, r1, r2
   3a594:	add	r0, r0, r1
   3a598:	str	r0, [sp, #8]
   3a59c:	ldr	r0, [fp, #8]
   3a5a0:	ldr	r1, [sp, #8]
   3a5a4:	ldr	r1, [r1, #8]
   3a5a8:	cmp	r0, r1
   3a5ac:	bge	3a5bc <__assert_fail@plt+0x29128>
   3a5b0:	mvn	r0, #0
   3a5b4:	str	r0, [fp, #-4]
   3a5b8:	b	3a660 <__assert_fail@plt+0x291cc>
   3a5bc:	ldr	r0, [sp, #8]
   3a5c0:	ldr	r0, [r0, #12]
   3a5c4:	ldr	r1, [fp, #8]
   3a5c8:	cmp	r0, r1
   3a5cc:	bge	3a5dc <__assert_fail@plt+0x29148>
   3a5d0:	movw	r0, #1
   3a5d4:	str	r0, [fp, #-4]
   3a5d8:	b	3a660 <__assert_fail@plt+0x291cc>
   3a5dc:	ldr	r0, [fp, #8]
   3a5e0:	ldr	r1, [sp, #8]
   3a5e4:	ldr	r1, [r1, #8]
   3a5e8:	cmp	r0, r1
   3a5ec:	movw	r0, #0
   3a5f0:	moveq	r0, #1
   3a5f4:	and	r0, r0, #1
   3a5f8:	str	r0, [sp, #4]
   3a5fc:	ldr	r0, [fp, #8]
   3a600:	ldr	r1, [sp, #8]
   3a604:	ldr	r1, [r1, #12]
   3a608:	cmp	r0, r1
   3a60c:	movw	r0, #0
   3a610:	moveq	r0, #1
   3a614:	and	r0, r0, #1
   3a618:	lsl	r0, r0, #1
   3a61c:	ldr	r1, [sp, #4]
   3a620:	orr	r0, r1, r0
   3a624:	str	r0, [sp, #4]
   3a628:	ldr	r0, [sp, #4]
   3a62c:	cmp	r0, #0
   3a630:	bne	3a640 <__assert_fail@plt+0x291ac>
   3a634:	movw	r0, #0
   3a638:	str	r0, [fp, #-4]
   3a63c:	b	3a660 <__assert_fail@plt+0x291cc>
   3a640:	ldr	r0, [fp, #-8]
   3a644:	ldr	r1, [sp, #4]
   3a648:	ldr	r2, [sp, #16]
   3a64c:	ldr	r3, [sp, #12]
   3a650:	ldr	ip, [fp, #12]
   3a654:	str	ip, [sp]
   3a658:	bl	3a66c <__assert_fail@plt+0x291d8>
   3a65c:	str	r0, [fp, #-4]
   3a660:	ldr	r0, [fp, #-4]
   3a664:	mov	sp, fp
   3a668:	pop	{fp, pc}
   3a66c:	push	{fp, lr}
   3a670:	mov	fp, sp
   3a674:	sub	sp, sp, #56	; 0x38
   3a678:	ldr	ip, [fp, #8]
   3a67c:	str	r0, [fp, #-8]
   3a680:	str	r1, [fp, #-12]
   3a684:	str	r2, [fp, #-16]
   3a688:	str	r3, [fp, #-20]	; 0xffffffec
   3a68c:	ldr	r0, [fp, #-8]
   3a690:	ldr	r0, [r0, #84]	; 0x54
   3a694:	str	r0, [fp, #-24]	; 0xffffffe8
   3a698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a69c:	ldr	r0, [r0, #24]
   3a6a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a6a4:	movw	r2, #12
   3a6a8:	mul	r1, r1, r2
   3a6ac:	add	r0, r0, r1
   3a6b0:	str	r0, [sp, #28]
   3a6b4:	movw	r0, #0
   3a6b8:	str	r0, [sp, #24]
   3a6bc:	ldr	r0, [sp, #24]
   3a6c0:	ldr	r1, [sp, #28]
   3a6c4:	ldr	r1, [r1, #4]
   3a6c8:	cmp	r0, r1
   3a6cc:	bge	3a944 <__assert_fail@plt+0x294b0>
   3a6d0:	ldr	r0, [sp, #28]
   3a6d4:	ldr	r0, [r0, #8]
   3a6d8:	ldr	r1, [sp, #24]
   3a6dc:	ldr	r0, [r0, r1, lsl #2]
   3a6e0:	str	r0, [sp, #20]
   3a6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a6e8:	ldr	r0, [r0]
   3a6ec:	ldr	r1, [sp, #20]
   3a6f0:	add	r0, r0, r1, lsl #3
   3a6f4:	ldrb	r0, [r0, #4]
   3a6f8:	mov	r1, r0
   3a6fc:	cmp	r0, #4
   3a700:	str	r1, [sp, #4]
   3a704:	beq	3a72c <__assert_fail@plt+0x29298>
   3a708:	b	3a70c <__assert_fail@plt+0x29278>
   3a70c:	ldr	r0, [sp, #4]
   3a710:	cmp	r0, #8
   3a714:	beq	3a8ac <__assert_fail@plt+0x29418>
   3a718:	b	3a71c <__assert_fail@plt+0x29288>
   3a71c:	ldr	r0, [sp, #4]
   3a720:	cmp	r0, #9
   3a724:	beq	3a8ec <__assert_fail@plt+0x29458>
   3a728:	b	3a92c <__assert_fail@plt+0x29498>
   3a72c:	ldr	r0, [fp, #8]
   3a730:	cmn	r0, #1
   3a734:	beq	3a8a8 <__assert_fail@plt+0x29414>
   3a738:	ldr	r0, [fp, #-8]
   3a73c:	ldr	r0, [r0, #116]	; 0x74
   3a740:	ldr	r1, [fp, #8]
   3a744:	movw	r2, #24
   3a748:	mul	r1, r1, r2
   3a74c:	add	r0, r0, r1
   3a750:	str	r0, [sp, #16]
   3a754:	ldr	r0, [sp, #16]
   3a758:	ldr	r0, [r0]
   3a75c:	ldr	r1, [sp, #20]
   3a760:	cmp	r0, r1
   3a764:	beq	3a76c <__assert_fail@plt+0x292d8>
   3a768:	b	3a88c <__assert_fail@plt+0x293f8>
   3a76c:	ldr	r0, [fp, #-16]
   3a770:	cmp	r0, #32
   3a774:	bge	3a79c <__assert_fail@plt+0x29308>
   3a778:	ldr	r0, [sp, #16]
   3a77c:	ldr	r0, [r0, #16]
   3a780:	ldr	r1, [fp, #-16]
   3a784:	movw	r2, #1
   3a788:	lsl	r1, r2, r1
   3a78c:	and	r0, r0, r1
   3a790:	cmp	r0, #0
   3a794:	bne	3a79c <__assert_fail@plt+0x29308>
   3a798:	b	3a88c <__assert_fail@plt+0x293f8>
   3a79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a7a0:	ldr	r0, [r0, #20]
   3a7a4:	ldr	r1, [sp, #20]
   3a7a8:	movw	r2, #12
   3a7ac:	mul	r1, r1, r2
   3a7b0:	add	r0, r0, r1
   3a7b4:	ldr	r0, [r0, #8]
   3a7b8:	ldr	r0, [r0]
   3a7bc:	str	r0, [sp, #12]
   3a7c0:	ldr	r0, [sp, #12]
   3a7c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a7c8:	cmp	r0, r1
   3a7cc:	bne	3a7f8 <__assert_fail@plt+0x29364>
   3a7d0:	ldr	r0, [fp, #-12]
   3a7d4:	and	r0, r0, #1
   3a7d8:	cmp	r0, #0
   3a7dc:	beq	3a7ec <__assert_fail@plt+0x29358>
   3a7e0:	mvn	r0, #0
   3a7e4:	str	r0, [fp, #-4]
   3a7e8:	b	3a968 <__assert_fail@plt+0x294d4>
   3a7ec:	movw	r0, #0
   3a7f0:	str	r0, [fp, #-4]
   3a7f4:	b	3a968 <__assert_fail@plt+0x294d4>
   3a7f8:	ldr	r0, [fp, #-8]
   3a7fc:	ldr	r1, [fp, #-12]
   3a800:	ldr	r2, [fp, #-16]
   3a804:	ldr	r3, [sp, #12]
   3a808:	ldr	ip, [fp, #8]
   3a80c:	str	ip, [sp]
   3a810:	bl	3a66c <__assert_fail@plt+0x291d8>
   3a814:	str	r0, [sp, #8]
   3a818:	ldr	r0, [sp, #8]
   3a81c:	cmn	r0, #1
   3a820:	bne	3a830 <__assert_fail@plt+0x2939c>
   3a824:	mvn	r0, #0
   3a828:	str	r0, [fp, #-4]
   3a82c:	b	3a968 <__assert_fail@plt+0x294d4>
   3a830:	ldr	r0, [sp, #8]
   3a834:	cmp	r0, #0
   3a838:	bne	3a858 <__assert_fail@plt+0x293c4>
   3a83c:	ldr	r0, [fp, #-12]
   3a840:	and	r0, r0, #2
   3a844:	cmp	r0, #0
   3a848:	beq	3a858 <__assert_fail@plt+0x293c4>
   3a84c:	movw	r0, #0
   3a850:	str	r0, [fp, #-4]
   3a854:	b	3a968 <__assert_fail@plt+0x294d4>
   3a858:	ldr	r0, [fp, #-16]
   3a85c:	cmp	r0, #32
   3a860:	bge	3a888 <__assert_fail@plt+0x293f4>
   3a864:	ldr	r0, [fp, #-16]
   3a868:	movw	r1, #1
   3a86c:	lsl	r0, r1, r0
   3a870:	mvn	r1, #0
   3a874:	eor	r0, r0, r1
   3a878:	ldr	r1, [sp, #16]
   3a87c:	ldr	r2, [r1, #16]
   3a880:	and	r0, r2, r0
   3a884:	str	r0, [r1, #16]
   3a888:	b	3a88c <__assert_fail@plt+0x293f8>
   3a88c:	ldr	r0, [sp, #16]
   3a890:	add	r1, r0, #24
   3a894:	str	r1, [sp, #16]
   3a898:	ldrsb	r0, [r0, #20]
   3a89c:	cmp	r0, #0
   3a8a0:	bne	3a754 <__assert_fail@plt+0x292c0>
   3a8a4:	b	3a8a8 <__assert_fail@plt+0x29414>
   3a8a8:	b	3a930 <__assert_fail@plt+0x2949c>
   3a8ac:	ldr	r0, [fp, #-12]
   3a8b0:	and	r0, r0, #1
   3a8b4:	cmp	r0, #0
   3a8b8:	beq	3a8e8 <__assert_fail@plt+0x29454>
   3a8bc:	ldr	r0, [fp, #-16]
   3a8c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a8c4:	ldr	r1, [r1]
   3a8c8:	ldr	r2, [sp, #20]
   3a8cc:	add	r1, r1, r2, lsl #3
   3a8d0:	ldr	r1, [r1]
   3a8d4:	cmp	r0, r1
   3a8d8:	bne	3a8e8 <__assert_fail@plt+0x29454>
   3a8dc:	mvn	r0, #0
   3a8e0:	str	r0, [fp, #-4]
   3a8e4:	b	3a968 <__assert_fail@plt+0x294d4>
   3a8e8:	b	3a930 <__assert_fail@plt+0x2949c>
   3a8ec:	ldr	r0, [fp, #-12]
   3a8f0:	and	r0, r0, #2
   3a8f4:	cmp	r0, #0
   3a8f8:	beq	3a928 <__assert_fail@plt+0x29494>
   3a8fc:	ldr	r0, [fp, #-16]
   3a900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a904:	ldr	r1, [r1]
   3a908:	ldr	r2, [sp, #20]
   3a90c:	add	r1, r1, r2, lsl #3
   3a910:	ldr	r1, [r1]
   3a914:	cmp	r0, r1
   3a918:	bne	3a928 <__assert_fail@plt+0x29494>
   3a91c:	movw	r0, #0
   3a920:	str	r0, [fp, #-4]
   3a924:	b	3a968 <__assert_fail@plt+0x294d4>
   3a928:	b	3a930 <__assert_fail@plt+0x2949c>
   3a92c:	b	3a930 <__assert_fail@plt+0x2949c>
   3a930:	b	3a934 <__assert_fail@plt+0x294a0>
   3a934:	ldr	r0, [sp, #24]
   3a938:	add	r0, r0, #1
   3a93c:	str	r0, [sp, #24]
   3a940:	b	3a6bc <__assert_fail@plt+0x29228>
   3a944:	ldr	r0, [fp, #-12]
   3a948:	and	r0, r0, #2
   3a94c:	cmp	r0, #0
   3a950:	movw	r0, #0
   3a954:	movne	r0, #1
   3a958:	tst	r0, #1
   3a95c:	movw	r0, #1
   3a960:	moveq	r0, #0
   3a964:	str	r0, [fp, #-4]
   3a968:	ldr	r0, [fp, #-4]
   3a96c:	mov	sp, fp
   3a970:	pop	{fp, pc}
   3a974:	push	{fp, lr}
   3a978:	mov	fp, sp
   3a97c:	sub	sp, sp, #32
   3a980:	ldr	ip, [fp, #8]
   3a984:	str	r0, [fp, #-4]
   3a988:	str	r1, [fp, #-8]
   3a98c:	str	r2, [fp, #-12]
   3a990:	str	r3, [sp, #16]
   3a994:	ldr	r0, [fp, #-4]
   3a998:	ldr	r0, [r0, #84]	; 0x54
   3a99c:	str	r0, [sp, #12]
   3a9a0:	ldr	r0, [sp, #12]
   3a9a4:	ldr	r1, [fp, #-12]
   3a9a8:	ldr	r2, [fp, #-4]
   3a9ac:	ldr	r3, [sp, #16]
   3a9b0:	str	ip, [sp, #4]
   3a9b4:	bl	36d34 <__assert_fail@plt+0x258a0>
   3a9b8:	str	r0, [sp, #8]
   3a9bc:	ldr	r0, [sp, #8]
   3a9c0:	cmp	r0, #0
   3a9c4:	ble	3aa4c <__assert_fail@plt+0x295b8>
   3a9c8:	ldr	r0, [sp, #16]
   3a9cc:	ldr	r1, [sp, #8]
   3a9d0:	add	r0, r0, r1
   3a9d4:	ldr	r1, [fp, #8]
   3a9d8:	cmp	r0, r1
   3a9dc:	bgt	3aa4c <__assert_fail@plt+0x295b8>
   3a9e0:	ldr	r0, [fp, #-8]
   3a9e4:	ldr	r0, [r0]
   3a9e8:	ldr	r1, [sp, #16]
   3a9ec:	ldr	r2, [sp, #8]
   3a9f0:	add	r1, r1, r2
   3a9f4:	add	r0, r0, r1, lsl #2
   3a9f8:	ldr	r0, [r0]
   3a9fc:	movw	r1, #0
   3aa00:	cmp	r0, r1
   3aa04:	beq	3aa44 <__assert_fail@plt+0x295b0>
   3aa08:	ldr	r0, [fp, #-8]
   3aa0c:	ldr	r0, [r0]
   3aa10:	ldr	r1, [sp, #16]
   3aa14:	ldr	r2, [sp, #8]
   3aa18:	add	r1, r1, r2
   3aa1c:	ldr	r0, [r0, r1, lsl #2]
   3aa20:	add	r0, r0, #4
   3aa24:	ldr	r1, [sp, #12]
   3aa28:	ldr	r1, [r1, #12]
   3aa2c:	ldr	r2, [fp, #-12]
   3aa30:	add	r1, r1, r2, lsl #2
   3aa34:	ldr	r1, [r1]
   3aa38:	bl	30cdc <__assert_fail@plt+0x1f848>
   3aa3c:	cmp	r0, #0
   3aa40:	bne	3aa4c <__assert_fail@plt+0x295b8>
   3aa44:	movw	r0, #0
   3aa48:	str	r0, [sp, #8]
   3aa4c:	ldr	r0, [sp, #8]
   3aa50:	mov	sp, fp
   3aa54:	pop	{fp, pc}
   3aa58:	sub	sp, sp, #4
   3aa5c:	str	r0, [sp]
   3aa60:	ldr	r0, [sp]
   3aa64:	movw	r1, #0
   3aa68:	str	r1, [r0]
   3aa6c:	ldr	r0, [sp]
   3aa70:	movw	r1, #16
   3aa74:	str	r1, [r0, #4]
   3aa78:	ldr	r0, [sp]
   3aa7c:	add	r0, r0, #12
   3aa80:	ldr	r1, [sp]
   3aa84:	str	r0, [r1, #8]
   3aa88:	add	sp, sp, #4
   3aa8c:	bx	lr
   3aa90:	push	{fp, lr}
   3aa94:	mov	fp, sp
   3aa98:	sub	sp, sp, #16
   3aa9c:	str	r0, [sp, #8]
   3aaa0:	str	r1, [sp, #4]
   3aaa4:	ldr	r0, [sp, #4]
   3aaa8:	ldr	r1, [sp, #8]
   3aaac:	ldr	r1, [r1]
   3aab0:	cmp	r0, r1
   3aab4:	bls	3ab04 <__assert_fail@plt+0x29670>
   3aab8:	ldr	r0, [sp, #8]
   3aabc:	ldr	r1, [sp, #4]
   3aac0:	ldr	r2, [sp, #8]
   3aac4:	add	r2, r2, #12
   3aac8:	movw	r3, #8
   3aacc:	bl	3fba4 <__assert_fail@plt+0x2e710>
   3aad0:	and	r0, r0, #1
   3aad4:	strb	r0, [sp, #3]
   3aad8:	ldrb	r0, [sp, #3]
   3aadc:	mvn	r1, #0
   3aae0:	eor	r0, r0, r1
   3aae4:	tst	r0, #1
   3aae8:	beq	3aaf4 <__assert_fail@plt+0x29660>
   3aaec:	ldr	r0, [sp, #8]
   3aaf0:	bl	3b4ec <__assert_fail@plt+0x2a058>
   3aaf4:	ldrb	r0, [sp, #3]
   3aaf8:	and	r0, r0, #1
   3aafc:	strb	r0, [fp, #-1]
   3ab00:	b	3ab40 <__assert_fail@plt+0x296ac>
   3ab04:	ldr	r0, [sp, #8]
   3ab08:	ldr	r0, [r0, #8]
   3ab0c:	ldr	r1, [sp, #4]
   3ab10:	add	r0, r0, r1, lsl #3
   3ab14:	ldr	r1, [sp, #8]
   3ab18:	ldr	r1, [r1]
   3ab1c:	ldr	r2, [sp, #4]
   3ab20:	sub	r1, r1, r2
   3ab24:	bl	3b548 <__assert_fail@plt+0x2a0b4>
   3ab28:	ldr	r0, [sp, #4]
   3ab2c:	ldr	r1, [sp, #8]
   3ab30:	str	r0, [r1]
   3ab34:	movw	r0, #1
   3ab38:	and	r0, r0, #1
   3ab3c:	strb	r0, [fp, #-1]
   3ab40:	ldrb	r0, [fp, #-1]
   3ab44:	and	r0, r0, #1
   3ab48:	mov	sp, fp
   3ab4c:	pop	{fp, pc}
   3ab50:	push	{fp, lr}
   3ab54:	mov	fp, sp
   3ab58:	sub	sp, sp, #8
   3ab5c:	str	r0, [sp, #4]
   3ab60:	ldr	r0, [sp, #4]
   3ab64:	ldr	r0, [r0, #8]
   3ab68:	ldr	r1, [sp, #4]
   3ab6c:	ldr	r1, [r1]
   3ab70:	bl	3b548 <__assert_fail@plt+0x2a0b4>
   3ab74:	ldr	r0, [sp, #4]
   3ab78:	bl	3b55c <__assert_fail@plt+0x2a0c8>
   3ab7c:	ldr	r0, [sp, #4]
   3ab80:	bl	3aa58 <__assert_fail@plt+0x295c4>
   3ab84:	mov	sp, fp
   3ab88:	pop	{fp, pc}
   3ab8c:	push	{fp, lr}
   3ab90:	mov	fp, sp
   3ab94:	sub	sp, sp, #8
   3ab98:	str	r0, [sp, #4]
   3ab9c:	ldr	r0, [sp, #4]
   3aba0:	movw	r1, #0
   3aba4:	cmp	r0, r1
   3aba8:	beq	3ac24 <__assert_fail@plt+0x29790>
   3abac:	movw	r0, #0
   3abb0:	str	r0, [sp]
   3abb4:	ldr	r0, [sp]
   3abb8:	ldr	r1, [sp, #4]
   3abbc:	ldr	r1, [r1]
   3abc0:	cmp	r0, r1
   3abc4:	bge	3ac18 <__assert_fail@plt+0x29784>
   3abc8:	ldr	r0, [sp, #4]
   3abcc:	ldr	r0, [r0, #8]
   3abd0:	ldr	r1, [sp]
   3abd4:	movw	r2, #24
   3abd8:	mul	r1, r1, r2
   3abdc:	add	r0, r0, r1
   3abe0:	ldr	r0, [r0, #20]
   3abe4:	bl	1388c <__assert_fail@plt+0x23f8>
   3abe8:	ldr	r0, [sp, #4]
   3abec:	ldr	r0, [r0, #8]
   3abf0:	ldr	r1, [sp]
   3abf4:	movw	r2, #24
   3abf8:	mul	r1, r1, r2
   3abfc:	add	r0, r0, r1
   3ac00:	ldr	r0, [r0, #8]
   3ac04:	bl	1388c <__assert_fail@plt+0x23f8>
   3ac08:	ldr	r0, [sp]
   3ac0c:	add	r0, r0, #1
   3ac10:	str	r0, [sp]
   3ac14:	b	3abb4 <__assert_fail@plt+0x29720>
   3ac18:	ldr	r0, [sp, #4]
   3ac1c:	ldr	r0, [r0, #8]
   3ac20:	bl	1388c <__assert_fail@plt+0x23f8>
   3ac24:	movw	r0, #0
   3ac28:	mov	sp, fp
   3ac2c:	pop	{fp, pc}
   3ac30:	sub	sp, sp, #4
   3ac34:	str	r0, [sp]
   3ac38:	ldr	r0, [sp]
   3ac3c:	ldr	r0, [r0, #8]
   3ac40:	add	sp, sp, #4
   3ac44:	bx	lr
   3ac48:	push	{fp, lr}
   3ac4c:	mov	fp, sp
   3ac50:	sub	sp, sp, #32
   3ac54:	ldr	ip, [fp, #12]
   3ac58:	ldr	lr, [fp, #8]
   3ac5c:	str	r0, [fp, #-4]
   3ac60:	str	r1, [fp, #-8]
   3ac64:	str	r2, [fp, #-12]
   3ac68:	str	r3, [sp, #16]
   3ac6c:	ldr	r0, [fp, #-4]
   3ac70:	ldr	r0, [r0]
   3ac74:	ldr	r1, [sp, #16]
   3ac78:	add	r0, r0, r1, lsl #3
   3ac7c:	ldr	r0, [r0, #4]
   3ac80:	and	r0, r0, #255	; 0xff
   3ac84:	str	r0, [sp, #12]
   3ac88:	ldr	r0, [sp, #12]
   3ac8c:	cmp	r0, #8
   3ac90:	bne	3ace8 <__assert_fail@plt+0x29854>
   3ac94:	ldr	r0, [fp, #-4]
   3ac98:	ldr	r0, [r0]
   3ac9c:	ldr	r1, [sp, #16]
   3aca0:	add	r0, r0, r1, lsl #3
   3aca4:	ldr	r0, [r0]
   3aca8:	add	r0, r0, #1
   3acac:	str	r0, [sp, #8]
   3acb0:	ldr	r0, [sp, #8]
   3acb4:	ldr	r1, [fp, #12]
   3acb8:	cmp	r0, r1
   3acbc:	bge	3ace4 <__assert_fail@plt+0x29850>
   3acc0:	ldr	r0, [fp, #8]
   3acc4:	ldr	r1, [fp, #-8]
   3acc8:	ldr	r2, [sp, #8]
   3accc:	str	r0, [r1, r2, lsl #3]
   3acd0:	ldr	r0, [fp, #-8]
   3acd4:	ldr	r1, [sp, #8]
   3acd8:	add	r0, r0, r1, lsl #3
   3acdc:	mvn	r1, #0
   3ace0:	str	r1, [r0, #4]
   3ace4:	b	3ade0 <__assert_fail@plt+0x2994c>
   3ace8:	ldr	r0, [sp, #12]
   3acec:	cmp	r0, #9
   3acf0:	bne	3addc <__assert_fail@plt+0x29948>
   3acf4:	ldr	r0, [fp, #-4]
   3acf8:	ldr	r0, [r0]
   3acfc:	ldr	r1, [sp, #16]
   3ad00:	add	r0, r0, r1, lsl #3
   3ad04:	ldr	r0, [r0]
   3ad08:	add	r0, r0, #1
   3ad0c:	str	r0, [sp, #4]
   3ad10:	ldr	r0, [sp, #4]
   3ad14:	ldr	r1, [fp, #12]
   3ad18:	cmp	r0, r1
   3ad1c:	bge	3add8 <__assert_fail@plt+0x29944>
   3ad20:	ldr	r0, [fp, #-8]
   3ad24:	ldr	r1, [sp, #4]
   3ad28:	add	r0, r0, r1, lsl #3
   3ad2c:	ldr	r0, [r0]
   3ad30:	ldr	r1, [fp, #8]
   3ad34:	cmp	r0, r1
   3ad38:	bge	3ad68 <__assert_fail@plt+0x298d4>
   3ad3c:	ldr	r0, [fp, #8]
   3ad40:	ldr	r1, [fp, #-8]
   3ad44:	ldr	r2, [sp, #4]
   3ad48:	add	r1, r1, r2, lsl #3
   3ad4c:	str	r0, [r1, #4]
   3ad50:	ldr	r0, [fp, #-12]
   3ad54:	ldr	r1, [fp, #-8]
   3ad58:	ldr	r2, [fp, #12]
   3ad5c:	lsl	r2, r2, #3
   3ad60:	bl	11248 <memcpy@plt>
   3ad64:	b	3add4 <__assert_fail@plt+0x29940>
   3ad68:	ldr	r0, [fp, #-4]
   3ad6c:	ldr	r0, [r0]
   3ad70:	ldr	r1, [sp, #16]
   3ad74:	add	r0, r0, r1, lsl #3
   3ad78:	ldr	r0, [r0, #4]
   3ad7c:	lsr	r0, r0, #19
   3ad80:	and	r0, r0, #1
   3ad84:	cmp	r0, #0
   3ad88:	beq	3adbc <__assert_fail@plt+0x29928>
   3ad8c:	ldr	r0, [fp, #-12]
   3ad90:	ldr	r1, [sp, #4]
   3ad94:	add	r0, r0, r1, lsl #3
   3ad98:	ldr	r0, [r0]
   3ad9c:	cmn	r0, #1
   3ada0:	beq	3adbc <__assert_fail@plt+0x29928>
   3ada4:	ldr	r0, [fp, #-8]
   3ada8:	ldr	r1, [fp, #-12]
   3adac:	ldr	r2, [fp, #12]
   3adb0:	lsl	r2, r2, #3
   3adb4:	bl	11248 <memcpy@plt>
   3adb8:	b	3add0 <__assert_fail@plt+0x2993c>
   3adbc:	ldr	r0, [fp, #8]
   3adc0:	ldr	r1, [fp, #-8]
   3adc4:	ldr	r2, [sp, #4]
   3adc8:	add	r1, r1, r2, lsl #3
   3adcc:	str	r0, [r1, #4]
   3add0:	b	3add4 <__assert_fail@plt+0x29940>
   3add4:	b	3add8 <__assert_fail@plt+0x29944>
   3add8:	b	3addc <__assert_fail@plt+0x29948>
   3addc:	b	3ade0 <__assert_fail@plt+0x2994c>
   3ade0:	mov	sp, fp
   3ade4:	pop	{fp, pc}
   3ade8:	push	{fp, lr}
   3adec:	mov	fp, sp
   3adf0:	sub	sp, sp, #32
   3adf4:	ldr	ip, [fp, #12]
   3adf8:	ldr	lr, [fp, #8]
   3adfc:	str	r0, [fp, #-8]
   3ae00:	str	r1, [fp, #-12]
   3ae04:	str	r2, [sp, #16]
   3ae08:	str	r3, [sp, #12]
   3ae0c:	ldr	r0, [fp, #-8]
   3ae10:	movw	r1, #0
   3ae14:	cmp	r0, r1
   3ae18:	beq	3ae2c <__assert_fail@plt+0x29998>
   3ae1c:	ldr	r0, [fp, #-8]
   3ae20:	ldr	r0, [r0]
   3ae24:	cmp	r0, #0
   3ae28:	bne	3ae38 <__assert_fail@plt+0x299a4>
   3ae2c:	mvn	r0, #0
   3ae30:	str	r0, [fp, #-4]
   3ae34:	b	3af74 <__assert_fail@plt+0x29ae0>
   3ae38:	ldr	r0, [fp, #-8]
   3ae3c:	ldr	r1, [r0]
   3ae40:	sub	r1, r1, #1
   3ae44:	str	r1, [r0]
   3ae48:	str	r1, [sp, #8]
   3ae4c:	ldr	r0, [fp, #-8]
   3ae50:	ldr	r0, [r0, #8]
   3ae54:	ldr	r1, [sp, #8]
   3ae58:	add	r1, r1, r1, lsl #1
   3ae5c:	ldr	r0, [r0, r1, lsl #3]
   3ae60:	ldr	r1, [fp, #-12]
   3ae64:	str	r0, [r1]
   3ae68:	ldr	r0, [sp, #12]
   3ae6c:	ldr	r1, [fp, #-8]
   3ae70:	ldr	r1, [r1, #8]
   3ae74:	ldr	r2, [sp, #8]
   3ae78:	add	r2, r2, r2, lsl #1
   3ae7c:	add	r1, r1, r2, lsl #3
   3ae80:	ldr	r1, [r1, #8]
   3ae84:	ldr	r2, [sp, #16]
   3ae88:	lsl	r2, r2, #3
   3ae8c:	bl	11248 <memcpy@plt>
   3ae90:	ldr	r1, [fp, #8]
   3ae94:	ldr	r2, [fp, #-8]
   3ae98:	ldr	r2, [r2, #8]
   3ae9c:	ldr	r3, [sp, #8]
   3aea0:	add	r3, r3, r3, lsl #1
   3aea4:	add	r2, r2, r3, lsl #3
   3aea8:	ldr	r2, [r2, #8]
   3aeac:	ldr	r3, [sp, #16]
   3aeb0:	add	r2, r2, r3, lsl #3
   3aeb4:	lsl	r3, r3, #3
   3aeb8:	str	r0, [sp, #4]
   3aebc:	mov	r0, r1
   3aec0:	mov	r1, r2
   3aec4:	mov	r2, r3
   3aec8:	bl	11248 <memcpy@plt>
   3aecc:	ldr	r0, [fp, #12]
   3aed0:	ldr	r0, [r0, #8]
   3aed4:	bl	1388c <__assert_fail@plt+0x23f8>
   3aed8:	ldr	r0, [fp, #-8]
   3aedc:	ldr	r0, [r0, #8]
   3aee0:	ldr	r1, [sp, #8]
   3aee4:	movw	r2, #24
   3aee8:	mul	r1, r1, r2
   3aeec:	add	r0, r0, r1
   3aef0:	ldr	r0, [r0, #8]
   3aef4:	bl	1388c <__assert_fail@plt+0x23f8>
   3aef8:	ldr	r0, [fp, #12]
   3aefc:	ldr	r1, [fp, #-8]
   3af00:	ldr	r1, [r1, #8]
   3af04:	ldr	r2, [sp, #8]
   3af08:	movw	r3, #24
   3af0c:	mul	r2, r2, r3
   3af10:	add	r1, r1, r2
   3af14:	ldr	r2, [r1, #12]
   3af18:	str	r2, [r0]
   3af1c:	ldr	r2, [r1, #16]
   3af20:	str	r2, [r0, #4]
   3af24:	ldr	r1, [r1, #20]
   3af28:	str	r1, [r0, #8]
   3af2c:	ldr	r0, [fp, #-8]
   3af30:	ldr	r0, [r0, #8]
   3af34:	ldr	r1, [sp, #8]
   3af38:	mul	r1, r1, r3
   3af3c:	add	r0, r0, r1
   3af40:	ldr	r0, [r0, #4]
   3af44:	movw	r1, #0
   3af48:	cmp	r1, r0
   3af4c:	bgt	3af54 <__assert_fail@plt+0x29ac0>
   3af50:	b	3af54 <__assert_fail@plt+0x29ac0>
   3af54:	ldr	r0, [fp, #-8]
   3af58:	ldr	r0, [r0, #8]
   3af5c:	ldr	r1, [sp, #8]
   3af60:	movw	r2, #24
   3af64:	mul	r1, r1, r2
   3af68:	add	r0, r0, r1
   3af6c:	ldr	r0, [r0, #4]
   3af70:	str	r0, [fp, #-4]
   3af74:	ldr	r0, [fp, #-4]
   3af78:	mov	sp, fp
   3af7c:	pop	{fp, pc}
   3af80:	push	{r4, r5, fp, lr}
   3af84:	add	fp, sp, #8
   3af88:	sub	sp, sp, #96	; 0x60
   3af8c:	ldr	ip, [fp, #20]
   3af90:	ldr	lr, [fp, #16]
   3af94:	ldr	r4, [fp, #12]
   3af98:	ldr	r5, [fp, #8]
   3af9c:	str	r0, [fp, #-16]
   3afa0:	str	r1, [fp, #-20]	; 0xffffffec
   3afa4:	str	r2, [fp, #-24]	; 0xffffffe8
   3afa8:	str	r3, [fp, #-28]	; 0xffffffe4
   3afac:	ldr	r0, [fp, #-16]
   3afb0:	ldr	r0, [r0, #84]	; 0x54
   3afb4:	str	r0, [fp, #-32]	; 0xffffffe0
   3afb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3afbc:	ldr	r0, [r0]
   3afc0:	ldr	r1, [fp, #12]
   3afc4:	add	r0, r0, r1, lsl #3
   3afc8:	ldr	r0, [r0, #4]
   3afcc:	and	r0, r0, #255	; 0xff
   3afd0:	and	r0, r0, #8
   3afd4:	cmp	r0, #0
   3afd8:	beq	3b16c <__assert_fail@plt+0x29cd8>
   3afdc:	ldr	r0, [fp, #-16]
   3afe0:	ldr	r0, [r0, #100]	; 0x64
   3afe4:	ldr	r1, [fp, #8]
   3afe8:	ldr	r1, [r1]
   3afec:	add	r0, r0, r1, lsl #2
   3aff0:	ldr	r0, [r0]
   3aff4:	add	r0, r0, #4
   3aff8:	str	r0, [fp, #-36]	; 0xffffffdc
   3affc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b000:	ldr	r0, [r0, #20]
   3b004:	ldr	r1, [fp, #12]
   3b008:	movw	r2, #12
   3b00c:	mul	r1, r1, r2
   3b010:	add	r0, r0, r1
   3b014:	str	r0, [fp, #-40]	; 0xffffffd8
   3b018:	ldr	r0, [fp, #16]
   3b01c:	ldr	r1, [fp, #12]
   3b020:	bl	30cdc <__assert_fail@plt+0x1f848>
   3b024:	cmp	r0, #0
   3b028:	bne	3b064 <__assert_fail@plt+0x29bd0>
   3b02c:	ldr	r0, [fp, #16]
   3b030:	ldr	r1, [fp, #12]
   3b034:	bl	30820 <__assert_fail@plt+0x1f38c>
   3b038:	and	r0, r0, #1
   3b03c:	strb	r0, [fp, #-41]	; 0xffffffd7
   3b040:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   3b044:	mvn	r1, #0
   3b048:	eor	r0, r0, r1
   3b04c:	tst	r0, #1
   3b050:	beq	3b060 <__assert_fail@plt+0x29bcc>
   3b054:	mvn	r0, #1
   3b058:	str	r0, [fp, #-12]
   3b05c:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b060:	b	3b064 <__assert_fail@plt+0x29bd0>
   3b064:	mvn	r0, #0
   3b068:	str	r0, [fp, #-48]	; 0xffffffd0
   3b06c:	movw	r0, #0
   3b070:	str	r0, [sp, #52]	; 0x34
   3b074:	ldr	r0, [sp, #52]	; 0x34
   3b078:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b07c:	ldr	r1, [r1, #4]
   3b080:	cmp	r0, r1
   3b084:	bge	3b160 <__assert_fail@plt+0x29ccc>
   3b088:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b08c:	ldr	r0, [r0, #8]
   3b090:	ldr	r1, [sp, #52]	; 0x34
   3b094:	add	r0, r0, r1, lsl #2
   3b098:	ldr	r0, [r0]
   3b09c:	str	r0, [sp, #48]	; 0x30
   3b0a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b0a4:	ldr	r1, [sp, #48]	; 0x30
   3b0a8:	bl	30cdc <__assert_fail@plt+0x1f848>
   3b0ac:	cmp	r0, #0
   3b0b0:	bne	3b0b8 <__assert_fail@plt+0x29c24>
   3b0b4:	b	3b150 <__assert_fail@plt+0x29cbc>
   3b0b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b0bc:	cmn	r0, #1
   3b0c0:	bne	3b0d0 <__assert_fail@plt+0x29c3c>
   3b0c4:	ldr	r0, [sp, #48]	; 0x30
   3b0c8:	str	r0, [fp, #-48]	; 0xffffffd0
   3b0cc:	b	3b14c <__assert_fail@plt+0x29cb8>
   3b0d0:	ldr	r0, [fp, #16]
   3b0d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3b0d8:	bl	30cdc <__assert_fail@plt+0x1f848>
   3b0dc:	cmp	r0, #0
   3b0e0:	beq	3b0f0 <__assert_fail@plt+0x29c5c>
   3b0e4:	ldr	r0, [sp, #48]	; 0x30
   3b0e8:	str	r0, [fp, #-12]
   3b0ec:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b0f0:	ldr	r0, [fp, #20]
   3b0f4:	movw	r1, #0
   3b0f8:	cmp	r0, r1
   3b0fc:	beq	3b144 <__assert_fail@plt+0x29cb0>
   3b100:	ldr	r0, [fp, #20]
   3b104:	ldr	r1, [fp, #8]
   3b108:	ldr	r1, [r1]
   3b10c:	ldr	r2, [sp, #48]	; 0x30
   3b110:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b114:	ldr	ip, [fp, #-24]	; 0xffffffe8
   3b118:	ldr	lr, [fp, #-28]	; 0xffffffe4
   3b11c:	ldr	r4, [fp, #16]
   3b120:	str	ip, [sp]
   3b124:	str	lr, [sp, #4]
   3b128:	str	r4, [sp, #8]
   3b12c:	bl	3b5a0 <__assert_fail@plt+0x2a10c>
   3b130:	cmp	r0, #0
   3b134:	beq	3b144 <__assert_fail@plt+0x29cb0>
   3b138:	mvn	r0, #1
   3b13c:	str	r0, [fp, #-12]
   3b140:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b144:	b	3b148 <__assert_fail@plt+0x29cb4>
   3b148:	b	3b160 <__assert_fail@plt+0x29ccc>
   3b14c:	b	3b150 <__assert_fail@plt+0x29cbc>
   3b150:	ldr	r0, [sp, #52]	; 0x34
   3b154:	add	r0, r0, #1
   3b158:	str	r0, [sp, #52]	; 0x34
   3b15c:	b	3b074 <__assert_fail@plt+0x29be0>
   3b160:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b164:	str	r0, [fp, #-12]
   3b168:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b16c:	mov	r0, #0
   3b170:	str	r0, [sp, #44]	; 0x2c
   3b174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b178:	ldr	r0, [r0]
   3b17c:	ldr	r1, [fp, #12]
   3b180:	add	r0, r0, r1, lsl #3
   3b184:	ldrb	r0, [r0, #4]
   3b188:	str	r0, [sp, #40]	; 0x28
   3b18c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b190:	ldr	r0, [r0]
   3b194:	ldr	r1, [fp, #12]
   3b198:	add	r0, r0, r1, lsl #3
   3b19c:	ldr	r0, [r0, #4]
   3b1a0:	lsr	r0, r0, #20
   3b1a4:	and	r0, r0, #1
   3b1a8:	cmp	r0, #0
   3b1ac:	beq	3b1d0 <__assert_fail@plt+0x29d3c>
   3b1b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b1b4:	ldr	r1, [fp, #12]
   3b1b8:	ldr	r2, [fp, #-16]
   3b1bc:	ldr	r3, [fp, #8]
   3b1c0:	ldr	r3, [r3]
   3b1c4:	bl	36d34 <__assert_fail@plt+0x258a0>
   3b1c8:	str	r0, [sp, #44]	; 0x2c
   3b1cc:	b	3b3ac <__assert_fail@plt+0x29f18>
   3b1d0:	ldr	r0, [sp, #40]	; 0x28
   3b1d4:	cmp	r0, #4
   3b1d8:	bne	3b3a8 <__assert_fail@plt+0x29f14>
   3b1dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b1e0:	ldr	r0, [r0]
   3b1e4:	ldr	r1, [fp, #12]
   3b1e8:	add	r0, r0, r1, lsl #3
   3b1ec:	ldr	r0, [r0]
   3b1f0:	add	r0, r0, #1
   3b1f4:	str	r0, [sp, #36]	; 0x24
   3b1f8:	ldr	r0, [sp, #36]	; 0x24
   3b1fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b200:	cmp	r0, r1
   3b204:	bge	3b224 <__assert_fail@plt+0x29d90>
   3b208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b20c:	ldr	r1, [sp, #36]	; 0x24
   3b210:	add	r0, r0, r1, lsl #3
   3b214:	ldr	r1, [r0, #4]
   3b218:	ldr	r0, [r0]
   3b21c:	sub	r0, r1, r0
   3b220:	str	r0, [sp, #44]	; 0x2c
   3b224:	ldr	r0, [fp, #20]
   3b228:	movw	r1, #0
   3b22c:	cmp	r0, r1
   3b230:	beq	3b308 <__assert_fail@plt+0x29e74>
   3b234:	ldr	r0, [sp, #36]	; 0x24
   3b238:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b23c:	cmp	r0, r1
   3b240:	bge	3b274 <__assert_fail@plt+0x29de0>
   3b244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b248:	ldr	r1, [sp, #36]	; 0x24
   3b24c:	add	r0, r0, r1, lsl #3
   3b250:	ldr	r0, [r0]
   3b254:	cmn	r0, #1
   3b258:	beq	3b274 <__assert_fail@plt+0x29de0>
   3b25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b260:	ldr	r1, [sp, #36]	; 0x24
   3b264:	add	r0, r0, r1, lsl #3
   3b268:	ldr	r0, [r0, #4]
   3b26c:	cmn	r0, #1
   3b270:	bne	3b280 <__assert_fail@plt+0x29dec>
   3b274:	mvn	r0, #0
   3b278:	str	r0, [fp, #-12]
   3b27c:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b280:	ldr	r0, [sp, #44]	; 0x2c
   3b284:	cmp	r0, #0
   3b288:	beq	3b300 <__assert_fail@plt+0x29e6c>
   3b28c:	ldr	r0, [fp, #-16]
   3b290:	ldr	r0, [r0, #4]
   3b294:	str	r0, [sp, #32]
   3b298:	ldr	r0, [fp, #-16]
   3b29c:	ldr	r0, [r0, #28]
   3b2a0:	ldr	r1, [fp, #8]
   3b2a4:	ldr	r1, [r1]
   3b2a8:	sub	r0, r0, r1
   3b2ac:	ldr	r1, [sp, #44]	; 0x2c
   3b2b0:	cmp	r0, r1
   3b2b4:	blt	3b2f0 <__assert_fail@plt+0x29e5c>
   3b2b8:	ldr	r0, [sp, #32]
   3b2bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3b2c0:	ldr	r2, [sp, #36]	; 0x24
   3b2c4:	add	r1, r1, r2, lsl #3
   3b2c8:	ldr	r1, [r1]
   3b2cc:	add	r0, r0, r1
   3b2d0:	ldr	r1, [sp, #32]
   3b2d4:	ldr	r2, [fp, #8]
   3b2d8:	ldr	r2, [r2]
   3b2dc:	add	r1, r1, r2
   3b2e0:	ldr	r2, [sp, #44]	; 0x2c
   3b2e4:	bl	11284 <memcmp@plt>
   3b2e8:	cmp	r0, #0
   3b2ec:	beq	3b2fc <__assert_fail@plt+0x29e68>
   3b2f0:	mvn	r0, #0
   3b2f4:	str	r0, [fp, #-12]
   3b2f8:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b2fc:	b	3b300 <__assert_fail@plt+0x29e6c>
   3b300:	b	3b304 <__assert_fail@plt+0x29e70>
   3b304:	b	3b308 <__assert_fail@plt+0x29e74>
   3b308:	ldr	r0, [sp, #44]	; 0x2c
   3b30c:	cmp	r0, #0
   3b310:	bne	3b3a4 <__assert_fail@plt+0x29f10>
   3b314:	ldr	r0, [fp, #16]
   3b318:	ldr	r1, [fp, #12]
   3b31c:	bl	30820 <__assert_fail@plt+0x1f38c>
   3b320:	and	r0, r0, #1
   3b324:	strb	r0, [sp, #27]
   3b328:	ldrb	r0, [sp, #27]
   3b32c:	mvn	r1, #0
   3b330:	eor	r0, r0, r1
   3b334:	tst	r0, #1
   3b338:	beq	3b348 <__assert_fail@plt+0x29eb4>
   3b33c:	mvn	r0, #1
   3b340:	str	r0, [fp, #-12]
   3b344:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b34c:	ldr	r0, [r0, #20]
   3b350:	ldr	r1, [fp, #12]
   3b354:	add	r1, r1, r1, lsl #1
   3b358:	add	r0, r0, r1, lsl #2
   3b35c:	ldr	r0, [r0, #8]
   3b360:	ldr	r0, [r0]
   3b364:	str	r0, [sp, #28]
   3b368:	ldr	r0, [fp, #-16]
   3b36c:	ldr	r0, [r0, #100]	; 0x64
   3b370:	ldr	r1, [fp, #8]
   3b374:	ldr	r1, [r1]
   3b378:	add	r0, r0, r1, lsl #2
   3b37c:	ldr	r0, [r0]
   3b380:	add	r0, r0, #4
   3b384:	ldr	r1, [sp, #28]
   3b388:	bl	30cdc <__assert_fail@plt+0x1f848>
   3b38c:	cmp	r0, #0
   3b390:	beq	3b3a0 <__assert_fail@plt+0x29f0c>
   3b394:	ldr	r0, [sp, #28]
   3b398:	str	r0, [fp, #-12]
   3b39c:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b3a0:	b	3b3a4 <__assert_fail@plt+0x29f10>
   3b3a4:	b	3b3a8 <__assert_fail@plt+0x29f14>
   3b3a8:	b	3b3ac <__assert_fail@plt+0x29f18>
   3b3ac:	ldr	r0, [sp, #44]	; 0x2c
   3b3b0:	cmp	r0, #0
   3b3b4:	bne	3b3e0 <__assert_fail@plt+0x29f4c>
   3b3b8:	ldr	r0, [fp, #-16]
   3b3bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3b3c0:	ldr	r1, [r1]
   3b3c4:	ldr	r2, [fp, #12]
   3b3c8:	add	r1, r1, r2, lsl #3
   3b3cc:	ldr	r2, [fp, #8]
   3b3d0:	ldr	r2, [r2]
   3b3d4:	bl	3731c <__assert_fail@plt+0x25e88>
   3b3d8:	tst	r0, #1
   3b3dc:	beq	3b4d4 <__assert_fail@plt+0x2a040>
   3b3e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b3e4:	ldr	r0, [r0, #12]
   3b3e8:	ldr	r1, [fp, #12]
   3b3ec:	add	r0, r0, r1, lsl #2
   3b3f0:	ldr	r0, [r0]
   3b3f4:	str	r0, [sp, #20]
   3b3f8:	ldr	r0, [sp, #44]	; 0x2c
   3b3fc:	cmp	r0, #0
   3b400:	bne	3b418 <__assert_fail@plt+0x29f84>
   3b404:	ldr	r0, [fp, #8]
   3b408:	ldr	r0, [r0]
   3b40c:	add	r0, r0, #1
   3b410:	str	r0, [sp, #16]
   3b414:	b	3b42c <__assert_fail@plt+0x29f98>
   3b418:	ldr	r0, [fp, #8]
   3b41c:	ldr	r0, [r0]
   3b420:	ldr	r1, [sp, #44]	; 0x2c
   3b424:	add	r0, r0, r1
   3b428:	str	r0, [sp, #16]
   3b42c:	ldr	r0, [sp, #16]
   3b430:	ldr	r1, [fp, #8]
   3b434:	str	r0, [r1]
   3b438:	ldr	r0, [fp, #20]
   3b43c:	movw	r1, #0
   3b440:	cmp	r0, r1
   3b444:	beq	3b4bc <__assert_fail@plt+0x2a028>
   3b448:	ldr	r0, [fp, #8]
   3b44c:	ldr	r0, [r0]
   3b450:	ldr	r1, [fp, #-16]
   3b454:	ldr	r1, [r1, #92]	; 0x5c
   3b458:	cmp	r0, r1
   3b45c:	bgt	3b4b0 <__assert_fail@plt+0x2a01c>
   3b460:	ldr	r0, [fp, #-16]
   3b464:	ldr	r0, [r0, #100]	; 0x64
   3b468:	ldr	r1, [fp, #8]
   3b46c:	ldr	r1, [r1]
   3b470:	add	r0, r0, r1, lsl #2
   3b474:	ldr	r0, [r0]
   3b478:	movw	r1, #0
   3b47c:	cmp	r0, r1
   3b480:	beq	3b4b0 <__assert_fail@plt+0x2a01c>
   3b484:	ldr	r0, [fp, #-16]
   3b488:	ldr	r0, [r0, #100]	; 0x64
   3b48c:	ldr	r1, [fp, #8]
   3b490:	ldr	r1, [r1]
   3b494:	add	r0, r0, r1, lsl #2
   3b498:	ldr	r0, [r0]
   3b49c:	add	r0, r0, #4
   3b4a0:	ldr	r1, [sp, #20]
   3b4a4:	bl	30cdc <__assert_fail@plt+0x1f848>
   3b4a8:	cmp	r0, #0
   3b4ac:	bne	3b4bc <__assert_fail@plt+0x2a028>
   3b4b0:	mvn	r0, #0
   3b4b4:	str	r0, [fp, #-12]
   3b4b8:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b4bc:	ldr	r0, [fp, #16]
   3b4c0:	movw	r1, #0
   3b4c4:	str	r1, [r0, #4]
   3b4c8:	ldr	r0, [sp, #20]
   3b4cc:	str	r0, [fp, #-12]
   3b4d0:	b	3b4e0 <__assert_fail@plt+0x2a04c>
   3b4d4:	b	3b4d8 <__assert_fail@plt+0x2a044>
   3b4d8:	mvn	r0, #0
   3b4dc:	str	r0, [fp, #-12]
   3b4e0:	ldr	r0, [fp, #-12]
   3b4e4:	sub	sp, fp, #8
   3b4e8:	pop	{r4, r5, fp, pc}
   3b4ec:	push	{fp, lr}
   3b4f0:	mov	fp, sp
   3b4f4:	sub	sp, sp, #8
   3b4f8:	str	r0, [sp, #4]
   3b4fc:	ldr	r0, [sp, #4]
   3b500:	ldr	r0, [r0, #8]
   3b504:	ldr	r1, [sp, #4]
   3b508:	ldr	r1, [r1]
   3b50c:	bl	3b548 <__assert_fail@plt+0x2a0b4>
   3b510:	ldr	r0, [sp, #4]
   3b514:	bl	3b55c <__assert_fail@plt+0x2a0c8>
   3b518:	ldr	r0, [sp, #4]
   3b51c:	add	r0, r0, #12
   3b520:	ldr	r1, [sp, #4]
   3b524:	str	r0, [r1, #8]
   3b528:	ldr	r0, [sp, #4]
   3b52c:	movw	r1, #0
   3b530:	str	r1, [r0]
   3b534:	bl	3b598 <__assert_fail@plt+0x2a104>
   3b538:	ldr	r1, [sp, #4]
   3b53c:	str	r0, [r1, #4]
   3b540:	mov	sp, fp
   3b544:	pop	{fp, pc}
   3b548:	sub	sp, sp, #8
   3b54c:	str	r0, [sp, #4]
   3b550:	str	r1, [sp]
   3b554:	add	sp, sp, #8
   3b558:	bx	lr
   3b55c:	push	{fp, lr}
   3b560:	mov	fp, sp
   3b564:	sub	sp, sp, #8
   3b568:	str	r0, [sp, #4]
   3b56c:	ldr	r0, [sp, #4]
   3b570:	ldr	r0, [r0, #8]
   3b574:	ldr	r1, [sp, #4]
   3b578:	add	r1, r1, #12
   3b57c:	cmp	r0, r1
   3b580:	beq	3b590 <__assert_fail@plt+0x2a0fc>
   3b584:	ldr	r0, [sp, #4]
   3b588:	ldr	r0, [r0, #8]
   3b58c:	bl	1388c <__assert_fail@plt+0x23f8>
   3b590:	mov	sp, fp
   3b594:	pop	{fp, pc}
   3b598:	mvn	r0, #0
   3b59c:	bx	lr
   3b5a0:	push	{r4, sl, fp, lr}
   3b5a4:	add	fp, sp, #8
   3b5a8:	sub	sp, sp, #40	; 0x28
   3b5ac:	ldr	ip, [fp, #16]
   3b5b0:	ldr	lr, [fp, #12]
   3b5b4:	ldr	r4, [fp, #8]
   3b5b8:	str	r0, [fp, #-16]
   3b5bc:	str	r1, [fp, #-20]	; 0xffffffec
   3b5c0:	str	r2, [sp, #24]
   3b5c4:	str	r3, [sp, #20]
   3b5c8:	ldr	r0, [fp, #-16]
   3b5cc:	ldr	r1, [r0]
   3b5d0:	add	r2, r1, #1
   3b5d4:	str	r2, [r0]
   3b5d8:	str	r1, [sp, #12]
   3b5dc:	ldr	r0, [fp, #-16]
   3b5e0:	ldr	r0, [r0]
   3b5e4:	ldr	r1, [fp, #-16]
   3b5e8:	ldr	r1, [r1, #4]
   3b5ec:	cmp	r0, r1
   3b5f0:	bne	3b64c <__assert_fail@plt+0x2a1b8>
   3b5f4:	ldr	r0, [fp, #-16]
   3b5f8:	ldr	r1, [r0, #4]
   3b5fc:	ldr	r0, [r0, #8]
   3b600:	lsl	r1, r1, #1
   3b604:	movw	r2, #24
   3b608:	mul	r1, r1, r2
   3b60c:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   3b610:	str	r0, [sp, #8]
   3b614:	ldr	r0, [sp, #8]
   3b618:	movw	r1, #0
   3b61c:	cmp	r0, r1
   3b620:	bne	3b630 <__assert_fail@plt+0x2a19c>
   3b624:	movw	r0, #12
   3b628:	str	r0, [fp, #-12]
   3b62c:	b	3b770 <__assert_fail@plt+0x2a2dc>
   3b630:	ldr	r0, [fp, #-16]
   3b634:	ldr	r1, [r0, #4]
   3b638:	lsl	r1, r1, #1
   3b63c:	str	r1, [r0, #4]
   3b640:	ldr	r0, [sp, #8]
   3b644:	ldr	r1, [fp, #-16]
   3b648:	str	r0, [r1, #8]
   3b64c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b650:	ldr	r1, [fp, #-16]
   3b654:	ldr	r1, [r1, #8]
   3b658:	ldr	r2, [sp, #12]
   3b65c:	add	r2, r2, r2, lsl #1
   3b660:	str	r0, [r1, r2, lsl #3]
   3b664:	ldr	r0, [sp, #24]
   3b668:	ldr	r1, [fp, #-16]
   3b66c:	ldr	r1, [r1, #8]
   3b670:	ldr	r2, [sp, #12]
   3b674:	add	r2, r2, r2, lsl #1
   3b678:	add	r1, r1, r2, lsl #3
   3b67c:	str	r0, [r1, #4]
   3b680:	ldr	r0, [sp, #20]
   3b684:	lsl	r1, r0, #1
   3b688:	lsl	r0, r0, #4
   3b68c:	str	r1, [sp, #4]
   3b690:	bl	3f908 <__assert_fail@plt+0x2e474>
   3b694:	ldr	r1, [fp, #-16]
   3b698:	ldr	r1, [r1, #8]
   3b69c:	ldr	r2, [sp, #12]
   3b6a0:	movw	r3, #24
   3b6a4:	mul	r2, r2, r3
   3b6a8:	add	r1, r1, r2
   3b6ac:	str	r0, [r1, #8]
   3b6b0:	ldr	r0, [fp, #-16]
   3b6b4:	ldr	r0, [r0, #8]
   3b6b8:	ldr	r1, [sp, #12]
   3b6bc:	mul	r1, r1, r3
   3b6c0:	add	r0, r0, r1
   3b6c4:	ldr	r0, [r0, #8]
   3b6c8:	movw	r1, #0
   3b6cc:	cmp	r0, r1
   3b6d0:	bne	3b6e0 <__assert_fail@plt+0x2a24c>
   3b6d4:	movw	r0, #12
   3b6d8:	str	r0, [fp, #-12]
   3b6dc:	b	3b770 <__assert_fail@plt+0x2a2dc>
   3b6e0:	ldr	r0, [fp, #-16]
   3b6e4:	ldr	r0, [r0, #8]
   3b6e8:	ldr	r1, [sp, #12]
   3b6ec:	add	r1, r1, r1, lsl #1
   3b6f0:	add	r0, r0, r1, lsl #3
   3b6f4:	ldr	r0, [r0, #8]
   3b6f8:	ldr	r1, [fp, #8]
   3b6fc:	ldr	r2, [sp, #20]
   3b700:	lsl	r2, r2, #3
   3b704:	bl	11248 <memcpy@plt>
   3b708:	ldr	r1, [fp, #-16]
   3b70c:	ldr	r1, [r1, #8]
   3b710:	ldr	r2, [sp, #12]
   3b714:	add	r2, r2, r2, lsl #1
   3b718:	add	r1, r1, r2, lsl #3
   3b71c:	ldr	r1, [r1, #8]
   3b720:	ldr	r2, [sp, #20]
   3b724:	add	r1, r1, r2, lsl #3
   3b728:	lsl	r2, r2, #3
   3b72c:	ldr	r3, [fp, #12]
   3b730:	str	r0, [sp]
   3b734:	mov	r0, r1
   3b738:	mov	r1, r3
   3b73c:	bl	11248 <memcpy@plt>
   3b740:	ldr	r0, [fp, #-16]
   3b744:	ldr	r0, [r0, #8]
   3b748:	ldr	r1, [sp, #12]
   3b74c:	movw	r2, #24
   3b750:	mul	r1, r1, r2
   3b754:	add	r0, r0, r1
   3b758:	add	r0, r0, #12
   3b75c:	ldr	r1, [fp, #16]
   3b760:	bl	30c08 <__assert_fail@plt+0x1f774>
   3b764:	str	r0, [sp, #16]
   3b768:	ldr	r0, [sp, #16]
   3b76c:	str	r0, [fp, #-12]
   3b770:	ldr	r0, [fp, #-12]
   3b774:	sub	sp, fp, #8
   3b778:	pop	{r4, sl, fp, pc}
   3b77c:	push	{fp, lr}
   3b780:	mov	fp, sp
   3b784:	sub	sp, sp, #16
   3b788:	str	r0, [sp, #8]
   3b78c:	str	r1, [sp, #4]
   3b790:	ldr	r0, [sp, #8]
   3b794:	ldr	r2, [sp, #4]
   3b798:	mov	r1, #0
   3b79c:	bl	113f8 <memchr@plt>
   3b7a0:	str	r0, [sp]
   3b7a4:	ldr	r0, [sp]
   3b7a8:	movw	r1, #0
   3b7ac:	cmp	r0, r1
   3b7b0:	beq	3b7cc <__assert_fail@plt+0x2a338>
   3b7b4:	ldr	r0, [sp]
   3b7b8:	ldr	r1, [sp, #8]
   3b7bc:	sub	r0, r0, r1
   3b7c0:	add	r0, r0, #1
   3b7c4:	str	r0, [fp, #-4]
   3b7c8:	b	3b7d4 <__assert_fail@plt+0x2a340>
   3b7cc:	ldr	r0, [sp, #4]
   3b7d0:	str	r0, [fp, #-4]
   3b7d4:	ldr	r0, [fp, #-4]
   3b7d8:	mov	sp, fp
   3b7dc:	pop	{fp, pc}
   3b7e0:	push	{fp, lr}
   3b7e4:	mov	fp, sp
   3b7e8:	sub	sp, sp, #16
   3b7ec:	str	r0, [fp, #-4]
   3b7f0:	str	r1, [sp, #8]
   3b7f4:	ldr	r0, [fp, #-4]
   3b7f8:	ldr	r1, [sp, #8]
   3b7fc:	movw	r2, #256	; 0x100
   3b800:	str	r2, [sp, #4]
   3b804:	ldr	r3, [sp, #4]
   3b808:	bl	3b814 <__assert_fail@plt+0x2a380>
   3b80c:	mov	sp, fp
   3b810:	pop	{fp, pc}
   3b814:	push	{fp, lr}
   3b818:	mov	fp, sp
   3b81c:	sub	sp, sp, #72	; 0x48
   3b820:	str	r0, [fp, #-8]
   3b824:	str	r1, [fp, #-12]
   3b828:	str	r2, [fp, #-16]
   3b82c:	str	r3, [fp, #-20]	; 0xffffffec
   3b830:	ldr	r0, [fp, #-8]
   3b834:	ldrb	r0, [r0]
   3b838:	strb	r0, [fp, #-21]	; 0xffffffeb
   3b83c:	ldr	r0, [fp, #-12]
   3b840:	ldrb	r0, [r0]
   3b844:	strb	r0, [fp, #-22]	; 0xffffffea
   3b848:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3b84c:	cmp	r0, #45	; 0x2d
   3b850:	bne	3bc0c <__assert_fail@plt+0x2a778>
   3b854:	b	3b858 <__assert_fail@plt+0x2a3c4>
   3b858:	ldr	r0, [fp, #-8]
   3b85c:	add	r1, r0, #1
   3b860:	str	r1, [fp, #-8]
   3b864:	ldrb	r0, [r0, #1]
   3b868:	strb	r0, [fp, #-21]	; 0xffffffeb
   3b86c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3b870:	cmp	r0, #48	; 0x30
   3b874:	movw	r0, #1
   3b878:	str	r0, [sp, #32]
   3b87c:	beq	3b898 <__assert_fail@plt+0x2a404>
   3b880:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3b884:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b888:	cmp	r0, r1
   3b88c:	movw	r0, #0
   3b890:	moveq	r0, #1
   3b894:	str	r0, [sp, #32]
   3b898:	ldr	r0, [sp, #32]
   3b89c:	tst	r0, #1
   3b8a0:	bne	3b858 <__assert_fail@plt+0x2a3c4>
   3b8a4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b8a8:	cmp	r0, #45	; 0x2d
   3b8ac:	beq	3b9b8 <__assert_fail@plt+0x2a524>
   3b8b0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3b8b4:	ldr	r1, [fp, #-16]
   3b8b8:	cmp	r0, r1
   3b8bc:	bne	3b8e8 <__assert_fail@plt+0x2a454>
   3b8c0:	b	3b8c4 <__assert_fail@plt+0x2a430>
   3b8c4:	ldr	r0, [fp, #-8]
   3b8c8:	add	r1, r0, #1
   3b8cc:	str	r1, [fp, #-8]
   3b8d0:	ldrb	r0, [r0, #1]
   3b8d4:	strb	r0, [fp, #-21]	; 0xffffffeb
   3b8d8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3b8dc:	cmp	r0, #48	; 0x30
   3b8e0:	beq	3b8c4 <__assert_fail@plt+0x2a430>
   3b8e4:	b	3b8e8 <__assert_fail@plt+0x2a454>
   3b8e8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3b8ec:	sub	r0, r0, #48	; 0x30
   3b8f0:	cmp	r0, #9
   3b8f4:	bhi	3b904 <__assert_fail@plt+0x2a470>
   3b8f8:	mvn	r0, #0
   3b8fc:	str	r0, [fp, #-4]
   3b900:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3b904:	b	3b908 <__assert_fail@plt+0x2a474>
   3b908:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b90c:	cmp	r0, #48	; 0x30
   3b910:	movw	r0, #1
   3b914:	str	r0, [sp, #28]
   3b918:	beq	3b934 <__assert_fail@plt+0x2a4a0>
   3b91c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b920:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b924:	cmp	r0, r1
   3b928:	movw	r0, #0
   3b92c:	moveq	r0, #1
   3b930:	str	r0, [sp, #28]
   3b934:	ldr	r0, [sp, #28]
   3b938:	tst	r0, #1
   3b93c:	beq	3b958 <__assert_fail@plt+0x2a4c4>
   3b940:	ldr	r0, [fp, #-12]
   3b944:	add	r1, r0, #1
   3b948:	str	r1, [fp, #-12]
   3b94c:	ldrb	r0, [r0, #1]
   3b950:	strb	r0, [fp, #-22]	; 0xffffffea
   3b954:	b	3b908 <__assert_fail@plt+0x2a474>
   3b958:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b95c:	ldr	r1, [fp, #-16]
   3b960:	cmp	r0, r1
   3b964:	bne	3b990 <__assert_fail@plt+0x2a4fc>
   3b968:	b	3b96c <__assert_fail@plt+0x2a4d8>
   3b96c:	ldr	r0, [fp, #-12]
   3b970:	add	r1, r0, #1
   3b974:	str	r1, [fp, #-12]
   3b978:	ldrb	r0, [r0, #1]
   3b97c:	strb	r0, [fp, #-22]	; 0xffffffea
   3b980:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b984:	cmp	r0, #48	; 0x30
   3b988:	beq	3b96c <__assert_fail@plt+0x2a4d8>
   3b98c:	b	3b990 <__assert_fail@plt+0x2a4fc>
   3b990:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b994:	sub	r0, r0, #48	; 0x30
   3b998:	cmp	r0, #9
   3b99c:	movw	r0, #0
   3b9a0:	movls	r0, #1
   3b9a4:	and	r0, r0, #1
   3b9a8:	movw	r1, #0
   3b9ac:	sub	r0, r1, r0
   3b9b0:	str	r0, [fp, #-4]
   3b9b4:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3b9b8:	b	3b9bc <__assert_fail@plt+0x2a528>
   3b9bc:	ldr	r0, [fp, #-12]
   3b9c0:	add	r1, r0, #1
   3b9c4:	str	r1, [fp, #-12]
   3b9c8:	ldrb	r0, [r0, #1]
   3b9cc:	strb	r0, [fp, #-22]	; 0xffffffea
   3b9d0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b9d4:	cmp	r0, #48	; 0x30
   3b9d8:	movw	r0, #1
   3b9dc:	str	r0, [sp, #24]
   3b9e0:	beq	3b9fc <__assert_fail@plt+0x2a568>
   3b9e4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3b9e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b9ec:	cmp	r0, r1
   3b9f0:	movw	r0, #0
   3b9f4:	moveq	r0, #1
   3b9f8:	str	r0, [sp, #24]
   3b9fc:	ldr	r0, [sp, #24]
   3ba00:	tst	r0, #1
   3ba04:	bne	3b9bc <__assert_fail@plt+0x2a528>
   3ba08:	b	3ba0c <__assert_fail@plt+0x2a578>
   3ba0c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba10:	ldrb	r1, [fp, #-22]	; 0xffffffea
   3ba14:	cmp	r0, r1
   3ba18:	movw	r0, #0
   3ba1c:	str	r0, [sp, #20]
   3ba20:	bne	3ba3c <__assert_fail@plt+0x2a5a8>
   3ba24:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba28:	sub	r0, r0, #48	; 0x30
   3ba2c:	cmp	r0, #9
   3ba30:	movw	r0, #0
   3ba34:	movls	r0, #1
   3ba38:	str	r0, [sp, #20]
   3ba3c:	ldr	r0, [sp, #20]
   3ba40:	tst	r0, #1
   3ba44:	beq	3ba9c <__assert_fail@plt+0x2a608>
   3ba48:	b	3ba4c <__assert_fail@plt+0x2a5b8>
   3ba4c:	ldr	r0, [fp, #-8]
   3ba50:	add	r1, r0, #1
   3ba54:	str	r1, [fp, #-8]
   3ba58:	ldrb	r0, [r0, #1]
   3ba5c:	strb	r0, [fp, #-21]	; 0xffffffeb
   3ba60:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3ba64:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ba68:	cmp	r0, r1
   3ba6c:	beq	3ba4c <__assert_fail@plt+0x2a5b8>
   3ba70:	b	3ba74 <__assert_fail@plt+0x2a5e0>
   3ba74:	ldr	r0, [fp, #-12]
   3ba78:	add	r1, r0, #1
   3ba7c:	str	r1, [fp, #-12]
   3ba80:	ldrb	r0, [r0, #1]
   3ba84:	strb	r0, [fp, #-22]	; 0xffffffea
   3ba88:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3ba8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ba90:	cmp	r0, r1
   3ba94:	beq	3ba74 <__assert_fail@plt+0x2a5e0>
   3ba98:	b	3ba0c <__assert_fail@plt+0x2a578>
   3ba9c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3baa0:	ldr	r1, [fp, #-16]
   3baa4:	cmp	r0, r1
   3baa8:	bne	3babc <__assert_fail@plt+0x2a628>
   3baac:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bab0:	sub	r0, r0, #48	; 0x30
   3bab4:	cmp	r0, #9
   3bab8:	bhi	3badc <__assert_fail@plt+0x2a648>
   3babc:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bac0:	ldr	r1, [fp, #-16]
   3bac4:	cmp	r0, r1
   3bac8:	bne	3baf8 <__assert_fail@plt+0x2a664>
   3bacc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bad0:	sub	r0, r0, #48	; 0x30
   3bad4:	cmp	r0, #9
   3bad8:	bls	3baf8 <__assert_fail@plt+0x2a664>
   3badc:	ldr	r0, [fp, #-12]
   3bae0:	ldr	r1, [fp, #-8]
   3bae4:	ldr	r2, [fp, #-16]
   3bae8:	and	r2, r2, #255	; 0xff
   3baec:	bl	3c01c <__assert_fail@plt+0x2ab88>
   3baf0:	str	r0, [fp, #-4]
   3baf4:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3baf8:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bafc:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   3bb00:	sub	r0, r0, r1
   3bb04:	str	r0, [fp, #-28]	; 0xffffffe4
   3bb08:	movw	r0, #0
   3bb0c:	str	r0, [fp, #-32]	; 0xffffffe0
   3bb10:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bb14:	sub	r0, r0, #48	; 0x30
   3bb18:	cmp	r0, #9
   3bb1c:	bhi	3bb5c <__assert_fail@plt+0x2a6c8>
   3bb20:	b	3bb24 <__assert_fail@plt+0x2a690>
   3bb24:	ldr	r0, [fp, #-8]
   3bb28:	add	r1, r0, #1
   3bb2c:	str	r1, [fp, #-8]
   3bb30:	ldrb	r0, [r0, #1]
   3bb34:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bb38:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bb3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb40:	cmp	r0, r1
   3bb44:	beq	3bb24 <__assert_fail@plt+0x2a690>
   3bb48:	b	3bb4c <__assert_fail@plt+0x2a6b8>
   3bb4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bb50:	add	r0, r0, #1
   3bb54:	str	r0, [fp, #-32]	; 0xffffffe0
   3bb58:	b	3bb10 <__assert_fail@plt+0x2a67c>
   3bb5c:	movw	r0, #0
   3bb60:	str	r0, [sp, #36]	; 0x24
   3bb64:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bb68:	sub	r0, r0, #48	; 0x30
   3bb6c:	cmp	r0, #9
   3bb70:	bhi	3bbb0 <__assert_fail@plt+0x2a71c>
   3bb74:	b	3bb78 <__assert_fail@plt+0x2a6e4>
   3bb78:	ldr	r0, [fp, #-12]
   3bb7c:	add	r1, r0, #1
   3bb80:	str	r1, [fp, #-12]
   3bb84:	ldrb	r0, [r0, #1]
   3bb88:	strb	r0, [fp, #-22]	; 0xffffffea
   3bb8c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bb90:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb94:	cmp	r0, r1
   3bb98:	beq	3bb78 <__assert_fail@plt+0x2a6e4>
   3bb9c:	b	3bba0 <__assert_fail@plt+0x2a70c>
   3bba0:	ldr	r0, [sp, #36]	; 0x24
   3bba4:	add	r0, r0, #1
   3bba8:	str	r0, [sp, #36]	; 0x24
   3bbac:	b	3bb64 <__assert_fail@plt+0x2a6d0>
   3bbb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bbb4:	ldr	r1, [sp, #36]	; 0x24
   3bbb8:	cmp	r0, r1
   3bbbc:	beq	3bbe8 <__assert_fail@plt+0x2a754>
   3bbc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bbc4:	ldr	r1, [sp, #36]	; 0x24
   3bbc8:	cmp	r0, r1
   3bbcc:	movw	r0, #0
   3bbd0:	movcc	r0, #1
   3bbd4:	tst	r0, #1
   3bbd8:	movw	r0, #1
   3bbdc:	mvneq	r0, #0
   3bbe0:	str	r0, [fp, #-4]
   3bbe4:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bbe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bbec:	cmp	r0, #0
   3bbf0:	bne	3bc00 <__assert_fail@plt+0x2a76c>
   3bbf4:	movw	r0, #0
   3bbf8:	str	r0, [fp, #-4]
   3bbfc:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bc00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc04:	str	r0, [fp, #-4]
   3bc08:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bc0c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc10:	cmp	r0, #45	; 0x2d
   3bc14:	bne	3bd68 <__assert_fail@plt+0x2a8d4>
   3bc18:	b	3bc1c <__assert_fail@plt+0x2a788>
   3bc1c:	ldr	r0, [fp, #-12]
   3bc20:	add	r1, r0, #1
   3bc24:	str	r1, [fp, #-12]
   3bc28:	ldrb	r0, [r0, #1]
   3bc2c:	strb	r0, [fp, #-22]	; 0xffffffea
   3bc30:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc34:	cmp	r0, #48	; 0x30
   3bc38:	movw	r0, #1
   3bc3c:	str	r0, [sp, #16]
   3bc40:	beq	3bc5c <__assert_fail@plt+0x2a7c8>
   3bc44:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc48:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc4c:	cmp	r0, r1
   3bc50:	movw	r0, #0
   3bc54:	moveq	r0, #1
   3bc58:	str	r0, [sp, #16]
   3bc5c:	ldr	r0, [sp, #16]
   3bc60:	tst	r0, #1
   3bc64:	bne	3bc1c <__assert_fail@plt+0x2a788>
   3bc68:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc6c:	ldr	r1, [fp, #-16]
   3bc70:	cmp	r0, r1
   3bc74:	bne	3bca0 <__assert_fail@plt+0x2a80c>
   3bc78:	b	3bc7c <__assert_fail@plt+0x2a7e8>
   3bc7c:	ldr	r0, [fp, #-12]
   3bc80:	add	r1, r0, #1
   3bc84:	str	r1, [fp, #-12]
   3bc88:	ldrb	r0, [r0, #1]
   3bc8c:	strb	r0, [fp, #-22]	; 0xffffffea
   3bc90:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bc94:	cmp	r0, #48	; 0x30
   3bc98:	beq	3bc7c <__assert_fail@plt+0x2a7e8>
   3bc9c:	b	3bca0 <__assert_fail@plt+0x2a80c>
   3bca0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bca4:	sub	r0, r0, #48	; 0x30
   3bca8:	cmp	r0, #9
   3bcac:	bhi	3bcbc <__assert_fail@plt+0x2a828>
   3bcb0:	movw	r0, #1
   3bcb4:	str	r0, [fp, #-4]
   3bcb8:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bcbc:	b	3bcc0 <__assert_fail@plt+0x2a82c>
   3bcc0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bcc4:	cmp	r0, #48	; 0x30
   3bcc8:	movw	r0, #1
   3bccc:	str	r0, [sp, #12]
   3bcd0:	beq	3bcec <__assert_fail@plt+0x2a858>
   3bcd4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bcd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bcdc:	cmp	r0, r1
   3bce0:	movw	r0, #0
   3bce4:	moveq	r0, #1
   3bce8:	str	r0, [sp, #12]
   3bcec:	ldr	r0, [sp, #12]
   3bcf0:	tst	r0, #1
   3bcf4:	beq	3bd10 <__assert_fail@plt+0x2a87c>
   3bcf8:	ldr	r0, [fp, #-8]
   3bcfc:	add	r1, r0, #1
   3bd00:	str	r1, [fp, #-8]
   3bd04:	ldrb	r0, [r0, #1]
   3bd08:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bd0c:	b	3bcc0 <__assert_fail@plt+0x2a82c>
   3bd10:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bd14:	ldr	r1, [fp, #-16]
   3bd18:	cmp	r0, r1
   3bd1c:	bne	3bd48 <__assert_fail@plt+0x2a8b4>
   3bd20:	b	3bd24 <__assert_fail@plt+0x2a890>
   3bd24:	ldr	r0, [fp, #-8]
   3bd28:	add	r1, r0, #1
   3bd2c:	str	r1, [fp, #-8]
   3bd30:	ldrb	r0, [r0, #1]
   3bd34:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bd38:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bd3c:	cmp	r0, #48	; 0x30
   3bd40:	beq	3bd24 <__assert_fail@plt+0x2a890>
   3bd44:	b	3bd48 <__assert_fail@plt+0x2a8b4>
   3bd48:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bd4c:	sub	r0, r0, #48	; 0x30
   3bd50:	cmp	r0, #9
   3bd54:	movw	r0, #0
   3bd58:	movls	r0, #1
   3bd5c:	and	r0, r0, #1
   3bd60:	str	r0, [fp, #-4]
   3bd64:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bd68:	b	3bd6c <__assert_fail@plt+0x2a8d8>
   3bd6c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bd70:	cmp	r0, #48	; 0x30
   3bd74:	movw	r0, #1
   3bd78:	str	r0, [sp, #8]
   3bd7c:	beq	3bd98 <__assert_fail@plt+0x2a904>
   3bd80:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bd84:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bd88:	cmp	r0, r1
   3bd8c:	movw	r0, #0
   3bd90:	moveq	r0, #1
   3bd94:	str	r0, [sp, #8]
   3bd98:	ldr	r0, [sp, #8]
   3bd9c:	tst	r0, #1
   3bda0:	beq	3bdbc <__assert_fail@plt+0x2a928>
   3bda4:	ldr	r0, [fp, #-8]
   3bda8:	add	r1, r0, #1
   3bdac:	str	r1, [fp, #-8]
   3bdb0:	ldrb	r0, [r0, #1]
   3bdb4:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bdb8:	b	3bd6c <__assert_fail@plt+0x2a8d8>
   3bdbc:	b	3bdc0 <__assert_fail@plt+0x2a92c>
   3bdc0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bdc4:	cmp	r0, #48	; 0x30
   3bdc8:	movw	r0, #1
   3bdcc:	str	r0, [sp, #4]
   3bdd0:	beq	3bdec <__assert_fail@plt+0x2a958>
   3bdd4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bdd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bddc:	cmp	r0, r1
   3bde0:	movw	r0, #0
   3bde4:	moveq	r0, #1
   3bde8:	str	r0, [sp, #4]
   3bdec:	ldr	r0, [sp, #4]
   3bdf0:	tst	r0, #1
   3bdf4:	beq	3be10 <__assert_fail@plt+0x2a97c>
   3bdf8:	ldr	r0, [fp, #-12]
   3bdfc:	add	r1, r0, #1
   3be00:	str	r1, [fp, #-12]
   3be04:	ldrb	r0, [r0, #1]
   3be08:	strb	r0, [fp, #-22]	; 0xffffffea
   3be0c:	b	3bdc0 <__assert_fail@plt+0x2a92c>
   3be10:	b	3be14 <__assert_fail@plt+0x2a980>
   3be14:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3be18:	ldrb	r1, [fp, #-22]	; 0xffffffea
   3be1c:	cmp	r0, r1
   3be20:	movw	r0, #0
   3be24:	str	r0, [sp]
   3be28:	bne	3be44 <__assert_fail@plt+0x2a9b0>
   3be2c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3be30:	sub	r0, r0, #48	; 0x30
   3be34:	cmp	r0, #9
   3be38:	movw	r0, #0
   3be3c:	movls	r0, #1
   3be40:	str	r0, [sp]
   3be44:	ldr	r0, [sp]
   3be48:	tst	r0, #1
   3be4c:	beq	3bea4 <__assert_fail@plt+0x2aa10>
   3be50:	b	3be54 <__assert_fail@plt+0x2a9c0>
   3be54:	ldr	r0, [fp, #-8]
   3be58:	add	r1, r0, #1
   3be5c:	str	r1, [fp, #-8]
   3be60:	ldrb	r0, [r0, #1]
   3be64:	strb	r0, [fp, #-21]	; 0xffffffeb
   3be68:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3be6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3be70:	cmp	r0, r1
   3be74:	beq	3be54 <__assert_fail@plt+0x2a9c0>
   3be78:	b	3be7c <__assert_fail@plt+0x2a9e8>
   3be7c:	ldr	r0, [fp, #-12]
   3be80:	add	r1, r0, #1
   3be84:	str	r1, [fp, #-12]
   3be88:	ldrb	r0, [r0, #1]
   3be8c:	strb	r0, [fp, #-22]	; 0xffffffea
   3be90:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3be94:	ldr	r1, [fp, #-20]	; 0xffffffec
   3be98:	cmp	r0, r1
   3be9c:	beq	3be7c <__assert_fail@plt+0x2a9e8>
   3bea0:	b	3be14 <__assert_fail@plt+0x2a980>
   3bea4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bea8:	ldr	r1, [fp, #-16]
   3beac:	cmp	r0, r1
   3beb0:	bne	3bec4 <__assert_fail@plt+0x2aa30>
   3beb4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3beb8:	sub	r0, r0, #48	; 0x30
   3bebc:	cmp	r0, #9
   3bec0:	bhi	3bee4 <__assert_fail@plt+0x2aa50>
   3bec4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bec8:	ldr	r1, [fp, #-16]
   3becc:	cmp	r0, r1
   3bed0:	bne	3bf00 <__assert_fail@plt+0x2aa6c>
   3bed4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bed8:	sub	r0, r0, #48	; 0x30
   3bedc:	cmp	r0, #9
   3bee0:	bls	3bf00 <__assert_fail@plt+0x2aa6c>
   3bee4:	ldr	r0, [fp, #-8]
   3bee8:	ldr	r1, [fp, #-12]
   3beec:	ldr	r2, [fp, #-16]
   3bef0:	and	r2, r2, #255	; 0xff
   3bef4:	bl	3c01c <__assert_fail@plt+0x2ab88>
   3bef8:	str	r0, [fp, #-4]
   3befc:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bf00:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf04:	ldrb	r1, [fp, #-22]	; 0xffffffea
   3bf08:	sub	r0, r0, r1
   3bf0c:	str	r0, [fp, #-28]	; 0xffffffe4
   3bf10:	movw	r0, #0
   3bf14:	str	r0, [fp, #-32]	; 0xffffffe0
   3bf18:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf1c:	sub	r0, r0, #48	; 0x30
   3bf20:	cmp	r0, #9
   3bf24:	bhi	3bf64 <__assert_fail@plt+0x2aad0>
   3bf28:	b	3bf2c <__assert_fail@plt+0x2aa98>
   3bf2c:	ldr	r0, [fp, #-8]
   3bf30:	add	r1, r0, #1
   3bf34:	str	r1, [fp, #-8]
   3bf38:	ldrb	r0, [r0, #1]
   3bf3c:	strb	r0, [fp, #-21]	; 0xffffffeb
   3bf40:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   3bf44:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bf48:	cmp	r0, r1
   3bf4c:	beq	3bf2c <__assert_fail@plt+0x2aa98>
   3bf50:	b	3bf54 <__assert_fail@plt+0x2aac0>
   3bf54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bf58:	add	r0, r0, #1
   3bf5c:	str	r0, [fp, #-32]	; 0xffffffe0
   3bf60:	b	3bf18 <__assert_fail@plt+0x2aa84>
   3bf64:	movw	r0, #0
   3bf68:	str	r0, [sp, #36]	; 0x24
   3bf6c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bf70:	sub	r0, r0, #48	; 0x30
   3bf74:	cmp	r0, #9
   3bf78:	bhi	3bfb8 <__assert_fail@plt+0x2ab24>
   3bf7c:	b	3bf80 <__assert_fail@plt+0x2aaec>
   3bf80:	ldr	r0, [fp, #-12]
   3bf84:	add	r1, r0, #1
   3bf88:	str	r1, [fp, #-12]
   3bf8c:	ldrb	r0, [r0, #1]
   3bf90:	strb	r0, [fp, #-22]	; 0xffffffea
   3bf94:	ldrb	r0, [fp, #-22]	; 0xffffffea
   3bf98:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bf9c:	cmp	r0, r1
   3bfa0:	beq	3bf80 <__assert_fail@plt+0x2aaec>
   3bfa4:	b	3bfa8 <__assert_fail@plt+0x2ab14>
   3bfa8:	ldr	r0, [sp, #36]	; 0x24
   3bfac:	add	r0, r0, #1
   3bfb0:	str	r0, [sp, #36]	; 0x24
   3bfb4:	b	3bf6c <__assert_fail@plt+0x2aad8>
   3bfb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bfbc:	ldr	r1, [sp, #36]	; 0x24
   3bfc0:	cmp	r0, r1
   3bfc4:	beq	3bff0 <__assert_fail@plt+0x2ab5c>
   3bfc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bfcc:	ldr	r1, [sp, #36]	; 0x24
   3bfd0:	cmp	r0, r1
   3bfd4:	movw	r0, #0
   3bfd8:	movcc	r0, #1
   3bfdc:	tst	r0, #1
   3bfe0:	mvn	r0, #0
   3bfe4:	moveq	r0, #1
   3bfe8:	str	r0, [fp, #-4]
   3bfec:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3bff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3bff4:	cmp	r0, #0
   3bff8:	bne	3c008 <__assert_fail@plt+0x2ab74>
   3bffc:	movw	r0, #0
   3c000:	str	r0, [fp, #-4]
   3c004:	b	3c010 <__assert_fail@plt+0x2ab7c>
   3c008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c00c:	str	r0, [fp, #-4]
   3c010:	ldr	r0, [fp, #-4]
   3c014:	mov	sp, fp
   3c018:	pop	{fp, pc}
   3c01c:	sub	sp, sp, #16
   3c020:	str	r0, [sp, #8]
   3c024:	str	r1, [sp, #4]
   3c028:	strb	r2, [sp, #3]
   3c02c:	ldr	r0, [sp, #8]
   3c030:	ldrb	r0, [r0]
   3c034:	ldrb	r1, [sp, #3]
   3c038:	cmp	r0, r1
   3c03c:	bne	3c124 <__assert_fail@plt+0x2ac90>
   3c040:	ldr	r0, [sp, #4]
   3c044:	ldrb	r0, [r0]
   3c048:	ldrb	r1, [sp, #3]
   3c04c:	cmp	r0, r1
   3c050:	bne	3c124 <__assert_fail@plt+0x2ac90>
   3c054:	b	3c058 <__assert_fail@plt+0x2abc4>
   3c058:	ldr	r0, [sp, #8]
   3c05c:	add	r1, r0, #1
   3c060:	str	r1, [sp, #8]
   3c064:	ldrb	r0, [r0, #1]
   3c068:	ldr	r1, [sp, #4]
   3c06c:	add	r2, r1, #1
   3c070:	str	r2, [sp, #4]
   3c074:	ldrb	r1, [r1, #1]
   3c078:	cmp	r0, r1
   3c07c:	bne	3c0a4 <__assert_fail@plt+0x2ac10>
   3c080:	ldr	r0, [sp, #8]
   3c084:	ldrb	r0, [r0]
   3c088:	sub	r0, r0, #48	; 0x30
   3c08c:	cmp	r0, #9
   3c090:	bls	3c0a0 <__assert_fail@plt+0x2ac0c>
   3c094:	movw	r0, #0
   3c098:	str	r0, [sp, #12]
   3c09c:	b	3c20c <__assert_fail@plt+0x2ad78>
   3c0a0:	b	3c058 <__assert_fail@plt+0x2abc4>
   3c0a4:	ldr	r0, [sp, #8]
   3c0a8:	ldrb	r0, [r0]
   3c0ac:	sub	r0, r0, #48	; 0x30
   3c0b0:	cmp	r0, #9
   3c0b4:	bhi	3c0e8 <__assert_fail@plt+0x2ac54>
   3c0b8:	ldr	r0, [sp, #4]
   3c0bc:	ldrb	r0, [r0]
   3c0c0:	sub	r0, r0, #48	; 0x30
   3c0c4:	cmp	r0, #9
   3c0c8:	bhi	3c0e8 <__assert_fail@plt+0x2ac54>
   3c0cc:	ldr	r0, [sp, #8]
   3c0d0:	ldrb	r0, [r0]
   3c0d4:	ldr	r1, [sp, #4]
   3c0d8:	ldrb	r1, [r1]
   3c0dc:	sub	r0, r0, r1
   3c0e0:	str	r0, [sp, #12]
   3c0e4:	b	3c20c <__assert_fail@plt+0x2ad78>
   3c0e8:	ldr	r0, [sp, #8]
   3c0ec:	ldrb	r0, [r0]
   3c0f0:	sub	r0, r0, #48	; 0x30
   3c0f4:	cmp	r0, #9
   3c0f8:	bhi	3c100 <__assert_fail@plt+0x2ac6c>
   3c0fc:	b	3c144 <__assert_fail@plt+0x2acb0>
   3c100:	ldr	r0, [sp, #4]
   3c104:	ldrb	r0, [r0]
   3c108:	sub	r0, r0, #48	; 0x30
   3c10c:	cmp	r0, #9
   3c110:	bhi	3c118 <__assert_fail@plt+0x2ac84>
   3c114:	b	3c1ac <__assert_fail@plt+0x2ad18>
   3c118:	movw	r0, #0
   3c11c:	str	r0, [sp, #12]
   3c120:	b	3c20c <__assert_fail@plt+0x2ad78>
   3c124:	ldr	r0, [sp, #8]
   3c128:	add	r1, r0, #1
   3c12c:	str	r1, [sp, #8]
   3c130:	ldrb	r0, [r0]
   3c134:	ldrb	r1, [sp, #3]
   3c138:	cmp	r0, r1
   3c13c:	bne	3c18c <__assert_fail@plt+0x2acf8>
   3c140:	b	3c144 <__assert_fail@plt+0x2acb0>
   3c144:	b	3c148 <__assert_fail@plt+0x2acb4>
   3c148:	ldr	r0, [sp, #8]
   3c14c:	ldrb	r0, [r0]
   3c150:	cmp	r0, #48	; 0x30
   3c154:	bne	3c168 <__assert_fail@plt+0x2acd4>
   3c158:	ldr	r0, [sp, #8]
   3c15c:	add	r0, r0, #1
   3c160:	str	r0, [sp, #8]
   3c164:	b	3c148 <__assert_fail@plt+0x2acb4>
   3c168:	ldr	r0, [sp, #8]
   3c16c:	ldrb	r0, [r0]
   3c170:	sub	r0, r0, #48	; 0x30
   3c174:	cmp	r0, #9
   3c178:	movw	r0, #0
   3c17c:	movls	r0, #1
   3c180:	and	r0, r0, #1
   3c184:	str	r0, [sp, #12]
   3c188:	b	3c20c <__assert_fail@plt+0x2ad78>
   3c18c:	ldr	r0, [sp, #4]
   3c190:	add	r1, r0, #1
   3c194:	str	r1, [sp, #4]
   3c198:	ldrb	r0, [r0]
   3c19c:	ldrb	r1, [sp, #3]
   3c1a0:	cmp	r0, r1
   3c1a4:	bne	3c1fc <__assert_fail@plt+0x2ad68>
   3c1a8:	b	3c1ac <__assert_fail@plt+0x2ad18>
   3c1ac:	b	3c1b0 <__assert_fail@plt+0x2ad1c>
   3c1b0:	ldr	r0, [sp, #4]
   3c1b4:	ldrb	r0, [r0]
   3c1b8:	cmp	r0, #48	; 0x30
   3c1bc:	bne	3c1d0 <__assert_fail@plt+0x2ad3c>
   3c1c0:	ldr	r0, [sp, #4]
   3c1c4:	add	r0, r0, #1
   3c1c8:	str	r0, [sp, #4]
   3c1cc:	b	3c1b0 <__assert_fail@plt+0x2ad1c>
   3c1d0:	ldr	r0, [sp, #4]
   3c1d4:	ldrb	r0, [r0]
   3c1d8:	sub	r0, r0, #48	; 0x30
   3c1dc:	cmp	r0, #9
   3c1e0:	movw	r0, #0
   3c1e4:	movls	r0, #1
   3c1e8:	and	r0, r0, #1
   3c1ec:	movw	r1, #0
   3c1f0:	sub	r0, r1, r0
   3c1f4:	str	r0, [sp, #12]
   3c1f8:	b	3c20c <__assert_fail@plt+0x2ad78>
   3c1fc:	b	3c200 <__assert_fail@plt+0x2ad6c>
   3c200:	b	3c204 <__assert_fail@plt+0x2ad70>
   3c204:	movw	r0, #0
   3c208:	str	r0, [sp, #12]
   3c20c:	ldr	r0, [sp, #12]
   3c210:	add	sp, sp, #16
   3c214:	bx	lr
   3c218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c21c:	add	fp, sp, #28
   3c220:	sub	sp, sp, #196	; 0xc4
   3c224:	ldr	ip, [fp, #12]
   3c228:	ldr	lr, [fp, #8]
   3c22c:	str	r0, [fp, #-32]	; 0xffffffe0
   3c230:	str	r1, [fp, #-36]	; 0xffffffdc
   3c234:	str	r2, [fp, #-40]	; 0xffffffd8
   3c238:	str	r3, [fp, #-44]	; 0xffffffd4
   3c23c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c240:	movw	r1, #0
   3c244:	cmp	r0, r1
   3c248:	beq	3c27c <__assert_fail@plt+0x2ade8>
   3c24c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c250:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c254:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c258:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c25c:	movw	ip, #22403	; 0x5783
   3c260:	movt	ip, #4
   3c264:	str	r1, [fp, #-48]	; 0xffffffd0
   3c268:	mov	r1, ip
   3c26c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   3c270:	str	ip, [sp]
   3c274:	bl	113a4 <fprintf@plt>
   3c278:	b	3c294 <__assert_fail@plt+0x2ae00>
   3c27c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c280:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c284:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c288:	movw	r1, #22415	; 0x578f
   3c28c:	movt	r1, #4
   3c290:	bl	113a4 <fprintf@plt>
   3c294:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c298:	movw	r1, #22422	; 0x5796
   3c29c:	movt	r1, #4
   3c2a0:	str	r0, [fp, #-52]	; 0xffffffcc
   3c2a4:	mov	r0, r1
   3c2a8:	bl	11380 <gettext@plt>
   3c2ac:	movw	r1, #23140	; 0x5a64
   3c2b0:	movt	r1, #4
   3c2b4:	movw	r3, #2022	; 0x7e6
   3c2b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3c2bc:	str	r0, [fp, #-56]	; 0xffffffc8
   3c2c0:	mov	r0, r2
   3c2c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3c2c8:	bl	113a4 <fprintf@plt>
   3c2cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c2d0:	movw	r2, #16038	; 0x3ea6
   3c2d4:	movt	r2, #4
   3c2d8:	str	r0, [fp, #-60]	; 0xffffffc4
   3c2dc:	mov	r0, r2
   3c2e0:	str	r2, [fp, #-64]	; 0xffffffc0
   3c2e4:	bl	11194 <fputs_unlocked@plt>
   3c2e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c2ec:	movw	r2, #22426	; 0x579a
   3c2f0:	movt	r2, #4
   3c2f4:	str	r0, [fp, #-68]	; 0xffffffbc
   3c2f8:	mov	r0, r2
   3c2fc:	str	r1, [fp, #-72]	; 0xffffffb8
   3c300:	bl	11380 <gettext@plt>
   3c304:	movw	r2, #22597	; 0x5845
   3c308:	movt	r2, #4
   3c30c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3c310:	str	r0, [fp, #-76]	; 0xffffffb4
   3c314:	mov	r0, r1
   3c318:	ldr	r1, [fp, #-76]	; 0xffffffb4
   3c31c:	bl	113a4 <fprintf@plt>
   3c320:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c324:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3c328:	str	r0, [fp, #-80]	; 0xffffffb0
   3c32c:	mov	r0, r2
   3c330:	bl	11194 <fputs_unlocked@plt>
   3c334:	ldr	r1, [fp, #12]
   3c338:	cmp	r1, #9
   3c33c:	str	r1, [fp, #-84]	; 0xffffffac
   3c340:	bhi	3c75c <__assert_fail@plt+0x2b2c8>
   3c344:	add	r0, pc, #8
   3c348:	ldr	r1, [fp, #-84]	; 0xffffffac
   3c34c:	ldr	r0, [r0, r1, lsl #2]
   3c350:	mov	pc, r0
   3c354:	andeq	ip, r3, ip, ror r3
   3c358:	andeq	ip, r3, r0, lsl #7
   3c35c:			; <UNDEFINED> instruction: 0x0003c3b8
   3c360:	strdeq	ip, [r3], -r8
   3c364:	andeq	ip, r3, r0, asr r4
   3c368:			; <UNDEFINED> instruction: 0x0003c4b4
   3c36c:	andeq	ip, r3, r4, lsr #10
   3c370:	andeq	ip, r3, r0, lsr #11
   3c374:	andeq	ip, r3, r8, lsr #12
   3c378:			; <UNDEFINED> instruction: 0x0003c6bc
   3c37c:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c384:	movw	r1, #22631	; 0x5867
   3c388:	movt	r1, #4
   3c38c:	str	r0, [fp, #-88]	; 0xffffffa8
   3c390:	mov	r0, r1
   3c394:	bl	11380 <gettext@plt>
   3c398:	ldr	r1, [fp, #8]
   3c39c:	ldr	r2, [r1]
   3c3a0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3c3a4:	str	r0, [fp, #-92]	; 0xffffffa4
   3c3a8:	mov	r0, r1
   3c3ac:	ldr	r1, [fp, #-92]	; 0xffffffa4
   3c3b0:	bl	113a4 <fprintf@plt>
   3c3b4:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c3b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c3bc:	movw	r1, #22647	; 0x5877
   3c3c0:	movt	r1, #4
   3c3c4:	str	r0, [fp, #-96]	; 0xffffffa0
   3c3c8:	mov	r0, r1
   3c3cc:	bl	11380 <gettext@plt>
   3c3d0:	ldr	r1, [fp, #8]
   3c3d4:	ldr	r2, [r1]
   3c3d8:	ldr	r1, [fp, #8]
   3c3dc:	ldr	r3, [r1, #4]
   3c3e0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   3c3e4:	str	r0, [fp, #-100]	; 0xffffff9c
   3c3e8:	mov	r0, r1
   3c3ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   3c3f0:	bl	113a4 <fprintf@plt>
   3c3f4:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c3f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c3fc:	movw	r1, #22670	; 0x588e
   3c400:	movt	r1, #4
   3c404:	str	r0, [fp, #-104]	; 0xffffff98
   3c408:	mov	r0, r1
   3c40c:	bl	11380 <gettext@plt>
   3c410:	ldr	r1, [fp, #8]
   3c414:	ldr	r2, [r1]
   3c418:	ldr	r1, [fp, #8]
   3c41c:	ldr	r3, [r1, #4]
   3c420:	ldr	r1, [fp, #8]
   3c424:	ldr	r1, [r1, #8]
   3c428:	ldr	ip, [fp, #-104]	; 0xffffff98
   3c42c:	str	r0, [fp, #-108]	; 0xffffff94
   3c430:	mov	r0, ip
   3c434:	ldr	lr, [fp, #-108]	; 0xffffff94
   3c438:	str	r1, [sp, #112]	; 0x70
   3c43c:	mov	r1, lr
   3c440:	ldr	r4, [sp, #112]	; 0x70
   3c444:	str	r4, [sp]
   3c448:	bl	113a4 <fprintf@plt>
   3c44c:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c450:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c454:	movw	r1, #22698	; 0x58aa
   3c458:	movt	r1, #4
   3c45c:	str	r0, [sp, #108]	; 0x6c
   3c460:	mov	r0, r1
   3c464:	bl	11380 <gettext@plt>
   3c468:	ldr	r1, [fp, #8]
   3c46c:	ldr	r2, [r1]
   3c470:	ldr	r1, [fp, #8]
   3c474:	ldr	r3, [r1, #4]
   3c478:	ldr	r1, [fp, #8]
   3c47c:	ldr	r1, [r1, #8]
   3c480:	ldr	ip, [fp, #8]
   3c484:	ldr	ip, [ip, #12]
   3c488:	ldr	lr, [sp, #108]	; 0x6c
   3c48c:	str	r0, [sp, #104]	; 0x68
   3c490:	mov	r0, lr
   3c494:	ldr	r4, [sp, #104]	; 0x68
   3c498:	str	r1, [sp, #100]	; 0x64
   3c49c:	mov	r1, r4
   3c4a0:	ldr	r5, [sp, #100]	; 0x64
   3c4a4:	str	r5, [sp]
   3c4a8:	str	ip, [sp, #4]
   3c4ac:	bl	113a4 <fprintf@plt>
   3c4b0:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c4b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c4b8:	movw	r1, #22730	; 0x58ca
   3c4bc:	movt	r1, #4
   3c4c0:	str	r0, [sp, #96]	; 0x60
   3c4c4:	mov	r0, r1
   3c4c8:	bl	11380 <gettext@plt>
   3c4cc:	ldr	r1, [fp, #8]
   3c4d0:	ldr	r2, [r1]
   3c4d4:	ldr	r1, [fp, #8]
   3c4d8:	ldr	r3, [r1, #4]
   3c4dc:	ldr	r1, [fp, #8]
   3c4e0:	ldr	r1, [r1, #8]
   3c4e4:	ldr	ip, [fp, #8]
   3c4e8:	ldr	ip, [ip, #12]
   3c4ec:	ldr	lr, [fp, #8]
   3c4f0:	ldr	lr, [lr, #16]
   3c4f4:	ldr	r4, [sp, #96]	; 0x60
   3c4f8:	str	r0, [sp, #92]	; 0x5c
   3c4fc:	mov	r0, r4
   3c500:	ldr	r5, [sp, #92]	; 0x5c
   3c504:	str	r1, [sp, #88]	; 0x58
   3c508:	mov	r1, r5
   3c50c:	ldr	r6, [sp, #88]	; 0x58
   3c510:	str	r6, [sp]
   3c514:	str	ip, [sp, #4]
   3c518:	str	lr, [sp, #8]
   3c51c:	bl	113a4 <fprintf@plt>
   3c520:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c524:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c528:	movw	r1, #22766	; 0x58ee
   3c52c:	movt	r1, #4
   3c530:	str	r0, [sp, #84]	; 0x54
   3c534:	mov	r0, r1
   3c538:	bl	11380 <gettext@plt>
   3c53c:	ldr	r1, [fp, #8]
   3c540:	ldr	r2, [r1]
   3c544:	ldr	r1, [fp, #8]
   3c548:	ldr	r3, [r1, #4]
   3c54c:	ldr	r1, [fp, #8]
   3c550:	ldr	r1, [r1, #8]
   3c554:	ldr	ip, [fp, #8]
   3c558:	ldr	ip, [ip, #12]
   3c55c:	ldr	lr, [fp, #8]
   3c560:	ldr	lr, [lr, #16]
   3c564:	ldr	r4, [fp, #8]
   3c568:	ldr	r4, [r4, #20]
   3c56c:	ldr	r5, [sp, #84]	; 0x54
   3c570:	str	r0, [sp, #80]	; 0x50
   3c574:	mov	r0, r5
   3c578:	ldr	r6, [sp, #80]	; 0x50
   3c57c:	str	r1, [sp, #76]	; 0x4c
   3c580:	mov	r1, r6
   3c584:	ldr	r7, [sp, #76]	; 0x4c
   3c588:	str	r7, [sp]
   3c58c:	str	ip, [sp, #4]
   3c590:	str	lr, [sp, #8]
   3c594:	str	r4, [sp, #12]
   3c598:	bl	113a4 <fprintf@plt>
   3c59c:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c5a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c5a4:	movw	r1, #22806	; 0x5916
   3c5a8:	movt	r1, #4
   3c5ac:	str	r0, [sp, #72]	; 0x48
   3c5b0:	mov	r0, r1
   3c5b4:	bl	11380 <gettext@plt>
   3c5b8:	ldr	r1, [fp, #8]
   3c5bc:	ldr	r2, [r1]
   3c5c0:	ldr	r1, [fp, #8]
   3c5c4:	ldr	r3, [r1, #4]
   3c5c8:	ldr	r1, [fp, #8]
   3c5cc:	ldr	r1, [r1, #8]
   3c5d0:	ldr	ip, [fp, #8]
   3c5d4:	ldr	ip, [ip, #12]
   3c5d8:	ldr	lr, [fp, #8]
   3c5dc:	ldr	lr, [lr, #16]
   3c5e0:	ldr	r4, [fp, #8]
   3c5e4:	ldr	r4, [r4, #20]
   3c5e8:	ldr	r5, [fp, #8]
   3c5ec:	ldr	r5, [r5, #24]
   3c5f0:	ldr	r6, [sp, #72]	; 0x48
   3c5f4:	str	r0, [sp, #68]	; 0x44
   3c5f8:	mov	r0, r6
   3c5fc:	ldr	r7, [sp, #68]	; 0x44
   3c600:	str	r1, [sp, #64]	; 0x40
   3c604:	mov	r1, r7
   3c608:	ldr	r8, [sp, #64]	; 0x40
   3c60c:	str	r8, [sp]
   3c610:	str	ip, [sp, #4]
   3c614:	str	lr, [sp, #8]
   3c618:	str	r4, [sp, #12]
   3c61c:	str	r5, [sp, #16]
   3c620:	bl	113a4 <fprintf@plt>
   3c624:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c62c:	movw	r1, #22850	; 0x5942
   3c630:	movt	r1, #4
   3c634:	str	r0, [sp, #60]	; 0x3c
   3c638:	mov	r0, r1
   3c63c:	bl	11380 <gettext@plt>
   3c640:	ldr	r1, [fp, #8]
   3c644:	ldr	r2, [r1]
   3c648:	ldr	r1, [fp, #8]
   3c64c:	ldr	r3, [r1, #4]
   3c650:	ldr	r1, [fp, #8]
   3c654:	ldr	r1, [r1, #8]
   3c658:	ldr	ip, [fp, #8]
   3c65c:	ldr	ip, [ip, #12]
   3c660:	ldr	lr, [fp, #8]
   3c664:	ldr	lr, [lr, #16]
   3c668:	ldr	r4, [fp, #8]
   3c66c:	ldr	r4, [r4, #20]
   3c670:	ldr	r5, [fp, #8]
   3c674:	ldr	r5, [r5, #24]
   3c678:	ldr	r6, [fp, #8]
   3c67c:	ldr	r6, [r6, #28]
   3c680:	ldr	r7, [sp, #60]	; 0x3c
   3c684:	str	r0, [sp, #56]	; 0x38
   3c688:	mov	r0, r7
   3c68c:	ldr	r8, [sp, #56]	; 0x38
   3c690:	str	r1, [sp, #52]	; 0x34
   3c694:	mov	r1, r8
   3c698:	ldr	r9, [sp, #52]	; 0x34
   3c69c:	str	r9, [sp]
   3c6a0:	str	ip, [sp, #4]
   3c6a4:	str	lr, [sp, #8]
   3c6a8:	str	r4, [sp, #12]
   3c6ac:	str	r5, [sp, #16]
   3c6b0:	str	r6, [sp, #20]
   3c6b4:	bl	113a4 <fprintf@plt>
   3c6b8:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c6bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c6c0:	movw	r1, #22898	; 0x5972
   3c6c4:	movt	r1, #4
   3c6c8:	str	r0, [sp, #48]	; 0x30
   3c6cc:	mov	r0, r1
   3c6d0:	bl	11380 <gettext@plt>
   3c6d4:	ldr	r1, [fp, #8]
   3c6d8:	ldr	r2, [r1]
   3c6dc:	ldr	r1, [fp, #8]
   3c6e0:	ldr	r3, [r1, #4]
   3c6e4:	ldr	r1, [fp, #8]
   3c6e8:	ldr	r1, [r1, #8]
   3c6ec:	ldr	ip, [fp, #8]
   3c6f0:	ldr	ip, [ip, #12]
   3c6f4:	ldr	lr, [fp, #8]
   3c6f8:	ldr	lr, [lr, #16]
   3c6fc:	ldr	r4, [fp, #8]
   3c700:	ldr	r4, [r4, #20]
   3c704:	ldr	r5, [fp, #8]
   3c708:	ldr	r5, [r5, #24]
   3c70c:	ldr	r6, [fp, #8]
   3c710:	ldr	r6, [r6, #28]
   3c714:	ldr	r7, [fp, #8]
   3c718:	ldr	r7, [r7, #32]
   3c71c:	ldr	r8, [sp, #48]	; 0x30
   3c720:	str	r0, [sp, #44]	; 0x2c
   3c724:	mov	r0, r8
   3c728:	ldr	r9, [sp, #44]	; 0x2c
   3c72c:	str	r1, [sp, #40]	; 0x28
   3c730:	mov	r1, r9
   3c734:	ldr	sl, [sp, #40]	; 0x28
   3c738:	str	sl, [sp]
   3c73c:	str	ip, [sp, #4]
   3c740:	str	lr, [sp, #8]
   3c744:	str	r4, [sp, #12]
   3c748:	str	r5, [sp, #16]
   3c74c:	str	r6, [sp, #20]
   3c750:	str	r7, [sp, #24]
   3c754:	bl	113a4 <fprintf@plt>
   3c758:	b	3c7f8 <__assert_fail@plt+0x2b364>
   3c75c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c760:	movw	r1, #22950	; 0x59a6
   3c764:	movt	r1, #4
   3c768:	str	r0, [sp, #36]	; 0x24
   3c76c:	mov	r0, r1
   3c770:	bl	11380 <gettext@plt>
   3c774:	ldr	r1, [fp, #8]
   3c778:	ldr	r2, [r1]
   3c77c:	ldr	r1, [fp, #8]
   3c780:	ldr	r3, [r1, #4]
   3c784:	ldr	r1, [fp, #8]
   3c788:	ldr	r1, [r1, #8]
   3c78c:	ldr	ip, [fp, #8]
   3c790:	ldr	ip, [ip, #12]
   3c794:	ldr	lr, [fp, #8]
   3c798:	ldr	lr, [lr, #16]
   3c79c:	ldr	r4, [fp, #8]
   3c7a0:	ldr	r4, [r4, #20]
   3c7a4:	ldr	r5, [fp, #8]
   3c7a8:	ldr	r5, [r5, #24]
   3c7ac:	ldr	r6, [fp, #8]
   3c7b0:	ldr	r6, [r6, #28]
   3c7b4:	ldr	r7, [fp, #8]
   3c7b8:	ldr	r7, [r7, #32]
   3c7bc:	ldr	r8, [sp, #36]	; 0x24
   3c7c0:	str	r0, [sp, #32]
   3c7c4:	mov	r0, r8
   3c7c8:	ldr	r9, [sp, #32]
   3c7cc:	str	r1, [sp, #28]
   3c7d0:	mov	r1, r9
   3c7d4:	ldr	sl, [sp, #28]
   3c7d8:	str	sl, [sp]
   3c7dc:	str	ip, [sp, #4]
   3c7e0:	str	lr, [sp, #8]
   3c7e4:	str	r4, [sp, #12]
   3c7e8:	str	r5, [sp, #16]
   3c7ec:	str	r6, [sp, #20]
   3c7f0:	str	r7, [sp, #24]
   3c7f4:	bl	113a4 <fprintf@plt>
   3c7f8:	sub	sp, fp, #28
   3c7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c800:	push	{fp, lr}
   3c804:	mov	fp, sp
   3c808:	sub	sp, sp, #32
   3c80c:	ldr	ip, [fp, #8]
   3c810:	str	r0, [fp, #-4]
   3c814:	str	r1, [fp, #-8]
   3c818:	str	r2, [fp, #-12]
   3c81c:	str	r3, [sp, #16]
   3c820:	movw	r0, #0
   3c824:	str	r0, [sp, #12]
   3c828:	ldr	r0, [fp, #8]
   3c82c:	ldr	r1, [sp, #12]
   3c830:	add	r0, r0, r1, lsl #2
   3c834:	ldr	r0, [r0]
   3c838:	movw	r1, #0
   3c83c:	cmp	r0, r1
   3c840:	beq	3c858 <__assert_fail@plt+0x2b3c4>
   3c844:	b	3c848 <__assert_fail@plt+0x2b3b4>
   3c848:	ldr	r0, [sp, #12]
   3c84c:	add	r0, r0, #1
   3c850:	str	r0, [sp, #12]
   3c854:	b	3c828 <__assert_fail@plt+0x2b394>
   3c858:	ldr	r0, [fp, #-4]
   3c85c:	ldr	r1, [fp, #-8]
   3c860:	ldr	r2, [fp, #-12]
   3c864:	ldr	r3, [sp, #16]
   3c868:	ldr	ip, [fp, #8]
   3c86c:	ldr	lr, [sp, #12]
   3c870:	str	ip, [sp]
   3c874:	str	lr, [sp, #4]
   3c878:	bl	3c218 <__assert_fail@plt+0x2ad84>
   3c87c:	mov	sp, fp
   3c880:	pop	{fp, pc}
   3c884:	push	{fp, lr}
   3c888:	mov	fp, sp
   3c88c:	sub	sp, sp, #80	; 0x50
   3c890:	ldr	ip, [fp, #8]
   3c894:	str	ip, [fp, #-4]
   3c898:	str	r0, [fp, #-8]
   3c89c:	str	r1, [fp, #-12]
   3c8a0:	str	r2, [fp, #-16]
   3c8a4:	str	r3, [fp, #-20]	; 0xffffffec
   3c8a8:	movw	r0, #0
   3c8ac:	str	r0, [fp, #-24]	; 0xffffffe8
   3c8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c8b4:	cmp	r0, #10
   3c8b8:	movw	r0, #0
   3c8bc:	str	r0, [sp, #12]
   3c8c0:	bcs	3c8f8 <__assert_fail@plt+0x2b464>
   3c8c4:	ldr	r0, [fp, #-4]
   3c8c8:	add	r1, r0, #4
   3c8cc:	str	r1, [fp, #-4]
   3c8d0:	ldr	r0, [r0]
   3c8d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c8d8:	add	r2, sp, #16
   3c8dc:	add	r1, r2, r1, lsl #2
   3c8e0:	str	r0, [r1]
   3c8e4:	movw	r1, #0
   3c8e8:	cmp	r0, r1
   3c8ec:	movw	r0, #0
   3c8f0:	movne	r0, #1
   3c8f4:	str	r0, [sp, #12]
   3c8f8:	ldr	r0, [sp, #12]
   3c8fc:	tst	r0, #1
   3c900:	beq	3c918 <__assert_fail@plt+0x2b484>
   3c904:	b	3c908 <__assert_fail@plt+0x2b474>
   3c908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c90c:	add	r0, r0, #1
   3c910:	str	r0, [fp, #-24]	; 0xffffffe8
   3c914:	b	3c8b0 <__assert_fail@plt+0x2b41c>
   3c918:	add	r0, sp, #16
   3c91c:	ldr	r1, [fp, #-8]
   3c920:	ldr	r2, [fp, #-12]
   3c924:	ldr	r3, [fp, #-16]
   3c928:	ldr	ip, [fp, #-20]	; 0xffffffec
   3c92c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   3c930:	str	r0, [sp, #8]
   3c934:	mov	r0, r1
   3c938:	mov	r1, r2
   3c93c:	mov	r2, r3
   3c940:	mov	r3, ip
   3c944:	ldr	ip, [sp, #8]
   3c948:	str	ip, [sp]
   3c94c:	str	lr, [sp, #4]
   3c950:	bl	3c218 <__assert_fail@plt+0x2ad84>
   3c954:	mov	sp, fp
   3c958:	pop	{fp, pc}
   3c95c:	push	{fp, lr}
   3c960:	mov	fp, sp
   3c964:	sub	sp, sp, #24
   3c968:	str	r0, [fp, #-4]
   3c96c:	str	r1, [fp, #-8]
   3c970:	str	r2, [sp, #12]
   3c974:	str	r3, [sp, #8]
   3c978:	add	r0, fp, #8
   3c97c:	str	r0, [sp, #4]
   3c980:	ldr	r0, [fp, #-4]
   3c984:	ldr	r1, [fp, #-8]
   3c988:	ldr	r2, [sp, #12]
   3c98c:	ldr	r3, [sp, #8]
   3c990:	ldr	ip, [sp, #4]
   3c994:	mov	lr, sp
   3c998:	str	ip, [lr]
   3c99c:	bl	3c884 <__assert_fail@plt+0x2b3f0>
   3c9a0:	add	r0, sp, #4
   3c9a4:	mov	sp, fp
   3c9a8:	pop	{fp, pc}
   3c9ac:	push	{fp, lr}
   3c9b0:	mov	fp, sp
   3c9b4:	sub	sp, sp, #16
   3c9b8:	movw	r0, #24972	; 0x618c
   3c9bc:	movt	r0, #5
   3c9c0:	ldr	r1, [r0]
   3c9c4:	movw	r0, #16038	; 0x3ea6
   3c9c8:	movt	r0, #4
   3c9cc:	bl	11194 <fputs_unlocked@plt>
   3c9d0:	movw	r1, #23010	; 0x59e2
   3c9d4:	movt	r1, #4
   3c9d8:	str	r0, [fp, #-4]
   3c9dc:	mov	r0, r1
   3c9e0:	bl	11380 <gettext@plt>
   3c9e4:	movw	r1, #23030	; 0x59f6
   3c9e8:	movt	r1, #4
   3c9ec:	bl	111e8 <printf@plt>
   3c9f0:	movw	r1, #23052	; 0x5a0c
   3c9f4:	movt	r1, #4
   3c9f8:	str	r0, [sp, #8]
   3c9fc:	mov	r0, r1
   3ca00:	bl	11380 <gettext@plt>
   3ca04:	movw	r1, #15605	; 0x3cf5
   3ca08:	movt	r1, #4
   3ca0c:	movw	r2, #15847	; 0x3de7
   3ca10:	movt	r2, #4
   3ca14:	bl	111e8 <printf@plt>
   3ca18:	movw	r1, #23072	; 0x5a20
   3ca1c:	movt	r1, #4
   3ca20:	str	r0, [sp, #4]
   3ca24:	mov	r0, r1
   3ca28:	bl	11380 <gettext@plt>
   3ca2c:	movw	r1, #23111	; 0x5a47
   3ca30:	movt	r1, #4
   3ca34:	bl	111e8 <printf@plt>
   3ca38:	mov	sp, fp
   3ca3c:	pop	{fp, pc}
   3ca40:	push	{fp, lr}
   3ca44:	mov	fp, sp
   3ca48:	sub	sp, sp, #16
   3ca4c:	str	r0, [fp, #-4]
   3ca50:	str	r1, [sp, #8]
   3ca54:	str	r2, [sp, #4]
   3ca58:	ldr	r0, [fp, #-4]
   3ca5c:	ldr	r1, [sp, #8]
   3ca60:	ldr	r2, [sp, #4]
   3ca64:	bl	3ca70 <__assert_fail@plt+0x2b5dc>
   3ca68:	mov	sp, fp
   3ca6c:	pop	{fp, pc}
   3ca70:	push	{fp, lr}
   3ca74:	mov	fp, sp
   3ca78:	sub	sp, sp, #16
   3ca7c:	str	r0, [fp, #-4]
   3ca80:	str	r1, [sp, #8]
   3ca84:	str	r2, [sp, #4]
   3ca88:	ldr	r0, [fp, #-4]
   3ca8c:	ldr	r1, [sp, #8]
   3ca90:	ldr	r2, [sp, #4]
   3ca94:	bl	416c0 <__assert_fail@plt+0x3022c>
   3ca98:	str	r0, [sp]
   3ca9c:	ldr	r0, [sp]
   3caa0:	movw	r1, #0
   3caa4:	cmp	r0, r1
   3caa8:	bne	3cad8 <__assert_fail@plt+0x2b644>
   3caac:	ldr	r0, [fp, #-4]
   3cab0:	movw	r1, #0
   3cab4:	cmp	r0, r1
   3cab8:	beq	3cad4 <__assert_fail@plt+0x2b640>
   3cabc:	ldr	r0, [sp, #8]
   3cac0:	cmp	r0, #0
   3cac4:	beq	3cad8 <__assert_fail@plt+0x2b644>
   3cac8:	ldr	r0, [sp, #4]
   3cacc:	cmp	r0, #0
   3cad0:	beq	3cad8 <__assert_fail@plt+0x2b644>
   3cad4:	bl	3f81c <__assert_fail@plt+0x2e388>
   3cad8:	ldr	r0, [sp]
   3cadc:	mov	sp, fp
   3cae0:	pop	{fp, pc}
   3cae4:	push	{fp, lr}
   3cae8:	mov	fp, sp
   3caec:	sub	sp, sp, #8
   3caf0:	str	r0, [sp, #4]
   3caf4:	ldr	r0, [sp, #4]
   3caf8:	bl	3f908 <__assert_fail@plt+0x2e474>
   3cafc:	bl	3cb08 <__assert_fail@plt+0x2b674>
   3cb00:	mov	sp, fp
   3cb04:	pop	{fp, pc}
   3cb08:	push	{fp, lr}
   3cb0c:	mov	fp, sp
   3cb10:	sub	sp, sp, #8
   3cb14:	str	r0, [sp, #4]
   3cb18:	ldr	r0, [sp, #4]
   3cb1c:	movw	r1, #0
   3cb20:	cmp	r0, r1
   3cb24:	bne	3cb2c <__assert_fail@plt+0x2b698>
   3cb28:	bl	3f81c <__assert_fail@plt+0x2e388>
   3cb2c:	ldr	r0, [sp, #4]
   3cb30:	mov	sp, fp
   3cb34:	pop	{fp, pc}
   3cb38:	push	{fp, lr}
   3cb3c:	mov	fp, sp
   3cb40:	sub	sp, sp, #8
   3cb44:	str	r0, [sp, #4]
   3cb48:	ldr	r0, [sp, #4]
   3cb4c:	bl	41298 <__assert_fail@plt+0x2fe04>
   3cb50:	bl	3cb08 <__assert_fail@plt+0x2b674>
   3cb54:	mov	sp, fp
   3cb58:	pop	{fp, pc}
   3cb5c:	push	{fp, lr}
   3cb60:	mov	fp, sp
   3cb64:	sub	sp, sp, #8
   3cb68:	str	r0, [sp, #4]
   3cb6c:	ldr	r0, [sp, #4]
   3cb70:	bl	3cae4 <__assert_fail@plt+0x2b650>
   3cb74:	mov	sp, fp
   3cb78:	pop	{fp, pc}
   3cb7c:	push	{fp, lr}
   3cb80:	mov	fp, sp
   3cb84:	sub	sp, sp, #16
   3cb88:	str	r0, [fp, #-4]
   3cb8c:	str	r1, [sp, #8]
   3cb90:	ldr	r0, [fp, #-4]
   3cb94:	ldr	r1, [sp, #8]
   3cb98:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   3cb9c:	str	r0, [sp, #4]
   3cba0:	ldr	r0, [sp, #4]
   3cba4:	movw	r1, #0
   3cba8:	cmp	r0, r1
   3cbac:	bne	3cbd0 <__assert_fail@plt+0x2b73c>
   3cbb0:	ldr	r0, [fp, #-4]
   3cbb4:	movw	r1, #0
   3cbb8:	cmp	r0, r1
   3cbbc:	beq	3cbcc <__assert_fail@plt+0x2b738>
   3cbc0:	ldr	r0, [sp, #8]
   3cbc4:	cmp	r0, #0
   3cbc8:	beq	3cbd0 <__assert_fail@plt+0x2b73c>
   3cbcc:	bl	3f81c <__assert_fail@plt+0x2e388>
   3cbd0:	ldr	r0, [sp, #4]
   3cbd4:	mov	sp, fp
   3cbd8:	pop	{fp, pc}
   3cbdc:	push	{fp, lr}
   3cbe0:	mov	fp, sp
   3cbe4:	sub	sp, sp, #8
   3cbe8:	str	r0, [sp, #4]
   3cbec:	str	r1, [sp]
   3cbf0:	ldr	r0, [sp, #4]
   3cbf4:	ldr	r1, [sp]
   3cbf8:	bl	412d8 <__assert_fail@plt+0x2fe44>
   3cbfc:	bl	3cb08 <__assert_fail@plt+0x2b674>
   3cc00:	mov	sp, fp
   3cc04:	pop	{fp, pc}
   3cc08:	push	{fp, lr}
   3cc0c:	mov	fp, sp
   3cc10:	sub	sp, sp, #16
   3cc14:	str	r0, [fp, #-4]
   3cc18:	str	r1, [sp, #8]
   3cc1c:	str	r2, [sp, #4]
   3cc20:	ldr	r0, [fp, #-4]
   3cc24:	ldr	r1, [sp, #8]
   3cc28:	ldr	r2, [sp, #4]
   3cc2c:	bl	413d0 <__assert_fail@plt+0x2ff3c>
   3cc30:	bl	3cb08 <__assert_fail@plt+0x2b674>
   3cc34:	mov	sp, fp
   3cc38:	pop	{fp, pc}
   3cc3c:	push	{fp, lr}
   3cc40:	mov	fp, sp
   3cc44:	sub	sp, sp, #8
   3cc48:	str	r0, [sp, #4]
   3cc4c:	str	r1, [sp]
   3cc50:	ldr	r1, [sp, #4]
   3cc54:	ldr	r2, [sp]
   3cc58:	movw	r0, #0
   3cc5c:	bl	3ca70 <__assert_fail@plt+0x2b5dc>
   3cc60:	mov	sp, fp
   3cc64:	pop	{fp, pc}
   3cc68:	push	{fp, lr}
   3cc6c:	mov	fp, sp
   3cc70:	sub	sp, sp, #8
   3cc74:	str	r0, [sp, #4]
   3cc78:	str	r1, [sp]
   3cc7c:	ldr	r1, [sp, #4]
   3cc80:	ldr	r2, [sp]
   3cc84:	movw	r0, #0
   3cc88:	bl	3cc08 <__assert_fail@plt+0x2b774>
   3cc8c:	mov	sp, fp
   3cc90:	pop	{fp, pc}
   3cc94:	push	{fp, lr}
   3cc98:	mov	fp, sp
   3cc9c:	sub	sp, sp, #8
   3cca0:	str	r0, [sp, #4]
   3cca4:	str	r1, [sp]
   3cca8:	ldr	r0, [sp, #4]
   3ccac:	ldr	r1, [sp]
   3ccb0:	movw	r2, #1
   3ccb4:	bl	3ccc0 <__assert_fail@plt+0x2b82c>
   3ccb8:	mov	sp, fp
   3ccbc:	pop	{fp, pc}
   3ccc0:	push	{fp, lr}
   3ccc4:	mov	fp, sp
   3ccc8:	sub	sp, sp, #16
   3cccc:	str	r0, [fp, #-4]
   3ccd0:	str	r1, [sp, #8]
   3ccd4:	str	r2, [sp, #4]
   3ccd8:	ldr	r0, [sp, #8]
   3ccdc:	ldr	r0, [r0]
   3cce0:	str	r0, [sp]
   3cce4:	ldr	r0, [fp, #-4]
   3cce8:	movw	r1, #0
   3ccec:	cmp	r0, r1
   3ccf0:	bne	3cd3c <__assert_fail@plt+0x2b8a8>
   3ccf4:	ldr	r0, [sp]
   3ccf8:	cmp	r0, #0
   3ccfc:	bne	3cd38 <__assert_fail@plt+0x2b8a4>
   3cd00:	ldr	r0, [sp, #4]
   3cd04:	movw	r1, #64	; 0x40
   3cd08:	udiv	r0, r1, r0
   3cd0c:	str	r0, [sp]
   3cd10:	ldr	r0, [sp]
   3cd14:	cmp	r0, #0
   3cd18:	movw	r0, #0
   3cd1c:	movne	r0, #1
   3cd20:	mvn	r1, #0
   3cd24:	eor	r0, r0, r1
   3cd28:	and	r0, r0, #1
   3cd2c:	ldr	r1, [sp]
   3cd30:	add	r0, r1, r0
   3cd34:	str	r0, [sp]
   3cd38:	b	3cd6c <__assert_fail@plt+0x2b8d8>
   3cd3c:	ldr	r0, [sp]
   3cd40:	ldr	r1, [sp]
   3cd44:	lsr	r1, r1, #1
   3cd48:	add	r1, r1, #1
   3cd4c:	adds	r0, r0, r1
   3cd50:	mov	r1, #0
   3cd54:	adc	r1, r1, #0
   3cd58:	str	r0, [sp]
   3cd5c:	tst	r1, #1
   3cd60:	beq	3cd68 <__assert_fail@plt+0x2b8d4>
   3cd64:	bl	3f81c <__assert_fail@plt+0x2e388>
   3cd68:	b	3cd6c <__assert_fail@plt+0x2b8d8>
   3cd6c:	ldr	r0, [fp, #-4]
   3cd70:	ldr	r1, [sp]
   3cd74:	ldr	r2, [sp, #4]
   3cd78:	bl	3ca70 <__assert_fail@plt+0x2b5dc>
   3cd7c:	str	r0, [fp, #-4]
   3cd80:	ldr	r0, [sp]
   3cd84:	ldr	r1, [sp, #8]
   3cd88:	str	r0, [r1]
   3cd8c:	ldr	r0, [fp, #-4]
   3cd90:	mov	sp, fp
   3cd94:	pop	{fp, pc}
   3cd98:	push	{fp, lr}
   3cd9c:	mov	fp, sp
   3cda0:	sub	sp, sp, #216	; 0xd8
   3cda4:	ldr	ip, [fp, #8]
   3cda8:	str	r0, [fp, #-4]
   3cdac:	str	r1, [fp, #-8]
   3cdb0:	str	r2, [fp, #-12]
   3cdb4:	str	r3, [fp, #-16]
   3cdb8:	ldr	r0, [fp, #-8]
   3cdbc:	ldr	r0, [r0]
   3cdc0:	str	r0, [fp, #-20]	; 0xffffffec
   3cdc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3cdc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cdcc:	asr	r1, r1, #1
   3cdd0:	add	r1, r0, r1
   3cdd4:	mov	r2, #1
   3cdd8:	cmp	r1, r0
   3cddc:	movwvc	r2, #0
   3cde0:	str	r1, [fp, #-24]	; 0xffffffe8
   3cde4:	tst	r2, #1
   3cde8:	beq	3cdf4 <__assert_fail@plt+0x2b960>
   3cdec:	ldr	r0, [pc, #4036]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3cdf0:	str	r0, [fp, #-24]	; 0xffffffe8
   3cdf4:	ldr	r0, [fp, #-16]
   3cdf8:	movw	r1, #0
   3cdfc:	cmp	r1, r0
   3ce00:	bgt	3ce1c <__assert_fail@plt+0x2b988>
   3ce04:	ldr	r0, [fp, #-16]
   3ce08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ce0c:	cmp	r0, r1
   3ce10:	bge	3ce1c <__assert_fail@plt+0x2b988>
   3ce14:	ldr	r0, [fp, #-16]
   3ce18:	str	r0, [fp, #-24]	; 0xffffffe8
   3ce1c:	b	3d1f4 <__assert_fail@plt+0x2bd60>
   3ce20:	b	3ce24 <__assert_fail@plt+0x2b990>
   3ce24:	ldr	r0, [fp, #8]
   3ce28:	cmp	r0, #0
   3ce2c:	bge	3cf40 <__assert_fail@plt+0x2baac>
   3ce30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ce34:	cmp	r0, #0
   3ce38:	bge	3cec4 <__assert_fail@plt+0x2ba30>
   3ce3c:	b	3ce40 <__assert_fail@plt+0x2b9ac>
   3ce40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ce44:	ldr	r1, [fp, #8]
   3ce48:	movw	r2, #127	; 0x7f
   3ce4c:	sdiv	r1, r2, r1
   3ce50:	cmp	r0, r1
   3ce54:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3ce58:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3ce5c:	b	3ce60 <__assert_fail@plt+0x2b9cc>
   3ce60:	ldr	r0, [pc, #4084]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3ce64:	ldr	r1, [fp, #8]
   3ce68:	cmp	r1, r0
   3ce6c:	blt	3ce84 <__assert_fail@plt+0x2b9f0>
   3ce70:	b	3ce90 <__assert_fail@plt+0x2b9fc>
   3ce74:	ldr	r0, [fp, #8]
   3ce78:	movw	r1, #0
   3ce7c:	cmp	r1, r0
   3ce80:	bge	3ce90 <__assert_fail@plt+0x2b9fc>
   3ce84:	movw	r0, #0
   3ce88:	str	r0, [fp, #-36]	; 0xffffffdc
   3ce8c:	b	3cea8 <__assert_fail@plt+0x2ba14>
   3ce90:	ldr	r0, [fp, #8]
   3ce94:	movw	r1, #0
   3ce98:	sub	r0, r1, r0
   3ce9c:	movw	r1, #127	; 0x7f
   3cea0:	sdiv	r0, r1, r0
   3cea4:	str	r0, [fp, #-36]	; 0xffffffdc
   3cea8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ceac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ceb0:	mvn	r2, #0
   3ceb4:	sub	r1, r2, r1
   3ceb8:	cmp	r0, r1
   3cebc:	ble	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cec0:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cec4:	b	3cec8 <__assert_fail@plt+0x2ba34>
   3cec8:	b	3cf24 <__assert_fail@plt+0x2ba90>
   3cecc:	b	3cf24 <__assert_fail@plt+0x2ba90>
   3ced0:	ldr	r0, [fp, #8]
   3ced4:	cmn	r0, #1
   3ced8:	bne	3cf24 <__assert_fail@plt+0x2ba90>
   3cedc:	b	3cee0 <__assert_fail@plt+0x2ba4c>
   3cee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cee4:	mvn	r1, #127	; 0x7f
   3cee8:	add	r0, r0, r1
   3ceec:	movw	r1, #0
   3cef0:	cmp	r1, r0
   3cef4:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cef8:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cf00:	movw	r1, #0
   3cf04:	cmp	r1, r0
   3cf08:	bge	3cff8 <__assert_fail@plt+0x2bb64>
   3cf0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cf10:	sub	r0, r0, #1
   3cf14:	movw	r1, #127	; 0x7f
   3cf18:	cmp	r1, r0
   3cf1c:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cf20:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cf24:	ldr	r0, [fp, #8]
   3cf28:	mvn	r1, #127	; 0x7f
   3cf2c:	sdiv	r0, r1, r0
   3cf30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3cf34:	cmp	r0, r1
   3cf38:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cf3c:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cf40:	ldr	r0, [fp, #8]
   3cf44:	cmp	r0, #0
   3cf48:	bne	3cf50 <__assert_fail@plt+0x2babc>
   3cf4c:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cf50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cf54:	cmp	r0, #0
   3cf58:	bge	3cfc8 <__assert_fail@plt+0x2bb34>
   3cf5c:	b	3cf60 <__assert_fail@plt+0x2bacc>
   3cf60:	b	3cfac <__assert_fail@plt+0x2bb18>
   3cf64:	b	3cfac <__assert_fail@plt+0x2bb18>
   3cf68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cf6c:	cmn	r0, #1
   3cf70:	bne	3cfac <__assert_fail@plt+0x2bb18>
   3cf74:	b	3cf78 <__assert_fail@plt+0x2bae4>
   3cf78:	ldr	r0, [fp, #8]
   3cf7c:	mvn	r1, #127	; 0x7f
   3cf80:	add	r0, r0, r1
   3cf84:	movw	r1, #0
   3cf88:	cmp	r1, r0
   3cf8c:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cf90:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cf94:	ldr	r0, [fp, #8]
   3cf98:	sub	r0, r0, #1
   3cf9c:	movw	r1, #127	; 0x7f
   3cfa0:	cmp	r1, r0
   3cfa4:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cfa8:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cfb0:	mvn	r1, #127	; 0x7f
   3cfb4:	sdiv	r0, r1, r0
   3cfb8:	ldr	r1, [fp, #8]
   3cfbc:	cmp	r0, r1
   3cfc0:	blt	3cfe0 <__assert_fail@plt+0x2bb4c>
   3cfc4:	b	3cff8 <__assert_fail@plt+0x2bb64>
   3cfc8:	ldr	r0, [fp, #8]
   3cfcc:	movw	r1, #127	; 0x7f
   3cfd0:	sdiv	r0, r1, r0
   3cfd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3cfd8:	cmp	r0, r1
   3cfdc:	bge	3cff8 <__assert_fail@plt+0x2bb64>
   3cfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cfe4:	ldr	r1, [fp, #8]
   3cfe8:	mul	r0, r0, r1
   3cfec:	sxtb	r0, r0
   3cff0:	str	r0, [fp, #-28]	; 0xffffffe4
   3cff4:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3cff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cffc:	ldr	r1, [fp, #8]
   3d000:	mul	r0, r0, r1
   3d004:	sxtb	r0, r0
   3d008:	str	r0, [fp, #-28]	; 0xffffffe4
   3d00c:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3d010:	ldr	r0, [fp, #8]
   3d014:	cmp	r0, #0
   3d018:	bge	3d128 <__assert_fail@plt+0x2bc94>
   3d01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d020:	cmp	r0, #0
   3d024:	bge	3d0b0 <__assert_fail@plt+0x2bc1c>
   3d028:	b	3d02c <__assert_fail@plt+0x2bb98>
   3d02c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d030:	ldr	r1, [fp, #8]
   3d034:	movw	r2, #255	; 0xff
   3d038:	sdiv	r1, r2, r1
   3d03c:	cmp	r0, r1
   3d040:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d044:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d048:	b	3d04c <__assert_fail@plt+0x2bbb8>
   3d04c:	ldr	r0, [pc, #3592]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3d050:	ldr	r1, [fp, #8]
   3d054:	cmp	r1, r0
   3d058:	blt	3d070 <__assert_fail@plt+0x2bbdc>
   3d05c:	b	3d07c <__assert_fail@plt+0x2bbe8>
   3d060:	ldr	r0, [fp, #8]
   3d064:	movw	r1, #0
   3d068:	cmp	r1, r0
   3d06c:	bge	3d07c <__assert_fail@plt+0x2bbe8>
   3d070:	movw	r0, #0
   3d074:	str	r0, [fp, #-40]	; 0xffffffd8
   3d078:	b	3d094 <__assert_fail@plt+0x2bc00>
   3d07c:	ldr	r0, [fp, #8]
   3d080:	movw	r1, #0
   3d084:	sub	r0, r1, r0
   3d088:	movw	r1, #255	; 0xff
   3d08c:	sdiv	r0, r1, r0
   3d090:	str	r0, [fp, #-40]	; 0xffffffd8
   3d094:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d09c:	mvn	r2, #0
   3d0a0:	sub	r1, r2, r1
   3d0a4:	cmp	r0, r1
   3d0a8:	ble	3d1c4 <__assert_fail@plt+0x2bd30>
   3d0ac:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d0b0:	b	3d0b4 <__assert_fail@plt+0x2bc20>
   3d0b4:	b	3d10c <__assert_fail@plt+0x2bc78>
   3d0b8:	b	3d10c <__assert_fail@plt+0x2bc78>
   3d0bc:	ldr	r0, [fp, #8]
   3d0c0:	cmn	r0, #1
   3d0c4:	bne	3d10c <__assert_fail@plt+0x2bc78>
   3d0c8:	b	3d0cc <__assert_fail@plt+0x2bc38>
   3d0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d0d0:	add	r0, r0, #0
   3d0d4:	movw	r1, #0
   3d0d8:	cmp	r1, r0
   3d0dc:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d0e0:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d0e8:	movw	r1, #0
   3d0ec:	cmp	r1, r0
   3d0f0:	bge	3d1dc <__assert_fail@plt+0x2bd48>
   3d0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d0f8:	sub	r0, r0, #1
   3d0fc:	mvn	r1, #0
   3d100:	cmp	r1, r0
   3d104:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d108:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d10c:	ldr	r0, [fp, #8]
   3d110:	movw	r1, #0
   3d114:	sdiv	r0, r1, r0
   3d118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d11c:	cmp	r0, r1
   3d120:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d124:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d128:	ldr	r0, [fp, #8]
   3d12c:	cmp	r0, #0
   3d130:	bne	3d138 <__assert_fail@plt+0x2bca4>
   3d134:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d13c:	cmp	r0, #0
   3d140:	bge	3d1ac <__assert_fail@plt+0x2bd18>
   3d144:	b	3d148 <__assert_fail@plt+0x2bcb4>
   3d148:	b	3d190 <__assert_fail@plt+0x2bcfc>
   3d14c:	b	3d190 <__assert_fail@plt+0x2bcfc>
   3d150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d154:	cmn	r0, #1
   3d158:	bne	3d190 <__assert_fail@plt+0x2bcfc>
   3d15c:	b	3d160 <__assert_fail@plt+0x2bccc>
   3d160:	ldr	r0, [fp, #8]
   3d164:	add	r0, r0, #0
   3d168:	movw	r1, #0
   3d16c:	cmp	r1, r0
   3d170:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d174:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d178:	ldr	r0, [fp, #8]
   3d17c:	sub	r0, r0, #1
   3d180:	mvn	r1, #0
   3d184:	cmp	r1, r0
   3d188:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d18c:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d194:	movw	r1, #0
   3d198:	sdiv	r0, r1, r0
   3d19c:	ldr	r1, [fp, #8]
   3d1a0:	cmp	r0, r1
   3d1a4:	blt	3d1c4 <__assert_fail@plt+0x2bd30>
   3d1a8:	b	3d1dc <__assert_fail@plt+0x2bd48>
   3d1ac:	ldr	r0, [fp, #8]
   3d1b0:	movw	r1, #255	; 0xff
   3d1b4:	sdiv	r0, r1, r0
   3d1b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d1bc:	cmp	r0, r1
   3d1c0:	bge	3d1dc <__assert_fail@plt+0x2bd48>
   3d1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d1c8:	ldr	r1, [fp, #8]
   3d1cc:	mul	r0, r0, r1
   3d1d0:	and	r0, r0, #255	; 0xff
   3d1d4:	str	r0, [fp, #-28]	; 0xffffffe4
   3d1d8:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3d1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d1e0:	ldr	r1, [fp, #8]
   3d1e4:	mul	r0, r0, r1
   3d1e8:	and	r0, r0, #255	; 0xff
   3d1ec:	str	r0, [fp, #-28]	; 0xffffffe4
   3d1f0:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3d1f4:	b	3d5cc <__assert_fail@plt+0x2c138>
   3d1f8:	b	3d1fc <__assert_fail@plt+0x2bd68>
   3d1fc:	ldr	r0, [fp, #8]
   3d200:	cmp	r0, #0
   3d204:	bge	3d318 <__assert_fail@plt+0x2be84>
   3d208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d20c:	cmp	r0, #0
   3d210:	bge	3d29c <__assert_fail@plt+0x2be08>
   3d214:	b	3d218 <__assert_fail@plt+0x2bd84>
   3d218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d21c:	ldr	r1, [fp, #8]
   3d220:	movw	r2, #32767	; 0x7fff
   3d224:	sdiv	r1, r2, r1
   3d228:	cmp	r0, r1
   3d22c:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d230:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d234:	b	3d238 <__assert_fail@plt+0x2bda4>
   3d238:	ldr	r0, [pc, #3100]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3d23c:	ldr	r1, [fp, #8]
   3d240:	cmp	r1, r0
   3d244:	blt	3d25c <__assert_fail@plt+0x2bdc8>
   3d248:	b	3d268 <__assert_fail@plt+0x2bdd4>
   3d24c:	ldr	r0, [fp, #8]
   3d250:	movw	r1, #0
   3d254:	cmp	r1, r0
   3d258:	bge	3d268 <__assert_fail@plt+0x2bdd4>
   3d25c:	movw	r0, #0
   3d260:	str	r0, [fp, #-44]	; 0xffffffd4
   3d264:	b	3d280 <__assert_fail@plt+0x2bdec>
   3d268:	ldr	r0, [fp, #8]
   3d26c:	movw	r1, #0
   3d270:	sub	r0, r1, r0
   3d274:	movw	r1, #32767	; 0x7fff
   3d278:	sdiv	r0, r1, r0
   3d27c:	str	r0, [fp, #-44]	; 0xffffffd4
   3d280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3d284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d288:	mvn	r2, #0
   3d28c:	sub	r1, r2, r1
   3d290:	cmp	r0, r1
   3d294:	ble	3d3b8 <__assert_fail@plt+0x2bf24>
   3d298:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d29c:	b	3d2a0 <__assert_fail@plt+0x2be0c>
   3d2a0:	b	3d2fc <__assert_fail@plt+0x2be68>
   3d2a4:	b	3d2fc <__assert_fail@plt+0x2be68>
   3d2a8:	ldr	r0, [fp, #8]
   3d2ac:	cmn	r0, #1
   3d2b0:	bne	3d2fc <__assert_fail@plt+0x2be68>
   3d2b4:	b	3d2b8 <__assert_fail@plt+0x2be24>
   3d2b8:	ldr	r0, [pc, #4068]	; 3e2a4 <__assert_fail@plt+0x2ce10>
   3d2bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d2c0:	add	r0, r1, r0
   3d2c4:	movw	r1, #0
   3d2c8:	cmp	r1, r0
   3d2cc:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d2d0:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d2d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d2d8:	movw	r1, #0
   3d2dc:	cmp	r1, r0
   3d2e0:	bge	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d2e8:	sub	r0, r0, #1
   3d2ec:	movw	r1, #32767	; 0x7fff
   3d2f0:	cmp	r1, r0
   3d2f4:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d2f8:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d2fc:	ldr	r0, [pc, #4000]	; 3e2a4 <__assert_fail@plt+0x2ce10>
   3d300:	ldr	r1, [fp, #8]
   3d304:	sdiv	r0, r0, r1
   3d308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d30c:	cmp	r0, r1
   3d310:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d314:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d318:	ldr	r0, [fp, #8]
   3d31c:	cmp	r0, #0
   3d320:	bne	3d328 <__assert_fail@plt+0x2be94>
   3d324:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d32c:	cmp	r0, #0
   3d330:	bge	3d3a0 <__assert_fail@plt+0x2bf0c>
   3d334:	b	3d338 <__assert_fail@plt+0x2bea4>
   3d338:	b	3d384 <__assert_fail@plt+0x2bef0>
   3d33c:	b	3d384 <__assert_fail@plt+0x2bef0>
   3d340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d344:	cmn	r0, #1
   3d348:	bne	3d384 <__assert_fail@plt+0x2bef0>
   3d34c:	b	3d350 <__assert_fail@plt+0x2bebc>
   3d350:	ldr	r0, [pc, #3916]	; 3e2a4 <__assert_fail@plt+0x2ce10>
   3d354:	ldr	r1, [fp, #8]
   3d358:	add	r0, r1, r0
   3d35c:	movw	r1, #0
   3d360:	cmp	r1, r0
   3d364:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d368:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d36c:	ldr	r0, [fp, #8]
   3d370:	sub	r0, r0, #1
   3d374:	movw	r1, #32767	; 0x7fff
   3d378:	cmp	r1, r0
   3d37c:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d380:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d384:	ldr	r0, [pc, #3864]	; 3e2a4 <__assert_fail@plt+0x2ce10>
   3d388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d38c:	sdiv	r0, r0, r1
   3d390:	ldr	r1, [fp, #8]
   3d394:	cmp	r0, r1
   3d398:	blt	3d3b8 <__assert_fail@plt+0x2bf24>
   3d39c:	b	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d3a0:	ldr	r0, [fp, #8]
   3d3a4:	movw	r1, #32767	; 0x7fff
   3d3a8:	sdiv	r0, r1, r0
   3d3ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d3b0:	cmp	r0, r1
   3d3b4:	bge	3d3d0 <__assert_fail@plt+0x2bf3c>
   3d3b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d3bc:	ldr	r1, [fp, #8]
   3d3c0:	mul	r0, r0, r1
   3d3c4:	sxth	r0, r0
   3d3c8:	str	r0, [fp, #-28]	; 0xffffffe4
   3d3cc:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3d3d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d3d4:	ldr	r1, [fp, #8]
   3d3d8:	mul	r0, r0, r1
   3d3dc:	sxth	r0, r0
   3d3e0:	str	r0, [fp, #-28]	; 0xffffffe4
   3d3e4:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3d3e8:	ldr	r0, [fp, #8]
   3d3ec:	cmp	r0, #0
   3d3f0:	bge	3d500 <__assert_fail@plt+0x2c06c>
   3d3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d3f8:	cmp	r0, #0
   3d3fc:	bge	3d488 <__assert_fail@plt+0x2bff4>
   3d400:	b	3d404 <__assert_fail@plt+0x2bf70>
   3d404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d408:	ldr	r1, [fp, #8]
   3d40c:	movw	r2, #65535	; 0xffff
   3d410:	sdiv	r1, r2, r1
   3d414:	cmp	r0, r1
   3d418:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d41c:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d420:	b	3d424 <__assert_fail@plt+0x2bf90>
   3d424:	ldr	r0, [pc, #2608]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3d428:	ldr	r1, [fp, #8]
   3d42c:	cmp	r1, r0
   3d430:	blt	3d448 <__assert_fail@plt+0x2bfb4>
   3d434:	b	3d454 <__assert_fail@plt+0x2bfc0>
   3d438:	ldr	r0, [fp, #8]
   3d43c:	movw	r1, #0
   3d440:	cmp	r1, r0
   3d444:	bge	3d454 <__assert_fail@plt+0x2bfc0>
   3d448:	movw	r0, #0
   3d44c:	str	r0, [fp, #-48]	; 0xffffffd0
   3d450:	b	3d46c <__assert_fail@plt+0x2bfd8>
   3d454:	ldr	r0, [fp, #8]
   3d458:	movw	r1, #0
   3d45c:	sub	r0, r1, r0
   3d460:	movw	r1, #65535	; 0xffff
   3d464:	sdiv	r0, r1, r0
   3d468:	str	r0, [fp, #-48]	; 0xffffffd0
   3d46c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d474:	mvn	r2, #0
   3d478:	sub	r1, r2, r1
   3d47c:	cmp	r0, r1
   3d480:	ble	3d59c <__assert_fail@plt+0x2c108>
   3d484:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d488:	b	3d48c <__assert_fail@plt+0x2bff8>
   3d48c:	b	3d4e4 <__assert_fail@plt+0x2c050>
   3d490:	b	3d4e4 <__assert_fail@plt+0x2c050>
   3d494:	ldr	r0, [fp, #8]
   3d498:	cmn	r0, #1
   3d49c:	bne	3d4e4 <__assert_fail@plt+0x2c050>
   3d4a0:	b	3d4a4 <__assert_fail@plt+0x2c010>
   3d4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d4a8:	add	r0, r0, #0
   3d4ac:	movw	r1, #0
   3d4b0:	cmp	r1, r0
   3d4b4:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d4b8:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d4c0:	movw	r1, #0
   3d4c4:	cmp	r1, r0
   3d4c8:	bge	3d5b4 <__assert_fail@plt+0x2c120>
   3d4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d4d0:	sub	r0, r0, #1
   3d4d4:	mvn	r1, #0
   3d4d8:	cmp	r1, r0
   3d4dc:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d4e0:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d4e4:	ldr	r0, [fp, #8]
   3d4e8:	movw	r1, #0
   3d4ec:	sdiv	r0, r1, r0
   3d4f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d4f4:	cmp	r0, r1
   3d4f8:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d4fc:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d500:	ldr	r0, [fp, #8]
   3d504:	cmp	r0, #0
   3d508:	bne	3d510 <__assert_fail@plt+0x2c07c>
   3d50c:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d514:	cmp	r0, #0
   3d518:	bge	3d584 <__assert_fail@plt+0x2c0f0>
   3d51c:	b	3d520 <__assert_fail@plt+0x2c08c>
   3d520:	b	3d568 <__assert_fail@plt+0x2c0d4>
   3d524:	b	3d568 <__assert_fail@plt+0x2c0d4>
   3d528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d52c:	cmn	r0, #1
   3d530:	bne	3d568 <__assert_fail@plt+0x2c0d4>
   3d534:	b	3d538 <__assert_fail@plt+0x2c0a4>
   3d538:	ldr	r0, [fp, #8]
   3d53c:	add	r0, r0, #0
   3d540:	movw	r1, #0
   3d544:	cmp	r1, r0
   3d548:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d54c:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d550:	ldr	r0, [fp, #8]
   3d554:	sub	r0, r0, #1
   3d558:	mvn	r1, #0
   3d55c:	cmp	r1, r0
   3d560:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d564:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d56c:	movw	r1, #0
   3d570:	sdiv	r0, r1, r0
   3d574:	ldr	r1, [fp, #8]
   3d578:	cmp	r0, r1
   3d57c:	blt	3d59c <__assert_fail@plt+0x2c108>
   3d580:	b	3d5b4 <__assert_fail@plt+0x2c120>
   3d584:	ldr	r0, [fp, #8]
   3d588:	movw	r1, #65535	; 0xffff
   3d58c:	sdiv	r0, r1, r0
   3d590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d594:	cmp	r0, r1
   3d598:	bge	3d5b4 <__assert_fail@plt+0x2c120>
   3d59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d5a0:	ldr	r1, [fp, #8]
   3d5a4:	mul	r0, r0, r1
   3d5a8:	uxth	r0, r0
   3d5ac:	str	r0, [fp, #-28]	; 0xffffffe4
   3d5b0:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3d5b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d5b8:	ldr	r1, [fp, #8]
   3d5bc:	mul	r0, r0, r1
   3d5c0:	uxth	r0, r0
   3d5c4:	str	r0, [fp, #-28]	; 0xffffffe4
   3d5c8:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3d5cc:	b	3d5d0 <__assert_fail@plt+0x2c13c>
   3d5d0:	b	3d5d4 <__assert_fail@plt+0x2c140>
   3d5d4:	ldr	r0, [fp, #8]
   3d5d8:	cmp	r0, #0
   3d5dc:	bge	3d6e0 <__assert_fail@plt+0x2c24c>
   3d5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d5e4:	cmp	r0, #0
   3d5e8:	bge	3d674 <__assert_fail@plt+0x2c1e0>
   3d5ec:	b	3d5f0 <__assert_fail@plt+0x2c15c>
   3d5f0:	ldr	r0, [pc, #1984]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d5f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d5f8:	ldr	r2, [fp, #8]
   3d5fc:	sdiv	r0, r0, r2
   3d600:	cmp	r1, r0
   3d604:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d608:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d60c:	b	3d610 <__assert_fail@plt+0x2c17c>
   3d610:	ldr	r0, [pc, #2116]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3d614:	ldr	r1, [fp, #8]
   3d618:	cmp	r1, r0
   3d61c:	blt	3d634 <__assert_fail@plt+0x2c1a0>
   3d620:	b	3d640 <__assert_fail@plt+0x2c1ac>
   3d624:	ldr	r0, [fp, #8]
   3d628:	movw	r1, #0
   3d62c:	cmp	r1, r0
   3d630:	bge	3d640 <__assert_fail@plt+0x2c1ac>
   3d634:	movw	r0, #0
   3d638:	str	r0, [fp, #-52]	; 0xffffffcc
   3d63c:	b	3d658 <__assert_fail@plt+0x2c1c4>
   3d640:	ldr	r0, [pc, #1904]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d644:	ldr	r1, [fp, #8]
   3d648:	movw	r2, #0
   3d64c:	sub	r1, r2, r1
   3d650:	sdiv	r0, r0, r1
   3d654:	str	r0, [fp, #-52]	; 0xffffffcc
   3d658:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3d65c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d660:	mvn	r2, #0
   3d664:	sub	r1, r2, r1
   3d668:	cmp	r0, r1
   3d66c:	ble	3d770 <__assert_fail@plt+0x2c2dc>
   3d670:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d674:	ldr	r0, [fp, #8]
   3d678:	cmn	r0, #1
   3d67c:	bne	3d6c4 <__assert_fail@plt+0x2c230>
   3d680:	b	3d684 <__assert_fail@plt+0x2c1f0>
   3d684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d688:	add	r0, r0, #-2147483648	; 0x80000000
   3d68c:	movw	r1, #0
   3d690:	cmp	r1, r0
   3d694:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d698:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d6a0:	movw	r1, #0
   3d6a4:	cmp	r1, r0
   3d6a8:	bge	3d784 <__assert_fail@plt+0x2c2f0>
   3d6ac:	ldr	r0, [pc, #1796]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d6b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d6b4:	sub	r1, r1, #1
   3d6b8:	cmp	r0, r1
   3d6bc:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d6c0:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d6c4:	ldr	r0, [pc, #4080]	; 3e6bc <__assert_fail@plt+0x2d228>
   3d6c8:	ldr	r1, [fp, #8]
   3d6cc:	sdiv	r0, r0, r1
   3d6d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d6d4:	cmp	r0, r1
   3d6d8:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d6dc:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d6e0:	ldr	r0, [fp, #8]
   3d6e4:	cmp	r0, #0
   3d6e8:	bne	3d6f0 <__assert_fail@plt+0x2c25c>
   3d6ec:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d6f4:	cmp	r0, #0
   3d6f8:	bge	3d758 <__assert_fail@plt+0x2c2c4>
   3d6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d700:	cmn	r0, #1
   3d704:	bne	3d73c <__assert_fail@plt+0x2c2a8>
   3d708:	b	3d70c <__assert_fail@plt+0x2c278>
   3d70c:	ldr	r0, [fp, #8]
   3d710:	add	r0, r0, #-2147483648	; 0x80000000
   3d714:	movw	r1, #0
   3d718:	cmp	r1, r0
   3d71c:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d720:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d724:	ldr	r0, [pc, #1676]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d728:	ldr	r1, [fp, #8]
   3d72c:	sub	r1, r1, #1
   3d730:	cmp	r0, r1
   3d734:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d738:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d73c:	ldr	r0, [pc, #3960]	; 3e6bc <__assert_fail@plt+0x2d228>
   3d740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d744:	sdiv	r0, r0, r1
   3d748:	ldr	r1, [fp, #8]
   3d74c:	cmp	r0, r1
   3d750:	blt	3d770 <__assert_fail@plt+0x2c2dc>
   3d754:	b	3d784 <__assert_fail@plt+0x2c2f0>
   3d758:	ldr	r0, [pc, #1624]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d75c:	ldr	r1, [fp, #8]
   3d760:	sdiv	r0, r0, r1
   3d764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d768:	cmp	r0, r1
   3d76c:	bge	3d784 <__assert_fail@plt+0x2c2f0>
   3d770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d774:	ldr	r1, [fp, #8]
   3d778:	mul	r0, r0, r1
   3d77c:	str	r0, [fp, #-28]	; 0xffffffe4
   3d780:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3d784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d788:	ldr	r1, [fp, #8]
   3d78c:	mul	r0, r0, r1
   3d790:	str	r0, [fp, #-28]	; 0xffffffe4
   3d794:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3d798:	ldr	r0, [fp, #8]
   3d79c:	cmp	r0, #0
   3d7a0:	bge	3d8b0 <__assert_fail@plt+0x2c41c>
   3d7a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d7a8:	cmp	r0, #0
   3d7ac:	bge	3d838 <__assert_fail@plt+0x2c3a4>
   3d7b0:	b	3d7d0 <__assert_fail@plt+0x2c33c>
   3d7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d7b8:	ldr	r1, [fp, #8]
   3d7bc:	mvn	r2, #0
   3d7c0:	udiv	r1, r2, r1
   3d7c4:	cmp	r0, r1
   3d7c8:	bcc	3d94c <__assert_fail@plt+0x2c4b8>
   3d7cc:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d7d0:	b	3d7d4 <__assert_fail@plt+0x2c340>
   3d7d4:	ldr	r0, [pc, #1664]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3d7d8:	ldr	r1, [fp, #8]
   3d7dc:	cmp	r1, r0
   3d7e0:	blt	3d7f8 <__assert_fail@plt+0x2c364>
   3d7e4:	b	3d804 <__assert_fail@plt+0x2c370>
   3d7e8:	ldr	r0, [fp, #8]
   3d7ec:	movw	r1, #0
   3d7f0:	cmp	r1, r0
   3d7f4:	bge	3d804 <__assert_fail@plt+0x2c370>
   3d7f8:	movw	r0, #1
   3d7fc:	str	r0, [fp, #-56]	; 0xffffffc8
   3d800:	b	3d81c <__assert_fail@plt+0x2c388>
   3d804:	ldr	r0, [fp, #8]
   3d808:	movw	r1, #0
   3d80c:	sub	r0, r1, r0
   3d810:	mvn	r1, #0
   3d814:	udiv	r0, r1, r0
   3d818:	str	r0, [fp, #-56]	; 0xffffffc8
   3d81c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d824:	mvn	r2, #0
   3d828:	sub	r1, r2, r1
   3d82c:	cmp	r0, r1
   3d830:	bls	3d94c <__assert_fail@plt+0x2c4b8>
   3d834:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d838:	b	3d83c <__assert_fail@plt+0x2c3a8>
   3d83c:	b	3d894 <__assert_fail@plt+0x2c400>
   3d840:	b	3d894 <__assert_fail@plt+0x2c400>
   3d844:	ldr	r0, [fp, #8]
   3d848:	cmn	r0, #1
   3d84c:	bne	3d894 <__assert_fail@plt+0x2c400>
   3d850:	b	3d854 <__assert_fail@plt+0x2c3c0>
   3d854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d858:	add	r0, r0, #0
   3d85c:	movw	r1, #0
   3d860:	cmp	r1, r0
   3d864:	blt	3d94c <__assert_fail@plt+0x2c4b8>
   3d868:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d870:	movw	r1, #0
   3d874:	cmp	r1, r0
   3d878:	bge	3d960 <__assert_fail@plt+0x2c4cc>
   3d87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d880:	sub	r0, r0, #1
   3d884:	mvn	r1, #0
   3d888:	cmp	r1, r0
   3d88c:	blt	3d94c <__assert_fail@plt+0x2c4b8>
   3d890:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d894:	ldr	r0, [fp, #8]
   3d898:	movw	r1, #0
   3d89c:	sdiv	r0, r1, r0
   3d8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d8a4:	cmp	r0, r1
   3d8a8:	blt	3d94c <__assert_fail@plt+0x2c4b8>
   3d8ac:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d8b0:	ldr	r0, [fp, #8]
   3d8b4:	cmp	r0, #0
   3d8b8:	bne	3d8c0 <__assert_fail@plt+0x2c42c>
   3d8bc:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d8c4:	cmp	r0, #0
   3d8c8:	bge	3d934 <__assert_fail@plt+0x2c4a0>
   3d8cc:	b	3d8d0 <__assert_fail@plt+0x2c43c>
   3d8d0:	b	3d918 <__assert_fail@plt+0x2c484>
   3d8d4:	b	3d918 <__assert_fail@plt+0x2c484>
   3d8d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d8dc:	cmn	r0, #1
   3d8e0:	bne	3d918 <__assert_fail@plt+0x2c484>
   3d8e4:	b	3d8e8 <__assert_fail@plt+0x2c454>
   3d8e8:	ldr	r0, [fp, #8]
   3d8ec:	add	r0, r0, #0
   3d8f0:	movw	r1, #0
   3d8f4:	cmp	r1, r0
   3d8f8:	blt	3d94c <__assert_fail@plt+0x2c4b8>
   3d8fc:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d900:	ldr	r0, [fp, #8]
   3d904:	sub	r0, r0, #1
   3d908:	mvn	r1, #0
   3d90c:	cmp	r1, r0
   3d910:	blt	3d94c <__assert_fail@plt+0x2c4b8>
   3d914:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d91c:	movw	r1, #0
   3d920:	sdiv	r0, r1, r0
   3d924:	ldr	r1, [fp, #8]
   3d928:	cmp	r0, r1
   3d92c:	blt	3d94c <__assert_fail@plt+0x2c4b8>
   3d930:	b	3d960 <__assert_fail@plt+0x2c4cc>
   3d934:	ldr	r0, [fp, #8]
   3d938:	mvn	r1, #0
   3d93c:	udiv	r0, r1, r0
   3d940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d944:	cmp	r0, r1
   3d948:	bcs	3d960 <__assert_fail@plt+0x2c4cc>
   3d94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d950:	ldr	r1, [fp, #8]
   3d954:	mul	r0, r0, r1
   3d958:	str	r0, [fp, #-28]	; 0xffffffe4
   3d95c:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3d960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d964:	ldr	r1, [fp, #8]
   3d968:	mul	r0, r0, r1
   3d96c:	str	r0, [fp, #-28]	; 0xffffffe4
   3d970:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3d974:	b	3d978 <__assert_fail@plt+0x2c4e4>
   3d978:	b	3d97c <__assert_fail@plt+0x2c4e8>
   3d97c:	ldr	r0, [fp, #8]
   3d980:	cmp	r0, #0
   3d984:	bge	3da88 <__assert_fail@plt+0x2c5f4>
   3d988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d98c:	cmp	r0, #0
   3d990:	bge	3da1c <__assert_fail@plt+0x2c588>
   3d994:	b	3d998 <__assert_fail@plt+0x2c504>
   3d998:	ldr	r0, [pc, #1048]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d99c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d9a0:	ldr	r2, [fp, #8]
   3d9a4:	sdiv	r0, r0, r2
   3d9a8:	cmp	r1, r0
   3d9ac:	blt	3db18 <__assert_fail@plt+0x2c684>
   3d9b0:	b	3db2c <__assert_fail@plt+0x2c698>
   3d9b4:	b	3d9b8 <__assert_fail@plt+0x2c524>
   3d9b8:	ldr	r0, [pc, #1180]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3d9bc:	ldr	r1, [fp, #8]
   3d9c0:	cmp	r1, r0
   3d9c4:	blt	3d9dc <__assert_fail@plt+0x2c548>
   3d9c8:	b	3d9e8 <__assert_fail@plt+0x2c554>
   3d9cc:	ldr	r0, [fp, #8]
   3d9d0:	movw	r1, #0
   3d9d4:	cmp	r1, r0
   3d9d8:	bge	3d9e8 <__assert_fail@plt+0x2c554>
   3d9dc:	movw	r0, #0
   3d9e0:	str	r0, [fp, #-60]	; 0xffffffc4
   3d9e4:	b	3da00 <__assert_fail@plt+0x2c56c>
   3d9e8:	ldr	r0, [pc, #968]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3d9ec:	ldr	r1, [fp, #8]
   3d9f0:	movw	r2, #0
   3d9f4:	sub	r1, r2, r1
   3d9f8:	sdiv	r0, r0, r1
   3d9fc:	str	r0, [fp, #-60]	; 0xffffffc4
   3da00:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3da04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3da08:	mvn	r2, #0
   3da0c:	sub	r1, r2, r1
   3da10:	cmp	r0, r1
   3da14:	ble	3db18 <__assert_fail@plt+0x2c684>
   3da18:	b	3db2c <__assert_fail@plt+0x2c698>
   3da1c:	ldr	r0, [fp, #8]
   3da20:	cmn	r0, #1
   3da24:	bne	3da6c <__assert_fail@plt+0x2c5d8>
   3da28:	b	3da2c <__assert_fail@plt+0x2c598>
   3da2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da30:	add	r0, r0, #-2147483648	; 0x80000000
   3da34:	movw	r1, #0
   3da38:	cmp	r1, r0
   3da3c:	blt	3db18 <__assert_fail@plt+0x2c684>
   3da40:	b	3db2c <__assert_fail@plt+0x2c698>
   3da44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da48:	movw	r1, #0
   3da4c:	cmp	r1, r0
   3da50:	bge	3db2c <__assert_fail@plt+0x2c698>
   3da54:	ldr	r0, [pc, #860]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3da58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3da5c:	sub	r1, r1, #1
   3da60:	cmp	r0, r1
   3da64:	blt	3db18 <__assert_fail@plt+0x2c684>
   3da68:	b	3db2c <__assert_fail@plt+0x2c698>
   3da6c:	ldr	r0, [pc, #3144]	; 3e6bc <__assert_fail@plt+0x2d228>
   3da70:	ldr	r1, [fp, #8]
   3da74:	sdiv	r0, r0, r1
   3da78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3da7c:	cmp	r0, r1
   3da80:	blt	3db18 <__assert_fail@plt+0x2c684>
   3da84:	b	3db2c <__assert_fail@plt+0x2c698>
   3da88:	ldr	r0, [fp, #8]
   3da8c:	cmp	r0, #0
   3da90:	bne	3da98 <__assert_fail@plt+0x2c604>
   3da94:	b	3db2c <__assert_fail@plt+0x2c698>
   3da98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da9c:	cmp	r0, #0
   3daa0:	bge	3db00 <__assert_fail@plt+0x2c66c>
   3daa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3daa8:	cmn	r0, #1
   3daac:	bne	3dae4 <__assert_fail@plt+0x2c650>
   3dab0:	b	3dab4 <__assert_fail@plt+0x2c620>
   3dab4:	ldr	r0, [fp, #8]
   3dab8:	add	r0, r0, #-2147483648	; 0x80000000
   3dabc:	movw	r1, #0
   3dac0:	cmp	r1, r0
   3dac4:	blt	3db18 <__assert_fail@plt+0x2c684>
   3dac8:	b	3db2c <__assert_fail@plt+0x2c698>
   3dacc:	ldr	r0, [pc, #740]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3dad0:	ldr	r1, [fp, #8]
   3dad4:	sub	r1, r1, #1
   3dad8:	cmp	r0, r1
   3dadc:	blt	3db18 <__assert_fail@plt+0x2c684>
   3dae0:	b	3db2c <__assert_fail@plt+0x2c698>
   3dae4:	ldr	r0, [pc, #3024]	; 3e6bc <__assert_fail@plt+0x2d228>
   3dae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3daec:	sdiv	r0, r0, r1
   3daf0:	ldr	r1, [fp, #8]
   3daf4:	cmp	r0, r1
   3daf8:	blt	3db18 <__assert_fail@plt+0x2c684>
   3dafc:	b	3db2c <__assert_fail@plt+0x2c698>
   3db00:	ldr	r0, [pc, #688]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3db04:	ldr	r1, [fp, #8]
   3db08:	sdiv	r0, r0, r1
   3db0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3db10:	cmp	r0, r1
   3db14:	bge	3db2c <__assert_fail@plt+0x2c698>
   3db18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db1c:	ldr	r1, [fp, #8]
   3db20:	mul	r0, r0, r1
   3db24:	str	r0, [fp, #-28]	; 0xffffffe4
   3db28:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3db2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db30:	ldr	r1, [fp, #8]
   3db34:	mul	r0, r0, r1
   3db38:	str	r0, [fp, #-28]	; 0xffffffe4
   3db3c:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3db40:	ldr	r0, [fp, #8]
   3db44:	cmp	r0, #0
   3db48:	bge	3dc58 <__assert_fail@plt+0x2c7c4>
   3db4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db50:	cmp	r0, #0
   3db54:	bge	3dbe0 <__assert_fail@plt+0x2c74c>
   3db58:	b	3db78 <__assert_fail@plt+0x2c6e4>
   3db5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db60:	ldr	r1, [fp, #8]
   3db64:	mvn	r2, #0
   3db68:	udiv	r1, r2, r1
   3db6c:	cmp	r0, r1
   3db70:	bcc	3dcf4 <__assert_fail@plt+0x2c860>
   3db74:	b	3dd08 <__assert_fail@plt+0x2c874>
   3db78:	b	3db7c <__assert_fail@plt+0x2c6e8>
   3db7c:	ldr	r0, [pc, #728]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3db80:	ldr	r1, [fp, #8]
   3db84:	cmp	r1, r0
   3db88:	blt	3dba0 <__assert_fail@plt+0x2c70c>
   3db8c:	b	3dbac <__assert_fail@plt+0x2c718>
   3db90:	ldr	r0, [fp, #8]
   3db94:	movw	r1, #0
   3db98:	cmp	r1, r0
   3db9c:	bge	3dbac <__assert_fail@plt+0x2c718>
   3dba0:	movw	r0, #1
   3dba4:	str	r0, [fp, #-64]	; 0xffffffc0
   3dba8:	b	3dbc4 <__assert_fail@plt+0x2c730>
   3dbac:	ldr	r0, [fp, #8]
   3dbb0:	movw	r1, #0
   3dbb4:	sub	r0, r1, r0
   3dbb8:	mvn	r1, #0
   3dbbc:	udiv	r0, r1, r0
   3dbc0:	str	r0, [fp, #-64]	; 0xffffffc0
   3dbc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3dbc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dbcc:	mvn	r2, #0
   3dbd0:	sub	r1, r2, r1
   3dbd4:	cmp	r0, r1
   3dbd8:	bls	3dcf4 <__assert_fail@plt+0x2c860>
   3dbdc:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dbe0:	b	3dbe4 <__assert_fail@plt+0x2c750>
   3dbe4:	b	3dc3c <__assert_fail@plt+0x2c7a8>
   3dbe8:	b	3dc3c <__assert_fail@plt+0x2c7a8>
   3dbec:	ldr	r0, [fp, #8]
   3dbf0:	cmn	r0, #1
   3dbf4:	bne	3dc3c <__assert_fail@plt+0x2c7a8>
   3dbf8:	b	3dbfc <__assert_fail@plt+0x2c768>
   3dbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc00:	add	r0, r0, #0
   3dc04:	movw	r1, #0
   3dc08:	cmp	r1, r0
   3dc0c:	blt	3dcf4 <__assert_fail@plt+0x2c860>
   3dc10:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dc14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc18:	movw	r1, #0
   3dc1c:	cmp	r1, r0
   3dc20:	bge	3dd08 <__assert_fail@plt+0x2c874>
   3dc24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc28:	sub	r0, r0, #1
   3dc2c:	mvn	r1, #0
   3dc30:	cmp	r1, r0
   3dc34:	blt	3dcf4 <__assert_fail@plt+0x2c860>
   3dc38:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dc3c:	ldr	r0, [fp, #8]
   3dc40:	movw	r1, #0
   3dc44:	sdiv	r0, r1, r0
   3dc48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dc4c:	cmp	r0, r1
   3dc50:	blt	3dcf4 <__assert_fail@plt+0x2c860>
   3dc54:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dc58:	ldr	r0, [fp, #8]
   3dc5c:	cmp	r0, #0
   3dc60:	bne	3dc68 <__assert_fail@plt+0x2c7d4>
   3dc64:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dc68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc6c:	cmp	r0, #0
   3dc70:	bge	3dcdc <__assert_fail@plt+0x2c848>
   3dc74:	b	3dc78 <__assert_fail@plt+0x2c7e4>
   3dc78:	b	3dcc0 <__assert_fail@plt+0x2c82c>
   3dc7c:	b	3dcc0 <__assert_fail@plt+0x2c82c>
   3dc80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc84:	cmn	r0, #1
   3dc88:	bne	3dcc0 <__assert_fail@plt+0x2c82c>
   3dc8c:	b	3dc90 <__assert_fail@plt+0x2c7fc>
   3dc90:	ldr	r0, [fp, #8]
   3dc94:	add	r0, r0, #0
   3dc98:	movw	r1, #0
   3dc9c:	cmp	r1, r0
   3dca0:	blt	3dcf4 <__assert_fail@plt+0x2c860>
   3dca4:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dca8:	ldr	r0, [fp, #8]
   3dcac:	sub	r0, r0, #1
   3dcb0:	mvn	r1, #0
   3dcb4:	cmp	r1, r0
   3dcb8:	blt	3dcf4 <__assert_fail@plt+0x2c860>
   3dcbc:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dcc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dcc4:	movw	r1, #0
   3dcc8:	sdiv	r0, r1, r0
   3dccc:	ldr	r1, [fp, #8]
   3dcd0:	cmp	r0, r1
   3dcd4:	blt	3dcf4 <__assert_fail@plt+0x2c860>
   3dcd8:	b	3dd08 <__assert_fail@plt+0x2c874>
   3dcdc:	ldr	r0, [fp, #8]
   3dce0:	mvn	r1, #0
   3dce4:	udiv	r0, r1, r0
   3dce8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dcec:	cmp	r0, r1
   3dcf0:	bcs	3dd08 <__assert_fail@plt+0x2c874>
   3dcf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dcf8:	ldr	r1, [fp, #8]
   3dcfc:	mul	r0, r0, r1
   3dd00:	str	r0, [fp, #-28]	; 0xffffffe4
   3dd04:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3dd08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd0c:	ldr	r1, [fp, #8]
   3dd10:	mul	r0, r0, r1
   3dd14:	str	r0, [fp, #-28]	; 0xffffffe4
   3dd18:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3dd1c:	b	3dd20 <__assert_fail@plt+0x2c88c>
   3dd20:	ldr	r0, [fp, #8]
   3dd24:	cmp	r0, #0
   3dd28:	bge	3de98 <__assert_fail@plt+0x2ca04>
   3dd2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd30:	cmp	r0, #0
   3dd34:	bge	3de10 <__assert_fail@plt+0x2c97c>
   3dd38:	b	3dd3c <__assert_fail@plt+0x2c8a8>
   3dd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd40:	ldr	r1, [fp, #8]
   3dd44:	asr	r3, r1, #31
   3dd48:	mvn	r2, #0
   3dd4c:	mvn	ip, #-2147483648	; 0x80000000
   3dd50:	str	r0, [fp, #-68]	; 0xffffffbc
   3dd54:	mov	r0, r2
   3dd58:	str	r1, [fp, #-72]	; 0xffffffb8
   3dd5c:	mov	r1, ip
   3dd60:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3dd64:	bl	43238 <__assert_fail@plt+0x31da4>
   3dd68:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3dd6c:	subs	r0, r2, r0
   3dd70:	rscs	r1, r1, r2, asr #31
   3dd74:	blt	3df60 <__assert_fail@plt+0x2cacc>
   3dd78:	b	3df74 <__assert_fail@plt+0x2cae0>
   3dd7c:	b	3dd80 <__assert_fail@plt+0x2c8ec>
   3dd80:	ldr	r0, [pc, #212]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3dd84:	ldr	r1, [fp, #8]
   3dd88:	cmp	r1, r0
   3dd8c:	blt	3dda4 <__assert_fail@plt+0x2c910>
   3dd90:	b	3ddbc <__assert_fail@plt+0x2c928>
   3dd94:	ldr	r0, [fp, #8]
   3dd98:	movw	r1, #0
   3dd9c:	cmp	r1, r0
   3dda0:	bge	3ddbc <__assert_fail@plt+0x2c928>
   3dda4:	mov	r0, #0
   3dda8:	mvn	r1, #0
   3ddac:	str	r1, [fp, #-76]	; 0xffffffb4
   3ddb0:	str	r0, [fp, #-80]	; 0xffffffb0
   3ddb4:	b	3ddf0 <__assert_fail@plt+0x2c95c>
   3ddb8:	svcvc	0x00ffffff
   3ddbc:	ldr	r0, [fp, #8]
   3ddc0:	rsb	r0, r0, #0
   3ddc4:	asr	r3, r0, #31
   3ddc8:	mvn	r1, #0
   3ddcc:	mvn	r2, #-2147483648	; 0x80000000
   3ddd0:	str	r0, [fp, #-84]	; 0xffffffac
   3ddd4:	mov	r0, r1
   3ddd8:	mov	r1, r2
   3dddc:	ldr	r2, [fp, #-84]	; 0xffffffac
   3dde0:	bl	43238 <__assert_fail@plt+0x31da4>
   3dde4:	str	r0, [fp, #-76]	; 0xffffffb4
   3dde8:	str	r1, [fp, #-80]	; 0xffffffb0
   3ddec:	b	3ddf0 <__assert_fail@plt+0x2c95c>
   3ddf0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   3ddf4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   3ddf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ddfc:	mvn	r2, r2
   3de00:	subs	r1, r2, r1
   3de04:	rscs	r0, r0, r2, asr #31
   3de08:	bge	3df60 <__assert_fail@plt+0x2cacc>
   3de0c:	b	3df74 <__assert_fail@plt+0x2cae0>
   3de10:	ldr	r0, [fp, #8]
   3de14:	cmn	r0, #1
   3de18:	bne	3de60 <__assert_fail@plt+0x2c9cc>
   3de1c:	b	3de20 <__assert_fail@plt+0x2c98c>
   3de20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de24:	mov	r1, #-2147483648	; 0x80000000
   3de28:	add	r1, r1, r0, asr #31
   3de2c:	rsbs	r0, r0, #0
   3de30:	rscs	r1, r1, #0
   3de34:	blt	3df60 <__assert_fail@plt+0x2cacc>
   3de38:	b	3df74 <__assert_fail@plt+0x2cae0>
   3de3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de40:	movw	r1, #0
   3de44:	cmp	r1, r0
   3de48:	bge	3df74 <__assert_fail@plt+0x2cae0>
   3de4c:	mov	r0, #0
   3de50:	cmp	r0, #0
   3de54:	bne	3df60 <__assert_fail@plt+0x2cacc>
   3de58:	b	3df74 <__assert_fail@plt+0x2cae0>
   3de5c:	andhi	r0, r0, r1
   3de60:	ldr	r0, [fp, #8]
   3de64:	asr	r3, r0, #31
   3de68:	mov	r1, #0
   3de6c:	mov	r2, #-2147483648	; 0x80000000
   3de70:	str	r0, [fp, #-88]	; 0xffffffa8
   3de74:	mov	r0, r1
   3de78:	mov	r1, r2
   3de7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3de80:	bl	43238 <__assert_fail@plt+0x31da4>
   3de84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3de88:	subs	r0, r0, r2
   3de8c:	sbcs	r1, r1, r2, asr #31
   3de90:	blt	3df60 <__assert_fail@plt+0x2cacc>
   3de94:	b	3df74 <__assert_fail@plt+0x2cae0>
   3de98:	ldr	r0, [fp, #8]
   3de9c:	cmp	r0, #0
   3dea0:	bne	3dea8 <__assert_fail@plt+0x2ca14>
   3dea4:	b	3df74 <__assert_fail@plt+0x2cae0>
   3dea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3deac:	cmp	r0, #0
   3deb0:	bge	3df28 <__assert_fail@plt+0x2ca94>
   3deb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3deb8:	cmn	r0, #1
   3debc:	bne	3def0 <__assert_fail@plt+0x2ca5c>
   3dec0:	b	3dec4 <__assert_fail@plt+0x2ca30>
   3dec4:	ldr	r0, [fp, #8]
   3dec8:	mov	r1, #-2147483648	; 0x80000000
   3decc:	add	r1, r1, r0, asr #31
   3ded0:	rsbs	r0, r0, #0
   3ded4:	rscs	r1, r1, #0
   3ded8:	blt	3df60 <__assert_fail@plt+0x2cacc>
   3dedc:	b	3df74 <__assert_fail@plt+0x2cae0>
   3dee0:	mov	r0, #0
   3dee4:	cmp	r0, #0
   3dee8:	bne	3df60 <__assert_fail@plt+0x2cacc>
   3deec:	b	3df74 <__assert_fail@plt+0x2cae0>
   3def0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3def4:	asr	r3, r0, #31
   3def8:	mov	r1, #0
   3defc:	mov	r2, #-2147483648	; 0x80000000
   3df00:	str	r0, [fp, #-92]	; 0xffffffa4
   3df04:	mov	r0, r1
   3df08:	mov	r1, r2
   3df0c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   3df10:	bl	43238 <__assert_fail@plt+0x31da4>
   3df14:	ldr	r2, [fp, #8]
   3df18:	subs	r0, r0, r2
   3df1c:	sbcs	r1, r1, r2, asr #31
   3df20:	blt	3df60 <__assert_fail@plt+0x2cacc>
   3df24:	b	3df74 <__assert_fail@plt+0x2cae0>
   3df28:	ldr	r0, [fp, #8]
   3df2c:	asr	r3, r0, #31
   3df30:	mvn	r1, #0
   3df34:	mvn	r2, #-2147483648	; 0x80000000
   3df38:	str	r0, [fp, #-96]	; 0xffffffa0
   3df3c:	mov	r0, r1
   3df40:	mov	r1, r2
   3df44:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3df48:	bl	43238 <__assert_fail@plt+0x31da4>
   3df4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3df50:	subs	r0, r0, r2
   3df54:	sbcs	r1, r1, r2, asr #31
   3df58:	bge	3df74 <__assert_fail@plt+0x2cae0>
   3df5c:	b	3df60 <__assert_fail@plt+0x2cacc>
   3df60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df64:	ldr	r1, [fp, #8]
   3df68:	mul	r0, r0, r1
   3df6c:	str	r0, [fp, #-28]	; 0xffffffe4
   3df70:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3df74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df78:	ldr	r1, [fp, #8]
   3df7c:	mul	r0, r0, r1
   3df80:	str	r0, [fp, #-28]	; 0xffffffe4
   3df84:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3df88:	ldr	r0, [fp, #8]
   3df8c:	cmp	r0, #0
   3df90:	bge	3e0e0 <__assert_fail@plt+0x2cc4c>
   3df94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df98:	cmp	r0, #0
   3df9c:	bge	3e068 <__assert_fail@plt+0x2cbd4>
   3dfa0:	b	3dfe0 <__assert_fail@plt+0x2cb4c>
   3dfa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dfa8:	ldr	r1, [fp, #8]
   3dfac:	asr	r3, r1, #31
   3dfb0:	mvn	r2, #0
   3dfb4:	str	r0, [fp, #-100]	; 0xffffff9c
   3dfb8:	mov	r0, r2
   3dfbc:	str	r1, [fp, #-104]	; 0xffffff98
   3dfc0:	mov	r1, r2
   3dfc4:	ldr	r2, [fp, #-104]	; 0xffffff98
   3dfc8:	bl	4330c <__assert_fail@plt+0x31e78>
   3dfcc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3dfd0:	subs	r0, r2, r0
   3dfd4:	rscs	r1, r1, r2, asr #31
   3dfd8:	bcc	3e194 <__assert_fail@plt+0x2cd00>
   3dfdc:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3dfe0:	b	3dfe4 <__assert_fail@plt+0x2cb50>
   3dfe4:	ldr	r0, [pc, #-400]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3dfe8:	ldr	r1, [fp, #8]
   3dfec:	cmp	r1, r0
   3dff0:	blt	3e008 <__assert_fail@plt+0x2cb74>
   3dff4:	b	3e01c <__assert_fail@plt+0x2cb88>
   3dff8:	ldr	r0, [fp, #8]
   3dffc:	movw	r1, #0
   3e000:	cmp	r1, r0
   3e004:	bge	3e01c <__assert_fail@plt+0x2cb88>
   3e008:	mov	r0, #1
   3e00c:	mvn	r1, #0
   3e010:	str	r1, [sp, #108]	; 0x6c
   3e014:	str	r0, [sp, #104]	; 0x68
   3e018:	b	3e048 <__assert_fail@plt+0x2cbb4>
   3e01c:	ldr	r0, [fp, #8]
   3e020:	rsb	r0, r0, #0
   3e024:	asr	r3, r0, #31
   3e028:	mvn	r1, #0
   3e02c:	str	r0, [sp, #100]	; 0x64
   3e030:	mov	r0, r1
   3e034:	ldr	r2, [sp, #100]	; 0x64
   3e038:	bl	4330c <__assert_fail@plt+0x31e78>
   3e03c:	str	r0, [sp, #108]	; 0x6c
   3e040:	str	r1, [sp, #104]	; 0x68
   3e044:	b	3e048 <__assert_fail@plt+0x2cbb4>
   3e048:	ldr	r0, [sp, #104]	; 0x68
   3e04c:	ldr	r1, [sp, #108]	; 0x6c
   3e050:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e054:	mvn	r2, r2
   3e058:	subs	r1, r2, r1
   3e05c:	rscs	r0, r0, r2, asr #31
   3e060:	bcs	3e194 <__assert_fail@plt+0x2cd00>
   3e064:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e068:	b	3e06c <__assert_fail@plt+0x2cbd8>
   3e06c:	b	3e0c4 <__assert_fail@plt+0x2cc30>
   3e070:	b	3e0c4 <__assert_fail@plt+0x2cc30>
   3e074:	ldr	r0, [fp, #8]
   3e078:	cmn	r0, #1
   3e07c:	bne	3e0c4 <__assert_fail@plt+0x2cc30>
   3e080:	b	3e084 <__assert_fail@plt+0x2cbf0>
   3e084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e088:	add	r0, r0, #0
   3e08c:	movw	r1, #0
   3e090:	cmp	r1, r0
   3e094:	blt	3e194 <__assert_fail@plt+0x2cd00>
   3e098:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e0a0:	movw	r1, #0
   3e0a4:	cmp	r1, r0
   3e0a8:	bge	3e1a8 <__assert_fail@plt+0x2cd14>
   3e0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e0b0:	sub	r0, r0, #1
   3e0b4:	mvn	r1, #0
   3e0b8:	cmp	r1, r0
   3e0bc:	blt	3e194 <__assert_fail@plt+0x2cd00>
   3e0c0:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e0c4:	ldr	r0, [fp, #8]
   3e0c8:	movw	r1, #0
   3e0cc:	sdiv	r0, r1, r0
   3e0d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e0d4:	cmp	r0, r1
   3e0d8:	blt	3e194 <__assert_fail@plt+0x2cd00>
   3e0dc:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e0e0:	ldr	r0, [fp, #8]
   3e0e4:	cmp	r0, #0
   3e0e8:	bne	3e0f0 <__assert_fail@plt+0x2cc5c>
   3e0ec:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e0f4:	cmp	r0, #0
   3e0f8:	bge	3e164 <__assert_fail@plt+0x2ccd0>
   3e0fc:	b	3e100 <__assert_fail@plt+0x2cc6c>
   3e100:	b	3e148 <__assert_fail@plt+0x2ccb4>
   3e104:	b	3e148 <__assert_fail@plt+0x2ccb4>
   3e108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e10c:	cmn	r0, #1
   3e110:	bne	3e148 <__assert_fail@plt+0x2ccb4>
   3e114:	b	3e118 <__assert_fail@plt+0x2cc84>
   3e118:	ldr	r0, [fp, #8]
   3e11c:	add	r0, r0, #0
   3e120:	movw	r1, #0
   3e124:	cmp	r1, r0
   3e128:	blt	3e194 <__assert_fail@plt+0x2cd00>
   3e12c:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e130:	ldr	r0, [fp, #8]
   3e134:	sub	r0, r0, #1
   3e138:	mvn	r1, #0
   3e13c:	cmp	r1, r0
   3e140:	blt	3e194 <__assert_fail@plt+0x2cd00>
   3e144:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e14c:	movw	r1, #0
   3e150:	sdiv	r0, r1, r0
   3e154:	ldr	r1, [fp, #8]
   3e158:	cmp	r0, r1
   3e15c:	blt	3e194 <__assert_fail@plt+0x2cd00>
   3e160:	b	3e1a8 <__assert_fail@plt+0x2cd14>
   3e164:	ldr	r0, [fp, #8]
   3e168:	asr	r3, r0, #31
   3e16c:	mvn	r1, #0
   3e170:	str	r0, [sp, #96]	; 0x60
   3e174:	mov	r0, r1
   3e178:	ldr	r2, [sp, #96]	; 0x60
   3e17c:	bl	4330c <__assert_fail@plt+0x31e78>
   3e180:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e184:	subs	r0, r0, r2
   3e188:	sbcs	r1, r1, r2, asr #31
   3e18c:	bcs	3e1a8 <__assert_fail@plt+0x2cd14>
   3e190:	b	3e194 <__assert_fail@plt+0x2cd00>
   3e194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e198:	ldr	r1, [fp, #8]
   3e19c:	mul	r0, r0, r1
   3e1a0:	str	r0, [fp, #-28]	; 0xffffffe4
   3e1a4:	b	3e1bc <__assert_fail@plt+0x2cd28>
   3e1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e1ac:	ldr	r1, [fp, #8]
   3e1b0:	mul	r0, r0, r1
   3e1b4:	str	r0, [fp, #-28]	; 0xffffffe4
   3e1b8:	b	3e1c8 <__assert_fail@plt+0x2cd34>
   3e1bc:	ldr	r0, [pc, #-1036]	; 3ddb8 <__assert_fail@plt+0x2c924>
   3e1c0:	str	r0, [sp, #92]	; 0x5c
   3e1c4:	b	3e1e8 <__assert_fail@plt+0x2cd54>
   3e1c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3e1cc:	cmp	r0, #64	; 0x40
   3e1d0:	movw	r0, #0
   3e1d4:	movlt	r0, #1
   3e1d8:	tst	r0, #1
   3e1dc:	movw	r0, #64	; 0x40
   3e1e0:	moveq	r0, #0
   3e1e4:	str	r0, [sp, #92]	; 0x5c
   3e1e8:	ldr	r0, [sp, #92]	; 0x5c
   3e1ec:	str	r0, [fp, #-32]	; 0xffffffe0
   3e1f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e1f4:	cmp	r0, #0
   3e1f8:	beq	3e228 <__assert_fail@plt+0x2cd94>
   3e1fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e200:	ldr	r1, [fp, #8]
   3e204:	sdiv	r0, r0, r1
   3e208:	str	r0, [fp, #-24]	; 0xffffffe8
   3e20c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e210:	mov	r1, r0
   3e214:	ldr	r2, [fp, #8]
   3e218:	sdiv	r3, r0, r2
   3e21c:	mls	r0, r3, r2, r0
   3e220:	sub	r0, r1, r0
   3e224:	str	r0, [fp, #-28]	; 0xffffffe4
   3e228:	ldr	r0, [fp, #-4]
   3e22c:	movw	r1, #0
   3e230:	cmp	r0, r1
   3e234:	bne	3e244 <__assert_fail@plt+0x2cdb0>
   3e238:	ldr	r0, [fp, #-8]
   3e23c:	movw	r1, #0
   3e240:	str	r1, [r0]
   3e244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e248:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e24c:	sub	r0, r0, r1
   3e250:	ldr	r1, [fp, #-12]
   3e254:	cmp	r0, r1
   3e258:	bge	3f644 <__assert_fail@plt+0x2e1b0>
   3e25c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e260:	ldr	r1, [fp, #-12]
   3e264:	add	r1, r0, r1
   3e268:	mov	r2, #1
   3e26c:	cmp	r1, r0
   3e270:	movwvc	r2, #0
   3e274:	str	r1, [fp, #-24]	; 0xffffffe8
   3e278:	tst	r2, #1
   3e27c:	bne	3f640 <__assert_fail@plt+0x2e1ac>
   3e280:	ldr	r0, [fp, #-16]
   3e284:	movw	r1, #0
   3e288:	cmp	r1, r0
   3e28c:	bgt	3e2a0 <__assert_fail@plt+0x2ce0c>
   3e290:	ldr	r0, [fp, #-16]
   3e294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e298:	cmp	r0, r1
   3e29c:	blt	3f640 <__assert_fail@plt+0x2e1ac>
   3e2a0:	b	3e67c <__assert_fail@plt+0x2d1e8>
   3e2a4:			; <UNDEFINED> instruction: 0xffff8000
   3e2a8:	b	3e2ac <__assert_fail@plt+0x2ce18>
   3e2ac:	ldr	r0, [fp, #8]
   3e2b0:	cmp	r0, #0
   3e2b4:	bge	3e3c8 <__assert_fail@plt+0x2cf34>
   3e2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e2bc:	cmp	r0, #0
   3e2c0:	bge	3e34c <__assert_fail@plt+0x2ceb8>
   3e2c4:	b	3e2c8 <__assert_fail@plt+0x2ce34>
   3e2c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e2cc:	ldr	r1, [fp, #8]
   3e2d0:	movw	r2, #127	; 0x7f
   3e2d4:	sdiv	r1, r2, r1
   3e2d8:	cmp	r0, r1
   3e2dc:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e2e0:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e2e4:	b	3e2e8 <__assert_fail@plt+0x2ce54>
   3e2e8:	ldr	r0, [pc, #-1172]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3e2ec:	ldr	r1, [fp, #8]
   3e2f0:	cmp	r1, r0
   3e2f4:	blt	3e30c <__assert_fail@plt+0x2ce78>
   3e2f8:	b	3e318 <__assert_fail@plt+0x2ce84>
   3e2fc:	ldr	r0, [fp, #8]
   3e300:	movw	r1, #0
   3e304:	cmp	r1, r0
   3e308:	bge	3e318 <__assert_fail@plt+0x2ce84>
   3e30c:	movw	r0, #0
   3e310:	str	r0, [sp, #88]	; 0x58
   3e314:	b	3e330 <__assert_fail@plt+0x2ce9c>
   3e318:	ldr	r0, [fp, #8]
   3e31c:	movw	r1, #0
   3e320:	sub	r0, r1, r0
   3e324:	movw	r1, #127	; 0x7f
   3e328:	sdiv	r0, r1, r0
   3e32c:	str	r0, [sp, #88]	; 0x58
   3e330:	ldr	r0, [sp, #88]	; 0x58
   3e334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e338:	mvn	r2, #0
   3e33c:	sub	r1, r2, r1
   3e340:	cmp	r0, r1
   3e344:	ble	3e468 <__assert_fail@plt+0x2cfd4>
   3e348:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e34c:	b	3e350 <__assert_fail@plt+0x2cebc>
   3e350:	b	3e3ac <__assert_fail@plt+0x2cf18>
   3e354:	b	3e3ac <__assert_fail@plt+0x2cf18>
   3e358:	ldr	r0, [fp, #8]
   3e35c:	cmn	r0, #1
   3e360:	bne	3e3ac <__assert_fail@plt+0x2cf18>
   3e364:	b	3e368 <__assert_fail@plt+0x2ced4>
   3e368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e36c:	mvn	r1, #127	; 0x7f
   3e370:	add	r0, r0, r1
   3e374:	movw	r1, #0
   3e378:	cmp	r1, r0
   3e37c:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e380:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e388:	movw	r1, #0
   3e38c:	cmp	r1, r0
   3e390:	bge	3e480 <__assert_fail@plt+0x2cfec>
   3e394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e398:	sub	r0, r0, #1
   3e39c:	movw	r1, #127	; 0x7f
   3e3a0:	cmp	r1, r0
   3e3a4:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e3a8:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e3ac:	ldr	r0, [fp, #8]
   3e3b0:	mvn	r1, #127	; 0x7f
   3e3b4:	sdiv	r0, r1, r0
   3e3b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e3bc:	cmp	r0, r1
   3e3c0:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e3c4:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e3c8:	ldr	r0, [fp, #8]
   3e3cc:	cmp	r0, #0
   3e3d0:	bne	3e3d8 <__assert_fail@plt+0x2cf44>
   3e3d4:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e3dc:	cmp	r0, #0
   3e3e0:	bge	3e450 <__assert_fail@plt+0x2cfbc>
   3e3e4:	b	3e3e8 <__assert_fail@plt+0x2cf54>
   3e3e8:	b	3e434 <__assert_fail@plt+0x2cfa0>
   3e3ec:	b	3e434 <__assert_fail@plt+0x2cfa0>
   3e3f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e3f4:	cmn	r0, #1
   3e3f8:	bne	3e434 <__assert_fail@plt+0x2cfa0>
   3e3fc:	b	3e400 <__assert_fail@plt+0x2cf6c>
   3e400:	ldr	r0, [fp, #8]
   3e404:	mvn	r1, #127	; 0x7f
   3e408:	add	r0, r0, r1
   3e40c:	movw	r1, #0
   3e410:	cmp	r1, r0
   3e414:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e418:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e41c:	ldr	r0, [fp, #8]
   3e420:	sub	r0, r0, #1
   3e424:	movw	r1, #127	; 0x7f
   3e428:	cmp	r1, r0
   3e42c:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e430:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e438:	mvn	r1, #127	; 0x7f
   3e43c:	sdiv	r0, r1, r0
   3e440:	ldr	r1, [fp, #8]
   3e444:	cmp	r0, r1
   3e448:	blt	3e468 <__assert_fail@plt+0x2cfd4>
   3e44c:	b	3e480 <__assert_fail@plt+0x2cfec>
   3e450:	ldr	r0, [fp, #8]
   3e454:	movw	r1, #127	; 0x7f
   3e458:	sdiv	r0, r1, r0
   3e45c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e460:	cmp	r0, r1
   3e464:	bge	3e480 <__assert_fail@plt+0x2cfec>
   3e468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e46c:	ldr	r1, [fp, #8]
   3e470:	mul	r0, r0, r1
   3e474:	sxtb	r0, r0
   3e478:	str	r0, [fp, #-28]	; 0xffffffe4
   3e47c:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3e480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e484:	ldr	r1, [fp, #8]
   3e488:	mul	r0, r0, r1
   3e48c:	sxtb	r0, r0
   3e490:	str	r0, [fp, #-28]	; 0xffffffe4
   3e494:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3e498:	ldr	r0, [fp, #8]
   3e49c:	cmp	r0, #0
   3e4a0:	bge	3e5b0 <__assert_fail@plt+0x2d11c>
   3e4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e4a8:	cmp	r0, #0
   3e4ac:	bge	3e538 <__assert_fail@plt+0x2d0a4>
   3e4b0:	b	3e4b4 <__assert_fail@plt+0x2d020>
   3e4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e4b8:	ldr	r1, [fp, #8]
   3e4bc:	movw	r2, #255	; 0xff
   3e4c0:	sdiv	r1, r2, r1
   3e4c4:	cmp	r0, r1
   3e4c8:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e4cc:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e4d0:	b	3e4d4 <__assert_fail@plt+0x2d040>
   3e4d4:	ldr	r0, [pc, #-1664]	; 3de5c <__assert_fail@plt+0x2c9c8>
   3e4d8:	ldr	r1, [fp, #8]
   3e4dc:	cmp	r1, r0
   3e4e0:	blt	3e4f8 <__assert_fail@plt+0x2d064>
   3e4e4:	b	3e504 <__assert_fail@plt+0x2d070>
   3e4e8:	ldr	r0, [fp, #8]
   3e4ec:	movw	r1, #0
   3e4f0:	cmp	r1, r0
   3e4f4:	bge	3e504 <__assert_fail@plt+0x2d070>
   3e4f8:	movw	r0, #0
   3e4fc:	str	r0, [sp, #84]	; 0x54
   3e500:	b	3e51c <__assert_fail@plt+0x2d088>
   3e504:	ldr	r0, [fp, #8]
   3e508:	movw	r1, #0
   3e50c:	sub	r0, r1, r0
   3e510:	movw	r1, #255	; 0xff
   3e514:	sdiv	r0, r1, r0
   3e518:	str	r0, [sp, #84]	; 0x54
   3e51c:	ldr	r0, [sp, #84]	; 0x54
   3e520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e524:	mvn	r2, #0
   3e528:	sub	r1, r2, r1
   3e52c:	cmp	r0, r1
   3e530:	ble	3e64c <__assert_fail@plt+0x2d1b8>
   3e534:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e538:	b	3e53c <__assert_fail@plt+0x2d0a8>
   3e53c:	b	3e594 <__assert_fail@plt+0x2d100>
   3e540:	b	3e594 <__assert_fail@plt+0x2d100>
   3e544:	ldr	r0, [fp, #8]
   3e548:	cmn	r0, #1
   3e54c:	bne	3e594 <__assert_fail@plt+0x2d100>
   3e550:	b	3e554 <__assert_fail@plt+0x2d0c0>
   3e554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e558:	add	r0, r0, #0
   3e55c:	movw	r1, #0
   3e560:	cmp	r1, r0
   3e564:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e568:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e570:	movw	r1, #0
   3e574:	cmp	r1, r0
   3e578:	bge	3e664 <__assert_fail@plt+0x2d1d0>
   3e57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e580:	sub	r0, r0, #1
   3e584:	mvn	r1, #0
   3e588:	cmp	r1, r0
   3e58c:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e590:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e594:	ldr	r0, [fp, #8]
   3e598:	movw	r1, #0
   3e59c:	sdiv	r0, r1, r0
   3e5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e5a4:	cmp	r0, r1
   3e5a8:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e5ac:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e5b0:	ldr	r0, [fp, #8]
   3e5b4:	cmp	r0, #0
   3e5b8:	bne	3e5c0 <__assert_fail@plt+0x2d12c>
   3e5bc:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e5c4:	cmp	r0, #0
   3e5c8:	bge	3e634 <__assert_fail@plt+0x2d1a0>
   3e5cc:	b	3e5d0 <__assert_fail@plt+0x2d13c>
   3e5d0:	b	3e618 <__assert_fail@plt+0x2d184>
   3e5d4:	b	3e618 <__assert_fail@plt+0x2d184>
   3e5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e5dc:	cmn	r0, #1
   3e5e0:	bne	3e618 <__assert_fail@plt+0x2d184>
   3e5e4:	b	3e5e8 <__assert_fail@plt+0x2d154>
   3e5e8:	ldr	r0, [fp, #8]
   3e5ec:	add	r0, r0, #0
   3e5f0:	movw	r1, #0
   3e5f4:	cmp	r1, r0
   3e5f8:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e5fc:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e600:	ldr	r0, [fp, #8]
   3e604:	sub	r0, r0, #1
   3e608:	mvn	r1, #0
   3e60c:	cmp	r1, r0
   3e610:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e614:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e61c:	movw	r1, #0
   3e620:	sdiv	r0, r1, r0
   3e624:	ldr	r1, [fp, #8]
   3e628:	cmp	r0, r1
   3e62c:	blt	3e64c <__assert_fail@plt+0x2d1b8>
   3e630:	b	3e664 <__assert_fail@plt+0x2d1d0>
   3e634:	ldr	r0, [fp, #8]
   3e638:	movw	r1, #255	; 0xff
   3e63c:	sdiv	r0, r1, r0
   3e640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e644:	cmp	r0, r1
   3e648:	bge	3e664 <__assert_fail@plt+0x2d1d0>
   3e64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e650:	ldr	r1, [fp, #8]
   3e654:	mul	r0, r0, r1
   3e658:	and	r0, r0, #255	; 0xff
   3e65c:	str	r0, [fp, #-28]	; 0xffffffe4
   3e660:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3e664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e668:	ldr	r1, [fp, #8]
   3e66c:	mul	r0, r0, r1
   3e670:	and	r0, r0, #255	; 0xff
   3e674:	str	r0, [fp, #-28]	; 0xffffffe4
   3e678:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3e67c:	b	3ea58 <__assert_fail@plt+0x2d5c4>
   3e680:	b	3e684 <__assert_fail@plt+0x2d1f0>
   3e684:	ldr	r0, [fp, #8]
   3e688:	cmp	r0, #0
   3e68c:	bge	3e7a4 <__assert_fail@plt+0x2d310>
   3e690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e694:	cmp	r0, #0
   3e698:	bge	3e728 <__assert_fail@plt+0x2d294>
   3e69c:	b	3e6a0 <__assert_fail@plt+0x2d20c>
   3e6a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e6a4:	ldr	r1, [fp, #8]
   3e6a8:	movw	r2, #32767	; 0x7fff
   3e6ac:	sdiv	r1, r2, r1
   3e6b0:	cmp	r0, r1
   3e6b4:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e6b8:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e6bc:	andhi	r0, r0, r0
   3e6c0:	b	3e6c4 <__assert_fail@plt+0x2d230>
   3e6c4:	ldr	r0, [pc, #4004]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3e6c8:	ldr	r1, [fp, #8]
   3e6cc:	cmp	r1, r0
   3e6d0:	blt	3e6e8 <__assert_fail@plt+0x2d254>
   3e6d4:	b	3e6f4 <__assert_fail@plt+0x2d260>
   3e6d8:	ldr	r0, [fp, #8]
   3e6dc:	movw	r1, #0
   3e6e0:	cmp	r1, r0
   3e6e4:	bge	3e6f4 <__assert_fail@plt+0x2d260>
   3e6e8:	movw	r0, #0
   3e6ec:	str	r0, [sp, #80]	; 0x50
   3e6f0:	b	3e70c <__assert_fail@plt+0x2d278>
   3e6f4:	ldr	r0, [fp, #8]
   3e6f8:	movw	r1, #0
   3e6fc:	sub	r0, r1, r0
   3e700:	movw	r1, #32767	; 0x7fff
   3e704:	sdiv	r0, r1, r0
   3e708:	str	r0, [sp, #80]	; 0x50
   3e70c:	ldr	r0, [sp, #80]	; 0x50
   3e710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e714:	mvn	r2, #0
   3e718:	sub	r1, r2, r1
   3e71c:	cmp	r0, r1
   3e720:	ble	3e844 <__assert_fail@plt+0x2d3b0>
   3e724:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e728:	b	3e72c <__assert_fail@plt+0x2d298>
   3e72c:	b	3e788 <__assert_fail@plt+0x2d2f4>
   3e730:	b	3e788 <__assert_fail@plt+0x2d2f4>
   3e734:	ldr	r0, [fp, #8]
   3e738:	cmn	r0, #1
   3e73c:	bne	3e788 <__assert_fail@plt+0x2d2f4>
   3e740:	b	3e744 <__assert_fail@plt+0x2d2b0>
   3e744:	ldr	r0, [pc, #3884]	; 3f678 <__assert_fail@plt+0x2e1e4>
   3e748:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e74c:	add	r0, r1, r0
   3e750:	movw	r1, #0
   3e754:	cmp	r1, r0
   3e758:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e75c:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e764:	movw	r1, #0
   3e768:	cmp	r1, r0
   3e76c:	bge	3e85c <__assert_fail@plt+0x2d3c8>
   3e770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e774:	sub	r0, r0, #1
   3e778:	movw	r1, #32767	; 0x7fff
   3e77c:	cmp	r1, r0
   3e780:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e784:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e788:	ldr	r0, [pc, #3816]	; 3f678 <__assert_fail@plt+0x2e1e4>
   3e78c:	ldr	r1, [fp, #8]
   3e790:	sdiv	r0, r0, r1
   3e794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e798:	cmp	r0, r1
   3e79c:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e7a0:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e7a4:	ldr	r0, [fp, #8]
   3e7a8:	cmp	r0, #0
   3e7ac:	bne	3e7b4 <__assert_fail@plt+0x2d320>
   3e7b0:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7b8:	cmp	r0, #0
   3e7bc:	bge	3e82c <__assert_fail@plt+0x2d398>
   3e7c0:	b	3e7c4 <__assert_fail@plt+0x2d330>
   3e7c4:	b	3e810 <__assert_fail@plt+0x2d37c>
   3e7c8:	b	3e810 <__assert_fail@plt+0x2d37c>
   3e7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7d0:	cmn	r0, #1
   3e7d4:	bne	3e810 <__assert_fail@plt+0x2d37c>
   3e7d8:	b	3e7dc <__assert_fail@plt+0x2d348>
   3e7dc:	ldr	r0, [pc, #3732]	; 3f678 <__assert_fail@plt+0x2e1e4>
   3e7e0:	ldr	r1, [fp, #8]
   3e7e4:	add	r0, r1, r0
   3e7e8:	movw	r1, #0
   3e7ec:	cmp	r1, r0
   3e7f0:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e7f4:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e7f8:	ldr	r0, [fp, #8]
   3e7fc:	sub	r0, r0, #1
   3e800:	movw	r1, #32767	; 0x7fff
   3e804:	cmp	r1, r0
   3e808:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e80c:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e810:	ldr	r0, [pc, #3680]	; 3f678 <__assert_fail@plt+0x2e1e4>
   3e814:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e818:	sdiv	r0, r0, r1
   3e81c:	ldr	r1, [fp, #8]
   3e820:	cmp	r0, r1
   3e824:	blt	3e844 <__assert_fail@plt+0x2d3b0>
   3e828:	b	3e85c <__assert_fail@plt+0x2d3c8>
   3e82c:	ldr	r0, [fp, #8]
   3e830:	movw	r1, #32767	; 0x7fff
   3e834:	sdiv	r0, r1, r0
   3e838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e83c:	cmp	r0, r1
   3e840:	bge	3e85c <__assert_fail@plt+0x2d3c8>
   3e844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e848:	ldr	r1, [fp, #8]
   3e84c:	mul	r0, r0, r1
   3e850:	sxth	r0, r0
   3e854:	str	r0, [fp, #-28]	; 0xffffffe4
   3e858:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3e85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e860:	ldr	r1, [fp, #8]
   3e864:	mul	r0, r0, r1
   3e868:	sxth	r0, r0
   3e86c:	str	r0, [fp, #-28]	; 0xffffffe4
   3e870:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3e874:	ldr	r0, [fp, #8]
   3e878:	cmp	r0, #0
   3e87c:	bge	3e98c <__assert_fail@plt+0x2d4f8>
   3e880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e884:	cmp	r0, #0
   3e888:	bge	3e914 <__assert_fail@plt+0x2d480>
   3e88c:	b	3e890 <__assert_fail@plt+0x2d3fc>
   3e890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e894:	ldr	r1, [fp, #8]
   3e898:	movw	r2, #65535	; 0xffff
   3e89c:	sdiv	r1, r2, r1
   3e8a0:	cmp	r0, r1
   3e8a4:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3e8a8:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e8ac:	b	3e8b0 <__assert_fail@plt+0x2d41c>
   3e8b0:	ldr	r0, [pc, #3512]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3e8b4:	ldr	r1, [fp, #8]
   3e8b8:	cmp	r1, r0
   3e8bc:	blt	3e8d4 <__assert_fail@plt+0x2d440>
   3e8c0:	b	3e8e0 <__assert_fail@plt+0x2d44c>
   3e8c4:	ldr	r0, [fp, #8]
   3e8c8:	movw	r1, #0
   3e8cc:	cmp	r1, r0
   3e8d0:	bge	3e8e0 <__assert_fail@plt+0x2d44c>
   3e8d4:	movw	r0, #0
   3e8d8:	str	r0, [sp, #76]	; 0x4c
   3e8dc:	b	3e8f8 <__assert_fail@plt+0x2d464>
   3e8e0:	ldr	r0, [fp, #8]
   3e8e4:	movw	r1, #0
   3e8e8:	sub	r0, r1, r0
   3e8ec:	movw	r1, #65535	; 0xffff
   3e8f0:	sdiv	r0, r1, r0
   3e8f4:	str	r0, [sp, #76]	; 0x4c
   3e8f8:	ldr	r0, [sp, #76]	; 0x4c
   3e8fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e900:	mvn	r2, #0
   3e904:	sub	r1, r2, r1
   3e908:	cmp	r0, r1
   3e90c:	ble	3ea28 <__assert_fail@plt+0x2d594>
   3e910:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e914:	b	3e918 <__assert_fail@plt+0x2d484>
   3e918:	b	3e970 <__assert_fail@plt+0x2d4dc>
   3e91c:	b	3e970 <__assert_fail@plt+0x2d4dc>
   3e920:	ldr	r0, [fp, #8]
   3e924:	cmn	r0, #1
   3e928:	bne	3e970 <__assert_fail@plt+0x2d4dc>
   3e92c:	b	3e930 <__assert_fail@plt+0x2d49c>
   3e930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e934:	add	r0, r0, #0
   3e938:	movw	r1, #0
   3e93c:	cmp	r1, r0
   3e940:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3e944:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e94c:	movw	r1, #0
   3e950:	cmp	r1, r0
   3e954:	bge	3ea40 <__assert_fail@plt+0x2d5ac>
   3e958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e95c:	sub	r0, r0, #1
   3e960:	mvn	r1, #0
   3e964:	cmp	r1, r0
   3e968:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3e96c:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e970:	ldr	r0, [fp, #8]
   3e974:	movw	r1, #0
   3e978:	sdiv	r0, r1, r0
   3e97c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e980:	cmp	r0, r1
   3e984:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3e988:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e98c:	ldr	r0, [fp, #8]
   3e990:	cmp	r0, #0
   3e994:	bne	3e99c <__assert_fail@plt+0x2d508>
   3e998:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e9a0:	cmp	r0, #0
   3e9a4:	bge	3ea10 <__assert_fail@plt+0x2d57c>
   3e9a8:	b	3e9ac <__assert_fail@plt+0x2d518>
   3e9ac:	b	3e9f4 <__assert_fail@plt+0x2d560>
   3e9b0:	b	3e9f4 <__assert_fail@plt+0x2d560>
   3e9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e9b8:	cmn	r0, #1
   3e9bc:	bne	3e9f4 <__assert_fail@plt+0x2d560>
   3e9c0:	b	3e9c4 <__assert_fail@plt+0x2d530>
   3e9c4:	ldr	r0, [fp, #8]
   3e9c8:	add	r0, r0, #0
   3e9cc:	movw	r1, #0
   3e9d0:	cmp	r1, r0
   3e9d4:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3e9d8:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e9dc:	ldr	r0, [fp, #8]
   3e9e0:	sub	r0, r0, #1
   3e9e4:	mvn	r1, #0
   3e9e8:	cmp	r1, r0
   3e9ec:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3e9f0:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3e9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e9f8:	movw	r1, #0
   3e9fc:	sdiv	r0, r1, r0
   3ea00:	ldr	r1, [fp, #8]
   3ea04:	cmp	r0, r1
   3ea08:	blt	3ea28 <__assert_fail@plt+0x2d594>
   3ea0c:	b	3ea40 <__assert_fail@plt+0x2d5ac>
   3ea10:	ldr	r0, [fp, #8]
   3ea14:	movw	r1, #65535	; 0xffff
   3ea18:	sdiv	r0, r1, r0
   3ea1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ea20:	cmp	r0, r1
   3ea24:	bge	3ea40 <__assert_fail@plt+0x2d5ac>
   3ea28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ea2c:	ldr	r1, [fp, #8]
   3ea30:	mul	r0, r0, r1
   3ea34:	uxth	r0, r0
   3ea38:	str	r0, [fp, #-28]	; 0xffffffe4
   3ea3c:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3ea40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ea44:	ldr	r1, [fp, #8]
   3ea48:	mul	r0, r0, r1
   3ea4c:	uxth	r0, r0
   3ea50:	str	r0, [fp, #-28]	; 0xffffffe4
   3ea54:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3ea58:	b	3ea5c <__assert_fail@plt+0x2d5c8>
   3ea5c:	b	3ea60 <__assert_fail@plt+0x2d5cc>
   3ea60:	ldr	r0, [fp, #8]
   3ea64:	cmp	r0, #0
   3ea68:	bge	3eb6c <__assert_fail@plt+0x2d6d8>
   3ea6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ea70:	cmp	r0, #0
   3ea74:	bge	3eb00 <__assert_fail@plt+0x2d66c>
   3ea78:	b	3ea7c <__assert_fail@plt+0x2d5e8>
   3ea7c:	ldr	r0, [pc, #3048]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ea80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ea84:	ldr	r2, [fp, #8]
   3ea88:	sdiv	r0, r0, r2
   3ea8c:	cmp	r1, r0
   3ea90:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3ea94:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3ea98:	b	3ea9c <__assert_fail@plt+0x2d608>
   3ea9c:	ldr	r0, [pc, #3020]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3eaa0:	ldr	r1, [fp, #8]
   3eaa4:	cmp	r1, r0
   3eaa8:	blt	3eac0 <__assert_fail@plt+0x2d62c>
   3eaac:	b	3eacc <__assert_fail@plt+0x2d638>
   3eab0:	ldr	r0, [fp, #8]
   3eab4:	movw	r1, #0
   3eab8:	cmp	r1, r0
   3eabc:	bge	3eacc <__assert_fail@plt+0x2d638>
   3eac0:	movw	r0, #0
   3eac4:	str	r0, [sp, #72]	; 0x48
   3eac8:	b	3eae4 <__assert_fail@plt+0x2d650>
   3eacc:	ldr	r0, [pc, #2968]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ead0:	ldr	r1, [fp, #8]
   3ead4:	movw	r2, #0
   3ead8:	sub	r1, r2, r1
   3eadc:	sdiv	r0, r0, r1
   3eae0:	str	r0, [sp, #72]	; 0x48
   3eae4:	ldr	r0, [sp, #72]	; 0x48
   3eae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eaec:	mvn	r2, #0
   3eaf0:	sub	r1, r2, r1
   3eaf4:	cmp	r0, r1
   3eaf8:	ble	3ebfc <__assert_fail@plt+0x2d768>
   3eafc:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3eb00:	ldr	r0, [fp, #8]
   3eb04:	cmn	r0, #1
   3eb08:	bne	3eb50 <__assert_fail@plt+0x2d6bc>
   3eb0c:	b	3eb10 <__assert_fail@plt+0x2d67c>
   3eb10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb14:	add	r0, r0, #-2147483648	; 0x80000000
   3eb18:	movw	r1, #0
   3eb1c:	cmp	r1, r0
   3eb20:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3eb24:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3eb28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb2c:	movw	r1, #0
   3eb30:	cmp	r1, r0
   3eb34:	bge	3ec10 <__assert_fail@plt+0x2d77c>
   3eb38:	ldr	r0, [pc, #2860]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3eb3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eb40:	sub	r1, r1, #1
   3eb44:	cmp	r0, r1
   3eb48:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3eb4c:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3eb50:	ldr	r0, [pc, #2844]	; 3f674 <__assert_fail@plt+0x2e1e0>
   3eb54:	ldr	r1, [fp, #8]
   3eb58:	sdiv	r0, r0, r1
   3eb5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eb60:	cmp	r0, r1
   3eb64:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3eb68:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3eb6c:	ldr	r0, [fp, #8]
   3eb70:	cmp	r0, #0
   3eb74:	bne	3eb7c <__assert_fail@plt+0x2d6e8>
   3eb78:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3eb7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb80:	cmp	r0, #0
   3eb84:	bge	3ebe4 <__assert_fail@plt+0x2d750>
   3eb88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb8c:	cmn	r0, #1
   3eb90:	bne	3ebc8 <__assert_fail@plt+0x2d734>
   3eb94:	b	3eb98 <__assert_fail@plt+0x2d704>
   3eb98:	ldr	r0, [fp, #8]
   3eb9c:	add	r0, r0, #-2147483648	; 0x80000000
   3eba0:	movw	r1, #0
   3eba4:	cmp	r1, r0
   3eba8:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3ebac:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3ebb0:	ldr	r0, [pc, #2740]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ebb4:	ldr	r1, [fp, #8]
   3ebb8:	sub	r1, r1, #1
   3ebbc:	cmp	r0, r1
   3ebc0:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3ebc4:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3ebc8:	ldr	r0, [pc, #2724]	; 3f674 <__assert_fail@plt+0x2e1e0>
   3ebcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ebd0:	sdiv	r0, r0, r1
   3ebd4:	ldr	r1, [fp, #8]
   3ebd8:	cmp	r0, r1
   3ebdc:	blt	3ebfc <__assert_fail@plt+0x2d768>
   3ebe0:	b	3ec10 <__assert_fail@plt+0x2d77c>
   3ebe4:	ldr	r0, [pc, #2688]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ebe8:	ldr	r1, [fp, #8]
   3ebec:	sdiv	r0, r0, r1
   3ebf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ebf4:	cmp	r0, r1
   3ebf8:	bge	3ec10 <__assert_fail@plt+0x2d77c>
   3ebfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec00:	ldr	r1, [fp, #8]
   3ec04:	mul	r0, r0, r1
   3ec08:	str	r0, [fp, #-28]	; 0xffffffe4
   3ec0c:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3ec10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec14:	ldr	r1, [fp, #8]
   3ec18:	mul	r0, r0, r1
   3ec1c:	str	r0, [fp, #-28]	; 0xffffffe4
   3ec20:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3ec24:	ldr	r0, [fp, #8]
   3ec28:	cmp	r0, #0
   3ec2c:	bge	3ed3c <__assert_fail@plt+0x2d8a8>
   3ec30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec34:	cmp	r0, #0
   3ec38:	bge	3ecc4 <__assert_fail@plt+0x2d830>
   3ec3c:	b	3ec5c <__assert_fail@plt+0x2d7c8>
   3ec40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec44:	ldr	r1, [fp, #8]
   3ec48:	mvn	r2, #0
   3ec4c:	udiv	r1, r2, r1
   3ec50:	cmp	r0, r1
   3ec54:	bcc	3edd8 <__assert_fail@plt+0x2d944>
   3ec58:	b	3edec <__assert_fail@plt+0x2d958>
   3ec5c:	b	3ec60 <__assert_fail@plt+0x2d7cc>
   3ec60:	ldr	r0, [pc, #2568]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3ec64:	ldr	r1, [fp, #8]
   3ec68:	cmp	r1, r0
   3ec6c:	blt	3ec84 <__assert_fail@plt+0x2d7f0>
   3ec70:	b	3ec90 <__assert_fail@plt+0x2d7fc>
   3ec74:	ldr	r0, [fp, #8]
   3ec78:	movw	r1, #0
   3ec7c:	cmp	r1, r0
   3ec80:	bge	3ec90 <__assert_fail@plt+0x2d7fc>
   3ec84:	movw	r0, #1
   3ec88:	str	r0, [sp, #68]	; 0x44
   3ec8c:	b	3eca8 <__assert_fail@plt+0x2d814>
   3ec90:	ldr	r0, [fp, #8]
   3ec94:	movw	r1, #0
   3ec98:	sub	r0, r1, r0
   3ec9c:	mvn	r1, #0
   3eca0:	udiv	r0, r1, r0
   3eca4:	str	r0, [sp, #68]	; 0x44
   3eca8:	ldr	r0, [sp, #68]	; 0x44
   3ecac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ecb0:	mvn	r2, #0
   3ecb4:	sub	r1, r2, r1
   3ecb8:	cmp	r0, r1
   3ecbc:	bls	3edd8 <__assert_fail@plt+0x2d944>
   3ecc0:	b	3edec <__assert_fail@plt+0x2d958>
   3ecc4:	b	3ecc8 <__assert_fail@plt+0x2d834>
   3ecc8:	b	3ed20 <__assert_fail@plt+0x2d88c>
   3eccc:	b	3ed20 <__assert_fail@plt+0x2d88c>
   3ecd0:	ldr	r0, [fp, #8]
   3ecd4:	cmn	r0, #1
   3ecd8:	bne	3ed20 <__assert_fail@plt+0x2d88c>
   3ecdc:	b	3ece0 <__assert_fail@plt+0x2d84c>
   3ece0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ece4:	add	r0, r0, #0
   3ece8:	movw	r1, #0
   3ecec:	cmp	r1, r0
   3ecf0:	blt	3edd8 <__assert_fail@plt+0x2d944>
   3ecf4:	b	3edec <__assert_fail@plt+0x2d958>
   3ecf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ecfc:	movw	r1, #0
   3ed00:	cmp	r1, r0
   3ed04:	bge	3edec <__assert_fail@plt+0x2d958>
   3ed08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ed0c:	sub	r0, r0, #1
   3ed10:	mvn	r1, #0
   3ed14:	cmp	r1, r0
   3ed18:	blt	3edd8 <__assert_fail@plt+0x2d944>
   3ed1c:	b	3edec <__assert_fail@plt+0x2d958>
   3ed20:	ldr	r0, [fp, #8]
   3ed24:	movw	r1, #0
   3ed28:	sdiv	r0, r1, r0
   3ed2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ed30:	cmp	r0, r1
   3ed34:	blt	3edd8 <__assert_fail@plt+0x2d944>
   3ed38:	b	3edec <__assert_fail@plt+0x2d958>
   3ed3c:	ldr	r0, [fp, #8]
   3ed40:	cmp	r0, #0
   3ed44:	bne	3ed4c <__assert_fail@plt+0x2d8b8>
   3ed48:	b	3edec <__assert_fail@plt+0x2d958>
   3ed4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ed50:	cmp	r0, #0
   3ed54:	bge	3edc0 <__assert_fail@plt+0x2d92c>
   3ed58:	b	3ed5c <__assert_fail@plt+0x2d8c8>
   3ed5c:	b	3eda4 <__assert_fail@plt+0x2d910>
   3ed60:	b	3eda4 <__assert_fail@plt+0x2d910>
   3ed64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ed68:	cmn	r0, #1
   3ed6c:	bne	3eda4 <__assert_fail@plt+0x2d910>
   3ed70:	b	3ed74 <__assert_fail@plt+0x2d8e0>
   3ed74:	ldr	r0, [fp, #8]
   3ed78:	add	r0, r0, #0
   3ed7c:	movw	r1, #0
   3ed80:	cmp	r1, r0
   3ed84:	blt	3edd8 <__assert_fail@plt+0x2d944>
   3ed88:	b	3edec <__assert_fail@plt+0x2d958>
   3ed8c:	ldr	r0, [fp, #8]
   3ed90:	sub	r0, r0, #1
   3ed94:	mvn	r1, #0
   3ed98:	cmp	r1, r0
   3ed9c:	blt	3edd8 <__assert_fail@plt+0x2d944>
   3eda0:	b	3edec <__assert_fail@plt+0x2d958>
   3eda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eda8:	movw	r1, #0
   3edac:	sdiv	r0, r1, r0
   3edb0:	ldr	r1, [fp, #8]
   3edb4:	cmp	r0, r1
   3edb8:	blt	3edd8 <__assert_fail@plt+0x2d944>
   3edbc:	b	3edec <__assert_fail@plt+0x2d958>
   3edc0:	ldr	r0, [fp, #8]
   3edc4:	mvn	r1, #0
   3edc8:	udiv	r0, r1, r0
   3edcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3edd0:	cmp	r0, r1
   3edd4:	bcs	3edec <__assert_fail@plt+0x2d958>
   3edd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eddc:	ldr	r1, [fp, #8]
   3ede0:	mul	r0, r0, r1
   3ede4:	str	r0, [fp, #-28]	; 0xffffffe4
   3ede8:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3edec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3edf0:	ldr	r1, [fp, #8]
   3edf4:	mul	r0, r0, r1
   3edf8:	str	r0, [fp, #-28]	; 0xffffffe4
   3edfc:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3ee00:	b	3ee04 <__assert_fail@plt+0x2d970>
   3ee04:	b	3ee08 <__assert_fail@plt+0x2d974>
   3ee08:	ldr	r0, [fp, #8]
   3ee0c:	cmp	r0, #0
   3ee10:	bge	3ef14 <__assert_fail@plt+0x2da80>
   3ee14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ee18:	cmp	r0, #0
   3ee1c:	bge	3eea8 <__assert_fail@plt+0x2da14>
   3ee20:	b	3ee24 <__assert_fail@plt+0x2d990>
   3ee24:	ldr	r0, [pc, #2112]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ee28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ee2c:	ldr	r2, [fp, #8]
   3ee30:	sdiv	r0, r0, r2
   3ee34:	cmp	r1, r0
   3ee38:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3ee3c:	b	3efb8 <__assert_fail@plt+0x2db24>
   3ee40:	b	3ee44 <__assert_fail@plt+0x2d9b0>
   3ee44:	ldr	r0, [pc, #2084]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3ee48:	ldr	r1, [fp, #8]
   3ee4c:	cmp	r1, r0
   3ee50:	blt	3ee68 <__assert_fail@plt+0x2d9d4>
   3ee54:	b	3ee74 <__assert_fail@plt+0x2d9e0>
   3ee58:	ldr	r0, [fp, #8]
   3ee5c:	movw	r1, #0
   3ee60:	cmp	r1, r0
   3ee64:	bge	3ee74 <__assert_fail@plt+0x2d9e0>
   3ee68:	movw	r0, #0
   3ee6c:	str	r0, [sp, #64]	; 0x40
   3ee70:	b	3ee8c <__assert_fail@plt+0x2d9f8>
   3ee74:	ldr	r0, [pc, #2032]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ee78:	ldr	r1, [fp, #8]
   3ee7c:	movw	r2, #0
   3ee80:	sub	r1, r2, r1
   3ee84:	sdiv	r0, r0, r1
   3ee88:	str	r0, [sp, #64]	; 0x40
   3ee8c:	ldr	r0, [sp, #64]	; 0x40
   3ee90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ee94:	mvn	r2, #0
   3ee98:	sub	r1, r2, r1
   3ee9c:	cmp	r0, r1
   3eea0:	ble	3efa4 <__assert_fail@plt+0x2db10>
   3eea4:	b	3efb8 <__assert_fail@plt+0x2db24>
   3eea8:	ldr	r0, [fp, #8]
   3eeac:	cmn	r0, #1
   3eeb0:	bne	3eef8 <__assert_fail@plt+0x2da64>
   3eeb4:	b	3eeb8 <__assert_fail@plt+0x2da24>
   3eeb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eebc:	add	r0, r0, #-2147483648	; 0x80000000
   3eec0:	movw	r1, #0
   3eec4:	cmp	r1, r0
   3eec8:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3eecc:	b	3efb8 <__assert_fail@plt+0x2db24>
   3eed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eed4:	movw	r1, #0
   3eed8:	cmp	r1, r0
   3eedc:	bge	3efb8 <__assert_fail@plt+0x2db24>
   3eee0:	ldr	r0, [pc, #1924]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3eee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3eee8:	sub	r1, r1, #1
   3eeec:	cmp	r0, r1
   3eef0:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3eef4:	b	3efb8 <__assert_fail@plt+0x2db24>
   3eef8:	ldr	r0, [pc, #1908]	; 3f674 <__assert_fail@plt+0x2e1e0>
   3eefc:	ldr	r1, [fp, #8]
   3ef00:	sdiv	r0, r0, r1
   3ef04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ef08:	cmp	r0, r1
   3ef0c:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3ef10:	b	3efb8 <__assert_fail@plt+0x2db24>
   3ef14:	ldr	r0, [fp, #8]
   3ef18:	cmp	r0, #0
   3ef1c:	bne	3ef24 <__assert_fail@plt+0x2da90>
   3ef20:	b	3efb8 <__assert_fail@plt+0x2db24>
   3ef24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ef28:	cmp	r0, #0
   3ef2c:	bge	3ef8c <__assert_fail@plt+0x2daf8>
   3ef30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ef34:	cmn	r0, #1
   3ef38:	bne	3ef70 <__assert_fail@plt+0x2dadc>
   3ef3c:	b	3ef40 <__assert_fail@plt+0x2daac>
   3ef40:	ldr	r0, [fp, #8]
   3ef44:	add	r0, r0, #-2147483648	; 0x80000000
   3ef48:	movw	r1, #0
   3ef4c:	cmp	r1, r0
   3ef50:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3ef54:	b	3efb8 <__assert_fail@plt+0x2db24>
   3ef58:	ldr	r0, [pc, #1804]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ef5c:	ldr	r1, [fp, #8]
   3ef60:	sub	r1, r1, #1
   3ef64:	cmp	r0, r1
   3ef68:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3ef6c:	b	3efb8 <__assert_fail@plt+0x2db24>
   3ef70:	ldr	r0, [pc, #1788]	; 3f674 <__assert_fail@plt+0x2e1e0>
   3ef74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ef78:	sdiv	r0, r0, r1
   3ef7c:	ldr	r1, [fp, #8]
   3ef80:	cmp	r0, r1
   3ef84:	blt	3efa4 <__assert_fail@plt+0x2db10>
   3ef88:	b	3efb8 <__assert_fail@plt+0x2db24>
   3ef8c:	ldr	r0, [pc, #1752]	; 3f66c <__assert_fail@plt+0x2e1d8>
   3ef90:	ldr	r1, [fp, #8]
   3ef94:	sdiv	r0, r0, r1
   3ef98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ef9c:	cmp	r0, r1
   3efa0:	bge	3efb8 <__assert_fail@plt+0x2db24>
   3efa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3efa8:	ldr	r1, [fp, #8]
   3efac:	mul	r0, r0, r1
   3efb0:	str	r0, [fp, #-28]	; 0xffffffe4
   3efb4:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3efb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3efbc:	ldr	r1, [fp, #8]
   3efc0:	mul	r0, r0, r1
   3efc4:	str	r0, [fp, #-28]	; 0xffffffe4
   3efc8:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3efcc:	ldr	r0, [fp, #8]
   3efd0:	cmp	r0, #0
   3efd4:	bge	3f0e4 <__assert_fail@plt+0x2dc50>
   3efd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3efdc:	cmp	r0, #0
   3efe0:	bge	3f06c <__assert_fail@plt+0x2dbd8>
   3efe4:	b	3f004 <__assert_fail@plt+0x2db70>
   3efe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3efec:	ldr	r1, [fp, #8]
   3eff0:	mvn	r2, #0
   3eff4:	udiv	r1, r2, r1
   3eff8:	cmp	r0, r1
   3effc:	bcc	3f180 <__assert_fail@plt+0x2dcec>
   3f000:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f004:	b	3f008 <__assert_fail@plt+0x2db74>
   3f008:	ldr	r0, [pc, #1632]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3f00c:	ldr	r1, [fp, #8]
   3f010:	cmp	r1, r0
   3f014:	blt	3f02c <__assert_fail@plt+0x2db98>
   3f018:	b	3f038 <__assert_fail@plt+0x2dba4>
   3f01c:	ldr	r0, [fp, #8]
   3f020:	movw	r1, #0
   3f024:	cmp	r1, r0
   3f028:	bge	3f038 <__assert_fail@plt+0x2dba4>
   3f02c:	movw	r0, #1
   3f030:	str	r0, [sp, #60]	; 0x3c
   3f034:	b	3f050 <__assert_fail@plt+0x2dbbc>
   3f038:	ldr	r0, [fp, #8]
   3f03c:	movw	r1, #0
   3f040:	sub	r0, r1, r0
   3f044:	mvn	r1, #0
   3f048:	udiv	r0, r1, r0
   3f04c:	str	r0, [sp, #60]	; 0x3c
   3f050:	ldr	r0, [sp, #60]	; 0x3c
   3f054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f058:	mvn	r2, #0
   3f05c:	sub	r1, r2, r1
   3f060:	cmp	r0, r1
   3f064:	bls	3f180 <__assert_fail@plt+0x2dcec>
   3f068:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f06c:	b	3f070 <__assert_fail@plt+0x2dbdc>
   3f070:	b	3f0c8 <__assert_fail@plt+0x2dc34>
   3f074:	b	3f0c8 <__assert_fail@plt+0x2dc34>
   3f078:	ldr	r0, [fp, #8]
   3f07c:	cmn	r0, #1
   3f080:	bne	3f0c8 <__assert_fail@plt+0x2dc34>
   3f084:	b	3f088 <__assert_fail@plt+0x2dbf4>
   3f088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f08c:	add	r0, r0, #0
   3f090:	movw	r1, #0
   3f094:	cmp	r1, r0
   3f098:	blt	3f180 <__assert_fail@plt+0x2dcec>
   3f09c:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f0a4:	movw	r1, #0
   3f0a8:	cmp	r1, r0
   3f0ac:	bge	3f194 <__assert_fail@plt+0x2dd00>
   3f0b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f0b4:	sub	r0, r0, #1
   3f0b8:	mvn	r1, #0
   3f0bc:	cmp	r1, r0
   3f0c0:	blt	3f180 <__assert_fail@plt+0x2dcec>
   3f0c4:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f0c8:	ldr	r0, [fp, #8]
   3f0cc:	movw	r1, #0
   3f0d0:	sdiv	r0, r1, r0
   3f0d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f0d8:	cmp	r0, r1
   3f0dc:	blt	3f180 <__assert_fail@plt+0x2dcec>
   3f0e0:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f0e4:	ldr	r0, [fp, #8]
   3f0e8:	cmp	r0, #0
   3f0ec:	bne	3f0f4 <__assert_fail@plt+0x2dc60>
   3f0f0:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f0f8:	cmp	r0, #0
   3f0fc:	bge	3f168 <__assert_fail@plt+0x2dcd4>
   3f100:	b	3f104 <__assert_fail@plt+0x2dc70>
   3f104:	b	3f14c <__assert_fail@plt+0x2dcb8>
   3f108:	b	3f14c <__assert_fail@plt+0x2dcb8>
   3f10c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f110:	cmn	r0, #1
   3f114:	bne	3f14c <__assert_fail@plt+0x2dcb8>
   3f118:	b	3f11c <__assert_fail@plt+0x2dc88>
   3f11c:	ldr	r0, [fp, #8]
   3f120:	add	r0, r0, #0
   3f124:	movw	r1, #0
   3f128:	cmp	r1, r0
   3f12c:	blt	3f180 <__assert_fail@plt+0x2dcec>
   3f130:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f134:	ldr	r0, [fp, #8]
   3f138:	sub	r0, r0, #1
   3f13c:	mvn	r1, #0
   3f140:	cmp	r1, r0
   3f144:	blt	3f180 <__assert_fail@plt+0x2dcec>
   3f148:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f150:	movw	r1, #0
   3f154:	sdiv	r0, r1, r0
   3f158:	ldr	r1, [fp, #8]
   3f15c:	cmp	r0, r1
   3f160:	blt	3f180 <__assert_fail@plt+0x2dcec>
   3f164:	b	3f194 <__assert_fail@plt+0x2dd00>
   3f168:	ldr	r0, [fp, #8]
   3f16c:	mvn	r1, #0
   3f170:	udiv	r0, r1, r0
   3f174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f178:	cmp	r0, r1
   3f17c:	bcs	3f194 <__assert_fail@plt+0x2dd00>
   3f180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f184:	ldr	r1, [fp, #8]
   3f188:	mul	r0, r0, r1
   3f18c:	str	r0, [fp, #-28]	; 0xffffffe4
   3f190:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3f194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f198:	ldr	r1, [fp, #8]
   3f19c:	mul	r0, r0, r1
   3f1a0:	str	r0, [fp, #-28]	; 0xffffffe4
   3f1a4:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3f1a8:	b	3f1ac <__assert_fail@plt+0x2dd18>
   3f1ac:	ldr	r0, [fp, #8]
   3f1b0:	cmp	r0, #0
   3f1b4:	bge	3f31c <__assert_fail@plt+0x2de88>
   3f1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f1bc:	cmp	r0, #0
   3f1c0:	bge	3f298 <__assert_fail@plt+0x2de04>
   3f1c4:	b	3f1c8 <__assert_fail@plt+0x2dd34>
   3f1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f1cc:	ldr	r1, [fp, #8]
   3f1d0:	asr	r3, r1, #31
   3f1d4:	mvn	r2, #0
   3f1d8:	mvn	ip, #-2147483648	; 0x80000000
   3f1dc:	str	r0, [sp, #56]	; 0x38
   3f1e0:	mov	r0, r2
   3f1e4:	str	r1, [sp, #52]	; 0x34
   3f1e8:	mov	r1, ip
   3f1ec:	ldr	r2, [sp, #52]	; 0x34
   3f1f0:	bl	43238 <__assert_fail@plt+0x31da4>
   3f1f4:	ldr	r2, [sp, #56]	; 0x38
   3f1f8:	subs	r0, r2, r0
   3f1fc:	rscs	r1, r1, r2, asr #31
   3f200:	blt	3f3e4 <__assert_fail@plt+0x2df50>
   3f204:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f208:	b	3f20c <__assert_fail@plt+0x2dd78>
   3f20c:	ldr	r0, [pc, #1116]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3f210:	ldr	r1, [fp, #8]
   3f214:	cmp	r1, r0
   3f218:	blt	3f230 <__assert_fail@plt+0x2dd9c>
   3f21c:	b	3f244 <__assert_fail@plt+0x2ddb0>
   3f220:	ldr	r0, [fp, #8]
   3f224:	movw	r1, #0
   3f228:	cmp	r1, r0
   3f22c:	bge	3f244 <__assert_fail@plt+0x2ddb0>
   3f230:	mov	r0, #0
   3f234:	mvn	r1, #0
   3f238:	str	r1, [sp, #48]	; 0x30
   3f23c:	str	r0, [sp, #44]	; 0x2c
   3f240:	b	3f278 <__assert_fail@plt+0x2dde4>
   3f244:	ldr	r0, [fp, #8]
   3f248:	rsb	r0, r0, #0
   3f24c:	asr	r3, r0, #31
   3f250:	mvn	r1, #0
   3f254:	mvn	r2, #-2147483648	; 0x80000000
   3f258:	str	r0, [sp, #40]	; 0x28
   3f25c:	mov	r0, r1
   3f260:	mov	r1, r2
   3f264:	ldr	r2, [sp, #40]	; 0x28
   3f268:	bl	43238 <__assert_fail@plt+0x31da4>
   3f26c:	str	r0, [sp, #48]	; 0x30
   3f270:	str	r1, [sp, #44]	; 0x2c
   3f274:	b	3f278 <__assert_fail@plt+0x2dde4>
   3f278:	ldr	r0, [sp, #44]	; 0x2c
   3f27c:	ldr	r1, [sp, #48]	; 0x30
   3f280:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f284:	mvn	r2, r2
   3f288:	subs	r1, r2, r1
   3f28c:	rscs	r0, r0, r2, asr #31
   3f290:	bge	3f3e4 <__assert_fail@plt+0x2df50>
   3f294:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f298:	ldr	r0, [fp, #8]
   3f29c:	cmn	r0, #1
   3f2a0:	bne	3f2e4 <__assert_fail@plt+0x2de50>
   3f2a4:	b	3f2a8 <__assert_fail@plt+0x2de14>
   3f2a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f2ac:	mov	r1, #-2147483648	; 0x80000000
   3f2b0:	add	r1, r1, r0, asr #31
   3f2b4:	rsbs	r0, r0, #0
   3f2b8:	rscs	r1, r1, #0
   3f2bc:	blt	3f3e4 <__assert_fail@plt+0x2df50>
   3f2c0:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f2c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f2c8:	movw	r1, #0
   3f2cc:	cmp	r1, r0
   3f2d0:	bge	3f3f8 <__assert_fail@plt+0x2df64>
   3f2d4:	mov	r0, #0
   3f2d8:	cmp	r0, #0
   3f2dc:	bne	3f3e4 <__assert_fail@plt+0x2df50>
   3f2e0:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f2e4:	ldr	r0, [fp, #8]
   3f2e8:	asr	r3, r0, #31
   3f2ec:	mov	r1, #0
   3f2f0:	mov	r2, #-2147483648	; 0x80000000
   3f2f4:	str	r0, [sp, #36]	; 0x24
   3f2f8:	mov	r0, r1
   3f2fc:	mov	r1, r2
   3f300:	ldr	r2, [sp, #36]	; 0x24
   3f304:	bl	43238 <__assert_fail@plt+0x31da4>
   3f308:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f30c:	subs	r0, r0, r2
   3f310:	sbcs	r1, r1, r2, asr #31
   3f314:	blt	3f3e4 <__assert_fail@plt+0x2df50>
   3f318:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f31c:	ldr	r0, [fp, #8]
   3f320:	cmp	r0, #0
   3f324:	bne	3f32c <__assert_fail@plt+0x2de98>
   3f328:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f330:	cmp	r0, #0
   3f334:	bge	3f3ac <__assert_fail@plt+0x2df18>
   3f338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f33c:	cmn	r0, #1
   3f340:	bne	3f374 <__assert_fail@plt+0x2dee0>
   3f344:	b	3f348 <__assert_fail@plt+0x2deb4>
   3f348:	ldr	r0, [fp, #8]
   3f34c:	mov	r1, #-2147483648	; 0x80000000
   3f350:	add	r1, r1, r0, asr #31
   3f354:	rsbs	r0, r0, #0
   3f358:	rscs	r1, r1, #0
   3f35c:	blt	3f3e4 <__assert_fail@plt+0x2df50>
   3f360:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f364:	mov	r0, #0
   3f368:	cmp	r0, #0
   3f36c:	bne	3f3e4 <__assert_fail@plt+0x2df50>
   3f370:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f378:	asr	r3, r0, #31
   3f37c:	mov	r1, #0
   3f380:	mov	r2, #-2147483648	; 0x80000000
   3f384:	str	r0, [sp, #32]
   3f388:	mov	r0, r1
   3f38c:	mov	r1, r2
   3f390:	ldr	r2, [sp, #32]
   3f394:	bl	43238 <__assert_fail@plt+0x31da4>
   3f398:	ldr	r2, [fp, #8]
   3f39c:	subs	r0, r0, r2
   3f3a0:	sbcs	r1, r1, r2, asr #31
   3f3a4:	blt	3f3e4 <__assert_fail@plt+0x2df50>
   3f3a8:	b	3f3f8 <__assert_fail@plt+0x2df64>
   3f3ac:	ldr	r0, [fp, #8]
   3f3b0:	asr	r3, r0, #31
   3f3b4:	mvn	r1, #0
   3f3b8:	mvn	r2, #-2147483648	; 0x80000000
   3f3bc:	str	r0, [sp, #28]
   3f3c0:	mov	r0, r1
   3f3c4:	mov	r1, r2
   3f3c8:	ldr	r2, [sp, #28]
   3f3cc:	bl	43238 <__assert_fail@plt+0x31da4>
   3f3d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f3d4:	subs	r0, r0, r2
   3f3d8:	sbcs	r1, r1, r2, asr #31
   3f3dc:	bge	3f3f8 <__assert_fail@plt+0x2df64>
   3f3e0:	b	3f3e4 <__assert_fail@plt+0x2df50>
   3f3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f3e8:	ldr	r1, [fp, #8]
   3f3ec:	mul	r0, r0, r1
   3f3f0:	str	r0, [fp, #-28]	; 0xffffffe4
   3f3f4:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3f3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f3fc:	ldr	r1, [fp, #8]
   3f400:	mul	r0, r0, r1
   3f404:	str	r0, [fp, #-28]	; 0xffffffe4
   3f408:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3f40c:	ldr	r0, [fp, #8]
   3f410:	cmp	r0, #0
   3f414:	bge	3f564 <__assert_fail@plt+0x2e0d0>
   3f418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f41c:	cmp	r0, #0
   3f420:	bge	3f4ec <__assert_fail@plt+0x2e058>
   3f424:	b	3f464 <__assert_fail@plt+0x2dfd0>
   3f428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f42c:	ldr	r1, [fp, #8]
   3f430:	asr	r3, r1, #31
   3f434:	mvn	r2, #0
   3f438:	str	r0, [sp, #24]
   3f43c:	mov	r0, r2
   3f440:	str	r1, [sp, #20]
   3f444:	mov	r1, r2
   3f448:	ldr	r2, [sp, #20]
   3f44c:	bl	4330c <__assert_fail@plt+0x31e78>
   3f450:	ldr	r2, [sp, #24]
   3f454:	subs	r0, r2, r0
   3f458:	rscs	r1, r1, r2, asr #31
   3f45c:	bcc	3f618 <__assert_fail@plt+0x2e184>
   3f460:	b	3f62c <__assert_fail@plt+0x2e198>
   3f464:	b	3f468 <__assert_fail@plt+0x2dfd4>
   3f468:	ldr	r0, [pc, #512]	; 3f670 <__assert_fail@plt+0x2e1dc>
   3f46c:	ldr	r1, [fp, #8]
   3f470:	cmp	r1, r0
   3f474:	blt	3f48c <__assert_fail@plt+0x2dff8>
   3f478:	b	3f4a0 <__assert_fail@plt+0x2e00c>
   3f47c:	ldr	r0, [fp, #8]
   3f480:	movw	r1, #0
   3f484:	cmp	r1, r0
   3f488:	bge	3f4a0 <__assert_fail@plt+0x2e00c>
   3f48c:	mov	r0, #1
   3f490:	mvn	r1, #0
   3f494:	str	r1, [sp, #16]
   3f498:	str	r0, [sp, #12]
   3f49c:	b	3f4cc <__assert_fail@plt+0x2e038>
   3f4a0:	ldr	r0, [fp, #8]
   3f4a4:	rsb	r0, r0, #0
   3f4a8:	asr	r3, r0, #31
   3f4ac:	mvn	r1, #0
   3f4b0:	str	r0, [sp, #8]
   3f4b4:	mov	r0, r1
   3f4b8:	ldr	r2, [sp, #8]
   3f4bc:	bl	4330c <__assert_fail@plt+0x31e78>
   3f4c0:	str	r0, [sp, #16]
   3f4c4:	str	r1, [sp, #12]
   3f4c8:	b	3f4cc <__assert_fail@plt+0x2e038>
   3f4cc:	ldr	r0, [sp, #12]
   3f4d0:	ldr	r1, [sp, #16]
   3f4d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f4d8:	mvn	r2, r2
   3f4dc:	subs	r1, r2, r1
   3f4e0:	rscs	r0, r0, r2, asr #31
   3f4e4:	bcs	3f618 <__assert_fail@plt+0x2e184>
   3f4e8:	b	3f62c <__assert_fail@plt+0x2e198>
   3f4ec:	b	3f4f0 <__assert_fail@plt+0x2e05c>
   3f4f0:	b	3f548 <__assert_fail@plt+0x2e0b4>
   3f4f4:	b	3f548 <__assert_fail@plt+0x2e0b4>
   3f4f8:	ldr	r0, [fp, #8]
   3f4fc:	cmn	r0, #1
   3f500:	bne	3f548 <__assert_fail@plt+0x2e0b4>
   3f504:	b	3f508 <__assert_fail@plt+0x2e074>
   3f508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f50c:	add	r0, r0, #0
   3f510:	movw	r1, #0
   3f514:	cmp	r1, r0
   3f518:	blt	3f618 <__assert_fail@plt+0x2e184>
   3f51c:	b	3f62c <__assert_fail@plt+0x2e198>
   3f520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f524:	movw	r1, #0
   3f528:	cmp	r1, r0
   3f52c:	bge	3f62c <__assert_fail@plt+0x2e198>
   3f530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f534:	sub	r0, r0, #1
   3f538:	mvn	r1, #0
   3f53c:	cmp	r1, r0
   3f540:	blt	3f618 <__assert_fail@plt+0x2e184>
   3f544:	b	3f62c <__assert_fail@plt+0x2e198>
   3f548:	ldr	r0, [fp, #8]
   3f54c:	movw	r1, #0
   3f550:	sdiv	r0, r1, r0
   3f554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3f558:	cmp	r0, r1
   3f55c:	blt	3f618 <__assert_fail@plt+0x2e184>
   3f560:	b	3f62c <__assert_fail@plt+0x2e198>
   3f564:	ldr	r0, [fp, #8]
   3f568:	cmp	r0, #0
   3f56c:	bne	3f574 <__assert_fail@plt+0x2e0e0>
   3f570:	b	3f62c <__assert_fail@plt+0x2e198>
   3f574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f578:	cmp	r0, #0
   3f57c:	bge	3f5e8 <__assert_fail@plt+0x2e154>
   3f580:	b	3f584 <__assert_fail@plt+0x2e0f0>
   3f584:	b	3f5cc <__assert_fail@plt+0x2e138>
   3f588:	b	3f5cc <__assert_fail@plt+0x2e138>
   3f58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f590:	cmn	r0, #1
   3f594:	bne	3f5cc <__assert_fail@plt+0x2e138>
   3f598:	b	3f59c <__assert_fail@plt+0x2e108>
   3f59c:	ldr	r0, [fp, #8]
   3f5a0:	add	r0, r0, #0
   3f5a4:	movw	r1, #0
   3f5a8:	cmp	r1, r0
   3f5ac:	blt	3f618 <__assert_fail@plt+0x2e184>
   3f5b0:	b	3f62c <__assert_fail@plt+0x2e198>
   3f5b4:	ldr	r0, [fp, #8]
   3f5b8:	sub	r0, r0, #1
   3f5bc:	mvn	r1, #0
   3f5c0:	cmp	r1, r0
   3f5c4:	blt	3f618 <__assert_fail@plt+0x2e184>
   3f5c8:	b	3f62c <__assert_fail@plt+0x2e198>
   3f5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f5d0:	movw	r1, #0
   3f5d4:	sdiv	r0, r1, r0
   3f5d8:	ldr	r1, [fp, #8]
   3f5dc:	cmp	r0, r1
   3f5e0:	blt	3f618 <__assert_fail@plt+0x2e184>
   3f5e4:	b	3f62c <__assert_fail@plt+0x2e198>
   3f5e8:	ldr	r0, [fp, #8]
   3f5ec:	asr	r3, r0, #31
   3f5f0:	mvn	r1, #0
   3f5f4:	str	r0, [sp, #4]
   3f5f8:	mov	r0, r1
   3f5fc:	ldr	r2, [sp, #4]
   3f600:	bl	4330c <__assert_fail@plt+0x31e78>
   3f604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f608:	subs	r0, r0, r2
   3f60c:	sbcs	r1, r1, r2, asr #31
   3f610:	bcs	3f62c <__assert_fail@plt+0x2e198>
   3f614:	b	3f618 <__assert_fail@plt+0x2e184>
   3f618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f61c:	ldr	r1, [fp, #8]
   3f620:	mul	r0, r0, r1
   3f624:	str	r0, [fp, #-28]	; 0xffffffe4
   3f628:	b	3f640 <__assert_fail@plt+0x2e1ac>
   3f62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f630:	ldr	r1, [fp, #8]
   3f634:	mul	r0, r0, r1
   3f638:	str	r0, [fp, #-28]	; 0xffffffe4
   3f63c:	b	3f644 <__assert_fail@plt+0x2e1b0>
   3f640:	bl	3f81c <__assert_fail@plt+0x2e388>
   3f644:	ldr	r0, [fp, #-4]
   3f648:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3f64c:	bl	3cb7c <__assert_fail@plt+0x2b6e8>
   3f650:	str	r0, [fp, #-4]
   3f654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f658:	ldr	r1, [fp, #-8]
   3f65c:	str	r0, [r1]
   3f660:	ldr	r0, [fp, #-4]
   3f664:	mov	sp, fp
   3f668:	pop	{fp, pc}
   3f66c:	svcvc	0x00ffffff
   3f670:	andhi	r0, r0, r1
   3f674:	andhi	r0, r0, r0
   3f678:			; <UNDEFINED> instruction: 0xffff8000
   3f67c:	push	{fp, lr}
   3f680:	mov	fp, sp
   3f684:	sub	sp, sp, #8
   3f688:	str	r0, [sp, #4]
   3f68c:	ldr	r0, [sp, #4]
   3f690:	movw	r1, #1
   3f694:	bl	3f6a0 <__assert_fail@plt+0x2e20c>
   3f698:	mov	sp, fp
   3f69c:	pop	{fp, pc}
   3f6a0:	push	{fp, lr}
   3f6a4:	mov	fp, sp
   3f6a8:	sub	sp, sp, #8
   3f6ac:	str	r0, [sp, #4]
   3f6b0:	str	r1, [sp]
   3f6b4:	ldr	r0, [sp, #4]
   3f6b8:	ldr	r1, [sp]
   3f6bc:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   3f6c0:	bl	3cb08 <__assert_fail@plt+0x2b674>
   3f6c4:	mov	sp, fp
   3f6c8:	pop	{fp, pc}
   3f6cc:	push	{fp, lr}
   3f6d0:	mov	fp, sp
   3f6d4:	sub	sp, sp, #8
   3f6d8:	str	r0, [sp, #4]
   3f6dc:	ldr	r0, [sp, #4]
   3f6e0:	movw	r1, #1
   3f6e4:	bl	3f6f0 <__assert_fail@plt+0x2e25c>
   3f6e8:	mov	sp, fp
   3f6ec:	pop	{fp, pc}
   3f6f0:	push	{fp, lr}
   3f6f4:	mov	fp, sp
   3f6f8:	sub	sp, sp, #8
   3f6fc:	str	r0, [sp, #4]
   3f700:	str	r1, [sp]
   3f704:	ldr	r0, [sp, #4]
   3f708:	ldr	r1, [sp]
   3f70c:	bl	41340 <__assert_fail@plt+0x2feac>
   3f710:	bl	3cb08 <__assert_fail@plt+0x2b674>
   3f714:	mov	sp, fp
   3f718:	pop	{fp, pc}
   3f71c:	push	{fp, lr}
   3f720:	mov	fp, sp
   3f724:	sub	sp, sp, #16
   3f728:	str	r0, [fp, #-4]
   3f72c:	str	r1, [sp, #8]
   3f730:	ldr	r0, [sp, #8]
   3f734:	bl	3cae4 <__assert_fail@plt+0x2b650>
   3f738:	ldr	r1, [fp, #-4]
   3f73c:	ldr	r2, [sp, #8]
   3f740:	str	r0, [sp, #4]
   3f744:	bl	11248 <memcpy@plt>
   3f748:	ldr	r0, [sp, #4]
   3f74c:	mov	sp, fp
   3f750:	pop	{fp, pc}
   3f754:	push	{fp, lr}
   3f758:	mov	fp, sp
   3f75c:	sub	sp, sp, #16
   3f760:	str	r0, [fp, #-4]
   3f764:	str	r1, [sp, #8]
   3f768:	ldr	r0, [sp, #8]
   3f76c:	bl	3cb38 <__assert_fail@plt+0x2b6a4>
   3f770:	ldr	r1, [fp, #-4]
   3f774:	ldr	r2, [sp, #8]
   3f778:	str	r0, [sp, #4]
   3f77c:	bl	11248 <memcpy@plt>
   3f780:	ldr	r0, [sp, #4]
   3f784:	mov	sp, fp
   3f788:	pop	{fp, pc}
   3f78c:	push	{fp, lr}
   3f790:	mov	fp, sp
   3f794:	sub	sp, sp, #16
   3f798:	str	r0, [fp, #-4]
   3f79c:	str	r1, [sp, #8]
   3f7a0:	ldr	r0, [sp, #8]
   3f7a4:	add	r0, r0, #1
   3f7a8:	bl	3cb38 <__assert_fail@plt+0x2b6a4>
   3f7ac:	str	r0, [sp, #4]
   3f7b0:	ldr	r0, [sp, #4]
   3f7b4:	ldr	r1, [sp, #8]
   3f7b8:	add	r0, r0, r1
   3f7bc:	movw	r1, #0
   3f7c0:	strb	r1, [r0]
   3f7c4:	ldr	r0, [sp, #4]
   3f7c8:	ldr	r1, [fp, #-4]
   3f7cc:	ldr	r2, [sp, #8]
   3f7d0:	str	r0, [sp]
   3f7d4:	bl	11248 <memcpy@plt>
   3f7d8:	ldr	r0, [sp]
   3f7dc:	mov	sp, fp
   3f7e0:	pop	{fp, pc}
   3f7e4:	push	{fp, lr}
   3f7e8:	mov	fp, sp
   3f7ec:	sub	sp, sp, #8
   3f7f0:	str	r0, [sp, #4]
   3f7f4:	ldr	r0, [sp, #4]
   3f7f8:	ldr	r1, [sp, #4]
   3f7fc:	str	r0, [sp]
   3f800:	mov	r0, r1
   3f804:	bl	1138c <strlen@plt>
   3f808:	add	r1, r0, #1
   3f80c:	ldr	r0, [sp]
   3f810:	bl	3f71c <__assert_fail@plt+0x2e288>
   3f814:	mov	sp, fp
   3f818:	pop	{fp, pc}
   3f81c:	push	{fp, lr}
   3f820:	mov	fp, sp
   3f824:	sub	sp, sp, #8
   3f828:	movw	r0, #24868	; 0x6124
   3f82c:	movt	r0, #5
   3f830:	ldr	r0, [r0]
   3f834:	movw	r1, #23187	; 0x5a93
   3f838:	movt	r1, #4
   3f83c:	str	r0, [sp, #4]
   3f840:	mov	r0, r1
   3f844:	bl	11380 <gettext@plt>
   3f848:	ldr	r1, [sp, #4]
   3f84c:	str	r0, [sp]
   3f850:	mov	r0, r1
   3f854:	movw	r1, #0
   3f858:	movw	r2, #16496	; 0x4070
   3f85c:	movt	r2, #4
   3f860:	ldr	r3, [sp]
   3f864:	bl	11308 <error@plt>
   3f868:	bl	1147c <abort@plt>
   3f86c:	push	{fp, lr}
   3f870:	mov	fp, sp
   3f874:	sub	sp, sp, #16
   3f878:	str	r0, [sp, #8]
   3f87c:	str	r1, [sp, #4]
   3f880:	ldr	r0, [sp, #8]
   3f884:	cmp	r0, #0
   3f888:	beq	3f898 <__assert_fail@plt+0x2e404>
   3f88c:	ldr	r0, [sp, #4]
   3f890:	cmp	r0, #0
   3f894:	bne	3f8a4 <__assert_fail@plt+0x2e410>
   3f898:	movw	r0, #1
   3f89c:	str	r0, [sp, #4]
   3f8a0:	str	r0, [sp, #8]
   3f8a4:	ldr	r0, [sp, #4]
   3f8a8:	cmp	r0, #0
   3f8ac:	beq	3f8e0 <__assert_fail@plt+0x2e44c>
   3f8b0:	ldr	r0, [pc, #76]	; 3f904 <__assert_fail@plt+0x2e470>
   3f8b4:	ldr	r1, [sp, #4]
   3f8b8:	udiv	r0, r0, r1
   3f8bc:	ldr	r1, [sp, #8]
   3f8c0:	cmp	r0, r1
   3f8c4:	bcs	3f8e0 <__assert_fail@plt+0x2e44c>
   3f8c8:	bl	113b0 <__errno_location@plt>
   3f8cc:	movw	r1, #12
   3f8d0:	str	r1, [r0]
   3f8d4:	movw	r0, #0
   3f8d8:	str	r0, [fp, #-4]
   3f8dc:	b	3f8f8 <__assert_fail@plt+0x2e464>
   3f8e0:	ldr	r0, [sp, #8]
   3f8e4:	ldr	r1, [sp, #4]
   3f8e8:	bl	11188 <calloc@plt>
   3f8ec:	str	r0, [sp]
   3f8f0:	ldr	r0, [sp]
   3f8f4:	str	r0, [fp, #-4]
   3f8f8:	ldr	r0, [fp, #-4]
   3f8fc:	mov	sp, fp
   3f900:	pop	{fp, pc}
   3f904:	svcvc	0x00ffffff
   3f908:	push	{fp, lr}
   3f90c:	mov	fp, sp
   3f910:	sub	sp, sp, #16
   3f914:	str	r0, [sp, #8]
   3f918:	ldr	r0, [sp, #8]
   3f91c:	cmp	r0, #0
   3f920:	bne	3f92c <__assert_fail@plt+0x2e498>
   3f924:	movw	r0, #1
   3f928:	str	r0, [sp, #8]
   3f92c:	ldr	r0, [pc, #64]	; 3f974 <__assert_fail@plt+0x2e4e0>
   3f930:	ldr	r1, [sp, #8]
   3f934:	cmp	r0, r1
   3f938:	bcs	3f954 <__assert_fail@plt+0x2e4c0>
   3f93c:	bl	113b0 <__errno_location@plt>
   3f940:	movw	r1, #12
   3f944:	str	r1, [r0]
   3f948:	movw	r0, #0
   3f94c:	str	r0, [fp, #-4]
   3f950:	b	3f968 <__assert_fail@plt+0x2e4d4>
   3f954:	ldr	r0, [sp, #8]
   3f958:	bl	1132c <malloc@plt>
   3f95c:	str	r0, [sp, #4]
   3f960:	ldr	r0, [sp, #4]
   3f964:	str	r0, [fp, #-4]
   3f968:	ldr	r0, [fp, #-4]
   3f96c:	mov	sp, fp
   3f970:	pop	{fp, pc}
   3f974:	svcvc	0x00ffffff
   3f978:	push	{fp, lr}
   3f97c:	mov	fp, sp
   3f980:	sub	sp, sp, #16
   3f984:	str	r0, [sp, #8]
   3f988:	str	r1, [sp, #4]
   3f98c:	ldr	r0, [sp, #8]
   3f990:	movw	r1, #0
   3f994:	cmp	r0, r1
   3f998:	bne	3f9ac <__assert_fail@plt+0x2e518>
   3f99c:	ldr	r0, [sp, #4]
   3f9a0:	bl	3f908 <__assert_fail@plt+0x2e474>
   3f9a4:	str	r0, [fp, #-4]
   3f9a8:	b	3fa0c <__assert_fail@plt+0x2e578>
   3f9ac:	ldr	r0, [sp, #4]
   3f9b0:	cmp	r0, #0
   3f9b4:	bne	3f9cc <__assert_fail@plt+0x2e538>
   3f9b8:	ldr	r0, [sp, #8]
   3f9bc:	bl	1388c <__assert_fail@plt+0x23f8>
   3f9c0:	movw	r0, #0
   3f9c4:	str	r0, [fp, #-4]
   3f9c8:	b	3fa0c <__assert_fail@plt+0x2e578>
   3f9cc:	ldr	r0, [pc, #68]	; 3fa18 <__assert_fail@plt+0x2e584>
   3f9d0:	ldr	r1, [sp, #4]
   3f9d4:	cmp	r0, r1
   3f9d8:	bcs	3f9f4 <__assert_fail@plt+0x2e560>
   3f9dc:	bl	113b0 <__errno_location@plt>
   3f9e0:	movw	r1, #12
   3f9e4:	str	r1, [r0]
   3f9e8:	movw	r0, #0
   3f9ec:	str	r0, [fp, #-4]
   3f9f0:	b	3fa0c <__assert_fail@plt+0x2e578>
   3f9f4:	ldr	r0, [sp, #8]
   3f9f8:	ldr	r1, [sp, #4]
   3f9fc:	bl	11290 <realloc@plt>
   3fa00:	str	r0, [sp]
   3fa04:	ldr	r0, [sp]
   3fa08:	str	r0, [fp, #-4]
   3fa0c:	ldr	r0, [fp, #-4]
   3fa10:	mov	sp, fp
   3fa14:	pop	{fp, pc}
   3fa18:	svcvc	0x00ffffff
   3fa1c:	push	{fp, lr}
   3fa20:	mov	fp, sp
   3fa24:	sub	sp, sp, #24
   3fa28:	str	r0, [fp, #-8]
   3fa2c:	str	r1, [sp, #12]
   3fa30:	ldr	r0, [fp, #-8]
   3fa34:	str	r0, [sp, #8]
   3fa38:	ldr	r0, [sp, #12]
   3fa3c:	str	r0, [sp, #4]
   3fa40:	ldr	r0, [sp, #8]
   3fa44:	ldr	r1, [sp, #4]
   3fa48:	cmp	r0, r1
   3fa4c:	bne	3fa5c <__assert_fail@plt+0x2e5c8>
   3fa50:	movw	r0, #0
   3fa54:	str	r0, [fp, #-4]
   3fa58:	b	3fac8 <__assert_fail@plt+0x2e634>
   3fa5c:	b	3fa60 <__assert_fail@plt+0x2e5cc>
   3fa60:	ldr	r0, [sp, #8]
   3fa64:	ldrb	r0, [r0]
   3fa68:	bl	42fb8 <__assert_fail@plt+0x31b24>
   3fa6c:	strb	r0, [sp, #3]
   3fa70:	ldr	r0, [sp, #4]
   3fa74:	ldrb	r0, [r0]
   3fa78:	bl	42fb8 <__assert_fail@plt+0x31b24>
   3fa7c:	strb	r0, [sp, #2]
   3fa80:	ldrb	r0, [sp, #3]
   3fa84:	cmp	r0, #0
   3fa88:	bne	3fa90 <__assert_fail@plt+0x2e5fc>
   3fa8c:	b	3fab8 <__assert_fail@plt+0x2e624>
   3fa90:	ldr	r0, [sp, #8]
   3fa94:	add	r0, r0, #1
   3fa98:	str	r0, [sp, #8]
   3fa9c:	ldr	r0, [sp, #4]
   3faa0:	add	r0, r0, #1
   3faa4:	str	r0, [sp, #4]
   3faa8:	ldrb	r0, [sp, #3]
   3faac:	ldrb	r1, [sp, #2]
   3fab0:	cmp	r0, r1
   3fab4:	beq	3fa60 <__assert_fail@plt+0x2e5cc>
   3fab8:	ldrb	r0, [sp, #3]
   3fabc:	ldrb	r1, [sp, #2]
   3fac0:	sub	r0, r0, r1
   3fac4:	str	r0, [fp, #-4]
   3fac8:	ldr	r0, [fp, #-4]
   3facc:	mov	sp, fp
   3fad0:	pop	{fp, pc}
   3fad4:	push	{fp, lr}
   3fad8:	mov	fp, sp
   3fadc:	sub	sp, sp, #16
   3fae0:	str	r0, [sp, #8]
   3fae4:	ldr	r0, [sp, #8]
   3fae8:	bl	112e4 <__fpending@plt>
   3faec:	cmp	r0, #0
   3faf0:	movw	r0, #0
   3faf4:	movne	r0, #1
   3faf8:	and	r0, r0, #1
   3fafc:	strb	r0, [sp, #7]
   3fb00:	ldr	r0, [sp, #8]
   3fb04:	bl	112f0 <ferror_unlocked@plt>
   3fb08:	cmp	r0, #0
   3fb0c:	movw	r0, #0
   3fb10:	movne	r0, #1
   3fb14:	and	r0, r0, #1
   3fb18:	strb	r0, [sp, #6]
   3fb1c:	ldr	r0, [sp, #8]
   3fb20:	bl	40fdc <__assert_fail@plt+0x2fb48>
   3fb24:	cmp	r0, #0
   3fb28:	movw	r0, #0
   3fb2c:	movne	r0, #1
   3fb30:	and	r0, r0, #1
   3fb34:	strb	r0, [sp, #5]
   3fb38:	ldrb	r0, [sp, #6]
   3fb3c:	tst	r0, #1
   3fb40:	bne	3fb6c <__assert_fail@plt+0x2e6d8>
   3fb44:	ldrb	r0, [sp, #5]
   3fb48:	tst	r0, #1
   3fb4c:	beq	3fb90 <__assert_fail@plt+0x2e6fc>
   3fb50:	ldrb	r0, [sp, #7]
   3fb54:	tst	r0, #1
   3fb58:	bne	3fb6c <__assert_fail@plt+0x2e6d8>
   3fb5c:	bl	113b0 <__errno_location@plt>
   3fb60:	ldr	r0, [r0]
   3fb64:	cmp	r0, #9
   3fb68:	beq	3fb90 <__assert_fail@plt+0x2e6fc>
   3fb6c:	ldrb	r0, [sp, #5]
   3fb70:	tst	r0, #1
   3fb74:	bne	3fb84 <__assert_fail@plt+0x2e6f0>
   3fb78:	bl	113b0 <__errno_location@plt>
   3fb7c:	movw	r1, #0
   3fb80:	str	r1, [r0]
   3fb84:	mvn	r0, #0
   3fb88:	str	r0, [fp, #-4]
   3fb8c:	b	3fb98 <__assert_fail@plt+0x2e704>
   3fb90:	movw	r0, #0
   3fb94:	str	r0, [fp, #-4]
   3fb98:	ldr	r0, [fp, #-4]
   3fb9c:	mov	sp, fp
   3fba0:	pop	{fp, pc}
   3fba4:	push	{fp, lr}
   3fba8:	mov	fp, sp
   3fbac:	sub	sp, sp, #104	; 0x68
   3fbb0:	str	r0, [fp, #-8]
   3fbb4:	str	r1, [fp, #-12]
   3fbb8:	str	r2, [fp, #-16]
   3fbbc:	str	r3, [fp, #-20]	; 0xffffffec
   3fbc0:	ldr	r0, [fp, #-12]
   3fbc4:	ldr	r1, [fp, #-8]
   3fbc8:	ldr	r1, [r1, #4]
   3fbcc:	cmp	r0, r1
   3fbd0:	bhi	3fbf0 <__assert_fail@plt+0x2e75c>
   3fbd4:	ldr	r0, [fp, #-12]
   3fbd8:	ldr	r1, [fp, #-8]
   3fbdc:	str	r0, [r1]
   3fbe0:	movw	r0, #1
   3fbe4:	and	r0, r0, #1
   3fbe8:	strb	r0, [fp, #-1]
   3fbec:	b	40fc0 <__assert_fail@plt+0x2fb2c>
   3fbf0:	b	3ffa8 <__assert_fail@plt+0x2eb14>
   3fbf4:	b	3fdc8 <__assert_fail@plt+0x2e934>
   3fbf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fbfc:	cmp	r0, #0
   3fc00:	bcs	3fd04 <__assert_fail@plt+0x2e870>
   3fc04:	ldr	r0, [fp, #-12]
   3fc08:	cmp	r0, #0
   3fc0c:	bcs	3fc94 <__assert_fail@plt+0x2e800>
   3fc10:	b	3fc30 <__assert_fail@plt+0x2e79c>
   3fc14:	ldr	r0, [fp, #-12]
   3fc18:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fc1c:	movw	r2, #127	; 0x7f
   3fc20:	udiv	r1, r2, r1
   3fc24:	cmp	r0, r1
   3fc28:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fc2c:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fc30:	b	3fc44 <__assert_fail@plt+0x2e7b0>
   3fc34:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fc38:	cmp	r0, #1
   3fc3c:	bcc	3fc54 <__assert_fail@plt+0x2e7c0>
   3fc40:	b	3fc60 <__assert_fail@plt+0x2e7cc>
   3fc44:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fc48:	movw	r1, #0
   3fc4c:	cmp	r1, r0
   3fc50:	bcs	3fc60 <__assert_fail@plt+0x2e7cc>
   3fc54:	movw	r0, #0
   3fc58:	str	r0, [fp, #-32]	; 0xffffffe0
   3fc5c:	b	3fc78 <__assert_fail@plt+0x2e7e4>
   3fc60:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fc64:	movw	r1, #0
   3fc68:	sub	r0, r1, r0
   3fc6c:	movw	r1, #127	; 0x7f
   3fc70:	udiv	r0, r1, r0
   3fc74:	str	r0, [fp, #-32]	; 0xffffffe0
   3fc78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3fc7c:	ldr	r1, [fp, #-12]
   3fc80:	mvn	r2, #0
   3fc84:	sub	r1, r2, r1
   3fc88:	cmp	r0, r1
   3fc8c:	bls	3fd98 <__assert_fail@plt+0x2e904>
   3fc90:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fc94:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fc98:	cmn	r0, #1
   3fc9c:	bne	3fce8 <__assert_fail@plt+0x2e854>
   3fca0:	b	3fcc0 <__assert_fail@plt+0x2e82c>
   3fca4:	ldr	r0, [fp, #-12]
   3fca8:	mvn	r1, #127	; 0x7f
   3fcac:	add	r0, r0, r1
   3fcb0:	movw	r1, #0
   3fcb4:	cmp	r1, r0
   3fcb8:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fcbc:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fcc0:	ldr	r0, [fp, #-12]
   3fcc4:	movw	r1, #0
   3fcc8:	cmp	r1, r0
   3fccc:	bcs	3fdb0 <__assert_fail@plt+0x2e91c>
   3fcd0:	ldr	r0, [fp, #-12]
   3fcd4:	sub	r0, r0, #1
   3fcd8:	movw	r1, #127	; 0x7f
   3fcdc:	cmp	r1, r0
   3fce0:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fce4:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fcec:	mvn	r1, #127	; 0x7f
   3fcf0:	udiv	r0, r1, r0
   3fcf4:	ldr	r1, [fp, #-12]
   3fcf8:	cmp	r0, r1
   3fcfc:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fd00:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fd04:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fd08:	cmp	r0, #0
   3fd0c:	bne	3fd14 <__assert_fail@plt+0x2e880>
   3fd10:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fd14:	ldr	r0, [fp, #-12]
   3fd18:	cmp	r0, #0
   3fd1c:	bcs	3fd80 <__assert_fail@plt+0x2e8ec>
   3fd20:	ldr	r0, [fp, #-12]
   3fd24:	cmn	r0, #1
   3fd28:	bne	3fd64 <__assert_fail@plt+0x2e8d0>
   3fd2c:	b	3fd4c <__assert_fail@plt+0x2e8b8>
   3fd30:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fd34:	mvn	r1, #127	; 0x7f
   3fd38:	add	r0, r0, r1
   3fd3c:	movw	r1, #0
   3fd40:	cmp	r1, r0
   3fd44:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fd48:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fd4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fd50:	sub	r0, r0, #1
   3fd54:	movw	r1, #127	; 0x7f
   3fd58:	cmp	r1, r0
   3fd5c:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fd60:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fd64:	ldr	r0, [fp, #-12]
   3fd68:	mvn	r1, #127	; 0x7f
   3fd6c:	udiv	r0, r1, r0
   3fd70:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fd74:	cmp	r0, r1
   3fd78:	bcc	3fd98 <__assert_fail@plt+0x2e904>
   3fd7c:	b	3fdb0 <__assert_fail@plt+0x2e91c>
   3fd80:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fd84:	movw	r1, #127	; 0x7f
   3fd88:	udiv	r0, r1, r0
   3fd8c:	ldr	r1, [fp, #-12]
   3fd90:	cmp	r0, r1
   3fd94:	bcs	3fdb0 <__assert_fail@plt+0x2e91c>
   3fd98:	ldr	r0, [fp, #-12]
   3fd9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fda0:	mul	r0, r0, r1
   3fda4:	sxtb	r0, r0
   3fda8:	str	r0, [fp, #-24]	; 0xffffffe8
   3fdac:	b	40ed8 <__assert_fail@plt+0x2fa44>
   3fdb0:	ldr	r0, [fp, #-12]
   3fdb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fdb8:	mul	r0, r0, r1
   3fdbc:	sxtb	r0, r0
   3fdc0:	str	r0, [fp, #-24]	; 0xffffffe8
   3fdc4:	b	40ef4 <__assert_fail@plt+0x2fa60>
   3fdc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fdcc:	cmp	r0, #0
   3fdd0:	bcs	3fedc <__assert_fail@plt+0x2ea48>
   3fdd4:	ldr	r0, [fp, #-12]
   3fdd8:	cmp	r0, #0
   3fddc:	bcs	3fe64 <__assert_fail@plt+0x2e9d0>
   3fde0:	b	3fe00 <__assert_fail@plt+0x2e96c>
   3fde4:	ldr	r0, [fp, #-12]
   3fde8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fdec:	movw	r2, #255	; 0xff
   3fdf0:	udiv	r1, r2, r1
   3fdf4:	cmp	r0, r1
   3fdf8:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3fdfc:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3fe00:	b	3fe14 <__assert_fail@plt+0x2e980>
   3fe04:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fe08:	cmp	r0, #1
   3fe0c:	bcc	3fe24 <__assert_fail@plt+0x2e990>
   3fe10:	b	3fe30 <__assert_fail@plt+0x2e99c>
   3fe14:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fe18:	movw	r1, #0
   3fe1c:	cmp	r1, r0
   3fe20:	bcs	3fe30 <__assert_fail@plt+0x2e99c>
   3fe24:	movw	r0, #0
   3fe28:	str	r0, [fp, #-36]	; 0xffffffdc
   3fe2c:	b	3fe48 <__assert_fail@plt+0x2e9b4>
   3fe30:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fe34:	movw	r1, #0
   3fe38:	sub	r0, r1, r0
   3fe3c:	movw	r1, #255	; 0xff
   3fe40:	udiv	r0, r1, r0
   3fe44:	str	r0, [fp, #-36]	; 0xffffffdc
   3fe48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3fe4c:	ldr	r1, [fp, #-12]
   3fe50:	mvn	r2, #0
   3fe54:	sub	r1, r2, r1
   3fe58:	cmp	r0, r1
   3fe5c:	bls	3ff78 <__assert_fail@plt+0x2eae4>
   3fe60:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3fe64:	b	3fe6c <__assert_fail@plt+0x2e9d8>
   3fe68:	b	3fe70 <__assert_fail@plt+0x2e9dc>
   3fe6c:	b	3fec0 <__assert_fail@plt+0x2ea2c>
   3fe70:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fe74:	cmn	r0, #1
   3fe78:	bne	3fec0 <__assert_fail@plt+0x2ea2c>
   3fe7c:	b	3fe98 <__assert_fail@plt+0x2ea04>
   3fe80:	ldr	r0, [fp, #-12]
   3fe84:	add	r0, r0, #0
   3fe88:	movw	r1, #0
   3fe8c:	cmp	r1, r0
   3fe90:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3fe94:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3fe98:	ldr	r0, [fp, #-12]
   3fe9c:	movw	r1, #0
   3fea0:	cmp	r1, r0
   3fea4:	bcs	3ff90 <__assert_fail@plt+0x2eafc>
   3fea8:	ldr	r0, [fp, #-12]
   3feac:	sub	r0, r0, #1
   3feb0:	mvn	r1, #0
   3feb4:	cmp	r1, r0
   3feb8:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3febc:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3fec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fec4:	movw	r1, #0
   3fec8:	udiv	r0, r1, r0
   3fecc:	ldr	r1, [fp, #-12]
   3fed0:	cmp	r0, r1
   3fed4:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3fed8:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3fedc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fee0:	cmp	r0, #0
   3fee4:	bne	3feec <__assert_fail@plt+0x2ea58>
   3fee8:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3feec:	ldr	r0, [fp, #-12]
   3fef0:	cmp	r0, #0
   3fef4:	bcs	3ff60 <__assert_fail@plt+0x2eacc>
   3fef8:	b	3ff00 <__assert_fail@plt+0x2ea6c>
   3fefc:	b	3ff04 <__assert_fail@plt+0x2ea70>
   3ff00:	b	3ff44 <__assert_fail@plt+0x2eab0>
   3ff04:	ldr	r0, [fp, #-12]
   3ff08:	cmn	r0, #1
   3ff0c:	bne	3ff44 <__assert_fail@plt+0x2eab0>
   3ff10:	b	3ff2c <__assert_fail@plt+0x2ea98>
   3ff14:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff18:	add	r0, r0, #0
   3ff1c:	movw	r1, #0
   3ff20:	cmp	r1, r0
   3ff24:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3ff28:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3ff2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff30:	sub	r0, r0, #1
   3ff34:	mvn	r1, #0
   3ff38:	cmp	r1, r0
   3ff3c:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3ff40:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3ff44:	ldr	r0, [fp, #-12]
   3ff48:	movw	r1, #0
   3ff4c:	udiv	r0, r1, r0
   3ff50:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ff54:	cmp	r0, r1
   3ff58:	bcc	3ff78 <__assert_fail@plt+0x2eae4>
   3ff5c:	b	3ff90 <__assert_fail@plt+0x2eafc>
   3ff60:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ff64:	movw	r1, #255	; 0xff
   3ff68:	udiv	r0, r1, r0
   3ff6c:	ldr	r1, [fp, #-12]
   3ff70:	cmp	r0, r1
   3ff74:	bcs	3ff90 <__assert_fail@plt+0x2eafc>
   3ff78:	ldr	r0, [fp, #-12]
   3ff7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ff80:	mul	r0, r0, r1
   3ff84:	and	r0, r0, #255	; 0xff
   3ff88:	str	r0, [fp, #-24]	; 0xffffffe8
   3ff8c:	b	40ed8 <__assert_fail@plt+0x2fa44>
   3ff90:	ldr	r0, [fp, #-12]
   3ff94:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ff98:	mul	r0, r0, r1
   3ff9c:	and	r0, r0, #255	; 0xff
   3ffa0:	str	r0, [fp, #-24]	; 0xffffffe8
   3ffa4:	b	40ef4 <__assert_fail@plt+0x2fa60>
   3ffa8:	b	40360 <__assert_fail@plt+0x2eecc>
   3ffac:	b	40180 <__assert_fail@plt+0x2ecec>
   3ffb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ffb4:	cmp	r0, #0
   3ffb8:	bcs	400bc <__assert_fail@plt+0x2ec28>
   3ffbc:	ldr	r0, [fp, #-12]
   3ffc0:	cmp	r0, #0
   3ffc4:	bcs	4004c <__assert_fail@plt+0x2ebb8>
   3ffc8:	b	3ffe8 <__assert_fail@plt+0x2eb54>
   3ffcc:	ldr	r0, [fp, #-12]
   3ffd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ffd4:	movw	r2, #32767	; 0x7fff
   3ffd8:	udiv	r1, r2, r1
   3ffdc:	cmp	r0, r1
   3ffe0:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   3ffe4:	b	40168 <__assert_fail@plt+0x2ecd4>
   3ffe8:	b	3fffc <__assert_fail@plt+0x2eb68>
   3ffec:	ldr	r0, [fp, #-20]	; 0xffffffec
   3fff0:	cmp	r0, #1
   3fff4:	bcc	4000c <__assert_fail@plt+0x2eb78>
   3fff8:	b	40018 <__assert_fail@plt+0x2eb84>
   3fffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40000:	movw	r1, #0
   40004:	cmp	r1, r0
   40008:	bcs	40018 <__assert_fail@plt+0x2eb84>
   4000c:	movw	r0, #0
   40010:	str	r0, [fp, #-40]	; 0xffffffd8
   40014:	b	40030 <__assert_fail@plt+0x2eb9c>
   40018:	ldr	r0, [fp, #-20]	; 0xffffffec
   4001c:	movw	r1, #0
   40020:	sub	r0, r1, r0
   40024:	movw	r1, #32767	; 0x7fff
   40028:	udiv	r0, r1, r0
   4002c:	str	r0, [fp, #-40]	; 0xffffffd8
   40030:	ldr	r0, [fp, #-40]	; 0xffffffd8
   40034:	ldr	r1, [fp, #-12]
   40038:	mvn	r2, #0
   4003c:	sub	r1, r2, r1
   40040:	cmp	r0, r1
   40044:	bls	40150 <__assert_fail@plt+0x2ecbc>
   40048:	b	40168 <__assert_fail@plt+0x2ecd4>
   4004c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40050:	cmn	r0, #1
   40054:	bne	400a0 <__assert_fail@plt+0x2ec0c>
   40058:	b	40078 <__assert_fail@plt+0x2ebe4>
   4005c:	ldr	r0, [pc, #3956]	; 40fd8 <__assert_fail@plt+0x2fb44>
   40060:	ldr	r1, [fp, #-12]
   40064:	add	r0, r1, r0
   40068:	movw	r1, #0
   4006c:	cmp	r1, r0
   40070:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   40074:	b	40168 <__assert_fail@plt+0x2ecd4>
   40078:	ldr	r0, [fp, #-12]
   4007c:	movw	r1, #0
   40080:	cmp	r1, r0
   40084:	bcs	40168 <__assert_fail@plt+0x2ecd4>
   40088:	ldr	r0, [fp, #-12]
   4008c:	sub	r0, r0, #1
   40090:	movw	r1, #32767	; 0x7fff
   40094:	cmp	r1, r0
   40098:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   4009c:	b	40168 <__assert_fail@plt+0x2ecd4>
   400a0:	ldr	r0, [pc, #3888]	; 40fd8 <__assert_fail@plt+0x2fb44>
   400a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   400a8:	udiv	r0, r0, r1
   400ac:	ldr	r1, [fp, #-12]
   400b0:	cmp	r0, r1
   400b4:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   400b8:	b	40168 <__assert_fail@plt+0x2ecd4>
   400bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   400c0:	cmp	r0, #0
   400c4:	bne	400cc <__assert_fail@plt+0x2ec38>
   400c8:	b	40168 <__assert_fail@plt+0x2ecd4>
   400cc:	ldr	r0, [fp, #-12]
   400d0:	cmp	r0, #0
   400d4:	bcs	40138 <__assert_fail@plt+0x2eca4>
   400d8:	ldr	r0, [fp, #-12]
   400dc:	cmn	r0, #1
   400e0:	bne	4011c <__assert_fail@plt+0x2ec88>
   400e4:	b	40104 <__assert_fail@plt+0x2ec70>
   400e8:	ldr	r0, [pc, #3816]	; 40fd8 <__assert_fail@plt+0x2fb44>
   400ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   400f0:	add	r0, r1, r0
   400f4:	movw	r1, #0
   400f8:	cmp	r1, r0
   400fc:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   40100:	b	40168 <__assert_fail@plt+0x2ecd4>
   40104:	ldr	r0, [fp, #-20]	; 0xffffffec
   40108:	sub	r0, r0, #1
   4010c:	movw	r1, #32767	; 0x7fff
   40110:	cmp	r1, r0
   40114:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   40118:	b	40168 <__assert_fail@plt+0x2ecd4>
   4011c:	ldr	r0, [pc, #3764]	; 40fd8 <__assert_fail@plt+0x2fb44>
   40120:	ldr	r1, [fp, #-12]
   40124:	udiv	r0, r0, r1
   40128:	ldr	r1, [fp, #-20]	; 0xffffffec
   4012c:	cmp	r0, r1
   40130:	bcc	40150 <__assert_fail@plt+0x2ecbc>
   40134:	b	40168 <__assert_fail@plt+0x2ecd4>
   40138:	ldr	r0, [fp, #-20]	; 0xffffffec
   4013c:	movw	r1, #32767	; 0x7fff
   40140:	udiv	r0, r1, r0
   40144:	ldr	r1, [fp, #-12]
   40148:	cmp	r0, r1
   4014c:	bcs	40168 <__assert_fail@plt+0x2ecd4>
   40150:	ldr	r0, [fp, #-12]
   40154:	ldr	r1, [fp, #-20]	; 0xffffffec
   40158:	mul	r0, r0, r1
   4015c:	sxth	r0, r0
   40160:	str	r0, [fp, #-24]	; 0xffffffe8
   40164:	b	40ed8 <__assert_fail@plt+0x2fa44>
   40168:	ldr	r0, [fp, #-12]
   4016c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40170:	mul	r0, r0, r1
   40174:	sxth	r0, r0
   40178:	str	r0, [fp, #-24]	; 0xffffffe8
   4017c:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40180:	ldr	r0, [fp, #-20]	; 0xffffffec
   40184:	cmp	r0, #0
   40188:	bcs	40294 <__assert_fail@plt+0x2ee00>
   4018c:	ldr	r0, [fp, #-12]
   40190:	cmp	r0, #0
   40194:	bcs	4021c <__assert_fail@plt+0x2ed88>
   40198:	b	401b8 <__assert_fail@plt+0x2ed24>
   4019c:	ldr	r0, [fp, #-12]
   401a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   401a4:	movw	r2, #65535	; 0xffff
   401a8:	udiv	r1, r2, r1
   401ac:	cmp	r0, r1
   401b0:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   401b4:	b	40348 <__assert_fail@plt+0x2eeb4>
   401b8:	b	401cc <__assert_fail@plt+0x2ed38>
   401bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   401c0:	cmp	r0, #1
   401c4:	bcc	401dc <__assert_fail@plt+0x2ed48>
   401c8:	b	401e8 <__assert_fail@plt+0x2ed54>
   401cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   401d0:	movw	r1, #0
   401d4:	cmp	r1, r0
   401d8:	bcs	401e8 <__assert_fail@plt+0x2ed54>
   401dc:	movw	r0, #0
   401e0:	str	r0, [fp, #-44]	; 0xffffffd4
   401e4:	b	40200 <__assert_fail@plt+0x2ed6c>
   401e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   401ec:	movw	r1, #0
   401f0:	sub	r0, r1, r0
   401f4:	movw	r1, #65535	; 0xffff
   401f8:	udiv	r0, r1, r0
   401fc:	str	r0, [fp, #-44]	; 0xffffffd4
   40200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   40204:	ldr	r1, [fp, #-12]
   40208:	mvn	r2, #0
   4020c:	sub	r1, r2, r1
   40210:	cmp	r0, r1
   40214:	bls	40330 <__assert_fail@plt+0x2ee9c>
   40218:	b	40348 <__assert_fail@plt+0x2eeb4>
   4021c:	b	40224 <__assert_fail@plt+0x2ed90>
   40220:	b	40228 <__assert_fail@plt+0x2ed94>
   40224:	b	40278 <__assert_fail@plt+0x2ede4>
   40228:	ldr	r0, [fp, #-20]	; 0xffffffec
   4022c:	cmn	r0, #1
   40230:	bne	40278 <__assert_fail@plt+0x2ede4>
   40234:	b	40250 <__assert_fail@plt+0x2edbc>
   40238:	ldr	r0, [fp, #-12]
   4023c:	add	r0, r0, #0
   40240:	movw	r1, #0
   40244:	cmp	r1, r0
   40248:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   4024c:	b	40348 <__assert_fail@plt+0x2eeb4>
   40250:	ldr	r0, [fp, #-12]
   40254:	movw	r1, #0
   40258:	cmp	r1, r0
   4025c:	bcs	40348 <__assert_fail@plt+0x2eeb4>
   40260:	ldr	r0, [fp, #-12]
   40264:	sub	r0, r0, #1
   40268:	mvn	r1, #0
   4026c:	cmp	r1, r0
   40270:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   40274:	b	40348 <__assert_fail@plt+0x2eeb4>
   40278:	ldr	r0, [fp, #-20]	; 0xffffffec
   4027c:	movw	r1, #0
   40280:	udiv	r0, r1, r0
   40284:	ldr	r1, [fp, #-12]
   40288:	cmp	r0, r1
   4028c:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   40290:	b	40348 <__assert_fail@plt+0x2eeb4>
   40294:	ldr	r0, [fp, #-20]	; 0xffffffec
   40298:	cmp	r0, #0
   4029c:	bne	402a4 <__assert_fail@plt+0x2ee10>
   402a0:	b	40348 <__assert_fail@plt+0x2eeb4>
   402a4:	ldr	r0, [fp, #-12]
   402a8:	cmp	r0, #0
   402ac:	bcs	40318 <__assert_fail@plt+0x2ee84>
   402b0:	b	402b8 <__assert_fail@plt+0x2ee24>
   402b4:	b	402bc <__assert_fail@plt+0x2ee28>
   402b8:	b	402fc <__assert_fail@plt+0x2ee68>
   402bc:	ldr	r0, [fp, #-12]
   402c0:	cmn	r0, #1
   402c4:	bne	402fc <__assert_fail@plt+0x2ee68>
   402c8:	b	402e4 <__assert_fail@plt+0x2ee50>
   402cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   402d0:	add	r0, r0, #0
   402d4:	movw	r1, #0
   402d8:	cmp	r1, r0
   402dc:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   402e0:	b	40348 <__assert_fail@plt+0x2eeb4>
   402e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   402e8:	sub	r0, r0, #1
   402ec:	mvn	r1, #0
   402f0:	cmp	r1, r0
   402f4:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   402f8:	b	40348 <__assert_fail@plt+0x2eeb4>
   402fc:	ldr	r0, [fp, #-12]
   40300:	movw	r1, #0
   40304:	udiv	r0, r1, r0
   40308:	ldr	r1, [fp, #-20]	; 0xffffffec
   4030c:	cmp	r0, r1
   40310:	bcc	40330 <__assert_fail@plt+0x2ee9c>
   40314:	b	40348 <__assert_fail@plt+0x2eeb4>
   40318:	ldr	r0, [fp, #-20]	; 0xffffffec
   4031c:	movw	r1, #65535	; 0xffff
   40320:	udiv	r0, r1, r0
   40324:	ldr	r1, [fp, #-12]
   40328:	cmp	r0, r1
   4032c:	bcs	40348 <__assert_fail@plt+0x2eeb4>
   40330:	ldr	r0, [fp, #-12]
   40334:	ldr	r1, [fp, #-20]	; 0xffffffec
   40338:	mul	r0, r0, r1
   4033c:	uxth	r0, r0
   40340:	str	r0, [fp, #-24]	; 0xffffffe8
   40344:	b	40ed8 <__assert_fail@plt+0x2fa44>
   40348:	ldr	r0, [fp, #-12]
   4034c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40350:	mul	r0, r0, r1
   40354:	uxth	r0, r0
   40358:	str	r0, [fp, #-24]	; 0xffffffe8
   4035c:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40360:	b	40364 <__assert_fail@plt+0x2eed0>
   40364:	b	40528 <__assert_fail@plt+0x2f094>
   40368:	ldr	r0, [fp, #-20]	; 0xffffffec
   4036c:	cmp	r0, #0
   40370:	bcs	40470 <__assert_fail@plt+0x2efdc>
   40374:	ldr	r0, [fp, #-12]
   40378:	cmp	r0, #0
   4037c:	bcs	40404 <__assert_fail@plt+0x2ef70>
   40380:	b	403a0 <__assert_fail@plt+0x2ef0c>
   40384:	ldr	r0, [pc, #3140]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   40388:	ldr	r1, [fp, #-12]
   4038c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40390:	udiv	r0, r0, r2
   40394:	cmp	r1, r0
   40398:	bcc	40500 <__assert_fail@plt+0x2f06c>
   4039c:	b	40514 <__assert_fail@plt+0x2f080>
   403a0:	b	403b4 <__assert_fail@plt+0x2ef20>
   403a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   403a8:	cmp	r0, #1
   403ac:	bcc	403c4 <__assert_fail@plt+0x2ef30>
   403b0:	b	403d0 <__assert_fail@plt+0x2ef3c>
   403b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   403b8:	movw	r1, #0
   403bc:	cmp	r1, r0
   403c0:	bcs	403d0 <__assert_fail@plt+0x2ef3c>
   403c4:	movw	r0, #0
   403c8:	str	r0, [fp, #-48]	; 0xffffffd0
   403cc:	b	403e8 <__assert_fail@plt+0x2ef54>
   403d0:	ldr	r0, [pc, #3064]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   403d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   403d8:	movw	r2, #0
   403dc:	sub	r1, r2, r1
   403e0:	udiv	r0, r0, r1
   403e4:	str	r0, [fp, #-48]	; 0xffffffd0
   403e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   403ec:	ldr	r1, [fp, #-12]
   403f0:	mvn	r2, #0
   403f4:	sub	r1, r2, r1
   403f8:	cmp	r0, r1
   403fc:	bls	40500 <__assert_fail@plt+0x2f06c>
   40400:	b	40514 <__assert_fail@plt+0x2f080>
   40404:	ldr	r0, [fp, #-20]	; 0xffffffec
   40408:	cmn	r0, #1
   4040c:	bne	40454 <__assert_fail@plt+0x2efc0>
   40410:	b	4042c <__assert_fail@plt+0x2ef98>
   40414:	ldr	r0, [fp, #-12]
   40418:	add	r0, r0, #-2147483648	; 0x80000000
   4041c:	movw	r1, #0
   40420:	cmp	r1, r0
   40424:	bcc	40500 <__assert_fail@plt+0x2f06c>
   40428:	b	40514 <__assert_fail@plt+0x2f080>
   4042c:	ldr	r0, [fp, #-12]
   40430:	movw	r1, #0
   40434:	cmp	r1, r0
   40438:	bcs	40514 <__assert_fail@plt+0x2f080>
   4043c:	ldr	r0, [pc, #2956]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   40440:	ldr	r1, [fp, #-12]
   40444:	sub	r1, r1, #1
   40448:	cmp	r0, r1
   4044c:	bcc	40500 <__assert_fail@plt+0x2f06c>
   40450:	b	40514 <__assert_fail@plt+0x2f080>
   40454:	ldr	r0, [pc, #2936]	; 40fd4 <__assert_fail@plt+0x2fb40>
   40458:	ldr	r1, [fp, #-20]	; 0xffffffec
   4045c:	udiv	r0, r0, r1
   40460:	ldr	r1, [fp, #-12]
   40464:	cmp	r0, r1
   40468:	bcc	40500 <__assert_fail@plt+0x2f06c>
   4046c:	b	40514 <__assert_fail@plt+0x2f080>
   40470:	ldr	r0, [fp, #-20]	; 0xffffffec
   40474:	cmp	r0, #0
   40478:	bne	40480 <__assert_fail@plt+0x2efec>
   4047c:	b	40514 <__assert_fail@plt+0x2f080>
   40480:	ldr	r0, [fp, #-12]
   40484:	cmp	r0, #0
   40488:	bcs	404e8 <__assert_fail@plt+0x2f054>
   4048c:	ldr	r0, [fp, #-12]
   40490:	cmn	r0, #1
   40494:	bne	404cc <__assert_fail@plt+0x2f038>
   40498:	b	404b4 <__assert_fail@plt+0x2f020>
   4049c:	ldr	r0, [fp, #-20]	; 0xffffffec
   404a0:	add	r0, r0, #-2147483648	; 0x80000000
   404a4:	movw	r1, #0
   404a8:	cmp	r1, r0
   404ac:	bcc	40500 <__assert_fail@plt+0x2f06c>
   404b0:	b	40514 <__assert_fail@plt+0x2f080>
   404b4:	ldr	r0, [pc, #2836]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   404b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   404bc:	sub	r1, r1, #1
   404c0:	cmp	r0, r1
   404c4:	bcc	40500 <__assert_fail@plt+0x2f06c>
   404c8:	b	40514 <__assert_fail@plt+0x2f080>
   404cc:	ldr	r0, [pc, #2816]	; 40fd4 <__assert_fail@plt+0x2fb40>
   404d0:	ldr	r1, [fp, #-12]
   404d4:	udiv	r0, r0, r1
   404d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   404dc:	cmp	r0, r1
   404e0:	bcc	40500 <__assert_fail@plt+0x2f06c>
   404e4:	b	40514 <__assert_fail@plt+0x2f080>
   404e8:	ldr	r0, [pc, #2784]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   404ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   404f0:	udiv	r0, r0, r1
   404f4:	ldr	r1, [fp, #-12]
   404f8:	cmp	r0, r1
   404fc:	bcs	40514 <__assert_fail@plt+0x2f080>
   40500:	ldr	r0, [fp, #-12]
   40504:	ldr	r1, [fp, #-20]	; 0xffffffec
   40508:	mul	r0, r0, r1
   4050c:	str	r0, [fp, #-24]	; 0xffffffe8
   40510:	b	40ed8 <__assert_fail@plt+0x2fa44>
   40514:	ldr	r0, [fp, #-12]
   40518:	ldr	r1, [fp, #-20]	; 0xffffffec
   4051c:	mul	r0, r0, r1
   40520:	str	r0, [fp, #-24]	; 0xffffffe8
   40524:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40528:	ldr	r0, [fp, #-20]	; 0xffffffec
   4052c:	cmp	r0, #0
   40530:	bcs	4063c <__assert_fail@plt+0x2f1a8>
   40534:	ldr	r0, [fp, #-12]
   40538:	cmp	r0, #0
   4053c:	bcs	405c4 <__assert_fail@plt+0x2f130>
   40540:	b	40560 <__assert_fail@plt+0x2f0cc>
   40544:	ldr	r0, [fp, #-12]
   40548:	ldr	r1, [fp, #-20]	; 0xffffffec
   4054c:	mvn	r2, #0
   40550:	udiv	r1, r2, r1
   40554:	cmp	r0, r1
   40558:	bcc	406d8 <__assert_fail@plt+0x2f244>
   4055c:	b	406ec <__assert_fail@plt+0x2f258>
   40560:	b	40574 <__assert_fail@plt+0x2f0e0>
   40564:	ldr	r0, [fp, #-20]	; 0xffffffec
   40568:	cmp	r0, #1
   4056c:	bcc	40584 <__assert_fail@plt+0x2f0f0>
   40570:	b	40590 <__assert_fail@plt+0x2f0fc>
   40574:	ldr	r0, [fp, #-20]	; 0xffffffec
   40578:	movw	r1, #0
   4057c:	cmp	r1, r0
   40580:	bcs	40590 <__assert_fail@plt+0x2f0fc>
   40584:	movw	r0, #1
   40588:	str	r0, [sp, #52]	; 0x34
   4058c:	b	405a8 <__assert_fail@plt+0x2f114>
   40590:	ldr	r0, [fp, #-20]	; 0xffffffec
   40594:	movw	r1, #0
   40598:	sub	r0, r1, r0
   4059c:	mvn	r1, #0
   405a0:	udiv	r0, r1, r0
   405a4:	str	r0, [sp, #52]	; 0x34
   405a8:	ldr	r0, [sp, #52]	; 0x34
   405ac:	ldr	r1, [fp, #-12]
   405b0:	mvn	r2, #0
   405b4:	sub	r1, r2, r1
   405b8:	cmp	r0, r1
   405bc:	bls	406d8 <__assert_fail@plt+0x2f244>
   405c0:	b	406ec <__assert_fail@plt+0x2f258>
   405c4:	b	405cc <__assert_fail@plt+0x2f138>
   405c8:	b	405d0 <__assert_fail@plt+0x2f13c>
   405cc:	b	40620 <__assert_fail@plt+0x2f18c>
   405d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   405d4:	cmn	r0, #1
   405d8:	bne	40620 <__assert_fail@plt+0x2f18c>
   405dc:	b	405f8 <__assert_fail@plt+0x2f164>
   405e0:	ldr	r0, [fp, #-12]
   405e4:	add	r0, r0, #0
   405e8:	movw	r1, #0
   405ec:	cmp	r1, r0
   405f0:	bcc	406d8 <__assert_fail@plt+0x2f244>
   405f4:	b	406ec <__assert_fail@plt+0x2f258>
   405f8:	ldr	r0, [fp, #-12]
   405fc:	movw	r1, #0
   40600:	cmp	r1, r0
   40604:	bcs	406ec <__assert_fail@plt+0x2f258>
   40608:	ldr	r0, [fp, #-12]
   4060c:	sub	r0, r0, #1
   40610:	mvn	r1, #0
   40614:	cmp	r1, r0
   40618:	bcc	406d8 <__assert_fail@plt+0x2f244>
   4061c:	b	406ec <__assert_fail@plt+0x2f258>
   40620:	ldr	r0, [fp, #-20]	; 0xffffffec
   40624:	movw	r1, #0
   40628:	udiv	r0, r1, r0
   4062c:	ldr	r1, [fp, #-12]
   40630:	cmp	r0, r1
   40634:	bcc	406d8 <__assert_fail@plt+0x2f244>
   40638:	b	406ec <__assert_fail@plt+0x2f258>
   4063c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40640:	cmp	r0, #0
   40644:	bne	4064c <__assert_fail@plt+0x2f1b8>
   40648:	b	406ec <__assert_fail@plt+0x2f258>
   4064c:	ldr	r0, [fp, #-12]
   40650:	cmp	r0, #0
   40654:	bcs	406c0 <__assert_fail@plt+0x2f22c>
   40658:	b	40660 <__assert_fail@plt+0x2f1cc>
   4065c:	b	40664 <__assert_fail@plt+0x2f1d0>
   40660:	b	406a4 <__assert_fail@plt+0x2f210>
   40664:	ldr	r0, [fp, #-12]
   40668:	cmn	r0, #1
   4066c:	bne	406a4 <__assert_fail@plt+0x2f210>
   40670:	b	4068c <__assert_fail@plt+0x2f1f8>
   40674:	ldr	r0, [fp, #-20]	; 0xffffffec
   40678:	add	r0, r0, #0
   4067c:	movw	r1, #0
   40680:	cmp	r1, r0
   40684:	bcc	406d8 <__assert_fail@plt+0x2f244>
   40688:	b	406ec <__assert_fail@plt+0x2f258>
   4068c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40690:	sub	r0, r0, #1
   40694:	mvn	r1, #0
   40698:	cmp	r1, r0
   4069c:	bcc	406d8 <__assert_fail@plt+0x2f244>
   406a0:	b	406ec <__assert_fail@plt+0x2f258>
   406a4:	ldr	r0, [fp, #-12]
   406a8:	movw	r1, #0
   406ac:	udiv	r0, r1, r0
   406b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   406b4:	cmp	r0, r1
   406b8:	bcc	406d8 <__assert_fail@plt+0x2f244>
   406bc:	b	406ec <__assert_fail@plt+0x2f258>
   406c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   406c4:	mvn	r1, #0
   406c8:	udiv	r0, r1, r0
   406cc:	ldr	r1, [fp, #-12]
   406d0:	cmp	r0, r1
   406d4:	bcs	406ec <__assert_fail@plt+0x2f258>
   406d8:	ldr	r0, [fp, #-12]
   406dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   406e0:	mul	r0, r0, r1
   406e4:	str	r0, [fp, #-24]	; 0xffffffe8
   406e8:	b	40ed8 <__assert_fail@plt+0x2fa44>
   406ec:	ldr	r0, [fp, #-12]
   406f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   406f4:	mul	r0, r0, r1
   406f8:	str	r0, [fp, #-24]	; 0xffffffe8
   406fc:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40700:	b	40704 <__assert_fail@plt+0x2f270>
   40704:	b	408c8 <__assert_fail@plt+0x2f434>
   40708:	ldr	r0, [fp, #-20]	; 0xffffffec
   4070c:	cmp	r0, #0
   40710:	bcs	40810 <__assert_fail@plt+0x2f37c>
   40714:	ldr	r0, [fp, #-12]
   40718:	cmp	r0, #0
   4071c:	bcs	407a4 <__assert_fail@plt+0x2f310>
   40720:	b	40740 <__assert_fail@plt+0x2f2ac>
   40724:	ldr	r0, [pc, #2212]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   40728:	ldr	r1, [fp, #-12]
   4072c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40730:	udiv	r0, r0, r2
   40734:	cmp	r1, r0
   40738:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   4073c:	b	408b4 <__assert_fail@plt+0x2f420>
   40740:	b	40754 <__assert_fail@plt+0x2f2c0>
   40744:	ldr	r0, [fp, #-20]	; 0xffffffec
   40748:	cmp	r0, #1
   4074c:	bcc	40764 <__assert_fail@plt+0x2f2d0>
   40750:	b	40770 <__assert_fail@plt+0x2f2dc>
   40754:	ldr	r0, [fp, #-20]	; 0xffffffec
   40758:	movw	r1, #0
   4075c:	cmp	r1, r0
   40760:	bcs	40770 <__assert_fail@plt+0x2f2dc>
   40764:	movw	r0, #0
   40768:	str	r0, [sp, #48]	; 0x30
   4076c:	b	40788 <__assert_fail@plt+0x2f2f4>
   40770:	ldr	r0, [pc, #2136]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   40774:	ldr	r1, [fp, #-20]	; 0xffffffec
   40778:	movw	r2, #0
   4077c:	sub	r1, r2, r1
   40780:	udiv	r0, r0, r1
   40784:	str	r0, [sp, #48]	; 0x30
   40788:	ldr	r0, [sp, #48]	; 0x30
   4078c:	ldr	r1, [fp, #-12]
   40790:	mvn	r2, #0
   40794:	sub	r1, r2, r1
   40798:	cmp	r0, r1
   4079c:	bls	408a0 <__assert_fail@plt+0x2f40c>
   407a0:	b	408b4 <__assert_fail@plt+0x2f420>
   407a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   407a8:	cmn	r0, #1
   407ac:	bne	407f4 <__assert_fail@plt+0x2f360>
   407b0:	b	407cc <__assert_fail@plt+0x2f338>
   407b4:	ldr	r0, [fp, #-12]
   407b8:	add	r0, r0, #-2147483648	; 0x80000000
   407bc:	movw	r1, #0
   407c0:	cmp	r1, r0
   407c4:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   407c8:	b	408b4 <__assert_fail@plt+0x2f420>
   407cc:	ldr	r0, [fp, #-12]
   407d0:	movw	r1, #0
   407d4:	cmp	r1, r0
   407d8:	bcs	408b4 <__assert_fail@plt+0x2f420>
   407dc:	ldr	r0, [pc, #2028]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   407e0:	ldr	r1, [fp, #-12]
   407e4:	sub	r1, r1, #1
   407e8:	cmp	r0, r1
   407ec:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   407f0:	b	408b4 <__assert_fail@plt+0x2f420>
   407f4:	ldr	r0, [pc, #2008]	; 40fd4 <__assert_fail@plt+0x2fb40>
   407f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   407fc:	udiv	r0, r0, r1
   40800:	ldr	r1, [fp, #-12]
   40804:	cmp	r0, r1
   40808:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   4080c:	b	408b4 <__assert_fail@plt+0x2f420>
   40810:	ldr	r0, [fp, #-20]	; 0xffffffec
   40814:	cmp	r0, #0
   40818:	bne	40820 <__assert_fail@plt+0x2f38c>
   4081c:	b	408b4 <__assert_fail@plt+0x2f420>
   40820:	ldr	r0, [fp, #-12]
   40824:	cmp	r0, #0
   40828:	bcs	40888 <__assert_fail@plt+0x2f3f4>
   4082c:	ldr	r0, [fp, #-12]
   40830:	cmn	r0, #1
   40834:	bne	4086c <__assert_fail@plt+0x2f3d8>
   40838:	b	40854 <__assert_fail@plt+0x2f3c0>
   4083c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40840:	add	r0, r0, #-2147483648	; 0x80000000
   40844:	movw	r1, #0
   40848:	cmp	r1, r0
   4084c:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   40850:	b	408b4 <__assert_fail@plt+0x2f420>
   40854:	ldr	r0, [pc, #1908]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   40858:	ldr	r1, [fp, #-20]	; 0xffffffec
   4085c:	sub	r1, r1, #1
   40860:	cmp	r0, r1
   40864:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   40868:	b	408b4 <__assert_fail@plt+0x2f420>
   4086c:	ldr	r0, [pc, #1888]	; 40fd4 <__assert_fail@plt+0x2fb40>
   40870:	ldr	r1, [fp, #-12]
   40874:	udiv	r0, r0, r1
   40878:	ldr	r1, [fp, #-20]	; 0xffffffec
   4087c:	cmp	r0, r1
   40880:	bcc	408a0 <__assert_fail@plt+0x2f40c>
   40884:	b	408b4 <__assert_fail@plt+0x2f420>
   40888:	ldr	r0, [pc, #1856]	; 40fd0 <__assert_fail@plt+0x2fb3c>
   4088c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40890:	udiv	r0, r0, r1
   40894:	ldr	r1, [fp, #-12]
   40898:	cmp	r0, r1
   4089c:	bcs	408b4 <__assert_fail@plt+0x2f420>
   408a0:	ldr	r0, [fp, #-12]
   408a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   408a8:	mul	r0, r0, r1
   408ac:	str	r0, [fp, #-24]	; 0xffffffe8
   408b0:	b	40ed8 <__assert_fail@plt+0x2fa44>
   408b4:	ldr	r0, [fp, #-12]
   408b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   408bc:	mul	r0, r0, r1
   408c0:	str	r0, [fp, #-24]	; 0xffffffe8
   408c4:	b	40ef4 <__assert_fail@plt+0x2fa60>
   408c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   408cc:	cmp	r0, #0
   408d0:	bcs	409dc <__assert_fail@plt+0x2f548>
   408d4:	ldr	r0, [fp, #-12]
   408d8:	cmp	r0, #0
   408dc:	bcs	40964 <__assert_fail@plt+0x2f4d0>
   408e0:	b	40900 <__assert_fail@plt+0x2f46c>
   408e4:	ldr	r0, [fp, #-12]
   408e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   408ec:	mvn	r2, #0
   408f0:	udiv	r1, r2, r1
   408f4:	cmp	r0, r1
   408f8:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   408fc:	b	40a8c <__assert_fail@plt+0x2f5f8>
   40900:	b	40914 <__assert_fail@plt+0x2f480>
   40904:	ldr	r0, [fp, #-20]	; 0xffffffec
   40908:	cmp	r0, #1
   4090c:	bcc	40924 <__assert_fail@plt+0x2f490>
   40910:	b	40930 <__assert_fail@plt+0x2f49c>
   40914:	ldr	r0, [fp, #-20]	; 0xffffffec
   40918:	movw	r1, #0
   4091c:	cmp	r1, r0
   40920:	bcs	40930 <__assert_fail@plt+0x2f49c>
   40924:	movw	r0, #1
   40928:	str	r0, [sp, #44]	; 0x2c
   4092c:	b	40948 <__assert_fail@plt+0x2f4b4>
   40930:	ldr	r0, [fp, #-20]	; 0xffffffec
   40934:	movw	r1, #0
   40938:	sub	r0, r1, r0
   4093c:	mvn	r1, #0
   40940:	udiv	r0, r1, r0
   40944:	str	r0, [sp, #44]	; 0x2c
   40948:	ldr	r0, [sp, #44]	; 0x2c
   4094c:	ldr	r1, [fp, #-12]
   40950:	mvn	r2, #0
   40954:	sub	r1, r2, r1
   40958:	cmp	r0, r1
   4095c:	bls	40a78 <__assert_fail@plt+0x2f5e4>
   40960:	b	40a8c <__assert_fail@plt+0x2f5f8>
   40964:	b	4096c <__assert_fail@plt+0x2f4d8>
   40968:	b	40970 <__assert_fail@plt+0x2f4dc>
   4096c:	b	409c0 <__assert_fail@plt+0x2f52c>
   40970:	ldr	r0, [fp, #-20]	; 0xffffffec
   40974:	cmn	r0, #1
   40978:	bne	409c0 <__assert_fail@plt+0x2f52c>
   4097c:	b	40998 <__assert_fail@plt+0x2f504>
   40980:	ldr	r0, [fp, #-12]
   40984:	add	r0, r0, #0
   40988:	movw	r1, #0
   4098c:	cmp	r1, r0
   40990:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   40994:	b	40a8c <__assert_fail@plt+0x2f5f8>
   40998:	ldr	r0, [fp, #-12]
   4099c:	movw	r1, #0
   409a0:	cmp	r1, r0
   409a4:	bcs	40a8c <__assert_fail@plt+0x2f5f8>
   409a8:	ldr	r0, [fp, #-12]
   409ac:	sub	r0, r0, #1
   409b0:	mvn	r1, #0
   409b4:	cmp	r1, r0
   409b8:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   409bc:	b	40a8c <__assert_fail@plt+0x2f5f8>
   409c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   409c4:	movw	r1, #0
   409c8:	udiv	r0, r1, r0
   409cc:	ldr	r1, [fp, #-12]
   409d0:	cmp	r0, r1
   409d4:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   409d8:	b	40a8c <__assert_fail@plt+0x2f5f8>
   409dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   409e0:	cmp	r0, #0
   409e4:	bne	409ec <__assert_fail@plt+0x2f558>
   409e8:	b	40a8c <__assert_fail@plt+0x2f5f8>
   409ec:	ldr	r0, [fp, #-12]
   409f0:	cmp	r0, #0
   409f4:	bcs	40a60 <__assert_fail@plt+0x2f5cc>
   409f8:	b	40a00 <__assert_fail@plt+0x2f56c>
   409fc:	b	40a04 <__assert_fail@plt+0x2f570>
   40a00:	b	40a44 <__assert_fail@plt+0x2f5b0>
   40a04:	ldr	r0, [fp, #-12]
   40a08:	cmn	r0, #1
   40a0c:	bne	40a44 <__assert_fail@plt+0x2f5b0>
   40a10:	b	40a2c <__assert_fail@plt+0x2f598>
   40a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a18:	add	r0, r0, #0
   40a1c:	movw	r1, #0
   40a20:	cmp	r1, r0
   40a24:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   40a28:	b	40a8c <__assert_fail@plt+0x2f5f8>
   40a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a30:	sub	r0, r0, #1
   40a34:	mvn	r1, #0
   40a38:	cmp	r1, r0
   40a3c:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   40a40:	b	40a8c <__assert_fail@plt+0x2f5f8>
   40a44:	ldr	r0, [fp, #-12]
   40a48:	movw	r1, #0
   40a4c:	udiv	r0, r1, r0
   40a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   40a54:	cmp	r0, r1
   40a58:	bcc	40a78 <__assert_fail@plt+0x2f5e4>
   40a5c:	b	40a8c <__assert_fail@plt+0x2f5f8>
   40a60:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a64:	mvn	r1, #0
   40a68:	udiv	r0, r1, r0
   40a6c:	ldr	r1, [fp, #-12]
   40a70:	cmp	r0, r1
   40a74:	bcs	40a8c <__assert_fail@plt+0x2f5f8>
   40a78:	ldr	r0, [fp, #-12]
   40a7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   40a80:	mul	r0, r0, r1
   40a84:	str	r0, [fp, #-24]	; 0xffffffe8
   40a88:	b	40ed8 <__assert_fail@plt+0x2fa44>
   40a8c:	ldr	r0, [fp, #-12]
   40a90:	ldr	r1, [fp, #-20]	; 0xffffffec
   40a94:	mul	r0, r0, r1
   40a98:	str	r0, [fp, #-24]	; 0xffffffe8
   40a9c:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40aa0:	b	40cbc <__assert_fail@plt+0x2f828>
   40aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40aa8:	cmp	r0, #0
   40aac:	bcs	40bec <__assert_fail@plt+0x2f758>
   40ab0:	ldr	r0, [fp, #-12]
   40ab4:	cmp	r0, #0
   40ab8:	bcs	40b78 <__assert_fail@plt+0x2f6e4>
   40abc:	b	40ac0 <__assert_fail@plt+0x2f62c>
   40ac0:	ldr	r0, [fp, #-12]
   40ac4:	ldr	r2, [fp, #-20]	; 0xffffffec
   40ac8:	mvn	r1, #0
   40acc:	mvn	r3, #-2147483648	; 0x80000000
   40ad0:	mov	ip, #0
   40ad4:	str	r0, [sp, #40]	; 0x28
   40ad8:	mov	r0, r1
   40adc:	mov	r1, r3
   40ae0:	mov	r3, ip
   40ae4:	bl	4330c <__assert_fail@plt+0x31e78>
   40ae8:	ldr	r2, [sp, #40]	; 0x28
   40aec:	subs	r0, r2, r0
   40af0:	rscs	r1, r1, #0
   40af4:	blt	40c94 <__assert_fail@plt+0x2f800>
   40af8:	b	40ca8 <__assert_fail@plt+0x2f814>
   40afc:	b	40b10 <__assert_fail@plt+0x2f67c>
   40b00:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b04:	cmp	r0, #1
   40b08:	bcc	40b20 <__assert_fail@plt+0x2f68c>
   40b0c:	b	40b34 <__assert_fail@plt+0x2f6a0>
   40b10:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b14:	movw	r1, #0
   40b18:	cmp	r1, r0
   40b1c:	bcs	40b34 <__assert_fail@plt+0x2f6a0>
   40b20:	mov	r0, #0
   40b24:	mvn	r1, #0
   40b28:	str	r1, [sp, #36]	; 0x24
   40b2c:	str	r0, [sp, #32]
   40b30:	b	40b58 <__assert_fail@plt+0x2f6c4>
   40b34:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b38:	rsb	r2, r0, #0
   40b3c:	mvn	r0, #0
   40b40:	mvn	r1, #-2147483648	; 0x80000000
   40b44:	mov	r3, #0
   40b48:	bl	4330c <__assert_fail@plt+0x31e78>
   40b4c:	str	r0, [sp, #36]	; 0x24
   40b50:	str	r1, [sp, #32]
   40b54:	b	40b58 <__assert_fail@plt+0x2f6c4>
   40b58:	ldr	r0, [sp, #32]
   40b5c:	ldr	r1, [sp, #36]	; 0x24
   40b60:	ldr	r2, [fp, #-12]
   40b64:	mvn	r2, r2
   40b68:	subs	r1, r2, r1
   40b6c:	rscs	r0, r0, #0
   40b70:	bge	40c94 <__assert_fail@plt+0x2f800>
   40b74:	b	40ca8 <__assert_fail@plt+0x2f814>
   40b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b7c:	cmn	r0, #1
   40b80:	bne	40bc0 <__assert_fail@plt+0x2f72c>
   40b84:	b	40ba0 <__assert_fail@plt+0x2f70c>
   40b88:	ldr	r0, [fp, #-12]
   40b8c:	rsbs	r0, r0, #0
   40b90:	mov	r1, #0
   40b94:	sbcs	r1, r1, #-2147483648	; 0x80000000
   40b98:	blt	40c94 <__assert_fail@plt+0x2f800>
   40b9c:	b	40ca8 <__assert_fail@plt+0x2f814>
   40ba0:	ldr	r0, [fp, #-12]
   40ba4:	movw	r1, #0
   40ba8:	cmp	r1, r0
   40bac:	bcs	40ca8 <__assert_fail@plt+0x2f814>
   40bb0:	mov	r0, #0
   40bb4:	cmp	r0, #0
   40bb8:	bne	40c94 <__assert_fail@plt+0x2f800>
   40bbc:	b	40ca8 <__assert_fail@plt+0x2f814>
   40bc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   40bc4:	mov	r1, #-2147483648	; 0x80000000
   40bc8:	mov	r0, #0
   40bcc:	str	r0, [sp, #28]
   40bd0:	ldr	r3, [sp, #28]
   40bd4:	bl	43238 <__assert_fail@plt+0x31da4>
   40bd8:	ldr	r2, [fp, #-12]
   40bdc:	subs	r0, r0, r2
   40be0:	sbcs	r1, r1, #0
   40be4:	blt	40c94 <__assert_fail@plt+0x2f800>
   40be8:	b	40ca8 <__assert_fail@plt+0x2f814>
   40bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   40bf0:	cmp	r0, #0
   40bf4:	bne	40bfc <__assert_fail@plt+0x2f768>
   40bf8:	b	40ca8 <__assert_fail@plt+0x2f814>
   40bfc:	ldr	r0, [fp, #-12]
   40c00:	cmp	r0, #0
   40c04:	bcs	40c6c <__assert_fail@plt+0x2f7d8>
   40c08:	ldr	r0, [fp, #-12]
   40c0c:	cmn	r0, #1
   40c10:	bne	40c40 <__assert_fail@plt+0x2f7ac>
   40c14:	b	40c30 <__assert_fail@plt+0x2f79c>
   40c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   40c1c:	rsbs	r0, r0, #0
   40c20:	mov	r1, #0
   40c24:	sbcs	r1, r1, #-2147483648	; 0x80000000
   40c28:	blt	40c94 <__assert_fail@plt+0x2f800>
   40c2c:	b	40ca8 <__assert_fail@plt+0x2f814>
   40c30:	mov	r0, #0
   40c34:	cmp	r0, #0
   40c38:	bne	40c94 <__assert_fail@plt+0x2f800>
   40c3c:	b	40ca8 <__assert_fail@plt+0x2f814>
   40c40:	ldr	r2, [fp, #-12]
   40c44:	mov	r1, #-2147483648	; 0x80000000
   40c48:	mov	r0, #0
   40c4c:	str	r0, [sp, #24]
   40c50:	ldr	r3, [sp, #24]
   40c54:	bl	43238 <__assert_fail@plt+0x31da4>
   40c58:	ldr	r2, [fp, #-20]	; 0xffffffec
   40c5c:	subs	r0, r0, r2
   40c60:	sbcs	r1, r1, #0
   40c64:	blt	40c94 <__assert_fail@plt+0x2f800>
   40c68:	b	40ca8 <__assert_fail@plt+0x2f814>
   40c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40c70:	mvn	r0, #0
   40c74:	mvn	r1, #-2147483648	; 0x80000000
   40c78:	mov	r3, #0
   40c7c:	bl	4330c <__assert_fail@plt+0x31e78>
   40c80:	ldr	r2, [fp, #-12]
   40c84:	subs	r0, r0, r2
   40c88:	sbcs	r1, r1, #0
   40c8c:	bge	40ca8 <__assert_fail@plt+0x2f814>
   40c90:	b	40c94 <__assert_fail@plt+0x2f800>
   40c94:	ldr	r0, [fp, #-12]
   40c98:	ldr	r1, [fp, #-20]	; 0xffffffec
   40c9c:	mul	r0, r0, r1
   40ca0:	str	r0, [fp, #-24]	; 0xffffffe8
   40ca4:	b	40ed8 <__assert_fail@plt+0x2fa44>
   40ca8:	ldr	r0, [fp, #-12]
   40cac:	ldr	r1, [fp, #-20]	; 0xffffffec
   40cb0:	mul	r0, r0, r1
   40cb4:	str	r0, [fp, #-24]	; 0xffffffe8
   40cb8:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40cc0:	cmp	r0, #0
   40cc4:	bcs	40e00 <__assert_fail@plt+0x2f96c>
   40cc8:	ldr	r0, [fp, #-12]
   40ccc:	cmp	r0, #0
   40cd0:	bcs	40d88 <__assert_fail@plt+0x2f8f4>
   40cd4:	b	40d08 <__assert_fail@plt+0x2f874>
   40cd8:	ldr	r0, [fp, #-12]
   40cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   40ce0:	mvn	r1, #0
   40ce4:	mov	r3, #0
   40ce8:	str	r0, [sp, #20]
   40cec:	mov	r0, r1
   40cf0:	bl	4330c <__assert_fail@plt+0x31e78>
   40cf4:	ldr	r2, [sp, #20]
   40cf8:	subs	r0, r2, r0
   40cfc:	rscs	r1, r1, #0
   40d00:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40d04:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40d08:	b	40d1c <__assert_fail@plt+0x2f888>
   40d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d10:	cmp	r0, #1
   40d14:	bcc	40d2c <__assert_fail@plt+0x2f898>
   40d18:	b	40d40 <__assert_fail@plt+0x2f8ac>
   40d1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d20:	movw	r1, #0
   40d24:	cmp	r1, r0
   40d28:	bcs	40d40 <__assert_fail@plt+0x2f8ac>
   40d2c:	mov	r0, #1
   40d30:	mvn	r1, #0
   40d34:	str	r1, [sp, #16]
   40d38:	str	r0, [sp, #12]
   40d3c:	b	40d68 <__assert_fail@plt+0x2f8d4>
   40d40:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d44:	rsb	r2, r0, #0
   40d48:	mvn	r0, #0
   40d4c:	mov	r3, #0
   40d50:	str	r0, [sp, #8]
   40d54:	ldr	r1, [sp, #8]
   40d58:	bl	4330c <__assert_fail@plt+0x31e78>
   40d5c:	str	r0, [sp, #16]
   40d60:	str	r1, [sp, #12]
   40d64:	b	40d68 <__assert_fail@plt+0x2f8d4>
   40d68:	ldr	r0, [sp, #12]
   40d6c:	ldr	r1, [sp, #16]
   40d70:	ldr	r2, [fp, #-12]
   40d74:	mvn	r2, r2
   40d78:	subs	r1, r2, r1
   40d7c:	rscs	r0, r0, #0
   40d80:	bcs	40eb0 <__assert_fail@plt+0x2fa1c>
   40d84:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40d88:	b	40d90 <__assert_fail@plt+0x2f8fc>
   40d8c:	b	40d94 <__assert_fail@plt+0x2f900>
   40d90:	b	40de4 <__assert_fail@plt+0x2f950>
   40d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d98:	cmn	r0, #1
   40d9c:	bne	40de4 <__assert_fail@plt+0x2f950>
   40da0:	b	40dbc <__assert_fail@plt+0x2f928>
   40da4:	ldr	r0, [fp, #-12]
   40da8:	add	r0, r0, #0
   40dac:	movw	r1, #0
   40db0:	cmp	r1, r0
   40db4:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40db8:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40dbc:	ldr	r0, [fp, #-12]
   40dc0:	movw	r1, #0
   40dc4:	cmp	r1, r0
   40dc8:	bcs	40ec4 <__assert_fail@plt+0x2fa30>
   40dcc:	ldr	r0, [fp, #-12]
   40dd0:	sub	r0, r0, #1
   40dd4:	mvn	r1, #0
   40dd8:	cmp	r1, r0
   40ddc:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40de0:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40de8:	movw	r1, #0
   40dec:	udiv	r0, r1, r0
   40df0:	ldr	r1, [fp, #-12]
   40df4:	cmp	r0, r1
   40df8:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40dfc:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40e00:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e04:	cmp	r0, #0
   40e08:	bne	40e10 <__assert_fail@plt+0x2f97c>
   40e0c:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40e10:	ldr	r0, [fp, #-12]
   40e14:	cmp	r0, #0
   40e18:	bcs	40e84 <__assert_fail@plt+0x2f9f0>
   40e1c:	b	40e24 <__assert_fail@plt+0x2f990>
   40e20:	b	40e28 <__assert_fail@plt+0x2f994>
   40e24:	b	40e68 <__assert_fail@plt+0x2f9d4>
   40e28:	ldr	r0, [fp, #-12]
   40e2c:	cmn	r0, #1
   40e30:	bne	40e68 <__assert_fail@plt+0x2f9d4>
   40e34:	b	40e50 <__assert_fail@plt+0x2f9bc>
   40e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e3c:	add	r0, r0, #0
   40e40:	movw	r1, #0
   40e44:	cmp	r1, r0
   40e48:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40e4c:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e54:	sub	r0, r0, #1
   40e58:	mvn	r1, #0
   40e5c:	cmp	r1, r0
   40e60:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40e64:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40e68:	ldr	r0, [fp, #-12]
   40e6c:	movw	r1, #0
   40e70:	udiv	r0, r1, r0
   40e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   40e78:	cmp	r0, r1
   40e7c:	bcc	40eb0 <__assert_fail@plt+0x2fa1c>
   40e80:	b	40ec4 <__assert_fail@plt+0x2fa30>
   40e84:	ldr	r2, [fp, #-20]	; 0xffffffec
   40e88:	mvn	r0, #0
   40e8c:	mov	r3, #0
   40e90:	str	r0, [sp, #4]
   40e94:	ldr	r1, [sp, #4]
   40e98:	bl	4330c <__assert_fail@plt+0x31e78>
   40e9c:	ldr	r2, [fp, #-12]
   40ea0:	subs	r0, r0, r2
   40ea4:	sbcs	r1, r1, #0
   40ea8:	bcs	40ec4 <__assert_fail@plt+0x2fa30>
   40eac:	b	40eb0 <__assert_fail@plt+0x2fa1c>
   40eb0:	ldr	r0, [fp, #-12]
   40eb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   40eb8:	mul	r0, r0, r1
   40ebc:	str	r0, [fp, #-24]	; 0xffffffe8
   40ec0:	b	40ed8 <__assert_fail@plt+0x2fa44>
   40ec4:	ldr	r0, [fp, #-12]
   40ec8:	ldr	r1, [fp, #-20]	; 0xffffffec
   40ecc:	mul	r0, r0, r1
   40ed0:	str	r0, [fp, #-24]	; 0xffffffe8
   40ed4:	b	40ef4 <__assert_fail@plt+0x2fa60>
   40ed8:	bl	113b0 <__errno_location@plt>
   40edc:	movw	r1, #12
   40ee0:	str	r1, [r0]
   40ee4:	movw	r0, #0
   40ee8:	and	r0, r0, #1
   40eec:	strb	r0, [fp, #-1]
   40ef0:	b	40fc0 <__assert_fail@plt+0x2fb2c>
   40ef4:	ldr	r0, [fp, #-8]
   40ef8:	ldr	r0, [r0, #8]
   40efc:	ldr	r1, [fp, #-16]
   40f00:	cmp	r0, r1
   40f04:	bne	40f5c <__assert_fail@plt+0x2fac8>
   40f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40f0c:	bl	3f908 <__assert_fail@plt+0x2e474>
   40f10:	str	r0, [fp, #-28]	; 0xffffffe4
   40f14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   40f18:	movw	r1, #0
   40f1c:	cmp	r0, r1
   40f20:	beq	40f58 <__assert_fail@plt+0x2fac4>
   40f24:	ldr	r0, [fp, #-8]
   40f28:	ldr	r0, [r0, #8]
   40f2c:	movw	r1, #0
   40f30:	cmp	r0, r1
   40f34:	beq	40f58 <__assert_fail@plt+0x2fac4>
   40f38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   40f3c:	ldr	r1, [fp, #-8]
   40f40:	ldr	r1, [r1, #8]
   40f44:	ldr	r2, [fp, #-8]
   40f48:	ldr	r2, [r2]
   40f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   40f50:	mul	r2, r2, r3
   40f54:	bl	11248 <memcpy@plt>
   40f58:	b	40f70 <__assert_fail@plt+0x2fadc>
   40f5c:	ldr	r0, [fp, #-8]
   40f60:	ldr	r0, [r0, #8]
   40f64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   40f68:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   40f6c:	str	r0, [fp, #-28]	; 0xffffffe4
   40f70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   40f74:	movw	r1, #0
   40f78:	cmp	r0, r1
   40f7c:	bne	40f90 <__assert_fail@plt+0x2fafc>
   40f80:	movw	r0, #0
   40f84:	and	r0, r0, #1
   40f88:	strb	r0, [fp, #-1]
   40f8c:	b	40fc0 <__assert_fail@plt+0x2fb2c>
   40f90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   40f94:	ldr	r1, [fp, #-8]
   40f98:	str	r0, [r1, #8]
   40f9c:	ldr	r0, [fp, #-12]
   40fa0:	ldr	r1, [fp, #-8]
   40fa4:	str	r0, [r1, #4]
   40fa8:	ldr	r0, [fp, #-12]
   40fac:	ldr	r1, [fp, #-8]
   40fb0:	str	r0, [r1]
   40fb4:	movw	r0, #1
   40fb8:	and	r0, r0, #1
   40fbc:	strb	r0, [fp, #-1]
   40fc0:	ldrb	r0, [fp, #-1]
   40fc4:	and	r0, r0, #1
   40fc8:	mov	sp, fp
   40fcc:	pop	{fp, pc}
   40fd0:	svcvc	0x00ffffff
   40fd4:	andhi	r0, r0, r0
   40fd8:			; <UNDEFINED> instruction: 0xffff8000
   40fdc:	push	{fp, lr}
   40fe0:	mov	fp, sp
   40fe4:	sub	sp, sp, #32
   40fe8:	str	r0, [fp, #-8]
   40fec:	movw	r0, #0
   40ff0:	str	r0, [fp, #-12]
   40ff4:	str	r0, [sp, #12]
   40ff8:	ldr	r0, [fp, #-8]
   40ffc:	bl	113ec <fileno@plt>
   41000:	str	r0, [sp, #16]
   41004:	ldr	r0, [sp, #16]
   41008:	cmp	r0, #0
   4100c:	bge	41020 <__assert_fail@plt+0x2fb8c>
   41010:	ldr	r0, [fp, #-8]
   41014:	bl	11404 <fclose@plt>
   41018:	str	r0, [fp, #-4]
   4101c:	b	410bc <__assert_fail@plt+0x2fc28>
   41020:	ldr	r0, [fp, #-8]
   41024:	bl	11344 <__freading@plt>
   41028:	cmp	r0, #0
   4102c:	beq	41064 <__assert_fail@plt+0x2fbd0>
   41030:	ldr	r0, [fp, #-8]
   41034:	bl	113ec <fileno@plt>
   41038:	mov	r1, sp
   4103c:	mov	r2, #1
   41040:	str	r2, [r1]
   41044:	mov	r1, #0
   41048:	mov	r2, r1
   4104c:	mov	r3, r1
   41050:	bl	112cc <lseek64@plt>
   41054:	and	r0, r0, r1
   41058:	cmn	r0, #1
   4105c:	beq	41080 <__assert_fail@plt+0x2fbec>
   41060:	b	41064 <__assert_fail@plt+0x2fbd0>
   41064:	ldr	r0, [fp, #-8]
   41068:	bl	410c8 <__assert_fail@plt+0x2fc34>
   4106c:	cmp	r0, #0
   41070:	beq	41080 <__assert_fail@plt+0x2fbec>
   41074:	bl	113b0 <__errno_location@plt>
   41078:	ldr	r0, [r0]
   4107c:	str	r0, [fp, #-12]
   41080:	ldr	r0, [fp, #-8]
   41084:	bl	11404 <fclose@plt>
   41088:	str	r0, [sp, #12]
   4108c:	ldr	r0, [fp, #-12]
   41090:	cmp	r0, #0
   41094:	beq	410b4 <__assert_fail@plt+0x2fc20>
   41098:	ldr	r0, [fp, #-12]
   4109c:	str	r0, [sp, #8]
   410a0:	bl	113b0 <__errno_location@plt>
   410a4:	ldr	r1, [sp, #8]
   410a8:	str	r1, [r0]
   410ac:	mvn	r0, #0
   410b0:	str	r0, [sp, #12]
   410b4:	ldr	r0, [sp, #12]
   410b8:	str	r0, [fp, #-4]
   410bc:	ldr	r0, [fp, #-4]
   410c0:	mov	sp, fp
   410c4:	pop	{fp, pc}
   410c8:	push	{fp, lr}
   410cc:	mov	fp, sp
   410d0:	sub	sp, sp, #8
   410d4:	str	r0, [sp]
   410d8:	ldr	r0, [sp]
   410dc:	movw	r1, #0
   410e0:	cmp	r0, r1
   410e4:	beq	410f8 <__assert_fail@plt+0x2fc64>
   410e8:	ldr	r0, [sp]
   410ec:	bl	11344 <__freading@plt>
   410f0:	cmp	r0, #0
   410f4:	bne	41108 <__assert_fail@plt+0x2fc74>
   410f8:	ldr	r0, [sp]
   410fc:	bl	11200 <fflush@plt>
   41100:	str	r0, [sp, #4]
   41104:	b	4111c <__assert_fail@plt+0x2fc88>
   41108:	ldr	r0, [sp]
   4110c:	bl	41128 <__assert_fail@plt+0x2fc94>
   41110:	ldr	r0, [sp]
   41114:	bl	11200 <fflush@plt>
   41118:	str	r0, [sp, #4]
   4111c:	ldr	r0, [sp, #4]
   41120:	mov	sp, fp
   41124:	pop	{fp, pc}
   41128:	push	{fp, lr}
   4112c:	mov	fp, sp
   41130:	sub	sp, sp, #8
   41134:	str	r0, [sp, #4]
   41138:	ldr	r0, [sp, #4]
   4113c:	ldr	r0, [r0]
   41140:	and	r0, r0, #256	; 0x100
   41144:	cmp	r0, #0
   41148:	beq	4116c <__assert_fail@plt+0x2fcd8>
   4114c:	ldr	r0, [sp, #4]
   41150:	mov	r1, sp
   41154:	mov	r2, #1
   41158:	str	r2, [r1]
   4115c:	mov	r1, #0
   41160:	mov	r2, r1
   41164:	mov	r3, r1
   41168:	bl	41174 <__assert_fail@plt+0x2fce0>
   4116c:	mov	sp, fp
   41170:	pop	{fp, pc}
   41174:	push	{fp, lr}
   41178:	mov	fp, sp
   4117c:	sub	sp, sp, #32
   41180:	ldr	r1, [fp, #8]
   41184:	str	r0, [fp, #-8]
   41188:	str	r3, [sp, #20]
   4118c:	str	r2, [sp, #16]
   41190:	ldr	r0, [fp, #-8]
   41194:	ldr	r0, [r0, #8]
   41198:	ldr	r2, [fp, #-8]
   4119c:	ldr	r2, [r2, #4]
   411a0:	cmp	r0, r2
   411a4:	bne	41250 <__assert_fail@plt+0x2fdbc>
   411a8:	ldr	r0, [fp, #-8]
   411ac:	ldr	r0, [r0, #20]
   411b0:	ldr	r1, [fp, #-8]
   411b4:	ldr	r1, [r1, #16]
   411b8:	cmp	r0, r1
   411bc:	bne	41250 <__assert_fail@plt+0x2fdbc>
   411c0:	ldr	r0, [fp, #-8]
   411c4:	ldr	r0, [r0, #36]	; 0x24
   411c8:	movw	r1, #0
   411cc:	cmp	r0, r1
   411d0:	bne	41250 <__assert_fail@plt+0x2fdbc>
   411d4:	ldr	r0, [fp, #-8]
   411d8:	bl	113ec <fileno@plt>
   411dc:	ldr	r2, [sp, #16]
   411e0:	ldr	r3, [sp, #20]
   411e4:	ldr	r1, [fp, #8]
   411e8:	mov	ip, sp
   411ec:	str	r1, [ip]
   411f0:	bl	112cc <lseek64@plt>
   411f4:	str	r1, [sp, #12]
   411f8:	str	r0, [sp, #8]
   411fc:	ldr	r0, [sp, #8]
   41200:	ldr	r1, [sp, #12]
   41204:	and	r0, r0, r1
   41208:	cmn	r0, #1
   4120c:	bne	41220 <__assert_fail@plt+0x2fd8c>
   41210:	b	41214 <__assert_fail@plt+0x2fd80>
   41214:	mvn	r0, #0
   41218:	str	r0, [fp, #-4]
   4121c:	b	41270 <__assert_fail@plt+0x2fddc>
   41220:	ldr	r0, [fp, #-8]
   41224:	ldr	r1, [r0]
   41228:	bic	r1, r1, #16
   4122c:	str	r1, [r0]
   41230:	ldr	r0, [sp, #8]
   41234:	ldr	r1, [sp, #12]
   41238:	ldr	r2, [fp, #-8]
   4123c:	str	r1, [r2, #84]	; 0x54
   41240:	str	r0, [r2, #80]	; 0x50
   41244:	movw	r0, #0
   41248:	str	r0, [fp, #-4]
   4124c:	b	41270 <__assert_fail@plt+0x2fddc>
   41250:	ldr	r0, [fp, #-8]
   41254:	ldr	r2, [sp, #16]
   41258:	ldr	r3, [sp, #20]
   4125c:	ldr	r1, [fp, #8]
   41260:	mov	ip, sp
   41264:	str	r1, [ip]
   41268:	bl	11410 <fseeko64@plt>
   4126c:	str	r0, [fp, #-4]
   41270:	ldr	r0, [fp, #-4]
   41274:	mov	sp, fp
   41278:	pop	{fp, pc}
   4127c:	push	{fp, lr}
   41280:	mov	fp, sp
   41284:	bl	113b0 <__errno_location@plt>
   41288:	movw	r1, #12
   4128c:	str	r1, [r0]
   41290:	movw	r0, #0
   41294:	pop	{fp, pc}
   41298:	push	{fp, lr}
   4129c:	mov	fp, sp
   412a0:	sub	sp, sp, #8
   412a4:	str	r0, [sp, #4]
   412a8:	ldr	r0, [sp, #4]
   412ac:	cmn	r0, #1
   412b0:	bhi	412c4 <__assert_fail@plt+0x2fe30>
   412b4:	ldr	r0, [sp, #4]
   412b8:	bl	3f908 <__assert_fail@plt+0x2e474>
   412bc:	str	r0, [sp]
   412c0:	b	412cc <__assert_fail@plt+0x2fe38>
   412c4:	bl	4127c <__assert_fail@plt+0x2fde8>
   412c8:	str	r0, [sp]
   412cc:	ldr	r0, [sp]
   412d0:	mov	sp, fp
   412d4:	pop	{fp, pc}
   412d8:	push	{fp, lr}
   412dc:	mov	fp, sp
   412e0:	sub	sp, sp, #16
   412e4:	str	r0, [fp, #-4]
   412e8:	str	r1, [sp, #8]
   412ec:	ldr	r0, [sp, #8]
   412f0:	cmn	r0, #1
   412f4:	bhi	4132c <__assert_fail@plt+0x2fe98>
   412f8:	ldr	r0, [fp, #-4]
   412fc:	ldr	r1, [sp, #8]
   41300:	ldr	r2, [sp, #8]
   41304:	cmp	r2, #0
   41308:	movw	r2, #0
   4130c:	movne	r2, #1
   41310:	mvn	r3, #0
   41314:	eor	r2, r2, r3
   41318:	and	r2, r2, #1
   4131c:	orr	r1, r1, r2
   41320:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   41324:	str	r0, [sp, #4]
   41328:	b	41334 <__assert_fail@plt+0x2fea0>
   4132c:	bl	4127c <__assert_fail@plt+0x2fde8>
   41330:	str	r0, [sp, #4]
   41334:	ldr	r0, [sp, #4]
   41338:	mov	sp, fp
   4133c:	pop	{fp, pc}
   41340:	push	{fp, lr}
   41344:	mov	fp, sp
   41348:	sub	sp, sp, #16
   4134c:	str	r0, [sp, #8]
   41350:	str	r1, [sp, #4]
   41354:	ldr	r0, [sp, #8]
   41358:	mvn	r1, #0
   4135c:	cmp	r1, r0
   41360:	bcs	41384 <__assert_fail@plt+0x2fef0>
   41364:	ldr	r0, [sp, #4]
   41368:	cmp	r0, #0
   4136c:	beq	4137c <__assert_fail@plt+0x2fee8>
   41370:	bl	4127c <__assert_fail@plt+0x2fde8>
   41374:	str	r0, [fp, #-4]
   41378:	b	413c4 <__assert_fail@plt+0x2ff30>
   4137c:	movw	r0, #0
   41380:	str	r0, [sp, #8]
   41384:	ldr	r0, [sp, #4]
   41388:	mvn	r1, #0
   4138c:	cmp	r1, r0
   41390:	bcs	413b4 <__assert_fail@plt+0x2ff20>
   41394:	ldr	r0, [sp, #8]
   41398:	cmp	r0, #0
   4139c:	beq	413ac <__assert_fail@plt+0x2ff18>
   413a0:	bl	4127c <__assert_fail@plt+0x2fde8>
   413a4:	str	r0, [fp, #-4]
   413a8:	b	413c4 <__assert_fail@plt+0x2ff30>
   413ac:	movw	r0, #0
   413b0:	str	r0, [sp, #4]
   413b4:	ldr	r0, [sp, #8]
   413b8:	ldr	r1, [sp, #4]
   413bc:	bl	3f86c <__assert_fail@plt+0x2e3d8>
   413c0:	str	r0, [fp, #-4]
   413c4:	ldr	r0, [fp, #-4]
   413c8:	mov	sp, fp
   413cc:	pop	{fp, pc}
   413d0:	push	{fp, lr}
   413d4:	mov	fp, sp
   413d8:	sub	sp, sp, #16
   413dc:	str	r0, [fp, #-4]
   413e0:	str	r1, [sp, #8]
   413e4:	str	r2, [sp, #4]
   413e8:	ldr	r0, [sp, #8]
   413ec:	cmp	r0, #0
   413f0:	beq	41400 <__assert_fail@plt+0x2ff6c>
   413f4:	ldr	r0, [sp, #4]
   413f8:	cmp	r0, #0
   413fc:	bne	4140c <__assert_fail@plt+0x2ff78>
   41400:	movw	r0, #1
   41404:	str	r0, [sp, #4]
   41408:	str	r0, [sp, #8]
   4140c:	ldr	r0, [sp, #8]
   41410:	cmn	r0, #1
   41414:	bhi	4143c <__assert_fail@plt+0x2ffa8>
   41418:	ldr	r0, [sp, #4]
   4141c:	cmn	r0, #1
   41420:	bhi	4143c <__assert_fail@plt+0x2ffa8>
   41424:	ldr	r0, [fp, #-4]
   41428:	ldr	r1, [sp, #8]
   4142c:	ldr	r2, [sp, #4]
   41430:	bl	416c0 <__assert_fail@plt+0x3022c>
   41434:	str	r0, [sp]
   41438:	b	41444 <__assert_fail@plt+0x2ffb0>
   4143c:	bl	4127c <__assert_fail@plt+0x2fde8>
   41440:	str	r0, [sp]
   41444:	ldr	r0, [sp]
   41448:	mov	sp, fp
   4144c:	pop	{fp, pc}
   41450:	push	{fp, lr}
   41454:	mov	fp, sp
   41458:	sub	sp, sp, #8
   4145c:	movw	r0, #14
   41460:	bl	11440 <nl_langinfo@plt>
   41464:	str	r0, [sp, #4]
   41468:	ldr	r0, [sp, #4]
   4146c:	movw	r1, #0
   41470:	cmp	r0, r1
   41474:	bne	41484 <__assert_fail@plt+0x2fff0>
   41478:	movw	r0, #16039	; 0x3ea7
   4147c:	movt	r0, #4
   41480:	str	r0, [sp, #4]
   41484:	ldr	r0, [sp, #4]
   41488:	ldrb	r0, [r0]
   4148c:	cmp	r0, #0
   41490:	bne	414a0 <__assert_fail@plt+0x3000c>
   41494:	movw	r0, #23204	; 0x5aa4
   41498:	movt	r0, #4
   4149c:	str	r0, [sp, #4]
   414a0:	ldr	r0, [sp, #4]
   414a4:	mov	sp, fp
   414a8:	pop	{fp, pc}
   414ac:	push	{fp, lr}
   414b0:	mov	fp, sp
   414b4:	sub	sp, sp, #16
   414b8:	str	r0, [fp, #-4]
   414bc:	ldr	r0, [fp, #-4]
   414c0:	bl	1120c <wcwidth@plt>
   414c4:	str	r0, [sp, #8]
   414c8:	ldr	r0, [sp, #8]
   414cc:	cmp	r0, #0
   414d0:	blt	414e0 <__assert_fail@plt+0x3004c>
   414d4:	ldr	r0, [sp, #8]
   414d8:	str	r0, [sp, #4]
   414dc:	b	41504 <__assert_fail@plt+0x30070>
   414e0:	ldr	r0, [fp, #-4]
   414e4:	bl	112a8 <iswcntrl@plt>
   414e8:	cmp	r0, #0
   414ec:	movw	r0, #0
   414f0:	movne	r0, #1
   414f4:	tst	r0, #1
   414f8:	movw	r0, #0
   414fc:	moveq	r0, #1
   41500:	str	r0, [sp, #4]
   41504:	ldr	r0, [sp, #4]
   41508:	mov	sp, fp
   4150c:	pop	{fp, pc}
   41510:	push	{fp, lr}
   41514:	mov	fp, sp
   41518:	sub	sp, sp, #8
   4151c:	str	r0, [sp, #4]
   41520:	str	r1, [sp]
   41524:	ldr	r0, [sp]
   41528:	ldr	r0, [r0]
   4152c:	ldr	r1, [sp]
   41530:	add	r1, r1, #16
   41534:	cmp	r0, r1
   41538:	bne	4156c <__assert_fail@plt+0x300d8>
   4153c:	ldr	r0, [sp, #4]
   41540:	add	r0, r0, #16
   41544:	ldr	r1, [sp]
   41548:	add	r1, r1, #16
   4154c:	ldr	r2, [sp]
   41550:	ldr	r2, [r2, #4]
   41554:	bl	11248 <memcpy@plt>
   41558:	ldr	r0, [sp, #4]
   4155c:	add	r0, r0, #16
   41560:	ldr	r1, [sp, #4]
   41564:	str	r0, [r1]
   41568:	b	4157c <__assert_fail@plt+0x300e8>
   4156c:	ldr	r0, [sp]
   41570:	ldr	r0, [r0]
   41574:	ldr	r1, [sp, #4]
   41578:	str	r0, [r1]
   4157c:	ldr	r0, [sp]
   41580:	ldr	r0, [r0, #4]
   41584:	ldr	r1, [sp, #4]
   41588:	str	r0, [r1, #4]
   4158c:	ldr	r0, [sp]
   41590:	ldrb	r0, [r0, #8]
   41594:	ldr	r1, [sp, #4]
   41598:	and	r2, r0, #1
   4159c:	strb	r2, [r1, #8]
   415a0:	tst	r0, #1
   415a4:	beq	415b8 <__assert_fail@plt+0x30124>
   415a8:	ldr	r0, [sp]
   415ac:	ldr	r0, [r0, #12]
   415b0:	ldr	r1, [sp, #4]
   415b4:	str	r0, [r1, #12]
   415b8:	mov	sp, fp
   415bc:	pop	{fp, pc}
   415c0:	sub	sp, sp, #4
   415c4:	movw	r1, #23212	; 0x5aac
   415c8:	movt	r1, #4
   415cc:	strb	r0, [sp, #3]
   415d0:	ldrb	r0, [sp, #3]
   415d4:	lsr	r0, r0, #5
   415d8:	movw	r2, #23212	; 0x5aac
   415dc:	movt	r2, #4
   415e0:	add	r0, r2, r0, lsl #2
   415e4:	ldr	r0, [r0]
   415e8:	ldrb	r2, [sp, #3]
   415ec:	and	r2, r2, #31
   415f0:	lsr	r0, r0, r2
   415f4:	and	r0, r0, #1
   415f8:	cmp	r0, #0
   415fc:	movw	r0, #0
   41600:	movne	r0, #1
   41604:	and	r0, r0, #1
   41608:	add	sp, sp, #4
   4160c:	bx	lr
   41610:	push	{fp, lr}
   41614:	mov	fp, sp
   41618:	sub	sp, sp, #32
   4161c:	str	r0, [fp, #-8]
   41620:	str	r1, [fp, #-12]
   41624:	str	r2, [sp, #16]
   41628:	str	r3, [sp, #12]
   4162c:	ldr	r0, [fp, #-8]
   41630:	movw	r1, #0
   41634:	cmp	r0, r1
   41638:	bne	41644 <__assert_fail@plt+0x301b0>
   4163c:	add	r0, sp, #4
   41640:	str	r0, [fp, #-8]
   41644:	ldr	r0, [fp, #-8]
   41648:	ldr	r1, [fp, #-12]
   4164c:	ldr	r2, [sp, #16]
   41650:	ldr	r3, [sp, #12]
   41654:	bl	112fc <mbrtowc@plt>
   41658:	str	r0, [sp, #8]
   4165c:	ldr	r0, [sp, #8]
   41660:	mvn	r1, #1
   41664:	cmp	r1, r0
   41668:	bhi	416ac <__assert_fail@plt+0x30218>
   4166c:	ldr	r0, [sp, #16]
   41670:	cmp	r0, #0
   41674:	beq	416ac <__assert_fail@plt+0x30218>
   41678:	movw	r0, #0
   4167c:	bl	43040 <__assert_fail@plt+0x31bac>
   41680:	tst	r0, #1
   41684:	bne	416ac <__assert_fail@plt+0x30218>
   41688:	ldr	r0, [fp, #-12]
   4168c:	ldrb	r0, [r0]
   41690:	strb	r0, [sp, #3]
   41694:	ldrb	r0, [sp, #3]
   41698:	ldr	r1, [fp, #-8]
   4169c:	str	r0, [r1]
   416a0:	movw	r0, #1
   416a4:	str	r0, [fp, #-4]
   416a8:	b	416b4 <__assert_fail@plt+0x30220>
   416ac:	ldr	r0, [sp, #8]
   416b0:	str	r0, [fp, #-4]
   416b4:	ldr	r0, [fp, #-4]
   416b8:	mov	sp, fp
   416bc:	pop	{fp, pc}
   416c0:	push	{fp, lr}
   416c4:	mov	fp, sp
   416c8:	sub	sp, sp, #96	; 0x60
   416cc:	str	r0, [fp, #-8]
   416d0:	str	r1, [fp, #-12]
   416d4:	str	r2, [fp, #-16]
   416d8:	b	41a90 <__assert_fail@plt+0x305fc>
   416dc:	b	418b0 <__assert_fail@plt+0x3041c>
   416e0:	ldr	r0, [fp, #-16]
   416e4:	cmp	r0, #0
   416e8:	bcs	417ec <__assert_fail@plt+0x30358>
   416ec:	ldr	r0, [fp, #-12]
   416f0:	cmp	r0, #0
   416f4:	bcs	4177c <__assert_fail@plt+0x302e8>
   416f8:	b	41718 <__assert_fail@plt+0x30284>
   416fc:	ldr	r0, [fp, #-12]
   41700:	ldr	r1, [fp, #-16]
   41704:	movw	r2, #127	; 0x7f
   41708:	udiv	r1, r2, r1
   4170c:	cmp	r0, r1
   41710:	bcc	41880 <__assert_fail@plt+0x303ec>
   41714:	b	41898 <__assert_fail@plt+0x30404>
   41718:	b	4172c <__assert_fail@plt+0x30298>
   4171c:	ldr	r0, [fp, #-16]
   41720:	cmp	r0, #1
   41724:	bcc	4173c <__assert_fail@plt+0x302a8>
   41728:	b	41748 <__assert_fail@plt+0x302b4>
   4172c:	ldr	r0, [fp, #-16]
   41730:	movw	r1, #0
   41734:	cmp	r1, r0
   41738:	bcs	41748 <__assert_fail@plt+0x302b4>
   4173c:	movw	r0, #0
   41740:	str	r0, [fp, #-24]	; 0xffffffe8
   41744:	b	41760 <__assert_fail@plt+0x302cc>
   41748:	ldr	r0, [fp, #-16]
   4174c:	movw	r1, #0
   41750:	sub	r0, r1, r0
   41754:	movw	r1, #127	; 0x7f
   41758:	udiv	r0, r1, r0
   4175c:	str	r0, [fp, #-24]	; 0xffffffe8
   41760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41764:	ldr	r1, [fp, #-12]
   41768:	mvn	r2, #0
   4176c:	sub	r1, r2, r1
   41770:	cmp	r0, r1
   41774:	bls	41880 <__assert_fail@plt+0x303ec>
   41778:	b	41898 <__assert_fail@plt+0x30404>
   4177c:	ldr	r0, [fp, #-16]
   41780:	cmn	r0, #1
   41784:	bne	417d0 <__assert_fail@plt+0x3033c>
   41788:	b	417a8 <__assert_fail@plt+0x30314>
   4178c:	ldr	r0, [fp, #-12]
   41790:	mvn	r1, #127	; 0x7f
   41794:	add	r0, r0, r1
   41798:	movw	r1, #0
   4179c:	cmp	r1, r0
   417a0:	bcc	41880 <__assert_fail@plt+0x303ec>
   417a4:	b	41898 <__assert_fail@plt+0x30404>
   417a8:	ldr	r0, [fp, #-12]
   417ac:	movw	r1, #0
   417b0:	cmp	r1, r0
   417b4:	bcs	41898 <__assert_fail@plt+0x30404>
   417b8:	ldr	r0, [fp, #-12]
   417bc:	sub	r0, r0, #1
   417c0:	movw	r1, #127	; 0x7f
   417c4:	cmp	r1, r0
   417c8:	bcc	41880 <__assert_fail@plt+0x303ec>
   417cc:	b	41898 <__assert_fail@plt+0x30404>
   417d0:	ldr	r0, [fp, #-16]
   417d4:	mvn	r1, #127	; 0x7f
   417d8:	udiv	r0, r1, r0
   417dc:	ldr	r1, [fp, #-12]
   417e0:	cmp	r0, r1
   417e4:	bcc	41880 <__assert_fail@plt+0x303ec>
   417e8:	b	41898 <__assert_fail@plt+0x30404>
   417ec:	ldr	r0, [fp, #-16]
   417f0:	cmp	r0, #0
   417f4:	bne	417fc <__assert_fail@plt+0x30368>
   417f8:	b	41898 <__assert_fail@plt+0x30404>
   417fc:	ldr	r0, [fp, #-12]
   41800:	cmp	r0, #0
   41804:	bcs	41868 <__assert_fail@plt+0x303d4>
   41808:	ldr	r0, [fp, #-12]
   4180c:	cmn	r0, #1
   41810:	bne	4184c <__assert_fail@plt+0x303b8>
   41814:	b	41834 <__assert_fail@plt+0x303a0>
   41818:	ldr	r0, [fp, #-16]
   4181c:	mvn	r1, #127	; 0x7f
   41820:	add	r0, r0, r1
   41824:	movw	r1, #0
   41828:	cmp	r1, r0
   4182c:	bcc	41880 <__assert_fail@plt+0x303ec>
   41830:	b	41898 <__assert_fail@plt+0x30404>
   41834:	ldr	r0, [fp, #-16]
   41838:	sub	r0, r0, #1
   4183c:	movw	r1, #127	; 0x7f
   41840:	cmp	r1, r0
   41844:	bcc	41880 <__assert_fail@plt+0x303ec>
   41848:	b	41898 <__assert_fail@plt+0x30404>
   4184c:	ldr	r0, [fp, #-12]
   41850:	mvn	r1, #127	; 0x7f
   41854:	udiv	r0, r1, r0
   41858:	ldr	r1, [fp, #-16]
   4185c:	cmp	r0, r1
   41860:	bcc	41880 <__assert_fail@plt+0x303ec>
   41864:	b	41898 <__assert_fail@plt+0x30404>
   41868:	ldr	r0, [fp, #-16]
   4186c:	movw	r1, #127	; 0x7f
   41870:	udiv	r0, r1, r0
   41874:	ldr	r1, [fp, #-12]
   41878:	cmp	r0, r1
   4187c:	bcs	41898 <__assert_fail@plt+0x30404>
   41880:	ldr	r0, [fp, #-12]
   41884:	ldr	r1, [fp, #-16]
   41888:	mul	r0, r0, r1
   4188c:	sxtb	r0, r0
   41890:	str	r0, [fp, #-20]	; 0xffffffec
   41894:	b	429c0 <__assert_fail@plt+0x3152c>
   41898:	ldr	r0, [fp, #-12]
   4189c:	ldr	r1, [fp, #-16]
   418a0:	mul	r0, r0, r1
   418a4:	sxtb	r0, r0
   418a8:	str	r0, [fp, #-20]	; 0xffffffec
   418ac:	b	429d8 <__assert_fail@plt+0x31544>
   418b0:	ldr	r0, [fp, #-16]
   418b4:	cmp	r0, #0
   418b8:	bcs	419c4 <__assert_fail@plt+0x30530>
   418bc:	ldr	r0, [fp, #-12]
   418c0:	cmp	r0, #0
   418c4:	bcs	4194c <__assert_fail@plt+0x304b8>
   418c8:	b	418e8 <__assert_fail@plt+0x30454>
   418cc:	ldr	r0, [fp, #-12]
   418d0:	ldr	r1, [fp, #-16]
   418d4:	movw	r2, #255	; 0xff
   418d8:	udiv	r1, r2, r1
   418dc:	cmp	r0, r1
   418e0:	bcc	41a60 <__assert_fail@plt+0x305cc>
   418e4:	b	41a78 <__assert_fail@plt+0x305e4>
   418e8:	b	418fc <__assert_fail@plt+0x30468>
   418ec:	ldr	r0, [fp, #-16]
   418f0:	cmp	r0, #1
   418f4:	bcc	4190c <__assert_fail@plt+0x30478>
   418f8:	b	41918 <__assert_fail@plt+0x30484>
   418fc:	ldr	r0, [fp, #-16]
   41900:	movw	r1, #0
   41904:	cmp	r1, r0
   41908:	bcs	41918 <__assert_fail@plt+0x30484>
   4190c:	movw	r0, #0
   41910:	str	r0, [fp, #-28]	; 0xffffffe4
   41914:	b	41930 <__assert_fail@plt+0x3049c>
   41918:	ldr	r0, [fp, #-16]
   4191c:	movw	r1, #0
   41920:	sub	r0, r1, r0
   41924:	movw	r1, #255	; 0xff
   41928:	udiv	r0, r1, r0
   4192c:	str	r0, [fp, #-28]	; 0xffffffe4
   41930:	ldr	r0, [fp, #-28]	; 0xffffffe4
   41934:	ldr	r1, [fp, #-12]
   41938:	mvn	r2, #0
   4193c:	sub	r1, r2, r1
   41940:	cmp	r0, r1
   41944:	bls	41a60 <__assert_fail@plt+0x305cc>
   41948:	b	41a78 <__assert_fail@plt+0x305e4>
   4194c:	b	41954 <__assert_fail@plt+0x304c0>
   41950:	b	41958 <__assert_fail@plt+0x304c4>
   41954:	b	419a8 <__assert_fail@plt+0x30514>
   41958:	ldr	r0, [fp, #-16]
   4195c:	cmn	r0, #1
   41960:	bne	419a8 <__assert_fail@plt+0x30514>
   41964:	b	41980 <__assert_fail@plt+0x304ec>
   41968:	ldr	r0, [fp, #-12]
   4196c:	add	r0, r0, #0
   41970:	movw	r1, #0
   41974:	cmp	r1, r0
   41978:	bcc	41a60 <__assert_fail@plt+0x305cc>
   4197c:	b	41a78 <__assert_fail@plt+0x305e4>
   41980:	ldr	r0, [fp, #-12]
   41984:	movw	r1, #0
   41988:	cmp	r1, r0
   4198c:	bcs	41a78 <__assert_fail@plt+0x305e4>
   41990:	ldr	r0, [fp, #-12]
   41994:	sub	r0, r0, #1
   41998:	mvn	r1, #0
   4199c:	cmp	r1, r0
   419a0:	bcc	41a60 <__assert_fail@plt+0x305cc>
   419a4:	b	41a78 <__assert_fail@plt+0x305e4>
   419a8:	ldr	r0, [fp, #-16]
   419ac:	movw	r1, #0
   419b0:	udiv	r0, r1, r0
   419b4:	ldr	r1, [fp, #-12]
   419b8:	cmp	r0, r1
   419bc:	bcc	41a60 <__assert_fail@plt+0x305cc>
   419c0:	b	41a78 <__assert_fail@plt+0x305e4>
   419c4:	ldr	r0, [fp, #-16]
   419c8:	cmp	r0, #0
   419cc:	bne	419d4 <__assert_fail@plt+0x30540>
   419d0:	b	41a78 <__assert_fail@plt+0x305e4>
   419d4:	ldr	r0, [fp, #-12]
   419d8:	cmp	r0, #0
   419dc:	bcs	41a48 <__assert_fail@plt+0x305b4>
   419e0:	b	419e8 <__assert_fail@plt+0x30554>
   419e4:	b	419ec <__assert_fail@plt+0x30558>
   419e8:	b	41a2c <__assert_fail@plt+0x30598>
   419ec:	ldr	r0, [fp, #-12]
   419f0:	cmn	r0, #1
   419f4:	bne	41a2c <__assert_fail@plt+0x30598>
   419f8:	b	41a14 <__assert_fail@plt+0x30580>
   419fc:	ldr	r0, [fp, #-16]
   41a00:	add	r0, r0, #0
   41a04:	movw	r1, #0
   41a08:	cmp	r1, r0
   41a0c:	bcc	41a60 <__assert_fail@plt+0x305cc>
   41a10:	b	41a78 <__assert_fail@plt+0x305e4>
   41a14:	ldr	r0, [fp, #-16]
   41a18:	sub	r0, r0, #1
   41a1c:	mvn	r1, #0
   41a20:	cmp	r1, r0
   41a24:	bcc	41a60 <__assert_fail@plt+0x305cc>
   41a28:	b	41a78 <__assert_fail@plt+0x305e4>
   41a2c:	ldr	r0, [fp, #-12]
   41a30:	movw	r1, #0
   41a34:	udiv	r0, r1, r0
   41a38:	ldr	r1, [fp, #-16]
   41a3c:	cmp	r0, r1
   41a40:	bcc	41a60 <__assert_fail@plt+0x305cc>
   41a44:	b	41a78 <__assert_fail@plt+0x305e4>
   41a48:	ldr	r0, [fp, #-16]
   41a4c:	movw	r1, #255	; 0xff
   41a50:	udiv	r0, r1, r0
   41a54:	ldr	r1, [fp, #-12]
   41a58:	cmp	r0, r1
   41a5c:	bcs	41a78 <__assert_fail@plt+0x305e4>
   41a60:	ldr	r0, [fp, #-12]
   41a64:	ldr	r1, [fp, #-16]
   41a68:	mul	r0, r0, r1
   41a6c:	and	r0, r0, #255	; 0xff
   41a70:	str	r0, [fp, #-20]	; 0xffffffec
   41a74:	b	429c0 <__assert_fail@plt+0x3152c>
   41a78:	ldr	r0, [fp, #-12]
   41a7c:	ldr	r1, [fp, #-16]
   41a80:	mul	r0, r0, r1
   41a84:	and	r0, r0, #255	; 0xff
   41a88:	str	r0, [fp, #-20]	; 0xffffffec
   41a8c:	b	429d8 <__assert_fail@plt+0x31544>
   41a90:	b	41e48 <__assert_fail@plt+0x309b4>
   41a94:	b	41c68 <__assert_fail@plt+0x307d4>
   41a98:	ldr	r0, [fp, #-16]
   41a9c:	cmp	r0, #0
   41aa0:	bcs	41ba4 <__assert_fail@plt+0x30710>
   41aa4:	ldr	r0, [fp, #-12]
   41aa8:	cmp	r0, #0
   41aac:	bcs	41b34 <__assert_fail@plt+0x306a0>
   41ab0:	b	41ad0 <__assert_fail@plt+0x3063c>
   41ab4:	ldr	r0, [fp, #-12]
   41ab8:	ldr	r1, [fp, #-16]
   41abc:	movw	r2, #32767	; 0x7fff
   41ac0:	udiv	r1, r2, r1
   41ac4:	cmp	r0, r1
   41ac8:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41acc:	b	41c50 <__assert_fail@plt+0x307bc>
   41ad0:	b	41ae4 <__assert_fail@plt+0x30650>
   41ad4:	ldr	r0, [fp, #-16]
   41ad8:	cmp	r0, #1
   41adc:	bcc	41af4 <__assert_fail@plt+0x30660>
   41ae0:	b	41b00 <__assert_fail@plt+0x3066c>
   41ae4:	ldr	r0, [fp, #-16]
   41ae8:	movw	r1, #0
   41aec:	cmp	r1, r0
   41af0:	bcs	41b00 <__assert_fail@plt+0x3066c>
   41af4:	movw	r0, #0
   41af8:	str	r0, [fp, #-32]	; 0xffffffe0
   41afc:	b	41b18 <__assert_fail@plt+0x30684>
   41b00:	ldr	r0, [fp, #-16]
   41b04:	movw	r1, #0
   41b08:	sub	r0, r1, r0
   41b0c:	movw	r1, #32767	; 0x7fff
   41b10:	udiv	r0, r1, r0
   41b14:	str	r0, [fp, #-32]	; 0xffffffe0
   41b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41b1c:	ldr	r1, [fp, #-12]
   41b20:	mvn	r2, #0
   41b24:	sub	r1, r2, r1
   41b28:	cmp	r0, r1
   41b2c:	bls	41c38 <__assert_fail@plt+0x307a4>
   41b30:	b	41c50 <__assert_fail@plt+0x307bc>
   41b34:	ldr	r0, [fp, #-16]
   41b38:	cmn	r0, #1
   41b3c:	bne	41b88 <__assert_fail@plt+0x306f4>
   41b40:	b	41b60 <__assert_fail@plt+0x306cc>
   41b44:	ldr	r0, [pc, #3760]	; 429fc <__assert_fail@plt+0x31568>
   41b48:	ldr	r1, [fp, #-12]
   41b4c:	add	r0, r1, r0
   41b50:	movw	r1, #0
   41b54:	cmp	r1, r0
   41b58:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41b5c:	b	41c50 <__assert_fail@plt+0x307bc>
   41b60:	ldr	r0, [fp, #-12]
   41b64:	movw	r1, #0
   41b68:	cmp	r1, r0
   41b6c:	bcs	41c50 <__assert_fail@plt+0x307bc>
   41b70:	ldr	r0, [fp, #-12]
   41b74:	sub	r0, r0, #1
   41b78:	movw	r1, #32767	; 0x7fff
   41b7c:	cmp	r1, r0
   41b80:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41b84:	b	41c50 <__assert_fail@plt+0x307bc>
   41b88:	ldr	r0, [pc, #3692]	; 429fc <__assert_fail@plt+0x31568>
   41b8c:	ldr	r1, [fp, #-16]
   41b90:	udiv	r0, r0, r1
   41b94:	ldr	r1, [fp, #-12]
   41b98:	cmp	r0, r1
   41b9c:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41ba0:	b	41c50 <__assert_fail@plt+0x307bc>
   41ba4:	ldr	r0, [fp, #-16]
   41ba8:	cmp	r0, #0
   41bac:	bne	41bb4 <__assert_fail@plt+0x30720>
   41bb0:	b	41c50 <__assert_fail@plt+0x307bc>
   41bb4:	ldr	r0, [fp, #-12]
   41bb8:	cmp	r0, #0
   41bbc:	bcs	41c20 <__assert_fail@plt+0x3078c>
   41bc0:	ldr	r0, [fp, #-12]
   41bc4:	cmn	r0, #1
   41bc8:	bne	41c04 <__assert_fail@plt+0x30770>
   41bcc:	b	41bec <__assert_fail@plt+0x30758>
   41bd0:	ldr	r0, [pc, #3620]	; 429fc <__assert_fail@plt+0x31568>
   41bd4:	ldr	r1, [fp, #-16]
   41bd8:	add	r0, r1, r0
   41bdc:	movw	r1, #0
   41be0:	cmp	r1, r0
   41be4:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41be8:	b	41c50 <__assert_fail@plt+0x307bc>
   41bec:	ldr	r0, [fp, #-16]
   41bf0:	sub	r0, r0, #1
   41bf4:	movw	r1, #32767	; 0x7fff
   41bf8:	cmp	r1, r0
   41bfc:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41c00:	b	41c50 <__assert_fail@plt+0x307bc>
   41c04:	ldr	r0, [pc, #3568]	; 429fc <__assert_fail@plt+0x31568>
   41c08:	ldr	r1, [fp, #-12]
   41c0c:	udiv	r0, r0, r1
   41c10:	ldr	r1, [fp, #-16]
   41c14:	cmp	r0, r1
   41c18:	bcc	41c38 <__assert_fail@plt+0x307a4>
   41c1c:	b	41c50 <__assert_fail@plt+0x307bc>
   41c20:	ldr	r0, [fp, #-16]
   41c24:	movw	r1, #32767	; 0x7fff
   41c28:	udiv	r0, r1, r0
   41c2c:	ldr	r1, [fp, #-12]
   41c30:	cmp	r0, r1
   41c34:	bcs	41c50 <__assert_fail@plt+0x307bc>
   41c38:	ldr	r0, [fp, #-12]
   41c3c:	ldr	r1, [fp, #-16]
   41c40:	mul	r0, r0, r1
   41c44:	sxth	r0, r0
   41c48:	str	r0, [fp, #-20]	; 0xffffffec
   41c4c:	b	429c0 <__assert_fail@plt+0x3152c>
   41c50:	ldr	r0, [fp, #-12]
   41c54:	ldr	r1, [fp, #-16]
   41c58:	mul	r0, r0, r1
   41c5c:	sxth	r0, r0
   41c60:	str	r0, [fp, #-20]	; 0xffffffec
   41c64:	b	429d8 <__assert_fail@plt+0x31544>
   41c68:	ldr	r0, [fp, #-16]
   41c6c:	cmp	r0, #0
   41c70:	bcs	41d7c <__assert_fail@plt+0x308e8>
   41c74:	ldr	r0, [fp, #-12]
   41c78:	cmp	r0, #0
   41c7c:	bcs	41d04 <__assert_fail@plt+0x30870>
   41c80:	b	41ca0 <__assert_fail@plt+0x3080c>
   41c84:	ldr	r0, [fp, #-12]
   41c88:	ldr	r1, [fp, #-16]
   41c8c:	movw	r2, #65535	; 0xffff
   41c90:	udiv	r1, r2, r1
   41c94:	cmp	r0, r1
   41c98:	bcc	41e18 <__assert_fail@plt+0x30984>
   41c9c:	b	41e30 <__assert_fail@plt+0x3099c>
   41ca0:	b	41cb4 <__assert_fail@plt+0x30820>
   41ca4:	ldr	r0, [fp, #-16]
   41ca8:	cmp	r0, #1
   41cac:	bcc	41cc4 <__assert_fail@plt+0x30830>
   41cb0:	b	41cd0 <__assert_fail@plt+0x3083c>
   41cb4:	ldr	r0, [fp, #-16]
   41cb8:	movw	r1, #0
   41cbc:	cmp	r1, r0
   41cc0:	bcs	41cd0 <__assert_fail@plt+0x3083c>
   41cc4:	movw	r0, #0
   41cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   41ccc:	b	41ce8 <__assert_fail@plt+0x30854>
   41cd0:	ldr	r0, [fp, #-16]
   41cd4:	movw	r1, #0
   41cd8:	sub	r0, r1, r0
   41cdc:	movw	r1, #65535	; 0xffff
   41ce0:	udiv	r0, r1, r0
   41ce4:	str	r0, [fp, #-36]	; 0xffffffdc
   41ce8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   41cec:	ldr	r1, [fp, #-12]
   41cf0:	mvn	r2, #0
   41cf4:	sub	r1, r2, r1
   41cf8:	cmp	r0, r1
   41cfc:	bls	41e18 <__assert_fail@plt+0x30984>
   41d00:	b	41e30 <__assert_fail@plt+0x3099c>
   41d04:	b	41d0c <__assert_fail@plt+0x30878>
   41d08:	b	41d10 <__assert_fail@plt+0x3087c>
   41d0c:	b	41d60 <__assert_fail@plt+0x308cc>
   41d10:	ldr	r0, [fp, #-16]
   41d14:	cmn	r0, #1
   41d18:	bne	41d60 <__assert_fail@plt+0x308cc>
   41d1c:	b	41d38 <__assert_fail@plt+0x308a4>
   41d20:	ldr	r0, [fp, #-12]
   41d24:	add	r0, r0, #0
   41d28:	movw	r1, #0
   41d2c:	cmp	r1, r0
   41d30:	bcc	41e18 <__assert_fail@plt+0x30984>
   41d34:	b	41e30 <__assert_fail@plt+0x3099c>
   41d38:	ldr	r0, [fp, #-12]
   41d3c:	movw	r1, #0
   41d40:	cmp	r1, r0
   41d44:	bcs	41e30 <__assert_fail@plt+0x3099c>
   41d48:	ldr	r0, [fp, #-12]
   41d4c:	sub	r0, r0, #1
   41d50:	mvn	r1, #0
   41d54:	cmp	r1, r0
   41d58:	bcc	41e18 <__assert_fail@plt+0x30984>
   41d5c:	b	41e30 <__assert_fail@plt+0x3099c>
   41d60:	ldr	r0, [fp, #-16]
   41d64:	movw	r1, #0
   41d68:	udiv	r0, r1, r0
   41d6c:	ldr	r1, [fp, #-12]
   41d70:	cmp	r0, r1
   41d74:	bcc	41e18 <__assert_fail@plt+0x30984>
   41d78:	b	41e30 <__assert_fail@plt+0x3099c>
   41d7c:	ldr	r0, [fp, #-16]
   41d80:	cmp	r0, #0
   41d84:	bne	41d8c <__assert_fail@plt+0x308f8>
   41d88:	b	41e30 <__assert_fail@plt+0x3099c>
   41d8c:	ldr	r0, [fp, #-12]
   41d90:	cmp	r0, #0
   41d94:	bcs	41e00 <__assert_fail@plt+0x3096c>
   41d98:	b	41da0 <__assert_fail@plt+0x3090c>
   41d9c:	b	41da4 <__assert_fail@plt+0x30910>
   41da0:	b	41de4 <__assert_fail@plt+0x30950>
   41da4:	ldr	r0, [fp, #-12]
   41da8:	cmn	r0, #1
   41dac:	bne	41de4 <__assert_fail@plt+0x30950>
   41db0:	b	41dcc <__assert_fail@plt+0x30938>
   41db4:	ldr	r0, [fp, #-16]
   41db8:	add	r0, r0, #0
   41dbc:	movw	r1, #0
   41dc0:	cmp	r1, r0
   41dc4:	bcc	41e18 <__assert_fail@plt+0x30984>
   41dc8:	b	41e30 <__assert_fail@plt+0x3099c>
   41dcc:	ldr	r0, [fp, #-16]
   41dd0:	sub	r0, r0, #1
   41dd4:	mvn	r1, #0
   41dd8:	cmp	r1, r0
   41ddc:	bcc	41e18 <__assert_fail@plt+0x30984>
   41de0:	b	41e30 <__assert_fail@plt+0x3099c>
   41de4:	ldr	r0, [fp, #-12]
   41de8:	movw	r1, #0
   41dec:	udiv	r0, r1, r0
   41df0:	ldr	r1, [fp, #-16]
   41df4:	cmp	r0, r1
   41df8:	bcc	41e18 <__assert_fail@plt+0x30984>
   41dfc:	b	41e30 <__assert_fail@plt+0x3099c>
   41e00:	ldr	r0, [fp, #-16]
   41e04:	movw	r1, #65535	; 0xffff
   41e08:	udiv	r0, r1, r0
   41e0c:	ldr	r1, [fp, #-12]
   41e10:	cmp	r0, r1
   41e14:	bcs	41e30 <__assert_fail@plt+0x3099c>
   41e18:	ldr	r0, [fp, #-12]
   41e1c:	ldr	r1, [fp, #-16]
   41e20:	mul	r0, r0, r1
   41e24:	uxth	r0, r0
   41e28:	str	r0, [fp, #-20]	; 0xffffffec
   41e2c:	b	429c0 <__assert_fail@plt+0x3152c>
   41e30:	ldr	r0, [fp, #-12]
   41e34:	ldr	r1, [fp, #-16]
   41e38:	mul	r0, r0, r1
   41e3c:	uxth	r0, r0
   41e40:	str	r0, [fp, #-20]	; 0xffffffec
   41e44:	b	429d8 <__assert_fail@plt+0x31544>
   41e48:	b	41e4c <__assert_fail@plt+0x309b8>
   41e4c:	b	42010 <__assert_fail@plt+0x30b7c>
   41e50:	ldr	r0, [fp, #-16]
   41e54:	cmp	r0, #0
   41e58:	bcs	41f58 <__assert_fail@plt+0x30ac4>
   41e5c:	ldr	r0, [fp, #-12]
   41e60:	cmp	r0, #0
   41e64:	bcs	41eec <__assert_fail@plt+0x30a58>
   41e68:	b	41e88 <__assert_fail@plt+0x309f4>
   41e6c:	ldr	r0, [pc, #2944]	; 429f4 <__assert_fail@plt+0x31560>
   41e70:	ldr	r1, [fp, #-12]
   41e74:	ldr	r2, [fp, #-16]
   41e78:	udiv	r0, r0, r2
   41e7c:	cmp	r1, r0
   41e80:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41e84:	b	41ffc <__assert_fail@plt+0x30b68>
   41e88:	b	41e9c <__assert_fail@plt+0x30a08>
   41e8c:	ldr	r0, [fp, #-16]
   41e90:	cmp	r0, #1
   41e94:	bcc	41eac <__assert_fail@plt+0x30a18>
   41e98:	b	41eb8 <__assert_fail@plt+0x30a24>
   41e9c:	ldr	r0, [fp, #-16]
   41ea0:	movw	r1, #0
   41ea4:	cmp	r1, r0
   41ea8:	bcs	41eb8 <__assert_fail@plt+0x30a24>
   41eac:	movw	r0, #0
   41eb0:	str	r0, [fp, #-40]	; 0xffffffd8
   41eb4:	b	41ed0 <__assert_fail@plt+0x30a3c>
   41eb8:	ldr	r0, [pc, #2868]	; 429f4 <__assert_fail@plt+0x31560>
   41ebc:	ldr	r1, [fp, #-16]
   41ec0:	movw	r2, #0
   41ec4:	sub	r1, r2, r1
   41ec8:	udiv	r0, r0, r1
   41ecc:	str	r0, [fp, #-40]	; 0xffffffd8
   41ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   41ed4:	ldr	r1, [fp, #-12]
   41ed8:	mvn	r2, #0
   41edc:	sub	r1, r2, r1
   41ee0:	cmp	r0, r1
   41ee4:	bls	41fe8 <__assert_fail@plt+0x30b54>
   41ee8:	b	41ffc <__assert_fail@plt+0x30b68>
   41eec:	ldr	r0, [fp, #-16]
   41ef0:	cmn	r0, #1
   41ef4:	bne	41f3c <__assert_fail@plt+0x30aa8>
   41ef8:	b	41f14 <__assert_fail@plt+0x30a80>
   41efc:	ldr	r0, [fp, #-12]
   41f00:	add	r0, r0, #-2147483648	; 0x80000000
   41f04:	movw	r1, #0
   41f08:	cmp	r1, r0
   41f0c:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41f10:	b	41ffc <__assert_fail@plt+0x30b68>
   41f14:	ldr	r0, [fp, #-12]
   41f18:	movw	r1, #0
   41f1c:	cmp	r1, r0
   41f20:	bcs	41ffc <__assert_fail@plt+0x30b68>
   41f24:	ldr	r0, [pc, #2760]	; 429f4 <__assert_fail@plt+0x31560>
   41f28:	ldr	r1, [fp, #-12]
   41f2c:	sub	r1, r1, #1
   41f30:	cmp	r0, r1
   41f34:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41f38:	b	41ffc <__assert_fail@plt+0x30b68>
   41f3c:	ldr	r0, [pc, #2740]	; 429f8 <__assert_fail@plt+0x31564>
   41f40:	ldr	r1, [fp, #-16]
   41f44:	udiv	r0, r0, r1
   41f48:	ldr	r1, [fp, #-12]
   41f4c:	cmp	r0, r1
   41f50:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41f54:	b	41ffc <__assert_fail@plt+0x30b68>
   41f58:	ldr	r0, [fp, #-16]
   41f5c:	cmp	r0, #0
   41f60:	bne	41f68 <__assert_fail@plt+0x30ad4>
   41f64:	b	41ffc <__assert_fail@plt+0x30b68>
   41f68:	ldr	r0, [fp, #-12]
   41f6c:	cmp	r0, #0
   41f70:	bcs	41fd0 <__assert_fail@plt+0x30b3c>
   41f74:	ldr	r0, [fp, #-12]
   41f78:	cmn	r0, #1
   41f7c:	bne	41fb4 <__assert_fail@plt+0x30b20>
   41f80:	b	41f9c <__assert_fail@plt+0x30b08>
   41f84:	ldr	r0, [fp, #-16]
   41f88:	add	r0, r0, #-2147483648	; 0x80000000
   41f8c:	movw	r1, #0
   41f90:	cmp	r1, r0
   41f94:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41f98:	b	41ffc <__assert_fail@plt+0x30b68>
   41f9c:	ldr	r0, [pc, #2640]	; 429f4 <__assert_fail@plt+0x31560>
   41fa0:	ldr	r1, [fp, #-16]
   41fa4:	sub	r1, r1, #1
   41fa8:	cmp	r0, r1
   41fac:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41fb0:	b	41ffc <__assert_fail@plt+0x30b68>
   41fb4:	ldr	r0, [pc, #2620]	; 429f8 <__assert_fail@plt+0x31564>
   41fb8:	ldr	r1, [fp, #-12]
   41fbc:	udiv	r0, r0, r1
   41fc0:	ldr	r1, [fp, #-16]
   41fc4:	cmp	r0, r1
   41fc8:	bcc	41fe8 <__assert_fail@plt+0x30b54>
   41fcc:	b	41ffc <__assert_fail@plt+0x30b68>
   41fd0:	ldr	r0, [pc, #2588]	; 429f4 <__assert_fail@plt+0x31560>
   41fd4:	ldr	r1, [fp, #-16]
   41fd8:	udiv	r0, r0, r1
   41fdc:	ldr	r1, [fp, #-12]
   41fe0:	cmp	r0, r1
   41fe4:	bcs	41ffc <__assert_fail@plt+0x30b68>
   41fe8:	ldr	r0, [fp, #-12]
   41fec:	ldr	r1, [fp, #-16]
   41ff0:	mul	r0, r0, r1
   41ff4:	str	r0, [fp, #-20]	; 0xffffffec
   41ff8:	b	429c0 <__assert_fail@plt+0x3152c>
   41ffc:	ldr	r0, [fp, #-12]
   42000:	ldr	r1, [fp, #-16]
   42004:	mul	r0, r0, r1
   42008:	str	r0, [fp, #-20]	; 0xffffffec
   4200c:	b	429d8 <__assert_fail@plt+0x31544>
   42010:	ldr	r0, [fp, #-16]
   42014:	cmp	r0, #0
   42018:	bcs	42124 <__assert_fail@plt+0x30c90>
   4201c:	ldr	r0, [fp, #-12]
   42020:	cmp	r0, #0
   42024:	bcs	420ac <__assert_fail@plt+0x30c18>
   42028:	b	42048 <__assert_fail@plt+0x30bb4>
   4202c:	ldr	r0, [fp, #-12]
   42030:	ldr	r1, [fp, #-16]
   42034:	mvn	r2, #0
   42038:	udiv	r1, r2, r1
   4203c:	cmp	r0, r1
   42040:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   42044:	b	421d4 <__assert_fail@plt+0x30d40>
   42048:	b	4205c <__assert_fail@plt+0x30bc8>
   4204c:	ldr	r0, [fp, #-16]
   42050:	cmp	r0, #1
   42054:	bcc	4206c <__assert_fail@plt+0x30bd8>
   42058:	b	42078 <__assert_fail@plt+0x30be4>
   4205c:	ldr	r0, [fp, #-16]
   42060:	movw	r1, #0
   42064:	cmp	r1, r0
   42068:	bcs	42078 <__assert_fail@plt+0x30be4>
   4206c:	movw	r0, #1
   42070:	str	r0, [fp, #-44]	; 0xffffffd4
   42074:	b	42090 <__assert_fail@plt+0x30bfc>
   42078:	ldr	r0, [fp, #-16]
   4207c:	movw	r1, #0
   42080:	sub	r0, r1, r0
   42084:	mvn	r1, #0
   42088:	udiv	r0, r1, r0
   4208c:	str	r0, [fp, #-44]	; 0xffffffd4
   42090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42094:	ldr	r1, [fp, #-12]
   42098:	mvn	r2, #0
   4209c:	sub	r1, r2, r1
   420a0:	cmp	r0, r1
   420a4:	bls	421c0 <__assert_fail@plt+0x30d2c>
   420a8:	b	421d4 <__assert_fail@plt+0x30d40>
   420ac:	b	420b4 <__assert_fail@plt+0x30c20>
   420b0:	b	420b8 <__assert_fail@plt+0x30c24>
   420b4:	b	42108 <__assert_fail@plt+0x30c74>
   420b8:	ldr	r0, [fp, #-16]
   420bc:	cmn	r0, #1
   420c0:	bne	42108 <__assert_fail@plt+0x30c74>
   420c4:	b	420e0 <__assert_fail@plt+0x30c4c>
   420c8:	ldr	r0, [fp, #-12]
   420cc:	add	r0, r0, #0
   420d0:	movw	r1, #0
   420d4:	cmp	r1, r0
   420d8:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   420dc:	b	421d4 <__assert_fail@plt+0x30d40>
   420e0:	ldr	r0, [fp, #-12]
   420e4:	movw	r1, #0
   420e8:	cmp	r1, r0
   420ec:	bcs	421d4 <__assert_fail@plt+0x30d40>
   420f0:	ldr	r0, [fp, #-12]
   420f4:	sub	r0, r0, #1
   420f8:	mvn	r1, #0
   420fc:	cmp	r1, r0
   42100:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   42104:	b	421d4 <__assert_fail@plt+0x30d40>
   42108:	ldr	r0, [fp, #-16]
   4210c:	movw	r1, #0
   42110:	udiv	r0, r1, r0
   42114:	ldr	r1, [fp, #-12]
   42118:	cmp	r0, r1
   4211c:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   42120:	b	421d4 <__assert_fail@plt+0x30d40>
   42124:	ldr	r0, [fp, #-16]
   42128:	cmp	r0, #0
   4212c:	bne	42134 <__assert_fail@plt+0x30ca0>
   42130:	b	421d4 <__assert_fail@plt+0x30d40>
   42134:	ldr	r0, [fp, #-12]
   42138:	cmp	r0, #0
   4213c:	bcs	421a8 <__assert_fail@plt+0x30d14>
   42140:	b	42148 <__assert_fail@plt+0x30cb4>
   42144:	b	4214c <__assert_fail@plt+0x30cb8>
   42148:	b	4218c <__assert_fail@plt+0x30cf8>
   4214c:	ldr	r0, [fp, #-12]
   42150:	cmn	r0, #1
   42154:	bne	4218c <__assert_fail@plt+0x30cf8>
   42158:	b	42174 <__assert_fail@plt+0x30ce0>
   4215c:	ldr	r0, [fp, #-16]
   42160:	add	r0, r0, #0
   42164:	movw	r1, #0
   42168:	cmp	r1, r0
   4216c:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   42170:	b	421d4 <__assert_fail@plt+0x30d40>
   42174:	ldr	r0, [fp, #-16]
   42178:	sub	r0, r0, #1
   4217c:	mvn	r1, #0
   42180:	cmp	r1, r0
   42184:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   42188:	b	421d4 <__assert_fail@plt+0x30d40>
   4218c:	ldr	r0, [fp, #-12]
   42190:	movw	r1, #0
   42194:	udiv	r0, r1, r0
   42198:	ldr	r1, [fp, #-16]
   4219c:	cmp	r0, r1
   421a0:	bcc	421c0 <__assert_fail@plt+0x30d2c>
   421a4:	b	421d4 <__assert_fail@plt+0x30d40>
   421a8:	ldr	r0, [fp, #-16]
   421ac:	mvn	r1, #0
   421b0:	udiv	r0, r1, r0
   421b4:	ldr	r1, [fp, #-12]
   421b8:	cmp	r0, r1
   421bc:	bcs	421d4 <__assert_fail@plt+0x30d40>
   421c0:	ldr	r0, [fp, #-12]
   421c4:	ldr	r1, [fp, #-16]
   421c8:	mul	r0, r0, r1
   421cc:	str	r0, [fp, #-20]	; 0xffffffec
   421d0:	b	429c0 <__assert_fail@plt+0x3152c>
   421d4:	ldr	r0, [fp, #-12]
   421d8:	ldr	r1, [fp, #-16]
   421dc:	mul	r0, r0, r1
   421e0:	str	r0, [fp, #-20]	; 0xffffffec
   421e4:	b	429d8 <__assert_fail@plt+0x31544>
   421e8:	b	421ec <__assert_fail@plt+0x30d58>
   421ec:	b	423b0 <__assert_fail@plt+0x30f1c>
   421f0:	ldr	r0, [fp, #-16]
   421f4:	cmp	r0, #0
   421f8:	bcs	422f8 <__assert_fail@plt+0x30e64>
   421fc:	ldr	r0, [fp, #-12]
   42200:	cmp	r0, #0
   42204:	bcs	4228c <__assert_fail@plt+0x30df8>
   42208:	b	42228 <__assert_fail@plt+0x30d94>
   4220c:	ldr	r0, [pc, #2016]	; 429f4 <__assert_fail@plt+0x31560>
   42210:	ldr	r1, [fp, #-12]
   42214:	ldr	r2, [fp, #-16]
   42218:	udiv	r0, r0, r2
   4221c:	cmp	r1, r0
   42220:	bcc	42388 <__assert_fail@plt+0x30ef4>
   42224:	b	4239c <__assert_fail@plt+0x30f08>
   42228:	b	4223c <__assert_fail@plt+0x30da8>
   4222c:	ldr	r0, [fp, #-16]
   42230:	cmp	r0, #1
   42234:	bcc	4224c <__assert_fail@plt+0x30db8>
   42238:	b	42258 <__assert_fail@plt+0x30dc4>
   4223c:	ldr	r0, [fp, #-16]
   42240:	movw	r1, #0
   42244:	cmp	r1, r0
   42248:	bcs	42258 <__assert_fail@plt+0x30dc4>
   4224c:	movw	r0, #0
   42250:	str	r0, [sp, #48]	; 0x30
   42254:	b	42270 <__assert_fail@plt+0x30ddc>
   42258:	ldr	r0, [pc, #1940]	; 429f4 <__assert_fail@plt+0x31560>
   4225c:	ldr	r1, [fp, #-16]
   42260:	movw	r2, #0
   42264:	sub	r1, r2, r1
   42268:	udiv	r0, r0, r1
   4226c:	str	r0, [sp, #48]	; 0x30
   42270:	ldr	r0, [sp, #48]	; 0x30
   42274:	ldr	r1, [fp, #-12]
   42278:	mvn	r2, #0
   4227c:	sub	r1, r2, r1
   42280:	cmp	r0, r1
   42284:	bls	42388 <__assert_fail@plt+0x30ef4>
   42288:	b	4239c <__assert_fail@plt+0x30f08>
   4228c:	ldr	r0, [fp, #-16]
   42290:	cmn	r0, #1
   42294:	bne	422dc <__assert_fail@plt+0x30e48>
   42298:	b	422b4 <__assert_fail@plt+0x30e20>
   4229c:	ldr	r0, [fp, #-12]
   422a0:	add	r0, r0, #-2147483648	; 0x80000000
   422a4:	movw	r1, #0
   422a8:	cmp	r1, r0
   422ac:	bcc	42388 <__assert_fail@plt+0x30ef4>
   422b0:	b	4239c <__assert_fail@plt+0x30f08>
   422b4:	ldr	r0, [fp, #-12]
   422b8:	movw	r1, #0
   422bc:	cmp	r1, r0
   422c0:	bcs	4239c <__assert_fail@plt+0x30f08>
   422c4:	ldr	r0, [pc, #1832]	; 429f4 <__assert_fail@plt+0x31560>
   422c8:	ldr	r1, [fp, #-12]
   422cc:	sub	r1, r1, #1
   422d0:	cmp	r0, r1
   422d4:	bcc	42388 <__assert_fail@plt+0x30ef4>
   422d8:	b	4239c <__assert_fail@plt+0x30f08>
   422dc:	ldr	r0, [pc, #1812]	; 429f8 <__assert_fail@plt+0x31564>
   422e0:	ldr	r1, [fp, #-16]
   422e4:	udiv	r0, r0, r1
   422e8:	ldr	r1, [fp, #-12]
   422ec:	cmp	r0, r1
   422f0:	bcc	42388 <__assert_fail@plt+0x30ef4>
   422f4:	b	4239c <__assert_fail@plt+0x30f08>
   422f8:	ldr	r0, [fp, #-16]
   422fc:	cmp	r0, #0
   42300:	bne	42308 <__assert_fail@plt+0x30e74>
   42304:	b	4239c <__assert_fail@plt+0x30f08>
   42308:	ldr	r0, [fp, #-12]
   4230c:	cmp	r0, #0
   42310:	bcs	42370 <__assert_fail@plt+0x30edc>
   42314:	ldr	r0, [fp, #-12]
   42318:	cmn	r0, #1
   4231c:	bne	42354 <__assert_fail@plt+0x30ec0>
   42320:	b	4233c <__assert_fail@plt+0x30ea8>
   42324:	ldr	r0, [fp, #-16]
   42328:	add	r0, r0, #-2147483648	; 0x80000000
   4232c:	movw	r1, #0
   42330:	cmp	r1, r0
   42334:	bcc	42388 <__assert_fail@plt+0x30ef4>
   42338:	b	4239c <__assert_fail@plt+0x30f08>
   4233c:	ldr	r0, [pc, #1712]	; 429f4 <__assert_fail@plt+0x31560>
   42340:	ldr	r1, [fp, #-16]
   42344:	sub	r1, r1, #1
   42348:	cmp	r0, r1
   4234c:	bcc	42388 <__assert_fail@plt+0x30ef4>
   42350:	b	4239c <__assert_fail@plt+0x30f08>
   42354:	ldr	r0, [pc, #1692]	; 429f8 <__assert_fail@plt+0x31564>
   42358:	ldr	r1, [fp, #-12]
   4235c:	udiv	r0, r0, r1
   42360:	ldr	r1, [fp, #-16]
   42364:	cmp	r0, r1
   42368:	bcc	42388 <__assert_fail@plt+0x30ef4>
   4236c:	b	4239c <__assert_fail@plt+0x30f08>
   42370:	ldr	r0, [pc, #1660]	; 429f4 <__assert_fail@plt+0x31560>
   42374:	ldr	r1, [fp, #-16]
   42378:	udiv	r0, r0, r1
   4237c:	ldr	r1, [fp, #-12]
   42380:	cmp	r0, r1
   42384:	bcs	4239c <__assert_fail@plt+0x30f08>
   42388:	ldr	r0, [fp, #-12]
   4238c:	ldr	r1, [fp, #-16]
   42390:	mul	r0, r0, r1
   42394:	str	r0, [fp, #-20]	; 0xffffffec
   42398:	b	429c0 <__assert_fail@plt+0x3152c>
   4239c:	ldr	r0, [fp, #-12]
   423a0:	ldr	r1, [fp, #-16]
   423a4:	mul	r0, r0, r1
   423a8:	str	r0, [fp, #-20]	; 0xffffffec
   423ac:	b	429d8 <__assert_fail@plt+0x31544>
   423b0:	ldr	r0, [fp, #-16]
   423b4:	cmp	r0, #0
   423b8:	bcs	424c4 <__assert_fail@plt+0x31030>
   423bc:	ldr	r0, [fp, #-12]
   423c0:	cmp	r0, #0
   423c4:	bcs	4244c <__assert_fail@plt+0x30fb8>
   423c8:	b	423e8 <__assert_fail@plt+0x30f54>
   423cc:	ldr	r0, [fp, #-12]
   423d0:	ldr	r1, [fp, #-16]
   423d4:	mvn	r2, #0
   423d8:	udiv	r1, r2, r1
   423dc:	cmp	r0, r1
   423e0:	bcc	42560 <__assert_fail@plt+0x310cc>
   423e4:	b	42574 <__assert_fail@plt+0x310e0>
   423e8:	b	423fc <__assert_fail@plt+0x30f68>
   423ec:	ldr	r0, [fp, #-16]
   423f0:	cmp	r0, #1
   423f4:	bcc	4240c <__assert_fail@plt+0x30f78>
   423f8:	b	42418 <__assert_fail@plt+0x30f84>
   423fc:	ldr	r0, [fp, #-16]
   42400:	movw	r1, #0
   42404:	cmp	r1, r0
   42408:	bcs	42418 <__assert_fail@plt+0x30f84>
   4240c:	movw	r0, #1
   42410:	str	r0, [sp, #44]	; 0x2c
   42414:	b	42430 <__assert_fail@plt+0x30f9c>
   42418:	ldr	r0, [fp, #-16]
   4241c:	movw	r1, #0
   42420:	sub	r0, r1, r0
   42424:	mvn	r1, #0
   42428:	udiv	r0, r1, r0
   4242c:	str	r0, [sp, #44]	; 0x2c
   42430:	ldr	r0, [sp, #44]	; 0x2c
   42434:	ldr	r1, [fp, #-12]
   42438:	mvn	r2, #0
   4243c:	sub	r1, r2, r1
   42440:	cmp	r0, r1
   42444:	bls	42560 <__assert_fail@plt+0x310cc>
   42448:	b	42574 <__assert_fail@plt+0x310e0>
   4244c:	b	42454 <__assert_fail@plt+0x30fc0>
   42450:	b	42458 <__assert_fail@plt+0x30fc4>
   42454:	b	424a8 <__assert_fail@plt+0x31014>
   42458:	ldr	r0, [fp, #-16]
   4245c:	cmn	r0, #1
   42460:	bne	424a8 <__assert_fail@plt+0x31014>
   42464:	b	42480 <__assert_fail@plt+0x30fec>
   42468:	ldr	r0, [fp, #-12]
   4246c:	add	r0, r0, #0
   42470:	movw	r1, #0
   42474:	cmp	r1, r0
   42478:	bcc	42560 <__assert_fail@plt+0x310cc>
   4247c:	b	42574 <__assert_fail@plt+0x310e0>
   42480:	ldr	r0, [fp, #-12]
   42484:	movw	r1, #0
   42488:	cmp	r1, r0
   4248c:	bcs	42574 <__assert_fail@plt+0x310e0>
   42490:	ldr	r0, [fp, #-12]
   42494:	sub	r0, r0, #1
   42498:	mvn	r1, #0
   4249c:	cmp	r1, r0
   424a0:	bcc	42560 <__assert_fail@plt+0x310cc>
   424a4:	b	42574 <__assert_fail@plt+0x310e0>
   424a8:	ldr	r0, [fp, #-16]
   424ac:	movw	r1, #0
   424b0:	udiv	r0, r1, r0
   424b4:	ldr	r1, [fp, #-12]
   424b8:	cmp	r0, r1
   424bc:	bcc	42560 <__assert_fail@plt+0x310cc>
   424c0:	b	42574 <__assert_fail@plt+0x310e0>
   424c4:	ldr	r0, [fp, #-16]
   424c8:	cmp	r0, #0
   424cc:	bne	424d4 <__assert_fail@plt+0x31040>
   424d0:	b	42574 <__assert_fail@plt+0x310e0>
   424d4:	ldr	r0, [fp, #-12]
   424d8:	cmp	r0, #0
   424dc:	bcs	42548 <__assert_fail@plt+0x310b4>
   424e0:	b	424e8 <__assert_fail@plt+0x31054>
   424e4:	b	424ec <__assert_fail@plt+0x31058>
   424e8:	b	4252c <__assert_fail@plt+0x31098>
   424ec:	ldr	r0, [fp, #-12]
   424f0:	cmn	r0, #1
   424f4:	bne	4252c <__assert_fail@plt+0x31098>
   424f8:	b	42514 <__assert_fail@plt+0x31080>
   424fc:	ldr	r0, [fp, #-16]
   42500:	add	r0, r0, #0
   42504:	movw	r1, #0
   42508:	cmp	r1, r0
   4250c:	bcc	42560 <__assert_fail@plt+0x310cc>
   42510:	b	42574 <__assert_fail@plt+0x310e0>
   42514:	ldr	r0, [fp, #-16]
   42518:	sub	r0, r0, #1
   4251c:	mvn	r1, #0
   42520:	cmp	r1, r0
   42524:	bcc	42560 <__assert_fail@plt+0x310cc>
   42528:	b	42574 <__assert_fail@plt+0x310e0>
   4252c:	ldr	r0, [fp, #-12]
   42530:	movw	r1, #0
   42534:	udiv	r0, r1, r0
   42538:	ldr	r1, [fp, #-16]
   4253c:	cmp	r0, r1
   42540:	bcc	42560 <__assert_fail@plt+0x310cc>
   42544:	b	42574 <__assert_fail@plt+0x310e0>
   42548:	ldr	r0, [fp, #-16]
   4254c:	mvn	r1, #0
   42550:	udiv	r0, r1, r0
   42554:	ldr	r1, [fp, #-12]
   42558:	cmp	r0, r1
   4255c:	bcs	42574 <__assert_fail@plt+0x310e0>
   42560:	ldr	r0, [fp, #-12]
   42564:	ldr	r1, [fp, #-16]
   42568:	mul	r0, r0, r1
   4256c:	str	r0, [fp, #-20]	; 0xffffffec
   42570:	b	429c0 <__assert_fail@plt+0x3152c>
   42574:	ldr	r0, [fp, #-12]
   42578:	ldr	r1, [fp, #-16]
   4257c:	mul	r0, r0, r1
   42580:	str	r0, [fp, #-20]	; 0xffffffec
   42584:	b	429d8 <__assert_fail@plt+0x31544>
   42588:	b	427a4 <__assert_fail@plt+0x31310>
   4258c:	ldr	r0, [fp, #-16]
   42590:	cmp	r0, #0
   42594:	bcs	426d4 <__assert_fail@plt+0x31240>
   42598:	ldr	r0, [fp, #-12]
   4259c:	cmp	r0, #0
   425a0:	bcs	42660 <__assert_fail@plt+0x311cc>
   425a4:	b	425a8 <__assert_fail@plt+0x31114>
   425a8:	ldr	r0, [fp, #-12]
   425ac:	ldr	r2, [fp, #-16]
   425b0:	mvn	r1, #0
   425b4:	mvn	r3, #-2147483648	; 0x80000000
   425b8:	mov	ip, #0
   425bc:	str	r0, [sp, #40]	; 0x28
   425c0:	mov	r0, r1
   425c4:	mov	r1, r3
   425c8:	mov	r3, ip
   425cc:	bl	4330c <__assert_fail@plt+0x31e78>
   425d0:	ldr	r2, [sp, #40]	; 0x28
   425d4:	subs	r0, r2, r0
   425d8:	rscs	r1, r1, #0
   425dc:	blt	4277c <__assert_fail@plt+0x312e8>
   425e0:	b	42790 <__assert_fail@plt+0x312fc>
   425e4:	b	425f8 <__assert_fail@plt+0x31164>
   425e8:	ldr	r0, [fp, #-16]
   425ec:	cmp	r0, #1
   425f0:	bcc	42608 <__assert_fail@plt+0x31174>
   425f4:	b	4261c <__assert_fail@plt+0x31188>
   425f8:	ldr	r0, [fp, #-16]
   425fc:	movw	r1, #0
   42600:	cmp	r1, r0
   42604:	bcs	4261c <__assert_fail@plt+0x31188>
   42608:	mov	r0, #0
   4260c:	mvn	r1, #0
   42610:	str	r1, [sp, #36]	; 0x24
   42614:	str	r0, [sp, #32]
   42618:	b	42640 <__assert_fail@plt+0x311ac>
   4261c:	ldr	r0, [fp, #-16]
   42620:	rsb	r2, r0, #0
   42624:	mvn	r0, #0
   42628:	mvn	r1, #-2147483648	; 0x80000000
   4262c:	mov	r3, #0
   42630:	bl	4330c <__assert_fail@plt+0x31e78>
   42634:	str	r0, [sp, #36]	; 0x24
   42638:	str	r1, [sp, #32]
   4263c:	b	42640 <__assert_fail@plt+0x311ac>
   42640:	ldr	r0, [sp, #32]
   42644:	ldr	r1, [sp, #36]	; 0x24
   42648:	ldr	r2, [fp, #-12]
   4264c:	mvn	r2, r2
   42650:	subs	r1, r2, r1
   42654:	rscs	r0, r0, #0
   42658:	bge	4277c <__assert_fail@plt+0x312e8>
   4265c:	b	42790 <__assert_fail@plt+0x312fc>
   42660:	ldr	r0, [fp, #-16]
   42664:	cmn	r0, #1
   42668:	bne	426a8 <__assert_fail@plt+0x31214>
   4266c:	b	42688 <__assert_fail@plt+0x311f4>
   42670:	ldr	r0, [fp, #-12]
   42674:	rsbs	r0, r0, #0
   42678:	mov	r1, #0
   4267c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   42680:	blt	4277c <__assert_fail@plt+0x312e8>
   42684:	b	42790 <__assert_fail@plt+0x312fc>
   42688:	ldr	r0, [fp, #-12]
   4268c:	movw	r1, #0
   42690:	cmp	r1, r0
   42694:	bcs	42790 <__assert_fail@plt+0x312fc>
   42698:	mov	r0, #0
   4269c:	cmp	r0, #0
   426a0:	bne	4277c <__assert_fail@plt+0x312e8>
   426a4:	b	42790 <__assert_fail@plt+0x312fc>
   426a8:	ldr	r2, [fp, #-16]
   426ac:	mov	r1, #-2147483648	; 0x80000000
   426b0:	mov	r0, #0
   426b4:	str	r0, [sp, #28]
   426b8:	ldr	r3, [sp, #28]
   426bc:	bl	43238 <__assert_fail@plt+0x31da4>
   426c0:	ldr	r2, [fp, #-12]
   426c4:	subs	r0, r0, r2
   426c8:	sbcs	r1, r1, #0
   426cc:	blt	4277c <__assert_fail@plt+0x312e8>
   426d0:	b	42790 <__assert_fail@plt+0x312fc>
   426d4:	ldr	r0, [fp, #-16]
   426d8:	cmp	r0, #0
   426dc:	bne	426e4 <__assert_fail@plt+0x31250>
   426e0:	b	42790 <__assert_fail@plt+0x312fc>
   426e4:	ldr	r0, [fp, #-12]
   426e8:	cmp	r0, #0
   426ec:	bcs	42754 <__assert_fail@plt+0x312c0>
   426f0:	ldr	r0, [fp, #-12]
   426f4:	cmn	r0, #1
   426f8:	bne	42728 <__assert_fail@plt+0x31294>
   426fc:	b	42718 <__assert_fail@plt+0x31284>
   42700:	ldr	r0, [fp, #-16]
   42704:	rsbs	r0, r0, #0
   42708:	mov	r1, #0
   4270c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   42710:	blt	4277c <__assert_fail@plt+0x312e8>
   42714:	b	42790 <__assert_fail@plt+0x312fc>
   42718:	mov	r0, #0
   4271c:	cmp	r0, #0
   42720:	bne	4277c <__assert_fail@plt+0x312e8>
   42724:	b	42790 <__assert_fail@plt+0x312fc>
   42728:	ldr	r2, [fp, #-12]
   4272c:	mov	r1, #-2147483648	; 0x80000000
   42730:	mov	r0, #0
   42734:	str	r0, [sp, #24]
   42738:	ldr	r3, [sp, #24]
   4273c:	bl	43238 <__assert_fail@plt+0x31da4>
   42740:	ldr	r2, [fp, #-16]
   42744:	subs	r0, r0, r2
   42748:	sbcs	r1, r1, #0
   4274c:	blt	4277c <__assert_fail@plt+0x312e8>
   42750:	b	42790 <__assert_fail@plt+0x312fc>
   42754:	ldr	r2, [fp, #-16]
   42758:	mvn	r0, #0
   4275c:	mvn	r1, #-2147483648	; 0x80000000
   42760:	mov	r3, #0
   42764:	bl	4330c <__assert_fail@plt+0x31e78>
   42768:	ldr	r2, [fp, #-12]
   4276c:	subs	r0, r0, r2
   42770:	sbcs	r1, r1, #0
   42774:	bge	42790 <__assert_fail@plt+0x312fc>
   42778:	b	4277c <__assert_fail@plt+0x312e8>
   4277c:	ldr	r0, [fp, #-12]
   42780:	ldr	r1, [fp, #-16]
   42784:	mul	r0, r0, r1
   42788:	str	r0, [fp, #-20]	; 0xffffffec
   4278c:	b	429c0 <__assert_fail@plt+0x3152c>
   42790:	ldr	r0, [fp, #-12]
   42794:	ldr	r1, [fp, #-16]
   42798:	mul	r0, r0, r1
   4279c:	str	r0, [fp, #-20]	; 0xffffffec
   427a0:	b	429d8 <__assert_fail@plt+0x31544>
   427a4:	ldr	r0, [fp, #-16]
   427a8:	cmp	r0, #0
   427ac:	bcs	428e8 <__assert_fail@plt+0x31454>
   427b0:	ldr	r0, [fp, #-12]
   427b4:	cmp	r0, #0
   427b8:	bcs	42870 <__assert_fail@plt+0x313dc>
   427bc:	b	427f0 <__assert_fail@plt+0x3135c>
   427c0:	ldr	r0, [fp, #-12]
   427c4:	ldr	r2, [fp, #-16]
   427c8:	mvn	r1, #0
   427cc:	mov	r3, #0
   427d0:	str	r0, [sp, #20]
   427d4:	mov	r0, r1
   427d8:	bl	4330c <__assert_fail@plt+0x31e78>
   427dc:	ldr	r2, [sp, #20]
   427e0:	subs	r0, r2, r0
   427e4:	rscs	r1, r1, #0
   427e8:	bcc	42998 <__assert_fail@plt+0x31504>
   427ec:	b	429ac <__assert_fail@plt+0x31518>
   427f0:	b	42804 <__assert_fail@plt+0x31370>
   427f4:	ldr	r0, [fp, #-16]
   427f8:	cmp	r0, #1
   427fc:	bcc	42814 <__assert_fail@plt+0x31380>
   42800:	b	42828 <__assert_fail@plt+0x31394>
   42804:	ldr	r0, [fp, #-16]
   42808:	movw	r1, #0
   4280c:	cmp	r1, r0
   42810:	bcs	42828 <__assert_fail@plt+0x31394>
   42814:	mov	r0, #1
   42818:	mvn	r1, #0
   4281c:	str	r1, [sp, #16]
   42820:	str	r0, [sp, #12]
   42824:	b	42850 <__assert_fail@plt+0x313bc>
   42828:	ldr	r0, [fp, #-16]
   4282c:	rsb	r2, r0, #0
   42830:	mvn	r0, #0
   42834:	mov	r3, #0
   42838:	str	r0, [sp, #8]
   4283c:	ldr	r1, [sp, #8]
   42840:	bl	4330c <__assert_fail@plt+0x31e78>
   42844:	str	r0, [sp, #16]
   42848:	str	r1, [sp, #12]
   4284c:	b	42850 <__assert_fail@plt+0x313bc>
   42850:	ldr	r0, [sp, #12]
   42854:	ldr	r1, [sp, #16]
   42858:	ldr	r2, [fp, #-12]
   4285c:	mvn	r2, r2
   42860:	subs	r1, r2, r1
   42864:	rscs	r0, r0, #0
   42868:	bcs	42998 <__assert_fail@plt+0x31504>
   4286c:	b	429ac <__assert_fail@plt+0x31518>
   42870:	b	42878 <__assert_fail@plt+0x313e4>
   42874:	b	4287c <__assert_fail@plt+0x313e8>
   42878:	b	428cc <__assert_fail@plt+0x31438>
   4287c:	ldr	r0, [fp, #-16]
   42880:	cmn	r0, #1
   42884:	bne	428cc <__assert_fail@plt+0x31438>
   42888:	b	428a4 <__assert_fail@plt+0x31410>
   4288c:	ldr	r0, [fp, #-12]
   42890:	add	r0, r0, #0
   42894:	movw	r1, #0
   42898:	cmp	r1, r0
   4289c:	bcc	42998 <__assert_fail@plt+0x31504>
   428a0:	b	429ac <__assert_fail@plt+0x31518>
   428a4:	ldr	r0, [fp, #-12]
   428a8:	movw	r1, #0
   428ac:	cmp	r1, r0
   428b0:	bcs	429ac <__assert_fail@plt+0x31518>
   428b4:	ldr	r0, [fp, #-12]
   428b8:	sub	r0, r0, #1
   428bc:	mvn	r1, #0
   428c0:	cmp	r1, r0
   428c4:	bcc	42998 <__assert_fail@plt+0x31504>
   428c8:	b	429ac <__assert_fail@plt+0x31518>
   428cc:	ldr	r0, [fp, #-16]
   428d0:	movw	r1, #0
   428d4:	udiv	r0, r1, r0
   428d8:	ldr	r1, [fp, #-12]
   428dc:	cmp	r0, r1
   428e0:	bcc	42998 <__assert_fail@plt+0x31504>
   428e4:	b	429ac <__assert_fail@plt+0x31518>
   428e8:	ldr	r0, [fp, #-16]
   428ec:	cmp	r0, #0
   428f0:	bne	428f8 <__assert_fail@plt+0x31464>
   428f4:	b	429ac <__assert_fail@plt+0x31518>
   428f8:	ldr	r0, [fp, #-12]
   428fc:	cmp	r0, #0
   42900:	bcs	4296c <__assert_fail@plt+0x314d8>
   42904:	b	4290c <__assert_fail@plt+0x31478>
   42908:	b	42910 <__assert_fail@plt+0x3147c>
   4290c:	b	42950 <__assert_fail@plt+0x314bc>
   42910:	ldr	r0, [fp, #-12]
   42914:	cmn	r0, #1
   42918:	bne	42950 <__assert_fail@plt+0x314bc>
   4291c:	b	42938 <__assert_fail@plt+0x314a4>
   42920:	ldr	r0, [fp, #-16]
   42924:	add	r0, r0, #0
   42928:	movw	r1, #0
   4292c:	cmp	r1, r0
   42930:	bcc	42998 <__assert_fail@plt+0x31504>
   42934:	b	429ac <__assert_fail@plt+0x31518>
   42938:	ldr	r0, [fp, #-16]
   4293c:	sub	r0, r0, #1
   42940:	mvn	r1, #0
   42944:	cmp	r1, r0
   42948:	bcc	42998 <__assert_fail@plt+0x31504>
   4294c:	b	429ac <__assert_fail@plt+0x31518>
   42950:	ldr	r0, [fp, #-12]
   42954:	movw	r1, #0
   42958:	udiv	r0, r1, r0
   4295c:	ldr	r1, [fp, #-16]
   42960:	cmp	r0, r1
   42964:	bcc	42998 <__assert_fail@plt+0x31504>
   42968:	b	429ac <__assert_fail@plt+0x31518>
   4296c:	ldr	r2, [fp, #-16]
   42970:	mvn	r0, #0
   42974:	mov	r3, #0
   42978:	str	r0, [sp, #4]
   4297c:	ldr	r1, [sp, #4]
   42980:	bl	4330c <__assert_fail@plt+0x31e78>
   42984:	ldr	r2, [fp, #-12]
   42988:	subs	r0, r0, r2
   4298c:	sbcs	r1, r1, #0
   42990:	bcs	429ac <__assert_fail@plt+0x31518>
   42994:	b	42998 <__assert_fail@plt+0x31504>
   42998:	ldr	r0, [fp, #-12]
   4299c:	ldr	r1, [fp, #-16]
   429a0:	mul	r0, r0, r1
   429a4:	str	r0, [fp, #-20]	; 0xffffffec
   429a8:	b	429c0 <__assert_fail@plt+0x3152c>
   429ac:	ldr	r0, [fp, #-12]
   429b0:	ldr	r1, [fp, #-16]
   429b4:	mul	r0, r0, r1
   429b8:	str	r0, [fp, #-20]	; 0xffffffec
   429bc:	b	429d8 <__assert_fail@plt+0x31544>
   429c0:	bl	113b0 <__errno_location@plt>
   429c4:	movw	r1, #12
   429c8:	str	r1, [r0]
   429cc:	movw	r0, #0
   429d0:	str	r0, [fp, #-4]
   429d4:	b	429e8 <__assert_fail@plt+0x31554>
   429d8:	ldr	r0, [fp, #-8]
   429dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   429e0:	bl	3f978 <__assert_fail@plt+0x2e4e4>
   429e4:	str	r0, [fp, #-4]
   429e8:	ldr	r0, [fp, #-4]
   429ec:	mov	sp, fp
   429f0:	pop	{fp, pc}
   429f4:	svcvc	0x00ffffff
   429f8:	andhi	r0, r0, r0
   429fc:			; <UNDEFINED> instruction: 0xffff8000
   42a00:	sub	sp, sp, #12
   42a04:	str	r0, [sp, #4]
   42a08:	ldr	r0, [sp, #4]
   42a0c:	sub	r1, r0, #48	; 0x30
   42a10:	cmp	r1, #10
   42a14:	str	r0, [sp]
   42a18:	bcc	42a48 <__assert_fail@plt+0x315b4>
   42a1c:	b	42a20 <__assert_fail@plt+0x3158c>
   42a20:	ldr	r0, [sp]
   42a24:	sub	r1, r0, #65	; 0x41
   42a28:	cmp	r1, #26
   42a2c:	bcc	42a48 <__assert_fail@plt+0x315b4>
   42a30:	b	42a34 <__assert_fail@plt+0x315a0>
   42a34:	ldr	r0, [sp]
   42a38:	sub	r1, r0, #97	; 0x61
   42a3c:	cmp	r1, #25
   42a40:	bhi	42a58 <__assert_fail@plt+0x315c4>
   42a44:	b	42a48 <__assert_fail@plt+0x315b4>
   42a48:	movw	r0, #1
   42a4c:	and	r0, r0, #1
   42a50:	strb	r0, [sp, #11]
   42a54:	b	42a64 <__assert_fail@plt+0x315d0>
   42a58:	movw	r0, #0
   42a5c:	and	r0, r0, #1
   42a60:	strb	r0, [sp, #11]
   42a64:	ldrb	r0, [sp, #11]
   42a68:	and	r0, r0, #1
   42a6c:	add	sp, sp, #12
   42a70:	bx	lr
   42a74:	sub	sp, sp, #12
   42a78:	str	r0, [sp, #4]
   42a7c:	ldr	r0, [sp, #4]
   42a80:	sub	r1, r0, #65	; 0x41
   42a84:	cmp	r1, #26
   42a88:	str	r0, [sp]
   42a8c:	bcc	42aa8 <__assert_fail@plt+0x31614>
   42a90:	b	42a94 <__assert_fail@plt+0x31600>
   42a94:	ldr	r0, [sp]
   42a98:	sub	r1, r0, #97	; 0x61
   42a9c:	cmp	r1, #25
   42aa0:	bhi	42ab8 <__assert_fail@plt+0x31624>
   42aa4:	b	42aa8 <__assert_fail@plt+0x31614>
   42aa8:	movw	r0, #1
   42aac:	and	r0, r0, #1
   42ab0:	strb	r0, [sp, #11]
   42ab4:	b	42ac4 <__assert_fail@plt+0x31630>
   42ab8:	movw	r0, #0
   42abc:	and	r0, r0, #1
   42ac0:	strb	r0, [sp, #11]
   42ac4:	ldrb	r0, [sp, #11]
   42ac8:	and	r0, r0, #1
   42acc:	add	sp, sp, #12
   42ad0:	bx	lr
   42ad4:	sub	sp, sp, #8
   42ad8:	str	r0, [sp]
   42adc:	ldr	r0, [sp]
   42ae0:	cmp	r0, #127	; 0x7f
   42ae4:	bhi	42afc <__assert_fail@plt+0x31668>
   42ae8:	b	42aec <__assert_fail@plt+0x31658>
   42aec:	movw	r0, #1
   42af0:	and	r0, r0, #1
   42af4:	strb	r0, [sp, #7]
   42af8:	b	42b08 <__assert_fail@plt+0x31674>
   42afc:	movw	r0, #0
   42b00:	and	r0, r0, #1
   42b04:	strb	r0, [sp, #7]
   42b08:	ldrb	r0, [sp, #7]
   42b0c:	and	r0, r0, #1
   42b10:	add	sp, sp, #8
   42b14:	bx	lr
   42b18:	sub	sp, sp, #8
   42b1c:	str	r0, [sp, #4]
   42b20:	ldr	r0, [sp, #4]
   42b24:	cmp	r0, #32
   42b28:	movw	r0, #1
   42b2c:	str	r0, [sp]
   42b30:	beq	42b48 <__assert_fail@plt+0x316b4>
   42b34:	ldr	r0, [sp, #4]
   42b38:	cmp	r0, #9
   42b3c:	movw	r0, #0
   42b40:	moveq	r0, #1
   42b44:	str	r0, [sp]
   42b48:	ldr	r0, [sp]
   42b4c:	and	r0, r0, #1
   42b50:	add	sp, sp, #8
   42b54:	bx	lr
   42b58:	sub	sp, sp, #12
   42b5c:	str	r0, [sp, #4]
   42b60:	ldr	r0, [sp, #4]
   42b64:	cmp	r0, #32
   42b68:	str	r0, [sp]
   42b6c:	bcc	42b84 <__assert_fail@plt+0x316f0>
   42b70:	b	42b74 <__assert_fail@plt+0x316e0>
   42b74:	ldr	r0, [sp]
   42b78:	cmp	r0, #127	; 0x7f
   42b7c:	bne	42b94 <__assert_fail@plt+0x31700>
   42b80:	b	42b84 <__assert_fail@plt+0x316f0>
   42b84:	movw	r0, #1
   42b88:	and	r0, r0, #1
   42b8c:	strb	r0, [sp, #11]
   42b90:	b	42ba0 <__assert_fail@plt+0x3170c>
   42b94:	movw	r0, #0
   42b98:	and	r0, r0, #1
   42b9c:	strb	r0, [sp, #11]
   42ba0:	ldrb	r0, [sp, #11]
   42ba4:	and	r0, r0, #1
   42ba8:	add	sp, sp, #12
   42bac:	bx	lr
   42bb0:	sub	sp, sp, #8
   42bb4:	str	r0, [sp]
   42bb8:	ldr	r0, [sp]
   42bbc:	sub	r0, r0, #48	; 0x30
   42bc0:	cmp	r0, #9
   42bc4:	bhi	42bdc <__assert_fail@plt+0x31748>
   42bc8:	b	42bcc <__assert_fail@plt+0x31738>
   42bcc:	movw	r0, #1
   42bd0:	and	r0, r0, #1
   42bd4:	strb	r0, [sp, #7]
   42bd8:	b	42be8 <__assert_fail@plt+0x31754>
   42bdc:	movw	r0, #0
   42be0:	and	r0, r0, #1
   42be4:	strb	r0, [sp, #7]
   42be8:	ldrb	r0, [sp, #7]
   42bec:	and	r0, r0, #1
   42bf0:	add	sp, sp, #8
   42bf4:	bx	lr
   42bf8:	sub	sp, sp, #8
   42bfc:	str	r0, [sp]
   42c00:	ldr	r0, [sp]
   42c04:	sub	r0, r0, #33	; 0x21
   42c08:	cmp	r0, #93	; 0x5d
   42c0c:	bhi	42c24 <__assert_fail@plt+0x31790>
   42c10:	b	42c14 <__assert_fail@plt+0x31780>
   42c14:	movw	r0, #1
   42c18:	and	r0, r0, #1
   42c1c:	strb	r0, [sp, #7]
   42c20:	b	42c30 <__assert_fail@plt+0x3179c>
   42c24:	movw	r0, #0
   42c28:	and	r0, r0, #1
   42c2c:	strb	r0, [sp, #7]
   42c30:	ldrb	r0, [sp, #7]
   42c34:	and	r0, r0, #1
   42c38:	add	sp, sp, #8
   42c3c:	bx	lr
   42c40:	sub	sp, sp, #8
   42c44:	str	r0, [sp]
   42c48:	ldr	r0, [sp]
   42c4c:	sub	r0, r0, #97	; 0x61
   42c50:	cmp	r0, #25
   42c54:	bhi	42c6c <__assert_fail@plt+0x317d8>
   42c58:	b	42c5c <__assert_fail@plt+0x317c8>
   42c5c:	movw	r0, #1
   42c60:	and	r0, r0, #1
   42c64:	strb	r0, [sp, #7]
   42c68:	b	42c78 <__assert_fail@plt+0x317e4>
   42c6c:	movw	r0, #0
   42c70:	and	r0, r0, #1
   42c74:	strb	r0, [sp, #7]
   42c78:	ldrb	r0, [sp, #7]
   42c7c:	and	r0, r0, #1
   42c80:	add	sp, sp, #8
   42c84:	bx	lr
   42c88:	sub	sp, sp, #8
   42c8c:	str	r0, [sp]
   42c90:	ldr	r0, [sp]
   42c94:	sub	r0, r0, #32
   42c98:	cmp	r0, #94	; 0x5e
   42c9c:	bhi	42cb4 <__assert_fail@plt+0x31820>
   42ca0:	b	42ca4 <__assert_fail@plt+0x31810>
   42ca4:	movw	r0, #1
   42ca8:	and	r0, r0, #1
   42cac:	strb	r0, [sp, #7]
   42cb0:	b	42cc0 <__assert_fail@plt+0x3182c>
   42cb4:	movw	r0, #0
   42cb8:	and	r0, r0, #1
   42cbc:	strb	r0, [sp, #7]
   42cc0:	ldrb	r0, [sp, #7]
   42cc4:	and	r0, r0, #1
   42cc8:	add	sp, sp, #8
   42ccc:	bx	lr
   42cd0:	sub	sp, sp, #12
   42cd4:	str	r0, [sp, #4]
   42cd8:	ldr	r0, [sp, #4]
   42cdc:	sub	r0, r0, #33	; 0x21
   42ce0:	cmp	r0, #93	; 0x5d
   42ce4:	str	r0, [sp]
   42ce8:	bhi	42e84 <__assert_fail@plt+0x319f0>
   42cec:	add	r0, pc, #8
   42cf0:	ldr	r1, [sp]
   42cf4:	ldr	r0, [r0, r1, lsl #2]
   42cf8:	mov	pc, r0
   42cfc:	andeq	r2, r4, r4, ror lr
   42d00:	andeq	r2, r4, r4, ror lr
   42d04:	andeq	r2, r4, r4, ror lr
   42d08:	andeq	r2, r4, r4, ror lr
   42d0c:	andeq	r2, r4, r4, ror lr
   42d10:	andeq	r2, r4, r4, ror lr
   42d14:	andeq	r2, r4, r4, ror lr
   42d18:	andeq	r2, r4, r4, ror lr
   42d1c:	andeq	r2, r4, r4, ror lr
   42d20:	andeq	r2, r4, r4, ror lr
   42d24:	andeq	r2, r4, r4, ror lr
   42d28:	andeq	r2, r4, r4, ror lr
   42d2c:	andeq	r2, r4, r4, ror lr
   42d30:	andeq	r2, r4, r4, ror lr
   42d34:	andeq	r2, r4, r4, ror lr
   42d38:	andeq	r2, r4, r4, lsl #29
   42d3c:	andeq	r2, r4, r4, lsl #29
   42d40:	andeq	r2, r4, r4, lsl #29
   42d44:	andeq	r2, r4, r4, lsl #29
   42d48:	andeq	r2, r4, r4, lsl #29
   42d4c:	andeq	r2, r4, r4, lsl #29
   42d50:	andeq	r2, r4, r4, lsl #29
   42d54:	andeq	r2, r4, r4, lsl #29
   42d58:	andeq	r2, r4, r4, lsl #29
   42d5c:	andeq	r2, r4, r4, lsl #29
   42d60:	andeq	r2, r4, r4, ror lr
   42d64:	andeq	r2, r4, r4, ror lr
   42d68:	andeq	r2, r4, r4, ror lr
   42d6c:	andeq	r2, r4, r4, ror lr
   42d70:	andeq	r2, r4, r4, ror lr
   42d74:	andeq	r2, r4, r4, ror lr
   42d78:	andeq	r2, r4, r4, ror lr
   42d7c:	andeq	r2, r4, r4, lsl #29
   42d80:	andeq	r2, r4, r4, lsl #29
   42d84:	andeq	r2, r4, r4, lsl #29
   42d88:	andeq	r2, r4, r4, lsl #29
   42d8c:	andeq	r2, r4, r4, lsl #29
   42d90:	andeq	r2, r4, r4, lsl #29
   42d94:	andeq	r2, r4, r4, lsl #29
   42d98:	andeq	r2, r4, r4, lsl #29
   42d9c:	andeq	r2, r4, r4, lsl #29
   42da0:	andeq	r2, r4, r4, lsl #29
   42da4:	andeq	r2, r4, r4, lsl #29
   42da8:	andeq	r2, r4, r4, lsl #29
   42dac:	andeq	r2, r4, r4, lsl #29
   42db0:	andeq	r2, r4, r4, lsl #29
   42db4:	andeq	r2, r4, r4, lsl #29
   42db8:	andeq	r2, r4, r4, lsl #29
   42dbc:	andeq	r2, r4, r4, lsl #29
   42dc0:	andeq	r2, r4, r4, lsl #29
   42dc4:	andeq	r2, r4, r4, lsl #29
   42dc8:	andeq	r2, r4, r4, lsl #29
   42dcc:	andeq	r2, r4, r4, lsl #29
   42dd0:	andeq	r2, r4, r4, lsl #29
   42dd4:	andeq	r2, r4, r4, lsl #29
   42dd8:	andeq	r2, r4, r4, lsl #29
   42ddc:	andeq	r2, r4, r4, lsl #29
   42de0:	andeq	r2, r4, r4, lsl #29
   42de4:	andeq	r2, r4, r4, ror lr
   42de8:	andeq	r2, r4, r4, ror lr
   42dec:	andeq	r2, r4, r4, ror lr
   42df0:	andeq	r2, r4, r4, ror lr
   42df4:	andeq	r2, r4, r4, ror lr
   42df8:	andeq	r2, r4, r4, ror lr
   42dfc:	andeq	r2, r4, r4, lsl #29
   42e00:	andeq	r2, r4, r4, lsl #29
   42e04:	andeq	r2, r4, r4, lsl #29
   42e08:	andeq	r2, r4, r4, lsl #29
   42e0c:	andeq	r2, r4, r4, lsl #29
   42e10:	andeq	r2, r4, r4, lsl #29
   42e14:	andeq	r2, r4, r4, lsl #29
   42e18:	andeq	r2, r4, r4, lsl #29
   42e1c:	andeq	r2, r4, r4, lsl #29
   42e20:	andeq	r2, r4, r4, lsl #29
   42e24:	andeq	r2, r4, r4, lsl #29
   42e28:	andeq	r2, r4, r4, lsl #29
   42e2c:	andeq	r2, r4, r4, lsl #29
   42e30:	andeq	r2, r4, r4, lsl #29
   42e34:	andeq	r2, r4, r4, lsl #29
   42e38:	andeq	r2, r4, r4, lsl #29
   42e3c:	andeq	r2, r4, r4, lsl #29
   42e40:	andeq	r2, r4, r4, lsl #29
   42e44:	andeq	r2, r4, r4, lsl #29
   42e48:	andeq	r2, r4, r4, lsl #29
   42e4c:	andeq	r2, r4, r4, lsl #29
   42e50:	andeq	r2, r4, r4, lsl #29
   42e54:	andeq	r2, r4, r4, lsl #29
   42e58:	andeq	r2, r4, r4, lsl #29
   42e5c:	andeq	r2, r4, r4, lsl #29
   42e60:	andeq	r2, r4, r4, lsl #29
   42e64:	andeq	r2, r4, r4, ror lr
   42e68:	andeq	r2, r4, r4, ror lr
   42e6c:	andeq	r2, r4, r4, ror lr
   42e70:	andeq	r2, r4, r4, ror lr
   42e74:	movw	r0, #1
   42e78:	and	r0, r0, #1
   42e7c:	strb	r0, [sp, #11]
   42e80:	b	42e90 <__assert_fail@plt+0x319fc>
   42e84:	movw	r0, #0
   42e88:	and	r0, r0, #1
   42e8c:	strb	r0, [sp, #11]
   42e90:	ldrb	r0, [sp, #11]
   42e94:	and	r0, r0, #1
   42e98:	add	sp, sp, #12
   42e9c:	bx	lr
   42ea0:	sub	sp, sp, #12
   42ea4:	str	r0, [sp, #4]
   42ea8:	ldr	r0, [sp, #4]
   42eac:	sub	r1, r0, #9
   42eb0:	cmp	r1, #5
   42eb4:	str	r0, [sp]
   42eb8:	bcc	42ed0 <__assert_fail@plt+0x31a3c>
   42ebc:	b	42ec0 <__assert_fail@plt+0x31a2c>
   42ec0:	ldr	r0, [sp]
   42ec4:	cmp	r0, #32
   42ec8:	bne	42ee0 <__assert_fail@plt+0x31a4c>
   42ecc:	b	42ed0 <__assert_fail@plt+0x31a3c>
   42ed0:	movw	r0, #1
   42ed4:	and	r0, r0, #1
   42ed8:	strb	r0, [sp, #11]
   42edc:	b	42eec <__assert_fail@plt+0x31a58>
   42ee0:	movw	r0, #0
   42ee4:	and	r0, r0, #1
   42ee8:	strb	r0, [sp, #11]
   42eec:	ldrb	r0, [sp, #11]
   42ef0:	and	r0, r0, #1
   42ef4:	add	sp, sp, #12
   42ef8:	bx	lr
   42efc:	sub	sp, sp, #8
   42f00:	str	r0, [sp]
   42f04:	ldr	r0, [sp]
   42f08:	sub	r0, r0, #65	; 0x41
   42f0c:	cmp	r0, #25
   42f10:	bhi	42f28 <__assert_fail@plt+0x31a94>
   42f14:	b	42f18 <__assert_fail@plt+0x31a84>
   42f18:	movw	r0, #1
   42f1c:	and	r0, r0, #1
   42f20:	strb	r0, [sp, #7]
   42f24:	b	42f34 <__assert_fail@plt+0x31aa0>
   42f28:	movw	r0, #0
   42f2c:	and	r0, r0, #1
   42f30:	strb	r0, [sp, #7]
   42f34:	ldrb	r0, [sp, #7]
   42f38:	and	r0, r0, #1
   42f3c:	add	sp, sp, #8
   42f40:	bx	lr
   42f44:	sub	sp, sp, #12
   42f48:	str	r0, [sp, #4]
   42f4c:	ldr	r0, [sp, #4]
   42f50:	sub	r1, r0, #48	; 0x30
   42f54:	cmp	r1, #10
   42f58:	str	r0, [sp]
   42f5c:	bcc	42f8c <__assert_fail@plt+0x31af8>
   42f60:	b	42f64 <__assert_fail@plt+0x31ad0>
   42f64:	ldr	r0, [sp]
   42f68:	sub	r1, r0, #65	; 0x41
   42f6c:	cmp	r1, #6
   42f70:	bcc	42f8c <__assert_fail@plt+0x31af8>
   42f74:	b	42f78 <__assert_fail@plt+0x31ae4>
   42f78:	ldr	r0, [sp]
   42f7c:	sub	r1, r0, #97	; 0x61
   42f80:	cmp	r1, #5
   42f84:	bhi	42f9c <__assert_fail@plt+0x31b08>
   42f88:	b	42f8c <__assert_fail@plt+0x31af8>
   42f8c:	movw	r0, #1
   42f90:	and	r0, r0, #1
   42f94:	strb	r0, [sp, #11]
   42f98:	b	42fa8 <__assert_fail@plt+0x31b14>
   42f9c:	movw	r0, #0
   42fa0:	and	r0, r0, #1
   42fa4:	strb	r0, [sp, #11]
   42fa8:	ldrb	r0, [sp, #11]
   42fac:	and	r0, r0, #1
   42fb0:	add	sp, sp, #12
   42fb4:	bx	lr
   42fb8:	sub	sp, sp, #8
   42fbc:	str	r0, [sp]
   42fc0:	ldr	r0, [sp]
   42fc4:	sub	r0, r0, #65	; 0x41
   42fc8:	cmp	r0, #25
   42fcc:	bhi	42fe8 <__assert_fail@plt+0x31b54>
   42fd0:	b	42fd4 <__assert_fail@plt+0x31b40>
   42fd4:	ldr	r0, [sp]
   42fd8:	sub	r0, r0, #65	; 0x41
   42fdc:	add	r0, r0, #97	; 0x61
   42fe0:	str	r0, [sp, #4]
   42fe4:	b	42ff0 <__assert_fail@plt+0x31b5c>
   42fe8:	ldr	r0, [sp]
   42fec:	str	r0, [sp, #4]
   42ff0:	ldr	r0, [sp, #4]
   42ff4:	add	sp, sp, #8
   42ff8:	bx	lr
   42ffc:	sub	sp, sp, #8
   43000:	str	r0, [sp]
   43004:	ldr	r0, [sp]
   43008:	sub	r0, r0, #97	; 0x61
   4300c:	cmp	r0, #25
   43010:	bhi	4302c <__assert_fail@plt+0x31b98>
   43014:	b	43018 <__assert_fail@plt+0x31b84>
   43018:	ldr	r0, [sp]
   4301c:	sub	r0, r0, #97	; 0x61
   43020:	add	r0, r0, #65	; 0x41
   43024:	str	r0, [sp, #4]
   43028:	b	43034 <__assert_fail@plt+0x31ba0>
   4302c:	ldr	r0, [sp]
   43030:	str	r0, [sp, #4]
   43034:	ldr	r0, [sp, #4]
   43038:	add	sp, sp, #8
   4303c:	bx	lr
   43040:	push	{r4, r5, fp, lr}
   43044:	add	fp, sp, #8
   43048:	sub	sp, sp, #272	; 0x110
   4304c:	add	r1, sp, #7
   43050:	str	r0, [fp, #-16]
   43054:	ldr	r0, [fp, #-16]
   43058:	movw	r2, #257	; 0x101
   4305c:	bl	430dc <__assert_fail@plt+0x31c48>
   43060:	cmp	r0, #0
   43064:	beq	43078 <__assert_fail@plt+0x31be4>
   43068:	movw	r0, #0
   4306c:	and	r0, r0, #1
   43070:	strb	r0, [fp, #-9]
   43074:	b	430cc <__assert_fail@plt+0x31c38>
   43078:	add	r0, sp, #7
   4307c:	movw	r1, #23244	; 0x5acc
   43080:	movt	r1, #4
   43084:	bl	111d0 <strcmp@plt>
   43088:	cmp	r0, #0
   4308c:	movw	r0, #1
   43090:	str	r0, [sp]
   43094:	beq	430b8 <__assert_fail@plt+0x31c24>
   43098:	add	r0, sp, #7
   4309c:	movw	r1, #23246	; 0x5ace
   430a0:	movt	r1, #4
   430a4:	bl	111d0 <strcmp@plt>
   430a8:	cmp	r0, #0
   430ac:	movw	r0, #0
   430b0:	moveq	r0, #1
   430b4:	str	r0, [sp]
   430b8:	ldr	r0, [sp]
   430bc:	mvn	r1, #0
   430c0:	eor	r0, r0, r1
   430c4:	and	r0, r0, #1
   430c8:	strb	r0, [fp, #-9]
   430cc:	ldrb	r0, [fp, #-9]
   430d0:	and	r0, r0, #1
   430d4:	sub	sp, fp, #8
   430d8:	pop	{r4, r5, fp, pc}
   430dc:	push	{fp, lr}
   430e0:	mov	fp, sp
   430e4:	sub	sp, sp, #16
   430e8:	str	r0, [fp, #-4]
   430ec:	str	r1, [sp, #8]
   430f0:	str	r2, [sp, #4]
   430f4:	ldr	r0, [fp, #-4]
   430f8:	ldr	r1, [sp, #8]
   430fc:	ldr	r2, [sp, #4]
   43100:	bl	4310c <__assert_fail@plt+0x31c78>
   43104:	mov	sp, fp
   43108:	pop	{fp, pc}
   4310c:	push	{fp, lr}
   43110:	mov	fp, sp
   43114:	sub	sp, sp, #24
   43118:	str	r0, [fp, #-8]
   4311c:	str	r1, [sp, #12]
   43120:	str	r2, [sp, #8]
   43124:	ldr	r0, [fp, #-8]
   43128:	bl	4320c <__assert_fail@plt+0x31d78>
   4312c:	str	r0, [sp, #4]
   43130:	ldr	r0, [sp, #4]
   43134:	movw	r1, #0
   43138:	cmp	r0, r1
   4313c:	bne	43164 <__assert_fail@plt+0x31cd0>
   43140:	ldr	r0, [sp, #8]
   43144:	cmp	r0, #0
   43148:	bls	43158 <__assert_fail@plt+0x31cc4>
   4314c:	ldr	r0, [sp, #12]
   43150:	movw	r1, #0
   43154:	strb	r1, [r0]
   43158:	movw	r0, #22
   4315c:	str	r0, [fp, #-4]
   43160:	b	431e0 <__assert_fail@plt+0x31d4c>
   43164:	ldr	r0, [sp, #4]
   43168:	bl	1138c <strlen@plt>
   4316c:	str	r0, [sp]
   43170:	ldr	r0, [sp]
   43174:	ldr	r1, [sp, #8]
   43178:	cmp	r0, r1
   4317c:	bcs	431a0 <__assert_fail@plt+0x31d0c>
   43180:	ldr	r0, [sp, #12]
   43184:	ldr	r1, [sp, #4]
   43188:	ldr	r2, [sp]
   4318c:	add	r2, r2, #1
   43190:	bl	11248 <memcpy@plt>
   43194:	movw	r0, #0
   43198:	str	r0, [fp, #-4]
   4319c:	b	431e0 <__assert_fail@plt+0x31d4c>
   431a0:	ldr	r0, [sp, #8]
   431a4:	cmp	r0, #0
   431a8:	bls	431d8 <__assert_fail@plt+0x31d44>
   431ac:	ldr	r0, [sp, #12]
   431b0:	ldr	r1, [sp, #4]
   431b4:	ldr	r2, [sp, #8]
   431b8:	sub	r2, r2, #1
   431bc:	bl	11248 <memcpy@plt>
   431c0:	ldr	r0, [sp, #12]
   431c4:	ldr	r1, [sp, #8]
   431c8:	sub	r1, r1, #1
   431cc:	add	r0, r0, r1
   431d0:	movw	r1, #0
   431d4:	strb	r1, [r0]
   431d8:	movw	r0, #34	; 0x22
   431dc:	str	r0, [fp, #-4]
   431e0:	ldr	r0, [fp, #-4]
   431e4:	mov	sp, fp
   431e8:	pop	{fp, pc}
   431ec:	push	{fp, lr}
   431f0:	mov	fp, sp
   431f4:	sub	sp, sp, #8
   431f8:	str	r0, [sp, #4]
   431fc:	ldr	r0, [sp, #4]
   43200:	bl	4320c <__assert_fail@plt+0x31d78>
   43204:	mov	sp, fp
   43208:	pop	{fp, pc}
   4320c:	push	{fp, lr}
   43210:	mov	fp, sp
   43214:	sub	sp, sp, #8
   43218:	str	r0, [sp, #4]
   4321c:	ldr	r0, [sp, #4]
   43220:	movw	r1, #0
   43224:	bl	1141c <setlocale@plt>
   43228:	str	r0, [sp]
   4322c:	ldr	r0, [sp]
   43230:	mov	sp, fp
   43234:	pop	{fp, pc}
   43238:	cmp	r3, #0
   4323c:	cmpeq	r2, #0
   43240:	bne	43264 <__assert_fail@plt+0x31dd0>
   43244:	cmp	r1, #0
   43248:	movlt	r1, #-2147483648	; 0x80000000
   4324c:	movlt	r0, #0
   43250:	blt	43260 <__assert_fail@plt+0x31dcc>
   43254:	cmpeq	r0, #0
   43258:	mvnne	r1, #-2147483648	; 0x80000000
   4325c:	mvnne	r0, #0
   43260:	b	43348 <__assert_fail@plt+0x31eb4>
   43264:	sub	sp, sp, #8
   43268:	push	{sp, lr}
   4326c:	cmp	r1, #0
   43270:	blt	43290 <__assert_fail@plt+0x31dfc>
   43274:	cmp	r3, #0
   43278:	blt	432c4 <__assert_fail@plt+0x31e30>
   4327c:	bl	43358 <__assert_fail@plt+0x31ec4>
   43280:	ldr	lr, [sp, #4]
   43284:	add	sp, sp, #8
   43288:	pop	{r2, r3}
   4328c:	bx	lr
   43290:	rsbs	r0, r0, #0
   43294:	sbc	r1, r1, r1, lsl #1
   43298:	cmp	r3, #0
   4329c:	blt	432e8 <__assert_fail@plt+0x31e54>
   432a0:	bl	43358 <__assert_fail@plt+0x31ec4>
   432a4:	ldr	lr, [sp, #4]
   432a8:	add	sp, sp, #8
   432ac:	pop	{r2, r3}
   432b0:	rsbs	r0, r0, #0
   432b4:	sbc	r1, r1, r1, lsl #1
   432b8:	rsbs	r2, r2, #0
   432bc:	sbc	r3, r3, r3, lsl #1
   432c0:	bx	lr
   432c4:	rsbs	r2, r2, #0
   432c8:	sbc	r3, r3, r3, lsl #1
   432cc:	bl	43358 <__assert_fail@plt+0x31ec4>
   432d0:	ldr	lr, [sp, #4]
   432d4:	add	sp, sp, #8
   432d8:	pop	{r2, r3}
   432dc:	rsbs	r0, r0, #0
   432e0:	sbc	r1, r1, r1, lsl #1
   432e4:	bx	lr
   432e8:	rsbs	r2, r2, #0
   432ec:	sbc	r3, r3, r3, lsl #1
   432f0:	bl	43358 <__assert_fail@plt+0x31ec4>
   432f4:	ldr	lr, [sp, #4]
   432f8:	add	sp, sp, #8
   432fc:	pop	{r2, r3}
   43300:	rsbs	r2, r2, #0
   43304:	sbc	r3, r3, r3, lsl #1
   43308:	bx	lr
   4330c:	cmp	r3, #0
   43310:	cmpeq	r2, #0
   43314:	bne	4332c <__assert_fail@plt+0x31e98>
   43318:	cmp	r1, #0
   4331c:	cmpeq	r0, #0
   43320:	mvnne	r1, #0
   43324:	mvnne	r0, #0
   43328:	b	43348 <__assert_fail@plt+0x31eb4>
   4332c:	sub	sp, sp, #8
   43330:	push	{sp, lr}
   43334:	bl	43358 <__assert_fail@plt+0x31ec4>
   43338:	ldr	lr, [sp, #4]
   4333c:	add	sp, sp, #8
   43340:	pop	{r2, r3}
   43344:	bx	lr
   43348:	push	{r1, lr}
   4334c:	mov	r0, #8
   43350:	bl	111ac <raise@plt>
   43354:	pop	{r1, pc}
   43358:	cmp	r1, r3
   4335c:	cmpeq	r0, r2
   43360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43364:	mov	r4, r0
   43368:	movcc	r0, #0
   4336c:	mov	r5, r1
   43370:	ldr	lr, [sp, #36]	; 0x24
   43374:	movcc	r1, r0
   43378:	bcc	43474 <__assert_fail@plt+0x31fe0>
   4337c:	cmp	r3, #0
   43380:	clzeq	ip, r2
   43384:	clzne	ip, r3
   43388:	addeq	ip, ip, #32
   4338c:	cmp	r5, #0
   43390:	clzeq	r1, r4
   43394:	addeq	r1, r1, #32
   43398:	clzne	r1, r5
   4339c:	sub	ip, ip, r1
   433a0:	sub	sl, ip, #32
   433a4:	lsl	r9, r3, ip
   433a8:	rsb	fp, ip, #32
   433ac:	orr	r9, r9, r2, lsl sl
   433b0:	orr	r9, r9, r2, lsr fp
   433b4:	lsl	r8, r2, ip
   433b8:	cmp	r5, r9
   433bc:	cmpeq	r4, r8
   433c0:	movcc	r0, #0
   433c4:	movcc	r1, r0
   433c8:	bcc	433e4 <__assert_fail@plt+0x31f50>
   433cc:	mov	r0, #1
   433d0:	subs	r4, r4, r8
   433d4:	lsl	r1, r0, sl
   433d8:	orr	r1, r1, r0, lsr fp
   433dc:	lsl	r0, r0, ip
   433e0:	sbc	r5, r5, r9
   433e4:	cmp	ip, #0
   433e8:	beq	43474 <__assert_fail@plt+0x31fe0>
   433ec:	lsr	r6, r8, #1
   433f0:	orr	r6, r6, r9, lsl #31
   433f4:	lsr	r7, r9, #1
   433f8:	mov	r2, ip
   433fc:	b	43420 <__assert_fail@plt+0x31f8c>
   43400:	subs	r3, r4, r6
   43404:	sbc	r8, r5, r7
   43408:	adds	r3, r3, r3
   4340c:	adc	r8, r8, r8
   43410:	adds	r4, r3, #1
   43414:	adc	r5, r8, #0
   43418:	subs	r2, r2, #1
   4341c:	beq	4343c <__assert_fail@plt+0x31fa8>
   43420:	cmp	r5, r7
   43424:	cmpeq	r4, r6
   43428:	bcs	43400 <__assert_fail@plt+0x31f6c>
   4342c:	adds	r4, r4, r4
   43430:	adc	r5, r5, r5
   43434:	subs	r2, r2, #1
   43438:	bne	43420 <__assert_fail@plt+0x31f8c>
   4343c:	lsr	r3, r4, ip
   43440:	orr	r3, r3, r5, lsl fp
   43444:	lsr	r2, r5, ip
   43448:	orr	r3, r3, r5, lsr sl
   4344c:	adds	r0, r0, r4
   43450:	mov	r4, r3
   43454:	lsl	r3, r2, ip
   43458:	orr	r3, r3, r4, lsl sl
   4345c:	lsl	ip, r4, ip
   43460:	orr	r3, r3, r4, lsr fp
   43464:	adc	r1, r1, r5
   43468:	subs	r0, r0, ip
   4346c:	mov	r5, r2
   43470:	sbc	r1, r1, r3
   43474:	cmp	lr, #0
   43478:	strdne	r4, [lr]
   4347c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43480:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   43484:	mov	r7, r0
   43488:	ldr	r6, [pc, #72]	; 434d8 <__assert_fail@plt+0x32044>
   4348c:	ldr	r5, [pc, #72]	; 434dc <__assert_fail@plt+0x32048>
   43490:	add	r6, pc, r6
   43494:	add	r5, pc, r5
   43498:	sub	r6, r6, r5
   4349c:	mov	r8, r1
   434a0:	mov	r9, r2
   434a4:	bl	1115c <pthread_mutex_unlock@plt-0x20>
   434a8:	asrs	r6, r6, #2
   434ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   434b0:	mov	r4, #0
   434b4:	add	r4, r4, #1
   434b8:	ldr	r3, [r5], #4
   434bc:	mov	r2, r9
   434c0:	mov	r1, r8
   434c4:	mov	r0, r7
   434c8:	blx	r3
   434cc:	cmp	r6, r4
   434d0:	bne	434b4 <__assert_fail@plt+0x32020>
   434d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   434d8:	andeq	r2, r1, r4, ror sl
   434dc:	andeq	r2, r1, ip, ror #20
   434e0:	bx	lr
   434e4:	ldr	r3, [pc, #12]	; 434f8 <__assert_fail@plt+0x32064>
   434e8:	mov	r1, #0
   434ec:	add	r3, pc, r3
   434f0:	ldr	r2, [r3]
   434f4:	b	113c8 <__cxa_atexit@plt>
   434f8:	andeq	r2, r1, ip, lsr #24

Disassembly of section .fini:

000434fc <.fini>:
   434fc:	push	{r3, lr}
   43500:	pop	{r3, pc}
