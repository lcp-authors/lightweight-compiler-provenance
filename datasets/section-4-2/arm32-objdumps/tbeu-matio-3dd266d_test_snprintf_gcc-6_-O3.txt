
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010424 <.init>:
   10424:	push	{r3, lr}
   10428:	bl	109ac <abort@plt+0x4fc>
   1042c:	pop	{r3, pc}

Disassembly of section .plt:

00010430 <strcmp@plt-0x14>:
   10430:	push	{lr}		; (str lr, [sp, #-4]!)
   10434:	ldr	lr, [pc, #4]	; 10440 <strcmp@plt-0x4>
   10438:	add	lr, pc, lr
   1043c:	ldr	pc, [lr, #8]!
   10440:	andeq	r0, r1, r0, asr #23

00010444 <strcmp@plt>:
   10444:	add	ip, pc, #0, 12
   10448:	add	ip, ip, #16, 20	; 0x10000
   1044c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010450 <printf@plt>:
   10450:	add	ip, pc, #0, 12
   10454:	add	ip, ip, #16, 20	; 0x10000
   10458:	ldr	pc, [ip, #3000]!	; 0xbb8

0001045c <memcpy@plt>:
   1045c:	add	ip, pc, #0, 12
   10460:	add	ip, ip, #16, 20	; 0x10000
   10464:	ldr	pc, [ip, #2992]!	; 0xbb0

00010468 <pow@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #16, 20	; 0x10000
   10470:	ldr	pc, [ip, #2984]!	; 0xba8

00010474 <puts@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2976]!	; 0xba0

00010480 <__libc_start_main@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2968]!	; 0xb98

0001048c <__gmon_start__@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2960]!	; 0xb90

00010498 <snprintf@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2952]!	; 0xb88

000104a4 <sprintf@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2944]!	; 0xb80

000104b0 <abort@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000104c0 <.text>:
   104c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   104c4:	vpush	{d8-d10}
   104c8:	ldr	r4, [pc, #1152]	; 10950 <abort@plt+0x4a0>
   104cc:	sub	sp, sp, #2384	; 0x950
   104d0:	ldm	r4!, {r0, r1, r2, r3}
   104d4:	sub	sp, sp, #4
   104d8:	add	ip, sp, #160	; 0xa0
   104dc:	add	r6, sp, #48	; 0x30
   104e0:	stmia	ip!, {r0, r1, r2, r3}
   104e4:	ldm	r4!, {r0, r1, r2, r3}
   104e8:	stmia	ip!, {r0, r1, r2, r3}
   104ec:	ldm	r4!, {r0, r1, r2, r3}
   104f0:	stmia	ip!, {r0, r1, r2, r3}
   104f4:	add	r5, r4, #128	; 0x80
   104f8:	ldm	r4, {r0, r1, r2, r3}
   104fc:	add	r7, r4, #172	; 0xac
   10500:	stm	ip, {r0, r1, r2, r3}
   10504:	add	r1, r4, #16
   10508:	mov	r2, #112	; 0x70
   1050c:	add	r0, sp, #224	; 0xe0
   10510:	bl	1045c <memcpy@plt>
   10514:	ldm	r5!, {r0, r1, r2, r3}
   10518:	add	ip, sp, #72	; 0x48
   1051c:	str	ip, [sp, #12]
   10520:	add	lr, r4, #196	; 0xc4
   10524:	stmia	ip!, {r0, r1, r2, r3}
   10528:	add	r4, r4, #240	; 0xf0
   1052c:	ldm	r5!, {r0, r1, r2, r3}
   10530:	stmia	ip!, {r0, r1, r2, r3}
   10534:	add	r3, sp, #116	; 0x74
   10538:	ldm	r5, {r0, r1, r2}
   1053c:	add	r5, sp, #28
   10540:	str	r3, [sp, #20]
   10544:	stm	ip, {r0, r1, r2}
   10548:	ldm	r7!, {r0, r1, r2, r3}
   1054c:	ldr	ip, [sp, #20]
   10550:	stmia	r6!, {r0, r1, r2, r3}
   10554:	ldm	r7, {r0, r1}
   10558:	stm	r6, {r0, r1}
   1055c:	ldm	lr!, {r0, r1, r2, r3}
   10560:	stmia	ip!, {r0, r1, r2, r3}
   10564:	ldm	lr!, {r0, r1, r2, r3}
   10568:	stmia	ip!, {r0, r1, r2, r3}
   1056c:	ldm	lr, {r0, r1, r2}
   10570:	stm	ip, {r0, r1, r2}
   10574:	ldm	r4!, {r0, r1, r2, r3}
   10578:	ldr	ip, [r4]
   1057c:	stmia	r5!, {r0, r1, r2, r3}
   10580:	ldr	r0, [pc, #972]	; 10954 <abort@plt+0x4a4>
   10584:	str	ip, [r5]
   10588:	bl	10474 <puts@plt>
   1058c:	ldr	r4, [sp, #160]	; 0xa0
   10590:	cmp	r4, #0
   10594:	beq	10924 <abort@plt+0x474>
   10598:	vldr	d10, [sp, #224]	; 0xe0
   1059c:	vldr	d9, [pc, #916]	; 10938 <abort@plt+0x488>
   105a0:	mov	fp, #0
   105a4:	mov	sl, fp
   105a8:	add	r5, sp, #336	; 0x150
   105ac:	add	r9, sp, #1360	; 0x550
   105b0:	add	r3, sp, #160	; 0xa0
   105b4:	str	r3, [sp, #8]
   105b8:	vcmp.f64	d10, d9
   105bc:	vmrs	APSR_nzcv, fpscr
   105c0:	vmovne.f64	d8, d10
   105c4:	addne	r8, sp, #232	; 0xe8
   105c8:	bne	10600 <abort@plt+0x150>
   105cc:	b	10674 <abort@plt+0x1c4>
   105d0:	cmp	r7, r6
   105d4:	mov	r3, r4
   105d8:	mov	r2, r6
   105dc:	mov	r1, r7
   105e0:	ldr	r0, [pc, #880]	; 10958 <abort@plt+0x4a8>
   105e4:	beq	105f0 <abort@plt+0x140>
   105e8:	bl	10450 <printf@plt>
   105ec:	add	sl, sl, #1
   105f0:	vldmia	r8!, {d8}
   105f4:	vcmp.f64	d8, d9
   105f8:	vmrs	APSR_nzcv, fpscr
   105fc:	beq	10674 <abort@plt+0x1c4>
   10600:	mov	r1, #0
   10604:	mov	r2, r4
   10608:	mov	r0, r1
   1060c:	vstr	d8, [sp]
   10610:	bl	10498 <snprintf@plt>
   10614:	mov	r2, r4
   10618:	mov	r1, #1024	; 0x400
   1061c:	vstr	d8, [sp]
   10620:	add	fp, fp, #1
   10624:	mov	r7, r0
   10628:	mov	r0, r5
   1062c:	bl	10498 <snprintf@plt>
   10630:	vmov	r2, r3, d8
   10634:	mov	r1, r4
   10638:	mov	r6, r0
   1063c:	mov	r0, r9
   10640:	bl	104a4 <sprintf@plt>
   10644:	mov	r1, r9
   10648:	mov	r0, r5
   1064c:	bl	10444 <strcmp@plt>
   10650:	cmp	r0, #0
   10654:	beq	105d0 <abort@plt+0x120>
   10658:	mov	r3, r9
   1065c:	mov	r2, r5
   10660:	mov	r1, r4
   10664:	ldr	r0, [pc, #752]	; 1095c <abort@plt+0x4ac>
   10668:	bl	10450 <printf@plt>
   1066c:	add	sl, sl, #1
   10670:	b	105d0 <abort@plt+0x120>
   10674:	ldr	r3, [sp, #8]
   10678:	ldr	r4, [r3, #4]!
   1067c:	cmp	r4, #0
   10680:	str	r3, [sp, #8]
   10684:	bne	105b8 <abort@plt+0x108>
   10688:	ldr	r6, [sp, #72]	; 0x48
   1068c:	cmp	r6, #0
   10690:	beq	10780 <abort@plt+0x2d0>
   10694:	ldr	r3, [sp, #48]	; 0x30
   10698:	str	sl, [sp, #8]
   1069c:	str	r3, [sp, #16]
   106a0:	ldr	r3, [sp, #16]
   106a4:	cmp	r3, #0
   106a8:	movne	r4, r3
   106ac:	addne	sl, sp, #52	; 0x34
   106b0:	bne	106ec <abort@plt+0x23c>
   106b4:	b	10768 <abort@plt+0x2b8>
   106b8:	cmp	r8, r7
   106bc:	mov	r3, r6
   106c0:	mov	r2, r7
   106c4:	mov	r1, r8
   106c8:	ldr	r0, [pc, #648]	; 10958 <abort@plt+0x4a8>
   106cc:	beq	106e0 <abort@plt+0x230>
   106d0:	bl	10450 <printf@plt>
   106d4:	ldr	r3, [sp, #8]
   106d8:	add	r3, r3, #1
   106dc:	str	r3, [sp, #8]
   106e0:	ldr	r4, [sl], #4
   106e4:	cmp	r4, #0
   106e8:	beq	10768 <abort@plt+0x2b8>
   106ec:	mov	r1, #0
   106f0:	mov	r3, r4
   106f4:	mov	r2, r6
   106f8:	mov	r0, r1
   106fc:	bl	10498 <snprintf@plt>
   10700:	mov	r3, r4
   10704:	mov	r2, r6
   10708:	mov	r1, #1024	; 0x400
   1070c:	add	fp, fp, #1
   10710:	mov	r8, r0
   10714:	mov	r0, r5
   10718:	bl	10498 <snprintf@plt>
   1071c:	mov	r2, r4
   10720:	mov	r1, r6
   10724:	mov	r7, r0
   10728:	mov	r0, r9
   1072c:	bl	104a4 <sprintf@plt>
   10730:	mov	r1, r9
   10734:	mov	r0, r5
   10738:	bl	10444 <strcmp@plt>
   1073c:	cmp	r0, #0
   10740:	beq	106b8 <abort@plt+0x208>
   10744:	mov	r3, r9
   10748:	mov	r2, r5
   1074c:	mov	r1, r6
   10750:	ldr	r0, [pc, #516]	; 1095c <abort@plt+0x4ac>
   10754:	bl	10450 <printf@plt>
   10758:	ldr	r3, [sp, #8]
   1075c:	add	r3, r3, #1
   10760:	str	r3, [sp, #8]
   10764:	b	106b8 <abort@plt+0x208>
   10768:	ldr	r3, [sp, #12]
   1076c:	ldr	r6, [r3, #4]!
   10770:	cmp	r6, #0
   10774:	str	r3, [sp, #12]
   10778:	bne	106a0 <abort@plt+0x1f0>
   1077c:	ldr	sl, [sp, #8]
   10780:	ldr	r6, [sp, #116]	; 0x74
   10784:	cmp	r6, #0
   10788:	beq	10858 <abort@plt+0x3a8>
   1078c:	ldr	r3, [sp, #20]
   10790:	str	sl, [sp, #8]
   10794:	str	r3, [sp, #12]
   10798:	ldr	r3, [sp, #28]
   1079c:	str	r3, [sp, #16]
   107a0:	ldr	r3, [sp, #16]
   107a4:	cmp	r3, #0
   107a8:	movne	r4, r3
   107ac:	addne	sl, sp, #32
   107b0:	beq	10840 <abort@plt+0x390>
   107b4:	mov	r1, #0
   107b8:	mov	r3, r4
   107bc:	mov	r2, r6
   107c0:	mov	r0, r1
   107c4:	bl	10498 <snprintf@plt>
   107c8:	mov	r3, r4
   107cc:	mov	r2, r6
   107d0:	mov	r1, #1024	; 0x400
   107d4:	add	fp, fp, #1
   107d8:	mov	r8, r0
   107dc:	mov	r0, r5
   107e0:	bl	10498 <snprintf@plt>
   107e4:	mov	r2, r4
   107e8:	mov	r1, r6
   107ec:	mov	r7, r0
   107f0:	mov	r0, r9
   107f4:	bl	104a4 <sprintf@plt>
   107f8:	mov	r1, r9
   107fc:	mov	r0, r5
   10800:	bl	10444 <strcmp@plt>
   10804:	cmp	r0, #0
   10808:	bne	10900 <abort@plt+0x450>
   1080c:	cmp	r8, r7
   10810:	mov	r3, r6
   10814:	mov	r2, r7
   10818:	mov	r1, r8
   1081c:	ldr	r0, [pc, #308]	; 10958 <abort@plt+0x4a8>
   10820:	beq	10834 <abort@plt+0x384>
   10824:	bl	10450 <printf@plt>
   10828:	ldr	r3, [sp, #8]
   1082c:	add	r3, r3, #1
   10830:	str	r3, [sp, #8]
   10834:	ldr	r4, [sl], #4
   10838:	cmp	r4, #0
   1083c:	bne	107b4 <abort@plt+0x304>
   10840:	ldr	r3, [sp, #12]
   10844:	ldr	r6, [r3, #4]!
   10848:	cmp	r6, #0
   1084c:	str	r3, [sp, #12]
   10850:	bne	107a0 <abort@plt+0x2f0>
   10854:	ldr	sl, [sp, #8]
   10858:	mov	r2, fp
   1085c:	mov	r1, sl
   10860:	ldr	r0, [pc, #248]	; 10960 <abort@plt+0x4b0>
   10864:	bl	10450 <printf@plt>
   10868:	ldr	r0, [pc, #244]	; 10964 <abort@plt+0x4b4>
   1086c:	bl	10474 <puts@plt>
   10870:	vldr	d10, [pc, #200]	; 10940 <abort@plt+0x490>
   10874:	vldr	d9, [pc, #204]	; 10948 <abort@plt+0x498>
   10878:	ldr	r6, [pc, #232]	; 10968 <abort@plt+0x4b8>
   1087c:	mov	r4, #0
   10880:	mov	r7, #1024	; 0x400
   10884:	b	10894 <abort@plt+0x3e4>
   10888:	add	r4, r4, #1
   1088c:	cmp	r4, #100	; 0x64
   10890:	beq	108ec <abort@plt+0x43c>
   10894:	vmov	s15, r4
   10898:	vmov.f64	d0, d10
   1089c:	vcvt.f64.s32	d1, s15
   108a0:	bl	10468 <pow@plt>
   108a4:	mov	r2, r6
   108a8:	mov	r1, r7
   108ac:	mov	r0, r5
   108b0:	vmul.f64	d8, d0, d9
   108b4:	vstr	d8, [sp]
   108b8:	bl	10498 <snprintf@plt>
   108bc:	vmov	r2, r3, d8
   108c0:	mov	r1, r6
   108c4:	mov	r0, r9
   108c8:	bl	104a4 <sprintf@plt>
   108cc:	mov	r1, r9
   108d0:	mov	r0, r5
   108d4:	bl	10444 <strcmp@plt>
   108d8:	cmp	r0, #0
   108dc:	beq	10888 <abort@plt+0x3d8>
   108e0:	sub	r1, r4, #1
   108e4:	ldr	r0, [pc, #128]	; 1096c <abort@plt+0x4bc>
   108e8:	bl	10450 <printf@plt>
   108ec:	mov	r0, #0
   108f0:	add	sp, sp, #2384	; 0x950
   108f4:	add	sp, sp, #4
   108f8:	vpop	{d8-d10}
   108fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10900:	mov	r3, r9
   10904:	mov	r2, r5
   10908:	mov	r1, r6
   1090c:	ldr	r0, [pc, #72]	; 1095c <abort@plt+0x4ac>
   10910:	bl	10450 <printf@plt>
   10914:	ldr	r3, [sp, #8]
   10918:	add	r3, r3, #1
   1091c:	str	r3, [sp, #8]
   10920:	b	1080c <abort@plt+0x35c>
   10924:	mov	fp, r4
   10928:	mov	sl, r4
   1092c:	add	r5, sp, #336	; 0x150
   10930:	add	r9, sp, #1360	; 0x550
   10934:	b	10688 <abort@plt+0x1d8>
	...
   10944:	eormi	r0, r4, r0
   10948:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   1094c:	svccc	0x00bf9add
   10950:	andeq	r0, r1, r0, lsl fp
   10954:	andeq	r0, r1, r4, asr #24
   10958:	andeq	r0, r1, r4, asr #25
   1095c:	andeq	r0, r1, ip, ror ip
   10960:	andeq	r0, r1, r4, ror #25
   10964:	andeq	r0, r1, r0, lsl #26
   10968:	andeq	r0, r1, r4, lsr #26
   1096c:	andeq	r0, r1, ip, lsr #26
   10970:	mov	fp, #0
   10974:	mov	lr, #0
   10978:	pop	{r1}		; (ldr r1, [sp], #4)
   1097c:	mov	r2, sp
   10980:	push	{r2}		; (str r2, [sp, #-4]!)
   10984:	push	{r0}		; (str r0, [sp, #-4]!)
   10988:	ldr	ip, [pc, #16]	; 109a0 <abort@plt+0x4f0>
   1098c:	push	{ip}		; (str ip, [sp, #-4]!)
   10990:	ldr	r0, [pc, #12]	; 109a4 <abort@plt+0x4f4>
   10994:	ldr	r3, [pc, #12]	; 109a8 <abort@plt+0x4f8>
   10998:	bl	10480 <__libc_start_main@plt>
   1099c:	bl	104b0 <abort@plt>
   109a0:	strdeq	r0, [r1], -r8
   109a4:	andeq	r0, r1, r0, asr #9
   109a8:	muleq	r1, r8, sl
   109ac:	ldr	r3, [pc, #20]	; 109c8 <abort@plt+0x518>
   109b0:	ldr	r2, [pc, #20]	; 109cc <abort@plt+0x51c>
   109b4:	add	r3, pc, r3
   109b8:	ldr	r2, [r3, r2]
   109bc:	cmp	r2, #0
   109c0:	bxeq	lr
   109c4:	b	1048c <__gmon_start__@plt>
   109c8:	andeq	r0, r1, r4, asr #12
   109cc:	andeq	r0, r0, r4, lsr r0
   109d0:	ldr	r3, [pc, #28]	; 109f4 <abort@plt+0x544>
   109d4:	ldr	r0, [pc, #28]	; 109f8 <abort@plt+0x548>
   109d8:	sub	r3, r3, r0
   109dc:	cmp	r3, #6
   109e0:	bxls	lr
   109e4:	ldr	r3, [pc, #16]	; 109fc <abort@plt+0x54c>
   109e8:	cmp	r3, #0
   109ec:	bxeq	lr
   109f0:	bx	r3
   109f4:	andeq	r1, r2, r3, asr #32
   109f8:	andeq	r1, r2, r0, asr #32
   109fc:	andeq	r0, r0, r0
   10a00:	ldr	r1, [pc, #36]	; 10a2c <abort@plt+0x57c>
   10a04:	ldr	r0, [pc, #36]	; 10a30 <abort@plt+0x580>
   10a08:	sub	r1, r1, r0
   10a0c:	asr	r1, r1, #2
   10a10:	add	r1, r1, r1, lsr #31
   10a14:	asrs	r1, r1, #1
   10a18:	bxeq	lr
   10a1c:	ldr	r3, [pc, #16]	; 10a34 <abort@plt+0x584>
   10a20:	cmp	r3, #0
   10a24:	bxeq	lr
   10a28:	bx	r3
   10a2c:	andeq	r1, r2, r0, asr #32
   10a30:	andeq	r1, r2, r0, asr #32
   10a34:	andeq	r0, r0, r0
   10a38:	push	{r4, lr}
   10a3c:	ldr	r4, [pc, #24]	; 10a5c <abort@plt+0x5ac>
   10a40:	ldrb	r3, [r4]
   10a44:	cmp	r3, #0
   10a48:	popne	{r4, pc}
   10a4c:	bl	109d0 <abort@plt+0x520>
   10a50:	mov	r3, #1
   10a54:	strb	r3, [r4]
   10a58:	pop	{r4, pc}
   10a5c:	andeq	r1, r2, r0, asr #32
   10a60:	ldr	r0, [pc, #40]	; 10a90 <abort@plt+0x5e0>
   10a64:	ldr	r3, [r0]
   10a68:	cmp	r3, #0
   10a6c:	bne	10a74 <abort@plt+0x5c4>
   10a70:	b	10a00 <abort@plt+0x550>
   10a74:	ldr	r3, [pc, #24]	; 10a94 <abort@plt+0x5e4>
   10a78:	cmp	r3, #0
   10a7c:	beq	10a70 <abort@plt+0x5c0>
   10a80:	push	{r4, lr}
   10a84:	blx	r3
   10a88:	pop	{r4, lr}
   10a8c:	b	10a00 <abort@plt+0x550>
   10a90:	andeq	r0, r2, ip, lsl #30
   10a94:	andeq	r0, r0, r0
   10a98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a9c:	mov	r7, r0
   10aa0:	ldr	r6, [pc, #72]	; 10af0 <abort@plt+0x640>
   10aa4:	ldr	r5, [pc, #72]	; 10af4 <abort@plt+0x644>
   10aa8:	add	r6, pc, r6
   10aac:	add	r5, pc, r5
   10ab0:	sub	r6, r6, r5
   10ab4:	mov	r8, r1
   10ab8:	mov	r9, r2
   10abc:	bl	10424 <strcmp@plt-0x20>
   10ac0:	asrs	r6, r6, #2
   10ac4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ac8:	mov	r4, #0
   10acc:	add	r4, r4, #1
   10ad0:	ldr	r3, [r5], #4
   10ad4:	mov	r2, r9
   10ad8:	mov	r1, r8
   10adc:	mov	r0, r7
   10ae0:	blx	r3
   10ae4:	cmp	r6, r4
   10ae8:	bne	10acc <abort@plt+0x61c>
   10aec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10af0:	andeq	r0, r1, r8, asr r4
   10af4:	andeq	r0, r1, r0, asr r4
   10af8:	bx	lr

Disassembly of section .fini:

00010afc <.fini>:
   10afc:	push	{r3, lr}
   10b00:	pop	{r3, pc}
