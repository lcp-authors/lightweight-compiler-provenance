
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

00000420 <_init>:
 420:	push	{r3, lr}
 424:	bl	47c <call_weak_fn>
 428:	pop	{r3, pc}

Disassembly of section .plt:

0000042c <.plt>:
 42c:	push	{lr}		; (str lr, [sp, #-4]!)
 430:	ldr	lr, [pc, #4]	; 43c <.plt+0x10>
 434:	add	lr, pc, lr
 438:	ldr	pc, [lr, #8]!
 43c:	.word	0x00010bc4

00000440 <cflag_add@plt>:
 440:	add	ip, pc, #0, 12
 444:	add	ip, ip, #16, 20	; 0x10000
 448:	ldr	pc, [ip, #3012]!	; 0xbc4

0000044c <__cxa_finalize@plt>:
 44c:	add	ip, pc, #0, 12
 450:	add	ip, ip, #16, 20	; 0x10000
 454:	ldr	pc, [ip, #3004]!	; 0xbbc

00000458 <__gmon_start__@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2996]!	; 0xbb4

00000464 <rb_strlcpy@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2988]!	; 0xbac

00000470 <cflag_orphan@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2980]!	; 0xba4

Disassembly of section .text:

0000047c <call_weak_fn>:
 47c:	ldr	r3, [pc, #20]	; 498 <call_weak_fn+0x1c>
 480:	ldr	r2, [pc, #20]	; 49c <call_weak_fn+0x20>
 484:	add	r3, pc, r3
 488:	ldr	r2, [r3, r2]
 48c:	cmp	r2, #0
 490:	bxeq	lr
 494:	b	458 <__gmon_start__@plt>
 498:	.word	0x00010b74
 49c:	.word	0x0000002c

000004a0 <deregister_tm_clones>:
 4a0:	ldr	r3, [pc, #52]	; 4dc <deregister_tm_clones+0x3c>
 4a4:	ldr	r0, [pc, #52]	; 4e0 <deregister_tm_clones+0x40>
 4a8:	add	r3, pc, r3
 4ac:	add	r0, pc, r0
 4b0:	add	r3, r3, #3
 4b4:	sub	r3, r3, r0
 4b8:	cmp	r3, #6
 4bc:	ldr	r3, [pc, #32]	; 4e4 <deregister_tm_clones+0x44>
 4c0:	add	r3, pc, r3
 4c4:	bxls	lr
 4c8:	ldr	r2, [pc, #24]	; 4e8 <deregister_tm_clones+0x48>
 4cc:	ldr	r3, [r3, r2]
 4d0:	cmp	r3, #0
 4d4:	bxeq	lr
 4d8:	bx	r3
 4dc:	.word	0x00010bd0
 4e0:	.word	0x00010bcc
 4e4:	.word	0x00010b38
 4e8:	.word	0x00000024

000004ec <register_tm_clones>:
 4ec:	ldr	r1, [pc, #56]	; 52c <register_tm_clones+0x40>
 4f0:	ldr	r0, [pc, #56]	; 530 <register_tm_clones+0x44>
 4f4:	add	r1, pc, r1
 4f8:	add	r0, pc, r0
 4fc:	sub	r1, r1, r0
 500:	ldr	r3, [pc, #44]	; 534 <register_tm_clones+0x48>
 504:	asr	r1, r1, #2
 508:	add	r3, pc, r3
 50c:	add	r1, r1, r1, lsr #31
 510:	asrs	r1, r1, #1
 514:	bxeq	lr
 518:	ldr	r2, [pc, #24]	; 538 <register_tm_clones+0x4c>
 51c:	ldr	r3, [r3, r2]
 520:	cmp	r3, #0
 524:	bxeq	lr
 528:	bx	r3
 52c:	.word	0x00010b84
 530:	.word	0x00010b80
 534:	.word	0x00010af0
 538:	.word	0x00000038

0000053c <__do_global_dtors_aux>:
 53c:	ldr	r3, [pc, #76]	; 590 <__do_global_dtors_aux+0x54>
 540:	ldr	r2, [pc, #76]	; 594 <__do_global_dtors_aux+0x58>
 544:	add	r3, pc, r3
 548:	add	r2, pc, r2
 54c:	ldrb	r3, [r3]
 550:	cmp	r3, #0
 554:	bxne	lr
 558:	ldr	r3, [pc, #56]	; 598 <__do_global_dtors_aux+0x5c>
 55c:	push	{r4, lr}
 560:	ldr	r3, [r2, r3]
 564:	cmp	r3, #0
 568:	beq	578 <__do_global_dtors_aux+0x3c>
 56c:	ldr	r3, [pc, #40]	; 59c <__do_global_dtors_aux+0x60>
 570:	ldr	r0, [pc, r3]
 574:	bl	44c <__cxa_finalize@plt>
 578:	bl	4a0 <deregister_tm_clones>
 57c:	ldr	r3, [pc, #28]	; 5a0 <__do_global_dtors_aux+0x64>
 580:	mov	r2, #1
 584:	add	r3, pc, r3
 588:	strb	r2, [r3]
 58c:	pop	{r4, pc}
 590:	.word	0x00010b34
 594:	.word	0x00010ab0
 598:	.word	0x00000020
 59c:	.word	0x00010ac4
 5a0:	.word	0x00010af4

000005a4 <frame_dummy>:
 5a4:	ldr	r0, [pc, #56]	; 5e4 <frame_dummy+0x40>
 5a8:	ldr	r3, [pc, #56]	; 5e8 <frame_dummy+0x44>
 5ac:	add	r0, pc, r0
 5b0:	ldr	r2, [r0]
 5b4:	add	r3, pc, r3
 5b8:	cmp	r2, #0
 5bc:	bne	5c4 <frame_dummy+0x20>
 5c0:	b	4ec <register_tm_clones>
 5c4:	ldr	r2, [pc, #32]	; 5ec <frame_dummy+0x48>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	beq	5c0 <frame_dummy+0x1c>
 5d4:	push	{r4, lr}
 5d8:	blx	r3
 5dc:	pop	{r4, lr}
 5e0:	b	4ec <register_tm_clones>
 5e4:	.word	0x00010948
 5e8:	.word	0x00010a44
 5ec:	.word	0x00000034

000005f0 <chm_nocolour_process>:
 5f0:	push	{r4, r5, r6, lr}
 5f4:	ldr	r5, [pc, #480]	; 7dc <chm_nocolour_process+0x1ec>
 5f8:	add	r5, pc, r5
 5fc:	ldr	r3, [r0, #16]
 600:	cmp	r3, #0
 604:	popne	{r4, r5, r6, pc}
 608:	ldr	r3, [r0, #8]
 60c:	ldr	r2, [r3, #12]
 610:	ldr	r3, [pc, #456]	; 7e0 <chm_nocolour_process+0x1f0>
 614:	add	r3, pc, r3
 618:	ldr	r3, [r3, #512]	; 0x200
 61c:	tst	r2, r3
 620:	popeq	{r4, r5, r6, pc}
 624:	mov	r4, r0
 628:	ldr	r6, [pc, #436]	; 7e4 <chm_nocolour_process+0x1f4>
 62c:	add	r6, pc, r6
 630:	mov	r2, #512	; 0x200
 634:	ldr	r1, [r0, #12]
 638:	mov	r0, r6
 63c:	bl	464 <rb_strlcpy@plt>
 640:	ldrb	r3, [r6]
 644:	cmp	r3, #0
 648:	beq	7bc <chm_nocolour_process+0x1cc>
 64c:	mov	ip, #0
 650:	ldr	r1, [pc, #400]	; 7e8 <chm_nocolour_process+0x1f8>
 654:	add	r1, pc, r1
 658:	mov	r0, r1
 65c:	mov	lr, #32
 660:	b	718 <chm_nocolour_process+0x128>
 664:	ldr	r3, [pc, #384]	; 7ec <chm_nocolour_process+0x1fc>
 668:	ldr	r3, [r5, r3]
 66c:	ldrb	r2, [r1, #1]
 670:	ldr	r3, [r3, r2, lsl #2]
 674:	tst	r3, #16
 678:	beq	7a4 <chm_nocolour_process+0x1b4>
 67c:	ldr	r3, [pc, #360]	; 7ec <chm_nocolour_process+0x1fc>
 680:	ldr	r3, [r5, r3]
 684:	ldrb	r2, [r1, #2]
 688:	ldr	r3, [r3, r2, lsl #2]
 68c:	tst	r3, #16
 690:	addeq	r3, r1, #1
 694:	addne	r3, r1, #2
 698:	ldrb	r2, [r3, #1]
 69c:	cmp	r2, #44	; 0x2c
 6a0:	bne	704 <chm_nocolour_process+0x114>
 6a4:	ldr	r2, [pc, #320]	; 7ec <chm_nocolour_process+0x1fc>
 6a8:	ldr	r2, [r5, r2]
 6ac:	ldrb	r1, [r3, #2]
 6b0:	ldr	r2, [r2, r1, lsl #2]
 6b4:	tst	r2, #16
 6b8:	beq	7cc <chm_nocolour_process+0x1dc>
 6bc:	ldr	r2, [pc, #296]	; 7ec <chm_nocolour_process+0x1fc>
 6c0:	ldr	r2, [r5, r2]
 6c4:	ldrb	r1, [r3, #3]
 6c8:	ldr	r2, [r2, r1, lsl #2]
 6cc:	tst	r2, #16
 6d0:	addeq	r3, r3, #2
 6d4:	addne	r3, r3, #3
 6d8:	b	704 <chm_nocolour_process+0x114>
 6dc:	strb	lr, [r0]
 6e0:	add	r0, r0, #1
 6e4:	mov	r3, r1
 6e8:	b	704 <chm_nocolour_process+0x114>
 6ec:	add	ip, r0, #1
 6f0:	strb	r3, [r0]
 6f4:	mov	r0, ip
 6f8:	mov	r3, r1
 6fc:	b	704 <chm_nocolour_process+0x114>
 700:	mov	r3, r1
 704:	adds	r1, r3, #1
 708:	beq	7ac <chm_nocolour_process+0x1bc>
 70c:	ldrb	r3, [r3, #1]
 710:	cmp	r3, #0
 714:	beq	7ac <chm_nocolour_process+0x1bc>
 718:	sub	r2, r3, #2
 71c:	cmp	r2, #30
 720:	addls	pc, pc, r2, lsl #2
 724:	b	6ec <chm_nocolour_process+0xfc>
 728:	b	700 <chm_nocolour_process+0x110>
 72c:	b	664 <chm_nocolour_process+0x74>
 730:	b	700 <chm_nocolour_process+0x110>
 734:	b	6ec <chm_nocolour_process+0xfc>
 738:	b	700 <chm_nocolour_process+0x110>
 73c:	b	700 <chm_nocolour_process+0x110>
 740:	b	6ec <chm_nocolour_process+0xfc>
 744:	b	6ec <chm_nocolour_process+0xfc>
 748:	b	6ec <chm_nocolour_process+0xfc>
 74c:	b	6ec <chm_nocolour_process+0xfc>
 750:	b	6ec <chm_nocolour_process+0xfc>
 754:	b	6ec <chm_nocolour_process+0xfc>
 758:	b	6ec <chm_nocolour_process+0xfc>
 75c:	b	700 <chm_nocolour_process+0x110>
 760:	b	6ec <chm_nocolour_process+0xfc>
 764:	b	6ec <chm_nocolour_process+0xfc>
 768:	b	6ec <chm_nocolour_process+0xfc>
 76c:	b	6ec <chm_nocolour_process+0xfc>
 770:	b	6ec <chm_nocolour_process+0xfc>
 774:	b	6ec <chm_nocolour_process+0xfc>
 778:	b	700 <chm_nocolour_process+0x110>
 77c:	b	700 <chm_nocolour_process+0x110>
 780:	b	6ec <chm_nocolour_process+0xfc>
 784:	b	6ec <chm_nocolour_process+0xfc>
 788:	b	6ec <chm_nocolour_process+0xfc>
 78c:	b	700 <chm_nocolour_process+0x110>
 790:	b	6ec <chm_nocolour_process+0xfc>
 794:	b	700 <chm_nocolour_process+0x110>
 798:	b	6ec <chm_nocolour_process+0xfc>
 79c:	b	700 <chm_nocolour_process+0x110>
 7a0:	b	6dc <chm_nocolour_process+0xec>
 7a4:	mov	r3, r1
 7a8:	b	704 <chm_nocolour_process+0x114>
 7ac:	mov	r3, #0
 7b0:	strb	r3, [r0]
 7b4:	cmp	ip, r3
 7b8:	strbne	r3, [ip]
 7bc:	ldr	r3, [pc, #44]	; 7f0 <chm_nocolour_process+0x200>
 7c0:	add	r3, pc, r3
 7c4:	str	r3, [r4, #12]
 7c8:	pop	{r4, r5, r6, pc}
 7cc:	adds	r1, r3, #1
 7d0:	beq	7ac <chm_nocolour_process+0x1bc>
 7d4:	ldrb	r3, [r3, #1]
 7d8:	b	718 <chm_nocolour_process+0x128>
 7dc:	.word	0x00010a00
 7e0:	.word	0x00010a68
 7e4:	.word	0x00010a50
 7e8:	.word	0x00010a28
 7ec:	.word	0x00000030
 7f0:	.word	0x000108bc

000007f4 <_moddeinit>:
 7f4:	push	{r4, lr}
 7f8:	mov	r0, #99	; 0x63
 7fc:	bl	470 <cflag_orphan@plt>
 800:	pop	{r4, pc}

00000804 <_modinit>:
 804:	push	{lr}		; (str lr, [sp, #-4]!)
 808:	sub	sp, sp, #12
 80c:	ldr	r3, [pc, #56]	; 84c <_modinit+0x48>
 810:	add	r3, pc, r3
 814:	ldr	r2, [pc, #52]	; 850 <_modinit+0x4c>
 818:	ldr	r3, [r3, r2]
 81c:	str	r3, [sp, #4]
 820:	mov	r1, r3
 824:	mov	r0, #99	; 0x63
 828:	bl	440 <cflag_add@plt>
 82c:	ldr	r3, [pc, #32]	; 854 <_modinit+0x50>
 830:	add	r3, pc, r3
 834:	str	r0, [r3, #512]	; 0x200
 838:	cmp	r0, #0
 83c:	movne	r0, #0
 840:	mvneq	r0, #0
 844:	add	sp, sp, #12
 848:	pop	{pc}		; (ldr pc, [sp], #4)
 84c:	.word	0x000107e8
 850:	.word	0x00000028
 854:	.word	0x0001084c

Disassembly of section .fini:

00000858 <_fini>:
 858:	push	{r3, lr}
 85c:	pop	{r3, pc}
