
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010d70 <.init>:
   10d70:	push	{r3, lr}
   10d74:	bl	11034 <__mempcpy_chk@plt+0x4c>
   10d78:	pop	{r3, pc}

Disassembly of section .plt:

00010d7c <calloc@plt-0x14>:
   10d7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d80:	ldr	lr, [pc, #4]	; 10d8c <calloc@plt-0x4>
   10d84:	add	lr, pc, lr
   10d88:	ldr	pc, [lr, #8]!
   10d8c:	andeq	r7, r1, r4, ror r2

00010d90 <calloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #628]!	; 0x274

00010d9c <fputs_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #620]!	; 0x26c

00010da8 <raise@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #612]!	; 0x264

00010db4 <strcmp@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #604]!	; 0x25c

00010dc0 <fflush@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #596]!	; 0x254

00010dcc <memmove@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #588]!	; 0x24c

00010dd8 <free@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #580]!	; 0x244

00010de4 <faccessat@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #572]!	; 0x23c

00010df0 <_exit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #564]!	; 0x234

00010dfc <memcpy@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #556]!	; 0x22c

00010e08 <mbsinit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #548]!	; 0x224

00010e14 <memcmp@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #540]!	; 0x21c

00010e20 <dcgettext@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #532]!	; 0x214

00010e2c <realloc@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #524]!	; 0x20c

00010e38 <textdomain@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #516]!	; 0x204

00010e44 <rawmemchr@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e50 <iswprint@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #500]!	; 0x1f4

00010e5c <readlink@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #492]!	; 0x1ec

00010e68 <fwrite@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #484]!	; 0x1e4

00010e74 <lseek64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e80 <__ctype_get_mb_cur_max@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #468]!	; 0x1d4

00010e8c <__fpending@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #460]!	; 0x1cc

00010e98 <mbrtowc@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ea4 <error@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #444]!	; 0x1bc

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #436]!	; 0x1b4

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #94208	; 0x17000
   10ec4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #94208	; 0x17000
   10ed0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ed4 <__gmon_start__@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #94208	; 0x17000
   10edc:	ldr	pc, [ip, #412]!	; 0x19c

00010ee0 <getopt_long@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #94208	; 0x17000
   10ee8:	ldr	pc, [ip, #404]!	; 0x194

00010eec <__ctype_b_loc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #396]!	; 0x18c

00010ef8 <getcwd@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #388]!	; 0x184

00010f04 <exit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #380]!	; 0x17c

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #372]!	; 0x174

00010f1c <__errno_location@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #364]!	; 0x16c

00010f28 <__cxa_atexit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #356]!	; 0x164

00010f34 <memset@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #348]!	; 0x15c

00010f40 <__printf_chk@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #340]!	; 0x154

00010f4c <fileno@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #332]!	; 0x14c

00010f58 <__fprintf_chk@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #324]!	; 0x144

00010f64 <fclose@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #316]!	; 0x13c

00010f70 <fseeko64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #308]!	; 0x134

00010f7c <__overflow@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #300]!	; 0x12c

00010f88 <setlocale@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #292]!	; 0x124

00010f94 <strrchr@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #284]!	; 0x11c

00010fa0 <nl_langinfo@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #276]!	; 0x114

00010fac <bindtextdomain@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #268]!	; 0x10c

00010fb8 <__xstat64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #260]!	; 0x104

00010fc4 <strncmp@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #252]!	; 0xfc

00010fd0 <abort@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #244]!	; 0xf4

00010fdc <strspn@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #236]!	; 0xec

00010fe8 <__mempcpy_chk@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #228]!	; 0xe4

Disassembly of section .text:

00010ff8 <.text>:
   10ff8:	mov	fp, #0
   10ffc:	mov	lr, #0
   11000:	pop	{r1}		; (ldr r1, [sp], #4)
   11004:	mov	r2, sp
   11008:	push	{r2}		; (str r2, [sp, #-4]!)
   1100c:	push	{r0}		; (str r0, [sp, #-4]!)
   11010:	ldr	ip, [pc, #16]	; 11028 <__mempcpy_chk@plt+0x40>
   11014:	push	{ip}		; (str ip, [sp, #-4]!)
   11018:	ldr	r0, [pc, #12]	; 1102c <__mempcpy_chk@plt+0x44>
   1101c:	ldr	r3, [pc, #12]	; 11030 <__mempcpy_chk@plt+0x48>
   11020:	bl	10ebc <__libc_start_main@plt>
   11024:	bl	10fd0 <abort@plt>
   11028:	andeq	r6, r1, r8, lsl #13
   1102c:	andeq	r1, r1, r4, ror #6
   11030:	andeq	r6, r1, r8, lsr #12
   11034:	ldr	r3, [pc, #20]	; 11050 <__mempcpy_chk@plt+0x68>
   11038:	ldr	r2, [pc, #20]	; 11054 <__mempcpy_chk@plt+0x6c>
   1103c:	add	r3, pc, r3
   11040:	ldr	r2, [r3, r2]
   11044:	cmp	r2, #0
   11048:	bxeq	lr
   1104c:	b	10ed4 <__gmon_start__@plt>
   11050:			; <UNDEFINED> instruction: 0x00016fbc
   11054:	ldrdeq	r0, [r0], -r8
   11058:	ldr	r0, [pc, #24]	; 11078 <__mempcpy_chk@plt+0x90>
   1105c:	ldr	r3, [pc, #24]	; 1107c <__mempcpy_chk@plt+0x94>
   11060:	cmp	r3, r0
   11064:	bxeq	lr
   11068:	ldr	r3, [pc, #16]	; 11080 <__mempcpy_chk@plt+0x98>
   1106c:	cmp	r3, #0
   11070:	bxeq	lr
   11074:	bx	r3
   11078:	andeq	r8, r2, r0, lsr r1
   1107c:	andeq	r8, r2, r0, lsr r1
   11080:	andeq	r0, r0, r0
   11084:	ldr	r0, [pc, #36]	; 110b0 <__mempcpy_chk@plt+0xc8>
   11088:	ldr	r1, [pc, #36]	; 110b4 <__mempcpy_chk@plt+0xcc>
   1108c:	sub	r1, r1, r0
   11090:	asr	r1, r1, #2
   11094:	add	r1, r1, r1, lsr #31
   11098:	asrs	r1, r1, #1
   1109c:	bxeq	lr
   110a0:	ldr	r3, [pc, #16]	; 110b8 <__mempcpy_chk@plt+0xd0>
   110a4:	cmp	r3, #0
   110a8:	bxeq	lr
   110ac:	bx	r3
   110b0:	andeq	r8, r2, r0, lsr r1
   110b4:	andeq	r8, r2, r0, lsr r1
   110b8:	andeq	r0, r0, r0
   110bc:	push	{r4, lr}
   110c0:	ldr	r4, [pc, #24]	; 110e0 <__mempcpy_chk@plt+0xf8>
   110c4:	ldrb	r3, [r4]
   110c8:	cmp	r3, #0
   110cc:	popne	{r4, pc}
   110d0:	bl	11058 <__mempcpy_chk@plt+0x70>
   110d4:	mov	r3, #1
   110d8:	strb	r3, [r4]
   110dc:	pop	{r4, pc}
   110e0:	andeq	r8, r2, r8, asr #2
   110e4:	b	11084 <__mempcpy_chk@plt+0x9c>
   110e8:	push	{fp, lr}
   110ec:	mov	fp, sp
   110f0:	sub	sp, sp, #56	; 0x38
   110f4:	mov	r4, r0
   110f8:	cmp	r0, #0
   110fc:	bne	11320 <__mempcpy_chk@plt+0x338>
   11100:	movw	r1, #26331	; 0x66db
   11104:	mov	r0, #0
   11108:	mov	r2, #5
   1110c:	movt	r1, #1
   11110:	bl	10e20 <dcgettext@plt>
   11114:	mov	r1, r0
   11118:	movw	r0, #33108	; 0x8154
   1111c:	movt	r0, #2
   11120:	ldr	r2, [r0]
   11124:	mov	r0, #1
   11128:	bl	10f40 <__printf_chk@plt>
   1112c:	movw	r1, #26362	; 0x66fa
   11130:	mov	r0, #0
   11134:	mov	r2, #5
   11138:	movt	r1, #1
   1113c:	bl	10e20 <dcgettext@plt>
   11140:	movw	r7, #33092	; 0x8144
   11144:	movt	r7, #2
   11148:	ldr	r1, [r7]
   1114c:	bl	10d9c <fputs_unlocked@plt>
   11150:	movw	r1, #26418	; 0x6732
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e20 <dcgettext@plt>
   11164:	ldr	r1, [r7]
   11168:	bl	10d9c <fputs_unlocked@plt>
   1116c:	movw	r1, #26855	; 0x68e7
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	movt	r1, #1
   1117c:	bl	10e20 <dcgettext@plt>
   11180:	ldr	r1, [r7]
   11184:	bl	10d9c <fputs_unlocked@plt>
   11188:	movw	r1, #27376	; 0x6af0
   1118c:	mov	r0, #0
   11190:	mov	r2, #5
   11194:	movt	r1, #1
   11198:	bl	10e20 <dcgettext@plt>
   1119c:	ldr	r1, [r7]
   111a0:	bl	10d9c <fputs_unlocked@plt>
   111a4:	movw	r1, #27421	; 0x6b1d
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e20 <dcgettext@plt>
   111b8:	ldr	r1, [r7]
   111bc:	bl	10d9c <fputs_unlocked@plt>
   111c0:	movw	r0, #28208	; 0x6e30
   111c4:	mov	r2, #48	; 0x30
   111c8:	mov	r6, sp
   111cc:	movw	r5, #27475	; 0x6b53
   111d0:	movt	r0, #1
   111d4:	movt	r5, #1
   111d8:	add	r1, r0, #32
   111dc:	add	r3, r0, #16
   111e0:	vld1.64	{d18-d19}, [r0], r2
   111e4:	vld1.64	{d16-d17}, [r1]
   111e8:	vld1.64	{d20-d21}, [r3]
   111ec:	add	r1, r6, #32
   111f0:	vldr	d22, [r0]
   111f4:	add	r0, r6, #16
   111f8:	vst1.64	{d16-d17}, [r1]
   111fc:	movw	r1, #27609	; 0x6bd9
   11200:	vst1.64	{d20-d21}, [r0]
   11204:	mov	r0, r6
   11208:	vst1.64	{d18-d19}, [r0], r2
   1120c:	movt	r1, #1
   11210:	vstr	d22, [r0]
   11214:	mov	r0, r5
   11218:	bl	10db4 <strcmp@plt>
   1121c:	cmp	r0, #0
   11220:	ldrne	r1, [r6, #8]!
   11224:	cmpne	r1, #0
   11228:	bne	11214 <__mempcpy_chk@plt+0x22c>
   1122c:	ldr	r6, [r6, #4]
   11230:	movw	r1, #27704	; 0x6c38
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	movt	r1, #1
   11240:	bl	10e20 <dcgettext@plt>
   11244:	movw	r2, #27517	; 0x6b7d
   11248:	movw	r3, #27727	; 0x6c4f
   1124c:	mov	r1, r0
   11250:	mov	r0, #1
   11254:	movt	r2, #1
   11258:	movt	r3, #1
   1125c:	bl	10f40 <__printf_chk@plt>
   11260:	cmp	r6, #0
   11264:	mov	r0, #5
   11268:	mov	r1, #0
   1126c:	moveq	r6, r5
   11270:	bl	10f88 <setlocale@plt>
   11274:	cmp	r0, #0
   11278:	beq	112b0 <__mempcpy_chk@plt+0x2c8>
   1127c:	movw	r1, #27767	; 0x6c77
   11280:	mov	r2, #3
   11284:	movt	r1, #1
   11288:	bl	10fc4 <strncmp@plt>
   1128c:	cmp	r0, #0
   11290:	beq	112b0 <__mempcpy_chk@plt+0x2c8>
   11294:	movw	r1, #27771	; 0x6c7b
   11298:	mov	r0, #0
   1129c:	mov	r2, #5
   112a0:	movt	r1, #1
   112a4:	bl	10e20 <dcgettext@plt>
   112a8:	ldr	r1, [r7]
   112ac:	bl	10d9c <fputs_unlocked@plt>
   112b0:	movw	r1, #27842	; 0x6cc2
   112b4:	mov	r0, #0
   112b8:	mov	r2, #5
   112bc:	movt	r1, #1
   112c0:	bl	10e20 <dcgettext@plt>
   112c4:	movw	r2, #27727	; 0x6c4f
   112c8:	mov	r1, r0
   112cc:	mov	r0, #1
   112d0:	mov	r3, r5
   112d4:	movt	r2, #1
   112d8:	bl	10f40 <__printf_chk@plt>
   112dc:	movw	r1, #27869	; 0x6cdd
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	movt	r1, #1
   112ec:	bl	10e20 <dcgettext@plt>
   112f0:	movw	r3, #26417	; 0x6731
   112f4:	mov	r1, r0
   112f8:	movw	r0, #27637	; 0x6bf5
   112fc:	cmp	r6, r5
   11300:	mov	r2, r6
   11304:	movt	r0, #1
   11308:	movt	r3, #1
   1130c:	moveq	r3, r0
   11310:	mov	r0, #1
   11314:	bl	10f40 <__printf_chk@plt>
   11318:	mov	r0, r4
   1131c:	bl	10f04 <exit@plt>
   11320:	movw	r0, #33088	; 0x8140
   11324:	movw	r1, #26292	; 0x66b4
   11328:	mov	r2, #5
   1132c:	movt	r0, #2
   11330:	movt	r1, #1
   11334:	ldr	r5, [r0]
   11338:	mov	r0, #0
   1133c:	bl	10e20 <dcgettext@plt>
   11340:	mov	r2, r0
   11344:	movw	r0, #33108	; 0x8154
   11348:	mov	r1, #1
   1134c:	movt	r0, #2
   11350:	ldr	r3, [r0]
   11354:	mov	r0, r5
   11358:	bl	10f58 <__fprintf_chk@plt>
   1135c:	mov	r0, r4
   11360:	bl	10f04 <exit@plt>
   11364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11368:	add	fp, sp, #28
   1136c:	sub	sp, sp, #12
   11370:	mov	r5, r0
   11374:	ldr	r0, [r1]
   11378:	mov	r4, r1
   1137c:	bl	13460 <__mempcpy_chk@plt+0x2478>
   11380:	movw	r1, #26417	; 0x6731
   11384:	mov	r0, #6
   11388:	movt	r1, #1
   1138c:	bl	10f88 <setlocale@plt>
   11390:	movw	r6, #27521	; 0x6b81
   11394:	movw	r1, #27484	; 0x6b5c
   11398:	movt	r6, #1
   1139c:	movt	r1, #1
   113a0:	mov	r0, r6
   113a4:	bl	10fac <bindtextdomain@plt>
   113a8:	mov	r0, r6
   113ac:	bl	10e38 <textdomain@plt>
   113b0:	movw	r0, #7972	; 0x1f24
   113b4:	movt	r0, #1
   113b8:	bl	1668c <__mempcpy_chk@plt+0x56a4>
   113bc:	movw	r9, #27508	; 0x6b74
   113c0:	movw	r8, #28032	; 0x6d80
   113c4:	mov	r0, #10
   113c8:	mvn	r7, #0
   113cc:	mov	r6, #0
   113d0:	mov	sl, #1
   113d4:	str	r0, [sp, #8]
   113d8:	movt	r9, #1
   113dc:	movt	r8, #1
   113e0:	b	113fc <__mempcpy_chk@plt+0x414>
   113e4:	movw	r0, #33098	; 0x814a
   113e8:	movt	r0, #2
   113ec:	strb	r6, [r0]
   113f0:	b	113fc <__mempcpy_chk@plt+0x414>
   113f4:	mov	r0, #0
   113f8:	str	r0, [sp, #8]
   113fc:	mov	r0, r5
   11400:	mov	r1, r4
   11404:	mov	r2, r9
   11408:	mov	r3, r8
   1140c:	str	r6, [sp]
   11410:	bl	10ee0 <getopt_long@plt>
   11414:	cmp	r0, #100	; 0x64
   11418:	ble	114c0 <__mempcpy_chk@plt+0x4d8>
   1141c:	sub	r0, r0, #101	; 0x65
   11420:	cmp	r0, #21
   11424:	bhi	116ac <__mempcpy_chk@plt+0x6c4>
   11428:	add	r1, pc, #0
   1142c:	ldr	pc, [r1, r0, lsl #2]
   11430:	andeq	r1, r1, r8, lsl #9
   11434:	andeq	r1, r1, r8, lsr #9
   11438:	andeq	r1, r1, ip, lsr #13
   1143c:	andeq	r1, r1, ip, lsr #13
   11440:	andeq	r1, r1, ip, lsr #13
   11444:	andeq	r1, r1, ip, lsr #13
   11448:	andeq	r1, r1, ip, lsr #13
   1144c:	andeq	r1, r1, ip, lsr #13
   11450:	andeq	r1, r1, r0, lsr #9
   11454:	muleq	r1, r0, r4
   11458:	andeq	r1, r1, ip, lsr #13
   1145c:	andeq	r1, r1, ip, lsr #13
   11460:	andeq	r1, r1, r4, ror #7
   11464:	andeq	r1, r1, ip, lsr #13
   11468:	andeq	r1, r1, r4, ror #7
   1146c:	andeq	r1, r1, ip, lsr #13
   11470:	andeq	r1, r1, ip, lsr #13
   11474:			; <UNDEFINED> instruction: 0x000114b0
   11478:	andeq	r1, r1, ip, lsr #13
   1147c:	andeq	r1, r1, ip, lsr #13
   11480:	andeq	r1, r1, ip, lsr #13
   11484:	strdeq	r1, [r1], -r4
   11488:	mov	r7, #0
   1148c:	b	113fc <__mempcpy_chk@plt+0x414>
   11490:	movw	r0, #33097	; 0x8149
   11494:	movt	r0, #2
   11498:	strb	sl, [r0]
   1149c:	b	113fc <__mempcpy_chk@plt+0x414>
   114a0:	mov	r7, #2
   114a4:	b	113fc <__mempcpy_chk@plt+0x414>
   114a8:	mov	r7, #1
   114ac:	b	113fc <__mempcpy_chk@plt+0x414>
   114b0:	movw	r0, #33098	; 0x814a
   114b4:	movt	r0, #2
   114b8:	strb	sl, [r0]
   114bc:	b	113fc <__mempcpy_chk@plt+0x414>
   114c0:	cmn	r0, #1
   114c4:	bne	1164c <__mempcpy_chk@plt+0x664>
   114c8:	movw	r8, #33080	; 0x8138
   114cc:	movt	r8, #2
   114d0:	ldr	r0, [r8]
   114d4:	cmp	r0, r5
   114d8:	bge	116b4 <__mempcpy_chk@plt+0x6cc>
   114dc:	sub	r1, r5, r0
   114e0:	cmp	r1, #2
   114e4:	blt	11534 <__mempcpy_chk@plt+0x54c>
   114e8:	movw	r1, #33097	; 0x8149
   114ec:	movt	r1, #2
   114f0:	ldrb	r1, [r1]
   114f4:	cmp	r1, #1
   114f8:	bne	11524 <__mempcpy_chk@plt+0x53c>
   114fc:	movw	r1, #27563	; 0x6bab
   11500:	mov	r0, #0
   11504:	mov	r2, #5
   11508:	movt	r1, #1
   1150c:	bl	10e20 <dcgettext@plt>
   11510:	mov	r2, r0
   11514:	mov	r0, #0
   11518:	mov	r1, #0
   1151c:	bl	10ea4 <error@plt>
   11520:	ldr	r0, [r8]
   11524:	movw	r2, #33097	; 0x8149
   11528:	mov	r1, #0
   1152c:	movt	r2, #2
   11530:	strb	r1, [r2]
   11534:	mov	sl, #0
   11538:	cmp	r0, r5
   1153c:	bge	11640 <__mempcpy_chk@plt+0x658>
   11540:	mov	sl, #0
   11544:	b	11554 <__mempcpy_chk@plt+0x56c>
   11548:	ldr	r1, [sp, #8]
   1154c:	bl	10f7c <__overflow@plt>
   11550:	b	115d8 <__mempcpy_chk@plt+0x5f0>
   11554:	ldr	r9, [r4, r0, lsl #2]
   11558:	cmn	r7, #1
   1155c:	mov	r0, r9
   11560:	beq	11570 <__mempcpy_chk@plt+0x588>
   11564:	mov	r1, r7
   11568:	bl	11824 <__mempcpy_chk@plt+0x83c>
   1156c:	b	11578 <__mempcpy_chk@plt+0x590>
   11570:	mov	r1, #63	; 0x3f
   11574:	bl	116e0 <__mempcpy_chk@plt+0x6f8>
   11578:	mov	r6, r0
   1157c:	cmp	r0, #0
   11580:	beq	115e4 <__mempcpy_chk@plt+0x5fc>
   11584:	movw	r0, #33092	; 0x8144
   11588:	movt	r0, #2
   1158c:	ldr	r1, [r0]
   11590:	mov	r0, r6
   11594:	bl	10d9c <fputs_unlocked@plt>
   11598:	movw	r0, #33097	; 0x8149
   1159c:	movt	r0, #2
   115a0:	ldrb	r0, [r0]
   115a4:	cmp	r0, #0
   115a8:	bne	115d8 <__mempcpy_chk@plt+0x5f0>
   115ac:	movw	r0, #33092	; 0x8144
   115b0:	movt	r0, #2
   115b4:	ldr	r0, [r0]
   115b8:	ldr	r1, [r0, #20]
   115bc:	ldr	r2, [r0, #24]
   115c0:	cmp	r1, r2
   115c4:	bcs	11548 <__mempcpy_chk@plt+0x560>
   115c8:	add	r2, r1, #1
   115cc:	str	r2, [r0, #20]
   115d0:	ldr	r0, [sp, #8]
   115d4:	strb	r0, [r1]
   115d8:	mov	r0, r6
   115dc:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   115e0:	b	1162c <__mempcpy_chk@plt+0x644>
   115e4:	movw	r0, #33098	; 0x814a
   115e8:	mov	sl, #1
   115ec:	movt	r0, #2
   115f0:	ldrb	r0, [r0]
   115f4:	cmp	r0, #1
   115f8:	bne	1162c <__mempcpy_chk@plt+0x644>
   115fc:	bl	10f1c <__errno_location@plt>
   11600:	ldr	r6, [r0]
   11604:	mov	r0, #0
   11608:	mov	r1, #3
   1160c:	mov	r2, r9
   11610:	bl	14de8 <__mempcpy_chk@plt+0x3e00>
   11614:	movw	r2, #28297	; 0x6e89
   11618:	mov	r3, r0
   1161c:	mov	r0, #0
   11620:	mov	r1, r6
   11624:	movt	r2, #1
   11628:	bl	10ea4 <error@plt>
   1162c:	ldr	r0, [r8]
   11630:	add	r0, r0, #1
   11634:	cmp	r0, r5
   11638:	str	r0, [r8]
   1163c:	blt	11554 <__mempcpy_chk@plt+0x56c>
   11640:	mov	r0, sl
   11644:	sub	sp, fp, #28
   11648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1164c:	cmn	r0, #3
   11650:	bne	1169c <__mempcpy_chk@plt+0x6b4>
   11654:	movw	r0, #33000	; 0x80e8
   11658:	movw	r2, #27531	; 0x6b8b
   1165c:	mov	r1, #0
   11660:	movt	r0, #2
   11664:	movt	r2, #1
   11668:	str	r1, [sp, #4]
   1166c:	movw	r1, #27475	; 0x6b53
   11670:	ldr	r3, [r0]
   11674:	movw	r0, #33092	; 0x8144
   11678:	str	r2, [sp]
   1167c:	movw	r2, #27517	; 0x6b7d
   11680:	movt	r1, #1
   11684:	movt	r0, #2
   11688:	movt	r2, #1
   1168c:	ldr	r0, [r0]
   11690:	bl	157cc <__mempcpy_chk@plt+0x47e4>
   11694:	mov	r0, #0
   11698:	bl	10f04 <exit@plt>
   1169c:	cmn	r0, #2
   116a0:	bne	116ac <__mempcpy_chk@plt+0x6c4>
   116a4:	mov	r0, #0
   116a8:	bl	110e8 <__mempcpy_chk@plt+0x100>
   116ac:	mov	r0, #1
   116b0:	bl	110e8 <__mempcpy_chk@plt+0x100>
   116b4:	movw	r1, #27547	; 0x6b9b
   116b8:	mov	r0, #0
   116bc:	mov	r2, #5
   116c0:	movt	r1, #1
   116c4:	bl	10e20 <dcgettext@plt>
   116c8:	mov	r2, r0
   116cc:	mov	r0, #0
   116d0:	mov	r1, #0
   116d4:	bl	10ea4 <error@plt>
   116d8:	mov	r0, #1
   116dc:	bl	110e8 <__mempcpy_chk@plt+0x100>
   116e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116e4:	add	fp, sp, #24
   116e8:	sub	sp, sp, #128	; 0x80
   116ec:	mov	r4, r1
   116f0:	mov	r8, r0
   116f4:	cmp	r1, #0
   116f8:	beq	1170c <__mempcpy_chk@plt+0x724>
   116fc:	movw	r6, #1025	; 0x401
   11700:	cmp	r4, #1024	; 0x400
   11704:	addls	r6, r4, #1
   11708:	b	11710 <__mempcpy_chk@plt+0x728>
   1170c:	mov	r6, #128	; 0x80
   11710:	mov	r9, sp
   11714:	cmp	r4, #0
   11718:	beq	11758 <__mempcpy_chk@plt+0x770>
   1171c:	b	11768 <__mempcpy_chk@plt+0x780>
   11720:	cmp	r0, r6
   11724:	bcc	117a8 <__mempcpy_chk@plt+0x7c0>
   11728:	mov	r0, r5
   1172c:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   11730:	cmn	r6, #-1073741823	; 0xc0000001
   11734:	bhi	11740 <__mempcpy_chk@plt+0x758>
   11738:	lsl	r0, r6, #1
   1173c:	b	1174c <__mempcpy_chk@plt+0x764>
   11740:	mvn	r0, #-2147483648	; 0x80000000
   11744:	cmn	r6, #-2147483647	; 0x80000001
   11748:	bcs	117e0 <__mempcpy_chk@plt+0x7f8>
   1174c:	mov	r6, r0
   11750:	cmp	r4, #0
   11754:	bne	11768 <__mempcpy_chk@plt+0x780>
   11758:	mov	r5, #0
   1175c:	cmp	r6, #128	; 0x80
   11760:	mov	r7, r9
   11764:	beq	11780 <__mempcpy_chk@plt+0x798>
   11768:	mov	r0, r6
   1176c:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   11770:	mov	r7, r0
   11774:	cmp	r0, #0
   11778:	mov	r5, r0
   1177c:	beq	117e0 <__mempcpy_chk@plt+0x7f8>
   11780:	mov	r0, r8
   11784:	mov	r1, r7
   11788:	mov	r2, r6
   1178c:	bl	10e5c <readlink@plt>
   11790:	cmn	r0, #1
   11794:	bgt	11720 <__mempcpy_chk@plt+0x738>
   11798:	mov	r0, r5
   1179c:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   117a0:	mov	r4, #0
   117a4:	b	11818 <__mempcpy_chk@plt+0x830>
   117a8:	mov	r4, #0
   117ac:	add	r8, r0, #1
   117b0:	cmp	r5, #0
   117b4:	strb	r4, [r7, r0]
   117b8:	beq	117f4 <__mempcpy_chk@plt+0x80c>
   117bc:	cmp	r8, r6
   117c0:	bcs	11814 <__mempcpy_chk@plt+0x82c>
   117c4:	mov	r0, r5
   117c8:	mov	r1, r8
   117cc:	bl	16028 <__mempcpy_chk@plt+0x5040>
   117d0:	mov	r4, r0
   117d4:	cmp	r0, #0
   117d8:	moveq	r4, r5
   117dc:	b	11818 <__mempcpy_chk@plt+0x830>
   117e0:	bl	10f1c <__errno_location@plt>
   117e4:	mov	r1, #12
   117e8:	mov	r4, #0
   117ec:	str	r1, [r0]
   117f0:	b	11818 <__mempcpy_chk@plt+0x830>
   117f4:	mov	r0, r8
   117f8:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   117fc:	cmp	r0, #0
   11800:	beq	11818 <__mempcpy_chk@plt+0x830>
   11804:	mov	r1, r7
   11808:	mov	r2, r8
   1180c:	mov	r5, r0
   11810:	bl	10dfc <memcpy@plt>
   11814:	mov	r4, r5
   11818:	mov	r0, r4
   1181c:	sub	sp, fp, #24
   11820:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11828:	add	fp, sp, #28
   1182c:	sub	sp, sp, #180	; 0xb4
   11830:	sub	sp, sp, #3072	; 0xc00
   11834:	mov	r8, r0
   11838:	and	r7, r1, #3
   1183c:	sub	r0, r1, #1
   11840:	tst	r0, r7
   11844:	beq	11864 <__mempcpy_chk@plt+0x87c>
   11848:	bl	10f1c <__errno_location@plt>
   1184c:	mov	r1, #22
   11850:	mov	r4, #0
   11854:	str	r1, [r0]
   11858:	mov	r0, r4
   1185c:	sub	sp, fp, #28
   11860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11864:	cmp	r8, #0
   11868:	beq	11848 <__mempcpy_chk@plt+0x860>
   1186c:	ldrb	r0, [r8]
   11870:	cmp	r0, #0
   11874:	beq	118ec <__mempcpy_chk@plt+0x904>
   11878:	sub	lr, fp, #1024	; 0x400
   1187c:	mov	r4, r1
   11880:	mov	r1, #1024	; 0x400
   11884:	cmp	r0, #47	; 0x2f
   11888:	sub	r2, lr, #40	; 0x28
   1188c:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11890:	add	r2, r2, #8
   11894:	str	r2, [sp, #12]
   11898:	str	r2, [fp, #-1064]	; 0xfffffbd8
   1189c:	add	r2, sp, #1184	; 0x4a0
   118a0:	add	r2, r2, #8
   118a4:	str	r2, [sp, #1184]	; 0x4a0
   118a8:	str	r2, [sp, #16]
   118ac:	add	r2, sp, #48	; 0x30
   118b0:	str	r1, [sp, #1188]	; 0x4a4
   118b4:	add	r5, r2, #8
   118b8:	mov	r0, r5
   118bc:	str	r5, [sp, #48]	; 0x30
   118c0:	str	r1, [sp, #52]	; 0x34
   118c4:	str	r5, [sp, #8]
   118c8:	bne	118f8 <__mempcpy_chk@plt+0x910>
   118cc:	mov	r1, r8
   118d0:	mov	r2, #0
   118d4:	mov	r3, #1024	; 0x400
   118d8:	bl	10fe8 <__mempcpy_chk@plt>
   118dc:	mov	r6, r0
   118e0:	mov	r0, #47	; 0x2f
   118e4:	strb	r0, [r6], #1
   118e8:	b	11918 <__mempcpy_chk@plt+0x930>
   118ec:	bl	10f1c <__errno_location@plt>
   118f0:	mov	r1, #2
   118f4:	b	11850 <__mempcpy_chk@plt+0x868>
   118f8:	mov	r1, #1024	; 0x400
   118fc:	bl	10ef8 <getcwd@plt>
   11900:	cmp	r0, #0
   11904:	beq	11e28 <__mempcpy_chk@plt+0xe40>
   11908:	mov	r0, r5
   1190c:	mov	r1, #0
   11910:	bl	10e44 <rawmemchr@plt>
   11914:	mov	r6, r0
   11918:	ldrb	r0, [r8]
   1191c:	cmp	r0, #0
   11920:	beq	11dec <__mempcpy_chk@plt+0xe04>
   11924:	and	r1, r4, #4
   11928:	add	r9, sp, #48	; 0x30
   1192c:	str	r7, [sp, #32]
   11930:	str	r1, [sp, #40]	; 0x28
   11934:	mov	r1, #0
   11938:	str	r1, [sp, #24]
   1193c:	mov	r1, #0
   11940:	str	r1, [sp, #36]	; 0x24
   11944:	mov	r1, #0
   11948:	str	r1, [sp, #20]
   1194c:	b	11d94 <__mempcpy_chk@plt+0xdac>
   11950:	uxtb	r0, r0
   11954:	cmp	r0, #46	; 0x2e
   11958:	ldrbeq	r0, [r8, #1]
   1195c:	cmpeq	r0, #46	; 0x2e
   11960:	bne	119a0 <__mempcpy_chk@plt+0x9b8>
   11964:	add	r0, r5, #1
   11968:	cmp	r6, r0
   1196c:	bls	11a94 <__mempcpy_chk@plt+0xaac>
   11970:	sub	r0, r6, #1
   11974:	mov	r6, r0
   11978:	cmp	r0, r5
   1197c:	bls	11a94 <__mempcpy_chk@plt+0xaac>
   11980:	mov	r0, r6
   11984:	ldrb	r1, [r0, #-1]!
   11988:	cmp	r1, #47	; 0x2f
   1198c:	bne	11974 <__mempcpy_chk@plt+0x98c>
   11990:	b	11a94 <__mempcpy_chk@plt+0xaac>
   11994:	uxtb	r0, r0
   11998:	cmp	r0, #46	; 0x2e
   1199c:	beq	11a94 <__mempcpy_chk@plt+0xaac>
   119a0:	ldrb	r0, [r6, #-1]
   119a4:	add	r4, r2, #2
   119a8:	str	r2, [sp, #44]	; 0x2c
   119ac:	cmp	r0, #47	; 0x2f
   119b0:	movne	r0, #47	; 0x2f
   119b4:	strbne	r0, [r6], #1
   119b8:	ldr	r0, [sp, #52]	; 0x34
   119bc:	add	r0, r5, r0
   119c0:	sub	r0, r0, r6
   119c4:	cmp	r0, r4
   119c8:	bcs	11a00 <__mempcpy_chk@plt+0xa18>
   119cc:	mov	r0, r9
   119d0:	bl	152a4 <__mempcpy_chk@plt+0x42bc>
   119d4:	cmp	r0, #0
   119d8:	beq	11eec <__mempcpy_chk@plt+0xf04>
   119dc:	sub	r0, r6, r5
   119e0:	ldr	r5, [sp, #48]	; 0x30
   119e4:	ldr	r1, [sp, #52]	; 0x34
   119e8:	add	r6, r5, r0
   119ec:	add	r0, r5, r1
   119f0:	sub	r0, r0, r6
   119f4:	cmp	r0, r4
   119f8:	bcc	119cc <__mempcpy_chk@plt+0x9e4>
   119fc:	ldr	r2, [sp, #44]	; 0x2c
   11a00:	mov	r0, r6
   11a04:	mov	r1, r8
   11a08:	mvn	r3, #0
   11a0c:	bl	10fe8 <__mempcpy_chk@plt>
   11a10:	mov	r6, r0
   11a14:	mov	r0, #0
   11a18:	strb	r0, [r6]
   11a1c:	ldr	r0, [sp, #40]	; 0x28
   11a20:	cmp	r0, #0
   11a24:	bne	11a88 <__mempcpy_chk@plt+0xaa0>
   11a28:	ldr	r0, [sp, #1188]	; 0x4a4
   11a2c:	ldr	r7, [sp, #1184]	; 0x4a0
   11a30:	sub	r9, r0, #1
   11a34:	mov	r0, r5
   11a38:	mov	r1, r7
   11a3c:	mov	r2, r9
   11a40:	bl	10e5c <readlink@plt>
   11a44:	cmp	r0, r9
   11a48:	blt	11a60 <__mempcpy_chk@plt+0xa78>
   11a4c:	add	r0, sp, #1184	; 0x4a0
   11a50:	bl	15234 <__mempcpy_chk@plt+0x424c>
   11a54:	cmp	r0, #0
   11a58:	bne	11a28 <__mempcpy_chk@plt+0xa40>
   11a5c:	b	11eec <__mempcpy_chk@plt+0xf04>
   11a60:	mov	r4, r0
   11a64:	cmp	r0, #0
   11a68:	add	r9, sp, #48	; 0x30
   11a6c:	blt	11a88 <__mempcpy_chk@plt+0xaa0>
   11a70:	ldr	r0, [sp, #24]
   11a74:	cmp	r0, #19
   11a78:	bgt	11b1c <__mempcpy_chk@plt+0xb34>
   11a7c:	add	r0, r0, #1
   11a80:	str	r0, [sp, #24]
   11a84:	b	11c84 <__mempcpy_chk@plt+0xc9c>
   11a88:	ldr	r7, [sp, #32]
   11a8c:	cmp	r7, #2
   11a90:	bne	11aa8 <__mempcpy_chk@plt+0xac0>
   11a94:	mov	r8, sl
   11a98:	ldrb	r0, [r8]
   11a9c:	cmp	r0, #0
   11aa0:	bne	11d94 <__mempcpy_chk@plt+0xdac>
   11aa4:	b	11df4 <__mempcpy_chk@plt+0xe0c>
   11aa8:	ldrb	r0, [sl]
   11aac:	cmp	r0, #47	; 0x2f
   11ab0:	bne	11bec <__mempcpy_chk@plt+0xc04>
   11ab4:	mov	r2, sl
   11ab8:	mov	r1, r2
   11abc:	ldrb	r3, [r2, #1]!
   11ac0:	cmp	r3, #47	; 0x2f
   11ac4:	beq	11ab8 <__mempcpy_chk@plt+0xad0>
   11ac8:	cmp	r3, #46	; 0x2e
   11acc:	bne	11be4 <__mempcpy_chk@plt+0xbfc>
   11ad0:	add	r2, r1, #2
   11ad4:	ldrb	r3, [r2]
   11ad8:	cmp	r3, #47	; 0x2f
   11adc:	beq	11ab8 <__mempcpy_chk@plt+0xad0>
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b00 <__mempcpy_chk@plt+0xb18>
   11ae8:	cmp	r3, #46	; 0x2e
   11aec:	bne	11bec <__mempcpy_chk@plt+0xc04>
   11af0:	ldrb	r1, [r1, #3]
   11af4:	cmp	r1, #47	; 0x2f
   11af8:	cmpne	r1, #0
   11afc:	bne	11bec <__mempcpy_chk@plt+0xc04>
   11b00:	mov	r0, #47	; 0x2f
   11b04:	mov	r1, r5
   11b08:	mov	r2, #0
   11b0c:	mov	r3, #512	; 0x200
   11b10:	strh	r0, [r6]
   11b14:	mvn	r0, #99	; 0x63
   11b18:	b	11c10 <__mempcpy_chk@plt+0xc28>
   11b1c:	ldrb	r0, [r8]
   11b20:	cmp	r0, #0
   11b24:	beq	11c84 <__mempcpy_chk@plt+0xc9c>
   11b28:	ldr	r9, [sp, #44]	; 0x2c
   11b2c:	mov	r0, #0
   11b30:	add	lr, sp, #1024	; 0x400
   11b34:	mov	r1, r5
   11b38:	add	r2, lr, #56	; 0x38
   11b3c:	strb	r0, [r6, -r9]
   11b40:	ldrb	r0, [r5]
   11b44:	cmp	r0, #0
   11b48:	movw	r0, #28279	; 0x6e77
   11b4c:	movt	r0, #1
   11b50:	moveq	r1, r0
   11b54:	mov	r0, #3
   11b58:	bl	10fb8 <__xstat64@plt>
   11b5c:	cmp	r0, #0
   11b60:	bne	11efc <__mempcpy_chk@plt+0xf14>
   11b64:	rsb	r0, r9, #0
   11b68:	ldr	r9, [sp, #20]
   11b6c:	ldrb	r1, [r8]
   11b70:	cmp	r9, #0
   11b74:	strb	r1, [r6, r0]
   11b78:	bne	11bb0 <__mempcpy_chk@plt+0xbc8>
   11b7c:	movw	r0, #13376	; 0x3440
   11b80:	movw	r2, #13232	; 0x33b0
   11b84:	movw	r3, #13288	; 0x33e8
   11b88:	mov	r1, #0
   11b8c:	movt	r0, #1
   11b90:	movt	r2, #1
   11b94:	movt	r3, #1
   11b98:	str	r0, [sp]
   11b9c:	mov	r0, #7
   11ba0:	bl	12588 <__mempcpy_chk@plt+0x15a0>
   11ba4:	mov	r9, r0
   11ba8:	cmp	r0, #0
   11bac:	beq	11eec <__mempcpy_chk@plt+0xf04>
   11bb0:	add	lr, sp, #1024	; 0x400
   11bb4:	mov	r0, r9
   11bb8:	mov	r1, r8
   11bbc:	add	r2, lr, #56	; 0x38
   11bc0:	bl	12088 <__mempcpy_chk@plt+0x10a0>
   11bc4:	cmp	r0, #0
   11bc8:	str	r9, [sp, #20]
   11bcc:	beq	11c70 <__mempcpy_chk@plt+0xc88>
   11bd0:	ldr	r7, [sp, #32]
   11bd4:	cmp	r7, #2
   11bd8:	bne	11ef0 <__mempcpy_chk@plt+0xf08>
   11bdc:	mov	r8, sl
   11be0:	b	11d50 <__mempcpy_chk@plt+0xd68>
   11be4:	cmp	r3, #0
   11be8:	beq	11b00 <__mempcpy_chk@plt+0xb18>
   11bec:	ldr	r1, [sp, #40]	; 0x28
   11bf0:	cmp	r1, #0
   11bf4:	beq	11c20 <__mempcpy_chk@plt+0xc38>
   11bf8:	cmp	r0, #0
   11bfc:	bne	11a94 <__mempcpy_chk@plt+0xaac>
   11c00:	mvn	r0, #99	; 0x63
   11c04:	mov	r1, r5
   11c08:	mov	r2, #0
   11c0c:	mov	r3, #512	; 0x200
   11c10:	bl	10de4 <faccessat@plt>
   11c14:	cmp	r0, #0
   11c18:	bne	11c30 <__mempcpy_chk@plt+0xc48>
   11c1c:	b	11a94 <__mempcpy_chk@plt+0xaac>
   11c20:	bl	10f1c <__errno_location@plt>
   11c24:	ldr	r0, [r0]
   11c28:	cmp	r0, #22
   11c2c:	beq	11a94 <__mempcpy_chk@plt+0xaac>
   11c30:	mov	r4, #1
   11c34:	cmp	r7, #1
   11c38:	bne	11e14 <__mempcpy_chk@plt+0xe2c>
   11c3c:	bl	10f1c <__errno_location@plt>
   11c40:	ldr	r0, [r0]
   11c44:	cmp	r0, #2
   11c48:	bne	11e14 <__mempcpy_chk@plt+0xe2c>
   11c4c:	movw	r1, #29415	; 0x72e7
   11c50:	mov	r0, sl
   11c54:	movt	r1, #1
   11c58:	bl	10fdc <strspn@plt>
   11c5c:	ldrb	r0, [sl, r0]
   11c60:	mov	r8, sl
   11c64:	cmp	r0, #0
   11c68:	beq	11a98 <__mempcpy_chk@plt+0xab0>
   11c6c:	b	11e14 <__mempcpy_chk@plt+0xe2c>
   11c70:	add	lr, sp, #1024	; 0x400
   11c74:	mov	r0, r9
   11c78:	mov	r1, r8
   11c7c:	add	r2, lr, #56	; 0x38
   11c80:	bl	1200c <__mempcpy_chk@plt+0x1024>
   11c84:	mov	r0, #0
   11c88:	strb	r0, [r7, r4]
   11c8c:	ldr	r0, [sp, #36]	; 0x24
   11c90:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11c94:	tst	r0, #1
   11c98:	ldr	r0, [sp, #28]
   11c9c:	subne	r0, sl, r8
   11ca0:	str	r0, [sp, #28]
   11ca4:	mov	r0, sl
   11ca8:	bl	10f10 <strlen@plt>
   11cac:	adds	r9, r0, r4
   11cb0:	str	r0, [sp, #44]	; 0x2c
   11cb4:	bcs	11eec <__mempcpy_chk@plt+0xf04>
   11cb8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11cbc:	cmp	r0, r9
   11cc0:	bhi	11ce8 <__mempcpy_chk@plt+0xd00>
   11cc4:	sub	lr, fp, #1024	; 0x400
   11cc8:	sub	r0, lr, #40	; 0x28
   11ccc:	bl	152a4 <__mempcpy_chk@plt+0x42bc>
   11cd0:	cmp	r0, #0
   11cd4:	beq	11eec <__mempcpy_chk@plt+0xf04>
   11cd8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11cdc:	cmp	r0, r9
   11ce0:	bls	11cc4 <__mempcpy_chk@plt+0xcdc>
   11ce4:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11ce8:	ldr	r0, [sp, #36]	; 0x24
   11cec:	ldr	r1, [sp, #44]	; 0x2c
   11cf0:	tst	r0, #1
   11cf4:	ldr	r0, [sp, #28]
   11cf8:	add	r2, r1, #1
   11cfc:	addne	sl, r8, r0
   11d00:	add	r0, r8, r4
   11d04:	mov	r1, sl
   11d08:	bl	10dcc <memmove@plt>
   11d0c:	mov	r0, r8
   11d10:	mov	r1, r7
   11d14:	mov	r2, r4
   11d18:	bl	10dfc <memcpy@plt>
   11d1c:	ldrb	r0, [r7]
   11d20:	cmp	r0, #47	; 0x2f
   11d24:	bne	11d58 <__mempcpy_chk@plt+0xd70>
   11d28:	mov	r0, r5
   11d2c:	mov	r1, r7
   11d30:	mov	r2, #0
   11d34:	mvn	r3, #0
   11d38:	bl	10fe8 <__mempcpy_chk@plt>
   11d3c:	mov	r6, r0
   11d40:	mov	r0, #47	; 0x2f
   11d44:	strb	r0, [r6], #1
   11d48:	mov	r0, #1
   11d4c:	str	r0, [sp, #36]	; 0x24
   11d50:	add	r9, sp, #48	; 0x30
   11d54:	b	11a98 <__mempcpy_chk@plt+0xab0>
   11d58:	add	r0, r5, #1
   11d5c:	mov	r1, #1
   11d60:	add	r9, sp, #48	; 0x30
   11d64:	cmp	r6, r0
   11d68:	str	r1, [sp, #36]	; 0x24
   11d6c:	bls	11a98 <__mempcpy_chk@plt+0xab0>
   11d70:	sub	r0, r6, #1
   11d74:	mov	r6, r0
   11d78:	cmp	r0, r5
   11d7c:	bls	11a98 <__mempcpy_chk@plt+0xab0>
   11d80:	mov	r0, r6
   11d84:	ldrb	r1, [r0, #-1]!
   11d88:	cmp	r1, #47	; 0x2f
   11d8c:	bne	11d74 <__mempcpy_chk@plt+0xd8c>
   11d90:	b	11a98 <__mempcpy_chk@plt+0xab0>
   11d94:	uxtb	r1, r0
   11d98:	cmp	r1, #47	; 0x2f
   11d9c:	bne	11dac <__mempcpy_chk@plt+0xdc4>
   11da0:	ldrb	r0, [r8, #1]!
   11da4:	cmp	r0, #47	; 0x2f
   11da8:	beq	11da0 <__mempcpy_chk@plt+0xdb8>
   11dac:	mov	r1, r0
   11db0:	mov	sl, r8
   11db4:	b	11dbc <__mempcpy_chk@plt+0xdd4>
   11db8:	ldrb	r1, [sl, #1]!
   11dbc:	uxtb	r1, r1
   11dc0:	cmp	r1, #0
   11dc4:	cmpne	r1, #47	; 0x2f
   11dc8:	bne	11db8 <__mempcpy_chk@plt+0xdd0>
   11dcc:	sub	r2, sl, r8
   11dd0:	cmp	r2, #1
   11dd4:	beq	11994 <__mempcpy_chk@plt+0x9ac>
   11dd8:	cmp	r2, #2
   11ddc:	beq	11950 <__mempcpy_chk@plt+0x968>
   11de0:	cmp	r2, #0
   11de4:	bne	119a0 <__mempcpy_chk@plt+0x9b8>
   11de8:	b	11df4 <__mempcpy_chk@plt+0xe0c>
   11dec:	mov	r0, #0
   11df0:	str	r0, [sp, #20]
   11df4:	add	r0, r5, #1
   11df8:	cmp	r6, r0
   11dfc:	bls	11e10 <__mempcpy_chk@plt+0xe28>
   11e00:	mov	r0, r6
   11e04:	ldrb	r1, [r0, #-1]!
   11e08:	cmp	r1, #47	; 0x2f
   11e0c:	moveq	r6, r0
   11e10:	mov	r4, #0
   11e14:	ldr	r0, [sp, #20]
   11e18:	cmp	r0, #0
   11e1c:	beq	11e80 <__mempcpy_chk@plt+0xe98>
   11e20:	bl	12880 <__mempcpy_chk@plt+0x1898>
   11e24:	b	11e80 <__mempcpy_chk@plt+0xe98>
   11e28:	bl	10f1c <__errno_location@plt>
   11e2c:	ldr	r5, [sp, #8]
   11e30:	mov	r6, r0
   11e34:	add	r9, sp, #48	; 0x30
   11e38:	ldr	r0, [r6]
   11e3c:	cmp	r0, #34	; 0x22
   11e40:	bne	11e70 <__mempcpy_chk@plt+0xe88>
   11e44:	mov	r0, r9
   11e48:	bl	15234 <__mempcpy_chk@plt+0x424c>
   11e4c:	cmp	r0, #0
   11e50:	beq	11eec <__mempcpy_chk@plt+0xf04>
   11e54:	ldr	r5, [sp, #48]	; 0x30
   11e58:	ldr	r1, [sp, #52]	; 0x34
   11e5c:	mov	r0, r5
   11e60:	bl	10ef8 <getcwd@plt>
   11e64:	cmp	r0, #0
   11e68:	beq	11e38 <__mempcpy_chk@plt+0xe50>
   11e6c:	b	11908 <__mempcpy_chk@plt+0x920>
   11e70:	cmp	r0, #12
   11e74:	beq	11eec <__mempcpy_chk@plt+0xf04>
   11e78:	mov	r4, #1
   11e7c:	mov	r6, r5
   11e80:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   11e84:	ldr	r1, [sp, #12]
   11e88:	cmp	r0, r1
   11e8c:	beq	11e94 <__mempcpy_chk@plt+0xeac>
   11e90:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   11e94:	ldr	r0, [sp, #1184]	; 0x4a0
   11e98:	ldr	r1, [sp, #16]
   11e9c:	cmp	r0, r1
   11ea0:	beq	11ea8 <__mempcpy_chk@plt+0xec0>
   11ea4:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   11ea8:	cmp	r4, #0
   11eac:	beq	11ecc <__mempcpy_chk@plt+0xee4>
   11eb0:	ldr	r0, [sp, #48]	; 0x30
   11eb4:	ldr	r1, [sp, #8]
   11eb8:	mov	r4, #0
   11ebc:	cmp	r0, r1
   11ec0:	beq	11858 <__mempcpy_chk@plt+0x870>
   11ec4:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   11ec8:	b	11858 <__mempcpy_chk@plt+0x870>
   11ecc:	mov	r0, #0
   11ed0:	strb	r0, [r6], #1
   11ed4:	add	r0, sp, #48	; 0x30
   11ed8:	sub	r1, r6, r5
   11edc:	bl	151cc <__mempcpy_chk@plt+0x41e4>
   11ee0:	mov	r4, r0
   11ee4:	cmp	r0, #0
   11ee8:	bne	11858 <__mempcpy_chk@plt+0x870>
   11eec:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   11ef0:	bl	10f1c <__errno_location@plt>
   11ef4:	mov	r1, #40	; 0x28
   11ef8:	str	r1, [r0]
   11efc:	mov	r4, #1
   11f00:	b	11e14 <__mempcpy_chk@plt+0xe2c>
   11f04:	movw	r1, #33100	; 0x814c
   11f08:	movt	r1, #2
   11f0c:	str	r0, [r1]
   11f10:	bx	lr
   11f14:	movw	r1, #33104	; 0x8150
   11f18:	movt	r1, #2
   11f1c:	strb	r0, [r1]
   11f20:	bx	lr
   11f24:	push	{r4, r5, r6, sl, fp, lr}
   11f28:	add	fp, sp, #16
   11f2c:	sub	sp, sp, #8
   11f30:	movw	r0, #33092	; 0x8144
   11f34:	movt	r0, #2
   11f38:	ldr	r0, [r0]
   11f3c:	bl	1607c <__mempcpy_chk@plt+0x5094>
   11f40:	cmp	r0, #0
   11f44:	beq	11f6c <__mempcpy_chk@plt+0xf84>
   11f48:	movw	r0, #33104	; 0x8150
   11f4c:	movt	r0, #2
   11f50:	ldrb	r0, [r0]
   11f54:	cmp	r0, #0
   11f58:	beq	11f8c <__mempcpy_chk@plt+0xfa4>
   11f5c:	bl	10f1c <__errno_location@plt>
   11f60:	ldr	r0, [r0]
   11f64:	cmp	r0, #32
   11f68:	bne	11f8c <__mempcpy_chk@plt+0xfa4>
   11f6c:	movw	r0, #33088	; 0x8140
   11f70:	movt	r0, #2
   11f74:	ldr	r0, [r0]
   11f78:	bl	1607c <__mempcpy_chk@plt+0x5094>
   11f7c:	cmp	r0, #0
   11f80:	subeq	sp, fp, #16
   11f84:	popeq	{r4, r5, r6, sl, fp, pc}
   11f88:	b	11ffc <__mempcpy_chk@plt+0x1014>
   11f8c:	movw	r1, #28281	; 0x6e79
   11f90:	mov	r0, #0
   11f94:	mov	r2, #5
   11f98:	movt	r1, #1
   11f9c:	bl	10e20 <dcgettext@plt>
   11fa0:	mov	r4, r0
   11fa4:	movw	r0, #33100	; 0x814c
   11fa8:	movt	r0, #2
   11fac:	ldr	r6, [r0]
   11fb0:	bl	10f1c <__errno_location@plt>
   11fb4:	ldr	r5, [r0]
   11fb8:	cmp	r6, #0
   11fbc:	bne	11fd8 <__mempcpy_chk@plt+0xff0>
   11fc0:	movw	r2, #28297	; 0x6e89
   11fc4:	mov	r0, #0
   11fc8:	mov	r1, r5
   11fcc:	mov	r3, r4
   11fd0:	movt	r2, #1
   11fd4:	b	11ff8 <__mempcpy_chk@plt+0x1010>
   11fd8:	mov	r0, r6
   11fdc:	bl	14d0c <__mempcpy_chk@plt+0x3d24>
   11fe0:	movw	r2, #28293	; 0x6e85
   11fe4:	mov	r3, r0
   11fe8:	str	r4, [sp]
   11fec:	mov	r0, #0
   11ff0:	mov	r1, r5
   11ff4:	movt	r2, #1
   11ff8:	bl	10ea4 <error@plt>
   11ffc:	movw	r0, #33004	; 0x80ec
   12000:	movt	r0, #2
   12004:	ldr	r0, [r0]
   12008:	bl	10df0 <_exit@plt>
   1200c:	push	{r4, r5, r6, r7, fp, lr}
   12010:	add	fp, sp, #16
   12014:	cmp	r0, #0
   12018:	popeq	{r4, r5, r6, r7, fp, pc}
   1201c:	mov	r5, r0
   12020:	mov	r0, #24
   12024:	mov	r6, r2
   12028:	mov	r7, r1
   1202c:	bl	15a00 <__mempcpy_chk@plt+0x4a18>
   12030:	mov	r4, r0
   12034:	mov	r0, r7
   12038:	bl	15f20 <__mempcpy_chk@plt+0x4f38>
   1203c:	str	r0, [r4]
   12040:	ldrd	r0, [r6, #96]	; 0x60
   12044:	str	r1, [r4, #12]
   12048:	str	r0, [r4, #8]
   1204c:	ldrd	r0, [r6]
   12050:	str	r1, [r4, #20]
   12054:	str	r0, [r4, #16]
   12058:	mov	r0, r5
   1205c:	mov	r1, r4
   12060:	bl	130cc <__mempcpy_chk@plt+0x20e4>
   12064:	cmp	r0, #0
   12068:	beq	12084 <__mempcpy_chk@plt+0x109c>
   1206c:	cmp	r0, r4
   12070:	beq	12080 <__mempcpy_chk@plt+0x1098>
   12074:	mov	r0, r4
   12078:	pop	{r4, r5, r6, r7, fp, lr}
   1207c:	b	13440 <__mempcpy_chk@plt+0x2458>
   12080:	pop	{r4, r5, r6, r7, fp, pc}
   12084:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   12088:	cmp	r0, #0
   1208c:	moveq	r0, #0
   12090:	bxeq	lr
   12094:	push	{r4, r5, fp, lr}
   12098:	add	fp, sp, #8
   1209c:	sub	sp, sp, #24
   120a0:	str	r1, [sp]
   120a4:	mov	r1, sp
   120a8:	ldrd	r4, [r2, #96]	; 0x60
   120ac:	str	r5, [sp, #12]
   120b0:	str	r4, [sp, #8]
   120b4:	ldrd	r2, [r2]
   120b8:	str	r3, [sp, #20]
   120bc:	str	r2, [sp, #16]
   120c0:	bl	122d8 <__mempcpy_chk@plt+0x12f0>
   120c4:	cmp	r0, #0
   120c8:	movwne	r0, #1
   120cc:	sub	sp, fp, #8
   120d0:	pop	{r4, r5, fp, pc}
   120d4:	push	{r4, r5, r6, sl, fp, lr}
   120d8:	add	fp, sp, #16
   120dc:	mov	r4, r0
   120e0:	bl	10f1c <__errno_location@plt>
   120e4:	ldr	r6, [r0]
   120e8:	mov	r5, r0
   120ec:	mov	r0, r4
   120f0:	bl	10dd8 <free@plt>
   120f4:	str	r6, [r5]
   120f8:	pop	{r4, r5, r6, sl, fp, pc}
   120fc:	andeq	r0, r0, r0
   12100:	ldr	r0, [r0, #8]
   12104:	bx	lr
   12108:	ldr	r0, [r0, #12]
   1210c:	bx	lr
   12110:	ldr	r0, [r0, #16]
   12114:	bx	lr
   12118:	ldm	r0, {r2, ip}
   1211c:	mov	r0, #0
   12120:	cmp	r2, ip
   12124:	bxcs	lr
   12128:	mov	r0, #0
   1212c:	ldr	r1, [r2]
   12130:	cmp	r1, #0
   12134:	beq	12158 <__mempcpy_chk@plt+0x1170>
   12138:	mov	r3, #0
   1213c:	mov	r1, r2
   12140:	ldr	r1, [r1, #4]
   12144:	add	r3, r3, #1
   12148:	cmp	r1, #0
   1214c:	bne	12140 <__mempcpy_chk@plt+0x1158>
   12150:	cmp	r3, r0
   12154:	movhi	r0, r3
   12158:	add	r2, r2, #8
   1215c:	cmp	r2, ip
   12160:	bcc	1212c <__mempcpy_chk@plt+0x1144>
   12164:	bx	lr
   12168:	push	{fp, lr}
   1216c:	mov	fp, sp
   12170:	ldm	r0, {r3, ip}
   12174:	mov	lr, #0
   12178:	mov	r1, #0
   1217c:	cmp	r3, ip
   12180:	bcs	121bc <__mempcpy_chk@plt+0x11d4>
   12184:	mov	r1, #0
   12188:	mov	lr, #0
   1218c:	ldr	r2, [r3]
   12190:	cmp	r2, #0
   12194:	beq	121b0 <__mempcpy_chk@plt+0x11c8>
   12198:	mov	r2, r3
   1219c:	ldr	r2, [r2, #4]
   121a0:	add	r1, r1, #1
   121a4:	cmp	r2, #0
   121a8:	bne	1219c <__mempcpy_chk@plt+0x11b4>
   121ac:	add	lr, lr, #1
   121b0:	add	r3, r3, #8
   121b4:	cmp	r3, ip
   121b8:	bcc	1218c <__mempcpy_chk@plt+0x11a4>
   121bc:	ldr	r2, [r0, #12]
   121c0:	cmp	lr, r2
   121c4:	bne	121dc <__mempcpy_chk@plt+0x11f4>
   121c8:	ldr	r2, [r0, #16]
   121cc:	mov	r0, #1
   121d0:	cmp	r1, r2
   121d4:	movne	r0, #0
   121d8:	pop	{fp, pc}
   121dc:	mov	r0, #0
   121e0:	pop	{fp, pc}
   121e4:	nop	{0}
   121e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   121ec:	add	fp, sp, #24
   121f0:	sub	sp, sp, #8
   121f4:	ldr	r6, [r0]
   121f8:	ldmib	r0, {r2, r7, r8}
   121fc:	ldr	r3, [r0, #16]
   12200:	mov	r4, r1
   12204:	mov	r5, #0
   12208:	cmp	r6, r2
   1220c:	bcs	1224c <__mempcpy_chk@plt+0x1264>
   12210:	mov	r5, #0
   12214:	ldr	r0, [r6]
   12218:	cmp	r0, #0
   1221c:	beq	12240 <__mempcpy_chk@plt+0x1258>
   12220:	mov	r0, #0
   12224:	mov	r1, r6
   12228:	ldr	r1, [r1, #4]
   1222c:	add	r0, r0, #1
   12230:	cmp	r1, #0
   12234:	bne	12228 <__mempcpy_chk@plt+0x1240>
   12238:	cmp	r0, r5
   1223c:	movhi	r5, r0
   12240:	add	r6, r6, #8
   12244:	cmp	r6, r2
   12248:	bcc	12214 <__mempcpy_chk@plt+0x122c>
   1224c:	movw	r2, #28300	; 0x6e8c
   12250:	mov	r0, r4
   12254:	mov	r1, #1
   12258:	movt	r2, #1
   1225c:	bl	10f58 <__fprintf_chk@plt>
   12260:	movw	r2, #28324	; 0x6ea4
   12264:	mov	r0, r4
   12268:	mov	r1, #1
   1226c:	mov	r3, r7
   12270:	movt	r2, #1
   12274:	bl	10f58 <__fprintf_chk@plt>
   12278:	vldr	d16, [pc, #80]	; 122d0 <__mempcpy_chk@plt+0x12e8>
   1227c:	vmov	s0, r8
   12280:	movw	r2, #28348	; 0x6ebc
   12284:	mov	r0, r4
   12288:	mov	r1, #1
   1228c:	mov	r3, r8
   12290:	vcvt.f64.u32	d17, s0
   12294:	vmov	s0, r7
   12298:	movt	r2, #1
   1229c:	vcvt.f64.u32	d18, s0
   122a0:	vmul.f64	d16, d17, d16
   122a4:	vdiv.f64	d16, d16, d18
   122a8:	vstr	d16, [sp]
   122ac:	bl	10f58 <__fprintf_chk@plt>
   122b0:	movw	r2, #28381	; 0x6edd
   122b4:	mov	r0, r4
   122b8:	mov	r1, #1
   122bc:	mov	r3, r5
   122c0:	movt	r2, #1
   122c4:	sub	sp, fp, #24
   122c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   122cc:	b	10f58 <__fprintf_chk@plt>
   122d0:	andeq	r0, r0, r0
   122d4:	subsmi	r0, r9, r0
   122d8:	push	{r4, r5, r6, r7, fp, lr}
   122dc:	add	fp, sp, #16
   122e0:	mov	r4, r1
   122e4:	ldr	r1, [r0, #8]
   122e8:	ldr	r2, [r0, #24]
   122ec:	mov	r5, r0
   122f0:	mov	r0, r4
   122f4:	blx	r2
   122f8:	ldr	r1, [r5, #8]
   122fc:	cmp	r0, r1
   12300:	bcs	1236c <__mempcpy_chk@plt+0x1384>
   12304:	ldr	r7, [r5]
   12308:	mov	r6, #0
   1230c:	ldr	r1, [r7, r0, lsl #3]!
   12310:	cmp	r1, #0
   12314:	cmpne	r7, #0
   12318:	bne	12328 <__mempcpy_chk@plt+0x1340>
   1231c:	mov	r0, r6
   12320:	pop	{r4, r5, r6, r7, fp, pc}
   12324:	ldr	r1, [r7]
   12328:	cmp	r1, r4
   1232c:	beq	12354 <__mempcpy_chk@plt+0x136c>
   12330:	ldr	r2, [r5, #28]
   12334:	mov	r0, r4
   12338:	blx	r2
   1233c:	cmp	r0, #0
   12340:	bne	12360 <__mempcpy_chk@plt+0x1378>
   12344:	ldr	r7, [r7, #4]
   12348:	cmp	r7, #0
   1234c:	bne	12324 <__mempcpy_chk@plt+0x133c>
   12350:	b	1231c <__mempcpy_chk@plt+0x1334>
   12354:	mov	r6, r4
   12358:	mov	r0, r6
   1235c:	pop	{r4, r5, r6, r7, fp, pc}
   12360:	ldr	r6, [r7]
   12364:	mov	r0, r6
   12368:	pop	{r4, r5, r6, r7, fp, pc}
   1236c:	bl	10fd0 <abort@plt>
   12370:	ldr	r1, [r0, #16]
   12374:	cmp	r1, #0
   12378:	moveq	r0, #0
   1237c:	bxeq	lr
   12380:	ldm	r0, {r1, r2}
   12384:	cmp	r1, r2
   12388:	bcs	123a0 <__mempcpy_chk@plt+0x13b8>
   1238c:	ldr	r0, [r1], #8
   12390:	cmp	r0, #0
   12394:	bxne	lr
   12398:	cmp	r1, r2
   1239c:	bcc	1238c <__mempcpy_chk@plt+0x13a4>
   123a0:	push	{fp, lr}
   123a4:	mov	fp, sp
   123a8:	bl	10fd0 <abort@plt>
   123ac:	push	{r4, r5, fp, lr}
   123b0:	add	fp, sp, #8
   123b4:	mov	r5, r1
   123b8:	ldr	r1, [r0, #8]
   123bc:	ldr	r2, [r0, #24]
   123c0:	mov	r4, r0
   123c4:	mov	r0, r5
   123c8:	blx	r2
   123cc:	ldr	r1, [r4, #8]
   123d0:	cmp	r0, r1
   123d4:	bcs	12430 <__mempcpy_chk@plt+0x1448>
   123d8:	ldr	r1, [r4]
   123dc:	add	r2, r1, r0, lsl #3
   123e0:	ldr	r3, [r2]
   123e4:	ldr	r2, [r2, #4]
   123e8:	cmp	r3, r5
   123ec:	beq	123fc <__mempcpy_chk@plt+0x1414>
   123f0:	cmp	r2, #0
   123f4:	bne	123e0 <__mempcpy_chk@plt+0x13f8>
   123f8:	b	12408 <__mempcpy_chk@plt+0x1420>
   123fc:	cmp	r2, #0
   12400:	ldrne	r0, [r2]
   12404:	popne	{r4, r5, fp, pc}
   12408:	ldr	r2, [r4, #4]
   1240c:	add	r0, r1, r0, lsl #3
   12410:	add	r1, r0, #8
   12414:	cmp	r1, r2
   12418:	movcs	r0, #0
   1241c:	popcs	{r4, r5, fp, pc}
   12420:	ldr	r0, [r1], #8
   12424:	cmp	r0, #0
   12428:	popne	{r4, r5, fp, pc}
   1242c:	b	12414 <__mempcpy_chk@plt+0x142c>
   12430:	bl	10fd0 <abort@plt>
   12434:	push	{r4, r5, fp, lr}
   12438:	add	fp, sp, #8
   1243c:	ldm	r0, {r5, lr}
   12440:	mov	ip, r0
   12444:	mov	r0, #0
   12448:	cmp	r5, lr
   1244c:	bcs	12498 <__mempcpy_chk@plt+0x14b0>
   12450:	mov	r0, #0
   12454:	ldr	r3, [r5]
   12458:	cmp	r3, #0
   1245c:	cmpne	r5, #0
   12460:	beq	1248c <__mempcpy_chk@plt+0x14a4>
   12464:	mov	r3, r5
   12468:	cmp	r0, r2
   1246c:	popcs	{r4, r5, fp, pc}
   12470:	ldr	r4, [r3]
   12474:	str	r4, [r1, r0, lsl #2]
   12478:	add	r0, r0, #1
   1247c:	ldr	r3, [r3, #4]
   12480:	cmp	r3, #0
   12484:	bne	12468 <__mempcpy_chk@plt+0x1480>
   12488:	ldr	lr, [ip, #4]
   1248c:	add	r5, r5, #8
   12490:	cmp	r5, lr
   12494:	bcc	12454 <__mempcpy_chk@plt+0x146c>
   12498:	pop	{r4, r5, fp, pc}
   1249c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   124a0:	add	fp, sp, #24
   124a4:	mov	r5, r1
   124a8:	ldr	r4, [r0]
   124ac:	ldr	r1, [r0, #4]
   124b0:	mov	r6, #0
   124b4:	cmp	r4, r1
   124b8:	bcs	1252c <__mempcpy_chk@plt+0x1544>
   124bc:	mov	r9, r2
   124c0:	mov	r8, r0
   124c4:	mov	r6, #0
   124c8:	b	12510 <__mempcpy_chk@plt+0x1528>
   124cc:	mov	r1, r9
   124d0:	blx	r5
   124d4:	cmp	r0, #0
   124d8:	beq	1252c <__mempcpy_chk@plt+0x1544>
   124dc:	mov	r7, r4
   124e0:	ldr	r7, [r7, #4]
   124e4:	add	r6, r6, #1
   124e8:	cmp	r7, #0
   124ec:	beq	12508 <__mempcpy_chk@plt+0x1520>
   124f0:	ldr	r0, [r7]
   124f4:	mov	r1, r9
   124f8:	blx	r5
   124fc:	cmp	r0, #0
   12500:	bne	124e0 <__mempcpy_chk@plt+0x14f8>
   12504:	b	1252c <__mempcpy_chk@plt+0x1544>
   12508:	ldr	r1, [r8, #4]
   1250c:	b	12520 <__mempcpy_chk@plt+0x1538>
   12510:	ldr	r0, [r4]
   12514:	cmp	r0, #0
   12518:	cmpne	r4, #0
   1251c:	bne	124cc <__mempcpy_chk@plt+0x14e4>
   12520:	add	r4, r4, #8
   12524:	cmp	r4, r1
   12528:	bcc	12510 <__mempcpy_chk@plt+0x1528>
   1252c:	mov	r0, r6
   12530:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12534:	ldrb	r2, [r0]
   12538:	cmp	r2, #0
   1253c:	moveq	r0, #0
   12540:	bxeq	lr
   12544:	add	r3, r0, #1
   12548:	mov	r0, #0
   1254c:	rsb	r0, r0, r0, lsl #5
   12550:	uxtab	r0, r0, r2
   12554:	udiv	r2, r0, r1
   12558:	mls	r0, r2, r1, r0
   1255c:	ldrb	r2, [r3], #1
   12560:	cmp	r2, #0
   12564:	bne	1254c <__mempcpy_chk@plt+0x1564>
   12568:	bx	lr
   1256c:	movw	r1, #28408	; 0x6ef8
   12570:	movt	r1, #1
   12574:	vld1.32	{d16-d17}, [r1]!
   12578:	ldr	r1, [r1]
   1257c:	vst1.32	{d16-d17}, [r0]!
   12580:	str	r1, [r0]
   12584:	bx	lr
   12588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1258c:	add	fp, sp, #24
   12590:	movw	r9, #10160	; 0x27b0
   12594:	movw	r5, #10140	; 0x279c
   12598:	cmp	r3, #0
   1259c:	mov	r6, r0
   125a0:	mov	r0, #40	; 0x28
   125a4:	mov	r7, r1
   125a8:	movt	r9, #1
   125ac:	movt	r5, #1
   125b0:	movne	r9, r3
   125b4:	cmp	r2, #0
   125b8:	movne	r5, r2
   125bc:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   125c0:	mov	r8, #0
   125c4:	cmp	r0, #0
   125c8:	beq	12784 <__mempcpy_chk@plt+0x179c>
   125cc:	mov	r4, r0
   125d0:	movw	r0, #28408	; 0x6ef8
   125d4:	cmp	r7, #0
   125d8:	movt	r0, #1
   125dc:	moveq	r7, r0
   125e0:	cmp	r7, r0
   125e4:	str	r7, [r4, #20]
   125e8:	beq	12664 <__mempcpy_chk@plt+0x167c>
   125ec:	vldr	s2, [pc, #408]	; 1278c <__mempcpy_chk@plt+0x17a4>
   125f0:	vldr	s0, [r7, #8]
   125f4:	vcmpe.f32	s0, s2
   125f8:	vmrs	APSR_nzcv, fpscr
   125fc:	ble	12710 <__mempcpy_chk@plt+0x1728>
   12600:	vldr	s4, [pc, #392]	; 12790 <__mempcpy_chk@plt+0x17a8>
   12604:	vcmpe.f32	s0, s4
   12608:	vmrs	APSR_nzcv, fpscr
   1260c:	bpl	12710 <__mempcpy_chk@plt+0x1728>
   12610:	vldr	s4, [pc, #380]	; 12794 <__mempcpy_chk@plt+0x17ac>
   12614:	vldr	s6, [r7, #12]
   12618:	vcmpe.f32	s6, s4
   1261c:	vmrs	APSR_nzcv, fpscr
   12620:	ble	12710 <__mempcpy_chk@plt+0x1728>
   12624:	vldr	s4, [r7]
   12628:	vcmpe.f32	s4, #0.0
   1262c:	vmrs	APSR_nzcv, fpscr
   12630:	blt	12710 <__mempcpy_chk@plt+0x1728>
   12634:	vadd.f32	s2, s4, s2
   12638:	vcmpe.f32	s2, s0
   1263c:	vmrs	APSR_nzcv, fpscr
   12640:	bpl	12710 <__mempcpy_chk@plt+0x1728>
   12644:	vldr	s0, [r7, #4]
   12648:	vmov.f32	s4, #112	; 0x3f800000  1.0
   1264c:	vcmpe.f32	s0, s4
   12650:	vmrs	APSR_nzcv, fpscr
   12654:	bhi	12710 <__mempcpy_chk@plt+0x1728>
   12658:	vcmpe.f32	s2, s0
   1265c:	vmrs	APSR_nzcv, fpscr
   12660:	bpl	12710 <__mempcpy_chk@plt+0x1728>
   12664:	ldrb	r0, [r7, #16]
   12668:	cmp	r0, #0
   1266c:	bne	12698 <__mempcpy_chk@plt+0x16b0>
   12670:	vldr	s0, [r7, #8]
   12674:	vldr	s4, [pc, #284]	; 12798 <__mempcpy_chk@plt+0x17b0>
   12678:	vmov	s2, r6
   1267c:	vcvt.f32.u32	s2, s2
   12680:	vdiv.f32	s2, s2, s0
   12684:	vcmpe.f32	s2, s4
   12688:	vcvt.u32.f32	s0, s2
   1268c:	vmrs	APSR_nzcv, fpscr
   12690:	bge	12720 <__mempcpy_chk@plt+0x1738>
   12694:	vmov	r6, s0
   12698:	cmp	r6, #10
   1269c:	movls	r6, #10
   126a0:	orr	r0, r6, #1
   126a4:	cmn	r0, #1
   126a8:	beq	12720 <__mempcpy_chk@plt+0x1738>
   126ac:	ldr	r6, [fp, #8]
   126b0:	mov	r1, #3
   126b4:	cmp	r0, #10
   126b8:	bcc	126f0 <__mempcpy_chk@plt+0x1708>
   126bc:	mov	r1, #3
   126c0:	mov	r3, #9
   126c4:	mov	r2, #12
   126c8:	udiv	r7, r0, r1
   126cc:	mls	r7, r7, r1, r0
   126d0:	cmp	r7, #0
   126d4:	beq	126f0 <__mempcpy_chk@plt+0x1708>
   126d8:	add	r3, r3, r2
   126dc:	add	r2, r2, #8
   126e0:	add	r1, r1, #2
   126e4:	add	r3, r3, #4
   126e8:	cmp	r3, r0
   126ec:	bcc	126c8 <__mempcpy_chk@plt+0x16e0>
   126f0:	udiv	r2, r0, r1
   126f4:	mls	r1, r2, r1, r0
   126f8:	cmp	r1, #0
   126fc:	bne	12718 <__mempcpy_chk@plt+0x1730>
   12700:	add	r0, r0, #2
   12704:	cmn	r0, #1
   12708:	bne	126b0 <__mempcpy_chk@plt+0x16c8>
   1270c:	b	12720 <__mempcpy_chk@plt+0x1738>
   12710:	str	r0, [r4, #20]
   12714:	b	12728 <__mempcpy_chk@plt+0x1740>
   12718:	cmp	r0, #536870912	; 0x20000000
   1271c:	bcc	12738 <__mempcpy_chk@plt+0x1750>
   12720:	mov	r0, #0
   12724:	str	r0, [r4, #8]
   12728:	mov	r0, r4
   1272c:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   12730:	mov	r0, r8
   12734:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12738:	cmp	r0, #0
   1273c:	str	r0, [r4, #8]
   12740:	beq	12728 <__mempcpy_chk@plt+0x1740>
   12744:	mov	r1, #8
   12748:	bl	15fa4 <__mempcpy_chk@plt+0x4fbc>
   1274c:	cmp	r0, #0
   12750:	str	r0, [r4]
   12754:	beq	12728 <__mempcpy_chk@plt+0x1740>
   12758:	mov	r1, #0
   1275c:	mov	r8, r4
   12760:	str	r1, [r4, #12]
   12764:	str	r1, [r4, #16]
   12768:	str	r5, [r4, #24]
   1276c:	str	r9, [r4, #28]
   12770:	str	r6, [r4, #32]
   12774:	str	r1, [r4, #36]	; 0x24
   12778:	ldr	r1, [r4, #8]
   1277c:	add	r0, r0, r1, lsl #3
   12780:	str	r0, [r4, #4]
   12784:	mov	r0, r8
   12788:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1278c:	stclcc	12, cr12, [ip, #820]	; 0x334
   12790:	svccc	0x00666666
   12794:	svccc	0x008ccccd
   12798:	svcmi	0x00800000
   1279c:	ror	r2, r0, #3
   127a0:	udiv	r2, r2, r1
   127a4:	mul	r1, r2, r1
   127a8:	rsb	r0, r1, r0, ror #3
   127ac:	bx	lr
   127b0:	sub	r0, r0, r1
   127b4:	clz	r0, r0
   127b8:	lsr	r0, r0, #5
   127bc:	bx	lr
   127c0:	push	{r4, r5, r6, r7, fp, lr}
   127c4:	add	fp, sp, #16
   127c8:	mov	r4, r0
   127cc:	ldr	r5, [r0]
   127d0:	ldr	r0, [r0, #4]
   127d4:	cmp	r5, r0
   127d8:	bcs	12870 <__mempcpy_chk@plt+0x1888>
   127dc:	mov	r6, #0
   127e0:	ldr	r1, [r5]
   127e4:	cmp	r1, #0
   127e8:	beq	12864 <__mempcpy_chk@plt+0x187c>
   127ec:	ldr	r1, [r4, #32]
   127f0:	ldr	r7, [r5, #4]
   127f4:	cmp	r1, #0
   127f8:	mov	r0, r1
   127fc:	movwne	r0, #1
   12800:	cmp	r7, #0
   12804:	beq	12848 <__mempcpy_chk@plt+0x1860>
   12808:	tst	r0, #1
   1280c:	beq	1281c <__mempcpy_chk@plt+0x1834>
   12810:	ldr	r0, [r7]
   12814:	blx	r1
   12818:	ldr	r1, [r4, #32]
   1281c:	str	r6, [r7]
   12820:	cmp	r1, #0
   12824:	ldr	r0, [r4, #36]	; 0x24
   12828:	ldr	r2, [r7, #4]
   1282c:	str	r0, [r7, #4]
   12830:	mov	r0, r1
   12834:	str	r7, [r4, #36]	; 0x24
   12838:	mov	r7, r2
   1283c:	movwne	r0, #1
   12840:	cmp	r2, #0
   12844:	bne	12808 <__mempcpy_chk@plt+0x1820>
   12848:	cmp	r0, #0
   1284c:	beq	12858 <__mempcpy_chk@plt+0x1870>
   12850:	ldr	r0, [r5]
   12854:	blx	r1
   12858:	str	r6, [r5]
   1285c:	str	r6, [r5, #4]
   12860:	ldr	r0, [r4, #4]
   12864:	add	r5, r5, #8
   12868:	cmp	r5, r0
   1286c:	bcc	127e0 <__mempcpy_chk@plt+0x17f8>
   12870:	mov	r0, #0
   12874:	str	r0, [r4, #12]
   12878:	str	r0, [r4, #16]
   1287c:	pop	{r4, r5, r6, r7, fp, pc}
   12880:	push	{r4, r5, r6, sl, fp, lr}
   12884:	add	fp, sp, #16
   12888:	mov	r4, r0
   1288c:	ldr	r0, [r0, #32]
   12890:	cmp	r0, #0
   12894:	ldrne	r0, [r4, #16]
   12898:	cmpne	r0, #0
   1289c:	beq	12904 <__mempcpy_chk@plt+0x191c>
   128a0:	ldr	r5, [r4]
   128a4:	ldr	r1, [r4, #4]
   128a8:	cmp	r5, r1
   128ac:	bcc	128c0 <__mempcpy_chk@plt+0x18d8>
   128b0:	b	12904 <__mempcpy_chk@plt+0x191c>
   128b4:	add	r5, r5, #8
   128b8:	cmp	r5, r1
   128bc:	bcs	12904 <__mempcpy_chk@plt+0x191c>
   128c0:	ldr	r0, [r5]
   128c4:	cmp	r0, #0
   128c8:	cmpne	r5, #0
   128cc:	beq	128b4 <__mempcpy_chk@plt+0x18cc>
   128d0:	ldr	r1, [r4, #32]
   128d4:	blx	r1
   128d8:	ldr	r6, [r5, #4]
   128dc:	cmp	r6, #0
   128e0:	beq	128fc <__mempcpy_chk@plt+0x1914>
   128e4:	ldr	r1, [r4, #32]
   128e8:	ldr	r0, [r6]
   128ec:	blx	r1
   128f0:	ldr	r6, [r6, #4]
   128f4:	cmp	r6, #0
   128f8:	bne	128e4 <__mempcpy_chk@plt+0x18fc>
   128fc:	ldr	r1, [r4, #4]
   12900:	b	128b4 <__mempcpy_chk@plt+0x18cc>
   12904:	ldr	r5, [r4]
   12908:	ldr	r1, [r4, #4]
   1290c:	cmp	r5, r1
   12910:	bcc	12924 <__mempcpy_chk@plt+0x193c>
   12914:	b	1294c <__mempcpy_chk@plt+0x1964>
   12918:	add	r5, r5, #8
   1291c:	cmp	r5, r1
   12920:	bcs	1294c <__mempcpy_chk@plt+0x1964>
   12924:	ldr	r0, [r5, #4]
   12928:	cmp	r0, #0
   1292c:	beq	12918 <__mempcpy_chk@plt+0x1930>
   12930:	ldr	r6, [r0, #4]
   12934:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   12938:	cmp	r6, #0
   1293c:	mov	r0, r6
   12940:	bne	12930 <__mempcpy_chk@plt+0x1948>
   12944:	ldr	r1, [r4, #4]
   12948:	b	12918 <__mempcpy_chk@plt+0x1930>
   1294c:	ldr	r0, [r4, #36]	; 0x24
   12950:	cmp	r0, #0
   12954:	beq	1296c <__mempcpy_chk@plt+0x1984>
   12958:	ldr	r5, [r0, #4]
   1295c:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   12960:	cmp	r5, #0
   12964:	mov	r0, r5
   12968:	bne	12958 <__mempcpy_chk@plt+0x1970>
   1296c:	ldr	r0, [r4]
   12970:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   12974:	mov	r0, r4
   12978:	pop	{r4, r5, r6, sl, fp, lr}
   1297c:	b	120d4 <__mempcpy_chk@plt+0x10ec>
   12980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12984:	add	fp, sp, #28
   12988:	sub	sp, sp, #44	; 0x2c
   1298c:	mov	r7, r0
   12990:	mov	r4, r0
   12994:	ldr	r0, [r7, #20]!
   12998:	ldrb	r2, [r0, #16]
   1299c:	cmp	r2, #0
   129a0:	bne	129d0 <__mempcpy_chk@plt+0x19e8>
   129a4:	vldr	s0, [r0, #8]
   129a8:	vldr	s4, [pc, #560]	; 12be0 <__mempcpy_chk@plt+0x1bf8>
   129ac:	vmov	s2, r1
   129b0:	mov	r5, #0
   129b4:	vcvt.f32.u32	s2, s2
   129b8:	vdiv.f32	s2, s2, s0
   129bc:	vcmpe.f32	s2, s4
   129c0:	vcvt.u32.f32	s0, s2
   129c4:	vmrs	APSR_nzcv, fpscr
   129c8:	bge	12bd0 <__mempcpy_chk@plt+0x1be8>
   129cc:	vmov	r1, s0
   129d0:	cmp	r1, #10
   129d4:	mov	r5, #0
   129d8:	movls	r1, #10
   129dc:	orr	r6, r1, #1
   129e0:	cmn	r6, #1
   129e4:	bne	129f8 <__mempcpy_chk@plt+0x1a10>
   129e8:	b	12bd0 <__mempcpy_chk@plt+0x1be8>
   129ec:	add	r6, r6, #2
   129f0:	cmn	r6, #1
   129f4:	beq	12bd0 <__mempcpy_chk@plt+0x1be8>
   129f8:	mov	r0, #3
   129fc:	cmp	r6, #10
   12a00:	bcc	12a38 <__mempcpy_chk@plt+0x1a50>
   12a04:	mov	r0, #3
   12a08:	mov	r2, #9
   12a0c:	mov	r1, #12
   12a10:	udiv	r3, r6, r0
   12a14:	mls	r3, r3, r0, r6
   12a18:	cmp	r3, #0
   12a1c:	beq	12a38 <__mempcpy_chk@plt+0x1a50>
   12a20:	add	r2, r2, r1
   12a24:	add	r1, r1, #8
   12a28:	add	r0, r0, #2
   12a2c:	add	r2, r2, #4
   12a30:	cmp	r2, r6
   12a34:	bcc	12a10 <__mempcpy_chk@plt+0x1a28>
   12a38:	udiv	r1, r6, r0
   12a3c:	mls	r0, r1, r0, r6
   12a40:	cmp	r0, #0
   12a44:	beq	129ec <__mempcpy_chk@plt+0x1a04>
   12a48:	sub	r0, r6, #1
   12a4c:	cmn	r0, #-536870910	; 0xe0000002
   12a50:	bhi	12bd0 <__mempcpy_chk@plt+0x1be8>
   12a54:	ldr	r0, [r4, #8]
   12a58:	cmp	r6, r0
   12a5c:	bne	12a68 <__mempcpy_chk@plt+0x1a80>
   12a60:	mov	r5, #1
   12a64:	b	12bd0 <__mempcpy_chk@plt+0x1be8>
   12a68:	mov	r0, r6
   12a6c:	mov	r1, #8
   12a70:	bl	15fa4 <__mempcpy_chk@plt+0x4fbc>
   12a74:	cmp	r0, #0
   12a78:	str	r0, [sp, #4]
   12a7c:	beq	12bd0 <__mempcpy_chk@plt+0x1be8>
   12a80:	mov	r1, #0
   12a84:	add	r0, r0, r6, lsl #3
   12a88:	str	r6, [sp, #12]
   12a8c:	add	r5, sp, #4
   12a90:	mov	sl, r4
   12a94:	mov	r2, #0
   12a98:	str	r1, [sp, #16]
   12a9c:	str	r1, [sp, #20]
   12aa0:	str	r0, [sp, #8]
   12aa4:	add	r0, r5, #20
   12aa8:	mov	r1, r4
   12aac:	vld1.32	{d16-d17}, [r7]
   12ab0:	vst1.32	{d16-d17}, [r0]
   12ab4:	ldr	r0, [sl, #36]!	; 0x24
   12ab8:	str	r0, [sp, #40]	; 0x28
   12abc:	mov	r0, r5
   12ac0:	bl	12be4 <__mempcpy_chk@plt+0x1bfc>
   12ac4:	cmp	r0, #0
   12ac8:	beq	12af0 <__mempcpy_chk@plt+0x1b08>
   12acc:	ldr	r0, [r4]
   12ad0:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   12ad4:	mov	r0, #36	; 0x24
   12ad8:	vld1.32	{d16-d17}, [r5], r0
   12adc:	vst1.32	{d16-d17}, [r4], r0
   12ae0:	ldr	r0, [r5]
   12ae4:	mov	r5, #1
   12ae8:	str	r0, [r4]
   12aec:	b	12bd0 <__mempcpy_chk@plt+0x1be8>
   12af0:	ldr	r0, [sp, #40]	; 0x28
   12af4:	str	r0, [sl]
   12af8:	ldr	r0, [sp, #8]
   12afc:	ldr	r8, [sp, #4]
   12b00:	cmp	r8, r0
   12b04:	str	r0, [sp]
   12b08:	bcs	12bac <__mempcpy_chk@plt+0x1bc4>
   12b0c:	mov	r9, #0
   12b10:	ldr	r0, [r8]
   12b14:	cmp	r0, #0
   12b18:	beq	12b9c <__mempcpy_chk@plt+0x1bb4>
   12b1c:	ldr	r6, [r8, #4]
   12b20:	cmp	r6, #0
   12b24:	beq	12b98 <__mempcpy_chk@plt+0x1bb0>
   12b28:	ldr	r1, [r4, #8]
   12b2c:	ldr	r5, [r6]
   12b30:	ldr	r2, [r4, #24]
   12b34:	mov	r0, r5
   12b38:	blx	r2
   12b3c:	ldr	r1, [r4, #8]
   12b40:	cmp	r0, r1
   12b44:	bcs	12bdc <__mempcpy_chk@plt+0x1bf4>
   12b48:	ldr	r3, [r4]
   12b4c:	ldr	r2, [r6, #4]
   12b50:	ldr	r7, [r3, r0, lsl #3]
   12b54:	cmp	r7, #0
   12b58:	beq	12b68 <__mempcpy_chk@plt+0x1b80>
   12b5c:	add	r0, r3, r0, lsl #3
   12b60:	add	r0, r0, #4
   12b64:	b	12b80 <__mempcpy_chk@plt+0x1b98>
   12b68:	str	r5, [r3, r0, lsl #3]
   12b6c:	ldr	r0, [r4, #12]
   12b70:	add	r0, r0, #1
   12b74:	str	r0, [r4, #12]
   12b78:	mov	r0, sl
   12b7c:	str	r9, [r6]
   12b80:	ldr	r3, [r0]
   12b84:	cmp	r2, #0
   12b88:	str	r3, [r6, #4]
   12b8c:	str	r6, [r0]
   12b90:	mov	r6, r2
   12b94:	bne	12b2c <__mempcpy_chk@plt+0x1b44>
   12b98:	str	r9, [r8, #4]
   12b9c:	ldr	r0, [sp]
   12ba0:	add	r8, r8, #8
   12ba4:	cmp	r8, r0
   12ba8:	bcc	12b10 <__mempcpy_chk@plt+0x1b28>
   12bac:	add	r1, sp, #4
   12bb0:	mov	r0, r4
   12bb4:	mov	r2, #0
   12bb8:	mov	r5, #0
   12bbc:	bl	12be4 <__mempcpy_chk@plt+0x1bfc>
   12bc0:	cmp	r0, #0
   12bc4:	beq	12bdc <__mempcpy_chk@plt+0x1bf4>
   12bc8:	ldr	r0, [sp, #4]
   12bcc:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   12bd0:	mov	r0, r5
   12bd4:	sub	sp, fp, #28
   12bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bdc:	bl	10fd0 <abort@plt>
   12be0:	svcmi	0x00800000
   12be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12be8:	add	fp, sp, #28
   12bec:	sub	sp, sp, #12
   12bf0:	ldr	sl, [r1]
   12bf4:	str	r1, [sp, #8]
   12bf8:	ldr	r1, [r1, #4]
   12bfc:	mov	r7, r0
   12c00:	mov	r0, #1
   12c04:	str	r2, [sp, #4]
   12c08:	cmp	sl, r1
   12c0c:	bcs	12d68 <__mempcpy_chk@plt+0x1d80>
   12c10:	add	r8, r7, #36	; 0x24
   12c14:	mov	r9, #0
   12c18:	ldr	r4, [sl]
   12c1c:	cmp	r4, #0
   12c20:	beq	12d50 <__mempcpy_chk@plt+0x1d68>
   12c24:	ldr	r5, [sl, #4]
   12c28:	cmp	r5, #0
   12c2c:	beq	12ca4 <__mempcpy_chk@plt+0x1cbc>
   12c30:	ldr	r1, [r7, #8]
   12c34:	ldr	r4, [r5]
   12c38:	ldr	r2, [r7, #24]
   12c3c:	mov	r0, r4
   12c40:	blx	r2
   12c44:	ldr	r1, [r7, #8]
   12c48:	cmp	r0, r1
   12c4c:	bcs	12d7c <__mempcpy_chk@plt+0x1d94>
   12c50:	ldr	r3, [r7]
   12c54:	ldr	r2, [r5, #4]
   12c58:	ldr	r6, [r3, r0, lsl #3]
   12c5c:	cmp	r6, #0
   12c60:	beq	12c70 <__mempcpy_chk@plt+0x1c88>
   12c64:	add	r0, r3, r0, lsl #3
   12c68:	add	r0, r0, #4
   12c6c:	b	12c88 <__mempcpy_chk@plt+0x1ca0>
   12c70:	str	r4, [r3, r0, lsl #3]
   12c74:	ldr	r0, [r7, #12]
   12c78:	add	r0, r0, #1
   12c7c:	str	r0, [r7, #12]
   12c80:	mov	r0, r8
   12c84:	str	r9, [r5]
   12c88:	ldr	r3, [r0]
   12c8c:	cmp	r2, #0
   12c90:	str	r3, [r5, #4]
   12c94:	str	r5, [r0]
   12c98:	mov	r5, r2
   12c9c:	bne	12c34 <__mempcpy_chk@plt+0x1c4c>
   12ca0:	ldr	r4, [sl]
   12ca4:	ldr	r0, [sp, #4]
   12ca8:	str	r9, [sl, #4]
   12cac:	cmp	r0, #0
   12cb0:	bne	12d50 <__mempcpy_chk@plt+0x1d68>
   12cb4:	ldr	r1, [r7, #8]
   12cb8:	ldr	r2, [r7, #24]
   12cbc:	mov	r0, r4
   12cc0:	blx	r2
   12cc4:	mov	r5, r0
   12cc8:	ldr	r0, [r7, #8]
   12ccc:	cmp	r5, r0
   12cd0:	bcs	12d7c <__mempcpy_chk@plt+0x1d94>
   12cd4:	ldr	r6, [r7]
   12cd8:	ldr	r0, [r6, r5, lsl #3]
   12cdc:	cmp	r0, #0
   12ce0:	beq	12d00 <__mempcpy_chk@plt+0x1d18>
   12ce4:	ldr	r0, [r8]
   12ce8:	cmp	r0, #0
   12cec:	beq	12d14 <__mempcpy_chk@plt+0x1d2c>
   12cf0:	mov	r1, r0
   12cf4:	ldr	r2, [r1, #4]!
   12cf8:	str	r2, [r8]
   12cfc:	b	12d28 <__mempcpy_chk@plt+0x1d40>
   12d00:	str	r4, [r6, r5, lsl #3]
   12d04:	ldr	r0, [r7, #12]
   12d08:	add	r0, r0, #1
   12d0c:	str	r0, [r7, #12]
   12d10:	b	12d3c <__mempcpy_chk@plt+0x1d54>
   12d14:	mov	r0, #8
   12d18:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   12d1c:	cmp	r0, #0
   12d20:	beq	12d70 <__mempcpy_chk@plt+0x1d88>
   12d24:	add	r1, r0, #4
   12d28:	str	r4, [r0]
   12d2c:	add	r2, r6, r5, lsl #3
   12d30:	ldr	r3, [r2, #4]
   12d34:	str	r3, [r1]
   12d38:	str	r0, [r2, #4]
   12d3c:	ldr	r1, [sp, #8]
   12d40:	str	r9, [sl]
   12d44:	ldr	r0, [r1, #12]
   12d48:	sub	r0, r0, #1
   12d4c:	str	r0, [r1, #12]
   12d50:	ldr	r0, [sp, #8]
   12d54:	add	sl, sl, #8
   12d58:	ldr	r0, [r0, #4]
   12d5c:	cmp	sl, r0
   12d60:	bcc	12c18 <__mempcpy_chk@plt+0x1c30>
   12d64:	mov	r0, #1
   12d68:	sub	sp, fp, #28
   12d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d70:	mov	r0, #0
   12d74:	sub	sp, fp, #28
   12d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d7c:	bl	10fd0 <abort@plt>
   12d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d84:	add	fp, sp, #28
   12d88:	sub	sp, sp, #4
   12d8c:	cmp	r1, #0
   12d90:	beq	130b4 <__mempcpy_chk@plt+0x20cc>
   12d94:	mov	r8, r2
   12d98:	mov	sl, r1
   12d9c:	ldr	r1, [r0, #8]
   12da0:	ldr	r2, [r0, #24]
   12da4:	mov	r4, r0
   12da8:	mov	r0, sl
   12dac:	blx	r2
   12db0:	mov	r7, r0
   12db4:	ldr	r0, [r4, #8]
   12db8:	cmp	r7, r0
   12dbc:	bcs	130b4 <__mempcpy_chk@plt+0x20cc>
   12dc0:	ldr	r5, [r4]
   12dc4:	mov	r9, r5
   12dc8:	ldr	r1, [r9, r7, lsl #3]!
   12dcc:	cmp	r1, #0
   12dd0:	beq	12e5c <__mempcpy_chk@plt+0x1e74>
   12dd4:	cmp	r1, sl
   12dd8:	beq	12e04 <__mempcpy_chk@plt+0x1e1c>
   12ddc:	ldr	r2, [r4, #28]
   12de0:	mov	r0, sl
   12de4:	blx	r2
   12de8:	cmp	r0, #0
   12dec:	mov	r6, r9
   12df0:	beq	12e18 <__mempcpy_chk@plt+0x1e30>
   12df4:	ldr	r0, [r6]
   12df8:	cmp	r0, #0
   12dfc:	bne	12e08 <__mempcpy_chk@plt+0x1e20>
   12e00:	b	12e5c <__mempcpy_chk@plt+0x1e74>
   12e04:	mov	r0, sl
   12e08:	cmp	r8, #0
   12e0c:	mov	r7, #0
   12e10:	strne	r0, [r8]
   12e14:	b	13050 <__mempcpy_chk@plt+0x2068>
   12e18:	add	r6, r5, r7, lsl #3
   12e1c:	ldr	r0, [r6, #4]!
   12e20:	cmp	r0, #0
   12e24:	beq	12e5c <__mempcpy_chk@plt+0x1e74>
   12e28:	ldr	r1, [r0]
   12e2c:	cmp	r1, sl
   12e30:	beq	12e50 <__mempcpy_chk@plt+0x1e68>
   12e34:	ldr	r2, [r4, #28]
   12e38:	mov	r0, sl
   12e3c:	blx	r2
   12e40:	ldr	r6, [r6]
   12e44:	cmp	r0, #0
   12e48:	beq	12e1c <__mempcpy_chk@plt+0x1e34>
   12e4c:	b	12df4 <__mempcpy_chk@plt+0x1e0c>
   12e50:	mov	r0, sl
   12e54:	cmp	r0, #0
   12e58:	bne	12e08 <__mempcpy_chk@plt+0x1e20>
   12e5c:	vldr	s0, [r4, #8]
   12e60:	vldr	s2, [r4, #12]
   12e64:	ldr	r0, [r4, #20]
   12e68:	vcvt.f32.u32	s0, s0
   12e6c:	vcvt.f32.u32	s4, s2
   12e70:	vldr	s2, [r0, #8]
   12e74:	vmul.f32	s6, s2, s0
   12e78:	vcmpe.f32	s6, s4
   12e7c:	vmrs	APSR_nzcv, fpscr
   12e80:	bpl	12fd4 <__mempcpy_chk@plt+0x1fec>
   12e84:	movw	r1, #28408	; 0x6ef8
   12e88:	movt	r1, #1
   12e8c:	cmp	r0, r1
   12e90:	beq	12f1c <__mempcpy_chk@plt+0x1f34>
   12e94:	vldr	s6, [pc, #540]	; 130b8 <__mempcpy_chk@plt+0x20d0>
   12e98:	vcmpe.f32	s2, s6
   12e9c:	vmrs	APSR_nzcv, fpscr
   12ea0:	ble	12f08 <__mempcpy_chk@plt+0x1f20>
   12ea4:	vldr	s8, [pc, #528]	; 130bc <__mempcpy_chk@plt+0x20d4>
   12ea8:	vcmpe.f32	s2, s8
   12eac:	vmrs	APSR_nzcv, fpscr
   12eb0:	bpl	12f08 <__mempcpy_chk@plt+0x1f20>
   12eb4:	vldr	s8, [pc, #516]	; 130c0 <__mempcpy_chk@plt+0x20d8>
   12eb8:	vldr	s10, [r0, #12]
   12ebc:	vcmpe.f32	s10, s8
   12ec0:	vmrs	APSR_nzcv, fpscr
   12ec4:	ble	12f08 <__mempcpy_chk@plt+0x1f20>
   12ec8:	vldr	s8, [r0]
   12ecc:	vcmpe.f32	s8, #0.0
   12ed0:	vmrs	APSR_nzcv, fpscr
   12ed4:	blt	12f08 <__mempcpy_chk@plt+0x1f20>
   12ed8:	vadd.f32	s6, s8, s6
   12edc:	vcmpe.f32	s6, s2
   12ee0:	vmrs	APSR_nzcv, fpscr
   12ee4:	bpl	12f08 <__mempcpy_chk@plt+0x1f20>
   12ee8:	vldr	s8, [r0, #4]
   12eec:	vmov.f32	s10, #112	; 0x3f800000  1.0
   12ef0:	vcmpe.f32	s8, s10
   12ef4:	vmrs	APSR_nzcv, fpscr
   12ef8:	bhi	12f08 <__mempcpy_chk@plt+0x1f20>
   12efc:	vcmpe.f32	s6, s8
   12f00:	vmrs	APSR_nzcv, fpscr
   12f04:	bmi	12f20 <__mempcpy_chk@plt+0x1f38>
   12f08:	vldr	s2, [pc, #436]	; 130c4 <__mempcpy_chk@plt+0x20dc>
   12f0c:	movw	r0, #28408	; 0x6ef8
   12f10:	movt	r0, #1
   12f14:	str	r0, [r4, #20]
   12f18:	b	12f20 <__mempcpy_chk@plt+0x1f38>
   12f1c:	mov	r0, r1
   12f20:	vmul.f32	s6, s2, s0
   12f24:	vcmpe.f32	s6, s4
   12f28:	vmrs	APSR_nzcv, fpscr
   12f2c:	bpl	12fd4 <__mempcpy_chk@plt+0x1fec>
   12f30:	vldr	s4, [r0, #12]
   12f34:	ldrb	r0, [r0, #16]
   12f38:	mvn	r7, #0
   12f3c:	vmul.f32	s0, s4, s0
   12f40:	vldr	s4, [pc, #384]	; 130c8 <__mempcpy_chk@plt+0x20e0>
   12f44:	cmp	r0, #0
   12f48:	vmul.f32	s2, s2, s0
   12f4c:	vseleq.f32	s0, s2, s0
   12f50:	vcmpe.f32	s0, s4
   12f54:	vmrs	APSR_nzcv, fpscr
   12f58:	bge	13050 <__mempcpy_chk@plt+0x2068>
   12f5c:	vcvt.u32.f32	s0, s0
   12f60:	mov	r0, r4
   12f64:	vmov	r1, s0
   12f68:	bl	12980 <__mempcpy_chk@plt+0x1998>
   12f6c:	cmp	r0, #0
   12f70:	beq	13050 <__mempcpy_chk@plt+0x2068>
   12f74:	ldr	r1, [r4, #8]
   12f78:	ldr	r2, [r4, #24]
   12f7c:	mov	r0, sl
   12f80:	blx	r2
   12f84:	mov	r7, r0
   12f88:	ldr	r0, [r4, #8]
   12f8c:	cmp	r7, r0
   12f90:	bcs	130b4 <__mempcpy_chk@plt+0x20cc>
   12f94:	ldr	r5, [r4]
   12f98:	mov	r9, r5
   12f9c:	ldr	r1, [r9, r7, lsl #3]!
   12fa0:	cmp	r1, #0
   12fa4:	beq	12ffc <__mempcpy_chk@plt+0x2014>
   12fa8:	cmp	r1, sl
   12fac:	mov	r0, sl
   12fb0:	beq	12fcc <__mempcpy_chk@plt+0x1fe4>
   12fb4:	ldr	r2, [r4, #28]
   12fb8:	mov	r0, sl
   12fbc:	blx	r2
   12fc0:	cmp	r0, #0
   12fc4:	beq	13064 <__mempcpy_chk@plt+0x207c>
   12fc8:	ldr	r0, [r9]
   12fcc:	cmp	r0, #0
   12fd0:	bne	130b4 <__mempcpy_chk@plt+0x20cc>
   12fd4:	ldr	r0, [r9]
   12fd8:	cmp	r0, #0
   12fdc:	beq	12ffc <__mempcpy_chk@plt+0x2014>
   12fe0:	ldr	r0, [r4, #36]	; 0x24
   12fe4:	cmp	r0, #0
   12fe8:	beq	1301c <__mempcpy_chk@plt+0x2034>
   12fec:	mov	r1, r0
   12ff0:	ldr	r2, [r1, #4]!
   12ff4:	str	r2, [r4, #36]	; 0x24
   12ff8:	b	13030 <__mempcpy_chk@plt+0x2048>
   12ffc:	str	sl, [r9]
   13000:	ldr	r0, [r4, #12]
   13004:	ldr	r1, [r4, #16]
   13008:	add	r0, r0, #1
   1300c:	add	r1, r1, #1
   13010:	str	r0, [r4, #12]
   13014:	str	r1, [r4, #16]
   13018:	b	1304c <__mempcpy_chk@plt+0x2064>
   1301c:	mov	r0, #8
   13020:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   13024:	cmp	r0, #0
   13028:	beq	1305c <__mempcpy_chk@plt+0x2074>
   1302c:	add	r1, r0, #4
   13030:	str	sl, [r0]
   13034:	ldr	r2, [r9, #4]
   13038:	str	r2, [r1]
   1303c:	str	r0, [r9, #4]
   13040:	ldr	r0, [r4, #16]
   13044:	add	r0, r0, #1
   13048:	str	r0, [r4, #16]
   1304c:	mov	r7, #1
   13050:	mov	r0, r7
   13054:	sub	sp, fp, #28
   13058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1305c:	mvn	r7, #0
   13060:	b	13050 <__mempcpy_chk@plt+0x2068>
   13064:	add	r6, r5, r7, lsl #3
   13068:	ldr	r0, [r6, #4]!
   1306c:	cmp	r0, #0
   13070:	beq	12fd4 <__mempcpy_chk@plt+0x1fec>
   13074:	ldr	r1, [r0]
   13078:	cmp	r1, sl
   1307c:	beq	130a8 <__mempcpy_chk@plt+0x20c0>
   13080:	ldr	r2, [r4, #28]
   13084:	mov	r0, sl
   13088:	blx	r2
   1308c:	ldr	r6, [r6]
   13090:	cmp	r0, #0
   13094:	beq	13068 <__mempcpy_chk@plt+0x2080>
   13098:	ldr	r0, [r6]
   1309c:	cmp	r0, #0
   130a0:	beq	12fd4 <__mempcpy_chk@plt+0x1fec>
   130a4:	b	130b4 <__mempcpy_chk@plt+0x20cc>
   130a8:	mov	r0, sl
   130ac:	cmp	r0, #0
   130b0:	beq	12fd4 <__mempcpy_chk@plt+0x1fec>
   130b4:	bl	10fd0 <abort@plt>
   130b8:	stclcc	12, cr12, [ip, #820]	; 0x334
   130bc:	svccc	0x00666666
   130c0:	svccc	0x008ccccd
   130c4:	svccc	0x004ccccd
   130c8:	svcmi	0x00800000
   130cc:	push	{r4, sl, fp, lr}
   130d0:	add	fp, sp, #8
   130d4:	sub	sp, sp, #8
   130d8:	add	r2, sp, #4
   130dc:	mov	r4, r1
   130e0:	bl	12d80 <__mempcpy_chk@plt+0x1d98>
   130e4:	cmn	r0, #1
   130e8:	beq	130fc <__mempcpy_chk@plt+0x2114>
   130ec:	ldr	r1, [sp, #4]
   130f0:	cmp	r0, #0
   130f4:	moveq	r4, r1
   130f8:	b	13100 <__mempcpy_chk@plt+0x2118>
   130fc:	mov	r4, #0
   13100:	mov	r0, r4
   13104:	sub	sp, fp, #8
   13108:	pop	{r4, sl, fp, pc}
   1310c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13110:	add	fp, sp, #24
   13114:	mov	r9, r1
   13118:	ldr	r1, [r0, #8]
   1311c:	ldr	r2, [r0, #24]
   13120:	mov	r5, r0
   13124:	mov	r0, r9
   13128:	blx	r2
   1312c:	mov	r7, r0
   13130:	ldr	r0, [r5, #8]
   13134:	cmp	r7, r0
   13138:	bcs	13398 <__mempcpy_chk@plt+0x23b0>
   1313c:	ldr	r6, [r5]
   13140:	mov	r8, #0
   13144:	mov	r4, r6
   13148:	ldr	r1, [r4, r7, lsl #3]!
   1314c:	cmp	r1, #0
   13150:	beq	13204 <__mempcpy_chk@plt+0x221c>
   13154:	cmp	r1, r9
   13158:	beq	13174 <__mempcpy_chk@plt+0x218c>
   1315c:	ldr	r2, [r5, #28]
   13160:	mov	r0, r9
   13164:	blx	r2
   13168:	cmp	r0, #0
   1316c:	beq	131ac <__mempcpy_chk@plt+0x21c4>
   13170:	ldr	r9, [r4]
   13174:	add	r0, r6, r7, lsl #3
   13178:	ldr	r0, [r0, #4]
   1317c:	cmp	r0, #0
   13180:	beq	131f4 <__mempcpy_chk@plt+0x220c>
   13184:	ldm	r0, {r1, r2}
   13188:	stm	r4, {r1, r2}
   1318c:	mov	r1, #0
   13190:	str	r1, [r0]
   13194:	ldr	r1, [r5, #36]	; 0x24
   13198:	str	r1, [r0, #4]
   1319c:	str	r0, [r5, #36]	; 0x24
   131a0:	cmp	r9, #0
   131a4:	bne	1323c <__mempcpy_chk@plt+0x2254>
   131a8:	b	13204 <__mempcpy_chk@plt+0x221c>
   131ac:	add	r7, r6, r7, lsl #3
   131b0:	ldr	r0, [r7, #4]!
   131b4:	cmp	r0, #0
   131b8:	beq	13204 <__mempcpy_chk@plt+0x221c>
   131bc:	ldr	r1, [r0]
   131c0:	cmp	r1, r9
   131c4:	beq	1320c <__mempcpy_chk@plt+0x2224>
   131c8:	ldr	r2, [r5, #28]
   131cc:	mov	r0, r9
   131d0:	blx	r2
   131d4:	ldr	r1, [r7]
   131d8:	cmp	r0, #0
   131dc:	bne	13214 <__mempcpy_chk@plt+0x222c>
   131e0:	ldr	r0, [r1, #4]!
   131e4:	cmp	r0, #0
   131e8:	mov	r7, r1
   131ec:	bne	131bc <__mempcpy_chk@plt+0x21d4>
   131f0:	b	13204 <__mempcpy_chk@plt+0x221c>
   131f4:	mov	r0, #0
   131f8:	str	r0, [r4]
   131fc:	cmp	r9, #0
   13200:	bne	1323c <__mempcpy_chk@plt+0x2254>
   13204:	mov	r0, r8
   13208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1320c:	mov	r1, r0
   13210:	b	13218 <__mempcpy_chk@plt+0x2230>
   13214:	ldr	r9, [r1]
   13218:	ldr	r0, [r1, #4]
   1321c:	str	r0, [r7]
   13220:	mov	r0, #0
   13224:	str	r0, [r1]
   13228:	ldr	r0, [r5, #36]	; 0x24
   1322c:	str	r0, [r1, #4]
   13230:	str	r1, [r5, #36]	; 0x24
   13234:	cmp	r9, #0
   13238:	beq	13204 <__mempcpy_chk@plt+0x221c>
   1323c:	ldr	r0, [r5, #16]
   13240:	sub	r0, r0, #1
   13244:	str	r0, [r5, #16]
   13248:	ldr	r0, [r4]
   1324c:	cmp	r0, #0
   13250:	bne	13358 <__mempcpy_chk@plt+0x2370>
   13254:	ldr	r0, [r5, #12]
   13258:	vldr	s0, [r5, #8]
   1325c:	sub	r1, r0, #1
   13260:	str	r1, [r5, #12]
   13264:	vmov	s2, r1
   13268:	ldr	r0, [r5, #20]
   1326c:	vcvt.f32.u32	s0, s0
   13270:	vcvt.f32.u32	s2, s2
   13274:	vldr	s4, [r0]
   13278:	vmul.f32	s6, s4, s0
   1327c:	vcmpe.f32	s6, s2
   13280:	vmrs	APSR_nzcv, fpscr
   13284:	ble	13358 <__mempcpy_chk@plt+0x2370>
   13288:	movw	r1, #28408	; 0x6ef8
   1328c:	movt	r1, #1
   13290:	cmp	r0, r1
   13294:	beq	132ec <__mempcpy_chk@plt+0x2304>
   13298:	vldr	s8, [pc, #252]	; 1339c <__mempcpy_chk@plt+0x23b4>
   1329c:	vldr	s6, [r0, #8]
   132a0:	vcmpe.f32	s6, s8
   132a4:	vmrs	APSR_nzcv, fpscr
   132a8:	ble	132d8 <__mempcpy_chk@plt+0x22f0>
   132ac:	vldr	s10, [pc, #236]	; 133a0 <__mempcpy_chk@plt+0x23b8>
   132b0:	vcmpe.f32	s6, s10
   132b4:	vmrs	APSR_nzcv, fpscr
   132b8:	bpl	132d8 <__mempcpy_chk@plt+0x22f0>
   132bc:	vcmpe.f32	s4, #0.0
   132c0:	vmrs	APSR_nzcv, fpscr
   132c4:	vldrge	s10, [r0, #12]
   132c8:	vldrge	s12, [pc, #212]	; 133a4 <__mempcpy_chk@plt+0x23bc>
   132cc:	vcmpege.f32	s10, s12
   132d0:	vmrsge	APSR_nzcv, fpscr
   132d4:	bgt	13364 <__mempcpy_chk@plt+0x237c>
   132d8:	vldr	s4, [pc, #200]	; 133a8 <__mempcpy_chk@plt+0x23c0>
   132dc:	movw	r0, #28408	; 0x6ef8
   132e0:	movt	r0, #1
   132e4:	str	r0, [r5, #20]
   132e8:	b	132f0 <__mempcpy_chk@plt+0x2308>
   132ec:	mov	r0, r1
   132f0:	vmul.f32	s4, s4, s0
   132f4:	vcmpe.f32	s4, s2
   132f8:	vmrs	APSR_nzcv, fpscr
   132fc:	ble	13358 <__mempcpy_chk@plt+0x2370>
   13300:	ldrb	r1, [r0, #16]
   13304:	vldr	s2, [r0, #4]
   13308:	cmp	r1, #0
   1330c:	vmul.f32	s0, s2, s0
   13310:	vldreq	s2, [r0, #8]
   13314:	mov	r0, r5
   13318:	vmuleq.f32	s0, s0, s2
   1331c:	vcvt.u32.f32	s0, s0
   13320:	vmov	r1, s0
   13324:	bl	12980 <__mempcpy_chk@plt+0x1998>
   13328:	cmp	r0, #0
   1332c:	bne	13358 <__mempcpy_chk@plt+0x2370>
   13330:	ldr	r0, [r5, #36]	; 0x24
   13334:	cmp	r0, #0
   13338:	beq	13350 <__mempcpy_chk@plt+0x2368>
   1333c:	ldr	r4, [r0, #4]
   13340:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   13344:	cmp	r4, #0
   13348:	mov	r0, r4
   1334c:	bne	1333c <__mempcpy_chk@plt+0x2354>
   13350:	mov	r0, #0
   13354:	str	r0, [r5, #36]	; 0x24
   13358:	mov	r8, r9
   1335c:	mov	r0, r8
   13360:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13364:	vadd.f32	s8, s4, s8
   13368:	vcmpe.f32	s8, s6
   1336c:	vmrs	APSR_nzcv, fpscr
   13370:	bpl	132d8 <__mempcpy_chk@plt+0x22f0>
   13374:	vldr	s6, [r0, #4]
   13378:	vmov.f32	s10, #112	; 0x3f800000  1.0
   1337c:	vcmpe.f32	s6, s10
   13380:	vmrs	APSR_nzcv, fpscr
   13384:	bhi	132d8 <__mempcpy_chk@plt+0x22f0>
   13388:	vcmpe.f32	s8, s6
   1338c:	vmrs	APSR_nzcv, fpscr
   13390:	bmi	132f0 <__mempcpy_chk@plt+0x2308>
   13394:	b	132d8 <__mempcpy_chk@plt+0x22f0>
   13398:	bl	10fd0 <abort@plt>
   1339c:	stclcc	12, cr12, [ip, #820]	; 0x334
   133a0:	svccc	0x00666666
   133a4:	svccc	0x008ccccd
   133a8:	andeq	r0, r0, r0
   133ac:	b	1310c <__mempcpy_chk@plt+0x2124>
   133b0:	push	{r4, r5, fp, lr}
   133b4:	add	fp, sp, #8
   133b8:	mov	r5, r0
   133bc:	ldr	r0, [r0]
   133c0:	mov	r4, r1
   133c4:	bl	1629c <__mempcpy_chk@plt+0x52b4>
   133c8:	ldrd	r2, [r5, #8]
   133cc:	eor	r0, r2, r0
   133d0:	mov	r1, r3
   133d4:	mov	r2, r4
   133d8:	mov	r3, #0
   133dc:	bl	164b4 <__mempcpy_chk@plt+0x54cc>
   133e0:	mov	r0, r2
   133e4:	pop	{r4, r5, fp, pc}
   133e8:	push	{r4, r5, r6, r7, fp, lr}
   133ec:	add	fp, sp, #16
   133f0:	ldrd	r2, [r1, #8]
   133f4:	ldrd	r4, [r0, #8]
   133f8:	eor	r3, r5, r3
   133fc:	eor	r2, r4, r2
   13400:	orrs	r2, r2, r3
   13404:	mov	r2, #0
   13408:	bne	13438 <__mempcpy_chk@plt+0x2450>
   1340c:	ldrd	r4, [r1, #16]
   13410:	ldrd	r6, [r0, #16]
   13414:	eor	r3, r7, r5
   13418:	eor	r7, r6, r4
   1341c:	orrs	r3, r7, r3
   13420:	bne	13438 <__mempcpy_chk@plt+0x2450>
   13424:	ldr	r1, [r1]
   13428:	ldr	r0, [r0]
   1342c:	bl	10db4 <strcmp@plt>
   13430:	clz	r0, r0
   13434:	lsr	r2, r0, #5
   13438:	mov	r0, r2
   1343c:	pop	{r4, r5, r6, r7, fp, pc}
   13440:	push	{r4, sl, fp, lr}
   13444:	add	fp, sp, #8
   13448:	mov	r4, r0
   1344c:	ldr	r0, [r0]
   13450:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   13454:	mov	r0, r4
   13458:	pop	{r4, sl, fp, lr}
   1345c:	b	120d4 <__mempcpy_chk@plt+0x10ec>
   13460:	push	{r4, r5, fp, lr}
   13464:	add	fp, sp, #8
   13468:	cmp	r0, #0
   1346c:	beq	13500 <__mempcpy_chk@plt+0x2518>
   13470:	mov	r1, #47	; 0x2f
   13474:	mov	r4, r0
   13478:	bl	10f94 <strrchr@plt>
   1347c:	cmp	r0, #0
   13480:	mov	r5, r4
   13484:	addne	r5, r0, #1
   13488:	sub	r0, r5, r4
   1348c:	cmp	r0, #7
   13490:	blt	134e4 <__mempcpy_chk@plt+0x24fc>
   13494:	movw	r1, #28484	; 0x6f44
   13498:	sub	r0, r5, #7
   1349c:	mov	r2, #7
   134a0:	movt	r1, #1
   134a4:	bl	10fc4 <strncmp@plt>
   134a8:	cmp	r0, #0
   134ac:	bne	134e4 <__mempcpy_chk@plt+0x24fc>
   134b0:	movw	r1, #28492	; 0x6f4c
   134b4:	mov	r0, r5
   134b8:	mov	r2, #3
   134bc:	movt	r1, #1
   134c0:	bl	10fc4 <strncmp@plt>
   134c4:	cmp	r0, #0
   134c8:	beq	134d4 <__mempcpy_chk@plt+0x24ec>
   134cc:	mov	r4, r5
   134d0:	b	134e4 <__mempcpy_chk@plt+0x24fc>
   134d4:	movw	r0, #33072	; 0x8130
   134d8:	add	r4, r5, #3
   134dc:	movt	r0, #2
   134e0:	str	r4, [r0]
   134e4:	movw	r0, #33076	; 0x8134
   134e8:	movt	r0, #2
   134ec:	str	r4, [r0]
   134f0:	movw	r0, #33108	; 0x8154
   134f4:	movt	r0, #2
   134f8:	str	r4, [r0]
   134fc:	pop	{r4, r5, fp, pc}
   13500:	movw	r0, #33088	; 0x8140
   13504:	mov	r1, #55	; 0x37
   13508:	mov	r2, #1
   1350c:	movt	r0, #2
   13510:	ldr	r3, [r0]
   13514:	movw	r0, #28428	; 0x6f0c
   13518:	movt	r0, #1
   1351c:	bl	10e68 <fwrite@plt>
   13520:	bl	10fd0 <abort@plt>
   13524:	push	{r4, r5, r6, sl, fp, lr}
   13528:	add	fp, sp, #16
   1352c:	mov	r4, r0
   13530:	movw	r0, #33112	; 0x8158
   13534:	movt	r0, #2
   13538:	cmp	r4, #0
   1353c:	moveq	r4, r0
   13540:	bl	10f1c <__errno_location@plt>
   13544:	ldr	r6, [r0]
   13548:	mov	r5, r0
   1354c:	mov	r0, r4
   13550:	mov	r1, #48	; 0x30
   13554:	bl	15e60 <__mempcpy_chk@plt+0x4e78>
   13558:	str	r6, [r5]
   1355c:	pop	{r4, r5, r6, sl, fp, pc}
   13560:	movw	r1, #33112	; 0x8158
   13564:	cmp	r0, #0
   13568:	movt	r1, #2
   1356c:	movne	r1, r0
   13570:	ldr	r0, [r1]
   13574:	bx	lr
   13578:	movw	r2, #33112	; 0x8158
   1357c:	cmp	r0, #0
   13580:	movt	r2, #2
   13584:	movne	r2, r0
   13588:	str	r1, [r2]
   1358c:	bx	lr
   13590:	movw	r3, #33112	; 0x8158
   13594:	cmp	r0, #0
   13598:	movt	r3, #2
   1359c:	movne	r3, r0
   135a0:	ubfx	r0, r1, #5, #3
   135a4:	and	r1, r1, #31
   135a8:	add	r0, r3, r0, lsl #2
   135ac:	ldr	r3, [r0, #8]
   135b0:	eor	r2, r2, r3, lsr r1
   135b4:	and	r2, r2, #1
   135b8:	eor	r2, r3, r2, lsl r1
   135bc:	str	r2, [r0, #8]
   135c0:	mov	r0, #1
   135c4:	and	r0, r0, r3, lsr r1
   135c8:	bx	lr
   135cc:	movw	r2, #33112	; 0x8158
   135d0:	cmp	r0, #0
   135d4:	movt	r2, #2
   135d8:	movne	r2, r0
   135dc:	ldr	r0, [r2, #4]
   135e0:	str	r1, [r2, #4]
   135e4:	bx	lr
   135e8:	movw	r3, #33112	; 0x8158
   135ec:	cmp	r0, #0
   135f0:	movt	r3, #2
   135f4:	movne	r3, r0
   135f8:	cmp	r1, #0
   135fc:	mov	r0, #10
   13600:	cmpne	r2, #0
   13604:	str	r0, [r3]
   13608:	bne	13618 <__mempcpy_chk@plt+0x2630>
   1360c:	push	{fp, lr}
   13610:	mov	fp, sp
   13614:	bl	10fd0 <abort@plt>
   13618:	str	r1, [r3, #40]	; 0x28
   1361c:	str	r2, [r3, #44]	; 0x2c
   13620:	bx	lr
   13624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13628:	add	fp, sp, #28
   1362c:	sub	sp, sp, #20
   13630:	mov	r7, r0
   13634:	ldr	r0, [fp, #8]
   13638:	movw	r5, #33112	; 0x8158
   1363c:	mov	r8, r3
   13640:	mov	r9, r2
   13644:	mov	sl, r1
   13648:	movt	r5, #2
   1364c:	cmp	r0, #0
   13650:	movne	r5, r0
   13654:	bl	10f1c <__errno_location@plt>
   13658:	mov	r4, r0
   1365c:	ldm	r5, {r0, r1}
   13660:	ldr	r2, [r5, #40]	; 0x28
   13664:	ldr	r3, [r5, #44]	; 0x2c
   13668:	add	r5, r5, #8
   1366c:	ldr	r6, [r4]
   13670:	stm	sp, {r0, r1, r5}
   13674:	str	r2, [sp, #12]
   13678:	str	r3, [sp, #16]
   1367c:	mov	r0, r7
   13680:	mov	r1, sl
   13684:	mov	r2, r9
   13688:	mov	r3, r8
   1368c:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   13690:	str	r6, [r4]
   13694:	sub	sp, fp, #28
   13698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1369c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136a0:	add	fp, sp, #28
   136a4:	sub	sp, sp, #156	; 0x9c
   136a8:	str	r0, [sp, #80]	; 0x50
   136ac:	ldr	r0, [fp, #12]
   136b0:	mov	r6, r1
   136b4:	mov	r9, r3
   136b8:	str	r2, [fp, #-84]	; 0xffffffac
   136bc:	and	r1, r0, #4
   136c0:	str	r1, [sp, #32]
   136c4:	and	r1, r0, #1
   136c8:	str	r1, [sp, #36]	; 0x24
   136cc:	ubfx	r4, r0, #1, #1
   136d0:	bl	10e80 <__ctype_get_mb_cur_max@plt>
   136d4:	str	r0, [sp, #40]	; 0x28
   136d8:	ldr	r0, [fp, #24]
   136dc:	ldr	r7, [fp, #8]
   136e0:	mov	r1, #0
   136e4:	mov	r5, #1
   136e8:	str	r1, [fp, #-56]	; 0xffffffc8
   136ec:	mov	r1, #0
   136f0:	str	r1, [sp, #60]	; 0x3c
   136f4:	str	r0, [sp, #76]	; 0x4c
   136f8:	ldr	r0, [fp, #20]
   136fc:	str	r0, [sp, #72]	; 0x48
   13700:	mov	r0, #0
   13704:	str	r0, [sp, #56]	; 0x38
   13708:	mov	r0, #0
   1370c:	str	r0, [sp, #92]	; 0x5c
   13710:	mov	r0, #0
   13714:	str	r0, [fp, #-76]	; 0xffffffb4
   13718:	mov	r0, #0
   1371c:	cmp	r7, #10
   13720:	bhi	146a0 <__mempcpy_chk@plt+0x36b8>
   13724:	add	r1, pc, #28
   13728:	mov	sl, r6
   1372c:	ldr	r6, [sp, #80]	; 0x50
   13730:	ldr	ip, [fp, #-84]	; 0xffffffac
   13734:	mov	r8, #0
   13738:	mov	r2, #1
   1373c:	mov	r3, #0
   13740:	mov	lr, r9
   13744:	ldr	pc, [r1, r7, lsl #2]
   13748:	andeq	r3, r1, ip, lsr #16
   1374c:	andeq	r3, r1, r8, asr r8
   13750:	andeq	r3, r1, ip, lsl r8
   13754:	andeq	r3, r1, r4, lsl r8
   13758:	andeq	r3, r1, ip, asr #16
   1375c:	andeq	r3, r1, r0, lsr #17
   13760:	andeq	r3, r1, ip, lsr r8
   13764:	strdeq	r3, [r1], -ip
   13768:	andeq	r3, r1, r4, ror r7
   1376c:	andeq	r3, r1, r4, ror r7
   13770:	muleq	r1, ip, r7
   13774:	movw	r0, #28576	; 0x6fa0
   13778:	mov	r1, r7
   1377c:	movt	r0, #1
   13780:	bl	150ac <__mempcpy_chk@plt+0x40c4>
   13784:	str	r0, [sp, #72]	; 0x48
   13788:	movw	r0, #28578	; 0x6fa2
   1378c:	mov	r1, r7
   13790:	movt	r0, #1
   13794:	bl	150ac <__mempcpy_chk@plt+0x40c4>
   13798:	str	r0, [sp, #76]	; 0x4c
   1379c:	str	r5, [fp, #-48]	; 0xffffffd0
   137a0:	mov	r8, #0
   137a4:	mov	r5, r7
   137a8:	tst	r4, #1
   137ac:	bne	137e4 <__mempcpy_chk@plt+0x27fc>
   137b0:	ldr	r0, [sp, #72]	; 0x48
   137b4:	ldrb	r0, [r0]
   137b8:	cmp	r0, #0
   137bc:	beq	137e4 <__mempcpy_chk@plt+0x27fc>
   137c0:	ldr	r1, [sp, #72]	; 0x48
   137c4:	mov	r8, #0
   137c8:	add	r1, r1, #1
   137cc:	cmp	r8, sl
   137d0:	strbcc	r0, [r6, r8]
   137d4:	ldrb	r0, [r1, r8]
   137d8:	add	r8, r8, #1
   137dc:	cmp	r0, #0
   137e0:	bne	137cc <__mempcpy_chk@plt+0x27e4>
   137e4:	ldr	r7, [sp, #76]	; 0x4c
   137e8:	mov	r0, r7
   137ec:	bl	10f10 <strlen@plt>
   137f0:	str	r7, [sp, #92]	; 0x5c
   137f4:	mov	r7, r5
   137f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   137fc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13800:	str	r0, [fp, #-76]	; 0xffffffb4
   13804:	mov	r2, #1
   13808:	mov	r3, r4
   1380c:	mov	lr, r9
   13810:	b	138fc <__mempcpy_chk@plt+0x2914>
   13814:	mov	r0, #1
   13818:	b	13858 <__mempcpy_chk@plt+0x2870>
   1381c:	tst	r4, #1
   13820:	bne	13858 <__mempcpy_chk@plt+0x2870>
   13824:	mov	r2, r0
   13828:	b	13880 <__mempcpy_chk@plt+0x2898>
   1382c:	mov	r7, #0
   13830:	mov	r8, #0
   13834:	mov	r2, r0
   13838:	b	138f8 <__mempcpy_chk@plt+0x2910>
   1383c:	mov	r0, #1
   13840:	mov	r8, #0
   13844:	mov	r7, #5
   13848:	b	138b4 <__mempcpy_chk@plt+0x28cc>
   1384c:	mov	r2, #1
   13850:	tst	r4, #1
   13854:	beq	13880 <__mempcpy_chk@plt+0x2898>
   13858:	mov	r1, #1
   1385c:	mov	r8, #0
   13860:	mov	r7, #2
   13864:	mov	r2, r0
   13868:	mov	r3, #1
   1386c:	str	r1, [fp, #-76]	; 0xffffffb4
   13870:	movw	r1, #28578	; 0x6fa2
   13874:	movt	r1, #1
   13878:	str	r1, [sp, #92]	; 0x5c
   1387c:	b	138fc <__mempcpy_chk@plt+0x2914>
   13880:	cmp	sl, #0
   13884:	mov	r8, #1
   13888:	mov	r7, #2
   1388c:	movne	r0, #39	; 0x27
   13890:	strbne	r0, [r6]
   13894:	movw	r0, #28578	; 0x6fa2
   13898:	movt	r0, #1
   1389c:	b	138ec <__mempcpy_chk@plt+0x2904>
   138a0:	mov	r7, #5
   138a4:	tst	r4, #1
   138a8:	beq	138d0 <__mempcpy_chk@plt+0x28e8>
   138ac:	mov	r0, #1
   138b0:	mov	r8, #0
   138b4:	str	r0, [fp, #-76]	; 0xffffffb4
   138b8:	movw	r0, #28574	; 0x6f9e
   138bc:	mov	r2, #1
   138c0:	mov	r3, #1
   138c4:	movt	r0, #1
   138c8:	str	r0, [sp, #92]	; 0x5c
   138cc:	b	138fc <__mempcpy_chk@plt+0x2914>
   138d0:	cmp	sl, #0
   138d4:	mov	r8, #1
   138d8:	mov	r2, #1
   138dc:	movne	r0, #34	; 0x22
   138e0:	strbne	r0, [r6]
   138e4:	movw	r0, #28574	; 0x6f9e
   138e8:	movt	r0, #1
   138ec:	str	r0, [sp, #92]	; 0x5c
   138f0:	mov	r0, #1
   138f4:	str	r0, [fp, #-76]	; 0xffffffb4
   138f8:	mov	r3, #0
   138fc:	ldr	r0, [fp, #16]
   13900:	str	r3, [fp, #-72]	; 0xffffffb8
   13904:	str	r7, [fp, #-64]	; 0xffffffc0
   13908:	str	r2, [sp, #84]	; 0x54
   1390c:	cmp	r0, #0
   13910:	movwne	r0, #1
   13914:	and	r0, r0, r3
   13918:	str	r0, [fp, #-88]	; 0xffffffa8
   1391c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13920:	cmp	r0, #0
   13924:	movwne	r0, #1
   13928:	subs	r4, r7, #2
   1392c:	mov	r7, #0
   13930:	and	r1, r0, r3
   13934:	str	r4, [fp, #-80]	; 0xffffffb0
   13938:	and	r1, r2, r1
   1393c:	str	r1, [sp, #48]	; 0x30
   13940:	clz	r1, r4
   13944:	lsr	r1, r1, #5
   13948:	and	r1, r1, r3
   1394c:	eor	r3, r3, #1
   13950:	str	r1, [sp, #64]	; 0x40
   13954:	mov	r1, r4
   13958:	str	r3, [sp, #88]	; 0x58
   1395c:	movwne	r1, #1
   13960:	orr	r3, r1, r3
   13964:	and	r1, r1, r2
   13968:	and	r0, r0, r1
   1396c:	str	r3, [sp, #68]	; 0x44
   13970:	str	r1, [fp, #-68]	; 0xffffffbc
   13974:	str	r0, [fp, #-60]	; 0xffffffc4
   13978:	eor	r0, r2, #1
   1397c:	str	r0, [sp, #52]	; 0x34
   13980:	cmn	lr, #1
   13984:	beq	13994 <__mempcpy_chk@plt+0x29ac>
   13988:	cmp	r7, lr
   1398c:	bne	139a0 <__mempcpy_chk@plt+0x29b8>
   13990:	b	144c8 <__mempcpy_chk@plt+0x34e0>
   13994:	ldrb	r0, [ip, r7]
   13998:	cmp	r0, #0
   1399c:	beq	144d0 <__mempcpy_chk@plt+0x34e8>
   139a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   139a4:	mov	r9, #0
   139a8:	str	r5, [fp, #-48]	; 0xffffffd0
   139ac:	cmp	r0, #0
   139b0:	beq	139e4 <__mempcpy_chk@plt+0x29fc>
   139b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   139b8:	add	r4, r7, r0
   139bc:	cmp	r0, #2
   139c0:	bcc	139dc <__mempcpy_chk@plt+0x29f4>
   139c4:	cmn	lr, #1
   139c8:	bne	139dc <__mempcpy_chk@plt+0x29f4>
   139cc:	mov	r0, ip
   139d0:	bl	10f10 <strlen@plt>
   139d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   139d8:	mov	lr, r0
   139dc:	cmp	r4, lr
   139e0:	bls	139ec <__mempcpy_chk@plt+0x2a04>
   139e4:	mov	r0, #0
   139e8:	b	13a2c <__mempcpy_chk@plt+0x2a44>
   139ec:	ldr	r1, [sp, #92]	; 0x5c
   139f0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   139f4:	add	r0, ip, r7
   139f8:	mov	r4, lr
   139fc:	bl	10e14 <memcmp@plt>
   13a00:	ldr	r2, [sp, #88]	; 0x58
   13a04:	cmp	r0, #0
   13a08:	mov	r1, r0
   13a0c:	movwne	r1, #1
   13a10:	orr	r1, r1, r2
   13a14:	tst	r1, #1
   13a18:	beq	14560 <__mempcpy_chk@plt+0x3578>
   13a1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13a20:	clz	r0, r0
   13a24:	mov	lr, r4
   13a28:	lsr	r0, r0, #5
   13a2c:	str	r0, [fp, #-52]	; 0xffffffcc
   13a30:	ldrb	r5, [ip, r7]
   13a34:	cmp	r5, #126	; 0x7e
   13a38:	bhi	13df0 <__mempcpy_chk@plt+0x2e08>
   13a3c:	add	r3, pc, #16
   13a40:	mov	r4, #1
   13a44:	mov	r2, #110	; 0x6e
   13a48:	mov	r0, #97	; 0x61
   13a4c:	mov	r1, #0
   13a50:	ldr	pc, [r3, r5, lsl #2]
   13a54:	andeq	r3, r1, ip, ror #25
   13a58:	strdeq	r3, [r1], -r0
   13a5c:	strdeq	r3, [r1], -r0
   13a60:	strdeq	r3, [r1], -r0
   13a64:	strdeq	r3, [r1], -r0
   13a68:	strdeq	r3, [r1], -r0
   13a6c:	strdeq	r3, [r1], -r0
   13a70:	andeq	r3, r1, r4, lsr #29
   13a74:	andeq	r3, r1, ip, asr #25
   13a78:	andeq	r3, r1, r4, asr #25
   13a7c:	ldrdeq	r3, [r1], -r8
   13a80:	andeq	r3, r1, r8, asr sp
   13a84:			; <UNDEFINED> instruction: 0x00013cbc
   13a88:	ldrdeq	r3, [r1], -r4
   13a8c:	strdeq	r3, [r1], -r0
   13a90:	strdeq	r3, [r1], -r0
   13a94:	strdeq	r3, [r1], -r0
   13a98:	strdeq	r3, [r1], -r0
   13a9c:	strdeq	r3, [r1], -r0
   13aa0:	strdeq	r3, [r1], -r0
   13aa4:	strdeq	r3, [r1], -r0
   13aa8:	strdeq	r3, [r1], -r0
   13aac:	strdeq	r3, [r1], -r0
   13ab0:	strdeq	r3, [r1], -r0
   13ab4:	strdeq	r3, [r1], -r0
   13ab8:	strdeq	r3, [r1], -r0
   13abc:	strdeq	r3, [r1], -r0
   13ac0:	strdeq	r3, [r1], -r0
   13ac4:	strdeq	r3, [r1], -r0
   13ac8:	strdeq	r3, [r1], -r0
   13acc:	strdeq	r3, [r1], -r0
   13ad0:	strdeq	r3, [r1], -r0
   13ad4:	andeq	r3, r1, ip, asr lr
   13ad8:	andeq	r3, r1, r0, ror #28
   13adc:	andeq	r3, r1, r0, ror #28
   13ae0:	andeq	r3, r1, r4, ror #24
   13ae4:	andeq	r3, r1, r0, ror #28
   13ae8:	andeq	r3, r1, r0, asr ip
   13aec:	andeq	r3, r1, r0, ror #28
   13af0:	andeq	r3, r1, r0, ror #26
   13af4:	andeq	r3, r1, r0, ror #28
   13af8:	andeq	r3, r1, r0, ror #28
   13afc:	andeq	r3, r1, r0, ror #28
   13b00:	andeq	r3, r1, r0, asr ip
   13b04:	andeq	r3, r1, r0, asr ip
   13b08:	andeq	r3, r1, r0, asr ip
   13b0c:	andeq	r3, r1, r0, asr ip
   13b10:	andeq	r3, r1, r0, asr ip
   13b14:	andeq	r3, r1, r0, asr ip
   13b18:	andeq	r3, r1, r0, asr ip
   13b1c:	andeq	r3, r1, r0, asr ip
   13b20:	andeq	r3, r1, r0, asr ip
   13b24:	andeq	r3, r1, r0, asr ip
   13b28:	andeq	r3, r1, r0, asr ip
   13b2c:	andeq	r3, r1, r0, asr ip
   13b30:	andeq	r3, r1, r0, asr ip
   13b34:	andeq	r3, r1, r0, asr ip
   13b38:	andeq	r3, r1, r0, asr ip
   13b3c:	andeq	r3, r1, r0, asr ip
   13b40:	andeq	r3, r1, r0, ror #28
   13b44:	andeq	r3, r1, r0, ror #28
   13b48:	andeq	r3, r1, r0, ror #28
   13b4c:	andeq	r3, r1, r0, ror #28
   13b50:	andeq	r3, r1, ip, lsr #26
   13b54:	strdeq	r3, [r1], -r0
   13b58:	andeq	r3, r1, r0, asr ip
   13b5c:	andeq	r3, r1, r0, asr ip
   13b60:	andeq	r3, r1, r0, asr ip
   13b64:	andeq	r3, r1, r0, asr ip
   13b68:	andeq	r3, r1, r0, asr ip
   13b6c:	andeq	r3, r1, r0, asr ip
   13b70:	andeq	r3, r1, r0, asr ip
   13b74:	andeq	r3, r1, r0, asr ip
   13b78:	andeq	r3, r1, r0, asr ip
   13b7c:	andeq	r3, r1, r0, asr ip
   13b80:	andeq	r3, r1, r0, asr ip
   13b84:	andeq	r3, r1, r0, asr ip
   13b88:	andeq	r3, r1, r0, asr ip
   13b8c:	andeq	r3, r1, r0, asr ip
   13b90:	andeq	r3, r1, r0, asr ip
   13b94:	andeq	r3, r1, r0, asr ip
   13b98:	andeq	r3, r1, r0, asr ip
   13b9c:	andeq	r3, r1, r0, asr ip
   13ba0:	andeq	r3, r1, r0, asr ip
   13ba4:	andeq	r3, r1, r0, asr ip
   13ba8:	andeq	r3, r1, r0, asr ip
   13bac:	andeq	r3, r1, r0, asr ip
   13bb0:	andeq	r3, r1, r0, asr ip
   13bb4:	andeq	r3, r1, r0, asr ip
   13bb8:	andeq	r3, r1, r0, asr ip
   13bbc:	andeq	r3, r1, r0, asr ip
   13bc0:	andeq	r3, r1, r0, ror #28
   13bc4:	muleq	r1, r8, ip
   13bc8:	andeq	r3, r1, r0, asr ip
   13bcc:	andeq	r3, r1, r0, ror #28
   13bd0:	andeq	r3, r1, r0, asr ip
   13bd4:	andeq	r3, r1, r0, ror #28
   13bd8:	andeq	r3, r1, r0, asr ip
   13bdc:	andeq	r3, r1, r0, asr ip
   13be0:	andeq	r3, r1, r0, asr ip
   13be4:	andeq	r3, r1, r0, asr ip
   13be8:	andeq	r3, r1, r0, asr ip
   13bec:	andeq	r3, r1, r0, asr ip
   13bf0:	andeq	r3, r1, r0, asr ip
   13bf4:	andeq	r3, r1, r0, asr ip
   13bf8:	andeq	r3, r1, r0, asr ip
   13bfc:	andeq	r3, r1, r0, asr ip
   13c00:	andeq	r3, r1, r0, asr ip
   13c04:	andeq	r3, r1, r0, asr ip
   13c08:	andeq	r3, r1, r0, asr ip
   13c0c:	andeq	r3, r1, r0, asr ip
   13c10:	andeq	r3, r1, r0, asr ip
   13c14:	andeq	r3, r1, r0, asr ip
   13c18:	andeq	r3, r1, r0, asr ip
   13c1c:	andeq	r3, r1, r0, asr ip
   13c20:	andeq	r3, r1, r0, asr ip
   13c24:	andeq	r3, r1, r0, asr ip
   13c28:	andeq	r3, r1, r0, asr ip
   13c2c:	andeq	r3, r1, r0, asr ip
   13c30:	andeq	r3, r1, r0, asr ip
   13c34:	andeq	r3, r1, r0, asr ip
   13c38:	andeq	r3, r1, r0, asr ip
   13c3c:	andeq	r3, r1, r0, asr ip
   13c40:	andeq	r3, r1, r8, ror ip
   13c44:	andeq	r3, r1, r0, ror #28
   13c48:	andeq	r3, r1, r8, ror ip
   13c4c:	andeq	r3, r1, r4, ror #24
   13c50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13c54:	cmp	r0, #0
   13c58:	beq	13eb8 <__mempcpy_chk@plt+0x2ed0>
   13c5c:	ldr	r0, [fp, #16]
   13c60:	b	13ebc <__mempcpy_chk@plt+0x2ed4>
   13c64:	mov	r4, #0
   13c68:	cmp	r7, #0
   13c6c:	beq	13e5c <__mempcpy_chk@plt+0x2e74>
   13c70:	mov	r9, #0
   13c74:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   13c78:	mov	r4, #0
   13c7c:	cmn	lr, #1
   13c80:	beq	13e40 <__mempcpy_chk@plt+0x2e58>
   13c84:	cmp	r7, #0
   13c88:	bne	13c70 <__mempcpy_chk@plt+0x2c88>
   13c8c:	cmp	lr, #1
   13c90:	beq	13e5c <__mempcpy_chk@plt+0x2e74>
   13c94:	b	13c70 <__mempcpy_chk@plt+0x2c88>
   13c98:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13c9c:	cmp	r0, #2
   13ca0:	bne	13e80 <__mempcpy_chk@plt+0x2e98>
   13ca4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ca8:	tst	r0, #1
   13cac:	bne	1457c <__mempcpy_chk@plt+0x3594>
   13cb0:	mov	r9, #0
   13cb4:	mov	r0, #92	; 0x5c
   13cb8:	b	13e94 <__mempcpy_chk@plt+0x2eac>
   13cbc:	mov	r0, #102	; 0x66
   13cc0:	b	13ea4 <__mempcpy_chk@plt+0x2ebc>
   13cc4:	mov	r2, #116	; 0x74
   13cc8:	b	13cd8 <__mempcpy_chk@plt+0x2cf0>
   13ccc:	mov	r0, #98	; 0x62
   13cd0:	b	13ea4 <__mempcpy_chk@plt+0x2ebc>
   13cd4:	mov	r2, #114	; 0x72
   13cd8:	ldr	r0, [sp, #68]	; 0x44
   13cdc:	tst	r0, #1
   13ce0:	mov	r0, r2
   13ce4:	bne	13ea4 <__mempcpy_chk@plt+0x2ebc>
   13ce8:	b	1457c <__mempcpy_chk@plt+0x3594>
   13cec:	ldr	r0, [sp, #84]	; 0x54
   13cf0:	tst	r0, #1
   13cf4:	beq	13f94 <__mempcpy_chk@plt+0x2fac>
   13cf8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13cfc:	tst	r0, #1
   13d00:	bne	1468c <__mempcpy_chk@plt+0x36a4>
   13d04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13d08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13d0c:	cmp	r0, #2
   13d10:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13d14:	movwne	r0, #1
   13d18:	orr	r0, r0, r2
   13d1c:	tst	r0, #1
   13d20:	beq	14364 <__mempcpy_chk@plt+0x337c>
   13d24:	mov	r0, r8
   13d28:	b	14398 <__mempcpy_chk@plt+0x33b0>
   13d2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13d30:	mov	r9, #0
   13d34:	mov	r5, #63	; 0x3f
   13d38:	cmp	r0, #5
   13d3c:	beq	14148 <__mempcpy_chk@plt+0x3160>
   13d40:	cmp	r0, #2
   13d44:	bne	141ec <__mempcpy_chk@plt+0x3204>
   13d48:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13d4c:	tst	r0, #1
   13d50:	beq	141f0 <__mempcpy_chk@plt+0x3208>
   13d54:	b	1457c <__mempcpy_chk@plt+0x3594>
   13d58:	mov	r0, #118	; 0x76
   13d5c:	b	13ea4 <__mempcpy_chk@plt+0x2ebc>
   13d60:	mov	r0, #1
   13d64:	mov	r5, #39	; 0x27
   13d68:	str	r0, [sp, #60]	; 0x3c
   13d6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13d70:	cmp	r0, #2
   13d74:	bne	13de8 <__mempcpy_chk@plt+0x2e00>
   13d78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13d7c:	tst	r0, #1
   13d80:	bne	1457c <__mempcpy_chk@plt+0x3594>
   13d84:	ldr	r2, [sp, #56]	; 0x38
   13d88:	clz	r1, sl
   13d8c:	mov	r9, #0
   13d90:	lsr	r1, r1, #5
   13d94:	cmp	r2, #0
   13d98:	mov	r0, r2
   13d9c:	movwne	r0, #1
   13da0:	orrs	r0, r0, r1
   13da4:	moveq	r2, sl
   13da8:	moveq	sl, r0
   13dac:	cmp	r8, sl
   13db0:	str	r2, [sp, #56]	; 0x38
   13db4:	movcc	r0, #39	; 0x27
   13db8:	strbcc	r0, [r6, r8]
   13dbc:	add	r0, r8, #1
   13dc0:	cmp	r0, sl
   13dc4:	movcc	r1, #92	; 0x5c
   13dc8:	strbcc	r1, [r6, r0]
   13dcc:	add	r0, r8, #2
   13dd0:	add	r8, r8, #3
   13dd4:	cmp	r0, sl
   13dd8:	movcc	r1, #39	; 0x27
   13ddc:	strbcc	r1, [r6, r0]
   13de0:	mov	r0, #0
   13de4:	str	r0, [fp, #-56]	; 0xffffffc8
   13de8:	mov	r4, #1
   13dec:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   13df0:	ldr	r0, [sp, #40]	; 0x28
   13df4:	cmp	r0, #1
   13df8:	bne	13fc0 <__mempcpy_chk@plt+0x2fd8>
   13dfc:	str	lr, [sp, #28]
   13e00:	bl	10eec <__ctype_b_loc@plt>
   13e04:	ldr	r0, [r0]
   13e08:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e0c:	mov	r1, #1
   13e10:	add	r0, r0, r5, lsl #1
   13e14:	ldrb	r0, [r0, #1]
   13e18:	ubfx	r4, r0, #6, #1
   13e1c:	ldr	r0, [sp, #52]	; 0x34
   13e20:	mov	r2, r1
   13e24:	cmp	r1, #1
   13e28:	orr	r0, r4, r0
   13e2c:	bhi	141f8 <__mempcpy_chk@plt+0x3210>
   13e30:	tst	r0, #1
   13e34:	beq	141f8 <__mempcpy_chk@plt+0x3210>
   13e38:	ldr	lr, [sp, #28]
   13e3c:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   13e40:	cmp	r7, #0
   13e44:	ldrbeq	r0, [ip, #1]
   13e48:	cmpeq	r0, #0
   13e4c:	beq	13e5c <__mempcpy_chk@plt+0x2e74>
   13e50:	mvn	lr, #0
   13e54:	mov	r9, #0
   13e58:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   13e5c:	mov	r1, #1
   13e60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13e64:	cmp	r0, #2
   13e68:	bne	13e78 <__mempcpy_chk@plt+0x2e90>
   13e6c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13e70:	tst	r0, #1
   13e74:	bne	1457c <__mempcpy_chk@plt+0x3594>
   13e78:	mov	r4, r1
   13e7c:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   13e80:	ldr	r1, [sp, #48]	; 0x30
   13e84:	mov	r9, #0
   13e88:	mov	r0, #92	; 0x5c
   13e8c:	cmp	r1, #0
   13e90:	beq	13ea4 <__mempcpy_chk@plt+0x2ebc>
   13e94:	mov	r4, #0
   13e98:	cmp	r9, #0
   13e9c:	beq	14430 <__mempcpy_chk@plt+0x3448>
   13ea0:	b	1446c <__mempcpy_chk@plt+0x3484>
   13ea4:	ldr	r1, [sp, #84]	; 0x54
   13ea8:	mov	r4, #0
   13eac:	mov	r9, #0
   13eb0:	tst	r1, #1
   13eb4:	bne	13ef4 <__mempcpy_chk@plt+0x2f0c>
   13eb8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ebc:	cmp	r0, #0
   13ec0:	mov	r0, r5
   13ec4:	beq	13ee8 <__mempcpy_chk@plt+0x2f00>
   13ec8:	ldr	r1, [fp, #16]
   13ecc:	ubfx	r0, r5, #5, #3
   13ed0:	mov	r2, #1
   13ed4:	ldr	r0, [r1, r0, lsl #2]
   13ed8:	and	r1, r5, #31
   13edc:	tst	r0, r2, lsl r1
   13ee0:	mov	r0, r5
   13ee4:	bne	13ef4 <__mempcpy_chk@plt+0x2f0c>
   13ee8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13eec:	cmp	r1, #0
   13ef0:	beq	14428 <__mempcpy_chk@plt+0x3440>
   13ef4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13ef8:	tst	r1, #1
   13efc:	bne	14554 <__mempcpy_chk@plt+0x356c>
   13f00:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13f04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13f08:	cmp	r1, #2
   13f0c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13f10:	movwne	r1, #1
   13f14:	orr	r1, r1, r2
   13f18:	tst	r1, #1
   13f1c:	beq	13f28 <__mempcpy_chk@plt+0x2f40>
   13f20:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13f24:	b	13f64 <__mempcpy_chk@plt+0x2f7c>
   13f28:	cmp	r8, sl
   13f2c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13f30:	movcc	r1, #39	; 0x27
   13f34:	strbcc	r1, [r6, r8]
   13f38:	add	r1, r8, #1
   13f3c:	cmp	r1, sl
   13f40:	movcc	r2, #36	; 0x24
   13f44:	strbcc	r2, [r6, r1]
   13f48:	add	r1, r8, #2
   13f4c:	add	r8, r8, #3
   13f50:	cmp	r1, sl
   13f54:	movcc	r2, #39	; 0x27
   13f58:	strbcc	r2, [r6, r1]
   13f5c:	mov	r1, #1
   13f60:	str	r1, [fp, #-56]	; 0xffffffc8
   13f64:	cmp	r8, sl
   13f68:	movcc	r1, #92	; 0x5c
   13f6c:	strbcc	r1, [r6, r8]
   13f70:	add	r8, r8, #1
   13f74:	cmp	r8, sl
   13f78:	and	r5, r5, r4
   13f7c:	add	r7, r7, #1
   13f80:	strbcc	r0, [r6, r8]
   13f84:	add	r8, r8, #1
   13f88:	cmn	lr, #1
   13f8c:	bne	13988 <__mempcpy_chk@plt+0x29a0>
   13f90:	b	13994 <__mempcpy_chk@plt+0x29ac>
   13f94:	ldr	r0, [sp, #36]	; 0x24
   13f98:	mov	r4, #0
   13f9c:	mov	r9, #0
   13fa0:	mov	r5, #0
   13fa4:	cmp	r0, #0
   13fa8:	beq	13eb8 <__mempcpy_chk@plt+0x2ed0>
   13fac:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13fb0:	add	r7, r7, #1
   13fb4:	cmn	lr, #1
   13fb8:	bne	13988 <__mempcpy_chk@plt+0x29a0>
   13fbc:	b	13994 <__mempcpy_chk@plt+0x29ac>
   13fc0:	mov	r0, #0
   13fc4:	cmn	lr, #1
   13fc8:	str	r0, [fp, #-36]	; 0xffffffdc
   13fcc:	str	r0, [fp, #-40]	; 0xffffffd8
   13fd0:	bne	13fe4 <__mempcpy_chk@plt+0x2ffc>
   13fd4:	mov	r0, ip
   13fd8:	bl	10f10 <strlen@plt>
   13fdc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13fe0:	mov	lr, r0
   13fe4:	add	r0, ip, r7
   13fe8:	mov	r4, #1
   13fec:	mov	r6, #0
   13ff0:	str	lr, [sp, #28]
   13ff4:	str	r0, [sp, #24]
   13ff8:	sub	r0, fp, #40	; 0x28
   13ffc:	mov	r3, r0
   14000:	str	r6, [sp, #44]	; 0x2c
   14004:	add	r6, r6, r7
   14008:	sub	r0, fp, #44	; 0x2c
   1400c:	add	r1, ip, r6
   14010:	sub	r2, lr, r6
   14014:	bl	16310 <__mempcpy_chk@plt+0x5328>
   14018:	cmp	r0, #0
   1401c:	beq	144b4 <__mempcpy_chk@plt+0x34cc>
   14020:	cmn	r0, #1
   14024:	beq	14474 <__mempcpy_chk@plt+0x348c>
   14028:	ldr	lr, [sp, #28]
   1402c:	cmn	r0, #2
   14030:	beq	1447c <__mempcpy_chk@plt+0x3494>
   14034:	ldr	r2, [sp, #64]	; 0x40
   14038:	cmp	r0, #2
   1403c:	mov	r1, #0
   14040:	movwcc	r1, #1
   14044:	eor	r2, r2, #1
   14048:	orrs	r1, r2, r1
   1404c:	bne	1410c <__mempcpy_chk@plt+0x3124>
   14050:	ldr	r1, [sp, #44]	; 0x2c
   14054:	ldr	r2, [sp, #24]
   14058:	add	r1, r2, r1
   1405c:	mov	r2, #1
   14060:	ldrb	r3, [r1, r2]
   14064:	sub	r3, r3, #91	; 0x5b
   14068:	cmp	r3, #33	; 0x21
   1406c:	bhi	14100 <__mempcpy_chk@plt+0x3118>
   14070:	add	r6, pc, #0
   14074:	ldr	pc, [r6, r3, lsl #2]
   14078:	andeq	r4, r1, r4, ror r5
   1407c:	andeq	r4, r1, r4, ror r5
   14080:	andeq	r4, r1, r0, lsl #2
   14084:	andeq	r4, r1, r4, ror r5
   14088:	andeq	r4, r1, r0, lsl #2
   1408c:	andeq	r4, r1, r4, ror r5
   14090:	andeq	r4, r1, r0, lsl #2
   14094:	andeq	r4, r1, r0, lsl #2
   14098:	andeq	r4, r1, r0, lsl #2
   1409c:	andeq	r4, r1, r0, lsl #2
   140a0:	andeq	r4, r1, r0, lsl #2
   140a4:	andeq	r4, r1, r0, lsl #2
   140a8:	andeq	r4, r1, r0, lsl #2
   140ac:	andeq	r4, r1, r0, lsl #2
   140b0:	andeq	r4, r1, r0, lsl #2
   140b4:	andeq	r4, r1, r0, lsl #2
   140b8:	andeq	r4, r1, r0, lsl #2
   140bc:	andeq	r4, r1, r0, lsl #2
   140c0:	andeq	r4, r1, r0, lsl #2
   140c4:	andeq	r4, r1, r0, lsl #2
   140c8:	andeq	r4, r1, r0, lsl #2
   140cc:	andeq	r4, r1, r0, lsl #2
   140d0:	andeq	r4, r1, r0, lsl #2
   140d4:	andeq	r4, r1, r0, lsl #2
   140d8:	andeq	r4, r1, r0, lsl #2
   140dc:	andeq	r4, r1, r0, lsl #2
   140e0:	andeq	r4, r1, r0, lsl #2
   140e4:	andeq	r4, r1, r0, lsl #2
   140e8:	andeq	r4, r1, r0, lsl #2
   140ec:	andeq	r4, r1, r0, lsl #2
   140f0:	andeq	r4, r1, r0, lsl #2
   140f4:	andeq	r4, r1, r0, lsl #2
   140f8:	andeq	r4, r1, r0, lsl #2
   140fc:	andeq	r4, r1, r4, ror r5
   14100:	add	r2, r2, #1
   14104:	cmp	r2, r0
   14108:	bcc	14060 <__mempcpy_chk@plt+0x3078>
   1410c:	ldr	r6, [sp, #44]	; 0x2c
   14110:	add	r6, r0, r6
   14114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14118:	bl	10e50 <iswprint@plt>
   1411c:	cmp	r0, #0
   14120:	movwne	r0, #1
   14124:	and	r4, r4, r0
   14128:	sub	r0, fp, #40	; 0x28
   1412c:	bl	10e08 <mbsinit@plt>
   14130:	ldr	lr, [sp, #28]
   14134:	ldr	ip, [fp, #-84]	; 0xffffffac
   14138:	sub	r3, fp, #40	; 0x28
   1413c:	cmp	r0, #0
   14140:	beq	14000 <__mempcpy_chk@plt+0x3018>
   14144:	b	144bc <__mempcpy_chk@plt+0x34d4>
   14148:	ldr	r0, [sp, #32]
   1414c:	cmp	r0, #0
   14150:	beq	141ec <__mempcpy_chk@plt+0x3204>
   14154:	add	r0, r7, #2
   14158:	cmp	r0, lr
   1415c:	bcs	141ec <__mempcpy_chk@plt+0x3204>
   14160:	add	r1, ip, r7
   14164:	ldrb	r1, [r1, #1]
   14168:	cmp	r1, #63	; 0x3f
   1416c:	bne	141ec <__mempcpy_chk@plt+0x3204>
   14170:	ldrb	r5, [ip, r0]
   14174:	sub	r1, r5, #33	; 0x21
   14178:	cmp	r1, #29
   1417c:	bhi	141ec <__mempcpy_chk@plt+0x3204>
   14180:	movw	r3, #20929	; 0x51c1
   14184:	mov	r2, #1
   14188:	movt	r3, #14336	; 0x3800
   1418c:	tst	r3, r2, lsl r1
   14190:	beq	141ec <__mempcpy_chk@plt+0x3204>
   14194:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14198:	tst	r1, #1
   1419c:	bne	14694 <__mempcpy_chk@plt+0x36ac>
   141a0:	cmp	r8, sl
   141a4:	mov	r7, r0
   141a8:	mov	r4, #0
   141ac:	movcc	r1, #63	; 0x3f
   141b0:	strbcc	r1, [r6, r8]
   141b4:	add	r1, r8, #1
   141b8:	cmp	r1, sl
   141bc:	movcc	r2, #34	; 0x22
   141c0:	strbcc	r2, [r6, r1]
   141c4:	add	r1, r8, #2
   141c8:	cmp	r1, sl
   141cc:	movcc	r2, #34	; 0x22
   141d0:	strbcc	r2, [r6, r1]
   141d4:	add	r1, r8, #3
   141d8:	add	r8, r8, #4
   141dc:	cmp	r1, sl
   141e0:	movcc	r2, #63	; 0x3f
   141e4:	strbcc	r2, [r6, r1]
   141e8:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   141ec:	mov	r5, #63	; 0x3f
   141f0:	mov	r4, #0
   141f4:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   141f8:	add	r1, r2, r7
   141fc:	ldr	lr, [sp, #28]
   14200:	mov	r3, #0
   14204:	str	r1, [sp, #44]	; 0x2c
   14208:	add	r1, r7, #1
   1420c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14210:	tst	r0, #1
   14214:	bne	142e8 <__mempcpy_chk@plt+0x3300>
   14218:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1421c:	tst	r2, #1
   14220:	bne	145dc <__mempcpy_chk@plt+0x35f4>
   14224:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14228:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1422c:	cmp	r7, #2
   14230:	movwne	r3, #1
   14234:	orr	r3, r3, r2
   14238:	tst	r3, #1
   1423c:	bne	14278 <__mempcpy_chk@plt+0x3290>
   14240:	cmp	r8, sl
   14244:	add	r3, r8, #1
   14248:	movcc	r2, #39	; 0x27
   1424c:	strbcc	r2, [r6, r8]
   14250:	cmp	r3, sl
   14254:	movcc	r2, #36	; 0x24
   14258:	strbcc	r2, [r6, r3]
   1425c:	add	r3, r8, #2
   14260:	add	r8, r8, #3
   14264:	cmp	r3, sl
   14268:	movcc	r2, #39	; 0x27
   1426c:	strbcc	r2, [r6, r3]
   14270:	mov	r2, #1
   14274:	str	r2, [fp, #-56]	; 0xffffffc8
   14278:	cmp	r8, sl
   1427c:	movcc	r3, #92	; 0x5c
   14280:	strbcc	r3, [r6, r8]
   14284:	add	r3, r8, #1
   14288:	cmp	r3, sl
   1428c:	andcc	r7, r5, #192	; 0xc0
   14290:	movcc	r2, #48	; 0x30
   14294:	orrcc	r7, r2, r7, lsr #6
   14298:	strbcc	r7, [r6, r3]
   1429c:	add	r3, r8, #2
   142a0:	add	r8, r8, #3
   142a4:	cmp	r3, sl
   142a8:	lsrcc	r7, r5, #3
   142ac:	movcc	r2, #6
   142b0:	bficc	r7, r2, #3, #29
   142b4:	mov	r2, #6
   142b8:	strbcc	r7, [r6, r3]
   142bc:	bfi	r5, r2, #3, #29
   142c0:	mov	r3, #1
   142c4:	b	1430c <__mempcpy_chk@plt+0x3324>
   142c8:	cmp	r8, sl
   142cc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   142d0:	strbcc	r5, [r6, r8]
   142d4:	add	r8, r8, #1
   142d8:	ldrb	r5, [ip, r1]
   142dc:	add	r1, r1, #1
   142e0:	tst	r0, #1
   142e4:	beq	14218 <__mempcpy_chk@plt+0x3230>
   142e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   142ec:	tst	r2, #1
   142f0:	beq	14304 <__mempcpy_chk@plt+0x331c>
   142f4:	cmp	r8, sl
   142f8:	movcc	r7, #92	; 0x5c
   142fc:	strbcc	r7, [r6, r8]
   14300:	add	r8, r8, #1
   14304:	mov	r2, #0
   14308:	str	r2, [fp, #-52]	; 0xffffffcc
   1430c:	ldr	r2, [sp, #44]	; 0x2c
   14310:	and	r9, r3, #1
   14314:	cmp	r2, r1
   14318:	bls	14418 <__mempcpy_chk@plt+0x3430>
   1431c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14320:	cmp	r9, #0
   14324:	movwne	r9, #1
   14328:	mvn	r7, r2
   1432c:	orr	r7, r7, r9
   14330:	tst	r7, #1
   14334:	bne	142c8 <__mempcpy_chk@plt+0x32e0>
   14338:	cmp	r8, sl
   1433c:	movcc	r7, #39	; 0x27
   14340:	strbcc	r7, [r6, r8]
   14344:	add	r7, r8, #1
   14348:	add	r8, r8, #2
   1434c:	cmp	r7, sl
   14350:	movcc	r2, #39	; 0x27
   14354:	strbcc	r2, [r6, r7]
   14358:	mov	r2, #0
   1435c:	str	r2, [fp, #-56]	; 0xffffffc8
   14360:	b	142c8 <__mempcpy_chk@plt+0x32e0>
   14364:	cmp	r8, sl
   14368:	mov	r2, #1
   1436c:	movcc	r0, #39	; 0x27
   14370:	strbcc	r0, [r6, r8]
   14374:	add	r0, r8, #1
   14378:	cmp	r0, sl
   1437c:	movcc	r1, #36	; 0x24
   14380:	strbcc	r1, [r6, r0]
   14384:	add	r0, r8, #2
   14388:	cmp	r0, sl
   1438c:	movcc	r1, #39	; 0x27
   14390:	strbcc	r1, [r6, r0]
   14394:	add	r0, r8, #3
   14398:	cmp	r0, sl
   1439c:	add	r8, r0, #1
   143a0:	str	r2, [fp, #-56]	; 0xffffffc8
   143a4:	movcc	r1, #92	; 0x5c
   143a8:	strbcc	r1, [r6, r0]
   143ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   143b0:	cmp	r1, #2
   143b4:	beq	14408 <__mempcpy_chk@plt+0x3420>
   143b8:	add	r1, r7, #1
   143bc:	mov	r4, #0
   143c0:	mov	r9, #1
   143c4:	mov	r5, #48	; 0x30
   143c8:	cmp	r1, lr
   143cc:	bcs	13c50 <__mempcpy_chk@plt+0x2c68>
   143d0:	ldrb	r1, [ip, r1]
   143d4:	sub	r1, r1, #48	; 0x30
   143d8:	uxtb	r1, r1
   143dc:	cmp	r1, #9
   143e0:	bhi	13c50 <__mempcpy_chk@plt+0x2c68>
   143e4:	cmp	r8, sl
   143e8:	movcc	r1, #48	; 0x30
   143ec:	strbcc	r1, [r6, r8]
   143f0:	add	r1, r0, #2
   143f4:	add	r8, r0, #3
   143f8:	cmp	r1, sl
   143fc:	movcc	r2, #48	; 0x30
   14400:	strbcc	r2, [r6, r1]
   14404:	b	13c50 <__mempcpy_chk@plt+0x2c68>
   14408:	mov	r0, #48	; 0x30
   1440c:	mov	r9, #1
   14410:	mov	r4, #0
   14414:	b	13ee8 <__mempcpy_chk@plt+0x2f00>
   14418:	cmp	r9, #0
   1441c:	sub	r7, r1, #1
   14420:	mov	r0, r5
   14424:	movwne	r9, #1
   14428:	cmp	r9, #0
   1442c:	bne	1446c <__mempcpy_chk@plt+0x3484>
   14430:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14434:	tst	r1, #1
   14438:	beq	1446c <__mempcpy_chk@plt+0x3484>
   1443c:	cmp	r8, sl
   14440:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14444:	movcc	r1, #39	; 0x27
   14448:	strbcc	r1, [r6, r8]
   1444c:	add	r1, r8, #1
   14450:	add	r8, r8, #2
   14454:	cmp	r1, sl
   14458:	movcc	r2, #39	; 0x27
   1445c:	strbcc	r2, [r6, r1]
   14460:	mov	r1, #0
   14464:	str	r1, [fp, #-56]	; 0xffffffc8
   14468:	b	13f74 <__mempcpy_chk@plt+0x2f8c>
   1446c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14470:	b	13f74 <__mempcpy_chk@plt+0x2f8c>
   14474:	mov	r4, #0
   14478:	b	144b4 <__mempcpy_chk@plt+0x34cc>
   1447c:	mov	r4, #0
   14480:	cmp	lr, r6
   14484:	bls	144b4 <__mempcpy_chk@plt+0x34cc>
   14488:	ldr	ip, [fp, #-84]	; 0xffffffac
   1448c:	ldr	r6, [sp, #44]	; 0x2c
   14490:	ldr	r0, [sp, #24]
   14494:	ldrb	r0, [r0, r6]
   14498:	cmp	r0, #0
   1449c:	beq	144bc <__mempcpy_chk@plt+0x34d4>
   144a0:	add	r6, r6, #1
   144a4:	add	r0, r7, r6
   144a8:	cmp	r0, lr
   144ac:	bcc	14490 <__mempcpy_chk@plt+0x34a8>
   144b0:	b	144bc <__mempcpy_chk@plt+0x34d4>
   144b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   144b8:	ldr	r6, [sp, #44]	; 0x2c
   144bc:	mov	r1, r6
   144c0:	ldr	r6, [sp, #80]	; 0x50
   144c4:	b	13e1c <__mempcpy_chk@plt+0x2e34>
   144c8:	mov	lr, r7
   144cc:	b	144d4 <__mempcpy_chk@plt+0x34ec>
   144d0:	mvn	lr, #0
   144d4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   144d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   144dc:	eor	r0, r7, #2
   144e0:	orr	r0, r0, r8
   144e4:	clz	r0, r0
   144e8:	lsr	r0, r0, #5
   144ec:	tst	r1, r0
   144f0:	bne	1457c <__mempcpy_chk@plt+0x3594>
   144f4:	mov	r0, r1
   144f8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   144fc:	cmp	r7, #2
   14500:	movwne	r1, #1
   14504:	orr	r0, r0, r1
   14508:	tst	r0, #1
   1450c:	ldreq	r0, [sp, #60]	; 0x3c
   14510:	eoreq	r0, r0, #1
   14514:	tsteq	r0, #1
   14518:	bne	14628 <__mempcpy_chk@plt+0x3640>
   1451c:	mov	r9, lr
   14520:	tst	r5, #1
   14524:	bne	145e4 <__mempcpy_chk@plt+0x35fc>
   14528:	ldr	r6, [sp, #56]	; 0x38
   1452c:	mov	r4, #0
   14530:	cmp	r6, #0
   14534:	beq	14620 <__mempcpy_chk@plt+0x3638>
   14538:	ldr	r0, [sp, #84]	; 0x54
   1453c:	mov	r1, #0
   14540:	cmp	sl, #0
   14544:	mov	r5, #0
   14548:	str	r1, [fp, #-72]	; 0xffffffb8
   1454c:	beq	1371c <__mempcpy_chk@plt+0x2734>
   14550:	b	14628 <__mempcpy_chk@plt+0x3640>
   14554:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14558:	ldr	r2, [sp, #84]	; 0x54
   1455c:	b	14584 <__mempcpy_chk@plt+0x359c>
   14560:	ldr	ip, [fp, #-84]	; 0xffffffac
   14564:	mov	r2, #1
   14568:	mov	lr, r4
   1456c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14570:	b	14584 <__mempcpy_chk@plt+0x359c>
   14574:	ldr	r6, [sp, #80]	; 0x50
   14578:	ldr	ip, [fp, #-84]	; 0xffffffac
   1457c:	ldr	r2, [sp, #84]	; 0x54
   14580:	mov	r7, #2
   14584:	mov	r0, #0
   14588:	ldr	r1, [fp, #12]
   1458c:	tst	r2, #1
   14590:	mov	r2, r7
   14594:	mov	r3, lr
   14598:	str	r0, [sp, #8]
   1459c:	ldr	r0, [sp, #72]	; 0x48
   145a0:	movwne	r2, #4
   145a4:	cmp	r7, #2
   145a8:	movne	r2, r7
   145ac:	str	r2, [sp]
   145b0:	mov	r2, ip
   145b4:	bic	r1, r1, #2
   145b8:	str	r0, [sp, #12]
   145bc:	ldr	r0, [sp, #76]	; 0x4c
   145c0:	str	r1, [sp, #4]
   145c4:	mov	r1, sl
   145c8:	str	r0, [sp, #16]
   145cc:	mov	r0, r6
   145d0:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   145d4:	mov	r8, r0
   145d8:	b	14680 <__mempcpy_chk@plt+0x3698>
   145dc:	ldr	r2, [sp, #84]	; 0x54
   145e0:	b	14584 <__mempcpy_chk@plt+0x359c>
   145e4:	mov	r0, #5
   145e8:	ldr	r1, [sp, #56]	; 0x38
   145ec:	ldr	r2, [fp, #-84]	; 0xffffffac
   145f0:	mov	r3, r9
   145f4:	str	r0, [sp]
   145f8:	ldr	r0, [fp, #12]
   145fc:	str	r0, [sp, #4]
   14600:	ldr	r0, [fp, #16]
   14604:	str	r0, [sp, #8]
   14608:	ldr	r0, [sp, #72]	; 0x48
   1460c:	str	r0, [sp, #12]
   14610:	ldr	r0, [sp, #76]	; 0x4c
   14614:	str	r0, [sp, #16]
   14618:	ldr	r0, [sp, #80]	; 0x50
   1461c:	b	145d0 <__mempcpy_chk@plt+0x35e8>
   14620:	mov	r0, #0
   14624:	str	r0, [fp, #-72]	; 0xffffffb8
   14628:	ldr	r1, [sp, #92]	; 0x5c
   1462c:	cmp	r1, #0
   14630:	beq	14670 <__mempcpy_chk@plt+0x3688>
   14634:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14638:	ldr	r2, [sp, #80]	; 0x50
   1463c:	tst	r0, #1
   14640:	bne	14674 <__mempcpy_chk@plt+0x368c>
   14644:	ldrb	r0, [r1]
   14648:	cmp	r0, #0
   1464c:	beq	14674 <__mempcpy_chk@plt+0x368c>
   14650:	add	r1, r1, #1
   14654:	cmp	r8, sl
   14658:	strbcc	r0, [r2, r8]
   1465c:	add	r8, r8, #1
   14660:	ldrb	r0, [r1], #1
   14664:	cmp	r0, #0
   14668:	bne	14654 <__mempcpy_chk@plt+0x366c>
   1466c:	b	14674 <__mempcpy_chk@plt+0x368c>
   14670:	ldr	r2, [sp, #80]	; 0x50
   14674:	cmp	r8, sl
   14678:	movcc	r0, #0
   1467c:	strbcc	r0, [r2, r8]
   14680:	mov	r0, r8
   14684:	sub	sp, fp, #28
   14688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1468c:	mov	r2, #1
   14690:	b	1456c <__mempcpy_chk@plt+0x3584>
   14694:	ldr	r2, [sp, #84]	; 0x54
   14698:	mov	r7, #5
   1469c:	b	14584 <__mempcpy_chk@plt+0x359c>
   146a0:	bl	10fd0 <abort@plt>
   146a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146a8:	add	fp, sp, #28
   146ac:	sub	sp, sp, #28
   146b0:	movw	r5, #33112	; 0x8158
   146b4:	cmp	r2, #0
   146b8:	mov	r4, r1
   146bc:	mov	r7, r0
   146c0:	str	r0, [sp, #20]
   146c4:	movt	r5, #2
   146c8:	movne	r5, r2
   146cc:	bl	10f1c <__errno_location@plt>
   146d0:	mov	sl, r0
   146d4:	ldm	r5, {r0, r1}
   146d8:	ldr	r2, [r5, #40]	; 0x28
   146dc:	ldr	r3, [r5, #44]	; 0x2c
   146e0:	add	r9, r5, #8
   146e4:	ldr	r6, [sl]
   146e8:	orr	r8, r1, #1
   146ec:	mov	r1, #0
   146f0:	str	r6, [sp, #24]
   146f4:	stm	sp, {r0, r8, r9}
   146f8:	str	r2, [sp, #12]
   146fc:	str	r3, [sp, #16]
   14700:	mov	r0, #0
   14704:	mov	r2, r7
   14708:	mov	r3, r4
   1470c:	mov	r6, r4
   14710:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   14714:	add	r7, r0, #1
   14718:	mov	r0, r7
   1471c:	bl	15a30 <__mempcpy_chk@plt+0x4a48>
   14720:	mov	r4, r0
   14724:	ldr	r0, [r5]
   14728:	ldr	r2, [r5, #44]	; 0x2c
   1472c:	ldr	r1, [r5, #40]	; 0x28
   14730:	mov	r3, r6
   14734:	stm	sp, {r0, r8, r9}
   14738:	str	r2, [sp, #16]
   1473c:	str	r1, [sp, #12]
   14740:	mov	r0, r4
   14744:	mov	r1, r7
   14748:	ldr	r2, [sp, #20]
   1474c:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   14750:	ldr	r0, [sp, #24]
   14754:	str	r0, [sl]
   14758:	mov	r0, r4
   1475c:	sub	sp, fp, #28
   14760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14768:	add	fp, sp, #28
   1476c:	sub	sp, sp, #36	; 0x24
   14770:	movw	r8, #33112	; 0x8158
   14774:	cmp	r3, #0
   14778:	mov	r4, r2
   1477c:	str	r2, [sp, #24]
   14780:	mov	r5, r1
   14784:	mov	r6, r0
   14788:	str	r0, [sp, #20]
   1478c:	movt	r8, #2
   14790:	movne	r8, r3
   14794:	bl	10f1c <__errno_location@plt>
   14798:	str	r0, [sp, #28]
   1479c:	cmp	r4, #0
   147a0:	add	sl, r8, #8
   147a4:	ldm	r8, {r3, r9}
   147a8:	ldr	r7, [r0]
   147ac:	ldr	r1, [r8, #40]	; 0x28
   147b0:	ldr	r2, [r8, #44]	; 0x2c
   147b4:	mov	r0, #0
   147b8:	orreq	r9, r9, #1
   147bc:	str	r7, [sp, #32]
   147c0:	mov	r7, r5
   147c4:	stm	sp, {r3, r9, sl}
   147c8:	str	r1, [sp, #12]
   147cc:	str	r2, [sp, #16]
   147d0:	mov	r1, #0
   147d4:	mov	r2, r6
   147d8:	mov	r3, r5
   147dc:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   147e0:	add	r4, r0, #1
   147e4:	mov	r5, r0
   147e8:	mov	r0, r4
   147ec:	bl	15a30 <__mempcpy_chk@plt+0x4a48>
   147f0:	mov	r6, r0
   147f4:	ldr	r0, [r8]
   147f8:	ldr	r2, [r8, #44]	; 0x2c
   147fc:	ldr	r1, [r8, #40]	; 0x28
   14800:	mov	r3, r7
   14804:	stm	sp, {r0, r9, sl}
   14808:	str	r2, [sp, #16]
   1480c:	str	r1, [sp, #12]
   14810:	mov	r0, r6
   14814:	mov	r1, r4
   14818:	ldr	r2, [sp, #20]
   1481c:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   14820:	ldr	r0, [sp, #24]
   14824:	ldr	r1, [sp, #32]
   14828:	ldr	r2, [sp, #28]
   1482c:	cmp	r0, #0
   14830:	str	r1, [r2]
   14834:	strne	r5, [r0]
   14838:	mov	r0, r6
   1483c:	sub	sp, fp, #28
   14840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14844:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14848:	add	fp, sp, #24
   1484c:	movw	r5, #33012	; 0x80f4
   14850:	movw	r8, #33008	; 0x80f0
   14854:	movt	r5, #2
   14858:	movt	r8, #2
   1485c:	ldr	r0, [r5]
   14860:	ldr	r4, [r8]
   14864:	cmp	r0, #2
   14868:	blt	14894 <__mempcpy_chk@plt+0x38ac>
   1486c:	add	r7, r4, #12
   14870:	mov	r6, #0
   14874:	ldr	r0, [r7, r6, lsl #3]
   14878:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   1487c:	ldr	r1, [r5]
   14880:	add	r2, r6, #2
   14884:	add	r0, r6, #1
   14888:	mov	r6, r0
   1488c:	cmp	r2, r1
   14890:	blt	14874 <__mempcpy_chk@plt+0x388c>
   14894:	ldr	r0, [r4, #4]
   14898:	movw	r7, #33160	; 0x8188
   1489c:	movt	r7, #2
   148a0:	cmp	r0, r7
   148a4:	beq	148bc <__mempcpy_chk@plt+0x38d4>
   148a8:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   148ac:	movw	r0, #33016	; 0x80f8
   148b0:	mov	r6, #256	; 0x100
   148b4:	movt	r0, #2
   148b8:	strd	r6, [r0]
   148bc:	movw	r6, #33016	; 0x80f8
   148c0:	movt	r6, #2
   148c4:	cmp	r4, r6
   148c8:	beq	148d8 <__mempcpy_chk@plt+0x38f0>
   148cc:	mov	r0, r4
   148d0:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   148d4:	str	r6, [r8]
   148d8:	mov	r0, #1
   148dc:	str	r0, [r5]
   148e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148e4:	movw	r3, #33112	; 0x8158
   148e8:	mvn	r2, #0
   148ec:	movt	r3, #2
   148f0:	b	148f4 <__mempcpy_chk@plt+0x390c>
   148f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148f8:	add	fp, sp, #28
   148fc:	sub	sp, sp, #44	; 0x2c
   14900:	mov	r7, r3
   14904:	str	r2, [sp, #36]	; 0x24
   14908:	str	r1, [sp, #32]
   1490c:	mov	r5, r0
   14910:	bl	10f1c <__errno_location@plt>
   14914:	cmp	r5, #0
   14918:	blt	14a84 <__mempcpy_chk@plt+0x3a9c>
   1491c:	cmn	r5, #-2147483647	; 0x80000001
   14920:	beq	14a84 <__mempcpy_chk@plt+0x3a9c>
   14924:	movw	r8, #33012	; 0x80f4
   14928:	movw	r4, #33008	; 0x80f0
   1492c:	str	r0, [sp, #28]
   14930:	ldr	r0, [r0]
   14934:	movt	r8, #2
   14938:	movt	r4, #2
   1493c:	ldr	r1, [r8]
   14940:	ldr	r6, [r4]
   14944:	str	r0, [sp, #24]
   14948:	cmp	r1, r5
   1494c:	ble	14958 <__mempcpy_chk@plt+0x3970>
   14950:	mov	sl, r6
   14954:	b	149c0 <__mempcpy_chk@plt+0x39d8>
   14958:	movw	r9, #33016	; 0x80f8
   1495c:	mov	r0, #8
   14960:	add	r2, r5, #1
   14964:	str	r1, [fp, #-32]	; 0xffffffe0
   14968:	mvn	r3, #-2147483648	; 0x80000000
   1496c:	movt	r9, #2
   14970:	str	r0, [sp]
   14974:	sub	r2, r2, r1
   14978:	sub	r1, fp, #32
   1497c:	subs	r0, r6, r9
   14980:	movne	r0, r6
   14984:	bl	15c30 <__mempcpy_chk@plt+0x4c48>
   14988:	cmp	r6, r9
   1498c:	mov	sl, r0
   14990:	str	r0, [r4]
   14994:	ldrdeq	r0, [r9]
   14998:	stmeq	sl, {r0, r1}
   1499c:	ldr	r1, [r8]
   149a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149a4:	add	r0, sl, r1, lsl #3
   149a8:	sub	r1, r2, r1
   149ac:	lsl	r2, r1, #3
   149b0:	mov	r1, #0
   149b4:	bl	10f34 <memset@plt>
   149b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149bc:	str	r0, [r8]
   149c0:	mov	r9, sl
   149c4:	ldr	r6, [r9, r5, lsl #3]!
   149c8:	ldr	r4, [r9, #4]!
   149cc:	ldm	r7, {r0, r1}
   149d0:	ldr	r2, [r7, #40]	; 0x28
   149d4:	ldr	r3, [r7, #44]	; 0x2c
   149d8:	orr	r8, r1, #1
   149dc:	add	r1, r7, #8
   149e0:	stm	sp, {r0, r8}
   149e4:	add	r0, sp, #8
   149e8:	str	r1, [sp, #20]
   149ec:	stm	r0, {r1, r2, r3}
   149f0:	mov	r0, r4
   149f4:	mov	r1, r6
   149f8:	ldr	r2, [sp, #32]
   149fc:	ldr	r3, [sp, #36]	; 0x24
   14a00:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   14a04:	cmp	r6, r0
   14a08:	bhi	14a6c <__mempcpy_chk@plt+0x3a84>
   14a0c:	add	r6, r0, #1
   14a10:	movw	r0, #33160	; 0x8188
   14a14:	movt	r0, #2
   14a18:	str	r6, [sl, r5, lsl #3]
   14a1c:	cmp	r4, r0
   14a20:	beq	14a2c <__mempcpy_chk@plt+0x3a44>
   14a24:	mov	r0, r4
   14a28:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   14a2c:	mov	r0, r6
   14a30:	bl	15a30 <__mempcpy_chk@plt+0x4a48>
   14a34:	str	r0, [r9]
   14a38:	mov	r4, r0
   14a3c:	add	r3, sp, #8
   14a40:	ldr	r0, [r7]
   14a44:	ldr	r1, [r7, #40]	; 0x28
   14a48:	ldr	r2, [r7, #44]	; 0x2c
   14a4c:	stm	sp, {r0, r8}
   14a50:	ldr	r0, [sp, #20]
   14a54:	stm	r3, {r0, r1, r2}
   14a58:	mov	r0, r4
   14a5c:	mov	r1, r6
   14a60:	ldr	r2, [sp, #32]
   14a64:	ldr	r3, [sp, #36]	; 0x24
   14a68:	bl	1369c <__mempcpy_chk@plt+0x26b4>
   14a6c:	ldr	r0, [sp, #28]
   14a70:	ldr	r1, [sp, #24]
   14a74:	str	r1, [r0]
   14a78:	mov	r0, r4
   14a7c:	sub	sp, fp, #28
   14a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a84:	bl	10fd0 <abort@plt>
   14a88:	movw	r3, #33112	; 0x8158
   14a8c:	movt	r3, #2
   14a90:	b	148f4 <__mempcpy_chk@plt+0x390c>
   14a94:	movw	r3, #33112	; 0x8158
   14a98:	mov	r1, r0
   14a9c:	mov	r0, #0
   14aa0:	mvn	r2, #0
   14aa4:	movt	r3, #2
   14aa8:	b	148f4 <__mempcpy_chk@plt+0x390c>
   14aac:	movw	r3, #33112	; 0x8158
   14ab0:	mov	r2, r1
   14ab4:	mov	r1, r0
   14ab8:	mov	r0, #0
   14abc:	movt	r3, #2
   14ac0:	b	148f4 <__mempcpy_chk@plt+0x390c>
   14ac4:	push	{fp, lr}
   14ac8:	mov	fp, sp
   14acc:	sub	sp, sp, #48	; 0x30
   14ad0:	vmov.i32	q8, #0	; 0x00000000
   14ad4:	mov	ip, #32
   14ad8:	mov	r3, sp
   14adc:	mov	lr, r2
   14ae0:	cmp	r1, #10
   14ae4:	add	r2, r3, #16
   14ae8:	vst1.64	{d16-d17}, [r3], ip
   14aec:	vst1.64	{d16-d17}, [r3]
   14af0:	vst1.64	{d16-d17}, [r2]
   14af4:	beq	14b14 <__mempcpy_chk@plt+0x3b2c>
   14af8:	str	r1, [sp]
   14afc:	mov	r3, sp
   14b00:	mov	r1, lr
   14b04:	mvn	r2, #0
   14b08:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14b0c:	mov	sp, fp
   14b10:	pop	{fp, pc}
   14b14:	bl	10fd0 <abort@plt>
   14b18:	push	{r4, sl, fp, lr}
   14b1c:	add	fp, sp, #8
   14b20:	sub	sp, sp, #48	; 0x30
   14b24:	mov	ip, r3
   14b28:	mov	r3, sp
   14b2c:	vmov.i32	q8, #0	; 0x00000000
   14b30:	mov	lr, #32
   14b34:	cmp	r1, #10
   14b38:	add	r4, r3, #16
   14b3c:	vst1.64	{d16-d17}, [r3], lr
   14b40:	vst1.64	{d16-d17}, [r3]
   14b44:	vst1.64	{d16-d17}, [r4]
   14b48:	beq	14b68 <__mempcpy_chk@plt+0x3b80>
   14b4c:	str	r1, [sp]
   14b50:	mov	r1, r2
   14b54:	mov	r3, sp
   14b58:	mov	r2, ip
   14b5c:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14b60:	sub	sp, fp, #8
   14b64:	pop	{r4, sl, fp, pc}
   14b68:	bl	10fd0 <abort@plt>
   14b6c:	push	{fp, lr}
   14b70:	mov	fp, sp
   14b74:	sub	sp, sp, #48	; 0x30
   14b78:	mov	r3, sp
   14b7c:	vmov.i32	q8, #0	; 0x00000000
   14b80:	mov	ip, #32
   14b84:	cmp	r0, #10
   14b88:	add	r2, r3, #16
   14b8c:	vst1.64	{d16-d17}, [r3], ip
   14b90:	vst1.64	{d16-d17}, [r3]
   14b94:	vst1.64	{d16-d17}, [r2]
   14b98:	beq	14bb8 <__mempcpy_chk@plt+0x3bd0>
   14b9c:	str	r0, [sp]
   14ba0:	mov	r3, sp
   14ba4:	mov	r0, #0
   14ba8:	mvn	r2, #0
   14bac:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14bb0:	mov	sp, fp
   14bb4:	pop	{fp, pc}
   14bb8:	bl	10fd0 <abort@plt>
   14bbc:	push	{fp, lr}
   14bc0:	mov	fp, sp
   14bc4:	sub	sp, sp, #48	; 0x30
   14bc8:	mov	r3, sp
   14bcc:	vmov.i32	q8, #0	; 0x00000000
   14bd0:	mov	ip, #32
   14bd4:	cmp	r0, #10
   14bd8:	add	lr, r3, #16
   14bdc:	vst1.64	{d16-d17}, [r3], ip
   14be0:	vst1.64	{d16-d17}, [r3]
   14be4:	vst1.64	{d16-d17}, [lr]
   14be8:	beq	14c04 <__mempcpy_chk@plt+0x3c1c>
   14bec:	str	r0, [sp]
   14bf0:	mov	r3, sp
   14bf4:	mov	r0, #0
   14bf8:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14bfc:	mov	sp, fp
   14c00:	pop	{fp, pc}
   14c04:	bl	10fd0 <abort@plt>
   14c08:	push	{r4, sl, fp, lr}
   14c0c:	add	fp, sp, #8
   14c10:	sub	sp, sp, #48	; 0x30
   14c14:	mov	lr, r0
   14c18:	movw	r0, #33112	; 0x8158
   14c1c:	mov	r3, #32
   14c20:	mov	ip, r1
   14c24:	mov	r4, #1
   14c28:	movt	r0, #2
   14c2c:	add	r1, r0, #16
   14c30:	vld1.64	{d16-d17}, [r0], r3
   14c34:	mov	r3, sp
   14c38:	vld1.64	{d18-d19}, [r1]
   14c3c:	add	r1, r3, #16
   14c40:	vld1.64	{d20-d21}, [r0]
   14c44:	add	r0, r3, #32
   14c48:	vst1.64	{d18-d19}, [r1]
   14c4c:	mov	r1, r3
   14c50:	vst1.64	{d20-d21}, [r0]
   14c54:	mov	r0, #28
   14c58:	and	r0, r0, r2, lsr #3
   14c5c:	and	r2, r2, #31
   14c60:	vst1.64	{d16-d17}, [r1], r0
   14c64:	ldr	r0, [r1, #8]
   14c68:	bic	r4, r4, r0, lsr r2
   14c6c:	eor	r0, r0, r4, lsl r2
   14c70:	mov	r2, ip
   14c74:	str	r0, [r1, #8]
   14c78:	mov	r0, #0
   14c7c:	mov	r1, lr
   14c80:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14c84:	sub	sp, fp, #8
   14c88:	pop	{r4, sl, fp, pc}
   14c8c:	push	{fp, lr}
   14c90:	mov	fp, sp
   14c94:	sub	sp, sp, #48	; 0x30
   14c98:	mov	ip, r0
   14c9c:	movw	r0, #33112	; 0x8158
   14ca0:	mov	r3, #32
   14ca4:	movt	r0, #2
   14ca8:	add	r2, r0, #16
   14cac:	vld1.64	{d16-d17}, [r0], r3
   14cb0:	mov	r3, sp
   14cb4:	vld1.64	{d18-d19}, [r2]
   14cb8:	add	r2, r3, #16
   14cbc:	vld1.64	{d20-d21}, [r0]
   14cc0:	add	r0, r3, #32
   14cc4:	vst1.64	{d18-d19}, [r2]
   14cc8:	mov	r2, r3
   14ccc:	vst1.64	{d20-d21}, [r0]
   14cd0:	mov	r0, #28
   14cd4:	and	r0, r0, r1, lsr #3
   14cd8:	and	r1, r1, #31
   14cdc:	vst1.64	{d16-d17}, [r2], r0
   14ce0:	mov	r0, #1
   14ce4:	ldr	lr, [r2, #8]
   14ce8:	bic	r0, r0, lr, lsr r1
   14cec:	eor	r0, lr, r0, lsl r1
   14cf0:	mov	r1, ip
   14cf4:	str	r0, [r2, #8]
   14cf8:	mov	r0, #0
   14cfc:	mvn	r2, #0
   14d00:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14d04:	mov	sp, fp
   14d08:	pop	{fp, pc}
   14d0c:	push	{fp, lr}
   14d10:	mov	fp, sp
   14d14:	sub	sp, sp, #48	; 0x30
   14d18:	movw	r2, #33112	; 0x8158
   14d1c:	mov	r3, #32
   14d20:	mov	r1, r0
   14d24:	movt	r2, #2
   14d28:	add	r0, r2, #16
   14d2c:	vld1.64	{d16-d17}, [r2], r3
   14d30:	mov	r3, sp
   14d34:	vld1.64	{d18-d19}, [r0]
   14d38:	add	r0, r3, #16
   14d3c:	vld1.64	{d20-d21}, [r2]
   14d40:	mov	r2, r3
   14d44:	vst1.64	{d18-d19}, [r0]
   14d48:	add	r0, r3, #32
   14d4c:	vst1.64	{d20-d21}, [r0]
   14d50:	mov	r0, #12
   14d54:	vst1.64	{d16-d17}, [r2], r0
   14d58:	ldr	r0, [r2]
   14d5c:	orr	r0, r0, #67108864	; 0x4000000
   14d60:	str	r0, [r2]
   14d64:	mov	r0, #0
   14d68:	mvn	r2, #0
   14d6c:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14d70:	mov	sp, fp
   14d74:	pop	{fp, pc}
   14d78:	push	{fp, lr}
   14d7c:	mov	fp, sp
   14d80:	sub	sp, sp, #48	; 0x30
   14d84:	mov	ip, r1
   14d88:	mov	r1, r0
   14d8c:	movw	r0, #33112	; 0x8158
   14d90:	mov	r3, #32
   14d94:	movt	r0, #2
   14d98:	add	r2, r0, #16
   14d9c:	vld1.64	{d16-d17}, [r0], r3
   14da0:	mov	r3, sp
   14da4:	vld1.64	{d18-d19}, [r2]
   14da8:	add	r2, r3, #16
   14dac:	vld1.64	{d20-d21}, [r0]
   14db0:	add	r0, r3, #32
   14db4:	vst1.64	{d18-d19}, [r2]
   14db8:	mov	r2, r3
   14dbc:	vst1.64	{d20-d21}, [r0]
   14dc0:	mov	r0, #12
   14dc4:	vst1.64	{d16-d17}, [r2], r0
   14dc8:	ldr	r0, [r2]
   14dcc:	orr	r0, r0, #67108864	; 0x4000000
   14dd0:	str	r0, [r2]
   14dd4:	mov	r0, #0
   14dd8:	mov	r2, ip
   14ddc:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14de0:	mov	sp, fp
   14de4:	pop	{fp, pc}
   14de8:	push	{r4, sl, fp, lr}
   14dec:	add	fp, sp, #8
   14df0:	sub	sp, sp, #96	; 0x60
   14df4:	mov	ip, r2
   14df8:	mov	r2, sp
   14dfc:	vmov.i32	q8, #0	; 0x00000000
   14e00:	mov	r4, #28
   14e04:	cmp	r1, #10
   14e08:	mov	r3, r2
   14e0c:	add	lr, r2, #16
   14e10:	vst1.64	{d16-d17}, [r3], r4
   14e14:	vst1.64	{d16-d17}, [lr]
   14e18:	vst1.32	{d16-d17}, [r3]
   14e1c:	beq	14e6c <__mempcpy_chk@plt+0x3e84>
   14e20:	vld1.64	{d16-d17}, [r2], r4
   14e24:	vld1.64	{d18-d19}, [lr]
   14e28:	add	r3, sp, #48	; 0x30
   14e2c:	add	r4, r3, #4
   14e30:	vld1.32	{d20-d21}, [r2]
   14e34:	add	r2, r3, #20
   14e38:	vst1.32	{d16-d17}, [r4]
   14e3c:	vst1.32	{d18-d19}, [r2]
   14e40:	add	r2, r3, #32
   14e44:	vst1.32	{d20-d21}, [r2]
   14e48:	str	r1, [sp, #48]	; 0x30
   14e4c:	mvn	r2, #0
   14e50:	ldr	r1, [sp, #60]	; 0x3c
   14e54:	orr	r1, r1, #67108864	; 0x4000000
   14e58:	str	r1, [sp, #60]	; 0x3c
   14e5c:	mov	r1, ip
   14e60:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14e64:	sub	sp, fp, #8
   14e68:	pop	{r4, sl, fp, pc}
   14e6c:	bl	10fd0 <abort@plt>
   14e70:	push	{r4, r5, fp, lr}
   14e74:	add	fp, sp, #8
   14e78:	sub	sp, sp, #48	; 0x30
   14e7c:	mov	ip, r3
   14e80:	movw	r3, #33112	; 0x8158
   14e84:	mov	lr, #32
   14e88:	cmp	r1, #0
   14e8c:	mov	r5, sp
   14e90:	movt	r3, #2
   14e94:	cmpne	r2, #0
   14e98:	add	r4, r3, #16
   14e9c:	vld1.64	{d16-d17}, [r3], lr
   14ea0:	vld1.64	{d18-d19}, [r4]
   14ea4:	add	r4, r5, #16
   14ea8:	vld1.64	{d20-d21}, [r3]
   14eac:	vst1.64	{d16-d17}, [r5], lr
   14eb0:	mov	r3, #10
   14eb4:	vst1.64	{d18-d19}, [r4]
   14eb8:	vst1.64	{d20-d21}, [r5]
   14ebc:	str	r3, [sp]
   14ec0:	bne	14ec8 <__mempcpy_chk@plt+0x3ee0>
   14ec4:	bl	10fd0 <abort@plt>
   14ec8:	str	r2, [sp, #44]	; 0x2c
   14ecc:	str	r1, [sp, #40]	; 0x28
   14ed0:	mov	r3, sp
   14ed4:	mov	r1, ip
   14ed8:	mvn	r2, #0
   14edc:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14ee0:	sub	sp, fp, #8
   14ee4:	pop	{r4, r5, fp, pc}
   14ee8:	push	{r4, r5, fp, lr}
   14eec:	add	fp, sp, #8
   14ef0:	sub	sp, sp, #48	; 0x30
   14ef4:	mov	lr, r3
   14ef8:	movw	r3, #33112	; 0x8158
   14efc:	mov	ip, #32
   14f00:	cmp	r1, #0
   14f04:	mov	r5, sp
   14f08:	movt	r3, #2
   14f0c:	cmpne	r2, #0
   14f10:	add	r4, r3, #16
   14f14:	vld1.64	{d16-d17}, [r3], ip
   14f18:	vld1.64	{d18-d19}, [r4]
   14f1c:	add	r4, r5, #16
   14f20:	vld1.64	{d20-d21}, [r3]
   14f24:	vst1.64	{d16-d17}, [r5], ip
   14f28:	mov	r3, #10
   14f2c:	vst1.64	{d18-d19}, [r4]
   14f30:	vst1.64	{d20-d21}, [r5]
   14f34:	str	r3, [sp]
   14f38:	bne	14f40 <__mempcpy_chk@plt+0x3f58>
   14f3c:	bl	10fd0 <abort@plt>
   14f40:	ldr	ip, [fp, #8]
   14f44:	str	r2, [sp, #44]	; 0x2c
   14f48:	str	r1, [sp, #40]	; 0x28
   14f4c:	mov	r3, sp
   14f50:	mov	r1, lr
   14f54:	mov	r2, ip
   14f58:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14f5c:	sub	sp, fp, #8
   14f60:	pop	{r4, r5, fp, pc}
   14f64:	push	{r4, sl, fp, lr}
   14f68:	add	fp, sp, #8
   14f6c:	sub	sp, sp, #48	; 0x30
   14f70:	mov	ip, r2
   14f74:	movw	r2, #33112	; 0x8158
   14f78:	mov	lr, #32
   14f7c:	cmp	r0, #0
   14f80:	mov	r4, sp
   14f84:	movt	r2, #2
   14f88:	cmpne	r1, #0
   14f8c:	add	r3, r2, #16
   14f90:	vld1.64	{d16-d17}, [r2], lr
   14f94:	vld1.64	{d18-d19}, [r3]
   14f98:	add	r3, r4, #16
   14f9c:	vld1.64	{d20-d21}, [r2]
   14fa0:	vst1.64	{d16-d17}, [r4], lr
   14fa4:	mov	r2, #10
   14fa8:	vst1.64	{d18-d19}, [r3]
   14fac:	vst1.64	{d20-d21}, [r4]
   14fb0:	str	r2, [sp]
   14fb4:	bne	14fbc <__mempcpy_chk@plt+0x3fd4>
   14fb8:	bl	10fd0 <abort@plt>
   14fbc:	str	r1, [sp, #44]	; 0x2c
   14fc0:	str	r0, [sp, #40]	; 0x28
   14fc4:	mov	r3, sp
   14fc8:	mov	r0, #0
   14fcc:	mov	r1, ip
   14fd0:	mvn	r2, #0
   14fd4:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   14fd8:	sub	sp, fp, #8
   14fdc:	pop	{r4, sl, fp, pc}
   14fe0:	push	{r4, r5, fp, lr}
   14fe4:	add	fp, sp, #8
   14fe8:	sub	sp, sp, #48	; 0x30
   14fec:	mov	lr, r2
   14ff0:	movw	r2, #33112	; 0x8158
   14ff4:	mov	ip, r3
   14ff8:	mov	r3, #32
   14ffc:	cmp	r0, #0
   15000:	mov	r5, sp
   15004:	movt	r2, #2
   15008:	cmpne	r1, #0
   1500c:	add	r4, r2, #16
   15010:	vld1.64	{d16-d17}, [r2], r3
   15014:	vld1.64	{d18-d19}, [r4]
   15018:	add	r4, r5, #16
   1501c:	vld1.64	{d20-d21}, [r2]
   15020:	vst1.64	{d16-d17}, [r5], r3
   15024:	mov	r2, #10
   15028:	vst1.64	{d18-d19}, [r4]
   1502c:	vst1.64	{d20-d21}, [r5]
   15030:	str	r2, [sp]
   15034:	bne	1503c <__mempcpy_chk@plt+0x4054>
   15038:	bl	10fd0 <abort@plt>
   1503c:	str	r1, [sp, #44]	; 0x2c
   15040:	str	r0, [sp, #40]	; 0x28
   15044:	mov	r3, sp
   15048:	mov	r0, #0
   1504c:	mov	r1, lr
   15050:	mov	r2, ip
   15054:	bl	148f4 <__mempcpy_chk@plt+0x390c>
   15058:	sub	sp, fp, #8
   1505c:	pop	{r4, r5, fp, pc}
   15060:	movw	r3, #33024	; 0x8100
   15064:	movt	r3, #2
   15068:	b	148f4 <__mempcpy_chk@plt+0x390c>
   1506c:	movw	r3, #33024	; 0x8100
   15070:	mov	r2, r1
   15074:	mov	r1, r0
   15078:	mov	r0, #0
   1507c:	movt	r3, #2
   15080:	b	148f4 <__mempcpy_chk@plt+0x390c>
   15084:	movw	r3, #33024	; 0x8100
   15088:	mvn	r2, #0
   1508c:	movt	r3, #2
   15090:	b	148f4 <__mempcpy_chk@plt+0x390c>
   15094:	movw	r3, #33024	; 0x8100
   15098:	mov	r1, r0
   1509c:	mov	r0, #0
   150a0:	mvn	r2, #0
   150a4:	movt	r3, #2
   150a8:	b	148f4 <__mempcpy_chk@plt+0x390c>
   150ac:	push	{r4, r5, fp, lr}
   150b0:	add	fp, sp, #8
   150b4:	mov	r5, r0
   150b8:	mov	r4, r1
   150bc:	mov	r0, #0
   150c0:	mov	r2, #5
   150c4:	mov	r1, r5
   150c8:	bl	10e20 <dcgettext@plt>
   150cc:	cmp	r0, r5
   150d0:	popne	{r4, r5, fp, pc}
   150d4:	bl	162d8 <__mempcpy_chk@plt+0x52f0>
   150d8:	ldrb	r1, [r0]
   150dc:	and	r1, r1, #223	; 0xdf
   150e0:	cmp	r1, #71	; 0x47
   150e4:	beq	1514c <__mempcpy_chk@plt+0x4164>
   150e8:	cmp	r1, #85	; 0x55
   150ec:	bne	15170 <__mempcpy_chk@plt+0x4188>
   150f0:	ldrb	r1, [r0, #1]
   150f4:	and	r1, r1, #223	; 0xdf
   150f8:	cmp	r1, #84	; 0x54
   150fc:	bne	15170 <__mempcpy_chk@plt+0x4188>
   15100:	ldrb	r1, [r0, #2]
   15104:	and	r1, r1, #223	; 0xdf
   15108:	cmp	r1, #70	; 0x46
   1510c:	ldrbeq	r1, [r0, #3]
   15110:	cmpeq	r1, #45	; 0x2d
   15114:	bne	15170 <__mempcpy_chk@plt+0x4188>
   15118:	ldrb	r1, [r0, #4]
   1511c:	cmp	r1, #56	; 0x38
   15120:	ldrbeq	r0, [r0, #5]
   15124:	cmpeq	r0, #0
   15128:	bne	15170 <__mempcpy_chk@plt+0x4188>
   1512c:	ldrb	r1, [r5]
   15130:	movw	r2, #28580	; 0x6fa4
   15134:	movw	r0, #28584	; 0x6fa8
   15138:	movt	r2, #1
   1513c:	movt	r0, #1
   15140:	cmp	r1, #96	; 0x60
   15144:	moveq	r0, r2
   15148:	pop	{r4, r5, fp, pc}
   1514c:	ldrb	r1, [r0, #1]
   15150:	and	r1, r1, #223	; 0xdf
   15154:	cmp	r1, #66	; 0x42
   15158:	bne	15170 <__mempcpy_chk@plt+0x4188>
   1515c:	ldrb	r1, [r0, #2]
   15160:	cmp	r1, #49	; 0x31
   15164:	ldrbeq	r1, [r0, #3]
   15168:	cmpeq	r1, #56	; 0x38
   1516c:	beq	1518c <__mempcpy_chk@plt+0x41a4>
   15170:	movw	r1, #28574	; 0x6f9e
   15174:	movw	r0, #28578	; 0x6fa2
   15178:	cmp	r4, #9
   1517c:	movt	r1, #1
   15180:	movt	r0, #1
   15184:	moveq	r0, r1
   15188:	pop	{r4, r5, fp, pc}
   1518c:	ldrb	r1, [r0, #4]
   15190:	cmp	r1, #48	; 0x30
   15194:	ldrbeq	r1, [r0, #5]
   15198:	cmpeq	r1, #51	; 0x33
   1519c:	bne	15170 <__mempcpy_chk@plt+0x4188>
   151a0:	ldrb	r1, [r0, #6]
   151a4:	cmp	r1, #48	; 0x30
   151a8:	ldrbeq	r0, [r0, #7]
   151ac:	cmpeq	r0, #0
   151b0:	bne	15170 <__mempcpy_chk@plt+0x4188>
   151b4:	ldrb	r1, [r5]
   151b8:	movw	r2, #28588	; 0x6fac
   151bc:	movw	r0, #28592	; 0x6fb0
   151c0:	movt	r2, #1
   151c4:	movt	r0, #1
   151c8:	b	15140 <__mempcpy_chk@plt+0x4158>
   151cc:	push	{r4, r5, r6, sl, fp, lr}
   151d0:	add	fp, sp, #16
   151d4:	ldr	r4, [r0], #8
   151d8:	mov	r5, r1
   151dc:	cmp	r4, r0
   151e0:	beq	15204 <__mempcpy_chk@plt+0x421c>
   151e4:	mov	r0, r4
   151e8:	mov	r1, r5
   151ec:	bl	16028 <__mempcpy_chk@plt+0x5040>
   151f0:	mov	r6, r0
   151f4:	cmp	r0, #0
   151f8:	moveq	r6, r4
   151fc:	mov	r0, r6
   15200:	pop	{r4, r5, r6, sl, fp, pc}
   15204:	mov	r0, r5
   15208:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   1520c:	cmp	r0, #0
   15210:	moveq	r6, #0
   15214:	moveq	r0, r6
   15218:	popeq	{r4, r5, r6, sl, fp, pc}
   1521c:	mov	r1, r4
   15220:	mov	r2, r5
   15224:	mov	r6, r0
   15228:	bl	10dfc <memcpy@plt>
   1522c:	mov	r0, r6
   15230:	pop	{r4, r5, r6, sl, fp, pc}
   15234:	push	{r4, r5, r6, sl, fp, lr}
   15238:	add	fp, sp, #16
   1523c:	mov	r4, r0
   15240:	add	r6, r0, #8
   15244:	ldrd	r0, [r0]
   15248:	lsl	r5, r1, #1
   1524c:	cmp	r0, r6
   15250:	beq	1525c <__mempcpy_chk@plt+0x4274>
   15254:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   15258:	ldr	r1, [r4, #4]
   1525c:	cmp	r5, r1
   15260:	bcc	15284 <__mempcpy_chk@plt+0x429c>
   15264:	mov	r0, r5
   15268:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   1526c:	cmp	r0, #0
   15270:	strne	r0, [r4]
   15274:	movne	r0, #1
   15278:	strne	r5, [r4, #4]
   1527c:	popne	{r4, r5, r6, sl, fp, pc}
   15280:	b	15290 <__mempcpy_chk@plt+0x42a8>
   15284:	bl	10f1c <__errno_location@plt>
   15288:	mov	r1, #12
   1528c:	str	r1, [r0]
   15290:	mov	r0, #0
   15294:	mov	r5, #1024	; 0x400
   15298:	str	r6, [r4]
   1529c:	str	r5, [r4, #4]
   152a0:	pop	{r4, r5, r6, sl, fp, pc}
   152a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   152a8:	add	fp, sp, #24
   152ac:	ldrd	r8, [r0]
   152b0:	add	r7, r0, #8
   152b4:	mov	r4, r0
   152b8:	lsl	r5, r9, #1
   152bc:	cmp	r8, r7
   152c0:	beq	152ec <__mempcpy_chk@plt+0x4304>
   152c4:	cmp	r5, r9
   152c8:	bcc	15320 <__mempcpy_chk@plt+0x4338>
   152cc:	mov	r0, r8
   152d0:	mov	r1, r5
   152d4:	bl	16028 <__mempcpy_chk@plt+0x5040>
   152d8:	mov	r6, r0
   152dc:	cmp	r0, #0
   152e0:	bne	15310 <__mempcpy_chk@plt+0x4328>
   152e4:	ldr	r8, [r4]
   152e8:	b	1532c <__mempcpy_chk@plt+0x4344>
   152ec:	mov	r0, r5
   152f0:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   152f4:	cmp	r0, #0
   152f8:	moveq	r0, #0
   152fc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   15300:	ldr	r2, [r4, #4]
   15304:	mov	r1, r8
   15308:	mov	r6, r0
   1530c:	bl	10dfc <memcpy@plt>
   15310:	mov	r0, #1
   15314:	str	r6, [r4]
   15318:	str	r5, [r4, #4]
   1531c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15320:	bl	10f1c <__errno_location@plt>
   15324:	mov	r1, #12
   15328:	str	r1, [r0]
   1532c:	mov	r0, r8
   15330:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   15334:	mov	r0, #0
   15338:	mov	r5, #1024	; 0x400
   1533c:	str	r7, [r4]
   15340:	str	r5, [r4, #4]
   15344:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15348:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1534c:	add	fp, sp, #24
   15350:	sub	sp, sp, #32
   15354:	ldr	r6, [fp, #12]
   15358:	ldr	r7, [fp, #8]
   1535c:	mov	r4, r2
   15360:	mov	r8, r0
   15364:	cmp	r1, #0
   15368:	beq	15390 <__mempcpy_chk@plt+0x43a8>
   1536c:	movw	r2, #28680	; 0x7008
   15370:	mov	r5, r1
   15374:	str	r3, [sp, #4]
   15378:	str	r4, [sp]
   1537c:	mov	r0, r8
   15380:	mov	r1, #1
   15384:	movt	r2, #1
   15388:	mov	r3, r5
   1538c:	b	153a8 <__mempcpy_chk@plt+0x43c0>
   15390:	movw	r2, #28692	; 0x7014
   15394:	str	r3, [sp]
   15398:	mov	r0, r8
   1539c:	mov	r1, #1
   153a0:	mov	r3, r4
   153a4:	movt	r2, #1
   153a8:	bl	10f58 <__fprintf_chk@plt>
   153ac:	movw	r1, #28699	; 0x701b
   153b0:	mov	r0, #0
   153b4:	mov	r2, #5
   153b8:	movt	r1, #1
   153bc:	bl	10e20 <dcgettext@plt>
   153c0:	movw	r2, #29417	; 0x72e9
   153c4:	mov	r3, r0
   153c8:	movw	r0, #2022	; 0x7e6
   153cc:	mov	r1, #1
   153d0:	str	r0, [sp]
   153d4:	movt	r2, #1
   153d8:	mov	r0, r8
   153dc:	bl	10f58 <__fprintf_chk@plt>
   153e0:	movw	r4, #26416	; 0x6730
   153e4:	mov	r1, r8
   153e8:	movt	r4, #1
   153ec:	mov	r0, r4
   153f0:	bl	10d9c <fputs_unlocked@plt>
   153f4:	movw	r1, #28703	; 0x701f
   153f8:	mov	r0, #0
   153fc:	mov	r2, #5
   15400:	movt	r1, #1
   15404:	bl	10e20 <dcgettext@plt>
   15408:	movw	r3, #28874	; 0x70ca
   1540c:	mov	r2, r0
   15410:	mov	r0, r8
   15414:	mov	r1, #1
   15418:	movt	r3, #1
   1541c:	bl	10f58 <__fprintf_chk@plt>
   15420:	mov	r0, r4
   15424:	mov	r1, r8
   15428:	bl	10d9c <fputs_unlocked@plt>
   1542c:	cmp	r6, #9
   15430:	bhi	1546c <__mempcpy_chk@plt+0x4484>
   15434:	add	r0, pc, #0
   15438:	ldr	pc, [r0, r6, lsl #2]
   1543c:	andeq	r5, r1, r4, ror #8
   15440:	andeq	r5, r1, r8, ror r4
   15444:	andeq	r5, r1, r8, lsr #9
   15448:	ldrdeq	r5, [r1], -r0
   1544c:	strdeq	r5, [r1], -r8
   15450:	andeq	r5, r1, r0, lsr #10
   15454:	andeq	r5, r1, r8, asr #10
   15458:	andeq	r5, r1, r0, lsl #11
   1545c:	andeq	r5, r1, r0, lsr #12
   15460:	andeq	r5, r1, r8, asr #11
   15464:	sub	sp, fp, #24
   15468:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1546c:	movw	r1, #29227	; 0x722b
   15470:	movt	r1, #1
   15474:	b	155d0 <__mempcpy_chk@plt+0x45e8>
   15478:	movw	r1, #28908	; 0x70ec
   1547c:	mov	r0, #0
   15480:	mov	r2, #5
   15484:	movt	r1, #1
   15488:	bl	10e20 <dcgettext@plt>
   1548c:	ldr	r3, [r7]
   15490:	mov	r2, r0
   15494:	mov	r0, r8
   15498:	mov	r1, #1
   1549c:	sub	sp, fp, #24
   154a0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   154a4:	b	10f58 <__fprintf_chk@plt>
   154a8:	movw	r1, #28924	; 0x70fc
   154ac:	mov	r0, #0
   154b0:	mov	r2, #5
   154b4:	movt	r1, #1
   154b8:	bl	10e20 <dcgettext@plt>
   154bc:	mov	r2, r0
   154c0:	ldr	r3, [r7]
   154c4:	ldr	r0, [r7, #4]
   154c8:	str	r0, [sp]
   154cc:	b	155bc <__mempcpy_chk@plt+0x45d4>
   154d0:	movw	r1, #28947	; 0x7113
   154d4:	mov	r0, #0
   154d8:	mov	r2, #5
   154dc:	movt	r1, #1
   154e0:	bl	10e20 <dcgettext@plt>
   154e4:	ldr	r3, [r7]
   154e8:	mov	r2, r0
   154ec:	ldmib	r7, {r0, r1}
   154f0:	stm	sp, {r0, r1}
   154f4:	b	155bc <__mempcpy_chk@plt+0x45d4>
   154f8:	movw	r1, #28975	; 0x712f
   154fc:	mov	r0, #0
   15500:	mov	r2, #5
   15504:	movt	r1, #1
   15508:	bl	10e20 <dcgettext@plt>
   1550c:	ldr	r3, [r7]
   15510:	mov	r2, r0
   15514:	ldmib	r7, {r0, r1, r7}
   15518:	stm	sp, {r0, r1, r7}
   1551c:	b	155bc <__mempcpy_chk@plt+0x45d4>
   15520:	movw	r1, #29007	; 0x714f
   15524:	mov	r0, #0
   15528:	mov	r2, #5
   1552c:	movt	r1, #1
   15530:	bl	10e20 <dcgettext@plt>
   15534:	ldr	r3, [r7]
   15538:	mov	r2, r0
   1553c:	ldmib	r7, {r0, r1, r6, r7}
   15540:	stm	sp, {r0, r1, r6, r7}
   15544:	b	155bc <__mempcpy_chk@plt+0x45d4>
   15548:	movw	r1, #29043	; 0x7173
   1554c:	mov	r0, #0
   15550:	mov	r2, #5
   15554:	movt	r1, #1
   15558:	bl	10e20 <dcgettext@plt>
   1555c:	ldr	r3, [r7]
   15560:	mov	r2, r0
   15564:	ldmib	r7, {r0, r1, r6}
   15568:	ldr	r5, [r7, #16]
   1556c:	ldr	r7, [r7, #20]
   15570:	stm	sp, {r0, r1, r6}
   15574:	str	r5, [sp, #12]
   15578:	str	r7, [sp, #16]
   1557c:	b	155bc <__mempcpy_chk@plt+0x45d4>
   15580:	movw	r1, #29083	; 0x719b
   15584:	mov	r0, #0
   15588:	mov	r2, #5
   1558c:	movt	r1, #1
   15590:	bl	10e20 <dcgettext@plt>
   15594:	ldr	r3, [r7]
   15598:	mov	r2, r0
   1559c:	ldmib	r7, {r0, r1, r6}
   155a0:	ldr	r5, [r7, #16]
   155a4:	ldr	r4, [r7, #20]
   155a8:	ldr	r7, [r7, #24]
   155ac:	stm	sp, {r0, r1, r6}
   155b0:	str	r5, [sp, #12]
   155b4:	str	r4, [sp, #16]
   155b8:	str	r7, [sp, #20]
   155bc:	mov	r0, r8
   155c0:	mov	r1, #1
   155c4:	b	15670 <__mempcpy_chk@plt+0x4688>
   155c8:	movw	r1, #29175	; 0x71f7
   155cc:	movt	r1, #1
   155d0:	mov	r0, #0
   155d4:	mov	r2, #5
   155d8:	bl	10e20 <dcgettext@plt>
   155dc:	mov	ip, r0
   155e0:	ldr	r3, [r7]
   155e4:	ldr	r0, [r7, #4]
   155e8:	ldr	r1, [r7, #8]
   155ec:	ldr	r6, [r7, #12]
   155f0:	ldr	r5, [r7, #16]
   155f4:	ldr	r4, [r7, #20]
   155f8:	ldr	r2, [r7, #24]
   155fc:	ldr	lr, [r7, #28]
   15600:	ldr	r7, [r7, #32]
   15604:	stm	sp, {r0, r1, r6}
   15608:	str	r5, [sp, #12]
   1560c:	str	r4, [sp, #16]
   15610:	str	r2, [sp, #20]
   15614:	str	lr, [sp, #24]
   15618:	str	r7, [sp, #28]
   1561c:	b	15664 <__mempcpy_chk@plt+0x467c>
   15620:	movw	r1, #29127	; 0x71c7
   15624:	mov	r0, #0
   15628:	mov	r2, #5
   1562c:	movt	r1, #1
   15630:	bl	10e20 <dcgettext@plt>
   15634:	mov	ip, r0
   15638:	ldr	r3, [r7]
   1563c:	ldmib	r7, {r0, r1, r6}
   15640:	ldr	r5, [r7, #16]
   15644:	ldr	r4, [r7, #20]
   15648:	ldr	r2, [r7, #24]
   1564c:	ldr	r7, [r7, #28]
   15650:	stm	sp, {r0, r1, r6}
   15654:	str	r5, [sp, #12]
   15658:	str	r4, [sp, #16]
   1565c:	str	r2, [sp, #20]
   15660:	str	r7, [sp, #24]
   15664:	mov	r0, r8
   15668:	mov	r1, #1
   1566c:	mov	r2, ip
   15670:	bl	10f58 <__fprintf_chk@plt>
   15674:	sub	sp, fp, #24
   15678:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1567c:	push	{r4, sl, fp, lr}
   15680:	add	fp, sp, #8
   15684:	sub	sp, sp, #8
   15688:	ldr	ip, [fp, #8]
   1568c:	mov	lr, #0
   15690:	ldr	r4, [ip, lr, lsl #2]
   15694:	add	lr, lr, #1
   15698:	cmp	r4, #0
   1569c:	bne	15690 <__mempcpy_chk@plt+0x46a8>
   156a0:	sub	r4, lr, #1
   156a4:	str	ip, [sp]
   156a8:	str	r4, [sp, #4]
   156ac:	bl	15348 <__mempcpy_chk@plt+0x4360>
   156b0:	sub	sp, fp, #8
   156b4:	pop	{r4, sl, fp, pc}
   156b8:	push	{fp, lr}
   156bc:	mov	fp, sp
   156c0:	sub	sp, sp, #48	; 0x30
   156c4:	ldr	ip, [fp, #8]
   156c8:	ldr	lr, [ip]
   156cc:	cmp	lr, #0
   156d0:	str	lr, [sp, #8]
   156d4:	beq	15770 <__mempcpy_chk@plt+0x4788>
   156d8:	ldr	lr, [ip, #4]
   156dc:	cmp	lr, #0
   156e0:	str	lr, [sp, #12]
   156e4:	beq	15778 <__mempcpy_chk@plt+0x4790>
   156e8:	ldr	lr, [ip, #8]
   156ec:	cmp	lr, #0
   156f0:	str	lr, [sp, #16]
   156f4:	beq	15780 <__mempcpy_chk@plt+0x4798>
   156f8:	ldr	lr, [ip, #12]
   156fc:	cmp	lr, #0
   15700:	str	lr, [sp, #20]
   15704:	beq	15788 <__mempcpy_chk@plt+0x47a0>
   15708:	ldr	lr, [ip, #16]
   1570c:	cmp	lr, #0
   15710:	str	lr, [sp, #24]
   15714:	beq	15790 <__mempcpy_chk@plt+0x47a8>
   15718:	ldr	lr, [ip, #20]
   1571c:	cmp	lr, #0
   15720:	str	lr, [sp, #28]
   15724:	beq	15798 <__mempcpy_chk@plt+0x47b0>
   15728:	ldr	lr, [ip, #24]
   1572c:	cmp	lr, #0
   15730:	str	lr, [sp, #32]
   15734:	beq	157a0 <__mempcpy_chk@plt+0x47b8>
   15738:	ldr	lr, [ip, #28]
   1573c:	cmp	lr, #0
   15740:	str	lr, [sp, #36]	; 0x24
   15744:	beq	157a8 <__mempcpy_chk@plt+0x47c0>
   15748:	ldr	lr, [ip, #32]
   1574c:	cmp	lr, #0
   15750:	str	lr, [sp, #40]	; 0x28
   15754:	beq	157b0 <__mempcpy_chk@plt+0x47c8>
   15758:	ldr	lr, [ip, #36]	; 0x24
   1575c:	mov	ip, #10
   15760:	cmp	lr, #0
   15764:	str	lr, [sp, #44]	; 0x2c
   15768:	movweq	ip, #9
   1576c:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   15770:	mov	ip, #0
   15774:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   15778:	mov	ip, #1
   1577c:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   15780:	mov	ip, #2
   15784:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   15788:	mov	ip, #3
   1578c:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   15790:	mov	ip, #4
   15794:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   15798:	mov	ip, #5
   1579c:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   157a0:	mov	ip, #6
   157a4:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   157a8:	mov	ip, #7
   157ac:	b	157b4 <__mempcpy_chk@plt+0x47cc>
   157b0:	mov	ip, #8
   157b4:	add	lr, sp, #8
   157b8:	str	ip, [sp, #4]
   157bc:	str	lr, [sp]
   157c0:	bl	15348 <__mempcpy_chk@plt+0x4360>
   157c4:	mov	sp, fp
   157c8:	pop	{fp, pc}
   157cc:	push	{fp, lr}
   157d0:	mov	fp, sp
   157d4:	sub	sp, sp, #56	; 0x38
   157d8:	add	ip, fp, #8
   157dc:	str	ip, [sp, #12]
   157e0:	ldr	lr, [fp, #8]
   157e4:	cmp	lr, #0
   157e8:	str	lr, [sp, #16]
   157ec:	beq	15888 <__mempcpy_chk@plt+0x48a0>
   157f0:	ldr	lr, [ip, #4]
   157f4:	cmp	lr, #0
   157f8:	str	lr, [sp, #20]
   157fc:	beq	15890 <__mempcpy_chk@plt+0x48a8>
   15800:	ldr	lr, [ip, #8]
   15804:	cmp	lr, #0
   15808:	str	lr, [sp, #24]
   1580c:	beq	15898 <__mempcpy_chk@plt+0x48b0>
   15810:	ldr	lr, [ip, #12]
   15814:	cmp	lr, #0
   15818:	str	lr, [sp, #28]
   1581c:	beq	158a0 <__mempcpy_chk@plt+0x48b8>
   15820:	ldr	lr, [ip, #16]
   15824:	cmp	lr, #0
   15828:	str	lr, [sp, #32]
   1582c:	beq	158a8 <__mempcpy_chk@plt+0x48c0>
   15830:	ldr	lr, [ip, #20]
   15834:	cmp	lr, #0
   15838:	str	lr, [sp, #36]	; 0x24
   1583c:	beq	158b0 <__mempcpy_chk@plt+0x48c8>
   15840:	ldr	lr, [ip, #24]
   15844:	cmp	lr, #0
   15848:	str	lr, [sp, #40]	; 0x28
   1584c:	beq	158b8 <__mempcpy_chk@plt+0x48d0>
   15850:	ldr	lr, [ip, #28]
   15854:	cmp	lr, #0
   15858:	str	lr, [sp, #44]	; 0x2c
   1585c:	beq	158c0 <__mempcpy_chk@plt+0x48d8>
   15860:	ldr	lr, [ip, #32]
   15864:	cmp	lr, #0
   15868:	str	lr, [sp, #48]	; 0x30
   1586c:	beq	158c8 <__mempcpy_chk@plt+0x48e0>
   15870:	ldr	lr, [ip, #36]	; 0x24
   15874:	mov	ip, #10
   15878:	cmp	lr, #0
   1587c:	str	lr, [sp, #52]	; 0x34
   15880:	movweq	ip, #9
   15884:	b	158cc <__mempcpy_chk@plt+0x48e4>
   15888:	mov	ip, #0
   1588c:	b	158cc <__mempcpy_chk@plt+0x48e4>
   15890:	mov	ip, #1
   15894:	b	158cc <__mempcpy_chk@plt+0x48e4>
   15898:	mov	ip, #2
   1589c:	b	158cc <__mempcpy_chk@plt+0x48e4>
   158a0:	mov	ip, #3
   158a4:	b	158cc <__mempcpy_chk@plt+0x48e4>
   158a8:	mov	ip, #4
   158ac:	b	158cc <__mempcpy_chk@plt+0x48e4>
   158b0:	mov	ip, #5
   158b4:	b	158cc <__mempcpy_chk@plt+0x48e4>
   158b8:	mov	ip, #6
   158bc:	b	158cc <__mempcpy_chk@plt+0x48e4>
   158c0:	mov	ip, #7
   158c4:	b	158cc <__mempcpy_chk@plt+0x48e4>
   158c8:	mov	ip, #8
   158cc:	add	lr, sp, #16
   158d0:	str	ip, [sp, #4]
   158d4:	str	lr, [sp]
   158d8:	bl	15348 <__mempcpy_chk@plt+0x4360>
   158dc:	mov	sp, fp
   158e0:	pop	{fp, pc}
   158e4:	push	{fp, lr}
   158e8:	mov	fp, sp
   158ec:	movw	r0, #33092	; 0x8144
   158f0:	movt	r0, #2
   158f4:	ldr	r1, [r0]
   158f8:	movw	r0, #26416	; 0x6730
   158fc:	movt	r0, #1
   15900:	bl	10d9c <fputs_unlocked@plt>
   15904:	movw	r1, #29287	; 0x7267
   15908:	mov	r0, #0
   1590c:	mov	r2, #5
   15910:	movt	r1, #1
   15914:	bl	10e20 <dcgettext@plt>
   15918:	movw	r2, #29307	; 0x727b
   1591c:	mov	r1, r0
   15920:	mov	r0, #1
   15924:	movt	r2, #1
   15928:	bl	10f40 <__printf_chk@plt>
   1592c:	movw	r1, #29329	; 0x7291
   15930:	mov	r0, #0
   15934:	mov	r2, #5
   15938:	movt	r1, #1
   1593c:	bl	10e20 <dcgettext@plt>
   15940:	movw	r2, #27517	; 0x6b7d
   15944:	movw	r3, #27727	; 0x6c4f
   15948:	mov	r1, r0
   1594c:	mov	r0, #1
   15950:	movt	r2, #1
   15954:	movt	r3, #1
   15958:	bl	10f40 <__printf_chk@plt>
   1595c:	movw	r1, #29349	; 0x72a5
   15960:	mov	r0, #0
   15964:	mov	r2, #5
   15968:	movt	r1, #1
   1596c:	bl	10e20 <dcgettext@plt>
   15970:	movw	r2, #29388	; 0x72cc
   15974:	mov	r1, r0
   15978:	mov	r0, #1
   1597c:	movt	r2, #1
   15980:	pop	{fp, lr}
   15984:	b	10f40 <__printf_chk@plt>
   15988:	push	{r4, r5, r6, sl, fp, lr}
   1598c:	add	fp, sp, #16
   15990:	mov	r4, r2
   15994:	mov	r5, r1
   15998:	mov	r6, r0
   1599c:	bl	16370 <__mempcpy_chk@plt+0x5388>
   159a0:	cmp	r0, #0
   159a4:	popne	{r4, r5, r6, sl, fp, pc}
   159a8:	cmp	r6, #0
   159ac:	beq	159c0 <__mempcpy_chk@plt+0x49d8>
   159b0:	cmp	r5, #0
   159b4:	cmpne	r4, #0
   159b8:	bne	159c0 <__mempcpy_chk@plt+0x49d8>
   159bc:	pop	{r4, r5, r6, sl, fp, pc}
   159c0:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   159c4:	push	{r4, r5, r6, sl, fp, lr}
   159c8:	add	fp, sp, #16
   159cc:	mov	r4, r2
   159d0:	mov	r5, r1
   159d4:	mov	r6, r0
   159d8:	bl	16370 <__mempcpy_chk@plt+0x5388>
   159dc:	cmp	r0, #0
   159e0:	popne	{r4, r5, r6, sl, fp, pc}
   159e4:	cmp	r6, #0
   159e8:	beq	159fc <__mempcpy_chk@plt+0x4a14>
   159ec:	cmp	r5, #0
   159f0:	cmpne	r4, #0
   159f4:	bne	159fc <__mempcpy_chk@plt+0x4a14>
   159f8:	pop	{r4, r5, r6, sl, fp, pc}
   159fc:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15a00:	push	{fp, lr}
   15a04:	mov	fp, sp
   15a08:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15a0c:	cmp	r0, #0
   15a10:	popne	{fp, pc}
   15a14:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15a18:	push	{fp, lr}
   15a1c:	mov	fp, sp
   15a20:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15a24:	cmp	r0, #0
   15a28:	popne	{fp, pc}
   15a2c:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15a30:	push	{fp, lr}
   15a34:	mov	fp, sp
   15a38:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15a3c:	cmp	r0, #0
   15a40:	popne	{fp, pc}
   15a44:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15a48:	push	{r4, r5, fp, lr}
   15a4c:	add	fp, sp, #8
   15a50:	mov	r4, r1
   15a54:	mov	r5, r0
   15a58:	bl	16028 <__mempcpy_chk@plt+0x5040>
   15a5c:	cmp	r0, #0
   15a60:	popne	{r4, r5, fp, pc}
   15a64:	cmp	r5, #0
   15a68:	beq	15a78 <__mempcpy_chk@plt+0x4a90>
   15a6c:	cmp	r4, #0
   15a70:	bne	15a78 <__mempcpy_chk@plt+0x4a90>
   15a74:	pop	{r4, r5, fp, pc}
   15a78:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15a7c:	push	{fp, lr}
   15a80:	mov	fp, sp
   15a84:	cmp	r1, #0
   15a88:	orreq	r1, r1, #1
   15a8c:	bl	16028 <__mempcpy_chk@plt+0x5040>
   15a90:	cmp	r0, #0
   15a94:	popne	{fp, pc}
   15a98:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15a9c:	push	{fp, lr}
   15aa0:	mov	fp, sp
   15aa4:	clz	r3, r2
   15aa8:	lsr	ip, r3, #5
   15aac:	clz	r3, r1
   15ab0:	lsr	r3, r3, #5
   15ab4:	orrs	r3, r3, ip
   15ab8:	movwne	r1, #1
   15abc:	movwne	r2, #1
   15ac0:	bl	16370 <__mempcpy_chk@plt+0x5388>
   15ac4:	cmp	r0, #0
   15ac8:	popne	{fp, pc}
   15acc:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15ad0:	push	{fp, lr}
   15ad4:	mov	fp, sp
   15ad8:	mov	r2, r1
   15adc:	mov	r1, r0
   15ae0:	mov	r0, #0
   15ae4:	bl	16370 <__mempcpy_chk@plt+0x5388>
   15ae8:	cmp	r0, #0
   15aec:	popne	{fp, pc}
   15af0:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15af4:	push	{fp, lr}
   15af8:	mov	fp, sp
   15afc:	mov	r2, r1
   15b00:	mov	r1, r0
   15b04:	clz	r0, r2
   15b08:	clz	r3, r1
   15b0c:	lsr	r0, r0, #5
   15b10:	lsr	r3, r3, #5
   15b14:	orrs	r0, r3, r0
   15b18:	movwne	r1, #1
   15b1c:	movwne	r2, #1
   15b20:	mov	r0, #0
   15b24:	bl	16370 <__mempcpy_chk@plt+0x5388>
   15b28:	cmp	r0, #0
   15b2c:	popne	{fp, pc}
   15b30:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15b34:	push	{r4, r5, r6, sl, fp, lr}
   15b38:	add	fp, sp, #16
   15b3c:	ldr	r5, [r1]
   15b40:	mov	r4, r1
   15b44:	mov	r6, r0
   15b48:	cmp	r0, #0
   15b4c:	beq	15b64 <__mempcpy_chk@plt+0x4b7c>
   15b50:	mov	r0, #1
   15b54:	add	r0, r0, r5, lsr #1
   15b58:	adds	r5, r5, r0
   15b5c:	bcc	15b6c <__mempcpy_chk@plt+0x4b84>
   15b60:	b	15ba8 <__mempcpy_chk@plt+0x4bc0>
   15b64:	cmp	r5, #0
   15b68:	movweq	r5, #64	; 0x40
   15b6c:	mov	r0, r6
   15b70:	mov	r1, r5
   15b74:	mov	r2, #1
   15b78:	bl	16370 <__mempcpy_chk@plt+0x5388>
   15b7c:	cmp	r5, #0
   15b80:	mov	r1, r5
   15b84:	movwne	r1, #1
   15b88:	cmp	r0, #0
   15b8c:	bne	15ba0 <__mempcpy_chk@plt+0x4bb8>
   15b90:	clz	r2, r6
   15b94:	lsr	r2, r2, #5
   15b98:	orrs	r1, r2, r1
   15b9c:	bne	15ba8 <__mempcpy_chk@plt+0x4bc0>
   15ba0:	str	r5, [r4]
   15ba4:	pop	{r4, r5, r6, sl, fp, pc}
   15ba8:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15bac:	push	{r4, r5, r6, r7, fp, lr}
   15bb0:	add	fp, sp, #16
   15bb4:	ldr	r5, [r1]
   15bb8:	mov	r6, r2
   15bbc:	mov	r4, r1
   15bc0:	mov	r7, r0
   15bc4:	cmp	r0, #0
   15bc8:	beq	15be0 <__mempcpy_chk@plt+0x4bf8>
   15bcc:	mov	r0, #1
   15bd0:	add	r0, r0, r5, lsr #1
   15bd4:	adds	r5, r5, r0
   15bd8:	bcc	15bf8 <__mempcpy_chk@plt+0x4c10>
   15bdc:	b	15c2c <__mempcpy_chk@plt+0x4c44>
   15be0:	cmp	r5, #0
   15be4:	bne	15bf8 <__mempcpy_chk@plt+0x4c10>
   15be8:	mov	r0, #64	; 0x40
   15bec:	cmp	r6, #64	; 0x40
   15bf0:	udiv	r5, r0, r6
   15bf4:	addhi	r5, r5, #1
   15bf8:	mov	r0, r7
   15bfc:	mov	r1, r5
   15c00:	mov	r2, r6
   15c04:	bl	16370 <__mempcpy_chk@plt+0x5388>
   15c08:	cmp	r0, #0
   15c0c:	bne	15c24 <__mempcpy_chk@plt+0x4c3c>
   15c10:	cmp	r7, #0
   15c14:	beq	15c2c <__mempcpy_chk@plt+0x4c44>
   15c18:	cmp	r6, #0
   15c1c:	cmpne	r5, #0
   15c20:	bne	15c2c <__mempcpy_chk@plt+0x4c44>
   15c24:	str	r5, [r4]
   15c28:	pop	{r4, r5, r6, r7, fp, pc}
   15c2c:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15c30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c34:	add	fp, sp, #24
   15c38:	mov	r8, r1
   15c3c:	ldr	r1, [r1]
   15c40:	mov	r5, r0
   15c44:	add	r0, r1, r1, asr #1
   15c48:	cmp	r0, r1
   15c4c:	mvnvs	r0, #-2147483648	; 0x80000000
   15c50:	cmp	r0, r3
   15c54:	mov	r7, r0
   15c58:	movgt	r7, r3
   15c5c:	cmn	r3, #1
   15c60:	movle	r7, r0
   15c64:	ldr	r0, [fp, #8]
   15c68:	cmn	r0, #1
   15c6c:	ble	15c94 <__mempcpy_chk@plt+0x4cac>
   15c70:	cmp	r0, #0
   15c74:	beq	15ce8 <__mempcpy_chk@plt+0x4d00>
   15c78:	cmn	r7, #1
   15c7c:	ble	15cbc <__mempcpy_chk@plt+0x4cd4>
   15c80:	mvn	r4, #-2147483648	; 0x80000000
   15c84:	udiv	r6, r4, r0
   15c88:	cmp	r6, r7
   15c8c:	bge	15ce8 <__mempcpy_chk@plt+0x4d00>
   15c90:	b	15cf8 <__mempcpy_chk@plt+0x4d10>
   15c94:	cmn	r7, #1
   15c98:	ble	15cd8 <__mempcpy_chk@plt+0x4cf0>
   15c9c:	cmn	r0, #1
   15ca0:	beq	15ce8 <__mempcpy_chk@plt+0x4d00>
   15ca4:	mov	r6, #-2147483648	; 0x80000000
   15ca8:	mvn	r4, #-2147483648	; 0x80000000
   15cac:	sdiv	r6, r6, r0
   15cb0:	cmp	r6, r7
   15cb4:	bge	15ce8 <__mempcpy_chk@plt+0x4d00>
   15cb8:	b	15cf8 <__mempcpy_chk@plt+0x4d10>
   15cbc:	beq	15ce8 <__mempcpy_chk@plt+0x4d00>
   15cc0:	mov	r6, #-2147483648	; 0x80000000
   15cc4:	mvn	r4, #-2147483648	; 0x80000000
   15cc8:	sdiv	r6, r6, r7
   15ccc:	cmp	r6, r0
   15cd0:	bge	15ce8 <__mempcpy_chk@plt+0x4d00>
   15cd4:	b	15cf8 <__mempcpy_chk@plt+0x4d10>
   15cd8:	mvn	r4, #-2147483648	; 0x80000000
   15cdc:	sdiv	r6, r4, r0
   15ce0:	cmp	r7, r6
   15ce4:	blt	15cf8 <__mempcpy_chk@plt+0x4d10>
   15ce8:	mul	r6, r7, r0
   15cec:	mov	r4, #64	; 0x40
   15cf0:	cmp	r6, #63	; 0x3f
   15cf4:	bgt	15d00 <__mempcpy_chk@plt+0x4d18>
   15cf8:	sdiv	r7, r4, r0
   15cfc:	mul	r6, r7, r0
   15d00:	cmp	r5, #0
   15d04:	moveq	r4, #0
   15d08:	streq	r4, [r8]
   15d0c:	sub	r4, r7, r1
   15d10:	cmp	r4, r2
   15d14:	bge	15dc0 <__mempcpy_chk@plt+0x4dd8>
   15d18:	add	r7, r1, r2
   15d1c:	mov	r6, #0
   15d20:	mov	r2, #0
   15d24:	cmp	r7, r3
   15d28:	movwgt	r6, #1
   15d2c:	cmn	r3, #1
   15d30:	movwgt	r2, #1
   15d34:	cmp	r7, r1
   15d38:	bvs	15df4 <__mempcpy_chk@plt+0x4e0c>
   15d3c:	ands	r1, r2, r6
   15d40:	bne	15df4 <__mempcpy_chk@plt+0x4e0c>
   15d44:	cmn	r0, #1
   15d48:	ble	15d70 <__mempcpy_chk@plt+0x4d88>
   15d4c:	cmp	r0, #0
   15d50:	beq	15dbc <__mempcpy_chk@plt+0x4dd4>
   15d54:	cmn	r7, #1
   15d58:	ble	15d94 <__mempcpy_chk@plt+0x4dac>
   15d5c:	mvn	r1, #-2147483648	; 0x80000000
   15d60:	udiv	r1, r1, r0
   15d64:	cmp	r1, r7
   15d68:	bge	15dbc <__mempcpy_chk@plt+0x4dd4>
   15d6c:	b	15df4 <__mempcpy_chk@plt+0x4e0c>
   15d70:	cmn	r7, #1
   15d74:	ble	15dac <__mempcpy_chk@plt+0x4dc4>
   15d78:	cmn	r0, #1
   15d7c:	beq	15dbc <__mempcpy_chk@plt+0x4dd4>
   15d80:	mov	r1, #-2147483648	; 0x80000000
   15d84:	sdiv	r1, r1, r0
   15d88:	cmp	r1, r7
   15d8c:	bge	15dbc <__mempcpy_chk@plt+0x4dd4>
   15d90:	b	15df4 <__mempcpy_chk@plt+0x4e0c>
   15d94:	beq	15dbc <__mempcpy_chk@plt+0x4dd4>
   15d98:	mov	r1, #-2147483648	; 0x80000000
   15d9c:	sdiv	r1, r1, r7
   15da0:	cmp	r1, r0
   15da4:	bge	15dbc <__mempcpy_chk@plt+0x4dd4>
   15da8:	b	15df4 <__mempcpy_chk@plt+0x4e0c>
   15dac:	mvn	r1, #-2147483648	; 0x80000000
   15db0:	sdiv	r1, r1, r0
   15db4:	cmp	r7, r1
   15db8:	blt	15df4 <__mempcpy_chk@plt+0x4e0c>
   15dbc:	mul	r6, r7, r0
   15dc0:	mov	r0, r5
   15dc4:	mov	r1, r6
   15dc8:	bl	16028 <__mempcpy_chk@plt+0x5040>
   15dcc:	cmp	r6, #0
   15dd0:	movwne	r6, #1
   15dd4:	cmp	r0, #0
   15dd8:	bne	15dec <__mempcpy_chk@plt+0x4e04>
   15ddc:	clz	r1, r5
   15de0:	lsr	r1, r1, #5
   15de4:	orrs	r1, r1, r6
   15de8:	bne	15df4 <__mempcpy_chk@plt+0x4e0c>
   15dec:	str	r7, [r8]
   15df0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15df4:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15df8:	push	{fp, lr}
   15dfc:	mov	fp, sp
   15e00:	mov	r1, #1
   15e04:	bl	15fa4 <__mempcpy_chk@plt+0x4fbc>
   15e08:	cmp	r0, #0
   15e0c:	popne	{fp, pc}
   15e10:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15e14:	push	{fp, lr}
   15e18:	mov	fp, sp
   15e1c:	bl	15fa4 <__mempcpy_chk@plt+0x4fbc>
   15e20:	cmp	r0, #0
   15e24:	popne	{fp, pc}
   15e28:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15e2c:	push	{fp, lr}
   15e30:	mov	fp, sp
   15e34:	mov	r1, #1
   15e38:	bl	15fa4 <__mempcpy_chk@plt+0x4fbc>
   15e3c:	cmp	r0, #0
   15e40:	popne	{fp, pc}
   15e44:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15e48:	push	{fp, lr}
   15e4c:	mov	fp, sp
   15e50:	bl	15fa4 <__mempcpy_chk@plt+0x4fbc>
   15e54:	cmp	r0, #0
   15e58:	popne	{fp, pc}
   15e5c:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15e60:	push	{r4, r5, r6, sl, fp, lr}
   15e64:	add	fp, sp, #16
   15e68:	mov	r5, r0
   15e6c:	mov	r0, r1
   15e70:	mov	r4, r1
   15e74:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15e78:	cmp	r0, #0
   15e7c:	beq	15e98 <__mempcpy_chk@plt+0x4eb0>
   15e80:	mov	r1, r5
   15e84:	mov	r2, r4
   15e88:	mov	r6, r0
   15e8c:	bl	10dfc <memcpy@plt>
   15e90:	mov	r0, r6
   15e94:	pop	{r4, r5, r6, sl, fp, pc}
   15e98:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15e9c:	push	{r4, r5, r6, sl, fp, lr}
   15ea0:	add	fp, sp, #16
   15ea4:	mov	r5, r0
   15ea8:	mov	r0, r1
   15eac:	mov	r4, r1
   15eb0:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15eb4:	cmp	r0, #0
   15eb8:	beq	15ed4 <__mempcpy_chk@plt+0x4eec>
   15ebc:	mov	r1, r5
   15ec0:	mov	r2, r4
   15ec4:	mov	r6, r0
   15ec8:	bl	10dfc <memcpy@plt>
   15ecc:	mov	r0, r6
   15ed0:	pop	{r4, r5, r6, sl, fp, pc}
   15ed4:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15ed8:	push	{r4, r5, r6, sl, fp, lr}
   15edc:	add	fp, sp, #16
   15ee0:	mov	r5, r0
   15ee4:	add	r0, r1, #1
   15ee8:	mov	r4, r1
   15eec:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15ef0:	cmp	r0, #0
   15ef4:	beq	15f1c <__mempcpy_chk@plt+0x4f34>
   15ef8:	mov	r6, r0
   15efc:	mov	r0, #0
   15f00:	mov	r1, r5
   15f04:	mov	r2, r4
   15f08:	strb	r0, [r6, r4]
   15f0c:	mov	r0, r6
   15f10:	bl	10dfc <memcpy@plt>
   15f14:	mov	r0, r6
   15f18:	pop	{r4, r5, r6, sl, fp, pc}
   15f1c:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15f20:	push	{r4, r5, r6, sl, fp, lr}
   15f24:	add	fp, sp, #16
   15f28:	mov	r4, r0
   15f2c:	bl	10f10 <strlen@plt>
   15f30:	add	r5, r0, #1
   15f34:	mov	r0, r5
   15f38:	bl	15ff8 <__mempcpy_chk@plt+0x5010>
   15f3c:	cmp	r0, #0
   15f40:	beq	15f5c <__mempcpy_chk@plt+0x4f74>
   15f44:	mov	r1, r4
   15f48:	mov	r2, r5
   15f4c:	mov	r6, r0
   15f50:	bl	10dfc <memcpy@plt>
   15f54:	mov	r0, r6
   15f58:	pop	{r4, r5, r6, sl, fp, pc}
   15f5c:	bl	15f60 <__mempcpy_chk@plt+0x4f78>
   15f60:	push	{fp, lr}
   15f64:	mov	fp, sp
   15f68:	movw	r0, #33004	; 0x80ec
   15f6c:	movw	r1, #29464	; 0x7318
   15f70:	mov	r2, #5
   15f74:	movt	r0, #2
   15f78:	movt	r1, #1
   15f7c:	ldr	r4, [r0]
   15f80:	mov	r0, #0
   15f84:	bl	10e20 <dcgettext@plt>
   15f88:	movw	r2, #28297	; 0x6e89
   15f8c:	mov	r3, r0
   15f90:	mov	r0, r4
   15f94:	mov	r1, #0
   15f98:	movt	r2, #1
   15f9c:	bl	10ea4 <error@plt>
   15fa0:	bl	10fd0 <abort@plt>
   15fa4:	clz	r2, r1
   15fa8:	clz	r3, r0
   15fac:	lsr	r2, r2, #5
   15fb0:	lsr	r3, r3, #5
   15fb4:	orrs	r2, r3, r2
   15fb8:	movwne	r1, #1
   15fbc:	movwne	r0, #1
   15fc0:	cmp	r1, #0
   15fc4:	beq	15ff4 <__mempcpy_chk@plt+0x500c>
   15fc8:	mvn	r2, #-2147483648	; 0x80000000
   15fcc:	udiv	r2, r2, r1
   15fd0:	cmp	r2, r0
   15fd4:	bcs	15ff4 <__mempcpy_chk@plt+0x500c>
   15fd8:	push	{fp, lr}
   15fdc:	mov	fp, sp
   15fe0:	bl	10f1c <__errno_location@plt>
   15fe4:	mov	r1, #12
   15fe8:	str	r1, [r0]
   15fec:	mov	r0, #0
   15ff0:	pop	{fp, pc}
   15ff4:	b	10d90 <calloc@plt>
   15ff8:	cmp	r0, #0
   15ffc:	movweq	r0, #1
   16000:	cmn	r0, #1
   16004:	ble	1600c <__mempcpy_chk@plt+0x5024>
   16008:	b	10eb0 <malloc@plt>
   1600c:	push	{fp, lr}
   16010:	mov	fp, sp
   16014:	bl	10f1c <__errno_location@plt>
   16018:	mov	r1, #12
   1601c:	str	r1, [r0]
   16020:	mov	r0, #0
   16024:	pop	{fp, pc}
   16028:	push	{fp, lr}
   1602c:	mov	fp, sp
   16030:	cmp	r0, #0
   16034:	beq	16050 <__mempcpy_chk@plt+0x5068>
   16038:	cmp	r1, #0
   1603c:	beq	1605c <__mempcpy_chk@plt+0x5074>
   16040:	cmn	r1, #1
   16044:	ble	16068 <__mempcpy_chk@plt+0x5080>
   16048:	pop	{fp, lr}
   1604c:	b	10e2c <realloc@plt>
   16050:	mov	r0, r1
   16054:	pop	{fp, lr}
   16058:	b	15ff8 <__mempcpy_chk@plt+0x5010>
   1605c:	bl	120d4 <__mempcpy_chk@plt+0x10ec>
   16060:	mov	r0, #0
   16064:	pop	{fp, pc}
   16068:	bl	10f1c <__errno_location@plt>
   1606c:	mov	r1, #12
   16070:	str	r1, [r0]
   16074:	mov	r0, #0
   16078:	pop	{fp, pc}
   1607c:	push	{r4, r5, r6, sl, fp, lr}
   16080:	add	fp, sp, #16
   16084:	mov	r4, r0
   16088:	bl	10e8c <__fpending@plt>
   1608c:	ldr	r6, [r4]
   16090:	mov	r5, r0
   16094:	mov	r0, r4
   16098:	bl	16100 <__mempcpy_chk@plt+0x5118>
   1609c:	tst	r6, #32
   160a0:	bne	160d8 <__mempcpy_chk@plt+0x50f0>
   160a4:	cmp	r0, #0
   160a8:	mov	r4, r0
   160ac:	mvnne	r4, #0
   160b0:	cmp	r5, #0
   160b4:	bne	160e4 <__mempcpy_chk@plt+0x50fc>
   160b8:	cmp	r0, #0
   160bc:	beq	160e4 <__mempcpy_chk@plt+0x50fc>
   160c0:	bl	10f1c <__errno_location@plt>
   160c4:	ldr	r0, [r0]
   160c8:	subs	r4, r0, #9
   160cc:	mvnne	r4, #0
   160d0:	mov	r0, r4
   160d4:	pop	{r4, r5, r6, sl, fp, pc}
   160d8:	mvn	r4, #0
   160dc:	cmp	r0, #0
   160e0:	beq	160ec <__mempcpy_chk@plt+0x5104>
   160e4:	mov	r0, r4
   160e8:	pop	{r4, r5, r6, sl, fp, pc}
   160ec:	bl	10f1c <__errno_location@plt>
   160f0:	mov	r1, #0
   160f4:	str	r1, [r0]
   160f8:	mov	r0, r4
   160fc:	pop	{r4, r5, r6, sl, fp, pc}
   16100:	push	{r4, r5, r6, sl, fp, lr}
   16104:	add	fp, sp, #16
   16108:	sub	sp, sp, #8
   1610c:	mov	r4, r0
   16110:	bl	10f4c <fileno@plt>
   16114:	cmn	r0, #1
   16118:	ble	1618c <__mempcpy_chk@plt+0x51a4>
   1611c:	mov	r0, r4
   16120:	bl	10ec8 <__freading@plt>
   16124:	cmp	r0, #0
   16128:	beq	16154 <__mempcpy_chk@plt+0x516c>
   1612c:	mov	r0, r4
   16130:	bl	10f4c <fileno@plt>
   16134:	mov	r1, #1
   16138:	mov	r2, #0
   1613c:	mov	r3, #0
   16140:	str	r1, [sp]
   16144:	bl	10e74 <lseek64@plt>
   16148:	and	r0, r0, r1
   1614c:	cmn	r0, #1
   16150:	beq	1618c <__mempcpy_chk@plt+0x51a4>
   16154:	mov	r0, r4
   16158:	bl	1619c <__mempcpy_chk@plt+0x51b4>
   1615c:	cmp	r0, #0
   16160:	beq	1618c <__mempcpy_chk@plt+0x51a4>
   16164:	bl	10f1c <__errno_location@plt>
   16168:	ldr	r6, [r0]
   1616c:	mov	r5, r0
   16170:	mov	r0, r4
   16174:	bl	10f64 <fclose@plt>
   16178:	cmp	r6, #0
   1617c:	strne	r6, [r5]
   16180:	mvnne	r0, #0
   16184:	sub	sp, fp, #16
   16188:	pop	{r4, r5, r6, sl, fp, pc}
   1618c:	mov	r0, r4
   16190:	sub	sp, fp, #16
   16194:	pop	{r4, r5, r6, sl, fp, lr}
   16198:	b	10f64 <fclose@plt>
   1619c:	push	{r4, sl, fp, lr}
   161a0:	add	fp, sp, #8
   161a4:	sub	sp, sp, #8
   161a8:	mov	r4, r0
   161ac:	cmp	r0, #0
   161b0:	beq	161cc <__mempcpy_chk@plt+0x51e4>
   161b4:	mov	r0, r4
   161b8:	bl	10ec8 <__freading@plt>
   161bc:	cmp	r0, #0
   161c0:	ldrbne	r0, [r4, #1]
   161c4:	tstne	r0, #1
   161c8:	bne	161dc <__mempcpy_chk@plt+0x51f4>
   161cc:	mov	r0, r4
   161d0:	sub	sp, fp, #8
   161d4:	pop	{r4, sl, fp, lr}
   161d8:	b	10dc0 <fflush@plt>
   161dc:	mov	r0, #1
   161e0:	mov	r2, #0
   161e4:	mov	r3, #0
   161e8:	str	r0, [sp]
   161ec:	mov	r0, r4
   161f0:	bl	161f8 <__mempcpy_chk@plt+0x5210>
   161f4:	b	161cc <__mempcpy_chk@plt+0x51e4>
   161f8:	push	{r4, r5, r6, r7, fp, lr}
   161fc:	add	fp, sp, #16
   16200:	sub	sp, sp, #8
   16204:	mov	r4, r0
   16208:	ldr	r0, [r0, #4]
   1620c:	mov	r5, r3
   16210:	mov	r6, r2
   16214:	ldr	r1, [r4, #8]
   16218:	cmp	r1, r0
   1621c:	bne	16238 <__mempcpy_chk@plt+0x5250>
   16220:	ldrd	r0, [r4, #16]
   16224:	cmp	r1, r0
   16228:	bne	16238 <__mempcpy_chk@plt+0x5250>
   1622c:	ldr	r0, [r4, #36]	; 0x24
   16230:	cmp	r0, #0
   16234:	beq	16250 <__mempcpy_chk@plt+0x5268>
   16238:	mov	r0, r4
   1623c:	mov	r2, r6
   16240:	mov	r3, r5
   16244:	sub	sp, fp, #16
   16248:	pop	{r4, r5, r6, r7, fp, lr}
   1624c:	b	10f70 <fseeko64@plt>
   16250:	ldr	r7, [fp, #8]
   16254:	mov	r0, r4
   16258:	bl	10f4c <fileno@plt>
   1625c:	mov	r2, r6
   16260:	mov	r3, r5
   16264:	str	r7, [sp]
   16268:	bl	10e74 <lseek64@plt>
   1626c:	and	r2, r0, r1
   16270:	cmn	r2, #1
   16274:	mvneq	r0, #0
   16278:	subeq	sp, fp, #16
   1627c:	popeq	{r4, r5, r6, r7, fp, pc}
   16280:	strd	r0, [r4, #80]	; 0x50
   16284:	ldr	r0, [r4]
   16288:	bic	r0, r0, #16
   1628c:	str	r0, [r4]
   16290:	mov	r0, #0
   16294:	sub	sp, fp, #16
   16298:	pop	{r4, r5, r6, r7, fp, pc}
   1629c:	ldrb	r2, [r0]
   162a0:	cmp	r2, #0
   162a4:	beq	162c8 <__mempcpy_chk@plt+0x52e0>
   162a8:	add	r3, r0, #1
   162ac:	mov	r0, #0
   162b0:	ror	r0, r0, #23
   162b4:	uxtab	r0, r0, r2
   162b8:	ldrb	r2, [r3], #1
   162bc:	cmp	r2, #0
   162c0:	bne	162b0 <__mempcpy_chk@plt+0x52c8>
   162c4:	b	162cc <__mempcpy_chk@plt+0x52e4>
   162c8:	mov	r0, #0
   162cc:	udiv	r2, r0, r1
   162d0:	mls	r0, r2, r1, r0
   162d4:	bx	lr
   162d8:	push	{fp, lr}
   162dc:	mov	fp, sp
   162e0:	mov	r0, #14
   162e4:	bl	10fa0 <nl_langinfo@plt>
   162e8:	movw	r1, #26417	; 0x6731
   162ec:	cmp	r0, #0
   162f0:	movt	r1, #1
   162f4:	movne	r1, r0
   162f8:	movw	r0, #29481	; 0x7329
   162fc:	ldrb	r2, [r1]
   16300:	movt	r0, #1
   16304:	cmp	r2, #0
   16308:	movne	r0, r1
   1630c:	pop	{fp, pc}
   16310:	push	{r4, r5, r6, r7, fp, lr}
   16314:	add	fp, sp, #16
   16318:	sub	sp, sp, #8
   1631c:	add	r5, sp, #4
   16320:	cmp	r0, #0
   16324:	mov	r7, r2
   16328:	mov	r4, r1
   1632c:	movne	r5, r0
   16330:	mov	r0, r5
   16334:	bl	10e98 <mbrtowc@plt>
   16338:	mov	r6, r0
   1633c:	cmp	r7, #0
   16340:	beq	16364 <__mempcpy_chk@plt+0x537c>
   16344:	cmn	r6, #2
   16348:	bcc	16364 <__mempcpy_chk@plt+0x537c>
   1634c:	mov	r0, #0
   16350:	bl	163ac <__mempcpy_chk@plt+0x53c4>
   16354:	cmp	r0, #0
   16358:	ldrbeq	r0, [r4]
   1635c:	moveq	r6, #1
   16360:	streq	r0, [r5]
   16364:	mov	r0, r6
   16368:	sub	sp, fp, #16
   1636c:	pop	{r4, r5, r6, r7, fp, pc}
   16370:	cmp	r2, #0
   16374:	beq	163a4 <__mempcpy_chk@plt+0x53bc>
   16378:	mvn	r3, #0
   1637c:	udiv	r3, r3, r2
   16380:	cmp	r3, r1
   16384:	bcs	163a4 <__mempcpy_chk@plt+0x53bc>
   16388:	push	{fp, lr}
   1638c:	mov	fp, sp
   16390:	bl	10f1c <__errno_location@plt>
   16394:	mov	r1, #12
   16398:	str	r1, [r0]
   1639c:	mov	r0, #0
   163a0:	pop	{fp, pc}
   163a4:	mul	r1, r2, r1
   163a8:	b	16028 <__mempcpy_chk@plt+0x5040>
   163ac:	push	{r4, sl, fp, lr}
   163b0:	add	fp, sp, #8
   163b4:	sub	sp, sp, #264	; 0x108
   163b8:	add	r1, sp, #7
   163bc:	movw	r2, #257	; 0x101
   163c0:	bl	16410 <__mempcpy_chk@plt+0x5428>
   163c4:	mov	r4, #0
   163c8:	cmp	r0, #0
   163cc:	bne	16404 <__mempcpy_chk@plt+0x541c>
   163d0:	movw	r1, #29487	; 0x732f
   163d4:	add	r0, sp, #7
   163d8:	movt	r1, #1
   163dc:	bl	10db4 <strcmp@plt>
   163e0:	cmp	r0, #0
   163e4:	beq	16404 <__mempcpy_chk@plt+0x541c>
   163e8:	movw	r1, #29489	; 0x7331
   163ec:	add	r0, sp, #7
   163f0:	movt	r1, #1
   163f4:	bl	10db4 <strcmp@plt>
   163f8:	mov	r4, r0
   163fc:	cmp	r0, #0
   16400:	movwne	r4, #1
   16404:	mov	r0, r4
   16408:	sub	sp, fp, #8
   1640c:	pop	{r4, sl, fp, pc}
   16410:	push	{r4, r5, r6, r7, fp, lr}
   16414:	add	fp, sp, #16
   16418:	mov	r4, r1
   1641c:	mov	r1, #0
   16420:	mov	r6, r2
   16424:	bl	10f88 <setlocale@plt>
   16428:	cmp	r0, #0
   1642c:	beq	1645c <__mempcpy_chk@plt+0x5474>
   16430:	mov	r7, r0
   16434:	bl	10f10 <strlen@plt>
   16438:	cmp	r0, r6
   1643c:	bcs	1647c <__mempcpy_chk@plt+0x5494>
   16440:	add	r2, r0, #1
   16444:	mov	r0, r4
   16448:	mov	r1, r7
   1644c:	bl	10dfc <memcpy@plt>
   16450:	mov	r5, #0
   16454:	mov	r0, r5
   16458:	pop	{r4, r5, r6, r7, fp, pc}
   1645c:	cmp	r6, #0
   16460:	mov	r5, #22
   16464:	movne	r0, #0
   16468:	strbne	r0, [r4]
   1646c:	movne	r0, r5
   16470:	popne	{r4, r5, r6, r7, fp, pc}
   16474:	mov	r0, r5
   16478:	pop	{r4, r5, r6, r7, fp, pc}
   1647c:	mov	r5, #34	; 0x22
   16480:	cmp	r6, #0
   16484:	beq	164a4 <__mempcpy_chk@plt+0x54bc>
   16488:	sub	r6, r6, #1
   1648c:	mov	r0, r4
   16490:	mov	r1, r7
   16494:	mov	r2, r6
   16498:	bl	10dfc <memcpy@plt>
   1649c:	mov	r0, #0
   164a0:	strb	r0, [r4, r6]
   164a4:	mov	r0, r5
   164a8:	pop	{r4, r5, r6, r7, fp, pc}
   164ac:	mov	r1, #0
   164b0:	b	10f88 <setlocale@plt>
   164b4:	cmp	r3, #0
   164b8:	cmpeq	r2, #0
   164bc:	bne	164d4 <__mempcpy_chk@plt+0x54ec>
   164c0:	cmp	r1, #0
   164c4:	cmpeq	r0, #0
   164c8:	mvnne	r1, #0
   164cc:	mvnne	r0, #0
   164d0:	b	164f0 <__mempcpy_chk@plt+0x5508>
   164d4:	sub	sp, sp, #8
   164d8:	push	{sp, lr}
   164dc:	bl	16500 <__mempcpy_chk@plt+0x5518>
   164e0:	ldr	lr, [sp, #4]
   164e4:	add	sp, sp, #8
   164e8:	pop	{r2, r3}
   164ec:	bx	lr
   164f0:	push	{r1, lr}
   164f4:	mov	r0, #8
   164f8:	bl	10da8 <raise@plt>
   164fc:	pop	{r1, pc}
   16500:	cmp	r1, r3
   16504:	cmpeq	r0, r2
   16508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1650c:	mov	r4, r0
   16510:	movcc	r0, #0
   16514:	mov	r5, r1
   16518:	ldr	lr, [sp, #36]	; 0x24
   1651c:	movcc	r1, r0
   16520:	bcc	1661c <__mempcpy_chk@plt+0x5634>
   16524:	cmp	r3, #0
   16528:	clzeq	ip, r2
   1652c:	clzne	ip, r3
   16530:	addeq	ip, ip, #32
   16534:	cmp	r5, #0
   16538:	clzeq	r1, r4
   1653c:	addeq	r1, r1, #32
   16540:	clzne	r1, r5
   16544:	sub	ip, ip, r1
   16548:	sub	sl, ip, #32
   1654c:	lsl	r9, r3, ip
   16550:	rsb	fp, ip, #32
   16554:	orr	r9, r9, r2, lsl sl
   16558:	orr	r9, r9, r2, lsr fp
   1655c:	lsl	r8, r2, ip
   16560:	cmp	r5, r9
   16564:	cmpeq	r4, r8
   16568:	movcc	r0, #0
   1656c:	movcc	r1, r0
   16570:	bcc	1658c <__mempcpy_chk@plt+0x55a4>
   16574:	mov	r0, #1
   16578:	subs	r4, r4, r8
   1657c:	lsl	r1, r0, sl
   16580:	orr	r1, r1, r0, lsr fp
   16584:	lsl	r0, r0, ip
   16588:	sbc	r5, r5, r9
   1658c:	cmp	ip, #0
   16590:	beq	1661c <__mempcpy_chk@plt+0x5634>
   16594:	lsr	r6, r8, #1
   16598:	orr	r6, r6, r9, lsl #31
   1659c:	lsr	r7, r9, #1
   165a0:	mov	r2, ip
   165a4:	b	165c8 <__mempcpy_chk@plt+0x55e0>
   165a8:	subs	r3, r4, r6
   165ac:	sbc	r8, r5, r7
   165b0:	adds	r3, r3, r3
   165b4:	adc	r8, r8, r8
   165b8:	adds	r4, r3, #1
   165bc:	adc	r5, r8, #0
   165c0:	subs	r2, r2, #1
   165c4:	beq	165e4 <__mempcpy_chk@plt+0x55fc>
   165c8:	cmp	r5, r7
   165cc:	cmpeq	r4, r6
   165d0:	bcs	165a8 <__mempcpy_chk@plt+0x55c0>
   165d4:	adds	r4, r4, r4
   165d8:	adc	r5, r5, r5
   165dc:	subs	r2, r2, #1
   165e0:	bne	165c8 <__mempcpy_chk@plt+0x55e0>
   165e4:	lsr	r3, r4, ip
   165e8:	orr	r3, r3, r5, lsl fp
   165ec:	lsr	r2, r5, ip
   165f0:	orr	r3, r3, r5, lsr sl
   165f4:	adds	r0, r0, r4
   165f8:	mov	r4, r3
   165fc:	lsl	r3, r2, ip
   16600:	orr	r3, r3, r4, lsl sl
   16604:	lsl	ip, r4, ip
   16608:	orr	r3, r3, r4, lsr fp
   1660c:	adc	r1, r1, r5
   16610:	subs	r0, r0, ip
   16614:	mov	r5, r2
   16618:	sbc	r1, r1, r3
   1661c:	cmp	lr, #0
   16620:	strdne	r4, [lr]
   16624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16628:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1662c:	mov	r7, r0
   16630:	ldr	r6, [pc, #72]	; 16680 <__mempcpy_chk@plt+0x5698>
   16634:	ldr	r5, [pc, #72]	; 16684 <__mempcpy_chk@plt+0x569c>
   16638:	add	r6, pc, r6
   1663c:	add	r5, pc, r5
   16640:	sub	r6, r6, r5
   16644:	mov	r8, r1
   16648:	mov	r9, r2
   1664c:	bl	10d70 <calloc@plt-0x20>
   16650:	asrs	r6, r6, #2
   16654:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16658:	mov	r4, #0
   1665c:	add	r4, r4, #1
   16660:	ldr	r3, [r5], #4
   16664:	mov	r2, r9
   16668:	mov	r1, r8
   1666c:	mov	r0, r7
   16670:	blx	r3
   16674:	cmp	r6, r4
   16678:	bne	1665c <__mempcpy_chk@plt+0x5674>
   1667c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16680:	andeq	r1, r1, ip, asr #17
   16684:	andeq	r1, r1, r4, asr #17
   16688:	bx	lr
   1668c:	ldr	r3, [pc, #12]	; 166a0 <__mempcpy_chk@plt+0x56b8>
   16690:	mov	r1, #0
   16694:	add	r3, pc, r3
   16698:	ldr	r2, [r3]
   1669c:	b	10f28 <__cxa_atexit@plt>
   166a0:	andeq	r1, r1, r8, asr #20

Disassembly of section .fini:

000166a4 <.fini>:
   166a4:	push	{r3, lr}
   166a8:	pop	{r3, pc}
