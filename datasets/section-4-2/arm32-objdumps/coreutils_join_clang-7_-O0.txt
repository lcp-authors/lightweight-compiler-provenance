
../repos/coreutils/src/join:     file format elf32-littlearm


Disassembly of section .init:

0001104c <.init>:
   1104c:	push	{r3, lr}
   11050:	bl	11378 <__assert_fail@plt+0x48>
   11054:	pop	{r3, pc}

Disassembly of section .plt:

00011058 <fdopen@plt-0x14>:
   11058:	push	{lr}		; (str lr, [sp, #-4]!)
   1105c:	ldr	lr, [pc, #4]	; 11068 <fdopen@plt-0x4>
   11060:	add	lr, pc, lr
   11064:	ldr	pc, [lr, #8]!
   11068:	muleq	r2, r8, pc	; <UNPREDICTABLE>

0001106c <fdopen@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #135168	; 0x21000
   11074:	ldr	pc, [ip, #3992]!	; 0xf98

00011078 <calloc@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #135168	; 0x21000
   11080:	ldr	pc, [ip, #3984]!	; 0xf90

00011084 <fputs_unlocked@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #135168	; 0x21000
   1108c:	ldr	pc, [ip, #3976]!	; 0xf88

00011090 <raise@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #135168	; 0x21000
   11098:	ldr	pc, [ip, #3968]!	; 0xf80

0001109c <strcmp@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #135168	; 0x21000
   110a4:	ldr	pc, [ip, #3960]!	; 0xf78

000110a8 <posix_fadvise64@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #135168	; 0x21000
   110b0:	ldr	pc, [ip, #3952]!	; 0xf70

000110b4 <printf@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #135168	; 0x21000
   110bc:	ldr	pc, [ip, #3944]!	; 0xf68

000110c0 <fflush@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #135168	; 0x21000
   110c8:	ldr	pc, [ip, #3936]!	; 0xf60

000110cc <free@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #135168	; 0x21000
   110d4:	ldr	pc, [ip, #3928]!	; 0xf58

000110d8 <_exit@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #135168	; 0x21000
   110e0:	ldr	pc, [ip, #3920]!	; 0xf50

000110e4 <memcpy@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #135168	; 0x21000
   110ec:	ldr	pc, [ip, #3912]!	; 0xf48

000110f0 <mbsinit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #135168	; 0x21000
   110f8:	ldr	pc, [ip, #3904]!	; 0xf40

000110fc <fwrite_unlocked@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #135168	; 0x21000
   11104:	ldr	pc, [ip, #3896]!	; 0xf38

00011108 <memcmp@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #135168	; 0x21000
   11110:	ldr	pc, [ip, #3888]!	; 0xf30

00011114 <getc_unlocked@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #135168	; 0x21000
   1111c:	ldr	pc, [ip, #3880]!	; 0xf28

00011120 <realloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #135168	; 0x21000
   11128:	ldr	pc, [ip, #3872]!	; 0xf20

0001112c <textdomain@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #135168	; 0x21000
   11134:	ldr	pc, [ip, #3864]!	; 0xf18

00011138 <iswprint@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #135168	; 0x21000
   11140:	ldr	pc, [ip, #3856]!	; 0xf10

00011144 <lseek64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #135168	; 0x21000
   1114c:	ldr	pc, [ip, #3848]!	; 0xf08

00011150 <__ctype_get_mb_cur_max@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #135168	; 0x21000
   11158:	ldr	pc, [ip, #3840]!	; 0xf00

0001115c <__fpending@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #135168	; 0x21000
   11164:	ldr	pc, [ip, #3832]!	; 0xef8

00011168 <ferror_unlocked@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #135168	; 0x21000
   11170:	ldr	pc, [ip, #3824]!	; 0xef0

00011174 <mbrtowc@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #135168	; 0x21000
   1117c:	ldr	pc, [ip, #3816]!	; 0xee8

00011180 <error@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #135168	; 0x21000
   11188:	ldr	pc, [ip, #3808]!	; 0xee0

0001118c <strcoll@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #135168	; 0x21000
   11194:	ldr	pc, [ip, #3800]!	; 0xed8

00011198 <malloc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #135168	; 0x21000
   111a0:	ldr	pc, [ip, #3792]!	; 0xed0

000111a4 <__libc_start_main@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #135168	; 0x21000
   111ac:	ldr	pc, [ip, #3784]!	; 0xec8

000111b0 <__freading@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #135168	; 0x21000
   111b8:	ldr	pc, [ip, #3776]!	; 0xec0

000111bc <__gmon_start__@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #135168	; 0x21000
   111c4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111c8 <getopt_long@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #135168	; 0x21000
   111d0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111d4 <__ctype_b_loc@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #135168	; 0x21000
   111dc:	ldr	pc, [ip, #3752]!	; 0xea8

000111e0 <exit@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #135168	; 0x21000
   111e8:	ldr	pc, [ip, #3744]!	; 0xea0

000111ec <gettext@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #135168	; 0x21000
   111f4:	ldr	pc, [ip, #3736]!	; 0xe98

000111f8 <strtoul@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #135168	; 0x21000
   11200:	ldr	pc, [ip, #3728]!	; 0xe90

00011204 <strlen@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #135168	; 0x21000
   1120c:	ldr	pc, [ip, #3720]!	; 0xe88

00011210 <strchr@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #135168	; 0x21000
   11218:	ldr	pc, [ip, #3712]!	; 0xe80

0001121c <fprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #135168	; 0x21000
   11224:	ldr	pc, [ip, #3704]!	; 0xe78

00011228 <__errno_location@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #135168	; 0x21000
   11230:	ldr	pc, [ip, #3696]!	; 0xe70

00011234 <__cxa_atexit@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #135168	; 0x21000
   1123c:	ldr	pc, [ip, #3688]!	; 0xe68

00011240 <memset@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #135168	; 0x21000
   11248:	ldr	pc, [ip, #3680]!	; 0xe60

0001124c <fileno@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #135168	; 0x21000
   11254:	ldr	pc, [ip, #3672]!	; 0xe58

00011258 <strtoumax@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #135168	; 0x21000
   11260:	ldr	pc, [ip, #3664]!	; 0xe50

00011264 <memchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #135168	; 0x21000
   1126c:	ldr	pc, [ip, #3656]!	; 0xe48

00011270 <fclose@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #135168	; 0x21000
   11278:	ldr	pc, [ip, #3648]!	; 0xe40

0001127c <fseeko64@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #135168	; 0x21000
   11284:	ldr	pc, [ip, #3640]!	; 0xe38

00011288 <fcntl64@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #135168	; 0x21000
   11290:	ldr	pc, [ip, #3632]!	; 0xe30

00011294 <setlocale@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #135168	; 0x21000
   1129c:	ldr	pc, [ip, #3624]!	; 0xe28

000112a0 <toupper@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #135168	; 0x21000
   112a8:	ldr	pc, [ip, #3616]!	; 0xe20

000112ac <strrchr@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #135168	; 0x21000
   112b4:	ldr	pc, [ip, #3608]!	; 0xe18

000112b8 <nl_langinfo@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #135168	; 0x21000
   112c0:	ldr	pc, [ip, #3600]!	; 0xe10

000112c4 <fopen64@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #135168	; 0x21000
   112cc:	ldr	pc, [ip, #3592]!	; 0xe08

000112d0 <strpbrk@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #135168	; 0x21000
   112d8:	ldr	pc, [ip, #3584]!	; 0xe00

000112dc <bindtextdomain@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #135168	; 0x21000
   112e4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112e8 <fputs@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #135168	; 0x21000
   112f0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112f4 <strncmp@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #135168	; 0x21000
   112fc:	ldr	pc, [ip, #3560]!	; 0xde8

00011300 <abort@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #135168	; 0x21000
   11308:	ldr	pc, [ip, #3552]!	; 0xde0

0001130c <feof_unlocked@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #135168	; 0x21000
   11314:	ldr	pc, [ip, #3544]!	; 0xdd8

00011318 <close@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #135168	; 0x21000
   11320:	ldr	pc, [ip, #3536]!	; 0xdd0

00011324 <putchar_unlocked@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #135168	; 0x21000
   1132c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011330 <__assert_fail@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #135168	; 0x21000
   11338:	ldr	pc, [ip, #3520]!	; 0xdc0

Disassembly of section .text:

0001133c <.text>:
   1133c:	mov	fp, #0
   11340:	mov	lr, #0
   11344:	pop	{r1}		; (ldr r1, [sp], #4)
   11348:	mov	r2, sp
   1134c:	push	{r2}		; (str r2, [sp, #-4]!)
   11350:	push	{r0}		; (str r0, [sp, #-4]!)
   11354:	ldr	ip, [pc, #16]	; 1136c <__assert_fail@plt+0x3c>
   11358:	push	{ip}		; (str ip, [sp, #-4]!)
   1135c:	ldr	r0, [pc, #12]	; 11370 <__assert_fail@plt+0x40>
   11360:	ldr	r3, [pc, #12]	; 11374 <__assert_fail@plt+0x44>
   11364:	bl	111a4 <__libc_start_main@plt>
   11368:	bl	11300 <abort@plt>
   1136c:	ldrdeq	r1, [r2], -r4
   11370:	andeq	r1, r1, r4, asr #15
   11374:	andeq	r1, r2, r4, ror r6
   11378:	ldr	r3, [pc, #20]	; 11394 <__assert_fail@plt+0x64>
   1137c:	ldr	r2, [pc, #20]	; 11398 <__assert_fail@plt+0x68>
   11380:	add	r3, pc, r3
   11384:	ldr	r2, [r3, r2]
   11388:	cmp	r2, #0
   1138c:	bxeq	lr
   11390:	b	111bc <__gmon_start__@plt>
   11394:	andeq	r1, r2, r8, ror ip
   11398:	strdeq	r0, [r0], -ip
   1139c:	ldr	r0, [pc, #24]	; 113bc <__assert_fail@plt+0x8c>
   113a0:	ldr	r3, [pc, #24]	; 113c0 <__assert_fail@plt+0x90>
   113a4:	cmp	r3, r0
   113a8:	bxeq	lr
   113ac:	ldr	r3, [pc, #16]	; 113c4 <__assert_fail@plt+0x94>
   113b0:	cmp	r3, #0
   113b4:	bxeq	lr
   113b8:	bx	r3
   113bc:	andeq	r3, r3, r4, ror #2
   113c0:	andeq	r3, r3, r4, ror #2
   113c4:	andeq	r0, r0, r0
   113c8:	ldr	r0, [pc, #36]	; 113f4 <__assert_fail@plt+0xc4>
   113cc:	ldr	r1, [pc, #36]	; 113f8 <__assert_fail@plt+0xc8>
   113d0:	sub	r1, r1, r0
   113d4:	asr	r1, r1, #2
   113d8:	add	r1, r1, r1, lsr #31
   113dc:	asrs	r1, r1, #1
   113e0:	bxeq	lr
   113e4:	ldr	r3, [pc, #16]	; 113fc <__assert_fail@plt+0xcc>
   113e8:	cmp	r3, #0
   113ec:	bxeq	lr
   113f0:	bx	r3
   113f4:	andeq	r3, r3, r4, ror #2
   113f8:	andeq	r3, r3, r4, ror #2
   113fc:	andeq	r0, r0, r0
   11400:	push	{r4, lr}
   11404:	ldr	r4, [pc, #24]	; 11424 <__assert_fail@plt+0xf4>
   11408:	ldrb	r3, [r4]
   1140c:	cmp	r3, #0
   11410:	popne	{r4, pc}
   11414:	bl	1139c <__assert_fail@plt+0x6c>
   11418:	mov	r3, #1
   1141c:	strb	r3, [r4]
   11420:	pop	{r4, pc}
   11424:	andeq	r3, r3, ip, lsl #3
   11428:	b	113c8 <__assert_fail@plt+0x98>
   1142c:	push	{fp, lr}
   11430:	mov	fp, sp
   11434:	sub	sp, sp, #56	; 0x38
   11438:	str	r0, [fp, #-4]
   1143c:	ldr	r0, [fp, #-4]
   11440:	cmp	r0, #0
   11444:	beq	11494 <__assert_fail@plt+0x164>
   11448:	b	1144c <__assert_fail@plt+0x11c>
   1144c:	movw	r0, #12664	; 0x3178
   11450:	movt	r0, #3
   11454:	ldr	r0, [r0]
   11458:	movw	r1, #5884	; 0x16fc
   1145c:	movt	r1, #2
   11460:	str	r0, [fp, #-8]
   11464:	mov	r0, r1
   11468:	bl	111ec <gettext@plt>
   1146c:	movw	r1, #12808	; 0x3208
   11470:	movt	r1, #3
   11474:	ldr	r2, [r1]
   11478:	ldr	r1, [fp, #-8]
   1147c:	str	r0, [fp, #-12]
   11480:	mov	r0, r1
   11484:	ldr	r1, [fp, #-12]
   11488:	bl	1121c <fprintf@plt>
   1148c:	str	r0, [fp, #-16]
   11490:	b	11608 <__assert_fail@plt+0x2d8>
   11494:	movw	r0, #5923	; 0x1723
   11498:	movt	r0, #2
   1149c:	bl	111ec <gettext@plt>
   114a0:	movw	lr, #12808	; 0x3208
   114a4:	movt	lr, #3
   114a8:	ldr	r1, [lr]
   114ac:	bl	110b4 <printf@plt>
   114b0:	movw	r1, #5958	; 0x1746
   114b4:	movt	r1, #2
   114b8:	str	r0, [fp, #-20]	; 0xffffffec
   114bc:	mov	r0, r1
   114c0:	bl	111ec <gettext@plt>
   114c4:	movw	r1, #12676	; 0x3184
   114c8:	movt	r1, #3
   114cc:	ldr	r1, [r1]
   114d0:	bl	11084 <fputs_unlocked@plt>
   114d4:	movw	r1, #6108	; 0x17dc
   114d8:	movt	r1, #2
   114dc:	str	r0, [fp, #-24]	; 0xffffffe8
   114e0:	mov	r0, r1
   114e4:	bl	111ec <gettext@plt>
   114e8:	movw	r1, #12676	; 0x3184
   114ec:	movt	r1, #3
   114f0:	ldr	r1, [r1]
   114f4:	bl	11084 <fputs_unlocked@plt>
   114f8:	movw	r1, #6168	; 0x1818
   114fc:	movt	r1, #2
   11500:	str	r0, [sp, #28]
   11504:	mov	r0, r1
   11508:	bl	111ec <gettext@plt>
   1150c:	movw	r1, #12676	; 0x3184
   11510:	movt	r1, #3
   11514:	ldr	r1, [r1]
   11518:	bl	11084 <fputs_unlocked@plt>
   1151c:	movw	r1, #6391	; 0x18f7
   11520:	movt	r1, #2
   11524:	str	r0, [sp, #24]
   11528:	mov	r0, r1
   1152c:	bl	111ec <gettext@plt>
   11530:	movw	r1, #12676	; 0x3184
   11534:	movt	r1, #3
   11538:	ldr	r1, [r1]
   1153c:	bl	11084 <fputs_unlocked@plt>
   11540:	movw	r1, #6663	; 0x1a07
   11544:	movt	r1, #2
   11548:	str	r0, [sp, #20]
   1154c:	mov	r0, r1
   11550:	bl	111ec <gettext@plt>
   11554:	movw	r1, #12676	; 0x3184
   11558:	movt	r1, #3
   1155c:	ldr	r1, [r1]
   11560:	bl	11084 <fputs_unlocked@plt>
   11564:	movw	r1, #7194	; 0x1c1a
   11568:	movt	r1, #2
   1156c:	str	r0, [sp, #16]
   11570:	mov	r0, r1
   11574:	bl	111ec <gettext@plt>
   11578:	movw	r1, #12676	; 0x3184
   1157c:	movt	r1, #3
   11580:	ldr	r1, [r1]
   11584:	bl	11084 <fputs_unlocked@plt>
   11588:	movw	r1, #7255	; 0x1c57
   1158c:	movt	r1, #2
   11590:	str	r0, [sp, #12]
   11594:	mov	r0, r1
   11598:	bl	111ec <gettext@plt>
   1159c:	movw	r1, #12676	; 0x3184
   115a0:	movt	r1, #3
   115a4:	ldr	r1, [r1]
   115a8:	bl	11084 <fputs_unlocked@plt>
   115ac:	movw	r1, #7300	; 0x1c84
   115b0:	movt	r1, #2
   115b4:	str	r0, [sp, #8]
   115b8:	mov	r0, r1
   115bc:	bl	111ec <gettext@plt>
   115c0:	movw	r1, #12676	; 0x3184
   115c4:	movt	r1, #3
   115c8:	ldr	r1, [r1]
   115cc:	bl	11084 <fputs_unlocked@plt>
   115d0:	movw	r1, #7354	; 0x1cba
   115d4:	movt	r1, #2
   115d8:	str	r0, [sp, #4]
   115dc:	mov	r0, r1
   115e0:	bl	111ec <gettext@plt>
   115e4:	movw	r1, #12676	; 0x3184
   115e8:	movt	r1, #3
   115ec:	ldr	r1, [r1]
   115f0:	bl	11084 <fputs_unlocked@plt>
   115f4:	movw	r1, #8172	; 0x1fec
   115f8:	movt	r1, #2
   115fc:	str	r0, [sp]
   11600:	mov	r0, r1
   11604:	bl	11610 <__assert_fail@plt+0x2e0>
   11608:	ldr	r0, [fp, #-4]
   1160c:	bl	111e0 <exit@plt>
   11610:	push	{fp, lr}
   11614:	mov	fp, sp
   11618:	sub	sp, sp, #96	; 0x60
   1161c:	add	r1, sp, #36	; 0x24
   11620:	movw	r2, #9236	; 0x2414
   11624:	movt	r2, #2
   11628:	str	r0, [fp, #-4]
   1162c:	mov	r0, r1
   11630:	str	r1, [sp, #20]
   11634:	mov	r1, r2
   11638:	movw	r2, #56	; 0x38
   1163c:	bl	110e4 <memcpy@plt>
   11640:	ldr	r0, [fp, #-4]
   11644:	str	r0, [sp, #32]
   11648:	ldr	r0, [sp, #20]
   1164c:	str	r0, [sp, #28]
   11650:	ldr	r0, [sp, #28]
   11654:	ldr	r0, [r0]
   11658:	movw	r1, #0
   1165c:	cmp	r0, r1
   11660:	movw	r0, #0
   11664:	str	r0, [sp, #16]
   11668:	beq	11694 <__assert_fail@plt+0x364>
   1166c:	ldr	r0, [fp, #-4]
   11670:	ldr	r1, [sp, #28]
   11674:	ldr	r1, [r1]
   11678:	bl	1109c <strcmp@plt>
   1167c:	cmp	r0, #0
   11680:	movw	r0, #0
   11684:	moveq	r0, #1
   11688:	mvn	r1, #0
   1168c:	eor	r0, r0, r1
   11690:	str	r0, [sp, #16]
   11694:	ldr	r0, [sp, #16]
   11698:	tst	r0, #1
   1169c:	beq	116b0 <__assert_fail@plt+0x380>
   116a0:	ldr	r0, [sp, #28]
   116a4:	add	r0, r0, #8
   116a8:	str	r0, [sp, #28]
   116ac:	b	11650 <__assert_fail@plt+0x320>
   116b0:	ldr	r0, [sp, #28]
   116b4:	ldr	r0, [r0, #4]
   116b8:	movw	r1, #0
   116bc:	cmp	r0, r1
   116c0:	beq	116d0 <__assert_fail@plt+0x3a0>
   116c4:	ldr	r0, [sp, #28]
   116c8:	ldr	r0, [r0, #4]
   116cc:	str	r0, [sp, #32]
   116d0:	movw	r0, #8567	; 0x2177
   116d4:	movt	r0, #2
   116d8:	bl	111ec <gettext@plt>
   116dc:	movw	r1, #8339	; 0x2093
   116e0:	movt	r1, #2
   116e4:	movw	r2, #8590	; 0x218e
   116e8:	movt	r2, #2
   116ec:	bl	110b4 <printf@plt>
   116f0:	movw	r1, #5
   116f4:	str	r0, [sp, #12]
   116f8:	mov	r0, r1
   116fc:	movw	r1, #0
   11700:	bl	11294 <setlocale@plt>
   11704:	str	r0, [sp, #24]
   11708:	ldr	r0, [sp, #24]
   1170c:	movw	r1, #0
   11710:	cmp	r0, r1
   11714:	beq	11754 <__assert_fail@plt+0x424>
   11718:	ldr	r0, [sp, #24]
   1171c:	movw	r1, #8630	; 0x21b6
   11720:	movt	r1, #2
   11724:	movw	r2, #3
   11728:	bl	112f4 <strncmp@plt>
   1172c:	cmp	r0, #0
   11730:	beq	11754 <__assert_fail@plt+0x424>
   11734:	movw	r0, #8634	; 0x21ba
   11738:	movt	r0, #2
   1173c:	bl	111ec <gettext@plt>
   11740:	movw	lr, #12676	; 0x3184
   11744:	movt	lr, #3
   11748:	ldr	r1, [lr]
   1174c:	bl	11084 <fputs_unlocked@plt>
   11750:	str	r0, [sp, #8]
   11754:	movw	r0, #8705	; 0x2201
   11758:	movt	r0, #2
   1175c:	bl	111ec <gettext@plt>
   11760:	ldr	r2, [fp, #-4]
   11764:	movw	r1, #8590	; 0x218e
   11768:	movt	r1, #2
   1176c:	bl	110b4 <printf@plt>
   11770:	movw	r1, #8732	; 0x221c
   11774:	movt	r1, #2
   11778:	str	r0, [sp, #4]
   1177c:	mov	r0, r1
   11780:	bl	111ec <gettext@plt>
   11784:	ldr	r1, [sp, #32]
   11788:	ldr	r2, [sp, #32]
   1178c:	ldr	lr, [fp, #-4]
   11790:	cmp	r2, lr
   11794:	movw	r2, #0
   11798:	moveq	r2, #1
   1179c:	tst	r2, #1
   117a0:	movw	r2, #8882	; 0x22b2
   117a4:	movt	r2, #2
   117a8:	movw	lr, #8500	; 0x2134
   117ac:	movt	lr, #2
   117b0:	movne	r2, lr
   117b4:	bl	110b4 <printf@plt>
   117b8:	str	r0, [sp]
   117bc:	mov	sp, fp
   117c0:	pop	{fp, pc}
   117c4:	push	{fp, lr}
   117c8:	mov	fp, sp
   117cc:	sub	sp, sp, #208	; 0xd0
   117d0:	movw	r2, #0
   117d4:	str	r2, [fp, #-4]
   117d8:	str	r0, [fp, #-8]
   117dc:	str	r1, [fp, #-12]
   117e0:	str	r2, [fp, #-20]	; 0xffffffec
   117e4:	sub	r0, fp, #36	; 0x24
   117e8:	movw	r1, #0
   117ec:	and	r1, r1, #255	; 0xff
   117f0:	movw	r3, #8
   117f4:	str	r2, [fp, #-68]	; 0xffffffbc
   117f8:	mov	r2, r3
   117fc:	bl	11240 <memset@plt>
   11800:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11804:	str	r0, [fp, #-52]	; 0xffffffcc
   11808:	ldr	r1, [fp, #-12]
   1180c:	ldr	r0, [r1]
   11810:	bl	14c74 <__assert_fail@plt+0x3944>
   11814:	movw	r0, #6
   11818:	movw	r1, #8882	; 0x22b2
   1181c:	movt	r1, #2
   11820:	bl	11294 <setlocale@plt>
   11824:	movw	r1, #8343	; 0x2097
   11828:	movt	r1, #2
   1182c:	str	r0, [fp, #-72]	; 0xffffffb8
   11830:	mov	r0, r1
   11834:	movw	r1, #8177	; 0x1ff1
   11838:	movt	r1, #2
   1183c:	bl	112dc <bindtextdomain@plt>
   11840:	movw	r1, #8343	; 0x2097
   11844:	movt	r1, #2
   11848:	str	r0, [fp, #-76]	; 0xffffffb4
   1184c:	mov	r0, r1
   11850:	bl	1112c <textdomain@plt>
   11854:	movw	r1, #3
   11858:	str	r0, [fp, #-80]	; 0xffffffb0
   1185c:	mov	r0, r1
   11860:	bl	148fc <__assert_fail@plt+0x35cc>
   11864:	and	r0, r0, #1
   11868:	movw	r1, #12688	; 0x3190
   1186c:	movt	r1, #3
   11870:	strb	r0, [r1]
   11874:	movw	r0, #17160	; 0x4308
   11878:	movt	r0, #1
   1187c:	bl	216d8 <__assert_fail@plt+0x103a8>
   11880:	movw	r1, #9112	; 0x2398
   11884:	movt	r1, #1
   11888:	str	r0, [fp, #-84]	; 0xffffffac
   1188c:	mov	r0, r1
   11890:	bl	216d8 <__assert_fail@plt+0x103a8>
   11894:	movw	r1, #12689	; 0x3191
   11898:	movt	r1, #3
   1189c:	movw	r2, #1
   118a0:	strb	r2, [r1]
   118a4:	movw	r1, #12690	; 0x3192
   118a8:	movt	r1, #3
   118ac:	movw	r2, #0
   118b0:	strb	r2, [r1]
   118b4:	movw	r1, #12691	; 0x3193
   118b8:	movt	r1, #3
   118bc:	strb	r2, [r1, #1]
   118c0:	strb	r2, [r1]
   118c4:	movw	r1, #12696	; 0x3198
   118c8:	movt	r1, #3
   118cc:	movw	r2, #0
   118d0:	str	r2, [r1]
   118d4:	str	r0, [fp, #-88]	; 0xffffffa8
   118d8:	ldr	r0, [fp, #-8]
   118dc:	ldr	r1, [fp, #-12]
   118e0:	movw	r2, #8201	; 0x2009
   118e4:	movt	r2, #2
   118e8:	movw	r3, #9108	; 0x2394
   118ec:	movt	r3, #2
   118f0:	movw	ip, #0
   118f4:	str	ip, [sp]
   118f8:	bl	111c8 <getopt_long@plt>
   118fc:	str	r0, [fp, #-48]	; 0xffffffd0
   11900:	cmn	r0, #1
   11904:	beq	11f40 <__assert_fail@plt+0xc10>
   11908:	mov	r0, #0
   1190c:	str	r0, [fp, #-16]
   11910:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11914:	cmn	r0, #3
   11918:	str	r0, [fp, #-92]	; 0xffffffa4
   1191c:	beq	11ee4 <__assert_fail@plt+0xbb4>
   11920:	b	11924 <__assert_fail@plt+0x5f4>
   11924:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11928:	cmn	r0, #2
   1192c:	beq	11edc <__assert_fail@plt+0xbac>
   11930:	b	11934 <__assert_fail@plt+0x604>
   11934:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11938:	cmp	r0, #1
   1193c:	beq	11e8c <__assert_fail@plt+0xb5c>
   11940:	b	11944 <__assert_fail@plt+0x614>
   11944:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11948:	cmp	r0, #49	; 0x31
   1194c:	beq	11b78 <__assert_fail@plt+0x848>
   11950:	b	11954 <__assert_fail@plt+0x624>
   11954:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11958:	cmp	r0, #50	; 0x32
   1195c:	beq	11ba4 <__assert_fail@plt+0x874>
   11960:	b	11964 <__assert_fail@plt+0x634>
   11964:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11968:	cmp	r0, #97	; 0x61
   1196c:	beq	11a2c <__assert_fail@plt+0x6fc>
   11970:	b	11974 <__assert_fail@plt+0x644>
   11974:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11978:	cmp	r0, #101	; 0x65
   1197c:	beq	11ae8 <__assert_fail@plt+0x7b8>
   11980:	b	11984 <__assert_fail@plt+0x654>
   11984:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11988:	cmp	r0, #105	; 0x69
   1198c:	beq	11b64 <__assert_fail@plt+0x834>
   11990:	b	11994 <__assert_fail@plt+0x664>
   11994:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11998:	cmp	r0, #106	; 0x6a
   1199c:	beq	11bd0 <__assert_fail@plt+0x8a0>
   119a0:	b	119a4 <__assert_fail@plt+0x674>
   119a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   119a8:	cmp	r0, #111	; 0x6f
   119ac:	beq	11ce0 <__assert_fail@plt+0x9b0>
   119b0:	b	119b4 <__assert_fail@plt+0x684>
   119b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   119b8:	cmp	r0, #116	; 0x74
   119bc:	beq	11d30 <__assert_fail@plt+0xa00>
   119c0:	b	119c4 <__assert_fail@plt+0x694>
   119c4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   119c8:	cmp	r0, #118	; 0x76
   119cc:	beq	11a1c <__assert_fail@plt+0x6ec>
   119d0:	b	119d4 <__assert_fail@plt+0x6a4>
   119d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   119d8:	cmp	r0, #122	; 0x7a
   119dc:	beq	11e50 <__assert_fail@plt+0xb20>
   119e0:	b	119e4 <__assert_fail@plt+0x6b4>
   119e4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   119e8:	cmp	r0, #256	; 0x100
   119ec:	beq	11e78 <__assert_fail@plt+0xb48>
   119f0:	b	119f4 <__assert_fail@plt+0x6c4>
   119f4:	movw	r0, #257	; 0x101
   119f8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   119fc:	cmp	r1, r0
   11a00:	beq	11e64 <__assert_fail@plt+0xb34>
   11a04:	b	11a08 <__assert_fail@plt+0x6d8>
   11a08:	movw	r0, #258	; 0x102
   11a0c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   11a10:	cmp	r1, r0
   11a14:	beq	11ec8 <__assert_fail@plt+0xb98>
   11a18:	b	11f2c <__assert_fail@plt+0xbfc>
   11a1c:	movw	r0, #12689	; 0x3191
   11a20:	movt	r0, #3
   11a24:	movw	r1, #0
   11a28:	strb	r1, [r0]
   11a2c:	movw	r0, #12680	; 0x3188
   11a30:	movt	r0, #3
   11a34:	ldr	r0, [r0]
   11a38:	movw	r1, #0
   11a3c:	movw	r2, #10
   11a40:	sub	r3, fp, #60	; 0x3c
   11a44:	movw	ip, #8882	; 0x22b2
   11a48:	movt	ip, #2
   11a4c:	str	ip, [sp]
   11a50:	bl	1aeb0 <__assert_fail@plt+0x9b80>
   11a54:	cmp	r0, #0
   11a58:	bne	11a74 <__assert_fail@plt+0x744>
   11a5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11a60:	cmp	r0, #1
   11a64:	beq	11ab4 <__assert_fail@plt+0x784>
   11a68:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11a6c:	cmp	r0, #2
   11a70:	beq	11ab4 <__assert_fail@plt+0x784>
   11a74:	movw	r0, #8221	; 0x201d
   11a78:	movt	r0, #2
   11a7c:	bl	111ec <gettext@plt>
   11a80:	movw	lr, #12680	; 0x3188
   11a84:	movt	lr, #3
   11a88:	ldr	lr, [lr]
   11a8c:	str	r0, [fp, #-96]	; 0xffffffa0
   11a90:	mov	r0, lr
   11a94:	bl	172d0 <__assert_fail@plt+0x5fa0>
   11a98:	movw	lr, #1
   11a9c:	str	r0, [fp, #-100]	; 0xffffff9c
   11aa0:	mov	r0, lr
   11aa4:	movw	r1, #0
   11aa8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11aac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11ab0:	bl	11180 <error@plt>
   11ab4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11ab8:	cmp	r0, #1
   11abc:	bne	11ad4 <__assert_fail@plt+0x7a4>
   11ac0:	movw	r0, #12700	; 0x319c
   11ac4:	movt	r0, #3
   11ac8:	movw	r1, #1
   11acc:	strb	r1, [r0]
   11ad0:	b	11ae4 <__assert_fail@plt+0x7b4>
   11ad4:	movw	r0, #12701	; 0x319d
   11ad8:	movt	r0, #3
   11adc:	movw	r1, #1
   11ae0:	strb	r1, [r0]
   11ae4:	b	11f34 <__assert_fail@plt+0xc04>
   11ae8:	movw	r0, #12704	; 0x31a0
   11aec:	movt	r0, #3
   11af0:	ldr	r0, [r0]
   11af4:	movw	r1, #0
   11af8:	cmp	r0, r1
   11afc:	beq	11b48 <__assert_fail@plt+0x818>
   11b00:	movw	r0, #12704	; 0x31a0
   11b04:	movt	r0, #3
   11b08:	ldr	r0, [r0]
   11b0c:	movw	r1, #12680	; 0x3188
   11b10:	movt	r1, #3
   11b14:	ldr	r1, [r1]
   11b18:	bl	1109c <strcmp@plt>
   11b1c:	cmp	r0, #0
   11b20:	beq	11b48 <__assert_fail@plt+0x818>
   11b24:	movw	r0, #8246	; 0x2036
   11b28:	movt	r0, #2
   11b2c:	bl	111ec <gettext@plt>
   11b30:	movw	lr, #1
   11b34:	str	r0, [sp, #104]	; 0x68
   11b38:	mov	r0, lr
   11b3c:	movw	r1, #0
   11b40:	ldr	r2, [sp, #104]	; 0x68
   11b44:	bl	11180 <error@plt>
   11b48:	movw	r0, #12680	; 0x3188
   11b4c:	movt	r0, #3
   11b50:	ldr	r0, [r0]
   11b54:	movw	r1, #12704	; 0x31a0
   11b58:	movt	r1, #3
   11b5c:	str	r0, [r1]
   11b60:	b	11f34 <__assert_fail@plt+0xc04>
   11b64:	movw	r0, #12708	; 0x31a4
   11b68:	movt	r0, #3
   11b6c:	movw	r1, #1
   11b70:	strb	r1, [r0]
   11b74:	b	11f34 <__assert_fail@plt+0xc04>
   11b78:	movw	r0, #12680	; 0x3188
   11b7c:	movt	r0, #3
   11b80:	ldr	r0, [r0]
   11b84:	bl	124b8 <__assert_fail@plt+0x1188>
   11b88:	movw	lr, #12552	; 0x3108
   11b8c:	movt	lr, #3
   11b90:	str	r0, [sp, #100]	; 0x64
   11b94:	mov	r0, lr
   11b98:	ldr	r1, [sp, #100]	; 0x64
   11b9c:	bl	12420 <__assert_fail@plt+0x10f0>
   11ba0:	b	11f34 <__assert_fail@plt+0xc04>
   11ba4:	movw	r0, #12680	; 0x3188
   11ba8:	movt	r0, #3
   11bac:	ldr	r0, [r0]
   11bb0:	bl	124b8 <__assert_fail@plt+0x1188>
   11bb4:	movw	lr, #12556	; 0x310c
   11bb8:	movt	lr, #3
   11bbc:	str	r0, [sp, #96]	; 0x60
   11bc0:	mov	r0, lr
   11bc4:	ldr	r1, [sp, #96]	; 0x60
   11bc8:	bl	12420 <__assert_fail@plt+0x10f0>
   11bcc:	b	11f34 <__assert_fail@plt+0xc04>
   11bd0:	movw	r0, #12680	; 0x3188
   11bd4:	movt	r0, #3
   11bd8:	ldr	r0, [r0]
   11bdc:	ldrb	r0, [r0]
   11be0:	cmp	r0, #49	; 0x31
   11be4:	beq	11c00 <__assert_fail@plt+0x8d0>
   11be8:	movw	r0, #12680	; 0x3188
   11bec:	movt	r0, #3
   11bf0:	ldr	r0, [r0]
   11bf4:	ldrb	r0, [r0]
   11bf8:	cmp	r0, #50	; 0x32
   11bfc:	bne	11c9c <__assert_fail@plt+0x96c>
   11c00:	movw	r0, #12680	; 0x3188
   11c04:	movt	r0, #3
   11c08:	ldr	r0, [r0]
   11c0c:	ldrsb	r0, [r0, #1]
   11c10:	cmp	r0, #0
   11c14:	bne	11c9c <__assert_fail@plt+0x96c>
   11c18:	movw	r0, #12680	; 0x3188
   11c1c:	movt	r0, #3
   11c20:	ldr	r0, [r0]
   11c24:	ldr	r1, [fp, #-12]
   11c28:	movw	r2, #12656	; 0x3170
   11c2c:	movt	r2, #3
   11c30:	ldr	r2, [r2]
   11c34:	sub	r2, r2, #1
   11c38:	add	r1, r1, r2, lsl #2
   11c3c:	ldr	r1, [r1]
   11c40:	add	r1, r1, #2
   11c44:	cmp	r0, r1
   11c48:	bne	11c9c <__assert_fail@plt+0x96c>
   11c4c:	movw	r0, #12680	; 0x3188
   11c50:	movt	r0, #3
   11c54:	ldr	r0, [r0]
   11c58:	ldrb	r0, [r0]
   11c5c:	sub	r0, r0, #50	; 0x32
   11c60:	clz	r0, r0
   11c64:	lsr	r0, r0, #5
   11c68:	strb	r0, [fp, #-61]	; 0xffffffc3
   11c6c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11c70:	and	r0, r0, #1
   11c74:	sub	r1, fp, #36	; 0x24
   11c78:	add	r0, r1, r0, lsl #2
   11c7c:	ldr	r1, [r0]
   11c80:	add	r1, r1, #1
   11c84:	str	r1, [r0]
   11c88:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11c8c:	and	r0, r0, #1
   11c90:	add	r0, r0, #1
   11c94:	str	r0, [fp, #-16]
   11c98:	b	11cdc <__assert_fail@plt+0x9ac>
   11c9c:	movw	r0, #12680	; 0x3188
   11ca0:	movt	r0, #3
   11ca4:	ldr	r0, [r0]
   11ca8:	bl	124b8 <__assert_fail@plt+0x1188>
   11cac:	movw	lr, #12552	; 0x3108
   11cb0:	movt	lr, #3
   11cb4:	str	r0, [sp, #92]	; 0x5c
   11cb8:	mov	r0, lr
   11cbc:	ldr	r1, [sp, #92]	; 0x5c
   11cc0:	bl	12420 <__assert_fail@plt+0x10f0>
   11cc4:	movw	r0, #12552	; 0x3108
   11cc8:	movt	r0, #3
   11ccc:	ldr	r1, [r0]
   11cd0:	movw	r0, #12556	; 0x310c
   11cd4:	movt	r0, #3
   11cd8:	bl	12420 <__assert_fail@plt+0x10f0>
   11cdc:	b	11f34 <__assert_fail@plt+0xc04>
   11ce0:	movw	r0, #12680	; 0x3188
   11ce4:	movt	r0, #3
   11ce8:	ldr	r0, [r0]
   11cec:	movw	r1, #8290	; 0x2062
   11cf0:	movt	r1, #2
   11cf4:	bl	1109c <strcmp@plt>
   11cf8:	cmp	r0, #0
   11cfc:	bne	11d14 <__assert_fail@plt+0x9e4>
   11d00:	movw	r0, #12709	; 0x31a5
   11d04:	movt	r0, #3
   11d08:	movw	r1, #1
   11d0c:	strb	r1, [r0]
   11d10:	b	11d2c <__assert_fail@plt+0x9fc>
   11d14:	movw	r0, #12680	; 0x3188
   11d18:	movt	r0, #3
   11d1c:	ldr	r0, [r0]
   11d20:	bl	125a0 <__assert_fail@plt+0x1270>
   11d24:	movw	r0, #3
   11d28:	str	r0, [fp, #-16]
   11d2c:	b	11f34 <__assert_fail@plt+0xc04>
   11d30:	movw	r0, #12680	; 0x3188
   11d34:	movt	r0, #3
   11d38:	ldr	r0, [r0]
   11d3c:	ldrb	r0, [r0]
   11d40:	strb	r0, [fp, #-62]	; 0xffffffc2
   11d44:	ldrsb	r0, [fp, #-62]	; 0xffffffc2
   11d48:	cmp	r0, #0
   11d4c:	bne	11d5c <__assert_fail@plt+0xa2c>
   11d50:	movw	r0, #10
   11d54:	strb	r0, [fp, #-62]	; 0xffffffc2
   11d58:	b	11de8 <__assert_fail@plt+0xab8>
   11d5c:	movw	r0, #12680	; 0x3188
   11d60:	movt	r0, #3
   11d64:	ldr	r0, [r0]
   11d68:	ldrsb	r0, [r0, #1]
   11d6c:	cmp	r0, #0
   11d70:	beq	11de4 <__assert_fail@plt+0xab4>
   11d74:	movw	r0, #12680	; 0x3188
   11d78:	movt	r0, #3
   11d7c:	ldr	r0, [r0]
   11d80:	movw	r1, #8295	; 0x2067
   11d84:	movt	r1, #2
   11d88:	bl	1109c <strcmp@plt>
   11d8c:	cmp	r0, #0
   11d90:	bne	11da0 <__assert_fail@plt+0xa70>
   11d94:	movw	r0, #0
   11d98:	strb	r0, [fp, #-62]	; 0xffffffc2
   11d9c:	b	11de0 <__assert_fail@plt+0xab0>
   11da0:	movw	r0, #8298	; 0x206a
   11da4:	movt	r0, #2
   11da8:	bl	111ec <gettext@plt>
   11dac:	movw	lr, #12680	; 0x3188
   11db0:	movt	lr, #3
   11db4:	ldr	lr, [lr]
   11db8:	str	r0, [sp, #88]	; 0x58
   11dbc:	mov	r0, lr
   11dc0:	bl	172d0 <__assert_fail@plt+0x5fa0>
   11dc4:	movw	lr, #1
   11dc8:	str	r0, [sp, #84]	; 0x54
   11dcc:	mov	r0, lr
   11dd0:	movw	r1, #0
   11dd4:	ldr	r2, [sp, #88]	; 0x58
   11dd8:	ldr	r3, [sp, #84]	; 0x54
   11ddc:	bl	11180 <error@plt>
   11de0:	b	11de4 <__assert_fail@plt+0xab4>
   11de4:	b	11de8 <__assert_fail@plt+0xab8>
   11de8:	movw	r0, #12560	; 0x3110
   11dec:	movt	r0, #3
   11df0:	ldr	r0, [r0]
   11df4:	movw	r1, #0
   11df8:	cmp	r1, r0
   11dfc:	bgt	11e3c <__assert_fail@plt+0xb0c>
   11e00:	movw	r0, #12560	; 0x3110
   11e04:	movt	r0, #3
   11e08:	ldr	r0, [r0]
   11e0c:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   11e10:	cmp	r0, r1
   11e14:	beq	11e3c <__assert_fail@plt+0xb0c>
   11e18:	movw	r0, #8321	; 0x2081
   11e1c:	movt	r0, #2
   11e20:	bl	111ec <gettext@plt>
   11e24:	movw	lr, #1
   11e28:	str	r0, [sp, #80]	; 0x50
   11e2c:	mov	r0, lr
   11e30:	movw	r1, #0
   11e34:	ldr	r2, [sp, #80]	; 0x50
   11e38:	bl	11180 <error@plt>
   11e3c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   11e40:	movw	r1, #12560	; 0x3110
   11e44:	movt	r1, #3
   11e48:	str	r0, [r1]
   11e4c:	b	11f34 <__assert_fail@plt+0xc04>
   11e50:	movw	r0, #12564	; 0x3114
   11e54:	movt	r0, #3
   11e58:	movw	r1, #0
   11e5c:	strb	r1, [r0]
   11e60:	b	11f34 <__assert_fail@plt+0xc04>
   11e64:	movw	r0, #12696	; 0x3198
   11e68:	movt	r0, #3
   11e6c:	movw	r1, #2
   11e70:	str	r1, [r0]
   11e74:	b	11f34 <__assert_fail@plt+0xc04>
   11e78:	movw	r0, #12696	; 0x3198
   11e7c:	movt	r0, #3
   11e80:	movw	r1, #1
   11e84:	str	r1, [r0]
   11e88:	b	11f34 <__assert_fail@plt+0xc04>
   11e8c:	sub	r3, fp, #36	; 0x24
   11e90:	sub	r2, fp, #28
   11e94:	movw	r0, #12680	; 0x3188
   11e98:	movt	r0, #3
   11e9c:	ldr	r0, [r0]
   11ea0:	movw	r1, #12712	; 0x31a8
   11ea4:	movt	r1, #3
   11ea8:	sub	ip, fp, #52	; 0x34
   11eac:	str	ip, [sp]
   11eb0:	sub	ip, fp, #20
   11eb4:	str	ip, [sp, #4]
   11eb8:	sub	ip, fp, #16
   11ebc:	str	ip, [sp, #8]
   11ec0:	bl	1262c <__assert_fail@plt+0x12fc>
   11ec4:	b	11f34 <__assert_fail@plt+0xc04>
   11ec8:	movw	r0, #12720	; 0x31b0
   11ecc:	movt	r0, #3
   11ed0:	movw	r1, #1
   11ed4:	strb	r1, [r0]
   11ed8:	b	11f34 <__assert_fail@plt+0xc04>
   11edc:	movw	r0, #0
   11ee0:	bl	1142c <__assert_fail@plt+0xfc>
   11ee4:	movw	r0, #12676	; 0x3184
   11ee8:	movt	r0, #3
   11eec:	ldr	r0, [r0]
   11ef0:	movw	r1, #12572	; 0x311c
   11ef4:	movt	r1, #3
   11ef8:	ldr	r3, [r1]
   11efc:	movw	r1, #8172	; 0x1fec
   11f00:	movt	r1, #2
   11f04:	movw	r2, #8339	; 0x2093
   11f08:	movt	r2, #2
   11f0c:	movw	ip, #8353	; 0x20a1
   11f10:	movt	ip, #2
   11f14:	str	ip, [sp]
   11f18:	movw	ip, #0
   11f1c:	str	ip, [sp, #4]
   11f20:	bl	17d10 <__assert_fail@plt+0x69e0>
   11f24:	movw	r0, #0
   11f28:	bl	111e0 <exit@plt>
   11f2c:	movw	r0, #1
   11f30:	bl	1142c <__assert_fail@plt+0xfc>
   11f34:	ldr	r0, [fp, #-16]
   11f38:	str	r0, [fp, #-20]	; 0xffffffec
   11f3c:	b	118d8 <__assert_fail@plt+0x5a8>
   11f40:	movw	r0, #0
   11f44:	str	r0, [fp, #-20]	; 0xffffffec
   11f48:	movw	r0, #12656	; 0x3170
   11f4c:	movt	r0, #3
   11f50:	ldr	r0, [r0]
   11f54:	ldr	r1, [fp, #-8]
   11f58:	cmp	r0, r1
   11f5c:	bge	11fb0 <__assert_fail@plt+0xc80>
   11f60:	sub	r3, fp, #36	; 0x24
   11f64:	sub	r2, fp, #28
   11f68:	ldr	r0, [fp, #-12]
   11f6c:	movw	r1, #12656	; 0x3170
   11f70:	movt	r1, #3
   11f74:	ldr	ip, [r1]
   11f78:	add	lr, ip, #1
   11f7c:	str	lr, [r1]
   11f80:	add	r0, r0, ip, lsl #2
   11f84:	ldr	r0, [r0]
   11f88:	movw	r1, #12712	; 0x31a8
   11f8c:	movt	r1, #3
   11f90:	sub	ip, fp, #52	; 0x34
   11f94:	str	ip, [sp]
   11f98:	sub	ip, fp, #20
   11f9c:	str	ip, [sp, #4]
   11fa0:	sub	ip, fp, #16
   11fa4:	str	ip, [sp, #8]
   11fa8:	bl	1262c <__assert_fail@plt+0x12fc>
   11fac:	b	11f48 <__assert_fail@plt+0xc18>
   11fb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11fb4:	cmp	r0, #2
   11fb8:	beq	1203c <__assert_fail@plt+0xd0c>
   11fbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11fc0:	cmp	r0, #0
   11fc4:	bne	11ff0 <__assert_fail@plt+0xcc0>
   11fc8:	movw	r0, #8366	; 0x20ae
   11fcc:	movt	r0, #2
   11fd0:	bl	111ec <gettext@plt>
   11fd4:	movw	lr, #0
   11fd8:	str	r0, [sp, #76]	; 0x4c
   11fdc:	mov	r0, lr
   11fe0:	mov	r1, lr
   11fe4:	ldr	r2, [sp, #76]	; 0x4c
   11fe8:	bl	11180 <error@plt>
   11fec:	b	12034 <__assert_fail@plt+0xd04>
   11ff0:	movw	r0, #8382	; 0x20be
   11ff4:	movt	r0, #2
   11ff8:	bl	111ec <gettext@plt>
   11ffc:	ldr	lr, [fp, #-12]
   12000:	ldr	r1, [fp, #-8]
   12004:	sub	r1, r1, #1
   12008:	add	r1, lr, r1, lsl #2
   1200c:	ldr	r1, [r1]
   12010:	str	r0, [sp, #72]	; 0x48
   12014:	mov	r0, r1
   12018:	bl	172d0 <__assert_fail@plt+0x5fa0>
   1201c:	movw	r1, #0
   12020:	str	r0, [sp, #68]	; 0x44
   12024:	mov	r0, r1
   12028:	ldr	r2, [sp, #72]	; 0x48
   1202c:	ldr	r3, [sp, #68]	; 0x44
   12030:	bl	11180 <error@plt>
   12034:	movw	r0, #1
   12038:	bl	1142c <__assert_fail@plt+0xfc>
   1203c:	movw	r0, #0
   12040:	str	r0, [fp, #-56]	; 0xffffffc8
   12044:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12048:	cmp	r0, #2
   1204c:	bge	1209c <__assert_fail@plt+0xd6c>
   12050:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12054:	sub	r1, fp, #36	; 0x24
   12058:	add	r0, r1, r0, lsl #2
   1205c:	ldr	r0, [r0]
   12060:	cmp	r0, #0
   12064:	beq	12088 <__assert_fail@plt+0xd58>
   12068:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1206c:	movw	r0, #12552	; 0x3108
   12070:	movt	r0, #3
   12074:	bl	12420 <__assert_fail@plt+0x10f0>
   12078:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1207c:	movw	r0, #12556	; 0x310c
   12080:	movt	r0, #3
   12084:	bl	12420 <__assert_fail@plt+0x10f0>
   12088:	b	1208c <__assert_fail@plt+0xd5c>
   1208c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12090:	add	r0, r0, #1
   12094:	str	r0, [fp, #-56]	; 0xffffffc8
   12098:	b	12044 <__assert_fail@plt+0xd14>
   1209c:	movw	r0, #12552	; 0x3108
   120a0:	movt	r0, #3
   120a4:	ldr	r0, [r0]
   120a8:	cmn	r0, #1
   120ac:	bne	120c0 <__assert_fail@plt+0xd90>
   120b0:	movw	r0, #12552	; 0x3108
   120b4:	movt	r0, #3
   120b8:	movw	r1, #0
   120bc:	str	r1, [r0]
   120c0:	movw	r0, #12556	; 0x310c
   120c4:	movt	r0, #3
   120c8:	ldr	r0, [r0]
   120cc:	cmn	r0, #1
   120d0:	bne	120e4 <__assert_fail@plt+0xdb4>
   120d4:	movw	r0, #12556	; 0x310c
   120d8:	movt	r0, #3
   120dc:	movw	r1, #0
   120e0:	str	r1, [r0]
   120e4:	movw	r0, #12712	; 0x31a8
   120e8:	movt	r0, #3
   120ec:	ldr	r0, [r0]
   120f0:	movw	r1, #9400	; 0x24b8
   120f4:	movt	r1, #2
   120f8:	bl	1109c <strcmp@plt>
   120fc:	cmp	r0, #0
   12100:	bne	12118 <__assert_fail@plt+0xde8>
   12104:	movw	r0, #12672	; 0x3180
   12108:	movt	r0, #3
   1210c:	ldr	r0, [r0]
   12110:	str	r0, [sp, #64]	; 0x40
   12114:	b	12134 <__assert_fail@plt+0xe04>
   12118:	movw	r0, #12712	; 0x31a8
   1211c:	movt	r0, #3
   12120:	ldr	r0, [r0]
   12124:	movw	r1, #8830	; 0x227e
   12128:	movt	r1, #2
   1212c:	bl	14684 <__assert_fail@plt+0x3354>
   12130:	str	r0, [sp, #64]	; 0x40
   12134:	ldr	r0, [sp, #64]	; 0x40
   12138:	str	r0, [fp, #-40]	; 0xffffffd8
   1213c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12140:	movw	r1, #0
   12144:	cmp	r0, r1
   12148:	bne	12194 <__assert_fail@plt+0xe64>
   1214c:	bl	11228 <__errno_location@plt>
   12150:	ldr	r1, [r0]
   12154:	movw	r0, #12712	; 0x31a8
   12158:	movt	r0, #3
   1215c:	ldr	r2, [r0]
   12160:	movw	r0, #0
   12164:	movw	lr, #3
   12168:	str	r1, [sp, #60]	; 0x3c
   1216c:	mov	r1, lr
   12170:	bl	1708c <__assert_fail@plt+0x5d5c>
   12174:	movw	r1, #1
   12178:	str	r0, [sp, #56]	; 0x38
   1217c:	mov	r0, r1
   12180:	ldr	r1, [sp, #60]	; 0x3c
   12184:	movw	r2, #8946	; 0x22f2
   12188:	movt	r2, #2
   1218c:	ldr	r3, [sp, #56]	; 0x38
   12190:	bl	11180 <error@plt>
   12194:	movw	r0, #12712	; 0x31a8
   12198:	movt	r0, #3
   1219c:	ldr	r0, [r0, #4]
   121a0:	movw	r1, #9400	; 0x24b8
   121a4:	movt	r1, #2
   121a8:	bl	1109c <strcmp@plt>
   121ac:	cmp	r0, #0
   121b0:	bne	121c8 <__assert_fail@plt+0xe98>
   121b4:	movw	r0, #12672	; 0x3180
   121b8:	movt	r0, #3
   121bc:	ldr	r0, [r0]
   121c0:	str	r0, [sp, #52]	; 0x34
   121c4:	b	121e4 <__assert_fail@plt+0xeb4>
   121c8:	movw	r0, #12712	; 0x31a8
   121cc:	movt	r0, #3
   121d0:	ldr	r0, [r0, #4]
   121d4:	movw	r1, #8830	; 0x227e
   121d8:	movt	r1, #2
   121dc:	bl	14684 <__assert_fail@plt+0x3354>
   121e0:	str	r0, [sp, #52]	; 0x34
   121e4:	ldr	r0, [sp, #52]	; 0x34
   121e8:	str	r0, [fp, #-44]	; 0xffffffd4
   121ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121f0:	movw	r1, #0
   121f4:	cmp	r0, r1
   121f8:	bne	12244 <__assert_fail@plt+0xf14>
   121fc:	bl	11228 <__errno_location@plt>
   12200:	ldr	r1, [r0]
   12204:	movw	r0, #12712	; 0x31a8
   12208:	movt	r0, #3
   1220c:	ldr	r2, [r0, #4]
   12210:	movw	r0, #0
   12214:	movw	lr, #3
   12218:	str	r1, [sp, #48]	; 0x30
   1221c:	mov	r1, lr
   12220:	bl	1708c <__assert_fail@plt+0x5d5c>
   12224:	movw	r1, #1
   12228:	str	r0, [sp, #44]	; 0x2c
   1222c:	mov	r0, r1
   12230:	ldr	r1, [sp, #48]	; 0x30
   12234:	movw	r2, #8946	; 0x22f2
   12238:	movt	r2, #2
   1223c:	ldr	r3, [sp, #44]	; 0x2c
   12240:	bl	11180 <error@plt>
   12244:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12248:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1224c:	cmp	r0, r1
   12250:	bne	12284 <__assert_fail@plt+0xf54>
   12254:	bl	11228 <__errno_location@plt>
   12258:	ldr	r1, [r0]
   1225c:	movw	r0, #8407	; 0x20d7
   12260:	movt	r0, #2
   12264:	str	r1, [sp, #40]	; 0x28
   12268:	bl	111ec <gettext@plt>
   1226c:	movw	r1, #1
   12270:	str	r0, [sp, #36]	; 0x24
   12274:	mov	r0, r1
   12278:	ldr	r1, [sp, #40]	; 0x28
   1227c:	ldr	r2, [sp, #36]	; 0x24
   12280:	bl	11180 <error@plt>
   12284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1228c:	bl	12824 <__assert_fail@plt+0x14f4>
   12290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12294:	bl	144e8 <__assert_fail@plt+0x31b8>
   12298:	cmp	r0, #0
   1229c:	beq	122e8 <__assert_fail@plt+0xfb8>
   122a0:	bl	11228 <__errno_location@plt>
   122a4:	ldr	r1, [r0]
   122a8:	movw	r0, #12712	; 0x31a8
   122ac:	movt	r0, #3
   122b0:	ldr	r2, [r0]
   122b4:	movw	r0, #0
   122b8:	movw	lr, #3
   122bc:	str	r1, [sp, #32]
   122c0:	mov	r1, lr
   122c4:	bl	1708c <__assert_fail@plt+0x5d5c>
   122c8:	movw	r1, #1
   122cc:	str	r0, [sp, #28]
   122d0:	mov	r0, r1
   122d4:	ldr	r1, [sp, #32]
   122d8:	movw	r2, #8946	; 0x22f2
   122dc:	movt	r2, #2
   122e0:	ldr	r3, [sp, #28]
   122e4:	bl	11180 <error@plt>
   122e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122ec:	bl	144e8 <__assert_fail@plt+0x31b8>
   122f0:	cmp	r0, #0
   122f4:	beq	12340 <__assert_fail@plt+0x1010>
   122f8:	bl	11228 <__errno_location@plt>
   122fc:	ldr	r1, [r0]
   12300:	movw	r0, #12712	; 0x31a8
   12304:	movt	r0, #3
   12308:	ldr	r2, [r0, #4]
   1230c:	movw	r0, #0
   12310:	movw	lr, #3
   12314:	str	r1, [sp, #24]
   12318:	mov	r1, lr
   1231c:	bl	1708c <__assert_fail@plt+0x5d5c>
   12320:	movw	r1, #1
   12324:	str	r0, [sp, #20]
   12328:	mov	r0, r1
   1232c:	ldr	r1, [sp, #24]
   12330:	movw	r2, #8946	; 0x22f2
   12334:	movt	r2, #2
   12338:	ldr	r3, [sp, #20]
   1233c:	bl	11180 <error@plt>
   12340:	movw	r0, #12691	; 0x3193
   12344:	movt	r0, #3
   12348:	ldrb	r0, [r0]
   1234c:	tst	r0, #1
   12350:	bne	12368 <__assert_fail@plt+0x1038>
   12354:	movw	r0, #12691	; 0x3193
   12358:	movt	r0, #3
   1235c:	ldrb	r0, [r0, #1]
   12360:	tst	r0, #1
   12364:	beq	1238c <__assert_fail@plt+0x105c>
   12368:	movw	r0, #8443	; 0x20fb
   1236c:	movt	r0, #2
   12370:	bl	111ec <gettext@plt>
   12374:	movw	lr, #1
   12378:	str	r0, [sp, #16]
   1237c:	mov	r0, lr
   12380:	movw	r1, #0
   12384:	ldr	r2, [sp, #16]
   12388:	bl	11180 <error@plt>
   1238c:	movw	r0, #0
   12390:	mov	sp, fp
   12394:	pop	{fp, pc}
   12398:	push	{fp, lr}
   1239c:	mov	fp, sp
   123a0:	sub	sp, sp, #8
   123a4:	movw	r0, #0
   123a8:	str	r0, [sp, #4]
   123ac:	ldr	r0, [sp, #4]
   123b0:	cmp	r0, #2
   123b4:	bcs	12418 <__assert_fail@plt+0x10e8>
   123b8:	ldr	r0, [sp, #4]
   123bc:	movw	r1, #12724	; 0x31b4
   123c0:	movt	r1, #3
   123c4:	add	r0, r1, r0, lsl #2
   123c8:	ldr	r0, [r0]
   123cc:	movw	r1, #0
   123d0:	cmp	r0, r1
   123d4:	beq	12404 <__assert_fail@plt+0x10d4>
   123d8:	ldr	r0, [sp, #4]
   123dc:	movw	r1, #12724	; 0x31b4
   123e0:	movt	r1, #3
   123e4:	ldr	r0, [r1, r0, lsl #2]
   123e8:	str	r1, [sp]
   123ec:	bl	13014 <__assert_fail@plt+0x1ce4>
   123f0:	ldr	r0, [sp, #4]
   123f4:	ldr	r1, [sp]
   123f8:	add	r0, r1, r0, lsl #2
   123fc:	ldr	r0, [r0]
   12400:	bl	147b0 <__assert_fail@plt+0x3480>
   12404:	b	12408 <__assert_fail@plt+0x10d8>
   12408:	ldr	r0, [sp, #4]
   1240c:	add	r0, r0, #1
   12410:	str	r0, [sp, #4]
   12414:	b	123ac <__assert_fail@plt+0x107c>
   12418:	mov	sp, fp
   1241c:	pop	{fp, pc}
   12420:	push	{fp, lr}
   12424:	mov	fp, sp
   12428:	sub	sp, sp, #24
   1242c:	str	r0, [fp, #-4]
   12430:	str	r1, [fp, #-8]
   12434:	ldr	r0, [fp, #-4]
   12438:	ldr	r0, [r0]
   1243c:	cmn	r0, #1
   12440:	beq	124a4 <__assert_fail@plt+0x1174>
   12444:	ldr	r0, [fp, #-4]
   12448:	ldr	r0, [r0]
   1244c:	ldr	r1, [fp, #-8]
   12450:	cmp	r0, r1
   12454:	beq	124a4 <__assert_fail@plt+0x1174>
   12458:	ldr	r0, [fp, #-4]
   1245c:	ldr	r0, [r0]
   12460:	add	r0, r0, #1
   12464:	str	r0, [sp, #12]
   12468:	ldr	r0, [fp, #-8]
   1246c:	add	r0, r0, #1
   12470:	str	r0, [sp, #8]
   12474:	movw	r0, #8845	; 0x228d
   12478:	movt	r0, #2
   1247c:	bl	111ec <gettext@plt>
   12480:	ldr	r3, [sp, #12]
   12484:	ldr	lr, [sp, #8]
   12488:	movw	r1, #1
   1248c:	str	r0, [sp, #4]
   12490:	mov	r0, r1
   12494:	movw	r1, #0
   12498:	ldr	r2, [sp, #4]
   1249c:	str	lr, [sp]
   124a0:	bl	11180 <error@plt>
   124a4:	ldr	r0, [fp, #-8]
   124a8:	ldr	r1, [fp, #-4]
   124ac:	str	r0, [r1]
   124b0:	mov	sp, fp
   124b4:	pop	{fp, pc}
   124b8:	push	{fp, lr}
   124bc:	mov	fp, sp
   124c0:	sub	sp, sp, #32
   124c4:	str	r0, [fp, #-4]
   124c8:	ldr	r0, [fp, #-4]
   124cc:	movw	r1, #0
   124d0:	movw	r2, #10
   124d4:	add	r3, sp, #16
   124d8:	movw	ip, #8882	; 0x22b2
   124dc:	movt	ip, #2
   124e0:	str	ip, [sp]
   124e4:	bl	1cbbc <__assert_fail@plt+0xb88c>
   124e8:	str	r0, [sp, #12]
   124ec:	ldr	r0, [sp, #12]
   124f0:	cmp	r0, #1
   124f4:	beq	12514 <__assert_fail@plt+0x11e4>
   124f8:	ldr	r0, [sp, #12]
   124fc:	cmp	r0, #0
   12500:	bne	12528 <__assert_fail@plt+0x11f8>
   12504:	ldr	r0, [sp, #20]
   12508:	cmp	r0, #0
   1250c:	beq	12528 <__assert_fail@plt+0x11f8>
   12510:	b	12514 <__assert_fail@plt+0x11e4>
   12514:	mov	r0, #0
   12518:	str	r0, [sp, #20]
   1251c:	mvn	r0, #0
   12520:	str	r0, [sp, #16]
   12524:	b	12588 <__assert_fail@plt+0x1258>
   12528:	ldr	r0, [sp, #12]
   1252c:	cmp	r0, #0
   12530:	bne	1254c <__assert_fail@plt+0x121c>
   12534:	ldr	r0, [sp, #16]
   12538:	ldr	r1, [sp, #20]
   1253c:	orr	r0, r0, r1
   12540:	cmp	r0, #0
   12544:	bne	12584 <__assert_fail@plt+0x1254>
   12548:	b	1254c <__assert_fail@plt+0x121c>
   1254c:	movw	r0, #8221	; 0x201d
   12550:	movt	r0, #2
   12554:	bl	111ec <gettext@plt>
   12558:	ldr	lr, [fp, #-4]
   1255c:	str	r0, [sp, #8]
   12560:	mov	r0, lr
   12564:	bl	172d0 <__assert_fail@plt+0x5fa0>
   12568:	movw	lr, #1
   1256c:	str	r0, [sp, #4]
   12570:	mov	r0, lr
   12574:	movw	r1, #0
   12578:	ldr	r2, [sp, #8]
   1257c:	ldr	r3, [sp, #4]
   12580:	bl	11180 <error@plt>
   12584:	b	12588 <__assert_fail@plt+0x1258>
   12588:	ldr	r0, [sp, #16]
   1258c:	sub	r0, r0, #1
   12590:	str	r0, [fp, #-8]
   12594:	ldr	r0, [fp, #-8]
   12598:	mov	sp, fp
   1259c:	pop	{fp, pc}
   125a0:	push	{fp, lr}
   125a4:	mov	fp, sp
   125a8:	sub	sp, sp, #24
   125ac:	str	r0, [fp, #-4]
   125b0:	ldr	r0, [fp, #-4]
   125b4:	str	r0, [fp, #-8]
   125b8:	ldr	r0, [fp, #-8]
   125bc:	str	r0, [sp, #4]
   125c0:	ldr	r0, [fp, #-8]
   125c4:	movw	r1, #8879	; 0x22af
   125c8:	movt	r1, #2
   125cc:	bl	112d0 <strpbrk@plt>
   125d0:	str	r0, [fp, #-8]
   125d4:	ldr	r0, [fp, #-8]
   125d8:	movw	r1, #0
   125dc:	cmp	r0, r1
   125e0:	beq	125f8 <__assert_fail@plt+0x12c8>
   125e4:	ldr	r0, [fp, #-8]
   125e8:	add	r1, r0, #1
   125ec:	str	r1, [fp, #-8]
   125f0:	movw	r1, #0
   125f4:	strb	r1, [r0]
   125f8:	ldr	r0, [sp, #4]
   125fc:	add	r1, sp, #12
   12600:	add	r2, sp, #8
   12604:	bl	13070 <__assert_fail@plt+0x1d40>
   12608:	ldr	r0, [sp, #12]
   1260c:	ldr	r1, [sp, #8]
   12610:	bl	131cc <__assert_fail@plt+0x1e9c>
   12614:	ldr	r0, [fp, #-8]
   12618:	movw	r1, #0
   1261c:	cmp	r0, r1
   12620:	bne	125b8 <__assert_fail@plt+0x1288>
   12624:	mov	sp, fp
   12628:	pop	{fp, pc}
   1262c:	push	{r4, sl, fp, lr}
   12630:	add	fp, sp, #8
   12634:	sub	sp, sp, #64	; 0x40
   12638:	ldr	ip, [fp, #16]
   1263c:	ldr	lr, [fp, #12]
   12640:	ldr	r4, [fp, #8]
   12644:	str	r0, [fp, #-12]
   12648:	str	r1, [fp, #-16]
   1264c:	str	r2, [fp, #-20]	; 0xffffffec
   12650:	str	r3, [fp, #-24]	; 0xffffffe8
   12654:	ldr	r0, [fp, #8]
   12658:	ldr	r0, [r0]
   1265c:	str	r0, [fp, #-28]	; 0xffffffe4
   12660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12664:	cmp	r0, #2
   12668:	str	r4, [sp, #32]
   1266c:	str	lr, [sp, #28]
   12670:	str	ip, [sp, #24]
   12674:	bne	127c8 <__assert_fail@plt+0x1498>
   12678:	ldr	r0, [fp, #-20]	; 0xffffffec
   1267c:	ldr	r0, [r0]
   12680:	clz	r0, r0
   12684:	lsr	r0, r0, #5
   12688:	strb	r0, [fp, #-29]	; 0xffffffe3
   1268c:	ldr	r0, [fp, #-16]
   12690:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   12694:	and	r1, r1, #1
   12698:	ldr	r0, [r0, r1, lsl #2]
   1269c:	str	r0, [sp, #36]	; 0x24
   126a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   126a4:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   126a8:	and	r1, r1, #1
   126ac:	ldr	r0, [r0, r1, lsl #2]
   126b0:	cmp	r0, #3
   126b4:	str	r0, [sp, #20]
   126b8:	bhi	12794 <__assert_fail@plt+0x1464>
   126bc:	add	r0, pc, #8
   126c0:	ldr	r1, [sp, #20]
   126c4:	ldr	r0, [r0, r1, lsl #2]
   126c8:	mov	pc, r0
   126cc:	ldrdeq	r2, [r1], -ip
   126d0:	andeq	r2, r1, ip, lsl r7
   126d4:	andeq	r2, r1, r4, asr r7
   126d8:	andeq	r2, r1, ip, lsl #15
   126dc:	movw	r0, #9048	; 0x2358
   126e0:	movt	r0, #2
   126e4:	bl	111ec <gettext@plt>
   126e8:	ldr	r1, [fp, #-12]
   126ec:	movw	lr, #4
   126f0:	str	r0, [sp, #16]
   126f4:	mov	r0, lr
   126f8:	bl	16f38 <__assert_fail@plt+0x5c08>
   126fc:	movw	r1, #0
   12700:	str	r0, [sp, #12]
   12704:	mov	r0, r1
   12708:	ldr	r2, [sp, #16]
   1270c:	ldr	r3, [sp, #12]
   12710:	bl	11180 <error@plt>
   12714:	movw	r0, #1
   12718:	bl	1142c <__assert_fail@plt+0xfc>
   1271c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12720:	ldr	r1, [r0]
   12724:	mvn	r2, #0
   12728:	add	r1, r1, r2
   1272c:	str	r1, [r0]
   12730:	ldr	r0, [sp, #36]	; 0x24
   12734:	bl	124b8 <__assert_fail@plt+0x1188>
   12738:	movw	r1, #12552	; 0x3108
   1273c:	movt	r1, #3
   12740:	str	r0, [sp, #8]
   12744:	mov	r0, r1
   12748:	ldr	r1, [sp, #8]
   1274c:	bl	12420 <__assert_fail@plt+0x10f0>
   12750:	b	12794 <__assert_fail@plt+0x1464>
   12754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12758:	ldr	r1, [r0, #4]
   1275c:	mvn	r2, #0
   12760:	add	r1, r1, r2
   12764:	str	r1, [r0, #4]
   12768:	ldr	r0, [sp, #36]	; 0x24
   1276c:	bl	124b8 <__assert_fail@plt+0x1188>
   12770:	movw	r1, #12556	; 0x310c
   12774:	movt	r1, #3
   12778:	str	r0, [sp, #4]
   1277c:	mov	r0, r1
   12780:	ldr	r1, [sp, #4]
   12784:	bl	12420 <__assert_fail@plt+0x10f0>
   12788:	b	12794 <__assert_fail@plt+0x1464>
   1278c:	ldr	r0, [sp, #36]	; 0x24
   12790:	bl	125a0 <__assert_fail@plt+0x1270>
   12794:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   12798:	tst	r0, #1
   1279c:	bne	127c0 <__assert_fail@plt+0x1490>
   127a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   127a4:	ldr	r0, [r0, #4]
   127a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   127ac:	str	r0, [r1]
   127b0:	ldr	r0, [fp, #-16]
   127b4:	ldr	r0, [r0, #4]
   127b8:	ldr	r1, [fp, #-16]
   127bc:	str	r0, [r1]
   127c0:	movw	r0, #1
   127c4:	str	r0, [fp, #-28]	; 0xffffffe4
   127c8:	ldr	r0, [fp, #12]
   127cc:	ldr	r0, [r0]
   127d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   127d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   127d8:	str	r0, [r1, r2, lsl #2]
   127dc:	ldr	r0, [fp, #-12]
   127e0:	ldr	r1, [fp, #-16]
   127e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   127e8:	add	r1, r1, r2, lsl #2
   127ec:	str	r0, [r1]
   127f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   127f4:	add	r0, r0, #1
   127f8:	ldr	r1, [fp, #8]
   127fc:	str	r0, [r1]
   12800:	ldr	r0, [fp, #12]
   12804:	ldr	r0, [r0]
   12808:	cmp	r0, #3
   1280c:	bne	1281c <__assert_fail@plt+0x14ec>
   12810:	ldr	r0, [fp, #16]
   12814:	movw	r1, #3
   12818:	str	r1, [r0]
   1281c:	sub	sp, fp, #8
   12820:	pop	{r4, sl, fp, pc}
   12824:	push	{fp, lr}
   12828:	mov	fp, sp
   1282c:	sub	sp, sp, #120	; 0x78
   12830:	str	r0, [fp, #-4]
   12834:	str	r1, [fp, #-8]
   12838:	ldr	r0, [fp, #-4]
   1283c:	movw	r1, #2
   12840:	bl	14490 <__assert_fail@plt+0x3160>
   12844:	ldr	r0, [fp, #-8]
   12848:	movw	r1, #2
   1284c:	bl	14490 <__assert_fail@plt+0x3160>
   12850:	sub	r0, fp, #20
   12854:	bl	132b8 <__assert_fail@plt+0x1f88>
   12858:	ldr	r0, [fp, #-4]
   1285c:	sub	r1, fp, #20
   12860:	movw	r2, #1
   12864:	bl	132e4 <__assert_fail@plt+0x1fb4>
   12868:	sub	r1, fp, #32
   1286c:	str	r0, [sp, #44]	; 0x2c
   12870:	mov	r0, r1
   12874:	bl	132b8 <__assert_fail@plt+0x1f88>
   12878:	ldr	r0, [fp, #-8]
   1287c:	sub	r1, fp, #32
   12880:	movw	r2, #2
   12884:	bl	132e4 <__assert_fail@plt+0x1fb4>
   12888:	movw	r1, #12709	; 0x31a5
   1288c:	movt	r1, #3
   12890:	ldrb	r1, [r1]
   12894:	tst	r1, #1
   12898:	str	r0, [sp, #40]	; 0x28
   1289c:	beq	12918 <__assert_fail@plt+0x15e8>
   128a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   128a4:	cmp	r0, #0
   128a8:	beq	128c0 <__assert_fail@plt+0x1590>
   128ac:	ldr	r0, [fp, #-12]
   128b0:	ldr	r0, [r0]
   128b4:	ldr	r0, [r0, #12]
   128b8:	str	r0, [sp, #36]	; 0x24
   128bc:	b	128cc <__assert_fail@plt+0x159c>
   128c0:	movw	r0, #0
   128c4:	str	r0, [sp, #36]	; 0x24
   128c8:	b	128cc <__assert_fail@plt+0x159c>
   128cc:	ldr	r0, [sp, #36]	; 0x24
   128d0:	movw	r1, #12744	; 0x31c8
   128d4:	movt	r1, #3
   128d8:	str	r0, [r1]
   128dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128e0:	cmp	r0, #0
   128e4:	beq	128fc <__assert_fail@plt+0x15cc>
   128e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128ec:	ldr	r0, [r0]
   128f0:	ldr	r0, [r0, #12]
   128f4:	str	r0, [sp, #32]
   128f8:	b	12908 <__assert_fail@plt+0x15d8>
   128fc:	movw	r0, #0
   12900:	str	r0, [sp, #32]
   12904:	b	12908 <__assert_fail@plt+0x15d8>
   12908:	ldr	r0, [sp, #32]
   1290c:	movw	r1, #12748	; 0x31cc
   12910:	movt	r1, #3
   12914:	str	r0, [r1]
   12918:	movw	r0, #12720	; 0x31b0
   1291c:	movt	r0, #3
   12920:	ldrb	r0, [r0]
   12924:	tst	r0, #1
   12928:	beq	12a20 <__assert_fail@plt+0x16f0>
   1292c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12930:	cmp	r0, #0
   12934:	bne	12944 <__assert_fail@plt+0x1614>
   12938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1293c:	cmp	r0, #0
   12940:	beq	12a20 <__assert_fail@plt+0x16f0>
   12944:	ldr	r0, [fp, #-20]	; 0xffffffec
   12948:	cmp	r0, #0
   1294c:	beq	12960 <__assert_fail@plt+0x1630>
   12950:	ldr	r0, [fp, #-12]
   12954:	ldr	r0, [r0]
   12958:	str	r0, [sp, #28]
   1295c:	b	12970 <__assert_fail@plt+0x1640>
   12960:	movw	r0, #12752	; 0x31d0
   12964:	movt	r0, #3
   12968:	str	r0, [sp, #28]
   1296c:	b	12970 <__assert_fail@plt+0x1640>
   12970:	ldr	r0, [sp, #28]
   12974:	str	r0, [fp, #-44]	; 0xffffffd4
   12978:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1297c:	cmp	r0, #0
   12980:	beq	12994 <__assert_fail@plt+0x1664>
   12984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12988:	ldr	r0, [r0]
   1298c:	str	r0, [sp, #24]
   12990:	b	129a4 <__assert_fail@plt+0x1674>
   12994:	movw	r0, #12752	; 0x31d0
   12998:	movt	r0, #3
   1299c:	str	r0, [sp, #24]
   129a0:	b	129a4 <__assert_fail@plt+0x1674>
   129a4:	ldr	r0, [sp, #24]
   129a8:	str	r0, [fp, #-48]	; 0xffffffd0
   129ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   129b4:	bl	133e0 <__assert_fail@plt+0x20b0>
   129b8:	movw	r0, #12776	; 0x31e8
   129bc:	movt	r0, #3
   129c0:	movw	r1, #0
   129c4:	str	r1, [r0]
   129c8:	str	r1, [r0, #4]
   129cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   129d0:	cmp	r0, #0
   129d4:	beq	129f4 <__assert_fail@plt+0x16c4>
   129d8:	ldr	r0, [fp, #-4]
   129dc:	sub	r1, fp, #20
   129e0:	movw	r2, #1
   129e4:	and	r2, r2, #1
   129e8:	movw	r3, #1
   129ec:	bl	135ec <__assert_fail@plt+0x22bc>
   129f0:	str	r0, [sp, #20]
   129f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129f8:	cmp	r0, #0
   129fc:	beq	12a1c <__assert_fail@plt+0x16ec>
   12a00:	ldr	r0, [fp, #-8]
   12a04:	sub	r1, fp, #32
   12a08:	movw	r2, #1
   12a0c:	and	r2, r2, #1
   12a10:	movw	r3, #2
   12a14:	bl	135ec <__assert_fail@plt+0x22bc>
   12a18:	str	r0, [sp, #16]
   12a1c:	b	12a20 <__assert_fail@plt+0x16f0>
   12a20:	b	12a24 <__assert_fail@plt+0x16f4>
   12a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a28:	cmp	r0, #0
   12a2c:	movw	r0, #0
   12a30:	str	r0, [sp, #12]
   12a34:	beq	12a4c <__assert_fail@plt+0x171c>
   12a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a3c:	cmp	r0, #0
   12a40:	movw	r0, #0
   12a44:	movne	r0, #1
   12a48:	str	r0, [sp, #12]
   12a4c:	ldr	r0, [sp, #12]
   12a50:	tst	r0, #1
   12a54:	beq	12dd0 <__assert_fail@plt+0x1aa0>
   12a58:	ldr	r0, [fp, #-12]
   12a5c:	ldr	r0, [r0]
   12a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12a64:	ldr	r1, [r1]
   12a68:	movw	r2, #12552	; 0x3108
   12a6c:	movt	r2, #3
   12a70:	ldr	r2, [r2]
   12a74:	movw	r3, #12556	; 0x310c
   12a78:	movt	r3, #3
   12a7c:	ldr	r3, [r3]
   12a80:	bl	13640 <__assert_fail@plt+0x2310>
   12a84:	str	r0, [fp, #-36]	; 0xffffffdc
   12a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a8c:	cmp	r0, #0
   12a90:	bge	12aec <__assert_fail@plt+0x17bc>
   12a94:	movw	r0, #12700	; 0x319c
   12a98:	movt	r0, #3
   12a9c:	ldrb	r0, [r0]
   12aa0:	tst	r0, #1
   12aa4:	beq	12abc <__assert_fail@plt+0x178c>
   12aa8:	ldr	r0, [fp, #-12]
   12aac:	ldr	r0, [r0]
   12ab0:	movw	r1, #12752	; 0x31d0
   12ab4:	movt	r1, #3
   12ab8:	bl	133e0 <__assert_fail@plt+0x20b0>
   12abc:	ldr	r0, [fp, #-4]
   12ac0:	sub	r1, fp, #20
   12ac4:	movw	r2, #1
   12ac8:	and	r2, r2, #1
   12acc:	movw	r3, #1
   12ad0:	bl	135ec <__assert_fail@plt+0x22bc>
   12ad4:	movw	r1, #12690	; 0x3192
   12ad8:	movt	r1, #3
   12adc:	movw	r2, #1
   12ae0:	strb	r2, [r1]
   12ae4:	str	r0, [sp, #8]
   12ae8:	b	12a24 <__assert_fail@plt+0x16f4>
   12aec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12af0:	cmp	r0, #0
   12af4:	ble	12b50 <__assert_fail@plt+0x1820>
   12af8:	movw	r0, #12701	; 0x319d
   12afc:	movt	r0, #3
   12b00:	ldrb	r0, [r0]
   12b04:	tst	r0, #1
   12b08:	beq	12b20 <__assert_fail@plt+0x17f0>
   12b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b10:	ldr	r1, [r0]
   12b14:	movw	r0, #12752	; 0x31d0
   12b18:	movt	r0, #3
   12b1c:	bl	133e0 <__assert_fail@plt+0x20b0>
   12b20:	ldr	r0, [fp, #-8]
   12b24:	sub	r1, fp, #32
   12b28:	movw	r2, #1
   12b2c:	and	r2, r2, #1
   12b30:	movw	r3, #2
   12b34:	bl	135ec <__assert_fail@plt+0x22bc>
   12b38:	movw	r1, #12690	; 0x3192
   12b3c:	movt	r1, #3
   12b40:	movw	r2, #1
   12b44:	strb	r2, [r1]
   12b48:	str	r0, [sp, #4]
   12b4c:	b	12a24 <__assert_fail@plt+0x16f4>
   12b50:	movw	r0, #0
   12b54:	strb	r0, [fp, #-37]	; 0xffffffdb
   12b58:	ldr	r0, [fp, #-4]
   12b5c:	sub	r1, fp, #20
   12b60:	movw	r2, #0
   12b64:	and	r2, r2, #1
   12b68:	movw	r3, #1
   12b6c:	bl	135ec <__assert_fail@plt+0x22bc>
   12b70:	tst	r0, #1
   12b74:	bne	12b90 <__assert_fail@plt+0x1860>
   12b78:	movw	r0, #1
   12b7c:	strb	r0, [fp, #-37]	; 0xffffffdb
   12b80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b84:	add	r0, r0, #1
   12b88:	str	r0, [fp, #-20]	; 0xffffffec
   12b8c:	b	12be8 <__assert_fail@plt+0x18b8>
   12b90:	b	12b94 <__assert_fail@plt+0x1864>
   12b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b98:	ldr	r1, [fp, #-12]
   12b9c:	sub	r0, r0, #1
   12ba0:	add	r0, r1, r0, lsl #2
   12ba4:	ldr	r0, [r0]
   12ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12bac:	ldr	r1, [r1]
   12bb0:	movw	r2, #12552	; 0x3108
   12bb4:	movt	r2, #3
   12bb8:	ldr	r2, [r2]
   12bbc:	movw	r3, #12556	; 0x310c
   12bc0:	movt	r3, #3
   12bc4:	ldr	r3, [r3]
   12bc8:	bl	13640 <__assert_fail@plt+0x2310>
   12bcc:	cmp	r0, #0
   12bd0:	movw	r0, #0
   12bd4:	movne	r0, #1
   12bd8:	mvn	r1, #0
   12bdc:	eor	r0, r0, r1
   12be0:	tst	r0, #1
   12be4:	bne	12b58 <__assert_fail@plt+0x1828>
   12be8:	movw	r0, #0
   12bec:	strb	r0, [fp, #-38]	; 0xffffffda
   12bf0:	ldr	r0, [fp, #-8]
   12bf4:	sub	r1, fp, #32
   12bf8:	movw	r2, #0
   12bfc:	and	r2, r2, #1
   12c00:	movw	r3, #2
   12c04:	bl	135ec <__assert_fail@plt+0x22bc>
   12c08:	tst	r0, #1
   12c0c:	bne	12c28 <__assert_fail@plt+0x18f8>
   12c10:	movw	r0, #1
   12c14:	strb	r0, [fp, #-38]	; 0xffffffda
   12c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c1c:	add	r0, r0, #1
   12c20:	str	r0, [fp, #-32]	; 0xffffffe0
   12c24:	b	12c80 <__assert_fail@plt+0x1950>
   12c28:	b	12c2c <__assert_fail@plt+0x18fc>
   12c2c:	ldr	r0, [fp, #-12]
   12c30:	ldr	r0, [r0]
   12c34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12c38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12c3c:	sub	r1, r1, #1
   12c40:	add	r1, r2, r1, lsl #2
   12c44:	ldr	r1, [r1]
   12c48:	movw	r2, #12552	; 0x3108
   12c4c:	movt	r2, #3
   12c50:	ldr	r2, [r2]
   12c54:	movw	r3, #12556	; 0x310c
   12c58:	movt	r3, #3
   12c5c:	ldr	r3, [r3]
   12c60:	bl	13640 <__assert_fail@plt+0x2310>
   12c64:	cmp	r0, #0
   12c68:	movw	r0, #0
   12c6c:	movne	r0, #1
   12c70:	mvn	r1, #0
   12c74:	eor	r0, r0, r1
   12c78:	tst	r0, #1
   12c7c:	bne	12bf0 <__assert_fail@plt+0x18c0>
   12c80:	movw	r0, #12689	; 0x3191
   12c84:	movt	r0, #3
   12c88:	ldrb	r0, [r0]
   12c8c:	tst	r0, #1
   12c90:	beq	12d14 <__assert_fail@plt+0x19e4>
   12c94:	movw	r0, #0
   12c98:	str	r0, [fp, #-52]	; 0xffffffcc
   12c9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ca4:	sub	r1, r1, #1
   12ca8:	cmp	r0, r1
   12cac:	bcs	12d10 <__assert_fail@plt+0x19e0>
   12cb0:	movw	r0, #0
   12cb4:	str	r0, [fp, #-56]	; 0xffffffc8
   12cb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12cc0:	sub	r1, r1, #1
   12cc4:	cmp	r0, r1
   12cc8:	bcs	12cfc <__assert_fail@plt+0x19cc>
   12ccc:	ldr	r0, [fp, #-12]
   12cd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12cd4:	ldr	r0, [r0, r1, lsl #2]
   12cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12cdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ce0:	add	r1, r1, r2, lsl #2
   12ce4:	ldr	r1, [r1]
   12ce8:	bl	133e0 <__assert_fail@plt+0x20b0>
   12cec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cf0:	add	r0, r0, #1
   12cf4:	str	r0, [fp, #-56]	; 0xffffffc8
   12cf8:	b	12cb8 <__assert_fail@plt+0x1988>
   12cfc:	b	12d00 <__assert_fail@plt+0x19d0>
   12d00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12d04:	add	r0, r0, #1
   12d08:	str	r0, [fp, #-52]	; 0xffffffcc
   12d0c:	b	12c9c <__assert_fail@plt+0x196c>
   12d10:	b	12d14 <__assert_fail@plt+0x19e4>
   12d14:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   12d18:	tst	r0, #1
   12d1c:	bne	12d68 <__assert_fail@plt+0x1a38>
   12d20:	b	12d24 <__assert_fail@plt+0x19f4>
   12d24:	ldr	r0, [fp, #-12]
   12d28:	ldr	r0, [r0]
   12d2c:	str	r0, [sp, #60]	; 0x3c
   12d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d34:	ldr	r1, [fp, #-12]
   12d38:	add	r0, r1, r0, lsl #2
   12d3c:	ldr	r0, [r0, #-4]
   12d40:	str	r0, [r1]
   12d44:	ldr	r0, [sp, #60]	; 0x3c
   12d48:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d4c:	ldr	r2, [fp, #-12]
   12d50:	sub	r1, r1, #1
   12d54:	add	r1, r2, r1, lsl #2
   12d58:	str	r0, [r1]
   12d5c:	movw	r0, #1
   12d60:	str	r0, [fp, #-20]	; 0xffffffec
   12d64:	b	12d70 <__assert_fail@plt+0x1a40>
   12d68:	movw	r0, #0
   12d6c:	str	r0, [fp, #-20]	; 0xffffffec
   12d70:	ldrb	r0, [fp, #-38]	; 0xffffffda
   12d74:	tst	r0, #1
   12d78:	bne	12dc4 <__assert_fail@plt+0x1a94>
   12d7c:	b	12d80 <__assert_fail@plt+0x1a50>
   12d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d84:	ldr	r0, [r0]
   12d88:	str	r0, [sp, #56]	; 0x38
   12d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d94:	add	r0, r1, r0, lsl #2
   12d98:	ldr	r0, [r0, #-4]
   12d9c:	str	r0, [r1]
   12da0:	ldr	r0, [sp, #56]	; 0x38
   12da4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dac:	sub	r1, r1, #1
   12db0:	add	r1, r2, r1, lsl #2
   12db4:	str	r0, [r1]
   12db8:	movw	r0, #1
   12dbc:	str	r0, [fp, #-32]	; 0xffffffe0
   12dc0:	b	12dcc <__assert_fail@plt+0x1a9c>
   12dc4:	movw	r0, #0
   12dc8:	str	r0, [fp, #-32]	; 0xffffffe0
   12dcc:	b	12a24 <__assert_fail@plt+0x16f4>
   12dd0:	movw	r0, #0
   12dd4:	str	r0, [sp, #52]	; 0x34
   12dd8:	movw	r0, #0
   12ddc:	strb	r0, [sp, #51]	; 0x33
   12de0:	movw	r0, #12696	; 0x3198
   12de4:	movt	r0, #3
   12de8:	ldr	r0, [r0]
   12dec:	cmp	r0, #2
   12df0:	beq	12e24 <__assert_fail@plt+0x1af4>
   12df4:	movw	r0, #12691	; 0x3193
   12df8:	movt	r0, #3
   12dfc:	ldrb	r0, [r0]
   12e00:	tst	r0, #1
   12e04:	beq	12e1c <__assert_fail@plt+0x1aec>
   12e08:	movw	r0, #12691	; 0x3193
   12e0c:	movt	r0, #3
   12e10:	ldrb	r0, [r0, #1]
   12e14:	tst	r0, #1
   12e18:	bne	12e24 <__assert_fail@plt+0x1af4>
   12e1c:	movw	r0, #1
   12e20:	strb	r0, [sp, #51]	; 0x33
   12e24:	movw	r0, #12700	; 0x319c
   12e28:	movt	r0, #3
   12e2c:	ldrb	r0, [r0]
   12e30:	tst	r0, #1
   12e34:	bne	12e44 <__assert_fail@plt+0x1b14>
   12e38:	ldrb	r0, [sp, #51]	; 0x33
   12e3c:	tst	r0, #1
   12e40:	beq	12f08 <__assert_fail@plt+0x1bd8>
   12e44:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e48:	cmp	r0, #0
   12e4c:	beq	12f08 <__assert_fail@plt+0x1bd8>
   12e50:	movw	r0, #12700	; 0x319c
   12e54:	movt	r0, #3
   12e58:	ldrb	r0, [r0]
   12e5c:	tst	r0, #1
   12e60:	beq	12e78 <__assert_fail@plt+0x1b48>
   12e64:	ldr	r0, [fp, #-12]
   12e68:	ldr	r0, [r0]
   12e6c:	movw	r1, #12752	; 0x31d0
   12e70:	movt	r1, #3
   12e74:	bl	133e0 <__assert_fail@plt+0x20b0>
   12e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e7c:	cmp	r0, #0
   12e80:	beq	12e94 <__assert_fail@plt+0x1b64>
   12e84:	movw	r0, #12690	; 0x3192
   12e88:	movt	r0, #3
   12e8c:	movw	r1, #1
   12e90:	strb	r1, [r0]
   12e94:	b	12e98 <__assert_fail@plt+0x1b68>
   12e98:	ldr	r0, [fp, #-4]
   12e9c:	add	r1, sp, #52	; 0x34
   12ea0:	movw	r2, #1
   12ea4:	bl	13898 <__assert_fail@plt+0x2568>
   12ea8:	tst	r0, #1
   12eac:	beq	12f04 <__assert_fail@plt+0x1bd4>
   12eb0:	movw	r0, #12700	; 0x319c
   12eb4:	movt	r0, #3
   12eb8:	ldrb	r0, [r0]
   12ebc:	tst	r0, #1
   12ec0:	beq	12ed4 <__assert_fail@plt+0x1ba4>
   12ec4:	ldr	r0, [sp, #52]	; 0x34
   12ec8:	movw	r1, #12752	; 0x31d0
   12ecc:	movt	r1, #3
   12ed0:	bl	133e0 <__assert_fail@plt+0x20b0>
   12ed4:	movw	r0, #12691	; 0x3193
   12ed8:	movt	r0, #3
   12edc:	ldrb	r0, [r0]
   12ee0:	tst	r0, #1
   12ee4:	beq	12f00 <__assert_fail@plt+0x1bd0>
   12ee8:	movw	r0, #12700	; 0x319c
   12eec:	movt	r0, #3
   12ef0:	ldrb	r0, [r0]
   12ef4:	tst	r0, #1
   12ef8:	bne	12f00 <__assert_fail@plt+0x1bd0>
   12efc:	b	12f04 <__assert_fail@plt+0x1bd4>
   12f00:	b	12e98 <__assert_fail@plt+0x1b68>
   12f04:	b	12f08 <__assert_fail@plt+0x1bd8>
   12f08:	movw	r0, #12701	; 0x319d
   12f0c:	movt	r0, #3
   12f10:	ldrb	r0, [r0]
   12f14:	tst	r0, #1
   12f18:	bne	12f28 <__assert_fail@plt+0x1bf8>
   12f1c:	ldrb	r0, [sp, #51]	; 0x33
   12f20:	tst	r0, #1
   12f24:	beq	12fec <__assert_fail@plt+0x1cbc>
   12f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f2c:	cmp	r0, #0
   12f30:	beq	12fec <__assert_fail@plt+0x1cbc>
   12f34:	movw	r0, #12701	; 0x319d
   12f38:	movt	r0, #3
   12f3c:	ldrb	r0, [r0]
   12f40:	tst	r0, #1
   12f44:	beq	12f5c <__assert_fail@plt+0x1c2c>
   12f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f4c:	ldr	r1, [r0]
   12f50:	movw	r0, #12752	; 0x31d0
   12f54:	movt	r0, #3
   12f58:	bl	133e0 <__assert_fail@plt+0x20b0>
   12f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f60:	cmp	r0, #0
   12f64:	beq	12f78 <__assert_fail@plt+0x1c48>
   12f68:	movw	r0, #12690	; 0x3192
   12f6c:	movt	r0, #3
   12f70:	movw	r1, #1
   12f74:	strb	r1, [r0]
   12f78:	b	12f7c <__assert_fail@plt+0x1c4c>
   12f7c:	ldr	r0, [fp, #-8]
   12f80:	add	r1, sp, #52	; 0x34
   12f84:	movw	r2, #2
   12f88:	bl	13898 <__assert_fail@plt+0x2568>
   12f8c:	tst	r0, #1
   12f90:	beq	12fe8 <__assert_fail@plt+0x1cb8>
   12f94:	movw	r0, #12701	; 0x319d
   12f98:	movt	r0, #3
   12f9c:	ldrb	r0, [r0]
   12fa0:	tst	r0, #1
   12fa4:	beq	12fb8 <__assert_fail@plt+0x1c88>
   12fa8:	ldr	r1, [sp, #52]	; 0x34
   12fac:	movw	r0, #12752	; 0x31d0
   12fb0:	movt	r0, #3
   12fb4:	bl	133e0 <__assert_fail@plt+0x20b0>
   12fb8:	movw	r0, #12691	; 0x3193
   12fbc:	movt	r0, #3
   12fc0:	ldrb	r0, [r0, #1]
   12fc4:	tst	r0, #1
   12fc8:	beq	12fe4 <__assert_fail@plt+0x1cb4>
   12fcc:	movw	r0, #12701	; 0x319d
   12fd0:	movt	r0, #3
   12fd4:	ldrb	r0, [r0]
   12fd8:	tst	r0, #1
   12fdc:	bne	12fe4 <__assert_fail@plt+0x1cb4>
   12fe0:	b	12fe8 <__assert_fail@plt+0x1cb8>
   12fe4:	b	12f7c <__assert_fail@plt+0x1c4c>
   12fe8:	b	12fec <__assert_fail@plt+0x1cbc>
   12fec:	ldr	r0, [sp, #52]	; 0x34
   12ff0:	bl	13014 <__assert_fail@plt+0x1ce4>
   12ff4:	ldr	r0, [sp, #52]	; 0x34
   12ff8:	bl	147b0 <__assert_fail@plt+0x3480>
   12ffc:	sub	r0, fp, #20
   13000:	bl	13a78 <__assert_fail@plt+0x2748>
   13004:	sub	r0, fp, #32
   13008:	bl	13a78 <__assert_fail@plt+0x2748>
   1300c:	mov	sp, fp
   13010:	pop	{fp, pc}
   13014:	push	{fp, lr}
   13018:	mov	fp, sp
   1301c:	sub	sp, sp, #8
   13020:	str	r0, [sp, #4]
   13024:	ldr	r0, [sp, #4]
   13028:	movw	r1, #0
   1302c:	cmp	r0, r1
   13030:	bne	13038 <__assert_fail@plt+0x1d08>
   13034:	b	13068 <__assert_fail@plt+0x1d38>
   13038:	ldr	r0, [sp, #4]
   1303c:	ldr	r0, [r0, #20]
   13040:	bl	147b0 <__assert_fail@plt+0x3480>
   13044:	ldr	r0, [sp, #4]
   13048:	movw	lr, #0
   1304c:	str	lr, [r0, #20]
   13050:	ldr	r0, [sp, #4]
   13054:	ldr	r0, [r0, #8]
   13058:	bl	147b0 <__assert_fail@plt+0x3480>
   1305c:	ldr	r0, [sp, #4]
   13060:	movw	lr, #0
   13064:	str	lr, [r0, #8]
   13068:	mov	sp, fp
   1306c:	pop	{fp, pc}
   13070:	push	{fp, lr}
   13074:	mov	fp, sp
   13078:	sub	sp, sp, #40	; 0x28
   1307c:	str	r0, [fp, #-4]
   13080:	str	r1, [fp, #-8]
   13084:	str	r2, [fp, #-12]
   13088:	ldr	r0, [fp, #-4]
   1308c:	ldrb	r0, [r0]
   13090:	mov	r1, r0
   13094:	cmp	r0, #48	; 0x30
   13098:	str	r1, [fp, #-16]
   1309c:	beq	130b8 <__assert_fail@plt+0x1d88>
   130a0:	b	130a4 <__assert_fail@plt+0x1d74>
   130a4:	ldr	r0, [fp, #-16]
   130a8:	sub	r1, r0, #49	; 0x31
   130ac:	cmp	r1, #2
   130b0:	bcc	13118 <__assert_fail@plt+0x1de8>
   130b4:	b	1318c <__assert_fail@plt+0x1e5c>
   130b8:	ldr	r0, [fp, #-4]
   130bc:	ldrsb	r0, [r0, #1]
   130c0:	cmp	r0, #0
   130c4:	beq	13100 <__assert_fail@plt+0x1dd0>
   130c8:	movw	r0, #8883	; 0x22b3
   130cc:	movt	r0, #2
   130d0:	bl	111ec <gettext@plt>
   130d4:	ldr	lr, [fp, #-4]
   130d8:	str	r0, [sp, #20]
   130dc:	mov	r0, lr
   130e0:	bl	172d0 <__assert_fail@plt+0x5fa0>
   130e4:	movw	lr, #1
   130e8:	str	r0, [sp, #16]
   130ec:	mov	r0, lr
   130f0:	movw	r1, #0
   130f4:	ldr	r2, [sp, #20]
   130f8:	ldr	r3, [sp, #16]
   130fc:	bl	11180 <error@plt>
   13100:	ldr	r0, [fp, #-8]
   13104:	movw	r1, #0
   13108:	str	r1, [r0]
   1310c:	ldr	r0, [fp, #-12]
   13110:	str	r1, [r0]
   13114:	b	131c4 <__assert_fail@plt+0x1e94>
   13118:	ldr	r0, [fp, #-4]
   1311c:	ldrb	r0, [r0, #1]
   13120:	cmp	r0, #46	; 0x2e
   13124:	beq	13160 <__assert_fail@plt+0x1e30>
   13128:	movw	r0, #8883	; 0x22b3
   1312c:	movt	r0, #2
   13130:	bl	111ec <gettext@plt>
   13134:	ldr	lr, [fp, #-4]
   13138:	str	r0, [sp, #12]
   1313c:	mov	r0, lr
   13140:	bl	172d0 <__assert_fail@plt+0x5fa0>
   13144:	movw	lr, #1
   13148:	str	r0, [sp, #8]
   1314c:	mov	r0, lr
   13150:	movw	r1, #0
   13154:	ldr	r2, [sp, #12]
   13158:	ldr	r3, [sp, #8]
   1315c:	bl	11180 <error@plt>
   13160:	ldr	r0, [fp, #-4]
   13164:	ldrb	r0, [r0]
   13168:	sub	r0, r0, #48	; 0x30
   1316c:	ldr	r1, [fp, #-8]
   13170:	str	r0, [r1]
   13174:	ldr	r0, [fp, #-4]
   13178:	add	r0, r0, #2
   1317c:	bl	124b8 <__assert_fail@plt+0x1188>
   13180:	ldr	r1, [fp, #-12]
   13184:	str	r0, [r1]
   13188:	b	131c4 <__assert_fail@plt+0x1e94>
   1318c:	movw	r0, #8911	; 0x22cf
   13190:	movt	r0, #2
   13194:	bl	111ec <gettext@plt>
   13198:	ldr	lr, [fp, #-4]
   1319c:	str	r0, [sp, #4]
   131a0:	mov	r0, lr
   131a4:	bl	172d0 <__assert_fail@plt+0x5fa0>
   131a8:	movw	lr, #1
   131ac:	str	r0, [sp]
   131b0:	mov	r0, lr
   131b4:	movw	r1, #0
   131b8:	ldr	r2, [sp, #4]
   131bc:	ldr	r3, [sp]
   131c0:	bl	11180 <error@plt>
   131c4:	mov	sp, fp
   131c8:	pop	{fp, pc}
   131cc:	push	{fp, lr}
   131d0:	mov	fp, sp
   131d4:	sub	sp, sp, #16
   131d8:	str	r0, [fp, #-4]
   131dc:	str	r1, [sp, #8]
   131e0:	ldr	r0, [fp, #-4]
   131e4:	cmp	r0, #0
   131e8:	beq	13204 <__assert_fail@plt+0x1ed4>
   131ec:	ldr	r0, [fp, #-4]
   131f0:	cmp	r0, #1
   131f4:	beq	13204 <__assert_fail@plt+0x1ed4>
   131f8:	ldr	r0, [fp, #-4]
   131fc:	cmp	r0, #2
   13200:	bne	13208 <__assert_fail@plt+0x1ed8>
   13204:	b	13228 <__assert_fail@plt+0x1ef8>
   13208:	movw	r0, #8949	; 0x22f5
   1320c:	movt	r0, #2
   13210:	movw	r1, #8985	; 0x2319
   13214:	movt	r1, #2
   13218:	movw	r2, #819	; 0x333
   1321c:	movw	r3, #8996	; 0x2324
   13220:	movt	r3, #2
   13224:	bl	11330 <__assert_fail@plt>
   13228:	ldr	r0, [fp, #-4]
   1322c:	cmp	r0, #0
   13230:	bne	13240 <__assert_fail@plt+0x1f10>
   13234:	ldr	r0, [sp, #8]
   13238:	cmp	r0, #0
   1323c:	bne	13244 <__assert_fail@plt+0x1f14>
   13240:	b	13264 <__assert_fail@plt+0x1f34>
   13244:	movw	r0, #9024	; 0x2340
   13248:	movt	r0, #2
   1324c:	movw	r1, #8985	; 0x2319
   13250:	movt	r1, #2
   13254:	movw	r2, #820	; 0x334
   13258:	movw	r3, #8996	; 0x2324
   1325c:	movt	r3, #2
   13260:	bl	11330 <__assert_fail@plt>
   13264:	movw	r0, #12
   13268:	bl	17ea0 <__assert_fail@plt+0x6b70>
   1326c:	str	r0, [sp, #4]
   13270:	ldr	r0, [fp, #-4]
   13274:	ldr	lr, [sp, #4]
   13278:	str	r0, [lr]
   1327c:	ldr	r0, [sp, #8]
   13280:	ldr	lr, [sp, #4]
   13284:	str	r0, [lr, #4]
   13288:	ldr	r0, [sp, #4]
   1328c:	movw	lr, #0
   13290:	str	lr, [r0, #8]
   13294:	ldr	r0, [sp, #4]
   13298:	movw	lr, #12568	; 0x3118
   1329c:	movt	lr, #3
   132a0:	ldr	r1, [lr]
   132a4:	str	r0, [r1, #8]
   132a8:	ldr	r0, [sp, #4]
   132ac:	str	r0, [lr]
   132b0:	mov	sp, fp
   132b4:	pop	{fp, pc}
   132b8:	sub	sp, sp, #4
   132bc:	str	r0, [sp]
   132c0:	ldr	r0, [sp]
   132c4:	movw	r1, #0
   132c8:	str	r1, [r0]
   132cc:	ldr	r0, [sp]
   132d0:	str	r1, [r0, #4]
   132d4:	ldr	r0, [sp]
   132d8:	str	r1, [r0, #8]
   132dc:	add	sp, sp, #4
   132e0:	bx	lr
   132e4:	push	{fp, lr}
   132e8:	mov	fp, sp
   132ec:	sub	sp, sp, #24
   132f0:	str	r0, [fp, #-8]
   132f4:	str	r1, [sp, #12]
   132f8:	str	r2, [sp, #8]
   132fc:	ldr	r0, [sp, #12]
   13300:	ldr	r0, [r0]
   13304:	ldr	r1, [sp, #12]
   13308:	ldr	r1, [r1, #4]
   1330c:	cmp	r0, r1
   13310:	bne	13380 <__assert_fail@plt+0x2050>
   13314:	ldr	r0, [sp, #12]
   13318:	ldr	r0, [r0, #8]
   1331c:	ldr	r1, [sp, #12]
   13320:	add	r1, r1, #4
   13324:	movw	r2, #4
   13328:	bl	1807c <__assert_fail@plt+0x6d4c>
   1332c:	ldr	r1, [sp, #12]
   13330:	str	r0, [r1, #8]
   13334:	ldr	r0, [sp, #12]
   13338:	ldr	r0, [r0]
   1333c:	str	r0, [sp, #4]
   13340:	ldr	r0, [sp, #4]
   13344:	ldr	r1, [sp, #12]
   13348:	ldr	r1, [r1, #4]
   1334c:	cmp	r0, r1
   13350:	bcs	1337c <__assert_fail@plt+0x204c>
   13354:	ldr	r0, [sp, #12]
   13358:	ldr	r0, [r0, #8]
   1335c:	ldr	r1, [sp, #4]
   13360:	add	r0, r0, r1, lsl #2
   13364:	movw	r1, #0
   13368:	str	r1, [r0]
   1336c:	ldr	r0, [sp, #4]
   13370:	add	r0, r0, #1
   13374:	str	r0, [sp, #4]
   13378:	b	13340 <__assert_fail@plt+0x2010>
   1337c:	b	13380 <__assert_fail@plt+0x2050>
   13380:	ldr	r0, [fp, #-8]
   13384:	ldr	r1, [sp, #12]
   13388:	ldr	r2, [r1]
   1338c:	ldr	r1, [r1, #8]
   13390:	add	r1, r1, r2, lsl #2
   13394:	ldr	r2, [sp, #8]
   13398:	bl	13898 <__assert_fail@plt+0x2568>
   1339c:	tst	r0, #1
   133a0:	beq	133c4 <__assert_fail@plt+0x2094>
   133a4:	ldr	r0, [sp, #12]
   133a8:	ldr	r1, [r0]
   133ac:	add	r1, r1, #1
   133b0:	str	r1, [r0]
   133b4:	movw	r0, #1
   133b8:	and	r0, r0, #1
   133bc:	strb	r0, [fp, #-1]
   133c0:	b	133d0 <__assert_fail@plt+0x20a0>
   133c4:	movw	r0, #0
   133c8:	and	r0, r0, #1
   133cc:	strb	r0, [fp, #-1]
   133d0:	ldrb	r0, [fp, #-1]
   133d4:	and	r0, r0, #1
   133d8:	mov	sp, fp
   133dc:	pop	{fp, pc}
   133e0:	push	{fp, lr}
   133e4:	mov	fp, sp
   133e8:	sub	sp, sp, #48	; 0x30
   133ec:	str	r0, [fp, #-4]
   133f0:	str	r1, [fp, #-8]
   133f4:	movw	r0, #12560	; 0x3110
   133f8:	movt	r0, #3
   133fc:	ldr	r0, [r0]
   13400:	cmp	r0, #0
   13404:	bge	13414 <__assert_fail@plt+0x20e4>
   13408:	movw	r0, #32
   1340c:	str	r0, [sp, #16]
   13410:	b	13424 <__assert_fail@plt+0x20f4>
   13414:	movw	r0, #12560	; 0x3110
   13418:	movt	r0, #3
   1341c:	ldr	r0, [r0]
   13420:	str	r0, [sp, #16]
   13424:	ldr	r0, [sp, #16]
   13428:	strb	r0, [fp, #-13]
   1342c:	movw	r0, #12732	; 0x31bc
   13430:	movt	r0, #3
   13434:	ldr	r0, [r0, #8]
   13438:	str	r0, [fp, #-12]
   1343c:	ldr	r0, [fp, #-12]
   13440:	movw	r1, #0
   13444:	cmp	r0, r1
   13448:	beq	1353c <__assert_fail@plt+0x220c>
   1344c:	ldr	r0, [fp, #-12]
   13450:	str	r0, [sp, #20]
   13454:	ldr	r0, [sp, #20]
   13458:	ldr	r0, [r0]
   1345c:	cmp	r0, #0
   13460:	bne	134b0 <__assert_fail@plt+0x2180>
   13464:	ldr	r0, [fp, #-4]
   13468:	movw	r1, #12752	; 0x31d0
   1346c:	movt	r1, #3
   13470:	cmp	r0, r1
   13474:	bne	13494 <__assert_fail@plt+0x2164>
   13478:	ldr	r0, [fp, #-8]
   1347c:	str	r0, [sp, #24]
   13480:	movw	r0, #12556	; 0x310c
   13484:	movt	r0, #3
   13488:	ldr	r0, [r0]
   1348c:	str	r0, [fp, #-20]	; 0xffffffec
   13490:	b	134ac <__assert_fail@plt+0x217c>
   13494:	ldr	r0, [fp, #-4]
   13498:	str	r0, [sp, #24]
   1349c:	movw	r0, #12552	; 0x3108
   134a0:	movt	r0, #3
   134a4:	ldr	r0, [r0]
   134a8:	str	r0, [fp, #-20]	; 0xffffffec
   134ac:	b	134e8 <__assert_fail@plt+0x21b8>
   134b0:	ldr	r0, [sp, #20]
   134b4:	ldr	r0, [r0]
   134b8:	cmp	r0, #1
   134bc:	bne	134cc <__assert_fail@plt+0x219c>
   134c0:	ldr	r0, [fp, #-4]
   134c4:	str	r0, [sp, #12]
   134c8:	b	134d4 <__assert_fail@plt+0x21a4>
   134cc:	ldr	r0, [fp, #-8]
   134d0:	str	r0, [sp, #12]
   134d4:	ldr	r0, [sp, #12]
   134d8:	str	r0, [sp, #24]
   134dc:	ldr	r0, [sp, #20]
   134e0:	ldr	r0, [r0, #4]
   134e4:	str	r0, [fp, #-20]	; 0xffffffec
   134e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   134ec:	ldr	r1, [sp, #24]
   134f0:	bl	13af4 <__assert_fail@plt+0x27c4>
   134f4:	ldr	r0, [sp, #20]
   134f8:	ldr	r0, [r0, #8]
   134fc:	str	r0, [sp, #20]
   13500:	ldr	r0, [sp, #20]
   13504:	movw	r1, #0
   13508:	cmp	r0, r1
   1350c:	bne	13514 <__assert_fail@plt+0x21e4>
   13510:	b	13524 <__assert_fail@plt+0x21f4>
   13514:	ldrb	r0, [fp, #-13]
   13518:	bl	11324 <putchar_unlocked@plt>
   1351c:	str	r0, [sp, #8]
   13520:	b	13454 <__assert_fail@plt+0x2124>
   13524:	movw	r0, #12564	; 0x3114
   13528:	movt	r0, #3
   1352c:	ldrb	r0, [r0]
   13530:	bl	11324 <putchar_unlocked@plt>
   13534:	str	r0, [sp, #4]
   13538:	b	135e4 <__assert_fail@plt+0x22b4>
   1353c:	ldr	r0, [fp, #-4]
   13540:	movw	r1, #12752	; 0x31d0
   13544:	movt	r1, #3
   13548:	cmp	r0, r1
   1354c:	bne	1356c <__assert_fail@plt+0x223c>
   13550:	ldr	r0, [fp, #-8]
   13554:	str	r0, [sp, #24]
   13558:	movw	r0, #12556	; 0x310c
   1355c:	movt	r0, #3
   13560:	ldr	r0, [r0]
   13564:	str	r0, [fp, #-20]	; 0xffffffec
   13568:	b	13584 <__assert_fail@plt+0x2254>
   1356c:	ldr	r0, [fp, #-4]
   13570:	str	r0, [sp, #24]
   13574:	movw	r0, #12552	; 0x3108
   13578:	movt	r0, #3
   1357c:	ldr	r0, [r0]
   13580:	str	r0, [fp, #-20]	; 0xffffffec
   13584:	ldr	r0, [fp, #-20]	; 0xffffffec
   13588:	ldr	r1, [sp, #24]
   1358c:	bl	13af4 <__assert_fail@plt+0x27c4>
   13590:	ldr	r0, [fp, #-4]
   13594:	movw	r1, #12552	; 0x3108
   13598:	movt	r1, #3
   1359c:	ldr	r1, [r1]
   135a0:	movw	lr, #12744	; 0x31c8
   135a4:	movt	lr, #3
   135a8:	ldr	r2, [lr]
   135ac:	bl	13bf8 <__assert_fail@plt+0x28c8>
   135b0:	ldr	r0, [fp, #-8]
   135b4:	movw	r1, #12556	; 0x310c
   135b8:	movt	r1, #3
   135bc:	ldr	r1, [r1]
   135c0:	movw	r2, #12748	; 0x31cc
   135c4:	movt	r2, #3
   135c8:	ldr	r2, [r2]
   135cc:	bl	13bf8 <__assert_fail@plt+0x28c8>
   135d0:	movw	r0, #12564	; 0x3114
   135d4:	movt	r0, #3
   135d8:	ldrb	r0, [r0]
   135dc:	bl	11324 <putchar_unlocked@plt>
   135e0:	str	r0, [sp]
   135e4:	mov	sp, fp
   135e8:	pop	{fp, pc}
   135ec:	push	{fp, lr}
   135f0:	mov	fp, sp
   135f4:	sub	sp, sp, #16
   135f8:	str	r0, [fp, #-4]
   135fc:	str	r1, [sp, #8]
   13600:	and	r0, r2, #1
   13604:	strb	r0, [sp, #7]
   13608:	str	r3, [sp]
   1360c:	ldrb	r0, [sp, #7]
   13610:	tst	r0, #1
   13614:	beq	13624 <__assert_fail@plt+0x22f4>
   13618:	ldr	r0, [sp, #8]
   1361c:	movw	r1, #0
   13620:	str	r1, [r0]
   13624:	ldr	r0, [fp, #-4]
   13628:	ldr	r1, [sp, #8]
   1362c:	ldr	r2, [sp]
   13630:	bl	132e4 <__assert_fail@plt+0x1fb4>
   13634:	and	r0, r0, #1
   13638:	mov	sp, fp
   1363c:	pop	{fp, pc}
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	sub	sp, sp, #80	; 0x50
   1364c:	str	r0, [fp, #-8]
   13650:	str	r1, [fp, #-12]
   13654:	str	r2, [fp, #-16]
   13658:	str	r3, [fp, #-20]	; 0xffffffec
   1365c:	ldr	r0, [fp, #-16]
   13660:	ldr	r1, [fp, #-8]
   13664:	ldr	r1, [r1, #12]
   13668:	cmp	r0, r1
   1366c:	bcs	136a0 <__assert_fail@plt+0x2370>
   13670:	ldr	r0, [fp, #-8]
   13674:	ldr	r0, [r0, #20]
   13678:	ldr	r1, [fp, #-16]
   1367c:	ldr	r0, [r0, r1, lsl #3]
   13680:	str	r0, [fp, #-24]	; 0xffffffe8
   13684:	ldr	r0, [fp, #-8]
   13688:	ldr	r0, [r0, #20]
   1368c:	ldr	r1, [fp, #-16]
   13690:	add	r0, r0, r1, lsl #3
   13694:	ldr	r0, [r0, #4]
   13698:	str	r0, [fp, #-32]	; 0xffffffe0
   1369c:	b	136ac <__assert_fail@plt+0x237c>
   136a0:	movw	r0, #0
   136a4:	str	r0, [fp, #-24]	; 0xffffffe8
   136a8:	str	r0, [fp, #-32]	; 0xffffffe0
   136ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   136b0:	ldr	r1, [fp, #-12]
   136b4:	ldr	r1, [r1, #12]
   136b8:	cmp	r0, r1
   136bc:	bcs	136f0 <__assert_fail@plt+0x23c0>
   136c0:	ldr	r0, [fp, #-12]
   136c4:	ldr	r0, [r0, #20]
   136c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   136cc:	ldr	r0, [r0, r1, lsl #3]
   136d0:	str	r0, [fp, #-28]	; 0xffffffe4
   136d4:	ldr	r0, [fp, #-12]
   136d8:	ldr	r0, [r0, #20]
   136dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   136e0:	add	r0, r0, r1, lsl #3
   136e4:	ldr	r0, [r0, #4]
   136e8:	str	r0, [fp, #-36]	; 0xffffffdc
   136ec:	b	136fc <__assert_fail@plt+0x23cc>
   136f0:	movw	r0, #0
   136f4:	str	r0, [fp, #-28]	; 0xffffffe4
   136f8:	str	r0, [fp, #-36]	; 0xffffffdc
   136fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13700:	cmp	r0, #0
   13704:	bne	1372c <__assert_fail@plt+0x23fc>
   13708:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1370c:	cmp	r0, #0
   13710:	movw	r0, #0
   13714:	moveq	r0, #1
   13718:	tst	r0, #1
   1371c:	movw	r0, #0
   13720:	mvneq	r0, #0
   13724:	str	r0, [fp, #-4]
   13728:	b	1388c <__assert_fail@plt+0x255c>
   1372c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13730:	cmp	r0, #0
   13734:	bne	13744 <__assert_fail@plt+0x2414>
   13738:	movw	r0, #1
   1373c:	str	r0, [fp, #-4]
   13740:	b	1388c <__assert_fail@plt+0x255c>
   13744:	movw	r0, #12708	; 0x31a4
   13748:	movt	r0, #3
   1374c:	ldrb	r0, [r0]
   13750:	tst	r0, #1
   13754:	beq	137b0 <__assert_fail@plt+0x2480>
   13758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1375c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13760:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13764:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13768:	cmp	r2, r3
   1376c:	str	r0, [sp, #36]	; 0x24
   13770:	str	r1, [sp, #32]
   13774:	bcs	13784 <__assert_fail@plt+0x2454>
   13778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1377c:	str	r0, [sp, #28]
   13780:	b	1378c <__assert_fail@plt+0x245c>
   13784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13788:	str	r0, [sp, #28]
   1378c:	ldr	r0, [sp, #28]
   13790:	ldr	r1, [sp, #36]	; 0x24
   13794:	str	r0, [sp, #24]
   13798:	mov	r0, r1
   1379c:	ldr	r1, [sp, #32]
   137a0:	ldr	r2, [sp, #24]
   137a4:	bl	14ba4 <__assert_fail@plt+0x3874>
   137a8:	str	r0, [sp, #40]	; 0x28
   137ac:	b	13834 <__assert_fail@plt+0x2504>
   137b0:	movw	r0, #12688	; 0x3190
   137b4:	movt	r0, #3
   137b8:	ldrb	r0, [r0]
   137bc:	tst	r0, #1
   137c0:	beq	137e0 <__assert_fail@plt+0x24b0>
   137c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   137cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   137d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137d4:	bl	1accc <__assert_fail@plt+0x999c>
   137d8:	str	r0, [fp, #-4]
   137dc:	b	1388c <__assert_fail@plt+0x255c>
   137e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137f0:	cmp	r2, r3
   137f4:	str	r0, [sp, #20]
   137f8:	str	r1, [sp, #16]
   137fc:	bcs	1380c <__assert_fail@plt+0x24dc>
   13800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13804:	str	r0, [sp, #12]
   13808:	b	13814 <__assert_fail@plt+0x24e4>
   1380c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13810:	str	r0, [sp, #12]
   13814:	ldr	r0, [sp, #12]
   13818:	ldr	r1, [sp, #20]
   1381c:	str	r0, [sp, #8]
   13820:	mov	r0, r1
   13824:	ldr	r1, [sp, #16]
   13828:	ldr	r2, [sp, #8]
   1382c:	bl	11108 <memcmp@plt>
   13830:	str	r0, [sp, #40]	; 0x28
   13834:	ldr	r0, [sp, #40]	; 0x28
   13838:	cmp	r0, #0
   1383c:	beq	1384c <__assert_fail@plt+0x251c>
   13840:	ldr	r0, [sp, #40]	; 0x28
   13844:	str	r0, [fp, #-4]
   13848:	b	1388c <__assert_fail@plt+0x255c>
   1384c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13850:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13854:	cmp	r0, r1
   13858:	bcs	13868 <__assert_fail@plt+0x2538>
   1385c:	mvn	r0, #0
   13860:	str	r0, [sp, #4]
   13864:	b	13884 <__assert_fail@plt+0x2554>
   13868:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1386c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13870:	cmp	r0, r1
   13874:	movw	r0, #0
   13878:	movne	r0, #1
   1387c:	and	r0, r0, #1
   13880:	str	r0, [sp, #4]
   13884:	ldr	r0, [sp, #4]
   13888:	str	r0, [fp, #-4]
   1388c:	ldr	r0, [fp, #-4]
   13890:	mov	sp, fp
   13894:	pop	{fp, pc}
   13898:	push	{fp, lr}
   1389c:	mov	fp, sp
   138a0:	sub	sp, sp, #32
   138a4:	str	r0, [fp, #-8]
   138a8:	str	r1, [fp, #-12]
   138ac:	str	r2, [sp, #16]
   138b0:	ldr	r0, [fp, #-12]
   138b4:	ldr	r0, [r0]
   138b8:	str	r0, [sp, #12]
   138bc:	ldr	r0, [sp, #12]
   138c0:	ldr	r1, [sp, #16]
   138c4:	sub	r1, r1, #1
   138c8:	movw	r2, #12776	; 0x31e8
   138cc:	movt	r2, #3
   138d0:	add	r1, r2, r1, lsl #2
   138d4:	ldr	r1, [r1]
   138d8:	cmp	r0, r1
   138dc:	bne	13924 <__assert_fail@plt+0x25f4>
   138e0:	b	138e4 <__assert_fail@plt+0x25b4>
   138e4:	ldr	r0, [sp, #12]
   138e8:	str	r0, [sp, #8]
   138ec:	ldr	r0, [sp, #16]
   138f0:	movw	r1, #12724	; 0x31b4
   138f4:	movt	r1, #3
   138f8:	add	r0, r1, r0, lsl #2
   138fc:	ldr	r0, [r0, #-4]
   13900:	str	r0, [sp, #12]
   13904:	ldr	r0, [sp, #8]
   13908:	ldr	r2, [sp, #16]
   1390c:	sub	r2, r2, #1
   13910:	add	r1, r1, r2, lsl #2
   13914:	str	r0, [r1]
   13918:	ldr	r0, [sp, #12]
   1391c:	ldr	r1, [fp, #-12]
   13920:	str	r0, [r1]
   13924:	ldr	r0, [sp, #12]
   13928:	movw	r1, #0
   1392c:	cmp	r0, r1
   13930:	beq	13940 <__assert_fail@plt+0x2610>
   13934:	ldr	r0, [sp, #12]
   13938:	bl	13d3c <__assert_fail@plt+0x2a0c>
   1393c:	b	1394c <__assert_fail@plt+0x261c>
   13940:	ldr	r0, [fp, #-12]
   13944:	bl	13d58 <__assert_fail@plt+0x2a28>
   13948:	str	r0, [sp, #12]
   1394c:	ldr	r0, [sp, #12]
   13950:	ldr	r1, [fp, #-8]
   13954:	movw	r2, #12564	; 0x3114
   13958:	movt	r2, #3
   1395c:	ldrb	r2, [r2]
   13960:	bl	149f4 <__assert_fail@plt+0x36c4>
   13964:	movw	r1, #0
   13968:	cmp	r0, r1
   1396c:	bne	139c8 <__assert_fail@plt+0x2698>
   13970:	ldr	r0, [fp, #-8]
   13974:	bl	11168 <ferror_unlocked@plt>
   13978:	cmp	r0, #0
   1397c:	beq	139b0 <__assert_fail@plt+0x2680>
   13980:	bl	11228 <__errno_location@plt>
   13984:	ldr	r1, [r0]
   13988:	movw	r0, #9065	; 0x2369
   1398c:	movt	r0, #2
   13990:	str	r1, [sp, #4]
   13994:	bl	111ec <gettext@plt>
   13998:	movw	r1, #1
   1399c:	str	r0, [sp]
   139a0:	mov	r0, r1
   139a4:	ldr	r1, [sp, #4]
   139a8:	ldr	r2, [sp]
   139ac:	bl	11180 <error@plt>
   139b0:	ldr	r0, [sp, #12]
   139b4:	bl	13014 <__assert_fail@plt+0x1ce4>
   139b8:	movw	r0, #0
   139bc:	and	r0, r0, #1
   139c0:	strb	r0, [fp, #-1]
   139c4:	b	13a68 <__assert_fail@plt+0x2738>
   139c8:	ldr	r0, [sp, #16]
   139cc:	movw	r1, #12784	; 0x31f0
   139d0:	movt	r1, #3
   139d4:	add	r0, r1, r0, lsl #3
   139d8:	ldr	r1, [r0, #-8]
   139dc:	ldr	r2, [r0, #-4]
   139e0:	adds	r1, r1, #1
   139e4:	adc	r2, r2, #0
   139e8:	str	r1, [r0, #-8]
   139ec:	str	r2, [r0, #-4]
   139f0:	ldr	r0, [sp, #12]
   139f4:	bl	13d90 <__assert_fail@plt+0x2a60>
   139f8:	ldr	r0, [sp, #16]
   139fc:	sub	r0, r0, #1
   13a00:	movw	r1, #12776	; 0x31e8
   13a04:	movt	r1, #3
   13a08:	add	r0, r1, r0, lsl #2
   13a0c:	ldr	r0, [r0]
   13a10:	movw	r1, #0
   13a14:	cmp	r0, r1
   13a18:	beq	13a40 <__assert_fail@plt+0x2710>
   13a1c:	ldr	r0, [sp, #16]
   13a20:	sub	r0, r0, #1
   13a24:	movw	r1, #12776	; 0x31e8
   13a28:	movt	r1, #3
   13a2c:	add	r0, r1, r0, lsl #2
   13a30:	ldr	r0, [r0]
   13a34:	ldr	r1, [sp, #12]
   13a38:	ldr	r2, [sp, #16]
   13a3c:	bl	13fd0 <__assert_fail@plt+0x2ca0>
   13a40:	ldr	r0, [sp, #12]
   13a44:	ldr	r1, [sp, #16]
   13a48:	sub	r1, r1, #1
   13a4c:	movw	r2, #12776	; 0x31e8
   13a50:	movt	r2, #3
   13a54:	add	r1, r2, r1, lsl #2
   13a58:	str	r0, [r1]
   13a5c:	movw	r0, #1
   13a60:	and	r0, r0, #1
   13a64:	strb	r0, [fp, #-1]
   13a68:	ldrb	r0, [fp, #-1]
   13a6c:	and	r0, r0, #1
   13a70:	mov	sp, fp
   13a74:	pop	{fp, pc}
   13a78:	push	{fp, lr}
   13a7c:	mov	fp, sp
   13a80:	sub	sp, sp, #8
   13a84:	str	r0, [sp, #4]
   13a88:	movw	r0, #0
   13a8c:	str	r0, [sp]
   13a90:	ldr	r0, [sp]
   13a94:	ldr	r1, [sp, #4]
   13a98:	ldr	r1, [r1, #4]
   13a9c:	cmp	r0, r1
   13aa0:	bcs	13ae0 <__assert_fail@plt+0x27b0>
   13aa4:	ldr	r0, [sp, #4]
   13aa8:	ldr	r0, [r0, #8]
   13aac:	ldr	r1, [sp]
   13ab0:	ldr	r0, [r0, r1, lsl #2]
   13ab4:	bl	13014 <__assert_fail@plt+0x1ce4>
   13ab8:	ldr	r0, [sp, #4]
   13abc:	ldr	r0, [r0, #8]
   13ac0:	ldr	r1, [sp]
   13ac4:	add	r0, r0, r1, lsl #2
   13ac8:	ldr	r0, [r0]
   13acc:	bl	147b0 <__assert_fail@plt+0x3480>
   13ad0:	ldr	r0, [sp]
   13ad4:	add	r0, r0, #1
   13ad8:	str	r0, [sp]
   13adc:	b	13a90 <__assert_fail@plt+0x2760>
   13ae0:	ldr	r0, [sp, #4]
   13ae4:	ldr	r0, [r0, #8]
   13ae8:	bl	147b0 <__assert_fail@plt+0x3480>
   13aec:	mov	sp, fp
   13af0:	pop	{fp, pc}
   13af4:	push	{fp, lr}
   13af8:	mov	fp, sp
   13afc:	sub	sp, sp, #24
   13b00:	str	r0, [fp, #-4]
   13b04:	str	r1, [fp, #-8]
   13b08:	ldr	r0, [fp, #-4]
   13b0c:	ldr	r1, [fp, #-8]
   13b10:	ldr	r1, [r1, #12]
   13b14:	cmp	r0, r1
   13b18:	bcs	13bb4 <__assert_fail@plt+0x2884>
   13b1c:	ldr	r0, [fp, #-8]
   13b20:	ldr	r0, [r0, #20]
   13b24:	ldr	r1, [fp, #-4]
   13b28:	add	r0, r0, r1, lsl #3
   13b2c:	ldr	r0, [r0, #4]
   13b30:	str	r0, [sp, #12]
   13b34:	ldr	r0, [sp, #12]
   13b38:	cmp	r0, #0
   13b3c:	beq	13b74 <__assert_fail@plt+0x2844>
   13b40:	ldr	r0, [fp, #-8]
   13b44:	ldr	r0, [r0, #20]
   13b48:	ldr	r1, [fp, #-4]
   13b4c:	add	r0, r0, r1, lsl #3
   13b50:	ldr	r0, [r0]
   13b54:	ldr	r2, [sp, #12]
   13b58:	movw	r1, #12676	; 0x3184
   13b5c:	movt	r1, #3
   13b60:	ldr	r3, [r1]
   13b64:	movw	r1, #1
   13b68:	bl	110fc <fwrite_unlocked@plt>
   13b6c:	str	r0, [sp, #8]
   13b70:	b	13bb0 <__assert_fail@plt+0x2880>
   13b74:	movw	r0, #12704	; 0x31a0
   13b78:	movt	r0, #3
   13b7c:	ldr	r0, [r0]
   13b80:	movw	r1, #0
   13b84:	cmp	r0, r1
   13b88:	beq	13bac <__assert_fail@plt+0x287c>
   13b8c:	movw	r0, #12704	; 0x31a0
   13b90:	movt	r0, #3
   13b94:	ldr	r0, [r0]
   13b98:	movw	r1, #12676	; 0x3184
   13b9c:	movt	r1, #3
   13ba0:	ldr	r1, [r1]
   13ba4:	bl	11084 <fputs_unlocked@plt>
   13ba8:	str	r0, [sp, #4]
   13bac:	b	13bb0 <__assert_fail@plt+0x2880>
   13bb0:	b	13bf0 <__assert_fail@plt+0x28c0>
   13bb4:	movw	r0, #12704	; 0x31a0
   13bb8:	movt	r0, #3
   13bbc:	ldr	r0, [r0]
   13bc0:	movw	r1, #0
   13bc4:	cmp	r0, r1
   13bc8:	beq	13bec <__assert_fail@plt+0x28bc>
   13bcc:	movw	r0, #12704	; 0x31a0
   13bd0:	movt	r0, #3
   13bd4:	ldr	r0, [r0]
   13bd8:	movw	r1, #12676	; 0x3184
   13bdc:	movt	r1, #3
   13be0:	ldr	r1, [r1]
   13be4:	bl	11084 <fputs_unlocked@plt>
   13be8:	str	r0, [sp]
   13bec:	b	13bf0 <__assert_fail@plt+0x28c0>
   13bf0:	mov	sp, fp
   13bf4:	pop	{fp, pc}
   13bf8:	push	{fp, lr}
   13bfc:	mov	fp, sp
   13c00:	sub	sp, sp, #48	; 0x30
   13c04:	str	r0, [fp, #-4]
   13c08:	str	r1, [fp, #-8]
   13c0c:	str	r2, [fp, #-12]
   13c10:	movw	r0, #12709	; 0x31a5
   13c14:	movt	r0, #3
   13c18:	ldrb	r0, [r0]
   13c1c:	tst	r0, #1
   13c20:	beq	13c30 <__assert_fail@plt+0x2900>
   13c24:	ldr	r0, [fp, #-12]
   13c28:	str	r0, [sp, #20]
   13c2c:	b	13c3c <__assert_fail@plt+0x290c>
   13c30:	ldr	r0, [fp, #-4]
   13c34:	ldr	r0, [r0, #12]
   13c38:	str	r0, [sp, #20]
   13c3c:	ldr	r0, [sp, #20]
   13c40:	str	r0, [fp, #-20]	; 0xffffffec
   13c44:	movw	r0, #12560	; 0x3110
   13c48:	movt	r0, #3
   13c4c:	ldr	r0, [r0]
   13c50:	cmp	r0, #0
   13c54:	bge	13c64 <__assert_fail@plt+0x2934>
   13c58:	movw	r0, #32
   13c5c:	str	r0, [sp, #16]
   13c60:	b	13c74 <__assert_fail@plt+0x2944>
   13c64:	movw	r0, #12560	; 0x3110
   13c68:	movt	r0, #3
   13c6c:	ldr	r0, [r0]
   13c70:	str	r0, [sp, #16]
   13c74:	ldr	r0, [sp, #16]
   13c78:	strb	r0, [fp, #-21]	; 0xffffffeb
   13c7c:	movw	r0, #0
   13c80:	str	r0, [fp, #-16]
   13c84:	ldr	r0, [fp, #-16]
   13c88:	ldr	r1, [fp, #-8]
   13c8c:	cmp	r0, r1
   13c90:	movw	r0, #0
   13c94:	str	r0, [sp, #12]
   13c98:	bcs	13cb4 <__assert_fail@plt+0x2984>
   13c9c:	ldr	r0, [fp, #-16]
   13ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ca4:	cmp	r0, r1
   13ca8:	movw	r0, #0
   13cac:	movcc	r0, #1
   13cb0:	str	r0, [sp, #12]
   13cb4:	ldr	r0, [sp, #12]
   13cb8:	tst	r0, #1
   13cbc:	beq	13cec <__assert_fail@plt+0x29bc>
   13cc0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13cc4:	bl	11324 <putchar_unlocked@plt>
   13cc8:	ldr	lr, [fp, #-16]
   13ccc:	ldr	r1, [fp, #-4]
   13cd0:	str	r0, [sp, #8]
   13cd4:	mov	r0, lr
   13cd8:	bl	13af4 <__assert_fail@plt+0x27c4>
   13cdc:	ldr	r0, [fp, #-16]
   13ce0:	add	r0, r0, #1
   13ce4:	str	r0, [fp, #-16]
   13ce8:	b	13c84 <__assert_fail@plt+0x2954>
   13cec:	ldr	r0, [fp, #-8]
   13cf0:	add	r0, r0, #1
   13cf4:	str	r0, [fp, #-16]
   13cf8:	ldr	r0, [fp, #-16]
   13cfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d00:	cmp	r0, r1
   13d04:	bcs	13d34 <__assert_fail@plt+0x2a04>
   13d08:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13d0c:	bl	11324 <putchar_unlocked@plt>
   13d10:	ldr	lr, [fp, #-16]
   13d14:	ldr	r1, [fp, #-4]
   13d18:	str	r0, [sp, #4]
   13d1c:	mov	r0, lr
   13d20:	bl	13af4 <__assert_fail@plt+0x27c4>
   13d24:	ldr	r0, [fp, #-16]
   13d28:	add	r0, r0, #1
   13d2c:	str	r0, [fp, #-16]
   13d30:	b	13cf8 <__assert_fail@plt+0x29c8>
   13d34:	mov	sp, fp
   13d38:	pop	{fp, pc}
   13d3c:	sub	sp, sp, #4
   13d40:	str	r0, [sp]
   13d44:	ldr	r0, [sp]
   13d48:	movw	r1, #0
   13d4c:	str	r1, [r0, #12]
   13d50:	add	sp, sp, #4
   13d54:	bx	lr
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	sub	sp, sp, #8
   13d64:	str	r0, [sp, #4]
   13d68:	movw	r0, #1
   13d6c:	movw	r1, #24
   13d70:	bl	1ab00 <__assert_fail@plt+0x97d0>
   13d74:	str	r0, [sp]
   13d78:	ldr	r0, [sp]
   13d7c:	ldr	r1, [sp, #4]
   13d80:	str	r0, [r1]
   13d84:	ldr	r0, [sp]
   13d88:	mov	sp, fp
   13d8c:	pop	{fp, pc}
   13d90:	push	{fp, lr}
   13d94:	mov	fp, sp
   13d98:	sub	sp, sp, #32
   13d9c:	str	r0, [fp, #-4]
   13da0:	ldr	r0, [fp, #-4]
   13da4:	ldr	r0, [r0, #8]
   13da8:	str	r0, [fp, #-8]
   13dac:	ldr	r0, [fp, #-8]
   13db0:	ldr	r1, [fp, #-4]
   13db4:	ldr	r1, [r1, #4]
   13db8:	add	r0, r0, r1
   13dbc:	mvn	r1, #0
   13dc0:	add	r0, r0, r1
   13dc4:	str	r0, [fp, #-12]
   13dc8:	ldr	r0, [fp, #-8]
   13dcc:	ldr	r1, [fp, #-12]
   13dd0:	cmp	r0, r1
   13dd4:	bne	13ddc <__assert_fail@plt+0x2aac>
   13dd8:	b	13fc8 <__assert_fail@plt+0x2c98>
   13ddc:	movw	r0, #12560	; 0x3110
   13de0:	movt	r0, #3
   13de4:	ldr	r0, [r0]
   13de8:	movw	r1, #0
   13dec:	cmp	r1, r0
   13df0:	bgt	13e68 <__assert_fail@plt+0x2b38>
   13df4:	movw	r0, #12560	; 0x3110
   13df8:	movt	r0, #3
   13dfc:	ldr	r0, [r0]
   13e00:	cmp	r0, #10
   13e04:	beq	13e68 <__assert_fail@plt+0x2b38>
   13e08:	b	13e0c <__assert_fail@plt+0x2adc>
   13e0c:	ldr	r0, [fp, #-8]
   13e10:	movw	r1, #12560	; 0x3110
   13e14:	movt	r1, #3
   13e18:	ldr	r1, [r1]
   13e1c:	ldr	r2, [fp, #-12]
   13e20:	ldr	r3, [fp, #-8]
   13e24:	sub	r2, r2, r3
   13e28:	bl	11264 <memchr@plt>
   13e2c:	str	r0, [sp, #16]
   13e30:	movw	r1, #0
   13e34:	cmp	r0, r1
   13e38:	beq	13e64 <__assert_fail@plt+0x2b34>
   13e3c:	ldr	r0, [fp, #-4]
   13e40:	ldr	r1, [fp, #-8]
   13e44:	ldr	r2, [sp, #16]
   13e48:	ldr	r3, [fp, #-8]
   13e4c:	sub	r2, r2, r3
   13e50:	bl	141c8 <__assert_fail@plt+0x2e98>
   13e54:	ldr	r0, [sp, #16]
   13e58:	add	r0, r0, #1
   13e5c:	str	r0, [fp, #-8]
   13e60:	b	13e0c <__assert_fail@plt+0x2adc>
   13e64:	b	13fb0 <__assert_fail@plt+0x2c80>
   13e68:	movw	r0, #12560	; 0x3110
   13e6c:	movt	r0, #3
   13e70:	ldr	r0, [r0]
   13e74:	cmp	r0, #0
   13e78:	bge	13fac <__assert_fail@plt+0x2c7c>
   13e7c:	b	13e80 <__assert_fail@plt+0x2b50>
   13e80:	ldr	r0, [fp, #-8]
   13e84:	ldrb	r0, [r0]
   13e88:	bl	1425c <__assert_fail@plt+0x2f2c>
   13e8c:	tst	r0, #1
   13e90:	beq	13eb4 <__assert_fail@plt+0x2b84>
   13e94:	ldr	r0, [fp, #-8]
   13e98:	add	r0, r0, #1
   13e9c:	str	r0, [fp, #-8]
   13ea0:	ldr	r1, [fp, #-12]
   13ea4:	cmp	r0, r1
   13ea8:	bne	13eb0 <__assert_fail@plt+0x2b80>
   13eac:	b	13fc8 <__assert_fail@plt+0x2c98>
   13eb0:	b	13e80 <__assert_fail@plt+0x2b50>
   13eb4:	b	13eb8 <__assert_fail@plt+0x2b88>
   13eb8:	ldr	r0, [fp, #-8]
   13ebc:	add	r0, r0, #1
   13ec0:	str	r0, [sp, #12]
   13ec4:	ldr	r0, [sp, #12]
   13ec8:	ldr	r1, [fp, #-12]
   13ecc:	cmp	r0, r1
   13ed0:	movw	r0, #0
   13ed4:	str	r0, [sp, #8]
   13ed8:	beq	13ef4 <__assert_fail@plt+0x2bc4>
   13edc:	ldr	r0, [sp, #12]
   13ee0:	ldrb	r0, [r0]
   13ee4:	bl	1425c <__assert_fail@plt+0x2f2c>
   13ee8:	mvn	lr, #0
   13eec:	eor	r0, r0, lr
   13ef0:	str	r0, [sp, #8]
   13ef4:	ldr	r0, [sp, #8]
   13ef8:	tst	r0, #1
   13efc:	beq	13f14 <__assert_fail@plt+0x2be4>
   13f00:	b	13f04 <__assert_fail@plt+0x2bd4>
   13f04:	ldr	r0, [sp, #12]
   13f08:	add	r0, r0, #1
   13f0c:	str	r0, [sp, #12]
   13f10:	b	13ec4 <__assert_fail@plt+0x2b94>
   13f14:	ldr	r0, [fp, #-4]
   13f18:	ldr	r1, [fp, #-8]
   13f1c:	ldr	r2, [sp, #12]
   13f20:	ldr	r3, [fp, #-8]
   13f24:	sub	r2, r2, r3
   13f28:	bl	141c8 <__assert_fail@plt+0x2e98>
   13f2c:	ldr	r0, [sp, #12]
   13f30:	ldr	r1, [fp, #-12]
   13f34:	cmp	r0, r1
   13f38:	bne	13f40 <__assert_fail@plt+0x2c10>
   13f3c:	b	13fc8 <__assert_fail@plt+0x2c98>
   13f40:	ldr	r0, [sp, #12]
   13f44:	add	r0, r0, #1
   13f48:	str	r0, [fp, #-8]
   13f4c:	ldr	r0, [fp, #-8]
   13f50:	ldr	r1, [fp, #-12]
   13f54:	cmp	r0, r1
   13f58:	movw	r0, #0
   13f5c:	str	r0, [sp, #4]
   13f60:	beq	13f74 <__assert_fail@plt+0x2c44>
   13f64:	ldr	r0, [fp, #-8]
   13f68:	ldrb	r0, [r0]
   13f6c:	bl	1425c <__assert_fail@plt+0x2f2c>
   13f70:	str	r0, [sp, #4]
   13f74:	ldr	r0, [sp, #4]
   13f78:	tst	r0, #1
   13f7c:	beq	13f94 <__assert_fail@plt+0x2c64>
   13f80:	b	13f84 <__assert_fail@plt+0x2c54>
   13f84:	ldr	r0, [fp, #-8]
   13f88:	add	r0, r0, #1
   13f8c:	str	r0, [fp, #-8]
   13f90:	b	13f4c <__assert_fail@plt+0x2c1c>
   13f94:	b	13f98 <__assert_fail@plt+0x2c68>
   13f98:	ldr	r0, [fp, #-8]
   13f9c:	ldr	r1, [fp, #-12]
   13fa0:	cmp	r0, r1
   13fa4:	bne	13eb8 <__assert_fail@plt+0x2b88>
   13fa8:	b	13fac <__assert_fail@plt+0x2c7c>
   13fac:	b	13fb0 <__assert_fail@plt+0x2c80>
   13fb0:	ldr	r0, [fp, #-4]
   13fb4:	ldr	r1, [fp, #-8]
   13fb8:	ldr	r2, [fp, #-12]
   13fbc:	ldr	r3, [fp, #-8]
   13fc0:	sub	r2, r2, r3
   13fc4:	bl	141c8 <__assert_fail@plt+0x2e98>
   13fc8:	mov	sp, fp
   13fcc:	pop	{fp, pc}
   13fd0:	push	{r4, sl, fp, lr}
   13fd4:	add	fp, sp, #8
   13fd8:	sub	sp, sp, #56	; 0x38
   13fdc:	str	r0, [fp, #-12]
   13fe0:	str	r1, [fp, #-16]
   13fe4:	str	r2, [fp, #-20]	; 0xffffffec
   13fe8:	movw	r0, #12696	; 0x3198
   13fec:	movt	r0, #3
   13ff0:	ldr	r0, [r0]
   13ff4:	cmp	r0, #2
   13ff8:	beq	141bc <__assert_fail@plt+0x2e8c>
   13ffc:	movw	r0, #12696	; 0x3198
   14000:	movt	r0, #3
   14004:	ldr	r0, [r0]
   14008:	cmp	r0, #1
   1400c:	beq	14024 <__assert_fail@plt+0x2cf4>
   14010:	movw	r0, #12690	; 0x3192
   14014:	movt	r0, #3
   14018:	ldrb	r0, [r0]
   1401c:	tst	r0, #1
   14020:	beq	141bc <__assert_fail@plt+0x2e8c>
   14024:	ldr	r0, [fp, #-20]	; 0xffffffec
   14028:	sub	r0, r0, #1
   1402c:	movw	r1, #12691	; 0x3193
   14030:	movt	r1, #3
   14034:	add	r0, r1, r0
   14038:	ldrb	r0, [r0]
   1403c:	tst	r0, #1
   14040:	bne	141b8 <__assert_fail@plt+0x2e88>
   14044:	ldr	r0, [fp, #-20]	; 0xffffffec
   14048:	cmp	r0, #1
   1404c:	bne	14064 <__assert_fail@plt+0x2d34>
   14050:	movw	r0, #12552	; 0x3108
   14054:	movt	r0, #3
   14058:	ldr	r0, [r0]
   1405c:	str	r0, [sp, #32]
   14060:	b	14074 <__assert_fail@plt+0x2d44>
   14064:	movw	r0, #12556	; 0x310c
   14068:	movt	r0, #3
   1406c:	ldr	r0, [r0]
   14070:	str	r0, [sp, #32]
   14074:	ldr	r0, [sp, #32]
   14078:	str	r0, [fp, #-24]	; 0xffffffe8
   1407c:	ldr	r0, [fp, #-12]
   14080:	ldr	r1, [fp, #-16]
   14084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1408c:	bl	13640 <__assert_fail@plt+0x2310>
   14090:	cmp	r0, #0
   14094:	ble	141b4 <__assert_fail@plt+0x2e84>
   14098:	ldr	r0, [fp, #-16]
   1409c:	ldr	r0, [r0, #4]
   140a0:	str	r0, [fp, #-28]	; 0xffffffe4
   140a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140a8:	movw	r1, #0
   140ac:	cmp	r1, r0
   140b0:	bcs	140e4 <__assert_fail@plt+0x2db4>
   140b4:	ldr	r0, [fp, #-16]
   140b8:	ldr	r0, [r0, #8]
   140bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140c0:	sub	r1, r1, #1
   140c4:	add	r0, r0, r1
   140c8:	ldrb	r0, [r0]
   140cc:	cmp	r0, #10
   140d0:	bne	140e4 <__assert_fail@plt+0x2db4>
   140d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140d8:	mvn	r1, #0
   140dc:	add	r0, r0, r1
   140e0:	str	r0, [fp, #-28]	; 0xffffffe4
   140e4:	ldr	r0, [pc, #216]	; 141c4 <__assert_fail@plt+0x2e94>
   140e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140ec:	cmp	r0, r1
   140f0:	bcs	14100 <__assert_fail@plt+0x2dd0>
   140f4:	ldr	r0, [pc, #200]	; 141c4 <__assert_fail@plt+0x2e94>
   140f8:	str	r0, [sp, #28]
   140fc:	b	14108 <__assert_fail@plt+0x2dd8>
   14100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14104:	str	r0, [sp, #28]
   14108:	ldr	r0, [sp, #28]
   1410c:	str	r0, [fp, #-28]	; 0xffffffe4
   14110:	movw	r0, #12696	; 0x3198
   14114:	movt	r0, #3
   14118:	ldr	r0, [r0]
   1411c:	sub	r0, r0, #1
   14120:	clz	r0, r0
   14124:	lsr	r0, r0, #5
   14128:	movw	r1, #9076	; 0x2374
   1412c:	movt	r1, #2
   14130:	str	r0, [sp, #24]
   14134:	mov	r0, r1
   14138:	bl	111ec <gettext@plt>
   1413c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14140:	sub	r1, r1, #1
   14144:	movw	lr, #12712	; 0x31a8
   14148:	movt	lr, #3
   1414c:	ldr	r3, [lr, r1, lsl #2]
   14150:	movw	lr, #12784	; 0x31f0
   14154:	movt	lr, #3
   14158:	ldr	r1, [lr, r1, lsl #3]!
   1415c:	ldr	lr, [lr, #4]
   14160:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14164:	ldr	ip, [fp, #-16]
   14168:	ldr	ip, [ip, #8]
   1416c:	mov	r4, sp
   14170:	str	ip, [r4, #12]
   14174:	str	r2, [r4, #8]
   14178:	str	lr, [r4, #4]
   1417c:	str	r1, [r4]
   14180:	mov	r1, #0
   14184:	ldr	r2, [sp, #24]
   14188:	str	r0, [sp, #20]
   1418c:	mov	r0, r2
   14190:	ldr	r2, [sp, #20]
   14194:	bl	11180 <error@plt>
   14198:	ldr	r0, [fp, #-20]	; 0xffffffec
   1419c:	sub	r0, r0, #1
   141a0:	movw	r1, #12691	; 0x3193
   141a4:	movt	r1, #3
   141a8:	add	r0, r1, r0
   141ac:	movw	r1, #1
   141b0:	strb	r1, [r0]
   141b4:	b	141b8 <__assert_fail@plt+0x2e88>
   141b8:	b	141bc <__assert_fail@plt+0x2e8c>
   141bc:	sub	sp, fp, #8
   141c0:	pop	{r4, sl, fp, pc}
   141c4:	svcvc	0x00ffffff
   141c8:	push	{fp, lr}
   141cc:	mov	fp, sp
   141d0:	sub	sp, sp, #16
   141d4:	str	r0, [fp, #-4]
   141d8:	str	r1, [sp, #8]
   141dc:	str	r2, [sp, #4]
   141e0:	ldr	r0, [fp, #-4]
   141e4:	ldr	r0, [r0, #12]
   141e8:	ldr	r1, [fp, #-4]
   141ec:	ldr	r1, [r1, #16]
   141f0:	cmp	r0, r1
   141f4:	bcc	14218 <__assert_fail@plt+0x2ee8>
   141f8:	ldr	r0, [fp, #-4]
   141fc:	ldr	r0, [r0, #20]
   14200:	ldr	r1, [fp, #-4]
   14204:	add	r1, r1, #16
   14208:	movw	r2, #8
   1420c:	bl	1807c <__assert_fail@plt+0x6d4c>
   14210:	ldr	r1, [fp, #-4]
   14214:	str	r0, [r1, #20]
   14218:	ldr	r0, [sp, #8]
   1421c:	ldr	r1, [fp, #-4]
   14220:	ldr	r2, [r1, #12]
   14224:	ldr	r1, [r1, #20]
   14228:	str	r0, [r1, r2, lsl #3]
   1422c:	ldr	r0, [sp, #4]
   14230:	ldr	r1, [fp, #-4]
   14234:	ldr	r2, [r1, #12]
   14238:	ldr	r1, [r1, #20]
   1423c:	add	r1, r1, r2, lsl #3
   14240:	str	r0, [r1, #4]
   14244:	ldr	r0, [fp, #-4]
   14248:	ldr	r1, [r0, #12]
   1424c:	add	r1, r1, #1
   14250:	str	r1, [r0, #12]
   14254:	mov	sp, fp
   14258:	pop	{fp, pc}
   1425c:	push	{fp, lr}
   14260:	mov	fp, sp
   14264:	sub	sp, sp, #16
   14268:	strb	r0, [fp, #-1]
   1426c:	bl	111d4 <__ctype_b_loc@plt>
   14270:	ldr	r0, [r0]
   14274:	ldrb	lr, [fp, #-1]
   14278:	mov	r1, lr
   1427c:	add	r0, r0, lr, lsl #1
   14280:	ldrh	r0, [r0]
   14284:	and	r0, r0, #1
   14288:	cmp	r0, #0
   1428c:	movw	r0, #1
   14290:	str	r1, [sp, #8]
   14294:	str	r0, [sp, #4]
   14298:	bne	142b0 <__assert_fail@plt+0x2f80>
   1429c:	ldrb	r0, [fp, #-1]
   142a0:	cmp	r0, #10
   142a4:	movw	r0, #0
   142a8:	moveq	r0, #1
   142ac:	str	r0, [sp, #4]
   142b0:	ldr	r0, [sp, #4]
   142b4:	and	r0, r0, #1
   142b8:	mov	sp, fp
   142bc:	pop	{fp, pc}
   142c0:	sub	sp, sp, #4
   142c4:	str	r0, [sp]
   142c8:	ldr	r0, [sp]
   142cc:	movw	r1, #12800	; 0x3200
   142d0:	movt	r1, #3
   142d4:	str	r0, [r1]
   142d8:	add	sp, sp, #4
   142dc:	bx	lr
   142e0:	sub	sp, sp, #4
   142e4:	and	r0, r0, #1
   142e8:	strb	r0, [sp, #3]
   142ec:	ldrb	r0, [sp, #3]
   142f0:	and	r0, r0, #1
   142f4:	movw	r1, #12804	; 0x3204
   142f8:	movt	r1, #3
   142fc:	strb	r0, [r1]
   14300:	add	sp, sp, #4
   14304:	bx	lr
   14308:	push	{fp, lr}
   1430c:	mov	fp, sp
   14310:	sub	sp, sp, #24
   14314:	movw	r0, #12676	; 0x3184
   14318:	movt	r0, #3
   1431c:	ldr	r0, [r0]
   14320:	bl	1f024 <__assert_fail@plt+0xdcf4>
   14324:	cmp	r0, #0
   14328:	beq	143f8 <__assert_fail@plt+0x30c8>
   1432c:	movw	r0, #12804	; 0x3204
   14330:	movt	r0, #3
   14334:	ldrb	r0, [r0]
   14338:	tst	r0, #1
   1433c:	beq	14350 <__assert_fail@plt+0x3020>
   14340:	bl	11228 <__errno_location@plt>
   14344:	ldr	r0, [r0]
   14348:	cmp	r0, #32
   1434c:	beq	143f8 <__assert_fail@plt+0x30c8>
   14350:	movw	r0, #9307	; 0x245b
   14354:	movt	r0, #2
   14358:	bl	111ec <gettext@plt>
   1435c:	str	r0, [fp, #-4]
   14360:	movw	r0, #12800	; 0x3200
   14364:	movt	r0, #3
   14368:	ldr	r0, [r0]
   1436c:	movw	lr, #0
   14370:	cmp	r0, lr
   14374:	beq	143cc <__assert_fail@plt+0x309c>
   14378:	bl	11228 <__errno_location@plt>
   1437c:	ldr	r1, [r0]
   14380:	movw	r0, #12800	; 0x3200
   14384:	movt	r0, #3
   14388:	ldr	r0, [r0]
   1438c:	str	r1, [fp, #-8]
   14390:	bl	17034 <__assert_fail@plt+0x5d04>
   14394:	ldr	r1, [fp, #-4]
   14398:	movw	lr, #0
   1439c:	str	r0, [sp, #12]
   143a0:	mov	r0, lr
   143a4:	ldr	lr, [fp, #-8]
   143a8:	str	r1, [sp, #8]
   143ac:	mov	r1, lr
   143b0:	movw	r2, #9319	; 0x2467
   143b4:	movt	r2, #2
   143b8:	ldr	r3, [sp, #12]
   143bc:	ldr	ip, [sp, #8]
   143c0:	str	ip, [sp]
   143c4:	bl	11180 <error@plt>
   143c8:	b	143e8 <__assert_fail@plt+0x30b8>
   143cc:	bl	11228 <__errno_location@plt>
   143d0:	ldr	r1, [r0]
   143d4:	ldr	r3, [fp, #-4]
   143d8:	movw	r0, #0
   143dc:	movw	r2, #8946	; 0x22f2
   143e0:	movt	r2, #2
   143e4:	bl	11180 <error@plt>
   143e8:	movw	r0, #12576	; 0x3120
   143ec:	movt	r0, #3
   143f0:	ldr	r0, [r0]
   143f4:	bl	110d8 <_exit@plt>
   143f8:	movw	r0, #12664	; 0x3178
   143fc:	movt	r0, #3
   14400:	ldr	r0, [r0]
   14404:	bl	1f024 <__assert_fail@plt+0xdcf4>
   14408:	cmp	r0, #0
   1440c:	beq	14420 <__assert_fail@plt+0x30f0>
   14410:	movw	r0, #12576	; 0x3120
   14414:	movt	r0, #3
   14418:	ldr	r0, [r0]
   1441c:	bl	110d8 <_exit@plt>
   14420:	mov	sp, fp
   14424:	pop	{fp, pc}
   14428:	push	{r4, r5, fp, lr}
   1442c:	add	fp, sp, #8
   14430:	sub	sp, sp, #48	; 0x30
   14434:	ldr	r1, [fp, #12]
   14438:	ldr	ip, [fp, #8]
   1443c:	ldr	lr, [fp, #16]
   14440:	str	r0, [fp, #-12]
   14444:	str	r3, [fp, #-20]	; 0xffffffec
   14448:	str	r2, [fp, #-24]	; 0xffffffe8
   1444c:	str	r1, [sp, #28]
   14450:	str	ip, [sp, #24]
   14454:	ldr	r0, [fp, #-12]
   14458:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1445c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14460:	ldr	r1, [sp, #24]
   14464:	ldr	ip, [sp, #28]
   14468:	ldr	r4, [fp, #16]
   1446c:	mov	r5, sp
   14470:	str	r4, [r5, #8]
   14474:	str	ip, [r5, #4]
   14478:	str	r1, [r5]
   1447c:	str	lr, [sp, #20]
   14480:	bl	110a8 <posix_fadvise64@plt>
   14484:	str	r0, [sp, #16]
   14488:	sub	sp, fp, #8
   1448c:	pop	{r4, r5, fp, pc}
   14490:	push	{fp, lr}
   14494:	mov	fp, sp
   14498:	sub	sp, sp, #24
   1449c:	str	r0, [fp, #-4]
   144a0:	str	r1, [fp, #-8]
   144a4:	ldr	r0, [fp, #-4]
   144a8:	movw	r1, #0
   144ac:	cmp	r0, r1
   144b0:	beq	144e0 <__assert_fail@plt+0x31b0>
   144b4:	ldr	r0, [fp, #-4]
   144b8:	bl	1124c <fileno@plt>
   144bc:	ldr	lr, [fp, #-8]
   144c0:	mov	r1, sp
   144c4:	str	lr, [r1, #8]
   144c8:	mov	lr, #0
   144cc:	str	lr, [r1, #4]
   144d0:	str	lr, [r1]
   144d4:	mov	r2, lr
   144d8:	mov	r3, lr
   144dc:	bl	14428 <__assert_fail@plt+0x30f8>
   144e0:	mov	sp, fp
   144e4:	pop	{fp, pc}
   144e8:	push	{fp, lr}
   144ec:	mov	fp, sp
   144f0:	sub	sp, sp, #32
   144f4:	str	r0, [fp, #-8]
   144f8:	movw	r0, #0
   144fc:	str	r0, [fp, #-12]
   14500:	str	r0, [sp, #12]
   14504:	ldr	r0, [fp, #-8]
   14508:	bl	1124c <fileno@plt>
   1450c:	str	r0, [sp, #16]
   14510:	ldr	r0, [sp, #16]
   14514:	cmp	r0, #0
   14518:	bge	1452c <__assert_fail@plt+0x31fc>
   1451c:	ldr	r0, [fp, #-8]
   14520:	bl	11270 <fclose@plt>
   14524:	str	r0, [fp, #-4]
   14528:	b	145c8 <__assert_fail@plt+0x3298>
   1452c:	ldr	r0, [fp, #-8]
   14530:	bl	111b0 <__freading@plt>
   14534:	cmp	r0, #0
   14538:	beq	14570 <__assert_fail@plt+0x3240>
   1453c:	ldr	r0, [fp, #-8]
   14540:	bl	1124c <fileno@plt>
   14544:	mov	lr, sp
   14548:	mov	r1, #1
   1454c:	str	r1, [lr]
   14550:	mov	r1, #0
   14554:	mov	r2, r1
   14558:	mov	r3, r1
   1455c:	bl	11144 <lseek64@plt>
   14560:	and	r0, r0, r1
   14564:	cmn	r0, #1
   14568:	beq	1458c <__assert_fail@plt+0x325c>
   1456c:	b	14570 <__assert_fail@plt+0x3240>
   14570:	ldr	r0, [fp, #-8]
   14574:	bl	145d4 <__assert_fail@plt+0x32a4>
   14578:	cmp	r0, #0
   1457c:	beq	1458c <__assert_fail@plt+0x325c>
   14580:	bl	11228 <__errno_location@plt>
   14584:	ldr	r0, [r0]
   14588:	str	r0, [fp, #-12]
   1458c:	ldr	r0, [fp, #-8]
   14590:	bl	11270 <fclose@plt>
   14594:	str	r0, [sp, #12]
   14598:	ldr	r0, [fp, #-12]
   1459c:	cmp	r0, #0
   145a0:	beq	145c0 <__assert_fail@plt+0x3290>
   145a4:	ldr	r0, [fp, #-12]
   145a8:	str	r0, [sp, #8]
   145ac:	bl	11228 <__errno_location@plt>
   145b0:	ldr	lr, [sp, #8]
   145b4:	str	lr, [r0]
   145b8:	mvn	r0, #0
   145bc:	str	r0, [sp, #12]
   145c0:	ldr	r0, [sp, #12]
   145c4:	str	r0, [fp, #-4]
   145c8:	ldr	r0, [fp, #-4]
   145cc:	mov	sp, fp
   145d0:	pop	{fp, pc}
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	sub	sp, sp, #8
   145e0:	str	r0, [sp]
   145e4:	ldr	r0, [sp]
   145e8:	movw	r1, #0
   145ec:	cmp	r0, r1
   145f0:	beq	14604 <__assert_fail@plt+0x32d4>
   145f4:	ldr	r0, [sp]
   145f8:	bl	111b0 <__freading@plt>
   145fc:	cmp	r0, #0
   14600:	bne	14614 <__assert_fail@plt+0x32e4>
   14604:	ldr	r0, [sp]
   14608:	bl	110c0 <fflush@plt>
   1460c:	str	r0, [sp, #4]
   14610:	b	14628 <__assert_fail@plt+0x32f8>
   14614:	ldr	r0, [sp]
   14618:	bl	14634 <__assert_fail@plt+0x3304>
   1461c:	ldr	r0, [sp]
   14620:	bl	110c0 <fflush@plt>
   14624:	str	r0, [sp, #4]
   14628:	ldr	r0, [sp, #4]
   1462c:	mov	sp, fp
   14630:	pop	{fp, pc}
   14634:	push	{fp, lr}
   14638:	mov	fp, sp
   1463c:	sub	sp, sp, #16
   14640:	str	r0, [fp, #-4]
   14644:	ldr	r0, [fp, #-4]
   14648:	ldr	r0, [r0]
   1464c:	and	r0, r0, #256	; 0x100
   14650:	cmp	r0, #0
   14654:	beq	1467c <__assert_fail@plt+0x334c>
   14658:	ldr	r0, [fp, #-4]
   1465c:	mov	r1, sp
   14660:	mov	r2, #1
   14664:	str	r2, [r1]
   14668:	mov	r1, #0
   1466c:	mov	r2, r1
   14670:	mov	r3, r1
   14674:	bl	147f0 <__assert_fail@plt+0x34c0>
   14678:	str	r0, [sp, #8]
   1467c:	mov	sp, fp
   14680:	pop	{fp, pc}
   14684:	push	{fp, lr}
   14688:	mov	fp, sp
   1468c:	sub	sp, sp, #48	; 0x30
   14690:	str	r0, [fp, #-8]
   14694:	str	r1, [fp, #-12]
   14698:	ldr	r0, [fp, #-8]
   1469c:	ldr	r1, [fp, #-12]
   146a0:	bl	112c4 <fopen64@plt>
   146a4:	str	r0, [fp, #-16]
   146a8:	ldr	r0, [fp, #-16]
   146ac:	movw	r1, #0
   146b0:	cmp	r0, r1
   146b4:	beq	1479c <__assert_fail@plt+0x346c>
   146b8:	ldr	r0, [fp, #-16]
   146bc:	bl	1124c <fileno@plt>
   146c0:	str	r0, [fp, #-20]	; 0xffffffec
   146c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146c8:	movw	lr, #0
   146cc:	cmp	lr, r0
   146d0:	bgt	14798 <__assert_fail@plt+0x3468>
   146d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146d8:	cmp	r0, #2
   146dc:	bgt	14798 <__assert_fail@plt+0x3468>
   146e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   146e4:	bl	17564 <__assert_fail@plt+0x6234>
   146e8:	str	r0, [sp, #24]
   146ec:	ldr	r0, [sp, #24]
   146f0:	cmp	r0, #0
   146f4:	bge	14730 <__assert_fail@plt+0x3400>
   146f8:	bl	11228 <__errno_location@plt>
   146fc:	ldr	r0, [r0]
   14700:	str	r0, [sp, #20]
   14704:	ldr	r0, [fp, #-16]
   14708:	bl	144e8 <__assert_fail@plt+0x31b8>
   1470c:	ldr	lr, [sp, #20]
   14710:	str	r0, [sp, #12]
   14714:	str	lr, [sp, #8]
   14718:	bl	11228 <__errno_location@plt>
   1471c:	ldr	lr, [sp, #8]
   14720:	str	lr, [r0]
   14724:	movw	r0, #0
   14728:	str	r0, [fp, #-4]
   1472c:	b	147a4 <__assert_fail@plt+0x3474>
   14730:	ldr	r0, [fp, #-16]
   14734:	bl	144e8 <__assert_fail@plt+0x31b8>
   14738:	cmp	r0, #0
   1473c:	bne	1475c <__assert_fail@plt+0x342c>
   14740:	ldr	r0, [sp, #24]
   14744:	ldr	r1, [fp, #-12]
   14748:	bl	1106c <fdopen@plt>
   1474c:	str	r0, [fp, #-16]
   14750:	movw	r1, #0
   14754:	cmp	r0, r1
   14758:	bne	14794 <__assert_fail@plt+0x3464>
   1475c:	bl	11228 <__errno_location@plt>
   14760:	ldr	r0, [r0]
   14764:	str	r0, [sp, #16]
   14768:	ldr	r0, [sp, #24]
   1476c:	bl	11318 <close@plt>
   14770:	ldr	lr, [sp, #16]
   14774:	str	r0, [sp, #4]
   14778:	str	lr, [sp]
   1477c:	bl	11228 <__errno_location@plt>
   14780:	ldr	lr, [sp]
   14784:	str	lr, [r0]
   14788:	movw	r0, #0
   1478c:	str	r0, [fp, #-4]
   14790:	b	147a4 <__assert_fail@plt+0x3474>
   14794:	b	14798 <__assert_fail@plt+0x3468>
   14798:	b	1479c <__assert_fail@plt+0x346c>
   1479c:	ldr	r0, [fp, #-16]
   147a0:	str	r0, [fp, #-4]
   147a4:	ldr	r0, [fp, #-4]
   147a8:	mov	sp, fp
   147ac:	pop	{fp, pc}
   147b0:	push	{fp, lr}
   147b4:	mov	fp, sp
   147b8:	sub	sp, sp, #16
   147bc:	str	r0, [fp, #-4]
   147c0:	bl	11228 <__errno_location@plt>
   147c4:	ldr	r0, [r0]
   147c8:	str	r0, [sp, #8]
   147cc:	ldr	r0, [fp, #-4]
   147d0:	bl	110cc <free@plt>
   147d4:	ldr	r0, [sp, #8]
   147d8:	str	r0, [sp, #4]
   147dc:	bl	11228 <__errno_location@plt>
   147e0:	ldr	lr, [sp, #4]
   147e4:	str	lr, [r0]
   147e8:	mov	sp, fp
   147ec:	pop	{fp, pc}
   147f0:	push	{fp, lr}
   147f4:	mov	fp, sp
   147f8:	sub	sp, sp, #32
   147fc:	ldr	r1, [fp, #8]
   14800:	str	r0, [fp, #-8]
   14804:	str	r3, [sp, #20]
   14808:	str	r2, [sp, #16]
   1480c:	ldr	r0, [fp, #-8]
   14810:	ldr	r0, [r0, #8]
   14814:	ldr	r2, [fp, #-8]
   14818:	ldr	r2, [r2, #4]
   1481c:	cmp	r0, r2
   14820:	str	r1, [sp, #4]
   14824:	bne	148d0 <__assert_fail@plt+0x35a0>
   14828:	ldr	r0, [fp, #-8]
   1482c:	ldr	r0, [r0, #20]
   14830:	ldr	r1, [fp, #-8]
   14834:	ldr	r1, [r1, #16]
   14838:	cmp	r0, r1
   1483c:	bne	148d0 <__assert_fail@plt+0x35a0>
   14840:	ldr	r0, [fp, #-8]
   14844:	ldr	r0, [r0, #36]	; 0x24
   14848:	movw	r1, #0
   1484c:	cmp	r0, r1
   14850:	bne	148d0 <__assert_fail@plt+0x35a0>
   14854:	ldr	r0, [fp, #-8]
   14858:	bl	1124c <fileno@plt>
   1485c:	ldr	r2, [sp, #16]
   14860:	ldr	r3, [sp, #20]
   14864:	ldr	lr, [fp, #8]
   14868:	mov	r1, sp
   1486c:	str	lr, [r1]
   14870:	bl	11144 <lseek64@plt>
   14874:	str	r1, [sp, #12]
   14878:	str	r0, [sp, #8]
   1487c:	ldr	r0, [sp, #8]
   14880:	ldr	r1, [sp, #12]
   14884:	and	r0, r0, r1
   14888:	cmn	r0, #1
   1488c:	bne	148a0 <__assert_fail@plt+0x3570>
   14890:	b	14894 <__assert_fail@plt+0x3564>
   14894:	mvn	r0, #0
   14898:	str	r0, [fp, #-4]
   1489c:	b	148f0 <__assert_fail@plt+0x35c0>
   148a0:	ldr	r0, [fp, #-8]
   148a4:	ldr	r1, [r0]
   148a8:	bic	r1, r1, #16
   148ac:	str	r1, [r0]
   148b0:	ldr	r0, [sp, #8]
   148b4:	ldr	r1, [sp, #12]
   148b8:	ldr	r2, [fp, #-8]
   148bc:	str	r1, [r2, #84]	; 0x54
   148c0:	str	r0, [r2, #80]	; 0x50
   148c4:	movw	r0, #0
   148c8:	str	r0, [fp, #-4]
   148cc:	b	148f0 <__assert_fail@plt+0x35c0>
   148d0:	ldr	r0, [fp, #-8]
   148d4:	ldr	r2, [sp, #16]
   148d8:	ldr	r3, [sp, #20]
   148dc:	ldr	r1, [fp, #8]
   148e0:	mov	ip, sp
   148e4:	str	r1, [ip]
   148e8:	bl	1127c <fseeko64@plt>
   148ec:	str	r0, [fp, #-4]
   148f0:	ldr	r0, [fp, #-4]
   148f4:	mov	sp, fp
   148f8:	pop	{fp, pc}
   148fc:	push	{r4, r5, fp, lr}
   14900:	add	fp, sp, #8
   14904:	sub	sp, sp, #272	; 0x110
   14908:	add	r1, sp, #7
   1490c:	str	r0, [fp, #-16]
   14910:	ldr	r0, [fp, #-16]
   14914:	movw	r2, #257	; 0x101
   14918:	bl	17408 <__assert_fail@plt+0x60d8>
   1491c:	cmp	r0, #0
   14920:	beq	14934 <__assert_fail@plt+0x3604>
   14924:	movw	r0, #0
   14928:	and	r0, r0, #1
   1492c:	strb	r0, [fp, #-9]
   14930:	b	14988 <__assert_fail@plt+0x3658>
   14934:	add	r0, sp, #7
   14938:	movw	r1, #9326	; 0x246e
   1493c:	movt	r1, #2
   14940:	bl	1109c <strcmp@plt>
   14944:	cmp	r0, #0
   14948:	movw	r0, #1
   1494c:	str	r0, [sp]
   14950:	beq	14974 <__assert_fail@plt+0x3644>
   14954:	add	r0, sp, #7
   14958:	movw	r1, #9328	; 0x2470
   1495c:	movt	r1, #2
   14960:	bl	1109c <strcmp@plt>
   14964:	cmp	r0, #0
   14968:	movw	r0, #0
   1496c:	moveq	r0, #1
   14970:	str	r0, [sp]
   14974:	ldr	r0, [sp]
   14978:	mvn	r1, #0
   1497c:	eor	r0, r0, r1
   14980:	and	r0, r0, #1
   14984:	strb	r0, [fp, #-9]
   14988:	ldrb	r0, [fp, #-9]
   1498c:	and	r0, r0, #1
   14990:	sub	sp, fp, #8
   14994:	pop	{r4, r5, fp, pc}
   14998:	push	{fp, lr}
   1499c:	mov	fp, sp
   149a0:	sub	sp, sp, #8
   149a4:	str	r0, [sp, #4]
   149a8:	ldr	r0, [sp, #4]
   149ac:	movw	r1, #0
   149b0:	and	r1, r1, #255	; 0xff
   149b4:	movw	r2, #12
   149b8:	bl	11240 <memset@plt>
   149bc:	mov	sp, fp
   149c0:	pop	{fp, pc}
   149c4:	push	{fp, lr}
   149c8:	mov	fp, sp
   149cc:	sub	sp, sp, #8
   149d0:	str	r0, [sp, #4]
   149d4:	str	r1, [sp]
   149d8:	ldr	r0, [sp, #4]
   149dc:	ldr	r1, [sp]
   149e0:	movw	r2, #10
   149e4:	and	r2, r2, #255	; 0xff
   149e8:	bl	149f4 <__assert_fail@plt+0x36c4>
   149ec:	mov	sp, fp
   149f0:	pop	{fp, pc}
   149f4:	push	{fp, lr}
   149f8:	mov	fp, sp
   149fc:	sub	sp, sp, #48	; 0x30
   14a00:	str	r0, [fp, #-8]
   14a04:	str	r1, [fp, #-12]
   14a08:	strb	r2, [fp, #-13]
   14a0c:	ldr	r0, [fp, #-8]
   14a10:	ldr	r0, [r0, #8]
   14a14:	str	r0, [sp, #24]
   14a18:	ldr	r0, [fp, #-8]
   14a1c:	ldr	r0, [r0, #8]
   14a20:	str	r0, [sp, #20]
   14a24:	ldr	r0, [sp, #24]
   14a28:	ldr	r1, [fp, #-8]
   14a2c:	ldr	r1, [r1]
   14a30:	add	r0, r0, r1
   14a34:	str	r0, [sp, #16]
   14a38:	ldr	r0, [fp, #-12]
   14a3c:	bl	1130c <feof_unlocked@plt>
   14a40:	cmp	r0, #0
   14a44:	beq	14a54 <__assert_fail@plt+0x3724>
   14a48:	movw	r0, #0
   14a4c:	str	r0, [fp, #-4]
   14a50:	b	14b74 <__assert_fail@plt+0x3844>
   14a54:	b	14a58 <__assert_fail@plt+0x3728>
   14a58:	ldr	r0, [fp, #-12]
   14a5c:	bl	11114 <getc_unlocked@plt>
   14a60:	str	r0, [fp, #-20]	; 0xffffffec
   14a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a68:	cmn	r0, #1
   14a6c:	bne	14ac4 <__assert_fail@plt+0x3794>
   14a70:	ldr	r0, [sp, #20]
   14a74:	ldr	r1, [sp, #24]
   14a78:	cmp	r0, r1
   14a7c:	beq	14a90 <__assert_fail@plt+0x3760>
   14a80:	ldr	r0, [fp, #-12]
   14a84:	bl	11168 <ferror_unlocked@plt>
   14a88:	cmp	r0, #0
   14a8c:	beq	14a9c <__assert_fail@plt+0x376c>
   14a90:	movw	r0, #0
   14a94:	str	r0, [fp, #-4]
   14a98:	b	14b74 <__assert_fail@plt+0x3844>
   14a9c:	ldr	r0, [sp, #20]
   14aa0:	mvn	r1, #0
   14aa4:	add	r0, r0, r1
   14aa8:	ldrb	r0, [r0]
   14aac:	ldrb	r1, [fp, #-13]
   14ab0:	cmp	r0, r1
   14ab4:	bne	14abc <__assert_fail@plt+0x378c>
   14ab8:	b	14b58 <__assert_fail@plt+0x3828>
   14abc:	ldrb	r0, [fp, #-13]
   14ac0:	str	r0, [fp, #-20]	; 0xffffffec
   14ac4:	ldr	r0, [sp, #20]
   14ac8:	ldr	r1, [sp, #16]
   14acc:	cmp	r0, r1
   14ad0:	bne	14b34 <__assert_fail@plt+0x3804>
   14ad4:	ldr	r0, [fp, #-8]
   14ad8:	ldr	r0, [r0]
   14adc:	str	r0, [sp, #12]
   14ae0:	ldr	r0, [sp, #24]
   14ae4:	ldr	r1, [fp, #-8]
   14ae8:	movw	r2, #1
   14aec:	str	r2, [sp, #8]
   14af0:	mvn	r3, #0
   14af4:	ldr	ip, [sp, #8]
   14af8:	str	ip, [sp]
   14afc:	bl	18154 <__assert_fail@plt+0x6e24>
   14b00:	str	r0, [sp, #24]
   14b04:	ldr	r0, [sp, #24]
   14b08:	ldr	r1, [sp, #12]
   14b0c:	add	r0, r0, r1
   14b10:	str	r0, [sp, #20]
   14b14:	ldr	r0, [sp, #24]
   14b18:	ldr	r1, [fp, #-8]
   14b1c:	str	r0, [r1, #8]
   14b20:	ldr	r0, [sp, #24]
   14b24:	ldr	r1, [fp, #-8]
   14b28:	ldr	r1, [r1]
   14b2c:	add	r0, r0, r1
   14b30:	str	r0, [sp, #16]
   14b34:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b38:	ldr	r1, [sp, #20]
   14b3c:	add	r2, r1, #1
   14b40:	str	r2, [sp, #20]
   14b44:	strb	r0, [r1]
   14b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b4c:	ldrb	r1, [fp, #-13]
   14b50:	cmp	r0, r1
   14b54:	bne	14a58 <__assert_fail@plt+0x3728>
   14b58:	ldr	r0, [sp, #20]
   14b5c:	ldr	r1, [sp, #24]
   14b60:	sub	r0, r0, r1
   14b64:	ldr	r1, [fp, #-8]
   14b68:	str	r0, [r1, #4]
   14b6c:	ldr	r0, [fp, #-8]
   14b70:	str	r0, [fp, #-4]
   14b74:	ldr	r0, [fp, #-4]
   14b78:	mov	sp, fp
   14b7c:	pop	{fp, pc}
   14b80:	push	{fp, lr}
   14b84:	mov	fp, sp
   14b88:	sub	sp, sp, #8
   14b8c:	str	r0, [sp, #4]
   14b90:	ldr	r0, [sp, #4]
   14b94:	ldr	r0, [r0, #8]
   14b98:	bl	147b0 <__assert_fail@plt+0x3480>
   14b9c:	mov	sp, fp
   14ba0:	pop	{fp, pc}
   14ba4:	push	{fp, lr}
   14ba8:	mov	fp, sp
   14bac:	sub	sp, sp, #48	; 0x30
   14bb0:	str	r0, [fp, #-8]
   14bb4:	str	r1, [fp, #-12]
   14bb8:	str	r2, [fp, #-16]
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	str	r0, [sp, #24]
   14bc4:	ldr	r0, [fp, #-12]
   14bc8:	str	r0, [sp, #20]
   14bcc:	movw	r0, #0
   14bd0:	str	r0, [fp, #-20]	; 0xffffffec
   14bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14bd8:	ldr	r1, [fp, #-16]
   14bdc:	cmp	r0, r1
   14be0:	bcs	14c60 <__assert_fail@plt+0x3930>
   14be4:	ldr	r0, [sp, #24]
   14be8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bec:	add	r0, r0, r1
   14bf0:	ldrb	r0, [r0]
   14bf4:	strb	r0, [sp, #19]
   14bf8:	ldr	r0, [sp, #20]
   14bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c00:	add	r0, r0, r1
   14c04:	ldrb	r0, [r0]
   14c08:	strb	r0, [sp, #18]
   14c0c:	ldrb	r0, [sp, #19]
   14c10:	bl	112a0 <toupper@plt>
   14c14:	str	r0, [sp, #12]
   14c18:	ldrb	r0, [sp, #18]
   14c1c:	bl	112a0 <toupper@plt>
   14c20:	str	r0, [sp, #8]
   14c24:	ldr	r0, [sp, #12]
   14c28:	ldr	r1, [sp, #8]
   14c2c:	sub	r0, r0, r1
   14c30:	str	r0, [sp, #4]
   14c34:	ldr	r0, [sp, #4]
   14c38:	cmp	r0, #0
   14c3c:	beq	14c4c <__assert_fail@plt+0x391c>
   14c40:	ldr	r0, [sp, #4]
   14c44:	str	r0, [fp, #-4]
   14c48:	b	14c68 <__assert_fail@plt+0x3938>
   14c4c:	b	14c50 <__assert_fail@plt+0x3920>
   14c50:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c54:	add	r0, r0, #1
   14c58:	str	r0, [fp, #-20]	; 0xffffffec
   14c5c:	b	14bd4 <__assert_fail@plt+0x38a4>
   14c60:	movw	r0, #0
   14c64:	str	r0, [fp, #-4]
   14c68:	ldr	r0, [fp, #-4]
   14c6c:	mov	sp, fp
   14c70:	pop	{fp, pc}
   14c74:	push	{fp, lr}
   14c78:	mov	fp, sp
   14c7c:	sub	sp, sp, #24
   14c80:	str	r0, [fp, #-4]
   14c84:	ldr	r0, [fp, #-4]
   14c88:	movw	r1, #0
   14c8c:	cmp	r0, r1
   14c90:	bne	14cb4 <__assert_fail@plt+0x3984>
   14c94:	movw	r0, #12664	; 0x3178
   14c98:	movt	r0, #3
   14c9c:	ldr	r1, [r0]
   14ca0:	movw	r0, #9334	; 0x2476
   14ca4:	movt	r0, #2
   14ca8:	bl	112e8 <fputs@plt>
   14cac:	str	r0, [sp, #8]
   14cb0:	bl	11300 <abort@plt>
   14cb4:	ldr	r0, [fp, #-4]
   14cb8:	movw	r1, #47	; 0x2f
   14cbc:	bl	112ac <strrchr@plt>
   14cc0:	str	r0, [fp, #-8]
   14cc4:	ldr	r0, [fp, #-8]
   14cc8:	movw	r1, #0
   14ccc:	cmp	r0, r1
   14cd0:	beq	14ce4 <__assert_fail@plt+0x39b4>
   14cd4:	ldr	r0, [fp, #-8]
   14cd8:	add	r0, r0, #1
   14cdc:	str	r0, [sp, #4]
   14ce0:	b	14cec <__assert_fail@plt+0x39bc>
   14ce4:	ldr	r0, [fp, #-4]
   14ce8:	str	r0, [sp, #4]
   14cec:	ldr	r0, [sp, #4]
   14cf0:	str	r0, [sp, #12]
   14cf4:	ldr	r0, [sp, #12]
   14cf8:	ldr	r1, [fp, #-4]
   14cfc:	sub	r0, r0, r1
   14d00:	cmp	r0, #7
   14d04:	blt	14d70 <__assert_fail@plt+0x3a40>
   14d08:	ldr	r0, [sp, #12]
   14d0c:	mvn	r1, #6
   14d10:	add	r0, r0, r1
   14d14:	movw	r1, #9390	; 0x24ae
   14d18:	movt	r1, #2
   14d1c:	movw	r2, #7
   14d20:	bl	112f4 <strncmp@plt>
   14d24:	cmp	r0, #0
   14d28:	bne	14d70 <__assert_fail@plt+0x3a40>
   14d2c:	ldr	r0, [sp, #12]
   14d30:	str	r0, [fp, #-4]
   14d34:	ldr	r0, [sp, #12]
   14d38:	movw	r1, #9398	; 0x24b6
   14d3c:	movt	r1, #2
   14d40:	movw	r2, #3
   14d44:	bl	112f4 <strncmp@plt>
   14d48:	cmp	r0, #0
   14d4c:	bne	14d6c <__assert_fail@plt+0x3a3c>
   14d50:	ldr	r0, [sp, #12]
   14d54:	add	r0, r0, #3
   14d58:	str	r0, [fp, #-4]
   14d5c:	ldr	r0, [fp, #-4]
   14d60:	movw	r1, #12648	; 0x3168
   14d64:	movt	r1, #3
   14d68:	str	r0, [r1]
   14d6c:	b	14d70 <__assert_fail@plt+0x3a40>
   14d70:	ldr	r0, [fp, #-4]
   14d74:	movw	r1, #12808	; 0x3208
   14d78:	movt	r1, #3
   14d7c:	str	r0, [r1]
   14d80:	ldr	r0, [fp, #-4]
   14d84:	movw	r1, #12652	; 0x316c
   14d88:	movt	r1, #3
   14d8c:	str	r0, [r1]
   14d90:	mov	sp, fp
   14d94:	pop	{fp, pc}
   14d98:	push	{fp, lr}
   14d9c:	mov	fp, sp
   14da0:	sub	sp, sp, #24
   14da4:	str	r0, [fp, #-4]
   14da8:	bl	11228 <__errno_location@plt>
   14dac:	ldr	r0, [r0]
   14db0:	str	r0, [fp, #-8]
   14db4:	ldr	r0, [fp, #-4]
   14db8:	movw	lr, #0
   14dbc:	cmp	r0, lr
   14dc0:	beq	14dd0 <__assert_fail@plt+0x3aa0>
   14dc4:	ldr	r0, [fp, #-4]
   14dc8:	str	r0, [sp, #8]
   14dcc:	b	14de0 <__assert_fail@plt+0x3ab0>
   14dd0:	movw	r0, #12812	; 0x320c
   14dd4:	movt	r0, #3
   14dd8:	str	r0, [sp, #8]
   14ddc:	b	14de0 <__assert_fail@plt+0x3ab0>
   14de0:	ldr	r0, [sp, #8]
   14de4:	movw	r1, #48	; 0x30
   14de8:	bl	1ab7c <__assert_fail@plt+0x984c>
   14dec:	str	r0, [sp, #12]
   14df0:	ldr	r0, [fp, #-8]
   14df4:	str	r0, [sp, #4]
   14df8:	bl	11228 <__errno_location@plt>
   14dfc:	ldr	r1, [sp, #4]
   14e00:	str	r1, [r0]
   14e04:	ldr	r0, [sp, #12]
   14e08:	mov	sp, fp
   14e0c:	pop	{fp, pc}
   14e10:	sub	sp, sp, #8
   14e14:	str	r0, [sp, #4]
   14e18:	ldr	r0, [sp, #4]
   14e1c:	movw	r1, #0
   14e20:	cmp	r0, r1
   14e24:	beq	14e34 <__assert_fail@plt+0x3b04>
   14e28:	ldr	r0, [sp, #4]
   14e2c:	str	r0, [sp]
   14e30:	b	14e44 <__assert_fail@plt+0x3b14>
   14e34:	movw	r0, #12812	; 0x320c
   14e38:	movt	r0, #3
   14e3c:	str	r0, [sp]
   14e40:	b	14e44 <__assert_fail@plt+0x3b14>
   14e44:	ldr	r0, [sp]
   14e48:	ldr	r0, [r0]
   14e4c:	add	sp, sp, #8
   14e50:	bx	lr
   14e54:	sub	sp, sp, #16
   14e58:	str	r0, [sp, #12]
   14e5c:	str	r1, [sp, #8]
   14e60:	ldr	r0, [sp, #8]
   14e64:	ldr	r1, [sp, #12]
   14e68:	movw	r2, #0
   14e6c:	cmp	r1, r2
   14e70:	str	r0, [sp, #4]
   14e74:	beq	14e84 <__assert_fail@plt+0x3b54>
   14e78:	ldr	r0, [sp, #12]
   14e7c:	str	r0, [sp]
   14e80:	b	14e94 <__assert_fail@plt+0x3b64>
   14e84:	movw	r0, #12812	; 0x320c
   14e88:	movt	r0, #3
   14e8c:	str	r0, [sp]
   14e90:	b	14e94 <__assert_fail@plt+0x3b64>
   14e94:	ldr	r0, [sp]
   14e98:	ldr	r1, [sp, #4]
   14e9c:	str	r1, [r0]
   14ea0:	add	sp, sp, #16
   14ea4:	bx	lr
   14ea8:	sub	sp, sp, #32
   14eac:	str	r0, [sp, #28]
   14eb0:	strb	r1, [sp, #27]
   14eb4:	str	r2, [sp, #20]
   14eb8:	ldrb	r0, [sp, #27]
   14ebc:	strb	r0, [sp, #19]
   14ec0:	ldr	r0, [sp, #28]
   14ec4:	movw	r1, #0
   14ec8:	cmp	r0, r1
   14ecc:	beq	14edc <__assert_fail@plt+0x3bac>
   14ed0:	ldr	r0, [sp, #28]
   14ed4:	str	r0, [sp]
   14ed8:	b	14eec <__assert_fail@plt+0x3bbc>
   14edc:	movw	r0, #12812	; 0x320c
   14ee0:	movt	r0, #3
   14ee4:	str	r0, [sp]
   14ee8:	b	14eec <__assert_fail@plt+0x3bbc>
   14eec:	ldr	r0, [sp]
   14ef0:	add	r0, r0, #8
   14ef4:	ldrb	r1, [sp, #19]
   14ef8:	lsr	r1, r1, #5
   14efc:	add	r0, r0, r1, lsl #2
   14f00:	str	r0, [sp, #12]
   14f04:	ldrb	r0, [sp, #19]
   14f08:	and	r0, r0, #31
   14f0c:	str	r0, [sp, #8]
   14f10:	ldr	r0, [sp, #12]
   14f14:	ldr	r0, [r0]
   14f18:	ldr	r1, [sp, #8]
   14f1c:	lsr	r0, r0, r1
   14f20:	and	r0, r0, #1
   14f24:	str	r0, [sp, #4]
   14f28:	ldr	r0, [sp, #20]
   14f2c:	and	r0, r0, #1
   14f30:	ldr	r1, [sp, #4]
   14f34:	eor	r0, r0, r1
   14f38:	ldr	r1, [sp, #8]
   14f3c:	lsl	r0, r0, r1
   14f40:	ldr	r1, [sp, #12]
   14f44:	ldr	r2, [r1]
   14f48:	eor	r0, r2, r0
   14f4c:	str	r0, [r1]
   14f50:	ldr	r0, [sp, #4]
   14f54:	add	sp, sp, #32
   14f58:	bx	lr
   14f5c:	sub	sp, sp, #12
   14f60:	str	r0, [sp, #8]
   14f64:	str	r1, [sp, #4]
   14f68:	ldr	r0, [sp, #8]
   14f6c:	movw	r1, #0
   14f70:	cmp	r0, r1
   14f74:	bne	14f84 <__assert_fail@plt+0x3c54>
   14f78:	movw	r0, #12812	; 0x320c
   14f7c:	movt	r0, #3
   14f80:	str	r0, [sp, #8]
   14f84:	ldr	r0, [sp, #8]
   14f88:	ldr	r0, [r0, #4]
   14f8c:	str	r0, [sp]
   14f90:	ldr	r0, [sp, #4]
   14f94:	ldr	r1, [sp, #8]
   14f98:	str	r0, [r1, #4]
   14f9c:	ldr	r0, [sp]
   14fa0:	add	sp, sp, #12
   14fa4:	bx	lr
   14fa8:	push	{fp, lr}
   14fac:	mov	fp, sp
   14fb0:	sub	sp, sp, #16
   14fb4:	str	r0, [fp, #-4]
   14fb8:	str	r1, [sp, #8]
   14fbc:	str	r2, [sp, #4]
   14fc0:	ldr	r0, [fp, #-4]
   14fc4:	movw	r1, #0
   14fc8:	cmp	r0, r1
   14fcc:	bne	14fdc <__assert_fail@plt+0x3cac>
   14fd0:	movw	r0, #12812	; 0x320c
   14fd4:	movt	r0, #3
   14fd8:	str	r0, [fp, #-4]
   14fdc:	ldr	r0, [fp, #-4]
   14fe0:	movw	r1, #10
   14fe4:	str	r1, [r0]
   14fe8:	ldr	r0, [sp, #8]
   14fec:	movw	r1, #0
   14ff0:	cmp	r0, r1
   14ff4:	beq	15008 <__assert_fail@plt+0x3cd8>
   14ff8:	ldr	r0, [sp, #4]
   14ffc:	movw	r1, #0
   15000:	cmp	r0, r1
   15004:	bne	1500c <__assert_fail@plt+0x3cdc>
   15008:	bl	11300 <abort@plt>
   1500c:	ldr	r0, [sp, #8]
   15010:	ldr	r1, [fp, #-4]
   15014:	str	r0, [r1, #40]	; 0x28
   15018:	ldr	r0, [sp, #4]
   1501c:	ldr	r1, [fp, #-4]
   15020:	str	r0, [r1, #44]	; 0x2c
   15024:	mov	sp, fp
   15028:	pop	{fp, pc}
   1502c:	push	{r4, r5, r6, sl, fp, lr}
   15030:	add	fp, sp, #16
   15034:	sub	sp, sp, #64	; 0x40
   15038:	ldr	ip, [fp, #8]
   1503c:	str	r0, [fp, #-20]	; 0xffffffec
   15040:	str	r1, [fp, #-24]	; 0xffffffe8
   15044:	str	r2, [fp, #-28]	; 0xffffffe4
   15048:	str	r3, [fp, #-32]	; 0xffffffe0
   1504c:	ldr	r0, [fp, #8]
   15050:	movw	r1, #0
   15054:	cmp	r0, r1
   15058:	str	ip, [sp, #32]
   1505c:	beq	1506c <__assert_fail@plt+0x3d3c>
   15060:	ldr	r0, [fp, #8]
   15064:	str	r0, [sp, #28]
   15068:	b	1507c <__assert_fail@plt+0x3d4c>
   1506c:	movw	r0, #12812	; 0x320c
   15070:	movt	r0, #3
   15074:	str	r0, [sp, #28]
   15078:	b	1507c <__assert_fail@plt+0x3d4c>
   1507c:	ldr	r0, [sp, #28]
   15080:	str	r0, [fp, #-36]	; 0xffffffdc
   15084:	bl	11228 <__errno_location@plt>
   15088:	ldr	r0, [r0]
   1508c:	str	r0, [sp, #40]	; 0x28
   15090:	ldr	r0, [fp, #-20]	; 0xffffffec
   15094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15098:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1509c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   150a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   150a4:	ldr	lr, [lr]
   150a8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   150ac:	ldr	ip, [ip, #4]
   150b0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   150b4:	add	r4, r4, #8
   150b8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   150bc:	ldr	r5, [r5, #40]	; 0x28
   150c0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   150c4:	ldr	r6, [r6, #44]	; 0x2c
   150c8:	str	lr, [sp]
   150cc:	str	ip, [sp, #4]
   150d0:	str	r4, [sp, #8]
   150d4:	str	r5, [sp, #12]
   150d8:	str	r6, [sp, #16]
   150dc:	bl	15104 <__assert_fail@plt+0x3dd4>
   150e0:	str	r0, [sp, #36]	; 0x24
   150e4:	ldr	r0, [sp, #40]	; 0x28
   150e8:	str	r0, [sp, #24]
   150ec:	bl	11228 <__errno_location@plt>
   150f0:	ldr	r1, [sp, #24]
   150f4:	str	r1, [r0]
   150f8:	ldr	r0, [sp, #36]	; 0x24
   150fc:	sub	sp, fp, #16
   15100:	pop	{r4, r5, r6, sl, fp, pc}
   15104:	push	{r4, r5, r6, sl, fp, lr}
   15108:	add	fp, sp, #16
   1510c:	sub	sp, sp, #168	; 0xa8
   15110:	ldr	ip, [fp, #24]
   15114:	ldr	lr, [fp, #20]
   15118:	ldr	r4, [fp, #16]
   1511c:	ldr	r5, [fp, #12]
   15120:	ldr	r6, [fp, #8]
   15124:	str	r0, [fp, #-24]	; 0xffffffe8
   15128:	str	r1, [fp, #-28]	; 0xffffffe4
   1512c:	str	r2, [fp, #-32]	; 0xffffffe0
   15130:	str	r3, [fp, #-36]	; 0xffffffdc
   15134:	movw	r0, #0
   15138:	str	r0, [fp, #-44]	; 0xffffffd4
   1513c:	str	r0, [fp, #-48]	; 0xffffffd0
   15140:	str	r0, [fp, #-52]	; 0xffffffcc
   15144:	str	r0, [fp, #-56]	; 0xffffffc8
   15148:	movw	r0, #0
   1514c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15150:	str	r6, [sp, #80]	; 0x50
   15154:	str	lr, [sp, #76]	; 0x4c
   15158:	str	r4, [sp, #72]	; 0x48
   1515c:	str	r5, [sp, #68]	; 0x44
   15160:	str	ip, [sp, #64]	; 0x40
   15164:	bl	11150 <__ctype_get_mb_cur_max@plt>
   15168:	cmp	r0, #1
   1516c:	movw	r0, #0
   15170:	moveq	r0, #1
   15174:	and	r0, r0, #1
   15178:	strb	r0, [fp, #-58]	; 0xffffffc6
   1517c:	ldr	r0, [fp, #12]
   15180:	and	r0, r0, #2
   15184:	cmp	r0, #0
   15188:	movw	r0, #0
   1518c:	movne	r0, #1
   15190:	and	r0, r0, #1
   15194:	strb	r0, [fp, #-59]	; 0xffffffc5
   15198:	movw	r0, #0
   1519c:	strb	r0, [fp, #-60]	; 0xffffffc4
   151a0:	strb	r0, [fp, #-61]	; 0xffffffc3
   151a4:	movw	r0, #1
   151a8:	strb	r0, [fp, #-62]	; 0xffffffc2
   151ac:	ldr	r0, [fp, #8]
   151b0:	cmp	r0, #10
   151b4:	str	r0, [sp, #60]	; 0x3c
   151b8:	bhi	153e0 <__assert_fail@plt+0x40b0>
   151bc:	add	r0, pc, #8
   151c0:	ldr	r1, [sp, #60]	; 0x3c
   151c4:	ldr	r0, [r0, r1, lsl #2]
   151c8:	mov	pc, r0
   151cc:	ldrdeq	r5, [r1], -r4
   151d0:	andeq	r5, r1, r0, asr r3
   151d4:	andeq	r5, r1, r0, ror r3
   151d8:	andeq	r5, r1, r8, asr #6
   151dc:	andeq	r5, r1, r8, asr r3
   151e0:	andeq	r5, r1, r8, lsl #4
   151e4:	strdeq	r5, [r1], -r8
   151e8:	andeq	r5, r1, ip, ror #4
   151ec:	andeq	r5, r1, r0, lsl #5
   151f0:	andeq	r5, r1, r0, lsl #5
   151f4:	andeq	r5, r1, r0, lsl #5
   151f8:	movw	r0, #5
   151fc:	str	r0, [fp, #8]
   15200:	movw	r0, #1
   15204:	strb	r0, [fp, #-59]	; 0xffffffc5
   15208:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1520c:	tst	r0, #1
   15210:	bne	1524c <__assert_fail@plt+0x3f1c>
   15214:	b	15218 <__assert_fail@plt+0x3ee8>
   15218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1521c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15220:	cmp	r0, r1
   15224:	bcs	1523c <__assert_fail@plt+0x3f0c>
   15228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1522c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15230:	add	r0, r0, r1
   15234:	movw	r1, #34	; 0x22
   15238:	strb	r1, [r0]
   1523c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15240:	add	r0, r0, #1
   15244:	str	r0, [fp, #-44]	; 0xffffffd4
   15248:	b	1524c <__assert_fail@plt+0x3f1c>
   1524c:	movw	r0, #1
   15250:	strb	r0, [fp, #-57]	; 0xffffffc7
   15254:	movw	r0, #9478	; 0x2506
   15258:	movt	r0, #2
   1525c:	str	r0, [fp, #-52]	; 0xffffffcc
   15260:	movw	r0, #1
   15264:	str	r0, [fp, #-56]	; 0xffffffc8
   15268:	b	153e4 <__assert_fail@plt+0x40b4>
   1526c:	movw	r0, #1
   15270:	strb	r0, [fp, #-57]	; 0xffffffc7
   15274:	movw	r0, #0
   15278:	strb	r0, [fp, #-59]	; 0xffffffc5
   1527c:	b	153e4 <__assert_fail@plt+0x40b4>
   15280:	ldr	r0, [fp, #8]
   15284:	cmp	r0, #10
   15288:	beq	152b4 <__assert_fail@plt+0x3f84>
   1528c:	ldr	r1, [fp, #8]
   15290:	movw	r0, #9480	; 0x2508
   15294:	movt	r0, #2
   15298:	bl	172f4 <__assert_fail@plt+0x5fc4>
   1529c:	str	r0, [fp, #20]
   152a0:	ldr	r1, [fp, #8]
   152a4:	movw	r0, #9482	; 0x250a
   152a8:	movt	r0, #2
   152ac:	bl	172f4 <__assert_fail@plt+0x5fc4>
   152b0:	str	r0, [fp, #24]
   152b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   152b8:	tst	r0, #1
   152bc:	bne	15328 <__assert_fail@plt+0x3ff8>
   152c0:	ldr	r0, [fp, #20]
   152c4:	str	r0, [fp, #-52]	; 0xffffffcc
   152c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   152cc:	ldrsb	r0, [r0]
   152d0:	cmp	r0, #0
   152d4:	beq	15324 <__assert_fail@plt+0x3ff4>
   152d8:	b	152dc <__assert_fail@plt+0x3fac>
   152dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152e4:	cmp	r0, r1
   152e8:	bcs	15304 <__assert_fail@plt+0x3fd4>
   152ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   152f0:	ldrb	r0, [r0]
   152f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   152fc:	add	r1, r1, r2
   15300:	strb	r0, [r1]
   15304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15308:	add	r0, r0, #1
   1530c:	str	r0, [fp, #-44]	; 0xffffffd4
   15310:	b	15314 <__assert_fail@plt+0x3fe4>
   15314:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15318:	add	r0, r0, #1
   1531c:	str	r0, [fp, #-52]	; 0xffffffcc
   15320:	b	152c8 <__assert_fail@plt+0x3f98>
   15324:	b	15328 <__assert_fail@plt+0x3ff8>
   15328:	movw	r0, #1
   1532c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15330:	ldr	r0, [fp, #24]
   15334:	str	r0, [fp, #-52]	; 0xffffffcc
   15338:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1533c:	bl	11204 <strlen@plt>
   15340:	str	r0, [fp, #-56]	; 0xffffffc8
   15344:	b	153e4 <__assert_fail@plt+0x40b4>
   15348:	movw	r0, #1
   1534c:	strb	r0, [fp, #-57]	; 0xffffffc7
   15350:	movw	r0, #1
   15354:	strb	r0, [fp, #-59]	; 0xffffffc5
   15358:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1535c:	tst	r0, #1
   15360:	bne	1536c <__assert_fail@plt+0x403c>
   15364:	movw	r0, #1
   15368:	strb	r0, [fp, #-57]	; 0xffffffc7
   1536c:	b	15370 <__assert_fail@plt+0x4040>
   15370:	movw	r0, #2
   15374:	str	r0, [fp, #8]
   15378:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1537c:	tst	r0, #1
   15380:	bne	153bc <__assert_fail@plt+0x408c>
   15384:	b	15388 <__assert_fail@plt+0x4058>
   15388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1538c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15390:	cmp	r0, r1
   15394:	bcs	153ac <__assert_fail@plt+0x407c>
   15398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1539c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153a0:	add	r0, r0, r1
   153a4:	movw	r1, #39	; 0x27
   153a8:	strb	r1, [r0]
   153ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153b0:	add	r0, r0, #1
   153b4:	str	r0, [fp, #-44]	; 0xffffffd4
   153b8:	b	153bc <__assert_fail@plt+0x408c>
   153bc:	movw	r0, #9482	; 0x250a
   153c0:	movt	r0, #2
   153c4:	str	r0, [fp, #-52]	; 0xffffffcc
   153c8:	movw	r0, #1
   153cc:	str	r0, [fp, #-56]	; 0xffffffc8
   153d0:	b	153e4 <__assert_fail@plt+0x40b4>
   153d4:	movw	r0, #0
   153d8:	strb	r0, [fp, #-59]	; 0xffffffc5
   153dc:	b	153e4 <__assert_fail@plt+0x40b4>
   153e0:	bl	11300 <abort@plt>
   153e4:	movw	r0, #0
   153e8:	str	r0, [fp, #-40]	; 0xffffffd8
   153ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153f0:	cmn	r0, #1
   153f4:	bne	15420 <__assert_fail@plt+0x40f0>
   153f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15400:	add	r0, r0, r1
   15404:	ldrb	r0, [r0]
   15408:	cmp	r0, #0
   1540c:	movw	r0, #0
   15410:	moveq	r0, #1
   15414:	and	r0, r0, #1
   15418:	str	r0, [sp, #56]	; 0x38
   1541c:	b	1543c <__assert_fail@plt+0x410c>
   15420:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15424:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15428:	cmp	r0, r1
   1542c:	movw	r0, #0
   15430:	moveq	r0, #1
   15434:	and	r0, r0, #1
   15438:	str	r0, [sp, #56]	; 0x38
   1543c:	ldr	r0, [sp, #56]	; 0x38
   15440:	cmp	r0, #0
   15444:	movw	r0, #0
   15448:	movne	r0, #1
   1544c:	mvn	r1, #0
   15450:	eor	r0, r0, r1
   15454:	tst	r0, #1
   15458:	beq	16648 <__assert_fail@plt+0x5318>
   1545c:	movw	r0, #0
   15460:	strb	r0, [fp, #-65]	; 0xffffffbf
   15464:	strb	r0, [fp, #-66]	; 0xffffffbe
   15468:	strb	r0, [fp, #-67]	; 0xffffffbd
   1546c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15470:	tst	r0, #1
   15474:	beq	15520 <__assert_fail@plt+0x41f0>
   15478:	ldr	r0, [fp, #8]
   1547c:	cmp	r0, #2
   15480:	beq	15520 <__assert_fail@plt+0x41f0>
   15484:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15488:	cmp	r0, #0
   1548c:	beq	15520 <__assert_fail@plt+0x41f0>
   15490:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15494:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15498:	add	r0, r0, r1
   1549c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   154a0:	cmn	r1, #1
   154a4:	str	r0, [sp, #52]	; 0x34
   154a8:	bne	154d0 <__assert_fail@plt+0x41a0>
   154ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   154b0:	movw	r1, #1
   154b4:	cmp	r1, r0
   154b8:	bcs	154d0 <__assert_fail@plt+0x41a0>
   154bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154c0:	bl	11204 <strlen@plt>
   154c4:	str	r0, [fp, #-36]	; 0xffffffdc
   154c8:	str	r0, [sp, #48]	; 0x30
   154cc:	b	154d8 <__assert_fail@plt+0x41a8>
   154d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   154d4:	str	r0, [sp, #48]	; 0x30
   154d8:	ldr	r0, [sp, #48]	; 0x30
   154dc:	ldr	r1, [sp, #52]	; 0x34
   154e0:	cmp	r1, r0
   154e4:	bhi	15520 <__assert_fail@plt+0x41f0>
   154e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154f0:	add	r0, r0, r1
   154f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   154f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   154fc:	bl	11108 <memcmp@plt>
   15500:	cmp	r0, #0
   15504:	bne	15520 <__assert_fail@plt+0x41f0>
   15508:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1550c:	tst	r0, #1
   15510:	beq	15518 <__assert_fail@plt+0x41e8>
   15514:	b	167c8 <__assert_fail@plt+0x5498>
   15518:	movw	r0, #1
   1551c:	strb	r0, [fp, #-65]	; 0xffffffbf
   15520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15524:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15528:	ldrb	r0, [r0, r1]
   1552c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15530:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15534:	mov	r1, r0
   15538:	cmp	r0, #126	; 0x7e
   1553c:	str	r1, [sp, #44]	; 0x2c
   15540:	bhi	15db0 <__assert_fail@plt+0x4a80>
   15544:	add	r0, pc, #8
   15548:	ldr	r1, [sp, #44]	; 0x2c
   1554c:	ldr	r0, [r0, r1, lsl #2]
   15550:	mov	pc, r0
   15554:	andeq	r5, r1, r0, asr r7
   15558:			; <UNDEFINED> instruction: 0x00015db0
   1555c:			; <UNDEFINED> instruction: 0x00015db0
   15560:			; <UNDEFINED> instruction: 0x00015db0
   15564:			; <UNDEFINED> instruction: 0x00015db0
   15568:			; <UNDEFINED> instruction: 0x00015db0
   1556c:			; <UNDEFINED> instruction: 0x00015db0
   15570:	andeq	r5, r1, r8, asr fp
   15574:	andeq	r5, r1, r4, ror #22
   15578:	muleq	r1, r4, fp
   1557c:	andeq	r5, r1, ip, ror fp
   15580:	andeq	r5, r1, r0, lsr #23
   15584:	andeq	r5, r1, r0, ror fp
   15588:	andeq	r5, r1, r8, lsl #23
   1558c:			; <UNDEFINED> instruction: 0x00015db0
   15590:			; <UNDEFINED> instruction: 0x00015db0
   15594:			; <UNDEFINED> instruction: 0x00015db0
   15598:			; <UNDEFINED> instruction: 0x00015db0
   1559c:			; <UNDEFINED> instruction: 0x00015db0
   155a0:			; <UNDEFINED> instruction: 0x00015db0
   155a4:			; <UNDEFINED> instruction: 0x00015db0
   155a8:			; <UNDEFINED> instruction: 0x00015db0
   155ac:			; <UNDEFINED> instruction: 0x00015db0
   155b0:			; <UNDEFINED> instruction: 0x00015db0
   155b4:			; <UNDEFINED> instruction: 0x00015db0
   155b8:			; <UNDEFINED> instruction: 0x00015db0
   155bc:			; <UNDEFINED> instruction: 0x00015db0
   155c0:			; <UNDEFINED> instruction: 0x00015db0
   155c4:			; <UNDEFINED> instruction: 0x00015db0
   155c8:			; <UNDEFINED> instruction: 0x00015db0
   155cc:			; <UNDEFINED> instruction: 0x00015db0
   155d0:			; <UNDEFINED> instruction: 0x00015db0
   155d4:	andeq	r5, r1, r4, lsl #25
   155d8:	andeq	r5, r1, ip, lsl #25
   155dc:	andeq	r5, r1, ip, lsl #25
   155e0:	andeq	r5, r1, r0, ror ip
   155e4:	andeq	r5, r1, ip, lsl #25
   155e8:	andeq	r5, r1, r4, lsr #27
   155ec:	andeq	r5, r1, ip, lsl #25
   155f0:	andeq	r5, r1, ip, lsr #25
   155f4:	andeq	r5, r1, ip, lsl #25
   155f8:	andeq	r5, r1, ip, lsl #25
   155fc:	andeq	r5, r1, ip, lsl #25
   15600:	andeq	r5, r1, r4, lsr #27
   15604:	andeq	r5, r1, r4, lsr #27
   15608:	andeq	r5, r1, r4, lsr #27
   1560c:	andeq	r5, r1, r4, lsr #27
   15610:	andeq	r5, r1, r4, lsr #27
   15614:	andeq	r5, r1, r4, lsr #27
   15618:	andeq	r5, r1, r4, lsr #27
   1561c:	andeq	r5, r1, r4, lsr #27
   15620:	andeq	r5, r1, r4, lsr #27
   15624:	andeq	r5, r1, r4, lsr #27
   15628:	andeq	r5, r1, r4, lsr #27
   1562c:	andeq	r5, r1, r4, lsr #27
   15630:	andeq	r5, r1, r4, lsr #27
   15634:	andeq	r5, r1, r4, lsr #27
   15638:	andeq	r5, r1, r4, lsr #27
   1563c:	andeq	r5, r1, r4, lsr #27
   15640:	andeq	r5, r1, ip, lsl #25
   15644:	andeq	r5, r1, ip, lsl #25
   15648:	andeq	r5, r1, ip, lsl #25
   1564c:	andeq	r5, r1, ip, lsl #25
   15650:	andeq	r5, r1, ip, asr r9
   15654:			; <UNDEFINED> instruction: 0x00015db0
   15658:	andeq	r5, r1, r4, lsr #27
   1565c:	andeq	r5, r1, r4, lsr #27
   15660:	andeq	r5, r1, r4, lsr #27
   15664:	andeq	r5, r1, r4, lsr #27
   15668:	andeq	r5, r1, r4, lsr #27
   1566c:	andeq	r5, r1, r4, lsr #27
   15670:	andeq	r5, r1, r4, lsr #27
   15674:	andeq	r5, r1, r4, lsr #27
   15678:	andeq	r5, r1, r4, lsr #27
   1567c:	andeq	r5, r1, r4, lsr #27
   15680:	andeq	r5, r1, r4, lsr #27
   15684:	andeq	r5, r1, r4, lsr #27
   15688:	andeq	r5, r1, r4, lsr #27
   1568c:	andeq	r5, r1, r4, lsr #27
   15690:	andeq	r5, r1, r4, lsr #27
   15694:	andeq	r5, r1, r4, lsr #27
   15698:	andeq	r5, r1, r4, lsr #27
   1569c:	andeq	r5, r1, r4, lsr #27
   156a0:	andeq	r5, r1, r4, lsr #27
   156a4:	andeq	r5, r1, r4, lsr #27
   156a8:	andeq	r5, r1, r4, lsr #27
   156ac:	andeq	r5, r1, r4, lsr #27
   156b0:	andeq	r5, r1, r4, lsr #27
   156b4:	andeq	r5, r1, r4, lsr #27
   156b8:	andeq	r5, r1, r4, lsr #27
   156bc:	andeq	r5, r1, r4, lsr #27
   156c0:	andeq	r5, r1, ip, lsl #25
   156c4:	andeq	r5, r1, ip, lsr #23
   156c8:	andeq	r5, r1, r4, lsr #27
   156cc:	andeq	r5, r1, ip, lsl #25
   156d0:	andeq	r5, r1, r4, lsr #27
   156d4:	andeq	r5, r1, ip, lsl #25
   156d8:	andeq	r5, r1, r4, lsr #27
   156dc:	andeq	r5, r1, r4, lsr #27
   156e0:	andeq	r5, r1, r4, lsr #27
   156e4:	andeq	r5, r1, r4, lsr #27
   156e8:	andeq	r5, r1, r4, lsr #27
   156ec:	andeq	r5, r1, r4, lsr #27
   156f0:	andeq	r5, r1, r4, lsr #27
   156f4:	andeq	r5, r1, r4, lsr #27
   156f8:	andeq	r5, r1, r4, lsr #27
   156fc:	andeq	r5, r1, r4, lsr #27
   15700:	andeq	r5, r1, r4, lsr #27
   15704:	andeq	r5, r1, r4, lsr #27
   15708:	andeq	r5, r1, r4, lsr #27
   1570c:	andeq	r5, r1, r4, lsr #27
   15710:	andeq	r5, r1, r4, lsr #27
   15714:	andeq	r5, r1, r4, lsr #27
   15718:	andeq	r5, r1, r4, lsr #27
   1571c:	andeq	r5, r1, r4, lsr #27
   15720:	andeq	r5, r1, r4, lsr #27
   15724:	andeq	r5, r1, r4, lsr #27
   15728:	andeq	r5, r1, r4, lsr #27
   1572c:	andeq	r5, r1, r4, lsr #27
   15730:	andeq	r5, r1, r4, lsr #27
   15734:	andeq	r5, r1, r4, lsr #27
   15738:	andeq	r5, r1, r4, lsr #27
   1573c:	andeq	r5, r1, r4, lsr #27
   15740:	andeq	r5, r1, ip, lsr ip
   15744:	andeq	r5, r1, ip, lsl #25
   15748:	andeq	r5, r1, ip, lsr ip
   1574c:	andeq	r5, r1, r0, ror ip
   15750:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15754:	tst	r0, #1
   15758:	beq	15940 <__assert_fail@plt+0x4610>
   1575c:	b	15760 <__assert_fail@plt+0x4430>
   15760:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15764:	tst	r0, #1
   15768:	beq	15770 <__assert_fail@plt+0x4440>
   1576c:	b	167c8 <__assert_fail@plt+0x5498>
   15770:	movw	r0, #1
   15774:	strb	r0, [fp, #-66]	; 0xffffffbe
   15778:	ldr	r0, [fp, #8]
   1577c:	cmp	r0, #2
   15780:	bne	15834 <__assert_fail@plt+0x4504>
   15784:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15788:	tst	r0, #1
   1578c:	bne	15834 <__assert_fail@plt+0x4504>
   15790:	b	15794 <__assert_fail@plt+0x4464>
   15794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15798:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1579c:	cmp	r0, r1
   157a0:	bcs	157b8 <__assert_fail@plt+0x4488>
   157a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157ac:	add	r0, r0, r1
   157b0:	movw	r1, #39	; 0x27
   157b4:	strb	r1, [r0]
   157b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157bc:	add	r0, r0, #1
   157c0:	str	r0, [fp, #-44]	; 0xffffffd4
   157c4:	b	157c8 <__assert_fail@plt+0x4498>
   157c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157d0:	cmp	r0, r1
   157d4:	bcs	157ec <__assert_fail@plt+0x44bc>
   157d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157e0:	add	r0, r0, r1
   157e4:	movw	r1, #36	; 0x24
   157e8:	strb	r1, [r0]
   157ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157f0:	add	r0, r0, #1
   157f4:	str	r0, [fp, #-44]	; 0xffffffd4
   157f8:	b	157fc <__assert_fail@plt+0x44cc>
   157fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15800:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15804:	cmp	r0, r1
   15808:	bcs	15820 <__assert_fail@plt+0x44f0>
   1580c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15814:	add	r0, r0, r1
   15818:	movw	r1, #39	; 0x27
   1581c:	strb	r1, [r0]
   15820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15824:	add	r0, r0, #1
   15828:	str	r0, [fp, #-44]	; 0xffffffd4
   1582c:	movw	r0, #1
   15830:	strb	r0, [fp, #-60]	; 0xffffffc4
   15834:	b	15838 <__assert_fail@plt+0x4508>
   15838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1583c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15840:	cmp	r0, r1
   15844:	bcs	1585c <__assert_fail@plt+0x452c>
   15848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1584c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15850:	add	r0, r0, r1
   15854:	movw	r1, #92	; 0x5c
   15858:	strb	r1, [r0]
   1585c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15860:	add	r0, r0, #1
   15864:	str	r0, [fp, #-44]	; 0xffffffd4
   15868:	b	1586c <__assert_fail@plt+0x453c>
   1586c:	ldr	r0, [fp, #8]
   15870:	cmp	r0, #2
   15874:	beq	15934 <__assert_fail@plt+0x4604>
   15878:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1587c:	add	r0, r0, #1
   15880:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15884:	cmp	r0, r1
   15888:	bcs	15934 <__assert_fail@plt+0x4604>
   1588c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15890:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15894:	add	r1, r1, #1
   15898:	add	r0, r0, r1
   1589c:	ldrb	r0, [r0]
   158a0:	movw	r1, #48	; 0x30
   158a4:	cmp	r1, r0
   158a8:	bgt	15934 <__assert_fail@plt+0x4604>
   158ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   158b4:	add	r1, r1, #1
   158b8:	add	r0, r0, r1
   158bc:	ldrb	r0, [r0]
   158c0:	cmp	r0, #57	; 0x39
   158c4:	bgt	15934 <__assert_fail@plt+0x4604>
   158c8:	b	158cc <__assert_fail@plt+0x459c>
   158cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158d4:	cmp	r0, r1
   158d8:	bcs	158f0 <__assert_fail@plt+0x45c0>
   158dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158e4:	add	r0, r0, r1
   158e8:	movw	r1, #48	; 0x30
   158ec:	strb	r1, [r0]
   158f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158f4:	add	r0, r0, #1
   158f8:	str	r0, [fp, #-44]	; 0xffffffd4
   158fc:	b	15900 <__assert_fail@plt+0x45d0>
   15900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15904:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15908:	cmp	r0, r1
   1590c:	bcs	15924 <__assert_fail@plt+0x45f4>
   15910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15914:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15918:	add	r0, r0, r1
   1591c:	movw	r1, #48	; 0x30
   15920:	strb	r1, [r0]
   15924:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15928:	add	r0, r0, #1
   1592c:	str	r0, [fp, #-44]	; 0xffffffd4
   15930:	b	15934 <__assert_fail@plt+0x4604>
   15934:	movw	r0, #48	; 0x30
   15938:	strb	r0, [fp, #-63]	; 0xffffffc1
   1593c:	b	15958 <__assert_fail@plt+0x4628>
   15940:	ldr	r0, [fp, #12]
   15944:	and	r0, r0, #1
   15948:	cmp	r0, #0
   1594c:	beq	15954 <__assert_fail@plt+0x4624>
   15950:	b	16638 <__assert_fail@plt+0x5308>
   15954:	b	15958 <__assert_fail@plt+0x4628>
   15958:	b	163d4 <__assert_fail@plt+0x50a4>
   1595c:	ldr	r0, [fp, #8]
   15960:	cmp	r0, #2
   15964:	str	r0, [sp, #40]	; 0x28
   15968:	beq	15980 <__assert_fail@plt+0x4650>
   1596c:	b	15970 <__assert_fail@plt+0x4640>
   15970:	ldr	r0, [sp, #40]	; 0x28
   15974:	cmp	r0, #5
   15978:	beq	15994 <__assert_fail@plt+0x4664>
   1597c:	b	15b50 <__assert_fail@plt+0x4820>
   15980:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15984:	tst	r0, #1
   15988:	beq	15990 <__assert_fail@plt+0x4660>
   1598c:	b	167c8 <__assert_fail@plt+0x5498>
   15990:	b	15b54 <__assert_fail@plt+0x4824>
   15994:	ldr	r0, [fp, #12]
   15998:	and	r0, r0, #4
   1599c:	cmp	r0, #0
   159a0:	beq	15b4c <__assert_fail@plt+0x481c>
   159a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   159a8:	add	r0, r0, #2
   159ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159b0:	cmp	r0, r1
   159b4:	bcs	15b4c <__assert_fail@plt+0x481c>
   159b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   159c0:	add	r1, r1, #1
   159c4:	add	r0, r0, r1
   159c8:	ldrb	r0, [r0]
   159cc:	cmp	r0, #63	; 0x3f
   159d0:	bne	15b4c <__assert_fail@plt+0x481c>
   159d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   159dc:	add	r0, r0, r1
   159e0:	ldrb	r0, [r0, #2]
   159e4:	mov	r1, r0
   159e8:	cmp	r0, #33	; 0x21
   159ec:	str	r1, [sp, #36]	; 0x24
   159f0:	beq	15a40 <__assert_fail@plt+0x4710>
   159f4:	b	159f8 <__assert_fail@plt+0x46c8>
   159f8:	ldr	r0, [sp, #36]	; 0x24
   159fc:	sub	r1, r0, #39	; 0x27
   15a00:	cmp	r1, #3
   15a04:	bcc	15a40 <__assert_fail@plt+0x4710>
   15a08:	b	15a0c <__assert_fail@plt+0x46dc>
   15a0c:	ldr	r0, [sp, #36]	; 0x24
   15a10:	cmp	r0, #45	; 0x2d
   15a14:	beq	15a40 <__assert_fail@plt+0x4710>
   15a18:	b	15a1c <__assert_fail@plt+0x46ec>
   15a1c:	ldr	r0, [sp, #36]	; 0x24
   15a20:	cmp	r0, #47	; 0x2f
   15a24:	beq	15a40 <__assert_fail@plt+0x4710>
   15a28:	b	15a2c <__assert_fail@plt+0x46fc>
   15a2c:	ldr	r0, [sp, #36]	; 0x24
   15a30:	sub	r1, r0, #60	; 0x3c
   15a34:	cmp	r1, #2
   15a38:	bhi	15b44 <__assert_fail@plt+0x4814>
   15a3c:	b	15a40 <__assert_fail@plt+0x4710>
   15a40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15a44:	tst	r0, #1
   15a48:	beq	15a50 <__assert_fail@plt+0x4720>
   15a4c:	b	167c8 <__assert_fail@plt+0x5498>
   15a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a58:	add	r1, r1, #2
   15a5c:	add	r0, r0, r1
   15a60:	ldrb	r0, [r0]
   15a64:	strb	r0, [fp, #-63]	; 0xffffffc1
   15a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a6c:	add	r0, r0, #2
   15a70:	str	r0, [fp, #-40]	; 0xffffffd8
   15a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a7c:	cmp	r0, r1
   15a80:	bcs	15a98 <__assert_fail@plt+0x4768>
   15a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a8c:	add	r0, r0, r1
   15a90:	movw	r1, #63	; 0x3f
   15a94:	strb	r1, [r0]
   15a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a9c:	add	r0, r0, #1
   15aa0:	str	r0, [fp, #-44]	; 0xffffffd4
   15aa4:	b	15aa8 <__assert_fail@plt+0x4778>
   15aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ab0:	cmp	r0, r1
   15ab4:	bcs	15acc <__assert_fail@plt+0x479c>
   15ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15abc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ac0:	add	r0, r0, r1
   15ac4:	movw	r1, #34	; 0x22
   15ac8:	strb	r1, [r0]
   15acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ad0:	add	r0, r0, #1
   15ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ad8:	b	15adc <__assert_fail@plt+0x47ac>
   15adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ae4:	cmp	r0, r1
   15ae8:	bcs	15b00 <__assert_fail@plt+0x47d0>
   15aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15af4:	add	r0, r0, r1
   15af8:	movw	r1, #34	; 0x22
   15afc:	strb	r1, [r0]
   15b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b04:	add	r0, r0, #1
   15b08:	str	r0, [fp, #-44]	; 0xffffffd4
   15b0c:	b	15b10 <__assert_fail@plt+0x47e0>
   15b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b18:	cmp	r0, r1
   15b1c:	bcs	15b34 <__assert_fail@plt+0x4804>
   15b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b28:	add	r0, r0, r1
   15b2c:	movw	r1, #63	; 0x3f
   15b30:	strb	r1, [r0]
   15b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b38:	add	r0, r0, #1
   15b3c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b40:	b	15b48 <__assert_fail@plt+0x4818>
   15b44:	b	15b48 <__assert_fail@plt+0x4818>
   15b48:	b	15b4c <__assert_fail@plt+0x481c>
   15b4c:	b	15b54 <__assert_fail@plt+0x4824>
   15b50:	b	15b54 <__assert_fail@plt+0x4824>
   15b54:	b	163d4 <__assert_fail@plt+0x50a4>
   15b58:	movw	r0, #97	; 0x61
   15b5c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b60:	b	15c20 <__assert_fail@plt+0x48f0>
   15b64:	movw	r0, #98	; 0x62
   15b68:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b6c:	b	15c20 <__assert_fail@plt+0x48f0>
   15b70:	movw	r0, #102	; 0x66
   15b74:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b78:	b	15c20 <__assert_fail@plt+0x48f0>
   15b7c:	movw	r0, #110	; 0x6e
   15b80:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b84:	b	15c00 <__assert_fail@plt+0x48d0>
   15b88:	movw	r0, #114	; 0x72
   15b8c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b90:	b	15c00 <__assert_fail@plt+0x48d0>
   15b94:	movw	r0, #116	; 0x74
   15b98:	strb	r0, [fp, #-64]	; 0xffffffc0
   15b9c:	b	15c00 <__assert_fail@plt+0x48d0>
   15ba0:	movw	r0, #118	; 0x76
   15ba4:	strb	r0, [fp, #-64]	; 0xffffffc0
   15ba8:	b	15c20 <__assert_fail@plt+0x48f0>
   15bac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15bb0:	strb	r0, [fp, #-64]	; 0xffffffc0
   15bb4:	ldr	r0, [fp, #8]
   15bb8:	cmp	r0, #2
   15bbc:	bne	15bd4 <__assert_fail@plt+0x48a4>
   15bc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bc4:	tst	r0, #1
   15bc8:	beq	15bd0 <__assert_fail@plt+0x48a0>
   15bcc:	b	167c8 <__assert_fail@plt+0x5498>
   15bd0:	b	1655c <__assert_fail@plt+0x522c>
   15bd4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15bd8:	tst	r0, #1
   15bdc:	beq	15bfc <__assert_fail@plt+0x48cc>
   15be0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15be4:	tst	r0, #1
   15be8:	beq	15bfc <__assert_fail@plt+0x48cc>
   15bec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bf0:	cmp	r0, #0
   15bf4:	beq	15bfc <__assert_fail@plt+0x48cc>
   15bf8:	b	1655c <__assert_fail@plt+0x522c>
   15bfc:	b	15c00 <__assert_fail@plt+0x48d0>
   15c00:	ldr	r0, [fp, #8]
   15c04:	cmp	r0, #2
   15c08:	bne	15c1c <__assert_fail@plt+0x48ec>
   15c0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c10:	tst	r0, #1
   15c14:	beq	15c1c <__assert_fail@plt+0x48ec>
   15c18:	b	167c8 <__assert_fail@plt+0x5498>
   15c1c:	b	15c20 <__assert_fail@plt+0x48f0>
   15c20:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15c24:	tst	r0, #1
   15c28:	beq	15c38 <__assert_fail@plt+0x4908>
   15c2c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15c30:	strb	r0, [fp, #-63]	; 0xffffffc1
   15c34:	b	16448 <__assert_fail@plt+0x5118>
   15c38:	b	163d4 <__assert_fail@plt+0x50a4>
   15c3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c40:	cmn	r0, #1
   15c44:	bne	15c5c <__assert_fail@plt+0x492c>
   15c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c4c:	ldrb	r0, [r0, #1]
   15c50:	cmp	r0, #0
   15c54:	beq	15c6c <__assert_fail@plt+0x493c>
   15c58:	b	15c68 <__assert_fail@plt+0x4938>
   15c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c60:	cmp	r0, #1
   15c64:	beq	15c6c <__assert_fail@plt+0x493c>
   15c68:	b	163d4 <__assert_fail@plt+0x50a4>
   15c6c:	b	15c70 <__assert_fail@plt+0x4940>
   15c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c74:	cmp	r0, #0
   15c78:	beq	15c80 <__assert_fail@plt+0x4950>
   15c7c:	b	163d4 <__assert_fail@plt+0x50a4>
   15c80:	b	15c84 <__assert_fail@plt+0x4954>
   15c84:	movw	r0, #1
   15c88:	strb	r0, [fp, #-67]	; 0xffffffbd
   15c8c:	ldr	r0, [fp, #8]
   15c90:	cmp	r0, #2
   15c94:	bne	15ca8 <__assert_fail@plt+0x4978>
   15c98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c9c:	tst	r0, #1
   15ca0:	beq	15ca8 <__assert_fail@plt+0x4978>
   15ca4:	b	167c8 <__assert_fail@plt+0x5498>
   15ca8:	b	163d4 <__assert_fail@plt+0x50a4>
   15cac:	movw	r0, #1
   15cb0:	strb	r0, [fp, #-61]	; 0xffffffc3
   15cb4:	strb	r0, [fp, #-67]	; 0xffffffbd
   15cb8:	ldr	r0, [fp, #8]
   15cbc:	cmp	r0, #2
   15cc0:	bne	15da0 <__assert_fail@plt+0x4a70>
   15cc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15cc8:	tst	r0, #1
   15ccc:	beq	15cd4 <__assert_fail@plt+0x49a4>
   15cd0:	b	167c8 <__assert_fail@plt+0x5498>
   15cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15cd8:	cmp	r0, #0
   15cdc:	beq	15cfc <__assert_fail@plt+0x49cc>
   15ce0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ce4:	cmp	r0, #0
   15ce8:	bne	15cfc <__assert_fail@plt+0x49cc>
   15cec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15cf0:	str	r0, [fp, #-48]	; 0xffffffd0
   15cf4:	movw	r0, #0
   15cf8:	str	r0, [fp, #-28]	; 0xffffffe4
   15cfc:	b	15d00 <__assert_fail@plt+0x49d0>
   15d00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d08:	cmp	r0, r1
   15d0c:	bcs	15d24 <__assert_fail@plt+0x49f4>
   15d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d18:	add	r0, r0, r1
   15d1c:	movw	r1, #39	; 0x27
   15d20:	strb	r1, [r0]
   15d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d28:	add	r0, r0, #1
   15d2c:	str	r0, [fp, #-44]	; 0xffffffd4
   15d30:	b	15d34 <__assert_fail@plt+0x4a04>
   15d34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d3c:	cmp	r0, r1
   15d40:	bcs	15d58 <__assert_fail@plt+0x4a28>
   15d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d4c:	add	r0, r0, r1
   15d50:	movw	r1, #92	; 0x5c
   15d54:	strb	r1, [r0]
   15d58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d5c:	add	r0, r0, #1
   15d60:	str	r0, [fp, #-44]	; 0xffffffd4
   15d64:	b	15d68 <__assert_fail@plt+0x4a38>
   15d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d70:	cmp	r0, r1
   15d74:	bcs	15d8c <__assert_fail@plt+0x4a5c>
   15d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d80:	add	r0, r0, r1
   15d84:	movw	r1, #39	; 0x27
   15d88:	strb	r1, [r0]
   15d8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d90:	add	r0, r0, #1
   15d94:	str	r0, [fp, #-44]	; 0xffffffd4
   15d98:	movw	r0, #0
   15d9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15da0:	b	163d4 <__assert_fail@plt+0x50a4>
   15da4:	movw	r0, #1
   15da8:	strb	r0, [fp, #-67]	; 0xffffffbd
   15dac:	b	163d4 <__assert_fail@plt+0x50a4>
   15db0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15db4:	tst	r0, #1
   15db8:	beq	15dfc <__assert_fail@plt+0x4acc>
   15dbc:	mov	r0, #1
   15dc0:	str	r0, [fp, #-72]	; 0xffffffb8
   15dc4:	bl	111d4 <__ctype_b_loc@plt>
   15dc8:	ldr	r0, [r0]
   15dcc:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15dd0:	mov	r1, lr
   15dd4:	add	r0, r0, lr, lsl #1
   15dd8:	ldrh	r0, [r0]
   15ddc:	and	r0, r0, #16384	; 0x4000
   15de0:	cmp	r0, #0
   15de4:	movw	r0, #0
   15de8:	movne	r0, #1
   15dec:	and	r0, r0, #1
   15df0:	strb	r0, [fp, #-73]	; 0xffffffb7
   15df4:	str	r1, [sp, #32]
   15df8:	b	16088 <__assert_fail@plt+0x4d58>
   15dfc:	sub	r0, fp, #84	; 0x54
   15e00:	movw	r1, #0
   15e04:	and	r1, r1, #255	; 0xff
   15e08:	movw	r2, #8
   15e0c:	bl	11240 <memset@plt>
   15e10:	movw	r0, #0
   15e14:	str	r0, [fp, #-72]	; 0xffffffb8
   15e18:	movw	r0, #1
   15e1c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15e20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e24:	cmn	r0, #1
   15e28:	bne	15e38 <__assert_fail@plt+0x4b08>
   15e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e30:	bl	11204 <strlen@plt>
   15e34:	str	r0, [fp, #-36]	; 0xffffffdc
   15e38:	b	15e3c <__assert_fail@plt+0x4b0c>
   15e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e44:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e48:	add	r1, r1, r2
   15e4c:	add	r1, r0, r1
   15e50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e5c:	add	r2, r2, r3
   15e60:	sub	r2, r0, r2
   15e64:	sub	r0, fp, #88	; 0x58
   15e68:	sub	r3, fp, #84	; 0x54
   15e6c:	bl	1f704 <__assert_fail@plt+0xe3d4>
   15e70:	str	r0, [sp, #92]	; 0x5c
   15e74:	ldr	r0, [sp, #92]	; 0x5c
   15e78:	cmp	r0, #0
   15e7c:	bne	15e84 <__assert_fail@plt+0x4b54>
   15e80:	b	16084 <__assert_fail@plt+0x4d54>
   15e84:	ldr	r0, [sp, #92]	; 0x5c
   15e88:	cmn	r0, #1
   15e8c:	bne	15e9c <__assert_fail@plt+0x4b6c>
   15e90:	movw	r0, #0
   15e94:	strb	r0, [fp, #-73]	; 0xffffffb7
   15e98:	b	16084 <__assert_fail@plt+0x4d54>
   15e9c:	ldr	r0, [sp, #92]	; 0x5c
   15ea0:	cmn	r0, #2
   15ea4:	bne	15f18 <__assert_fail@plt+0x4be8>
   15ea8:	movw	r0, #0
   15eac:	strb	r0, [fp, #-73]	; 0xffffffb7
   15eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15eb4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15eb8:	add	r0, r0, r1
   15ebc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15ec0:	cmp	r0, r1
   15ec4:	movw	r0, #0
   15ec8:	str	r0, [sp, #28]
   15ecc:	bcs	15ef8 <__assert_fail@plt+0x4bc8>
   15ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ed4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15ed8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15edc:	add	r1, r1, r2
   15ee0:	add	r0, r0, r1
   15ee4:	ldrb	r0, [r0]
   15ee8:	cmp	r0, #0
   15eec:	movw	r0, #0
   15ef0:	movne	r0, #1
   15ef4:	str	r0, [sp, #28]
   15ef8:	ldr	r0, [sp, #28]
   15efc:	tst	r0, #1
   15f00:	beq	15f14 <__assert_fail@plt+0x4be4>
   15f04:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15f08:	add	r0, r0, #1
   15f0c:	str	r0, [fp, #-72]	; 0xffffffb8
   15f10:	b	15eb0 <__assert_fail@plt+0x4b80>
   15f14:	b	16084 <__assert_fail@plt+0x4d54>
   15f18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15f1c:	tst	r0, #1
   15f20:	beq	1602c <__assert_fail@plt+0x4cfc>
   15f24:	ldr	r0, [fp, #8]
   15f28:	cmp	r0, #2
   15f2c:	bne	1602c <__assert_fail@plt+0x4cfc>
   15f30:	movw	r0, #1
   15f34:	str	r0, [sp, #88]	; 0x58
   15f38:	ldr	r0, [sp, #88]	; 0x58
   15f3c:	ldr	r1, [sp, #92]	; 0x5c
   15f40:	cmp	r0, r1
   15f44:	bcs	16028 <__assert_fail@plt+0x4cf8>
   15f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15f54:	add	r1, r1, r2
   15f58:	ldr	r2, [sp, #88]	; 0x58
   15f5c:	add	r1, r1, r2
   15f60:	ldrb	r0, [r0, r1]
   15f64:	sub	r0, r0, #91	; 0x5b
   15f68:	cmp	r0, #33	; 0x21
   15f6c:	str	r0, [sp, #24]
   15f70:	bhi	16010 <__assert_fail@plt+0x4ce0>
   15f74:	add	r0, pc, #8
   15f78:	ldr	r1, [sp, #24]
   15f7c:	ldr	r0, [r0, r1, lsl #2]
   15f80:	mov	pc, r0
   15f84:	andeq	r6, r1, ip
   15f88:	andeq	r6, r1, ip
   15f8c:	andeq	r6, r1, r0, lsl r0
   15f90:	andeq	r6, r1, ip
   15f94:	andeq	r6, r1, r0, lsl r0
   15f98:	andeq	r6, r1, ip
   15f9c:	andeq	r6, r1, r0, lsl r0
   15fa0:	andeq	r6, r1, r0, lsl r0
   15fa4:	andeq	r6, r1, r0, lsl r0
   15fa8:	andeq	r6, r1, r0, lsl r0
   15fac:	andeq	r6, r1, r0, lsl r0
   15fb0:	andeq	r6, r1, r0, lsl r0
   15fb4:	andeq	r6, r1, r0, lsl r0
   15fb8:	andeq	r6, r1, r0, lsl r0
   15fbc:	andeq	r6, r1, r0, lsl r0
   15fc0:	andeq	r6, r1, r0, lsl r0
   15fc4:	andeq	r6, r1, r0, lsl r0
   15fc8:	andeq	r6, r1, r0, lsl r0
   15fcc:	andeq	r6, r1, r0, lsl r0
   15fd0:	andeq	r6, r1, r0, lsl r0
   15fd4:	andeq	r6, r1, r0, lsl r0
   15fd8:	andeq	r6, r1, r0, lsl r0
   15fdc:	andeq	r6, r1, r0, lsl r0
   15fe0:	andeq	r6, r1, r0, lsl r0
   15fe4:	andeq	r6, r1, r0, lsl r0
   15fe8:	andeq	r6, r1, r0, lsl r0
   15fec:	andeq	r6, r1, r0, lsl r0
   15ff0:	andeq	r6, r1, r0, lsl r0
   15ff4:	andeq	r6, r1, r0, lsl r0
   15ff8:	andeq	r6, r1, r0, lsl r0
   15ffc:	andeq	r6, r1, r0, lsl r0
   16000:	andeq	r6, r1, r0, lsl r0
   16004:	andeq	r6, r1, r0, lsl r0
   16008:	andeq	r6, r1, ip
   1600c:	b	167c8 <__assert_fail@plt+0x5498>
   16010:	b	16014 <__assert_fail@plt+0x4ce4>
   16014:	b	16018 <__assert_fail@plt+0x4ce8>
   16018:	ldr	r0, [sp, #88]	; 0x58
   1601c:	add	r0, r0, #1
   16020:	str	r0, [sp, #88]	; 0x58
   16024:	b	15f38 <__assert_fail@plt+0x4c08>
   16028:	b	1602c <__assert_fail@plt+0x4cfc>
   1602c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16030:	bl	11138 <iswprint@plt>
   16034:	cmp	r0, #0
   16038:	bne	16044 <__assert_fail@plt+0x4d14>
   1603c:	movw	r0, #0
   16040:	strb	r0, [fp, #-73]	; 0xffffffb7
   16044:	ldr	r0, [sp, #92]	; 0x5c
   16048:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1604c:	add	r0, r1, r0
   16050:	str	r0, [fp, #-72]	; 0xffffffb8
   16054:	b	16058 <__assert_fail@plt+0x4d28>
   16058:	b	1605c <__assert_fail@plt+0x4d2c>
   1605c:	b	16060 <__assert_fail@plt+0x4d30>
   16060:	sub	r0, fp, #84	; 0x54
   16064:	bl	110f0 <mbsinit@plt>
   16068:	cmp	r0, #0
   1606c:	movw	r0, #0
   16070:	movne	r0, #1
   16074:	mvn	lr, #0
   16078:	eor	r0, r0, lr
   1607c:	tst	r0, #1
   16080:	bne	15e3c <__assert_fail@plt+0x4b0c>
   16084:	b	16088 <__assert_fail@plt+0x4d58>
   16088:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1608c:	and	r0, r0, #1
   16090:	strb	r0, [fp, #-67]	; 0xffffffbd
   16094:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16098:	movw	r1, #1
   1609c:	cmp	r1, r0
   160a0:	bcc	160bc <__assert_fail@plt+0x4d8c>
   160a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   160a8:	tst	r0, #1
   160ac:	beq	163d0 <__assert_fail@plt+0x50a0>
   160b0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   160b4:	tst	r0, #1
   160b8:	bne	163d0 <__assert_fail@plt+0x50a0>
   160bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160c0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   160c4:	add	r0, r0, r1
   160c8:	str	r0, [sp, #84]	; 0x54
   160cc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   160d0:	tst	r0, #1
   160d4:	beq	16284 <__assert_fail@plt+0x4f54>
   160d8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   160dc:	tst	r0, #1
   160e0:	bne	16284 <__assert_fail@plt+0x4f54>
   160e4:	b	160e8 <__assert_fail@plt+0x4db8>
   160e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   160ec:	tst	r0, #1
   160f0:	beq	160f8 <__assert_fail@plt+0x4dc8>
   160f4:	b	167c8 <__assert_fail@plt+0x5498>
   160f8:	movw	r0, #1
   160fc:	strb	r0, [fp, #-66]	; 0xffffffbe
   16100:	ldr	r0, [fp, #8]
   16104:	cmp	r0, #2
   16108:	bne	161bc <__assert_fail@plt+0x4e8c>
   1610c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16110:	tst	r0, #1
   16114:	bne	161bc <__assert_fail@plt+0x4e8c>
   16118:	b	1611c <__assert_fail@plt+0x4dec>
   1611c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16120:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16124:	cmp	r0, r1
   16128:	bcs	16140 <__assert_fail@plt+0x4e10>
   1612c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16130:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16134:	add	r0, r0, r1
   16138:	movw	r1, #39	; 0x27
   1613c:	strb	r1, [r0]
   16140:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16144:	add	r0, r0, #1
   16148:	str	r0, [fp, #-44]	; 0xffffffd4
   1614c:	b	16150 <__assert_fail@plt+0x4e20>
   16150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16158:	cmp	r0, r1
   1615c:	bcs	16174 <__assert_fail@plt+0x4e44>
   16160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16164:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16168:	add	r0, r0, r1
   1616c:	movw	r1, #36	; 0x24
   16170:	strb	r1, [r0]
   16174:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16178:	add	r0, r0, #1
   1617c:	str	r0, [fp, #-44]	; 0xffffffd4
   16180:	b	16184 <__assert_fail@plt+0x4e54>
   16184:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1618c:	cmp	r0, r1
   16190:	bcs	161a8 <__assert_fail@plt+0x4e78>
   16194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16198:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1619c:	add	r0, r0, r1
   161a0:	movw	r1, #39	; 0x27
   161a4:	strb	r1, [r0]
   161a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161ac:	add	r0, r0, #1
   161b0:	str	r0, [fp, #-44]	; 0xffffffd4
   161b4:	movw	r0, #1
   161b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   161bc:	b	161c0 <__assert_fail@plt+0x4e90>
   161c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161c8:	cmp	r0, r1
   161cc:	bcs	161e4 <__assert_fail@plt+0x4eb4>
   161d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   161d8:	add	r0, r0, r1
   161dc:	movw	r1, #92	; 0x5c
   161e0:	strb	r1, [r0]
   161e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161e8:	add	r0, r0, #1
   161ec:	str	r0, [fp, #-44]	; 0xffffffd4
   161f0:	b	161f4 <__assert_fail@plt+0x4ec4>
   161f4:	b	161f8 <__assert_fail@plt+0x4ec8>
   161f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16200:	cmp	r0, r1
   16204:	bcs	16224 <__assert_fail@plt+0x4ef4>
   16208:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1620c:	asr	r0, r0, #6
   16210:	add	r0, r0, #48	; 0x30
   16214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16218:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1621c:	add	r1, r1, r2
   16220:	strb	r0, [r1]
   16224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16228:	add	r0, r0, #1
   1622c:	str	r0, [fp, #-44]	; 0xffffffd4
   16230:	b	16234 <__assert_fail@plt+0x4f04>
   16234:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1623c:	cmp	r0, r1
   16240:	bcs	16264 <__assert_fail@plt+0x4f34>
   16244:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16248:	asr	r0, r0, #3
   1624c:	and	r0, r0, #7
   16250:	add	r0, r0, #48	; 0x30
   16254:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16258:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1625c:	add	r1, r1, r2
   16260:	strb	r0, [r1]
   16264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16268:	add	r0, r0, #1
   1626c:	str	r0, [fp, #-44]	; 0xffffffd4
   16270:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16274:	and	r0, r0, #7
   16278:	add	r0, r0, #48	; 0x30
   1627c:	strb	r0, [fp, #-63]	; 0xffffffc1
   16280:	b	162d0 <__assert_fail@plt+0x4fa0>
   16284:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16288:	tst	r0, #1
   1628c:	beq	162cc <__assert_fail@plt+0x4f9c>
   16290:	b	16294 <__assert_fail@plt+0x4f64>
   16294:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1629c:	cmp	r0, r1
   162a0:	bcs	162b8 <__assert_fail@plt+0x4f88>
   162a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162ac:	add	r0, r0, r1
   162b0:	movw	r1, #92	; 0x5c
   162b4:	strb	r1, [r0]
   162b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162bc:	add	r0, r0, #1
   162c0:	str	r0, [fp, #-44]	; 0xffffffd4
   162c4:	movw	r0, #0
   162c8:	strb	r0, [fp, #-65]	; 0xffffffbf
   162cc:	b	162d0 <__assert_fail@plt+0x4fa0>
   162d0:	ldr	r0, [sp, #84]	; 0x54
   162d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162d8:	add	r1, r1, #1
   162dc:	cmp	r0, r1
   162e0:	bhi	162e8 <__assert_fail@plt+0x4fb8>
   162e4:	b	163cc <__assert_fail@plt+0x509c>
   162e8:	b	162ec <__assert_fail@plt+0x4fbc>
   162ec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   162f0:	tst	r0, #1
   162f4:	beq	16374 <__assert_fail@plt+0x5044>
   162f8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   162fc:	tst	r0, #1
   16300:	bne	16374 <__assert_fail@plt+0x5044>
   16304:	b	16308 <__assert_fail@plt+0x4fd8>
   16308:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1630c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16310:	cmp	r0, r1
   16314:	bcs	1632c <__assert_fail@plt+0x4ffc>
   16318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1631c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16320:	add	r0, r0, r1
   16324:	movw	r1, #39	; 0x27
   16328:	strb	r1, [r0]
   1632c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16330:	add	r0, r0, #1
   16334:	str	r0, [fp, #-44]	; 0xffffffd4
   16338:	b	1633c <__assert_fail@plt+0x500c>
   1633c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16340:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16344:	cmp	r0, r1
   16348:	bcs	16360 <__assert_fail@plt+0x5030>
   1634c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16350:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16354:	add	r0, r0, r1
   16358:	movw	r1, #39	; 0x27
   1635c:	strb	r1, [r0]
   16360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16364:	add	r0, r0, #1
   16368:	str	r0, [fp, #-44]	; 0xffffffd4
   1636c:	movw	r0, #0
   16370:	strb	r0, [fp, #-60]	; 0xffffffc4
   16374:	b	16378 <__assert_fail@plt+0x5048>
   16378:	b	1637c <__assert_fail@plt+0x504c>
   1637c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16384:	cmp	r0, r1
   16388:	bcs	163a0 <__assert_fail@plt+0x5070>
   1638c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16394:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16398:	add	r1, r1, r2
   1639c:	strb	r0, [r1]
   163a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163a4:	add	r0, r0, #1
   163a8:	str	r0, [fp, #-44]	; 0xffffffd4
   163ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   163b4:	add	r1, r1, #1
   163b8:	str	r1, [fp, #-40]	; 0xffffffd8
   163bc:	add	r0, r0, r1
   163c0:	ldrb	r0, [r0]
   163c4:	strb	r0, [fp, #-63]	; 0xffffffc1
   163c8:	b	160cc <__assert_fail@plt+0x4d9c>
   163cc:	b	1655c <__assert_fail@plt+0x522c>
   163d0:	b	163d4 <__assert_fail@plt+0x50a4>
   163d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   163d8:	tst	r0, #1
   163dc:	beq	163ec <__assert_fail@plt+0x50bc>
   163e0:	ldr	r0, [fp, #8]
   163e4:	cmp	r0, #2
   163e8:	bne	163f8 <__assert_fail@plt+0x50c8>
   163ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   163f0:	tst	r0, #1
   163f4:	beq	16434 <__assert_fail@plt+0x5104>
   163f8:	ldr	r0, [fp, #16]
   163fc:	movw	r1, #0
   16400:	cmp	r0, r1
   16404:	beq	16434 <__assert_fail@plt+0x5104>
   16408:	ldr	r0, [fp, #16]
   1640c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16410:	lsr	r1, r1, #5
   16414:	add	r0, r0, r1, lsl #2
   16418:	ldr	r0, [r0]
   1641c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16420:	and	r1, r1, #31
   16424:	lsr	r0, r0, r1
   16428:	and	r0, r0, #1
   1642c:	cmp	r0, #0
   16430:	bne	16444 <__assert_fail@plt+0x5114>
   16434:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16438:	tst	r0, #1
   1643c:	bne	16444 <__assert_fail@plt+0x5114>
   16440:	b	1655c <__assert_fail@plt+0x522c>
   16444:	b	16448 <__assert_fail@plt+0x5118>
   16448:	b	1644c <__assert_fail@plt+0x511c>
   1644c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16450:	tst	r0, #1
   16454:	beq	1645c <__assert_fail@plt+0x512c>
   16458:	b	167c8 <__assert_fail@plt+0x5498>
   1645c:	movw	r0, #1
   16460:	strb	r0, [fp, #-66]	; 0xffffffbe
   16464:	ldr	r0, [fp, #8]
   16468:	cmp	r0, #2
   1646c:	bne	16520 <__assert_fail@plt+0x51f0>
   16470:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16474:	tst	r0, #1
   16478:	bne	16520 <__assert_fail@plt+0x51f0>
   1647c:	b	16480 <__assert_fail@plt+0x5150>
   16480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16488:	cmp	r0, r1
   1648c:	bcs	164a4 <__assert_fail@plt+0x5174>
   16490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16494:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16498:	add	r0, r0, r1
   1649c:	movw	r1, #39	; 0x27
   164a0:	strb	r1, [r0]
   164a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164a8:	add	r0, r0, #1
   164ac:	str	r0, [fp, #-44]	; 0xffffffd4
   164b0:	b	164b4 <__assert_fail@plt+0x5184>
   164b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   164bc:	cmp	r0, r1
   164c0:	bcs	164d8 <__assert_fail@plt+0x51a8>
   164c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   164cc:	add	r0, r0, r1
   164d0:	movw	r1, #36	; 0x24
   164d4:	strb	r1, [r0]
   164d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164dc:	add	r0, r0, #1
   164e0:	str	r0, [fp, #-44]	; 0xffffffd4
   164e4:	b	164e8 <__assert_fail@plt+0x51b8>
   164e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   164f0:	cmp	r0, r1
   164f4:	bcs	1650c <__assert_fail@plt+0x51dc>
   164f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16500:	add	r0, r0, r1
   16504:	movw	r1, #39	; 0x27
   16508:	strb	r1, [r0]
   1650c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16510:	add	r0, r0, #1
   16514:	str	r0, [fp, #-44]	; 0xffffffd4
   16518:	movw	r0, #1
   1651c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16520:	b	16524 <__assert_fail@plt+0x51f4>
   16524:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16528:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1652c:	cmp	r0, r1
   16530:	bcs	16548 <__assert_fail@plt+0x5218>
   16534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16538:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1653c:	add	r0, r0, r1
   16540:	movw	r1, #92	; 0x5c
   16544:	strb	r1, [r0]
   16548:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1654c:	add	r0, r0, #1
   16550:	str	r0, [fp, #-44]	; 0xffffffd4
   16554:	b	16558 <__assert_fail@plt+0x5228>
   16558:	b	1655c <__assert_fail@plt+0x522c>
   1655c:	b	16560 <__assert_fail@plt+0x5230>
   16560:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16564:	tst	r0, #1
   16568:	beq	165e8 <__assert_fail@plt+0x52b8>
   1656c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16570:	tst	r0, #1
   16574:	bne	165e8 <__assert_fail@plt+0x52b8>
   16578:	b	1657c <__assert_fail@plt+0x524c>
   1657c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16584:	cmp	r0, r1
   16588:	bcs	165a0 <__assert_fail@plt+0x5270>
   1658c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16590:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16594:	add	r0, r0, r1
   16598:	movw	r1, #39	; 0x27
   1659c:	strb	r1, [r0]
   165a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165a4:	add	r0, r0, #1
   165a8:	str	r0, [fp, #-44]	; 0xffffffd4
   165ac:	b	165b0 <__assert_fail@plt+0x5280>
   165b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   165b8:	cmp	r0, r1
   165bc:	bcs	165d4 <__assert_fail@plt+0x52a4>
   165c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165c8:	add	r0, r0, r1
   165cc:	movw	r1, #39	; 0x27
   165d0:	strb	r1, [r0]
   165d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165d8:	add	r0, r0, #1
   165dc:	str	r0, [fp, #-44]	; 0xffffffd4
   165e0:	movw	r0, #0
   165e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   165e8:	b	165ec <__assert_fail@plt+0x52bc>
   165ec:	b	165f0 <__assert_fail@plt+0x52c0>
   165f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   165f8:	cmp	r0, r1
   165fc:	bcs	16614 <__assert_fail@plt+0x52e4>
   16600:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16608:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1660c:	add	r1, r1, r2
   16610:	strb	r0, [r1]
   16614:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16618:	add	r0, r0, #1
   1661c:	str	r0, [fp, #-44]	; 0xffffffd4
   16620:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   16624:	tst	r0, #1
   16628:	bne	16634 <__assert_fail@plt+0x5304>
   1662c:	movw	r0, #0
   16630:	strb	r0, [fp, #-62]	; 0xffffffc2
   16634:	b	16638 <__assert_fail@plt+0x5308>
   16638:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1663c:	add	r0, r0, #1
   16640:	str	r0, [fp, #-40]	; 0xffffffd8
   16644:	b	153ec <__assert_fail@plt+0x40bc>
   16648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1664c:	cmp	r0, #0
   16650:	bne	16670 <__assert_fail@plt+0x5340>
   16654:	ldr	r0, [fp, #8]
   16658:	cmp	r0, #2
   1665c:	bne	16670 <__assert_fail@plt+0x5340>
   16660:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16664:	tst	r0, #1
   16668:	beq	16670 <__assert_fail@plt+0x5340>
   1666c:	b	167c8 <__assert_fail@plt+0x5498>
   16670:	ldr	r0, [fp, #8]
   16674:	cmp	r0, #2
   16678:	bne	16718 <__assert_fail@plt+0x53e8>
   1667c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16680:	tst	r0, #1
   16684:	bne	16718 <__assert_fail@plt+0x53e8>
   16688:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1668c:	tst	r0, #1
   16690:	beq	16718 <__assert_fail@plt+0x53e8>
   16694:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   16698:	tst	r0, #1
   1669c:	beq	166e4 <__assert_fail@plt+0x53b4>
   166a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   166a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   166ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   166b0:	ldr	ip, [fp, #12]
   166b4:	ldr	lr, [fp, #16]
   166b8:	ldr	r4, [fp, #20]
   166bc:	ldr	r5, [fp, #24]
   166c0:	movw	r6, #5
   166c4:	str	r6, [sp]
   166c8:	str	ip, [sp, #4]
   166cc:	str	lr, [sp, #8]
   166d0:	str	r4, [sp, #12]
   166d4:	str	r5, [sp, #16]
   166d8:	bl	15104 <__assert_fail@plt+0x3dd4>
   166dc:	str	r0, [fp, #-20]	; 0xffffffec
   166e0:	b	16830 <__assert_fail@plt+0x5500>
   166e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   166e8:	cmp	r0, #0
   166ec:	bne	16710 <__assert_fail@plt+0x53e0>
   166f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166f4:	cmp	r0, #0
   166f8:	beq	16710 <__assert_fail@plt+0x53e0>
   166fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16700:	str	r0, [fp, #-28]	; 0xffffffe4
   16704:	movw	r0, #0
   16708:	str	r0, [fp, #-44]	; 0xffffffd4
   1670c:	b	151ac <__assert_fail@plt+0x3e7c>
   16710:	b	16714 <__assert_fail@plt+0x53e4>
   16714:	b	16718 <__assert_fail@plt+0x53e8>
   16718:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1671c:	movw	r1, #0
   16720:	cmp	r0, r1
   16724:	beq	16798 <__assert_fail@plt+0x5468>
   16728:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1672c:	tst	r0, #1
   16730:	bne	16798 <__assert_fail@plt+0x5468>
   16734:	b	16738 <__assert_fail@plt+0x5408>
   16738:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1673c:	ldrsb	r0, [r0]
   16740:	cmp	r0, #0
   16744:	beq	16794 <__assert_fail@plt+0x5464>
   16748:	b	1674c <__assert_fail@plt+0x541c>
   1674c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16754:	cmp	r0, r1
   16758:	bcs	16774 <__assert_fail@plt+0x5444>
   1675c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16760:	ldrb	r0, [r0]
   16764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16768:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1676c:	add	r1, r1, r2
   16770:	strb	r0, [r1]
   16774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16778:	add	r0, r0, #1
   1677c:	str	r0, [fp, #-44]	; 0xffffffd4
   16780:	b	16784 <__assert_fail@plt+0x5454>
   16784:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16788:	add	r0, r0, #1
   1678c:	str	r0, [fp, #-52]	; 0xffffffcc
   16790:	b	16738 <__assert_fail@plt+0x5408>
   16794:	b	16798 <__assert_fail@plt+0x5468>
   16798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1679c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   167a0:	cmp	r0, r1
   167a4:	bcs	167bc <__assert_fail@plt+0x548c>
   167a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   167b0:	add	r0, r0, r1
   167b4:	movw	r1, #0
   167b8:	strb	r1, [r0]
   167bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167c0:	str	r0, [fp, #-20]	; 0xffffffec
   167c4:	b	16830 <__assert_fail@plt+0x5500>
   167c8:	ldr	r0, [fp, #8]
   167cc:	cmp	r0, #2
   167d0:	bne	167e8 <__assert_fail@plt+0x54b8>
   167d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   167d8:	tst	r0, #1
   167dc:	beq	167e8 <__assert_fail@plt+0x54b8>
   167e0:	movw	r0, #4
   167e4:	str	r0, [fp, #8]
   167e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   167f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   167f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   167f8:	ldr	ip, [fp, #8]
   167fc:	ldr	lr, [fp, #12]
   16800:	mvn	r4, #2
   16804:	and	lr, lr, r4
   16808:	ldr	r4, [fp, #20]
   1680c:	ldr	r5, [fp, #24]
   16810:	str	ip, [sp]
   16814:	str	lr, [sp, #4]
   16818:	movw	ip, #0
   1681c:	str	ip, [sp, #8]
   16820:	str	r4, [sp, #12]
   16824:	str	r5, [sp, #16]
   16828:	bl	15104 <__assert_fail@plt+0x3dd4>
   1682c:	str	r0, [fp, #-20]	; 0xffffffec
   16830:	ldr	r0, [fp, #-20]	; 0xffffffec
   16834:	sub	sp, fp, #16
   16838:	pop	{r4, r5, r6, sl, fp, pc}
   1683c:	push	{fp, lr}
   16840:	mov	fp, sp
   16844:	sub	sp, sp, #16
   16848:	str	r0, [fp, #-4]
   1684c:	str	r1, [sp, #8]
   16850:	str	r2, [sp, #4]
   16854:	ldr	r0, [fp, #-4]
   16858:	ldr	r1, [sp, #8]
   1685c:	ldr	r3, [sp, #4]
   16860:	movw	r2, #0
   16864:	bl	16870 <__assert_fail@plt+0x5540>
   16868:	mov	sp, fp
   1686c:	pop	{fp, pc}
   16870:	push	{r4, r5, r6, sl, fp, lr}
   16874:	add	fp, sp, #16
   16878:	sub	sp, sp, #72	; 0x48
   1687c:	str	r0, [fp, #-20]	; 0xffffffec
   16880:	str	r1, [fp, #-24]	; 0xffffffe8
   16884:	str	r2, [fp, #-28]	; 0xffffffe4
   16888:	str	r3, [fp, #-32]	; 0xffffffe0
   1688c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16890:	movw	r1, #0
   16894:	cmp	r0, r1
   16898:	beq	168a8 <__assert_fail@plt+0x5578>
   1689c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   168a0:	str	r0, [sp, #32]
   168a4:	b	168b8 <__assert_fail@plt+0x5588>
   168a8:	movw	r0, #12812	; 0x320c
   168ac:	movt	r0, #3
   168b0:	str	r0, [sp, #32]
   168b4:	b	168b8 <__assert_fail@plt+0x5588>
   168b8:	ldr	r0, [sp, #32]
   168bc:	str	r0, [fp, #-36]	; 0xffffffdc
   168c0:	bl	11228 <__errno_location@plt>
   168c4:	ldr	r0, [r0]
   168c8:	str	r0, [fp, #-40]	; 0xffffffd8
   168cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   168d0:	ldr	r0, [r0, #4]
   168d4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   168d8:	movw	r1, #0
   168dc:	cmp	lr, r1
   168e0:	movw	lr, #0
   168e4:	movne	lr, #1
   168e8:	tst	lr, #1
   168ec:	mov	lr, r1
   168f0:	moveq	lr, #1
   168f4:	orr	r0, r0, lr
   168f8:	str	r0, [sp, #44]	; 0x2c
   168fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16904:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16908:	ldr	r0, [r0]
   1690c:	ldr	lr, [sp, #44]	; 0x2c
   16910:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16914:	add	ip, ip, #8
   16918:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1691c:	ldr	r4, [r4, #40]	; 0x28
   16920:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16924:	ldr	r5, [r5, #44]	; 0x2c
   16928:	str	r0, [sp, #28]
   1692c:	mov	r0, r1
   16930:	ldr	r6, [sp, #28]
   16934:	str	r6, [sp]
   16938:	str	lr, [sp, #4]
   1693c:	str	ip, [sp, #8]
   16940:	str	r4, [sp, #12]
   16944:	str	r5, [sp, #16]
   16948:	bl	15104 <__assert_fail@plt+0x3dd4>
   1694c:	add	r0, r0, #1
   16950:	str	r0, [sp, #40]	; 0x28
   16954:	ldr	r0, [sp, #40]	; 0x28
   16958:	bl	17f18 <__assert_fail@plt+0x6be8>
   1695c:	str	r0, [sp, #36]	; 0x24
   16960:	ldr	r0, [sp, #36]	; 0x24
   16964:	ldr	r1, [sp, #40]	; 0x28
   16968:	ldr	r2, [fp, #-20]	; 0xffffffec
   1696c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16970:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16974:	ldr	ip, [ip]
   16978:	ldr	lr, [sp, #44]	; 0x2c
   1697c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16980:	add	r4, r4, #8
   16984:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16988:	ldr	r5, [r5, #40]	; 0x28
   1698c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   16990:	ldr	r6, [r6, #44]	; 0x2c
   16994:	str	ip, [sp]
   16998:	str	lr, [sp, #4]
   1699c:	str	r4, [sp, #8]
   169a0:	str	r5, [sp, #12]
   169a4:	str	r6, [sp, #16]
   169a8:	bl	15104 <__assert_fail@plt+0x3dd4>
   169ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   169b0:	str	r0, [sp, #24]
   169b4:	str	r1, [sp, #20]
   169b8:	bl	11228 <__errno_location@plt>
   169bc:	ldr	r1, [sp, #20]
   169c0:	str	r1, [r0]
   169c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   169c8:	movw	r2, #0
   169cc:	cmp	r0, r2
   169d0:	beq	169e4 <__assert_fail@plt+0x56b4>
   169d4:	ldr	r0, [sp, #40]	; 0x28
   169d8:	sub	r0, r0, #1
   169dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   169e0:	str	r0, [r1]
   169e4:	ldr	r0, [sp, #36]	; 0x24
   169e8:	sub	sp, fp, #16
   169ec:	pop	{r4, r5, r6, sl, fp, pc}
   169f0:	push	{fp, lr}
   169f4:	mov	fp, sp
   169f8:	sub	sp, sp, #8
   169fc:	movw	r0, #12580	; 0x3124
   16a00:	movt	r0, #3
   16a04:	ldr	r0, [r0]
   16a08:	str	r0, [sp, #4]
   16a0c:	movw	r0, #1
   16a10:	str	r0, [sp]
   16a14:	ldr	r0, [sp]
   16a18:	movw	r1, #12584	; 0x3128
   16a1c:	movt	r1, #3
   16a20:	ldr	r1, [r1]
   16a24:	cmp	r0, r1
   16a28:	bge	16a50 <__assert_fail@plt+0x5720>
   16a2c:	ldr	r0, [sp, #4]
   16a30:	ldr	r1, [sp]
   16a34:	add	r0, r0, r1, lsl #3
   16a38:	ldr	r0, [r0, #4]
   16a3c:	bl	147b0 <__assert_fail@plt+0x3480>
   16a40:	ldr	r0, [sp]
   16a44:	add	r0, r0, #1
   16a48:	str	r0, [sp]
   16a4c:	b	16a14 <__assert_fail@plt+0x56e4>
   16a50:	ldr	r0, [sp, #4]
   16a54:	ldr	r0, [r0, #4]
   16a58:	movw	r1, #12860	; 0x323c
   16a5c:	movt	r1, #3
   16a60:	cmp	r0, r1
   16a64:	beq	16a90 <__assert_fail@plt+0x5760>
   16a68:	ldr	r0, [sp, #4]
   16a6c:	ldr	r0, [r0, #4]
   16a70:	bl	147b0 <__assert_fail@plt+0x3480>
   16a74:	movw	r0, #256	; 0x100
   16a78:	movw	lr, #12588	; 0x312c
   16a7c:	movt	lr, #3
   16a80:	str	r0, [lr]
   16a84:	movw	r0, #12860	; 0x323c
   16a88:	movt	r0, #3
   16a8c:	str	r0, [lr, #4]
   16a90:	ldr	r0, [sp, #4]
   16a94:	movw	r1, #12588	; 0x312c
   16a98:	movt	r1, #3
   16a9c:	cmp	r0, r1
   16aa0:	beq	16ac0 <__assert_fail@plt+0x5790>
   16aa4:	ldr	r0, [sp, #4]
   16aa8:	bl	147b0 <__assert_fail@plt+0x3480>
   16aac:	movw	r0, #12580	; 0x3124
   16ab0:	movt	r0, #3
   16ab4:	movw	lr, #12588	; 0x312c
   16ab8:	movt	lr, #3
   16abc:	str	lr, [r0]
   16ac0:	movw	r0, #12584	; 0x3128
   16ac4:	movt	r0, #3
   16ac8:	movw	r1, #1
   16acc:	str	r1, [r0]
   16ad0:	mov	sp, fp
   16ad4:	pop	{fp, pc}
   16ad8:	push	{fp, lr}
   16adc:	mov	fp, sp
   16ae0:	sub	sp, sp, #8
   16ae4:	str	r0, [sp, #4]
   16ae8:	str	r1, [sp]
   16aec:	ldr	r0, [sp, #4]
   16af0:	ldr	r1, [sp]
   16af4:	mvn	r2, #0
   16af8:	movw	r3, #12812	; 0x320c
   16afc:	movt	r3, #3
   16b00:	bl	16b0c <__assert_fail@plt+0x57dc>
   16b04:	mov	sp, fp
   16b08:	pop	{fp, pc}
   16b0c:	push	{r4, r5, r6, sl, fp, lr}
   16b10:	add	fp, sp, #16
   16b14:	sub	sp, sp, #88	; 0x58
   16b18:	str	r0, [fp, #-20]	; 0xffffffec
   16b1c:	str	r1, [fp, #-24]	; 0xffffffe8
   16b20:	str	r2, [fp, #-28]	; 0xffffffe4
   16b24:	str	r3, [fp, #-32]	; 0xffffffe0
   16b28:	bl	11228 <__errno_location@plt>
   16b2c:	ldr	r1, [pc, #676]	; 16dd8 <__assert_fail@plt+0x5aa8>
   16b30:	ldr	r0, [r0]
   16b34:	str	r0, [fp, #-36]	; 0xffffffdc
   16b38:	movw	r0, #12580	; 0x3124
   16b3c:	movt	r0, #3
   16b40:	ldr	r0, [r0]
   16b44:	str	r0, [fp, #-40]	; 0xffffffd8
   16b48:	str	r1, [fp, #-44]	; 0xffffffd4
   16b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b50:	movw	r1, #0
   16b54:	cmp	r1, r0
   16b58:	bgt	16b6c <__assert_fail@plt+0x583c>
   16b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16b64:	cmp	r0, r1
   16b68:	blt	16b70 <__assert_fail@plt+0x5840>
   16b6c:	bl	11300 <abort@plt>
   16b70:	movw	r0, #12584	; 0x3128
   16b74:	movt	r0, #3
   16b78:	ldr	r0, [r0]
   16b7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b80:	cmp	r0, r1
   16b84:	bgt	16c7c <__assert_fail@plt+0x594c>
   16b88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16b8c:	movw	r1, #12588	; 0x312c
   16b90:	movt	r1, #3
   16b94:	cmp	r0, r1
   16b98:	movw	r0, #0
   16b9c:	moveq	r0, #1
   16ba0:	and	r0, r0, #1
   16ba4:	strb	r0, [fp, #-45]	; 0xffffffd3
   16ba8:	movw	r0, #12584	; 0x3128
   16bac:	movt	r0, #3
   16bb0:	ldr	r0, [r0]
   16bb4:	str	r0, [sp, #52]	; 0x34
   16bb8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16bbc:	tst	r0, #1
   16bc0:	beq	16bd0 <__assert_fail@plt+0x58a0>
   16bc4:	movw	r0, #0
   16bc8:	str	r0, [sp, #32]
   16bcc:	b	16bd8 <__assert_fail@plt+0x58a8>
   16bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bd4:	str	r0, [sp, #32]
   16bd8:	ldr	r0, [sp, #32]
   16bdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16be0:	movw	r2, #12584	; 0x3128
   16be4:	movt	r2, #3
   16be8:	ldr	r2, [r2]
   16bec:	sub	r1, r1, r2
   16bf0:	add	r2, r1, #1
   16bf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16bf8:	add	r1, sp, #52	; 0x34
   16bfc:	movw	ip, #8
   16c00:	str	ip, [sp]
   16c04:	bl	18154 <__assert_fail@plt+0x6e24>
   16c08:	str	r0, [fp, #-40]	; 0xffffffd8
   16c0c:	movw	r1, #12580	; 0x3124
   16c10:	movt	r1, #3
   16c14:	str	r0, [r1]
   16c18:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16c1c:	tst	r0, #1
   16c20:	beq	16c40 <__assert_fail@plt+0x5910>
   16c24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c28:	movw	r1, #12588	; 0x312c
   16c2c:	movt	r1, #3
   16c30:	ldr	r2, [r1]
   16c34:	str	r2, [r0]
   16c38:	ldr	r1, [r1, #4]
   16c3c:	str	r1, [r0, #4]
   16c40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c44:	movw	r1, #12584	; 0x3128
   16c48:	movt	r1, #3
   16c4c:	ldr	r1, [r1]
   16c50:	add	r0, r0, r1, lsl #3
   16c54:	ldr	r2, [sp, #52]	; 0x34
   16c58:	sub	r1, r2, r1
   16c5c:	lsl	r2, r1, #3
   16c60:	movw	r1, #0
   16c64:	and	r1, r1, #255	; 0xff
   16c68:	bl	11240 <memset@plt>
   16c6c:	ldr	r0, [sp, #52]	; 0x34
   16c70:	movw	r1, #12584	; 0x3128
   16c74:	movt	r1, #3
   16c78:	str	r0, [r1]
   16c7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c80:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c84:	ldr	r0, [r0, r1, lsl #3]
   16c88:	str	r0, [sp, #48]	; 0x30
   16c8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c90:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c94:	add	r0, r0, r1, lsl #3
   16c98:	ldr	r0, [r0, #4]
   16c9c:	str	r0, [sp, #44]	; 0x2c
   16ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ca4:	ldr	r0, [r0, #4]
   16ca8:	orr	r0, r0, #1
   16cac:	str	r0, [sp, #40]	; 0x28
   16cb0:	ldr	r0, [sp, #44]	; 0x2c
   16cb4:	ldr	r1, [sp, #48]	; 0x30
   16cb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16cc0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16cc4:	ldr	ip, [ip]
   16cc8:	ldr	lr, [sp, #40]	; 0x28
   16ccc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16cd0:	add	r4, r4, #8
   16cd4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16cd8:	ldr	r5, [r5, #40]	; 0x28
   16cdc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16ce0:	ldr	r6, [r6, #44]	; 0x2c
   16ce4:	str	ip, [sp]
   16ce8:	str	lr, [sp, #4]
   16cec:	str	r4, [sp, #8]
   16cf0:	str	r5, [sp, #12]
   16cf4:	str	r6, [sp, #16]
   16cf8:	bl	15104 <__assert_fail@plt+0x3dd4>
   16cfc:	str	r0, [sp, #36]	; 0x24
   16d00:	ldr	r0, [sp, #48]	; 0x30
   16d04:	ldr	r1, [sp, #36]	; 0x24
   16d08:	cmp	r0, r1
   16d0c:	bhi	16db8 <__assert_fail@plt+0x5a88>
   16d10:	ldr	r0, [sp, #36]	; 0x24
   16d14:	add	r0, r0, #1
   16d18:	str	r0, [sp, #48]	; 0x30
   16d1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16d20:	ldr	r2, [fp, #-20]	; 0xffffffec
   16d24:	add	r1, r1, r2, lsl #3
   16d28:	str	r0, [r1]
   16d2c:	ldr	r0, [sp, #44]	; 0x2c
   16d30:	movw	r1, #12860	; 0x323c
   16d34:	movt	r1, #3
   16d38:	cmp	r0, r1
   16d3c:	beq	16d48 <__assert_fail@plt+0x5a18>
   16d40:	ldr	r0, [sp, #44]	; 0x2c
   16d44:	bl	147b0 <__assert_fail@plt+0x3480>
   16d48:	ldr	r0, [sp, #48]	; 0x30
   16d4c:	bl	17f18 <__assert_fail@plt+0x6be8>
   16d50:	mov	lr, r0
   16d54:	str	r0, [sp, #44]	; 0x2c
   16d58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d60:	add	r0, r0, r1, lsl #3
   16d64:	str	lr, [r0, #4]
   16d68:	ldr	r0, [sp, #44]	; 0x2c
   16d6c:	ldr	r1, [sp, #48]	; 0x30
   16d70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d78:	ldr	lr, [fp, #-32]	; 0xffffffe0
   16d7c:	ldr	lr, [lr]
   16d80:	ldr	ip, [sp, #40]	; 0x28
   16d84:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16d88:	add	r4, r4, #8
   16d8c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16d90:	ldr	r5, [r5, #40]	; 0x28
   16d94:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16d98:	ldr	r6, [r6, #44]	; 0x2c
   16d9c:	str	lr, [sp]
   16da0:	str	ip, [sp, #4]
   16da4:	str	r4, [sp, #8]
   16da8:	str	r5, [sp, #12]
   16dac:	str	r6, [sp, #16]
   16db0:	bl	15104 <__assert_fail@plt+0x3dd4>
   16db4:	str	r0, [sp, #28]
   16db8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16dbc:	str	r0, [sp, #24]
   16dc0:	bl	11228 <__errno_location@plt>
   16dc4:	ldr	lr, [sp, #24]
   16dc8:	str	lr, [r0]
   16dcc:	ldr	r0, [sp, #44]	; 0x2c
   16dd0:	sub	sp, fp, #16
   16dd4:	pop	{r4, r5, r6, sl, fp, pc}
   16dd8:	svcvc	0x00ffffff
   16ddc:	push	{fp, lr}
   16de0:	mov	fp, sp
   16de4:	sub	sp, sp, #16
   16de8:	str	r0, [fp, #-4]
   16dec:	str	r1, [sp, #8]
   16df0:	str	r2, [sp, #4]
   16df4:	ldr	r0, [fp, #-4]
   16df8:	ldr	r1, [sp, #8]
   16dfc:	ldr	r2, [sp, #4]
   16e00:	movw	r3, #12812	; 0x320c
   16e04:	movt	r3, #3
   16e08:	bl	16b0c <__assert_fail@plt+0x57dc>
   16e0c:	mov	sp, fp
   16e10:	pop	{fp, pc}
   16e14:	push	{fp, lr}
   16e18:	mov	fp, sp
   16e1c:	sub	sp, sp, #8
   16e20:	str	r0, [sp, #4]
   16e24:	ldr	r1, [sp, #4]
   16e28:	movw	r0, #0
   16e2c:	bl	16ad8 <__assert_fail@plt+0x57a8>
   16e30:	mov	sp, fp
   16e34:	pop	{fp, pc}
   16e38:	push	{fp, lr}
   16e3c:	mov	fp, sp
   16e40:	sub	sp, sp, #8
   16e44:	str	r0, [sp, #4]
   16e48:	str	r1, [sp]
   16e4c:	ldr	r1, [sp, #4]
   16e50:	ldr	r2, [sp]
   16e54:	movw	r0, #0
   16e58:	bl	16ddc <__assert_fail@plt+0x5aac>
   16e5c:	mov	sp, fp
   16e60:	pop	{fp, pc}
   16e64:	push	{fp, lr}
   16e68:	mov	fp, sp
   16e6c:	sub	sp, sp, #64	; 0x40
   16e70:	str	r0, [fp, #-4]
   16e74:	str	r1, [fp, #-8]
   16e78:	str	r2, [fp, #-12]
   16e7c:	ldr	r1, [fp, #-8]
   16e80:	add	r0, sp, #4
   16e84:	bl	16ea4 <__assert_fail@plt+0x5b74>
   16e88:	ldr	r0, [fp, #-4]
   16e8c:	ldr	r1, [fp, #-12]
   16e90:	mvn	r2, #0
   16e94:	add	r3, sp, #4
   16e98:	bl	16b0c <__assert_fail@plt+0x57dc>
   16e9c:	mov	sp, fp
   16ea0:	pop	{fp, pc}
   16ea4:	push	{fp, lr}
   16ea8:	mov	fp, sp
   16eac:	sub	sp, sp, #8
   16eb0:	str	r1, [sp, #4]
   16eb4:	mov	r1, r0
   16eb8:	str	r0, [sp]
   16ebc:	mov	r0, r1
   16ec0:	movw	r1, #0
   16ec4:	and	r1, r1, #255	; 0xff
   16ec8:	movw	r2, #48	; 0x30
   16ecc:	bl	11240 <memset@plt>
   16ed0:	ldr	r0, [sp, #4]
   16ed4:	cmp	r0, #10
   16ed8:	bne	16ee0 <__assert_fail@plt+0x5bb0>
   16edc:	bl	11300 <abort@plt>
   16ee0:	ldr	r0, [sp, #4]
   16ee4:	ldr	r1, [sp]
   16ee8:	str	r0, [r1]
   16eec:	mov	sp, fp
   16ef0:	pop	{fp, pc}
   16ef4:	push	{fp, lr}
   16ef8:	mov	fp, sp
   16efc:	sub	sp, sp, #64	; 0x40
   16f00:	str	r0, [fp, #-4]
   16f04:	str	r1, [fp, #-8]
   16f08:	str	r2, [fp, #-12]
   16f0c:	str	r3, [fp, #-16]
   16f10:	ldr	r1, [fp, #-8]
   16f14:	mov	r0, sp
   16f18:	bl	16ea4 <__assert_fail@plt+0x5b74>
   16f1c:	ldr	r0, [fp, #-4]
   16f20:	ldr	r1, [fp, #-12]
   16f24:	ldr	r2, [fp, #-16]
   16f28:	mov	r3, sp
   16f2c:	bl	16b0c <__assert_fail@plt+0x57dc>
   16f30:	mov	sp, fp
   16f34:	pop	{fp, pc}
   16f38:	push	{fp, lr}
   16f3c:	mov	fp, sp
   16f40:	sub	sp, sp, #8
   16f44:	str	r0, [sp, #4]
   16f48:	str	r1, [sp]
   16f4c:	ldr	r1, [sp, #4]
   16f50:	ldr	r2, [sp]
   16f54:	movw	r0, #0
   16f58:	bl	16e64 <__assert_fail@plt+0x5b34>
   16f5c:	mov	sp, fp
   16f60:	pop	{fp, pc}
   16f64:	push	{fp, lr}
   16f68:	mov	fp, sp
   16f6c:	sub	sp, sp, #16
   16f70:	str	r0, [fp, #-4]
   16f74:	str	r1, [sp, #8]
   16f78:	str	r2, [sp, #4]
   16f7c:	ldr	r1, [fp, #-4]
   16f80:	ldr	r2, [sp, #8]
   16f84:	ldr	r3, [sp, #4]
   16f88:	movw	r0, #0
   16f8c:	bl	16ef4 <__assert_fail@plt+0x5bc4>
   16f90:	mov	sp, fp
   16f94:	pop	{fp, pc}
   16f98:	push	{fp, lr}
   16f9c:	mov	fp, sp
   16fa0:	sub	sp, sp, #72	; 0x48
   16fa4:	movw	r3, #12812	; 0x320c
   16fa8:	movt	r3, #3
   16fac:	str	r0, [fp, #-4]
   16fb0:	str	r1, [fp, #-8]
   16fb4:	strb	r2, [fp, #-9]
   16fb8:	add	r0, sp, #12
   16fbc:	mov	r1, r0
   16fc0:	str	r0, [sp, #8]
   16fc4:	mov	r0, r1
   16fc8:	mov	r1, r3
   16fcc:	movw	r2, #48	; 0x30
   16fd0:	bl	110e4 <memcpy@plt>
   16fd4:	ldr	r0, [sp, #8]
   16fd8:	ldrb	r1, [fp, #-9]
   16fdc:	movw	r2, #1
   16fe0:	bl	14ea8 <__assert_fail@plt+0x3b78>
   16fe4:	ldr	r1, [fp, #-4]
   16fe8:	ldr	r2, [fp, #-8]
   16fec:	movw	r3, #0
   16ff0:	str	r0, [sp, #4]
   16ff4:	mov	r0, r3
   16ff8:	add	r3, sp, #12
   16ffc:	bl	16b0c <__assert_fail@plt+0x57dc>
   17000:	mov	sp, fp
   17004:	pop	{fp, pc}
   17008:	push	{fp, lr}
   1700c:	mov	fp, sp
   17010:	sub	sp, sp, #8
   17014:	str	r0, [sp, #4]
   17018:	strb	r1, [sp, #3]
   1701c:	ldr	r0, [sp, #4]
   17020:	mvn	r1, #0
   17024:	ldrb	r2, [sp, #3]
   17028:	bl	16f98 <__assert_fail@plt+0x5c68>
   1702c:	mov	sp, fp
   17030:	pop	{fp, pc}
   17034:	push	{fp, lr}
   17038:	mov	fp, sp
   1703c:	sub	sp, sp, #8
   17040:	str	r0, [sp, #4]
   17044:	ldr	r0, [sp, #4]
   17048:	movw	r1, #58	; 0x3a
   1704c:	and	r1, r1, #255	; 0xff
   17050:	bl	17008 <__assert_fail@plt+0x5cd8>
   17054:	mov	sp, fp
   17058:	pop	{fp, pc}
   1705c:	push	{fp, lr}
   17060:	mov	fp, sp
   17064:	sub	sp, sp, #8
   17068:	str	r0, [sp, #4]
   1706c:	str	r1, [sp]
   17070:	ldr	r0, [sp, #4]
   17074:	ldr	r1, [sp]
   17078:	movw	r2, #58	; 0x3a
   1707c:	and	r2, r2, #255	; 0xff
   17080:	bl	16f98 <__assert_fail@plt+0x5c68>
   17084:	mov	sp, fp
   17088:	pop	{fp, pc}
   1708c:	push	{fp, lr}
   17090:	mov	fp, sp
   17094:	sub	sp, sp, #120	; 0x78
   17098:	str	r0, [fp, #-4]
   1709c:	str	r1, [fp, #-8]
   170a0:	str	r2, [fp, #-12]
   170a4:	ldr	r1, [fp, #-8]
   170a8:	add	r0, sp, #12
   170ac:	bl	16ea4 <__assert_fail@plt+0x5b74>
   170b0:	add	r0, sp, #60	; 0x3c
   170b4:	mov	r1, r0
   170b8:	add	r2, sp, #12
   170bc:	str	r0, [sp, #8]
   170c0:	mov	r0, r1
   170c4:	mov	r1, r2
   170c8:	movw	r2, #48	; 0x30
   170cc:	bl	110e4 <memcpy@plt>
   170d0:	ldr	r0, [sp, #8]
   170d4:	movw	r1, #58	; 0x3a
   170d8:	and	r1, r1, #255	; 0xff
   170dc:	movw	r2, #1
   170e0:	bl	14ea8 <__assert_fail@plt+0x3b78>
   170e4:	ldr	r1, [fp, #-4]
   170e8:	ldr	r2, [fp, #-12]
   170ec:	str	r0, [sp, #4]
   170f0:	mov	r0, r1
   170f4:	mov	r1, r2
   170f8:	mvn	r2, #0
   170fc:	add	r3, sp, #60	; 0x3c
   17100:	bl	16b0c <__assert_fail@plt+0x57dc>
   17104:	mov	sp, fp
   17108:	pop	{fp, pc}
   1710c:	push	{fp, lr}
   17110:	mov	fp, sp
   17114:	sub	sp, sp, #24
   17118:	str	r0, [fp, #-4]
   1711c:	str	r1, [fp, #-8]
   17120:	str	r2, [sp, #12]
   17124:	str	r3, [sp, #8]
   17128:	ldr	r0, [fp, #-4]
   1712c:	ldr	r1, [fp, #-8]
   17130:	ldr	r2, [sp, #12]
   17134:	ldr	r3, [sp, #8]
   17138:	mvn	ip, #0
   1713c:	str	ip, [sp]
   17140:	bl	1714c <__assert_fail@plt+0x5e1c>
   17144:	mov	sp, fp
   17148:	pop	{fp, pc}
   1714c:	push	{fp, lr}
   17150:	mov	fp, sp
   17154:	sub	sp, sp, #72	; 0x48
   17158:	ldr	ip, [fp, #8]
   1715c:	movw	lr, #12812	; 0x320c
   17160:	movt	lr, #3
   17164:	str	r0, [fp, #-4]
   17168:	str	r1, [fp, #-8]
   1716c:	str	r2, [fp, #-12]
   17170:	str	r3, [fp, #-16]
   17174:	add	r0, sp, #8
   17178:	mov	r1, r0
   1717c:	str	r0, [sp, #4]
   17180:	mov	r0, r1
   17184:	mov	r1, lr
   17188:	movw	r2, #48	; 0x30
   1718c:	str	ip, [sp]
   17190:	bl	110e4 <memcpy@plt>
   17194:	ldr	r1, [fp, #-8]
   17198:	ldr	r2, [fp, #-12]
   1719c:	ldr	r0, [sp, #4]
   171a0:	bl	14fa8 <__assert_fail@plt+0x3c78>
   171a4:	ldr	r0, [fp, #-4]
   171a8:	ldr	r1, [fp, #-16]
   171ac:	ldr	r2, [fp, #8]
   171b0:	add	r3, sp, #8
   171b4:	bl	16b0c <__assert_fail@plt+0x57dc>
   171b8:	mov	sp, fp
   171bc:	pop	{fp, pc}
   171c0:	push	{fp, lr}
   171c4:	mov	fp, sp
   171c8:	sub	sp, sp, #16
   171cc:	str	r0, [fp, #-4]
   171d0:	str	r1, [sp, #8]
   171d4:	str	r2, [sp, #4]
   171d8:	ldr	r1, [fp, #-4]
   171dc:	ldr	r2, [sp, #8]
   171e0:	ldr	r3, [sp, #4]
   171e4:	movw	r0, #0
   171e8:	bl	1710c <__assert_fail@plt+0x5ddc>
   171ec:	mov	sp, fp
   171f0:	pop	{fp, pc}
   171f4:	push	{fp, lr}
   171f8:	mov	fp, sp
   171fc:	sub	sp, sp, #24
   17200:	str	r0, [fp, #-4]
   17204:	str	r1, [fp, #-8]
   17208:	str	r2, [sp, #12]
   1720c:	str	r3, [sp, #8]
   17210:	ldr	r1, [fp, #-4]
   17214:	ldr	r2, [fp, #-8]
   17218:	ldr	r3, [sp, #12]
   1721c:	ldr	r0, [sp, #8]
   17220:	movw	ip, #0
   17224:	str	r0, [sp, #4]
   17228:	mov	r0, ip
   1722c:	ldr	ip, [sp, #4]
   17230:	str	ip, [sp]
   17234:	bl	1714c <__assert_fail@plt+0x5e1c>
   17238:	mov	sp, fp
   1723c:	pop	{fp, pc}
   17240:	push	{fp, lr}
   17244:	mov	fp, sp
   17248:	sub	sp, sp, #16
   1724c:	str	r0, [fp, #-4]
   17250:	str	r1, [sp, #8]
   17254:	str	r2, [sp, #4]
   17258:	ldr	r0, [fp, #-4]
   1725c:	ldr	r1, [sp, #8]
   17260:	ldr	r2, [sp, #4]
   17264:	movw	r3, #12596	; 0x3134
   17268:	movt	r3, #3
   1726c:	bl	16b0c <__assert_fail@plt+0x57dc>
   17270:	mov	sp, fp
   17274:	pop	{fp, pc}
   17278:	push	{fp, lr}
   1727c:	mov	fp, sp
   17280:	sub	sp, sp, #8
   17284:	str	r0, [sp, #4]
   17288:	str	r1, [sp]
   1728c:	ldr	r1, [sp, #4]
   17290:	ldr	r2, [sp]
   17294:	movw	r0, #0
   17298:	bl	17240 <__assert_fail@plt+0x5f10>
   1729c:	mov	sp, fp
   172a0:	pop	{fp, pc}
   172a4:	push	{fp, lr}
   172a8:	mov	fp, sp
   172ac:	sub	sp, sp, #8
   172b0:	str	r0, [sp, #4]
   172b4:	str	r1, [sp]
   172b8:	ldr	r0, [sp, #4]
   172bc:	ldr	r1, [sp]
   172c0:	mvn	r2, #0
   172c4:	bl	17240 <__assert_fail@plt+0x5f10>
   172c8:	mov	sp, fp
   172cc:	pop	{fp, pc}
   172d0:	push	{fp, lr}
   172d4:	mov	fp, sp
   172d8:	sub	sp, sp, #8
   172dc:	str	r0, [sp, #4]
   172e0:	ldr	r1, [sp, #4]
   172e4:	movw	r0, #0
   172e8:	bl	172a4 <__assert_fail@plt+0x5f74>
   172ec:	mov	sp, fp
   172f0:	pop	{fp, pc}
   172f4:	push	{fp, lr}
   172f8:	mov	fp, sp
   172fc:	sub	sp, sp, #24
   17300:	str	r0, [fp, #-8]
   17304:	str	r1, [sp, #12]
   17308:	ldr	r0, [fp, #-8]
   1730c:	bl	111ec <gettext@plt>
   17310:	str	r0, [sp, #8]
   17314:	ldr	r0, [sp, #8]
   17318:	ldr	r1, [fp, #-8]
   1731c:	cmp	r0, r1
   17320:	beq	17330 <__assert_fail@plt+0x6000>
   17324:	ldr	r0, [sp, #8]
   17328:	str	r0, [fp, #-4]
   1732c:	b	173fc <__assert_fail@plt+0x60cc>
   17330:	bl	1f6a8 <__assert_fail@plt+0xe378>
   17334:	str	r0, [sp, #4]
   17338:	ldr	r0, [sp, #4]
   1733c:	movw	r1, #9484	; 0x250c
   17340:	movt	r1, #2
   17344:	bl	1ef6c <__assert_fail@plt+0xdc3c>
   17348:	cmp	r0, #0
   1734c:	bne	17384 <__assert_fail@plt+0x6054>
   17350:	ldr	r0, [fp, #-8]
   17354:	ldrb	r0, [r0]
   17358:	cmp	r0, #96	; 0x60
   1735c:	movw	r0, #0
   17360:	moveq	r0, #1
   17364:	tst	r0, #1
   17368:	movw	r0, #9494	; 0x2516
   1736c:	movt	r0, #2
   17370:	movw	r1, #9490	; 0x2512
   17374:	movt	r1, #2
   17378:	movne	r0, r1
   1737c:	str	r0, [fp, #-4]
   17380:	b	173fc <__assert_fail@plt+0x60cc>
   17384:	ldr	r0, [sp, #4]
   17388:	movw	r1, #9498	; 0x251a
   1738c:	movt	r1, #2
   17390:	bl	1ef6c <__assert_fail@plt+0xdc3c>
   17394:	cmp	r0, #0
   17398:	bne	173d0 <__assert_fail@plt+0x60a0>
   1739c:	ldr	r0, [fp, #-8]
   173a0:	ldrb	r0, [r0]
   173a4:	cmp	r0, #96	; 0x60
   173a8:	movw	r0, #0
   173ac:	moveq	r0, #1
   173b0:	tst	r0, #1
   173b4:	movw	r0, #9510	; 0x2526
   173b8:	movt	r0, #2
   173bc:	movw	r1, #9506	; 0x2522
   173c0:	movt	r1, #2
   173c4:	movne	r0, r1
   173c8:	str	r0, [fp, #-4]
   173cc:	b	173fc <__assert_fail@plt+0x60cc>
   173d0:	ldr	r0, [sp, #12]
   173d4:	cmp	r0, #9
   173d8:	movw	r0, #0
   173dc:	moveq	r0, #1
   173e0:	tst	r0, #1
   173e4:	movw	r0, #9482	; 0x250a
   173e8:	movt	r0, #2
   173ec:	movw	r1, #9478	; 0x2506
   173f0:	movt	r1, #2
   173f4:	movne	r0, r1
   173f8:	str	r0, [fp, #-4]
   173fc:	ldr	r0, [fp, #-4]
   17400:	mov	sp, fp
   17404:	pop	{fp, pc}
   17408:	push	{fp, lr}
   1740c:	mov	fp, sp
   17410:	sub	sp, sp, #16
   17414:	str	r0, [fp, #-4]
   17418:	str	r1, [sp, #8]
   1741c:	str	r2, [sp, #4]
   17420:	ldr	r0, [fp, #-4]
   17424:	ldr	r1, [sp, #8]
   17428:	ldr	r2, [sp, #4]
   1742c:	bl	17438 <__assert_fail@plt+0x6108>
   17430:	mov	sp, fp
   17434:	pop	{fp, pc}
   17438:	push	{fp, lr}
   1743c:	mov	fp, sp
   17440:	sub	sp, sp, #24
   17444:	str	r0, [fp, #-8]
   17448:	str	r1, [sp, #12]
   1744c:	str	r2, [sp, #8]
   17450:	ldr	r0, [fp, #-8]
   17454:	bl	17538 <__assert_fail@plt+0x6208>
   17458:	str	r0, [sp, #4]
   1745c:	ldr	r0, [sp, #4]
   17460:	movw	r1, #0
   17464:	cmp	r0, r1
   17468:	bne	17490 <__assert_fail@plt+0x6160>
   1746c:	ldr	r0, [sp, #8]
   17470:	cmp	r0, #0
   17474:	bls	17484 <__assert_fail@plt+0x6154>
   17478:	ldr	r0, [sp, #12]
   1747c:	movw	r1, #0
   17480:	strb	r1, [r0]
   17484:	movw	r0, #22
   17488:	str	r0, [fp, #-4]
   1748c:	b	1750c <__assert_fail@plt+0x61dc>
   17490:	ldr	r0, [sp, #4]
   17494:	bl	11204 <strlen@plt>
   17498:	str	r0, [sp]
   1749c:	ldr	r0, [sp]
   174a0:	ldr	lr, [sp, #8]
   174a4:	cmp	r0, lr
   174a8:	bcs	174cc <__assert_fail@plt+0x619c>
   174ac:	ldr	r0, [sp, #12]
   174b0:	ldr	r1, [sp, #4]
   174b4:	ldr	r2, [sp]
   174b8:	add	r2, r2, #1
   174bc:	bl	110e4 <memcpy@plt>
   174c0:	movw	r0, #0
   174c4:	str	r0, [fp, #-4]
   174c8:	b	1750c <__assert_fail@plt+0x61dc>
   174cc:	ldr	r0, [sp, #8]
   174d0:	cmp	r0, #0
   174d4:	bls	17504 <__assert_fail@plt+0x61d4>
   174d8:	ldr	r0, [sp, #12]
   174dc:	ldr	r1, [sp, #4]
   174e0:	ldr	r2, [sp, #8]
   174e4:	sub	r2, r2, #1
   174e8:	bl	110e4 <memcpy@plt>
   174ec:	ldr	r0, [sp, #12]
   174f0:	ldr	r1, [sp, #8]
   174f4:	sub	r1, r1, #1
   174f8:	add	r0, r0, r1
   174fc:	movw	r1, #0
   17500:	strb	r1, [r0]
   17504:	movw	r0, #34	; 0x22
   17508:	str	r0, [fp, #-4]
   1750c:	ldr	r0, [fp, #-4]
   17510:	mov	sp, fp
   17514:	pop	{fp, pc}
   17518:	push	{fp, lr}
   1751c:	mov	fp, sp
   17520:	sub	sp, sp, #8
   17524:	str	r0, [sp, #4]
   17528:	ldr	r0, [sp, #4]
   1752c:	bl	17538 <__assert_fail@plt+0x6208>
   17530:	mov	sp, fp
   17534:	pop	{fp, pc}
   17538:	push	{fp, lr}
   1753c:	mov	fp, sp
   17540:	sub	sp, sp, #8
   17544:	str	r0, [sp, #4]
   17548:	ldr	r0, [sp, #4]
   1754c:	movw	r1, #0
   17550:	bl	11294 <setlocale@plt>
   17554:	str	r0, [sp]
   17558:	ldr	r0, [sp]
   1755c:	mov	sp, fp
   17560:	pop	{fp, pc}
   17564:	push	{fp, lr}
   17568:	mov	fp, sp
   1756c:	sub	sp, sp, #8
   17570:	str	r0, [sp, #4]
   17574:	ldr	r0, [sp, #4]
   17578:	movw	r1, #0
   1757c:	movw	r2, #3
   17580:	bl	1f0f4 <__assert_fail@plt+0xddc4>
   17584:	mov	sp, fp
   17588:	pop	{fp, pc}
   1758c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17590:	add	fp, sp, #28
   17594:	sub	sp, sp, #260	; 0x104
   17598:	ldr	ip, [fp, #12]
   1759c:	ldr	lr, [fp, #8]
   175a0:	str	r0, [fp, #-32]	; 0xffffffe0
   175a4:	str	r1, [fp, #-36]	; 0xffffffdc
   175a8:	str	r2, [fp, #-40]	; 0xffffffd8
   175ac:	str	r3, [fp, #-44]	; 0xffffffd4
   175b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   175b4:	movw	r1, #0
   175b8:	cmp	r0, r1
   175bc:	str	lr, [fp, #-48]	; 0xffffffd0
   175c0:	str	ip, [fp, #-52]	; 0xffffffcc
   175c4:	beq	175fc <__assert_fail@plt+0x62cc>
   175c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   175d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   175d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   175d8:	movw	ip, #9600	; 0x2580
   175dc:	movt	ip, #2
   175e0:	str	r1, [fp, #-56]	; 0xffffffc8
   175e4:	mov	r1, ip
   175e8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   175ec:	str	ip, [sp]
   175f0:	bl	1121c <fprintf@plt>
   175f4:	str	r0, [fp, #-60]	; 0xffffffc4
   175f8:	b	17618 <__assert_fail@plt+0x62e8>
   175fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17600:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17604:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17608:	movw	r1, #9612	; 0x258c
   1760c:	movt	r1, #2
   17610:	bl	1121c <fprintf@plt>
   17614:	str	r0, [fp, #-64]	; 0xffffffc0
   17618:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1761c:	movw	r1, #9619	; 0x2593
   17620:	movt	r1, #2
   17624:	str	r0, [fp, #-68]	; 0xffffffbc
   17628:	mov	r0, r1
   1762c:	bl	111ec <gettext@plt>
   17630:	movw	r1, #10337	; 0x2861
   17634:	movt	r1, #2
   17638:	movw	r3, #2022	; 0x7e6
   1763c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   17640:	str	r0, [fp, #-72]	; 0xffffffb8
   17644:	mov	r0, lr
   17648:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1764c:	bl	1121c <fprintf@plt>
   17650:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17654:	movw	r2, #8781	; 0x224d
   17658:	movt	r2, #2
   1765c:	str	r0, [fp, #-76]	; 0xffffffb4
   17660:	mov	r0, r2
   17664:	str	r2, [fp, #-80]	; 0xffffffb0
   17668:	bl	11084 <fputs_unlocked@plt>
   1766c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17670:	movw	r2, #9623	; 0x2597
   17674:	movt	r2, #2
   17678:	str	r0, [fp, #-84]	; 0xffffffac
   1767c:	mov	r0, r2
   17680:	str	r1, [fp, #-88]	; 0xffffffa8
   17684:	bl	111ec <gettext@plt>
   17688:	movw	r2, #9794	; 0x2642
   1768c:	movt	r2, #2
   17690:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17694:	str	r0, [fp, #-92]	; 0xffffffa4
   17698:	mov	r0, r1
   1769c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   176a0:	bl	1121c <fprintf@plt>
   176a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   176a8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   176ac:	str	r0, [fp, #-96]	; 0xffffffa0
   176b0:	mov	r0, r2
   176b4:	bl	11084 <fputs_unlocked@plt>
   176b8:	ldr	r1, [fp, #12]
   176bc:	cmp	r1, #9
   176c0:	str	r0, [fp, #-100]	; 0xffffff9c
   176c4:	str	r1, [fp, #-104]	; 0xffffff98
   176c8:	bhi	17b08 <__assert_fail@plt+0x67d8>
   176cc:	add	r0, pc, #8
   176d0:	ldr	r1, [fp, #-104]	; 0xffffff98
   176d4:	ldr	r0, [r0, r1, lsl #2]
   176d8:	mov	pc, r0
   176dc:	andeq	r7, r1, r4, lsl #14
   176e0:	andeq	r7, r1, r8, lsl #14
   176e4:	andeq	r7, r1, r4, asr #14
   176e8:	andeq	r7, r1, r8, lsl #15
   176ec:	andeq	r7, r1, r4, ror #15
   176f0:	andeq	r7, r1, ip, asr #16
   176f4:	andeq	r7, r1, r0, asr #17
   176f8:	andeq	r7, r1, r0, asr #18
   176fc:	andeq	r7, r1, ip, asr #19
   17700:	andeq	r7, r1, r4, ror #20
   17704:	b	17ba8 <__assert_fail@plt+0x6878>
   17708:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1770c:	movw	r1, #9828	; 0x2664
   17710:	movt	r1, #2
   17714:	str	r0, [fp, #-108]	; 0xffffff94
   17718:	mov	r0, r1
   1771c:	bl	111ec <gettext@plt>
   17720:	ldr	r1, [fp, #8]
   17724:	ldr	r2, [r1]
   17728:	ldr	r1, [fp, #-108]	; 0xffffff94
   1772c:	str	r0, [fp, #-112]	; 0xffffff90
   17730:	mov	r0, r1
   17734:	ldr	r1, [fp, #-112]	; 0xffffff90
   17738:	bl	1121c <fprintf@plt>
   1773c:	str	r0, [fp, #-116]	; 0xffffff8c
   17740:	b	17ba8 <__assert_fail@plt+0x6878>
   17744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17748:	movw	r1, #9844	; 0x2674
   1774c:	movt	r1, #2
   17750:	str	r0, [fp, #-120]	; 0xffffff88
   17754:	mov	r0, r1
   17758:	bl	111ec <gettext@plt>
   1775c:	ldr	r1, [fp, #8]
   17760:	ldr	r2, [r1]
   17764:	ldr	r1, [fp, #8]
   17768:	ldr	r3, [r1, #4]
   1776c:	ldr	r1, [fp, #-120]	; 0xffffff88
   17770:	str	r0, [fp, #-124]	; 0xffffff84
   17774:	mov	r0, r1
   17778:	ldr	r1, [fp, #-124]	; 0xffffff84
   1777c:	bl	1121c <fprintf@plt>
   17780:	str	r0, [fp, #-128]	; 0xffffff80
   17784:	b	17ba8 <__assert_fail@plt+0x6878>
   17788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1778c:	movw	r1, #9867	; 0x268b
   17790:	movt	r1, #2
   17794:	str	r0, [fp, #-132]	; 0xffffff7c
   17798:	mov	r0, r1
   1779c:	bl	111ec <gettext@plt>
   177a0:	ldr	r1, [fp, #8]
   177a4:	ldr	r2, [r1]
   177a8:	ldr	r1, [fp, #8]
   177ac:	ldr	r3, [r1, #4]
   177b0:	ldr	r1, [fp, #8]
   177b4:	ldr	r1, [r1, #8]
   177b8:	ldr	lr, [fp, #-132]	; 0xffffff7c
   177bc:	str	r0, [fp, #-136]	; 0xffffff78
   177c0:	mov	r0, lr
   177c4:	ldr	ip, [fp, #-136]	; 0xffffff78
   177c8:	str	r1, [fp, #-140]	; 0xffffff74
   177cc:	mov	r1, ip
   177d0:	ldr	r4, [fp, #-140]	; 0xffffff74
   177d4:	str	r4, [sp]
   177d8:	bl	1121c <fprintf@plt>
   177dc:	str	r0, [sp, #144]	; 0x90
   177e0:	b	17ba8 <__assert_fail@plt+0x6878>
   177e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177e8:	movw	r1, #9895	; 0x26a7
   177ec:	movt	r1, #2
   177f0:	str	r0, [sp, #140]	; 0x8c
   177f4:	mov	r0, r1
   177f8:	bl	111ec <gettext@plt>
   177fc:	ldr	r1, [fp, #8]
   17800:	ldr	r2, [r1]
   17804:	ldr	r1, [fp, #8]
   17808:	ldr	r3, [r1, #4]
   1780c:	ldr	r1, [fp, #8]
   17810:	ldr	r1, [r1, #8]
   17814:	ldr	lr, [fp, #8]
   17818:	ldr	lr, [lr, #12]
   1781c:	ldr	ip, [sp, #140]	; 0x8c
   17820:	str	r0, [sp, #136]	; 0x88
   17824:	mov	r0, ip
   17828:	ldr	r4, [sp, #136]	; 0x88
   1782c:	str	r1, [sp, #132]	; 0x84
   17830:	mov	r1, r4
   17834:	ldr	r5, [sp, #132]	; 0x84
   17838:	str	r5, [sp]
   1783c:	str	lr, [sp, #4]
   17840:	bl	1121c <fprintf@plt>
   17844:	str	r0, [sp, #128]	; 0x80
   17848:	b	17ba8 <__assert_fail@plt+0x6878>
   1784c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17850:	movw	r1, #9927	; 0x26c7
   17854:	movt	r1, #2
   17858:	str	r0, [sp, #124]	; 0x7c
   1785c:	mov	r0, r1
   17860:	bl	111ec <gettext@plt>
   17864:	ldr	r1, [fp, #8]
   17868:	ldr	r2, [r1]
   1786c:	ldr	r1, [fp, #8]
   17870:	ldr	r3, [r1, #4]
   17874:	ldr	r1, [fp, #8]
   17878:	ldr	r1, [r1, #8]
   1787c:	ldr	lr, [fp, #8]
   17880:	ldr	lr, [lr, #12]
   17884:	ldr	ip, [fp, #8]
   17888:	ldr	ip, [ip, #16]
   1788c:	ldr	r4, [sp, #124]	; 0x7c
   17890:	str	r0, [sp, #120]	; 0x78
   17894:	mov	r0, r4
   17898:	ldr	r5, [sp, #120]	; 0x78
   1789c:	str	r1, [sp, #116]	; 0x74
   178a0:	mov	r1, r5
   178a4:	ldr	r6, [sp, #116]	; 0x74
   178a8:	str	r6, [sp]
   178ac:	str	lr, [sp, #4]
   178b0:	str	ip, [sp, #8]
   178b4:	bl	1121c <fprintf@plt>
   178b8:	str	r0, [sp, #112]	; 0x70
   178bc:	b	17ba8 <__assert_fail@plt+0x6878>
   178c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178c4:	movw	r1, #9963	; 0x26eb
   178c8:	movt	r1, #2
   178cc:	str	r0, [sp, #108]	; 0x6c
   178d0:	mov	r0, r1
   178d4:	bl	111ec <gettext@plt>
   178d8:	ldr	r1, [fp, #8]
   178dc:	ldr	r2, [r1]
   178e0:	ldr	r1, [fp, #8]
   178e4:	ldr	r3, [r1, #4]
   178e8:	ldr	r1, [fp, #8]
   178ec:	ldr	r1, [r1, #8]
   178f0:	ldr	lr, [fp, #8]
   178f4:	ldr	lr, [lr, #12]
   178f8:	ldr	ip, [fp, #8]
   178fc:	ldr	ip, [ip, #16]
   17900:	ldr	r4, [fp, #8]
   17904:	ldr	r4, [r4, #20]
   17908:	ldr	r5, [sp, #108]	; 0x6c
   1790c:	str	r0, [sp, #104]	; 0x68
   17910:	mov	r0, r5
   17914:	ldr	r6, [sp, #104]	; 0x68
   17918:	str	r1, [sp, #100]	; 0x64
   1791c:	mov	r1, r6
   17920:	ldr	r7, [sp, #100]	; 0x64
   17924:	str	r7, [sp]
   17928:	str	lr, [sp, #4]
   1792c:	str	ip, [sp, #8]
   17930:	str	r4, [sp, #12]
   17934:	bl	1121c <fprintf@plt>
   17938:	str	r0, [sp, #96]	; 0x60
   1793c:	b	17ba8 <__assert_fail@plt+0x6878>
   17940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17944:	movw	r1, #10003	; 0x2713
   17948:	movt	r1, #2
   1794c:	str	r0, [sp, #92]	; 0x5c
   17950:	mov	r0, r1
   17954:	bl	111ec <gettext@plt>
   17958:	ldr	r1, [fp, #8]
   1795c:	ldr	r2, [r1]
   17960:	ldr	r1, [fp, #8]
   17964:	ldr	r3, [r1, #4]
   17968:	ldr	r1, [fp, #8]
   1796c:	ldr	r1, [r1, #8]
   17970:	ldr	lr, [fp, #8]
   17974:	ldr	lr, [lr, #12]
   17978:	ldr	ip, [fp, #8]
   1797c:	ldr	ip, [ip, #16]
   17980:	ldr	r4, [fp, #8]
   17984:	ldr	r4, [r4, #20]
   17988:	ldr	r5, [fp, #8]
   1798c:	ldr	r5, [r5, #24]
   17990:	ldr	r6, [sp, #92]	; 0x5c
   17994:	str	r0, [sp, #88]	; 0x58
   17998:	mov	r0, r6
   1799c:	ldr	r7, [sp, #88]	; 0x58
   179a0:	str	r1, [sp, #84]	; 0x54
   179a4:	mov	r1, r7
   179a8:	ldr	r8, [sp, #84]	; 0x54
   179ac:	str	r8, [sp]
   179b0:	str	lr, [sp, #4]
   179b4:	str	ip, [sp, #8]
   179b8:	str	r4, [sp, #12]
   179bc:	str	r5, [sp, #16]
   179c0:	bl	1121c <fprintf@plt>
   179c4:	str	r0, [sp, #80]	; 0x50
   179c8:	b	17ba8 <__assert_fail@plt+0x6878>
   179cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179d0:	movw	r1, #10047	; 0x273f
   179d4:	movt	r1, #2
   179d8:	str	r0, [sp, #76]	; 0x4c
   179dc:	mov	r0, r1
   179e0:	bl	111ec <gettext@plt>
   179e4:	ldr	r1, [fp, #8]
   179e8:	ldr	r2, [r1]
   179ec:	ldr	r1, [fp, #8]
   179f0:	ldr	r3, [r1, #4]
   179f4:	ldr	r1, [fp, #8]
   179f8:	ldr	r1, [r1, #8]
   179fc:	ldr	lr, [fp, #8]
   17a00:	ldr	lr, [lr, #12]
   17a04:	ldr	ip, [fp, #8]
   17a08:	ldr	ip, [ip, #16]
   17a0c:	ldr	r4, [fp, #8]
   17a10:	ldr	r4, [r4, #20]
   17a14:	ldr	r5, [fp, #8]
   17a18:	ldr	r5, [r5, #24]
   17a1c:	ldr	r6, [fp, #8]
   17a20:	ldr	r6, [r6, #28]
   17a24:	ldr	r7, [sp, #76]	; 0x4c
   17a28:	str	r0, [sp, #72]	; 0x48
   17a2c:	mov	r0, r7
   17a30:	ldr	r8, [sp, #72]	; 0x48
   17a34:	str	r1, [sp, #68]	; 0x44
   17a38:	mov	r1, r8
   17a3c:	ldr	r9, [sp, #68]	; 0x44
   17a40:	str	r9, [sp]
   17a44:	str	lr, [sp, #4]
   17a48:	str	ip, [sp, #8]
   17a4c:	str	r4, [sp, #12]
   17a50:	str	r5, [sp, #16]
   17a54:	str	r6, [sp, #20]
   17a58:	bl	1121c <fprintf@plt>
   17a5c:	str	r0, [sp, #64]	; 0x40
   17a60:	b	17ba8 <__assert_fail@plt+0x6878>
   17a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a68:	movw	r1, #10095	; 0x276f
   17a6c:	movt	r1, #2
   17a70:	str	r0, [sp, #60]	; 0x3c
   17a74:	mov	r0, r1
   17a78:	bl	111ec <gettext@plt>
   17a7c:	ldr	r1, [fp, #8]
   17a80:	ldr	r2, [r1]
   17a84:	ldr	r1, [fp, #8]
   17a88:	ldr	r3, [r1, #4]
   17a8c:	ldr	r1, [fp, #8]
   17a90:	ldr	r1, [r1, #8]
   17a94:	ldr	lr, [fp, #8]
   17a98:	ldr	lr, [lr, #12]
   17a9c:	ldr	ip, [fp, #8]
   17aa0:	ldr	ip, [ip, #16]
   17aa4:	ldr	r4, [fp, #8]
   17aa8:	ldr	r4, [r4, #20]
   17aac:	ldr	r5, [fp, #8]
   17ab0:	ldr	r5, [r5, #24]
   17ab4:	ldr	r6, [fp, #8]
   17ab8:	ldr	r6, [r6, #28]
   17abc:	ldr	r7, [fp, #8]
   17ac0:	ldr	r7, [r7, #32]
   17ac4:	ldr	r8, [sp, #60]	; 0x3c
   17ac8:	str	r0, [sp, #56]	; 0x38
   17acc:	mov	r0, r8
   17ad0:	ldr	r9, [sp, #56]	; 0x38
   17ad4:	str	r1, [sp, #52]	; 0x34
   17ad8:	mov	r1, r9
   17adc:	ldr	sl, [sp, #52]	; 0x34
   17ae0:	str	sl, [sp]
   17ae4:	str	lr, [sp, #4]
   17ae8:	str	ip, [sp, #8]
   17aec:	str	r4, [sp, #12]
   17af0:	str	r5, [sp, #16]
   17af4:	str	r6, [sp, #20]
   17af8:	str	r7, [sp, #24]
   17afc:	bl	1121c <fprintf@plt>
   17b00:	str	r0, [sp, #48]	; 0x30
   17b04:	b	17ba8 <__assert_fail@plt+0x6878>
   17b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b0c:	movw	r1, #10147	; 0x27a3
   17b10:	movt	r1, #2
   17b14:	str	r0, [sp, #44]	; 0x2c
   17b18:	mov	r0, r1
   17b1c:	bl	111ec <gettext@plt>
   17b20:	ldr	r1, [fp, #8]
   17b24:	ldr	r2, [r1]
   17b28:	ldr	r1, [fp, #8]
   17b2c:	ldr	r3, [r1, #4]
   17b30:	ldr	r1, [fp, #8]
   17b34:	ldr	r1, [r1, #8]
   17b38:	ldr	lr, [fp, #8]
   17b3c:	ldr	lr, [lr, #12]
   17b40:	ldr	ip, [fp, #8]
   17b44:	ldr	ip, [ip, #16]
   17b48:	ldr	r4, [fp, #8]
   17b4c:	ldr	r4, [r4, #20]
   17b50:	ldr	r5, [fp, #8]
   17b54:	ldr	r5, [r5, #24]
   17b58:	ldr	r6, [fp, #8]
   17b5c:	ldr	r6, [r6, #28]
   17b60:	ldr	r7, [fp, #8]
   17b64:	ldr	r7, [r7, #32]
   17b68:	ldr	r8, [sp, #44]	; 0x2c
   17b6c:	str	r0, [sp, #40]	; 0x28
   17b70:	mov	r0, r8
   17b74:	ldr	r9, [sp, #40]	; 0x28
   17b78:	str	r1, [sp, #36]	; 0x24
   17b7c:	mov	r1, r9
   17b80:	ldr	sl, [sp, #36]	; 0x24
   17b84:	str	sl, [sp]
   17b88:	str	lr, [sp, #4]
   17b8c:	str	ip, [sp, #8]
   17b90:	str	r4, [sp, #12]
   17b94:	str	r5, [sp, #16]
   17b98:	str	r6, [sp, #20]
   17b9c:	str	r7, [sp, #24]
   17ba0:	bl	1121c <fprintf@plt>
   17ba4:	str	r0, [sp, #32]
   17ba8:	sub	sp, fp, #28
   17bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bb0:	push	{fp, lr}
   17bb4:	mov	fp, sp
   17bb8:	sub	sp, sp, #32
   17bbc:	ldr	ip, [fp, #8]
   17bc0:	str	r0, [fp, #-4]
   17bc4:	str	r1, [fp, #-8]
   17bc8:	str	r2, [fp, #-12]
   17bcc:	str	r3, [sp, #16]
   17bd0:	movw	r0, #0
   17bd4:	str	r0, [sp, #12]
   17bd8:	str	ip, [sp, #8]
   17bdc:	ldr	r0, [fp, #8]
   17be0:	ldr	r1, [sp, #12]
   17be4:	add	r0, r0, r1, lsl #2
   17be8:	ldr	r0, [r0]
   17bec:	movw	r1, #0
   17bf0:	cmp	r0, r1
   17bf4:	beq	17c0c <__assert_fail@plt+0x68dc>
   17bf8:	b	17bfc <__assert_fail@plt+0x68cc>
   17bfc:	ldr	r0, [sp, #12]
   17c00:	add	r0, r0, #1
   17c04:	str	r0, [sp, #12]
   17c08:	b	17bdc <__assert_fail@plt+0x68ac>
   17c0c:	ldr	r0, [fp, #-4]
   17c10:	ldr	r1, [fp, #-8]
   17c14:	ldr	r2, [fp, #-12]
   17c18:	ldr	r3, [sp, #16]
   17c1c:	ldr	ip, [fp, #8]
   17c20:	ldr	lr, [sp, #12]
   17c24:	str	ip, [sp]
   17c28:	str	lr, [sp, #4]
   17c2c:	bl	1758c <__assert_fail@plt+0x625c>
   17c30:	mov	sp, fp
   17c34:	pop	{fp, pc}
   17c38:	push	{fp, lr}
   17c3c:	mov	fp, sp
   17c40:	sub	sp, sp, #80	; 0x50
   17c44:	ldr	ip, [fp, #8]
   17c48:	str	ip, [fp, #-4]
   17c4c:	str	r0, [fp, #-8]
   17c50:	str	r1, [fp, #-12]
   17c54:	str	r2, [fp, #-16]
   17c58:	str	r3, [fp, #-20]	; 0xffffffec
   17c5c:	movw	r0, #0
   17c60:	str	r0, [fp, #-24]	; 0xffffffe8
   17c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c68:	cmp	r0, #10
   17c6c:	movw	r0, #0
   17c70:	str	r0, [sp, #12]
   17c74:	bcs	17cac <__assert_fail@plt+0x697c>
   17c78:	ldr	r0, [fp, #-4]
   17c7c:	add	r1, r0, #4
   17c80:	str	r1, [fp, #-4]
   17c84:	ldr	r0, [r0]
   17c88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c8c:	add	r2, sp, #16
   17c90:	add	r1, r2, r1, lsl #2
   17c94:	str	r0, [r1]
   17c98:	movw	r1, #0
   17c9c:	cmp	r0, r1
   17ca0:	movw	r0, #0
   17ca4:	movne	r0, #1
   17ca8:	str	r0, [sp, #12]
   17cac:	ldr	r0, [sp, #12]
   17cb0:	tst	r0, #1
   17cb4:	beq	17ccc <__assert_fail@plt+0x699c>
   17cb8:	b	17cbc <__assert_fail@plt+0x698c>
   17cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cc0:	add	r0, r0, #1
   17cc4:	str	r0, [fp, #-24]	; 0xffffffe8
   17cc8:	b	17c64 <__assert_fail@plt+0x6934>
   17ccc:	add	r0, sp, #16
   17cd0:	ldr	r1, [fp, #-8]
   17cd4:	ldr	r2, [fp, #-12]
   17cd8:	ldr	r3, [fp, #-16]
   17cdc:	ldr	ip, [fp, #-20]	; 0xffffffec
   17ce0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   17ce4:	str	r0, [sp, #8]
   17ce8:	mov	r0, r1
   17cec:	mov	r1, r2
   17cf0:	mov	r2, r3
   17cf4:	mov	r3, ip
   17cf8:	ldr	ip, [sp, #8]
   17cfc:	str	ip, [sp]
   17d00:	str	lr, [sp, #4]
   17d04:	bl	1758c <__assert_fail@plt+0x625c>
   17d08:	mov	sp, fp
   17d0c:	pop	{fp, pc}
   17d10:	push	{fp, lr}
   17d14:	mov	fp, sp
   17d18:	sub	sp, sp, #32
   17d1c:	str	r0, [fp, #-4]
   17d20:	str	r1, [fp, #-8]
   17d24:	str	r2, [fp, #-12]
   17d28:	str	r3, [sp, #16]
   17d2c:	add	r0, fp, #8
   17d30:	str	r0, [sp, #12]
   17d34:	ldr	r0, [fp, #-4]
   17d38:	ldr	r1, [fp, #-8]
   17d3c:	ldr	r2, [fp, #-12]
   17d40:	ldr	r3, [sp, #16]
   17d44:	ldr	ip, [sp, #12]
   17d48:	mov	lr, sp
   17d4c:	str	ip, [lr]
   17d50:	bl	17c38 <__assert_fail@plt+0x6908>
   17d54:	add	r0, sp, #12
   17d58:	str	r0, [sp, #8]
   17d5c:	mov	sp, fp
   17d60:	pop	{fp, pc}
   17d64:	push	{fp, lr}
   17d68:	mov	fp, sp
   17d6c:	sub	sp, sp, #16
   17d70:	movw	r0, #12676	; 0x3184
   17d74:	movt	r0, #3
   17d78:	ldr	r1, [r0]
   17d7c:	movw	r0, #8781	; 0x224d
   17d80:	movt	r0, #2
   17d84:	bl	11084 <fputs_unlocked@plt>
   17d88:	movw	r1, #10207	; 0x27df
   17d8c:	movt	r1, #2
   17d90:	str	r0, [fp, #-4]
   17d94:	mov	r0, r1
   17d98:	bl	111ec <gettext@plt>
   17d9c:	movw	r1, #10227	; 0x27f3
   17da0:	movt	r1, #2
   17da4:	bl	110b4 <printf@plt>
   17da8:	movw	r1, #10249	; 0x2809
   17dac:	movt	r1, #2
   17db0:	str	r0, [sp, #8]
   17db4:	mov	r0, r1
   17db8:	bl	111ec <gettext@plt>
   17dbc:	movw	r1, #8339	; 0x2093
   17dc0:	movt	r1, #2
   17dc4:	movw	r2, #8590	; 0x218e
   17dc8:	movt	r2, #2
   17dcc:	bl	110b4 <printf@plt>
   17dd0:	movw	r1, #10269	; 0x281d
   17dd4:	movt	r1, #2
   17dd8:	str	r0, [sp, #4]
   17ddc:	mov	r0, r1
   17de0:	bl	111ec <gettext@plt>
   17de4:	movw	r1, #10308	; 0x2844
   17de8:	movt	r1, #2
   17dec:	bl	110b4 <printf@plt>
   17df0:	str	r0, [sp]
   17df4:	mov	sp, fp
   17df8:	pop	{fp, pc}
   17dfc:	push	{fp, lr}
   17e00:	mov	fp, sp
   17e04:	sub	sp, sp, #16
   17e08:	str	r0, [fp, #-4]
   17e0c:	str	r1, [sp, #8]
   17e10:	str	r2, [sp, #4]
   17e14:	ldr	r0, [fp, #-4]
   17e18:	ldr	r1, [sp, #8]
   17e1c:	ldr	r2, [sp, #4]
   17e20:	bl	17e2c <__assert_fail@plt+0x6afc>
   17e24:	mov	sp, fp
   17e28:	pop	{fp, pc}
   17e2c:	push	{fp, lr}
   17e30:	mov	fp, sp
   17e34:	sub	sp, sp, #16
   17e38:	str	r0, [fp, #-4]
   17e3c:	str	r1, [sp, #8]
   17e40:	str	r2, [sp, #4]
   17e44:	ldr	r0, [fp, #-4]
   17e48:	ldr	r1, [sp, #8]
   17e4c:	ldr	r2, [sp, #4]
   17e50:	bl	1fa5c <__assert_fail@plt+0xe72c>
   17e54:	str	r0, [sp]
   17e58:	ldr	r0, [sp]
   17e5c:	movw	r1, #0
   17e60:	cmp	r0, r1
   17e64:	bne	17e94 <__assert_fail@plt+0x6b64>
   17e68:	ldr	r0, [fp, #-4]
   17e6c:	movw	r1, #0
   17e70:	cmp	r0, r1
   17e74:	beq	17e90 <__assert_fail@plt+0x6b60>
   17e78:	ldr	r0, [sp, #8]
   17e7c:	cmp	r0, #0
   17e80:	beq	17e94 <__assert_fail@plt+0x6b64>
   17e84:	ldr	r0, [sp, #4]
   17e88:	cmp	r0, #0
   17e8c:	beq	17e94 <__assert_fail@plt+0x6b64>
   17e90:	bl	1ac7c <__assert_fail@plt+0x994c>
   17e94:	ldr	r0, [sp]
   17e98:	mov	sp, fp
   17e9c:	pop	{fp, pc}
   17ea0:	push	{fp, lr}
   17ea4:	mov	fp, sp
   17ea8:	sub	sp, sp, #8
   17eac:	str	r0, [sp, #4]
   17eb0:	ldr	r0, [sp, #4]
   17eb4:	bl	1ee58 <__assert_fail@plt+0xdb28>
   17eb8:	bl	17ec4 <__assert_fail@plt+0x6b94>
   17ebc:	mov	sp, fp
   17ec0:	pop	{fp, pc}
   17ec4:	push	{fp, lr}
   17ec8:	mov	fp, sp
   17ecc:	sub	sp, sp, #8
   17ed0:	str	r0, [sp, #4]
   17ed4:	ldr	r0, [sp, #4]
   17ed8:	movw	r1, #0
   17edc:	cmp	r0, r1
   17ee0:	bne	17ee8 <__assert_fail@plt+0x6bb8>
   17ee4:	bl	1ac7c <__assert_fail@plt+0x994c>
   17ee8:	ldr	r0, [sp, #4]
   17eec:	mov	sp, fp
   17ef0:	pop	{fp, pc}
   17ef4:	push	{fp, lr}
   17ef8:	mov	fp, sp
   17efc:	sub	sp, sp, #8
   17f00:	str	r0, [sp, #4]
   17f04:	ldr	r0, [sp, #4]
   17f08:	bl	1f4f0 <__assert_fail@plt+0xe1c0>
   17f0c:	bl	17ec4 <__assert_fail@plt+0x6b94>
   17f10:	mov	sp, fp
   17f14:	pop	{fp, pc}
   17f18:	push	{fp, lr}
   17f1c:	mov	fp, sp
   17f20:	sub	sp, sp, #8
   17f24:	str	r0, [sp, #4]
   17f28:	ldr	r0, [sp, #4]
   17f2c:	bl	17ea0 <__assert_fail@plt+0x6b70>
   17f30:	mov	sp, fp
   17f34:	pop	{fp, pc}
   17f38:	push	{fp, lr}
   17f3c:	mov	fp, sp
   17f40:	sub	sp, sp, #16
   17f44:	str	r0, [fp, #-4]
   17f48:	str	r1, [sp, #8]
   17f4c:	ldr	r0, [fp, #-4]
   17f50:	ldr	r1, [sp, #8]
   17f54:	bl	1eec8 <__assert_fail@plt+0xdb98>
   17f58:	str	r0, [sp, #4]
   17f5c:	ldr	r0, [sp, #4]
   17f60:	movw	r1, #0
   17f64:	cmp	r0, r1
   17f68:	bne	17f8c <__assert_fail@plt+0x6c5c>
   17f6c:	ldr	r0, [fp, #-4]
   17f70:	movw	r1, #0
   17f74:	cmp	r0, r1
   17f78:	beq	17f88 <__assert_fail@plt+0x6c58>
   17f7c:	ldr	r0, [sp, #8]
   17f80:	cmp	r0, #0
   17f84:	beq	17f8c <__assert_fail@plt+0x6c5c>
   17f88:	bl	1ac7c <__assert_fail@plt+0x994c>
   17f8c:	ldr	r0, [sp, #4]
   17f90:	mov	sp, fp
   17f94:	pop	{fp, pc}
   17f98:	push	{fp, lr}
   17f9c:	mov	fp, sp
   17fa0:	sub	sp, sp, #8
   17fa4:	str	r0, [sp, #4]
   17fa8:	str	r1, [sp]
   17fac:	ldr	r0, [sp, #4]
   17fb0:	ldr	r1, [sp]
   17fb4:	bl	1f530 <__assert_fail@plt+0xe200>
   17fb8:	bl	17ec4 <__assert_fail@plt+0x6b94>
   17fbc:	mov	sp, fp
   17fc0:	pop	{fp, pc}
   17fc4:	push	{fp, lr}
   17fc8:	mov	fp, sp
   17fcc:	sub	sp, sp, #16
   17fd0:	str	r0, [fp, #-4]
   17fd4:	str	r1, [sp, #8]
   17fd8:	str	r2, [sp, #4]
   17fdc:	ldr	r0, [fp, #-4]
   17fe0:	ldr	r1, [sp, #8]
   17fe4:	ldr	r2, [sp, #4]
   17fe8:	bl	1f628 <__assert_fail@plt+0xe2f8>
   17fec:	bl	17ec4 <__assert_fail@plt+0x6b94>
   17ff0:	mov	sp, fp
   17ff4:	pop	{fp, pc}
   17ff8:	push	{fp, lr}
   17ffc:	mov	fp, sp
   18000:	sub	sp, sp, #8
   18004:	str	r0, [sp, #4]
   18008:	str	r1, [sp]
   1800c:	ldr	r1, [sp, #4]
   18010:	ldr	r2, [sp]
   18014:	movw	r0, #0
   18018:	bl	17e2c <__assert_fail@plt+0x6afc>
   1801c:	mov	sp, fp
   18020:	pop	{fp, pc}
   18024:	push	{fp, lr}
   18028:	mov	fp, sp
   1802c:	sub	sp, sp, #8
   18030:	str	r0, [sp, #4]
   18034:	str	r1, [sp]
   18038:	ldr	r1, [sp, #4]
   1803c:	ldr	r2, [sp]
   18040:	movw	r0, #0
   18044:	bl	17fc4 <__assert_fail@plt+0x6c94>
   18048:	mov	sp, fp
   1804c:	pop	{fp, pc}
   18050:	push	{fp, lr}
   18054:	mov	fp, sp
   18058:	sub	sp, sp, #8
   1805c:	str	r0, [sp, #4]
   18060:	str	r1, [sp]
   18064:	ldr	r0, [sp, #4]
   18068:	ldr	r1, [sp]
   1806c:	movw	r2, #1
   18070:	bl	1807c <__assert_fail@plt+0x6d4c>
   18074:	mov	sp, fp
   18078:	pop	{fp, pc}
   1807c:	push	{fp, lr}
   18080:	mov	fp, sp
   18084:	sub	sp, sp, #16
   18088:	str	r0, [fp, #-4]
   1808c:	str	r1, [sp, #8]
   18090:	str	r2, [sp, #4]
   18094:	ldr	r0, [sp, #8]
   18098:	ldr	r0, [r0]
   1809c:	str	r0, [sp]
   180a0:	ldr	r0, [fp, #-4]
   180a4:	movw	r1, #0
   180a8:	cmp	r0, r1
   180ac:	bne	180f8 <__assert_fail@plt+0x6dc8>
   180b0:	ldr	r0, [sp]
   180b4:	cmp	r0, #0
   180b8:	bne	180f4 <__assert_fail@plt+0x6dc4>
   180bc:	ldr	r0, [sp, #4]
   180c0:	movw	r1, #64	; 0x40
   180c4:	udiv	r0, r1, r0
   180c8:	str	r0, [sp]
   180cc:	ldr	r0, [sp]
   180d0:	cmp	r0, #0
   180d4:	movw	r0, #0
   180d8:	movne	r0, #1
   180dc:	mvn	r1, #0
   180e0:	eor	r0, r0, r1
   180e4:	and	r0, r0, #1
   180e8:	ldr	r1, [sp]
   180ec:	add	r0, r1, r0
   180f0:	str	r0, [sp]
   180f4:	b	18128 <__assert_fail@plt+0x6df8>
   180f8:	ldr	r0, [sp]
   180fc:	ldr	r1, [sp]
   18100:	lsr	r1, r1, #1
   18104:	add	r1, r1, #1
   18108:	adds	r0, r0, r1
   1810c:	mov	r1, #0
   18110:	adc	r1, r1, #0
   18114:	str	r0, [sp]
   18118:	tst	r1, #1
   1811c:	beq	18124 <__assert_fail@plt+0x6df4>
   18120:	bl	1ac7c <__assert_fail@plt+0x994c>
   18124:	b	18128 <__assert_fail@plt+0x6df8>
   18128:	ldr	r0, [fp, #-4]
   1812c:	ldr	r1, [sp]
   18130:	ldr	r2, [sp, #4]
   18134:	bl	17e2c <__assert_fail@plt+0x6afc>
   18138:	str	r0, [fp, #-4]
   1813c:	ldr	r0, [sp]
   18140:	ldr	r1, [sp, #8]
   18144:	str	r0, [r1]
   18148:	ldr	r0, [fp, #-4]
   1814c:	mov	sp, fp
   18150:	pop	{fp, pc}
   18154:	push	{fp, lr}
   18158:	mov	fp, sp
   1815c:	sub	sp, sp, #376	; 0x178
   18160:	ldr	ip, [fp, #8]
   18164:	str	r0, [fp, #-4]
   18168:	str	r1, [fp, #-8]
   1816c:	str	r2, [fp, #-12]
   18170:	str	r3, [fp, #-16]
   18174:	ldr	r0, [fp, #-8]
   18178:	ldr	r0, [r0]
   1817c:	str	r0, [fp, #-20]	; 0xffffffec
   18180:	ldr	r0, [fp, #-20]	; 0xffffffec
   18184:	ldr	r1, [fp, #-20]	; 0xffffffec
   18188:	asr	r1, r1, #1
   1818c:	add	r1, r0, r1
   18190:	mov	r2, #1
   18194:	cmp	r1, r0
   18198:	movwvc	r2, #0
   1819c:	str	r1, [fp, #-24]	; 0xffffffe8
   181a0:	tst	r2, #1
   181a4:	str	ip, [fp, #-36]	; 0xffffffdc
   181a8:	beq	181b4 <__assert_fail@plt+0x6e84>
   181ac:	ldr	r0, [pc, #4044]	; 19180 <__assert_fail@plt+0x7e50>
   181b0:	str	r0, [fp, #-24]	; 0xffffffe8
   181b4:	ldr	r0, [fp, #-16]
   181b8:	movw	r1, #0
   181bc:	cmp	r1, r0
   181c0:	bgt	181dc <__assert_fail@plt+0x6eac>
   181c4:	ldr	r0, [fp, #-16]
   181c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181cc:	cmp	r0, r1
   181d0:	bge	181dc <__assert_fail@plt+0x6eac>
   181d4:	ldr	r0, [fp, #-16]
   181d8:	str	r0, [fp, #-24]	; 0xffffffe8
   181dc:	b	185b4 <__assert_fail@plt+0x7284>
   181e0:	b	181e4 <__assert_fail@plt+0x6eb4>
   181e4:	ldr	r0, [fp, #8]
   181e8:	cmp	r0, #0
   181ec:	bge	18300 <__assert_fail@plt+0x6fd0>
   181f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f4:	cmp	r0, #0
   181f8:	bge	18284 <__assert_fail@plt+0x6f54>
   181fc:	b	18200 <__assert_fail@plt+0x6ed0>
   18200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18204:	ldr	r1, [fp, #8]
   18208:	movw	r2, #127	; 0x7f
   1820c:	sdiv	r1, r2, r1
   18210:	cmp	r0, r1
   18214:	blt	183a0 <__assert_fail@plt+0x7070>
   18218:	b	183b8 <__assert_fail@plt+0x7088>
   1821c:	b	18220 <__assert_fail@plt+0x6ef0>
   18220:	ldr	r0, [pc, #4076]	; 19214 <__assert_fail@plt+0x7ee4>
   18224:	ldr	r1, [fp, #8]
   18228:	cmp	r1, r0
   1822c:	blt	18244 <__assert_fail@plt+0x6f14>
   18230:	b	18250 <__assert_fail@plt+0x6f20>
   18234:	ldr	r0, [fp, #8]
   18238:	movw	r1, #0
   1823c:	cmp	r1, r0
   18240:	bge	18250 <__assert_fail@plt+0x6f20>
   18244:	movw	r0, #0
   18248:	str	r0, [fp, #-40]	; 0xffffffd8
   1824c:	b	18268 <__assert_fail@plt+0x6f38>
   18250:	ldr	r0, [fp, #8]
   18254:	movw	r1, #0
   18258:	sub	r0, r1, r0
   1825c:	movw	r1, #127	; 0x7f
   18260:	sdiv	r0, r1, r0
   18264:	str	r0, [fp, #-40]	; 0xffffffd8
   18268:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1826c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18270:	mvn	r2, #0
   18274:	sub	r1, r2, r1
   18278:	cmp	r0, r1
   1827c:	ble	183a0 <__assert_fail@plt+0x7070>
   18280:	b	183b8 <__assert_fail@plt+0x7088>
   18284:	b	18288 <__assert_fail@plt+0x6f58>
   18288:	b	182e4 <__assert_fail@plt+0x6fb4>
   1828c:	b	182e4 <__assert_fail@plt+0x6fb4>
   18290:	ldr	r0, [fp, #8]
   18294:	cmn	r0, #1
   18298:	bne	182e4 <__assert_fail@plt+0x6fb4>
   1829c:	b	182a0 <__assert_fail@plt+0x6f70>
   182a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a4:	mvn	r1, #127	; 0x7f
   182a8:	add	r0, r0, r1
   182ac:	movw	r1, #0
   182b0:	cmp	r1, r0
   182b4:	blt	183a0 <__assert_fail@plt+0x7070>
   182b8:	b	183b8 <__assert_fail@plt+0x7088>
   182bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182c0:	movw	r1, #0
   182c4:	cmp	r1, r0
   182c8:	bge	183b8 <__assert_fail@plt+0x7088>
   182cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d0:	sub	r0, r0, #1
   182d4:	movw	r1, #127	; 0x7f
   182d8:	cmp	r1, r0
   182dc:	blt	183a0 <__assert_fail@plt+0x7070>
   182e0:	b	183b8 <__assert_fail@plt+0x7088>
   182e4:	ldr	r0, [fp, #8]
   182e8:	mvn	r1, #127	; 0x7f
   182ec:	sdiv	r0, r1, r0
   182f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182f4:	cmp	r0, r1
   182f8:	blt	183a0 <__assert_fail@plt+0x7070>
   182fc:	b	183b8 <__assert_fail@plt+0x7088>
   18300:	ldr	r0, [fp, #8]
   18304:	cmp	r0, #0
   18308:	bne	18310 <__assert_fail@plt+0x6fe0>
   1830c:	b	183b8 <__assert_fail@plt+0x7088>
   18310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18314:	cmp	r0, #0
   18318:	bge	18388 <__assert_fail@plt+0x7058>
   1831c:	b	18320 <__assert_fail@plt+0x6ff0>
   18320:	b	1836c <__assert_fail@plt+0x703c>
   18324:	b	1836c <__assert_fail@plt+0x703c>
   18328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1832c:	cmn	r0, #1
   18330:	bne	1836c <__assert_fail@plt+0x703c>
   18334:	b	18338 <__assert_fail@plt+0x7008>
   18338:	ldr	r0, [fp, #8]
   1833c:	mvn	r1, #127	; 0x7f
   18340:	add	r0, r0, r1
   18344:	movw	r1, #0
   18348:	cmp	r1, r0
   1834c:	blt	183a0 <__assert_fail@plt+0x7070>
   18350:	b	183b8 <__assert_fail@plt+0x7088>
   18354:	ldr	r0, [fp, #8]
   18358:	sub	r0, r0, #1
   1835c:	movw	r1, #127	; 0x7f
   18360:	cmp	r1, r0
   18364:	blt	183a0 <__assert_fail@plt+0x7070>
   18368:	b	183b8 <__assert_fail@plt+0x7088>
   1836c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18370:	mvn	r1, #127	; 0x7f
   18374:	sdiv	r0, r1, r0
   18378:	ldr	r1, [fp, #8]
   1837c:	cmp	r0, r1
   18380:	blt	183a0 <__assert_fail@plt+0x7070>
   18384:	b	183b8 <__assert_fail@plt+0x7088>
   18388:	ldr	r0, [fp, #8]
   1838c:	movw	r1, #127	; 0x7f
   18390:	sdiv	r0, r1, r0
   18394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18398:	cmp	r0, r1
   1839c:	bge	183b8 <__assert_fail@plt+0x7088>
   183a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a4:	ldr	r1, [fp, #8]
   183a8:	mul	r0, r0, r1
   183ac:	sxtb	r0, r0
   183b0:	str	r0, [fp, #-28]	; 0xffffffe4
   183b4:	b	195cc <__assert_fail@plt+0x829c>
   183b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183bc:	ldr	r1, [fp, #8]
   183c0:	mul	r0, r0, r1
   183c4:	sxtb	r0, r0
   183c8:	str	r0, [fp, #-28]	; 0xffffffe4
   183cc:	b	195dc <__assert_fail@plt+0x82ac>
   183d0:	ldr	r0, [fp, #8]
   183d4:	cmp	r0, #0
   183d8:	bge	184e8 <__assert_fail@plt+0x71b8>
   183dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e0:	cmp	r0, #0
   183e4:	bge	18470 <__assert_fail@plt+0x7140>
   183e8:	b	183ec <__assert_fail@plt+0x70bc>
   183ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f0:	ldr	r1, [fp, #8]
   183f4:	movw	r2, #255	; 0xff
   183f8:	sdiv	r1, r2, r1
   183fc:	cmp	r0, r1
   18400:	blt	18584 <__assert_fail@plt+0x7254>
   18404:	b	1859c <__assert_fail@plt+0x726c>
   18408:	b	1840c <__assert_fail@plt+0x70dc>
   1840c:	ldr	r0, [pc, #3584]	; 19214 <__assert_fail@plt+0x7ee4>
   18410:	ldr	r1, [fp, #8]
   18414:	cmp	r1, r0
   18418:	blt	18430 <__assert_fail@plt+0x7100>
   1841c:	b	1843c <__assert_fail@plt+0x710c>
   18420:	ldr	r0, [fp, #8]
   18424:	movw	r1, #0
   18428:	cmp	r1, r0
   1842c:	bge	1843c <__assert_fail@plt+0x710c>
   18430:	movw	r0, #0
   18434:	str	r0, [fp, #-44]	; 0xffffffd4
   18438:	b	18454 <__assert_fail@plt+0x7124>
   1843c:	ldr	r0, [fp, #8]
   18440:	movw	r1, #0
   18444:	sub	r0, r1, r0
   18448:	movw	r1, #255	; 0xff
   1844c:	sdiv	r0, r1, r0
   18450:	str	r0, [fp, #-44]	; 0xffffffd4
   18454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1845c:	mvn	r2, #0
   18460:	sub	r1, r2, r1
   18464:	cmp	r0, r1
   18468:	ble	18584 <__assert_fail@plt+0x7254>
   1846c:	b	1859c <__assert_fail@plt+0x726c>
   18470:	b	18474 <__assert_fail@plt+0x7144>
   18474:	b	184cc <__assert_fail@plt+0x719c>
   18478:	b	184cc <__assert_fail@plt+0x719c>
   1847c:	ldr	r0, [fp, #8]
   18480:	cmn	r0, #1
   18484:	bne	184cc <__assert_fail@plt+0x719c>
   18488:	b	1848c <__assert_fail@plt+0x715c>
   1848c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18490:	add	r0, r0, #0
   18494:	movw	r1, #0
   18498:	cmp	r1, r0
   1849c:	blt	18584 <__assert_fail@plt+0x7254>
   184a0:	b	1859c <__assert_fail@plt+0x726c>
   184a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a8:	movw	r1, #0
   184ac:	cmp	r1, r0
   184b0:	bge	1859c <__assert_fail@plt+0x726c>
   184b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b8:	sub	r0, r0, #1
   184bc:	mvn	r1, #0
   184c0:	cmp	r1, r0
   184c4:	blt	18584 <__assert_fail@plt+0x7254>
   184c8:	b	1859c <__assert_fail@plt+0x726c>
   184cc:	ldr	r0, [fp, #8]
   184d0:	movw	r1, #0
   184d4:	sdiv	r0, r1, r0
   184d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184dc:	cmp	r0, r1
   184e0:	blt	18584 <__assert_fail@plt+0x7254>
   184e4:	b	1859c <__assert_fail@plt+0x726c>
   184e8:	ldr	r0, [fp, #8]
   184ec:	cmp	r0, #0
   184f0:	bne	184f8 <__assert_fail@plt+0x71c8>
   184f4:	b	1859c <__assert_fail@plt+0x726c>
   184f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184fc:	cmp	r0, #0
   18500:	bge	1856c <__assert_fail@plt+0x723c>
   18504:	b	18508 <__assert_fail@plt+0x71d8>
   18508:	b	18550 <__assert_fail@plt+0x7220>
   1850c:	b	18550 <__assert_fail@plt+0x7220>
   18510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18514:	cmn	r0, #1
   18518:	bne	18550 <__assert_fail@plt+0x7220>
   1851c:	b	18520 <__assert_fail@plt+0x71f0>
   18520:	ldr	r0, [fp, #8]
   18524:	add	r0, r0, #0
   18528:	movw	r1, #0
   1852c:	cmp	r1, r0
   18530:	blt	18584 <__assert_fail@plt+0x7254>
   18534:	b	1859c <__assert_fail@plt+0x726c>
   18538:	ldr	r0, [fp, #8]
   1853c:	sub	r0, r0, #1
   18540:	mvn	r1, #0
   18544:	cmp	r1, r0
   18548:	blt	18584 <__assert_fail@plt+0x7254>
   1854c:	b	1859c <__assert_fail@plt+0x726c>
   18550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18554:	movw	r1, #0
   18558:	sdiv	r0, r1, r0
   1855c:	ldr	r1, [fp, #8]
   18560:	cmp	r0, r1
   18564:	blt	18584 <__assert_fail@plt+0x7254>
   18568:	b	1859c <__assert_fail@plt+0x726c>
   1856c:	ldr	r0, [fp, #8]
   18570:	movw	r1, #255	; 0xff
   18574:	sdiv	r0, r1, r0
   18578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1857c:	cmp	r0, r1
   18580:	bge	1859c <__assert_fail@plt+0x726c>
   18584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18588:	ldr	r1, [fp, #8]
   1858c:	mul	r0, r0, r1
   18590:	and	r0, r0, #255	; 0xff
   18594:	str	r0, [fp, #-28]	; 0xffffffe4
   18598:	b	195cc <__assert_fail@plt+0x829c>
   1859c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a0:	ldr	r1, [fp, #8]
   185a4:	mul	r0, r0, r1
   185a8:	and	r0, r0, #255	; 0xff
   185ac:	str	r0, [fp, #-28]	; 0xffffffe4
   185b0:	b	195dc <__assert_fail@plt+0x82ac>
   185b4:	b	1898c <__assert_fail@plt+0x765c>
   185b8:	b	185bc <__assert_fail@plt+0x728c>
   185bc:	ldr	r0, [fp, #8]
   185c0:	cmp	r0, #0
   185c4:	bge	186d8 <__assert_fail@plt+0x73a8>
   185c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185cc:	cmp	r0, #0
   185d0:	bge	1865c <__assert_fail@plt+0x732c>
   185d4:	b	185d8 <__assert_fail@plt+0x72a8>
   185d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185dc:	ldr	r1, [fp, #8]
   185e0:	movw	r2, #32767	; 0x7fff
   185e4:	sdiv	r1, r2, r1
   185e8:	cmp	r0, r1
   185ec:	blt	18778 <__assert_fail@plt+0x7448>
   185f0:	b	18790 <__assert_fail@plt+0x7460>
   185f4:	b	185f8 <__assert_fail@plt+0x72c8>
   185f8:	ldr	r0, [pc, #3092]	; 19214 <__assert_fail@plt+0x7ee4>
   185fc:	ldr	r1, [fp, #8]
   18600:	cmp	r1, r0
   18604:	blt	1861c <__assert_fail@plt+0x72ec>
   18608:	b	18628 <__assert_fail@plt+0x72f8>
   1860c:	ldr	r0, [fp, #8]
   18610:	movw	r1, #0
   18614:	cmp	r1, r0
   18618:	bge	18628 <__assert_fail@plt+0x72f8>
   1861c:	movw	r0, #0
   18620:	str	r0, [fp, #-48]	; 0xffffffd0
   18624:	b	18640 <__assert_fail@plt+0x7310>
   18628:	ldr	r0, [fp, #8]
   1862c:	movw	r1, #0
   18630:	sub	r0, r1, r0
   18634:	movw	r1, #32767	; 0x7fff
   18638:	sdiv	r0, r1, r0
   1863c:	str	r0, [fp, #-48]	; 0xffffffd0
   18640:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18648:	mvn	r2, #0
   1864c:	sub	r1, r2, r1
   18650:	cmp	r0, r1
   18654:	ble	18778 <__assert_fail@plt+0x7448>
   18658:	b	18790 <__assert_fail@plt+0x7460>
   1865c:	b	18660 <__assert_fail@plt+0x7330>
   18660:	b	186bc <__assert_fail@plt+0x738c>
   18664:	b	186bc <__assert_fail@plt+0x738c>
   18668:	ldr	r0, [fp, #8]
   1866c:	cmn	r0, #1
   18670:	bne	186bc <__assert_fail@plt+0x738c>
   18674:	b	18678 <__assert_fail@plt+0x7348>
   18678:	ldr	r0, [pc, #3928]	; 195d8 <__assert_fail@plt+0x82a8>
   1867c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18680:	add	r0, r1, r0
   18684:	movw	r1, #0
   18688:	cmp	r1, r0
   1868c:	blt	18778 <__assert_fail@plt+0x7448>
   18690:	b	18790 <__assert_fail@plt+0x7460>
   18694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18698:	movw	r1, #0
   1869c:	cmp	r1, r0
   186a0:	bge	18790 <__assert_fail@plt+0x7460>
   186a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186a8:	sub	r0, r0, #1
   186ac:	movw	r1, #32767	; 0x7fff
   186b0:	cmp	r1, r0
   186b4:	blt	18778 <__assert_fail@plt+0x7448>
   186b8:	b	18790 <__assert_fail@plt+0x7460>
   186bc:	ldr	r0, [pc, #3860]	; 195d8 <__assert_fail@plt+0x82a8>
   186c0:	ldr	r1, [fp, #8]
   186c4:	sdiv	r0, r0, r1
   186c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186cc:	cmp	r0, r1
   186d0:	blt	18778 <__assert_fail@plt+0x7448>
   186d4:	b	18790 <__assert_fail@plt+0x7460>
   186d8:	ldr	r0, [fp, #8]
   186dc:	cmp	r0, #0
   186e0:	bne	186e8 <__assert_fail@plt+0x73b8>
   186e4:	b	18790 <__assert_fail@plt+0x7460>
   186e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186ec:	cmp	r0, #0
   186f0:	bge	18760 <__assert_fail@plt+0x7430>
   186f4:	b	186f8 <__assert_fail@plt+0x73c8>
   186f8:	b	18744 <__assert_fail@plt+0x7414>
   186fc:	b	18744 <__assert_fail@plt+0x7414>
   18700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18704:	cmn	r0, #1
   18708:	bne	18744 <__assert_fail@plt+0x7414>
   1870c:	b	18710 <__assert_fail@plt+0x73e0>
   18710:	ldr	r0, [pc, #3776]	; 195d8 <__assert_fail@plt+0x82a8>
   18714:	ldr	r1, [fp, #8]
   18718:	add	r0, r1, r0
   1871c:	movw	r1, #0
   18720:	cmp	r1, r0
   18724:	blt	18778 <__assert_fail@plt+0x7448>
   18728:	b	18790 <__assert_fail@plt+0x7460>
   1872c:	ldr	r0, [fp, #8]
   18730:	sub	r0, r0, #1
   18734:	movw	r1, #32767	; 0x7fff
   18738:	cmp	r1, r0
   1873c:	blt	18778 <__assert_fail@plt+0x7448>
   18740:	b	18790 <__assert_fail@plt+0x7460>
   18744:	ldr	r0, [pc, #3724]	; 195d8 <__assert_fail@plt+0x82a8>
   18748:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1874c:	sdiv	r0, r0, r1
   18750:	ldr	r1, [fp, #8]
   18754:	cmp	r0, r1
   18758:	blt	18778 <__assert_fail@plt+0x7448>
   1875c:	b	18790 <__assert_fail@plt+0x7460>
   18760:	ldr	r0, [fp, #8]
   18764:	movw	r1, #32767	; 0x7fff
   18768:	sdiv	r0, r1, r0
   1876c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18770:	cmp	r0, r1
   18774:	bge	18790 <__assert_fail@plt+0x7460>
   18778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1877c:	ldr	r1, [fp, #8]
   18780:	mul	r0, r0, r1
   18784:	sxth	r0, r0
   18788:	str	r0, [fp, #-28]	; 0xffffffe4
   1878c:	b	195cc <__assert_fail@plt+0x829c>
   18790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18794:	ldr	r1, [fp, #8]
   18798:	mul	r0, r0, r1
   1879c:	sxth	r0, r0
   187a0:	str	r0, [fp, #-28]	; 0xffffffe4
   187a4:	b	195dc <__assert_fail@plt+0x82ac>
   187a8:	ldr	r0, [fp, #8]
   187ac:	cmp	r0, #0
   187b0:	bge	188c0 <__assert_fail@plt+0x7590>
   187b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b8:	cmp	r0, #0
   187bc:	bge	18848 <__assert_fail@plt+0x7518>
   187c0:	b	187c4 <__assert_fail@plt+0x7494>
   187c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187c8:	ldr	r1, [fp, #8]
   187cc:	movw	r2, #65535	; 0xffff
   187d0:	sdiv	r1, r2, r1
   187d4:	cmp	r0, r1
   187d8:	blt	1895c <__assert_fail@plt+0x762c>
   187dc:	b	18974 <__assert_fail@plt+0x7644>
   187e0:	b	187e4 <__assert_fail@plt+0x74b4>
   187e4:	ldr	r0, [pc, #2600]	; 19214 <__assert_fail@plt+0x7ee4>
   187e8:	ldr	r1, [fp, #8]
   187ec:	cmp	r1, r0
   187f0:	blt	18808 <__assert_fail@plt+0x74d8>
   187f4:	b	18814 <__assert_fail@plt+0x74e4>
   187f8:	ldr	r0, [fp, #8]
   187fc:	movw	r1, #0
   18800:	cmp	r1, r0
   18804:	bge	18814 <__assert_fail@plt+0x74e4>
   18808:	movw	r0, #0
   1880c:	str	r0, [fp, #-52]	; 0xffffffcc
   18810:	b	1882c <__assert_fail@plt+0x74fc>
   18814:	ldr	r0, [fp, #8]
   18818:	movw	r1, #0
   1881c:	sub	r0, r1, r0
   18820:	movw	r1, #65535	; 0xffff
   18824:	sdiv	r0, r1, r0
   18828:	str	r0, [fp, #-52]	; 0xffffffcc
   1882c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18834:	mvn	r2, #0
   18838:	sub	r1, r2, r1
   1883c:	cmp	r0, r1
   18840:	ble	1895c <__assert_fail@plt+0x762c>
   18844:	b	18974 <__assert_fail@plt+0x7644>
   18848:	b	1884c <__assert_fail@plt+0x751c>
   1884c:	b	188a4 <__assert_fail@plt+0x7574>
   18850:	b	188a4 <__assert_fail@plt+0x7574>
   18854:	ldr	r0, [fp, #8]
   18858:	cmn	r0, #1
   1885c:	bne	188a4 <__assert_fail@plt+0x7574>
   18860:	b	18864 <__assert_fail@plt+0x7534>
   18864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18868:	add	r0, r0, #0
   1886c:	movw	r1, #0
   18870:	cmp	r1, r0
   18874:	blt	1895c <__assert_fail@plt+0x762c>
   18878:	b	18974 <__assert_fail@plt+0x7644>
   1887c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18880:	movw	r1, #0
   18884:	cmp	r1, r0
   18888:	bge	18974 <__assert_fail@plt+0x7644>
   1888c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18890:	sub	r0, r0, #1
   18894:	mvn	r1, #0
   18898:	cmp	r1, r0
   1889c:	blt	1895c <__assert_fail@plt+0x762c>
   188a0:	b	18974 <__assert_fail@plt+0x7644>
   188a4:	ldr	r0, [fp, #8]
   188a8:	movw	r1, #0
   188ac:	sdiv	r0, r1, r0
   188b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188b4:	cmp	r0, r1
   188b8:	blt	1895c <__assert_fail@plt+0x762c>
   188bc:	b	18974 <__assert_fail@plt+0x7644>
   188c0:	ldr	r0, [fp, #8]
   188c4:	cmp	r0, #0
   188c8:	bne	188d0 <__assert_fail@plt+0x75a0>
   188cc:	b	18974 <__assert_fail@plt+0x7644>
   188d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d4:	cmp	r0, #0
   188d8:	bge	18944 <__assert_fail@plt+0x7614>
   188dc:	b	188e0 <__assert_fail@plt+0x75b0>
   188e0:	b	18928 <__assert_fail@plt+0x75f8>
   188e4:	b	18928 <__assert_fail@plt+0x75f8>
   188e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188ec:	cmn	r0, #1
   188f0:	bne	18928 <__assert_fail@plt+0x75f8>
   188f4:	b	188f8 <__assert_fail@plt+0x75c8>
   188f8:	ldr	r0, [fp, #8]
   188fc:	add	r0, r0, #0
   18900:	movw	r1, #0
   18904:	cmp	r1, r0
   18908:	blt	1895c <__assert_fail@plt+0x762c>
   1890c:	b	18974 <__assert_fail@plt+0x7644>
   18910:	ldr	r0, [fp, #8]
   18914:	sub	r0, r0, #1
   18918:	mvn	r1, #0
   1891c:	cmp	r1, r0
   18920:	blt	1895c <__assert_fail@plt+0x762c>
   18924:	b	18974 <__assert_fail@plt+0x7644>
   18928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1892c:	movw	r1, #0
   18930:	sdiv	r0, r1, r0
   18934:	ldr	r1, [fp, #8]
   18938:	cmp	r0, r1
   1893c:	blt	1895c <__assert_fail@plt+0x762c>
   18940:	b	18974 <__assert_fail@plt+0x7644>
   18944:	ldr	r0, [fp, #8]
   18948:	movw	r1, #65535	; 0xffff
   1894c:	sdiv	r0, r1, r0
   18950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18954:	cmp	r0, r1
   18958:	bge	18974 <__assert_fail@plt+0x7644>
   1895c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18960:	ldr	r1, [fp, #8]
   18964:	mul	r0, r0, r1
   18968:	uxth	r0, r0
   1896c:	str	r0, [fp, #-28]	; 0xffffffe4
   18970:	b	195cc <__assert_fail@plt+0x829c>
   18974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18978:	ldr	r1, [fp, #8]
   1897c:	mul	r0, r0, r1
   18980:	uxth	r0, r0
   18984:	str	r0, [fp, #-28]	; 0xffffffe4
   18988:	b	195dc <__assert_fail@plt+0x82ac>
   1898c:	b	18990 <__assert_fail@plt+0x7660>
   18990:	b	18994 <__assert_fail@plt+0x7664>
   18994:	ldr	r0, [fp, #8]
   18998:	cmp	r0, #0
   1899c:	bge	18aa0 <__assert_fail@plt+0x7770>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	cmp	r0, #0
   189a8:	bge	18a34 <__assert_fail@plt+0x7704>
   189ac:	b	189b0 <__assert_fail@plt+0x7680>
   189b0:	ldr	r0, [pc, #1992]	; 19180 <__assert_fail@plt+0x7e50>
   189b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189b8:	ldr	r2, [fp, #8]
   189bc:	sdiv	r0, r0, r2
   189c0:	cmp	r1, r0
   189c4:	blt	18b30 <__assert_fail@plt+0x7800>
   189c8:	b	18b44 <__assert_fail@plt+0x7814>
   189cc:	b	189d0 <__assert_fail@plt+0x76a0>
   189d0:	ldr	r0, [pc, #2108]	; 19214 <__assert_fail@plt+0x7ee4>
   189d4:	ldr	r1, [fp, #8]
   189d8:	cmp	r1, r0
   189dc:	blt	189f4 <__assert_fail@plt+0x76c4>
   189e0:	b	18a00 <__assert_fail@plt+0x76d0>
   189e4:	ldr	r0, [fp, #8]
   189e8:	movw	r1, #0
   189ec:	cmp	r1, r0
   189f0:	bge	18a00 <__assert_fail@plt+0x76d0>
   189f4:	movw	r0, #0
   189f8:	str	r0, [fp, #-56]	; 0xffffffc8
   189fc:	b	18a18 <__assert_fail@plt+0x76e8>
   18a00:	ldr	r0, [pc, #1912]	; 19180 <__assert_fail@plt+0x7e50>
   18a04:	ldr	r1, [fp, #8]
   18a08:	movw	r2, #0
   18a0c:	sub	r1, r2, r1
   18a10:	sdiv	r0, r0, r1
   18a14:	str	r0, [fp, #-56]	; 0xffffffc8
   18a18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a20:	mvn	r2, #0
   18a24:	sub	r1, r2, r1
   18a28:	cmp	r0, r1
   18a2c:	ble	18b30 <__assert_fail@plt+0x7800>
   18a30:	b	18b44 <__assert_fail@plt+0x7814>
   18a34:	ldr	r0, [fp, #8]
   18a38:	cmn	r0, #1
   18a3c:	bne	18a84 <__assert_fail@plt+0x7754>
   18a40:	b	18a44 <__assert_fail@plt+0x7714>
   18a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a48:	add	r0, r0, #-2147483648	; 0x80000000
   18a4c:	movw	r1, #0
   18a50:	cmp	r1, r0
   18a54:	blt	18b30 <__assert_fail@plt+0x7800>
   18a58:	b	18b44 <__assert_fail@plt+0x7814>
   18a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a60:	movw	r1, #0
   18a64:	cmp	r1, r0
   18a68:	bge	18b44 <__assert_fail@plt+0x7814>
   18a6c:	ldr	r0, [pc, #1804]	; 19180 <__assert_fail@plt+0x7e50>
   18a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a74:	sub	r1, r1, #1
   18a78:	cmp	r0, r1
   18a7c:	blt	18b30 <__assert_fail@plt+0x7800>
   18a80:	b	18b44 <__assert_fail@plt+0x7814>
   18a84:	ldr	r0, [pc, #4072]	; 19a74 <__assert_fail@plt+0x8744>
   18a88:	ldr	r1, [fp, #8]
   18a8c:	sdiv	r0, r0, r1
   18a90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a94:	cmp	r0, r1
   18a98:	blt	18b30 <__assert_fail@plt+0x7800>
   18a9c:	b	18b44 <__assert_fail@plt+0x7814>
   18aa0:	ldr	r0, [fp, #8]
   18aa4:	cmp	r0, #0
   18aa8:	bne	18ab0 <__assert_fail@plt+0x7780>
   18aac:	b	18b44 <__assert_fail@plt+0x7814>
   18ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab4:	cmp	r0, #0
   18ab8:	bge	18b18 <__assert_fail@plt+0x77e8>
   18abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac0:	cmn	r0, #1
   18ac4:	bne	18afc <__assert_fail@plt+0x77cc>
   18ac8:	b	18acc <__assert_fail@plt+0x779c>
   18acc:	ldr	r0, [fp, #8]
   18ad0:	add	r0, r0, #-2147483648	; 0x80000000
   18ad4:	movw	r1, #0
   18ad8:	cmp	r1, r0
   18adc:	blt	18b30 <__assert_fail@plt+0x7800>
   18ae0:	b	18b44 <__assert_fail@plt+0x7814>
   18ae4:	ldr	r0, [pc, #1684]	; 19180 <__assert_fail@plt+0x7e50>
   18ae8:	ldr	r1, [fp, #8]
   18aec:	sub	r1, r1, #1
   18af0:	cmp	r0, r1
   18af4:	blt	18b30 <__assert_fail@plt+0x7800>
   18af8:	b	18b44 <__assert_fail@plt+0x7814>
   18afc:	ldr	r0, [pc, #3952]	; 19a74 <__assert_fail@plt+0x8744>
   18b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b04:	sdiv	r0, r0, r1
   18b08:	ldr	r1, [fp, #8]
   18b0c:	cmp	r0, r1
   18b10:	blt	18b30 <__assert_fail@plt+0x7800>
   18b14:	b	18b44 <__assert_fail@plt+0x7814>
   18b18:	ldr	r0, [pc, #1632]	; 19180 <__assert_fail@plt+0x7e50>
   18b1c:	ldr	r1, [fp, #8]
   18b20:	sdiv	r0, r0, r1
   18b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b28:	cmp	r0, r1
   18b2c:	bge	18b44 <__assert_fail@plt+0x7814>
   18b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b34:	ldr	r1, [fp, #8]
   18b38:	mul	r0, r0, r1
   18b3c:	str	r0, [fp, #-28]	; 0xffffffe4
   18b40:	b	195cc <__assert_fail@plt+0x829c>
   18b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b48:	ldr	r1, [fp, #8]
   18b4c:	mul	r0, r0, r1
   18b50:	str	r0, [fp, #-28]	; 0xffffffe4
   18b54:	b	195dc <__assert_fail@plt+0x82ac>
   18b58:	ldr	r0, [fp, #8]
   18b5c:	cmp	r0, #0
   18b60:	bge	18c70 <__assert_fail@plt+0x7940>
   18b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b68:	cmp	r0, #0
   18b6c:	bge	18bf8 <__assert_fail@plt+0x78c8>
   18b70:	b	18b90 <__assert_fail@plt+0x7860>
   18b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b78:	ldr	r1, [fp, #8]
   18b7c:	mvn	r2, #0
   18b80:	udiv	r1, r2, r1
   18b84:	cmp	r0, r1
   18b88:	bcc	18d0c <__assert_fail@plt+0x79dc>
   18b8c:	b	18d20 <__assert_fail@plt+0x79f0>
   18b90:	b	18b94 <__assert_fail@plt+0x7864>
   18b94:	ldr	r0, [pc, #1656]	; 19214 <__assert_fail@plt+0x7ee4>
   18b98:	ldr	r1, [fp, #8]
   18b9c:	cmp	r1, r0
   18ba0:	blt	18bb8 <__assert_fail@plt+0x7888>
   18ba4:	b	18bc4 <__assert_fail@plt+0x7894>
   18ba8:	ldr	r0, [fp, #8]
   18bac:	movw	r1, #0
   18bb0:	cmp	r1, r0
   18bb4:	bge	18bc4 <__assert_fail@plt+0x7894>
   18bb8:	movw	r0, #1
   18bbc:	str	r0, [fp, #-60]	; 0xffffffc4
   18bc0:	b	18bdc <__assert_fail@plt+0x78ac>
   18bc4:	ldr	r0, [fp, #8]
   18bc8:	movw	r1, #0
   18bcc:	sub	r0, r1, r0
   18bd0:	mvn	r1, #0
   18bd4:	udiv	r0, r1, r0
   18bd8:	str	r0, [fp, #-60]	; 0xffffffc4
   18bdc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18be4:	mvn	r2, #0
   18be8:	sub	r1, r2, r1
   18bec:	cmp	r0, r1
   18bf0:	bls	18d0c <__assert_fail@plt+0x79dc>
   18bf4:	b	18d20 <__assert_fail@plt+0x79f0>
   18bf8:	b	18bfc <__assert_fail@plt+0x78cc>
   18bfc:	b	18c54 <__assert_fail@plt+0x7924>
   18c00:	b	18c54 <__assert_fail@plt+0x7924>
   18c04:	ldr	r0, [fp, #8]
   18c08:	cmn	r0, #1
   18c0c:	bne	18c54 <__assert_fail@plt+0x7924>
   18c10:	b	18c14 <__assert_fail@plt+0x78e4>
   18c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c18:	add	r0, r0, #0
   18c1c:	movw	r1, #0
   18c20:	cmp	r1, r0
   18c24:	blt	18d0c <__assert_fail@plt+0x79dc>
   18c28:	b	18d20 <__assert_fail@plt+0x79f0>
   18c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c30:	movw	r1, #0
   18c34:	cmp	r1, r0
   18c38:	bge	18d20 <__assert_fail@plt+0x79f0>
   18c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c40:	sub	r0, r0, #1
   18c44:	mvn	r1, #0
   18c48:	cmp	r1, r0
   18c4c:	blt	18d0c <__assert_fail@plt+0x79dc>
   18c50:	b	18d20 <__assert_fail@plt+0x79f0>
   18c54:	ldr	r0, [fp, #8]
   18c58:	movw	r1, #0
   18c5c:	sdiv	r0, r1, r0
   18c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c64:	cmp	r0, r1
   18c68:	blt	18d0c <__assert_fail@plt+0x79dc>
   18c6c:	b	18d20 <__assert_fail@plt+0x79f0>
   18c70:	ldr	r0, [fp, #8]
   18c74:	cmp	r0, #0
   18c78:	bne	18c80 <__assert_fail@plt+0x7950>
   18c7c:	b	18d20 <__assert_fail@plt+0x79f0>
   18c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c84:	cmp	r0, #0
   18c88:	bge	18cf4 <__assert_fail@plt+0x79c4>
   18c8c:	b	18c90 <__assert_fail@plt+0x7960>
   18c90:	b	18cd8 <__assert_fail@plt+0x79a8>
   18c94:	b	18cd8 <__assert_fail@plt+0x79a8>
   18c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c9c:	cmn	r0, #1
   18ca0:	bne	18cd8 <__assert_fail@plt+0x79a8>
   18ca4:	b	18ca8 <__assert_fail@plt+0x7978>
   18ca8:	ldr	r0, [fp, #8]
   18cac:	add	r0, r0, #0
   18cb0:	movw	r1, #0
   18cb4:	cmp	r1, r0
   18cb8:	blt	18d0c <__assert_fail@plt+0x79dc>
   18cbc:	b	18d20 <__assert_fail@plt+0x79f0>
   18cc0:	ldr	r0, [fp, #8]
   18cc4:	sub	r0, r0, #1
   18cc8:	mvn	r1, #0
   18ccc:	cmp	r1, r0
   18cd0:	blt	18d0c <__assert_fail@plt+0x79dc>
   18cd4:	b	18d20 <__assert_fail@plt+0x79f0>
   18cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cdc:	movw	r1, #0
   18ce0:	sdiv	r0, r1, r0
   18ce4:	ldr	r1, [fp, #8]
   18ce8:	cmp	r0, r1
   18cec:	blt	18d0c <__assert_fail@plt+0x79dc>
   18cf0:	b	18d20 <__assert_fail@plt+0x79f0>
   18cf4:	ldr	r0, [fp, #8]
   18cf8:	mvn	r1, #0
   18cfc:	udiv	r0, r1, r0
   18d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d04:	cmp	r0, r1
   18d08:	bcs	18d20 <__assert_fail@plt+0x79f0>
   18d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d10:	ldr	r1, [fp, #8]
   18d14:	mul	r0, r0, r1
   18d18:	str	r0, [fp, #-28]	; 0xffffffe4
   18d1c:	b	195cc <__assert_fail@plt+0x829c>
   18d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d24:	ldr	r1, [fp, #8]
   18d28:	mul	r0, r0, r1
   18d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   18d30:	b	195dc <__assert_fail@plt+0x82ac>
   18d34:	b	18d38 <__assert_fail@plt+0x7a08>
   18d38:	b	18d3c <__assert_fail@plt+0x7a0c>
   18d3c:	ldr	r0, [fp, #8]
   18d40:	cmp	r0, #0
   18d44:	bge	18e48 <__assert_fail@plt+0x7b18>
   18d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d4c:	cmp	r0, #0
   18d50:	bge	18ddc <__assert_fail@plt+0x7aac>
   18d54:	b	18d58 <__assert_fail@plt+0x7a28>
   18d58:	ldr	r0, [pc, #1056]	; 19180 <__assert_fail@plt+0x7e50>
   18d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d60:	ldr	r2, [fp, #8]
   18d64:	sdiv	r0, r0, r2
   18d68:	cmp	r1, r0
   18d6c:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18d70:	b	18eec <__assert_fail@plt+0x7bbc>
   18d74:	b	18d78 <__assert_fail@plt+0x7a48>
   18d78:	ldr	r0, [pc, #1172]	; 19214 <__assert_fail@plt+0x7ee4>
   18d7c:	ldr	r1, [fp, #8]
   18d80:	cmp	r1, r0
   18d84:	blt	18d9c <__assert_fail@plt+0x7a6c>
   18d88:	b	18da8 <__assert_fail@plt+0x7a78>
   18d8c:	ldr	r0, [fp, #8]
   18d90:	movw	r1, #0
   18d94:	cmp	r1, r0
   18d98:	bge	18da8 <__assert_fail@plt+0x7a78>
   18d9c:	movw	r0, #0
   18da0:	str	r0, [fp, #-64]	; 0xffffffc0
   18da4:	b	18dc0 <__assert_fail@plt+0x7a90>
   18da8:	ldr	r0, [pc, #976]	; 19180 <__assert_fail@plt+0x7e50>
   18dac:	ldr	r1, [fp, #8]
   18db0:	movw	r2, #0
   18db4:	sub	r1, r2, r1
   18db8:	sdiv	r0, r0, r1
   18dbc:	str	r0, [fp, #-64]	; 0xffffffc0
   18dc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18dc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dc8:	mvn	r2, #0
   18dcc:	sub	r1, r2, r1
   18dd0:	cmp	r0, r1
   18dd4:	ble	18ed8 <__assert_fail@plt+0x7ba8>
   18dd8:	b	18eec <__assert_fail@plt+0x7bbc>
   18ddc:	ldr	r0, [fp, #8]
   18de0:	cmn	r0, #1
   18de4:	bne	18e2c <__assert_fail@plt+0x7afc>
   18de8:	b	18dec <__assert_fail@plt+0x7abc>
   18dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df0:	add	r0, r0, #-2147483648	; 0x80000000
   18df4:	movw	r1, #0
   18df8:	cmp	r1, r0
   18dfc:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18e00:	b	18eec <__assert_fail@plt+0x7bbc>
   18e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e08:	movw	r1, #0
   18e0c:	cmp	r1, r0
   18e10:	bge	18eec <__assert_fail@plt+0x7bbc>
   18e14:	ldr	r0, [pc, #868]	; 19180 <__assert_fail@plt+0x7e50>
   18e18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e1c:	sub	r1, r1, #1
   18e20:	cmp	r0, r1
   18e24:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18e28:	b	18eec <__assert_fail@plt+0x7bbc>
   18e2c:	ldr	r0, [pc, #3136]	; 19a74 <__assert_fail@plt+0x8744>
   18e30:	ldr	r1, [fp, #8]
   18e34:	sdiv	r0, r0, r1
   18e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e3c:	cmp	r0, r1
   18e40:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18e44:	b	18eec <__assert_fail@plt+0x7bbc>
   18e48:	ldr	r0, [fp, #8]
   18e4c:	cmp	r0, #0
   18e50:	bne	18e58 <__assert_fail@plt+0x7b28>
   18e54:	b	18eec <__assert_fail@plt+0x7bbc>
   18e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	cmp	r0, #0
   18e60:	bge	18ec0 <__assert_fail@plt+0x7b90>
   18e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e68:	cmn	r0, #1
   18e6c:	bne	18ea4 <__assert_fail@plt+0x7b74>
   18e70:	b	18e74 <__assert_fail@plt+0x7b44>
   18e74:	ldr	r0, [fp, #8]
   18e78:	add	r0, r0, #-2147483648	; 0x80000000
   18e7c:	movw	r1, #0
   18e80:	cmp	r1, r0
   18e84:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18e88:	b	18eec <__assert_fail@plt+0x7bbc>
   18e8c:	ldr	r0, [pc, #748]	; 19180 <__assert_fail@plt+0x7e50>
   18e90:	ldr	r1, [fp, #8]
   18e94:	sub	r1, r1, #1
   18e98:	cmp	r0, r1
   18e9c:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18ea0:	b	18eec <__assert_fail@plt+0x7bbc>
   18ea4:	ldr	r0, [pc, #3016]	; 19a74 <__assert_fail@plt+0x8744>
   18ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18eac:	sdiv	r0, r0, r1
   18eb0:	ldr	r1, [fp, #8]
   18eb4:	cmp	r0, r1
   18eb8:	blt	18ed8 <__assert_fail@plt+0x7ba8>
   18ebc:	b	18eec <__assert_fail@plt+0x7bbc>
   18ec0:	ldr	r0, [pc, #696]	; 19180 <__assert_fail@plt+0x7e50>
   18ec4:	ldr	r1, [fp, #8]
   18ec8:	sdiv	r0, r0, r1
   18ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ed0:	cmp	r0, r1
   18ed4:	bge	18eec <__assert_fail@plt+0x7bbc>
   18ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18edc:	ldr	r1, [fp, #8]
   18ee0:	mul	r0, r0, r1
   18ee4:	str	r0, [fp, #-28]	; 0xffffffe4
   18ee8:	b	195cc <__assert_fail@plt+0x829c>
   18eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	ldr	r1, [fp, #8]
   18ef4:	mul	r0, r0, r1
   18ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   18efc:	b	195dc <__assert_fail@plt+0x82ac>
   18f00:	ldr	r0, [fp, #8]
   18f04:	cmp	r0, #0
   18f08:	bge	19018 <__assert_fail@plt+0x7ce8>
   18f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f10:	cmp	r0, #0
   18f14:	bge	18fa0 <__assert_fail@plt+0x7c70>
   18f18:	b	18f38 <__assert_fail@plt+0x7c08>
   18f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f20:	ldr	r1, [fp, #8]
   18f24:	mvn	r2, #0
   18f28:	udiv	r1, r2, r1
   18f2c:	cmp	r0, r1
   18f30:	bcc	190b4 <__assert_fail@plt+0x7d84>
   18f34:	b	190c8 <__assert_fail@plt+0x7d98>
   18f38:	b	18f3c <__assert_fail@plt+0x7c0c>
   18f3c:	ldr	r0, [pc, #720]	; 19214 <__assert_fail@plt+0x7ee4>
   18f40:	ldr	r1, [fp, #8]
   18f44:	cmp	r1, r0
   18f48:	blt	18f60 <__assert_fail@plt+0x7c30>
   18f4c:	b	18f6c <__assert_fail@plt+0x7c3c>
   18f50:	ldr	r0, [fp, #8]
   18f54:	movw	r1, #0
   18f58:	cmp	r1, r0
   18f5c:	bge	18f6c <__assert_fail@plt+0x7c3c>
   18f60:	movw	r0, #1
   18f64:	str	r0, [fp, #-68]	; 0xffffffbc
   18f68:	b	18f84 <__assert_fail@plt+0x7c54>
   18f6c:	ldr	r0, [fp, #8]
   18f70:	movw	r1, #0
   18f74:	sub	r0, r1, r0
   18f78:	mvn	r1, #0
   18f7c:	udiv	r0, r1, r0
   18f80:	str	r0, [fp, #-68]	; 0xffffffbc
   18f84:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18f88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f8c:	mvn	r2, #0
   18f90:	sub	r1, r2, r1
   18f94:	cmp	r0, r1
   18f98:	bls	190b4 <__assert_fail@plt+0x7d84>
   18f9c:	b	190c8 <__assert_fail@plt+0x7d98>
   18fa0:	b	18fa4 <__assert_fail@plt+0x7c74>
   18fa4:	b	18ffc <__assert_fail@plt+0x7ccc>
   18fa8:	b	18ffc <__assert_fail@plt+0x7ccc>
   18fac:	ldr	r0, [fp, #8]
   18fb0:	cmn	r0, #1
   18fb4:	bne	18ffc <__assert_fail@plt+0x7ccc>
   18fb8:	b	18fbc <__assert_fail@plt+0x7c8c>
   18fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc0:	add	r0, r0, #0
   18fc4:	movw	r1, #0
   18fc8:	cmp	r1, r0
   18fcc:	blt	190b4 <__assert_fail@plt+0x7d84>
   18fd0:	b	190c8 <__assert_fail@plt+0x7d98>
   18fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fd8:	movw	r1, #0
   18fdc:	cmp	r1, r0
   18fe0:	bge	190c8 <__assert_fail@plt+0x7d98>
   18fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe8:	sub	r0, r0, #1
   18fec:	mvn	r1, #0
   18ff0:	cmp	r1, r0
   18ff4:	blt	190b4 <__assert_fail@plt+0x7d84>
   18ff8:	b	190c8 <__assert_fail@plt+0x7d98>
   18ffc:	ldr	r0, [fp, #8]
   19000:	movw	r1, #0
   19004:	sdiv	r0, r1, r0
   19008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1900c:	cmp	r0, r1
   19010:	blt	190b4 <__assert_fail@plt+0x7d84>
   19014:	b	190c8 <__assert_fail@plt+0x7d98>
   19018:	ldr	r0, [fp, #8]
   1901c:	cmp	r0, #0
   19020:	bne	19028 <__assert_fail@plt+0x7cf8>
   19024:	b	190c8 <__assert_fail@plt+0x7d98>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	cmp	r0, #0
   19030:	bge	1909c <__assert_fail@plt+0x7d6c>
   19034:	b	19038 <__assert_fail@plt+0x7d08>
   19038:	b	19080 <__assert_fail@plt+0x7d50>
   1903c:	b	19080 <__assert_fail@plt+0x7d50>
   19040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19044:	cmn	r0, #1
   19048:	bne	19080 <__assert_fail@plt+0x7d50>
   1904c:	b	19050 <__assert_fail@plt+0x7d20>
   19050:	ldr	r0, [fp, #8]
   19054:	add	r0, r0, #0
   19058:	movw	r1, #0
   1905c:	cmp	r1, r0
   19060:	blt	190b4 <__assert_fail@plt+0x7d84>
   19064:	b	190c8 <__assert_fail@plt+0x7d98>
   19068:	ldr	r0, [fp, #8]
   1906c:	sub	r0, r0, #1
   19070:	mvn	r1, #0
   19074:	cmp	r1, r0
   19078:	blt	190b4 <__assert_fail@plt+0x7d84>
   1907c:	b	190c8 <__assert_fail@plt+0x7d98>
   19080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19084:	movw	r1, #0
   19088:	sdiv	r0, r1, r0
   1908c:	ldr	r1, [fp, #8]
   19090:	cmp	r0, r1
   19094:	blt	190b4 <__assert_fail@plt+0x7d84>
   19098:	b	190c8 <__assert_fail@plt+0x7d98>
   1909c:	ldr	r0, [fp, #8]
   190a0:	mvn	r1, #0
   190a4:	udiv	r0, r1, r0
   190a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190ac:	cmp	r0, r1
   190b0:	bcs	190c8 <__assert_fail@plt+0x7d98>
   190b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190b8:	ldr	r1, [fp, #8]
   190bc:	mul	r0, r0, r1
   190c0:	str	r0, [fp, #-28]	; 0xffffffe4
   190c4:	b	195cc <__assert_fail@plt+0x829c>
   190c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190cc:	ldr	r1, [fp, #8]
   190d0:	mul	r0, r0, r1
   190d4:	str	r0, [fp, #-28]	; 0xffffffe4
   190d8:	b	195dc <__assert_fail@plt+0x82ac>
   190dc:	b	190e0 <__assert_fail@plt+0x7db0>
   190e0:	ldr	r0, [fp, #8]
   190e4:	cmp	r0, #0
   190e8:	bge	19278 <__assert_fail@plt+0x7f48>
   190ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190f0:	cmp	r0, #0
   190f4:	bge	191e0 <__assert_fail@plt+0x7eb0>
   190f8:	b	190fc <__assert_fail@plt+0x7dcc>
   190fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19100:	ldr	r1, [fp, #8]
   19104:	asr	r3, r1, #31
   19108:	mvn	r2, #0
   1910c:	mvn	ip, #-2147483648	; 0x80000000
   19110:	str	r0, [fp, #-72]	; 0xffffffb8
   19114:	mov	r0, r2
   19118:	str	r1, [fp, #-76]	; 0xffffffb4
   1911c:	mov	r1, ip
   19120:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19124:	bl	2142c <__assert_fail@plt+0x100fc>
   19128:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1912c:	subs	r0, r2, r0
   19130:	rscs	r1, r1, r2, asr #31
   19134:	str	r0, [fp, #-80]	; 0xffffffb0
   19138:	str	r1, [fp, #-84]	; 0xffffffac
   1913c:	blt	19358 <__assert_fail@plt+0x8028>
   19140:	b	1936c <__assert_fail@plt+0x803c>
   19144:	b	19148 <__assert_fail@plt+0x7e18>
   19148:	ldr	r0, [pc, #196]	; 19214 <__assert_fail@plt+0x7ee4>
   1914c:	ldr	r1, [fp, #8]
   19150:	cmp	r1, r0
   19154:	blt	1916c <__assert_fail@plt+0x7e3c>
   19158:	b	19184 <__assert_fail@plt+0x7e54>
   1915c:	ldr	r0, [fp, #8]
   19160:	movw	r1, #0
   19164:	cmp	r1, r0
   19168:	bge	19184 <__assert_fail@plt+0x7e54>
   1916c:	mov	r0, #0
   19170:	mvn	r1, #0
   19174:	str	r1, [fp, #-88]	; 0xffffffa8
   19178:	str	r0, [fp, #-92]	; 0xffffffa4
   1917c:	b	191b8 <__assert_fail@plt+0x7e88>
   19180:	svcvc	0x00ffffff
   19184:	ldr	r0, [fp, #8]
   19188:	rsb	r0, r0, #0
   1918c:	asr	r3, r0, #31
   19190:	mvn	r1, #0
   19194:	mvn	r2, #-2147483648	; 0x80000000
   19198:	str	r0, [fp, #-96]	; 0xffffffa0
   1919c:	mov	r0, r1
   191a0:	mov	r1, r2
   191a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   191a8:	bl	2142c <__assert_fail@plt+0x100fc>
   191ac:	str	r0, [fp, #-88]	; 0xffffffa8
   191b0:	str	r1, [fp, #-92]	; 0xffffffa4
   191b4:	b	191b8 <__assert_fail@plt+0x7e88>
   191b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   191bc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   191c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191c4:	mvn	r2, r2
   191c8:	subs	r1, r2, r1
   191cc:	rscs	r0, r0, r2, asr #31
   191d0:	str	r1, [fp, #-100]	; 0xffffff9c
   191d4:	str	r0, [fp, #-104]	; 0xffffff98
   191d8:	bge	19358 <__assert_fail@plt+0x8028>
   191dc:	b	1936c <__assert_fail@plt+0x803c>
   191e0:	ldr	r0, [fp, #8]
   191e4:	cmn	r0, #1
   191e8:	bne	19238 <__assert_fail@plt+0x7f08>
   191ec:	b	191f0 <__assert_fail@plt+0x7ec0>
   191f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191f4:	mov	r1, #-2147483648	; 0x80000000
   191f8:	add	r1, r1, r0, asr #31
   191fc:	rsbs	r0, r0, #0
   19200:	rscs	r1, r1, #0
   19204:	str	r0, [fp, #-108]	; 0xffffff94
   19208:	str	r1, [fp, #-112]	; 0xffffff90
   1920c:	blt	19358 <__assert_fail@plt+0x8028>
   19210:	b	1936c <__assert_fail@plt+0x803c>
   19214:	andhi	r0, r0, r1
   19218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1921c:	movw	r1, #0
   19220:	cmp	r1, r0
   19224:	bge	1936c <__assert_fail@plt+0x803c>
   19228:	mov	r0, #0
   1922c:	cmp	r0, #0
   19230:	bne	19358 <__assert_fail@plt+0x8028>
   19234:	b	1936c <__assert_fail@plt+0x803c>
   19238:	ldr	r0, [fp, #8]
   1923c:	asr	r3, r0, #31
   19240:	mov	r1, #0
   19244:	mov	r2, #-2147483648	; 0x80000000
   19248:	str	r0, [fp, #-116]	; 0xffffff8c
   1924c:	mov	r0, r1
   19250:	mov	r1, r2
   19254:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19258:	bl	2142c <__assert_fail@plt+0x100fc>
   1925c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19260:	subs	r0, r0, r2
   19264:	sbcs	r1, r1, r2, asr #31
   19268:	str	r0, [fp, #-120]	; 0xffffff88
   1926c:	str	r1, [fp, #-124]	; 0xffffff84
   19270:	blt	19358 <__assert_fail@plt+0x8028>
   19274:	b	1936c <__assert_fail@plt+0x803c>
   19278:	ldr	r0, [fp, #8]
   1927c:	cmp	r0, #0
   19280:	bne	19288 <__assert_fail@plt+0x7f58>
   19284:	b	1936c <__assert_fail@plt+0x803c>
   19288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1928c:	cmp	r0, #0
   19290:	bge	19318 <__assert_fail@plt+0x7fe8>
   19294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19298:	cmn	r0, #1
   1929c:	bne	192d8 <__assert_fail@plt+0x7fa8>
   192a0:	b	192a4 <__assert_fail@plt+0x7f74>
   192a4:	ldr	r0, [fp, #8]
   192a8:	mov	r1, #-2147483648	; 0x80000000
   192ac:	add	r1, r1, r0, asr #31
   192b0:	rsbs	r0, r0, #0
   192b4:	rscs	r1, r1, #0
   192b8:	str	r0, [fp, #-128]	; 0xffffff80
   192bc:	str	r1, [fp, #-132]	; 0xffffff7c
   192c0:	blt	19358 <__assert_fail@plt+0x8028>
   192c4:	b	1936c <__assert_fail@plt+0x803c>
   192c8:	mov	r0, #0
   192cc:	cmp	r0, #0
   192d0:	bne	19358 <__assert_fail@plt+0x8028>
   192d4:	b	1936c <__assert_fail@plt+0x803c>
   192d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192dc:	asr	r3, r0, #31
   192e0:	mov	r1, #0
   192e4:	mov	r2, #-2147483648	; 0x80000000
   192e8:	str	r0, [fp, #-136]	; 0xffffff78
   192ec:	mov	r0, r1
   192f0:	mov	r1, r2
   192f4:	ldr	r2, [fp, #-136]	; 0xffffff78
   192f8:	bl	2142c <__assert_fail@plt+0x100fc>
   192fc:	ldr	r2, [fp, #8]
   19300:	subs	r0, r0, r2
   19304:	sbcs	r1, r1, r2, asr #31
   19308:	str	r0, [fp, #-140]	; 0xffffff74
   1930c:	str	r1, [fp, #-144]	; 0xffffff70
   19310:	blt	19358 <__assert_fail@plt+0x8028>
   19314:	b	1936c <__assert_fail@plt+0x803c>
   19318:	ldr	r0, [fp, #8]
   1931c:	asr	r3, r0, #31
   19320:	mvn	r1, #0
   19324:	mvn	r2, #-2147483648	; 0x80000000
   19328:	str	r0, [fp, #-148]	; 0xffffff6c
   1932c:	mov	r0, r1
   19330:	mov	r1, r2
   19334:	ldr	r2, [fp, #-148]	; 0xffffff6c
   19338:	bl	2142c <__assert_fail@plt+0x100fc>
   1933c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19340:	subs	r0, r0, r2
   19344:	sbcs	r1, r1, r2, asr #31
   19348:	str	r0, [fp, #-152]	; 0xffffff68
   1934c:	str	r1, [fp, #-156]	; 0xffffff64
   19350:	bge	1936c <__assert_fail@plt+0x803c>
   19354:	b	19358 <__assert_fail@plt+0x8028>
   19358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1935c:	ldr	r1, [fp, #8]
   19360:	mul	r0, r0, r1
   19364:	str	r0, [fp, #-28]	; 0xffffffe4
   19368:	b	195cc <__assert_fail@plt+0x829c>
   1936c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19370:	ldr	r1, [fp, #8]
   19374:	mul	r0, r0, r1
   19378:	str	r0, [fp, #-28]	; 0xffffffe4
   1937c:	b	195dc <__assert_fail@plt+0x82ac>
   19380:	ldr	r0, [fp, #8]
   19384:	cmp	r0, #0
   19388:	bge	194e8 <__assert_fail@plt+0x81b8>
   1938c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19390:	cmp	r0, #0
   19394:	bge	19470 <__assert_fail@plt+0x8140>
   19398:	b	193e0 <__assert_fail@plt+0x80b0>
   1939c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a0:	ldr	r1, [fp, #8]
   193a4:	asr	r3, r1, #31
   193a8:	mvn	r2, #0
   193ac:	str	r0, [fp, #-160]	; 0xffffff60
   193b0:	mov	r0, r2
   193b4:	str	r1, [fp, #-164]	; 0xffffff5c
   193b8:	mov	r1, r2
   193bc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   193c0:	bl	21500 <__assert_fail@plt+0x101d0>
   193c4:	ldr	r2, [fp, #-160]	; 0xffffff60
   193c8:	subs	r0, r2, r0
   193cc:	rscs	r1, r1, r2, asr #31
   193d0:	str	r0, [fp, #-168]	; 0xffffff58
   193d4:	str	r1, [fp, #-172]	; 0xffffff54
   193d8:	bcc	195a4 <__assert_fail@plt+0x8274>
   193dc:	b	195b8 <__assert_fail@plt+0x8288>
   193e0:	b	193e4 <__assert_fail@plt+0x80b4>
   193e4:	ldr	r0, [pc, #-472]	; 19214 <__assert_fail@plt+0x7ee4>
   193e8:	ldr	r1, [fp, #8]
   193ec:	cmp	r1, r0
   193f0:	blt	19408 <__assert_fail@plt+0x80d8>
   193f4:	b	1941c <__assert_fail@plt+0x80ec>
   193f8:	ldr	r0, [fp, #8]
   193fc:	movw	r1, #0
   19400:	cmp	r1, r0
   19404:	bge	1941c <__assert_fail@plt+0x80ec>
   19408:	mov	r0, #1
   1940c:	mvn	r1, #0
   19410:	str	r1, [fp, #-176]	; 0xffffff50
   19414:	str	r0, [fp, #-180]	; 0xffffff4c
   19418:	b	19448 <__assert_fail@plt+0x8118>
   1941c:	ldr	r0, [fp, #8]
   19420:	rsb	r0, r0, #0
   19424:	asr	r3, r0, #31
   19428:	mvn	r1, #0
   1942c:	str	r0, [fp, #-184]	; 0xffffff48
   19430:	mov	r0, r1
   19434:	ldr	r2, [fp, #-184]	; 0xffffff48
   19438:	bl	21500 <__assert_fail@plt+0x101d0>
   1943c:	str	r0, [fp, #-176]	; 0xffffff50
   19440:	str	r1, [fp, #-180]	; 0xffffff4c
   19444:	b	19448 <__assert_fail@plt+0x8118>
   19448:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1944c:	ldr	r1, [fp, #-176]	; 0xffffff50
   19450:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19454:	mvn	r2, r2
   19458:	subs	r1, r2, r1
   1945c:	rscs	r0, r0, r2, asr #31
   19460:	str	r1, [sp, #188]	; 0xbc
   19464:	str	r0, [sp, #184]	; 0xb8
   19468:	bcs	195a4 <__assert_fail@plt+0x8274>
   1946c:	b	195b8 <__assert_fail@plt+0x8288>
   19470:	b	19474 <__assert_fail@plt+0x8144>
   19474:	b	194cc <__assert_fail@plt+0x819c>
   19478:	b	194cc <__assert_fail@plt+0x819c>
   1947c:	ldr	r0, [fp, #8]
   19480:	cmn	r0, #1
   19484:	bne	194cc <__assert_fail@plt+0x819c>
   19488:	b	1948c <__assert_fail@plt+0x815c>
   1948c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19490:	add	r0, r0, #0
   19494:	movw	r1, #0
   19498:	cmp	r1, r0
   1949c:	blt	195a4 <__assert_fail@plt+0x8274>
   194a0:	b	195b8 <__assert_fail@plt+0x8288>
   194a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194a8:	movw	r1, #0
   194ac:	cmp	r1, r0
   194b0:	bge	195b8 <__assert_fail@plt+0x8288>
   194b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b8:	sub	r0, r0, #1
   194bc:	mvn	r1, #0
   194c0:	cmp	r1, r0
   194c4:	blt	195a4 <__assert_fail@plt+0x8274>
   194c8:	b	195b8 <__assert_fail@plt+0x8288>
   194cc:	ldr	r0, [fp, #8]
   194d0:	movw	r1, #0
   194d4:	sdiv	r0, r1, r0
   194d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194dc:	cmp	r0, r1
   194e0:	blt	195a4 <__assert_fail@plt+0x8274>
   194e4:	b	195b8 <__assert_fail@plt+0x8288>
   194e8:	ldr	r0, [fp, #8]
   194ec:	cmp	r0, #0
   194f0:	bne	194f8 <__assert_fail@plt+0x81c8>
   194f4:	b	195b8 <__assert_fail@plt+0x8288>
   194f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194fc:	cmp	r0, #0
   19500:	bge	1956c <__assert_fail@plt+0x823c>
   19504:	b	19508 <__assert_fail@plt+0x81d8>
   19508:	b	19550 <__assert_fail@plt+0x8220>
   1950c:	b	19550 <__assert_fail@plt+0x8220>
   19510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19514:	cmn	r0, #1
   19518:	bne	19550 <__assert_fail@plt+0x8220>
   1951c:	b	19520 <__assert_fail@plt+0x81f0>
   19520:	ldr	r0, [fp, #8]
   19524:	add	r0, r0, #0
   19528:	movw	r1, #0
   1952c:	cmp	r1, r0
   19530:	blt	195a4 <__assert_fail@plt+0x8274>
   19534:	b	195b8 <__assert_fail@plt+0x8288>
   19538:	ldr	r0, [fp, #8]
   1953c:	sub	r0, r0, #1
   19540:	mvn	r1, #0
   19544:	cmp	r1, r0
   19548:	blt	195a4 <__assert_fail@plt+0x8274>
   1954c:	b	195b8 <__assert_fail@plt+0x8288>
   19550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19554:	movw	r1, #0
   19558:	sdiv	r0, r1, r0
   1955c:	ldr	r1, [fp, #8]
   19560:	cmp	r0, r1
   19564:	blt	195a4 <__assert_fail@plt+0x8274>
   19568:	b	195b8 <__assert_fail@plt+0x8288>
   1956c:	ldr	r0, [fp, #8]
   19570:	asr	r3, r0, #31
   19574:	mvn	r1, #0
   19578:	str	r0, [sp, #180]	; 0xb4
   1957c:	mov	r0, r1
   19580:	ldr	r2, [sp, #180]	; 0xb4
   19584:	bl	21500 <__assert_fail@plt+0x101d0>
   19588:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1958c:	subs	r0, r0, r2
   19590:	sbcs	r1, r1, r2, asr #31
   19594:	str	r0, [sp, #176]	; 0xb0
   19598:	str	r1, [sp, #172]	; 0xac
   1959c:	bcs	195b8 <__assert_fail@plt+0x8288>
   195a0:	b	195a4 <__assert_fail@plt+0x8274>
   195a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195a8:	ldr	r1, [fp, #8]
   195ac:	mul	r0, r0, r1
   195b0:	str	r0, [fp, #-28]	; 0xffffffe4
   195b4:	b	195cc <__assert_fail@plt+0x829c>
   195b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195bc:	ldr	r1, [fp, #8]
   195c0:	mul	r0, r0, r1
   195c4:	str	r0, [fp, #-28]	; 0xffffffe4
   195c8:	b	195dc <__assert_fail@plt+0x82ac>
   195cc:	ldr	r0, [pc, #-1108]	; 19180 <__assert_fail@plt+0x7e50>
   195d0:	str	r0, [sp, #168]	; 0xa8
   195d4:	b	195fc <__assert_fail@plt+0x82cc>
   195d8:			; <UNDEFINED> instruction: 0xffff8000
   195dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   195e0:	cmp	r0, #64	; 0x40
   195e4:	movw	r0, #0
   195e8:	movlt	r0, #1
   195ec:	tst	r0, #1
   195f0:	movw	r0, #64	; 0x40
   195f4:	moveq	r0, #0
   195f8:	str	r0, [sp, #168]	; 0xa8
   195fc:	ldr	r0, [sp, #168]	; 0xa8
   19600:	str	r0, [fp, #-32]	; 0xffffffe0
   19604:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19608:	cmp	r0, #0
   1960c:	beq	1963c <__assert_fail@plt+0x830c>
   19610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19614:	ldr	r1, [fp, #8]
   19618:	sdiv	r0, r0, r1
   1961c:	str	r0, [fp, #-24]	; 0xffffffe8
   19620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19624:	mov	r1, r0
   19628:	ldr	r2, [fp, #8]
   1962c:	sdiv	r3, r0, r2
   19630:	mls	r0, r3, r2, r0
   19634:	sub	r0, r1, r0
   19638:	str	r0, [fp, #-28]	; 0xffffffe4
   1963c:	ldr	r0, [fp, #-4]
   19640:	movw	r1, #0
   19644:	cmp	r0, r1
   19648:	bne	19658 <__assert_fail@plt+0x8328>
   1964c:	ldr	r0, [fp, #-8]
   19650:	movw	r1, #0
   19654:	str	r1, [r0]
   19658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1965c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19660:	sub	r0, r0, r1
   19664:	ldr	r1, [fp, #-12]
   19668:	cmp	r0, r1
   1966c:	bge	1aaa4 <__assert_fail@plt+0x9774>
   19670:	ldr	r0, [fp, #-20]	; 0xffffffec
   19674:	ldr	r1, [fp, #-12]
   19678:	add	r1, r0, r1
   1967c:	mov	r2, #1
   19680:	cmp	r1, r0
   19684:	movwvc	r2, #0
   19688:	str	r1, [fp, #-24]	; 0xffffffe8
   1968c:	tst	r2, #1
   19690:	bne	1aaa0 <__assert_fail@plt+0x9770>
   19694:	ldr	r0, [fp, #-16]
   19698:	movw	r1, #0
   1969c:	cmp	r1, r0
   196a0:	bgt	196b4 <__assert_fail@plt+0x8384>
   196a4:	ldr	r0, [fp, #-16]
   196a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196ac:	cmp	r0, r1
   196b0:	blt	1aaa0 <__assert_fail@plt+0x9770>
   196b4:	b	19a90 <__assert_fail@plt+0x8760>
   196b8:	b	196bc <__assert_fail@plt+0x838c>
   196bc:	ldr	r0, [fp, #8]
   196c0:	cmp	r0, #0
   196c4:	bge	197d8 <__assert_fail@plt+0x84a8>
   196c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196cc:	cmp	r0, #0
   196d0:	bge	1975c <__assert_fail@plt+0x842c>
   196d4:	b	196d8 <__assert_fail@plt+0x83a8>
   196d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196dc:	ldr	r1, [fp, #8]
   196e0:	movw	r2, #127	; 0x7f
   196e4:	sdiv	r1, r2, r1
   196e8:	cmp	r0, r1
   196ec:	blt	19878 <__assert_fail@plt+0x8548>
   196f0:	b	19890 <__assert_fail@plt+0x8560>
   196f4:	b	196f8 <__assert_fail@plt+0x83c8>
   196f8:	ldr	r0, [pc, #-1260]	; 19214 <__assert_fail@plt+0x7ee4>
   196fc:	ldr	r1, [fp, #8]
   19700:	cmp	r1, r0
   19704:	blt	1971c <__assert_fail@plt+0x83ec>
   19708:	b	19728 <__assert_fail@plt+0x83f8>
   1970c:	ldr	r0, [fp, #8]
   19710:	movw	r1, #0
   19714:	cmp	r1, r0
   19718:	bge	19728 <__assert_fail@plt+0x83f8>
   1971c:	movw	r0, #0
   19720:	str	r0, [sp, #164]	; 0xa4
   19724:	b	19740 <__assert_fail@plt+0x8410>
   19728:	ldr	r0, [fp, #8]
   1972c:	movw	r1, #0
   19730:	sub	r0, r1, r0
   19734:	movw	r1, #127	; 0x7f
   19738:	sdiv	r0, r1, r0
   1973c:	str	r0, [sp, #164]	; 0xa4
   19740:	ldr	r0, [sp, #164]	; 0xa4
   19744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19748:	mvn	r2, #0
   1974c:	sub	r1, r2, r1
   19750:	cmp	r0, r1
   19754:	ble	19878 <__assert_fail@plt+0x8548>
   19758:	b	19890 <__assert_fail@plt+0x8560>
   1975c:	b	19760 <__assert_fail@plt+0x8430>
   19760:	b	197bc <__assert_fail@plt+0x848c>
   19764:	b	197bc <__assert_fail@plt+0x848c>
   19768:	ldr	r0, [fp, #8]
   1976c:	cmn	r0, #1
   19770:	bne	197bc <__assert_fail@plt+0x848c>
   19774:	b	19778 <__assert_fail@plt+0x8448>
   19778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1977c:	mvn	r1, #127	; 0x7f
   19780:	add	r0, r0, r1
   19784:	movw	r1, #0
   19788:	cmp	r1, r0
   1978c:	blt	19878 <__assert_fail@plt+0x8548>
   19790:	b	19890 <__assert_fail@plt+0x8560>
   19794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19798:	movw	r1, #0
   1979c:	cmp	r1, r0
   197a0:	bge	19890 <__assert_fail@plt+0x8560>
   197a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197a8:	sub	r0, r0, #1
   197ac:	movw	r1, #127	; 0x7f
   197b0:	cmp	r1, r0
   197b4:	blt	19878 <__assert_fail@plt+0x8548>
   197b8:	b	19890 <__assert_fail@plt+0x8560>
   197bc:	ldr	r0, [fp, #8]
   197c0:	mvn	r1, #127	; 0x7f
   197c4:	sdiv	r0, r1, r0
   197c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197cc:	cmp	r0, r1
   197d0:	blt	19878 <__assert_fail@plt+0x8548>
   197d4:	b	19890 <__assert_fail@plt+0x8560>
   197d8:	ldr	r0, [fp, #8]
   197dc:	cmp	r0, #0
   197e0:	bne	197e8 <__assert_fail@plt+0x84b8>
   197e4:	b	19890 <__assert_fail@plt+0x8560>
   197e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197ec:	cmp	r0, #0
   197f0:	bge	19860 <__assert_fail@plt+0x8530>
   197f4:	b	197f8 <__assert_fail@plt+0x84c8>
   197f8:	b	19844 <__assert_fail@plt+0x8514>
   197fc:	b	19844 <__assert_fail@plt+0x8514>
   19800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19804:	cmn	r0, #1
   19808:	bne	19844 <__assert_fail@plt+0x8514>
   1980c:	b	19810 <__assert_fail@plt+0x84e0>
   19810:	ldr	r0, [fp, #8]
   19814:	mvn	r1, #127	; 0x7f
   19818:	add	r0, r0, r1
   1981c:	movw	r1, #0
   19820:	cmp	r1, r0
   19824:	blt	19878 <__assert_fail@plt+0x8548>
   19828:	b	19890 <__assert_fail@plt+0x8560>
   1982c:	ldr	r0, [fp, #8]
   19830:	sub	r0, r0, #1
   19834:	movw	r1, #127	; 0x7f
   19838:	cmp	r1, r0
   1983c:	blt	19878 <__assert_fail@plt+0x8548>
   19840:	b	19890 <__assert_fail@plt+0x8560>
   19844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19848:	mvn	r1, #127	; 0x7f
   1984c:	sdiv	r0, r1, r0
   19850:	ldr	r1, [fp, #8]
   19854:	cmp	r0, r1
   19858:	blt	19878 <__assert_fail@plt+0x8548>
   1985c:	b	19890 <__assert_fail@plt+0x8560>
   19860:	ldr	r0, [fp, #8]
   19864:	movw	r1, #127	; 0x7f
   19868:	sdiv	r0, r1, r0
   1986c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19870:	cmp	r0, r1
   19874:	bge	19890 <__assert_fail@plt+0x8560>
   19878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1987c:	ldr	r1, [fp, #8]
   19880:	mul	r0, r0, r1
   19884:	sxtb	r0, r0
   19888:	str	r0, [fp, #-28]	; 0xffffffe4
   1988c:	b	1aaa0 <__assert_fail@plt+0x9770>
   19890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19894:	ldr	r1, [fp, #8]
   19898:	mul	r0, r0, r1
   1989c:	sxtb	r0, r0
   198a0:	str	r0, [fp, #-28]	; 0xffffffe4
   198a4:	b	1aaa4 <__assert_fail@plt+0x9774>
   198a8:	ldr	r0, [fp, #8]
   198ac:	cmp	r0, #0
   198b0:	bge	199c0 <__assert_fail@plt+0x8690>
   198b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198b8:	cmp	r0, #0
   198bc:	bge	19948 <__assert_fail@plt+0x8618>
   198c0:	b	198c4 <__assert_fail@plt+0x8594>
   198c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198c8:	ldr	r1, [fp, #8]
   198cc:	movw	r2, #255	; 0xff
   198d0:	sdiv	r1, r2, r1
   198d4:	cmp	r0, r1
   198d8:	blt	19a5c <__assert_fail@plt+0x872c>
   198dc:	b	19a78 <__assert_fail@plt+0x8748>
   198e0:	b	198e4 <__assert_fail@plt+0x85b4>
   198e4:	ldr	r0, [pc, #-1752]	; 19214 <__assert_fail@plt+0x7ee4>
   198e8:	ldr	r1, [fp, #8]
   198ec:	cmp	r1, r0
   198f0:	blt	19908 <__assert_fail@plt+0x85d8>
   198f4:	b	19914 <__assert_fail@plt+0x85e4>
   198f8:	ldr	r0, [fp, #8]
   198fc:	movw	r1, #0
   19900:	cmp	r1, r0
   19904:	bge	19914 <__assert_fail@plt+0x85e4>
   19908:	movw	r0, #0
   1990c:	str	r0, [sp, #160]	; 0xa0
   19910:	b	1992c <__assert_fail@plt+0x85fc>
   19914:	ldr	r0, [fp, #8]
   19918:	movw	r1, #0
   1991c:	sub	r0, r1, r0
   19920:	movw	r1, #255	; 0xff
   19924:	sdiv	r0, r1, r0
   19928:	str	r0, [sp, #160]	; 0xa0
   1992c:	ldr	r0, [sp, #160]	; 0xa0
   19930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19934:	mvn	r2, #0
   19938:	sub	r1, r2, r1
   1993c:	cmp	r0, r1
   19940:	ble	19a5c <__assert_fail@plt+0x872c>
   19944:	b	19a78 <__assert_fail@plt+0x8748>
   19948:	b	1994c <__assert_fail@plt+0x861c>
   1994c:	b	199a4 <__assert_fail@plt+0x8674>
   19950:	b	199a4 <__assert_fail@plt+0x8674>
   19954:	ldr	r0, [fp, #8]
   19958:	cmn	r0, #1
   1995c:	bne	199a4 <__assert_fail@plt+0x8674>
   19960:	b	19964 <__assert_fail@plt+0x8634>
   19964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19968:	add	r0, r0, #0
   1996c:	movw	r1, #0
   19970:	cmp	r1, r0
   19974:	blt	19a5c <__assert_fail@plt+0x872c>
   19978:	b	19a78 <__assert_fail@plt+0x8748>
   1997c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19980:	movw	r1, #0
   19984:	cmp	r1, r0
   19988:	bge	19a78 <__assert_fail@plt+0x8748>
   1998c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19990:	sub	r0, r0, #1
   19994:	mvn	r1, #0
   19998:	cmp	r1, r0
   1999c:	blt	19a5c <__assert_fail@plt+0x872c>
   199a0:	b	19a78 <__assert_fail@plt+0x8748>
   199a4:	ldr	r0, [fp, #8]
   199a8:	movw	r1, #0
   199ac:	sdiv	r0, r1, r0
   199b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199b4:	cmp	r0, r1
   199b8:	blt	19a5c <__assert_fail@plt+0x872c>
   199bc:	b	19a78 <__assert_fail@plt+0x8748>
   199c0:	ldr	r0, [fp, #8]
   199c4:	cmp	r0, #0
   199c8:	bne	199d0 <__assert_fail@plt+0x86a0>
   199cc:	b	19a78 <__assert_fail@plt+0x8748>
   199d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d4:	cmp	r0, #0
   199d8:	bge	19a44 <__assert_fail@plt+0x8714>
   199dc:	b	199e0 <__assert_fail@plt+0x86b0>
   199e0:	b	19a28 <__assert_fail@plt+0x86f8>
   199e4:	b	19a28 <__assert_fail@plt+0x86f8>
   199e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199ec:	cmn	r0, #1
   199f0:	bne	19a28 <__assert_fail@plt+0x86f8>
   199f4:	b	199f8 <__assert_fail@plt+0x86c8>
   199f8:	ldr	r0, [fp, #8]
   199fc:	add	r0, r0, #0
   19a00:	movw	r1, #0
   19a04:	cmp	r1, r0
   19a08:	blt	19a5c <__assert_fail@plt+0x872c>
   19a0c:	b	19a78 <__assert_fail@plt+0x8748>
   19a10:	ldr	r0, [fp, #8]
   19a14:	sub	r0, r0, #1
   19a18:	mvn	r1, #0
   19a1c:	cmp	r1, r0
   19a20:	blt	19a5c <__assert_fail@plt+0x872c>
   19a24:	b	19a78 <__assert_fail@plt+0x8748>
   19a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a2c:	movw	r1, #0
   19a30:	sdiv	r0, r1, r0
   19a34:	ldr	r1, [fp, #8]
   19a38:	cmp	r0, r1
   19a3c:	blt	19a5c <__assert_fail@plt+0x872c>
   19a40:	b	19a78 <__assert_fail@plt+0x8748>
   19a44:	ldr	r0, [fp, #8]
   19a48:	movw	r1, #255	; 0xff
   19a4c:	sdiv	r0, r1, r0
   19a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a54:	cmp	r0, r1
   19a58:	bge	19a78 <__assert_fail@plt+0x8748>
   19a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a60:	ldr	r1, [fp, #8]
   19a64:	mul	r0, r0, r1
   19a68:	and	r0, r0, #255	; 0xff
   19a6c:	str	r0, [fp, #-28]	; 0xffffffe4
   19a70:	b	1aaa0 <__assert_fail@plt+0x9770>
   19a74:	andhi	r0, r0, r0
   19a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a7c:	ldr	r1, [fp, #8]
   19a80:	mul	r0, r0, r1
   19a84:	and	r0, r0, #255	; 0xff
   19a88:	str	r0, [fp, #-28]	; 0xffffffe4
   19a8c:	b	1aaa4 <__assert_fail@plt+0x9774>
   19a90:	b	19e68 <__assert_fail@plt+0x8b38>
   19a94:	b	19a98 <__assert_fail@plt+0x8768>
   19a98:	ldr	r0, [fp, #8]
   19a9c:	cmp	r0, #0
   19aa0:	bge	19bb4 <__assert_fail@plt+0x8884>
   19aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa8:	cmp	r0, #0
   19aac:	bge	19b38 <__assert_fail@plt+0x8808>
   19ab0:	b	19ab4 <__assert_fail@plt+0x8784>
   19ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab8:	ldr	r1, [fp, #8]
   19abc:	movw	r2, #32767	; 0x7fff
   19ac0:	sdiv	r1, r2, r1
   19ac4:	cmp	r0, r1
   19ac8:	blt	19c54 <__assert_fail@plt+0x8924>
   19acc:	b	19c6c <__assert_fail@plt+0x893c>
   19ad0:	b	19ad4 <__assert_fail@plt+0x87a4>
   19ad4:	ldr	r0, [pc, #4084]	; 1aad0 <__assert_fail@plt+0x97a0>
   19ad8:	ldr	r1, [fp, #8]
   19adc:	cmp	r1, r0
   19ae0:	blt	19af8 <__assert_fail@plt+0x87c8>
   19ae4:	b	19b04 <__assert_fail@plt+0x87d4>
   19ae8:	ldr	r0, [fp, #8]
   19aec:	movw	r1, #0
   19af0:	cmp	r1, r0
   19af4:	bge	19b04 <__assert_fail@plt+0x87d4>
   19af8:	movw	r0, #0
   19afc:	str	r0, [sp, #156]	; 0x9c
   19b00:	b	19b1c <__assert_fail@plt+0x87ec>
   19b04:	ldr	r0, [fp, #8]
   19b08:	movw	r1, #0
   19b0c:	sub	r0, r1, r0
   19b10:	movw	r1, #32767	; 0x7fff
   19b14:	sdiv	r0, r1, r0
   19b18:	str	r0, [sp, #156]	; 0x9c
   19b1c:	ldr	r0, [sp, #156]	; 0x9c
   19b20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b24:	mvn	r2, #0
   19b28:	sub	r1, r2, r1
   19b2c:	cmp	r0, r1
   19b30:	ble	19c54 <__assert_fail@plt+0x8924>
   19b34:	b	19c6c <__assert_fail@plt+0x893c>
   19b38:	b	19b3c <__assert_fail@plt+0x880c>
   19b3c:	b	19b98 <__assert_fail@plt+0x8868>
   19b40:	b	19b98 <__assert_fail@plt+0x8868>
   19b44:	ldr	r0, [fp, #8]
   19b48:	cmn	r0, #1
   19b4c:	bne	19b98 <__assert_fail@plt+0x8868>
   19b50:	b	19b54 <__assert_fail@plt+0x8824>
   19b54:	ldr	r0, [pc, #3964]	; 1aad8 <__assert_fail@plt+0x97a8>
   19b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b5c:	add	r0, r1, r0
   19b60:	movw	r1, #0
   19b64:	cmp	r1, r0
   19b68:	blt	19c54 <__assert_fail@plt+0x8924>
   19b6c:	b	19c6c <__assert_fail@plt+0x893c>
   19b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b74:	movw	r1, #0
   19b78:	cmp	r1, r0
   19b7c:	bge	19c6c <__assert_fail@plt+0x893c>
   19b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b84:	sub	r0, r0, #1
   19b88:	movw	r1, #32767	; 0x7fff
   19b8c:	cmp	r1, r0
   19b90:	blt	19c54 <__assert_fail@plt+0x8924>
   19b94:	b	19c6c <__assert_fail@plt+0x893c>
   19b98:	ldr	r0, [pc, #3896]	; 1aad8 <__assert_fail@plt+0x97a8>
   19b9c:	ldr	r1, [fp, #8]
   19ba0:	sdiv	r0, r0, r1
   19ba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ba8:	cmp	r0, r1
   19bac:	blt	19c54 <__assert_fail@plt+0x8924>
   19bb0:	b	19c6c <__assert_fail@plt+0x893c>
   19bb4:	ldr	r0, [fp, #8]
   19bb8:	cmp	r0, #0
   19bbc:	bne	19bc4 <__assert_fail@plt+0x8894>
   19bc0:	b	19c6c <__assert_fail@plt+0x893c>
   19bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc8:	cmp	r0, #0
   19bcc:	bge	19c3c <__assert_fail@plt+0x890c>
   19bd0:	b	19bd4 <__assert_fail@plt+0x88a4>
   19bd4:	b	19c20 <__assert_fail@plt+0x88f0>
   19bd8:	b	19c20 <__assert_fail@plt+0x88f0>
   19bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19be0:	cmn	r0, #1
   19be4:	bne	19c20 <__assert_fail@plt+0x88f0>
   19be8:	b	19bec <__assert_fail@plt+0x88bc>
   19bec:	ldr	r0, [pc, #3812]	; 1aad8 <__assert_fail@plt+0x97a8>
   19bf0:	ldr	r1, [fp, #8]
   19bf4:	add	r0, r1, r0
   19bf8:	movw	r1, #0
   19bfc:	cmp	r1, r0
   19c00:	blt	19c54 <__assert_fail@plt+0x8924>
   19c04:	b	19c6c <__assert_fail@plt+0x893c>
   19c08:	ldr	r0, [fp, #8]
   19c0c:	sub	r0, r0, #1
   19c10:	movw	r1, #32767	; 0x7fff
   19c14:	cmp	r1, r0
   19c18:	blt	19c54 <__assert_fail@plt+0x8924>
   19c1c:	b	19c6c <__assert_fail@plt+0x893c>
   19c20:	ldr	r0, [pc, #3760]	; 1aad8 <__assert_fail@plt+0x97a8>
   19c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c28:	sdiv	r0, r0, r1
   19c2c:	ldr	r1, [fp, #8]
   19c30:	cmp	r0, r1
   19c34:	blt	19c54 <__assert_fail@plt+0x8924>
   19c38:	b	19c6c <__assert_fail@plt+0x893c>
   19c3c:	ldr	r0, [fp, #8]
   19c40:	movw	r1, #32767	; 0x7fff
   19c44:	sdiv	r0, r1, r0
   19c48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c4c:	cmp	r0, r1
   19c50:	bge	19c6c <__assert_fail@plt+0x893c>
   19c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c58:	ldr	r1, [fp, #8]
   19c5c:	mul	r0, r0, r1
   19c60:	sxth	r0, r0
   19c64:	str	r0, [fp, #-28]	; 0xffffffe4
   19c68:	b	1aaa0 <__assert_fail@plt+0x9770>
   19c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c70:	ldr	r1, [fp, #8]
   19c74:	mul	r0, r0, r1
   19c78:	sxth	r0, r0
   19c7c:	str	r0, [fp, #-28]	; 0xffffffe4
   19c80:	b	1aaa4 <__assert_fail@plt+0x9774>
   19c84:	ldr	r0, [fp, #8]
   19c88:	cmp	r0, #0
   19c8c:	bge	19d9c <__assert_fail@plt+0x8a6c>
   19c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c94:	cmp	r0, #0
   19c98:	bge	19d24 <__assert_fail@plt+0x89f4>
   19c9c:	b	19ca0 <__assert_fail@plt+0x8970>
   19ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ca4:	ldr	r1, [fp, #8]
   19ca8:	movw	r2, #65535	; 0xffff
   19cac:	sdiv	r1, r2, r1
   19cb0:	cmp	r0, r1
   19cb4:	blt	19e38 <__assert_fail@plt+0x8b08>
   19cb8:	b	19e50 <__assert_fail@plt+0x8b20>
   19cbc:	b	19cc0 <__assert_fail@plt+0x8990>
   19cc0:	ldr	r0, [pc, #3592]	; 1aad0 <__assert_fail@plt+0x97a0>
   19cc4:	ldr	r1, [fp, #8]
   19cc8:	cmp	r1, r0
   19ccc:	blt	19ce4 <__assert_fail@plt+0x89b4>
   19cd0:	b	19cf0 <__assert_fail@plt+0x89c0>
   19cd4:	ldr	r0, [fp, #8]
   19cd8:	movw	r1, #0
   19cdc:	cmp	r1, r0
   19ce0:	bge	19cf0 <__assert_fail@plt+0x89c0>
   19ce4:	movw	r0, #0
   19ce8:	str	r0, [sp, #152]	; 0x98
   19cec:	b	19d08 <__assert_fail@plt+0x89d8>
   19cf0:	ldr	r0, [fp, #8]
   19cf4:	movw	r1, #0
   19cf8:	sub	r0, r1, r0
   19cfc:	movw	r1, #65535	; 0xffff
   19d00:	sdiv	r0, r1, r0
   19d04:	str	r0, [sp, #152]	; 0x98
   19d08:	ldr	r0, [sp, #152]	; 0x98
   19d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d10:	mvn	r2, #0
   19d14:	sub	r1, r2, r1
   19d18:	cmp	r0, r1
   19d1c:	ble	19e38 <__assert_fail@plt+0x8b08>
   19d20:	b	19e50 <__assert_fail@plt+0x8b20>
   19d24:	b	19d28 <__assert_fail@plt+0x89f8>
   19d28:	b	19d80 <__assert_fail@plt+0x8a50>
   19d2c:	b	19d80 <__assert_fail@plt+0x8a50>
   19d30:	ldr	r0, [fp, #8]
   19d34:	cmn	r0, #1
   19d38:	bne	19d80 <__assert_fail@plt+0x8a50>
   19d3c:	b	19d40 <__assert_fail@plt+0x8a10>
   19d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d44:	add	r0, r0, #0
   19d48:	movw	r1, #0
   19d4c:	cmp	r1, r0
   19d50:	blt	19e38 <__assert_fail@plt+0x8b08>
   19d54:	b	19e50 <__assert_fail@plt+0x8b20>
   19d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d5c:	movw	r1, #0
   19d60:	cmp	r1, r0
   19d64:	bge	19e50 <__assert_fail@plt+0x8b20>
   19d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d6c:	sub	r0, r0, #1
   19d70:	mvn	r1, #0
   19d74:	cmp	r1, r0
   19d78:	blt	19e38 <__assert_fail@plt+0x8b08>
   19d7c:	b	19e50 <__assert_fail@plt+0x8b20>
   19d80:	ldr	r0, [fp, #8]
   19d84:	movw	r1, #0
   19d88:	sdiv	r0, r1, r0
   19d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d90:	cmp	r0, r1
   19d94:	blt	19e38 <__assert_fail@plt+0x8b08>
   19d98:	b	19e50 <__assert_fail@plt+0x8b20>
   19d9c:	ldr	r0, [fp, #8]
   19da0:	cmp	r0, #0
   19da4:	bne	19dac <__assert_fail@plt+0x8a7c>
   19da8:	b	19e50 <__assert_fail@plt+0x8b20>
   19dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19db0:	cmp	r0, #0
   19db4:	bge	19e20 <__assert_fail@plt+0x8af0>
   19db8:	b	19dbc <__assert_fail@plt+0x8a8c>
   19dbc:	b	19e04 <__assert_fail@plt+0x8ad4>
   19dc0:	b	19e04 <__assert_fail@plt+0x8ad4>
   19dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dc8:	cmn	r0, #1
   19dcc:	bne	19e04 <__assert_fail@plt+0x8ad4>
   19dd0:	b	19dd4 <__assert_fail@plt+0x8aa4>
   19dd4:	ldr	r0, [fp, #8]
   19dd8:	add	r0, r0, #0
   19ddc:	movw	r1, #0
   19de0:	cmp	r1, r0
   19de4:	blt	19e38 <__assert_fail@plt+0x8b08>
   19de8:	b	19e50 <__assert_fail@plt+0x8b20>
   19dec:	ldr	r0, [fp, #8]
   19df0:	sub	r0, r0, #1
   19df4:	mvn	r1, #0
   19df8:	cmp	r1, r0
   19dfc:	blt	19e38 <__assert_fail@plt+0x8b08>
   19e00:	b	19e50 <__assert_fail@plt+0x8b20>
   19e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e08:	movw	r1, #0
   19e0c:	sdiv	r0, r1, r0
   19e10:	ldr	r1, [fp, #8]
   19e14:	cmp	r0, r1
   19e18:	blt	19e38 <__assert_fail@plt+0x8b08>
   19e1c:	b	19e50 <__assert_fail@plt+0x8b20>
   19e20:	ldr	r0, [fp, #8]
   19e24:	movw	r1, #65535	; 0xffff
   19e28:	sdiv	r0, r1, r0
   19e2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e30:	cmp	r0, r1
   19e34:	bge	19e50 <__assert_fail@plt+0x8b20>
   19e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e3c:	ldr	r1, [fp, #8]
   19e40:	mul	r0, r0, r1
   19e44:	uxth	r0, r0
   19e48:	str	r0, [fp, #-28]	; 0xffffffe4
   19e4c:	b	1aaa0 <__assert_fail@plt+0x9770>
   19e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e54:	ldr	r1, [fp, #8]
   19e58:	mul	r0, r0, r1
   19e5c:	uxth	r0, r0
   19e60:	str	r0, [fp, #-28]	; 0xffffffe4
   19e64:	b	1aaa4 <__assert_fail@plt+0x9774>
   19e68:	b	19e6c <__assert_fail@plt+0x8b3c>
   19e6c:	b	19e70 <__assert_fail@plt+0x8b40>
   19e70:	ldr	r0, [fp, #8]
   19e74:	cmp	r0, #0
   19e78:	bge	19f7c <__assert_fail@plt+0x8c4c>
   19e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e80:	cmp	r0, #0
   19e84:	bge	19f10 <__assert_fail@plt+0x8be0>
   19e88:	b	19e8c <__assert_fail@plt+0x8b5c>
   19e8c:	ldr	r0, [pc, #3128]	; 1aacc <__assert_fail@plt+0x979c>
   19e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e94:	ldr	r2, [fp, #8]
   19e98:	sdiv	r0, r0, r2
   19e9c:	cmp	r1, r0
   19ea0:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19ea4:	b	1a020 <__assert_fail@plt+0x8cf0>
   19ea8:	b	19eac <__assert_fail@plt+0x8b7c>
   19eac:	ldr	r0, [pc, #3100]	; 1aad0 <__assert_fail@plt+0x97a0>
   19eb0:	ldr	r1, [fp, #8]
   19eb4:	cmp	r1, r0
   19eb8:	blt	19ed0 <__assert_fail@plt+0x8ba0>
   19ebc:	b	19edc <__assert_fail@plt+0x8bac>
   19ec0:	ldr	r0, [fp, #8]
   19ec4:	movw	r1, #0
   19ec8:	cmp	r1, r0
   19ecc:	bge	19edc <__assert_fail@plt+0x8bac>
   19ed0:	movw	r0, #0
   19ed4:	str	r0, [sp, #148]	; 0x94
   19ed8:	b	19ef4 <__assert_fail@plt+0x8bc4>
   19edc:	ldr	r0, [pc, #3048]	; 1aacc <__assert_fail@plt+0x979c>
   19ee0:	ldr	r1, [fp, #8]
   19ee4:	movw	r2, #0
   19ee8:	sub	r1, r2, r1
   19eec:	sdiv	r0, r0, r1
   19ef0:	str	r0, [sp, #148]	; 0x94
   19ef4:	ldr	r0, [sp, #148]	; 0x94
   19ef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19efc:	mvn	r2, #0
   19f00:	sub	r1, r2, r1
   19f04:	cmp	r0, r1
   19f08:	ble	1a00c <__assert_fail@plt+0x8cdc>
   19f0c:	b	1a020 <__assert_fail@plt+0x8cf0>
   19f10:	ldr	r0, [fp, #8]
   19f14:	cmn	r0, #1
   19f18:	bne	19f60 <__assert_fail@plt+0x8c30>
   19f1c:	b	19f20 <__assert_fail@plt+0x8bf0>
   19f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f24:	add	r0, r0, #-2147483648	; 0x80000000
   19f28:	movw	r1, #0
   19f2c:	cmp	r1, r0
   19f30:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19f34:	b	1a020 <__assert_fail@plt+0x8cf0>
   19f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f3c:	movw	r1, #0
   19f40:	cmp	r1, r0
   19f44:	bge	1a020 <__assert_fail@plt+0x8cf0>
   19f48:	ldr	r0, [pc, #2940]	; 1aacc <__assert_fail@plt+0x979c>
   19f4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f50:	sub	r1, r1, #1
   19f54:	cmp	r0, r1
   19f58:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19f5c:	b	1a020 <__assert_fail@plt+0x8cf0>
   19f60:	ldr	r0, [pc, #2924]	; 1aad4 <__assert_fail@plt+0x97a4>
   19f64:	ldr	r1, [fp, #8]
   19f68:	sdiv	r0, r0, r1
   19f6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f70:	cmp	r0, r1
   19f74:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19f78:	b	1a020 <__assert_fail@plt+0x8cf0>
   19f7c:	ldr	r0, [fp, #8]
   19f80:	cmp	r0, #0
   19f84:	bne	19f8c <__assert_fail@plt+0x8c5c>
   19f88:	b	1a020 <__assert_fail@plt+0x8cf0>
   19f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f90:	cmp	r0, #0
   19f94:	bge	19ff4 <__assert_fail@plt+0x8cc4>
   19f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f9c:	cmn	r0, #1
   19fa0:	bne	19fd8 <__assert_fail@plt+0x8ca8>
   19fa4:	b	19fa8 <__assert_fail@plt+0x8c78>
   19fa8:	ldr	r0, [fp, #8]
   19fac:	add	r0, r0, #-2147483648	; 0x80000000
   19fb0:	movw	r1, #0
   19fb4:	cmp	r1, r0
   19fb8:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19fbc:	b	1a020 <__assert_fail@plt+0x8cf0>
   19fc0:	ldr	r0, [pc, #2820]	; 1aacc <__assert_fail@plt+0x979c>
   19fc4:	ldr	r1, [fp, #8]
   19fc8:	sub	r1, r1, #1
   19fcc:	cmp	r0, r1
   19fd0:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19fd4:	b	1a020 <__assert_fail@plt+0x8cf0>
   19fd8:	ldr	r0, [pc, #2804]	; 1aad4 <__assert_fail@plt+0x97a4>
   19fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fe0:	sdiv	r0, r0, r1
   19fe4:	ldr	r1, [fp, #8]
   19fe8:	cmp	r0, r1
   19fec:	blt	1a00c <__assert_fail@plt+0x8cdc>
   19ff0:	b	1a020 <__assert_fail@plt+0x8cf0>
   19ff4:	ldr	r0, [pc, #2768]	; 1aacc <__assert_fail@plt+0x979c>
   19ff8:	ldr	r1, [fp, #8]
   19ffc:	sdiv	r0, r0, r1
   1a000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a004:	cmp	r0, r1
   1a008:	bge	1a020 <__assert_fail@plt+0x8cf0>
   1a00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a010:	ldr	r1, [fp, #8]
   1a014:	mul	r0, r0, r1
   1a018:	str	r0, [fp, #-28]	; 0xffffffe4
   1a01c:	b	1aaa0 <__assert_fail@plt+0x9770>
   1a020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a024:	ldr	r1, [fp, #8]
   1a028:	mul	r0, r0, r1
   1a02c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a030:	b	1aaa4 <__assert_fail@plt+0x9774>
   1a034:	ldr	r0, [fp, #8]
   1a038:	cmp	r0, #0
   1a03c:	bge	1a14c <__assert_fail@plt+0x8e1c>
   1a040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a044:	cmp	r0, #0
   1a048:	bge	1a0d4 <__assert_fail@plt+0x8da4>
   1a04c:	b	1a06c <__assert_fail@plt+0x8d3c>
   1a050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a054:	ldr	r1, [fp, #8]
   1a058:	mvn	r2, #0
   1a05c:	udiv	r1, r2, r1
   1a060:	cmp	r0, r1
   1a064:	bcc	1a1e8 <__assert_fail@plt+0x8eb8>
   1a068:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a06c:	b	1a070 <__assert_fail@plt+0x8d40>
   1a070:	ldr	r0, [pc, #2648]	; 1aad0 <__assert_fail@plt+0x97a0>
   1a074:	ldr	r1, [fp, #8]
   1a078:	cmp	r1, r0
   1a07c:	blt	1a094 <__assert_fail@plt+0x8d64>
   1a080:	b	1a0a0 <__assert_fail@plt+0x8d70>
   1a084:	ldr	r0, [fp, #8]
   1a088:	movw	r1, #0
   1a08c:	cmp	r1, r0
   1a090:	bge	1a0a0 <__assert_fail@plt+0x8d70>
   1a094:	movw	r0, #1
   1a098:	str	r0, [sp, #144]	; 0x90
   1a09c:	b	1a0b8 <__assert_fail@plt+0x8d88>
   1a0a0:	ldr	r0, [fp, #8]
   1a0a4:	movw	r1, #0
   1a0a8:	sub	r0, r1, r0
   1a0ac:	mvn	r1, #0
   1a0b0:	udiv	r0, r1, r0
   1a0b4:	str	r0, [sp, #144]	; 0x90
   1a0b8:	ldr	r0, [sp, #144]	; 0x90
   1a0bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a0c0:	mvn	r2, #0
   1a0c4:	sub	r1, r2, r1
   1a0c8:	cmp	r0, r1
   1a0cc:	bls	1a1e8 <__assert_fail@plt+0x8eb8>
   1a0d0:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a0d4:	b	1a0d8 <__assert_fail@plt+0x8da8>
   1a0d8:	b	1a130 <__assert_fail@plt+0x8e00>
   1a0dc:	b	1a130 <__assert_fail@plt+0x8e00>
   1a0e0:	ldr	r0, [fp, #8]
   1a0e4:	cmn	r0, #1
   1a0e8:	bne	1a130 <__assert_fail@plt+0x8e00>
   1a0ec:	b	1a0f0 <__assert_fail@plt+0x8dc0>
   1a0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f4:	add	r0, r0, #0
   1a0f8:	movw	r1, #0
   1a0fc:	cmp	r1, r0
   1a100:	blt	1a1e8 <__assert_fail@plt+0x8eb8>
   1a104:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a10c:	movw	r1, #0
   1a110:	cmp	r1, r0
   1a114:	bge	1a1fc <__assert_fail@plt+0x8ecc>
   1a118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a11c:	sub	r0, r0, #1
   1a120:	mvn	r1, #0
   1a124:	cmp	r1, r0
   1a128:	blt	1a1e8 <__assert_fail@plt+0x8eb8>
   1a12c:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a130:	ldr	r0, [fp, #8]
   1a134:	movw	r1, #0
   1a138:	sdiv	r0, r1, r0
   1a13c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a140:	cmp	r0, r1
   1a144:	blt	1a1e8 <__assert_fail@plt+0x8eb8>
   1a148:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a14c:	ldr	r0, [fp, #8]
   1a150:	cmp	r0, #0
   1a154:	bne	1a15c <__assert_fail@plt+0x8e2c>
   1a158:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a160:	cmp	r0, #0
   1a164:	bge	1a1d0 <__assert_fail@plt+0x8ea0>
   1a168:	b	1a16c <__assert_fail@plt+0x8e3c>
   1a16c:	b	1a1b4 <__assert_fail@plt+0x8e84>
   1a170:	b	1a1b4 <__assert_fail@plt+0x8e84>
   1a174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a178:	cmn	r0, #1
   1a17c:	bne	1a1b4 <__assert_fail@plt+0x8e84>
   1a180:	b	1a184 <__assert_fail@plt+0x8e54>
   1a184:	ldr	r0, [fp, #8]
   1a188:	add	r0, r0, #0
   1a18c:	movw	r1, #0
   1a190:	cmp	r1, r0
   1a194:	blt	1a1e8 <__assert_fail@plt+0x8eb8>
   1a198:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a19c:	ldr	r0, [fp, #8]
   1a1a0:	sub	r0, r0, #1
   1a1a4:	mvn	r1, #0
   1a1a8:	cmp	r1, r0
   1a1ac:	blt	1a1e8 <__assert_fail@plt+0x8eb8>
   1a1b0:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1b8:	movw	r1, #0
   1a1bc:	sdiv	r0, r1, r0
   1a1c0:	ldr	r1, [fp, #8]
   1a1c4:	cmp	r0, r1
   1a1c8:	blt	1a1e8 <__assert_fail@plt+0x8eb8>
   1a1cc:	b	1a1fc <__assert_fail@plt+0x8ecc>
   1a1d0:	ldr	r0, [fp, #8]
   1a1d4:	mvn	r1, #0
   1a1d8:	udiv	r0, r1, r0
   1a1dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a1e0:	cmp	r0, r1
   1a1e4:	bcs	1a1fc <__assert_fail@plt+0x8ecc>
   1a1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1ec:	ldr	r1, [fp, #8]
   1a1f0:	mul	r0, r0, r1
   1a1f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1f8:	b	1aaa0 <__assert_fail@plt+0x9770>
   1a1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a200:	ldr	r1, [fp, #8]
   1a204:	mul	r0, r0, r1
   1a208:	str	r0, [fp, #-28]	; 0xffffffe4
   1a20c:	b	1aaa4 <__assert_fail@plt+0x9774>
   1a210:	b	1a214 <__assert_fail@plt+0x8ee4>
   1a214:	b	1a218 <__assert_fail@plt+0x8ee8>
   1a218:	ldr	r0, [fp, #8]
   1a21c:	cmp	r0, #0
   1a220:	bge	1a324 <__assert_fail@plt+0x8ff4>
   1a224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a228:	cmp	r0, #0
   1a22c:	bge	1a2b8 <__assert_fail@plt+0x8f88>
   1a230:	b	1a234 <__assert_fail@plt+0x8f04>
   1a234:	ldr	r0, [pc, #2192]	; 1aacc <__assert_fail@plt+0x979c>
   1a238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a23c:	ldr	r2, [fp, #8]
   1a240:	sdiv	r0, r0, r2
   1a244:	cmp	r1, r0
   1a248:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a24c:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a250:	b	1a254 <__assert_fail@plt+0x8f24>
   1a254:	ldr	r0, [pc, #2164]	; 1aad0 <__assert_fail@plt+0x97a0>
   1a258:	ldr	r1, [fp, #8]
   1a25c:	cmp	r1, r0
   1a260:	blt	1a278 <__assert_fail@plt+0x8f48>
   1a264:	b	1a284 <__assert_fail@plt+0x8f54>
   1a268:	ldr	r0, [fp, #8]
   1a26c:	movw	r1, #0
   1a270:	cmp	r1, r0
   1a274:	bge	1a284 <__assert_fail@plt+0x8f54>
   1a278:	movw	r0, #0
   1a27c:	str	r0, [sp, #140]	; 0x8c
   1a280:	b	1a29c <__assert_fail@plt+0x8f6c>
   1a284:	ldr	r0, [pc, #2112]	; 1aacc <__assert_fail@plt+0x979c>
   1a288:	ldr	r1, [fp, #8]
   1a28c:	movw	r2, #0
   1a290:	sub	r1, r2, r1
   1a294:	sdiv	r0, r0, r1
   1a298:	str	r0, [sp, #140]	; 0x8c
   1a29c:	ldr	r0, [sp, #140]	; 0x8c
   1a2a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2a4:	mvn	r2, #0
   1a2a8:	sub	r1, r2, r1
   1a2ac:	cmp	r0, r1
   1a2b0:	ble	1a3b4 <__assert_fail@plt+0x9084>
   1a2b4:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a2b8:	ldr	r0, [fp, #8]
   1a2bc:	cmn	r0, #1
   1a2c0:	bne	1a308 <__assert_fail@plt+0x8fd8>
   1a2c4:	b	1a2c8 <__assert_fail@plt+0x8f98>
   1a2c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2cc:	add	r0, r0, #-2147483648	; 0x80000000
   1a2d0:	movw	r1, #0
   1a2d4:	cmp	r1, r0
   1a2d8:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a2dc:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a2e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2e4:	movw	r1, #0
   1a2e8:	cmp	r1, r0
   1a2ec:	bge	1a3c8 <__assert_fail@plt+0x9098>
   1a2f0:	ldr	r0, [pc, #2004]	; 1aacc <__assert_fail@plt+0x979c>
   1a2f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2f8:	sub	r1, r1, #1
   1a2fc:	cmp	r0, r1
   1a300:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a304:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a308:	ldr	r0, [pc, #1988]	; 1aad4 <__assert_fail@plt+0x97a4>
   1a30c:	ldr	r1, [fp, #8]
   1a310:	sdiv	r0, r0, r1
   1a314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a318:	cmp	r0, r1
   1a31c:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a320:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a324:	ldr	r0, [fp, #8]
   1a328:	cmp	r0, #0
   1a32c:	bne	1a334 <__assert_fail@plt+0x9004>
   1a330:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a338:	cmp	r0, #0
   1a33c:	bge	1a39c <__assert_fail@plt+0x906c>
   1a340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a344:	cmn	r0, #1
   1a348:	bne	1a380 <__assert_fail@plt+0x9050>
   1a34c:	b	1a350 <__assert_fail@plt+0x9020>
   1a350:	ldr	r0, [fp, #8]
   1a354:	add	r0, r0, #-2147483648	; 0x80000000
   1a358:	movw	r1, #0
   1a35c:	cmp	r1, r0
   1a360:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a364:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a368:	ldr	r0, [pc, #1884]	; 1aacc <__assert_fail@plt+0x979c>
   1a36c:	ldr	r1, [fp, #8]
   1a370:	sub	r1, r1, #1
   1a374:	cmp	r0, r1
   1a378:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a37c:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a380:	ldr	r0, [pc, #1868]	; 1aad4 <__assert_fail@plt+0x97a4>
   1a384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a388:	sdiv	r0, r0, r1
   1a38c:	ldr	r1, [fp, #8]
   1a390:	cmp	r0, r1
   1a394:	blt	1a3b4 <__assert_fail@plt+0x9084>
   1a398:	b	1a3c8 <__assert_fail@plt+0x9098>
   1a39c:	ldr	r0, [pc, #1832]	; 1aacc <__assert_fail@plt+0x979c>
   1a3a0:	ldr	r1, [fp, #8]
   1a3a4:	sdiv	r0, r0, r1
   1a3a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3ac:	cmp	r0, r1
   1a3b0:	bge	1a3c8 <__assert_fail@plt+0x9098>
   1a3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3b8:	ldr	r1, [fp, #8]
   1a3bc:	mul	r0, r0, r1
   1a3c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3c4:	b	1aaa0 <__assert_fail@plt+0x9770>
   1a3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3cc:	ldr	r1, [fp, #8]
   1a3d0:	mul	r0, r0, r1
   1a3d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3d8:	b	1aaa4 <__assert_fail@plt+0x9774>
   1a3dc:	ldr	r0, [fp, #8]
   1a3e0:	cmp	r0, #0
   1a3e4:	bge	1a4f4 <__assert_fail@plt+0x91c4>
   1a3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3ec:	cmp	r0, #0
   1a3f0:	bge	1a47c <__assert_fail@plt+0x914c>
   1a3f4:	b	1a414 <__assert_fail@plt+0x90e4>
   1a3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3fc:	ldr	r1, [fp, #8]
   1a400:	mvn	r2, #0
   1a404:	udiv	r1, r2, r1
   1a408:	cmp	r0, r1
   1a40c:	bcc	1a590 <__assert_fail@plt+0x9260>
   1a410:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a414:	b	1a418 <__assert_fail@plt+0x90e8>
   1a418:	ldr	r0, [pc, #1712]	; 1aad0 <__assert_fail@plt+0x97a0>
   1a41c:	ldr	r1, [fp, #8]
   1a420:	cmp	r1, r0
   1a424:	blt	1a43c <__assert_fail@plt+0x910c>
   1a428:	b	1a448 <__assert_fail@plt+0x9118>
   1a42c:	ldr	r0, [fp, #8]
   1a430:	movw	r1, #0
   1a434:	cmp	r1, r0
   1a438:	bge	1a448 <__assert_fail@plt+0x9118>
   1a43c:	movw	r0, #1
   1a440:	str	r0, [sp, #136]	; 0x88
   1a444:	b	1a460 <__assert_fail@plt+0x9130>
   1a448:	ldr	r0, [fp, #8]
   1a44c:	movw	r1, #0
   1a450:	sub	r0, r1, r0
   1a454:	mvn	r1, #0
   1a458:	udiv	r0, r1, r0
   1a45c:	str	r0, [sp, #136]	; 0x88
   1a460:	ldr	r0, [sp, #136]	; 0x88
   1a464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a468:	mvn	r2, #0
   1a46c:	sub	r1, r2, r1
   1a470:	cmp	r0, r1
   1a474:	bls	1a590 <__assert_fail@plt+0x9260>
   1a478:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a47c:	b	1a480 <__assert_fail@plt+0x9150>
   1a480:	b	1a4d8 <__assert_fail@plt+0x91a8>
   1a484:	b	1a4d8 <__assert_fail@plt+0x91a8>
   1a488:	ldr	r0, [fp, #8]
   1a48c:	cmn	r0, #1
   1a490:	bne	1a4d8 <__assert_fail@plt+0x91a8>
   1a494:	b	1a498 <__assert_fail@plt+0x9168>
   1a498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a49c:	add	r0, r0, #0
   1a4a0:	movw	r1, #0
   1a4a4:	cmp	r1, r0
   1a4a8:	blt	1a590 <__assert_fail@plt+0x9260>
   1a4ac:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4b4:	movw	r1, #0
   1a4b8:	cmp	r1, r0
   1a4bc:	bge	1a5a4 <__assert_fail@plt+0x9274>
   1a4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c4:	sub	r0, r0, #1
   1a4c8:	mvn	r1, #0
   1a4cc:	cmp	r1, r0
   1a4d0:	blt	1a590 <__assert_fail@plt+0x9260>
   1a4d4:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a4d8:	ldr	r0, [fp, #8]
   1a4dc:	movw	r1, #0
   1a4e0:	sdiv	r0, r1, r0
   1a4e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4e8:	cmp	r0, r1
   1a4ec:	blt	1a590 <__assert_fail@plt+0x9260>
   1a4f0:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a4f4:	ldr	r0, [fp, #8]
   1a4f8:	cmp	r0, #0
   1a4fc:	bne	1a504 <__assert_fail@plt+0x91d4>
   1a500:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a508:	cmp	r0, #0
   1a50c:	bge	1a578 <__assert_fail@plt+0x9248>
   1a510:	b	1a514 <__assert_fail@plt+0x91e4>
   1a514:	b	1a55c <__assert_fail@plt+0x922c>
   1a518:	b	1a55c <__assert_fail@plt+0x922c>
   1a51c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a520:	cmn	r0, #1
   1a524:	bne	1a55c <__assert_fail@plt+0x922c>
   1a528:	b	1a52c <__assert_fail@plt+0x91fc>
   1a52c:	ldr	r0, [fp, #8]
   1a530:	add	r0, r0, #0
   1a534:	movw	r1, #0
   1a538:	cmp	r1, r0
   1a53c:	blt	1a590 <__assert_fail@plt+0x9260>
   1a540:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a544:	ldr	r0, [fp, #8]
   1a548:	sub	r0, r0, #1
   1a54c:	mvn	r1, #0
   1a550:	cmp	r1, r0
   1a554:	blt	1a590 <__assert_fail@plt+0x9260>
   1a558:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a560:	movw	r1, #0
   1a564:	sdiv	r0, r1, r0
   1a568:	ldr	r1, [fp, #8]
   1a56c:	cmp	r0, r1
   1a570:	blt	1a590 <__assert_fail@plt+0x9260>
   1a574:	b	1a5a4 <__assert_fail@plt+0x9274>
   1a578:	ldr	r0, [fp, #8]
   1a57c:	mvn	r1, #0
   1a580:	udiv	r0, r1, r0
   1a584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a588:	cmp	r0, r1
   1a58c:	bcs	1a5a4 <__assert_fail@plt+0x9274>
   1a590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a594:	ldr	r1, [fp, #8]
   1a598:	mul	r0, r0, r1
   1a59c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5a0:	b	1aaa0 <__assert_fail@plt+0x9770>
   1a5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5a8:	ldr	r1, [fp, #8]
   1a5ac:	mul	r0, r0, r1
   1a5b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5b4:	b	1aaa4 <__assert_fail@plt+0x9774>
   1a5b8:	b	1a5bc <__assert_fail@plt+0x928c>
   1a5bc:	ldr	r0, [fp, #8]
   1a5c0:	cmp	r0, #0
   1a5c4:	bge	1a74c <__assert_fail@plt+0x941c>
   1a5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5cc:	cmp	r0, #0
   1a5d0:	bge	1a6b8 <__assert_fail@plt+0x9388>
   1a5d4:	b	1a5d8 <__assert_fail@plt+0x92a8>
   1a5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5dc:	ldr	r1, [fp, #8]
   1a5e0:	asr	r3, r1, #31
   1a5e4:	mvn	r2, #0
   1a5e8:	mvn	ip, #-2147483648	; 0x80000000
   1a5ec:	str	r0, [sp, #132]	; 0x84
   1a5f0:	mov	r0, r2
   1a5f4:	str	r1, [sp, #128]	; 0x80
   1a5f8:	mov	r1, ip
   1a5fc:	ldr	r2, [sp, #128]	; 0x80
   1a600:	bl	2142c <__assert_fail@plt+0x100fc>
   1a604:	ldr	r2, [sp, #132]	; 0x84
   1a608:	subs	r0, r2, r0
   1a60c:	rscs	r1, r1, r2, asr #31
   1a610:	str	r0, [sp, #124]	; 0x7c
   1a614:	str	r1, [sp, #120]	; 0x78
   1a618:	blt	1a82c <__assert_fail@plt+0x94fc>
   1a61c:	b	1a840 <__assert_fail@plt+0x9510>
   1a620:	b	1a624 <__assert_fail@plt+0x92f4>
   1a624:	ldr	r0, [pc, #1188]	; 1aad0 <__assert_fail@plt+0x97a0>
   1a628:	ldr	r1, [fp, #8]
   1a62c:	cmp	r1, r0
   1a630:	blt	1a648 <__assert_fail@plt+0x9318>
   1a634:	b	1a65c <__assert_fail@plt+0x932c>
   1a638:	ldr	r0, [fp, #8]
   1a63c:	movw	r1, #0
   1a640:	cmp	r1, r0
   1a644:	bge	1a65c <__assert_fail@plt+0x932c>
   1a648:	mov	r0, #0
   1a64c:	mvn	r1, #0
   1a650:	str	r1, [sp, #116]	; 0x74
   1a654:	str	r0, [sp, #112]	; 0x70
   1a658:	b	1a690 <__assert_fail@plt+0x9360>
   1a65c:	ldr	r0, [fp, #8]
   1a660:	rsb	r0, r0, #0
   1a664:	asr	r3, r0, #31
   1a668:	mvn	r1, #0
   1a66c:	mvn	r2, #-2147483648	; 0x80000000
   1a670:	str	r0, [sp, #108]	; 0x6c
   1a674:	mov	r0, r1
   1a678:	mov	r1, r2
   1a67c:	ldr	r2, [sp, #108]	; 0x6c
   1a680:	bl	2142c <__assert_fail@plt+0x100fc>
   1a684:	str	r0, [sp, #116]	; 0x74
   1a688:	str	r1, [sp, #112]	; 0x70
   1a68c:	b	1a690 <__assert_fail@plt+0x9360>
   1a690:	ldr	r0, [sp, #112]	; 0x70
   1a694:	ldr	r1, [sp, #116]	; 0x74
   1a698:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a69c:	mvn	r2, r2
   1a6a0:	subs	r1, r2, r1
   1a6a4:	rscs	r0, r0, r2, asr #31
   1a6a8:	str	r1, [sp, #104]	; 0x68
   1a6ac:	str	r0, [sp, #100]	; 0x64
   1a6b0:	bge	1a82c <__assert_fail@plt+0x94fc>
   1a6b4:	b	1a840 <__assert_fail@plt+0x9510>
   1a6b8:	ldr	r0, [fp, #8]
   1a6bc:	cmn	r0, #1
   1a6c0:	bne	1a70c <__assert_fail@plt+0x93dc>
   1a6c4:	b	1a6c8 <__assert_fail@plt+0x9398>
   1a6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6cc:	mov	r1, #-2147483648	; 0x80000000
   1a6d0:	add	r1, r1, r0, asr #31
   1a6d4:	rsbs	r0, r0, #0
   1a6d8:	rscs	r1, r1, #0
   1a6dc:	str	r0, [sp, #96]	; 0x60
   1a6e0:	str	r1, [sp, #92]	; 0x5c
   1a6e4:	blt	1a82c <__assert_fail@plt+0x94fc>
   1a6e8:	b	1a840 <__assert_fail@plt+0x9510>
   1a6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6f0:	movw	r1, #0
   1a6f4:	cmp	r1, r0
   1a6f8:	bge	1a840 <__assert_fail@plt+0x9510>
   1a6fc:	mov	r0, #0
   1a700:	cmp	r0, #0
   1a704:	bne	1a82c <__assert_fail@plt+0x94fc>
   1a708:	b	1a840 <__assert_fail@plt+0x9510>
   1a70c:	ldr	r0, [fp, #8]
   1a710:	asr	r3, r0, #31
   1a714:	mov	r1, #0
   1a718:	mov	r2, #-2147483648	; 0x80000000
   1a71c:	str	r0, [sp, #88]	; 0x58
   1a720:	mov	r0, r1
   1a724:	mov	r1, r2
   1a728:	ldr	r2, [sp, #88]	; 0x58
   1a72c:	bl	2142c <__assert_fail@plt+0x100fc>
   1a730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a734:	subs	r0, r0, r2
   1a738:	sbcs	r1, r1, r2, asr #31
   1a73c:	str	r0, [sp, #84]	; 0x54
   1a740:	str	r1, [sp, #80]	; 0x50
   1a744:	blt	1a82c <__assert_fail@plt+0x94fc>
   1a748:	b	1a840 <__assert_fail@plt+0x9510>
   1a74c:	ldr	r0, [fp, #8]
   1a750:	cmp	r0, #0
   1a754:	bne	1a75c <__assert_fail@plt+0x942c>
   1a758:	b	1a840 <__assert_fail@plt+0x9510>
   1a75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a760:	cmp	r0, #0
   1a764:	bge	1a7ec <__assert_fail@plt+0x94bc>
   1a768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a76c:	cmn	r0, #1
   1a770:	bne	1a7ac <__assert_fail@plt+0x947c>
   1a774:	b	1a778 <__assert_fail@plt+0x9448>
   1a778:	ldr	r0, [fp, #8]
   1a77c:	mov	r1, #-2147483648	; 0x80000000
   1a780:	add	r1, r1, r0, asr #31
   1a784:	rsbs	r0, r0, #0
   1a788:	rscs	r1, r1, #0
   1a78c:	str	r0, [sp, #76]	; 0x4c
   1a790:	str	r1, [sp, #72]	; 0x48
   1a794:	blt	1a82c <__assert_fail@plt+0x94fc>
   1a798:	b	1a840 <__assert_fail@plt+0x9510>
   1a79c:	mov	r0, #0
   1a7a0:	cmp	r0, #0
   1a7a4:	bne	1a82c <__assert_fail@plt+0x94fc>
   1a7a8:	b	1a840 <__assert_fail@plt+0x9510>
   1a7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7b0:	asr	r3, r0, #31
   1a7b4:	mov	r1, #0
   1a7b8:	mov	r2, #-2147483648	; 0x80000000
   1a7bc:	str	r0, [sp, #68]	; 0x44
   1a7c0:	mov	r0, r1
   1a7c4:	mov	r1, r2
   1a7c8:	ldr	r2, [sp, #68]	; 0x44
   1a7cc:	bl	2142c <__assert_fail@plt+0x100fc>
   1a7d0:	ldr	r2, [fp, #8]
   1a7d4:	subs	r0, r0, r2
   1a7d8:	sbcs	r1, r1, r2, asr #31
   1a7dc:	str	r0, [sp, #64]	; 0x40
   1a7e0:	str	r1, [sp, #60]	; 0x3c
   1a7e4:	blt	1a82c <__assert_fail@plt+0x94fc>
   1a7e8:	b	1a840 <__assert_fail@plt+0x9510>
   1a7ec:	ldr	r0, [fp, #8]
   1a7f0:	asr	r3, r0, #31
   1a7f4:	mvn	r1, #0
   1a7f8:	mvn	r2, #-2147483648	; 0x80000000
   1a7fc:	str	r0, [sp, #56]	; 0x38
   1a800:	mov	r0, r1
   1a804:	mov	r1, r2
   1a808:	ldr	r2, [sp, #56]	; 0x38
   1a80c:	bl	2142c <__assert_fail@plt+0x100fc>
   1a810:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a814:	subs	r0, r0, r2
   1a818:	sbcs	r1, r1, r2, asr #31
   1a81c:	str	r0, [sp, #52]	; 0x34
   1a820:	str	r1, [sp, #48]	; 0x30
   1a824:	bge	1a840 <__assert_fail@plt+0x9510>
   1a828:	b	1a82c <__assert_fail@plt+0x94fc>
   1a82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a830:	ldr	r1, [fp, #8]
   1a834:	mul	r0, r0, r1
   1a838:	str	r0, [fp, #-28]	; 0xffffffe4
   1a83c:	b	1aaa0 <__assert_fail@plt+0x9770>
   1a840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a844:	ldr	r1, [fp, #8]
   1a848:	mul	r0, r0, r1
   1a84c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a850:	b	1aaa4 <__assert_fail@plt+0x9774>
   1a854:	ldr	r0, [fp, #8]
   1a858:	cmp	r0, #0
   1a85c:	bge	1a9bc <__assert_fail@plt+0x968c>
   1a860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a864:	cmp	r0, #0
   1a868:	bge	1a944 <__assert_fail@plt+0x9614>
   1a86c:	b	1a8b4 <__assert_fail@plt+0x9584>
   1a870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a874:	ldr	r1, [fp, #8]
   1a878:	asr	r3, r1, #31
   1a87c:	mvn	r2, #0
   1a880:	str	r0, [sp, #44]	; 0x2c
   1a884:	mov	r0, r2
   1a888:	str	r1, [sp, #40]	; 0x28
   1a88c:	mov	r1, r2
   1a890:	ldr	r2, [sp, #40]	; 0x28
   1a894:	bl	21500 <__assert_fail@plt+0x101d0>
   1a898:	ldr	r2, [sp, #44]	; 0x2c
   1a89c:	subs	r0, r2, r0
   1a8a0:	rscs	r1, r1, r2, asr #31
   1a8a4:	str	r0, [sp, #36]	; 0x24
   1a8a8:	str	r1, [sp, #32]
   1a8ac:	bcc	1aa78 <__assert_fail@plt+0x9748>
   1a8b0:	b	1aa8c <__assert_fail@plt+0x975c>
   1a8b4:	b	1a8b8 <__assert_fail@plt+0x9588>
   1a8b8:	ldr	r0, [pc, #528]	; 1aad0 <__assert_fail@plt+0x97a0>
   1a8bc:	ldr	r1, [fp, #8]
   1a8c0:	cmp	r1, r0
   1a8c4:	blt	1a8dc <__assert_fail@plt+0x95ac>
   1a8c8:	b	1a8f0 <__assert_fail@plt+0x95c0>
   1a8cc:	ldr	r0, [fp, #8]
   1a8d0:	movw	r1, #0
   1a8d4:	cmp	r1, r0
   1a8d8:	bge	1a8f0 <__assert_fail@plt+0x95c0>
   1a8dc:	mov	r0, #1
   1a8e0:	mvn	r1, #0
   1a8e4:	str	r1, [sp, #28]
   1a8e8:	str	r0, [sp, #24]
   1a8ec:	b	1a91c <__assert_fail@plt+0x95ec>
   1a8f0:	ldr	r0, [fp, #8]
   1a8f4:	rsb	r0, r0, #0
   1a8f8:	asr	r3, r0, #31
   1a8fc:	mvn	r1, #0
   1a900:	str	r0, [sp, #20]
   1a904:	mov	r0, r1
   1a908:	ldr	r2, [sp, #20]
   1a90c:	bl	21500 <__assert_fail@plt+0x101d0>
   1a910:	str	r0, [sp, #28]
   1a914:	str	r1, [sp, #24]
   1a918:	b	1a91c <__assert_fail@plt+0x95ec>
   1a91c:	ldr	r0, [sp, #24]
   1a920:	ldr	r1, [sp, #28]
   1a924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a928:	mvn	r2, r2
   1a92c:	subs	r1, r2, r1
   1a930:	rscs	r0, r0, r2, asr #31
   1a934:	str	r1, [sp, #16]
   1a938:	str	r0, [sp, #12]
   1a93c:	bcs	1aa78 <__assert_fail@plt+0x9748>
   1a940:	b	1aa8c <__assert_fail@plt+0x975c>
   1a944:	b	1a948 <__assert_fail@plt+0x9618>
   1a948:	b	1a9a0 <__assert_fail@plt+0x9670>
   1a94c:	b	1a9a0 <__assert_fail@plt+0x9670>
   1a950:	ldr	r0, [fp, #8]
   1a954:	cmn	r0, #1
   1a958:	bne	1a9a0 <__assert_fail@plt+0x9670>
   1a95c:	b	1a960 <__assert_fail@plt+0x9630>
   1a960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a964:	add	r0, r0, #0
   1a968:	movw	r1, #0
   1a96c:	cmp	r1, r0
   1a970:	blt	1aa78 <__assert_fail@plt+0x9748>
   1a974:	b	1aa8c <__assert_fail@plt+0x975c>
   1a978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a97c:	movw	r1, #0
   1a980:	cmp	r1, r0
   1a984:	bge	1aa8c <__assert_fail@plt+0x975c>
   1a988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a98c:	sub	r0, r0, #1
   1a990:	mvn	r1, #0
   1a994:	cmp	r1, r0
   1a998:	blt	1aa78 <__assert_fail@plt+0x9748>
   1a99c:	b	1aa8c <__assert_fail@plt+0x975c>
   1a9a0:	ldr	r0, [fp, #8]
   1a9a4:	movw	r1, #0
   1a9a8:	sdiv	r0, r1, r0
   1a9ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9b0:	cmp	r0, r1
   1a9b4:	blt	1aa78 <__assert_fail@plt+0x9748>
   1a9b8:	b	1aa8c <__assert_fail@plt+0x975c>
   1a9bc:	ldr	r0, [fp, #8]
   1a9c0:	cmp	r0, #0
   1a9c4:	bne	1a9cc <__assert_fail@plt+0x969c>
   1a9c8:	b	1aa8c <__assert_fail@plt+0x975c>
   1a9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9d0:	cmp	r0, #0
   1a9d4:	bge	1aa40 <__assert_fail@plt+0x9710>
   1a9d8:	b	1a9dc <__assert_fail@plt+0x96ac>
   1a9dc:	b	1aa24 <__assert_fail@plt+0x96f4>
   1a9e0:	b	1aa24 <__assert_fail@plt+0x96f4>
   1a9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9e8:	cmn	r0, #1
   1a9ec:	bne	1aa24 <__assert_fail@plt+0x96f4>
   1a9f0:	b	1a9f4 <__assert_fail@plt+0x96c4>
   1a9f4:	ldr	r0, [fp, #8]
   1a9f8:	add	r0, r0, #0
   1a9fc:	movw	r1, #0
   1aa00:	cmp	r1, r0
   1aa04:	blt	1aa78 <__assert_fail@plt+0x9748>
   1aa08:	b	1aa8c <__assert_fail@plt+0x975c>
   1aa0c:	ldr	r0, [fp, #8]
   1aa10:	sub	r0, r0, #1
   1aa14:	mvn	r1, #0
   1aa18:	cmp	r1, r0
   1aa1c:	blt	1aa78 <__assert_fail@plt+0x9748>
   1aa20:	b	1aa8c <__assert_fail@plt+0x975c>
   1aa24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa28:	movw	r1, #0
   1aa2c:	sdiv	r0, r1, r0
   1aa30:	ldr	r1, [fp, #8]
   1aa34:	cmp	r0, r1
   1aa38:	blt	1aa78 <__assert_fail@plt+0x9748>
   1aa3c:	b	1aa8c <__assert_fail@plt+0x975c>
   1aa40:	ldr	r0, [fp, #8]
   1aa44:	asr	r3, r0, #31
   1aa48:	mvn	r1, #0
   1aa4c:	str	r0, [sp, #8]
   1aa50:	mov	r0, r1
   1aa54:	ldr	r2, [sp, #8]
   1aa58:	bl	21500 <__assert_fail@plt+0x101d0>
   1aa5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aa60:	subs	r0, r0, r2
   1aa64:	sbcs	r1, r1, r2, asr #31
   1aa68:	str	r0, [sp, #4]
   1aa6c:	str	r1, [sp]
   1aa70:	bcs	1aa8c <__assert_fail@plt+0x975c>
   1aa74:	b	1aa78 <__assert_fail@plt+0x9748>
   1aa78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa7c:	ldr	r1, [fp, #8]
   1aa80:	mul	r0, r0, r1
   1aa84:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa88:	b	1aaa0 <__assert_fail@plt+0x9770>
   1aa8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa90:	ldr	r1, [fp, #8]
   1aa94:	mul	r0, r0, r1
   1aa98:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa9c:	b	1aaa4 <__assert_fail@plt+0x9774>
   1aaa0:	bl	1ac7c <__assert_fail@plt+0x994c>
   1aaa4:	ldr	r0, [fp, #-4]
   1aaa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aaac:	bl	17f38 <__assert_fail@plt+0x6c08>
   1aab0:	str	r0, [fp, #-4]
   1aab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aab8:	ldr	r1, [fp, #-8]
   1aabc:	str	r0, [r1]
   1aac0:	ldr	r0, [fp, #-4]
   1aac4:	mov	sp, fp
   1aac8:	pop	{fp, pc}
   1aacc:	svcvc	0x00ffffff
   1aad0:	andhi	r0, r0, r1
   1aad4:	andhi	r0, r0, r0
   1aad8:			; <UNDEFINED> instruction: 0xffff8000
   1aadc:	push	{fp, lr}
   1aae0:	mov	fp, sp
   1aae4:	sub	sp, sp, #8
   1aae8:	str	r0, [sp, #4]
   1aaec:	ldr	r0, [sp, #4]
   1aaf0:	movw	r1, #1
   1aaf4:	bl	1ab00 <__assert_fail@plt+0x97d0>
   1aaf8:	mov	sp, fp
   1aafc:	pop	{fp, pc}
   1ab00:	push	{fp, lr}
   1ab04:	mov	fp, sp
   1ab08:	sub	sp, sp, #8
   1ab0c:	str	r0, [sp, #4]
   1ab10:	str	r1, [sp]
   1ab14:	ldr	r0, [sp, #4]
   1ab18:	ldr	r1, [sp]
   1ab1c:	bl	1edbc <__assert_fail@plt+0xda8c>
   1ab20:	bl	17ec4 <__assert_fail@plt+0x6b94>
   1ab24:	mov	sp, fp
   1ab28:	pop	{fp, pc}
   1ab2c:	push	{fp, lr}
   1ab30:	mov	fp, sp
   1ab34:	sub	sp, sp, #8
   1ab38:	str	r0, [sp, #4]
   1ab3c:	ldr	r0, [sp, #4]
   1ab40:	movw	r1, #1
   1ab44:	bl	1ab50 <__assert_fail@plt+0x9820>
   1ab48:	mov	sp, fp
   1ab4c:	pop	{fp, pc}
   1ab50:	push	{fp, lr}
   1ab54:	mov	fp, sp
   1ab58:	sub	sp, sp, #8
   1ab5c:	str	r0, [sp, #4]
   1ab60:	str	r1, [sp]
   1ab64:	ldr	r0, [sp, #4]
   1ab68:	ldr	r1, [sp]
   1ab6c:	bl	1f598 <__assert_fail@plt+0xe268>
   1ab70:	bl	17ec4 <__assert_fail@plt+0x6b94>
   1ab74:	mov	sp, fp
   1ab78:	pop	{fp, pc}
   1ab7c:	push	{fp, lr}
   1ab80:	mov	fp, sp
   1ab84:	sub	sp, sp, #16
   1ab88:	str	r0, [fp, #-4]
   1ab8c:	str	r1, [sp, #8]
   1ab90:	ldr	r0, [sp, #8]
   1ab94:	bl	17ea0 <__assert_fail@plt+0x6b70>
   1ab98:	ldr	r1, [fp, #-4]
   1ab9c:	ldr	r2, [sp, #8]
   1aba0:	str	r0, [sp, #4]
   1aba4:	bl	110e4 <memcpy@plt>
   1aba8:	ldr	r0, [sp, #4]
   1abac:	mov	sp, fp
   1abb0:	pop	{fp, pc}
   1abb4:	push	{fp, lr}
   1abb8:	mov	fp, sp
   1abbc:	sub	sp, sp, #16
   1abc0:	str	r0, [fp, #-4]
   1abc4:	str	r1, [sp, #8]
   1abc8:	ldr	r0, [sp, #8]
   1abcc:	bl	17ef4 <__assert_fail@plt+0x6bc4>
   1abd0:	ldr	r1, [fp, #-4]
   1abd4:	ldr	r2, [sp, #8]
   1abd8:	str	r0, [sp, #4]
   1abdc:	bl	110e4 <memcpy@plt>
   1abe0:	ldr	r0, [sp, #4]
   1abe4:	mov	sp, fp
   1abe8:	pop	{fp, pc}
   1abec:	push	{fp, lr}
   1abf0:	mov	fp, sp
   1abf4:	sub	sp, sp, #16
   1abf8:	str	r0, [fp, #-4]
   1abfc:	str	r1, [sp, #8]
   1ac00:	ldr	r0, [sp, #8]
   1ac04:	add	r0, r0, #1
   1ac08:	bl	17ef4 <__assert_fail@plt+0x6bc4>
   1ac0c:	str	r0, [sp, #4]
   1ac10:	ldr	r0, [sp, #4]
   1ac14:	ldr	r1, [sp, #8]
   1ac18:	add	r0, r0, r1
   1ac1c:	movw	r1, #0
   1ac20:	strb	r1, [r0]
   1ac24:	ldr	r0, [sp, #4]
   1ac28:	ldr	r1, [fp, #-4]
   1ac2c:	ldr	r2, [sp, #8]
   1ac30:	str	r0, [sp]
   1ac34:	bl	110e4 <memcpy@plt>
   1ac38:	ldr	r0, [sp]
   1ac3c:	mov	sp, fp
   1ac40:	pop	{fp, pc}
   1ac44:	push	{fp, lr}
   1ac48:	mov	fp, sp
   1ac4c:	sub	sp, sp, #8
   1ac50:	str	r0, [sp, #4]
   1ac54:	ldr	r0, [sp, #4]
   1ac58:	ldr	r1, [sp, #4]
   1ac5c:	str	r0, [sp]
   1ac60:	mov	r0, r1
   1ac64:	bl	11204 <strlen@plt>
   1ac68:	add	r1, r0, #1
   1ac6c:	ldr	r0, [sp]
   1ac70:	bl	1ab7c <__assert_fail@plt+0x984c>
   1ac74:	mov	sp, fp
   1ac78:	pop	{fp, pc}
   1ac7c:	push	{fp, lr}
   1ac80:	mov	fp, sp
   1ac84:	sub	sp, sp, #8
   1ac88:	movw	r0, #12576	; 0x3120
   1ac8c:	movt	r0, #3
   1ac90:	ldr	r0, [r0]
   1ac94:	movw	r1, #10384	; 0x2890
   1ac98:	movt	r1, #2
   1ac9c:	str	r0, [sp, #4]
   1aca0:	mov	r0, r1
   1aca4:	bl	111ec <gettext@plt>
   1aca8:	ldr	r1, [sp, #4]
   1acac:	str	r0, [sp]
   1acb0:	mov	r0, r1
   1acb4:	movw	r1, #0
   1acb8:	movw	r2, #8946	; 0x22f2
   1acbc:	movt	r2, #2
   1acc0:	ldr	r3, [sp]
   1acc4:	bl	11180 <error@plt>
   1acc8:	bl	11300 <abort@plt>
   1accc:	push	{fp, lr}
   1acd0:	mov	fp, sp
   1acd4:	sub	sp, sp, #32
   1acd8:	str	r0, [fp, #-4]
   1acdc:	str	r1, [fp, #-8]
   1ace0:	str	r2, [fp, #-12]
   1ace4:	str	r3, [sp, #16]
   1ace8:	ldr	r0, [fp, #-4]
   1acec:	ldr	r1, [fp, #-8]
   1acf0:	ldr	r2, [fp, #-12]
   1acf4:	ldr	r3, [sp, #16]
   1acf8:	bl	1f7b4 <__assert_fail@plt+0xe484>
   1acfc:	str	r0, [sp, #12]
   1ad00:	bl	11228 <__errno_location@plt>
   1ad04:	ldr	r0, [r0]
   1ad08:	str	r0, [sp, #8]
   1ad0c:	ldr	r0, [sp, #8]
   1ad10:	cmp	r0, #0
   1ad14:	beq	1ad34 <__assert_fail@plt+0x9a04>
   1ad18:	ldr	r0, [sp, #8]
   1ad1c:	ldr	r1, [fp, #-4]
   1ad20:	ldr	r2, [fp, #-8]
   1ad24:	ldr	r3, [fp, #-12]
   1ad28:	ldr	ip, [sp, #16]
   1ad2c:	str	ip, [sp]
   1ad30:	bl	1ad40 <__assert_fail@plt+0x9a10>
   1ad34:	ldr	r0, [sp, #12]
   1ad38:	mov	sp, fp
   1ad3c:	pop	{fp, pc}
   1ad40:	push	{fp, lr}
   1ad44:	mov	fp, sp
   1ad48:	sub	sp, sp, #56	; 0x38
   1ad4c:	ldr	ip, [fp, #8]
   1ad50:	str	r0, [fp, #-4]
   1ad54:	str	r1, [fp, #-8]
   1ad58:	str	r2, [fp, #-12]
   1ad5c:	str	r3, [fp, #-16]
   1ad60:	ldr	r1, [fp, #-4]
   1ad64:	movw	r0, #10401	; 0x28a1
   1ad68:	movt	r0, #2
   1ad6c:	str	ip, [fp, #-20]	; 0xffffffec
   1ad70:	str	r1, [fp, #-24]	; 0xffffffe8
   1ad74:	bl	111ec <gettext@plt>
   1ad78:	movw	r1, #0
   1ad7c:	str	r0, [sp, #28]
   1ad80:	mov	r0, r1
   1ad84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad88:	ldr	r2, [sp, #28]
   1ad8c:	bl	11180 <error@plt>
   1ad90:	movw	r0, #10426	; 0x28ba
   1ad94:	movt	r0, #2
   1ad98:	bl	111ec <gettext@plt>
   1ad9c:	movw	r1, #0
   1ada0:	str	r0, [sp, #24]
   1ada4:	mov	r0, r1
   1ada8:	ldr	r2, [sp, #24]
   1adac:	bl	11180 <error@plt>
   1adb0:	movw	r0, #12576	; 0x3120
   1adb4:	movt	r0, #3
   1adb8:	ldr	r0, [r0]
   1adbc:	movw	r1, #10469	; 0x28e5
   1adc0:	movt	r1, #2
   1adc4:	str	r0, [sp, #20]
   1adc8:	mov	r0, r1
   1adcc:	bl	111ec <gettext@plt>
   1add0:	ldr	r2, [fp, #-8]
   1add4:	ldr	r3, [fp, #-12]
   1add8:	movw	r1, #0
   1addc:	str	r0, [sp, #16]
   1ade0:	mov	r0, r1
   1ade4:	movw	r1, #8
   1ade8:	bl	16ef4 <__assert_fail@plt+0x5bc4>
   1adec:	ldr	r2, [fp, #-16]
   1adf0:	ldr	r3, [fp, #8]
   1adf4:	movw	r1, #1
   1adf8:	str	r0, [sp, #12]
   1adfc:	mov	r0, r1
   1ae00:	movw	r1, #8
   1ae04:	bl	16ef4 <__assert_fail@plt+0x5bc4>
   1ae08:	ldr	r1, [sp, #20]
   1ae0c:	str	r0, [sp, #8]
   1ae10:	mov	r0, r1
   1ae14:	movw	r1, #0
   1ae18:	ldr	r2, [sp, #16]
   1ae1c:	ldr	r3, [sp, #12]
   1ae20:	ldr	ip, [sp, #8]
   1ae24:	str	ip, [sp]
   1ae28:	bl	11180 <error@plt>
   1ae2c:	mov	sp, fp
   1ae30:	pop	{fp, pc}
   1ae34:	push	{fp, lr}
   1ae38:	mov	fp, sp
   1ae3c:	sub	sp, sp, #32
   1ae40:	str	r0, [fp, #-4]
   1ae44:	str	r1, [fp, #-8]
   1ae48:	str	r2, [fp, #-12]
   1ae4c:	str	r3, [sp, #16]
   1ae50:	ldr	r0, [fp, #-4]
   1ae54:	ldr	r1, [fp, #-8]
   1ae58:	ldr	r2, [fp, #-12]
   1ae5c:	ldr	r3, [sp, #16]
   1ae60:	bl	1f9e0 <__assert_fail@plt+0xe6b0>
   1ae64:	str	r0, [sp, #12]
   1ae68:	bl	11228 <__errno_location@plt>
   1ae6c:	ldr	r0, [r0]
   1ae70:	str	r0, [sp, #8]
   1ae74:	ldr	r0, [sp, #8]
   1ae78:	cmp	r0, #0
   1ae7c:	beq	1aea4 <__assert_fail@plt+0x9b74>
   1ae80:	ldr	r0, [sp, #8]
   1ae84:	ldr	r1, [fp, #-4]
   1ae88:	ldr	r2, [fp, #-8]
   1ae8c:	sub	r2, r2, #1
   1ae90:	ldr	r3, [fp, #-12]
   1ae94:	ldr	ip, [sp, #16]
   1ae98:	sub	ip, ip, #1
   1ae9c:	str	ip, [sp]
   1aea0:	bl	1ad40 <__assert_fail@plt+0x9a10>
   1aea4:	ldr	r0, [sp, #12]
   1aea8:	mov	sp, fp
   1aeac:	pop	{fp, pc}
   1aeb0:	push	{fp, lr}
   1aeb4:	mov	fp, sp
   1aeb8:	sub	sp, sp, #80	; 0x50
   1aebc:	ldr	ip, [fp, #8]
   1aec0:	str	r0, [fp, #-8]
   1aec4:	str	r1, [fp, #-12]
   1aec8:	str	r2, [fp, #-16]
   1aecc:	str	r3, [fp, #-20]	; 0xffffffec
   1aed0:	movw	r0, #0
   1aed4:	str	r0, [fp, #-36]	; 0xffffffdc
   1aed8:	ldr	r1, [fp, #-16]
   1aedc:	cmp	r0, r1
   1aee0:	str	ip, [sp, #20]
   1aee4:	bgt	1aef8 <__assert_fail@plt+0x9bc8>
   1aee8:	ldr	r0, [fp, #-16]
   1aeec:	cmp	r0, #36	; 0x24
   1aef0:	bgt	1aef8 <__assert_fail@plt+0x9bc8>
   1aef4:	b	1af18 <__assert_fail@plt+0x9be8>
   1aef8:	movw	r0, #10506	; 0x290a
   1aefc:	movt	r0, #2
   1af00:	movw	r1, #10544	; 0x2930
   1af04:	movt	r1, #2
   1af08:	movw	r2, #85	; 0x55
   1af0c:	movw	r3, #10560	; 0x2940
   1af10:	movt	r3, #2
   1af14:	bl	11330 <__assert_fail@plt>
   1af18:	ldr	r0, [fp, #-12]
   1af1c:	movw	r1, #0
   1af20:	cmp	r0, r1
   1af24:	beq	1af34 <__assert_fail@plt+0x9c04>
   1af28:	ldr	r0, [fp, #-12]
   1af2c:	str	r0, [sp, #16]
   1af30:	b	1af40 <__assert_fail@plt+0x9c10>
   1af34:	sub	r0, fp, #24
   1af38:	str	r0, [sp, #16]
   1af3c:	b	1af40 <__assert_fail@plt+0x9c10>
   1af40:	ldr	r0, [sp, #16]
   1af44:	str	r0, [fp, #-28]	; 0xffffffe4
   1af48:	bl	11228 <__errno_location@plt>
   1af4c:	movw	lr, #0
   1af50:	str	lr, [r0]
   1af54:	ldr	r0, [fp, #-8]
   1af58:	str	r0, [sp, #40]	; 0x28
   1af5c:	ldr	r0, [sp, #40]	; 0x28
   1af60:	ldrb	r0, [r0]
   1af64:	strb	r0, [sp, #39]	; 0x27
   1af68:	bl	111d4 <__ctype_b_loc@plt>
   1af6c:	ldr	r0, [r0]
   1af70:	ldrb	lr, [sp, #39]	; 0x27
   1af74:	mov	r1, lr
   1af78:	add	r0, r0, lr, lsl #1
   1af7c:	ldrh	r0, [r0]
   1af80:	and	r0, r0, #8192	; 0x2000
   1af84:	cmp	r0, #0
   1af88:	str	r1, [sp, #12]
   1af8c:	beq	1afa8 <__assert_fail@plt+0x9c78>
   1af90:	ldr	r0, [sp, #40]	; 0x28
   1af94:	add	r1, r0, #1
   1af98:	str	r1, [sp, #40]	; 0x28
   1af9c:	ldrb	r0, [r0, #1]
   1afa0:	strb	r0, [sp, #39]	; 0x27
   1afa4:	b	1af68 <__assert_fail@plt+0x9c38>
   1afa8:	ldrb	r0, [sp, #39]	; 0x27
   1afac:	cmp	r0, #45	; 0x2d
   1afb0:	bne	1afc0 <__assert_fail@plt+0x9c90>
   1afb4:	movw	r0, #4
   1afb8:	str	r0, [fp, #-4]
   1afbc:	b	1b510 <__assert_fail@plt+0xa1e0>
   1afc0:	ldr	r0, [fp, #-8]
   1afc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afc8:	ldr	r2, [fp, #-16]
   1afcc:	bl	111f8 <strtoul@plt>
   1afd0:	str	r0, [fp, #-32]	; 0xffffffe0
   1afd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1afd8:	ldr	r0, [r0]
   1afdc:	ldr	r1, [fp, #-8]
   1afe0:	cmp	r0, r1
   1afe4:	bne	1b048 <__assert_fail@plt+0x9d18>
   1afe8:	ldr	r0, [fp, #8]
   1afec:	movw	r1, #0
   1aff0:	cmp	r0, r1
   1aff4:	beq	1b038 <__assert_fail@plt+0x9d08>
   1aff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1affc:	ldr	r0, [r0]
   1b000:	ldrb	r0, [r0]
   1b004:	cmp	r0, #0
   1b008:	beq	1b038 <__assert_fail@plt+0x9d08>
   1b00c:	ldr	r0, [fp, #8]
   1b010:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b014:	ldr	r1, [r1]
   1b018:	ldrb	r1, [r1]
   1b01c:	bl	11210 <strchr@plt>
   1b020:	movw	r1, #0
   1b024:	cmp	r0, r1
   1b028:	beq	1b038 <__assert_fail@plt+0x9d08>
   1b02c:	movw	r0, #1
   1b030:	str	r0, [fp, #-32]	; 0xffffffe0
   1b034:	b	1b044 <__assert_fail@plt+0x9d14>
   1b038:	movw	r0, #4
   1b03c:	str	r0, [fp, #-4]
   1b040:	b	1b510 <__assert_fail@plt+0xa1e0>
   1b044:	b	1b080 <__assert_fail@plt+0x9d50>
   1b048:	bl	11228 <__errno_location@plt>
   1b04c:	ldr	r0, [r0]
   1b050:	cmp	r0, #0
   1b054:	beq	1b07c <__assert_fail@plt+0x9d4c>
   1b058:	bl	11228 <__errno_location@plt>
   1b05c:	ldr	r0, [r0]
   1b060:	cmp	r0, #34	; 0x22
   1b064:	beq	1b074 <__assert_fail@plt+0x9d44>
   1b068:	movw	r0, #4
   1b06c:	str	r0, [fp, #-4]
   1b070:	b	1b510 <__assert_fail@plt+0xa1e0>
   1b074:	movw	r0, #1
   1b078:	str	r0, [fp, #-36]	; 0xffffffdc
   1b07c:	b	1b080 <__assert_fail@plt+0x9d50>
   1b080:	ldr	r0, [fp, #8]
   1b084:	movw	r1, #0
   1b088:	cmp	r0, r1
   1b08c:	bne	1b0a8 <__assert_fail@plt+0x9d78>
   1b090:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b094:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b098:	str	r0, [r1]
   1b09c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0a0:	str	r0, [fp, #-4]
   1b0a4:	b	1b510 <__assert_fail@plt+0xa1e0>
   1b0a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0ac:	ldr	r0, [r0]
   1b0b0:	ldrb	r0, [r0]
   1b0b4:	cmp	r0, #0
   1b0b8:	beq	1b4fc <__assert_fail@plt+0xa1cc>
   1b0bc:	movw	r0, #1024	; 0x400
   1b0c0:	str	r0, [sp, #32]
   1b0c4:	movw	r0, #1
   1b0c8:	str	r0, [sp, #28]
   1b0cc:	ldr	r0, [fp, #8]
   1b0d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0d4:	ldr	r1, [r1]
   1b0d8:	ldrb	r1, [r1]
   1b0dc:	bl	11210 <strchr@plt>
   1b0e0:	movw	r1, #0
   1b0e4:	cmp	r0, r1
   1b0e8:	bne	1b108 <__assert_fail@plt+0x9dd8>
   1b0ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b0f4:	str	r0, [r1]
   1b0f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0fc:	orr	r0, r0, #2
   1b100:	str	r0, [fp, #-4]
   1b104:	b	1b510 <__assert_fail@plt+0xa1e0>
   1b108:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b10c:	ldr	r0, [r0]
   1b110:	ldrb	r0, [r0]
   1b114:	sub	r0, r0, #69	; 0x45
   1b118:	cmp	r0, #47	; 0x2f
   1b11c:	str	r0, [sp, #8]
   1b120:	bhi	1b28c <__assert_fail@plt+0x9f5c>
   1b124:	add	r0, pc, #8
   1b128:	ldr	r1, [sp, #8]
   1b12c:	ldr	r0, [r0, r1, lsl #2]
   1b130:	mov	pc, r0
   1b134:	strdeq	fp, [r1], -r4
   1b138:	andeq	fp, r1, ip, lsl #5
   1b13c:	strdeq	fp, [r1], -r4
   1b140:	andeq	fp, r1, ip, lsl #5
   1b144:	andeq	fp, r1, ip, lsl #5
   1b148:	andeq	fp, r1, ip, lsl #5
   1b14c:	strdeq	fp, [r1], -r4
   1b150:	andeq	fp, r1, ip, lsl #5
   1b154:	strdeq	fp, [r1], -r4
   1b158:	andeq	fp, r1, ip, lsl #5
   1b15c:	andeq	fp, r1, ip, lsl #5
   1b160:	strdeq	fp, [r1], -r4
   1b164:	andeq	fp, r1, ip, lsl #5
   1b168:	andeq	fp, r1, ip, lsl #5
   1b16c:	andeq	fp, r1, ip, lsl #5
   1b170:	strdeq	fp, [r1], -r4
   1b174:	andeq	fp, r1, ip, lsl #5
   1b178:	andeq	fp, r1, ip, lsl #5
   1b17c:	andeq	fp, r1, ip, lsl #5
   1b180:	andeq	fp, r1, ip, lsl #5
   1b184:	strdeq	fp, [r1], -r4
   1b188:	strdeq	fp, [r1], -r4
   1b18c:	andeq	fp, r1, ip, lsl #5
   1b190:	andeq	fp, r1, ip, lsl #5
   1b194:	andeq	fp, r1, ip, lsl #5
   1b198:	andeq	fp, r1, ip, lsl #5
   1b19c:	andeq	fp, r1, ip, lsl #5
   1b1a0:	andeq	fp, r1, ip, lsl #5
   1b1a4:	andeq	fp, r1, ip, lsl #5
   1b1a8:	andeq	fp, r1, ip, lsl #5
   1b1ac:	andeq	fp, r1, ip, lsl #5
   1b1b0:	andeq	fp, r1, ip, lsl #5
   1b1b4:	andeq	fp, r1, ip, lsl #5
   1b1b8:	andeq	fp, r1, ip, lsl #5
   1b1bc:	strdeq	fp, [r1], -r4
   1b1c0:	andeq	fp, r1, ip, lsl #5
   1b1c4:	andeq	fp, r1, ip, lsl #5
   1b1c8:	andeq	fp, r1, ip, lsl #5
   1b1cc:	strdeq	fp, [r1], -r4
   1b1d0:	andeq	fp, r1, ip, lsl #5
   1b1d4:	strdeq	fp, [r1], -r4
   1b1d8:	andeq	fp, r1, ip, lsl #5
   1b1dc:	andeq	fp, r1, ip, lsl #5
   1b1e0:	andeq	fp, r1, ip, lsl #5
   1b1e4:	andeq	fp, r1, ip, lsl #5
   1b1e8:	andeq	fp, r1, ip, lsl #5
   1b1ec:	andeq	fp, r1, ip, lsl #5
   1b1f0:	strdeq	fp, [r1], -r4
   1b1f4:	ldr	r0, [fp, #8]
   1b1f8:	movw	r1, #48	; 0x30
   1b1fc:	bl	11210 <strchr@plt>
   1b200:	movw	r1, #0
   1b204:	cmp	r0, r1
   1b208:	beq	1b288 <__assert_fail@plt+0x9f58>
   1b20c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b210:	ldr	r0, [r0]
   1b214:	ldrb	r0, [r0, #1]
   1b218:	mov	r1, r0
   1b21c:	cmp	r0, #66	; 0x42
   1b220:	str	r1, [sp, #4]
   1b224:	beq	1b270 <__assert_fail@plt+0x9f40>
   1b228:	b	1b22c <__assert_fail@plt+0x9efc>
   1b22c:	ldr	r0, [sp, #4]
   1b230:	cmp	r0, #68	; 0x44
   1b234:	beq	1b270 <__assert_fail@plt+0x9f40>
   1b238:	b	1b23c <__assert_fail@plt+0x9f0c>
   1b23c:	ldr	r0, [sp, #4]
   1b240:	cmp	r0, #105	; 0x69
   1b244:	bne	1b284 <__assert_fail@plt+0x9f54>
   1b248:	b	1b24c <__assert_fail@plt+0x9f1c>
   1b24c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b250:	ldr	r0, [r0]
   1b254:	ldrb	r0, [r0, #2]
   1b258:	cmp	r0, #66	; 0x42
   1b25c:	bne	1b26c <__assert_fail@plt+0x9f3c>
   1b260:	ldr	r0, [sp, #28]
   1b264:	add	r0, r0, #2
   1b268:	str	r0, [sp, #28]
   1b26c:	b	1b284 <__assert_fail@plt+0x9f54>
   1b270:	movw	r0, #1000	; 0x3e8
   1b274:	str	r0, [sp, #32]
   1b278:	ldr	r0, [sp, #28]
   1b27c:	add	r0, r0, #1
   1b280:	str	r0, [sp, #28]
   1b284:	b	1b288 <__assert_fail@plt+0x9f58>
   1b288:	b	1b28c <__assert_fail@plt+0x9f5c>
   1b28c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b290:	ldr	r0, [r0]
   1b294:	ldrb	r0, [r0]
   1b298:	sub	r0, r0, #66	; 0x42
   1b29c:	cmp	r0, #53	; 0x35
   1b2a0:	str	r0, [sp]
   1b2a4:	bhi	1b498 <__assert_fail@plt+0xa168>
   1b2a8:	add	r0, pc, #8
   1b2ac:	ldr	r1, [sp]
   1b2b0:	ldr	r0, [r0, r1, lsl #2]
   1b2b4:	mov	pc, r0
   1b2b8:	andeq	fp, r1, r4, lsr #7
   1b2bc:	muleq	r1, r8, r4
   1b2c0:	muleq	r1, r8, r4
   1b2c4:	andeq	fp, r1, r4, asr #7
   1b2c8:	muleq	r1, r8, r4
   1b2cc:	ldrdeq	fp, [r1], -ip
   1b2d0:	muleq	r1, r8, r4
   1b2d4:	muleq	r1, r8, r4
   1b2d8:	muleq	r1, r8, r4
   1b2dc:	strdeq	fp, [r1], -r4
   1b2e0:	muleq	r1, r8, r4
   1b2e4:	andeq	fp, r1, ip, lsl #8
   1b2e8:	muleq	r1, r8, r4
   1b2ec:	muleq	r1, r8, r4
   1b2f0:	andeq	fp, r1, r4, lsr #8
   1b2f4:	muleq	r1, r8, r4
   1b2f8:	muleq	r1, r8, r4
   1b2fc:	muleq	r1, r8, r4
   1b300:	andeq	fp, r1, ip, lsr r4
   1b304:	muleq	r1, r8, r4
   1b308:	muleq	r1, r8, r4
   1b30c:	muleq	r1, r8, r4
   1b310:	muleq	r1, r8, r4
   1b314:	andeq	fp, r1, r8, ror #8
   1b318:	andeq	fp, r1, r0, lsl #9
   1b31c:	muleq	r1, r8, r4
   1b320:	muleq	r1, r8, r4
   1b324:	muleq	r1, r8, r4
   1b328:	muleq	r1, r8, r4
   1b32c:	muleq	r1, r8, r4
   1b330:	muleq	r1, r8, r4
   1b334:	muleq	r1, r8, r4
   1b338:	muleq	r1, r0, r3
   1b33c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b340:	muleq	r1, r8, r4
   1b344:	muleq	r1, r8, r4
   1b348:	muleq	r1, r8, r4
   1b34c:	ldrdeq	fp, [r1], -ip
   1b350:	muleq	r1, r8, r4
   1b354:	muleq	r1, r8, r4
   1b358:	muleq	r1, r8, r4
   1b35c:	strdeq	fp, [r1], -r4
   1b360:	muleq	r1, r8, r4
   1b364:	andeq	fp, r1, ip, lsl #8
   1b368:	muleq	r1, r8, r4
   1b36c:	muleq	r1, r8, r4
   1b370:	muleq	r1, r8, r4
   1b374:	muleq	r1, r8, r4
   1b378:	muleq	r1, r8, r4
   1b37c:	muleq	r1, r8, r4
   1b380:	andeq	fp, r1, ip, lsr r4
   1b384:	muleq	r1, r8, r4
   1b388:	muleq	r1, r8, r4
   1b38c:	andeq	fp, r1, r4, asr r4
   1b390:	sub	r0, fp, #32
   1b394:	movw	r1, #512	; 0x200
   1b398:	bl	1b51c <__assert_fail@plt+0xa1ec>
   1b39c:	str	r0, [sp, #24]
   1b3a0:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b3a4:	sub	r0, fp, #32
   1b3a8:	movw	r1, #1024	; 0x400
   1b3ac:	bl	1b51c <__assert_fail@plt+0xa1ec>
   1b3b0:	str	r0, [sp, #24]
   1b3b4:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b3b8:	movw	r0, #0
   1b3bc:	str	r0, [sp, #24]
   1b3c0:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b3c4:	ldr	r1, [sp, #32]
   1b3c8:	sub	r0, fp, #32
   1b3cc:	movw	r2, #6
   1b3d0:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b3d4:	str	r0, [sp, #24]
   1b3d8:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b3dc:	ldr	r1, [sp, #32]
   1b3e0:	sub	r0, fp, #32
   1b3e4:	movw	r2, #3
   1b3e8:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b3ec:	str	r0, [sp, #24]
   1b3f0:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b3f4:	ldr	r1, [sp, #32]
   1b3f8:	sub	r0, fp, #32
   1b3fc:	movw	r2, #1
   1b400:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b404:	str	r0, [sp, #24]
   1b408:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b40c:	ldr	r1, [sp, #32]
   1b410:	sub	r0, fp, #32
   1b414:	movw	r2, #2
   1b418:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b41c:	str	r0, [sp, #24]
   1b420:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b424:	ldr	r1, [sp, #32]
   1b428:	sub	r0, fp, #32
   1b42c:	movw	r2, #5
   1b430:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b434:	str	r0, [sp, #24]
   1b438:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b43c:	ldr	r1, [sp, #32]
   1b440:	sub	r0, fp, #32
   1b444:	movw	r2, #4
   1b448:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b44c:	str	r0, [sp, #24]
   1b450:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b454:	sub	r0, fp, #32
   1b458:	movw	r1, #2
   1b45c:	bl	1b51c <__assert_fail@plt+0xa1ec>
   1b460:	str	r0, [sp, #24]
   1b464:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b468:	ldr	r1, [sp, #32]
   1b46c:	sub	r0, fp, #32
   1b470:	movw	r2, #8
   1b474:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b478:	str	r0, [sp, #24]
   1b47c:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b480:	ldr	r1, [sp, #32]
   1b484:	sub	r0, fp, #32
   1b488:	movw	r2, #7
   1b48c:	bl	1cb5c <__assert_fail@plt+0xb82c>
   1b490:	str	r0, [sp, #24]
   1b494:	b	1b4b4 <__assert_fail@plt+0xa184>
   1b498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b49c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b4a0:	str	r0, [r1]
   1b4a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b4a8:	orr	r0, r0, #2
   1b4ac:	str	r0, [fp, #-4]
   1b4b0:	b	1b510 <__assert_fail@plt+0xa1e0>
   1b4b4:	ldr	r0, [sp, #24]
   1b4b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b4bc:	orr	r0, r1, r0
   1b4c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b4c4:	ldr	r0, [sp, #28]
   1b4c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b4cc:	ldr	r2, [r1]
   1b4d0:	add	r0, r2, r0
   1b4d4:	str	r0, [r1]
   1b4d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b4dc:	ldr	r0, [r0]
   1b4e0:	ldrsb	r0, [r0]
   1b4e4:	cmp	r0, #0
   1b4e8:	beq	1b4f8 <__assert_fail@plt+0xa1c8>
   1b4ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b4f0:	orr	r0, r0, #2
   1b4f4:	str	r0, [fp, #-36]	; 0xffffffdc
   1b4f8:	b	1b4fc <__assert_fail@plt+0xa1cc>
   1b4fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b500:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b504:	str	r0, [r1]
   1b508:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b50c:	str	r0, [fp, #-4]
   1b510:	ldr	r0, [fp, #-4]
   1b514:	mov	sp, fp
   1b518:	pop	{fp, pc}
   1b51c:	push	{fp, lr}
   1b520:	mov	fp, sp
   1b524:	sub	sp, sp, #184	; 0xb8
   1b528:	str	r0, [fp, #-8]
   1b52c:	str	r1, [fp, #-12]
   1b530:	b	1b964 <__assert_fail@plt+0xa634>
   1b534:	b	1b74c <__assert_fail@plt+0xa41c>
   1b538:	ldr	r0, [fp, #-12]
   1b53c:	cmp	r0, #0
   1b540:	bge	1b670 <__assert_fail@plt+0xa340>
   1b544:	ldr	r0, [fp, #-8]
   1b548:	ldr	r0, [r0]
   1b54c:	cmp	r0, #0
   1b550:	bcs	1b5e4 <__assert_fail@plt+0xa2b4>
   1b554:	b	1b558 <__assert_fail@plt+0xa228>
   1b558:	ldr	r0, [fp, #-8]
   1b55c:	ldr	r0, [r0]
   1b560:	ldr	r1, [fp, #-12]
   1b564:	movw	r2, #127	; 0x7f
   1b568:	sdiv	r1, r2, r1
   1b56c:	cmp	r0, r1
   1b570:	bcc	1b714 <__assert_fail@plt+0xa3e4>
   1b574:	b	1b730 <__assert_fail@plt+0xa400>
   1b578:	b	1b57c <__assert_fail@plt+0xa24c>
   1b57c:	ldr	r0, [pc, #4072]	; 1c56c <__assert_fail@plt+0xb23c>
   1b580:	ldr	r1, [fp, #-12]
   1b584:	cmp	r1, r0
   1b588:	blt	1b5a0 <__assert_fail@plt+0xa270>
   1b58c:	b	1b5ac <__assert_fail@plt+0xa27c>
   1b590:	ldr	r0, [fp, #-12]
   1b594:	movw	r1, #0
   1b598:	cmp	r1, r0
   1b59c:	bge	1b5ac <__assert_fail@plt+0xa27c>
   1b5a0:	movw	r0, #0
   1b5a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b5a8:	b	1b5c4 <__assert_fail@plt+0xa294>
   1b5ac:	ldr	r0, [fp, #-12]
   1b5b0:	movw	r1, #0
   1b5b4:	sub	r0, r1, r0
   1b5b8:	movw	r1, #127	; 0x7f
   1b5bc:	sdiv	r0, r1, r0
   1b5c0:	str	r0, [fp, #-20]	; 0xffffffec
   1b5c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5c8:	ldr	r1, [fp, #-8]
   1b5cc:	ldr	r1, [r1]
   1b5d0:	mvn	r2, #0
   1b5d4:	sub	r1, r2, r1
   1b5d8:	cmp	r0, r1
   1b5dc:	bls	1b714 <__assert_fail@plt+0xa3e4>
   1b5e0:	b	1b730 <__assert_fail@plt+0xa400>
   1b5e4:	b	1b5e8 <__assert_fail@plt+0xa2b8>
   1b5e8:	b	1b650 <__assert_fail@plt+0xa320>
   1b5ec:	b	1b650 <__assert_fail@plt+0xa320>
   1b5f0:	ldr	r0, [fp, #-12]
   1b5f4:	cmn	r0, #1
   1b5f8:	bne	1b650 <__assert_fail@plt+0xa320>
   1b5fc:	b	1b620 <__assert_fail@plt+0xa2f0>
   1b600:	ldr	r0, [fp, #-8]
   1b604:	ldr	r0, [r0]
   1b608:	mvn	r1, #127	; 0x7f
   1b60c:	add	r0, r0, r1
   1b610:	movw	r1, #0
   1b614:	cmp	r1, r0
   1b618:	bcc	1b714 <__assert_fail@plt+0xa3e4>
   1b61c:	b	1b730 <__assert_fail@plt+0xa400>
   1b620:	ldr	r0, [fp, #-8]
   1b624:	ldr	r0, [r0]
   1b628:	movw	r1, #0
   1b62c:	cmp	r1, r0
   1b630:	bcs	1b730 <__assert_fail@plt+0xa400>
   1b634:	ldr	r0, [fp, #-8]
   1b638:	ldr	r0, [r0]
   1b63c:	sub	r0, r0, #1
   1b640:	movw	r1, #127	; 0x7f
   1b644:	cmp	r1, r0
   1b648:	bcc	1b714 <__assert_fail@plt+0xa3e4>
   1b64c:	b	1b730 <__assert_fail@plt+0xa400>
   1b650:	ldr	r0, [fp, #-12]
   1b654:	mvn	r1, #127	; 0x7f
   1b658:	sdiv	r0, r1, r0
   1b65c:	ldr	r1, [fp, #-8]
   1b660:	ldr	r1, [r1]
   1b664:	cmp	r0, r1
   1b668:	bcc	1b714 <__assert_fail@plt+0xa3e4>
   1b66c:	b	1b730 <__assert_fail@plt+0xa400>
   1b670:	ldr	r0, [fp, #-12]
   1b674:	cmp	r0, #0
   1b678:	bne	1b680 <__assert_fail@plt+0xa350>
   1b67c:	b	1b730 <__assert_fail@plt+0xa400>
   1b680:	ldr	r0, [fp, #-8]
   1b684:	ldr	r0, [r0]
   1b688:	cmp	r0, #0
   1b68c:	bcs	1b6f8 <__assert_fail@plt+0xa3c8>
   1b690:	ldr	r0, [fp, #-8]
   1b694:	ldr	r0, [r0]
   1b698:	cmn	r0, #1
   1b69c:	bne	1b6d8 <__assert_fail@plt+0xa3a8>
   1b6a0:	b	1b6a4 <__assert_fail@plt+0xa374>
   1b6a4:	ldr	r0, [fp, #-12]
   1b6a8:	mvn	r1, #127	; 0x7f
   1b6ac:	add	r0, r0, r1
   1b6b0:	movw	r1, #0
   1b6b4:	cmp	r1, r0
   1b6b8:	blt	1b714 <__assert_fail@plt+0xa3e4>
   1b6bc:	b	1b730 <__assert_fail@plt+0xa400>
   1b6c0:	ldr	r0, [fp, #-12]
   1b6c4:	sub	r0, r0, #1
   1b6c8:	movw	r1, #127	; 0x7f
   1b6cc:	cmp	r1, r0
   1b6d0:	blt	1b714 <__assert_fail@plt+0xa3e4>
   1b6d4:	b	1b730 <__assert_fail@plt+0xa400>
   1b6d8:	ldr	r0, [fp, #-8]
   1b6dc:	ldr	r0, [r0]
   1b6e0:	mvn	r1, #127	; 0x7f
   1b6e4:	udiv	r0, r1, r0
   1b6e8:	ldr	r1, [fp, #-12]
   1b6ec:	cmp	r0, r1
   1b6f0:	bcc	1b714 <__assert_fail@plt+0xa3e4>
   1b6f4:	b	1b730 <__assert_fail@plt+0xa400>
   1b6f8:	ldr	r0, [fp, #-12]
   1b6fc:	movw	r1, #127	; 0x7f
   1b700:	sdiv	r0, r1, r0
   1b704:	ldr	r1, [fp, #-8]
   1b708:	ldr	r1, [r1]
   1b70c:	cmp	r0, r1
   1b710:	bcs	1b730 <__assert_fail@plt+0xa400>
   1b714:	ldr	r0, [fp, #-8]
   1b718:	ldr	r0, [r0]
   1b71c:	ldr	r1, [fp, #-12]
   1b720:	mul	r0, r0, r1
   1b724:	sxtb	r0, r0
   1b728:	str	r0, [fp, #-16]
   1b72c:	b	1cafc <__assert_fail@plt+0xb7cc>
   1b730:	ldr	r0, [fp, #-8]
   1b734:	ldr	r0, [r0]
   1b738:	ldr	r1, [fp, #-12]
   1b73c:	mul	r0, r0, r1
   1b740:	sxtb	r0, r0
   1b744:	str	r0, [fp, #-16]
   1b748:	b	1cb30 <__assert_fail@plt+0xb800>
   1b74c:	ldr	r0, [fp, #-12]
   1b750:	cmp	r0, #0
   1b754:	bge	1b880 <__assert_fail@plt+0xa550>
   1b758:	ldr	r0, [fp, #-8]
   1b75c:	ldr	r0, [r0]
   1b760:	cmp	r0, #0
   1b764:	bcs	1b7f8 <__assert_fail@plt+0xa4c8>
   1b768:	b	1b76c <__assert_fail@plt+0xa43c>
   1b76c:	ldr	r0, [fp, #-8]
   1b770:	ldr	r0, [r0]
   1b774:	ldr	r1, [fp, #-12]
   1b778:	movw	r2, #255	; 0xff
   1b77c:	sdiv	r1, r2, r1
   1b780:	cmp	r0, r1
   1b784:	bcc	1b92c <__assert_fail@plt+0xa5fc>
   1b788:	b	1b948 <__assert_fail@plt+0xa618>
   1b78c:	b	1b790 <__assert_fail@plt+0xa460>
   1b790:	ldr	r0, [pc, #3540]	; 1c56c <__assert_fail@plt+0xb23c>
   1b794:	ldr	r1, [fp, #-12]
   1b798:	cmp	r1, r0
   1b79c:	blt	1b7b4 <__assert_fail@plt+0xa484>
   1b7a0:	b	1b7c0 <__assert_fail@plt+0xa490>
   1b7a4:	ldr	r0, [fp, #-12]
   1b7a8:	movw	r1, #0
   1b7ac:	cmp	r1, r0
   1b7b0:	bge	1b7c0 <__assert_fail@plt+0xa490>
   1b7b4:	movw	r0, #0
   1b7b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7bc:	b	1b7d8 <__assert_fail@plt+0xa4a8>
   1b7c0:	ldr	r0, [fp, #-12]
   1b7c4:	movw	r1, #0
   1b7c8:	sub	r0, r1, r0
   1b7cc:	movw	r1, #255	; 0xff
   1b7d0:	sdiv	r0, r1, r0
   1b7d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7dc:	ldr	r1, [fp, #-8]
   1b7e0:	ldr	r1, [r1]
   1b7e4:	mvn	r2, #0
   1b7e8:	sub	r1, r2, r1
   1b7ec:	cmp	r0, r1
   1b7f0:	bls	1b92c <__assert_fail@plt+0xa5fc>
   1b7f4:	b	1b948 <__assert_fail@plt+0xa618>
   1b7f8:	b	1b7fc <__assert_fail@plt+0xa4cc>
   1b7fc:	b	1b860 <__assert_fail@plt+0xa530>
   1b800:	b	1b860 <__assert_fail@plt+0xa530>
   1b804:	ldr	r0, [fp, #-12]
   1b808:	cmn	r0, #1
   1b80c:	bne	1b860 <__assert_fail@plt+0xa530>
   1b810:	b	1b830 <__assert_fail@plt+0xa500>
   1b814:	ldr	r0, [fp, #-8]
   1b818:	ldr	r0, [r0]
   1b81c:	add	r0, r0, #0
   1b820:	movw	r1, #0
   1b824:	cmp	r1, r0
   1b828:	bcc	1b92c <__assert_fail@plt+0xa5fc>
   1b82c:	b	1b948 <__assert_fail@plt+0xa618>
   1b830:	ldr	r0, [fp, #-8]
   1b834:	ldr	r0, [r0]
   1b838:	movw	r1, #0
   1b83c:	cmp	r1, r0
   1b840:	bcs	1b948 <__assert_fail@plt+0xa618>
   1b844:	ldr	r0, [fp, #-8]
   1b848:	ldr	r0, [r0]
   1b84c:	sub	r0, r0, #1
   1b850:	mvn	r1, #0
   1b854:	cmp	r1, r0
   1b858:	bcc	1b92c <__assert_fail@plt+0xa5fc>
   1b85c:	b	1b948 <__assert_fail@plt+0xa618>
   1b860:	ldr	r0, [fp, #-12]
   1b864:	movw	r1, #0
   1b868:	sdiv	r0, r1, r0
   1b86c:	ldr	r1, [fp, #-8]
   1b870:	ldr	r1, [r1]
   1b874:	cmp	r0, r1
   1b878:	bcc	1b92c <__assert_fail@plt+0xa5fc>
   1b87c:	b	1b948 <__assert_fail@plt+0xa618>
   1b880:	ldr	r0, [fp, #-12]
   1b884:	cmp	r0, #0
   1b888:	bne	1b890 <__assert_fail@plt+0xa560>
   1b88c:	b	1b948 <__assert_fail@plt+0xa618>
   1b890:	ldr	r0, [fp, #-8]
   1b894:	ldr	r0, [r0]
   1b898:	cmp	r0, #0
   1b89c:	bcs	1b910 <__assert_fail@plt+0xa5e0>
   1b8a0:	b	1b8a8 <__assert_fail@plt+0xa578>
   1b8a4:	b	1b8ac <__assert_fail@plt+0xa57c>
   1b8a8:	b	1b8f0 <__assert_fail@plt+0xa5c0>
   1b8ac:	ldr	r0, [fp, #-8]
   1b8b0:	ldr	r0, [r0]
   1b8b4:	cmn	r0, #1
   1b8b8:	bne	1b8f0 <__assert_fail@plt+0xa5c0>
   1b8bc:	b	1b8c0 <__assert_fail@plt+0xa590>
   1b8c0:	ldr	r0, [fp, #-12]
   1b8c4:	add	r0, r0, #0
   1b8c8:	movw	r1, #0
   1b8cc:	cmp	r1, r0
   1b8d0:	blt	1b92c <__assert_fail@plt+0xa5fc>
   1b8d4:	b	1b948 <__assert_fail@plt+0xa618>
   1b8d8:	ldr	r0, [fp, #-12]
   1b8dc:	sub	r0, r0, #1
   1b8e0:	mvn	r1, #0
   1b8e4:	cmp	r1, r0
   1b8e8:	blt	1b92c <__assert_fail@plt+0xa5fc>
   1b8ec:	b	1b948 <__assert_fail@plt+0xa618>
   1b8f0:	ldr	r0, [fp, #-8]
   1b8f4:	ldr	r0, [r0]
   1b8f8:	movw	r1, #0
   1b8fc:	udiv	r0, r1, r0
   1b900:	ldr	r1, [fp, #-12]
   1b904:	cmp	r0, r1
   1b908:	bcc	1b92c <__assert_fail@plt+0xa5fc>
   1b90c:	b	1b948 <__assert_fail@plt+0xa618>
   1b910:	ldr	r0, [fp, #-12]
   1b914:	movw	r1, #255	; 0xff
   1b918:	sdiv	r0, r1, r0
   1b91c:	ldr	r1, [fp, #-8]
   1b920:	ldr	r1, [r1]
   1b924:	cmp	r0, r1
   1b928:	bcs	1b948 <__assert_fail@plt+0xa618>
   1b92c:	ldr	r0, [fp, #-8]
   1b930:	ldr	r0, [r0]
   1b934:	ldr	r1, [fp, #-12]
   1b938:	mul	r0, r0, r1
   1b93c:	and	r0, r0, #255	; 0xff
   1b940:	str	r0, [fp, #-16]
   1b944:	b	1cafc <__assert_fail@plt+0xb7cc>
   1b948:	ldr	r0, [fp, #-8]
   1b94c:	ldr	r0, [r0]
   1b950:	ldr	r1, [fp, #-12]
   1b954:	mul	r0, r0, r1
   1b958:	and	r0, r0, #255	; 0xff
   1b95c:	str	r0, [fp, #-16]
   1b960:	b	1cb30 <__assert_fail@plt+0xb800>
   1b964:	b	1bd98 <__assert_fail@plt+0xaa68>
   1b968:	b	1bb80 <__assert_fail@plt+0xa850>
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	cmp	r0, #0
   1b974:	bge	1baa4 <__assert_fail@plt+0xa774>
   1b978:	ldr	r0, [fp, #-8]
   1b97c:	ldr	r0, [r0]
   1b980:	cmp	r0, #0
   1b984:	bcs	1ba18 <__assert_fail@plt+0xa6e8>
   1b988:	b	1b98c <__assert_fail@plt+0xa65c>
   1b98c:	ldr	r0, [fp, #-8]
   1b990:	ldr	r0, [r0]
   1b994:	ldr	r1, [fp, #-12]
   1b998:	movw	r2, #32767	; 0x7fff
   1b99c:	sdiv	r1, r2, r1
   1b9a0:	cmp	r0, r1
   1b9a4:	bcc	1bb48 <__assert_fail@plt+0xa818>
   1b9a8:	b	1bb64 <__assert_fail@plt+0xa834>
   1b9ac:	b	1b9b0 <__assert_fail@plt+0xa680>
   1b9b0:	ldr	r0, [pc, #2996]	; 1c56c <__assert_fail@plt+0xb23c>
   1b9b4:	ldr	r1, [fp, #-12]
   1b9b8:	cmp	r1, r0
   1b9bc:	blt	1b9d4 <__assert_fail@plt+0xa6a4>
   1b9c0:	b	1b9e0 <__assert_fail@plt+0xa6b0>
   1b9c4:	ldr	r0, [fp, #-12]
   1b9c8:	movw	r1, #0
   1b9cc:	cmp	r1, r0
   1b9d0:	bge	1b9e0 <__assert_fail@plt+0xa6b0>
   1b9d4:	movw	r0, #0
   1b9d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b9dc:	b	1b9f8 <__assert_fail@plt+0xa6c8>
   1b9e0:	ldr	r0, [fp, #-12]
   1b9e4:	movw	r1, #0
   1b9e8:	sub	r0, r1, r0
   1b9ec:	movw	r1, #32767	; 0x7fff
   1b9f0:	sdiv	r0, r1, r0
   1b9f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b9f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b9fc:	ldr	r1, [fp, #-8]
   1ba00:	ldr	r1, [r1]
   1ba04:	mvn	r2, #0
   1ba08:	sub	r1, r2, r1
   1ba0c:	cmp	r0, r1
   1ba10:	bls	1bb48 <__assert_fail@plt+0xa818>
   1ba14:	b	1bb64 <__assert_fail@plt+0xa834>
   1ba18:	b	1ba1c <__assert_fail@plt+0xa6ec>
   1ba1c:	b	1ba84 <__assert_fail@plt+0xa754>
   1ba20:	b	1ba84 <__assert_fail@plt+0xa754>
   1ba24:	ldr	r0, [fp, #-12]
   1ba28:	cmn	r0, #1
   1ba2c:	bne	1ba84 <__assert_fail@plt+0xa754>
   1ba30:	b	1ba54 <__assert_fail@plt+0xa724>
   1ba34:	ldr	r0, [pc, #4076]	; 1ca28 <__assert_fail@plt+0xb6f8>
   1ba38:	ldr	r1, [fp, #-8]
   1ba3c:	ldr	r1, [r1]
   1ba40:	add	r0, r1, r0
   1ba44:	movw	r1, #0
   1ba48:	cmp	r1, r0
   1ba4c:	bcc	1bb48 <__assert_fail@plt+0xa818>
   1ba50:	b	1bb64 <__assert_fail@plt+0xa834>
   1ba54:	ldr	r0, [fp, #-8]
   1ba58:	ldr	r0, [r0]
   1ba5c:	movw	r1, #0
   1ba60:	cmp	r1, r0
   1ba64:	bcs	1bb64 <__assert_fail@plt+0xa834>
   1ba68:	ldr	r0, [fp, #-8]
   1ba6c:	ldr	r0, [r0]
   1ba70:	sub	r0, r0, #1
   1ba74:	movw	r1, #32767	; 0x7fff
   1ba78:	cmp	r1, r0
   1ba7c:	bcc	1bb48 <__assert_fail@plt+0xa818>
   1ba80:	b	1bb64 <__assert_fail@plt+0xa834>
   1ba84:	ldr	r0, [pc, #3996]	; 1ca28 <__assert_fail@plt+0xb6f8>
   1ba88:	ldr	r1, [fp, #-12]
   1ba8c:	sdiv	r0, r0, r1
   1ba90:	ldr	r1, [fp, #-8]
   1ba94:	ldr	r1, [r1]
   1ba98:	cmp	r0, r1
   1ba9c:	bcc	1bb48 <__assert_fail@plt+0xa818>
   1baa0:	b	1bb64 <__assert_fail@plt+0xa834>
   1baa4:	ldr	r0, [fp, #-12]
   1baa8:	cmp	r0, #0
   1baac:	bne	1bab4 <__assert_fail@plt+0xa784>
   1bab0:	b	1bb64 <__assert_fail@plt+0xa834>
   1bab4:	ldr	r0, [fp, #-8]
   1bab8:	ldr	r0, [r0]
   1babc:	cmp	r0, #0
   1bac0:	bcs	1bb2c <__assert_fail@plt+0xa7fc>
   1bac4:	ldr	r0, [fp, #-8]
   1bac8:	ldr	r0, [r0]
   1bacc:	cmn	r0, #1
   1bad0:	bne	1bb0c <__assert_fail@plt+0xa7dc>
   1bad4:	b	1bad8 <__assert_fail@plt+0xa7a8>
   1bad8:	ldr	r0, [pc, #3912]	; 1ca28 <__assert_fail@plt+0xb6f8>
   1badc:	ldr	r1, [fp, #-12]
   1bae0:	add	r0, r1, r0
   1bae4:	movw	r1, #0
   1bae8:	cmp	r1, r0
   1baec:	blt	1bb48 <__assert_fail@plt+0xa818>
   1baf0:	b	1bb64 <__assert_fail@plt+0xa834>
   1baf4:	ldr	r0, [fp, #-12]
   1baf8:	sub	r0, r0, #1
   1bafc:	movw	r1, #32767	; 0x7fff
   1bb00:	cmp	r1, r0
   1bb04:	blt	1bb48 <__assert_fail@plt+0xa818>
   1bb08:	b	1bb64 <__assert_fail@plt+0xa834>
   1bb0c:	ldr	r0, [pc, #3860]	; 1ca28 <__assert_fail@plt+0xb6f8>
   1bb10:	ldr	r1, [fp, #-8]
   1bb14:	ldr	r1, [r1]
   1bb18:	udiv	r0, r0, r1
   1bb1c:	ldr	r1, [fp, #-12]
   1bb20:	cmp	r0, r1
   1bb24:	bcc	1bb48 <__assert_fail@plt+0xa818>
   1bb28:	b	1bb64 <__assert_fail@plt+0xa834>
   1bb2c:	ldr	r0, [fp, #-12]
   1bb30:	movw	r1, #32767	; 0x7fff
   1bb34:	sdiv	r0, r1, r0
   1bb38:	ldr	r1, [fp, #-8]
   1bb3c:	ldr	r1, [r1]
   1bb40:	cmp	r0, r1
   1bb44:	bcs	1bb64 <__assert_fail@plt+0xa834>
   1bb48:	ldr	r0, [fp, #-8]
   1bb4c:	ldr	r0, [r0]
   1bb50:	ldr	r1, [fp, #-12]
   1bb54:	mul	r0, r0, r1
   1bb58:	sxth	r0, r0
   1bb5c:	str	r0, [fp, #-16]
   1bb60:	b	1cafc <__assert_fail@plt+0xb7cc>
   1bb64:	ldr	r0, [fp, #-8]
   1bb68:	ldr	r0, [r0]
   1bb6c:	ldr	r1, [fp, #-12]
   1bb70:	mul	r0, r0, r1
   1bb74:	sxth	r0, r0
   1bb78:	str	r0, [fp, #-16]
   1bb7c:	b	1cb30 <__assert_fail@plt+0xb800>
   1bb80:	ldr	r0, [fp, #-12]
   1bb84:	cmp	r0, #0
   1bb88:	bge	1bcb4 <__assert_fail@plt+0xa984>
   1bb8c:	ldr	r0, [fp, #-8]
   1bb90:	ldr	r0, [r0]
   1bb94:	cmp	r0, #0
   1bb98:	bcs	1bc2c <__assert_fail@plt+0xa8fc>
   1bb9c:	b	1bba0 <__assert_fail@plt+0xa870>
   1bba0:	ldr	r0, [fp, #-8]
   1bba4:	ldr	r0, [r0]
   1bba8:	ldr	r1, [fp, #-12]
   1bbac:	movw	r2, #65535	; 0xffff
   1bbb0:	sdiv	r1, r2, r1
   1bbb4:	cmp	r0, r1
   1bbb8:	bcc	1bd60 <__assert_fail@plt+0xaa30>
   1bbbc:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bbc0:	b	1bbc4 <__assert_fail@plt+0xa894>
   1bbc4:	ldr	r0, [pc, #3972]	; 1cb50 <__assert_fail@plt+0xb820>
   1bbc8:	ldr	r1, [fp, #-12]
   1bbcc:	cmp	r1, r0
   1bbd0:	blt	1bbe8 <__assert_fail@plt+0xa8b8>
   1bbd4:	b	1bbf4 <__assert_fail@plt+0xa8c4>
   1bbd8:	ldr	r0, [fp, #-12]
   1bbdc:	movw	r1, #0
   1bbe0:	cmp	r1, r0
   1bbe4:	bge	1bbf4 <__assert_fail@plt+0xa8c4>
   1bbe8:	movw	r0, #0
   1bbec:	str	r0, [fp, #-32]	; 0xffffffe0
   1bbf0:	b	1bc0c <__assert_fail@plt+0xa8dc>
   1bbf4:	ldr	r0, [fp, #-12]
   1bbf8:	movw	r1, #0
   1bbfc:	sub	r0, r1, r0
   1bc00:	movw	r1, #65535	; 0xffff
   1bc04:	sdiv	r0, r1, r0
   1bc08:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc10:	ldr	r1, [fp, #-8]
   1bc14:	ldr	r1, [r1]
   1bc18:	mvn	r2, #0
   1bc1c:	sub	r1, r2, r1
   1bc20:	cmp	r0, r1
   1bc24:	bls	1bd60 <__assert_fail@plt+0xaa30>
   1bc28:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bc2c:	b	1bc30 <__assert_fail@plt+0xa900>
   1bc30:	b	1bc94 <__assert_fail@plt+0xa964>
   1bc34:	b	1bc94 <__assert_fail@plt+0xa964>
   1bc38:	ldr	r0, [fp, #-12]
   1bc3c:	cmn	r0, #1
   1bc40:	bne	1bc94 <__assert_fail@plt+0xa964>
   1bc44:	b	1bc64 <__assert_fail@plt+0xa934>
   1bc48:	ldr	r0, [fp, #-8]
   1bc4c:	ldr	r0, [r0]
   1bc50:	add	r0, r0, #0
   1bc54:	movw	r1, #0
   1bc58:	cmp	r1, r0
   1bc5c:	bcc	1bd60 <__assert_fail@plt+0xaa30>
   1bc60:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bc64:	ldr	r0, [fp, #-8]
   1bc68:	ldr	r0, [r0]
   1bc6c:	movw	r1, #0
   1bc70:	cmp	r1, r0
   1bc74:	bcs	1bd7c <__assert_fail@plt+0xaa4c>
   1bc78:	ldr	r0, [fp, #-8]
   1bc7c:	ldr	r0, [r0]
   1bc80:	sub	r0, r0, #1
   1bc84:	mvn	r1, #0
   1bc88:	cmp	r1, r0
   1bc8c:	bcc	1bd60 <__assert_fail@plt+0xaa30>
   1bc90:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bc94:	ldr	r0, [fp, #-12]
   1bc98:	movw	r1, #0
   1bc9c:	sdiv	r0, r1, r0
   1bca0:	ldr	r1, [fp, #-8]
   1bca4:	ldr	r1, [r1]
   1bca8:	cmp	r0, r1
   1bcac:	bcc	1bd60 <__assert_fail@plt+0xaa30>
   1bcb0:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bcb4:	ldr	r0, [fp, #-12]
   1bcb8:	cmp	r0, #0
   1bcbc:	bne	1bcc4 <__assert_fail@plt+0xa994>
   1bcc0:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bcc4:	ldr	r0, [fp, #-8]
   1bcc8:	ldr	r0, [r0]
   1bccc:	cmp	r0, #0
   1bcd0:	bcs	1bd44 <__assert_fail@plt+0xaa14>
   1bcd4:	b	1bcdc <__assert_fail@plt+0xa9ac>
   1bcd8:	b	1bce0 <__assert_fail@plt+0xa9b0>
   1bcdc:	b	1bd24 <__assert_fail@plt+0xa9f4>
   1bce0:	ldr	r0, [fp, #-8]
   1bce4:	ldr	r0, [r0]
   1bce8:	cmn	r0, #1
   1bcec:	bne	1bd24 <__assert_fail@plt+0xa9f4>
   1bcf0:	b	1bcf4 <__assert_fail@plt+0xa9c4>
   1bcf4:	ldr	r0, [fp, #-12]
   1bcf8:	add	r0, r0, #0
   1bcfc:	movw	r1, #0
   1bd00:	cmp	r1, r0
   1bd04:	blt	1bd60 <__assert_fail@plt+0xaa30>
   1bd08:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bd0c:	ldr	r0, [fp, #-12]
   1bd10:	sub	r0, r0, #1
   1bd14:	mvn	r1, #0
   1bd18:	cmp	r1, r0
   1bd1c:	blt	1bd60 <__assert_fail@plt+0xaa30>
   1bd20:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bd24:	ldr	r0, [fp, #-8]
   1bd28:	ldr	r0, [r0]
   1bd2c:	movw	r1, #0
   1bd30:	udiv	r0, r1, r0
   1bd34:	ldr	r1, [fp, #-12]
   1bd38:	cmp	r0, r1
   1bd3c:	bcc	1bd60 <__assert_fail@plt+0xaa30>
   1bd40:	b	1bd7c <__assert_fail@plt+0xaa4c>
   1bd44:	ldr	r0, [fp, #-12]
   1bd48:	movw	r1, #65535	; 0xffff
   1bd4c:	sdiv	r0, r1, r0
   1bd50:	ldr	r1, [fp, #-8]
   1bd54:	ldr	r1, [r1]
   1bd58:	cmp	r0, r1
   1bd5c:	bcs	1bd7c <__assert_fail@plt+0xaa4c>
   1bd60:	ldr	r0, [fp, #-8]
   1bd64:	ldr	r0, [r0]
   1bd68:	ldr	r1, [fp, #-12]
   1bd6c:	mul	r0, r0, r1
   1bd70:	uxth	r0, r0
   1bd74:	str	r0, [fp, #-16]
   1bd78:	b	1cafc <__assert_fail@plt+0xb7cc>
   1bd7c:	ldr	r0, [fp, #-8]
   1bd80:	ldr	r0, [r0]
   1bd84:	ldr	r1, [fp, #-12]
   1bd88:	mul	r0, r0, r1
   1bd8c:	uxth	r0, r0
   1bd90:	str	r0, [fp, #-16]
   1bd94:	b	1cb30 <__assert_fail@plt+0xb800>
   1bd98:	b	1bd9c <__assert_fail@plt+0xaa6c>
   1bd9c:	b	1bf98 <__assert_fail@plt+0xac68>
   1bda0:	ldr	r0, [fp, #-12]
   1bda4:	cmp	r0, #0
   1bda8:	bge	1bec8 <__assert_fail@plt+0xab98>
   1bdac:	ldr	r0, [fp, #-8]
   1bdb0:	ldr	r0, [r0]
   1bdb4:	cmp	r0, #0
   1bdb8:	bcs	1be4c <__assert_fail@plt+0xab1c>
   1bdbc:	b	1bdc0 <__assert_fail@plt+0xaa90>
   1bdc0:	ldr	r0, [pc, #3468]	; 1cb54 <__assert_fail@plt+0xb824>
   1bdc4:	ldr	r1, [fp, #-8]
   1bdc8:	ldr	r1, [r1]
   1bdcc:	ldr	r2, [fp, #-12]
   1bdd0:	sdiv	r0, r0, r2
   1bdd4:	cmp	r1, r0
   1bdd8:	bcc	1bf68 <__assert_fail@plt+0xac38>
   1bddc:	b	1bf80 <__assert_fail@plt+0xac50>
   1bde0:	b	1bde4 <__assert_fail@plt+0xaab4>
   1bde4:	ldr	r0, [pc, #3428]	; 1cb50 <__assert_fail@plt+0xb820>
   1bde8:	ldr	r1, [fp, #-12]
   1bdec:	cmp	r1, r0
   1bdf0:	blt	1be08 <__assert_fail@plt+0xaad8>
   1bdf4:	b	1be14 <__assert_fail@plt+0xaae4>
   1bdf8:	ldr	r0, [fp, #-12]
   1bdfc:	movw	r1, #0
   1be00:	cmp	r1, r0
   1be04:	bge	1be14 <__assert_fail@plt+0xaae4>
   1be08:	movw	r0, #0
   1be0c:	str	r0, [fp, #-36]	; 0xffffffdc
   1be10:	b	1be2c <__assert_fail@plt+0xaafc>
   1be14:	ldr	r0, [pc, #3384]	; 1cb54 <__assert_fail@plt+0xb824>
   1be18:	ldr	r1, [fp, #-12]
   1be1c:	movw	r2, #0
   1be20:	sub	r1, r2, r1
   1be24:	sdiv	r0, r0, r1
   1be28:	str	r0, [fp, #-36]	; 0xffffffdc
   1be2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1be30:	ldr	r1, [fp, #-8]
   1be34:	ldr	r1, [r1]
   1be38:	mvn	r2, #0
   1be3c:	sub	r1, r2, r1
   1be40:	cmp	r0, r1
   1be44:	bls	1bf68 <__assert_fail@plt+0xac38>
   1be48:	b	1bf80 <__assert_fail@plt+0xac50>
   1be4c:	ldr	r0, [fp, #-12]
   1be50:	cmn	r0, #1
   1be54:	bne	1bea8 <__assert_fail@plt+0xab78>
   1be58:	b	1be78 <__assert_fail@plt+0xab48>
   1be5c:	ldr	r0, [fp, #-8]
   1be60:	ldr	r0, [r0]
   1be64:	add	r0, r0, #-2147483648	; 0x80000000
   1be68:	movw	r1, #0
   1be6c:	cmp	r1, r0
   1be70:	bcc	1bf68 <__assert_fail@plt+0xac38>
   1be74:	b	1bf80 <__assert_fail@plt+0xac50>
   1be78:	ldr	r0, [fp, #-8]
   1be7c:	ldr	r0, [r0]
   1be80:	movw	r1, #0
   1be84:	cmp	r1, r0
   1be88:	bcs	1bf80 <__assert_fail@plt+0xac50>
   1be8c:	ldr	r0, [pc, #3264]	; 1cb54 <__assert_fail@plt+0xb824>
   1be90:	ldr	r1, [fp, #-8]
   1be94:	ldr	r1, [r1]
   1be98:	sub	r1, r1, #1
   1be9c:	cmp	r0, r1
   1bea0:	bcc	1bf68 <__assert_fail@plt+0xac38>
   1bea4:	b	1bf80 <__assert_fail@plt+0xac50>
   1bea8:	ldr	r0, [pc, #3240]	; 1cb58 <__assert_fail@plt+0xb828>
   1beac:	ldr	r1, [fp, #-12]
   1beb0:	sdiv	r0, r0, r1
   1beb4:	ldr	r1, [fp, #-8]
   1beb8:	ldr	r1, [r1]
   1bebc:	cmp	r0, r1
   1bec0:	bcc	1bf68 <__assert_fail@plt+0xac38>
   1bec4:	b	1bf80 <__assert_fail@plt+0xac50>
   1bec8:	ldr	r0, [fp, #-12]
   1becc:	cmp	r0, #0
   1bed0:	bne	1bed8 <__assert_fail@plt+0xaba8>
   1bed4:	b	1bf80 <__assert_fail@plt+0xac50>
   1bed8:	ldr	r0, [fp, #-8]
   1bedc:	ldr	r0, [r0]
   1bee0:	cmp	r0, #0
   1bee4:	bcs	1bf4c <__assert_fail@plt+0xac1c>
   1bee8:	ldr	r0, [fp, #-8]
   1beec:	ldr	r0, [r0]
   1bef0:	cmn	r0, #1
   1bef4:	bne	1bf2c <__assert_fail@plt+0xabfc>
   1bef8:	b	1befc <__assert_fail@plt+0xabcc>
   1befc:	ldr	r0, [fp, #-12]
   1bf00:	add	r0, r0, #-2147483648	; 0x80000000
   1bf04:	movw	r1, #0
   1bf08:	cmp	r1, r0
   1bf0c:	blt	1bf68 <__assert_fail@plt+0xac38>
   1bf10:	b	1bf80 <__assert_fail@plt+0xac50>
   1bf14:	ldr	r0, [pc, #3128]	; 1cb54 <__assert_fail@plt+0xb824>
   1bf18:	ldr	r1, [fp, #-12]
   1bf1c:	sub	r1, r1, #1
   1bf20:	cmp	r0, r1
   1bf24:	blt	1bf68 <__assert_fail@plt+0xac38>
   1bf28:	b	1bf80 <__assert_fail@plt+0xac50>
   1bf2c:	ldr	r0, [pc, #3108]	; 1cb58 <__assert_fail@plt+0xb828>
   1bf30:	ldr	r1, [fp, #-8]
   1bf34:	ldr	r1, [r1]
   1bf38:	udiv	r0, r0, r1
   1bf3c:	ldr	r1, [fp, #-12]
   1bf40:	cmp	r0, r1
   1bf44:	bcc	1bf68 <__assert_fail@plt+0xac38>
   1bf48:	b	1bf80 <__assert_fail@plt+0xac50>
   1bf4c:	ldr	r0, [pc, #3072]	; 1cb54 <__assert_fail@plt+0xb824>
   1bf50:	ldr	r1, [fp, #-12]
   1bf54:	sdiv	r0, r0, r1
   1bf58:	ldr	r1, [fp, #-8]
   1bf5c:	ldr	r1, [r1]
   1bf60:	cmp	r0, r1
   1bf64:	bcs	1bf80 <__assert_fail@plt+0xac50>
   1bf68:	ldr	r0, [fp, #-8]
   1bf6c:	ldr	r0, [r0]
   1bf70:	ldr	r1, [fp, #-12]
   1bf74:	mul	r0, r0, r1
   1bf78:	str	r0, [fp, #-16]
   1bf7c:	b	1cafc <__assert_fail@plt+0xb7cc>
   1bf80:	ldr	r0, [fp, #-8]
   1bf84:	ldr	r0, [r0]
   1bf88:	ldr	r1, [fp, #-12]
   1bf8c:	mul	r0, r0, r1
   1bf90:	str	r0, [fp, #-16]
   1bf94:	b	1cb30 <__assert_fail@plt+0xb800>
   1bf98:	ldr	r0, [fp, #-12]
   1bf9c:	cmp	r0, #0
   1bfa0:	bge	1c0cc <__assert_fail@plt+0xad9c>
   1bfa4:	ldr	r0, [fp, #-8]
   1bfa8:	ldr	r0, [r0]
   1bfac:	cmp	r0, #0
   1bfb0:	bcs	1c044 <__assert_fail@plt+0xad14>
   1bfb4:	b	1bfd8 <__assert_fail@plt+0xaca8>
   1bfb8:	ldr	r0, [fp, #-8]
   1bfbc:	ldr	r0, [r0]
   1bfc0:	ldr	r1, [fp, #-12]
   1bfc4:	mvn	r2, #0
   1bfc8:	udiv	r1, r2, r1
   1bfcc:	cmp	r0, r1
   1bfd0:	bcc	1c178 <__assert_fail@plt+0xae48>
   1bfd4:	b	1c190 <__assert_fail@plt+0xae60>
   1bfd8:	b	1bfdc <__assert_fail@plt+0xacac>
   1bfdc:	ldr	r0, [pc, #2924]	; 1cb50 <__assert_fail@plt+0xb820>
   1bfe0:	ldr	r1, [fp, #-12]
   1bfe4:	cmp	r1, r0
   1bfe8:	blt	1c000 <__assert_fail@plt+0xacd0>
   1bfec:	b	1c00c <__assert_fail@plt+0xacdc>
   1bff0:	ldr	r0, [fp, #-12]
   1bff4:	movw	r1, #0
   1bff8:	cmp	r1, r0
   1bffc:	bge	1c00c <__assert_fail@plt+0xacdc>
   1c000:	movw	r0, #1
   1c004:	str	r0, [fp, #-40]	; 0xffffffd8
   1c008:	b	1c024 <__assert_fail@plt+0xacf4>
   1c00c:	ldr	r0, [fp, #-12]
   1c010:	movw	r1, #0
   1c014:	sub	r0, r1, r0
   1c018:	mvn	r1, #0
   1c01c:	udiv	r0, r1, r0
   1c020:	str	r0, [fp, #-40]	; 0xffffffd8
   1c024:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c028:	ldr	r1, [fp, #-8]
   1c02c:	ldr	r1, [r1]
   1c030:	mvn	r2, #0
   1c034:	sub	r1, r2, r1
   1c038:	cmp	r0, r1
   1c03c:	bls	1c178 <__assert_fail@plt+0xae48>
   1c040:	b	1c190 <__assert_fail@plt+0xae60>
   1c044:	b	1c048 <__assert_fail@plt+0xad18>
   1c048:	b	1c0ac <__assert_fail@plt+0xad7c>
   1c04c:	b	1c0ac <__assert_fail@plt+0xad7c>
   1c050:	ldr	r0, [fp, #-12]
   1c054:	cmn	r0, #1
   1c058:	bne	1c0ac <__assert_fail@plt+0xad7c>
   1c05c:	b	1c07c <__assert_fail@plt+0xad4c>
   1c060:	ldr	r0, [fp, #-8]
   1c064:	ldr	r0, [r0]
   1c068:	add	r0, r0, #0
   1c06c:	movw	r1, #0
   1c070:	cmp	r1, r0
   1c074:	bcc	1c178 <__assert_fail@plt+0xae48>
   1c078:	b	1c190 <__assert_fail@plt+0xae60>
   1c07c:	ldr	r0, [fp, #-8]
   1c080:	ldr	r0, [r0]
   1c084:	movw	r1, #0
   1c088:	cmp	r1, r0
   1c08c:	bcs	1c190 <__assert_fail@plt+0xae60>
   1c090:	ldr	r0, [fp, #-8]
   1c094:	ldr	r0, [r0]
   1c098:	sub	r0, r0, #1
   1c09c:	mvn	r1, #0
   1c0a0:	cmp	r1, r0
   1c0a4:	bcc	1c178 <__assert_fail@plt+0xae48>
   1c0a8:	b	1c190 <__assert_fail@plt+0xae60>
   1c0ac:	ldr	r0, [fp, #-12]
   1c0b0:	movw	r1, #0
   1c0b4:	sdiv	r0, r1, r0
   1c0b8:	ldr	r1, [fp, #-8]
   1c0bc:	ldr	r1, [r1]
   1c0c0:	cmp	r0, r1
   1c0c4:	bcc	1c178 <__assert_fail@plt+0xae48>
   1c0c8:	b	1c190 <__assert_fail@plt+0xae60>
   1c0cc:	ldr	r0, [fp, #-12]
   1c0d0:	cmp	r0, #0
   1c0d4:	bne	1c0dc <__assert_fail@plt+0xadac>
   1c0d8:	b	1c190 <__assert_fail@plt+0xae60>
   1c0dc:	ldr	r0, [fp, #-8]
   1c0e0:	ldr	r0, [r0]
   1c0e4:	cmp	r0, #0
   1c0e8:	bcs	1c15c <__assert_fail@plt+0xae2c>
   1c0ec:	b	1c0f4 <__assert_fail@plt+0xadc4>
   1c0f0:	b	1c0f8 <__assert_fail@plt+0xadc8>
   1c0f4:	b	1c13c <__assert_fail@plt+0xae0c>
   1c0f8:	ldr	r0, [fp, #-8]
   1c0fc:	ldr	r0, [r0]
   1c100:	cmn	r0, #1
   1c104:	bne	1c13c <__assert_fail@plt+0xae0c>
   1c108:	b	1c10c <__assert_fail@plt+0xaddc>
   1c10c:	ldr	r0, [fp, #-12]
   1c110:	add	r0, r0, #0
   1c114:	movw	r1, #0
   1c118:	cmp	r1, r0
   1c11c:	blt	1c178 <__assert_fail@plt+0xae48>
   1c120:	b	1c190 <__assert_fail@plt+0xae60>
   1c124:	ldr	r0, [fp, #-12]
   1c128:	sub	r0, r0, #1
   1c12c:	mvn	r1, #0
   1c130:	cmp	r1, r0
   1c134:	blt	1c178 <__assert_fail@plt+0xae48>
   1c138:	b	1c190 <__assert_fail@plt+0xae60>
   1c13c:	ldr	r0, [fp, #-8]
   1c140:	ldr	r0, [r0]
   1c144:	movw	r1, #0
   1c148:	udiv	r0, r1, r0
   1c14c:	ldr	r1, [fp, #-12]
   1c150:	cmp	r0, r1
   1c154:	bcc	1c178 <__assert_fail@plt+0xae48>
   1c158:	b	1c190 <__assert_fail@plt+0xae60>
   1c15c:	ldr	r0, [fp, #-12]
   1c160:	mvn	r1, #0
   1c164:	udiv	r0, r1, r0
   1c168:	ldr	r1, [fp, #-8]
   1c16c:	ldr	r1, [r1]
   1c170:	cmp	r0, r1
   1c174:	bcs	1c190 <__assert_fail@plt+0xae60>
   1c178:	ldr	r0, [fp, #-8]
   1c17c:	ldr	r0, [r0]
   1c180:	ldr	r1, [fp, #-12]
   1c184:	mul	r0, r0, r1
   1c188:	str	r0, [fp, #-16]
   1c18c:	b	1cafc <__assert_fail@plt+0xb7cc>
   1c190:	ldr	r0, [fp, #-8]
   1c194:	ldr	r0, [r0]
   1c198:	ldr	r1, [fp, #-12]
   1c19c:	mul	r0, r0, r1
   1c1a0:	str	r0, [fp, #-16]
   1c1a4:	b	1cb30 <__assert_fail@plt+0xb800>
   1c1a8:	b	1c1ac <__assert_fail@plt+0xae7c>
   1c1ac:	b	1c3a8 <__assert_fail@plt+0xb078>
   1c1b0:	ldr	r0, [fp, #-12]
   1c1b4:	cmp	r0, #0
   1c1b8:	bge	1c2d8 <__assert_fail@plt+0xafa8>
   1c1bc:	ldr	r0, [fp, #-8]
   1c1c0:	ldr	r0, [r0]
   1c1c4:	cmp	r0, #0
   1c1c8:	bcs	1c25c <__assert_fail@plt+0xaf2c>
   1c1cc:	b	1c1d0 <__assert_fail@plt+0xaea0>
   1c1d0:	ldr	r0, [pc, #2428]	; 1cb54 <__assert_fail@plt+0xb824>
   1c1d4:	ldr	r1, [fp, #-8]
   1c1d8:	ldr	r1, [r1]
   1c1dc:	ldr	r2, [fp, #-12]
   1c1e0:	sdiv	r0, r0, r2
   1c1e4:	cmp	r1, r0
   1c1e8:	bcc	1c378 <__assert_fail@plt+0xb048>
   1c1ec:	b	1c390 <__assert_fail@plt+0xb060>
   1c1f0:	b	1c1f4 <__assert_fail@plt+0xaec4>
   1c1f4:	ldr	r0, [pc, #2388]	; 1cb50 <__assert_fail@plt+0xb820>
   1c1f8:	ldr	r1, [fp, #-12]
   1c1fc:	cmp	r1, r0
   1c200:	blt	1c218 <__assert_fail@plt+0xaee8>
   1c204:	b	1c224 <__assert_fail@plt+0xaef4>
   1c208:	ldr	r0, [fp, #-12]
   1c20c:	movw	r1, #0
   1c210:	cmp	r1, r0
   1c214:	bge	1c224 <__assert_fail@plt+0xaef4>
   1c218:	movw	r0, #0
   1c21c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c220:	b	1c23c <__assert_fail@plt+0xaf0c>
   1c224:	ldr	r0, [pc, #2344]	; 1cb54 <__assert_fail@plt+0xb824>
   1c228:	ldr	r1, [fp, #-12]
   1c22c:	movw	r2, #0
   1c230:	sub	r1, r2, r1
   1c234:	sdiv	r0, r0, r1
   1c238:	str	r0, [fp, #-44]	; 0xffffffd4
   1c23c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c240:	ldr	r1, [fp, #-8]
   1c244:	ldr	r1, [r1]
   1c248:	mvn	r2, #0
   1c24c:	sub	r1, r2, r1
   1c250:	cmp	r0, r1
   1c254:	bls	1c378 <__assert_fail@plt+0xb048>
   1c258:	b	1c390 <__assert_fail@plt+0xb060>
   1c25c:	ldr	r0, [fp, #-12]
   1c260:	cmn	r0, #1
   1c264:	bne	1c2b8 <__assert_fail@plt+0xaf88>
   1c268:	b	1c288 <__assert_fail@plt+0xaf58>
   1c26c:	ldr	r0, [fp, #-8]
   1c270:	ldr	r0, [r0]
   1c274:	add	r0, r0, #-2147483648	; 0x80000000
   1c278:	movw	r1, #0
   1c27c:	cmp	r1, r0
   1c280:	bcc	1c378 <__assert_fail@plt+0xb048>
   1c284:	b	1c390 <__assert_fail@plt+0xb060>
   1c288:	ldr	r0, [fp, #-8]
   1c28c:	ldr	r0, [r0]
   1c290:	movw	r1, #0
   1c294:	cmp	r1, r0
   1c298:	bcs	1c390 <__assert_fail@plt+0xb060>
   1c29c:	ldr	r0, [pc, #2224]	; 1cb54 <__assert_fail@plt+0xb824>
   1c2a0:	ldr	r1, [fp, #-8]
   1c2a4:	ldr	r1, [r1]
   1c2a8:	sub	r1, r1, #1
   1c2ac:	cmp	r0, r1
   1c2b0:	bcc	1c378 <__assert_fail@plt+0xb048>
   1c2b4:	b	1c390 <__assert_fail@plt+0xb060>
   1c2b8:	ldr	r0, [pc, #2200]	; 1cb58 <__assert_fail@plt+0xb828>
   1c2bc:	ldr	r1, [fp, #-12]
   1c2c0:	sdiv	r0, r0, r1
   1c2c4:	ldr	r1, [fp, #-8]
   1c2c8:	ldr	r1, [r1]
   1c2cc:	cmp	r0, r1
   1c2d0:	bcc	1c378 <__assert_fail@plt+0xb048>
   1c2d4:	b	1c390 <__assert_fail@plt+0xb060>
   1c2d8:	ldr	r0, [fp, #-12]
   1c2dc:	cmp	r0, #0
   1c2e0:	bne	1c2e8 <__assert_fail@plt+0xafb8>
   1c2e4:	b	1c390 <__assert_fail@plt+0xb060>
   1c2e8:	ldr	r0, [fp, #-8]
   1c2ec:	ldr	r0, [r0]
   1c2f0:	cmp	r0, #0
   1c2f4:	bcs	1c35c <__assert_fail@plt+0xb02c>
   1c2f8:	ldr	r0, [fp, #-8]
   1c2fc:	ldr	r0, [r0]
   1c300:	cmn	r0, #1
   1c304:	bne	1c33c <__assert_fail@plt+0xb00c>
   1c308:	b	1c30c <__assert_fail@plt+0xafdc>
   1c30c:	ldr	r0, [fp, #-12]
   1c310:	add	r0, r0, #-2147483648	; 0x80000000
   1c314:	movw	r1, #0
   1c318:	cmp	r1, r0
   1c31c:	blt	1c378 <__assert_fail@plt+0xb048>
   1c320:	b	1c390 <__assert_fail@plt+0xb060>
   1c324:	ldr	r0, [pc, #2088]	; 1cb54 <__assert_fail@plt+0xb824>
   1c328:	ldr	r1, [fp, #-12]
   1c32c:	sub	r1, r1, #1
   1c330:	cmp	r0, r1
   1c334:	blt	1c378 <__assert_fail@plt+0xb048>
   1c338:	b	1c390 <__assert_fail@plt+0xb060>
   1c33c:	ldr	r0, [pc, #2068]	; 1cb58 <__assert_fail@plt+0xb828>
   1c340:	ldr	r1, [fp, #-8]
   1c344:	ldr	r1, [r1]
   1c348:	udiv	r0, r0, r1
   1c34c:	ldr	r1, [fp, #-12]
   1c350:	cmp	r0, r1
   1c354:	bcc	1c378 <__assert_fail@plt+0xb048>
   1c358:	b	1c390 <__assert_fail@plt+0xb060>
   1c35c:	ldr	r0, [pc, #2032]	; 1cb54 <__assert_fail@plt+0xb824>
   1c360:	ldr	r1, [fp, #-12]
   1c364:	sdiv	r0, r0, r1
   1c368:	ldr	r1, [fp, #-8]
   1c36c:	ldr	r1, [r1]
   1c370:	cmp	r0, r1
   1c374:	bcs	1c390 <__assert_fail@plt+0xb060>
   1c378:	ldr	r0, [fp, #-8]
   1c37c:	ldr	r0, [r0]
   1c380:	ldr	r1, [fp, #-12]
   1c384:	mul	r0, r0, r1
   1c388:	str	r0, [fp, #-16]
   1c38c:	b	1cafc <__assert_fail@plt+0xb7cc>
   1c390:	ldr	r0, [fp, #-8]
   1c394:	ldr	r0, [r0]
   1c398:	ldr	r1, [fp, #-12]
   1c39c:	mul	r0, r0, r1
   1c3a0:	str	r0, [fp, #-16]
   1c3a4:	b	1cb30 <__assert_fail@plt+0xb800>
   1c3a8:	ldr	r0, [fp, #-12]
   1c3ac:	cmp	r0, #0
   1c3b0:	bge	1c4dc <__assert_fail@plt+0xb1ac>
   1c3b4:	ldr	r0, [fp, #-8]
   1c3b8:	ldr	r0, [r0]
   1c3bc:	cmp	r0, #0
   1c3c0:	bcs	1c454 <__assert_fail@plt+0xb124>
   1c3c4:	b	1c3e8 <__assert_fail@plt+0xb0b8>
   1c3c8:	ldr	r0, [fp, #-8]
   1c3cc:	ldr	r0, [r0]
   1c3d0:	ldr	r1, [fp, #-12]
   1c3d4:	mvn	r2, #0
   1c3d8:	udiv	r1, r2, r1
   1c3dc:	cmp	r0, r1
   1c3e0:	bcc	1c58c <__assert_fail@plt+0xb25c>
   1c3e4:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c3e8:	b	1c3ec <__assert_fail@plt+0xb0bc>
   1c3ec:	ldr	r0, [pc, #1884]	; 1cb50 <__assert_fail@plt+0xb820>
   1c3f0:	ldr	r1, [fp, #-12]
   1c3f4:	cmp	r1, r0
   1c3f8:	blt	1c410 <__assert_fail@plt+0xb0e0>
   1c3fc:	b	1c41c <__assert_fail@plt+0xb0ec>
   1c400:	ldr	r0, [fp, #-12]
   1c404:	movw	r1, #0
   1c408:	cmp	r1, r0
   1c40c:	bge	1c41c <__assert_fail@plt+0xb0ec>
   1c410:	movw	r0, #1
   1c414:	str	r0, [fp, #-48]	; 0xffffffd0
   1c418:	b	1c434 <__assert_fail@plt+0xb104>
   1c41c:	ldr	r0, [fp, #-12]
   1c420:	movw	r1, #0
   1c424:	sub	r0, r1, r0
   1c428:	mvn	r1, #0
   1c42c:	udiv	r0, r1, r0
   1c430:	str	r0, [fp, #-48]	; 0xffffffd0
   1c434:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c438:	ldr	r1, [fp, #-8]
   1c43c:	ldr	r1, [r1]
   1c440:	mvn	r2, #0
   1c444:	sub	r1, r2, r1
   1c448:	cmp	r0, r1
   1c44c:	bls	1c58c <__assert_fail@plt+0xb25c>
   1c450:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c454:	b	1c458 <__assert_fail@plt+0xb128>
   1c458:	b	1c4bc <__assert_fail@plt+0xb18c>
   1c45c:	b	1c4bc <__assert_fail@plt+0xb18c>
   1c460:	ldr	r0, [fp, #-12]
   1c464:	cmn	r0, #1
   1c468:	bne	1c4bc <__assert_fail@plt+0xb18c>
   1c46c:	b	1c48c <__assert_fail@plt+0xb15c>
   1c470:	ldr	r0, [fp, #-8]
   1c474:	ldr	r0, [r0]
   1c478:	add	r0, r0, #0
   1c47c:	movw	r1, #0
   1c480:	cmp	r1, r0
   1c484:	bcc	1c58c <__assert_fail@plt+0xb25c>
   1c488:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c48c:	ldr	r0, [fp, #-8]
   1c490:	ldr	r0, [r0]
   1c494:	movw	r1, #0
   1c498:	cmp	r1, r0
   1c49c:	bcs	1c5a4 <__assert_fail@plt+0xb274>
   1c4a0:	ldr	r0, [fp, #-8]
   1c4a4:	ldr	r0, [r0]
   1c4a8:	sub	r0, r0, #1
   1c4ac:	mvn	r1, #0
   1c4b0:	cmp	r1, r0
   1c4b4:	bcc	1c58c <__assert_fail@plt+0xb25c>
   1c4b8:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c4bc:	ldr	r0, [fp, #-12]
   1c4c0:	movw	r1, #0
   1c4c4:	sdiv	r0, r1, r0
   1c4c8:	ldr	r1, [fp, #-8]
   1c4cc:	ldr	r1, [r1]
   1c4d0:	cmp	r0, r1
   1c4d4:	bcc	1c58c <__assert_fail@plt+0xb25c>
   1c4d8:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c4dc:	ldr	r0, [fp, #-12]
   1c4e0:	cmp	r0, #0
   1c4e4:	bne	1c4ec <__assert_fail@plt+0xb1bc>
   1c4e8:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c4ec:	ldr	r0, [fp, #-8]
   1c4f0:	ldr	r0, [r0]
   1c4f4:	cmp	r0, #0
   1c4f8:	bcs	1c570 <__assert_fail@plt+0xb240>
   1c4fc:	b	1c504 <__assert_fail@plt+0xb1d4>
   1c500:	b	1c508 <__assert_fail@plt+0xb1d8>
   1c504:	b	1c54c <__assert_fail@plt+0xb21c>
   1c508:	ldr	r0, [fp, #-8]
   1c50c:	ldr	r0, [r0]
   1c510:	cmn	r0, #1
   1c514:	bne	1c54c <__assert_fail@plt+0xb21c>
   1c518:	b	1c51c <__assert_fail@plt+0xb1ec>
   1c51c:	ldr	r0, [fp, #-12]
   1c520:	add	r0, r0, #0
   1c524:	movw	r1, #0
   1c528:	cmp	r1, r0
   1c52c:	blt	1c58c <__assert_fail@plt+0xb25c>
   1c530:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c534:	ldr	r0, [fp, #-12]
   1c538:	sub	r0, r0, #1
   1c53c:	mvn	r1, #0
   1c540:	cmp	r1, r0
   1c544:	blt	1c58c <__assert_fail@plt+0xb25c>
   1c548:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c54c:	ldr	r0, [fp, #-8]
   1c550:	ldr	r0, [r0]
   1c554:	movw	r1, #0
   1c558:	udiv	r0, r1, r0
   1c55c:	ldr	r1, [fp, #-12]
   1c560:	cmp	r0, r1
   1c564:	bcc	1c58c <__assert_fail@plt+0xb25c>
   1c568:	b	1c5a4 <__assert_fail@plt+0xb274>
   1c56c:	andhi	r0, r0, r1
   1c570:	ldr	r0, [fp, #-12]
   1c574:	mvn	r1, #0
   1c578:	udiv	r0, r1, r0
   1c57c:	ldr	r1, [fp, #-8]
   1c580:	ldr	r1, [r1]
   1c584:	cmp	r0, r1
   1c588:	bcs	1c5a4 <__assert_fail@plt+0xb274>
   1c58c:	ldr	r0, [fp, #-8]
   1c590:	ldr	r0, [r0]
   1c594:	ldr	r1, [fp, #-12]
   1c598:	mul	r0, r0, r1
   1c59c:	str	r0, [fp, #-16]
   1c5a0:	b	1cafc <__assert_fail@plt+0xb7cc>
   1c5a4:	ldr	r0, [fp, #-8]
   1c5a8:	ldr	r0, [r0]
   1c5ac:	ldr	r1, [fp, #-12]
   1c5b0:	mul	r0, r0, r1
   1c5b4:	str	r0, [fp, #-16]
   1c5b8:	b	1cb30 <__assert_fail@plt+0xb800>
   1c5bc:	b	1c878 <__assert_fail@plt+0xb548>
   1c5c0:	ldr	r0, [fp, #-12]
   1c5c4:	cmp	r0, #0
   1c5c8:	bge	1c764 <__assert_fail@plt+0xb434>
   1c5cc:	ldr	r0, [fp, #-8]
   1c5d0:	ldr	r0, [r0]
   1c5d4:	cmp	r0, #0
   1c5d8:	bcs	1c6c8 <__assert_fail@plt+0xb398>
   1c5dc:	b	1c5e0 <__assert_fail@plt+0xb2b0>
   1c5e0:	ldr	r0, [fp, #-8]
   1c5e4:	ldr	r0, [r0]
   1c5e8:	ldr	r1, [fp, #-12]
   1c5ec:	asr	r3, r1, #31
   1c5f0:	mvn	r2, #0
   1c5f4:	mvn	ip, #-2147483648	; 0x80000000
   1c5f8:	str	r0, [fp, #-52]	; 0xffffffcc
   1c5fc:	mov	r0, r2
   1c600:	str	r1, [fp, #-56]	; 0xffffffc8
   1c604:	mov	r1, ip
   1c608:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c60c:	bl	2142c <__assert_fail@plt+0x100fc>
   1c610:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c614:	subs	r0, r2, r0
   1c618:	rscs	r1, r1, #0
   1c61c:	str	r0, [fp, #-60]	; 0xffffffc4
   1c620:	str	r1, [fp, #-64]	; 0xffffffc0
   1c624:	blt	1c848 <__assert_fail@plt+0xb518>
   1c628:	b	1c860 <__assert_fail@plt+0xb530>
   1c62c:	b	1c630 <__assert_fail@plt+0xb300>
   1c630:	ldr	r0, [pc, #1304]	; 1cb50 <__assert_fail@plt+0xb820>
   1c634:	ldr	r1, [fp, #-12]
   1c638:	cmp	r1, r0
   1c63c:	blt	1c654 <__assert_fail@plt+0xb324>
   1c640:	b	1c668 <__assert_fail@plt+0xb338>
   1c644:	ldr	r0, [fp, #-12]
   1c648:	movw	r1, #0
   1c64c:	cmp	r1, r0
   1c650:	bge	1c668 <__assert_fail@plt+0xb338>
   1c654:	mov	r0, #0
   1c658:	mvn	r1, #0
   1c65c:	str	r1, [fp, #-68]	; 0xffffffbc
   1c660:	str	r0, [fp, #-72]	; 0xffffffb8
   1c664:	b	1c69c <__assert_fail@plt+0xb36c>
   1c668:	ldr	r0, [fp, #-12]
   1c66c:	rsb	r0, r0, #0
   1c670:	asr	r3, r0, #31
   1c674:	mvn	r1, #0
   1c678:	mvn	r2, #-2147483648	; 0x80000000
   1c67c:	str	r0, [fp, #-76]	; 0xffffffb4
   1c680:	mov	r0, r1
   1c684:	mov	r1, r2
   1c688:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c68c:	bl	2142c <__assert_fail@plt+0x100fc>
   1c690:	str	r0, [fp, #-68]	; 0xffffffbc
   1c694:	str	r1, [fp, #-72]	; 0xffffffb8
   1c698:	b	1c69c <__assert_fail@plt+0xb36c>
   1c69c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c6a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c6a4:	ldr	r2, [fp, #-8]
   1c6a8:	ldr	r2, [r2]
   1c6ac:	mvn	r2, r2
   1c6b0:	subs	r1, r2, r1
   1c6b4:	rscs	r0, r0, #0
   1c6b8:	str	r1, [fp, #-80]	; 0xffffffb0
   1c6bc:	str	r0, [fp, #-84]	; 0xffffffac
   1c6c0:	bge	1c848 <__assert_fail@plt+0xb518>
   1c6c4:	b	1c860 <__assert_fail@plt+0xb530>
   1c6c8:	ldr	r0, [fp, #-12]
   1c6cc:	cmn	r0, #1
   1c6d0:	bne	1c720 <__assert_fail@plt+0xb3f0>
   1c6d4:	b	1c6fc <__assert_fail@plt+0xb3cc>
   1c6d8:	ldr	r0, [fp, #-8]
   1c6dc:	ldr	r0, [r0]
   1c6e0:	rsbs	r0, r0, #0
   1c6e4:	mov	r1, #0
   1c6e8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1c6ec:	str	r0, [fp, #-88]	; 0xffffffa8
   1c6f0:	str	r1, [sp, #92]	; 0x5c
   1c6f4:	blt	1c848 <__assert_fail@plt+0xb518>
   1c6f8:	b	1c860 <__assert_fail@plt+0xb530>
   1c6fc:	ldr	r0, [fp, #-8]
   1c700:	ldr	r0, [r0]
   1c704:	movw	r1, #0
   1c708:	cmp	r1, r0
   1c70c:	bcs	1c860 <__assert_fail@plt+0xb530>
   1c710:	mov	r0, #0
   1c714:	cmp	r0, #0
   1c718:	bne	1c848 <__assert_fail@plt+0xb518>
   1c71c:	b	1c860 <__assert_fail@plt+0xb530>
   1c720:	ldr	r0, [fp, #-12]
   1c724:	asr	r3, r0, #31
   1c728:	mov	r1, #0
   1c72c:	mov	r2, #-2147483648	; 0x80000000
   1c730:	str	r0, [sp, #88]	; 0x58
   1c734:	mov	r0, r1
   1c738:	mov	r1, r2
   1c73c:	ldr	r2, [sp, #88]	; 0x58
   1c740:	bl	2142c <__assert_fail@plt+0x100fc>
   1c744:	ldr	r2, [fp, #-8]
   1c748:	ldr	r2, [r2]
   1c74c:	subs	r0, r0, r2
   1c750:	sbcs	r1, r1, #0
   1c754:	str	r0, [sp, #84]	; 0x54
   1c758:	str	r1, [sp, #80]	; 0x50
   1c75c:	blt	1c848 <__assert_fail@plt+0xb518>
   1c760:	b	1c860 <__assert_fail@plt+0xb530>
   1c764:	ldr	r0, [fp, #-12]
   1c768:	cmp	r0, #0
   1c76c:	bne	1c774 <__assert_fail@plt+0xb444>
   1c770:	b	1c860 <__assert_fail@plt+0xb530>
   1c774:	ldr	r0, [fp, #-8]
   1c778:	ldr	r0, [r0]
   1c77c:	cmp	r0, #0
   1c780:	bcs	1c804 <__assert_fail@plt+0xb4d4>
   1c784:	ldr	r0, [fp, #-8]
   1c788:	ldr	r0, [r0]
   1c78c:	cmn	r0, #1
   1c790:	bne	1c7cc <__assert_fail@plt+0xb49c>
   1c794:	b	1c798 <__assert_fail@plt+0xb468>
   1c798:	ldr	r0, [fp, #-12]
   1c79c:	mov	r1, #-2147483648	; 0x80000000
   1c7a0:	add	r1, r1, r0, asr #31
   1c7a4:	rsbs	r0, r0, #0
   1c7a8:	rscs	r1, r1, #0
   1c7ac:	str	r0, [sp, #76]	; 0x4c
   1c7b0:	str	r1, [sp, #72]	; 0x48
   1c7b4:	blt	1c848 <__assert_fail@plt+0xb518>
   1c7b8:	b	1c860 <__assert_fail@plt+0xb530>
   1c7bc:	mov	r0, #0
   1c7c0:	cmp	r0, #0
   1c7c4:	bne	1c848 <__assert_fail@plt+0xb518>
   1c7c8:	b	1c860 <__assert_fail@plt+0xb530>
   1c7cc:	ldr	r0, [fp, #-8]
   1c7d0:	ldr	r2, [r0]
   1c7d4:	mov	r1, #-2147483648	; 0x80000000
   1c7d8:	mov	r0, #0
   1c7dc:	str	r0, [sp, #68]	; 0x44
   1c7e0:	ldr	r3, [sp, #68]	; 0x44
   1c7e4:	bl	2142c <__assert_fail@plt+0x100fc>
   1c7e8:	ldr	r2, [fp, #-12]
   1c7ec:	subs	r0, r0, r2
   1c7f0:	sbcs	r1, r1, r2, asr #31
   1c7f4:	str	r0, [sp, #64]	; 0x40
   1c7f8:	str	r1, [sp, #60]	; 0x3c
   1c7fc:	blt	1c848 <__assert_fail@plt+0xb518>
   1c800:	b	1c860 <__assert_fail@plt+0xb530>
   1c804:	ldr	r0, [fp, #-12]
   1c808:	asr	r3, r0, #31
   1c80c:	mvn	r1, #0
   1c810:	mvn	r2, #-2147483648	; 0x80000000
   1c814:	str	r0, [sp, #56]	; 0x38
   1c818:	mov	r0, r1
   1c81c:	mov	r1, r2
   1c820:	ldr	r2, [sp, #56]	; 0x38
   1c824:	bl	2142c <__assert_fail@plt+0x100fc>
   1c828:	ldr	r2, [fp, #-8]
   1c82c:	ldr	r2, [r2]
   1c830:	subs	r0, r0, r2
   1c834:	sbcs	r1, r1, #0
   1c838:	str	r0, [sp, #52]	; 0x34
   1c83c:	str	r1, [sp, #48]	; 0x30
   1c840:	bge	1c860 <__assert_fail@plt+0xb530>
   1c844:	b	1c848 <__assert_fail@plt+0xb518>
   1c848:	ldr	r0, [fp, #-8]
   1c84c:	ldr	r0, [r0]
   1c850:	ldr	r1, [fp, #-12]
   1c854:	mul	r0, r0, r1
   1c858:	str	r0, [fp, #-16]
   1c85c:	b	1cafc <__assert_fail@plt+0xb7cc>
   1c860:	ldr	r0, [fp, #-8]
   1c864:	ldr	r0, [r0]
   1c868:	ldr	r1, [fp, #-12]
   1c86c:	mul	r0, r0, r1
   1c870:	str	r0, [fp, #-16]
   1c874:	b	1cb30 <__assert_fail@plt+0xb800>
   1c878:	ldr	r0, [fp, #-12]
   1c87c:	cmp	r0, #0
   1c880:	bge	1c9fc <__assert_fail@plt+0xb6cc>
   1c884:	ldr	r0, [fp, #-8]
   1c888:	ldr	r0, [r0]
   1c88c:	cmp	r0, #0
   1c890:	bcs	1c974 <__assert_fail@plt+0xb644>
   1c894:	b	1c8e0 <__assert_fail@plt+0xb5b0>
   1c898:	ldr	r0, [fp, #-8]
   1c89c:	ldr	r0, [r0]
   1c8a0:	ldr	r1, [fp, #-12]
   1c8a4:	asr	r3, r1, #31
   1c8a8:	mvn	r2, #0
   1c8ac:	str	r0, [sp, #44]	; 0x2c
   1c8b0:	mov	r0, r2
   1c8b4:	str	r1, [sp, #40]	; 0x28
   1c8b8:	mov	r1, r2
   1c8bc:	ldr	r2, [sp, #40]	; 0x28
   1c8c0:	bl	21500 <__assert_fail@plt+0x101d0>
   1c8c4:	ldr	r2, [sp, #44]	; 0x2c
   1c8c8:	subs	r0, r2, r0
   1c8cc:	rscs	r1, r1, #0
   1c8d0:	str	r0, [sp, #36]	; 0x24
   1c8d4:	str	r1, [sp, #32]
   1c8d8:	bcc	1cacc <__assert_fail@plt+0xb79c>
   1c8dc:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1c8e0:	b	1c8e4 <__assert_fail@plt+0xb5b4>
   1c8e4:	ldr	r0, [pc, #612]	; 1cb50 <__assert_fail@plt+0xb820>
   1c8e8:	ldr	r1, [fp, #-12]
   1c8ec:	cmp	r1, r0
   1c8f0:	blt	1c908 <__assert_fail@plt+0xb5d8>
   1c8f4:	b	1c91c <__assert_fail@plt+0xb5ec>
   1c8f8:	ldr	r0, [fp, #-12]
   1c8fc:	movw	r1, #0
   1c900:	cmp	r1, r0
   1c904:	bge	1c91c <__assert_fail@plt+0xb5ec>
   1c908:	mov	r0, #1
   1c90c:	mvn	r1, #0
   1c910:	str	r1, [sp, #28]
   1c914:	str	r0, [sp, #24]
   1c918:	b	1c948 <__assert_fail@plt+0xb618>
   1c91c:	ldr	r0, [fp, #-12]
   1c920:	rsb	r0, r0, #0
   1c924:	asr	r3, r0, #31
   1c928:	mvn	r1, #0
   1c92c:	str	r0, [sp, #20]
   1c930:	mov	r0, r1
   1c934:	ldr	r2, [sp, #20]
   1c938:	bl	21500 <__assert_fail@plt+0x101d0>
   1c93c:	str	r0, [sp, #28]
   1c940:	str	r1, [sp, #24]
   1c944:	b	1c948 <__assert_fail@plt+0xb618>
   1c948:	ldr	r0, [sp, #24]
   1c94c:	ldr	r1, [sp, #28]
   1c950:	ldr	r2, [fp, #-8]
   1c954:	ldr	r2, [r2]
   1c958:	mvn	r2, r2
   1c95c:	subs	r1, r2, r1
   1c960:	rscs	r0, r0, #0
   1c964:	str	r1, [sp, #16]
   1c968:	str	r0, [sp, #12]
   1c96c:	bcs	1cacc <__assert_fail@plt+0xb79c>
   1c970:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1c974:	b	1c978 <__assert_fail@plt+0xb648>
   1c978:	b	1c9dc <__assert_fail@plt+0xb6ac>
   1c97c:	b	1c9dc <__assert_fail@plt+0xb6ac>
   1c980:	ldr	r0, [fp, #-12]
   1c984:	cmn	r0, #1
   1c988:	bne	1c9dc <__assert_fail@plt+0xb6ac>
   1c98c:	b	1c9ac <__assert_fail@plt+0xb67c>
   1c990:	ldr	r0, [fp, #-8]
   1c994:	ldr	r0, [r0]
   1c998:	add	r0, r0, #0
   1c99c:	movw	r1, #0
   1c9a0:	cmp	r1, r0
   1c9a4:	bcc	1cacc <__assert_fail@plt+0xb79c>
   1c9a8:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1c9ac:	ldr	r0, [fp, #-8]
   1c9b0:	ldr	r0, [r0]
   1c9b4:	movw	r1, #0
   1c9b8:	cmp	r1, r0
   1c9bc:	bcs	1cae4 <__assert_fail@plt+0xb7b4>
   1c9c0:	ldr	r0, [fp, #-8]
   1c9c4:	ldr	r0, [r0]
   1c9c8:	sub	r0, r0, #1
   1c9cc:	mvn	r1, #0
   1c9d0:	cmp	r1, r0
   1c9d4:	bcc	1cacc <__assert_fail@plt+0xb79c>
   1c9d8:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1c9dc:	ldr	r0, [fp, #-12]
   1c9e0:	movw	r1, #0
   1c9e4:	sdiv	r0, r1, r0
   1c9e8:	ldr	r1, [fp, #-8]
   1c9ec:	ldr	r1, [r1]
   1c9f0:	cmp	r0, r1
   1c9f4:	bcc	1cacc <__assert_fail@plt+0xb79c>
   1c9f8:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1c9fc:	ldr	r0, [fp, #-12]
   1ca00:	cmp	r0, #0
   1ca04:	bne	1ca0c <__assert_fail@plt+0xb6dc>
   1ca08:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1ca0c:	ldr	r0, [fp, #-8]
   1ca10:	ldr	r0, [r0]
   1ca14:	cmp	r0, #0
   1ca18:	bcs	1ca90 <__assert_fail@plt+0xb760>
   1ca1c:	b	1ca24 <__assert_fail@plt+0xb6f4>
   1ca20:	b	1ca2c <__assert_fail@plt+0xb6fc>
   1ca24:	b	1ca70 <__assert_fail@plt+0xb740>
   1ca28:			; <UNDEFINED> instruction: 0xffff8000
   1ca2c:	ldr	r0, [fp, #-8]
   1ca30:	ldr	r0, [r0]
   1ca34:	cmn	r0, #1
   1ca38:	bne	1ca70 <__assert_fail@plt+0xb740>
   1ca3c:	b	1ca40 <__assert_fail@plt+0xb710>
   1ca40:	ldr	r0, [fp, #-12]
   1ca44:	add	r0, r0, #0
   1ca48:	movw	r1, #0
   1ca4c:	cmp	r1, r0
   1ca50:	blt	1cacc <__assert_fail@plt+0xb79c>
   1ca54:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1ca58:	ldr	r0, [fp, #-12]
   1ca5c:	sub	r0, r0, #1
   1ca60:	mvn	r1, #0
   1ca64:	cmp	r1, r0
   1ca68:	blt	1cacc <__assert_fail@plt+0xb79c>
   1ca6c:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1ca70:	ldr	r0, [fp, #-8]
   1ca74:	ldr	r0, [r0]
   1ca78:	movw	r1, #0
   1ca7c:	udiv	r0, r1, r0
   1ca80:	ldr	r1, [fp, #-12]
   1ca84:	cmp	r0, r1
   1ca88:	bcc	1cacc <__assert_fail@plt+0xb79c>
   1ca8c:	b	1cae4 <__assert_fail@plt+0xb7b4>
   1ca90:	ldr	r0, [fp, #-12]
   1ca94:	asr	r3, r0, #31
   1ca98:	mvn	r1, #0
   1ca9c:	str	r0, [sp, #8]
   1caa0:	mov	r0, r1
   1caa4:	ldr	r2, [sp, #8]
   1caa8:	bl	21500 <__assert_fail@plt+0x101d0>
   1caac:	ldr	r2, [fp, #-8]
   1cab0:	ldr	r2, [r2]
   1cab4:	subs	r0, r0, r2
   1cab8:	sbcs	r1, r1, #0
   1cabc:	str	r0, [sp, #4]
   1cac0:	str	r1, [sp]
   1cac4:	bcs	1cae4 <__assert_fail@plt+0xb7b4>
   1cac8:	b	1cacc <__assert_fail@plt+0xb79c>
   1cacc:	ldr	r0, [fp, #-8]
   1cad0:	ldr	r0, [r0]
   1cad4:	ldr	r1, [fp, #-12]
   1cad8:	mul	r0, r0, r1
   1cadc:	str	r0, [fp, #-16]
   1cae0:	b	1cafc <__assert_fail@plt+0xb7cc>
   1cae4:	ldr	r0, [fp, #-8]
   1cae8:	ldr	r0, [r0]
   1caec:	ldr	r1, [fp, #-12]
   1caf0:	mul	r0, r0, r1
   1caf4:	str	r0, [fp, #-16]
   1caf8:	b	1cb30 <__assert_fail@plt+0xb800>
   1cafc:	ldr	r0, [fp, #-8]
   1cb00:	ldr	r0, [r0]
   1cb04:	cmp	r0, #0
   1cb08:	movw	r0, #0
   1cb0c:	movcc	r0, #1
   1cb10:	tst	r0, #1
   1cb14:	movw	r0, #0
   1cb18:	mvneq	r0, #0
   1cb1c:	ldr	r1, [fp, #-8]
   1cb20:	str	r0, [r1]
   1cb24:	movw	r0, #1
   1cb28:	str	r0, [fp, #-4]
   1cb2c:	b	1cb44 <__assert_fail@plt+0xb814>
   1cb30:	ldr	r0, [fp, #-16]
   1cb34:	ldr	r1, [fp, #-8]
   1cb38:	str	r0, [r1]
   1cb3c:	movw	r0, #0
   1cb40:	str	r0, [fp, #-4]
   1cb44:	ldr	r0, [fp, #-4]
   1cb48:	mov	sp, fp
   1cb4c:	pop	{fp, pc}
   1cb50:	andhi	r0, r0, r1
   1cb54:	svcvc	0x00ffffff
   1cb58:	andhi	r0, r0, r0
   1cb5c:	push	{fp, lr}
   1cb60:	mov	fp, sp
   1cb64:	sub	sp, sp, #16
   1cb68:	str	r0, [fp, #-4]
   1cb6c:	str	r1, [sp, #8]
   1cb70:	str	r2, [sp, #4]
   1cb74:	movw	r0, #0
   1cb78:	str	r0, [sp]
   1cb7c:	ldr	r0, [sp, #4]
   1cb80:	mvn	r1, #0
   1cb84:	add	r1, r0, r1
   1cb88:	str	r1, [sp, #4]
   1cb8c:	cmp	r0, #0
   1cb90:	beq	1cbb0 <__assert_fail@plt+0xb880>
   1cb94:	ldr	r0, [fp, #-4]
   1cb98:	ldr	r1, [sp, #8]
   1cb9c:	bl	1b51c <__assert_fail@plt+0xa1ec>
   1cba0:	ldr	r1, [sp]
   1cba4:	orr	r0, r1, r0
   1cba8:	str	r0, [sp]
   1cbac:	b	1cb7c <__assert_fail@plt+0xb84c>
   1cbb0:	ldr	r0, [sp]
   1cbb4:	mov	sp, fp
   1cbb8:	pop	{fp, pc}
   1cbbc:	push	{fp, lr}
   1cbc0:	mov	fp, sp
   1cbc4:	sub	sp, sp, #88	; 0x58
   1cbc8:	ldr	ip, [fp, #8]
   1cbcc:	str	r0, [fp, #-8]
   1cbd0:	str	r1, [fp, #-12]
   1cbd4:	str	r2, [fp, #-16]
   1cbd8:	str	r3, [fp, #-20]	; 0xffffffec
   1cbdc:	movw	r0, #0
   1cbe0:	str	r0, [sp, #44]	; 0x2c
   1cbe4:	ldr	r1, [fp, #-16]
   1cbe8:	cmp	r0, r1
   1cbec:	str	ip, [sp, #20]
   1cbf0:	bgt	1cc04 <__assert_fail@plt+0xb8d4>
   1cbf4:	ldr	r0, [fp, #-16]
   1cbf8:	cmp	r0, #36	; 0x24
   1cbfc:	bgt	1cc04 <__assert_fail@plt+0xb8d4>
   1cc00:	b	1cc24 <__assert_fail@plt+0xb8f4>
   1cc04:	movw	r0, #10506	; 0x290a
   1cc08:	movt	r0, #2
   1cc0c:	movw	r1, #10544	; 0x2930
   1cc10:	movt	r1, #2
   1cc14:	movw	r2, #85	; 0x55
   1cc18:	movw	r3, #10641	; 0x2991
   1cc1c:	movt	r3, #2
   1cc20:	bl	11330 <__assert_fail@plt>
   1cc24:	ldr	r0, [fp, #-12]
   1cc28:	movw	r1, #0
   1cc2c:	cmp	r0, r1
   1cc30:	beq	1cc40 <__assert_fail@plt+0xb910>
   1cc34:	ldr	r0, [fp, #-12]
   1cc38:	str	r0, [sp, #16]
   1cc3c:	b	1cc4c <__assert_fail@plt+0xb91c>
   1cc40:	sub	r0, fp, #24
   1cc44:	str	r0, [sp, #16]
   1cc48:	b	1cc4c <__assert_fail@plt+0xb91c>
   1cc4c:	ldr	r0, [sp, #16]
   1cc50:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc54:	bl	11228 <__errno_location@plt>
   1cc58:	movw	lr, #0
   1cc5c:	str	lr, [r0]
   1cc60:	ldr	r0, [fp, #-8]
   1cc64:	str	r0, [sp, #40]	; 0x28
   1cc68:	ldr	r0, [sp, #40]	; 0x28
   1cc6c:	ldrb	r0, [r0]
   1cc70:	strb	r0, [sp, #39]	; 0x27
   1cc74:	bl	111d4 <__ctype_b_loc@plt>
   1cc78:	ldr	r0, [r0]
   1cc7c:	ldrb	lr, [sp, #39]	; 0x27
   1cc80:	mov	r1, lr
   1cc84:	add	r0, r0, lr, lsl #1
   1cc88:	ldrh	r0, [r0]
   1cc8c:	and	r0, r0, #8192	; 0x2000
   1cc90:	cmp	r0, #0
   1cc94:	str	r1, [sp, #12]
   1cc98:	beq	1ccb4 <__assert_fail@plt+0xb984>
   1cc9c:	ldr	r0, [sp, #40]	; 0x28
   1cca0:	add	r1, r0, #1
   1cca4:	str	r1, [sp, #40]	; 0x28
   1cca8:	ldrb	r0, [r0, #1]
   1ccac:	strb	r0, [sp, #39]	; 0x27
   1ccb0:	b	1cc74 <__assert_fail@plt+0xb944>
   1ccb4:	ldrb	r0, [sp, #39]	; 0x27
   1ccb8:	cmp	r0, #45	; 0x2d
   1ccbc:	bne	1cccc <__assert_fail@plt+0xb99c>
   1ccc0:	movw	r0, #4
   1ccc4:	str	r0, [fp, #-4]
   1ccc8:	b	1d248 <__assert_fail@plt+0xbf18>
   1cccc:	ldr	r0, [fp, #-8]
   1ccd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ccd4:	ldr	r2, [fp, #-16]
   1ccd8:	bl	11258 <strtoumax@plt>
   1ccdc:	str	r1, [fp, #-36]	; 0xffffffdc
   1cce0:	str	r0, [fp, #-40]	; 0xffffffd8
   1cce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cce8:	ldr	r0, [r0]
   1ccec:	ldr	r1, [fp, #-8]
   1ccf0:	cmp	r0, r1
   1ccf4:	bne	1cd60 <__assert_fail@plt+0xba30>
   1ccf8:	ldr	r0, [fp, #8]
   1ccfc:	movw	r1, #0
   1cd00:	cmp	r0, r1
   1cd04:	beq	1cd50 <__assert_fail@plt+0xba20>
   1cd08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd0c:	ldr	r0, [r0]
   1cd10:	ldrb	r0, [r0]
   1cd14:	cmp	r0, #0
   1cd18:	beq	1cd50 <__assert_fail@plt+0xba20>
   1cd1c:	ldr	r0, [fp, #8]
   1cd20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd24:	ldr	r1, [r1]
   1cd28:	ldrb	r1, [r1]
   1cd2c:	bl	11210 <strchr@plt>
   1cd30:	movw	r1, #0
   1cd34:	cmp	r0, r1
   1cd38:	beq	1cd50 <__assert_fail@plt+0xba20>
   1cd3c:	mov	r0, #0
   1cd40:	str	r0, [fp, #-36]	; 0xffffffdc
   1cd44:	mov	r0, #1
   1cd48:	str	r0, [fp, #-40]	; 0xffffffd8
   1cd4c:	b	1cd5c <__assert_fail@plt+0xba2c>
   1cd50:	movw	r0, #4
   1cd54:	str	r0, [fp, #-4]
   1cd58:	b	1d248 <__assert_fail@plt+0xbf18>
   1cd5c:	b	1cd98 <__assert_fail@plt+0xba68>
   1cd60:	bl	11228 <__errno_location@plt>
   1cd64:	ldr	r0, [r0]
   1cd68:	cmp	r0, #0
   1cd6c:	beq	1cd94 <__assert_fail@plt+0xba64>
   1cd70:	bl	11228 <__errno_location@plt>
   1cd74:	ldr	r0, [r0]
   1cd78:	cmp	r0, #34	; 0x22
   1cd7c:	beq	1cd8c <__assert_fail@plt+0xba5c>
   1cd80:	movw	r0, #4
   1cd84:	str	r0, [fp, #-4]
   1cd88:	b	1d248 <__assert_fail@plt+0xbf18>
   1cd8c:	movw	r0, #1
   1cd90:	str	r0, [sp, #44]	; 0x2c
   1cd94:	b	1cd98 <__assert_fail@plt+0xba68>
   1cd98:	ldr	r0, [fp, #8]
   1cd9c:	movw	r1, #0
   1cda0:	cmp	r0, r1
   1cda4:	bne	1cdc8 <__assert_fail@plt+0xba98>
   1cda8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cdac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cdb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cdb4:	str	r1, [r2, #4]
   1cdb8:	str	r0, [r2]
   1cdbc:	ldr	r0, [sp, #44]	; 0x2c
   1cdc0:	str	r0, [fp, #-4]
   1cdc4:	b	1d248 <__assert_fail@plt+0xbf18>
   1cdc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cdcc:	ldr	r0, [r0]
   1cdd0:	ldrb	r0, [r0]
   1cdd4:	cmp	r0, #0
   1cdd8:	beq	1d22c <__assert_fail@plt+0xbefc>
   1cddc:	movw	r0, #1024	; 0x400
   1cde0:	str	r0, [sp, #32]
   1cde4:	movw	r0, #1
   1cde8:	str	r0, [sp, #28]
   1cdec:	ldr	r0, [fp, #8]
   1cdf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cdf4:	ldr	r1, [r1]
   1cdf8:	ldrb	r1, [r1]
   1cdfc:	bl	11210 <strchr@plt>
   1ce00:	movw	r1, #0
   1ce04:	cmp	r0, r1
   1ce08:	bne	1ce30 <__assert_fail@plt+0xbb00>
   1ce0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ce10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce14:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ce18:	str	r1, [r2, #4]
   1ce1c:	str	r0, [r2]
   1ce20:	ldr	r0, [sp, #44]	; 0x2c
   1ce24:	orr	r0, r0, #2
   1ce28:	str	r0, [fp, #-4]
   1ce2c:	b	1d248 <__assert_fail@plt+0xbf18>
   1ce30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce34:	ldr	r0, [r0]
   1ce38:	ldrb	r0, [r0]
   1ce3c:	sub	r0, r0, #69	; 0x45
   1ce40:	cmp	r0, #47	; 0x2f
   1ce44:	str	r0, [sp, #8]
   1ce48:	bhi	1cfb4 <__assert_fail@plt+0xbc84>
   1ce4c:	add	r0, pc, #8
   1ce50:	ldr	r1, [sp, #8]
   1ce54:	ldr	r0, [r0, r1, lsl #2]
   1ce58:	mov	pc, r0
   1ce5c:	andeq	ip, r1, ip, lsl pc
   1ce60:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce64:	andeq	ip, r1, ip, lsl pc
   1ce68:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce6c:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce70:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce74:	andeq	ip, r1, ip, lsl pc
   1ce78:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce7c:	andeq	ip, r1, ip, lsl pc
   1ce80:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce84:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce88:	andeq	ip, r1, ip, lsl pc
   1ce8c:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce90:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce94:			; <UNDEFINED> instruction: 0x0001cfb4
   1ce98:	andeq	ip, r1, ip, lsl pc
   1ce9c:			; <UNDEFINED> instruction: 0x0001cfb4
   1cea0:			; <UNDEFINED> instruction: 0x0001cfb4
   1cea4:			; <UNDEFINED> instruction: 0x0001cfb4
   1cea8:			; <UNDEFINED> instruction: 0x0001cfb4
   1ceac:	andeq	ip, r1, ip, lsl pc
   1ceb0:	andeq	ip, r1, ip, lsl pc
   1ceb4:			; <UNDEFINED> instruction: 0x0001cfb4
   1ceb8:			; <UNDEFINED> instruction: 0x0001cfb4
   1cebc:			; <UNDEFINED> instruction: 0x0001cfb4
   1cec0:			; <UNDEFINED> instruction: 0x0001cfb4
   1cec4:			; <UNDEFINED> instruction: 0x0001cfb4
   1cec8:			; <UNDEFINED> instruction: 0x0001cfb4
   1cecc:			; <UNDEFINED> instruction: 0x0001cfb4
   1ced0:			; <UNDEFINED> instruction: 0x0001cfb4
   1ced4:			; <UNDEFINED> instruction: 0x0001cfb4
   1ced8:			; <UNDEFINED> instruction: 0x0001cfb4
   1cedc:			; <UNDEFINED> instruction: 0x0001cfb4
   1cee0:			; <UNDEFINED> instruction: 0x0001cfb4
   1cee4:	andeq	ip, r1, ip, lsl pc
   1cee8:			; <UNDEFINED> instruction: 0x0001cfb4
   1ceec:			; <UNDEFINED> instruction: 0x0001cfb4
   1cef0:			; <UNDEFINED> instruction: 0x0001cfb4
   1cef4:	andeq	ip, r1, ip, lsl pc
   1cef8:			; <UNDEFINED> instruction: 0x0001cfb4
   1cefc:	andeq	ip, r1, ip, lsl pc
   1cf00:			; <UNDEFINED> instruction: 0x0001cfb4
   1cf04:			; <UNDEFINED> instruction: 0x0001cfb4
   1cf08:			; <UNDEFINED> instruction: 0x0001cfb4
   1cf0c:			; <UNDEFINED> instruction: 0x0001cfb4
   1cf10:			; <UNDEFINED> instruction: 0x0001cfb4
   1cf14:			; <UNDEFINED> instruction: 0x0001cfb4
   1cf18:	andeq	ip, r1, ip, lsl pc
   1cf1c:	ldr	r0, [fp, #8]
   1cf20:	movw	r1, #48	; 0x30
   1cf24:	bl	11210 <strchr@plt>
   1cf28:	movw	r1, #0
   1cf2c:	cmp	r0, r1
   1cf30:	beq	1cfb0 <__assert_fail@plt+0xbc80>
   1cf34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cf38:	ldr	r0, [r0]
   1cf3c:	ldrb	r0, [r0, #1]
   1cf40:	mov	r1, r0
   1cf44:	cmp	r0, #66	; 0x42
   1cf48:	str	r1, [sp, #4]
   1cf4c:	beq	1cf98 <__assert_fail@plt+0xbc68>
   1cf50:	b	1cf54 <__assert_fail@plt+0xbc24>
   1cf54:	ldr	r0, [sp, #4]
   1cf58:	cmp	r0, #68	; 0x44
   1cf5c:	beq	1cf98 <__assert_fail@plt+0xbc68>
   1cf60:	b	1cf64 <__assert_fail@plt+0xbc34>
   1cf64:	ldr	r0, [sp, #4]
   1cf68:	cmp	r0, #105	; 0x69
   1cf6c:	bne	1cfac <__assert_fail@plt+0xbc7c>
   1cf70:	b	1cf74 <__assert_fail@plt+0xbc44>
   1cf74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cf78:	ldr	r0, [r0]
   1cf7c:	ldrb	r0, [r0, #2]
   1cf80:	cmp	r0, #66	; 0x42
   1cf84:	bne	1cf94 <__assert_fail@plt+0xbc64>
   1cf88:	ldr	r0, [sp, #28]
   1cf8c:	add	r0, r0, #2
   1cf90:	str	r0, [sp, #28]
   1cf94:	b	1cfac <__assert_fail@plt+0xbc7c>
   1cf98:	movw	r0, #1000	; 0x3e8
   1cf9c:	str	r0, [sp, #32]
   1cfa0:	ldr	r0, [sp, #28]
   1cfa4:	add	r0, r0, #1
   1cfa8:	str	r0, [sp, #28]
   1cfac:	b	1cfb0 <__assert_fail@plt+0xbc80>
   1cfb0:	b	1cfb4 <__assert_fail@plt+0xbc84>
   1cfb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cfb8:	ldr	r0, [r0]
   1cfbc:	ldrb	r0, [r0]
   1cfc0:	sub	r0, r0, #66	; 0x42
   1cfc4:	cmp	r0, #53	; 0x35
   1cfc8:	str	r0, [sp]
   1cfcc:	bhi	1d1c0 <__assert_fail@plt+0xbe90>
   1cfd0:	add	r0, pc, #8
   1cfd4:	ldr	r1, [sp]
   1cfd8:	ldr	r0, [r0, r1, lsl #2]
   1cfdc:	mov	pc, r0
   1cfe0:	andeq	sp, r1, ip, asr #1
   1cfe4:	andeq	sp, r1, r0, asr #3
   1cfe8:	andeq	sp, r1, r0, asr #3
   1cfec:	andeq	sp, r1, ip, ror #1
   1cff0:	andeq	sp, r1, r0, asr #3
   1cff4:	andeq	sp, r1, r4, lsl #2
   1cff8:	andeq	sp, r1, r0, asr #3
   1cffc:	andeq	sp, r1, r0, asr #3
   1d000:	andeq	sp, r1, r0, asr #3
   1d004:	andeq	sp, r1, ip, lsl r1
   1d008:	andeq	sp, r1, r0, asr #3
   1d00c:	andeq	sp, r1, r4, lsr r1
   1d010:	andeq	sp, r1, r0, asr #3
   1d014:	andeq	sp, r1, r0, asr #3
   1d018:	andeq	sp, r1, ip, asr #2
   1d01c:	andeq	sp, r1, r0, asr #3
   1d020:	andeq	sp, r1, r0, asr #3
   1d024:	andeq	sp, r1, r0, asr #3
   1d028:	andeq	sp, r1, r4, ror #2
   1d02c:	andeq	sp, r1, r0, asr #3
   1d030:	andeq	sp, r1, r0, asr #3
   1d034:	andeq	sp, r1, r0, asr #3
   1d038:	andeq	sp, r1, r0, asr #3
   1d03c:	muleq	r1, r0, r1
   1d040:	andeq	sp, r1, r8, lsr #3
   1d044:	andeq	sp, r1, r0, asr #3
   1d048:	andeq	sp, r1, r0, asr #3
   1d04c:	andeq	sp, r1, r0, asr #3
   1d050:	andeq	sp, r1, r0, asr #3
   1d054:	andeq	sp, r1, r0, asr #3
   1d058:	andeq	sp, r1, r0, asr #3
   1d05c:	andeq	sp, r1, r0, asr #3
   1d060:	strheq	sp, [r1], -r8
   1d064:	andeq	sp, r1, r0, ror #1
   1d068:	andeq	sp, r1, r0, asr #3
   1d06c:	andeq	sp, r1, r0, asr #3
   1d070:	andeq	sp, r1, r0, asr #3
   1d074:	andeq	sp, r1, r4, lsl #2
   1d078:	andeq	sp, r1, r0, asr #3
   1d07c:	andeq	sp, r1, r0, asr #3
   1d080:	andeq	sp, r1, r0, asr #3
   1d084:	andeq	sp, r1, ip, lsl r1
   1d088:	andeq	sp, r1, r0, asr #3
   1d08c:	andeq	sp, r1, r4, lsr r1
   1d090:	andeq	sp, r1, r0, asr #3
   1d094:	andeq	sp, r1, r0, asr #3
   1d098:	andeq	sp, r1, r0, asr #3
   1d09c:	andeq	sp, r1, r0, asr #3
   1d0a0:	andeq	sp, r1, r0, asr #3
   1d0a4:	andeq	sp, r1, r0, asr #3
   1d0a8:	andeq	sp, r1, r4, ror #2
   1d0ac:	andeq	sp, r1, r0, asr #3
   1d0b0:	andeq	sp, r1, r0, asr #3
   1d0b4:	andeq	sp, r1, ip, ror r1
   1d0b8:	sub	r0, fp, #40	; 0x28
   1d0bc:	movw	r1, #512	; 0x200
   1d0c0:	bl	1d254 <__assert_fail@plt+0xbf24>
   1d0c4:	str	r0, [sp, #24]
   1d0c8:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d0cc:	sub	r0, fp, #40	; 0x28
   1d0d0:	movw	r1, #1024	; 0x400
   1d0d4:	bl	1d254 <__assert_fail@plt+0xbf24>
   1d0d8:	str	r0, [sp, #24]
   1d0dc:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d0e0:	movw	r0, #0
   1d0e4:	str	r0, [sp, #24]
   1d0e8:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d0ec:	ldr	r1, [sp, #32]
   1d0f0:	sub	r0, fp, #40	; 0x28
   1d0f4:	movw	r2, #6
   1d0f8:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d0fc:	str	r0, [sp, #24]
   1d100:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d104:	ldr	r1, [sp, #32]
   1d108:	sub	r0, fp, #40	; 0x28
   1d10c:	movw	r2, #3
   1d110:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d114:	str	r0, [sp, #24]
   1d118:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d11c:	ldr	r1, [sp, #32]
   1d120:	sub	r0, fp, #40	; 0x28
   1d124:	movw	r2, #1
   1d128:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d12c:	str	r0, [sp, #24]
   1d130:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d134:	ldr	r1, [sp, #32]
   1d138:	sub	r0, fp, #40	; 0x28
   1d13c:	movw	r2, #2
   1d140:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d144:	str	r0, [sp, #24]
   1d148:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d14c:	ldr	r1, [sp, #32]
   1d150:	sub	r0, fp, #40	; 0x28
   1d154:	movw	r2, #5
   1d158:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d15c:	str	r0, [sp, #24]
   1d160:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d164:	ldr	r1, [sp, #32]
   1d168:	sub	r0, fp, #40	; 0x28
   1d16c:	movw	r2, #4
   1d170:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d174:	str	r0, [sp, #24]
   1d178:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d17c:	sub	r0, fp, #40	; 0x28
   1d180:	movw	r1, #2
   1d184:	bl	1d254 <__assert_fail@plt+0xbf24>
   1d188:	str	r0, [sp, #24]
   1d18c:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d190:	ldr	r1, [sp, #32]
   1d194:	sub	r0, fp, #40	; 0x28
   1d198:	movw	r2, #8
   1d19c:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d1a0:	str	r0, [sp, #24]
   1d1a4:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d1a8:	ldr	r1, [sp, #32]
   1d1ac:	sub	r0, fp, #40	; 0x28
   1d1b0:	movw	r2, #7
   1d1b4:	bl	1ed5c <__assert_fail@plt+0xda2c>
   1d1b8:	str	r0, [sp, #24]
   1d1bc:	b	1d1e4 <__assert_fail@plt+0xbeb4>
   1d1c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d1c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d1c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d1cc:	str	r1, [r2, #4]
   1d1d0:	str	r0, [r2]
   1d1d4:	ldr	r0, [sp, #44]	; 0x2c
   1d1d8:	orr	r0, r0, #2
   1d1dc:	str	r0, [fp, #-4]
   1d1e0:	b	1d248 <__assert_fail@plt+0xbf18>
   1d1e4:	ldr	r0, [sp, #24]
   1d1e8:	ldr	r1, [sp, #44]	; 0x2c
   1d1ec:	orr	r0, r1, r0
   1d1f0:	str	r0, [sp, #44]	; 0x2c
   1d1f4:	ldr	r0, [sp, #28]
   1d1f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d1fc:	ldr	r2, [r1]
   1d200:	add	r0, r2, r0
   1d204:	str	r0, [r1]
   1d208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d20c:	ldr	r0, [r0]
   1d210:	ldrsb	r0, [r0]
   1d214:	cmp	r0, #0
   1d218:	beq	1d228 <__assert_fail@plt+0xbef8>
   1d21c:	ldr	r0, [sp, #44]	; 0x2c
   1d220:	orr	r0, r0, #2
   1d224:	str	r0, [sp, #44]	; 0x2c
   1d228:	b	1d22c <__assert_fail@plt+0xbefc>
   1d22c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d230:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d234:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d238:	str	r1, [r2, #4]
   1d23c:	str	r0, [r2]
   1d240:	ldr	r0, [sp, #44]	; 0x2c
   1d244:	str	r0, [fp, #-4]
   1d248:	ldr	r0, [fp, #-4]
   1d24c:	mov	sp, fp
   1d250:	pop	{fp, pc}
   1d254:	push	{fp, lr}
   1d258:	mov	fp, sp
   1d25c:	sub	sp, sp, #568	; 0x238
   1d260:	str	r0, [fp, #-8]
   1d264:	str	r1, [fp, #-12]
   1d268:	b	1d79c <__assert_fail@plt+0xc46c>
   1d26c:	b	1d510 <__assert_fail@plt+0xc1e0>
   1d270:	ldr	r0, [fp, #-12]
   1d274:	cmp	r0, #0
   1d278:	bge	1d3f0 <__assert_fail@plt+0xc0c0>
   1d27c:	mov	r0, #1
   1d280:	cmp	r0, #0
   1d284:	bne	1d33c <__assert_fail@plt+0xc00c>
   1d288:	b	1d28c <__assert_fail@plt+0xbf5c>
   1d28c:	b	1d290 <__assert_fail@plt+0xbf60>
   1d290:	ldr	r0, [fp, #-8]
   1d294:	ldr	r1, [r0]
   1d298:	ldr	r0, [r0, #4]
   1d29c:	ldr	r2, [fp, #-12]
   1d2a0:	mov	r3, #127	; 0x7f
   1d2a4:	sdiv	r2, r3, r2
   1d2a8:	subs	r1, r1, r2
   1d2ac:	sbcs	r0, r0, r2, asr #31
   1d2b0:	str	r1, [fp, #-28]	; 0xffffffe4
   1d2b4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d2b8:	bcc	1d4c8 <__assert_fail@plt+0xc198>
   1d2bc:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d2c0:	b	1d2c4 <__assert_fail@plt+0xbf94>
   1d2c4:	ldr	r0, [pc, #4088]	; 1e2c4 <__assert_fail@plt+0xcf94>
   1d2c8:	ldr	r1, [fp, #-12]
   1d2cc:	cmp	r1, r0
   1d2d0:	blt	1d2e8 <__assert_fail@plt+0xbfb8>
   1d2d4:	b	1d2f4 <__assert_fail@plt+0xbfc4>
   1d2d8:	ldr	r0, [fp, #-12]
   1d2dc:	movw	r1, #0
   1d2e0:	cmp	r1, r0
   1d2e4:	bge	1d2f4 <__assert_fail@plt+0xbfc4>
   1d2e8:	movw	r0, #0
   1d2ec:	str	r0, [fp, #-36]	; 0xffffffdc
   1d2f0:	b	1d30c <__assert_fail@plt+0xbfdc>
   1d2f4:	ldr	r0, [fp, #-12]
   1d2f8:	movw	r1, #0
   1d2fc:	sub	r0, r1, r0
   1d300:	movw	r1, #127	; 0x7f
   1d304:	sdiv	r0, r1, r0
   1d308:	str	r0, [fp, #-36]	; 0xffffffdc
   1d30c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d310:	ldr	r1, [fp, #-8]
   1d314:	ldr	r2, [r1]
   1d318:	ldr	r1, [r1, #4]
   1d31c:	mvn	r1, r1
   1d320:	mvn	r2, r2
   1d324:	subs	r2, r2, r0
   1d328:	sbcs	r0, r1, r0, asr #31
   1d32c:	str	r2, [fp, #-40]	; 0xffffffd8
   1d330:	str	r0, [fp, #-44]	; 0xffffffd4
   1d334:	bcs	1d4c8 <__assert_fail@plt+0xc198>
   1d338:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d33c:	b	1d340 <__assert_fail@plt+0xc010>
   1d340:	b	1d3c0 <__assert_fail@plt+0xc090>
   1d344:	b	1d3c0 <__assert_fail@plt+0xc090>
   1d348:	ldr	r0, [fp, #-12]
   1d34c:	cmn	r0, #1
   1d350:	bne	1d3c0 <__assert_fail@plt+0xc090>
   1d354:	b	1d378 <__assert_fail@plt+0xc048>
   1d358:	ldr	r0, [fp, #-8]
   1d35c:	ldr	r1, [r0]
   1d360:	ldr	r0, [r0, #4]
   1d364:	eor	r1, r1, #128	; 0x80
   1d368:	orr	r0, r1, r0
   1d36c:	cmp	r0, #0
   1d370:	bne	1d4c8 <__assert_fail@plt+0xc198>
   1d374:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d378:	ldr	r0, [fp, #-8]
   1d37c:	ldr	r1, [r0]
   1d380:	ldr	r0, [r0, #4]
   1d384:	orr	r0, r1, r0
   1d388:	cmp	r0, #0
   1d38c:	beq	1d4ec <__assert_fail@plt+0xc1bc>
   1d390:	b	1d394 <__assert_fail@plt+0xc064>
   1d394:	ldr	r0, [fp, #-8]
   1d398:	ldr	r1, [r0]
   1d39c:	ldr	r0, [r0, #4]
   1d3a0:	subs	r1, r1, #1
   1d3a4:	sbc	r0, r0, #0
   1d3a8:	rsbs	r1, r1, #127	; 0x7f
   1d3ac:	rscs	r0, r0, #0
   1d3b0:	str	r1, [fp, #-48]	; 0xffffffd0
   1d3b4:	str	r0, [fp, #-52]	; 0xffffffcc
   1d3b8:	bcc	1d4c8 <__assert_fail@plt+0xc198>
   1d3bc:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d3c0:	ldr	r0, [fp, #-12]
   1d3c4:	mvn	r1, #127	; 0x7f
   1d3c8:	sdiv	r0, r1, r0
   1d3cc:	ldr	r1, [fp, #-8]
   1d3d0:	ldr	r2, [r1]
   1d3d4:	ldr	r1, [r1, #4]
   1d3d8:	subs	r2, r0, r2
   1d3dc:	rscs	r0, r1, r0, asr #31
   1d3e0:	str	r2, [fp, #-56]	; 0xffffffc8
   1d3e4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d3e8:	bcc	1d4c8 <__assert_fail@plt+0xc198>
   1d3ec:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d3f0:	ldr	r0, [fp, #-12]
   1d3f4:	cmp	r0, #0
   1d3f8:	bne	1d400 <__assert_fail@plt+0xc0d0>
   1d3fc:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d400:	mov	r0, #1
   1d404:	cmp	r0, #0
   1d408:	bne	1d498 <__assert_fail@plt+0xc168>
   1d40c:	b	1d410 <__assert_fail@plt+0xc0e0>
   1d410:	ldr	r0, [fp, #-8]
   1d414:	ldr	r1, [r0]
   1d418:	ldr	r0, [r0, #4]
   1d41c:	and	r0, r1, r0
   1d420:	cmn	r0, #1
   1d424:	bne	1d464 <__assert_fail@plt+0xc134>
   1d428:	b	1d42c <__assert_fail@plt+0xc0fc>
   1d42c:	b	1d430 <__assert_fail@plt+0xc100>
   1d430:	ldr	r0, [fp, #-12]
   1d434:	mvn	r1, #127	; 0x7f
   1d438:	add	r0, r0, r1
   1d43c:	movw	r1, #0
   1d440:	cmp	r1, r0
   1d444:	blt	1d4c8 <__assert_fail@plt+0xc198>
   1d448:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d44c:	ldr	r0, [fp, #-12]
   1d450:	sub	r0, r0, #1
   1d454:	movw	r1, #127	; 0x7f
   1d458:	cmp	r1, r0
   1d45c:	blt	1d4c8 <__assert_fail@plt+0xc198>
   1d460:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d464:	ldr	r0, [fp, #-8]
   1d468:	ldr	r2, [r0]
   1d46c:	ldr	r3, [r0, #4]
   1d470:	mvn	r0, #127	; 0x7f
   1d474:	mvn	r1, #0
   1d478:	bl	21500 <__assert_fail@plt+0x101d0>
   1d47c:	ldr	r2, [fp, #-12]
   1d480:	subs	r0, r0, r2
   1d484:	sbcs	r1, r1, r2, asr #31
   1d488:	str	r0, [fp, #-64]	; 0xffffffc0
   1d48c:	str	r1, [fp, #-68]	; 0xffffffbc
   1d490:	bcc	1d4c8 <__assert_fail@plt+0xc198>
   1d494:	b	1d4ec <__assert_fail@plt+0xc1bc>
   1d498:	ldr	r0, [fp, #-12]
   1d49c:	mov	r1, #127	; 0x7f
   1d4a0:	sdiv	r0, r1, r0
   1d4a4:	ldr	r1, [fp, #-8]
   1d4a8:	ldr	r2, [r1]
   1d4ac:	ldr	r1, [r1, #4]
   1d4b0:	subs	r2, r0, r2
   1d4b4:	rscs	r0, r1, r0, asr #31
   1d4b8:	str	r2, [fp, #-72]	; 0xffffffb8
   1d4bc:	str	r0, [fp, #-76]	; 0xffffffb4
   1d4c0:	bcs	1d4ec <__assert_fail@plt+0xc1bc>
   1d4c4:	b	1d4c8 <__assert_fail@plt+0xc198>
   1d4c8:	ldr	r0, [fp, #-8]
   1d4cc:	ldr	r0, [r0]
   1d4d0:	ldr	r1, [fp, #-12]
   1d4d4:	mul	r0, r0, r1
   1d4d8:	sxtb	r0, r0
   1d4dc:	asr	r1, r0, #31
   1d4e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d4e4:	str	r1, [fp, #-20]	; 0xffffffec
   1d4e8:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1d4ec:	ldr	r0, [fp, #-8]
   1d4f0:	ldr	r0, [r0]
   1d4f4:	ldr	r1, [fp, #-12]
   1d4f8:	mul	r0, r0, r1
   1d4fc:	sxtb	r0, r0
   1d500:	asr	r1, r0, #31
   1d504:	str	r0, [fp, #-24]	; 0xffffffe8
   1d508:	str	r1, [fp, #-20]	; 0xffffffec
   1d50c:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1d510:	ldr	r0, [fp, #-12]
   1d514:	cmp	r0, #0
   1d518:	bge	1d670 <__assert_fail@plt+0xc340>
   1d51c:	mov	r0, #1
   1d520:	cmp	r0, #0
   1d524:	bne	1d5dc <__assert_fail@plt+0xc2ac>
   1d528:	b	1d52c <__assert_fail@plt+0xc1fc>
   1d52c:	b	1d530 <__assert_fail@plt+0xc200>
   1d530:	ldr	r0, [fp, #-8]
   1d534:	ldr	r1, [r0]
   1d538:	ldr	r0, [r0, #4]
   1d53c:	ldr	r2, [fp, #-12]
   1d540:	mov	r3, #255	; 0xff
   1d544:	sdiv	r2, r3, r2
   1d548:	subs	r1, r1, r2
   1d54c:	sbcs	r0, r0, r2, asr #31
   1d550:	str	r1, [fp, #-80]	; 0xffffffb0
   1d554:	str	r0, [fp, #-84]	; 0xffffffac
   1d558:	bcc	1d754 <__assert_fail@plt+0xc424>
   1d55c:	b	1d778 <__assert_fail@plt+0xc448>
   1d560:	b	1d564 <__assert_fail@plt+0xc234>
   1d564:	ldr	r0, [pc, #3416]	; 1e2c4 <__assert_fail@plt+0xcf94>
   1d568:	ldr	r1, [fp, #-12]
   1d56c:	cmp	r1, r0
   1d570:	blt	1d588 <__assert_fail@plt+0xc258>
   1d574:	b	1d594 <__assert_fail@plt+0xc264>
   1d578:	ldr	r0, [fp, #-12]
   1d57c:	movw	r1, #0
   1d580:	cmp	r1, r0
   1d584:	bge	1d594 <__assert_fail@plt+0xc264>
   1d588:	movw	r0, #0
   1d58c:	str	r0, [fp, #-88]	; 0xffffffa8
   1d590:	b	1d5ac <__assert_fail@plt+0xc27c>
   1d594:	ldr	r0, [fp, #-12]
   1d598:	movw	r1, #0
   1d59c:	sub	r0, r1, r0
   1d5a0:	movw	r1, #255	; 0xff
   1d5a4:	sdiv	r0, r1, r0
   1d5a8:	str	r0, [fp, #-88]	; 0xffffffa8
   1d5ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1d5b0:	ldr	r1, [fp, #-8]
   1d5b4:	ldr	r2, [r1]
   1d5b8:	ldr	r1, [r1, #4]
   1d5bc:	mvn	r1, r1
   1d5c0:	mvn	r2, r2
   1d5c4:	subs	r2, r2, r0
   1d5c8:	sbcs	r0, r1, r0, asr #31
   1d5cc:	str	r2, [fp, #-92]	; 0xffffffa4
   1d5d0:	str	r0, [fp, #-96]	; 0xffffffa0
   1d5d4:	bcs	1d754 <__assert_fail@plt+0xc424>
   1d5d8:	b	1d778 <__assert_fail@plt+0xc448>
   1d5dc:	b	1d5e0 <__assert_fail@plt+0xc2b0>
   1d5e0:	b	1d640 <__assert_fail@plt+0xc310>
   1d5e4:	b	1d640 <__assert_fail@plt+0xc310>
   1d5e8:	ldr	r0, [fp, #-12]
   1d5ec:	cmn	r0, #1
   1d5f0:	bne	1d640 <__assert_fail@plt+0xc310>
   1d5f4:	b	1d614 <__assert_fail@plt+0xc2e4>
   1d5f8:	ldr	r0, [fp, #-8]
   1d5fc:	ldr	r1, [r0]
   1d600:	ldr	r0, [r0, #4]
   1d604:	orr	r0, r1, r0
   1d608:	cmp	r0, #0
   1d60c:	bne	1d754 <__assert_fail@plt+0xc424>
   1d610:	b	1d778 <__assert_fail@plt+0xc448>
   1d614:	ldr	r0, [fp, #-8]
   1d618:	ldr	r1, [r0]
   1d61c:	ldr	r0, [r0, #4]
   1d620:	orr	r0, r1, r0
   1d624:	cmp	r0, #0
   1d628:	beq	1d778 <__assert_fail@plt+0xc448>
   1d62c:	b	1d630 <__assert_fail@plt+0xc300>
   1d630:	mov	r0, #0
   1d634:	cmp	r0, #0
   1d638:	bne	1d754 <__assert_fail@plt+0xc424>
   1d63c:	b	1d778 <__assert_fail@plt+0xc448>
   1d640:	ldr	r0, [fp, #-12]
   1d644:	mov	r1, #0
   1d648:	sdiv	r0, r1, r0
   1d64c:	ldr	r1, [fp, #-8]
   1d650:	ldr	r2, [r1]
   1d654:	ldr	r1, [r1, #4]
   1d658:	subs	r2, r0, r2
   1d65c:	rscs	r0, r1, r0, asr #31
   1d660:	str	r2, [fp, #-100]	; 0xffffff9c
   1d664:	str	r0, [fp, #-104]	; 0xffffff98
   1d668:	bcc	1d754 <__assert_fail@plt+0xc424>
   1d66c:	b	1d778 <__assert_fail@plt+0xc448>
   1d670:	ldr	r0, [fp, #-12]
   1d674:	cmp	r0, #0
   1d678:	bne	1d680 <__assert_fail@plt+0xc350>
   1d67c:	b	1d778 <__assert_fail@plt+0xc448>
   1d680:	mov	r0, #1
   1d684:	cmp	r0, #0
   1d688:	bne	1d724 <__assert_fail@plt+0xc3f4>
   1d68c:	b	1d690 <__assert_fail@plt+0xc360>
   1d690:	b	1d698 <__assert_fail@plt+0xc368>
   1d694:	b	1d69c <__assert_fail@plt+0xc36c>
   1d698:	b	1d6ec <__assert_fail@plt+0xc3bc>
   1d69c:	ldr	r0, [fp, #-8]
   1d6a0:	ldr	r1, [r0]
   1d6a4:	ldr	r0, [r0, #4]
   1d6a8:	and	r0, r1, r0
   1d6ac:	cmn	r0, #1
   1d6b0:	bne	1d6ec <__assert_fail@plt+0xc3bc>
   1d6b4:	b	1d6b8 <__assert_fail@plt+0xc388>
   1d6b8:	b	1d6bc <__assert_fail@plt+0xc38c>
   1d6bc:	ldr	r0, [fp, #-12]
   1d6c0:	add	r0, r0, #0
   1d6c4:	movw	r1, #0
   1d6c8:	cmp	r1, r0
   1d6cc:	blt	1d754 <__assert_fail@plt+0xc424>
   1d6d0:	b	1d778 <__assert_fail@plt+0xc448>
   1d6d4:	ldr	r0, [fp, #-12]
   1d6d8:	sub	r0, r0, #1
   1d6dc:	mvn	r1, #0
   1d6e0:	cmp	r1, r0
   1d6e4:	blt	1d754 <__assert_fail@plt+0xc424>
   1d6e8:	b	1d778 <__assert_fail@plt+0xc448>
   1d6ec:	ldr	r0, [fp, #-8]
   1d6f0:	ldr	r2, [r0]
   1d6f4:	ldr	r3, [r0, #4]
   1d6f8:	mov	r0, #0
   1d6fc:	str	r0, [fp, #-108]	; 0xffffff94
   1d700:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d704:	bl	21500 <__assert_fail@plt+0x101d0>
   1d708:	ldr	r2, [fp, #-12]
   1d70c:	subs	r0, r0, r2
   1d710:	sbcs	r1, r1, r2, asr #31
   1d714:	str	r0, [fp, #-112]	; 0xffffff90
   1d718:	str	r1, [fp, #-116]	; 0xffffff8c
   1d71c:	bcc	1d754 <__assert_fail@plt+0xc424>
   1d720:	b	1d778 <__assert_fail@plt+0xc448>
   1d724:	ldr	r0, [fp, #-12]
   1d728:	mov	r1, #255	; 0xff
   1d72c:	sdiv	r0, r1, r0
   1d730:	ldr	r1, [fp, #-8]
   1d734:	ldr	r2, [r1]
   1d738:	ldr	r1, [r1, #4]
   1d73c:	subs	r2, r0, r2
   1d740:	rscs	r0, r1, r0, asr #31
   1d744:	str	r2, [fp, #-120]	; 0xffffff88
   1d748:	str	r0, [fp, #-124]	; 0xffffff84
   1d74c:	bcs	1d778 <__assert_fail@plt+0xc448>
   1d750:	b	1d754 <__assert_fail@plt+0xc424>
   1d754:	ldr	r0, [fp, #-8]
   1d758:	ldr	r0, [r0]
   1d75c:	ldr	r1, [fp, #-12]
   1d760:	mul	r0, r0, r1
   1d764:	uxtb	r0, r0
   1d768:	mov	r1, #0
   1d76c:	str	r1, [fp, #-20]	; 0xffffffec
   1d770:	str	r0, [fp, #-24]	; 0xffffffe8
   1d774:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1d778:	ldr	r0, [fp, #-8]
   1d77c:	ldr	r0, [r0]
   1d780:	ldr	r1, [fp, #-12]
   1d784:	mul	r0, r0, r1
   1d788:	uxtb	r0, r0
   1d78c:	mov	r1, #0
   1d790:	str	r1, [fp, #-20]	; 0xffffffec
   1d794:	str	r0, [fp, #-24]	; 0xffffffe8
   1d798:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1d79c:	b	1dcd8 <__assert_fail@plt+0xc9a8>
   1d7a0:	b	1da4c <__assert_fail@plt+0xc71c>
   1d7a4:	ldr	r0, [fp, #-12]
   1d7a8:	cmp	r0, #0
   1d7ac:	bge	1d928 <__assert_fail@plt+0xc5f8>
   1d7b0:	mov	r0, #1
   1d7b4:	cmp	r0, #0
   1d7b8:	bne	1d870 <__assert_fail@plt+0xc540>
   1d7bc:	b	1d7c0 <__assert_fail@plt+0xc490>
   1d7c0:	b	1d7c4 <__assert_fail@plt+0xc494>
   1d7c4:	ldr	r0, [fp, #-8]
   1d7c8:	ldr	r1, [r0]
   1d7cc:	ldr	r0, [r0, #4]
   1d7d0:	ldr	r2, [fp, #-12]
   1d7d4:	movw	r3, #32767	; 0x7fff
   1d7d8:	sdiv	r2, r3, r2
   1d7dc:	subs	r1, r1, r2
   1d7e0:	sbcs	r0, r0, r2, asr #31
   1d7e4:	str	r1, [fp, #-128]	; 0xffffff80
   1d7e8:	str	r0, [fp, #-132]	; 0xffffff7c
   1d7ec:	bcc	1da04 <__assert_fail@plt+0xc6d4>
   1d7f0:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d7f4:	b	1d7f8 <__assert_fail@plt+0xc4c8>
   1d7f8:	ldr	r0, [pc, #2756]	; 1e2c4 <__assert_fail@plt+0xcf94>
   1d7fc:	ldr	r1, [fp, #-12]
   1d800:	cmp	r1, r0
   1d804:	blt	1d81c <__assert_fail@plt+0xc4ec>
   1d808:	b	1d828 <__assert_fail@plt+0xc4f8>
   1d80c:	ldr	r0, [fp, #-12]
   1d810:	movw	r1, #0
   1d814:	cmp	r1, r0
   1d818:	bge	1d828 <__assert_fail@plt+0xc4f8>
   1d81c:	movw	r0, #0
   1d820:	str	r0, [fp, #-136]	; 0xffffff78
   1d824:	b	1d840 <__assert_fail@plt+0xc510>
   1d828:	ldr	r0, [fp, #-12]
   1d82c:	movw	r1, #0
   1d830:	sub	r0, r1, r0
   1d834:	movw	r1, #32767	; 0x7fff
   1d838:	sdiv	r0, r1, r0
   1d83c:	str	r0, [fp, #-136]	; 0xffffff78
   1d840:	ldr	r0, [fp, #-136]	; 0xffffff78
   1d844:	ldr	r1, [fp, #-8]
   1d848:	ldr	r2, [r1]
   1d84c:	ldr	r1, [r1, #4]
   1d850:	mvn	r1, r1
   1d854:	mvn	r2, r2
   1d858:	subs	r2, r2, r0
   1d85c:	sbcs	r0, r1, r0, asr #31
   1d860:	str	r2, [fp, #-140]	; 0xffffff74
   1d864:	str	r0, [fp, #-144]	; 0xffffff70
   1d868:	bcs	1da04 <__assert_fail@plt+0xc6d4>
   1d86c:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d870:	b	1d874 <__assert_fail@plt+0xc544>
   1d874:	b	1d8f4 <__assert_fail@plt+0xc5c4>
   1d878:	b	1d8f4 <__assert_fail@plt+0xc5c4>
   1d87c:	ldr	r0, [fp, #-12]
   1d880:	cmn	r0, #1
   1d884:	bne	1d8f4 <__assert_fail@plt+0xc5c4>
   1d888:	b	1d8ac <__assert_fail@plt+0xc57c>
   1d88c:	ldr	r0, [fp, #-8]
   1d890:	ldr	r1, [r0]
   1d894:	ldr	r0, [r0, #4]
   1d898:	eor	r1, r1, #32768	; 0x8000
   1d89c:	orr	r0, r1, r0
   1d8a0:	cmp	r0, #0
   1d8a4:	bne	1da04 <__assert_fail@plt+0xc6d4>
   1d8a8:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d8ac:	ldr	r0, [fp, #-8]
   1d8b0:	ldr	r1, [r0]
   1d8b4:	ldr	r0, [r0, #4]
   1d8b8:	orr	r0, r1, r0
   1d8bc:	cmp	r0, #0
   1d8c0:	beq	1da28 <__assert_fail@plt+0xc6f8>
   1d8c4:	b	1d8c8 <__assert_fail@plt+0xc598>
   1d8c8:	ldr	r0, [fp, #-8]
   1d8cc:	ldr	r1, [r0]
   1d8d0:	ldr	r0, [r0, #4]
   1d8d4:	subs	r1, r1, #1
   1d8d8:	sbc	r0, r0, #0
   1d8dc:	lsr	r1, r1, #15
   1d8e0:	orr	r1, r1, r0, lsl #17
   1d8e4:	orr	r0, r1, r0, lsr #15
   1d8e8:	cmp	r0, #0
   1d8ec:	bne	1da04 <__assert_fail@plt+0xc6d4>
   1d8f0:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d8f4:	ldr	r0, [fp, #-12]
   1d8f8:	movw	r1, #32768	; 0x8000
   1d8fc:	movt	r1, #65535	; 0xffff
   1d900:	sdiv	r0, r1, r0
   1d904:	ldr	r1, [fp, #-8]
   1d908:	ldr	r2, [r1]
   1d90c:	ldr	r1, [r1, #4]
   1d910:	subs	r2, r0, r2
   1d914:	rscs	r0, r1, r0, asr #31
   1d918:	str	r2, [fp, #-148]	; 0xffffff6c
   1d91c:	str	r0, [fp, #-152]	; 0xffffff68
   1d920:	bcc	1da04 <__assert_fail@plt+0xc6d4>
   1d924:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d928:	ldr	r0, [fp, #-12]
   1d92c:	cmp	r0, #0
   1d930:	bne	1d938 <__assert_fail@plt+0xc608>
   1d934:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d938:	mov	r0, #1
   1d93c:	cmp	r0, #0
   1d940:	bne	1d9d4 <__assert_fail@plt+0xc6a4>
   1d944:	b	1d948 <__assert_fail@plt+0xc618>
   1d948:	ldr	r0, [fp, #-8]
   1d94c:	ldr	r1, [r0]
   1d950:	ldr	r0, [r0, #4]
   1d954:	and	r0, r1, r0
   1d958:	cmn	r0, #1
   1d95c:	bne	1d99c <__assert_fail@plt+0xc66c>
   1d960:	b	1d964 <__assert_fail@plt+0xc634>
   1d964:	b	1d968 <__assert_fail@plt+0xc638>
   1d968:	ldr	r0, [pc, #4064]	; 1e950 <__assert_fail@plt+0xd620>
   1d96c:	ldr	r1, [fp, #-12]
   1d970:	add	r0, r1, r0
   1d974:	movw	r1, #0
   1d978:	cmp	r1, r0
   1d97c:	blt	1da04 <__assert_fail@plt+0xc6d4>
   1d980:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d984:	ldr	r0, [fp, #-12]
   1d988:	sub	r0, r0, #1
   1d98c:	movw	r1, #32767	; 0x7fff
   1d990:	cmp	r1, r0
   1d994:	blt	1da04 <__assert_fail@plt+0xc6d4>
   1d998:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d99c:	ldr	r0, [fp, #-8]
   1d9a0:	ldr	r2, [r0]
   1d9a4:	ldr	r3, [r0, #4]
   1d9a8:	movw	r0, #32768	; 0x8000
   1d9ac:	movt	r0, #65535	; 0xffff
   1d9b0:	mvn	r1, #0
   1d9b4:	bl	21500 <__assert_fail@plt+0x101d0>
   1d9b8:	ldr	r2, [fp, #-12]
   1d9bc:	subs	r0, r0, r2
   1d9c0:	sbcs	r1, r1, r2, asr #31
   1d9c4:	str	r0, [fp, #-156]	; 0xffffff64
   1d9c8:	str	r1, [fp, #-160]	; 0xffffff60
   1d9cc:	bcc	1da04 <__assert_fail@plt+0xc6d4>
   1d9d0:	b	1da28 <__assert_fail@plt+0xc6f8>
   1d9d4:	ldr	r0, [fp, #-12]
   1d9d8:	movw	r1, #32767	; 0x7fff
   1d9dc:	sdiv	r0, r1, r0
   1d9e0:	ldr	r1, [fp, #-8]
   1d9e4:	ldr	r2, [r1]
   1d9e8:	ldr	r1, [r1, #4]
   1d9ec:	subs	r2, r0, r2
   1d9f0:	rscs	r0, r1, r0, asr #31
   1d9f4:	str	r2, [fp, #-164]	; 0xffffff5c
   1d9f8:	str	r0, [fp, #-168]	; 0xffffff58
   1d9fc:	bcs	1da28 <__assert_fail@plt+0xc6f8>
   1da00:	b	1da04 <__assert_fail@plt+0xc6d4>
   1da04:	ldr	r0, [fp, #-8]
   1da08:	ldr	r0, [r0]
   1da0c:	ldr	r1, [fp, #-12]
   1da10:	mul	r0, r0, r1
   1da14:	sxth	r0, r0
   1da18:	asr	r1, r0, #31
   1da1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1da20:	str	r1, [fp, #-20]	; 0xffffffec
   1da24:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1da28:	ldr	r0, [fp, #-8]
   1da2c:	ldr	r0, [r0]
   1da30:	ldr	r1, [fp, #-12]
   1da34:	mul	r0, r0, r1
   1da38:	sxth	r0, r0
   1da3c:	asr	r1, r0, #31
   1da40:	str	r0, [fp, #-24]	; 0xffffffe8
   1da44:	str	r1, [fp, #-20]	; 0xffffffec
   1da48:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1da4c:	ldr	r0, [fp, #-12]
   1da50:	cmp	r0, #0
   1da54:	bge	1dbac <__assert_fail@plt+0xc87c>
   1da58:	mov	r0, #1
   1da5c:	cmp	r0, #0
   1da60:	bne	1db18 <__assert_fail@plt+0xc7e8>
   1da64:	b	1da68 <__assert_fail@plt+0xc738>
   1da68:	b	1da6c <__assert_fail@plt+0xc73c>
   1da6c:	ldr	r0, [fp, #-8]
   1da70:	ldr	r1, [r0]
   1da74:	ldr	r0, [r0, #4]
   1da78:	ldr	r2, [fp, #-12]
   1da7c:	movw	r3, #65535	; 0xffff
   1da80:	sdiv	r2, r3, r2
   1da84:	subs	r1, r1, r2
   1da88:	sbcs	r0, r0, r2, asr #31
   1da8c:	str	r1, [fp, #-172]	; 0xffffff54
   1da90:	str	r0, [fp, #-176]	; 0xffffff50
   1da94:	bcc	1dc90 <__assert_fail@plt+0xc960>
   1da98:	b	1dcb4 <__assert_fail@plt+0xc984>
   1da9c:	b	1daa0 <__assert_fail@plt+0xc770>
   1daa0:	ldr	r0, [pc, #2076]	; 1e2c4 <__assert_fail@plt+0xcf94>
   1daa4:	ldr	r1, [fp, #-12]
   1daa8:	cmp	r1, r0
   1daac:	blt	1dac4 <__assert_fail@plt+0xc794>
   1dab0:	b	1dad0 <__assert_fail@plt+0xc7a0>
   1dab4:	ldr	r0, [fp, #-12]
   1dab8:	movw	r1, #0
   1dabc:	cmp	r1, r0
   1dac0:	bge	1dad0 <__assert_fail@plt+0xc7a0>
   1dac4:	movw	r0, #0
   1dac8:	str	r0, [fp, #-180]	; 0xffffff4c
   1dacc:	b	1dae8 <__assert_fail@plt+0xc7b8>
   1dad0:	ldr	r0, [fp, #-12]
   1dad4:	movw	r1, #0
   1dad8:	sub	r0, r1, r0
   1dadc:	movw	r1, #65535	; 0xffff
   1dae0:	sdiv	r0, r1, r0
   1dae4:	str	r0, [fp, #-180]	; 0xffffff4c
   1dae8:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1daec:	ldr	r1, [fp, #-8]
   1daf0:	ldr	r2, [r1]
   1daf4:	ldr	r1, [r1, #4]
   1daf8:	mvn	r1, r1
   1dafc:	mvn	r2, r2
   1db00:	subs	r2, r2, r0
   1db04:	sbcs	r0, r1, r0, asr #31
   1db08:	str	r2, [fp, #-184]	; 0xffffff48
   1db0c:	str	r0, [fp, #-188]	; 0xffffff44
   1db10:	bcs	1dc90 <__assert_fail@plt+0xc960>
   1db14:	b	1dcb4 <__assert_fail@plt+0xc984>
   1db18:	b	1db1c <__assert_fail@plt+0xc7ec>
   1db1c:	b	1db7c <__assert_fail@plt+0xc84c>
   1db20:	b	1db7c <__assert_fail@plt+0xc84c>
   1db24:	ldr	r0, [fp, #-12]
   1db28:	cmn	r0, #1
   1db2c:	bne	1db7c <__assert_fail@plt+0xc84c>
   1db30:	b	1db50 <__assert_fail@plt+0xc820>
   1db34:	ldr	r0, [fp, #-8]
   1db38:	ldr	r1, [r0]
   1db3c:	ldr	r0, [r0, #4]
   1db40:	orr	r0, r1, r0
   1db44:	cmp	r0, #0
   1db48:	bne	1dc90 <__assert_fail@plt+0xc960>
   1db4c:	b	1dcb4 <__assert_fail@plt+0xc984>
   1db50:	ldr	r0, [fp, #-8]
   1db54:	ldr	r1, [r0]
   1db58:	ldr	r0, [r0, #4]
   1db5c:	orr	r0, r1, r0
   1db60:	cmp	r0, #0
   1db64:	beq	1dcb4 <__assert_fail@plt+0xc984>
   1db68:	b	1db6c <__assert_fail@plt+0xc83c>
   1db6c:	mov	r0, #0
   1db70:	cmp	r0, #0
   1db74:	bne	1dc90 <__assert_fail@plt+0xc960>
   1db78:	b	1dcb4 <__assert_fail@plt+0xc984>
   1db7c:	ldr	r0, [fp, #-12]
   1db80:	mov	r1, #0
   1db84:	sdiv	r0, r1, r0
   1db88:	ldr	r1, [fp, #-8]
   1db8c:	ldr	r2, [r1]
   1db90:	ldr	r1, [r1, #4]
   1db94:	subs	r2, r0, r2
   1db98:	rscs	r0, r1, r0, asr #31
   1db9c:	str	r2, [fp, #-192]	; 0xffffff40
   1dba0:	str	r0, [fp, #-196]	; 0xffffff3c
   1dba4:	bcc	1dc90 <__assert_fail@plt+0xc960>
   1dba8:	b	1dcb4 <__assert_fail@plt+0xc984>
   1dbac:	ldr	r0, [fp, #-12]
   1dbb0:	cmp	r0, #0
   1dbb4:	bne	1dbbc <__assert_fail@plt+0xc88c>
   1dbb8:	b	1dcb4 <__assert_fail@plt+0xc984>
   1dbbc:	mov	r0, #1
   1dbc0:	cmp	r0, #0
   1dbc4:	bne	1dc60 <__assert_fail@plt+0xc930>
   1dbc8:	b	1dbcc <__assert_fail@plt+0xc89c>
   1dbcc:	b	1dbd4 <__assert_fail@plt+0xc8a4>
   1dbd0:	b	1dbd8 <__assert_fail@plt+0xc8a8>
   1dbd4:	b	1dc28 <__assert_fail@plt+0xc8f8>
   1dbd8:	ldr	r0, [fp, #-8]
   1dbdc:	ldr	r1, [r0]
   1dbe0:	ldr	r0, [r0, #4]
   1dbe4:	and	r0, r1, r0
   1dbe8:	cmn	r0, #1
   1dbec:	bne	1dc28 <__assert_fail@plt+0xc8f8>
   1dbf0:	b	1dbf4 <__assert_fail@plt+0xc8c4>
   1dbf4:	b	1dbf8 <__assert_fail@plt+0xc8c8>
   1dbf8:	ldr	r0, [fp, #-12]
   1dbfc:	add	r0, r0, #0
   1dc00:	movw	r1, #0
   1dc04:	cmp	r1, r0
   1dc08:	blt	1dc90 <__assert_fail@plt+0xc960>
   1dc0c:	b	1dcb4 <__assert_fail@plt+0xc984>
   1dc10:	ldr	r0, [fp, #-12]
   1dc14:	sub	r0, r0, #1
   1dc18:	mvn	r1, #0
   1dc1c:	cmp	r1, r0
   1dc20:	blt	1dc90 <__assert_fail@plt+0xc960>
   1dc24:	b	1dcb4 <__assert_fail@plt+0xc984>
   1dc28:	ldr	r0, [fp, #-8]
   1dc2c:	ldr	r2, [r0]
   1dc30:	ldr	r3, [r0, #4]
   1dc34:	mov	r0, #0
   1dc38:	str	r0, [fp, #-200]	; 0xffffff38
   1dc3c:	ldr	r1, [fp, #-200]	; 0xffffff38
   1dc40:	bl	21500 <__assert_fail@plt+0x101d0>
   1dc44:	ldr	r2, [fp, #-12]
   1dc48:	subs	r0, r0, r2
   1dc4c:	sbcs	r1, r1, r2, asr #31
   1dc50:	str	r0, [fp, #-204]	; 0xffffff34
   1dc54:	str	r1, [fp, #-208]	; 0xffffff30
   1dc58:	bcc	1dc90 <__assert_fail@plt+0xc960>
   1dc5c:	b	1dcb4 <__assert_fail@plt+0xc984>
   1dc60:	ldr	r0, [fp, #-12]
   1dc64:	movw	r1, #65535	; 0xffff
   1dc68:	sdiv	r0, r1, r0
   1dc6c:	ldr	r1, [fp, #-8]
   1dc70:	ldr	r2, [r1]
   1dc74:	ldr	r1, [r1, #4]
   1dc78:	subs	r2, r0, r2
   1dc7c:	rscs	r0, r1, r0, asr #31
   1dc80:	str	r2, [fp, #-212]	; 0xffffff2c
   1dc84:	str	r0, [fp, #-216]	; 0xffffff28
   1dc88:	bcs	1dcb4 <__assert_fail@plt+0xc984>
   1dc8c:	b	1dc90 <__assert_fail@plt+0xc960>
   1dc90:	ldr	r0, [fp, #-8]
   1dc94:	ldr	r0, [r0]
   1dc98:	ldr	r1, [fp, #-12]
   1dc9c:	mul	r0, r0, r1
   1dca0:	uxth	r0, r0
   1dca4:	mov	r1, #0
   1dca8:	str	r1, [fp, #-20]	; 0xffffffec
   1dcac:	str	r0, [fp, #-24]	; 0xffffffe8
   1dcb0:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1dcb4:	ldr	r0, [fp, #-8]
   1dcb8:	ldr	r0, [r0]
   1dcbc:	ldr	r1, [fp, #-12]
   1dcc0:	mul	r0, r0, r1
   1dcc4:	uxth	r0, r0
   1dcc8:	mov	r1, #0
   1dccc:	str	r1, [fp, #-20]	; 0xffffffec
   1dcd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1dcd4:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1dcd8:	b	1e1f0 <__assert_fail@plt+0xcec0>
   1dcdc:	b	1df6c <__assert_fail@plt+0xcc3c>
   1dce0:	ldr	r0, [fp, #-12]
   1dce4:	cmp	r0, #0
   1dce8:	bge	1de58 <__assert_fail@plt+0xcb28>
   1dcec:	mov	r0, #1
   1dcf0:	cmp	r0, #0
   1dcf4:	bne	1ddac <__assert_fail@plt+0xca7c>
   1dcf8:	b	1dcfc <__assert_fail@plt+0xc9cc>
   1dcfc:	b	1dd00 <__assert_fail@plt+0xc9d0>
   1dd00:	ldr	r0, [fp, #-8]
   1dd04:	ldr	r1, [r0]
   1dd08:	ldr	r0, [r0, #4]
   1dd0c:	ldr	r2, [fp, #-12]
   1dd10:	mvn	r3, #-2147483648	; 0x80000000
   1dd14:	sdiv	r2, r3, r2
   1dd18:	subs	r1, r1, r2
   1dd1c:	sbcs	r0, r0, r2, asr #31
   1dd20:	str	r1, [fp, #-220]	; 0xffffff24
   1dd24:	str	r0, [fp, #-224]	; 0xffffff20
   1dd28:	bcc	1df2c <__assert_fail@plt+0xcbfc>
   1dd2c:	b	1df4c <__assert_fail@plt+0xcc1c>
   1dd30:	b	1dd34 <__assert_fail@plt+0xca04>
   1dd34:	ldr	r0, [pc, #1416]	; 1e2c4 <__assert_fail@plt+0xcf94>
   1dd38:	ldr	r1, [fp, #-12]
   1dd3c:	cmp	r1, r0
   1dd40:	blt	1dd58 <__assert_fail@plt+0xca28>
   1dd44:	b	1dd64 <__assert_fail@plt+0xca34>
   1dd48:	ldr	r0, [fp, #-12]
   1dd4c:	movw	r1, #0
   1dd50:	cmp	r1, r0
   1dd54:	bge	1dd64 <__assert_fail@plt+0xca34>
   1dd58:	movw	r0, #0
   1dd5c:	str	r0, [fp, #-228]	; 0xffffff1c
   1dd60:	b	1dd7c <__assert_fail@plt+0xca4c>
   1dd64:	ldr	r0, [pc, #4076]	; 1ed58 <__assert_fail@plt+0xda28>
   1dd68:	ldr	r1, [fp, #-12]
   1dd6c:	movw	r2, #0
   1dd70:	sub	r1, r2, r1
   1dd74:	sdiv	r0, r0, r1
   1dd78:	str	r0, [fp, #-228]	; 0xffffff1c
   1dd7c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1dd80:	ldr	r1, [fp, #-8]
   1dd84:	ldr	r2, [r1]
   1dd88:	ldr	r1, [r1, #4]
   1dd8c:	mvn	r1, r1
   1dd90:	mvn	r2, r2
   1dd94:	subs	r2, r2, r0
   1dd98:	sbcs	r0, r1, r0, asr #31
   1dd9c:	str	r2, [fp, #-232]	; 0xffffff18
   1dda0:	str	r0, [fp, #-236]	; 0xffffff14
   1dda4:	bcs	1df2c <__assert_fail@plt+0xcbfc>
   1dda8:	b	1df4c <__assert_fail@plt+0xcc1c>
   1ddac:	ldr	r0, [fp, #-12]
   1ddb0:	cmn	r0, #1
   1ddb4:	bne	1de28 <__assert_fail@plt+0xcaf8>
   1ddb8:	b	1dddc <__assert_fail@plt+0xcaac>
   1ddbc:	ldr	r0, [fp, #-8]
   1ddc0:	ldr	r1, [r0]
   1ddc4:	ldr	r0, [r0, #4]
   1ddc8:	eor	r1, r1, #-2147483648	; 0x80000000
   1ddcc:	orr	r0, r1, r0
   1ddd0:	cmp	r0, #0
   1ddd4:	bne	1df2c <__assert_fail@plt+0xcbfc>
   1ddd8:	b	1df4c <__assert_fail@plt+0xcc1c>
   1dddc:	ldr	r0, [fp, #-8]
   1dde0:	ldr	r1, [r0]
   1dde4:	ldr	r0, [r0, #4]
   1dde8:	orr	r0, r1, r0
   1ddec:	cmp	r0, #0
   1ddf0:	beq	1df4c <__assert_fail@plt+0xcc1c>
   1ddf4:	b	1ddf8 <__assert_fail@plt+0xcac8>
   1ddf8:	ldr	r0, [fp, #-8]
   1ddfc:	ldr	r1, [r0]
   1de00:	ldr	r0, [r0, #4]
   1de04:	subs	r1, r1, #1
   1de08:	sbc	r0, r0, #0
   1de0c:	mvn	r2, #-2147483648	; 0x80000000
   1de10:	subs	r1, r2, r1
   1de14:	rscs	r0, r0, #0
   1de18:	str	r1, [fp, #-240]	; 0xffffff10
   1de1c:	str	r0, [fp, #-244]	; 0xffffff0c
   1de20:	bcc	1df2c <__assert_fail@plt+0xcbfc>
   1de24:	b	1df4c <__assert_fail@plt+0xcc1c>
   1de28:	ldr	r0, [fp, #-12]
   1de2c:	mov	r1, #-2147483648	; 0x80000000
   1de30:	sdiv	r0, r1, r0
   1de34:	ldr	r1, [fp, #-8]
   1de38:	ldr	r2, [r1]
   1de3c:	ldr	r1, [r1, #4]
   1de40:	subs	r2, r0, r2
   1de44:	rscs	r0, r1, r0, asr #31
   1de48:	str	r2, [fp, #-248]	; 0xffffff08
   1de4c:	str	r0, [fp, #-252]	; 0xffffff04
   1de50:	bcc	1df2c <__assert_fail@plt+0xcbfc>
   1de54:	b	1df4c <__assert_fail@plt+0xcc1c>
   1de58:	ldr	r0, [fp, #-12]
   1de5c:	cmp	r0, #0
   1de60:	bne	1de68 <__assert_fail@plt+0xcb38>
   1de64:	b	1df4c <__assert_fail@plt+0xcc1c>
   1de68:	mov	r0, #1
   1de6c:	cmp	r0, #0
   1de70:	bne	1defc <__assert_fail@plt+0xcbcc>
   1de74:	b	1de78 <__assert_fail@plt+0xcb48>
   1de78:	ldr	r0, [fp, #-8]
   1de7c:	ldr	r1, [r0]
   1de80:	ldr	r0, [r0, #4]
   1de84:	and	r0, r1, r0
   1de88:	cmn	r0, #1
   1de8c:	bne	1dec8 <__assert_fail@plt+0xcb98>
   1de90:	b	1de94 <__assert_fail@plt+0xcb64>
   1de94:	b	1de98 <__assert_fail@plt+0xcb68>
   1de98:	ldr	r0, [fp, #-12]
   1de9c:	add	r0, r0, #-2147483648	; 0x80000000
   1dea0:	movw	r1, #0
   1dea4:	cmp	r1, r0
   1dea8:	blt	1df2c <__assert_fail@plt+0xcbfc>
   1deac:	b	1df4c <__assert_fail@plt+0xcc1c>
   1deb0:	ldr	r0, [pc, #3744]	; 1ed58 <__assert_fail@plt+0xda28>
   1deb4:	ldr	r1, [fp, #-12]
   1deb8:	sub	r1, r1, #1
   1debc:	cmp	r0, r1
   1dec0:	blt	1df2c <__assert_fail@plt+0xcbfc>
   1dec4:	b	1df4c <__assert_fail@plt+0xcc1c>
   1dec8:	ldr	r0, [fp, #-8]
   1decc:	ldr	r2, [r0]
   1ded0:	ldr	r3, [r0, #4]
   1ded4:	mov	r0, #-2147483648	; 0x80000000
   1ded8:	mvn	r1, #0
   1dedc:	bl	21500 <__assert_fail@plt+0x101d0>
   1dee0:	ldr	r2, [fp, #-12]
   1dee4:	subs	r0, r0, r2
   1dee8:	sbcs	r1, r1, r2, asr #31
   1deec:	str	r0, [fp, #-256]	; 0xffffff00
   1def0:	str	r1, [fp, #-260]	; 0xfffffefc
   1def4:	bcc	1df2c <__assert_fail@plt+0xcbfc>
   1def8:	b	1df4c <__assert_fail@plt+0xcc1c>
   1defc:	ldr	r0, [fp, #-12]
   1df00:	mvn	r1, #-2147483648	; 0x80000000
   1df04:	sdiv	r0, r1, r0
   1df08:	ldr	r1, [fp, #-8]
   1df0c:	ldr	r2, [r1]
   1df10:	ldr	r1, [r1, #4]
   1df14:	subs	r2, r0, r2
   1df18:	rscs	r0, r1, r0, asr #31
   1df1c:	str	r2, [fp, #-264]	; 0xfffffef8
   1df20:	str	r0, [fp, #-268]	; 0xfffffef4
   1df24:	bcs	1df4c <__assert_fail@plt+0xcc1c>
   1df28:	b	1df2c <__assert_fail@plt+0xcbfc>
   1df2c:	ldr	r0, [fp, #-8]
   1df30:	ldr	r0, [r0]
   1df34:	ldr	r1, [fp, #-12]
   1df38:	mul	r0, r0, r1
   1df3c:	asr	r1, r0, #31
   1df40:	str	r0, [fp, #-24]	; 0xffffffe8
   1df44:	str	r1, [fp, #-20]	; 0xffffffec
   1df48:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1df4c:	ldr	r0, [fp, #-8]
   1df50:	ldr	r0, [r0]
   1df54:	ldr	r1, [fp, #-12]
   1df58:	mul	r0, r0, r1
   1df5c:	asr	r1, r0, #31
   1df60:	str	r0, [fp, #-24]	; 0xffffffe8
   1df64:	str	r1, [fp, #-20]	; 0xffffffec
   1df68:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1df6c:	ldr	r0, [fp, #-12]
   1df70:	cmp	r0, #0
   1df74:	bge	1e0cc <__assert_fail@plt+0xcd9c>
   1df78:	mov	r0, #1
   1df7c:	cmp	r0, #0
   1df80:	bne	1e038 <__assert_fail@plt+0xcd08>
   1df84:	b	1df88 <__assert_fail@plt+0xcc58>
   1df88:	b	1dfbc <__assert_fail@plt+0xcc8c>
   1df8c:	ldr	r0, [fp, #-8]
   1df90:	ldr	r1, [r0]
   1df94:	ldr	r0, [r0, #4]
   1df98:	ldr	r2, [fp, #-12]
   1df9c:	mvn	r3, #0
   1dfa0:	udiv	r2, r3, r2
   1dfa4:	subs	r1, r1, r2
   1dfa8:	sbcs	r0, r0, #0
   1dfac:	str	r1, [fp, #-272]	; 0xfffffef0
   1dfb0:	str	r0, [fp, #-276]	; 0xfffffeec
   1dfb4:	bcc	1e1b0 <__assert_fail@plt+0xce80>
   1dfb8:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1dfbc:	b	1dfc0 <__assert_fail@plt+0xcc90>
   1dfc0:	ldr	r0, [pc, #3468]	; 1ed54 <__assert_fail@plt+0xda24>
   1dfc4:	ldr	r1, [fp, #-12]
   1dfc8:	cmp	r1, r0
   1dfcc:	blt	1dfe4 <__assert_fail@plt+0xccb4>
   1dfd0:	b	1dff0 <__assert_fail@plt+0xccc0>
   1dfd4:	ldr	r0, [fp, #-12]
   1dfd8:	movw	r1, #0
   1dfdc:	cmp	r1, r0
   1dfe0:	bge	1dff0 <__assert_fail@plt+0xccc0>
   1dfe4:	movw	r0, #1
   1dfe8:	str	r0, [fp, #-280]	; 0xfffffee8
   1dfec:	b	1e008 <__assert_fail@plt+0xccd8>
   1dff0:	ldr	r0, [fp, #-12]
   1dff4:	movw	r1, #0
   1dff8:	sub	r0, r1, r0
   1dffc:	mvn	r1, #0
   1e000:	udiv	r0, r1, r0
   1e004:	str	r0, [fp, #-280]	; 0xfffffee8
   1e008:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1e00c:	ldr	r1, [fp, #-8]
   1e010:	ldr	r2, [r1]
   1e014:	ldr	r1, [r1, #4]
   1e018:	mvn	r1, r1
   1e01c:	mvn	r2, r2
   1e020:	subs	r0, r2, r0
   1e024:	sbcs	r1, r1, #0
   1e028:	str	r0, [sp, #284]	; 0x11c
   1e02c:	str	r1, [sp, #280]	; 0x118
   1e030:	bcs	1e1b0 <__assert_fail@plt+0xce80>
   1e034:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e038:	b	1e03c <__assert_fail@plt+0xcd0c>
   1e03c:	b	1e09c <__assert_fail@plt+0xcd6c>
   1e040:	b	1e09c <__assert_fail@plt+0xcd6c>
   1e044:	ldr	r0, [fp, #-12]
   1e048:	cmn	r0, #1
   1e04c:	bne	1e09c <__assert_fail@plt+0xcd6c>
   1e050:	b	1e070 <__assert_fail@plt+0xcd40>
   1e054:	ldr	r0, [fp, #-8]
   1e058:	ldr	r1, [r0]
   1e05c:	ldr	r0, [r0, #4]
   1e060:	orr	r0, r1, r0
   1e064:	cmp	r0, #0
   1e068:	bne	1e1b0 <__assert_fail@plt+0xce80>
   1e06c:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e070:	ldr	r0, [fp, #-8]
   1e074:	ldr	r1, [r0]
   1e078:	ldr	r0, [r0, #4]
   1e07c:	orr	r0, r1, r0
   1e080:	cmp	r0, #0
   1e084:	beq	1e1d0 <__assert_fail@plt+0xcea0>
   1e088:	b	1e08c <__assert_fail@plt+0xcd5c>
   1e08c:	mov	r0, #0
   1e090:	cmp	r0, #0
   1e094:	bne	1e1b0 <__assert_fail@plt+0xce80>
   1e098:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e09c:	ldr	r0, [fp, #-12]
   1e0a0:	mov	r1, #0
   1e0a4:	sdiv	r0, r1, r0
   1e0a8:	ldr	r1, [fp, #-8]
   1e0ac:	ldr	r2, [r1]
   1e0b0:	ldr	r1, [r1, #4]
   1e0b4:	subs	r2, r0, r2
   1e0b8:	rscs	r0, r1, r0, asr #31
   1e0bc:	str	r2, [sp, #276]	; 0x114
   1e0c0:	str	r0, [sp, #272]	; 0x110
   1e0c4:	bcc	1e1b0 <__assert_fail@plt+0xce80>
   1e0c8:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e0cc:	ldr	r0, [fp, #-12]
   1e0d0:	cmp	r0, #0
   1e0d4:	bne	1e0dc <__assert_fail@plt+0xcdac>
   1e0d8:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e0dc:	mov	r0, #1
   1e0e0:	cmp	r0, #0
   1e0e4:	bne	1e180 <__assert_fail@plt+0xce50>
   1e0e8:	b	1e0ec <__assert_fail@plt+0xcdbc>
   1e0ec:	b	1e0f4 <__assert_fail@plt+0xcdc4>
   1e0f0:	b	1e0f8 <__assert_fail@plt+0xcdc8>
   1e0f4:	b	1e148 <__assert_fail@plt+0xce18>
   1e0f8:	ldr	r0, [fp, #-8]
   1e0fc:	ldr	r1, [r0]
   1e100:	ldr	r0, [r0, #4]
   1e104:	and	r0, r1, r0
   1e108:	cmn	r0, #1
   1e10c:	bne	1e148 <__assert_fail@plt+0xce18>
   1e110:	b	1e114 <__assert_fail@plt+0xcde4>
   1e114:	b	1e118 <__assert_fail@plt+0xcde8>
   1e118:	ldr	r0, [fp, #-12]
   1e11c:	add	r0, r0, #0
   1e120:	movw	r1, #0
   1e124:	cmp	r1, r0
   1e128:	blt	1e1b0 <__assert_fail@plt+0xce80>
   1e12c:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e130:	ldr	r0, [fp, #-12]
   1e134:	sub	r0, r0, #1
   1e138:	mvn	r1, #0
   1e13c:	cmp	r1, r0
   1e140:	blt	1e1b0 <__assert_fail@plt+0xce80>
   1e144:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e148:	ldr	r0, [fp, #-8]
   1e14c:	ldr	r2, [r0]
   1e150:	ldr	r3, [r0, #4]
   1e154:	mov	r0, #0
   1e158:	str	r0, [sp, #268]	; 0x10c
   1e15c:	ldr	r1, [sp, #268]	; 0x10c
   1e160:	bl	21500 <__assert_fail@plt+0x101d0>
   1e164:	ldr	r2, [fp, #-12]
   1e168:	subs	r0, r0, r2
   1e16c:	sbcs	r1, r1, r2, asr #31
   1e170:	str	r0, [sp, #264]	; 0x108
   1e174:	str	r1, [sp, #260]	; 0x104
   1e178:	bcc	1e1b0 <__assert_fail@plt+0xce80>
   1e17c:	b	1e1d0 <__assert_fail@plt+0xcea0>
   1e180:	ldr	r0, [fp, #-12]
   1e184:	mvn	r1, #0
   1e188:	udiv	r0, r1, r0
   1e18c:	ldr	r1, [fp, #-8]
   1e190:	ldr	r2, [r1]
   1e194:	ldr	r1, [r1, #4]
   1e198:	subs	r0, r0, r2
   1e19c:	rscs	r1, r1, #0
   1e1a0:	str	r0, [sp, #256]	; 0x100
   1e1a4:	str	r1, [sp, #252]	; 0xfc
   1e1a8:	bcs	1e1d0 <__assert_fail@plt+0xcea0>
   1e1ac:	b	1e1b0 <__assert_fail@plt+0xce80>
   1e1b0:	ldr	r0, [fp, #-8]
   1e1b4:	ldr	r0, [r0]
   1e1b8:	ldr	r1, [fp, #-12]
   1e1bc:	mul	r0, r0, r1
   1e1c0:	mov	r1, #0
   1e1c4:	str	r1, [fp, #-20]	; 0xffffffec
   1e1c8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e1cc:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1e1d0:	ldr	r0, [fp, #-8]
   1e1d4:	ldr	r0, [r0]
   1e1d8:	ldr	r1, [fp, #-12]
   1e1dc:	mul	r0, r0, r1
   1e1e0:	mov	r1, #0
   1e1e4:	str	r1, [fp, #-20]	; 0xffffffec
   1e1e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e1ec:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1e1f0:	b	1e70c <__assert_fail@plt+0xd3dc>
   1e1f4:	b	1e488 <__assert_fail@plt+0xd158>
   1e1f8:	ldr	r0, [fp, #-12]
   1e1fc:	cmp	r0, #0
   1e200:	bge	1e374 <__assert_fail@plt+0xd044>
   1e204:	mov	r0, #1
   1e208:	cmp	r0, #0
   1e20c:	bne	1e2c8 <__assert_fail@plt+0xcf98>
   1e210:	b	1e214 <__assert_fail@plt+0xcee4>
   1e214:	b	1e218 <__assert_fail@plt+0xcee8>
   1e218:	ldr	r0, [fp, #-8]
   1e21c:	ldr	r1, [r0]
   1e220:	ldr	r0, [r0, #4]
   1e224:	ldr	r2, [fp, #-12]
   1e228:	mvn	r3, #-2147483648	; 0x80000000
   1e22c:	sdiv	r2, r3, r2
   1e230:	subs	r1, r1, r2
   1e234:	sbcs	r0, r0, r2, asr #31
   1e238:	str	r1, [sp, #248]	; 0xf8
   1e23c:	str	r0, [sp, #244]	; 0xf4
   1e240:	bcc	1e448 <__assert_fail@plt+0xd118>
   1e244:	b	1e468 <__assert_fail@plt+0xd138>
   1e248:	b	1e24c <__assert_fail@plt+0xcf1c>
   1e24c:	ldr	r0, [pc, #2816]	; 1ed54 <__assert_fail@plt+0xda24>
   1e250:	ldr	r1, [fp, #-12]
   1e254:	cmp	r1, r0
   1e258:	blt	1e270 <__assert_fail@plt+0xcf40>
   1e25c:	b	1e27c <__assert_fail@plt+0xcf4c>
   1e260:	ldr	r0, [fp, #-12]
   1e264:	movw	r1, #0
   1e268:	cmp	r1, r0
   1e26c:	bge	1e27c <__assert_fail@plt+0xcf4c>
   1e270:	movw	r0, #0
   1e274:	str	r0, [sp, #240]	; 0xf0
   1e278:	b	1e294 <__assert_fail@plt+0xcf64>
   1e27c:	ldr	r0, [pc, #2772]	; 1ed58 <__assert_fail@plt+0xda28>
   1e280:	ldr	r1, [fp, #-12]
   1e284:	movw	r2, #0
   1e288:	sub	r1, r2, r1
   1e28c:	sdiv	r0, r0, r1
   1e290:	str	r0, [sp, #240]	; 0xf0
   1e294:	ldr	r0, [sp, #240]	; 0xf0
   1e298:	ldr	r1, [fp, #-8]
   1e29c:	ldr	r2, [r1]
   1e2a0:	ldr	r1, [r1, #4]
   1e2a4:	mvn	r1, r1
   1e2a8:	mvn	r2, r2
   1e2ac:	subs	r2, r2, r0
   1e2b0:	sbcs	r0, r1, r0, asr #31
   1e2b4:	str	r2, [sp, #236]	; 0xec
   1e2b8:	str	r0, [sp, #232]	; 0xe8
   1e2bc:	bcs	1e448 <__assert_fail@plt+0xd118>
   1e2c0:	b	1e468 <__assert_fail@plt+0xd138>
   1e2c4:	andhi	r0, r0, r1
   1e2c8:	ldr	r0, [fp, #-12]
   1e2cc:	cmn	r0, #1
   1e2d0:	bne	1e344 <__assert_fail@plt+0xd014>
   1e2d4:	b	1e2f8 <__assert_fail@plt+0xcfc8>
   1e2d8:	ldr	r0, [fp, #-8]
   1e2dc:	ldr	r1, [r0]
   1e2e0:	ldr	r0, [r0, #4]
   1e2e4:	eor	r1, r1, #-2147483648	; 0x80000000
   1e2e8:	orr	r0, r1, r0
   1e2ec:	cmp	r0, #0
   1e2f0:	bne	1e448 <__assert_fail@plt+0xd118>
   1e2f4:	b	1e468 <__assert_fail@plt+0xd138>
   1e2f8:	ldr	r0, [fp, #-8]
   1e2fc:	ldr	r1, [r0]
   1e300:	ldr	r0, [r0, #4]
   1e304:	orr	r0, r1, r0
   1e308:	cmp	r0, #0
   1e30c:	beq	1e468 <__assert_fail@plt+0xd138>
   1e310:	b	1e314 <__assert_fail@plt+0xcfe4>
   1e314:	ldr	r0, [fp, #-8]
   1e318:	ldr	r1, [r0]
   1e31c:	ldr	r0, [r0, #4]
   1e320:	subs	r1, r1, #1
   1e324:	sbc	r0, r0, #0
   1e328:	mvn	r2, #-2147483648	; 0x80000000
   1e32c:	subs	r1, r2, r1
   1e330:	rscs	r0, r0, #0
   1e334:	str	r1, [sp, #228]	; 0xe4
   1e338:	str	r0, [sp, #224]	; 0xe0
   1e33c:	bcc	1e448 <__assert_fail@plt+0xd118>
   1e340:	b	1e468 <__assert_fail@plt+0xd138>
   1e344:	ldr	r0, [fp, #-12]
   1e348:	mov	r1, #-2147483648	; 0x80000000
   1e34c:	sdiv	r0, r1, r0
   1e350:	ldr	r1, [fp, #-8]
   1e354:	ldr	r2, [r1]
   1e358:	ldr	r1, [r1, #4]
   1e35c:	subs	r2, r0, r2
   1e360:	rscs	r0, r1, r0, asr #31
   1e364:	str	r2, [sp, #220]	; 0xdc
   1e368:	str	r0, [sp, #216]	; 0xd8
   1e36c:	bcc	1e448 <__assert_fail@plt+0xd118>
   1e370:	b	1e468 <__assert_fail@plt+0xd138>
   1e374:	ldr	r0, [fp, #-12]
   1e378:	cmp	r0, #0
   1e37c:	bne	1e384 <__assert_fail@plt+0xd054>
   1e380:	b	1e468 <__assert_fail@plt+0xd138>
   1e384:	mov	r0, #1
   1e388:	cmp	r0, #0
   1e38c:	bne	1e418 <__assert_fail@plt+0xd0e8>
   1e390:	b	1e394 <__assert_fail@plt+0xd064>
   1e394:	ldr	r0, [fp, #-8]
   1e398:	ldr	r1, [r0]
   1e39c:	ldr	r0, [r0, #4]
   1e3a0:	and	r0, r1, r0
   1e3a4:	cmn	r0, #1
   1e3a8:	bne	1e3e4 <__assert_fail@plt+0xd0b4>
   1e3ac:	b	1e3b0 <__assert_fail@plt+0xd080>
   1e3b0:	b	1e3b4 <__assert_fail@plt+0xd084>
   1e3b4:	ldr	r0, [fp, #-12]
   1e3b8:	add	r0, r0, #-2147483648	; 0x80000000
   1e3bc:	movw	r1, #0
   1e3c0:	cmp	r1, r0
   1e3c4:	blt	1e448 <__assert_fail@plt+0xd118>
   1e3c8:	b	1e468 <__assert_fail@plt+0xd138>
   1e3cc:	ldr	r0, [pc, #2436]	; 1ed58 <__assert_fail@plt+0xda28>
   1e3d0:	ldr	r1, [fp, #-12]
   1e3d4:	sub	r1, r1, #1
   1e3d8:	cmp	r0, r1
   1e3dc:	blt	1e448 <__assert_fail@plt+0xd118>
   1e3e0:	b	1e468 <__assert_fail@plt+0xd138>
   1e3e4:	ldr	r0, [fp, #-8]
   1e3e8:	ldr	r2, [r0]
   1e3ec:	ldr	r3, [r0, #4]
   1e3f0:	mov	r0, #-2147483648	; 0x80000000
   1e3f4:	mvn	r1, #0
   1e3f8:	bl	21500 <__assert_fail@plt+0x101d0>
   1e3fc:	ldr	r2, [fp, #-12]
   1e400:	subs	r0, r0, r2
   1e404:	sbcs	r1, r1, r2, asr #31
   1e408:	str	r0, [sp, #212]	; 0xd4
   1e40c:	str	r1, [sp, #208]	; 0xd0
   1e410:	bcc	1e448 <__assert_fail@plt+0xd118>
   1e414:	b	1e468 <__assert_fail@plt+0xd138>
   1e418:	ldr	r0, [fp, #-12]
   1e41c:	mvn	r1, #-2147483648	; 0x80000000
   1e420:	sdiv	r0, r1, r0
   1e424:	ldr	r1, [fp, #-8]
   1e428:	ldr	r2, [r1]
   1e42c:	ldr	r1, [r1, #4]
   1e430:	subs	r2, r0, r2
   1e434:	rscs	r0, r1, r0, asr #31
   1e438:	str	r2, [sp, #204]	; 0xcc
   1e43c:	str	r0, [sp, #200]	; 0xc8
   1e440:	bcs	1e468 <__assert_fail@plt+0xd138>
   1e444:	b	1e448 <__assert_fail@plt+0xd118>
   1e448:	ldr	r0, [fp, #-8]
   1e44c:	ldr	r0, [r0]
   1e450:	ldr	r1, [fp, #-12]
   1e454:	mul	r0, r0, r1
   1e458:	asr	r1, r0, #31
   1e45c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e460:	str	r1, [fp, #-20]	; 0xffffffec
   1e464:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1e468:	ldr	r0, [fp, #-8]
   1e46c:	ldr	r0, [r0]
   1e470:	ldr	r1, [fp, #-12]
   1e474:	mul	r0, r0, r1
   1e478:	asr	r1, r0, #31
   1e47c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e480:	str	r1, [fp, #-20]	; 0xffffffec
   1e484:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1e488:	ldr	r0, [fp, #-12]
   1e48c:	cmp	r0, #0
   1e490:	bge	1e5e8 <__assert_fail@plt+0xd2b8>
   1e494:	mov	r0, #1
   1e498:	cmp	r0, #0
   1e49c:	bne	1e554 <__assert_fail@plt+0xd224>
   1e4a0:	b	1e4a4 <__assert_fail@plt+0xd174>
   1e4a4:	b	1e4d8 <__assert_fail@plt+0xd1a8>
   1e4a8:	ldr	r0, [fp, #-8]
   1e4ac:	ldr	r1, [r0]
   1e4b0:	ldr	r0, [r0, #4]
   1e4b4:	ldr	r2, [fp, #-12]
   1e4b8:	mvn	r3, #0
   1e4bc:	udiv	r2, r3, r2
   1e4c0:	subs	r1, r1, r2
   1e4c4:	sbcs	r0, r0, #0
   1e4c8:	str	r1, [sp, #196]	; 0xc4
   1e4cc:	str	r0, [sp, #192]	; 0xc0
   1e4d0:	bcc	1e6cc <__assert_fail@plt+0xd39c>
   1e4d4:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e4d8:	b	1e4dc <__assert_fail@plt+0xd1ac>
   1e4dc:	ldr	r0, [pc, #2160]	; 1ed54 <__assert_fail@plt+0xda24>
   1e4e0:	ldr	r1, [fp, #-12]
   1e4e4:	cmp	r1, r0
   1e4e8:	blt	1e500 <__assert_fail@plt+0xd1d0>
   1e4ec:	b	1e50c <__assert_fail@plt+0xd1dc>
   1e4f0:	ldr	r0, [fp, #-12]
   1e4f4:	movw	r1, #0
   1e4f8:	cmp	r1, r0
   1e4fc:	bge	1e50c <__assert_fail@plt+0xd1dc>
   1e500:	movw	r0, #1
   1e504:	str	r0, [sp, #188]	; 0xbc
   1e508:	b	1e524 <__assert_fail@plt+0xd1f4>
   1e50c:	ldr	r0, [fp, #-12]
   1e510:	movw	r1, #0
   1e514:	sub	r0, r1, r0
   1e518:	mvn	r1, #0
   1e51c:	udiv	r0, r1, r0
   1e520:	str	r0, [sp, #188]	; 0xbc
   1e524:	ldr	r0, [sp, #188]	; 0xbc
   1e528:	ldr	r1, [fp, #-8]
   1e52c:	ldr	r2, [r1]
   1e530:	ldr	r1, [r1, #4]
   1e534:	mvn	r1, r1
   1e538:	mvn	r2, r2
   1e53c:	subs	r0, r2, r0
   1e540:	sbcs	r1, r1, #0
   1e544:	str	r0, [sp, #184]	; 0xb8
   1e548:	str	r1, [sp, #180]	; 0xb4
   1e54c:	bcs	1e6cc <__assert_fail@plt+0xd39c>
   1e550:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e554:	b	1e558 <__assert_fail@plt+0xd228>
   1e558:	b	1e5b8 <__assert_fail@plt+0xd288>
   1e55c:	b	1e5b8 <__assert_fail@plt+0xd288>
   1e560:	ldr	r0, [fp, #-12]
   1e564:	cmn	r0, #1
   1e568:	bne	1e5b8 <__assert_fail@plt+0xd288>
   1e56c:	b	1e58c <__assert_fail@plt+0xd25c>
   1e570:	ldr	r0, [fp, #-8]
   1e574:	ldr	r1, [r0]
   1e578:	ldr	r0, [r0, #4]
   1e57c:	orr	r0, r1, r0
   1e580:	cmp	r0, #0
   1e584:	bne	1e6cc <__assert_fail@plt+0xd39c>
   1e588:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e58c:	ldr	r0, [fp, #-8]
   1e590:	ldr	r1, [r0]
   1e594:	ldr	r0, [r0, #4]
   1e598:	orr	r0, r1, r0
   1e59c:	cmp	r0, #0
   1e5a0:	beq	1e6ec <__assert_fail@plt+0xd3bc>
   1e5a4:	b	1e5a8 <__assert_fail@plt+0xd278>
   1e5a8:	mov	r0, #0
   1e5ac:	cmp	r0, #0
   1e5b0:	bne	1e6cc <__assert_fail@plt+0xd39c>
   1e5b4:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e5b8:	ldr	r0, [fp, #-12]
   1e5bc:	mov	r1, #0
   1e5c0:	sdiv	r0, r1, r0
   1e5c4:	ldr	r1, [fp, #-8]
   1e5c8:	ldr	r2, [r1]
   1e5cc:	ldr	r1, [r1, #4]
   1e5d0:	subs	r2, r0, r2
   1e5d4:	rscs	r0, r1, r0, asr #31
   1e5d8:	str	r2, [sp, #176]	; 0xb0
   1e5dc:	str	r0, [sp, #172]	; 0xac
   1e5e0:	bcc	1e6cc <__assert_fail@plt+0xd39c>
   1e5e4:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e5e8:	ldr	r0, [fp, #-12]
   1e5ec:	cmp	r0, #0
   1e5f0:	bne	1e5f8 <__assert_fail@plt+0xd2c8>
   1e5f4:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e5f8:	mov	r0, #1
   1e5fc:	cmp	r0, #0
   1e600:	bne	1e69c <__assert_fail@plt+0xd36c>
   1e604:	b	1e608 <__assert_fail@plt+0xd2d8>
   1e608:	b	1e610 <__assert_fail@plt+0xd2e0>
   1e60c:	b	1e614 <__assert_fail@plt+0xd2e4>
   1e610:	b	1e664 <__assert_fail@plt+0xd334>
   1e614:	ldr	r0, [fp, #-8]
   1e618:	ldr	r1, [r0]
   1e61c:	ldr	r0, [r0, #4]
   1e620:	and	r0, r1, r0
   1e624:	cmn	r0, #1
   1e628:	bne	1e664 <__assert_fail@plt+0xd334>
   1e62c:	b	1e630 <__assert_fail@plt+0xd300>
   1e630:	b	1e634 <__assert_fail@plt+0xd304>
   1e634:	ldr	r0, [fp, #-12]
   1e638:	add	r0, r0, #0
   1e63c:	movw	r1, #0
   1e640:	cmp	r1, r0
   1e644:	blt	1e6cc <__assert_fail@plt+0xd39c>
   1e648:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e64c:	ldr	r0, [fp, #-12]
   1e650:	sub	r0, r0, #1
   1e654:	mvn	r1, #0
   1e658:	cmp	r1, r0
   1e65c:	blt	1e6cc <__assert_fail@plt+0xd39c>
   1e660:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e664:	ldr	r0, [fp, #-8]
   1e668:	ldr	r2, [r0]
   1e66c:	ldr	r3, [r0, #4]
   1e670:	mov	r0, #0
   1e674:	str	r0, [sp, #168]	; 0xa8
   1e678:	ldr	r1, [sp, #168]	; 0xa8
   1e67c:	bl	21500 <__assert_fail@plt+0x101d0>
   1e680:	ldr	r2, [fp, #-12]
   1e684:	subs	r0, r0, r2
   1e688:	sbcs	r1, r1, r2, asr #31
   1e68c:	str	r0, [sp, #164]	; 0xa4
   1e690:	str	r1, [sp, #160]	; 0xa0
   1e694:	bcc	1e6cc <__assert_fail@plt+0xd39c>
   1e698:	b	1e6ec <__assert_fail@plt+0xd3bc>
   1e69c:	ldr	r0, [fp, #-12]
   1e6a0:	mvn	r1, #0
   1e6a4:	udiv	r0, r1, r0
   1e6a8:	ldr	r1, [fp, #-8]
   1e6ac:	ldr	r2, [r1]
   1e6b0:	ldr	r1, [r1, #4]
   1e6b4:	subs	r0, r0, r2
   1e6b8:	rscs	r1, r1, #0
   1e6bc:	str	r0, [sp, #156]	; 0x9c
   1e6c0:	str	r1, [sp, #152]	; 0x98
   1e6c4:	bcs	1e6ec <__assert_fail@plt+0xd3bc>
   1e6c8:	b	1e6cc <__assert_fail@plt+0xd39c>
   1e6cc:	ldr	r0, [fp, #-8]
   1e6d0:	ldr	r0, [r0]
   1e6d4:	ldr	r1, [fp, #-12]
   1e6d8:	mul	r0, r0, r1
   1e6dc:	mov	r1, #0
   1e6e0:	str	r1, [fp, #-20]	; 0xffffffec
   1e6e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6e8:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1e6ec:	ldr	r0, [fp, #-8]
   1e6f0:	ldr	r0, [r0]
   1e6f4:	ldr	r1, [fp, #-12]
   1e6f8:	mul	r0, r0, r1
   1e6fc:	mov	r1, #0
   1e700:	str	r1, [fp, #-20]	; 0xffffffec
   1e704:	str	r0, [fp, #-24]	; 0xffffffe8
   1e708:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1e70c:	b	1ea28 <__assert_fail@plt+0xd6f8>
   1e710:	ldr	r0, [fp, #-12]
   1e714:	cmp	r0, #0
   1e718:	bge	1e8dc <__assert_fail@plt+0xd5ac>
   1e71c:	mov	r0, #1
   1e720:	cmp	r0, #0
   1e724:	bne	1e824 <__assert_fail@plt+0xd4f4>
   1e728:	b	1e72c <__assert_fail@plt+0xd3fc>
   1e72c:	b	1e730 <__assert_fail@plt+0xd400>
   1e730:	ldr	r0, [fp, #-8]
   1e734:	ldr	r1, [r0]
   1e738:	ldr	r0, [r0, #4]
   1e73c:	ldr	r2, [fp, #-12]
   1e740:	asr	r3, r2, #31
   1e744:	mvn	ip, #0
   1e748:	mvn	lr, #-2147483648	; 0x80000000
   1e74c:	str	r0, [sp, #148]	; 0x94
   1e750:	mov	r0, ip
   1e754:	str	r1, [sp, #144]	; 0x90
   1e758:	mov	r1, lr
   1e75c:	bl	2142c <__assert_fail@plt+0x100fc>
   1e760:	ldr	r2, [sp, #144]	; 0x90
   1e764:	subs	r0, r2, r0
   1e768:	ldr	r2, [sp, #148]	; 0x94
   1e76c:	sbcs	r1, r2, r1
   1e770:	str	r0, [sp, #140]	; 0x8c
   1e774:	str	r1, [sp, #136]	; 0x88
   1e778:	bcc	1e9d0 <__assert_fail@plt+0xd6a0>
   1e77c:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e780:	b	1e784 <__assert_fail@plt+0xd454>
   1e784:	ldr	r0, [pc, #1480]	; 1ed54 <__assert_fail@plt+0xda24>
   1e788:	ldr	r1, [fp, #-12]
   1e78c:	cmp	r1, r0
   1e790:	blt	1e7a8 <__assert_fail@plt+0xd478>
   1e794:	b	1e7bc <__assert_fail@plt+0xd48c>
   1e798:	ldr	r0, [fp, #-12]
   1e79c:	movw	r1, #0
   1e7a0:	cmp	r1, r0
   1e7a4:	bge	1e7bc <__assert_fail@plt+0xd48c>
   1e7a8:	mov	r0, #0
   1e7ac:	mvn	r1, #0
   1e7b0:	str	r1, [sp, #132]	; 0x84
   1e7b4:	str	r0, [sp, #128]	; 0x80
   1e7b8:	b	1e7f0 <__assert_fail@plt+0xd4c0>
   1e7bc:	ldr	r0, [fp, #-12]
   1e7c0:	rsb	r0, r0, #0
   1e7c4:	asr	r3, r0, #31
   1e7c8:	mvn	r1, #0
   1e7cc:	mvn	r2, #-2147483648	; 0x80000000
   1e7d0:	str	r0, [sp, #124]	; 0x7c
   1e7d4:	mov	r0, r1
   1e7d8:	mov	r1, r2
   1e7dc:	ldr	r2, [sp, #124]	; 0x7c
   1e7e0:	bl	2142c <__assert_fail@plt+0x100fc>
   1e7e4:	str	r0, [sp, #132]	; 0x84
   1e7e8:	str	r1, [sp, #128]	; 0x80
   1e7ec:	b	1e7f0 <__assert_fail@plt+0xd4c0>
   1e7f0:	ldr	r0, [sp, #128]	; 0x80
   1e7f4:	ldr	r1, [sp, #132]	; 0x84
   1e7f8:	ldr	r2, [fp, #-8]
   1e7fc:	ldr	r3, [r2]
   1e800:	ldr	r2, [r2, #4]
   1e804:	mvn	r2, r2
   1e808:	mvn	r3, r3
   1e80c:	subs	r1, r3, r1
   1e810:	sbcs	r0, r2, r0
   1e814:	str	r1, [sp, #120]	; 0x78
   1e818:	str	r0, [sp, #116]	; 0x74
   1e81c:	bcs	1e9d0 <__assert_fail@plt+0xd6a0>
   1e820:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e824:	ldr	r0, [fp, #-12]
   1e828:	cmn	r0, #1
   1e82c:	bne	1e894 <__assert_fail@plt+0xd564>
   1e830:	b	1e854 <__assert_fail@plt+0xd524>
   1e834:	ldr	r0, [fp, #-8]
   1e838:	ldr	r1, [r0]
   1e83c:	ldr	r0, [r0, #4]
   1e840:	eor	r0, r0, #-2147483648	; 0x80000000
   1e844:	orr	r0, r1, r0
   1e848:	cmp	r0, #0
   1e84c:	bne	1e9d0 <__assert_fail@plt+0xd6a0>
   1e850:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e854:	ldr	r0, [fp, #-8]
   1e858:	ldr	r1, [r0]
   1e85c:	ldr	r0, [r0, #4]
   1e860:	orr	r0, r1, r0
   1e864:	cmp	r0, #0
   1e868:	beq	1e9fc <__assert_fail@plt+0xd6cc>
   1e86c:	b	1e870 <__assert_fail@plt+0xd540>
   1e870:	ldr	r0, [fp, #-8]
   1e874:	ldr	r1, [r0]
   1e878:	ldr	r0, [r0, #4]
   1e87c:	subs	r1, r1, #1
   1e880:	sbc	r0, r0, #0
   1e884:	cmp	r0, #0
   1e888:	str	r1, [sp, #112]	; 0x70
   1e88c:	blt	1e9d0 <__assert_fail@plt+0xd6a0>
   1e890:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e894:	ldr	r0, [fp, #-12]
   1e898:	asr	r3, r0, #31
   1e89c:	mov	r1, #0
   1e8a0:	mov	r2, #-2147483648	; 0x80000000
   1e8a4:	str	r0, [sp, #108]	; 0x6c
   1e8a8:	mov	r0, r1
   1e8ac:	mov	r1, r2
   1e8b0:	ldr	r2, [sp, #108]	; 0x6c
   1e8b4:	bl	2142c <__assert_fail@plt+0x100fc>
   1e8b8:	ldr	r2, [fp, #-8]
   1e8bc:	ldr	r3, [r2]
   1e8c0:	ldr	r2, [r2, #4]
   1e8c4:	subs	r0, r0, r3
   1e8c8:	sbcs	r1, r1, r2
   1e8cc:	str	r0, [sp, #104]	; 0x68
   1e8d0:	str	r1, [sp, #100]	; 0x64
   1e8d4:	bcc	1e9d0 <__assert_fail@plt+0xd6a0>
   1e8d8:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e8dc:	ldr	r0, [fp, #-12]
   1e8e0:	cmp	r0, #0
   1e8e4:	bne	1e8ec <__assert_fail@plt+0xd5bc>
   1e8e8:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e8ec:	mov	r0, #1
   1e8f0:	cmp	r0, #0
   1e8f4:	bne	1e988 <__assert_fail@plt+0xd658>
   1e8f8:	b	1e8fc <__assert_fail@plt+0xd5cc>
   1e8fc:	ldr	r0, [fp, #-8]
   1e900:	ldr	r1, [r0]
   1e904:	ldr	r0, [r0, #4]
   1e908:	and	r0, r1, r0
   1e90c:	cmn	r0, #1
   1e910:	bne	1e954 <__assert_fail@plt+0xd624>
   1e914:	b	1e918 <__assert_fail@plt+0xd5e8>
   1e918:	b	1e91c <__assert_fail@plt+0xd5ec>
   1e91c:	ldr	r0, [fp, #-12]
   1e920:	mov	r1, #-2147483648	; 0x80000000
   1e924:	add	r1, r1, r0, asr #31
   1e928:	rsbs	r0, r0, #0
   1e92c:	rscs	r1, r1, #0
   1e930:	str	r0, [sp, #96]	; 0x60
   1e934:	str	r1, [sp, #92]	; 0x5c
   1e938:	blt	1e9d0 <__assert_fail@plt+0xd6a0>
   1e93c:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e940:	mov	r0, #0
   1e944:	cmp	r0, #0
   1e948:	bne	1e9d0 <__assert_fail@plt+0xd6a0>
   1e94c:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e950:			; <UNDEFINED> instruction: 0xffff8000
   1e954:	ldr	r0, [fp, #-8]
   1e958:	ldr	r2, [r0]
   1e95c:	ldr	r3, [r0, #4]
   1e960:	mov	r0, #0
   1e964:	mov	r1, #-2147483648	; 0x80000000
   1e968:	bl	21500 <__assert_fail@plt+0x101d0>
   1e96c:	ldr	r2, [fp, #-12]
   1e970:	subs	r0, r0, r2
   1e974:	sbcs	r1, r1, r2, asr #31
   1e978:	str	r0, [sp, #88]	; 0x58
   1e97c:	str	r1, [sp, #84]	; 0x54
   1e980:	bcc	1e9d0 <__assert_fail@plt+0xd6a0>
   1e984:	b	1e9fc <__assert_fail@plt+0xd6cc>
   1e988:	ldr	r0, [fp, #-12]
   1e98c:	asr	r3, r0, #31
   1e990:	mvn	r1, #0
   1e994:	mvn	r2, #-2147483648	; 0x80000000
   1e998:	str	r0, [sp, #80]	; 0x50
   1e99c:	mov	r0, r1
   1e9a0:	mov	r1, r2
   1e9a4:	ldr	r2, [sp, #80]	; 0x50
   1e9a8:	bl	2142c <__assert_fail@plt+0x100fc>
   1e9ac:	ldr	r2, [fp, #-8]
   1e9b0:	ldr	r3, [r2]
   1e9b4:	ldr	r2, [r2, #4]
   1e9b8:	subs	r0, r0, r3
   1e9bc:	sbcs	r1, r1, r2
   1e9c0:	str	r0, [sp, #76]	; 0x4c
   1e9c4:	str	r1, [sp, #72]	; 0x48
   1e9c8:	bcs	1e9fc <__assert_fail@plt+0xd6cc>
   1e9cc:	b	1e9d0 <__assert_fail@plt+0xd6a0>
   1e9d0:	ldr	r0, [fp, #-8]
   1e9d4:	ldr	r1, [r0]
   1e9d8:	ldr	r0, [r0, #4]
   1e9dc:	ldr	r2, [fp, #-12]
   1e9e0:	asr	r3, r2, #31
   1e9e4:	umull	ip, lr, r1, r2
   1e9e8:	mla	r1, r1, r3, lr
   1e9ec:	mla	r0, r0, r2, r1
   1e9f0:	str	ip, [fp, #-24]	; 0xffffffe8
   1e9f4:	str	r0, [fp, #-20]	; 0xffffffec
   1e9f8:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1e9fc:	ldr	r0, [fp, #-8]
   1ea00:	ldr	r1, [r0]
   1ea04:	ldr	r0, [r0, #4]
   1ea08:	ldr	r2, [fp, #-12]
   1ea0c:	asr	r3, r2, #31
   1ea10:	umull	ip, lr, r1, r2
   1ea14:	mla	r1, r1, r3, lr
   1ea18:	mla	r0, r0, r2, r1
   1ea1c:	str	ip, [fp, #-24]	; 0xffffffe8
   1ea20:	str	r0, [fp, #-20]	; 0xffffffec
   1ea24:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1ea28:	ldr	r0, [fp, #-12]
   1ea2c:	cmp	r0, #0
   1ea30:	bge	1ebc4 <__assert_fail@plt+0xd894>
   1ea34:	mov	r0, #1
   1ea38:	cmp	r0, #0
   1ea3c:	bne	1eb30 <__assert_fail@plt+0xd800>
   1ea40:	b	1ea44 <__assert_fail@plt+0xd714>
   1ea44:	b	1ea94 <__assert_fail@plt+0xd764>
   1ea48:	ldr	r0, [fp, #-8]
   1ea4c:	ldr	r1, [r0]
   1ea50:	ldr	r0, [r0, #4]
   1ea54:	ldr	r2, [fp, #-12]
   1ea58:	asr	r3, r2, #31
   1ea5c:	mvn	ip, #0
   1ea60:	str	r0, [sp, #68]	; 0x44
   1ea64:	mov	r0, ip
   1ea68:	str	r1, [sp, #64]	; 0x40
   1ea6c:	mov	r1, ip
   1ea70:	bl	21500 <__assert_fail@plt+0x101d0>
   1ea74:	ldr	r2, [sp, #64]	; 0x40
   1ea78:	subs	r0, r2, r0
   1ea7c:	ldr	r2, [sp, #68]	; 0x44
   1ea80:	sbcs	r1, r2, r1
   1ea84:	str	r0, [sp, #60]	; 0x3c
   1ea88:	str	r1, [sp, #56]	; 0x38
   1ea8c:	bcc	1ecb8 <__assert_fail@plt+0xd988>
   1ea90:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1ea94:	b	1ea98 <__assert_fail@plt+0xd768>
   1ea98:	ldr	r0, [pc, #692]	; 1ed54 <__assert_fail@plt+0xda24>
   1ea9c:	ldr	r1, [fp, #-12]
   1eaa0:	cmp	r1, r0
   1eaa4:	blt	1eabc <__assert_fail@plt+0xd78c>
   1eaa8:	b	1ead0 <__assert_fail@plt+0xd7a0>
   1eaac:	ldr	r0, [fp, #-12]
   1eab0:	movw	r1, #0
   1eab4:	cmp	r1, r0
   1eab8:	bge	1ead0 <__assert_fail@plt+0xd7a0>
   1eabc:	mov	r0, #1
   1eac0:	mvn	r1, #0
   1eac4:	str	r1, [sp, #52]	; 0x34
   1eac8:	str	r0, [sp, #48]	; 0x30
   1eacc:	b	1eafc <__assert_fail@plt+0xd7cc>
   1ead0:	ldr	r0, [fp, #-12]
   1ead4:	rsb	r0, r0, #0
   1ead8:	asr	r3, r0, #31
   1eadc:	mvn	r1, #0
   1eae0:	str	r0, [sp, #44]	; 0x2c
   1eae4:	mov	r0, r1
   1eae8:	ldr	r2, [sp, #44]	; 0x2c
   1eaec:	bl	21500 <__assert_fail@plt+0x101d0>
   1eaf0:	str	r0, [sp, #52]	; 0x34
   1eaf4:	str	r1, [sp, #48]	; 0x30
   1eaf8:	b	1eafc <__assert_fail@plt+0xd7cc>
   1eafc:	ldr	r0, [sp, #48]	; 0x30
   1eb00:	ldr	r1, [sp, #52]	; 0x34
   1eb04:	ldr	r2, [fp, #-8]
   1eb08:	ldr	r3, [r2]
   1eb0c:	ldr	r2, [r2, #4]
   1eb10:	mvn	r2, r2
   1eb14:	mvn	r3, r3
   1eb18:	subs	r1, r3, r1
   1eb1c:	sbcs	r0, r2, r0
   1eb20:	str	r1, [sp, #40]	; 0x28
   1eb24:	str	r0, [sp, #36]	; 0x24
   1eb28:	bcs	1ecb8 <__assert_fail@plt+0xd988>
   1eb2c:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1eb30:	b	1eb34 <__assert_fail@plt+0xd804>
   1eb34:	b	1eb94 <__assert_fail@plt+0xd864>
   1eb38:	b	1eb94 <__assert_fail@plt+0xd864>
   1eb3c:	ldr	r0, [fp, #-12]
   1eb40:	cmn	r0, #1
   1eb44:	bne	1eb94 <__assert_fail@plt+0xd864>
   1eb48:	b	1eb68 <__assert_fail@plt+0xd838>
   1eb4c:	ldr	r0, [fp, #-8]
   1eb50:	ldr	r1, [r0]
   1eb54:	ldr	r0, [r0, #4]
   1eb58:	orr	r0, r1, r0
   1eb5c:	cmp	r0, #0
   1eb60:	bne	1ecb8 <__assert_fail@plt+0xd988>
   1eb64:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1eb68:	ldr	r0, [fp, #-8]
   1eb6c:	ldr	r1, [r0]
   1eb70:	ldr	r0, [r0, #4]
   1eb74:	orr	r0, r1, r0
   1eb78:	cmp	r0, #0
   1eb7c:	beq	1ece4 <__assert_fail@plt+0xd9b4>
   1eb80:	b	1eb84 <__assert_fail@plt+0xd854>
   1eb84:	mov	r0, #0
   1eb88:	cmp	r0, #0
   1eb8c:	bne	1ecb8 <__assert_fail@plt+0xd988>
   1eb90:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1eb94:	ldr	r0, [fp, #-12]
   1eb98:	mov	r1, #0
   1eb9c:	sdiv	r0, r1, r0
   1eba0:	ldr	r1, [fp, #-8]
   1eba4:	ldr	r2, [r1]
   1eba8:	ldr	r1, [r1, #4]
   1ebac:	subs	r2, r0, r2
   1ebb0:	rscs	r0, r1, r0, asr #31
   1ebb4:	str	r2, [sp, #32]
   1ebb8:	str	r0, [sp, #28]
   1ebbc:	bcc	1ecb8 <__assert_fail@plt+0xd988>
   1ebc0:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1ebc4:	ldr	r0, [fp, #-12]
   1ebc8:	cmp	r0, #0
   1ebcc:	bne	1ebd4 <__assert_fail@plt+0xd8a4>
   1ebd0:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1ebd4:	mov	r0, #1
   1ebd8:	cmp	r0, #0
   1ebdc:	bne	1ec78 <__assert_fail@plt+0xd948>
   1ebe0:	b	1ebe4 <__assert_fail@plt+0xd8b4>
   1ebe4:	b	1ebec <__assert_fail@plt+0xd8bc>
   1ebe8:	b	1ebf0 <__assert_fail@plt+0xd8c0>
   1ebec:	b	1ec40 <__assert_fail@plt+0xd910>
   1ebf0:	ldr	r0, [fp, #-8]
   1ebf4:	ldr	r1, [r0]
   1ebf8:	ldr	r0, [r0, #4]
   1ebfc:	and	r0, r1, r0
   1ec00:	cmn	r0, #1
   1ec04:	bne	1ec40 <__assert_fail@plt+0xd910>
   1ec08:	b	1ec0c <__assert_fail@plt+0xd8dc>
   1ec0c:	b	1ec10 <__assert_fail@plt+0xd8e0>
   1ec10:	ldr	r0, [fp, #-12]
   1ec14:	add	r0, r0, #0
   1ec18:	movw	r1, #0
   1ec1c:	cmp	r1, r0
   1ec20:	blt	1ecb8 <__assert_fail@plt+0xd988>
   1ec24:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1ec28:	ldr	r0, [fp, #-12]
   1ec2c:	sub	r0, r0, #1
   1ec30:	mvn	r1, #0
   1ec34:	cmp	r1, r0
   1ec38:	blt	1ecb8 <__assert_fail@plt+0xd988>
   1ec3c:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1ec40:	ldr	r0, [fp, #-8]
   1ec44:	ldr	r2, [r0]
   1ec48:	ldr	r3, [r0, #4]
   1ec4c:	mov	r0, #0
   1ec50:	str	r0, [sp, #24]
   1ec54:	ldr	r1, [sp, #24]
   1ec58:	bl	21500 <__assert_fail@plt+0x101d0>
   1ec5c:	ldr	r2, [fp, #-12]
   1ec60:	subs	r0, r0, r2
   1ec64:	sbcs	r1, r1, r2, asr #31
   1ec68:	str	r0, [sp, #20]
   1ec6c:	str	r1, [sp, #16]
   1ec70:	bcc	1ecb8 <__assert_fail@plt+0xd988>
   1ec74:	b	1ece4 <__assert_fail@plt+0xd9b4>
   1ec78:	ldr	r0, [fp, #-12]
   1ec7c:	asr	r3, r0, #31
   1ec80:	mvn	r1, #0
   1ec84:	str	r0, [sp, #12]
   1ec88:	mov	r0, r1
   1ec8c:	ldr	r2, [sp, #12]
   1ec90:	bl	21500 <__assert_fail@plt+0x101d0>
   1ec94:	ldr	r2, [fp, #-8]
   1ec98:	ldr	r3, [r2]
   1ec9c:	ldr	r2, [r2, #4]
   1eca0:	subs	r0, r0, r3
   1eca4:	sbcs	r1, r1, r2
   1eca8:	str	r0, [sp, #8]
   1ecac:	str	r1, [sp, #4]
   1ecb0:	bcs	1ece4 <__assert_fail@plt+0xd9b4>
   1ecb4:	b	1ecb8 <__assert_fail@plt+0xd988>
   1ecb8:	ldr	r0, [fp, #-8]
   1ecbc:	ldr	r1, [r0]
   1ecc0:	ldr	r0, [r0, #4]
   1ecc4:	ldr	r2, [fp, #-12]
   1ecc8:	asr	r3, r2, #31
   1eccc:	umull	ip, lr, r1, r2
   1ecd0:	mla	r1, r1, r3, lr
   1ecd4:	mla	r0, r0, r2, r1
   1ecd8:	str	ip, [fp, #-24]	; 0xffffffe8
   1ecdc:	str	r0, [fp, #-20]	; 0xffffffec
   1ece0:	b	1ed10 <__assert_fail@plt+0xd9e0>
   1ece4:	ldr	r0, [fp, #-8]
   1ece8:	ldr	r1, [r0]
   1ecec:	ldr	r0, [r0, #4]
   1ecf0:	ldr	r2, [fp, #-12]
   1ecf4:	asr	r3, r2, #31
   1ecf8:	umull	ip, lr, r1, r2
   1ecfc:	mla	r1, r1, r3, lr
   1ed00:	mla	r0, r0, r2, r1
   1ed04:	str	ip, [fp, #-24]	; 0xffffffe8
   1ed08:	str	r0, [fp, #-20]	; 0xffffffec
   1ed0c:	b	1ed2c <__assert_fail@plt+0xd9fc>
   1ed10:	ldr	r0, [fp, #-8]
   1ed14:	mvn	r1, #0
   1ed18:	str	r1, [r0, #4]
   1ed1c:	str	r1, [r0]
   1ed20:	movw	r0, #1
   1ed24:	str	r0, [fp, #-4]
   1ed28:	b	1ed48 <__assert_fail@plt+0xda18>
   1ed2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed30:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ed34:	ldr	r2, [fp, #-8]
   1ed38:	str	r1, [r2, #4]
   1ed3c:	str	r0, [r2]
   1ed40:	movw	r0, #0
   1ed44:	str	r0, [fp, #-4]
   1ed48:	ldr	r0, [fp, #-4]
   1ed4c:	mov	sp, fp
   1ed50:	pop	{fp, pc}
   1ed54:	andhi	r0, r0, r1
   1ed58:	svcvc	0x00ffffff
   1ed5c:	push	{fp, lr}
   1ed60:	mov	fp, sp
   1ed64:	sub	sp, sp, #16
   1ed68:	str	r0, [fp, #-4]
   1ed6c:	str	r1, [sp, #8]
   1ed70:	str	r2, [sp, #4]
   1ed74:	movw	r0, #0
   1ed78:	str	r0, [sp]
   1ed7c:	ldr	r0, [sp, #4]
   1ed80:	mvn	r1, #0
   1ed84:	add	r1, r0, r1
   1ed88:	str	r1, [sp, #4]
   1ed8c:	cmp	r0, #0
   1ed90:	beq	1edb0 <__assert_fail@plt+0xda80>
   1ed94:	ldr	r0, [fp, #-4]
   1ed98:	ldr	r1, [sp, #8]
   1ed9c:	bl	1d254 <__assert_fail@plt+0xbf24>
   1eda0:	ldr	r1, [sp]
   1eda4:	orr	r0, r1, r0
   1eda8:	str	r0, [sp]
   1edac:	b	1ed7c <__assert_fail@plt+0xda4c>
   1edb0:	ldr	r0, [sp]
   1edb4:	mov	sp, fp
   1edb8:	pop	{fp, pc}
   1edbc:	push	{fp, lr}
   1edc0:	mov	fp, sp
   1edc4:	sub	sp, sp, #16
   1edc8:	str	r0, [sp, #8]
   1edcc:	str	r1, [sp, #4]
   1edd0:	ldr	r0, [sp, #8]
   1edd4:	cmp	r0, #0
   1edd8:	beq	1ede8 <__assert_fail@plt+0xdab8>
   1eddc:	ldr	r0, [sp, #4]
   1ede0:	cmp	r0, #0
   1ede4:	bne	1edf4 <__assert_fail@plt+0xdac4>
   1ede8:	movw	r0, #1
   1edec:	str	r0, [sp, #4]
   1edf0:	str	r0, [sp, #8]
   1edf4:	ldr	r0, [sp, #4]
   1edf8:	cmp	r0, #0
   1edfc:	beq	1ee30 <__assert_fail@plt+0xdb00>
   1ee00:	ldr	r0, [pc, #76]	; 1ee54 <__assert_fail@plt+0xdb24>
   1ee04:	ldr	r1, [sp, #4]
   1ee08:	udiv	r0, r0, r1
   1ee0c:	ldr	r1, [sp, #8]
   1ee10:	cmp	r0, r1
   1ee14:	bcs	1ee30 <__assert_fail@plt+0xdb00>
   1ee18:	bl	11228 <__errno_location@plt>
   1ee1c:	movw	lr, #12
   1ee20:	str	lr, [r0]
   1ee24:	movw	r0, #0
   1ee28:	str	r0, [fp, #-4]
   1ee2c:	b	1ee48 <__assert_fail@plt+0xdb18>
   1ee30:	ldr	r0, [sp, #8]
   1ee34:	ldr	r1, [sp, #4]
   1ee38:	bl	11078 <calloc@plt>
   1ee3c:	str	r0, [sp]
   1ee40:	ldr	r0, [sp]
   1ee44:	str	r0, [fp, #-4]
   1ee48:	ldr	r0, [fp, #-4]
   1ee4c:	mov	sp, fp
   1ee50:	pop	{fp, pc}
   1ee54:	svcvc	0x00ffffff
   1ee58:	push	{fp, lr}
   1ee5c:	mov	fp, sp
   1ee60:	sub	sp, sp, #16
   1ee64:	str	r0, [sp, #8]
   1ee68:	ldr	r0, [sp, #8]
   1ee6c:	cmp	r0, #0
   1ee70:	bne	1ee7c <__assert_fail@plt+0xdb4c>
   1ee74:	movw	r0, #1
   1ee78:	str	r0, [sp, #8]
   1ee7c:	ldr	r0, [pc, #64]	; 1eec4 <__assert_fail@plt+0xdb94>
   1ee80:	ldr	r1, [sp, #8]
   1ee84:	cmp	r0, r1
   1ee88:	bcs	1eea4 <__assert_fail@plt+0xdb74>
   1ee8c:	bl	11228 <__errno_location@plt>
   1ee90:	movw	lr, #12
   1ee94:	str	lr, [r0]
   1ee98:	movw	r0, #0
   1ee9c:	str	r0, [fp, #-4]
   1eea0:	b	1eeb8 <__assert_fail@plt+0xdb88>
   1eea4:	ldr	r0, [sp, #8]
   1eea8:	bl	11198 <malloc@plt>
   1eeac:	str	r0, [sp, #4]
   1eeb0:	ldr	r0, [sp, #4]
   1eeb4:	str	r0, [fp, #-4]
   1eeb8:	ldr	r0, [fp, #-4]
   1eebc:	mov	sp, fp
   1eec0:	pop	{fp, pc}
   1eec4:	svcvc	0x00ffffff
   1eec8:	push	{fp, lr}
   1eecc:	mov	fp, sp
   1eed0:	sub	sp, sp, #16
   1eed4:	str	r0, [sp, #8]
   1eed8:	str	r1, [sp, #4]
   1eedc:	ldr	r0, [sp, #8]
   1eee0:	movw	r1, #0
   1eee4:	cmp	r0, r1
   1eee8:	bne	1eefc <__assert_fail@plt+0xdbcc>
   1eeec:	ldr	r0, [sp, #4]
   1eef0:	bl	1ee58 <__assert_fail@plt+0xdb28>
   1eef4:	str	r0, [fp, #-4]
   1eef8:	b	1ef5c <__assert_fail@plt+0xdc2c>
   1eefc:	ldr	r0, [sp, #4]
   1ef00:	cmp	r0, #0
   1ef04:	bne	1ef1c <__assert_fail@plt+0xdbec>
   1ef08:	ldr	r0, [sp, #8]
   1ef0c:	bl	147b0 <__assert_fail@plt+0x3480>
   1ef10:	movw	r0, #0
   1ef14:	str	r0, [fp, #-4]
   1ef18:	b	1ef5c <__assert_fail@plt+0xdc2c>
   1ef1c:	ldr	r0, [pc, #68]	; 1ef68 <__assert_fail@plt+0xdc38>
   1ef20:	ldr	r1, [sp, #4]
   1ef24:	cmp	r0, r1
   1ef28:	bcs	1ef44 <__assert_fail@plt+0xdc14>
   1ef2c:	bl	11228 <__errno_location@plt>
   1ef30:	movw	lr, #12
   1ef34:	str	lr, [r0]
   1ef38:	movw	r0, #0
   1ef3c:	str	r0, [fp, #-4]
   1ef40:	b	1ef5c <__assert_fail@plt+0xdc2c>
   1ef44:	ldr	r0, [sp, #8]
   1ef48:	ldr	r1, [sp, #4]
   1ef4c:	bl	11120 <realloc@plt>
   1ef50:	str	r0, [sp]
   1ef54:	ldr	r0, [sp]
   1ef58:	str	r0, [fp, #-4]
   1ef5c:	ldr	r0, [fp, #-4]
   1ef60:	mov	sp, fp
   1ef64:	pop	{fp, pc}
   1ef68:	svcvc	0x00ffffff
   1ef6c:	push	{fp, lr}
   1ef70:	mov	fp, sp
   1ef74:	sub	sp, sp, #24
   1ef78:	str	r0, [fp, #-8]
   1ef7c:	str	r1, [sp, #12]
   1ef80:	ldr	r0, [fp, #-8]
   1ef84:	str	r0, [sp, #8]
   1ef88:	ldr	r0, [sp, #12]
   1ef8c:	str	r0, [sp, #4]
   1ef90:	ldr	r0, [sp, #8]
   1ef94:	ldr	r1, [sp, #4]
   1ef98:	cmp	r0, r1
   1ef9c:	bne	1efac <__assert_fail@plt+0xdc7c>
   1efa0:	movw	r0, #0
   1efa4:	str	r0, [fp, #-4]
   1efa8:	b	1f018 <__assert_fail@plt+0xdce8>
   1efac:	b	1efb0 <__assert_fail@plt+0xdc80>
   1efb0:	ldr	r0, [sp, #8]
   1efb4:	ldrb	r0, [r0]
   1efb8:	bl	213a4 <__assert_fail@plt+0x10074>
   1efbc:	strb	r0, [sp, #3]
   1efc0:	ldr	r0, [sp, #4]
   1efc4:	ldrb	r0, [r0]
   1efc8:	bl	213a4 <__assert_fail@plt+0x10074>
   1efcc:	strb	r0, [sp, #2]
   1efd0:	ldrb	r0, [sp, #3]
   1efd4:	cmp	r0, #0
   1efd8:	bne	1efe0 <__assert_fail@plt+0xdcb0>
   1efdc:	b	1f008 <__assert_fail@plt+0xdcd8>
   1efe0:	ldr	r0, [sp, #8]
   1efe4:	add	r0, r0, #1
   1efe8:	str	r0, [sp, #8]
   1efec:	ldr	r0, [sp, #4]
   1eff0:	add	r0, r0, #1
   1eff4:	str	r0, [sp, #4]
   1eff8:	ldrb	r0, [sp, #3]
   1effc:	ldrb	r1, [sp, #2]
   1f000:	cmp	r0, r1
   1f004:	beq	1efb0 <__assert_fail@plt+0xdc80>
   1f008:	ldrb	r0, [sp, #3]
   1f00c:	ldrb	r1, [sp, #2]
   1f010:	sub	r0, r0, r1
   1f014:	str	r0, [fp, #-4]
   1f018:	ldr	r0, [fp, #-4]
   1f01c:	mov	sp, fp
   1f020:	pop	{fp, pc}
   1f024:	push	{fp, lr}
   1f028:	mov	fp, sp
   1f02c:	sub	sp, sp, #16
   1f030:	str	r0, [sp, #8]
   1f034:	ldr	r0, [sp, #8]
   1f038:	bl	1115c <__fpending@plt>
   1f03c:	cmp	r0, #0
   1f040:	movw	r0, #0
   1f044:	movne	r0, #1
   1f048:	and	r0, r0, #1
   1f04c:	strb	r0, [sp, #7]
   1f050:	ldr	r0, [sp, #8]
   1f054:	bl	11168 <ferror_unlocked@plt>
   1f058:	cmp	r0, #0
   1f05c:	movw	r0, #0
   1f060:	movne	r0, #1
   1f064:	and	r0, r0, #1
   1f068:	strb	r0, [sp, #6]
   1f06c:	ldr	r0, [sp, #8]
   1f070:	bl	144e8 <__assert_fail@plt+0x31b8>
   1f074:	cmp	r0, #0
   1f078:	movw	r0, #0
   1f07c:	movne	r0, #1
   1f080:	and	r0, r0, #1
   1f084:	strb	r0, [sp, #5]
   1f088:	ldrb	r0, [sp, #6]
   1f08c:	tst	r0, #1
   1f090:	bne	1f0bc <__assert_fail@plt+0xdd8c>
   1f094:	ldrb	r0, [sp, #5]
   1f098:	tst	r0, #1
   1f09c:	beq	1f0e0 <__assert_fail@plt+0xddb0>
   1f0a0:	ldrb	r0, [sp, #7]
   1f0a4:	tst	r0, #1
   1f0a8:	bne	1f0bc <__assert_fail@plt+0xdd8c>
   1f0ac:	bl	11228 <__errno_location@plt>
   1f0b0:	ldr	r0, [r0]
   1f0b4:	cmp	r0, #9
   1f0b8:	beq	1f0e0 <__assert_fail@plt+0xddb0>
   1f0bc:	ldrb	r0, [sp, #5]
   1f0c0:	tst	r0, #1
   1f0c4:	bne	1f0d4 <__assert_fail@plt+0xdda4>
   1f0c8:	bl	11228 <__errno_location@plt>
   1f0cc:	movw	lr, #0
   1f0d0:	str	lr, [r0]
   1f0d4:	mvn	r0, #0
   1f0d8:	str	r0, [fp, #-4]
   1f0dc:	b	1f0e8 <__assert_fail@plt+0xddb8>
   1f0e0:	movw	r0, #0
   1f0e4:	str	r0, [fp, #-4]
   1f0e8:	ldr	r0, [fp, #-4]
   1f0ec:	mov	sp, fp
   1f0f0:	pop	{fp, pc}
   1f0f4:	sub	sp, sp, #8
   1f0f8:	push	{fp, lr}
   1f0fc:	mov	fp, sp
   1f100:	sub	sp, sp, #48	; 0x30
   1f104:	str	r3, [fp, #12]
   1f108:	str	r2, [fp, #8]
   1f10c:	str	r0, [fp, #-4]
   1f110:	str	r1, [fp, #-8]
   1f114:	mvn	r0, #0
   1f118:	str	r0, [fp, #-16]
   1f11c:	add	r0, fp, #8
   1f120:	str	r0, [fp, #-12]
   1f124:	ldr	r0, [fp, #-8]
   1f128:	cmp	r0, #0
   1f12c:	str	r0, [sp, #12]
   1f130:	beq	1f14c <__assert_fail@plt+0xde1c>
   1f134:	b	1f138 <__assert_fail@plt+0xde08>
   1f138:	movw	r0, #1030	; 0x406
   1f13c:	ldr	r1, [sp, #12]
   1f140:	cmp	r1, r0
   1f144:	beq	1f174 <__assert_fail@plt+0xde44>
   1f148:	b	1f19c <__assert_fail@plt+0xde6c>
   1f14c:	ldr	r0, [fp, #-12]
   1f150:	add	r1, r0, #4
   1f154:	str	r1, [fp, #-12]
   1f158:	ldr	r0, [r0]
   1f15c:	str	r0, [fp, #-20]	; 0xffffffec
   1f160:	ldr	r0, [fp, #-4]
   1f164:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f168:	bl	1f348 <__assert_fail@plt+0xe018>
   1f16c:	str	r0, [fp, #-16]
   1f170:	b	1f328 <__assert_fail@plt+0xdff8>
   1f174:	ldr	r0, [fp, #-12]
   1f178:	add	r1, r0, #4
   1f17c:	str	r1, [fp, #-12]
   1f180:	ldr	r0, [r0]
   1f184:	str	r0, [sp, #24]
   1f188:	ldr	r0, [fp, #-4]
   1f18c:	ldr	r1, [sp, #24]
   1f190:	bl	1f37c <__assert_fail@plt+0xe04c>
   1f194:	str	r0, [fp, #-16]
   1f198:	b	1f328 <__assert_fail@plt+0xdff8>
   1f19c:	ldr	r0, [fp, #-8]
   1f1a0:	cmp	r0, #0
   1f1a4:	str	r0, [sp, #8]
   1f1a8:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f1ac:	b	1f1b0 <__assert_fail@plt+0xde80>
   1f1b0:	ldr	r0, [sp, #8]
   1f1b4:	cmp	r0, #1
   1f1b8:	beq	1f2bc <__assert_fail@plt+0xdf8c>
   1f1bc:	b	1f1c0 <__assert_fail@plt+0xde90>
   1f1c0:	ldr	r0, [sp, #8]
   1f1c4:	cmp	r0, #2
   1f1c8:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f1cc:	b	1f1d0 <__assert_fail@plt+0xdea0>
   1f1d0:	ldr	r0, [sp, #8]
   1f1d4:	cmp	r0, #3
   1f1d8:	beq	1f2bc <__assert_fail@plt+0xdf8c>
   1f1dc:	b	1f1e0 <__assert_fail@plt+0xdeb0>
   1f1e0:	ldr	r0, [sp, #8]
   1f1e4:	cmp	r0, #4
   1f1e8:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f1ec:	b	1f1f0 <__assert_fail@plt+0xdec0>
   1f1f0:	ldr	r0, [sp, #8]
   1f1f4:	cmp	r0, #8
   1f1f8:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f1fc:	b	1f200 <__assert_fail@plt+0xded0>
   1f200:	ldr	r0, [sp, #8]
   1f204:	cmp	r0, #9
   1f208:	beq	1f2bc <__assert_fail@plt+0xdf8c>
   1f20c:	b	1f210 <__assert_fail@plt+0xdee0>
   1f210:	ldr	r0, [sp, #8]
   1f214:	cmp	r0, #10
   1f218:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f21c:	b	1f220 <__assert_fail@plt+0xdef0>
   1f220:	ldr	r0, [sp, #8]
   1f224:	cmp	r0, #11
   1f228:	beq	1f2bc <__assert_fail@plt+0xdf8c>
   1f22c:	b	1f230 <__assert_fail@plt+0xdf00>
   1f230:	ldr	r0, [sp, #8]
   1f234:	cmp	r0, #1024	; 0x400
   1f238:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f23c:	b	1f240 <__assert_fail@plt+0xdf10>
   1f240:	movw	r0, #1025	; 0x401
   1f244:	ldr	r1, [sp, #8]
   1f248:	cmp	r1, r0
   1f24c:	beq	1f2bc <__assert_fail@plt+0xdf8c>
   1f250:	b	1f254 <__assert_fail@plt+0xdf24>
   1f254:	movw	r0, #1026	; 0x402
   1f258:	ldr	r1, [sp, #8]
   1f25c:	cmp	r1, r0
   1f260:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f264:	b	1f268 <__assert_fail@plt+0xdf38>
   1f268:	movw	r0, #1030	; 0x406
   1f26c:	ldr	r1, [sp, #8]
   1f270:	sub	r0, r1, r0
   1f274:	cmp	r0, #2
   1f278:	bcc	1f2d0 <__assert_fail@plt+0xdfa0>
   1f27c:	b	1f280 <__assert_fail@plt+0xdf50>
   1f280:	movw	r0, #1032	; 0x408
   1f284:	ldr	r1, [sp, #8]
   1f288:	cmp	r1, r0
   1f28c:	beq	1f2bc <__assert_fail@plt+0xdf8c>
   1f290:	b	1f294 <__assert_fail@plt+0xdf64>
   1f294:	movw	r0, #1033	; 0x409
   1f298:	ldr	r1, [sp, #8]
   1f29c:	cmp	r1, r0
   1f2a0:	beq	1f2d0 <__assert_fail@plt+0xdfa0>
   1f2a4:	b	1f2a8 <__assert_fail@plt+0xdf78>
   1f2a8:	movw	r0, #1034	; 0x40a
   1f2ac:	ldr	r1, [sp, #8]
   1f2b0:	cmp	r1, r0
   1f2b4:	bne	1f2fc <__assert_fail@plt+0xdfcc>
   1f2b8:	b	1f2bc <__assert_fail@plt+0xdf8c>
   1f2bc:	ldr	r0, [fp, #-4]
   1f2c0:	ldr	r1, [fp, #-8]
   1f2c4:	bl	11288 <fcntl64@plt>
   1f2c8:	str	r0, [fp, #-16]
   1f2cc:	b	1f324 <__assert_fail@plt+0xdff4>
   1f2d0:	ldr	r0, [fp, #-12]
   1f2d4:	add	r1, r0, #4
   1f2d8:	str	r1, [fp, #-12]
   1f2dc:	ldr	r0, [r0]
   1f2e0:	str	r0, [sp, #20]
   1f2e4:	ldr	r0, [fp, #-4]
   1f2e8:	ldr	r1, [fp, #-8]
   1f2ec:	ldr	r2, [sp, #20]
   1f2f0:	bl	11288 <fcntl64@plt>
   1f2f4:	str	r0, [fp, #-16]
   1f2f8:	b	1f324 <__assert_fail@plt+0xdff4>
   1f2fc:	ldr	r0, [fp, #-12]
   1f300:	add	r1, r0, #4
   1f304:	str	r1, [fp, #-12]
   1f308:	ldr	r0, [r0]
   1f30c:	str	r0, [sp, #16]
   1f310:	ldr	r0, [fp, #-4]
   1f314:	ldr	r1, [fp, #-8]
   1f318:	ldr	r2, [sp, #16]
   1f31c:	bl	11288 <fcntl64@plt>
   1f320:	str	r0, [fp, #-16]
   1f324:	b	1f328 <__assert_fail@plt+0xdff8>
   1f328:	sub	r0, fp, #12
   1f32c:	ldr	r1, [fp, #-16]
   1f330:	str	r0, [sp, #4]
   1f334:	mov	r0, r1
   1f338:	mov	sp, fp
   1f33c:	pop	{fp, lr}
   1f340:	add	sp, sp, #8
   1f344:	bx	lr
   1f348:	push	{fp, lr}
   1f34c:	mov	fp, sp
   1f350:	sub	sp, sp, #16
   1f354:	str	r0, [fp, #-4]
   1f358:	str	r1, [sp, #8]
   1f35c:	ldr	r0, [fp, #-4]
   1f360:	ldr	r2, [sp, #8]
   1f364:	movw	r1, #0
   1f368:	bl	11288 <fcntl64@plt>
   1f36c:	str	r0, [sp, #4]
   1f370:	ldr	r0, [sp, #4]
   1f374:	mov	sp, fp
   1f378:	pop	{fp, pc}
   1f37c:	push	{fp, lr}
   1f380:	mov	fp, sp
   1f384:	sub	sp, sp, #32
   1f388:	str	r0, [fp, #-4]
   1f38c:	str	r1, [fp, #-8]
   1f390:	movw	r0, #13116	; 0x333c
   1f394:	movt	r0, #3
   1f398:	ldr	r0, [r0]
   1f39c:	movw	r1, #0
   1f3a0:	cmp	r1, r0
   1f3a4:	bgt	1f424 <__assert_fail@plt+0xe0f4>
   1f3a8:	ldr	r0, [fp, #-4]
   1f3ac:	ldr	r2, [fp, #-8]
   1f3b0:	movw	r1, #1030	; 0x406
   1f3b4:	bl	11288 <fcntl64@plt>
   1f3b8:	str	r0, [fp, #-12]
   1f3bc:	ldr	r0, [fp, #-12]
   1f3c0:	movw	r1, #0
   1f3c4:	cmp	r1, r0
   1f3c8:	ble	1f3dc <__assert_fail@plt+0xe0ac>
   1f3cc:	bl	11228 <__errno_location@plt>
   1f3d0:	ldr	r0, [r0]
   1f3d4:	cmp	r0, #22
   1f3d8:	beq	1f3f0 <__assert_fail@plt+0xe0c0>
   1f3dc:	movw	r0, #13116	; 0x333c
   1f3e0:	movt	r0, #3
   1f3e4:	movw	r1, #1
   1f3e8:	str	r1, [r0]
   1f3ec:	b	1f420 <__assert_fail@plt+0xe0f0>
   1f3f0:	ldr	r0, [fp, #-4]
   1f3f4:	ldr	r1, [fp, #-8]
   1f3f8:	bl	1f348 <__assert_fail@plt+0xe018>
   1f3fc:	str	r0, [fp, #-12]
   1f400:	ldr	r0, [fp, #-12]
   1f404:	cmp	r0, #0
   1f408:	blt	1f41c <__assert_fail@plt+0xe0ec>
   1f40c:	movw	r0, #13116	; 0x333c
   1f410:	movt	r0, #3
   1f414:	mvn	r1, #0
   1f418:	str	r1, [r0]
   1f41c:	b	1f420 <__assert_fail@plt+0xe0f0>
   1f420:	b	1f434 <__assert_fail@plt+0xe104>
   1f424:	ldr	r0, [fp, #-4]
   1f428:	ldr	r1, [fp, #-8]
   1f42c:	bl	1f348 <__assert_fail@plt+0xe018>
   1f430:	str	r0, [fp, #-12]
   1f434:	ldr	r0, [fp, #-12]
   1f438:	movw	r1, #0
   1f43c:	cmp	r1, r0
   1f440:	bgt	1f4c8 <__assert_fail@plt+0xe198>
   1f444:	movw	r0, #13116	; 0x333c
   1f448:	movt	r0, #3
   1f44c:	ldr	r0, [r0]
   1f450:	cmn	r0, #1
   1f454:	bne	1f4c8 <__assert_fail@plt+0xe198>
   1f458:	ldr	r0, [fp, #-12]
   1f45c:	movw	r1, #1
   1f460:	bl	11288 <fcntl64@plt>
   1f464:	str	r0, [sp, #16]
   1f468:	ldr	r0, [sp, #16]
   1f46c:	cmp	r0, #0
   1f470:	blt	1f490 <__assert_fail@plt+0xe160>
   1f474:	ldr	r0, [fp, #-12]
   1f478:	ldr	r1, [sp, #16]
   1f47c:	orr	r2, r1, #1
   1f480:	movw	r1, #2
   1f484:	bl	11288 <fcntl64@plt>
   1f488:	cmn	r0, #1
   1f48c:	bne	1f4c4 <__assert_fail@plt+0xe194>
   1f490:	bl	11228 <__errno_location@plt>
   1f494:	ldr	r0, [r0]
   1f498:	str	r0, [sp, #12]
   1f49c:	ldr	r0, [fp, #-12]
   1f4a0:	bl	11318 <close@plt>
   1f4a4:	ldr	lr, [sp, #12]
   1f4a8:	str	r0, [sp, #8]
   1f4ac:	str	lr, [sp, #4]
   1f4b0:	bl	11228 <__errno_location@plt>
   1f4b4:	ldr	lr, [sp, #4]
   1f4b8:	str	lr, [r0]
   1f4bc:	mvn	r0, #0
   1f4c0:	str	r0, [fp, #-12]
   1f4c4:	b	1f4c8 <__assert_fail@plt+0xe198>
   1f4c8:	ldr	r0, [fp, #-12]
   1f4cc:	mov	sp, fp
   1f4d0:	pop	{fp, pc}
   1f4d4:	push	{fp, lr}
   1f4d8:	mov	fp, sp
   1f4dc:	bl	11228 <__errno_location@plt>
   1f4e0:	movw	lr, #12
   1f4e4:	str	lr, [r0]
   1f4e8:	movw	r0, #0
   1f4ec:	pop	{fp, pc}
   1f4f0:	push	{fp, lr}
   1f4f4:	mov	fp, sp
   1f4f8:	sub	sp, sp, #8
   1f4fc:	str	r0, [sp, #4]
   1f500:	ldr	r0, [sp, #4]
   1f504:	cmn	r0, #1
   1f508:	bhi	1f51c <__assert_fail@plt+0xe1ec>
   1f50c:	ldr	r0, [sp, #4]
   1f510:	bl	1ee58 <__assert_fail@plt+0xdb28>
   1f514:	str	r0, [sp]
   1f518:	b	1f524 <__assert_fail@plt+0xe1f4>
   1f51c:	bl	1f4d4 <__assert_fail@plt+0xe1a4>
   1f520:	str	r0, [sp]
   1f524:	ldr	r0, [sp]
   1f528:	mov	sp, fp
   1f52c:	pop	{fp, pc}
   1f530:	push	{fp, lr}
   1f534:	mov	fp, sp
   1f538:	sub	sp, sp, #16
   1f53c:	str	r0, [fp, #-4]
   1f540:	str	r1, [sp, #8]
   1f544:	ldr	r0, [sp, #8]
   1f548:	cmn	r0, #1
   1f54c:	bhi	1f584 <__assert_fail@plt+0xe254>
   1f550:	ldr	r0, [fp, #-4]
   1f554:	ldr	r1, [sp, #8]
   1f558:	ldr	r2, [sp, #8]
   1f55c:	cmp	r2, #0
   1f560:	movw	r2, #0
   1f564:	movne	r2, #1
   1f568:	mvn	r3, #0
   1f56c:	eor	r2, r2, r3
   1f570:	and	r2, r2, #1
   1f574:	orr	r1, r1, r2
   1f578:	bl	1eec8 <__assert_fail@plt+0xdb98>
   1f57c:	str	r0, [sp, #4]
   1f580:	b	1f58c <__assert_fail@plt+0xe25c>
   1f584:	bl	1f4d4 <__assert_fail@plt+0xe1a4>
   1f588:	str	r0, [sp, #4]
   1f58c:	ldr	r0, [sp, #4]
   1f590:	mov	sp, fp
   1f594:	pop	{fp, pc}
   1f598:	push	{fp, lr}
   1f59c:	mov	fp, sp
   1f5a0:	sub	sp, sp, #16
   1f5a4:	str	r0, [sp, #8]
   1f5a8:	str	r1, [sp, #4]
   1f5ac:	ldr	r0, [sp, #8]
   1f5b0:	mvn	r1, #0
   1f5b4:	cmp	r1, r0
   1f5b8:	bcs	1f5dc <__assert_fail@plt+0xe2ac>
   1f5bc:	ldr	r0, [sp, #4]
   1f5c0:	cmp	r0, #0
   1f5c4:	beq	1f5d4 <__assert_fail@plt+0xe2a4>
   1f5c8:	bl	1f4d4 <__assert_fail@plt+0xe1a4>
   1f5cc:	str	r0, [fp, #-4]
   1f5d0:	b	1f61c <__assert_fail@plt+0xe2ec>
   1f5d4:	movw	r0, #0
   1f5d8:	str	r0, [sp, #8]
   1f5dc:	ldr	r0, [sp, #4]
   1f5e0:	mvn	r1, #0
   1f5e4:	cmp	r1, r0
   1f5e8:	bcs	1f60c <__assert_fail@plt+0xe2dc>
   1f5ec:	ldr	r0, [sp, #8]
   1f5f0:	cmp	r0, #0
   1f5f4:	beq	1f604 <__assert_fail@plt+0xe2d4>
   1f5f8:	bl	1f4d4 <__assert_fail@plt+0xe1a4>
   1f5fc:	str	r0, [fp, #-4]
   1f600:	b	1f61c <__assert_fail@plt+0xe2ec>
   1f604:	movw	r0, #0
   1f608:	str	r0, [sp, #4]
   1f60c:	ldr	r0, [sp, #8]
   1f610:	ldr	r1, [sp, #4]
   1f614:	bl	1edbc <__assert_fail@plt+0xda8c>
   1f618:	str	r0, [fp, #-4]
   1f61c:	ldr	r0, [fp, #-4]
   1f620:	mov	sp, fp
   1f624:	pop	{fp, pc}
   1f628:	push	{fp, lr}
   1f62c:	mov	fp, sp
   1f630:	sub	sp, sp, #16
   1f634:	str	r0, [fp, #-4]
   1f638:	str	r1, [sp, #8]
   1f63c:	str	r2, [sp, #4]
   1f640:	ldr	r0, [sp, #8]
   1f644:	cmp	r0, #0
   1f648:	beq	1f658 <__assert_fail@plt+0xe328>
   1f64c:	ldr	r0, [sp, #4]
   1f650:	cmp	r0, #0
   1f654:	bne	1f664 <__assert_fail@plt+0xe334>
   1f658:	movw	r0, #1
   1f65c:	str	r0, [sp, #4]
   1f660:	str	r0, [sp, #8]
   1f664:	ldr	r0, [sp, #8]
   1f668:	cmn	r0, #1
   1f66c:	bhi	1f694 <__assert_fail@plt+0xe364>
   1f670:	ldr	r0, [sp, #4]
   1f674:	cmn	r0, #1
   1f678:	bhi	1f694 <__assert_fail@plt+0xe364>
   1f67c:	ldr	r0, [fp, #-4]
   1f680:	ldr	r1, [sp, #8]
   1f684:	ldr	r2, [sp, #4]
   1f688:	bl	1fa5c <__assert_fail@plt+0xe72c>
   1f68c:	str	r0, [sp]
   1f690:	b	1f69c <__assert_fail@plt+0xe36c>
   1f694:	bl	1f4d4 <__assert_fail@plt+0xe1a4>
   1f698:	str	r0, [sp]
   1f69c:	ldr	r0, [sp]
   1f6a0:	mov	sp, fp
   1f6a4:	pop	{fp, pc}
   1f6a8:	push	{fp, lr}
   1f6ac:	mov	fp, sp
   1f6b0:	sub	sp, sp, #8
   1f6b4:	movw	r0, #14
   1f6b8:	bl	112b8 <nl_langinfo@plt>
   1f6bc:	str	r0, [sp, #4]
   1f6c0:	ldr	r0, [sp, #4]
   1f6c4:	movw	lr, #0
   1f6c8:	cmp	r0, lr
   1f6cc:	bne	1f6dc <__assert_fail@plt+0xe3ac>
   1f6d0:	movw	r0, #8882	; 0x22b2
   1f6d4:	movt	r0, #2
   1f6d8:	str	r0, [sp, #4]
   1f6dc:	ldr	r0, [sp, #4]
   1f6e0:	ldrb	r0, [r0]
   1f6e4:	cmp	r0, #0
   1f6e8:	bne	1f6f8 <__assert_fail@plt+0xe3c8>
   1f6ec:	movw	r0, #10720	; 0x29e0
   1f6f0:	movt	r0, #2
   1f6f4:	str	r0, [sp, #4]
   1f6f8:	ldr	r0, [sp, #4]
   1f6fc:	mov	sp, fp
   1f700:	pop	{fp, pc}
   1f704:	push	{fp, lr}
   1f708:	mov	fp, sp
   1f70c:	sub	sp, sp, #32
   1f710:	str	r0, [fp, #-8]
   1f714:	str	r1, [fp, #-12]
   1f718:	str	r2, [sp, #16]
   1f71c:	str	r3, [sp, #12]
   1f720:	ldr	r0, [fp, #-8]
   1f724:	movw	r1, #0
   1f728:	cmp	r0, r1
   1f72c:	bne	1f738 <__assert_fail@plt+0xe408>
   1f730:	add	r0, sp, #4
   1f734:	str	r0, [fp, #-8]
   1f738:	ldr	r0, [fp, #-8]
   1f73c:	ldr	r1, [fp, #-12]
   1f740:	ldr	r2, [sp, #16]
   1f744:	ldr	r3, [sp, #12]
   1f748:	bl	11174 <mbrtowc@plt>
   1f74c:	str	r0, [sp, #8]
   1f750:	ldr	r0, [sp, #8]
   1f754:	mvn	r1, #1
   1f758:	cmp	r1, r0
   1f75c:	bhi	1f7a0 <__assert_fail@plt+0xe470>
   1f760:	ldr	r0, [sp, #16]
   1f764:	cmp	r0, #0
   1f768:	beq	1f7a0 <__assert_fail@plt+0xe470>
   1f76c:	movw	r0, #0
   1f770:	bl	148fc <__assert_fail@plt+0x35cc>
   1f774:	tst	r0, #1
   1f778:	bne	1f7a0 <__assert_fail@plt+0xe470>
   1f77c:	ldr	r0, [fp, #-12]
   1f780:	ldrb	r0, [r0]
   1f784:	strb	r0, [sp, #3]
   1f788:	ldrb	r0, [sp, #3]
   1f78c:	ldr	r1, [fp, #-8]
   1f790:	str	r0, [r1]
   1f794:	movw	r0, #1
   1f798:	str	r0, [fp, #-4]
   1f79c:	b	1f7a8 <__assert_fail@plt+0xe478>
   1f7a0:	ldr	r0, [sp, #8]
   1f7a4:	str	r0, [fp, #-4]
   1f7a8:	ldr	r0, [fp, #-4]
   1f7ac:	mov	sp, fp
   1f7b0:	pop	{fp, pc}
   1f7b4:	push	{fp, lr}
   1f7b8:	mov	fp, sp
   1f7bc:	sub	sp, sp, #24
   1f7c0:	str	r0, [fp, #-4]
   1f7c4:	str	r1, [fp, #-8]
   1f7c8:	str	r2, [sp, #12]
   1f7cc:	str	r3, [sp, #8]
   1f7d0:	ldr	r0, [fp, #-8]
   1f7d4:	ldr	r1, [sp, #8]
   1f7d8:	cmp	r0, r1
   1f7dc:	bne	1f80c <__assert_fail@plt+0xe4dc>
   1f7e0:	ldr	r0, [fp, #-4]
   1f7e4:	ldr	r1, [sp, #12]
   1f7e8:	ldr	r2, [fp, #-8]
   1f7ec:	bl	11108 <memcmp@plt>
   1f7f0:	cmp	r0, #0
   1f7f4:	bne	1f80c <__assert_fail@plt+0xe4dc>
   1f7f8:	bl	11228 <__errno_location@plt>
   1f7fc:	movw	lr, #0
   1f800:	str	lr, [r0]
   1f804:	str	lr, [sp, #4]
   1f808:	b	1f8a0 <__assert_fail@plt+0xe570>
   1f80c:	ldr	r0, [fp, #-4]
   1f810:	ldr	r1, [fp, #-8]
   1f814:	add	r0, r0, r1
   1f818:	ldrb	r0, [r0]
   1f81c:	strb	r0, [sp, #3]
   1f820:	ldr	r0, [sp, #12]
   1f824:	ldr	r1, [sp, #8]
   1f828:	add	r0, r0, r1
   1f82c:	ldrb	r0, [r0]
   1f830:	strb	r0, [sp, #2]
   1f834:	ldr	r0, [fp, #-4]
   1f838:	ldr	r1, [fp, #-8]
   1f83c:	add	r0, r0, r1
   1f840:	movw	r1, #0
   1f844:	strb	r1, [r0]
   1f848:	ldr	r0, [sp, #12]
   1f84c:	ldr	r2, [sp, #8]
   1f850:	add	r0, r0, r2
   1f854:	strb	r1, [r0]
   1f858:	ldr	r0, [fp, #-4]
   1f85c:	ldr	r1, [fp, #-8]
   1f860:	add	r1, r1, #1
   1f864:	ldr	r2, [sp, #12]
   1f868:	ldr	r3, [sp, #8]
   1f86c:	add	r3, r3, #1
   1f870:	bl	1f8ac <__assert_fail@plt+0xe57c>
   1f874:	str	r0, [sp, #4]
   1f878:	ldrb	r0, [sp, #3]
   1f87c:	ldr	r1, [fp, #-4]
   1f880:	ldr	r2, [fp, #-8]
   1f884:	add	r1, r1, r2
   1f888:	strb	r0, [r1]
   1f88c:	ldrb	r0, [sp, #2]
   1f890:	ldr	r1, [sp, #12]
   1f894:	ldr	r2, [sp, #8]
   1f898:	add	r1, r1, r2
   1f89c:	strb	r0, [r1]
   1f8a0:	ldr	r0, [sp, #4]
   1f8a4:	mov	sp, fp
   1f8a8:	pop	{fp, pc}
   1f8ac:	push	{fp, lr}
   1f8b0:	mov	fp, sp
   1f8b4:	sub	sp, sp, #40	; 0x28
   1f8b8:	str	r0, [fp, #-8]
   1f8bc:	str	r1, [fp, #-12]
   1f8c0:	str	r2, [fp, #-16]
   1f8c4:	str	r3, [sp, #20]
   1f8c8:	bl	11228 <__errno_location@plt>
   1f8cc:	movw	lr, #0
   1f8d0:	str	lr, [r0]
   1f8d4:	ldr	r0, [fp, #-8]
   1f8d8:	ldr	r1, [fp, #-16]
   1f8dc:	bl	1118c <strcoll@plt>
   1f8e0:	str	r0, [sp, #16]
   1f8e4:	cmp	r0, #0
   1f8e8:	movw	r0, #1
   1f8ec:	str	r0, [sp, #4]
   1f8f0:	bne	1f90c <__assert_fail@plt+0xe5dc>
   1f8f4:	bl	11228 <__errno_location@plt>
   1f8f8:	ldr	r0, [r0]
   1f8fc:	cmp	r0, #0
   1f900:	movw	r0, #0
   1f904:	movne	r0, #1
   1f908:	str	r0, [sp, #4]
   1f90c:	ldr	r0, [sp, #4]
   1f910:	mvn	r1, #0
   1f914:	eor	r0, r0, r1
   1f918:	tst	r0, #1
   1f91c:	beq	1f9cc <__assert_fail@plt+0xe69c>
   1f920:	ldr	r0, [fp, #-8]
   1f924:	bl	11204 <strlen@plt>
   1f928:	add	r0, r0, #1
   1f92c:	str	r0, [sp, #12]
   1f930:	ldr	r0, [fp, #-16]
   1f934:	bl	11204 <strlen@plt>
   1f938:	add	r0, r0, #1
   1f93c:	str	r0, [sp, #8]
   1f940:	ldr	r0, [sp, #12]
   1f944:	ldr	lr, [fp, #-8]
   1f948:	add	r0, lr, r0
   1f94c:	str	r0, [fp, #-8]
   1f950:	ldr	r0, [sp, #8]
   1f954:	ldr	lr, [fp, #-16]
   1f958:	add	r0, lr, r0
   1f95c:	str	r0, [fp, #-16]
   1f960:	ldr	r0, [sp, #12]
   1f964:	ldr	lr, [fp, #-12]
   1f968:	sub	r0, lr, r0
   1f96c:	str	r0, [fp, #-12]
   1f970:	ldr	r0, [sp, #8]
   1f974:	ldr	lr, [sp, #20]
   1f978:	sub	r0, lr, r0
   1f97c:	str	r0, [sp, #20]
   1f980:	ldr	r0, [fp, #-12]
   1f984:	cmp	r0, #0
   1f988:	bne	1f9b0 <__assert_fail@plt+0xe680>
   1f98c:	ldr	r0, [sp, #20]
   1f990:	cmp	r0, #0
   1f994:	movw	r0, #0
   1f998:	movne	r0, #1
   1f99c:	and	r0, r0, #1
   1f9a0:	movw	r1, #0
   1f9a4:	sub	r0, r1, r0
   1f9a8:	str	r0, [fp, #-4]
   1f9ac:	b	1f9d4 <__assert_fail@plt+0xe6a4>
   1f9b0:	ldr	r0, [sp, #20]
   1f9b4:	cmp	r0, #0
   1f9b8:	bne	1f9c8 <__assert_fail@plt+0xe698>
   1f9bc:	movw	r0, #1
   1f9c0:	str	r0, [fp, #-4]
   1f9c4:	b	1f9d4 <__assert_fail@plt+0xe6a4>
   1f9c8:	b	1f8c8 <__assert_fail@plt+0xe598>
   1f9cc:	ldr	r0, [sp, #16]
   1f9d0:	str	r0, [fp, #-4]
   1f9d4:	ldr	r0, [fp, #-4]
   1f9d8:	mov	sp, fp
   1f9dc:	pop	{fp, pc}
   1f9e0:	push	{fp, lr}
   1f9e4:	mov	fp, sp
   1f9e8:	sub	sp, sp, #24
   1f9ec:	str	r0, [fp, #-8]
   1f9f0:	str	r1, [sp, #12]
   1f9f4:	str	r2, [sp, #8]
   1f9f8:	str	r3, [sp, #4]
   1f9fc:	ldr	r0, [sp, #12]
   1fa00:	ldr	r1, [sp, #4]
   1fa04:	cmp	r0, r1
   1fa08:	bne	1fa38 <__assert_fail@plt+0xe708>
   1fa0c:	ldr	r0, [fp, #-8]
   1fa10:	ldr	r1, [sp, #8]
   1fa14:	ldr	r2, [sp, #12]
   1fa18:	bl	11108 <memcmp@plt>
   1fa1c:	cmp	r0, #0
   1fa20:	bne	1fa38 <__assert_fail@plt+0xe708>
   1fa24:	bl	11228 <__errno_location@plt>
   1fa28:	movw	lr, #0
   1fa2c:	str	lr, [r0]
   1fa30:	str	lr, [fp, #-4]
   1fa34:	b	1fa50 <__assert_fail@plt+0xe720>
   1fa38:	ldr	r0, [fp, #-8]
   1fa3c:	ldr	r1, [sp, #12]
   1fa40:	ldr	r2, [sp, #8]
   1fa44:	ldr	r3, [sp, #4]
   1fa48:	bl	1f8ac <__assert_fail@plt+0xe57c>
   1fa4c:	str	r0, [fp, #-4]
   1fa50:	ldr	r0, [fp, #-4]
   1fa54:	mov	sp, fp
   1fa58:	pop	{fp, pc}
   1fa5c:	push	{fp, lr}
   1fa60:	mov	fp, sp
   1fa64:	sub	sp, sp, #176	; 0xb0
   1fa68:	str	r0, [fp, #-8]
   1fa6c:	str	r1, [fp, #-12]
   1fa70:	str	r2, [fp, #-16]
   1fa74:	b	1fe2c <__assert_fail@plt+0xeafc>
   1fa78:	b	1fc4c <__assert_fail@plt+0xe91c>
   1fa7c:	ldr	r0, [fp, #-16]
   1fa80:	cmp	r0, #0
   1fa84:	bcs	1fb88 <__assert_fail@plt+0xe858>
   1fa88:	ldr	r0, [fp, #-12]
   1fa8c:	cmp	r0, #0
   1fa90:	bcs	1fb18 <__assert_fail@plt+0xe7e8>
   1fa94:	b	1fab4 <__assert_fail@plt+0xe784>
   1fa98:	ldr	r0, [fp, #-12]
   1fa9c:	ldr	r1, [fp, #-16]
   1faa0:	movw	r2, #127	; 0x7f
   1faa4:	udiv	r1, r2, r1
   1faa8:	cmp	r0, r1
   1faac:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fab0:	b	1fc34 <__assert_fail@plt+0xe904>
   1fab4:	b	1fac8 <__assert_fail@plt+0xe798>
   1fab8:	ldr	r0, [fp, #-16]
   1fabc:	cmp	r0, #1
   1fac0:	bcc	1fad8 <__assert_fail@plt+0xe7a8>
   1fac4:	b	1fae4 <__assert_fail@plt+0xe7b4>
   1fac8:	ldr	r0, [fp, #-16]
   1facc:	movw	r1, #0
   1fad0:	cmp	r1, r0
   1fad4:	bcs	1fae4 <__assert_fail@plt+0xe7b4>
   1fad8:	movw	r0, #0
   1fadc:	str	r0, [fp, #-24]	; 0xffffffe8
   1fae0:	b	1fafc <__assert_fail@plt+0xe7cc>
   1fae4:	ldr	r0, [fp, #-16]
   1fae8:	movw	r1, #0
   1faec:	sub	r0, r1, r0
   1faf0:	movw	r1, #127	; 0x7f
   1faf4:	udiv	r0, r1, r0
   1faf8:	str	r0, [fp, #-24]	; 0xffffffe8
   1fafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb00:	ldr	r1, [fp, #-12]
   1fb04:	mvn	r2, #0
   1fb08:	sub	r1, r2, r1
   1fb0c:	cmp	r0, r1
   1fb10:	bls	1fc1c <__assert_fail@plt+0xe8ec>
   1fb14:	b	1fc34 <__assert_fail@plt+0xe904>
   1fb18:	ldr	r0, [fp, #-16]
   1fb1c:	cmn	r0, #1
   1fb20:	bne	1fb6c <__assert_fail@plt+0xe83c>
   1fb24:	b	1fb44 <__assert_fail@plt+0xe814>
   1fb28:	ldr	r0, [fp, #-12]
   1fb2c:	mvn	r1, #127	; 0x7f
   1fb30:	add	r0, r0, r1
   1fb34:	movw	r1, #0
   1fb38:	cmp	r1, r0
   1fb3c:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fb40:	b	1fc34 <__assert_fail@plt+0xe904>
   1fb44:	ldr	r0, [fp, #-12]
   1fb48:	movw	r1, #0
   1fb4c:	cmp	r1, r0
   1fb50:	bcs	1fc34 <__assert_fail@plt+0xe904>
   1fb54:	ldr	r0, [fp, #-12]
   1fb58:	sub	r0, r0, #1
   1fb5c:	movw	r1, #127	; 0x7f
   1fb60:	cmp	r1, r0
   1fb64:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fb68:	b	1fc34 <__assert_fail@plt+0xe904>
   1fb6c:	ldr	r0, [fp, #-16]
   1fb70:	mvn	r1, #127	; 0x7f
   1fb74:	udiv	r0, r1, r0
   1fb78:	ldr	r1, [fp, #-12]
   1fb7c:	cmp	r0, r1
   1fb80:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fb84:	b	1fc34 <__assert_fail@plt+0xe904>
   1fb88:	ldr	r0, [fp, #-16]
   1fb8c:	cmp	r0, #0
   1fb90:	bne	1fb98 <__assert_fail@plt+0xe868>
   1fb94:	b	1fc34 <__assert_fail@plt+0xe904>
   1fb98:	ldr	r0, [fp, #-12]
   1fb9c:	cmp	r0, #0
   1fba0:	bcs	1fc04 <__assert_fail@plt+0xe8d4>
   1fba4:	ldr	r0, [fp, #-12]
   1fba8:	cmn	r0, #1
   1fbac:	bne	1fbe8 <__assert_fail@plt+0xe8b8>
   1fbb0:	b	1fbd0 <__assert_fail@plt+0xe8a0>
   1fbb4:	ldr	r0, [fp, #-16]
   1fbb8:	mvn	r1, #127	; 0x7f
   1fbbc:	add	r0, r0, r1
   1fbc0:	movw	r1, #0
   1fbc4:	cmp	r1, r0
   1fbc8:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fbcc:	b	1fc34 <__assert_fail@plt+0xe904>
   1fbd0:	ldr	r0, [fp, #-16]
   1fbd4:	sub	r0, r0, #1
   1fbd8:	movw	r1, #127	; 0x7f
   1fbdc:	cmp	r1, r0
   1fbe0:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fbe4:	b	1fc34 <__assert_fail@plt+0xe904>
   1fbe8:	ldr	r0, [fp, #-12]
   1fbec:	mvn	r1, #127	; 0x7f
   1fbf0:	udiv	r0, r1, r0
   1fbf4:	ldr	r1, [fp, #-16]
   1fbf8:	cmp	r0, r1
   1fbfc:	bcc	1fc1c <__assert_fail@plt+0xe8ec>
   1fc00:	b	1fc34 <__assert_fail@plt+0xe904>
   1fc04:	ldr	r0, [fp, #-16]
   1fc08:	movw	r1, #127	; 0x7f
   1fc0c:	udiv	r0, r1, r0
   1fc10:	ldr	r1, [fp, #-12]
   1fc14:	cmp	r0, r1
   1fc18:	bcs	1fc34 <__assert_fail@plt+0xe904>
   1fc1c:	ldr	r0, [fp, #-12]
   1fc20:	ldr	r1, [fp, #-16]
   1fc24:	mul	r0, r0, r1
   1fc28:	sxtb	r0, r0
   1fc2c:	str	r0, [fp, #-20]	; 0xffffffec
   1fc30:	b	20dac <__assert_fail@plt+0xfa7c>
   1fc34:	ldr	r0, [fp, #-12]
   1fc38:	ldr	r1, [fp, #-16]
   1fc3c:	mul	r0, r0, r1
   1fc40:	sxtb	r0, r0
   1fc44:	str	r0, [fp, #-20]	; 0xffffffec
   1fc48:	b	20dc4 <__assert_fail@plt+0xfa94>
   1fc4c:	ldr	r0, [fp, #-16]
   1fc50:	cmp	r0, #0
   1fc54:	bcs	1fd60 <__assert_fail@plt+0xea30>
   1fc58:	ldr	r0, [fp, #-12]
   1fc5c:	cmp	r0, #0
   1fc60:	bcs	1fce8 <__assert_fail@plt+0xe9b8>
   1fc64:	b	1fc84 <__assert_fail@plt+0xe954>
   1fc68:	ldr	r0, [fp, #-12]
   1fc6c:	ldr	r1, [fp, #-16]
   1fc70:	movw	r2, #255	; 0xff
   1fc74:	udiv	r1, r2, r1
   1fc78:	cmp	r0, r1
   1fc7c:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fc80:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fc84:	b	1fc98 <__assert_fail@plt+0xe968>
   1fc88:	ldr	r0, [fp, #-16]
   1fc8c:	cmp	r0, #1
   1fc90:	bcc	1fca8 <__assert_fail@plt+0xe978>
   1fc94:	b	1fcb4 <__assert_fail@plt+0xe984>
   1fc98:	ldr	r0, [fp, #-16]
   1fc9c:	movw	r1, #0
   1fca0:	cmp	r1, r0
   1fca4:	bcs	1fcb4 <__assert_fail@plt+0xe984>
   1fca8:	movw	r0, #0
   1fcac:	str	r0, [fp, #-28]	; 0xffffffe4
   1fcb0:	b	1fccc <__assert_fail@plt+0xe99c>
   1fcb4:	ldr	r0, [fp, #-16]
   1fcb8:	movw	r1, #0
   1fcbc:	sub	r0, r1, r0
   1fcc0:	movw	r1, #255	; 0xff
   1fcc4:	udiv	r0, r1, r0
   1fcc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1fccc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fcd0:	ldr	r1, [fp, #-12]
   1fcd4:	mvn	r2, #0
   1fcd8:	sub	r1, r2, r1
   1fcdc:	cmp	r0, r1
   1fce0:	bls	1fdfc <__assert_fail@plt+0xeacc>
   1fce4:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fce8:	b	1fcf0 <__assert_fail@plt+0xe9c0>
   1fcec:	b	1fcf4 <__assert_fail@plt+0xe9c4>
   1fcf0:	b	1fd44 <__assert_fail@plt+0xea14>
   1fcf4:	ldr	r0, [fp, #-16]
   1fcf8:	cmn	r0, #1
   1fcfc:	bne	1fd44 <__assert_fail@plt+0xea14>
   1fd00:	b	1fd1c <__assert_fail@plt+0xe9ec>
   1fd04:	ldr	r0, [fp, #-12]
   1fd08:	add	r0, r0, #0
   1fd0c:	movw	r1, #0
   1fd10:	cmp	r1, r0
   1fd14:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fd18:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fd1c:	ldr	r0, [fp, #-12]
   1fd20:	movw	r1, #0
   1fd24:	cmp	r1, r0
   1fd28:	bcs	1fe14 <__assert_fail@plt+0xeae4>
   1fd2c:	ldr	r0, [fp, #-12]
   1fd30:	sub	r0, r0, #1
   1fd34:	mvn	r1, #0
   1fd38:	cmp	r1, r0
   1fd3c:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fd40:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fd44:	ldr	r0, [fp, #-16]
   1fd48:	movw	r1, #0
   1fd4c:	udiv	r0, r1, r0
   1fd50:	ldr	r1, [fp, #-12]
   1fd54:	cmp	r0, r1
   1fd58:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fd5c:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fd60:	ldr	r0, [fp, #-16]
   1fd64:	cmp	r0, #0
   1fd68:	bne	1fd70 <__assert_fail@plt+0xea40>
   1fd6c:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fd70:	ldr	r0, [fp, #-12]
   1fd74:	cmp	r0, #0
   1fd78:	bcs	1fde4 <__assert_fail@plt+0xeab4>
   1fd7c:	b	1fd84 <__assert_fail@plt+0xea54>
   1fd80:	b	1fd88 <__assert_fail@plt+0xea58>
   1fd84:	b	1fdc8 <__assert_fail@plt+0xea98>
   1fd88:	ldr	r0, [fp, #-12]
   1fd8c:	cmn	r0, #1
   1fd90:	bne	1fdc8 <__assert_fail@plt+0xea98>
   1fd94:	b	1fdb0 <__assert_fail@plt+0xea80>
   1fd98:	ldr	r0, [fp, #-16]
   1fd9c:	add	r0, r0, #0
   1fda0:	movw	r1, #0
   1fda4:	cmp	r1, r0
   1fda8:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fdac:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fdb0:	ldr	r0, [fp, #-16]
   1fdb4:	sub	r0, r0, #1
   1fdb8:	mvn	r1, #0
   1fdbc:	cmp	r1, r0
   1fdc0:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fdc4:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fdc8:	ldr	r0, [fp, #-12]
   1fdcc:	movw	r1, #0
   1fdd0:	udiv	r0, r1, r0
   1fdd4:	ldr	r1, [fp, #-16]
   1fdd8:	cmp	r0, r1
   1fddc:	bcc	1fdfc <__assert_fail@plt+0xeacc>
   1fde0:	b	1fe14 <__assert_fail@plt+0xeae4>
   1fde4:	ldr	r0, [fp, #-16]
   1fde8:	movw	r1, #255	; 0xff
   1fdec:	udiv	r0, r1, r0
   1fdf0:	ldr	r1, [fp, #-12]
   1fdf4:	cmp	r0, r1
   1fdf8:	bcs	1fe14 <__assert_fail@plt+0xeae4>
   1fdfc:	ldr	r0, [fp, #-12]
   1fe00:	ldr	r1, [fp, #-16]
   1fe04:	mul	r0, r0, r1
   1fe08:	and	r0, r0, #255	; 0xff
   1fe0c:	str	r0, [fp, #-20]	; 0xffffffec
   1fe10:	b	20dac <__assert_fail@plt+0xfa7c>
   1fe14:	ldr	r0, [fp, #-12]
   1fe18:	ldr	r1, [fp, #-16]
   1fe1c:	mul	r0, r0, r1
   1fe20:	and	r0, r0, #255	; 0xff
   1fe24:	str	r0, [fp, #-20]	; 0xffffffec
   1fe28:	b	20dc4 <__assert_fail@plt+0xfa94>
   1fe2c:	b	201e4 <__assert_fail@plt+0xeeb4>
   1fe30:	b	20004 <__assert_fail@plt+0xecd4>
   1fe34:	ldr	r0, [fp, #-16]
   1fe38:	cmp	r0, #0
   1fe3c:	bcs	1ff40 <__assert_fail@plt+0xec10>
   1fe40:	ldr	r0, [fp, #-12]
   1fe44:	cmp	r0, #0
   1fe48:	bcs	1fed0 <__assert_fail@plt+0xeba0>
   1fe4c:	b	1fe6c <__assert_fail@plt+0xeb3c>
   1fe50:	ldr	r0, [fp, #-12]
   1fe54:	ldr	r1, [fp, #-16]
   1fe58:	movw	r2, #32767	; 0x7fff
   1fe5c:	udiv	r1, r2, r1
   1fe60:	cmp	r0, r1
   1fe64:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1fe68:	b	1ffec <__assert_fail@plt+0xecbc>
   1fe6c:	b	1fe80 <__assert_fail@plt+0xeb50>
   1fe70:	ldr	r0, [fp, #-16]
   1fe74:	cmp	r0, #1
   1fe78:	bcc	1fe90 <__assert_fail@plt+0xeb60>
   1fe7c:	b	1fe9c <__assert_fail@plt+0xeb6c>
   1fe80:	ldr	r0, [fp, #-16]
   1fe84:	movw	r1, #0
   1fe88:	cmp	r1, r0
   1fe8c:	bcs	1fe9c <__assert_fail@plt+0xeb6c>
   1fe90:	movw	r0, #0
   1fe94:	str	r0, [fp, #-32]	; 0xffffffe0
   1fe98:	b	1feb4 <__assert_fail@plt+0xeb84>
   1fe9c:	ldr	r0, [fp, #-16]
   1fea0:	movw	r1, #0
   1fea4:	sub	r0, r1, r0
   1fea8:	movw	r1, #32767	; 0x7fff
   1feac:	udiv	r0, r1, r0
   1feb0:	str	r0, [fp, #-32]	; 0xffffffe0
   1feb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1feb8:	ldr	r1, [fp, #-12]
   1febc:	mvn	r2, #0
   1fec0:	sub	r1, r2, r1
   1fec4:	cmp	r0, r1
   1fec8:	bls	1ffd4 <__assert_fail@plt+0xeca4>
   1fecc:	b	1ffec <__assert_fail@plt+0xecbc>
   1fed0:	ldr	r0, [fp, #-16]
   1fed4:	cmn	r0, #1
   1fed8:	bne	1ff24 <__assert_fail@plt+0xebf4>
   1fedc:	b	1fefc <__assert_fail@plt+0xebcc>
   1fee0:	ldr	r0, [pc, #3840]	; 20de8 <__assert_fail@plt+0xfab8>
   1fee4:	ldr	r1, [fp, #-12]
   1fee8:	add	r0, r1, r0
   1feec:	movw	r1, #0
   1fef0:	cmp	r1, r0
   1fef4:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1fef8:	b	1ffec <__assert_fail@plt+0xecbc>
   1fefc:	ldr	r0, [fp, #-12]
   1ff00:	movw	r1, #0
   1ff04:	cmp	r1, r0
   1ff08:	bcs	1ffec <__assert_fail@plt+0xecbc>
   1ff0c:	ldr	r0, [fp, #-12]
   1ff10:	sub	r0, r0, #1
   1ff14:	movw	r1, #32767	; 0x7fff
   1ff18:	cmp	r1, r0
   1ff1c:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1ff20:	b	1ffec <__assert_fail@plt+0xecbc>
   1ff24:	ldr	r0, [pc, #3772]	; 20de8 <__assert_fail@plt+0xfab8>
   1ff28:	ldr	r1, [fp, #-16]
   1ff2c:	udiv	r0, r0, r1
   1ff30:	ldr	r1, [fp, #-12]
   1ff34:	cmp	r0, r1
   1ff38:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1ff3c:	b	1ffec <__assert_fail@plt+0xecbc>
   1ff40:	ldr	r0, [fp, #-16]
   1ff44:	cmp	r0, #0
   1ff48:	bne	1ff50 <__assert_fail@plt+0xec20>
   1ff4c:	b	1ffec <__assert_fail@plt+0xecbc>
   1ff50:	ldr	r0, [fp, #-12]
   1ff54:	cmp	r0, #0
   1ff58:	bcs	1ffbc <__assert_fail@plt+0xec8c>
   1ff5c:	ldr	r0, [fp, #-12]
   1ff60:	cmn	r0, #1
   1ff64:	bne	1ffa0 <__assert_fail@plt+0xec70>
   1ff68:	b	1ff88 <__assert_fail@plt+0xec58>
   1ff6c:	ldr	r0, [pc, #3700]	; 20de8 <__assert_fail@plt+0xfab8>
   1ff70:	ldr	r1, [fp, #-16]
   1ff74:	add	r0, r1, r0
   1ff78:	movw	r1, #0
   1ff7c:	cmp	r1, r0
   1ff80:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1ff84:	b	1ffec <__assert_fail@plt+0xecbc>
   1ff88:	ldr	r0, [fp, #-16]
   1ff8c:	sub	r0, r0, #1
   1ff90:	movw	r1, #32767	; 0x7fff
   1ff94:	cmp	r1, r0
   1ff98:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1ff9c:	b	1ffec <__assert_fail@plt+0xecbc>
   1ffa0:	ldr	r0, [pc, #3648]	; 20de8 <__assert_fail@plt+0xfab8>
   1ffa4:	ldr	r1, [fp, #-12]
   1ffa8:	udiv	r0, r0, r1
   1ffac:	ldr	r1, [fp, #-16]
   1ffb0:	cmp	r0, r1
   1ffb4:	bcc	1ffd4 <__assert_fail@plt+0xeca4>
   1ffb8:	b	1ffec <__assert_fail@plt+0xecbc>
   1ffbc:	ldr	r0, [fp, #-16]
   1ffc0:	movw	r1, #32767	; 0x7fff
   1ffc4:	udiv	r0, r1, r0
   1ffc8:	ldr	r1, [fp, #-12]
   1ffcc:	cmp	r0, r1
   1ffd0:	bcs	1ffec <__assert_fail@plt+0xecbc>
   1ffd4:	ldr	r0, [fp, #-12]
   1ffd8:	ldr	r1, [fp, #-16]
   1ffdc:	mul	r0, r0, r1
   1ffe0:	sxth	r0, r0
   1ffe4:	str	r0, [fp, #-20]	; 0xffffffec
   1ffe8:	b	20dac <__assert_fail@plt+0xfa7c>
   1ffec:	ldr	r0, [fp, #-12]
   1fff0:	ldr	r1, [fp, #-16]
   1fff4:	mul	r0, r0, r1
   1fff8:	sxth	r0, r0
   1fffc:	str	r0, [fp, #-20]	; 0xffffffec
   20000:	b	20dc4 <__assert_fail@plt+0xfa94>
   20004:	ldr	r0, [fp, #-16]
   20008:	cmp	r0, #0
   2000c:	bcs	20118 <__assert_fail@plt+0xede8>
   20010:	ldr	r0, [fp, #-12]
   20014:	cmp	r0, #0
   20018:	bcs	200a0 <__assert_fail@plt+0xed70>
   2001c:	b	2003c <__assert_fail@plt+0xed0c>
   20020:	ldr	r0, [fp, #-12]
   20024:	ldr	r1, [fp, #-16]
   20028:	movw	r2, #65535	; 0xffff
   2002c:	udiv	r1, r2, r1
   20030:	cmp	r0, r1
   20034:	bcc	201b4 <__assert_fail@plt+0xee84>
   20038:	b	201cc <__assert_fail@plt+0xee9c>
   2003c:	b	20050 <__assert_fail@plt+0xed20>
   20040:	ldr	r0, [fp, #-16]
   20044:	cmp	r0, #1
   20048:	bcc	20060 <__assert_fail@plt+0xed30>
   2004c:	b	2006c <__assert_fail@plt+0xed3c>
   20050:	ldr	r0, [fp, #-16]
   20054:	movw	r1, #0
   20058:	cmp	r1, r0
   2005c:	bcs	2006c <__assert_fail@plt+0xed3c>
   20060:	movw	r0, #0
   20064:	str	r0, [fp, #-36]	; 0xffffffdc
   20068:	b	20084 <__assert_fail@plt+0xed54>
   2006c:	ldr	r0, [fp, #-16]
   20070:	movw	r1, #0
   20074:	sub	r0, r1, r0
   20078:	movw	r1, #65535	; 0xffff
   2007c:	udiv	r0, r1, r0
   20080:	str	r0, [fp, #-36]	; 0xffffffdc
   20084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20088:	ldr	r1, [fp, #-12]
   2008c:	mvn	r2, #0
   20090:	sub	r1, r2, r1
   20094:	cmp	r0, r1
   20098:	bls	201b4 <__assert_fail@plt+0xee84>
   2009c:	b	201cc <__assert_fail@plt+0xee9c>
   200a0:	b	200a8 <__assert_fail@plt+0xed78>
   200a4:	b	200ac <__assert_fail@plt+0xed7c>
   200a8:	b	200fc <__assert_fail@plt+0xedcc>
   200ac:	ldr	r0, [fp, #-16]
   200b0:	cmn	r0, #1
   200b4:	bne	200fc <__assert_fail@plt+0xedcc>
   200b8:	b	200d4 <__assert_fail@plt+0xeda4>
   200bc:	ldr	r0, [fp, #-12]
   200c0:	add	r0, r0, #0
   200c4:	movw	r1, #0
   200c8:	cmp	r1, r0
   200cc:	bcc	201b4 <__assert_fail@plt+0xee84>
   200d0:	b	201cc <__assert_fail@plt+0xee9c>
   200d4:	ldr	r0, [fp, #-12]
   200d8:	movw	r1, #0
   200dc:	cmp	r1, r0
   200e0:	bcs	201cc <__assert_fail@plt+0xee9c>
   200e4:	ldr	r0, [fp, #-12]
   200e8:	sub	r0, r0, #1
   200ec:	mvn	r1, #0
   200f0:	cmp	r1, r0
   200f4:	bcc	201b4 <__assert_fail@plt+0xee84>
   200f8:	b	201cc <__assert_fail@plt+0xee9c>
   200fc:	ldr	r0, [fp, #-16]
   20100:	movw	r1, #0
   20104:	udiv	r0, r1, r0
   20108:	ldr	r1, [fp, #-12]
   2010c:	cmp	r0, r1
   20110:	bcc	201b4 <__assert_fail@plt+0xee84>
   20114:	b	201cc <__assert_fail@plt+0xee9c>
   20118:	ldr	r0, [fp, #-16]
   2011c:	cmp	r0, #0
   20120:	bne	20128 <__assert_fail@plt+0xedf8>
   20124:	b	201cc <__assert_fail@plt+0xee9c>
   20128:	ldr	r0, [fp, #-12]
   2012c:	cmp	r0, #0
   20130:	bcs	2019c <__assert_fail@plt+0xee6c>
   20134:	b	2013c <__assert_fail@plt+0xee0c>
   20138:	b	20140 <__assert_fail@plt+0xee10>
   2013c:	b	20180 <__assert_fail@plt+0xee50>
   20140:	ldr	r0, [fp, #-12]
   20144:	cmn	r0, #1
   20148:	bne	20180 <__assert_fail@plt+0xee50>
   2014c:	b	20168 <__assert_fail@plt+0xee38>
   20150:	ldr	r0, [fp, #-16]
   20154:	add	r0, r0, #0
   20158:	movw	r1, #0
   2015c:	cmp	r1, r0
   20160:	bcc	201b4 <__assert_fail@plt+0xee84>
   20164:	b	201cc <__assert_fail@plt+0xee9c>
   20168:	ldr	r0, [fp, #-16]
   2016c:	sub	r0, r0, #1
   20170:	mvn	r1, #0
   20174:	cmp	r1, r0
   20178:	bcc	201b4 <__assert_fail@plt+0xee84>
   2017c:	b	201cc <__assert_fail@plt+0xee9c>
   20180:	ldr	r0, [fp, #-12]
   20184:	movw	r1, #0
   20188:	udiv	r0, r1, r0
   2018c:	ldr	r1, [fp, #-16]
   20190:	cmp	r0, r1
   20194:	bcc	201b4 <__assert_fail@plt+0xee84>
   20198:	b	201cc <__assert_fail@plt+0xee9c>
   2019c:	ldr	r0, [fp, #-16]
   201a0:	movw	r1, #65535	; 0xffff
   201a4:	udiv	r0, r1, r0
   201a8:	ldr	r1, [fp, #-12]
   201ac:	cmp	r0, r1
   201b0:	bcs	201cc <__assert_fail@plt+0xee9c>
   201b4:	ldr	r0, [fp, #-12]
   201b8:	ldr	r1, [fp, #-16]
   201bc:	mul	r0, r0, r1
   201c0:	uxth	r0, r0
   201c4:	str	r0, [fp, #-20]	; 0xffffffec
   201c8:	b	20dac <__assert_fail@plt+0xfa7c>
   201cc:	ldr	r0, [fp, #-12]
   201d0:	ldr	r1, [fp, #-16]
   201d4:	mul	r0, r0, r1
   201d8:	uxth	r0, r0
   201dc:	str	r0, [fp, #-20]	; 0xffffffec
   201e0:	b	20dc4 <__assert_fail@plt+0xfa94>
   201e4:	b	201e8 <__assert_fail@plt+0xeeb8>
   201e8:	b	203ac <__assert_fail@plt+0xf07c>
   201ec:	ldr	r0, [fp, #-16]
   201f0:	cmp	r0, #0
   201f4:	bcs	202f4 <__assert_fail@plt+0xefc4>
   201f8:	ldr	r0, [fp, #-12]
   201fc:	cmp	r0, #0
   20200:	bcs	20288 <__assert_fail@plt+0xef58>
   20204:	b	20224 <__assert_fail@plt+0xeef4>
   20208:	ldr	r0, [pc, #3024]	; 20de0 <__assert_fail@plt+0xfab0>
   2020c:	ldr	r1, [fp, #-12]
   20210:	ldr	r2, [fp, #-16]
   20214:	udiv	r0, r0, r2
   20218:	cmp	r1, r0
   2021c:	bcc	20384 <__assert_fail@plt+0xf054>
   20220:	b	20398 <__assert_fail@plt+0xf068>
   20224:	b	20238 <__assert_fail@plt+0xef08>
   20228:	ldr	r0, [fp, #-16]
   2022c:	cmp	r0, #1
   20230:	bcc	20248 <__assert_fail@plt+0xef18>
   20234:	b	20254 <__assert_fail@plt+0xef24>
   20238:	ldr	r0, [fp, #-16]
   2023c:	movw	r1, #0
   20240:	cmp	r1, r0
   20244:	bcs	20254 <__assert_fail@plt+0xef24>
   20248:	movw	r0, #0
   2024c:	str	r0, [fp, #-40]	; 0xffffffd8
   20250:	b	2026c <__assert_fail@plt+0xef3c>
   20254:	ldr	r0, [pc, #2948]	; 20de0 <__assert_fail@plt+0xfab0>
   20258:	ldr	r1, [fp, #-16]
   2025c:	movw	r2, #0
   20260:	sub	r1, r2, r1
   20264:	udiv	r0, r0, r1
   20268:	str	r0, [fp, #-40]	; 0xffffffd8
   2026c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20270:	ldr	r1, [fp, #-12]
   20274:	mvn	r2, #0
   20278:	sub	r1, r2, r1
   2027c:	cmp	r0, r1
   20280:	bls	20384 <__assert_fail@plt+0xf054>
   20284:	b	20398 <__assert_fail@plt+0xf068>
   20288:	ldr	r0, [fp, #-16]
   2028c:	cmn	r0, #1
   20290:	bne	202d8 <__assert_fail@plt+0xefa8>
   20294:	b	202b0 <__assert_fail@plt+0xef80>
   20298:	ldr	r0, [fp, #-12]
   2029c:	add	r0, r0, #-2147483648	; 0x80000000
   202a0:	movw	r1, #0
   202a4:	cmp	r1, r0
   202a8:	bcc	20384 <__assert_fail@plt+0xf054>
   202ac:	b	20398 <__assert_fail@plt+0xf068>
   202b0:	ldr	r0, [fp, #-12]
   202b4:	movw	r1, #0
   202b8:	cmp	r1, r0
   202bc:	bcs	20398 <__assert_fail@plt+0xf068>
   202c0:	ldr	r0, [pc, #2840]	; 20de0 <__assert_fail@plt+0xfab0>
   202c4:	ldr	r1, [fp, #-12]
   202c8:	sub	r1, r1, #1
   202cc:	cmp	r0, r1
   202d0:	bcc	20384 <__assert_fail@plt+0xf054>
   202d4:	b	20398 <__assert_fail@plt+0xf068>
   202d8:	ldr	r0, [pc, #2820]	; 20de4 <__assert_fail@plt+0xfab4>
   202dc:	ldr	r1, [fp, #-16]
   202e0:	udiv	r0, r0, r1
   202e4:	ldr	r1, [fp, #-12]
   202e8:	cmp	r0, r1
   202ec:	bcc	20384 <__assert_fail@plt+0xf054>
   202f0:	b	20398 <__assert_fail@plt+0xf068>
   202f4:	ldr	r0, [fp, #-16]
   202f8:	cmp	r0, #0
   202fc:	bne	20304 <__assert_fail@plt+0xefd4>
   20300:	b	20398 <__assert_fail@plt+0xf068>
   20304:	ldr	r0, [fp, #-12]
   20308:	cmp	r0, #0
   2030c:	bcs	2036c <__assert_fail@plt+0xf03c>
   20310:	ldr	r0, [fp, #-12]
   20314:	cmn	r0, #1
   20318:	bne	20350 <__assert_fail@plt+0xf020>
   2031c:	b	20338 <__assert_fail@plt+0xf008>
   20320:	ldr	r0, [fp, #-16]
   20324:	add	r0, r0, #-2147483648	; 0x80000000
   20328:	movw	r1, #0
   2032c:	cmp	r1, r0
   20330:	bcc	20384 <__assert_fail@plt+0xf054>
   20334:	b	20398 <__assert_fail@plt+0xf068>
   20338:	ldr	r0, [pc, #2720]	; 20de0 <__assert_fail@plt+0xfab0>
   2033c:	ldr	r1, [fp, #-16]
   20340:	sub	r1, r1, #1
   20344:	cmp	r0, r1
   20348:	bcc	20384 <__assert_fail@plt+0xf054>
   2034c:	b	20398 <__assert_fail@plt+0xf068>
   20350:	ldr	r0, [pc, #2700]	; 20de4 <__assert_fail@plt+0xfab4>
   20354:	ldr	r1, [fp, #-12]
   20358:	udiv	r0, r0, r1
   2035c:	ldr	r1, [fp, #-16]
   20360:	cmp	r0, r1
   20364:	bcc	20384 <__assert_fail@plt+0xf054>
   20368:	b	20398 <__assert_fail@plt+0xf068>
   2036c:	ldr	r0, [pc, #2668]	; 20de0 <__assert_fail@plt+0xfab0>
   20370:	ldr	r1, [fp, #-16]
   20374:	udiv	r0, r0, r1
   20378:	ldr	r1, [fp, #-12]
   2037c:	cmp	r0, r1
   20380:	bcs	20398 <__assert_fail@plt+0xf068>
   20384:	ldr	r0, [fp, #-12]
   20388:	ldr	r1, [fp, #-16]
   2038c:	mul	r0, r0, r1
   20390:	str	r0, [fp, #-20]	; 0xffffffec
   20394:	b	20dac <__assert_fail@plt+0xfa7c>
   20398:	ldr	r0, [fp, #-12]
   2039c:	ldr	r1, [fp, #-16]
   203a0:	mul	r0, r0, r1
   203a4:	str	r0, [fp, #-20]	; 0xffffffec
   203a8:	b	20dc4 <__assert_fail@plt+0xfa94>
   203ac:	ldr	r0, [fp, #-16]
   203b0:	cmp	r0, #0
   203b4:	bcs	204c0 <__assert_fail@plt+0xf190>
   203b8:	ldr	r0, [fp, #-12]
   203bc:	cmp	r0, #0
   203c0:	bcs	20448 <__assert_fail@plt+0xf118>
   203c4:	b	203e4 <__assert_fail@plt+0xf0b4>
   203c8:	ldr	r0, [fp, #-12]
   203cc:	ldr	r1, [fp, #-16]
   203d0:	mvn	r2, #0
   203d4:	udiv	r1, r2, r1
   203d8:	cmp	r0, r1
   203dc:	bcc	2055c <__assert_fail@plt+0xf22c>
   203e0:	b	20570 <__assert_fail@plt+0xf240>
   203e4:	b	203f8 <__assert_fail@plt+0xf0c8>
   203e8:	ldr	r0, [fp, #-16]
   203ec:	cmp	r0, #1
   203f0:	bcc	20408 <__assert_fail@plt+0xf0d8>
   203f4:	b	20414 <__assert_fail@plt+0xf0e4>
   203f8:	ldr	r0, [fp, #-16]
   203fc:	movw	r1, #0
   20400:	cmp	r1, r0
   20404:	bcs	20414 <__assert_fail@plt+0xf0e4>
   20408:	movw	r0, #1
   2040c:	str	r0, [fp, #-44]	; 0xffffffd4
   20410:	b	2042c <__assert_fail@plt+0xf0fc>
   20414:	ldr	r0, [fp, #-16]
   20418:	movw	r1, #0
   2041c:	sub	r0, r1, r0
   20420:	mvn	r1, #0
   20424:	udiv	r0, r1, r0
   20428:	str	r0, [fp, #-44]	; 0xffffffd4
   2042c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20430:	ldr	r1, [fp, #-12]
   20434:	mvn	r2, #0
   20438:	sub	r1, r2, r1
   2043c:	cmp	r0, r1
   20440:	bls	2055c <__assert_fail@plt+0xf22c>
   20444:	b	20570 <__assert_fail@plt+0xf240>
   20448:	b	20450 <__assert_fail@plt+0xf120>
   2044c:	b	20454 <__assert_fail@plt+0xf124>
   20450:	b	204a4 <__assert_fail@plt+0xf174>
   20454:	ldr	r0, [fp, #-16]
   20458:	cmn	r0, #1
   2045c:	bne	204a4 <__assert_fail@plt+0xf174>
   20460:	b	2047c <__assert_fail@plt+0xf14c>
   20464:	ldr	r0, [fp, #-12]
   20468:	add	r0, r0, #0
   2046c:	movw	r1, #0
   20470:	cmp	r1, r0
   20474:	bcc	2055c <__assert_fail@plt+0xf22c>
   20478:	b	20570 <__assert_fail@plt+0xf240>
   2047c:	ldr	r0, [fp, #-12]
   20480:	movw	r1, #0
   20484:	cmp	r1, r0
   20488:	bcs	20570 <__assert_fail@plt+0xf240>
   2048c:	ldr	r0, [fp, #-12]
   20490:	sub	r0, r0, #1
   20494:	mvn	r1, #0
   20498:	cmp	r1, r0
   2049c:	bcc	2055c <__assert_fail@plt+0xf22c>
   204a0:	b	20570 <__assert_fail@plt+0xf240>
   204a4:	ldr	r0, [fp, #-16]
   204a8:	movw	r1, #0
   204ac:	udiv	r0, r1, r0
   204b0:	ldr	r1, [fp, #-12]
   204b4:	cmp	r0, r1
   204b8:	bcc	2055c <__assert_fail@plt+0xf22c>
   204bc:	b	20570 <__assert_fail@plt+0xf240>
   204c0:	ldr	r0, [fp, #-16]
   204c4:	cmp	r0, #0
   204c8:	bne	204d0 <__assert_fail@plt+0xf1a0>
   204cc:	b	20570 <__assert_fail@plt+0xf240>
   204d0:	ldr	r0, [fp, #-12]
   204d4:	cmp	r0, #0
   204d8:	bcs	20544 <__assert_fail@plt+0xf214>
   204dc:	b	204e4 <__assert_fail@plt+0xf1b4>
   204e0:	b	204e8 <__assert_fail@plt+0xf1b8>
   204e4:	b	20528 <__assert_fail@plt+0xf1f8>
   204e8:	ldr	r0, [fp, #-12]
   204ec:	cmn	r0, #1
   204f0:	bne	20528 <__assert_fail@plt+0xf1f8>
   204f4:	b	20510 <__assert_fail@plt+0xf1e0>
   204f8:	ldr	r0, [fp, #-16]
   204fc:	add	r0, r0, #0
   20500:	movw	r1, #0
   20504:	cmp	r1, r0
   20508:	bcc	2055c <__assert_fail@plt+0xf22c>
   2050c:	b	20570 <__assert_fail@plt+0xf240>
   20510:	ldr	r0, [fp, #-16]
   20514:	sub	r0, r0, #1
   20518:	mvn	r1, #0
   2051c:	cmp	r1, r0
   20520:	bcc	2055c <__assert_fail@plt+0xf22c>
   20524:	b	20570 <__assert_fail@plt+0xf240>
   20528:	ldr	r0, [fp, #-12]
   2052c:	movw	r1, #0
   20530:	udiv	r0, r1, r0
   20534:	ldr	r1, [fp, #-16]
   20538:	cmp	r0, r1
   2053c:	bcc	2055c <__assert_fail@plt+0xf22c>
   20540:	b	20570 <__assert_fail@plt+0xf240>
   20544:	ldr	r0, [fp, #-16]
   20548:	mvn	r1, #0
   2054c:	udiv	r0, r1, r0
   20550:	ldr	r1, [fp, #-12]
   20554:	cmp	r0, r1
   20558:	bcs	20570 <__assert_fail@plt+0xf240>
   2055c:	ldr	r0, [fp, #-12]
   20560:	ldr	r1, [fp, #-16]
   20564:	mul	r0, r0, r1
   20568:	str	r0, [fp, #-20]	; 0xffffffec
   2056c:	b	20dac <__assert_fail@plt+0xfa7c>
   20570:	ldr	r0, [fp, #-12]
   20574:	ldr	r1, [fp, #-16]
   20578:	mul	r0, r0, r1
   2057c:	str	r0, [fp, #-20]	; 0xffffffec
   20580:	b	20dc4 <__assert_fail@plt+0xfa94>
   20584:	b	20588 <__assert_fail@plt+0xf258>
   20588:	b	2074c <__assert_fail@plt+0xf41c>
   2058c:	ldr	r0, [fp, #-16]
   20590:	cmp	r0, #0
   20594:	bcs	20694 <__assert_fail@plt+0xf364>
   20598:	ldr	r0, [fp, #-12]
   2059c:	cmp	r0, #0
   205a0:	bcs	20628 <__assert_fail@plt+0xf2f8>
   205a4:	b	205c4 <__assert_fail@plt+0xf294>
   205a8:	ldr	r0, [pc, #2096]	; 20de0 <__assert_fail@plt+0xfab0>
   205ac:	ldr	r1, [fp, #-12]
   205b0:	ldr	r2, [fp, #-16]
   205b4:	udiv	r0, r0, r2
   205b8:	cmp	r1, r0
   205bc:	bcc	20724 <__assert_fail@plt+0xf3f4>
   205c0:	b	20738 <__assert_fail@plt+0xf408>
   205c4:	b	205d8 <__assert_fail@plt+0xf2a8>
   205c8:	ldr	r0, [fp, #-16]
   205cc:	cmp	r0, #1
   205d0:	bcc	205e8 <__assert_fail@plt+0xf2b8>
   205d4:	b	205f4 <__assert_fail@plt+0xf2c4>
   205d8:	ldr	r0, [fp, #-16]
   205dc:	movw	r1, #0
   205e0:	cmp	r1, r0
   205e4:	bcs	205f4 <__assert_fail@plt+0xf2c4>
   205e8:	movw	r0, #0
   205ec:	str	r0, [fp, #-48]	; 0xffffffd0
   205f0:	b	2060c <__assert_fail@plt+0xf2dc>
   205f4:	ldr	r0, [pc, #2020]	; 20de0 <__assert_fail@plt+0xfab0>
   205f8:	ldr	r1, [fp, #-16]
   205fc:	movw	r2, #0
   20600:	sub	r1, r2, r1
   20604:	udiv	r0, r0, r1
   20608:	str	r0, [fp, #-48]	; 0xffffffd0
   2060c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20610:	ldr	r1, [fp, #-12]
   20614:	mvn	r2, #0
   20618:	sub	r1, r2, r1
   2061c:	cmp	r0, r1
   20620:	bls	20724 <__assert_fail@plt+0xf3f4>
   20624:	b	20738 <__assert_fail@plt+0xf408>
   20628:	ldr	r0, [fp, #-16]
   2062c:	cmn	r0, #1
   20630:	bne	20678 <__assert_fail@plt+0xf348>
   20634:	b	20650 <__assert_fail@plt+0xf320>
   20638:	ldr	r0, [fp, #-12]
   2063c:	add	r0, r0, #-2147483648	; 0x80000000
   20640:	movw	r1, #0
   20644:	cmp	r1, r0
   20648:	bcc	20724 <__assert_fail@plt+0xf3f4>
   2064c:	b	20738 <__assert_fail@plt+0xf408>
   20650:	ldr	r0, [fp, #-12]
   20654:	movw	r1, #0
   20658:	cmp	r1, r0
   2065c:	bcs	20738 <__assert_fail@plt+0xf408>
   20660:	ldr	r0, [pc, #1912]	; 20de0 <__assert_fail@plt+0xfab0>
   20664:	ldr	r1, [fp, #-12]
   20668:	sub	r1, r1, #1
   2066c:	cmp	r0, r1
   20670:	bcc	20724 <__assert_fail@plt+0xf3f4>
   20674:	b	20738 <__assert_fail@plt+0xf408>
   20678:	ldr	r0, [pc, #1892]	; 20de4 <__assert_fail@plt+0xfab4>
   2067c:	ldr	r1, [fp, #-16]
   20680:	udiv	r0, r0, r1
   20684:	ldr	r1, [fp, #-12]
   20688:	cmp	r0, r1
   2068c:	bcc	20724 <__assert_fail@plt+0xf3f4>
   20690:	b	20738 <__assert_fail@plt+0xf408>
   20694:	ldr	r0, [fp, #-16]
   20698:	cmp	r0, #0
   2069c:	bne	206a4 <__assert_fail@plt+0xf374>
   206a0:	b	20738 <__assert_fail@plt+0xf408>
   206a4:	ldr	r0, [fp, #-12]
   206a8:	cmp	r0, #0
   206ac:	bcs	2070c <__assert_fail@plt+0xf3dc>
   206b0:	ldr	r0, [fp, #-12]
   206b4:	cmn	r0, #1
   206b8:	bne	206f0 <__assert_fail@plt+0xf3c0>
   206bc:	b	206d8 <__assert_fail@plt+0xf3a8>
   206c0:	ldr	r0, [fp, #-16]
   206c4:	add	r0, r0, #-2147483648	; 0x80000000
   206c8:	movw	r1, #0
   206cc:	cmp	r1, r0
   206d0:	bcc	20724 <__assert_fail@plt+0xf3f4>
   206d4:	b	20738 <__assert_fail@plt+0xf408>
   206d8:	ldr	r0, [pc, #1792]	; 20de0 <__assert_fail@plt+0xfab0>
   206dc:	ldr	r1, [fp, #-16]
   206e0:	sub	r1, r1, #1
   206e4:	cmp	r0, r1
   206e8:	bcc	20724 <__assert_fail@plt+0xf3f4>
   206ec:	b	20738 <__assert_fail@plt+0xf408>
   206f0:	ldr	r0, [pc, #1772]	; 20de4 <__assert_fail@plt+0xfab4>
   206f4:	ldr	r1, [fp, #-12]
   206f8:	udiv	r0, r0, r1
   206fc:	ldr	r1, [fp, #-16]
   20700:	cmp	r0, r1
   20704:	bcc	20724 <__assert_fail@plt+0xf3f4>
   20708:	b	20738 <__assert_fail@plt+0xf408>
   2070c:	ldr	r0, [pc, #1740]	; 20de0 <__assert_fail@plt+0xfab0>
   20710:	ldr	r1, [fp, #-16]
   20714:	udiv	r0, r0, r1
   20718:	ldr	r1, [fp, #-12]
   2071c:	cmp	r0, r1
   20720:	bcs	20738 <__assert_fail@plt+0xf408>
   20724:	ldr	r0, [fp, #-12]
   20728:	ldr	r1, [fp, #-16]
   2072c:	mul	r0, r0, r1
   20730:	str	r0, [fp, #-20]	; 0xffffffec
   20734:	b	20dac <__assert_fail@plt+0xfa7c>
   20738:	ldr	r0, [fp, #-12]
   2073c:	ldr	r1, [fp, #-16]
   20740:	mul	r0, r0, r1
   20744:	str	r0, [fp, #-20]	; 0xffffffec
   20748:	b	20dc4 <__assert_fail@plt+0xfa94>
   2074c:	ldr	r0, [fp, #-16]
   20750:	cmp	r0, #0
   20754:	bcs	20860 <__assert_fail@plt+0xf530>
   20758:	ldr	r0, [fp, #-12]
   2075c:	cmp	r0, #0
   20760:	bcs	207e8 <__assert_fail@plt+0xf4b8>
   20764:	b	20784 <__assert_fail@plt+0xf454>
   20768:	ldr	r0, [fp, #-12]
   2076c:	ldr	r1, [fp, #-16]
   20770:	mvn	r2, #0
   20774:	udiv	r1, r2, r1
   20778:	cmp	r0, r1
   2077c:	bcc	208fc <__assert_fail@plt+0xf5cc>
   20780:	b	20910 <__assert_fail@plt+0xf5e0>
   20784:	b	20798 <__assert_fail@plt+0xf468>
   20788:	ldr	r0, [fp, #-16]
   2078c:	cmp	r0, #1
   20790:	bcc	207a8 <__assert_fail@plt+0xf478>
   20794:	b	207b4 <__assert_fail@plt+0xf484>
   20798:	ldr	r0, [fp, #-16]
   2079c:	movw	r1, #0
   207a0:	cmp	r1, r0
   207a4:	bcs	207b4 <__assert_fail@plt+0xf484>
   207a8:	movw	r0, #1
   207ac:	str	r0, [fp, #-52]	; 0xffffffcc
   207b0:	b	207cc <__assert_fail@plt+0xf49c>
   207b4:	ldr	r0, [fp, #-16]
   207b8:	movw	r1, #0
   207bc:	sub	r0, r1, r0
   207c0:	mvn	r1, #0
   207c4:	udiv	r0, r1, r0
   207c8:	str	r0, [fp, #-52]	; 0xffffffcc
   207cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   207d0:	ldr	r1, [fp, #-12]
   207d4:	mvn	r2, #0
   207d8:	sub	r1, r2, r1
   207dc:	cmp	r0, r1
   207e0:	bls	208fc <__assert_fail@plt+0xf5cc>
   207e4:	b	20910 <__assert_fail@plt+0xf5e0>
   207e8:	b	207f0 <__assert_fail@plt+0xf4c0>
   207ec:	b	207f4 <__assert_fail@plt+0xf4c4>
   207f0:	b	20844 <__assert_fail@plt+0xf514>
   207f4:	ldr	r0, [fp, #-16]
   207f8:	cmn	r0, #1
   207fc:	bne	20844 <__assert_fail@plt+0xf514>
   20800:	b	2081c <__assert_fail@plt+0xf4ec>
   20804:	ldr	r0, [fp, #-12]
   20808:	add	r0, r0, #0
   2080c:	movw	r1, #0
   20810:	cmp	r1, r0
   20814:	bcc	208fc <__assert_fail@plt+0xf5cc>
   20818:	b	20910 <__assert_fail@plt+0xf5e0>
   2081c:	ldr	r0, [fp, #-12]
   20820:	movw	r1, #0
   20824:	cmp	r1, r0
   20828:	bcs	20910 <__assert_fail@plt+0xf5e0>
   2082c:	ldr	r0, [fp, #-12]
   20830:	sub	r0, r0, #1
   20834:	mvn	r1, #0
   20838:	cmp	r1, r0
   2083c:	bcc	208fc <__assert_fail@plt+0xf5cc>
   20840:	b	20910 <__assert_fail@plt+0xf5e0>
   20844:	ldr	r0, [fp, #-16]
   20848:	movw	r1, #0
   2084c:	udiv	r0, r1, r0
   20850:	ldr	r1, [fp, #-12]
   20854:	cmp	r0, r1
   20858:	bcc	208fc <__assert_fail@plt+0xf5cc>
   2085c:	b	20910 <__assert_fail@plt+0xf5e0>
   20860:	ldr	r0, [fp, #-16]
   20864:	cmp	r0, #0
   20868:	bne	20870 <__assert_fail@plt+0xf540>
   2086c:	b	20910 <__assert_fail@plt+0xf5e0>
   20870:	ldr	r0, [fp, #-12]
   20874:	cmp	r0, #0
   20878:	bcs	208e4 <__assert_fail@plt+0xf5b4>
   2087c:	b	20884 <__assert_fail@plt+0xf554>
   20880:	b	20888 <__assert_fail@plt+0xf558>
   20884:	b	208c8 <__assert_fail@plt+0xf598>
   20888:	ldr	r0, [fp, #-12]
   2088c:	cmn	r0, #1
   20890:	bne	208c8 <__assert_fail@plt+0xf598>
   20894:	b	208b0 <__assert_fail@plt+0xf580>
   20898:	ldr	r0, [fp, #-16]
   2089c:	add	r0, r0, #0
   208a0:	movw	r1, #0
   208a4:	cmp	r1, r0
   208a8:	bcc	208fc <__assert_fail@plt+0xf5cc>
   208ac:	b	20910 <__assert_fail@plt+0xf5e0>
   208b0:	ldr	r0, [fp, #-16]
   208b4:	sub	r0, r0, #1
   208b8:	mvn	r1, #0
   208bc:	cmp	r1, r0
   208c0:	bcc	208fc <__assert_fail@plt+0xf5cc>
   208c4:	b	20910 <__assert_fail@plt+0xf5e0>
   208c8:	ldr	r0, [fp, #-12]
   208cc:	movw	r1, #0
   208d0:	udiv	r0, r1, r0
   208d4:	ldr	r1, [fp, #-16]
   208d8:	cmp	r0, r1
   208dc:	bcc	208fc <__assert_fail@plt+0xf5cc>
   208e0:	b	20910 <__assert_fail@plt+0xf5e0>
   208e4:	ldr	r0, [fp, #-16]
   208e8:	mvn	r1, #0
   208ec:	udiv	r0, r1, r0
   208f0:	ldr	r1, [fp, #-12]
   208f4:	cmp	r0, r1
   208f8:	bcs	20910 <__assert_fail@plt+0xf5e0>
   208fc:	ldr	r0, [fp, #-12]
   20900:	ldr	r1, [fp, #-16]
   20904:	mul	r0, r0, r1
   20908:	str	r0, [fp, #-20]	; 0xffffffec
   2090c:	b	20dac <__assert_fail@plt+0xfa7c>
   20910:	ldr	r0, [fp, #-12]
   20914:	ldr	r1, [fp, #-16]
   20918:	mul	r0, r0, r1
   2091c:	str	r0, [fp, #-20]	; 0xffffffec
   20920:	b	20dc4 <__assert_fail@plt+0xfa94>
   20924:	b	20b78 <__assert_fail@plt+0xf848>
   20928:	ldr	r0, [fp, #-16]
   2092c:	cmp	r0, #0
   20930:	bcs	20a90 <__assert_fail@plt+0xf760>
   20934:	ldr	r0, [fp, #-12]
   20938:	cmp	r0, #0
   2093c:	bcs	20a0c <__assert_fail@plt+0xf6dc>
   20940:	b	20944 <__assert_fail@plt+0xf614>
   20944:	ldr	r0, [fp, #-12]
   20948:	ldr	r2, [fp, #-16]
   2094c:	mvn	r1, #0
   20950:	mvn	r3, #-2147483648	; 0x80000000
   20954:	mov	ip, #0
   20958:	str	r0, [fp, #-56]	; 0xffffffc8
   2095c:	mov	r0, r1
   20960:	mov	r1, r3
   20964:	mov	r3, ip
   20968:	bl	21500 <__assert_fail@plt+0x101d0>
   2096c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20970:	subs	r0, r2, r0
   20974:	rscs	r1, r1, #0
   20978:	str	r0, [fp, #-60]	; 0xffffffc4
   2097c:	str	r1, [fp, #-64]	; 0xffffffc0
   20980:	blt	20b50 <__assert_fail@plt+0xf820>
   20984:	b	20b64 <__assert_fail@plt+0xf834>
   20988:	b	2099c <__assert_fail@plt+0xf66c>
   2098c:	ldr	r0, [fp, #-16]
   20990:	cmp	r0, #1
   20994:	bcc	209ac <__assert_fail@plt+0xf67c>
   20998:	b	209c0 <__assert_fail@plt+0xf690>
   2099c:	ldr	r0, [fp, #-16]
   209a0:	movw	r1, #0
   209a4:	cmp	r1, r0
   209a8:	bcs	209c0 <__assert_fail@plt+0xf690>
   209ac:	mov	r0, #0
   209b0:	mvn	r1, #0
   209b4:	str	r1, [fp, #-68]	; 0xffffffbc
   209b8:	str	r0, [fp, #-72]	; 0xffffffb8
   209bc:	b	209e4 <__assert_fail@plt+0xf6b4>
   209c0:	ldr	r0, [fp, #-16]
   209c4:	rsb	r2, r0, #0
   209c8:	mvn	r0, #0
   209cc:	mvn	r1, #-2147483648	; 0x80000000
   209d0:	mov	r3, #0
   209d4:	bl	21500 <__assert_fail@plt+0x101d0>
   209d8:	str	r0, [fp, #-68]	; 0xffffffbc
   209dc:	str	r1, [fp, #-72]	; 0xffffffb8
   209e0:	b	209e4 <__assert_fail@plt+0xf6b4>
   209e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   209e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   209ec:	ldr	r2, [fp, #-12]
   209f0:	mvn	r2, r2
   209f4:	subs	r1, r2, r1
   209f8:	rscs	r0, r0, #0
   209fc:	str	r1, [fp, #-76]	; 0xffffffb4
   20a00:	str	r0, [fp, #-80]	; 0xffffffb0
   20a04:	bge	20b50 <__assert_fail@plt+0xf820>
   20a08:	b	20b64 <__assert_fail@plt+0xf834>
   20a0c:	ldr	r0, [fp, #-16]
   20a10:	cmn	r0, #1
   20a14:	bne	20a5c <__assert_fail@plt+0xf72c>
   20a18:	b	20a3c <__assert_fail@plt+0xf70c>
   20a1c:	ldr	r0, [fp, #-12]
   20a20:	rsbs	r0, r0, #0
   20a24:	mov	r1, #0
   20a28:	sbcs	r1, r1, #-2147483648	; 0x80000000
   20a2c:	str	r0, [fp, #-84]	; 0xffffffac
   20a30:	str	r1, [sp, #88]	; 0x58
   20a34:	blt	20b50 <__assert_fail@plt+0xf820>
   20a38:	b	20b64 <__assert_fail@plt+0xf834>
   20a3c:	ldr	r0, [fp, #-12]
   20a40:	movw	r1, #0
   20a44:	cmp	r1, r0
   20a48:	bcs	20b64 <__assert_fail@plt+0xf834>
   20a4c:	mov	r0, #0
   20a50:	cmp	r0, #0
   20a54:	bne	20b50 <__assert_fail@plt+0xf820>
   20a58:	b	20b64 <__assert_fail@plt+0xf834>
   20a5c:	ldr	r2, [fp, #-16]
   20a60:	mov	r1, #-2147483648	; 0x80000000
   20a64:	mov	r0, #0
   20a68:	str	r0, [sp, #84]	; 0x54
   20a6c:	ldr	r3, [sp, #84]	; 0x54
   20a70:	bl	2142c <__assert_fail@plt+0x100fc>
   20a74:	ldr	r2, [fp, #-12]
   20a78:	subs	r0, r0, r2
   20a7c:	sbcs	r1, r1, #0
   20a80:	str	r0, [sp, #80]	; 0x50
   20a84:	str	r1, [sp, #76]	; 0x4c
   20a88:	blt	20b50 <__assert_fail@plt+0xf820>
   20a8c:	b	20b64 <__assert_fail@plt+0xf834>
   20a90:	ldr	r0, [fp, #-16]
   20a94:	cmp	r0, #0
   20a98:	bne	20aa0 <__assert_fail@plt+0xf770>
   20a9c:	b	20b64 <__assert_fail@plt+0xf834>
   20aa0:	ldr	r0, [fp, #-12]
   20aa4:	cmp	r0, #0
   20aa8:	bcs	20b20 <__assert_fail@plt+0xf7f0>
   20aac:	ldr	r0, [fp, #-12]
   20ab0:	cmn	r0, #1
   20ab4:	bne	20aec <__assert_fail@plt+0xf7bc>
   20ab8:	b	20adc <__assert_fail@plt+0xf7ac>
   20abc:	ldr	r0, [fp, #-16]
   20ac0:	rsbs	r0, r0, #0
   20ac4:	mov	r1, #0
   20ac8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   20acc:	str	r0, [sp, #72]	; 0x48
   20ad0:	str	r1, [sp, #68]	; 0x44
   20ad4:	blt	20b50 <__assert_fail@plt+0xf820>
   20ad8:	b	20b64 <__assert_fail@plt+0xf834>
   20adc:	mov	r0, #0
   20ae0:	cmp	r0, #0
   20ae4:	bne	20b50 <__assert_fail@plt+0xf820>
   20ae8:	b	20b64 <__assert_fail@plt+0xf834>
   20aec:	ldr	r2, [fp, #-12]
   20af0:	mov	r1, #-2147483648	; 0x80000000
   20af4:	mov	r0, #0
   20af8:	str	r0, [sp, #64]	; 0x40
   20afc:	ldr	r3, [sp, #64]	; 0x40
   20b00:	bl	2142c <__assert_fail@plt+0x100fc>
   20b04:	ldr	r2, [fp, #-16]
   20b08:	subs	r0, r0, r2
   20b0c:	sbcs	r1, r1, #0
   20b10:	str	r0, [sp, #60]	; 0x3c
   20b14:	str	r1, [sp, #56]	; 0x38
   20b18:	blt	20b50 <__assert_fail@plt+0xf820>
   20b1c:	b	20b64 <__assert_fail@plt+0xf834>
   20b20:	ldr	r2, [fp, #-16]
   20b24:	mvn	r0, #0
   20b28:	mvn	r1, #-2147483648	; 0x80000000
   20b2c:	mov	r3, #0
   20b30:	bl	21500 <__assert_fail@plt+0x101d0>
   20b34:	ldr	r2, [fp, #-12]
   20b38:	subs	r0, r0, r2
   20b3c:	sbcs	r1, r1, #0
   20b40:	str	r0, [sp, #52]	; 0x34
   20b44:	str	r1, [sp, #48]	; 0x30
   20b48:	bge	20b64 <__assert_fail@plt+0xf834>
   20b4c:	b	20b50 <__assert_fail@plt+0xf820>
   20b50:	ldr	r0, [fp, #-12]
   20b54:	ldr	r1, [fp, #-16]
   20b58:	mul	r0, r0, r1
   20b5c:	str	r0, [fp, #-20]	; 0xffffffec
   20b60:	b	20dac <__assert_fail@plt+0xfa7c>
   20b64:	ldr	r0, [fp, #-12]
   20b68:	ldr	r1, [fp, #-16]
   20b6c:	mul	r0, r0, r1
   20b70:	str	r0, [fp, #-20]	; 0xffffffec
   20b74:	b	20dc4 <__assert_fail@plt+0xfa94>
   20b78:	ldr	r0, [fp, #-16]
   20b7c:	cmp	r0, #0
   20b80:	bcs	20ccc <__assert_fail@plt+0xf99c>
   20b84:	ldr	r0, [fp, #-12]
   20b88:	cmp	r0, #0
   20b8c:	bcs	20c54 <__assert_fail@plt+0xf924>
   20b90:	b	20bcc <__assert_fail@plt+0xf89c>
   20b94:	ldr	r0, [fp, #-12]
   20b98:	ldr	r2, [fp, #-16]
   20b9c:	mvn	r1, #0
   20ba0:	mov	r3, #0
   20ba4:	str	r0, [sp, #44]	; 0x2c
   20ba8:	mov	r0, r1
   20bac:	bl	21500 <__assert_fail@plt+0x101d0>
   20bb0:	ldr	r2, [sp, #44]	; 0x2c
   20bb4:	subs	r0, r2, r0
   20bb8:	rscs	r1, r1, #0
   20bbc:	str	r0, [sp, #40]	; 0x28
   20bc0:	str	r1, [sp, #36]	; 0x24
   20bc4:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20bc8:	b	20d98 <__assert_fail@plt+0xfa68>
   20bcc:	b	20be0 <__assert_fail@plt+0xf8b0>
   20bd0:	ldr	r0, [fp, #-16]
   20bd4:	cmp	r0, #1
   20bd8:	bcc	20bf0 <__assert_fail@plt+0xf8c0>
   20bdc:	b	20c04 <__assert_fail@plt+0xf8d4>
   20be0:	ldr	r0, [fp, #-16]
   20be4:	movw	r1, #0
   20be8:	cmp	r1, r0
   20bec:	bcs	20c04 <__assert_fail@plt+0xf8d4>
   20bf0:	mov	r0, #1
   20bf4:	mvn	r1, #0
   20bf8:	str	r1, [sp, #32]
   20bfc:	str	r0, [sp, #28]
   20c00:	b	20c2c <__assert_fail@plt+0xf8fc>
   20c04:	ldr	r0, [fp, #-16]
   20c08:	rsb	r2, r0, #0
   20c0c:	mvn	r0, #0
   20c10:	mov	r3, #0
   20c14:	str	r0, [sp, #24]
   20c18:	ldr	r1, [sp, #24]
   20c1c:	bl	21500 <__assert_fail@plt+0x101d0>
   20c20:	str	r0, [sp, #32]
   20c24:	str	r1, [sp, #28]
   20c28:	b	20c2c <__assert_fail@plt+0xf8fc>
   20c2c:	ldr	r0, [sp, #28]
   20c30:	ldr	r1, [sp, #32]
   20c34:	ldr	r2, [fp, #-12]
   20c38:	mvn	r2, r2
   20c3c:	subs	r1, r2, r1
   20c40:	rscs	r0, r0, #0
   20c44:	str	r1, [sp, #20]
   20c48:	str	r0, [sp, #16]
   20c4c:	bcs	20d84 <__assert_fail@plt+0xfa54>
   20c50:	b	20d98 <__assert_fail@plt+0xfa68>
   20c54:	b	20c5c <__assert_fail@plt+0xf92c>
   20c58:	b	20c60 <__assert_fail@plt+0xf930>
   20c5c:	b	20cb0 <__assert_fail@plt+0xf980>
   20c60:	ldr	r0, [fp, #-16]
   20c64:	cmn	r0, #1
   20c68:	bne	20cb0 <__assert_fail@plt+0xf980>
   20c6c:	b	20c88 <__assert_fail@plt+0xf958>
   20c70:	ldr	r0, [fp, #-12]
   20c74:	add	r0, r0, #0
   20c78:	movw	r1, #0
   20c7c:	cmp	r1, r0
   20c80:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20c84:	b	20d98 <__assert_fail@plt+0xfa68>
   20c88:	ldr	r0, [fp, #-12]
   20c8c:	movw	r1, #0
   20c90:	cmp	r1, r0
   20c94:	bcs	20d98 <__assert_fail@plt+0xfa68>
   20c98:	ldr	r0, [fp, #-12]
   20c9c:	sub	r0, r0, #1
   20ca0:	mvn	r1, #0
   20ca4:	cmp	r1, r0
   20ca8:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20cac:	b	20d98 <__assert_fail@plt+0xfa68>
   20cb0:	ldr	r0, [fp, #-16]
   20cb4:	movw	r1, #0
   20cb8:	udiv	r0, r1, r0
   20cbc:	ldr	r1, [fp, #-12]
   20cc0:	cmp	r0, r1
   20cc4:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20cc8:	b	20d98 <__assert_fail@plt+0xfa68>
   20ccc:	ldr	r0, [fp, #-16]
   20cd0:	cmp	r0, #0
   20cd4:	bne	20cdc <__assert_fail@plt+0xf9ac>
   20cd8:	b	20d98 <__assert_fail@plt+0xfa68>
   20cdc:	ldr	r0, [fp, #-12]
   20ce0:	cmp	r0, #0
   20ce4:	bcs	20d50 <__assert_fail@plt+0xfa20>
   20ce8:	b	20cf0 <__assert_fail@plt+0xf9c0>
   20cec:	b	20cf4 <__assert_fail@plt+0xf9c4>
   20cf0:	b	20d34 <__assert_fail@plt+0xfa04>
   20cf4:	ldr	r0, [fp, #-12]
   20cf8:	cmn	r0, #1
   20cfc:	bne	20d34 <__assert_fail@plt+0xfa04>
   20d00:	b	20d1c <__assert_fail@plt+0xf9ec>
   20d04:	ldr	r0, [fp, #-16]
   20d08:	add	r0, r0, #0
   20d0c:	movw	r1, #0
   20d10:	cmp	r1, r0
   20d14:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20d18:	b	20d98 <__assert_fail@plt+0xfa68>
   20d1c:	ldr	r0, [fp, #-16]
   20d20:	sub	r0, r0, #1
   20d24:	mvn	r1, #0
   20d28:	cmp	r1, r0
   20d2c:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20d30:	b	20d98 <__assert_fail@plt+0xfa68>
   20d34:	ldr	r0, [fp, #-12]
   20d38:	movw	r1, #0
   20d3c:	udiv	r0, r1, r0
   20d40:	ldr	r1, [fp, #-16]
   20d44:	cmp	r0, r1
   20d48:	bcc	20d84 <__assert_fail@plt+0xfa54>
   20d4c:	b	20d98 <__assert_fail@plt+0xfa68>
   20d50:	ldr	r2, [fp, #-16]
   20d54:	mvn	r0, #0
   20d58:	mov	r3, #0
   20d5c:	str	r0, [sp, #12]
   20d60:	ldr	r1, [sp, #12]
   20d64:	bl	21500 <__assert_fail@plt+0x101d0>
   20d68:	ldr	r2, [fp, #-12]
   20d6c:	subs	r0, r0, r2
   20d70:	sbcs	r1, r1, #0
   20d74:	str	r0, [sp, #8]
   20d78:	str	r1, [sp, #4]
   20d7c:	bcs	20d98 <__assert_fail@plt+0xfa68>
   20d80:	b	20d84 <__assert_fail@plt+0xfa54>
   20d84:	ldr	r0, [fp, #-12]
   20d88:	ldr	r1, [fp, #-16]
   20d8c:	mul	r0, r0, r1
   20d90:	str	r0, [fp, #-20]	; 0xffffffec
   20d94:	b	20dac <__assert_fail@plt+0xfa7c>
   20d98:	ldr	r0, [fp, #-12]
   20d9c:	ldr	r1, [fp, #-16]
   20da0:	mul	r0, r0, r1
   20da4:	str	r0, [fp, #-20]	; 0xffffffec
   20da8:	b	20dc4 <__assert_fail@plt+0xfa94>
   20dac:	bl	11228 <__errno_location@plt>
   20db0:	movw	lr, #12
   20db4:	str	lr, [r0]
   20db8:	movw	r0, #0
   20dbc:	str	r0, [fp, #-4]
   20dc0:	b	20dd4 <__assert_fail@plt+0xfaa4>
   20dc4:	ldr	r0, [fp, #-8]
   20dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   20dcc:	bl	1eec8 <__assert_fail@plt+0xdb98>
   20dd0:	str	r0, [fp, #-4]
   20dd4:	ldr	r0, [fp, #-4]
   20dd8:	mov	sp, fp
   20ddc:	pop	{fp, pc}
   20de0:	svcvc	0x00ffffff
   20de4:	andhi	r0, r0, r0
   20de8:			; <UNDEFINED> instruction: 0xffff8000
   20dec:	sub	sp, sp, #12
   20df0:	str	r0, [sp, #4]
   20df4:	ldr	r0, [sp, #4]
   20df8:	sub	r1, r0, #48	; 0x30
   20dfc:	cmp	r1, #10
   20e00:	str	r0, [sp]
   20e04:	bcc	20e34 <__assert_fail@plt+0xfb04>
   20e08:	b	20e0c <__assert_fail@plt+0xfadc>
   20e0c:	ldr	r0, [sp]
   20e10:	sub	r1, r0, #65	; 0x41
   20e14:	cmp	r1, #26
   20e18:	bcc	20e34 <__assert_fail@plt+0xfb04>
   20e1c:	b	20e20 <__assert_fail@plt+0xfaf0>
   20e20:	ldr	r0, [sp]
   20e24:	sub	r1, r0, #97	; 0x61
   20e28:	cmp	r1, #25
   20e2c:	bhi	20e44 <__assert_fail@plt+0xfb14>
   20e30:	b	20e34 <__assert_fail@plt+0xfb04>
   20e34:	movw	r0, #1
   20e38:	and	r0, r0, #1
   20e3c:	strb	r0, [sp, #11]
   20e40:	b	20e50 <__assert_fail@plt+0xfb20>
   20e44:	movw	r0, #0
   20e48:	and	r0, r0, #1
   20e4c:	strb	r0, [sp, #11]
   20e50:	ldrb	r0, [sp, #11]
   20e54:	and	r0, r0, #1
   20e58:	add	sp, sp, #12
   20e5c:	bx	lr
   20e60:	sub	sp, sp, #12
   20e64:	str	r0, [sp, #4]
   20e68:	ldr	r0, [sp, #4]
   20e6c:	sub	r1, r0, #65	; 0x41
   20e70:	cmp	r1, #26
   20e74:	str	r0, [sp]
   20e78:	bcc	20e94 <__assert_fail@plt+0xfb64>
   20e7c:	b	20e80 <__assert_fail@plt+0xfb50>
   20e80:	ldr	r0, [sp]
   20e84:	sub	r1, r0, #97	; 0x61
   20e88:	cmp	r1, #25
   20e8c:	bhi	20ea4 <__assert_fail@plt+0xfb74>
   20e90:	b	20e94 <__assert_fail@plt+0xfb64>
   20e94:	movw	r0, #1
   20e98:	and	r0, r0, #1
   20e9c:	strb	r0, [sp, #11]
   20ea0:	b	20eb0 <__assert_fail@plt+0xfb80>
   20ea4:	movw	r0, #0
   20ea8:	and	r0, r0, #1
   20eac:	strb	r0, [sp, #11]
   20eb0:	ldrb	r0, [sp, #11]
   20eb4:	and	r0, r0, #1
   20eb8:	add	sp, sp, #12
   20ebc:	bx	lr
   20ec0:	sub	sp, sp, #8
   20ec4:	str	r0, [sp]
   20ec8:	ldr	r0, [sp]
   20ecc:	cmp	r0, #127	; 0x7f
   20ed0:	bhi	20ee8 <__assert_fail@plt+0xfbb8>
   20ed4:	b	20ed8 <__assert_fail@plt+0xfba8>
   20ed8:	movw	r0, #1
   20edc:	and	r0, r0, #1
   20ee0:	strb	r0, [sp, #7]
   20ee4:	b	20ef4 <__assert_fail@plt+0xfbc4>
   20ee8:	movw	r0, #0
   20eec:	and	r0, r0, #1
   20ef0:	strb	r0, [sp, #7]
   20ef4:	ldrb	r0, [sp, #7]
   20ef8:	and	r0, r0, #1
   20efc:	add	sp, sp, #8
   20f00:	bx	lr
   20f04:	sub	sp, sp, #8
   20f08:	str	r0, [sp, #4]
   20f0c:	ldr	r0, [sp, #4]
   20f10:	cmp	r0, #32
   20f14:	movw	r0, #1
   20f18:	str	r0, [sp]
   20f1c:	beq	20f34 <__assert_fail@plt+0xfc04>
   20f20:	ldr	r0, [sp, #4]
   20f24:	cmp	r0, #9
   20f28:	movw	r0, #0
   20f2c:	moveq	r0, #1
   20f30:	str	r0, [sp]
   20f34:	ldr	r0, [sp]
   20f38:	and	r0, r0, #1
   20f3c:	add	sp, sp, #8
   20f40:	bx	lr
   20f44:	sub	sp, sp, #12
   20f48:	str	r0, [sp, #4]
   20f4c:	ldr	r0, [sp, #4]
   20f50:	cmp	r0, #32
   20f54:	str	r0, [sp]
   20f58:	bcc	20f70 <__assert_fail@plt+0xfc40>
   20f5c:	b	20f60 <__assert_fail@plt+0xfc30>
   20f60:	ldr	r0, [sp]
   20f64:	cmp	r0, #127	; 0x7f
   20f68:	bne	20f80 <__assert_fail@plt+0xfc50>
   20f6c:	b	20f70 <__assert_fail@plt+0xfc40>
   20f70:	movw	r0, #1
   20f74:	and	r0, r0, #1
   20f78:	strb	r0, [sp, #11]
   20f7c:	b	20f8c <__assert_fail@plt+0xfc5c>
   20f80:	movw	r0, #0
   20f84:	and	r0, r0, #1
   20f88:	strb	r0, [sp, #11]
   20f8c:	ldrb	r0, [sp, #11]
   20f90:	and	r0, r0, #1
   20f94:	add	sp, sp, #12
   20f98:	bx	lr
   20f9c:	sub	sp, sp, #8
   20fa0:	str	r0, [sp]
   20fa4:	ldr	r0, [sp]
   20fa8:	sub	r0, r0, #48	; 0x30
   20fac:	cmp	r0, #9
   20fb0:	bhi	20fc8 <__assert_fail@plt+0xfc98>
   20fb4:	b	20fb8 <__assert_fail@plt+0xfc88>
   20fb8:	movw	r0, #1
   20fbc:	and	r0, r0, #1
   20fc0:	strb	r0, [sp, #7]
   20fc4:	b	20fd4 <__assert_fail@plt+0xfca4>
   20fc8:	movw	r0, #0
   20fcc:	and	r0, r0, #1
   20fd0:	strb	r0, [sp, #7]
   20fd4:	ldrb	r0, [sp, #7]
   20fd8:	and	r0, r0, #1
   20fdc:	add	sp, sp, #8
   20fe0:	bx	lr
   20fe4:	sub	sp, sp, #8
   20fe8:	str	r0, [sp]
   20fec:	ldr	r0, [sp]
   20ff0:	sub	r0, r0, #33	; 0x21
   20ff4:	cmp	r0, #93	; 0x5d
   20ff8:	bhi	21010 <__assert_fail@plt+0xfce0>
   20ffc:	b	21000 <__assert_fail@plt+0xfcd0>
   21000:	movw	r0, #1
   21004:	and	r0, r0, #1
   21008:	strb	r0, [sp, #7]
   2100c:	b	2101c <__assert_fail@plt+0xfcec>
   21010:	movw	r0, #0
   21014:	and	r0, r0, #1
   21018:	strb	r0, [sp, #7]
   2101c:	ldrb	r0, [sp, #7]
   21020:	and	r0, r0, #1
   21024:	add	sp, sp, #8
   21028:	bx	lr
   2102c:	sub	sp, sp, #8
   21030:	str	r0, [sp]
   21034:	ldr	r0, [sp]
   21038:	sub	r0, r0, #97	; 0x61
   2103c:	cmp	r0, #25
   21040:	bhi	21058 <__assert_fail@plt+0xfd28>
   21044:	b	21048 <__assert_fail@plt+0xfd18>
   21048:	movw	r0, #1
   2104c:	and	r0, r0, #1
   21050:	strb	r0, [sp, #7]
   21054:	b	21064 <__assert_fail@plt+0xfd34>
   21058:	movw	r0, #0
   2105c:	and	r0, r0, #1
   21060:	strb	r0, [sp, #7]
   21064:	ldrb	r0, [sp, #7]
   21068:	and	r0, r0, #1
   2106c:	add	sp, sp, #8
   21070:	bx	lr
   21074:	sub	sp, sp, #8
   21078:	str	r0, [sp]
   2107c:	ldr	r0, [sp]
   21080:	sub	r0, r0, #32
   21084:	cmp	r0, #94	; 0x5e
   21088:	bhi	210a0 <__assert_fail@plt+0xfd70>
   2108c:	b	21090 <__assert_fail@plt+0xfd60>
   21090:	movw	r0, #1
   21094:	and	r0, r0, #1
   21098:	strb	r0, [sp, #7]
   2109c:	b	210ac <__assert_fail@plt+0xfd7c>
   210a0:	movw	r0, #0
   210a4:	and	r0, r0, #1
   210a8:	strb	r0, [sp, #7]
   210ac:	ldrb	r0, [sp, #7]
   210b0:	and	r0, r0, #1
   210b4:	add	sp, sp, #8
   210b8:	bx	lr
   210bc:	sub	sp, sp, #12
   210c0:	str	r0, [sp, #4]
   210c4:	ldr	r0, [sp, #4]
   210c8:	sub	r0, r0, #33	; 0x21
   210cc:	cmp	r0, #93	; 0x5d
   210d0:	str	r0, [sp]
   210d4:	bhi	21270 <__assert_fail@plt+0xff40>
   210d8:	add	r0, pc, #8
   210dc:	ldr	r1, [sp]
   210e0:	ldr	r0, [r0, r1, lsl #2]
   210e4:	mov	pc, r0
   210e8:	andeq	r1, r2, r0, ror #4
   210ec:	andeq	r1, r2, r0, ror #4
   210f0:	andeq	r1, r2, r0, ror #4
   210f4:	andeq	r1, r2, r0, ror #4
   210f8:	andeq	r1, r2, r0, ror #4
   210fc:	andeq	r1, r2, r0, ror #4
   21100:	andeq	r1, r2, r0, ror #4
   21104:	andeq	r1, r2, r0, ror #4
   21108:	andeq	r1, r2, r0, ror #4
   2110c:	andeq	r1, r2, r0, ror #4
   21110:	andeq	r1, r2, r0, ror #4
   21114:	andeq	r1, r2, r0, ror #4
   21118:	andeq	r1, r2, r0, ror #4
   2111c:	andeq	r1, r2, r0, ror #4
   21120:	andeq	r1, r2, r0, ror #4
   21124:	andeq	r1, r2, r0, ror r2
   21128:	andeq	r1, r2, r0, ror r2
   2112c:	andeq	r1, r2, r0, ror r2
   21130:	andeq	r1, r2, r0, ror r2
   21134:	andeq	r1, r2, r0, ror r2
   21138:	andeq	r1, r2, r0, ror r2
   2113c:	andeq	r1, r2, r0, ror r2
   21140:	andeq	r1, r2, r0, ror r2
   21144:	andeq	r1, r2, r0, ror r2
   21148:	andeq	r1, r2, r0, ror r2
   2114c:	andeq	r1, r2, r0, ror #4
   21150:	andeq	r1, r2, r0, ror #4
   21154:	andeq	r1, r2, r0, ror #4
   21158:	andeq	r1, r2, r0, ror #4
   2115c:	andeq	r1, r2, r0, ror #4
   21160:	andeq	r1, r2, r0, ror #4
   21164:	andeq	r1, r2, r0, ror #4
   21168:	andeq	r1, r2, r0, ror r2
   2116c:	andeq	r1, r2, r0, ror r2
   21170:	andeq	r1, r2, r0, ror r2
   21174:	andeq	r1, r2, r0, ror r2
   21178:	andeq	r1, r2, r0, ror r2
   2117c:	andeq	r1, r2, r0, ror r2
   21180:	andeq	r1, r2, r0, ror r2
   21184:	andeq	r1, r2, r0, ror r2
   21188:	andeq	r1, r2, r0, ror r2
   2118c:	andeq	r1, r2, r0, ror r2
   21190:	andeq	r1, r2, r0, ror r2
   21194:	andeq	r1, r2, r0, ror r2
   21198:	andeq	r1, r2, r0, ror r2
   2119c:	andeq	r1, r2, r0, ror r2
   211a0:	andeq	r1, r2, r0, ror r2
   211a4:	andeq	r1, r2, r0, ror r2
   211a8:	andeq	r1, r2, r0, ror r2
   211ac:	andeq	r1, r2, r0, ror r2
   211b0:	andeq	r1, r2, r0, ror r2
   211b4:	andeq	r1, r2, r0, ror r2
   211b8:	andeq	r1, r2, r0, ror r2
   211bc:	andeq	r1, r2, r0, ror r2
   211c0:	andeq	r1, r2, r0, ror r2
   211c4:	andeq	r1, r2, r0, ror r2
   211c8:	andeq	r1, r2, r0, ror r2
   211cc:	andeq	r1, r2, r0, ror r2
   211d0:	andeq	r1, r2, r0, ror #4
   211d4:	andeq	r1, r2, r0, ror #4
   211d8:	andeq	r1, r2, r0, ror #4
   211dc:	andeq	r1, r2, r0, ror #4
   211e0:	andeq	r1, r2, r0, ror #4
   211e4:	andeq	r1, r2, r0, ror #4
   211e8:	andeq	r1, r2, r0, ror r2
   211ec:	andeq	r1, r2, r0, ror r2
   211f0:	andeq	r1, r2, r0, ror r2
   211f4:	andeq	r1, r2, r0, ror r2
   211f8:	andeq	r1, r2, r0, ror r2
   211fc:	andeq	r1, r2, r0, ror r2
   21200:	andeq	r1, r2, r0, ror r2
   21204:	andeq	r1, r2, r0, ror r2
   21208:	andeq	r1, r2, r0, ror r2
   2120c:	andeq	r1, r2, r0, ror r2
   21210:	andeq	r1, r2, r0, ror r2
   21214:	andeq	r1, r2, r0, ror r2
   21218:	andeq	r1, r2, r0, ror r2
   2121c:	andeq	r1, r2, r0, ror r2
   21220:	andeq	r1, r2, r0, ror r2
   21224:	andeq	r1, r2, r0, ror r2
   21228:	andeq	r1, r2, r0, ror r2
   2122c:	andeq	r1, r2, r0, ror r2
   21230:	andeq	r1, r2, r0, ror r2
   21234:	andeq	r1, r2, r0, ror r2
   21238:	andeq	r1, r2, r0, ror r2
   2123c:	andeq	r1, r2, r0, ror r2
   21240:	andeq	r1, r2, r0, ror r2
   21244:	andeq	r1, r2, r0, ror r2
   21248:	andeq	r1, r2, r0, ror r2
   2124c:	andeq	r1, r2, r0, ror r2
   21250:	andeq	r1, r2, r0, ror #4
   21254:	andeq	r1, r2, r0, ror #4
   21258:	andeq	r1, r2, r0, ror #4
   2125c:	andeq	r1, r2, r0, ror #4
   21260:	movw	r0, #1
   21264:	and	r0, r0, #1
   21268:	strb	r0, [sp, #11]
   2126c:	b	2127c <__assert_fail@plt+0xff4c>
   21270:	movw	r0, #0
   21274:	and	r0, r0, #1
   21278:	strb	r0, [sp, #11]
   2127c:	ldrb	r0, [sp, #11]
   21280:	and	r0, r0, #1
   21284:	add	sp, sp, #12
   21288:	bx	lr
   2128c:	sub	sp, sp, #12
   21290:	str	r0, [sp, #4]
   21294:	ldr	r0, [sp, #4]
   21298:	sub	r1, r0, #9
   2129c:	cmp	r1, #5
   212a0:	str	r0, [sp]
   212a4:	bcc	212bc <__assert_fail@plt+0xff8c>
   212a8:	b	212ac <__assert_fail@plt+0xff7c>
   212ac:	ldr	r0, [sp]
   212b0:	cmp	r0, #32
   212b4:	bne	212cc <__assert_fail@plt+0xff9c>
   212b8:	b	212bc <__assert_fail@plt+0xff8c>
   212bc:	movw	r0, #1
   212c0:	and	r0, r0, #1
   212c4:	strb	r0, [sp, #11]
   212c8:	b	212d8 <__assert_fail@plt+0xffa8>
   212cc:	movw	r0, #0
   212d0:	and	r0, r0, #1
   212d4:	strb	r0, [sp, #11]
   212d8:	ldrb	r0, [sp, #11]
   212dc:	and	r0, r0, #1
   212e0:	add	sp, sp, #12
   212e4:	bx	lr
   212e8:	sub	sp, sp, #8
   212ec:	str	r0, [sp]
   212f0:	ldr	r0, [sp]
   212f4:	sub	r0, r0, #65	; 0x41
   212f8:	cmp	r0, #25
   212fc:	bhi	21314 <__assert_fail@plt+0xffe4>
   21300:	b	21304 <__assert_fail@plt+0xffd4>
   21304:	movw	r0, #1
   21308:	and	r0, r0, #1
   2130c:	strb	r0, [sp, #7]
   21310:	b	21320 <__assert_fail@plt+0xfff0>
   21314:	movw	r0, #0
   21318:	and	r0, r0, #1
   2131c:	strb	r0, [sp, #7]
   21320:	ldrb	r0, [sp, #7]
   21324:	and	r0, r0, #1
   21328:	add	sp, sp, #8
   2132c:	bx	lr
   21330:	sub	sp, sp, #12
   21334:	str	r0, [sp, #4]
   21338:	ldr	r0, [sp, #4]
   2133c:	sub	r1, r0, #48	; 0x30
   21340:	cmp	r1, #10
   21344:	str	r0, [sp]
   21348:	bcc	21378 <__assert_fail@plt+0x10048>
   2134c:	b	21350 <__assert_fail@plt+0x10020>
   21350:	ldr	r0, [sp]
   21354:	sub	r1, r0, #65	; 0x41
   21358:	cmp	r1, #6
   2135c:	bcc	21378 <__assert_fail@plt+0x10048>
   21360:	b	21364 <__assert_fail@plt+0x10034>
   21364:	ldr	r0, [sp]
   21368:	sub	r1, r0, #97	; 0x61
   2136c:	cmp	r1, #5
   21370:	bhi	21388 <__assert_fail@plt+0x10058>
   21374:	b	21378 <__assert_fail@plt+0x10048>
   21378:	movw	r0, #1
   2137c:	and	r0, r0, #1
   21380:	strb	r0, [sp, #11]
   21384:	b	21394 <__assert_fail@plt+0x10064>
   21388:	movw	r0, #0
   2138c:	and	r0, r0, #1
   21390:	strb	r0, [sp, #11]
   21394:	ldrb	r0, [sp, #11]
   21398:	and	r0, r0, #1
   2139c:	add	sp, sp, #12
   213a0:	bx	lr
   213a4:	sub	sp, sp, #8
   213a8:	str	r0, [sp]
   213ac:	ldr	r0, [sp]
   213b0:	sub	r0, r0, #65	; 0x41
   213b4:	cmp	r0, #25
   213b8:	bhi	213d4 <__assert_fail@plt+0x100a4>
   213bc:	b	213c0 <__assert_fail@plt+0x10090>
   213c0:	ldr	r0, [sp]
   213c4:	sub	r0, r0, #65	; 0x41
   213c8:	add	r0, r0, #97	; 0x61
   213cc:	str	r0, [sp, #4]
   213d0:	b	213dc <__assert_fail@plt+0x100ac>
   213d4:	ldr	r0, [sp]
   213d8:	str	r0, [sp, #4]
   213dc:	ldr	r0, [sp, #4]
   213e0:	add	sp, sp, #8
   213e4:	bx	lr
   213e8:	sub	sp, sp, #8
   213ec:	str	r0, [sp]
   213f0:	ldr	r0, [sp]
   213f4:	sub	r0, r0, #97	; 0x61
   213f8:	cmp	r0, #25
   213fc:	bhi	21418 <__assert_fail@plt+0x100e8>
   21400:	b	21404 <__assert_fail@plt+0x100d4>
   21404:	ldr	r0, [sp]
   21408:	sub	r0, r0, #97	; 0x61
   2140c:	add	r0, r0, #65	; 0x41
   21410:	str	r0, [sp, #4]
   21414:	b	21420 <__assert_fail@plt+0x100f0>
   21418:	ldr	r0, [sp]
   2141c:	str	r0, [sp, #4]
   21420:	ldr	r0, [sp, #4]
   21424:	add	sp, sp, #8
   21428:	bx	lr
   2142c:	cmp	r3, #0
   21430:	cmpeq	r2, #0
   21434:	bne	21458 <__assert_fail@plt+0x10128>
   21438:	cmp	r1, #0
   2143c:	movlt	r1, #-2147483648	; 0x80000000
   21440:	movlt	r0, #0
   21444:	blt	21454 <__assert_fail@plt+0x10124>
   21448:	cmpeq	r0, #0
   2144c:	mvnne	r1, #-2147483648	; 0x80000000
   21450:	mvnne	r0, #0
   21454:	b	2153c <__assert_fail@plt+0x1020c>
   21458:	sub	sp, sp, #8
   2145c:	push	{sp, lr}
   21460:	cmp	r1, #0
   21464:	blt	21484 <__assert_fail@plt+0x10154>
   21468:	cmp	r3, #0
   2146c:	blt	214b8 <__assert_fail@plt+0x10188>
   21470:	bl	2154c <__assert_fail@plt+0x1021c>
   21474:	ldr	lr, [sp, #4]
   21478:	add	sp, sp, #8
   2147c:	pop	{r2, r3}
   21480:	bx	lr
   21484:	rsbs	r0, r0, #0
   21488:	sbc	r1, r1, r1, lsl #1
   2148c:	cmp	r3, #0
   21490:	blt	214dc <__assert_fail@plt+0x101ac>
   21494:	bl	2154c <__assert_fail@plt+0x1021c>
   21498:	ldr	lr, [sp, #4]
   2149c:	add	sp, sp, #8
   214a0:	pop	{r2, r3}
   214a4:	rsbs	r0, r0, #0
   214a8:	sbc	r1, r1, r1, lsl #1
   214ac:	rsbs	r2, r2, #0
   214b0:	sbc	r3, r3, r3, lsl #1
   214b4:	bx	lr
   214b8:	rsbs	r2, r2, #0
   214bc:	sbc	r3, r3, r3, lsl #1
   214c0:	bl	2154c <__assert_fail@plt+0x1021c>
   214c4:	ldr	lr, [sp, #4]
   214c8:	add	sp, sp, #8
   214cc:	pop	{r2, r3}
   214d0:	rsbs	r0, r0, #0
   214d4:	sbc	r1, r1, r1, lsl #1
   214d8:	bx	lr
   214dc:	rsbs	r2, r2, #0
   214e0:	sbc	r3, r3, r3, lsl #1
   214e4:	bl	2154c <__assert_fail@plt+0x1021c>
   214e8:	ldr	lr, [sp, #4]
   214ec:	add	sp, sp, #8
   214f0:	pop	{r2, r3}
   214f4:	rsbs	r2, r2, #0
   214f8:	sbc	r3, r3, r3, lsl #1
   214fc:	bx	lr
   21500:	cmp	r3, #0
   21504:	cmpeq	r2, #0
   21508:	bne	21520 <__assert_fail@plt+0x101f0>
   2150c:	cmp	r1, #0
   21510:	cmpeq	r0, #0
   21514:	mvnne	r1, #0
   21518:	mvnne	r0, #0
   2151c:	b	2153c <__assert_fail@plt+0x1020c>
   21520:	sub	sp, sp, #8
   21524:	push	{sp, lr}
   21528:	bl	2154c <__assert_fail@plt+0x1021c>
   2152c:	ldr	lr, [sp, #4]
   21530:	add	sp, sp, #8
   21534:	pop	{r2, r3}
   21538:	bx	lr
   2153c:	push	{r1, lr}
   21540:	mov	r0, #8
   21544:	bl	11090 <raise@plt>
   21548:	pop	{r1, pc}
   2154c:	cmp	r1, r3
   21550:	cmpeq	r0, r2
   21554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21558:	mov	r4, r0
   2155c:	movcc	r0, #0
   21560:	mov	r5, r1
   21564:	ldr	lr, [sp, #36]	; 0x24
   21568:	movcc	r1, r0
   2156c:	bcc	21668 <__assert_fail@plt+0x10338>
   21570:	cmp	r3, #0
   21574:	clzeq	ip, r2
   21578:	clzne	ip, r3
   2157c:	addeq	ip, ip, #32
   21580:	cmp	r5, #0
   21584:	clzeq	r1, r4
   21588:	addeq	r1, r1, #32
   2158c:	clzne	r1, r5
   21590:	sub	ip, ip, r1
   21594:	sub	sl, ip, #32
   21598:	lsl	r9, r3, ip
   2159c:	rsb	fp, ip, #32
   215a0:	orr	r9, r9, r2, lsl sl
   215a4:	orr	r9, r9, r2, lsr fp
   215a8:	lsl	r8, r2, ip
   215ac:	cmp	r5, r9
   215b0:	cmpeq	r4, r8
   215b4:	movcc	r0, #0
   215b8:	movcc	r1, r0
   215bc:	bcc	215d8 <__assert_fail@plt+0x102a8>
   215c0:	mov	r0, #1
   215c4:	subs	r4, r4, r8
   215c8:	lsl	r1, r0, sl
   215cc:	orr	r1, r1, r0, lsr fp
   215d0:	lsl	r0, r0, ip
   215d4:	sbc	r5, r5, r9
   215d8:	cmp	ip, #0
   215dc:	beq	21668 <__assert_fail@plt+0x10338>
   215e0:	lsr	r6, r8, #1
   215e4:	orr	r6, r6, r9, lsl #31
   215e8:	lsr	r7, r9, #1
   215ec:	mov	r2, ip
   215f0:	b	21614 <__assert_fail@plt+0x102e4>
   215f4:	subs	r3, r4, r6
   215f8:	sbc	r8, r5, r7
   215fc:	adds	r3, r3, r3
   21600:	adc	r8, r8, r8
   21604:	adds	r4, r3, #1
   21608:	adc	r5, r8, #0
   2160c:	subs	r2, r2, #1
   21610:	beq	21630 <__assert_fail@plt+0x10300>
   21614:	cmp	r5, r7
   21618:	cmpeq	r4, r6
   2161c:	bcs	215f4 <__assert_fail@plt+0x102c4>
   21620:	adds	r4, r4, r4
   21624:	adc	r5, r5, r5
   21628:	subs	r2, r2, #1
   2162c:	bne	21614 <__assert_fail@plt+0x102e4>
   21630:	lsr	r3, r4, ip
   21634:	orr	r3, r3, r5, lsl fp
   21638:	lsr	r2, r5, ip
   2163c:	orr	r3, r3, r5, lsr sl
   21640:	adds	r0, r0, r4
   21644:	mov	r4, r3
   21648:	lsl	r3, r2, ip
   2164c:	orr	r3, r3, r4, lsl sl
   21650:	lsl	ip, r4, ip
   21654:	orr	r3, r3, r4, lsr fp
   21658:	adc	r1, r1, r5
   2165c:	subs	r0, r0, ip
   21660:	mov	r5, r2
   21664:	sbc	r1, r1, r3
   21668:	cmp	lr, #0
   2166c:	strdne	r4, [lr]
   21670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21674:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21678:	mov	r7, r0
   2167c:	ldr	r6, [pc, #72]	; 216cc <__assert_fail@plt+0x1039c>
   21680:	ldr	r5, [pc, #72]	; 216d0 <__assert_fail@plt+0x103a0>
   21684:	add	r6, pc, r6
   21688:	add	r5, pc, r5
   2168c:	sub	r6, r6, r5
   21690:	mov	r8, r1
   21694:	mov	r9, r2
   21698:	bl	1104c <fdopen@plt-0x20>
   2169c:	asrs	r6, r6, #2
   216a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   216a4:	mov	r4, #0
   216a8:	add	r4, r4, #1
   216ac:	ldr	r3, [r5], #4
   216b0:	mov	r2, r9
   216b4:	mov	r1, r8
   216b8:	mov	r0, r7
   216bc:	blx	r3
   216c0:	cmp	r6, r4
   216c4:	bne	216a8 <__assert_fail@plt+0x10378>
   216c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   216cc:	andeq	r1, r1, r0, lsl #17
   216d0:	andeq	r1, r1, r8, ror r8
   216d4:	bx	lr
   216d8:	ldr	r3, [pc, #12]	; 216ec <__assert_fail@plt+0x103bc>
   216dc:	mov	r1, #0
   216e0:	add	r3, pc, r3
   216e4:	ldr	r2, [r3]
   216e8:	b	11234 <__cxa_atexit@plt>
   216ec:	andeq	r1, r1, ip, lsl sl

Disassembly of section .fini:

000216f0 <.fini>:
   216f0:	push	{r3, lr}
   216f4:	pop	{r3, pc}
