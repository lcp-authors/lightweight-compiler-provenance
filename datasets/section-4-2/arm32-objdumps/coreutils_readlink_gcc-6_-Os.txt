
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010c68 <.init>:
   10c68:	push	{r3, lr}
   10c6c:	bl	11238 <strspn@plt+0x334>
   10c70:	pop	{r3, pc}

Disassembly of section .plt:

00010c74 <calloc@plt-0x14>:
   10c74:	push	{lr}		; (str lr, [sp, #-4]!)
   10c78:	ldr	lr, [pc, #4]	; 10c84 <calloc@plt-0x4>
   10c7c:	add	lr, pc, lr
   10c80:	ldr	pc, [lr, #8]!
   10c84:	andeq	r6, r1, ip, ror r3

00010c88 <calloc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #90112	; 0x16000
   10c90:	ldr	pc, [ip, #892]!	; 0x37c

00010c94 <fputs_unlocked@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #90112	; 0x16000
   10c9c:	ldr	pc, [ip, #884]!	; 0x374

00010ca0 <raise@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #90112	; 0x16000
   10ca8:	ldr	pc, [ip, #876]!	; 0x36c

00010cac <strcmp@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #90112	; 0x16000
   10cb4:	ldr	pc, [ip, #868]!	; 0x364

00010cb8 <fflush@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #90112	; 0x16000
   10cc0:	ldr	pc, [ip, #860]!	; 0x35c

00010cc4 <memmove@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #90112	; 0x16000
   10ccc:	ldr	pc, [ip, #852]!	; 0x354

00010cd0 <free@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #844]!	; 0x34c

00010cdc <faccessat@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #836]!	; 0x344

00010ce8 <_exit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #828]!	; 0x33c

00010cf4 <memcpy@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #820]!	; 0x334

00010d00 <mbsinit@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #812]!	; 0x32c

00010d0c <memcmp@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #804]!	; 0x324

00010d18 <fputc_unlocked@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #796]!	; 0x31c

00010d24 <dcgettext@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #788]!	; 0x314

00010d30 <realloc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #780]!	; 0x30c

00010d3c <textdomain@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #772]!	; 0x304

00010d48 <rawmemchr@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #764]!	; 0x2fc

00010d54 <iswprint@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d60 <readlink@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #748]!	; 0x2ec

00010d6c <lseek64@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #740]!	; 0x2e4

00010d78 <__ctype_get_mb_cur_max@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #732]!	; 0x2dc

00010d84 <strcpy@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d90 <__fpending@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #716]!	; 0x2cc

00010d9c <ferror_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #708]!	; 0x2c4

00010da8 <mbrtowc@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #700]!	; 0x2bc

00010db4 <error@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #692]!	; 0x2b4

00010dc0 <malloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #684]!	; 0x2ac

00010dcc <__libc_start_main@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd8 <__freading@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #668]!	; 0x29c

00010de4 <__gmon_start__@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #660]!	; 0x294

00010df0 <mempcpy@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #652]!	; 0x28c

00010dfc <getopt_long@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #644]!	; 0x284

00010e08 <__ctype_b_loc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #636]!	; 0x27c

00010e14 <getcwd@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #628]!	; 0x274

00010e20 <exit@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #620]!	; 0x26c

00010e2c <strlen@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #612]!	; 0x264

00010e38 <__errno_location@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #604]!	; 0x25c

00010e44 <__cxa_atexit@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #596]!	; 0x254

00010e50 <memset@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #588]!	; 0x24c

00010e5c <__printf_chk@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #580]!	; 0x244

00010e68 <fileno@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #572]!	; 0x23c

00010e74 <__fprintf_chk@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #564]!	; 0x234

00010e80 <fclose@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #556]!	; 0x22c

00010e8c <fseeko64@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #548]!	; 0x224

00010e98 <setlocale@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #540]!	; 0x21c

00010ea4 <strrchr@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #532]!	; 0x214

00010eb0 <nl_langinfo@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #524]!	; 0x20c

00010ebc <bindtextdomain@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #516]!	; 0x204

00010ec8 <__xstat64@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ed4 <fputs@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #500]!	; 0x1f4

00010ee0 <strncmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #492]!	; 0x1ec

00010eec <abort@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ef8 <putchar_unlocked@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #476]!	; 0x1dc

00010f04 <strspn@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #468]!	; 0x1d4

Disassembly of section .text:

00010f10 <.text>:
   10f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f14:	mov	r7, r0
   10f18:	sub	sp, sp, #20
   10f1c:	ldr	r0, [r1]
   10f20:	mov	r9, r1
   10f24:	bl	12cd4 <strspn@plt+0x1dd0>
   10f28:	ldr	r1, [pc, #652]	; 111bc <strspn@plt+0x2b8>
   10f2c:	mov	r0, #6
   10f30:	bl	10e98 <setlocale@plt>
   10f34:	ldr	r1, [pc, #644]	; 111c0 <strspn@plt+0x2bc>
   10f38:	ldr	r0, [pc, #644]	; 111c4 <strspn@plt+0x2c0>
   10f3c:	bl	10ebc <bindtextdomain@plt>
   10f40:	ldr	r0, [pc, #636]	; 111c4 <strspn@plt+0x2c0>
   10f44:	bl	10d3c <textdomain@plt>
   10f48:	ldr	r0, [pc, #632]	; 111c8 <strspn@plt+0x2c4>
   10f4c:	bl	15920 <strspn@plt+0x4a1c>
   10f50:	mov	r8, #0
   10f54:	ldr	sl, [pc, #624]	; 111cc <strspn@plt+0x2c8>
   10f58:	ldr	r5, [pc, #624]	; 111d0 <strspn@plt+0x2cc>
   10f5c:	mvn	r6, #0
   10f60:	mov	r4, r8
   10f64:	str	r4, [sp]
   10f68:	mov	r3, sl
   10f6c:	ldr	r2, [pc, #608]	; 111d4 <strspn@plt+0x2d0>
   10f70:	mov	r1, r9
   10f74:	mov	r0, r7
   10f78:	bl	10dfc <getopt_long@plt>
   10f7c:	cmn	r0, #1
   10f80:	bne	10fb8 <strspn@plt+0xb4>
   10f84:	ldr	r4, [pc, #588]	; 111d8 <strspn@plt+0x2d4>
   10f88:	ldr	r3, [r4]
   10f8c:	cmp	r7, r3
   10f90:	bgt	11090 <strspn@plt+0x18c>
   10f94:	mov	r2, #5
   10f98:	ldr	r1, [pc, #572]	; 111dc <strspn@plt+0x2d8>
   10f9c:	mov	r0, #0
   10fa0:	bl	10d24 <dcgettext@plt>
   10fa4:	mov	r1, #0
   10fa8:	mov	r2, r0
   10fac:	mov	r0, r1
   10fb0:	bl	10db4 <error@plt>
   10fb4:	b	10fd8 <strspn@plt+0xd4>
   10fb8:	cmp	r0, #109	; 0x6d
   10fbc:	beq	11088 <strspn@plt+0x184>
   10fc0:	bgt	10ff8 <strspn@plt+0xf4>
   10fc4:	cmn	r0, #2
   10fc8:	beq	11048 <strspn@plt+0x144>
   10fcc:	bgt	10fe0 <strspn@plt+0xdc>
   10fd0:	cmn	r0, #3
   10fd4:	beq	11050 <strspn@plt+0x14c>
   10fd8:	mov	r0, #1
   10fdc:	b	1104c <strspn@plt+0x148>
   10fe0:	cmp	r0, #101	; 0x65
   10fe4:	beq	11080 <strspn@plt+0x17c>
   10fe8:	cmp	r0, #102	; 0x66
   10fec:	bne	10fd8 <strspn@plt+0xd4>
   10ff0:	mov	r6, #1
   10ff4:	b	10f64 <strspn@plt+0x60>
   10ff8:	cmp	r0, #115	; 0x73
   10ffc:	beq	1101c <strspn@plt+0x118>
   11000:	bgt	11024 <strspn@plt+0x120>
   11004:	cmp	r0, #110	; 0x6e
   11008:	moveq	r3, #1
   1100c:	strbeq	r3, [r5]
   11010:	beq	10f64 <strspn@plt+0x60>
   11014:	cmp	r0, #113	; 0x71
   11018:	bne	10fd8 <strspn@plt+0xd4>
   1101c:	strb	r4, [r5, #1]
   11020:	b	10f64 <strspn@plt+0x60>
   11024:	cmp	r0, #118	; 0x76
   11028:	mov	r3, #1
   1102c:	beq	11040 <strspn@plt+0x13c>
   11030:	cmp	r0, #122	; 0x7a
   11034:	bne	10fd8 <strspn@plt+0xd4>
   11038:	mov	r8, r3
   1103c:	b	10f64 <strspn@plt+0x60>
   11040:	strb	r3, [r5, #1]
   11044:	b	10f64 <strspn@plt+0x60>
   11048:	mov	r0, #0
   1104c:	bl	11324 <strspn@plt+0x420>
   11050:	ldr	r3, [pc, #392]	; 111e0 <strspn@plt+0x2dc>
   11054:	ldr	r0, [pc, #392]	; 111e4 <strspn@plt+0x2e0>
   11058:	str	r3, [sp]
   1105c:	ldr	r3, [pc, #388]	; 111e8 <strspn@plt+0x2e4>
   11060:	str	r4, [sp, #4]
   11064:	ldr	r2, [pc, #384]	; 111ec <strspn@plt+0x2e8>
   11068:	ldr	r0, [r0]
   1106c:	ldr	r3, [r3]
   11070:	ldr	r1, [pc, #376]	; 111f0 <strspn@plt+0x2ec>
   11074:	bl	148a4 <strspn@plt+0x39a0>
   11078:	mov	r0, #0
   1107c:	bl	10e20 <exit@plt>
   11080:	mov	r6, r4
   11084:	b	10f64 <strspn@plt+0x60>
   11088:	mov	r6, #2
   1108c:	b	10f64 <strspn@plt+0x60>
   11090:	sub	r3, r7, r3
   11094:	cmp	r3, #1
   11098:	beq	110d8 <strspn@plt+0x1d4>
   1109c:	ldr	r3, [pc, #300]	; 111d0 <strspn@plt+0x2cc>
   110a0:	mov	r5, r3
   110a4:	ldrb	r2, [r3]
   110a8:	cmp	r2, #0
   110ac:	beq	110d0 <strspn@plt+0x1cc>
   110b0:	mov	r2, #5
   110b4:	ldr	r1, [pc, #312]	; 111f4 <strspn@plt+0x2f0>
   110b8:	mov	r0, #0
   110bc:	bl	10d24 <dcgettext@plt>
   110c0:	mov	r1, #0
   110c4:	mov	r2, r0
   110c8:	mov	r0, r1
   110cc:	bl	10db4 <error@plt>
   110d0:	mov	r3, #0
   110d4:	strb	r3, [r5]
   110d8:	cmp	r8, #0
   110dc:	mov	fp, #1
   110e0:	mov	r8, #0
   110e4:	moveq	r3, #10
   110e8:	movne	r3, #0
   110ec:	str	r3, [sp, #12]
   110f0:	ldr	r3, [r4]
   110f4:	cmp	r7, r3
   110f8:	bgt	11108 <strspn@plt+0x204>
   110fc:	mov	r0, r8
   11100:	add	sp, sp, #20
   11104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11108:	cmn	r6, #1
   1110c:	ldr	sl, [r9, r3, lsl #2]
   11110:	beq	11168 <strspn@plt+0x264>
   11114:	mov	r1, r6
   11118:	mov	r0, sl
   1111c:	bl	116ac <strspn@plt+0x7a8>
   11120:	cmp	r0, #0
   11124:	mov	r5, r0
   11128:	beq	11178 <strspn@plt+0x274>
   1112c:	ldr	r3, [pc, #176]	; 111e4 <strspn@plt+0x2e0>
   11130:	ldr	r1, [r3]
   11134:	bl	10c94 <fputs_unlocked@plt>
   11138:	ldr	r3, [pc, #144]	; 111d0 <strspn@plt+0x2cc>
   1113c:	ldrb	r3, [r3]
   11140:	cmp	r3, #0
   11144:	bne	11150 <strspn@plt+0x24c>
   11148:	ldr	r0, [sp, #12]
   1114c:	bl	10ef8 <putchar_unlocked@plt>
   11150:	mov	r0, r5
   11154:	bl	11e5c <strspn@plt+0xf58>
   11158:	ldr	r3, [r4]
   1115c:	add	r3, r3, #1
   11160:	str	r3, [r4]
   11164:	b	110f0 <strspn@plt+0x1ec>
   11168:	mov	r1, #63	; 0x3f
   1116c:	mov	r0, sl
   11170:	bl	11580 <strspn@plt+0x67c>
   11174:	b	11120 <strspn@plt+0x21c>
   11178:	ldr	r3, [pc, #80]	; 111d0 <strspn@plt+0x2cc>
   1117c:	ldrb	r3, [r3, #1]
   11180:	cmp	r3, #0
   11184:	beq	111b4 <strspn@plt+0x2b0>
   11188:	bl	10e38 <__errno_location@plt>
   1118c:	mov	r2, sl
   11190:	mov	r1, #3
   11194:	ldr	r8, [r0]
   11198:	mov	r0, r5
   1119c:	bl	141c4 <strspn@plt+0x32c0>
   111a0:	ldr	r2, [pc, #80]	; 111f8 <strspn@plt+0x2f4>
   111a4:	mov	r1, r8
   111a8:	mov	r3, r0
   111ac:	mov	r0, r5
   111b0:	bl	10db4 <error@plt>
   111b4:	mov	r8, fp
   111b8:	b	11158 <strspn@plt+0x254>
   111bc:	andeq	r5, r1, r2, asr #21
   111c0:	andeq	r5, r1, sl, asr #31
   111c4:	andeq	r5, r1, r7, lsr #30
   111c8:	andeq	r1, r1, ip, asr #25
   111cc:	andeq	r5, r1, ip, lsl #19
   111d0:	andeq	r7, r2, r1, asr r1
   111d4:	strdeq	r5, [r1], -r2
   111d8:	andeq	r7, r2, r0, asr #2
   111dc:	strdeq	r5, [r1], -fp
   111e0:	andeq	r5, r1, r2, ror #31
   111e4:	andeq	r7, r2, ip, asr #2
   111e8:	strdeq	r7, [r2], -r0
   111ec:	andeq	r5, r1, r3, lsr #30
   111f0:	andeq	r5, r1, ip, lsr sl
   111f4:	andeq	r6, r1, fp
   111f8:	andeq	r6, r1, r5, lsr #2
   111fc:	mov	fp, #0
   11200:	mov	lr, #0
   11204:	pop	{r1}		; (ldr r1, [sp], #4)
   11208:	mov	r2, sp
   1120c:	push	{r2}		; (str r2, [sp, #-4]!)
   11210:	push	{r0}		; (str r0, [sp, #-4]!)
   11214:	ldr	ip, [pc, #16]	; 1122c <strspn@plt+0x328>
   11218:	push	{ip}		; (str ip, [sp, #-4]!)
   1121c:	ldr	r0, [pc, #12]	; 11230 <strspn@plt+0x32c>
   11220:	ldr	r3, [pc, #12]	; 11234 <strspn@plt+0x330>
   11224:	bl	10dcc <__libc_start_main@plt>
   11228:	bl	10eec <abort@plt>
   1122c:	andeq	r5, r1, ip, lsl r9
   11230:	andeq	r0, r1, r0, lsl pc
   11234:			; <UNDEFINED> instruction: 0x000158bc
   11238:	ldr	r3, [pc, #20]	; 11254 <strspn@plt+0x350>
   1123c:	ldr	r2, [pc, #20]	; 11258 <strspn@plt+0x354>
   11240:	add	r3, pc, r3
   11244:	ldr	r2, [r3, r2]
   11248:	cmp	r2, #0
   1124c:	bxeq	lr
   11250:	b	10de4 <__gmon_start__@plt>
   11254:			; <UNDEFINED> instruction: 0x00015db8
   11258:	andeq	r0, r0, r4, ror #1
   1125c:	ldr	r3, [pc, #28]	; 11280 <strspn@plt+0x37c>
   11260:	ldr	r0, [pc, #28]	; 11284 <strspn@plt+0x380>
   11264:	sub	r3, r3, r0
   11268:	cmp	r3, #6
   1126c:	bxls	lr
   11270:	ldr	r3, [pc, #16]	; 11288 <strspn@plt+0x384>
   11274:	cmp	r3, #0
   11278:	bxeq	lr
   1127c:	bx	r3
   11280:	andeq	r7, r2, fp, lsr r1
   11284:	andeq	r7, r2, r8, lsr r1
   11288:	andeq	r0, r0, r0
   1128c:	ldr	r1, [pc, #36]	; 112b8 <strspn@plt+0x3b4>
   11290:	ldr	r0, [pc, #36]	; 112bc <strspn@plt+0x3b8>
   11294:	sub	r1, r1, r0
   11298:	asr	r1, r1, #2
   1129c:	add	r1, r1, r1, lsr #31
   112a0:	asrs	r1, r1, #1
   112a4:	bxeq	lr
   112a8:	ldr	r3, [pc, #16]	; 112c0 <strspn@plt+0x3bc>
   112ac:	cmp	r3, #0
   112b0:	bxeq	lr
   112b4:	bx	r3
   112b8:	andeq	r7, r2, r8, lsr r1
   112bc:	andeq	r7, r2, r8, lsr r1
   112c0:	andeq	r0, r0, r0
   112c4:	push	{r4, lr}
   112c8:	ldr	r4, [pc, #24]	; 112e8 <strspn@plt+0x3e4>
   112cc:	ldrb	r3, [r4]
   112d0:	cmp	r3, #0
   112d4:	popne	{r4, pc}
   112d8:	bl	1125c <strspn@plt+0x358>
   112dc:	mov	r3, #1
   112e0:	strb	r3, [r4]
   112e4:	pop	{r4, pc}
   112e8:	andeq	r7, r2, r0, asr r1
   112ec:	ldr	r0, [pc, #40]	; 1131c <strspn@plt+0x418>
   112f0:	ldr	r3, [r0]
   112f4:	cmp	r3, #0
   112f8:	bne	11300 <strspn@plt+0x3fc>
   112fc:	b	1128c <strspn@plt+0x388>
   11300:	ldr	r3, [pc, #24]	; 11320 <strspn@plt+0x41c>
   11304:	cmp	r3, #0
   11308:	beq	112fc <strspn@plt+0x3f8>
   1130c:	push	{r4, lr}
   11310:	blx	r3
   11314:	pop	{r4, lr}
   11318:	b	1128c <strspn@plt+0x388>
   1131c:	andeq	r6, r2, r4, lsl pc
   11320:	andeq	r0, r0, r0
   11324:	subs	r5, r0, #0
   11328:	push	{r7, lr}
   1132c:	sub	sp, sp, #56	; 0x38
   11330:	ldr	r4, [pc, #500]	; 1152c <strspn@plt+0x628>
   11334:	beq	1136c <strspn@plt+0x468>
   11338:	ldr	r3, [pc, #496]	; 11530 <strspn@plt+0x62c>
   1133c:	mov	r2, #5
   11340:	ldr	r1, [pc, #492]	; 11534 <strspn@plt+0x630>
   11344:	mov	r0, #0
   11348:	ldr	r6, [r3]
   1134c:	bl	10d24 <dcgettext@plt>
   11350:	ldr	r3, [r4]
   11354:	mov	r1, #1
   11358:	mov	r2, r0
   1135c:	mov	r0, r6
   11360:	bl	10e74 <__fprintf_chk@plt>
   11364:	mov	r0, r5
   11368:	bl	10e20 <exit@plt>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #448]	; 11538 <strspn@plt+0x634>
   11374:	bl	10d24 <dcgettext@plt>
   11378:	ldr	r2, [r4]
   1137c:	ldr	r4, [pc, #440]	; 1153c <strspn@plt+0x638>
   11380:	ldr	r8, [pc, #440]	; 11540 <strspn@plt+0x63c>
   11384:	mov	r6, r5
   11388:	mov	r1, r0
   1138c:	mov	r0, #1
   11390:	bl	10e5c <__printf_chk@plt>
   11394:	mov	r2, #5
   11398:	ldr	r1, [pc, #420]	; 11544 <strspn@plt+0x640>
   1139c:	mov	r0, r5
   113a0:	bl	10d24 <dcgettext@plt>
   113a4:	ldr	r1, [r4]
   113a8:	bl	10c94 <fputs_unlocked@plt>
   113ac:	mov	r2, #5
   113b0:	ldr	r1, [pc, #400]	; 11548 <strspn@plt+0x644>
   113b4:	mov	r0, r5
   113b8:	bl	10d24 <dcgettext@plt>
   113bc:	ldr	r1, [r4]
   113c0:	bl	10c94 <fputs_unlocked@plt>
   113c4:	mov	r2, #5
   113c8:	ldr	r1, [pc, #380]	; 1154c <strspn@plt+0x648>
   113cc:	mov	r0, r5
   113d0:	bl	10d24 <dcgettext@plt>
   113d4:	ldr	r1, [r4]
   113d8:	bl	10c94 <fputs_unlocked@plt>
   113dc:	mov	r2, #5
   113e0:	ldr	r1, [pc, #360]	; 11550 <strspn@plt+0x64c>
   113e4:	mov	r0, r5
   113e8:	bl	10d24 <dcgettext@plt>
   113ec:	ldr	r1, [r4]
   113f0:	bl	10c94 <fputs_unlocked@plt>
   113f4:	mov	r2, #5
   113f8:	ldr	r1, [pc, #340]	; 11554 <strspn@plt+0x650>
   113fc:	mov	r0, r5
   11400:	bl	10d24 <dcgettext@plt>
   11404:	ldr	r1, [r4]
   11408:	bl	10c94 <fputs_unlocked@plt>
   1140c:	ldr	lr, [pc, #324]	; 11558 <strspn@plt+0x654>
   11410:	mov	ip, sp
   11414:	ldm	lr!, {r0, r1, r2, r3}
   11418:	stmia	ip!, {r0, r1, r2, r3}
   1141c:	ldm	lr!, {r0, r1, r2, r3}
   11420:	stmia	ip!, {r0, r1, r2, r3}
   11424:	ldm	lr!, {r0, r1, r2, r3}
   11428:	stmia	ip!, {r0, r1, r2, r3}
   1142c:	ldm	lr, {r0, r1}
   11430:	stm	ip, {r0, r1}
   11434:	ldr	r1, [sp, r6]
   11438:	add	r7, sp, r6
   1143c:	cmp	r1, #0
   11440:	bne	114e4 <strspn@plt+0x5e0>
   11444:	ldr	r6, [r7, #4]
   11448:	ldr	r7, [pc, #240]	; 11540 <strspn@plt+0x63c>
   1144c:	cmp	r6, #0
   11450:	mov	r2, #5
   11454:	ldr	r1, [pc, #256]	; 1155c <strspn@plt+0x658>
   11458:	mov	r0, #0
   1145c:	moveq	r6, r7
   11460:	bl	10d24 <dcgettext@plt>
   11464:	ldr	r3, [pc, #244]	; 11560 <strspn@plt+0x65c>
   11468:	ldr	r2, [pc, #244]	; 11564 <strspn@plt+0x660>
   1146c:	mov	r1, r0
   11470:	mov	r0, #1
   11474:	bl	10e5c <__printf_chk@plt>
   11478:	mov	r1, #0
   1147c:	mov	r0, #5
   11480:	bl	10e98 <setlocale@plt>
   11484:	cmp	r0, #0
   11488:	bne	114fc <strspn@plt+0x5f8>
   1148c:	mov	r2, #5
   11490:	ldr	r1, [pc, #208]	; 11568 <strspn@plt+0x664>
   11494:	mov	r0, #0
   11498:	bl	10d24 <dcgettext@plt>
   1149c:	ldr	r3, [pc, #156]	; 11540 <strspn@plt+0x63c>
   114a0:	ldr	r2, [pc, #184]	; 11560 <strspn@plt+0x65c>
   114a4:	mov	r1, r0
   114a8:	mov	r0, #1
   114ac:	bl	10e5c <__printf_chk@plt>
   114b0:	mov	r2, #5
   114b4:	ldr	r1, [pc, #176]	; 1156c <strspn@plt+0x668>
   114b8:	mov	r0, #0
   114bc:	bl	10d24 <dcgettext@plt>
   114c0:	ldr	r2, [pc, #168]	; 11570 <strspn@plt+0x66c>
   114c4:	cmp	r6, r7
   114c8:	ldr	r3, [pc, #164]	; 11574 <strspn@plt+0x670>
   114cc:	moveq	r3, r2
   114d0:	mov	r2, r6
   114d4:	mov	r1, r0
   114d8:	mov	r0, #1
   114dc:	bl	10e5c <__printf_chk@plt>
   114e0:	b	11364 <strspn@plt+0x460>
   114e4:	mov	r0, r8
   114e8:	bl	10cac <strcmp@plt>
   114ec:	add	r6, r6, #8
   114f0:	cmp	r0, #0
   114f4:	bne	11434 <strspn@plt+0x530>
   114f8:	b	11444 <strspn@plt+0x540>
   114fc:	mov	r2, #3
   11500:	ldr	r1, [pc, #112]	; 11578 <strspn@plt+0x674>
   11504:	bl	10ee0 <strncmp@plt>
   11508:	cmp	r0, #0
   1150c:	beq	1148c <strspn@plt+0x588>
   11510:	mov	r2, #5
   11514:	ldr	r1, [pc, #96]	; 1157c <strspn@plt+0x678>
   11518:	mov	r0, #0
   1151c:	bl	10d24 <dcgettext@plt>
   11520:	ldr	r1, [r4]
   11524:	bl	10c94 <fputs_unlocked@plt>
   11528:	b	1148c <strspn@plt+0x588>
   1152c:	andeq	r7, r2, ip, asr r1
   11530:	andeq	r7, r2, r8, asr #2
   11534:	andeq	r5, r1, r5, asr #20
   11538:	andeq	r5, r1, ip, ror #20
   1153c:	andeq	r7, r2, ip, asr #2
   11540:	andeq	r5, r1, ip, lsr sl
   11544:	andeq	r5, r1, fp, lsl #21
   11548:	andeq	r5, r1, r3, asr #21
   1154c:	andeq	r5, r1, r8, ror ip
   11550:	andeq	r5, r1, r1, lsl #29
   11554:	andeq	r5, r1, lr, lsr #29
   11558:	andeq	r5, r1, r4, asr r9
   1155c:	andeq	r5, r1, r4, ror #29
   11560:	strdeq	r5, [r1], -fp
   11564:	andeq	r5, r1, r3, lsr #30
   11568:	andeq	r5, r1, ip, ror pc
   1156c:	muleq	r1, r7, pc	; <UNPREDICTABLE>
   11570:	andeq	r6, r1, r5, asr r0
   11574:	andeq	r5, r1, r2, asr #21
   11578:	andeq	r5, r1, r1, lsr pc
   1157c:	andeq	r5, r1, r5, lsr pc
   11580:	push	{r4, r5, r6, r7, r8, lr}
   11584:	subs	r6, r1, #0
   11588:	sub	sp, sp, #128	; 0x80
   1158c:	mov	r8, r0
   11590:	moveq	r5, #128	; 0x80
   11594:	beq	115a4 <strspn@plt+0x6a0>
   11598:	cmp	r6, #1024	; 0x400
   1159c:	addls	r5, r6, #1
   115a0:	ldrhi	r5, [pc, #236]	; 11694 <strspn@plt+0x790>
   115a4:	cmp	r5, #128	; 0x80
   115a8:	cmpeq	r6, #0
   115ac:	movne	r4, #1
   115b0:	moveq	r4, #0
   115b4:	moveq	r7, sp
   115b8:	beq	115e0 <strspn@plt+0x6dc>
   115bc:	mov	r0, r5
   115c0:	bl	14e88 <strspn@plt+0x3f84>
   115c4:	subs	r7, r0, #0
   115c8:	bne	115dc <strspn@plt+0x6d8>
   115cc:	bl	10e38 <__errno_location@plt>
   115d0:	mov	r3, #12
   115d4:	str	r3, [r0]
   115d8:	b	11600 <strspn@plt+0x6fc>
   115dc:	mov	r4, r7
   115e0:	mov	r2, r5
   115e4:	mov	r1, r7
   115e8:	mov	r0, r8
   115ec:	bl	10d60 <readlink@plt>
   115f0:	cmp	r0, #0
   115f4:	bge	11610 <strspn@plt+0x70c>
   115f8:	mov	r0, r4
   115fc:	bl	11e5c <strspn@plt+0xf58>
   11600:	mov	r4, #0
   11604:	mov	r0, r4
   11608:	add	sp, sp, #128	; 0x80
   1160c:	pop	{r4, r5, r6, r7, r8, pc}
   11610:	cmp	r5, r0
   11614:	bls	11670 <strspn@plt+0x76c>
   11618:	mov	r3, #0
   1161c:	cmp	r4, r3
   11620:	strb	r3, [r7, r0]
   11624:	add	r6, r0, #1
   11628:	bne	11650 <strspn@plt+0x74c>
   1162c:	mov	r0, r6
   11630:	bl	14e88 <strspn@plt+0x3f84>
   11634:	subs	r4, r0, #0
   11638:	beq	11604 <strspn@plt+0x700>
   1163c:	mov	r2, r6
   11640:	mov	r1, r7
   11644:	bl	10cf4 <memcpy@plt>
   11648:	mov	r4, r0
   1164c:	b	11604 <strspn@plt+0x700>
   11650:	cmp	r5, r6
   11654:	bls	11604 <strspn@plt+0x700>
   11658:	mov	r0, r4
   1165c:	mov	r1, r6
   11660:	bl	14ec8 <strspn@plt+0x3fc4>
   11664:	cmp	r0, #0
   11668:	movne	r4, r0
   1166c:	b	11604 <strspn@plt+0x700>
   11670:	mov	r0, r4
   11674:	bl	11e5c <strspn@plt+0xf58>
   11678:	cmn	r5, #-1073741823	; 0xc0000001
   1167c:	lslls	r5, r5, #1
   11680:	bls	115a4 <strspn@plt+0x6a0>
   11684:	cmn	r5, #-2147483646	; 0x80000002
   11688:	bhi	115cc <strspn@plt+0x6c8>
   1168c:	mvn	r5, #-2147483648	; 0x80000000
   11690:	b	115a4 <strspn@plt+0x6a0>
   11694:	andeq	r0, r0, r1, lsl #8
   11698:	mov	r3, r0
   1169c:	ldr	r0, [r3], #8
   116a0:	cmp	r0, r3
   116a4:	bxeq	lr
   116a8:	b	11e5c <strspn@plt+0xf58>
   116ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116b0:	sub	sp, sp, #3232	; 0xca0
   116b4:	sub	sp, sp, #4
   116b8:	and	r3, r1, #3
   116bc:	str	r3, [sp, #16]
   116c0:	and	r2, r1, #3
   116c4:	sub	r3, r3, #1
   116c8:	tst	r3, r2
   116cc:	beq	116ec <strspn@plt+0x7e8>
   116d0:	bl	10e38 <__errno_location@plt>
   116d4:	mov	r3, #22
   116d8:	str	r3, [r0]
   116dc:	mov	r0, #0
   116e0:	add	sp, sp, #3232	; 0xca0
   116e4:	add	sp, sp, #4
   116e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116ec:	cmp	r0, #0
   116f0:	mov	r5, r0
   116f4:	beq	116d0 <strspn@plt+0x7cc>
   116f8:	ldrb	r4, [r0]
   116fc:	cmp	r4, #0
   11700:	bne	11710 <strspn@plt+0x80c>
   11704:	bl	10e38 <__errno_location@plt>
   11708:	mov	r3, #2
   1170c:	b	116d8 <strspn@plt+0x7d4>
   11710:	add	r3, sp, #1168	; 0x490
   11714:	add	r3, r3, #8
   11718:	add	r6, sp, #144	; 0x90
   1171c:	str	r3, [sp, #1168]	; 0x490
   11720:	add	r2, sp, #2208	; 0x8a0
   11724:	mov	r3, #1024	; 0x400
   11728:	cmp	r4, #47	; 0x2f
   1172c:	mov	r7, r1
   11730:	str	r3, [sp, #1172]	; 0x494
   11734:	str	r2, [sp, #2200]	; 0x898
   11738:	str	r3, [sp, #2204]	; 0x89c
   1173c:	str	r6, [sp, #136]	; 0x88
   11740:	str	r3, [sp, #140]	; 0x8c
   11744:	subne	r4, r6, #8
   11748:	bne	11788 <strspn@plt+0x884>
   1174c:	strb	r4, [sp, #144]	; 0x90
   11750:	add	r0, r6, #1
   11754:	b	117a8 <strspn@plt+0x8a4>
   11758:	bl	10e38 <__errno_location@plt>
   1175c:	ldr	r3, [r0]
   11760:	cmp	r3, #12
   11764:	beq	11780 <strspn@plt+0x87c>
   11768:	cmp	r3, #34	; 0x22
   1176c:	bne	11c4c <strspn@plt+0xd48>
   11770:	mov	r0, r4
   11774:	bl	14360 <strspn@plt+0x345c>
   11778:	cmp	r0, #0
   1177c:	bne	11784 <strspn@plt+0x880>
   11780:	bl	14e00 <strspn@plt+0x3efc>
   11784:	ldr	r6, [sp, #136]	; 0x88
   11788:	ldr	r1, [sp, #140]	; 0x8c
   1178c:	mov	r0, r6
   11790:	bl	10e14 <getcwd@plt>
   11794:	cmp	r0, #0
   11798:	beq	11758 <strspn@plt+0x854>
   1179c:	mov	r1, #0
   117a0:	mov	r0, r6
   117a4:	bl	10d48 <rawmemchr@plt>
   117a8:	mov	r4, r6
   117ac:	mov	r6, r0
   117b0:	mov	r9, #0
   117b4:	and	r3, r7, #4
   117b8:	str	r3, [sp, #24]
   117bc:	str	r9, [sp, #8]
   117c0:	str	r9, [sp, #20]
   117c4:	ldrb	r3, [r5]
   117c8:	cmp	r3, #0
   117cc:	beq	11bc4 <strspn@plt+0xcc0>
   117d0:	mov	r8, r5
   117d4:	b	117dc <strspn@plt+0x8d8>
   117d8:	mov	r8, r2
   117dc:	mov	r2, r8
   117e0:	ldrb	r3, [r2], #1
   117e4:	cmp	r3, #47	; 0x2f
   117e8:	beq	117d8 <strspn@plt+0x8d4>
   117ec:	mov	r7, r8
   117f0:	mov	r2, r7
   117f4:	mov	r5, r7
   117f8:	ldrb	r1, [r2], #1
   117fc:	cmp	r1, #0
   11800:	cmpne	r1, #47	; 0x2f
   11804:	bne	118c0 <strspn@plt+0x9bc>
   11808:	subs	fp, r7, r8
   1180c:	beq	11bc4 <strspn@plt+0xcc0>
   11810:	cmp	fp, #1
   11814:	bne	118c8 <strspn@plt+0x9c4>
   11818:	cmp	r3, #46	; 0x2e
   1181c:	beq	117c4 <strspn@plt+0x8c0>
   11820:	ldrb	r3, [r6, #-1]
   11824:	add	sl, fp, #2
   11828:	cmp	r3, #47	; 0x2f
   1182c:	movne	r3, #47	; 0x2f
   11830:	strbne	r3, [r6]
   11834:	addne	r6, r6, #1
   11838:	ldr	r3, [sp, #140]	; 0x8c
   1183c:	add	r3, r4, r3
   11840:	sub	r3, r3, r6
   11844:	cmp	r3, sl
   11848:	bcc	1190c <strspn@plt+0xa08>
   1184c:	mov	r0, r6
   11850:	mov	r2, fp
   11854:	mov	r1, r8
   11858:	bl	10df0 <mempcpy@plt>
   1185c:	mov	r3, #0
   11860:	strb	r3, [r0]
   11864:	ldr	r3, [sp, #24]
   11868:	mov	r6, r0
   1186c:	cmp	r3, #0
   11870:	bne	11ab8 <strspn@plt+0xbb4>
   11874:	ldr	r3, [sp, #2200]	; 0x898
   11878:	mov	r0, r4
   1187c:	str	r3, [sp, #12]
   11880:	ldr	r3, [sp, #2204]	; 0x89c
   11884:	ldr	r1, [sp, #12]
   11888:	sub	r3, r3, #1
   1188c:	mov	r2, r3
   11890:	str	r3, [sp, #28]
   11894:	bl	10d60 <readlink@plt>
   11898:	ldr	r3, [sp, #28]
   1189c:	cmp	r3, r0
   118a0:	mov	sl, r0
   118a4:	bgt	1192c <strspn@plt+0xa28>
   118a8:	add	r0, sp, #2192	; 0x890
   118ac:	add	r0, r0, #8
   118b0:	bl	14360 <strspn@plt+0x345c>
   118b4:	cmp	r0, #0
   118b8:	bne	11874 <strspn@plt+0x970>
   118bc:	b	11780 <strspn@plt+0x87c>
   118c0:	mov	r7, r2
   118c4:	b	117f0 <strspn@plt+0x8ec>
   118c8:	cmp	fp, #2
   118cc:	cmpeq	r3, #46	; 0x2e
   118d0:	bne	11820 <strspn@plt+0x91c>
   118d4:	ldrb	r3, [r8, #1]
   118d8:	cmp	r3, #46	; 0x2e
   118dc:	bne	11820 <strspn@plt+0x91c>
   118e0:	add	r3, r4, #1
   118e4:	cmp	r6, r3
   118e8:	bls	117c4 <strspn@plt+0x8c0>
   118ec:	sub	r3, r6, #1
   118f0:	cmp	r4, r3
   118f4:	mov	r6, r3
   118f8:	beq	117c4 <strspn@plt+0x8c0>
   118fc:	ldrb	r2, [r3, #-1]!
   11900:	cmp	r2, #47	; 0x2f
   11904:	bne	118f0 <strspn@plt+0x9ec>
   11908:	b	117c4 <strspn@plt+0x8c0>
   1190c:	add	r0, sp, #136	; 0x88
   11910:	bl	143d0 <strspn@plt+0x34cc>
   11914:	sub	r6, r6, r4
   11918:	cmp	r0, #0
   1191c:	beq	11780 <strspn@plt+0x87c>
   11920:	ldr	r4, [sp, #136]	; 0x88
   11924:	add	r6, r4, r6
   11928:	b	11838 <strspn@plt+0x934>
   1192c:	cmp	r0, #0
   11930:	blt	11ab8 <strspn@plt+0xbb4>
   11934:	ldr	r3, [sp, #20]
   11938:	cmp	r3, #19
   1193c:	addle	r3, r3, #1
   11940:	strle	r3, [sp, #20]
   11944:	ble	119e0 <strspn@plt+0xadc>
   11948:	ldrb	r3, [r8]
   1194c:	cmp	r3, #0
   11950:	beq	119e0 <strspn@plt+0xadc>
   11954:	rsb	fp, fp, #0
   11958:	mov	r3, #0
   1195c:	strb	r3, [r6, fp]
   11960:	ldrb	r0, [r4]
   11964:	ldr	r3, [pc, #808]	; 11c94 <strspn@plt+0xd90>
   11968:	add	r1, sp, #32
   1196c:	cmp	r0, #0
   11970:	movne	r0, r4
   11974:	moveq	r0, r3
   11978:	bl	15938 <strspn@plt+0x4a34>
   1197c:	cmp	r0, #0
   11980:	bne	11c70 <strspn@plt+0xd6c>
   11984:	ldrb	r3, [r8]
   11988:	cmp	r9, #0
   1198c:	strb	r3, [r6, fp]
   11990:	bne	119b8 <strspn@plt+0xab4>
   11994:	ldr	r3, [pc, #764]	; 11c98 <strspn@plt+0xd94>
   11998:	mov	r1, r9
   1199c:	str	r3, [sp]
   119a0:	ldr	r2, [pc, #756]	; 11c9c <strspn@plt+0xd98>
   119a4:	ldr	r3, [pc, #756]	; 11ca0 <strspn@plt+0xd9c>
   119a8:	mov	r0, #7
   119ac:	bl	12634 <strspn@plt+0x1730>
   119b0:	subs	r9, r0, #0
   119b4:	beq	11780 <strspn@plt+0x87c>
   119b8:	add	r2, sp, #32
   119bc:	mov	r1, r8
   119c0:	mov	r0, r9
   119c4:	bl	11e18 <strspn@plt+0xf14>
   119c8:	cmp	r0, #0
   119cc:	bne	11c58 <strspn@plt+0xd54>
   119d0:	add	r2, sp, #32
   119d4:	mov	r1, r8
   119d8:	mov	r0, r9
   119dc:	bl	11db0 <strspn@plt+0xeac>
   119e0:	ldr	r2, [sp, #12]
   119e4:	mov	r3, #0
   119e8:	mov	r0, r7
   119ec:	strb	r3, [r2, sl]
   119f0:	ldr	r3, [sp, #8]
   119f4:	ldr	fp, [sp, #1168]	; 0x490
   119f8:	cmp	r3, #0
   119fc:	subne	r8, r7, fp
   11a00:	ldreq	r8, [sp, #8]
   11a04:	bl	10e2c <strlen@plt>
   11a08:	adds	r3, sl, r0
   11a0c:	mov	r7, r0
   11a10:	bcs	11780 <strspn@plt+0x87c>
   11a14:	ldr	r2, [sp, #1172]	; 0x494
   11a18:	cmp	r3, r2
   11a1c:	bcs	11a98 <strspn@plt+0xb94>
   11a20:	ldr	r3, [sp, #8]
   11a24:	add	r2, r7, #1
   11a28:	cmp	r3, #0
   11a2c:	addne	r5, fp, r8
   11a30:	mov	r1, r5
   11a34:	add	r0, fp, sl
   11a38:	bl	10cc4 <memmove@plt>
   11a3c:	ldr	r1, [sp, #12]
   11a40:	mov	r2, sl
   11a44:	mov	r0, fp
   11a48:	bl	10cf4 <memcpy@plt>
   11a4c:	ldr	r3, [sp, #12]
   11a50:	add	r1, r4, #1
   11a54:	ldrb	r3, [r3]
   11a58:	cmp	r3, #47	; 0x2f
   11a5c:	moveq	r6, r1
   11a60:	strbeq	r3, [r4]
   11a64:	mov	r5, r0
   11a68:	beq	11a8c <strspn@plt+0xb88>
   11a6c:	cmp	r6, r1
   11a70:	bls	11a8c <strspn@plt+0xb88>
   11a74:	sub	r6, r6, #1
   11a78:	cmp	r4, r6
   11a7c:	beq	11bbc <strspn@plt+0xcb8>
   11a80:	ldrb	r3, [r6, #-1]
   11a84:	cmp	r3, #47	; 0x2f
   11a88:	bne	11a74 <strspn@plt+0xb70>
   11a8c:	mov	r3, #1
   11a90:	str	r3, [sp, #8]
   11a94:	b	117c4 <strspn@plt+0x8c0>
   11a98:	add	r0, sp, #1168	; 0x490
   11a9c:	str	r3, [sp, #28]
   11aa0:	bl	143d0 <strspn@plt+0x34cc>
   11aa4:	cmp	r0, #0
   11aa8:	beq	11780 <strspn@plt+0x87c>
   11aac:	ldr	fp, [sp, #1168]	; 0x490
   11ab0:	ldr	r3, [sp, #28]
   11ab4:	b	11a14 <strspn@plt+0xb10>
   11ab8:	ldr	r3, [sp, #16]
   11abc:	cmp	r3, #2
   11ac0:	movne	r3, r7
   11ac4:	beq	117c4 <strspn@plt+0x8c0>
   11ac8:	ldrb	r2, [r3]
   11acc:	cmp	r2, #47	; 0x2f
   11ad0:	beq	11b38 <strspn@plt+0xc34>
   11ad4:	ldr	r3, [sp, #24]
   11ad8:	cmp	r3, #0
   11adc:	beq	11ba8 <strspn@plt+0xca4>
   11ae0:	ldrb	r2, [r7]
   11ae4:	cmp	r2, #0
   11ae8:	moveq	r3, #512	; 0x200
   11aec:	beq	11b94 <strspn@plt+0xc90>
   11af0:	mov	r0, #0
   11af4:	cmp	r0, #0
   11af8:	beq	117c4 <strspn@plt+0x8c0>
   11afc:	ldr	r3, [sp, #16]
   11b00:	cmp	r3, #1
   11b04:	bne	11c70 <strspn@plt+0xd6c>
   11b08:	bl	10e38 <__errno_location@plt>
   11b0c:	ldr	r3, [r0]
   11b10:	cmp	r3, #2
   11b14:	bne	11c70 <strspn@plt+0xd6c>
   11b18:	ldr	r1, [pc, #388]	; 11ca4 <strspn@plt+0xda0>
   11b1c:	mov	r0, r7
   11b20:	bl	10f04 <strspn@plt>
   11b24:	ldrb	r3, [r7, r0]
   11b28:	cmp	r3, #0
   11b2c:	beq	117c4 <strspn@plt+0x8c0>
   11b30:	b	11c70 <strspn@plt+0xd6c>
   11b34:	mov	r3, r2
   11b38:	ldrb	r1, [r3, #1]
   11b3c:	add	r2, r3, #1
   11b40:	cmp	r1, #47	; 0x2f
   11b44:	beq	11b34 <strspn@plt+0xc30>
   11b48:	cmp	r1, #0
   11b4c:	add	r3, r3, #2
   11b50:	beq	11b80 <strspn@plt+0xc7c>
   11b54:	cmp	r1, #46	; 0x2e
   11b58:	bne	11ad4 <strspn@plt+0xbd0>
   11b5c:	ldrb	r1, [r2, #1]
   11b60:	cmp	r1, #0
   11b64:	beq	11b80 <strspn@plt+0xc7c>
   11b68:	cmp	r1, #46	; 0x2e
   11b6c:	bne	11ac8 <strspn@plt+0xbc4>
   11b70:	ldrb	r2, [r2, #2]
   11b74:	cmp	r2, #47	; 0x2f
   11b78:	cmpne	r2, #0
   11b7c:	bne	11ac8 <strspn@plt+0xbc4>
   11b80:	ldr	r1, [pc, #288]	; 11ca8 <strspn@plt+0xda4>
   11b84:	mov	r0, r6
   11b88:	bl	10d84 <strcpy@plt>
   11b8c:	mov	r3, #512	; 0x200
   11b90:	mov	r2, #0
   11b94:	mov	r1, r4
   11b98:	mvn	r0, #99	; 0x63
   11b9c:	bl	10cdc <faccessat@plt>
   11ba0:	adds	r0, r0, #0
   11ba4:	b	11bb4 <strspn@plt+0xcb0>
   11ba8:	bl	10e38 <__errno_location@plt>
   11bac:	ldr	r0, [r0]
   11bb0:	subs	r0, r0, #22
   11bb4:	movne	r0, #1
   11bb8:	b	11af4 <strspn@plt+0xbf0>
   11bbc:	mov	r6, r4
   11bc0:	b	11a8c <strspn@plt+0xb88>
   11bc4:	add	r3, r4, #1
   11bc8:	cmp	r6, r3
   11bcc:	bls	11bdc <strspn@plt+0xcd8>
   11bd0:	ldrb	r3, [r6, #-1]
   11bd4:	cmp	r3, #47	; 0x2f
   11bd8:	subeq	r6, r6, #1
   11bdc:	cmp	r9, #0
   11be0:	movne	r5, #0
   11be4:	bne	11c1c <strspn@plt+0xd18>
   11be8:	add	r0, sp, #1168	; 0x490
   11bec:	bl	11698 <strspn@plt+0x794>
   11bf0:	add	r0, sp, #2192	; 0x890
   11bf4:	add	r0, r0, #8
   11bf8:	bl	11698 <strspn@plt+0x794>
   11bfc:	mov	r3, #0
   11c00:	strb	r3, [r6], #1
   11c04:	add	r0, sp, #136	; 0x88
   11c08:	sub	r1, r6, r4
   11c0c:	bl	14310 <strspn@plt+0x340c>
   11c10:	cmp	r0, #0
   11c14:	bne	116e0 <strspn@plt+0x7dc>
   11c18:	b	11780 <strspn@plt+0x87c>
   11c1c:	mov	r0, r9
   11c20:	bl	127a0 <strspn@plt+0x189c>
   11c24:	add	r0, sp, #1168	; 0x490
   11c28:	bl	11698 <strspn@plt+0x794>
   11c2c:	add	r0, sp, #2192	; 0x890
   11c30:	add	r0, r0, #8
   11c34:	bl	11698 <strspn@plt+0x794>
   11c38:	cmp	r5, #0
   11c3c:	beq	11bfc <strspn@plt+0xcf8>
   11c40:	add	r0, sp, #136	; 0x88
   11c44:	bl	11698 <strspn@plt+0x794>
   11c48:	b	116dc <strspn@plt+0x7d8>
   11c4c:	mov	r4, r6
   11c50:	mov	r5, #1
   11c54:	b	11c24 <strspn@plt+0xd20>
   11c58:	ldr	r3, [sp, #16]
   11c5c:	cmp	r3, #2
   11c60:	beq	117c4 <strspn@plt+0x8c0>
   11c64:	bl	10e38 <__errno_location@plt>
   11c68:	mov	r3, #40	; 0x28
   11c6c:	str	r3, [r0]
   11c70:	cmp	r9, #0
   11c74:	movne	r5, #1
   11c78:	bne	11c1c <strspn@plt+0xd18>
   11c7c:	add	r0, sp, #1168	; 0x490
   11c80:	bl	11698 <strspn@plt+0x794>
   11c84:	add	r0, sp, #2192	; 0x890
   11c88:	add	r0, r0, #8
   11c8c:	bl	11698 <strspn@plt+0x794>
   11c90:	b	11c40 <strspn@plt+0xd3c>
   11c94:	andeq	r6, r1, r3, lsl r1
   11c98:			; <UNDEFINED> instruction: 0x00012cb8
   11c9c:	andeq	r2, r1, r4, lsr ip
   11ca0:	andeq	r2, r1, ip, ror #24
   11ca4:	andeq	r6, r1, r2, lsl #11
   11ca8:	andeq	r6, r1, r1, lsl r1
   11cac:	ldr	r3, [pc, #4]	; 11cb8 <strspn@plt+0xdb4>
   11cb0:	str	r0, [r3]
   11cb4:	bx	lr
   11cb8:	andeq	r7, r2, r4, asr r1
   11cbc:	ldr	r3, [pc, #4]	; 11cc8 <strspn@plt+0xdc4>
   11cc0:	strb	r0, [r3, #4]
   11cc4:	bx	lr
   11cc8:	andeq	r7, r2, r4, asr r1
   11ccc:	ldr	r3, [pc, #192]	; 11d94 <strspn@plt+0xe90>
   11cd0:	push	{r0, r1, r4, r5, r6, lr}
   11cd4:	ldr	r0, [r3]
   11cd8:	bl	14f24 <strspn@plt+0x4020>
   11cdc:	cmp	r0, #0
   11ce0:	beq	11d78 <strspn@plt+0xe74>
   11ce4:	ldr	r3, [pc, #172]	; 11d98 <strspn@plt+0xe94>
   11ce8:	mov	r4, r3
   11cec:	ldrb	r2, [r3, #4]
   11cf0:	cmp	r2, #0
   11cf4:	beq	11d08 <strspn@plt+0xe04>
   11cf8:	bl	10e38 <__errno_location@plt>
   11cfc:	ldr	r3, [r0]
   11d00:	cmp	r3, #32
   11d04:	beq	11d78 <strspn@plt+0xe74>
   11d08:	mov	r2, #5
   11d0c:	ldr	r1, [pc, #136]	; 11d9c <strspn@plt+0xe98>
   11d10:	mov	r0, #0
   11d14:	bl	10d24 <dcgettext@plt>
   11d18:	ldr	r4, [r4]
   11d1c:	cmp	r4, #0
   11d20:	mov	r5, r0
   11d24:	beq	11d5c <strspn@plt+0xe58>
   11d28:	bl	10e38 <__errno_location@plt>
   11d2c:	ldr	r6, [r0]
   11d30:	mov	r0, r4
   11d34:	bl	141b4 <strspn@plt+0x32b0>
   11d38:	str	r5, [sp]
   11d3c:	ldr	r2, [pc, #92]	; 11da0 <strspn@plt+0xe9c>
   11d40:	mov	r1, r6
   11d44:	mov	r3, r0
   11d48:	mov	r0, #0
   11d4c:	bl	10db4 <error@plt>
   11d50:	ldr	r3, [pc, #76]	; 11da4 <strspn@plt+0xea0>
   11d54:	ldr	r0, [r3]
   11d58:	bl	10ce8 <_exit@plt>
   11d5c:	bl	10e38 <__errno_location@plt>
   11d60:	mov	r3, r5
   11d64:	ldr	r2, [pc, #60]	; 11da8 <strspn@plt+0xea4>
   11d68:	ldr	r1, [r0]
   11d6c:	mov	r0, r4
   11d70:	bl	10db4 <error@plt>
   11d74:	b	11d50 <strspn@plt+0xe4c>
   11d78:	ldr	r3, [pc, #44]	; 11dac <strspn@plt+0xea8>
   11d7c:	ldr	r0, [r3]
   11d80:	bl	14f24 <strspn@plt+0x4020>
   11d84:	cmp	r0, #0
   11d88:	bne	11d50 <strspn@plt+0xe4c>
   11d8c:	add	sp, sp, #8
   11d90:	pop	{r4, r5, r6, pc}
   11d94:	andeq	r7, r2, ip, asr #2
   11d98:	andeq	r7, r2, r4, asr r1
   11d9c:	andeq	r6, r1, r5, lsl r1
   11da0:	andeq	r6, r1, r1, lsr #2
   11da4:	strdeq	r7, [r2], -r4
   11da8:	andeq	r6, r1, r5, lsr #2
   11dac:	andeq	r7, r2, r8, asr #2
   11db0:	push	{r4, r5, r6, r7, r8, lr}
   11db4:	subs	r6, r0, #0
   11db8:	popeq	{r4, r5, r6, r7, r8, pc}
   11dbc:	mov	r0, #24
   11dc0:	mov	r5, r2
   11dc4:	mov	r7, r1
   11dc8:	bl	1496c <strspn@plt+0x3a68>
   11dcc:	mov	r4, r0
   11dd0:	mov	r0, r7
   11dd4:	bl	14de4 <strspn@plt+0x3ee0>
   11dd8:	ldrd	r2, [r5, #96]	; 0x60
   11ddc:	mov	r1, r4
   11de0:	strd	r2, [r4, #8]
   11de4:	ldrd	r2, [r5]
   11de8:	strd	r2, [r4, #16]
   11dec:	str	r0, [r4]
   11df0:	mov	r0, r6
   11df4:	bl	12b08 <strspn@plt+0x1c04>
   11df8:	cmp	r0, #0
   11dfc:	bne	11e04 <strspn@plt+0xf00>
   11e00:	bl	14e00 <strspn@plt+0x3efc>
   11e04:	cmp	r4, r0
   11e08:	popeq	{r4, r5, r6, r7, r8, pc}
   11e0c:	mov	r0, r4
   11e10:	pop	{r4, r5, r6, r7, r8, lr}
   11e14:	b	12cb8 <strspn@plt+0x1db4>
   11e18:	subs	r3, r0, #0
   11e1c:	beq	11e54 <strspn@plt+0xf50>
   11e20:	push	{r4, r5, lr}
   11e24:	sub	sp, sp, #28
   11e28:	ldrd	r4, [r2, #96]	; 0x60
   11e2c:	ldrd	r2, [r2]
   11e30:	str	r1, [sp]
   11e34:	mov	r1, sp
   11e38:	strd	r4, [sp, #8]
   11e3c:	strd	r2, [sp, #16]
   11e40:	bl	12410 <strspn@plt+0x150c>
   11e44:	adds	r0, r0, #0
   11e48:	movne	r0, #1
   11e4c:	add	sp, sp, #28
   11e50:	pop	{r4, r5, pc}
   11e54:	mov	r0, r3
   11e58:	bx	lr
   11e5c:	push	{r0, r1, r2, r4, r5, lr}
   11e60:	mov	r5, r0
   11e64:	bl	10e38 <__errno_location@plt>
   11e68:	ldr	r3, [r0]
   11e6c:	mov	r4, r0
   11e70:	str	r3, [sp]
   11e74:	str	r3, [sp, #4]
   11e78:	mov	r3, #0
   11e7c:	str	r3, [r0]
   11e80:	mov	r0, r5
   11e84:	bl	10cd0 <free@plt>
   11e88:	ldr	r3, [r4]
   11e8c:	add	r2, sp, #8
   11e90:	cmp	r3, #0
   11e94:	moveq	r3, #4
   11e98:	movne	r3, #0
   11e9c:	add	r3, r2, r3
   11ea0:	ldr	r3, [r3, #-8]
   11ea4:	str	r3, [r4]
   11ea8:	add	sp, sp, #12
   11eac:	pop	{r4, r5, pc}
   11eb0:	push	{r4, lr}
   11eb4:	ror	r0, r0, #3
   11eb8:	bl	154e8 <strspn@plt+0x45e4>
   11ebc:	mov	r0, r1
   11ec0:	pop	{r4, pc}
   11ec4:	sub	r0, r1, r0
   11ec8:	clz	r0, r0
   11ecc:	lsr	r0, r0, #5
   11ed0:	bx	lr
   11ed4:	push	{r4, lr}
   11ed8:	mov	r4, r0
   11edc:	mov	r0, r1
   11ee0:	ldr	r3, [r4, #24]
   11ee4:	ldr	r1, [r4, #8]
   11ee8:	blx	r3
   11eec:	ldr	r3, [r4, #8]
   11ef0:	cmp	r0, r3
   11ef4:	bcc	11efc <strspn@plt+0xff8>
   11ef8:	bl	10eec <abort@plt>
   11efc:	ldr	r3, [r4]
   11f00:	add	r0, r3, r0, lsl #3
   11f04:	pop	{r4, pc}
   11f08:	push	{r4, r5, r6, r7, r8, lr}
   11f0c:	mov	r6, r1
   11f10:	mov	r8, r2
   11f14:	mov	r5, r0
   11f18:	mov	r7, r3
   11f1c:	bl	11ed4 <strspn@plt+0xfd0>
   11f20:	str	r0, [r8]
   11f24:	ldr	r1, [r0]
   11f28:	cmp	r1, #0
   11f2c:	bne	11f3c <strspn@plt+0x1038>
   11f30:	mov	r2, #0
   11f34:	mov	r0, r2
   11f38:	pop	{r4, r5, r6, r7, r8, pc}
   11f3c:	cmp	r6, r1
   11f40:	mov	r4, r0
   11f44:	bne	11f84 <strspn@plt+0x1080>
   11f48:	cmp	r7, #0
   11f4c:	ldr	r2, [r4]
   11f50:	beq	11f34 <strspn@plt+0x1030>
   11f54:	ldr	r3, [r4, #4]
   11f58:	cmp	r3, #0
   11f5c:	streq	r3, [r4]
   11f60:	beq	11f34 <strspn@plt+0x1030>
   11f64:	ldm	r3, {r0, r1}
   11f68:	stm	r4, {r0, r1}
   11f6c:	mov	r1, #0
   11f70:	str	r1, [r3]
   11f74:	ldr	r1, [r5, #36]	; 0x24
   11f78:	str	r1, [r3, #4]
   11f7c:	str	r3, [r5, #36]	; 0x24
   11f80:	b	11f34 <strspn@plt+0x1030>
   11f84:	ldr	r3, [r5, #28]
   11f88:	mov	r0, r6
   11f8c:	blx	r3
   11f90:	cmp	r0, #0
   11f94:	bne	11f48 <strspn@plt+0x1044>
   11f98:	ldr	r3, [r4, #4]
   11f9c:	cmp	r3, #0
   11fa0:	beq	11f30 <strspn@plt+0x102c>
   11fa4:	ldr	r1, [r3]
   11fa8:	cmp	r6, r1
   11fac:	bne	11fcc <strspn@plt+0x10c8>
   11fb0:	ldr	r3, [r4, #4]
   11fb4:	cmp	r7, #0
   11fb8:	ldr	r2, [r3]
   11fbc:	beq	11f34 <strspn@plt+0x1030>
   11fc0:	ldr	r1, [r3, #4]
   11fc4:	str	r1, [r4, #4]
   11fc8:	b	11f6c <strspn@plt+0x1068>
   11fcc:	ldr	r3, [r5, #28]
   11fd0:	mov	r0, r6
   11fd4:	blx	r3
   11fd8:	cmp	r0, #0
   11fdc:	bne	11fb0 <strspn@plt+0x10ac>
   11fe0:	ldr	r4, [r4, #4]
   11fe4:	b	11f98 <strspn@plt+0x1094>
   11fe8:	push	{r4, r5, r6, lr}
   11fec:	ldrb	r4, [r1, #16]
   11ff0:	cmp	r4, #0
   11ff4:	bne	12020 <strspn@plt+0x111c>
   11ff8:	vmov	s15, r0
   11ffc:	vldr	s14, [r1, #8]
   12000:	vcvt.f32.u32	s13, s15
   12004:	vdiv.f32	s15, s13, s14
   12008:	vldr	s14, [pc, #156]	; 120ac <strspn@plt+0x11a8>
   1200c:	vcmpe.f32	s15, s14
   12010:	vmrs	APSR_nzcv, fpscr
   12014:	bge	12078 <strspn@plt+0x1174>
   12018:	vcvt.u32.f32	s15, s15
   1201c:	vmov	r0, s15
   12020:	cmp	r0, #10
   12024:	movcc	r0, #10
   12028:	orr	r4, r0, #1
   1202c:	cmn	r4, #1
   12030:	beq	12058 <strspn@plt+0x1154>
   12034:	mov	r6, #9
   12038:	mov	r5, #3
   1203c:	cmp	r4, r6
   12040:	bhi	12088 <strspn@plt+0x1184>
   12044:	mov	r1, r5
   12048:	mov	r0, r4
   1204c:	bl	154e8 <strspn@plt+0x45e4>
   12050:	cmp	r1, #0
   12054:	beq	12080 <strspn@plt+0x117c>
   12058:	lsrs	r3, r4, #30
   1205c:	movne	r3, #1
   12060:	moveq	r3, #0
   12064:	tst	r4, #536870912	; 0x20000000
   12068:	bne	12074 <strspn@plt+0x1170>
   1206c:	cmp	r3, #0
   12070:	beq	12078 <strspn@plt+0x1174>
   12074:	mov	r4, #0
   12078:	mov	r0, r4
   1207c:	pop	{r4, r5, r6, pc}
   12080:	add	r4, r4, #2
   12084:	b	1202c <strspn@plt+0x1128>
   12088:	mov	r1, r5
   1208c:	mov	r0, r4
   12090:	bl	154e8 <strspn@plt+0x45e4>
   12094:	cmp	r1, #0
   12098:	beq	12044 <strspn@plt+0x1140>
   1209c:	add	r3, r5, #1
   120a0:	add	r5, r5, #2
   120a4:	add	r6, r6, r3, lsl #2
   120a8:	b	1203c <strspn@plt+0x1138>
   120ac:	svcmi	0x00800000
   120b0:	ldr	r3, [r0]
   120b4:	ldr	r2, [pc, #160]	; 1215c <strspn@plt+0x1258>
   120b8:	cmp	r3, r2
   120bc:	beq	12144 <strspn@plt+0x1240>
   120c0:	vldr	s14, [r3, #8]
   120c4:	vldr	s13, [pc, #128]	; 1214c <strspn@plt+0x1248>
   120c8:	vcmpe.f32	s14, s13
   120cc:	vmrs	APSR_nzcv, fpscr
   120d0:	ble	12138 <strspn@plt+0x1234>
   120d4:	vldr	s15, [pc, #116]	; 12150 <strspn@plt+0x124c>
   120d8:	vcmpe.f32	s14, s15
   120dc:	vmrs	APSR_nzcv, fpscr
   120e0:	bpl	12138 <strspn@plt+0x1234>
   120e4:	vldr	s12, [r3, #12]
   120e8:	vldr	s15, [pc, #100]	; 12154 <strspn@plt+0x1250>
   120ec:	vcmpe.f32	s12, s15
   120f0:	vmrs	APSR_nzcv, fpscr
   120f4:	ble	12138 <strspn@plt+0x1234>
   120f8:	vldr	s15, [r3]
   120fc:	vcmpe.f32	s15, #0.0
   12100:	vmrs	APSR_nzcv, fpscr
   12104:	blt	12138 <strspn@plt+0x1234>
   12108:	vadd.f32	s15, s15, s13
   1210c:	vldr	s13, [r3, #4]
   12110:	vcmpe.f32	s15, s13
   12114:	vmrs	APSR_nzcv, fpscr
   12118:	bpl	12138 <strspn@plt+0x1234>
   1211c:	vldr	s12, [pc, #52]	; 12158 <strspn@plt+0x1254>
   12120:	vcmpe.f32	s13, s12
   12124:	vmrs	APSR_nzcv, fpscr
   12128:	bhi	12138 <strspn@plt+0x1234>
   1212c:	vcmpe.f32	s14, s15
   12130:	vmrs	APSR_nzcv, fpscr
   12134:	bgt	12144 <strspn@plt+0x1240>
   12138:	str	r2, [r0]
   1213c:	mov	r0, #0
   12140:	bx	lr
   12144:	mov	r0, #1
   12148:	bx	lr
   1214c:	stclcc	12, cr12, [ip, #820]	; 0x334
   12150:	svccc	0x00666666
   12154:	svccc	0x008ccccd
   12158:	svccc	0x00800000
   1215c:	andeq	r6, r1, r8, lsr #2
   12160:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12164:	mov	r5, r0
   12168:	ldr	r4, [r1]
   1216c:	mov	r7, r1
   12170:	mov	r8, r2
   12174:	add	r4, r4, #8
   12178:	mov	r9, #0
   1217c:	mov	sl, #8
   12180:	ldr	r2, [r7, #4]
   12184:	sub	r3, r4, #8
   12188:	cmp	r2, r3
   1218c:	bhi	1219c <strspn@plt+0x1298>
   12190:	mov	r8, #1
   12194:	mov	r0, r8
   12198:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1219c:	ldr	r3, [r4, #-8]
   121a0:	cmp	r3, #0
   121a4:	ldrne	r6, [r4, #-4]
   121a8:	bne	12200 <strspn@plt+0x12fc>
   121ac:	add	r4, r4, #8
   121b0:	b	12180 <strspn@plt+0x127c>
   121b4:	ldr	fp, [r6]
   121b8:	mov	r0, r5
   121bc:	mov	r1, fp
   121c0:	bl	11ed4 <strspn@plt+0xfd0>
   121c4:	ldr	r1, [r6, #4]
   121c8:	ldr	r2, [r0]
   121cc:	cmp	r2, #0
   121d0:	streq	fp, [r0]
   121d4:	ldreq	r3, [r5, #12]
   121d8:	ldrne	r3, [r0, #4]
   121dc:	addeq	r3, r3, #1
   121e0:	streq	r3, [r5, #12]
   121e4:	streq	r2, [r6]
   121e8:	ldreq	r3, [r5, #36]	; 0x24
   121ec:	strne	r3, [r6, #4]
   121f0:	streq	r3, [r6, #4]
   121f4:	strne	r6, [r0, #4]
   121f8:	streq	r6, [r5, #36]	; 0x24
   121fc:	mov	r6, r1
   12200:	cmp	r6, #0
   12204:	bne	121b4 <strspn@plt+0x12b0>
   12208:	cmp	r8, #0
   1220c:	ldr	fp, [r4, #-8]
   12210:	str	r6, [r4, #-4]
   12214:	bne	121ac <strspn@plt+0x12a8>
   12218:	mov	r1, fp
   1221c:	mov	r0, r5
   12220:	bl	11ed4 <strspn@plt+0xfd0>
   12224:	ldr	r3, [r0]
   12228:	mov	r6, r0
   1222c:	cmp	r3, #0
   12230:	beq	1227c <strspn@plt+0x1378>
   12234:	ldr	r0, [r5, #36]	; 0x24
   12238:	cmp	r0, #0
   1223c:	ldrne	r3, [r0, #4]
   12240:	strne	r3, [r5, #36]	; 0x24
   12244:	bne	12258 <strspn@plt+0x1354>
   12248:	mov	r0, sl
   1224c:	bl	14e88 <strspn@plt+0x3f84>
   12250:	cmp	r0, #0
   12254:	beq	12194 <strspn@plt+0x1290>
   12258:	ldr	r3, [r6, #4]
   1225c:	str	fp, [r0]
   12260:	str	r3, [r0, #4]
   12264:	str	r0, [r6, #4]
   12268:	ldr	r3, [r7, #12]
   1226c:	str	r9, [r4, #-8]
   12270:	sub	r3, r3, #1
   12274:	str	r3, [r7, #12]
   12278:	b	121ac <strspn@plt+0x12a8>
   1227c:	ldr	r3, [r5, #12]
   12280:	str	fp, [r0]
   12284:	add	r3, r3, #1
   12288:	str	r3, [r5, #12]
   1228c:	b	12268 <strspn@plt+0x1364>
   12290:	ldr	r0, [r0, #8]
   12294:	bx	lr
   12298:	ldr	r0, [r0, #12]
   1229c:	bx	lr
   122a0:	ldr	r0, [r0, #16]
   122a4:	bx	lr
   122a8:	ldm	r0, {r3, ip}
   122ac:	mov	r0, #0
   122b0:	cmp	r3, ip
   122b4:	bcc	122bc <strspn@plt+0x13b8>
   122b8:	bx	lr
   122bc:	ldr	r2, [r3]
   122c0:	cmp	r2, #0
   122c4:	movne	r1, r3
   122c8:	movne	r2, #1
   122cc:	bne	122dc <strspn@plt+0x13d8>
   122d0:	add	r3, r3, #8
   122d4:	b	122b0 <strspn@plt+0x13ac>
   122d8:	add	r2, r2, #1
   122dc:	ldr	r1, [r1, #4]
   122e0:	cmp	r1, #0
   122e4:	bne	122d8 <strspn@plt+0x13d4>
   122e8:	cmp	r0, r2
   122ec:	movcc	r0, r2
   122f0:	b	122d0 <strspn@plt+0x13cc>
   122f4:	push	{lr}		; (str lr, [sp, #-4]!)
   122f8:	mov	r3, #0
   122fc:	ldm	r0, {r2, lr}
   12300:	mov	r1, r3
   12304:	cmp	r2, lr
   12308:	bcc	1232c <strspn@plt+0x1428>
   1230c:	ldr	r2, [r0, #12]
   12310:	cmp	r1, r2
   12314:	ldreq	r0, [r0, #16]
   12318:	subeq	r0, r0, r3
   1231c:	clzeq	r0, r0
   12320:	lsreq	r0, r0, #5
   12324:	movne	r0, #0
   12328:	pop	{pc}		; (ldr pc, [sp], #4)
   1232c:	ldr	ip, [r2]
   12330:	cmp	ip, #0
   12334:	addne	r1, r1, #1
   12338:	addne	r3, r3, #1
   1233c:	movne	ip, r2
   12340:	bne	12350 <strspn@plt+0x144c>
   12344:	add	r2, r2, #8
   12348:	b	12304 <strspn@plt+0x1400>
   1234c:	add	r3, r3, #1
   12350:	ldr	ip, [ip, #4]
   12354:	cmp	ip, #0
   12358:	bne	1234c <strspn@plt+0x1448>
   1235c:	b	12344 <strspn@plt+0x1440>
   12360:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   12364:	mov	r4, r1
   12368:	ldr	r5, [r0, #8]
   1236c:	ldr	r7, [r0, #12]
   12370:	mov	r6, r0
   12374:	bl	122a8 <strspn@plt+0x13a4>
   12378:	ldr	r3, [r6, #16]
   1237c:	ldr	r2, [pc, #124]	; 12400 <strspn@plt+0x14fc>
   12380:	mov	r1, #1
   12384:	mov	r8, r0
   12388:	mov	r0, r4
   1238c:	bl	10e74 <__fprintf_chk@plt>
   12390:	mov	r3, r5
   12394:	ldr	r2, [pc, #104]	; 12404 <strspn@plt+0x1500>
   12398:	mov	r1, #1
   1239c:	mov	r0, r4
   123a0:	bl	10e74 <__fprintf_chk@plt>
   123a4:	vmov	s15, r7
   123a8:	mov	r3, r7
   123ac:	ldr	r2, [pc, #84]	; 12408 <strspn@plt+0x1504>
   123b0:	mov	r1, #1
   123b4:	vcvt.f64.u32	d6, s15
   123b8:	vldr	d7, [pc, #56]	; 123f8 <strspn@plt+0x14f4>
   123bc:	mov	r0, r4
   123c0:	vmul.f64	d6, d6, d7
   123c4:	vmov	s15, r5
   123c8:	vcvt.f64.u32	d7, s15
   123cc:	vdiv.f64	d5, d6, d7
   123d0:	vstr	d5, [sp]
   123d4:	bl	10e74 <__fprintf_chk@plt>
   123d8:	mov	r3, r8
   123dc:	ldr	r2, [pc, #40]	; 1240c <strspn@plt+0x1508>
   123e0:	mov	r1, #1
   123e4:	mov	r0, r4
   123e8:	add	sp, sp, #8
   123ec:	pop	{r4, r5, r6, r7, r8, lr}
   123f0:	b	10e74 <__fprintf_chk@plt>
   123f4:	nop			; (mov r0, r0)
   123f8:	andeq	r0, r0, r0
   123fc:	subsmi	r0, r9, r0
   12400:	andeq	r6, r1, ip, lsr r1
   12404:	andeq	r6, r1, r4, asr r1
   12408:	andeq	r6, r1, ip, ror #2
   1240c:	andeq	r6, r1, sp, lsl #3
   12410:	push	{r4, r5, r6, lr}
   12414:	mov	r6, r0
   12418:	mov	r5, r1
   1241c:	bl	11ed4 <strspn@plt+0xfd0>
   12420:	ldr	r3, [r0]
   12424:	cmp	r3, #0
   12428:	movne	r4, r0
   1242c:	bne	12458 <strspn@plt+0x1554>
   12430:	mov	r0, #0
   12434:	pop	{r4, r5, r6, pc}
   12438:	ldr	r3, [r6, #28]
   1243c:	mov	r0, r5
   12440:	blx	r3
   12444:	cmp	r0, #0
   12448:	bne	12464 <strspn@plt+0x1560>
   1244c:	ldr	r4, [r4, #4]
   12450:	cmp	r4, #0
   12454:	beq	12430 <strspn@plt+0x152c>
   12458:	ldr	r1, [r4]
   1245c:	cmp	r5, r1
   12460:	bne	12438 <strspn@plt+0x1534>
   12464:	ldr	r0, [r4]
   12468:	pop	{r4, r5, r6, pc}
   1246c:	ldr	r3, [r0, #16]
   12470:	cmp	r3, #0
   12474:	beq	124a4 <strspn@plt+0x15a0>
   12478:	ldr	r3, [r0]
   1247c:	ldr	r2, [r0, #4]
   12480:	cmp	r3, r2
   12484:	bcc	12490 <strspn@plt+0x158c>
   12488:	push	{r4, lr}
   1248c:	bl	10eec <abort@plt>
   12490:	ldr	r0, [r3]
   12494:	cmp	r0, #0
   12498:	bne	124a8 <strspn@plt+0x15a4>
   1249c:	add	r3, r3, #8
   124a0:	b	12480 <strspn@plt+0x157c>
   124a4:	mov	r0, r3
   124a8:	bx	lr
   124ac:	push	{r4, r5, r6, lr}
   124b0:	mov	r4, r0
   124b4:	mov	r5, r1
   124b8:	bl	11ed4 <strspn@plt+0xfd0>
   124bc:	mov	r2, r0
   124c0:	mov	r3, r0
   124c4:	ldr	r1, [r3]
   124c8:	ldr	r3, [r3, #4]
   124cc:	cmp	r5, r1
   124d0:	bne	124e4 <strspn@plt+0x15e0>
   124d4:	cmp	r3, #0
   124d8:	beq	124e4 <strspn@plt+0x15e0>
   124dc:	ldr	r0, [r3]
   124e0:	pop	{r4, r5, r6, pc}
   124e4:	cmp	r3, #0
   124e8:	bne	124c4 <strspn@plt+0x15c0>
   124ec:	ldr	r3, [r4, #4]
   124f0:	add	r2, r2, #8
   124f4:	cmp	r2, r3
   124f8:	bcc	12504 <strspn@plt+0x1600>
   124fc:	mov	r0, #0
   12500:	pop	{r4, r5, r6, pc}
   12504:	ldr	r0, [r2]
   12508:	cmp	r0, #0
   1250c:	beq	124f0 <strspn@plt+0x15ec>
   12510:	pop	{r4, r5, r6, pc}
   12514:	ldr	ip, [r0]
   12518:	mov	r3, #0
   1251c:	push	{r4, r5, lr}
   12520:	ldr	lr, [r0, #4]
   12524:	cmp	ip, lr
   12528:	bcc	12534 <strspn@plt+0x1630>
   1252c:	mov	r0, r3
   12530:	pop	{r4, r5, pc}
   12534:	ldr	lr, [ip]
   12538:	cmp	lr, #0
   1253c:	beq	12568 <strspn@plt+0x1664>
   12540:	add	r4, r1, r3, lsl #2
   12544:	mov	lr, ip
   12548:	cmp	r2, r3
   1254c:	bls	1252c <strspn@plt+0x1628>
   12550:	ldr	r5, [lr]
   12554:	add	r3, r3, #1
   12558:	str	r5, [r4], #4
   1255c:	ldr	lr, [lr, #4]
   12560:	cmp	lr, #0
   12564:	bne	12548 <strspn@plt+0x1644>
   12568:	add	ip, ip, #8
   1256c:	b	12520 <strspn@plt+0x161c>
   12570:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12574:	mov	r7, r0
   12578:	ldr	r4, [r0]
   1257c:	mov	r8, r1
   12580:	mov	r9, r2
   12584:	mov	r6, #0
   12588:	ldr	r3, [r7, #4]
   1258c:	cmp	r4, r3
   12590:	bcc	1259c <strspn@plt+0x1698>
   12594:	mov	r0, r6
   12598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1259c:	ldr	r3, [r4]
   125a0:	cmp	r3, #0
   125a4:	beq	125d0 <strspn@plt+0x16cc>
   125a8:	mov	r5, r4
   125ac:	mov	r1, r9
   125b0:	ldr	r0, [r5]
   125b4:	blx	r8
   125b8:	cmp	r0, #0
   125bc:	beq	12594 <strspn@plt+0x1690>
   125c0:	ldr	r5, [r5, #4]
   125c4:	add	r6, r6, #1
   125c8:	cmp	r5, #0
   125cc:	bne	125ac <strspn@plt+0x16a8>
   125d0:	add	r4, r4, #8
   125d4:	b	12588 <strspn@plt+0x1684>
   125d8:	push	{r4, r5, r6, lr}
   125dc:	sub	r4, r0, #1
   125e0:	mov	r5, r1
   125e4:	mov	r0, #0
   125e8:	mov	r6, #31
   125ec:	ldrb	r3, [r4, #1]!
   125f0:	cmp	r3, #0
   125f4:	bne	125fc <strspn@plt+0x16f8>
   125f8:	pop	{r4, r5, r6, pc}
   125fc:	mov	r1, r5
   12600:	mla	r0, r6, r0, r3
   12604:	bl	154e8 <strspn@plt+0x45e4>
   12608:	mov	r0, r1
   1260c:	b	125ec <strspn@plt+0x16e8>
   12610:	push	{lr}		; (str lr, [sp, #-4]!)
   12614:	mov	ip, r0
   12618:	ldr	lr, [pc, #16]	; 12630 <strspn@plt+0x172c>
   1261c:	ldm	lr!, {r0, r1, r2, r3}
   12620:	stmia	ip!, {r0, r1, r2, r3}
   12624:	ldr	r3, [lr]
   12628:	str	r3, [ip]
   1262c:	pop	{pc}		; (ldr pc, [sp], #4)
   12630:	andeq	r6, r1, r8, lsr #2
   12634:	cmp	r2, #0
   12638:	push	{r4, r5, r6, r7, r8, lr}
   1263c:	mov	r8, r0
   12640:	ldr	r7, [pc, #176]	; 126f8 <strspn@plt+0x17f4>
   12644:	mov	r0, #40	; 0x28
   12648:	movne	r7, r2
   1264c:	cmp	r3, #0
   12650:	mov	r5, r1
   12654:	ldr	r6, [pc, #160]	; 126fc <strspn@plt+0x17f8>
   12658:	movne	r6, r3
   1265c:	bl	14e88 <strspn@plt+0x3f84>
   12660:	subs	r4, r0, #0
   12664:	beq	126e0 <strspn@plt+0x17dc>
   12668:	ldr	r3, [pc, #144]	; 12700 <strspn@plt+0x17fc>
   1266c:	cmp	r5, #0
   12670:	mov	r0, r4
   12674:	moveq	r5, r3
   12678:	str	r5, [r0, #20]!
   1267c:	bl	120b0 <strspn@plt+0x11ac>
   12680:	cmp	r0, #0
   12684:	beq	126e8 <strspn@plt+0x17e4>
   12688:	mov	r1, r5
   1268c:	mov	r0, r8
   12690:	bl	11fe8 <strspn@plt+0x10e4>
   12694:	cmp	r0, #0
   12698:	str	r0, [r4, #8]
   1269c:	beq	126e8 <strspn@plt+0x17e4>
   126a0:	mov	r1, #8
   126a4:	bl	14e40 <strspn@plt+0x3f3c>
   126a8:	cmp	r0, #0
   126ac:	str	r0, [r4]
   126b0:	beq	126e8 <strspn@plt+0x17e4>
   126b4:	ldr	r3, [r4, #8]
   126b8:	ldr	r2, [sp, #24]
   126bc:	str	r7, [r4, #24]
   126c0:	add	r0, r0, r3, lsl #3
   126c4:	mov	r3, #0
   126c8:	str	r0, [r4, #4]
   126cc:	str	r3, [r4, #12]
   126d0:	str	r3, [r4, #16]
   126d4:	str	r6, [r4, #28]
   126d8:	str	r2, [r4, #32]
   126dc:	str	r3, [r4, #36]	; 0x24
   126e0:	mov	r0, r4
   126e4:	pop	{r4, r5, r6, r7, r8, pc}
   126e8:	mov	r0, r4
   126ec:	bl	11e5c <strspn@plt+0xf58>
   126f0:	mov	r4, #0
   126f4:	b	126e0 <strspn@plt+0x17dc>
   126f8:			; <UNDEFINED> instruction: 0x00011eb0
   126fc:	andeq	r1, r1, r4, asr #29
   12700:	andeq	r6, r1, r8, lsr #2
   12704:	push	{r4, r5, r6, r7, r8, lr}
   12708:	mov	r5, r0
   1270c:	ldr	r4, [r0]
   12710:	mov	r7, #0
   12714:	add	r4, r4, #8
   12718:	ldr	r2, [r5, #4]
   1271c:	sub	r3, r4, #8
   12720:	cmp	r2, r3
   12724:	bhi	12738 <strspn@plt+0x1834>
   12728:	mov	r3, #0
   1272c:	str	r3, [r5, #12]
   12730:	str	r3, [r5, #16]
   12734:	pop	{r4, r5, r6, r7, r8, pc}
   12738:	ldr	r3, [r4, #-8]
   1273c:	cmp	r3, #0
   12740:	ldrne	r6, [r4, #-4]
   12744:	bne	12778 <strspn@plt+0x1874>
   12748:	add	r4, r4, #8
   1274c:	b	12718 <strspn@plt+0x1814>
   12750:	cmp	r3, #0
   12754:	beq	12760 <strspn@plt+0x185c>
   12758:	ldr	r0, [r6]
   1275c:	blx	r3
   12760:	ldr	r3, [r6, #4]
   12764:	ldr	r2, [r5, #36]	; 0x24
   12768:	str	r7, [r6]
   1276c:	str	r2, [r6, #4]
   12770:	str	r6, [r5, #36]	; 0x24
   12774:	mov	r6, r3
   12778:	cmp	r6, #0
   1277c:	ldr	r3, [r5, #32]
   12780:	bne	12750 <strspn@plt+0x184c>
   12784:	cmp	r3, #0
   12788:	beq	12794 <strspn@plt+0x1890>
   1278c:	ldr	r0, [r4, #-8]
   12790:	blx	r3
   12794:	str	r7, [r4, #-8]
   12798:	str	r7, [r4, #-4]
   1279c:	b	12748 <strspn@plt+0x1844>
   127a0:	ldr	r3, [r0, #32]
   127a4:	push	{r4, r5, r6, lr}
   127a8:	cmp	r3, #0
   127ac:	mov	r4, r0
   127b0:	bne	127e4 <strspn@plt+0x18e0>
   127b4:	ldr	r5, [r4]
   127b8:	ldr	r3, [r4, #4]
   127bc:	cmp	r5, r3
   127c0:	bcc	12834 <strspn@plt+0x1930>
   127c4:	ldr	r0, [r4, #36]	; 0x24
   127c8:	cmp	r0, #0
   127cc:	bne	12854 <strspn@plt+0x1950>
   127d0:	ldr	r0, [r4]
   127d4:	bl	11e5c <strspn@plt+0xf58>
   127d8:	mov	r0, r4
   127dc:	pop	{r4, r5, r6, lr}
   127e0:	b	11e5c <strspn@plt+0xf58>
   127e4:	ldr	r3, [r0, #16]
   127e8:	cmp	r3, #0
   127ec:	ldrne	r5, [r0]
   127f0:	beq	127b4 <strspn@plt+0x18b0>
   127f4:	ldr	r3, [r4, #4]
   127f8:	cmp	r5, r3
   127fc:	bcs	127b4 <strspn@plt+0x18b0>
   12800:	ldr	r3, [r5]
   12804:	cmp	r3, #0
   12808:	movne	r6, r5
   1280c:	bne	12818 <strspn@plt+0x1914>
   12810:	add	r5, r5, #8
   12814:	b	127f4 <strspn@plt+0x18f0>
   12818:	ldr	r0, [r6]
   1281c:	ldr	r3, [r4, #32]
   12820:	blx	r3
   12824:	ldr	r6, [r6, #4]
   12828:	cmp	r6, #0
   1282c:	bne	12818 <strspn@plt+0x1914>
   12830:	b	12810 <strspn@plt+0x190c>
   12834:	ldr	r0, [r5, #4]
   12838:	cmp	r0, #0
   1283c:	addeq	r5, r5, #8
   12840:	beq	127b8 <strspn@plt+0x18b4>
   12844:	ldr	r6, [r0, #4]
   12848:	bl	11e5c <strspn@plt+0xf58>
   1284c:	mov	r0, r6
   12850:	b	12838 <strspn@plt+0x1934>
   12854:	ldr	r5, [r0, #4]
   12858:	bl	11e5c <strspn@plt+0xf58>
   1285c:	mov	r0, r5
   12860:	b	127c8 <strspn@plt+0x18c4>
   12864:	push	{r4, r5, lr}
   12868:	mov	r4, r0
   1286c:	sub	sp, sp, #44	; 0x2c
   12870:	mov	r0, r1
   12874:	ldr	r1, [r4, #20]
   12878:	bl	11fe8 <strspn@plt+0x10e4>
   1287c:	subs	r5, r0, #0
   12880:	bne	12894 <strspn@plt+0x1990>
   12884:	mov	r5, #0
   12888:	mov	r0, r5
   1288c:	add	sp, sp, #44	; 0x2c
   12890:	pop	{r4, r5, pc}
   12894:	ldr	r3, [r4, #8]
   12898:	cmp	r5, r3
   1289c:	beq	12984 <strspn@plt+0x1a80>
   128a0:	mov	r1, #8
   128a4:	bl	14e40 <strspn@plt+0x3f3c>
   128a8:	cmp	r0, #0
   128ac:	str	r0, [sp]
   128b0:	beq	12884 <strspn@plt+0x1980>
   128b4:	ldr	r3, [r4, #20]
   128b8:	add	r0, r0, r5, lsl #3
   128bc:	str	r3, [sp, #20]
   128c0:	ldr	r3, [r4, #24]
   128c4:	mov	r2, #0
   128c8:	str	r3, [sp, #24]
   128cc:	ldr	r3, [r4, #28]
   128d0:	str	r0, [sp, #4]
   128d4:	str	r3, [sp, #28]
   128d8:	ldr	r3, [r4, #32]
   128dc:	mov	r1, r4
   128e0:	str	r3, [sp, #32]
   128e4:	ldr	r3, [r4, #36]	; 0x24
   128e8:	mov	r0, sp
   128ec:	str	r5, [sp, #8]
   128f0:	str	r2, [sp, #12]
   128f4:	str	r2, [sp, #16]
   128f8:	str	r3, [sp, #36]	; 0x24
   128fc:	bl	12160 <strspn@plt+0x125c>
   12900:	subs	r5, r0, #0
   12904:	beq	1293c <strspn@plt+0x1a38>
   12908:	ldr	r0, [r4]
   1290c:	bl	11e5c <strspn@plt+0xf58>
   12910:	ldr	r3, [sp]
   12914:	str	r3, [r4]
   12918:	ldr	r3, [sp, #4]
   1291c:	str	r3, [r4, #4]
   12920:	ldr	r3, [sp, #8]
   12924:	str	r3, [r4, #8]
   12928:	ldr	r3, [sp, #12]
   1292c:	str	r3, [r4, #12]
   12930:	ldr	r3, [sp, #36]	; 0x24
   12934:	str	r3, [r4, #36]	; 0x24
   12938:	b	12888 <strspn@plt+0x1984>
   1293c:	ldr	r3, [sp, #36]	; 0x24
   12940:	mov	r2, #1
   12944:	str	r3, [r4, #36]	; 0x24
   12948:	mov	r1, sp
   1294c:	mov	r0, r4
   12950:	bl	12160 <strspn@plt+0x125c>
   12954:	cmp	r0, #0
   12958:	bne	12960 <strspn@plt+0x1a5c>
   1295c:	bl	10eec <abort@plt>
   12960:	mov	r2, r5
   12964:	mov	r1, sp
   12968:	mov	r0, r4
   1296c:	bl	12160 <strspn@plt+0x125c>
   12970:	cmp	r0, #0
   12974:	beq	1295c <strspn@plt+0x1a58>
   12978:	ldr	r0, [sp]
   1297c:	bl	11e5c <strspn@plt+0xf58>
   12980:	b	12888 <strspn@plt+0x1984>
   12984:	mov	r5, #1
   12988:	b	12888 <strspn@plt+0x1984>
   1298c:	push	{r0, r1, r4, r5, r6, lr}
   12990:	subs	r6, r1, #0
   12994:	bne	1299c <strspn@plt+0x1a98>
   12998:	bl	10eec <abort@plt>
   1299c:	mov	r5, r2
   129a0:	mov	r3, #0
   129a4:	add	r2, sp, #4
   129a8:	mov	r4, r0
   129ac:	bl	11f08 <strspn@plt+0x1004>
   129b0:	cmp	r0, #0
   129b4:	beq	129cc <strspn@plt+0x1ac8>
   129b8:	cmp	r5, #0
   129bc:	strne	r0, [r5]
   129c0:	movne	r0, #0
   129c4:	moveq	r0, r5
   129c8:	b	12a4c <strspn@plt+0x1b48>
   129cc:	vldr	s15, [r4, #12]
   129d0:	ldr	r3, [r4, #20]
   129d4:	vcvt.f32.u32	s14, s15
   129d8:	vldr	s15, [r4, #8]
   129dc:	vldr	s13, [r3, #8]
   129e0:	vcvt.f32.u32	s15, s15
   129e4:	vmul.f32	s15, s15, s13
   129e8:	vcmpe.f32	s14, s15
   129ec:	vmrs	APSR_nzcv, fpscr
   129f0:	ble	12a88 <strspn@plt+0x1b84>
   129f4:	add	r0, r4, #20
   129f8:	bl	120b0 <strspn@plt+0x11ac>
   129fc:	vldr	s15, [r4, #8]
   12a00:	ldr	r3, [r4, #20]
   12a04:	vldr	s14, [r4, #12]
   12a08:	vcvt.f32.u32	s15, s15
   12a0c:	vldr	s13, [r3, #8]
   12a10:	vcvt.f32.u32	s14, s14
   12a14:	vmul.f32	s12, s13, s15
   12a18:	vcmpe.f32	s14, s12
   12a1c:	vmrs	APSR_nzcv, fpscr
   12a20:	ble	12a88 <strspn@plt+0x1b84>
   12a24:	vldr	s14, [r3, #12]
   12a28:	ldrb	r2, [r3, #16]
   12a2c:	vmul.f32	s15, s15, s14
   12a30:	cmp	r2, #0
   12a34:	vldr	s14, [pc, #200]	; 12b04 <strspn@plt+0x1c00>
   12a38:	vmuleq.f32	s15, s15, s13
   12a3c:	vcmpe.f32	s15, s14
   12a40:	vmrs	APSR_nzcv, fpscr
   12a44:	blt	12a54 <strspn@plt+0x1b50>
   12a48:	mvn	r0, #0
   12a4c:	add	sp, sp, #8
   12a50:	pop	{r4, r5, r6, pc}
   12a54:	vcvt.u32.f32	s15, s15
   12a58:	mov	r0, r4
   12a5c:	vmov	r1, s15
   12a60:	bl	12864 <strspn@plt+0x1960>
   12a64:	cmp	r0, #0
   12a68:	beq	12a48 <strspn@plt+0x1b44>
   12a6c:	mov	r3, #0
   12a70:	add	r2, sp, #4
   12a74:	mov	r1, r6
   12a78:	mov	r0, r4
   12a7c:	bl	11f08 <strspn@plt+0x1004>
   12a80:	cmp	r0, #0
   12a84:	bne	12998 <strspn@plt+0x1a94>
   12a88:	ldr	r3, [sp, #4]
   12a8c:	ldr	r2, [r3]
   12a90:	cmp	r2, #0
   12a94:	beq	12ae4 <strspn@plt+0x1be0>
   12a98:	ldr	r0, [r4, #36]	; 0x24
   12a9c:	cmp	r0, #0
   12aa0:	ldrne	r3, [r0, #4]
   12aa4:	strne	r3, [r4, #36]	; 0x24
   12aa8:	bne	12abc <strspn@plt+0x1bb8>
   12aac:	mov	r0, #8
   12ab0:	bl	14e88 <strspn@plt+0x3f84>
   12ab4:	cmp	r0, #0
   12ab8:	beq	12a48 <strspn@plt+0x1b44>
   12abc:	ldr	r3, [sp, #4]
   12ac0:	str	r6, [r0]
   12ac4:	ldr	r2, [r3, #4]
   12ac8:	str	r2, [r0, #4]
   12acc:	str	r0, [r3, #4]
   12ad0:	ldr	r3, [r4, #16]
   12ad4:	add	r3, r3, #1
   12ad8:	str	r3, [r4, #16]
   12adc:	mov	r0, #1
   12ae0:	b	12a4c <strspn@plt+0x1b48>
   12ae4:	str	r6, [r3]
   12ae8:	ldr	r3, [r4, #16]
   12aec:	add	r3, r3, #1
   12af0:	str	r3, [r4, #16]
   12af4:	ldr	r3, [r4, #12]
   12af8:	add	r3, r3, #1
   12afc:	str	r3, [r4, #12]
   12b00:	b	12adc <strspn@plt+0x1bd8>
   12b04:	svcmi	0x00800000
   12b08:	push	{r0, r1, r4, lr}
   12b0c:	add	r2, sp, #4
   12b10:	mov	r4, r1
   12b14:	bl	1298c <strspn@plt+0x1a88>
   12b18:	cmn	r0, #1
   12b1c:	moveq	r0, #0
   12b20:	beq	12b30 <strspn@plt+0x1c2c>
   12b24:	cmp	r0, #0
   12b28:	movne	r0, r4
   12b2c:	ldreq	r0, [sp, #4]
   12b30:	add	sp, sp, #8
   12b34:	pop	{r4, pc}
   12b38:	push	{r0, r1, r4, r5, r6, lr}
   12b3c:	mov	r3, #1
   12b40:	add	r2, sp, #4
   12b44:	mov	r4, r0
   12b48:	bl	11f08 <strspn@plt+0x1004>
   12b4c:	subs	r5, r0, #0
   12b50:	beq	12c08 <strspn@plt+0x1d04>
   12b54:	ldr	r3, [r4, #16]
   12b58:	sub	r3, r3, #1
   12b5c:	str	r3, [r4, #16]
   12b60:	ldr	r3, [sp, #4]
   12b64:	ldr	r3, [r3]
   12b68:	cmp	r3, #0
   12b6c:	bne	12c08 <strspn@plt+0x1d04>
   12b70:	vldr	s14, [r4, #8]
   12b74:	ldr	r3, [r4, #12]
   12b78:	sub	r3, r3, #1
   12b7c:	vcvt.f32.u32	s14, s14
   12b80:	vmov	s15, r3
   12b84:	str	r3, [r4, #12]
   12b88:	ldr	r3, [r4, #20]
   12b8c:	vcvt.f32.u32	s15, s15
   12b90:	vldr	s13, [r3]
   12b94:	vmul.f32	s14, s14, s13
   12b98:	vcmpe.f32	s15, s14
   12b9c:	vmrs	APSR_nzcv, fpscr
   12ba0:	bpl	12c08 <strspn@plt+0x1d04>
   12ba4:	add	r0, r4, #20
   12ba8:	bl	120b0 <strspn@plt+0x11ac>
   12bac:	vldr	s15, [r4, #8]
   12bb0:	vldr	s14, [r4, #12]
   12bb4:	ldr	r3, [r4, #20]
   12bb8:	vcvt.f32.u32	s15, s15
   12bbc:	vcvt.f32.u32	s13, s14
   12bc0:	vldr	s14, [r3]
   12bc4:	vmul.f32	s14, s15, s14
   12bc8:	vcmpe.f32	s13, s14
   12bcc:	vmrs	APSR_nzcv, fpscr
   12bd0:	bpl	12c08 <strspn@plt+0x1d04>
   12bd4:	vldr	s14, [r3, #4]
   12bd8:	ldrb	r2, [r3, #16]
   12bdc:	mov	r0, r4
   12be0:	vmul.f32	s15, s15, s14
   12be4:	cmp	r2, #0
   12be8:	vldreq	s14, [r3, #8]
   12bec:	vmuleq.f32	s15, s15, s14
   12bf0:	vcvt.u32.f32	s15, s15
   12bf4:	vmov	r1, s15
   12bf8:	bl	12864 <strspn@plt+0x1960>
   12bfc:	cmp	r0, #0
   12c00:	ldreq	r0, [r4, #36]	; 0x24
   12c04:	beq	12c20 <strspn@plt+0x1d1c>
   12c08:	mov	r0, r5
   12c0c:	add	sp, sp, #8
   12c10:	pop	{r4, r5, r6, pc}
   12c14:	ldr	r6, [r0, #4]
   12c18:	bl	11e5c <strspn@plt+0xf58>
   12c1c:	mov	r0, r6
   12c20:	cmp	r0, #0
   12c24:	bne	12c14 <strspn@plt+0x1d10>
   12c28:	str	r0, [r4, #36]	; 0x24
   12c2c:	b	12c08 <strspn@plt+0x1d04>
   12c30:	b	12b38 <strspn@plt+0x1c34>
   12c34:	push	{r4, r5, r6, lr}
   12c38:	mov	r4, r0
   12c3c:	ldr	r0, [r0]
   12c40:	mov	r6, r1
   12c44:	bl	15120 <strspn@plt+0x421c>
   12c48:	ldrd	r4, [r4, #8]
   12c4c:	mov	r2, r6
   12c50:	mov	r3, #0
   12c54:	eor	r4, r4, r0
   12c58:	mov	r0, r4
   12c5c:	mov	r1, r5
   12c60:	bl	15748 <strspn@plt+0x4844>
   12c64:	mov	r0, r2
   12c68:	pop	{r4, r5, r6, pc}
   12c6c:	ldrd	r2, [r1, #8]
   12c70:	push	{r4, r5, r6, lr}
   12c74:	ldrd	r4, [r0, #8]
   12c78:	cmp	r5, r3
   12c7c:	cmpeq	r4, r2
   12c80:	bne	12cb0 <strspn@plt+0x1dac>
   12c84:	ldrd	r4, [r0, #16]
   12c88:	ldrd	r2, [r1, #16]
   12c8c:	cmp	r5, r3
   12c90:	cmpeq	r4, r2
   12c94:	bne	12cb0 <strspn@plt+0x1dac>
   12c98:	ldr	r1, [r1]
   12c9c:	ldr	r0, [r0]
   12ca0:	bl	10cac <strcmp@plt>
   12ca4:	clz	r0, r0
   12ca8:	lsr	r0, r0, #5
   12cac:	pop	{r4, r5, r6, pc}
   12cb0:	mov	r0, #0
   12cb4:	pop	{r4, r5, r6, pc}
   12cb8:	push	{r4, lr}
   12cbc:	mov	r4, r0
   12cc0:	ldr	r0, [r0]
   12cc4:	bl	11e5c <strspn@plt+0xf58>
   12cc8:	mov	r0, r4
   12ccc:	pop	{r4, lr}
   12cd0:	b	11e5c <strspn@plt+0xf58>
   12cd4:	push	{r4, r5, r6, lr}
   12cd8:	subs	r5, r0, #0
   12cdc:	bne	12cf4 <strspn@plt+0x1df0>
   12ce0:	ldr	r3, [pc, #124]	; 12d64 <strspn@plt+0x1e60>
   12ce4:	ldr	r0, [pc, #124]	; 12d68 <strspn@plt+0x1e64>
   12ce8:	ldr	r1, [r3]
   12cec:	bl	10ed4 <fputs@plt>
   12cf0:	bl	10eec <abort@plt>
   12cf4:	mov	r1, #47	; 0x2f
   12cf8:	bl	10ea4 <strrchr@plt>
   12cfc:	cmp	r0, #0
   12d00:	addne	r4, r0, #1
   12d04:	moveq	r4, r5
   12d08:	sub	r3, r4, r5
   12d0c:	cmp	r3, #6
   12d10:	ble	12d50 <strspn@plt+0x1e4c>
   12d14:	mov	r2, #7
   12d18:	ldr	r1, [pc, #76]	; 12d6c <strspn@plt+0x1e68>
   12d1c:	sub	r0, r4, #7
   12d20:	bl	10ee0 <strncmp@plt>
   12d24:	cmp	r0, #0
   12d28:	bne	12d50 <strspn@plt+0x1e4c>
   12d2c:	mov	r2, #3
   12d30:	ldr	r1, [pc, #56]	; 12d70 <strspn@plt+0x1e6c>
   12d34:	mov	r0, r4
   12d38:	bl	10ee0 <strncmp@plt>
   12d3c:	cmp	r0, #0
   12d40:	movne	r5, r4
   12d44:	ldreq	r3, [pc, #40]	; 12d74 <strspn@plt+0x1e70>
   12d48:	addeq	r5, r4, #3
   12d4c:	streq	r5, [r3]
   12d50:	ldr	r3, [pc, #32]	; 12d78 <strspn@plt+0x1e74>
   12d54:	str	r5, [r3]
   12d58:	ldr	r3, [pc, #28]	; 12d7c <strspn@plt+0x1e78>
   12d5c:	str	r5, [r3]
   12d60:	pop	{r4, r5, r6, pc}
   12d64:	andeq	r7, r2, r8, asr #2
   12d68:	andeq	r6, r1, r5, lsr #3
   12d6c:	ldrdeq	r6, [r1], -sp
   12d70:	andeq	r6, r1, r5, ror #3
   12d74:	andeq	r7, r2, r8, lsr r1
   12d78:	andeq	r7, r2, ip, asr r1
   12d7c:	andeq	r7, r2, ip, lsr r1
   12d80:	push	{r4, r5, r6, lr}
   12d84:	mov	r2, #48	; 0x30
   12d88:	mov	r5, r1
   12d8c:	mov	r1, #0
   12d90:	mov	r4, r0
   12d94:	bl	10e50 <memset@plt>
   12d98:	cmp	r5, #10
   12d9c:	bne	12da4 <strspn@plt+0x1ea0>
   12da0:	bl	10eec <abort@plt>
   12da4:	str	r5, [r4]
   12da8:	mov	r0, r4
   12dac:	pop	{r4, r5, r6, pc}
   12db0:	push	{r4, r5, r6, lr}
   12db4:	mov	r4, r0
   12db8:	mov	r5, r1
   12dbc:	bl	1514c <strspn@plt+0x4248>
   12dc0:	ldrb	r3, [r0]
   12dc4:	bic	r3, r3, #32
   12dc8:	cmp	r3, #85	; 0x55
   12dcc:	bne	12e3c <strspn@plt+0x1f38>
   12dd0:	ldrb	r3, [r0, #1]
   12dd4:	bic	r3, r3, #32
   12dd8:	cmp	r3, #84	; 0x54
   12ddc:	bne	12e14 <strspn@plt+0x1f10>
   12de0:	ldrb	r3, [r0, #2]
   12de4:	bic	r3, r3, #32
   12de8:	cmp	r3, #70	; 0x46
   12dec:	bne	12e14 <strspn@plt+0x1f10>
   12df0:	ldrb	r3, [r0, #3]
   12df4:	cmp	r3, #45	; 0x2d
   12df8:	bne	12e14 <strspn@plt+0x1f10>
   12dfc:	ldrb	r3, [r0, #4]
   12e00:	cmp	r3, #56	; 0x38
   12e04:	bne	12e14 <strspn@plt+0x1f10>
   12e08:	ldrb	r3, [r0, #5]
   12e0c:	cmp	r3, #0
   12e10:	beq	12e28 <strspn@plt+0x1f24>
   12e14:	ldr	r1, [pc, #144]	; 12eac <strspn@plt+0x1fa8>
   12e18:	ldr	r0, [pc, #144]	; 12eb0 <strspn@plt+0x1fac>
   12e1c:	cmp	r5, #9
   12e20:	movne	r0, r1
   12e24:	pop	{r4, r5, r6, pc}
   12e28:	ldrb	r3, [r4]
   12e2c:	ldr	r1, [pc, #128]	; 12eb4 <strspn@plt+0x1fb0>
   12e30:	ldr	r0, [pc, #128]	; 12eb8 <strspn@plt+0x1fb4>
   12e34:	cmp	r3, #96	; 0x60
   12e38:	b	12e20 <strspn@plt+0x1f1c>
   12e3c:	cmp	r3, #71	; 0x47
   12e40:	bne	12e14 <strspn@plt+0x1f10>
   12e44:	ldrb	r3, [r0, #1]
   12e48:	bic	r3, r3, #32
   12e4c:	cmp	r3, #66	; 0x42
   12e50:	bne	12e14 <strspn@plt+0x1f10>
   12e54:	ldrb	r3, [r0, #2]
   12e58:	cmp	r3, #49	; 0x31
   12e5c:	bne	12e14 <strspn@plt+0x1f10>
   12e60:	ldrb	r3, [r0, #3]
   12e64:	cmp	r3, #56	; 0x38
   12e68:	bne	12e14 <strspn@plt+0x1f10>
   12e6c:	ldrb	r3, [r0, #4]
   12e70:	cmp	r3, #48	; 0x30
   12e74:	bne	12e14 <strspn@plt+0x1f10>
   12e78:	ldrb	r3, [r0, #5]
   12e7c:	cmp	r3, #51	; 0x33
   12e80:	bne	12e14 <strspn@plt+0x1f10>
   12e84:	ldrb	r3, [r0, #6]
   12e88:	cmp	r3, #48	; 0x30
   12e8c:	bne	12e14 <strspn@plt+0x1f10>
   12e90:	ldrb	r3, [r0, #7]
   12e94:	cmp	r3, #0
   12e98:	bne	12e14 <strspn@plt+0x1f10>
   12e9c:	ldrb	r3, [r4]
   12ea0:	ldr	r1, [pc, #20]	; 12ebc <strspn@plt+0x1fb8>
   12ea4:	ldr	r0, [pc, #20]	; 12ec0 <strspn@plt+0x1fbc>
   12ea8:	b	12e34 <strspn@plt+0x1f30>
   12eac:	andeq	r6, r1, r1, asr r2
   12eb0:	andeq	r6, r1, pc, asr #4
   12eb4:	andeq	r6, r1, r4, asr #4
   12eb8:	andeq	r6, r1, r0, asr #4
   12ebc:	andeq	r6, r1, ip, asr #4
   12ec0:	andeq	r6, r1, r8, asr #4
   12ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ec8:	sub	sp, sp, #108	; 0x6c
   12ecc:	mov	r8, r0
   12ed0:	str	r3, [sp, #36]	; 0x24
   12ed4:	mov	r5, r1
   12ed8:	str	r2, [sp, #44]	; 0x2c
   12edc:	ldr	sl, [sp, #144]	; 0x90
   12ee0:	bl	10d78 <__ctype_get_mb_cur_max@plt>
   12ee4:	ldr	r3, [sp, #148]	; 0x94
   12ee8:	mov	r7, #0
   12eec:	str	r7, [sp, #48]	; 0x30
   12ef0:	lsr	r6, r3, #1
   12ef4:	and	r6, r6, #1
   12ef8:	mov	r3, #1
   12efc:	str	r3, [sp, #72]	; 0x48
   12f00:	str	r7, [sp, #24]
   12f04:	str	r7, [sp, #32]
   12f08:	str	r7, [sp, #40]	; 0x28
   12f0c:	str	r7, [sp, #60]	; 0x3c
   12f10:	str	r0, [sp, #76]	; 0x4c
   12f14:	cmp	sl, #10
   12f18:	ldrls	pc, [pc, sl, lsl #2]
   12f1c:	b	13158 <strspn@plt+0x2254>
   12f20:	andeq	r2, r1, ip, asr #30
   12f24:	andeq	r3, r1, r0, ror #23
   12f28:	andeq	r3, r1, r4, lsr #2
   12f2c:	andeq	r3, r1, r0, ror r1
   12f30:	andeq	r3, r1, r0, lsl #2
   12f34:	andeq	r2, r1, r8, asr pc
   12f38:	andeq	r3, r1, r0, asr #23
   12f3c:	andeq	r3, r1, ip, asr r1
   12f40:	andeq	r3, r1, r0, asr r0
   12f44:	andeq	r3, r1, r0, asr r0
   12f48:	andeq	r3, r1, r0, asr r0
   12f4c:	mov	r6, #0
   12f50:	mov	r4, #0
   12f54:	b	12f84 <strspn@plt+0x2080>
   12f58:	cmp	r6, #0
   12f5c:	bne	13180 <strspn@plt+0x227c>
   12f60:	cmp	r5, #0
   12f64:	movne	r3, #34	; 0x22
   12f68:	strbne	r3, [r8]
   12f6c:	mov	r3, #1
   12f70:	str	r3, [sp, #24]
   12f74:	str	r3, [sp, #32]
   12f78:	mov	r4, #1
   12f7c:	ldr	r3, [pc, #3172]	; 13be8 <strspn@plt+0x2ce4>
   12f80:	str	r3, [sp, #40]	; 0x28
   12f84:	mov	r9, r5
   12f88:	mov	r3, #0
   12f8c:	str	r7, [sp, #68]	; 0x44
   12f90:	str	r3, [sp, #28]
   12f94:	ldr	r3, [sp, #36]	; 0x24
   12f98:	cmn	r3, #1
   12f9c:	bne	13b2c <strspn@plt+0x2c28>
   12fa0:	ldr	r3, [sp, #44]	; 0x2c
   12fa4:	ldr	r2, [sp, #28]
   12fa8:	ldrb	r3, [r3, r2]
   12fac:	adds	r3, r3, #0
   12fb0:	movne	r3, #1
   12fb4:	str	r3, [sp, #52]	; 0x34
   12fb8:	ldr	r3, [sp, #52]	; 0x34
   12fbc:	cmp	r3, #0
   12fc0:	bne	131a8 <strspn@plt+0x22a4>
   12fc4:	sub	r2, sl, #2
   12fc8:	clz	r2, r2
   12fcc:	lsr	r2, r2, #5
   12fd0:	and	r3, r6, r2
   12fd4:	cmp	r4, #0
   12fd8:	movne	r3, #0
   12fdc:	andeq	r3, r3, #1
   12fe0:	cmp	r3, #0
   12fe4:	bne	13370 <strspn@plt+0x246c>
   12fe8:	eor	r3, r6, #1
   12fec:	ands	r2, r2, r3
   12ff0:	beq	13b64 <strspn@plt+0x2c60>
   12ff4:	ldr	r3, [sp, #68]	; 0x44
   12ff8:	cmp	r3, #0
   12ffc:	beq	13b9c <strspn@plt+0x2c98>
   13000:	ldr	r3, [sp, #72]	; 0x48
   13004:	cmp	r3, #0
   13008:	beq	13b40 <strspn@plt+0x2c3c>
   1300c:	ldr	r3, [sp, #160]	; 0xa0
   13010:	ldr	r2, [sp, #44]	; 0x2c
   13014:	str	r3, [sp, #16]
   13018:	ldr	r3, [sp, #156]	; 0x9c
   1301c:	ldr	r1, [sp, #60]	; 0x3c
   13020:	str	r3, [sp, #12]
   13024:	ldr	r3, [sp, #152]	; 0x98
   13028:	str	r3, [sp, #8]
   1302c:	ldr	r3, [sp, #148]	; 0x94
   13030:	str	r3, [sp, #4]
   13034:	mov	r3, #5
   13038:	str	r3, [sp]
   1303c:	ldr	r3, [sp, #36]	; 0x24
   13040:	mov	r0, r8
   13044:	bl	12ec4 <strspn@plt+0x1fc0>
   13048:	mov	r4, r0
   1304c:	b	13b90 <strspn@plt+0x2c8c>
   13050:	cmp	sl, #10
   13054:	beq	130b0 <strspn@plt+0x21ac>
   13058:	ldr	r4, [pc, #2956]	; 13bec <strspn@plt+0x2ce8>
   1305c:	mov	r2, #5
   13060:	mov	r1, r4
   13064:	mov	r0, #0
   13068:	bl	10d24 <dcgettext@plt>
   1306c:	cmp	r0, r4
   13070:	str	r0, [sp, #156]	; 0x9c
   13074:	bne	13084 <strspn@plt+0x2180>
   13078:	mov	r1, sl
   1307c:	bl	12db0 <strspn@plt+0x1eac>
   13080:	str	r0, [sp, #156]	; 0x9c
   13084:	ldr	r4, [pc, #2916]	; 13bf0 <strspn@plt+0x2cec>
   13088:	mov	r2, #5
   1308c:	mov	r1, r4
   13090:	mov	r0, #0
   13094:	bl	10d24 <dcgettext@plt>
   13098:	cmp	r0, r4
   1309c:	str	r0, [sp, #160]	; 0xa0
   130a0:	bne	130b0 <strspn@plt+0x21ac>
   130a4:	mov	r1, sl
   130a8:	bl	12db0 <strspn@plt+0x1eac>
   130ac:	str	r0, [sp, #160]	; 0xa0
   130b0:	cmp	r6, #0
   130b4:	moveq	r4, r6
   130b8:	beq	130d0 <strspn@plt+0x21cc>
   130bc:	mov	r4, #0
   130c0:	b	130e0 <strspn@plt+0x21dc>
   130c4:	cmp	r5, r4
   130c8:	strbhi	r3, [r8, r4]
   130cc:	add	r4, r4, #1
   130d0:	ldr	r3, [sp, #156]	; 0x9c
   130d4:	ldrb	r3, [r3, r4]
   130d8:	cmp	r3, #0
   130dc:	bne	130c4 <strspn@plt+0x21c0>
   130e0:	ldr	r0, [sp, #160]	; 0xa0
   130e4:	bl	10e2c <strlen@plt>
   130e8:	ldr	r3, [sp, #160]	; 0xa0
   130ec:	str	r3, [sp, #40]	; 0x28
   130f0:	mov	r3, #1
   130f4:	str	r3, [sp, #24]
   130f8:	str	r0, [sp, #32]
   130fc:	b	12f84 <strspn@plt+0x2080>
   13100:	mov	r3, #1
   13104:	cmp	r6, #0
   13108:	streq	r3, [sp, #24]
   1310c:	beq	1312c <strspn@plt+0x2228>
   13110:	str	r3, [sp, #32]
   13114:	ldr	r3, [pc, #2772]	; 13bf0 <strspn@plt+0x2cec>
   13118:	mov	r4, #0
   1311c:	str	r3, [sp, #40]	; 0x28
   13120:	b	13150 <strspn@plt+0x224c>
   13124:	cmp	r6, #0
   13128:	bne	13198 <strspn@plt+0x2294>
   1312c:	cmp	r5, #0
   13130:	movne	r3, #39	; 0x27
   13134:	strbne	r3, [r8]
   13138:	mov	r3, #1
   1313c:	str	r3, [sp, #32]
   13140:	mov	r6, #0
   13144:	ldr	r3, [pc, #2724]	; 13bf0 <strspn@plt+0x2cec>
   13148:	mov	r4, #1
   1314c:	str	r3, [sp, #40]	; 0x28
   13150:	mov	sl, #2
   13154:	b	12f84 <strspn@plt+0x2080>
   13158:	bl	10eec <abort@plt>
   1315c:	mov	r6, #0
   13160:	mov	r3, #1
   13164:	str	r3, [sp, #24]
   13168:	mov	r4, r6
   1316c:	b	12f84 <strspn@plt+0x2080>
   13170:	mov	r6, #1
   13174:	str	r6, [sp, #24]
   13178:	str	r6, [sp, #32]
   1317c:	b	13114 <strspn@plt+0x2210>
   13180:	mov	r3, #1
   13184:	str	r3, [sp, #32]
   13188:	ldr	r3, [pc, #2648]	; 13be8 <strspn@plt+0x2ce4>
   1318c:	str	r6, [sp, #24]
   13190:	str	r3, [sp, #40]	; 0x28
   13194:	b	12f50 <strspn@plt+0x204c>
   13198:	mov	r3, #1
   1319c:	str	r3, [sp, #32]
   131a0:	ldr	r3, [pc, #2632]	; 13bf0 <strspn@plt+0x2cec>
   131a4:	b	13190 <strspn@plt+0x228c>
   131a8:	ldr	r3, [sp, #32]
   131ac:	ldr	fp, [sp, #24]
   131b0:	cmp	sl, #2
   131b4:	moveq	fp, #0
   131b8:	andne	fp, fp, #1
   131bc:	adds	r5, r3, #0
   131c0:	movne	r5, #1
   131c4:	ands	r3, r5, fp
   131c8:	str	r3, [sp, #64]	; 0x40
   131cc:	beq	1329c <strspn@plt+0x2398>
   131d0:	ldr	r2, [sp, #32]
   131d4:	ldr	r3, [sp, #28]
   131d8:	add	r7, r3, r2
   131dc:	mov	r3, r2
   131e0:	ldr	r2, [sp, #36]	; 0x24
   131e4:	cmp	r3, #1
   131e8:	movls	r3, #0
   131ec:	movhi	r3, #1
   131f0:	cmn	r2, #1
   131f4:	movne	r3, #0
   131f8:	cmp	r3, #0
   131fc:	beq	1320c <strspn@plt+0x2308>
   13200:	ldr	r0, [sp, #44]	; 0x2c
   13204:	bl	10e2c <strlen@plt>
   13208:	str	r0, [sp, #36]	; 0x24
   1320c:	ldr	r3, [sp, #36]	; 0x24
   13210:	cmp	r3, r7
   13214:	bcc	13294 <strspn@plt+0x2390>
   13218:	ldr	r3, [sp, #44]	; 0x2c
   1321c:	ldr	r0, [sp, #28]
   13220:	ldr	r2, [sp, #32]
   13224:	ldr	r1, [sp, #40]	; 0x28
   13228:	add	r0, r3, r0
   1322c:	bl	10d0c <memcmp@plt>
   13230:	cmp	r0, #0
   13234:	bne	13294 <strspn@plt+0x2390>
   13238:	cmp	r6, #0
   1323c:	beq	1329c <strspn@plt+0x2398>
   13240:	str	r6, [sp, #24]
   13244:	ldr	r3, [sp, #24]
   13248:	ldr	r2, [sp, #44]	; 0x2c
   1324c:	cmp	sl, #2
   13250:	movne	r3, #0
   13254:	andeq	r3, r3, #1
   13258:	cmp	r3, #0
   1325c:	ldr	r3, [sp, #160]	; 0xa0
   13260:	movne	sl, #4
   13264:	str	r3, [sp, #16]
   13268:	ldr	r3, [sp, #156]	; 0x9c
   1326c:	str	sl, [sp]
   13270:	str	r3, [sp, #12]
   13274:	mov	r3, #0
   13278:	str	r3, [sp, #8]
   1327c:	ldr	r3, [sp, #148]	; 0x94
   13280:	mov	r1, r9
   13284:	bic	r3, r3, #2
   13288:	str	r3, [sp, #4]
   1328c:	ldr	r3, [sp, #36]	; 0x24
   13290:	b	13040 <strspn@plt+0x213c>
   13294:	mov	r3, #0
   13298:	str	r3, [sp, #64]	; 0x40
   1329c:	ldr	r2, [sp, #28]
   132a0:	ldr	r3, [sp, #44]	; 0x2c
   132a4:	add	r3, r3, r2
   132a8:	str	r3, [sp, #80]	; 0x50
   132ac:	ldr	r3, [sp, #44]	; 0x2c
   132b0:	ldrb	r7, [r3, r2]
   132b4:	cmp	r7, #58	; 0x3a
   132b8:	bhi	13420 <strspn@plt+0x251c>
   132bc:	cmp	r7, #43	; 0x2b
   132c0:	bcs	13474 <strspn@plt+0x2570>
   132c4:	cmp	r7, #32
   132c8:	beq	134cc <strspn@plt+0x25c8>
   132cc:	bhi	13378 <strspn@plt+0x2474>
   132d0:	cmp	r7, #9
   132d4:	beq	13780 <strspn@plt+0x287c>
   132d8:	bhi	1333c <strspn@plt+0x2438>
   132dc:	cmp	r7, #7
   132e0:	beq	1382c <strspn@plt+0x2928>
   132e4:	bhi	134e8 <strspn@plt+0x25e4>
   132e8:	cmp	r7, #0
   132ec:	beq	13504 <strspn@plt+0x2600>
   132f0:	ldr	r3, [sp, #76]	; 0x4c
   132f4:	cmp	r3, #1
   132f8:	bne	13870 <strspn@plt+0x296c>
   132fc:	bl	10e08 <__ctype_b_loc@plt>
   13300:	sxth	r3, r7
   13304:	lsl	r3, r3, #1
   13308:	ldr	r2, [r0]
   1330c:	ldrh	r5, [r2, r3]
   13310:	ldr	r3, [sp, #76]	; 0x4c
   13314:	str	r3, [sp, #56]	; 0x38
   13318:	lsr	r5, r5, #14
   1331c:	and	r5, r5, #1
   13320:	ldr	r3, [sp, #24]
   13324:	eor	fp, r5, #1
   13328:	and	fp, fp, r3
   1332c:	ands	fp, fp, #255	; 0xff
   13330:	beq	136b8 <strspn@plt+0x27b4>
   13334:	mov	r5, #0
   13338:	b	1391c <strspn@plt+0x2a18>
   1333c:	cmp	r7, #11
   13340:	beq	13788 <strspn@plt+0x2884>
   13344:	bcc	13824 <strspn@plt+0x2920>
   13348:	cmp	r7, #12
   1334c:	beq	13834 <strspn@plt+0x2930>
   13350:	cmp	r7, #13
   13354:	moveq	r3, #114	; 0x72
   13358:	bne	132f0 <strspn@plt+0x23ec>
   1335c:	cmp	sl, #2
   13360:	movne	r2, #0
   13364:	andeq	r2, r6, #1
   13368:	cmp	r2, #0
   1336c:	beq	134ec <strspn@plt+0x25e8>
   13370:	mov	sl, #2
   13374:	b	13244 <strspn@plt+0x2340>
   13378:	cmp	r7, #37	; 0x25
   1337c:	beq	13474 <strspn@plt+0x2570>
   13380:	bhi	13394 <strspn@plt+0x2490>
   13384:	cmp	r7, #35	; 0x23
   13388:	beq	134c0 <strspn@plt+0x25bc>
   1338c:	mov	r5, #0
   13390:	b	134d0 <strspn@plt+0x25cc>
   13394:	cmp	r7, #39	; 0x27
   13398:	bne	1338c <strspn@plt+0x2488>
   1339c:	cmp	sl, #2
   133a0:	ldrne	r5, [sp, #52]	; 0x34
   133a4:	movne	r3, r5
   133a8:	strne	r3, [sp, #68]	; 0x44
   133ac:	bne	13478 <strspn@plt+0x2574>
   133b0:	cmp	r6, #0
   133b4:	bne	13244 <strspn@plt+0x2340>
   133b8:	ldr	r2, [sp, #60]	; 0x3c
   133bc:	adds	r3, r9, #0
   133c0:	movne	r3, #1
   133c4:	cmp	r2, #0
   133c8:	movne	r3, #0
   133cc:	cmp	r3, #0
   133d0:	strne	r9, [sp, #60]	; 0x3c
   133d4:	movne	r9, #0
   133d8:	bne	133e8 <strspn@plt+0x24e4>
   133dc:	cmp	r9, r4
   133e0:	movhi	r3, #39	; 0x27
   133e4:	strbhi	r3, [r8, r4]
   133e8:	add	r3, r4, #1
   133ec:	cmp	r3, r9
   133f0:	movcc	r2, #92	; 0x5c
   133f4:	strbcc	r2, [r8, r3]
   133f8:	add	r3, r4, #2
   133fc:	cmp	r3, r9
   13400:	ldr	r5, [sp, #52]	; 0x34
   13404:	movcc	r2, #39	; 0x27
   13408:	strbcc	r2, [r8, r3]
   1340c:	add	r4, r4, #3
   13410:	mov	fp, r6
   13414:	str	r5, [sp, #68]	; 0x44
   13418:	str	r6, [sp, #48]	; 0x30
   1341c:	b	136b8 <strspn@plt+0x27b4>
   13420:	cmp	r7, #94	; 0x5e
   13424:	beq	1338c <strspn@plt+0x2488>
   13428:	bhi	13480 <strspn@plt+0x257c>
   1342c:	cmp	r7, #90	; 0x5a
   13430:	bhi	13468 <strspn@plt+0x2564>
   13434:	cmp	r7, #65	; 0x41
   13438:	bcs	13474 <strspn@plt+0x2570>
   1343c:	cmp	r7, #62	; 0x3e
   13440:	bls	1338c <strspn@plt+0x2488>
   13444:	cmp	r7, #63	; 0x3f
   13448:	bne	132f0 <strspn@plt+0x23ec>
   1344c:	cmp	sl, #2
   13450:	beq	135f4 <strspn@plt+0x26f0>
   13454:	cmp	sl, #5
   13458:	beq	13604 <strspn@plt+0x2700>
   1345c:	mov	fp, #0
   13460:	mov	r5, fp
   13464:	b	136b8 <strspn@plt+0x27b4>
   13468:	cmp	r7, #92	; 0x5c
   1346c:	beq	13790 <strspn@plt+0x288c>
   13470:	bls	1338c <strspn@plt+0x2488>
   13474:	ldr	r5, [sp, #52]	; 0x34
   13478:	mov	fp, #0
   1347c:	b	136b8 <strspn@plt+0x27b4>
   13480:	cmp	r7, #122	; 0x7a
   13484:	bhi	134a4 <strspn@plt+0x25a0>
   13488:	cmp	r7, #97	; 0x61
   1348c:	bcs	13474 <strspn@plt+0x2570>
   13490:	cmp	r7, #95	; 0x5f
   13494:	beq	13474 <strspn@plt+0x2570>
   13498:	cmp	r7, #96	; 0x60
   1349c:	bne	132f0 <strspn@plt+0x23ec>
   134a0:	b	1338c <strspn@plt+0x2488>
   134a4:	cmp	r7, #124	; 0x7c
   134a8:	beq	1338c <strspn@plt+0x2488>
   134ac:	bcc	1383c <strspn@plt+0x2938>
   134b0:	cmp	r7, #125	; 0x7d
   134b4:	beq	1383c <strspn@plt+0x2938>
   134b8:	cmp	r7, #126	; 0x7e
   134bc:	bne	132f0 <strspn@plt+0x23ec>
   134c0:	ldr	r3, [sp, #28]
   134c4:	cmp	r3, #0
   134c8:	bne	135fc <strspn@plt+0x26f8>
   134cc:	ldr	r5, [sp, #52]	; 0x34
   134d0:	cmp	sl, #2
   134d4:	movne	fp, #0
   134d8:	andeq	fp, r6, #1
   134dc:	cmp	fp, #0
   134e0:	beq	136b8 <strspn@plt+0x27b4>
   134e4:	b	13370 <strspn@plt+0x246c>
   134e8:	mov	r3, #98	; 0x62
   134ec:	ldr	r2, [sp, #24]
   134f0:	cmp	r2, #0
   134f4:	beq	135fc <strspn@plt+0x26f8>
   134f8:	mov	r7, r3
   134fc:	mov	r5, #0
   13500:	b	13710 <strspn@plt+0x280c>
   13504:	ldr	r3, [sp, #24]
   13508:	cmp	r3, #0
   1350c:	beq	135d8 <strspn@plt+0x26d4>
   13510:	cmp	r6, #0
   13514:	bne	13240 <strspn@plt+0x233c>
   13518:	ldr	r3, [sp, #48]	; 0x30
   1351c:	eor	r2, r3, #1
   13520:	cmp	sl, #2
   13524:	movne	r2, #0
   13528:	andeq	r2, r2, #1
   1352c:	cmp	r2, #0
   13530:	moveq	r3, r4
   13534:	beq	1356c <strspn@plt+0x2668>
   13538:	cmp	r9, r4
   1353c:	movhi	r3, #39	; 0x27
   13540:	strbhi	r3, [r8, r4]
   13544:	add	r3, r4, #1
   13548:	cmp	r9, r3
   1354c:	movhi	r1, #36	; 0x24
   13550:	strbhi	r1, [r8, r3]
   13554:	add	r3, r4, #2
   13558:	cmp	r9, r3
   1355c:	movhi	r1, #39	; 0x27
   13560:	strbhi	r1, [r8, r3]
   13564:	add	r3, r4, #3
   13568:	str	r2, [sp, #48]	; 0x30
   1356c:	cmp	r9, r3
   13570:	movhi	r2, #92	; 0x5c
   13574:	strbhi	r2, [r8, r3]
   13578:	cmp	fp, #0
   1357c:	add	r4, r3, #1
   13580:	beq	13b10 <strspn@plt+0x2c0c>
   13584:	ldr	r2, [sp, #28]
   13588:	ldr	r1, [sp, #36]	; 0x24
   1358c:	add	r2, r2, #1
   13590:	cmp	r1, r2
   13594:	bls	135d0 <strspn@plt+0x26cc>
   13598:	ldr	r1, [sp, #44]	; 0x2c
   1359c:	mov	r7, #48	; 0x30
   135a0:	ldrb	r2, [r1, r2]
   135a4:	sub	r2, r2, #48	; 0x30
   135a8:	cmp	r2, #9
   135ac:	movhi	r5, r6
   135b0:	bhi	136b8 <strspn@plt+0x27b4>
   135b4:	cmp	r9, r4
   135b8:	add	r2, r3, #2
   135bc:	strbhi	r7, [r8, r4]
   135c0:	cmp	r9, r2
   135c4:	add	r4, r3, #3
   135c8:	movhi	r1, #48	; 0x30
   135cc:	strbhi	r1, [r8, r2]
   135d0:	mov	r5, r6
   135d4:	b	13b18 <strspn@plt+0x2c14>
   135d8:	ldr	r3, [sp, #148]	; 0x94
   135dc:	tst	r3, #1
   135e0:	ldreq	r5, [sp, #24]
   135e4:	beq	13b24 <strspn@plt+0x2c20>
   135e8:	ldr	r3, [sp, #28]
   135ec:	add	r3, r3, #1
   135f0:	b	12f90 <strspn@plt+0x208c>
   135f4:	cmp	r6, #0
   135f8:	bne	13244 <strspn@plt+0x2340>
   135fc:	mov	r5, #0
   13600:	b	13478 <strspn@plt+0x2574>
   13604:	ldr	r3, [sp, #148]	; 0x94
   13608:	tst	r3, #4
   1360c:	beq	135fc <strspn@plt+0x26f8>
   13610:	ldr	r3, [sp, #28]
   13614:	add	r2, r3, #2
   13618:	ldr	r3, [sp, #36]	; 0x24
   1361c:	cmp	r3, r2
   13620:	bls	135fc <strspn@plt+0x26f8>
   13624:	ldr	r3, [sp, #44]	; 0x2c
   13628:	ldr	r1, [sp, #28]
   1362c:	add	r3, r3, r1
   13630:	ldrb	r0, [r3, #1]
   13634:	cmp	r0, #63	; 0x3f
   13638:	bne	135fc <strspn@plt+0x26f8>
   1363c:	ldr	r3, [sp, #44]	; 0x2c
   13640:	ldrb	r1, [r3, r2]
   13644:	sub	r3, r1, #33	; 0x21
   13648:	uxtb	r3, r3
   1364c:	cmp	r3, #29
   13650:	bhi	13b20 <strspn@plt+0x2c1c>
   13654:	mov	ip, #1
   13658:	ldr	r5, [pc, #1428]	; 13bf4 <strspn@plt+0x2cf0>
   1365c:	ands	r5, r5, ip, lsl r3
   13660:	beq	13478 <strspn@plt+0x2574>
   13664:	cmp	r6, #0
   13668:	bne	13244 <strspn@plt+0x2340>
   1366c:	add	r3, r4, #1
   13670:	cmp	r9, r4
   13674:	strbhi	r0, [r8, r4]
   13678:	cmp	r9, r3
   1367c:	movhi	r0, #34	; 0x22
   13680:	strbhi	r0, [r8, r3]
   13684:	add	r3, r4, #2
   13688:	cmp	r9, r3
   1368c:	movhi	r0, #34	; 0x22
   13690:	strbhi	r0, [r8, r3]
   13694:	add	r3, r4, #3
   13698:	cmp	r9, r3
   1369c:	add	r4, r4, #4
   136a0:	mov	r5, r6
   136a4:	mov	fp, r6
   136a8:	mov	r7, r1
   136ac:	movhi	r0, #63	; 0x3f
   136b0:	strbhi	r0, [r8, r3]
   136b4:	str	r2, [sp, #28]
   136b8:	ldr	r3, [sp, #24]
   136bc:	eor	r3, r3, #1
   136c0:	cmp	sl, #2
   136c4:	orreq	r3, r3, #1
   136c8:	eor	r3, r3, #1
   136cc:	orr	r3, r6, r3
   136d0:	tst	r3, #255	; 0xff
   136d4:	beq	13704 <strspn@plt+0x2800>
   136d8:	ldr	r3, [sp, #152]	; 0x98
   136dc:	cmp	r3, #0
   136e0:	beq	13704 <strspn@plt+0x2800>
   136e4:	lsr	r2, r7, #5
   136e8:	ldr	r1, [sp, #152]	; 0x98
   136ec:	uxtb	r2, r2
   136f0:	and	r3, r7, #31
   136f4:	ldr	r2, [r1, r2, lsl #2]
   136f8:	lsr	r3, r2, r3
   136fc:	tst	r3, #1
   13700:	bne	13710 <strspn@plt+0x280c>
   13704:	ldr	r3, [sp, #64]	; 0x40
   13708:	cmp	r3, #0
   1370c:	beq	137a8 <strspn@plt+0x28a4>
   13710:	cmp	r6, #0
   13714:	bne	13244 <strspn@plt+0x2340>
   13718:	ldr	r3, [sp, #48]	; 0x30
   1371c:	eor	r3, r3, #1
   13720:	cmp	sl, #2
   13724:	movne	r3, #0
   13728:	andeq	r3, r3, #1
   1372c:	cmp	r3, #0
   13730:	beq	13768 <strspn@plt+0x2864>
   13734:	cmp	r9, r4
   13738:	movhi	r2, #39	; 0x27
   1373c:	strbhi	r2, [r8, r4]
   13740:	add	r2, r4, #1
   13744:	cmp	r9, r2
   13748:	movhi	r1, #36	; 0x24
   1374c:	strbhi	r1, [r8, r2]
   13750:	add	r2, r4, #2
   13754:	cmp	r9, r2
   13758:	add	r4, r4, #3
   1375c:	movhi	r1, #39	; 0x27
   13760:	strbhi	r1, [r8, r2]
   13764:	str	r3, [sp, #48]	; 0x30
   13768:	cmp	r9, r4
   1376c:	movhi	r3, #92	; 0x5c
   13770:	strbhi	r3, [r8, r4]
   13774:	ldr	fp, [sp, #52]	; 0x34
   13778:	add	r4, r4, #1
   1377c:	b	137a8 <strspn@plt+0x28a4>
   13780:	mov	r3, #116	; 0x74
   13784:	b	1335c <strspn@plt+0x2458>
   13788:	mov	r3, #118	; 0x76
   1378c:	b	134ec <strspn@plt+0x25e8>
   13790:	cmp	sl, #2
   13794:	bne	13804 <strspn@plt+0x2900>
   13798:	cmp	r6, #0
   1379c:	bne	13244 <strspn@plt+0x2340>
   137a0:	mov	r5, r6
   137a4:	mov	fp, r6
   137a8:	ldr	r3, [sp, #48]	; 0x30
   137ac:	eor	fp, fp, #1
   137b0:	and	fp, fp, r3
   137b4:	tst	fp, #255	; 0xff
   137b8:	beq	137e4 <strspn@plt+0x28e0>
   137bc:	cmp	r9, r4
   137c0:	movhi	r3, #39	; 0x27
   137c4:	strbhi	r3, [r8, r4]
   137c8:	add	r3, r4, #1
   137cc:	cmp	r9, r3
   137d0:	movhi	r2, #39	; 0x27
   137d4:	add	r4, r4, #2
   137d8:	strbhi	r2, [r8, r3]
   137dc:	mov	r3, #0
   137e0:	str	r3, [sp, #48]	; 0x30
   137e4:	cmp	r9, r4
   137e8:	strbhi	r7, [r8, r4]
   137ec:	ldr	r3, [sp, #72]	; 0x48
   137f0:	cmp	r5, #0
   137f4:	moveq	r3, #0
   137f8:	add	r4, r4, #1
   137fc:	str	r3, [sp, #72]	; 0x48
   13800:	b	135e8 <strspn@plt+0x26e4>
   13804:	ldr	r3, [sp, #24]
   13808:	and	r3, r3, r6
   1380c:	tst	r5, r3
   13810:	moveq	r3, r7
   13814:	beq	1335c <strspn@plt+0x2458>
   13818:	mov	fp, #0
   1381c:	mov	r5, fp
   13820:	b	137a8 <strspn@plt+0x28a4>
   13824:	mov	r3, #110	; 0x6e
   13828:	b	1335c <strspn@plt+0x2458>
   1382c:	mov	r3, #97	; 0x61
   13830:	b	134ec <strspn@plt+0x25e8>
   13834:	mov	r3, #102	; 0x66
   13838:	b	134ec <strspn@plt+0x25e8>
   1383c:	ldr	r3, [sp, #36]	; 0x24
   13840:	cmn	r3, #1
   13844:	bne	13864 <strspn@plt+0x2960>
   13848:	ldr	r3, [sp, #44]	; 0x2c
   1384c:	ldrb	r3, [r3, #1]
   13850:	adds	r3, r3, #0
   13854:	movne	r3, #1
   13858:	cmp	r3, #0
   1385c:	bne	135fc <strspn@plt+0x26f8>
   13860:	b	134c0 <strspn@plt+0x25bc>
   13864:	ldr	r3, [sp, #36]	; 0x24
   13868:	subs	r3, r3, #1
   1386c:	b	13854 <strspn@plt+0x2950>
   13870:	mov	r3, #0
   13874:	str	r3, [sp, #96]	; 0x60
   13878:	str	r3, [sp, #100]	; 0x64
   1387c:	ldr	r3, [sp, #36]	; 0x24
   13880:	cmn	r3, #1
   13884:	bne	13894 <strspn@plt+0x2990>
   13888:	ldr	r0, [sp, #44]	; 0x2c
   1388c:	bl	10e2c <strlen@plt>
   13890:	str	r0, [sp, #36]	; 0x24
   13894:	ldr	r5, [sp, #52]	; 0x34
   13898:	mov	r3, #0
   1389c:	str	r3, [sp, #56]	; 0x38
   138a0:	ldr	r3, [sp, #28]
   138a4:	ldr	r2, [sp, #56]	; 0x38
   138a8:	ldr	r1, [sp, #36]	; 0x24
   138ac:	add	r2, r3, r2
   138b0:	ldr	r3, [sp, #44]	; 0x2c
   138b4:	add	r0, sp, #92	; 0x5c
   138b8:	add	fp, r3, r2
   138bc:	sub	r2, r1, r2
   138c0:	add	r3, sp, #96	; 0x60
   138c4:	mov	r1, fp
   138c8:	bl	15180 <strspn@plt+0x427c>
   138cc:	subs	r2, r0, #0
   138d0:	beq	13910 <strspn@plt+0x2a0c>
   138d4:	cmn	r2, #1
   138d8:	beq	13ae8 <strspn@plt+0x2be4>
   138dc:	cmn	r2, #2
   138e0:	bne	13a58 <strspn@plt+0x2b54>
   138e4:	ldr	r2, [sp, #56]	; 0x38
   138e8:	ldr	r3, [sp, #28]
   138ec:	add	r3, r3, r2
   138f0:	ldr	r2, [sp, #36]	; 0x24
   138f4:	cmp	r2, r3
   138f8:	bls	13ae8 <strspn@plt+0x2be4>
   138fc:	ldr	r3, [sp, #80]	; 0x50
   13900:	ldr	r2, [sp, #56]	; 0x38
   13904:	ldrb	r5, [r3, r2]
   13908:	cmp	r5, #0
   1390c:	bne	13a48 <strspn@plt+0x2b44>
   13910:	ldr	r3, [sp, #56]	; 0x38
   13914:	cmp	r3, #1
   13918:	bls	13320 <strspn@plt+0x241c>
   1391c:	ldr	r2, [sp, #56]	; 0x38
   13920:	ldr	r3, [sp, #28]
   13924:	mov	fp, #0
   13928:	add	r3, r3, r2
   1392c:	ldr	r2, [sp, #24]
   13930:	str	r3, [sp, #52]	; 0x34
   13934:	eor	r3, r5, #1
   13938:	and	r3, r3, r2
   1393c:	mov	ip, #92	; 0x5c
   13940:	uxtb	r3, r3
   13944:	mov	r2, #39	; 0x27
   13948:	cmp	r3, #0
   1394c:	beq	13af0 <strspn@plt+0x2bec>
   13950:	cmp	r6, #0
   13954:	bne	13240 <strspn@plt+0x233c>
   13958:	ldr	r1, [sp, #48]	; 0x30
   1395c:	eor	r1, r1, #1
   13960:	cmp	sl, #2
   13964:	movne	r1, #0
   13968:	andeq	r1, r1, #1
   1396c:	cmp	r1, #0
   13970:	beq	139a0 <strspn@plt+0x2a9c>
   13974:	add	r0, r4, #1
   13978:	cmp	r9, r4
   1397c:	strbhi	r2, [r8, r4]
   13980:	cmp	r9, r0
   13984:	movhi	lr, #36	; 0x24
   13988:	strbhi	lr, [r8, r0]
   1398c:	add	r0, r4, #2
   13990:	add	r4, r4, #3
   13994:	cmp	r9, r0
   13998:	strbhi	r2, [r8, r0]
   1399c:	str	r1, [sp, #48]	; 0x30
   139a0:	add	r0, r4, #1
   139a4:	cmp	r9, r4
   139a8:	strbhi	ip, [r8, r4]
   139ac:	cmp	r9, r0
   139b0:	lsrhi	r1, r7, #6
   139b4:	addhi	r1, r1, #48	; 0x30
   139b8:	strbhi	r1, [r8, r0]
   139bc:	add	r0, r4, #2
   139c0:	cmp	r9, r0
   139c4:	lsrhi	r1, r7, #3
   139c8:	and	r7, r7, #7
   139cc:	andhi	r1, r1, #7
   139d0:	add	r4, r4, #3
   139d4:	add	r7, r7, #48	; 0x30
   139d8:	mov	fp, r3
   139dc:	addhi	r1, r1, #48	; 0x30
   139e0:	strbhi	r1, [r8, r0]
   139e4:	ldr	r1, [sp, #28]
   139e8:	ldr	r0, [sp, #52]	; 0x34
   139ec:	add	r1, r1, #1
   139f0:	cmp	r0, r1
   139f4:	bls	137a8 <strspn@plt+0x28a4>
   139f8:	ldr	lr, [sp, #48]	; 0x30
   139fc:	eor	r0, fp, #1
   13a00:	and	r0, r0, lr
   13a04:	tst	r0, #255	; 0xff
   13a08:	beq	13a2c <strspn@plt+0x2b28>
   13a0c:	add	r0, r4, #1
   13a10:	cmp	r9, r4
   13a14:	strbhi	r2, [r8, r4]
   13a18:	cmp	r9, r0
   13a1c:	add	r4, r4, #2
   13a20:	strbhi	r2, [r8, r0]
   13a24:	mov	r0, #0
   13a28:	str	r0, [sp, #48]	; 0x30
   13a2c:	ldr	r0, [sp, #44]	; 0x2c
   13a30:	cmp	r9, r4
   13a34:	strbhi	r7, [r8, r4]
   13a38:	str	r1, [sp, #28]
   13a3c:	add	r4, r4, #1
   13a40:	ldrb	r7, [r0, r1]
   13a44:	b	13948 <strspn@plt+0x2a44>
   13a48:	ldr	r3, [sp, #56]	; 0x38
   13a4c:	add	r3, r3, #1
   13a50:	str	r3, [sp, #56]	; 0x38
   13a54:	b	138e4 <strspn@plt+0x29e0>
   13a58:	cmp	sl, #2
   13a5c:	movne	r3, #0
   13a60:	andeq	r3, r6, #1
   13a64:	cmp	r3, #0
   13a68:	movne	r1, #1
   13a6c:	bne	13ac8 <strspn@plt+0x2bc4>
   13a70:	ldr	r0, [sp, #92]	; 0x5c
   13a74:	str	r2, [sp, #84]	; 0x54
   13a78:	bl	10d54 <iswprint@plt>
   13a7c:	ldr	r3, [sp, #56]	; 0x38
   13a80:	ldr	r2, [sp, #84]	; 0x54
   13a84:	add	r3, r3, r2
   13a88:	str	r3, [sp, #56]	; 0x38
   13a8c:	cmp	r0, #0
   13a90:	add	r0, sp, #96	; 0x60
   13a94:	moveq	r5, #0
   13a98:	bl	10d00 <mbsinit@plt>
   13a9c:	cmp	r0, #0
   13aa0:	beq	138a0 <strspn@plt+0x299c>
   13aa4:	b	13910 <strspn@plt+0x2a0c>
   13aa8:	ldrb	r3, [fp, r1]
   13aac:	cmp	r3, #94	; 0x5e
   13ab0:	beq	13370 <strspn@plt+0x246c>
   13ab4:	bhi	13ad4 <strspn@plt+0x2bd0>
   13ab8:	sub	r3, r3, #91	; 0x5b
   13abc:	cmp	r3, #1
   13ac0:	bls	13370 <strspn@plt+0x246c>
   13ac4:	add	r1, r1, #1
   13ac8:	cmp	r1, r2
   13acc:	bne	13aa8 <strspn@plt+0x2ba4>
   13ad0:	b	13a70 <strspn@plt+0x2b6c>
   13ad4:	cmp	r3, #96	; 0x60
   13ad8:	beq	13370 <strspn@plt+0x246c>
   13adc:	cmp	r3, #124	; 0x7c
   13ae0:	bne	13ac4 <strspn@plt+0x2bc0>
   13ae4:	b	13370 <strspn@plt+0x246c>
   13ae8:	mov	r5, #0
   13aec:	b	13910 <strspn@plt+0x2a0c>
   13af0:	ldr	r1, [sp, #64]	; 0x40
   13af4:	cmp	r1, #0
   13af8:	beq	139e4 <strspn@plt+0x2ae0>
   13afc:	cmp	r9, r4
   13b00:	strbhi	ip, [r8, r4]
   13b04:	str	r3, [sp, #64]	; 0x40
   13b08:	add	r4, r4, #1
   13b0c:	b	139e4 <strspn@plt+0x2ae0>
   13b10:	mov	r5, fp
   13b14:	ldr	fp, [sp, #24]
   13b18:	mov	r7, #48	; 0x30
   13b1c:	b	136b8 <strspn@plt+0x27b4>
   13b20:	mov	r5, #0
   13b24:	mov	fp, r5
   13b28:	b	136b8 <strspn@plt+0x27b4>
   13b2c:	ldr	r3, [sp, #36]	; 0x24
   13b30:	ldr	r2, [sp, #28]
   13b34:	subs	r3, r3, r2
   13b38:	movne	r3, #1
   13b3c:	b	12fb4 <strspn@plt+0x20b0>
   13b40:	ldr	r3, [sp, #60]	; 0x3c
   13b44:	clz	r7, r9
   13b48:	cmp	r3, #0
   13b4c:	lsr	r7, r7, #5
   13b50:	moveq	r7, #0
   13b54:	cmp	r7, #0
   13b58:	mov	r5, r3
   13b5c:	bne	12f14 <strspn@plt+0x2010>
   13b60:	ldr	r3, [sp, #68]	; 0x44
   13b64:	ldr	r2, [sp, #40]	; 0x28
   13b68:	cmp	r2, #0
   13b6c:	moveq	r3, #0
   13b70:	andne	r3, r3, #1
   13b74:	cmp	r3, #0
   13b78:	movne	r3, r2
   13b7c:	subne	r2, r3, #1
   13b80:	bne	13bb0 <strspn@plt+0x2cac>
   13b84:	cmp	r9, r4
   13b88:	movhi	r3, #0
   13b8c:	strbhi	r3, [r8, r4]
   13b90:	mov	r0, r4
   13b94:	add	sp, sp, #108	; 0x6c
   13b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b9c:	mov	r3, r2
   13ba0:	b	13b64 <strspn@plt+0x2c60>
   13ba4:	cmp	r9, r4
   13ba8:	strbhi	r3, [r8, r4]
   13bac:	add	r4, r4, #1
   13bb0:	ldrb	r3, [r2, #1]!
   13bb4:	cmp	r3, #0
   13bb8:	bne	13ba4 <strspn@plt+0x2ca0>
   13bbc:	b	13b84 <strspn@plt+0x2c80>
   13bc0:	ldr	r3, [pc, #32]	; 13be8 <strspn@plt+0x2ce4>
   13bc4:	mov	r6, #1
   13bc8:	str	r6, [sp, #24]
   13bcc:	str	r6, [sp, #32]
   13bd0:	str	r3, [sp, #40]	; 0x28
   13bd4:	mov	r4, #0
   13bd8:	mov	sl, #5
   13bdc:	b	12f84 <strspn@plt+0x2080>
   13be0:	mov	r6, #1
   13be4:	b	13178 <strspn@plt+0x2274>
   13be8:	andeq	r6, r1, pc, asr #4
   13bec:	andeq	r6, r1, r3, asr r2
   13bf0:	andeq	r6, r1, r1, asr r2
   13bf4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bfc:	sub	sp, sp, #52	; 0x34
   13c00:	mov	r6, r0
   13c04:	mov	r5, r3
   13c08:	mov	r8, r1
   13c0c:	mov	r9, r2
   13c10:	bl	10e38 <__errno_location@plt>
   13c14:	ldr	r7, [pc, #380]	; 13d98 <strspn@plt+0x2e94>
   13c18:	cmn	r6, #-2147483647	; 0x80000001
   13c1c:	ldr	r4, [r7]
   13c20:	ldr	r3, [r0]
   13c24:	str	r0, [sp, #24]
   13c28:	str	r3, [sp, #32]
   13c2c:	movne	r3, #0
   13c30:	moveq	r3, #1
   13c34:	orrs	r3, r3, r6, lsr #31
   13c38:	beq	13c40 <strspn@plt+0x2d3c>
   13c3c:	bl	10eec <abort@plt>
   13c40:	ldr	r2, [r7, #4]
   13c44:	cmp	r6, r2
   13c48:	blt	13cb8 <strspn@plt+0x2db4>
   13c4c:	add	r1, sp, #48	; 0x30
   13c50:	add	sl, r7, #8
   13c54:	str	r2, [r1, #-4]!
   13c58:	cmp	r4, sl
   13c5c:	mov	r3, #8
   13c60:	sub	r2, r6, r2
   13c64:	movne	r0, r4
   13c68:	str	r3, [sp]
   13c6c:	add	r2, r2, #1
   13c70:	mvn	r3, #-2147483648	; 0x80000000
   13c74:	moveq	r0, #0
   13c78:	bl	14adc <strspn@plt+0x3bd8>
   13c7c:	cmp	r4, sl
   13c80:	ldr	r2, [sp, #44]	; 0x2c
   13c84:	mov	fp, r0
   13c88:	str	r0, [r7]
   13c8c:	ldmeq	r4, {r0, r1}
   13c90:	mov	r4, fp
   13c94:	stmeq	fp, {r0, r1}
   13c98:	ldr	r0, [r7, #4]
   13c9c:	mov	r1, #0
   13ca0:	sub	r2, r2, r0
   13ca4:	add	r0, fp, r0, lsl #3
   13ca8:	lsl	r2, r2, #3
   13cac:	bl	10e50 <memset@plt>
   13cb0:	ldr	r3, [sp, #44]	; 0x2c
   13cb4:	str	r3, [r7, #4]
   13cb8:	ldr	r3, [r5, #4]
   13cbc:	add	sl, r4, r6, lsl #3
   13cc0:	orr	r3, r3, #1
   13cc4:	str	r3, [sp, #28]
   13cc8:	add	r3, r5, #8
   13ccc:	str	r3, [sp, #36]	; 0x24
   13cd0:	ldr	r3, [r5, #44]	; 0x2c
   13cd4:	ldr	fp, [r4, r6, lsl #3]
   13cd8:	ldr	r7, [sl, #4]
   13cdc:	str	r3, [sp, #16]
   13ce0:	ldr	r3, [r5, #40]	; 0x28
   13ce4:	mov	r2, r8
   13ce8:	str	r3, [sp, #12]
   13cec:	add	r3, r5, #8
   13cf0:	str	r3, [sp, #8]
   13cf4:	ldr	r3, [sp, #28]
   13cf8:	mov	r1, fp
   13cfc:	str	r3, [sp, #4]
   13d00:	ldr	r3, [r5]
   13d04:	mov	r0, r7
   13d08:	str	r3, [sp]
   13d0c:	mov	r3, r9
   13d10:	bl	12ec4 <strspn@plt+0x1fc0>
   13d14:	cmp	fp, r0
   13d18:	bhi	13d80 <strspn@plt+0x2e7c>
   13d1c:	ldr	r3, [pc, #120]	; 13d9c <strspn@plt+0x2e98>
   13d20:	add	fp, r0, #1
   13d24:	cmp	r7, r3
   13d28:	str	fp, [r4, r6, lsl #3]
   13d2c:	beq	13d38 <strspn@plt+0x2e34>
   13d30:	mov	r0, r7
   13d34:	bl	11e5c <strspn@plt+0xf58>
   13d38:	mov	r0, fp
   13d3c:	bl	14994 <strspn@plt+0x3a90>
   13d40:	ldr	r3, [r5, #44]	; 0x2c
   13d44:	mov	r2, r8
   13d48:	mov	r1, fp
   13d4c:	str	r0, [sl, #4]
   13d50:	str	r3, [sp, #16]
   13d54:	ldr	r3, [r5, #40]	; 0x28
   13d58:	mov	r7, r0
   13d5c:	str	r3, [sp, #12]
   13d60:	add	r3, r5, #8
   13d64:	str	r3, [sp, #8]
   13d68:	ldr	r3, [sp, #28]
   13d6c:	str	r3, [sp, #4]
   13d70:	ldr	r3, [r5]
   13d74:	str	r3, [sp]
   13d78:	mov	r3, r9
   13d7c:	bl	12ec4 <strspn@plt+0x1fc0>
   13d80:	ldr	r3, [sp, #24]
   13d84:	ldr	r2, [sp, #32]
   13d88:	mov	r0, r7
   13d8c:	str	r2, [r3]
   13d90:	add	sp, sp, #52	; 0x34
   13d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d98:	strdeq	r7, [r2], -r8
   13d9c:	andeq	r7, r2, r0, ror #2
   13da0:	push	{r4, r5, r6, lr}
   13da4:	mov	r5, r0
   13da8:	bl	10e38 <__errno_location@plt>
   13dac:	cmp	r5, #0
   13db0:	mov	r1, #48	; 0x30
   13db4:	ldr	r6, [r0]
   13db8:	mov	r4, r0
   13dbc:	ldr	r0, [pc, #12]	; 13dd0 <strspn@plt+0x2ecc>
   13dc0:	movne	r0, r5
   13dc4:	bl	14d70 <strspn@plt+0x3e6c>
   13dc8:	str	r6, [r4]
   13dcc:	pop	{r4, r5, r6, pc}
   13dd0:	andeq	r7, r2, r0, ror #4
   13dd4:	ldr	r3, [pc, #12]	; 13de8 <strspn@plt+0x2ee4>
   13dd8:	cmp	r0, #0
   13ddc:	moveq	r0, r3
   13de0:	ldr	r0, [r0]
   13de4:	bx	lr
   13de8:	andeq	r7, r2, r0, ror #4
   13dec:	ldr	r3, [pc, #12]	; 13e00 <strspn@plt+0x2efc>
   13df0:	cmp	r0, #0
   13df4:	moveq	r0, r3
   13df8:	str	r1, [r0]
   13dfc:	bx	lr
   13e00:	andeq	r7, r2, r0, ror #4
   13e04:	ldr	r3, [pc, #52]	; 13e40 <strspn@plt+0x2f3c>
   13e08:	cmp	r0, #0
   13e0c:	moveq	r0, r3
   13e10:	add	r3, r0, #8
   13e14:	push	{lr}		; (str lr, [sp, #-4]!)
   13e18:	lsr	lr, r1, #5
   13e1c:	and	r1, r1, #31
   13e20:	ldr	ip, [r3, lr, lsl #2]
   13e24:	lsr	r0, ip, r1
   13e28:	eor	r2, r2, r0
   13e2c:	and	r2, r2, #1
   13e30:	and	r0, r0, #1
   13e34:	eor	r1, ip, r2, lsl r1
   13e38:	str	r1, [r3, lr, lsl #2]
   13e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e40:	andeq	r7, r2, r0, ror #4
   13e44:	ldr	r3, [pc, #16]	; 13e5c <strspn@plt+0x2f58>
   13e48:	cmp	r0, #0
   13e4c:	movne	r3, r0
   13e50:	ldr	r0, [r3, #4]
   13e54:	str	r1, [r3, #4]
   13e58:	bx	lr
   13e5c:	andeq	r7, r2, r0, ror #4
   13e60:	ldr	r3, [pc, #44]	; 13e94 <strspn@plt+0x2f90>
   13e64:	cmp	r0, #0
   13e68:	moveq	r0, r3
   13e6c:	mov	r3, #10
   13e70:	cmp	r2, #0
   13e74:	cmpne	r1, #0
   13e78:	str	r3, [r0]
   13e7c:	bne	13e88 <strspn@plt+0x2f84>
   13e80:	push	{r4, lr}
   13e84:	bl	10eec <abort@plt>
   13e88:	str	r1, [r0, #40]	; 0x28
   13e8c:	str	r2, [r0, #44]	; 0x2c
   13e90:	bx	lr
   13e94:	andeq	r7, r2, r0, ror #4
   13e98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e9c:	sub	sp, sp, #24
   13ea0:	mov	sl, r3
   13ea4:	ldr	r4, [sp, #56]	; 0x38
   13ea8:	ldr	r3, [pc, #100]	; 13f14 <strspn@plt+0x3010>
   13eac:	cmp	r4, #0
   13eb0:	moveq	r4, r3
   13eb4:	mov	r7, r0
   13eb8:	mov	r8, r1
   13ebc:	mov	r9, r2
   13ec0:	bl	10e38 <__errno_location@plt>
   13ec4:	ldr	r3, [r4, #44]	; 0x2c
   13ec8:	mov	r2, r9
   13ecc:	mov	r1, r8
   13ed0:	ldr	r6, [r0]
   13ed4:	str	r3, [sp, #16]
   13ed8:	ldr	r3, [r4, #40]	; 0x28
   13edc:	mov	r5, r0
   13ee0:	str	r3, [sp, #12]
   13ee4:	add	r3, r4, #8
   13ee8:	str	r3, [sp, #8]
   13eec:	ldr	r3, [r4, #4]
   13ef0:	mov	r0, r7
   13ef4:	str	r3, [sp, #4]
   13ef8:	ldr	r3, [r4]
   13efc:	str	r3, [sp]
   13f00:	mov	r3, sl
   13f04:	bl	12ec4 <strspn@plt+0x1fc0>
   13f08:	str	r6, [r5]
   13f0c:	add	sp, sp, #24
   13f10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f14:	andeq	r7, r2, r0, ror #4
   13f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f1c:	cmp	r3, #0
   13f20:	sub	sp, sp, #44	; 0x2c
   13f24:	ldr	r4, [pc, #188]	; 13fe8 <strspn@plt+0x30e4>
   13f28:	mov	r6, r2
   13f2c:	movne	r4, r3
   13f30:	mov	sl, r1
   13f34:	mov	r9, r0
   13f38:	bl	10e38 <__errno_location@plt>
   13f3c:	ldr	r5, [r4, #4]
   13f40:	add	fp, r4, #8
   13f44:	cmp	r6, #0
   13f48:	orreq	r5, r5, #1
   13f4c:	mov	r1, #0
   13f50:	mov	r2, r9
   13f54:	ldr	r3, [r0]
   13f58:	mov	r8, r0
   13f5c:	str	r3, [sp, #28]
   13f60:	ldr	r3, [r4, #44]	; 0x2c
   13f64:	mov	r0, r1
   13f68:	str	r3, [sp, #16]
   13f6c:	ldr	r3, [r4, #40]	; 0x28
   13f70:	stmib	sp, {r5, fp}
   13f74:	str	r3, [sp, #12]
   13f78:	ldr	r3, [r4]
   13f7c:	str	r3, [sp]
   13f80:	mov	r3, sl
   13f84:	bl	12ec4 <strspn@plt+0x1fc0>
   13f88:	add	r1, r0, #1
   13f8c:	mov	r7, r0
   13f90:	mov	r0, r1
   13f94:	str	r1, [sp, #36]	; 0x24
   13f98:	bl	14994 <strspn@plt+0x3a90>
   13f9c:	ldr	r3, [r4, #44]	; 0x2c
   13fa0:	mov	r2, r9
   13fa4:	str	r3, [sp, #16]
   13fa8:	ldr	r3, [r4, #40]	; 0x28
   13fac:	stmib	sp, {r5, fp}
   13fb0:	str	r3, [sp, #12]
   13fb4:	ldr	r3, [r4]
   13fb8:	ldr	r1, [sp, #36]	; 0x24
   13fbc:	str	r3, [sp]
   13fc0:	mov	r3, sl
   13fc4:	str	r0, [sp, #32]
   13fc8:	bl	12ec4 <strspn@plt+0x1fc0>
   13fcc:	ldr	r3, [sp, #28]
   13fd0:	cmp	r6, #0
   13fd4:	str	r3, [r8]
   13fd8:	ldr	r0, [sp, #32]
   13fdc:	strne	r7, [r6]
   13fe0:	add	sp, sp, #44	; 0x2c
   13fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fe8:	andeq	r7, r2, r0, ror #4
   13fec:	mov	r3, r2
   13ff0:	mov	r2, #0
   13ff4:	b	13f18 <strspn@plt+0x3014>
   13ff8:	push	{r4, r5, r6, r7, r8, lr}
   13ffc:	mov	r6, #1
   14000:	ldr	r4, [pc, #104]	; 14070 <strspn@plt+0x316c>
   14004:	ldr	r5, [r4]
   14008:	add	r7, r5, #12
   1400c:	ldr	r3, [r4, #4]
   14010:	add	r7, r7, #8
   14014:	cmp	r6, r3
   14018:	blt	14060 <strspn@plt+0x315c>
   1401c:	ldr	r0, [r5, #4]
   14020:	ldr	r6, [pc, #76]	; 14074 <strspn@plt+0x3170>
   14024:	cmp	r0, r6
   14028:	beq	1403c <strspn@plt+0x3138>
   1402c:	bl	11e5c <strspn@plt+0xf58>
   14030:	mov	r3, #256	; 0x100
   14034:	str	r3, [r4, #8]
   14038:	str	r6, [r4, #12]
   1403c:	ldr	r6, [pc, #52]	; 14078 <strspn@plt+0x3174>
   14040:	cmp	r5, r6
   14044:	beq	14054 <strspn@plt+0x3150>
   14048:	mov	r0, r5
   1404c:	bl	11e5c <strspn@plt+0xf58>
   14050:	str	r6, [r4]
   14054:	mov	r3, #1
   14058:	str	r3, [r4, #4]
   1405c:	pop	{r4, r5, r6, r7, r8, pc}
   14060:	ldr	r0, [r7, #-8]
   14064:	bl	11e5c <strspn@plt+0xf58>
   14068:	add	r6, r6, #1
   1406c:	b	1400c <strspn@plt+0x3108>
   14070:	strdeq	r7, [r2], -r8
   14074:	andeq	r7, r2, r0, ror #2
   14078:	andeq	r7, r2, r0, lsl #2
   1407c:	ldr	r3, [pc, #4]	; 14088 <strspn@plt+0x3184>
   14080:	mvn	r2, #0
   14084:	b	13bf8 <strspn@plt+0x2cf4>
   14088:	andeq	r7, r2, r0, ror #4
   1408c:	ldr	r3, [pc]	; 14094 <strspn@plt+0x3190>
   14090:	b	13bf8 <strspn@plt+0x2cf4>
   14094:	andeq	r7, r2, r0, ror #4
   14098:	mov	r1, r0
   1409c:	mov	r0, #0
   140a0:	b	1407c <strspn@plt+0x3178>
   140a4:	mov	r2, r1
   140a8:	mov	r1, r0
   140ac:	mov	r0, #0
   140b0:	b	1408c <strspn@plt+0x3188>
   140b4:	push	{r4, r5, lr}
   140b8:	sub	sp, sp, #52	; 0x34
   140bc:	mov	r5, r2
   140c0:	mov	r4, r0
   140c4:	mov	r0, sp
   140c8:	bl	12d80 <strspn@plt+0x1e7c>
   140cc:	mov	r3, sp
   140d0:	mvn	r2, #0
   140d4:	mov	r1, r5
   140d8:	mov	r0, r4
   140dc:	bl	13bf8 <strspn@plt+0x2cf4>
   140e0:	add	sp, sp, #52	; 0x34
   140e4:	pop	{r4, r5, pc}
   140e8:	push	{r4, r5, r6, lr}
   140ec:	sub	sp, sp, #48	; 0x30
   140f0:	mov	r5, r2
   140f4:	mov	r6, r3
   140f8:	mov	r4, r0
   140fc:	mov	r0, sp
   14100:	bl	12d80 <strspn@plt+0x1e7c>
   14104:	mov	r3, sp
   14108:	mov	r2, r6
   1410c:	mov	r1, r5
   14110:	mov	r0, r4
   14114:	bl	13bf8 <strspn@plt+0x2cf4>
   14118:	add	sp, sp, #48	; 0x30
   1411c:	pop	{r4, r5, r6, pc}
   14120:	mov	r2, r1
   14124:	mov	r1, r0
   14128:	mov	r0, #0
   1412c:	b	140b4 <strspn@plt+0x31b0>
   14130:	mov	r3, r2
   14134:	mov	r2, r1
   14138:	mov	r1, r0
   1413c:	mov	r0, #0
   14140:	b	140e8 <strspn@plt+0x31e4>
   14144:	push	{r4, r5, r6, lr}
   14148:	mov	r4, r0
   1414c:	ldr	lr, [pc, #80]	; 141a4 <strspn@plt+0x32a0>
   14150:	mov	r5, r1
   14154:	mov	r6, r2
   14158:	ldm	lr!, {r0, r1, r2, r3}
   1415c:	sub	sp, sp, #48	; 0x30
   14160:	mov	ip, sp
   14164:	stmia	ip!, {r0, r1, r2, r3}
   14168:	ldm	lr!, {r0, r1, r2, r3}
   1416c:	stmia	ip!, {r0, r1, r2, r3}
   14170:	ldm	lr, {r0, r1, r2, r3}
   14174:	stm	ip, {r0, r1, r2, r3}
   14178:	mov	r1, r6
   1417c:	mov	r2, #1
   14180:	mov	r0, sp
   14184:	bl	13e04 <strspn@plt+0x2f00>
   14188:	mov	r3, sp
   1418c:	mov	r2, r5
   14190:	mov	r1, r4
   14194:	mov	r0, #0
   14198:	bl	13bf8 <strspn@plt+0x2cf4>
   1419c:	add	sp, sp, #48	; 0x30
   141a0:	pop	{r4, r5, r6, pc}
   141a4:	andeq	r7, r2, r0, ror #4
   141a8:	mov	r2, r1
   141ac:	mvn	r1, #0
   141b0:	b	14144 <strspn@plt+0x3240>
   141b4:	mov	r1, #58	; 0x3a
   141b8:	b	141a8 <strspn@plt+0x32a4>
   141bc:	mov	r2, #58	; 0x3a
   141c0:	b	14144 <strspn@plt+0x3240>
   141c4:	push	{r4, r5, lr}
   141c8:	sub	sp, sp, #100	; 0x64
   141cc:	mov	r4, r0
   141d0:	mov	r0, sp
   141d4:	mov	r5, r2
   141d8:	bl	12d80 <strspn@plt+0x1e7c>
   141dc:	mov	ip, sp
   141e0:	add	lr, sp, #48	; 0x30
   141e4:	ldm	ip!, {r0, r1, r2, r3}
   141e8:	stmia	lr!, {r0, r1, r2, r3}
   141ec:	ldm	ip!, {r0, r1, r2, r3}
   141f0:	stmia	lr!, {r0, r1, r2, r3}
   141f4:	ldm	ip, {r0, r1, r2, r3}
   141f8:	stm	lr, {r0, r1, r2, r3}
   141fc:	mov	r2, #1
   14200:	mov	r1, #58	; 0x3a
   14204:	add	r0, sp, #48	; 0x30
   14208:	bl	13e04 <strspn@plt+0x2f00>
   1420c:	add	r3, sp, #48	; 0x30
   14210:	mvn	r2, #0
   14214:	mov	r1, r5
   14218:	mov	r0, r4
   1421c:	bl	13bf8 <strspn@plt+0x2cf4>
   14220:	add	sp, sp, #100	; 0x64
   14224:	pop	{r4, r5, pc}
   14228:	push	{r4, r5, r6, r7, lr}
   1422c:	mov	r4, r0
   14230:	ldr	lr, [pc, #84]	; 1428c <strspn@plt+0x3388>
   14234:	mov	r6, r1
   14238:	mov	r7, r2
   1423c:	mov	r5, r3
   14240:	ldm	lr!, {r0, r1, r2, r3}
   14244:	sub	sp, sp, #52	; 0x34
   14248:	mov	ip, sp
   1424c:	stmia	ip!, {r0, r1, r2, r3}
   14250:	ldm	lr!, {r0, r1, r2, r3}
   14254:	stmia	ip!, {r0, r1, r2, r3}
   14258:	ldm	lr, {r0, r1, r2, r3}
   1425c:	stm	ip, {r0, r1, r2, r3}
   14260:	mov	r2, r7
   14264:	mov	r1, r6
   14268:	mov	r0, sp
   1426c:	bl	13e60 <strspn@plt+0x2f5c>
   14270:	mov	r3, sp
   14274:	ldr	r2, [sp, #72]	; 0x48
   14278:	mov	r1, r5
   1427c:	mov	r0, r4
   14280:	bl	13bf8 <strspn@plt+0x2cf4>
   14284:	add	sp, sp, #52	; 0x34
   14288:	pop	{r4, r5, r6, r7, pc}
   1428c:	andeq	r7, r2, r0, ror #4
   14290:	mvn	ip, #0
   14294:	push	{r0, r1, r2, lr}
   14298:	str	ip, [sp]
   1429c:	bl	14228 <strspn@plt+0x3324>
   142a0:	add	sp, sp, #12
   142a4:	pop	{pc}		; (ldr pc, [sp], #4)
   142a8:	mov	r3, r2
   142ac:	mov	r2, r1
   142b0:	mov	r1, r0
   142b4:	mov	r0, #0
   142b8:	b	14290 <strspn@plt+0x338c>
   142bc:	push	{r0, r1, r2, lr}
   142c0:	str	r3, [sp]
   142c4:	mov	r3, r2
   142c8:	mov	r2, r1
   142cc:	mov	r1, r0
   142d0:	mov	r0, #0
   142d4:	bl	14228 <strspn@plt+0x3324>
   142d8:	add	sp, sp, #12
   142dc:	pop	{pc}		; (ldr pc, [sp], #4)
   142e0:	ldr	r3, [pc]	; 142e8 <strspn@plt+0x33e4>
   142e4:	b	13bf8 <strspn@plt+0x2cf4>
   142e8:	andeq	r7, r2, r8, lsl #2
   142ec:	mov	r2, r1
   142f0:	mov	r1, r0
   142f4:	mov	r0, #0
   142f8:	b	142e0 <strspn@plt+0x33dc>
   142fc:	mvn	r2, #0
   14300:	b	142e0 <strspn@plt+0x33dc>
   14304:	mov	r1, r0
   14308:	mov	r0, #0
   1430c:	b	142fc <strspn@plt+0x33f8>
   14310:	push	{r4, r5, r6, lr}
   14314:	ldr	r4, [r0], #8
   14318:	cmp	r4, r0
   1431c:	bne	14344 <strspn@plt+0x3440>
   14320:	mov	r0, r1
   14324:	mov	r5, r1
   14328:	bl	14e88 <strspn@plt+0x3f84>
   1432c:	subs	r3, r0, #0
   14330:	beq	14358 <strspn@plt+0x3454>
   14334:	mov	r2, r5
   14338:	mov	r1, r4
   1433c:	pop	{r4, r5, r6, lr}
   14340:	b	10cf4 <memcpy@plt>
   14344:	mov	r0, r4
   14348:	bl	14ec8 <strspn@plt+0x3fc4>
   1434c:	cmp	r0, #0
   14350:	movne	r3, r0
   14354:	moveq	r3, r4
   14358:	mov	r0, r3
   1435c:	pop	{r4, r5, r6, pc}
   14360:	push	{r4, r5, r6, lr}
   14364:	mov	r6, r0
   14368:	ldr	r5, [r0, #4]
   1436c:	mov	r4, r0
   14370:	ldr	r0, [r6], #8
   14374:	lsl	r5, r5, #1
   14378:	cmp	r0, r6
   1437c:	beq	14384 <strspn@plt+0x3480>
   14380:	bl	11e5c <strspn@plt+0xf58>
   14384:	ldr	r3, [r4, #4]
   14388:	cmp	r5, r3
   1438c:	bcc	143b4 <strspn@plt+0x34b0>
   14390:	mov	r0, r5
   14394:	bl	14e88 <strspn@plt+0x3f84>
   14398:	cmp	r0, #0
   1439c:	bne	143c4 <strspn@plt+0x34c0>
   143a0:	mov	r3, #1024	; 0x400
   143a4:	str	r6, [r4]
   143a8:	str	r3, [r4, #4]
   143ac:	mov	r0, #0
   143b0:	pop	{r4, r5, r6, pc}
   143b4:	bl	10e38 <__errno_location@plt>
   143b8:	mov	r3, #12
   143bc:	str	r3, [r0]
   143c0:	b	143a0 <strspn@plt+0x349c>
   143c4:	stm	r4, {r0, r5}
   143c8:	mov	r0, #1
   143cc:	pop	{r4, r5, r6, pc}
   143d0:	push	{r4, r5, r6, r7, r8, lr}
   143d4:	mov	r7, r0
   143d8:	ldr	r3, [r0, #4]
   143dc:	ldr	r8, [r7], #8
   143e0:	mov	r4, r0
   143e4:	cmp	r8, r7
   143e8:	lsl	r6, r3, #1
   143ec:	bne	14418 <strspn@plt+0x3514>
   143f0:	mov	r0, r6
   143f4:	bl	14e88 <strspn@plt+0x3f84>
   143f8:	subs	r5, r0, #0
   143fc:	beq	14448 <strspn@plt+0x3544>
   14400:	ldr	r2, [r4, #4]
   14404:	mov	r1, r8
   14408:	bl	10cf4 <memcpy@plt>
   1440c:	stm	r4, {r5, r6}
   14410:	mov	r0, #1
   14414:	pop	{r4, r5, r6, r7, r8, pc}
   14418:	cmp	r3, r6
   1441c:	bhi	14450 <strspn@plt+0x354c>
   14420:	mov	r1, r6
   14424:	mov	r0, r8
   14428:	bl	14ec8 <strspn@plt+0x3fc4>
   1442c:	subs	r5, r0, #0
   14430:	bne	1440c <strspn@plt+0x3508>
   14434:	ldr	r0, [r4]
   14438:	bl	11e5c <strspn@plt+0xf58>
   1443c:	mov	r3, #1024	; 0x400
   14440:	str	r7, [r4]
   14444:	str	r3, [r4, #4]
   14448:	mov	r0, #0
   1444c:	pop	{r4, r5, r6, r7, r8, pc}
   14450:	bl	10e38 <__errno_location@plt>
   14454:	mov	r3, #12
   14458:	str	r3, [r0]
   1445c:	b	14434 <strspn@plt+0x3530>
   14460:	push	{r4, r5, r6, lr}
   14464:	sub	sp, sp, #32
   14468:	cmp	r1, #0
   1446c:	mov	r5, r0
   14470:	ldr	r4, [sp, #48]	; 0x30
   14474:	ldr	r6, [sp, #52]	; 0x34
   14478:	beq	1452c <strspn@plt+0x3628>
   1447c:	stm	sp, {r2, r3}
   14480:	mov	r3, r1
   14484:	ldr	r2, [pc, #860]	; 147e8 <strspn@plt+0x38e4>
   14488:	mov	r1, #1
   1448c:	bl	10e74 <__fprintf_chk@plt>
   14490:	mov	r2, #5
   14494:	ldr	r1, [pc, #848]	; 147ec <strspn@plt+0x38e8>
   14498:	mov	r0, #0
   1449c:	bl	10d24 <dcgettext@plt>
   144a0:	ldr	r3, [pc, #840]	; 147f0 <strspn@plt+0x38ec>
   144a4:	ldr	r2, [pc, #840]	; 147f4 <strspn@plt+0x38f0>
   144a8:	str	r3, [sp]
   144ac:	mov	r1, #1
   144b0:	mov	r3, r0
   144b4:	mov	r0, r5
   144b8:	bl	10e74 <__fprintf_chk@plt>
   144bc:	mov	r1, r5
   144c0:	mov	r0, #10
   144c4:	bl	10d18 <fputc_unlocked@plt>
   144c8:	mov	r2, #5
   144cc:	ldr	r1, [pc, #804]	; 147f8 <strspn@plt+0x38f4>
   144d0:	mov	r0, #0
   144d4:	bl	10d24 <dcgettext@plt>
   144d8:	mov	r1, #1
   144dc:	ldr	r3, [pc, #792]	; 147fc <strspn@plt+0x38f8>
   144e0:	mov	r2, r0
   144e4:	mov	r0, r5
   144e8:	bl	10e74 <__fprintf_chk@plt>
   144ec:	mov	r1, r5
   144f0:	mov	r0, #10
   144f4:	bl	10d18 <fputc_unlocked@plt>
   144f8:	cmp	r6, #9
   144fc:	ldrls	pc, [pc, r6, lsl #2]
   14500:	b	147dc <strspn@plt+0x38d8>
   14504:	andeq	r4, r1, ip, lsl r6
   14508:	andeq	r4, r1, r4, asr #10
   1450c:	andeq	r4, r1, r0, ror r5
   14510:	andeq	r4, r1, r4, lsr #11
   14514:	andeq	r4, r1, r0, ror #11
   14518:	andeq	r4, r1, r4, lsr #12
   1451c:	andeq	r4, r1, ip, ror #12
   14520:			; <UNDEFINED> instruction: 0x000146bc
   14524:	andeq	r4, r1, r4, lsl r7
   14528:	andeq	r4, r1, r4, ror r7
   1452c:	str	r3, [sp]
   14530:	mov	r1, #1
   14534:	mov	r3, r2
   14538:	ldr	r2, [pc, #704]	; 14800 <strspn@plt+0x38fc>
   1453c:	bl	10e74 <__fprintf_chk@plt>
   14540:	b	14490 <strspn@plt+0x358c>
   14544:	mov	r2, #5
   14548:	ldr	r1, [pc, #692]	; 14804 <strspn@plt+0x3900>
   1454c:	mov	r0, #0
   14550:	bl	10d24 <dcgettext@plt>
   14554:	ldr	r3, [r4]
   14558:	mov	r1, #1
   1455c:	mov	r2, r0
   14560:	mov	r0, r5
   14564:	add	sp, sp, #32
   14568:	pop	{r4, r5, r6, lr}
   1456c:	b	10e74 <__fprintf_chk@plt>
   14570:	mov	r2, #5
   14574:	ldr	r1, [pc, #652]	; 14808 <strspn@plt+0x3904>
   14578:	mov	r0, #0
   1457c:	bl	10d24 <dcgettext@plt>
   14580:	ldr	r3, [r4, #4]
   14584:	mov	r1, #1
   14588:	str	r3, [sp, #48]	; 0x30
   1458c:	ldr	r3, [r4]
   14590:	mov	r2, r0
   14594:	mov	r0, r5
   14598:	add	sp, sp, #32
   1459c:	pop	{r4, r5, r6, lr}
   145a0:	b	10e74 <__fprintf_chk@plt>
   145a4:	mov	r2, #5
   145a8:	ldr	r1, [pc, #604]	; 1480c <strspn@plt+0x3908>
   145ac:	mov	r0, #0
   145b0:	bl	10d24 <dcgettext@plt>
   145b4:	ldr	r3, [r4, #8]
   145b8:	mov	r1, #1
   145bc:	str	r3, [sp, #52]	; 0x34
   145c0:	ldr	r3, [r4, #4]
   145c4:	str	r3, [sp, #48]	; 0x30
   145c8:	ldr	r3, [r4]
   145cc:	mov	r2, r0
   145d0:	mov	r0, r5
   145d4:	add	sp, sp, #32
   145d8:	pop	{r4, r5, r6, lr}
   145dc:	b	10e74 <__fprintf_chk@plt>
   145e0:	mov	r2, #5
   145e4:	ldr	r1, [pc, #548]	; 14810 <strspn@plt+0x390c>
   145e8:	mov	r0, #0
   145ec:	bl	10d24 <dcgettext@plt>
   145f0:	ldr	r3, [r4, #12]
   145f4:	mov	r1, #1
   145f8:	str	r3, [sp, #8]
   145fc:	ldr	r3, [r4, #8]
   14600:	str	r3, [sp, #4]
   14604:	ldr	r3, [r4, #4]
   14608:	str	r3, [sp]
   1460c:	ldr	r3, [r4]
   14610:	mov	r2, r0
   14614:	mov	r0, r5
   14618:	bl	10e74 <__fprintf_chk@plt>
   1461c:	add	sp, sp, #32
   14620:	pop	{r4, r5, r6, pc}
   14624:	mov	r2, #5
   14628:	ldr	r1, [pc, #484]	; 14814 <strspn@plt+0x3910>
   1462c:	mov	r0, #0
   14630:	bl	10d24 <dcgettext@plt>
   14634:	ldr	r3, [r4, #16]
   14638:	mov	r1, #1
   1463c:	str	r3, [sp, #12]
   14640:	ldr	r3, [r4, #12]
   14644:	str	r3, [sp, #8]
   14648:	ldr	r3, [r4, #8]
   1464c:	str	r3, [sp, #4]
   14650:	ldr	r3, [r4, #4]
   14654:	str	r3, [sp]
   14658:	ldr	r3, [r4]
   1465c:	mov	r2, r0
   14660:	mov	r0, r5
   14664:	bl	10e74 <__fprintf_chk@plt>
   14668:	b	1461c <strspn@plt+0x3718>
   1466c:	mov	r2, #5
   14670:	ldr	r1, [pc, #416]	; 14818 <strspn@plt+0x3914>
   14674:	mov	r0, #0
   14678:	bl	10d24 <dcgettext@plt>
   1467c:	ldr	r3, [r4, #20]
   14680:	mov	r1, #1
   14684:	str	r3, [sp, #16]
   14688:	ldr	r3, [r4, #16]
   1468c:	str	r3, [sp, #12]
   14690:	ldr	r3, [r4, #12]
   14694:	str	r3, [sp, #8]
   14698:	ldr	r3, [r4, #8]
   1469c:	str	r3, [sp, #4]
   146a0:	ldr	r3, [r4, #4]
   146a4:	str	r3, [sp]
   146a8:	ldr	r3, [r4]
   146ac:	mov	r2, r0
   146b0:	mov	r0, r5
   146b4:	bl	10e74 <__fprintf_chk@plt>
   146b8:	b	1461c <strspn@plt+0x3718>
   146bc:	mov	r2, #5
   146c0:	ldr	r1, [pc, #340]	; 1481c <strspn@plt+0x3918>
   146c4:	mov	r0, #0
   146c8:	bl	10d24 <dcgettext@plt>
   146cc:	ldr	r3, [r4, #24]
   146d0:	mov	r1, #1
   146d4:	str	r3, [sp, #20]
   146d8:	ldr	r3, [r4, #20]
   146dc:	str	r3, [sp, #16]
   146e0:	ldr	r3, [r4, #16]
   146e4:	str	r3, [sp, #12]
   146e8:	ldr	r3, [r4, #12]
   146ec:	str	r3, [sp, #8]
   146f0:	ldr	r3, [r4, #8]
   146f4:	str	r3, [sp, #4]
   146f8:	ldr	r3, [r4, #4]
   146fc:	str	r3, [sp]
   14700:	ldr	r3, [r4]
   14704:	mov	r2, r0
   14708:	mov	r0, r5
   1470c:	bl	10e74 <__fprintf_chk@plt>
   14710:	b	1461c <strspn@plt+0x3718>
   14714:	mov	r2, #5
   14718:	ldr	r1, [pc, #256]	; 14820 <strspn@plt+0x391c>
   1471c:	mov	r0, #0
   14720:	bl	10d24 <dcgettext@plt>
   14724:	ldr	r3, [r4, #28]
   14728:	mov	r1, #1
   1472c:	str	r3, [sp, #24]
   14730:	ldr	r3, [r4, #24]
   14734:	str	r3, [sp, #20]
   14738:	ldr	r3, [r4, #20]
   1473c:	str	r3, [sp, #16]
   14740:	ldr	r3, [r4, #16]
   14744:	str	r3, [sp, #12]
   14748:	ldr	r3, [r4, #12]
   1474c:	str	r3, [sp, #8]
   14750:	ldr	r3, [r4, #8]
   14754:	str	r3, [sp, #4]
   14758:	ldr	r3, [r4, #4]
   1475c:	str	r3, [sp]
   14760:	ldr	r3, [r4]
   14764:	mov	r2, r0
   14768:	mov	r0, r5
   1476c:	bl	10e74 <__fprintf_chk@plt>
   14770:	b	1461c <strspn@plt+0x3718>
   14774:	ldr	r1, [pc, #168]	; 14824 <strspn@plt+0x3920>
   14778:	mov	r2, #5
   1477c:	mov	r0, #0
   14780:	bl	10d24 <dcgettext@plt>
   14784:	ldr	r3, [r4, #32]
   14788:	mov	r1, #1
   1478c:	str	r3, [sp, #28]
   14790:	ldr	r3, [r4, #28]
   14794:	str	r3, [sp, #24]
   14798:	ldr	r3, [r4, #24]
   1479c:	str	r3, [sp, #20]
   147a0:	ldr	r3, [r4, #20]
   147a4:	str	r3, [sp, #16]
   147a8:	ldr	r3, [r4, #16]
   147ac:	str	r3, [sp, #12]
   147b0:	ldr	r3, [r4, #12]
   147b4:	str	r3, [sp, #8]
   147b8:	ldr	r3, [r4, #8]
   147bc:	str	r3, [sp, #4]
   147c0:	ldr	r3, [r4, #4]
   147c4:	str	r3, [sp]
   147c8:	ldr	r3, [r4]
   147cc:	mov	r2, r0
   147d0:	mov	r0, r5
   147d4:	bl	10e74 <__fprintf_chk@plt>
   147d8:	b	1461c <strspn@plt+0x3718>
   147dc:	mov	r2, #5
   147e0:	ldr	r1, [pc, #64]	; 14828 <strspn@plt+0x3924>
   147e4:	b	1477c <strspn@plt+0x3878>
   147e8:	andeq	r6, r1, r3, lsr #5
   147ec:			; <UNDEFINED> instruction: 0x000162b6
   147f0:	andeq	r0, r0, r6, ror #15
   147f4:	andeq	r6, r1, r4, lsl #11
   147f8:			; <UNDEFINED> instruction: 0x000162ba
   147fc:	andeq	r6, r1, r5, ror #6
   14800:	andeq	r6, r1, pc, lsr #5
   14804:	andeq	r6, r1, r7, lsl #7
   14808:	muleq	r1, r7, r3
   1480c:	andeq	r6, r1, lr, lsr #7
   14810:	andeq	r6, r1, sl, asr #7
   14814:	andeq	r6, r1, sl, ror #7
   14818:	andeq	r6, r1, lr, lsl #8
   1481c:	andeq	r6, r1, r6, lsr r4
   14820:	andeq	r6, r1, r2, ror #8
   14824:	muleq	r1, r2, r4
   14828:	andeq	r6, r1, r6, asr #9
   1482c:	push	{r0, r1, r4, lr}
   14830:	mov	ip, #0
   14834:	ldr	lr, [sp, #16]
   14838:	ldr	r4, [lr, ip, lsl #2]
   1483c:	cmp	r4, #0
   14840:	bne	14858 <strspn@plt+0x3954>
   14844:	str	ip, [sp, #4]
   14848:	str	lr, [sp]
   1484c:	bl	14460 <strspn@plt+0x355c>
   14850:	add	sp, sp, #8
   14854:	pop	{r4, pc}
   14858:	add	ip, ip, #1
   1485c:	b	14838 <strspn@plt+0x3934>
   14860:	push	{r4, r5, lr}
   14864:	sub	sp, sp, #52	; 0x34
   14868:	mov	ip, #0
   1486c:	ldr	r5, [sp, #64]	; 0x40
   14870:	add	lr, sp, #8
   14874:	ldr	r4, [r5, ip, lsl #2]
   14878:	cmp	r4, #0
   1487c:	str	r4, [lr, ip, lsl #2]
   14880:	beq	14890 <strspn@plt+0x398c>
   14884:	add	ip, ip, #1
   14888:	cmp	ip, #10
   1488c:	bne	14874 <strspn@plt+0x3970>
   14890:	str	ip, [sp, #4]
   14894:	str	lr, [sp]
   14898:	bl	14460 <strspn@plt+0x355c>
   1489c:	add	sp, sp, #52	; 0x34
   148a0:	pop	{r4, r5, pc}
   148a4:	push	{r3}		; (str r3, [sp, #-4]!)
   148a8:	push	{r0, r1, r2, r3, lr}
   148ac:	add	r3, sp, #24
   148b0:	str	r3, [sp, #12]
   148b4:	str	r3, [sp]
   148b8:	ldr	r3, [sp, #20]
   148bc:	bl	14860 <strspn@plt+0x395c>
   148c0:	add	sp, sp, #16
   148c4:	pop	{lr}		; (ldr lr, [sp], #4)
   148c8:	add	sp, sp, #4
   148cc:	bx	lr
   148d0:	ldr	r3, [pc, #116]	; 1494c <strspn@plt+0x3a48>
   148d4:	push	{r4, lr}
   148d8:	mov	r0, #10
   148dc:	ldr	r1, [r3]
   148e0:	bl	10d18 <fputc_unlocked@plt>
   148e4:	mov	r2, #5
   148e8:	ldr	r1, [pc, #96]	; 14950 <strspn@plt+0x3a4c>
   148ec:	mov	r0, #0
   148f0:	bl	10d24 <dcgettext@plt>
   148f4:	ldr	r2, [pc, #88]	; 14954 <strspn@plt+0x3a50>
   148f8:	mov	r1, r0
   148fc:	mov	r0, #1
   14900:	bl	10e5c <__printf_chk@plt>
   14904:	mov	r2, #5
   14908:	ldr	r1, [pc, #72]	; 14958 <strspn@plt+0x3a54>
   1490c:	mov	r0, #0
   14910:	bl	10d24 <dcgettext@plt>
   14914:	ldr	r3, [pc, #64]	; 1495c <strspn@plt+0x3a58>
   14918:	ldr	r2, [pc, #64]	; 14960 <strspn@plt+0x3a5c>
   1491c:	mov	r1, r0
   14920:	mov	r0, #1
   14924:	bl	10e5c <__printf_chk@plt>
   14928:	mov	r2, #5
   1492c:	ldr	r1, [pc, #48]	; 14964 <strspn@plt+0x3a60>
   14930:	mov	r0, #0
   14934:	bl	10d24 <dcgettext@plt>
   14938:	ldr	r2, [pc, #40]	; 14968 <strspn@plt+0x3a64>
   1493c:	pop	{r4, lr}
   14940:	mov	r1, r0
   14944:	mov	r0, #1
   14948:	b	10e5c <__printf_chk@plt>
   1494c:	andeq	r7, r2, ip, asr #2
   14950:	andeq	r6, r1, r2, lsl #10
   14954:	andeq	r6, r1, r6, lsl r5
   14958:	andeq	r6, r1, ip, lsr #10
   1495c:	strdeq	r5, [r1], -fp
   14960:	andeq	r5, r1, r3, lsr #30
   14964:	andeq	r6, r1, r0, asr #10
   14968:	andeq	r6, r1, r7, ror #10
   1496c:	push	{r4, lr}
   14970:	bl	14e88 <strspn@plt+0x3f84>
   14974:	cmp	r0, #0
   14978:	popne	{r4, pc}
   1497c:	bl	14e00 <strspn@plt+0x3efc>
   14980:	push	{r4, lr}
   14984:	bl	14e88 <strspn@plt+0x3f84>
   14988:	cmp	r0, #0
   1498c:	popne	{r4, pc}
   14990:	bl	14e00 <strspn@plt+0x3efc>
   14994:	b	1496c <strspn@plt+0x3a68>
   14998:	push	{r4, r5, r6, lr}
   1499c:	mov	r5, r0
   149a0:	mov	r4, r1
   149a4:	bl	14ec8 <strspn@plt+0x3fc4>
   149a8:	cmp	r0, #0
   149ac:	popne	{r4, r5, r6, pc}
   149b0:	adds	r4, r4, #0
   149b4:	movne	r4, #1
   149b8:	cmp	r5, #0
   149bc:	orreq	r4, r4, #1
   149c0:	cmp	r4, #0
   149c4:	popeq	{r4, r5, r6, pc}
   149c8:	bl	14e00 <strspn@plt+0x3efc>
   149cc:	push	{r4, lr}
   149d0:	cmp	r1, #0
   149d4:	orreq	r1, r1, #1
   149d8:	bl	14ec8 <strspn@plt+0x3fc4>
   149dc:	cmp	r0, #0
   149e0:	popne	{r4, pc}
   149e4:	bl	14e00 <strspn@plt+0x3efc>
   149e8:	push	{r4, r5, r6, lr}
   149ec:	mov	r6, r0
   149f0:	mov	r5, r1
   149f4:	mov	r4, r2
   149f8:	bl	151d0 <strspn@plt+0x42cc>
   149fc:	cmp	r0, #0
   14a00:	popne	{r4, r5, r6, pc}
   14a04:	cmp	r6, #0
   14a08:	beq	14a18 <strspn@plt+0x3b14>
   14a0c:	cmp	r5, #0
   14a10:	cmpne	r4, #0
   14a14:	popeq	{r4, r5, r6, pc}
   14a18:	bl	14e00 <strspn@plt+0x3efc>
   14a1c:	b	149e8 <strspn@plt+0x3ae4>
   14a20:	cmp	r2, #0
   14a24:	cmpne	r1, #0
   14a28:	moveq	r2, #1
   14a2c:	moveq	r1, r2
   14a30:	push	{r4, lr}
   14a34:	bl	151d0 <strspn@plt+0x42cc>
   14a38:	cmp	r0, #0
   14a3c:	popne	{r4, pc}
   14a40:	bl	14e00 <strspn@plt+0x3efc>
   14a44:	mov	r2, r1
   14a48:	mov	r1, r0
   14a4c:	mov	r0, #0
   14a50:	b	149e8 <strspn@plt+0x3ae4>
   14a54:	mov	r2, r1
   14a58:	mov	r1, r0
   14a5c:	mov	r0, #0
   14a60:	b	14a20 <strspn@plt+0x3b1c>
   14a64:	push	{r4, r5, r6, r7, r8, lr}
   14a68:	subs	r7, r0, #0
   14a6c:	mov	r5, r1
   14a70:	mov	r6, r2
   14a74:	ldr	r4, [r1]
   14a78:	bne	14ab4 <strspn@plt+0x3bb0>
   14a7c:	cmp	r4, #0
   14a80:	bne	14a9c <strspn@plt+0x3b98>
   14a84:	mov	r1, r2
   14a88:	mov	r0, #64	; 0x40
   14a8c:	bl	152fc <strspn@plt+0x43f8>
   14a90:	cmp	r0, #0
   14a94:	movne	r4, r0
   14a98:	addeq	r4, r0, #1
   14a9c:	mov	r2, r6
   14aa0:	mov	r1, r4
   14aa4:	mov	r0, r7
   14aa8:	bl	149e8 <strspn@plt+0x3ae4>
   14aac:	str	r4, [r5]
   14ab0:	pop	{r4, r5, r6, r7, r8, pc}
   14ab4:	lsr	r2, r4, #1
   14ab8:	add	r3, r2, #1
   14abc:	mvn	r3, r3
   14ac0:	cmp	r4, r3
   14ac4:	addls	r4, r4, #1
   14ac8:	addls	r4, r4, r2
   14acc:	bls	14a9c <strspn@plt+0x3b98>
   14ad0:	bl	14e00 <strspn@plt+0x3efc>
   14ad4:	mov	r2, #1
   14ad8:	b	14a64 <strspn@plt+0x3b60>
   14adc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ae0:	mov	sl, r0
   14ae4:	ldr	r8, [r1]
   14ae8:	mov	fp, r1
   14aec:	mov	r5, r2
   14af0:	asrs	r4, r8, #1
   14af4:	mov	r9, r3
   14af8:	ldr	r7, [sp, #48]	; 0x30
   14afc:	bpl	14b98 <strspn@plt+0x3c94>
   14b00:	rsb	r2, r4, #-2147483648	; 0x80000000
   14b04:	cmp	r8, r2
   14b08:	movge	r2, #0
   14b0c:	movlt	r2, #1
   14b10:	mvn	r3, r9
   14b14:	cmp	r2, #0
   14b18:	lsr	r3, r3, #31
   14b1c:	addeq	r4, r4, r8
   14b20:	mvnne	r4, #-2147483648	; 0x80000000
   14b24:	mov	r0, r3
   14b28:	cmp	r9, r4
   14b2c:	movge	r0, #0
   14b30:	andlt	r0, r0, #1
   14b34:	cmp	r0, #0
   14b38:	str	r3, [sp, #4]
   14b3c:	bne	14d0c <strspn@plt+0x3e08>
   14b40:	cmp	r7, #0
   14b44:	bge	14c58 <strspn@plt+0x3d54>
   14b48:	cmp	r4, #0
   14b4c:	bge	14bb0 <strspn@plt+0x3cac>
   14b50:	mov	r1, r7
   14b54:	mvn	r0, #-2147483648	; 0x80000000
   14b58:	bl	15508 <strspn@plt+0x4604>
   14b5c:	cmp	r0, r4
   14b60:	movle	r0, #0
   14b64:	movgt	r0, #1
   14b68:	cmp	r0, #0
   14b6c:	mvnne	r6, #-2147483648	; 0x80000000
   14b70:	beq	14bc0 <strspn@plt+0x3cbc>
   14b74:	mov	r1, r7
   14b78:	mov	r0, r6
   14b7c:	bl	15508 <strspn@plt+0x4604>
   14b80:	mov	r1, r7
   14b84:	mov	r4, r0
   14b88:	mov	r0, r6
   14b8c:	bl	15728 <strspn@plt+0x4824>
   14b90:	sub	r1, r6, r1
   14b94:	b	14bd0 <strspn@plt+0x3ccc>
   14b98:	mvn	r2, #-2147483648	; 0x80000000
   14b9c:	sub	r2, r2, r4
   14ba0:	cmp	r8, r2
   14ba4:	movle	r2, #0
   14ba8:	movgt	r2, #1
   14bac:	b	14b10 <strspn@plt+0x3c0c>
   14bb0:	cmn	r7, #1
   14bb4:	movne	r1, r7
   14bb8:	movne	r0, #-2147483648	; 0x80000000
   14bbc:	bne	14d24 <strspn@plt+0x3e20>
   14bc0:	mul	r1, r7, r4
   14bc4:	cmp	r1, #63	; 0x3f
   14bc8:	movle	r6, #64	; 0x40
   14bcc:	ble	14b74 <strspn@plt+0x3c70>
   14bd0:	cmp	sl, #0
   14bd4:	sub	r2, r4, r8
   14bd8:	streq	sl, [fp]
   14bdc:	cmp	r2, r5
   14be0:	bge	14cb4 <strspn@plt+0x3db0>
   14be4:	cmp	r5, #0
   14be8:	bge	14c80 <strspn@plt+0x3d7c>
   14bec:	rsb	r2, r5, #-2147483648	; 0x80000000
   14bf0:	cmp	r8, r2
   14bf4:	movge	r2, #0
   14bf8:	movlt	r2, #1
   14bfc:	cmp	r2, #0
   14c00:	bne	14c54 <strspn@plt+0x3d50>
   14c04:	ldr	r0, [sp, #4]
   14c08:	add	r5, r8, r5
   14c0c:	cmp	r9, r5
   14c10:	movge	r0, #0
   14c14:	andlt	r0, r0, #1
   14c18:	cmp	r0, #0
   14c1c:	mov	r4, r5
   14c20:	bne	14c54 <strspn@plt+0x3d50>
   14c24:	cmp	r7, #0
   14c28:	bge	14cc8 <strspn@plt+0x3dc4>
   14c2c:	cmp	r5, #0
   14c30:	bge	14ca0 <strspn@plt+0x3d9c>
   14c34:	mov	r1, r7
   14c38:	mvn	r0, #-2147483648	; 0x80000000
   14c3c:	bl	15508 <strspn@plt+0x4604>
   14c40:	cmp	r5, r0
   14c44:	movge	r0, #0
   14c48:	movlt	r0, #1
   14c4c:	cmp	r0, #0
   14c50:	beq	14cb0 <strspn@plt+0x3dac>
   14c54:	bl	14e00 <strspn@plt+0x3efc>
   14c58:	beq	14bc0 <strspn@plt+0x3cbc>
   14c5c:	cmp	r4, #0
   14c60:	bge	14d1c <strspn@plt+0x3e18>
   14c64:	cmn	r4, #1
   14c68:	beq	14bc0 <strspn@plt+0x3cbc>
   14c6c:	mov	r1, r4
   14c70:	mov	r0, #-2147483648	; 0x80000000
   14c74:	bl	15508 <strspn@plt+0x4604>
   14c78:	cmp	r7, r0
   14c7c:	b	14b60 <strspn@plt+0x3c5c>
   14c80:	cmp	r8, #0
   14c84:	blt	14c04 <strspn@plt+0x3d00>
   14c88:	mvn	r2, #-2147483648	; 0x80000000
   14c8c:	sub	r2, r2, r5
   14c90:	cmp	r8, r2
   14c94:	movle	r2, #0
   14c98:	movgt	r2, #1
   14c9c:	b	14bfc <strspn@plt+0x3cf8>
   14ca0:	cmn	r7, #1
   14ca4:	movne	r1, r7
   14ca8:	movne	r0, #-2147483648	; 0x80000000
   14cac:	bne	14d00 <strspn@plt+0x3dfc>
   14cb0:	mul	r1, r5, r7
   14cb4:	mov	r0, sl
   14cb8:	bl	14998 <strspn@plt+0x3a94>
   14cbc:	str	r4, [fp]
   14cc0:	add	sp, sp, #12
   14cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cc8:	beq	14cb0 <strspn@plt+0x3dac>
   14ccc:	cmp	r5, #0
   14cd0:	movge	r1, r7
   14cd4:	mvnge	r0, #-2147483648	; 0x80000000
   14cd8:	bge	14d00 <strspn@plt+0x3dfc>
   14cdc:	cmn	r5, #1
   14ce0:	beq	14cb0 <strspn@plt+0x3dac>
   14ce4:	mov	r1, r5
   14ce8:	mov	r0, #-2147483648	; 0x80000000
   14cec:	bl	15508 <strspn@plt+0x4604>
   14cf0:	cmp	r7, r0
   14cf4:	movle	r0, #0
   14cf8:	movgt	r0, #1
   14cfc:	b	14c4c <strspn@plt+0x3d48>
   14d00:	bl	15508 <strspn@plt+0x4604>
   14d04:	cmp	r5, r0
   14d08:	b	14cf4 <strspn@plt+0x3df0>
   14d0c:	cmp	r7, #0
   14d10:	mov	r4, r9
   14d14:	blt	14bb0 <strspn@plt+0x3cac>
   14d18:	beq	14bc0 <strspn@plt+0x3cbc>
   14d1c:	mov	r1, r7
   14d20:	mvn	r0, #-2147483648	; 0x80000000
   14d24:	bl	15508 <strspn@plt+0x4604>
   14d28:	cmp	r0, r4
   14d2c:	movge	r0, #0
   14d30:	movlt	r0, #1
   14d34:	b	14b68 <strspn@plt+0x3c64>
   14d38:	push	{r4, lr}
   14d3c:	bl	14e40 <strspn@plt+0x3f3c>
   14d40:	cmp	r0, #0
   14d44:	popne	{r4, pc}
   14d48:	bl	14e00 <strspn@plt+0x3efc>
   14d4c:	mov	r1, #1
   14d50:	b	14d38 <strspn@plt+0x3e34>
   14d54:	push	{r4, lr}
   14d58:	bl	14e40 <strspn@plt+0x3f3c>
   14d5c:	cmp	r0, #0
   14d60:	popne	{r4, pc}
   14d64:	bl	14e00 <strspn@plt+0x3efc>
   14d68:	mov	r1, #1
   14d6c:	b	14d54 <strspn@plt+0x3e50>
   14d70:	push	{r4, r5, r6, lr}
   14d74:	mov	r4, r1
   14d78:	mov	r5, r0
   14d7c:	mov	r0, r1
   14d80:	bl	1496c <strspn@plt+0x3a68>
   14d84:	mov	r2, r4
   14d88:	mov	r1, r5
   14d8c:	pop	{r4, r5, r6, lr}
   14d90:	b	10cf4 <memcpy@plt>
   14d94:	push	{r4, r5, r6, lr}
   14d98:	mov	r4, r1
   14d9c:	mov	r5, r0
   14da0:	mov	r0, r1
   14da4:	bl	14980 <strspn@plt+0x3a7c>
   14da8:	mov	r2, r4
   14dac:	mov	r1, r5
   14db0:	pop	{r4, r5, r6, lr}
   14db4:	b	10cf4 <memcpy@plt>
   14db8:	push	{r4, r5, r6, lr}
   14dbc:	mov	r5, r0
   14dc0:	add	r0, r1, #1
   14dc4:	mov	r4, r1
   14dc8:	bl	14980 <strspn@plt+0x3a7c>
   14dcc:	mov	r2, #0
   14dd0:	mov	r1, r5
   14dd4:	strb	r2, [r0, r4]
   14dd8:	mov	r2, r4
   14ddc:	pop	{r4, r5, r6, lr}
   14de0:	b	10cf4 <memcpy@plt>
   14de4:	push	{r4, lr}
   14de8:	mov	r4, r0
   14dec:	bl	10e2c <strlen@plt>
   14df0:	add	r1, r0, #1
   14df4:	mov	r0, r4
   14df8:	pop	{r4, lr}
   14dfc:	b	14d70 <strspn@plt+0x3e6c>
   14e00:	ldr	r3, [pc, #44]	; 14e34 <strspn@plt+0x3f30>
   14e04:	push	{r4, lr}
   14e08:	mov	r2, #5
   14e0c:	ldr	r1, [pc, #36]	; 14e38 <strspn@plt+0x3f34>
   14e10:	mov	r0, #0
   14e14:	ldr	r4, [r3]
   14e18:	bl	10d24 <dcgettext@plt>
   14e1c:	ldr	r2, [pc, #24]	; 14e3c <strspn@plt+0x3f38>
   14e20:	mov	r1, #0
   14e24:	mov	r3, r0
   14e28:	mov	r0, r4
   14e2c:	bl	10db4 <error@plt>
   14e30:	bl	10eec <abort@plt>
   14e34:	strdeq	r7, [r2], -r4
   14e38:			; <UNDEFINED> instruction: 0x000165b3
   14e3c:	andeq	r6, r1, r5, lsr #2
   14e40:	cmp	r1, #0
   14e44:	cmpne	r0, #0
   14e48:	moveq	r1, #1
   14e4c:	moveq	r0, r1
   14e50:	umull	r2, r3, r0, r1
   14e54:	adds	r3, r3, #0
   14e58:	movne	r3, #1
   14e5c:	cmp	r2, #0
   14e60:	blt	14e70 <strspn@plt+0x3f6c>
   14e64:	cmp	r3, #0
   14e68:	bne	14e70 <strspn@plt+0x3f6c>
   14e6c:	b	10c88 <calloc@plt>
   14e70:	push	{r4, lr}
   14e74:	bl	10e38 <__errno_location@plt>
   14e78:	mov	r3, #12
   14e7c:	str	r3, [r0]
   14e80:	mov	r0, #0
   14e84:	pop	{r4, pc}
   14e88:	cmp	r0, #0
   14e8c:	mov	r3, #0
   14e90:	moveq	r0, #1
   14e94:	adds	r3, r3, #0
   14e98:	movne	r3, #1
   14e9c:	cmp	r0, #0
   14ea0:	blt	14eb0 <strspn@plt+0x3fac>
   14ea4:	cmp	r3, #0
   14ea8:	bne	14eb0 <strspn@plt+0x3fac>
   14eac:	b	10dc0 <malloc@plt>
   14eb0:	push	{r4, lr}
   14eb4:	bl	10e38 <__errno_location@plt>
   14eb8:	mov	r3, #12
   14ebc:	str	r3, [r0]
   14ec0:	mov	r0, #0
   14ec4:	pop	{r4, pc}
   14ec8:	cmp	r0, #0
   14ecc:	push	{r4, lr}
   14ed0:	mov	r4, r1
   14ed4:	bne	14ee4 <strspn@plt+0x3fe0>
   14ed8:	mov	r0, r1
   14edc:	pop	{r4, lr}
   14ee0:	b	14e88 <strspn@plt+0x3f84>
   14ee4:	cmp	r1, #0
   14ee8:	bne	14ef8 <strspn@plt+0x3ff4>
   14eec:	bl	11e5c <strspn@plt+0xf58>
   14ef0:	mov	r0, #0
   14ef4:	pop	{r4, pc}
   14ef8:	cmp	r1, #0
   14efc:	blt	14f0c <strspn@plt+0x4008>
   14f00:	mov	r3, #0
   14f04:	cmp	r3, r3
   14f08:	beq	14f1c <strspn@plt+0x4018>
   14f0c:	bl	10e38 <__errno_location@plt>
   14f10:	mov	r3, #12
   14f14:	str	r3, [r0]
   14f18:	b	14ef0 <strspn@plt+0x3fec>
   14f1c:	pop	{r4, lr}
   14f20:	b	10d30 <realloc@plt>
   14f24:	push	{r4, r5, r6, lr}
   14f28:	mov	r4, r0
   14f2c:	bl	10d90 <__fpending@plt>
   14f30:	mov	r5, r0
   14f34:	mov	r0, r4
   14f38:	bl	10d9c <ferror_unlocked@plt>
   14f3c:	mov	r6, r0
   14f40:	mov	r0, r4
   14f44:	bl	14f94 <strspn@plt+0x4090>
   14f48:	cmp	r6, #0
   14f4c:	mov	r4, r0
   14f50:	bne	14f7c <strspn@plt+0x4078>
   14f54:	cmp	r0, #0
   14f58:	beq	14f74 <strspn@plt+0x4070>
   14f5c:	cmp	r5, #0
   14f60:	bne	14f8c <strspn@plt+0x4088>
   14f64:	bl	10e38 <__errno_location@plt>
   14f68:	ldr	r4, [r0]
   14f6c:	subs	r4, r4, #9
   14f70:	mvnne	r4, #0
   14f74:	mov	r0, r4
   14f78:	pop	{r4, r5, r6, pc}
   14f7c:	cmp	r0, #0
   14f80:	bne	14f8c <strspn@plt+0x4088>
   14f84:	bl	10e38 <__errno_location@plt>
   14f88:	str	r4, [r0]
   14f8c:	mvn	r4, #0
   14f90:	b	14f74 <strspn@plt+0x4070>
   14f94:	push	{r0, r1, r2, r4, r5, lr}
   14f98:	mov	r4, r0
   14f9c:	bl	10e68 <fileno@plt>
   14fa0:	cmp	r0, #0
   14fa4:	mov	r0, r4
   14fa8:	bge	14fb8 <strspn@plt+0x40b4>
   14fac:	add	sp, sp, #12
   14fb0:	pop	{r4, r5, lr}
   14fb4:	b	10e80 <fclose@plt>
   14fb8:	bl	10dd8 <__freading@plt>
   14fbc:	cmp	r0, #0
   14fc0:	bne	14ffc <strspn@plt+0x40f8>
   14fc4:	mov	r0, r4
   14fc8:	bl	1503c <strspn@plt+0x4138>
   14fcc:	cmp	r0, #0
   14fd0:	bne	15030 <strspn@plt+0x412c>
   14fd4:	mov	r5, #0
   14fd8:	mov	r0, r4
   14fdc:	bl	10e80 <fclose@plt>
   14fe0:	cmp	r5, #0
   14fe4:	beq	14ff4 <strspn@plt+0x40f0>
   14fe8:	bl	10e38 <__errno_location@plt>
   14fec:	str	r5, [r0]
   14ff0:	mvn	r0, #0
   14ff4:	add	sp, sp, #12
   14ff8:	pop	{r4, r5, pc}
   14ffc:	mov	r0, r4
   15000:	bl	10e68 <fileno@plt>
   15004:	mov	r3, #1
   15008:	str	r3, [sp]
   1500c:	mov	r2, #0
   15010:	mov	r3, #0
   15014:	bl	10d6c <lseek64@plt>
   15018:	mvn	r3, #0
   1501c:	mvn	r2, #0
   15020:	cmp	r1, r3
   15024:	cmpeq	r0, r2
   15028:	bne	14fc4 <strspn@plt+0x40c0>
   1502c:	b	14fd4 <strspn@plt+0x40d0>
   15030:	bl	10e38 <__errno_location@plt>
   15034:	ldr	r5, [r0]
   15038:	b	14fd8 <strspn@plt+0x40d4>
   1503c:	push	{r0, r1, r4, lr}
   15040:	subs	r4, r0, #0
   15044:	bne	15058 <strspn@plt+0x4154>
   15048:	mov	r0, r4
   1504c:	add	sp, sp, #8
   15050:	pop	{r4, lr}
   15054:	b	10cb8 <fflush@plt>
   15058:	bl	10dd8 <__freading@plt>
   1505c:	cmp	r0, #0
   15060:	beq	15048 <strspn@plt+0x4144>
   15064:	ldr	r3, [r4]
   15068:	tst	r3, #256	; 0x100
   1506c:	beq	15048 <strspn@plt+0x4144>
   15070:	mov	r3, #1
   15074:	str	r3, [sp]
   15078:	mov	r2, #0
   1507c:	mov	r3, #0
   15080:	mov	r0, r4
   15084:	bl	1508c <strspn@plt+0x4188>
   15088:	b	15048 <strspn@plt+0x4144>
   1508c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   15090:	mov	r4, r0
   15094:	ldmib	r0, {ip, lr}
   15098:	ldr	r8, [sp, #32]
   1509c:	cmp	lr, ip
   150a0:	bne	1510c <strspn@plt+0x4208>
   150a4:	ldr	lr, [r0, #20]
   150a8:	ldr	ip, [r0, #16]
   150ac:	cmp	lr, ip
   150b0:	bne	1510c <strspn@plt+0x4208>
   150b4:	ldr	r5, [r0, #36]	; 0x24
   150b8:	cmp	r5, #0
   150bc:	bne	1510c <strspn@plt+0x4208>
   150c0:	mov	r6, r2
   150c4:	mov	r7, r3
   150c8:	bl	10e68 <fileno@plt>
   150cc:	mov	r2, r6
   150d0:	mov	r3, r7
   150d4:	str	r8, [sp]
   150d8:	bl	10d6c <lseek64@plt>
   150dc:	mvn	r3, #0
   150e0:	mvn	r2, #0
   150e4:	cmp	r1, r3
   150e8:	cmpeq	r0, r2
   150ec:	mvneq	r0, #0
   150f0:	ldrne	r3, [r4]
   150f4:	strdne	r0, [r4, #80]	; 0x50
   150f8:	movne	r0, r5
   150fc:	bicne	r3, r3, #16
   15100:	strne	r3, [r4]
   15104:	add	sp, sp, #8
   15108:	pop	{r4, r5, r6, r7, r8, pc}
   1510c:	str	r8, [sp, #32]
   15110:	mov	r0, r4
   15114:	add	sp, sp, #8
   15118:	pop	{r4, r5, r6, r7, r8, lr}
   1511c:	b	10e8c <fseeko64@plt>
   15120:	sub	r2, r0, #1
   15124:	mov	r0, #0
   15128:	push	{r4, lr}
   1512c:	ldrb	r3, [r2, #1]!
   15130:	cmp	r3, #0
   15134:	bne	15144 <strspn@plt+0x4240>
   15138:	bl	154e8 <strspn@plt+0x45e4>
   1513c:	mov	r0, r1
   15140:	pop	{r4, pc}
   15144:	add	r0, r3, r0, ror #23
   15148:	b	1512c <strspn@plt+0x4228>
   1514c:	push	{r4, lr}
   15150:	mov	r0, #14
   15154:	bl	10eb0 <nl_langinfo@plt>
   15158:	ldr	r3, [pc, #24]	; 15178 <strspn@plt+0x4274>
   1515c:	cmp	r0, #0
   15160:	moveq	r0, r3
   15164:	ldr	r3, [pc, #16]	; 1517c <strspn@plt+0x4278>
   15168:	ldrb	r2, [r0]
   1516c:	cmp	r2, #0
   15170:	moveq	r0, r3
   15174:	pop	{r4, pc}
   15178:	andeq	r5, r1, r2, asr #21
   1517c:	andeq	r6, r1, r4, asr #11
   15180:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15184:	subs	r5, r0, #0
   15188:	addeq	r5, sp, #4
   1518c:	mov	r0, r5
   15190:	mov	r7, r2
   15194:	mov	r6, r1
   15198:	bl	10da8 <mbrtowc@plt>
   1519c:	cmp	r7, #0
   151a0:	cmnne	r0, #3
   151a4:	mov	r4, r0
   151a8:	bls	151c4 <strspn@plt+0x42c0>
   151ac:	mov	r0, #0
   151b0:	bl	1521c <strspn@plt+0x4318>
   151b4:	cmp	r0, #0
   151b8:	moveq	r4, #1
   151bc:	ldrbeq	r3, [r6]
   151c0:	streq	r3, [r5]
   151c4:	mov	r0, r4
   151c8:	add	sp, sp, #12
   151cc:	pop	{r4, r5, r6, r7, pc}
   151d0:	push	{r4, r5, r6, lr}
   151d4:	subs	r4, r2, #0
   151d8:	mov	r6, r0
   151dc:	mov	r5, r1
   151e0:	beq	151f8 <strspn@plt+0x42f4>
   151e4:	mov	r1, r4
   151e8:	mvn	r0, #0
   151ec:	bl	152fc <strspn@plt+0x43f8>
   151f0:	cmp	r0, r5
   151f4:	bcc	15208 <strspn@plt+0x4304>
   151f8:	mul	r1, r5, r4
   151fc:	mov	r0, r6
   15200:	pop	{r4, r5, r6, lr}
   15204:	b	14ec8 <strspn@plt+0x3fc4>
   15208:	bl	10e38 <__errno_location@plt>
   1520c:	mov	r3, #12
   15210:	str	r3, [r0]
   15214:	mov	r0, #0
   15218:	pop	{r4, r5, r6, pc}
   1521c:	push	{lr}		; (str lr, [sp, #-4]!)
   15220:	sub	sp, sp, #268	; 0x10c
   15224:	ldr	r2, [pc, #64]	; 1526c <strspn@plt+0x4368>
   15228:	add	r1, sp, #4
   1522c:	bl	15278 <strspn@plt+0x4374>
   15230:	cmp	r0, #0
   15234:	movne	r0, #0
   15238:	bne	15264 <strspn@plt+0x4360>
   1523c:	ldr	r1, [pc, #44]	; 15270 <strspn@plt+0x436c>
   15240:	add	r0, sp, #4
   15244:	bl	10cac <strcmp@plt>
   15248:	cmp	r0, #0
   1524c:	beq	15264 <strspn@plt+0x4360>
   15250:	ldr	r1, [pc, #28]	; 15274 <strspn@plt+0x4370>
   15254:	add	r0, sp, #4
   15258:	bl	10cac <strcmp@plt>
   1525c:	adds	r0, r0, #0
   15260:	movne	r0, #1
   15264:	add	sp, sp, #268	; 0x10c
   15268:	pop	{pc}		; (ldr pc, [sp], #4)
   1526c:	andeq	r0, r0, r1, lsl #2
   15270:	andeq	r6, r1, sl, asr #11
   15274:	andeq	r6, r1, ip, asr #11
   15278:	push	{r4, r5, r6, lr}
   1527c:	mov	r5, r1
   15280:	mov	r1, #0
   15284:	mov	r4, r2
   15288:	bl	10e98 <setlocale@plt>
   1528c:	subs	r6, r0, #0
   15290:	bne	152a4 <strspn@plt+0x43a0>
   15294:	cmp	r4, #0
   15298:	strbne	r6, [r5]
   1529c:	mov	r0, #22
   152a0:	pop	{r4, r5, r6, pc}
   152a4:	bl	10e2c <strlen@plt>
   152a8:	cmp	r4, r0
   152ac:	bls	152c8 <strspn@plt+0x43c4>
   152b0:	add	r2, r0, #1
   152b4:	mov	r1, r6
   152b8:	mov	r0, r5
   152bc:	bl	10cf4 <memcpy@plt>
   152c0:	mov	r0, #0
   152c4:	pop	{r4, r5, r6, pc}
   152c8:	cmp	r4, #0
   152cc:	beq	152ec <strspn@plt+0x43e8>
   152d0:	sub	r4, r4, #1
   152d4:	mov	r2, r4
   152d8:	mov	r1, r6
   152dc:	mov	r0, r5
   152e0:	bl	10cf4 <memcpy@plt>
   152e4:	mov	r3, #0
   152e8:	strb	r3, [r5, r4]
   152ec:	mov	r0, #34	; 0x22
   152f0:	pop	{r4, r5, r6, pc}
   152f4:	mov	r1, #0
   152f8:	b	10e98 <setlocale@plt>
   152fc:	subs	r2, r1, #1
   15300:	bxeq	lr
   15304:	bcc	154dc <strspn@plt+0x45d8>
   15308:	cmp	r0, r1
   1530c:	bls	154c0 <strspn@plt+0x45bc>
   15310:	tst	r1, r2
   15314:	beq	154cc <strspn@plt+0x45c8>
   15318:	clz	r3, r0
   1531c:	clz	r2, r1
   15320:	sub	r3, r2, r3
   15324:	rsbs	r3, r3, #31
   15328:	addne	r3, r3, r3, lsl #1
   1532c:	mov	r2, #0
   15330:	addne	pc, pc, r3, lsl #2
   15334:	nop			; (mov r0, r0)
   15338:	cmp	r0, r1, lsl #31
   1533c:	adc	r2, r2, r2
   15340:	subcs	r0, r0, r1, lsl #31
   15344:	cmp	r0, r1, lsl #30
   15348:	adc	r2, r2, r2
   1534c:	subcs	r0, r0, r1, lsl #30
   15350:	cmp	r0, r1, lsl #29
   15354:	adc	r2, r2, r2
   15358:	subcs	r0, r0, r1, lsl #29
   1535c:	cmp	r0, r1, lsl #28
   15360:	adc	r2, r2, r2
   15364:	subcs	r0, r0, r1, lsl #28
   15368:	cmp	r0, r1, lsl #27
   1536c:	adc	r2, r2, r2
   15370:	subcs	r0, r0, r1, lsl #27
   15374:	cmp	r0, r1, lsl #26
   15378:	adc	r2, r2, r2
   1537c:	subcs	r0, r0, r1, lsl #26
   15380:	cmp	r0, r1, lsl #25
   15384:	adc	r2, r2, r2
   15388:	subcs	r0, r0, r1, lsl #25
   1538c:	cmp	r0, r1, lsl #24
   15390:	adc	r2, r2, r2
   15394:	subcs	r0, r0, r1, lsl #24
   15398:	cmp	r0, r1, lsl #23
   1539c:	adc	r2, r2, r2
   153a0:	subcs	r0, r0, r1, lsl #23
   153a4:	cmp	r0, r1, lsl #22
   153a8:	adc	r2, r2, r2
   153ac:	subcs	r0, r0, r1, lsl #22
   153b0:	cmp	r0, r1, lsl #21
   153b4:	adc	r2, r2, r2
   153b8:	subcs	r0, r0, r1, lsl #21
   153bc:	cmp	r0, r1, lsl #20
   153c0:	adc	r2, r2, r2
   153c4:	subcs	r0, r0, r1, lsl #20
   153c8:	cmp	r0, r1, lsl #19
   153cc:	adc	r2, r2, r2
   153d0:	subcs	r0, r0, r1, lsl #19
   153d4:	cmp	r0, r1, lsl #18
   153d8:	adc	r2, r2, r2
   153dc:	subcs	r0, r0, r1, lsl #18
   153e0:	cmp	r0, r1, lsl #17
   153e4:	adc	r2, r2, r2
   153e8:	subcs	r0, r0, r1, lsl #17
   153ec:	cmp	r0, r1, lsl #16
   153f0:	adc	r2, r2, r2
   153f4:	subcs	r0, r0, r1, lsl #16
   153f8:	cmp	r0, r1, lsl #15
   153fc:	adc	r2, r2, r2
   15400:	subcs	r0, r0, r1, lsl #15
   15404:	cmp	r0, r1, lsl #14
   15408:	adc	r2, r2, r2
   1540c:	subcs	r0, r0, r1, lsl #14
   15410:	cmp	r0, r1, lsl #13
   15414:	adc	r2, r2, r2
   15418:	subcs	r0, r0, r1, lsl #13
   1541c:	cmp	r0, r1, lsl #12
   15420:	adc	r2, r2, r2
   15424:	subcs	r0, r0, r1, lsl #12
   15428:	cmp	r0, r1, lsl #11
   1542c:	adc	r2, r2, r2
   15430:	subcs	r0, r0, r1, lsl #11
   15434:	cmp	r0, r1, lsl #10
   15438:	adc	r2, r2, r2
   1543c:	subcs	r0, r0, r1, lsl #10
   15440:	cmp	r0, r1, lsl #9
   15444:	adc	r2, r2, r2
   15448:	subcs	r0, r0, r1, lsl #9
   1544c:	cmp	r0, r1, lsl #8
   15450:	adc	r2, r2, r2
   15454:	subcs	r0, r0, r1, lsl #8
   15458:	cmp	r0, r1, lsl #7
   1545c:	adc	r2, r2, r2
   15460:	subcs	r0, r0, r1, lsl #7
   15464:	cmp	r0, r1, lsl #6
   15468:	adc	r2, r2, r2
   1546c:	subcs	r0, r0, r1, lsl #6
   15470:	cmp	r0, r1, lsl #5
   15474:	adc	r2, r2, r2
   15478:	subcs	r0, r0, r1, lsl #5
   1547c:	cmp	r0, r1, lsl #4
   15480:	adc	r2, r2, r2
   15484:	subcs	r0, r0, r1, lsl #4
   15488:	cmp	r0, r1, lsl #3
   1548c:	adc	r2, r2, r2
   15490:	subcs	r0, r0, r1, lsl #3
   15494:	cmp	r0, r1, lsl #2
   15498:	adc	r2, r2, r2
   1549c:	subcs	r0, r0, r1, lsl #2
   154a0:	cmp	r0, r1, lsl #1
   154a4:	adc	r2, r2, r2
   154a8:	subcs	r0, r0, r1, lsl #1
   154ac:	cmp	r0, r1
   154b0:	adc	r2, r2, r2
   154b4:	subcs	r0, r0, r1
   154b8:	mov	r0, r2
   154bc:	bx	lr
   154c0:	moveq	r0, #1
   154c4:	movne	r0, #0
   154c8:	bx	lr
   154cc:	clz	r2, r1
   154d0:	rsb	r2, r2, #31
   154d4:	lsr	r0, r0, r2
   154d8:	bx	lr
   154dc:	cmp	r0, #0
   154e0:	mvnne	r0, #0
   154e4:	b	15784 <strspn@plt+0x4880>
   154e8:	cmp	r1, #0
   154ec:	beq	154dc <strspn@plt+0x45d8>
   154f0:	push	{r0, r1, lr}
   154f4:	bl	152fc <strspn@plt+0x43f8>
   154f8:	pop	{r1, r2, lr}
   154fc:	mul	r3, r2, r0
   15500:	sub	r1, r1, r3
   15504:	bx	lr
   15508:	cmp	r1, #0
   1550c:	beq	15718 <strspn@plt+0x4814>
   15510:	eor	ip, r0, r1
   15514:	rsbmi	r1, r1, #0
   15518:	subs	r2, r1, #1
   1551c:	beq	156e4 <strspn@plt+0x47e0>
   15520:	movs	r3, r0
   15524:	rsbmi	r3, r0, #0
   15528:	cmp	r3, r1
   1552c:	bls	156f0 <strspn@plt+0x47ec>
   15530:	tst	r1, r2
   15534:	beq	15700 <strspn@plt+0x47fc>
   15538:	clz	r2, r3
   1553c:	clz	r0, r1
   15540:	sub	r2, r0, r2
   15544:	rsbs	r2, r2, #31
   15548:	addne	r2, r2, r2, lsl #1
   1554c:	mov	r0, #0
   15550:	addne	pc, pc, r2, lsl #2
   15554:	nop			; (mov r0, r0)
   15558:	cmp	r3, r1, lsl #31
   1555c:	adc	r0, r0, r0
   15560:	subcs	r3, r3, r1, lsl #31
   15564:	cmp	r3, r1, lsl #30
   15568:	adc	r0, r0, r0
   1556c:	subcs	r3, r3, r1, lsl #30
   15570:	cmp	r3, r1, lsl #29
   15574:	adc	r0, r0, r0
   15578:	subcs	r3, r3, r1, lsl #29
   1557c:	cmp	r3, r1, lsl #28
   15580:	adc	r0, r0, r0
   15584:	subcs	r3, r3, r1, lsl #28
   15588:	cmp	r3, r1, lsl #27
   1558c:	adc	r0, r0, r0
   15590:	subcs	r3, r3, r1, lsl #27
   15594:	cmp	r3, r1, lsl #26
   15598:	adc	r0, r0, r0
   1559c:	subcs	r3, r3, r1, lsl #26
   155a0:	cmp	r3, r1, lsl #25
   155a4:	adc	r0, r0, r0
   155a8:	subcs	r3, r3, r1, lsl #25
   155ac:	cmp	r3, r1, lsl #24
   155b0:	adc	r0, r0, r0
   155b4:	subcs	r3, r3, r1, lsl #24
   155b8:	cmp	r3, r1, lsl #23
   155bc:	adc	r0, r0, r0
   155c0:	subcs	r3, r3, r1, lsl #23
   155c4:	cmp	r3, r1, lsl #22
   155c8:	adc	r0, r0, r0
   155cc:	subcs	r3, r3, r1, lsl #22
   155d0:	cmp	r3, r1, lsl #21
   155d4:	adc	r0, r0, r0
   155d8:	subcs	r3, r3, r1, lsl #21
   155dc:	cmp	r3, r1, lsl #20
   155e0:	adc	r0, r0, r0
   155e4:	subcs	r3, r3, r1, lsl #20
   155e8:	cmp	r3, r1, lsl #19
   155ec:	adc	r0, r0, r0
   155f0:	subcs	r3, r3, r1, lsl #19
   155f4:	cmp	r3, r1, lsl #18
   155f8:	adc	r0, r0, r0
   155fc:	subcs	r3, r3, r1, lsl #18
   15600:	cmp	r3, r1, lsl #17
   15604:	adc	r0, r0, r0
   15608:	subcs	r3, r3, r1, lsl #17
   1560c:	cmp	r3, r1, lsl #16
   15610:	adc	r0, r0, r0
   15614:	subcs	r3, r3, r1, lsl #16
   15618:	cmp	r3, r1, lsl #15
   1561c:	adc	r0, r0, r0
   15620:	subcs	r3, r3, r1, lsl #15
   15624:	cmp	r3, r1, lsl #14
   15628:	adc	r0, r0, r0
   1562c:	subcs	r3, r3, r1, lsl #14
   15630:	cmp	r3, r1, lsl #13
   15634:	adc	r0, r0, r0
   15638:	subcs	r3, r3, r1, lsl #13
   1563c:	cmp	r3, r1, lsl #12
   15640:	adc	r0, r0, r0
   15644:	subcs	r3, r3, r1, lsl #12
   15648:	cmp	r3, r1, lsl #11
   1564c:	adc	r0, r0, r0
   15650:	subcs	r3, r3, r1, lsl #11
   15654:	cmp	r3, r1, lsl #10
   15658:	adc	r0, r0, r0
   1565c:	subcs	r3, r3, r1, lsl #10
   15660:	cmp	r3, r1, lsl #9
   15664:	adc	r0, r0, r0
   15668:	subcs	r3, r3, r1, lsl #9
   1566c:	cmp	r3, r1, lsl #8
   15670:	adc	r0, r0, r0
   15674:	subcs	r3, r3, r1, lsl #8
   15678:	cmp	r3, r1, lsl #7
   1567c:	adc	r0, r0, r0
   15680:	subcs	r3, r3, r1, lsl #7
   15684:	cmp	r3, r1, lsl #6
   15688:	adc	r0, r0, r0
   1568c:	subcs	r3, r3, r1, lsl #6
   15690:	cmp	r3, r1, lsl #5
   15694:	adc	r0, r0, r0
   15698:	subcs	r3, r3, r1, lsl #5
   1569c:	cmp	r3, r1, lsl #4
   156a0:	adc	r0, r0, r0
   156a4:	subcs	r3, r3, r1, lsl #4
   156a8:	cmp	r3, r1, lsl #3
   156ac:	adc	r0, r0, r0
   156b0:	subcs	r3, r3, r1, lsl #3
   156b4:	cmp	r3, r1, lsl #2
   156b8:	adc	r0, r0, r0
   156bc:	subcs	r3, r3, r1, lsl #2
   156c0:	cmp	r3, r1, lsl #1
   156c4:	adc	r0, r0, r0
   156c8:	subcs	r3, r3, r1, lsl #1
   156cc:	cmp	r3, r1
   156d0:	adc	r0, r0, r0
   156d4:	subcs	r3, r3, r1
   156d8:	cmp	ip, #0
   156dc:	rsbmi	r0, r0, #0
   156e0:	bx	lr
   156e4:	teq	ip, r0
   156e8:	rsbmi	r0, r0, #0
   156ec:	bx	lr
   156f0:	movcc	r0, #0
   156f4:	asreq	r0, ip, #31
   156f8:	orreq	r0, r0, #1
   156fc:	bx	lr
   15700:	clz	r2, r1
   15704:	rsb	r2, r2, #31
   15708:	cmp	ip, #0
   1570c:	lsr	r0, r3, r2
   15710:	rsbmi	r0, r0, #0
   15714:	bx	lr
   15718:	cmp	r0, #0
   1571c:	mvngt	r0, #-2147483648	; 0x80000000
   15720:	movlt	r0, #-2147483648	; 0x80000000
   15724:	b	15784 <strspn@plt+0x4880>
   15728:	cmp	r1, #0
   1572c:	beq	15718 <strspn@plt+0x4814>
   15730:	push	{r0, r1, lr}
   15734:	bl	15510 <strspn@plt+0x460c>
   15738:	pop	{r1, r2, lr}
   1573c:	mul	r3, r2, r0
   15740:	sub	r1, r1, r3
   15744:	bx	lr
   15748:	cmp	r3, #0
   1574c:	cmpeq	r2, #0
   15750:	bne	15768 <strspn@plt+0x4864>
   15754:	cmp	r1, #0
   15758:	cmpeq	r0, #0
   1575c:	mvnne	r1, #0
   15760:	mvnne	r0, #0
   15764:	b	15784 <strspn@plt+0x4880>
   15768:	sub	sp, sp, #8
   1576c:	push	{sp, lr}
   15770:	bl	15794 <strspn@plt+0x4890>
   15774:	ldr	lr, [sp, #4]
   15778:	add	sp, sp, #8
   1577c:	pop	{r2, r3}
   15780:	bx	lr
   15784:	push	{r1, lr}
   15788:	mov	r0, #8
   1578c:	bl	10ca0 <raise@plt>
   15790:	pop	{r1, pc}
   15794:	cmp	r1, r3
   15798:	push	{r4, r5, r6, r7, r8, r9, lr}
   1579c:	cmpeq	r0, r2
   157a0:	mov	r4, r0
   157a4:	mov	r5, r1
   157a8:	ldr	r9, [sp, #28]
   157ac:	movcc	r0, #0
   157b0:	movcc	r1, #0
   157b4:	bcc	158ac <strspn@plt+0x49a8>
   157b8:	cmp	r3, #0
   157bc:	clzeq	ip, r2
   157c0:	clzne	ip, r3
   157c4:	addeq	ip, ip, #32
   157c8:	cmp	r5, #0
   157cc:	clzeq	r1, r4
   157d0:	addeq	r1, r1, #32
   157d4:	clzne	r1, r5
   157d8:	sub	ip, ip, r1
   157dc:	sub	lr, ip, #32
   157e0:	lsl	r7, r3, ip
   157e4:	rsb	r8, ip, #32
   157e8:	orr	r7, r7, r2, lsl lr
   157ec:	orr	r7, r7, r2, lsr r8
   157f0:	lsl	r6, r2, ip
   157f4:	cmp	r5, r7
   157f8:	cmpeq	r4, r6
   157fc:	movcc	r0, #0
   15800:	movcc	r1, #0
   15804:	bcc	15820 <strspn@plt+0x491c>
   15808:	mov	r3, #1
   1580c:	subs	r4, r4, r6
   15810:	lsl	r1, r3, lr
   15814:	lsl	r0, r3, ip
   15818:	orr	r1, r1, r3, lsr r8
   1581c:	sbc	r5, r5, r7
   15820:	cmp	ip, #0
   15824:	beq	158ac <strspn@plt+0x49a8>
   15828:	lsrs	r3, r7, #1
   1582c:	rrx	r2, r6
   15830:	mov	r6, ip
   15834:	b	15858 <strspn@plt+0x4954>
   15838:	subs	r4, r4, r2
   1583c:	sbc	r5, r5, r3
   15840:	adds	r4, r4, r4
   15844:	adc	r5, r5, r5
   15848:	adds	r4, r4, #1
   1584c:	adc	r5, r5, #0
   15850:	subs	r6, r6, #1
   15854:	beq	15874 <strspn@plt+0x4970>
   15858:	cmp	r5, r3
   1585c:	cmpeq	r4, r2
   15860:	bcs	15838 <strspn@plt+0x4934>
   15864:	adds	r4, r4, r4
   15868:	adc	r5, r5, r5
   1586c:	subs	r6, r6, #1
   15870:	bne	15858 <strspn@plt+0x4954>
   15874:	lsr	r6, r4, ip
   15878:	lsr	r7, r5, ip
   1587c:	orr	r6, r6, r5, lsl r8
   15880:	adds	r2, r0, r4
   15884:	orr	r6, r6, r5, lsr lr
   15888:	adc	r3, r1, r5
   1588c:	lsl	r1, r7, ip
   15890:	orr	r1, r1, r6, lsl lr
   15894:	lsl	r0, r6, ip
   15898:	orr	r1, r1, r6, lsr r8
   1589c:	subs	r0, r2, r0
   158a0:	mov	r4, r6
   158a4:	mov	r5, r7
   158a8:	sbc	r1, r3, r1
   158ac:	cmp	r9, #0
   158b0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   158b4:	strd	r4, [r9]
   158b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   158bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   158c0:	mov	r7, r0
   158c4:	ldr	r6, [pc, #72]	; 15914 <strspn@plt+0x4a10>
   158c8:	ldr	r5, [pc, #72]	; 15918 <strspn@plt+0x4a14>
   158cc:	add	r6, pc, r6
   158d0:	add	r5, pc, r5
   158d4:	sub	r6, r6, r5
   158d8:	mov	r8, r1
   158dc:	mov	r9, r2
   158e0:	bl	10c68 <calloc@plt-0x20>
   158e4:	asrs	r6, r6, #2
   158e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   158ec:	mov	r4, #0
   158f0:	add	r4, r4, #1
   158f4:	ldr	r3, [r5], #4
   158f8:	mov	r2, r9
   158fc:	mov	r1, r8
   15900:	mov	r0, r7
   15904:	blx	r3
   15908:	cmp	r6, r4
   1590c:	bne	158f0 <strspn@plt+0x49ec>
   15910:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15914:	andeq	r1, r1, ip, lsr r6
   15918:	andeq	r1, r1, r4, lsr r6
   1591c:	bx	lr
   15920:	ldr	r3, [pc, #12]	; 15934 <strspn@plt+0x4a30>
   15924:	mov	r1, #0
   15928:	add	r3, pc, r3
   1592c:	ldr	r2, [r3]
   15930:	b	10e44 <__cxa_atexit@plt>
   15934:			; <UNDEFINED> instruction: 0x000117bc
   15938:	mov	r2, r1
   1593c:	mov	r1, r0
   15940:	mov	r0, #3
   15944:	b	10ec8 <__xstat64@plt>

Disassembly of section .fini:

00015948 <.fini>:
   15948:	push	{r3, lr}
   1594c:	pop	{r3, pc}
