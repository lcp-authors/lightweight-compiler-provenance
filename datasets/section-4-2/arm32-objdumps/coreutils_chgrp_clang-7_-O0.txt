
../repos/coreutils/src/chgrp:     file format elf32-littlearm


Disassembly of section .init:

0001118c <.init>:
   1118c:	push	{r3, lr}
   11190:	bl	11524 <__assert_fail@plt+0x48>
   11194:	pop	{r3, pc}

Disassembly of section .plt:

00011198 <fstatfs64@plt-0x14>:
   11198:	push	{lr}		; (str lr, [sp, #-4]!)
   1119c:	ldr	lr, [pc, #4]	; 111a8 <fstatfs64@plt-0x4>
   111a0:	add	lr, pc, lr
   111a4:	ldr	pc, [lr, #8]!
   111a8:	andeq	r4, r2, r8, asr lr

000111ac <fstatfs64@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #36, 20	; 0x24000
   111b4:	ldr	pc, [ip, #3672]!	; 0xe58

000111b8 <calloc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #36, 20	; 0x24000
   111c0:	ldr	pc, [ip, #3664]!	; 0xe50

000111c4 <endgrent@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #36, 20	; 0x24000
   111cc:	ldr	pc, [ip, #3656]!	; 0xe48

000111d0 <fputs_unlocked@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #36, 20	; 0x24000
   111d8:	ldr	pc, [ip, #3648]!	; 0xe40

000111dc <raise@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #36, 20	; 0x24000
   111e4:	ldr	pc, [ip, #3640]!	; 0xe38

000111e8 <strcmp@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #36, 20	; 0x24000
   111f0:	ldr	pc, [ip, #3632]!	; 0xe30

000111f4 <getpwuid@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #36, 20	; 0x24000
   111fc:	ldr	pc, [ip, #3624]!	; 0xe28

00011200 <printf@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #36, 20	; 0x24000
   11208:	ldr	pc, [ip, #3616]!	; 0xe20

0001120c <fflush@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #36, 20	; 0x24000
   11214:	ldr	pc, [ip, #3608]!	; 0xe18

00011218 <memmove@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #36, 20	; 0x24000
   11220:	ldr	pc, [ip, #3600]!	; 0xe10

00011224 <free@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #36, 20	; 0x24000
   1122c:	ldr	pc, [ip, #3592]!	; 0xe08

00011230 <_exit@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #36, 20	; 0x24000
   11238:	ldr	pc, [ip, #3584]!	; 0xe00

0001123c <memcpy@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #36, 20	; 0x24000
   11244:	ldr	pc, [ip, #3576]!	; 0xdf8

00011248 <mbsinit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #36, 20	; 0x24000
   11250:	ldr	pc, [ip, #3568]!	; 0xdf0

00011254 <memcmp@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #36, 20	; 0x24000
   1125c:	ldr	pc, [ip, #3560]!	; 0xde8

00011260 <stpcpy@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #36, 20	; 0x24000
   11268:	ldr	pc, [ip, #3552]!	; 0xde0

0001126c <realloc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #36, 20	; 0x24000
   11274:	ldr	pc, [ip, #3544]!	; 0xdd8

00011278 <textdomain@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #36, 20	; 0x24000
   11280:	ldr	pc, [ip, #3536]!	; 0xdd0

00011284 <__fxstatat64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #36, 20	; 0x24000
   1128c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011290 <iswprint@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #36, 20	; 0x24000
   11298:	ldr	pc, [ip, #3520]!	; 0xdc0

0001129c <__fxstat64@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #36, 20	; 0x24000
   112a4:	ldr	pc, [ip, #3512]!	; 0xdb8

000112a8 <lseek64@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #36, 20	; 0x24000
   112b0:	ldr	pc, [ip, #3504]!	; 0xdb0

000112b4 <__ctype_get_mb_cur_max@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #36, 20	; 0x24000
   112bc:	ldr	pc, [ip, #3496]!	; 0xda8

000112c0 <__fpending@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #36, 20	; 0x24000
   112c8:	ldr	pc, [ip, #3488]!	; 0xda0

000112cc <ferror_unlocked@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #36, 20	; 0x24000
   112d4:	ldr	pc, [ip, #3480]!	; 0xd98

000112d8 <mbrtowc@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #36, 20	; 0x24000
   112e0:	ldr	pc, [ip, #3472]!	; 0xd90

000112e4 <error@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #36, 20	; 0x24000
   112ec:	ldr	pc, [ip, #3464]!	; 0xd88

000112f0 <open64@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #36, 20	; 0x24000
   112f8:	ldr	pc, [ip, #3456]!	; 0xd80

000112fc <malloc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #36, 20	; 0x24000
   11304:	ldr	pc, [ip, #3448]!	; 0xd78

00011308 <__libc_start_main@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #36, 20	; 0x24000
   11310:	ldr	pc, [ip, #3440]!	; 0xd70

00011314 <__freading@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #36, 20	; 0x24000
   1131c:	ldr	pc, [ip, #3432]!	; 0xd68

00011320 <__gmon_start__@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #36, 20	; 0x24000
   11328:	ldr	pc, [ip, #3424]!	; 0xd60

0001132c <getopt_long@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #36, 20	; 0x24000
   11334:	ldr	pc, [ip, #3416]!	; 0xd58

00011338 <__ctype_b_loc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #36, 20	; 0x24000
   11340:	ldr	pc, [ip, #3408]!	; 0xd50

00011344 <exit@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #36, 20	; 0x24000
   1134c:	ldr	pc, [ip, #3400]!	; 0xd48

00011350 <gettext@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #36, 20	; 0x24000
   11358:	ldr	pc, [ip, #3392]!	; 0xd40

0001135c <strlen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #36, 20	; 0x24000
   11364:	ldr	pc, [ip, #3384]!	; 0xd38

00011368 <strchr@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #36, 20	; 0x24000
   11370:	ldr	pc, [ip, #3376]!	; 0xd30

00011374 <openat64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #36, 20	; 0x24000
   1137c:	ldr	pc, [ip, #3368]!	; 0xd28

00011380 <fchown@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #36, 20	; 0x24000
   11388:	ldr	pc, [ip, #3360]!	; 0xd20

0001138c <fprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #36, 20	; 0x24000
   11394:	ldr	pc, [ip, #3352]!	; 0xd18

00011398 <__errno_location@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #36, 20	; 0x24000
   113a0:	ldr	pc, [ip, #3344]!	; 0xd10

000113a4 <__cxa_atexit@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #36, 20	; 0x24000
   113ac:	ldr	pc, [ip, #3336]!	; 0xd08

000113b0 <memset@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #36, 20	; 0x24000
   113b8:	ldr	pc, [ip, #3328]!	; 0xd00

000113bc <fileno@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #36, 20	; 0x24000
   113c4:	ldr	pc, [ip, #3320]!	; 0xcf8

000113c8 <strtoumax@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #36, 20	; 0x24000
   113d0:	ldr	pc, [ip, #3312]!	; 0xcf0

000113d4 <fclose@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #36, 20	; 0x24000
   113dc:	ldr	pc, [ip, #3304]!	; 0xce8

000113e0 <fseeko64@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #36, 20	; 0x24000
   113e8:	ldr	pc, [ip, #3296]!	; 0xce0

000113ec <fcntl64@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #36, 20	; 0x24000
   113f4:	ldr	pc, [ip, #3288]!	; 0xcd8

000113f8 <setlocale@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #36, 20	; 0x24000
   11400:	ldr	pc, [ip, #3280]!	; 0xcd0

00011404 <strrchr@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #36, 20	; 0x24000
   1140c:	ldr	pc, [ip, #3272]!	; 0xcc8

00011410 <nl_langinfo@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #36, 20	; 0x24000
   11418:	ldr	pc, [ip, #3264]!	; 0xcc0

0001141c <readdir64@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #36, 20	; 0x24000
   11424:	ldr	pc, [ip, #3256]!	; 0xcb8

00011428 <fdopendir@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #36, 20	; 0x24000
   11430:	ldr	pc, [ip, #3248]!	; 0xcb0

00011434 <dirfd@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #36, 20	; 0x24000
   1143c:	ldr	pc, [ip, #3240]!	; 0xca8

00011440 <fchdir@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #36, 20	; 0x24000
   11448:	ldr	pc, [ip, #3232]!	; 0xca0

0001144c <qsort@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #36, 20	; 0x24000
   11454:	ldr	pc, [ip, #3224]!	; 0xc98

00011458 <fchownat@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #36, 20	; 0x24000
   11460:	ldr	pc, [ip, #3216]!	; 0xc90

00011464 <bindtextdomain@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #36, 20	; 0x24000
   1146c:	ldr	pc, [ip, #3208]!	; 0xc88

00011470 <__xstat64@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #36, 20	; 0x24000
   11478:	ldr	pc, [ip, #3200]!	; 0xc80

0001147c <fputs@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #36, 20	; 0x24000
   11484:	ldr	pc, [ip, #3192]!	; 0xc78

00011488 <strncmp@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #36, 20	; 0x24000
   11490:	ldr	pc, [ip, #3184]!	; 0xc70

00011494 <abort@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #36, 20	; 0x24000
   1149c:	ldr	pc, [ip, #3176]!	; 0xc68

000114a0 <close@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #36, 20	; 0x24000
   114a8:	ldr	pc, [ip, #3168]!	; 0xc60

000114ac <__lxstat64@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #36, 20	; 0x24000
   114b4:	ldr	pc, [ip, #3160]!	; 0xc58

000114b8 <closedir@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #36, 20	; 0x24000
   114c0:	ldr	pc, [ip, #3152]!	; 0xc50

000114c4 <getgrgid@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #36, 20	; 0x24000
   114cc:	ldr	pc, [ip, #3144]!	; 0xc48

000114d0 <getgrnam@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #36, 20	; 0x24000
   114d8:	ldr	pc, [ip, #3136]!	; 0xc40

000114dc <__assert_fail@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #36, 20	; 0x24000
   114e4:	ldr	pc, [ip, #3128]!	; 0xc38

Disassembly of section .text:

000114e8 <.text>:
   114e8:	mov	fp, #0
   114ec:	mov	lr, #0
   114f0:	pop	{r1}		; (ldr r1, [sp], #4)
   114f4:	mov	r2, sp
   114f8:	push	{r2}		; (str r2, [sp, #-4]!)
   114fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11500:	ldr	ip, [pc, #16]	; 11518 <__assert_fail@plt+0x3c>
   11504:	push	{ip}		; (str ip, [sp, #-4]!)
   11508:	ldr	r0, [pc, #12]	; 1151c <__assert_fail@plt+0x40>
   1150c:	ldr	r3, [pc, #12]	; 11520 <__assert_fail@plt+0x44>
   11510:	bl	11308 <__libc_start_main@plt>
   11514:	bl	11494 <abort@plt>
   11518:			; <UNDEFINED> instruction: 0x000247b0
   1151c:	andeq	r1, r1, ip, asr #19
   11520:	andeq	r4, r2, r0, asr r7
   11524:	ldr	r3, [pc, #20]	; 11540 <__assert_fail@plt+0x64>
   11528:	ldr	r2, [pc, #20]	; 11544 <__assert_fail@plt+0x68>
   1152c:	add	r3, pc, r3
   11530:	ldr	r2, [r3, r2]
   11534:	cmp	r2, #0
   11538:	bxeq	lr
   1153c:	b	11320 <__gmon_start__@plt>
   11540:	andeq	r4, r2, ip, asr #21
   11544:	andeq	r0, r0, r0, lsr #2
   11548:	ldr	r0, [pc, #24]	; 11568 <__assert_fail@plt+0x8c>
   1154c:	ldr	r3, [pc, #24]	; 1156c <__assert_fail@plt+0x90>
   11550:	cmp	r3, r0
   11554:	bxeq	lr
   11558:	ldr	r3, [pc, #16]	; 11570 <__assert_fail@plt+0x94>
   1155c:	cmp	r3, #0
   11560:	bxeq	lr
   11564:	bx	r3
   11568:	andeq	r6, r3, r4, ror r1
   1156c:	andeq	r6, r3, r4, ror r1
   11570:	andeq	r0, r0, r0
   11574:	ldr	r0, [pc, #36]	; 115a0 <__assert_fail@plt+0xc4>
   11578:	ldr	r1, [pc, #36]	; 115a4 <__assert_fail@plt+0xc8>
   1157c:	sub	r1, r1, r0
   11580:	asr	r1, r1, #2
   11584:	add	r1, r1, r1, lsr #31
   11588:	asrs	r1, r1, #1
   1158c:	bxeq	lr
   11590:	ldr	r3, [pc, #16]	; 115a8 <__assert_fail@plt+0xcc>
   11594:	cmp	r3, #0
   11598:	bxeq	lr
   1159c:	bx	r3
   115a0:	andeq	r6, r3, r4, ror r1
   115a4:	andeq	r6, r3, r4, ror r1
   115a8:	andeq	r0, r0, r0
   115ac:	push	{r4, lr}
   115b0:	ldr	r4, [pc, #24]	; 115d0 <__assert_fail@plt+0xf4>
   115b4:	ldrb	r3, [r4]
   115b8:	cmp	r3, #0
   115bc:	popne	{r4, pc}
   115c0:	bl	11548 <__assert_fail@plt+0x6c>
   115c4:	mov	r3, #1
   115c8:	strb	r3, [r4]
   115cc:	pop	{r4, pc}
   115d0:	muleq	r3, r4, r1
   115d4:	b	11574 <__assert_fail@plt+0x98>
   115d8:	push	{fp, lr}
   115dc:	mov	fp, sp
   115e0:	sub	sp, sp, #72	; 0x48
   115e4:	str	r0, [fp, #-4]
   115e8:	ldr	r0, [fp, #-4]
   115ec:	cmp	r0, #0
   115f0:	beq	11640 <__assert_fail@plt+0x164>
   115f4:	b	115f8 <__assert_fail@plt+0x11c>
   115f8:	movw	r0, #24968	; 0x6188
   115fc:	movt	r0, #3
   11600:	ldr	r0, [r0]
   11604:	movw	r1, #18480	; 0x4830
   11608:	movt	r1, #2
   1160c:	str	r0, [fp, #-8]
   11610:	mov	r0, r1
   11614:	bl	11350 <gettext@plt>
   11618:	movw	r1, #25016	; 0x61b8
   1161c:	movt	r1, #3
   11620:	ldr	r2, [r1]
   11624:	ldr	r1, [fp, #-8]
   11628:	str	r0, [fp, #-12]
   1162c:	mov	r0, r1
   11630:	ldr	r1, [fp, #-12]
   11634:	bl	1138c <fprintf@plt>
   11638:	str	r0, [fp, #-16]
   1163c:	b	11810 <__assert_fail@plt+0x334>
   11640:	movw	r0, #18519	; 0x4857
   11644:	movt	r0, #2
   11648:	bl	11350 <gettext@plt>
   1164c:	movw	lr, #25016	; 0x61b8
   11650:	movt	lr, #3
   11654:	ldr	r1, [lr]
   11658:	ldr	r2, [lr]
   1165c:	bl	11200 <printf@plt>
   11660:	movw	r1, #18604	; 0x48ac
   11664:	movt	r1, #2
   11668:	str	r0, [fp, #-20]	; 0xffffffec
   1166c:	mov	r0, r1
   11670:	bl	11350 <gettext@plt>
   11674:	movw	r1, #24972	; 0x618c
   11678:	movt	r1, #3
   1167c:	ldr	r1, [r1]
   11680:	bl	111d0 <fputs_unlocked@plt>
   11684:	movw	r1, #18712	; 0x4918
   11688:	movt	r1, #2
   1168c:	str	r0, [fp, #-24]	; 0xffffffe8
   11690:	mov	r0, r1
   11694:	bl	11350 <gettext@plt>
   11698:	movw	r1, #24972	; 0x618c
   1169c:	movt	r1, #3
   116a0:	ldr	r1, [r1]
   116a4:	bl	111d0 <fputs_unlocked@plt>
   116a8:	movw	r1, #18913	; 0x49e1
   116ac:	movt	r1, #2
   116b0:	str	r0, [fp, #-28]	; 0xffffffe4
   116b4:	mov	r0, r1
   116b8:	bl	11350 <gettext@plt>
   116bc:	movw	r1, #24972	; 0x618c
   116c0:	movt	r1, #3
   116c4:	ldr	r1, [r1]
   116c8:	bl	111d0 <fputs_unlocked@plt>
   116cc:	movw	r1, #19144	; 0x4ac8
   116d0:	movt	r1, #2
   116d4:	str	r0, [fp, #-32]	; 0xffffffe0
   116d8:	mov	r0, r1
   116dc:	bl	11350 <gettext@plt>
   116e0:	movw	r1, #24972	; 0x618c
   116e4:	movt	r1, #3
   116e8:	ldr	r1, [r1]
   116ec:	bl	111d0 <fputs_unlocked@plt>
   116f0:	movw	r1, #19263	; 0x4b3f
   116f4:	movt	r1, #2
   116f8:	str	r0, [sp, #36]	; 0x24
   116fc:	mov	r0, r1
   11700:	bl	11350 <gettext@plt>
   11704:	movw	r1, #24972	; 0x618c
   11708:	movt	r1, #3
   1170c:	ldr	r1, [r1]
   11710:	bl	111d0 <fputs_unlocked@plt>
   11714:	movw	r1, #19391	; 0x4bbf
   11718:	movt	r1, #2
   1171c:	str	r0, [sp, #32]
   11720:	mov	r0, r1
   11724:	bl	11350 <gettext@plt>
   11728:	movw	r1, #24972	; 0x618c
   1172c:	movt	r1, #3
   11730:	ldr	r1, [r1]
   11734:	bl	111d0 <fputs_unlocked@plt>
   11738:	movw	r1, #19497	; 0x4c29
   1173c:	movt	r1, #2
   11740:	str	r0, [sp, #28]
   11744:	mov	r0, r1
   11748:	bl	11350 <gettext@plt>
   1174c:	movw	r1, #24972	; 0x618c
   11750:	movt	r1, #3
   11754:	ldr	r1, [r1]
   11758:	bl	111d0 <fputs_unlocked@plt>
   1175c:	movw	r1, #19568	; 0x4c70
   11760:	movt	r1, #2
   11764:	str	r0, [sp, #24]
   11768:	mov	r0, r1
   1176c:	bl	11350 <gettext@plt>
   11770:	movw	r1, #24972	; 0x618c
   11774:	movt	r1, #3
   11778:	ldr	r1, [r1]
   1177c:	bl	111d0 <fputs_unlocked@plt>
   11780:	movw	r1, #20033	; 0x4e41
   11784:	movt	r1, #2
   11788:	str	r0, [sp, #20]
   1178c:	mov	r0, r1
   11790:	bl	11350 <gettext@plt>
   11794:	movw	r1, #24972	; 0x618c
   11798:	movt	r1, #3
   1179c:	ldr	r1, [r1]
   117a0:	bl	111d0 <fputs_unlocked@plt>
   117a4:	movw	r1, #20078	; 0x4e6e
   117a8:	movt	r1, #2
   117ac:	str	r0, [sp, #16]
   117b0:	mov	r0, r1
   117b4:	bl	11350 <gettext@plt>
   117b8:	movw	r1, #24972	; 0x618c
   117bc:	movt	r1, #3
   117c0:	ldr	r1, [r1]
   117c4:	bl	111d0 <fputs_unlocked@plt>
   117c8:	movw	r1, #20132	; 0x4ea4
   117cc:	movt	r1, #2
   117d0:	str	r0, [sp, #12]
   117d4:	mov	r0, r1
   117d8:	bl	11350 <gettext@plt>
   117dc:	movw	r1, #25016	; 0x61b8
   117e0:	movt	r1, #3
   117e4:	ldr	r2, [r1]
   117e8:	ldr	r1, [r1]
   117ec:	str	r1, [sp, #8]
   117f0:	mov	r1, r2
   117f4:	ldr	r2, [sp, #8]
   117f8:	bl	11200 <printf@plt>
   117fc:	movw	r1, #20265	; 0x4f29
   11800:	movt	r1, #2
   11804:	str	r0, [sp, #4]
   11808:	mov	r0, r1
   1180c:	bl	11818 <__assert_fail@plt+0x33c>
   11810:	ldr	r0, [fp, #-4]
   11814:	bl	11344 <exit@plt>
   11818:	push	{fp, lr}
   1181c:	mov	fp, sp
   11820:	sub	sp, sp, #96	; 0x60
   11824:	add	r1, sp, #36	; 0x24
   11828:	movw	r2, #21084	; 0x525c
   1182c:	movt	r2, #2
   11830:	str	r0, [fp, #-4]
   11834:	mov	r0, r1
   11838:	str	r1, [sp, #20]
   1183c:	mov	r1, r2
   11840:	movw	r2, #56	; 0x38
   11844:	bl	1123c <memcpy@plt>
   11848:	ldr	r0, [fp, #-4]
   1184c:	str	r0, [sp, #32]
   11850:	ldr	r0, [sp, #20]
   11854:	str	r0, [sp, #28]
   11858:	ldr	r0, [sp, #28]
   1185c:	ldr	r0, [r0]
   11860:	movw	r1, #0
   11864:	cmp	r0, r1
   11868:	movw	r0, #0
   1186c:	str	r0, [sp, #16]
   11870:	beq	1189c <__assert_fail@plt+0x3c0>
   11874:	ldr	r0, [fp, #-4]
   11878:	ldr	r1, [sp, #28]
   1187c:	ldr	r1, [r1]
   11880:	bl	111e8 <strcmp@plt>
   11884:	cmp	r0, #0
   11888:	movw	r0, #0
   1188c:	moveq	r0, #1
   11890:	mvn	r1, #0
   11894:	eor	r0, r0, r1
   11898:	str	r0, [sp, #16]
   1189c:	ldr	r0, [sp, #16]
   118a0:	tst	r0, #1
   118a4:	beq	118b8 <__assert_fail@plt+0x3dc>
   118a8:	ldr	r0, [sp, #28]
   118ac:	add	r0, r0, #8
   118b0:	str	r0, [sp, #28]
   118b4:	b	11858 <__assert_fail@plt+0x37c>
   118b8:	ldr	r0, [sp, #28]
   118bc:	ldr	r0, [r0, #4]
   118c0:	movw	r1, #0
   118c4:	cmp	r0, r1
   118c8:	beq	118d8 <__assert_fail@plt+0x3fc>
   118cc:	ldr	r0, [sp, #28]
   118d0:	ldr	r0, [r0, #4]
   118d4:	str	r0, [sp, #32]
   118d8:	movw	r0, #20556	; 0x504c
   118dc:	movt	r0, #2
   118e0:	bl	11350 <gettext@plt>
   118e4:	movw	r1, #20304	; 0x4f50
   118e8:	movt	r1, #2
   118ec:	movw	r2, #20579	; 0x5063
   118f0:	movt	r2, #2
   118f4:	bl	11200 <printf@plt>
   118f8:	movw	r1, #5
   118fc:	str	r0, [sp, #12]
   11900:	mov	r0, r1
   11904:	movw	r1, #0
   11908:	bl	113f8 <setlocale@plt>
   1190c:	str	r0, [sp, #24]
   11910:	ldr	r0, [sp, #24]
   11914:	movw	r1, #0
   11918:	cmp	r0, r1
   1191c:	beq	1195c <__assert_fail@plt+0x480>
   11920:	ldr	r0, [sp, #24]
   11924:	movw	r1, #20619	; 0x508b
   11928:	movt	r1, #2
   1192c:	movw	r2, #3
   11930:	bl	11488 <strncmp@plt>
   11934:	cmp	r0, #0
   11938:	beq	1195c <__assert_fail@plt+0x480>
   1193c:	movw	r0, #20623	; 0x508f
   11940:	movt	r0, #2
   11944:	bl	11350 <gettext@plt>
   11948:	movw	lr, #24972	; 0x618c
   1194c:	movt	lr, #3
   11950:	ldr	r1, [lr]
   11954:	bl	111d0 <fputs_unlocked@plt>
   11958:	str	r0, [sp, #8]
   1195c:	movw	r0, #20694	; 0x50d6
   11960:	movt	r0, #2
   11964:	bl	11350 <gettext@plt>
   11968:	ldr	r2, [fp, #-4]
   1196c:	movw	r1, #20579	; 0x5063
   11970:	movt	r1, #2
   11974:	bl	11200 <printf@plt>
   11978:	movw	r1, #20721	; 0x50f1
   1197c:	movt	r1, #2
   11980:	str	r0, [sp, #4]
   11984:	mov	r0, r1
   11988:	bl	11350 <gettext@plt>
   1198c:	ldr	r1, [sp, #32]
   11990:	ldr	r2, [sp, #32]
   11994:	ldr	lr, [fp, #-4]
   11998:	cmp	r2, lr
   1199c:	movw	r2, #0
   119a0:	moveq	r2, #1
   119a4:	tst	r2, #1
   119a8:	movw	r2, #20032	; 0x4e40
   119ac:	movt	r2, #2
   119b0:	movw	lr, #20489	; 0x5009
   119b4:	movt	lr, #2
   119b8:	movne	r2, lr
   119bc:	bl	11200 <printf@plt>
   119c0:	str	r0, [sp]
   119c4:	mov	sp, fp
   119c8:	pop	{fp, pc}
   119cc:	push	{r4, r5, fp, lr}
   119d0:	add	fp, sp, #8
   119d4:	sub	sp, sp, #256	; 0x100
   119d8:	movw	r2, #0
   119dc:	str	r2, [fp, #-12]
   119e0:	str	r0, [fp, #-16]
   119e4:	str	r1, [fp, #-20]	; 0xffffffec
   119e8:	movw	r0, #0
   119ec:	strb	r0, [fp, #-21]	; 0xffffffeb
   119f0:	movw	r0, #16
   119f4:	str	r0, [fp, #-32]	; 0xffffffe0
   119f8:	mvn	r0, #0
   119fc:	str	r0, [fp, #-36]	; 0xffffffdc
   11a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a04:	ldr	r0, [r0]
   11a08:	bl	19440 <__assert_fail@plt+0x7f64>
   11a0c:	movw	r0, #6
   11a10:	movw	r1, #20032	; 0x4e40
   11a14:	movt	r1, #2
   11a18:	bl	113f8 <setlocale@plt>
   11a1c:	movw	r1, #20308	; 0x4f54
   11a20:	movt	r1, #2
   11a24:	str	r0, [sp, #80]	; 0x50
   11a28:	mov	r0, r1
   11a2c:	movw	r1, #20271	; 0x4f2f
   11a30:	movt	r1, #2
   11a34:	bl	11464 <bindtextdomain@plt>
   11a38:	movw	r1, #20308	; 0x4f54
   11a3c:	movt	r1, #2
   11a40:	str	r0, [sp, #76]	; 0x4c
   11a44:	mov	r0, r1
   11a48:	bl	11278 <textdomain@plt>
   11a4c:	movw	r1, #14168	; 0x3758
   11a50:	movt	r1, #1
   11a54:	str	r0, [sp, #72]	; 0x48
   11a58:	mov	r0, r1
   11a5c:	bl	247b4 <__assert_fail@plt+0x132d8>
   11a60:	sub	r1, fp, #60	; 0x3c
   11a64:	str	r0, [sp, #68]	; 0x44
   11a68:	mov	r0, r1
   11a6c:	bl	120a4 <__assert_fail@plt+0xbc8>
   11a70:	ldr	r0, [fp, #-16]
   11a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a78:	movw	r2, #20295	; 0x4f47
   11a7c:	movt	r2, #2
   11a80:	movw	r3, #20876	; 0x518c
   11a84:	movt	r3, #2
   11a88:	movw	ip, #0
   11a8c:	str	ip, [sp]
   11a90:	bl	1132c <getopt_long@plt>
   11a94:	str	r0, [fp, #-68]	; 0xffffffbc
   11a98:	cmn	r0, #1
   11a9c:	beq	11c98 <__assert_fail@plt+0x7bc>
   11aa0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11aa4:	cmn	r0, #3
   11aa8:	str	r0, [sp, #64]	; 0x40
   11aac:	beq	11c38 <__assert_fail@plt+0x75c>
   11ab0:	b	11ab4 <__assert_fail@plt+0x5d8>
   11ab4:	ldr	r0, [sp, #64]	; 0x40
   11ab8:	cmn	r0, #2
   11abc:	beq	11c30 <__assert_fail@plt+0x754>
   11ac0:	b	11ac4 <__assert_fail@plt+0x5e8>
   11ac4:	ldr	r0, [sp, #64]	; 0x40
   11ac8:	cmp	r0, #72	; 0x48
   11acc:	beq	11b90 <__assert_fail@plt+0x6b4>
   11ad0:	b	11ad4 <__assert_fail@plt+0x5f8>
   11ad4:	ldr	r0, [sp, #64]	; 0x40
   11ad8:	cmp	r0, #76	; 0x4c
   11adc:	beq	11b9c <__assert_fail@plt+0x6c0>
   11ae0:	b	11ae4 <__assert_fail@plt+0x608>
   11ae4:	ldr	r0, [sp, #64]	; 0x40
   11ae8:	cmp	r0, #80	; 0x50
   11aec:	beq	11ba8 <__assert_fail@plt+0x6cc>
   11af0:	b	11af4 <__assert_fail@plt+0x618>
   11af4:	ldr	r0, [sp, #64]	; 0x40
   11af8:	cmp	r0, #82	; 0x52
   11afc:	beq	11c00 <__assert_fail@plt+0x724>
   11b00:	b	11b04 <__assert_fail@plt+0x628>
   11b04:	ldr	r0, [sp, #64]	; 0x40
   11b08:	cmp	r0, #99	; 0x63
   11b0c:	beq	11c0c <__assert_fail@plt+0x730>
   11b10:	b	11b14 <__assert_fail@plt+0x638>
   11b14:	ldr	r0, [sp, #64]	; 0x40
   11b18:	cmp	r0, #102	; 0x66
   11b1c:	beq	11c18 <__assert_fail@plt+0x73c>
   11b20:	b	11b24 <__assert_fail@plt+0x648>
   11b24:	ldr	r0, [sp, #64]	; 0x40
   11b28:	cmp	r0, #104	; 0x68
   11b2c:	beq	11bb4 <__assert_fail@plt+0x6d8>
   11b30:	b	11b34 <__assert_fail@plt+0x658>
   11b34:	ldr	r0, [sp, #64]	; 0x40
   11b38:	cmp	r0, #118	; 0x76
   11b3c:	beq	11c24 <__assert_fail@plt+0x748>
   11b40:	b	11b44 <__assert_fail@plt+0x668>
   11b44:	ldr	r0, [sp, #64]	; 0x40
   11b48:	cmp	r0, #256	; 0x100
   11b4c:	beq	11bc0 <__assert_fail@plt+0x6e4>
   11b50:	b	11b54 <__assert_fail@plt+0x678>
   11b54:	movw	r0, #257	; 0x101
   11b58:	ldr	r1, [sp, #64]	; 0x40
   11b5c:	cmp	r1, r0
   11b60:	beq	11bcc <__assert_fail@plt+0x6f0>
   11b64:	b	11b68 <__assert_fail@plt+0x68c>
   11b68:	movw	r0, #258	; 0x102
   11b6c:	ldr	r1, [sp, #64]	; 0x40
   11b70:	cmp	r1, r0
   11b74:	beq	11bd8 <__assert_fail@plt+0x6fc>
   11b78:	b	11b7c <__assert_fail@plt+0x6a0>
   11b7c:	movw	r0, #259	; 0x103
   11b80:	ldr	r1, [sp, #64]	; 0x40
   11b84:	cmp	r1, r0
   11b88:	beq	11be4 <__assert_fail@plt+0x708>
   11b8c:	b	11c8c <__assert_fail@plt+0x7b0>
   11b90:	movw	r0, #17
   11b94:	str	r0, [fp, #-32]	; 0xffffffe0
   11b98:	b	11c94 <__assert_fail@plt+0x7b8>
   11b9c:	movw	r0, #2
   11ba0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ba4:	b	11c94 <__assert_fail@plt+0x7b8>
   11ba8:	movw	r0, #16
   11bac:	str	r0, [fp, #-32]	; 0xffffffe0
   11bb0:	b	11c94 <__assert_fail@plt+0x7b8>
   11bb4:	movw	r0, #0
   11bb8:	str	r0, [fp, #-36]	; 0xffffffdc
   11bbc:	b	11c94 <__assert_fail@plt+0x7b8>
   11bc0:	movw	r0, #1
   11bc4:	str	r0, [fp, #-36]	; 0xffffffdc
   11bc8:	b	11c94 <__assert_fail@plt+0x7b8>
   11bcc:	movw	r0, #0
   11bd0:	strb	r0, [fp, #-21]	; 0xffffffeb
   11bd4:	b	11c94 <__assert_fail@plt+0x7b8>
   11bd8:	movw	r0, #1
   11bdc:	strb	r0, [fp, #-21]	; 0xffffffeb
   11be0:	b	11c94 <__assert_fail@plt+0x7b8>
   11be4:	movw	r0, #24976	; 0x6190
   11be8:	movt	r0, #3
   11bec:	ldr	r0, [r0]
   11bf0:	movw	r1, #24984	; 0x6198
   11bf4:	movt	r1, #3
   11bf8:	str	r0, [r1]
   11bfc:	b	11c94 <__assert_fail@plt+0x7b8>
   11c00:	movw	r0, #1
   11c04:	strb	r0, [fp, #-56]	; 0xffffffc8
   11c08:	b	11c94 <__assert_fail@plt+0x7b8>
   11c0c:	movw	r0, #1
   11c10:	str	r0, [fp, #-60]	; 0xffffffc4
   11c14:	b	11c94 <__assert_fail@plt+0x7b8>
   11c18:	movw	r0, #1
   11c1c:	strb	r0, [fp, #-47]	; 0xffffffd1
   11c20:	b	11c94 <__assert_fail@plt+0x7b8>
   11c24:	movw	r0, #0
   11c28:	str	r0, [fp, #-60]	; 0xffffffc4
   11c2c:	b	11c94 <__assert_fail@plt+0x7b8>
   11c30:	movw	r0, #0
   11c34:	bl	115d8 <__assert_fail@plt+0xfc>
   11c38:	movw	r0, #24972	; 0x618c
   11c3c:	movt	r0, #3
   11c40:	ldr	r0, [r0]
   11c44:	movw	r1, #24876	; 0x612c
   11c48:	movt	r1, #3
   11c4c:	ldr	r3, [r1]
   11c50:	movw	r1, #20265	; 0x4f29
   11c54:	movt	r1, #2
   11c58:	movw	r2, #20304	; 0x4f50
   11c5c:	movt	r2, #2
   11c60:	movw	ip, #20318	; 0x4f5e
   11c64:	movt	ip, #2
   11c68:	str	ip, [sp]
   11c6c:	movw	ip, #20334	; 0x4f6e
   11c70:	movt	ip, #2
   11c74:	str	ip, [sp, #4]
   11c78:	movw	ip, #0
   11c7c:	str	ip, [sp, #8]
   11c80:	bl	1c440 <__assert_fail@plt+0xaf64>
   11c84:	movw	r0, #0
   11c88:	bl	11344 <exit@plt>
   11c8c:	movw	r0, #1
   11c90:	bl	115d8 <__assert_fail@plt+0xfc>
   11c94:	b	11a70 <__assert_fail@plt+0x594>
   11c98:	ldrb	r0, [fp, #-56]	; 0xffffffc8
   11c9c:	tst	r0, #1
   11ca0:	beq	11cec <__assert_fail@plt+0x810>
   11ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ca8:	cmp	r0, #16
   11cac:	bne	11ce8 <__assert_fail@plt+0x80c>
   11cb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11cb4:	cmp	r0, #1
   11cb8:	bne	11ce0 <__assert_fail@plt+0x804>
   11cbc:	movw	r0, #20347	; 0x4f7b
   11cc0:	movt	r0, #2
   11cc4:	bl	11350 <gettext@plt>
   11cc8:	movw	lr, #1
   11ccc:	str	r0, [sp, #60]	; 0x3c
   11cd0:	mov	r0, lr
   11cd4:	movw	r1, #0
   11cd8:	ldr	r2, [sp, #60]	; 0x3c
   11cdc:	bl	112e4 <error@plt>
   11ce0:	movw	r0, #0
   11ce4:	str	r0, [fp, #-36]	; 0xffffffdc
   11ce8:	b	11cf4 <__assert_fail@plt+0x818>
   11cec:	movw	r0, #16
   11cf0:	str	r0, [fp, #-32]	; 0xffffffe0
   11cf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11cf8:	cmp	r0, #0
   11cfc:	movw	r0, #0
   11d00:	movne	r0, #1
   11d04:	and	r0, r0, #1
   11d08:	strb	r0, [fp, #-48]	; 0xffffffd0
   11d0c:	ldr	r0, [fp, #-16]
   11d10:	movw	r1, #24960	; 0x6180
   11d14:	movt	r1, #3
   11d18:	ldr	r1, [r1]
   11d1c:	sub	r0, r0, r1
   11d20:	movw	r1, #24984	; 0x6198
   11d24:	movt	r1, #3
   11d28:	ldr	r1, [r1]
   11d2c:	movw	r2, #0
   11d30:	cmp	r1, r2
   11d34:	movw	r1, #0
   11d38:	movne	r1, #1
   11d3c:	tst	r1, #1
   11d40:	movw	r1, #1
   11d44:	moveq	r1, #2
   11d48:	cmp	r0, r1
   11d4c:	bge	11ddc <__assert_fail@plt+0x900>
   11d50:	ldr	r0, [fp, #-16]
   11d54:	movw	r1, #24960	; 0x6180
   11d58:	movt	r1, #3
   11d5c:	ldr	r1, [r1]
   11d60:	cmp	r0, r1
   11d64:	bgt	11d90 <__assert_fail@plt+0x8b4>
   11d68:	movw	r0, #20389	; 0x4fa5
   11d6c:	movt	r0, #2
   11d70:	bl	11350 <gettext@plt>
   11d74:	movw	lr, #0
   11d78:	str	r0, [sp, #56]	; 0x38
   11d7c:	mov	r0, lr
   11d80:	mov	r1, lr
   11d84:	ldr	r2, [sp, #56]	; 0x38
   11d88:	bl	112e4 <error@plt>
   11d8c:	b	11dd4 <__assert_fail@plt+0x8f8>
   11d90:	movw	r0, #20405	; 0x4fb5
   11d94:	movt	r0, #2
   11d98:	bl	11350 <gettext@plt>
   11d9c:	ldr	lr, [fp, #-20]	; 0xffffffec
   11da0:	ldr	r1, [fp, #-16]
   11da4:	sub	r1, r1, #1
   11da8:	add	r1, lr, r1, lsl #2
   11dac:	ldr	r1, [r1]
   11db0:	str	r0, [sp, #52]	; 0x34
   11db4:	mov	r0, r1
   11db8:	bl	1ba9c <__assert_fail@plt+0xa5c0>
   11dbc:	movw	r1, #0
   11dc0:	str	r0, [sp, #48]	; 0x30
   11dc4:	mov	r0, r1
   11dc8:	ldr	r2, [sp, #52]	; 0x34
   11dcc:	ldr	r3, [sp, #48]	; 0x30
   11dd0:	bl	112e4 <error@plt>
   11dd4:	movw	r0, #1
   11dd8:	bl	115d8 <__assert_fail@plt+0xfc>
   11ddc:	movw	r0, #24984	; 0x6198
   11de0:	movt	r0, #3
   11de4:	ldr	r0, [r0]
   11de8:	movw	r1, #0
   11dec:	cmp	r0, r1
   11df0:	beq	11e78 <__assert_fail@plt+0x99c>
   11df4:	movw	r0, #24984	; 0x6198
   11df8:	movt	r0, #3
   11dfc:	ldr	r0, [r0]
   11e00:	add	r1, sp, #88	; 0x58
   11e04:	bl	247cc <__assert_fail@plt+0x132f0>
   11e08:	cmp	r0, #0
   11e0c:	beq	11e60 <__assert_fail@plt+0x984>
   11e10:	bl	11398 <__errno_location@plt>
   11e14:	ldr	r1, [r0]
   11e18:	movw	r0, #20430	; 0x4fce
   11e1c:	movt	r0, #2
   11e20:	str	r1, [sp, #44]	; 0x2c
   11e24:	bl	11350 <gettext@plt>
   11e28:	movw	r1, #24984	; 0x6198
   11e2c:	movt	r1, #3
   11e30:	ldr	r1, [r1]
   11e34:	movw	lr, #4
   11e38:	str	r0, [sp, #40]	; 0x28
   11e3c:	mov	r0, lr
   11e40:	bl	1b704 <__assert_fail@plt+0xa228>
   11e44:	movw	r1, #1
   11e48:	str	r0, [sp, #36]	; 0x24
   11e4c:	mov	r0, r1
   11e50:	ldr	r1, [sp, #44]	; 0x2c
   11e54:	ldr	r2, [sp, #40]	; 0x28
   11e58:	ldr	r3, [sp, #36]	; 0x24
   11e5c:	bl	112e4 <error@plt>
   11e60:	ldr	r0, [sp, #116]	; 0x74
   11e64:	str	r0, [fp, #-28]	; 0xffffffe4
   11e68:	ldr	r0, [sp, #116]	; 0x74
   11e6c:	bl	1212c <__assert_fail@plt+0xc50>
   11e70:	str	r0, [fp, #-40]	; 0xffffffd8
   11e74:	b	11edc <__assert_fail@plt+0xa00>
   11e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e7c:	movw	r1, #24960	; 0x6180
   11e80:	movt	r1, #3
   11e84:	ldr	r2, [r1]
   11e88:	add	r3, r2, #1
   11e8c:	str	r3, [r1]
   11e90:	add	r0, r0, r2, lsl #2
   11e94:	ldr	r0, [r0]
   11e98:	str	r0, [sp, #84]	; 0x54
   11e9c:	ldr	r0, [sp, #84]	; 0x54
   11ea0:	ldrb	r0, [r0]
   11ea4:	cmp	r0, #0
   11ea8:	beq	11ebc <__assert_fail@plt+0x9e0>
   11eac:	ldr	r0, [sp, #84]	; 0x54
   11eb0:	bl	1f374 <__assert_fail@plt+0xde98>
   11eb4:	str	r0, [sp, #32]
   11eb8:	b	11ec8 <__assert_fail@plt+0x9ec>
   11ebc:	movw	r0, #0
   11ec0:	str	r0, [sp, #32]
   11ec4:	b	11ec8 <__assert_fail@plt+0x9ec>
   11ec8:	ldr	r0, [sp, #32]
   11ecc:	str	r0, [fp, #-40]	; 0xffffffd8
   11ed0:	ldr	r0, [sp, #84]	; 0x54
   11ed4:	bl	11fc8 <__assert_fail@plt+0xaec>
   11ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   11edc:	ldrb	r0, [fp, #-56]	; 0xffffffc8
   11ee0:	tst	r0, #1
   11ee4:	beq	11f64 <__assert_fail@plt+0xa88>
   11ee8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   11eec:	tst	r0, #1
   11ef0:	beq	11f64 <__assert_fail@plt+0xa88>
   11ef4:	movw	r0, #24992	; 0x61a0
   11ef8:	movt	r0, #3
   11efc:	bl	1bbd4 <__assert_fail@plt+0xa6f8>
   11f00:	str	r0, [fp, #-52]	; 0xffffffcc
   11f04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f08:	movw	lr, #0
   11f0c:	cmp	r0, lr
   11f10:	bne	11f60 <__assert_fail@plt+0xa84>
   11f14:	bl	11398 <__errno_location@plt>
   11f18:	ldr	r1, [r0]
   11f1c:	movw	r0, #20430	; 0x4fce
   11f20:	movt	r0, #2
   11f24:	str	r1, [sp, #28]
   11f28:	bl	11350 <gettext@plt>
   11f2c:	movw	r1, #4
   11f30:	str	r0, [sp, #24]
   11f34:	mov	r0, r1
   11f38:	movw	r1, #23235	; 0x5ac3
   11f3c:	movt	r1, #2
   11f40:	bl	1b704 <__assert_fail@plt+0xa228>
   11f44:	movw	r1, #1
   11f48:	str	r0, [sp, #20]
   11f4c:	mov	r0, r1
   11f50:	ldr	r1, [sp, #28]
   11f54:	ldr	r2, [sp, #24]
   11f58:	ldr	r3, [sp, #20]
   11f5c:	bl	112e4 <error@plt>
   11f60:	b	11f64 <__assert_fail@plt+0xa88>
   11f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f68:	orr	r0, r0, #1024	; 0x400
   11f6c:	str	r0, [fp, #-32]	; 0xffffffe0
   11f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f74:	movw	r1, #24960	; 0x6180
   11f78:	movt	r1, #3
   11f7c:	ldr	r1, [r1]
   11f80:	add	r0, r0, r1, lsl #2
   11f84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11f88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f8c:	mvn	r2, #0
   11f90:	str	r2, [sp, #16]
   11f94:	ldr	ip, [sp, #16]
   11f98:	str	ip, [sp]
   11f9c:	str	ip, [sp, #4]
   11fa0:	sub	lr, fp, #60	; 0x3c
   11fa4:	str	lr, [sp, #8]
   11fa8:	bl	121ec <__assert_fail@plt+0xd10>
   11fac:	and	r0, r0, #1
   11fb0:	strb	r0, [fp, #-61]	; 0xffffffc3
   11fb4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11fb8:	tst	r0, #1
   11fbc:	movw	r0, #0
   11fc0:	moveq	r0, #1
   11fc4:	bl	11344 <exit@plt>
   11fc8:	push	{fp, lr}
   11fcc:	mov	fp, sp
   11fd0:	sub	sp, sp, #40	; 0x28
   11fd4:	str	r0, [fp, #-4]
   11fd8:	mvn	r0, #0
   11fdc:	str	r0, [fp, #-8]
   11fe0:	ldr	r0, [fp, #-4]
   11fe4:	ldrsb	r0, [r0]
   11fe8:	cmp	r0, #0
   11fec:	beq	12098 <__assert_fail@plt+0xbbc>
   11ff0:	ldr	r0, [fp, #-4]
   11ff4:	bl	114d0 <getgrnam@plt>
   11ff8:	str	r0, [fp, #-12]
   11ffc:	ldr	r0, [fp, #-12]
   12000:	movw	lr, #0
   12004:	cmp	r0, lr
   12008:	beq	1201c <__assert_fail@plt+0xb40>
   1200c:	ldr	r0, [fp, #-12]
   12010:	ldr	r0, [r0, #8]
   12014:	str	r0, [fp, #-8]
   12018:	b	12094 <__assert_fail@plt+0xbb8>
   1201c:	ldr	r0, [fp, #-4]
   12020:	movw	r1, #0
   12024:	movw	r2, #10
   12028:	add	r3, sp, #16
   1202c:	movw	ip, #20032	; 0x4e40
   12030:	movt	ip, #2
   12034:	str	ip, [sp]
   12038:	bl	1f524 <__assert_fail@plt+0xe048>
   1203c:	cmp	r0, #0
   12040:	bne	12054 <__assert_fail@plt+0xb78>
   12044:	ldr	r0, [sp, #20]
   12048:	cmp	r0, #0
   1204c:	beq	1208c <__assert_fail@plt+0xbb0>
   12050:	b	12054 <__assert_fail@plt+0xb78>
   12054:	movw	r0, #20856	; 0x5178
   12058:	movt	r0, #2
   1205c:	bl	11350 <gettext@plt>
   12060:	ldr	lr, [fp, #-4]
   12064:	str	r0, [sp, #12]
   12068:	mov	r0, lr
   1206c:	bl	1ba9c <__assert_fail@plt+0xa5c0>
   12070:	movw	lr, #1
   12074:	str	r0, [sp, #8]
   12078:	mov	r0, lr
   1207c:	movw	r1, #0
   12080:	ldr	r2, [sp, #12]
   12084:	ldr	r3, [sp, #8]
   12088:	bl	112e4 <error@plt>
   1208c:	ldr	r0, [sp, #16]
   12090:	str	r0, [fp, #-8]
   12094:	bl	111c4 <endgrent@plt>
   12098:	ldr	r0, [fp, #-8]
   1209c:	mov	sp, fp
   120a0:	pop	{fp, pc}
   120a4:	sub	sp, sp, #4
   120a8:	str	r0, [sp]
   120ac:	ldr	r0, [sp]
   120b0:	movw	r1, #2
   120b4:	str	r1, [r0]
   120b8:	ldr	r0, [sp]
   120bc:	movw	r1, #0
   120c0:	str	r1, [r0, #8]
   120c4:	ldr	r0, [sp]
   120c8:	movw	r2, #1
   120cc:	strb	r2, [r0, #12]
   120d0:	ldr	r0, [sp]
   120d4:	movw	r2, #0
   120d8:	strb	r2, [r0, #4]
   120dc:	ldr	r0, [sp]
   120e0:	strb	r2, [r0, #13]
   120e4:	ldr	r0, [sp]
   120e8:	str	r1, [r0, #16]
   120ec:	ldr	r0, [sp]
   120f0:	str	r1, [r0, #20]
   120f4:	add	sp, sp, #4
   120f8:	bx	lr
   120fc:	push	{fp, lr}
   12100:	mov	fp, sp
   12104:	sub	sp, sp, #8
   12108:	str	r0, [sp, #4]
   1210c:	ldr	r0, [sp, #4]
   12110:	ldr	r0, [r0, #16]
   12114:	bl	13878 <__assert_fail@plt+0x239c>
   12118:	ldr	r0, [sp, #4]
   1211c:	ldr	r0, [r0, #20]
   12120:	bl	13878 <__assert_fail@plt+0x239c>
   12124:	mov	sp, fp
   12128:	pop	{fp, pc}
   1212c:	push	{fp, lr}
   12130:	mov	fp, sp
   12134:	sub	sp, sp, #40	; 0x28
   12138:	str	r0, [fp, #-4]
   1213c:	ldr	r0, [fp, #-4]
   12140:	bl	114c4 <getgrgid@plt>
   12144:	str	r0, [sp, #8]
   12148:	ldr	r0, [sp, #8]
   1214c:	movw	lr, #0
   12150:	cmp	r0, lr
   12154:	beq	12168 <__assert_fail@plt+0xc8c>
   12158:	ldr	r0, [sp, #8]
   1215c:	ldr	r0, [r0]
   12160:	str	r0, [sp, #4]
   12164:	b	1217c <__assert_fail@plt+0xca0>
   12168:	add	r2, sp, #15
   1216c:	ldr	r0, [fp, #-4]
   12170:	mov	r1, #0
   12174:	bl	191b0 <__assert_fail@plt+0x7cd4>
   12178:	str	r0, [sp, #4]
   1217c:	ldr	r0, [sp, #4]
   12180:	bl	1f374 <__assert_fail@plt+0xde98>
   12184:	mov	sp, fp
   12188:	pop	{fp, pc}
   1218c:	push	{fp, lr}
   12190:	mov	fp, sp
   12194:	sub	sp, sp, #40	; 0x28
   12198:	str	r0, [fp, #-4]
   1219c:	ldr	r0, [fp, #-4]
   121a0:	bl	111f4 <getpwuid@plt>
   121a4:	str	r0, [sp, #8]
   121a8:	ldr	r0, [sp, #8]
   121ac:	movw	lr, #0
   121b0:	cmp	r0, lr
   121b4:	beq	121c8 <__assert_fail@plt+0xcec>
   121b8:	ldr	r0, [sp, #8]
   121bc:	ldr	r0, [r0]
   121c0:	str	r0, [sp, #4]
   121c4:	b	121dc <__assert_fail@plt+0xd00>
   121c8:	add	r2, sp, #15
   121cc:	ldr	r0, [fp, #-4]
   121d0:	mov	r1, #0
   121d4:	bl	191b0 <__assert_fail@plt+0x7cd4>
   121d8:	str	r0, [sp, #4]
   121dc:	ldr	r0, [sp, #4]
   121e0:	bl	1f374 <__assert_fail@plt+0xde98>
   121e4:	mov	sp, fp
   121e8:	pop	{fp, pc}
   121ec:	push	{r4, sl, fp, lr}
   121f0:	add	fp, sp, #8
   121f4:	sub	sp, sp, #80	; 0x50
   121f8:	ldr	ip, [fp, #16]
   121fc:	ldr	lr, [fp, #12]
   12200:	ldr	r4, [fp, #8]
   12204:	str	r0, [fp, #-12]
   12208:	str	r1, [fp, #-16]
   1220c:	str	r2, [fp, #-20]	; 0xffffffec
   12210:	str	r3, [fp, #-24]	; 0xffffffe8
   12214:	movw	r0, #1
   12218:	strb	r0, [fp, #-25]	; 0xffffffe7
   1221c:	ldr	r0, [fp, #8]
   12220:	cmn	r0, #1
   12224:	movw	r0, #1
   12228:	str	r4, [sp, #44]	; 0x2c
   1222c:	str	lr, [sp, #40]	; 0x28
   12230:	str	ip, [sp, #36]	; 0x24
   12234:	str	r0, [sp, #32]
   12238:	bne	12280 <__assert_fail@plt+0xda4>
   1223c:	ldr	r0, [fp, #12]
   12240:	cmn	r0, #1
   12244:	movw	r0, #1
   12248:	str	r0, [sp, #32]
   1224c:	bne	12280 <__assert_fail@plt+0xda4>
   12250:	ldr	r0, [fp, #16]
   12254:	ldrb	r0, [r0, #12]
   12258:	tst	r0, #1
   1225c:	movw	r0, #1
   12260:	str	r0, [sp, #32]
   12264:	bne	12280 <__assert_fail@plt+0xda4>
   12268:	ldr	r0, [fp, #16]
   1226c:	ldr	r0, [r0]
   12270:	cmp	r0, #2
   12274:	movw	r0, #0
   12278:	movne	r0, #1
   1227c:	str	r0, [sp, #32]
   12280:	ldr	r0, [sp, #32]
   12284:	tst	r0, #1
   12288:	movw	r0, #0
   1228c:	mov	r1, r0
   12290:	moveq	r1, #8
   12294:	str	r1, [fp, #-32]	; 0xffffffe0
   12298:	ldr	r1, [fp, #-12]
   1229c:	ldr	r2, [fp, #-16]
   122a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122a4:	orr	r2, r2, r3
   122a8:	str	r0, [sp, #28]
   122ac:	mov	r0, r1
   122b0:	mov	r1, r2
   122b4:	ldr	r2, [sp, #28]
   122b8:	bl	1f3fc <__assert_fail@plt+0xdf20>
   122bc:	str	r0, [fp, #-36]	; 0xffffffdc
   122c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122c4:	bl	149c4 <__assert_fail@plt+0x34e8>
   122c8:	str	r0, [fp, #-40]	; 0xffffffd8
   122cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122d0:	movw	lr, #0
   122d4:	cmp	r0, lr
   122d8:	bne	12338 <__assert_fail@plt+0xe5c>
   122dc:	bl	11398 <__errno_location@plt>
   122e0:	ldr	r0, [r0]
   122e4:	cmp	r0, #0
   122e8:	beq	12334 <__assert_fail@plt+0xe58>
   122ec:	ldr	r0, [fp, #16]
   122f0:	ldrb	r0, [r0, #13]
   122f4:	tst	r0, #1
   122f8:	bne	1232c <__assert_fail@plt+0xe50>
   122fc:	bl	11398 <__errno_location@plt>
   12300:	ldr	r1, [r0]
   12304:	movw	r0, #21140	; 0x5294
   12308:	movt	r0, #2
   1230c:	str	r1, [sp, #24]
   12310:	bl	11350 <gettext@plt>
   12314:	movw	r1, #0
   12318:	str	r0, [sp, #20]
   1231c:	mov	r0, r1
   12320:	ldr	r1, [sp, #24]
   12324:	ldr	r2, [sp, #20]
   12328:	bl	112e4 <error@plt>
   1232c:	movw	r0, #0
   12330:	strb	r0, [fp, #-25]	; 0xffffffe7
   12334:	b	1238c <__assert_fail@plt+0xeb0>
   12338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1233c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12340:	ldr	r2, [fp, #-20]	; 0xffffffec
   12344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12348:	ldr	ip, [fp, #8]
   1234c:	ldr	lr, [fp, #12]
   12350:	ldr	r4, [fp, #16]
   12354:	str	ip, [sp]
   12358:	str	lr, [sp, #4]
   1235c:	str	r4, [sp, #8]
   12360:	bl	123e4 <__assert_fail@plt+0xf08>
   12364:	and	r0, r0, #1
   12368:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   1236c:	and	r1, r1, #1
   12370:	and	r0, r1, r0
   12374:	cmp	r0, #0
   12378:	movw	r0, #0
   1237c:	movne	r0, #1
   12380:	and	r0, r0, #1
   12384:	strb	r0, [fp, #-25]	; 0xffffffe7
   12388:	b	122c0 <__assert_fail@plt+0xde4>
   1238c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12390:	bl	14700 <__assert_fail@plt+0x3224>
   12394:	cmp	r0, #0
   12398:	beq	123d4 <__assert_fail@plt+0xef8>
   1239c:	bl	11398 <__errno_location@plt>
   123a0:	ldr	r1, [r0]
   123a4:	movw	r0, #21156	; 0x52a4
   123a8:	movt	r0, #2
   123ac:	str	r1, [sp, #16]
   123b0:	bl	11350 <gettext@plt>
   123b4:	movw	r1, #0
   123b8:	str	r0, [sp, #12]
   123bc:	mov	r0, r1
   123c0:	ldr	r1, [sp, #16]
   123c4:	ldr	r2, [sp, #12]
   123c8:	bl	112e4 <error@plt>
   123cc:	movw	r0, #0
   123d0:	strb	r0, [fp, #-25]	; 0xffffffe7
   123d4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   123d8:	and	r0, r0, #1
   123dc:	sub	sp, fp, #8
   123e0:	pop	{r4, sl, fp, pc}
   123e4:	push	{r4, r5, r6, r7, fp, lr}
   123e8:	add	fp, sp, #16
   123ec:	sub	sp, sp, #368	; 0x170
   123f0:	ldr	ip, [fp, #16]
   123f4:	ldr	lr, [fp, #12]
   123f8:	ldr	r4, [fp, #8]
   123fc:	str	r0, [fp, #-24]	; 0xffffffe8
   12400:	str	r1, [fp, #-28]	; 0xffffffe4
   12404:	str	r2, [fp, #-32]	; 0xffffffe0
   12408:	str	r3, [fp, #-36]	; 0xffffffdc
   1240c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12410:	ldr	r0, [r0, #28]
   12414:	str	r0, [fp, #-40]	; 0xffffffd8
   12418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1241c:	ldr	r0, [r0, #24]
   12420:	str	r0, [fp, #-44]	; 0xffffffd4
   12424:	mov	r0, #1
   12428:	strb	r0, [fp, #-153]	; 0xffffff67
   1242c:	strb	r0, [fp, #-155]	; 0xffffff65
   12430:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12434:	ldrh	r0, [r0, #56]	; 0x38
   12438:	sub	r0, r0, #1
   1243c:	cmp	r0, #9
   12440:	str	r4, [fp, #-180]	; 0xffffff4c
   12444:	str	lr, [fp, #-184]	; 0xffffff48
   12448:	str	ip, [fp, #-188]	; 0xffffff44
   1244c:	str	r0, [sp, #192]	; 0xc0
   12450:	bhi	12844 <__assert_fail@plt+0x1368>
   12454:	add	r0, pc, #8
   12458:	ldr	r1, [sp, #192]	; 0xc0
   1245c:	ldr	r0, [r0, r1, lsl #2]
   12460:	mov	pc, r0
   12464:	andeq	r2, r1, ip, lsl #9
   12468:	ldrdeq	r2, [r1], -ip
   1246c:	andeq	r2, r1, r4, asr #16
   12470:	andeq	r2, r1, r8, ror r7
   12474:	andeq	r2, r1, r4, asr #16
   12478:	andeq	r2, r1, ip, lsr r6
   1247c:	andeq	r2, r1, ip, lsl r7
   12480:	andeq	r2, r1, r4, asr #16
   12484:	andeq	r2, r1, r4, asr #16
   12488:	andeq	r2, r1, r0, ror #12
   1248c:	ldr	r0, [fp, #16]
   12490:	ldrb	r0, [r0, #4]
   12494:	tst	r0, #1
   12498:	beq	12638 <__assert_fail@plt+0x115c>
   1249c:	ldr	r0, [fp, #16]
   124a0:	ldr	r0, [r0, #8]
   124a4:	movw	r1, #0
   124a8:	cmp	r0, r1
   124ac:	beq	12628 <__assert_fail@plt+0x114c>
   124b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124b4:	ldr	r1, [r0, #160]	; 0xa0
   124b8:	ldr	r0, [r0, #164]	; 0xa4
   124bc:	ldr	r2, [fp, #16]
   124c0:	ldr	r2, [r2, #8]
   124c4:	ldr	r3, [r2]
   124c8:	ldr	r2, [r2, #4]
   124cc:	eor	r0, r0, r2
   124d0:	eor	r1, r1, r3
   124d4:	orr	r0, r1, r0
   124d8:	cmp	r0, #0
   124dc:	bne	12628 <__assert_fail@plt+0x114c>
   124e0:	b	124e4 <__assert_fail@plt+0x1008>
   124e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124e8:	ldr	r1, [r0, #64]	; 0x40
   124ec:	ldr	r0, [r0, #68]	; 0x44
   124f0:	ldr	r2, [fp, #16]
   124f4:	ldr	r2, [r2, #8]
   124f8:	ldr	r3, [r2, #8]
   124fc:	ldr	r2, [r2, #12]
   12500:	eor	r0, r0, r2
   12504:	eor	r1, r1, r3
   12508:	orr	r0, r1, r0
   1250c:	cmp	r0, #0
   12510:	bne	12628 <__assert_fail@plt+0x114c>
   12514:	b	12518 <__assert_fail@plt+0x103c>
   12518:	b	1251c <__assert_fail@plt+0x1040>
   1251c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12520:	movw	r1, #23235	; 0x5ac3
   12524:	movt	r1, #2
   12528:	bl	111e8 <strcmp@plt>
   1252c:	cmp	r0, #0
   12530:	bne	12570 <__assert_fail@plt+0x1094>
   12534:	movw	r0, #21173	; 0x52b5
   12538:	movt	r0, #2
   1253c:	bl	11350 <gettext@plt>
   12540:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12544:	movw	lr, #4
   12548:	str	r0, [sp, #188]	; 0xbc
   1254c:	mov	r0, lr
   12550:	bl	1b704 <__assert_fail@plt+0xa228>
   12554:	movw	r1, #0
   12558:	str	r0, [sp, #184]	; 0xb8
   1255c:	mov	r0, r1
   12560:	ldr	r2, [sp, #188]	; 0xbc
   12564:	ldr	r3, [sp, #184]	; 0xb8
   12568:	bl	112e4 <error@plt>
   1256c:	b	125d0 <__assert_fail@plt+0x10f4>
   12570:	movw	r0, #21218	; 0x52e2
   12574:	movt	r0, #2
   12578:	bl	11350 <gettext@plt>
   1257c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12580:	movw	lr, #0
   12584:	str	r0, [sp, #180]	; 0xb4
   12588:	mov	r0, lr
   1258c:	movw	r1, #4
   12590:	bl	1b630 <__assert_fail@plt+0xa154>
   12594:	movw	r1, #1
   12598:	str	r0, [sp, #176]	; 0xb0
   1259c:	mov	r0, r1
   125a0:	movw	r1, #4
   125a4:	movw	r2, #23235	; 0x5ac3
   125a8:	movt	r2, #2
   125ac:	bl	1b630 <__assert_fail@plt+0xa154>
   125b0:	movw	r1, #0
   125b4:	str	r0, [sp, #172]	; 0xac
   125b8:	mov	r0, r1
   125bc:	ldr	r2, [sp, #180]	; 0xb4
   125c0:	ldr	r3, [sp, #176]	; 0xb0
   125c4:	ldr	lr, [sp, #172]	; 0xac
   125c8:	str	lr, [sp]
   125cc:	bl	112e4 <error@plt>
   125d0:	movw	r0, #21276	; 0x531c
   125d4:	movt	r0, #2
   125d8:	bl	11350 <gettext@plt>
   125dc:	movw	lr, #0
   125e0:	str	r0, [sp, #168]	; 0xa8
   125e4:	mov	r0, lr
   125e8:	mov	r1, lr
   125ec:	ldr	r2, [sp, #168]	; 0xa8
   125f0:	bl	112e4 <error@plt>
   125f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   125fc:	movw	r2, #4
   12600:	bl	16918 <__assert_fail@plt+0x543c>
   12604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12608:	str	r0, [sp, #164]	; 0xa4
   1260c:	mov	r0, r1
   12610:	bl	149c4 <__assert_fail@plt+0x34e8>
   12614:	movw	r1, #0
   12618:	and	r1, r1, #1
   1261c:	strb	r1, [fp, #-17]	; 0xffffffef
   12620:	str	r0, [sp, #160]	; 0xa0
   12624:	b	12fb8 <__assert_fail@plt+0x1adc>
   12628:	movw	r0, #1
   1262c:	and	r0, r0, #1
   12630:	strb	r0, [fp, #-17]	; 0xffffffef
   12634:	b	12fb8 <__assert_fail@plt+0x1adc>
   12638:	b	12848 <__assert_fail@plt+0x136c>
   1263c:	ldr	r0, [fp, #16]
   12640:	ldrb	r0, [r0, #4]
   12644:	tst	r0, #1
   12648:	bne	1265c <__assert_fail@plt+0x1180>
   1264c:	movw	r0, #1
   12650:	and	r0, r0, #1
   12654:	strb	r0, [fp, #-17]	; 0xffffffef
   12658:	b	12fb8 <__assert_fail@plt+0x1adc>
   1265c:	b	12848 <__assert_fail@plt+0x136c>
   12660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12664:	ldr	r0, [r0, #48]	; 0x30
   12668:	cmp	r0, #0
   1266c:	bne	126b8 <__assert_fail@plt+0x11dc>
   12670:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12674:	ldr	r0, [r0, #16]
   12678:	cmp	r0, #0
   1267c:	bne	126b8 <__assert_fail@plt+0x11dc>
   12680:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12684:	movw	r1, #1
   12688:	str	r1, [r0, #16]
   1268c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12690:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12694:	str	r1, [sp, #156]	; 0x9c
   12698:	mov	r1, r2
   1269c:	ldr	r2, [sp, #156]	; 0x9c
   126a0:	bl	16918 <__assert_fail@plt+0x543c>
   126a4:	movw	r1, #1
   126a8:	and	r1, r1, #1
   126ac:	strb	r1, [fp, #-17]	; 0xffffffef
   126b0:	str	r0, [sp, #152]	; 0x98
   126b4:	b	12fb8 <__assert_fail@plt+0x1adc>
   126b8:	ldr	r0, [fp, #16]
   126bc:	ldrb	r0, [r0, #13]
   126c0:	tst	r0, #1
   126c4:	bne	12710 <__assert_fail@plt+0x1234>
   126c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   126cc:	ldr	r1, [r0, #32]
   126d0:	movw	r0, #21325	; 0x534d
   126d4:	movt	r0, #2
   126d8:	str	r1, [sp, #148]	; 0x94
   126dc:	bl	11350 <gettext@plt>
   126e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   126e4:	movw	lr, #4
   126e8:	str	r0, [sp, #144]	; 0x90
   126ec:	mov	r0, lr
   126f0:	bl	1b704 <__assert_fail@plt+0xa228>
   126f4:	movw	r1, #0
   126f8:	str	r0, [sp, #140]	; 0x8c
   126fc:	mov	r0, r1
   12700:	ldr	r1, [sp, #148]	; 0x94
   12704:	ldr	r2, [sp, #144]	; 0x90
   12708:	ldr	r3, [sp, #140]	; 0x8c
   1270c:	bl	112e4 <error@plt>
   12710:	movw	r0, #0
   12714:	strb	r0, [fp, #-153]	; 0xffffff67
   12718:	b	12848 <__assert_fail@plt+0x136c>
   1271c:	ldr	r0, [fp, #16]
   12720:	ldrb	r0, [r0, #13]
   12724:	tst	r0, #1
   12728:	bne	1276c <__assert_fail@plt+0x1290>
   1272c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12730:	ldr	r1, [r0, #32]
   12734:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12738:	movw	r0, #0
   1273c:	movw	r3, #3
   12740:	str	r1, [sp, #136]	; 0x88
   12744:	mov	r1, r3
   12748:	bl	1b858 <__assert_fail@plt+0xa37c>
   1274c:	movw	r1, #0
   12750:	str	r0, [sp, #132]	; 0x84
   12754:	mov	r0, r1
   12758:	ldr	r1, [sp, #136]	; 0x88
   1275c:	movw	r2, #20871	; 0x5187
   12760:	movt	r2, #2
   12764:	ldr	r3, [sp, #132]	; 0x84
   12768:	bl	112e4 <error@plt>
   1276c:	movw	r0, #0
   12770:	strb	r0, [fp, #-153]	; 0xffffff67
   12774:	b	12848 <__assert_fail@plt+0x136c>
   12778:	ldr	r0, [fp, #16]
   1277c:	ldrb	r0, [r0, #13]
   12780:	tst	r0, #1
   12784:	bne	127d0 <__assert_fail@plt+0x12f4>
   12788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1278c:	ldr	r1, [r0, #32]
   12790:	movw	r0, #21342	; 0x535e
   12794:	movt	r0, #2
   12798:	str	r1, [sp, #128]	; 0x80
   1279c:	bl	11350 <gettext@plt>
   127a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127a4:	movw	lr, #4
   127a8:	str	r0, [sp, #124]	; 0x7c
   127ac:	mov	r0, lr
   127b0:	bl	1b704 <__assert_fail@plt+0xa228>
   127b4:	movw	r1, #0
   127b8:	str	r0, [sp, #120]	; 0x78
   127bc:	mov	r0, r1
   127c0:	ldr	r1, [sp, #128]	; 0x80
   127c4:	ldr	r2, [sp, #124]	; 0x7c
   127c8:	ldr	r3, [sp, #120]	; 0x78
   127cc:	bl	112e4 <error@plt>
   127d0:	movw	r0, #0
   127d4:	strb	r0, [fp, #-153]	; 0xffffff67
   127d8:	b	12848 <__assert_fail@plt+0x136c>
   127dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127e4:	bl	1f480 <__assert_fail@plt+0xdfa4>
   127e8:	tst	r0, #1
   127ec:	beq	12840 <__assert_fail@plt+0x1364>
   127f0:	b	127f4 <__assert_fail@plt+0x1318>
   127f4:	movw	r0, #21367	; 0x5377
   127f8:	movt	r0, #2
   127fc:	bl	11350 <gettext@plt>
   12800:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12804:	movw	lr, #0
   12808:	str	r0, [sp, #116]	; 0x74
   1280c:	mov	r0, lr
   12810:	movw	r1, #3
   12814:	bl	1b858 <__assert_fail@plt+0xa37c>
   12818:	movw	r1, #0
   1281c:	str	r0, [sp, #112]	; 0x70
   12820:	mov	r0, r1
   12824:	ldr	r2, [sp, #116]	; 0x74
   12828:	ldr	r3, [sp, #112]	; 0x70
   1282c:	bl	112e4 <error@plt>
   12830:	movw	r0, #0
   12834:	and	r0, r0, #1
   12838:	strb	r0, [fp, #-17]	; 0xffffffef
   1283c:	b	12fb8 <__assert_fail@plt+0x1adc>
   12840:	b	12848 <__assert_fail@plt+0x136c>
   12844:	b	12848 <__assert_fail@plt+0x136c>
   12848:	ldrb	r0, [fp, #-153]	; 0xffffff67
   1284c:	tst	r0, #1
   12850:	bne	12868 <__assert_fail@plt+0x138c>
   12854:	movw	r0, #0
   12858:	strb	r0, [fp, #-154]	; 0xffffff66
   1285c:	movw	r0, #0
   12860:	str	r0, [fp, #-48]	; 0xffffffd0
   12864:	b	12a08 <__assert_fail@plt+0x152c>
   12868:	ldr	r0, [fp, #8]
   1286c:	cmn	r0, #1
   12870:	bne	128cc <__assert_fail@plt+0x13f0>
   12874:	ldr	r0, [fp, #12]
   12878:	cmn	r0, #1
   1287c:	bne	128cc <__assert_fail@plt+0x13f0>
   12880:	ldr	r0, [fp, #16]
   12884:	ldr	r0, [r0]
   12888:	cmp	r0, #2
   1288c:	bne	128cc <__assert_fail@plt+0x13f0>
   12890:	ldr	r0, [fp, #16]
   12894:	ldr	r0, [r0, #8]
   12898:	movw	r1, #0
   1289c:	cmp	r0, r1
   128a0:	bne	128cc <__assert_fail@plt+0x13f0>
   128a4:	ldr	r0, [fp, #16]
   128a8:	ldrb	r0, [r0, #12]
   128ac:	tst	r0, #1
   128b0:	bne	128cc <__assert_fail@plt+0x13f0>
   128b4:	movw	r0, #1
   128b8:	strb	r0, [fp, #-154]	; 0xffffff66
   128bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   128c0:	add	r0, r0, #64	; 0x40
   128c4:	str	r0, [fp, #-48]	; 0xffffffd0
   128c8:	b	12a04 <__assert_fail@plt+0x1528>
   128cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   128d0:	add	r0, r0, #64	; 0x40
   128d4:	str	r0, [fp, #-48]	; 0xffffffd0
   128d8:	ldr	r0, [fp, #16]
   128dc:	ldrb	r0, [r0, #12]
   128e0:	tst	r0, #1
   128e4:	beq	12984 <__assert_fail@plt+0x14a8>
   128e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   128ec:	ldr	r0, [r0, #16]
   128f0:	and	r0, r0, #61440	; 0xf000
   128f4:	cmp	r0, #40960	; 0xa000
   128f8:	bne	12984 <__assert_fail@plt+0x14a8>
   128fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12900:	ldr	r0, [r0, #32]
   12904:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12908:	sub	r2, fp, #152	; 0x98
   1290c:	movw	r3, #0
   12910:	bl	247fc <__assert_fail@plt+0x13320>
   12914:	cmp	r0, #0
   12918:	beq	1297c <__assert_fail@plt+0x14a0>
   1291c:	ldr	r0, [fp, #16]
   12920:	ldrb	r0, [r0, #13]
   12924:	tst	r0, #1
   12928:	bne	12974 <__assert_fail@plt+0x1498>
   1292c:	bl	11398 <__errno_location@plt>
   12930:	ldr	r1, [r0]
   12934:	movw	r0, #21553	; 0x5431
   12938:	movt	r0, #2
   1293c:	str	r1, [sp, #108]	; 0x6c
   12940:	bl	11350 <gettext@plt>
   12944:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12948:	movw	lr, #4
   1294c:	str	r0, [sp, #104]	; 0x68
   12950:	mov	r0, lr
   12954:	bl	1b704 <__assert_fail@plt+0xa228>
   12958:	movw	r1, #0
   1295c:	str	r0, [sp, #100]	; 0x64
   12960:	mov	r0, r1
   12964:	ldr	r1, [sp, #108]	; 0x6c
   12968:	ldr	r2, [sp, #104]	; 0x68
   1296c:	ldr	r3, [sp, #100]	; 0x64
   12970:	bl	112e4 <error@plt>
   12974:	movw	r0, #0
   12978:	strb	r0, [fp, #-153]	; 0xffffff67
   1297c:	sub	r0, fp, #152	; 0x98
   12980:	str	r0, [fp, #-48]	; 0xffffffd0
   12984:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12988:	tst	r0, #1
   1298c:	movw	r0, #0
   12990:	str	r0, [sp, #96]	; 0x60
   12994:	beq	129f8 <__assert_fail@plt+0x151c>
   12998:	ldr	r0, [fp, #8]
   1299c:	cmn	r0, #1
   129a0:	beq	129c0 <__assert_fail@plt+0x14e4>
   129a4:	ldr	r0, [fp, #8]
   129a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   129ac:	ldr	r1, [r1, #24]
   129b0:	cmp	r0, r1
   129b4:	movw	r0, #0
   129b8:	str	r0, [sp, #96]	; 0x60
   129bc:	bne	129f8 <__assert_fail@plt+0x151c>
   129c0:	ldr	r0, [fp, #12]
   129c4:	cmn	r0, #1
   129c8:	movw	r0, #1
   129cc:	str	r0, [sp, #92]	; 0x5c
   129d0:	beq	129f0 <__assert_fail@plt+0x1514>
   129d4:	ldr	r0, [fp, #12]
   129d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   129dc:	ldr	r1, [r1, #28]
   129e0:	cmp	r0, r1
   129e4:	movw	r0, #0
   129e8:	moveq	r0, #1
   129ec:	str	r0, [sp, #92]	; 0x5c
   129f0:	ldr	r0, [sp, #92]	; 0x5c
   129f4:	str	r0, [sp, #96]	; 0x60
   129f8:	ldr	r0, [sp, #96]	; 0x60
   129fc:	and	r0, r0, #1
   12a00:	strb	r0, [fp, #-154]	; 0xffffff66
   12a04:	b	12a08 <__assert_fail@plt+0x152c>
   12a08:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12a0c:	tst	r0, #1
   12a10:	beq	12bbc <__assert_fail@plt+0x16e0>
   12a14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a18:	ldrh	r0, [r0, #56]	; 0x38
   12a1c:	cmp	r0, #1
   12a20:	beq	12a54 <__assert_fail@plt+0x1578>
   12a24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a28:	ldrh	r0, [r0, #56]	; 0x38
   12a2c:	cmp	r0, #2
   12a30:	beq	12a54 <__assert_fail@plt+0x1578>
   12a34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a38:	ldrh	r0, [r0, #56]	; 0x38
   12a3c:	cmp	r0, #6
   12a40:	beq	12a54 <__assert_fail@plt+0x1578>
   12a44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a48:	ldrh	r0, [r0, #56]	; 0x38
   12a4c:	cmp	r0, #4
   12a50:	bne	12bbc <__assert_fail@plt+0x16e0>
   12a54:	ldr	r0, [fp, #16]
   12a58:	ldr	r0, [r0, #8]
   12a5c:	movw	r1, #0
   12a60:	cmp	r0, r1
   12a64:	beq	12bbc <__assert_fail@plt+0x16e0>
   12a68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a6c:	ldr	r1, [r0, #96]	; 0x60
   12a70:	ldr	r0, [r0, #100]	; 0x64
   12a74:	ldr	r2, [fp, #16]
   12a78:	ldr	r2, [r2, #8]
   12a7c:	ldr	r3, [r2]
   12a80:	ldr	r2, [r2, #4]
   12a84:	eor	r0, r0, r2
   12a88:	eor	r1, r1, r3
   12a8c:	orr	r0, r1, r0
   12a90:	cmp	r0, #0
   12a94:	bne	12bbc <__assert_fail@plt+0x16e0>
   12a98:	b	12a9c <__assert_fail@plt+0x15c0>
   12a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12aa0:	ldr	r1, [r0]
   12aa4:	ldr	r0, [r0, #4]
   12aa8:	ldr	r2, [fp, #16]
   12aac:	ldr	r2, [r2, #8]
   12ab0:	ldr	r3, [r2, #8]
   12ab4:	ldr	r2, [r2, #12]
   12ab8:	eor	r0, r0, r2
   12abc:	eor	r1, r1, r3
   12ac0:	orr	r0, r1, r0
   12ac4:	cmp	r0, #0
   12ac8:	bne	12bbc <__assert_fail@plt+0x16e0>
   12acc:	b	12ad0 <__assert_fail@plt+0x15f4>
   12ad0:	b	12ad4 <__assert_fail@plt+0x15f8>
   12ad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ad8:	movw	r1, #23235	; 0x5ac3
   12adc:	movt	r1, #2
   12ae0:	bl	111e8 <strcmp@plt>
   12ae4:	cmp	r0, #0
   12ae8:	bne	12b28 <__assert_fail@plt+0x164c>
   12aec:	movw	r0, #21173	; 0x52b5
   12af0:	movt	r0, #2
   12af4:	bl	11350 <gettext@plt>
   12af8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12afc:	movw	lr, #4
   12b00:	str	r0, [sp, #88]	; 0x58
   12b04:	mov	r0, lr
   12b08:	bl	1b704 <__assert_fail@plt+0xa228>
   12b0c:	movw	r1, #0
   12b10:	str	r0, [sp, #84]	; 0x54
   12b14:	mov	r0, r1
   12b18:	ldr	r2, [sp, #88]	; 0x58
   12b1c:	ldr	r3, [sp, #84]	; 0x54
   12b20:	bl	112e4 <error@plt>
   12b24:	b	12b88 <__assert_fail@plt+0x16ac>
   12b28:	movw	r0, #21218	; 0x52e2
   12b2c:	movt	r0, #2
   12b30:	bl	11350 <gettext@plt>
   12b34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12b38:	movw	lr, #0
   12b3c:	str	r0, [sp, #80]	; 0x50
   12b40:	mov	r0, lr
   12b44:	movw	r1, #4
   12b48:	bl	1b630 <__assert_fail@plt+0xa154>
   12b4c:	movw	r1, #1
   12b50:	str	r0, [sp, #76]	; 0x4c
   12b54:	mov	r0, r1
   12b58:	movw	r1, #4
   12b5c:	movw	r2, #23235	; 0x5ac3
   12b60:	movt	r2, #2
   12b64:	bl	1b630 <__assert_fail@plt+0xa154>
   12b68:	movw	r1, #0
   12b6c:	str	r0, [sp, #72]	; 0x48
   12b70:	mov	r0, r1
   12b74:	ldr	r2, [sp, #80]	; 0x50
   12b78:	ldr	r3, [sp, #76]	; 0x4c
   12b7c:	ldr	lr, [sp, #72]	; 0x48
   12b80:	str	lr, [sp]
   12b84:	bl	112e4 <error@plt>
   12b88:	movw	r0, #21276	; 0x531c
   12b8c:	movt	r0, #2
   12b90:	bl	11350 <gettext@plt>
   12b94:	movw	lr, #0
   12b98:	str	r0, [sp, #68]	; 0x44
   12b9c:	mov	r0, lr
   12ba0:	mov	r1, lr
   12ba4:	ldr	r2, [sp, #68]	; 0x44
   12ba8:	bl	112e4 <error@plt>
   12bac:	movw	r0, #0
   12bb0:	and	r0, r0, #1
   12bb4:	strb	r0, [fp, #-17]	; 0xffffffef
   12bb8:	b	12fb8 <__assert_fail@plt+0x1adc>
   12bbc:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12bc0:	tst	r0, #1
   12bc4:	beq	12d98 <__assert_fail@plt+0x18bc>
   12bc8:	ldr	r0, [fp, #16]
   12bcc:	ldrb	r0, [r0, #12]
   12bd0:	tst	r0, #1
   12bd4:	bne	12c34 <__assert_fail@plt+0x1758>
   12bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bdc:	ldr	r0, [r0, #32]
   12be0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12be4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12be8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12bec:	bl	136d0 <__assert_fail@plt+0x21f4>
   12bf0:	cmp	r0, #0
   12bf4:	movw	r0, #0
   12bf8:	moveq	r0, #1
   12bfc:	and	r0, r0, #1
   12c00:	strb	r0, [fp, #-153]	; 0xffffff67
   12c04:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12c08:	tst	r0, #1
   12c0c:	bne	12c30 <__assert_fail@plt+0x1754>
   12c10:	bl	11398 <__errno_location@plt>
   12c14:	ldr	r0, [r0]
   12c18:	cmp	r0, #95	; 0x5f
   12c1c:	bne	12c30 <__assert_fail@plt+0x1754>
   12c20:	movw	r0, #1
   12c24:	strb	r0, [fp, #-153]	; 0xffffff67
   12c28:	movw	r0, #0
   12c2c:	strb	r0, [fp, #-155]	; 0xffffff65
   12c30:	b	12cfc <__assert_fail@plt+0x1820>
   12c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c38:	ldr	r0, [r0, #32]
   12c3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c48:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12c4c:	ldr	lr, [fp, #8]
   12c50:	ldr	r4, [fp, #12]
   12c54:	mov	r5, sp
   12c58:	str	r4, [r5, #8]
   12c5c:	str	lr, [r5, #4]
   12c60:	str	ip, [r5]
   12c64:	bl	12fc8 <__assert_fail@plt+0x1aec>
   12c68:	str	r0, [fp, #-160]	; 0xffffff60
   12c6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   12c70:	sub	r0, r0, #2
   12c74:	cmp	r0, #4
   12c78:	str	r0, [sp, #64]	; 0x40
   12c7c:	bhi	12cf4 <__assert_fail@plt+0x1818>
   12c80:	add	r0, pc, #8
   12c84:	ldr	r1, [sp, #64]	; 0x40
   12c88:	ldr	r0, [r0, r1, lsl #2]
   12c8c:	mov	pc, r0
   12c90:	andeq	r2, r1, r4, lsr #25
   12c94:	andeq	r2, r1, r4, ror #25
   12c98:	andeq	r2, r1, r4, ror #25
   12c9c:	andeq	r2, r1, r8, lsr #25
   12ca0:	ldrdeq	r2, [r1], -r8
   12ca4:	b	12cf8 <__assert_fail@plt+0x181c>
   12ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cac:	ldr	r0, [r0, #32]
   12cb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12cb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12cb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12cbc:	bl	13690 <__assert_fail@plt+0x21b4>
   12cc0:	cmp	r0, #0
   12cc4:	movw	r0, #0
   12cc8:	moveq	r0, #1
   12ccc:	and	r0, r0, #1
   12cd0:	strb	r0, [fp, #-153]	; 0xffffff67
   12cd4:	b	12cf8 <__assert_fail@plt+0x181c>
   12cd8:	movw	r0, #0
   12cdc:	strb	r0, [fp, #-153]	; 0xffffff67
   12ce0:	b	12cf8 <__assert_fail@plt+0x181c>
   12ce4:	movw	r0, #0
   12ce8:	strb	r0, [fp, #-154]	; 0xffffff66
   12cec:	strb	r0, [fp, #-153]	; 0xffffff67
   12cf0:	b	12cf8 <__assert_fail@plt+0x181c>
   12cf4:	bl	11494 <abort@plt>
   12cf8:	b	12cfc <__assert_fail@plt+0x1820>
   12cfc:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12d00:	tst	r0, #1
   12d04:	beq	12d94 <__assert_fail@plt+0x18b8>
   12d08:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12d0c:	tst	r0, #1
   12d10:	bne	12d94 <__assert_fail@plt+0x18b8>
   12d14:	ldr	r0, [fp, #16]
   12d18:	ldrb	r0, [r0, #13]
   12d1c:	tst	r0, #1
   12d20:	bne	12d94 <__assert_fail@plt+0x18b8>
   12d24:	bl	11398 <__errno_location@plt>
   12d28:	ldr	r1, [r0]
   12d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d30:	cmn	r0, #1
   12d34:	str	r1, [sp, #60]	; 0x3c
   12d38:	beq	12d50 <__assert_fail@plt+0x1874>
   12d3c:	movw	r0, #21575	; 0x5447
   12d40:	movt	r0, #2
   12d44:	bl	11350 <gettext@plt>
   12d48:	str	r0, [sp, #56]	; 0x38
   12d4c:	b	12d60 <__assert_fail@plt+0x1884>
   12d50:	movw	r0, #21600	; 0x5460
   12d54:	movt	r0, #2
   12d58:	bl	11350 <gettext@plt>
   12d5c:	str	r0, [sp, #56]	; 0x38
   12d60:	ldr	r0, [sp, #56]	; 0x38
   12d64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d68:	movw	r2, #4
   12d6c:	str	r0, [sp, #52]	; 0x34
   12d70:	mov	r0, r2
   12d74:	bl	1b704 <__assert_fail@plt+0xa228>
   12d78:	movw	r1, #0
   12d7c:	str	r0, [sp, #48]	; 0x30
   12d80:	mov	r0, r1
   12d84:	ldr	r1, [sp, #60]	; 0x3c
   12d88:	ldr	r2, [sp, #52]	; 0x34
   12d8c:	ldr	r3, [sp, #48]	; 0x30
   12d90:	bl	112e4 <error@plt>
   12d94:	b	12d98 <__assert_fail@plt+0x18bc>
   12d98:	ldr	r0, [fp, #16]
   12d9c:	ldr	r0, [r0]
   12da0:	cmp	r0, #2
   12da4:	beq	12f88 <__assert_fail@plt+0x1aac>
   12da8:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12dac:	tst	r0, #1
   12db0:	movw	r0, #0
   12db4:	str	r0, [sp, #44]	; 0x2c
   12db8:	beq	12e54 <__assert_fail@plt+0x1978>
   12dbc:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12dc0:	tst	r0, #1
   12dc4:	movw	r0, #0
   12dc8:	str	r0, [sp, #44]	; 0x2c
   12dcc:	beq	12e54 <__assert_fail@plt+0x1978>
   12dd0:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12dd4:	tst	r0, #1
   12dd8:	movw	r0, #0
   12ddc:	str	r0, [sp, #44]	; 0x2c
   12de0:	beq	12e54 <__assert_fail@plt+0x1978>
   12de4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12de8:	cmn	r0, #1
   12dec:	beq	12e0c <__assert_fail@plt+0x1930>
   12df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12df4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12df8:	ldr	r1, [r1, #24]
   12dfc:	cmp	r0, r1
   12e00:	movw	r0, #0
   12e04:	str	r0, [sp, #40]	; 0x28
   12e08:	bne	12e44 <__assert_fail@plt+0x1968>
   12e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e10:	cmn	r0, #1
   12e14:	movw	r0, #1
   12e18:	str	r0, [sp, #36]	; 0x24
   12e1c:	beq	12e3c <__assert_fail@plt+0x1960>
   12e20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12e28:	ldr	r1, [r1, #28]
   12e2c:	cmp	r0, r1
   12e30:	movw	r0, #0
   12e34:	moveq	r0, #1
   12e38:	str	r0, [sp, #36]	; 0x24
   12e3c:	ldr	r0, [sp, #36]	; 0x24
   12e40:	str	r0, [sp, #40]	; 0x28
   12e44:	ldr	r0, [sp, #40]	; 0x28
   12e48:	mvn	r1, #0
   12e4c:	eor	r0, r0, r1
   12e50:	str	r0, [sp, #44]	; 0x2c
   12e54:	ldr	r0, [sp, #44]	; 0x2c
   12e58:	and	r0, r0, #1
   12e5c:	strb	r0, [fp, #-161]	; 0xffffff5f
   12e60:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12e64:	tst	r0, #1
   12e68:	bne	12e7c <__assert_fail@plt+0x19a0>
   12e6c:	ldr	r0, [fp, #16]
   12e70:	ldr	r0, [r0]
   12e74:	cmp	r0, #0
   12e78:	bne	12f84 <__assert_fail@plt+0x1aa8>
   12e7c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12e80:	tst	r0, #1
   12e84:	bne	12e94 <__assert_fail@plt+0x19b8>
   12e88:	movw	r0, #3
   12e8c:	str	r0, [sp, #32]
   12e90:	b	12ed0 <__assert_fail@plt+0x19f4>
   12e94:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12e98:	tst	r0, #1
   12e9c:	bne	12eac <__assert_fail@plt+0x19d0>
   12ea0:	movw	r0, #1
   12ea4:	str	r0, [sp, #28]
   12ea8:	b	12ec8 <__assert_fail@plt+0x19ec>
   12eac:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12eb0:	mvn	r1, #0
   12eb4:	eor	r0, r0, r1
   12eb8:	tst	r0, #1
   12ebc:	movw	r0, #4
   12ec0:	moveq	r0, #2
   12ec4:	str	r0, [sp, #28]
   12ec8:	ldr	r0, [sp, #28]
   12ecc:	str	r0, [sp, #32]
   12ed0:	ldr	r0, [sp, #32]
   12ed4:	str	r0, [fp, #-168]	; 0xffffff58
   12ed8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12edc:	movw	r1, #0
   12ee0:	cmp	r0, r1
   12ee4:	beq	12efc <__assert_fail@plt+0x1a20>
   12ee8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12eec:	ldr	r0, [r0, #24]
   12ef0:	bl	1218c <__assert_fail@plt+0xcb0>
   12ef4:	str	r0, [sp, #24]
   12ef8:	b	12f08 <__assert_fail@plt+0x1a2c>
   12efc:	movw	r0, #0
   12f00:	str	r0, [sp, #24]
   12f04:	b	12f08 <__assert_fail@plt+0x1a2c>
   12f08:	ldr	r0, [sp, #24]
   12f0c:	str	r0, [fp, #-172]	; 0xffffff54
   12f10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f14:	movw	r1, #0
   12f18:	cmp	r0, r1
   12f1c:	beq	12f34 <__assert_fail@plt+0x1a58>
   12f20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f24:	ldr	r0, [r0, #28]
   12f28:	bl	1212c <__assert_fail@plt+0xc50>
   12f2c:	str	r0, [sp, #20]
   12f30:	b	12f40 <__assert_fail@plt+0x1a64>
   12f34:	movw	r0, #0
   12f38:	str	r0, [sp, #20]
   12f3c:	b	12f40 <__assert_fail@plt+0x1a64>
   12f40:	ldr	r0, [sp, #20]
   12f44:	str	r0, [fp, #-176]	; 0xffffff50
   12f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f4c:	ldr	r1, [fp, #-168]	; 0xffffff58
   12f50:	ldr	r2, [fp, #-172]	; 0xffffff54
   12f54:	ldr	r3, [fp, #-176]	; 0xffffff50
   12f58:	ldr	ip, [fp, #16]
   12f5c:	ldr	ip, [ip, #16]
   12f60:	ldr	lr, [fp, #16]
   12f64:	ldr	lr, [lr, #20]
   12f68:	str	ip, [sp]
   12f6c:	str	lr, [sp, #4]
   12f70:	bl	13268 <__assert_fail@plt+0x1d8c>
   12f74:	ldr	r0, [fp, #-172]	; 0xffffff54
   12f78:	bl	13878 <__assert_fail@plt+0x239c>
   12f7c:	ldr	r0, [fp, #-176]	; 0xffffff50
   12f80:	bl	13878 <__assert_fail@plt+0x239c>
   12f84:	b	12f88 <__assert_fail@plt+0x1aac>
   12f88:	ldr	r0, [fp, #16]
   12f8c:	ldrb	r0, [r0, #4]
   12f90:	tst	r0, #1
   12f94:	bne	12fac <__assert_fail@plt+0x1ad0>
   12f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fa0:	movw	r2, #4
   12fa4:	bl	16918 <__assert_fail@plt+0x543c>
   12fa8:	str	r0, [sp, #16]
   12fac:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12fb0:	and	r0, r0, #1
   12fb4:	strb	r0, [fp, #-17]	; 0xffffffef
   12fb8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12fbc:	and	r0, r0, #1
   12fc0:	sub	sp, fp, #16
   12fc4:	pop	{r4, r5, r6, r7, fp, pc}
   12fc8:	push	{r4, sl, fp, lr}
   12fcc:	add	fp, sp, #8
   12fd0:	sub	sp, sp, #160	; 0xa0
   12fd4:	ldr	ip, [fp, #16]
   12fd8:	ldr	lr, [fp, #12]
   12fdc:	ldr	r4, [fp, #8]
   12fe0:	str	r0, [fp, #-16]
   12fe4:	str	r1, [fp, #-20]	; 0xffffffec
   12fe8:	str	r2, [fp, #-24]	; 0xffffffe8
   12fec:	str	r3, [fp, #-28]	; 0xffffffe4
   12ff0:	movw	r0, #2
   12ff4:	str	r0, [fp, #-32]	; 0xffffffe0
   12ff8:	movw	r0, #2304	; 0x900
   12ffc:	str	r0, [sp, #28]
   13000:	ldr	r0, [fp, #12]
   13004:	cmn	r0, #1
   13008:	str	r4, [sp, #16]
   1300c:	str	lr, [sp, #12]
   13010:	str	ip, [sp, #8]
   13014:	bne	13030 <__assert_fail@plt+0x1b54>
   13018:	ldr	r0, [fp, #16]
   1301c:	cmn	r0, #1
   13020:	bne	13030 <__assert_fail@plt+0x1b54>
   13024:	movw	r0, #5
   13028:	str	r0, [fp, #-12]
   1302c:	b	1325c <__assert_fail@plt+0x1d80>
   13030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13034:	ldr	r0, [r0, #16]
   13038:	and	r0, r0, #61440	; 0xf000
   1303c:	cmp	r0, #32768	; 0x8000
   13040:	beq	13078 <__assert_fail@plt+0x1b9c>
   13044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13048:	ldr	r0, [r0, #16]
   1304c:	and	r0, r0, #61440	; 0xf000
   13050:	cmp	r0, #16384	; 0x4000
   13054:	bne	13068 <__assert_fail@plt+0x1b8c>
   13058:	ldr	r0, [sp, #28]
   1305c:	orr	r0, r0, #16384	; 0x4000
   13060:	str	r0, [sp, #28]
   13064:	b	13074 <__assert_fail@plt+0x1b98>
   13068:	movw	r0, #5
   1306c:	str	r0, [fp, #-12]
   13070:	b	1325c <__assert_fail@plt+0x1d80>
   13074:	b	13078 <__assert_fail@plt+0x1b9c>
   13078:	ldr	r0, [fp, #-16]
   1307c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13080:	ldr	r2, [sp, #28]
   13084:	orr	r2, r2, #0
   13088:	bl	11374 <openat64@plt>
   1308c:	str	r0, [sp, #24]
   13090:	ldr	r0, [sp, #24]
   13094:	movw	r1, #0
   13098:	cmp	r1, r0
   1309c:	ble	13110 <__assert_fail@plt+0x1c34>
   130a0:	bl	11398 <__errno_location@plt>
   130a4:	ldr	r0, [r0]
   130a8:	cmp	r0, #13
   130ac:	bne	130e8 <__assert_fail@plt+0x1c0c>
   130b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130b4:	ldr	r0, [r0, #16]
   130b8:	and	r0, r0, #61440	; 0xf000
   130bc:	cmp	r0, #32768	; 0x8000
   130c0:	bne	130e8 <__assert_fail@plt+0x1c0c>
   130c4:	ldr	r0, [fp, #-16]
   130c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   130cc:	ldr	r2, [sp, #28]
   130d0:	orr	r2, r2, #1
   130d4:	bl	11374 <openat64@plt>
   130d8:	str	r0, [sp, #24]
   130dc:	movw	r1, #0
   130e0:	cmp	r1, r0
   130e4:	ble	13110 <__assert_fail@plt+0x1c34>
   130e8:	bl	11398 <__errno_location@plt>
   130ec:	ldr	r0, [r0]
   130f0:	cmp	r0, #13
   130f4:	movw	r0, #0
   130f8:	moveq	r0, #1
   130fc:	tst	r0, #1
   13100:	movw	r0, #5
   13104:	moveq	r0, #6
   13108:	str	r0, [fp, #-12]
   1310c:	b	1325c <__assert_fail@plt+0x1d80>
   13110:	ldr	r0, [sp, #24]
   13114:	add	r1, sp, #32
   13118:	bl	247dc <__assert_fail@plt+0x13300>
   1311c:	cmp	r0, #0
   13120:	beq	13130 <__assert_fail@plt+0x1c54>
   13124:	movw	r0, #6
   13128:	str	r0, [fp, #-32]	; 0xffffffe0
   1312c:	b	13228 <__assert_fail@plt+0x1d4c>
   13130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13134:	ldr	r1, [r0, #96]	; 0x60
   13138:	ldr	r0, [r0, #100]	; 0x64
   1313c:	ldr	r2, [sp, #128]	; 0x80
   13140:	ldr	r3, [sp, #132]	; 0x84
   13144:	eor	r0, r0, r3
   13148:	eor	r1, r1, r2
   1314c:	orr	r0, r1, r0
   13150:	cmp	r0, #0
   13154:	bne	13188 <__assert_fail@plt+0x1cac>
   13158:	b	1315c <__assert_fail@plt+0x1c80>
   1315c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13160:	ldr	r1, [r0]
   13164:	ldr	r0, [r0, #4]
   13168:	ldr	r2, [sp, #32]
   1316c:	ldr	r3, [sp, #36]	; 0x24
   13170:	eor	r0, r0, r3
   13174:	eor	r1, r1, r2
   13178:	orr	r0, r1, r0
   1317c:	cmp	r0, #0
   13180:	beq	13194 <__assert_fail@plt+0x1cb8>
   13184:	b	13188 <__assert_fail@plt+0x1cac>
   13188:	movw	r0, #4
   1318c:	str	r0, [fp, #-32]	; 0xffffffe0
   13190:	b	13224 <__assert_fail@plt+0x1d48>
   13194:	ldr	r0, [fp, #12]
   13198:	cmn	r0, #1
   1319c:	beq	131b0 <__assert_fail@plt+0x1cd4>
   131a0:	ldr	r0, [fp, #12]
   131a4:	ldr	r1, [sp, #56]	; 0x38
   131a8:	cmp	r0, r1
   131ac:	bne	13220 <__assert_fail@plt+0x1d44>
   131b0:	ldr	r0, [fp, #16]
   131b4:	cmn	r0, #1
   131b8:	beq	131cc <__assert_fail@plt+0x1cf0>
   131bc:	ldr	r0, [fp, #16]
   131c0:	ldr	r1, [sp, #60]	; 0x3c
   131c4:	cmp	r0, r1
   131c8:	bne	13220 <__assert_fail@plt+0x1d44>
   131cc:	ldr	r0, [sp, #24]
   131d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131d4:	ldr	r2, [fp, #8]
   131d8:	bl	11380 <fchown@plt>
   131dc:	cmp	r0, #0
   131e0:	bne	13214 <__assert_fail@plt+0x1d38>
   131e4:	ldr	r0, [sp, #24]
   131e8:	bl	114a0 <close@plt>
   131ec:	cmp	r0, #0
   131f0:	movw	r0, #0
   131f4:	moveq	r0, #1
   131f8:	tst	r0, #1
   131fc:	movw	r0, #2
   13200:	moveq	r0, #6
   13204:	str	r0, [fp, #-32]	; 0xffffffe0
   13208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1320c:	str	r0, [fp, #-12]
   13210:	b	1325c <__assert_fail@plt+0x1d80>
   13214:	movw	r0, #6
   13218:	str	r0, [fp, #-32]	; 0xffffffe0
   1321c:	b	13220 <__assert_fail@plt+0x1d44>
   13220:	b	13224 <__assert_fail@plt+0x1d48>
   13224:	b	13228 <__assert_fail@plt+0x1d4c>
   13228:	bl	11398 <__errno_location@plt>
   1322c:	ldr	r0, [r0]
   13230:	str	r0, [sp, #20]
   13234:	ldr	r0, [sp, #24]
   13238:	bl	114a0 <close@plt>
   1323c:	ldr	lr, [sp, #20]
   13240:	str	r0, [sp, #4]
   13244:	str	lr, [sp]
   13248:	bl	11398 <__errno_location@plt>
   1324c:	ldr	lr, [sp]
   13250:	str	lr, [r0]
   13254:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13258:	str	r0, [fp, #-12]
   1325c:	ldr	r0, [fp, #-12]
   13260:	sub	sp, fp, #8
   13264:	pop	{r4, sl, fp, pc}
   13268:	push	{fp, lr}
   1326c:	mov	fp, sp
   13270:	sub	sp, sp, #112	; 0x70
   13274:	ldr	ip, [fp, #12]
   13278:	ldr	lr, [fp, #8]
   1327c:	str	r0, [fp, #-4]
   13280:	str	r1, [fp, #-8]
   13284:	str	r2, [fp, #-12]
   13288:	str	r3, [fp, #-16]
   1328c:	ldr	r0, [fp, #-8]
   13290:	cmp	r0, #1
   13294:	str	lr, [fp, #-32]	; 0xffffffe0
   13298:	str	ip, [fp, #-36]	; 0xffffffdc
   1329c:	bne	132dc <__assert_fail@plt+0x1e00>
   132a0:	movw	r0, #21621	; 0x5475
   132a4:	movt	r0, #2
   132a8:	bl	11350 <gettext@plt>
   132ac:	ldr	r1, [fp, #-4]
   132b0:	movw	lr, #4
   132b4:	str	r0, [fp, #-40]	; 0xffffffd8
   132b8:	mov	r0, lr
   132bc:	bl	1b704 <__assert_fail@plt+0xa228>
   132c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132c4:	str	r0, [fp, #-44]	; 0xffffffd4
   132c8:	mov	r0, r1
   132cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132d0:	bl	11200 <printf@plt>
   132d4:	str	r0, [fp, #-48]	; 0xffffffd0
   132d8:	b	135bc <__assert_fail@plt+0x20e0>
   132dc:	ldr	r0, [fp, #8]
   132e0:	ldr	r1, [fp, #12]
   132e4:	bl	135c4 <__assert_fail@plt+0x20e8>
   132e8:	str	r0, [fp, #-28]	; 0xffffffe4
   132ec:	ldr	r0, [fp, #8]
   132f0:	movw	r1, #0
   132f4:	cmp	r0, r1
   132f8:	beq	13308 <__assert_fail@plt+0x1e2c>
   132fc:	ldr	r0, [fp, #-12]
   13300:	str	r0, [fp, #-52]	; 0xffffffcc
   13304:	b	13314 <__assert_fail@plt+0x1e38>
   13308:	movw	r0, #0
   1330c:	str	r0, [fp, #-52]	; 0xffffffcc
   13310:	b	13314 <__assert_fail@plt+0x1e38>
   13314:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13318:	ldr	r1, [fp, #12]
   1331c:	movw	r2, #0
   13320:	cmp	r1, r2
   13324:	str	r0, [sp, #56]	; 0x38
   13328:	beq	13338 <__assert_fail@plt+0x1e5c>
   1332c:	ldr	r0, [fp, #-16]
   13330:	str	r0, [sp, #52]	; 0x34
   13334:	b	13344 <__assert_fail@plt+0x1e68>
   13338:	movw	r0, #0
   1333c:	str	r0, [sp, #52]	; 0x34
   13340:	b	13344 <__assert_fail@plt+0x1e68>
   13344:	ldr	r0, [sp, #52]	; 0x34
   13348:	ldr	r1, [sp, #56]	; 0x38
   1334c:	str	r0, [sp, #48]	; 0x30
   13350:	mov	r0, r1
   13354:	ldr	r1, [sp, #48]	; 0x30
   13358:	bl	135c4 <__assert_fail@plt+0x20e8>
   1335c:	str	r0, [fp, #-24]	; 0xffffffe8
   13360:	ldr	r0, [fp, #-8]
   13364:	cmp	r0, #2
   13368:	str	r0, [sp, #44]	; 0x2c
   1336c:	beq	13394 <__assert_fail@plt+0x1eb8>
   13370:	b	13374 <__assert_fail@plt+0x1e98>
   13374:	ldr	r0, [sp, #44]	; 0x2c
   13378:	cmp	r0, #3
   1337c:	beq	13400 <__assert_fail@plt+0x1f24>
   13380:	b	13384 <__assert_fail@plt+0x1ea8>
   13384:	ldr	r0, [sp, #44]	; 0x2c
   13388:	cmp	r0, #4
   1338c:	beq	13500 <__assert_fail@plt+0x2024>
   13390:	b	1356c <__assert_fail@plt+0x2090>
   13394:	ldr	r0, [fp, #8]
   13398:	movw	r1, #0
   1339c:	cmp	r0, r1
   133a0:	beq	133b8 <__assert_fail@plt+0x1edc>
   133a4:	movw	r0, #21677	; 0x54ad
   133a8:	movt	r0, #2
   133ac:	bl	11350 <gettext@plt>
   133b0:	str	r0, [sp, #40]	; 0x28
   133b4:	b	133f4 <__assert_fail@plt+0x1f18>
   133b8:	ldr	r0, [fp, #12]
   133bc:	movw	r1, #0
   133c0:	cmp	r0, r1
   133c4:	beq	133dc <__assert_fail@plt+0x1f00>
   133c8:	movw	r0, #21716	; 0x54d4
   133cc:	movt	r0, #2
   133d0:	bl	11350 <gettext@plt>
   133d4:	str	r0, [sp, #36]	; 0x24
   133d8:	b	133ec <__assert_fail@plt+0x1f10>
   133dc:	movw	r0, #21751	; 0x54f7
   133e0:	movt	r0, #2
   133e4:	bl	11350 <gettext@plt>
   133e8:	str	r0, [sp, #36]	; 0x24
   133ec:	ldr	r0, [sp, #36]	; 0x24
   133f0:	str	r0, [sp, #40]	; 0x28
   133f4:	ldr	r0, [sp, #40]	; 0x28
   133f8:	str	r0, [fp, #-20]	; 0xffffffec
   133fc:	b	13570 <__assert_fail@plt+0x2094>
   13400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13404:	movw	r1, #0
   13408:	cmp	r0, r1
   1340c:	beq	1347c <__assert_fail@plt+0x1fa0>
   13410:	ldr	r0, [fp, #8]
   13414:	movw	r1, #0
   13418:	cmp	r0, r1
   1341c:	beq	13434 <__assert_fail@plt+0x1f58>
   13420:	movw	r0, #21781	; 0x5515
   13424:	movt	r0, #2
   13428:	bl	11350 <gettext@plt>
   1342c:	str	r0, [sp, #32]
   13430:	b	13470 <__assert_fail@plt+0x1f94>
   13434:	ldr	r0, [fp, #12]
   13438:	movw	r1, #0
   1343c:	cmp	r0, r1
   13440:	beq	13458 <__assert_fail@plt+0x1f7c>
   13444:	movw	r0, #21829	; 0x5545
   13448:	movt	r0, #2
   1344c:	bl	11350 <gettext@plt>
   13450:	str	r0, [sp, #28]
   13454:	b	13468 <__assert_fail@plt+0x1f8c>
   13458:	movw	r0, #21873	; 0x5571
   1345c:	movt	r0, #2
   13460:	bl	11350 <gettext@plt>
   13464:	str	r0, [sp, #28]
   13468:	ldr	r0, [sp, #28]
   1346c:	str	r0, [sp, #32]
   13470:	ldr	r0, [sp, #32]
   13474:	str	r0, [fp, #-20]	; 0xffffffec
   13478:	b	134fc <__assert_fail@plt+0x2020>
   1347c:	ldr	r0, [fp, #8]
   13480:	movw	r1, #0
   13484:	cmp	r0, r1
   13488:	beq	134a0 <__assert_fail@plt+0x1fc4>
   1348c:	movw	r0, #21907	; 0x5593
   13490:	movt	r0, #2
   13494:	bl	11350 <gettext@plt>
   13498:	str	r0, [sp, #24]
   1349c:	b	134dc <__assert_fail@plt+0x2000>
   134a0:	ldr	r0, [fp, #12]
   134a4:	movw	r1, #0
   134a8:	cmp	r0, r1
   134ac:	beq	134c4 <__assert_fail@plt+0x1fe8>
   134b0:	movw	r0, #21947	; 0x55bb
   134b4:	movt	r0, #2
   134b8:	bl	11350 <gettext@plt>
   134bc:	str	r0, [sp, #20]
   134c0:	b	134d4 <__assert_fail@plt+0x1ff8>
   134c4:	movw	r0, #21873	; 0x5571
   134c8:	movt	r0, #2
   134cc:	bl	11350 <gettext@plt>
   134d0:	str	r0, [sp, #20]
   134d4:	ldr	r0, [sp, #20]
   134d8:	str	r0, [sp, #24]
   134dc:	ldr	r0, [sp, #24]
   134e0:	str	r0, [fp, #-20]	; 0xffffffec
   134e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134e8:	bl	13878 <__assert_fail@plt+0x239c>
   134ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134f0:	str	r0, [fp, #-24]	; 0xffffffe8
   134f4:	movw	r0, #0
   134f8:	str	r0, [fp, #-28]	; 0xffffffe4
   134fc:	b	13570 <__assert_fail@plt+0x2094>
   13500:	ldr	r0, [fp, #8]
   13504:	movw	r1, #0
   13508:	cmp	r0, r1
   1350c:	beq	13524 <__assert_fail@plt+0x2048>
   13510:	movw	r0, #21983	; 0x55df
   13514:	movt	r0, #2
   13518:	bl	11350 <gettext@plt>
   1351c:	str	r0, [sp, #16]
   13520:	b	13560 <__assert_fail@plt+0x2084>
   13524:	ldr	r0, [fp, #12]
   13528:	movw	r1, #0
   1352c:	cmp	r0, r1
   13530:	beq	13548 <__assert_fail@plt+0x206c>
   13534:	movw	r0, #22015	; 0x55ff
   13538:	movt	r0, #2
   1353c:	bl	11350 <gettext@plt>
   13540:	str	r0, [sp, #12]
   13544:	b	13558 <__assert_fail@plt+0x207c>
   13548:	movw	r0, #22043	; 0x561b
   1354c:	movt	r0, #2
   13550:	bl	11350 <gettext@plt>
   13554:	str	r0, [sp, #12]
   13558:	ldr	r0, [sp, #12]
   1355c:	str	r0, [sp, #16]
   13560:	ldr	r0, [sp, #16]
   13564:	str	r0, [fp, #-20]	; 0xffffffec
   13568:	b	13570 <__assert_fail@plt+0x2094>
   1356c:	bl	11494 <abort@plt>
   13570:	ldr	r0, [fp, #-20]	; 0xffffffec
   13574:	ldr	r1, [fp, #-4]
   13578:	movw	r2, #4
   1357c:	str	r0, [sp, #8]
   13580:	mov	r0, r2
   13584:	bl	1b704 <__assert_fail@plt+0xa228>
   13588:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1358c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13590:	ldr	r1, [sp, #8]
   13594:	str	r0, [sp, #4]
   13598:	mov	r0, r1
   1359c:	ldr	r1, [sp, #4]
   135a0:	bl	11200 <printf@plt>
   135a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   135a8:	str	r0, [sp]
   135ac:	mov	r0, r1
   135b0:	bl	13878 <__assert_fail@plt+0x239c>
   135b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135b8:	bl	13878 <__assert_fail@plt+0x239c>
   135bc:	mov	sp, fp
   135c0:	pop	{fp, pc}
   135c4:	push	{fp, lr}
   135c8:	mov	fp, sp
   135cc:	sub	sp, sp, #24
   135d0:	str	r0, [fp, #-4]
   135d4:	str	r1, [fp, #-8]
   135d8:	movw	r0, #0
   135dc:	str	r0, [sp, #12]
   135e0:	ldr	r1, [fp, #-4]
   135e4:	cmp	r1, r0
   135e8:	beq	13664 <__assert_fail@plt+0x2188>
   135ec:	ldr	r0, [fp, #-8]
   135f0:	movw	r1, #0
   135f4:	cmp	r0, r1
   135f8:	beq	13654 <__assert_fail@plt+0x2178>
   135fc:	ldr	r0, [fp, #-4]
   13600:	bl	1135c <strlen@plt>
   13604:	add	r0, r0, #1
   13608:	ldr	lr, [fp, #-8]
   1360c:	str	r0, [sp, #8]
   13610:	mov	r0, lr
   13614:	bl	1135c <strlen@plt>
   13618:	ldr	lr, [sp, #8]
   1361c:	add	r0, lr, r0
   13620:	add	r0, r0, #1
   13624:	bl	1c5d0 <__assert_fail@plt+0xb0f4>
   13628:	str	r0, [sp, #12]
   1362c:	ldr	r0, [sp, #12]
   13630:	ldr	r1, [fp, #-4]
   13634:	bl	11260 <stpcpy@plt>
   13638:	movw	r1, #22069	; 0x5635
   1363c:	movt	r1, #2
   13640:	bl	11260 <stpcpy@plt>
   13644:	ldr	r1, [fp, #-8]
   13648:	bl	11260 <stpcpy@plt>
   1364c:	str	r0, [sp, #4]
   13650:	b	13660 <__assert_fail@plt+0x2184>
   13654:	ldr	r0, [fp, #-4]
   13658:	bl	1f374 <__assert_fail@plt+0xde98>
   1365c:	str	r0, [sp, #12]
   13660:	b	13684 <__assert_fail@plt+0x21a8>
   13664:	ldr	r0, [fp, #-8]
   13668:	movw	r1, #0
   1366c:	cmp	r0, r1
   13670:	beq	13680 <__assert_fail@plt+0x21a4>
   13674:	ldr	r0, [fp, #-8]
   13678:	bl	1f374 <__assert_fail@plt+0xde98>
   1367c:	str	r0, [sp, #12]
   13680:	b	13684 <__assert_fail@plt+0x21a8>
   13684:	ldr	r0, [sp, #12]
   13688:	mov	sp, fp
   1368c:	pop	{fp, pc}
   13690:	push	{fp, lr}
   13694:	mov	fp, sp
   13698:	sub	sp, sp, #24
   1369c:	str	r0, [fp, #-4]
   136a0:	str	r1, [fp, #-8]
   136a4:	str	r2, [sp, #12]
   136a8:	str	r3, [sp, #8]
   136ac:	ldr	r0, [fp, #-4]
   136b0:	ldr	r1, [fp, #-8]
   136b4:	ldr	r2, [sp, #12]
   136b8:	ldr	r3, [sp, #8]
   136bc:	movw	ip, #0
   136c0:	str	ip, [sp]
   136c4:	bl	11458 <fchownat@plt>
   136c8:	mov	sp, fp
   136cc:	pop	{fp, pc}
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	sub	sp, sp, #24
   136dc:	str	r0, [fp, #-4]
   136e0:	str	r1, [fp, #-8]
   136e4:	str	r2, [sp, #12]
   136e8:	str	r3, [sp, #8]
   136ec:	ldr	r0, [fp, #-4]
   136f0:	ldr	r1, [fp, #-8]
   136f4:	ldr	r2, [sp, #12]
   136f8:	ldr	r3, [sp, #8]
   136fc:	movw	ip, #256	; 0x100
   13700:	str	ip, [sp]
   13704:	bl	11458 <fchownat@plt>
   13708:	mov	sp, fp
   1370c:	pop	{fp, pc}
   13710:	sub	sp, sp, #4
   13714:	str	r0, [sp]
   13718:	ldr	r0, [sp]
   1371c:	movw	r1, #25008	; 0x61b0
   13720:	movt	r1, #3
   13724:	str	r0, [r1]
   13728:	add	sp, sp, #4
   1372c:	bx	lr
   13730:	sub	sp, sp, #4
   13734:	and	r0, r0, #1
   13738:	strb	r0, [sp, #3]
   1373c:	ldrb	r0, [sp, #3]
   13740:	and	r0, r0, #1
   13744:	movw	r1, #25012	; 0x61b4
   13748:	movt	r1, #3
   1374c:	strb	r0, [r1]
   13750:	add	sp, sp, #4
   13754:	bx	lr
   13758:	push	{fp, lr}
   1375c:	mov	fp, sp
   13760:	sub	sp, sp, #24
   13764:	movw	r0, #24972	; 0x618c
   13768:	movt	r0, #3
   1376c:	ldr	r0, [r0]
   13770:	bl	21c6c <__assert_fail@plt+0x10790>
   13774:	cmp	r0, #0
   13778:	beq	13848 <__assert_fail@plt+0x236c>
   1377c:	movw	r0, #25012	; 0x61b4
   13780:	movt	r0, #3
   13784:	ldrb	r0, [r0]
   13788:	tst	r0, #1
   1378c:	beq	137a0 <__assert_fail@plt+0x22c4>
   13790:	bl	11398 <__errno_location@plt>
   13794:	ldr	r0, [r0]
   13798:	cmp	r0, #32
   1379c:	beq	13848 <__assert_fail@plt+0x236c>
   137a0:	movw	r0, #22086	; 0x5646
   137a4:	movt	r0, #2
   137a8:	bl	11350 <gettext@plt>
   137ac:	str	r0, [fp, #-4]
   137b0:	movw	r0, #25008	; 0x61b0
   137b4:	movt	r0, #3
   137b8:	ldr	r0, [r0]
   137bc:	movw	lr, #0
   137c0:	cmp	r0, lr
   137c4:	beq	1381c <__assert_fail@plt+0x2340>
   137c8:	bl	11398 <__errno_location@plt>
   137cc:	ldr	r1, [r0]
   137d0:	movw	r0, #25008	; 0x61b0
   137d4:	movt	r0, #3
   137d8:	ldr	r0, [r0]
   137dc:	str	r1, [fp, #-8]
   137e0:	bl	1b800 <__assert_fail@plt+0xa324>
   137e4:	ldr	r1, [fp, #-4]
   137e8:	movw	lr, #0
   137ec:	str	r0, [sp, #12]
   137f0:	mov	r0, lr
   137f4:	ldr	lr, [fp, #-8]
   137f8:	str	r1, [sp, #8]
   137fc:	mov	r1, lr
   13800:	movw	r2, #22098	; 0x5652
   13804:	movt	r2, #2
   13808:	ldr	r3, [sp, #12]
   1380c:	ldr	ip, [sp, #8]
   13810:	str	ip, [sp]
   13814:	bl	112e4 <error@plt>
   13818:	b	13838 <__assert_fail@plt+0x235c>
   1381c:	bl	11398 <__errno_location@plt>
   13820:	ldr	r1, [r0]
   13824:	ldr	r3, [fp, #-4]
   13828:	movw	r0, #0
   1382c:	movw	r2, #20871	; 0x5187
   13830:	movt	r2, #2
   13834:	bl	112e4 <error@plt>
   13838:	movw	r0, #24880	; 0x6130
   1383c:	movt	r0, #3
   13840:	ldr	r0, [r0]
   13844:	bl	11230 <_exit@plt>
   13848:	movw	r0, #24968	; 0x6188
   1384c:	movt	r0, #3
   13850:	ldr	r0, [r0]
   13854:	bl	21c6c <__assert_fail@plt+0x10790>
   13858:	cmp	r0, #0
   1385c:	beq	13870 <__assert_fail@plt+0x2394>
   13860:	movw	r0, #24880	; 0x6130
   13864:	movt	r0, #3
   13868:	ldr	r0, [r0]
   1386c:	bl	11230 <_exit@plt>
   13870:	mov	sp, fp
   13874:	pop	{fp, pc}
   13878:	push	{fp, lr}
   1387c:	mov	fp, sp
   13880:	sub	sp, sp, #16
   13884:	str	r0, [fp, #-4]
   13888:	bl	11398 <__errno_location@plt>
   1388c:	ldr	r0, [r0]
   13890:	str	r0, [sp, #8]
   13894:	ldr	r0, [fp, #-4]
   13898:	bl	11224 <free@plt>
   1389c:	ldr	r0, [sp, #8]
   138a0:	str	r0, [sp, #4]
   138a4:	bl	11398 <__errno_location@plt>
   138a8:	ldr	lr, [sp, #4]
   138ac:	str	lr, [r0]
   138b0:	mov	sp, fp
   138b4:	pop	{fp, pc}
   138b8:	push	{fp, lr}
   138bc:	mov	fp, sp
   138c0:	sub	sp, sp, #88	; 0x58
   138c4:	ldr	r3, [pc, #1456]	; 13e7c <__assert_fail@plt+0x29a0>
   138c8:	str	r0, [fp, #-8]
   138cc:	str	r1, [fp, #-12]
   138d0:	str	r2, [fp, #-16]
   138d4:	movw	r0, #0
   138d8:	str	r0, [fp, #-36]	; 0xffffffdc
   138dc:	str	r0, [fp, #-40]	; 0xffffffd8
   138e0:	ldr	r0, [fp, #-12]
   138e4:	and	r0, r0, r3
   138e8:	cmp	r0, #0
   138ec:	beq	13908 <__assert_fail@plt+0x242c>
   138f0:	bl	11398 <__errno_location@plt>
   138f4:	movw	lr, #22
   138f8:	str	lr, [r0]
   138fc:	movw	r0, #0
   13900:	str	r0, [fp, #-4]
   13904:	b	13e70 <__assert_fail@plt+0x2994>
   13908:	ldr	r0, [fp, #-12]
   1390c:	and	r0, r0, #4
   13910:	cmp	r0, #0
   13914:	beq	13940 <__assert_fail@plt+0x2464>
   13918:	ldr	r0, [fp, #-12]
   1391c:	and	r0, r0, #512	; 0x200
   13920:	cmp	r0, #0
   13924:	beq	13940 <__assert_fail@plt+0x2464>
   13928:	bl	11398 <__errno_location@plt>
   1392c:	movw	lr, #22
   13930:	str	lr, [r0]
   13934:	movw	r0, #0
   13938:	str	r0, [fp, #-4]
   1393c:	b	13e70 <__assert_fail@plt+0x2994>
   13940:	ldr	r0, [fp, #-12]
   13944:	and	r0, r0, #18
   13948:	cmp	r0, #0
   1394c:	bne	13968 <__assert_fail@plt+0x248c>
   13950:	bl	11398 <__errno_location@plt>
   13954:	movw	lr, #22
   13958:	str	lr, [r0]
   1395c:	movw	r0, #0
   13960:	str	r0, [fp, #-4]
   13964:	b	13e70 <__assert_fail@plt+0x2994>
   13968:	movw	r0, #1
   1396c:	movw	r1, #96	; 0x60
   13970:	bl	21724 <__assert_fail@plt+0x10248>
   13974:	str	r0, [fp, #-20]	; 0xffffffec
   13978:	ldr	r0, [fp, #-20]	; 0xffffffec
   1397c:	movw	r1, #0
   13980:	cmp	r0, r1
   13984:	bne	13994 <__assert_fail@plt+0x24b8>
   13988:	movw	r0, #0
   1398c:	str	r0, [fp, #-4]
   13990:	b	13e70 <__assert_fail@plt+0x2994>
   13994:	ldr	r0, [fp, #-16]
   13998:	ldr	r1, [fp, #-20]	; 0xffffffec
   1399c:	str	r0, [r1, #44]	; 0x2c
   139a0:	ldr	r0, [fp, #-12]
   139a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   139a8:	str	r0, [r1, #48]	; 0x30
   139ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   139b0:	ldr	r0, [r0, #48]	; 0x30
   139b4:	and	r0, r0, #2
   139b8:	cmp	r0, #0
   139bc:	beq	139e4 <__assert_fail@plt+0x2508>
   139c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   139c4:	ldr	r1, [r0, #48]	; 0x30
   139c8:	orr	r1, r1, #4
   139cc:	str	r1, [r0, #48]	; 0x30
   139d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   139d4:	ldr	r1, [r0, #48]	; 0x30
   139d8:	mvn	r2, #512	; 0x200
   139dc:	and	r1, r1, r2
   139e0:	str	r1, [r0, #48]	; 0x30
   139e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   139e8:	mvn	r1, #99	; 0x63
   139ec:	str	r1, [r0, #32]
   139f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   139f4:	ldr	r0, [r0, #48]	; 0x30
   139f8:	and	r0, r0, #512	; 0x200
   139fc:	cmp	r0, #0
   13a00:	beq	13a3c <__assert_fail@plt+0x2560>
   13a04:	b	13a3c <__assert_fail@plt+0x2560>
   13a08:	ldr	r1, [pc, #1136]	; 13e80 <__assert_fail@plt+0x29a4>
   13a0c:	movw	r0, #22106	; 0x565a
   13a10:	movt	r0, #2
   13a14:	bl	223f8 <__assert_fail@plt+0x10f1c>
   13a18:	str	r0, [sp, #40]	; 0x28
   13a1c:	ldr	r0, [sp, #40]	; 0x28
   13a20:	cmp	r0, #0
   13a24:	bge	13a2c <__assert_fail@plt+0x2550>
   13a28:	b	13a38 <__assert_fail@plt+0x255c>
   13a2c:	ldr	r0, [sp, #40]	; 0x28
   13a30:	bl	114a0 <close@plt>
   13a34:	str	r0, [sp, #24]
   13a38:	b	13a3c <__assert_fail@plt+0x2560>
   13a3c:	ldr	r0, [fp, #-8]
   13a40:	bl	13e84 <__assert_fail@plt+0x29a8>
   13a44:	str	r0, [sp, #36]	; 0x24
   13a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a4c:	ldr	lr, [sp, #36]	; 0x24
   13a50:	cmp	lr, #4096	; 0x1000
   13a54:	str	r0, [sp, #20]
   13a58:	bls	13a68 <__assert_fail@plt+0x258c>
   13a5c:	ldr	r0, [sp, #36]	; 0x24
   13a60:	str	r0, [sp, #16]
   13a64:	b	13a74 <__assert_fail@plt+0x2598>
   13a68:	movw	r0, #4096	; 0x1000
   13a6c:	str	r0, [sp, #16]
   13a70:	b	13a74 <__assert_fail@plt+0x2598>
   13a74:	ldr	r0, [sp, #16]
   13a78:	ldr	r1, [sp, #20]
   13a7c:	str	r0, [sp, #12]
   13a80:	mov	r0, r1
   13a84:	ldr	r1, [sp, #12]
   13a88:	bl	13ef8 <__assert_fail@plt+0x2a1c>
   13a8c:	tst	r0, #1
   13a90:	bne	13a98 <__assert_fail@plt+0x25bc>
   13a94:	b	13e60 <__assert_fail@plt+0x2984>
   13a98:	ldr	r0, [fp, #-8]
   13a9c:	ldr	r0, [r0]
   13aa0:	movw	r1, #0
   13aa4:	cmp	r0, r1
   13aa8:	beq	13ae0 <__assert_fail@plt+0x2604>
   13aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ab0:	movw	r1, #20032	; 0x4e40
   13ab4:	movt	r1, #2
   13ab8:	movw	r2, #0
   13abc:	bl	13ff0 <__assert_fail@plt+0x2b14>
   13ac0:	str	r0, [fp, #-36]	; 0xffffffdc
   13ac4:	movw	r1, #0
   13ac8:	cmp	r0, r1
   13acc:	bne	13ad4 <__assert_fail@plt+0x25f8>
   13ad0:	b	13e54 <__assert_fail@plt+0x2978>
   13ad4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ad8:	mvn	r1, #0
   13adc:	str	r1, [r0, #48]	; 0x30
   13ae0:	ldr	r0, [fp, #-16]
   13ae4:	movw	r1, #0
   13ae8:	cmp	r0, r1
   13aec:	movw	r0, #1
   13af0:	str	r0, [sp, #8]
   13af4:	beq	13b14 <__assert_fail@plt+0x2638>
   13af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13afc:	ldr	r0, [r0, #48]	; 0x30
   13b00:	and	r0, r0, #1024	; 0x400
   13b04:	cmp	r0, #0
   13b08:	movw	r0, #0
   13b0c:	movne	r0, #1
   13b10:	str	r0, [sp, #8]
   13b14:	ldr	r0, [sp, #8]
   13b18:	and	r0, r0, #1
   13b1c:	strb	r0, [fp, #-41]	; 0xffffffd7
   13b20:	movw	r0, #0
   13b24:	str	r0, [fp, #-28]	; 0xffffffe4
   13b28:	str	r0, [fp, #-32]	; 0xffffffe0
   13b2c:	ldr	r0, [fp, #-8]
   13b30:	ldr	r0, [r0]
   13b34:	movw	r1, #0
   13b38:	cmp	r0, r1
   13b3c:	beq	13d30 <__assert_fail@plt+0x2854>
   13b40:	ldr	r0, [fp, #-8]
   13b44:	ldr	r0, [r0]
   13b48:	bl	1135c <strlen@plt>
   13b4c:	str	r0, [sp, #32]
   13b50:	ldr	r0, [fp, #-12]
   13b54:	and	r0, r0, #2048	; 0x800
   13b58:	cmp	r0, #0
   13b5c:	bne	13c00 <__assert_fail@plt+0x2724>
   13b60:	ldr	r0, [fp, #-8]
   13b64:	ldr	r0, [r0]
   13b68:	str	r0, [sp, #28]
   13b6c:	ldr	r0, [sp, #32]
   13b70:	movw	r1, #2
   13b74:	cmp	r1, r0
   13b78:	bcs	13bfc <__assert_fail@plt+0x2720>
   13b7c:	ldr	r0, [sp, #28]
   13b80:	ldr	r1, [sp, #32]
   13b84:	sub	r1, r1, #1
   13b88:	add	r0, r0, r1
   13b8c:	ldrb	r0, [r0]
   13b90:	cmp	r0, #47	; 0x2f
   13b94:	bne	13bfc <__assert_fail@plt+0x2720>
   13b98:	b	13b9c <__assert_fail@plt+0x26c0>
   13b9c:	ldr	r0, [sp, #32]
   13ba0:	movw	r1, #1
   13ba4:	cmp	r1, r0
   13ba8:	movw	r0, #0
   13bac:	str	r0, [sp, #4]
   13bb0:	bcs	13bd8 <__assert_fail@plt+0x26fc>
   13bb4:	ldr	r0, [sp, #28]
   13bb8:	ldr	r1, [sp, #32]
   13bbc:	sub	r1, r1, #2
   13bc0:	add	r0, r0, r1
   13bc4:	ldrb	r0, [r0]
   13bc8:	cmp	r0, #47	; 0x2f
   13bcc:	movw	r0, #0
   13bd0:	moveq	r0, #1
   13bd4:	str	r0, [sp, #4]
   13bd8:	ldr	r0, [sp, #4]
   13bdc:	tst	r0, #1
   13be0:	beq	13bf8 <__assert_fail@plt+0x271c>
   13be4:	ldr	r0, [sp, #32]
   13be8:	mvn	r1, #0
   13bec:	add	r0, r0, r1
   13bf0:	str	r0, [sp, #32]
   13bf4:	b	13b9c <__assert_fail@plt+0x26c0>
   13bf8:	b	13bfc <__assert_fail@plt+0x2720>
   13bfc:	b	13c00 <__assert_fail@plt+0x2724>
   13c00:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c04:	ldr	r1, [fp, #-8]
   13c08:	ldr	r1, [r1]
   13c0c:	ldr	r2, [sp, #32]
   13c10:	bl	13ff0 <__assert_fail@plt+0x2b14>
   13c14:	str	r0, [fp, #-24]	; 0xffffffe8
   13c18:	movw	r1, #0
   13c1c:	cmp	r0, r1
   13c20:	bne	13c28 <__assert_fail@plt+0x274c>
   13c24:	b	13e44 <__assert_fail@plt+0x2968>
   13c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c2c:	movw	r1, #0
   13c30:	str	r1, [r0, #48]	; 0x30
   13c34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c3c:	str	r0, [r1, #4]
   13c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c44:	add	r0, r0, #168	; 0xa8
   13c48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c4c:	str	r0, [r1, #24]
   13c50:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   13c54:	tst	r0, #1
   13c58:	beq	13c8c <__assert_fail@plt+0x27b0>
   13c5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c60:	movw	r1, #0
   13c64:	cmp	r0, r1
   13c68:	beq	13c8c <__assert_fail@plt+0x27b0>
   13c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c70:	movw	r1, #11
   13c74:	strh	r1, [r0, #56]	; 0x38
   13c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c7c:	movw	r1, #1
   13c80:	and	r1, r1, #1
   13c84:	bl	140e8 <__assert_fail@plt+0x2c0c>
   13c88:	b	13ca8 <__assert_fail@plt+0x27cc>
   13c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c94:	movw	r2, #0
   13c98:	and	r2, r2, #1
   13c9c:	bl	14140 <__assert_fail@plt+0x2c64>
   13ca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ca4:	strh	r0, [r1, #56]	; 0x38
   13ca8:	ldr	r0, [fp, #-16]
   13cac:	movw	r1, #0
   13cb0:	cmp	r0, r1
   13cb4:	beq	13cd0 <__assert_fail@plt+0x27f4>
   13cb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13cc0:	str	r0, [r1, #8]
   13cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cc8:	str	r0, [fp, #-28]	; 0xffffffe4
   13ccc:	b	13d10 <__assert_fail@plt+0x2834>
   13cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cd4:	movw	r1, #0
   13cd8:	str	r1, [r0, #8]
   13cdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ce0:	cmp	r0, r1
   13ce4:	bne	13cf8 <__assert_fail@plt+0x281c>
   13ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cec:	str	r0, [fp, #-28]	; 0xffffffe4
   13cf0:	str	r0, [fp, #-40]	; 0xffffffd8
   13cf4:	b	13d0c <__assert_fail@plt+0x2830>
   13cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cfc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d00:	str	r0, [r1, #8]
   13d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d08:	str	r0, [fp, #-40]	; 0xffffffd8
   13d0c:	b	13d10 <__assert_fail@plt+0x2834>
   13d10:	b	13d14 <__assert_fail@plt+0x2838>
   13d14:	ldr	r0, [fp, #-8]
   13d18:	add	r0, r0, #4
   13d1c:	str	r0, [fp, #-8]
   13d20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d24:	add	r0, r0, #1
   13d28:	str	r0, [fp, #-32]	; 0xffffffe0
   13d2c:	b	13b2c <__assert_fail@plt+0x2650>
   13d30:	ldr	r0, [fp, #-16]
   13d34:	movw	r1, #0
   13d38:	cmp	r0, r1
   13d3c:	beq	13d60 <__assert_fail@plt+0x2884>
   13d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d44:	cmp	r0, #1
   13d48:	bls	13d60 <__assert_fail@plt+0x2884>
   13d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d58:	bl	14358 <__assert_fail@plt+0x2e7c>
   13d5c:	str	r0, [fp, #-28]	; 0xffffffe4
   13d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d64:	movw	r1, #20032	; 0x4e40
   13d68:	movt	r1, #2
   13d6c:	movw	r2, #0
   13d70:	bl	13ff0 <__assert_fail@plt+0x2b14>
   13d74:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d78:	str	r0, [r1]
   13d7c:	movw	r1, #0
   13d80:	cmp	r0, r1
   13d84:	bne	13d8c <__assert_fail@plt+0x28b0>
   13d88:	b	13e44 <__assert_fail@plt+0x2968>
   13d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d90:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d94:	ldr	r1, [r1]
   13d98:	str	r0, [r1, #8]
   13d9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13da0:	ldr	r0, [r0]
   13da4:	movw	r1, #9
   13da8:	strh	r1, [r0, #56]	; 0x38
   13dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   13db0:	ldr	r0, [r0]
   13db4:	movw	r1, #1
   13db8:	str	r1, [r0, #48]	; 0x30
   13dbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dc0:	bl	14520 <__assert_fail@plt+0x3044>
   13dc4:	tst	r0, #1
   13dc8:	bne	13dd0 <__assert_fail@plt+0x28f4>
   13dcc:	b	13e44 <__assert_fail@plt+0x2968>
   13dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dd4:	ldr	r0, [r0, #48]	; 0x30
   13dd8:	and	r0, r0, #4
   13ddc:	cmp	r0, #0
   13de0:	bne	13e28 <__assert_fail@plt+0x294c>
   13de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13de8:	ldr	r0, [r0, #48]	; 0x30
   13dec:	and	r0, r0, #512	; 0x200
   13df0:	cmp	r0, #0
   13df4:	bne	13e28 <__assert_fail@plt+0x294c>
   13df8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dfc:	movw	r1, #22106	; 0x565a
   13e00:	movt	r1, #2
   13e04:	bl	145fc <__assert_fail@plt+0x3120>
   13e08:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e0c:	str	r0, [r1, #28]
   13e10:	cmp	r0, #0
   13e14:	bge	13e28 <__assert_fail@plt+0x294c>
   13e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e1c:	ldr	r1, [r0, #48]	; 0x30
   13e20:	orr	r1, r1, #4
   13e24:	str	r1, [r0, #48]	; 0x30
   13e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e2c:	add	r0, r0, #60	; 0x3c
   13e30:	mvn	r1, #0
   13e34:	bl	18fd4 <__assert_fail@plt+0x7af8>
   13e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e3c:	str	r0, [fp, #-4]
   13e40:	b	13e70 <__assert_fail@plt+0x2994>
   13e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e48:	bl	14698 <__assert_fail@plt+0x31bc>
   13e4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e50:	bl	13878 <__assert_fail@plt+0x239c>
   13e54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e58:	ldr	r0, [r0, #24]
   13e5c:	bl	13878 <__assert_fail@plt+0x239c>
   13e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e64:	bl	13878 <__assert_fail@plt+0x239c>
   13e68:	movw	r0, #0
   13e6c:	str	r0, [fp, #-4]
   13e70:	ldr	r0, [fp, #-4]
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}
   13e7c:			; <UNDEFINED> instruction: 0xfffff000
   13e80:	andeq	r0, r8, r0
   13e84:	push	{fp, lr}
   13e88:	mov	fp, sp
   13e8c:	sub	sp, sp, #16
   13e90:	str	r0, [fp, #-4]
   13e94:	movw	r0, #0
   13e98:	str	r0, [sp, #4]
   13e9c:	ldr	r0, [fp, #-4]
   13ea0:	ldr	r0, [r0]
   13ea4:	movw	r1, #0
   13ea8:	cmp	r0, r1
   13eac:	beq	13ee8 <__assert_fail@plt+0x2a0c>
   13eb0:	ldr	r0, [fp, #-4]
   13eb4:	ldr	r0, [r0]
   13eb8:	bl	1135c <strlen@plt>
   13ebc:	str	r0, [sp, #8]
   13ec0:	ldr	lr, [sp, #4]
   13ec4:	cmp	r0, lr
   13ec8:	bls	13ed4 <__assert_fail@plt+0x29f8>
   13ecc:	ldr	r0, [sp, #8]
   13ed0:	str	r0, [sp, #4]
   13ed4:	b	13ed8 <__assert_fail@plt+0x29fc>
   13ed8:	ldr	r0, [fp, #-4]
   13edc:	add	r0, r0, #4
   13ee0:	str	r0, [fp, #-4]
   13ee4:	b	13e9c <__assert_fail@plt+0x29c0>
   13ee8:	ldr	r0, [sp, #4]
   13eec:	add	r0, r0, #1
   13ef0:	mov	sp, fp
   13ef4:	pop	{fp, pc}
   13ef8:	push	{fp, lr}
   13efc:	mov	fp, sp
   13f00:	sub	sp, sp, #24
   13f04:	str	r0, [fp, #-8]
   13f08:	str	r1, [sp, #12]
   13f0c:	ldr	r0, [fp, #-8]
   13f10:	ldr	r0, [r0, #36]	; 0x24
   13f14:	ldr	r1, [sp, #12]
   13f18:	add	r0, r0, r1
   13f1c:	add	r0, r0, #256	; 0x100
   13f20:	str	r0, [sp, #4]
   13f24:	ldr	r0, [sp, #4]
   13f28:	ldr	r1, [fp, #-8]
   13f2c:	ldr	r1, [r1, #36]	; 0x24
   13f30:	cmp	r0, r1
   13f34:	bcs	13f6c <__assert_fail@plt+0x2a90>
   13f38:	ldr	r0, [fp, #-8]
   13f3c:	ldr	r0, [r0, #24]
   13f40:	bl	13878 <__assert_fail@plt+0x239c>
   13f44:	ldr	r0, [fp, #-8]
   13f48:	movw	lr, #0
   13f4c:	str	lr, [r0, #24]
   13f50:	bl	11398 <__errno_location@plt>
   13f54:	movw	lr, #36	; 0x24
   13f58:	str	lr, [r0]
   13f5c:	movw	r0, #0
   13f60:	and	r0, r0, #1
   13f64:	strb	r0, [fp, #-1]
   13f68:	b	13fe0 <__assert_fail@plt+0x2b04>
   13f6c:	ldr	r0, [sp, #4]
   13f70:	ldr	r1, [fp, #-8]
   13f74:	str	r0, [r1, #36]	; 0x24
   13f78:	ldr	r0, [fp, #-8]
   13f7c:	ldr	r0, [r0, #24]
   13f80:	ldr	r1, [fp, #-8]
   13f84:	ldr	r1, [r1, #36]	; 0x24
   13f88:	bl	21830 <__assert_fail@plt+0x10354>
   13f8c:	str	r0, [sp, #8]
   13f90:	ldr	r0, [sp, #8]
   13f94:	movw	r1, #0
   13f98:	cmp	r0, r1
   13f9c:	bne	13fc8 <__assert_fail@plt+0x2aec>
   13fa0:	ldr	r0, [fp, #-8]
   13fa4:	ldr	r0, [r0, #24]
   13fa8:	bl	13878 <__assert_fail@plt+0x239c>
   13fac:	ldr	r0, [fp, #-8]
   13fb0:	movw	lr, #0
   13fb4:	str	lr, [r0, #24]
   13fb8:	movw	r0, #0
   13fbc:	and	r0, r0, #1
   13fc0:	strb	r0, [fp, #-1]
   13fc4:	b	13fe0 <__assert_fail@plt+0x2b04>
   13fc8:	ldr	r0, [sp, #8]
   13fcc:	ldr	r1, [fp, #-8]
   13fd0:	str	r0, [r1, #24]
   13fd4:	movw	r0, #1
   13fd8:	and	r0, r0, #1
   13fdc:	strb	r0, [fp, #-1]
   13fe0:	ldrb	r0, [fp, #-1]
   13fe4:	and	r0, r0, #1
   13fe8:	mov	sp, fp
   13fec:	pop	{fp, pc}
   13ff0:	push	{fp, lr}
   13ff4:	mov	fp, sp
   13ff8:	sub	sp, sp, #24
   13ffc:	str	r0, [fp, #-8]
   14000:	str	r1, [sp, #12]
   14004:	str	r2, [sp, #8]
   14008:	ldr	r0, [sp, #8]
   1400c:	add	r0, r0, #1
   14010:	add	r0, r0, #175	; 0xaf
   14014:	mvn	r1, #7
   14018:	and	r0, r0, r1
   1401c:	str	r0, [sp]
   14020:	ldr	r0, [sp]
   14024:	bl	217c0 <__assert_fail@plt+0x102e4>
   14028:	str	r0, [sp, #4]
   1402c:	movw	r1, #0
   14030:	cmp	r0, r1
   14034:	bne	14044 <__assert_fail@plt+0x2b68>
   14038:	movw	r0, #0
   1403c:	str	r0, [fp, #-4]
   14040:	b	140dc <__assert_fail@plt+0x2c00>
   14044:	ldr	r0, [sp, #4]
   14048:	add	r0, r0, #168	; 0xa8
   1404c:	ldr	r1, [sp, #12]
   14050:	ldr	r2, [sp, #8]
   14054:	bl	1123c <memcpy@plt>
   14058:	ldr	r0, [sp, #4]
   1405c:	add	r0, r0, #168	; 0xa8
   14060:	ldr	r1, [sp, #8]
   14064:	add	r0, r0, r1
   14068:	movw	r1, #0
   1406c:	strb	r1, [r0]
   14070:	ldr	r0, [sp, #8]
   14074:	ldr	r1, [sp, #4]
   14078:	str	r0, [r1, #52]	; 0x34
   1407c:	ldr	r0, [fp, #-8]
   14080:	ldr	r1, [sp, #4]
   14084:	str	r0, [r1, #44]	; 0x2c
   14088:	ldr	r0, [fp, #-8]
   1408c:	ldr	r0, [r0, #24]
   14090:	ldr	r1, [sp, #4]
   14094:	str	r0, [r1, #28]
   14098:	ldr	r0, [sp, #4]
   1409c:	movw	r1, #0
   140a0:	str	r1, [r0, #32]
   140a4:	ldr	r0, [sp, #4]
   140a8:	str	r1, [r0, #12]
   140ac:	ldr	r0, [sp, #4]
   140b0:	movw	r2, #0
   140b4:	strh	r2, [r0, #58]	; 0x3a
   140b8:	ldr	r0, [sp, #4]
   140bc:	movw	r2, #3
   140c0:	strh	r2, [r0, #60]	; 0x3c
   140c4:	ldr	r0, [sp, #4]
   140c8:	str	r1, [r0, #16]
   140cc:	ldr	r0, [sp, #4]
   140d0:	str	r1, [r0, #20]
   140d4:	ldr	r0, [sp, #4]
   140d8:	str	r0, [fp, #-4]
   140dc:	ldr	r0, [fp, #-4]
   140e0:	mov	sp, fp
   140e4:	pop	{fp, pc}
   140e8:	push	{fp, lr}
   140ec:	mov	fp, sp
   140f0:	sub	sp, sp, #8
   140f4:	str	r0, [sp, #4]
   140f8:	and	r0, r1, #1
   140fc:	strb	r0, [sp, #3]
   14100:	ldr	r0, [sp, #4]
   14104:	ldrh	r0, [r0, #56]	; 0x38
   14108:	cmp	r0, #11
   1410c:	beq	14114 <__assert_fail@plt+0x2c38>
   14110:	bl	11494 <abort@plt>
   14114:	b	14118 <__assert_fail@plt+0x2c3c>
   14118:	ldrb	r0, [sp, #3]
   1411c:	mov	r1, #1
   14120:	tst	r0, #1
   14124:	movwne	r1, #2
   14128:	ldr	r0, [sp, #4]
   1412c:	mov	r2, #0
   14130:	str	r2, [r0, #116]	; 0x74
   14134:	str	r1, [r0, #112]	; 0x70
   14138:	mov	sp, fp
   1413c:	pop	{fp, pc}
   14140:	push	{fp, lr}
   14144:	mov	fp, sp
   14148:	sub	sp, sp, #24
   1414c:	str	r0, [fp, #-8]
   14150:	str	r1, [sp, #12]
   14154:	and	r0, r2, #1
   14158:	strb	r0, [sp, #11]
   1415c:	ldr	r0, [sp, #12]
   14160:	add	r0, r0, #64	; 0x40
   14164:	str	r0, [sp, #4]
   14168:	ldr	r0, [sp, #12]
   1416c:	ldr	r0, [r0, #48]	; 0x30
   14170:	cmp	r0, #0
   14174:	bne	14194 <__assert_fail@plt+0x2cb8>
   14178:	ldr	r0, [fp, #-8]
   1417c:	ldr	r0, [r0, #48]	; 0x30
   14180:	and	r0, r0, #1
   14184:	cmp	r0, #0
   14188:	beq	14194 <__assert_fail@plt+0x2cb8>
   1418c:	movw	r0, #1
   14190:	strb	r0, [sp, #11]
   14194:	ldr	r0, [fp, #-8]
   14198:	ldr	r0, [r0, #48]	; 0x30
   1419c:	and	r0, r0, #2
   141a0:	cmp	r0, #0
   141a4:	bne	141b4 <__assert_fail@plt+0x2cd8>
   141a8:	ldrb	r0, [sp, #11]
   141ac:	tst	r0, #1
   141b0:	beq	14224 <__assert_fail@plt+0x2d48>
   141b4:	ldr	r0, [sp, #12]
   141b8:	ldr	r0, [r0, #24]
   141bc:	ldr	r1, [sp, #4]
   141c0:	bl	247cc <__assert_fail@plt+0x132f0>
   141c4:	cmp	r0, #0
   141c8:	beq	14220 <__assert_fail@plt+0x2d44>
   141cc:	bl	11398 <__errno_location@plt>
   141d0:	ldr	r0, [r0]
   141d4:	cmp	r0, #2
   141d8:	bne	1420c <__assert_fail@plt+0x2d30>
   141dc:	ldr	r0, [sp, #12]
   141e0:	ldr	r0, [r0, #24]
   141e4:	ldr	r1, [sp, #4]
   141e8:	bl	247ec <__assert_fail@plt+0x13310>
   141ec:	cmp	r0, #0
   141f0:	bne	1420c <__assert_fail@plt+0x2d30>
   141f4:	bl	11398 <__errno_location@plt>
   141f8:	movw	lr, #0
   141fc:	str	lr, [r0]
   14200:	movw	r0, #13
   14204:	strh	r0, [fp, #-2]
   14208:	b	1434c <__assert_fail@plt+0x2e70>
   1420c:	bl	11398 <__errno_location@plt>
   14210:	ldr	r0, [r0]
   14214:	ldr	lr, [sp, #12]
   14218:	str	r0, [lr, #32]
   1421c:	b	14258 <__assert_fail@plt+0x2d7c>
   14220:	b	1427c <__assert_fail@plt+0x2da0>
   14224:	ldr	r0, [fp, #-8]
   14228:	ldr	r0, [r0, #32]
   1422c:	ldr	r1, [sp, #12]
   14230:	ldr	r1, [r1, #24]
   14234:	ldr	r2, [sp, #4]
   14238:	movw	r3, #256	; 0x100
   1423c:	bl	247fc <__assert_fail@plt+0x13320>
   14240:	cmp	r0, #0
   14244:	beq	14278 <__assert_fail@plt+0x2d9c>
   14248:	bl	11398 <__errno_location@plt>
   1424c:	ldr	r0, [r0]
   14250:	ldr	lr, [sp, #12]
   14254:	str	r0, [lr, #32]
   14258:	ldr	r0, [sp, #4]
   1425c:	movw	r1, #0
   14260:	and	r1, r1, #255	; 0xff
   14264:	movw	r2, #104	; 0x68
   14268:	bl	113b0 <memset@plt>
   1426c:	movw	r0, #10
   14270:	strh	r0, [fp, #-2]
   14274:	b	1434c <__assert_fail@plt+0x2e70>
   14278:	b	1427c <__assert_fail@plt+0x2da0>
   1427c:	ldr	r0, [sp, #4]
   14280:	ldr	r0, [r0, #16]
   14284:	and	r0, r0, #61440	; 0xf000
   14288:	cmp	r0, #16384	; 0x4000
   1428c:	bne	14304 <__assert_fail@plt+0x2e28>
   14290:	ldr	r0, [sp, #12]
   14294:	ldrb	r0, [r0, #168]	; 0xa8
   14298:	cmp	r0, #46	; 0x2e
   1429c:	bne	142f8 <__assert_fail@plt+0x2e1c>
   142a0:	ldr	r0, [sp, #12]
   142a4:	ldrsb	r0, [r0, #169]	; 0xa9
   142a8:	cmp	r0, #0
   142ac:	beq	142d0 <__assert_fail@plt+0x2df4>
   142b0:	ldr	r0, [sp, #12]
   142b4:	ldrb	r0, [r0, #169]	; 0xa9
   142b8:	cmp	r0, #46	; 0x2e
   142bc:	bne	142f8 <__assert_fail@plt+0x2e1c>
   142c0:	ldr	r0, [sp, #12]
   142c4:	ldrsb	r0, [r0, #170]	; 0xaa
   142c8:	cmp	r0, #0
   142cc:	bne	142f8 <__assert_fail@plt+0x2e1c>
   142d0:	ldr	r0, [sp, #12]
   142d4:	ldr	r0, [r0, #48]	; 0x30
   142d8:	cmp	r0, #0
   142dc:	movw	r0, #0
   142e0:	moveq	r0, #1
   142e4:	tst	r0, #1
   142e8:	movw	r0, #1
   142ec:	moveq	r0, #5
   142f0:	strh	r0, [fp, #-2]
   142f4:	b	1434c <__assert_fail@plt+0x2e70>
   142f8:	movw	r0, #1
   142fc:	strh	r0, [fp, #-2]
   14300:	b	1434c <__assert_fail@plt+0x2e70>
   14304:	ldr	r0, [sp, #4]
   14308:	ldr	r0, [r0, #16]
   1430c:	and	r0, r0, #61440	; 0xf000
   14310:	cmp	r0, #40960	; 0xa000
   14314:	bne	14324 <__assert_fail@plt+0x2e48>
   14318:	movw	r0, #12
   1431c:	strh	r0, [fp, #-2]
   14320:	b	1434c <__assert_fail@plt+0x2e70>
   14324:	ldr	r0, [sp, #4]
   14328:	ldr	r0, [r0, #16]
   1432c:	and	r0, r0, #61440	; 0xf000
   14330:	cmp	r0, #32768	; 0x8000
   14334:	bne	14344 <__assert_fail@plt+0x2e68>
   14338:	movw	r0, #8
   1433c:	strh	r0, [fp, #-2]
   14340:	b	1434c <__assert_fail@plt+0x2e70>
   14344:	movw	r0, #3
   14348:	strh	r0, [fp, #-2]
   1434c:	ldrh	r0, [fp, #-2]
   14350:	mov	sp, fp
   14354:	pop	{fp, pc}
   14358:	push	{fp, lr}
   1435c:	mov	fp, sp
   14360:	sub	sp, sp, #48	; 0x30
   14364:	add	r3, sp, #20
   14368:	str	r0, [fp, #-8]
   1436c:	str	r1, [fp, #-12]
   14370:	str	r2, [fp, #-16]
   14374:	mov	r0, r3
   14378:	cmp	r3, r0
   1437c:	bne	14390 <__assert_fail@plt+0x2eb4>
   14380:	ldr	r0, [fp, #-8]
   14384:	ldr	r0, [r0, #44]	; 0x2c
   14388:	str	r0, [sp, #8]
   1438c:	b	143a0 <__assert_fail@plt+0x2ec4>
   14390:	movw	r0, #29452	; 0x730c
   14394:	movt	r0, #1
   14398:	str	r0, [sp, #8]
   1439c:	b	143a0 <__assert_fail@plt+0x2ec4>
   143a0:	ldr	r0, [sp, #8]
   143a4:	str	r0, [sp, #16]
   143a8:	ldr	r0, [fp, #-16]
   143ac:	ldr	r1, [fp, #-8]
   143b0:	ldr	r1, [r1, #40]	; 0x28
   143b4:	cmp	r0, r1
   143b8:	bls	14448 <__assert_fail@plt+0x2f6c>
   143bc:	ldr	r0, [pc, #344]	; 1451c <__assert_fail@plt+0x3040>
   143c0:	ldr	r1, [fp, #-16]
   143c4:	add	r1, r1, #40	; 0x28
   143c8:	ldr	r2, [fp, #-8]
   143cc:	str	r1, [r2, #40]	; 0x28
   143d0:	ldr	r1, [fp, #-8]
   143d4:	ldr	r1, [r1, #40]	; 0x28
   143d8:	cmp	r0, r1
   143dc:	bcc	14410 <__assert_fail@plt+0x2f34>
   143e0:	ldr	r0, [fp, #-8]
   143e4:	ldr	r1, [r0, #8]
   143e8:	ldr	r0, [r0, #40]	; 0x28
   143ec:	lsl	r0, r0, #2
   143f0:	str	r0, [sp, #4]
   143f4:	mov	r0, r1
   143f8:	ldr	r1, [sp, #4]
   143fc:	bl	21830 <__assert_fail@plt+0x10354>
   14400:	str	r0, [sp, #12]
   14404:	movw	r1, #0
   14408:	cmp	r0, r1
   1440c:	bne	1443c <__assert_fail@plt+0x2f60>
   14410:	ldr	r0, [fp, #-8]
   14414:	ldr	r0, [r0, #8]
   14418:	bl	13878 <__assert_fail@plt+0x239c>
   1441c:	ldr	r0, [fp, #-8]
   14420:	movw	lr, #0
   14424:	str	lr, [r0, #8]
   14428:	ldr	r0, [fp, #-8]
   1442c:	str	lr, [r0, #40]	; 0x28
   14430:	ldr	r0, [fp, #-12]
   14434:	str	r0, [fp, #-4]
   14438:	b	14510 <__assert_fail@plt+0x3034>
   1443c:	ldr	r0, [sp, #12]
   14440:	ldr	r1, [fp, #-8]
   14444:	str	r0, [r1, #8]
   14448:	ldr	r0, [fp, #-8]
   1444c:	ldr	r0, [r0, #8]
   14450:	str	r0, [fp, #-20]	; 0xffffffec
   14454:	ldr	r0, [fp, #-12]
   14458:	str	r0, [sp, #24]
   1445c:	ldr	r0, [sp, #24]
   14460:	movw	r1, #0
   14464:	cmp	r0, r1
   14468:	beq	14490 <__assert_fail@plt+0x2fb4>
   1446c:	ldr	r0, [sp, #24]
   14470:	ldr	r1, [fp, #-20]	; 0xffffffec
   14474:	add	r2, r1, #4
   14478:	str	r2, [fp, #-20]	; 0xffffffec
   1447c:	str	r0, [r1]
   14480:	ldr	r0, [sp, #24]
   14484:	ldr	r0, [r0, #8]
   14488:	str	r0, [sp, #24]
   1448c:	b	1445c <__assert_fail@plt+0x2f80>
   14490:	ldr	r0, [fp, #-8]
   14494:	ldr	r0, [r0, #8]
   14498:	ldr	r1, [fp, #-16]
   1449c:	ldr	r3, [sp, #16]
   144a0:	movw	r2, #4
   144a4:	bl	1144c <qsort@plt>
   144a8:	ldr	r0, [fp, #-8]
   144ac:	ldr	r0, [r0, #8]
   144b0:	str	r0, [fp, #-20]	; 0xffffffec
   144b4:	ldr	r0, [r0]
   144b8:	str	r0, [fp, #-12]
   144bc:	ldr	r0, [fp, #-16]
   144c0:	mvn	r1, #0
   144c4:	add	r0, r0, r1
   144c8:	str	r0, [fp, #-16]
   144cc:	cmp	r0, #0
   144d0:	beq	144f8 <__assert_fail@plt+0x301c>
   144d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   144d8:	ldr	r0, [r0, #4]
   144dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   144e0:	ldr	r1, [r1]
   144e4:	str	r0, [r1, #8]
   144e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   144ec:	add	r0, r0, #4
   144f0:	str	r0, [fp, #-20]	; 0xffffffec
   144f4:	b	144bc <__assert_fail@plt+0x2fe0>
   144f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   144fc:	ldr	r0, [r0]
   14500:	movw	r1, #0
   14504:	str	r1, [r0, #8]
   14508:	ldr	r0, [fp, #-12]
   1450c:	str	r0, [fp, #-4]
   14510:	ldr	r0, [fp, #-4]
   14514:	mov	sp, fp
   14518:	pop	{fp, pc}
   1451c:	svccc	0x00ffffff
   14520:	push	{fp, lr}
   14524:	mov	fp, sp
   14528:	sub	sp, sp, #16
   1452c:	str	r0, [sp, #8]
   14530:	ldr	r0, [sp, #8]
   14534:	ldr	r0, [r0, #48]	; 0x30
   14538:	movw	r1, #258	; 0x102
   1453c:	and	r0, r0, r1
   14540:	cmp	r0, #0
   14544:	beq	145a0 <__assert_fail@plt+0x30c4>
   14548:	movw	r0, #31
   1454c:	movw	r1, #0
   14550:	movw	r2, #27612	; 0x6bdc
   14554:	movt	r2, #1
   14558:	movw	r3, #27696	; 0x6c30
   1455c:	movt	r3, #1
   14560:	movw	ip, #14456	; 0x3878
   14564:	movt	ip, #1
   14568:	str	ip, [sp]
   1456c:	bl	17b74 <__assert_fail@plt+0x6698>
   14570:	ldr	r1, [sp, #8]
   14574:	str	r0, [r1, #56]	; 0x38
   14578:	ldr	r0, [sp, #8]
   1457c:	ldr	r0, [r0, #56]	; 0x38
   14580:	movw	r1, #0
   14584:	cmp	r0, r1
   14588:	bne	1459c <__assert_fail@plt+0x30c0>
   1458c:	movw	r0, #0
   14590:	and	r0, r0, #1
   14594:	strb	r0, [fp, #-1]
   14598:	b	145ec <__assert_fail@plt+0x3110>
   1459c:	b	145e0 <__assert_fail@plt+0x3104>
   145a0:	movw	r0, #32
   145a4:	bl	217c0 <__assert_fail@plt+0x102e4>
   145a8:	ldr	lr, [sp, #8]
   145ac:	str	r0, [lr, #56]	; 0x38
   145b0:	ldr	r0, [sp, #8]
   145b4:	ldr	r0, [r0, #56]	; 0x38
   145b8:	movw	lr, #0
   145bc:	cmp	r0, lr
   145c0:	bne	145d4 <__assert_fail@plt+0x30f8>
   145c4:	movw	r0, #0
   145c8:	and	r0, r0, #1
   145cc:	strb	r0, [fp, #-1]
   145d0:	b	145ec <__assert_fail@plt+0x3110>
   145d4:	ldr	r0, [sp, #8]
   145d8:	ldr	r0, [r0, #56]	; 0x38
   145dc:	bl	21d3c <__assert_fail@plt+0x10860>
   145e0:	movw	r0, #1
   145e4:	and	r0, r0, #1
   145e8:	strb	r0, [fp, #-1]
   145ec:	ldrb	r0, [fp, #-1]
   145f0:	and	r0, r0, #1
   145f4:	mov	sp, fp
   145f8:	pop	{fp, pc}
   145fc:	push	{fp, lr}
   14600:	mov	fp, sp
   14604:	sub	sp, sp, #24
   14608:	ldr	r2, [pc, #132]	; 14694 <__assert_fail@plt+0x31b8>
   1460c:	str	r0, [fp, #-4]
   14610:	str	r1, [fp, #-8]
   14614:	ldr	r0, [fp, #-4]
   14618:	ldr	r0, [r0, #48]	; 0x30
   1461c:	and	r0, r0, #16
   14620:	cmp	r0, #0
   14624:	movw	r0, #0
   14628:	movne	r0, #1
   1462c:	tst	r0, #1
   14630:	movw	r0, #32768	; 0x8000
   14634:	moveq	r0, #0
   14638:	orr	r0, r0, r2
   1463c:	str	r0, [sp, #12]
   14640:	ldr	r0, [fp, #-4]
   14644:	ldr	r0, [r0, #48]	; 0x30
   14648:	and	r0, r0, #512	; 0x200
   1464c:	cmp	r0, #0
   14650:	beq	14670 <__assert_fail@plt+0x3194>
   14654:	ldr	r0, [fp, #-4]
   14658:	ldr	r0, [r0, #32]
   1465c:	ldr	r1, [fp, #-8]
   14660:	ldr	r2, [sp, #12]
   14664:	bl	192f0 <__assert_fail@plt+0x7e14>
   14668:	str	r0, [sp, #4]
   1466c:	b	14680 <__assert_fail@plt+0x31a4>
   14670:	ldr	r0, [fp, #-8]
   14674:	ldr	r1, [sp, #12]
   14678:	bl	223f8 <__assert_fail@plt+0x10f1c>
   1467c:	str	r0, [sp, #4]
   14680:	ldr	r0, [sp, #4]
   14684:	str	r0, [sp, #8]
   14688:	ldr	r0, [sp, #8]
   1468c:	mov	sp, fp
   14690:	pop	{fp, pc}
   14694:	andeq	r4, r8, r0, lsl #18
   14698:	push	{fp, lr}
   1469c:	mov	fp, sp
   146a0:	sub	sp, sp, #16
   146a4:	str	r0, [fp, #-4]
   146a8:	ldr	r0, [fp, #-4]
   146ac:	str	r0, [sp, #8]
   146b0:	movw	r1, #0
   146b4:	cmp	r0, r1
   146b8:	beq	146f8 <__assert_fail@plt+0x321c>
   146bc:	ldr	r0, [fp, #-4]
   146c0:	ldr	r0, [r0, #8]
   146c4:	str	r0, [fp, #-4]
   146c8:	ldr	r0, [sp, #8]
   146cc:	ldr	r0, [r0, #12]
   146d0:	movw	r1, #0
   146d4:	cmp	r0, r1
   146d8:	beq	146ec <__assert_fail@plt+0x3210>
   146dc:	ldr	r0, [sp, #8]
   146e0:	ldr	r0, [r0, #12]
   146e4:	bl	114b8 <closedir@plt>
   146e8:	str	r0, [sp, #4]
   146ec:	ldr	r0, [sp, #8]
   146f0:	bl	13878 <__assert_fail@plt+0x239c>
   146f4:	b	146a8 <__assert_fail@plt+0x31cc>
   146f8:	mov	sp, fp
   146fc:	pop	{fp, pc}
   14700:	push	{fp, lr}
   14704:	mov	fp, sp
   14708:	sub	sp, sp, #32
   1470c:	str	r0, [fp, #-8]
   14710:	movw	r0, #0
   14714:	str	r0, [sp, #12]
   14718:	ldr	r1, [fp, #-8]
   1471c:	ldr	r1, [r1]
   14720:	cmp	r1, r0
   14724:	beq	14798 <__assert_fail@plt+0x32bc>
   14728:	ldr	r0, [fp, #-8]
   1472c:	ldr	r0, [r0]
   14730:	str	r0, [sp, #16]
   14734:	ldr	r0, [sp, #16]
   14738:	ldr	r0, [r0, #48]	; 0x30
   1473c:	cmp	r0, #0
   14740:	blt	14790 <__assert_fail@plt+0x32b4>
   14744:	ldr	r0, [sp, #16]
   14748:	str	r0, [fp, #-12]
   1474c:	ldr	r0, [sp, #16]
   14750:	ldr	r0, [r0, #8]
   14754:	movw	r1, #0
   14758:	cmp	r0, r1
   1475c:	beq	14770 <__assert_fail@plt+0x3294>
   14760:	ldr	r0, [sp, #16]
   14764:	ldr	r0, [r0, #8]
   14768:	str	r0, [sp, #8]
   1476c:	b	1477c <__assert_fail@plt+0x32a0>
   14770:	ldr	r0, [sp, #16]
   14774:	ldr	r0, [r0, #4]
   14778:	str	r0, [sp, #8]
   1477c:	ldr	r0, [sp, #8]
   14780:	str	r0, [sp, #16]
   14784:	ldr	r0, [fp, #-12]
   14788:	bl	13878 <__assert_fail@plt+0x239c>
   1478c:	b	14734 <__assert_fail@plt+0x3258>
   14790:	ldr	r0, [sp, #16]
   14794:	bl	13878 <__assert_fail@plt+0x239c>
   14798:	ldr	r0, [fp, #-8]
   1479c:	ldr	r0, [r0, #4]
   147a0:	movw	r1, #0
   147a4:	cmp	r0, r1
   147a8:	beq	147b8 <__assert_fail@plt+0x32dc>
   147ac:	ldr	r0, [fp, #-8]
   147b0:	ldr	r0, [r0, #4]
   147b4:	bl	14698 <__assert_fail@plt+0x31bc>
   147b8:	ldr	r0, [fp, #-8]
   147bc:	ldr	r0, [r0, #8]
   147c0:	bl	13878 <__assert_fail@plt+0x239c>
   147c4:	ldr	r0, [fp, #-8]
   147c8:	ldr	r0, [r0, #24]
   147cc:	bl	13878 <__assert_fail@plt+0x239c>
   147d0:	ldr	r0, [fp, #-8]
   147d4:	ldr	r0, [r0, #48]	; 0x30
   147d8:	and	r0, r0, #512	; 0x200
   147dc:	cmp	r0, #0
   147e0:	beq	14820 <__assert_fail@plt+0x3344>
   147e4:	ldr	r0, [fp, #-8]
   147e8:	ldr	r0, [r0, #32]
   147ec:	movw	r1, #0
   147f0:	cmp	r1, r0
   147f4:	bgt	1481c <__assert_fail@plt+0x3340>
   147f8:	ldr	r0, [fp, #-8]
   147fc:	ldr	r0, [r0, #32]
   14800:	bl	114a0 <close@plt>
   14804:	cmp	r0, #0
   14808:	beq	14818 <__assert_fail@plt+0x333c>
   1480c:	bl	11398 <__errno_location@plt>
   14810:	ldr	r0, [r0]
   14814:	str	r0, [sp, #12]
   14818:	b	1481c <__assert_fail@plt+0x3340>
   1481c:	b	1488c <__assert_fail@plt+0x33b0>
   14820:	ldr	r0, [fp, #-8]
   14824:	ldr	r0, [r0, #48]	; 0x30
   14828:	and	r0, r0, #4
   1482c:	cmp	r0, #0
   14830:	bne	14888 <__assert_fail@plt+0x33ac>
   14834:	ldr	r0, [fp, #-8]
   14838:	ldr	r0, [r0, #28]
   1483c:	bl	11440 <fchdir@plt>
   14840:	cmp	r0, #0
   14844:	beq	14854 <__assert_fail@plt+0x3378>
   14848:	bl	11398 <__errno_location@plt>
   1484c:	ldr	r0, [r0]
   14850:	str	r0, [sp, #12]
   14854:	ldr	r0, [fp, #-8]
   14858:	ldr	r0, [r0, #28]
   1485c:	bl	114a0 <close@plt>
   14860:	cmp	r0, #0
   14864:	beq	14884 <__assert_fail@plt+0x33a8>
   14868:	ldr	r0, [sp, #12]
   1486c:	cmp	r0, #0
   14870:	bne	14880 <__assert_fail@plt+0x33a4>
   14874:	bl	11398 <__errno_location@plt>
   14878:	ldr	r0, [r0]
   1487c:	str	r0, [sp, #12]
   14880:	b	14884 <__assert_fail@plt+0x33a8>
   14884:	b	14888 <__assert_fail@plt+0x33ac>
   14888:	b	1488c <__assert_fail@plt+0x33b0>
   1488c:	ldr	r0, [fp, #-8]
   14890:	add	r0, r0, #60	; 0x3c
   14894:	bl	14908 <__assert_fail@plt+0x342c>
   14898:	ldr	r0, [fp, #-8]
   1489c:	ldr	r0, [r0, #52]	; 0x34
   148a0:	movw	lr, #0
   148a4:	cmp	r0, lr
   148a8:	beq	148b8 <__assert_fail@plt+0x33dc>
   148ac:	ldr	r0, [fp, #-8]
   148b0:	ldr	r0, [r0, #52]	; 0x34
   148b4:	bl	180c8 <__assert_fail@plt+0x6bec>
   148b8:	ldr	r0, [fp, #-8]
   148bc:	bl	14964 <__assert_fail@plt+0x3488>
   148c0:	ldr	r0, [fp, #-8]
   148c4:	bl	13878 <__assert_fail@plt+0x239c>
   148c8:	ldr	r0, [sp, #12]
   148cc:	cmp	r0, #0
   148d0:	beq	148f4 <__assert_fail@plt+0x3418>
   148d4:	ldr	r0, [sp, #12]
   148d8:	str	r0, [sp, #4]
   148dc:	bl	11398 <__errno_location@plt>
   148e0:	ldr	lr, [sp, #4]
   148e4:	str	lr, [r0]
   148e8:	mvn	r0, #0
   148ec:	str	r0, [fp, #-4]
   148f0:	b	148fc <__assert_fail@plt+0x3420>
   148f4:	movw	r0, #0
   148f8:	str	r0, [fp, #-4]
   148fc:	ldr	r0, [fp, #-4]
   14900:	mov	sp, fp
   14904:	pop	{fp, pc}
   14908:	push	{fp, lr}
   1490c:	mov	fp, sp
   14910:	sub	sp, sp, #16
   14914:	str	r0, [fp, #-4]
   14918:	ldr	r0, [fp, #-4]
   1491c:	bl	19048 <__assert_fail@plt+0x7b6c>
   14920:	mvn	lr, #0
   14924:	eor	r0, r0, lr
   14928:	tst	r0, #1
   1492c:	beq	1495c <__assert_fail@plt+0x3480>
   14930:	ldr	r0, [fp, #-4]
   14934:	bl	19118 <__assert_fail@plt+0x7c3c>
   14938:	str	r0, [sp, #8]
   1493c:	ldr	r0, [sp, #8]
   14940:	movw	lr, #0
   14944:	cmp	lr, r0
   14948:	bgt	14958 <__assert_fail@plt+0x347c>
   1494c:	ldr	r0, [sp, #8]
   14950:	bl	114a0 <close@plt>
   14954:	str	r0, [sp, #4]
   14958:	b	14918 <__assert_fail@plt+0x343c>
   1495c:	mov	sp, fp
   14960:	pop	{fp, pc}
   14964:	push	{fp, lr}
   14968:	mov	fp, sp
   1496c:	sub	sp, sp, #8
   14970:	str	r0, [sp, #4]
   14974:	ldr	r0, [sp, #4]
   14978:	ldr	r0, [r0, #48]	; 0x30
   1497c:	movw	r1, #258	; 0x102
   14980:	and	r0, r0, r1
   14984:	cmp	r0, #0
   14988:	beq	149b0 <__assert_fail@plt+0x34d4>
   1498c:	ldr	r0, [sp, #4]
   14990:	ldr	r0, [r0, #56]	; 0x38
   14994:	movw	r1, #0
   14998:	cmp	r0, r1
   1499c:	beq	149ac <__assert_fail@plt+0x34d0>
   149a0:	ldr	r0, [sp, #4]
   149a4:	ldr	r0, [r0, #56]	; 0x38
   149a8:	bl	180c8 <__assert_fail@plt+0x6bec>
   149ac:	b	149bc <__assert_fail@plt+0x34e0>
   149b0:	ldr	r0, [sp, #4]
   149b4:	ldr	r0, [r0, #56]	; 0x38
   149b8:	bl	13878 <__assert_fail@plt+0x239c>
   149bc:	mov	sp, fp
   149c0:	pop	{fp, pc}
   149c4:	push	{fp, lr}
   149c8:	mov	fp, sp
   149cc:	sub	sp, sp, #48	; 0x30
   149d0:	str	r0, [fp, #-8]
   149d4:	ldr	r0, [fp, #-8]
   149d8:	ldr	r0, [r0]
   149dc:	movw	r1, #0
   149e0:	cmp	r0, r1
   149e4:	beq	149fc <__assert_fail@plt+0x3520>
   149e8:	ldr	r0, [fp, #-8]
   149ec:	ldr	r0, [r0, #48]	; 0x30
   149f0:	and	r0, r0, #8192	; 0x2000
   149f4:	cmp	r0, #0
   149f8:	beq	14a08 <__assert_fail@plt+0x352c>
   149fc:	movw	r0, #0
   14a00:	str	r0, [fp, #-4]
   14a04:	b	153a4 <__assert_fail@plt+0x3ec8>
   14a08:	ldr	r0, [fp, #-8]
   14a0c:	ldr	r0, [r0]
   14a10:	str	r0, [fp, #-12]
   14a14:	ldr	r0, [fp, #-12]
   14a18:	ldrh	r0, [r0, #60]	; 0x3c
   14a1c:	strh	r0, [fp, #-18]	; 0xffffffee
   14a20:	ldr	r0, [fp, #-12]
   14a24:	movw	r1, #3
   14a28:	strh	r1, [r0, #60]	; 0x3c
   14a2c:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14a30:	cmp	r0, #1
   14a34:	bne	14a60 <__assert_fail@plt+0x3584>
   14a38:	ldr	r0, [fp, #-8]
   14a3c:	ldr	r1, [fp, #-12]
   14a40:	movw	r2, #0
   14a44:	and	r2, r2, #1
   14a48:	bl	14140 <__assert_fail@plt+0x2c64>
   14a4c:	ldr	r1, [fp, #-12]
   14a50:	strh	r0, [r1, #56]	; 0x38
   14a54:	ldr	r0, [fp, #-12]
   14a58:	str	r0, [fp, #-4]
   14a5c:	b	153a4 <__assert_fail@plt+0x3ec8>
   14a60:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14a64:	cmp	r0, #2
   14a68:	bne	14b24 <__assert_fail@plt+0x3648>
   14a6c:	ldr	r0, [fp, #-12]
   14a70:	ldrh	r0, [r0, #56]	; 0x38
   14a74:	cmp	r0, #12
   14a78:	beq	14a8c <__assert_fail@plt+0x35b0>
   14a7c:	ldr	r0, [fp, #-12]
   14a80:	ldrh	r0, [r0, #56]	; 0x38
   14a84:	cmp	r0, #13
   14a88:	bne	14b24 <__assert_fail@plt+0x3648>
   14a8c:	ldr	r0, [fp, #-8]
   14a90:	ldr	r1, [fp, #-12]
   14a94:	movw	r2, #1
   14a98:	and	r2, r2, #1
   14a9c:	bl	14140 <__assert_fail@plt+0x2c64>
   14aa0:	ldr	r1, [fp, #-12]
   14aa4:	strh	r0, [r1, #56]	; 0x38
   14aa8:	ldr	r0, [fp, #-12]
   14aac:	ldrh	r0, [r0, #56]	; 0x38
   14ab0:	cmp	r0, #1
   14ab4:	bne	14b20 <__assert_fail@plt+0x3644>
   14ab8:	ldr	r0, [fp, #-8]
   14abc:	ldr	r0, [r0, #48]	; 0x30
   14ac0:	and	r0, r0, #4
   14ac4:	cmp	r0, #0
   14ac8:	bne	14b20 <__assert_fail@plt+0x3644>
   14acc:	ldr	r0, [fp, #-8]
   14ad0:	movw	r1, #22106	; 0x565a
   14ad4:	movt	r1, #2
   14ad8:	bl	145fc <__assert_fail@plt+0x3120>
   14adc:	ldr	r1, [fp, #-12]
   14ae0:	str	r0, [r1, #36]	; 0x24
   14ae4:	cmp	r0, #0
   14ae8:	bge	14b0c <__assert_fail@plt+0x3630>
   14aec:	bl	11398 <__errno_location@plt>
   14af0:	ldr	r0, [r0]
   14af4:	ldr	lr, [fp, #-12]
   14af8:	str	r0, [lr, #32]
   14afc:	ldr	r0, [fp, #-12]
   14b00:	movw	lr, #7
   14b04:	strh	lr, [r0, #56]	; 0x38
   14b08:	b	14b1c <__assert_fail@plt+0x3640>
   14b0c:	ldr	r0, [fp, #-12]
   14b10:	ldrh	r1, [r0, #58]	; 0x3a
   14b14:	orr	r1, r1, #2
   14b18:	strh	r1, [r0, #58]	; 0x3a
   14b1c:	b	14b20 <__assert_fail@plt+0x3644>
   14b20:	b	1503c <__assert_fail@plt+0x3b60>
   14b24:	ldr	r0, [fp, #-12]
   14b28:	ldrh	r0, [r0, #56]	; 0x38
   14b2c:	cmp	r0, #1
   14b30:	bne	14d90 <__assert_fail@plt+0x38b4>
   14b34:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14b38:	cmp	r0, #4
   14b3c:	beq	14b84 <__assert_fail@plt+0x36a8>
   14b40:	ldr	r0, [fp, #-8]
   14b44:	ldr	r0, [r0, #48]	; 0x30
   14b48:	and	r0, r0, #64	; 0x40
   14b4c:	cmp	r0, #0
   14b50:	beq	14bf8 <__assert_fail@plt+0x371c>
   14b54:	ldr	r0, [fp, #-12]
   14b58:	ldr	r1, [r0, #64]	; 0x40
   14b5c:	ldr	r0, [r0, #68]	; 0x44
   14b60:	ldr	r2, [fp, #-8]
   14b64:	ldr	r3, [r2, #16]
   14b68:	ldr	r2, [r2, #20]
   14b6c:	eor	r0, r0, r2
   14b70:	eor	r1, r1, r3
   14b74:	orr	r0, r1, r0
   14b78:	cmp	r0, #0
   14b7c:	beq	14bf8 <__assert_fail@plt+0x371c>
   14b80:	b	14b84 <__assert_fail@plt+0x36a8>
   14b84:	ldr	r0, [fp, #-12]
   14b88:	ldrh	r0, [r0, #58]	; 0x3a
   14b8c:	and	r0, r0, #2
   14b90:	cmp	r0, #0
   14b94:	beq	14ba8 <__assert_fail@plt+0x36cc>
   14b98:	ldr	r0, [fp, #-12]
   14b9c:	ldr	r0, [r0, #36]	; 0x24
   14ba0:	bl	114a0 <close@plt>
   14ba4:	str	r0, [sp, #20]
   14ba8:	ldr	r0, [fp, #-8]
   14bac:	ldr	r0, [r0, #4]
   14bb0:	movw	r1, #0
   14bb4:	cmp	r0, r1
   14bb8:	beq	14bd4 <__assert_fail@plt+0x36f8>
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	ldr	r0, [r0, #4]
   14bc4:	bl	14698 <__assert_fail@plt+0x31bc>
   14bc8:	ldr	r0, [fp, #-8]
   14bcc:	movw	lr, #0
   14bd0:	str	lr, [r0, #4]
   14bd4:	ldr	r0, [fp, #-12]
   14bd8:	movw	r1, #6
   14bdc:	strh	r1, [r0, #56]	; 0x38
   14be0:	ldr	r0, [fp, #-8]
   14be4:	ldr	r1, [fp, #-12]
   14be8:	bl	153b0 <__assert_fail@plt+0x3ed4>
   14bec:	ldr	r0, [fp, #-12]
   14bf0:	str	r0, [fp, #-4]
   14bf4:	b	153a4 <__assert_fail@plt+0x3ec8>
   14bf8:	ldr	r0, [fp, #-8]
   14bfc:	ldr	r0, [r0, #4]
   14c00:	movw	r1, #0
   14c04:	cmp	r0, r1
   14c08:	beq	14c4c <__assert_fail@plt+0x3770>
   14c0c:	ldr	r0, [fp, #-8]
   14c10:	ldr	r0, [r0, #48]	; 0x30
   14c14:	and	r0, r0, #4096	; 0x1000
   14c18:	cmp	r0, #0
   14c1c:	beq	14c4c <__assert_fail@plt+0x3770>
   14c20:	ldr	r0, [fp, #-8]
   14c24:	ldr	r1, [r0, #48]	; 0x30
   14c28:	mvn	r2, #4096	; 0x1000
   14c2c:	and	r1, r1, r2
   14c30:	str	r1, [r0, #48]	; 0x30
   14c34:	ldr	r0, [fp, #-8]
   14c38:	ldr	r0, [r0, #4]
   14c3c:	bl	14698 <__assert_fail@plt+0x31bc>
   14c40:	ldr	r0, [fp, #-8]
   14c44:	movw	r1, #0
   14c48:	str	r1, [r0, #4]
   14c4c:	ldr	r0, [fp, #-8]
   14c50:	ldr	r0, [r0, #4]
   14c54:	movw	r1, #0
   14c58:	cmp	r0, r1
   14c5c:	beq	14ce8 <__assert_fail@plt+0x380c>
   14c60:	ldr	r0, [fp, #-8]
   14c64:	ldr	r1, [fp, #-12]
   14c68:	ldr	r2, [fp, #-12]
   14c6c:	ldr	r3, [r2, #24]
   14c70:	mvn	r2, #0
   14c74:	bl	15550 <__assert_fail@plt+0x4074>
   14c78:	cmp	r0, #0
   14c7c:	beq	14ce4 <__assert_fail@plt+0x3808>
   14c80:	bl	11398 <__errno_location@plt>
   14c84:	ldr	r0, [r0]
   14c88:	ldr	lr, [fp, #-12]
   14c8c:	str	r0, [lr, #32]
   14c90:	ldr	r0, [fp, #-12]
   14c94:	ldrh	lr, [r0, #58]	; 0x3a
   14c98:	orr	lr, lr, #1
   14c9c:	strh	lr, [r0, #58]	; 0x3a
   14ca0:	ldr	r0, [fp, #-8]
   14ca4:	ldr	r0, [r0, #4]
   14ca8:	str	r0, [fp, #-12]
   14cac:	ldr	r0, [fp, #-12]
   14cb0:	movw	r1, #0
   14cb4:	cmp	r0, r1
   14cb8:	beq	14ce0 <__assert_fail@plt+0x3804>
   14cbc:	ldr	r0, [fp, #-12]
   14cc0:	ldr	r0, [r0, #4]
   14cc4:	ldr	r0, [r0, #24]
   14cc8:	ldr	r1, [fp, #-12]
   14ccc:	str	r0, [r1, #24]
   14cd0:	ldr	r0, [fp, #-12]
   14cd4:	ldr	r0, [r0, #8]
   14cd8:	str	r0, [fp, #-12]
   14cdc:	b	14cac <__assert_fail@plt+0x37d0>
   14ce0:	b	14ce4 <__assert_fail@plt+0x3808>
   14ce4:	b	14d74 <__assert_fail@plt+0x3898>
   14ce8:	ldr	r0, [fp, #-8]
   14cec:	movw	r1, #3
   14cf0:	bl	15814 <__assert_fail@plt+0x4338>
   14cf4:	ldr	r1, [fp, #-8]
   14cf8:	str	r0, [r1, #4]
   14cfc:	movw	r1, #0
   14d00:	cmp	r0, r1
   14d04:	bne	14d70 <__assert_fail@plt+0x3894>
   14d08:	ldr	r0, [fp, #-8]
   14d0c:	ldr	r0, [r0, #48]	; 0x30
   14d10:	and	r0, r0, #8192	; 0x2000
   14d14:	cmp	r0, #0
   14d18:	beq	14d28 <__assert_fail@plt+0x384c>
   14d1c:	movw	r0, #0
   14d20:	str	r0, [fp, #-4]
   14d24:	b	153a4 <__assert_fail@plt+0x3ec8>
   14d28:	ldr	r0, [fp, #-12]
   14d2c:	ldr	r0, [r0, #32]
   14d30:	cmp	r0, #0
   14d34:	beq	14d54 <__assert_fail@plt+0x3878>
   14d38:	ldr	r0, [fp, #-12]
   14d3c:	ldrh	r0, [r0, #56]	; 0x38
   14d40:	cmp	r0, #4
   14d44:	beq	14d54 <__assert_fail@plt+0x3878>
   14d48:	ldr	r0, [fp, #-12]
   14d4c:	movw	r1, #7
   14d50:	strh	r1, [r0, #56]	; 0x38
   14d54:	b	14d58 <__assert_fail@plt+0x387c>
   14d58:	ldr	r0, [fp, #-8]
   14d5c:	ldr	r1, [fp, #-12]
   14d60:	bl	153b0 <__assert_fail@plt+0x3ed4>
   14d64:	ldr	r0, [fp, #-12]
   14d68:	str	r0, [fp, #-4]
   14d6c:	b	153a4 <__assert_fail@plt+0x3ec8>
   14d70:	b	14d74 <__assert_fail@plt+0x3898>
   14d74:	ldr	r0, [fp, #-8]
   14d78:	ldr	r0, [r0, #4]
   14d7c:	str	r0, [fp, #-12]
   14d80:	ldr	r0, [fp, #-8]
   14d84:	movw	r1, #0
   14d88:	str	r1, [r0, #4]
   14d8c:	b	14f9c <__assert_fail@plt+0x3ac0>
   14d90:	b	14d94 <__assert_fail@plt+0x38b8>
   14d94:	ldr	r0, [fp, #-12]
   14d98:	str	r0, [fp, #-16]
   14d9c:	ldr	r0, [fp, #-12]
   14da0:	ldr	r0, [r0, #8]
   14da4:	movw	r1, #0
   14da8:	cmp	r0, r1
   14dac:	bne	14e48 <__assert_fail@plt+0x396c>
   14db0:	ldr	r0, [fp, #-12]
   14db4:	ldr	r0, [r0, #4]
   14db8:	ldr	r0, [r0, #12]
   14dbc:	movw	r1, #0
   14dc0:	cmp	r0, r1
   14dc4:	beq	14e48 <__assert_fail@plt+0x396c>
   14dc8:	ldr	r0, [fp, #-16]
   14dcc:	ldr	r0, [r0, #4]
   14dd0:	str	r0, [fp, #-12]
   14dd4:	ldr	r0, [fp, #-12]
   14dd8:	ldr	r1, [fp, #-8]
   14ddc:	str	r0, [r1]
   14de0:	ldr	r0, [fp, #-8]
   14de4:	ldr	r0, [r0, #24]
   14de8:	ldr	r1, [fp, #-12]
   14dec:	ldr	r1, [r1, #40]	; 0x28
   14df0:	add	r0, r0, r1
   14df4:	movw	r1, #0
   14df8:	strb	r1, [r0]
   14dfc:	ldr	r0, [fp, #-8]
   14e00:	movw	r1, #3
   14e04:	bl	15814 <__assert_fail@plt+0x4338>
   14e08:	str	r0, [fp, #-12]
   14e0c:	movw	r1, #0
   14e10:	cmp	r0, r1
   14e14:	bne	14e3c <__assert_fail@plt+0x3960>
   14e18:	ldr	r0, [fp, #-8]
   14e1c:	ldr	r0, [r0, #48]	; 0x30
   14e20:	and	r0, r0, #8192	; 0x2000
   14e24:	cmp	r0, #0
   14e28:	beq	14e38 <__assert_fail@plt+0x395c>
   14e2c:	movw	r0, #0
   14e30:	str	r0, [fp, #-4]
   14e34:	b	153a4 <__assert_fail@plt+0x3ec8>
   14e38:	b	15144 <__assert_fail@plt+0x3c68>
   14e3c:	ldr	r0, [fp, #-16]
   14e40:	bl	13878 <__assert_fail@plt+0x239c>
   14e44:	b	14f9c <__assert_fail@plt+0x3ac0>
   14e48:	ldr	r0, [fp, #-12]
   14e4c:	ldr	r0, [r0, #8]
   14e50:	str	r0, [fp, #-12]
   14e54:	movw	r1, #0
   14e58:	cmp	r0, r1
   14e5c:	beq	15140 <__assert_fail@plt+0x3c64>
   14e60:	ldr	r0, [fp, #-12]
   14e64:	ldr	r1, [fp, #-8]
   14e68:	str	r0, [r1]
   14e6c:	ldr	r0, [fp, #-16]
   14e70:	bl	13878 <__assert_fail@plt+0x239c>
   14e74:	ldr	r0, [fp, #-12]
   14e78:	ldr	r0, [r0, #48]	; 0x30
   14e7c:	cmp	r0, #0
   14e80:	bne	14ed4 <__assert_fail@plt+0x39f8>
   14e84:	ldr	r0, [fp, #-8]
   14e88:	bl	164f0 <__assert_fail@plt+0x5014>
   14e8c:	cmp	r0, #0
   14e90:	beq	14eb0 <__assert_fail@plt+0x39d4>
   14e94:	ldr	r0, [fp, #-8]
   14e98:	ldr	r1, [r0, #48]	; 0x30
   14e9c:	orr	r1, r1, #8192	; 0x2000
   14ea0:	str	r1, [r0, #48]	; 0x30
   14ea4:	movw	r0, #0
   14ea8:	str	r0, [fp, #-4]
   14eac:	b	153a4 <__assert_fail@plt+0x3ec8>
   14eb0:	ldr	r0, [fp, #-8]
   14eb4:	bl	14964 <__assert_fail@plt+0x3488>
   14eb8:	ldr	r0, [fp, #-8]
   14ebc:	ldr	r1, [fp, #-12]
   14ec0:	bl	16600 <__assert_fail@plt+0x5124>
   14ec4:	ldr	r0, [fp, #-8]
   14ec8:	bl	14520 <__assert_fail@plt+0x3044>
   14ecc:	str	r0, [sp, #16]
   14ed0:	b	1503c <__assert_fail@plt+0x3b60>
   14ed4:	ldr	r0, [fp, #-12]
   14ed8:	ldrh	r0, [r0, #60]	; 0x3c
   14edc:	cmp	r0, #4
   14ee0:	bne	14ee8 <__assert_fail@plt+0x3a0c>
   14ee4:	b	14d94 <__assert_fail@plt+0x38b8>
   14ee8:	ldr	r0, [fp, #-12]
   14eec:	ldrh	r0, [r0, #60]	; 0x3c
   14ef0:	cmp	r0, #2
   14ef4:	bne	14f98 <__assert_fail@plt+0x3abc>
   14ef8:	ldr	r0, [fp, #-8]
   14efc:	ldr	r1, [fp, #-12]
   14f00:	movw	r2, #1
   14f04:	and	r2, r2, #1
   14f08:	bl	14140 <__assert_fail@plt+0x2c64>
   14f0c:	ldr	r1, [fp, #-12]
   14f10:	strh	r0, [r1, #56]	; 0x38
   14f14:	ldr	r0, [fp, #-12]
   14f18:	ldrh	r0, [r0, #56]	; 0x38
   14f1c:	cmp	r0, #1
   14f20:	bne	14f8c <__assert_fail@plt+0x3ab0>
   14f24:	ldr	r0, [fp, #-8]
   14f28:	ldr	r0, [r0, #48]	; 0x30
   14f2c:	and	r0, r0, #4
   14f30:	cmp	r0, #0
   14f34:	bne	14f8c <__assert_fail@plt+0x3ab0>
   14f38:	ldr	r0, [fp, #-8]
   14f3c:	movw	r1, #22106	; 0x565a
   14f40:	movt	r1, #2
   14f44:	bl	145fc <__assert_fail@plt+0x3120>
   14f48:	ldr	r1, [fp, #-12]
   14f4c:	str	r0, [r1, #36]	; 0x24
   14f50:	cmp	r0, #0
   14f54:	bge	14f78 <__assert_fail@plt+0x3a9c>
   14f58:	bl	11398 <__errno_location@plt>
   14f5c:	ldr	r0, [r0]
   14f60:	ldr	lr, [fp, #-12]
   14f64:	str	r0, [lr, #32]
   14f68:	ldr	r0, [fp, #-12]
   14f6c:	movw	lr, #7
   14f70:	strh	lr, [r0, #56]	; 0x38
   14f74:	b	14f88 <__assert_fail@plt+0x3aac>
   14f78:	ldr	r0, [fp, #-12]
   14f7c:	ldrh	r1, [r0, #58]	; 0x3a
   14f80:	orr	r1, r1, #2
   14f84:	strh	r1, [r0, #58]	; 0x3a
   14f88:	b	14f8c <__assert_fail@plt+0x3ab0>
   14f8c:	ldr	r0, [fp, #-12]
   14f90:	movw	r1, #3
   14f94:	strh	r1, [r0, #60]	; 0x3c
   14f98:	b	14f9c <__assert_fail@plt+0x3ac0>
   14f9c:	ldr	r0, [fp, #-8]
   14fa0:	ldr	r0, [r0, #24]
   14fa4:	ldr	r1, [fp, #-12]
   14fa8:	ldr	r1, [r1, #4]
   14fac:	ldr	r1, [r1, #28]
   14fb0:	ldr	r2, [fp, #-12]
   14fb4:	ldr	r2, [r2, #4]
   14fb8:	ldr	r2, [r2, #40]	; 0x28
   14fbc:	sub	r2, r2, #1
   14fc0:	add	r1, r1, r2
   14fc4:	ldrb	r1, [r1]
   14fc8:	cmp	r1, #47	; 0x2f
   14fcc:	str	r0, [sp, #12]
   14fd0:	bne	14fec <__assert_fail@plt+0x3b10>
   14fd4:	ldr	r0, [fp, #-12]
   14fd8:	ldr	r0, [r0, #4]
   14fdc:	ldr	r0, [r0, #40]	; 0x28
   14fe0:	sub	r0, r0, #1
   14fe4:	str	r0, [sp, #8]
   14fe8:	b	14ffc <__assert_fail@plt+0x3b20>
   14fec:	ldr	r0, [fp, #-12]
   14ff0:	ldr	r0, [r0, #4]
   14ff4:	ldr	r0, [r0, #40]	; 0x28
   14ff8:	str	r0, [sp, #8]
   14ffc:	ldr	r0, [sp, #8]
   15000:	ldr	r1, [sp, #12]
   15004:	add	r0, r1, r0
   15008:	str	r0, [sp, #24]
   1500c:	ldr	r0, [sp, #24]
   15010:	add	r2, r0, #1
   15014:	str	r2, [sp, #24]
   15018:	movw	r2, #47	; 0x2f
   1501c:	strb	r2, [r0]
   15020:	ldr	r0, [sp, #24]
   15024:	ldr	r2, [fp, #-12]
   15028:	add	r1, r2, #168	; 0xa8
   1502c:	ldr	r2, [fp, #-12]
   15030:	ldr	r2, [r2, #52]	; 0x34
   15034:	add	r2, r2, #1
   15038:	bl	11218 <memmove@plt>
   1503c:	ldr	r0, [fp, #-12]
   15040:	ldr	r1, [fp, #-8]
   15044:	str	r0, [r1]
   15048:	ldr	r0, [fp, #-12]
   1504c:	ldrh	r0, [r0, #56]	; 0x38
   15050:	cmp	r0, #11
   15054:	bne	150cc <__assert_fail@plt+0x3bf0>
   15058:	ldr	r0, [fp, #-12]
   1505c:	ldr	r1, [r0, #112]	; 0x70
   15060:	ldr	r0, [r0, #116]	; 0x74
   15064:	eor	r1, r1, #2
   15068:	orr	r0, r1, r0
   1506c:	cmp	r0, #0
   15070:	bne	15098 <__assert_fail@plt+0x3bbc>
   15074:	b	15078 <__assert_fail@plt+0x3b9c>
   15078:	ldr	r0, [fp, #-8]
   1507c:	ldr	r1, [fp, #-12]
   15080:	movw	r2, #0
   15084:	and	r2, r2, #1
   15088:	bl	14140 <__assert_fail@plt+0x2c64>
   1508c:	ldr	r1, [fp, #-12]
   15090:	strh	r0, [r1, #56]	; 0x38
   15094:	b	150c8 <__assert_fail@plt+0x3bec>
   15098:	b	1509c <__assert_fail@plt+0x3bc0>
   1509c:	ldr	r0, [fp, #-12]
   150a0:	ldr	r1, [r0, #112]	; 0x70
   150a4:	ldr	r0, [r0, #116]	; 0x74
   150a8:	eor	r1, r1, #1
   150ac:	orr	r0, r1, r0
   150b0:	cmp	r0, #0
   150b4:	beq	150c0 <__assert_fail@plt+0x3be4>
   150b8:	b	150bc <__assert_fail@plt+0x3be0>
   150bc:	bl	11494 <abort@plt>
   150c0:	b	150c4 <__assert_fail@plt+0x3be8>
   150c4:	b	150c8 <__assert_fail@plt+0x3bec>
   150c8:	b	150cc <__assert_fail@plt+0x3bf0>
   150cc:	ldr	r0, [fp, #-12]
   150d0:	ldrh	r0, [r0, #56]	; 0x38
   150d4:	cmp	r0, #1
   150d8:	bne	15134 <__assert_fail@plt+0x3c58>
   150dc:	ldr	r0, [fp, #-12]
   150e0:	ldr	r0, [r0, #48]	; 0x30
   150e4:	cmp	r0, #0
   150e8:	bne	15104 <__assert_fail@plt+0x3c28>
   150ec:	ldr	r0, [fp, #-12]
   150f0:	ldr	r1, [r0, #64]	; 0x40
   150f4:	ldr	r0, [r0, #68]	; 0x44
   150f8:	ldr	r2, [fp, #-8]
   150fc:	str	r0, [r2, #20]
   15100:	str	r1, [r2, #16]
   15104:	ldr	r0, [fp, #-8]
   15108:	ldr	r1, [fp, #-12]
   1510c:	bl	166e0 <__assert_fail@plt+0x5204>
   15110:	tst	r0, #1
   15114:	bne	15130 <__assert_fail@plt+0x3c54>
   15118:	bl	11398 <__errno_location@plt>
   1511c:	movw	lr, #12
   15120:	str	lr, [r0]
   15124:	movw	r0, #0
   15128:	str	r0, [fp, #-4]
   1512c:	b	153a4 <__assert_fail@plt+0x3ec8>
   15130:	b	15134 <__assert_fail@plt+0x3c58>
   15134:	ldr	r0, [fp, #-12]
   15138:	str	r0, [fp, #-4]
   1513c:	b	153a4 <__assert_fail@plt+0x3ec8>
   15140:	b	15144 <__assert_fail@plt+0x3c68>
   15144:	ldr	r0, [fp, #-16]
   15148:	ldr	r0, [r0, #4]
   1514c:	str	r0, [fp, #-12]
   15150:	ldr	r0, [fp, #-12]
   15154:	ldr	r1, [fp, #-8]
   15158:	str	r0, [r1]
   1515c:	ldr	r0, [fp, #-16]
   15160:	bl	13878 <__assert_fail@plt+0x239c>
   15164:	ldr	r0, [fp, #-12]
   15168:	ldr	r0, [r0, #48]	; 0x30
   1516c:	cmn	r0, #1
   15170:	bne	15198 <__assert_fail@plt+0x3cbc>
   15174:	ldr	r0, [fp, #-12]
   15178:	bl	13878 <__assert_fail@plt+0x239c>
   1517c:	bl	11398 <__errno_location@plt>
   15180:	movw	lr, #0
   15184:	str	lr, [r0]
   15188:	ldr	r0, [fp, #-8]
   1518c:	str	lr, [r0]
   15190:	str	lr, [fp, #-4]
   15194:	b	153a4 <__assert_fail@plt+0x3ec8>
   15198:	b	1519c <__assert_fail@plt+0x3cc0>
   1519c:	ldr	r0, [fp, #-12]
   151a0:	ldrh	r0, [r0, #56]	; 0x38
   151a4:	cmp	r0, #11
   151a8:	bne	151b0 <__assert_fail@plt+0x3cd4>
   151ac:	bl	11494 <abort@plt>
   151b0:	b	151b4 <__assert_fail@plt+0x3cd8>
   151b4:	ldr	r0, [fp, #-8]
   151b8:	ldr	r0, [r0, #24]
   151bc:	ldr	r1, [fp, #-12]
   151c0:	ldr	r1, [r1, #40]	; 0x28
   151c4:	add	r0, r0, r1
   151c8:	movw	r1, #0
   151cc:	strb	r1, [r0]
   151d0:	ldr	r0, [fp, #-12]
   151d4:	ldr	r0, [r0, #48]	; 0x30
   151d8:	cmp	r0, #0
   151dc:	bne	15214 <__assert_fail@plt+0x3d38>
   151e0:	ldr	r0, [fp, #-8]
   151e4:	bl	164f0 <__assert_fail@plt+0x5014>
   151e8:	cmp	r0, #0
   151ec:	beq	15210 <__assert_fail@plt+0x3d34>
   151f0:	bl	11398 <__errno_location@plt>
   151f4:	ldr	r0, [r0]
   151f8:	ldr	lr, [fp, #-12]
   151fc:	str	r0, [lr, #32]
   15200:	ldr	r0, [fp, #-8]
   15204:	ldr	lr, [r0, #48]	; 0x30
   15208:	orr	lr, lr, #8192	; 0x2000
   1520c:	str	lr, [r0, #48]	; 0x30
   15210:	b	15314 <__assert_fail@plt+0x3e38>
   15214:	ldr	r0, [fp, #-12]
   15218:	ldrh	r0, [r0, #58]	; 0x3a
   1521c:	and	r0, r0, #2
   15220:	cmp	r0, #0
   15224:	beq	152b4 <__assert_fail@plt+0x3dd8>
   15228:	ldr	r0, [fp, #-8]
   1522c:	ldr	r0, [r0, #48]	; 0x30
   15230:	and	r0, r0, #4
   15234:	cmp	r0, #0
   15238:	bne	152a0 <__assert_fail@plt+0x3dc4>
   1523c:	ldr	r0, [fp, #-8]
   15240:	ldr	r0, [r0, #48]	; 0x30
   15244:	and	r0, r0, #512	; 0x200
   15248:	cmp	r0, #0
   1524c:	beq	1526c <__assert_fail@plt+0x3d90>
   15250:	ldr	r0, [fp, #-8]
   15254:	ldr	r1, [fp, #-12]
   15258:	ldr	r1, [r1, #36]	; 0x24
   1525c:	movw	r2, #1
   15260:	and	r2, r2, #1
   15264:	bl	16840 <__assert_fail@plt+0x5364>
   15268:	b	152a0 <__assert_fail@plt+0x3dc4>
   1526c:	ldr	r0, [fp, #-12]
   15270:	ldr	r0, [r0, #36]	; 0x24
   15274:	bl	11440 <fchdir@plt>
   15278:	cmp	r0, #0
   1527c:	beq	152a0 <__assert_fail@plt+0x3dc4>
   15280:	bl	11398 <__errno_location@plt>
   15284:	ldr	r0, [r0]
   15288:	ldr	lr, [fp, #-12]
   1528c:	str	r0, [lr, #32]
   15290:	ldr	r0, [fp, #-8]
   15294:	ldr	lr, [r0, #48]	; 0x30
   15298:	orr	lr, lr, #8192	; 0x2000
   1529c:	str	lr, [r0, #48]	; 0x30
   152a0:	ldr	r0, [fp, #-12]
   152a4:	ldr	r0, [r0, #36]	; 0x24
   152a8:	bl	114a0 <close@plt>
   152ac:	str	r0, [sp, #4]
   152b0:	b	15310 <__assert_fail@plt+0x3e34>
   152b4:	ldr	r0, [fp, #-12]
   152b8:	ldrh	r0, [r0, #58]	; 0x3a
   152bc:	and	r0, r0, #1
   152c0:	cmp	r0, #0
   152c4:	bne	1530c <__assert_fail@plt+0x3e30>
   152c8:	ldr	r0, [fp, #-8]
   152cc:	ldr	r1, [fp, #-12]
   152d0:	ldr	r1, [r1, #4]
   152d4:	mvn	r2, #0
   152d8:	movw	r3, #22105	; 0x5659
   152dc:	movt	r3, #2
   152e0:	bl	15550 <__assert_fail@plt+0x4074>
   152e4:	cmp	r0, #0
   152e8:	beq	1530c <__assert_fail@plt+0x3e30>
   152ec:	bl	11398 <__errno_location@plt>
   152f0:	ldr	r0, [r0]
   152f4:	ldr	lr, [fp, #-12]
   152f8:	str	r0, [lr, #32]
   152fc:	ldr	r0, [fp, #-8]
   15300:	ldr	lr, [r0, #48]	; 0x30
   15304:	orr	lr, lr, #8192	; 0x2000
   15308:	str	lr, [r0, #48]	; 0x30
   1530c:	b	15310 <__assert_fail@plt+0x3e34>
   15310:	b	15314 <__assert_fail@plt+0x3e38>
   15314:	ldr	r0, [fp, #-12]
   15318:	ldrh	r0, [r0, #56]	; 0x38
   1531c:	cmp	r0, #2
   15320:	beq	15374 <__assert_fail@plt+0x3e98>
   15324:	ldr	r0, [fp, #-12]
   15328:	ldr	r0, [r0, #32]
   1532c:	cmp	r0, #0
   15330:	movw	r0, #0
   15334:	movne	r0, #1
   15338:	tst	r0, #1
   1533c:	movw	r0, #7
   15340:	moveq	r0, #6
   15344:	ldr	r1, [fp, #-12]
   15348:	strh	r0, [r1, #56]	; 0x38
   1534c:	ldr	r0, [fp, #-12]
   15350:	ldr	r0, [r0, #32]
   15354:	cmp	r0, #0
   15358:	bne	15370 <__assert_fail@plt+0x3e94>
   1535c:	b	15360 <__assert_fail@plt+0x3e84>
   15360:	ldr	r0, [fp, #-8]
   15364:	ldr	r1, [fp, #-12]
   15368:	bl	153b0 <__assert_fail@plt+0x3ed4>
   1536c:	b	15370 <__assert_fail@plt+0x3e94>
   15370:	b	15374 <__assert_fail@plt+0x3e98>
   15374:	ldr	r0, [fp, #-8]
   15378:	ldr	r0, [r0, #48]	; 0x30
   1537c:	and	r0, r0, #8192	; 0x2000
   15380:	cmp	r0, #0
   15384:	beq	15394 <__assert_fail@plt+0x3eb8>
   15388:	movw	r0, #0
   1538c:	str	r0, [sp]
   15390:	b	1539c <__assert_fail@plt+0x3ec0>
   15394:	ldr	r0, [fp, #-12]
   15398:	str	r0, [sp]
   1539c:	ldr	r0, [sp]
   153a0:	str	r0, [fp, #-4]
   153a4:	ldr	r0, [fp, #-4]
   153a8:	mov	sp, fp
   153ac:	pop	{fp, pc}
   153b0:	push	{fp, lr}
   153b4:	mov	fp, sp
   153b8:	sub	sp, sp, #48	; 0x30
   153bc:	str	r0, [fp, #-4]
   153c0:	str	r1, [fp, #-8]
   153c4:	ldr	r0, [fp, #-8]
   153c8:	add	r0, r0, #64	; 0x40
   153cc:	str	r0, [fp, #-12]
   153d0:	ldr	r0, [fp, #-4]
   153d4:	ldr	r0, [r0, #48]	; 0x30
   153d8:	movw	r1, #258	; 0x102
   153dc:	and	r0, r0, r1
   153e0:	cmp	r0, #0
   153e4:	beq	15444 <__assert_fail@plt+0x3f68>
   153e8:	ldr	r0, [fp, #-12]
   153ec:	ldr	r1, [r0]
   153f0:	ldr	r0, [r0, #4]
   153f4:	str	r0, [sp, #12]
   153f8:	str	r1, [sp, #8]
   153fc:	ldr	r0, [fp, #-12]
   15400:	ldr	r1, [r0, #96]	; 0x60
   15404:	ldr	r0, [r0, #100]	; 0x64
   15408:	str	r0, [sp, #20]
   1540c:	str	r1, [sp, #16]
   15410:	ldr	r0, [fp, #-4]
   15414:	ldr	r0, [r0, #56]	; 0x38
   15418:	add	r1, sp, #8
   1541c:	bl	18c14 <__assert_fail@plt+0x7738>
   15420:	str	r0, [sp, #4]
   15424:	ldr	r0, [sp, #4]
   15428:	movw	r1, #0
   1542c:	cmp	r0, r1
   15430:	bne	15438 <__assert_fail@plt+0x3f5c>
   15434:	bl	11494 <abort@plt>
   15438:	ldr	r0, [sp, #4]
   1543c:	bl	13878 <__assert_fail@plt+0x239c>
   15440:	b	15548 <__assert_fail@plt+0x406c>
   15444:	ldr	r0, [fp, #-8]
   15448:	ldr	r0, [r0, #4]
   1544c:	str	r0, [sp]
   15450:	ldr	r0, [sp]
   15454:	movw	r1, #0
   15458:	cmp	r0, r1
   1545c:	beq	15544 <__assert_fail@plt+0x4068>
   15460:	ldr	r0, [sp]
   15464:	ldr	r0, [r0, #48]	; 0x30
   15468:	movw	r1, #0
   1546c:	cmp	r1, r0
   15470:	bgt	15544 <__assert_fail@plt+0x4068>
   15474:	b	15478 <__assert_fail@plt+0x3f9c>
   15478:	ldr	r0, [fp, #-4]
   1547c:	ldr	r0, [r0, #56]	; 0x38
   15480:	ldr	r1, [r0, #16]
   15484:	ldr	r0, [r0, #20]
   15488:	orr	r0, r1, r0
   1548c:	cmp	r0, #0
   15490:	bne	1549c <__assert_fail@plt+0x3fc0>
   15494:	b	15498 <__assert_fail@plt+0x3fbc>
   15498:	bl	11494 <abort@plt>
   1549c:	ldr	r0, [fp, #-4]
   154a0:	ldr	r0, [r0, #56]	; 0x38
   154a4:	ldr	r1, [r0]
   154a8:	ldr	r0, [r0, #4]
   154ac:	ldr	r2, [fp, #-12]
   154b0:	ldr	r3, [r2, #96]	; 0x60
   154b4:	ldr	r2, [r2, #100]	; 0x64
   154b8:	eor	r0, r0, r2
   154bc:	eor	r1, r1, r3
   154c0:	orr	r0, r1, r0
   154c4:	cmp	r0, #0
   154c8:	bne	1553c <__assert_fail@plt+0x4060>
   154cc:	b	154d0 <__assert_fail@plt+0x3ff4>
   154d0:	ldr	r0, [fp, #-4]
   154d4:	ldr	r0, [r0, #56]	; 0x38
   154d8:	ldr	r1, [r0, #8]
   154dc:	ldr	r0, [r0, #12]
   154e0:	ldr	r2, [fp, #-12]
   154e4:	ldr	r3, [r2]
   154e8:	ldr	r2, [r2, #4]
   154ec:	eor	r0, r0, r2
   154f0:	eor	r1, r1, r3
   154f4:	orr	r0, r1, r0
   154f8:	cmp	r0, #0
   154fc:	bne	1553c <__assert_fail@plt+0x4060>
   15500:	b	15504 <__assert_fail@plt+0x4028>
   15504:	ldr	r0, [sp]
   15508:	ldr	r1, [r0, #64]	; 0x40
   1550c:	ldr	r0, [r0, #68]	; 0x44
   15510:	ldr	r2, [fp, #-4]
   15514:	ldr	r2, [r2, #56]	; 0x38
   15518:	str	r0, [r2, #12]
   1551c:	str	r1, [r2, #8]
   15520:	ldr	r0, [sp]
   15524:	ldr	r1, [r0, #160]	; 0xa0
   15528:	ldr	r0, [r0, #164]	; 0xa4
   1552c:	ldr	r2, [fp, #-4]
   15530:	ldr	r2, [r2, #56]	; 0x38
   15534:	str	r0, [r2, #4]
   15538:	str	r1, [r2]
   1553c:	b	15540 <__assert_fail@plt+0x4064>
   15540:	b	15544 <__assert_fail@plt+0x4068>
   15544:	b	15548 <__assert_fail@plt+0x406c>
   15548:	mov	sp, fp
   1554c:	pop	{fp, pc}
   15550:	push	{fp, lr}
   15554:	mov	fp, sp
   15558:	sub	sp, sp, #168	; 0xa8
   1555c:	str	r0, [fp, #-8]
   15560:	str	r1, [fp, #-12]
   15564:	str	r2, [fp, #-16]
   15568:	str	r3, [fp, #-20]	; 0xffffffec
   1556c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15570:	movw	r1, #0
   15574:	cmp	r0, r1
   15578:	movw	r0, #0
   1557c:	str	r0, [sp, #16]
   15580:	beq	155a4 <__assert_fail@plt+0x40c8>
   15584:	ldr	r0, [fp, #-20]	; 0xffffffec
   15588:	movw	r1, #22105	; 0x5659
   1558c:	movt	r1, #2
   15590:	bl	111e8 <strcmp@plt>
   15594:	cmp	r0, #0
   15598:	movw	r0, #0
   1559c:	moveq	r0, #1
   155a0:	str	r0, [sp, #16]
   155a4:	ldr	r0, [sp, #16]
   155a8:	and	r0, r0, #1
   155ac:	strb	r0, [fp, #-25]	; 0xffffffe7
   155b0:	ldr	r0, [fp, #-8]
   155b4:	ldr	r0, [r0, #48]	; 0x30
   155b8:	and	r0, r0, #4
   155bc:	cmp	r0, #0
   155c0:	beq	15600 <__assert_fail@plt+0x4124>
   155c4:	ldr	r0, [fp, #-8]
   155c8:	ldr	r0, [r0, #48]	; 0x30
   155cc:	and	r0, r0, #512	; 0x200
   155d0:	cmp	r0, #0
   155d4:	beq	155f4 <__assert_fail@plt+0x4118>
   155d8:	ldr	r0, [fp, #-16]
   155dc:	movw	r1, #0
   155e0:	cmp	r1, r0
   155e4:	bgt	155f4 <__assert_fail@plt+0x4118>
   155e8:	ldr	r0, [fp, #-16]
   155ec:	bl	114a0 <close@plt>
   155f0:	str	r0, [sp, #12]
   155f4:	movw	r0, #0
   155f8:	str	r0, [fp, #-4]
   155fc:	b	15808 <__assert_fail@plt+0x432c>
   15600:	ldr	r0, [fp, #-16]
   15604:	cmp	r0, #0
   15608:	bge	15678 <__assert_fail@plt+0x419c>
   1560c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15610:	tst	r0, #1
   15614:	beq	15678 <__assert_fail@plt+0x419c>
   15618:	ldr	r0, [fp, #-8]
   1561c:	ldr	r0, [r0, #48]	; 0x30
   15620:	and	r0, r0, #512	; 0x200
   15624:	cmp	r0, #0
   15628:	beq	15678 <__assert_fail@plt+0x419c>
   1562c:	ldr	r0, [fp, #-8]
   15630:	add	r0, r0, #60	; 0x3c
   15634:	bl	19048 <__assert_fail@plt+0x7b6c>
   15638:	tst	r0, #1
   1563c:	bne	15674 <__assert_fail@plt+0x4198>
   15640:	ldr	r0, [fp, #-8]
   15644:	add	r0, r0, #60	; 0x3c
   15648:	bl	19118 <__assert_fail@plt+0x7c3c>
   1564c:	str	r0, [fp, #-36]	; 0xffffffdc
   15650:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15654:	movw	lr, #0
   15658:	cmp	lr, r0
   1565c:	bgt	15670 <__assert_fail@plt+0x4194>
   15660:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15664:	str	r0, [fp, #-16]
   15668:	movw	r0, #0
   1566c:	str	r0, [fp, #-20]	; 0xffffffec
   15670:	b	15674 <__assert_fail@plt+0x4198>
   15674:	b	15678 <__assert_fail@plt+0x419c>
   15678:	ldr	r0, [fp, #-16]
   1567c:	str	r0, [fp, #-32]	; 0xffffffe0
   15680:	ldr	r0, [fp, #-16]
   15684:	cmp	r0, #0
   15688:	bge	156b0 <__assert_fail@plt+0x41d4>
   1568c:	ldr	r0, [fp, #-8]
   15690:	ldr	r1, [fp, #-20]	; 0xffffffec
   15694:	bl	145fc <__assert_fail@plt+0x3120>
   15698:	str	r0, [fp, #-32]	; 0xffffffe0
   1569c:	cmp	r0, #0
   156a0:	bge	156b0 <__assert_fail@plt+0x41d4>
   156a4:	mvn	r0, #0
   156a8:	str	r0, [fp, #-4]
   156ac:	b	15808 <__assert_fail@plt+0x432c>
   156b0:	ldr	r0, [fp, #-8]
   156b4:	ldr	r0, [r0, #48]	; 0x30
   156b8:	and	r0, r0, #2
   156bc:	cmp	r0, #0
   156c0:	bne	156ec <__assert_fail@plt+0x4210>
   156c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   156c8:	movw	r1, #0
   156cc:	cmp	r0, r1
   156d0:	beq	15780 <__assert_fail@plt+0x42a4>
   156d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   156d8:	movw	r1, #22105	; 0x5659
   156dc:	movt	r1, #2
   156e0:	bl	111e8 <strcmp@plt>
   156e4:	cmp	r0, #0
   156e8:	bne	15780 <__assert_fail@plt+0x42a4>
   156ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156f0:	add	r1, sp, #24
   156f4:	bl	247dc <__assert_fail@plt+0x13300>
   156f8:	cmp	r0, #0
   156fc:	beq	1570c <__assert_fail@plt+0x4230>
   15700:	mvn	r0, #0
   15704:	str	r0, [fp, #-24]	; 0xffffffe8
   15708:	b	157c8 <__assert_fail@plt+0x42ec>
   1570c:	ldr	r0, [fp, #-12]
   15710:	ldr	r1, [r0, #64]	; 0x40
   15714:	ldr	r0, [r0, #68]	; 0x44
   15718:	ldr	r2, [sp, #24]
   1571c:	ldr	r3, [sp, #28]
   15720:	eor	r0, r0, r3
   15724:	eor	r1, r1, r2
   15728:	orr	r0, r1, r0
   1572c:	cmp	r0, #0
   15730:	bne	15764 <__assert_fail@plt+0x4288>
   15734:	b	15738 <__assert_fail@plt+0x425c>
   15738:	ldr	r0, [fp, #-12]
   1573c:	ldr	r1, [r0, #160]	; 0xa0
   15740:	ldr	r0, [r0, #164]	; 0xa4
   15744:	ldr	r2, [sp, #120]	; 0x78
   15748:	ldr	r3, [sp, #124]	; 0x7c
   1574c:	eor	r0, r0, r3
   15750:	eor	r1, r1, r2
   15754:	orr	r0, r1, r0
   15758:	cmp	r0, #0
   1575c:	beq	1577c <__assert_fail@plt+0x42a0>
   15760:	b	15764 <__assert_fail@plt+0x4288>
   15764:	bl	11398 <__errno_location@plt>
   15768:	movw	lr, #2
   1576c:	str	lr, [r0]
   15770:	mvn	r0, #0
   15774:	str	r0, [fp, #-24]	; 0xffffffe8
   15778:	b	157c8 <__assert_fail@plt+0x42ec>
   1577c:	b	15780 <__assert_fail@plt+0x42a4>
   15780:	ldr	r0, [fp, #-8]
   15784:	ldr	r0, [r0, #48]	; 0x30
   15788:	and	r0, r0, #512	; 0x200
   1578c:	cmp	r0, #0
   15790:	beq	157bc <__assert_fail@plt+0x42e0>
   15794:	ldr	r0, [fp, #-8]
   15798:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1579c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   157a0:	mvn	r3, #0
   157a4:	eor	r2, r2, r3
   157a8:	and	r2, r2, #1
   157ac:	bl	16840 <__assert_fail@plt+0x5364>
   157b0:	movw	r0, #0
   157b4:	str	r0, [fp, #-4]
   157b8:	b	15808 <__assert_fail@plt+0x432c>
   157bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157c0:	bl	11440 <fchdir@plt>
   157c4:	str	r0, [fp, #-24]	; 0xffffffe8
   157c8:	ldr	r0, [fp, #-16]
   157cc:	cmp	r0, #0
   157d0:	bge	15800 <__assert_fail@plt+0x4324>
   157d4:	bl	11398 <__errno_location@plt>
   157d8:	ldr	r0, [r0]
   157dc:	str	r0, [sp, #20]
   157e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157e4:	bl	114a0 <close@plt>
   157e8:	ldr	lr, [sp, #20]
   157ec:	str	r0, [sp, #8]
   157f0:	str	lr, [sp, #4]
   157f4:	bl	11398 <__errno_location@plt>
   157f8:	ldr	lr, [sp, #4]
   157fc:	str	lr, [r0]
   15800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15804:	str	r0, [fp, #-4]
   15808:	ldr	r0, [fp, #-4]
   1580c:	mov	sp, fp
   15810:	pop	{fp, pc}
   15814:	push	{fp, lr}
   15818:	mov	fp, sp
   1581c:	sub	sp, sp, #176	; 0xb0
   15820:	str	r0, [fp, #-8]
   15824:	str	r1, [fp, #-12]
   15828:	ldr	r0, [fp, #-8]
   1582c:	ldr	r0, [r0]
   15830:	str	r0, [fp, #-68]	; 0xffffffbc
   15834:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15838:	ldr	r0, [r0, #12]
   1583c:	movw	r1, #0
   15840:	cmp	r0, r1
   15844:	movw	r0, #0
   15848:	movne	r0, #1
   1584c:	mvn	r1, #0
   15850:	eor	r0, r0, r1
   15854:	eor	r0, r0, r1
   15858:	and	r0, r0, #1
   1585c:	strb	r0, [fp, #-69]	; 0xffffffbb
   15860:	movw	r0, #0
   15864:	strb	r0, [fp, #-70]	; 0xffffffba
   15868:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   1586c:	tst	r0, #1
   15870:	beq	158f0 <__assert_fail@plt+0x4414>
   15874:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15878:	ldr	r0, [r0, #12]
   1587c:	str	r0, [fp, #-80]	; 0xffffffb0
   15880:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15884:	bl	11434 <dirfd@plt>
   15888:	str	r0, [fp, #-64]	; 0xffffffc0
   1588c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15890:	cmp	r0, #0
   15894:	bge	158ec <__assert_fail@plt+0x4410>
   15898:	b	1589c <__assert_fail@plt+0x43c0>
   1589c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158a0:	ldr	r0, [r0, #12]
   158a4:	bl	114b8 <closedir@plt>
   158a8:	ldr	lr, [fp, #-68]	; 0xffffffbc
   158ac:	movw	r1, #0
   158b0:	str	r1, [lr, #12]
   158b4:	str	r0, [sp, #80]	; 0x50
   158b8:	ldr	r0, [fp, #-12]
   158bc:	cmp	r0, #3
   158c0:	bne	158e0 <__assert_fail@plt+0x4404>
   158c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158c8:	movw	r1, #4
   158cc:	strh	r1, [r0, #56]	; 0x38
   158d0:	bl	11398 <__errno_location@plt>
   158d4:	ldr	r0, [r0]
   158d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158dc:	str	r0, [r1, #32]
   158e0:	movw	r0, #0
   158e4:	str	r0, [fp, #-4]
   158e8:	b	164e0 <__assert_fail@plt+0x5004>
   158ec:	b	15ac8 <__assert_fail@plt+0x45ec>
   158f0:	ldr	r0, [fp, #-8]
   158f4:	ldr	r0, [r0, #48]	; 0x30
   158f8:	and	r0, r0, #4
   158fc:	cmp	r0, #0
   15900:	bne	15928 <__assert_fail@plt+0x444c>
   15904:	ldr	r0, [fp, #-8]
   15908:	ldr	r0, [r0, #48]	; 0x30
   1590c:	and	r0, r0, #512	; 0x200
   15910:	cmp	r0, #0
   15914:	beq	15928 <__assert_fail@plt+0x444c>
   15918:	ldr	r0, [fp, #-8]
   1591c:	ldr	r0, [r0, #32]
   15920:	str	r0, [sp, #76]	; 0x4c
   15924:	b	15934 <__assert_fail@plt+0x4458>
   15928:	mvn	r0, #99	; 0x63
   1592c:	str	r0, [sp, #76]	; 0x4c
   15930:	b	15934 <__assert_fail@plt+0x4458>
   15934:	ldr	r0, [sp, #76]	; 0x4c
   15938:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1593c:	ldr	r1, [r1, #24]
   15940:	ldr	r2, [fp, #-8]
   15944:	ldr	r2, [r2, #48]	; 0x30
   15948:	and	r2, r2, #16
   1594c:	cmp	r2, #0
   15950:	movw	r2, #0
   15954:	str	r0, [sp, #72]	; 0x48
   15958:	str	r1, [sp, #68]	; 0x44
   1595c:	str	r2, [sp, #64]	; 0x40
   15960:	beq	159a8 <__assert_fail@plt+0x44cc>
   15964:	ldr	r0, [fp, #-8]
   15968:	ldr	r0, [r0, #48]	; 0x30
   1596c:	and	r0, r0, #1
   15970:	cmp	r0, #0
   15974:	movw	r0, #0
   15978:	str	r0, [sp, #60]	; 0x3c
   1597c:	beq	15998 <__assert_fail@plt+0x44bc>
   15980:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15984:	ldr	r0, [r0, #48]	; 0x30
   15988:	cmp	r0, #0
   1598c:	movw	r0, #0
   15990:	moveq	r0, #1
   15994:	str	r0, [sp, #60]	; 0x3c
   15998:	ldr	r0, [sp, #60]	; 0x3c
   1599c:	mvn	r1, #0
   159a0:	eor	r0, r0, r1
   159a4:	str	r0, [sp, #64]	; 0x40
   159a8:	ldr	r0, [sp, #64]	; 0x40
   159ac:	tst	r0, #1
   159b0:	movw	r0, #32768	; 0x8000
   159b4:	moveq	r0, #0
   159b8:	ldr	r1, [sp, #72]	; 0x48
   159bc:	str	r0, [sp, #56]	; 0x38
   159c0:	mov	r0, r1
   159c4:	ldr	r1, [sp, #68]	; 0x44
   159c8:	ldr	r2, [sp, #56]	; 0x38
   159cc:	sub	r3, fp, #64	; 0x40
   159d0:	bl	19378 <__assert_fail@plt+0x7e9c>
   159d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159d8:	str	r0, [r1, #12]
   159dc:	movw	r1, #0
   159e0:	cmp	r0, r1
   159e4:	bne	15a1c <__assert_fail@plt+0x4540>
   159e8:	ldr	r0, [fp, #-12]
   159ec:	cmp	r0, #3
   159f0:	bne	15a10 <__assert_fail@plt+0x4534>
   159f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159f8:	movw	r1, #4
   159fc:	strh	r1, [r0, #56]	; 0x38
   15a00:	bl	11398 <__errno_location@plt>
   15a04:	ldr	r0, [r0]
   15a08:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a0c:	str	r0, [r1, #32]
   15a10:	movw	r0, #0
   15a14:	str	r0, [fp, #-4]
   15a18:	b	164e0 <__assert_fail@plt+0x5004>
   15a1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a20:	ldrh	r0, [r0, #56]	; 0x38
   15a24:	cmp	r0, #11
   15a28:	bne	15a4c <__assert_fail@plt+0x4570>
   15a2c:	ldr	r0, [fp, #-8]
   15a30:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a34:	movw	r2, #0
   15a38:	and	r2, r2, #1
   15a3c:	bl	14140 <__assert_fail@plt+0x2c64>
   15a40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a44:	strh	r0, [r1, #56]	; 0x38
   15a48:	b	15ac4 <__assert_fail@plt+0x45e8>
   15a4c:	ldr	r0, [fp, #-8]
   15a50:	ldr	r0, [r0, #48]	; 0x30
   15a54:	and	r0, r0, #256	; 0x100
   15a58:	cmp	r0, #0
   15a5c:	beq	15ac0 <__assert_fail@plt+0x45e4>
   15a60:	b	15a64 <__assert_fail@plt+0x4588>
   15a64:	ldr	r0, [fp, #-8]
   15a68:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a6c:	bl	153b0 <__assert_fail@plt+0x3ed4>
   15a70:	ldr	r0, [fp, #-8]
   15a74:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a78:	movw	r2, #0
   15a7c:	and	r2, r2, #1
   15a80:	bl	14140 <__assert_fail@plt+0x2c64>
   15a84:	ldr	r1, [fp, #-8]
   15a88:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15a8c:	str	r0, [sp, #52]	; 0x34
   15a90:	mov	r0, r1
   15a94:	mov	r1, r2
   15a98:	bl	166e0 <__assert_fail@plt+0x5204>
   15a9c:	tst	r0, #1
   15aa0:	bne	15abc <__assert_fail@plt+0x45e0>
   15aa4:	bl	11398 <__errno_location@plt>
   15aa8:	movw	lr, #12
   15aac:	str	lr, [r0]
   15ab0:	movw	r0, #0
   15ab4:	str	r0, [fp, #-4]
   15ab8:	b	164e0 <__assert_fail@plt+0x5004>
   15abc:	b	15ac0 <__assert_fail@plt+0x45e4>
   15ac0:	b	15ac4 <__assert_fail@plt+0x45e8>
   15ac4:	b	15ac8 <__assert_fail@plt+0x45ec>
   15ac8:	ldr	r0, [pc, #2588]	; 164ec <__assert_fail@plt+0x5010>
   15acc:	ldr	r1, [fp, #-8]
   15ad0:	ldr	r1, [r1, #44]	; 0x2c
   15ad4:	movw	r2, #0
   15ad8:	cmp	r1, r2
   15adc:	movw	r1, #0
   15ae0:	movne	r1, #1
   15ae4:	tst	r1, #1
   15ae8:	mvn	r1, #0
   15aec:	movne	r0, r1
   15af0:	str	r0, [fp, #-76]	; 0xffffffb4
   15af4:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15af8:	tst	r0, #1
   15afc:	beq	15b0c <__assert_fail@plt+0x4630>
   15b00:	movw	r0, #1
   15b04:	strb	r0, [fp, #-37]	; 0xffffffdb
   15b08:	b	15cd8 <__assert_fail@plt+0x47fc>
   15b0c:	ldr	r0, [fp, #-12]
   15b10:	cmp	r0, #2
   15b14:	movw	r0, #0
   15b18:	str	r0, [sp, #48]	; 0x30
   15b1c:	beq	15bb8 <__assert_fail@plt+0x46dc>
   15b20:	ldr	r0, [fp, #-8]
   15b24:	ldr	r0, [r0, #48]	; 0x30
   15b28:	and	r0, r0, #8
   15b2c:	cmp	r0, #0
   15b30:	movw	r0, #0
   15b34:	str	r0, [sp, #44]	; 0x2c
   15b38:	beq	15ba8 <__assert_fail@plt+0x46cc>
   15b3c:	ldr	r0, [fp, #-8]
   15b40:	ldr	r0, [r0, #48]	; 0x30
   15b44:	and	r0, r0, #16
   15b48:	cmp	r0, #0
   15b4c:	movw	r0, #0
   15b50:	str	r0, [sp, #44]	; 0x2c
   15b54:	beq	15ba8 <__assert_fail@plt+0x46cc>
   15b58:	ldr	r0, [fp, #-8]
   15b5c:	ldr	r0, [r0, #48]	; 0x30
   15b60:	and	r0, r0, #32
   15b64:	cmp	r0, #0
   15b68:	movw	r0, #0
   15b6c:	str	r0, [sp, #44]	; 0x2c
   15b70:	bne	15ba8 <__assert_fail@plt+0x46cc>
   15b74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b78:	ldr	r0, [r0, #84]	; 0x54
   15b7c:	cmp	r0, #2
   15b80:	movw	r0, #0
   15b84:	str	r0, [sp, #44]	; 0x2c
   15b88:	bne	15ba8 <__assert_fail@plt+0x46cc>
   15b8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15b94:	bl	16cc4 <__assert_fail@plt+0x57e8>
   15b98:	cmp	r0, #0
   15b9c:	movw	r0, #0
   15ba0:	movne	r0, #1
   15ba4:	str	r0, [sp, #44]	; 0x2c
   15ba8:	ldr	r0, [sp, #44]	; 0x2c
   15bac:	mvn	r1, #0
   15bb0:	eor	r0, r0, r1
   15bb4:	str	r0, [sp, #48]	; 0x30
   15bb8:	ldr	r0, [sp, #48]	; 0x30
   15bbc:	and	r0, r0, #1
   15bc0:	strb	r0, [fp, #-37]	; 0xffffffdb
   15bc4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15bc8:	tst	r0, #1
   15bcc:	bne	15bdc <__assert_fail@plt+0x4700>
   15bd0:	ldr	r0, [fp, #-12]
   15bd4:	cmp	r0, #3
   15bd8:	bne	15cd4 <__assert_fail@plt+0x47f8>
   15bdc:	ldr	r0, [fp, #-8]
   15be0:	ldr	r0, [r0, #48]	; 0x30
   15be4:	and	r0, r0, #512	; 0x200
   15be8:	cmp	r0, #0
   15bec:	beq	15c04 <__assert_fail@plt+0x4728>
   15bf0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15bf4:	movw	r1, #1030	; 0x406
   15bf8:	movw	r2, #3
   15bfc:	bl	22018 <__assert_fail@plt+0x10b3c>
   15c00:	str	r0, [fp, #-64]	; 0xffffffc0
   15c04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15c08:	cmp	r0, #0
   15c0c:	blt	15c2c <__assert_fail@plt+0x4750>
   15c10:	ldr	r0, [fp, #-8]
   15c14:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15c18:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15c1c:	movw	r3, #0
   15c20:	bl	15550 <__assert_fail@plt+0x4074>
   15c24:	cmp	r0, #0
   15c28:	beq	15cc8 <__assert_fail@plt+0x47ec>
   15c2c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15c30:	tst	r0, #1
   15c34:	beq	15c54 <__assert_fail@plt+0x4778>
   15c38:	ldr	r0, [fp, #-12]
   15c3c:	cmp	r0, #3
   15c40:	bne	15c54 <__assert_fail@plt+0x4778>
   15c44:	bl	11398 <__errno_location@plt>
   15c48:	ldr	r0, [r0]
   15c4c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15c50:	str	r0, [lr, #32]
   15c54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c58:	ldrh	r1, [r0, #58]	; 0x3a
   15c5c:	orr	r1, r1, #1
   15c60:	strh	r1, [r0, #58]	; 0x3a
   15c64:	movw	r0, #0
   15c68:	strb	r0, [fp, #-37]	; 0xffffffdb
   15c6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c70:	ldr	r0, [r0, #12]
   15c74:	bl	114b8 <closedir@plt>
   15c78:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15c7c:	movw	r1, #0
   15c80:	str	r1, [lr, #12]
   15c84:	str	r0, [sp, #40]	; 0x28
   15c88:	ldr	r0, [fp, #-8]
   15c8c:	ldr	r0, [r0, #48]	; 0x30
   15c90:	and	r0, r0, #512	; 0x200
   15c94:	cmp	r0, #0
   15c98:	beq	15cb8 <__assert_fail@plt+0x47dc>
   15c9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15ca0:	movw	r1, #0
   15ca4:	cmp	r1, r0
   15ca8:	bgt	15cb8 <__assert_fail@plt+0x47dc>
   15cac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15cb0:	bl	114a0 <close@plt>
   15cb4:	str	r0, [sp, #36]	; 0x24
   15cb8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15cbc:	movw	r1, #0
   15cc0:	str	r1, [r0, #12]
   15cc4:	b	15cd0 <__assert_fail@plt+0x47f4>
   15cc8:	movw	r0, #1
   15ccc:	strb	r0, [fp, #-37]	; 0xffffffdb
   15cd0:	b	15cd4 <__assert_fail@plt+0x47f8>
   15cd4:	b	15cd8 <__assert_fail@plt+0x47fc>
   15cd8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15cdc:	ldr	r0, [r0, #28]
   15ce0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ce4:	ldr	r1, [r1, #40]	; 0x28
   15ce8:	sub	r1, r1, #1
   15cec:	add	r0, r0, r1
   15cf0:	ldrb	r0, [r0]
   15cf4:	cmp	r0, #47	; 0x2f
   15cf8:	bne	15d10 <__assert_fail@plt+0x4834>
   15cfc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d00:	ldr	r0, [r0, #40]	; 0x28
   15d04:	sub	r0, r0, #1
   15d08:	str	r0, [sp, #32]
   15d0c:	b	15d1c <__assert_fail@plt+0x4840>
   15d10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d14:	ldr	r0, [r0, #40]	; 0x28
   15d18:	str	r0, [sp, #32]
   15d1c:	ldr	r0, [sp, #32]
   15d20:	str	r0, [fp, #-48]	; 0xffffffd0
   15d24:	ldr	r0, [fp, #-8]
   15d28:	ldr	r0, [r0, #48]	; 0x30
   15d2c:	and	r0, r0, #4
   15d30:	cmp	r0, #0
   15d34:	beq	15d64 <__assert_fail@plt+0x4888>
   15d38:	ldr	r0, [fp, #-8]
   15d3c:	ldr	r0, [r0, #24]
   15d40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d44:	add	r0, r0, r1
   15d48:	str	r0, [fp, #-60]	; 0xffffffc4
   15d4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15d50:	add	r1, r0, #1
   15d54:	str	r1, [fp, #-60]	; 0xffffffc4
   15d58:	movw	r1, #47	; 0x2f
   15d5c:	strb	r1, [r0]
   15d60:	b	15d6c <__assert_fail@plt+0x4890>
   15d64:	movw	r0, #0
   15d68:	str	r0, [fp, #-60]	; 0xffffffc4
   15d6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d70:	add	r0, r0, #1
   15d74:	str	r0, [fp, #-48]	; 0xffffffd0
   15d78:	ldr	r0, [fp, #-8]
   15d7c:	ldr	r0, [r0, #36]	; 0x24
   15d80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d84:	sub	r0, r0, r1
   15d88:	str	r0, [fp, #-52]	; 0xffffffcc
   15d8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d90:	ldr	r0, [r0, #48]	; 0x30
   15d94:	add	r0, r0, #1
   15d98:	str	r0, [fp, #-44]	; 0xffffffd4
   15d9c:	movw	r0, #0
   15da0:	strb	r0, [fp, #-38]	; 0xffffffda
   15da4:	movw	r0, #0
   15da8:	str	r0, [fp, #-20]	; 0xffffffec
   15dac:	str	r0, [fp, #-28]	; 0xffffffe4
   15db0:	str	r0, [fp, #-24]	; 0xffffffe8
   15db4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15db8:	ldr	r0, [r0, #12]
   15dbc:	movw	r1, #0
   15dc0:	cmp	r0, r1
   15dc4:	beq	162c4 <__assert_fail@plt+0x4de8>
   15dc8:	bl	11398 <__errno_location@plt>
   15dcc:	movw	lr, #0
   15dd0:	str	lr, [r0]
   15dd4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15dd8:	ldr	r0, [r0, #12]
   15ddc:	bl	1141c <readdir64@plt>
   15de0:	str	r0, [sp, #88]	; 0x58
   15de4:	ldr	r0, [sp, #88]	; 0x58
   15de8:	movw	lr, #0
   15dec:	cmp	r0, lr
   15df0:	bne	15e58 <__assert_fail@plt+0x497c>
   15df4:	bl	11398 <__errno_location@plt>
   15df8:	ldr	r0, [r0]
   15dfc:	cmp	r0, #0
   15e00:	beq	15e54 <__assert_fail@plt+0x4978>
   15e04:	bl	11398 <__errno_location@plt>
   15e08:	ldr	r0, [r0]
   15e0c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15e10:	str	r0, [lr, #32]
   15e14:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15e18:	tst	r0, #1
   15e1c:	movw	r0, #1
   15e20:	str	r0, [sp, #28]
   15e24:	bne	15e3c <__assert_fail@plt+0x4960>
   15e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e2c:	cmp	r0, #0
   15e30:	movw	r0, #0
   15e34:	movne	r0, #1
   15e38:	str	r0, [sp, #28]
   15e3c:	ldr	r0, [sp, #28]
   15e40:	tst	r0, #1
   15e44:	movw	r0, #7
   15e48:	moveq	r0, #4
   15e4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15e50:	strh	r0, [r1, #56]	; 0x38
   15e54:	b	162c4 <__assert_fail@plt+0x4de8>
   15e58:	ldr	r0, [fp, #-8]
   15e5c:	ldr	r0, [r0, #48]	; 0x30
   15e60:	and	r0, r0, #32
   15e64:	cmp	r0, #0
   15e68:	bne	15eb0 <__assert_fail@plt+0x49d4>
   15e6c:	ldr	r0, [sp, #88]	; 0x58
   15e70:	ldrb	r0, [r0, #19]
   15e74:	cmp	r0, #46	; 0x2e
   15e78:	bne	15eb0 <__assert_fail@plt+0x49d4>
   15e7c:	ldr	r0, [sp, #88]	; 0x58
   15e80:	ldrsb	r0, [r0, #20]
   15e84:	cmp	r0, #0
   15e88:	beq	15eac <__assert_fail@plt+0x49d0>
   15e8c:	ldr	r0, [sp, #88]	; 0x58
   15e90:	ldrb	r0, [r0, #20]
   15e94:	cmp	r0, #46	; 0x2e
   15e98:	bne	15eb0 <__assert_fail@plt+0x49d4>
   15e9c:	ldr	r0, [sp, #88]	; 0x58
   15ea0:	ldrsb	r0, [r0, #21]
   15ea4:	cmp	r0, #0
   15ea8:	bne	15eb0 <__assert_fail@plt+0x49d4>
   15eac:	b	15db4 <__assert_fail@plt+0x48d8>
   15eb0:	ldr	r0, [sp, #88]	; 0x58
   15eb4:	add	r0, r0, #19
   15eb8:	bl	1135c <strlen@plt>
   15ebc:	str	r0, [fp, #-84]	; 0xffffffac
   15ec0:	ldr	r0, [fp, #-8]
   15ec4:	ldr	lr, [sp, #88]	; 0x58
   15ec8:	add	r1, lr, #19
   15ecc:	ldr	r2, [fp, #-84]	; 0xffffffac
   15ed0:	bl	13ff0 <__assert_fail@plt+0x2b14>
   15ed4:	str	r0, [fp, #-16]
   15ed8:	ldr	r0, [fp, #-16]
   15edc:	movw	r1, #0
   15ee0:	cmp	r0, r1
   15ee4:	bne	15eec <__assert_fail@plt+0x4a10>
   15ee8:	b	15f2c <__assert_fail@plt+0x4a50>
   15eec:	ldr	r0, [fp, #-84]	; 0xffffffac
   15ef0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ef4:	cmp	r0, r1
   15ef8:	bcc	15ffc <__assert_fail@plt+0x4b20>
   15efc:	ldr	r0, [fp, #-8]
   15f00:	ldr	r0, [r0, #24]
   15f04:	str	r0, [fp, #-32]	; 0xffffffe0
   15f08:	ldr	r0, [fp, #-8]
   15f0c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15f10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f14:	add	r1, r1, r2
   15f18:	add	r1, r1, #1
   15f1c:	bl	13ef8 <__assert_fail@plt+0x2a1c>
   15f20:	tst	r0, #1
   15f24:	bne	15fa0 <__assert_fail@plt+0x4ac4>
   15f28:	b	15f2c <__assert_fail@plt+0x4a50>
   15f2c:	bl	11398 <__errno_location@plt>
   15f30:	ldr	r0, [r0]
   15f34:	str	r0, [fp, #-36]	; 0xffffffdc
   15f38:	ldr	r0, [fp, #-16]
   15f3c:	bl	13878 <__assert_fail@plt+0x239c>
   15f40:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f44:	bl	14698 <__assert_fail@plt+0x31bc>
   15f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f4c:	ldr	r0, [r0, #12]
   15f50:	bl	114b8 <closedir@plt>
   15f54:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15f58:	movw	r1, #0
   15f5c:	str	r1, [lr, #12]
   15f60:	str	r0, [sp, #24]
   15f64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f68:	movw	r1, #7
   15f6c:	strh	r1, [r0, #56]	; 0x38
   15f70:	ldr	r0, [fp, #-8]
   15f74:	ldr	r1, [r0, #48]	; 0x30
   15f78:	orr	r1, r1, #8192	; 0x2000
   15f7c:	str	r1, [r0, #48]	; 0x30
   15f80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f84:	str	r0, [sp, #20]
   15f88:	bl	11398 <__errno_location@plt>
   15f8c:	ldr	r1, [sp, #20]
   15f90:	str	r1, [r0]
   15f94:	movw	r0, #0
   15f98:	str	r0, [fp, #-4]
   15f9c:	b	164e0 <__assert_fail@plt+0x5004>
   15fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fa4:	ldr	r1, [fp, #-8]
   15fa8:	ldr	r1, [r1, #24]
   15fac:	cmp	r0, r1
   15fb0:	beq	15fe8 <__assert_fail@plt+0x4b0c>
   15fb4:	movw	r0, #1
   15fb8:	strb	r0, [fp, #-38]	; 0xffffffda
   15fbc:	ldr	r0, [fp, #-8]
   15fc0:	ldr	r0, [r0, #48]	; 0x30
   15fc4:	and	r0, r0, #4
   15fc8:	cmp	r0, #0
   15fcc:	beq	15fe4 <__assert_fail@plt+0x4b08>
   15fd0:	ldr	r0, [fp, #-8]
   15fd4:	ldr	r0, [r0, #24]
   15fd8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15fdc:	add	r0, r0, r1
   15fe0:	str	r0, [fp, #-60]	; 0xffffffc4
   15fe4:	b	15fe8 <__assert_fail@plt+0x4b0c>
   15fe8:	ldr	r0, [fp, #-8]
   15fec:	ldr	r0, [r0, #36]	; 0x24
   15ff0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15ff4:	sub	r0, r0, r1
   15ff8:	str	r0, [fp, #-52]	; 0xffffffcc
   15ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16000:	ldr	r1, [fp, #-84]	; 0xffffffac
   16004:	add	r0, r0, r1
   16008:	str	r0, [fp, #-56]	; 0xffffffc8
   1600c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16010:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16014:	cmp	r0, r1
   16018:	bcs	1607c <__assert_fail@plt+0x4ba0>
   1601c:	ldr	r0, [fp, #-16]
   16020:	bl	13878 <__assert_fail@plt+0x239c>
   16024:	ldr	r0, [fp, #-20]	; 0xffffffec
   16028:	bl	14698 <__assert_fail@plt+0x31bc>
   1602c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16030:	ldr	r0, [r0, #12]
   16034:	bl	114b8 <closedir@plt>
   16038:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1603c:	movw	r1, #0
   16040:	str	r1, [lr, #12]
   16044:	str	r0, [sp, #16]
   16048:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1604c:	movw	r1, #7
   16050:	strh	r1, [r0, #56]	; 0x38
   16054:	ldr	r0, [fp, #-8]
   16058:	ldr	r1, [r0, #48]	; 0x30
   1605c:	orr	r1, r1, #8192	; 0x2000
   16060:	str	r1, [r0, #48]	; 0x30
   16064:	bl	11398 <__errno_location@plt>
   16068:	movw	r1, #36	; 0x24
   1606c:	str	r1, [r0]
   16070:	movw	r0, #0
   16074:	str	r0, [fp, #-4]
   16078:	b	164e0 <__assert_fail@plt+0x5004>
   1607c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16080:	ldr	r1, [fp, #-16]
   16084:	str	r0, [r1, #48]	; 0x30
   16088:	ldr	r0, [fp, #-8]
   1608c:	ldr	r0, [r0]
   16090:	ldr	r1, [fp, #-16]
   16094:	str	r0, [r1, #4]
   16098:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1609c:	ldr	r1, [fp, #-16]
   160a0:	str	r0, [r1, #40]	; 0x28
   160a4:	ldr	r0, [sp, #88]	; 0x58
   160a8:	ldr	r1, [r0]
   160ac:	ldr	r0, [r0, #4]
   160b0:	ldr	r2, [fp, #-16]
   160b4:	str	r0, [r2, #164]	; 0xa4
   160b8:	str	r1, [r2, #160]	; 0xa0
   160bc:	ldr	r0, [fp, #-8]
   160c0:	ldr	r0, [r0, #48]	; 0x30
   160c4:	and	r0, r0, #4
   160c8:	cmp	r0, #0
   160cc:	beq	16100 <__assert_fail@plt+0x4c24>
   160d0:	ldr	r0, [fp, #-16]
   160d4:	ldr	r0, [r0, #28]
   160d8:	ldr	r1, [fp, #-16]
   160dc:	str	r0, [r1, #24]
   160e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   160e4:	ldr	r1, [fp, #-16]
   160e8:	add	r1, r1, #168	; 0xa8
   160ec:	ldr	r2, [fp, #-16]
   160f0:	ldr	r2, [r2, #52]	; 0x34
   160f4:	add	r2, r2, #1
   160f8:	bl	11218 <memmove@plt>
   160fc:	b	16110 <__assert_fail@plt+0x4c34>
   16100:	ldr	r0, [fp, #-16]
   16104:	add	r0, r0, #168	; 0xa8
   16108:	ldr	r1, [fp, #-16]
   1610c:	str	r0, [r1, #24]
   16110:	ldr	r0, [fp, #-8]
   16114:	ldr	r0, [r0, #44]	; 0x2c
   16118:	movw	r1, #0
   1611c:	cmp	r0, r1
   16120:	beq	16138 <__assert_fail@plt+0x4c5c>
   16124:	ldr	r0, [fp, #-8]
   16128:	ldr	r0, [r0, #48]	; 0x30
   1612c:	and	r0, r0, #1024	; 0x400
   16130:	cmp	r0, #0
   16134:	beq	16210 <__assert_fail@plt+0x4d34>
   16138:	ldr	r0, [fp, #-8]
   1613c:	ldr	r0, [r0, #48]	; 0x30
   16140:	and	r0, r0, #8
   16144:	cmp	r0, #0
   16148:	movw	r0, #0
   1614c:	str	r0, [sp, #12]
   16150:	beq	161c8 <__assert_fail@plt+0x4cec>
   16154:	ldr	r0, [sp, #88]	; 0x58
   16158:	ldrb	r0, [r0, #18]
   1615c:	cmp	r0, #0
   16160:	movw	r0, #0
   16164:	str	r0, [sp, #12]
   16168:	beq	161c8 <__assert_fail@plt+0x4cec>
   1616c:	ldr	r0, [sp, #88]	; 0x58
   16170:	ldrb	r0, [r0, #18]
   16174:	cmp	r0, #4
   16178:	movw	r0, #0
   1617c:	str	r0, [sp, #12]
   16180:	beq	161c8 <__assert_fail@plt+0x4cec>
   16184:	ldr	r0, [fp, #-8]
   16188:	ldr	r0, [r0, #48]	; 0x30
   1618c:	and	r0, r0, #16
   16190:	cmp	r0, #0
   16194:	movw	r0, #1
   16198:	str	r0, [sp, #8]
   1619c:	bne	161c0 <__assert_fail@plt+0x4ce4>
   161a0:	ldr	r0, [sp, #88]	; 0x58
   161a4:	ldrb	r0, [r0, #18]
   161a8:	cmp	r0, #10
   161ac:	movw	r0, #0
   161b0:	moveq	r0, #1
   161b4:	mvn	r1, #0
   161b8:	eor	r0, r0, r1
   161bc:	str	r0, [sp, #8]
   161c0:	ldr	r0, [sp, #8]
   161c4:	str	r0, [sp, #12]
   161c8:	ldr	r0, [sp, #12]
   161cc:	and	r0, r0, #1
   161d0:	strb	r0, [sp, #87]	; 0x57
   161d4:	ldr	r0, [fp, #-16]
   161d8:	movw	r1, #11
   161dc:	strh	r1, [r0, #56]	; 0x38
   161e0:	ldr	r0, [fp, #-16]
   161e4:	add	r0, r0, #64	; 0x40
   161e8:	ldr	r1, [sp, #88]	; 0x58
   161ec:	ldrb	r1, [r1, #18]
   161f0:	bl	16d80 <__assert_fail@plt+0x58a4>
   161f4:	ldr	r0, [fp, #-16]
   161f8:	ldrb	r1, [sp, #87]	; 0x57
   161fc:	mvn	lr, #0
   16200:	eor	r1, r1, lr
   16204:	and	r1, r1, #1
   16208:	bl	140e8 <__assert_fail@plt+0x2c0c>
   1620c:	b	1622c <__assert_fail@plt+0x4d50>
   16210:	ldr	r0, [fp, #-8]
   16214:	ldr	r1, [fp, #-16]
   16218:	movw	r2, #0
   1621c:	and	r2, r2, #1
   16220:	bl	14140 <__assert_fail@plt+0x2c64>
   16224:	ldr	r1, [fp, #-16]
   16228:	strh	r0, [r1, #56]	; 0x38
   1622c:	ldr	r0, [fp, #-16]
   16230:	movw	r1, #0
   16234:	str	r1, [r0, #8]
   16238:	ldr	r0, [fp, #-20]	; 0xffffffec
   1623c:	cmp	r0, r1
   16240:	bne	16254 <__assert_fail@plt+0x4d78>
   16244:	ldr	r0, [fp, #-16]
   16248:	str	r0, [fp, #-28]	; 0xffffffe4
   1624c:	str	r0, [fp, #-20]	; 0xffffffec
   16250:	b	16268 <__assert_fail@plt+0x4d8c>
   16254:	ldr	r0, [fp, #-16]
   16258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1625c:	str	r0, [r1, #8]
   16260:	ldr	r0, [fp, #-16]
   16264:	str	r0, [fp, #-28]	; 0xffffffe4
   16268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1626c:	movw	r1, #10000	; 0x2710
   16270:	cmp	r0, r1
   16274:	bne	162a0 <__assert_fail@plt+0x4dc4>
   16278:	ldr	r0, [fp, #-8]
   1627c:	ldr	r0, [r0, #44]	; 0x2c
   16280:	movw	r1, #0
   16284:	cmp	r0, r1
   16288:	bne	162a0 <__assert_fail@plt+0x4dc4>
   1628c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16290:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16294:	bl	16e50 <__assert_fail@plt+0x5974>
   16298:	and	r0, r0, #1
   1629c:	strb	r0, [fp, #-70]	; 0xffffffba
   162a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a4:	add	r0, r0, #1
   162a8:	str	r0, [fp, #-24]	; 0xffffffe8
   162ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   162b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162b4:	cmp	r0, r1
   162b8:	bhi	162c0 <__assert_fail@plt+0x4de4>
   162bc:	b	16300 <__assert_fail@plt+0x4e24>
   162c0:	b	15db4 <__assert_fail@plt+0x48d8>
   162c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   162c8:	ldr	r0, [r0, #12]
   162cc:	movw	r1, #0
   162d0:	cmp	r0, r1
   162d4:	beq	162fc <__assert_fail@plt+0x4e20>
   162d8:	b	162dc <__assert_fail@plt+0x4e00>
   162dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   162e0:	ldr	r0, [r0, #12]
   162e4:	bl	114b8 <closedir@plt>
   162e8:	ldr	lr, [fp, #-68]	; 0xffffffbc
   162ec:	movw	r1, #0
   162f0:	str	r1, [lr, #12]
   162f4:	str	r0, [sp, #4]
   162f8:	b	162fc <__assert_fail@plt+0x4e20>
   162fc:	b	16300 <__assert_fail@plt+0x4e24>
   16300:	ldrb	r0, [fp, #-38]	; 0xffffffda
   16304:	tst	r0, #1
   16308:	beq	16318 <__assert_fail@plt+0x4e3c>
   1630c:	ldr	r0, [fp, #-8]
   16310:	ldr	r1, [fp, #-20]	; 0xffffffec
   16314:	bl	16ee4 <__assert_fail@plt+0x5a08>
   16318:	ldr	r0, [fp, #-8]
   1631c:	ldr	r0, [r0, #48]	; 0x30
   16320:	and	r0, r0, #4
   16324:	cmp	r0, #0
   16328:	beq	16368 <__assert_fail@plt+0x4e8c>
   1632c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16330:	ldr	r1, [fp, #-8]
   16334:	ldr	r1, [r1, #36]	; 0x24
   16338:	cmp	r0, r1
   1633c:	beq	1634c <__assert_fail@plt+0x4e70>
   16340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16344:	cmp	r0, #0
   16348:	bne	1635c <__assert_fail@plt+0x4e80>
   1634c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16350:	mvn	r1, #0
   16354:	add	r0, r0, r1
   16358:	str	r0, [fp, #-60]	; 0xffffffc4
   1635c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16360:	movw	r1, #0
   16364:	strb	r1, [r0]
   16368:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   1636c:	tst	r0, #1
   16370:	bne	16410 <__assert_fail@plt+0x4f34>
   16374:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16378:	tst	r0, #1
   1637c:	beq	16410 <__assert_fail@plt+0x4f34>
   16380:	ldr	r0, [fp, #-12]
   16384:	cmp	r0, #1
   16388:	beq	16398 <__assert_fail@plt+0x4ebc>
   1638c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16390:	cmp	r0, #0
   16394:	bne	16410 <__assert_fail@plt+0x4f34>
   16398:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1639c:	ldr	r0, [r0, #48]	; 0x30
   163a0:	cmp	r0, #0
   163a4:	bne	163bc <__assert_fail@plt+0x4ee0>
   163a8:	ldr	r0, [fp, #-8]
   163ac:	bl	164f0 <__assert_fail@plt+0x5014>
   163b0:	cmp	r0, #0
   163b4:	bne	163e0 <__assert_fail@plt+0x4f04>
   163b8:	b	16410 <__assert_fail@plt+0x4f34>
   163bc:	ldr	r0, [fp, #-8]
   163c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   163c4:	ldr	r1, [r1, #4]
   163c8:	mvn	r2, #0
   163cc:	movw	r3, #22105	; 0x5659
   163d0:	movt	r3, #2
   163d4:	bl	15550 <__assert_fail@plt+0x4074>
   163d8:	cmp	r0, #0
   163dc:	beq	16410 <__assert_fail@plt+0x4f34>
   163e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163e4:	movw	r1, #7
   163e8:	strh	r1, [r0, #56]	; 0x38
   163ec:	ldr	r0, [fp, #-8]
   163f0:	ldr	r1, [r0, #48]	; 0x30
   163f4:	orr	r1, r1, #8192	; 0x2000
   163f8:	str	r1, [r0, #48]	; 0x30
   163fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16400:	bl	14698 <__assert_fail@plt+0x31bc>
   16404:	movw	r0, #0
   16408:	str	r0, [fp, #-4]
   1640c:	b	164e0 <__assert_fail@plt+0x5004>
   16410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16414:	cmp	r0, #0
   16418:	bne	16468 <__assert_fail@plt+0x4f8c>
   1641c:	ldr	r0, [fp, #-12]
   16420:	cmp	r0, #3
   16424:	bne	16454 <__assert_fail@plt+0x4f78>
   16428:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1642c:	ldrh	r0, [r0, #56]	; 0x38
   16430:	cmp	r0, #4
   16434:	beq	16454 <__assert_fail@plt+0x4f78>
   16438:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1643c:	ldrh	r0, [r0, #56]	; 0x38
   16440:	cmp	r0, #7
   16444:	beq	16454 <__assert_fail@plt+0x4f78>
   16448:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1644c:	movw	r1, #6
   16450:	strh	r1, [r0, #56]	; 0x38
   16454:	ldr	r0, [fp, #-20]	; 0xffffffec
   16458:	bl	14698 <__assert_fail@plt+0x31bc>
   1645c:	movw	r0, #0
   16460:	str	r0, [fp, #-4]
   16464:	b	164e0 <__assert_fail@plt+0x5004>
   16468:	ldrb	r0, [fp, #-70]	; 0xffffffba
   1646c:	tst	r0, #1
   16470:	beq	164a4 <__assert_fail@plt+0x4fc8>
   16474:	ldr	r0, [fp, #-8]
   16478:	movw	r1, #28704	; 0x7020
   1647c:	movt	r1, #1
   16480:	str	r1, [r0, #44]	; 0x2c
   16484:	ldr	r0, [fp, #-8]
   16488:	ldr	r1, [fp, #-20]	; 0xffffffec
   1648c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16490:	bl	14358 <__assert_fail@plt+0x2e7c>
   16494:	str	r0, [fp, #-20]	; 0xffffffec
   16498:	ldr	r0, [fp, #-8]
   1649c:	movw	r1, #0
   164a0:	str	r1, [r0, #44]	; 0x2c
   164a4:	ldr	r0, [fp, #-8]
   164a8:	ldr	r0, [r0, #44]	; 0x2c
   164ac:	movw	r1, #0
   164b0:	cmp	r0, r1
   164b4:	beq	164d8 <__assert_fail@plt+0x4ffc>
   164b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164bc:	cmp	r0, #1
   164c0:	bls	164d8 <__assert_fail@plt+0x4ffc>
   164c4:	ldr	r0, [fp, #-8]
   164c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   164cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164d0:	bl	14358 <__assert_fail@plt+0x2e7c>
   164d4:	str	r0, [fp, #-20]	; 0xffffffec
   164d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   164dc:	str	r0, [fp, #-4]
   164e0:	ldr	r0, [fp, #-4]
   164e4:	mov	sp, fp
   164e8:	pop	{fp, pc}
   164ec:	andeq	r8, r1, r0, lsr #13
   164f0:	push	{fp, lr}
   164f4:	mov	fp, sp
   164f8:	sub	sp, sp, #32
   164fc:	str	r0, [fp, #-4]
   16500:	ldr	r0, [fp, #-4]
   16504:	ldr	r0, [r0, #48]	; 0x30
   16508:	and	r0, r0, #4
   1650c:	cmp	r0, #0
   16510:	movw	r0, #0
   16514:	str	r0, [fp, #-12]
   16518:	bne	165dc <__assert_fail@plt+0x5100>
   1651c:	ldr	r0, [fp, #-4]
   16520:	ldr	r0, [r0, #48]	; 0x30
   16524:	and	r0, r0, #512	; 0x200
   16528:	cmp	r0, #0
   1652c:	beq	16590 <__assert_fail@plt+0x50b4>
   16530:	ldr	r0, [fp, #-4]
   16534:	ldr	r1, [fp, #-4]
   16538:	ldr	r1, [r1, #48]	; 0x30
   1653c:	and	r1, r1, #512	; 0x200
   16540:	cmp	r1, #0
   16544:	str	r0, [sp, #16]
   16548:	beq	16558 <__assert_fail@plt+0x507c>
   1654c:	mvn	r0, #99	; 0x63
   16550:	str	r0, [sp, #12]
   16554:	b	16564 <__assert_fail@plt+0x5088>
   16558:	ldr	r0, [fp, #-4]
   1655c:	ldr	r0, [r0, #28]
   16560:	str	r0, [sp, #12]
   16564:	ldr	r0, [sp, #12]
   16568:	ldr	r1, [sp, #16]
   1656c:	str	r0, [sp, #8]
   16570:	mov	r0, r1
   16574:	ldr	r1, [sp, #8]
   16578:	movw	r2, #1
   1657c:	and	r2, r2, #1
   16580:	bl	16840 <__assert_fail@plt+0x5364>
   16584:	movw	r0, #0
   16588:	str	r0, [sp, #4]
   1658c:	b	165c8 <__assert_fail@plt+0x50ec>
   16590:	ldr	r0, [fp, #-4]
   16594:	ldr	r0, [r0, #48]	; 0x30
   16598:	and	r0, r0, #512	; 0x200
   1659c:	cmp	r0, #0
   165a0:	beq	165b0 <__assert_fail@plt+0x50d4>
   165a4:	mvn	r0, #99	; 0x63
   165a8:	str	r0, [sp]
   165ac:	b	165bc <__assert_fail@plt+0x50e0>
   165b0:	ldr	r0, [fp, #-4]
   165b4:	ldr	r0, [r0, #28]
   165b8:	str	r0, [sp]
   165bc:	ldr	r0, [sp]
   165c0:	bl	11440 <fchdir@plt>
   165c4:	str	r0, [sp, #4]
   165c8:	ldr	r0, [sp, #4]
   165cc:	cmp	r0, #0
   165d0:	movw	r0, #0
   165d4:	movne	r0, #1
   165d8:	str	r0, [fp, #-12]
   165dc:	ldr	r0, [fp, #-12]
   165e0:	and	r0, r0, #1
   165e4:	str	r0, [fp, #-8]
   165e8:	ldr	r0, [fp, #-4]
   165ec:	add	r0, r0, #60	; 0x3c
   165f0:	bl	14908 <__assert_fail@plt+0x342c>
   165f4:	ldr	r0, [fp, #-8]
   165f8:	mov	sp, fp
   165fc:	pop	{fp, pc}
   16600:	push	{fp, lr}
   16604:	mov	fp, sp
   16608:	sub	sp, sp, #16
   1660c:	str	r0, [fp, #-4]
   16610:	str	r1, [sp, #8]
   16614:	ldr	r0, [sp, #8]
   16618:	ldr	r0, [r0, #52]	; 0x34
   1661c:	ldr	r1, [sp, #8]
   16620:	str	r0, [r1, #40]	; 0x28
   16624:	str	r0, [sp, #4]
   16628:	ldr	r0, [fp, #-4]
   1662c:	ldr	r0, [r0, #24]
   16630:	ldr	r1, [sp, #8]
   16634:	add	r1, r1, #168	; 0xa8
   16638:	ldr	r2, [sp, #4]
   1663c:	add	r2, r2, #1
   16640:	bl	11218 <memmove@plt>
   16644:	ldr	r0, [sp, #8]
   16648:	add	r0, r0, #168	; 0xa8
   1664c:	movw	r1, #47	; 0x2f
   16650:	bl	11404 <strrchr@plt>
   16654:	str	r0, [sp]
   16658:	movw	r1, #0
   1665c:	cmp	r0, r1
   16660:	beq	166c0 <__assert_fail@plt+0x51e4>
   16664:	ldr	r0, [sp]
   16668:	ldr	r1, [sp, #8]
   1666c:	add	r1, r1, #168	; 0xa8
   16670:	cmp	r0, r1
   16674:	bne	16688 <__assert_fail@plt+0x51ac>
   16678:	ldr	r0, [sp]
   1667c:	ldrb	r0, [r0, #1]
   16680:	cmp	r0, #0
   16684:	beq	166c0 <__assert_fail@plt+0x51e4>
   16688:	ldr	r0, [sp]
   1668c:	add	r0, r0, #1
   16690:	str	r0, [sp]
   16694:	bl	1135c <strlen@plt>
   16698:	str	r0, [sp, #4]
   1669c:	ldr	r0, [sp, #8]
   166a0:	add	r0, r0, #168	; 0xa8
   166a4:	ldr	r1, [sp]
   166a8:	ldr	lr, [sp, #4]
   166ac:	add	r2, lr, #1
   166b0:	bl	11218 <memmove@plt>
   166b4:	ldr	r0, [sp, #4]
   166b8:	ldr	r1, [sp, #8]
   166bc:	str	r0, [r1, #52]	; 0x34
   166c0:	ldr	r0, [fp, #-4]
   166c4:	ldr	r0, [r0, #24]
   166c8:	ldr	r1, [sp, #8]
   166cc:	str	r0, [r1, #28]
   166d0:	ldr	r1, [sp, #8]
   166d4:	str	r0, [r1, #24]
   166d8:	mov	sp, fp
   166dc:	pop	{fp, pc}
   166e0:	push	{fp, lr}
   166e4:	mov	fp, sp
   166e8:	sub	sp, sp, #24
   166ec:	str	r0, [fp, #-8]
   166f0:	str	r1, [sp, #12]
   166f4:	ldr	r0, [fp, #-8]
   166f8:	ldr	r0, [r0, #48]	; 0x30
   166fc:	movw	r1, #258	; 0x102
   16700:	and	r0, r0, r1
   16704:	cmp	r0, #0
   16708:	beq	167ec <__assert_fail@plt+0x5310>
   1670c:	ldr	r0, [sp, #12]
   16710:	add	r0, r0, #64	; 0x40
   16714:	str	r0, [sp, #8]
   16718:	movw	r0, #24
   1671c:	bl	217c0 <__assert_fail@plt+0x102e4>
   16720:	str	r0, [sp, #4]
   16724:	ldr	r0, [sp, #4]
   16728:	movw	lr, #0
   1672c:	cmp	r0, lr
   16730:	bne	16744 <__assert_fail@plt+0x5268>
   16734:	movw	r0, #0
   16738:	and	r0, r0, #1
   1673c:	strb	r0, [fp, #-1]
   16740:	b	16830 <__assert_fail@plt+0x5354>
   16744:	ldr	r0, [sp, #8]
   16748:	ldr	r1, [r0]
   1674c:	ldr	r0, [r0, #4]
   16750:	ldr	r2, [sp, #4]
   16754:	str	r0, [r2, #4]
   16758:	str	r1, [r2]
   1675c:	ldr	r0, [sp, #8]
   16760:	ldr	r1, [r0, #96]	; 0x60
   16764:	ldr	r0, [r0, #100]	; 0x64
   16768:	ldr	r2, [sp, #4]
   1676c:	str	r0, [r2, #12]
   16770:	str	r1, [r2, #8]
   16774:	ldr	r0, [sp, #12]
   16778:	ldr	r1, [sp, #4]
   1677c:	str	r0, [r1, #16]
   16780:	ldr	r0, [fp, #-8]
   16784:	ldr	r0, [r0, #56]	; 0x38
   16788:	ldr	r1, [sp, #4]
   1678c:	bl	18ba0 <__assert_fail@plt+0x76c4>
   16790:	str	r0, [sp]
   16794:	ldr	r0, [sp]
   16798:	ldr	r1, [sp, #4]
   1679c:	cmp	r0, r1
   167a0:	beq	167e8 <__assert_fail@plt+0x530c>
   167a4:	ldr	r0, [sp, #4]
   167a8:	bl	13878 <__assert_fail@plt+0x239c>
   167ac:	ldr	r0, [sp]
   167b0:	movw	lr, #0
   167b4:	cmp	r0, lr
   167b8:	bne	167cc <__assert_fail@plt+0x52f0>
   167bc:	movw	r0, #0
   167c0:	and	r0, r0, #1
   167c4:	strb	r0, [fp, #-1]
   167c8:	b	16830 <__assert_fail@plt+0x5354>
   167cc:	ldr	r0, [sp]
   167d0:	ldr	r0, [r0, #16]
   167d4:	ldr	r1, [sp, #12]
   167d8:	str	r0, [r1]
   167dc:	ldr	r0, [sp, #12]
   167e0:	movw	r1, #2
   167e4:	strh	r1, [r0, #56]	; 0x38
   167e8:	b	16824 <__assert_fail@plt+0x5348>
   167ec:	ldr	r0, [fp, #-8]
   167f0:	ldr	r0, [r0, #56]	; 0x38
   167f4:	ldr	r1, [sp, #12]
   167f8:	add	r1, r1, #64	; 0x40
   167fc:	bl	21d6c <__assert_fail@plt+0x10890>
   16800:	tst	r0, #1
   16804:	beq	16820 <__assert_fail@plt+0x5344>
   16808:	ldr	r0, [sp, #12]
   1680c:	ldr	r1, [sp, #12]
   16810:	str	r0, [r1]
   16814:	ldr	r0, [sp, #12]
   16818:	movw	r1, #2
   1681c:	strh	r1, [r0, #56]	; 0x38
   16820:	b	16824 <__assert_fail@plt+0x5348>
   16824:	movw	r0, #1
   16828:	and	r0, r0, #1
   1682c:	strb	r0, [fp, #-1]
   16830:	ldrb	r0, [fp, #-1]
   16834:	and	r0, r0, #1
   16838:	mov	sp, fp
   1683c:	pop	{fp, pc}
   16840:	push	{fp, lr}
   16844:	mov	fp, sp
   16848:	sub	sp, sp, #32
   1684c:	str	r0, [fp, #-4]
   16850:	str	r1, [fp, #-8]
   16854:	and	r0, r2, #1
   16858:	strb	r0, [fp, #-9]
   1685c:	ldr	r0, [fp, #-4]
   16860:	ldr	r0, [r0, #32]
   16864:	str	r0, [sp, #16]
   16868:	ldr	r0, [sp, #16]
   1686c:	ldr	r1, [fp, #-8]
   16870:	cmp	r0, r1
   16874:	bne	16888 <__assert_fail@plt+0x53ac>
   16878:	ldr	r0, [sp, #16]
   1687c:	cmn	r0, #100	; 0x64
   16880:	beq	16888 <__assert_fail@plt+0x53ac>
   16884:	bl	11494 <abort@plt>
   16888:	b	1688c <__assert_fail@plt+0x53b0>
   1688c:	ldrb	r0, [fp, #-9]
   16890:	tst	r0, #1
   16894:	beq	168cc <__assert_fail@plt+0x53f0>
   16898:	ldr	r0, [fp, #-4]
   1689c:	add	r0, r0, #60	; 0x3c
   168a0:	ldr	r1, [sp, #16]
   168a4:	bl	19064 <__assert_fail@plt+0x7b88>
   168a8:	str	r0, [sp, #12]
   168ac:	ldr	r0, [sp, #12]
   168b0:	movw	r1, #0
   168b4:	cmp	r1, r0
   168b8:	bgt	168c8 <__assert_fail@plt+0x53ec>
   168bc:	ldr	r0, [sp, #12]
   168c0:	bl	114a0 <close@plt>
   168c4:	str	r0, [sp, #8]
   168c8:	b	16904 <__assert_fail@plt+0x5428>
   168cc:	ldr	r0, [fp, #-4]
   168d0:	ldr	r0, [r0, #48]	; 0x30
   168d4:	and	r0, r0, #4
   168d8:	cmp	r0, #0
   168dc:	bne	16900 <__assert_fail@plt+0x5424>
   168e0:	ldr	r0, [sp, #16]
   168e4:	movw	r1, #0
   168e8:	cmp	r1, r0
   168ec:	bgt	168fc <__assert_fail@plt+0x5420>
   168f0:	ldr	r0, [sp, #16]
   168f4:	bl	114a0 <close@plt>
   168f8:	str	r0, [sp, #4]
   168fc:	b	16900 <__assert_fail@plt+0x5424>
   16900:	b	16904 <__assert_fail@plt+0x5428>
   16904:	ldr	r0, [fp, #-8]
   16908:	ldr	r1, [fp, #-4]
   1690c:	str	r0, [r1, #32]
   16910:	mov	sp, fp
   16914:	pop	{fp, pc}
   16918:	push	{fp, lr}
   1691c:	mov	fp, sp
   16920:	sub	sp, sp, #16
   16924:	str	r0, [sp, #8]
   16928:	str	r1, [sp, #4]
   1692c:	str	r2, [sp]
   16930:	ldr	r0, [sp]
   16934:	cmp	r0, #0
   16938:	beq	16984 <__assert_fail@plt+0x54a8>
   1693c:	ldr	r0, [sp]
   16940:	cmp	r0, #1
   16944:	beq	16984 <__assert_fail@plt+0x54a8>
   16948:	ldr	r0, [sp]
   1694c:	cmp	r0, #2
   16950:	beq	16984 <__assert_fail@plt+0x54a8>
   16954:	ldr	r0, [sp]
   16958:	cmp	r0, #3
   1695c:	beq	16984 <__assert_fail@plt+0x54a8>
   16960:	ldr	r0, [sp]
   16964:	cmp	r0, #4
   16968:	beq	16984 <__assert_fail@plt+0x54a8>
   1696c:	bl	11398 <__errno_location@plt>
   16970:	movw	lr, #22
   16974:	str	lr, [r0]
   16978:	movw	r0, #1
   1697c:	str	r0, [fp, #-4]
   16980:	b	16998 <__assert_fail@plt+0x54bc>
   16984:	ldr	r0, [sp]
   16988:	ldr	r1, [sp, #4]
   1698c:	strh	r0, [r1, #60]	; 0x3c
   16990:	movw	r0, #0
   16994:	str	r0, [fp, #-4]
   16998:	ldr	r0, [fp, #-4]
   1699c:	mov	sp, fp
   169a0:	pop	{fp, pc}
   169a4:	push	{fp, lr}
   169a8:	mov	fp, sp
   169ac:	sub	sp, sp, #40	; 0x28
   169b0:	str	r0, [fp, #-8]
   169b4:	str	r1, [fp, #-12]
   169b8:	ldr	r0, [fp, #-12]
   169bc:	cmp	r0, #0
   169c0:	beq	169e8 <__assert_fail@plt+0x550c>
   169c4:	ldr	r0, [fp, #-12]
   169c8:	cmp	r0, #4096	; 0x1000
   169cc:	beq	169e8 <__assert_fail@plt+0x550c>
   169d0:	bl	11398 <__errno_location@plt>
   169d4:	movw	lr, #22
   169d8:	str	lr, [r0]
   169dc:	movw	r0, #0
   169e0:	str	r0, [fp, #-4]
   169e4:	b	16bd0 <__assert_fail@plt+0x56f4>
   169e8:	ldr	r0, [fp, #-8]
   169ec:	ldr	r0, [r0]
   169f0:	str	r0, [fp, #-16]
   169f4:	bl	11398 <__errno_location@plt>
   169f8:	movw	lr, #0
   169fc:	str	lr, [r0]
   16a00:	ldr	r0, [fp, #-8]
   16a04:	ldr	r0, [r0, #48]	; 0x30
   16a08:	and	r0, r0, #8192	; 0x2000
   16a0c:	cmp	r0, #0
   16a10:	beq	16a20 <__assert_fail@plt+0x5544>
   16a14:	movw	r0, #0
   16a18:	str	r0, [fp, #-4]
   16a1c:	b	16bd0 <__assert_fail@plt+0x56f4>
   16a20:	ldr	r0, [fp, #-16]
   16a24:	ldrh	r0, [r0, #56]	; 0x38
   16a28:	cmp	r0, #9
   16a2c:	bne	16a40 <__assert_fail@plt+0x5564>
   16a30:	ldr	r0, [fp, #-16]
   16a34:	ldr	r0, [r0, #8]
   16a38:	str	r0, [fp, #-4]
   16a3c:	b	16bd0 <__assert_fail@plt+0x56f4>
   16a40:	ldr	r0, [fp, #-16]
   16a44:	ldrh	r0, [r0, #56]	; 0x38
   16a48:	cmp	r0, #1
   16a4c:	beq	16a5c <__assert_fail@plt+0x5580>
   16a50:	movw	r0, #0
   16a54:	str	r0, [fp, #-4]
   16a58:	b	16bd0 <__assert_fail@plt+0x56f4>
   16a5c:	ldr	r0, [fp, #-8]
   16a60:	ldr	r0, [r0, #4]
   16a64:	movw	r1, #0
   16a68:	cmp	r0, r1
   16a6c:	beq	16a7c <__assert_fail@plt+0x55a0>
   16a70:	ldr	r0, [fp, #-8]
   16a74:	ldr	r0, [r0, #4]
   16a78:	bl	14698 <__assert_fail@plt+0x31bc>
   16a7c:	ldr	r0, [fp, #-12]
   16a80:	cmp	r0, #4096	; 0x1000
   16a84:	bne	16aa4 <__assert_fail@plt+0x55c8>
   16a88:	ldr	r0, [fp, #-8]
   16a8c:	ldr	r1, [r0, #48]	; 0x30
   16a90:	orr	r1, r1, #4096	; 0x1000
   16a94:	str	r1, [r0, #48]	; 0x30
   16a98:	movw	r0, #2
   16a9c:	str	r0, [fp, #-12]
   16aa0:	b	16aac <__assert_fail@plt+0x55d0>
   16aa4:	movw	r0, #1
   16aa8:	str	r0, [fp, #-12]
   16aac:	ldr	r0, [fp, #-16]
   16ab0:	ldr	r0, [r0, #48]	; 0x30
   16ab4:	cmp	r0, #0
   16ab8:	bne	16ae4 <__assert_fail@plt+0x5608>
   16abc:	ldr	r0, [fp, #-16]
   16ac0:	ldr	r0, [r0, #24]
   16ac4:	ldrb	r0, [r0]
   16ac8:	cmp	r0, #47	; 0x2f
   16acc:	beq	16ae4 <__assert_fail@plt+0x5608>
   16ad0:	ldr	r0, [fp, #-8]
   16ad4:	ldr	r0, [r0, #48]	; 0x30
   16ad8:	and	r0, r0, #4
   16adc:	cmp	r0, #0
   16ae0:	beq	16b00 <__assert_fail@plt+0x5624>
   16ae4:	ldr	r0, [fp, #-8]
   16ae8:	ldr	r1, [fp, #-12]
   16aec:	bl	15814 <__assert_fail@plt+0x4338>
   16af0:	ldr	r1, [fp, #-8]
   16af4:	str	r0, [r1, #4]
   16af8:	str	r0, [fp, #-4]
   16afc:	b	16bd0 <__assert_fail@plt+0x56f4>
   16b00:	ldr	r0, [fp, #-8]
   16b04:	movw	r1, #22106	; 0x565a
   16b08:	movt	r1, #2
   16b0c:	bl	145fc <__assert_fail@plt+0x3120>
   16b10:	str	r0, [sp, #20]
   16b14:	cmp	r0, #0
   16b18:	bge	16b30 <__assert_fail@plt+0x5654>
   16b1c:	ldr	r0, [fp, #-8]
   16b20:	movw	r1, #0
   16b24:	str	r1, [r0, #4]
   16b28:	str	r1, [fp, #-4]
   16b2c:	b	16bd0 <__assert_fail@plt+0x56f4>
   16b30:	ldr	r0, [fp, #-8]
   16b34:	ldr	r1, [fp, #-12]
   16b38:	bl	15814 <__assert_fail@plt+0x4338>
   16b3c:	ldr	r1, [fp, #-8]
   16b40:	str	r0, [r1, #4]
   16b44:	ldr	r0, [fp, #-8]
   16b48:	ldr	r0, [r0, #48]	; 0x30
   16b4c:	and	r0, r0, #512	; 0x200
   16b50:	cmp	r0, #0
   16b54:	beq	16b70 <__assert_fail@plt+0x5694>
   16b58:	ldr	r0, [fp, #-8]
   16b5c:	ldr	r1, [sp, #20]
   16b60:	movw	r2, #1
   16b64:	and	r2, r2, #1
   16b68:	bl	16840 <__assert_fail@plt+0x5364>
   16b6c:	b	16bc4 <__assert_fail@plt+0x56e8>
   16b70:	ldr	r0, [sp, #20]
   16b74:	bl	11440 <fchdir@plt>
   16b78:	cmp	r0, #0
   16b7c:	beq	16bb8 <__assert_fail@plt+0x56dc>
   16b80:	bl	11398 <__errno_location@plt>
   16b84:	ldr	r0, [r0]
   16b88:	str	r0, [sp, #16]
   16b8c:	ldr	r0, [sp, #20]
   16b90:	bl	114a0 <close@plt>
   16b94:	ldr	lr, [sp, #16]
   16b98:	str	r0, [sp, #12]
   16b9c:	str	lr, [sp, #8]
   16ba0:	bl	11398 <__errno_location@plt>
   16ba4:	ldr	lr, [sp, #8]
   16ba8:	str	lr, [r0]
   16bac:	movw	r0, #0
   16bb0:	str	r0, [fp, #-4]
   16bb4:	b	16bd0 <__assert_fail@plt+0x56f4>
   16bb8:	ldr	r0, [sp, #20]
   16bbc:	bl	114a0 <close@plt>
   16bc0:	str	r0, [sp, #4]
   16bc4:	ldr	r0, [fp, #-8]
   16bc8:	ldr	r0, [r0, #4]
   16bcc:	str	r0, [fp, #-4]
   16bd0:	ldr	r0, [fp, #-4]
   16bd4:	mov	sp, fp
   16bd8:	pop	{fp, pc}
   16bdc:	push	{fp, lr}
   16be0:	mov	fp, sp
   16be4:	sub	sp, sp, #24
   16be8:	str	r0, [fp, #-4]
   16bec:	str	r1, [fp, #-8]
   16bf0:	ldr	r0, [fp, #-4]
   16bf4:	str	r0, [sp, #12]
   16bf8:	ldr	r0, [sp, #12]
   16bfc:	ldr	r1, [r0, #8]
   16c00:	ldr	r0, [r0, #12]
   16c04:	ldr	r2, [fp, #-8]
   16c08:	mov	r3, #0
   16c0c:	str	r0, [sp, #8]
   16c10:	mov	r0, r1
   16c14:	ldr	r1, [sp, #8]
   16c18:	bl	245dc <__assert_fail@plt+0x13100>
   16c1c:	str	r0, [sp, #4]
   16c20:	mov	r0, r2
   16c24:	str	r1, [sp]
   16c28:	mov	sp, fp
   16c2c:	pop	{fp, pc}
   16c30:	sub	sp, sp, #20
   16c34:	str	r0, [sp, #16]
   16c38:	str	r1, [sp, #12]
   16c3c:	ldr	r0, [sp, #16]
   16c40:	str	r0, [sp, #8]
   16c44:	ldr	r0, [sp, #12]
   16c48:	str	r0, [sp, #4]
   16c4c:	ldr	r0, [sp, #8]
   16c50:	ldr	r1, [r0, #8]
   16c54:	ldr	r0, [r0, #12]
   16c58:	ldr	r2, [sp, #4]
   16c5c:	ldr	r3, [r2, #8]
   16c60:	ldr	r2, [r2, #12]
   16c64:	eor	r0, r0, r2
   16c68:	eor	r1, r1, r3
   16c6c:	orr	r0, r1, r0
   16c70:	mov	r1, #0
   16c74:	cmp	r0, #0
   16c78:	str	r1, [sp]
   16c7c:	bne	16cb4 <__assert_fail@plt+0x57d8>
   16c80:	b	16c84 <__assert_fail@plt+0x57a8>
   16c84:	ldr	r0, [sp, #8]
   16c88:	ldr	r1, [r0]
   16c8c:	ldr	r0, [r0, #4]
   16c90:	ldr	r2, [sp, #4]
   16c94:	ldr	r3, [r2]
   16c98:	ldr	r2, [r2, #4]
   16c9c:	eor	r0, r0, r2
   16ca0:	eor	r1, r1, r3
   16ca4:	orr	r0, r1, r0
   16ca8:	clz	r0, r0
   16cac:	lsr	r0, r0, #5
   16cb0:	str	r0, [sp]
   16cb4:	ldr	r0, [sp]
   16cb8:	and	r0, r0, #1
   16cbc:	add	sp, sp, #20
   16cc0:	bx	lr
   16cc4:	push	{fp, lr}
   16cc8:	mov	fp, sp
   16ccc:	sub	sp, sp, #16
   16cd0:	str	r0, [sp, #8]
   16cd4:	str	r1, [sp, #4]
   16cd8:	ldr	r0, [sp, #8]
   16cdc:	ldr	r1, [sp, #4]
   16ce0:	bl	17098 <__assert_fail@plt+0x5bbc>
   16ce4:	mov	r1, r0
   16ce8:	movw	lr, #19778	; 0x4d42
   16cec:	movt	lr, #65363	; 0xff53
   16cf0:	cmp	r0, lr
   16cf4:	str	r1, [sp]
   16cf8:	beq	16d58 <__assert_fail@plt+0x587c>
   16cfc:	b	16d00 <__assert_fail@plt+0x5824>
   16d00:	ldr	r0, [sp]
   16d04:	cmp	r0, #0
   16d08:	beq	16d50 <__assert_fail@plt+0x5874>
   16d0c:	b	16d10 <__assert_fail@plt+0x5834>
   16d10:	movw	r0, #26985	; 0x6969
   16d14:	ldr	r1, [sp]
   16d18:	cmp	r1, r0
   16d1c:	beq	16d5c <__assert_fail@plt+0x5880>
   16d20:	b	16d24 <__assert_fail@plt+0x5848>
   16d24:	movw	r0, #40864	; 0x9fa0
   16d28:	ldr	r1, [sp]
   16d2c:	cmp	r1, r0
   16d30:	beq	16d60 <__assert_fail@plt+0x5884>
   16d34:	b	16d38 <__assert_fail@plt+0x585c>
   16d38:	movw	r0, #16719	; 0x414f
   16d3c:	movt	r0, #21318	; 0x5346
   16d40:	ldr	r1, [sp]
   16d44:	cmp	r1, r0
   16d48:	beq	16d54 <__assert_fail@plt+0x5878>
   16d4c:	b	16d6c <__assert_fail@plt+0x5890>
   16d50:	b	16d54 <__assert_fail@plt+0x5878>
   16d54:	b	16d58 <__assert_fail@plt+0x587c>
   16d58:	b	16d5c <__assert_fail@plt+0x5880>
   16d5c:	b	16d60 <__assert_fail@plt+0x5884>
   16d60:	movw	r0, #0
   16d64:	str	r0, [fp, #-4]
   16d68:	b	16d74 <__assert_fail@plt+0x5898>
   16d6c:	movw	r0, #1
   16d70:	str	r0, [fp, #-4]
   16d74:	ldr	r0, [fp, #-4]
   16d78:	mov	sp, fp
   16d7c:	pop	{fp, pc}
   16d80:	sub	sp, sp, #16
   16d84:	str	r0, [sp, #12]
   16d88:	str	r1, [sp, #8]
   16d8c:	ldr	r0, [sp, #8]
   16d90:	sub	r0, r0, #1
   16d94:	cmp	r0, #11
   16d98:	str	r0, [sp]
   16d9c:	bhi	16e34 <__assert_fail@plt+0x5958>
   16da0:	add	r0, pc, #8
   16da4:	ldr	r1, [sp]
   16da8:	ldr	r0, [r0, r1, lsl #2]
   16dac:	mov	pc, r0
   16db0:	andeq	r6, r1, r4, lsl #28
   16db4:	andeq	r6, r1, ip, ror #27
   16db8:	andeq	r6, r1, r4, lsr lr
   16dbc:	strdeq	r6, [r1], -r8
   16dc0:	andeq	r6, r1, r4, lsr lr
   16dc4:	andeq	r6, r1, r0, ror #27
   16dc8:	andeq	r6, r1, r4, lsr lr
   16dcc:	andeq	r6, r1, ip, lsl lr
   16dd0:	andeq	r6, r1, r4, lsr lr
   16dd4:	andeq	r6, r1, r0, lsl lr
   16dd8:	andeq	r6, r1, r4, lsr lr
   16ddc:	andeq	r6, r1, r8, lsr #28
   16de0:	movw	r0, #24576	; 0x6000
   16de4:	str	r0, [sp, #4]
   16de8:	b	16e3c <__assert_fail@plt+0x5960>
   16dec:	movw	r0, #8192	; 0x2000
   16df0:	str	r0, [sp, #4]
   16df4:	b	16e3c <__assert_fail@plt+0x5960>
   16df8:	movw	r0, #16384	; 0x4000
   16dfc:	str	r0, [sp, #4]
   16e00:	b	16e3c <__assert_fail@plt+0x5960>
   16e04:	movw	r0, #4096	; 0x1000
   16e08:	str	r0, [sp, #4]
   16e0c:	b	16e3c <__assert_fail@plt+0x5960>
   16e10:	movw	r0, #40960	; 0xa000
   16e14:	str	r0, [sp, #4]
   16e18:	b	16e3c <__assert_fail@plt+0x5960>
   16e1c:	movw	r0, #32768	; 0x8000
   16e20:	str	r0, [sp, #4]
   16e24:	b	16e3c <__assert_fail@plt+0x5960>
   16e28:	movw	r0, #49152	; 0xc000
   16e2c:	str	r0, [sp, #4]
   16e30:	b	16e3c <__assert_fail@plt+0x5960>
   16e34:	movw	r0, #0
   16e38:	str	r0, [sp, #4]
   16e3c:	ldr	r0, [sp, #4]
   16e40:	ldr	r1, [sp, #12]
   16e44:	str	r0, [r1, #16]
   16e48:	add	sp, sp, #16
   16e4c:	bx	lr
   16e50:	push	{fp, lr}
   16e54:	mov	fp, sp
   16e58:	sub	sp, sp, #16
   16e5c:	str	r0, [sp, #8]
   16e60:	str	r1, [sp, #4]
   16e64:	ldr	r0, [sp, #8]
   16e68:	ldr	r1, [sp, #4]
   16e6c:	bl	17098 <__assert_fail@plt+0x5bbc>
   16e70:	mov	r1, r0
   16e74:	movw	lr, #19778	; 0x4d42
   16e78:	movt	lr, #65363	; 0xff53
   16e7c:	cmp	r0, lr
   16e80:	str	r1, [sp]
   16e84:	beq	16eb8 <__assert_fail@plt+0x59dc>
   16e88:	b	16e8c <__assert_fail@plt+0x59b0>
   16e8c:	movw	r0, #26985	; 0x6969
   16e90:	ldr	r1, [sp]
   16e94:	cmp	r1, r0
   16e98:	beq	16eb8 <__assert_fail@plt+0x59dc>
   16e9c:	b	16ea0 <__assert_fail@plt+0x59c4>
   16ea0:	movw	r0, #6548	; 0x1994
   16ea4:	movt	r0, #258	; 0x102
   16ea8:	ldr	r1, [sp]
   16eac:	cmp	r1, r0
   16eb0:	bne	16ec8 <__assert_fail@plt+0x59ec>
   16eb4:	b	16eb8 <__assert_fail@plt+0x59dc>
   16eb8:	movw	r0, #0
   16ebc:	and	r0, r0, #1
   16ec0:	strb	r0, [fp, #-1]
   16ec4:	b	16ed4 <__assert_fail@plt+0x59f8>
   16ec8:	movw	r0, #1
   16ecc:	and	r0, r0, #1
   16ed0:	strb	r0, [fp, #-1]
   16ed4:	ldrb	r0, [fp, #-1]
   16ed8:	and	r0, r0, #1
   16edc:	mov	sp, fp
   16ee0:	pop	{fp, pc}
   16ee4:	sub	sp, sp, #20
   16ee8:	str	r0, [sp, #16]
   16eec:	str	r1, [sp, #12]
   16ef0:	ldr	r0, [sp, #16]
   16ef4:	ldr	r0, [r0, #24]
   16ef8:	str	r0, [sp, #4]
   16efc:	ldr	r0, [sp, #16]
   16f00:	ldr	r0, [r0, #4]
   16f04:	str	r0, [sp, #8]
   16f08:	ldr	r0, [sp, #8]
   16f0c:	movw	r1, #0
   16f10:	cmp	r0, r1
   16f14:	beq	16f78 <__assert_fail@plt+0x5a9c>
   16f18:	b	16f1c <__assert_fail@plt+0x5a40>
   16f1c:	ldr	r0, [sp, #8]
   16f20:	ldr	r0, [r0, #24]
   16f24:	ldr	r1, [sp, #8]
   16f28:	add	r1, r1, #168	; 0xa8
   16f2c:	cmp	r0, r1
   16f30:	beq	16f58 <__assert_fail@plt+0x5a7c>
   16f34:	ldr	r0, [sp, #4]
   16f38:	ldr	r1, [sp, #8]
   16f3c:	ldr	r1, [r1, #24]
   16f40:	ldr	r2, [sp, #8]
   16f44:	ldr	r2, [r2, #28]
   16f48:	sub	r1, r1, r2
   16f4c:	add	r0, r0, r1
   16f50:	ldr	r1, [sp, #8]
   16f54:	str	r0, [r1, #24]
   16f58:	ldr	r0, [sp, #4]
   16f5c:	ldr	r1, [sp, #8]
   16f60:	str	r0, [r1, #28]
   16f64:	b	16f68 <__assert_fail@plt+0x5a8c>
   16f68:	ldr	r0, [sp, #8]
   16f6c:	ldr	r0, [r0, #8]
   16f70:	str	r0, [sp, #8]
   16f74:	b	16f08 <__assert_fail@plt+0x5a2c>
   16f78:	ldr	r0, [sp, #12]
   16f7c:	str	r0, [sp, #8]
   16f80:	ldr	r0, [sp, #8]
   16f84:	ldr	r0, [r0, #48]	; 0x30
   16f88:	cmp	r0, #0
   16f8c:	blt	17018 <__assert_fail@plt+0x5b3c>
   16f90:	b	16f94 <__assert_fail@plt+0x5ab8>
   16f94:	ldr	r0, [sp, #8]
   16f98:	ldr	r0, [r0, #24]
   16f9c:	ldr	r1, [sp, #8]
   16fa0:	add	r1, r1, #168	; 0xa8
   16fa4:	cmp	r0, r1
   16fa8:	beq	16fd0 <__assert_fail@plt+0x5af4>
   16fac:	ldr	r0, [sp, #4]
   16fb0:	ldr	r1, [sp, #8]
   16fb4:	ldr	r1, [r1, #24]
   16fb8:	ldr	r2, [sp, #8]
   16fbc:	ldr	r2, [r2, #28]
   16fc0:	sub	r1, r1, r2
   16fc4:	add	r0, r0, r1
   16fc8:	ldr	r1, [sp, #8]
   16fcc:	str	r0, [r1, #24]
   16fd0:	ldr	r0, [sp, #4]
   16fd4:	ldr	r1, [sp, #8]
   16fd8:	str	r0, [r1, #28]
   16fdc:	ldr	r0, [sp, #8]
   16fe0:	ldr	r0, [r0, #8]
   16fe4:	movw	r1, #0
   16fe8:	cmp	r0, r1
   16fec:	beq	17000 <__assert_fail@plt+0x5b24>
   16ff0:	ldr	r0, [sp, #8]
   16ff4:	ldr	r0, [r0, #8]
   16ff8:	str	r0, [sp]
   16ffc:	b	1700c <__assert_fail@plt+0x5b30>
   17000:	ldr	r0, [sp, #8]
   17004:	ldr	r0, [r0, #4]
   17008:	str	r0, [sp]
   1700c:	ldr	r0, [sp]
   17010:	str	r0, [sp, #8]
   17014:	b	16f80 <__assert_fail@plt+0x5aa4>
   17018:	add	sp, sp, #20
   1701c:	bx	lr
   17020:	push	{r4, r5, fp, lr}
   17024:	add	fp, sp, #8
   17028:	sub	sp, sp, #24
   1702c:	str	r0, [fp, #-12]
   17030:	str	r1, [sp, #16]
   17034:	ldr	r0, [fp, #-12]
   17038:	ldr	r0, [r0]
   1703c:	ldr	r1, [r0, #160]	; 0xa0
   17040:	ldr	r0, [r0, #164]	; 0xa4
   17044:	ldr	r2, [sp, #16]
   17048:	ldr	r2, [r2]
   1704c:	ldr	r3, [r2, #160]	; 0xa0
   17050:	ldr	r2, [r2, #164]	; 0xa4
   17054:	subs	ip, r3, r1
   17058:	sbcs	lr, r2, r0
   1705c:	mov	r4, #0
   17060:	mov	r5, r4
   17064:	movwcc	r5, #1
   17068:	subs	r1, r1, r3
   1706c:	sbcs	r0, r0, r2
   17070:	movwcc	r4, #1
   17074:	and	r2, r4, #1
   17078:	sub	r2, r5, r2
   1707c:	str	r0, [sp, #12]
   17080:	mov	r0, r2
   17084:	str	ip, [sp, #8]
   17088:	str	r1, [sp, #4]
   1708c:	str	lr, [sp]
   17090:	sub	sp, fp, #8
   17094:	pop	{r4, r5, fp, pc}
   17098:	push	{fp, lr}
   1709c:	mov	fp, sp
   170a0:	sub	sp, sp, #136	; 0x88
   170a4:	str	r0, [fp, #-8]
   170a8:	str	r1, [fp, #-12]
   170ac:	ldr	r0, [fp, #-8]
   170b0:	ldr	r0, [r0, #44]	; 0x2c
   170b4:	str	r0, [fp, #-16]
   170b8:	ldr	r0, [fp, #-16]
   170bc:	ldr	r0, [r0, #52]	; 0x34
   170c0:	str	r0, [fp, #-20]	; 0xffffffec
   170c4:	ldr	r0, [fp, #-16]
   170c8:	ldr	r0, [r0, #48]	; 0x30
   170cc:	and	r0, r0, #512	; 0x200
   170d0:	cmp	r0, #0
   170d4:	bne	170e4 <__assert_fail@plt+0x5c08>
   170d8:	movw	r0, #0
   170dc:	str	r0, [fp, #-4]
   170e0:	b	17254 <__assert_fail@plt+0x5d78>
   170e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   170e8:	movw	r1, #0
   170ec:	cmp	r0, r1
   170f0:	bne	17128 <__assert_fail@plt+0x5c4c>
   170f4:	movw	r0, #13
   170f8:	movw	r1, #0
   170fc:	movw	r2, #29280	; 0x7260
   17100:	movt	r2, #1
   17104:	movw	r3, #29368	; 0x72b8
   17108:	movt	r3, #1
   1710c:	movw	ip, #14456	; 0x3878
   17110:	movt	ip, #1
   17114:	str	ip, [sp]
   17118:	bl	17b74 <__assert_fail@plt+0x6698>
   1711c:	ldr	r1, [fp, #-16]
   17120:	str	r0, [r1, #52]	; 0x34
   17124:	str	r0, [fp, #-20]	; 0xffffffec
   17128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1712c:	movw	r1, #0
   17130:	cmp	r0, r1
   17134:	beq	17180 <__assert_fail@plt+0x5ca4>
   17138:	ldr	r0, [fp, #-8]
   1713c:	ldr	r1, [r0, #64]	; 0x40
   17140:	ldr	r0, [r0, #68]	; 0x44
   17144:	str	r0, [sp, #12]
   17148:	str	r1, [sp, #8]
   1714c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17150:	add	r1, sp, #8
   17154:	bl	17658 <__assert_fail@plt+0x617c>
   17158:	str	r0, [fp, #-24]	; 0xffffffe8
   1715c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17160:	movw	r1, #0
   17164:	cmp	r0, r1
   17168:	beq	1717c <__assert_fail@plt+0x5ca0>
   1716c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17170:	ldr	r0, [r0, #8]
   17174:	str	r0, [fp, #-4]
   17178:	b	17254 <__assert_fail@plt+0x5d78>
   1717c:	b	17180 <__assert_fail@plt+0x5ca4>
   17180:	ldr	r0, [fp, #-12]
   17184:	cmp	r0, #0
   17188:	blt	171a0 <__assert_fail@plt+0x5cc4>
   1718c:	ldr	r0, [fp, #-12]
   17190:	add	r1, sp, #24
   17194:	bl	111ac <fstatfs64@plt>
   17198:	cmp	r0, #0
   1719c:	beq	171ac <__assert_fail@plt+0x5cd0>
   171a0:	movw	r0, #0
   171a4:	str	r0, [fp, #-4]
   171a8:	b	17254 <__assert_fail@plt+0x5d78>
   171ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   171b0:	movw	r1, #0
   171b4:	cmp	r0, r1
   171b8:	beq	1724c <__assert_fail@plt+0x5d70>
   171bc:	movw	r0, #16
   171c0:	bl	217c0 <__assert_fail@plt+0x102e4>
   171c4:	str	r0, [sp, #4]
   171c8:	ldr	r0, [sp, #4]
   171cc:	movw	lr, #0
   171d0:	cmp	r0, lr
   171d4:	beq	17248 <__assert_fail@plt+0x5d6c>
   171d8:	ldr	r0, [fp, #-8]
   171dc:	ldr	r1, [r0, #64]	; 0x40
   171e0:	ldr	r0, [r0, #68]	; 0x44
   171e4:	ldr	r2, [sp, #4]
   171e8:	str	r0, [r2, #4]
   171ec:	str	r1, [r2]
   171f0:	ldr	r0, [sp, #24]
   171f4:	ldr	r1, [sp, #4]
   171f8:	str	r0, [r1, #8]
   171fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17200:	ldr	r1, [sp, #4]
   17204:	bl	18ba0 <__assert_fail@plt+0x76c4>
   17208:	str	r0, [fp, #-24]	; 0xffffffe8
   1720c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17210:	movw	r1, #0
   17214:	cmp	r0, r1
   17218:	beq	1723c <__assert_fail@plt+0x5d60>
   1721c:	b	17220 <__assert_fail@plt+0x5d44>
   17220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17224:	ldr	r1, [sp, #4]
   17228:	cmp	r0, r1
   1722c:	beq	17234 <__assert_fail@plt+0x5d58>
   17230:	bl	11494 <abort@plt>
   17234:	b	17238 <__assert_fail@plt+0x5d5c>
   17238:	b	17244 <__assert_fail@plt+0x5d68>
   1723c:	ldr	r0, [sp, #4]
   17240:	bl	13878 <__assert_fail@plt+0x239c>
   17244:	b	17248 <__assert_fail@plt+0x5d6c>
   17248:	b	1724c <__assert_fail@plt+0x5d70>
   1724c:	ldr	r0, [sp, #24]
   17250:	str	r0, [fp, #-4]
   17254:	ldr	r0, [fp, #-4]
   17258:	mov	sp, fp
   1725c:	pop	{fp, pc}
   17260:	push	{fp, lr}
   17264:	mov	fp, sp
   17268:	sub	sp, sp, #32
   1726c:	str	r0, [fp, #-4]
   17270:	str	r1, [fp, #-8]
   17274:	ldr	r0, [fp, #-4]
   17278:	str	r0, [fp, #-12]
   1727c:	ldr	r0, [fp, #-12]
   17280:	ldr	r1, [r0]
   17284:	ldr	r0, [r0, #4]
   17288:	str	r0, [sp, #12]
   1728c:	str	r1, [sp, #8]
   17290:	ldr	r0, [sp, #8]
   17294:	ldr	r1, [sp, #12]
   17298:	ldr	r2, [fp, #-8]
   1729c:	mov	r3, #0
   172a0:	bl	245dc <__assert_fail@plt+0x13100>
   172a4:	str	r0, [sp, #4]
   172a8:	mov	r0, r2
   172ac:	str	r1, [sp]
   172b0:	mov	sp, fp
   172b4:	pop	{fp, pc}
   172b8:	sub	sp, sp, #16
   172bc:	str	r0, [sp, #12]
   172c0:	str	r1, [sp, #8]
   172c4:	ldr	r0, [sp, #12]
   172c8:	str	r0, [sp, #4]
   172cc:	ldr	r0, [sp, #8]
   172d0:	str	r0, [sp]
   172d4:	ldr	r0, [sp, #4]
   172d8:	ldr	r1, [r0]
   172dc:	ldr	r0, [r0, #4]
   172e0:	ldr	r2, [sp]
   172e4:	ldr	r3, [r2]
   172e8:	ldr	r2, [r2, #4]
   172ec:	eor	r0, r0, r2
   172f0:	eor	r1, r1, r3
   172f4:	orr	r0, r1, r0
   172f8:	clz	r0, r0
   172fc:	lsr	r0, r0, #5
   17300:	and	r0, r0, #1
   17304:	add	sp, sp, #16
   17308:	bx	lr
   1730c:	push	{fp, lr}
   17310:	mov	fp, sp
   17314:	sub	sp, sp, #24
   17318:	str	r0, [fp, #-4]
   1731c:	str	r1, [fp, #-8]
   17320:	ldr	r0, [fp, #-4]
   17324:	str	r0, [sp, #12]
   17328:	ldr	r0, [fp, #-8]
   1732c:	str	r0, [sp, #8]
   17330:	ldr	r0, [sp, #12]
   17334:	ldr	r0, [r0]
   17338:	ldr	r0, [r0, #44]	; 0x2c
   1733c:	ldr	r0, [r0, #44]	; 0x2c
   17340:	ldr	r1, [sp, #12]
   17344:	ldr	r2, [sp, #8]
   17348:	str	r0, [sp, #4]
   1734c:	mov	r0, r1
   17350:	mov	r1, r2
   17354:	ldr	r2, [sp, #4]
   17358:	blx	r2
   1735c:	mov	sp, fp
   17360:	pop	{fp, pc}
   17364:	andeq	r0, r0, r0
   17368:	sub	sp, sp, #4
   1736c:	str	r0, [sp]
   17370:	ldr	r0, [sp]
   17374:	ldr	r0, [r0, #8]
   17378:	add	sp, sp, #4
   1737c:	bx	lr
   17380:	sub	sp, sp, #4
   17384:	str	r0, [sp]
   17388:	ldr	r0, [sp]
   1738c:	ldr	r0, [r0, #12]
   17390:	add	sp, sp, #4
   17394:	bx	lr
   17398:	sub	sp, sp, #4
   1739c:	str	r0, [sp]
   173a0:	ldr	r0, [sp]
   173a4:	ldr	r0, [r0, #16]
   173a8:	add	sp, sp, #4
   173ac:	bx	lr
   173b0:	sub	sp, sp, #20
   173b4:	str	r0, [sp, #16]
   173b8:	movw	r0, #0
   173bc:	str	r0, [sp, #8]
   173c0:	ldr	r0, [sp, #16]
   173c4:	ldr	r0, [r0]
   173c8:	str	r0, [sp, #12]
   173cc:	ldr	r0, [sp, #12]
   173d0:	ldr	r1, [sp, #16]
   173d4:	ldr	r1, [r1, #4]
   173d8:	cmp	r0, r1
   173dc:	bcs	17460 <__assert_fail@plt+0x5f84>
   173e0:	ldr	r0, [sp, #12]
   173e4:	ldr	r0, [r0]
   173e8:	movw	r1, #0
   173ec:	cmp	r0, r1
   173f0:	beq	1744c <__assert_fail@plt+0x5f70>
   173f4:	ldr	r0, [sp, #12]
   173f8:	str	r0, [sp, #4]
   173fc:	movw	r0, #1
   17400:	str	r0, [sp]
   17404:	ldr	r0, [sp, #4]
   17408:	ldr	r0, [r0, #4]
   1740c:	str	r0, [sp, #4]
   17410:	ldr	r0, [sp, #4]
   17414:	movw	r1, #0
   17418:	cmp	r0, r1
   1741c:	beq	17430 <__assert_fail@plt+0x5f54>
   17420:	ldr	r0, [sp]
   17424:	add	r0, r0, #1
   17428:	str	r0, [sp]
   1742c:	b	17404 <__assert_fail@plt+0x5f28>
   17430:	ldr	r0, [sp]
   17434:	ldr	r1, [sp, #8]
   17438:	cmp	r0, r1
   1743c:	bls	17448 <__assert_fail@plt+0x5f6c>
   17440:	ldr	r0, [sp]
   17444:	str	r0, [sp, #8]
   17448:	b	1744c <__assert_fail@plt+0x5f70>
   1744c:	b	17450 <__assert_fail@plt+0x5f74>
   17450:	ldr	r0, [sp, #12]
   17454:	add	r0, r0, #8
   17458:	str	r0, [sp, #12]
   1745c:	b	173cc <__assert_fail@plt+0x5ef0>
   17460:	ldr	r0, [sp, #8]
   17464:	add	sp, sp, #20
   17468:	bx	lr
   1746c:	sub	sp, sp, #24
   17470:	str	r0, [sp, #16]
   17474:	movw	r0, #0
   17478:	str	r0, [sp, #8]
   1747c:	str	r0, [sp, #4]
   17480:	ldr	r0, [sp, #16]
   17484:	ldr	r0, [r0]
   17488:	str	r0, [sp, #12]
   1748c:	ldr	r0, [sp, #12]
   17490:	ldr	r1, [sp, #16]
   17494:	ldr	r1, [r1, #4]
   17498:	cmp	r0, r1
   1749c:	bcs	17518 <__assert_fail@plt+0x603c>
   174a0:	ldr	r0, [sp, #12]
   174a4:	ldr	r0, [r0]
   174a8:	movw	r1, #0
   174ac:	cmp	r0, r1
   174b0:	beq	17504 <__assert_fail@plt+0x6028>
   174b4:	ldr	r0, [sp, #12]
   174b8:	str	r0, [sp]
   174bc:	ldr	r0, [sp, #8]
   174c0:	add	r0, r0, #1
   174c4:	str	r0, [sp, #8]
   174c8:	ldr	r0, [sp, #4]
   174cc:	add	r0, r0, #1
   174d0:	str	r0, [sp, #4]
   174d4:	ldr	r0, [sp]
   174d8:	ldr	r0, [r0, #4]
   174dc:	str	r0, [sp]
   174e0:	ldr	r0, [sp]
   174e4:	movw	r1, #0
   174e8:	cmp	r0, r1
   174ec:	beq	17500 <__assert_fail@plt+0x6024>
   174f0:	ldr	r0, [sp, #4]
   174f4:	add	r0, r0, #1
   174f8:	str	r0, [sp, #4]
   174fc:	b	174d4 <__assert_fail@plt+0x5ff8>
   17500:	b	17504 <__assert_fail@plt+0x6028>
   17504:	b	17508 <__assert_fail@plt+0x602c>
   17508:	ldr	r0, [sp, #12]
   1750c:	add	r0, r0, #8
   17510:	str	r0, [sp, #12]
   17514:	b	1748c <__assert_fail@plt+0x5fb0>
   17518:	ldr	r0, [sp, #8]
   1751c:	ldr	r1, [sp, #16]
   17520:	ldr	r1, [r1, #12]
   17524:	cmp	r0, r1
   17528:	bne	17550 <__assert_fail@plt+0x6074>
   1752c:	ldr	r0, [sp, #4]
   17530:	ldr	r1, [sp, #16]
   17534:	ldr	r1, [r1, #16]
   17538:	cmp	r0, r1
   1753c:	bne	17550 <__assert_fail@plt+0x6074>
   17540:	movw	r0, #1
   17544:	and	r0, r0, #1
   17548:	strb	r0, [sp, #23]
   1754c:	b	1755c <__assert_fail@plt+0x6080>
   17550:	movw	r0, #0
   17554:	and	r0, r0, #1
   17558:	strb	r0, [sp, #23]
   1755c:	ldrb	r0, [sp, #23]
   17560:	and	r0, r0, #1
   17564:	add	sp, sp, #24
   17568:	bx	lr
   1756c:	nop	{0}
   17570:	push	{fp, lr}
   17574:	mov	fp, sp
   17578:	sub	sp, sp, #48	; 0x30
   1757c:	str	r0, [fp, #-4]
   17580:	str	r1, [fp, #-8]
   17584:	ldr	r0, [fp, #-4]
   17588:	bl	17398 <__assert_fail@plt+0x5ebc>
   1758c:	str	r0, [fp, #-12]
   17590:	ldr	r0, [fp, #-4]
   17594:	bl	17368 <__assert_fail@plt+0x5e8c>
   17598:	str	r0, [fp, #-16]
   1759c:	ldr	r0, [fp, #-4]
   175a0:	bl	17380 <__assert_fail@plt+0x5ea4>
   175a4:	str	r0, [fp, #-20]	; 0xffffffec
   175a8:	ldr	r0, [fp, #-4]
   175ac:	bl	173b0 <__assert_fail@plt+0x5ed4>
   175b0:	str	r0, [sp, #24]
   175b4:	ldr	r0, [fp, #-8]
   175b8:	ldr	r2, [fp, #-12]
   175bc:	movw	r1, #22108	; 0x565c
   175c0:	movt	r1, #2
   175c4:	bl	1138c <fprintf@plt>
   175c8:	ldr	r1, [fp, #-8]
   175cc:	ldr	r2, [fp, #-16]
   175d0:	str	r0, [sp, #20]
   175d4:	mov	r0, r1
   175d8:	movw	r1, #22132	; 0x5674
   175dc:	movt	r1, #2
   175e0:	bl	1138c <fprintf@plt>
   175e4:	vldr	d16, [pc, #100]	; 17650 <__assert_fail@plt+0x6174>
   175e8:	ldr	r1, [fp, #-8]
   175ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   175f0:	ldr	lr, [fp, #-20]	; 0xffffffec
   175f4:	vmov	s0, lr
   175f8:	vcvt.f64.u32	d17, s0
   175fc:	vmul.f64	d16, d16, d17
   17600:	ldr	lr, [fp, #-16]
   17604:	vmov	s0, lr
   17608:	vcvt.f64.u32	d17, s0
   1760c:	vdiv.f64	d16, d16, d17
   17610:	str	r0, [sp, #16]
   17614:	mov	r0, r1
   17618:	movw	r1, #22156	; 0x568c
   1761c:	movt	r1, #2
   17620:	vstr	d16, [sp]
   17624:	bl	1138c <fprintf@plt>
   17628:	ldr	r1, [fp, #-8]
   1762c:	ldr	r2, [sp, #24]
   17630:	str	r0, [sp, #12]
   17634:	mov	r0, r1
   17638:	movw	r1, #22189	; 0x56ad
   1763c:	movt	r1, #2
   17640:	bl	1138c <fprintf@plt>
   17644:	str	r0, [sp, #8]
   17648:	mov	sp, fp
   1764c:	pop	{fp, pc}
   17650:	andeq	r0, r0, r0
   17654:	subsmi	r0, r9, r0
   17658:	push	{fp, lr}
   1765c:	mov	fp, sp
   17660:	sub	sp, sp, #24
   17664:	str	r0, [fp, #-8]
   17668:	str	r1, [sp, #12]
   1766c:	ldr	r0, [fp, #-8]
   17670:	ldr	r1, [sp, #12]
   17674:	bl	17730 <__assert_fail@plt+0x6254>
   17678:	str	r0, [sp, #8]
   1767c:	ldr	r0, [sp, #8]
   17680:	ldr	r0, [r0]
   17684:	movw	r1, #0
   17688:	cmp	r0, r1
   1768c:	bne	1769c <__assert_fail@plt+0x61c0>
   17690:	movw	r0, #0
   17694:	str	r0, [fp, #-4]
   17698:	b	17724 <__assert_fail@plt+0x6248>
   1769c:	ldr	r0, [sp, #8]
   176a0:	str	r0, [sp, #4]
   176a4:	ldr	r0, [sp, #4]
   176a8:	movw	r1, #0
   176ac:	cmp	r0, r1
   176b0:	beq	1771c <__assert_fail@plt+0x6240>
   176b4:	ldr	r0, [sp, #12]
   176b8:	ldr	r1, [sp, #4]
   176bc:	ldr	r1, [r1]
   176c0:	cmp	r0, r1
   176c4:	beq	176f8 <__assert_fail@plt+0x621c>
   176c8:	ldr	r0, [fp, #-8]
   176cc:	ldr	r0, [r0, #28]
   176d0:	ldr	r1, [sp, #12]
   176d4:	ldr	r2, [sp, #4]
   176d8:	ldr	r2, [r2]
   176dc:	str	r0, [sp]
   176e0:	mov	r0, r1
   176e4:	mov	r1, r2
   176e8:	ldr	r2, [sp]
   176ec:	blx	r2
   176f0:	tst	r0, #1
   176f4:	beq	17708 <__assert_fail@plt+0x622c>
   176f8:	ldr	r0, [sp, #4]
   176fc:	ldr	r0, [r0]
   17700:	str	r0, [fp, #-4]
   17704:	b	17724 <__assert_fail@plt+0x6248>
   17708:	b	1770c <__assert_fail@plt+0x6230>
   1770c:	ldr	r0, [sp, #4]
   17710:	ldr	r0, [r0, #4]
   17714:	str	r0, [sp, #4]
   17718:	b	176a4 <__assert_fail@plt+0x61c8>
   1771c:	movw	r0, #0
   17720:	str	r0, [fp, #-4]
   17724:	ldr	r0, [fp, #-4]
   17728:	mov	sp, fp
   1772c:	pop	{fp, pc}
   17730:	push	{fp, lr}
   17734:	mov	fp, sp
   17738:	sub	sp, sp, #16
   1773c:	str	r0, [fp, #-4]
   17740:	str	r1, [sp, #8]
   17744:	ldr	r0, [fp, #-4]
   17748:	ldr	r0, [r0, #24]
   1774c:	ldr	r1, [sp, #8]
   17750:	ldr	r2, [fp, #-4]
   17754:	ldr	r2, [r2, #8]
   17758:	str	r0, [sp]
   1775c:	mov	r0, r1
   17760:	mov	r1, r2
   17764:	ldr	r2, [sp]
   17768:	blx	r2
   1776c:	str	r0, [sp, #4]
   17770:	ldr	r0, [sp, #4]
   17774:	ldr	r1, [fp, #-4]
   17778:	ldr	r1, [r1, #8]
   1777c:	cmp	r0, r1
   17780:	bcc	17788 <__assert_fail@plt+0x62ac>
   17784:	bl	11494 <abort@plt>
   17788:	ldr	r0, [fp, #-4]
   1778c:	ldr	r0, [r0]
   17790:	ldr	r1, [sp, #4]
   17794:	add	r0, r0, r1, lsl #3
   17798:	mov	sp, fp
   1779c:	pop	{fp, pc}
   177a0:	push	{fp, lr}
   177a4:	mov	fp, sp
   177a8:	sub	sp, sp, #16
   177ac:	str	r0, [sp, #8]
   177b0:	ldr	r0, [sp, #8]
   177b4:	ldr	r0, [r0, #16]
   177b8:	cmp	r0, #0
   177bc:	bne	177cc <__assert_fail@plt+0x62f0>
   177c0:	movw	r0, #0
   177c4:	str	r0, [fp, #-4]
   177c8:	b	1782c <__assert_fail@plt+0x6350>
   177cc:	ldr	r0, [sp, #8]
   177d0:	ldr	r0, [r0]
   177d4:	str	r0, [sp, #4]
   177d8:	ldr	r0, [sp, #4]
   177dc:	ldr	r1, [sp, #8]
   177e0:	ldr	r1, [r1, #4]
   177e4:	cmp	r0, r1
   177e8:	bcc	177f0 <__assert_fail@plt+0x6314>
   177ec:	bl	11494 <abort@plt>
   177f0:	ldr	r0, [sp, #4]
   177f4:	ldr	r0, [r0]
   177f8:	movw	r1, #0
   177fc:	cmp	r0, r1
   17800:	beq	17814 <__assert_fail@plt+0x6338>
   17804:	ldr	r0, [sp, #4]
   17808:	ldr	r0, [r0]
   1780c:	str	r0, [fp, #-4]
   17810:	b	1782c <__assert_fail@plt+0x6350>
   17814:	b	17818 <__assert_fail@plt+0x633c>
   17818:	b	1781c <__assert_fail@plt+0x6340>
   1781c:	ldr	r0, [sp, #4]
   17820:	add	r0, r0, #8
   17824:	str	r0, [sp, #4]
   17828:	b	177d8 <__assert_fail@plt+0x62fc>
   1782c:	ldr	r0, [fp, #-4]
   17830:	mov	sp, fp
   17834:	pop	{fp, pc}
   17838:	push	{fp, lr}
   1783c:	mov	fp, sp
   17840:	sub	sp, sp, #24
   17844:	str	r0, [fp, #-8]
   17848:	str	r1, [sp, #12]
   1784c:	ldr	r0, [fp, #-8]
   17850:	ldr	r1, [sp, #12]
   17854:	bl	17730 <__assert_fail@plt+0x6254>
   17858:	str	r0, [sp, #8]
   1785c:	ldr	r0, [sp, #8]
   17860:	str	r0, [sp, #4]
   17864:	ldr	r0, [sp, #4]
   17868:	ldr	r0, [r0]
   1786c:	ldr	r1, [sp, #12]
   17870:	cmp	r0, r1
   17874:	bne	178a0 <__assert_fail@plt+0x63c4>
   17878:	ldr	r0, [sp, #4]
   1787c:	ldr	r0, [r0, #4]
   17880:	movw	r1, #0
   17884:	cmp	r0, r1
   17888:	beq	178a0 <__assert_fail@plt+0x63c4>
   1788c:	ldr	r0, [sp, #4]
   17890:	ldr	r0, [r0, #4]
   17894:	ldr	r0, [r0]
   17898:	str	r0, [fp, #-4]
   1789c:	b	1790c <__assert_fail@plt+0x6430>
   178a0:	ldr	r0, [sp, #4]
   178a4:	ldr	r0, [r0, #4]
   178a8:	str	r0, [sp, #4]
   178ac:	ldr	r0, [sp, #4]
   178b0:	movw	r1, #0
   178b4:	cmp	r0, r1
   178b8:	bne	17864 <__assert_fail@plt+0x6388>
   178bc:	b	178c0 <__assert_fail@plt+0x63e4>
   178c0:	ldr	r0, [sp, #8]
   178c4:	add	r0, r0, #8
   178c8:	str	r0, [sp, #8]
   178cc:	ldr	r1, [fp, #-8]
   178d0:	ldr	r1, [r1, #4]
   178d4:	cmp	r0, r1
   178d8:	bcs	17904 <__assert_fail@plt+0x6428>
   178dc:	ldr	r0, [sp, #8]
   178e0:	ldr	r0, [r0]
   178e4:	movw	r1, #0
   178e8:	cmp	r0, r1
   178ec:	beq	17900 <__assert_fail@plt+0x6424>
   178f0:	ldr	r0, [sp, #8]
   178f4:	ldr	r0, [r0]
   178f8:	str	r0, [fp, #-4]
   178fc:	b	1790c <__assert_fail@plt+0x6430>
   17900:	b	178c0 <__assert_fail@plt+0x63e4>
   17904:	movw	r0, #0
   17908:	str	r0, [fp, #-4]
   1790c:	ldr	r0, [fp, #-4]
   17910:	mov	sp, fp
   17914:	pop	{fp, pc}
   17918:	sub	sp, sp, #28
   1791c:	str	r0, [sp, #20]
   17920:	str	r1, [sp, #16]
   17924:	str	r2, [sp, #12]
   17928:	movw	r0, #0
   1792c:	str	r0, [sp, #8]
   17930:	ldr	r0, [sp, #20]
   17934:	ldr	r0, [r0]
   17938:	str	r0, [sp, #4]
   1793c:	ldr	r0, [sp, #4]
   17940:	ldr	r1, [sp, #20]
   17944:	ldr	r1, [r1, #4]
   17948:	cmp	r0, r1
   1794c:	bcs	179e0 <__assert_fail@plt+0x6504>
   17950:	ldr	r0, [sp, #4]
   17954:	ldr	r0, [r0]
   17958:	movw	r1, #0
   1795c:	cmp	r0, r1
   17960:	beq	179cc <__assert_fail@plt+0x64f0>
   17964:	ldr	r0, [sp, #4]
   17968:	str	r0, [sp]
   1796c:	ldr	r0, [sp]
   17970:	movw	r1, #0
   17974:	cmp	r0, r1
   17978:	beq	179c8 <__assert_fail@plt+0x64ec>
   1797c:	ldr	r0, [sp, #8]
   17980:	ldr	r1, [sp, #12]
   17984:	cmp	r0, r1
   17988:	bcc	17998 <__assert_fail@plt+0x64bc>
   1798c:	ldr	r0, [sp, #8]
   17990:	str	r0, [sp, #24]
   17994:	b	179e8 <__assert_fail@plt+0x650c>
   17998:	ldr	r0, [sp]
   1799c:	ldr	r0, [r0]
   179a0:	ldr	r1, [sp, #16]
   179a4:	ldr	r2, [sp, #8]
   179a8:	add	r3, r2, #1
   179ac:	str	r3, [sp, #8]
   179b0:	add	r1, r1, r2, lsl #2
   179b4:	str	r0, [r1]
   179b8:	ldr	r0, [sp]
   179bc:	ldr	r0, [r0, #4]
   179c0:	str	r0, [sp]
   179c4:	b	1796c <__assert_fail@plt+0x6490>
   179c8:	b	179cc <__assert_fail@plt+0x64f0>
   179cc:	b	179d0 <__assert_fail@plt+0x64f4>
   179d0:	ldr	r0, [sp, #4]
   179d4:	add	r0, r0, #8
   179d8:	str	r0, [sp, #4]
   179dc:	b	1793c <__assert_fail@plt+0x6460>
   179e0:	ldr	r0, [sp, #8]
   179e4:	str	r0, [sp, #24]
   179e8:	ldr	r0, [sp, #24]
   179ec:	add	sp, sp, #28
   179f0:	bx	lr
   179f4:	push	{fp, lr}
   179f8:	mov	fp, sp
   179fc:	sub	sp, sp, #32
   17a00:	str	r0, [fp, #-8]
   17a04:	str	r1, [fp, #-12]
   17a08:	str	r2, [sp, #16]
   17a0c:	movw	r0, #0
   17a10:	str	r0, [sp, #12]
   17a14:	ldr	r0, [fp, #-8]
   17a18:	ldr	r0, [r0]
   17a1c:	str	r0, [sp, #8]
   17a20:	ldr	r0, [sp, #8]
   17a24:	ldr	r1, [fp, #-8]
   17a28:	ldr	r1, [r1, #4]
   17a2c:	cmp	r0, r1
   17a30:	bcs	17acc <__assert_fail@plt+0x65f0>
   17a34:	ldr	r0, [sp, #8]
   17a38:	ldr	r0, [r0]
   17a3c:	movw	r1, #0
   17a40:	cmp	r0, r1
   17a44:	beq	17ab8 <__assert_fail@plt+0x65dc>
   17a48:	ldr	r0, [sp, #8]
   17a4c:	str	r0, [sp, #4]
   17a50:	ldr	r0, [sp, #4]
   17a54:	movw	r1, #0
   17a58:	cmp	r0, r1
   17a5c:	beq	17ab4 <__assert_fail@plt+0x65d8>
   17a60:	ldr	r0, [fp, #-12]
   17a64:	ldr	r1, [sp, #4]
   17a68:	ldr	r1, [r1]
   17a6c:	ldr	r2, [sp, #16]
   17a70:	str	r0, [sp]
   17a74:	mov	r0, r1
   17a78:	mov	r1, r2
   17a7c:	ldr	r2, [sp]
   17a80:	blx	r2
   17a84:	tst	r0, #1
   17a88:	bne	17a98 <__assert_fail@plt+0x65bc>
   17a8c:	ldr	r0, [sp, #12]
   17a90:	str	r0, [fp, #-4]
   17a94:	b	17ad4 <__assert_fail@plt+0x65f8>
   17a98:	ldr	r0, [sp, #12]
   17a9c:	add	r0, r0, #1
   17aa0:	str	r0, [sp, #12]
   17aa4:	ldr	r0, [sp, #4]
   17aa8:	ldr	r0, [r0, #4]
   17aac:	str	r0, [sp, #4]
   17ab0:	b	17a50 <__assert_fail@plt+0x6574>
   17ab4:	b	17ab8 <__assert_fail@plt+0x65dc>
   17ab8:	b	17abc <__assert_fail@plt+0x65e0>
   17abc:	ldr	r0, [sp, #8]
   17ac0:	add	r0, r0, #8
   17ac4:	str	r0, [sp, #8]
   17ac8:	b	17a20 <__assert_fail@plt+0x6544>
   17acc:	ldr	r0, [sp, #12]
   17ad0:	str	r0, [fp, #-4]
   17ad4:	ldr	r0, [fp, #-4]
   17ad8:	mov	sp, fp
   17adc:	pop	{fp, pc}
   17ae0:	sub	sp, sp, #16
   17ae4:	str	r0, [sp, #12]
   17ae8:	str	r1, [sp, #8]
   17aec:	movw	r0, #0
   17af0:	str	r0, [sp, #4]
   17af4:	ldr	r0, [sp, #12]
   17af8:	ldrb	r0, [r0]
   17afc:	strb	r0, [sp, #3]
   17b00:	sxtb	r0, r0
   17b04:	cmp	r0, #0
   17b08:	beq	17b3c <__assert_fail@plt+0x6660>
   17b0c:	ldr	r0, [sp, #4]
   17b10:	rsb	r0, r0, r0, lsl #5
   17b14:	ldrb	r1, [sp, #3]
   17b18:	add	r0, r0, r1
   17b1c:	ldr	r1, [sp, #8]
   17b20:	udiv	r2, r0, r1
   17b24:	mls	r0, r2, r1, r0
   17b28:	str	r0, [sp, #4]
   17b2c:	ldr	r0, [sp, #12]
   17b30:	add	r0, r0, #1
   17b34:	str	r0, [sp, #12]
   17b38:	b	17af4 <__assert_fail@plt+0x6618>
   17b3c:	ldr	r0, [sp, #4]
   17b40:	add	sp, sp, #16
   17b44:	bx	lr
   17b48:	push	{fp, lr}
   17b4c:	mov	fp, sp
   17b50:	sub	sp, sp, #8
   17b54:	movw	r1, #22216	; 0x56c8
   17b58:	movt	r1, #2
   17b5c:	str	r0, [sp, #4]
   17b60:	ldr	r0, [sp, #4]
   17b64:	movw	r2, #20
   17b68:	bl	1123c <memcpy@plt>
   17b6c:	mov	sp, fp
   17b70:	pop	{fp, pc}
   17b74:	push	{fp, lr}
   17b78:	mov	fp, sp
   17b7c:	sub	sp, sp, #32
   17b80:	ldr	ip, [fp, #8]
   17b84:	str	r0, [fp, #-8]
   17b88:	str	r1, [fp, #-12]
   17b8c:	str	r2, [sp, #16]
   17b90:	str	r3, [sp, #12]
   17b94:	ldr	r0, [sp, #16]
   17b98:	movw	r1, #0
   17b9c:	cmp	r0, r1
   17ba0:	str	ip, [sp, #4]
   17ba4:	bne	17bb4 <__assert_fail@plt+0x66d8>
   17ba8:	movw	r0, #32012	; 0x7d0c
   17bac:	movt	r0, #1
   17bb0:	str	r0, [sp, #16]
   17bb4:	ldr	r0, [sp, #12]
   17bb8:	movw	r1, #0
   17bbc:	cmp	r0, r1
   17bc0:	bne	17bd0 <__assert_fail@plt+0x66f4>
   17bc4:	movw	r0, #32072	; 0x7d48
   17bc8:	movt	r0, #1
   17bcc:	str	r0, [sp, #12]
   17bd0:	movw	r0, #40	; 0x28
   17bd4:	bl	217c0 <__assert_fail@plt+0x102e4>
   17bd8:	str	r0, [sp, #8]
   17bdc:	ldr	r0, [sp, #8]
   17be0:	movw	lr, #0
   17be4:	cmp	r0, lr
   17be8:	bne	17bf8 <__assert_fail@plt+0x671c>
   17bec:	movw	r0, #0
   17bf0:	str	r0, [fp, #-4]
   17bf4:	b	17d00 <__assert_fail@plt+0x6824>
   17bf8:	ldr	r0, [fp, #-12]
   17bfc:	movw	r1, #0
   17c00:	cmp	r0, r1
   17c04:	bne	17c14 <__assert_fail@plt+0x6738>
   17c08:	movw	r0, #22216	; 0x56c8
   17c0c:	movt	r0, #2
   17c10:	str	r0, [fp, #-12]
   17c14:	ldr	r0, [fp, #-12]
   17c18:	ldr	r1, [sp, #8]
   17c1c:	str	r0, [r1, #20]
   17c20:	ldr	r0, [sp, #8]
   17c24:	bl	17d74 <__assert_fail@plt+0x6898>
   17c28:	tst	r0, #1
   17c2c:	bne	17c34 <__assert_fail@plt+0x6758>
   17c30:	b	17cf0 <__assert_fail@plt+0x6814>
   17c34:	ldr	r0, [fp, #-8]
   17c38:	ldr	r1, [fp, #-12]
   17c3c:	bl	17ec8 <__assert_fail@plt+0x69ec>
   17c40:	ldr	r1, [sp, #8]
   17c44:	str	r0, [r1, #8]
   17c48:	ldr	r0, [sp, #8]
   17c4c:	ldr	r0, [r0, #8]
   17c50:	cmp	r0, #0
   17c54:	bne	17c5c <__assert_fail@plt+0x6780>
   17c58:	b	17cf0 <__assert_fail@plt+0x6814>
   17c5c:	ldr	r0, [sp, #8]
   17c60:	ldr	r0, [r0, #8]
   17c64:	movw	r1, #8
   17c68:	bl	21724 <__assert_fail@plt+0x10248>
   17c6c:	ldr	r1, [sp, #8]
   17c70:	str	r0, [r1]
   17c74:	ldr	r0, [sp, #8]
   17c78:	ldr	r0, [r0]
   17c7c:	movw	r1, #0
   17c80:	cmp	r0, r1
   17c84:	bne	17c8c <__assert_fail@plt+0x67b0>
   17c88:	b	17cf0 <__assert_fail@plt+0x6814>
   17c8c:	ldr	r0, [sp, #8]
   17c90:	ldr	r1, [r0]
   17c94:	ldr	r0, [r0, #8]
   17c98:	add	r0, r1, r0, lsl #3
   17c9c:	ldr	r1, [sp, #8]
   17ca0:	str	r0, [r1, #4]
   17ca4:	ldr	r0, [sp, #8]
   17ca8:	movw	r1, #0
   17cac:	str	r1, [r0, #12]
   17cb0:	ldr	r0, [sp, #8]
   17cb4:	str	r1, [r0, #16]
   17cb8:	ldr	r0, [sp, #16]
   17cbc:	ldr	r2, [sp, #8]
   17cc0:	str	r0, [r2, #24]
   17cc4:	ldr	r0, [sp, #12]
   17cc8:	ldr	r2, [sp, #8]
   17ccc:	str	r0, [r2, #28]
   17cd0:	ldr	r0, [fp, #8]
   17cd4:	ldr	r2, [sp, #8]
   17cd8:	str	r0, [r2, #32]
   17cdc:	ldr	r0, [sp, #8]
   17ce0:	str	r1, [r0, #36]	; 0x24
   17ce4:	ldr	r0, [sp, #8]
   17ce8:	str	r0, [fp, #-4]
   17cec:	b	17d00 <__assert_fail@plt+0x6824>
   17cf0:	ldr	r0, [sp, #8]
   17cf4:	bl	13878 <__assert_fail@plt+0x239c>
   17cf8:	movw	r0, #0
   17cfc:	str	r0, [fp, #-4]
   17d00:	ldr	r0, [fp, #-4]
   17d04:	mov	sp, fp
   17d08:	pop	{fp, pc}
   17d0c:	push	{fp, lr}
   17d10:	mov	fp, sp
   17d14:	sub	sp, sp, #16
   17d18:	str	r0, [fp, #-4]
   17d1c:	str	r1, [sp, #8]
   17d20:	ldr	r0, [fp, #-4]
   17d24:	mov	r1, #3
   17d28:	bl	21a74 <__assert_fail@plt+0x10598>
   17d2c:	str	r0, [sp, #4]
   17d30:	ldr	r0, [sp, #4]
   17d34:	ldr	r1, [sp, #8]
   17d38:	udiv	lr, r0, r1
   17d3c:	mls	r0, lr, r1, r0
   17d40:	mov	sp, fp
   17d44:	pop	{fp, pc}
   17d48:	sub	sp, sp, #8
   17d4c:	str	r0, [sp, #4]
   17d50:	str	r1, [sp]
   17d54:	ldr	r0, [sp, #4]
   17d58:	ldr	r1, [sp]
   17d5c:	cmp	r0, r1
   17d60:	movw	r0, #0
   17d64:	moveq	r0, #1
   17d68:	and	r0, r0, #1
   17d6c:	add	sp, sp, #8
   17d70:	bx	lr
   17d74:	sub	sp, sp, #16
   17d78:	str	r0, [sp, #8]
   17d7c:	ldr	r0, [sp, #8]
   17d80:	ldr	r0, [r0, #20]
   17d84:	str	r0, [sp, #4]
   17d88:	ldr	r0, [sp, #4]
   17d8c:	movw	r1, #22216	; 0x56c8
   17d90:	movt	r1, #2
   17d94:	cmp	r0, r1
   17d98:	bne	17dac <__assert_fail@plt+0x68d0>
   17d9c:	movw	r0, #1
   17da0:	and	r0, r0, #1
   17da4:	strb	r0, [sp, #15]
   17da8:	b	17eb0 <__assert_fail@plt+0x69d4>
   17dac:	vldr	s0, [pc, #268]	; 17ec0 <__assert_fail@plt+0x69e4>
   17db0:	vstr	s0, [sp]
   17db4:	vldr	s0, [sp]
   17db8:	ldr	r0, [sp, #4]
   17dbc:	vldr	s2, [r0, #8]
   17dc0:	vcmpe.f32	s0, s2
   17dc4:	vmrs	APSR_nzcv, fpscr
   17dc8:	bpl	17e94 <__assert_fail@plt+0x69b8>
   17dcc:	ldr	r0, [sp, #4]
   17dd0:	vldr	s0, [r0, #8]
   17dd4:	vldr	s2, [sp]
   17dd8:	vmov.f32	s4, #112	; 0x3f800000  1.0
   17ddc:	vsub.f32	s2, s4, s2
   17de0:	vcmpe.f32	s0, s2
   17de4:	vmrs	APSR_nzcv, fpscr
   17de8:	bpl	17e94 <__assert_fail@plt+0x69b8>
   17dec:	vldr	s0, [sp]
   17df0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17df4:	vadd.f32	s0, s2, s0
   17df8:	ldr	r0, [sp, #4]
   17dfc:	vldr	s2, [r0, #12]
   17e00:	vcmpe.f32	s0, s2
   17e04:	vmrs	APSR_nzcv, fpscr
   17e08:	bpl	17e94 <__assert_fail@plt+0x69b8>
   17e0c:	vldr	s0, [pc, #176]	; 17ec4 <__assert_fail@plt+0x69e8>
   17e10:	ldr	r0, [sp, #4]
   17e14:	vldr	s2, [r0]
   17e18:	vcmpe.f32	s0, s2
   17e1c:	vmrs	APSR_nzcv, fpscr
   17e20:	bhi	17e94 <__assert_fail@plt+0x69b8>
   17e24:	ldr	r0, [sp, #4]
   17e28:	vldr	s0, [r0]
   17e2c:	vldr	s2, [sp]
   17e30:	vadd.f32	s0, s0, s2
   17e34:	ldr	r0, [sp, #4]
   17e38:	vldr	s2, [r0, #4]
   17e3c:	vcmpe.f32	s0, s2
   17e40:	vmrs	APSR_nzcv, fpscr
   17e44:	bpl	17e94 <__assert_fail@plt+0x69b8>
   17e48:	ldr	r0, [sp, #4]
   17e4c:	vldr	s0, [r0, #4]
   17e50:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17e54:	vcmpe.f32	s0, s2
   17e58:	vmrs	APSR_nzcv, fpscr
   17e5c:	bhi	17e94 <__assert_fail@plt+0x69b8>
   17e60:	ldr	r0, [sp, #4]
   17e64:	vldr	s0, [r0]
   17e68:	vldr	s2, [sp]
   17e6c:	vadd.f32	s0, s0, s2
   17e70:	ldr	r0, [sp, #4]
   17e74:	vldr	s2, [r0, #8]
   17e78:	vcmpe.f32	s0, s2
   17e7c:	vmrs	APSR_nzcv, fpscr
   17e80:	bpl	17e94 <__assert_fail@plt+0x69b8>
   17e84:	movw	r0, #1
   17e88:	and	r0, r0, #1
   17e8c:	strb	r0, [sp, #15]
   17e90:	b	17eb0 <__assert_fail@plt+0x69d4>
   17e94:	ldr	r0, [sp, #8]
   17e98:	movw	r1, #22216	; 0x56c8
   17e9c:	movt	r1, #2
   17ea0:	str	r1, [r0, #20]
   17ea4:	movw	r0, #0
   17ea8:	and	r0, r0, #1
   17eac:	strb	r0, [sp, #15]
   17eb0:	ldrb	r0, [sp, #15]
   17eb4:	and	r0, r0, #1
   17eb8:	add	sp, sp, #16
   17ebc:	bx	lr
   17ec0:	stclcc	12, cr12, [ip, #820]	; 0x334
   17ec4:	andeq	r0, r0, r0
   17ec8:	push	{fp, lr}
   17ecc:	mov	fp, sp
   17ed0:	sub	sp, sp, #16
   17ed4:	str	r0, [sp, #8]
   17ed8:	str	r1, [sp, #4]
   17edc:	ldr	r0, [sp, #4]
   17ee0:	ldrb	r0, [r0, #16]
   17ee4:	tst	r0, #1
   17ee8:	bne	17f38 <__assert_fail@plt+0x6a5c>
   17eec:	vldr	s0, [pc, #128]	; 17f74 <__assert_fail@plt+0x6a98>
   17ef0:	ldr	r0, [sp, #8]
   17ef4:	vmov	s2, r0
   17ef8:	vcvt.f32.u32	s2, s2
   17efc:	ldr	r0, [sp, #4]
   17f00:	vldr	s4, [r0, #8]
   17f04:	vdiv.f32	s2, s2, s4
   17f08:	vstr	s2, [sp]
   17f0c:	vldr	s2, [sp]
   17f10:	vcmpe.f32	s0, s2
   17f14:	vmrs	APSR_nzcv, fpscr
   17f18:	bhi	17f28 <__assert_fail@plt+0x6a4c>
   17f1c:	movw	r0, #0
   17f20:	str	r0, [fp, #-4]
   17f24:	b	17f68 <__assert_fail@plt+0x6a8c>
   17f28:	vldr	s0, [sp]
   17f2c:	vcvt.u32.f32	s0, s0
   17f30:	vmov	r0, s0
   17f34:	str	r0, [sp, #8]
   17f38:	ldr	r0, [sp, #8]
   17f3c:	bl	18e40 <__assert_fail@plt+0x7964>
   17f40:	ldr	lr, [pc, #48]	; 17f78 <__assert_fail@plt+0x6a9c>
   17f44:	str	r0, [sp, #8]
   17f48:	ldr	r0, [sp, #8]
   17f4c:	cmp	lr, r0
   17f50:	bcs	17f60 <__assert_fail@plt+0x6a84>
   17f54:	movw	r0, #0
   17f58:	str	r0, [fp, #-4]
   17f5c:	b	17f68 <__assert_fail@plt+0x6a8c>
   17f60:	ldr	r0, [sp, #8]
   17f64:	str	r0, [fp, #-4]
   17f68:	ldr	r0, [fp, #-4]
   17f6c:	mov	sp, fp
   17f70:	pop	{fp, pc}
   17f74:	svcmi	0x00800000
   17f78:	svcne	0x00ffffff
   17f7c:	push	{fp, lr}
   17f80:	mov	fp, sp
   17f84:	sub	sp, sp, #24
   17f88:	str	r0, [fp, #-4]
   17f8c:	ldr	r0, [fp, #-4]
   17f90:	ldr	r0, [r0]
   17f94:	str	r0, [fp, #-8]
   17f98:	ldr	r0, [fp, #-8]
   17f9c:	ldr	r1, [fp, #-4]
   17fa0:	ldr	r1, [r1, #4]
   17fa4:	cmp	r0, r1
   17fa8:	bcs	180ac <__assert_fail@plt+0x6bd0>
   17fac:	ldr	r0, [fp, #-8]
   17fb0:	ldr	r0, [r0]
   17fb4:	movw	r1, #0
   17fb8:	cmp	r0, r1
   17fbc:	beq	18098 <__assert_fail@plt+0x6bbc>
   17fc0:	ldr	r0, [fp, #-8]
   17fc4:	ldr	r0, [r0, #4]
   17fc8:	str	r0, [sp, #12]
   17fcc:	ldr	r0, [sp, #12]
   17fd0:	movw	r1, #0
   17fd4:	cmp	r0, r1
   17fd8:	beq	18050 <__assert_fail@plt+0x6b74>
   17fdc:	ldr	r0, [fp, #-4]
   17fe0:	ldr	r0, [r0, #32]
   17fe4:	movw	r1, #0
   17fe8:	cmp	r0, r1
   17fec:	beq	18010 <__assert_fail@plt+0x6b34>
   17ff0:	ldr	r0, [fp, #-4]
   17ff4:	ldr	r0, [r0, #32]
   17ff8:	ldr	r1, [sp, #12]
   17ffc:	ldr	r1, [r1]
   18000:	str	r0, [sp, #4]
   18004:	mov	r0, r1
   18008:	ldr	r1, [sp, #4]
   1800c:	blx	r1
   18010:	ldr	r0, [sp, #12]
   18014:	movw	r1, #0
   18018:	str	r1, [r0]
   1801c:	ldr	r0, [sp, #12]
   18020:	ldr	r0, [r0, #4]
   18024:	str	r0, [sp, #8]
   18028:	ldr	r0, [fp, #-4]
   1802c:	ldr	r0, [r0, #36]	; 0x24
   18030:	ldr	r1, [sp, #12]
   18034:	str	r0, [r1, #4]
   18038:	ldr	r0, [sp, #12]
   1803c:	ldr	r1, [fp, #-4]
   18040:	str	r0, [r1, #36]	; 0x24
   18044:	ldr	r0, [sp, #8]
   18048:	str	r0, [sp, #12]
   1804c:	b	17fcc <__assert_fail@plt+0x6af0>
   18050:	ldr	r0, [fp, #-4]
   18054:	ldr	r0, [r0, #32]
   18058:	movw	r1, #0
   1805c:	cmp	r0, r1
   18060:	beq	18084 <__assert_fail@plt+0x6ba8>
   18064:	ldr	r0, [fp, #-4]
   18068:	ldr	r0, [r0, #32]
   1806c:	ldr	r1, [fp, #-8]
   18070:	ldr	r1, [r1]
   18074:	str	r0, [sp]
   18078:	mov	r0, r1
   1807c:	ldr	r1, [sp]
   18080:	blx	r1
   18084:	ldr	r0, [fp, #-8]
   18088:	movw	r1, #0
   1808c:	str	r1, [r0]
   18090:	ldr	r0, [fp, #-8]
   18094:	str	r1, [r0, #4]
   18098:	b	1809c <__assert_fail@plt+0x6bc0>
   1809c:	ldr	r0, [fp, #-8]
   180a0:	add	r0, r0, #8
   180a4:	str	r0, [fp, #-8]
   180a8:	b	17f98 <__assert_fail@plt+0x6abc>
   180ac:	ldr	r0, [fp, #-4]
   180b0:	movw	r1, #0
   180b4:	str	r1, [r0, #12]
   180b8:	ldr	r0, [fp, #-4]
   180bc:	str	r1, [r0, #16]
   180c0:	mov	sp, fp
   180c4:	pop	{fp, pc}
   180c8:	push	{fp, lr}
   180cc:	mov	fp, sp
   180d0:	sub	sp, sp, #24
   180d4:	str	r0, [fp, #-4]
   180d8:	ldr	r0, [fp, #-4]
   180dc:	ldr	r0, [r0, #32]
   180e0:	movw	r1, #0
   180e4:	cmp	r0, r1
   180e8:	beq	18194 <__assert_fail@plt+0x6cb8>
   180ec:	ldr	r0, [fp, #-4]
   180f0:	ldr	r0, [r0, #16]
   180f4:	cmp	r0, #0
   180f8:	beq	18194 <__assert_fail@plt+0x6cb8>
   180fc:	ldr	r0, [fp, #-4]
   18100:	ldr	r0, [r0]
   18104:	str	r0, [fp, #-8]
   18108:	ldr	r0, [fp, #-8]
   1810c:	ldr	r1, [fp, #-4]
   18110:	ldr	r1, [r1, #4]
   18114:	cmp	r0, r1
   18118:	bcs	18190 <__assert_fail@plt+0x6cb4>
   1811c:	ldr	r0, [fp, #-8]
   18120:	ldr	r0, [r0]
   18124:	movw	r1, #0
   18128:	cmp	r0, r1
   1812c:	beq	1817c <__assert_fail@plt+0x6ca0>
   18130:	ldr	r0, [fp, #-8]
   18134:	str	r0, [sp, #12]
   18138:	ldr	r0, [sp, #12]
   1813c:	movw	r1, #0
   18140:	cmp	r0, r1
   18144:	beq	18178 <__assert_fail@plt+0x6c9c>
   18148:	ldr	r0, [fp, #-4]
   1814c:	ldr	r0, [r0, #32]
   18150:	ldr	r1, [sp, #12]
   18154:	ldr	r1, [r1]
   18158:	str	r0, [sp, #4]
   1815c:	mov	r0, r1
   18160:	ldr	r1, [sp, #4]
   18164:	blx	r1
   18168:	ldr	r0, [sp, #12]
   1816c:	ldr	r0, [r0, #4]
   18170:	str	r0, [sp, #12]
   18174:	b	18138 <__assert_fail@plt+0x6c5c>
   18178:	b	1817c <__assert_fail@plt+0x6ca0>
   1817c:	b	18180 <__assert_fail@plt+0x6ca4>
   18180:	ldr	r0, [fp, #-8]
   18184:	add	r0, r0, #8
   18188:	str	r0, [fp, #-8]
   1818c:	b	18108 <__assert_fail@plt+0x6c2c>
   18190:	b	18194 <__assert_fail@plt+0x6cb8>
   18194:	ldr	r0, [fp, #-4]
   18198:	ldr	r0, [r0]
   1819c:	str	r0, [fp, #-8]
   181a0:	ldr	r0, [fp, #-8]
   181a4:	ldr	r1, [fp, #-4]
   181a8:	ldr	r1, [r1, #4]
   181ac:	cmp	r0, r1
   181b0:	bcs	18204 <__assert_fail@plt+0x6d28>
   181b4:	ldr	r0, [fp, #-8]
   181b8:	ldr	r0, [r0, #4]
   181bc:	str	r0, [sp, #12]
   181c0:	ldr	r0, [sp, #12]
   181c4:	movw	r1, #0
   181c8:	cmp	r0, r1
   181cc:	beq	181f0 <__assert_fail@plt+0x6d14>
   181d0:	ldr	r0, [sp, #12]
   181d4:	ldr	r0, [r0, #4]
   181d8:	str	r0, [sp, #8]
   181dc:	ldr	r0, [sp, #12]
   181e0:	bl	13878 <__assert_fail@plt+0x239c>
   181e4:	ldr	r0, [sp, #8]
   181e8:	str	r0, [sp, #12]
   181ec:	b	181c0 <__assert_fail@plt+0x6ce4>
   181f0:	b	181f4 <__assert_fail@plt+0x6d18>
   181f4:	ldr	r0, [fp, #-8]
   181f8:	add	r0, r0, #8
   181fc:	str	r0, [fp, #-8]
   18200:	b	181a0 <__assert_fail@plt+0x6cc4>
   18204:	ldr	r0, [fp, #-4]
   18208:	ldr	r0, [r0, #36]	; 0x24
   1820c:	str	r0, [sp, #12]
   18210:	ldr	r0, [sp, #12]
   18214:	movw	r1, #0
   18218:	cmp	r0, r1
   1821c:	beq	18240 <__assert_fail@plt+0x6d64>
   18220:	ldr	r0, [sp, #12]
   18224:	ldr	r0, [r0, #4]
   18228:	str	r0, [sp, #8]
   1822c:	ldr	r0, [sp, #12]
   18230:	bl	13878 <__assert_fail@plt+0x239c>
   18234:	ldr	r0, [sp, #8]
   18238:	str	r0, [sp, #12]
   1823c:	b	18210 <__assert_fail@plt+0x6d34>
   18240:	ldr	r0, [fp, #-4]
   18244:	ldr	r0, [r0]
   18248:	bl	13878 <__assert_fail@plt+0x239c>
   1824c:	ldr	r0, [fp, #-4]
   18250:	bl	13878 <__assert_fail@plt+0x239c>
   18254:	mov	sp, fp
   18258:	pop	{fp, pc}
   1825c:	push	{fp, lr}
   18260:	mov	fp, sp
   18264:	sub	sp, sp, #64	; 0x40
   18268:	str	r0, [fp, #-8]
   1826c:	str	r1, [fp, #-12]
   18270:	ldr	r0, [fp, #-12]
   18274:	ldr	r1, [fp, #-8]
   18278:	ldr	r1, [r1, #20]
   1827c:	bl	17ec8 <__assert_fail@plt+0x69ec>
   18280:	str	r0, [sp, #4]
   18284:	ldr	r0, [sp, #4]
   18288:	cmp	r0, #0
   1828c:	bne	182a0 <__assert_fail@plt+0x6dc4>
   18290:	movw	r0, #0
   18294:	and	r0, r0, #1
   18298:	strb	r0, [fp, #-1]
   1829c:	b	18478 <__assert_fail@plt+0x6f9c>
   182a0:	ldr	r0, [sp, #4]
   182a4:	ldr	r1, [fp, #-8]
   182a8:	ldr	r1, [r1, #8]
   182ac:	cmp	r0, r1
   182b0:	bne	182c4 <__assert_fail@plt+0x6de8>
   182b4:	movw	r0, #1
   182b8:	and	r0, r0, #1
   182bc:	strb	r0, [fp, #-1]
   182c0:	b	18478 <__assert_fail@plt+0x6f9c>
   182c4:	add	r0, sp, #12
   182c8:	str	r0, [sp, #8]
   182cc:	ldr	r0, [sp, #4]
   182d0:	movw	r1, #8
   182d4:	bl	21724 <__assert_fail@plt+0x10248>
   182d8:	ldr	r1, [sp, #8]
   182dc:	str	r0, [r1]
   182e0:	ldr	r0, [sp, #8]
   182e4:	ldr	r0, [r0]
   182e8:	movw	r1, #0
   182ec:	cmp	r0, r1
   182f0:	bne	18304 <__assert_fail@plt+0x6e28>
   182f4:	movw	r0, #0
   182f8:	and	r0, r0, #1
   182fc:	strb	r0, [fp, #-1]
   18300:	b	18478 <__assert_fail@plt+0x6f9c>
   18304:	ldr	r0, [sp, #4]
   18308:	ldr	r1, [sp, #8]
   1830c:	str	r0, [r1, #8]
   18310:	ldr	r0, [sp, #8]
   18314:	ldr	r0, [r0]
   18318:	ldr	r1, [sp, #4]
   1831c:	add	r0, r0, r1, lsl #3
   18320:	ldr	r1, [sp, #8]
   18324:	str	r0, [r1, #4]
   18328:	ldr	r0, [sp, #8]
   1832c:	movw	r1, #0
   18330:	str	r1, [r0, #12]
   18334:	ldr	r0, [sp, #8]
   18338:	str	r1, [r0, #16]
   1833c:	ldr	r0, [fp, #-8]
   18340:	ldr	r0, [r0, #20]
   18344:	ldr	r1, [sp, #8]
   18348:	str	r0, [r1, #20]
   1834c:	ldr	r0, [fp, #-8]
   18350:	ldr	r0, [r0, #24]
   18354:	ldr	r1, [sp, #8]
   18358:	str	r0, [r1, #24]
   1835c:	ldr	r0, [fp, #-8]
   18360:	ldr	r0, [r0, #28]
   18364:	ldr	r1, [sp, #8]
   18368:	str	r0, [r1, #28]
   1836c:	ldr	r0, [fp, #-8]
   18370:	ldr	r0, [r0, #32]
   18374:	ldr	r1, [sp, #8]
   18378:	str	r0, [r1, #32]
   1837c:	ldr	r0, [fp, #-8]
   18380:	ldr	r0, [r0, #36]	; 0x24
   18384:	ldr	r1, [sp, #8]
   18388:	str	r0, [r1, #36]	; 0x24
   1838c:	ldr	r0, [sp, #8]
   18390:	ldr	r1, [fp, #-8]
   18394:	movw	r2, #0
   18398:	and	r2, r2, #1
   1839c:	bl	18488 <__assert_fail@plt+0x6fac>
   183a0:	tst	r0, #1
   183a4:	beq	18414 <__assert_fail@plt+0x6f38>
   183a8:	ldr	r0, [fp, #-8]
   183ac:	ldr	r0, [r0]
   183b0:	bl	13878 <__assert_fail@plt+0x239c>
   183b4:	ldr	r0, [sp, #8]
   183b8:	ldr	r0, [r0]
   183bc:	ldr	lr, [fp, #-8]
   183c0:	str	r0, [lr]
   183c4:	ldr	r0, [sp, #8]
   183c8:	ldr	r0, [r0, #4]
   183cc:	ldr	lr, [fp, #-8]
   183d0:	str	r0, [lr, #4]
   183d4:	ldr	r0, [sp, #8]
   183d8:	ldr	r0, [r0, #8]
   183dc:	ldr	lr, [fp, #-8]
   183e0:	str	r0, [lr, #8]
   183e4:	ldr	r0, [sp, #8]
   183e8:	ldr	r0, [r0, #12]
   183ec:	ldr	lr, [fp, #-8]
   183f0:	str	r0, [lr, #12]
   183f4:	ldr	r0, [sp, #8]
   183f8:	ldr	r0, [r0, #36]	; 0x24
   183fc:	ldr	lr, [fp, #-8]
   18400:	str	r0, [lr, #36]	; 0x24
   18404:	movw	r0, #1
   18408:	and	r0, r0, #1
   1840c:	strb	r0, [fp, #-1]
   18410:	b	18478 <__assert_fail@plt+0x6f9c>
   18414:	ldr	r0, [sp, #8]
   18418:	ldr	r0, [r0, #36]	; 0x24
   1841c:	ldr	r1, [fp, #-8]
   18420:	str	r0, [r1, #36]	; 0x24
   18424:	ldr	r0, [fp, #-8]
   18428:	ldr	r1, [sp, #8]
   1842c:	movw	r2, #1
   18430:	and	r2, r2, #1
   18434:	bl	18488 <__assert_fail@plt+0x6fac>
   18438:	tst	r0, #1
   1843c:	beq	1845c <__assert_fail@plt+0x6f80>
   18440:	ldr	r0, [fp, #-8]
   18444:	ldr	r1, [sp, #8]
   18448:	movw	r2, #0
   1844c:	and	r2, r2, #1
   18450:	bl	18488 <__assert_fail@plt+0x6fac>
   18454:	tst	r0, #1
   18458:	bne	18460 <__assert_fail@plt+0x6f84>
   1845c:	bl	11494 <abort@plt>
   18460:	ldr	r0, [sp, #8]
   18464:	ldr	r0, [r0]
   18468:	bl	13878 <__assert_fail@plt+0x239c>
   1846c:	movw	r0, #0
   18470:	and	r0, r0, #1
   18474:	strb	r0, [fp, #-1]
   18478:	ldrb	r0, [fp, #-1]
   1847c:	and	r0, r0, #1
   18480:	mov	sp, fp
   18484:	pop	{fp, pc}
   18488:	push	{fp, lr}
   1848c:	mov	fp, sp
   18490:	sub	sp, sp, #40	; 0x28
   18494:	str	r0, [fp, #-8]
   18498:	str	r1, [fp, #-12]
   1849c:	and	r0, r2, #1
   184a0:	strb	r0, [fp, #-13]
   184a4:	ldr	r0, [fp, #-12]
   184a8:	ldr	r0, [r0]
   184ac:	str	r0, [sp, #20]
   184b0:	ldr	r0, [sp, #20]
   184b4:	ldr	r1, [fp, #-12]
   184b8:	ldr	r1, [r1, #4]
   184bc:	cmp	r0, r1
   184c0:	bcs	1867c <__assert_fail@plt+0x71a0>
   184c4:	ldr	r0, [sp, #20]
   184c8:	ldr	r0, [r0]
   184cc:	movw	r1, #0
   184d0:	cmp	r0, r1
   184d4:	beq	18668 <__assert_fail@plt+0x718c>
   184d8:	ldr	r0, [sp, #20]
   184dc:	ldr	r0, [r0, #4]
   184e0:	str	r0, [sp, #16]
   184e4:	ldr	r0, [sp, #16]
   184e8:	movw	r1, #0
   184ec:	cmp	r0, r1
   184f0:	beq	18588 <__assert_fail@plt+0x70ac>
   184f4:	ldr	r0, [sp, #16]
   184f8:	ldr	r0, [r0]
   184fc:	str	r0, [sp, #8]
   18500:	ldr	r0, [fp, #-8]
   18504:	ldr	r1, [sp, #8]
   18508:	bl	17730 <__assert_fail@plt+0x6254>
   1850c:	str	r0, [sp, #4]
   18510:	ldr	r0, [sp, #16]
   18514:	ldr	r0, [r0, #4]
   18518:	str	r0, [sp, #12]
   1851c:	ldr	r0, [sp, #4]
   18520:	ldr	r0, [r0]
   18524:	movw	r1, #0
   18528:	cmp	r0, r1
   1852c:	beq	18550 <__assert_fail@plt+0x7074>
   18530:	ldr	r0, [sp, #4]
   18534:	ldr	r0, [r0, #4]
   18538:	ldr	r1, [sp, #16]
   1853c:	str	r0, [r1, #4]
   18540:	ldr	r0, [sp, #16]
   18544:	ldr	r1, [sp, #4]
   18548:	str	r0, [r1, #4]
   1854c:	b	18578 <__assert_fail@plt+0x709c>
   18550:	ldr	r0, [sp, #8]
   18554:	ldr	r1, [sp, #4]
   18558:	str	r0, [r1]
   1855c:	ldr	r0, [fp, #-8]
   18560:	ldr	r1, [r0, #12]
   18564:	add	r1, r1, #1
   18568:	str	r1, [r0, #12]
   1856c:	ldr	r0, [fp, #-8]
   18570:	ldr	r1, [sp, #16]
   18574:	bl	18f98 <__assert_fail@plt+0x7abc>
   18578:	b	1857c <__assert_fail@plt+0x70a0>
   1857c:	ldr	r0, [sp, #12]
   18580:	str	r0, [sp, #16]
   18584:	b	184e4 <__assert_fail@plt+0x7008>
   18588:	ldr	r0, [sp, #20]
   1858c:	ldr	r0, [r0]
   18590:	str	r0, [sp, #8]
   18594:	ldr	r0, [sp, #20]
   18598:	movw	r1, #0
   1859c:	str	r1, [r0, #4]
   185a0:	ldrb	r0, [fp, #-13]
   185a4:	tst	r0, #1
   185a8:	beq	185b0 <__assert_fail@plt+0x70d4>
   185ac:	b	1866c <__assert_fail@plt+0x7190>
   185b0:	ldr	r0, [fp, #-8]
   185b4:	ldr	r1, [sp, #8]
   185b8:	bl	17730 <__assert_fail@plt+0x6254>
   185bc:	str	r0, [sp, #4]
   185c0:	ldr	r0, [sp, #4]
   185c4:	ldr	r0, [r0]
   185c8:	movw	r1, #0
   185cc:	cmp	r0, r1
   185d0:	beq	1862c <__assert_fail@plt+0x7150>
   185d4:	ldr	r0, [fp, #-8]
   185d8:	bl	18b44 <__assert_fail@plt+0x7668>
   185dc:	str	r0, [sp]
   185e0:	ldr	r0, [sp]
   185e4:	movw	lr, #0
   185e8:	cmp	r0, lr
   185ec:	bne	18600 <__assert_fail@plt+0x7124>
   185f0:	movw	r0, #0
   185f4:	and	r0, r0, #1
   185f8:	strb	r0, [fp, #-1]
   185fc:	b	18688 <__assert_fail@plt+0x71ac>
   18600:	ldr	r0, [sp, #8]
   18604:	ldr	r1, [sp]
   18608:	str	r0, [r1]
   1860c:	ldr	r0, [sp, #4]
   18610:	ldr	r0, [r0, #4]
   18614:	ldr	r1, [sp]
   18618:	str	r0, [r1, #4]
   1861c:	ldr	r0, [sp]
   18620:	ldr	r1, [sp, #4]
   18624:	str	r0, [r1, #4]
   18628:	b	18648 <__assert_fail@plt+0x716c>
   1862c:	ldr	r0, [sp, #8]
   18630:	ldr	r1, [sp, #4]
   18634:	str	r0, [r1]
   18638:	ldr	r0, [fp, #-8]
   1863c:	ldr	r1, [r0, #12]
   18640:	add	r1, r1, #1
   18644:	str	r1, [r0, #12]
   18648:	ldr	r0, [sp, #20]
   1864c:	movw	r1, #0
   18650:	str	r1, [r0]
   18654:	ldr	r0, [fp, #-12]
   18658:	ldr	r1, [r0, #12]
   1865c:	mvn	r2, #0
   18660:	add	r1, r1, r2
   18664:	str	r1, [r0, #12]
   18668:	b	1866c <__assert_fail@plt+0x7190>
   1866c:	ldr	r0, [sp, #20]
   18670:	add	r0, r0, #8
   18674:	str	r0, [sp, #20]
   18678:	b	184b0 <__assert_fail@plt+0x6fd4>
   1867c:	movw	r0, #1
   18680:	and	r0, r0, #1
   18684:	strb	r0, [fp, #-1]
   18688:	ldrb	r0, [fp, #-1]
   1868c:	and	r0, r0, #1
   18690:	mov	sp, fp
   18694:	pop	{fp, pc}
   18698:	push	{fp, lr}
   1869c:	mov	fp, sp
   186a0:	sub	sp, sp, #48	; 0x30
   186a4:	str	r0, [fp, #-8]
   186a8:	str	r1, [fp, #-12]
   186ac:	str	r2, [fp, #-16]
   186b0:	ldr	r0, [fp, #-12]
   186b4:	movw	r1, #0
   186b8:	cmp	r0, r1
   186bc:	bne	186c4 <__assert_fail@plt+0x71e8>
   186c0:	bl	11494 <abort@plt>
   186c4:	ldr	r0, [fp, #-8]
   186c8:	ldr	r1, [fp, #-12]
   186cc:	add	r2, sp, #24
   186d0:	movw	r3, #0
   186d4:	and	r3, r3, #1
   186d8:	bl	18948 <__assert_fail@plt+0x746c>
   186dc:	str	r0, [fp, #-20]	; 0xffffffec
   186e0:	movw	r1, #0
   186e4:	cmp	r0, r1
   186e8:	beq	18714 <__assert_fail@plt+0x7238>
   186ec:	ldr	r0, [fp, #-16]
   186f0:	movw	r1, #0
   186f4:	cmp	r0, r1
   186f8:	beq	18708 <__assert_fail@plt+0x722c>
   186fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18700:	ldr	r1, [fp, #-16]
   18704:	str	r0, [r1]
   18708:	movw	r0, #0
   1870c:	str	r0, [fp, #-4]
   18710:	b	18938 <__assert_fail@plt+0x745c>
   18714:	ldr	r0, [fp, #-8]
   18718:	ldr	r0, [r0, #12]
   1871c:	vmov	s0, r0
   18720:	vcvt.f32.u32	s0, s0
   18724:	ldr	r0, [fp, #-8]
   18728:	ldr	r0, [r0, #20]
   1872c:	vldr	s2, [r0, #8]
   18730:	ldr	r0, [fp, #-8]
   18734:	ldr	r0, [r0, #8]
   18738:	vmov	s4, r0
   1873c:	vcvt.f32.u32	s4, s4
   18740:	vmul.f32	s2, s2, s4
   18744:	vcmpe.f32	s0, s2
   18748:	vmrs	APSR_nzcv, fpscr
   1874c:	ble	18884 <__assert_fail@plt+0x73a8>
   18750:	ldr	r0, [fp, #-8]
   18754:	bl	17d74 <__assert_fail@plt+0x6898>
   18758:	ldr	lr, [fp, #-8]
   1875c:	ldr	lr, [lr, #12]
   18760:	vmov	s0, lr
   18764:	vcvt.f32.u32	s0, s0
   18768:	ldr	lr, [fp, #-8]
   1876c:	ldr	lr, [lr, #20]
   18770:	vldr	s2, [lr, #8]
   18774:	ldr	lr, [fp, #-8]
   18778:	ldr	lr, [lr, #8]
   1877c:	vmov	s4, lr
   18780:	vcvt.f32.u32	s4, s4
   18784:	vmul.f32	s2, s2, s4
   18788:	vcmpe.f32	s0, s2
   1878c:	vmrs	APSR_nzcv, fpscr
   18790:	str	r0, [sp, #8]
   18794:	ble	18880 <__assert_fail@plt+0x73a4>
   18798:	ldr	r0, [fp, #-8]
   1879c:	ldr	r0, [r0, #20]
   187a0:	str	r0, [sp, #20]
   187a4:	ldr	r0, [sp, #20]
   187a8:	ldrb	r0, [r0, #16]
   187ac:	tst	r0, #1
   187b0:	beq	187d8 <__assert_fail@plt+0x72fc>
   187b4:	ldr	r0, [fp, #-8]
   187b8:	ldr	r0, [r0, #8]
   187bc:	vmov	s0, r0
   187c0:	vcvt.f32.u32	s0, s0
   187c4:	ldr	r0, [sp, #20]
   187c8:	vldr	s2, [r0, #12]
   187cc:	vmul.f32	s0, s0, s2
   187d0:	vstr	s0, [sp, #4]
   187d4:	b	18804 <__assert_fail@plt+0x7328>
   187d8:	ldr	r0, [fp, #-8]
   187dc:	ldr	r0, [r0, #8]
   187e0:	vmov	s0, r0
   187e4:	vcvt.f32.u32	s0, s0
   187e8:	ldr	r0, [sp, #20]
   187ec:	vldr	s2, [r0, #12]
   187f0:	vmul.f32	s0, s0, s2
   187f4:	ldr	r0, [sp, #20]
   187f8:	vldr	s2, [r0, #8]
   187fc:	vmul.f32	s0, s0, s2
   18800:	vstr	s0, [sp, #4]
   18804:	vldr	s0, [sp, #4]
   18808:	vldr	s2, [pc, #308]	; 18944 <__assert_fail@plt+0x7468>
   1880c:	vstr	s0, [sp, #16]
   18810:	vldr	s0, [sp, #16]
   18814:	vcmpe.f32	s2, s0
   18818:	vmrs	APSR_nzcv, fpscr
   1881c:	bhi	1882c <__assert_fail@plt+0x7350>
   18820:	mvn	r0, #0
   18824:	str	r0, [fp, #-4]
   18828:	b	18938 <__assert_fail@plt+0x745c>
   1882c:	ldr	r0, [fp, #-8]
   18830:	vldr	s0, [sp, #16]
   18834:	vcvt.u32.f32	s0, s0
   18838:	vmov	r1, s0
   1883c:	bl	1825c <__assert_fail@plt+0x6d80>
   18840:	tst	r0, #1
   18844:	bne	18854 <__assert_fail@plt+0x7378>
   18848:	mvn	r0, #0
   1884c:	str	r0, [fp, #-4]
   18850:	b	18938 <__assert_fail@plt+0x745c>
   18854:	ldr	r0, [fp, #-8]
   18858:	ldr	r1, [fp, #-12]
   1885c:	add	r2, sp, #24
   18860:	movw	r3, #0
   18864:	and	r3, r3, #1
   18868:	bl	18948 <__assert_fail@plt+0x746c>
   1886c:	movw	r1, #0
   18870:	cmp	r0, r1
   18874:	beq	1887c <__assert_fail@plt+0x73a0>
   18878:	bl	11494 <abort@plt>
   1887c:	b	18880 <__assert_fail@plt+0x73a4>
   18880:	b	18884 <__assert_fail@plt+0x73a8>
   18884:	ldr	r0, [sp, #24]
   18888:	ldr	r0, [r0]
   1888c:	movw	r1, #0
   18890:	cmp	r0, r1
   18894:	beq	18904 <__assert_fail@plt+0x7428>
   18898:	ldr	r0, [fp, #-8]
   1889c:	bl	18b44 <__assert_fail@plt+0x7668>
   188a0:	str	r0, [sp, #12]
   188a4:	ldr	r0, [sp, #12]
   188a8:	movw	lr, #0
   188ac:	cmp	r0, lr
   188b0:	bne	188c0 <__assert_fail@plt+0x73e4>
   188b4:	mvn	r0, #0
   188b8:	str	r0, [fp, #-4]
   188bc:	b	18938 <__assert_fail@plt+0x745c>
   188c0:	ldr	r0, [fp, #-12]
   188c4:	ldr	r1, [sp, #12]
   188c8:	str	r0, [r1]
   188cc:	ldr	r0, [sp, #24]
   188d0:	ldr	r0, [r0, #4]
   188d4:	ldr	r1, [sp, #12]
   188d8:	str	r0, [r1, #4]
   188dc:	ldr	r0, [sp, #12]
   188e0:	ldr	r1, [sp, #24]
   188e4:	str	r0, [r1, #4]
   188e8:	ldr	r0, [fp, #-8]
   188ec:	ldr	r1, [r0, #16]
   188f0:	add	r1, r1, #1
   188f4:	str	r1, [r0, #16]
   188f8:	movw	r0, #1
   188fc:	str	r0, [fp, #-4]
   18900:	b	18938 <__assert_fail@plt+0x745c>
   18904:	ldr	r0, [fp, #-12]
   18908:	ldr	r1, [sp, #24]
   1890c:	str	r0, [r1]
   18910:	ldr	r0, [fp, #-8]
   18914:	ldr	r1, [r0, #16]
   18918:	add	r1, r1, #1
   1891c:	str	r1, [r0, #16]
   18920:	ldr	r0, [fp, #-8]
   18924:	ldr	r1, [r0, #12]
   18928:	add	r1, r1, #1
   1892c:	str	r1, [r0, #12]
   18930:	movw	r0, #1
   18934:	str	r0, [fp, #-4]
   18938:	ldr	r0, [fp, #-4]
   1893c:	mov	sp, fp
   18940:	pop	{fp, pc}
   18944:	svcmi	0x00800000
   18948:	push	{fp, lr}
   1894c:	mov	fp, sp
   18950:	sub	sp, sp, #56	; 0x38
   18954:	str	r0, [fp, #-8]
   18958:	str	r1, [fp, #-12]
   1895c:	str	r2, [fp, #-16]
   18960:	and	r0, r3, #1
   18964:	strb	r0, [fp, #-17]	; 0xffffffef
   18968:	ldr	r0, [fp, #-8]
   1896c:	ldr	r1, [fp, #-12]
   18970:	bl	17730 <__assert_fail@plt+0x6254>
   18974:	str	r0, [fp, #-24]	; 0xffffffe8
   18978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1897c:	ldr	r1, [fp, #-16]
   18980:	str	r0, [r1]
   18984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18988:	ldr	r0, [r0]
   1898c:	movw	r1, #0
   18990:	cmp	r0, r1
   18994:	bne	189a4 <__assert_fail@plt+0x74c8>
   18998:	movw	r0, #0
   1899c:	str	r0, [fp, #-4]
   189a0:	b	18b38 <__assert_fail@plt+0x765c>
   189a4:	ldr	r0, [fp, #-12]
   189a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189ac:	ldr	r1, [r1]
   189b0:	cmp	r0, r1
   189b4:	beq	189e8 <__assert_fail@plt+0x750c>
   189b8:	ldr	r0, [fp, #-8]
   189bc:	ldr	r0, [r0, #28]
   189c0:	ldr	r1, [fp, #-12]
   189c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189c8:	ldr	r2, [r2]
   189cc:	str	r0, [sp, #8]
   189d0:	mov	r0, r1
   189d4:	mov	r1, r2
   189d8:	ldr	r2, [sp, #8]
   189dc:	blx	r2
   189e0:	tst	r0, #1
   189e4:	beq	18a64 <__assert_fail@plt+0x7588>
   189e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189ec:	ldr	r0, [r0]
   189f0:	str	r0, [sp, #24]
   189f4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   189f8:	tst	r0, #1
   189fc:	beq	18a58 <__assert_fail@plt+0x757c>
   18a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a04:	ldr	r0, [r0, #4]
   18a08:	movw	r1, #0
   18a0c:	cmp	r0, r1
   18a10:	beq	18a48 <__assert_fail@plt+0x756c>
   18a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a18:	ldr	r0, [r0, #4]
   18a1c:	str	r0, [sp, #20]
   18a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a24:	ldr	r1, [sp, #20]
   18a28:	ldr	r2, [r1]
   18a2c:	str	r2, [r0]
   18a30:	ldr	r1, [r1, #4]
   18a34:	str	r1, [r0, #4]
   18a38:	ldr	r0, [fp, #-8]
   18a3c:	ldr	r1, [sp, #20]
   18a40:	bl	18f98 <__assert_fail@plt+0x7abc>
   18a44:	b	18a54 <__assert_fail@plt+0x7578>
   18a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a4c:	movw	r1, #0
   18a50:	str	r1, [r0]
   18a54:	b	18a58 <__assert_fail@plt+0x757c>
   18a58:	ldr	r0, [sp, #24]
   18a5c:	str	r0, [fp, #-4]
   18a60:	b	18b38 <__assert_fail@plt+0x765c>
   18a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a68:	str	r0, [sp, #28]
   18a6c:	ldr	r0, [sp, #28]
   18a70:	ldr	r0, [r0, #4]
   18a74:	movw	r1, #0
   18a78:	cmp	r0, r1
   18a7c:	beq	18b30 <__assert_fail@plt+0x7654>
   18a80:	ldr	r0, [fp, #-12]
   18a84:	ldr	r1, [sp, #28]
   18a88:	ldr	r1, [r1, #4]
   18a8c:	ldr	r1, [r1]
   18a90:	cmp	r0, r1
   18a94:	beq	18acc <__assert_fail@plt+0x75f0>
   18a98:	ldr	r0, [fp, #-8]
   18a9c:	ldr	r0, [r0, #28]
   18aa0:	ldr	r1, [fp, #-12]
   18aa4:	ldr	r2, [sp, #28]
   18aa8:	ldr	r2, [r2, #4]
   18aac:	ldr	r2, [r2]
   18ab0:	str	r0, [sp, #4]
   18ab4:	mov	r0, r1
   18ab8:	mov	r1, r2
   18abc:	ldr	r2, [sp, #4]
   18ac0:	blx	r2
   18ac4:	tst	r0, #1
   18ac8:	beq	18b1c <__assert_fail@plt+0x7640>
   18acc:	ldr	r0, [sp, #28]
   18ad0:	ldr	r0, [r0, #4]
   18ad4:	ldr	r0, [r0]
   18ad8:	str	r0, [sp, #16]
   18adc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18ae0:	tst	r0, #1
   18ae4:	beq	18b10 <__assert_fail@plt+0x7634>
   18ae8:	ldr	r0, [sp, #28]
   18aec:	ldr	r0, [r0, #4]
   18af0:	str	r0, [sp, #12]
   18af4:	ldr	r0, [sp, #12]
   18af8:	ldr	r0, [r0, #4]
   18afc:	ldr	r1, [sp, #28]
   18b00:	str	r0, [r1, #4]
   18b04:	ldr	r0, [fp, #-8]
   18b08:	ldr	r1, [sp, #12]
   18b0c:	bl	18f98 <__assert_fail@plt+0x7abc>
   18b10:	ldr	r0, [sp, #16]
   18b14:	str	r0, [fp, #-4]
   18b18:	b	18b38 <__assert_fail@plt+0x765c>
   18b1c:	b	18b20 <__assert_fail@plt+0x7644>
   18b20:	ldr	r0, [sp, #28]
   18b24:	ldr	r0, [r0, #4]
   18b28:	str	r0, [sp, #28]
   18b2c:	b	18a6c <__assert_fail@plt+0x7590>
   18b30:	movw	r0, #0
   18b34:	str	r0, [fp, #-4]
   18b38:	ldr	r0, [fp, #-4]
   18b3c:	mov	sp, fp
   18b40:	pop	{fp, pc}
   18b44:	push	{fp, lr}
   18b48:	mov	fp, sp
   18b4c:	sub	sp, sp, #8
   18b50:	str	r0, [sp, #4]
   18b54:	ldr	r0, [sp, #4]
   18b58:	ldr	r0, [r0, #36]	; 0x24
   18b5c:	movw	r1, #0
   18b60:	cmp	r0, r1
   18b64:	beq	18b88 <__assert_fail@plt+0x76ac>
   18b68:	ldr	r0, [sp, #4]
   18b6c:	ldr	r0, [r0, #36]	; 0x24
   18b70:	str	r0, [sp]
   18b74:	ldr	r0, [sp]
   18b78:	ldr	r0, [r0, #4]
   18b7c:	ldr	r1, [sp, #4]
   18b80:	str	r0, [r1, #36]	; 0x24
   18b84:	b	18b94 <__assert_fail@plt+0x76b8>
   18b88:	movw	r0, #8
   18b8c:	bl	217c0 <__assert_fail@plt+0x102e4>
   18b90:	str	r0, [sp]
   18b94:	ldr	r0, [sp]
   18b98:	mov	sp, fp
   18b9c:	pop	{fp, pc}
   18ba0:	push	{fp, lr}
   18ba4:	mov	fp, sp
   18ba8:	sub	sp, sp, #24
   18bac:	str	r0, [fp, #-4]
   18bb0:	str	r1, [fp, #-8]
   18bb4:	ldr	r0, [fp, #-4]
   18bb8:	ldr	r1, [fp, #-8]
   18bbc:	add	r2, sp, #12
   18bc0:	bl	18698 <__assert_fail@plt+0x71bc>
   18bc4:	str	r0, [sp, #8]
   18bc8:	ldr	r0, [sp, #8]
   18bcc:	cmn	r0, #1
   18bd0:	bne	18be0 <__assert_fail@plt+0x7704>
   18bd4:	movw	r0, #0
   18bd8:	str	r0, [sp, #4]
   18bdc:	b	18c08 <__assert_fail@plt+0x772c>
   18be0:	ldr	r0, [sp, #8]
   18be4:	cmp	r0, #0
   18be8:	bne	18bf8 <__assert_fail@plt+0x771c>
   18bec:	ldr	r0, [sp, #12]
   18bf0:	str	r0, [sp]
   18bf4:	b	18c00 <__assert_fail@plt+0x7724>
   18bf8:	ldr	r0, [fp, #-8]
   18bfc:	str	r0, [sp]
   18c00:	ldr	r0, [sp]
   18c04:	str	r0, [sp, #4]
   18c08:	ldr	r0, [sp, #4]
   18c0c:	mov	sp, fp
   18c10:	pop	{fp, pc}
   18c14:	push	{fp, lr}
   18c18:	mov	fp, sp
   18c1c:	sub	sp, sp, #48	; 0x30
   18c20:	str	r0, [fp, #-8]
   18c24:	str	r1, [fp, #-12]
   18c28:	ldr	r0, [fp, #-8]
   18c2c:	ldr	r1, [fp, #-12]
   18c30:	sub	r2, fp, #20
   18c34:	movw	r3, #1
   18c38:	and	r3, r3, #1
   18c3c:	bl	18948 <__assert_fail@plt+0x746c>
   18c40:	str	r0, [fp, #-16]
   18c44:	ldr	r0, [fp, #-16]
   18c48:	movw	r1, #0
   18c4c:	cmp	r0, r1
   18c50:	bne	18c60 <__assert_fail@plt+0x7784>
   18c54:	movw	r0, #0
   18c58:	str	r0, [fp, #-4]
   18c5c:	b	18e0c <__assert_fail@plt+0x7930>
   18c60:	ldr	r0, [fp, #-8]
   18c64:	ldr	r1, [r0, #16]
   18c68:	mvn	r2, #0
   18c6c:	add	r1, r1, r2
   18c70:	str	r1, [r0, #16]
   18c74:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c78:	ldr	r0, [r0]
   18c7c:	movw	r1, #0
   18c80:	cmp	r0, r1
   18c84:	bne	18e04 <__assert_fail@plt+0x7928>
   18c88:	ldr	r0, [fp, #-8]
   18c8c:	ldr	r1, [r0, #12]
   18c90:	mvn	r2, #0
   18c94:	add	r1, r1, r2
   18c98:	str	r1, [r0, #12]
   18c9c:	ldr	r0, [fp, #-8]
   18ca0:	ldr	r0, [r0, #12]
   18ca4:	vmov	s0, r0
   18ca8:	vcvt.f32.u32	s0, s0
   18cac:	ldr	r0, [fp, #-8]
   18cb0:	ldr	r0, [r0, #20]
   18cb4:	vldr	s2, [r0]
   18cb8:	ldr	r0, [fp, #-8]
   18cbc:	ldr	r0, [r0, #8]
   18cc0:	vmov	s4, r0
   18cc4:	vcvt.f32.u32	s4, s4
   18cc8:	vmul.f32	s2, s2, s4
   18ccc:	vcmpe.f32	s0, s2
   18cd0:	vmrs	APSR_nzcv, fpscr
   18cd4:	bpl	18e00 <__assert_fail@plt+0x7924>
   18cd8:	ldr	r0, [fp, #-8]
   18cdc:	bl	17d74 <__assert_fail@plt+0x6898>
   18ce0:	ldr	lr, [fp, #-8]
   18ce4:	ldr	lr, [lr, #12]
   18ce8:	vmov	s0, lr
   18cec:	vcvt.f32.u32	s0, s0
   18cf0:	ldr	lr, [fp, #-8]
   18cf4:	ldr	lr, [lr, #20]
   18cf8:	vldr	s2, [lr]
   18cfc:	ldr	lr, [fp, #-8]
   18d00:	ldr	lr, [lr, #8]
   18d04:	vmov	s4, lr
   18d08:	vcvt.f32.u32	s4, s4
   18d0c:	vmul.f32	s2, s2, s4
   18d10:	vcmpe.f32	s0, s2
   18d14:	vmrs	APSR_nzcv, fpscr
   18d18:	str	r0, [sp, #8]
   18d1c:	bpl	18dfc <__assert_fail@plt+0x7920>
   18d20:	ldr	r0, [fp, #-8]
   18d24:	ldr	r0, [r0, #20]
   18d28:	str	r0, [sp, #24]
   18d2c:	ldr	r0, [sp, #24]
   18d30:	ldrb	r0, [r0, #16]
   18d34:	tst	r0, #1
   18d38:	beq	18d60 <__assert_fail@plt+0x7884>
   18d3c:	ldr	r0, [fp, #-8]
   18d40:	ldr	r0, [r0, #8]
   18d44:	vmov	s0, r0
   18d48:	vcvt.f32.u32	s0, s0
   18d4c:	ldr	r0, [sp, #24]
   18d50:	vldr	s2, [r0, #4]
   18d54:	vmul.f32	s0, s0, s2
   18d58:	vstr	s0, [sp, #4]
   18d5c:	b	18d8c <__assert_fail@plt+0x78b0>
   18d60:	ldr	r0, [fp, #-8]
   18d64:	ldr	r0, [r0, #8]
   18d68:	vmov	s0, r0
   18d6c:	vcvt.f32.u32	s0, s0
   18d70:	ldr	r0, [sp, #24]
   18d74:	vldr	s2, [r0, #4]
   18d78:	vmul.f32	s0, s0, s2
   18d7c:	ldr	r0, [sp, #24]
   18d80:	vldr	s2, [r0, #8]
   18d84:	vmul.f32	s0, s0, s2
   18d88:	vstr	s0, [sp, #4]
   18d8c:	vldr	s0, [sp, #4]
   18d90:	vcvt.u32.f32	s0, s0
   18d94:	vmov	r0, s0
   18d98:	str	r0, [sp, #20]
   18d9c:	ldr	r0, [fp, #-8]
   18da0:	ldr	r1, [sp, #20]
   18da4:	bl	1825c <__assert_fail@plt+0x6d80>
   18da8:	tst	r0, #1
   18dac:	bne	18df8 <__assert_fail@plt+0x791c>
   18db0:	ldr	r0, [fp, #-8]
   18db4:	ldr	r0, [r0, #36]	; 0x24
   18db8:	str	r0, [sp, #16]
   18dbc:	ldr	r0, [sp, #16]
   18dc0:	movw	r1, #0
   18dc4:	cmp	r0, r1
   18dc8:	beq	18dec <__assert_fail@plt+0x7910>
   18dcc:	ldr	r0, [sp, #16]
   18dd0:	ldr	r0, [r0, #4]
   18dd4:	str	r0, [sp, #12]
   18dd8:	ldr	r0, [sp, #16]
   18ddc:	bl	13878 <__assert_fail@plt+0x239c>
   18de0:	ldr	r0, [sp, #12]
   18de4:	str	r0, [sp, #16]
   18de8:	b	18dbc <__assert_fail@plt+0x78e0>
   18dec:	ldr	r0, [fp, #-8]
   18df0:	movw	r1, #0
   18df4:	str	r1, [r0, #36]	; 0x24
   18df8:	b	18dfc <__assert_fail@plt+0x7920>
   18dfc:	b	18e00 <__assert_fail@plt+0x7924>
   18e00:	b	18e04 <__assert_fail@plt+0x7928>
   18e04:	ldr	r0, [fp, #-16]
   18e08:	str	r0, [fp, #-4]
   18e0c:	ldr	r0, [fp, #-4]
   18e10:	mov	sp, fp
   18e14:	pop	{fp, pc}
   18e18:	push	{fp, lr}
   18e1c:	mov	fp, sp
   18e20:	sub	sp, sp, #8
   18e24:	str	r0, [sp, #4]
   18e28:	str	r1, [sp]
   18e2c:	ldr	r0, [sp, #4]
   18e30:	ldr	r1, [sp]
   18e34:	bl	18c14 <__assert_fail@plt+0x7738>
   18e38:	mov	sp, fp
   18e3c:	pop	{fp, pc}
   18e40:	push	{fp, lr}
   18e44:	mov	fp, sp
   18e48:	sub	sp, sp, #8
   18e4c:	str	r0, [sp, #4]
   18e50:	ldr	r0, [sp, #4]
   18e54:	cmp	r0, #10
   18e58:	bcs	18e64 <__assert_fail@plt+0x7988>
   18e5c:	movw	r0, #10
   18e60:	str	r0, [sp, #4]
   18e64:	ldr	r0, [sp, #4]
   18e68:	orr	r0, r0, #1
   18e6c:	str	r0, [sp, #4]
   18e70:	ldr	r0, [sp, #4]
   18e74:	mvn	r1, #0
   18e78:	cmp	r1, r0
   18e7c:	movw	r0, #0
   18e80:	str	r0, [sp]
   18e84:	beq	18e9c <__assert_fail@plt+0x79c0>
   18e88:	ldr	r0, [sp, #4]
   18e8c:	bl	18ec4 <__assert_fail@plt+0x79e8>
   18e90:	mvn	lr, #0
   18e94:	eor	r0, r0, lr
   18e98:	str	r0, [sp]
   18e9c:	ldr	r0, [sp]
   18ea0:	tst	r0, #1
   18ea4:	beq	18eb8 <__assert_fail@plt+0x79dc>
   18ea8:	ldr	r0, [sp, #4]
   18eac:	add	r0, r0, #2
   18eb0:	str	r0, [sp, #4]
   18eb4:	b	18e70 <__assert_fail@plt+0x7994>
   18eb8:	ldr	r0, [sp, #4]
   18ebc:	mov	sp, fp
   18ec0:	pop	{fp, pc}
   18ec4:	sub	sp, sp, #16
   18ec8:	str	r0, [sp, #12]
   18ecc:	movw	r0, #3
   18ed0:	str	r0, [sp, #8]
   18ed4:	ldr	r0, [sp, #8]
   18ed8:	ldr	r1, [sp, #8]
   18edc:	mul	r0, r0, r1
   18ee0:	str	r0, [sp, #4]
   18ee4:	ldr	r0, [sp, #4]
   18ee8:	ldr	r1, [sp, #12]
   18eec:	cmp	r0, r1
   18ef0:	movw	r0, #0
   18ef4:	str	r0, [sp]
   18ef8:	bcs	18f1c <__assert_fail@plt+0x7a40>
   18efc:	ldr	r0, [sp, #12]
   18f00:	ldr	r1, [sp, #8]
   18f04:	udiv	r2, r0, r1
   18f08:	mls	r0, r2, r1, r0
   18f0c:	cmp	r0, #0
   18f10:	movw	r0, #0
   18f14:	movne	r0, #1
   18f18:	str	r0, [sp]
   18f1c:	ldr	r0, [sp]
   18f20:	tst	r0, #1
   18f24:	beq	18f58 <__assert_fail@plt+0x7a7c>
   18f28:	ldr	r0, [sp, #8]
   18f2c:	add	r0, r0, #1
   18f30:	str	r0, [sp, #8]
   18f34:	ldr	r0, [sp, #8]
   18f38:	lsl	r0, r0, #2
   18f3c:	ldr	r1, [sp, #4]
   18f40:	add	r0, r1, r0
   18f44:	str	r0, [sp, #4]
   18f48:	ldr	r0, [sp, #8]
   18f4c:	add	r0, r0, #1
   18f50:	str	r0, [sp, #8]
   18f54:	b	18ee4 <__assert_fail@plt+0x7a08>
   18f58:	ldr	r0, [sp, #12]
   18f5c:	ldr	r1, [sp, #8]
   18f60:	udiv	r2, r0, r1
   18f64:	mls	r0, r2, r1, r0
   18f68:	cmp	r0, #0
   18f6c:	movw	r0, #0
   18f70:	movne	r0, #1
   18f74:	tst	r0, #1
   18f78:	movw	r0, #1
   18f7c:	moveq	r0, #0
   18f80:	cmp	r0, #0
   18f84:	movw	r0, #0
   18f88:	movne	r0, #1
   18f8c:	and	r0, r0, #1
   18f90:	add	sp, sp, #16
   18f94:	bx	lr
   18f98:	sub	sp, sp, #8
   18f9c:	str	r0, [sp, #4]
   18fa0:	str	r1, [sp]
   18fa4:	ldr	r0, [sp]
   18fa8:	movw	r1, #0
   18fac:	str	r1, [r0]
   18fb0:	ldr	r0, [sp, #4]
   18fb4:	ldr	r0, [r0, #36]	; 0x24
   18fb8:	ldr	r1, [sp]
   18fbc:	str	r0, [r1, #4]
   18fc0:	ldr	r0, [sp]
   18fc4:	ldr	r1, [sp, #4]
   18fc8:	str	r0, [r1, #36]	; 0x24
   18fcc:	add	sp, sp, #8
   18fd0:	bx	lr
   18fd4:	sub	sp, sp, #12
   18fd8:	str	r0, [sp, #8]
   18fdc:	str	r1, [sp, #4]
   18fe0:	ldr	r0, [sp, #8]
   18fe4:	movw	r1, #1
   18fe8:	strb	r1, [r0, #28]
   18fec:	ldr	r0, [sp, #8]
   18ff0:	movw	r1, #0
   18ff4:	str	r1, [r0, #20]
   18ff8:	ldr	r0, [sp, #8]
   18ffc:	str	r1, [r0, #24]
   19000:	str	r1, [sp]
   19004:	ldr	r0, [sp]
   19008:	cmp	r0, #4
   1900c:	bge	19034 <__assert_fail@plt+0x7b58>
   19010:	ldr	r0, [sp, #4]
   19014:	ldr	r1, [sp, #8]
   19018:	ldr	r2, [sp]
   1901c:	add	r1, r1, r2, lsl #2
   19020:	str	r0, [r1]
   19024:	ldr	r0, [sp]
   19028:	add	r0, r0, #1
   1902c:	str	r0, [sp]
   19030:	b	19004 <__assert_fail@plt+0x7b28>
   19034:	ldr	r0, [sp, #4]
   19038:	ldr	r1, [sp, #8]
   1903c:	str	r0, [r1, #16]
   19040:	add	sp, sp, #12
   19044:	bx	lr
   19048:	sub	sp, sp, #4
   1904c:	str	r0, [sp]
   19050:	ldr	r0, [sp]
   19054:	ldrb	r0, [r0, #28]
   19058:	and	r0, r0, #1
   1905c:	add	sp, sp, #4
   19060:	bx	lr
   19064:	sub	sp, sp, #16
   19068:	str	r0, [sp, #12]
   1906c:	str	r1, [sp, #8]
   19070:	ldr	r0, [sp, #12]
   19074:	ldr	r1, [r0, #20]
   19078:	ldrb	r0, [r0, #28]
   1907c:	mov	r2, #1
   19080:	bic	r0, r2, r0
   19084:	add	r0, r1, r0
   19088:	and	r0, r0, #3
   1908c:	str	r0, [sp, #4]
   19090:	ldr	r0, [sp, #12]
   19094:	ldr	r1, [sp, #4]
   19098:	ldr	r0, [r0, r1, lsl #2]
   1909c:	str	r0, [sp]
   190a0:	ldr	r0, [sp, #8]
   190a4:	ldr	r1, [sp, #12]
   190a8:	ldr	r2, [sp, #4]
   190ac:	add	r1, r1, r2, lsl #2
   190b0:	str	r0, [r1]
   190b4:	ldr	r0, [sp, #4]
   190b8:	ldr	r1, [sp, #12]
   190bc:	str	r0, [r1, #20]
   190c0:	ldr	r0, [sp, #4]
   190c4:	ldr	r1, [sp, #12]
   190c8:	ldr	r1, [r1, #24]
   190cc:	cmp	r0, r1
   190d0:	bne	19100 <__assert_fail@plt+0x7c24>
   190d4:	ldr	r0, [sp, #12]
   190d8:	ldr	r0, [r0, #24]
   190dc:	ldr	r1, [sp, #12]
   190e0:	ldrb	r1, [r1, #28]
   190e4:	mvn	r2, #0
   190e8:	eor	r1, r1, r2
   190ec:	and	r1, r1, #1
   190f0:	add	r0, r0, r1
   190f4:	and	r0, r0, #3
   190f8:	ldr	r1, [sp, #12]
   190fc:	str	r0, [r1, #24]
   19100:	ldr	r0, [sp, #12]
   19104:	movw	r1, #0
   19108:	strb	r1, [r0, #28]
   1910c:	ldr	r0, [sp]
   19110:	add	sp, sp, #16
   19114:	bx	lr
   19118:	push	{fp, lr}
   1911c:	mov	fp, sp
   19120:	sub	sp, sp, #8
   19124:	str	r0, [sp, #4]
   19128:	ldr	r0, [sp, #4]
   1912c:	bl	19048 <__assert_fail@plt+0x7b6c>
   19130:	tst	r0, #1
   19134:	beq	1913c <__assert_fail@plt+0x7c60>
   19138:	bl	11494 <abort@plt>
   1913c:	ldr	r0, [sp, #4]
   19140:	ldr	r1, [r0, #20]
   19144:	ldr	r0, [r0, r1, lsl #2]
   19148:	str	r0, [sp]
   1914c:	ldr	r0, [sp, #4]
   19150:	ldr	r1, [r0, #16]
   19154:	ldr	r2, [r0, #20]
   19158:	add	r0, r0, r2, lsl #2
   1915c:	str	r1, [r0]
   19160:	ldr	r0, [sp, #4]
   19164:	ldr	r0, [r0, #20]
   19168:	ldr	r1, [sp, #4]
   1916c:	ldr	r1, [r1, #24]
   19170:	cmp	r0, r1
   19174:	bne	19188 <__assert_fail@plt+0x7cac>
   19178:	ldr	r0, [sp, #4]
   1917c:	movw	r1, #1
   19180:	strb	r1, [r0, #28]
   19184:	b	191a4 <__assert_fail@plt+0x7cc8>
   19188:	ldr	r0, [sp, #4]
   1918c:	ldr	r0, [r0, #20]
   19190:	add	r0, r0, #4
   19194:	sub	r0, r0, #1
   19198:	and	r0, r0, #3
   1919c:	ldr	r1, [sp, #4]
   191a0:	str	r0, [r1, #20]
   191a4:	ldr	r0, [sp]
   191a8:	mov	sp, fp
   191ac:	pop	{fp, pc}
   191b0:	push	{fp, lr}
   191b4:	mov	fp, sp
   191b8:	sub	sp, sp, #32
   191bc:	str	r0, [fp, #-8]
   191c0:	str	r1, [fp, #-4]
   191c4:	str	r2, [fp, #-12]
   191c8:	ldr	r0, [fp, #-12]
   191cc:	add	r0, r0, #20
   191d0:	str	r0, [sp, #16]
   191d4:	ldr	r0, [sp, #16]
   191d8:	mov	r1, #0
   191dc:	strb	r1, [r0]
   191e0:	mov	r0, #1
   191e4:	cmp	r0, #0
   191e8:	bne	19278 <__assert_fail@plt+0x7d9c>
   191ec:	b	191f0 <__assert_fail@plt+0x7d14>
   191f0:	b	191f4 <__assert_fail@plt+0x7d18>
   191f4:	ldr	r0, [fp, #-8]
   191f8:	ldr	r1, [fp, #-4]
   191fc:	mov	r2, #10
   19200:	mov	r3, #0
   19204:	bl	245dc <__assert_fail@plt+0x13100>
   19208:	rsb	r2, r2, #48	; 0x30
   1920c:	ldr	r3, [sp, #16]
   19210:	mvn	lr, #0
   19214:	add	ip, r3, lr
   19218:	str	ip, [sp, #16]
   1921c:	add	r3, r3, lr
   19220:	strb	r2, [r3]
   19224:	str	r0, [sp, #12]
   19228:	str	r1, [sp, #8]
   1922c:	ldr	r0, [fp, #-8]
   19230:	ldr	r1, [fp, #-4]
   19234:	mov	r2, #10
   19238:	mov	r3, #0
   1923c:	bl	245dc <__assert_fail@plt+0x13100>
   19240:	str	r1, [fp, #-4]
   19244:	str	r0, [fp, #-8]
   19248:	orr	r0, r0, r1
   1924c:	cmp	r0, #0
   19250:	bne	191f4 <__assert_fail@plt+0x7d18>
   19254:	b	19258 <__assert_fail@plt+0x7d7c>
   19258:	ldr	r0, [sp, #16]
   1925c:	mvn	r1, #0
   19260:	add	r2, r0, r1
   19264:	str	r2, [sp, #16]
   19268:	add	r0, r0, r1
   1926c:	movw	r1, #45	; 0x2d
   19270:	strb	r1, [r0]
   19274:	b	192e4 <__assert_fail@plt+0x7e08>
   19278:	b	1927c <__assert_fail@plt+0x7da0>
   1927c:	ldr	r0, [fp, #-8]
   19280:	ldr	r1, [fp, #-4]
   19284:	mov	r2, #10
   19288:	mov	r3, #0
   1928c:	bl	245dc <__assert_fail@plt+0x13100>
   19290:	orr	r2, r2, #48	; 0x30
   19294:	ldr	r3, [sp, #16]
   19298:	mvn	lr, #0
   1929c:	add	ip, r3, lr
   192a0:	str	ip, [sp, #16]
   192a4:	add	r3, r3, lr
   192a8:	strb	r2, [r3]
   192ac:	str	r0, [sp, #4]
   192b0:	str	r1, [sp]
   192b4:	ldr	r0, [fp, #-8]
   192b8:	ldr	r1, [fp, #-4]
   192bc:	mov	r2, #10
   192c0:	mov	r3, #0
   192c4:	bl	245dc <__assert_fail@plt+0x13100>
   192c8:	str	r1, [fp, #-4]
   192cc:	str	r0, [fp, #-8]
   192d0:	orr	r0, r0, r1
   192d4:	cmp	r0, #0
   192d8:	bne	1927c <__assert_fail@plt+0x7da0>
   192dc:	b	192e0 <__assert_fail@plt+0x7e04>
   192e0:	b	192e4 <__assert_fail@plt+0x7e08>
   192e4:	ldr	r0, [sp, #16]
   192e8:	mov	sp, fp
   192ec:	pop	{fp, pc}
   192f0:	sub	sp, sp, #4
   192f4:	push	{fp, lr}
   192f8:	mov	fp, sp
   192fc:	sub	sp, sp, #28
   19300:	str	r3, [fp, #8]
   19304:	str	r0, [fp, #-4]
   19308:	str	r1, [fp, #-8]
   1930c:	str	r2, [fp, #-12]
   19310:	movw	r0, #0
   19314:	str	r0, [sp, #12]
   19318:	ldr	r0, [fp, #-12]
   1931c:	and	r0, r0, #64	; 0x40
   19320:	cmp	r0, #0
   19324:	beq	19350 <__assert_fail@plt+0x7e74>
   19328:	add	r0, sp, #8
   1932c:	mov	r1, r0
   19330:	add	r2, fp, #8
   19334:	str	r2, [r1]
   19338:	ldr	r1, [sp, #8]
   1933c:	add	r2, r1, #4
   19340:	str	r2, [sp, #8]
   19344:	ldr	r1, [r1]
   19348:	str	r1, [sp, #12]
   1934c:	str	r0, [sp, #4]
   19350:	ldr	r0, [fp, #-4]
   19354:	ldr	r1, [fp, #-8]
   19358:	ldr	r2, [fp, #-12]
   1935c:	ldr	r3, [sp, #12]
   19360:	bl	11374 <openat64@plt>
   19364:	bl	1bc44 <__assert_fail@plt+0xa768>
   19368:	mov	sp, fp
   1936c:	pop	{fp, lr}
   19370:	add	sp, sp, #4
   19374:	bx	lr
   19378:	push	{fp, lr}
   1937c:	mov	fp, sp
   19380:	sub	sp, sp, #48	; 0x30
   19384:	ldr	ip, [pc, #176]	; 1943c <__assert_fail@plt+0x7f60>
   19388:	str	r0, [fp, #-8]
   1938c:	str	r1, [fp, #-12]
   19390:	str	r2, [fp, #-16]
   19394:	str	r3, [fp, #-20]	; 0xffffffec
   19398:	ldr	r0, [fp, #-16]
   1939c:	orr	r0, r0, ip
   193a0:	str	r0, [sp, #24]
   193a4:	ldr	r0, [fp, #-8]
   193a8:	ldr	r1, [fp, #-12]
   193ac:	ldr	r2, [sp, #24]
   193b0:	bl	192f0 <__assert_fail@plt+0x7e14>
   193b4:	str	r0, [sp, #20]
   193b8:	ldr	r0, [sp, #20]
   193bc:	cmp	r0, #0
   193c0:	bge	193d0 <__assert_fail@plt+0x7ef4>
   193c4:	movw	r0, #0
   193c8:	str	r0, [fp, #-4]
   193cc:	b	19430 <__assert_fail@plt+0x7f54>
   193d0:	ldr	r0, [sp, #20]
   193d4:	bl	11428 <fdopendir@plt>
   193d8:	str	r0, [sp, #16]
   193dc:	ldr	r0, [sp, #16]
   193e0:	movw	lr, #0
   193e4:	cmp	r0, lr
   193e8:	beq	193fc <__assert_fail@plt+0x7f20>
   193ec:	ldr	r0, [sp, #20]
   193f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   193f4:	str	r0, [r1]
   193f8:	b	19428 <__assert_fail@plt+0x7f4c>
   193fc:	bl	11398 <__errno_location@plt>
   19400:	ldr	r0, [r0]
   19404:	str	r0, [sp, #12]
   19408:	ldr	r0, [sp, #20]
   1940c:	bl	114a0 <close@plt>
   19410:	ldr	lr, [sp, #12]
   19414:	str	r0, [sp, #8]
   19418:	str	lr, [sp, #4]
   1941c:	bl	11398 <__errno_location@plt>
   19420:	ldr	lr, [sp, #4]
   19424:	str	lr, [r0]
   19428:	ldr	r0, [sp, #16]
   1942c:	str	r0, [fp, #-4]
   19430:	ldr	r0, [fp, #-4]
   19434:	mov	sp, fp
   19438:	pop	{fp, pc}
   1943c:	andeq	r4, r8, r0, lsl #18
   19440:	push	{fp, lr}
   19444:	mov	fp, sp
   19448:	sub	sp, sp, #24
   1944c:	str	r0, [fp, #-4]
   19450:	ldr	r0, [fp, #-4]
   19454:	movw	r1, #0
   19458:	cmp	r0, r1
   1945c:	bne	19480 <__assert_fail@plt+0x7fa4>
   19460:	movw	r0, #24968	; 0x6188
   19464:	movt	r0, #3
   19468:	ldr	r1, [r0]
   1946c:	movw	r0, #22236	; 0x56dc
   19470:	movt	r0, #2
   19474:	bl	1147c <fputs@plt>
   19478:	str	r0, [sp, #8]
   1947c:	bl	11494 <abort@plt>
   19480:	ldr	r0, [fp, #-4]
   19484:	movw	r1, #47	; 0x2f
   19488:	bl	11404 <strrchr@plt>
   1948c:	str	r0, [fp, #-8]
   19490:	ldr	r0, [fp, #-8]
   19494:	movw	r1, #0
   19498:	cmp	r0, r1
   1949c:	beq	194b0 <__assert_fail@plt+0x7fd4>
   194a0:	ldr	r0, [fp, #-8]
   194a4:	add	r0, r0, #1
   194a8:	str	r0, [sp, #4]
   194ac:	b	194b8 <__assert_fail@plt+0x7fdc>
   194b0:	ldr	r0, [fp, #-4]
   194b4:	str	r0, [sp, #4]
   194b8:	ldr	r0, [sp, #4]
   194bc:	str	r0, [sp, #12]
   194c0:	ldr	r0, [sp, #12]
   194c4:	ldr	r1, [fp, #-4]
   194c8:	sub	r0, r0, r1
   194cc:	cmp	r0, #7
   194d0:	blt	1953c <__assert_fail@plt+0x8060>
   194d4:	ldr	r0, [sp, #12]
   194d8:	mvn	r1, #6
   194dc:	add	r0, r0, r1
   194e0:	movw	r1, #22292	; 0x5714
   194e4:	movt	r1, #2
   194e8:	movw	r2, #7
   194ec:	bl	11488 <strncmp@plt>
   194f0:	cmp	r0, #0
   194f4:	bne	1953c <__assert_fail@plt+0x8060>
   194f8:	ldr	r0, [sp, #12]
   194fc:	str	r0, [fp, #-4]
   19500:	ldr	r0, [sp, #12]
   19504:	movw	r1, #22300	; 0x571c
   19508:	movt	r1, #2
   1950c:	movw	r2, #3
   19510:	bl	11488 <strncmp@plt>
   19514:	cmp	r0, #0
   19518:	bne	19538 <__assert_fail@plt+0x805c>
   1951c:	ldr	r0, [sp, #12]
   19520:	add	r0, r0, #3
   19524:	str	r0, [fp, #-4]
   19528:	ldr	r0, [fp, #-4]
   1952c:	movw	r1, #24952	; 0x6178
   19530:	movt	r1, #3
   19534:	str	r0, [r1]
   19538:	b	1953c <__assert_fail@plt+0x8060>
   1953c:	ldr	r0, [fp, #-4]
   19540:	movw	r1, #25016	; 0x61b8
   19544:	movt	r1, #3
   19548:	str	r0, [r1]
   1954c:	ldr	r0, [fp, #-4]
   19550:	movw	r1, #24956	; 0x617c
   19554:	movt	r1, #3
   19558:	str	r0, [r1]
   1955c:	mov	sp, fp
   19560:	pop	{fp, pc}
   19564:	push	{fp, lr}
   19568:	mov	fp, sp
   1956c:	sub	sp, sp, #24
   19570:	str	r0, [fp, #-4]
   19574:	bl	11398 <__errno_location@plt>
   19578:	ldr	r0, [r0]
   1957c:	str	r0, [fp, #-8]
   19580:	ldr	r0, [fp, #-4]
   19584:	movw	lr, #0
   19588:	cmp	r0, lr
   1958c:	beq	1959c <__assert_fail@plt+0x80c0>
   19590:	ldr	r0, [fp, #-4]
   19594:	str	r0, [sp, #8]
   19598:	b	195ac <__assert_fail@plt+0x80d0>
   1959c:	movw	r0, #25020	; 0x61bc
   195a0:	movt	r0, #3
   195a4:	str	r0, [sp, #8]
   195a8:	b	195ac <__assert_fail@plt+0x80d0>
   195ac:	ldr	r0, [sp, #8]
   195b0:	movw	r1, #48	; 0x30
   195b4:	bl	1f2ac <__assert_fail@plt+0xddd0>
   195b8:	str	r0, [sp, #12]
   195bc:	ldr	r0, [fp, #-8]
   195c0:	str	r0, [sp, #4]
   195c4:	bl	11398 <__errno_location@plt>
   195c8:	ldr	r1, [sp, #4]
   195cc:	str	r1, [r0]
   195d0:	ldr	r0, [sp, #12]
   195d4:	mov	sp, fp
   195d8:	pop	{fp, pc}
   195dc:	sub	sp, sp, #8
   195e0:	str	r0, [sp, #4]
   195e4:	ldr	r0, [sp, #4]
   195e8:	movw	r1, #0
   195ec:	cmp	r0, r1
   195f0:	beq	19600 <__assert_fail@plt+0x8124>
   195f4:	ldr	r0, [sp, #4]
   195f8:	str	r0, [sp]
   195fc:	b	19610 <__assert_fail@plt+0x8134>
   19600:	movw	r0, #25020	; 0x61bc
   19604:	movt	r0, #3
   19608:	str	r0, [sp]
   1960c:	b	19610 <__assert_fail@plt+0x8134>
   19610:	ldr	r0, [sp]
   19614:	ldr	r0, [r0]
   19618:	add	sp, sp, #8
   1961c:	bx	lr
   19620:	sub	sp, sp, #16
   19624:	str	r0, [sp, #12]
   19628:	str	r1, [sp, #8]
   1962c:	ldr	r0, [sp, #8]
   19630:	ldr	r1, [sp, #12]
   19634:	movw	r2, #0
   19638:	cmp	r1, r2
   1963c:	str	r0, [sp, #4]
   19640:	beq	19650 <__assert_fail@plt+0x8174>
   19644:	ldr	r0, [sp, #12]
   19648:	str	r0, [sp]
   1964c:	b	19660 <__assert_fail@plt+0x8184>
   19650:	movw	r0, #25020	; 0x61bc
   19654:	movt	r0, #3
   19658:	str	r0, [sp]
   1965c:	b	19660 <__assert_fail@plt+0x8184>
   19660:	ldr	r0, [sp]
   19664:	ldr	r1, [sp, #4]
   19668:	str	r1, [r0]
   1966c:	add	sp, sp, #16
   19670:	bx	lr
   19674:	sub	sp, sp, #32
   19678:	str	r0, [sp, #28]
   1967c:	strb	r1, [sp, #27]
   19680:	str	r2, [sp, #20]
   19684:	ldrb	r0, [sp, #27]
   19688:	strb	r0, [sp, #19]
   1968c:	ldr	r0, [sp, #28]
   19690:	movw	r1, #0
   19694:	cmp	r0, r1
   19698:	beq	196a8 <__assert_fail@plt+0x81cc>
   1969c:	ldr	r0, [sp, #28]
   196a0:	str	r0, [sp]
   196a4:	b	196b8 <__assert_fail@plt+0x81dc>
   196a8:	movw	r0, #25020	; 0x61bc
   196ac:	movt	r0, #3
   196b0:	str	r0, [sp]
   196b4:	b	196b8 <__assert_fail@plt+0x81dc>
   196b8:	ldr	r0, [sp]
   196bc:	add	r0, r0, #8
   196c0:	ldrb	r1, [sp, #19]
   196c4:	lsr	r1, r1, #5
   196c8:	add	r0, r0, r1, lsl #2
   196cc:	str	r0, [sp, #12]
   196d0:	ldrb	r0, [sp, #19]
   196d4:	and	r0, r0, #31
   196d8:	str	r0, [sp, #8]
   196dc:	ldr	r0, [sp, #12]
   196e0:	ldr	r0, [r0]
   196e4:	ldr	r1, [sp, #8]
   196e8:	lsr	r0, r0, r1
   196ec:	and	r0, r0, #1
   196f0:	str	r0, [sp, #4]
   196f4:	ldr	r0, [sp, #20]
   196f8:	and	r0, r0, #1
   196fc:	ldr	r1, [sp, #4]
   19700:	eor	r0, r0, r1
   19704:	ldr	r1, [sp, #8]
   19708:	lsl	r0, r0, r1
   1970c:	ldr	r1, [sp, #12]
   19710:	ldr	r2, [r1]
   19714:	eor	r0, r2, r0
   19718:	str	r0, [r1]
   1971c:	ldr	r0, [sp, #4]
   19720:	add	sp, sp, #32
   19724:	bx	lr
   19728:	sub	sp, sp, #12
   1972c:	str	r0, [sp, #8]
   19730:	str	r1, [sp, #4]
   19734:	ldr	r0, [sp, #8]
   19738:	movw	r1, #0
   1973c:	cmp	r0, r1
   19740:	bne	19750 <__assert_fail@plt+0x8274>
   19744:	movw	r0, #25020	; 0x61bc
   19748:	movt	r0, #3
   1974c:	str	r0, [sp, #8]
   19750:	ldr	r0, [sp, #8]
   19754:	ldr	r0, [r0, #4]
   19758:	str	r0, [sp]
   1975c:	ldr	r0, [sp, #4]
   19760:	ldr	r1, [sp, #8]
   19764:	str	r0, [r1, #4]
   19768:	ldr	r0, [sp]
   1976c:	add	sp, sp, #12
   19770:	bx	lr
   19774:	push	{fp, lr}
   19778:	mov	fp, sp
   1977c:	sub	sp, sp, #16
   19780:	str	r0, [fp, #-4]
   19784:	str	r1, [sp, #8]
   19788:	str	r2, [sp, #4]
   1978c:	ldr	r0, [fp, #-4]
   19790:	movw	r1, #0
   19794:	cmp	r0, r1
   19798:	bne	197a8 <__assert_fail@plt+0x82cc>
   1979c:	movw	r0, #25020	; 0x61bc
   197a0:	movt	r0, #3
   197a4:	str	r0, [fp, #-4]
   197a8:	ldr	r0, [fp, #-4]
   197ac:	movw	r1, #10
   197b0:	str	r1, [r0]
   197b4:	ldr	r0, [sp, #8]
   197b8:	movw	r1, #0
   197bc:	cmp	r0, r1
   197c0:	beq	197d4 <__assert_fail@plt+0x82f8>
   197c4:	ldr	r0, [sp, #4]
   197c8:	movw	r1, #0
   197cc:	cmp	r0, r1
   197d0:	bne	197d8 <__assert_fail@plt+0x82fc>
   197d4:	bl	11494 <abort@plt>
   197d8:	ldr	r0, [sp, #8]
   197dc:	ldr	r1, [fp, #-4]
   197e0:	str	r0, [r1, #40]	; 0x28
   197e4:	ldr	r0, [sp, #4]
   197e8:	ldr	r1, [fp, #-4]
   197ec:	str	r0, [r1, #44]	; 0x2c
   197f0:	mov	sp, fp
   197f4:	pop	{fp, pc}
   197f8:	push	{r4, r5, r6, sl, fp, lr}
   197fc:	add	fp, sp, #16
   19800:	sub	sp, sp, #64	; 0x40
   19804:	ldr	ip, [fp, #8]
   19808:	str	r0, [fp, #-20]	; 0xffffffec
   1980c:	str	r1, [fp, #-24]	; 0xffffffe8
   19810:	str	r2, [fp, #-28]	; 0xffffffe4
   19814:	str	r3, [fp, #-32]	; 0xffffffe0
   19818:	ldr	r0, [fp, #8]
   1981c:	movw	r1, #0
   19820:	cmp	r0, r1
   19824:	str	ip, [sp, #32]
   19828:	beq	19838 <__assert_fail@plt+0x835c>
   1982c:	ldr	r0, [fp, #8]
   19830:	str	r0, [sp, #28]
   19834:	b	19848 <__assert_fail@plt+0x836c>
   19838:	movw	r0, #25020	; 0x61bc
   1983c:	movt	r0, #3
   19840:	str	r0, [sp, #28]
   19844:	b	19848 <__assert_fail@plt+0x836c>
   19848:	ldr	r0, [sp, #28]
   1984c:	str	r0, [fp, #-36]	; 0xffffffdc
   19850:	bl	11398 <__errno_location@plt>
   19854:	ldr	r0, [r0]
   19858:	str	r0, [sp, #40]	; 0x28
   1985c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1986c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19870:	ldr	lr, [lr]
   19874:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19878:	ldr	ip, [ip, #4]
   1987c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19880:	add	r4, r4, #8
   19884:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19888:	ldr	r5, [r5, #40]	; 0x28
   1988c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19890:	ldr	r6, [r6, #44]	; 0x2c
   19894:	str	lr, [sp]
   19898:	str	ip, [sp, #4]
   1989c:	str	r4, [sp, #8]
   198a0:	str	r5, [sp, #12]
   198a4:	str	r6, [sp, #16]
   198a8:	bl	198d0 <__assert_fail@plt+0x83f4>
   198ac:	str	r0, [sp, #36]	; 0x24
   198b0:	ldr	r0, [sp, #40]	; 0x28
   198b4:	str	r0, [sp, #24]
   198b8:	bl	11398 <__errno_location@plt>
   198bc:	ldr	r1, [sp, #24]
   198c0:	str	r1, [r0]
   198c4:	ldr	r0, [sp, #36]	; 0x24
   198c8:	sub	sp, fp, #16
   198cc:	pop	{r4, r5, r6, sl, fp, pc}
   198d0:	push	{r4, r5, r6, sl, fp, lr}
   198d4:	add	fp, sp, #16
   198d8:	sub	sp, sp, #168	; 0xa8
   198dc:	ldr	ip, [fp, #24]
   198e0:	ldr	lr, [fp, #20]
   198e4:	ldr	r4, [fp, #16]
   198e8:	ldr	r5, [fp, #12]
   198ec:	ldr	r6, [fp, #8]
   198f0:	str	r0, [fp, #-24]	; 0xffffffe8
   198f4:	str	r1, [fp, #-28]	; 0xffffffe4
   198f8:	str	r2, [fp, #-32]	; 0xffffffe0
   198fc:	str	r3, [fp, #-36]	; 0xffffffdc
   19900:	movw	r0, #0
   19904:	str	r0, [fp, #-44]	; 0xffffffd4
   19908:	str	r0, [fp, #-48]	; 0xffffffd0
   1990c:	str	r0, [fp, #-52]	; 0xffffffcc
   19910:	str	r0, [fp, #-56]	; 0xffffffc8
   19914:	movw	r0, #0
   19918:	strb	r0, [fp, #-57]	; 0xffffffc7
   1991c:	str	r6, [sp, #80]	; 0x50
   19920:	str	lr, [sp, #76]	; 0x4c
   19924:	str	r4, [sp, #72]	; 0x48
   19928:	str	r5, [sp, #68]	; 0x44
   1992c:	str	ip, [sp, #64]	; 0x40
   19930:	bl	112b4 <__ctype_get_mb_cur_max@plt>
   19934:	cmp	r0, #1
   19938:	movw	r0, #0
   1993c:	moveq	r0, #1
   19940:	and	r0, r0, #1
   19944:	strb	r0, [fp, #-58]	; 0xffffffc6
   19948:	ldr	r0, [fp, #12]
   1994c:	and	r0, r0, #2
   19950:	cmp	r0, #0
   19954:	movw	r0, #0
   19958:	movne	r0, #1
   1995c:	and	r0, r0, #1
   19960:	strb	r0, [fp, #-59]	; 0xffffffc5
   19964:	movw	r0, #0
   19968:	strb	r0, [fp, #-60]	; 0xffffffc4
   1996c:	strb	r0, [fp, #-61]	; 0xffffffc3
   19970:	movw	r0, #1
   19974:	strb	r0, [fp, #-62]	; 0xffffffc2
   19978:	ldr	r0, [fp, #8]
   1997c:	cmp	r0, #10
   19980:	str	r0, [sp, #60]	; 0x3c
   19984:	bhi	19bac <__assert_fail@plt+0x86d0>
   19988:	add	r0, pc, #8
   1998c:	ldr	r1, [sp, #60]	; 0x3c
   19990:	ldr	r0, [r0, r1, lsl #2]
   19994:	mov	pc, r0
   19998:	andeq	r9, r1, r0, lsr #23
   1999c:	andeq	r9, r1, ip, lsl fp
   199a0:	andeq	r9, r1, ip, lsr fp
   199a4:	andeq	r9, r1, r4, lsl fp
   199a8:	andeq	r9, r1, r4, lsr #22
   199ac:	ldrdeq	r9, [r1], -r4
   199b0:	andeq	r9, r1, r4, asr #19
   199b4:	andeq	r9, r1, r8, lsr sl
   199b8:	andeq	r9, r1, ip, asr #20
   199bc:	andeq	r9, r1, ip, asr #20
   199c0:	andeq	r9, r1, ip, asr #20
   199c4:	movw	r0, #5
   199c8:	str	r0, [fp, #8]
   199cc:	movw	r0, #1
   199d0:	strb	r0, [fp, #-59]	; 0xffffffc5
   199d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   199d8:	tst	r0, #1
   199dc:	bne	19a18 <__assert_fail@plt+0x853c>
   199e0:	b	199e4 <__assert_fail@plt+0x8508>
   199e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199ec:	cmp	r0, r1
   199f0:	bcs	19a08 <__assert_fail@plt+0x852c>
   199f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199fc:	add	r0, r0, r1
   19a00:	movw	r1, #34	; 0x22
   19a04:	strb	r1, [r0]
   19a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a0c:	add	r0, r0, #1
   19a10:	str	r0, [fp, #-44]	; 0xffffffd4
   19a14:	b	19a18 <__assert_fail@plt+0x853c>
   19a18:	movw	r0, #1
   19a1c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a20:	movw	r0, #22380	; 0x576c
   19a24:	movt	r0, #2
   19a28:	str	r0, [fp, #-52]	; 0xffffffcc
   19a2c:	movw	r0, #1
   19a30:	str	r0, [fp, #-56]	; 0xffffffc8
   19a34:	b	19bb0 <__assert_fail@plt+0x86d4>
   19a38:	movw	r0, #1
   19a3c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a40:	movw	r0, #0
   19a44:	strb	r0, [fp, #-59]	; 0xffffffc5
   19a48:	b	19bb0 <__assert_fail@plt+0x86d4>
   19a4c:	ldr	r0, [fp, #8]
   19a50:	cmp	r0, #10
   19a54:	beq	19a80 <__assert_fail@plt+0x85a4>
   19a58:	ldr	r1, [fp, #8]
   19a5c:	movw	r0, #22382	; 0x576e
   19a60:	movt	r0, #2
   19a64:	bl	1bac0 <__assert_fail@plt+0xa5e4>
   19a68:	str	r0, [fp, #20]
   19a6c:	ldr	r1, [fp, #8]
   19a70:	movw	r0, #22384	; 0x5770
   19a74:	movt	r0, #2
   19a78:	bl	1bac0 <__assert_fail@plt+0xa5e4>
   19a7c:	str	r0, [fp, #24]
   19a80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19a84:	tst	r0, #1
   19a88:	bne	19af4 <__assert_fail@plt+0x8618>
   19a8c:	ldr	r0, [fp, #20]
   19a90:	str	r0, [fp, #-52]	; 0xffffffcc
   19a94:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19a98:	ldrsb	r0, [r0]
   19a9c:	cmp	r0, #0
   19aa0:	beq	19af0 <__assert_fail@plt+0x8614>
   19aa4:	b	19aa8 <__assert_fail@plt+0x85cc>
   19aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ab0:	cmp	r0, r1
   19ab4:	bcs	19ad0 <__assert_fail@plt+0x85f4>
   19ab8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19abc:	ldrb	r0, [r0]
   19ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ac4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19ac8:	add	r1, r1, r2
   19acc:	strb	r0, [r1]
   19ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ad4:	add	r0, r0, #1
   19ad8:	str	r0, [fp, #-44]	; 0xffffffd4
   19adc:	b	19ae0 <__assert_fail@plt+0x8604>
   19ae0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19ae4:	add	r0, r0, #1
   19ae8:	str	r0, [fp, #-52]	; 0xffffffcc
   19aec:	b	19a94 <__assert_fail@plt+0x85b8>
   19af0:	b	19af4 <__assert_fail@plt+0x8618>
   19af4:	movw	r0, #1
   19af8:	strb	r0, [fp, #-57]	; 0xffffffc7
   19afc:	ldr	r0, [fp, #24]
   19b00:	str	r0, [fp, #-52]	; 0xffffffcc
   19b04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19b08:	bl	1135c <strlen@plt>
   19b0c:	str	r0, [fp, #-56]	; 0xffffffc8
   19b10:	b	19bb0 <__assert_fail@plt+0x86d4>
   19b14:	movw	r0, #1
   19b18:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b1c:	movw	r0, #1
   19b20:	strb	r0, [fp, #-59]	; 0xffffffc5
   19b24:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b28:	tst	r0, #1
   19b2c:	bne	19b38 <__assert_fail@plt+0x865c>
   19b30:	movw	r0, #1
   19b34:	strb	r0, [fp, #-57]	; 0xffffffc7
   19b38:	b	19b3c <__assert_fail@plt+0x8660>
   19b3c:	movw	r0, #2
   19b40:	str	r0, [fp, #8]
   19b44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b48:	tst	r0, #1
   19b4c:	bne	19b88 <__assert_fail@plt+0x86ac>
   19b50:	b	19b54 <__assert_fail@plt+0x8678>
   19b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19b5c:	cmp	r0, r1
   19b60:	bcs	19b78 <__assert_fail@plt+0x869c>
   19b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b6c:	add	r0, r0, r1
   19b70:	movw	r1, #39	; 0x27
   19b74:	strb	r1, [r0]
   19b78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b7c:	add	r0, r0, #1
   19b80:	str	r0, [fp, #-44]	; 0xffffffd4
   19b84:	b	19b88 <__assert_fail@plt+0x86ac>
   19b88:	movw	r0, #22384	; 0x5770
   19b8c:	movt	r0, #2
   19b90:	str	r0, [fp, #-52]	; 0xffffffcc
   19b94:	movw	r0, #1
   19b98:	str	r0, [fp, #-56]	; 0xffffffc8
   19b9c:	b	19bb0 <__assert_fail@plt+0x86d4>
   19ba0:	movw	r0, #0
   19ba4:	strb	r0, [fp, #-59]	; 0xffffffc5
   19ba8:	b	19bb0 <__assert_fail@plt+0x86d4>
   19bac:	bl	11494 <abort@plt>
   19bb0:	movw	r0, #0
   19bb4:	str	r0, [fp, #-40]	; 0xffffffd8
   19bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19bbc:	cmn	r0, #1
   19bc0:	bne	19bec <__assert_fail@plt+0x8710>
   19bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bc8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bcc:	add	r0, r0, r1
   19bd0:	ldrb	r0, [r0]
   19bd4:	cmp	r0, #0
   19bd8:	movw	r0, #0
   19bdc:	moveq	r0, #1
   19be0:	and	r0, r0, #1
   19be4:	str	r0, [sp, #56]	; 0x38
   19be8:	b	19c08 <__assert_fail@plt+0x872c>
   19bec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19bf4:	cmp	r0, r1
   19bf8:	movw	r0, #0
   19bfc:	moveq	r0, #1
   19c00:	and	r0, r0, #1
   19c04:	str	r0, [sp, #56]	; 0x38
   19c08:	ldr	r0, [sp, #56]	; 0x38
   19c0c:	cmp	r0, #0
   19c10:	movw	r0, #0
   19c14:	movne	r0, #1
   19c18:	mvn	r1, #0
   19c1c:	eor	r0, r0, r1
   19c20:	tst	r0, #1
   19c24:	beq	1ae14 <__assert_fail@plt+0x9938>
   19c28:	movw	r0, #0
   19c2c:	strb	r0, [fp, #-65]	; 0xffffffbf
   19c30:	strb	r0, [fp, #-66]	; 0xffffffbe
   19c34:	strb	r0, [fp, #-67]	; 0xffffffbd
   19c38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19c3c:	tst	r0, #1
   19c40:	beq	19cec <__assert_fail@plt+0x8810>
   19c44:	ldr	r0, [fp, #8]
   19c48:	cmp	r0, #2
   19c4c:	beq	19cec <__assert_fail@plt+0x8810>
   19c50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19c54:	cmp	r0, #0
   19c58:	beq	19cec <__assert_fail@plt+0x8810>
   19c5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c60:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19c64:	add	r0, r0, r1
   19c68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19c6c:	cmn	r1, #1
   19c70:	str	r0, [sp, #52]	; 0x34
   19c74:	bne	19c9c <__assert_fail@plt+0x87c0>
   19c78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19c7c:	movw	r1, #1
   19c80:	cmp	r1, r0
   19c84:	bcs	19c9c <__assert_fail@plt+0x87c0>
   19c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c8c:	bl	1135c <strlen@plt>
   19c90:	str	r0, [fp, #-36]	; 0xffffffdc
   19c94:	str	r0, [sp, #48]	; 0x30
   19c98:	b	19ca4 <__assert_fail@plt+0x87c8>
   19c9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ca0:	str	r0, [sp, #48]	; 0x30
   19ca4:	ldr	r0, [sp, #48]	; 0x30
   19ca8:	ldr	r1, [sp, #52]	; 0x34
   19cac:	cmp	r1, r0
   19cb0:	bhi	19cec <__assert_fail@plt+0x8810>
   19cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19cbc:	add	r0, r0, r1
   19cc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19cc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19cc8:	bl	11254 <memcmp@plt>
   19ccc:	cmp	r0, #0
   19cd0:	bne	19cec <__assert_fail@plt+0x8810>
   19cd4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19cd8:	tst	r0, #1
   19cdc:	beq	19ce4 <__assert_fail@plt+0x8808>
   19ce0:	b	1af94 <__assert_fail@plt+0x9ab8>
   19ce4:	movw	r0, #1
   19ce8:	strb	r0, [fp, #-65]	; 0xffffffbf
   19cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19cf4:	ldrb	r0, [r0, r1]
   19cf8:	strb	r0, [fp, #-63]	; 0xffffffc1
   19cfc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19d00:	mov	r1, r0
   19d04:	cmp	r0, #126	; 0x7e
   19d08:	str	r1, [sp, #44]	; 0x2c
   19d0c:	bhi	1a57c <__assert_fail@plt+0x90a0>
   19d10:	add	r0, pc, #8
   19d14:	ldr	r1, [sp, #44]	; 0x2c
   19d18:	ldr	r0, [r0, r1, lsl #2]
   19d1c:	mov	pc, r0
   19d20:	andeq	r9, r1, ip, lsl pc
   19d24:	andeq	sl, r1, ip, ror r5
   19d28:	andeq	sl, r1, ip, ror r5
   19d2c:	andeq	sl, r1, ip, ror r5
   19d30:	andeq	sl, r1, ip, ror r5
   19d34:	andeq	sl, r1, ip, ror r5
   19d38:	andeq	sl, r1, ip, ror r5
   19d3c:	andeq	sl, r1, r4, lsr #6
   19d40:	andeq	sl, r1, r0, lsr r3
   19d44:	andeq	sl, r1, r0, ror #6
   19d48:	andeq	sl, r1, r8, asr #6
   19d4c:	andeq	sl, r1, ip, ror #6
   19d50:	andeq	sl, r1, ip, lsr r3
   19d54:	andeq	sl, r1, r4, asr r3
   19d58:	andeq	sl, r1, ip, ror r5
   19d5c:	andeq	sl, r1, ip, ror r5
   19d60:	andeq	sl, r1, ip, ror r5
   19d64:	andeq	sl, r1, ip, ror r5
   19d68:	andeq	sl, r1, ip, ror r5
   19d6c:	andeq	sl, r1, ip, ror r5
   19d70:	andeq	sl, r1, ip, ror r5
   19d74:	andeq	sl, r1, ip, ror r5
   19d78:	andeq	sl, r1, ip, ror r5
   19d7c:	andeq	sl, r1, ip, ror r5
   19d80:	andeq	sl, r1, ip, ror r5
   19d84:	andeq	sl, r1, ip, ror r5
   19d88:	andeq	sl, r1, ip, ror r5
   19d8c:	andeq	sl, r1, ip, ror r5
   19d90:	andeq	sl, r1, ip, ror r5
   19d94:	andeq	sl, r1, ip, ror r5
   19d98:	andeq	sl, r1, ip, ror r5
   19d9c:	andeq	sl, r1, ip, ror r5
   19da0:	andeq	sl, r1, r0, asr r4
   19da4:	andeq	sl, r1, r8, asr r4
   19da8:	andeq	sl, r1, r8, asr r4
   19dac:	andeq	sl, r1, ip, lsr r4
   19db0:	andeq	sl, r1, r8, asr r4
   19db4:	andeq	sl, r1, r0, ror r5
   19db8:	andeq	sl, r1, r8, asr r4
   19dbc:	andeq	sl, r1, r8, ror r4
   19dc0:	andeq	sl, r1, r8, asr r4
   19dc4:	andeq	sl, r1, r8, asr r4
   19dc8:	andeq	sl, r1, r8, asr r4
   19dcc:	andeq	sl, r1, r0, ror r5
   19dd0:	andeq	sl, r1, r0, ror r5
   19dd4:	andeq	sl, r1, r0, ror r5
   19dd8:	andeq	sl, r1, r0, ror r5
   19ddc:	andeq	sl, r1, r0, ror r5
   19de0:	andeq	sl, r1, r0, ror r5
   19de4:	andeq	sl, r1, r0, ror r5
   19de8:	andeq	sl, r1, r0, ror r5
   19dec:	andeq	sl, r1, r0, ror r5
   19df0:	andeq	sl, r1, r0, ror r5
   19df4:	andeq	sl, r1, r0, ror r5
   19df8:	andeq	sl, r1, r0, ror r5
   19dfc:	andeq	sl, r1, r0, ror r5
   19e00:	andeq	sl, r1, r0, ror r5
   19e04:	andeq	sl, r1, r0, ror r5
   19e08:	andeq	sl, r1, r0, ror r5
   19e0c:	andeq	sl, r1, r8, asr r4
   19e10:	andeq	sl, r1, r8, asr r4
   19e14:	andeq	sl, r1, r8, asr r4
   19e18:	andeq	sl, r1, r8, asr r4
   19e1c:	andeq	sl, r1, r8, lsr #2
   19e20:	andeq	sl, r1, ip, ror r5
   19e24:	andeq	sl, r1, r0, ror r5
   19e28:	andeq	sl, r1, r0, ror r5
   19e2c:	andeq	sl, r1, r0, ror r5
   19e30:	andeq	sl, r1, r0, ror r5
   19e34:	andeq	sl, r1, r0, ror r5
   19e38:	andeq	sl, r1, r0, ror r5
   19e3c:	andeq	sl, r1, r0, ror r5
   19e40:	andeq	sl, r1, r0, ror r5
   19e44:	andeq	sl, r1, r0, ror r5
   19e48:	andeq	sl, r1, r0, ror r5
   19e4c:	andeq	sl, r1, r0, ror r5
   19e50:	andeq	sl, r1, r0, ror r5
   19e54:	andeq	sl, r1, r0, ror r5
   19e58:	andeq	sl, r1, r0, ror r5
   19e5c:	andeq	sl, r1, r0, ror r5
   19e60:	andeq	sl, r1, r0, ror r5
   19e64:	andeq	sl, r1, r0, ror r5
   19e68:	andeq	sl, r1, r0, ror r5
   19e6c:	andeq	sl, r1, r0, ror r5
   19e70:	andeq	sl, r1, r0, ror r5
   19e74:	andeq	sl, r1, r0, ror r5
   19e78:	andeq	sl, r1, r0, ror r5
   19e7c:	andeq	sl, r1, r0, ror r5
   19e80:	andeq	sl, r1, r0, ror r5
   19e84:	andeq	sl, r1, r0, ror r5
   19e88:	andeq	sl, r1, r0, ror r5
   19e8c:	andeq	sl, r1, r8, asr r4
   19e90:	andeq	sl, r1, r8, ror r3
   19e94:	andeq	sl, r1, r0, ror r5
   19e98:	andeq	sl, r1, r8, asr r4
   19e9c:	andeq	sl, r1, r0, ror r5
   19ea0:	andeq	sl, r1, r8, asr r4
   19ea4:	andeq	sl, r1, r0, ror r5
   19ea8:	andeq	sl, r1, r0, ror r5
   19eac:	andeq	sl, r1, r0, ror r5
   19eb0:	andeq	sl, r1, r0, ror r5
   19eb4:	andeq	sl, r1, r0, ror r5
   19eb8:	andeq	sl, r1, r0, ror r5
   19ebc:	andeq	sl, r1, r0, ror r5
   19ec0:	andeq	sl, r1, r0, ror r5
   19ec4:	andeq	sl, r1, r0, ror r5
   19ec8:	andeq	sl, r1, r0, ror r5
   19ecc:	andeq	sl, r1, r0, ror r5
   19ed0:	andeq	sl, r1, r0, ror r5
   19ed4:	andeq	sl, r1, r0, ror r5
   19ed8:	andeq	sl, r1, r0, ror r5
   19edc:	andeq	sl, r1, r0, ror r5
   19ee0:	andeq	sl, r1, r0, ror r5
   19ee4:	andeq	sl, r1, r0, ror r5
   19ee8:	andeq	sl, r1, r0, ror r5
   19eec:	andeq	sl, r1, r0, ror r5
   19ef0:	andeq	sl, r1, r0, ror r5
   19ef4:	andeq	sl, r1, r0, ror r5
   19ef8:	andeq	sl, r1, r0, ror r5
   19efc:	andeq	sl, r1, r0, ror r5
   19f00:	andeq	sl, r1, r0, ror r5
   19f04:	andeq	sl, r1, r0, ror r5
   19f08:	andeq	sl, r1, r0, ror r5
   19f0c:	andeq	sl, r1, r8, lsl #8
   19f10:	andeq	sl, r1, r8, asr r4
   19f14:	andeq	sl, r1, r8, lsl #8
   19f18:	andeq	sl, r1, ip, lsr r4
   19f1c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19f20:	tst	r0, #1
   19f24:	beq	1a10c <__assert_fail@plt+0x8c30>
   19f28:	b	19f2c <__assert_fail@plt+0x8a50>
   19f2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19f30:	tst	r0, #1
   19f34:	beq	19f3c <__assert_fail@plt+0x8a60>
   19f38:	b	1af94 <__assert_fail@plt+0x9ab8>
   19f3c:	movw	r0, #1
   19f40:	strb	r0, [fp, #-66]	; 0xffffffbe
   19f44:	ldr	r0, [fp, #8]
   19f48:	cmp	r0, #2
   19f4c:	bne	1a000 <__assert_fail@plt+0x8b24>
   19f50:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19f54:	tst	r0, #1
   19f58:	bne	1a000 <__assert_fail@plt+0x8b24>
   19f5c:	b	19f60 <__assert_fail@plt+0x8a84>
   19f60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f68:	cmp	r0, r1
   19f6c:	bcs	19f84 <__assert_fail@plt+0x8aa8>
   19f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f78:	add	r0, r0, r1
   19f7c:	movw	r1, #39	; 0x27
   19f80:	strb	r1, [r0]
   19f84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f88:	add	r0, r0, #1
   19f8c:	str	r0, [fp, #-44]	; 0xffffffd4
   19f90:	b	19f94 <__assert_fail@plt+0x8ab8>
   19f94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f9c:	cmp	r0, r1
   19fa0:	bcs	19fb8 <__assert_fail@plt+0x8adc>
   19fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fac:	add	r0, r0, r1
   19fb0:	movw	r1, #36	; 0x24
   19fb4:	strb	r1, [r0]
   19fb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fbc:	add	r0, r0, #1
   19fc0:	str	r0, [fp, #-44]	; 0xffffffd4
   19fc4:	b	19fc8 <__assert_fail@plt+0x8aec>
   19fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19fd0:	cmp	r0, r1
   19fd4:	bcs	19fec <__assert_fail@plt+0x8b10>
   19fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fe0:	add	r0, r0, r1
   19fe4:	movw	r1, #39	; 0x27
   19fe8:	strb	r1, [r0]
   19fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ff0:	add	r0, r0, #1
   19ff4:	str	r0, [fp, #-44]	; 0xffffffd4
   19ff8:	movw	r0, #1
   19ffc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a000:	b	1a004 <__assert_fail@plt+0x8b28>
   1a004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a00c:	cmp	r0, r1
   1a010:	bcs	1a028 <__assert_fail@plt+0x8b4c>
   1a014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a018:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a01c:	add	r0, r0, r1
   1a020:	movw	r1, #92	; 0x5c
   1a024:	strb	r1, [r0]
   1a028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a02c:	add	r0, r0, #1
   1a030:	str	r0, [fp, #-44]	; 0xffffffd4
   1a034:	b	1a038 <__assert_fail@plt+0x8b5c>
   1a038:	ldr	r0, [fp, #8]
   1a03c:	cmp	r0, #2
   1a040:	beq	1a100 <__assert_fail@plt+0x8c24>
   1a044:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a048:	add	r0, r0, #1
   1a04c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a050:	cmp	r0, r1
   1a054:	bcs	1a100 <__assert_fail@plt+0x8c24>
   1a058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a05c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a060:	add	r1, r1, #1
   1a064:	add	r0, r0, r1
   1a068:	ldrb	r0, [r0]
   1a06c:	movw	r1, #48	; 0x30
   1a070:	cmp	r1, r0
   1a074:	bgt	1a100 <__assert_fail@plt+0x8c24>
   1a078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a07c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a080:	add	r1, r1, #1
   1a084:	add	r0, r0, r1
   1a088:	ldrb	r0, [r0]
   1a08c:	cmp	r0, #57	; 0x39
   1a090:	bgt	1a100 <__assert_fail@plt+0x8c24>
   1a094:	b	1a098 <__assert_fail@plt+0x8bbc>
   1a098:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a09c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0a0:	cmp	r0, r1
   1a0a4:	bcs	1a0bc <__assert_fail@plt+0x8be0>
   1a0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0b0:	add	r0, r0, r1
   1a0b4:	movw	r1, #48	; 0x30
   1a0b8:	strb	r1, [r0]
   1a0bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0c0:	add	r0, r0, #1
   1a0c4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a0c8:	b	1a0cc <__assert_fail@plt+0x8bf0>
   1a0cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0d4:	cmp	r0, r1
   1a0d8:	bcs	1a0f0 <__assert_fail@plt+0x8c14>
   1a0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0e4:	add	r0, r0, r1
   1a0e8:	movw	r1, #48	; 0x30
   1a0ec:	strb	r1, [r0]
   1a0f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0f4:	add	r0, r0, #1
   1a0f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a0fc:	b	1a100 <__assert_fail@plt+0x8c24>
   1a100:	movw	r0, #48	; 0x30
   1a104:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a108:	b	1a124 <__assert_fail@plt+0x8c48>
   1a10c:	ldr	r0, [fp, #12]
   1a110:	and	r0, r0, #1
   1a114:	cmp	r0, #0
   1a118:	beq	1a120 <__assert_fail@plt+0x8c44>
   1a11c:	b	1ae04 <__assert_fail@plt+0x9928>
   1a120:	b	1a124 <__assert_fail@plt+0x8c48>
   1a124:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a128:	ldr	r0, [fp, #8]
   1a12c:	cmp	r0, #2
   1a130:	str	r0, [sp, #40]	; 0x28
   1a134:	beq	1a14c <__assert_fail@plt+0x8c70>
   1a138:	b	1a13c <__assert_fail@plt+0x8c60>
   1a13c:	ldr	r0, [sp, #40]	; 0x28
   1a140:	cmp	r0, #5
   1a144:	beq	1a160 <__assert_fail@plt+0x8c84>
   1a148:	b	1a31c <__assert_fail@plt+0x8e40>
   1a14c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a150:	tst	r0, #1
   1a154:	beq	1a15c <__assert_fail@plt+0x8c80>
   1a158:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a15c:	b	1a320 <__assert_fail@plt+0x8e44>
   1a160:	ldr	r0, [fp, #12]
   1a164:	and	r0, r0, #4
   1a168:	cmp	r0, #0
   1a16c:	beq	1a318 <__assert_fail@plt+0x8e3c>
   1a170:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a174:	add	r0, r0, #2
   1a178:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a17c:	cmp	r0, r1
   1a180:	bcs	1a318 <__assert_fail@plt+0x8e3c>
   1a184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a188:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a18c:	add	r1, r1, #1
   1a190:	add	r0, r0, r1
   1a194:	ldrb	r0, [r0]
   1a198:	cmp	r0, #63	; 0x3f
   1a19c:	bne	1a318 <__assert_fail@plt+0x8e3c>
   1a1a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1a8:	add	r0, r0, r1
   1a1ac:	ldrb	r0, [r0, #2]
   1a1b0:	mov	r1, r0
   1a1b4:	cmp	r0, #33	; 0x21
   1a1b8:	str	r1, [sp, #36]	; 0x24
   1a1bc:	beq	1a20c <__assert_fail@plt+0x8d30>
   1a1c0:	b	1a1c4 <__assert_fail@plt+0x8ce8>
   1a1c4:	ldr	r0, [sp, #36]	; 0x24
   1a1c8:	sub	r1, r0, #39	; 0x27
   1a1cc:	cmp	r1, #3
   1a1d0:	bcc	1a20c <__assert_fail@plt+0x8d30>
   1a1d4:	b	1a1d8 <__assert_fail@plt+0x8cfc>
   1a1d8:	ldr	r0, [sp, #36]	; 0x24
   1a1dc:	cmp	r0, #45	; 0x2d
   1a1e0:	beq	1a20c <__assert_fail@plt+0x8d30>
   1a1e4:	b	1a1e8 <__assert_fail@plt+0x8d0c>
   1a1e8:	ldr	r0, [sp, #36]	; 0x24
   1a1ec:	cmp	r0, #47	; 0x2f
   1a1f0:	beq	1a20c <__assert_fail@plt+0x8d30>
   1a1f4:	b	1a1f8 <__assert_fail@plt+0x8d1c>
   1a1f8:	ldr	r0, [sp, #36]	; 0x24
   1a1fc:	sub	r1, r0, #60	; 0x3c
   1a200:	cmp	r1, #2
   1a204:	bhi	1a310 <__assert_fail@plt+0x8e34>
   1a208:	b	1a20c <__assert_fail@plt+0x8d30>
   1a20c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a210:	tst	r0, #1
   1a214:	beq	1a21c <__assert_fail@plt+0x8d40>
   1a218:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a220:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a224:	add	r1, r1, #2
   1a228:	add	r0, r0, r1
   1a22c:	ldrb	r0, [r0]
   1a230:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a234:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a238:	add	r0, r0, #2
   1a23c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a240:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a244:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a248:	cmp	r0, r1
   1a24c:	bcs	1a264 <__assert_fail@plt+0x8d88>
   1a250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a254:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a258:	add	r0, r0, r1
   1a25c:	movw	r1, #63	; 0x3f
   1a260:	strb	r1, [r0]
   1a264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a268:	add	r0, r0, #1
   1a26c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a270:	b	1a274 <__assert_fail@plt+0x8d98>
   1a274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a278:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a27c:	cmp	r0, r1
   1a280:	bcs	1a298 <__assert_fail@plt+0x8dbc>
   1a284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a28c:	add	r0, r0, r1
   1a290:	movw	r1, #34	; 0x22
   1a294:	strb	r1, [r0]
   1a298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a29c:	add	r0, r0, #1
   1a2a0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2a4:	b	1a2a8 <__assert_fail@plt+0x8dcc>
   1a2a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2b0:	cmp	r0, r1
   1a2b4:	bcs	1a2cc <__assert_fail@plt+0x8df0>
   1a2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2c0:	add	r0, r0, r1
   1a2c4:	movw	r1, #34	; 0x22
   1a2c8:	strb	r1, [r0]
   1a2cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2d0:	add	r0, r0, #1
   1a2d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2d8:	b	1a2dc <__assert_fail@plt+0x8e00>
   1a2dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2e4:	cmp	r0, r1
   1a2e8:	bcs	1a300 <__assert_fail@plt+0x8e24>
   1a2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2f4:	add	r0, r0, r1
   1a2f8:	movw	r1, #63	; 0x3f
   1a2fc:	strb	r1, [r0]
   1a300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a304:	add	r0, r0, #1
   1a308:	str	r0, [fp, #-44]	; 0xffffffd4
   1a30c:	b	1a314 <__assert_fail@plt+0x8e38>
   1a310:	b	1a314 <__assert_fail@plt+0x8e38>
   1a314:	b	1a318 <__assert_fail@plt+0x8e3c>
   1a318:	b	1a320 <__assert_fail@plt+0x8e44>
   1a31c:	b	1a320 <__assert_fail@plt+0x8e44>
   1a320:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a324:	movw	r0, #97	; 0x61
   1a328:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a32c:	b	1a3ec <__assert_fail@plt+0x8f10>
   1a330:	movw	r0, #98	; 0x62
   1a334:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a338:	b	1a3ec <__assert_fail@plt+0x8f10>
   1a33c:	movw	r0, #102	; 0x66
   1a340:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a344:	b	1a3ec <__assert_fail@plt+0x8f10>
   1a348:	movw	r0, #110	; 0x6e
   1a34c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a350:	b	1a3cc <__assert_fail@plt+0x8ef0>
   1a354:	movw	r0, #114	; 0x72
   1a358:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a35c:	b	1a3cc <__assert_fail@plt+0x8ef0>
   1a360:	movw	r0, #116	; 0x74
   1a364:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a368:	b	1a3cc <__assert_fail@plt+0x8ef0>
   1a36c:	movw	r0, #118	; 0x76
   1a370:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a374:	b	1a3ec <__assert_fail@plt+0x8f10>
   1a378:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a37c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a380:	ldr	r0, [fp, #8]
   1a384:	cmp	r0, #2
   1a388:	bne	1a3a0 <__assert_fail@plt+0x8ec4>
   1a38c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a390:	tst	r0, #1
   1a394:	beq	1a39c <__assert_fail@plt+0x8ec0>
   1a398:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a39c:	b	1ad28 <__assert_fail@plt+0x984c>
   1a3a0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a3a4:	tst	r0, #1
   1a3a8:	beq	1a3c8 <__assert_fail@plt+0x8eec>
   1a3ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a3b0:	tst	r0, #1
   1a3b4:	beq	1a3c8 <__assert_fail@plt+0x8eec>
   1a3b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3bc:	cmp	r0, #0
   1a3c0:	beq	1a3c8 <__assert_fail@plt+0x8eec>
   1a3c4:	b	1ad28 <__assert_fail@plt+0x984c>
   1a3c8:	b	1a3cc <__assert_fail@plt+0x8ef0>
   1a3cc:	ldr	r0, [fp, #8]
   1a3d0:	cmp	r0, #2
   1a3d4:	bne	1a3e8 <__assert_fail@plt+0x8f0c>
   1a3d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a3dc:	tst	r0, #1
   1a3e0:	beq	1a3e8 <__assert_fail@plt+0x8f0c>
   1a3e4:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a3e8:	b	1a3ec <__assert_fail@plt+0x8f10>
   1a3ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a3f0:	tst	r0, #1
   1a3f4:	beq	1a404 <__assert_fail@plt+0x8f28>
   1a3f8:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1a3fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a400:	b	1ac14 <__assert_fail@plt+0x9738>
   1a404:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a408:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a40c:	cmn	r0, #1
   1a410:	bne	1a428 <__assert_fail@plt+0x8f4c>
   1a414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a418:	ldrb	r0, [r0, #1]
   1a41c:	cmp	r0, #0
   1a420:	beq	1a438 <__assert_fail@plt+0x8f5c>
   1a424:	b	1a434 <__assert_fail@plt+0x8f58>
   1a428:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a42c:	cmp	r0, #1
   1a430:	beq	1a438 <__assert_fail@plt+0x8f5c>
   1a434:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a438:	b	1a43c <__assert_fail@plt+0x8f60>
   1a43c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a440:	cmp	r0, #0
   1a444:	beq	1a44c <__assert_fail@plt+0x8f70>
   1a448:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a44c:	b	1a450 <__assert_fail@plt+0x8f74>
   1a450:	movw	r0, #1
   1a454:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a458:	ldr	r0, [fp, #8]
   1a45c:	cmp	r0, #2
   1a460:	bne	1a474 <__assert_fail@plt+0x8f98>
   1a464:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a468:	tst	r0, #1
   1a46c:	beq	1a474 <__assert_fail@plt+0x8f98>
   1a470:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a474:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a478:	movw	r0, #1
   1a47c:	strb	r0, [fp, #-61]	; 0xffffffc3
   1a480:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a484:	ldr	r0, [fp, #8]
   1a488:	cmp	r0, #2
   1a48c:	bne	1a56c <__assert_fail@plt+0x9090>
   1a490:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a494:	tst	r0, #1
   1a498:	beq	1a4a0 <__assert_fail@plt+0x8fc4>
   1a49c:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a4a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4a4:	cmp	r0, #0
   1a4a8:	beq	1a4c8 <__assert_fail@plt+0x8fec>
   1a4ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a4b0:	cmp	r0, #0
   1a4b4:	bne	1a4c8 <__assert_fail@plt+0x8fec>
   1a4b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4bc:	str	r0, [fp, #-48]	; 0xffffffd0
   1a4c0:	movw	r0, #0
   1a4c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4c8:	b	1a4cc <__assert_fail@plt+0x8ff0>
   1a4cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4d4:	cmp	r0, r1
   1a4d8:	bcs	1a4f0 <__assert_fail@plt+0x9014>
   1a4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4e4:	add	r0, r0, r1
   1a4e8:	movw	r1, #39	; 0x27
   1a4ec:	strb	r1, [r0]
   1a4f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4f4:	add	r0, r0, #1
   1a4f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4fc:	b	1a500 <__assert_fail@plt+0x9024>
   1a500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a504:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a508:	cmp	r0, r1
   1a50c:	bcs	1a524 <__assert_fail@plt+0x9048>
   1a510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a514:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a518:	add	r0, r0, r1
   1a51c:	movw	r1, #92	; 0x5c
   1a520:	strb	r1, [r0]
   1a524:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a528:	add	r0, r0, #1
   1a52c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a530:	b	1a534 <__assert_fail@plt+0x9058>
   1a534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a538:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a53c:	cmp	r0, r1
   1a540:	bcs	1a558 <__assert_fail@plt+0x907c>
   1a544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a548:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a54c:	add	r0, r0, r1
   1a550:	movw	r1, #39	; 0x27
   1a554:	strb	r1, [r0]
   1a558:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a55c:	add	r0, r0, #1
   1a560:	str	r0, [fp, #-44]	; 0xffffffd4
   1a564:	movw	r0, #0
   1a568:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a56c:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a570:	movw	r0, #1
   1a574:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a578:	b	1aba0 <__assert_fail@plt+0x96c4>
   1a57c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1a580:	tst	r0, #1
   1a584:	beq	1a5c8 <__assert_fail@plt+0x90ec>
   1a588:	mov	r0, #1
   1a58c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a590:	bl	11338 <__ctype_b_loc@plt>
   1a594:	ldr	r0, [r0]
   1a598:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   1a59c:	mov	r1, lr
   1a5a0:	add	r0, r0, lr, lsl #1
   1a5a4:	ldrh	r0, [r0]
   1a5a8:	and	r0, r0, #16384	; 0x4000
   1a5ac:	cmp	r0, #0
   1a5b0:	movw	r0, #0
   1a5b4:	movne	r0, #1
   1a5b8:	and	r0, r0, #1
   1a5bc:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a5c0:	str	r1, [sp, #32]
   1a5c4:	b	1a854 <__assert_fail@plt+0x9378>
   1a5c8:	sub	r0, fp, #84	; 0x54
   1a5cc:	movw	r1, #0
   1a5d0:	and	r1, r1, #255	; 0xff
   1a5d4:	movw	r2, #8
   1a5d8:	bl	113b0 <memset@plt>
   1a5dc:	movw	r0, #0
   1a5e0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a5e4:	movw	r0, #1
   1a5e8:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a5ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a5f0:	cmn	r0, #1
   1a5f4:	bne	1a604 <__assert_fail@plt+0x9128>
   1a5f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5fc:	bl	1135c <strlen@plt>
   1a600:	str	r0, [fp, #-36]	; 0xffffffdc
   1a604:	b	1a608 <__assert_fail@plt+0x912c>
   1a608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a60c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a610:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a614:	add	r1, r1, r2
   1a618:	add	r1, r0, r1
   1a61c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a624:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a628:	add	r2, r2, r3
   1a62c:	sub	r2, r0, r2
   1a630:	sub	r0, fp, #88	; 0x58
   1a634:	sub	r3, fp, #84	; 0x54
   1a638:	bl	22868 <__assert_fail@plt+0x1138c>
   1a63c:	str	r0, [sp, #92]	; 0x5c
   1a640:	ldr	r0, [sp, #92]	; 0x5c
   1a644:	cmp	r0, #0
   1a648:	bne	1a650 <__assert_fail@plt+0x9174>
   1a64c:	b	1a850 <__assert_fail@plt+0x9374>
   1a650:	ldr	r0, [sp, #92]	; 0x5c
   1a654:	cmn	r0, #1
   1a658:	bne	1a668 <__assert_fail@plt+0x918c>
   1a65c:	movw	r0, #0
   1a660:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a664:	b	1a850 <__assert_fail@plt+0x9374>
   1a668:	ldr	r0, [sp, #92]	; 0x5c
   1a66c:	cmn	r0, #2
   1a670:	bne	1a6e4 <__assert_fail@plt+0x9208>
   1a674:	movw	r0, #0
   1a678:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a67c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a680:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a684:	add	r0, r0, r1
   1a688:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a68c:	cmp	r0, r1
   1a690:	movw	r0, #0
   1a694:	str	r0, [sp, #28]
   1a698:	bcs	1a6c4 <__assert_fail@plt+0x91e8>
   1a69c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a6a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a6a8:	add	r1, r1, r2
   1a6ac:	add	r0, r0, r1
   1a6b0:	ldrb	r0, [r0]
   1a6b4:	cmp	r0, #0
   1a6b8:	movw	r0, #0
   1a6bc:	movne	r0, #1
   1a6c0:	str	r0, [sp, #28]
   1a6c4:	ldr	r0, [sp, #28]
   1a6c8:	tst	r0, #1
   1a6cc:	beq	1a6e0 <__assert_fail@plt+0x9204>
   1a6d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a6d4:	add	r0, r0, #1
   1a6d8:	str	r0, [fp, #-72]	; 0xffffffb8
   1a6dc:	b	1a67c <__assert_fail@plt+0x91a0>
   1a6e0:	b	1a850 <__assert_fail@plt+0x9374>
   1a6e4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a6e8:	tst	r0, #1
   1a6ec:	beq	1a7f8 <__assert_fail@plt+0x931c>
   1a6f0:	ldr	r0, [fp, #8]
   1a6f4:	cmp	r0, #2
   1a6f8:	bne	1a7f8 <__assert_fail@plt+0x931c>
   1a6fc:	movw	r0, #1
   1a700:	str	r0, [sp, #88]	; 0x58
   1a704:	ldr	r0, [sp, #88]	; 0x58
   1a708:	ldr	r1, [sp, #92]	; 0x5c
   1a70c:	cmp	r0, r1
   1a710:	bcs	1a7f4 <__assert_fail@plt+0x9318>
   1a714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a718:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a71c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a720:	add	r1, r1, r2
   1a724:	ldr	r2, [sp, #88]	; 0x58
   1a728:	add	r1, r1, r2
   1a72c:	ldrb	r0, [r0, r1]
   1a730:	sub	r0, r0, #91	; 0x5b
   1a734:	cmp	r0, #33	; 0x21
   1a738:	str	r0, [sp, #24]
   1a73c:	bhi	1a7dc <__assert_fail@plt+0x9300>
   1a740:	add	r0, pc, #8
   1a744:	ldr	r1, [sp, #24]
   1a748:	ldr	r0, [r0, r1, lsl #2]
   1a74c:	mov	pc, r0
   1a750:	ldrdeq	sl, [r1], -r8
   1a754:	ldrdeq	sl, [r1], -r8
   1a758:	ldrdeq	sl, [r1], -ip
   1a75c:	ldrdeq	sl, [r1], -r8
   1a760:	ldrdeq	sl, [r1], -ip
   1a764:	ldrdeq	sl, [r1], -r8
   1a768:	ldrdeq	sl, [r1], -ip
   1a76c:	ldrdeq	sl, [r1], -ip
   1a770:	ldrdeq	sl, [r1], -ip
   1a774:	ldrdeq	sl, [r1], -ip
   1a778:	ldrdeq	sl, [r1], -ip
   1a77c:	ldrdeq	sl, [r1], -ip
   1a780:	ldrdeq	sl, [r1], -ip
   1a784:	ldrdeq	sl, [r1], -ip
   1a788:	ldrdeq	sl, [r1], -ip
   1a78c:	ldrdeq	sl, [r1], -ip
   1a790:	ldrdeq	sl, [r1], -ip
   1a794:	ldrdeq	sl, [r1], -ip
   1a798:	ldrdeq	sl, [r1], -ip
   1a79c:	ldrdeq	sl, [r1], -ip
   1a7a0:	ldrdeq	sl, [r1], -ip
   1a7a4:	ldrdeq	sl, [r1], -ip
   1a7a8:	ldrdeq	sl, [r1], -ip
   1a7ac:	ldrdeq	sl, [r1], -ip
   1a7b0:	ldrdeq	sl, [r1], -ip
   1a7b4:	ldrdeq	sl, [r1], -ip
   1a7b8:	ldrdeq	sl, [r1], -ip
   1a7bc:	ldrdeq	sl, [r1], -ip
   1a7c0:	ldrdeq	sl, [r1], -ip
   1a7c4:	ldrdeq	sl, [r1], -ip
   1a7c8:	ldrdeq	sl, [r1], -ip
   1a7cc:	ldrdeq	sl, [r1], -ip
   1a7d0:	ldrdeq	sl, [r1], -ip
   1a7d4:	ldrdeq	sl, [r1], -r8
   1a7d8:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a7dc:	b	1a7e0 <__assert_fail@plt+0x9304>
   1a7e0:	b	1a7e4 <__assert_fail@plt+0x9308>
   1a7e4:	ldr	r0, [sp, #88]	; 0x58
   1a7e8:	add	r0, r0, #1
   1a7ec:	str	r0, [sp, #88]	; 0x58
   1a7f0:	b	1a704 <__assert_fail@plt+0x9228>
   1a7f4:	b	1a7f8 <__assert_fail@plt+0x931c>
   1a7f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a7fc:	bl	11290 <iswprint@plt>
   1a800:	cmp	r0, #0
   1a804:	bne	1a810 <__assert_fail@plt+0x9334>
   1a808:	movw	r0, #0
   1a80c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a810:	ldr	r0, [sp, #92]	; 0x5c
   1a814:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a818:	add	r0, r1, r0
   1a81c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a820:	b	1a824 <__assert_fail@plt+0x9348>
   1a824:	b	1a828 <__assert_fail@plt+0x934c>
   1a828:	b	1a82c <__assert_fail@plt+0x9350>
   1a82c:	sub	r0, fp, #84	; 0x54
   1a830:	bl	11248 <mbsinit@plt>
   1a834:	cmp	r0, #0
   1a838:	movw	r0, #0
   1a83c:	movne	r0, #1
   1a840:	mvn	lr, #0
   1a844:	eor	r0, r0, lr
   1a848:	tst	r0, #1
   1a84c:	bne	1a608 <__assert_fail@plt+0x912c>
   1a850:	b	1a854 <__assert_fail@plt+0x9378>
   1a854:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a858:	and	r0, r0, #1
   1a85c:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a860:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a864:	movw	r1, #1
   1a868:	cmp	r1, r0
   1a86c:	bcc	1a888 <__assert_fail@plt+0x93ac>
   1a870:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a874:	tst	r0, #1
   1a878:	beq	1ab9c <__assert_fail@plt+0x96c0>
   1a87c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a880:	tst	r0, #1
   1a884:	bne	1ab9c <__assert_fail@plt+0x96c0>
   1a888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a88c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a890:	add	r0, r0, r1
   1a894:	str	r0, [sp, #84]	; 0x54
   1a898:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a89c:	tst	r0, #1
   1a8a0:	beq	1aa50 <__assert_fail@plt+0x9574>
   1a8a4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a8a8:	tst	r0, #1
   1a8ac:	bne	1aa50 <__assert_fail@plt+0x9574>
   1a8b0:	b	1a8b4 <__assert_fail@plt+0x93d8>
   1a8b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a8b8:	tst	r0, #1
   1a8bc:	beq	1a8c4 <__assert_fail@plt+0x93e8>
   1a8c0:	b	1af94 <__assert_fail@plt+0x9ab8>
   1a8c4:	movw	r0, #1
   1a8c8:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a8cc:	ldr	r0, [fp, #8]
   1a8d0:	cmp	r0, #2
   1a8d4:	bne	1a988 <__assert_fail@plt+0x94ac>
   1a8d8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a8dc:	tst	r0, #1
   1a8e0:	bne	1a988 <__assert_fail@plt+0x94ac>
   1a8e4:	b	1a8e8 <__assert_fail@plt+0x940c>
   1a8e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8f0:	cmp	r0, r1
   1a8f4:	bcs	1a90c <__assert_fail@plt+0x9430>
   1a8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a900:	add	r0, r0, r1
   1a904:	movw	r1, #39	; 0x27
   1a908:	strb	r1, [r0]
   1a90c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a910:	add	r0, r0, #1
   1a914:	str	r0, [fp, #-44]	; 0xffffffd4
   1a918:	b	1a91c <__assert_fail@plt+0x9440>
   1a91c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a924:	cmp	r0, r1
   1a928:	bcs	1a940 <__assert_fail@plt+0x9464>
   1a92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a930:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a934:	add	r0, r0, r1
   1a938:	movw	r1, #36	; 0x24
   1a93c:	strb	r1, [r0]
   1a940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a944:	add	r0, r0, #1
   1a948:	str	r0, [fp, #-44]	; 0xffffffd4
   1a94c:	b	1a950 <__assert_fail@plt+0x9474>
   1a950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a958:	cmp	r0, r1
   1a95c:	bcs	1a974 <__assert_fail@plt+0x9498>
   1a960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a964:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a968:	add	r0, r0, r1
   1a96c:	movw	r1, #39	; 0x27
   1a970:	strb	r1, [r0]
   1a974:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a978:	add	r0, r0, #1
   1a97c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a980:	movw	r0, #1
   1a984:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a988:	b	1a98c <__assert_fail@plt+0x94b0>
   1a98c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a994:	cmp	r0, r1
   1a998:	bcs	1a9b0 <__assert_fail@plt+0x94d4>
   1a99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9a4:	add	r0, r0, r1
   1a9a8:	movw	r1, #92	; 0x5c
   1a9ac:	strb	r1, [r0]
   1a9b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9b4:	add	r0, r0, #1
   1a9b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9bc:	b	1a9c0 <__assert_fail@plt+0x94e4>
   1a9c0:	b	1a9c4 <__assert_fail@plt+0x94e8>
   1a9c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9cc:	cmp	r0, r1
   1a9d0:	bcs	1a9f0 <__assert_fail@plt+0x9514>
   1a9d4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a9d8:	asr	r0, r0, #6
   1a9dc:	add	r0, r0, #48	; 0x30
   1a9e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a9e8:	add	r1, r1, r2
   1a9ec:	strb	r0, [r1]
   1a9f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9f4:	add	r0, r0, #1
   1a9f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9fc:	b	1aa00 <__assert_fail@plt+0x9524>
   1aa00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa08:	cmp	r0, r1
   1aa0c:	bcs	1aa30 <__assert_fail@plt+0x9554>
   1aa10:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa14:	asr	r0, r0, #3
   1aa18:	and	r0, r0, #7
   1aa1c:	add	r0, r0, #48	; 0x30
   1aa20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aa28:	add	r1, r1, r2
   1aa2c:	strb	r0, [r1]
   1aa30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa34:	add	r0, r0, #1
   1aa38:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa3c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa40:	and	r0, r0, #7
   1aa44:	add	r0, r0, #48	; 0x30
   1aa48:	strb	r0, [fp, #-63]	; 0xffffffc1
   1aa4c:	b	1aa9c <__assert_fail@plt+0x95c0>
   1aa50:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1aa54:	tst	r0, #1
   1aa58:	beq	1aa98 <__assert_fail@plt+0x95bc>
   1aa5c:	b	1aa60 <__assert_fail@plt+0x9584>
   1aa60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa68:	cmp	r0, r1
   1aa6c:	bcs	1aa84 <__assert_fail@plt+0x95a8>
   1aa70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa78:	add	r0, r0, r1
   1aa7c:	movw	r1, #92	; 0x5c
   1aa80:	strb	r1, [r0]
   1aa84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa88:	add	r0, r0, #1
   1aa8c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa90:	movw	r0, #0
   1aa94:	strb	r0, [fp, #-65]	; 0xffffffbf
   1aa98:	b	1aa9c <__assert_fail@plt+0x95c0>
   1aa9c:	ldr	r0, [sp, #84]	; 0x54
   1aaa0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aaa4:	add	r1, r1, #1
   1aaa8:	cmp	r0, r1
   1aaac:	bhi	1aab4 <__assert_fail@plt+0x95d8>
   1aab0:	b	1ab98 <__assert_fail@plt+0x96bc>
   1aab4:	b	1aab8 <__assert_fail@plt+0x95dc>
   1aab8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1aabc:	tst	r0, #1
   1aac0:	beq	1ab40 <__assert_fail@plt+0x9664>
   1aac4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1aac8:	tst	r0, #1
   1aacc:	bne	1ab40 <__assert_fail@plt+0x9664>
   1aad0:	b	1aad4 <__assert_fail@plt+0x95f8>
   1aad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aad8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aadc:	cmp	r0, r1
   1aae0:	bcs	1aaf8 <__assert_fail@plt+0x961c>
   1aae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aae8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aaec:	add	r0, r0, r1
   1aaf0:	movw	r1, #39	; 0x27
   1aaf4:	strb	r1, [r0]
   1aaf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aafc:	add	r0, r0, #1
   1ab00:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab04:	b	1ab08 <__assert_fail@plt+0x962c>
   1ab08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab10:	cmp	r0, r1
   1ab14:	bcs	1ab2c <__assert_fail@plt+0x9650>
   1ab18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab20:	add	r0, r0, r1
   1ab24:	movw	r1, #39	; 0x27
   1ab28:	strb	r1, [r0]
   1ab2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab30:	add	r0, r0, #1
   1ab34:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab38:	movw	r0, #0
   1ab3c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ab40:	b	1ab44 <__assert_fail@plt+0x9668>
   1ab44:	b	1ab48 <__assert_fail@plt+0x966c>
   1ab48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab50:	cmp	r0, r1
   1ab54:	bcs	1ab6c <__assert_fail@plt+0x9690>
   1ab58:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1ab5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ab64:	add	r1, r1, r2
   1ab68:	strb	r0, [r1]
   1ab6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab70:	add	r0, r0, #1
   1ab74:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ab7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab80:	add	r1, r1, #1
   1ab84:	str	r1, [fp, #-40]	; 0xffffffd8
   1ab88:	add	r0, r0, r1
   1ab8c:	ldrb	r0, [r0]
   1ab90:	strb	r0, [fp, #-63]	; 0xffffffc1
   1ab94:	b	1a898 <__assert_fail@plt+0x93bc>
   1ab98:	b	1ad28 <__assert_fail@plt+0x984c>
   1ab9c:	b	1aba0 <__assert_fail@plt+0x96c4>
   1aba0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aba4:	tst	r0, #1
   1aba8:	beq	1abb8 <__assert_fail@plt+0x96dc>
   1abac:	ldr	r0, [fp, #8]
   1abb0:	cmp	r0, #2
   1abb4:	bne	1abc4 <__assert_fail@plt+0x96e8>
   1abb8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1abbc:	tst	r0, #1
   1abc0:	beq	1ac00 <__assert_fail@plt+0x9724>
   1abc4:	ldr	r0, [fp, #16]
   1abc8:	movw	r1, #0
   1abcc:	cmp	r0, r1
   1abd0:	beq	1ac00 <__assert_fail@plt+0x9724>
   1abd4:	ldr	r0, [fp, #16]
   1abd8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1abdc:	lsr	r1, r1, #5
   1abe0:	add	r0, r0, r1, lsl #2
   1abe4:	ldr	r0, [r0]
   1abe8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1abec:	and	r1, r1, #31
   1abf0:	lsr	r0, r0, r1
   1abf4:	and	r0, r0, #1
   1abf8:	cmp	r0, #0
   1abfc:	bne	1ac10 <__assert_fail@plt+0x9734>
   1ac00:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1ac04:	tst	r0, #1
   1ac08:	bne	1ac10 <__assert_fail@plt+0x9734>
   1ac0c:	b	1ad28 <__assert_fail@plt+0x984c>
   1ac10:	b	1ac14 <__assert_fail@plt+0x9738>
   1ac14:	b	1ac18 <__assert_fail@plt+0x973c>
   1ac18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ac1c:	tst	r0, #1
   1ac20:	beq	1ac28 <__assert_fail@plt+0x974c>
   1ac24:	b	1af94 <__assert_fail@plt+0x9ab8>
   1ac28:	movw	r0, #1
   1ac2c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1ac30:	ldr	r0, [fp, #8]
   1ac34:	cmp	r0, #2
   1ac38:	bne	1acec <__assert_fail@plt+0x9810>
   1ac3c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ac40:	tst	r0, #1
   1ac44:	bne	1acec <__assert_fail@plt+0x9810>
   1ac48:	b	1ac4c <__assert_fail@plt+0x9770>
   1ac4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac54:	cmp	r0, r1
   1ac58:	bcs	1ac70 <__assert_fail@plt+0x9794>
   1ac5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac64:	add	r0, r0, r1
   1ac68:	movw	r1, #39	; 0x27
   1ac6c:	strb	r1, [r0]
   1ac70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac74:	add	r0, r0, #1
   1ac78:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac7c:	b	1ac80 <__assert_fail@plt+0x97a4>
   1ac80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac88:	cmp	r0, r1
   1ac8c:	bcs	1aca4 <__assert_fail@plt+0x97c8>
   1ac90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac98:	add	r0, r0, r1
   1ac9c:	movw	r1, #36	; 0x24
   1aca0:	strb	r1, [r0]
   1aca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aca8:	add	r0, r0, #1
   1acac:	str	r0, [fp, #-44]	; 0xffffffd4
   1acb0:	b	1acb4 <__assert_fail@plt+0x97d8>
   1acb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1acbc:	cmp	r0, r1
   1acc0:	bcs	1acd8 <__assert_fail@plt+0x97fc>
   1acc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1accc:	add	r0, r0, r1
   1acd0:	movw	r1, #39	; 0x27
   1acd4:	strb	r1, [r0]
   1acd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acdc:	add	r0, r0, #1
   1ace0:	str	r0, [fp, #-44]	; 0xffffffd4
   1ace4:	movw	r0, #1
   1ace8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1acec:	b	1acf0 <__assert_fail@plt+0x9814>
   1acf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1acf8:	cmp	r0, r1
   1acfc:	bcs	1ad14 <__assert_fail@plt+0x9838>
   1ad00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad08:	add	r0, r0, r1
   1ad0c:	movw	r1, #92	; 0x5c
   1ad10:	strb	r1, [r0]
   1ad14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad18:	add	r0, r0, #1
   1ad1c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad20:	b	1ad24 <__assert_fail@plt+0x9848>
   1ad24:	b	1ad28 <__assert_fail@plt+0x984c>
   1ad28:	b	1ad2c <__assert_fail@plt+0x9850>
   1ad2c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ad30:	tst	r0, #1
   1ad34:	beq	1adb4 <__assert_fail@plt+0x98d8>
   1ad38:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1ad3c:	tst	r0, #1
   1ad40:	bne	1adb4 <__assert_fail@plt+0x98d8>
   1ad44:	b	1ad48 <__assert_fail@plt+0x986c>
   1ad48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad50:	cmp	r0, r1
   1ad54:	bcs	1ad6c <__assert_fail@plt+0x9890>
   1ad58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad60:	add	r0, r0, r1
   1ad64:	movw	r1, #39	; 0x27
   1ad68:	strb	r1, [r0]
   1ad6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad70:	add	r0, r0, #1
   1ad74:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad78:	b	1ad7c <__assert_fail@plt+0x98a0>
   1ad7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad84:	cmp	r0, r1
   1ad88:	bcs	1ada0 <__assert_fail@plt+0x98c4>
   1ad8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad94:	add	r0, r0, r1
   1ad98:	movw	r1, #39	; 0x27
   1ad9c:	strb	r1, [r0]
   1ada0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ada4:	add	r0, r0, #1
   1ada8:	str	r0, [fp, #-44]	; 0xffffffd4
   1adac:	movw	r0, #0
   1adb0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1adb4:	b	1adb8 <__assert_fail@plt+0x98dc>
   1adb8:	b	1adbc <__assert_fail@plt+0x98e0>
   1adbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1adc4:	cmp	r0, r1
   1adc8:	bcs	1ade0 <__assert_fail@plt+0x9904>
   1adcc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1add0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1add4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1add8:	add	r1, r1, r2
   1addc:	strb	r0, [r1]
   1ade0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ade4:	add	r0, r0, #1
   1ade8:	str	r0, [fp, #-44]	; 0xffffffd4
   1adec:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1adf0:	tst	r0, #1
   1adf4:	bne	1ae00 <__assert_fail@plt+0x9924>
   1adf8:	movw	r0, #0
   1adfc:	strb	r0, [fp, #-62]	; 0xffffffc2
   1ae00:	b	1ae04 <__assert_fail@plt+0x9928>
   1ae04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae08:	add	r0, r0, #1
   1ae0c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ae10:	b	19bb8 <__assert_fail@plt+0x86dc>
   1ae14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae18:	cmp	r0, #0
   1ae1c:	bne	1ae3c <__assert_fail@plt+0x9960>
   1ae20:	ldr	r0, [fp, #8]
   1ae24:	cmp	r0, #2
   1ae28:	bne	1ae3c <__assert_fail@plt+0x9960>
   1ae2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ae30:	tst	r0, #1
   1ae34:	beq	1ae3c <__assert_fail@plt+0x9960>
   1ae38:	b	1af94 <__assert_fail@plt+0x9ab8>
   1ae3c:	ldr	r0, [fp, #8]
   1ae40:	cmp	r0, #2
   1ae44:	bne	1aee4 <__assert_fail@plt+0x9a08>
   1ae48:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ae4c:	tst	r0, #1
   1ae50:	bne	1aee4 <__assert_fail@plt+0x9a08>
   1ae54:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1ae58:	tst	r0, #1
   1ae5c:	beq	1aee4 <__assert_fail@plt+0x9a08>
   1ae60:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1ae64:	tst	r0, #1
   1ae68:	beq	1aeb0 <__assert_fail@plt+0x99d4>
   1ae6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ae74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ae78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ae7c:	ldr	ip, [fp, #12]
   1ae80:	ldr	lr, [fp, #16]
   1ae84:	ldr	r4, [fp, #20]
   1ae88:	ldr	r5, [fp, #24]
   1ae8c:	movw	r6, #5
   1ae90:	str	r6, [sp]
   1ae94:	str	ip, [sp, #4]
   1ae98:	str	lr, [sp, #8]
   1ae9c:	str	r4, [sp, #12]
   1aea0:	str	r5, [sp, #16]
   1aea4:	bl	198d0 <__assert_fail@plt+0x83f4>
   1aea8:	str	r0, [fp, #-20]	; 0xffffffec
   1aeac:	b	1affc <__assert_fail@plt+0x9b20>
   1aeb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aeb4:	cmp	r0, #0
   1aeb8:	bne	1aedc <__assert_fail@plt+0x9a00>
   1aebc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aec0:	cmp	r0, #0
   1aec4:	beq	1aedc <__assert_fail@plt+0x9a00>
   1aec8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aecc:	str	r0, [fp, #-28]	; 0xffffffe4
   1aed0:	movw	r0, #0
   1aed4:	str	r0, [fp, #-44]	; 0xffffffd4
   1aed8:	b	19978 <__assert_fail@plt+0x849c>
   1aedc:	b	1aee0 <__assert_fail@plt+0x9a04>
   1aee0:	b	1aee4 <__assert_fail@plt+0x9a08>
   1aee4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1aee8:	movw	r1, #0
   1aeec:	cmp	r0, r1
   1aef0:	beq	1af64 <__assert_fail@plt+0x9a88>
   1aef4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1aef8:	tst	r0, #1
   1aefc:	bne	1af64 <__assert_fail@plt+0x9a88>
   1af00:	b	1af04 <__assert_fail@plt+0x9a28>
   1af04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af08:	ldrsb	r0, [r0]
   1af0c:	cmp	r0, #0
   1af10:	beq	1af60 <__assert_fail@plt+0x9a84>
   1af14:	b	1af18 <__assert_fail@plt+0x9a3c>
   1af18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af20:	cmp	r0, r1
   1af24:	bcs	1af40 <__assert_fail@plt+0x9a64>
   1af28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af2c:	ldrb	r0, [r0]
   1af30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1af38:	add	r1, r1, r2
   1af3c:	strb	r0, [r1]
   1af40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af44:	add	r0, r0, #1
   1af48:	str	r0, [fp, #-44]	; 0xffffffd4
   1af4c:	b	1af50 <__assert_fail@plt+0x9a74>
   1af50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1af54:	add	r0, r0, #1
   1af58:	str	r0, [fp, #-52]	; 0xffffffcc
   1af5c:	b	1af04 <__assert_fail@plt+0x9a28>
   1af60:	b	1af64 <__assert_fail@plt+0x9a88>
   1af64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af6c:	cmp	r0, r1
   1af70:	bcs	1af88 <__assert_fail@plt+0x9aac>
   1af74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1af7c:	add	r0, r0, r1
   1af80:	movw	r1, #0
   1af84:	strb	r1, [r0]
   1af88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af8c:	str	r0, [fp, #-20]	; 0xffffffec
   1af90:	b	1affc <__assert_fail@plt+0x9b20>
   1af94:	ldr	r0, [fp, #8]
   1af98:	cmp	r0, #2
   1af9c:	bne	1afb4 <__assert_fail@plt+0x9ad8>
   1afa0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1afa4:	tst	r0, #1
   1afa8:	beq	1afb4 <__assert_fail@plt+0x9ad8>
   1afac:	movw	r0, #4
   1afb0:	str	r0, [fp, #8]
   1afb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1afc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1afc4:	ldr	ip, [fp, #8]
   1afc8:	ldr	lr, [fp, #12]
   1afcc:	mvn	r4, #2
   1afd0:	and	lr, lr, r4
   1afd4:	ldr	r4, [fp, #20]
   1afd8:	ldr	r5, [fp, #24]
   1afdc:	str	ip, [sp]
   1afe0:	str	lr, [sp, #4]
   1afe4:	movw	ip, #0
   1afe8:	str	ip, [sp, #8]
   1afec:	str	r4, [sp, #12]
   1aff0:	str	r5, [sp, #16]
   1aff4:	bl	198d0 <__assert_fail@plt+0x83f4>
   1aff8:	str	r0, [fp, #-20]	; 0xffffffec
   1affc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b000:	sub	sp, fp, #16
   1b004:	pop	{r4, r5, r6, sl, fp, pc}
   1b008:	push	{fp, lr}
   1b00c:	mov	fp, sp
   1b010:	sub	sp, sp, #16
   1b014:	str	r0, [fp, #-4]
   1b018:	str	r1, [sp, #8]
   1b01c:	str	r2, [sp, #4]
   1b020:	ldr	r0, [fp, #-4]
   1b024:	ldr	r1, [sp, #8]
   1b028:	ldr	r3, [sp, #4]
   1b02c:	movw	r2, #0
   1b030:	bl	1b03c <__assert_fail@plt+0x9b60>
   1b034:	mov	sp, fp
   1b038:	pop	{fp, pc}
   1b03c:	push	{r4, r5, r6, sl, fp, lr}
   1b040:	add	fp, sp, #16
   1b044:	sub	sp, sp, #72	; 0x48
   1b048:	str	r0, [fp, #-20]	; 0xffffffec
   1b04c:	str	r1, [fp, #-24]	; 0xffffffe8
   1b050:	str	r2, [fp, #-28]	; 0xffffffe4
   1b054:	str	r3, [fp, #-32]	; 0xffffffe0
   1b058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b05c:	movw	r1, #0
   1b060:	cmp	r0, r1
   1b064:	beq	1b074 <__assert_fail@plt+0x9b98>
   1b068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b06c:	str	r0, [sp, #32]
   1b070:	b	1b084 <__assert_fail@plt+0x9ba8>
   1b074:	movw	r0, #25020	; 0x61bc
   1b078:	movt	r0, #3
   1b07c:	str	r0, [sp, #32]
   1b080:	b	1b084 <__assert_fail@plt+0x9ba8>
   1b084:	ldr	r0, [sp, #32]
   1b088:	str	r0, [fp, #-36]	; 0xffffffdc
   1b08c:	bl	11398 <__errno_location@plt>
   1b090:	ldr	r0, [r0]
   1b094:	str	r0, [fp, #-40]	; 0xffffffd8
   1b098:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b09c:	ldr	r0, [r0, #4]
   1b0a0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1b0a4:	movw	r1, #0
   1b0a8:	cmp	lr, r1
   1b0ac:	movw	lr, #0
   1b0b0:	movne	lr, #1
   1b0b4:	tst	lr, #1
   1b0b8:	mov	lr, r1
   1b0bc:	moveq	lr, #1
   1b0c0:	orr	r0, r0, lr
   1b0c4:	str	r0, [sp, #44]	; 0x2c
   1b0c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b0cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0d4:	ldr	r0, [r0]
   1b0d8:	ldr	lr, [sp, #44]	; 0x2c
   1b0dc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b0e0:	add	ip, ip, #8
   1b0e4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b0e8:	ldr	r4, [r4, #40]	; 0x28
   1b0ec:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b0f0:	ldr	r5, [r5, #44]	; 0x2c
   1b0f4:	str	r0, [sp, #28]
   1b0f8:	mov	r0, r1
   1b0fc:	ldr	r6, [sp, #28]
   1b100:	str	r6, [sp]
   1b104:	str	lr, [sp, #4]
   1b108:	str	ip, [sp, #8]
   1b10c:	str	r4, [sp, #12]
   1b110:	str	r5, [sp, #16]
   1b114:	bl	198d0 <__assert_fail@plt+0x83f4>
   1b118:	add	r0, r0, #1
   1b11c:	str	r0, [sp, #40]	; 0x28
   1b120:	ldr	r0, [sp, #40]	; 0x28
   1b124:	bl	1c648 <__assert_fail@plt+0xb16c>
   1b128:	str	r0, [sp, #36]	; 0x24
   1b12c:	ldr	r0, [sp, #36]	; 0x24
   1b130:	ldr	r1, [sp, #40]	; 0x28
   1b134:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b13c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b140:	ldr	ip, [ip]
   1b144:	ldr	lr, [sp, #44]	; 0x2c
   1b148:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b14c:	add	r4, r4, #8
   1b150:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b154:	ldr	r5, [r5, #40]	; 0x28
   1b158:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b15c:	ldr	r6, [r6, #44]	; 0x2c
   1b160:	str	ip, [sp]
   1b164:	str	lr, [sp, #4]
   1b168:	str	r4, [sp, #8]
   1b16c:	str	r5, [sp, #12]
   1b170:	str	r6, [sp, #16]
   1b174:	bl	198d0 <__assert_fail@plt+0x83f4>
   1b178:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b17c:	str	r0, [sp, #24]
   1b180:	str	r1, [sp, #20]
   1b184:	bl	11398 <__errno_location@plt>
   1b188:	ldr	r1, [sp, #20]
   1b18c:	str	r1, [r0]
   1b190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b194:	movw	r2, #0
   1b198:	cmp	r0, r2
   1b19c:	beq	1b1b0 <__assert_fail@plt+0x9cd4>
   1b1a0:	ldr	r0, [sp, #40]	; 0x28
   1b1a4:	sub	r0, r0, #1
   1b1a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b1ac:	str	r0, [r1]
   1b1b0:	ldr	r0, [sp, #36]	; 0x24
   1b1b4:	sub	sp, fp, #16
   1b1b8:	pop	{r4, r5, r6, sl, fp, pc}
   1b1bc:	push	{fp, lr}
   1b1c0:	mov	fp, sp
   1b1c4:	sub	sp, sp, #8
   1b1c8:	movw	r0, #24884	; 0x6134
   1b1cc:	movt	r0, #3
   1b1d0:	ldr	r0, [r0]
   1b1d4:	str	r0, [sp, #4]
   1b1d8:	movw	r0, #1
   1b1dc:	str	r0, [sp]
   1b1e0:	ldr	r0, [sp]
   1b1e4:	movw	r1, #24888	; 0x6138
   1b1e8:	movt	r1, #3
   1b1ec:	ldr	r1, [r1]
   1b1f0:	cmp	r0, r1
   1b1f4:	bge	1b21c <__assert_fail@plt+0x9d40>
   1b1f8:	ldr	r0, [sp, #4]
   1b1fc:	ldr	r1, [sp]
   1b200:	add	r0, r0, r1, lsl #3
   1b204:	ldr	r0, [r0, #4]
   1b208:	bl	13878 <__assert_fail@plt+0x239c>
   1b20c:	ldr	r0, [sp]
   1b210:	add	r0, r0, #1
   1b214:	str	r0, [sp]
   1b218:	b	1b1e0 <__assert_fail@plt+0x9d04>
   1b21c:	ldr	r0, [sp, #4]
   1b220:	ldr	r0, [r0, #4]
   1b224:	movw	r1, #25068	; 0x61ec
   1b228:	movt	r1, #3
   1b22c:	cmp	r0, r1
   1b230:	beq	1b25c <__assert_fail@plt+0x9d80>
   1b234:	ldr	r0, [sp, #4]
   1b238:	ldr	r0, [r0, #4]
   1b23c:	bl	13878 <__assert_fail@plt+0x239c>
   1b240:	movw	r0, #256	; 0x100
   1b244:	movw	lr, #24892	; 0x613c
   1b248:	movt	lr, #3
   1b24c:	str	r0, [lr]
   1b250:	movw	r0, #25068	; 0x61ec
   1b254:	movt	r0, #3
   1b258:	str	r0, [lr, #4]
   1b25c:	ldr	r0, [sp, #4]
   1b260:	movw	r1, #24892	; 0x613c
   1b264:	movt	r1, #3
   1b268:	cmp	r0, r1
   1b26c:	beq	1b28c <__assert_fail@plt+0x9db0>
   1b270:	ldr	r0, [sp, #4]
   1b274:	bl	13878 <__assert_fail@plt+0x239c>
   1b278:	movw	r0, #24884	; 0x6134
   1b27c:	movt	r0, #3
   1b280:	movw	lr, #24892	; 0x613c
   1b284:	movt	lr, #3
   1b288:	str	lr, [r0]
   1b28c:	movw	r0, #24888	; 0x6138
   1b290:	movt	r0, #3
   1b294:	movw	r1, #1
   1b298:	str	r1, [r0]
   1b29c:	mov	sp, fp
   1b2a0:	pop	{fp, pc}
   1b2a4:	push	{fp, lr}
   1b2a8:	mov	fp, sp
   1b2ac:	sub	sp, sp, #8
   1b2b0:	str	r0, [sp, #4]
   1b2b4:	str	r1, [sp]
   1b2b8:	ldr	r0, [sp, #4]
   1b2bc:	ldr	r1, [sp]
   1b2c0:	mvn	r2, #0
   1b2c4:	movw	r3, #25020	; 0x61bc
   1b2c8:	movt	r3, #3
   1b2cc:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b2d0:	mov	sp, fp
   1b2d4:	pop	{fp, pc}
   1b2d8:	push	{r4, r5, r6, sl, fp, lr}
   1b2dc:	add	fp, sp, #16
   1b2e0:	sub	sp, sp, #88	; 0x58
   1b2e4:	str	r0, [fp, #-20]	; 0xffffffec
   1b2e8:	str	r1, [fp, #-24]	; 0xffffffe8
   1b2ec:	str	r2, [fp, #-28]	; 0xffffffe4
   1b2f0:	str	r3, [fp, #-32]	; 0xffffffe0
   1b2f4:	bl	11398 <__errno_location@plt>
   1b2f8:	ldr	r1, [pc, #676]	; 1b5a4 <__assert_fail@plt+0xa0c8>
   1b2fc:	ldr	r0, [r0]
   1b300:	str	r0, [fp, #-36]	; 0xffffffdc
   1b304:	movw	r0, #24884	; 0x6134
   1b308:	movt	r0, #3
   1b30c:	ldr	r0, [r0]
   1b310:	str	r0, [fp, #-40]	; 0xffffffd8
   1b314:	str	r1, [fp, #-44]	; 0xffffffd4
   1b318:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b31c:	movw	r1, #0
   1b320:	cmp	r1, r0
   1b324:	bgt	1b338 <__assert_fail@plt+0x9e5c>
   1b328:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b32c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b330:	cmp	r0, r1
   1b334:	blt	1b33c <__assert_fail@plt+0x9e60>
   1b338:	bl	11494 <abort@plt>
   1b33c:	movw	r0, #24888	; 0x6138
   1b340:	movt	r0, #3
   1b344:	ldr	r0, [r0]
   1b348:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b34c:	cmp	r0, r1
   1b350:	bgt	1b448 <__assert_fail@plt+0x9f6c>
   1b354:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b358:	movw	r1, #24892	; 0x613c
   1b35c:	movt	r1, #3
   1b360:	cmp	r0, r1
   1b364:	movw	r0, #0
   1b368:	moveq	r0, #1
   1b36c:	and	r0, r0, #1
   1b370:	strb	r0, [fp, #-45]	; 0xffffffd3
   1b374:	movw	r0, #24888	; 0x6138
   1b378:	movt	r0, #3
   1b37c:	ldr	r0, [r0]
   1b380:	str	r0, [sp, #52]	; 0x34
   1b384:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b388:	tst	r0, #1
   1b38c:	beq	1b39c <__assert_fail@plt+0x9ec0>
   1b390:	movw	r0, #0
   1b394:	str	r0, [sp, #32]
   1b398:	b	1b3a4 <__assert_fail@plt+0x9ec8>
   1b39c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3a0:	str	r0, [sp, #32]
   1b3a4:	ldr	r0, [sp, #32]
   1b3a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3ac:	movw	r2, #24888	; 0x6138
   1b3b0:	movt	r2, #3
   1b3b4:	ldr	r2, [r2]
   1b3b8:	sub	r1, r1, r2
   1b3bc:	add	r2, r1, #1
   1b3c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b3c4:	add	r1, sp, #52	; 0x34
   1b3c8:	movw	ip, #8
   1b3cc:	str	ip, [sp]
   1b3d0:	bl	1c884 <__assert_fail@plt+0xb3a8>
   1b3d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b3d8:	movw	r1, #24884	; 0x6134
   1b3dc:	movt	r1, #3
   1b3e0:	str	r0, [r1]
   1b3e4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b3e8:	tst	r0, #1
   1b3ec:	beq	1b40c <__assert_fail@plt+0x9f30>
   1b3f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3f4:	movw	r1, #24892	; 0x613c
   1b3f8:	movt	r1, #3
   1b3fc:	ldr	r2, [r1]
   1b400:	str	r2, [r0]
   1b404:	ldr	r1, [r1, #4]
   1b408:	str	r1, [r0, #4]
   1b40c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b410:	movw	r1, #24888	; 0x6138
   1b414:	movt	r1, #3
   1b418:	ldr	r1, [r1]
   1b41c:	add	r0, r0, r1, lsl #3
   1b420:	ldr	r2, [sp, #52]	; 0x34
   1b424:	sub	r1, r2, r1
   1b428:	lsl	r2, r1, #3
   1b42c:	movw	r1, #0
   1b430:	and	r1, r1, #255	; 0xff
   1b434:	bl	113b0 <memset@plt>
   1b438:	ldr	r0, [sp, #52]	; 0x34
   1b43c:	movw	r1, #24888	; 0x6138
   1b440:	movt	r1, #3
   1b444:	str	r0, [r1]
   1b448:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b44c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b450:	ldr	r0, [r0, r1, lsl #3]
   1b454:	str	r0, [sp, #48]	; 0x30
   1b458:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b45c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b460:	add	r0, r0, r1, lsl #3
   1b464:	ldr	r0, [r0, #4]
   1b468:	str	r0, [sp, #44]	; 0x2c
   1b46c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b470:	ldr	r0, [r0, #4]
   1b474:	orr	r0, r0, #1
   1b478:	str	r0, [sp, #40]	; 0x28
   1b47c:	ldr	r0, [sp, #44]	; 0x2c
   1b480:	ldr	r1, [sp, #48]	; 0x30
   1b484:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b48c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b490:	ldr	ip, [ip]
   1b494:	ldr	lr, [sp, #40]	; 0x28
   1b498:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b49c:	add	r4, r4, #8
   1b4a0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b4a4:	ldr	r5, [r5, #40]	; 0x28
   1b4a8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b4ac:	ldr	r6, [r6, #44]	; 0x2c
   1b4b0:	str	ip, [sp]
   1b4b4:	str	lr, [sp, #4]
   1b4b8:	str	r4, [sp, #8]
   1b4bc:	str	r5, [sp, #12]
   1b4c0:	str	r6, [sp, #16]
   1b4c4:	bl	198d0 <__assert_fail@plt+0x83f4>
   1b4c8:	str	r0, [sp, #36]	; 0x24
   1b4cc:	ldr	r0, [sp, #48]	; 0x30
   1b4d0:	ldr	r1, [sp, #36]	; 0x24
   1b4d4:	cmp	r0, r1
   1b4d8:	bhi	1b584 <__assert_fail@plt+0xa0a8>
   1b4dc:	ldr	r0, [sp, #36]	; 0x24
   1b4e0:	add	r0, r0, #1
   1b4e4:	str	r0, [sp, #48]	; 0x30
   1b4e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b4ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b4f0:	add	r1, r1, r2, lsl #3
   1b4f4:	str	r0, [r1]
   1b4f8:	ldr	r0, [sp, #44]	; 0x2c
   1b4fc:	movw	r1, #25068	; 0x61ec
   1b500:	movt	r1, #3
   1b504:	cmp	r0, r1
   1b508:	beq	1b514 <__assert_fail@plt+0xa038>
   1b50c:	ldr	r0, [sp, #44]	; 0x2c
   1b510:	bl	13878 <__assert_fail@plt+0x239c>
   1b514:	ldr	r0, [sp, #48]	; 0x30
   1b518:	bl	1c648 <__assert_fail@plt+0xb16c>
   1b51c:	mov	lr, r0
   1b520:	str	r0, [sp, #44]	; 0x2c
   1b524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b528:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b52c:	add	r0, r0, r1, lsl #3
   1b530:	str	lr, [r0, #4]
   1b534:	ldr	r0, [sp, #44]	; 0x2c
   1b538:	ldr	r1, [sp, #48]	; 0x30
   1b53c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b544:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1b548:	ldr	lr, [lr]
   1b54c:	ldr	ip, [sp, #40]	; 0x28
   1b550:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b554:	add	r4, r4, #8
   1b558:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b55c:	ldr	r5, [r5, #40]	; 0x28
   1b560:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b564:	ldr	r6, [r6, #44]	; 0x2c
   1b568:	str	lr, [sp]
   1b56c:	str	ip, [sp, #4]
   1b570:	str	r4, [sp, #8]
   1b574:	str	r5, [sp, #12]
   1b578:	str	r6, [sp, #16]
   1b57c:	bl	198d0 <__assert_fail@plt+0x83f4>
   1b580:	str	r0, [sp, #28]
   1b584:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b588:	str	r0, [sp, #24]
   1b58c:	bl	11398 <__errno_location@plt>
   1b590:	ldr	lr, [sp, #24]
   1b594:	str	lr, [r0]
   1b598:	ldr	r0, [sp, #44]	; 0x2c
   1b59c:	sub	sp, fp, #16
   1b5a0:	pop	{r4, r5, r6, sl, fp, pc}
   1b5a4:	svcvc	0x00ffffff
   1b5a8:	push	{fp, lr}
   1b5ac:	mov	fp, sp
   1b5b0:	sub	sp, sp, #16
   1b5b4:	str	r0, [fp, #-4]
   1b5b8:	str	r1, [sp, #8]
   1b5bc:	str	r2, [sp, #4]
   1b5c0:	ldr	r0, [fp, #-4]
   1b5c4:	ldr	r1, [sp, #8]
   1b5c8:	ldr	r2, [sp, #4]
   1b5cc:	movw	r3, #25020	; 0x61bc
   1b5d0:	movt	r3, #3
   1b5d4:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b5d8:	mov	sp, fp
   1b5dc:	pop	{fp, pc}
   1b5e0:	push	{fp, lr}
   1b5e4:	mov	fp, sp
   1b5e8:	sub	sp, sp, #8
   1b5ec:	str	r0, [sp, #4]
   1b5f0:	ldr	r1, [sp, #4]
   1b5f4:	movw	r0, #0
   1b5f8:	bl	1b2a4 <__assert_fail@plt+0x9dc8>
   1b5fc:	mov	sp, fp
   1b600:	pop	{fp, pc}
   1b604:	push	{fp, lr}
   1b608:	mov	fp, sp
   1b60c:	sub	sp, sp, #8
   1b610:	str	r0, [sp, #4]
   1b614:	str	r1, [sp]
   1b618:	ldr	r1, [sp, #4]
   1b61c:	ldr	r2, [sp]
   1b620:	movw	r0, #0
   1b624:	bl	1b5a8 <__assert_fail@plt+0xa0cc>
   1b628:	mov	sp, fp
   1b62c:	pop	{fp, pc}
   1b630:	push	{fp, lr}
   1b634:	mov	fp, sp
   1b638:	sub	sp, sp, #64	; 0x40
   1b63c:	str	r0, [fp, #-4]
   1b640:	str	r1, [fp, #-8]
   1b644:	str	r2, [fp, #-12]
   1b648:	ldr	r1, [fp, #-8]
   1b64c:	add	r0, sp, #4
   1b650:	bl	1b670 <__assert_fail@plt+0xa194>
   1b654:	ldr	r0, [fp, #-4]
   1b658:	ldr	r1, [fp, #-12]
   1b65c:	mvn	r2, #0
   1b660:	add	r3, sp, #4
   1b664:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b668:	mov	sp, fp
   1b66c:	pop	{fp, pc}
   1b670:	push	{fp, lr}
   1b674:	mov	fp, sp
   1b678:	sub	sp, sp, #8
   1b67c:	str	r1, [sp, #4]
   1b680:	mov	r1, r0
   1b684:	str	r0, [sp]
   1b688:	mov	r0, r1
   1b68c:	movw	r1, #0
   1b690:	and	r1, r1, #255	; 0xff
   1b694:	movw	r2, #48	; 0x30
   1b698:	bl	113b0 <memset@plt>
   1b69c:	ldr	r0, [sp, #4]
   1b6a0:	cmp	r0, #10
   1b6a4:	bne	1b6ac <__assert_fail@plt+0xa1d0>
   1b6a8:	bl	11494 <abort@plt>
   1b6ac:	ldr	r0, [sp, #4]
   1b6b0:	ldr	r1, [sp]
   1b6b4:	str	r0, [r1]
   1b6b8:	mov	sp, fp
   1b6bc:	pop	{fp, pc}
   1b6c0:	push	{fp, lr}
   1b6c4:	mov	fp, sp
   1b6c8:	sub	sp, sp, #64	; 0x40
   1b6cc:	str	r0, [fp, #-4]
   1b6d0:	str	r1, [fp, #-8]
   1b6d4:	str	r2, [fp, #-12]
   1b6d8:	str	r3, [fp, #-16]
   1b6dc:	ldr	r1, [fp, #-8]
   1b6e0:	mov	r0, sp
   1b6e4:	bl	1b670 <__assert_fail@plt+0xa194>
   1b6e8:	ldr	r0, [fp, #-4]
   1b6ec:	ldr	r1, [fp, #-12]
   1b6f0:	ldr	r2, [fp, #-16]
   1b6f4:	mov	r3, sp
   1b6f8:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b6fc:	mov	sp, fp
   1b700:	pop	{fp, pc}
   1b704:	push	{fp, lr}
   1b708:	mov	fp, sp
   1b70c:	sub	sp, sp, #8
   1b710:	str	r0, [sp, #4]
   1b714:	str	r1, [sp]
   1b718:	ldr	r1, [sp, #4]
   1b71c:	ldr	r2, [sp]
   1b720:	movw	r0, #0
   1b724:	bl	1b630 <__assert_fail@plt+0xa154>
   1b728:	mov	sp, fp
   1b72c:	pop	{fp, pc}
   1b730:	push	{fp, lr}
   1b734:	mov	fp, sp
   1b738:	sub	sp, sp, #16
   1b73c:	str	r0, [fp, #-4]
   1b740:	str	r1, [sp, #8]
   1b744:	str	r2, [sp, #4]
   1b748:	ldr	r1, [fp, #-4]
   1b74c:	ldr	r2, [sp, #8]
   1b750:	ldr	r3, [sp, #4]
   1b754:	movw	r0, #0
   1b758:	bl	1b6c0 <__assert_fail@plt+0xa1e4>
   1b75c:	mov	sp, fp
   1b760:	pop	{fp, pc}
   1b764:	push	{fp, lr}
   1b768:	mov	fp, sp
   1b76c:	sub	sp, sp, #72	; 0x48
   1b770:	movw	r3, #25020	; 0x61bc
   1b774:	movt	r3, #3
   1b778:	str	r0, [fp, #-4]
   1b77c:	str	r1, [fp, #-8]
   1b780:	strb	r2, [fp, #-9]
   1b784:	add	r0, sp, #12
   1b788:	mov	r1, r0
   1b78c:	str	r0, [sp, #8]
   1b790:	mov	r0, r1
   1b794:	mov	r1, r3
   1b798:	movw	r2, #48	; 0x30
   1b79c:	bl	1123c <memcpy@plt>
   1b7a0:	ldr	r0, [sp, #8]
   1b7a4:	ldrb	r1, [fp, #-9]
   1b7a8:	movw	r2, #1
   1b7ac:	bl	19674 <__assert_fail@plt+0x8198>
   1b7b0:	ldr	r1, [fp, #-4]
   1b7b4:	ldr	r2, [fp, #-8]
   1b7b8:	movw	r3, #0
   1b7bc:	str	r0, [sp, #4]
   1b7c0:	mov	r0, r3
   1b7c4:	add	r3, sp, #12
   1b7c8:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b7cc:	mov	sp, fp
   1b7d0:	pop	{fp, pc}
   1b7d4:	push	{fp, lr}
   1b7d8:	mov	fp, sp
   1b7dc:	sub	sp, sp, #8
   1b7e0:	str	r0, [sp, #4]
   1b7e4:	strb	r1, [sp, #3]
   1b7e8:	ldr	r0, [sp, #4]
   1b7ec:	mvn	r1, #0
   1b7f0:	ldrb	r2, [sp, #3]
   1b7f4:	bl	1b764 <__assert_fail@plt+0xa288>
   1b7f8:	mov	sp, fp
   1b7fc:	pop	{fp, pc}
   1b800:	push	{fp, lr}
   1b804:	mov	fp, sp
   1b808:	sub	sp, sp, #8
   1b80c:	str	r0, [sp, #4]
   1b810:	ldr	r0, [sp, #4]
   1b814:	movw	r1, #58	; 0x3a
   1b818:	and	r1, r1, #255	; 0xff
   1b81c:	bl	1b7d4 <__assert_fail@plt+0xa2f8>
   1b820:	mov	sp, fp
   1b824:	pop	{fp, pc}
   1b828:	push	{fp, lr}
   1b82c:	mov	fp, sp
   1b830:	sub	sp, sp, #8
   1b834:	str	r0, [sp, #4]
   1b838:	str	r1, [sp]
   1b83c:	ldr	r0, [sp, #4]
   1b840:	ldr	r1, [sp]
   1b844:	movw	r2, #58	; 0x3a
   1b848:	and	r2, r2, #255	; 0xff
   1b84c:	bl	1b764 <__assert_fail@plt+0xa288>
   1b850:	mov	sp, fp
   1b854:	pop	{fp, pc}
   1b858:	push	{fp, lr}
   1b85c:	mov	fp, sp
   1b860:	sub	sp, sp, #120	; 0x78
   1b864:	str	r0, [fp, #-4]
   1b868:	str	r1, [fp, #-8]
   1b86c:	str	r2, [fp, #-12]
   1b870:	ldr	r1, [fp, #-8]
   1b874:	add	r0, sp, #12
   1b878:	bl	1b670 <__assert_fail@plt+0xa194>
   1b87c:	add	r0, sp, #60	; 0x3c
   1b880:	mov	r1, r0
   1b884:	add	r2, sp, #12
   1b888:	str	r0, [sp, #8]
   1b88c:	mov	r0, r1
   1b890:	mov	r1, r2
   1b894:	movw	r2, #48	; 0x30
   1b898:	bl	1123c <memcpy@plt>
   1b89c:	ldr	r0, [sp, #8]
   1b8a0:	movw	r1, #58	; 0x3a
   1b8a4:	and	r1, r1, #255	; 0xff
   1b8a8:	movw	r2, #1
   1b8ac:	bl	19674 <__assert_fail@plt+0x8198>
   1b8b0:	ldr	r1, [fp, #-4]
   1b8b4:	ldr	r2, [fp, #-12]
   1b8b8:	str	r0, [sp, #4]
   1b8bc:	mov	r0, r1
   1b8c0:	mov	r1, r2
   1b8c4:	mvn	r2, #0
   1b8c8:	add	r3, sp, #60	; 0x3c
   1b8cc:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b8d0:	mov	sp, fp
   1b8d4:	pop	{fp, pc}
   1b8d8:	push	{fp, lr}
   1b8dc:	mov	fp, sp
   1b8e0:	sub	sp, sp, #24
   1b8e4:	str	r0, [fp, #-4]
   1b8e8:	str	r1, [fp, #-8]
   1b8ec:	str	r2, [sp, #12]
   1b8f0:	str	r3, [sp, #8]
   1b8f4:	ldr	r0, [fp, #-4]
   1b8f8:	ldr	r1, [fp, #-8]
   1b8fc:	ldr	r2, [sp, #12]
   1b900:	ldr	r3, [sp, #8]
   1b904:	mvn	ip, #0
   1b908:	str	ip, [sp]
   1b90c:	bl	1b918 <__assert_fail@plt+0xa43c>
   1b910:	mov	sp, fp
   1b914:	pop	{fp, pc}
   1b918:	push	{fp, lr}
   1b91c:	mov	fp, sp
   1b920:	sub	sp, sp, #72	; 0x48
   1b924:	ldr	ip, [fp, #8]
   1b928:	movw	lr, #25020	; 0x61bc
   1b92c:	movt	lr, #3
   1b930:	str	r0, [fp, #-4]
   1b934:	str	r1, [fp, #-8]
   1b938:	str	r2, [fp, #-12]
   1b93c:	str	r3, [fp, #-16]
   1b940:	add	r0, sp, #8
   1b944:	mov	r1, r0
   1b948:	str	r0, [sp, #4]
   1b94c:	mov	r0, r1
   1b950:	mov	r1, lr
   1b954:	movw	r2, #48	; 0x30
   1b958:	str	ip, [sp]
   1b95c:	bl	1123c <memcpy@plt>
   1b960:	ldr	r1, [fp, #-8]
   1b964:	ldr	r2, [fp, #-12]
   1b968:	ldr	r0, [sp, #4]
   1b96c:	bl	19774 <__assert_fail@plt+0x8298>
   1b970:	ldr	r0, [fp, #-4]
   1b974:	ldr	r1, [fp, #-16]
   1b978:	ldr	r2, [fp, #8]
   1b97c:	add	r3, sp, #8
   1b980:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1b984:	mov	sp, fp
   1b988:	pop	{fp, pc}
   1b98c:	push	{fp, lr}
   1b990:	mov	fp, sp
   1b994:	sub	sp, sp, #16
   1b998:	str	r0, [fp, #-4]
   1b99c:	str	r1, [sp, #8]
   1b9a0:	str	r2, [sp, #4]
   1b9a4:	ldr	r1, [fp, #-4]
   1b9a8:	ldr	r2, [sp, #8]
   1b9ac:	ldr	r3, [sp, #4]
   1b9b0:	movw	r0, #0
   1b9b4:	bl	1b8d8 <__assert_fail@plt+0xa3fc>
   1b9b8:	mov	sp, fp
   1b9bc:	pop	{fp, pc}
   1b9c0:	push	{fp, lr}
   1b9c4:	mov	fp, sp
   1b9c8:	sub	sp, sp, #24
   1b9cc:	str	r0, [fp, #-4]
   1b9d0:	str	r1, [fp, #-8]
   1b9d4:	str	r2, [sp, #12]
   1b9d8:	str	r3, [sp, #8]
   1b9dc:	ldr	r1, [fp, #-4]
   1b9e0:	ldr	r2, [fp, #-8]
   1b9e4:	ldr	r3, [sp, #12]
   1b9e8:	ldr	r0, [sp, #8]
   1b9ec:	movw	ip, #0
   1b9f0:	str	r0, [sp, #4]
   1b9f4:	mov	r0, ip
   1b9f8:	ldr	ip, [sp, #4]
   1b9fc:	str	ip, [sp]
   1ba00:	bl	1b918 <__assert_fail@plt+0xa43c>
   1ba04:	mov	sp, fp
   1ba08:	pop	{fp, pc}
   1ba0c:	push	{fp, lr}
   1ba10:	mov	fp, sp
   1ba14:	sub	sp, sp, #16
   1ba18:	str	r0, [fp, #-4]
   1ba1c:	str	r1, [sp, #8]
   1ba20:	str	r2, [sp, #4]
   1ba24:	ldr	r0, [fp, #-4]
   1ba28:	ldr	r1, [sp, #8]
   1ba2c:	ldr	r2, [sp, #4]
   1ba30:	movw	r3, #24900	; 0x6144
   1ba34:	movt	r3, #3
   1ba38:	bl	1b2d8 <__assert_fail@plt+0x9dfc>
   1ba3c:	mov	sp, fp
   1ba40:	pop	{fp, pc}
   1ba44:	push	{fp, lr}
   1ba48:	mov	fp, sp
   1ba4c:	sub	sp, sp, #8
   1ba50:	str	r0, [sp, #4]
   1ba54:	str	r1, [sp]
   1ba58:	ldr	r1, [sp, #4]
   1ba5c:	ldr	r2, [sp]
   1ba60:	movw	r0, #0
   1ba64:	bl	1ba0c <__assert_fail@plt+0xa530>
   1ba68:	mov	sp, fp
   1ba6c:	pop	{fp, pc}
   1ba70:	push	{fp, lr}
   1ba74:	mov	fp, sp
   1ba78:	sub	sp, sp, #8
   1ba7c:	str	r0, [sp, #4]
   1ba80:	str	r1, [sp]
   1ba84:	ldr	r0, [sp, #4]
   1ba88:	ldr	r1, [sp]
   1ba8c:	mvn	r2, #0
   1ba90:	bl	1ba0c <__assert_fail@plt+0xa530>
   1ba94:	mov	sp, fp
   1ba98:	pop	{fp, pc}
   1ba9c:	push	{fp, lr}
   1baa0:	mov	fp, sp
   1baa4:	sub	sp, sp, #8
   1baa8:	str	r0, [sp, #4]
   1baac:	ldr	r1, [sp, #4]
   1bab0:	movw	r0, #0
   1bab4:	bl	1ba70 <__assert_fail@plt+0xa594>
   1bab8:	mov	sp, fp
   1babc:	pop	{fp, pc}
   1bac0:	push	{fp, lr}
   1bac4:	mov	fp, sp
   1bac8:	sub	sp, sp, #24
   1bacc:	str	r0, [fp, #-8]
   1bad0:	str	r1, [sp, #12]
   1bad4:	ldr	r0, [fp, #-8]
   1bad8:	bl	11350 <gettext@plt>
   1badc:	str	r0, [sp, #8]
   1bae0:	ldr	r0, [sp, #8]
   1bae4:	ldr	r1, [fp, #-8]
   1bae8:	cmp	r0, r1
   1baec:	beq	1bafc <__assert_fail@plt+0xa620>
   1baf0:	ldr	r0, [sp, #8]
   1baf4:	str	r0, [fp, #-4]
   1baf8:	b	1bbc8 <__assert_fail@plt+0xa6ec>
   1bafc:	bl	2280c <__assert_fail@plt+0x11330>
   1bb00:	str	r0, [sp, #4]
   1bb04:	ldr	r0, [sp, #4]
   1bb08:	movw	r1, #22386	; 0x5772
   1bb0c:	movt	r1, #2
   1bb10:	bl	21bb4 <__assert_fail@plt+0x106d8>
   1bb14:	cmp	r0, #0
   1bb18:	bne	1bb50 <__assert_fail@plt+0xa674>
   1bb1c:	ldr	r0, [fp, #-8]
   1bb20:	ldrb	r0, [r0]
   1bb24:	cmp	r0, #96	; 0x60
   1bb28:	movw	r0, #0
   1bb2c:	moveq	r0, #1
   1bb30:	tst	r0, #1
   1bb34:	movw	r0, #22396	; 0x577c
   1bb38:	movt	r0, #2
   1bb3c:	movw	r1, #22392	; 0x5778
   1bb40:	movt	r1, #2
   1bb44:	movne	r0, r1
   1bb48:	str	r0, [fp, #-4]
   1bb4c:	b	1bbc8 <__assert_fail@plt+0xa6ec>
   1bb50:	ldr	r0, [sp, #4]
   1bb54:	movw	r1, #22400	; 0x5780
   1bb58:	movt	r1, #2
   1bb5c:	bl	21bb4 <__assert_fail@plt+0x106d8>
   1bb60:	cmp	r0, #0
   1bb64:	bne	1bb9c <__assert_fail@plt+0xa6c0>
   1bb68:	ldr	r0, [fp, #-8]
   1bb6c:	ldrb	r0, [r0]
   1bb70:	cmp	r0, #96	; 0x60
   1bb74:	movw	r0, #0
   1bb78:	moveq	r0, #1
   1bb7c:	tst	r0, #1
   1bb80:	movw	r0, #22412	; 0x578c
   1bb84:	movt	r0, #2
   1bb88:	movw	r1, #22408	; 0x5788
   1bb8c:	movt	r1, #2
   1bb90:	movne	r0, r1
   1bb94:	str	r0, [fp, #-4]
   1bb98:	b	1bbc8 <__assert_fail@plt+0xa6ec>
   1bb9c:	ldr	r0, [sp, #12]
   1bba0:	cmp	r0, #9
   1bba4:	movw	r0, #0
   1bba8:	moveq	r0, #1
   1bbac:	tst	r0, #1
   1bbb0:	movw	r0, #22384	; 0x5770
   1bbb4:	movt	r0, #2
   1bbb8:	movw	r1, #22380	; 0x576c
   1bbbc:	movt	r1, #2
   1bbc0:	movne	r0, r1
   1bbc4:	str	r0, [fp, #-4]
   1bbc8:	ldr	r0, [fp, #-4]
   1bbcc:	mov	sp, fp
   1bbd0:	pop	{fp, pc}
   1bbd4:	push	{fp, lr}
   1bbd8:	mov	fp, sp
   1bbdc:	sub	sp, sp, #112	; 0x70
   1bbe0:	str	r0, [fp, #-8]
   1bbe4:	movw	r0, #23235	; 0x5ac3
   1bbe8:	movt	r0, #2
   1bbec:	mov	r1, sp
   1bbf0:	bl	247ec <__assert_fail@plt+0x13310>
   1bbf4:	cmp	r0, #0
   1bbf8:	beq	1bc08 <__assert_fail@plt+0xa72c>
   1bbfc:	movw	r0, #0
   1bc00:	str	r0, [fp, #-4]
   1bc04:	b	1bc38 <__assert_fail@plt+0xa75c>
   1bc08:	ldr	r0, [sp, #96]	; 0x60
   1bc0c:	ldr	r1, [sp, #100]	; 0x64
   1bc10:	ldr	r2, [fp, #-8]
   1bc14:	str	r1, [r2, #4]
   1bc18:	str	r0, [r2]
   1bc1c:	ldr	r0, [sp]
   1bc20:	ldr	r1, [sp, #4]
   1bc24:	ldr	r2, [fp, #-8]
   1bc28:	str	r1, [r2, #12]
   1bc2c:	str	r0, [r2, #8]
   1bc30:	ldr	r0, [fp, #-8]
   1bc34:	str	r0, [fp, #-4]
   1bc38:	ldr	r0, [fp, #-4]
   1bc3c:	mov	sp, fp
   1bc40:	pop	{fp, pc}
   1bc44:	push	{fp, lr}
   1bc48:	mov	fp, sp
   1bc4c:	sub	sp, sp, #24
   1bc50:	str	r0, [fp, #-4]
   1bc54:	ldr	r0, [fp, #-4]
   1bc58:	movw	r1, #0
   1bc5c:	cmp	r1, r0
   1bc60:	bgt	1bcb0 <__assert_fail@plt+0xa7d4>
   1bc64:	ldr	r0, [fp, #-4]
   1bc68:	cmp	r0, #2
   1bc6c:	bgt	1bcb0 <__assert_fail@plt+0xa7d4>
   1bc70:	ldr	r0, [fp, #-4]
   1bc74:	bl	23ca8 <__assert_fail@plt+0x127cc>
   1bc78:	str	r0, [fp, #-8]
   1bc7c:	bl	11398 <__errno_location@plt>
   1bc80:	ldr	r0, [r0]
   1bc84:	str	r0, [sp, #12]
   1bc88:	ldr	r0, [fp, #-4]
   1bc8c:	bl	114a0 <close@plt>
   1bc90:	ldr	lr, [sp, #12]
   1bc94:	str	r0, [sp, #8]
   1bc98:	str	lr, [sp, #4]
   1bc9c:	bl	11398 <__errno_location@plt>
   1bca0:	ldr	lr, [sp, #4]
   1bca4:	str	lr, [r0]
   1bca8:	ldr	r0, [fp, #-8]
   1bcac:	str	r0, [fp, #-4]
   1bcb0:	ldr	r0, [fp, #-4]
   1bcb4:	mov	sp, fp
   1bcb8:	pop	{fp, pc}
   1bcbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bcc0:	add	fp, sp, #28
   1bcc4:	sub	sp, sp, #260	; 0x104
   1bcc8:	ldr	ip, [fp, #12]
   1bccc:	ldr	lr, [fp, #8]
   1bcd0:	str	r0, [fp, #-32]	; 0xffffffe0
   1bcd4:	str	r1, [fp, #-36]	; 0xffffffdc
   1bcd8:	str	r2, [fp, #-40]	; 0xffffffd8
   1bcdc:	str	r3, [fp, #-44]	; 0xffffffd4
   1bce0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bce4:	movw	r1, #0
   1bce8:	cmp	r0, r1
   1bcec:	str	lr, [fp, #-48]	; 0xffffffd0
   1bcf0:	str	ip, [fp, #-52]	; 0xffffffcc
   1bcf4:	beq	1bd2c <__assert_fail@plt+0xa850>
   1bcf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bcfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bd04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bd08:	movw	ip, #22500	; 0x57e4
   1bd0c:	movt	ip, #2
   1bd10:	str	r1, [fp, #-56]	; 0xffffffc8
   1bd14:	mov	r1, ip
   1bd18:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1bd1c:	str	ip, [sp]
   1bd20:	bl	1138c <fprintf@plt>
   1bd24:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd28:	b	1bd48 <__assert_fail@plt+0xa86c>
   1bd2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bd34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bd38:	movw	r1, #22512	; 0x57f0
   1bd3c:	movt	r1, #2
   1bd40:	bl	1138c <fprintf@plt>
   1bd44:	str	r0, [fp, #-64]	; 0xffffffc0
   1bd48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd4c:	movw	r1, #22519	; 0x57f7
   1bd50:	movt	r1, #2
   1bd54:	str	r0, [fp, #-68]	; 0xffffffbc
   1bd58:	mov	r0, r1
   1bd5c:	bl	11350 <gettext@plt>
   1bd60:	movw	r1, #23237	; 0x5ac5
   1bd64:	movt	r1, #2
   1bd68:	movw	r3, #2022	; 0x7e6
   1bd6c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1bd70:	str	r0, [fp, #-72]	; 0xffffffb8
   1bd74:	mov	r0, lr
   1bd78:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1bd7c:	bl	1138c <fprintf@plt>
   1bd80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd84:	movw	r2, #20031	; 0x4e3f
   1bd88:	movt	r2, #2
   1bd8c:	str	r0, [fp, #-76]	; 0xffffffb4
   1bd90:	mov	r0, r2
   1bd94:	str	r2, [fp, #-80]	; 0xffffffb0
   1bd98:	bl	111d0 <fputs_unlocked@plt>
   1bd9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bda0:	movw	r2, #22523	; 0x57fb
   1bda4:	movt	r2, #2
   1bda8:	str	r0, [fp, #-84]	; 0xffffffac
   1bdac:	mov	r0, r2
   1bdb0:	str	r1, [fp, #-88]	; 0xffffffa8
   1bdb4:	bl	11350 <gettext@plt>
   1bdb8:	movw	r2, #22694	; 0x58a6
   1bdbc:	movt	r2, #2
   1bdc0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1bdc4:	str	r0, [fp, #-92]	; 0xffffffa4
   1bdc8:	mov	r0, r1
   1bdcc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1bdd0:	bl	1138c <fprintf@plt>
   1bdd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bdd8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1bddc:	str	r0, [fp, #-96]	; 0xffffffa0
   1bde0:	mov	r0, r2
   1bde4:	bl	111d0 <fputs_unlocked@plt>
   1bde8:	ldr	r1, [fp, #12]
   1bdec:	cmp	r1, #9
   1bdf0:	str	r0, [fp, #-100]	; 0xffffff9c
   1bdf4:	str	r1, [fp, #-104]	; 0xffffff98
   1bdf8:	bhi	1c238 <__assert_fail@plt+0xad5c>
   1bdfc:	add	r0, pc, #8
   1be00:	ldr	r1, [fp, #-104]	; 0xffffff98
   1be04:	ldr	r0, [r0, r1, lsl #2]
   1be08:	mov	pc, r0
   1be0c:	andeq	fp, r1, r4, lsr lr
   1be10:	andeq	fp, r1, r8, lsr lr
   1be14:	andeq	fp, r1, r4, ror lr
   1be18:			; <UNDEFINED> instruction: 0x0001beb8
   1be1c:	andeq	fp, r1, r4, lsl pc
   1be20:	andeq	fp, r1, ip, ror pc
   1be24:	strdeq	fp, [r1], -r0
   1be28:	andeq	ip, r1, r0, ror r0
   1be2c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1be30:	muleq	r1, r4, r1
   1be34:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1be38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be3c:	movw	r1, #22728	; 0x58c8
   1be40:	movt	r1, #2
   1be44:	str	r0, [fp, #-108]	; 0xffffff94
   1be48:	mov	r0, r1
   1be4c:	bl	11350 <gettext@plt>
   1be50:	ldr	r1, [fp, #8]
   1be54:	ldr	r2, [r1]
   1be58:	ldr	r1, [fp, #-108]	; 0xffffff94
   1be5c:	str	r0, [fp, #-112]	; 0xffffff90
   1be60:	mov	r0, r1
   1be64:	ldr	r1, [fp, #-112]	; 0xffffff90
   1be68:	bl	1138c <fprintf@plt>
   1be6c:	str	r0, [fp, #-116]	; 0xffffff8c
   1be70:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1be74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be78:	movw	r1, #22744	; 0x58d8
   1be7c:	movt	r1, #2
   1be80:	str	r0, [fp, #-120]	; 0xffffff88
   1be84:	mov	r0, r1
   1be88:	bl	11350 <gettext@plt>
   1be8c:	ldr	r1, [fp, #8]
   1be90:	ldr	r2, [r1]
   1be94:	ldr	r1, [fp, #8]
   1be98:	ldr	r3, [r1, #4]
   1be9c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1bea0:	str	r0, [fp, #-124]	; 0xffffff84
   1bea4:	mov	r0, r1
   1bea8:	ldr	r1, [fp, #-124]	; 0xffffff84
   1beac:	bl	1138c <fprintf@plt>
   1beb0:	str	r0, [fp, #-128]	; 0xffffff80
   1beb4:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1beb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bebc:	movw	r1, #22767	; 0x58ef
   1bec0:	movt	r1, #2
   1bec4:	str	r0, [fp, #-132]	; 0xffffff7c
   1bec8:	mov	r0, r1
   1becc:	bl	11350 <gettext@plt>
   1bed0:	ldr	r1, [fp, #8]
   1bed4:	ldr	r2, [r1]
   1bed8:	ldr	r1, [fp, #8]
   1bedc:	ldr	r3, [r1, #4]
   1bee0:	ldr	r1, [fp, #8]
   1bee4:	ldr	r1, [r1, #8]
   1bee8:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1beec:	str	r0, [fp, #-136]	; 0xffffff78
   1bef0:	mov	r0, lr
   1bef4:	ldr	ip, [fp, #-136]	; 0xffffff78
   1bef8:	str	r1, [fp, #-140]	; 0xffffff74
   1befc:	mov	r1, ip
   1bf00:	ldr	r4, [fp, #-140]	; 0xffffff74
   1bf04:	str	r4, [sp]
   1bf08:	bl	1138c <fprintf@plt>
   1bf0c:	str	r0, [sp, #144]	; 0x90
   1bf10:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1bf14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf18:	movw	r1, #22795	; 0x590b
   1bf1c:	movt	r1, #2
   1bf20:	str	r0, [sp, #140]	; 0x8c
   1bf24:	mov	r0, r1
   1bf28:	bl	11350 <gettext@plt>
   1bf2c:	ldr	r1, [fp, #8]
   1bf30:	ldr	r2, [r1]
   1bf34:	ldr	r1, [fp, #8]
   1bf38:	ldr	r3, [r1, #4]
   1bf3c:	ldr	r1, [fp, #8]
   1bf40:	ldr	r1, [r1, #8]
   1bf44:	ldr	lr, [fp, #8]
   1bf48:	ldr	lr, [lr, #12]
   1bf4c:	ldr	ip, [sp, #140]	; 0x8c
   1bf50:	str	r0, [sp, #136]	; 0x88
   1bf54:	mov	r0, ip
   1bf58:	ldr	r4, [sp, #136]	; 0x88
   1bf5c:	str	r1, [sp, #132]	; 0x84
   1bf60:	mov	r1, r4
   1bf64:	ldr	r5, [sp, #132]	; 0x84
   1bf68:	str	r5, [sp]
   1bf6c:	str	lr, [sp, #4]
   1bf70:	bl	1138c <fprintf@plt>
   1bf74:	str	r0, [sp, #128]	; 0x80
   1bf78:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1bf7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf80:	movw	r1, #22827	; 0x592b
   1bf84:	movt	r1, #2
   1bf88:	str	r0, [sp, #124]	; 0x7c
   1bf8c:	mov	r0, r1
   1bf90:	bl	11350 <gettext@plt>
   1bf94:	ldr	r1, [fp, #8]
   1bf98:	ldr	r2, [r1]
   1bf9c:	ldr	r1, [fp, #8]
   1bfa0:	ldr	r3, [r1, #4]
   1bfa4:	ldr	r1, [fp, #8]
   1bfa8:	ldr	r1, [r1, #8]
   1bfac:	ldr	lr, [fp, #8]
   1bfb0:	ldr	lr, [lr, #12]
   1bfb4:	ldr	ip, [fp, #8]
   1bfb8:	ldr	ip, [ip, #16]
   1bfbc:	ldr	r4, [sp, #124]	; 0x7c
   1bfc0:	str	r0, [sp, #120]	; 0x78
   1bfc4:	mov	r0, r4
   1bfc8:	ldr	r5, [sp, #120]	; 0x78
   1bfcc:	str	r1, [sp, #116]	; 0x74
   1bfd0:	mov	r1, r5
   1bfd4:	ldr	r6, [sp, #116]	; 0x74
   1bfd8:	str	r6, [sp]
   1bfdc:	str	lr, [sp, #4]
   1bfe0:	str	ip, [sp, #8]
   1bfe4:	bl	1138c <fprintf@plt>
   1bfe8:	str	r0, [sp, #112]	; 0x70
   1bfec:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1bff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bff4:	movw	r1, #22863	; 0x594f
   1bff8:	movt	r1, #2
   1bffc:	str	r0, [sp, #108]	; 0x6c
   1c000:	mov	r0, r1
   1c004:	bl	11350 <gettext@plt>
   1c008:	ldr	r1, [fp, #8]
   1c00c:	ldr	r2, [r1]
   1c010:	ldr	r1, [fp, #8]
   1c014:	ldr	r3, [r1, #4]
   1c018:	ldr	r1, [fp, #8]
   1c01c:	ldr	r1, [r1, #8]
   1c020:	ldr	lr, [fp, #8]
   1c024:	ldr	lr, [lr, #12]
   1c028:	ldr	ip, [fp, #8]
   1c02c:	ldr	ip, [ip, #16]
   1c030:	ldr	r4, [fp, #8]
   1c034:	ldr	r4, [r4, #20]
   1c038:	ldr	r5, [sp, #108]	; 0x6c
   1c03c:	str	r0, [sp, #104]	; 0x68
   1c040:	mov	r0, r5
   1c044:	ldr	r6, [sp, #104]	; 0x68
   1c048:	str	r1, [sp, #100]	; 0x64
   1c04c:	mov	r1, r6
   1c050:	ldr	r7, [sp, #100]	; 0x64
   1c054:	str	r7, [sp]
   1c058:	str	lr, [sp, #4]
   1c05c:	str	ip, [sp, #8]
   1c060:	str	r4, [sp, #12]
   1c064:	bl	1138c <fprintf@plt>
   1c068:	str	r0, [sp, #96]	; 0x60
   1c06c:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1c070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c074:	movw	r1, #22903	; 0x5977
   1c078:	movt	r1, #2
   1c07c:	str	r0, [sp, #92]	; 0x5c
   1c080:	mov	r0, r1
   1c084:	bl	11350 <gettext@plt>
   1c088:	ldr	r1, [fp, #8]
   1c08c:	ldr	r2, [r1]
   1c090:	ldr	r1, [fp, #8]
   1c094:	ldr	r3, [r1, #4]
   1c098:	ldr	r1, [fp, #8]
   1c09c:	ldr	r1, [r1, #8]
   1c0a0:	ldr	lr, [fp, #8]
   1c0a4:	ldr	lr, [lr, #12]
   1c0a8:	ldr	ip, [fp, #8]
   1c0ac:	ldr	ip, [ip, #16]
   1c0b0:	ldr	r4, [fp, #8]
   1c0b4:	ldr	r4, [r4, #20]
   1c0b8:	ldr	r5, [fp, #8]
   1c0bc:	ldr	r5, [r5, #24]
   1c0c0:	ldr	r6, [sp, #92]	; 0x5c
   1c0c4:	str	r0, [sp, #88]	; 0x58
   1c0c8:	mov	r0, r6
   1c0cc:	ldr	r7, [sp, #88]	; 0x58
   1c0d0:	str	r1, [sp, #84]	; 0x54
   1c0d4:	mov	r1, r7
   1c0d8:	ldr	r8, [sp, #84]	; 0x54
   1c0dc:	str	r8, [sp]
   1c0e0:	str	lr, [sp, #4]
   1c0e4:	str	ip, [sp, #8]
   1c0e8:	str	r4, [sp, #12]
   1c0ec:	str	r5, [sp, #16]
   1c0f0:	bl	1138c <fprintf@plt>
   1c0f4:	str	r0, [sp, #80]	; 0x50
   1c0f8:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1c0fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c100:	movw	r1, #22947	; 0x59a3
   1c104:	movt	r1, #2
   1c108:	str	r0, [sp, #76]	; 0x4c
   1c10c:	mov	r0, r1
   1c110:	bl	11350 <gettext@plt>
   1c114:	ldr	r1, [fp, #8]
   1c118:	ldr	r2, [r1]
   1c11c:	ldr	r1, [fp, #8]
   1c120:	ldr	r3, [r1, #4]
   1c124:	ldr	r1, [fp, #8]
   1c128:	ldr	r1, [r1, #8]
   1c12c:	ldr	lr, [fp, #8]
   1c130:	ldr	lr, [lr, #12]
   1c134:	ldr	ip, [fp, #8]
   1c138:	ldr	ip, [ip, #16]
   1c13c:	ldr	r4, [fp, #8]
   1c140:	ldr	r4, [r4, #20]
   1c144:	ldr	r5, [fp, #8]
   1c148:	ldr	r5, [r5, #24]
   1c14c:	ldr	r6, [fp, #8]
   1c150:	ldr	r6, [r6, #28]
   1c154:	ldr	r7, [sp, #76]	; 0x4c
   1c158:	str	r0, [sp, #72]	; 0x48
   1c15c:	mov	r0, r7
   1c160:	ldr	r8, [sp, #72]	; 0x48
   1c164:	str	r1, [sp, #68]	; 0x44
   1c168:	mov	r1, r8
   1c16c:	ldr	r9, [sp, #68]	; 0x44
   1c170:	str	r9, [sp]
   1c174:	str	lr, [sp, #4]
   1c178:	str	ip, [sp, #8]
   1c17c:	str	r4, [sp, #12]
   1c180:	str	r5, [sp, #16]
   1c184:	str	r6, [sp, #20]
   1c188:	bl	1138c <fprintf@plt>
   1c18c:	str	r0, [sp, #64]	; 0x40
   1c190:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1c194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c198:	movw	r1, #22995	; 0x59d3
   1c19c:	movt	r1, #2
   1c1a0:	str	r0, [sp, #60]	; 0x3c
   1c1a4:	mov	r0, r1
   1c1a8:	bl	11350 <gettext@plt>
   1c1ac:	ldr	r1, [fp, #8]
   1c1b0:	ldr	r2, [r1]
   1c1b4:	ldr	r1, [fp, #8]
   1c1b8:	ldr	r3, [r1, #4]
   1c1bc:	ldr	r1, [fp, #8]
   1c1c0:	ldr	r1, [r1, #8]
   1c1c4:	ldr	lr, [fp, #8]
   1c1c8:	ldr	lr, [lr, #12]
   1c1cc:	ldr	ip, [fp, #8]
   1c1d0:	ldr	ip, [ip, #16]
   1c1d4:	ldr	r4, [fp, #8]
   1c1d8:	ldr	r4, [r4, #20]
   1c1dc:	ldr	r5, [fp, #8]
   1c1e0:	ldr	r5, [r5, #24]
   1c1e4:	ldr	r6, [fp, #8]
   1c1e8:	ldr	r6, [r6, #28]
   1c1ec:	ldr	r7, [fp, #8]
   1c1f0:	ldr	r7, [r7, #32]
   1c1f4:	ldr	r8, [sp, #60]	; 0x3c
   1c1f8:	str	r0, [sp, #56]	; 0x38
   1c1fc:	mov	r0, r8
   1c200:	ldr	r9, [sp, #56]	; 0x38
   1c204:	str	r1, [sp, #52]	; 0x34
   1c208:	mov	r1, r9
   1c20c:	ldr	sl, [sp, #52]	; 0x34
   1c210:	str	sl, [sp]
   1c214:	str	lr, [sp, #4]
   1c218:	str	ip, [sp, #8]
   1c21c:	str	r4, [sp, #12]
   1c220:	str	r5, [sp, #16]
   1c224:	str	r6, [sp, #20]
   1c228:	str	r7, [sp, #24]
   1c22c:	bl	1138c <fprintf@plt>
   1c230:	str	r0, [sp, #48]	; 0x30
   1c234:	b	1c2d8 <__assert_fail@plt+0xadfc>
   1c238:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c23c:	movw	r1, #23047	; 0x5a07
   1c240:	movt	r1, #2
   1c244:	str	r0, [sp, #44]	; 0x2c
   1c248:	mov	r0, r1
   1c24c:	bl	11350 <gettext@plt>
   1c250:	ldr	r1, [fp, #8]
   1c254:	ldr	r2, [r1]
   1c258:	ldr	r1, [fp, #8]
   1c25c:	ldr	r3, [r1, #4]
   1c260:	ldr	r1, [fp, #8]
   1c264:	ldr	r1, [r1, #8]
   1c268:	ldr	lr, [fp, #8]
   1c26c:	ldr	lr, [lr, #12]
   1c270:	ldr	ip, [fp, #8]
   1c274:	ldr	ip, [ip, #16]
   1c278:	ldr	r4, [fp, #8]
   1c27c:	ldr	r4, [r4, #20]
   1c280:	ldr	r5, [fp, #8]
   1c284:	ldr	r5, [r5, #24]
   1c288:	ldr	r6, [fp, #8]
   1c28c:	ldr	r6, [r6, #28]
   1c290:	ldr	r7, [fp, #8]
   1c294:	ldr	r7, [r7, #32]
   1c298:	ldr	r8, [sp, #44]	; 0x2c
   1c29c:	str	r0, [sp, #40]	; 0x28
   1c2a0:	mov	r0, r8
   1c2a4:	ldr	r9, [sp, #40]	; 0x28
   1c2a8:	str	r1, [sp, #36]	; 0x24
   1c2ac:	mov	r1, r9
   1c2b0:	ldr	sl, [sp, #36]	; 0x24
   1c2b4:	str	sl, [sp]
   1c2b8:	str	lr, [sp, #4]
   1c2bc:	str	ip, [sp, #8]
   1c2c0:	str	r4, [sp, #12]
   1c2c4:	str	r5, [sp, #16]
   1c2c8:	str	r6, [sp, #20]
   1c2cc:	str	r7, [sp, #24]
   1c2d0:	bl	1138c <fprintf@plt>
   1c2d4:	str	r0, [sp, #32]
   1c2d8:	sub	sp, fp, #28
   1c2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2e0:	push	{fp, lr}
   1c2e4:	mov	fp, sp
   1c2e8:	sub	sp, sp, #32
   1c2ec:	ldr	ip, [fp, #8]
   1c2f0:	str	r0, [fp, #-4]
   1c2f4:	str	r1, [fp, #-8]
   1c2f8:	str	r2, [fp, #-12]
   1c2fc:	str	r3, [sp, #16]
   1c300:	movw	r0, #0
   1c304:	str	r0, [sp, #12]
   1c308:	str	ip, [sp, #8]
   1c30c:	ldr	r0, [fp, #8]
   1c310:	ldr	r1, [sp, #12]
   1c314:	add	r0, r0, r1, lsl #2
   1c318:	ldr	r0, [r0]
   1c31c:	movw	r1, #0
   1c320:	cmp	r0, r1
   1c324:	beq	1c33c <__assert_fail@plt+0xae60>
   1c328:	b	1c32c <__assert_fail@plt+0xae50>
   1c32c:	ldr	r0, [sp, #12]
   1c330:	add	r0, r0, #1
   1c334:	str	r0, [sp, #12]
   1c338:	b	1c30c <__assert_fail@plt+0xae30>
   1c33c:	ldr	r0, [fp, #-4]
   1c340:	ldr	r1, [fp, #-8]
   1c344:	ldr	r2, [fp, #-12]
   1c348:	ldr	r3, [sp, #16]
   1c34c:	ldr	ip, [fp, #8]
   1c350:	ldr	lr, [sp, #12]
   1c354:	str	ip, [sp]
   1c358:	str	lr, [sp, #4]
   1c35c:	bl	1bcbc <__assert_fail@plt+0xa7e0>
   1c360:	mov	sp, fp
   1c364:	pop	{fp, pc}
   1c368:	push	{fp, lr}
   1c36c:	mov	fp, sp
   1c370:	sub	sp, sp, #80	; 0x50
   1c374:	ldr	ip, [fp, #8]
   1c378:	str	ip, [fp, #-4]
   1c37c:	str	r0, [fp, #-8]
   1c380:	str	r1, [fp, #-12]
   1c384:	str	r2, [fp, #-16]
   1c388:	str	r3, [fp, #-20]	; 0xffffffec
   1c38c:	movw	r0, #0
   1c390:	str	r0, [fp, #-24]	; 0xffffffe8
   1c394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c398:	cmp	r0, #10
   1c39c:	movw	r0, #0
   1c3a0:	str	r0, [sp, #12]
   1c3a4:	bcs	1c3dc <__assert_fail@plt+0xaf00>
   1c3a8:	ldr	r0, [fp, #-4]
   1c3ac:	add	r1, r0, #4
   1c3b0:	str	r1, [fp, #-4]
   1c3b4:	ldr	r0, [r0]
   1c3b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c3bc:	add	r2, sp, #16
   1c3c0:	add	r1, r2, r1, lsl #2
   1c3c4:	str	r0, [r1]
   1c3c8:	movw	r1, #0
   1c3cc:	cmp	r0, r1
   1c3d0:	movw	r0, #0
   1c3d4:	movne	r0, #1
   1c3d8:	str	r0, [sp, #12]
   1c3dc:	ldr	r0, [sp, #12]
   1c3e0:	tst	r0, #1
   1c3e4:	beq	1c3fc <__assert_fail@plt+0xaf20>
   1c3e8:	b	1c3ec <__assert_fail@plt+0xaf10>
   1c3ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3f0:	add	r0, r0, #1
   1c3f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3f8:	b	1c394 <__assert_fail@plt+0xaeb8>
   1c3fc:	add	r0, sp, #16
   1c400:	ldr	r1, [fp, #-8]
   1c404:	ldr	r2, [fp, #-12]
   1c408:	ldr	r3, [fp, #-16]
   1c40c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c410:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c414:	str	r0, [sp, #8]
   1c418:	mov	r0, r1
   1c41c:	mov	r1, r2
   1c420:	mov	r2, r3
   1c424:	mov	r3, ip
   1c428:	ldr	ip, [sp, #8]
   1c42c:	str	ip, [sp]
   1c430:	str	lr, [sp, #4]
   1c434:	bl	1bcbc <__assert_fail@plt+0xa7e0>
   1c438:	mov	sp, fp
   1c43c:	pop	{fp, pc}
   1c440:	push	{fp, lr}
   1c444:	mov	fp, sp
   1c448:	sub	sp, sp, #32
   1c44c:	str	r0, [fp, #-4]
   1c450:	str	r1, [fp, #-8]
   1c454:	str	r2, [fp, #-12]
   1c458:	str	r3, [sp, #16]
   1c45c:	add	r0, fp, #8
   1c460:	str	r0, [sp, #12]
   1c464:	ldr	r0, [fp, #-4]
   1c468:	ldr	r1, [fp, #-8]
   1c46c:	ldr	r2, [fp, #-12]
   1c470:	ldr	r3, [sp, #16]
   1c474:	ldr	ip, [sp, #12]
   1c478:	mov	lr, sp
   1c47c:	str	ip, [lr]
   1c480:	bl	1c368 <__assert_fail@plt+0xae8c>
   1c484:	add	r0, sp, #12
   1c488:	str	r0, [sp, #8]
   1c48c:	mov	sp, fp
   1c490:	pop	{fp, pc}
   1c494:	push	{fp, lr}
   1c498:	mov	fp, sp
   1c49c:	sub	sp, sp, #16
   1c4a0:	movw	r0, #24972	; 0x618c
   1c4a4:	movt	r0, #3
   1c4a8:	ldr	r1, [r0]
   1c4ac:	movw	r0, #20031	; 0x4e3f
   1c4b0:	movt	r0, #2
   1c4b4:	bl	111d0 <fputs_unlocked@plt>
   1c4b8:	movw	r1, #23107	; 0x5a43
   1c4bc:	movt	r1, #2
   1c4c0:	str	r0, [fp, #-4]
   1c4c4:	mov	r0, r1
   1c4c8:	bl	11350 <gettext@plt>
   1c4cc:	movw	r1, #23127	; 0x5a57
   1c4d0:	movt	r1, #2
   1c4d4:	bl	11200 <printf@plt>
   1c4d8:	movw	r1, #23149	; 0x5a6d
   1c4dc:	movt	r1, #2
   1c4e0:	str	r0, [sp, #8]
   1c4e4:	mov	r0, r1
   1c4e8:	bl	11350 <gettext@plt>
   1c4ec:	movw	r1, #20304	; 0x4f50
   1c4f0:	movt	r1, #2
   1c4f4:	movw	r2, #20579	; 0x5063
   1c4f8:	movt	r2, #2
   1c4fc:	bl	11200 <printf@plt>
   1c500:	movw	r1, #23169	; 0x5a81
   1c504:	movt	r1, #2
   1c508:	str	r0, [sp, #4]
   1c50c:	mov	r0, r1
   1c510:	bl	11350 <gettext@plt>
   1c514:	movw	r1, #23208	; 0x5aa8
   1c518:	movt	r1, #2
   1c51c:	bl	11200 <printf@plt>
   1c520:	str	r0, [sp]
   1c524:	mov	sp, fp
   1c528:	pop	{fp, pc}
   1c52c:	push	{fp, lr}
   1c530:	mov	fp, sp
   1c534:	sub	sp, sp, #16
   1c538:	str	r0, [fp, #-4]
   1c53c:	str	r1, [sp, #8]
   1c540:	str	r2, [sp, #4]
   1c544:	ldr	r0, [fp, #-4]
   1c548:	ldr	r1, [sp, #8]
   1c54c:	ldr	r2, [sp, #4]
   1c550:	bl	1c55c <__assert_fail@plt+0xb080>
   1c554:	mov	sp, fp
   1c558:	pop	{fp, pc}
   1c55c:	push	{fp, lr}
   1c560:	mov	fp, sp
   1c564:	sub	sp, sp, #16
   1c568:	str	r0, [fp, #-4]
   1c56c:	str	r1, [sp, #8]
   1c570:	str	r2, [sp, #4]
   1c574:	ldr	r0, [fp, #-4]
   1c578:	ldr	r1, [sp, #8]
   1c57c:	ldr	r2, [sp, #4]
   1c580:	bl	22918 <__assert_fail@plt+0x1143c>
   1c584:	str	r0, [sp]
   1c588:	ldr	r0, [sp]
   1c58c:	movw	r1, #0
   1c590:	cmp	r0, r1
   1c594:	bne	1c5c4 <__assert_fail@plt+0xb0e8>
   1c598:	ldr	r0, [fp, #-4]
   1c59c:	movw	r1, #0
   1c5a0:	cmp	r0, r1
   1c5a4:	beq	1c5c0 <__assert_fail@plt+0xb0e4>
   1c5a8:	ldr	r0, [sp, #8]
   1c5ac:	cmp	r0, #0
   1c5b0:	beq	1c5c4 <__assert_fail@plt+0xb0e8>
   1c5b4:	ldr	r0, [sp, #4]
   1c5b8:	cmp	r0, #0
   1c5bc:	beq	1c5c4 <__assert_fail@plt+0xb0e8>
   1c5c0:	bl	1f3ac <__assert_fail@plt+0xded0>
   1c5c4:	ldr	r0, [sp]
   1c5c8:	mov	sp, fp
   1c5cc:	pop	{fp, pc}
   1c5d0:	push	{fp, lr}
   1c5d4:	mov	fp, sp
   1c5d8:	sub	sp, sp, #8
   1c5dc:	str	r0, [sp, #4]
   1c5e0:	ldr	r0, [sp, #4]
   1c5e4:	bl	217c0 <__assert_fail@plt+0x102e4>
   1c5e8:	bl	1c5f4 <__assert_fail@plt+0xb118>
   1c5ec:	mov	sp, fp
   1c5f0:	pop	{fp, pc}
   1c5f4:	push	{fp, lr}
   1c5f8:	mov	fp, sp
   1c5fc:	sub	sp, sp, #8
   1c600:	str	r0, [sp, #4]
   1c604:	ldr	r0, [sp, #4]
   1c608:	movw	r1, #0
   1c60c:	cmp	r0, r1
   1c610:	bne	1c618 <__assert_fail@plt+0xb13c>
   1c614:	bl	1f3ac <__assert_fail@plt+0xded0>
   1c618:	ldr	r0, [sp, #4]
   1c61c:	mov	sp, fp
   1c620:	pop	{fp, pc}
   1c624:	push	{fp, lr}
   1c628:	mov	fp, sp
   1c62c:	sub	sp, sp, #8
   1c630:	str	r0, [sp, #4]
   1c634:	ldr	r0, [sp, #4]
   1c638:	bl	22654 <__assert_fail@plt+0x11178>
   1c63c:	bl	1c5f4 <__assert_fail@plt+0xb118>
   1c640:	mov	sp, fp
   1c644:	pop	{fp, pc}
   1c648:	push	{fp, lr}
   1c64c:	mov	fp, sp
   1c650:	sub	sp, sp, #8
   1c654:	str	r0, [sp, #4]
   1c658:	ldr	r0, [sp, #4]
   1c65c:	bl	1c5d0 <__assert_fail@plt+0xb0f4>
   1c660:	mov	sp, fp
   1c664:	pop	{fp, pc}
   1c668:	push	{fp, lr}
   1c66c:	mov	fp, sp
   1c670:	sub	sp, sp, #16
   1c674:	str	r0, [fp, #-4]
   1c678:	str	r1, [sp, #8]
   1c67c:	ldr	r0, [fp, #-4]
   1c680:	ldr	r1, [sp, #8]
   1c684:	bl	21830 <__assert_fail@plt+0x10354>
   1c688:	str	r0, [sp, #4]
   1c68c:	ldr	r0, [sp, #4]
   1c690:	movw	r1, #0
   1c694:	cmp	r0, r1
   1c698:	bne	1c6bc <__assert_fail@plt+0xb1e0>
   1c69c:	ldr	r0, [fp, #-4]
   1c6a0:	movw	r1, #0
   1c6a4:	cmp	r0, r1
   1c6a8:	beq	1c6b8 <__assert_fail@plt+0xb1dc>
   1c6ac:	ldr	r0, [sp, #8]
   1c6b0:	cmp	r0, #0
   1c6b4:	beq	1c6bc <__assert_fail@plt+0xb1e0>
   1c6b8:	bl	1f3ac <__assert_fail@plt+0xded0>
   1c6bc:	ldr	r0, [sp, #4]
   1c6c0:	mov	sp, fp
   1c6c4:	pop	{fp, pc}
   1c6c8:	push	{fp, lr}
   1c6cc:	mov	fp, sp
   1c6d0:	sub	sp, sp, #8
   1c6d4:	str	r0, [sp, #4]
   1c6d8:	str	r1, [sp]
   1c6dc:	ldr	r0, [sp, #4]
   1c6e0:	ldr	r1, [sp]
   1c6e4:	bl	22694 <__assert_fail@plt+0x111b8>
   1c6e8:	bl	1c5f4 <__assert_fail@plt+0xb118>
   1c6ec:	mov	sp, fp
   1c6f0:	pop	{fp, pc}
   1c6f4:	push	{fp, lr}
   1c6f8:	mov	fp, sp
   1c6fc:	sub	sp, sp, #16
   1c700:	str	r0, [fp, #-4]
   1c704:	str	r1, [sp, #8]
   1c708:	str	r2, [sp, #4]
   1c70c:	ldr	r0, [fp, #-4]
   1c710:	ldr	r1, [sp, #8]
   1c714:	ldr	r2, [sp, #4]
   1c718:	bl	2278c <__assert_fail@plt+0x112b0>
   1c71c:	bl	1c5f4 <__assert_fail@plt+0xb118>
   1c720:	mov	sp, fp
   1c724:	pop	{fp, pc}
   1c728:	push	{fp, lr}
   1c72c:	mov	fp, sp
   1c730:	sub	sp, sp, #8
   1c734:	str	r0, [sp, #4]
   1c738:	str	r1, [sp]
   1c73c:	ldr	r1, [sp, #4]
   1c740:	ldr	r2, [sp]
   1c744:	movw	r0, #0
   1c748:	bl	1c55c <__assert_fail@plt+0xb080>
   1c74c:	mov	sp, fp
   1c750:	pop	{fp, pc}
   1c754:	push	{fp, lr}
   1c758:	mov	fp, sp
   1c75c:	sub	sp, sp, #8
   1c760:	str	r0, [sp, #4]
   1c764:	str	r1, [sp]
   1c768:	ldr	r1, [sp, #4]
   1c76c:	ldr	r2, [sp]
   1c770:	movw	r0, #0
   1c774:	bl	1c6f4 <__assert_fail@plt+0xb218>
   1c778:	mov	sp, fp
   1c77c:	pop	{fp, pc}
   1c780:	push	{fp, lr}
   1c784:	mov	fp, sp
   1c788:	sub	sp, sp, #8
   1c78c:	str	r0, [sp, #4]
   1c790:	str	r1, [sp]
   1c794:	ldr	r0, [sp, #4]
   1c798:	ldr	r1, [sp]
   1c79c:	movw	r2, #1
   1c7a0:	bl	1c7ac <__assert_fail@plt+0xb2d0>
   1c7a4:	mov	sp, fp
   1c7a8:	pop	{fp, pc}
   1c7ac:	push	{fp, lr}
   1c7b0:	mov	fp, sp
   1c7b4:	sub	sp, sp, #16
   1c7b8:	str	r0, [fp, #-4]
   1c7bc:	str	r1, [sp, #8]
   1c7c0:	str	r2, [sp, #4]
   1c7c4:	ldr	r0, [sp, #8]
   1c7c8:	ldr	r0, [r0]
   1c7cc:	str	r0, [sp]
   1c7d0:	ldr	r0, [fp, #-4]
   1c7d4:	movw	r1, #0
   1c7d8:	cmp	r0, r1
   1c7dc:	bne	1c828 <__assert_fail@plt+0xb34c>
   1c7e0:	ldr	r0, [sp]
   1c7e4:	cmp	r0, #0
   1c7e8:	bne	1c824 <__assert_fail@plt+0xb348>
   1c7ec:	ldr	r0, [sp, #4]
   1c7f0:	movw	r1, #64	; 0x40
   1c7f4:	udiv	r0, r1, r0
   1c7f8:	str	r0, [sp]
   1c7fc:	ldr	r0, [sp]
   1c800:	cmp	r0, #0
   1c804:	movw	r0, #0
   1c808:	movne	r0, #1
   1c80c:	mvn	r1, #0
   1c810:	eor	r0, r0, r1
   1c814:	and	r0, r0, #1
   1c818:	ldr	r1, [sp]
   1c81c:	add	r0, r1, r0
   1c820:	str	r0, [sp]
   1c824:	b	1c858 <__assert_fail@plt+0xb37c>
   1c828:	ldr	r0, [sp]
   1c82c:	ldr	r1, [sp]
   1c830:	lsr	r1, r1, #1
   1c834:	add	r1, r1, #1
   1c838:	adds	r0, r0, r1
   1c83c:	mov	r1, #0
   1c840:	adc	r1, r1, #0
   1c844:	str	r0, [sp]
   1c848:	tst	r1, #1
   1c84c:	beq	1c854 <__assert_fail@plt+0xb378>
   1c850:	bl	1f3ac <__assert_fail@plt+0xded0>
   1c854:	b	1c858 <__assert_fail@plt+0xb37c>
   1c858:	ldr	r0, [fp, #-4]
   1c85c:	ldr	r1, [sp]
   1c860:	ldr	r2, [sp, #4]
   1c864:	bl	1c55c <__assert_fail@plt+0xb080>
   1c868:	str	r0, [fp, #-4]
   1c86c:	ldr	r0, [sp]
   1c870:	ldr	r1, [sp, #8]
   1c874:	str	r0, [r1]
   1c878:	ldr	r0, [fp, #-4]
   1c87c:	mov	sp, fp
   1c880:	pop	{fp, pc}
   1c884:	push	{fp, lr}
   1c888:	mov	fp, sp
   1c88c:	sub	sp, sp, #376	; 0x178
   1c890:	ldr	ip, [fp, #8]
   1c894:	str	r0, [fp, #-4]
   1c898:	str	r1, [fp, #-8]
   1c89c:	str	r2, [fp, #-12]
   1c8a0:	str	r3, [fp, #-16]
   1c8a4:	ldr	r0, [fp, #-8]
   1c8a8:	ldr	r0, [r0]
   1c8ac:	str	r0, [fp, #-20]	; 0xffffffec
   1c8b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c8b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c8b8:	asr	r1, r1, #1
   1c8bc:	add	r1, r0, r1
   1c8c0:	mov	r2, #1
   1c8c4:	cmp	r1, r0
   1c8c8:	movwvc	r2, #0
   1c8cc:	str	r1, [fp, #-24]	; 0xffffffe8
   1c8d0:	tst	r2, #1
   1c8d4:	str	ip, [fp, #-36]	; 0xffffffdc
   1c8d8:	beq	1c8e4 <__assert_fail@plt+0xb408>
   1c8dc:	ldr	r0, [pc, #4044]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1c8e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c8e4:	ldr	r0, [fp, #-16]
   1c8e8:	movw	r1, #0
   1c8ec:	cmp	r1, r0
   1c8f0:	bgt	1c90c <__assert_fail@plt+0xb430>
   1c8f4:	ldr	r0, [fp, #-16]
   1c8f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8fc:	cmp	r0, r1
   1c900:	bge	1c90c <__assert_fail@plt+0xb430>
   1c904:	ldr	r0, [fp, #-16]
   1c908:	str	r0, [fp, #-24]	; 0xffffffe8
   1c90c:	b	1cce4 <__assert_fail@plt+0xb808>
   1c910:	b	1c914 <__assert_fail@plt+0xb438>
   1c914:	ldr	r0, [fp, #8]
   1c918:	cmp	r0, #0
   1c91c:	bge	1ca30 <__assert_fail@plt+0xb554>
   1c920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c924:	cmp	r0, #0
   1c928:	bge	1c9b4 <__assert_fail@plt+0xb4d8>
   1c92c:	b	1c930 <__assert_fail@plt+0xb454>
   1c930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c934:	ldr	r1, [fp, #8]
   1c938:	movw	r2, #127	; 0x7f
   1c93c:	sdiv	r1, r2, r1
   1c940:	cmp	r0, r1
   1c944:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1c948:	b	1cae8 <__assert_fail@plt+0xb60c>
   1c94c:	b	1c950 <__assert_fail@plt+0xb474>
   1c950:	ldr	r0, [pc, #4076]	; 1d944 <__assert_fail@plt+0xc468>
   1c954:	ldr	r1, [fp, #8]
   1c958:	cmp	r1, r0
   1c95c:	blt	1c974 <__assert_fail@plt+0xb498>
   1c960:	b	1c980 <__assert_fail@plt+0xb4a4>
   1c964:	ldr	r0, [fp, #8]
   1c968:	movw	r1, #0
   1c96c:	cmp	r1, r0
   1c970:	bge	1c980 <__assert_fail@plt+0xb4a4>
   1c974:	movw	r0, #0
   1c978:	str	r0, [fp, #-40]	; 0xffffffd8
   1c97c:	b	1c998 <__assert_fail@plt+0xb4bc>
   1c980:	ldr	r0, [fp, #8]
   1c984:	movw	r1, #0
   1c988:	sub	r0, r1, r0
   1c98c:	movw	r1, #127	; 0x7f
   1c990:	sdiv	r0, r1, r0
   1c994:	str	r0, [fp, #-40]	; 0xffffffd8
   1c998:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c99c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9a0:	mvn	r2, #0
   1c9a4:	sub	r1, r2, r1
   1c9a8:	cmp	r0, r1
   1c9ac:	ble	1cad0 <__assert_fail@plt+0xb5f4>
   1c9b0:	b	1cae8 <__assert_fail@plt+0xb60c>
   1c9b4:	b	1c9b8 <__assert_fail@plt+0xb4dc>
   1c9b8:	b	1ca14 <__assert_fail@plt+0xb538>
   1c9bc:	b	1ca14 <__assert_fail@plt+0xb538>
   1c9c0:	ldr	r0, [fp, #8]
   1c9c4:	cmn	r0, #1
   1c9c8:	bne	1ca14 <__assert_fail@plt+0xb538>
   1c9cc:	b	1c9d0 <__assert_fail@plt+0xb4f4>
   1c9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9d4:	mvn	r1, #127	; 0x7f
   1c9d8:	add	r0, r0, r1
   1c9dc:	movw	r1, #0
   1c9e0:	cmp	r1, r0
   1c9e4:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1c9e8:	b	1cae8 <__assert_fail@plt+0xb60c>
   1c9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9f0:	movw	r1, #0
   1c9f4:	cmp	r1, r0
   1c9f8:	bge	1cae8 <__assert_fail@plt+0xb60c>
   1c9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca00:	sub	r0, r0, #1
   1ca04:	movw	r1, #127	; 0x7f
   1ca08:	cmp	r1, r0
   1ca0c:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1ca10:	b	1cae8 <__assert_fail@plt+0xb60c>
   1ca14:	ldr	r0, [fp, #8]
   1ca18:	mvn	r1, #127	; 0x7f
   1ca1c:	sdiv	r0, r1, r0
   1ca20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca24:	cmp	r0, r1
   1ca28:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1ca2c:	b	1cae8 <__assert_fail@plt+0xb60c>
   1ca30:	ldr	r0, [fp, #8]
   1ca34:	cmp	r0, #0
   1ca38:	bne	1ca40 <__assert_fail@plt+0xb564>
   1ca3c:	b	1cae8 <__assert_fail@plt+0xb60c>
   1ca40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca44:	cmp	r0, #0
   1ca48:	bge	1cab8 <__assert_fail@plt+0xb5dc>
   1ca4c:	b	1ca50 <__assert_fail@plt+0xb574>
   1ca50:	b	1ca9c <__assert_fail@plt+0xb5c0>
   1ca54:	b	1ca9c <__assert_fail@plt+0xb5c0>
   1ca58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca5c:	cmn	r0, #1
   1ca60:	bne	1ca9c <__assert_fail@plt+0xb5c0>
   1ca64:	b	1ca68 <__assert_fail@plt+0xb58c>
   1ca68:	ldr	r0, [fp, #8]
   1ca6c:	mvn	r1, #127	; 0x7f
   1ca70:	add	r0, r0, r1
   1ca74:	movw	r1, #0
   1ca78:	cmp	r1, r0
   1ca7c:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1ca80:	b	1cae8 <__assert_fail@plt+0xb60c>
   1ca84:	ldr	r0, [fp, #8]
   1ca88:	sub	r0, r0, #1
   1ca8c:	movw	r1, #127	; 0x7f
   1ca90:	cmp	r1, r0
   1ca94:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1ca98:	b	1cae8 <__assert_fail@plt+0xb60c>
   1ca9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caa0:	mvn	r1, #127	; 0x7f
   1caa4:	sdiv	r0, r1, r0
   1caa8:	ldr	r1, [fp, #8]
   1caac:	cmp	r0, r1
   1cab0:	blt	1cad0 <__assert_fail@plt+0xb5f4>
   1cab4:	b	1cae8 <__assert_fail@plt+0xb60c>
   1cab8:	ldr	r0, [fp, #8]
   1cabc:	movw	r1, #127	; 0x7f
   1cac0:	sdiv	r0, r1, r0
   1cac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cac8:	cmp	r0, r1
   1cacc:	bge	1cae8 <__assert_fail@plt+0xb60c>
   1cad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cad4:	ldr	r1, [fp, #8]
   1cad8:	mul	r0, r0, r1
   1cadc:	sxtb	r0, r0
   1cae0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cae4:	b	1dcfc <__assert_fail@plt+0xc820>
   1cae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caec:	ldr	r1, [fp, #8]
   1caf0:	mul	r0, r0, r1
   1caf4:	sxtb	r0, r0
   1caf8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cafc:	b	1dd0c <__assert_fail@plt+0xc830>
   1cb00:	ldr	r0, [fp, #8]
   1cb04:	cmp	r0, #0
   1cb08:	bge	1cc18 <__assert_fail@plt+0xb73c>
   1cb0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb10:	cmp	r0, #0
   1cb14:	bge	1cba0 <__assert_fail@plt+0xb6c4>
   1cb18:	b	1cb1c <__assert_fail@plt+0xb640>
   1cb1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb20:	ldr	r1, [fp, #8]
   1cb24:	movw	r2, #255	; 0xff
   1cb28:	sdiv	r1, r2, r1
   1cb2c:	cmp	r0, r1
   1cb30:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cb34:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cb38:	b	1cb3c <__assert_fail@plt+0xb660>
   1cb3c:	ldr	r0, [pc, #3584]	; 1d944 <__assert_fail@plt+0xc468>
   1cb40:	ldr	r1, [fp, #8]
   1cb44:	cmp	r1, r0
   1cb48:	blt	1cb60 <__assert_fail@plt+0xb684>
   1cb4c:	b	1cb6c <__assert_fail@plt+0xb690>
   1cb50:	ldr	r0, [fp, #8]
   1cb54:	movw	r1, #0
   1cb58:	cmp	r1, r0
   1cb5c:	bge	1cb6c <__assert_fail@plt+0xb690>
   1cb60:	movw	r0, #0
   1cb64:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb68:	b	1cb84 <__assert_fail@plt+0xb6a8>
   1cb6c:	ldr	r0, [fp, #8]
   1cb70:	movw	r1, #0
   1cb74:	sub	r0, r1, r0
   1cb78:	movw	r1, #255	; 0xff
   1cb7c:	sdiv	r0, r1, r0
   1cb80:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cb88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb8c:	mvn	r2, #0
   1cb90:	sub	r1, r2, r1
   1cb94:	cmp	r0, r1
   1cb98:	ble	1ccb4 <__assert_fail@plt+0xb7d8>
   1cb9c:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cba0:	b	1cba4 <__assert_fail@plt+0xb6c8>
   1cba4:	b	1cbfc <__assert_fail@plt+0xb720>
   1cba8:	b	1cbfc <__assert_fail@plt+0xb720>
   1cbac:	ldr	r0, [fp, #8]
   1cbb0:	cmn	r0, #1
   1cbb4:	bne	1cbfc <__assert_fail@plt+0xb720>
   1cbb8:	b	1cbbc <__assert_fail@plt+0xb6e0>
   1cbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbc0:	add	r0, r0, #0
   1cbc4:	movw	r1, #0
   1cbc8:	cmp	r1, r0
   1cbcc:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cbd0:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbd8:	movw	r1, #0
   1cbdc:	cmp	r1, r0
   1cbe0:	bge	1cccc <__assert_fail@plt+0xb7f0>
   1cbe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbe8:	sub	r0, r0, #1
   1cbec:	mvn	r1, #0
   1cbf0:	cmp	r1, r0
   1cbf4:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cbf8:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cbfc:	ldr	r0, [fp, #8]
   1cc00:	movw	r1, #0
   1cc04:	sdiv	r0, r1, r0
   1cc08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc0c:	cmp	r0, r1
   1cc10:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cc14:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cc18:	ldr	r0, [fp, #8]
   1cc1c:	cmp	r0, #0
   1cc20:	bne	1cc28 <__assert_fail@plt+0xb74c>
   1cc24:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc2c:	cmp	r0, #0
   1cc30:	bge	1cc9c <__assert_fail@plt+0xb7c0>
   1cc34:	b	1cc38 <__assert_fail@plt+0xb75c>
   1cc38:	b	1cc80 <__assert_fail@plt+0xb7a4>
   1cc3c:	b	1cc80 <__assert_fail@plt+0xb7a4>
   1cc40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc44:	cmn	r0, #1
   1cc48:	bne	1cc80 <__assert_fail@plt+0xb7a4>
   1cc4c:	b	1cc50 <__assert_fail@plt+0xb774>
   1cc50:	ldr	r0, [fp, #8]
   1cc54:	add	r0, r0, #0
   1cc58:	movw	r1, #0
   1cc5c:	cmp	r1, r0
   1cc60:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cc64:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cc68:	ldr	r0, [fp, #8]
   1cc6c:	sub	r0, r0, #1
   1cc70:	mvn	r1, #0
   1cc74:	cmp	r1, r0
   1cc78:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cc7c:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cc80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc84:	movw	r1, #0
   1cc88:	sdiv	r0, r1, r0
   1cc8c:	ldr	r1, [fp, #8]
   1cc90:	cmp	r0, r1
   1cc94:	blt	1ccb4 <__assert_fail@plt+0xb7d8>
   1cc98:	b	1cccc <__assert_fail@plt+0xb7f0>
   1cc9c:	ldr	r0, [fp, #8]
   1cca0:	movw	r1, #255	; 0xff
   1cca4:	sdiv	r0, r1, r0
   1cca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccac:	cmp	r0, r1
   1ccb0:	bge	1cccc <__assert_fail@plt+0xb7f0>
   1ccb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccb8:	ldr	r1, [fp, #8]
   1ccbc:	mul	r0, r0, r1
   1ccc0:	and	r0, r0, #255	; 0xff
   1ccc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ccc8:	b	1dcfc <__assert_fail@plt+0xc820>
   1cccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccd0:	ldr	r1, [fp, #8]
   1ccd4:	mul	r0, r0, r1
   1ccd8:	and	r0, r0, #255	; 0xff
   1ccdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1cce0:	b	1dd0c <__assert_fail@plt+0xc830>
   1cce4:	b	1d0bc <__assert_fail@plt+0xbbe0>
   1cce8:	b	1ccec <__assert_fail@plt+0xb810>
   1ccec:	ldr	r0, [fp, #8]
   1ccf0:	cmp	r0, #0
   1ccf4:	bge	1ce08 <__assert_fail@plt+0xb92c>
   1ccf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccfc:	cmp	r0, #0
   1cd00:	bge	1cd8c <__assert_fail@plt+0xb8b0>
   1cd04:	b	1cd08 <__assert_fail@plt+0xb82c>
   1cd08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd0c:	ldr	r1, [fp, #8]
   1cd10:	movw	r2, #32767	; 0x7fff
   1cd14:	sdiv	r1, r2, r1
   1cd18:	cmp	r0, r1
   1cd1c:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1cd20:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1cd24:	b	1cd28 <__assert_fail@plt+0xb84c>
   1cd28:	ldr	r0, [pc, #3092]	; 1d944 <__assert_fail@plt+0xc468>
   1cd2c:	ldr	r1, [fp, #8]
   1cd30:	cmp	r1, r0
   1cd34:	blt	1cd4c <__assert_fail@plt+0xb870>
   1cd38:	b	1cd58 <__assert_fail@plt+0xb87c>
   1cd3c:	ldr	r0, [fp, #8]
   1cd40:	movw	r1, #0
   1cd44:	cmp	r1, r0
   1cd48:	bge	1cd58 <__assert_fail@plt+0xb87c>
   1cd4c:	movw	r0, #0
   1cd50:	str	r0, [fp, #-48]	; 0xffffffd0
   1cd54:	b	1cd70 <__assert_fail@plt+0xb894>
   1cd58:	ldr	r0, [fp, #8]
   1cd5c:	movw	r1, #0
   1cd60:	sub	r0, r1, r0
   1cd64:	movw	r1, #32767	; 0x7fff
   1cd68:	sdiv	r0, r1, r0
   1cd6c:	str	r0, [fp, #-48]	; 0xffffffd0
   1cd70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cd74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd78:	mvn	r2, #0
   1cd7c:	sub	r1, r2, r1
   1cd80:	cmp	r0, r1
   1cd84:	ble	1cea8 <__assert_fail@plt+0xb9cc>
   1cd88:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1cd8c:	b	1cd90 <__assert_fail@plt+0xb8b4>
   1cd90:	b	1cdec <__assert_fail@plt+0xb910>
   1cd94:	b	1cdec <__assert_fail@plt+0xb910>
   1cd98:	ldr	r0, [fp, #8]
   1cd9c:	cmn	r0, #1
   1cda0:	bne	1cdec <__assert_fail@plt+0xb910>
   1cda4:	b	1cda8 <__assert_fail@plt+0xb8cc>
   1cda8:	ldr	r0, [pc, #3928]	; 1dd08 <__assert_fail@plt+0xc82c>
   1cdac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdb0:	add	r0, r1, r0
   1cdb4:	movw	r1, #0
   1cdb8:	cmp	r1, r0
   1cdbc:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1cdc0:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1cdc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdc8:	movw	r1, #0
   1cdcc:	cmp	r1, r0
   1cdd0:	bge	1cec0 <__assert_fail@plt+0xb9e4>
   1cdd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdd8:	sub	r0, r0, #1
   1cddc:	movw	r1, #32767	; 0x7fff
   1cde0:	cmp	r1, r0
   1cde4:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1cde8:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1cdec:	ldr	r0, [pc, #3860]	; 1dd08 <__assert_fail@plt+0xc82c>
   1cdf0:	ldr	r1, [fp, #8]
   1cdf4:	sdiv	r0, r0, r1
   1cdf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdfc:	cmp	r0, r1
   1ce00:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1ce04:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1ce08:	ldr	r0, [fp, #8]
   1ce0c:	cmp	r0, #0
   1ce10:	bne	1ce18 <__assert_fail@plt+0xb93c>
   1ce14:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1ce18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce1c:	cmp	r0, #0
   1ce20:	bge	1ce90 <__assert_fail@plt+0xb9b4>
   1ce24:	b	1ce28 <__assert_fail@plt+0xb94c>
   1ce28:	b	1ce74 <__assert_fail@plt+0xb998>
   1ce2c:	b	1ce74 <__assert_fail@plt+0xb998>
   1ce30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce34:	cmn	r0, #1
   1ce38:	bne	1ce74 <__assert_fail@plt+0xb998>
   1ce3c:	b	1ce40 <__assert_fail@plt+0xb964>
   1ce40:	ldr	r0, [pc, #3776]	; 1dd08 <__assert_fail@plt+0xc82c>
   1ce44:	ldr	r1, [fp, #8]
   1ce48:	add	r0, r1, r0
   1ce4c:	movw	r1, #0
   1ce50:	cmp	r1, r0
   1ce54:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1ce58:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1ce5c:	ldr	r0, [fp, #8]
   1ce60:	sub	r0, r0, #1
   1ce64:	movw	r1, #32767	; 0x7fff
   1ce68:	cmp	r1, r0
   1ce6c:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1ce70:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1ce74:	ldr	r0, [pc, #3724]	; 1dd08 <__assert_fail@plt+0xc82c>
   1ce78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce7c:	sdiv	r0, r0, r1
   1ce80:	ldr	r1, [fp, #8]
   1ce84:	cmp	r0, r1
   1ce88:	blt	1cea8 <__assert_fail@plt+0xb9cc>
   1ce8c:	b	1cec0 <__assert_fail@plt+0xb9e4>
   1ce90:	ldr	r0, [fp, #8]
   1ce94:	movw	r1, #32767	; 0x7fff
   1ce98:	sdiv	r0, r1, r0
   1ce9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cea0:	cmp	r0, r1
   1cea4:	bge	1cec0 <__assert_fail@plt+0xb9e4>
   1cea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceac:	ldr	r1, [fp, #8]
   1ceb0:	mul	r0, r0, r1
   1ceb4:	sxth	r0, r0
   1ceb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cebc:	b	1dcfc <__assert_fail@plt+0xc820>
   1cec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cec4:	ldr	r1, [fp, #8]
   1cec8:	mul	r0, r0, r1
   1cecc:	sxth	r0, r0
   1ced0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ced4:	b	1dd0c <__assert_fail@plt+0xc830>
   1ced8:	ldr	r0, [fp, #8]
   1cedc:	cmp	r0, #0
   1cee0:	bge	1cff0 <__assert_fail@plt+0xbb14>
   1cee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cee8:	cmp	r0, #0
   1ceec:	bge	1cf78 <__assert_fail@plt+0xba9c>
   1cef0:	b	1cef4 <__assert_fail@plt+0xba18>
   1cef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cef8:	ldr	r1, [fp, #8]
   1cefc:	movw	r2, #65535	; 0xffff
   1cf00:	sdiv	r1, r2, r1
   1cf04:	cmp	r0, r1
   1cf08:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1cf0c:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1cf10:	b	1cf14 <__assert_fail@plt+0xba38>
   1cf14:	ldr	r0, [pc, #2600]	; 1d944 <__assert_fail@plt+0xc468>
   1cf18:	ldr	r1, [fp, #8]
   1cf1c:	cmp	r1, r0
   1cf20:	blt	1cf38 <__assert_fail@plt+0xba5c>
   1cf24:	b	1cf44 <__assert_fail@plt+0xba68>
   1cf28:	ldr	r0, [fp, #8]
   1cf2c:	movw	r1, #0
   1cf30:	cmp	r1, r0
   1cf34:	bge	1cf44 <__assert_fail@plt+0xba68>
   1cf38:	movw	r0, #0
   1cf3c:	str	r0, [fp, #-52]	; 0xffffffcc
   1cf40:	b	1cf5c <__assert_fail@plt+0xba80>
   1cf44:	ldr	r0, [fp, #8]
   1cf48:	movw	r1, #0
   1cf4c:	sub	r0, r1, r0
   1cf50:	movw	r1, #65535	; 0xffff
   1cf54:	sdiv	r0, r1, r0
   1cf58:	str	r0, [fp, #-52]	; 0xffffffcc
   1cf5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cf60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf64:	mvn	r2, #0
   1cf68:	sub	r1, r2, r1
   1cf6c:	cmp	r0, r1
   1cf70:	ble	1d08c <__assert_fail@plt+0xbbb0>
   1cf74:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1cf78:	b	1cf7c <__assert_fail@plt+0xbaa0>
   1cf7c:	b	1cfd4 <__assert_fail@plt+0xbaf8>
   1cf80:	b	1cfd4 <__assert_fail@plt+0xbaf8>
   1cf84:	ldr	r0, [fp, #8]
   1cf88:	cmn	r0, #1
   1cf8c:	bne	1cfd4 <__assert_fail@plt+0xbaf8>
   1cf90:	b	1cf94 <__assert_fail@plt+0xbab8>
   1cf94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf98:	add	r0, r0, #0
   1cf9c:	movw	r1, #0
   1cfa0:	cmp	r1, r0
   1cfa4:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1cfa8:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1cfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfb0:	movw	r1, #0
   1cfb4:	cmp	r1, r0
   1cfb8:	bge	1d0a4 <__assert_fail@plt+0xbbc8>
   1cfbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfc0:	sub	r0, r0, #1
   1cfc4:	mvn	r1, #0
   1cfc8:	cmp	r1, r0
   1cfcc:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1cfd0:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1cfd4:	ldr	r0, [fp, #8]
   1cfd8:	movw	r1, #0
   1cfdc:	sdiv	r0, r1, r0
   1cfe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfe4:	cmp	r0, r1
   1cfe8:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1cfec:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1cff0:	ldr	r0, [fp, #8]
   1cff4:	cmp	r0, #0
   1cff8:	bne	1d000 <__assert_fail@plt+0xbb24>
   1cffc:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1d000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d004:	cmp	r0, #0
   1d008:	bge	1d074 <__assert_fail@plt+0xbb98>
   1d00c:	b	1d010 <__assert_fail@plt+0xbb34>
   1d010:	b	1d058 <__assert_fail@plt+0xbb7c>
   1d014:	b	1d058 <__assert_fail@plt+0xbb7c>
   1d018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d01c:	cmn	r0, #1
   1d020:	bne	1d058 <__assert_fail@plt+0xbb7c>
   1d024:	b	1d028 <__assert_fail@plt+0xbb4c>
   1d028:	ldr	r0, [fp, #8]
   1d02c:	add	r0, r0, #0
   1d030:	movw	r1, #0
   1d034:	cmp	r1, r0
   1d038:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1d03c:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1d040:	ldr	r0, [fp, #8]
   1d044:	sub	r0, r0, #1
   1d048:	mvn	r1, #0
   1d04c:	cmp	r1, r0
   1d050:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1d054:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1d058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d05c:	movw	r1, #0
   1d060:	sdiv	r0, r1, r0
   1d064:	ldr	r1, [fp, #8]
   1d068:	cmp	r0, r1
   1d06c:	blt	1d08c <__assert_fail@plt+0xbbb0>
   1d070:	b	1d0a4 <__assert_fail@plt+0xbbc8>
   1d074:	ldr	r0, [fp, #8]
   1d078:	movw	r1, #65535	; 0xffff
   1d07c:	sdiv	r0, r1, r0
   1d080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d084:	cmp	r0, r1
   1d088:	bge	1d0a4 <__assert_fail@plt+0xbbc8>
   1d08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d090:	ldr	r1, [fp, #8]
   1d094:	mul	r0, r0, r1
   1d098:	uxth	r0, r0
   1d09c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0a0:	b	1dcfc <__assert_fail@plt+0xc820>
   1d0a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0a8:	ldr	r1, [fp, #8]
   1d0ac:	mul	r0, r0, r1
   1d0b0:	uxth	r0, r0
   1d0b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0b8:	b	1dd0c <__assert_fail@plt+0xc830>
   1d0bc:	b	1d0c0 <__assert_fail@plt+0xbbe4>
   1d0c0:	b	1d0c4 <__assert_fail@plt+0xbbe8>
   1d0c4:	ldr	r0, [fp, #8]
   1d0c8:	cmp	r0, #0
   1d0cc:	bge	1d1d0 <__assert_fail@plt+0xbcf4>
   1d0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0d4:	cmp	r0, #0
   1d0d8:	bge	1d164 <__assert_fail@plt+0xbc88>
   1d0dc:	b	1d0e0 <__assert_fail@plt+0xbc04>
   1d0e0:	ldr	r0, [pc, #1992]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d0e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0e8:	ldr	r2, [fp, #8]
   1d0ec:	sdiv	r0, r0, r2
   1d0f0:	cmp	r1, r0
   1d0f4:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d0f8:	b	1d274 <__assert_fail@plt+0xbd98>
   1d0fc:	b	1d100 <__assert_fail@plt+0xbc24>
   1d100:	ldr	r0, [pc, #2108]	; 1d944 <__assert_fail@plt+0xc468>
   1d104:	ldr	r1, [fp, #8]
   1d108:	cmp	r1, r0
   1d10c:	blt	1d124 <__assert_fail@plt+0xbc48>
   1d110:	b	1d130 <__assert_fail@plt+0xbc54>
   1d114:	ldr	r0, [fp, #8]
   1d118:	movw	r1, #0
   1d11c:	cmp	r1, r0
   1d120:	bge	1d130 <__assert_fail@plt+0xbc54>
   1d124:	movw	r0, #0
   1d128:	str	r0, [fp, #-56]	; 0xffffffc8
   1d12c:	b	1d148 <__assert_fail@plt+0xbc6c>
   1d130:	ldr	r0, [pc, #1912]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d134:	ldr	r1, [fp, #8]
   1d138:	movw	r2, #0
   1d13c:	sub	r1, r2, r1
   1d140:	sdiv	r0, r0, r1
   1d144:	str	r0, [fp, #-56]	; 0xffffffc8
   1d148:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d14c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d150:	mvn	r2, #0
   1d154:	sub	r1, r2, r1
   1d158:	cmp	r0, r1
   1d15c:	ble	1d260 <__assert_fail@plt+0xbd84>
   1d160:	b	1d274 <__assert_fail@plt+0xbd98>
   1d164:	ldr	r0, [fp, #8]
   1d168:	cmn	r0, #1
   1d16c:	bne	1d1b4 <__assert_fail@plt+0xbcd8>
   1d170:	b	1d174 <__assert_fail@plt+0xbc98>
   1d174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d178:	add	r0, r0, #-2147483648	; 0x80000000
   1d17c:	movw	r1, #0
   1d180:	cmp	r1, r0
   1d184:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d188:	b	1d274 <__assert_fail@plt+0xbd98>
   1d18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d190:	movw	r1, #0
   1d194:	cmp	r1, r0
   1d198:	bge	1d274 <__assert_fail@plt+0xbd98>
   1d19c:	ldr	r0, [pc, #1804]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d1a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1a4:	sub	r1, r1, #1
   1d1a8:	cmp	r0, r1
   1d1ac:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d1b0:	b	1d274 <__assert_fail@plt+0xbd98>
   1d1b4:	ldr	r0, [pc, #4072]	; 1e1a4 <__assert_fail@plt+0xccc8>
   1d1b8:	ldr	r1, [fp, #8]
   1d1bc:	sdiv	r0, r0, r1
   1d1c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1c4:	cmp	r0, r1
   1d1c8:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d1cc:	b	1d274 <__assert_fail@plt+0xbd98>
   1d1d0:	ldr	r0, [fp, #8]
   1d1d4:	cmp	r0, #0
   1d1d8:	bne	1d1e0 <__assert_fail@plt+0xbd04>
   1d1dc:	b	1d274 <__assert_fail@plt+0xbd98>
   1d1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1e4:	cmp	r0, #0
   1d1e8:	bge	1d248 <__assert_fail@plt+0xbd6c>
   1d1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f0:	cmn	r0, #1
   1d1f4:	bne	1d22c <__assert_fail@plt+0xbd50>
   1d1f8:	b	1d1fc <__assert_fail@plt+0xbd20>
   1d1fc:	ldr	r0, [fp, #8]
   1d200:	add	r0, r0, #-2147483648	; 0x80000000
   1d204:	movw	r1, #0
   1d208:	cmp	r1, r0
   1d20c:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d210:	b	1d274 <__assert_fail@plt+0xbd98>
   1d214:	ldr	r0, [pc, #1684]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d218:	ldr	r1, [fp, #8]
   1d21c:	sub	r1, r1, #1
   1d220:	cmp	r0, r1
   1d224:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d228:	b	1d274 <__assert_fail@plt+0xbd98>
   1d22c:	ldr	r0, [pc, #3952]	; 1e1a4 <__assert_fail@plt+0xccc8>
   1d230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d234:	sdiv	r0, r0, r1
   1d238:	ldr	r1, [fp, #8]
   1d23c:	cmp	r0, r1
   1d240:	blt	1d260 <__assert_fail@plt+0xbd84>
   1d244:	b	1d274 <__assert_fail@plt+0xbd98>
   1d248:	ldr	r0, [pc, #1632]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d24c:	ldr	r1, [fp, #8]
   1d250:	sdiv	r0, r0, r1
   1d254:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d258:	cmp	r0, r1
   1d25c:	bge	1d274 <__assert_fail@plt+0xbd98>
   1d260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d264:	ldr	r1, [fp, #8]
   1d268:	mul	r0, r0, r1
   1d26c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d270:	b	1dcfc <__assert_fail@plt+0xc820>
   1d274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d278:	ldr	r1, [fp, #8]
   1d27c:	mul	r0, r0, r1
   1d280:	str	r0, [fp, #-28]	; 0xffffffe4
   1d284:	b	1dd0c <__assert_fail@plt+0xc830>
   1d288:	ldr	r0, [fp, #8]
   1d28c:	cmp	r0, #0
   1d290:	bge	1d3a0 <__assert_fail@plt+0xbec4>
   1d294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d298:	cmp	r0, #0
   1d29c:	bge	1d328 <__assert_fail@plt+0xbe4c>
   1d2a0:	b	1d2c0 <__assert_fail@plt+0xbde4>
   1d2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2a8:	ldr	r1, [fp, #8]
   1d2ac:	mvn	r2, #0
   1d2b0:	udiv	r1, r2, r1
   1d2b4:	cmp	r0, r1
   1d2b8:	bcc	1d43c <__assert_fail@plt+0xbf60>
   1d2bc:	b	1d450 <__assert_fail@plt+0xbf74>
   1d2c0:	b	1d2c4 <__assert_fail@plt+0xbde8>
   1d2c4:	ldr	r0, [pc, #1656]	; 1d944 <__assert_fail@plt+0xc468>
   1d2c8:	ldr	r1, [fp, #8]
   1d2cc:	cmp	r1, r0
   1d2d0:	blt	1d2e8 <__assert_fail@plt+0xbe0c>
   1d2d4:	b	1d2f4 <__assert_fail@plt+0xbe18>
   1d2d8:	ldr	r0, [fp, #8]
   1d2dc:	movw	r1, #0
   1d2e0:	cmp	r1, r0
   1d2e4:	bge	1d2f4 <__assert_fail@plt+0xbe18>
   1d2e8:	movw	r0, #1
   1d2ec:	str	r0, [fp, #-60]	; 0xffffffc4
   1d2f0:	b	1d30c <__assert_fail@plt+0xbe30>
   1d2f4:	ldr	r0, [fp, #8]
   1d2f8:	movw	r1, #0
   1d2fc:	sub	r0, r1, r0
   1d300:	mvn	r1, #0
   1d304:	udiv	r0, r1, r0
   1d308:	str	r0, [fp, #-60]	; 0xffffffc4
   1d30c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d310:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d314:	mvn	r2, #0
   1d318:	sub	r1, r2, r1
   1d31c:	cmp	r0, r1
   1d320:	bls	1d43c <__assert_fail@plt+0xbf60>
   1d324:	b	1d450 <__assert_fail@plt+0xbf74>
   1d328:	b	1d32c <__assert_fail@plt+0xbe50>
   1d32c:	b	1d384 <__assert_fail@plt+0xbea8>
   1d330:	b	1d384 <__assert_fail@plt+0xbea8>
   1d334:	ldr	r0, [fp, #8]
   1d338:	cmn	r0, #1
   1d33c:	bne	1d384 <__assert_fail@plt+0xbea8>
   1d340:	b	1d344 <__assert_fail@plt+0xbe68>
   1d344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d348:	add	r0, r0, #0
   1d34c:	movw	r1, #0
   1d350:	cmp	r1, r0
   1d354:	blt	1d43c <__assert_fail@plt+0xbf60>
   1d358:	b	1d450 <__assert_fail@plt+0xbf74>
   1d35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d360:	movw	r1, #0
   1d364:	cmp	r1, r0
   1d368:	bge	1d450 <__assert_fail@plt+0xbf74>
   1d36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d370:	sub	r0, r0, #1
   1d374:	mvn	r1, #0
   1d378:	cmp	r1, r0
   1d37c:	blt	1d43c <__assert_fail@plt+0xbf60>
   1d380:	b	1d450 <__assert_fail@plt+0xbf74>
   1d384:	ldr	r0, [fp, #8]
   1d388:	movw	r1, #0
   1d38c:	sdiv	r0, r1, r0
   1d390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d394:	cmp	r0, r1
   1d398:	blt	1d43c <__assert_fail@plt+0xbf60>
   1d39c:	b	1d450 <__assert_fail@plt+0xbf74>
   1d3a0:	ldr	r0, [fp, #8]
   1d3a4:	cmp	r0, #0
   1d3a8:	bne	1d3b0 <__assert_fail@plt+0xbed4>
   1d3ac:	b	1d450 <__assert_fail@plt+0xbf74>
   1d3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3b4:	cmp	r0, #0
   1d3b8:	bge	1d424 <__assert_fail@plt+0xbf48>
   1d3bc:	b	1d3c0 <__assert_fail@plt+0xbee4>
   1d3c0:	b	1d408 <__assert_fail@plt+0xbf2c>
   1d3c4:	b	1d408 <__assert_fail@plt+0xbf2c>
   1d3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3cc:	cmn	r0, #1
   1d3d0:	bne	1d408 <__assert_fail@plt+0xbf2c>
   1d3d4:	b	1d3d8 <__assert_fail@plt+0xbefc>
   1d3d8:	ldr	r0, [fp, #8]
   1d3dc:	add	r0, r0, #0
   1d3e0:	movw	r1, #0
   1d3e4:	cmp	r1, r0
   1d3e8:	blt	1d43c <__assert_fail@plt+0xbf60>
   1d3ec:	b	1d450 <__assert_fail@plt+0xbf74>
   1d3f0:	ldr	r0, [fp, #8]
   1d3f4:	sub	r0, r0, #1
   1d3f8:	mvn	r1, #0
   1d3fc:	cmp	r1, r0
   1d400:	blt	1d43c <__assert_fail@plt+0xbf60>
   1d404:	b	1d450 <__assert_fail@plt+0xbf74>
   1d408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d40c:	movw	r1, #0
   1d410:	sdiv	r0, r1, r0
   1d414:	ldr	r1, [fp, #8]
   1d418:	cmp	r0, r1
   1d41c:	blt	1d43c <__assert_fail@plt+0xbf60>
   1d420:	b	1d450 <__assert_fail@plt+0xbf74>
   1d424:	ldr	r0, [fp, #8]
   1d428:	mvn	r1, #0
   1d42c:	udiv	r0, r1, r0
   1d430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d434:	cmp	r0, r1
   1d438:	bcs	1d450 <__assert_fail@plt+0xbf74>
   1d43c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d440:	ldr	r1, [fp, #8]
   1d444:	mul	r0, r0, r1
   1d448:	str	r0, [fp, #-28]	; 0xffffffe4
   1d44c:	b	1dcfc <__assert_fail@plt+0xc820>
   1d450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d454:	ldr	r1, [fp, #8]
   1d458:	mul	r0, r0, r1
   1d45c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d460:	b	1dd0c <__assert_fail@plt+0xc830>
   1d464:	b	1d468 <__assert_fail@plt+0xbf8c>
   1d468:	b	1d46c <__assert_fail@plt+0xbf90>
   1d46c:	ldr	r0, [fp, #8]
   1d470:	cmp	r0, #0
   1d474:	bge	1d578 <__assert_fail@plt+0xc09c>
   1d478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d47c:	cmp	r0, #0
   1d480:	bge	1d50c <__assert_fail@plt+0xc030>
   1d484:	b	1d488 <__assert_fail@plt+0xbfac>
   1d488:	ldr	r0, [pc, #1056]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d48c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d490:	ldr	r2, [fp, #8]
   1d494:	sdiv	r0, r0, r2
   1d498:	cmp	r1, r0
   1d49c:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d4a0:	b	1d61c <__assert_fail@plt+0xc140>
   1d4a4:	b	1d4a8 <__assert_fail@plt+0xbfcc>
   1d4a8:	ldr	r0, [pc, #1172]	; 1d944 <__assert_fail@plt+0xc468>
   1d4ac:	ldr	r1, [fp, #8]
   1d4b0:	cmp	r1, r0
   1d4b4:	blt	1d4cc <__assert_fail@plt+0xbff0>
   1d4b8:	b	1d4d8 <__assert_fail@plt+0xbffc>
   1d4bc:	ldr	r0, [fp, #8]
   1d4c0:	movw	r1, #0
   1d4c4:	cmp	r1, r0
   1d4c8:	bge	1d4d8 <__assert_fail@plt+0xbffc>
   1d4cc:	movw	r0, #0
   1d4d0:	str	r0, [fp, #-64]	; 0xffffffc0
   1d4d4:	b	1d4f0 <__assert_fail@plt+0xc014>
   1d4d8:	ldr	r0, [pc, #976]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d4dc:	ldr	r1, [fp, #8]
   1d4e0:	movw	r2, #0
   1d4e4:	sub	r1, r2, r1
   1d4e8:	sdiv	r0, r0, r1
   1d4ec:	str	r0, [fp, #-64]	; 0xffffffc0
   1d4f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d4f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4f8:	mvn	r2, #0
   1d4fc:	sub	r1, r2, r1
   1d500:	cmp	r0, r1
   1d504:	ble	1d608 <__assert_fail@plt+0xc12c>
   1d508:	b	1d61c <__assert_fail@plt+0xc140>
   1d50c:	ldr	r0, [fp, #8]
   1d510:	cmn	r0, #1
   1d514:	bne	1d55c <__assert_fail@plt+0xc080>
   1d518:	b	1d51c <__assert_fail@plt+0xc040>
   1d51c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d520:	add	r0, r0, #-2147483648	; 0x80000000
   1d524:	movw	r1, #0
   1d528:	cmp	r1, r0
   1d52c:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d530:	b	1d61c <__assert_fail@plt+0xc140>
   1d534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d538:	movw	r1, #0
   1d53c:	cmp	r1, r0
   1d540:	bge	1d61c <__assert_fail@plt+0xc140>
   1d544:	ldr	r0, [pc, #868]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d54c:	sub	r1, r1, #1
   1d550:	cmp	r0, r1
   1d554:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d558:	b	1d61c <__assert_fail@plt+0xc140>
   1d55c:	ldr	r0, [pc, #3136]	; 1e1a4 <__assert_fail@plt+0xccc8>
   1d560:	ldr	r1, [fp, #8]
   1d564:	sdiv	r0, r0, r1
   1d568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d56c:	cmp	r0, r1
   1d570:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d574:	b	1d61c <__assert_fail@plt+0xc140>
   1d578:	ldr	r0, [fp, #8]
   1d57c:	cmp	r0, #0
   1d580:	bne	1d588 <__assert_fail@plt+0xc0ac>
   1d584:	b	1d61c <__assert_fail@plt+0xc140>
   1d588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d58c:	cmp	r0, #0
   1d590:	bge	1d5f0 <__assert_fail@plt+0xc114>
   1d594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d598:	cmn	r0, #1
   1d59c:	bne	1d5d4 <__assert_fail@plt+0xc0f8>
   1d5a0:	b	1d5a4 <__assert_fail@plt+0xc0c8>
   1d5a4:	ldr	r0, [fp, #8]
   1d5a8:	add	r0, r0, #-2147483648	; 0x80000000
   1d5ac:	movw	r1, #0
   1d5b0:	cmp	r1, r0
   1d5b4:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d5b8:	b	1d61c <__assert_fail@plt+0xc140>
   1d5bc:	ldr	r0, [pc, #748]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d5c0:	ldr	r1, [fp, #8]
   1d5c4:	sub	r1, r1, #1
   1d5c8:	cmp	r0, r1
   1d5cc:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d5d0:	b	1d61c <__assert_fail@plt+0xc140>
   1d5d4:	ldr	r0, [pc, #3016]	; 1e1a4 <__assert_fail@plt+0xccc8>
   1d5d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5dc:	sdiv	r0, r0, r1
   1d5e0:	ldr	r1, [fp, #8]
   1d5e4:	cmp	r0, r1
   1d5e8:	blt	1d608 <__assert_fail@plt+0xc12c>
   1d5ec:	b	1d61c <__assert_fail@plt+0xc140>
   1d5f0:	ldr	r0, [pc, #696]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1d5f4:	ldr	r1, [fp, #8]
   1d5f8:	sdiv	r0, r0, r1
   1d5fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d600:	cmp	r0, r1
   1d604:	bge	1d61c <__assert_fail@plt+0xc140>
   1d608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d60c:	ldr	r1, [fp, #8]
   1d610:	mul	r0, r0, r1
   1d614:	str	r0, [fp, #-28]	; 0xffffffe4
   1d618:	b	1dcfc <__assert_fail@plt+0xc820>
   1d61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d620:	ldr	r1, [fp, #8]
   1d624:	mul	r0, r0, r1
   1d628:	str	r0, [fp, #-28]	; 0xffffffe4
   1d62c:	b	1dd0c <__assert_fail@plt+0xc830>
   1d630:	ldr	r0, [fp, #8]
   1d634:	cmp	r0, #0
   1d638:	bge	1d748 <__assert_fail@plt+0xc26c>
   1d63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d640:	cmp	r0, #0
   1d644:	bge	1d6d0 <__assert_fail@plt+0xc1f4>
   1d648:	b	1d668 <__assert_fail@plt+0xc18c>
   1d64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d650:	ldr	r1, [fp, #8]
   1d654:	mvn	r2, #0
   1d658:	udiv	r1, r2, r1
   1d65c:	cmp	r0, r1
   1d660:	bcc	1d7e4 <__assert_fail@plt+0xc308>
   1d664:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d668:	b	1d66c <__assert_fail@plt+0xc190>
   1d66c:	ldr	r0, [pc, #720]	; 1d944 <__assert_fail@plt+0xc468>
   1d670:	ldr	r1, [fp, #8]
   1d674:	cmp	r1, r0
   1d678:	blt	1d690 <__assert_fail@plt+0xc1b4>
   1d67c:	b	1d69c <__assert_fail@plt+0xc1c0>
   1d680:	ldr	r0, [fp, #8]
   1d684:	movw	r1, #0
   1d688:	cmp	r1, r0
   1d68c:	bge	1d69c <__assert_fail@plt+0xc1c0>
   1d690:	movw	r0, #1
   1d694:	str	r0, [fp, #-68]	; 0xffffffbc
   1d698:	b	1d6b4 <__assert_fail@plt+0xc1d8>
   1d69c:	ldr	r0, [fp, #8]
   1d6a0:	movw	r1, #0
   1d6a4:	sub	r0, r1, r0
   1d6a8:	mvn	r1, #0
   1d6ac:	udiv	r0, r1, r0
   1d6b0:	str	r0, [fp, #-68]	; 0xffffffbc
   1d6b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1d6b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6bc:	mvn	r2, #0
   1d6c0:	sub	r1, r2, r1
   1d6c4:	cmp	r0, r1
   1d6c8:	bls	1d7e4 <__assert_fail@plt+0xc308>
   1d6cc:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d6d0:	b	1d6d4 <__assert_fail@plt+0xc1f8>
   1d6d4:	b	1d72c <__assert_fail@plt+0xc250>
   1d6d8:	b	1d72c <__assert_fail@plt+0xc250>
   1d6dc:	ldr	r0, [fp, #8]
   1d6e0:	cmn	r0, #1
   1d6e4:	bne	1d72c <__assert_fail@plt+0xc250>
   1d6e8:	b	1d6ec <__assert_fail@plt+0xc210>
   1d6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6f0:	add	r0, r0, #0
   1d6f4:	movw	r1, #0
   1d6f8:	cmp	r1, r0
   1d6fc:	blt	1d7e4 <__assert_fail@plt+0xc308>
   1d700:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d708:	movw	r1, #0
   1d70c:	cmp	r1, r0
   1d710:	bge	1d7f8 <__assert_fail@plt+0xc31c>
   1d714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d718:	sub	r0, r0, #1
   1d71c:	mvn	r1, #0
   1d720:	cmp	r1, r0
   1d724:	blt	1d7e4 <__assert_fail@plt+0xc308>
   1d728:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d72c:	ldr	r0, [fp, #8]
   1d730:	movw	r1, #0
   1d734:	sdiv	r0, r1, r0
   1d738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d73c:	cmp	r0, r1
   1d740:	blt	1d7e4 <__assert_fail@plt+0xc308>
   1d744:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d748:	ldr	r0, [fp, #8]
   1d74c:	cmp	r0, #0
   1d750:	bne	1d758 <__assert_fail@plt+0xc27c>
   1d754:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d75c:	cmp	r0, #0
   1d760:	bge	1d7cc <__assert_fail@plt+0xc2f0>
   1d764:	b	1d768 <__assert_fail@plt+0xc28c>
   1d768:	b	1d7b0 <__assert_fail@plt+0xc2d4>
   1d76c:	b	1d7b0 <__assert_fail@plt+0xc2d4>
   1d770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d774:	cmn	r0, #1
   1d778:	bne	1d7b0 <__assert_fail@plt+0xc2d4>
   1d77c:	b	1d780 <__assert_fail@plt+0xc2a4>
   1d780:	ldr	r0, [fp, #8]
   1d784:	add	r0, r0, #0
   1d788:	movw	r1, #0
   1d78c:	cmp	r1, r0
   1d790:	blt	1d7e4 <__assert_fail@plt+0xc308>
   1d794:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d798:	ldr	r0, [fp, #8]
   1d79c:	sub	r0, r0, #1
   1d7a0:	mvn	r1, #0
   1d7a4:	cmp	r1, r0
   1d7a8:	blt	1d7e4 <__assert_fail@plt+0xc308>
   1d7ac:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7b4:	movw	r1, #0
   1d7b8:	sdiv	r0, r1, r0
   1d7bc:	ldr	r1, [fp, #8]
   1d7c0:	cmp	r0, r1
   1d7c4:	blt	1d7e4 <__assert_fail@plt+0xc308>
   1d7c8:	b	1d7f8 <__assert_fail@plt+0xc31c>
   1d7cc:	ldr	r0, [fp, #8]
   1d7d0:	mvn	r1, #0
   1d7d4:	udiv	r0, r1, r0
   1d7d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d7dc:	cmp	r0, r1
   1d7e0:	bcs	1d7f8 <__assert_fail@plt+0xc31c>
   1d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e8:	ldr	r1, [fp, #8]
   1d7ec:	mul	r0, r0, r1
   1d7f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7f4:	b	1dcfc <__assert_fail@plt+0xc820>
   1d7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7fc:	ldr	r1, [fp, #8]
   1d800:	mul	r0, r0, r1
   1d804:	str	r0, [fp, #-28]	; 0xffffffe4
   1d808:	b	1dd0c <__assert_fail@plt+0xc830>
   1d80c:	b	1d810 <__assert_fail@plt+0xc334>
   1d810:	ldr	r0, [fp, #8]
   1d814:	cmp	r0, #0
   1d818:	bge	1d9a8 <__assert_fail@plt+0xc4cc>
   1d81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d820:	cmp	r0, #0
   1d824:	bge	1d910 <__assert_fail@plt+0xc434>
   1d828:	b	1d82c <__assert_fail@plt+0xc350>
   1d82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d830:	ldr	r1, [fp, #8]
   1d834:	asr	r3, r1, #31
   1d838:	mvn	r2, #0
   1d83c:	mvn	ip, #-2147483648	; 0x80000000
   1d840:	str	r0, [fp, #-72]	; 0xffffffb8
   1d844:	mov	r0, r2
   1d848:	str	r1, [fp, #-76]	; 0xffffffb4
   1d84c:	mov	r1, ip
   1d850:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1d854:	bl	24508 <__assert_fail@plt+0x1302c>
   1d858:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d85c:	subs	r0, r2, r0
   1d860:	rscs	r1, r1, r2, asr #31
   1d864:	str	r0, [fp, #-80]	; 0xffffffb0
   1d868:	str	r1, [fp, #-84]	; 0xffffffac
   1d86c:	blt	1da88 <__assert_fail@plt+0xc5ac>
   1d870:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d874:	b	1d878 <__assert_fail@plt+0xc39c>
   1d878:	ldr	r0, [pc, #196]	; 1d944 <__assert_fail@plt+0xc468>
   1d87c:	ldr	r1, [fp, #8]
   1d880:	cmp	r1, r0
   1d884:	blt	1d89c <__assert_fail@plt+0xc3c0>
   1d888:	b	1d8b4 <__assert_fail@plt+0xc3d8>
   1d88c:	ldr	r0, [fp, #8]
   1d890:	movw	r1, #0
   1d894:	cmp	r1, r0
   1d898:	bge	1d8b4 <__assert_fail@plt+0xc3d8>
   1d89c:	mov	r0, #0
   1d8a0:	mvn	r1, #0
   1d8a4:	str	r1, [fp, #-88]	; 0xffffffa8
   1d8a8:	str	r0, [fp, #-92]	; 0xffffffa4
   1d8ac:	b	1d8e8 <__assert_fail@plt+0xc40c>
   1d8b0:	svcvc	0x00ffffff
   1d8b4:	ldr	r0, [fp, #8]
   1d8b8:	rsb	r0, r0, #0
   1d8bc:	asr	r3, r0, #31
   1d8c0:	mvn	r1, #0
   1d8c4:	mvn	r2, #-2147483648	; 0x80000000
   1d8c8:	str	r0, [fp, #-96]	; 0xffffffa0
   1d8cc:	mov	r0, r1
   1d8d0:	mov	r1, r2
   1d8d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d8d8:	bl	24508 <__assert_fail@plt+0x1302c>
   1d8dc:	str	r0, [fp, #-88]	; 0xffffffa8
   1d8e0:	str	r1, [fp, #-92]	; 0xffffffa4
   1d8e4:	b	1d8e8 <__assert_fail@plt+0xc40c>
   1d8e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1d8ec:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d8f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8f4:	mvn	r2, r2
   1d8f8:	subs	r1, r2, r1
   1d8fc:	rscs	r0, r0, r2, asr #31
   1d900:	str	r1, [fp, #-100]	; 0xffffff9c
   1d904:	str	r0, [fp, #-104]	; 0xffffff98
   1d908:	bge	1da88 <__assert_fail@plt+0xc5ac>
   1d90c:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d910:	ldr	r0, [fp, #8]
   1d914:	cmn	r0, #1
   1d918:	bne	1d968 <__assert_fail@plt+0xc48c>
   1d91c:	b	1d920 <__assert_fail@plt+0xc444>
   1d920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d924:	mov	r1, #-2147483648	; 0x80000000
   1d928:	add	r1, r1, r0, asr #31
   1d92c:	rsbs	r0, r0, #0
   1d930:	rscs	r1, r1, #0
   1d934:	str	r0, [fp, #-108]	; 0xffffff94
   1d938:	str	r1, [fp, #-112]	; 0xffffff90
   1d93c:	blt	1da88 <__assert_fail@plt+0xc5ac>
   1d940:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d944:	andhi	r0, r0, r1
   1d948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d94c:	movw	r1, #0
   1d950:	cmp	r1, r0
   1d954:	bge	1da9c <__assert_fail@plt+0xc5c0>
   1d958:	mov	r0, #0
   1d95c:	cmp	r0, #0
   1d960:	bne	1da88 <__assert_fail@plt+0xc5ac>
   1d964:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d968:	ldr	r0, [fp, #8]
   1d96c:	asr	r3, r0, #31
   1d970:	mov	r1, #0
   1d974:	mov	r2, #-2147483648	; 0x80000000
   1d978:	str	r0, [fp, #-116]	; 0xffffff8c
   1d97c:	mov	r0, r1
   1d980:	mov	r1, r2
   1d984:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1d988:	bl	24508 <__assert_fail@plt+0x1302c>
   1d98c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d990:	subs	r0, r0, r2
   1d994:	sbcs	r1, r1, r2, asr #31
   1d998:	str	r0, [fp, #-120]	; 0xffffff88
   1d99c:	str	r1, [fp, #-124]	; 0xffffff84
   1d9a0:	blt	1da88 <__assert_fail@plt+0xc5ac>
   1d9a4:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d9a8:	ldr	r0, [fp, #8]
   1d9ac:	cmp	r0, #0
   1d9b0:	bne	1d9b8 <__assert_fail@plt+0xc4dc>
   1d9b4:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9bc:	cmp	r0, #0
   1d9c0:	bge	1da48 <__assert_fail@plt+0xc56c>
   1d9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9c8:	cmn	r0, #1
   1d9cc:	bne	1da08 <__assert_fail@plt+0xc52c>
   1d9d0:	b	1d9d4 <__assert_fail@plt+0xc4f8>
   1d9d4:	ldr	r0, [fp, #8]
   1d9d8:	mov	r1, #-2147483648	; 0x80000000
   1d9dc:	add	r1, r1, r0, asr #31
   1d9e0:	rsbs	r0, r0, #0
   1d9e4:	rscs	r1, r1, #0
   1d9e8:	str	r0, [fp, #-128]	; 0xffffff80
   1d9ec:	str	r1, [fp, #-132]	; 0xffffff7c
   1d9f0:	blt	1da88 <__assert_fail@plt+0xc5ac>
   1d9f4:	b	1da9c <__assert_fail@plt+0xc5c0>
   1d9f8:	mov	r0, #0
   1d9fc:	cmp	r0, #0
   1da00:	bne	1da88 <__assert_fail@plt+0xc5ac>
   1da04:	b	1da9c <__assert_fail@plt+0xc5c0>
   1da08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da0c:	asr	r3, r0, #31
   1da10:	mov	r1, #0
   1da14:	mov	r2, #-2147483648	; 0x80000000
   1da18:	str	r0, [fp, #-136]	; 0xffffff78
   1da1c:	mov	r0, r1
   1da20:	mov	r1, r2
   1da24:	ldr	r2, [fp, #-136]	; 0xffffff78
   1da28:	bl	24508 <__assert_fail@plt+0x1302c>
   1da2c:	ldr	r2, [fp, #8]
   1da30:	subs	r0, r0, r2
   1da34:	sbcs	r1, r1, r2, asr #31
   1da38:	str	r0, [fp, #-140]	; 0xffffff74
   1da3c:	str	r1, [fp, #-144]	; 0xffffff70
   1da40:	blt	1da88 <__assert_fail@plt+0xc5ac>
   1da44:	b	1da9c <__assert_fail@plt+0xc5c0>
   1da48:	ldr	r0, [fp, #8]
   1da4c:	asr	r3, r0, #31
   1da50:	mvn	r1, #0
   1da54:	mvn	r2, #-2147483648	; 0x80000000
   1da58:	str	r0, [fp, #-148]	; 0xffffff6c
   1da5c:	mov	r0, r1
   1da60:	mov	r1, r2
   1da64:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1da68:	bl	24508 <__assert_fail@plt+0x1302c>
   1da6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da70:	subs	r0, r0, r2
   1da74:	sbcs	r1, r1, r2, asr #31
   1da78:	str	r0, [fp, #-152]	; 0xffffff68
   1da7c:	str	r1, [fp, #-156]	; 0xffffff64
   1da80:	bge	1da9c <__assert_fail@plt+0xc5c0>
   1da84:	b	1da88 <__assert_fail@plt+0xc5ac>
   1da88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da8c:	ldr	r1, [fp, #8]
   1da90:	mul	r0, r0, r1
   1da94:	str	r0, [fp, #-28]	; 0xffffffe4
   1da98:	b	1dcfc <__assert_fail@plt+0xc820>
   1da9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daa0:	ldr	r1, [fp, #8]
   1daa4:	mul	r0, r0, r1
   1daa8:	str	r0, [fp, #-28]	; 0xffffffe4
   1daac:	b	1dd0c <__assert_fail@plt+0xc830>
   1dab0:	ldr	r0, [fp, #8]
   1dab4:	cmp	r0, #0
   1dab8:	bge	1dc18 <__assert_fail@plt+0xc73c>
   1dabc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dac0:	cmp	r0, #0
   1dac4:	bge	1dba0 <__assert_fail@plt+0xc6c4>
   1dac8:	b	1db10 <__assert_fail@plt+0xc634>
   1dacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dad0:	ldr	r1, [fp, #8]
   1dad4:	asr	r3, r1, #31
   1dad8:	mvn	r2, #0
   1dadc:	str	r0, [fp, #-160]	; 0xffffff60
   1dae0:	mov	r0, r2
   1dae4:	str	r1, [fp, #-164]	; 0xffffff5c
   1dae8:	mov	r1, r2
   1daec:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1daf0:	bl	245dc <__assert_fail@plt+0x13100>
   1daf4:	ldr	r2, [fp, #-160]	; 0xffffff60
   1daf8:	subs	r0, r2, r0
   1dafc:	rscs	r1, r1, r2, asr #31
   1db00:	str	r0, [fp, #-168]	; 0xffffff58
   1db04:	str	r1, [fp, #-172]	; 0xffffff54
   1db08:	bcc	1dcd4 <__assert_fail@plt+0xc7f8>
   1db0c:	b	1dce8 <__assert_fail@plt+0xc80c>
   1db10:	b	1db14 <__assert_fail@plt+0xc638>
   1db14:	ldr	r0, [pc, #-472]	; 1d944 <__assert_fail@plt+0xc468>
   1db18:	ldr	r1, [fp, #8]
   1db1c:	cmp	r1, r0
   1db20:	blt	1db38 <__assert_fail@plt+0xc65c>
   1db24:	b	1db4c <__assert_fail@plt+0xc670>
   1db28:	ldr	r0, [fp, #8]
   1db2c:	movw	r1, #0
   1db30:	cmp	r1, r0
   1db34:	bge	1db4c <__assert_fail@plt+0xc670>
   1db38:	mov	r0, #1
   1db3c:	mvn	r1, #0
   1db40:	str	r1, [fp, #-176]	; 0xffffff50
   1db44:	str	r0, [fp, #-180]	; 0xffffff4c
   1db48:	b	1db78 <__assert_fail@plt+0xc69c>
   1db4c:	ldr	r0, [fp, #8]
   1db50:	rsb	r0, r0, #0
   1db54:	asr	r3, r0, #31
   1db58:	mvn	r1, #0
   1db5c:	str	r0, [fp, #-184]	; 0xffffff48
   1db60:	mov	r0, r1
   1db64:	ldr	r2, [fp, #-184]	; 0xffffff48
   1db68:	bl	245dc <__assert_fail@plt+0x13100>
   1db6c:	str	r0, [fp, #-176]	; 0xffffff50
   1db70:	str	r1, [fp, #-180]	; 0xffffff4c
   1db74:	b	1db78 <__assert_fail@plt+0xc69c>
   1db78:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1db7c:	ldr	r1, [fp, #-176]	; 0xffffff50
   1db80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db84:	mvn	r2, r2
   1db88:	subs	r1, r2, r1
   1db8c:	rscs	r0, r0, r2, asr #31
   1db90:	str	r1, [sp, #188]	; 0xbc
   1db94:	str	r0, [sp, #184]	; 0xb8
   1db98:	bcs	1dcd4 <__assert_fail@plt+0xc7f8>
   1db9c:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dba0:	b	1dba4 <__assert_fail@plt+0xc6c8>
   1dba4:	b	1dbfc <__assert_fail@plt+0xc720>
   1dba8:	b	1dbfc <__assert_fail@plt+0xc720>
   1dbac:	ldr	r0, [fp, #8]
   1dbb0:	cmn	r0, #1
   1dbb4:	bne	1dbfc <__assert_fail@plt+0xc720>
   1dbb8:	b	1dbbc <__assert_fail@plt+0xc6e0>
   1dbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbc0:	add	r0, r0, #0
   1dbc4:	movw	r1, #0
   1dbc8:	cmp	r1, r0
   1dbcc:	blt	1dcd4 <__assert_fail@plt+0xc7f8>
   1dbd0:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd8:	movw	r1, #0
   1dbdc:	cmp	r1, r0
   1dbe0:	bge	1dce8 <__assert_fail@plt+0xc80c>
   1dbe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbe8:	sub	r0, r0, #1
   1dbec:	mvn	r1, #0
   1dbf0:	cmp	r1, r0
   1dbf4:	blt	1dcd4 <__assert_fail@plt+0xc7f8>
   1dbf8:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dbfc:	ldr	r0, [fp, #8]
   1dc00:	movw	r1, #0
   1dc04:	sdiv	r0, r1, r0
   1dc08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc0c:	cmp	r0, r1
   1dc10:	blt	1dcd4 <__assert_fail@plt+0xc7f8>
   1dc14:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dc18:	ldr	r0, [fp, #8]
   1dc1c:	cmp	r0, #0
   1dc20:	bne	1dc28 <__assert_fail@plt+0xc74c>
   1dc24:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc2c:	cmp	r0, #0
   1dc30:	bge	1dc9c <__assert_fail@plt+0xc7c0>
   1dc34:	b	1dc38 <__assert_fail@plt+0xc75c>
   1dc38:	b	1dc80 <__assert_fail@plt+0xc7a4>
   1dc3c:	b	1dc80 <__assert_fail@plt+0xc7a4>
   1dc40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc44:	cmn	r0, #1
   1dc48:	bne	1dc80 <__assert_fail@plt+0xc7a4>
   1dc4c:	b	1dc50 <__assert_fail@plt+0xc774>
   1dc50:	ldr	r0, [fp, #8]
   1dc54:	add	r0, r0, #0
   1dc58:	movw	r1, #0
   1dc5c:	cmp	r1, r0
   1dc60:	blt	1dcd4 <__assert_fail@plt+0xc7f8>
   1dc64:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dc68:	ldr	r0, [fp, #8]
   1dc6c:	sub	r0, r0, #1
   1dc70:	mvn	r1, #0
   1dc74:	cmp	r1, r0
   1dc78:	blt	1dcd4 <__assert_fail@plt+0xc7f8>
   1dc7c:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dc80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc84:	movw	r1, #0
   1dc88:	sdiv	r0, r1, r0
   1dc8c:	ldr	r1, [fp, #8]
   1dc90:	cmp	r0, r1
   1dc94:	blt	1dcd4 <__assert_fail@plt+0xc7f8>
   1dc98:	b	1dce8 <__assert_fail@plt+0xc80c>
   1dc9c:	ldr	r0, [fp, #8]
   1dca0:	asr	r3, r0, #31
   1dca4:	mvn	r1, #0
   1dca8:	str	r0, [sp, #180]	; 0xb4
   1dcac:	mov	r0, r1
   1dcb0:	ldr	r2, [sp, #180]	; 0xb4
   1dcb4:	bl	245dc <__assert_fail@plt+0x13100>
   1dcb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dcbc:	subs	r0, r0, r2
   1dcc0:	sbcs	r1, r1, r2, asr #31
   1dcc4:	str	r0, [sp, #176]	; 0xb0
   1dcc8:	str	r1, [sp, #172]	; 0xac
   1dccc:	bcs	1dce8 <__assert_fail@plt+0xc80c>
   1dcd0:	b	1dcd4 <__assert_fail@plt+0xc7f8>
   1dcd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcd8:	ldr	r1, [fp, #8]
   1dcdc:	mul	r0, r0, r1
   1dce0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dce4:	b	1dcfc <__assert_fail@plt+0xc820>
   1dce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcec:	ldr	r1, [fp, #8]
   1dcf0:	mul	r0, r0, r1
   1dcf4:	str	r0, [fp, #-28]	; 0xffffffe4
   1dcf8:	b	1dd0c <__assert_fail@plt+0xc830>
   1dcfc:	ldr	r0, [pc, #-1108]	; 1d8b0 <__assert_fail@plt+0xc3d4>
   1dd00:	str	r0, [sp, #168]	; 0xa8
   1dd04:	b	1dd2c <__assert_fail@plt+0xc850>
   1dd08:			; <UNDEFINED> instruction: 0xffff8000
   1dd0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dd10:	cmp	r0, #64	; 0x40
   1dd14:	movw	r0, #0
   1dd18:	movlt	r0, #1
   1dd1c:	tst	r0, #1
   1dd20:	movw	r0, #64	; 0x40
   1dd24:	moveq	r0, #0
   1dd28:	str	r0, [sp, #168]	; 0xa8
   1dd2c:	ldr	r0, [sp, #168]	; 0xa8
   1dd30:	str	r0, [fp, #-32]	; 0xffffffe0
   1dd34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dd38:	cmp	r0, #0
   1dd3c:	beq	1dd6c <__assert_fail@plt+0xc890>
   1dd40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dd44:	ldr	r1, [fp, #8]
   1dd48:	sdiv	r0, r0, r1
   1dd4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1dd50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dd54:	mov	r1, r0
   1dd58:	ldr	r2, [fp, #8]
   1dd5c:	sdiv	r3, r0, r2
   1dd60:	mls	r0, r3, r2, r0
   1dd64:	sub	r0, r1, r0
   1dd68:	str	r0, [fp, #-28]	; 0xffffffe4
   1dd6c:	ldr	r0, [fp, #-4]
   1dd70:	movw	r1, #0
   1dd74:	cmp	r0, r1
   1dd78:	bne	1dd88 <__assert_fail@plt+0xc8ac>
   1dd7c:	ldr	r0, [fp, #-8]
   1dd80:	movw	r1, #0
   1dd84:	str	r1, [r0]
   1dd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dd90:	sub	r0, r0, r1
   1dd94:	ldr	r1, [fp, #-12]
   1dd98:	cmp	r0, r1
   1dd9c:	bge	1f1d4 <__assert_fail@plt+0xdcf8>
   1dda0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dda4:	ldr	r1, [fp, #-12]
   1dda8:	add	r1, r0, r1
   1ddac:	mov	r2, #1
   1ddb0:	cmp	r1, r0
   1ddb4:	movwvc	r2, #0
   1ddb8:	str	r1, [fp, #-24]	; 0xffffffe8
   1ddbc:	tst	r2, #1
   1ddc0:	bne	1f1d0 <__assert_fail@plt+0xdcf4>
   1ddc4:	ldr	r0, [fp, #-16]
   1ddc8:	movw	r1, #0
   1ddcc:	cmp	r1, r0
   1ddd0:	bgt	1dde4 <__assert_fail@plt+0xc908>
   1ddd4:	ldr	r0, [fp, #-16]
   1ddd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dddc:	cmp	r0, r1
   1dde0:	blt	1f1d0 <__assert_fail@plt+0xdcf4>
   1dde4:	b	1e1c0 <__assert_fail@plt+0xcce4>
   1dde8:	b	1ddec <__assert_fail@plt+0xc910>
   1ddec:	ldr	r0, [fp, #8]
   1ddf0:	cmp	r0, #0
   1ddf4:	bge	1df08 <__assert_fail@plt+0xca2c>
   1ddf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddfc:	cmp	r0, #0
   1de00:	bge	1de8c <__assert_fail@plt+0xc9b0>
   1de04:	b	1de08 <__assert_fail@plt+0xc92c>
   1de08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de0c:	ldr	r1, [fp, #8]
   1de10:	movw	r2, #127	; 0x7f
   1de14:	sdiv	r1, r2, r1
   1de18:	cmp	r0, r1
   1de1c:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1de20:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1de24:	b	1de28 <__assert_fail@plt+0xc94c>
   1de28:	ldr	r0, [pc, #-1260]	; 1d944 <__assert_fail@plt+0xc468>
   1de2c:	ldr	r1, [fp, #8]
   1de30:	cmp	r1, r0
   1de34:	blt	1de4c <__assert_fail@plt+0xc970>
   1de38:	b	1de58 <__assert_fail@plt+0xc97c>
   1de3c:	ldr	r0, [fp, #8]
   1de40:	movw	r1, #0
   1de44:	cmp	r1, r0
   1de48:	bge	1de58 <__assert_fail@plt+0xc97c>
   1de4c:	movw	r0, #0
   1de50:	str	r0, [sp, #164]	; 0xa4
   1de54:	b	1de70 <__assert_fail@plt+0xc994>
   1de58:	ldr	r0, [fp, #8]
   1de5c:	movw	r1, #0
   1de60:	sub	r0, r1, r0
   1de64:	movw	r1, #127	; 0x7f
   1de68:	sdiv	r0, r1, r0
   1de6c:	str	r0, [sp, #164]	; 0xa4
   1de70:	ldr	r0, [sp, #164]	; 0xa4
   1de74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de78:	mvn	r2, #0
   1de7c:	sub	r1, r2, r1
   1de80:	cmp	r0, r1
   1de84:	ble	1dfa8 <__assert_fail@plt+0xcacc>
   1de88:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1de8c:	b	1de90 <__assert_fail@plt+0xc9b4>
   1de90:	b	1deec <__assert_fail@plt+0xca10>
   1de94:	b	1deec <__assert_fail@plt+0xca10>
   1de98:	ldr	r0, [fp, #8]
   1de9c:	cmn	r0, #1
   1dea0:	bne	1deec <__assert_fail@plt+0xca10>
   1dea4:	b	1dea8 <__assert_fail@plt+0xc9cc>
   1dea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1deac:	mvn	r1, #127	; 0x7f
   1deb0:	add	r0, r0, r1
   1deb4:	movw	r1, #0
   1deb8:	cmp	r1, r0
   1debc:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1dec0:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1dec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dec8:	movw	r1, #0
   1decc:	cmp	r1, r0
   1ded0:	bge	1dfc0 <__assert_fail@plt+0xcae4>
   1ded4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ded8:	sub	r0, r0, #1
   1dedc:	movw	r1, #127	; 0x7f
   1dee0:	cmp	r1, r0
   1dee4:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1dee8:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1deec:	ldr	r0, [fp, #8]
   1def0:	mvn	r1, #127	; 0x7f
   1def4:	sdiv	r0, r1, r0
   1def8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1defc:	cmp	r0, r1
   1df00:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1df04:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1df08:	ldr	r0, [fp, #8]
   1df0c:	cmp	r0, #0
   1df10:	bne	1df18 <__assert_fail@plt+0xca3c>
   1df14:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1df18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df1c:	cmp	r0, #0
   1df20:	bge	1df90 <__assert_fail@plt+0xcab4>
   1df24:	b	1df28 <__assert_fail@plt+0xca4c>
   1df28:	b	1df74 <__assert_fail@plt+0xca98>
   1df2c:	b	1df74 <__assert_fail@plt+0xca98>
   1df30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df34:	cmn	r0, #1
   1df38:	bne	1df74 <__assert_fail@plt+0xca98>
   1df3c:	b	1df40 <__assert_fail@plt+0xca64>
   1df40:	ldr	r0, [fp, #8]
   1df44:	mvn	r1, #127	; 0x7f
   1df48:	add	r0, r0, r1
   1df4c:	movw	r1, #0
   1df50:	cmp	r1, r0
   1df54:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1df58:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1df5c:	ldr	r0, [fp, #8]
   1df60:	sub	r0, r0, #1
   1df64:	movw	r1, #127	; 0x7f
   1df68:	cmp	r1, r0
   1df6c:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1df70:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1df74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df78:	mvn	r1, #127	; 0x7f
   1df7c:	sdiv	r0, r1, r0
   1df80:	ldr	r1, [fp, #8]
   1df84:	cmp	r0, r1
   1df88:	blt	1dfa8 <__assert_fail@plt+0xcacc>
   1df8c:	b	1dfc0 <__assert_fail@plt+0xcae4>
   1df90:	ldr	r0, [fp, #8]
   1df94:	movw	r1, #127	; 0x7f
   1df98:	sdiv	r0, r1, r0
   1df9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dfa0:	cmp	r0, r1
   1dfa4:	bge	1dfc0 <__assert_fail@plt+0xcae4>
   1dfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfac:	ldr	r1, [fp, #8]
   1dfb0:	mul	r0, r0, r1
   1dfb4:	sxtb	r0, r0
   1dfb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1dfbc:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1dfc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfc4:	ldr	r1, [fp, #8]
   1dfc8:	mul	r0, r0, r1
   1dfcc:	sxtb	r0, r0
   1dfd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dfd4:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1dfd8:	ldr	r0, [fp, #8]
   1dfdc:	cmp	r0, #0
   1dfe0:	bge	1e0f0 <__assert_fail@plt+0xcc14>
   1dfe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfe8:	cmp	r0, #0
   1dfec:	bge	1e078 <__assert_fail@plt+0xcb9c>
   1dff0:	b	1dff4 <__assert_fail@plt+0xcb18>
   1dff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dff8:	ldr	r1, [fp, #8]
   1dffc:	movw	r2, #255	; 0xff
   1e000:	sdiv	r1, r2, r1
   1e004:	cmp	r0, r1
   1e008:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e00c:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e010:	b	1e014 <__assert_fail@plt+0xcb38>
   1e014:	ldr	r0, [pc, #-1752]	; 1d944 <__assert_fail@plt+0xc468>
   1e018:	ldr	r1, [fp, #8]
   1e01c:	cmp	r1, r0
   1e020:	blt	1e038 <__assert_fail@plt+0xcb5c>
   1e024:	b	1e044 <__assert_fail@plt+0xcb68>
   1e028:	ldr	r0, [fp, #8]
   1e02c:	movw	r1, #0
   1e030:	cmp	r1, r0
   1e034:	bge	1e044 <__assert_fail@plt+0xcb68>
   1e038:	movw	r0, #0
   1e03c:	str	r0, [sp, #160]	; 0xa0
   1e040:	b	1e05c <__assert_fail@plt+0xcb80>
   1e044:	ldr	r0, [fp, #8]
   1e048:	movw	r1, #0
   1e04c:	sub	r0, r1, r0
   1e050:	movw	r1, #255	; 0xff
   1e054:	sdiv	r0, r1, r0
   1e058:	str	r0, [sp, #160]	; 0xa0
   1e05c:	ldr	r0, [sp, #160]	; 0xa0
   1e060:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e064:	mvn	r2, #0
   1e068:	sub	r1, r2, r1
   1e06c:	cmp	r0, r1
   1e070:	ble	1e18c <__assert_fail@plt+0xccb0>
   1e074:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e078:	b	1e07c <__assert_fail@plt+0xcba0>
   1e07c:	b	1e0d4 <__assert_fail@plt+0xcbf8>
   1e080:	b	1e0d4 <__assert_fail@plt+0xcbf8>
   1e084:	ldr	r0, [fp, #8]
   1e088:	cmn	r0, #1
   1e08c:	bne	1e0d4 <__assert_fail@plt+0xcbf8>
   1e090:	b	1e094 <__assert_fail@plt+0xcbb8>
   1e094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e098:	add	r0, r0, #0
   1e09c:	movw	r1, #0
   1e0a0:	cmp	r1, r0
   1e0a4:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e0a8:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0b0:	movw	r1, #0
   1e0b4:	cmp	r1, r0
   1e0b8:	bge	1e1a8 <__assert_fail@plt+0xcccc>
   1e0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0c0:	sub	r0, r0, #1
   1e0c4:	mvn	r1, #0
   1e0c8:	cmp	r1, r0
   1e0cc:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e0d0:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e0d4:	ldr	r0, [fp, #8]
   1e0d8:	movw	r1, #0
   1e0dc:	sdiv	r0, r1, r0
   1e0e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0e4:	cmp	r0, r1
   1e0e8:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e0ec:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e0f0:	ldr	r0, [fp, #8]
   1e0f4:	cmp	r0, #0
   1e0f8:	bne	1e100 <__assert_fail@plt+0xcc24>
   1e0fc:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e104:	cmp	r0, #0
   1e108:	bge	1e174 <__assert_fail@plt+0xcc98>
   1e10c:	b	1e110 <__assert_fail@plt+0xcc34>
   1e110:	b	1e158 <__assert_fail@plt+0xcc7c>
   1e114:	b	1e158 <__assert_fail@plt+0xcc7c>
   1e118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e11c:	cmn	r0, #1
   1e120:	bne	1e158 <__assert_fail@plt+0xcc7c>
   1e124:	b	1e128 <__assert_fail@plt+0xcc4c>
   1e128:	ldr	r0, [fp, #8]
   1e12c:	add	r0, r0, #0
   1e130:	movw	r1, #0
   1e134:	cmp	r1, r0
   1e138:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e13c:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e140:	ldr	r0, [fp, #8]
   1e144:	sub	r0, r0, #1
   1e148:	mvn	r1, #0
   1e14c:	cmp	r1, r0
   1e150:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e154:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e15c:	movw	r1, #0
   1e160:	sdiv	r0, r1, r0
   1e164:	ldr	r1, [fp, #8]
   1e168:	cmp	r0, r1
   1e16c:	blt	1e18c <__assert_fail@plt+0xccb0>
   1e170:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e174:	ldr	r0, [fp, #8]
   1e178:	movw	r1, #255	; 0xff
   1e17c:	sdiv	r0, r1, r0
   1e180:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e184:	cmp	r0, r1
   1e188:	bge	1e1a8 <__assert_fail@plt+0xcccc>
   1e18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e190:	ldr	r1, [fp, #8]
   1e194:	mul	r0, r0, r1
   1e198:	and	r0, r0, #255	; 0xff
   1e19c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1a0:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1e1a4:	andhi	r0, r0, r0
   1e1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1ac:	ldr	r1, [fp, #8]
   1e1b0:	mul	r0, r0, r1
   1e1b4:	and	r0, r0, #255	; 0xff
   1e1b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1bc:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1e1c0:	b	1e598 <__assert_fail@plt+0xd0bc>
   1e1c4:	b	1e1c8 <__assert_fail@plt+0xccec>
   1e1c8:	ldr	r0, [fp, #8]
   1e1cc:	cmp	r0, #0
   1e1d0:	bge	1e2e4 <__assert_fail@plt+0xce08>
   1e1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1d8:	cmp	r0, #0
   1e1dc:	bge	1e268 <__assert_fail@plt+0xcd8c>
   1e1e0:	b	1e1e4 <__assert_fail@plt+0xcd08>
   1e1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1e8:	ldr	r1, [fp, #8]
   1e1ec:	movw	r2, #32767	; 0x7fff
   1e1f0:	sdiv	r1, r2, r1
   1e1f4:	cmp	r0, r1
   1e1f8:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e1fc:	b	1e39c <__assert_fail@plt+0xcec0>
   1e200:	b	1e204 <__assert_fail@plt+0xcd28>
   1e204:	ldr	r0, [pc, #4084]	; 1f200 <__assert_fail@plt+0xdd24>
   1e208:	ldr	r1, [fp, #8]
   1e20c:	cmp	r1, r0
   1e210:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e214:	b	1e234 <__assert_fail@plt+0xcd58>
   1e218:	ldr	r0, [fp, #8]
   1e21c:	movw	r1, #0
   1e220:	cmp	r1, r0
   1e224:	bge	1e234 <__assert_fail@plt+0xcd58>
   1e228:	movw	r0, #0
   1e22c:	str	r0, [sp, #156]	; 0x9c
   1e230:	b	1e24c <__assert_fail@plt+0xcd70>
   1e234:	ldr	r0, [fp, #8]
   1e238:	movw	r1, #0
   1e23c:	sub	r0, r1, r0
   1e240:	movw	r1, #32767	; 0x7fff
   1e244:	sdiv	r0, r1, r0
   1e248:	str	r0, [sp, #156]	; 0x9c
   1e24c:	ldr	r0, [sp, #156]	; 0x9c
   1e250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e254:	mvn	r2, #0
   1e258:	sub	r1, r2, r1
   1e25c:	cmp	r0, r1
   1e260:	ble	1e384 <__assert_fail@plt+0xcea8>
   1e264:	b	1e39c <__assert_fail@plt+0xcec0>
   1e268:	b	1e26c <__assert_fail@plt+0xcd90>
   1e26c:	b	1e2c8 <__assert_fail@plt+0xcdec>
   1e270:	b	1e2c8 <__assert_fail@plt+0xcdec>
   1e274:	ldr	r0, [fp, #8]
   1e278:	cmn	r0, #1
   1e27c:	bne	1e2c8 <__assert_fail@plt+0xcdec>
   1e280:	b	1e284 <__assert_fail@plt+0xcda8>
   1e284:	ldr	r0, [pc, #3964]	; 1f208 <__assert_fail@plt+0xdd2c>
   1e288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e28c:	add	r0, r1, r0
   1e290:	movw	r1, #0
   1e294:	cmp	r1, r0
   1e298:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e29c:	b	1e39c <__assert_fail@plt+0xcec0>
   1e2a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2a4:	movw	r1, #0
   1e2a8:	cmp	r1, r0
   1e2ac:	bge	1e39c <__assert_fail@plt+0xcec0>
   1e2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2b4:	sub	r0, r0, #1
   1e2b8:	movw	r1, #32767	; 0x7fff
   1e2bc:	cmp	r1, r0
   1e2c0:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e2c4:	b	1e39c <__assert_fail@plt+0xcec0>
   1e2c8:	ldr	r0, [pc, #3896]	; 1f208 <__assert_fail@plt+0xdd2c>
   1e2cc:	ldr	r1, [fp, #8]
   1e2d0:	sdiv	r0, r0, r1
   1e2d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2d8:	cmp	r0, r1
   1e2dc:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e2e0:	b	1e39c <__assert_fail@plt+0xcec0>
   1e2e4:	ldr	r0, [fp, #8]
   1e2e8:	cmp	r0, #0
   1e2ec:	bne	1e2f4 <__assert_fail@plt+0xce18>
   1e2f0:	b	1e39c <__assert_fail@plt+0xcec0>
   1e2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2f8:	cmp	r0, #0
   1e2fc:	bge	1e36c <__assert_fail@plt+0xce90>
   1e300:	b	1e304 <__assert_fail@plt+0xce28>
   1e304:	b	1e350 <__assert_fail@plt+0xce74>
   1e308:	b	1e350 <__assert_fail@plt+0xce74>
   1e30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e310:	cmn	r0, #1
   1e314:	bne	1e350 <__assert_fail@plt+0xce74>
   1e318:	b	1e31c <__assert_fail@plt+0xce40>
   1e31c:	ldr	r0, [pc, #3812]	; 1f208 <__assert_fail@plt+0xdd2c>
   1e320:	ldr	r1, [fp, #8]
   1e324:	add	r0, r1, r0
   1e328:	movw	r1, #0
   1e32c:	cmp	r1, r0
   1e330:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e334:	b	1e39c <__assert_fail@plt+0xcec0>
   1e338:	ldr	r0, [fp, #8]
   1e33c:	sub	r0, r0, #1
   1e340:	movw	r1, #32767	; 0x7fff
   1e344:	cmp	r1, r0
   1e348:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e34c:	b	1e39c <__assert_fail@plt+0xcec0>
   1e350:	ldr	r0, [pc, #3760]	; 1f208 <__assert_fail@plt+0xdd2c>
   1e354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e358:	sdiv	r0, r0, r1
   1e35c:	ldr	r1, [fp, #8]
   1e360:	cmp	r0, r1
   1e364:	blt	1e384 <__assert_fail@plt+0xcea8>
   1e368:	b	1e39c <__assert_fail@plt+0xcec0>
   1e36c:	ldr	r0, [fp, #8]
   1e370:	movw	r1, #32767	; 0x7fff
   1e374:	sdiv	r0, r1, r0
   1e378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e37c:	cmp	r0, r1
   1e380:	bge	1e39c <__assert_fail@plt+0xcec0>
   1e384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e388:	ldr	r1, [fp, #8]
   1e38c:	mul	r0, r0, r1
   1e390:	sxth	r0, r0
   1e394:	str	r0, [fp, #-28]	; 0xffffffe4
   1e398:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1e39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3a0:	ldr	r1, [fp, #8]
   1e3a4:	mul	r0, r0, r1
   1e3a8:	sxth	r0, r0
   1e3ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3b0:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1e3b4:	ldr	r0, [fp, #8]
   1e3b8:	cmp	r0, #0
   1e3bc:	bge	1e4cc <__assert_fail@plt+0xcff0>
   1e3c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c4:	cmp	r0, #0
   1e3c8:	bge	1e454 <__assert_fail@plt+0xcf78>
   1e3cc:	b	1e3d0 <__assert_fail@plt+0xcef4>
   1e3d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3d4:	ldr	r1, [fp, #8]
   1e3d8:	movw	r2, #65535	; 0xffff
   1e3dc:	sdiv	r1, r2, r1
   1e3e0:	cmp	r0, r1
   1e3e4:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e3e8:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e3ec:	b	1e3f0 <__assert_fail@plt+0xcf14>
   1e3f0:	ldr	r0, [pc, #3592]	; 1f200 <__assert_fail@plt+0xdd24>
   1e3f4:	ldr	r1, [fp, #8]
   1e3f8:	cmp	r1, r0
   1e3fc:	blt	1e414 <__assert_fail@plt+0xcf38>
   1e400:	b	1e420 <__assert_fail@plt+0xcf44>
   1e404:	ldr	r0, [fp, #8]
   1e408:	movw	r1, #0
   1e40c:	cmp	r1, r0
   1e410:	bge	1e420 <__assert_fail@plt+0xcf44>
   1e414:	movw	r0, #0
   1e418:	str	r0, [sp, #152]	; 0x98
   1e41c:	b	1e438 <__assert_fail@plt+0xcf5c>
   1e420:	ldr	r0, [fp, #8]
   1e424:	movw	r1, #0
   1e428:	sub	r0, r1, r0
   1e42c:	movw	r1, #65535	; 0xffff
   1e430:	sdiv	r0, r1, r0
   1e434:	str	r0, [sp, #152]	; 0x98
   1e438:	ldr	r0, [sp, #152]	; 0x98
   1e43c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e440:	mvn	r2, #0
   1e444:	sub	r1, r2, r1
   1e448:	cmp	r0, r1
   1e44c:	ble	1e568 <__assert_fail@plt+0xd08c>
   1e450:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e454:	b	1e458 <__assert_fail@plt+0xcf7c>
   1e458:	b	1e4b0 <__assert_fail@plt+0xcfd4>
   1e45c:	b	1e4b0 <__assert_fail@plt+0xcfd4>
   1e460:	ldr	r0, [fp, #8]
   1e464:	cmn	r0, #1
   1e468:	bne	1e4b0 <__assert_fail@plt+0xcfd4>
   1e46c:	b	1e470 <__assert_fail@plt+0xcf94>
   1e470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e474:	add	r0, r0, #0
   1e478:	movw	r1, #0
   1e47c:	cmp	r1, r0
   1e480:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e484:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e48c:	movw	r1, #0
   1e490:	cmp	r1, r0
   1e494:	bge	1e580 <__assert_fail@plt+0xd0a4>
   1e498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e49c:	sub	r0, r0, #1
   1e4a0:	mvn	r1, #0
   1e4a4:	cmp	r1, r0
   1e4a8:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e4ac:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e4b0:	ldr	r0, [fp, #8]
   1e4b4:	movw	r1, #0
   1e4b8:	sdiv	r0, r1, r0
   1e4bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4c0:	cmp	r0, r1
   1e4c4:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e4c8:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e4cc:	ldr	r0, [fp, #8]
   1e4d0:	cmp	r0, #0
   1e4d4:	bne	1e4dc <__assert_fail@plt+0xd000>
   1e4d8:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e0:	cmp	r0, #0
   1e4e4:	bge	1e550 <__assert_fail@plt+0xd074>
   1e4e8:	b	1e4ec <__assert_fail@plt+0xd010>
   1e4ec:	b	1e534 <__assert_fail@plt+0xd058>
   1e4f0:	b	1e534 <__assert_fail@plt+0xd058>
   1e4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4f8:	cmn	r0, #1
   1e4fc:	bne	1e534 <__assert_fail@plt+0xd058>
   1e500:	b	1e504 <__assert_fail@plt+0xd028>
   1e504:	ldr	r0, [fp, #8]
   1e508:	add	r0, r0, #0
   1e50c:	movw	r1, #0
   1e510:	cmp	r1, r0
   1e514:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e518:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e51c:	ldr	r0, [fp, #8]
   1e520:	sub	r0, r0, #1
   1e524:	mvn	r1, #0
   1e528:	cmp	r1, r0
   1e52c:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e530:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e538:	movw	r1, #0
   1e53c:	sdiv	r0, r1, r0
   1e540:	ldr	r1, [fp, #8]
   1e544:	cmp	r0, r1
   1e548:	blt	1e568 <__assert_fail@plt+0xd08c>
   1e54c:	b	1e580 <__assert_fail@plt+0xd0a4>
   1e550:	ldr	r0, [fp, #8]
   1e554:	movw	r1, #65535	; 0xffff
   1e558:	sdiv	r0, r1, r0
   1e55c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e560:	cmp	r0, r1
   1e564:	bge	1e580 <__assert_fail@plt+0xd0a4>
   1e568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e56c:	ldr	r1, [fp, #8]
   1e570:	mul	r0, r0, r1
   1e574:	uxth	r0, r0
   1e578:	str	r0, [fp, #-28]	; 0xffffffe4
   1e57c:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1e580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e584:	ldr	r1, [fp, #8]
   1e588:	mul	r0, r0, r1
   1e58c:	uxth	r0, r0
   1e590:	str	r0, [fp, #-28]	; 0xffffffe4
   1e594:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1e598:	b	1e59c <__assert_fail@plt+0xd0c0>
   1e59c:	b	1e5a0 <__assert_fail@plt+0xd0c4>
   1e5a0:	ldr	r0, [fp, #8]
   1e5a4:	cmp	r0, #0
   1e5a8:	bge	1e6ac <__assert_fail@plt+0xd1d0>
   1e5ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5b0:	cmp	r0, #0
   1e5b4:	bge	1e640 <__assert_fail@plt+0xd164>
   1e5b8:	b	1e5bc <__assert_fail@plt+0xd0e0>
   1e5bc:	ldr	r0, [pc, #3128]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e5c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5c4:	ldr	r2, [fp, #8]
   1e5c8:	sdiv	r0, r0, r2
   1e5cc:	cmp	r1, r0
   1e5d0:	blt	1e73c <__assert_fail@plt+0xd260>
   1e5d4:	b	1e750 <__assert_fail@plt+0xd274>
   1e5d8:	b	1e5dc <__assert_fail@plt+0xd100>
   1e5dc:	ldr	r0, [pc, #3100]	; 1f200 <__assert_fail@plt+0xdd24>
   1e5e0:	ldr	r1, [fp, #8]
   1e5e4:	cmp	r1, r0
   1e5e8:	blt	1e600 <__assert_fail@plt+0xd124>
   1e5ec:	b	1e60c <__assert_fail@plt+0xd130>
   1e5f0:	ldr	r0, [fp, #8]
   1e5f4:	movw	r1, #0
   1e5f8:	cmp	r1, r0
   1e5fc:	bge	1e60c <__assert_fail@plt+0xd130>
   1e600:	movw	r0, #0
   1e604:	str	r0, [sp, #148]	; 0x94
   1e608:	b	1e624 <__assert_fail@plt+0xd148>
   1e60c:	ldr	r0, [pc, #3048]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e610:	ldr	r1, [fp, #8]
   1e614:	movw	r2, #0
   1e618:	sub	r1, r2, r1
   1e61c:	sdiv	r0, r0, r1
   1e620:	str	r0, [sp, #148]	; 0x94
   1e624:	ldr	r0, [sp, #148]	; 0x94
   1e628:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e62c:	mvn	r2, #0
   1e630:	sub	r1, r2, r1
   1e634:	cmp	r0, r1
   1e638:	ble	1e73c <__assert_fail@plt+0xd260>
   1e63c:	b	1e750 <__assert_fail@plt+0xd274>
   1e640:	ldr	r0, [fp, #8]
   1e644:	cmn	r0, #1
   1e648:	bne	1e690 <__assert_fail@plt+0xd1b4>
   1e64c:	b	1e650 <__assert_fail@plt+0xd174>
   1e650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e654:	add	r0, r0, #-2147483648	; 0x80000000
   1e658:	movw	r1, #0
   1e65c:	cmp	r1, r0
   1e660:	blt	1e73c <__assert_fail@plt+0xd260>
   1e664:	b	1e750 <__assert_fail@plt+0xd274>
   1e668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e66c:	movw	r1, #0
   1e670:	cmp	r1, r0
   1e674:	bge	1e750 <__assert_fail@plt+0xd274>
   1e678:	ldr	r0, [pc, #2940]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e67c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e680:	sub	r1, r1, #1
   1e684:	cmp	r0, r1
   1e688:	blt	1e73c <__assert_fail@plt+0xd260>
   1e68c:	b	1e750 <__assert_fail@plt+0xd274>
   1e690:	ldr	r0, [pc, #2924]	; 1f204 <__assert_fail@plt+0xdd28>
   1e694:	ldr	r1, [fp, #8]
   1e698:	sdiv	r0, r0, r1
   1e69c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e6a0:	cmp	r0, r1
   1e6a4:	blt	1e73c <__assert_fail@plt+0xd260>
   1e6a8:	b	1e750 <__assert_fail@plt+0xd274>
   1e6ac:	ldr	r0, [fp, #8]
   1e6b0:	cmp	r0, #0
   1e6b4:	bne	1e6bc <__assert_fail@plt+0xd1e0>
   1e6b8:	b	1e750 <__assert_fail@plt+0xd274>
   1e6bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6c0:	cmp	r0, #0
   1e6c4:	bge	1e724 <__assert_fail@plt+0xd248>
   1e6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6cc:	cmn	r0, #1
   1e6d0:	bne	1e708 <__assert_fail@plt+0xd22c>
   1e6d4:	b	1e6d8 <__assert_fail@plt+0xd1fc>
   1e6d8:	ldr	r0, [fp, #8]
   1e6dc:	add	r0, r0, #-2147483648	; 0x80000000
   1e6e0:	movw	r1, #0
   1e6e4:	cmp	r1, r0
   1e6e8:	blt	1e73c <__assert_fail@plt+0xd260>
   1e6ec:	b	1e750 <__assert_fail@plt+0xd274>
   1e6f0:	ldr	r0, [pc, #2820]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e6f4:	ldr	r1, [fp, #8]
   1e6f8:	sub	r1, r1, #1
   1e6fc:	cmp	r0, r1
   1e700:	blt	1e73c <__assert_fail@plt+0xd260>
   1e704:	b	1e750 <__assert_fail@plt+0xd274>
   1e708:	ldr	r0, [pc, #2804]	; 1f204 <__assert_fail@plt+0xdd28>
   1e70c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e710:	sdiv	r0, r0, r1
   1e714:	ldr	r1, [fp, #8]
   1e718:	cmp	r0, r1
   1e71c:	blt	1e73c <__assert_fail@plt+0xd260>
   1e720:	b	1e750 <__assert_fail@plt+0xd274>
   1e724:	ldr	r0, [pc, #2768]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e728:	ldr	r1, [fp, #8]
   1e72c:	sdiv	r0, r0, r1
   1e730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e734:	cmp	r0, r1
   1e738:	bge	1e750 <__assert_fail@plt+0xd274>
   1e73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e740:	ldr	r1, [fp, #8]
   1e744:	mul	r0, r0, r1
   1e748:	str	r0, [fp, #-28]	; 0xffffffe4
   1e74c:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1e750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e754:	ldr	r1, [fp, #8]
   1e758:	mul	r0, r0, r1
   1e75c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e760:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1e764:	ldr	r0, [fp, #8]
   1e768:	cmp	r0, #0
   1e76c:	bge	1e87c <__assert_fail@plt+0xd3a0>
   1e770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e774:	cmp	r0, #0
   1e778:	bge	1e804 <__assert_fail@plt+0xd328>
   1e77c:	b	1e79c <__assert_fail@plt+0xd2c0>
   1e780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e784:	ldr	r1, [fp, #8]
   1e788:	mvn	r2, #0
   1e78c:	udiv	r1, r2, r1
   1e790:	cmp	r0, r1
   1e794:	bcc	1e918 <__assert_fail@plt+0xd43c>
   1e798:	b	1e92c <__assert_fail@plt+0xd450>
   1e79c:	b	1e7a0 <__assert_fail@plt+0xd2c4>
   1e7a0:	ldr	r0, [pc, #2648]	; 1f200 <__assert_fail@plt+0xdd24>
   1e7a4:	ldr	r1, [fp, #8]
   1e7a8:	cmp	r1, r0
   1e7ac:	blt	1e7c4 <__assert_fail@plt+0xd2e8>
   1e7b0:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e7b4:	ldr	r0, [fp, #8]
   1e7b8:	movw	r1, #0
   1e7bc:	cmp	r1, r0
   1e7c0:	bge	1e7d0 <__assert_fail@plt+0xd2f4>
   1e7c4:	movw	r0, #1
   1e7c8:	str	r0, [sp, #144]	; 0x90
   1e7cc:	b	1e7e8 <__assert_fail@plt+0xd30c>
   1e7d0:	ldr	r0, [fp, #8]
   1e7d4:	movw	r1, #0
   1e7d8:	sub	r0, r1, r0
   1e7dc:	mvn	r1, #0
   1e7e0:	udiv	r0, r1, r0
   1e7e4:	str	r0, [sp, #144]	; 0x90
   1e7e8:	ldr	r0, [sp, #144]	; 0x90
   1e7ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7f0:	mvn	r2, #0
   1e7f4:	sub	r1, r2, r1
   1e7f8:	cmp	r0, r1
   1e7fc:	bls	1e918 <__assert_fail@plt+0xd43c>
   1e800:	b	1e92c <__assert_fail@plt+0xd450>
   1e804:	b	1e808 <__assert_fail@plt+0xd32c>
   1e808:	b	1e860 <__assert_fail@plt+0xd384>
   1e80c:	b	1e860 <__assert_fail@plt+0xd384>
   1e810:	ldr	r0, [fp, #8]
   1e814:	cmn	r0, #1
   1e818:	bne	1e860 <__assert_fail@plt+0xd384>
   1e81c:	b	1e820 <__assert_fail@plt+0xd344>
   1e820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e824:	add	r0, r0, #0
   1e828:	movw	r1, #0
   1e82c:	cmp	r1, r0
   1e830:	blt	1e918 <__assert_fail@plt+0xd43c>
   1e834:	b	1e92c <__assert_fail@plt+0xd450>
   1e838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e83c:	movw	r1, #0
   1e840:	cmp	r1, r0
   1e844:	bge	1e92c <__assert_fail@plt+0xd450>
   1e848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e84c:	sub	r0, r0, #1
   1e850:	mvn	r1, #0
   1e854:	cmp	r1, r0
   1e858:	blt	1e918 <__assert_fail@plt+0xd43c>
   1e85c:	b	1e92c <__assert_fail@plt+0xd450>
   1e860:	ldr	r0, [fp, #8]
   1e864:	movw	r1, #0
   1e868:	sdiv	r0, r1, r0
   1e86c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e870:	cmp	r0, r1
   1e874:	blt	1e918 <__assert_fail@plt+0xd43c>
   1e878:	b	1e92c <__assert_fail@plt+0xd450>
   1e87c:	ldr	r0, [fp, #8]
   1e880:	cmp	r0, #0
   1e884:	bne	1e88c <__assert_fail@plt+0xd3b0>
   1e888:	b	1e92c <__assert_fail@plt+0xd450>
   1e88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e890:	cmp	r0, #0
   1e894:	bge	1e900 <__assert_fail@plt+0xd424>
   1e898:	b	1e89c <__assert_fail@plt+0xd3c0>
   1e89c:	b	1e8e4 <__assert_fail@plt+0xd408>
   1e8a0:	b	1e8e4 <__assert_fail@plt+0xd408>
   1e8a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8a8:	cmn	r0, #1
   1e8ac:	bne	1e8e4 <__assert_fail@plt+0xd408>
   1e8b0:	b	1e8b4 <__assert_fail@plt+0xd3d8>
   1e8b4:	ldr	r0, [fp, #8]
   1e8b8:	add	r0, r0, #0
   1e8bc:	movw	r1, #0
   1e8c0:	cmp	r1, r0
   1e8c4:	blt	1e918 <__assert_fail@plt+0xd43c>
   1e8c8:	b	1e92c <__assert_fail@plt+0xd450>
   1e8cc:	ldr	r0, [fp, #8]
   1e8d0:	sub	r0, r0, #1
   1e8d4:	mvn	r1, #0
   1e8d8:	cmp	r1, r0
   1e8dc:	blt	1e918 <__assert_fail@plt+0xd43c>
   1e8e0:	b	1e92c <__assert_fail@plt+0xd450>
   1e8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8e8:	movw	r1, #0
   1e8ec:	sdiv	r0, r1, r0
   1e8f0:	ldr	r1, [fp, #8]
   1e8f4:	cmp	r0, r1
   1e8f8:	blt	1e918 <__assert_fail@plt+0xd43c>
   1e8fc:	b	1e92c <__assert_fail@plt+0xd450>
   1e900:	ldr	r0, [fp, #8]
   1e904:	mvn	r1, #0
   1e908:	udiv	r0, r1, r0
   1e90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e910:	cmp	r0, r1
   1e914:	bcs	1e92c <__assert_fail@plt+0xd450>
   1e918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e91c:	ldr	r1, [fp, #8]
   1e920:	mul	r0, r0, r1
   1e924:	str	r0, [fp, #-28]	; 0xffffffe4
   1e928:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1e92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e930:	ldr	r1, [fp, #8]
   1e934:	mul	r0, r0, r1
   1e938:	str	r0, [fp, #-28]	; 0xffffffe4
   1e93c:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1e940:	b	1e944 <__assert_fail@plt+0xd468>
   1e944:	b	1e948 <__assert_fail@plt+0xd46c>
   1e948:	ldr	r0, [fp, #8]
   1e94c:	cmp	r0, #0
   1e950:	bge	1ea54 <__assert_fail@plt+0xd578>
   1e954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e958:	cmp	r0, #0
   1e95c:	bge	1e9e8 <__assert_fail@plt+0xd50c>
   1e960:	b	1e964 <__assert_fail@plt+0xd488>
   1e964:	ldr	r0, [pc, #2192]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e96c:	ldr	r2, [fp, #8]
   1e970:	sdiv	r0, r0, r2
   1e974:	cmp	r1, r0
   1e978:	blt	1eae4 <__assert_fail@plt+0xd608>
   1e97c:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1e980:	b	1e984 <__assert_fail@plt+0xd4a8>
   1e984:	ldr	r0, [pc, #2164]	; 1f200 <__assert_fail@plt+0xdd24>
   1e988:	ldr	r1, [fp, #8]
   1e98c:	cmp	r1, r0
   1e990:	blt	1e9a8 <__assert_fail@plt+0xd4cc>
   1e994:	b	1e9b4 <__assert_fail@plt+0xd4d8>
   1e998:	ldr	r0, [fp, #8]
   1e99c:	movw	r1, #0
   1e9a0:	cmp	r1, r0
   1e9a4:	bge	1e9b4 <__assert_fail@plt+0xd4d8>
   1e9a8:	movw	r0, #0
   1e9ac:	str	r0, [sp, #140]	; 0x8c
   1e9b0:	b	1e9cc <__assert_fail@plt+0xd4f0>
   1e9b4:	ldr	r0, [pc, #2112]	; 1f1fc <__assert_fail@plt+0xdd20>
   1e9b8:	ldr	r1, [fp, #8]
   1e9bc:	movw	r2, #0
   1e9c0:	sub	r1, r2, r1
   1e9c4:	sdiv	r0, r0, r1
   1e9c8:	str	r0, [sp, #140]	; 0x8c
   1e9cc:	ldr	r0, [sp, #140]	; 0x8c
   1e9d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9d4:	mvn	r2, #0
   1e9d8:	sub	r1, r2, r1
   1e9dc:	cmp	r0, r1
   1e9e0:	ble	1eae4 <__assert_fail@plt+0xd608>
   1e9e4:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1e9e8:	ldr	r0, [fp, #8]
   1e9ec:	cmn	r0, #1
   1e9f0:	bne	1ea38 <__assert_fail@plt+0xd55c>
   1e9f4:	b	1e9f8 <__assert_fail@plt+0xd51c>
   1e9f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9fc:	add	r0, r0, #-2147483648	; 0x80000000
   1ea00:	movw	r1, #0
   1ea04:	cmp	r1, r0
   1ea08:	blt	1eae4 <__assert_fail@plt+0xd608>
   1ea0c:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1ea10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea14:	movw	r1, #0
   1ea18:	cmp	r1, r0
   1ea1c:	bge	1eaf8 <__assert_fail@plt+0xd61c>
   1ea20:	ldr	r0, [pc, #2004]	; 1f1fc <__assert_fail@plt+0xdd20>
   1ea24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea28:	sub	r1, r1, #1
   1ea2c:	cmp	r0, r1
   1ea30:	blt	1eae4 <__assert_fail@plt+0xd608>
   1ea34:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1ea38:	ldr	r0, [pc, #1988]	; 1f204 <__assert_fail@plt+0xdd28>
   1ea3c:	ldr	r1, [fp, #8]
   1ea40:	sdiv	r0, r0, r1
   1ea44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea48:	cmp	r0, r1
   1ea4c:	blt	1eae4 <__assert_fail@plt+0xd608>
   1ea50:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1ea54:	ldr	r0, [fp, #8]
   1ea58:	cmp	r0, #0
   1ea5c:	bne	1ea64 <__assert_fail@plt+0xd588>
   1ea60:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1ea64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea68:	cmp	r0, #0
   1ea6c:	bge	1eacc <__assert_fail@plt+0xd5f0>
   1ea70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea74:	cmn	r0, #1
   1ea78:	bne	1eab0 <__assert_fail@plt+0xd5d4>
   1ea7c:	b	1ea80 <__assert_fail@plt+0xd5a4>
   1ea80:	ldr	r0, [fp, #8]
   1ea84:	add	r0, r0, #-2147483648	; 0x80000000
   1ea88:	movw	r1, #0
   1ea8c:	cmp	r1, r0
   1ea90:	blt	1eae4 <__assert_fail@plt+0xd608>
   1ea94:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1ea98:	ldr	r0, [pc, #1884]	; 1f1fc <__assert_fail@plt+0xdd20>
   1ea9c:	ldr	r1, [fp, #8]
   1eaa0:	sub	r1, r1, #1
   1eaa4:	cmp	r0, r1
   1eaa8:	blt	1eae4 <__assert_fail@plt+0xd608>
   1eaac:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1eab0:	ldr	r0, [pc, #1868]	; 1f204 <__assert_fail@plt+0xdd28>
   1eab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eab8:	sdiv	r0, r0, r1
   1eabc:	ldr	r1, [fp, #8]
   1eac0:	cmp	r0, r1
   1eac4:	blt	1eae4 <__assert_fail@plt+0xd608>
   1eac8:	b	1eaf8 <__assert_fail@plt+0xd61c>
   1eacc:	ldr	r0, [pc, #1832]	; 1f1fc <__assert_fail@plt+0xdd20>
   1ead0:	ldr	r1, [fp, #8]
   1ead4:	sdiv	r0, r0, r1
   1ead8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eadc:	cmp	r0, r1
   1eae0:	bge	1eaf8 <__assert_fail@plt+0xd61c>
   1eae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eae8:	ldr	r1, [fp, #8]
   1eaec:	mul	r0, r0, r1
   1eaf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1eaf4:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1eaf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eafc:	ldr	r1, [fp, #8]
   1eb00:	mul	r0, r0, r1
   1eb04:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb08:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1eb0c:	ldr	r0, [fp, #8]
   1eb10:	cmp	r0, #0
   1eb14:	bge	1ec24 <__assert_fail@plt+0xd748>
   1eb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb1c:	cmp	r0, #0
   1eb20:	bge	1ebac <__assert_fail@plt+0xd6d0>
   1eb24:	b	1eb44 <__assert_fail@plt+0xd668>
   1eb28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb2c:	ldr	r1, [fp, #8]
   1eb30:	mvn	r2, #0
   1eb34:	udiv	r1, r2, r1
   1eb38:	cmp	r0, r1
   1eb3c:	bcc	1ecc0 <__assert_fail@plt+0xd7e4>
   1eb40:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1eb44:	b	1eb48 <__assert_fail@plt+0xd66c>
   1eb48:	ldr	r0, [pc, #1712]	; 1f200 <__assert_fail@plt+0xdd24>
   1eb4c:	ldr	r1, [fp, #8]
   1eb50:	cmp	r1, r0
   1eb54:	blt	1eb6c <__assert_fail@plt+0xd690>
   1eb58:	b	1eb78 <__assert_fail@plt+0xd69c>
   1eb5c:	ldr	r0, [fp, #8]
   1eb60:	movw	r1, #0
   1eb64:	cmp	r1, r0
   1eb68:	bge	1eb78 <__assert_fail@plt+0xd69c>
   1eb6c:	movw	r0, #1
   1eb70:	str	r0, [sp, #136]	; 0x88
   1eb74:	b	1eb90 <__assert_fail@plt+0xd6b4>
   1eb78:	ldr	r0, [fp, #8]
   1eb7c:	movw	r1, #0
   1eb80:	sub	r0, r1, r0
   1eb84:	mvn	r1, #0
   1eb88:	udiv	r0, r1, r0
   1eb8c:	str	r0, [sp, #136]	; 0x88
   1eb90:	ldr	r0, [sp, #136]	; 0x88
   1eb94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb98:	mvn	r2, #0
   1eb9c:	sub	r1, r2, r1
   1eba0:	cmp	r0, r1
   1eba4:	bls	1ecc0 <__assert_fail@plt+0xd7e4>
   1eba8:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ebac:	b	1ebb0 <__assert_fail@plt+0xd6d4>
   1ebb0:	b	1ec08 <__assert_fail@plt+0xd72c>
   1ebb4:	b	1ec08 <__assert_fail@plt+0xd72c>
   1ebb8:	ldr	r0, [fp, #8]
   1ebbc:	cmn	r0, #1
   1ebc0:	bne	1ec08 <__assert_fail@plt+0xd72c>
   1ebc4:	b	1ebc8 <__assert_fail@plt+0xd6ec>
   1ebc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebcc:	add	r0, r0, #0
   1ebd0:	movw	r1, #0
   1ebd4:	cmp	r1, r0
   1ebd8:	blt	1ecc0 <__assert_fail@plt+0xd7e4>
   1ebdc:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ebe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe4:	movw	r1, #0
   1ebe8:	cmp	r1, r0
   1ebec:	bge	1ecd4 <__assert_fail@plt+0xd7f8>
   1ebf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebf4:	sub	r0, r0, #1
   1ebf8:	mvn	r1, #0
   1ebfc:	cmp	r1, r0
   1ec00:	blt	1ecc0 <__assert_fail@plt+0xd7e4>
   1ec04:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ec08:	ldr	r0, [fp, #8]
   1ec0c:	movw	r1, #0
   1ec10:	sdiv	r0, r1, r0
   1ec14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec18:	cmp	r0, r1
   1ec1c:	blt	1ecc0 <__assert_fail@plt+0xd7e4>
   1ec20:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ec24:	ldr	r0, [fp, #8]
   1ec28:	cmp	r0, #0
   1ec2c:	bne	1ec34 <__assert_fail@plt+0xd758>
   1ec30:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ec34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec38:	cmp	r0, #0
   1ec3c:	bge	1eca8 <__assert_fail@plt+0xd7cc>
   1ec40:	b	1ec44 <__assert_fail@plt+0xd768>
   1ec44:	b	1ec8c <__assert_fail@plt+0xd7b0>
   1ec48:	b	1ec8c <__assert_fail@plt+0xd7b0>
   1ec4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec50:	cmn	r0, #1
   1ec54:	bne	1ec8c <__assert_fail@plt+0xd7b0>
   1ec58:	b	1ec5c <__assert_fail@plt+0xd780>
   1ec5c:	ldr	r0, [fp, #8]
   1ec60:	add	r0, r0, #0
   1ec64:	movw	r1, #0
   1ec68:	cmp	r1, r0
   1ec6c:	blt	1ecc0 <__assert_fail@plt+0xd7e4>
   1ec70:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ec74:	ldr	r0, [fp, #8]
   1ec78:	sub	r0, r0, #1
   1ec7c:	mvn	r1, #0
   1ec80:	cmp	r1, r0
   1ec84:	blt	1ecc0 <__assert_fail@plt+0xd7e4>
   1ec88:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1ec8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec90:	movw	r1, #0
   1ec94:	sdiv	r0, r1, r0
   1ec98:	ldr	r1, [fp, #8]
   1ec9c:	cmp	r0, r1
   1eca0:	blt	1ecc0 <__assert_fail@plt+0xd7e4>
   1eca4:	b	1ecd4 <__assert_fail@plt+0xd7f8>
   1eca8:	ldr	r0, [fp, #8]
   1ecac:	mvn	r1, #0
   1ecb0:	udiv	r0, r1, r0
   1ecb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecb8:	cmp	r0, r1
   1ecbc:	bcs	1ecd4 <__assert_fail@plt+0xd7f8>
   1ecc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecc4:	ldr	r1, [fp, #8]
   1ecc8:	mul	r0, r0, r1
   1eccc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecd0:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1ecd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecd8:	ldr	r1, [fp, #8]
   1ecdc:	mul	r0, r0, r1
   1ece0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ece4:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1ece8:	b	1ecec <__assert_fail@plt+0xd810>
   1ecec:	ldr	r0, [fp, #8]
   1ecf0:	cmp	r0, #0
   1ecf4:	bge	1ee7c <__assert_fail@plt+0xd9a0>
   1ecf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecfc:	cmp	r0, #0
   1ed00:	bge	1ede8 <__assert_fail@plt+0xd90c>
   1ed04:	b	1ed08 <__assert_fail@plt+0xd82c>
   1ed08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed0c:	ldr	r1, [fp, #8]
   1ed10:	asr	r3, r1, #31
   1ed14:	mvn	r2, #0
   1ed18:	mvn	ip, #-2147483648	; 0x80000000
   1ed1c:	str	r0, [sp, #132]	; 0x84
   1ed20:	mov	r0, r2
   1ed24:	str	r1, [sp, #128]	; 0x80
   1ed28:	mov	r1, ip
   1ed2c:	ldr	r2, [sp, #128]	; 0x80
   1ed30:	bl	24508 <__assert_fail@plt+0x1302c>
   1ed34:	ldr	r2, [sp, #132]	; 0x84
   1ed38:	subs	r0, r2, r0
   1ed3c:	rscs	r1, r1, r2, asr #31
   1ed40:	str	r0, [sp, #124]	; 0x7c
   1ed44:	str	r1, [sp, #120]	; 0x78
   1ed48:	blt	1ef5c <__assert_fail@plt+0xda80>
   1ed4c:	b	1ef70 <__assert_fail@plt+0xda94>
   1ed50:	b	1ed54 <__assert_fail@plt+0xd878>
   1ed54:	ldr	r0, [pc, #1188]	; 1f200 <__assert_fail@plt+0xdd24>
   1ed58:	ldr	r1, [fp, #8]
   1ed5c:	cmp	r1, r0
   1ed60:	blt	1ed78 <__assert_fail@plt+0xd89c>
   1ed64:	b	1ed8c <__assert_fail@plt+0xd8b0>
   1ed68:	ldr	r0, [fp, #8]
   1ed6c:	movw	r1, #0
   1ed70:	cmp	r1, r0
   1ed74:	bge	1ed8c <__assert_fail@plt+0xd8b0>
   1ed78:	mov	r0, #0
   1ed7c:	mvn	r1, #0
   1ed80:	str	r1, [sp, #116]	; 0x74
   1ed84:	str	r0, [sp, #112]	; 0x70
   1ed88:	b	1edc0 <__assert_fail@plt+0xd8e4>
   1ed8c:	ldr	r0, [fp, #8]
   1ed90:	rsb	r0, r0, #0
   1ed94:	asr	r3, r0, #31
   1ed98:	mvn	r1, #0
   1ed9c:	mvn	r2, #-2147483648	; 0x80000000
   1eda0:	str	r0, [sp, #108]	; 0x6c
   1eda4:	mov	r0, r1
   1eda8:	mov	r1, r2
   1edac:	ldr	r2, [sp, #108]	; 0x6c
   1edb0:	bl	24508 <__assert_fail@plt+0x1302c>
   1edb4:	str	r0, [sp, #116]	; 0x74
   1edb8:	str	r1, [sp, #112]	; 0x70
   1edbc:	b	1edc0 <__assert_fail@plt+0xd8e4>
   1edc0:	ldr	r0, [sp, #112]	; 0x70
   1edc4:	ldr	r1, [sp, #116]	; 0x74
   1edc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edcc:	mvn	r2, r2
   1edd0:	subs	r1, r2, r1
   1edd4:	rscs	r0, r0, r2, asr #31
   1edd8:	str	r1, [sp, #104]	; 0x68
   1eddc:	str	r0, [sp, #100]	; 0x64
   1ede0:	bge	1ef5c <__assert_fail@plt+0xda80>
   1ede4:	b	1ef70 <__assert_fail@plt+0xda94>
   1ede8:	ldr	r0, [fp, #8]
   1edec:	cmn	r0, #1
   1edf0:	bne	1ee3c <__assert_fail@plt+0xd960>
   1edf4:	b	1edf8 <__assert_fail@plt+0xd91c>
   1edf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edfc:	mov	r1, #-2147483648	; 0x80000000
   1ee00:	add	r1, r1, r0, asr #31
   1ee04:	rsbs	r0, r0, #0
   1ee08:	rscs	r1, r1, #0
   1ee0c:	str	r0, [sp, #96]	; 0x60
   1ee10:	str	r1, [sp, #92]	; 0x5c
   1ee14:	blt	1ef5c <__assert_fail@plt+0xda80>
   1ee18:	b	1ef70 <__assert_fail@plt+0xda94>
   1ee1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee20:	movw	r1, #0
   1ee24:	cmp	r1, r0
   1ee28:	bge	1ef70 <__assert_fail@plt+0xda94>
   1ee2c:	mov	r0, #0
   1ee30:	cmp	r0, #0
   1ee34:	bne	1ef5c <__assert_fail@plt+0xda80>
   1ee38:	b	1ef70 <__assert_fail@plt+0xda94>
   1ee3c:	ldr	r0, [fp, #8]
   1ee40:	asr	r3, r0, #31
   1ee44:	mov	r1, #0
   1ee48:	mov	r2, #-2147483648	; 0x80000000
   1ee4c:	str	r0, [sp, #88]	; 0x58
   1ee50:	mov	r0, r1
   1ee54:	mov	r1, r2
   1ee58:	ldr	r2, [sp, #88]	; 0x58
   1ee5c:	bl	24508 <__assert_fail@plt+0x1302c>
   1ee60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee64:	subs	r0, r0, r2
   1ee68:	sbcs	r1, r1, r2, asr #31
   1ee6c:	str	r0, [sp, #84]	; 0x54
   1ee70:	str	r1, [sp, #80]	; 0x50
   1ee74:	blt	1ef5c <__assert_fail@plt+0xda80>
   1ee78:	b	1ef70 <__assert_fail@plt+0xda94>
   1ee7c:	ldr	r0, [fp, #8]
   1ee80:	cmp	r0, #0
   1ee84:	bne	1ee8c <__assert_fail@plt+0xd9b0>
   1ee88:	b	1ef70 <__assert_fail@plt+0xda94>
   1ee8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee90:	cmp	r0, #0
   1ee94:	bge	1ef1c <__assert_fail@plt+0xda40>
   1ee98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee9c:	cmn	r0, #1
   1eea0:	bne	1eedc <__assert_fail@plt+0xda00>
   1eea4:	b	1eea8 <__assert_fail@plt+0xd9cc>
   1eea8:	ldr	r0, [fp, #8]
   1eeac:	mov	r1, #-2147483648	; 0x80000000
   1eeb0:	add	r1, r1, r0, asr #31
   1eeb4:	rsbs	r0, r0, #0
   1eeb8:	rscs	r1, r1, #0
   1eebc:	str	r0, [sp, #76]	; 0x4c
   1eec0:	str	r1, [sp, #72]	; 0x48
   1eec4:	blt	1ef5c <__assert_fail@plt+0xda80>
   1eec8:	b	1ef70 <__assert_fail@plt+0xda94>
   1eecc:	mov	r0, #0
   1eed0:	cmp	r0, #0
   1eed4:	bne	1ef5c <__assert_fail@plt+0xda80>
   1eed8:	b	1ef70 <__assert_fail@plt+0xda94>
   1eedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eee0:	asr	r3, r0, #31
   1eee4:	mov	r1, #0
   1eee8:	mov	r2, #-2147483648	; 0x80000000
   1eeec:	str	r0, [sp, #68]	; 0x44
   1eef0:	mov	r0, r1
   1eef4:	mov	r1, r2
   1eef8:	ldr	r2, [sp, #68]	; 0x44
   1eefc:	bl	24508 <__assert_fail@plt+0x1302c>
   1ef00:	ldr	r2, [fp, #8]
   1ef04:	subs	r0, r0, r2
   1ef08:	sbcs	r1, r1, r2, asr #31
   1ef0c:	str	r0, [sp, #64]	; 0x40
   1ef10:	str	r1, [sp, #60]	; 0x3c
   1ef14:	blt	1ef5c <__assert_fail@plt+0xda80>
   1ef18:	b	1ef70 <__assert_fail@plt+0xda94>
   1ef1c:	ldr	r0, [fp, #8]
   1ef20:	asr	r3, r0, #31
   1ef24:	mvn	r1, #0
   1ef28:	mvn	r2, #-2147483648	; 0x80000000
   1ef2c:	str	r0, [sp, #56]	; 0x38
   1ef30:	mov	r0, r1
   1ef34:	mov	r1, r2
   1ef38:	ldr	r2, [sp, #56]	; 0x38
   1ef3c:	bl	24508 <__assert_fail@plt+0x1302c>
   1ef40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ef44:	subs	r0, r0, r2
   1ef48:	sbcs	r1, r1, r2, asr #31
   1ef4c:	str	r0, [sp, #52]	; 0x34
   1ef50:	str	r1, [sp, #48]	; 0x30
   1ef54:	bge	1ef70 <__assert_fail@plt+0xda94>
   1ef58:	b	1ef5c <__assert_fail@plt+0xda80>
   1ef5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef60:	ldr	r1, [fp, #8]
   1ef64:	mul	r0, r0, r1
   1ef68:	str	r0, [fp, #-28]	; 0xffffffe4
   1ef6c:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1ef70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef74:	ldr	r1, [fp, #8]
   1ef78:	mul	r0, r0, r1
   1ef7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ef80:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1ef84:	ldr	r0, [fp, #8]
   1ef88:	cmp	r0, #0
   1ef8c:	bge	1f0ec <__assert_fail@plt+0xdc10>
   1ef90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef94:	cmp	r0, #0
   1ef98:	bge	1f074 <__assert_fail@plt+0xdb98>
   1ef9c:	b	1efe4 <__assert_fail@plt+0xdb08>
   1efa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efa4:	ldr	r1, [fp, #8]
   1efa8:	asr	r3, r1, #31
   1efac:	mvn	r2, #0
   1efb0:	str	r0, [sp, #44]	; 0x2c
   1efb4:	mov	r0, r2
   1efb8:	str	r1, [sp, #40]	; 0x28
   1efbc:	mov	r1, r2
   1efc0:	ldr	r2, [sp, #40]	; 0x28
   1efc4:	bl	245dc <__assert_fail@plt+0x13100>
   1efc8:	ldr	r2, [sp, #44]	; 0x2c
   1efcc:	subs	r0, r2, r0
   1efd0:	rscs	r1, r1, r2, asr #31
   1efd4:	str	r0, [sp, #36]	; 0x24
   1efd8:	str	r1, [sp, #32]
   1efdc:	bcc	1f1a8 <__assert_fail@plt+0xdccc>
   1efe0:	b	1f1bc <__assert_fail@plt+0xdce0>
   1efe4:	b	1efe8 <__assert_fail@plt+0xdb0c>
   1efe8:	ldr	r0, [pc, #528]	; 1f200 <__assert_fail@plt+0xdd24>
   1efec:	ldr	r1, [fp, #8]
   1eff0:	cmp	r1, r0
   1eff4:	blt	1f00c <__assert_fail@plt+0xdb30>
   1eff8:	b	1f020 <__assert_fail@plt+0xdb44>
   1effc:	ldr	r0, [fp, #8]
   1f000:	movw	r1, #0
   1f004:	cmp	r1, r0
   1f008:	bge	1f020 <__assert_fail@plt+0xdb44>
   1f00c:	mov	r0, #1
   1f010:	mvn	r1, #0
   1f014:	str	r1, [sp, #28]
   1f018:	str	r0, [sp, #24]
   1f01c:	b	1f04c <__assert_fail@plt+0xdb70>
   1f020:	ldr	r0, [fp, #8]
   1f024:	rsb	r0, r0, #0
   1f028:	asr	r3, r0, #31
   1f02c:	mvn	r1, #0
   1f030:	str	r0, [sp, #20]
   1f034:	mov	r0, r1
   1f038:	ldr	r2, [sp, #20]
   1f03c:	bl	245dc <__assert_fail@plt+0x13100>
   1f040:	str	r0, [sp, #28]
   1f044:	str	r1, [sp, #24]
   1f048:	b	1f04c <__assert_fail@plt+0xdb70>
   1f04c:	ldr	r0, [sp, #24]
   1f050:	ldr	r1, [sp, #28]
   1f054:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f058:	mvn	r2, r2
   1f05c:	subs	r1, r2, r1
   1f060:	rscs	r0, r0, r2, asr #31
   1f064:	str	r1, [sp, #16]
   1f068:	str	r0, [sp, #12]
   1f06c:	bcs	1f1a8 <__assert_fail@plt+0xdccc>
   1f070:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f074:	b	1f078 <__assert_fail@plt+0xdb9c>
   1f078:	b	1f0d0 <__assert_fail@plt+0xdbf4>
   1f07c:	b	1f0d0 <__assert_fail@plt+0xdbf4>
   1f080:	ldr	r0, [fp, #8]
   1f084:	cmn	r0, #1
   1f088:	bne	1f0d0 <__assert_fail@plt+0xdbf4>
   1f08c:	b	1f090 <__assert_fail@plt+0xdbb4>
   1f090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f094:	add	r0, r0, #0
   1f098:	movw	r1, #0
   1f09c:	cmp	r1, r0
   1f0a0:	blt	1f1a8 <__assert_fail@plt+0xdccc>
   1f0a4:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0ac:	movw	r1, #0
   1f0b0:	cmp	r1, r0
   1f0b4:	bge	1f1bc <__assert_fail@plt+0xdce0>
   1f0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0bc:	sub	r0, r0, #1
   1f0c0:	mvn	r1, #0
   1f0c4:	cmp	r1, r0
   1f0c8:	blt	1f1a8 <__assert_fail@plt+0xdccc>
   1f0cc:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f0d0:	ldr	r0, [fp, #8]
   1f0d4:	movw	r1, #0
   1f0d8:	sdiv	r0, r1, r0
   1f0dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0e0:	cmp	r0, r1
   1f0e4:	blt	1f1a8 <__assert_fail@plt+0xdccc>
   1f0e8:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f0ec:	ldr	r0, [fp, #8]
   1f0f0:	cmp	r0, #0
   1f0f4:	bne	1f0fc <__assert_fail@plt+0xdc20>
   1f0f8:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f100:	cmp	r0, #0
   1f104:	bge	1f170 <__assert_fail@plt+0xdc94>
   1f108:	b	1f10c <__assert_fail@plt+0xdc30>
   1f10c:	b	1f154 <__assert_fail@plt+0xdc78>
   1f110:	b	1f154 <__assert_fail@plt+0xdc78>
   1f114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f118:	cmn	r0, #1
   1f11c:	bne	1f154 <__assert_fail@plt+0xdc78>
   1f120:	b	1f124 <__assert_fail@plt+0xdc48>
   1f124:	ldr	r0, [fp, #8]
   1f128:	add	r0, r0, #0
   1f12c:	movw	r1, #0
   1f130:	cmp	r1, r0
   1f134:	blt	1f1a8 <__assert_fail@plt+0xdccc>
   1f138:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f13c:	ldr	r0, [fp, #8]
   1f140:	sub	r0, r0, #1
   1f144:	mvn	r1, #0
   1f148:	cmp	r1, r0
   1f14c:	blt	1f1a8 <__assert_fail@plt+0xdccc>
   1f150:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f158:	movw	r1, #0
   1f15c:	sdiv	r0, r1, r0
   1f160:	ldr	r1, [fp, #8]
   1f164:	cmp	r0, r1
   1f168:	blt	1f1a8 <__assert_fail@plt+0xdccc>
   1f16c:	b	1f1bc <__assert_fail@plt+0xdce0>
   1f170:	ldr	r0, [fp, #8]
   1f174:	asr	r3, r0, #31
   1f178:	mvn	r1, #0
   1f17c:	str	r0, [sp, #8]
   1f180:	mov	r0, r1
   1f184:	ldr	r2, [sp, #8]
   1f188:	bl	245dc <__assert_fail@plt+0x13100>
   1f18c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f190:	subs	r0, r0, r2
   1f194:	sbcs	r1, r1, r2, asr #31
   1f198:	str	r0, [sp, #4]
   1f19c:	str	r1, [sp]
   1f1a0:	bcs	1f1bc <__assert_fail@plt+0xdce0>
   1f1a4:	b	1f1a8 <__assert_fail@plt+0xdccc>
   1f1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1ac:	ldr	r1, [fp, #8]
   1f1b0:	mul	r0, r0, r1
   1f1b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f1b8:	b	1f1d0 <__assert_fail@plt+0xdcf4>
   1f1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1c0:	ldr	r1, [fp, #8]
   1f1c4:	mul	r0, r0, r1
   1f1c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1f1cc:	b	1f1d4 <__assert_fail@plt+0xdcf8>
   1f1d0:	bl	1f3ac <__assert_fail@plt+0xded0>
   1f1d4:	ldr	r0, [fp, #-4]
   1f1d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f1dc:	bl	1c668 <__assert_fail@plt+0xb18c>
   1f1e0:	str	r0, [fp, #-4]
   1f1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1e8:	ldr	r1, [fp, #-8]
   1f1ec:	str	r0, [r1]
   1f1f0:	ldr	r0, [fp, #-4]
   1f1f4:	mov	sp, fp
   1f1f8:	pop	{fp, pc}
   1f1fc:	svcvc	0x00ffffff
   1f200:	andhi	r0, r0, r1
   1f204:	andhi	r0, r0, r0
   1f208:			; <UNDEFINED> instruction: 0xffff8000
   1f20c:	push	{fp, lr}
   1f210:	mov	fp, sp
   1f214:	sub	sp, sp, #8
   1f218:	str	r0, [sp, #4]
   1f21c:	ldr	r0, [sp, #4]
   1f220:	movw	r1, #1
   1f224:	bl	1f230 <__assert_fail@plt+0xdd54>
   1f228:	mov	sp, fp
   1f22c:	pop	{fp, pc}
   1f230:	push	{fp, lr}
   1f234:	mov	fp, sp
   1f238:	sub	sp, sp, #8
   1f23c:	str	r0, [sp, #4]
   1f240:	str	r1, [sp]
   1f244:	ldr	r0, [sp, #4]
   1f248:	ldr	r1, [sp]
   1f24c:	bl	21724 <__assert_fail@plt+0x10248>
   1f250:	bl	1c5f4 <__assert_fail@plt+0xb118>
   1f254:	mov	sp, fp
   1f258:	pop	{fp, pc}
   1f25c:	push	{fp, lr}
   1f260:	mov	fp, sp
   1f264:	sub	sp, sp, #8
   1f268:	str	r0, [sp, #4]
   1f26c:	ldr	r0, [sp, #4]
   1f270:	movw	r1, #1
   1f274:	bl	1f280 <__assert_fail@plt+0xdda4>
   1f278:	mov	sp, fp
   1f27c:	pop	{fp, pc}
   1f280:	push	{fp, lr}
   1f284:	mov	fp, sp
   1f288:	sub	sp, sp, #8
   1f28c:	str	r0, [sp, #4]
   1f290:	str	r1, [sp]
   1f294:	ldr	r0, [sp, #4]
   1f298:	ldr	r1, [sp]
   1f29c:	bl	226fc <__assert_fail@plt+0x11220>
   1f2a0:	bl	1c5f4 <__assert_fail@plt+0xb118>
   1f2a4:	mov	sp, fp
   1f2a8:	pop	{fp, pc}
   1f2ac:	push	{fp, lr}
   1f2b0:	mov	fp, sp
   1f2b4:	sub	sp, sp, #16
   1f2b8:	str	r0, [fp, #-4]
   1f2bc:	str	r1, [sp, #8]
   1f2c0:	ldr	r0, [sp, #8]
   1f2c4:	bl	1c5d0 <__assert_fail@plt+0xb0f4>
   1f2c8:	ldr	r1, [fp, #-4]
   1f2cc:	ldr	r2, [sp, #8]
   1f2d0:	str	r0, [sp, #4]
   1f2d4:	bl	1123c <memcpy@plt>
   1f2d8:	ldr	r0, [sp, #4]
   1f2dc:	mov	sp, fp
   1f2e0:	pop	{fp, pc}
   1f2e4:	push	{fp, lr}
   1f2e8:	mov	fp, sp
   1f2ec:	sub	sp, sp, #16
   1f2f0:	str	r0, [fp, #-4]
   1f2f4:	str	r1, [sp, #8]
   1f2f8:	ldr	r0, [sp, #8]
   1f2fc:	bl	1c624 <__assert_fail@plt+0xb148>
   1f300:	ldr	r1, [fp, #-4]
   1f304:	ldr	r2, [sp, #8]
   1f308:	str	r0, [sp, #4]
   1f30c:	bl	1123c <memcpy@plt>
   1f310:	ldr	r0, [sp, #4]
   1f314:	mov	sp, fp
   1f318:	pop	{fp, pc}
   1f31c:	push	{fp, lr}
   1f320:	mov	fp, sp
   1f324:	sub	sp, sp, #16
   1f328:	str	r0, [fp, #-4]
   1f32c:	str	r1, [sp, #8]
   1f330:	ldr	r0, [sp, #8]
   1f334:	add	r0, r0, #1
   1f338:	bl	1c624 <__assert_fail@plt+0xb148>
   1f33c:	str	r0, [sp, #4]
   1f340:	ldr	r0, [sp, #4]
   1f344:	ldr	r1, [sp, #8]
   1f348:	add	r0, r0, r1
   1f34c:	movw	r1, #0
   1f350:	strb	r1, [r0]
   1f354:	ldr	r0, [sp, #4]
   1f358:	ldr	r1, [fp, #-4]
   1f35c:	ldr	r2, [sp, #8]
   1f360:	str	r0, [sp]
   1f364:	bl	1123c <memcpy@plt>
   1f368:	ldr	r0, [sp]
   1f36c:	mov	sp, fp
   1f370:	pop	{fp, pc}
   1f374:	push	{fp, lr}
   1f378:	mov	fp, sp
   1f37c:	sub	sp, sp, #8
   1f380:	str	r0, [sp, #4]
   1f384:	ldr	r0, [sp, #4]
   1f388:	ldr	r1, [sp, #4]
   1f38c:	str	r0, [sp]
   1f390:	mov	r0, r1
   1f394:	bl	1135c <strlen@plt>
   1f398:	add	r1, r0, #1
   1f39c:	ldr	r0, [sp]
   1f3a0:	bl	1f2ac <__assert_fail@plt+0xddd0>
   1f3a4:	mov	sp, fp
   1f3a8:	pop	{fp, pc}
   1f3ac:	push	{fp, lr}
   1f3b0:	mov	fp, sp
   1f3b4:	sub	sp, sp, #8
   1f3b8:	movw	r0, #24880	; 0x6130
   1f3bc:	movt	r0, #3
   1f3c0:	ldr	r0, [r0]
   1f3c4:	movw	r1, #23284	; 0x5af4
   1f3c8:	movt	r1, #2
   1f3cc:	str	r0, [sp, #4]
   1f3d0:	mov	r0, r1
   1f3d4:	bl	11350 <gettext@plt>
   1f3d8:	ldr	r1, [sp, #4]
   1f3dc:	str	r0, [sp]
   1f3e0:	mov	r0, r1
   1f3e4:	movw	r1, #0
   1f3e8:	movw	r2, #20871	; 0x5187
   1f3ec:	movt	r2, #2
   1f3f0:	ldr	r3, [sp]
   1f3f4:	bl	112e4 <error@plt>
   1f3f8:	bl	11494 <abort@plt>
   1f3fc:	push	{fp, lr}
   1f400:	mov	fp, sp
   1f404:	sub	sp, sp, #16
   1f408:	str	r0, [fp, #-4]
   1f40c:	str	r1, [sp, #8]
   1f410:	str	r2, [sp, #4]
   1f414:	ldr	r0, [fp, #-4]
   1f418:	ldr	r1, [sp, #8]
   1f41c:	orr	r1, r1, #512	; 0x200
   1f420:	ldr	r2, [sp, #4]
   1f424:	bl	138b8 <__assert_fail@plt+0x23dc>
   1f428:	str	r0, [sp]
   1f42c:	ldr	r0, [sp]
   1f430:	movw	r1, #0
   1f434:	cmp	r0, r1
   1f438:	bne	1f474 <__assert_fail@plt+0xdf98>
   1f43c:	bl	11398 <__errno_location@plt>
   1f440:	ldr	r0, [r0]
   1f444:	cmp	r0, #22
   1f448:	beq	1f450 <__assert_fail@plt+0xdf74>
   1f44c:	b	1f470 <__assert_fail@plt+0xdf94>
   1f450:	movw	r0, #23301	; 0x5b05
   1f454:	movt	r0, #2
   1f458:	movw	r1, #23317	; 0x5b15
   1f45c:	movt	r1, #2
   1f460:	movw	r2, #41	; 0x29
   1f464:	movw	r3, #23328	; 0x5b20
   1f468:	movt	r3, #2
   1f46c:	bl	114dc <__assert_fail@plt>
   1f470:	bl	1f3ac <__assert_fail@plt+0xded0>
   1f474:	ldr	r0, [sp]
   1f478:	mov	sp, fp
   1f47c:	pop	{fp, pc}
   1f480:	sub	sp, sp, #16
   1f484:	str	r0, [sp, #12]
   1f488:	str	r1, [sp, #8]
   1f48c:	ldr	r0, [sp, #12]
   1f490:	ldr	r0, [r0, #48]	; 0x30
   1f494:	and	r0, r0, #16
   1f498:	cmp	r0, #0
   1f49c:	beq	1f4bc <__assert_fail@plt+0xdfe0>
   1f4a0:	ldr	r0, [sp, #12]
   1f4a4:	ldr	r0, [r0, #48]	; 0x30
   1f4a8:	and	r0, r0, #1
   1f4ac:	cmp	r0, #0
   1f4b0:	movw	r0, #1
   1f4b4:	str	r0, [sp, #4]
   1f4b8:	beq	1f514 <__assert_fail@plt+0xe038>
   1f4bc:	ldr	r0, [sp, #12]
   1f4c0:	ldr	r0, [r0, #48]	; 0x30
   1f4c4:	and	r0, r0, #16
   1f4c8:	cmp	r0, #0
   1f4cc:	movw	r0, #0
   1f4d0:	str	r0, [sp]
   1f4d4:	beq	1f50c <__assert_fail@plt+0xe030>
   1f4d8:	ldr	r0, [sp, #12]
   1f4dc:	ldr	r0, [r0, #48]	; 0x30
   1f4e0:	and	r0, r0, #1
   1f4e4:	cmp	r0, #0
   1f4e8:	movw	r0, #0
   1f4ec:	str	r0, [sp]
   1f4f0:	beq	1f50c <__assert_fail@plt+0xe030>
   1f4f4:	ldr	r0, [sp, #8]
   1f4f8:	ldr	r0, [r0, #48]	; 0x30
   1f4fc:	cmp	r0, #0
   1f500:	movw	r0, #0
   1f504:	movne	r0, #1
   1f508:	str	r0, [sp]
   1f50c:	ldr	r0, [sp]
   1f510:	str	r0, [sp, #4]
   1f514:	ldr	r0, [sp, #4]
   1f518:	and	r0, r0, #1
   1f51c:	add	sp, sp, #16
   1f520:	bx	lr
   1f524:	push	{fp, lr}
   1f528:	mov	fp, sp
   1f52c:	sub	sp, sp, #88	; 0x58
   1f530:	ldr	ip, [fp, #8]
   1f534:	str	r0, [fp, #-8]
   1f538:	str	r1, [fp, #-12]
   1f53c:	str	r2, [fp, #-16]
   1f540:	str	r3, [fp, #-20]	; 0xffffffec
   1f544:	movw	r0, #0
   1f548:	str	r0, [sp, #44]	; 0x2c
   1f54c:	ldr	r1, [fp, #-16]
   1f550:	cmp	r0, r1
   1f554:	str	ip, [sp, #20]
   1f558:	bgt	1f56c <__assert_fail@plt+0xe090>
   1f55c:	ldr	r0, [fp, #-16]
   1f560:	cmp	r0, #36	; 0x24
   1f564:	bgt	1f56c <__assert_fail@plt+0xe090>
   1f568:	b	1f58c <__assert_fail@plt+0xe0b0>
   1f56c:	movw	r0, #23406	; 0x5b6e
   1f570:	movt	r0, #2
   1f574:	movw	r1, #23444	; 0x5b94
   1f578:	movt	r1, #2
   1f57c:	movw	r2, #85	; 0x55
   1f580:	movw	r3, #23460	; 0x5ba4
   1f584:	movt	r3, #2
   1f588:	bl	114dc <__assert_fail@plt>
   1f58c:	ldr	r0, [fp, #-12]
   1f590:	movw	r1, #0
   1f594:	cmp	r0, r1
   1f598:	beq	1f5a8 <__assert_fail@plt+0xe0cc>
   1f59c:	ldr	r0, [fp, #-12]
   1f5a0:	str	r0, [sp, #16]
   1f5a4:	b	1f5b4 <__assert_fail@plt+0xe0d8>
   1f5a8:	sub	r0, fp, #24
   1f5ac:	str	r0, [sp, #16]
   1f5b0:	b	1f5b4 <__assert_fail@plt+0xe0d8>
   1f5b4:	ldr	r0, [sp, #16]
   1f5b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1f5bc:	bl	11398 <__errno_location@plt>
   1f5c0:	movw	lr, #0
   1f5c4:	str	lr, [r0]
   1f5c8:	ldr	r0, [fp, #-8]
   1f5cc:	str	r0, [sp, #40]	; 0x28
   1f5d0:	ldr	r0, [sp, #40]	; 0x28
   1f5d4:	ldrb	r0, [r0]
   1f5d8:	strb	r0, [sp, #39]	; 0x27
   1f5dc:	bl	11338 <__ctype_b_loc@plt>
   1f5e0:	ldr	r0, [r0]
   1f5e4:	ldrb	lr, [sp, #39]	; 0x27
   1f5e8:	mov	r1, lr
   1f5ec:	add	r0, r0, lr, lsl #1
   1f5f0:	ldrh	r0, [r0]
   1f5f4:	and	r0, r0, #8192	; 0x2000
   1f5f8:	cmp	r0, #0
   1f5fc:	str	r1, [sp, #12]
   1f600:	beq	1f61c <__assert_fail@plt+0xe140>
   1f604:	ldr	r0, [sp, #40]	; 0x28
   1f608:	add	r1, r0, #1
   1f60c:	str	r1, [sp, #40]	; 0x28
   1f610:	ldrb	r0, [r0, #1]
   1f614:	strb	r0, [sp, #39]	; 0x27
   1f618:	b	1f5dc <__assert_fail@plt+0xe100>
   1f61c:	ldrb	r0, [sp, #39]	; 0x27
   1f620:	cmp	r0, #45	; 0x2d
   1f624:	bne	1f634 <__assert_fail@plt+0xe158>
   1f628:	movw	r0, #4
   1f62c:	str	r0, [fp, #-4]
   1f630:	b	1fbb0 <__assert_fail@plt+0xe6d4>
   1f634:	ldr	r0, [fp, #-8]
   1f638:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f63c:	ldr	r2, [fp, #-16]
   1f640:	bl	113c8 <strtoumax@plt>
   1f644:	str	r1, [fp, #-36]	; 0xffffffdc
   1f648:	str	r0, [fp, #-40]	; 0xffffffd8
   1f64c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f650:	ldr	r0, [r0]
   1f654:	ldr	r1, [fp, #-8]
   1f658:	cmp	r0, r1
   1f65c:	bne	1f6c8 <__assert_fail@plt+0xe1ec>
   1f660:	ldr	r0, [fp, #8]
   1f664:	movw	r1, #0
   1f668:	cmp	r0, r1
   1f66c:	beq	1f6b8 <__assert_fail@plt+0xe1dc>
   1f670:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f674:	ldr	r0, [r0]
   1f678:	ldrb	r0, [r0]
   1f67c:	cmp	r0, #0
   1f680:	beq	1f6b8 <__assert_fail@plt+0xe1dc>
   1f684:	ldr	r0, [fp, #8]
   1f688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f68c:	ldr	r1, [r1]
   1f690:	ldrb	r1, [r1]
   1f694:	bl	11368 <strchr@plt>
   1f698:	movw	r1, #0
   1f69c:	cmp	r0, r1
   1f6a0:	beq	1f6b8 <__assert_fail@plt+0xe1dc>
   1f6a4:	mov	r0, #0
   1f6a8:	str	r0, [fp, #-36]	; 0xffffffdc
   1f6ac:	mov	r0, #1
   1f6b0:	str	r0, [fp, #-40]	; 0xffffffd8
   1f6b4:	b	1f6c4 <__assert_fail@plt+0xe1e8>
   1f6b8:	movw	r0, #4
   1f6bc:	str	r0, [fp, #-4]
   1f6c0:	b	1fbb0 <__assert_fail@plt+0xe6d4>
   1f6c4:	b	1f700 <__assert_fail@plt+0xe224>
   1f6c8:	bl	11398 <__errno_location@plt>
   1f6cc:	ldr	r0, [r0]
   1f6d0:	cmp	r0, #0
   1f6d4:	beq	1f6fc <__assert_fail@plt+0xe220>
   1f6d8:	bl	11398 <__errno_location@plt>
   1f6dc:	ldr	r0, [r0]
   1f6e0:	cmp	r0, #34	; 0x22
   1f6e4:	beq	1f6f4 <__assert_fail@plt+0xe218>
   1f6e8:	movw	r0, #4
   1f6ec:	str	r0, [fp, #-4]
   1f6f0:	b	1fbb0 <__assert_fail@plt+0xe6d4>
   1f6f4:	movw	r0, #1
   1f6f8:	str	r0, [sp, #44]	; 0x2c
   1f6fc:	b	1f700 <__assert_fail@plt+0xe224>
   1f700:	ldr	r0, [fp, #8]
   1f704:	movw	r1, #0
   1f708:	cmp	r0, r1
   1f70c:	bne	1f730 <__assert_fail@plt+0xe254>
   1f710:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f714:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f718:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f71c:	str	r1, [r2, #4]
   1f720:	str	r0, [r2]
   1f724:	ldr	r0, [sp, #44]	; 0x2c
   1f728:	str	r0, [fp, #-4]
   1f72c:	b	1fbb0 <__assert_fail@plt+0xe6d4>
   1f730:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f734:	ldr	r0, [r0]
   1f738:	ldrb	r0, [r0]
   1f73c:	cmp	r0, #0
   1f740:	beq	1fb94 <__assert_fail@plt+0xe6b8>
   1f744:	movw	r0, #1024	; 0x400
   1f748:	str	r0, [sp, #32]
   1f74c:	movw	r0, #1
   1f750:	str	r0, [sp, #28]
   1f754:	ldr	r0, [fp, #8]
   1f758:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f75c:	ldr	r1, [r1]
   1f760:	ldrb	r1, [r1]
   1f764:	bl	11368 <strchr@plt>
   1f768:	movw	r1, #0
   1f76c:	cmp	r0, r1
   1f770:	bne	1f798 <__assert_fail@plt+0xe2bc>
   1f774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f778:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f77c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f780:	str	r1, [r2, #4]
   1f784:	str	r0, [r2]
   1f788:	ldr	r0, [sp, #44]	; 0x2c
   1f78c:	orr	r0, r0, #2
   1f790:	str	r0, [fp, #-4]
   1f794:	b	1fbb0 <__assert_fail@plt+0xe6d4>
   1f798:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f79c:	ldr	r0, [r0]
   1f7a0:	ldrb	r0, [r0]
   1f7a4:	sub	r0, r0, #69	; 0x45
   1f7a8:	cmp	r0, #47	; 0x2f
   1f7ac:	str	r0, [sp, #8]
   1f7b0:	bhi	1f91c <__assert_fail@plt+0xe440>
   1f7b4:	add	r0, pc, #8
   1f7b8:	ldr	r1, [sp, #8]
   1f7bc:	ldr	r0, [r0, r1, lsl #2]
   1f7c0:	mov	pc, r0
   1f7c4:	andeq	pc, r1, r4, lsl #17
   1f7c8:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7cc:	andeq	pc, r1, r4, lsl #17
   1f7d0:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7d4:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7d8:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7dc:	andeq	pc, r1, r4, lsl #17
   1f7e0:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7e4:	andeq	pc, r1, r4, lsl #17
   1f7e8:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7ec:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7f0:	andeq	pc, r1, r4, lsl #17
   1f7f4:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7f8:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f7fc:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f800:	andeq	pc, r1, r4, lsl #17
   1f804:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f808:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f80c:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f810:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f814:	andeq	pc, r1, r4, lsl #17
   1f818:	andeq	pc, r1, r4, lsl #17
   1f81c:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f820:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f824:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f828:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f82c:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f830:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f834:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f838:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f83c:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f840:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f844:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f848:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f84c:	andeq	pc, r1, r4, lsl #17
   1f850:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f854:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f858:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f85c:	andeq	pc, r1, r4, lsl #17
   1f860:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f864:	andeq	pc, r1, r4, lsl #17
   1f868:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f86c:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f870:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f874:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f878:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f87c:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f880:	andeq	pc, r1, r4, lsl #17
   1f884:	ldr	r0, [fp, #8]
   1f888:	movw	r1, #48	; 0x30
   1f88c:	bl	11368 <strchr@plt>
   1f890:	movw	r1, #0
   1f894:	cmp	r0, r1
   1f898:	beq	1f918 <__assert_fail@plt+0xe43c>
   1f89c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f8a0:	ldr	r0, [r0]
   1f8a4:	ldrb	r0, [r0, #1]
   1f8a8:	mov	r1, r0
   1f8ac:	cmp	r0, #66	; 0x42
   1f8b0:	str	r1, [sp, #4]
   1f8b4:	beq	1f900 <__assert_fail@plt+0xe424>
   1f8b8:	b	1f8bc <__assert_fail@plt+0xe3e0>
   1f8bc:	ldr	r0, [sp, #4]
   1f8c0:	cmp	r0, #68	; 0x44
   1f8c4:	beq	1f900 <__assert_fail@plt+0xe424>
   1f8c8:	b	1f8cc <__assert_fail@plt+0xe3f0>
   1f8cc:	ldr	r0, [sp, #4]
   1f8d0:	cmp	r0, #105	; 0x69
   1f8d4:	bne	1f914 <__assert_fail@plt+0xe438>
   1f8d8:	b	1f8dc <__assert_fail@plt+0xe400>
   1f8dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f8e0:	ldr	r0, [r0]
   1f8e4:	ldrb	r0, [r0, #2]
   1f8e8:	cmp	r0, #66	; 0x42
   1f8ec:	bne	1f8fc <__assert_fail@plt+0xe420>
   1f8f0:	ldr	r0, [sp, #28]
   1f8f4:	add	r0, r0, #2
   1f8f8:	str	r0, [sp, #28]
   1f8fc:	b	1f914 <__assert_fail@plt+0xe438>
   1f900:	movw	r0, #1000	; 0x3e8
   1f904:	str	r0, [sp, #32]
   1f908:	ldr	r0, [sp, #28]
   1f90c:	add	r0, r0, #1
   1f910:	str	r0, [sp, #28]
   1f914:	b	1f918 <__assert_fail@plt+0xe43c>
   1f918:	b	1f91c <__assert_fail@plt+0xe440>
   1f91c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f920:	ldr	r0, [r0]
   1f924:	ldrb	r0, [r0]
   1f928:	sub	r0, r0, #66	; 0x42
   1f92c:	cmp	r0, #53	; 0x35
   1f930:	str	r0, [sp]
   1f934:	bhi	1fb28 <__assert_fail@plt+0xe64c>
   1f938:	add	r0, pc, #8
   1f93c:	ldr	r1, [sp]
   1f940:	ldr	r0, [r0, r1, lsl #2]
   1f944:	mov	pc, r0
   1f948:	andeq	pc, r1, r4, lsr sl	; <UNPREDICTABLE>
   1f94c:	andeq	pc, r1, r8, lsr #22
   1f950:	andeq	pc, r1, r8, lsr #22
   1f954:	andeq	pc, r1, r4, asr sl	; <UNPREDICTABLE>
   1f958:	andeq	pc, r1, r8, lsr #22
   1f95c:	andeq	pc, r1, ip, ror #20
   1f960:	andeq	pc, r1, r8, lsr #22
   1f964:	andeq	pc, r1, r8, lsr #22
   1f968:	andeq	pc, r1, r8, lsr #22
   1f96c:	andeq	pc, r1, r4, lsl #21
   1f970:	andeq	pc, r1, r8, lsr #22
   1f974:	muleq	r1, ip, sl
   1f978:	andeq	pc, r1, r8, lsr #22
   1f97c:	andeq	pc, r1, r8, lsr #22
   1f980:			; <UNDEFINED> instruction: 0x0001fab4
   1f984:	andeq	pc, r1, r8, lsr #22
   1f988:	andeq	pc, r1, r8, lsr #22
   1f98c:	andeq	pc, r1, r8, lsr #22
   1f990:	andeq	pc, r1, ip, asr #21
   1f994:	andeq	pc, r1, r8, lsr #22
   1f998:	andeq	pc, r1, r8, lsr #22
   1f99c:	andeq	pc, r1, r8, lsr #22
   1f9a0:	andeq	pc, r1, r8, lsr #22
   1f9a4:	strdeq	pc, [r1], -r8
   1f9a8:	andeq	pc, r1, r0, lsl fp	; <UNPREDICTABLE>
   1f9ac:	andeq	pc, r1, r8, lsr #22
   1f9b0:	andeq	pc, r1, r8, lsr #22
   1f9b4:	andeq	pc, r1, r8, lsr #22
   1f9b8:	andeq	pc, r1, r8, lsr #22
   1f9bc:	andeq	pc, r1, r8, lsr #22
   1f9c0:	andeq	pc, r1, r8, lsr #22
   1f9c4:	andeq	pc, r1, r8, lsr #22
   1f9c8:	andeq	pc, r1, r0, lsr #20
   1f9cc:	andeq	pc, r1, r8, asr #20
   1f9d0:	andeq	pc, r1, r8, lsr #22
   1f9d4:	andeq	pc, r1, r8, lsr #22
   1f9d8:	andeq	pc, r1, r8, lsr #22
   1f9dc:	andeq	pc, r1, ip, ror #20
   1f9e0:	andeq	pc, r1, r8, lsr #22
   1f9e4:	andeq	pc, r1, r8, lsr #22
   1f9e8:	andeq	pc, r1, r8, lsr #22
   1f9ec:	andeq	pc, r1, r4, lsl #21
   1f9f0:	andeq	pc, r1, r8, lsr #22
   1f9f4:	muleq	r1, ip, sl
   1f9f8:	andeq	pc, r1, r8, lsr #22
   1f9fc:	andeq	pc, r1, r8, lsr #22
   1fa00:	andeq	pc, r1, r8, lsr #22
   1fa04:	andeq	pc, r1, r8, lsr #22
   1fa08:	andeq	pc, r1, r8, lsr #22
   1fa0c:	andeq	pc, r1, r8, lsr #22
   1fa10:	andeq	pc, r1, ip, asr #21
   1fa14:	andeq	pc, r1, r8, lsr #22
   1fa18:	andeq	pc, r1, r8, lsr #22
   1fa1c:	andeq	pc, r1, r4, ror #21
   1fa20:	sub	r0, fp, #40	; 0x28
   1fa24:	movw	r1, #512	; 0x200
   1fa28:	bl	1fbbc <__assert_fail@plt+0xe6e0>
   1fa2c:	str	r0, [sp, #24]
   1fa30:	b	1fb4c <__assert_fail@plt+0xe670>
   1fa34:	sub	r0, fp, #40	; 0x28
   1fa38:	movw	r1, #1024	; 0x400
   1fa3c:	bl	1fbbc <__assert_fail@plt+0xe6e0>
   1fa40:	str	r0, [sp, #24]
   1fa44:	b	1fb4c <__assert_fail@plt+0xe670>
   1fa48:	movw	r0, #0
   1fa4c:	str	r0, [sp, #24]
   1fa50:	b	1fb4c <__assert_fail@plt+0xe670>
   1fa54:	ldr	r1, [sp, #32]
   1fa58:	sub	r0, fp, #40	; 0x28
   1fa5c:	movw	r2, #6
   1fa60:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fa64:	str	r0, [sp, #24]
   1fa68:	b	1fb4c <__assert_fail@plt+0xe670>
   1fa6c:	ldr	r1, [sp, #32]
   1fa70:	sub	r0, fp, #40	; 0x28
   1fa74:	movw	r2, #3
   1fa78:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fa7c:	str	r0, [sp, #24]
   1fa80:	b	1fb4c <__assert_fail@plt+0xe670>
   1fa84:	ldr	r1, [sp, #32]
   1fa88:	sub	r0, fp, #40	; 0x28
   1fa8c:	movw	r2, #1
   1fa90:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fa94:	str	r0, [sp, #24]
   1fa98:	b	1fb4c <__assert_fail@plt+0xe670>
   1fa9c:	ldr	r1, [sp, #32]
   1faa0:	sub	r0, fp, #40	; 0x28
   1faa4:	movw	r2, #2
   1faa8:	bl	216c4 <__assert_fail@plt+0x101e8>
   1faac:	str	r0, [sp, #24]
   1fab0:	b	1fb4c <__assert_fail@plt+0xe670>
   1fab4:	ldr	r1, [sp, #32]
   1fab8:	sub	r0, fp, #40	; 0x28
   1fabc:	movw	r2, #5
   1fac0:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fac4:	str	r0, [sp, #24]
   1fac8:	b	1fb4c <__assert_fail@plt+0xe670>
   1facc:	ldr	r1, [sp, #32]
   1fad0:	sub	r0, fp, #40	; 0x28
   1fad4:	movw	r2, #4
   1fad8:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fadc:	str	r0, [sp, #24]
   1fae0:	b	1fb4c <__assert_fail@plt+0xe670>
   1fae4:	sub	r0, fp, #40	; 0x28
   1fae8:	movw	r1, #2
   1faec:	bl	1fbbc <__assert_fail@plt+0xe6e0>
   1faf0:	str	r0, [sp, #24]
   1faf4:	b	1fb4c <__assert_fail@plt+0xe670>
   1faf8:	ldr	r1, [sp, #32]
   1fafc:	sub	r0, fp, #40	; 0x28
   1fb00:	movw	r2, #8
   1fb04:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fb08:	str	r0, [sp, #24]
   1fb0c:	b	1fb4c <__assert_fail@plt+0xe670>
   1fb10:	ldr	r1, [sp, #32]
   1fb14:	sub	r0, fp, #40	; 0x28
   1fb18:	movw	r2, #7
   1fb1c:	bl	216c4 <__assert_fail@plt+0x101e8>
   1fb20:	str	r0, [sp, #24]
   1fb24:	b	1fb4c <__assert_fail@plt+0xe670>
   1fb28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fb30:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fb34:	str	r1, [r2, #4]
   1fb38:	str	r0, [r2]
   1fb3c:	ldr	r0, [sp, #44]	; 0x2c
   1fb40:	orr	r0, r0, #2
   1fb44:	str	r0, [fp, #-4]
   1fb48:	b	1fbb0 <__assert_fail@plt+0xe6d4>
   1fb4c:	ldr	r0, [sp, #24]
   1fb50:	ldr	r1, [sp, #44]	; 0x2c
   1fb54:	orr	r0, r1, r0
   1fb58:	str	r0, [sp, #44]	; 0x2c
   1fb5c:	ldr	r0, [sp, #28]
   1fb60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fb64:	ldr	r2, [r1]
   1fb68:	add	r0, r2, r0
   1fb6c:	str	r0, [r1]
   1fb70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb74:	ldr	r0, [r0]
   1fb78:	ldrsb	r0, [r0]
   1fb7c:	cmp	r0, #0
   1fb80:	beq	1fb90 <__assert_fail@plt+0xe6b4>
   1fb84:	ldr	r0, [sp, #44]	; 0x2c
   1fb88:	orr	r0, r0, #2
   1fb8c:	str	r0, [sp, #44]	; 0x2c
   1fb90:	b	1fb94 <__assert_fail@plt+0xe6b8>
   1fb94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fb9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fba0:	str	r1, [r2, #4]
   1fba4:	str	r0, [r2]
   1fba8:	ldr	r0, [sp, #44]	; 0x2c
   1fbac:	str	r0, [fp, #-4]
   1fbb0:	ldr	r0, [fp, #-4]
   1fbb4:	mov	sp, fp
   1fbb8:	pop	{fp, pc}
   1fbbc:	push	{fp, lr}
   1fbc0:	mov	fp, sp
   1fbc4:	sub	sp, sp, #568	; 0x238
   1fbc8:	str	r0, [fp, #-8]
   1fbcc:	str	r1, [fp, #-12]
   1fbd0:	b	20104 <__assert_fail@plt+0xec28>
   1fbd4:	b	1fe78 <__assert_fail@plt+0xe99c>
   1fbd8:	ldr	r0, [fp, #-12]
   1fbdc:	cmp	r0, #0
   1fbe0:	bge	1fd58 <__assert_fail@plt+0xe87c>
   1fbe4:	mov	r0, #1
   1fbe8:	cmp	r0, #0
   1fbec:	bne	1fca4 <__assert_fail@plt+0xe7c8>
   1fbf0:	b	1fbf4 <__assert_fail@plt+0xe718>
   1fbf4:	b	1fbf8 <__assert_fail@plt+0xe71c>
   1fbf8:	ldr	r0, [fp, #-8]
   1fbfc:	ldr	r1, [r0]
   1fc00:	ldr	r0, [r0, #4]
   1fc04:	ldr	r2, [fp, #-12]
   1fc08:	mov	r3, #127	; 0x7f
   1fc0c:	sdiv	r2, r3, r2
   1fc10:	subs	r1, r1, r2
   1fc14:	sbcs	r0, r0, r2, asr #31
   1fc18:	str	r1, [fp, #-28]	; 0xffffffe4
   1fc1c:	str	r0, [fp, #-32]	; 0xffffffe0
   1fc20:	bcc	1fe30 <__assert_fail@plt+0xe954>
   1fc24:	b	1fe54 <__assert_fail@plt+0xe978>
   1fc28:	b	1fc2c <__assert_fail@plt+0xe750>
   1fc2c:	ldr	r0, [pc, #4088]	; 20c2c <__assert_fail@plt+0xf750>
   1fc30:	ldr	r1, [fp, #-12]
   1fc34:	cmp	r1, r0
   1fc38:	blt	1fc50 <__assert_fail@plt+0xe774>
   1fc3c:	b	1fc5c <__assert_fail@plt+0xe780>
   1fc40:	ldr	r0, [fp, #-12]
   1fc44:	movw	r1, #0
   1fc48:	cmp	r1, r0
   1fc4c:	bge	1fc5c <__assert_fail@plt+0xe780>
   1fc50:	movw	r0, #0
   1fc54:	str	r0, [fp, #-36]	; 0xffffffdc
   1fc58:	b	1fc74 <__assert_fail@plt+0xe798>
   1fc5c:	ldr	r0, [fp, #-12]
   1fc60:	movw	r1, #0
   1fc64:	sub	r0, r1, r0
   1fc68:	movw	r1, #127	; 0x7f
   1fc6c:	sdiv	r0, r1, r0
   1fc70:	str	r0, [fp, #-36]	; 0xffffffdc
   1fc74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fc78:	ldr	r1, [fp, #-8]
   1fc7c:	ldr	r2, [r1]
   1fc80:	ldr	r1, [r1, #4]
   1fc84:	mvn	r1, r1
   1fc88:	mvn	r2, r2
   1fc8c:	subs	r2, r2, r0
   1fc90:	sbcs	r0, r1, r0, asr #31
   1fc94:	str	r2, [fp, #-40]	; 0xffffffd8
   1fc98:	str	r0, [fp, #-44]	; 0xffffffd4
   1fc9c:	bcs	1fe30 <__assert_fail@plt+0xe954>
   1fca0:	b	1fe54 <__assert_fail@plt+0xe978>
   1fca4:	b	1fca8 <__assert_fail@plt+0xe7cc>
   1fca8:	b	1fd28 <__assert_fail@plt+0xe84c>
   1fcac:	b	1fd28 <__assert_fail@plt+0xe84c>
   1fcb0:	ldr	r0, [fp, #-12]
   1fcb4:	cmn	r0, #1
   1fcb8:	bne	1fd28 <__assert_fail@plt+0xe84c>
   1fcbc:	b	1fce0 <__assert_fail@plt+0xe804>
   1fcc0:	ldr	r0, [fp, #-8]
   1fcc4:	ldr	r1, [r0]
   1fcc8:	ldr	r0, [r0, #4]
   1fccc:	eor	r1, r1, #128	; 0x80
   1fcd0:	orr	r0, r1, r0
   1fcd4:	cmp	r0, #0
   1fcd8:	bne	1fe30 <__assert_fail@plt+0xe954>
   1fcdc:	b	1fe54 <__assert_fail@plt+0xe978>
   1fce0:	ldr	r0, [fp, #-8]
   1fce4:	ldr	r1, [r0]
   1fce8:	ldr	r0, [r0, #4]
   1fcec:	orr	r0, r1, r0
   1fcf0:	cmp	r0, #0
   1fcf4:	beq	1fe54 <__assert_fail@plt+0xe978>
   1fcf8:	b	1fcfc <__assert_fail@plt+0xe820>
   1fcfc:	ldr	r0, [fp, #-8]
   1fd00:	ldr	r1, [r0]
   1fd04:	ldr	r0, [r0, #4]
   1fd08:	subs	r1, r1, #1
   1fd0c:	sbc	r0, r0, #0
   1fd10:	rsbs	r1, r1, #127	; 0x7f
   1fd14:	rscs	r0, r0, #0
   1fd18:	str	r1, [fp, #-48]	; 0xffffffd0
   1fd1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1fd20:	bcc	1fe30 <__assert_fail@plt+0xe954>
   1fd24:	b	1fe54 <__assert_fail@plt+0xe978>
   1fd28:	ldr	r0, [fp, #-12]
   1fd2c:	mvn	r1, #127	; 0x7f
   1fd30:	sdiv	r0, r1, r0
   1fd34:	ldr	r1, [fp, #-8]
   1fd38:	ldr	r2, [r1]
   1fd3c:	ldr	r1, [r1, #4]
   1fd40:	subs	r2, r0, r2
   1fd44:	rscs	r0, r1, r0, asr #31
   1fd48:	str	r2, [fp, #-56]	; 0xffffffc8
   1fd4c:	str	r0, [fp, #-60]	; 0xffffffc4
   1fd50:	bcc	1fe30 <__assert_fail@plt+0xe954>
   1fd54:	b	1fe54 <__assert_fail@plt+0xe978>
   1fd58:	ldr	r0, [fp, #-12]
   1fd5c:	cmp	r0, #0
   1fd60:	bne	1fd68 <__assert_fail@plt+0xe88c>
   1fd64:	b	1fe54 <__assert_fail@plt+0xe978>
   1fd68:	mov	r0, #1
   1fd6c:	cmp	r0, #0
   1fd70:	bne	1fe00 <__assert_fail@plt+0xe924>
   1fd74:	b	1fd78 <__assert_fail@plt+0xe89c>
   1fd78:	ldr	r0, [fp, #-8]
   1fd7c:	ldr	r1, [r0]
   1fd80:	ldr	r0, [r0, #4]
   1fd84:	and	r0, r1, r0
   1fd88:	cmn	r0, #1
   1fd8c:	bne	1fdcc <__assert_fail@plt+0xe8f0>
   1fd90:	b	1fd94 <__assert_fail@plt+0xe8b8>
   1fd94:	b	1fd98 <__assert_fail@plt+0xe8bc>
   1fd98:	ldr	r0, [fp, #-12]
   1fd9c:	mvn	r1, #127	; 0x7f
   1fda0:	add	r0, r0, r1
   1fda4:	movw	r1, #0
   1fda8:	cmp	r1, r0
   1fdac:	blt	1fe30 <__assert_fail@plt+0xe954>
   1fdb0:	b	1fe54 <__assert_fail@plt+0xe978>
   1fdb4:	ldr	r0, [fp, #-12]
   1fdb8:	sub	r0, r0, #1
   1fdbc:	movw	r1, #127	; 0x7f
   1fdc0:	cmp	r1, r0
   1fdc4:	blt	1fe30 <__assert_fail@plt+0xe954>
   1fdc8:	b	1fe54 <__assert_fail@plt+0xe978>
   1fdcc:	ldr	r0, [fp, #-8]
   1fdd0:	ldr	r2, [r0]
   1fdd4:	ldr	r3, [r0, #4]
   1fdd8:	mvn	r0, #127	; 0x7f
   1fddc:	mvn	r1, #0
   1fde0:	bl	245dc <__assert_fail@plt+0x13100>
   1fde4:	ldr	r2, [fp, #-12]
   1fde8:	subs	r0, r0, r2
   1fdec:	sbcs	r1, r1, r2, asr #31
   1fdf0:	str	r0, [fp, #-64]	; 0xffffffc0
   1fdf4:	str	r1, [fp, #-68]	; 0xffffffbc
   1fdf8:	bcc	1fe30 <__assert_fail@plt+0xe954>
   1fdfc:	b	1fe54 <__assert_fail@plt+0xe978>
   1fe00:	ldr	r0, [fp, #-12]
   1fe04:	mov	r1, #127	; 0x7f
   1fe08:	sdiv	r0, r1, r0
   1fe0c:	ldr	r1, [fp, #-8]
   1fe10:	ldr	r2, [r1]
   1fe14:	ldr	r1, [r1, #4]
   1fe18:	subs	r2, r0, r2
   1fe1c:	rscs	r0, r1, r0, asr #31
   1fe20:	str	r2, [fp, #-72]	; 0xffffffb8
   1fe24:	str	r0, [fp, #-76]	; 0xffffffb4
   1fe28:	bcs	1fe54 <__assert_fail@plt+0xe978>
   1fe2c:	b	1fe30 <__assert_fail@plt+0xe954>
   1fe30:	ldr	r0, [fp, #-8]
   1fe34:	ldr	r0, [r0]
   1fe38:	ldr	r1, [fp, #-12]
   1fe3c:	mul	r0, r0, r1
   1fe40:	sxtb	r0, r0
   1fe44:	asr	r1, r0, #31
   1fe48:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe4c:	str	r1, [fp, #-20]	; 0xffffffec
   1fe50:	b	21678 <__assert_fail@plt+0x1019c>
   1fe54:	ldr	r0, [fp, #-8]
   1fe58:	ldr	r0, [r0]
   1fe5c:	ldr	r1, [fp, #-12]
   1fe60:	mul	r0, r0, r1
   1fe64:	sxtb	r0, r0
   1fe68:	asr	r1, r0, #31
   1fe6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe70:	str	r1, [fp, #-20]	; 0xffffffec
   1fe74:	b	21694 <__assert_fail@plt+0x101b8>
   1fe78:	ldr	r0, [fp, #-12]
   1fe7c:	cmp	r0, #0
   1fe80:	bge	1ffd8 <__assert_fail@plt+0xeafc>
   1fe84:	mov	r0, #1
   1fe88:	cmp	r0, #0
   1fe8c:	bne	1ff44 <__assert_fail@plt+0xea68>
   1fe90:	b	1fe94 <__assert_fail@plt+0xe9b8>
   1fe94:	b	1fe98 <__assert_fail@plt+0xe9bc>
   1fe98:	ldr	r0, [fp, #-8]
   1fe9c:	ldr	r1, [r0]
   1fea0:	ldr	r0, [r0, #4]
   1fea4:	ldr	r2, [fp, #-12]
   1fea8:	mov	r3, #255	; 0xff
   1feac:	sdiv	r2, r3, r2
   1feb0:	subs	r1, r1, r2
   1feb4:	sbcs	r0, r0, r2, asr #31
   1feb8:	str	r1, [fp, #-80]	; 0xffffffb0
   1febc:	str	r0, [fp, #-84]	; 0xffffffac
   1fec0:	bcc	200bc <__assert_fail@plt+0xebe0>
   1fec4:	b	200e0 <__assert_fail@plt+0xec04>
   1fec8:	b	1fecc <__assert_fail@plt+0xe9f0>
   1fecc:	ldr	r0, [pc, #3416]	; 20c2c <__assert_fail@plt+0xf750>
   1fed0:	ldr	r1, [fp, #-12]
   1fed4:	cmp	r1, r0
   1fed8:	blt	1fef0 <__assert_fail@plt+0xea14>
   1fedc:	b	1fefc <__assert_fail@plt+0xea20>
   1fee0:	ldr	r0, [fp, #-12]
   1fee4:	movw	r1, #0
   1fee8:	cmp	r1, r0
   1feec:	bge	1fefc <__assert_fail@plt+0xea20>
   1fef0:	movw	r0, #0
   1fef4:	str	r0, [fp, #-88]	; 0xffffffa8
   1fef8:	b	1ff14 <__assert_fail@plt+0xea38>
   1fefc:	ldr	r0, [fp, #-12]
   1ff00:	movw	r1, #0
   1ff04:	sub	r0, r1, r0
   1ff08:	movw	r1, #255	; 0xff
   1ff0c:	sdiv	r0, r1, r0
   1ff10:	str	r0, [fp, #-88]	; 0xffffffa8
   1ff14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1ff18:	ldr	r1, [fp, #-8]
   1ff1c:	ldr	r2, [r1]
   1ff20:	ldr	r1, [r1, #4]
   1ff24:	mvn	r1, r1
   1ff28:	mvn	r2, r2
   1ff2c:	subs	r2, r2, r0
   1ff30:	sbcs	r0, r1, r0, asr #31
   1ff34:	str	r2, [fp, #-92]	; 0xffffffa4
   1ff38:	str	r0, [fp, #-96]	; 0xffffffa0
   1ff3c:	bcs	200bc <__assert_fail@plt+0xebe0>
   1ff40:	b	200e0 <__assert_fail@plt+0xec04>
   1ff44:	b	1ff48 <__assert_fail@plt+0xea6c>
   1ff48:	b	1ffa8 <__assert_fail@plt+0xeacc>
   1ff4c:	b	1ffa8 <__assert_fail@plt+0xeacc>
   1ff50:	ldr	r0, [fp, #-12]
   1ff54:	cmn	r0, #1
   1ff58:	bne	1ffa8 <__assert_fail@plt+0xeacc>
   1ff5c:	b	1ff7c <__assert_fail@plt+0xeaa0>
   1ff60:	ldr	r0, [fp, #-8]
   1ff64:	ldr	r1, [r0]
   1ff68:	ldr	r0, [r0, #4]
   1ff6c:	orr	r0, r1, r0
   1ff70:	cmp	r0, #0
   1ff74:	bne	200bc <__assert_fail@plt+0xebe0>
   1ff78:	b	200e0 <__assert_fail@plt+0xec04>
   1ff7c:	ldr	r0, [fp, #-8]
   1ff80:	ldr	r1, [r0]
   1ff84:	ldr	r0, [r0, #4]
   1ff88:	orr	r0, r1, r0
   1ff8c:	cmp	r0, #0
   1ff90:	beq	200e0 <__assert_fail@plt+0xec04>
   1ff94:	b	1ff98 <__assert_fail@plt+0xeabc>
   1ff98:	mov	r0, #0
   1ff9c:	cmp	r0, #0
   1ffa0:	bne	200bc <__assert_fail@plt+0xebe0>
   1ffa4:	b	200e0 <__assert_fail@plt+0xec04>
   1ffa8:	ldr	r0, [fp, #-12]
   1ffac:	mov	r1, #0
   1ffb0:	sdiv	r0, r1, r0
   1ffb4:	ldr	r1, [fp, #-8]
   1ffb8:	ldr	r2, [r1]
   1ffbc:	ldr	r1, [r1, #4]
   1ffc0:	subs	r2, r0, r2
   1ffc4:	rscs	r0, r1, r0, asr #31
   1ffc8:	str	r2, [fp, #-100]	; 0xffffff9c
   1ffcc:	str	r0, [fp, #-104]	; 0xffffff98
   1ffd0:	bcc	200bc <__assert_fail@plt+0xebe0>
   1ffd4:	b	200e0 <__assert_fail@plt+0xec04>
   1ffd8:	ldr	r0, [fp, #-12]
   1ffdc:	cmp	r0, #0
   1ffe0:	bne	1ffe8 <__assert_fail@plt+0xeb0c>
   1ffe4:	b	200e0 <__assert_fail@plt+0xec04>
   1ffe8:	mov	r0, #1
   1ffec:	cmp	r0, #0
   1fff0:	bne	2008c <__assert_fail@plt+0xebb0>
   1fff4:	b	1fff8 <__assert_fail@plt+0xeb1c>
   1fff8:	b	20000 <__assert_fail@plt+0xeb24>
   1fffc:	b	20004 <__assert_fail@plt+0xeb28>
   20000:	b	20054 <__assert_fail@plt+0xeb78>
   20004:	ldr	r0, [fp, #-8]
   20008:	ldr	r1, [r0]
   2000c:	ldr	r0, [r0, #4]
   20010:	and	r0, r1, r0
   20014:	cmn	r0, #1
   20018:	bne	20054 <__assert_fail@plt+0xeb78>
   2001c:	b	20020 <__assert_fail@plt+0xeb44>
   20020:	b	20024 <__assert_fail@plt+0xeb48>
   20024:	ldr	r0, [fp, #-12]
   20028:	add	r0, r0, #0
   2002c:	movw	r1, #0
   20030:	cmp	r1, r0
   20034:	blt	200bc <__assert_fail@plt+0xebe0>
   20038:	b	200e0 <__assert_fail@plt+0xec04>
   2003c:	ldr	r0, [fp, #-12]
   20040:	sub	r0, r0, #1
   20044:	mvn	r1, #0
   20048:	cmp	r1, r0
   2004c:	blt	200bc <__assert_fail@plt+0xebe0>
   20050:	b	200e0 <__assert_fail@plt+0xec04>
   20054:	ldr	r0, [fp, #-8]
   20058:	ldr	r2, [r0]
   2005c:	ldr	r3, [r0, #4]
   20060:	mov	r0, #0
   20064:	str	r0, [fp, #-108]	; 0xffffff94
   20068:	ldr	r1, [fp, #-108]	; 0xffffff94
   2006c:	bl	245dc <__assert_fail@plt+0x13100>
   20070:	ldr	r2, [fp, #-12]
   20074:	subs	r0, r0, r2
   20078:	sbcs	r1, r1, r2, asr #31
   2007c:	str	r0, [fp, #-112]	; 0xffffff90
   20080:	str	r1, [fp, #-116]	; 0xffffff8c
   20084:	bcc	200bc <__assert_fail@plt+0xebe0>
   20088:	b	200e0 <__assert_fail@plt+0xec04>
   2008c:	ldr	r0, [fp, #-12]
   20090:	mov	r1, #255	; 0xff
   20094:	sdiv	r0, r1, r0
   20098:	ldr	r1, [fp, #-8]
   2009c:	ldr	r2, [r1]
   200a0:	ldr	r1, [r1, #4]
   200a4:	subs	r2, r0, r2
   200a8:	rscs	r0, r1, r0, asr #31
   200ac:	str	r2, [fp, #-120]	; 0xffffff88
   200b0:	str	r0, [fp, #-124]	; 0xffffff84
   200b4:	bcs	200e0 <__assert_fail@plt+0xec04>
   200b8:	b	200bc <__assert_fail@plt+0xebe0>
   200bc:	ldr	r0, [fp, #-8]
   200c0:	ldr	r0, [r0]
   200c4:	ldr	r1, [fp, #-12]
   200c8:	mul	r0, r0, r1
   200cc:	uxtb	r0, r0
   200d0:	mov	r1, #0
   200d4:	str	r1, [fp, #-20]	; 0xffffffec
   200d8:	str	r0, [fp, #-24]	; 0xffffffe8
   200dc:	b	21678 <__assert_fail@plt+0x1019c>
   200e0:	ldr	r0, [fp, #-8]
   200e4:	ldr	r0, [r0]
   200e8:	ldr	r1, [fp, #-12]
   200ec:	mul	r0, r0, r1
   200f0:	uxtb	r0, r0
   200f4:	mov	r1, #0
   200f8:	str	r1, [fp, #-20]	; 0xffffffec
   200fc:	str	r0, [fp, #-24]	; 0xffffffe8
   20100:	b	21694 <__assert_fail@plt+0x101b8>
   20104:	b	20640 <__assert_fail@plt+0xf164>
   20108:	b	203b4 <__assert_fail@plt+0xeed8>
   2010c:	ldr	r0, [fp, #-12]
   20110:	cmp	r0, #0
   20114:	bge	20290 <__assert_fail@plt+0xedb4>
   20118:	mov	r0, #1
   2011c:	cmp	r0, #0
   20120:	bne	201d8 <__assert_fail@plt+0xecfc>
   20124:	b	20128 <__assert_fail@plt+0xec4c>
   20128:	b	2012c <__assert_fail@plt+0xec50>
   2012c:	ldr	r0, [fp, #-8]
   20130:	ldr	r1, [r0]
   20134:	ldr	r0, [r0, #4]
   20138:	ldr	r2, [fp, #-12]
   2013c:	movw	r3, #32767	; 0x7fff
   20140:	sdiv	r2, r3, r2
   20144:	subs	r1, r1, r2
   20148:	sbcs	r0, r0, r2, asr #31
   2014c:	str	r1, [fp, #-128]	; 0xffffff80
   20150:	str	r0, [fp, #-132]	; 0xffffff7c
   20154:	bcc	2036c <__assert_fail@plt+0xee90>
   20158:	b	20390 <__assert_fail@plt+0xeeb4>
   2015c:	b	20160 <__assert_fail@plt+0xec84>
   20160:	ldr	r0, [pc, #2756]	; 20c2c <__assert_fail@plt+0xf750>
   20164:	ldr	r1, [fp, #-12]
   20168:	cmp	r1, r0
   2016c:	blt	20184 <__assert_fail@plt+0xeca8>
   20170:	b	20190 <__assert_fail@plt+0xecb4>
   20174:	ldr	r0, [fp, #-12]
   20178:	movw	r1, #0
   2017c:	cmp	r1, r0
   20180:	bge	20190 <__assert_fail@plt+0xecb4>
   20184:	movw	r0, #0
   20188:	str	r0, [fp, #-136]	; 0xffffff78
   2018c:	b	201a8 <__assert_fail@plt+0xeccc>
   20190:	ldr	r0, [fp, #-12]
   20194:	movw	r1, #0
   20198:	sub	r0, r1, r0
   2019c:	movw	r1, #32767	; 0x7fff
   201a0:	sdiv	r0, r1, r0
   201a4:	str	r0, [fp, #-136]	; 0xffffff78
   201a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   201ac:	ldr	r1, [fp, #-8]
   201b0:	ldr	r2, [r1]
   201b4:	ldr	r1, [r1, #4]
   201b8:	mvn	r1, r1
   201bc:	mvn	r2, r2
   201c0:	subs	r2, r2, r0
   201c4:	sbcs	r0, r1, r0, asr #31
   201c8:	str	r2, [fp, #-140]	; 0xffffff74
   201cc:	str	r0, [fp, #-144]	; 0xffffff70
   201d0:	bcs	2036c <__assert_fail@plt+0xee90>
   201d4:	b	20390 <__assert_fail@plt+0xeeb4>
   201d8:	b	201dc <__assert_fail@plt+0xed00>
   201dc:	b	2025c <__assert_fail@plt+0xed80>
   201e0:	b	2025c <__assert_fail@plt+0xed80>
   201e4:	ldr	r0, [fp, #-12]
   201e8:	cmn	r0, #1
   201ec:	bne	2025c <__assert_fail@plt+0xed80>
   201f0:	b	20214 <__assert_fail@plt+0xed38>
   201f4:	ldr	r0, [fp, #-8]
   201f8:	ldr	r1, [r0]
   201fc:	ldr	r0, [r0, #4]
   20200:	eor	r1, r1, #32768	; 0x8000
   20204:	orr	r0, r1, r0
   20208:	cmp	r0, #0
   2020c:	bne	2036c <__assert_fail@plt+0xee90>
   20210:	b	20390 <__assert_fail@plt+0xeeb4>
   20214:	ldr	r0, [fp, #-8]
   20218:	ldr	r1, [r0]
   2021c:	ldr	r0, [r0, #4]
   20220:	orr	r0, r1, r0
   20224:	cmp	r0, #0
   20228:	beq	20390 <__assert_fail@plt+0xeeb4>
   2022c:	b	20230 <__assert_fail@plt+0xed54>
   20230:	ldr	r0, [fp, #-8]
   20234:	ldr	r1, [r0]
   20238:	ldr	r0, [r0, #4]
   2023c:	subs	r1, r1, #1
   20240:	sbc	r0, r0, #0
   20244:	lsr	r1, r1, #15
   20248:	orr	r1, r1, r0, lsl #17
   2024c:	orr	r0, r1, r0, lsr #15
   20250:	cmp	r0, #0
   20254:	bne	2036c <__assert_fail@plt+0xee90>
   20258:	b	20390 <__assert_fail@plt+0xeeb4>
   2025c:	ldr	r0, [fp, #-12]
   20260:	movw	r1, #32768	; 0x8000
   20264:	movt	r1, #65535	; 0xffff
   20268:	sdiv	r0, r1, r0
   2026c:	ldr	r1, [fp, #-8]
   20270:	ldr	r2, [r1]
   20274:	ldr	r1, [r1, #4]
   20278:	subs	r2, r0, r2
   2027c:	rscs	r0, r1, r0, asr #31
   20280:	str	r2, [fp, #-148]	; 0xffffff6c
   20284:	str	r0, [fp, #-152]	; 0xffffff68
   20288:	bcc	2036c <__assert_fail@plt+0xee90>
   2028c:	b	20390 <__assert_fail@plt+0xeeb4>
   20290:	ldr	r0, [fp, #-12]
   20294:	cmp	r0, #0
   20298:	bne	202a0 <__assert_fail@plt+0xedc4>
   2029c:	b	20390 <__assert_fail@plt+0xeeb4>
   202a0:	mov	r0, #1
   202a4:	cmp	r0, #0
   202a8:	bne	2033c <__assert_fail@plt+0xee60>
   202ac:	b	202b0 <__assert_fail@plt+0xedd4>
   202b0:	ldr	r0, [fp, #-8]
   202b4:	ldr	r1, [r0]
   202b8:	ldr	r0, [r0, #4]
   202bc:	and	r0, r1, r0
   202c0:	cmn	r0, #1
   202c4:	bne	20304 <__assert_fail@plt+0xee28>
   202c8:	b	202cc <__assert_fail@plt+0xedf0>
   202cc:	b	202d0 <__assert_fail@plt+0xedf4>
   202d0:	ldr	r0, [pc, #4064]	; 212b8 <__assert_fail@plt+0xfddc>
   202d4:	ldr	r1, [fp, #-12]
   202d8:	add	r0, r1, r0
   202dc:	movw	r1, #0
   202e0:	cmp	r1, r0
   202e4:	blt	2036c <__assert_fail@plt+0xee90>
   202e8:	b	20390 <__assert_fail@plt+0xeeb4>
   202ec:	ldr	r0, [fp, #-12]
   202f0:	sub	r0, r0, #1
   202f4:	movw	r1, #32767	; 0x7fff
   202f8:	cmp	r1, r0
   202fc:	blt	2036c <__assert_fail@plt+0xee90>
   20300:	b	20390 <__assert_fail@plt+0xeeb4>
   20304:	ldr	r0, [fp, #-8]
   20308:	ldr	r2, [r0]
   2030c:	ldr	r3, [r0, #4]
   20310:	movw	r0, #32768	; 0x8000
   20314:	movt	r0, #65535	; 0xffff
   20318:	mvn	r1, #0
   2031c:	bl	245dc <__assert_fail@plt+0x13100>
   20320:	ldr	r2, [fp, #-12]
   20324:	subs	r0, r0, r2
   20328:	sbcs	r1, r1, r2, asr #31
   2032c:	str	r0, [fp, #-156]	; 0xffffff64
   20330:	str	r1, [fp, #-160]	; 0xffffff60
   20334:	bcc	2036c <__assert_fail@plt+0xee90>
   20338:	b	20390 <__assert_fail@plt+0xeeb4>
   2033c:	ldr	r0, [fp, #-12]
   20340:	movw	r1, #32767	; 0x7fff
   20344:	sdiv	r0, r1, r0
   20348:	ldr	r1, [fp, #-8]
   2034c:	ldr	r2, [r1]
   20350:	ldr	r1, [r1, #4]
   20354:	subs	r2, r0, r2
   20358:	rscs	r0, r1, r0, asr #31
   2035c:	str	r2, [fp, #-164]	; 0xffffff5c
   20360:	str	r0, [fp, #-168]	; 0xffffff58
   20364:	bcs	20390 <__assert_fail@plt+0xeeb4>
   20368:	b	2036c <__assert_fail@plt+0xee90>
   2036c:	ldr	r0, [fp, #-8]
   20370:	ldr	r0, [r0]
   20374:	ldr	r1, [fp, #-12]
   20378:	mul	r0, r0, r1
   2037c:	sxth	r0, r0
   20380:	asr	r1, r0, #31
   20384:	str	r0, [fp, #-24]	; 0xffffffe8
   20388:	str	r1, [fp, #-20]	; 0xffffffec
   2038c:	b	21678 <__assert_fail@plt+0x1019c>
   20390:	ldr	r0, [fp, #-8]
   20394:	ldr	r0, [r0]
   20398:	ldr	r1, [fp, #-12]
   2039c:	mul	r0, r0, r1
   203a0:	sxth	r0, r0
   203a4:	asr	r1, r0, #31
   203a8:	str	r0, [fp, #-24]	; 0xffffffe8
   203ac:	str	r1, [fp, #-20]	; 0xffffffec
   203b0:	b	21694 <__assert_fail@plt+0x101b8>
   203b4:	ldr	r0, [fp, #-12]
   203b8:	cmp	r0, #0
   203bc:	bge	20514 <__assert_fail@plt+0xf038>
   203c0:	mov	r0, #1
   203c4:	cmp	r0, #0
   203c8:	bne	20480 <__assert_fail@plt+0xefa4>
   203cc:	b	203d0 <__assert_fail@plt+0xeef4>
   203d0:	b	203d4 <__assert_fail@plt+0xeef8>
   203d4:	ldr	r0, [fp, #-8]
   203d8:	ldr	r1, [r0]
   203dc:	ldr	r0, [r0, #4]
   203e0:	ldr	r2, [fp, #-12]
   203e4:	movw	r3, #65535	; 0xffff
   203e8:	sdiv	r2, r3, r2
   203ec:	subs	r1, r1, r2
   203f0:	sbcs	r0, r0, r2, asr #31
   203f4:	str	r1, [fp, #-172]	; 0xffffff54
   203f8:	str	r0, [fp, #-176]	; 0xffffff50
   203fc:	bcc	205f8 <__assert_fail@plt+0xf11c>
   20400:	b	2061c <__assert_fail@plt+0xf140>
   20404:	b	20408 <__assert_fail@plt+0xef2c>
   20408:	ldr	r0, [pc, #2076]	; 20c2c <__assert_fail@plt+0xf750>
   2040c:	ldr	r1, [fp, #-12]
   20410:	cmp	r1, r0
   20414:	blt	2042c <__assert_fail@plt+0xef50>
   20418:	b	20438 <__assert_fail@plt+0xef5c>
   2041c:	ldr	r0, [fp, #-12]
   20420:	movw	r1, #0
   20424:	cmp	r1, r0
   20428:	bge	20438 <__assert_fail@plt+0xef5c>
   2042c:	movw	r0, #0
   20430:	str	r0, [fp, #-180]	; 0xffffff4c
   20434:	b	20450 <__assert_fail@plt+0xef74>
   20438:	ldr	r0, [fp, #-12]
   2043c:	movw	r1, #0
   20440:	sub	r0, r1, r0
   20444:	movw	r1, #65535	; 0xffff
   20448:	sdiv	r0, r1, r0
   2044c:	str	r0, [fp, #-180]	; 0xffffff4c
   20450:	ldr	r0, [fp, #-180]	; 0xffffff4c
   20454:	ldr	r1, [fp, #-8]
   20458:	ldr	r2, [r1]
   2045c:	ldr	r1, [r1, #4]
   20460:	mvn	r1, r1
   20464:	mvn	r2, r2
   20468:	subs	r2, r2, r0
   2046c:	sbcs	r0, r1, r0, asr #31
   20470:	str	r2, [fp, #-184]	; 0xffffff48
   20474:	str	r0, [fp, #-188]	; 0xffffff44
   20478:	bcs	205f8 <__assert_fail@plt+0xf11c>
   2047c:	b	2061c <__assert_fail@plt+0xf140>
   20480:	b	20484 <__assert_fail@plt+0xefa8>
   20484:	b	204e4 <__assert_fail@plt+0xf008>
   20488:	b	204e4 <__assert_fail@plt+0xf008>
   2048c:	ldr	r0, [fp, #-12]
   20490:	cmn	r0, #1
   20494:	bne	204e4 <__assert_fail@plt+0xf008>
   20498:	b	204b8 <__assert_fail@plt+0xefdc>
   2049c:	ldr	r0, [fp, #-8]
   204a0:	ldr	r1, [r0]
   204a4:	ldr	r0, [r0, #4]
   204a8:	orr	r0, r1, r0
   204ac:	cmp	r0, #0
   204b0:	bne	205f8 <__assert_fail@plt+0xf11c>
   204b4:	b	2061c <__assert_fail@plt+0xf140>
   204b8:	ldr	r0, [fp, #-8]
   204bc:	ldr	r1, [r0]
   204c0:	ldr	r0, [r0, #4]
   204c4:	orr	r0, r1, r0
   204c8:	cmp	r0, #0
   204cc:	beq	2061c <__assert_fail@plt+0xf140>
   204d0:	b	204d4 <__assert_fail@plt+0xeff8>
   204d4:	mov	r0, #0
   204d8:	cmp	r0, #0
   204dc:	bne	205f8 <__assert_fail@plt+0xf11c>
   204e0:	b	2061c <__assert_fail@plt+0xf140>
   204e4:	ldr	r0, [fp, #-12]
   204e8:	mov	r1, #0
   204ec:	sdiv	r0, r1, r0
   204f0:	ldr	r1, [fp, #-8]
   204f4:	ldr	r2, [r1]
   204f8:	ldr	r1, [r1, #4]
   204fc:	subs	r2, r0, r2
   20500:	rscs	r0, r1, r0, asr #31
   20504:	str	r2, [fp, #-192]	; 0xffffff40
   20508:	str	r0, [fp, #-196]	; 0xffffff3c
   2050c:	bcc	205f8 <__assert_fail@plt+0xf11c>
   20510:	b	2061c <__assert_fail@plt+0xf140>
   20514:	ldr	r0, [fp, #-12]
   20518:	cmp	r0, #0
   2051c:	bne	20524 <__assert_fail@plt+0xf048>
   20520:	b	2061c <__assert_fail@plt+0xf140>
   20524:	mov	r0, #1
   20528:	cmp	r0, #0
   2052c:	bne	205c8 <__assert_fail@plt+0xf0ec>
   20530:	b	20534 <__assert_fail@plt+0xf058>
   20534:	b	2053c <__assert_fail@plt+0xf060>
   20538:	b	20540 <__assert_fail@plt+0xf064>
   2053c:	b	20590 <__assert_fail@plt+0xf0b4>
   20540:	ldr	r0, [fp, #-8]
   20544:	ldr	r1, [r0]
   20548:	ldr	r0, [r0, #4]
   2054c:	and	r0, r1, r0
   20550:	cmn	r0, #1
   20554:	bne	20590 <__assert_fail@plt+0xf0b4>
   20558:	b	2055c <__assert_fail@plt+0xf080>
   2055c:	b	20560 <__assert_fail@plt+0xf084>
   20560:	ldr	r0, [fp, #-12]
   20564:	add	r0, r0, #0
   20568:	movw	r1, #0
   2056c:	cmp	r1, r0
   20570:	blt	205f8 <__assert_fail@plt+0xf11c>
   20574:	b	2061c <__assert_fail@plt+0xf140>
   20578:	ldr	r0, [fp, #-12]
   2057c:	sub	r0, r0, #1
   20580:	mvn	r1, #0
   20584:	cmp	r1, r0
   20588:	blt	205f8 <__assert_fail@plt+0xf11c>
   2058c:	b	2061c <__assert_fail@plt+0xf140>
   20590:	ldr	r0, [fp, #-8]
   20594:	ldr	r2, [r0]
   20598:	ldr	r3, [r0, #4]
   2059c:	mov	r0, #0
   205a0:	str	r0, [fp, #-200]	; 0xffffff38
   205a4:	ldr	r1, [fp, #-200]	; 0xffffff38
   205a8:	bl	245dc <__assert_fail@plt+0x13100>
   205ac:	ldr	r2, [fp, #-12]
   205b0:	subs	r0, r0, r2
   205b4:	sbcs	r1, r1, r2, asr #31
   205b8:	str	r0, [fp, #-204]	; 0xffffff34
   205bc:	str	r1, [fp, #-208]	; 0xffffff30
   205c0:	bcc	205f8 <__assert_fail@plt+0xf11c>
   205c4:	b	2061c <__assert_fail@plt+0xf140>
   205c8:	ldr	r0, [fp, #-12]
   205cc:	movw	r1, #65535	; 0xffff
   205d0:	sdiv	r0, r1, r0
   205d4:	ldr	r1, [fp, #-8]
   205d8:	ldr	r2, [r1]
   205dc:	ldr	r1, [r1, #4]
   205e0:	subs	r2, r0, r2
   205e4:	rscs	r0, r1, r0, asr #31
   205e8:	str	r2, [fp, #-212]	; 0xffffff2c
   205ec:	str	r0, [fp, #-216]	; 0xffffff28
   205f0:	bcs	2061c <__assert_fail@plt+0xf140>
   205f4:	b	205f8 <__assert_fail@plt+0xf11c>
   205f8:	ldr	r0, [fp, #-8]
   205fc:	ldr	r0, [r0]
   20600:	ldr	r1, [fp, #-12]
   20604:	mul	r0, r0, r1
   20608:	uxth	r0, r0
   2060c:	mov	r1, #0
   20610:	str	r1, [fp, #-20]	; 0xffffffec
   20614:	str	r0, [fp, #-24]	; 0xffffffe8
   20618:	b	21678 <__assert_fail@plt+0x1019c>
   2061c:	ldr	r0, [fp, #-8]
   20620:	ldr	r0, [r0]
   20624:	ldr	r1, [fp, #-12]
   20628:	mul	r0, r0, r1
   2062c:	uxth	r0, r0
   20630:	mov	r1, #0
   20634:	str	r1, [fp, #-20]	; 0xffffffec
   20638:	str	r0, [fp, #-24]	; 0xffffffe8
   2063c:	b	21694 <__assert_fail@plt+0x101b8>
   20640:	b	20b58 <__assert_fail@plt+0xf67c>
   20644:	b	208d4 <__assert_fail@plt+0xf3f8>
   20648:	ldr	r0, [fp, #-12]
   2064c:	cmp	r0, #0
   20650:	bge	207c0 <__assert_fail@plt+0xf2e4>
   20654:	mov	r0, #1
   20658:	cmp	r0, #0
   2065c:	bne	20714 <__assert_fail@plt+0xf238>
   20660:	b	20664 <__assert_fail@plt+0xf188>
   20664:	b	20668 <__assert_fail@plt+0xf18c>
   20668:	ldr	r0, [fp, #-8]
   2066c:	ldr	r1, [r0]
   20670:	ldr	r0, [r0, #4]
   20674:	ldr	r2, [fp, #-12]
   20678:	mvn	r3, #-2147483648	; 0x80000000
   2067c:	sdiv	r2, r3, r2
   20680:	subs	r1, r1, r2
   20684:	sbcs	r0, r0, r2, asr #31
   20688:	str	r1, [fp, #-220]	; 0xffffff24
   2068c:	str	r0, [fp, #-224]	; 0xffffff20
   20690:	bcc	20894 <__assert_fail@plt+0xf3b8>
   20694:	b	208b4 <__assert_fail@plt+0xf3d8>
   20698:	b	2069c <__assert_fail@plt+0xf1c0>
   2069c:	ldr	r0, [pc, #1416]	; 20c2c <__assert_fail@plt+0xf750>
   206a0:	ldr	r1, [fp, #-12]
   206a4:	cmp	r1, r0
   206a8:	blt	206c0 <__assert_fail@plt+0xf1e4>
   206ac:	b	206cc <__assert_fail@plt+0xf1f0>
   206b0:	ldr	r0, [fp, #-12]
   206b4:	movw	r1, #0
   206b8:	cmp	r1, r0
   206bc:	bge	206cc <__assert_fail@plt+0xf1f0>
   206c0:	movw	r0, #0
   206c4:	str	r0, [fp, #-228]	; 0xffffff1c
   206c8:	b	206e4 <__assert_fail@plt+0xf208>
   206cc:	ldr	r0, [pc, #4076]	; 216c0 <__assert_fail@plt+0x101e4>
   206d0:	ldr	r1, [fp, #-12]
   206d4:	movw	r2, #0
   206d8:	sub	r1, r2, r1
   206dc:	sdiv	r0, r0, r1
   206e0:	str	r0, [fp, #-228]	; 0xffffff1c
   206e4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   206e8:	ldr	r1, [fp, #-8]
   206ec:	ldr	r2, [r1]
   206f0:	ldr	r1, [r1, #4]
   206f4:	mvn	r1, r1
   206f8:	mvn	r2, r2
   206fc:	subs	r2, r2, r0
   20700:	sbcs	r0, r1, r0, asr #31
   20704:	str	r2, [fp, #-232]	; 0xffffff18
   20708:	str	r0, [fp, #-236]	; 0xffffff14
   2070c:	bcs	20894 <__assert_fail@plt+0xf3b8>
   20710:	b	208b4 <__assert_fail@plt+0xf3d8>
   20714:	ldr	r0, [fp, #-12]
   20718:	cmn	r0, #1
   2071c:	bne	20790 <__assert_fail@plt+0xf2b4>
   20720:	b	20744 <__assert_fail@plt+0xf268>
   20724:	ldr	r0, [fp, #-8]
   20728:	ldr	r1, [r0]
   2072c:	ldr	r0, [r0, #4]
   20730:	eor	r1, r1, #-2147483648	; 0x80000000
   20734:	orr	r0, r1, r0
   20738:	cmp	r0, #0
   2073c:	bne	20894 <__assert_fail@plt+0xf3b8>
   20740:	b	208b4 <__assert_fail@plt+0xf3d8>
   20744:	ldr	r0, [fp, #-8]
   20748:	ldr	r1, [r0]
   2074c:	ldr	r0, [r0, #4]
   20750:	orr	r0, r1, r0
   20754:	cmp	r0, #0
   20758:	beq	208b4 <__assert_fail@plt+0xf3d8>
   2075c:	b	20760 <__assert_fail@plt+0xf284>
   20760:	ldr	r0, [fp, #-8]
   20764:	ldr	r1, [r0]
   20768:	ldr	r0, [r0, #4]
   2076c:	subs	r1, r1, #1
   20770:	sbc	r0, r0, #0
   20774:	mvn	r2, #-2147483648	; 0x80000000
   20778:	subs	r1, r2, r1
   2077c:	rscs	r0, r0, #0
   20780:	str	r1, [fp, #-240]	; 0xffffff10
   20784:	str	r0, [fp, #-244]	; 0xffffff0c
   20788:	bcc	20894 <__assert_fail@plt+0xf3b8>
   2078c:	b	208b4 <__assert_fail@plt+0xf3d8>
   20790:	ldr	r0, [fp, #-12]
   20794:	mov	r1, #-2147483648	; 0x80000000
   20798:	sdiv	r0, r1, r0
   2079c:	ldr	r1, [fp, #-8]
   207a0:	ldr	r2, [r1]
   207a4:	ldr	r1, [r1, #4]
   207a8:	subs	r2, r0, r2
   207ac:	rscs	r0, r1, r0, asr #31
   207b0:	str	r2, [fp, #-248]	; 0xffffff08
   207b4:	str	r0, [fp, #-252]	; 0xffffff04
   207b8:	bcc	20894 <__assert_fail@plt+0xf3b8>
   207bc:	b	208b4 <__assert_fail@plt+0xf3d8>
   207c0:	ldr	r0, [fp, #-12]
   207c4:	cmp	r0, #0
   207c8:	bne	207d0 <__assert_fail@plt+0xf2f4>
   207cc:	b	208b4 <__assert_fail@plt+0xf3d8>
   207d0:	mov	r0, #1
   207d4:	cmp	r0, #0
   207d8:	bne	20864 <__assert_fail@plt+0xf388>
   207dc:	b	207e0 <__assert_fail@plt+0xf304>
   207e0:	ldr	r0, [fp, #-8]
   207e4:	ldr	r1, [r0]
   207e8:	ldr	r0, [r0, #4]
   207ec:	and	r0, r1, r0
   207f0:	cmn	r0, #1
   207f4:	bne	20830 <__assert_fail@plt+0xf354>
   207f8:	b	207fc <__assert_fail@plt+0xf320>
   207fc:	b	20800 <__assert_fail@plt+0xf324>
   20800:	ldr	r0, [fp, #-12]
   20804:	add	r0, r0, #-2147483648	; 0x80000000
   20808:	movw	r1, #0
   2080c:	cmp	r1, r0
   20810:	blt	20894 <__assert_fail@plt+0xf3b8>
   20814:	b	208b4 <__assert_fail@plt+0xf3d8>
   20818:	ldr	r0, [pc, #3744]	; 216c0 <__assert_fail@plt+0x101e4>
   2081c:	ldr	r1, [fp, #-12]
   20820:	sub	r1, r1, #1
   20824:	cmp	r0, r1
   20828:	blt	20894 <__assert_fail@plt+0xf3b8>
   2082c:	b	208b4 <__assert_fail@plt+0xf3d8>
   20830:	ldr	r0, [fp, #-8]
   20834:	ldr	r2, [r0]
   20838:	ldr	r3, [r0, #4]
   2083c:	mov	r0, #-2147483648	; 0x80000000
   20840:	mvn	r1, #0
   20844:	bl	245dc <__assert_fail@plt+0x13100>
   20848:	ldr	r2, [fp, #-12]
   2084c:	subs	r0, r0, r2
   20850:	sbcs	r1, r1, r2, asr #31
   20854:	str	r0, [fp, #-256]	; 0xffffff00
   20858:	str	r1, [fp, #-260]	; 0xfffffefc
   2085c:	bcc	20894 <__assert_fail@plt+0xf3b8>
   20860:	b	208b4 <__assert_fail@plt+0xf3d8>
   20864:	ldr	r0, [fp, #-12]
   20868:	mvn	r1, #-2147483648	; 0x80000000
   2086c:	sdiv	r0, r1, r0
   20870:	ldr	r1, [fp, #-8]
   20874:	ldr	r2, [r1]
   20878:	ldr	r1, [r1, #4]
   2087c:	subs	r2, r0, r2
   20880:	rscs	r0, r1, r0, asr #31
   20884:	str	r2, [fp, #-264]	; 0xfffffef8
   20888:	str	r0, [fp, #-268]	; 0xfffffef4
   2088c:	bcs	208b4 <__assert_fail@plt+0xf3d8>
   20890:	b	20894 <__assert_fail@plt+0xf3b8>
   20894:	ldr	r0, [fp, #-8]
   20898:	ldr	r0, [r0]
   2089c:	ldr	r1, [fp, #-12]
   208a0:	mul	r0, r0, r1
   208a4:	asr	r1, r0, #31
   208a8:	str	r0, [fp, #-24]	; 0xffffffe8
   208ac:	str	r1, [fp, #-20]	; 0xffffffec
   208b0:	b	21678 <__assert_fail@plt+0x1019c>
   208b4:	ldr	r0, [fp, #-8]
   208b8:	ldr	r0, [r0]
   208bc:	ldr	r1, [fp, #-12]
   208c0:	mul	r0, r0, r1
   208c4:	asr	r1, r0, #31
   208c8:	str	r0, [fp, #-24]	; 0xffffffe8
   208cc:	str	r1, [fp, #-20]	; 0xffffffec
   208d0:	b	21694 <__assert_fail@plt+0x101b8>
   208d4:	ldr	r0, [fp, #-12]
   208d8:	cmp	r0, #0
   208dc:	bge	20a34 <__assert_fail@plt+0xf558>
   208e0:	mov	r0, #1
   208e4:	cmp	r0, #0
   208e8:	bne	209a0 <__assert_fail@plt+0xf4c4>
   208ec:	b	208f0 <__assert_fail@plt+0xf414>
   208f0:	b	20924 <__assert_fail@plt+0xf448>
   208f4:	ldr	r0, [fp, #-8]
   208f8:	ldr	r1, [r0]
   208fc:	ldr	r0, [r0, #4]
   20900:	ldr	r2, [fp, #-12]
   20904:	mvn	r3, #0
   20908:	udiv	r2, r3, r2
   2090c:	subs	r1, r1, r2
   20910:	sbcs	r0, r0, #0
   20914:	str	r1, [fp, #-272]	; 0xfffffef0
   20918:	str	r0, [fp, #-276]	; 0xfffffeec
   2091c:	bcc	20b18 <__assert_fail@plt+0xf63c>
   20920:	b	20b38 <__assert_fail@plt+0xf65c>
   20924:	b	20928 <__assert_fail@plt+0xf44c>
   20928:	ldr	r0, [pc, #3468]	; 216bc <__assert_fail@plt+0x101e0>
   2092c:	ldr	r1, [fp, #-12]
   20930:	cmp	r1, r0
   20934:	blt	2094c <__assert_fail@plt+0xf470>
   20938:	b	20958 <__assert_fail@plt+0xf47c>
   2093c:	ldr	r0, [fp, #-12]
   20940:	movw	r1, #0
   20944:	cmp	r1, r0
   20948:	bge	20958 <__assert_fail@plt+0xf47c>
   2094c:	movw	r0, #1
   20950:	str	r0, [fp, #-280]	; 0xfffffee8
   20954:	b	20970 <__assert_fail@plt+0xf494>
   20958:	ldr	r0, [fp, #-12]
   2095c:	movw	r1, #0
   20960:	sub	r0, r1, r0
   20964:	mvn	r1, #0
   20968:	udiv	r0, r1, r0
   2096c:	str	r0, [fp, #-280]	; 0xfffffee8
   20970:	ldr	r0, [fp, #-280]	; 0xfffffee8
   20974:	ldr	r1, [fp, #-8]
   20978:	ldr	r2, [r1]
   2097c:	ldr	r1, [r1, #4]
   20980:	mvn	r1, r1
   20984:	mvn	r2, r2
   20988:	subs	r0, r2, r0
   2098c:	sbcs	r1, r1, #0
   20990:	str	r0, [sp, #284]	; 0x11c
   20994:	str	r1, [sp, #280]	; 0x118
   20998:	bcs	20b18 <__assert_fail@plt+0xf63c>
   2099c:	b	20b38 <__assert_fail@plt+0xf65c>
   209a0:	b	209a4 <__assert_fail@plt+0xf4c8>
   209a4:	b	20a04 <__assert_fail@plt+0xf528>
   209a8:	b	20a04 <__assert_fail@plt+0xf528>
   209ac:	ldr	r0, [fp, #-12]
   209b0:	cmn	r0, #1
   209b4:	bne	20a04 <__assert_fail@plt+0xf528>
   209b8:	b	209d8 <__assert_fail@plt+0xf4fc>
   209bc:	ldr	r0, [fp, #-8]
   209c0:	ldr	r1, [r0]
   209c4:	ldr	r0, [r0, #4]
   209c8:	orr	r0, r1, r0
   209cc:	cmp	r0, #0
   209d0:	bne	20b18 <__assert_fail@plt+0xf63c>
   209d4:	b	20b38 <__assert_fail@plt+0xf65c>
   209d8:	ldr	r0, [fp, #-8]
   209dc:	ldr	r1, [r0]
   209e0:	ldr	r0, [r0, #4]
   209e4:	orr	r0, r1, r0
   209e8:	cmp	r0, #0
   209ec:	beq	20b38 <__assert_fail@plt+0xf65c>
   209f0:	b	209f4 <__assert_fail@plt+0xf518>
   209f4:	mov	r0, #0
   209f8:	cmp	r0, #0
   209fc:	bne	20b18 <__assert_fail@plt+0xf63c>
   20a00:	b	20b38 <__assert_fail@plt+0xf65c>
   20a04:	ldr	r0, [fp, #-12]
   20a08:	mov	r1, #0
   20a0c:	sdiv	r0, r1, r0
   20a10:	ldr	r1, [fp, #-8]
   20a14:	ldr	r2, [r1]
   20a18:	ldr	r1, [r1, #4]
   20a1c:	subs	r2, r0, r2
   20a20:	rscs	r0, r1, r0, asr #31
   20a24:	str	r2, [sp, #276]	; 0x114
   20a28:	str	r0, [sp, #272]	; 0x110
   20a2c:	bcc	20b18 <__assert_fail@plt+0xf63c>
   20a30:	b	20b38 <__assert_fail@plt+0xf65c>
   20a34:	ldr	r0, [fp, #-12]
   20a38:	cmp	r0, #0
   20a3c:	bne	20a44 <__assert_fail@plt+0xf568>
   20a40:	b	20b38 <__assert_fail@plt+0xf65c>
   20a44:	mov	r0, #1
   20a48:	cmp	r0, #0
   20a4c:	bne	20ae8 <__assert_fail@plt+0xf60c>
   20a50:	b	20a54 <__assert_fail@plt+0xf578>
   20a54:	b	20a5c <__assert_fail@plt+0xf580>
   20a58:	b	20a60 <__assert_fail@plt+0xf584>
   20a5c:	b	20ab0 <__assert_fail@plt+0xf5d4>
   20a60:	ldr	r0, [fp, #-8]
   20a64:	ldr	r1, [r0]
   20a68:	ldr	r0, [r0, #4]
   20a6c:	and	r0, r1, r0
   20a70:	cmn	r0, #1
   20a74:	bne	20ab0 <__assert_fail@plt+0xf5d4>
   20a78:	b	20a7c <__assert_fail@plt+0xf5a0>
   20a7c:	b	20a80 <__assert_fail@plt+0xf5a4>
   20a80:	ldr	r0, [fp, #-12]
   20a84:	add	r0, r0, #0
   20a88:	movw	r1, #0
   20a8c:	cmp	r1, r0
   20a90:	blt	20b18 <__assert_fail@plt+0xf63c>
   20a94:	b	20b38 <__assert_fail@plt+0xf65c>
   20a98:	ldr	r0, [fp, #-12]
   20a9c:	sub	r0, r0, #1
   20aa0:	mvn	r1, #0
   20aa4:	cmp	r1, r0
   20aa8:	blt	20b18 <__assert_fail@plt+0xf63c>
   20aac:	b	20b38 <__assert_fail@plt+0xf65c>
   20ab0:	ldr	r0, [fp, #-8]
   20ab4:	ldr	r2, [r0]
   20ab8:	ldr	r3, [r0, #4]
   20abc:	mov	r0, #0
   20ac0:	str	r0, [sp, #268]	; 0x10c
   20ac4:	ldr	r1, [sp, #268]	; 0x10c
   20ac8:	bl	245dc <__assert_fail@plt+0x13100>
   20acc:	ldr	r2, [fp, #-12]
   20ad0:	subs	r0, r0, r2
   20ad4:	sbcs	r1, r1, r2, asr #31
   20ad8:	str	r0, [sp, #264]	; 0x108
   20adc:	str	r1, [sp, #260]	; 0x104
   20ae0:	bcc	20b18 <__assert_fail@plt+0xf63c>
   20ae4:	b	20b38 <__assert_fail@plt+0xf65c>
   20ae8:	ldr	r0, [fp, #-12]
   20aec:	mvn	r1, #0
   20af0:	udiv	r0, r1, r0
   20af4:	ldr	r1, [fp, #-8]
   20af8:	ldr	r2, [r1]
   20afc:	ldr	r1, [r1, #4]
   20b00:	subs	r0, r0, r2
   20b04:	rscs	r1, r1, #0
   20b08:	str	r0, [sp, #256]	; 0x100
   20b0c:	str	r1, [sp, #252]	; 0xfc
   20b10:	bcs	20b38 <__assert_fail@plt+0xf65c>
   20b14:	b	20b18 <__assert_fail@plt+0xf63c>
   20b18:	ldr	r0, [fp, #-8]
   20b1c:	ldr	r0, [r0]
   20b20:	ldr	r1, [fp, #-12]
   20b24:	mul	r0, r0, r1
   20b28:	mov	r1, #0
   20b2c:	str	r1, [fp, #-20]	; 0xffffffec
   20b30:	str	r0, [fp, #-24]	; 0xffffffe8
   20b34:	b	21678 <__assert_fail@plt+0x1019c>
   20b38:	ldr	r0, [fp, #-8]
   20b3c:	ldr	r0, [r0]
   20b40:	ldr	r1, [fp, #-12]
   20b44:	mul	r0, r0, r1
   20b48:	mov	r1, #0
   20b4c:	str	r1, [fp, #-20]	; 0xffffffec
   20b50:	str	r0, [fp, #-24]	; 0xffffffe8
   20b54:	b	21694 <__assert_fail@plt+0x101b8>
   20b58:	b	21074 <__assert_fail@plt+0xfb98>
   20b5c:	b	20df0 <__assert_fail@plt+0xf914>
   20b60:	ldr	r0, [fp, #-12]
   20b64:	cmp	r0, #0
   20b68:	bge	20cdc <__assert_fail@plt+0xf800>
   20b6c:	mov	r0, #1
   20b70:	cmp	r0, #0
   20b74:	bne	20c30 <__assert_fail@plt+0xf754>
   20b78:	b	20b7c <__assert_fail@plt+0xf6a0>
   20b7c:	b	20b80 <__assert_fail@plt+0xf6a4>
   20b80:	ldr	r0, [fp, #-8]
   20b84:	ldr	r1, [r0]
   20b88:	ldr	r0, [r0, #4]
   20b8c:	ldr	r2, [fp, #-12]
   20b90:	mvn	r3, #-2147483648	; 0x80000000
   20b94:	sdiv	r2, r3, r2
   20b98:	subs	r1, r1, r2
   20b9c:	sbcs	r0, r0, r2, asr #31
   20ba0:	str	r1, [sp, #248]	; 0xf8
   20ba4:	str	r0, [sp, #244]	; 0xf4
   20ba8:	bcc	20db0 <__assert_fail@plt+0xf8d4>
   20bac:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20bb0:	b	20bb4 <__assert_fail@plt+0xf6d8>
   20bb4:	ldr	r0, [pc, #2816]	; 216bc <__assert_fail@plt+0x101e0>
   20bb8:	ldr	r1, [fp, #-12]
   20bbc:	cmp	r1, r0
   20bc0:	blt	20bd8 <__assert_fail@plt+0xf6fc>
   20bc4:	b	20be4 <__assert_fail@plt+0xf708>
   20bc8:	ldr	r0, [fp, #-12]
   20bcc:	movw	r1, #0
   20bd0:	cmp	r1, r0
   20bd4:	bge	20be4 <__assert_fail@plt+0xf708>
   20bd8:	movw	r0, #0
   20bdc:	str	r0, [sp, #240]	; 0xf0
   20be0:	b	20bfc <__assert_fail@plt+0xf720>
   20be4:	ldr	r0, [pc, #2772]	; 216c0 <__assert_fail@plt+0x101e4>
   20be8:	ldr	r1, [fp, #-12]
   20bec:	movw	r2, #0
   20bf0:	sub	r1, r2, r1
   20bf4:	sdiv	r0, r0, r1
   20bf8:	str	r0, [sp, #240]	; 0xf0
   20bfc:	ldr	r0, [sp, #240]	; 0xf0
   20c00:	ldr	r1, [fp, #-8]
   20c04:	ldr	r2, [r1]
   20c08:	ldr	r1, [r1, #4]
   20c0c:	mvn	r1, r1
   20c10:	mvn	r2, r2
   20c14:	subs	r2, r2, r0
   20c18:	sbcs	r0, r1, r0, asr #31
   20c1c:	str	r2, [sp, #236]	; 0xec
   20c20:	str	r0, [sp, #232]	; 0xe8
   20c24:	bcs	20db0 <__assert_fail@plt+0xf8d4>
   20c28:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20c2c:	andhi	r0, r0, r1
   20c30:	ldr	r0, [fp, #-12]
   20c34:	cmn	r0, #1
   20c38:	bne	20cac <__assert_fail@plt+0xf7d0>
   20c3c:	b	20c60 <__assert_fail@plt+0xf784>
   20c40:	ldr	r0, [fp, #-8]
   20c44:	ldr	r1, [r0]
   20c48:	ldr	r0, [r0, #4]
   20c4c:	eor	r1, r1, #-2147483648	; 0x80000000
   20c50:	orr	r0, r1, r0
   20c54:	cmp	r0, #0
   20c58:	bne	20db0 <__assert_fail@plt+0xf8d4>
   20c5c:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20c60:	ldr	r0, [fp, #-8]
   20c64:	ldr	r1, [r0]
   20c68:	ldr	r0, [r0, #4]
   20c6c:	orr	r0, r1, r0
   20c70:	cmp	r0, #0
   20c74:	beq	20dd0 <__assert_fail@plt+0xf8f4>
   20c78:	b	20c7c <__assert_fail@plt+0xf7a0>
   20c7c:	ldr	r0, [fp, #-8]
   20c80:	ldr	r1, [r0]
   20c84:	ldr	r0, [r0, #4]
   20c88:	subs	r1, r1, #1
   20c8c:	sbc	r0, r0, #0
   20c90:	mvn	r2, #-2147483648	; 0x80000000
   20c94:	subs	r1, r2, r1
   20c98:	rscs	r0, r0, #0
   20c9c:	str	r1, [sp, #228]	; 0xe4
   20ca0:	str	r0, [sp, #224]	; 0xe0
   20ca4:	bcc	20db0 <__assert_fail@plt+0xf8d4>
   20ca8:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20cac:	ldr	r0, [fp, #-12]
   20cb0:	mov	r1, #-2147483648	; 0x80000000
   20cb4:	sdiv	r0, r1, r0
   20cb8:	ldr	r1, [fp, #-8]
   20cbc:	ldr	r2, [r1]
   20cc0:	ldr	r1, [r1, #4]
   20cc4:	subs	r2, r0, r2
   20cc8:	rscs	r0, r1, r0, asr #31
   20ccc:	str	r2, [sp, #220]	; 0xdc
   20cd0:	str	r0, [sp, #216]	; 0xd8
   20cd4:	bcc	20db0 <__assert_fail@plt+0xf8d4>
   20cd8:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20cdc:	ldr	r0, [fp, #-12]
   20ce0:	cmp	r0, #0
   20ce4:	bne	20cec <__assert_fail@plt+0xf810>
   20ce8:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20cec:	mov	r0, #1
   20cf0:	cmp	r0, #0
   20cf4:	bne	20d80 <__assert_fail@plt+0xf8a4>
   20cf8:	b	20cfc <__assert_fail@plt+0xf820>
   20cfc:	ldr	r0, [fp, #-8]
   20d00:	ldr	r1, [r0]
   20d04:	ldr	r0, [r0, #4]
   20d08:	and	r0, r1, r0
   20d0c:	cmn	r0, #1
   20d10:	bne	20d4c <__assert_fail@plt+0xf870>
   20d14:	b	20d18 <__assert_fail@plt+0xf83c>
   20d18:	b	20d1c <__assert_fail@plt+0xf840>
   20d1c:	ldr	r0, [fp, #-12]
   20d20:	add	r0, r0, #-2147483648	; 0x80000000
   20d24:	movw	r1, #0
   20d28:	cmp	r1, r0
   20d2c:	blt	20db0 <__assert_fail@plt+0xf8d4>
   20d30:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20d34:	ldr	r0, [pc, #2436]	; 216c0 <__assert_fail@plt+0x101e4>
   20d38:	ldr	r1, [fp, #-12]
   20d3c:	sub	r1, r1, #1
   20d40:	cmp	r0, r1
   20d44:	blt	20db0 <__assert_fail@plt+0xf8d4>
   20d48:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20d4c:	ldr	r0, [fp, #-8]
   20d50:	ldr	r2, [r0]
   20d54:	ldr	r3, [r0, #4]
   20d58:	mov	r0, #-2147483648	; 0x80000000
   20d5c:	mvn	r1, #0
   20d60:	bl	245dc <__assert_fail@plt+0x13100>
   20d64:	ldr	r2, [fp, #-12]
   20d68:	subs	r0, r0, r2
   20d6c:	sbcs	r1, r1, r2, asr #31
   20d70:	str	r0, [sp, #212]	; 0xd4
   20d74:	str	r1, [sp, #208]	; 0xd0
   20d78:	bcc	20db0 <__assert_fail@plt+0xf8d4>
   20d7c:	b	20dd0 <__assert_fail@plt+0xf8f4>
   20d80:	ldr	r0, [fp, #-12]
   20d84:	mvn	r1, #-2147483648	; 0x80000000
   20d88:	sdiv	r0, r1, r0
   20d8c:	ldr	r1, [fp, #-8]
   20d90:	ldr	r2, [r1]
   20d94:	ldr	r1, [r1, #4]
   20d98:	subs	r2, r0, r2
   20d9c:	rscs	r0, r1, r0, asr #31
   20da0:	str	r2, [sp, #204]	; 0xcc
   20da4:	str	r0, [sp, #200]	; 0xc8
   20da8:	bcs	20dd0 <__assert_fail@plt+0xf8f4>
   20dac:	b	20db0 <__assert_fail@plt+0xf8d4>
   20db0:	ldr	r0, [fp, #-8]
   20db4:	ldr	r0, [r0]
   20db8:	ldr	r1, [fp, #-12]
   20dbc:	mul	r0, r0, r1
   20dc0:	asr	r1, r0, #31
   20dc4:	str	r0, [fp, #-24]	; 0xffffffe8
   20dc8:	str	r1, [fp, #-20]	; 0xffffffec
   20dcc:	b	21678 <__assert_fail@plt+0x1019c>
   20dd0:	ldr	r0, [fp, #-8]
   20dd4:	ldr	r0, [r0]
   20dd8:	ldr	r1, [fp, #-12]
   20ddc:	mul	r0, r0, r1
   20de0:	asr	r1, r0, #31
   20de4:	str	r0, [fp, #-24]	; 0xffffffe8
   20de8:	str	r1, [fp, #-20]	; 0xffffffec
   20dec:	b	21694 <__assert_fail@plt+0x101b8>
   20df0:	ldr	r0, [fp, #-12]
   20df4:	cmp	r0, #0
   20df8:	bge	20f50 <__assert_fail@plt+0xfa74>
   20dfc:	mov	r0, #1
   20e00:	cmp	r0, #0
   20e04:	bne	20ebc <__assert_fail@plt+0xf9e0>
   20e08:	b	20e0c <__assert_fail@plt+0xf930>
   20e0c:	b	20e40 <__assert_fail@plt+0xf964>
   20e10:	ldr	r0, [fp, #-8]
   20e14:	ldr	r1, [r0]
   20e18:	ldr	r0, [r0, #4]
   20e1c:	ldr	r2, [fp, #-12]
   20e20:	mvn	r3, #0
   20e24:	udiv	r2, r3, r2
   20e28:	subs	r1, r1, r2
   20e2c:	sbcs	r0, r0, #0
   20e30:	str	r1, [sp, #196]	; 0xc4
   20e34:	str	r0, [sp, #192]	; 0xc0
   20e38:	bcc	21034 <__assert_fail@plt+0xfb58>
   20e3c:	b	21054 <__assert_fail@plt+0xfb78>
   20e40:	b	20e44 <__assert_fail@plt+0xf968>
   20e44:	ldr	r0, [pc, #2160]	; 216bc <__assert_fail@plt+0x101e0>
   20e48:	ldr	r1, [fp, #-12]
   20e4c:	cmp	r1, r0
   20e50:	blt	20e68 <__assert_fail@plt+0xf98c>
   20e54:	b	20e74 <__assert_fail@plt+0xf998>
   20e58:	ldr	r0, [fp, #-12]
   20e5c:	movw	r1, #0
   20e60:	cmp	r1, r0
   20e64:	bge	20e74 <__assert_fail@plt+0xf998>
   20e68:	movw	r0, #1
   20e6c:	str	r0, [sp, #188]	; 0xbc
   20e70:	b	20e8c <__assert_fail@plt+0xf9b0>
   20e74:	ldr	r0, [fp, #-12]
   20e78:	movw	r1, #0
   20e7c:	sub	r0, r1, r0
   20e80:	mvn	r1, #0
   20e84:	udiv	r0, r1, r0
   20e88:	str	r0, [sp, #188]	; 0xbc
   20e8c:	ldr	r0, [sp, #188]	; 0xbc
   20e90:	ldr	r1, [fp, #-8]
   20e94:	ldr	r2, [r1]
   20e98:	ldr	r1, [r1, #4]
   20e9c:	mvn	r1, r1
   20ea0:	mvn	r2, r2
   20ea4:	subs	r0, r2, r0
   20ea8:	sbcs	r1, r1, #0
   20eac:	str	r0, [sp, #184]	; 0xb8
   20eb0:	str	r1, [sp, #180]	; 0xb4
   20eb4:	bcs	21034 <__assert_fail@plt+0xfb58>
   20eb8:	b	21054 <__assert_fail@plt+0xfb78>
   20ebc:	b	20ec0 <__assert_fail@plt+0xf9e4>
   20ec0:	b	20f20 <__assert_fail@plt+0xfa44>
   20ec4:	b	20f20 <__assert_fail@plt+0xfa44>
   20ec8:	ldr	r0, [fp, #-12]
   20ecc:	cmn	r0, #1
   20ed0:	bne	20f20 <__assert_fail@plt+0xfa44>
   20ed4:	b	20ef4 <__assert_fail@plt+0xfa18>
   20ed8:	ldr	r0, [fp, #-8]
   20edc:	ldr	r1, [r0]
   20ee0:	ldr	r0, [r0, #4]
   20ee4:	orr	r0, r1, r0
   20ee8:	cmp	r0, #0
   20eec:	bne	21034 <__assert_fail@plt+0xfb58>
   20ef0:	b	21054 <__assert_fail@plt+0xfb78>
   20ef4:	ldr	r0, [fp, #-8]
   20ef8:	ldr	r1, [r0]
   20efc:	ldr	r0, [r0, #4]
   20f00:	orr	r0, r1, r0
   20f04:	cmp	r0, #0
   20f08:	beq	21054 <__assert_fail@plt+0xfb78>
   20f0c:	b	20f10 <__assert_fail@plt+0xfa34>
   20f10:	mov	r0, #0
   20f14:	cmp	r0, #0
   20f18:	bne	21034 <__assert_fail@plt+0xfb58>
   20f1c:	b	21054 <__assert_fail@plt+0xfb78>
   20f20:	ldr	r0, [fp, #-12]
   20f24:	mov	r1, #0
   20f28:	sdiv	r0, r1, r0
   20f2c:	ldr	r1, [fp, #-8]
   20f30:	ldr	r2, [r1]
   20f34:	ldr	r1, [r1, #4]
   20f38:	subs	r2, r0, r2
   20f3c:	rscs	r0, r1, r0, asr #31
   20f40:	str	r2, [sp, #176]	; 0xb0
   20f44:	str	r0, [sp, #172]	; 0xac
   20f48:	bcc	21034 <__assert_fail@plt+0xfb58>
   20f4c:	b	21054 <__assert_fail@plt+0xfb78>
   20f50:	ldr	r0, [fp, #-12]
   20f54:	cmp	r0, #0
   20f58:	bne	20f60 <__assert_fail@plt+0xfa84>
   20f5c:	b	21054 <__assert_fail@plt+0xfb78>
   20f60:	mov	r0, #1
   20f64:	cmp	r0, #0
   20f68:	bne	21004 <__assert_fail@plt+0xfb28>
   20f6c:	b	20f70 <__assert_fail@plt+0xfa94>
   20f70:	b	20f78 <__assert_fail@plt+0xfa9c>
   20f74:	b	20f7c <__assert_fail@plt+0xfaa0>
   20f78:	b	20fcc <__assert_fail@plt+0xfaf0>
   20f7c:	ldr	r0, [fp, #-8]
   20f80:	ldr	r1, [r0]
   20f84:	ldr	r0, [r0, #4]
   20f88:	and	r0, r1, r0
   20f8c:	cmn	r0, #1
   20f90:	bne	20fcc <__assert_fail@plt+0xfaf0>
   20f94:	b	20f98 <__assert_fail@plt+0xfabc>
   20f98:	b	20f9c <__assert_fail@plt+0xfac0>
   20f9c:	ldr	r0, [fp, #-12]
   20fa0:	add	r0, r0, #0
   20fa4:	movw	r1, #0
   20fa8:	cmp	r1, r0
   20fac:	blt	21034 <__assert_fail@plt+0xfb58>
   20fb0:	b	21054 <__assert_fail@plt+0xfb78>
   20fb4:	ldr	r0, [fp, #-12]
   20fb8:	sub	r0, r0, #1
   20fbc:	mvn	r1, #0
   20fc0:	cmp	r1, r0
   20fc4:	blt	21034 <__assert_fail@plt+0xfb58>
   20fc8:	b	21054 <__assert_fail@plt+0xfb78>
   20fcc:	ldr	r0, [fp, #-8]
   20fd0:	ldr	r2, [r0]
   20fd4:	ldr	r3, [r0, #4]
   20fd8:	mov	r0, #0
   20fdc:	str	r0, [sp, #168]	; 0xa8
   20fe0:	ldr	r1, [sp, #168]	; 0xa8
   20fe4:	bl	245dc <__assert_fail@plt+0x13100>
   20fe8:	ldr	r2, [fp, #-12]
   20fec:	subs	r0, r0, r2
   20ff0:	sbcs	r1, r1, r2, asr #31
   20ff4:	str	r0, [sp, #164]	; 0xa4
   20ff8:	str	r1, [sp, #160]	; 0xa0
   20ffc:	bcc	21034 <__assert_fail@plt+0xfb58>
   21000:	b	21054 <__assert_fail@plt+0xfb78>
   21004:	ldr	r0, [fp, #-12]
   21008:	mvn	r1, #0
   2100c:	udiv	r0, r1, r0
   21010:	ldr	r1, [fp, #-8]
   21014:	ldr	r2, [r1]
   21018:	ldr	r1, [r1, #4]
   2101c:	subs	r0, r0, r2
   21020:	rscs	r1, r1, #0
   21024:	str	r0, [sp, #156]	; 0x9c
   21028:	str	r1, [sp, #152]	; 0x98
   2102c:	bcs	21054 <__assert_fail@plt+0xfb78>
   21030:	b	21034 <__assert_fail@plt+0xfb58>
   21034:	ldr	r0, [fp, #-8]
   21038:	ldr	r0, [r0]
   2103c:	ldr	r1, [fp, #-12]
   21040:	mul	r0, r0, r1
   21044:	mov	r1, #0
   21048:	str	r1, [fp, #-20]	; 0xffffffec
   2104c:	str	r0, [fp, #-24]	; 0xffffffe8
   21050:	b	21678 <__assert_fail@plt+0x1019c>
   21054:	ldr	r0, [fp, #-8]
   21058:	ldr	r0, [r0]
   2105c:	ldr	r1, [fp, #-12]
   21060:	mul	r0, r0, r1
   21064:	mov	r1, #0
   21068:	str	r1, [fp, #-20]	; 0xffffffec
   2106c:	str	r0, [fp, #-24]	; 0xffffffe8
   21070:	b	21694 <__assert_fail@plt+0x101b8>
   21074:	b	21390 <__assert_fail@plt+0xfeb4>
   21078:	ldr	r0, [fp, #-12]
   2107c:	cmp	r0, #0
   21080:	bge	21244 <__assert_fail@plt+0xfd68>
   21084:	mov	r0, #1
   21088:	cmp	r0, #0
   2108c:	bne	2118c <__assert_fail@plt+0xfcb0>
   21090:	b	21094 <__assert_fail@plt+0xfbb8>
   21094:	b	21098 <__assert_fail@plt+0xfbbc>
   21098:	ldr	r0, [fp, #-8]
   2109c:	ldr	r1, [r0]
   210a0:	ldr	r0, [r0, #4]
   210a4:	ldr	r2, [fp, #-12]
   210a8:	asr	r3, r2, #31
   210ac:	mvn	ip, #0
   210b0:	mvn	lr, #-2147483648	; 0x80000000
   210b4:	str	r0, [sp, #148]	; 0x94
   210b8:	mov	r0, ip
   210bc:	str	r1, [sp, #144]	; 0x90
   210c0:	mov	r1, lr
   210c4:	bl	24508 <__assert_fail@plt+0x1302c>
   210c8:	ldr	r2, [sp, #144]	; 0x90
   210cc:	subs	r0, r2, r0
   210d0:	ldr	r2, [sp, #148]	; 0x94
   210d4:	sbcs	r1, r2, r1
   210d8:	str	r0, [sp, #140]	; 0x8c
   210dc:	str	r1, [sp, #136]	; 0x88
   210e0:	bcc	21338 <__assert_fail@plt+0xfe5c>
   210e4:	b	21364 <__assert_fail@plt+0xfe88>
   210e8:	b	210ec <__assert_fail@plt+0xfc10>
   210ec:	ldr	r0, [pc, #1480]	; 216bc <__assert_fail@plt+0x101e0>
   210f0:	ldr	r1, [fp, #-12]
   210f4:	cmp	r1, r0
   210f8:	blt	21110 <__assert_fail@plt+0xfc34>
   210fc:	b	21124 <__assert_fail@plt+0xfc48>
   21100:	ldr	r0, [fp, #-12]
   21104:	movw	r1, #0
   21108:	cmp	r1, r0
   2110c:	bge	21124 <__assert_fail@plt+0xfc48>
   21110:	mov	r0, #0
   21114:	mvn	r1, #0
   21118:	str	r1, [sp, #132]	; 0x84
   2111c:	str	r0, [sp, #128]	; 0x80
   21120:	b	21158 <__assert_fail@plt+0xfc7c>
   21124:	ldr	r0, [fp, #-12]
   21128:	rsb	r0, r0, #0
   2112c:	asr	r3, r0, #31
   21130:	mvn	r1, #0
   21134:	mvn	r2, #-2147483648	; 0x80000000
   21138:	str	r0, [sp, #124]	; 0x7c
   2113c:	mov	r0, r1
   21140:	mov	r1, r2
   21144:	ldr	r2, [sp, #124]	; 0x7c
   21148:	bl	24508 <__assert_fail@plt+0x1302c>
   2114c:	str	r0, [sp, #132]	; 0x84
   21150:	str	r1, [sp, #128]	; 0x80
   21154:	b	21158 <__assert_fail@plt+0xfc7c>
   21158:	ldr	r0, [sp, #128]	; 0x80
   2115c:	ldr	r1, [sp, #132]	; 0x84
   21160:	ldr	r2, [fp, #-8]
   21164:	ldr	r3, [r2]
   21168:	ldr	r2, [r2, #4]
   2116c:	mvn	r2, r2
   21170:	mvn	r3, r3
   21174:	subs	r1, r3, r1
   21178:	sbcs	r0, r2, r0
   2117c:	str	r1, [sp, #120]	; 0x78
   21180:	str	r0, [sp, #116]	; 0x74
   21184:	bcs	21338 <__assert_fail@plt+0xfe5c>
   21188:	b	21364 <__assert_fail@plt+0xfe88>
   2118c:	ldr	r0, [fp, #-12]
   21190:	cmn	r0, #1
   21194:	bne	211fc <__assert_fail@plt+0xfd20>
   21198:	b	211bc <__assert_fail@plt+0xfce0>
   2119c:	ldr	r0, [fp, #-8]
   211a0:	ldr	r1, [r0]
   211a4:	ldr	r0, [r0, #4]
   211a8:	eor	r0, r0, #-2147483648	; 0x80000000
   211ac:	orr	r0, r1, r0
   211b0:	cmp	r0, #0
   211b4:	bne	21338 <__assert_fail@plt+0xfe5c>
   211b8:	b	21364 <__assert_fail@plt+0xfe88>
   211bc:	ldr	r0, [fp, #-8]
   211c0:	ldr	r1, [r0]
   211c4:	ldr	r0, [r0, #4]
   211c8:	orr	r0, r1, r0
   211cc:	cmp	r0, #0
   211d0:	beq	21364 <__assert_fail@plt+0xfe88>
   211d4:	b	211d8 <__assert_fail@plt+0xfcfc>
   211d8:	ldr	r0, [fp, #-8]
   211dc:	ldr	r1, [r0]
   211e0:	ldr	r0, [r0, #4]
   211e4:	subs	r1, r1, #1
   211e8:	sbc	r0, r0, #0
   211ec:	cmp	r0, #0
   211f0:	str	r1, [sp, #112]	; 0x70
   211f4:	blt	21338 <__assert_fail@plt+0xfe5c>
   211f8:	b	21364 <__assert_fail@plt+0xfe88>
   211fc:	ldr	r0, [fp, #-12]
   21200:	asr	r3, r0, #31
   21204:	mov	r1, #0
   21208:	mov	r2, #-2147483648	; 0x80000000
   2120c:	str	r0, [sp, #108]	; 0x6c
   21210:	mov	r0, r1
   21214:	mov	r1, r2
   21218:	ldr	r2, [sp, #108]	; 0x6c
   2121c:	bl	24508 <__assert_fail@plt+0x1302c>
   21220:	ldr	r2, [fp, #-8]
   21224:	ldr	r3, [r2]
   21228:	ldr	r2, [r2, #4]
   2122c:	subs	r0, r0, r3
   21230:	sbcs	r1, r1, r2
   21234:	str	r0, [sp, #104]	; 0x68
   21238:	str	r1, [sp, #100]	; 0x64
   2123c:	bcc	21338 <__assert_fail@plt+0xfe5c>
   21240:	b	21364 <__assert_fail@plt+0xfe88>
   21244:	ldr	r0, [fp, #-12]
   21248:	cmp	r0, #0
   2124c:	bne	21254 <__assert_fail@plt+0xfd78>
   21250:	b	21364 <__assert_fail@plt+0xfe88>
   21254:	mov	r0, #1
   21258:	cmp	r0, #0
   2125c:	bne	212f0 <__assert_fail@plt+0xfe14>
   21260:	b	21264 <__assert_fail@plt+0xfd88>
   21264:	ldr	r0, [fp, #-8]
   21268:	ldr	r1, [r0]
   2126c:	ldr	r0, [r0, #4]
   21270:	and	r0, r1, r0
   21274:	cmn	r0, #1
   21278:	bne	212bc <__assert_fail@plt+0xfde0>
   2127c:	b	21280 <__assert_fail@plt+0xfda4>
   21280:	b	21284 <__assert_fail@plt+0xfda8>
   21284:	ldr	r0, [fp, #-12]
   21288:	mov	r1, #-2147483648	; 0x80000000
   2128c:	add	r1, r1, r0, asr #31
   21290:	rsbs	r0, r0, #0
   21294:	rscs	r1, r1, #0
   21298:	str	r0, [sp, #96]	; 0x60
   2129c:	str	r1, [sp, #92]	; 0x5c
   212a0:	blt	21338 <__assert_fail@plt+0xfe5c>
   212a4:	b	21364 <__assert_fail@plt+0xfe88>
   212a8:	mov	r0, #0
   212ac:	cmp	r0, #0
   212b0:	bne	21338 <__assert_fail@plt+0xfe5c>
   212b4:	b	21364 <__assert_fail@plt+0xfe88>
   212b8:			; <UNDEFINED> instruction: 0xffff8000
   212bc:	ldr	r0, [fp, #-8]
   212c0:	ldr	r2, [r0]
   212c4:	ldr	r3, [r0, #4]
   212c8:	mov	r0, #0
   212cc:	mov	r1, #-2147483648	; 0x80000000
   212d0:	bl	245dc <__assert_fail@plt+0x13100>
   212d4:	ldr	r2, [fp, #-12]
   212d8:	subs	r0, r0, r2
   212dc:	sbcs	r1, r1, r2, asr #31
   212e0:	str	r0, [sp, #88]	; 0x58
   212e4:	str	r1, [sp, #84]	; 0x54
   212e8:	bcc	21338 <__assert_fail@plt+0xfe5c>
   212ec:	b	21364 <__assert_fail@plt+0xfe88>
   212f0:	ldr	r0, [fp, #-12]
   212f4:	asr	r3, r0, #31
   212f8:	mvn	r1, #0
   212fc:	mvn	r2, #-2147483648	; 0x80000000
   21300:	str	r0, [sp, #80]	; 0x50
   21304:	mov	r0, r1
   21308:	mov	r1, r2
   2130c:	ldr	r2, [sp, #80]	; 0x50
   21310:	bl	24508 <__assert_fail@plt+0x1302c>
   21314:	ldr	r2, [fp, #-8]
   21318:	ldr	r3, [r2]
   2131c:	ldr	r2, [r2, #4]
   21320:	subs	r0, r0, r3
   21324:	sbcs	r1, r1, r2
   21328:	str	r0, [sp, #76]	; 0x4c
   2132c:	str	r1, [sp, #72]	; 0x48
   21330:	bcs	21364 <__assert_fail@plt+0xfe88>
   21334:	b	21338 <__assert_fail@plt+0xfe5c>
   21338:	ldr	r0, [fp, #-8]
   2133c:	ldr	r1, [r0]
   21340:	ldr	r0, [r0, #4]
   21344:	ldr	r2, [fp, #-12]
   21348:	asr	r3, r2, #31
   2134c:	umull	ip, lr, r1, r2
   21350:	mla	r1, r1, r3, lr
   21354:	mla	r0, r0, r2, r1
   21358:	str	ip, [fp, #-24]	; 0xffffffe8
   2135c:	str	r0, [fp, #-20]	; 0xffffffec
   21360:	b	21678 <__assert_fail@plt+0x1019c>
   21364:	ldr	r0, [fp, #-8]
   21368:	ldr	r1, [r0]
   2136c:	ldr	r0, [r0, #4]
   21370:	ldr	r2, [fp, #-12]
   21374:	asr	r3, r2, #31
   21378:	umull	ip, lr, r1, r2
   2137c:	mla	r1, r1, r3, lr
   21380:	mla	r0, r0, r2, r1
   21384:	str	ip, [fp, #-24]	; 0xffffffe8
   21388:	str	r0, [fp, #-20]	; 0xffffffec
   2138c:	b	21694 <__assert_fail@plt+0x101b8>
   21390:	ldr	r0, [fp, #-12]
   21394:	cmp	r0, #0
   21398:	bge	2152c <__assert_fail@plt+0x10050>
   2139c:	mov	r0, #1
   213a0:	cmp	r0, #0
   213a4:	bne	21498 <__assert_fail@plt+0xffbc>
   213a8:	b	213ac <__assert_fail@plt+0xfed0>
   213ac:	b	213fc <__assert_fail@plt+0xff20>
   213b0:	ldr	r0, [fp, #-8]
   213b4:	ldr	r1, [r0]
   213b8:	ldr	r0, [r0, #4]
   213bc:	ldr	r2, [fp, #-12]
   213c0:	asr	r3, r2, #31
   213c4:	mvn	ip, #0
   213c8:	str	r0, [sp, #68]	; 0x44
   213cc:	mov	r0, ip
   213d0:	str	r1, [sp, #64]	; 0x40
   213d4:	mov	r1, ip
   213d8:	bl	245dc <__assert_fail@plt+0x13100>
   213dc:	ldr	r2, [sp, #64]	; 0x40
   213e0:	subs	r0, r2, r0
   213e4:	ldr	r2, [sp, #68]	; 0x44
   213e8:	sbcs	r1, r2, r1
   213ec:	str	r0, [sp, #60]	; 0x3c
   213f0:	str	r1, [sp, #56]	; 0x38
   213f4:	bcc	21620 <__assert_fail@plt+0x10144>
   213f8:	b	2164c <__assert_fail@plt+0x10170>
   213fc:	b	21400 <__assert_fail@plt+0xff24>
   21400:	ldr	r0, [pc, #692]	; 216bc <__assert_fail@plt+0x101e0>
   21404:	ldr	r1, [fp, #-12]
   21408:	cmp	r1, r0
   2140c:	blt	21424 <__assert_fail@plt+0xff48>
   21410:	b	21438 <__assert_fail@plt+0xff5c>
   21414:	ldr	r0, [fp, #-12]
   21418:	movw	r1, #0
   2141c:	cmp	r1, r0
   21420:	bge	21438 <__assert_fail@plt+0xff5c>
   21424:	mov	r0, #1
   21428:	mvn	r1, #0
   2142c:	str	r1, [sp, #52]	; 0x34
   21430:	str	r0, [sp, #48]	; 0x30
   21434:	b	21464 <__assert_fail@plt+0xff88>
   21438:	ldr	r0, [fp, #-12]
   2143c:	rsb	r0, r0, #0
   21440:	asr	r3, r0, #31
   21444:	mvn	r1, #0
   21448:	str	r0, [sp, #44]	; 0x2c
   2144c:	mov	r0, r1
   21450:	ldr	r2, [sp, #44]	; 0x2c
   21454:	bl	245dc <__assert_fail@plt+0x13100>
   21458:	str	r0, [sp, #52]	; 0x34
   2145c:	str	r1, [sp, #48]	; 0x30
   21460:	b	21464 <__assert_fail@plt+0xff88>
   21464:	ldr	r0, [sp, #48]	; 0x30
   21468:	ldr	r1, [sp, #52]	; 0x34
   2146c:	ldr	r2, [fp, #-8]
   21470:	ldr	r3, [r2]
   21474:	ldr	r2, [r2, #4]
   21478:	mvn	r2, r2
   2147c:	mvn	r3, r3
   21480:	subs	r1, r3, r1
   21484:	sbcs	r0, r2, r0
   21488:	str	r1, [sp, #40]	; 0x28
   2148c:	str	r0, [sp, #36]	; 0x24
   21490:	bcs	21620 <__assert_fail@plt+0x10144>
   21494:	b	2164c <__assert_fail@plt+0x10170>
   21498:	b	2149c <__assert_fail@plt+0xffc0>
   2149c:	b	214fc <__assert_fail@plt+0x10020>
   214a0:	b	214fc <__assert_fail@plt+0x10020>
   214a4:	ldr	r0, [fp, #-12]
   214a8:	cmn	r0, #1
   214ac:	bne	214fc <__assert_fail@plt+0x10020>
   214b0:	b	214d0 <__assert_fail@plt+0xfff4>
   214b4:	ldr	r0, [fp, #-8]
   214b8:	ldr	r1, [r0]
   214bc:	ldr	r0, [r0, #4]
   214c0:	orr	r0, r1, r0
   214c4:	cmp	r0, #0
   214c8:	bne	21620 <__assert_fail@plt+0x10144>
   214cc:	b	2164c <__assert_fail@plt+0x10170>
   214d0:	ldr	r0, [fp, #-8]
   214d4:	ldr	r1, [r0]
   214d8:	ldr	r0, [r0, #4]
   214dc:	orr	r0, r1, r0
   214e0:	cmp	r0, #0
   214e4:	beq	2164c <__assert_fail@plt+0x10170>
   214e8:	b	214ec <__assert_fail@plt+0x10010>
   214ec:	mov	r0, #0
   214f0:	cmp	r0, #0
   214f4:	bne	21620 <__assert_fail@plt+0x10144>
   214f8:	b	2164c <__assert_fail@plt+0x10170>
   214fc:	ldr	r0, [fp, #-12]
   21500:	mov	r1, #0
   21504:	sdiv	r0, r1, r0
   21508:	ldr	r1, [fp, #-8]
   2150c:	ldr	r2, [r1]
   21510:	ldr	r1, [r1, #4]
   21514:	subs	r2, r0, r2
   21518:	rscs	r0, r1, r0, asr #31
   2151c:	str	r2, [sp, #32]
   21520:	str	r0, [sp, #28]
   21524:	bcc	21620 <__assert_fail@plt+0x10144>
   21528:	b	2164c <__assert_fail@plt+0x10170>
   2152c:	ldr	r0, [fp, #-12]
   21530:	cmp	r0, #0
   21534:	bne	2153c <__assert_fail@plt+0x10060>
   21538:	b	2164c <__assert_fail@plt+0x10170>
   2153c:	mov	r0, #1
   21540:	cmp	r0, #0
   21544:	bne	215e0 <__assert_fail@plt+0x10104>
   21548:	b	2154c <__assert_fail@plt+0x10070>
   2154c:	b	21554 <__assert_fail@plt+0x10078>
   21550:	b	21558 <__assert_fail@plt+0x1007c>
   21554:	b	215a8 <__assert_fail@plt+0x100cc>
   21558:	ldr	r0, [fp, #-8]
   2155c:	ldr	r1, [r0]
   21560:	ldr	r0, [r0, #4]
   21564:	and	r0, r1, r0
   21568:	cmn	r0, #1
   2156c:	bne	215a8 <__assert_fail@plt+0x100cc>
   21570:	b	21574 <__assert_fail@plt+0x10098>
   21574:	b	21578 <__assert_fail@plt+0x1009c>
   21578:	ldr	r0, [fp, #-12]
   2157c:	add	r0, r0, #0
   21580:	movw	r1, #0
   21584:	cmp	r1, r0
   21588:	blt	21620 <__assert_fail@plt+0x10144>
   2158c:	b	2164c <__assert_fail@plt+0x10170>
   21590:	ldr	r0, [fp, #-12]
   21594:	sub	r0, r0, #1
   21598:	mvn	r1, #0
   2159c:	cmp	r1, r0
   215a0:	blt	21620 <__assert_fail@plt+0x10144>
   215a4:	b	2164c <__assert_fail@plt+0x10170>
   215a8:	ldr	r0, [fp, #-8]
   215ac:	ldr	r2, [r0]
   215b0:	ldr	r3, [r0, #4]
   215b4:	mov	r0, #0
   215b8:	str	r0, [sp, #24]
   215bc:	ldr	r1, [sp, #24]
   215c0:	bl	245dc <__assert_fail@plt+0x13100>
   215c4:	ldr	r2, [fp, #-12]
   215c8:	subs	r0, r0, r2
   215cc:	sbcs	r1, r1, r2, asr #31
   215d0:	str	r0, [sp, #20]
   215d4:	str	r1, [sp, #16]
   215d8:	bcc	21620 <__assert_fail@plt+0x10144>
   215dc:	b	2164c <__assert_fail@plt+0x10170>
   215e0:	ldr	r0, [fp, #-12]
   215e4:	asr	r3, r0, #31
   215e8:	mvn	r1, #0
   215ec:	str	r0, [sp, #12]
   215f0:	mov	r0, r1
   215f4:	ldr	r2, [sp, #12]
   215f8:	bl	245dc <__assert_fail@plt+0x13100>
   215fc:	ldr	r2, [fp, #-8]
   21600:	ldr	r3, [r2]
   21604:	ldr	r2, [r2, #4]
   21608:	subs	r0, r0, r3
   2160c:	sbcs	r1, r1, r2
   21610:	str	r0, [sp, #8]
   21614:	str	r1, [sp, #4]
   21618:	bcs	2164c <__assert_fail@plt+0x10170>
   2161c:	b	21620 <__assert_fail@plt+0x10144>
   21620:	ldr	r0, [fp, #-8]
   21624:	ldr	r1, [r0]
   21628:	ldr	r0, [r0, #4]
   2162c:	ldr	r2, [fp, #-12]
   21630:	asr	r3, r2, #31
   21634:	umull	ip, lr, r1, r2
   21638:	mla	r1, r1, r3, lr
   2163c:	mla	r0, r0, r2, r1
   21640:	str	ip, [fp, #-24]	; 0xffffffe8
   21644:	str	r0, [fp, #-20]	; 0xffffffec
   21648:	b	21678 <__assert_fail@plt+0x1019c>
   2164c:	ldr	r0, [fp, #-8]
   21650:	ldr	r1, [r0]
   21654:	ldr	r0, [r0, #4]
   21658:	ldr	r2, [fp, #-12]
   2165c:	asr	r3, r2, #31
   21660:	umull	ip, lr, r1, r2
   21664:	mla	r1, r1, r3, lr
   21668:	mla	r0, r0, r2, r1
   2166c:	str	ip, [fp, #-24]	; 0xffffffe8
   21670:	str	r0, [fp, #-20]	; 0xffffffec
   21674:	b	21694 <__assert_fail@plt+0x101b8>
   21678:	ldr	r0, [fp, #-8]
   2167c:	mvn	r1, #0
   21680:	str	r1, [r0, #4]
   21684:	str	r1, [r0]
   21688:	movw	r0, #1
   2168c:	str	r0, [fp, #-4]
   21690:	b	216b0 <__assert_fail@plt+0x101d4>
   21694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21698:	ldr	r1, [fp, #-20]	; 0xffffffec
   2169c:	ldr	r2, [fp, #-8]
   216a0:	str	r1, [r2, #4]
   216a4:	str	r0, [r2]
   216a8:	movw	r0, #0
   216ac:	str	r0, [fp, #-4]
   216b0:	ldr	r0, [fp, #-4]
   216b4:	mov	sp, fp
   216b8:	pop	{fp, pc}
   216bc:	andhi	r0, r0, r1
   216c0:	svcvc	0x00ffffff
   216c4:	push	{fp, lr}
   216c8:	mov	fp, sp
   216cc:	sub	sp, sp, #16
   216d0:	str	r0, [fp, #-4]
   216d4:	str	r1, [sp, #8]
   216d8:	str	r2, [sp, #4]
   216dc:	movw	r0, #0
   216e0:	str	r0, [sp]
   216e4:	ldr	r0, [sp, #4]
   216e8:	mvn	r1, #0
   216ec:	add	r1, r0, r1
   216f0:	str	r1, [sp, #4]
   216f4:	cmp	r0, #0
   216f8:	beq	21718 <__assert_fail@plt+0x1023c>
   216fc:	ldr	r0, [fp, #-4]
   21700:	ldr	r1, [sp, #8]
   21704:	bl	1fbbc <__assert_fail@plt+0xe6e0>
   21708:	ldr	r1, [sp]
   2170c:	orr	r0, r1, r0
   21710:	str	r0, [sp]
   21714:	b	216e4 <__assert_fail@plt+0x10208>
   21718:	ldr	r0, [sp]
   2171c:	mov	sp, fp
   21720:	pop	{fp, pc}
   21724:	push	{fp, lr}
   21728:	mov	fp, sp
   2172c:	sub	sp, sp, #16
   21730:	str	r0, [sp, #8]
   21734:	str	r1, [sp, #4]
   21738:	ldr	r0, [sp, #8]
   2173c:	cmp	r0, #0
   21740:	beq	21750 <__assert_fail@plt+0x10274>
   21744:	ldr	r0, [sp, #4]
   21748:	cmp	r0, #0
   2174c:	bne	2175c <__assert_fail@plt+0x10280>
   21750:	movw	r0, #1
   21754:	str	r0, [sp, #4]
   21758:	str	r0, [sp, #8]
   2175c:	ldr	r0, [sp, #4]
   21760:	cmp	r0, #0
   21764:	beq	21798 <__assert_fail@plt+0x102bc>
   21768:	ldr	r0, [pc, #76]	; 217bc <__assert_fail@plt+0x102e0>
   2176c:	ldr	r1, [sp, #4]
   21770:	udiv	r0, r0, r1
   21774:	ldr	r1, [sp, #8]
   21778:	cmp	r0, r1
   2177c:	bcs	21798 <__assert_fail@plt+0x102bc>
   21780:	bl	11398 <__errno_location@plt>
   21784:	movw	lr, #12
   21788:	str	lr, [r0]
   2178c:	movw	r0, #0
   21790:	str	r0, [fp, #-4]
   21794:	b	217b0 <__assert_fail@plt+0x102d4>
   21798:	ldr	r0, [sp, #8]
   2179c:	ldr	r1, [sp, #4]
   217a0:	bl	111b8 <calloc@plt>
   217a4:	str	r0, [sp]
   217a8:	ldr	r0, [sp]
   217ac:	str	r0, [fp, #-4]
   217b0:	ldr	r0, [fp, #-4]
   217b4:	mov	sp, fp
   217b8:	pop	{fp, pc}
   217bc:	svcvc	0x00ffffff
   217c0:	push	{fp, lr}
   217c4:	mov	fp, sp
   217c8:	sub	sp, sp, #16
   217cc:	str	r0, [sp, #8]
   217d0:	ldr	r0, [sp, #8]
   217d4:	cmp	r0, #0
   217d8:	bne	217e4 <__assert_fail@plt+0x10308>
   217dc:	movw	r0, #1
   217e0:	str	r0, [sp, #8]
   217e4:	ldr	r0, [pc, #64]	; 2182c <__assert_fail@plt+0x10350>
   217e8:	ldr	r1, [sp, #8]
   217ec:	cmp	r0, r1
   217f0:	bcs	2180c <__assert_fail@plt+0x10330>
   217f4:	bl	11398 <__errno_location@plt>
   217f8:	movw	lr, #12
   217fc:	str	lr, [r0]
   21800:	movw	r0, #0
   21804:	str	r0, [fp, #-4]
   21808:	b	21820 <__assert_fail@plt+0x10344>
   2180c:	ldr	r0, [sp, #8]
   21810:	bl	112fc <malloc@plt>
   21814:	str	r0, [sp, #4]
   21818:	ldr	r0, [sp, #4]
   2181c:	str	r0, [fp, #-4]
   21820:	ldr	r0, [fp, #-4]
   21824:	mov	sp, fp
   21828:	pop	{fp, pc}
   2182c:	svcvc	0x00ffffff
   21830:	push	{fp, lr}
   21834:	mov	fp, sp
   21838:	sub	sp, sp, #16
   2183c:	str	r0, [sp, #8]
   21840:	str	r1, [sp, #4]
   21844:	ldr	r0, [sp, #8]
   21848:	movw	r1, #0
   2184c:	cmp	r0, r1
   21850:	bne	21864 <__assert_fail@plt+0x10388>
   21854:	ldr	r0, [sp, #4]
   21858:	bl	217c0 <__assert_fail@plt+0x102e4>
   2185c:	str	r0, [fp, #-4]
   21860:	b	218c4 <__assert_fail@plt+0x103e8>
   21864:	ldr	r0, [sp, #4]
   21868:	cmp	r0, #0
   2186c:	bne	21884 <__assert_fail@plt+0x103a8>
   21870:	ldr	r0, [sp, #8]
   21874:	bl	13878 <__assert_fail@plt+0x239c>
   21878:	movw	r0, #0
   2187c:	str	r0, [fp, #-4]
   21880:	b	218c4 <__assert_fail@plt+0x103e8>
   21884:	ldr	r0, [pc, #68]	; 218d0 <__assert_fail@plt+0x103f4>
   21888:	ldr	r1, [sp, #4]
   2188c:	cmp	r0, r1
   21890:	bcs	218ac <__assert_fail@plt+0x103d0>
   21894:	bl	11398 <__errno_location@plt>
   21898:	movw	lr, #12
   2189c:	str	lr, [r0]
   218a0:	movw	r0, #0
   218a4:	str	r0, [fp, #-4]
   218a8:	b	218c4 <__assert_fail@plt+0x103e8>
   218ac:	ldr	r0, [sp, #8]
   218b0:	ldr	r1, [sp, #4]
   218b4:	bl	1126c <realloc@plt>
   218b8:	str	r0, [sp]
   218bc:	ldr	r0, [sp]
   218c0:	str	r0, [fp, #-4]
   218c4:	ldr	r0, [fp, #-4]
   218c8:	mov	sp, fp
   218cc:	pop	{fp, pc}
   218d0:	svcvc	0x00ffffff
   218d4:	push	{r4, sl, fp, lr}
   218d8:	add	fp, sp, #8
   218dc:	sub	sp, sp, #16
   218e0:	str	r0, [sp, #8]
   218e4:	str	r1, [sp, #12]
   218e8:	str	r2, [sp, #4]
   218ec:	ldr	r0, [sp, #8]
   218f0:	ldr	r1, [sp, #12]
   218f4:	ldr	r2, [sp, #4]
   218f8:	rsb	r3, r2, #32
   218fc:	lsr	ip, r0, r3
   21900:	orr	ip, ip, r1, lsl r2
   21904:	sub	lr, r2, #32
   21908:	cmp	lr, #0
   2190c:	lslge	ip, r0, lr
   21910:	lsl	r4, r0, r2
   21914:	cmp	lr, #0
   21918:	movwge	r4, #0
   2191c:	rsb	r2, r2, #64	; 0x40
   21920:	lsr	lr, r1, r2
   21924:	cmp	r3, #0
   21928:	movwge	lr, #0
   2192c:	lsr	r0, r0, r2
   21930:	rsb	r2, r2, #32
   21934:	orr	r0, r0, r1, lsl r2
   21938:	cmp	r3, #0
   2193c:	lsrge	r0, r1, r3
   21940:	orr	r0, r4, r0
   21944:	orr	r1, ip, lr
   21948:	sub	sp, fp, #8
   2194c:	pop	{r4, sl, fp, pc}
   21950:	push	{r4, sl, fp, lr}
   21954:	add	fp, sp, #8
   21958:	sub	sp, sp, #16
   2195c:	str	r0, [sp, #8]
   21960:	str	r1, [sp, #12]
   21964:	str	r2, [sp, #4]
   21968:	ldr	r0, [sp, #8]
   2196c:	ldr	r1, [sp, #12]
   21970:	ldr	r2, [sp, #4]
   21974:	lsr	r3, r1, r2
   21978:	sub	ip, r2, #32
   2197c:	cmp	ip, #0
   21980:	movwge	r3, #0
   21984:	lsr	lr, r0, r2
   21988:	rsb	r4, r2, #32
   2198c:	orr	lr, lr, r1, lsl r4
   21990:	cmp	ip, #0
   21994:	lsrge	lr, r1, ip
   21998:	rsb	r2, r2, #64	; 0x40
   2199c:	rsb	ip, r2, #32
   219a0:	lsr	ip, r0, ip
   219a4:	orr	r1, ip, r1, lsl r2
   219a8:	cmp	r4, #0
   219ac:	lslge	r1, r0, r4
   219b0:	lsl	r0, r0, r2
   219b4:	cmp	r4, #0
   219b8:	movwge	r0, #0
   219bc:	orr	r0, lr, r0
   219c0:	orr	r1, r3, r1
   219c4:	sub	sp, fp, #8
   219c8:	pop	{r4, sl, fp, pc}
   219cc:	sub	sp, sp, #8
   219d0:	str	r0, [sp, #4]
   219d4:	str	r1, [sp]
   219d8:	ldr	r0, [sp, #4]
   219dc:	ldr	r1, [sp]
   219e0:	lsl	r0, r0, r1
   219e4:	ldr	r1, [sp, #4]
   219e8:	ldr	r2, [sp]
   219ec:	movw	r3, #32
   219f0:	sub	r2, r3, r2
   219f4:	lsr	r1, r1, r2
   219f8:	orr	r0, r0, r1
   219fc:	add	sp, sp, #8
   21a00:	bx	lr
   21a04:	sub	sp, sp, #8
   21a08:	str	r0, [sp, #4]
   21a0c:	str	r1, [sp]
   21a10:	ldr	r0, [sp, #4]
   21a14:	ldr	r1, [sp]
   21a18:	lsr	r0, r0, r1
   21a1c:	ldr	r1, [sp, #4]
   21a20:	ldr	r2, [sp]
   21a24:	movw	r3, #32
   21a28:	sub	r2, r3, r2
   21a2c:	lsl	r1, r1, r2
   21a30:	orr	r0, r0, r1
   21a34:	add	sp, sp, #8
   21a38:	bx	lr
   21a3c:	sub	sp, sp, #8
   21a40:	str	r0, [sp, #4]
   21a44:	str	r1, [sp]
   21a48:	ldr	r0, [sp, #4]
   21a4c:	ldr	r1, [sp]
   21a50:	lsl	r0, r0, r1
   21a54:	ldr	r1, [sp, #4]
   21a58:	ldr	r2, [sp]
   21a5c:	movw	r3, #32
   21a60:	sub	r2, r3, r2
   21a64:	lsr	r1, r1, r2
   21a68:	orr	r0, r0, r1
   21a6c:	add	sp, sp, #8
   21a70:	bx	lr
   21a74:	sub	sp, sp, #8
   21a78:	str	r0, [sp, #4]
   21a7c:	str	r1, [sp]
   21a80:	ldr	r0, [sp, #4]
   21a84:	ldr	r1, [sp]
   21a88:	lsr	r0, r0, r1
   21a8c:	ldr	r1, [sp, #4]
   21a90:	ldr	r2, [sp]
   21a94:	movw	r3, #32
   21a98:	sub	r2, r3, r2
   21a9c:	lsl	r1, r1, r2
   21aa0:	orr	r0, r0, r1
   21aa4:	add	sp, sp, #8
   21aa8:	bx	lr
   21aac:	sub	sp, sp, #8
   21ab0:	strh	r0, [sp, #6]
   21ab4:	str	r1, [sp]
   21ab8:	ldrh	r0, [sp, #6]
   21abc:	ldr	r1, [sp]
   21ac0:	lsl	r0, r0, r1
   21ac4:	ldrh	r1, [sp, #6]
   21ac8:	ldr	r2, [sp]
   21acc:	movw	r3, #16
   21ad0:	sub	r2, r3, r2
   21ad4:	lsr	r1, r1, r2
   21ad8:	orr	r0, r0, r1
   21adc:	movw	r1, #65535	; 0xffff
   21ae0:	and	r0, r0, r1
   21ae4:	uxth	r0, r0
   21ae8:	add	sp, sp, #8
   21aec:	bx	lr
   21af0:	sub	sp, sp, #8
   21af4:	strh	r0, [sp, #6]
   21af8:	str	r1, [sp]
   21afc:	ldrh	r0, [sp, #6]
   21b00:	ldr	r1, [sp]
   21b04:	lsr	r0, r0, r1
   21b08:	ldrh	r1, [sp, #6]
   21b0c:	ldr	r2, [sp]
   21b10:	movw	r3, #16
   21b14:	sub	r2, r3, r2
   21b18:	lsl	r1, r1, r2
   21b1c:	orr	r0, r0, r1
   21b20:	movw	r1, #65535	; 0xffff
   21b24:	and	r0, r0, r1
   21b28:	uxth	r0, r0
   21b2c:	add	sp, sp, #8
   21b30:	bx	lr
   21b34:	sub	sp, sp, #8
   21b38:	strb	r0, [sp, #7]
   21b3c:	str	r1, [sp]
   21b40:	ldrb	r0, [sp, #7]
   21b44:	ldr	r1, [sp]
   21b48:	lsl	r0, r0, r1
   21b4c:	ldrb	r1, [sp, #7]
   21b50:	ldr	r2, [sp]
   21b54:	movw	r3, #8
   21b58:	sub	r2, r3, r2
   21b5c:	lsr	r1, r1, r2
   21b60:	orr	r0, r0, r1
   21b64:	and	r0, r0, #255	; 0xff
   21b68:	and	r0, r0, #255	; 0xff
   21b6c:	add	sp, sp, #8
   21b70:	bx	lr
   21b74:	sub	sp, sp, #8
   21b78:	strb	r0, [sp, #7]
   21b7c:	str	r1, [sp]
   21b80:	ldrb	r0, [sp, #7]
   21b84:	ldr	r1, [sp]
   21b88:	lsr	r0, r0, r1
   21b8c:	ldrb	r1, [sp, #7]
   21b90:	ldr	r2, [sp]
   21b94:	movw	r3, #8
   21b98:	sub	r2, r3, r2
   21b9c:	lsl	r1, r1, r2
   21ba0:	orr	r0, r0, r1
   21ba4:	and	r0, r0, #255	; 0xff
   21ba8:	and	r0, r0, #255	; 0xff
   21bac:	add	sp, sp, #8
   21bb0:	bx	lr
   21bb4:	push	{fp, lr}
   21bb8:	mov	fp, sp
   21bbc:	sub	sp, sp, #24
   21bc0:	str	r0, [fp, #-8]
   21bc4:	str	r1, [sp, #12]
   21bc8:	ldr	r0, [fp, #-8]
   21bcc:	str	r0, [sp, #8]
   21bd0:	ldr	r0, [sp, #12]
   21bd4:	str	r0, [sp, #4]
   21bd8:	ldr	r0, [sp, #8]
   21bdc:	ldr	r1, [sp, #4]
   21be0:	cmp	r0, r1
   21be4:	bne	21bf4 <__assert_fail@plt+0x10718>
   21be8:	movw	r0, #0
   21bec:	str	r0, [fp, #-4]
   21bf0:	b	21c60 <__assert_fail@plt+0x10784>
   21bf4:	b	21bf8 <__assert_fail@plt+0x1071c>
   21bf8:	ldr	r0, [sp, #8]
   21bfc:	ldrb	r0, [r0]
   21c00:	bl	24288 <__assert_fail@plt+0x12dac>
   21c04:	strb	r0, [sp, #3]
   21c08:	ldr	r0, [sp, #4]
   21c0c:	ldrb	r0, [r0]
   21c10:	bl	24288 <__assert_fail@plt+0x12dac>
   21c14:	strb	r0, [sp, #2]
   21c18:	ldrb	r0, [sp, #3]
   21c1c:	cmp	r0, #0
   21c20:	bne	21c28 <__assert_fail@plt+0x1074c>
   21c24:	b	21c50 <__assert_fail@plt+0x10774>
   21c28:	ldr	r0, [sp, #8]
   21c2c:	add	r0, r0, #1
   21c30:	str	r0, [sp, #8]
   21c34:	ldr	r0, [sp, #4]
   21c38:	add	r0, r0, #1
   21c3c:	str	r0, [sp, #4]
   21c40:	ldrb	r0, [sp, #3]
   21c44:	ldrb	r1, [sp, #2]
   21c48:	cmp	r0, r1
   21c4c:	beq	21bf8 <__assert_fail@plt+0x1071c>
   21c50:	ldrb	r0, [sp, #3]
   21c54:	ldrb	r1, [sp, #2]
   21c58:	sub	r0, r0, r1
   21c5c:	str	r0, [fp, #-4]
   21c60:	ldr	r0, [fp, #-4]
   21c64:	mov	sp, fp
   21c68:	pop	{fp, pc}
   21c6c:	push	{fp, lr}
   21c70:	mov	fp, sp
   21c74:	sub	sp, sp, #16
   21c78:	str	r0, [sp, #8]
   21c7c:	ldr	r0, [sp, #8]
   21c80:	bl	112c0 <__fpending@plt>
   21c84:	cmp	r0, #0
   21c88:	movw	r0, #0
   21c8c:	movne	r0, #1
   21c90:	and	r0, r0, #1
   21c94:	strb	r0, [sp, #7]
   21c98:	ldr	r0, [sp, #8]
   21c9c:	bl	112cc <ferror_unlocked@plt>
   21ca0:	cmp	r0, #0
   21ca4:	movw	r0, #0
   21ca8:	movne	r0, #1
   21cac:	and	r0, r0, #1
   21cb0:	strb	r0, [sp, #6]
   21cb4:	ldr	r0, [sp, #8]
   21cb8:	bl	21f2c <__assert_fail@plt+0x10a50>
   21cbc:	cmp	r0, #0
   21cc0:	movw	r0, #0
   21cc4:	movne	r0, #1
   21cc8:	and	r0, r0, #1
   21ccc:	strb	r0, [sp, #5]
   21cd0:	ldrb	r0, [sp, #6]
   21cd4:	tst	r0, #1
   21cd8:	bne	21d04 <__assert_fail@plt+0x10828>
   21cdc:	ldrb	r0, [sp, #5]
   21ce0:	tst	r0, #1
   21ce4:	beq	21d28 <__assert_fail@plt+0x1084c>
   21ce8:	ldrb	r0, [sp, #7]
   21cec:	tst	r0, #1
   21cf0:	bne	21d04 <__assert_fail@plt+0x10828>
   21cf4:	bl	11398 <__errno_location@plt>
   21cf8:	ldr	r0, [r0]
   21cfc:	cmp	r0, #9
   21d00:	beq	21d28 <__assert_fail@plt+0x1084c>
   21d04:	ldrb	r0, [sp, #5]
   21d08:	tst	r0, #1
   21d0c:	bne	21d1c <__assert_fail@plt+0x10840>
   21d10:	bl	11398 <__errno_location@plt>
   21d14:	movw	lr, #0
   21d18:	str	lr, [r0]
   21d1c:	mvn	r0, #0
   21d20:	str	r0, [fp, #-4]
   21d24:	b	21d30 <__assert_fail@plt+0x10854>
   21d28:	movw	r0, #0
   21d2c:	str	r0, [fp, #-4]
   21d30:	ldr	r0, [fp, #-4]
   21d34:	mov	sp, fp
   21d38:	pop	{fp, pc}
   21d3c:	sub	sp, sp, #4
   21d40:	ldr	r1, [pc, #32]	; 21d68 <__assert_fail@plt+0x1088c>
   21d44:	str	r0, [sp]
   21d48:	ldr	r0, [sp]
   21d4c:	mov	r2, #0
   21d50:	str	r2, [r0, #20]
   21d54:	str	r2, [r0, #16]
   21d58:	ldr	r0, [sp]
   21d5c:	str	r1, [r0, #24]
   21d60:	add	sp, sp, #4
   21d64:	bx	lr
   21d68:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21d6c:	push	{fp, lr}
   21d70:	mov	fp, sp
   21d74:	sub	sp, sp, #16
   21d78:	ldr	r2, [pc, #364]	; 21eec <__assert_fail@plt+0x10a10>
   21d7c:	str	r0, [sp, #8]
   21d80:	str	r1, [sp, #4]
   21d84:	ldr	r0, [sp, #8]
   21d88:	ldr	r0, [r0, #24]
   21d8c:	cmp	r0, r2
   21d90:	bne	21d98 <__assert_fail@plt+0x108bc>
   21d94:	b	21db8 <__assert_fail@plt+0x108dc>
   21d98:	movw	r0, #23539	; 0x5bf3
   21d9c:	movt	r0, #2
   21da0:	movw	r1, #23563	; 0x5c0b
   21da4:	movt	r1, #2
   21da8:	movw	r2, #60	; 0x3c
   21dac:	movw	r3, #23581	; 0x5c1d
   21db0:	movt	r3, #2
   21db4:	bl	114dc <__assert_fail@plt>
   21db8:	ldr	r0, [sp, #8]
   21dbc:	ldr	r1, [r0, #16]
   21dc0:	ldr	r0, [r0, #20]
   21dc4:	orr	r0, r1, r0
   21dc8:	cmp	r0, #0
   21dcc:	beq	21e44 <__assert_fail@plt+0x10968>
   21dd0:	b	21dd4 <__assert_fail@plt+0x108f8>
   21dd4:	ldr	r0, [sp, #4]
   21dd8:	ldr	r1, [r0, #96]	; 0x60
   21ddc:	ldr	r0, [r0, #100]	; 0x64
   21de0:	ldr	r2, [sp, #8]
   21de4:	ldr	r3, [r2]
   21de8:	ldr	r2, [r2, #4]
   21dec:	eor	r0, r0, r2
   21df0:	eor	r1, r1, r3
   21df4:	orr	r0, r1, r0
   21df8:	cmp	r0, #0
   21dfc:	bne	21e44 <__assert_fail@plt+0x10968>
   21e00:	b	21e04 <__assert_fail@plt+0x10928>
   21e04:	ldr	r0, [sp, #4]
   21e08:	ldr	r1, [r0]
   21e0c:	ldr	r0, [r0, #4]
   21e10:	ldr	r2, [sp, #8]
   21e14:	ldr	r3, [r2, #8]
   21e18:	ldr	r2, [r2, #12]
   21e1c:	eor	r0, r0, r2
   21e20:	eor	r1, r1, r3
   21e24:	orr	r0, r1, r0
   21e28:	cmp	r0, #0
   21e2c:	bne	21e44 <__assert_fail@plt+0x10968>
   21e30:	b	21e34 <__assert_fail@plt+0x10958>
   21e34:	movw	r0, #1
   21e38:	and	r0, r0, #1
   21e3c:	strb	r0, [fp, #-1]
   21e40:	b	21edc <__assert_fail@plt+0x10a00>
   21e44:	ldr	r0, [sp, #8]
   21e48:	ldr	r1, [r0, #16]
   21e4c:	ldr	r2, [r0, #20]
   21e50:	adds	r1, r1, #1
   21e54:	adc	r2, r2, #0
   21e58:	str	r1, [r0, #16]
   21e5c:	str	r2, [r0, #20]
   21e60:	mov	r0, r1
   21e64:	mov	r1, r2
   21e68:	bl	21ef0 <__assert_fail@plt+0x10a14>
   21e6c:	tst	r0, #1
   21e70:	beq	21ed0 <__assert_fail@plt+0x109f4>
   21e74:	ldr	r0, [sp, #8]
   21e78:	ldr	r1, [r0, #16]
   21e7c:	ldr	r0, [r0, #20]
   21e80:	orr	r0, r1, r0
   21e84:	cmp	r0, #0
   21e88:	bne	21ea0 <__assert_fail@plt+0x109c4>
   21e8c:	b	21e90 <__assert_fail@plt+0x109b4>
   21e90:	movw	r0, #1
   21e94:	and	r0, r0, #1
   21e98:	strb	r0, [fp, #-1]
   21e9c:	b	21edc <__assert_fail@plt+0x10a00>
   21ea0:	ldr	r0, [sp, #4]
   21ea4:	ldr	r1, [r0]
   21ea8:	ldr	r0, [r0, #4]
   21eac:	ldr	r2, [sp, #8]
   21eb0:	str	r0, [r2, #12]
   21eb4:	str	r1, [r2, #8]
   21eb8:	ldr	r0, [sp, #4]
   21ebc:	ldr	r1, [r0, #96]	; 0x60
   21ec0:	ldr	r0, [r0, #100]	; 0x64
   21ec4:	ldr	r2, [sp, #8]
   21ec8:	str	r0, [r2, #4]
   21ecc:	str	r1, [r2]
   21ed0:	movw	r0, #0
   21ed4:	and	r0, r0, #1
   21ed8:	strb	r0, [fp, #-1]
   21edc:	ldrb	r0, [fp, #-1]
   21ee0:	and	r0, r0, #1
   21ee4:	mov	sp, fp
   21ee8:	pop	{fp, pc}
   21eec:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21ef0:	sub	sp, sp, #8
   21ef4:	str	r0, [sp]
   21ef8:	str	r1, [sp, #4]
   21efc:	ldr	r0, [sp]
   21f00:	ldr	r1, [sp, #4]
   21f04:	subs	r2, r0, #1
   21f08:	sbc	r3, r1, #0
   21f0c:	and	r0, r0, r2
   21f10:	and	r1, r1, r3
   21f14:	orr	r0, r0, r1
   21f18:	clz	r0, r0
   21f1c:	lsr	r0, r0, #5
   21f20:	and	r0, r0, #1
   21f24:	add	sp, sp, #8
   21f28:	bx	lr
   21f2c:	push	{fp, lr}
   21f30:	mov	fp, sp
   21f34:	sub	sp, sp, #32
   21f38:	str	r0, [fp, #-8]
   21f3c:	movw	r0, #0
   21f40:	str	r0, [fp, #-12]
   21f44:	str	r0, [sp, #12]
   21f48:	ldr	r0, [fp, #-8]
   21f4c:	bl	113bc <fileno@plt>
   21f50:	str	r0, [sp, #16]
   21f54:	ldr	r0, [sp, #16]
   21f58:	cmp	r0, #0
   21f5c:	bge	21f70 <__assert_fail@plt+0x10a94>
   21f60:	ldr	r0, [fp, #-8]
   21f64:	bl	113d4 <fclose@plt>
   21f68:	str	r0, [fp, #-4]
   21f6c:	b	2200c <__assert_fail@plt+0x10b30>
   21f70:	ldr	r0, [fp, #-8]
   21f74:	bl	11314 <__freading@plt>
   21f78:	cmp	r0, #0
   21f7c:	beq	21fb4 <__assert_fail@plt+0x10ad8>
   21f80:	ldr	r0, [fp, #-8]
   21f84:	bl	113bc <fileno@plt>
   21f88:	mov	lr, sp
   21f8c:	mov	r1, #1
   21f90:	str	r1, [lr]
   21f94:	mov	r1, #0
   21f98:	mov	r2, r1
   21f9c:	mov	r3, r1
   21fa0:	bl	112a8 <lseek64@plt>
   21fa4:	and	r0, r0, r1
   21fa8:	cmn	r0, #1
   21fac:	beq	21fd0 <__assert_fail@plt+0x10af4>
   21fb0:	b	21fb4 <__assert_fail@plt+0x10ad8>
   21fb4:	ldr	r0, [fp, #-8]
   21fb8:	bl	2247c <__assert_fail@plt+0x10fa0>
   21fbc:	cmp	r0, #0
   21fc0:	beq	21fd0 <__assert_fail@plt+0x10af4>
   21fc4:	bl	11398 <__errno_location@plt>
   21fc8:	ldr	r0, [r0]
   21fcc:	str	r0, [fp, #-12]
   21fd0:	ldr	r0, [fp, #-8]
   21fd4:	bl	113d4 <fclose@plt>
   21fd8:	str	r0, [sp, #12]
   21fdc:	ldr	r0, [fp, #-12]
   21fe0:	cmp	r0, #0
   21fe4:	beq	22004 <__assert_fail@plt+0x10b28>
   21fe8:	ldr	r0, [fp, #-12]
   21fec:	str	r0, [sp, #8]
   21ff0:	bl	11398 <__errno_location@plt>
   21ff4:	ldr	lr, [sp, #8]
   21ff8:	str	lr, [r0]
   21ffc:	mvn	r0, #0
   22000:	str	r0, [sp, #12]
   22004:	ldr	r0, [sp, #12]
   22008:	str	r0, [fp, #-4]
   2200c:	ldr	r0, [fp, #-4]
   22010:	mov	sp, fp
   22014:	pop	{fp, pc}
   22018:	sub	sp, sp, #8
   2201c:	push	{fp, lr}
   22020:	mov	fp, sp
   22024:	sub	sp, sp, #48	; 0x30
   22028:	str	r3, [fp, #12]
   2202c:	str	r2, [fp, #8]
   22030:	str	r0, [fp, #-4]
   22034:	str	r1, [fp, #-8]
   22038:	mvn	r0, #0
   2203c:	str	r0, [fp, #-16]
   22040:	add	r0, fp, #8
   22044:	str	r0, [fp, #-12]
   22048:	ldr	r0, [fp, #-8]
   2204c:	cmp	r0, #0
   22050:	str	r0, [sp, #12]
   22054:	beq	22070 <__assert_fail@plt+0x10b94>
   22058:	b	2205c <__assert_fail@plt+0x10b80>
   2205c:	movw	r0, #1030	; 0x406
   22060:	ldr	r1, [sp, #12]
   22064:	cmp	r1, r0
   22068:	beq	22098 <__assert_fail@plt+0x10bbc>
   2206c:	b	220c0 <__assert_fail@plt+0x10be4>
   22070:	ldr	r0, [fp, #-12]
   22074:	add	r1, r0, #4
   22078:	str	r1, [fp, #-12]
   2207c:	ldr	r0, [r0]
   22080:	str	r0, [fp, #-20]	; 0xffffffec
   22084:	ldr	r0, [fp, #-4]
   22088:	ldr	r1, [fp, #-20]	; 0xffffffec
   2208c:	bl	2226c <__assert_fail@plt+0x10d90>
   22090:	str	r0, [fp, #-16]
   22094:	b	2224c <__assert_fail@plt+0x10d70>
   22098:	ldr	r0, [fp, #-12]
   2209c:	add	r1, r0, #4
   220a0:	str	r1, [fp, #-12]
   220a4:	ldr	r0, [r0]
   220a8:	str	r0, [sp, #24]
   220ac:	ldr	r0, [fp, #-4]
   220b0:	ldr	r1, [sp, #24]
   220b4:	bl	222a0 <__assert_fail@plt+0x10dc4>
   220b8:	str	r0, [fp, #-16]
   220bc:	b	2224c <__assert_fail@plt+0x10d70>
   220c0:	ldr	r0, [fp, #-8]
   220c4:	cmp	r0, #0
   220c8:	str	r0, [sp, #8]
   220cc:	beq	221f4 <__assert_fail@plt+0x10d18>
   220d0:	b	220d4 <__assert_fail@plt+0x10bf8>
   220d4:	ldr	r0, [sp, #8]
   220d8:	cmp	r0, #1
   220dc:	beq	221e0 <__assert_fail@plt+0x10d04>
   220e0:	b	220e4 <__assert_fail@plt+0x10c08>
   220e4:	ldr	r0, [sp, #8]
   220e8:	cmp	r0, #2
   220ec:	beq	221f4 <__assert_fail@plt+0x10d18>
   220f0:	b	220f4 <__assert_fail@plt+0x10c18>
   220f4:	ldr	r0, [sp, #8]
   220f8:	cmp	r0, #3
   220fc:	beq	221e0 <__assert_fail@plt+0x10d04>
   22100:	b	22104 <__assert_fail@plt+0x10c28>
   22104:	ldr	r0, [sp, #8]
   22108:	cmp	r0, #4
   2210c:	beq	221f4 <__assert_fail@plt+0x10d18>
   22110:	b	22114 <__assert_fail@plt+0x10c38>
   22114:	ldr	r0, [sp, #8]
   22118:	cmp	r0, #8
   2211c:	beq	221f4 <__assert_fail@plt+0x10d18>
   22120:	b	22124 <__assert_fail@plt+0x10c48>
   22124:	ldr	r0, [sp, #8]
   22128:	cmp	r0, #9
   2212c:	beq	221e0 <__assert_fail@plt+0x10d04>
   22130:	b	22134 <__assert_fail@plt+0x10c58>
   22134:	ldr	r0, [sp, #8]
   22138:	cmp	r0, #10
   2213c:	beq	221f4 <__assert_fail@plt+0x10d18>
   22140:	b	22144 <__assert_fail@plt+0x10c68>
   22144:	ldr	r0, [sp, #8]
   22148:	cmp	r0, #11
   2214c:	beq	221e0 <__assert_fail@plt+0x10d04>
   22150:	b	22154 <__assert_fail@plt+0x10c78>
   22154:	ldr	r0, [sp, #8]
   22158:	cmp	r0, #1024	; 0x400
   2215c:	beq	221f4 <__assert_fail@plt+0x10d18>
   22160:	b	22164 <__assert_fail@plt+0x10c88>
   22164:	movw	r0, #1025	; 0x401
   22168:	ldr	r1, [sp, #8]
   2216c:	cmp	r1, r0
   22170:	beq	221e0 <__assert_fail@plt+0x10d04>
   22174:	b	22178 <__assert_fail@plt+0x10c9c>
   22178:	movw	r0, #1026	; 0x402
   2217c:	ldr	r1, [sp, #8]
   22180:	cmp	r1, r0
   22184:	beq	221f4 <__assert_fail@plt+0x10d18>
   22188:	b	2218c <__assert_fail@plt+0x10cb0>
   2218c:	movw	r0, #1030	; 0x406
   22190:	ldr	r1, [sp, #8]
   22194:	sub	r0, r1, r0
   22198:	cmp	r0, #2
   2219c:	bcc	221f4 <__assert_fail@plt+0x10d18>
   221a0:	b	221a4 <__assert_fail@plt+0x10cc8>
   221a4:	movw	r0, #1032	; 0x408
   221a8:	ldr	r1, [sp, #8]
   221ac:	cmp	r1, r0
   221b0:	beq	221e0 <__assert_fail@plt+0x10d04>
   221b4:	b	221b8 <__assert_fail@plt+0x10cdc>
   221b8:	movw	r0, #1033	; 0x409
   221bc:	ldr	r1, [sp, #8]
   221c0:	cmp	r1, r0
   221c4:	beq	221f4 <__assert_fail@plt+0x10d18>
   221c8:	b	221cc <__assert_fail@plt+0x10cf0>
   221cc:	movw	r0, #1034	; 0x40a
   221d0:	ldr	r1, [sp, #8]
   221d4:	cmp	r1, r0
   221d8:	bne	22220 <__assert_fail@plt+0x10d44>
   221dc:	b	221e0 <__assert_fail@plt+0x10d04>
   221e0:	ldr	r0, [fp, #-4]
   221e4:	ldr	r1, [fp, #-8]
   221e8:	bl	113ec <fcntl64@plt>
   221ec:	str	r0, [fp, #-16]
   221f0:	b	22248 <__assert_fail@plt+0x10d6c>
   221f4:	ldr	r0, [fp, #-12]
   221f8:	add	r1, r0, #4
   221fc:	str	r1, [fp, #-12]
   22200:	ldr	r0, [r0]
   22204:	str	r0, [sp, #20]
   22208:	ldr	r0, [fp, #-4]
   2220c:	ldr	r1, [fp, #-8]
   22210:	ldr	r2, [sp, #20]
   22214:	bl	113ec <fcntl64@plt>
   22218:	str	r0, [fp, #-16]
   2221c:	b	22248 <__assert_fail@plt+0x10d6c>
   22220:	ldr	r0, [fp, #-12]
   22224:	add	r1, r0, #4
   22228:	str	r1, [fp, #-12]
   2222c:	ldr	r0, [r0]
   22230:	str	r0, [sp, #16]
   22234:	ldr	r0, [fp, #-4]
   22238:	ldr	r1, [fp, #-8]
   2223c:	ldr	r2, [sp, #16]
   22240:	bl	113ec <fcntl64@plt>
   22244:	str	r0, [fp, #-16]
   22248:	b	2224c <__assert_fail@plt+0x10d70>
   2224c:	sub	r0, fp, #12
   22250:	ldr	r1, [fp, #-16]
   22254:	str	r0, [sp, #4]
   22258:	mov	r0, r1
   2225c:	mov	sp, fp
   22260:	pop	{fp, lr}
   22264:	add	sp, sp, #8
   22268:	bx	lr
   2226c:	push	{fp, lr}
   22270:	mov	fp, sp
   22274:	sub	sp, sp, #16
   22278:	str	r0, [fp, #-4]
   2227c:	str	r1, [sp, #8]
   22280:	ldr	r0, [fp, #-4]
   22284:	ldr	r2, [sp, #8]
   22288:	movw	r1, #0
   2228c:	bl	113ec <fcntl64@plt>
   22290:	str	r0, [sp, #4]
   22294:	ldr	r0, [sp, #4]
   22298:	mov	sp, fp
   2229c:	pop	{fp, pc}
   222a0:	push	{fp, lr}
   222a4:	mov	fp, sp
   222a8:	sub	sp, sp, #32
   222ac:	str	r0, [fp, #-4]
   222b0:	str	r1, [fp, #-8]
   222b4:	movw	r0, #25324	; 0x62ec
   222b8:	movt	r0, #3
   222bc:	ldr	r0, [r0]
   222c0:	movw	r1, #0
   222c4:	cmp	r1, r0
   222c8:	bgt	22348 <__assert_fail@plt+0x10e6c>
   222cc:	ldr	r0, [fp, #-4]
   222d0:	ldr	r2, [fp, #-8]
   222d4:	movw	r1, #1030	; 0x406
   222d8:	bl	113ec <fcntl64@plt>
   222dc:	str	r0, [fp, #-12]
   222e0:	ldr	r0, [fp, #-12]
   222e4:	movw	r1, #0
   222e8:	cmp	r1, r0
   222ec:	ble	22300 <__assert_fail@plt+0x10e24>
   222f0:	bl	11398 <__errno_location@plt>
   222f4:	ldr	r0, [r0]
   222f8:	cmp	r0, #22
   222fc:	beq	22314 <__assert_fail@plt+0x10e38>
   22300:	movw	r0, #25324	; 0x62ec
   22304:	movt	r0, #3
   22308:	movw	r1, #1
   2230c:	str	r1, [r0]
   22310:	b	22344 <__assert_fail@plt+0x10e68>
   22314:	ldr	r0, [fp, #-4]
   22318:	ldr	r1, [fp, #-8]
   2231c:	bl	2226c <__assert_fail@plt+0x10d90>
   22320:	str	r0, [fp, #-12]
   22324:	ldr	r0, [fp, #-12]
   22328:	cmp	r0, #0
   2232c:	blt	22340 <__assert_fail@plt+0x10e64>
   22330:	movw	r0, #25324	; 0x62ec
   22334:	movt	r0, #3
   22338:	mvn	r1, #0
   2233c:	str	r1, [r0]
   22340:	b	22344 <__assert_fail@plt+0x10e68>
   22344:	b	22358 <__assert_fail@plt+0x10e7c>
   22348:	ldr	r0, [fp, #-4]
   2234c:	ldr	r1, [fp, #-8]
   22350:	bl	2226c <__assert_fail@plt+0x10d90>
   22354:	str	r0, [fp, #-12]
   22358:	ldr	r0, [fp, #-12]
   2235c:	movw	r1, #0
   22360:	cmp	r1, r0
   22364:	bgt	223ec <__assert_fail@plt+0x10f10>
   22368:	movw	r0, #25324	; 0x62ec
   2236c:	movt	r0, #3
   22370:	ldr	r0, [r0]
   22374:	cmn	r0, #1
   22378:	bne	223ec <__assert_fail@plt+0x10f10>
   2237c:	ldr	r0, [fp, #-12]
   22380:	movw	r1, #1
   22384:	bl	113ec <fcntl64@plt>
   22388:	str	r0, [sp, #16]
   2238c:	ldr	r0, [sp, #16]
   22390:	cmp	r0, #0
   22394:	blt	223b4 <__assert_fail@plt+0x10ed8>
   22398:	ldr	r0, [fp, #-12]
   2239c:	ldr	r1, [sp, #16]
   223a0:	orr	r2, r1, #1
   223a4:	movw	r1, #2
   223a8:	bl	113ec <fcntl64@plt>
   223ac:	cmn	r0, #1
   223b0:	bne	223e8 <__assert_fail@plt+0x10f0c>
   223b4:	bl	11398 <__errno_location@plt>
   223b8:	ldr	r0, [r0]
   223bc:	str	r0, [sp, #12]
   223c0:	ldr	r0, [fp, #-12]
   223c4:	bl	114a0 <close@plt>
   223c8:	ldr	lr, [sp, #12]
   223cc:	str	r0, [sp, #8]
   223d0:	str	lr, [sp, #4]
   223d4:	bl	11398 <__errno_location@plt>
   223d8:	ldr	lr, [sp, #4]
   223dc:	str	lr, [r0]
   223e0:	mvn	r0, #0
   223e4:	str	r0, [fp, #-12]
   223e8:	b	223ec <__assert_fail@plt+0x10f10>
   223ec:	ldr	r0, [fp, #-12]
   223f0:	mov	sp, fp
   223f4:	pop	{fp, pc}
   223f8:	sub	sp, sp, #8
   223fc:	push	{fp, lr}
   22400:	mov	fp, sp
   22404:	sub	sp, sp, #24
   22408:	str	r3, [fp, #12]
   2240c:	str	r2, [fp, #8]
   22410:	str	r0, [fp, #-4]
   22414:	str	r1, [fp, #-8]
   22418:	movw	r0, #0
   2241c:	str	r0, [sp, #12]
   22420:	ldr	r0, [fp, #-8]
   22424:	and	r0, r0, #64	; 0x40
   22428:	cmp	r0, #0
   2242c:	beq	22458 <__assert_fail@plt+0x10f7c>
   22430:	add	r0, sp, #8
   22434:	mov	r1, r0
   22438:	add	r2, fp, #8
   2243c:	str	r2, [r1]
   22440:	ldr	r1, [sp, #8]
   22444:	add	r2, r1, #4
   22448:	str	r2, [sp, #8]
   2244c:	ldr	r1, [r1]
   22450:	str	r1, [sp, #12]
   22454:	str	r0, [sp, #4]
   22458:	ldr	r0, [fp, #-4]
   2245c:	ldr	r1, [fp, #-8]
   22460:	ldr	r2, [sp, #12]
   22464:	bl	112f0 <open64@plt>
   22468:	bl	1bc44 <__assert_fail@plt+0xa768>
   2246c:	mov	sp, fp
   22470:	pop	{fp, lr}
   22474:	add	sp, sp, #8
   22478:	bx	lr
   2247c:	push	{fp, lr}
   22480:	mov	fp, sp
   22484:	sub	sp, sp, #8
   22488:	str	r0, [sp]
   2248c:	ldr	r0, [sp]
   22490:	movw	r1, #0
   22494:	cmp	r0, r1
   22498:	beq	224ac <__assert_fail@plt+0x10fd0>
   2249c:	ldr	r0, [sp]
   224a0:	bl	11314 <__freading@plt>
   224a4:	cmp	r0, #0
   224a8:	bne	224bc <__assert_fail@plt+0x10fe0>
   224ac:	ldr	r0, [sp]
   224b0:	bl	1120c <fflush@plt>
   224b4:	str	r0, [sp, #4]
   224b8:	b	224d0 <__assert_fail@plt+0x10ff4>
   224bc:	ldr	r0, [sp]
   224c0:	bl	224dc <__assert_fail@plt+0x11000>
   224c4:	ldr	r0, [sp]
   224c8:	bl	1120c <fflush@plt>
   224cc:	str	r0, [sp, #4]
   224d0:	ldr	r0, [sp, #4]
   224d4:	mov	sp, fp
   224d8:	pop	{fp, pc}
   224dc:	push	{fp, lr}
   224e0:	mov	fp, sp
   224e4:	sub	sp, sp, #16
   224e8:	str	r0, [fp, #-4]
   224ec:	ldr	r0, [fp, #-4]
   224f0:	ldr	r0, [r0]
   224f4:	and	r0, r0, #256	; 0x100
   224f8:	cmp	r0, #0
   224fc:	beq	22524 <__assert_fail@plt+0x11048>
   22500:	ldr	r0, [fp, #-4]
   22504:	mov	r1, sp
   22508:	mov	r2, #1
   2250c:	str	r2, [r1]
   22510:	mov	r1, #0
   22514:	mov	r2, r1
   22518:	mov	r3, r1
   2251c:	bl	2252c <__assert_fail@plt+0x11050>
   22520:	str	r0, [sp, #8]
   22524:	mov	sp, fp
   22528:	pop	{fp, pc}
   2252c:	push	{fp, lr}
   22530:	mov	fp, sp
   22534:	sub	sp, sp, #32
   22538:	ldr	r1, [fp, #8]
   2253c:	str	r0, [fp, #-8]
   22540:	str	r3, [sp, #20]
   22544:	str	r2, [sp, #16]
   22548:	ldr	r0, [fp, #-8]
   2254c:	ldr	r0, [r0, #8]
   22550:	ldr	r2, [fp, #-8]
   22554:	ldr	r2, [r2, #4]
   22558:	cmp	r0, r2
   2255c:	str	r1, [sp, #4]
   22560:	bne	2260c <__assert_fail@plt+0x11130>
   22564:	ldr	r0, [fp, #-8]
   22568:	ldr	r0, [r0, #20]
   2256c:	ldr	r1, [fp, #-8]
   22570:	ldr	r1, [r1, #16]
   22574:	cmp	r0, r1
   22578:	bne	2260c <__assert_fail@plt+0x11130>
   2257c:	ldr	r0, [fp, #-8]
   22580:	ldr	r0, [r0, #36]	; 0x24
   22584:	movw	r1, #0
   22588:	cmp	r0, r1
   2258c:	bne	2260c <__assert_fail@plt+0x11130>
   22590:	ldr	r0, [fp, #-8]
   22594:	bl	113bc <fileno@plt>
   22598:	ldr	r2, [sp, #16]
   2259c:	ldr	r3, [sp, #20]
   225a0:	ldr	lr, [fp, #8]
   225a4:	mov	r1, sp
   225a8:	str	lr, [r1]
   225ac:	bl	112a8 <lseek64@plt>
   225b0:	str	r1, [sp, #12]
   225b4:	str	r0, [sp, #8]
   225b8:	ldr	r0, [sp, #8]
   225bc:	ldr	r1, [sp, #12]
   225c0:	and	r0, r0, r1
   225c4:	cmn	r0, #1
   225c8:	bne	225dc <__assert_fail@plt+0x11100>
   225cc:	b	225d0 <__assert_fail@plt+0x110f4>
   225d0:	mvn	r0, #0
   225d4:	str	r0, [fp, #-4]
   225d8:	b	2262c <__assert_fail@plt+0x11150>
   225dc:	ldr	r0, [fp, #-8]
   225e0:	ldr	r1, [r0]
   225e4:	bic	r1, r1, #16
   225e8:	str	r1, [r0]
   225ec:	ldr	r0, [sp, #8]
   225f0:	ldr	r1, [sp, #12]
   225f4:	ldr	r2, [fp, #-8]
   225f8:	str	r1, [r2, #84]	; 0x54
   225fc:	str	r0, [r2, #80]	; 0x50
   22600:	movw	r0, #0
   22604:	str	r0, [fp, #-4]
   22608:	b	2262c <__assert_fail@plt+0x11150>
   2260c:	ldr	r0, [fp, #-8]
   22610:	ldr	r2, [sp, #16]
   22614:	ldr	r3, [sp, #20]
   22618:	ldr	r1, [fp, #8]
   2261c:	mov	ip, sp
   22620:	str	r1, [ip]
   22624:	bl	113e0 <fseeko64@plt>
   22628:	str	r0, [fp, #-4]
   2262c:	ldr	r0, [fp, #-4]
   22630:	mov	sp, fp
   22634:	pop	{fp, pc}
   22638:	push	{fp, lr}
   2263c:	mov	fp, sp
   22640:	bl	11398 <__errno_location@plt>
   22644:	movw	lr, #12
   22648:	str	lr, [r0]
   2264c:	movw	r0, #0
   22650:	pop	{fp, pc}
   22654:	push	{fp, lr}
   22658:	mov	fp, sp
   2265c:	sub	sp, sp, #8
   22660:	str	r0, [sp, #4]
   22664:	ldr	r0, [sp, #4]
   22668:	cmn	r0, #1
   2266c:	bhi	22680 <__assert_fail@plt+0x111a4>
   22670:	ldr	r0, [sp, #4]
   22674:	bl	217c0 <__assert_fail@plt+0x102e4>
   22678:	str	r0, [sp]
   2267c:	b	22688 <__assert_fail@plt+0x111ac>
   22680:	bl	22638 <__assert_fail@plt+0x1115c>
   22684:	str	r0, [sp]
   22688:	ldr	r0, [sp]
   2268c:	mov	sp, fp
   22690:	pop	{fp, pc}
   22694:	push	{fp, lr}
   22698:	mov	fp, sp
   2269c:	sub	sp, sp, #16
   226a0:	str	r0, [fp, #-4]
   226a4:	str	r1, [sp, #8]
   226a8:	ldr	r0, [sp, #8]
   226ac:	cmn	r0, #1
   226b0:	bhi	226e8 <__assert_fail@plt+0x1120c>
   226b4:	ldr	r0, [fp, #-4]
   226b8:	ldr	r1, [sp, #8]
   226bc:	ldr	r2, [sp, #8]
   226c0:	cmp	r2, #0
   226c4:	movw	r2, #0
   226c8:	movne	r2, #1
   226cc:	mvn	r3, #0
   226d0:	eor	r2, r2, r3
   226d4:	and	r2, r2, #1
   226d8:	orr	r1, r1, r2
   226dc:	bl	21830 <__assert_fail@plt+0x10354>
   226e0:	str	r0, [sp, #4]
   226e4:	b	226f0 <__assert_fail@plt+0x11214>
   226e8:	bl	22638 <__assert_fail@plt+0x1115c>
   226ec:	str	r0, [sp, #4]
   226f0:	ldr	r0, [sp, #4]
   226f4:	mov	sp, fp
   226f8:	pop	{fp, pc}
   226fc:	push	{fp, lr}
   22700:	mov	fp, sp
   22704:	sub	sp, sp, #16
   22708:	str	r0, [sp, #8]
   2270c:	str	r1, [sp, #4]
   22710:	ldr	r0, [sp, #8]
   22714:	mvn	r1, #0
   22718:	cmp	r1, r0
   2271c:	bcs	22740 <__assert_fail@plt+0x11264>
   22720:	ldr	r0, [sp, #4]
   22724:	cmp	r0, #0
   22728:	beq	22738 <__assert_fail@plt+0x1125c>
   2272c:	bl	22638 <__assert_fail@plt+0x1115c>
   22730:	str	r0, [fp, #-4]
   22734:	b	22780 <__assert_fail@plt+0x112a4>
   22738:	movw	r0, #0
   2273c:	str	r0, [sp, #8]
   22740:	ldr	r0, [sp, #4]
   22744:	mvn	r1, #0
   22748:	cmp	r1, r0
   2274c:	bcs	22770 <__assert_fail@plt+0x11294>
   22750:	ldr	r0, [sp, #8]
   22754:	cmp	r0, #0
   22758:	beq	22768 <__assert_fail@plt+0x1128c>
   2275c:	bl	22638 <__assert_fail@plt+0x1115c>
   22760:	str	r0, [fp, #-4]
   22764:	b	22780 <__assert_fail@plt+0x112a4>
   22768:	movw	r0, #0
   2276c:	str	r0, [sp, #4]
   22770:	ldr	r0, [sp, #8]
   22774:	ldr	r1, [sp, #4]
   22778:	bl	21724 <__assert_fail@plt+0x10248>
   2277c:	str	r0, [fp, #-4]
   22780:	ldr	r0, [fp, #-4]
   22784:	mov	sp, fp
   22788:	pop	{fp, pc}
   2278c:	push	{fp, lr}
   22790:	mov	fp, sp
   22794:	sub	sp, sp, #16
   22798:	str	r0, [fp, #-4]
   2279c:	str	r1, [sp, #8]
   227a0:	str	r2, [sp, #4]
   227a4:	ldr	r0, [sp, #8]
   227a8:	cmp	r0, #0
   227ac:	beq	227bc <__assert_fail@plt+0x112e0>
   227b0:	ldr	r0, [sp, #4]
   227b4:	cmp	r0, #0
   227b8:	bne	227c8 <__assert_fail@plt+0x112ec>
   227bc:	movw	r0, #1
   227c0:	str	r0, [sp, #4]
   227c4:	str	r0, [sp, #8]
   227c8:	ldr	r0, [sp, #8]
   227cc:	cmn	r0, #1
   227d0:	bhi	227f8 <__assert_fail@plt+0x1131c>
   227d4:	ldr	r0, [sp, #4]
   227d8:	cmn	r0, #1
   227dc:	bhi	227f8 <__assert_fail@plt+0x1131c>
   227e0:	ldr	r0, [fp, #-4]
   227e4:	ldr	r1, [sp, #8]
   227e8:	ldr	r2, [sp, #4]
   227ec:	bl	22918 <__assert_fail@plt+0x1143c>
   227f0:	str	r0, [sp]
   227f4:	b	22800 <__assert_fail@plt+0x11324>
   227f8:	bl	22638 <__assert_fail@plt+0x1115c>
   227fc:	str	r0, [sp]
   22800:	ldr	r0, [sp]
   22804:	mov	sp, fp
   22808:	pop	{fp, pc}
   2280c:	push	{fp, lr}
   22810:	mov	fp, sp
   22814:	sub	sp, sp, #8
   22818:	movw	r0, #14
   2281c:	bl	11410 <nl_langinfo@plt>
   22820:	str	r0, [sp, #4]
   22824:	ldr	r0, [sp, #4]
   22828:	movw	lr, #0
   2282c:	cmp	r0, lr
   22830:	bne	22840 <__assert_fail@plt+0x11364>
   22834:	movw	r0, #20032	; 0x4e40
   22838:	movt	r0, #2
   2283c:	str	r0, [sp, #4]
   22840:	ldr	r0, [sp, #4]
   22844:	ldrb	r0, [r0]
   22848:	cmp	r0, #0
   2284c:	bne	2285c <__assert_fail@plt+0x11380>
   22850:	movw	r0, #23648	; 0x5c60
   22854:	movt	r0, #2
   22858:	str	r0, [sp, #4]
   2285c:	ldr	r0, [sp, #4]
   22860:	mov	sp, fp
   22864:	pop	{fp, pc}
   22868:	push	{fp, lr}
   2286c:	mov	fp, sp
   22870:	sub	sp, sp, #32
   22874:	str	r0, [fp, #-8]
   22878:	str	r1, [fp, #-12]
   2287c:	str	r2, [sp, #16]
   22880:	str	r3, [sp, #12]
   22884:	ldr	r0, [fp, #-8]
   22888:	movw	r1, #0
   2288c:	cmp	r0, r1
   22890:	bne	2289c <__assert_fail@plt+0x113c0>
   22894:	add	r0, sp, #4
   22898:	str	r0, [fp, #-8]
   2289c:	ldr	r0, [fp, #-8]
   228a0:	ldr	r1, [fp, #-12]
   228a4:	ldr	r2, [sp, #16]
   228a8:	ldr	r3, [sp, #12]
   228ac:	bl	112d8 <mbrtowc@plt>
   228b0:	str	r0, [sp, #8]
   228b4:	ldr	r0, [sp, #8]
   228b8:	mvn	r1, #1
   228bc:	cmp	r1, r0
   228c0:	bhi	22904 <__assert_fail@plt+0x11428>
   228c4:	ldr	r0, [sp, #16]
   228c8:	cmp	r0, #0
   228cc:	beq	22904 <__assert_fail@plt+0x11428>
   228d0:	movw	r0, #0
   228d4:	bl	24310 <__assert_fail@plt+0x12e34>
   228d8:	tst	r0, #1
   228dc:	bne	22904 <__assert_fail@plt+0x11428>
   228e0:	ldr	r0, [fp, #-12]
   228e4:	ldrb	r0, [r0]
   228e8:	strb	r0, [sp, #3]
   228ec:	ldrb	r0, [sp, #3]
   228f0:	ldr	r1, [fp, #-8]
   228f4:	str	r0, [r1]
   228f8:	movw	r0, #1
   228fc:	str	r0, [fp, #-4]
   22900:	b	2290c <__assert_fail@plt+0x11430>
   22904:	ldr	r0, [sp, #8]
   22908:	str	r0, [fp, #-4]
   2290c:	ldr	r0, [fp, #-4]
   22910:	mov	sp, fp
   22914:	pop	{fp, pc}
   22918:	push	{fp, lr}
   2291c:	mov	fp, sp
   22920:	sub	sp, sp, #176	; 0xb0
   22924:	str	r0, [fp, #-8]
   22928:	str	r1, [fp, #-12]
   2292c:	str	r2, [fp, #-16]
   22930:	b	22ce8 <__assert_fail@plt+0x1180c>
   22934:	b	22b08 <__assert_fail@plt+0x1162c>
   22938:	ldr	r0, [fp, #-16]
   2293c:	cmp	r0, #0
   22940:	bcs	22a44 <__assert_fail@plt+0x11568>
   22944:	ldr	r0, [fp, #-12]
   22948:	cmp	r0, #0
   2294c:	bcs	229d4 <__assert_fail@plt+0x114f8>
   22950:	b	22970 <__assert_fail@plt+0x11494>
   22954:	ldr	r0, [fp, #-12]
   22958:	ldr	r1, [fp, #-16]
   2295c:	movw	r2, #127	; 0x7f
   22960:	udiv	r1, r2, r1
   22964:	cmp	r0, r1
   22968:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   2296c:	b	22af0 <__assert_fail@plt+0x11614>
   22970:	b	22984 <__assert_fail@plt+0x114a8>
   22974:	ldr	r0, [fp, #-16]
   22978:	cmp	r0, #1
   2297c:	bcc	22994 <__assert_fail@plt+0x114b8>
   22980:	b	229a0 <__assert_fail@plt+0x114c4>
   22984:	ldr	r0, [fp, #-16]
   22988:	movw	r1, #0
   2298c:	cmp	r1, r0
   22990:	bcs	229a0 <__assert_fail@plt+0x114c4>
   22994:	movw	r0, #0
   22998:	str	r0, [fp, #-24]	; 0xffffffe8
   2299c:	b	229b8 <__assert_fail@plt+0x114dc>
   229a0:	ldr	r0, [fp, #-16]
   229a4:	movw	r1, #0
   229a8:	sub	r0, r1, r0
   229ac:	movw	r1, #127	; 0x7f
   229b0:	udiv	r0, r1, r0
   229b4:	str	r0, [fp, #-24]	; 0xffffffe8
   229b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   229bc:	ldr	r1, [fp, #-12]
   229c0:	mvn	r2, #0
   229c4:	sub	r1, r2, r1
   229c8:	cmp	r0, r1
   229cc:	bls	22ad8 <__assert_fail@plt+0x115fc>
   229d0:	b	22af0 <__assert_fail@plt+0x11614>
   229d4:	ldr	r0, [fp, #-16]
   229d8:	cmn	r0, #1
   229dc:	bne	22a28 <__assert_fail@plt+0x1154c>
   229e0:	b	22a00 <__assert_fail@plt+0x11524>
   229e4:	ldr	r0, [fp, #-12]
   229e8:	mvn	r1, #127	; 0x7f
   229ec:	add	r0, r0, r1
   229f0:	movw	r1, #0
   229f4:	cmp	r1, r0
   229f8:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   229fc:	b	22af0 <__assert_fail@plt+0x11614>
   22a00:	ldr	r0, [fp, #-12]
   22a04:	movw	r1, #0
   22a08:	cmp	r1, r0
   22a0c:	bcs	22af0 <__assert_fail@plt+0x11614>
   22a10:	ldr	r0, [fp, #-12]
   22a14:	sub	r0, r0, #1
   22a18:	movw	r1, #127	; 0x7f
   22a1c:	cmp	r1, r0
   22a20:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   22a24:	b	22af0 <__assert_fail@plt+0x11614>
   22a28:	ldr	r0, [fp, #-16]
   22a2c:	mvn	r1, #127	; 0x7f
   22a30:	udiv	r0, r1, r0
   22a34:	ldr	r1, [fp, #-12]
   22a38:	cmp	r0, r1
   22a3c:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   22a40:	b	22af0 <__assert_fail@plt+0x11614>
   22a44:	ldr	r0, [fp, #-16]
   22a48:	cmp	r0, #0
   22a4c:	bne	22a54 <__assert_fail@plt+0x11578>
   22a50:	b	22af0 <__assert_fail@plt+0x11614>
   22a54:	ldr	r0, [fp, #-12]
   22a58:	cmp	r0, #0
   22a5c:	bcs	22ac0 <__assert_fail@plt+0x115e4>
   22a60:	ldr	r0, [fp, #-12]
   22a64:	cmn	r0, #1
   22a68:	bne	22aa4 <__assert_fail@plt+0x115c8>
   22a6c:	b	22a8c <__assert_fail@plt+0x115b0>
   22a70:	ldr	r0, [fp, #-16]
   22a74:	mvn	r1, #127	; 0x7f
   22a78:	add	r0, r0, r1
   22a7c:	movw	r1, #0
   22a80:	cmp	r1, r0
   22a84:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   22a88:	b	22af0 <__assert_fail@plt+0x11614>
   22a8c:	ldr	r0, [fp, #-16]
   22a90:	sub	r0, r0, #1
   22a94:	movw	r1, #127	; 0x7f
   22a98:	cmp	r1, r0
   22a9c:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   22aa0:	b	22af0 <__assert_fail@plt+0x11614>
   22aa4:	ldr	r0, [fp, #-12]
   22aa8:	mvn	r1, #127	; 0x7f
   22aac:	udiv	r0, r1, r0
   22ab0:	ldr	r1, [fp, #-16]
   22ab4:	cmp	r0, r1
   22ab8:	bcc	22ad8 <__assert_fail@plt+0x115fc>
   22abc:	b	22af0 <__assert_fail@plt+0x11614>
   22ac0:	ldr	r0, [fp, #-16]
   22ac4:	movw	r1, #127	; 0x7f
   22ac8:	udiv	r0, r1, r0
   22acc:	ldr	r1, [fp, #-12]
   22ad0:	cmp	r0, r1
   22ad4:	bcs	22af0 <__assert_fail@plt+0x11614>
   22ad8:	ldr	r0, [fp, #-12]
   22adc:	ldr	r1, [fp, #-16]
   22ae0:	mul	r0, r0, r1
   22ae4:	sxtb	r0, r0
   22ae8:	str	r0, [fp, #-20]	; 0xffffffec
   22aec:	b	23c68 <__assert_fail@plt+0x1278c>
   22af0:	ldr	r0, [fp, #-12]
   22af4:	ldr	r1, [fp, #-16]
   22af8:	mul	r0, r0, r1
   22afc:	sxtb	r0, r0
   22b00:	str	r0, [fp, #-20]	; 0xffffffec
   22b04:	b	23c80 <__assert_fail@plt+0x127a4>
   22b08:	ldr	r0, [fp, #-16]
   22b0c:	cmp	r0, #0
   22b10:	bcs	22c1c <__assert_fail@plt+0x11740>
   22b14:	ldr	r0, [fp, #-12]
   22b18:	cmp	r0, #0
   22b1c:	bcs	22ba4 <__assert_fail@plt+0x116c8>
   22b20:	b	22b40 <__assert_fail@plt+0x11664>
   22b24:	ldr	r0, [fp, #-12]
   22b28:	ldr	r1, [fp, #-16]
   22b2c:	movw	r2, #255	; 0xff
   22b30:	udiv	r1, r2, r1
   22b34:	cmp	r0, r1
   22b38:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22b3c:	b	22cd0 <__assert_fail@plt+0x117f4>
   22b40:	b	22b54 <__assert_fail@plt+0x11678>
   22b44:	ldr	r0, [fp, #-16]
   22b48:	cmp	r0, #1
   22b4c:	bcc	22b64 <__assert_fail@plt+0x11688>
   22b50:	b	22b70 <__assert_fail@plt+0x11694>
   22b54:	ldr	r0, [fp, #-16]
   22b58:	movw	r1, #0
   22b5c:	cmp	r1, r0
   22b60:	bcs	22b70 <__assert_fail@plt+0x11694>
   22b64:	movw	r0, #0
   22b68:	str	r0, [fp, #-28]	; 0xffffffe4
   22b6c:	b	22b88 <__assert_fail@plt+0x116ac>
   22b70:	ldr	r0, [fp, #-16]
   22b74:	movw	r1, #0
   22b78:	sub	r0, r1, r0
   22b7c:	movw	r1, #255	; 0xff
   22b80:	udiv	r0, r1, r0
   22b84:	str	r0, [fp, #-28]	; 0xffffffe4
   22b88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22b8c:	ldr	r1, [fp, #-12]
   22b90:	mvn	r2, #0
   22b94:	sub	r1, r2, r1
   22b98:	cmp	r0, r1
   22b9c:	bls	22cb8 <__assert_fail@plt+0x117dc>
   22ba0:	b	22cd0 <__assert_fail@plt+0x117f4>
   22ba4:	b	22bac <__assert_fail@plt+0x116d0>
   22ba8:	b	22bb0 <__assert_fail@plt+0x116d4>
   22bac:	b	22c00 <__assert_fail@plt+0x11724>
   22bb0:	ldr	r0, [fp, #-16]
   22bb4:	cmn	r0, #1
   22bb8:	bne	22c00 <__assert_fail@plt+0x11724>
   22bbc:	b	22bd8 <__assert_fail@plt+0x116fc>
   22bc0:	ldr	r0, [fp, #-12]
   22bc4:	add	r0, r0, #0
   22bc8:	movw	r1, #0
   22bcc:	cmp	r1, r0
   22bd0:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22bd4:	b	22cd0 <__assert_fail@plt+0x117f4>
   22bd8:	ldr	r0, [fp, #-12]
   22bdc:	movw	r1, #0
   22be0:	cmp	r1, r0
   22be4:	bcs	22cd0 <__assert_fail@plt+0x117f4>
   22be8:	ldr	r0, [fp, #-12]
   22bec:	sub	r0, r0, #1
   22bf0:	mvn	r1, #0
   22bf4:	cmp	r1, r0
   22bf8:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22bfc:	b	22cd0 <__assert_fail@plt+0x117f4>
   22c00:	ldr	r0, [fp, #-16]
   22c04:	movw	r1, #0
   22c08:	udiv	r0, r1, r0
   22c0c:	ldr	r1, [fp, #-12]
   22c10:	cmp	r0, r1
   22c14:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22c18:	b	22cd0 <__assert_fail@plt+0x117f4>
   22c1c:	ldr	r0, [fp, #-16]
   22c20:	cmp	r0, #0
   22c24:	bne	22c2c <__assert_fail@plt+0x11750>
   22c28:	b	22cd0 <__assert_fail@plt+0x117f4>
   22c2c:	ldr	r0, [fp, #-12]
   22c30:	cmp	r0, #0
   22c34:	bcs	22ca0 <__assert_fail@plt+0x117c4>
   22c38:	b	22c40 <__assert_fail@plt+0x11764>
   22c3c:	b	22c44 <__assert_fail@plt+0x11768>
   22c40:	b	22c84 <__assert_fail@plt+0x117a8>
   22c44:	ldr	r0, [fp, #-12]
   22c48:	cmn	r0, #1
   22c4c:	bne	22c84 <__assert_fail@plt+0x117a8>
   22c50:	b	22c6c <__assert_fail@plt+0x11790>
   22c54:	ldr	r0, [fp, #-16]
   22c58:	add	r0, r0, #0
   22c5c:	movw	r1, #0
   22c60:	cmp	r1, r0
   22c64:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22c68:	b	22cd0 <__assert_fail@plt+0x117f4>
   22c6c:	ldr	r0, [fp, #-16]
   22c70:	sub	r0, r0, #1
   22c74:	mvn	r1, #0
   22c78:	cmp	r1, r0
   22c7c:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22c80:	b	22cd0 <__assert_fail@plt+0x117f4>
   22c84:	ldr	r0, [fp, #-12]
   22c88:	movw	r1, #0
   22c8c:	udiv	r0, r1, r0
   22c90:	ldr	r1, [fp, #-16]
   22c94:	cmp	r0, r1
   22c98:	bcc	22cb8 <__assert_fail@plt+0x117dc>
   22c9c:	b	22cd0 <__assert_fail@plt+0x117f4>
   22ca0:	ldr	r0, [fp, #-16]
   22ca4:	movw	r1, #255	; 0xff
   22ca8:	udiv	r0, r1, r0
   22cac:	ldr	r1, [fp, #-12]
   22cb0:	cmp	r0, r1
   22cb4:	bcs	22cd0 <__assert_fail@plt+0x117f4>
   22cb8:	ldr	r0, [fp, #-12]
   22cbc:	ldr	r1, [fp, #-16]
   22cc0:	mul	r0, r0, r1
   22cc4:	and	r0, r0, #255	; 0xff
   22cc8:	str	r0, [fp, #-20]	; 0xffffffec
   22ccc:	b	23c68 <__assert_fail@plt+0x1278c>
   22cd0:	ldr	r0, [fp, #-12]
   22cd4:	ldr	r1, [fp, #-16]
   22cd8:	mul	r0, r0, r1
   22cdc:	and	r0, r0, #255	; 0xff
   22ce0:	str	r0, [fp, #-20]	; 0xffffffec
   22ce4:	b	23c80 <__assert_fail@plt+0x127a4>
   22ce8:	b	230a0 <__assert_fail@plt+0x11bc4>
   22cec:	b	22ec0 <__assert_fail@plt+0x119e4>
   22cf0:	ldr	r0, [fp, #-16]
   22cf4:	cmp	r0, #0
   22cf8:	bcs	22dfc <__assert_fail@plt+0x11920>
   22cfc:	ldr	r0, [fp, #-12]
   22d00:	cmp	r0, #0
   22d04:	bcs	22d8c <__assert_fail@plt+0x118b0>
   22d08:	b	22d28 <__assert_fail@plt+0x1184c>
   22d0c:	ldr	r0, [fp, #-12]
   22d10:	ldr	r1, [fp, #-16]
   22d14:	movw	r2, #32767	; 0x7fff
   22d18:	udiv	r1, r2, r1
   22d1c:	cmp	r0, r1
   22d20:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22d24:	b	22ea8 <__assert_fail@plt+0x119cc>
   22d28:	b	22d3c <__assert_fail@plt+0x11860>
   22d2c:	ldr	r0, [fp, #-16]
   22d30:	cmp	r0, #1
   22d34:	bcc	22d4c <__assert_fail@plt+0x11870>
   22d38:	b	22d58 <__assert_fail@plt+0x1187c>
   22d3c:	ldr	r0, [fp, #-16]
   22d40:	movw	r1, #0
   22d44:	cmp	r1, r0
   22d48:	bcs	22d58 <__assert_fail@plt+0x1187c>
   22d4c:	movw	r0, #0
   22d50:	str	r0, [fp, #-32]	; 0xffffffe0
   22d54:	b	22d70 <__assert_fail@plt+0x11894>
   22d58:	ldr	r0, [fp, #-16]
   22d5c:	movw	r1, #0
   22d60:	sub	r0, r1, r0
   22d64:	movw	r1, #32767	; 0x7fff
   22d68:	udiv	r0, r1, r0
   22d6c:	str	r0, [fp, #-32]	; 0xffffffe0
   22d70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d74:	ldr	r1, [fp, #-12]
   22d78:	mvn	r2, #0
   22d7c:	sub	r1, r2, r1
   22d80:	cmp	r0, r1
   22d84:	bls	22e90 <__assert_fail@plt+0x119b4>
   22d88:	b	22ea8 <__assert_fail@plt+0x119cc>
   22d8c:	ldr	r0, [fp, #-16]
   22d90:	cmn	r0, #1
   22d94:	bne	22de0 <__assert_fail@plt+0x11904>
   22d98:	b	22db8 <__assert_fail@plt+0x118dc>
   22d9c:	ldr	r0, [pc, #3840]	; 23ca4 <__assert_fail@plt+0x127c8>
   22da0:	ldr	r1, [fp, #-12]
   22da4:	add	r0, r1, r0
   22da8:	movw	r1, #0
   22dac:	cmp	r1, r0
   22db0:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22db4:	b	22ea8 <__assert_fail@plt+0x119cc>
   22db8:	ldr	r0, [fp, #-12]
   22dbc:	movw	r1, #0
   22dc0:	cmp	r1, r0
   22dc4:	bcs	22ea8 <__assert_fail@plt+0x119cc>
   22dc8:	ldr	r0, [fp, #-12]
   22dcc:	sub	r0, r0, #1
   22dd0:	movw	r1, #32767	; 0x7fff
   22dd4:	cmp	r1, r0
   22dd8:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22ddc:	b	22ea8 <__assert_fail@plt+0x119cc>
   22de0:	ldr	r0, [pc, #3772]	; 23ca4 <__assert_fail@plt+0x127c8>
   22de4:	ldr	r1, [fp, #-16]
   22de8:	udiv	r0, r0, r1
   22dec:	ldr	r1, [fp, #-12]
   22df0:	cmp	r0, r1
   22df4:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22df8:	b	22ea8 <__assert_fail@plt+0x119cc>
   22dfc:	ldr	r0, [fp, #-16]
   22e00:	cmp	r0, #0
   22e04:	bne	22e0c <__assert_fail@plt+0x11930>
   22e08:	b	22ea8 <__assert_fail@plt+0x119cc>
   22e0c:	ldr	r0, [fp, #-12]
   22e10:	cmp	r0, #0
   22e14:	bcs	22e78 <__assert_fail@plt+0x1199c>
   22e18:	ldr	r0, [fp, #-12]
   22e1c:	cmn	r0, #1
   22e20:	bne	22e5c <__assert_fail@plt+0x11980>
   22e24:	b	22e44 <__assert_fail@plt+0x11968>
   22e28:	ldr	r0, [pc, #3700]	; 23ca4 <__assert_fail@plt+0x127c8>
   22e2c:	ldr	r1, [fp, #-16]
   22e30:	add	r0, r1, r0
   22e34:	movw	r1, #0
   22e38:	cmp	r1, r0
   22e3c:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22e40:	b	22ea8 <__assert_fail@plt+0x119cc>
   22e44:	ldr	r0, [fp, #-16]
   22e48:	sub	r0, r0, #1
   22e4c:	movw	r1, #32767	; 0x7fff
   22e50:	cmp	r1, r0
   22e54:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22e58:	b	22ea8 <__assert_fail@plt+0x119cc>
   22e5c:	ldr	r0, [pc, #3648]	; 23ca4 <__assert_fail@plt+0x127c8>
   22e60:	ldr	r1, [fp, #-12]
   22e64:	udiv	r0, r0, r1
   22e68:	ldr	r1, [fp, #-16]
   22e6c:	cmp	r0, r1
   22e70:	bcc	22e90 <__assert_fail@plt+0x119b4>
   22e74:	b	22ea8 <__assert_fail@plt+0x119cc>
   22e78:	ldr	r0, [fp, #-16]
   22e7c:	movw	r1, #32767	; 0x7fff
   22e80:	udiv	r0, r1, r0
   22e84:	ldr	r1, [fp, #-12]
   22e88:	cmp	r0, r1
   22e8c:	bcs	22ea8 <__assert_fail@plt+0x119cc>
   22e90:	ldr	r0, [fp, #-12]
   22e94:	ldr	r1, [fp, #-16]
   22e98:	mul	r0, r0, r1
   22e9c:	sxth	r0, r0
   22ea0:	str	r0, [fp, #-20]	; 0xffffffec
   22ea4:	b	23c68 <__assert_fail@plt+0x1278c>
   22ea8:	ldr	r0, [fp, #-12]
   22eac:	ldr	r1, [fp, #-16]
   22eb0:	mul	r0, r0, r1
   22eb4:	sxth	r0, r0
   22eb8:	str	r0, [fp, #-20]	; 0xffffffec
   22ebc:	b	23c80 <__assert_fail@plt+0x127a4>
   22ec0:	ldr	r0, [fp, #-16]
   22ec4:	cmp	r0, #0
   22ec8:	bcs	22fd4 <__assert_fail@plt+0x11af8>
   22ecc:	ldr	r0, [fp, #-12]
   22ed0:	cmp	r0, #0
   22ed4:	bcs	22f5c <__assert_fail@plt+0x11a80>
   22ed8:	b	22ef8 <__assert_fail@plt+0x11a1c>
   22edc:	ldr	r0, [fp, #-12]
   22ee0:	ldr	r1, [fp, #-16]
   22ee4:	movw	r2, #65535	; 0xffff
   22ee8:	udiv	r1, r2, r1
   22eec:	cmp	r0, r1
   22ef0:	bcc	23070 <__assert_fail@plt+0x11b94>
   22ef4:	b	23088 <__assert_fail@plt+0x11bac>
   22ef8:	b	22f0c <__assert_fail@plt+0x11a30>
   22efc:	ldr	r0, [fp, #-16]
   22f00:	cmp	r0, #1
   22f04:	bcc	22f1c <__assert_fail@plt+0x11a40>
   22f08:	b	22f28 <__assert_fail@plt+0x11a4c>
   22f0c:	ldr	r0, [fp, #-16]
   22f10:	movw	r1, #0
   22f14:	cmp	r1, r0
   22f18:	bcs	22f28 <__assert_fail@plt+0x11a4c>
   22f1c:	movw	r0, #0
   22f20:	str	r0, [fp, #-36]	; 0xffffffdc
   22f24:	b	22f40 <__assert_fail@plt+0x11a64>
   22f28:	ldr	r0, [fp, #-16]
   22f2c:	movw	r1, #0
   22f30:	sub	r0, r1, r0
   22f34:	movw	r1, #65535	; 0xffff
   22f38:	udiv	r0, r1, r0
   22f3c:	str	r0, [fp, #-36]	; 0xffffffdc
   22f40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22f44:	ldr	r1, [fp, #-12]
   22f48:	mvn	r2, #0
   22f4c:	sub	r1, r2, r1
   22f50:	cmp	r0, r1
   22f54:	bls	23070 <__assert_fail@plt+0x11b94>
   22f58:	b	23088 <__assert_fail@plt+0x11bac>
   22f5c:	b	22f64 <__assert_fail@plt+0x11a88>
   22f60:	b	22f68 <__assert_fail@plt+0x11a8c>
   22f64:	b	22fb8 <__assert_fail@plt+0x11adc>
   22f68:	ldr	r0, [fp, #-16]
   22f6c:	cmn	r0, #1
   22f70:	bne	22fb8 <__assert_fail@plt+0x11adc>
   22f74:	b	22f90 <__assert_fail@plt+0x11ab4>
   22f78:	ldr	r0, [fp, #-12]
   22f7c:	add	r0, r0, #0
   22f80:	movw	r1, #0
   22f84:	cmp	r1, r0
   22f88:	bcc	23070 <__assert_fail@plt+0x11b94>
   22f8c:	b	23088 <__assert_fail@plt+0x11bac>
   22f90:	ldr	r0, [fp, #-12]
   22f94:	movw	r1, #0
   22f98:	cmp	r1, r0
   22f9c:	bcs	23088 <__assert_fail@plt+0x11bac>
   22fa0:	ldr	r0, [fp, #-12]
   22fa4:	sub	r0, r0, #1
   22fa8:	mvn	r1, #0
   22fac:	cmp	r1, r0
   22fb0:	bcc	23070 <__assert_fail@plt+0x11b94>
   22fb4:	b	23088 <__assert_fail@plt+0x11bac>
   22fb8:	ldr	r0, [fp, #-16]
   22fbc:	movw	r1, #0
   22fc0:	udiv	r0, r1, r0
   22fc4:	ldr	r1, [fp, #-12]
   22fc8:	cmp	r0, r1
   22fcc:	bcc	23070 <__assert_fail@plt+0x11b94>
   22fd0:	b	23088 <__assert_fail@plt+0x11bac>
   22fd4:	ldr	r0, [fp, #-16]
   22fd8:	cmp	r0, #0
   22fdc:	bne	22fe4 <__assert_fail@plt+0x11b08>
   22fe0:	b	23088 <__assert_fail@plt+0x11bac>
   22fe4:	ldr	r0, [fp, #-12]
   22fe8:	cmp	r0, #0
   22fec:	bcs	23058 <__assert_fail@plt+0x11b7c>
   22ff0:	b	22ff8 <__assert_fail@plt+0x11b1c>
   22ff4:	b	22ffc <__assert_fail@plt+0x11b20>
   22ff8:	b	2303c <__assert_fail@plt+0x11b60>
   22ffc:	ldr	r0, [fp, #-12]
   23000:	cmn	r0, #1
   23004:	bne	2303c <__assert_fail@plt+0x11b60>
   23008:	b	23024 <__assert_fail@plt+0x11b48>
   2300c:	ldr	r0, [fp, #-16]
   23010:	add	r0, r0, #0
   23014:	movw	r1, #0
   23018:	cmp	r1, r0
   2301c:	bcc	23070 <__assert_fail@plt+0x11b94>
   23020:	b	23088 <__assert_fail@plt+0x11bac>
   23024:	ldr	r0, [fp, #-16]
   23028:	sub	r0, r0, #1
   2302c:	mvn	r1, #0
   23030:	cmp	r1, r0
   23034:	bcc	23070 <__assert_fail@plt+0x11b94>
   23038:	b	23088 <__assert_fail@plt+0x11bac>
   2303c:	ldr	r0, [fp, #-12]
   23040:	movw	r1, #0
   23044:	udiv	r0, r1, r0
   23048:	ldr	r1, [fp, #-16]
   2304c:	cmp	r0, r1
   23050:	bcc	23070 <__assert_fail@plt+0x11b94>
   23054:	b	23088 <__assert_fail@plt+0x11bac>
   23058:	ldr	r0, [fp, #-16]
   2305c:	movw	r1, #65535	; 0xffff
   23060:	udiv	r0, r1, r0
   23064:	ldr	r1, [fp, #-12]
   23068:	cmp	r0, r1
   2306c:	bcs	23088 <__assert_fail@plt+0x11bac>
   23070:	ldr	r0, [fp, #-12]
   23074:	ldr	r1, [fp, #-16]
   23078:	mul	r0, r0, r1
   2307c:	uxth	r0, r0
   23080:	str	r0, [fp, #-20]	; 0xffffffec
   23084:	b	23c68 <__assert_fail@plt+0x1278c>
   23088:	ldr	r0, [fp, #-12]
   2308c:	ldr	r1, [fp, #-16]
   23090:	mul	r0, r0, r1
   23094:	uxth	r0, r0
   23098:	str	r0, [fp, #-20]	; 0xffffffec
   2309c:	b	23c80 <__assert_fail@plt+0x127a4>
   230a0:	b	230a4 <__assert_fail@plt+0x11bc8>
   230a4:	b	23268 <__assert_fail@plt+0x11d8c>
   230a8:	ldr	r0, [fp, #-16]
   230ac:	cmp	r0, #0
   230b0:	bcs	231b0 <__assert_fail@plt+0x11cd4>
   230b4:	ldr	r0, [fp, #-12]
   230b8:	cmp	r0, #0
   230bc:	bcs	23144 <__assert_fail@plt+0x11c68>
   230c0:	b	230e0 <__assert_fail@plt+0x11c04>
   230c4:	ldr	r0, [pc, #3024]	; 23c9c <__assert_fail@plt+0x127c0>
   230c8:	ldr	r1, [fp, #-12]
   230cc:	ldr	r2, [fp, #-16]
   230d0:	udiv	r0, r0, r2
   230d4:	cmp	r1, r0
   230d8:	bcc	23240 <__assert_fail@plt+0x11d64>
   230dc:	b	23254 <__assert_fail@plt+0x11d78>
   230e0:	b	230f4 <__assert_fail@plt+0x11c18>
   230e4:	ldr	r0, [fp, #-16]
   230e8:	cmp	r0, #1
   230ec:	bcc	23104 <__assert_fail@plt+0x11c28>
   230f0:	b	23110 <__assert_fail@plt+0x11c34>
   230f4:	ldr	r0, [fp, #-16]
   230f8:	movw	r1, #0
   230fc:	cmp	r1, r0
   23100:	bcs	23110 <__assert_fail@plt+0x11c34>
   23104:	movw	r0, #0
   23108:	str	r0, [fp, #-40]	; 0xffffffd8
   2310c:	b	23128 <__assert_fail@plt+0x11c4c>
   23110:	ldr	r0, [pc, #2948]	; 23c9c <__assert_fail@plt+0x127c0>
   23114:	ldr	r1, [fp, #-16]
   23118:	movw	r2, #0
   2311c:	sub	r1, r2, r1
   23120:	udiv	r0, r0, r1
   23124:	str	r0, [fp, #-40]	; 0xffffffd8
   23128:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2312c:	ldr	r1, [fp, #-12]
   23130:	mvn	r2, #0
   23134:	sub	r1, r2, r1
   23138:	cmp	r0, r1
   2313c:	bls	23240 <__assert_fail@plt+0x11d64>
   23140:	b	23254 <__assert_fail@plt+0x11d78>
   23144:	ldr	r0, [fp, #-16]
   23148:	cmn	r0, #1
   2314c:	bne	23194 <__assert_fail@plt+0x11cb8>
   23150:	b	2316c <__assert_fail@plt+0x11c90>
   23154:	ldr	r0, [fp, #-12]
   23158:	add	r0, r0, #-2147483648	; 0x80000000
   2315c:	movw	r1, #0
   23160:	cmp	r1, r0
   23164:	bcc	23240 <__assert_fail@plt+0x11d64>
   23168:	b	23254 <__assert_fail@plt+0x11d78>
   2316c:	ldr	r0, [fp, #-12]
   23170:	movw	r1, #0
   23174:	cmp	r1, r0
   23178:	bcs	23254 <__assert_fail@plt+0x11d78>
   2317c:	ldr	r0, [pc, #2840]	; 23c9c <__assert_fail@plt+0x127c0>
   23180:	ldr	r1, [fp, #-12]
   23184:	sub	r1, r1, #1
   23188:	cmp	r0, r1
   2318c:	bcc	23240 <__assert_fail@plt+0x11d64>
   23190:	b	23254 <__assert_fail@plt+0x11d78>
   23194:	ldr	r0, [pc, #2820]	; 23ca0 <__assert_fail@plt+0x127c4>
   23198:	ldr	r1, [fp, #-16]
   2319c:	udiv	r0, r0, r1
   231a0:	ldr	r1, [fp, #-12]
   231a4:	cmp	r0, r1
   231a8:	bcc	23240 <__assert_fail@plt+0x11d64>
   231ac:	b	23254 <__assert_fail@plt+0x11d78>
   231b0:	ldr	r0, [fp, #-16]
   231b4:	cmp	r0, #0
   231b8:	bne	231c0 <__assert_fail@plt+0x11ce4>
   231bc:	b	23254 <__assert_fail@plt+0x11d78>
   231c0:	ldr	r0, [fp, #-12]
   231c4:	cmp	r0, #0
   231c8:	bcs	23228 <__assert_fail@plt+0x11d4c>
   231cc:	ldr	r0, [fp, #-12]
   231d0:	cmn	r0, #1
   231d4:	bne	2320c <__assert_fail@plt+0x11d30>
   231d8:	b	231f4 <__assert_fail@plt+0x11d18>
   231dc:	ldr	r0, [fp, #-16]
   231e0:	add	r0, r0, #-2147483648	; 0x80000000
   231e4:	movw	r1, #0
   231e8:	cmp	r1, r0
   231ec:	bcc	23240 <__assert_fail@plt+0x11d64>
   231f0:	b	23254 <__assert_fail@plt+0x11d78>
   231f4:	ldr	r0, [pc, #2720]	; 23c9c <__assert_fail@plt+0x127c0>
   231f8:	ldr	r1, [fp, #-16]
   231fc:	sub	r1, r1, #1
   23200:	cmp	r0, r1
   23204:	bcc	23240 <__assert_fail@plt+0x11d64>
   23208:	b	23254 <__assert_fail@plt+0x11d78>
   2320c:	ldr	r0, [pc, #2700]	; 23ca0 <__assert_fail@plt+0x127c4>
   23210:	ldr	r1, [fp, #-12]
   23214:	udiv	r0, r0, r1
   23218:	ldr	r1, [fp, #-16]
   2321c:	cmp	r0, r1
   23220:	bcc	23240 <__assert_fail@plt+0x11d64>
   23224:	b	23254 <__assert_fail@plt+0x11d78>
   23228:	ldr	r0, [pc, #2668]	; 23c9c <__assert_fail@plt+0x127c0>
   2322c:	ldr	r1, [fp, #-16]
   23230:	udiv	r0, r0, r1
   23234:	ldr	r1, [fp, #-12]
   23238:	cmp	r0, r1
   2323c:	bcs	23254 <__assert_fail@plt+0x11d78>
   23240:	ldr	r0, [fp, #-12]
   23244:	ldr	r1, [fp, #-16]
   23248:	mul	r0, r0, r1
   2324c:	str	r0, [fp, #-20]	; 0xffffffec
   23250:	b	23c68 <__assert_fail@plt+0x1278c>
   23254:	ldr	r0, [fp, #-12]
   23258:	ldr	r1, [fp, #-16]
   2325c:	mul	r0, r0, r1
   23260:	str	r0, [fp, #-20]	; 0xffffffec
   23264:	b	23c80 <__assert_fail@plt+0x127a4>
   23268:	ldr	r0, [fp, #-16]
   2326c:	cmp	r0, #0
   23270:	bcs	2337c <__assert_fail@plt+0x11ea0>
   23274:	ldr	r0, [fp, #-12]
   23278:	cmp	r0, #0
   2327c:	bcs	23304 <__assert_fail@plt+0x11e28>
   23280:	b	232a0 <__assert_fail@plt+0x11dc4>
   23284:	ldr	r0, [fp, #-12]
   23288:	ldr	r1, [fp, #-16]
   2328c:	mvn	r2, #0
   23290:	udiv	r1, r2, r1
   23294:	cmp	r0, r1
   23298:	bcc	23418 <__assert_fail@plt+0x11f3c>
   2329c:	b	2342c <__assert_fail@plt+0x11f50>
   232a0:	b	232b4 <__assert_fail@plt+0x11dd8>
   232a4:	ldr	r0, [fp, #-16]
   232a8:	cmp	r0, #1
   232ac:	bcc	232c4 <__assert_fail@plt+0x11de8>
   232b0:	b	232d0 <__assert_fail@plt+0x11df4>
   232b4:	ldr	r0, [fp, #-16]
   232b8:	movw	r1, #0
   232bc:	cmp	r1, r0
   232c0:	bcs	232d0 <__assert_fail@plt+0x11df4>
   232c4:	movw	r0, #1
   232c8:	str	r0, [fp, #-44]	; 0xffffffd4
   232cc:	b	232e8 <__assert_fail@plt+0x11e0c>
   232d0:	ldr	r0, [fp, #-16]
   232d4:	movw	r1, #0
   232d8:	sub	r0, r1, r0
   232dc:	mvn	r1, #0
   232e0:	udiv	r0, r1, r0
   232e4:	str	r0, [fp, #-44]	; 0xffffffd4
   232e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   232ec:	ldr	r1, [fp, #-12]
   232f0:	mvn	r2, #0
   232f4:	sub	r1, r2, r1
   232f8:	cmp	r0, r1
   232fc:	bls	23418 <__assert_fail@plt+0x11f3c>
   23300:	b	2342c <__assert_fail@plt+0x11f50>
   23304:	b	2330c <__assert_fail@plt+0x11e30>
   23308:	b	23310 <__assert_fail@plt+0x11e34>
   2330c:	b	23360 <__assert_fail@plt+0x11e84>
   23310:	ldr	r0, [fp, #-16]
   23314:	cmn	r0, #1
   23318:	bne	23360 <__assert_fail@plt+0x11e84>
   2331c:	b	23338 <__assert_fail@plt+0x11e5c>
   23320:	ldr	r0, [fp, #-12]
   23324:	add	r0, r0, #0
   23328:	movw	r1, #0
   2332c:	cmp	r1, r0
   23330:	bcc	23418 <__assert_fail@plt+0x11f3c>
   23334:	b	2342c <__assert_fail@plt+0x11f50>
   23338:	ldr	r0, [fp, #-12]
   2333c:	movw	r1, #0
   23340:	cmp	r1, r0
   23344:	bcs	2342c <__assert_fail@plt+0x11f50>
   23348:	ldr	r0, [fp, #-12]
   2334c:	sub	r0, r0, #1
   23350:	mvn	r1, #0
   23354:	cmp	r1, r0
   23358:	bcc	23418 <__assert_fail@plt+0x11f3c>
   2335c:	b	2342c <__assert_fail@plt+0x11f50>
   23360:	ldr	r0, [fp, #-16]
   23364:	movw	r1, #0
   23368:	udiv	r0, r1, r0
   2336c:	ldr	r1, [fp, #-12]
   23370:	cmp	r0, r1
   23374:	bcc	23418 <__assert_fail@plt+0x11f3c>
   23378:	b	2342c <__assert_fail@plt+0x11f50>
   2337c:	ldr	r0, [fp, #-16]
   23380:	cmp	r0, #0
   23384:	bne	2338c <__assert_fail@plt+0x11eb0>
   23388:	b	2342c <__assert_fail@plt+0x11f50>
   2338c:	ldr	r0, [fp, #-12]
   23390:	cmp	r0, #0
   23394:	bcs	23400 <__assert_fail@plt+0x11f24>
   23398:	b	233a0 <__assert_fail@plt+0x11ec4>
   2339c:	b	233a4 <__assert_fail@plt+0x11ec8>
   233a0:	b	233e4 <__assert_fail@plt+0x11f08>
   233a4:	ldr	r0, [fp, #-12]
   233a8:	cmn	r0, #1
   233ac:	bne	233e4 <__assert_fail@plt+0x11f08>
   233b0:	b	233cc <__assert_fail@plt+0x11ef0>
   233b4:	ldr	r0, [fp, #-16]
   233b8:	add	r0, r0, #0
   233bc:	movw	r1, #0
   233c0:	cmp	r1, r0
   233c4:	bcc	23418 <__assert_fail@plt+0x11f3c>
   233c8:	b	2342c <__assert_fail@plt+0x11f50>
   233cc:	ldr	r0, [fp, #-16]
   233d0:	sub	r0, r0, #1
   233d4:	mvn	r1, #0
   233d8:	cmp	r1, r0
   233dc:	bcc	23418 <__assert_fail@plt+0x11f3c>
   233e0:	b	2342c <__assert_fail@plt+0x11f50>
   233e4:	ldr	r0, [fp, #-12]
   233e8:	movw	r1, #0
   233ec:	udiv	r0, r1, r0
   233f0:	ldr	r1, [fp, #-16]
   233f4:	cmp	r0, r1
   233f8:	bcc	23418 <__assert_fail@plt+0x11f3c>
   233fc:	b	2342c <__assert_fail@plt+0x11f50>
   23400:	ldr	r0, [fp, #-16]
   23404:	mvn	r1, #0
   23408:	udiv	r0, r1, r0
   2340c:	ldr	r1, [fp, #-12]
   23410:	cmp	r0, r1
   23414:	bcs	2342c <__assert_fail@plt+0x11f50>
   23418:	ldr	r0, [fp, #-12]
   2341c:	ldr	r1, [fp, #-16]
   23420:	mul	r0, r0, r1
   23424:	str	r0, [fp, #-20]	; 0xffffffec
   23428:	b	23c68 <__assert_fail@plt+0x1278c>
   2342c:	ldr	r0, [fp, #-12]
   23430:	ldr	r1, [fp, #-16]
   23434:	mul	r0, r0, r1
   23438:	str	r0, [fp, #-20]	; 0xffffffec
   2343c:	b	23c80 <__assert_fail@plt+0x127a4>
   23440:	b	23444 <__assert_fail@plt+0x11f68>
   23444:	b	23608 <__assert_fail@plt+0x1212c>
   23448:	ldr	r0, [fp, #-16]
   2344c:	cmp	r0, #0
   23450:	bcs	23550 <__assert_fail@plt+0x12074>
   23454:	ldr	r0, [fp, #-12]
   23458:	cmp	r0, #0
   2345c:	bcs	234e4 <__assert_fail@plt+0x12008>
   23460:	b	23480 <__assert_fail@plt+0x11fa4>
   23464:	ldr	r0, [pc, #2096]	; 23c9c <__assert_fail@plt+0x127c0>
   23468:	ldr	r1, [fp, #-12]
   2346c:	ldr	r2, [fp, #-16]
   23470:	udiv	r0, r0, r2
   23474:	cmp	r1, r0
   23478:	bcc	235e0 <__assert_fail@plt+0x12104>
   2347c:	b	235f4 <__assert_fail@plt+0x12118>
   23480:	b	23494 <__assert_fail@plt+0x11fb8>
   23484:	ldr	r0, [fp, #-16]
   23488:	cmp	r0, #1
   2348c:	bcc	234a4 <__assert_fail@plt+0x11fc8>
   23490:	b	234b0 <__assert_fail@plt+0x11fd4>
   23494:	ldr	r0, [fp, #-16]
   23498:	movw	r1, #0
   2349c:	cmp	r1, r0
   234a0:	bcs	234b0 <__assert_fail@plt+0x11fd4>
   234a4:	movw	r0, #0
   234a8:	str	r0, [fp, #-48]	; 0xffffffd0
   234ac:	b	234c8 <__assert_fail@plt+0x11fec>
   234b0:	ldr	r0, [pc, #2020]	; 23c9c <__assert_fail@plt+0x127c0>
   234b4:	ldr	r1, [fp, #-16]
   234b8:	movw	r2, #0
   234bc:	sub	r1, r2, r1
   234c0:	udiv	r0, r0, r1
   234c4:	str	r0, [fp, #-48]	; 0xffffffd0
   234c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   234cc:	ldr	r1, [fp, #-12]
   234d0:	mvn	r2, #0
   234d4:	sub	r1, r2, r1
   234d8:	cmp	r0, r1
   234dc:	bls	235e0 <__assert_fail@plt+0x12104>
   234e0:	b	235f4 <__assert_fail@plt+0x12118>
   234e4:	ldr	r0, [fp, #-16]
   234e8:	cmn	r0, #1
   234ec:	bne	23534 <__assert_fail@plt+0x12058>
   234f0:	b	2350c <__assert_fail@plt+0x12030>
   234f4:	ldr	r0, [fp, #-12]
   234f8:	add	r0, r0, #-2147483648	; 0x80000000
   234fc:	movw	r1, #0
   23500:	cmp	r1, r0
   23504:	bcc	235e0 <__assert_fail@plt+0x12104>
   23508:	b	235f4 <__assert_fail@plt+0x12118>
   2350c:	ldr	r0, [fp, #-12]
   23510:	movw	r1, #0
   23514:	cmp	r1, r0
   23518:	bcs	235f4 <__assert_fail@plt+0x12118>
   2351c:	ldr	r0, [pc, #1912]	; 23c9c <__assert_fail@plt+0x127c0>
   23520:	ldr	r1, [fp, #-12]
   23524:	sub	r1, r1, #1
   23528:	cmp	r0, r1
   2352c:	bcc	235e0 <__assert_fail@plt+0x12104>
   23530:	b	235f4 <__assert_fail@plt+0x12118>
   23534:	ldr	r0, [pc, #1892]	; 23ca0 <__assert_fail@plt+0x127c4>
   23538:	ldr	r1, [fp, #-16]
   2353c:	udiv	r0, r0, r1
   23540:	ldr	r1, [fp, #-12]
   23544:	cmp	r0, r1
   23548:	bcc	235e0 <__assert_fail@plt+0x12104>
   2354c:	b	235f4 <__assert_fail@plt+0x12118>
   23550:	ldr	r0, [fp, #-16]
   23554:	cmp	r0, #0
   23558:	bne	23560 <__assert_fail@plt+0x12084>
   2355c:	b	235f4 <__assert_fail@plt+0x12118>
   23560:	ldr	r0, [fp, #-12]
   23564:	cmp	r0, #0
   23568:	bcs	235c8 <__assert_fail@plt+0x120ec>
   2356c:	ldr	r0, [fp, #-12]
   23570:	cmn	r0, #1
   23574:	bne	235ac <__assert_fail@plt+0x120d0>
   23578:	b	23594 <__assert_fail@plt+0x120b8>
   2357c:	ldr	r0, [fp, #-16]
   23580:	add	r0, r0, #-2147483648	; 0x80000000
   23584:	movw	r1, #0
   23588:	cmp	r1, r0
   2358c:	bcc	235e0 <__assert_fail@plt+0x12104>
   23590:	b	235f4 <__assert_fail@plt+0x12118>
   23594:	ldr	r0, [pc, #1792]	; 23c9c <__assert_fail@plt+0x127c0>
   23598:	ldr	r1, [fp, #-16]
   2359c:	sub	r1, r1, #1
   235a0:	cmp	r0, r1
   235a4:	bcc	235e0 <__assert_fail@plt+0x12104>
   235a8:	b	235f4 <__assert_fail@plt+0x12118>
   235ac:	ldr	r0, [pc, #1772]	; 23ca0 <__assert_fail@plt+0x127c4>
   235b0:	ldr	r1, [fp, #-12]
   235b4:	udiv	r0, r0, r1
   235b8:	ldr	r1, [fp, #-16]
   235bc:	cmp	r0, r1
   235c0:	bcc	235e0 <__assert_fail@plt+0x12104>
   235c4:	b	235f4 <__assert_fail@plt+0x12118>
   235c8:	ldr	r0, [pc, #1740]	; 23c9c <__assert_fail@plt+0x127c0>
   235cc:	ldr	r1, [fp, #-16]
   235d0:	udiv	r0, r0, r1
   235d4:	ldr	r1, [fp, #-12]
   235d8:	cmp	r0, r1
   235dc:	bcs	235f4 <__assert_fail@plt+0x12118>
   235e0:	ldr	r0, [fp, #-12]
   235e4:	ldr	r1, [fp, #-16]
   235e8:	mul	r0, r0, r1
   235ec:	str	r0, [fp, #-20]	; 0xffffffec
   235f0:	b	23c68 <__assert_fail@plt+0x1278c>
   235f4:	ldr	r0, [fp, #-12]
   235f8:	ldr	r1, [fp, #-16]
   235fc:	mul	r0, r0, r1
   23600:	str	r0, [fp, #-20]	; 0xffffffec
   23604:	b	23c80 <__assert_fail@plt+0x127a4>
   23608:	ldr	r0, [fp, #-16]
   2360c:	cmp	r0, #0
   23610:	bcs	2371c <__assert_fail@plt+0x12240>
   23614:	ldr	r0, [fp, #-12]
   23618:	cmp	r0, #0
   2361c:	bcs	236a4 <__assert_fail@plt+0x121c8>
   23620:	b	23640 <__assert_fail@plt+0x12164>
   23624:	ldr	r0, [fp, #-12]
   23628:	ldr	r1, [fp, #-16]
   2362c:	mvn	r2, #0
   23630:	udiv	r1, r2, r1
   23634:	cmp	r0, r1
   23638:	bcc	237b8 <__assert_fail@plt+0x122dc>
   2363c:	b	237cc <__assert_fail@plt+0x122f0>
   23640:	b	23654 <__assert_fail@plt+0x12178>
   23644:	ldr	r0, [fp, #-16]
   23648:	cmp	r0, #1
   2364c:	bcc	23664 <__assert_fail@plt+0x12188>
   23650:	b	23670 <__assert_fail@plt+0x12194>
   23654:	ldr	r0, [fp, #-16]
   23658:	movw	r1, #0
   2365c:	cmp	r1, r0
   23660:	bcs	23670 <__assert_fail@plt+0x12194>
   23664:	movw	r0, #1
   23668:	str	r0, [fp, #-52]	; 0xffffffcc
   2366c:	b	23688 <__assert_fail@plt+0x121ac>
   23670:	ldr	r0, [fp, #-16]
   23674:	movw	r1, #0
   23678:	sub	r0, r1, r0
   2367c:	mvn	r1, #0
   23680:	udiv	r0, r1, r0
   23684:	str	r0, [fp, #-52]	; 0xffffffcc
   23688:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2368c:	ldr	r1, [fp, #-12]
   23690:	mvn	r2, #0
   23694:	sub	r1, r2, r1
   23698:	cmp	r0, r1
   2369c:	bls	237b8 <__assert_fail@plt+0x122dc>
   236a0:	b	237cc <__assert_fail@plt+0x122f0>
   236a4:	b	236ac <__assert_fail@plt+0x121d0>
   236a8:	b	236b0 <__assert_fail@plt+0x121d4>
   236ac:	b	23700 <__assert_fail@plt+0x12224>
   236b0:	ldr	r0, [fp, #-16]
   236b4:	cmn	r0, #1
   236b8:	bne	23700 <__assert_fail@plt+0x12224>
   236bc:	b	236d8 <__assert_fail@plt+0x121fc>
   236c0:	ldr	r0, [fp, #-12]
   236c4:	add	r0, r0, #0
   236c8:	movw	r1, #0
   236cc:	cmp	r1, r0
   236d0:	bcc	237b8 <__assert_fail@plt+0x122dc>
   236d4:	b	237cc <__assert_fail@plt+0x122f0>
   236d8:	ldr	r0, [fp, #-12]
   236dc:	movw	r1, #0
   236e0:	cmp	r1, r0
   236e4:	bcs	237cc <__assert_fail@plt+0x122f0>
   236e8:	ldr	r0, [fp, #-12]
   236ec:	sub	r0, r0, #1
   236f0:	mvn	r1, #0
   236f4:	cmp	r1, r0
   236f8:	bcc	237b8 <__assert_fail@plt+0x122dc>
   236fc:	b	237cc <__assert_fail@plt+0x122f0>
   23700:	ldr	r0, [fp, #-16]
   23704:	movw	r1, #0
   23708:	udiv	r0, r1, r0
   2370c:	ldr	r1, [fp, #-12]
   23710:	cmp	r0, r1
   23714:	bcc	237b8 <__assert_fail@plt+0x122dc>
   23718:	b	237cc <__assert_fail@plt+0x122f0>
   2371c:	ldr	r0, [fp, #-16]
   23720:	cmp	r0, #0
   23724:	bne	2372c <__assert_fail@plt+0x12250>
   23728:	b	237cc <__assert_fail@plt+0x122f0>
   2372c:	ldr	r0, [fp, #-12]
   23730:	cmp	r0, #0
   23734:	bcs	237a0 <__assert_fail@plt+0x122c4>
   23738:	b	23740 <__assert_fail@plt+0x12264>
   2373c:	b	23744 <__assert_fail@plt+0x12268>
   23740:	b	23784 <__assert_fail@plt+0x122a8>
   23744:	ldr	r0, [fp, #-12]
   23748:	cmn	r0, #1
   2374c:	bne	23784 <__assert_fail@plt+0x122a8>
   23750:	b	2376c <__assert_fail@plt+0x12290>
   23754:	ldr	r0, [fp, #-16]
   23758:	add	r0, r0, #0
   2375c:	movw	r1, #0
   23760:	cmp	r1, r0
   23764:	bcc	237b8 <__assert_fail@plt+0x122dc>
   23768:	b	237cc <__assert_fail@plt+0x122f0>
   2376c:	ldr	r0, [fp, #-16]
   23770:	sub	r0, r0, #1
   23774:	mvn	r1, #0
   23778:	cmp	r1, r0
   2377c:	bcc	237b8 <__assert_fail@plt+0x122dc>
   23780:	b	237cc <__assert_fail@plt+0x122f0>
   23784:	ldr	r0, [fp, #-12]
   23788:	movw	r1, #0
   2378c:	udiv	r0, r1, r0
   23790:	ldr	r1, [fp, #-16]
   23794:	cmp	r0, r1
   23798:	bcc	237b8 <__assert_fail@plt+0x122dc>
   2379c:	b	237cc <__assert_fail@plt+0x122f0>
   237a0:	ldr	r0, [fp, #-16]
   237a4:	mvn	r1, #0
   237a8:	udiv	r0, r1, r0
   237ac:	ldr	r1, [fp, #-12]
   237b0:	cmp	r0, r1
   237b4:	bcs	237cc <__assert_fail@plt+0x122f0>
   237b8:	ldr	r0, [fp, #-12]
   237bc:	ldr	r1, [fp, #-16]
   237c0:	mul	r0, r0, r1
   237c4:	str	r0, [fp, #-20]	; 0xffffffec
   237c8:	b	23c68 <__assert_fail@plt+0x1278c>
   237cc:	ldr	r0, [fp, #-12]
   237d0:	ldr	r1, [fp, #-16]
   237d4:	mul	r0, r0, r1
   237d8:	str	r0, [fp, #-20]	; 0xffffffec
   237dc:	b	23c80 <__assert_fail@plt+0x127a4>
   237e0:	b	23a34 <__assert_fail@plt+0x12558>
   237e4:	ldr	r0, [fp, #-16]
   237e8:	cmp	r0, #0
   237ec:	bcs	2394c <__assert_fail@plt+0x12470>
   237f0:	ldr	r0, [fp, #-12]
   237f4:	cmp	r0, #0
   237f8:	bcs	238c8 <__assert_fail@plt+0x123ec>
   237fc:	b	23800 <__assert_fail@plt+0x12324>
   23800:	ldr	r0, [fp, #-12]
   23804:	ldr	r2, [fp, #-16]
   23808:	mvn	r1, #0
   2380c:	mvn	r3, #-2147483648	; 0x80000000
   23810:	mov	ip, #0
   23814:	str	r0, [fp, #-56]	; 0xffffffc8
   23818:	mov	r0, r1
   2381c:	mov	r1, r3
   23820:	mov	r3, ip
   23824:	bl	245dc <__assert_fail@plt+0x13100>
   23828:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2382c:	subs	r0, r2, r0
   23830:	rscs	r1, r1, #0
   23834:	str	r0, [fp, #-60]	; 0xffffffc4
   23838:	str	r1, [fp, #-64]	; 0xffffffc0
   2383c:	blt	23a0c <__assert_fail@plt+0x12530>
   23840:	b	23a20 <__assert_fail@plt+0x12544>
   23844:	b	23858 <__assert_fail@plt+0x1237c>
   23848:	ldr	r0, [fp, #-16]
   2384c:	cmp	r0, #1
   23850:	bcc	23868 <__assert_fail@plt+0x1238c>
   23854:	b	2387c <__assert_fail@plt+0x123a0>
   23858:	ldr	r0, [fp, #-16]
   2385c:	movw	r1, #0
   23860:	cmp	r1, r0
   23864:	bcs	2387c <__assert_fail@plt+0x123a0>
   23868:	mov	r0, #0
   2386c:	mvn	r1, #0
   23870:	str	r1, [fp, #-68]	; 0xffffffbc
   23874:	str	r0, [fp, #-72]	; 0xffffffb8
   23878:	b	238a0 <__assert_fail@plt+0x123c4>
   2387c:	ldr	r0, [fp, #-16]
   23880:	rsb	r2, r0, #0
   23884:	mvn	r0, #0
   23888:	mvn	r1, #-2147483648	; 0x80000000
   2388c:	mov	r3, #0
   23890:	bl	245dc <__assert_fail@plt+0x13100>
   23894:	str	r0, [fp, #-68]	; 0xffffffbc
   23898:	str	r1, [fp, #-72]	; 0xffffffb8
   2389c:	b	238a0 <__assert_fail@plt+0x123c4>
   238a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   238a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   238a8:	ldr	r2, [fp, #-12]
   238ac:	mvn	r2, r2
   238b0:	subs	r1, r2, r1
   238b4:	rscs	r0, r0, #0
   238b8:	str	r1, [fp, #-76]	; 0xffffffb4
   238bc:	str	r0, [fp, #-80]	; 0xffffffb0
   238c0:	bge	23a0c <__assert_fail@plt+0x12530>
   238c4:	b	23a20 <__assert_fail@plt+0x12544>
   238c8:	ldr	r0, [fp, #-16]
   238cc:	cmn	r0, #1
   238d0:	bne	23918 <__assert_fail@plt+0x1243c>
   238d4:	b	238f8 <__assert_fail@plt+0x1241c>
   238d8:	ldr	r0, [fp, #-12]
   238dc:	rsbs	r0, r0, #0
   238e0:	mov	r1, #0
   238e4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   238e8:	str	r0, [fp, #-84]	; 0xffffffac
   238ec:	str	r1, [sp, #88]	; 0x58
   238f0:	blt	23a0c <__assert_fail@plt+0x12530>
   238f4:	b	23a20 <__assert_fail@plt+0x12544>
   238f8:	ldr	r0, [fp, #-12]
   238fc:	movw	r1, #0
   23900:	cmp	r1, r0
   23904:	bcs	23a20 <__assert_fail@plt+0x12544>
   23908:	mov	r0, #0
   2390c:	cmp	r0, #0
   23910:	bne	23a0c <__assert_fail@plt+0x12530>
   23914:	b	23a20 <__assert_fail@plt+0x12544>
   23918:	ldr	r2, [fp, #-16]
   2391c:	mov	r1, #-2147483648	; 0x80000000
   23920:	mov	r0, #0
   23924:	str	r0, [sp, #84]	; 0x54
   23928:	ldr	r3, [sp, #84]	; 0x54
   2392c:	bl	24508 <__assert_fail@plt+0x1302c>
   23930:	ldr	r2, [fp, #-12]
   23934:	subs	r0, r0, r2
   23938:	sbcs	r1, r1, #0
   2393c:	str	r0, [sp, #80]	; 0x50
   23940:	str	r1, [sp, #76]	; 0x4c
   23944:	blt	23a0c <__assert_fail@plt+0x12530>
   23948:	b	23a20 <__assert_fail@plt+0x12544>
   2394c:	ldr	r0, [fp, #-16]
   23950:	cmp	r0, #0
   23954:	bne	2395c <__assert_fail@plt+0x12480>
   23958:	b	23a20 <__assert_fail@plt+0x12544>
   2395c:	ldr	r0, [fp, #-12]
   23960:	cmp	r0, #0
   23964:	bcs	239dc <__assert_fail@plt+0x12500>
   23968:	ldr	r0, [fp, #-12]
   2396c:	cmn	r0, #1
   23970:	bne	239a8 <__assert_fail@plt+0x124cc>
   23974:	b	23998 <__assert_fail@plt+0x124bc>
   23978:	ldr	r0, [fp, #-16]
   2397c:	rsbs	r0, r0, #0
   23980:	mov	r1, #0
   23984:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23988:	str	r0, [sp, #72]	; 0x48
   2398c:	str	r1, [sp, #68]	; 0x44
   23990:	blt	23a0c <__assert_fail@plt+0x12530>
   23994:	b	23a20 <__assert_fail@plt+0x12544>
   23998:	mov	r0, #0
   2399c:	cmp	r0, #0
   239a0:	bne	23a0c <__assert_fail@plt+0x12530>
   239a4:	b	23a20 <__assert_fail@plt+0x12544>
   239a8:	ldr	r2, [fp, #-12]
   239ac:	mov	r1, #-2147483648	; 0x80000000
   239b0:	mov	r0, #0
   239b4:	str	r0, [sp, #64]	; 0x40
   239b8:	ldr	r3, [sp, #64]	; 0x40
   239bc:	bl	24508 <__assert_fail@plt+0x1302c>
   239c0:	ldr	r2, [fp, #-16]
   239c4:	subs	r0, r0, r2
   239c8:	sbcs	r1, r1, #0
   239cc:	str	r0, [sp, #60]	; 0x3c
   239d0:	str	r1, [sp, #56]	; 0x38
   239d4:	blt	23a0c <__assert_fail@plt+0x12530>
   239d8:	b	23a20 <__assert_fail@plt+0x12544>
   239dc:	ldr	r2, [fp, #-16]
   239e0:	mvn	r0, #0
   239e4:	mvn	r1, #-2147483648	; 0x80000000
   239e8:	mov	r3, #0
   239ec:	bl	245dc <__assert_fail@plt+0x13100>
   239f0:	ldr	r2, [fp, #-12]
   239f4:	subs	r0, r0, r2
   239f8:	sbcs	r1, r1, #0
   239fc:	str	r0, [sp, #52]	; 0x34
   23a00:	str	r1, [sp, #48]	; 0x30
   23a04:	bge	23a20 <__assert_fail@plt+0x12544>
   23a08:	b	23a0c <__assert_fail@plt+0x12530>
   23a0c:	ldr	r0, [fp, #-12]
   23a10:	ldr	r1, [fp, #-16]
   23a14:	mul	r0, r0, r1
   23a18:	str	r0, [fp, #-20]	; 0xffffffec
   23a1c:	b	23c68 <__assert_fail@plt+0x1278c>
   23a20:	ldr	r0, [fp, #-12]
   23a24:	ldr	r1, [fp, #-16]
   23a28:	mul	r0, r0, r1
   23a2c:	str	r0, [fp, #-20]	; 0xffffffec
   23a30:	b	23c80 <__assert_fail@plt+0x127a4>
   23a34:	ldr	r0, [fp, #-16]
   23a38:	cmp	r0, #0
   23a3c:	bcs	23b88 <__assert_fail@plt+0x126ac>
   23a40:	ldr	r0, [fp, #-12]
   23a44:	cmp	r0, #0
   23a48:	bcs	23b10 <__assert_fail@plt+0x12634>
   23a4c:	b	23a88 <__assert_fail@plt+0x125ac>
   23a50:	ldr	r0, [fp, #-12]
   23a54:	ldr	r2, [fp, #-16]
   23a58:	mvn	r1, #0
   23a5c:	mov	r3, #0
   23a60:	str	r0, [sp, #44]	; 0x2c
   23a64:	mov	r0, r1
   23a68:	bl	245dc <__assert_fail@plt+0x13100>
   23a6c:	ldr	r2, [sp, #44]	; 0x2c
   23a70:	subs	r0, r2, r0
   23a74:	rscs	r1, r1, #0
   23a78:	str	r0, [sp, #40]	; 0x28
   23a7c:	str	r1, [sp, #36]	; 0x24
   23a80:	bcc	23c40 <__assert_fail@plt+0x12764>
   23a84:	b	23c54 <__assert_fail@plt+0x12778>
   23a88:	b	23a9c <__assert_fail@plt+0x125c0>
   23a8c:	ldr	r0, [fp, #-16]
   23a90:	cmp	r0, #1
   23a94:	bcc	23aac <__assert_fail@plt+0x125d0>
   23a98:	b	23ac0 <__assert_fail@plt+0x125e4>
   23a9c:	ldr	r0, [fp, #-16]
   23aa0:	movw	r1, #0
   23aa4:	cmp	r1, r0
   23aa8:	bcs	23ac0 <__assert_fail@plt+0x125e4>
   23aac:	mov	r0, #1
   23ab0:	mvn	r1, #0
   23ab4:	str	r1, [sp, #32]
   23ab8:	str	r0, [sp, #28]
   23abc:	b	23ae8 <__assert_fail@plt+0x1260c>
   23ac0:	ldr	r0, [fp, #-16]
   23ac4:	rsb	r2, r0, #0
   23ac8:	mvn	r0, #0
   23acc:	mov	r3, #0
   23ad0:	str	r0, [sp, #24]
   23ad4:	ldr	r1, [sp, #24]
   23ad8:	bl	245dc <__assert_fail@plt+0x13100>
   23adc:	str	r0, [sp, #32]
   23ae0:	str	r1, [sp, #28]
   23ae4:	b	23ae8 <__assert_fail@plt+0x1260c>
   23ae8:	ldr	r0, [sp, #28]
   23aec:	ldr	r1, [sp, #32]
   23af0:	ldr	r2, [fp, #-12]
   23af4:	mvn	r2, r2
   23af8:	subs	r1, r2, r1
   23afc:	rscs	r0, r0, #0
   23b00:	str	r1, [sp, #20]
   23b04:	str	r0, [sp, #16]
   23b08:	bcs	23c40 <__assert_fail@plt+0x12764>
   23b0c:	b	23c54 <__assert_fail@plt+0x12778>
   23b10:	b	23b18 <__assert_fail@plt+0x1263c>
   23b14:	b	23b1c <__assert_fail@plt+0x12640>
   23b18:	b	23b6c <__assert_fail@plt+0x12690>
   23b1c:	ldr	r0, [fp, #-16]
   23b20:	cmn	r0, #1
   23b24:	bne	23b6c <__assert_fail@plt+0x12690>
   23b28:	b	23b44 <__assert_fail@plt+0x12668>
   23b2c:	ldr	r0, [fp, #-12]
   23b30:	add	r0, r0, #0
   23b34:	movw	r1, #0
   23b38:	cmp	r1, r0
   23b3c:	bcc	23c40 <__assert_fail@plt+0x12764>
   23b40:	b	23c54 <__assert_fail@plt+0x12778>
   23b44:	ldr	r0, [fp, #-12]
   23b48:	movw	r1, #0
   23b4c:	cmp	r1, r0
   23b50:	bcs	23c54 <__assert_fail@plt+0x12778>
   23b54:	ldr	r0, [fp, #-12]
   23b58:	sub	r0, r0, #1
   23b5c:	mvn	r1, #0
   23b60:	cmp	r1, r0
   23b64:	bcc	23c40 <__assert_fail@plt+0x12764>
   23b68:	b	23c54 <__assert_fail@plt+0x12778>
   23b6c:	ldr	r0, [fp, #-16]
   23b70:	movw	r1, #0
   23b74:	udiv	r0, r1, r0
   23b78:	ldr	r1, [fp, #-12]
   23b7c:	cmp	r0, r1
   23b80:	bcc	23c40 <__assert_fail@plt+0x12764>
   23b84:	b	23c54 <__assert_fail@plt+0x12778>
   23b88:	ldr	r0, [fp, #-16]
   23b8c:	cmp	r0, #0
   23b90:	bne	23b98 <__assert_fail@plt+0x126bc>
   23b94:	b	23c54 <__assert_fail@plt+0x12778>
   23b98:	ldr	r0, [fp, #-12]
   23b9c:	cmp	r0, #0
   23ba0:	bcs	23c0c <__assert_fail@plt+0x12730>
   23ba4:	b	23bac <__assert_fail@plt+0x126d0>
   23ba8:	b	23bb0 <__assert_fail@plt+0x126d4>
   23bac:	b	23bf0 <__assert_fail@plt+0x12714>
   23bb0:	ldr	r0, [fp, #-12]
   23bb4:	cmn	r0, #1
   23bb8:	bne	23bf0 <__assert_fail@plt+0x12714>
   23bbc:	b	23bd8 <__assert_fail@plt+0x126fc>
   23bc0:	ldr	r0, [fp, #-16]
   23bc4:	add	r0, r0, #0
   23bc8:	movw	r1, #0
   23bcc:	cmp	r1, r0
   23bd0:	bcc	23c40 <__assert_fail@plt+0x12764>
   23bd4:	b	23c54 <__assert_fail@plt+0x12778>
   23bd8:	ldr	r0, [fp, #-16]
   23bdc:	sub	r0, r0, #1
   23be0:	mvn	r1, #0
   23be4:	cmp	r1, r0
   23be8:	bcc	23c40 <__assert_fail@plt+0x12764>
   23bec:	b	23c54 <__assert_fail@plt+0x12778>
   23bf0:	ldr	r0, [fp, #-12]
   23bf4:	movw	r1, #0
   23bf8:	udiv	r0, r1, r0
   23bfc:	ldr	r1, [fp, #-16]
   23c00:	cmp	r0, r1
   23c04:	bcc	23c40 <__assert_fail@plt+0x12764>
   23c08:	b	23c54 <__assert_fail@plt+0x12778>
   23c0c:	ldr	r2, [fp, #-16]
   23c10:	mvn	r0, #0
   23c14:	mov	r3, #0
   23c18:	str	r0, [sp, #12]
   23c1c:	ldr	r1, [sp, #12]
   23c20:	bl	245dc <__assert_fail@plt+0x13100>
   23c24:	ldr	r2, [fp, #-12]
   23c28:	subs	r0, r0, r2
   23c2c:	sbcs	r1, r1, #0
   23c30:	str	r0, [sp, #8]
   23c34:	str	r1, [sp, #4]
   23c38:	bcs	23c54 <__assert_fail@plt+0x12778>
   23c3c:	b	23c40 <__assert_fail@plt+0x12764>
   23c40:	ldr	r0, [fp, #-12]
   23c44:	ldr	r1, [fp, #-16]
   23c48:	mul	r0, r0, r1
   23c4c:	str	r0, [fp, #-20]	; 0xffffffec
   23c50:	b	23c68 <__assert_fail@plt+0x1278c>
   23c54:	ldr	r0, [fp, #-12]
   23c58:	ldr	r1, [fp, #-16]
   23c5c:	mul	r0, r0, r1
   23c60:	str	r0, [fp, #-20]	; 0xffffffec
   23c64:	b	23c80 <__assert_fail@plt+0x127a4>
   23c68:	bl	11398 <__errno_location@plt>
   23c6c:	movw	lr, #12
   23c70:	str	lr, [r0]
   23c74:	movw	r0, #0
   23c78:	str	r0, [fp, #-4]
   23c7c:	b	23c90 <__assert_fail@plt+0x127b4>
   23c80:	ldr	r0, [fp, #-8]
   23c84:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c88:	bl	21830 <__assert_fail@plt+0x10354>
   23c8c:	str	r0, [fp, #-4]
   23c90:	ldr	r0, [fp, #-4]
   23c94:	mov	sp, fp
   23c98:	pop	{fp, pc}
   23c9c:	svcvc	0x00ffffff
   23ca0:	andhi	r0, r0, r0
   23ca4:			; <UNDEFINED> instruction: 0xffff8000
   23ca8:	push	{fp, lr}
   23cac:	mov	fp, sp
   23cb0:	sub	sp, sp, #8
   23cb4:	str	r0, [sp, #4]
   23cb8:	ldr	r0, [sp, #4]
   23cbc:	movw	r1, #0
   23cc0:	movw	r2, #3
   23cc4:	bl	22018 <__assert_fail@plt+0x10b3c>
   23cc8:	mov	sp, fp
   23ccc:	pop	{fp, pc}
   23cd0:	sub	sp, sp, #12
   23cd4:	str	r0, [sp, #4]
   23cd8:	ldr	r0, [sp, #4]
   23cdc:	sub	r1, r0, #48	; 0x30
   23ce0:	cmp	r1, #10
   23ce4:	str	r0, [sp]
   23ce8:	bcc	23d18 <__assert_fail@plt+0x1283c>
   23cec:	b	23cf0 <__assert_fail@plt+0x12814>
   23cf0:	ldr	r0, [sp]
   23cf4:	sub	r1, r0, #65	; 0x41
   23cf8:	cmp	r1, #26
   23cfc:	bcc	23d18 <__assert_fail@plt+0x1283c>
   23d00:	b	23d04 <__assert_fail@plt+0x12828>
   23d04:	ldr	r0, [sp]
   23d08:	sub	r1, r0, #97	; 0x61
   23d0c:	cmp	r1, #25
   23d10:	bhi	23d28 <__assert_fail@plt+0x1284c>
   23d14:	b	23d18 <__assert_fail@plt+0x1283c>
   23d18:	movw	r0, #1
   23d1c:	and	r0, r0, #1
   23d20:	strb	r0, [sp, #11]
   23d24:	b	23d34 <__assert_fail@plt+0x12858>
   23d28:	movw	r0, #0
   23d2c:	and	r0, r0, #1
   23d30:	strb	r0, [sp, #11]
   23d34:	ldrb	r0, [sp, #11]
   23d38:	and	r0, r0, #1
   23d3c:	add	sp, sp, #12
   23d40:	bx	lr
   23d44:	sub	sp, sp, #12
   23d48:	str	r0, [sp, #4]
   23d4c:	ldr	r0, [sp, #4]
   23d50:	sub	r1, r0, #65	; 0x41
   23d54:	cmp	r1, #26
   23d58:	str	r0, [sp]
   23d5c:	bcc	23d78 <__assert_fail@plt+0x1289c>
   23d60:	b	23d64 <__assert_fail@plt+0x12888>
   23d64:	ldr	r0, [sp]
   23d68:	sub	r1, r0, #97	; 0x61
   23d6c:	cmp	r1, #25
   23d70:	bhi	23d88 <__assert_fail@plt+0x128ac>
   23d74:	b	23d78 <__assert_fail@plt+0x1289c>
   23d78:	movw	r0, #1
   23d7c:	and	r0, r0, #1
   23d80:	strb	r0, [sp, #11]
   23d84:	b	23d94 <__assert_fail@plt+0x128b8>
   23d88:	movw	r0, #0
   23d8c:	and	r0, r0, #1
   23d90:	strb	r0, [sp, #11]
   23d94:	ldrb	r0, [sp, #11]
   23d98:	and	r0, r0, #1
   23d9c:	add	sp, sp, #12
   23da0:	bx	lr
   23da4:	sub	sp, sp, #8
   23da8:	str	r0, [sp]
   23dac:	ldr	r0, [sp]
   23db0:	cmp	r0, #127	; 0x7f
   23db4:	bhi	23dcc <__assert_fail@plt+0x128f0>
   23db8:	b	23dbc <__assert_fail@plt+0x128e0>
   23dbc:	movw	r0, #1
   23dc0:	and	r0, r0, #1
   23dc4:	strb	r0, [sp, #7]
   23dc8:	b	23dd8 <__assert_fail@plt+0x128fc>
   23dcc:	movw	r0, #0
   23dd0:	and	r0, r0, #1
   23dd4:	strb	r0, [sp, #7]
   23dd8:	ldrb	r0, [sp, #7]
   23ddc:	and	r0, r0, #1
   23de0:	add	sp, sp, #8
   23de4:	bx	lr
   23de8:	sub	sp, sp, #8
   23dec:	str	r0, [sp, #4]
   23df0:	ldr	r0, [sp, #4]
   23df4:	cmp	r0, #32
   23df8:	movw	r0, #1
   23dfc:	str	r0, [sp]
   23e00:	beq	23e18 <__assert_fail@plt+0x1293c>
   23e04:	ldr	r0, [sp, #4]
   23e08:	cmp	r0, #9
   23e0c:	movw	r0, #0
   23e10:	moveq	r0, #1
   23e14:	str	r0, [sp]
   23e18:	ldr	r0, [sp]
   23e1c:	and	r0, r0, #1
   23e20:	add	sp, sp, #8
   23e24:	bx	lr
   23e28:	sub	sp, sp, #12
   23e2c:	str	r0, [sp, #4]
   23e30:	ldr	r0, [sp, #4]
   23e34:	cmp	r0, #32
   23e38:	str	r0, [sp]
   23e3c:	bcc	23e54 <__assert_fail@plt+0x12978>
   23e40:	b	23e44 <__assert_fail@plt+0x12968>
   23e44:	ldr	r0, [sp]
   23e48:	cmp	r0, #127	; 0x7f
   23e4c:	bne	23e64 <__assert_fail@plt+0x12988>
   23e50:	b	23e54 <__assert_fail@plt+0x12978>
   23e54:	movw	r0, #1
   23e58:	and	r0, r0, #1
   23e5c:	strb	r0, [sp, #11]
   23e60:	b	23e70 <__assert_fail@plt+0x12994>
   23e64:	movw	r0, #0
   23e68:	and	r0, r0, #1
   23e6c:	strb	r0, [sp, #11]
   23e70:	ldrb	r0, [sp, #11]
   23e74:	and	r0, r0, #1
   23e78:	add	sp, sp, #12
   23e7c:	bx	lr
   23e80:	sub	sp, sp, #8
   23e84:	str	r0, [sp]
   23e88:	ldr	r0, [sp]
   23e8c:	sub	r0, r0, #48	; 0x30
   23e90:	cmp	r0, #9
   23e94:	bhi	23eac <__assert_fail@plt+0x129d0>
   23e98:	b	23e9c <__assert_fail@plt+0x129c0>
   23e9c:	movw	r0, #1
   23ea0:	and	r0, r0, #1
   23ea4:	strb	r0, [sp, #7]
   23ea8:	b	23eb8 <__assert_fail@plt+0x129dc>
   23eac:	movw	r0, #0
   23eb0:	and	r0, r0, #1
   23eb4:	strb	r0, [sp, #7]
   23eb8:	ldrb	r0, [sp, #7]
   23ebc:	and	r0, r0, #1
   23ec0:	add	sp, sp, #8
   23ec4:	bx	lr
   23ec8:	sub	sp, sp, #8
   23ecc:	str	r0, [sp]
   23ed0:	ldr	r0, [sp]
   23ed4:	sub	r0, r0, #33	; 0x21
   23ed8:	cmp	r0, #93	; 0x5d
   23edc:	bhi	23ef4 <__assert_fail@plt+0x12a18>
   23ee0:	b	23ee4 <__assert_fail@plt+0x12a08>
   23ee4:	movw	r0, #1
   23ee8:	and	r0, r0, #1
   23eec:	strb	r0, [sp, #7]
   23ef0:	b	23f00 <__assert_fail@plt+0x12a24>
   23ef4:	movw	r0, #0
   23ef8:	and	r0, r0, #1
   23efc:	strb	r0, [sp, #7]
   23f00:	ldrb	r0, [sp, #7]
   23f04:	and	r0, r0, #1
   23f08:	add	sp, sp, #8
   23f0c:	bx	lr
   23f10:	sub	sp, sp, #8
   23f14:	str	r0, [sp]
   23f18:	ldr	r0, [sp]
   23f1c:	sub	r0, r0, #97	; 0x61
   23f20:	cmp	r0, #25
   23f24:	bhi	23f3c <__assert_fail@plt+0x12a60>
   23f28:	b	23f2c <__assert_fail@plt+0x12a50>
   23f2c:	movw	r0, #1
   23f30:	and	r0, r0, #1
   23f34:	strb	r0, [sp, #7]
   23f38:	b	23f48 <__assert_fail@plt+0x12a6c>
   23f3c:	movw	r0, #0
   23f40:	and	r0, r0, #1
   23f44:	strb	r0, [sp, #7]
   23f48:	ldrb	r0, [sp, #7]
   23f4c:	and	r0, r0, #1
   23f50:	add	sp, sp, #8
   23f54:	bx	lr
   23f58:	sub	sp, sp, #8
   23f5c:	str	r0, [sp]
   23f60:	ldr	r0, [sp]
   23f64:	sub	r0, r0, #32
   23f68:	cmp	r0, #94	; 0x5e
   23f6c:	bhi	23f84 <__assert_fail@plt+0x12aa8>
   23f70:	b	23f74 <__assert_fail@plt+0x12a98>
   23f74:	movw	r0, #1
   23f78:	and	r0, r0, #1
   23f7c:	strb	r0, [sp, #7]
   23f80:	b	23f90 <__assert_fail@plt+0x12ab4>
   23f84:	movw	r0, #0
   23f88:	and	r0, r0, #1
   23f8c:	strb	r0, [sp, #7]
   23f90:	ldrb	r0, [sp, #7]
   23f94:	and	r0, r0, #1
   23f98:	add	sp, sp, #8
   23f9c:	bx	lr
   23fa0:	sub	sp, sp, #12
   23fa4:	str	r0, [sp, #4]
   23fa8:	ldr	r0, [sp, #4]
   23fac:	sub	r0, r0, #33	; 0x21
   23fb0:	cmp	r0, #93	; 0x5d
   23fb4:	str	r0, [sp]
   23fb8:	bhi	24154 <__assert_fail@plt+0x12c78>
   23fbc:	add	r0, pc, #8
   23fc0:	ldr	r1, [sp]
   23fc4:	ldr	r0, [r0, r1, lsl #2]
   23fc8:	mov	pc, r0
   23fcc:	andeq	r4, r2, r4, asr #2
   23fd0:	andeq	r4, r2, r4, asr #2
   23fd4:	andeq	r4, r2, r4, asr #2
   23fd8:	andeq	r4, r2, r4, asr #2
   23fdc:	andeq	r4, r2, r4, asr #2
   23fe0:	andeq	r4, r2, r4, asr #2
   23fe4:	andeq	r4, r2, r4, asr #2
   23fe8:	andeq	r4, r2, r4, asr #2
   23fec:	andeq	r4, r2, r4, asr #2
   23ff0:	andeq	r4, r2, r4, asr #2
   23ff4:	andeq	r4, r2, r4, asr #2
   23ff8:	andeq	r4, r2, r4, asr #2
   23ffc:	andeq	r4, r2, r4, asr #2
   24000:	andeq	r4, r2, r4, asr #2
   24004:	andeq	r4, r2, r4, asr #2
   24008:	andeq	r4, r2, r4, asr r1
   2400c:	andeq	r4, r2, r4, asr r1
   24010:	andeq	r4, r2, r4, asr r1
   24014:	andeq	r4, r2, r4, asr r1
   24018:	andeq	r4, r2, r4, asr r1
   2401c:	andeq	r4, r2, r4, asr r1
   24020:	andeq	r4, r2, r4, asr r1
   24024:	andeq	r4, r2, r4, asr r1
   24028:	andeq	r4, r2, r4, asr r1
   2402c:	andeq	r4, r2, r4, asr r1
   24030:	andeq	r4, r2, r4, asr #2
   24034:	andeq	r4, r2, r4, asr #2
   24038:	andeq	r4, r2, r4, asr #2
   2403c:	andeq	r4, r2, r4, asr #2
   24040:	andeq	r4, r2, r4, asr #2
   24044:	andeq	r4, r2, r4, asr #2
   24048:	andeq	r4, r2, r4, asr #2
   2404c:	andeq	r4, r2, r4, asr r1
   24050:	andeq	r4, r2, r4, asr r1
   24054:	andeq	r4, r2, r4, asr r1
   24058:	andeq	r4, r2, r4, asr r1
   2405c:	andeq	r4, r2, r4, asr r1
   24060:	andeq	r4, r2, r4, asr r1
   24064:	andeq	r4, r2, r4, asr r1
   24068:	andeq	r4, r2, r4, asr r1
   2406c:	andeq	r4, r2, r4, asr r1
   24070:	andeq	r4, r2, r4, asr r1
   24074:	andeq	r4, r2, r4, asr r1
   24078:	andeq	r4, r2, r4, asr r1
   2407c:	andeq	r4, r2, r4, asr r1
   24080:	andeq	r4, r2, r4, asr r1
   24084:	andeq	r4, r2, r4, asr r1
   24088:	andeq	r4, r2, r4, asr r1
   2408c:	andeq	r4, r2, r4, asr r1
   24090:	andeq	r4, r2, r4, asr r1
   24094:	andeq	r4, r2, r4, asr r1
   24098:	andeq	r4, r2, r4, asr r1
   2409c:	andeq	r4, r2, r4, asr r1
   240a0:	andeq	r4, r2, r4, asr r1
   240a4:	andeq	r4, r2, r4, asr r1
   240a8:	andeq	r4, r2, r4, asr r1
   240ac:	andeq	r4, r2, r4, asr r1
   240b0:	andeq	r4, r2, r4, asr r1
   240b4:	andeq	r4, r2, r4, asr #2
   240b8:	andeq	r4, r2, r4, asr #2
   240bc:	andeq	r4, r2, r4, asr #2
   240c0:	andeq	r4, r2, r4, asr #2
   240c4:	andeq	r4, r2, r4, asr #2
   240c8:	andeq	r4, r2, r4, asr #2
   240cc:	andeq	r4, r2, r4, asr r1
   240d0:	andeq	r4, r2, r4, asr r1
   240d4:	andeq	r4, r2, r4, asr r1
   240d8:	andeq	r4, r2, r4, asr r1
   240dc:	andeq	r4, r2, r4, asr r1
   240e0:	andeq	r4, r2, r4, asr r1
   240e4:	andeq	r4, r2, r4, asr r1
   240e8:	andeq	r4, r2, r4, asr r1
   240ec:	andeq	r4, r2, r4, asr r1
   240f0:	andeq	r4, r2, r4, asr r1
   240f4:	andeq	r4, r2, r4, asr r1
   240f8:	andeq	r4, r2, r4, asr r1
   240fc:	andeq	r4, r2, r4, asr r1
   24100:	andeq	r4, r2, r4, asr r1
   24104:	andeq	r4, r2, r4, asr r1
   24108:	andeq	r4, r2, r4, asr r1
   2410c:	andeq	r4, r2, r4, asr r1
   24110:	andeq	r4, r2, r4, asr r1
   24114:	andeq	r4, r2, r4, asr r1
   24118:	andeq	r4, r2, r4, asr r1
   2411c:	andeq	r4, r2, r4, asr r1
   24120:	andeq	r4, r2, r4, asr r1
   24124:	andeq	r4, r2, r4, asr r1
   24128:	andeq	r4, r2, r4, asr r1
   2412c:	andeq	r4, r2, r4, asr r1
   24130:	andeq	r4, r2, r4, asr r1
   24134:	andeq	r4, r2, r4, asr #2
   24138:	andeq	r4, r2, r4, asr #2
   2413c:	andeq	r4, r2, r4, asr #2
   24140:	andeq	r4, r2, r4, asr #2
   24144:	movw	r0, #1
   24148:	and	r0, r0, #1
   2414c:	strb	r0, [sp, #11]
   24150:	b	24160 <__assert_fail@plt+0x12c84>
   24154:	movw	r0, #0
   24158:	and	r0, r0, #1
   2415c:	strb	r0, [sp, #11]
   24160:	ldrb	r0, [sp, #11]
   24164:	and	r0, r0, #1
   24168:	add	sp, sp, #12
   2416c:	bx	lr
   24170:	sub	sp, sp, #12
   24174:	str	r0, [sp, #4]
   24178:	ldr	r0, [sp, #4]
   2417c:	sub	r1, r0, #9
   24180:	cmp	r1, #5
   24184:	str	r0, [sp]
   24188:	bcc	241a0 <__assert_fail@plt+0x12cc4>
   2418c:	b	24190 <__assert_fail@plt+0x12cb4>
   24190:	ldr	r0, [sp]
   24194:	cmp	r0, #32
   24198:	bne	241b0 <__assert_fail@plt+0x12cd4>
   2419c:	b	241a0 <__assert_fail@plt+0x12cc4>
   241a0:	movw	r0, #1
   241a4:	and	r0, r0, #1
   241a8:	strb	r0, [sp, #11]
   241ac:	b	241bc <__assert_fail@plt+0x12ce0>
   241b0:	movw	r0, #0
   241b4:	and	r0, r0, #1
   241b8:	strb	r0, [sp, #11]
   241bc:	ldrb	r0, [sp, #11]
   241c0:	and	r0, r0, #1
   241c4:	add	sp, sp, #12
   241c8:	bx	lr
   241cc:	sub	sp, sp, #8
   241d0:	str	r0, [sp]
   241d4:	ldr	r0, [sp]
   241d8:	sub	r0, r0, #65	; 0x41
   241dc:	cmp	r0, #25
   241e0:	bhi	241f8 <__assert_fail@plt+0x12d1c>
   241e4:	b	241e8 <__assert_fail@plt+0x12d0c>
   241e8:	movw	r0, #1
   241ec:	and	r0, r0, #1
   241f0:	strb	r0, [sp, #7]
   241f4:	b	24204 <__assert_fail@plt+0x12d28>
   241f8:	movw	r0, #0
   241fc:	and	r0, r0, #1
   24200:	strb	r0, [sp, #7]
   24204:	ldrb	r0, [sp, #7]
   24208:	and	r0, r0, #1
   2420c:	add	sp, sp, #8
   24210:	bx	lr
   24214:	sub	sp, sp, #12
   24218:	str	r0, [sp, #4]
   2421c:	ldr	r0, [sp, #4]
   24220:	sub	r1, r0, #48	; 0x30
   24224:	cmp	r1, #10
   24228:	str	r0, [sp]
   2422c:	bcc	2425c <__assert_fail@plt+0x12d80>
   24230:	b	24234 <__assert_fail@plt+0x12d58>
   24234:	ldr	r0, [sp]
   24238:	sub	r1, r0, #65	; 0x41
   2423c:	cmp	r1, #6
   24240:	bcc	2425c <__assert_fail@plt+0x12d80>
   24244:	b	24248 <__assert_fail@plt+0x12d6c>
   24248:	ldr	r0, [sp]
   2424c:	sub	r1, r0, #97	; 0x61
   24250:	cmp	r1, #5
   24254:	bhi	2426c <__assert_fail@plt+0x12d90>
   24258:	b	2425c <__assert_fail@plt+0x12d80>
   2425c:	movw	r0, #1
   24260:	and	r0, r0, #1
   24264:	strb	r0, [sp, #11]
   24268:	b	24278 <__assert_fail@plt+0x12d9c>
   2426c:	movw	r0, #0
   24270:	and	r0, r0, #1
   24274:	strb	r0, [sp, #11]
   24278:	ldrb	r0, [sp, #11]
   2427c:	and	r0, r0, #1
   24280:	add	sp, sp, #12
   24284:	bx	lr
   24288:	sub	sp, sp, #8
   2428c:	str	r0, [sp]
   24290:	ldr	r0, [sp]
   24294:	sub	r0, r0, #65	; 0x41
   24298:	cmp	r0, #25
   2429c:	bhi	242b8 <__assert_fail@plt+0x12ddc>
   242a0:	b	242a4 <__assert_fail@plt+0x12dc8>
   242a4:	ldr	r0, [sp]
   242a8:	sub	r0, r0, #65	; 0x41
   242ac:	add	r0, r0, #97	; 0x61
   242b0:	str	r0, [sp, #4]
   242b4:	b	242c0 <__assert_fail@plt+0x12de4>
   242b8:	ldr	r0, [sp]
   242bc:	str	r0, [sp, #4]
   242c0:	ldr	r0, [sp, #4]
   242c4:	add	sp, sp, #8
   242c8:	bx	lr
   242cc:	sub	sp, sp, #8
   242d0:	str	r0, [sp]
   242d4:	ldr	r0, [sp]
   242d8:	sub	r0, r0, #97	; 0x61
   242dc:	cmp	r0, #25
   242e0:	bhi	242fc <__assert_fail@plt+0x12e20>
   242e4:	b	242e8 <__assert_fail@plt+0x12e0c>
   242e8:	ldr	r0, [sp]
   242ec:	sub	r0, r0, #97	; 0x61
   242f0:	add	r0, r0, #65	; 0x41
   242f4:	str	r0, [sp, #4]
   242f8:	b	24304 <__assert_fail@plt+0x12e28>
   242fc:	ldr	r0, [sp]
   24300:	str	r0, [sp, #4]
   24304:	ldr	r0, [sp, #4]
   24308:	add	sp, sp, #8
   2430c:	bx	lr
   24310:	push	{r4, r5, fp, lr}
   24314:	add	fp, sp, #8
   24318:	sub	sp, sp, #272	; 0x110
   2431c:	add	r1, sp, #7
   24320:	str	r0, [fp, #-16]
   24324:	ldr	r0, [fp, #-16]
   24328:	movw	r2, #257	; 0x101
   2432c:	bl	243ac <__assert_fail@plt+0x12ed0>
   24330:	cmp	r0, #0
   24334:	beq	24348 <__assert_fail@plt+0x12e6c>
   24338:	movw	r0, #0
   2433c:	and	r0, r0, #1
   24340:	strb	r0, [fp, #-9]
   24344:	b	2439c <__assert_fail@plt+0x12ec0>
   24348:	add	r0, sp, #7
   2434c:	movw	r1, #23654	; 0x5c66
   24350:	movt	r1, #2
   24354:	bl	111e8 <strcmp@plt>
   24358:	cmp	r0, #0
   2435c:	movw	r0, #1
   24360:	str	r0, [sp]
   24364:	beq	24388 <__assert_fail@plt+0x12eac>
   24368:	add	r0, sp, #7
   2436c:	movw	r1, #23656	; 0x5c68
   24370:	movt	r1, #2
   24374:	bl	111e8 <strcmp@plt>
   24378:	cmp	r0, #0
   2437c:	movw	r0, #0
   24380:	moveq	r0, #1
   24384:	str	r0, [sp]
   24388:	ldr	r0, [sp]
   2438c:	mvn	r1, #0
   24390:	eor	r0, r0, r1
   24394:	and	r0, r0, #1
   24398:	strb	r0, [fp, #-9]
   2439c:	ldrb	r0, [fp, #-9]
   243a0:	and	r0, r0, #1
   243a4:	sub	sp, fp, #8
   243a8:	pop	{r4, r5, fp, pc}
   243ac:	push	{fp, lr}
   243b0:	mov	fp, sp
   243b4:	sub	sp, sp, #16
   243b8:	str	r0, [fp, #-4]
   243bc:	str	r1, [sp, #8]
   243c0:	str	r2, [sp, #4]
   243c4:	ldr	r0, [fp, #-4]
   243c8:	ldr	r1, [sp, #8]
   243cc:	ldr	r2, [sp, #4]
   243d0:	bl	243dc <__assert_fail@plt+0x12f00>
   243d4:	mov	sp, fp
   243d8:	pop	{fp, pc}
   243dc:	push	{fp, lr}
   243e0:	mov	fp, sp
   243e4:	sub	sp, sp, #24
   243e8:	str	r0, [fp, #-8]
   243ec:	str	r1, [sp, #12]
   243f0:	str	r2, [sp, #8]
   243f4:	ldr	r0, [fp, #-8]
   243f8:	bl	244dc <__assert_fail@plt+0x13000>
   243fc:	str	r0, [sp, #4]
   24400:	ldr	r0, [sp, #4]
   24404:	movw	r1, #0
   24408:	cmp	r0, r1
   2440c:	bne	24434 <__assert_fail@plt+0x12f58>
   24410:	ldr	r0, [sp, #8]
   24414:	cmp	r0, #0
   24418:	bls	24428 <__assert_fail@plt+0x12f4c>
   2441c:	ldr	r0, [sp, #12]
   24420:	movw	r1, #0
   24424:	strb	r1, [r0]
   24428:	movw	r0, #22
   2442c:	str	r0, [fp, #-4]
   24430:	b	244b0 <__assert_fail@plt+0x12fd4>
   24434:	ldr	r0, [sp, #4]
   24438:	bl	1135c <strlen@plt>
   2443c:	str	r0, [sp]
   24440:	ldr	r0, [sp]
   24444:	ldr	lr, [sp, #8]
   24448:	cmp	r0, lr
   2444c:	bcs	24470 <__assert_fail@plt+0x12f94>
   24450:	ldr	r0, [sp, #12]
   24454:	ldr	r1, [sp, #4]
   24458:	ldr	r2, [sp]
   2445c:	add	r2, r2, #1
   24460:	bl	1123c <memcpy@plt>
   24464:	movw	r0, #0
   24468:	str	r0, [fp, #-4]
   2446c:	b	244b0 <__assert_fail@plt+0x12fd4>
   24470:	ldr	r0, [sp, #8]
   24474:	cmp	r0, #0
   24478:	bls	244a8 <__assert_fail@plt+0x12fcc>
   2447c:	ldr	r0, [sp, #12]
   24480:	ldr	r1, [sp, #4]
   24484:	ldr	r2, [sp, #8]
   24488:	sub	r2, r2, #1
   2448c:	bl	1123c <memcpy@plt>
   24490:	ldr	r0, [sp, #12]
   24494:	ldr	r1, [sp, #8]
   24498:	sub	r1, r1, #1
   2449c:	add	r0, r0, r1
   244a0:	movw	r1, #0
   244a4:	strb	r1, [r0]
   244a8:	movw	r0, #34	; 0x22
   244ac:	str	r0, [fp, #-4]
   244b0:	ldr	r0, [fp, #-4]
   244b4:	mov	sp, fp
   244b8:	pop	{fp, pc}
   244bc:	push	{fp, lr}
   244c0:	mov	fp, sp
   244c4:	sub	sp, sp, #8
   244c8:	str	r0, [sp, #4]
   244cc:	ldr	r0, [sp, #4]
   244d0:	bl	244dc <__assert_fail@plt+0x13000>
   244d4:	mov	sp, fp
   244d8:	pop	{fp, pc}
   244dc:	push	{fp, lr}
   244e0:	mov	fp, sp
   244e4:	sub	sp, sp, #8
   244e8:	str	r0, [sp, #4]
   244ec:	ldr	r0, [sp, #4]
   244f0:	movw	r1, #0
   244f4:	bl	113f8 <setlocale@plt>
   244f8:	str	r0, [sp]
   244fc:	ldr	r0, [sp]
   24500:	mov	sp, fp
   24504:	pop	{fp, pc}
   24508:	cmp	r3, #0
   2450c:	cmpeq	r2, #0
   24510:	bne	24534 <__assert_fail@plt+0x13058>
   24514:	cmp	r1, #0
   24518:	movlt	r1, #-2147483648	; 0x80000000
   2451c:	movlt	r0, #0
   24520:	blt	24530 <__assert_fail@plt+0x13054>
   24524:	cmpeq	r0, #0
   24528:	mvnne	r1, #-2147483648	; 0x80000000
   2452c:	mvnne	r0, #0
   24530:	b	24618 <__assert_fail@plt+0x1313c>
   24534:	sub	sp, sp, #8
   24538:	push	{sp, lr}
   2453c:	cmp	r1, #0
   24540:	blt	24560 <__assert_fail@plt+0x13084>
   24544:	cmp	r3, #0
   24548:	blt	24594 <__assert_fail@plt+0x130b8>
   2454c:	bl	24628 <__assert_fail@plt+0x1314c>
   24550:	ldr	lr, [sp, #4]
   24554:	add	sp, sp, #8
   24558:	pop	{r2, r3}
   2455c:	bx	lr
   24560:	rsbs	r0, r0, #0
   24564:	sbc	r1, r1, r1, lsl #1
   24568:	cmp	r3, #0
   2456c:	blt	245b8 <__assert_fail@plt+0x130dc>
   24570:	bl	24628 <__assert_fail@plt+0x1314c>
   24574:	ldr	lr, [sp, #4]
   24578:	add	sp, sp, #8
   2457c:	pop	{r2, r3}
   24580:	rsbs	r0, r0, #0
   24584:	sbc	r1, r1, r1, lsl #1
   24588:	rsbs	r2, r2, #0
   2458c:	sbc	r3, r3, r3, lsl #1
   24590:	bx	lr
   24594:	rsbs	r2, r2, #0
   24598:	sbc	r3, r3, r3, lsl #1
   2459c:	bl	24628 <__assert_fail@plt+0x1314c>
   245a0:	ldr	lr, [sp, #4]
   245a4:	add	sp, sp, #8
   245a8:	pop	{r2, r3}
   245ac:	rsbs	r0, r0, #0
   245b0:	sbc	r1, r1, r1, lsl #1
   245b4:	bx	lr
   245b8:	rsbs	r2, r2, #0
   245bc:	sbc	r3, r3, r3, lsl #1
   245c0:	bl	24628 <__assert_fail@plt+0x1314c>
   245c4:	ldr	lr, [sp, #4]
   245c8:	add	sp, sp, #8
   245cc:	pop	{r2, r3}
   245d0:	rsbs	r2, r2, #0
   245d4:	sbc	r3, r3, r3, lsl #1
   245d8:	bx	lr
   245dc:	cmp	r3, #0
   245e0:	cmpeq	r2, #0
   245e4:	bne	245fc <__assert_fail@plt+0x13120>
   245e8:	cmp	r1, #0
   245ec:	cmpeq	r0, #0
   245f0:	mvnne	r1, #0
   245f4:	mvnne	r0, #0
   245f8:	b	24618 <__assert_fail@plt+0x1313c>
   245fc:	sub	sp, sp, #8
   24600:	push	{sp, lr}
   24604:	bl	24628 <__assert_fail@plt+0x1314c>
   24608:	ldr	lr, [sp, #4]
   2460c:	add	sp, sp, #8
   24610:	pop	{r2, r3}
   24614:	bx	lr
   24618:	push	{r1, lr}
   2461c:	mov	r0, #8
   24620:	bl	111dc <raise@plt>
   24624:	pop	{r1, pc}
   24628:	cmp	r1, r3
   2462c:	cmpeq	r0, r2
   24630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24634:	mov	r4, r0
   24638:	movcc	r0, #0
   2463c:	mov	r5, r1
   24640:	ldr	lr, [sp, #36]	; 0x24
   24644:	movcc	r1, r0
   24648:	bcc	24744 <__assert_fail@plt+0x13268>
   2464c:	cmp	r3, #0
   24650:	clzeq	ip, r2
   24654:	clzne	ip, r3
   24658:	addeq	ip, ip, #32
   2465c:	cmp	r5, #0
   24660:	clzeq	r1, r4
   24664:	addeq	r1, r1, #32
   24668:	clzne	r1, r5
   2466c:	sub	ip, ip, r1
   24670:	sub	sl, ip, #32
   24674:	lsl	r9, r3, ip
   24678:	rsb	fp, ip, #32
   2467c:	orr	r9, r9, r2, lsl sl
   24680:	orr	r9, r9, r2, lsr fp
   24684:	lsl	r8, r2, ip
   24688:	cmp	r5, r9
   2468c:	cmpeq	r4, r8
   24690:	movcc	r0, #0
   24694:	movcc	r1, r0
   24698:	bcc	246b4 <__assert_fail@plt+0x131d8>
   2469c:	mov	r0, #1
   246a0:	subs	r4, r4, r8
   246a4:	lsl	r1, r0, sl
   246a8:	orr	r1, r1, r0, lsr fp
   246ac:	lsl	r0, r0, ip
   246b0:	sbc	r5, r5, r9
   246b4:	cmp	ip, #0
   246b8:	beq	24744 <__assert_fail@plt+0x13268>
   246bc:	lsr	r6, r8, #1
   246c0:	orr	r6, r6, r9, lsl #31
   246c4:	lsr	r7, r9, #1
   246c8:	mov	r2, ip
   246cc:	b	246f0 <__assert_fail@plt+0x13214>
   246d0:	subs	r3, r4, r6
   246d4:	sbc	r8, r5, r7
   246d8:	adds	r3, r3, r3
   246dc:	adc	r8, r8, r8
   246e0:	adds	r4, r3, #1
   246e4:	adc	r5, r8, #0
   246e8:	subs	r2, r2, #1
   246ec:	beq	2470c <__assert_fail@plt+0x13230>
   246f0:	cmp	r5, r7
   246f4:	cmpeq	r4, r6
   246f8:	bcs	246d0 <__assert_fail@plt+0x131f4>
   246fc:	adds	r4, r4, r4
   24700:	adc	r5, r5, r5
   24704:	subs	r2, r2, #1
   24708:	bne	246f0 <__assert_fail@plt+0x13214>
   2470c:	lsr	r3, r4, ip
   24710:	orr	r3, r3, r5, lsl fp
   24714:	lsr	r2, r5, ip
   24718:	orr	r3, r3, r5, lsr sl
   2471c:	adds	r0, r0, r4
   24720:	mov	r4, r3
   24724:	lsl	r3, r2, ip
   24728:	orr	r3, r3, r4, lsl sl
   2472c:	lsl	ip, r4, ip
   24730:	orr	r3, r3, r4, lsr fp
   24734:	adc	r1, r1, r5
   24738:	subs	r0, r0, ip
   2473c:	mov	r5, r2
   24740:	sbc	r1, r1, r3
   24744:	cmp	lr, #0
   24748:	strdne	r4, [lr]
   2474c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24754:	mov	r7, r0
   24758:	ldr	r6, [pc, #72]	; 247a8 <__assert_fail@plt+0x132cc>
   2475c:	ldr	r5, [pc, #72]	; 247ac <__assert_fail@plt+0x132d0>
   24760:	add	r6, pc, r6
   24764:	add	r5, pc, r5
   24768:	sub	r6, r6, r5
   2476c:	mov	r8, r1
   24770:	mov	r9, r2
   24774:	bl	1118c <fstatfs64@plt-0x20>
   24778:	asrs	r6, r6, #2
   2477c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24780:	mov	r4, #0
   24784:	add	r4, r4, #1
   24788:	ldr	r3, [r5], #4
   2478c:	mov	r2, r9
   24790:	mov	r1, r8
   24794:	mov	r0, r7
   24798:	blx	r3
   2479c:	cmp	r6, r4
   247a0:	bne	24784 <__assert_fail@plt+0x132a8>
   247a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   247a8:	andeq	r1, r1, r4, lsr #15
   247ac:	muleq	r1, ip, r7
   247b0:	bx	lr
   247b4:	ldr	r3, [pc, #12]	; 247c8 <__assert_fail@plt+0x132ec>
   247b8:	mov	r1, #0
   247bc:	add	r3, pc, r3
   247c0:	ldr	r2, [r3]
   247c4:	b	113a4 <__cxa_atexit@plt>
   247c8:	andeq	r1, r1, r4, ror #18
   247cc:	mov	r2, r1
   247d0:	mov	r1, r0
   247d4:	mov	r0, #3
   247d8:	b	11470 <__xstat64@plt>
   247dc:	mov	r2, r1
   247e0:	mov	r1, r0
   247e4:	mov	r0, #3
   247e8:	b	1129c <__fxstat64@plt>
   247ec:	mov	r2, r1
   247f0:	mov	r1, r0
   247f4:	mov	r0, #3
   247f8:	b	114ac <__lxstat64@plt>
   247fc:	push	{lr}		; (str lr, [sp, #-4]!)
   24800:	sub	sp, sp, #12
   24804:	str	r3, [sp]
   24808:	mov	r3, r2
   2480c:	mov	r2, r1
   24810:	mov	r1, r0
   24814:	mov	r0, #3
   24818:	bl	11284 <__fxstatat64@plt>
   2481c:	add	sp, sp, #12
   24820:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00024824 <.fini>:
   24824:	push	{r3, lr}
   24828:	pop	{r3, pc}
