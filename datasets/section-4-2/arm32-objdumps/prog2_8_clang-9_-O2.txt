
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010c2c <.init>:
   10c2c:	push	{r3, lr}
   10c30:	bl	10d18 <_start@@Base+0x3c>
   10c34:	pop	{r3, pc}

Disassembly of section .plt:

00010c38 <calloc@plt-0x14>:
   10c38:	push	{lr}		; (str lr, [sp, #-4]!)
   10c3c:	ldr	lr, [pc, #4]	; 10c48 <calloc@plt-0x4>
   10c40:	add	lr, pc, lr
   10c44:	ldr	pc, [lr, #8]!
   10c48:			; <UNDEFINED> instruction: 0x000123b8

00010c4c <calloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #952]!	; 0x3b8

00010c58 <printf@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #944]!	; 0x3b0

00010c64 <free@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #73728	; 0x12000
   10c6c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c70 <realloc@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #928]!	; 0x3a0

00010c7c <puts@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #920]!	; 0x398

00010c88 <malloc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #912]!	; 0x390

00010c94 <__libc_start_main@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #904]!	; 0x388

00010ca0 <__gmon_start__@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #896]!	; 0x380

00010cac <setvbuf@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #888]!	; 0x378

00010cb8 <memset@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #880]!	; 0x370

00010cc4 <putchar@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #872]!	; 0x368

00010cd0 <abort@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #864]!	; 0x360

Disassembly of section .text:

00010cdc <_start@@Base>:
   10cdc:	mov	fp, #0
   10ce0:	mov	lr, #0
   10ce4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ce8:	mov	r2, sp
   10cec:	push	{r2}		; (str r2, [sp, #-4]!)
   10cf0:	push	{r0}		; (str r0, [sp, #-4]!)
   10cf4:	ldr	ip, [pc, #16]	; 10d0c <_start@@Base+0x30>
   10cf8:	push	{ip}		; (str ip, [sp, #-4]!)
   10cfc:	ldr	r0, [pc, #12]	; 10d10 <_start@@Base+0x34>
   10d00:	ldr	r3, [pc, #12]	; 10d14 <_start@@Base+0x38>
   10d04:	bl	10c94 <__libc_start_main@plt>
   10d08:	bl	10cd0 <abort@plt>
   10d0c:	andeq	r2, r1, r0, ror #13
   10d10:	andeq	r1, r1, ip, ror ip
   10d14:	andeq	r2, r1, r0, lsl #13
   10d18:	ldr	r3, [pc, #20]	; 10d34 <_start@@Base+0x58>
   10d1c:	ldr	r2, [pc, #20]	; 10d38 <_start@@Base+0x5c>
   10d20:	add	r3, pc, r3
   10d24:	ldr	r2, [r3, r2]
   10d28:	cmp	r2, #0
   10d2c:	bxeq	lr
   10d30:	b	10ca0 <__gmon_start__@plt>
   10d34:	ldrdeq	r2, [r1], -r8
   10d38:	andeq	r0, r0, r0, asr #32
   10d3c:	ldr	r0, [pc, #24]	; 10d5c <_start@@Base+0x80>
   10d40:	ldr	r3, [pc, #24]	; 10d60 <_start@@Base+0x84>
   10d44:	cmp	r3, r0
   10d48:	bxeq	lr
   10d4c:	ldr	r3, [pc, #16]	; 10d64 <_start@@Base+0x88>
   10d50:	cmp	r3, #0
   10d54:	bxeq	lr
   10d58:	bx	r3
   10d5c:	andeq	r3, r2, r0, asr r0
   10d60:	andeq	r3, r2, r0, asr r0
   10d64:	andeq	r0, r0, r0
   10d68:	ldr	r0, [pc, #36]	; 10d94 <_start@@Base+0xb8>
   10d6c:	ldr	r1, [pc, #36]	; 10d98 <_start@@Base+0xbc>
   10d70:	sub	r1, r1, r0
   10d74:	asr	r1, r1, #2
   10d78:	add	r1, r1, r1, lsr #31
   10d7c:	asrs	r1, r1, #1
   10d80:	bxeq	lr
   10d84:	ldr	r3, [pc, #16]	; 10d9c <_start@@Base+0xc0>
   10d88:	cmp	r3, #0
   10d8c:	bxeq	lr
   10d90:	bx	r3
   10d94:	andeq	r3, r2, r0, asr r0
   10d98:	andeq	r3, r2, r0, asr r0
   10d9c:	andeq	r0, r0, r0
   10da0:	push	{r4, lr}
   10da4:	ldr	r4, [pc, #24]	; 10dc4 <_start@@Base+0xe8>
   10da8:	ldrb	r3, [r4]
   10dac:	cmp	r3, #0
   10db0:	popne	{r4, pc}
   10db4:	bl	10d3c <_start@@Base+0x60>
   10db8:	mov	r3, #1
   10dbc:	strb	r3, [r4]
   10dc0:	pop	{r4, pc}
   10dc4:	andeq	r3, r2, r0, asr r0
   10dc8:	b	10d68 <_start@@Base+0x8c>

00010dcc <_g@@Base>:
   10dcc:	sub	sp, sp, #8
   10dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dd4:	add	fp, sp, #28
   10dd8:	sub	sp, sp, #4
   10ddc:	mov	r8, r0
   10de0:	mov	r0, #8
   10de4:	mov	sl, r1
   10de8:	str	r2, [fp, #8]
   10dec:	str	r3, [fp, #12]
   10df0:	bl	10c88 <malloc@plt>
   10df4:	mov	r9, r0
   10df8:	add	r0, fp, #8
   10dfc:	mov	r1, #8
   10e00:	str	r0, [sp]
   10e04:	mov	r0, r8
   10e08:	bl	10c4c <calloc@plt>
   10e0c:	cmp	sl, #1
   10e10:	str	r0, [r9, #4]
   10e14:	blt	10e74 <_g@@Base+0xa8>
   10e18:	mov	r7, r0
   10e1c:	mov	r4, #0
   10e20:	ldr	r0, [sp]
   10e24:	add	r1, r0, #4
   10e28:	str	r1, [sp]
   10e2c:	mov	r1, r0
   10e30:	ldr	r6, [r1], #8
   10e34:	str	r1, [sp]
   10e38:	mov	r1, #8
   10e3c:	ldr	r5, [r0, #4]
   10e40:	mov	r0, #1
   10e44:	bl	10c4c <calloc@plt>
   10e48:	add	r1, r7, r6, lsl #3
   10e4c:	str	r5, [r0]
   10e50:	add	r4, r4, #2
   10e54:	cmp	r4, sl
   10e58:	ldr	r2, [r1, #4]
   10e5c:	str	r2, [r0, #4]
   10e60:	ldr	r2, [r7, r6, lsl #3]
   10e64:	add	r2, r2, #1
   10e68:	str	r2, [r7, r6, lsl #3]
   10e6c:	str	r0, [r1, #4]
   10e70:	blt	10e20 <_g@@Base+0x54>
   10e74:	str	r8, [r9]
   10e78:	mov	r0, r9
   10e7c:	sub	sp, fp, #28
   10e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e84:	add	sp, sp, #8
   10e88:	bx	lr

00010e8c <_f@@Base>:
   10e8c:	push	{r4, r5, r6, sl, fp, lr}
   10e90:	add	fp, sp, #16
   10e94:	mov	r5, r0
   10e98:	mov	r0, #0
   10e9c:	cmp	r5, #0
   10ea0:	beq	10ee8 <_f@@Base+0x5c>
   10ea4:	mov	r4, r1
   10ea8:	ldr	r1, [r5]
   10eac:	cmp	r1, #1
   10eb0:	blt	10ee8 <_f@@Base+0x5c>
   10eb4:	mov	r6, #0
   10eb8:	mov	r0, r5
   10ebc:	mov	r1, r6
   10ec0:	bl	12350 <vetor_elemento@@Base>
   10ec4:	cmp	r0, r4
   10ec8:	beq	10ee4 <_f@@Base+0x58>
   10ecc:	ldr	r0, [r5]
   10ed0:	add	r6, r6, #1
   10ed4:	cmp	r6, r0
   10ed8:	blt	10eb8 <_f@@Base+0x2c>
   10edc:	mov	r0, #0
   10ee0:	pop	{r4, r5, r6, sl, fp, pc}
   10ee4:	mov	r0, #1
   10ee8:	pop	{r4, r5, r6, sl, fp, pc}

00010eec <teste_grafo_novo@@Base>:
   10eec:	push	{r4, r5, fp, lr}
   10ef0:	add	fp, sp, #8
   10ef4:	ldr	r0, [pc, #244]	; 10ff0 <teste_grafo_novo@@Base+0x104>
   10ef8:	add	r0, pc, r0
   10efc:	bl	10c58 <printf@plt>
   10f00:	mov	r0, #10
   10f04:	bl	11d64 <grafo_novo@@Base>
   10f08:	cmp	r0, #0
   10f0c:	beq	10f88 <teste_grafo_novo@@Base+0x9c>
   10f10:	mov	r4, r0
   10f14:	ldr	r0, [r0]
   10f18:	mov	r5, #0
   10f1c:	cmp	r0, #10
   10f20:	beq	10f34 <teste_grafo_novo@@Base+0x48>
   10f24:	ldr	r0, [pc, #204]	; 10ff8 <teste_grafo_novo@@Base+0x10c>
   10f28:	add	r0, pc, r0
   10f2c:	bl	10c58 <printf@plt>
   10f30:	mov	r5, #1
   10f34:	mov	r0, r4
   10f38:	bl	11db8 <grafo_apaga@@Base>
   10f3c:	mov	r0, #1
   10f40:	bl	11d64 <grafo_novo@@Base>
   10f44:	cmp	r0, #0
   10f48:	beq	10fa8 <teste_grafo_novo@@Base+0xbc>
   10f4c:	mov	r4, r0
   10f50:	ldr	r0, [r0]
   10f54:	cmp	r0, #1
   10f58:	bne	10fc8 <teste_grafo_novo@@Base+0xdc>
   10f5c:	mov	r0, r4
   10f60:	bl	11db8 <grafo_apaga@@Base>
   10f64:	mov	r4, #1
   10f68:	cmp	r5, #0
   10f6c:	bne	10fe0 <teste_grafo_novo@@Base+0xf4>
   10f70:	ldr	r0, [pc, #140]	; 11004 <teste_grafo_novo@@Base+0x118>
   10f74:	add	r0, pc, r0
   10f78:	bl	10c7c <puts@plt>
   10f7c:	mov	r4, #0
   10f80:	mov	r0, r4
   10f84:	pop	{r4, r5, fp, pc}
   10f88:	ldr	r0, [pc, #100]	; 10ff4 <teste_grafo_novo@@Base+0x108>
   10f8c:	add	r0, pc, r0
   10f90:	bl	10c58 <printf@plt>
   10f94:	mov	r0, #10
   10f98:	bl	10cc4 <putchar@plt>
   10f9c:	mov	r4, #1
   10fa0:	mov	r0, r4
   10fa4:	pop	{r4, r5, fp, pc}
   10fa8:	ldr	r0, [pc, #76]	; 10ffc <teste_grafo_novo@@Base+0x110>
   10fac:	add	r0, pc, r0
   10fb0:	bl	10c58 <printf@plt>
   10fb4:	mov	r0, #10
   10fb8:	bl	10cc4 <putchar@plt>
   10fbc:	add	r4, r5, #1
   10fc0:	mov	r0, r4
   10fc4:	pop	{r4, r5, fp, pc}
   10fc8:	ldr	r0, [pc, #48]	; 11000 <teste_grafo_novo@@Base+0x114>
   10fcc:	add	r0, pc, r0
   10fd0:	bl	10c58 <printf@plt>
   10fd4:	mov	r0, r4
   10fd8:	bl	11db8 <grafo_apaga@@Base>
   10fdc:	add	r4, r5, #1
   10fe0:	mov	r0, #10
   10fe4:	bl	10cc4 <putchar@plt>
   10fe8:	mov	r0, r4
   10fec:	pop	{r4, r5, fp, pc}
   10ff0:	strdeq	r1, [r0], -r0
   10ff4:	andeq	r1, r0, fp, ror #14
   10ff8:	andeq	r1, r0, r7, ror #15
   10ffc:	andeq	r1, r0, fp, asr #14
   11000:	andeq	r1, r0, r7, ror #14
   11004:	andeq	r1, r0, sl, lsr lr

00011008 <teste_grafo_aresta@@Base>:
   11008:	push	{r4, r5, fp, lr}
   1100c:	add	fp, sp, #8
   11010:	sub	sp, sp, #80	; 0x50
   11014:	mov	r0, #1
   11018:	mov	r4, #0
   1101c:	mov	r2, #6
   11020:	mov	r3, #4
   11024:	mov	r1, #3
   11028:	add	ip, sp, #52	; 0x34
   1102c:	str	r1, [sp, #68]	; 0x44
   11030:	str	r2, [sp, #64]	; 0x40
   11034:	str	r4, [sp, #72]	; 0x48
   11038:	str	r0, [sp, #76]	; 0x4c
   1103c:	mov	r1, #7
   11040:	str	r3, [sp, #32]
   11044:	str	r4, [sp, #36]	; 0x24
   11048:	str	r3, [sp, #40]	; 0x28
   1104c:	str	r2, [sp, #44]	; 0x2c
   11050:	str	r0, [sp, #48]	; 0x30
   11054:	stm	ip, {r0, r1, r2}
   11058:	mov	r2, #2
   1105c:	mov	r0, #5
   11060:	stm	sp, {r1, r2, r4}
   11064:	str	r2, [sp, #12]
   11068:	str	r1, [sp, #16]
   1106c:	str	r3, [sp, #28]
   11070:	str	r0, [sp, #20]
   11074:	str	r0, [sp, #24]
   11078:	mov	r0, #8
   1107c:	mov	r1, #22
   11080:	mov	r2, #3
   11084:	mov	r3, #2
   11088:	bl	10dcc <_g@@Base>
   1108c:	mov	r5, r0
   11090:	ldr	r0, [pc, #232]	; 11180 <teste_grafo_aresta@@Base+0x178>
   11094:	add	r0, pc, r0
   11098:	bl	10c58 <printf@plt>
   1109c:	mov	r0, r5
   110a0:	mov	r1, #5
   110a4:	mov	r2, #4
   110a8:	bl	11e30 <grafo_aresta@@Base>
   110ac:	cmp	r0, #1
   110b0:	beq	110c4 <teste_grafo_aresta@@Base+0xbc>
   110b4:	ldr	r0, [pc, #200]	; 11184 <teste_grafo_aresta@@Base+0x17c>
   110b8:	add	r0, pc, r0
   110bc:	bl	10c58 <printf@plt>
   110c0:	mov	r4, #1
   110c4:	mov	r0, r5
   110c8:	mov	r1, #7
   110cc:	mov	r2, #6
   110d0:	bl	11e30 <grafo_aresta@@Base>
   110d4:	cmp	r0, #1
   110d8:	beq	110ec <teste_grafo_aresta@@Base+0xe4>
   110dc:	ldr	r0, [pc, #164]	; 11188 <teste_grafo_aresta@@Base+0x180>
   110e0:	add	r0, pc, r0
   110e4:	bl	10c58 <printf@plt>
   110e8:	add	r4, r4, #1
   110ec:	mov	r0, r5
   110f0:	mov	r1, #7
   110f4:	mov	r2, #1
   110f8:	bl	11e30 <grafo_aresta@@Base>
   110fc:	cmp	r0, #0
   11100:	beq	11114 <teste_grafo_aresta@@Base+0x10c>
   11104:	ldr	r0, [pc, #128]	; 1118c <teste_grafo_aresta@@Base+0x184>
   11108:	add	r0, pc, r0
   1110c:	bl	10c58 <printf@plt>
   11110:	add	r4, r4, #1
   11114:	mov	r0, #0
   11118:	mov	r1, #2
   1111c:	mov	r2, #7
   11120:	bl	11e30 <grafo_aresta@@Base>
   11124:	cmn	r0, #1
   11128:	beq	11148 <teste_grafo_aresta@@Base+0x140>
   1112c:	ldr	r0, [pc, #92]	; 11190 <teste_grafo_aresta@@Base+0x188>
   11130:	add	r0, pc, r0
   11134:	bl	10c58 <printf@plt>
   11138:	mov	r0, r5
   1113c:	bl	11db8 <grafo_apaga@@Base>
   11140:	add	r4, r4, #1
   11144:	b	11158 <teste_grafo_aresta@@Base+0x150>
   11148:	mov	r0, r5
   1114c:	bl	11db8 <grafo_apaga@@Base>
   11150:	cmp	r4, #0
   11154:	beq	1116c <teste_grafo_aresta@@Base+0x164>
   11158:	mov	r0, #10
   1115c:	bl	10cc4 <putchar@plt>
   11160:	mov	r0, r4
   11164:	sub	sp, fp, #8
   11168:	pop	{r4, r5, fp, pc}
   1116c:	ldr	r0, [pc, #32]	; 11194 <teste_grafo_aresta@@Base+0x18c>
   11170:	add	r0, pc, r0
   11174:	bl	10c7c <puts@plt>
   11178:	mov	r4, #0
   1117c:	b	11160 <teste_grafo_aresta@@Base+0x158>
   11180:	andeq	r1, r0, r2, asr #13
   11184:	andeq	r1, r0, pc, lsr #13
   11188:	andeq	r1, r0, r7, lsl #13
   1118c:	muleq	r0, r7, r6
   11190:	andeq	r1, r0, fp, lsr #13
   11194:	andeq	r1, r0, lr, lsr ip

00011198 <teste_grafo_adiciona@@Base>:
   11198:	push	{r4, r5, fp, lr}
   1119c:	add	fp, sp, #8
   111a0:	sub	sp, sp, #8
   111a4:	mov	r0, #2
   111a8:	mov	r1, #7
   111ac:	mov	r2, #3
   111b0:	mov	r3, #2
   111b4:	str	r1, [sp]
   111b8:	str	r0, [sp, #4]
   111bc:	mov	r0, #9
   111c0:	mov	r1, #4
   111c4:	bl	10dcc <_g@@Base>
   111c8:	mov	r5, r0
   111cc:	ldr	r0, [pc, #428]	; 11380 <teste_grafo_adiciona@@Base+0x1e8>
   111d0:	add	r0, pc, r0
   111d4:	bl	10c58 <printf@plt>
   111d8:	mov	r0, r5
   111dc:	mov	r1, #2
   111e0:	mov	r2, #7
   111e4:	bl	11e80 <grafo_adiciona@@Base>
   111e8:	mov	r4, #0
   111ec:	cmp	r0, #1
   111f0:	beq	11204 <teste_grafo_adiciona@@Base+0x6c>
   111f4:	ldr	r0, [pc, #392]	; 11384 <teste_grafo_adiciona@@Base+0x1ec>
   111f8:	add	r0, pc, r0
   111fc:	bl	10c58 <printf@plt>
   11200:	mov	r4, #1
   11204:	ldr	r0, [r5, #4]
   11208:	ldr	r0, [r0, #20]
   1120c:	cmp	r0, #0
   11210:	beq	11220 <teste_grafo_adiciona@@Base+0x88>
   11214:	ldr	r0, [r0]
   11218:	cmp	r0, #7
   1121c:	beq	11230 <teste_grafo_adiciona@@Base+0x98>
   11220:	ldr	r0, [pc, #352]	; 11388 <teste_grafo_adiciona@@Base+0x1f0>
   11224:	add	r0, pc, r0
   11228:	bl	10c58 <printf@plt>
   1122c:	add	r4, r4, #1
   11230:	mov	r0, r5
   11234:	mov	r1, #3
   11238:	mov	r2, #8
   1123c:	bl	11e80 <grafo_adiciona@@Base>
   11240:	cmp	r0, #1
   11244:	beq	11258 <teste_grafo_adiciona@@Base+0xc0>
   11248:	ldr	r0, [pc, #316]	; 1138c <teste_grafo_adiciona@@Base+0x1f4>
   1124c:	add	r0, pc, r0
   11250:	bl	10c58 <printf@plt>
   11254:	add	r4, r4, #1
   11258:	ldr	r0, [r5, #4]
   1125c:	ldr	r1, [r0, #28]
   11260:	cmp	r1, #0
   11264:	beq	11280 <teste_grafo_adiciona@@Base+0xe8>
   11268:	ldr	r0, [r1, #4]
   1126c:	cmp	r0, #0
   11270:	beq	11280 <teste_grafo_adiciona@@Base+0xe8>
   11274:	ldr	r2, [r0, #4]
   11278:	cmp	r2, #0
   1127c:	beq	11338 <teste_grafo_adiciona@@Base+0x1a0>
   11280:	ldr	r0, [pc, #264]	; 11390 <teste_grafo_adiciona@@Base+0x1f8>
   11284:	add	r0, pc, r0
   11288:	bl	10c58 <printf@plt>
   1128c:	add	r4, r4, #1
   11290:	mov	r0, r5
   11294:	mov	r1, #2
   11298:	mov	r2, #7
   1129c:	bl	11e80 <grafo_adiciona@@Base>
   112a0:	cmp	r0, #0
   112a4:	beq	112b8 <teste_grafo_adiciona@@Base+0x120>
   112a8:	ldr	r0, [pc, #228]	; 11394 <teste_grafo_adiciona@@Base+0x1fc>
   112ac:	add	r0, pc, r0
   112b0:	bl	10c58 <printf@plt>
   112b4:	add	r4, r4, #1
   112b8:	mov	r0, r5
   112bc:	mov	r1, #22
   112c0:	mov	r2, #7
   112c4:	bl	11e80 <grafo_adiciona@@Base>
   112c8:	cmn	r0, #1
   112cc:	beq	112e0 <teste_grafo_adiciona@@Base+0x148>
   112d0:	ldr	r0, [pc, #192]	; 11398 <teste_grafo_adiciona@@Base+0x200>
   112d4:	add	r0, pc, r0
   112d8:	bl	10c58 <printf@plt>
   112dc:	add	r4, r4, #1
   112e0:	mov	r0, #0
   112e4:	mov	r1, #2
   112e8:	mov	r2, #7
   112ec:	bl	11e80 <grafo_adiciona@@Base>
   112f0:	cmn	r0, #1
   112f4:	beq	11314 <teste_grafo_adiciona@@Base+0x17c>
   112f8:	ldr	r0, [pc, #156]	; 1139c <teste_grafo_adiciona@@Base+0x204>
   112fc:	add	r0, pc, r0
   11300:	bl	10c58 <printf@plt>
   11304:	mov	r0, r5
   11308:	bl	11db8 <grafo_apaga@@Base>
   1130c:	add	r4, r4, #1
   11310:	b	11324 <teste_grafo_adiciona@@Base+0x18c>
   11314:	mov	r0, r5
   11318:	bl	11db8 <grafo_apaga@@Base>
   1131c:	cmp	r4, #0
   11320:	beq	1135c <teste_grafo_adiciona@@Base+0x1c4>
   11324:	mov	r0, #10
   11328:	bl	10cc4 <putchar@plt>
   1132c:	mov	r0, r4
   11330:	sub	sp, fp, #8
   11334:	pop	{r4, r5, fp, pc}
   11338:	ldr	r1, [r1]
   1133c:	cmp	r1, #8
   11340:	beq	11370 <teste_grafo_adiciona@@Base+0x1d8>
   11344:	cmp	r1, #2
   11348:	bne	11280 <teste_grafo_adiciona@@Base+0xe8>
   1134c:	ldr	r0, [r0]
   11350:	cmp	r0, #8
   11354:	bne	11280 <teste_grafo_adiciona@@Base+0xe8>
   11358:	b	11290 <teste_grafo_adiciona@@Base+0xf8>
   1135c:	ldr	r0, [pc, #60]	; 113a0 <teste_grafo_adiciona@@Base+0x208>
   11360:	add	r0, pc, r0
   11364:	bl	10c7c <puts@plt>
   11368:	mov	r4, #0
   1136c:	b	1132c <teste_grafo_adiciona@@Base+0x194>
   11370:	ldr	r0, [r0]
   11374:	cmp	r0, #2
   11378:	bne	11280 <teste_grafo_adiciona@@Base+0xe8>
   1137c:	b	11290 <teste_grafo_adiciona@@Base+0xf8>
   11380:	andeq	r1, r0, r1, asr #12
   11384:	andeq	r1, r0, ip, lsr #12
   11388:	andeq	r1, r0, sl, lsr r6
   1138c:	ldrdeq	r1, [r0], -r8
   11390:	andeq	r1, r0, r8, lsl #12
   11394:	andeq	r1, r0, fp, lsl r6
   11398:	andeq	r1, r0, fp, lsr #12
   1139c:	andeq	r1, r0, sl, lsr r6
   113a0:	andeq	r1, r0, lr, asr #20

000113a4 <teste_grafo_remove@@Base>:
   113a4:	push	{r4, r5, fp, lr}
   113a8:	add	fp, sp, #8
   113ac:	sub	sp, sp, #16
   113b0:	mov	r0, #1
   113b4:	mov	r1, #7
   113b8:	mov	r2, #2
   113bc:	mov	r3, #2
   113c0:	stm	sp, {r1, r2}
   113c4:	str	r1, [sp, #8]
   113c8:	str	r0, [sp, #12]
   113cc:	mov	r0, #9
   113d0:	mov	r1, #6
   113d4:	mov	r2, #3
   113d8:	bl	10dcc <_g@@Base>
   113dc:	mov	r5, r0
   113e0:	ldr	r0, [pc, #324]	; 1152c <teste_grafo_remove@@Base+0x188>
   113e4:	add	r0, pc, r0
   113e8:	bl	10c58 <printf@plt>
   113ec:	mov	r0, r5
   113f0:	mov	r1, #7
   113f4:	mov	r2, #1
   113f8:	bl	11f30 <grafo_remove@@Base>
   113fc:	mov	r4, #0
   11400:	cmp	r0, #1
   11404:	beq	11418 <teste_grafo_remove@@Base+0x74>
   11408:	ldr	r0, [pc, #288]	; 11530 <teste_grafo_remove@@Base+0x18c>
   1140c:	add	r0, pc, r0
   11410:	bl	10c58 <printf@plt>
   11414:	mov	r4, #1
   11418:	ldr	r0, [r5, #4]
   1141c:	ldr	r0, [r0, #60]	; 0x3c
   11420:	cmp	r0, #0
   11424:	beq	11440 <teste_grafo_remove@@Base+0x9c>
   11428:	ldr	r1, [r0, #4]
   1142c:	cmp	r1, #0
   11430:	bne	11440 <teste_grafo_remove@@Base+0x9c>
   11434:	ldr	r0, [r0]
   11438:	cmp	r0, #2
   1143c:	beq	11450 <teste_grafo_remove@@Base+0xac>
   11440:	ldr	r0, [pc, #236]	; 11534 <teste_grafo_remove@@Base+0x190>
   11444:	add	r0, pc, r0
   11448:	bl	10c58 <printf@plt>
   1144c:	add	r4, r4, #1
   11450:	mov	r0, r5
   11454:	mov	r1, #7
   11458:	mov	r2, #2
   1145c:	bl	11f30 <grafo_remove@@Base>
   11460:	cmp	r0, #1
   11464:	beq	11478 <teste_grafo_remove@@Base+0xd4>
   11468:	ldr	r0, [pc, #200]	; 11538 <teste_grafo_remove@@Base+0x194>
   1146c:	add	r0, pc, r0
   11470:	bl	10c58 <printf@plt>
   11474:	add	r4, r4, #1
   11478:	ldr	r0, [r5, #4]
   1147c:	ldr	r0, [r0, #60]	; 0x3c
   11480:	cmp	r0, #0
   11484:	beq	11498 <teste_grafo_remove@@Base+0xf4>
   11488:	ldr	r0, [pc, #172]	; 1153c <teste_grafo_remove@@Base+0x198>
   1148c:	add	r0, pc, r0
   11490:	bl	10c58 <printf@plt>
   11494:	add	r4, r4, #1
   11498:	mov	r0, r5
   1149c:	mov	r1, #4
   114a0:	mov	r2, #0
   114a4:	bl	11f30 <grafo_remove@@Base>
   114a8:	cmp	r0, #0
   114ac:	beq	114c0 <teste_grafo_remove@@Base+0x11c>
   114b0:	ldr	r0, [pc, #136]	; 11540 <teste_grafo_remove@@Base+0x19c>
   114b4:	add	r0, pc, r0
   114b8:	bl	10c58 <printf@plt>
   114bc:	add	r4, r4, #1
   114c0:	mov	r0, r5
   114c4:	mov	r1, #7
   114c8:	mov	r2, #22
   114cc:	bl	11f30 <grafo_remove@@Base>
   114d0:	cmn	r0, #1
   114d4:	beq	114f4 <teste_grafo_remove@@Base+0x150>
   114d8:	ldr	r0, [pc, #100]	; 11544 <teste_grafo_remove@@Base+0x1a0>
   114dc:	add	r0, pc, r0
   114e0:	bl	10c58 <printf@plt>
   114e4:	mov	r0, r5
   114e8:	bl	11db8 <grafo_apaga@@Base>
   114ec:	add	r4, r4, #1
   114f0:	b	11504 <teste_grafo_remove@@Base+0x160>
   114f4:	mov	r0, r5
   114f8:	bl	11db8 <grafo_apaga@@Base>
   114fc:	cmp	r4, #0
   11500:	beq	11518 <teste_grafo_remove@@Base+0x174>
   11504:	mov	r0, #10
   11508:	bl	10cc4 <putchar@plt>
   1150c:	mov	r0, r4
   11510:	sub	sp, fp, #8
   11514:	pop	{r4, r5, fp, pc}
   11518:	ldr	r0, [pc, #40]	; 11548 <teste_grafo_remove@@Base+0x1a4>
   1151c:	add	r0, pc, r0
   11520:	bl	10c7c <puts@plt>
   11524:	mov	r4, #0
   11528:	b	1150c <teste_grafo_remove@@Base+0x168>
   1152c:	andeq	r1, r0, r7, lsl #11
   11530:	andeq	r1, r0, r0, ror r5
   11534:	andeq	r1, r0, r2, ror r5
   11538:	andeq	r1, r0, r0, lsl r5
   1153c:	andeq	r1, r0, sl, lsr #10
   11540:	andeq	r1, r0, fp, lsr r5
   11544:	andeq	r1, r0, pc, asr #10
   11548:	muleq	r0, r2, r8

0001154c <teste_v_sucessores@@Base>:
   1154c:	push	{r4, r5, r6, r7, fp, lr}
   11550:	add	fp, sp, #16
   11554:	sub	sp, sp, #80	; 0x50
   11558:	mov	r1, #6
   1155c:	mov	r0, #3
   11560:	mov	r6, #1
   11564:	mov	r7, #0
   11568:	mov	r2, #4
   1156c:	mov	r3, #2
   11570:	str	r0, [sp, #68]	; 0x44
   11574:	mov	r0, #7
   11578:	str	r1, [sp, #64]	; 0x40
   1157c:	str	r1, [sp, #44]	; 0x2c
   11580:	str	r1, [sp, #60]	; 0x3c
   11584:	mov	r1, #5
   11588:	str	r7, [sp, #72]	; 0x48
   1158c:	str	r6, [sp, #76]	; 0x4c
   11590:	str	r2, [sp, #32]
   11594:	str	r7, [sp, #36]	; 0x24
   11598:	str	r2, [sp, #40]	; 0x28
   1159c:	str	r6, [sp, #48]	; 0x30
   115a0:	str	r6, [sp, #52]	; 0x34
   115a4:	str	r0, [sp, #56]	; 0x38
   115a8:	stm	sp, {r0, r3, r7}
   115ac:	str	r3, [sp, #12]
   115b0:	str	r0, [sp, #16]
   115b4:	str	r2, [sp, #28]
   115b8:	str	r1, [sp, #20]
   115bc:	str	r1, [sp, #24]
   115c0:	mov	r0, #8
   115c4:	mov	r1, #22
   115c8:	mov	r2, #3
   115cc:	mov	r3, #2
   115d0:	bl	10dcc <_g@@Base>
   115d4:	mov	r4, r0
   115d8:	ldr	r0, [pc, #408]	; 11778 <teste_v_sucessores@@Base+0x22c>
   115dc:	add	r0, pc, r0
   115e0:	bl	10c58 <printf@plt>
   115e4:	mov	r0, r4
   115e8:	mov	r1, #7
   115ec:	bl	11fdc <v_sucessores@@Base>
   115f0:	cmp	r0, #0
   115f4:	beq	11650 <teste_v_sucessores@@Base+0x104>
   115f8:	mov	r5, r0
   115fc:	ldr	r0, [r0]
   11600:	cmp	r0, #3
   11604:	beq	11624 <teste_v_sucessores@@Base+0xd8>
   11608:	ldr	r0, [pc, #368]	; 11780 <teste_v_sucessores@@Base+0x234>
   1160c:	add	r0, pc, r0
   11610:	bl	10c58 <printf@plt>
   11614:	ldr	r0, [r5]
   11618:	mov	r7, #1
   1161c:	cmp	r0, #1
   11620:	blt	116c4 <teste_v_sucessores@@Base+0x178>
   11624:	mov	r6, #0
   11628:	mov	r0, r5
   1162c:	mov	r1, r6
   11630:	bl	12350 <vetor_elemento@@Base>
   11634:	ldr	r1, [r5]
   11638:	cmp	r0, #2
   1163c:	beq	11660 <teste_v_sucessores@@Base+0x114>
   11640:	add	r6, r6, #1
   11644:	cmp	r6, r1
   11648:	blt	11628 <teste_v_sucessores@@Base+0xdc>
   1164c:	b	116c4 <teste_v_sucessores@@Base+0x178>
   11650:	ldr	r0, [pc, #292]	; 1177c <teste_v_sucessores@@Base+0x230>
   11654:	add	r0, pc, r0
   11658:	bl	10c58 <printf@plt>
   1165c:	b	11750 <teste_v_sucessores@@Base+0x204>
   11660:	cmp	r1, #1
   11664:	blt	116c4 <teste_v_sucessores@@Base+0x178>
   11668:	mov	r6, #0
   1166c:	mov	r0, r5
   11670:	mov	r1, r6
   11674:	bl	12350 <vetor_elemento@@Base>
   11678:	ldr	r1, [r5]
   1167c:	cmp	r0, #5
   11680:	beq	11694 <teste_v_sucessores@@Base+0x148>
   11684:	add	r6, r6, #1
   11688:	cmp	r6, r1
   1168c:	blt	1166c <teste_v_sucessores@@Base+0x120>
   11690:	b	116c4 <teste_v_sucessores@@Base+0x178>
   11694:	cmp	r1, #1
   11698:	blt	116c4 <teste_v_sucessores@@Base+0x178>
   1169c:	mov	r6, #0
   116a0:	mov	r0, r5
   116a4:	mov	r1, r6
   116a8:	bl	12350 <vetor_elemento@@Base>
   116ac:	cmp	r0, #6
   116b0:	beq	116d4 <teste_v_sucessores@@Base+0x188>
   116b4:	ldr	r0, [r5]
   116b8:	add	r6, r6, #1
   116bc:	cmp	r6, r0
   116c0:	blt	116a0 <teste_v_sucessores@@Base+0x154>
   116c4:	ldr	r0, [pc, #184]	; 11784 <teste_v_sucessores@@Base+0x238>
   116c8:	add	r0, pc, r0
   116cc:	bl	10c58 <printf@plt>
   116d0:	add	r7, r7, #1
   116d4:	mov	r0, r5
   116d8:	bl	122e4 <vetor_apaga@@Base>
   116dc:	mov	r0, r4
   116e0:	mov	r1, #2
   116e4:	bl	11fdc <v_sucessores@@Base>
   116e8:	cmp	r0, #0
   116ec:	beq	11714 <teste_v_sucessores@@Base+0x1c8>
   116f0:	mov	r5, r0
   116f4:	ldr	r0, [r0]
   116f8:	cmp	r0, #0
   116fc:	beq	11734 <teste_v_sucessores@@Base+0x1e8>
   11700:	ldr	r0, [pc, #136]	; 11790 <teste_v_sucessores@@Base+0x244>
   11704:	add	r0, pc, r0
   11708:	bl	10c58 <printf@plt>
   1170c:	add	r6, r7, #1
   11710:	b	11738 <teste_v_sucessores@@Base+0x1ec>
   11714:	ldr	r0, [pc, #108]	; 11788 <teste_v_sucessores@@Base+0x23c>
   11718:	add	r0, pc, r0
   1171c:	bl	10c58 <printf@plt>
   11720:	mov	r0, #1
   11724:	cmp	r0, #0
   11728:	beq	1175c <teste_v_sucessores@@Base+0x210>
   1172c:	add	r6, r7, #1
   11730:	b	11750 <teste_v_sucessores@@Base+0x204>
   11734:	mov	r6, r7
   11738:	mov	r0, r5
   1173c:	bl	122e4 <vetor_apaga@@Base>
   11740:	mov	r0, r4
   11744:	bl	11db8 <grafo_apaga@@Base>
   11748:	cmp	r6, #0
   1174c:	beq	1175c <teste_v_sucessores@@Base+0x210>
   11750:	mov	r0, #10
   11754:	bl	10cc4 <putchar@plt>
   11758:	b	1176c <teste_v_sucessores@@Base+0x220>
   1175c:	ldr	r0, [pc, #40]	; 1178c <teste_v_sucessores@@Base+0x240>
   11760:	add	r0, pc, r0
   11764:	bl	10c7c <puts@plt>
   11768:	mov	r6, #0
   1176c:	mov	r0, r6
   11770:	sub	sp, fp, #16
   11774:	pop	{r4, r5, r6, r7, fp, pc}
   11778:	andeq	r1, r0, r7, lsl #9
   1177c:	andeq	r1, r0, r0, lsr #8
   11780:	muleq	r0, r5, r4
   11784:	andeq	r1, r0, r4, lsl #8
   11788:	andeq	r1, r0, r0, ror #7
   1178c:	andeq	r1, r0, lr, asr #12
   11790:	andeq	r1, r0, r2, lsr r4

00011794 <teste_v_antecessores@@Base>:
   11794:	push	{r4, r5, r6, r7, fp, lr}
   11798:	add	fp, sp, #16
   1179c:	sub	sp, sp, #80	; 0x50
   117a0:	mov	r1, #6
   117a4:	mov	r0, #3
   117a8:	mov	r6, #1
   117ac:	mov	r7, #0
   117b0:	mov	r2, #4
   117b4:	mov	r3, #2
   117b8:	str	r0, [sp, #68]	; 0x44
   117bc:	mov	r0, #7
   117c0:	str	r1, [sp, #64]	; 0x40
   117c4:	str	r1, [sp, #44]	; 0x2c
   117c8:	str	r1, [sp, #60]	; 0x3c
   117cc:	mov	r1, #5
   117d0:	str	r7, [sp, #72]	; 0x48
   117d4:	str	r6, [sp, #76]	; 0x4c
   117d8:	str	r2, [sp, #32]
   117dc:	str	r7, [sp, #36]	; 0x24
   117e0:	str	r2, [sp, #40]	; 0x28
   117e4:	str	r6, [sp, #48]	; 0x30
   117e8:	str	r6, [sp, #52]	; 0x34
   117ec:	str	r0, [sp, #56]	; 0x38
   117f0:	stm	sp, {r0, r3, r7}
   117f4:	str	r3, [sp, #12]
   117f8:	str	r0, [sp, #16]
   117fc:	str	r2, [sp, #28]
   11800:	str	r1, [sp, #20]
   11804:	str	r1, [sp, #24]
   11808:	mov	r0, #8
   1180c:	mov	r1, #22
   11810:	mov	r2, #3
   11814:	mov	r3, #2
   11818:	bl	10dcc <_g@@Base>
   1181c:	mov	r4, r0
   11820:	ldr	r0, [pc, #408]	; 119c0 <teste_v_antecessores@@Base+0x22c>
   11824:	add	r0, pc, r0
   11828:	bl	10c58 <printf@plt>
   1182c:	mov	r0, r4
   11830:	mov	r1, #2
   11834:	bl	12054 <v_antecessores@@Base>
   11838:	cmp	r0, #0
   1183c:	beq	11898 <teste_v_antecessores@@Base+0x104>
   11840:	mov	r5, r0
   11844:	ldr	r0, [r0]
   11848:	cmp	r0, #3
   1184c:	beq	1186c <teste_v_antecessores@@Base+0xd8>
   11850:	ldr	r0, [pc, #368]	; 119c8 <teste_v_antecessores@@Base+0x234>
   11854:	add	r0, pc, r0
   11858:	bl	10c58 <printf@plt>
   1185c:	ldr	r0, [r5]
   11860:	mov	r7, #1
   11864:	cmp	r0, #1
   11868:	blt	1190c <teste_v_antecessores@@Base+0x178>
   1186c:	mov	r6, #0
   11870:	mov	r0, r5
   11874:	mov	r1, r6
   11878:	bl	12350 <vetor_elemento@@Base>
   1187c:	ldr	r1, [r5]
   11880:	cmp	r0, #0
   11884:	beq	118a8 <teste_v_antecessores@@Base+0x114>
   11888:	add	r6, r6, #1
   1188c:	cmp	r6, r1
   11890:	blt	11870 <teste_v_antecessores@@Base+0xdc>
   11894:	b	1190c <teste_v_antecessores@@Base+0x178>
   11898:	ldr	r0, [pc, #292]	; 119c4 <teste_v_antecessores@@Base+0x230>
   1189c:	add	r0, pc, r0
   118a0:	bl	10c58 <printf@plt>
   118a4:	b	11998 <teste_v_antecessores@@Base+0x204>
   118a8:	cmp	r1, #1
   118ac:	blt	1190c <teste_v_antecessores@@Base+0x178>
   118b0:	mov	r6, #0
   118b4:	mov	r0, r5
   118b8:	mov	r1, r6
   118bc:	bl	12350 <vetor_elemento@@Base>
   118c0:	ldr	r1, [r5]
   118c4:	cmp	r0, #3
   118c8:	beq	118dc <teste_v_antecessores@@Base+0x148>
   118cc:	add	r6, r6, #1
   118d0:	cmp	r6, r1
   118d4:	blt	118b4 <teste_v_antecessores@@Base+0x120>
   118d8:	b	1190c <teste_v_antecessores@@Base+0x178>
   118dc:	cmp	r1, #1
   118e0:	blt	1190c <teste_v_antecessores@@Base+0x178>
   118e4:	mov	r6, #0
   118e8:	mov	r0, r5
   118ec:	mov	r1, r6
   118f0:	bl	12350 <vetor_elemento@@Base>
   118f4:	cmp	r0, #7
   118f8:	beq	1191c <teste_v_antecessores@@Base+0x188>
   118fc:	ldr	r0, [r5]
   11900:	add	r6, r6, #1
   11904:	cmp	r6, r0
   11908:	blt	118e8 <teste_v_antecessores@@Base+0x154>
   1190c:	ldr	r0, [pc, #184]	; 119cc <teste_v_antecessores@@Base+0x238>
   11910:	add	r0, pc, r0
   11914:	bl	10c58 <printf@plt>
   11918:	add	r7, r7, #1
   1191c:	mov	r0, r5
   11920:	bl	122e4 <vetor_apaga@@Base>
   11924:	mov	r0, r4
   11928:	mov	r1, #7
   1192c:	bl	12054 <v_antecessores@@Base>
   11930:	cmp	r0, #0
   11934:	beq	1195c <teste_v_antecessores@@Base+0x1c8>
   11938:	mov	r5, r0
   1193c:	ldr	r0, [r0]
   11940:	cmp	r0, #0
   11944:	beq	1197c <teste_v_antecessores@@Base+0x1e8>
   11948:	ldr	r0, [pc, #136]	; 119d8 <teste_v_antecessores@@Base+0x244>
   1194c:	add	r0, pc, r0
   11950:	bl	10c58 <printf@plt>
   11954:	add	r6, r7, #1
   11958:	b	11980 <teste_v_antecessores@@Base+0x1ec>
   1195c:	ldr	r0, [pc, #108]	; 119d0 <teste_v_antecessores@@Base+0x23c>
   11960:	add	r0, pc, r0
   11964:	bl	10c58 <printf@plt>
   11968:	mov	r0, #1
   1196c:	cmp	r0, #0
   11970:	beq	119a4 <teste_v_antecessores@@Base+0x210>
   11974:	add	r6, r7, #1
   11978:	b	11998 <teste_v_antecessores@@Base+0x204>
   1197c:	mov	r6, r7
   11980:	mov	r0, r5
   11984:	bl	122e4 <vetor_apaga@@Base>
   11988:	mov	r0, r4
   1198c:	bl	11db8 <grafo_apaga@@Base>
   11990:	cmp	r6, #0
   11994:	beq	119a4 <teste_v_antecessores@@Base+0x210>
   11998:	mov	r0, #10
   1199c:	bl	10cc4 <putchar@plt>
   119a0:	b	119b4 <teste_v_antecessores@@Base+0x220>
   119a4:	ldr	r0, [pc, #40]	; 119d4 <teste_v_antecessores@@Base+0x240>
   119a8:	add	r0, pc, r0
   119ac:	bl	10c7c <puts@plt>
   119b0:	mov	r6, #0
   119b4:	mov	r0, r6
   119b8:	sub	sp, fp, #16
   119bc:	pop	{r4, r5, r6, r7, fp, pc}
   119c0:	andeq	r1, r0, r0, asr #6
   119c4:	ldrdeq	r1, [r0], -fp
   119c8:	andeq	r1, r0, r2, asr r3
   119cc:	andeq	r1, r0, r3, asr #5
   119d0:	andeq	r1, r0, r1, lsr #5
   119d4:	andeq	r1, r0, r6, lsl #8
   119d8:	strdeq	r1, [r0], -r5

000119dc <teste_v_grau@@Base>:
   119dc:	push	{r4, r5, fp, lr}
   119e0:	add	fp, sp, #8
   119e4:	sub	sp, sp, #80	; 0x50
   119e8:	mov	r0, #1
   119ec:	mov	r4, #0
   119f0:	mov	r2, #6
   119f4:	mov	r3, #4
   119f8:	mov	r1, #3
   119fc:	add	ip, sp, #52	; 0x34
   11a00:	str	r1, [sp, #68]	; 0x44
   11a04:	str	r2, [sp, #64]	; 0x40
   11a08:	str	r4, [sp, #72]	; 0x48
   11a0c:	str	r0, [sp, #76]	; 0x4c
   11a10:	mov	r1, #7
   11a14:	str	r3, [sp, #32]
   11a18:	str	r4, [sp, #36]	; 0x24
   11a1c:	str	r3, [sp, #40]	; 0x28
   11a20:	str	r2, [sp, #44]	; 0x2c
   11a24:	str	r0, [sp, #48]	; 0x30
   11a28:	stm	ip, {r0, r1, r2}
   11a2c:	mov	r2, #2
   11a30:	mov	r0, #5
   11a34:	stm	sp, {r1, r2, r4}
   11a38:	str	r2, [sp, #12]
   11a3c:	str	r1, [sp, #16]
   11a40:	str	r3, [sp, #28]
   11a44:	str	r0, [sp, #20]
   11a48:	str	r0, [sp, #24]
   11a4c:	mov	r0, #8
   11a50:	mov	r1, #22
   11a54:	mov	r2, #3
   11a58:	mov	r3, #2
   11a5c:	bl	10dcc <_g@@Base>
   11a60:	mov	r5, r0
   11a64:	ldr	r0, [pc, #176]	; 11b1c <teste_v_grau@@Base+0x140>
   11a68:	add	r0, pc, r0
   11a6c:	bl	10c58 <printf@plt>
   11a70:	mov	r0, r5
   11a74:	mvn	r1, #3
   11a78:	bl	120f4 <v_grau@@Base>
   11a7c:	cmn	r0, #1
   11a80:	beq	11a94 <teste_v_grau@@Base+0xb8>
   11a84:	ldr	r0, [pc, #148]	; 11b20 <teste_v_grau@@Base+0x144>
   11a88:	add	r0, pc, r0
   11a8c:	bl	10c58 <printf@plt>
   11a90:	mov	r4, #1
   11a94:	mov	r0, r5
   11a98:	mov	r1, #7
   11a9c:	bl	120f4 <v_grau@@Base>
   11aa0:	cmp	r0, #3
   11aa4:	beq	11ab8 <teste_v_grau@@Base+0xdc>
   11aa8:	ldr	r0, [pc, #116]	; 11b24 <teste_v_grau@@Base+0x148>
   11aac:	add	r0, pc, r0
   11ab0:	bl	10c58 <printf@plt>
   11ab4:	add	r4, r4, #1
   11ab8:	mov	r0, r5
   11abc:	mov	r1, #5
   11ac0:	bl	120f4 <v_grau@@Base>
   11ac4:	cmp	r0, #2
   11ac8:	bne	11af0 <teste_v_grau@@Base+0x114>
   11acc:	mov	r0, r5
   11ad0:	bl	11db8 <grafo_apaga@@Base>
   11ad4:	cmp	r4, #0
   11ad8:	bne	11b08 <teste_v_grau@@Base+0x12c>
   11adc:	ldr	r0, [pc, #72]	; 11b2c <teste_v_grau@@Base+0x150>
   11ae0:	add	r0, pc, r0
   11ae4:	bl	10c7c <puts@plt>
   11ae8:	mov	r4, #0
   11aec:	b	11b10 <teste_v_grau@@Base+0x134>
   11af0:	ldr	r0, [pc, #48]	; 11b28 <teste_v_grau@@Base+0x14c>
   11af4:	add	r0, pc, r0
   11af8:	bl	10c58 <printf@plt>
   11afc:	mov	r0, r5
   11b00:	bl	11db8 <grafo_apaga@@Base>
   11b04:	add	r4, r4, #1
   11b08:	mov	r0, #10
   11b0c:	bl	10cc4 <putchar@plt>
   11b10:	mov	r0, r4
   11b14:	sub	sp, fp, #8
   11b18:	pop	{r4, r5, fp, pc}
   11b1c:	andeq	r1, r0, r9, lsl #4
   11b20:	strdeq	r1, [r0], -r4
   11b24:	andeq	r1, r0, r0, lsl #4
   11b28:	andeq	r1, r0, r7, ror #3
   11b2c:	andeq	r1, r0, lr, asr #5

00011b30 <teste_v_celebridade@@Base>:
   11b30:	push	{r4, r5, fp, lr}
   11b34:	add	fp, sp, #8
   11b38:	sub	sp, sp, #112	; 0x70
   11b3c:	mov	r1, #4
   11b40:	add	r0, sp, #96	; 0x60
   11b44:	mov	r2, #2
   11b48:	mov	ip, #5
   11b4c:	mov	r3, #6
   11b50:	mov	r4, #1
   11b54:	mov	r5, #0
   11b58:	add	lr, sp, #40	; 0x28
   11b5c:	stm	r0, {r1, r2, ip}
   11b60:	mov	r0, #3
   11b64:	str	r2, [sp, #108]	; 0x6c
   11b68:	str	r3, [sp, #64]	; 0x40
   11b6c:	str	r5, [sp, #72]	; 0x48
   11b70:	str	r4, [sp, #76]	; 0x4c
   11b74:	str	r4, [sp, #80]	; 0x50
   11b78:	str	r2, [sp, #84]	; 0x54
   11b7c:	str	r3, [sp, #88]	; 0x58
   11b80:	str	r2, [sp, #92]	; 0x5c
   11b84:	str	r1, [sp, #32]
   11b88:	str	r5, [sp, #36]	; 0x24
   11b8c:	str	r0, [sp, #68]	; 0x44
   11b90:	mov	r0, #7
   11b94:	stm	lr, {r1, r3, r4}
   11b98:	str	r3, [sp, #60]	; 0x3c
   11b9c:	str	r4, [sp, #52]	; 0x34
   11ba0:	mov	r3, #2
   11ba4:	str	r0, [sp, #56]	; 0x38
   11ba8:	stm	sp, {r0, r2, r5}
   11bac:	str	r2, [sp, #12]
   11bb0:	str	r0, [sp, #16]
   11bb4:	str	r1, [sp, #28]
   11bb8:	mov	r0, #8
   11bbc:	mov	r1, #30
   11bc0:	mov	r2, #3
   11bc4:	str	ip, [sp, #20]
   11bc8:	str	ip, [sp, #24]
   11bcc:	bl	10dcc <_g@@Base>
   11bd0:	mov	r4, r0
   11bd4:	ldr	r0, [pc, #144]	; 11c6c <teste_v_celebridade@@Base+0x13c>
   11bd8:	add	r0, pc, r0
   11bdc:	bl	10c58 <printf@plt>
   11be0:	mov	r0, r4
   11be4:	mov	r1, #7
   11be8:	bl	12220 <v_celebridade@@Base>
   11bec:	cmp	r0, #0
   11bf0:	beq	11c04 <teste_v_celebridade@@Base+0xd4>
   11bf4:	ldr	r0, [pc, #116]	; 11c70 <teste_v_celebridade@@Base+0x140>
   11bf8:	add	r0, pc, r0
   11bfc:	bl	10c58 <printf@plt>
   11c00:	mov	r5, #1
   11c04:	mov	r0, r4
   11c08:	mov	r1, #2
   11c0c:	bl	12220 <v_celebridade@@Base>
   11c10:	cmp	r0, #1
   11c14:	bne	11c40 <teste_v_celebridade@@Base+0x110>
   11c18:	mov	r0, r4
   11c1c:	bl	11db8 <grafo_apaga@@Base>
   11c20:	mov	r4, #1
   11c24:	cmp	r5, #0
   11c28:	bne	11c58 <teste_v_celebridade@@Base+0x128>
   11c2c:	ldr	r0, [pc, #68]	; 11c78 <teste_v_celebridade@@Base+0x148>
   11c30:	add	r0, pc, r0
   11c34:	bl	10c7c <puts@plt>
   11c38:	mov	r4, #0
   11c3c:	b	11c60 <teste_v_celebridade@@Base+0x130>
   11c40:	ldr	r0, [pc, #44]	; 11c74 <teste_v_celebridade@@Base+0x144>
   11c44:	add	r0, pc, r0
   11c48:	bl	10c58 <printf@plt>
   11c4c:	mov	r0, r4
   11c50:	bl	11db8 <grafo_apaga@@Base>
   11c54:	add	r4, r5, #1
   11c58:	mov	r0, #10
   11c5c:	bl	10cc4 <putchar@plt>
   11c60:	mov	r0, r4
   11c64:	sub	sp, fp, #8
   11c68:	pop	{r4, r5, fp, pc}
   11c6c:	andeq	r1, r0, r2, lsr r1
   11c70:	andeq	r1, r0, r4, lsr #2
   11c74:	andeq	r1, r0, r0, lsl r1
   11c78:	andeq	r1, r0, lr, ror r1

00011c7c <main@@Base>:
   11c7c:	push	{r4, sl, fp, lr}
   11c80:	add	fp, sp, #8
   11c84:	ldr	r0, [pc, #156]	; 11d28 <main@@Base+0xac>
   11c88:	mov	r1, #0
   11c8c:	mov	r2, #2
   11c90:	mov	r3, #0
   11c94:	ldr	r0, [pc, r0]
   11c98:	ldr	r0, [r0]
   11c9c:	bl	10cac <setvbuf@plt>
   11ca0:	ldr	r0, [pc, #132]	; 11d2c <main@@Base+0xb0>
   11ca4:	mov	r1, #0
   11ca8:	mov	r2, #2
   11cac:	mov	r3, #0
   11cb0:	ldr	r0, [pc, r0]
   11cb4:	ldr	r0, [r0]
   11cb8:	bl	10cac <setvbuf@plt>
   11cbc:	bl	10eec <teste_grafo_novo@@Base>
   11cc0:	mov	r4, r0
   11cc4:	bl	11008 <teste_grafo_aresta@@Base>
   11cc8:	add	r4, r0, r4
   11ccc:	bl	11198 <teste_grafo_adiciona@@Base>
   11cd0:	add	r4, r4, r0
   11cd4:	bl	113a4 <teste_grafo_remove@@Base>
   11cd8:	add	r4, r4, r0
   11cdc:	bl	1154c <teste_v_sucessores@@Base>
   11ce0:	add	r4, r4, r0
   11ce4:	bl	11794 <teste_v_antecessores@@Base>
   11ce8:	add	r4, r4, r0
   11cec:	bl	119dc <teste_v_grau@@Base>
   11cf0:	add	r4, r4, r0
   11cf4:	bl	11b30 <teste_v_celebridade@@Base>
   11cf8:	adds	r1, r4, r0
   11cfc:	beq	11d14 <main@@Base+0x98>
   11d00:	ldr	r0, [pc, #44]	; 11d34 <main@@Base+0xb8>
   11d04:	add	r0, pc, r0
   11d08:	bl	10c58 <printf@plt>
   11d0c:	mov	r0, #0
   11d10:	pop	{r4, sl, fp, pc}
   11d14:	ldr	r0, [pc, #20]	; 11d30 <main@@Base+0xb4>
   11d18:	add	r0, pc, r0
   11d1c:	bl	10c7c <puts@plt>
   11d20:	mov	r0, #0
   11d24:	pop	{r4, sl, fp, pc}
   11d28:	andeq	r1, r1, r8, lsr #7
   11d2c:	andeq	r1, r1, r4, lsl #7
   11d30:	muleq	r0, r9, r0
   11d34:	andeq	r1, r0, r4, lsl #1

00011d38 <cria_elem@@Base>:
   11d38:	push	{r4, sl, fp, lr}
   11d3c:	add	fp, sp, #8
   11d40:	mov	r4, r0
   11d44:	mov	r0, #8
   11d48:	bl	10c88 <malloc@plt>
   11d4c:	cmp	r0, #0
   11d50:	moveq	r0, #0
   11d54:	movne	r1, #0
   11d58:	strne	r4, [r0]
   11d5c:	strne	r1, [r0, #4]
   11d60:	pop	{r4, sl, fp, pc}

00011d64 <grafo_novo@@Base>:
   11d64:	push	{r4, r5, fp, lr}
   11d68:	add	fp, sp, #8
   11d6c:	cmp	r0, #1
   11d70:	blt	11dac <grafo_novo@@Base+0x48>
   11d74:	mov	r5, r0
   11d78:	mov	r0, #8
   11d7c:	bl	10c88 <malloc@plt>
   11d80:	str	r5, [r0]
   11d84:	lsl	r5, r5, #3
   11d88:	mov	r4, r0
   11d8c:	mov	r0, r5
   11d90:	bl	10c88 <malloc@plt>
   11d94:	mov	r1, #0
   11d98:	mov	r2, r5
   11d9c:	str	r0, [r4, #4]
   11da0:	bl	10cb8 <memset@plt>
   11da4:	mov	r0, r4
   11da8:	pop	{r4, r5, fp, pc}
   11dac:	mov	r4, #0
   11db0:	mov	r0, r4
   11db4:	pop	{r4, r5, fp, pc}

00011db8 <grafo_apaga@@Base>:
   11db8:	cmp	r0, #0
   11dbc:	bxeq	lr
   11dc0:	push	{r4, r5, r6, sl, fp, lr}
   11dc4:	add	fp, sp, #16
   11dc8:	ldr	r1, [r0]
   11dcc:	mov	r4, r0
   11dd0:	cmp	r1, #1
   11dd4:	blt	11e1c <grafo_apaga@@Base+0x64>
   11dd8:	mov	r5, #0
   11ddc:	b	11dec <grafo_apaga@@Base+0x34>
   11de0:	add	r5, r5, #1
   11de4:	cmp	r5, r1
   11de8:	bge	11e1c <grafo_apaga@@Base+0x64>
   11dec:	ldr	r0, [r4, #4]
   11df0:	add	r0, r0, r5, lsl #3
   11df4:	ldr	r0, [r0, #4]
   11df8:	cmp	r0, #0
   11dfc:	beq	11de0 <grafo_apaga@@Base+0x28>
   11e00:	ldr	r6, [r0, #4]
   11e04:	bl	10c64 <free@plt>
   11e08:	cmp	r6, #0
   11e0c:	mov	r0, r6
   11e10:	bne	11e00 <grafo_apaga@@Base+0x48>
   11e14:	ldr	r1, [r4]
   11e18:	b	11de0 <grafo_apaga@@Base+0x28>
   11e1c:	ldr	r0, [r4, #4]
   11e20:	bl	10c64 <free@plt>
   11e24:	mov	r0, r4
   11e28:	pop	{r4, r5, r6, sl, fp, lr}
   11e2c:	b	10c64 <free@plt>

00011e30 <grafo_aresta@@Base>:
   11e30:	mov	r3, r0
   11e34:	mvn	r0, #0
   11e38:	cmp	r3, #0
   11e3c:	beq	11e54 <grafo_aresta@@Base+0x24>
   11e40:	ldr	ip, [r3]
   11e44:	cmp	ip, r1
   11e48:	movge	r0, #0
   11e4c:	cmpge	ip, r2
   11e50:	bge	11e58 <grafo_aresta@@Base+0x28>
   11e54:	bx	lr
   11e58:	ldr	r3, [r3, #4]
   11e5c:	add	r1, r3, r1, lsl #3
   11e60:	ldr	r1, [r1, #4]
   11e64:	cmp	r1, #0
   11e68:	bxeq	lr
   11e6c:	ldr	r3, [r1]
   11e70:	cmp	r3, r2
   11e74:	bne	11e60 <grafo_aresta@@Base+0x30>
   11e78:	mov	r0, #1
   11e7c:	bx	lr

00011e80 <grafo_adiciona@@Base>:
   11e80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e84:	add	fp, sp, #24
   11e88:	mov	r5, r0
   11e8c:	mvn	r0, #0
   11e90:	cmp	r5, #0
   11e94:	beq	11eb0 <grafo_adiciona@@Base+0x30>
   11e98:	mov	r4, r1
   11e9c:	ldr	r1, [r5]
   11ea0:	cmp	r1, r4
   11ea4:	movge	r6, r2
   11ea8:	cmpge	r1, r2
   11eac:	bge	11eb4 <grafo_adiciona@@Base+0x34>
   11eb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11eb4:	ldr	r0, [r5, #4]
   11eb8:	add	r7, r0, r4, lsl #3
   11ebc:	ldr	r8, [r7, #4]!
   11ec0:	cmp	r8, #0
   11ec4:	beq	11ee4 <grafo_adiciona@@Base+0x64>
   11ec8:	mov	r0, r8
   11ecc:	ldr	r1, [r0]
   11ed0:	cmp	r1, r6
   11ed4:	beq	11f28 <grafo_adiciona@@Base+0xa8>
   11ed8:	ldr	r0, [r0, #4]
   11edc:	cmp	r0, #0
   11ee0:	bne	11ecc <grafo_adiciona@@Base+0x4c>
   11ee4:	mov	r0, #8
   11ee8:	bl	10c88 <malloc@plt>
   11eec:	cmp	r0, #0
   11ef0:	moveq	r0, #0
   11ef4:	movne	r1, #0
   11ef8:	strne	r6, [r0]
   11efc:	strne	r1, [r0, #4]
   11f00:	str	r0, [r7]
   11f04:	ldr	r0, [r5, #4]
   11f08:	add	r1, r0, r4, lsl #3
   11f0c:	ldr	r1, [r1, #4]
   11f10:	str	r8, [r1, #4]
   11f14:	ldr	r1, [r0]
   11f18:	add	r1, r1, #1
   11f1c:	str	r1, [r0]
   11f20:	mov	r0, #1
   11f24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11f28:	mov	r0, #0
   11f2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011f30 <grafo_remove@@Base>:
   11f30:	push	{r4, sl, fp, lr}
   11f34:	add	fp, sp, #8
   11f38:	mov	r4, r0
   11f3c:	mvn	r0, #0
   11f40:	cmp	r4, #0
   11f44:	beq	11f58 <grafo_remove@@Base+0x28>
   11f48:	ldr	r3, [r4]
   11f4c:	cmp	r3, r1
   11f50:	cmpge	r3, r2
   11f54:	bge	11f5c <grafo_remove@@Base+0x2c>
   11f58:	pop	{r4, sl, fp, pc}
   11f5c:	ldr	ip, [r4, #4]
   11f60:	mov	r0, #0
   11f64:	add	lr, ip, r1, lsl #3
   11f68:	ldr	r1, [lr, #4]!
   11f6c:	cmp	r1, #0
   11f70:	beq	11f58 <grafo_remove@@Base+0x28>
   11f74:	ldr	r3, [r1]
   11f78:	cmp	r3, r2
   11f7c:	bne	11f9c <grafo_remove@@Base+0x6c>
   11f80:	ldr	r0, [r1, #4]
   11f84:	str	r0, [lr]
   11f88:	ldr	r0, [r4, #4]
   11f8c:	ldr	r2, [r0]
   11f90:	sub	r2, r2, #1
   11f94:	str	r2, [r0]
   11f98:	b	11fcc <grafo_remove@@Base+0x9c>
   11f9c:	mov	r3, r1
   11fa0:	ldr	r1, [r1, #4]
   11fa4:	cmp	r1, #0
   11fa8:	beq	11f58 <grafo_remove@@Base+0x28>
   11fac:	ldr	r4, [r1]
   11fb0:	cmp	r4, r2
   11fb4:	bne	11f9c <grafo_remove@@Base+0x6c>
   11fb8:	ldr	r0, [r1, #4]
   11fbc:	str	r0, [r3, #4]
   11fc0:	ldr	r0, [ip]
   11fc4:	sub	r0, r0, #1
   11fc8:	str	r0, [ip]
   11fcc:	mov	r0, r1
   11fd0:	bl	10c64 <free@plt>
   11fd4:	mov	r0, #1
   11fd8:	pop	{r4, sl, fp, pc}

00011fdc <v_sucessores@@Base>:
   11fdc:	push	{r4, r5, r6, sl, fp, lr}
   11fe0:	add	fp, sp, #16
   11fe4:	mov	r4, #0
   11fe8:	cmp	r0, #0
   11fec:	beq	1204c <v_sucessores@@Base+0x70>
   11ff0:	mov	r5, r1
   11ff4:	cmp	r1, #0
   11ff8:	bmi	1204c <v_sucessores@@Base+0x70>
   11ffc:	mov	r6, r0
   12000:	ldr	r0, [r0]
   12004:	cmp	r0, r5
   12008:	ble	1204c <v_sucessores@@Base+0x70>
   1200c:	bl	122b8 <vetor_novo@@Base>
   12010:	mov	r4, r0
   12014:	ldr	r0, [r6, #4]
   12018:	add	r0, r0, r5, lsl #3
   1201c:	ldr	r6, [r0, #4]
   12020:	cmp	r6, #0
   12024:	beq	1204c <v_sucessores@@Base+0x70>
   12028:	mov	r5, #0
   1202c:	ldr	r1, [r6]
   12030:	mov	r0, r4
   12034:	mov	r2, r5
   12038:	bl	12380 <vetor_insere@@Base>
   1203c:	ldr	r6, [r6, #4]
   12040:	add	r5, r5, #1
   12044:	cmp	r6, #0
   12048:	bne	1202c <v_sucessores@@Base+0x50>
   1204c:	mov	r0, r4
   12050:	pop	{r4, r5, r6, sl, fp, pc}

00012054 <v_antecessores@@Base>:
   12054:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12058:	add	fp, sp, #24
   1205c:	mov	r8, #0
   12060:	cmp	r0, #0
   12064:	beq	120ec <v_antecessores@@Base+0x98>
   12068:	mov	r5, r1
   1206c:	cmp	r1, #0
   12070:	bmi	120ec <v_antecessores@@Base+0x98>
   12074:	mov	r6, r0
   12078:	ldr	r0, [r0]
   1207c:	cmp	r0, r5
   12080:	ble	120ec <v_antecessores@@Base+0x98>
   12084:	bl	122b8 <vetor_novo@@Base>
   12088:	mov	r8, r0
   1208c:	ldr	r0, [r6]
   12090:	cmp	r0, #1
   12094:	blt	120ec <v_antecessores@@Base+0x98>
   12098:	mov	r7, #0
   1209c:	mov	r4, #0
   120a0:	b	120b0 <v_antecessores@@Base+0x5c>
   120a4:	add	r4, r4, #1
   120a8:	cmp	r4, r0
   120ac:	bge	120ec <v_antecessores@@Base+0x98>
   120b0:	ldr	r1, [r6, #4]
   120b4:	add	r1, r1, r4, lsl #3
   120b8:	ldr	r1, [r1, #4]
   120bc:	cmp	r1, #0
   120c0:	beq	120a4 <v_antecessores@@Base+0x50>
   120c4:	ldr	r2, [r1]
   120c8:	cmp	r2, r5
   120cc:	bne	120b8 <v_antecessores@@Base+0x64>
   120d0:	mov	r0, r8
   120d4:	mov	r1, r4
   120d8:	mov	r2, r7
   120dc:	bl	12380 <vetor_insere@@Base>
   120e0:	ldr	r0, [r6]
   120e4:	add	r7, r7, #1
   120e8:	b	120a4 <v_antecessores@@Base+0x50>
   120ec:	mov	r0, r8
   120f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000120f4 <v_grau@@Base>:
   120f4:	cmp	r1, #0
   120f8:	mvnmi	r0, #0
   120fc:	bxmi	lr
   12100:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12104:	add	fp, sp, #24
   12108:	mov	r7, r0
   1210c:	cmp	r0, #0
   12110:	beq	121e8 <v_grau@@Base+0xf4>
   12114:	ldr	r0, [r7]
   12118:	mov	r6, r1
   1211c:	mov	r9, #0
   12120:	mov	r8, #0
   12124:	cmp	r0, r1
   12128:	ble	12194 <v_grau@@Base+0xa0>
   1212c:	bl	122b8 <vetor_novo@@Base>
   12130:	mov	r8, r0
   12134:	ldr	r0, [r7]
   12138:	cmp	r0, #1
   1213c:	blt	12194 <v_grau@@Base+0xa0>
   12140:	mov	r5, #0
   12144:	mov	r4, #0
   12148:	b	12158 <v_grau@@Base+0x64>
   1214c:	add	r4, r4, #1
   12150:	cmp	r4, r0
   12154:	bge	12194 <v_grau@@Base+0xa0>
   12158:	ldr	r1, [r7, #4]
   1215c:	add	r1, r1, r4, lsl #3
   12160:	ldr	r1, [r1, #4]
   12164:	cmp	r1, #0
   12168:	beq	1214c <v_grau@@Base+0x58>
   1216c:	ldr	r2, [r1]
   12170:	cmp	r2, r6
   12174:	bne	12160 <v_grau@@Base+0x6c>
   12178:	mov	r0, r8
   1217c:	mov	r1, r4
   12180:	mov	r2, r5
   12184:	bl	12380 <vetor_insere@@Base>
   12188:	ldr	r0, [r7]
   1218c:	add	r5, r5, #1
   12190:	b	1214c <v_grau@@Base+0x58>
   12194:	cmp	r6, #0
   12198:	bmi	121f0 <v_grau@@Base+0xfc>
   1219c:	cmp	r0, r6
   121a0:	ble	121f0 <v_grau@@Base+0xfc>
   121a4:	bl	122b8 <vetor_novo@@Base>
   121a8:	mov	r9, r0
   121ac:	ldr	r0, [r7, #4]
   121b0:	add	r0, r0, r6, lsl #3
   121b4:	ldr	r5, [r0, #4]
   121b8:	cmp	r5, #0
   121bc:	beq	121f0 <v_grau@@Base+0xfc>
   121c0:	mov	r4, #0
   121c4:	ldr	r1, [r5]
   121c8:	mov	r0, r9
   121cc:	mov	r2, r4
   121d0:	bl	12380 <vetor_insere@@Base>
   121d4:	ldr	r5, [r5, #4]
   121d8:	add	r4, r4, #1
   121dc:	cmp	r5, #0
   121e0:	bne	121c4 <v_grau@@Base+0xd0>
   121e4:	b	121f0 <v_grau@@Base+0xfc>
   121e8:	mov	r8, #0
   121ec:	mov	r9, #0
   121f0:	mov	r0, r8
   121f4:	bl	12340 <vetor_tamanho@@Base>
   121f8:	mov	r4, r0
   121fc:	mov	r0, r9
   12200:	bl	12340 <vetor_tamanho@@Base>
   12204:	mov	r5, r0
   12208:	mov	r0, r8
   1220c:	bl	122e4 <vetor_apaga@@Base>
   12210:	mov	r0, r9
   12214:	bl	122e4 <vetor_apaga@@Base>
   12218:	add	r0, r5, r4
   1221c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012220 <v_celebridade@@Base>:
   12220:	push	{r4, sl, fp, lr}
   12224:	add	fp, sp, #8
   12228:	cmp	r0, #0
   1222c:	beq	1224c <v_celebridade@@Base+0x2c>
   12230:	ldr	r3, [r0, #4]
   12234:	mov	r2, #0
   12238:	ldr	ip, [r3, r1, lsl #3]
   1223c:	cmp	ip, #0
   12240:	beq	12258 <v_celebridade@@Base+0x38>
   12244:	mov	r0, r2
   12248:	pop	{r4, sl, fp, pc}
   1224c:	mvn	r2, #0
   12250:	mov	r0, r2
   12254:	pop	{r4, sl, fp, pc}
   12258:	ldr	lr, [r0]
   1225c:	mov	ip, #0
   12260:	cmp	lr, #1
   12264:	blt	122a0 <v_celebridade@@Base+0x80>
   12268:	mov	r2, #0
   1226c:	b	1227c <v_celebridade@@Base+0x5c>
   12270:	add	r2, r2, #1
   12274:	cmp	r2, lr
   12278:	bge	122a0 <v_celebridade@@Base+0x80>
   1227c:	add	r0, r3, r2, lsl #3
   12280:	ldr	r0, [r0, #4]
   12284:	cmp	r0, #0
   12288:	beq	12270 <v_celebridade@@Base+0x50>
   1228c:	ldr	r4, [r0]
   12290:	cmp	r4, r1
   12294:	bne	12280 <v_celebridade@@Base+0x60>
   12298:	add	ip, ip, #1
   1229c:	b	12270 <v_celebridade@@Base+0x50>
   122a0:	sub	r0, ip, lr
   122a4:	add	r0, r0, #1
   122a8:	clz	r0, r0
   122ac:	lsr	r2, r0, #5
   122b0:	mov	r0, r2
   122b4:	pop	{r4, sl, fp, pc}

000122b8 <vetor_novo@@Base>:
   122b8:	push	{fp, lr}
   122bc:	mov	fp, sp
   122c0:	mov	r0, #12
   122c4:	bl	10c88 <malloc@plt>
   122c8:	cmp	r0, #0
   122cc:	moveq	r0, #0
   122d0:	movne	r1, #0
   122d4:	strne	r1, [r0]
   122d8:	strne	r1, [r0, #4]
   122dc:	strne	r1, [r0, #8]
   122e0:	pop	{fp, pc}

000122e4 <vetor_apaga@@Base>:
   122e4:	cmp	r0, #0
   122e8:	bxeq	lr
   122ec:	push	{r4, sl, fp, lr}
   122f0:	add	fp, sp, #8
   122f4:	mov	r4, r0
   122f8:	ldr	r0, [r0, #8]
   122fc:	bl	10c64 <free@plt>
   12300:	mov	r0, r4
   12304:	pop	{r4, sl, fp, lr}
   12308:	b	10c64 <free@plt>

0001230c <vetor_atribui@@Base>:
   1230c:	mov	ip, r0
   12310:	mvn	r0, #0
   12314:	cmp	ip, #0
   12318:	beq	1233c <vetor_atribui@@Base+0x30>
   1231c:	cmp	r1, #0
   12320:	bmi	1233c <vetor_atribui@@Base+0x30>
   12324:	ldr	r3, [ip]
   12328:	cmp	r3, r1
   1232c:	bxle	lr
   12330:	ldr	r0, [ip, #8]
   12334:	str	r2, [r0, r1, lsl #2]
   12338:	mov	r0, r1
   1233c:	bx	lr

00012340 <vetor_tamanho@@Base>:
   12340:	cmp	r0, #0
   12344:	ldrne	r0, [r0]
   12348:	mvneq	r0, #0
   1234c:	bx	lr

00012350 <vetor_elemento@@Base>:
   12350:	mov	r2, r0
   12354:	mov	r0, #-2147483648	; 0x80000000
   12358:	cmp	r2, #0
   1235c:	beq	1237c <vetor_elemento@@Base+0x2c>
   12360:	cmp	r1, #0
   12364:	bmi	1237c <vetor_elemento@@Base+0x2c>
   12368:	ldr	r3, [r2]
   1236c:	cmp	r3, r1
   12370:	bxle	lr
   12374:	ldr	r0, [r2, #8]
   12378:	ldr	r0, [r0, r1, lsl #2]
   1237c:	bx	lr

00012380 <vetor_insere@@Base>:
   12380:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12384:	add	fp, sp, #24
   12388:	mvn	r7, #0
   1238c:	cmp	r0, #0
   12390:	beq	12490 <vetor_insere@@Base+0x110>
   12394:	mov	r4, r2
   12398:	cmn	r2, #1
   1239c:	blt	12490 <vetor_insere@@Base+0x110>
   123a0:	ldr	lr, [r0]
   123a4:	mov	r9, r0
   123a8:	cmp	lr, r4
   123ac:	blt	12490 <vetor_insere@@Base+0x110>
   123b0:	ldr	r0, [r9, #4]
   123b4:	cmn	r4, #1
   123b8:	mov	r8, r1
   123bc:	moveq	r4, lr
   123c0:	cmp	lr, r0
   123c4:	bne	12400 <vetor_insere@@Base+0x80>
   123c8:	cmp	lr, #0
   123cc:	lsl	r0, lr, #1
   123d0:	movweq	r0, #1
   123d4:	str	r0, [r9, #4]
   123d8:	lsl	r1, r0, #2
   123dc:	ldr	r0, [r9, #8]
   123e0:	bl	10c70 <realloc@plt>
   123e4:	cmp	r0, #0
   123e8:	str	r0, [r9, #8]
   123ec:	beq	12490 <vetor_insere@@Base+0x110>
   123f0:	ldr	lr, [r9]
   123f4:	cmp	lr, r4
   123f8:	bgt	1240c <vetor_insere@@Base+0x8c>
   123fc:	b	12480 <vetor_insere@@Base+0x100>
   12400:	ldr	r0, [r9, #8]
   12404:	cmp	lr, r4
   12408:	ble	12480 <vetor_insere@@Base+0x100>
   1240c:	mvn	r2, r4
   12410:	add	ip, lr, r2
   12414:	sub	r2, lr, r4
   12418:	ands	r7, r2, #3
   1241c:	mov	r2, lr
   12420:	beq	12448 <vetor_insere@@Base+0xc8>
   12424:	add	r6, r0, lr, lsl #2
   12428:	mov	r2, lr
   1242c:	mov	r3, r6
   12430:	ldr	r1, [r3, #-4]!
   12434:	subs	r7, r7, #1
   12438:	sub	r2, r2, #1
   1243c:	str	r1, [r6]
   12440:	mov	r6, r3
   12444:	bne	12430 <vetor_insere@@Base+0xb0>
   12448:	cmp	ip, #3
   1244c:	bcc	12480 <vetor_insere@@Base+0x100>
   12450:	add	r1, r0, r2, lsl #2
   12454:	sub	r3, r1, #8
   12458:	ldr	r6, [r3]
   1245c:	ldr	r5, [r3, #4]
   12460:	ldmdb	r3, {r1, r7}
   12464:	sub	r2, r2, #4
   12468:	cmp	r2, r4
   1246c:	stmda	r3, {r1, r7}
   12470:	str	r6, [r3, #4]
   12474:	str	r5, [r3, #8]
   12478:	sub	r3, r3, #16
   1247c:	bgt	12458 <vetor_insere@@Base+0xd8>
   12480:	str	r8, [r0, r4, lsl #2]
   12484:	add	r0, lr, #1
   12488:	mov	r7, r4
   1248c:	str	r0, [r9]
   12490:	mov	r0, r7
   12494:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012498 <vetor_remove@@Base>:
   12498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1249c:	add	fp, sp, #28
   124a0:	mvn	r2, #0
   124a4:	cmp	r0, #0
   124a8:	beq	1258c <vetor_remove@@Base+0xf4>
   124ac:	cmp	r1, #0
   124b0:	bmi	1258c <vetor_remove@@Base+0xf4>
   124b4:	ldr	ip, [r0]
   124b8:	cmp	ip, r1
   124bc:	ble	1258c <vetor_remove@@Base+0xf4>
   124c0:	add	r8, r1, #1
   124c4:	cmp	r8, ip
   124c8:	bge	12580 <vetor_remove@@Base+0xe8>
   124cc:	mvn	r3, r1
   124d0:	add	lr, ip, r3
   124d4:	ldr	r3, [r0, #8]
   124d8:	cmp	lr, #4
   124dc:	bcc	12564 <vetor_remove@@Base+0xcc>
   124e0:	bic	r9, lr, #3
   124e4:	mov	r5, #1
   124e8:	subs	r4, r9, #4
   124ec:	add	r4, r5, r4, lsr #2
   124f0:	and	r2, r4, #1
   124f4:	beq	12594 <vetor_remove@@Base+0xfc>
   124f8:	add	r6, r3, r1, lsl #2
   124fc:	sub	r7, r2, r4
   12500:	mov	r5, #0
   12504:	mov	sl, #20
   12508:	add	r4, r6, #4
   1250c:	adds	r7, r7, #2
   12510:	add	r5, r5, #8
   12514:	vld1.32	{d16-d17}, [r4]
   12518:	mov	r4, r6
   1251c:	vst1.32	{d16-d17}, [r4], sl
   12520:	vld1.32	{d16-d17}, [r4]
   12524:	add	r4, r6, #16
   12528:	add	r6, r6, #32
   1252c:	vst1.32	{d16-d17}, [r4]
   12530:	bne	12508 <vetor_remove@@Base+0x70>
   12534:	cmp	r2, #0
   12538:	beq	12554 <vetor_remove@@Base+0xbc>
   1253c:	add	r4, r8, r5
   12540:	add	r4, r3, r4, lsl #2
   12544:	vld1.32	{d16-d17}, [r4]
   12548:	add	r4, r5, r1
   1254c:	add	r4, r3, r4, lsl #2
   12550:	vst1.32	{d16-d17}, [r4]
   12554:	cmp	lr, r9
   12558:	beq	12580 <vetor_remove@@Base+0xe8>
   1255c:	add	r1, r9, r1
   12560:	add	r8, r8, r9
   12564:	ldr	r7, [r3, r8, lsl #2]
   12568:	mov	r2, r8
   1256c:	add	r8, r8, #1
   12570:	cmp	ip, r8
   12574:	str	r7, [r3, r1, lsl #2]
   12578:	mov	r1, r2
   1257c:	bne	12564 <vetor_remove@@Base+0xcc>
   12580:	sub	r1, ip, #1
   12584:	mov	r2, #0
   12588:	str	r1, [r0]
   1258c:	mov	r0, r2
   12590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12594:	mov	r5, #0
   12598:	cmp	r2, #0
   1259c:	bne	1253c <vetor_remove@@Base+0xa4>
   125a0:	b	12554 <vetor_remove@@Base+0xbc>

000125a4 <vetor_pesquisa@@Base>:
   125a4:	push	{fp, lr}
   125a8:	mov	fp, sp
   125ac:	mov	r2, r0
   125b0:	mvn	r0, #0
   125b4:	cmp	r2, #0
   125b8:	beq	125e8 <vetor_pesquisa@@Base+0x44>
   125bc:	ldr	ip, [r2]
   125c0:	cmp	ip, #1
   125c4:	poplt	{fp, pc}
   125c8:	ldr	lr, [r2, #8]
   125cc:	mov	r2, #0
   125d0:	ldr	r3, [lr, r2, lsl #2]
   125d4:	cmp	r3, r1
   125d8:	beq	125ec <vetor_pesquisa@@Base+0x48>
   125dc:	add	r2, r2, #1
   125e0:	cmp	r2, ip
   125e4:	blt	125d0 <vetor_pesquisa@@Base+0x2c>
   125e8:	pop	{fp, pc}
   125ec:	mov	r0, r2
   125f0:	pop	{fp, pc}

000125f4 <vetor_ordena@@Base>:
   125f4:	push	{r4, r5, fp, lr}
   125f8:	add	fp, sp, #8
   125fc:	cmp	r0, #0
   12600:	beq	12678 <vetor_ordena@@Base+0x84>
   12604:	ldr	ip, [r0]
   12608:	mov	r1, r0
   1260c:	mov	r0, #0
   12610:	cmp	ip, #2
   12614:	poplt	{r4, r5, fp, pc}
   12618:	ldr	lr, [r1, #8]
   1261c:	mov	r1, #1
   12620:	mov	r3, lr
   12624:	b	12640 <vetor_ordena@@Base+0x4c>
   12628:	add	r4, r1, r0
   1262c:	add	r1, r1, #1
   12630:	add	r3, r3, #4
   12634:	str	r2, [lr, r4, lsl #2]
   12638:	cmp	r1, ip
   1263c:	bge	12670 <vetor_ordena@@Base+0x7c>
   12640:	ldr	r2, [lr, r1, lsl #2]
   12644:	mov	r0, #0
   12648:	ldr	r4, [r3, r0, lsl #2]
   1264c:	cmp	r2, r4
   12650:	bge	12628 <vetor_ordena@@Base+0x34>
   12654:	add	r5, r3, r0, lsl #2
   12658:	sub	r0, r0, #1
   1265c:	str	r4, [r5, #4]
   12660:	add	r4, r1, r0
   12664:	cmp	r4, #0
   12668:	bgt	12648 <vetor_ordena@@Base+0x54>
   1266c:	b	1262c <vetor_ordena@@Base+0x38>
   12670:	mov	r0, #0
   12674:	pop	{r4, r5, fp, pc}
   12678:	mvn	r0, #0
   1267c:	pop	{r4, r5, fp, pc}

00012680 <__libc_csu_init@@Base>:
   12680:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12684:	mov	r7, r0
   12688:	ldr	r6, [pc, #72]	; 126d8 <__libc_csu_init@@Base+0x58>
   1268c:	ldr	r5, [pc, #72]	; 126dc <__libc_csu_init@@Base+0x5c>
   12690:	add	r6, pc, r6
   12694:	add	r5, pc, r5
   12698:	sub	r6, r6, r5
   1269c:	mov	r8, r1
   126a0:	mov	r9, r2
   126a4:	bl	10c2c <calloc@plt-0x20>
   126a8:	asrs	r6, r6, #2
   126ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   126b0:	mov	r4, #0
   126b4:	add	r4, r4, #1
   126b8:	ldr	r3, [r5], #4
   126bc:	mov	r2, r9
   126c0:	mov	r1, r8
   126c4:	mov	r0, r7
   126c8:	blx	r3
   126cc:	cmp	r6, r4
   126d0:	bne	126b4 <__libc_csu_init@@Base+0x34>
   126d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126d8:	andeq	r0, r1, r4, ror r8
   126dc:	andeq	r0, r1, ip, ror #16

000126e0 <__libc_csu_fini@@Base>:
   126e0:	bx	lr

Disassembly of section .fini:

000126e4 <.fini>:
   126e4:	push	{r3, lr}
   126e8:	pop	{r3, pc}
