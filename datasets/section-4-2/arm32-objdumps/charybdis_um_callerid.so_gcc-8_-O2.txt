
../repos/charybdis/modules/.libs/um_callerid.so:     file format elf32-littlearm


Disassembly of section .init:

000005fc <_init>:
 5fc:	push	{r3, lr}
 600:	bl	6d0 <call_weak_fn>
 604:	pop	{r3, pc}

Disassembly of section .plt:

00000608 <.plt>:
 608:	push	{lr}		; (str lr, [sp, #-4]!)
 60c:	ldr	lr, [pc, #4]	; 618 <.plt+0x10>
 610:	add	lr, pc, lr
 614:	ldr	pc, [lr, #8]!
 618:	.word	0x000119e8

0000061c <delete_isupport@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2536]!	; 0x9e8

00000628 <rb_current_time@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2528]!	; 0x9e0

00000634 <__cxa_finalize@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2520]!	; 0x9d8

00000640 <sendto_one@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2512]!	; 0x9d0

0000064c <ierror@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2504]!	; 0x9c8

00000658 <find_umode_slot@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2496]!	; 0x9c0

00000664 <find_channel_membership@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2488]!	; 0x9b8

00000670 <__gmon_start__@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2480]!	; 0x9b0

0000067c <rb_make_rb_dlink_node@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2472]!	; 0x9a8

00000688 <sendto_one_numeric@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2464]!	; 0x9a0

00000694 <snprintf@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2456]!	; 0x998

000006a0 <add_isupport@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2448]!	; 0x990

000006ac <privilegeset_in_set@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2440]!	; 0x988

000006b8 <__assert_fail@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2432]!	; 0x980

000006c4 <construct_umodebuf@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2424]!	; 0x978

Disassembly of section .text:

000006d0 <call_weak_fn>:
     6d0:	ldr	r3, [pc, #20]	; 6ec <call_weak_fn+0x1c>
     6d4:	ldr	r2, [pc, #20]	; 6f0 <call_weak_fn+0x20>
     6d8:	add	r3, pc, r3
     6dc:	ldr	r2, [r3, r2]
     6e0:	cmp	r2, #0
     6e4:	bxeq	lr
     6e8:	b	670 <__gmon_start__@plt>
     6ec:	.word	0x00011920
     6f0:	.word	0x00000058

000006f4 <deregister_tm_clones>:
     6f4:	ldr	r0, [pc, #44]	; 728 <deregister_tm_clones+0x34>
     6f8:	ldr	r3, [pc, #44]	; 72c <deregister_tm_clones+0x38>
     6fc:	add	r0, pc, r0
     700:	add	r3, pc, r3
     704:	cmp	r3, r0
     708:	ldr	r3, [pc, #32]	; 730 <deregister_tm_clones+0x3c>
     70c:	add	r3, pc, r3
     710:	bxeq	lr
     714:	ldr	r2, [pc, #24]	; 734 <deregister_tm_clones+0x40>
     718:	ldr	r3, [r3, r2]
     71c:	cmp	r3, #0
     720:	bxeq	lr
     724:	bx	r3
     728:	.word	0x000119b4
     72c:	.word	0x000119b0
     730:	.word	0x000118ec
     734:	.word	0x0000004c

00000738 <register_tm_clones>:
     738:	ldr	r0, [pc, #56]	; 778 <register_tm_clones+0x40>
     73c:	ldr	r3, [pc, #56]	; 77c <register_tm_clones+0x44>
     740:	add	r0, pc, r0
     744:	add	r3, pc, r3
     748:	sub	r1, r3, r0
     74c:	ldr	r3, [pc, #44]	; 780 <register_tm_clones+0x48>
     750:	asr	r1, r1, #2
     754:	add	r3, pc, r3
     758:	add	r1, r1, r1, lsr #31
     75c:	asrs	r1, r1, #1
     760:	bxeq	lr
     764:	ldr	r2, [pc, #24]	; 784 <register_tm_clones+0x4c>
     768:	ldr	r3, [r3, r2]
     76c:	cmp	r3, #0
     770:	bxeq	lr
     774:	bx	r3
     778:	.word	0x00011970
     77c:	.word	0x0001196c
     780:	.word	0x000118a4
     784:	.word	0x0000005c

00000788 <__do_global_dtors_aux>:
     788:	ldr	r3, [pc, #76]	; 7dc <__do_global_dtors_aux+0x54>
     78c:	ldr	r2, [pc, #76]	; 7e0 <__do_global_dtors_aux+0x58>
     790:	add	r3, pc, r3
     794:	add	r2, pc, r2
     798:	ldrb	r3, [r3]
     79c:	cmp	r3, #0
     7a0:	bxne	lr
     7a4:	ldr	r3, [pc, #56]	; 7e4 <__do_global_dtors_aux+0x5c>
     7a8:	push	{r4, lr}
     7ac:	ldr	r3, [r2, r3]
     7b0:	cmp	r3, #0
     7b4:	beq	7c4 <__do_global_dtors_aux+0x3c>
     7b8:	ldr	r3, [pc, #40]	; 7e8 <__do_global_dtors_aux+0x60>
     7bc:	ldr	r0, [pc, r3]
     7c0:	bl	634 <__cxa_finalize@plt>
     7c4:	bl	6f4 <deregister_tm_clones>
     7c8:	ldr	r3, [pc, #28]	; 7ec <__do_global_dtors_aux+0x64>
     7cc:	mov	r2, #1
     7d0:	add	r3, pc, r3
     7d4:	strb	r2, [r3]
     7d8:	pop	{r4, pc}
     7dc:	.word	0x00011920
     7e0:	.word	0x00011864
     7e4:	.word	0x00000048
     7e8:	.word	0x000118a4
     7ec:	.word	0x000118e0

000007f0 <frame_dummy>:
     7f0:	b	738 <register_tm_clones>

000007f4 <um_callerid_moddeinit>:
     7f4:	ldr	r3, [pc, #56]	; 834 <um_callerid_moddeinit+0x40>
     7f8:	mov	r2, #0
     7fc:	str	r4, [sp, #-8]!
     800:	ldr	r1, [pc, #48]	; 838 <um_callerid_moddeinit+0x44>
     804:	str	lr, [sp, #4]
     808:	add	r3, pc, r3
     80c:	ldr	r3, [r3, r1]
     810:	str	r2, [r3, #284]	; 0x11c
     814:	str	r2, [r3, #412]	; 0x19c
     818:	bl	6c4 <construct_umodebuf@plt>
     81c:	ldr	r0, [pc, #24]	; 83c <um_callerid_moddeinit+0x48>
     820:	ldr	r4, [sp]
     824:	ldr	lr, [sp, #4]
     828:	add	sp, sp, #8
     82c:	add	r0, pc, r0
     830:	b	61c <delete_isupport@plt>
     834:	.word	0x000117f0
     838:	.word	0x00000054
     83c:	.word	0x00000908

00000840 <rb_dlinkFind.part.0>:
     840:	ldr	r3, [pc, #32]	; 868 <rb_dlinkFind.part.0+0x28>
     844:	movw	r2, #311	; 0x137
     848:	str	r4, [sp, #-8]!
     84c:	ldr	r1, [pc, #24]	; 86c <rb_dlinkFind.part.0+0x2c>
     850:	str	lr, [sp, #4]
     854:	ldr	r0, [pc, #20]	; 870 <rb_dlinkFind.part.0+0x30>
     858:	add	r3, pc, r3
     85c:	add	r1, pc, r1
     860:	add	r0, pc, r0
     864:	bl	6b8 <__assert_fail@plt>
     868:	.word	0x00000870
     86c:	.word	0x000008e4
     870:	.word	0x000008fc

00000874 <um_callerid_modinit>:
     874:	strd	r4, [sp, #-16]!
     878:	ldr	r4, [pc, #148]	; 914 <um_callerid_modinit+0xa0>
     87c:	str	r6, [sp, #8]
     880:	str	lr, [sp, #12]
     884:	bl	658 <find_umode_slot@plt>
     888:	ldr	r3, [pc, #136]	; 918 <um_callerid_modinit+0xa4>
     88c:	cmp	r0, #0
     890:	add	r4, pc, r4
     894:	ldr	r5, [r4, r3]
     898:	str	r0, [r5, #412]	; 0x19c
     89c:	beq	8e8 <um_callerid_modinit+0x74>
     8a0:	bl	658 <find_umode_slot@plt>
     8a4:	cmp	r0, #0
     8a8:	mov	r3, r0
     8ac:	str	r0, [r5, #284]	; 0x11c
     8b0:	beq	8fc <um_callerid_modinit+0x88>
     8b4:	bl	6c4 <construct_umodebuf@plt>
     8b8:	ldr	r3, [pc, #92]	; 91c <um_callerid_modinit+0xa8>
     8bc:	ldr	r2, [pc, #92]	; 920 <um_callerid_modinit+0xac>
     8c0:	ldr	r0, [pc, #92]	; 924 <um_callerid_modinit+0xb0>
     8c4:	ldr	r1, [r4, r3]
     8c8:	add	r2, pc, r2
     8cc:	add	r0, pc, r0
     8d0:	bl	6a0 <add_isupport@plt>
     8d4:	mov	r0, #0
     8d8:	ldrd	r4, [sp]
     8dc:	ldr	r6, [sp, #8]
     8e0:	add	sp, sp, #12
     8e4:	pop	{pc}		; (ldr pc, [sp], #4)
     8e8:	ldr	r0, [pc, #56]	; 928 <um_callerid_modinit+0xb4>
     8ec:	add	r0, pc, r0
     8f0:	bl	64c <ierror@plt>
     8f4:	mvn	r0, #0
     8f8:	b	8d8 <um_callerid_modinit+0x64>
     8fc:	ldr	r0, [pc, #40]	; 92c <um_callerid_modinit+0xb8>
     900:	str	r3, [r5, #412]	; 0x19c
     904:	add	r0, pc, r0
     908:	bl	64c <ierror@plt>
     90c:	mvn	r0, #0
     910:	b	8d8 <um_callerid_modinit+0x64>
     914:	.word	0x00011768
     918:	.word	0x00000054
     91c:	.word	0x00000050
     920:	.word	0x00000934
     924:	.word	0x00000868
     928:	.word	0x00000880
     92c:	.word	0x000008b0

00000930 <allow_message>:
     930:	strd	r4, [sp, #-24]!	; 0xffffffe8
     934:	mov	r3, #0
     938:	ldr	ip, [pc, #420]	; ae4 <allow_message+0x1b4>
     93c:	str	lr, [sp, #20]
     940:	ldr	lr, [r1, #64]	; 0x40
     944:	strd	r6, [sp, #8]
     948:	str	r8, [sp, #16]
     94c:	add	ip, pc, ip
     950:	and	r2, lr, #8192	; 0x2000
     954:	orrs	r3, r2, r3
     958:	beq	968 <allow_message+0x38>
     95c:	ldrh	r3, [r1, #80]	; 0x50
     960:	cmp	r3, #64	; 0x40
     964:	beq	980 <allow_message+0x50>
     968:	mov	r0, #1
     96c:	ldrd	r4, [sp]
     970:	ldrd	r6, [sp, #8]
     974:	ldr	r8, [sp, #16]
     978:	add	sp, sp, #20
     97c:	pop	{pc}		; (ldr pc, [sp], #4)
     980:	ldr	r2, [pc, #352]	; ae8 <allow_message+0x1b8>
     984:	mov	r4, r1
     988:	mov	r5, r0
     98c:	ldr	r3, [r1, #56]	; 0x38
     990:	ldr	r7, [ip, r2]
     994:	ldr	r2, [r7, #284]	; 0x11c
     998:	ldr	r1, [r7, #412]	; 0x19c
     99c:	bics	r1, r1, r3
     9a0:	and	r3, r3, r2
     9a4:	beq	a08 <allow_message+0xd8>
     9a8:	cmp	r2, r3
     9ac:	bne	968 <allow_message+0x38>
     9b0:	ldr	r3, [r5, #24]
     9b4:	ldr	r6, [r3]
     9b8:	cmp	r6, #0
     9bc:	bne	9d0 <allow_message+0xa0>
     9c0:	b	a10 <allow_message+0xe0>
     9c4:	ldr	r6, [r6, #8]
     9c8:	cmp	r6, #0
     9cc:	beq	a10 <allow_message+0xe0>
     9d0:	ldr	r3, [r4, #24]
     9d4:	cmp	r3, #0
     9d8:	beq	9c4 <allow_message+0x94>
     9dc:	ldr	r3, [r6]
     9e0:	mov	r1, r4
     9e4:	ldr	r0, [r3, #36]	; 0x24
     9e8:	bl	664 <find_channel_membership@plt>
     9ec:	cmp	r0, #0
     9f0:	beq	9c4 <allow_message+0x94>
     9f4:	ldr	r2, [r4, #56]	; 0x38
     9f8:	ldr	r3, [r7, #412]	; 0x19c
     9fc:	bics	r3, r3, r2
     a00:	bne	968 <allow_message+0x38>
     a04:	b	a10 <allow_message+0xe0>
     a08:	cmp	r2, r3
     a0c:	beq	9b0 <allow_message+0x80>
     a10:	ldrh	r3, [r5, #80]	; 0x50
     a14:	cmp	r3, #32
     a18:	beq	968 <allow_message+0x38>
     a1c:	ldr	r3, [r5, #24]
     a20:	cmp	r3, #0
     a24:	beq	a6c <allow_message+0x13c>
     a28:	ldr	r0, [r3, #36]	; 0x24
     a2c:	cmp	r0, #0
     a30:	beq	aac <allow_message+0x17c>
     a34:	ldr	r1, [pc, #176]	; aec <allow_message+0x1bc>
     a38:	add	r1, pc, r1
     a3c:	bl	6ac <privilegeset_in_set@plt>
     a40:	cmp	r0, #0
     a44:	bne	968 <allow_message+0x38>
     a48:	ldr	r3, [r5, #56]	; 0x38
     a4c:	tst	r3, #4096	; 0x1000
     a50:	beq	a6c <allow_message+0x13c>
     a54:	ldr	r3, [r5, #24]
     a58:	cmp	r3, #0
     a5c:	beq	a6c <allow_message+0x13c>
     a60:	ldr	r3, [r3, #36]	; 0x24
     a64:	cmp	r3, #0
     a68:	beq	968 <allow_message+0x38>
     a6c:	cmp	r4, r5
     a70:	beq	968 <allow_message+0x38>
     a74:	ldr	r3, [r4, #432]	; 0x1b0
     a78:	cmn	r3, #316	; 0x13c
     a7c:	beq	ac4 <allow_message+0x194>
     a80:	ldr	r3, [r3, #316]	; 0x13c
     a84:	cmp	r3, #0
     a88:	bne	a9c <allow_message+0x16c>
     a8c:	b	abc <allow_message+0x18c>
     a90:	ldr	r3, [r3, #8]
     a94:	cmp	r3, #0
     a98:	beq	abc <allow_message+0x18c>
     a9c:	ldr	r2, [r3]
     aa0:	cmp	r5, r2
     aa4:	bne	a90 <allow_message+0x160>
     aa8:	b	968 <allow_message+0x38>
     aac:	ldr	r3, [r5, #56]	; 0x38
     ab0:	tst	r3, #4096	; 0x1000
     ab4:	bne	968 <allow_message+0x38>
     ab8:	b	a6c <allow_message+0x13c>
     abc:	mov	r0, r3
     ac0:	b	96c <allow_message+0x3c>
     ac4:	ldr	r3, [pc, #36]	; af0 <allow_message+0x1c0>
     ac8:	movw	r2, #310	; 0x136
     acc:	ldr	r1, [pc, #32]	; af4 <allow_message+0x1c4>
     ad0:	ldr	r0, [pc, #32]	; af8 <allow_message+0x1c8>
     ad4:	add	r3, pc, r3
     ad8:	add	r1, pc, r1
     adc:	add	r0, pc, r0
     ae0:	bl	6b8 <__assert_fail@plt>
     ae4:	.word	0x000116ac
     ae8:	.word	0x00000054
     aec:	.word	0x000007c8
     af0:	.word	0x000005f4
     af4:	.word	0x00000668
     af8:	.word	0x00000734

00000afc <add_callerid_accept_for_source>:
     afc:	ldr	r3, [r1, #64]	; 0x40
     b00:	strd	r4, [sp, #-28]!	; 0xffffffe4
     b04:	mov	r5, #0
     b08:	strd	r6, [sp, #8]
     b0c:	ldr	r6, [pc, #676]	; db8 <add_callerid_accept_for_source+0x2bc>
     b10:	strd	r8, [sp, #16]
     b14:	and	r4, r3, #8192	; 0x2000
     b18:	str	lr, [sp, #24]
     b1c:	sub	sp, sp, #12
     b20:	orrs	r3, r4, r5
     b24:	add	r6, pc, r6
     b28:	beq	b4c <add_callerid_accept_for_source+0x50>
     b2c:	ldrh	r4, [r1, #80]	; 0x50
     b30:	cmp	r0, #0
     b34:	sub	r9, r4, #64	; 0x40
     b38:	clz	r9, r9
     b3c:	lsr	r9, r9, #5
     b40:	moveq	r9, #0
     b44:	cmp	r9, #0
     b48:	bne	b6c <add_callerid_accept_for_source+0x70>
     b4c:	mov	r9, #1
     b50:	mov	r0, r9
     b54:	add	sp, sp, #12
     b58:	ldrd	r4, [sp]
     b5c:	ldrd	r6, [sp, #8]
     b60:	ldrd	r8, [sp, #16]
     b64:	add	sp, sp, #24
     b68:	pop	{pc}		; (ldr pc, [sp], #4)
     b6c:	ldr	r3, [pc, #584]	; dbc <add_callerid_accept_for_source+0x2c0>
     b70:	ldr	r0, [r1, #56]	; 0x38
     b74:	ldr	r7, [r6, r3]
     b78:	ldr	r3, [r7, #412]	; 0x19c
     b7c:	bics	r3, r3, r0
     b80:	beq	b90 <add_callerid_accept_for_source+0x94>
     b84:	ldr	r3, [r7, #284]	; 0x11c
     b88:	bics	r3, r3, r0
     b8c:	bne	b4c <add_callerid_accept_for_source+0x50>
     b90:	cmp	r1, r2
     b94:	beq	b4c <add_callerid_accept_for_source+0x50>
     b98:	mov	r5, r2
     b9c:	ldr	r2, [r1, #432]	; 0x1b0
     ba0:	mov	r8, r1
     ba4:	cmn	r2, #316	; 0x13c
     ba8:	beq	d50 <add_callerid_accept_for_source+0x254>
     bac:	cmp	r5, #0
     bb0:	beq	d4c <add_callerid_accept_for_source+0x250>
     bb4:	ldr	r3, [r2, #316]	; 0x13c
     bb8:	cmp	r3, #0
     bbc:	bne	bd0 <add_callerid_accept_for_source+0xd4>
     bc0:	b	be0 <add_callerid_accept_for_source+0xe4>
     bc4:	ldr	r3, [r3, #8]
     bc8:	cmp	r3, #0
     bcc:	beq	be0 <add_callerid_accept_for_source+0xe4>
     bd0:	ldr	r1, [r3]
     bd4:	cmp	r5, r1
     bd8:	bne	bc4 <add_callerid_accept_for_source+0xc8>
     bdc:	b	b4c <add_callerid_accept_for_source+0x50>
     be0:	ldr	r3, [r5, #24]
     be4:	cmp	r3, #0
     be8:	beq	d18 <add_callerid_accept_for_source+0x21c>
     bec:	ldr	r0, [r3, #36]	; 0x24
     bf0:	cmp	r0, #0
     bf4:	beq	d08 <add_callerid_accept_for_source+0x20c>
     bf8:	ldr	r1, [pc, #448]	; dc0 <add_callerid_accept_for_source+0x2c4>
     bfc:	add	r1, pc, r1
     c00:	bl	6ac <privilegeset_in_set@plt>
     c04:	cmp	r0, #0
     c08:	bne	b4c <add_callerid_accept_for_source+0x50>
     c0c:	ldr	r1, [r5, #56]	; 0x38
     c10:	tst	r1, #4096	; 0x1000
     c14:	beq	c30 <add_callerid_accept_for_source+0x134>
     c18:	ldr	r3, [r5, #24]
     c1c:	cmp	r3, #0
     c20:	beq	c30 <add_callerid_accept_for_source+0x134>
     c24:	ldr	r3, [r3, #36]	; 0x24
     c28:	cmp	r3, #0
     c2c:	beq	b4c <add_callerid_accept_for_source+0x50>
     c30:	ldr	r2, [r8, #432]	; 0x1b0
     c34:	ldr	r3, [pc, #392]	; dc4 <add_callerid_accept_for_source+0x2c8>
     c38:	ldr	r2, [r2, #324]	; 0x144
     c3c:	ldr	r3, [r6, r3]
     c40:	ldr	r3, [r3, #96]	; 0x60
     c44:	cmp	r2, r3
     c48:	bcs	cd0 <add_callerid_accept_for_source+0x1d4>
     c4c:	bl	67c <rb_make_rb_dlink_node@plt>
     c50:	ldr	r3, [r8, #432]	; 0x1b0
     c54:	cmp	r0, #0
     c58:	add	r2, r3, #316	; 0x13c
     c5c:	beq	d94 <add_callerid_accept_for_source+0x298>
     c60:	cmp	r2, #0
     c64:	beq	d70 <add_callerid_accept_for_source+0x274>
     c68:	ldr	r2, [r3, #316]	; 0x13c
     c6c:	mov	r1, #0
     c70:	str	r5, [r0]
     c74:	cmp	r2, r1
     c78:	stmib	r0, {r1, r2}
     c7c:	strne	r0, [r2, #4]
     c80:	beq	d3c <add_callerid_accept_for_source+0x240>
     c84:	ldr	r2, [r3, #324]	; 0x144
     c88:	str	r0, [r3, #316]	; 0x13c
     c8c:	add	r2, r2, #1
     c90:	str	r2, [r3, #324]	; 0x144
     c94:	bl	67c <rb_make_rb_dlink_node@plt>
     c98:	cmp	r0, #0
     c9c:	beq	d94 <add_callerid_accept_for_source+0x298>
     ca0:	ldr	r3, [r5, #408]	; 0x198
     ca4:	mov	r2, #0
     ca8:	str	r8, [r0]
     cac:	cmp	r3, r2
     cb0:	strd	r2, [r0, #4]
     cb4:	strne	r0, [r3, #4]
     cb8:	beq	d2c <add_callerid_accept_for_source+0x230>
     cbc:	ldr	r3, [r5, #416]	; 0x1a0
     cc0:	str	r0, [r5, #408]	; 0x198
     cc4:	add	r3, r3, #1
     cc8:	str	r3, [r5, #416]	; 0x1a0
     ccc:	b	b50 <add_callerid_accept_for_source+0x54>
     cd0:	ldr	r2, [r7, #412]	; 0x19c
     cd4:	add	r3, r5, #88	; 0x58
     cd8:	bics	r2, r2, r1
     cdc:	beq	d20 <add_callerid_accept_for_source+0x224>
     ce0:	ldr	r2, [pc, #224]	; dc8 <add_callerid_accept_for_source+0x2cc>
     ce4:	add	r2, pc, r2
     ce8:	str	r2, [sp]
     cec:	mov	r0, r8
     cf0:	movw	r1, #494	; 0x1ee
     cf4:	ldr	r2, [pc, #208]	; dcc <add_callerid_accept_for_source+0x2d0>
     cf8:	mov	r9, #0
     cfc:	add	r2, pc, r2
     d00:	bl	688 <sendto_one_numeric@plt>
     d04:	b	b50 <add_callerid_accept_for_source+0x54>
     d08:	ldr	r1, [r5, #56]	; 0x38
     d0c:	tst	r1, #4096	; 0x1000
     d10:	bne	b4c <add_callerid_accept_for_source+0x50>
     d14:	b	c34 <add_callerid_accept_for_source+0x138>
     d18:	ldr	r1, [r5, #56]	; 0x38
     d1c:	b	c34 <add_callerid_accept_for_source+0x138>
     d20:	ldr	r2, [pc, #168]	; dd0 <add_callerid_accept_for_source+0x2d4>
     d24:	add	r2, pc, r2
     d28:	b	ce8 <add_callerid_accept_for_source+0x1ec>
     d2c:	ldr	r3, [r5, #412]	; 0x19c
     d30:	cmp	r3, #0
     d34:	streq	r0, [r5, #412]	; 0x19c
     d38:	b	cbc <add_callerid_accept_for_source+0x1c0>
     d3c:	ldr	r2, [r3, #320]	; 0x140
     d40:	cmp	r2, #0
     d44:	streq	r0, [r3, #320]	; 0x140
     d48:	b	c84 <add_callerid_accept_for_source+0x188>
     d4c:	bl	840 <rb_dlinkFind.part.0>
     d50:	ldr	r3, [pc, #124]	; dd4 <add_callerid_accept_for_source+0x2d8>
     d54:	movw	r2, #310	; 0x136
     d58:	ldr	r1, [pc, #120]	; dd8 <add_callerid_accept_for_source+0x2dc>
     d5c:	ldr	r0, [pc, #120]	; ddc <add_callerid_accept_for_source+0x2e0>
     d60:	add	r3, pc, r3
     d64:	add	r1, pc, r1
     d68:	add	r0, pc, r0
     d6c:	bl	6b8 <__assert_fail@plt>
     d70:	ldr	r3, [pc, #104]	; de0 <add_callerid_accept_for_source+0x2e4>
     d74:	mov	r2, #145	; 0x91
     d78:	ldr	r1, [pc, #100]	; de4 <add_callerid_accept_for_source+0x2e8>
     d7c:	ldr	r0, [pc, #100]	; de8 <add_callerid_accept_for_source+0x2ec>
     d80:	add	r3, pc, r3
     d84:	add	r3, r3, #16
     d88:	add	r1, pc, r1
     d8c:	add	r0, pc, r0
     d90:	bl	6b8 <__assert_fail@plt>
     d94:	ldr	r3, [pc, #80]	; dec <add_callerid_accept_for_source+0x2f0>
     d98:	mov	r2, #144	; 0x90
     d9c:	ldr	r1, [pc, #76]	; df0 <add_callerid_accept_for_source+0x2f4>
     da0:	ldr	r0, [pc, #76]	; df4 <add_callerid_accept_for_source+0x2f8>
     da4:	add	r3, pc, r3
     da8:	add	r3, r3, #16
     dac:	add	r1, pc, r1
     db0:	add	r0, pc, r0
     db4:	bl	6b8 <__assert_fail@plt>
     db8:	.word	0x000114d4
     dbc:	.word	0x00000054
     dc0:	.word	0x00000604
     dc4:	.word	0x00000064
     dc8:	.word	0x00000540
     dcc:	.word	0x00000538
     dd0:	.word	0x000004fc
     dd4:	.word	0x00000368
     dd8:	.word	0x000003dc
     ddc:	.word	0x000004a8
     de0:	.word	0x00000348
     de4:	.word	0x000003b8
     de8:	.word	0x00000484
     dec:	.word	0x00000324
     df0:	.word	0x00000394
     df4:	.word	0x00000478

00000df8 <h_hdl_privmsg_user>:
     df8:	ldr	r3, [r0, #16]
     dfc:	strd	r4, [sp, #-32]!	; 0xffffffe0
     e00:	ldr	r5, [pc, #420]	; fac <h_hdl_privmsg_user+0x1b4>
     e04:	strd	r6, [sp, #8]
     e08:	strd	r8, [sp, #16]
     e0c:	cmp	r3, #0
     e10:	str	sl, [sp, #24]
     e14:	str	lr, [sp, #28]
     e18:	sub	sp, sp, #16
     e1c:	add	r5, pc, r5
     e20:	beq	e40 <h_hdl_privmsg_user+0x48>
     e24:	add	sp, sp, #16
     e28:	ldrd	r4, [sp]
     e2c:	ldrd	r6, [sp, #8]
     e30:	ldrd	r8, [sp, #16]
     e34:	ldr	sl, [sp, #24]
     e38:	add	sp, sp, #28
     e3c:	pop	{pc}		; (ldr pc, [sp], #4)
     e40:	ldm	r0, {r6, r8}
     e44:	mov	r4, r0
     e48:	ldr	r7, [r0, #8]
     e4c:	mov	r1, r8
     e50:	mov	r0, r6
     e54:	mov	r2, r7
     e58:	bl	afc <add_callerid_accept_for_source>
     e5c:	cmp	r0, #0
     e60:	beq	ea8 <h_hdl_privmsg_user+0xb0>
     e64:	mov	r1, r7
     e68:	mov	r0, r8
     e6c:	bl	930 <allow_message>
     e70:	cmp	r0, #0
     e74:	bne	e24 <h_hdl_privmsg_user+0x2c>
     e78:	ldr	r1, [r7, #64]	; 0x40
     e7c:	mov	r3, r0
     e80:	and	r2, r1, #8192	; 0x2000
     e84:	orrs	r3, r2, r3
     e88:	beq	ea8 <h_hdl_privmsg_user+0xb0>
     e8c:	ldrh	r3, [r7, #80]	; 0x50
     e90:	clz	r6, r6
     e94:	lsr	r6, r6, #5
     e98:	cmp	r3, #64	; 0x40
     e9c:	orrne	r6, r6, #1
     ea0:	cmp	r6, #0
     ea4:	beq	eb4 <h_hdl_privmsg_user+0xbc>
     ea8:	mov	r3, #716	; 0x2cc
     eac:	str	r3, [r4, #16]
     eb0:	b	e24 <h_hdl_privmsg_user+0x2c>
     eb4:	ldr	r3, [pc, #244]	; fb0 <h_hdl_privmsg_user+0x1b8>
     eb8:	add	r9, r7, #88	; 0x58
     ebc:	ldr	r2, [r7, #56]	; 0x38
     ec0:	ldr	sl, [r5, r3]
     ec4:	ldr	r3, [sl, #412]	; 0x19c
     ec8:	bics	r3, r3, r2
     ecc:	beq	f94 <h_hdl_privmsg_user+0x19c>
     ed0:	ldr	r2, [pc, #220]	; fb4 <h_hdl_privmsg_user+0x1bc>
     ed4:	add	r2, pc, r2
     ed8:	str	r2, [sp]
     edc:	mov	r3, r9
     ee0:	mov	r1, #716	; 0x2cc
     ee4:	ldr	r2, [pc, #204]	; fb8 <h_hdl_privmsg_user+0x1c0>
     ee8:	mov	r0, r8
     eec:	add	r2, pc, r2
     ef0:	bl	688 <sendto_one_numeric@plt>
     ef4:	ldr	r3, [pc, #192]	; fbc <h_hdl_privmsg_user+0x1c4>
     ef8:	ldr	r2, [r7, #432]	; 0x1b0
     efc:	ldr	r3, [r5, r3]
     f00:	ldr	r6, [r2, #40]	; 0x28
     f04:	ldr	r3, [r3, #232]	; 0xe8
     f08:	add	r6, r6, r3
     f0c:	bl	628 <rb_current_time@plt>
     f10:	cmp	r6, r0
     f14:	bge	ea8 <h_hdl_privmsg_user+0xb0>
     f18:	ldr	r2, [pc, #160]	; fc0 <h_hdl_privmsg_user+0x1c8>
     f1c:	mov	r3, r9
     f20:	mov	r0, r8
     f24:	movw	r1, #717	; 0x2cd
     f28:	add	r2, pc, r2
     f2c:	bl	688 <sendto_one_numeric@plt>
     f30:	ldr	r2, [r7, #56]	; 0x38
     f34:	add	lr, r8, #88	; 0x58
     f38:	add	ip, r8, #152	; 0x98
     f3c:	add	r8, r8, #163	; 0xa3
     f40:	ldr	r3, [sl, #412]	; 0x19c
     f44:	bics	r3, r3, r2
     f48:	beq	fa0 <h_hdl_privmsg_user+0x1a8>
     f4c:	ldr	r6, [pc, #112]	; fc4 <h_hdl_privmsg_user+0x1cc>
     f50:	add	r6, pc, r6
     f54:	ldr	r2, [pc, #108]	; fc8 <h_hdl_privmsg_user+0x1d0>
     f58:	mov	r3, r9
     f5c:	mov	r0, r7
     f60:	ldr	r1, [pc, #100]	; fcc <h_hdl_privmsg_user+0x1d4>
     f64:	ldr	r2, [r5, r2]
     f68:	str	lr, [sp]
     f6c:	add	r1, pc, r1
     f70:	str	ip, [sp, #4]
     f74:	str	r8, [sp, #8]
     f78:	str	r6, [sp, #12]
     f7c:	add	r2, r2, #88	; 0x58
     f80:	bl	640 <sendto_one@plt>
     f84:	ldr	r5, [r7, #432]	; 0x1b0
     f88:	bl	628 <rb_current_time@plt>
     f8c:	str	r0, [r5, #40]	; 0x28
     f90:	b	ea8 <h_hdl_privmsg_user+0xb0>
     f94:	ldr	r2, [pc, #52]	; fd0 <h_hdl_privmsg_user+0x1d8>
     f98:	add	r2, pc, r2
     f9c:	b	ed8 <h_hdl_privmsg_user+0xe0>
     fa0:	ldr	r6, [pc, #44]	; fd4 <h_hdl_privmsg_user+0x1dc>
     fa4:	add	r6, pc, r6
     fa8:	b	f54 <h_hdl_privmsg_user+0x15c>
     fac:	.word	0x000111dc
     fb0:	.word	0x00000054
     fb4:	.word	0x00000350
     fb8:	.word	0x0000038c
     fbc:	.word	0x00000064
     fc0:	.word	0x00000378
     fc4:	.word	0x000002d4
     fc8:	.word	0x00000060
     fcc:	.word	0x00000364
     fd0:	.word	0x00000288
     fd4:	.word	0x0000027c

00000fd8 <h_hdl_invite>:
     fd8:	ldr	r3, [r0, #16]
     fdc:	strd	r4, [sp, #-20]!	; 0xffffffec
     fe0:	ldr	r5, [pc, #200]	; 10b0 <h_hdl_invite+0xd8>
     fe4:	strd	r6, [sp, #8]
     fe8:	str	lr, [sp, #16]
     fec:	sub	sp, sp, #12
     ff0:	cmp	r3, #0
     ff4:	add	r5, pc, r5
     ff8:	beq	1010 <h_hdl_invite+0x38>
     ffc:	add	sp, sp, #12
    1000:	ldrd	r4, [sp]
    1004:	ldrd	r6, [sp, #8]
    1008:	add	sp, sp, #16
    100c:	pop	{pc}		; (ldr pc, [sp], #4)
    1010:	mov	r4, r0
    1014:	mov	r0, #1
    1018:	ldr	r7, [r4]
    101c:	ldr	r6, [r4, #12]
    1020:	mov	r1, r7
    1024:	mov	r2, r6
    1028:	bl	afc <add_callerid_accept_for_source>
    102c:	cmp	r0, #0
    1030:	moveq	r3, #716	; 0x2cc
    1034:	streq	r3, [r4, #16]
    1038:	beq	ffc <h_hdl_invite+0x24>
    103c:	mov	r0, r7
    1040:	mov	r1, r6
    1044:	bl	930 <allow_message>
    1048:	cmp	r0, #0
    104c:	bne	ffc <h_hdl_invite+0x24>
    1050:	ldr	r2, [pc, #92]	; 10b4 <h_hdl_invite+0xdc>
    1054:	add	r3, r6, #88	; 0x58
    1058:	ldr	r1, [r6, #56]	; 0x38
    105c:	ldr	r2, [r5, r2]
    1060:	ldr	r2, [r2, #412]	; 0x19c
    1064:	bics	r2, r2, r1
    1068:	beq	10a4 <h_hdl_invite+0xcc>
    106c:	ldr	r2, [pc, #68]	; 10b8 <h_hdl_invite+0xe0>
    1070:	add	r2, pc, r2
    1074:	ldr	r5, [pc, #64]	; 10bc <h_hdl_invite+0xe4>
    1078:	mov	r1, #512	; 0x200
    107c:	str	r2, [sp]
    1080:	ldr	r2, [pc, #56]	; 10c0 <h_hdl_invite+0xe8>
    1084:	add	r5, pc, r5
    1088:	mov	r0, r5
    108c:	add	r2, pc, r2
    1090:	bl	694 <snprintf@plt>
    1094:	mov	r3, #716	; 0x2cc
    1098:	str	r3, [r4, #16]
    109c:	str	r5, [r4, #28]
    10a0:	b	ffc <h_hdl_invite+0x24>
    10a4:	ldr	r2, [pc, #24]	; 10c4 <h_hdl_invite+0xec>
    10a8:	add	r2, pc, r2
    10ac:	b	1074 <h_hdl_invite+0x9c>
    10b0:	.word	0x00011004
    10b4:	.word	0x00000054
    10b8:	.word	0x000001b4
    10bc:	.word	0x00011030
    10c0:	.word	0x000001ec
    10c4:	.word	0x00000178

Disassembly of section .fini:

000010c8 <_fini>:
    10c8:	push	{r3, lr}
    10cc:	pop	{r3, pc}
