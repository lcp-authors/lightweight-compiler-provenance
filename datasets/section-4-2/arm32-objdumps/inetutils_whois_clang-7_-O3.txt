
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

000112bc <.init>:
   112bc:	push	{r3, lr}
   112c0:	bl	1160c <__assert_fail@plt+0x48>
   112c4:	pop	{r3, pc}

Disassembly of section .plt:

000112c8 <fdopen@plt-0x14>:
   112c8:	push	{lr}		; (str lr, [sp, #-4]!)
   112cc:	ldr	lr, [pc, #4]	; 112d8 <fdopen@plt-0x4>
   112d0:	add	lr, pc, lr
   112d4:	ldr	pc, [lr, #8]!
   112d8:	andeq	fp, r1, r8, lsr #26

000112dc <fdopen@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #110592	; 0x1b000
   112e4:	ldr	pc, [ip, #3368]!	; 0xd28

000112e8 <calloc@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #110592	; 0x1b000
   112f0:	ldr	pc, [ip, #3360]!	; 0xd20

000112f4 <fputs_unlocked@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #110592	; 0x1b000
   112fc:	ldr	pc, [ip, #3352]!	; 0xd18

00011300 <inet_aton@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #110592	; 0x1b000
   11308:	ldr	pc, [ip, #3344]!	; 0xd10

0001130c <strcmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #110592	; 0x1b000
   11314:	ldr	pc, [ip, #3336]!	; 0xd08

00011318 <strtol@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #110592	; 0x1b000
   11320:	ldr	pc, [ip, #3328]!	; 0xd00

00011324 <printf@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #110592	; 0x1b000
   1132c:	ldr	pc, [ip, #3320]!	; 0xcf8

00011330 <memmove@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #110592	; 0x1b000
   11338:	ldr	pc, [ip, #3312]!	; 0xcf0

0001133c <strchrnul@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #110592	; 0x1b000
   11344:	ldr	pc, [ip, #3304]!	; 0xce8

00011348 <free@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #110592	; 0x1b000
   11350:	ldr	pc, [ip, #3296]!	; 0xce0

00011354 <gai_strerror@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #110592	; 0x1b000
   1135c:	ldr	pc, [ip, #3288]!	; 0xcd8

00011360 <fgets@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #110592	; 0x1b000
   11368:	ldr	pc, [ip, #3280]!	; 0xcd0

0001136c <ferror@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #110592	; 0x1b000
   11374:	ldr	pc, [ip, #3272]!	; 0xcc8

00011378 <strndup@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #110592	; 0x1b000
   11380:	ldr	pc, [ip, #3264]!	; 0xcc0

00011384 <memcpy@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #110592	; 0x1b000
   1138c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011390 <signal@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #110592	; 0x1b000
   11398:	ldr	pc, [ip, #3248]!	; 0xcb0

0001139c <fwrite_unlocked@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #110592	; 0x1b000
   113a4:	ldr	pc, [ip, #3240]!	; 0xca8

000113a8 <sleep@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #110592	; 0x1b000
   113b0:	ldr	pc, [ip, #3232]!	; 0xca0

000113b4 <realloc@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #110592	; 0x1b000
   113bc:	ldr	pc, [ip, #3224]!	; 0xc98

000113c0 <strcasecmp@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #110592	; 0x1b000
   113c8:	ldr	pc, [ip, #3216]!	; 0xc90

000113cc <funlockfile@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #110592	; 0x1b000
   113d4:	ldr	pc, [ip, #3208]!	; 0xc88

000113d8 <fwrite@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #110592	; 0x1b000
   113e0:	ldr	pc, [ip, #3200]!	; 0xc80

000113e4 <strcat@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #110592	; 0x1b000
   113ec:	ldr	pc, [ip, #3192]!	; 0xc78

000113f0 <strcpy@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #110592	; 0x1b000
   113f8:	ldr	pc, [ip, #3184]!	; 0xc70

000113fc <error@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #110592	; 0x1b000
   11404:	ldr	pc, [ip, #3176]!	; 0xc68

00011408 <getenv@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #110592	; 0x1b000
   11410:	ldr	pc, [ip, #3168]!	; 0xc60

00011414 <puts@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #110592	; 0x1b000
   1141c:	ldr	pc, [ip, #3160]!	; 0xc58

00011420 <malloc@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #110592	; 0x1b000
   11428:	ldr	pc, [ip, #3152]!	; 0xc50

0001142c <__libc_start_main@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #110592	; 0x1b000
   11434:	ldr	pc, [ip, #3144]!	; 0xc48

00011438 <strerror@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #110592	; 0x1b000
   11440:	ldr	pc, [ip, #3136]!	; 0xc40

00011444 <__ctype_tolower_loc@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #110592	; 0x1b000
   1144c:	ldr	pc, [ip, #3128]!	; 0xc38

00011450 <__gmon_start__@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #110592	; 0x1b000
   11458:	ldr	pc, [ip, #3120]!	; 0xc30

0001145c <__ctype_b_loc@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #110592	; 0x1b000
   11464:	ldr	pc, [ip, #3112]!	; 0xc28

00011468 <exit@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #110592	; 0x1b000
   11470:	ldr	pc, [ip, #3104]!	; 0xc20

00011474 <strlen@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #110592	; 0x1b000
   1147c:	ldr	pc, [ip, #3096]!	; 0xc18

00011480 <strchr@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #110592	; 0x1b000
   11488:	ldr	pc, [ip, #3088]!	; 0xc10

0001148c <fprintf@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #110592	; 0x1b000
   11494:	ldr	pc, [ip, #3080]!	; 0xc08

00011498 <__errno_location@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #110592	; 0x1b000
   114a0:	ldr	pc, [ip, #3072]!	; 0xc00

000114a4 <strncasecmp@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #110592	; 0x1b000
   114ac:	ldr	pc, [ip, #3064]!	; 0xbf8

000114b0 <strerror_r@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #110592	; 0x1b000
   114b8:	ldr	pc, [ip, #3056]!	; 0xbf0

000114bc <memset@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #110592	; 0x1b000
   114c4:	ldr	pc, [ip, #3048]!	; 0xbe8

000114c8 <write@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #110592	; 0x1b000
   114d0:	ldr	pc, [ip, #3040]!	; 0xbe0

000114d4 <memchr@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #110592	; 0x1b000
   114dc:	ldr	pc, [ip, #3032]!	; 0xbd8

000114e0 <__overflow@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #110592	; 0x1b000
   114e8:	ldr	pc, [ip, #3024]!	; 0xbd0

000114ec <strrchr@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #110592	; 0x1b000
   114f4:	ldr	pc, [ip, #3016]!	; 0xbc8

000114f8 <vfprintf@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #110592	; 0x1b000
   11500:	ldr	pc, [ip, #3008]!	; 0xbc0

00011504 <fputc@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #110592	; 0x1b000
   1150c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011510 <sscanf@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #110592	; 0x1b000
   11518:	ldr	pc, [ip, #2992]!	; 0xbb0

0001151c <sprintf@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #110592	; 0x1b000
   11524:	ldr	pc, [ip, #2984]!	; 0xba8

00011528 <flockfile@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #110592	; 0x1b000
   11530:	ldr	pc, [ip, #2976]!	; 0xba0

00011534 <vsnprintf@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #110592	; 0x1b000
   1153c:	ldr	pc, [ip, #2968]!	; 0xb98

00011540 <qsort@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #110592	; 0x1b000
   11548:	ldr	pc, [ip, #2960]!	; 0xb90

0001154c <strpbrk@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #110592	; 0x1b000
   11554:	ldr	pc, [ip, #2952]!	; 0xb88

00011558 <freeaddrinfo@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #110592	; 0x1b000
   11560:	ldr	pc, [ip, #2944]!	; 0xb80

00011564 <getaddrinfo@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #110592	; 0x1b000
   1156c:	ldr	pc, [ip, #2936]!	; 0xb78

00011570 <socket@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #110592	; 0x1b000
   11578:	ldr	pc, [ip, #2928]!	; 0xb70

0001157c <gethostbyname@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #110592	; 0x1b000
   11584:	ldr	pc, [ip, #2920]!	; 0xb68

00011588 <fputs@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #110592	; 0x1b000
   11590:	ldr	pc, [ip, #2912]!	; 0xb60

00011594 <strncmp@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #110592	; 0x1b000
   1159c:	ldr	pc, [ip, #2904]!	; 0xb58

000115a0 <abort@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #110592	; 0x1b000
   115a8:	ldr	pc, [ip, #2896]!	; 0xb50

000115ac <close@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #110592	; 0x1b000
   115b4:	ldr	pc, [ip, #2888]!	; 0xb48

000115b8 <connect@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #110592	; 0x1b000
   115c0:	ldr	pc, [ip, #2880]!	; 0xb40

000115c4 <__assert_fail@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #110592	; 0x1b000
   115cc:	ldr	pc, [ip, #2872]!	; 0xb38

Disassembly of section .text:

000115d0 <argp_parse@@Base-0x18d8>:
   115d0:	mov	fp, #0
   115d4:	mov	lr, #0
   115d8:	pop	{r1}		; (ldr r1, [sp], #4)
   115dc:	mov	r2, sp
   115e0:	push	{r2}		; (str r2, [sp, #-4]!)
   115e4:	push	{r0}		; (str r0, [sp, #-4]!)
   115e8:	ldr	ip, [pc, #16]	; 11600 <__assert_fail@plt+0x3c>
   115ec:	push	{ip}		; (str ip, [sp, #-4]!)
   115f0:	ldr	r0, [pc, #12]	; 11604 <__assert_fail@plt+0x40>
   115f4:	ldr	r3, [pc, #12]	; 11608 <__assert_fail@plt+0x44>
   115f8:	bl	1142c <__libc_start_main@plt>
   115fc:	bl	115a0 <abort@plt>
   11600:	muleq	r1, r8, r8
   11604:	andeq	r1, r1, r0, asr #13
   11608:	andeq	sl, r1, r8, lsr r8
   1160c:	ldr	r3, [pc, #20]	; 11628 <__assert_fail@plt+0x64>
   11610:	ldr	r2, [pc, #20]	; 1162c <__assert_fail@plt+0x68>
   11614:	add	r3, pc, r3
   11618:	ldr	r2, [r3, r2]
   1161c:	cmp	r2, #0
   11620:	bxeq	lr
   11624:	b	11450 <__gmon_start__@plt>
   11628:	andeq	fp, r1, r4, ror #19
   1162c:	andeq	r0, r0, r8, lsl #2
   11630:	ldr	r0, [pc, #24]	; 11650 <__assert_fail@plt+0x8c>
   11634:	ldr	r3, [pc, #24]	; 11654 <__assert_fail@plt+0x90>
   11638:	cmp	r3, r0
   1163c:	bxeq	lr
   11640:	ldr	r3, [pc, #16]	; 11658 <__assert_fail@plt+0x94>
   11644:	cmp	r3, #0
   11648:	bxeq	lr
   1164c:	bx	r3
   11650:			; <UNDEFINED> instruction: 0x000308bc
   11654:			; <UNDEFINED> instruction: 0x000308bc
   11658:	andeq	r0, r0, r0
   1165c:	ldr	r0, [pc, #36]	; 11688 <__assert_fail@plt+0xc4>
   11660:	ldr	r1, [pc, #36]	; 1168c <__assert_fail@plt+0xc8>
   11664:	sub	r1, r1, r0
   11668:	asr	r1, r1, #2
   1166c:	add	r1, r1, r1, lsr #31
   11670:	asrs	r1, r1, #1
   11674:	bxeq	lr
   11678:	ldr	r3, [pc, #16]	; 11690 <__assert_fail@plt+0xcc>
   1167c:	cmp	r3, #0
   11680:	bxeq	lr
   11684:	bx	r3
   11688:			; <UNDEFINED> instruction: 0x000308bc
   1168c:			; <UNDEFINED> instruction: 0x000308bc
   11690:	andeq	r0, r0, r0
   11694:	push	{r4, lr}
   11698:	ldr	r4, [pc, #24]	; 116b8 <__assert_fail@plt+0xf4>
   1169c:	ldrb	r3, [r4]
   116a0:	cmp	r3, #0
   116a4:	popne	{r4, pc}
   116a8:	bl	11630 <__assert_fail@plt+0x6c>
   116ac:	mov	r3, #1
   116b0:	strb	r3, [r4]
   116b4:	pop	{r4, pc}
   116b8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   116bc:	b	1165c <__assert_fail@plt+0x98>
   116c0:	push	{fp, lr}
   116c4:	mov	fp, sp
   116c8:	sub	sp, sp, #24
   116cc:	mov	r9, r0
   116d0:	ldr	r0, [r1]
   116d4:	mov	r7, r1
   116d8:	bl	14738 <_obstack_memory_used@@Base+0x60>
   116dc:	movw	r0, #16984	; 0x4258
   116e0:	movw	r8, #2316	; 0x90c
   116e4:	movw	r3, #21464	; 0x53d8
   116e8:	mov	r1, #0
   116ec:	mov	r2, #0
   116f0:	mov	r4, #0
   116f4:	movt	r0, #1
   116f8:	movt	r8, #3
   116fc:	movt	r3, #1
   11700:	str	r0, [sp]
   11704:	mov	r0, r8
   11708:	bl	14348 <_obstack_begin@@Base>
   1170c:	movw	r0, #2364	; 0x93c
   11710:	movw	r1, #47747	; 0xba83
   11714:	movw	r5, #2068	; 0x814
   11718:	movt	r0, #3
   1171c:	movt	r1, #1
   11720:	movt	r5, #3
   11724:	str	r1, [r0]
   11728:	movw	r0, #47470	; 0xb96e
   1172c:	add	r1, r5, #20
   11730:	movt	r0, #1
   11734:	bl	14164 <argp_parse@@Base+0x12bc>
   11738:	sub	r0, fp, #4
   1173c:	mov	r1, r9
   11740:	mov	r2, r7
   11744:	mov	r3, #8
   11748:	stm	sp, {r0, r4}
   1174c:	add	r0, r5, #44	; 0x2c
   11750:	bl	12ea8 <argp_parse@@Base>
   11754:	ldr	r0, [r8, #12]
   11758:	ldr	r1, [r8, #16]
   1175c:	cmp	r1, r0
   11760:	bne	11774 <__assert_fail@plt+0x1b0>
   11764:	mov	r0, r8
   11768:	mov	r1, #1
   1176c:	bl	1449c <_obstack_newchunk@@Base>
   11770:	ldr	r0, [r8, #12]
   11774:	add	r1, r0, #1
   11778:	str	r1, [r8, #12]
   1177c:	strb	r4, [r0]
   11780:	ldr	r1, [r8, #8]
   11784:	ldr	r0, [r8, #12]
   11788:	ldr	r6, [fp, #-4]
   1178c:	cmp	r0, r1
   11790:	str	r1, [sp, #12]
   11794:	sub	r4, r9, r6
   11798:	ldrbeq	r1, [r8, #40]	; 0x28
   1179c:	orreq	r1, r1, #2
   117a0:	strbeq	r1, [r8, #40]	; 0x28
   117a4:	ldr	r3, [r8, #24]
   117a8:	ldr	r1, [r8, #4]
   117ac:	ldr	r2, [r8, #16]
   117b0:	add	r0, r3, r0
   117b4:	bic	r0, r0, r3
   117b8:	sub	r3, r0, r1
   117bc:	sub	r1, r2, r1
   117c0:	cmp	r3, r1
   117c4:	movhi	r0, r2
   117c8:	str	r0, [r8, #8]
   117cc:	str	r0, [r8, #12]
   117d0:	ldr	r0, [r5, #16]
   117d4:	orrs	r1, r4, r0
   117d8:	bne	117f4 <__assert_fail@plt+0x230>
   117dc:	movw	r2, #47771	; 0xba9b
   117e0:	mov	r0, #1
   117e4:	mov	r1, #0
   117e8:	movt	r2, #1
   117ec:	bl	113fc <error@plt>
   117f0:	ldr	r0, [r5, #16]
   117f4:	cmp	r0, #0
   117f8:	bne	1189c <__assert_fail@plt+0x2d8>
   117fc:	cmp	r4, #0
   11800:	beq	1189c <__assert_fail@plt+0x2d8>
   11804:	add	r0, r6, #1
   11808:	add	sl, r7, r6, lsl #2
   1180c:	sub	r6, r0, r9
   11810:	mov	r9, #32
   11814:	b	11828 <__assert_fail@plt+0x264>
   11818:	add	r1, r0, #1
   1181c:	add	r6, r6, #1
   11820:	str	r1, [r8, #12]
   11824:	strb	r9, [r0]
   11828:	ldr	r4, [sl], #4
   1182c:	mov	r0, r4
   11830:	bl	11474 <strlen@plt>
   11834:	mov	r7, r0
   11838:	ldr	r0, [r8, #12]
   1183c:	ldr	r1, [r8, #16]
   11840:	sub	r1, r1, r0
   11844:	cmp	r1, r7
   11848:	bcs	1185c <__assert_fail@plt+0x298>
   1184c:	mov	r0, r8
   11850:	mov	r1, r7
   11854:	bl	1449c <_obstack_newchunk@@Base>
   11858:	ldr	r0, [r8, #12]
   1185c:	mov	r1, r4
   11860:	mov	r2, r7
   11864:	bl	11384 <memcpy@plt>
   11868:	ldr	r0, [r8, #12]
   1186c:	cmp	r6, #0
   11870:	add	r0, r0, r7
   11874:	str	r0, [r8, #12]
   11878:	beq	1189c <__assert_fail@plt+0x2d8>
   1187c:	ldr	r1, [r8, #16]
   11880:	cmp	r1, r0
   11884:	bne	11818 <__assert_fail@plt+0x254>
   11888:	mov	r0, r8
   1188c:	mov	r1, #1
   11890:	bl	1449c <_obstack_newchunk@@Base>
   11894:	ldr	r0, [r8, #12]
   11898:	b	11818 <__assert_fail@plt+0x254>
   1189c:	ldr	r0, [r8, #12]
   118a0:	ldr	r1, [r8, #16]
   118a4:	cmp	r1, r0
   118a8:	bne	118bc <__assert_fail@plt+0x2f8>
   118ac:	mov	r0, r8
   118b0:	mov	r1, #1
   118b4:	bl	1449c <_obstack_newchunk@@Base>
   118b8:	ldr	r0, [r8, #12]
   118bc:	add	r1, r0, #1
   118c0:	str	r1, [r8, #12]
   118c4:	mov	r1, #0
   118c8:	strb	r1, [r0]
   118cc:	ldr	sl, [r8, #8]
   118d0:	ldr	r0, [r8, #12]
   118d4:	cmp	r0, sl
   118d8:	ldrbeq	r1, [r8, #40]	; 0x28
   118dc:	orreq	r1, r1, #2
   118e0:	strbeq	r1, [r8, #40]	; 0x28
   118e4:	ldr	r3, [r8, #24]
   118e8:	ldr	r1, [r8, #4]
   118ec:	ldr	r2, [r8, #16]
   118f0:	add	r0, r3, r0
   118f4:	bic	r0, r0, r3
   118f8:	sub	r3, r0, r1
   118fc:	sub	r1, r2, r1
   11900:	cmp	r3, r1
   11904:	movhi	r0, r2
   11908:	str	r0, [r8, #8]
   1190c:	str	r0, [r8, #12]
   11910:	ldr	r0, [r5, #8]
   11914:	cmp	r0, #0
   11918:	bne	11af8 <__assert_fail@plt+0x534>
   1191c:	ldr	r6, [r5, #28]
   11920:	cmp	r6, #0
   11924:	beq	11a40 <__assert_fail@plt+0x47c>
   11928:	sub	r0, sl, #1
   1192c:	mov	r4, #0
   11930:	str	r0, [fp, #-8]
   11934:	ldr	r0, [fp, #-8]
   11938:	mov	r7, r0
   1193c:	ldrb	r1, [r0, #1]!
   11940:	cmp	r1, #0
   11944:	bne	11938 <__assert_fail@plt+0x374>
   11948:	mov	r8, r5
   1194c:	sub	r0, r6, #1
   11950:	mov	r1, #1
   11954:	ldrb	r2, [r0, #1]!
   11958:	mov	r5, r1
   1195c:	add	r1, r1, #1
   11960:	cmp	r2, #0
   11964:	bne	11954 <__assert_fail@plt+0x390>
   11968:	sub	r9, r6, #2
   1196c:	add	r0, r9, r5
   11970:	cmp	r0, r6
   11974:	cmpcs	r7, sl
   11978:	bcc	119ac <__assert_fail@plt+0x3e8>
   1197c:	bl	11444 <__ctype_tolower_loc@plt>
   11980:	ldrb	r2, [r7]
   11984:	ldr	r0, [r0]
   11988:	ldrb	r1, [r9, r5]
   1198c:	ldr	r0, [r0, r2, lsl #2]
   11990:	cmp	r0, r1
   11994:	bne	119ac <__assert_fail@plt+0x3e8>
   11998:	sub	r5, r5, #1
   1199c:	sub	r7, r7, #1
   119a0:	cmp	r5, #1
   119a4:	bne	1196c <__assert_fail@plt+0x3a8>
   119a8:	b	119c8 <__assert_fail@plt+0x404>
   119ac:	add	r4, r4, #1
   119b0:	mov	r5, r8
   119b4:	add	r0, r8, r4, lsl #2
   119b8:	ldr	r6, [r0, #28]
   119bc:	cmp	r6, #0
   119c0:	bne	11934 <__assert_fail@plt+0x370>
   119c4:	b	11a40 <__assert_fail@plt+0x47c>
   119c8:	ldr	r0, [r8]
   119cc:	mov	r5, r8
   119d0:	cmp	r0, #0
   119d4:	beq	119e4 <__assert_fail@plt+0x420>
   119d8:	movw	r0, #47792	; 0xbab0
   119dc:	movt	r0, #1
   119e0:	bl	11414 <puts@plt>
   119e4:	movw	r0, #47826	; 0xbad2
   119e8:	mov	r1, #0
   119ec:	movt	r0, #1
   119f0:	bl	11c74 <__assert_fail@plt+0x6b0>
   119f4:	movw	r4, #2360	; 0x938
   119f8:	mov	r1, sl
   119fc:	movt	r4, #3
   11a00:	str	r0, [r4]
   11a04:	bl	11d94 <__assert_fail@plt+0x7d0>
   11a08:	str	r0, [r5, #8]
   11a0c:	ldr	r0, [r4]
   11a10:	bl	115ac <close@plt>
   11a14:	ldr	r1, [r5, #8]
   11a18:	cmp	r1, #0
   11a1c:	bne	11a28 <__assert_fail@plt+0x464>
   11a20:	mov	r0, #0
   11a24:	bl	11468 <exit@plt>
   11a28:	movw	r0, #47845	; 0xbae5
   11a2c:	movt	r0, #1
   11a30:	bl	11324 <printf@plt>
   11a34:	ldr	r0, [r5, #8]
   11a38:	cmp	r0, #0
   11a3c:	bne	11af8 <__assert_fail@plt+0x534>
   11a40:	mov	r0, sl
   11a44:	bl	11f40 <__assert_fail@plt+0x97c>
   11a48:	str	r0, [r5, #8]
   11a4c:	mov	r1, r0
   11a50:	ldrb	r0, [r0]
   11a54:	cmp	r0, #3
   11a58:	bhi	11ae0 <__assert_fail@plt+0x51c>
   11a5c:	add	r2, pc, #0
   11a60:	ldr	pc, [r2, r0, lsl #2]
   11a64:	andeq	r1, r1, r4, ror sl
   11a68:	andeq	r1, r1, ip, lsr #21
   11a6c:			; <UNDEFINED> instruction: 0x00011abc
   11a70:	andeq	r1, r1, ip, asr #21
   11a74:	movw	r0, #47879	; 0xbb07
   11a78:	movt	r0, #1
   11a7c:	bl	11408 <getenv@plt>
   11a80:	movw	r1, #47826	; 0xbad2
   11a84:	cmp	r0, #0
   11a88:	movt	r1, #1
   11a8c:	movne	r1, r0
   11a90:	str	r1, [r5, #8]
   11a94:	ldr	r0, [r5]
   11a98:	cmp	r0, #0
   11a9c:	beq	11af8 <__assert_fail@plt+0x534>
   11aa0:	movw	r0, #47892	; 0xbb14
   11aa4:	movt	r0, #1
   11aa8:	b	11af4 <__assert_fail@plt+0x530>
   11aac:	movw	r0, #47918	; 0xbb2e
   11ab0:	movt	r0, #1
   11ab4:	bl	11414 <puts@plt>
   11ab8:	ldr	r1, [r5, #8]
   11abc:	add	r0, r1, #1
   11ac0:	bl	11414 <puts@plt>
   11ac4:	mov	r0, #0
   11ac8:	bl	11468 <exit@plt>
   11acc:	movw	r0, #47989	; 0xbb75
   11ad0:	movt	r0, #1
   11ad4:	bl	11414 <puts@plt>
   11ad8:	mov	r0, #0
   11adc:	bl	11468 <exit@plt>
   11ae0:	ldr	r0, [r5]
   11ae4:	cmp	r0, #0
   11ae8:	beq	11af8 <__assert_fail@plt+0x534>
   11aec:	movw	r0, #48019	; 0xbb93
   11af0:	movt	r0, #1
   11af4:	bl	11324 <printf@plt>
   11af8:	movw	r0, #48037	; 0xbba5
   11afc:	movt	r0, #1
   11b00:	bl	11408 <getenv@plt>
   11b04:	cmp	r0, #0
   11b08:	ldr	r1, [sp, #12]
   11b0c:	mov	r2, sl
   11b10:	movne	r0, #0
   11b14:	strne	r0, [r5, #4]
   11b18:	ldr	r0, [r5, #8]
   11b1c:	bl	12444 <__assert_fail@plt+0xe80>
   11b20:	mov	r6, r0
   11b24:	ldr	r0, [r5]
   11b28:	cmp	r0, #0
   11b2c:	beq	11b40 <__assert_fail@plt+0x57c>
   11b30:	movw	r0, #48048	; 0xbbb0
   11b34:	mov	r1, r6
   11b38:	movt	r0, #1
   11b3c:	bl	11324 <printf@plt>
   11b40:	mov	r0, r6
   11b44:	bl	11474 <strlen@plt>
   11b48:	movw	r4, #9868	; 0x268c
   11b4c:	movw	r1, #2573	; 0xa0d
   11b50:	mov	r2, r6
   11b54:	strh	r1, [r2, r0]!
   11b58:	mov	r0, #0
   11b5c:	movt	r4, #1
   11b60:	strb	r0, [r2, #2]
   11b64:	mov	r0, #15
   11b68:	mov	r1, r4
   11b6c:	bl	11390 <signal@plt>
   11b70:	mov	r0, #2
   11b74:	mov	r1, r4
   11b78:	bl	11390 <signal@plt>
   11b7c:	ldr	r0, [r5, #8]
   11b80:	ldr	r1, [r5, #12]
   11b84:	bl	11c74 <__assert_fail@plt+0x6b0>
   11b88:	movw	r4, #2360	; 0x938
   11b8c:	mov	r1, r6
   11b90:	movt	r4, #3
   11b94:	str	r0, [r4]
   11b98:	bl	126b8 <__assert_fail@plt+0x10f4>
   11b9c:	ldr	r0, [r4]
   11ba0:	bl	11f3c <__assert_fail@plt+0x978>
   11ba4:	mov	r0, #0
   11ba8:	bl	11468 <exit@plt>
   11bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bb0:	add	fp, sp, #28
   11bb4:	sub	sp, sp, #4
   11bb8:	ldr	r6, [r1]
   11bbc:	cmp	r6, #0
   11bc0:	beq	11c5c <__assert_fail@plt+0x698>
   11bc4:	mov	r5, r0
   11bc8:	sub	r0, r0, #1
   11bcc:	mov	r9, r1
   11bd0:	mov	sl, #0
   11bd4:	str	r0, [sp]
   11bd8:	ldr	r0, [sp]
   11bdc:	mov	r4, r0
   11be0:	ldrb	r1, [r0, #1]!
   11be4:	cmp	r1, #0
   11be8:	bne	11bdc <__assert_fail@plt+0x618>
   11bec:	sub	r0, r6, #1
   11bf0:	mov	r1, #1
   11bf4:	ldrb	r2, [r0, #1]!
   11bf8:	mov	r7, r1
   11bfc:	add	r1, r1, #1
   11c00:	cmp	r2, #0
   11c04:	bne	11bf4 <__assert_fail@plt+0x630>
   11c08:	sub	r8, r6, #2
   11c0c:	add	r0, r8, r7
   11c10:	cmp	r0, r6
   11c14:	cmpcs	r4, r5
   11c18:	bcc	11c4c <__assert_fail@plt+0x688>
   11c1c:	bl	11444 <__ctype_tolower_loc@plt>
   11c20:	ldrb	r2, [r4]
   11c24:	ldr	r0, [r0]
   11c28:	ldrb	r1, [r8, r7]
   11c2c:	ldr	r0, [r0, r2, lsl #2]
   11c30:	cmp	r0, r1
   11c34:	bne	11c4c <__assert_fail@plt+0x688>
   11c38:	sub	r7, r7, #1
   11c3c:	sub	r4, r4, #1
   11c40:	cmp	r7, #1
   11c44:	bne	11c0c <__assert_fail@plt+0x648>
   11c48:	b	11c68 <__assert_fail@plt+0x6a4>
   11c4c:	add	sl, sl, #1
   11c50:	ldr	r6, [r9, sl, lsl #2]
   11c54:	cmp	r6, #0
   11c58:	bne	11bd8 <__assert_fail@plt+0x614>
   11c5c:	mov	r0, #0
   11c60:	sub	sp, fp, #28
   11c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c68:	mov	r0, #1
   11c6c:	sub	sp, fp, #28
   11c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c74:	push	{r4, r5, fp, lr}
   11c78:	add	fp, sp, #8
   11c7c:	sub	sp, sp, #40	; 0x28
   11c80:	add	r2, sp, #8
   11c84:	mov	r4, r0
   11c88:	vmov.i32	q8, #0	; 0x00000000
   11c8c:	mov	r5, r1
   11c90:	movw	r1, #47470	; 0xb96e
   11c94:	add	r3, sp, #4
   11c98:	mov	r0, r2
   11c9c:	movt	r1, #1
   11ca0:	cmp	r5, #0
   11ca4:	vst1.64	{d16-d17}, [r0]!
   11ca8:	movne	r1, r5
   11cac:	vst1.64	{d16-d17}, [r0]
   11cb0:	mov	r0, #1
   11cb4:	str	r0, [sp, #16]
   11cb8:	mov	r0, r4
   11cbc:	bl	11564 <getaddrinfo@plt>
   11cc0:	cmp	r0, #0
   11cc4:	beq	11cf0 <__assert_fail@plt+0x72c>
   11cc8:	movw	r1, #48770	; 0xbe82
   11ccc:	cmp	r5, #0
   11cd0:	add	r2, sp, #8
   11cd4:	add	r3, sp, #4
   11cd8:	mov	r0, r4
   11cdc:	movt	r1, #1
   11ce0:	movne	r1, r5
   11ce4:	bl	11564 <getaddrinfo@plt>
   11ce8:	cmp	r0, #0
   11cec:	bne	11d80 <__assert_fail@plt+0x7bc>
   11cf0:	ldr	r4, [sp, #4]
   11cf4:	cmp	r4, #0
   11cf8:	beq	11d74 <__assert_fail@plt+0x7b0>
   11cfc:	mov	r2, r4
   11d00:	ldmib	r2, {r0, r1, r2}
   11d04:	bl	11570 <socket@plt>
   11d08:	mov	r5, r0
   11d0c:	cmp	r0, #0
   11d10:	blt	11d38 <__assert_fail@plt+0x774>
   11d14:	ldr	r0, [sp, #4]
   11d18:	ldr	r2, [r0, #16]
   11d1c:	ldr	r1, [r0, #20]
   11d20:	mov	r0, r5
   11d24:	bl	115b8 <connect@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11d68 <__assert_fail@plt+0x7a4>
   11d30:	mov	r0, r5
   11d34:	bl	115ac <close@plt>
   11d38:	ldr	r0, [sp, #4]
   11d3c:	ldr	r2, [r0, #28]
   11d40:	cmp	r2, #0
   11d44:	str	r2, [sp, #4]
   11d48:	bne	11d00 <__assert_fail@plt+0x73c>
   11d4c:	cmp	r2, #0
   11d50:	beq	11d74 <__assert_fail@plt+0x7b0>
   11d54:	mov	r0, r4
   11d58:	bl	11558 <freeaddrinfo@plt>
   11d5c:	mov	r0, r5
   11d60:	sub	sp, fp, #8
   11d64:	pop	{r4, r5, fp, pc}
   11d68:	ldr	r2, [sp, #4]
   11d6c:	cmp	r2, #0
   11d70:	bne	11d54 <__assert_fail@plt+0x790>
   11d74:	movw	r0, #48794	; 0xbe9a
   11d78:	movt	r0, #1
   11d7c:	bl	12bdc <__assert_fail@plt+0x1618>
   11d80:	bl	11354 <gai_strerror@plt>
   11d84:	mov	r1, r0
   11d88:	movw	r0, #48778	; 0xbe8a
   11d8c:	movt	r0, #1
   11d90:	bl	12c40 <__assert_fail@plt+0x167c>
   11d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d98:	add	fp, sp, #28
   11d9c:	sub	sp, sp, #108	; 0x6c
   11da0:	mov	r4, r0
   11da4:	mov	r0, r1
   11da8:	mov	r5, r1
   11dac:	bl	11474 <strlen@plt>
   11db0:	add	r0, r0, #4
   11db4:	bl	14df4 <_obstack_memory_used@@Base+0x71c>
   11db8:	mov	r1, #61	; 0x3d
   11dbc:	mov	r6, r0
   11dc0:	strb	r1, [r0], #1
   11dc4:	mov	r1, r5
   11dc8:	bl	113f0 <strcpy@plt>
   11dcc:	mov	r0, r6
   11dd0:	bl	11474 <strlen@plt>
   11dd4:	movw	r1, #2573	; 0xa0d
   11dd8:	mov	r2, r6
   11ddc:	mov	r7, #0
   11de0:	strh	r1, [r2, r0]!
   11de4:	movw	r1, #44567	; 0xae17
   11de8:	mov	r0, r4
   11dec:	movt	r1, #1
   11df0:	strb	r7, [r2, #2]
   11df4:	bl	112dc <fdopen@plt>
   11df8:	mov	r5, r0
   11dfc:	mov	r0, r6
   11e00:	bl	11474 <strlen@plt>
   11e04:	mov	r2, r0
   11e08:	mov	r0, r4
   11e0c:	mov	r1, r6
   11e10:	str	r6, [sp, #4]
   11e14:	bl	114c8 <write@plt>
   11e18:	cmp	r0, #0
   11e1c:	blt	11f24 <__assert_fail@plt+0x960>
   11e20:	add	r6, sp, #8
   11e24:	mov	r1, #100	; 0x64
   11e28:	mov	r2, r5
   11e2c:	mov	r0, r6
   11e30:	bl	11360 <fgets@plt>
   11e34:	cmp	r0, #0
   11e38:	beq	11f00 <__assert_fail@plt+0x93c>
   11e3c:	movw	r9, #48753	; 0xbe71
   11e40:	movw	r8, #2252	; 0x8cc
   11e44:	add	r4, r6, #1
   11e48:	mov	r7, #0
   11e4c:	movt	r9, #1
   11e50:	movt	r8, #3
   11e54:	mov	r0, r6
   11e58:	mov	r1, r9
   11e5c:	mov	r2, #16
   11e60:	bl	11594 <strncmp@plt>
   11e64:	cmp	r7, #0
   11e68:	cmpeq	r0, #0
   11e6c:	bne	11edc <__assert_fail@plt+0x918>
   11e70:	mov	r1, r4
   11e74:	mov	r2, r6
   11e78:	mov	r0, r2
   11e7c:	ldrb	r3, [r2], #1
   11e80:	mov	sl, r1
   11e84:	add	r1, r1, #1
   11e88:	cmp	r3, #58	; 0x3a
   11e8c:	bne	11e78 <__assert_fail@plt+0x8b4>
   11e90:	ldrb	r1, [r0, #1]!
   11e94:	add	sl, sl, #1
   11e98:	cmp	r1, #32
   11e9c:	beq	11e90 <__assert_fail@plt+0x8cc>
   11ea0:	bl	11474 <strlen@plt>
   11ea4:	add	r0, r0, #1
   11ea8:	bl	14df4 <_obstack_memory_used@@Base+0x71c>
   11eac:	mov	r7, r0
   11eb0:	mov	r0, #0
   11eb4:	b	11ec0 <__assert_fail@plt+0x8fc>
   11eb8:	strb	r1, [r7, r0]
   11ebc:	add	r0, r0, #1
   11ec0:	add	r1, sl, r0
   11ec4:	ldrb	r1, [r1, #-1]
   11ec8:	cmp	r1, #10
   11ecc:	cmpne	r1, #13
   11ed0:	bne	11eb8 <__assert_fail@plt+0x8f4>
   11ed4:	mov	r1, #0
   11ed8:	strb	r1, [r7, r0]
   11edc:	ldr	r1, [r8]
   11ee0:	mov	r0, r6
   11ee4:	bl	11588 <fputs@plt>
   11ee8:	mov	r0, r6
   11eec:	mov	r1, #100	; 0x64
   11ef0:	mov	r2, r5
   11ef4:	bl	11360 <fgets@plt>
   11ef8:	cmp	r0, #0
   11efc:	bne	11e54 <__assert_fail@plt+0x890>
   11f00:	mov	r0, r5
   11f04:	bl	1136c <ferror@plt>
   11f08:	cmp	r0, #0
   11f0c:	bne	11f30 <__assert_fail@plt+0x96c>
   11f10:	ldr	r0, [sp, #4]
   11f14:	bl	14258 <argp_parse@@Base+0x13b0>
   11f18:	mov	r0, r7
   11f1c:	sub	sp, fp, #28
   11f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f24:	movw	r0, #48568	; 0xbdb8
   11f28:	movt	r0, #1
   11f2c:	bl	12bdc <__assert_fail@plt+0x1618>
   11f30:	movw	r0, #48663	; 0xbe17
   11f34:	movt	r0, #1
   11f38:	bl	12bdc <__assert_fail@plt+0x1618>
   11f3c:	b	115ac <close@plt>
   11f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f44:	add	fp, sp, #28
   11f48:	sub	sp, sp, #28
   11f4c:	ldrb	r6, [r0]
   11f50:	movw	r4, #43180	; 0xa8ac
   11f54:	movt	r4, #1
   11f58:	cmp	r6, #0
   11f5c:	beq	11fb0 <__assert_fail@plt+0x9ec>
   11f60:	ldrb	r1, [r0, #1]
   11f64:	cmp	r1, #32
   11f68:	bne	11f90 <__assert_fail@plt+0x9cc>
   11f6c:	mov	r5, r0
   11f70:	ldrb	r6, [r5, #2]!
   11f74:	cmp	r6, #0
   11f78:	beq	11fb0 <__assert_fail@plt+0x9ec>
   11f7c:	ldrb	r0, [r0, #3]
   11f80:	cmp	r0, #32
   11f84:	mov	r0, r5
   11f88:	beq	11f70 <__assert_fail@plt+0x9ac>
   11f8c:	b	11f94 <__assert_fail@plt+0x9d0>
   11f90:	mov	r5, r0
   11f94:	mov	r0, r5
   11f98:	mov	r1, #64	; 0x40
   11f9c:	bl	11480 <strchr@plt>
   11fa0:	movw	r4, #44348	; 0xad3c
   11fa4:	cmp	r0, #0
   11fa8:	movt	r4, #1
   11fac:	beq	11fbc <__assert_fail@plt+0x9f8>
   11fb0:	mov	r0, r4
   11fb4:	sub	sp, fp, #28
   11fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fbc:	movw	r1, #48072	; 0xbbc8
   11fc0:	mov	r0, r5
   11fc4:	movt	r1, #1
   11fc8:	bl	1154c <strpbrk@plt>
   11fcc:	cmp	r0, #0
   11fd0:	beq	1206c <__assert_fail@plt+0xaa8>
   11fd4:	mov	r0, r5
   11fd8:	mov	r1, #58	; 0x3a
   11fdc:	bl	11480 <strchr@plt>
   11fe0:	cmp	r0, #0
   11fe4:	beq	12178 <__assert_fail@plt+0xbb4>
   11fe8:	mov	r0, #0
   11fec:	movw	r1, #48092	; 0xbbdc
   11ff0:	add	r2, sp, #24
   11ff4:	add	r3, sp, #20
   11ff8:	str	r0, [sp, #24]
   11ffc:	str	r0, [sp, #20]
   12000:	movt	r1, #1
   12004:	mov	r0, r5
   12008:	bl	11510 <sscanf@plt>
   1200c:	cmp	r0, #0
   12010:	beq	12220 <__assert_fail@plt+0xc5c>
   12014:	movw	r1, #64480	; 0xfbe0
   12018:	movt	r1, #2
   1201c:	ldr	r4, [r1, #8]
   12020:	cmp	r4, #0
   12024:	beq	12234 <__assert_fail@plt+0xc70>
   12028:	ldr	r0, [sp, #24]
   1202c:	ldrh	r2, [sp, #20]
   12030:	orr	r0, r2, r0, lsl #16
   12034:	ldm	r1, {r2, r3}
   12038:	and	r3, r3, r0
   1203c:	cmp	r3, r2
   12040:	beq	11fb0 <__assert_fail@plt+0x9ec>
   12044:	add	r1, r1, #12
   12048:	ldr	r4, [r1, #8]
   1204c:	cmp	r4, #0
   12050:	beq	12234 <__assert_fail@plt+0xc70>
   12054:	ldm	r1, {r2, r3}
   12058:	add	r1, r1, #12
   1205c:	and	r3, r3, r0
   12060:	cmp	r3, r2
   12064:	bne	12048 <__assert_fail@plt+0xa84>
   12068:	b	11fb0 <__assert_fail@plt+0x9ec>
   1206c:	cmp	r6, #0
   12070:	mov	r4, r5
   12074:	beq	12088 <__assert_fail@plt+0xac4>
   12078:	mov	r4, r5
   1207c:	ldrb	r0, [r4, #1]!
   12080:	cmp	r0, #0
   12084:	bne	1207c <__assert_fail@plt+0xab8>
   12088:	movw	r1, #44620	; 0xae4c
   1208c:	mov	r0, r5
   12090:	mov	r2, #2
   12094:	movt	r1, #1
   12098:	bl	114a4 <strncasecmp@plt>
   1209c:	cmp	r0, #0
   120a0:	bne	12140 <__assert_fail@plt+0xb7c>
   120a4:	ldrb	r0, [r5, #2]!
   120a8:	cmp	r0, #32
   120ac:	subne	r0, r0, #48	; 0x30
   120b0:	uxtbne	r0, r0
   120b4:	cmpne	r0, #9
   120b8:	bhi	12140 <__assert_fail@plt+0xb7c>
   120bc:	mov	r0, r5
   120c0:	mov	r1, #0
   120c4:	mov	r2, #10
   120c8:	bl	11318 <strtol@plt>
   120cc:	mov	r5, r0
   120d0:	movw	r0, #5072	; 0x13d0
   120d4:	movt	r0, #6
   120d8:	cmp	r5, r0
   120dc:	blt	120ec <__assert_fail@plt+0xb28>
   120e0:	movw	r0, #48402	; 0xbd12
   120e4:	movt	r0, #1
   120e8:	bl	11414 <puts@plt>
   120ec:	movw	r1, #64768	; 0xfd00
   120f0:	movw	r0, #44008	; 0xabe8
   120f4:	movt	r1, #2
   120f8:	movt	r0, #1
   120fc:	ldr	r4, [r1, #4]
   12100:	cmp	r4, #0
   12104:	beq	12388 <__assert_fail@plt+0xdc4>
   12108:	add	r1, r1, #12
   1210c:	ldrh	r2, [r1, #-12]
   12110:	cmp	r5, r2
   12114:	blt	12124 <__assert_fail@plt+0xb60>
   12118:	ldrh	r2, [r1, #-10]
   1211c:	cmp	r5, r2
   12120:	ble	11fb0 <__assert_fail@plt+0x9ec>
   12124:	ldr	r4, [r1], #8
   12128:	cmp	r4, #0
   1212c:	bne	1210c <__assert_fail@plt+0xb48>
   12130:	mov	r4, r0
   12134:	mov	r0, r4
   12138:	sub	sp, fp, #28
   1213c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12140:	movw	r1, #48089	; 0xbbd9
   12144:	sub	r0, r4, #2
   12148:	mov	r2, #2
   1214c:	movt	r1, #1
   12150:	bl	114a4 <strncasecmp@plt>
   12154:	movw	r2, #48076	; 0xbbcc
   12158:	movw	r1, #44348	; 0xad3c
   1215c:	cmp	r0, #0
   12160:	movt	r2, #1
   12164:	movt	r1, #1
   12168:	moveq	r1, r2
   1216c:	mov	r0, r1
   12170:	sub	sp, fp, #28
   12174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12178:	add	r1, sp, #16
   1217c:	add	r0, sp, #12
   12180:	add	r2, sp, #24
   12184:	add	r3, sp, #20
   12188:	str	r1, [sp]
   1218c:	movw	r1, #48830	; 0xbebe
   12190:	str	r0, [sp, #4]
   12194:	mov	r0, r5
   12198:	movt	r1, #1
   1219c:	bl	11510 <sscanf@plt>
   121a0:	mov	r1, #0
   121a4:	cmp	r0, #4
   121a8:	bne	121cc <__assert_fail@plt+0xc08>
   121ac:	ldr	r0, [sp, #20]
   121b0:	ldr	r1, [sp, #24]
   121b4:	lsl	r0, r0, #16
   121b8:	add	r0, r0, r1, lsl #24
   121bc:	ldr	r1, [sp, #16]
   121c0:	add	r0, r0, r1, lsl #8
   121c4:	ldr	r1, [sp, #12]
   121c8:	add	r1, r0, r1
   121cc:	cmp	r1, #0
   121d0:	beq	12268 <__assert_fail@plt+0xca4>
   121d4:	movw	r0, #53764	; 0xd204
   121d8:	movt	r0, #2
   121dc:	ldr	r4, [r0, #8]
   121e0:	cmp	r4, #0
   121e4:	beq	12354 <__assert_fail@plt+0xd90>
   121e8:	ldm	r0, {r2, r3}
   121ec:	and	r3, r3, r1
   121f0:	cmp	r3, r2
   121f4:	beq	11fb0 <__assert_fail@plt+0x9ec>
   121f8:	add	r0, r0, #12
   121fc:	ldr	r4, [r0, #8]
   12200:	cmp	r4, #0
   12204:	beq	12354 <__assert_fail@plt+0xd90>
   12208:	ldm	r0, {r2, r3}
   1220c:	add	r0, r0, #12
   12210:	and	r3, r3, r1
   12214:	cmp	r3, r2
   12218:	bne	121fc <__assert_fail@plt+0xc38>
   1221c:	b	11fb0 <__assert_fail@plt+0x9ec>
   12220:	movw	r4, #44348	; 0xad3c
   12224:	movt	r4, #1
   12228:	mov	r0, r4
   1222c:	sub	sp, fp, #28
   12230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12234:	movw	r0, #2068	; 0x814
   12238:	movw	r4, #44008	; 0xabe8
   1223c:	movt	r0, #3
   12240:	movt	r4, #1
   12244:	ldr	r0, [r0]
   12248:	cmp	r0, #0
   1224c:	beq	11fb0 <__assert_fail@plt+0x9ec>
   12250:	movw	r0, #48099	; 0xbbe3
   12254:	movt	r0, #1
   12258:	bl	11414 <puts@plt>
   1225c:	mov	r0, r4
   12260:	sub	sp, fp, #28
   12264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12268:	movw	r0, #64992	; 0xfde0
   1226c:	movt	r0, #2
   12270:	ldr	r7, [r0]
   12274:	cmp	r7, #0
   12278:	beq	12314 <__assert_fail@plt+0xd50>
   1227c:	sub	r0, r5, #1
   12280:	mov	sl, #0
   12284:	str	r0, [sp, #8]
   12288:	ldr	r0, [sp, #8]
   1228c:	mov	r6, r0
   12290:	ldrb	r1, [r0, #1]!
   12294:	cmp	r1, #0
   12298:	bne	1228c <__assert_fail@plt+0xcc8>
   1229c:	sub	r0, r7, #1
   122a0:	mov	r1, #1
   122a4:	ldrb	r2, [r0, #1]!
   122a8:	mov	r8, r1
   122ac:	add	r1, r1, #1
   122b0:	cmp	r2, #0
   122b4:	bne	122a4 <__assert_fail@plt+0xce0>
   122b8:	sub	r9, r7, #2
   122bc:	add	r0, r9, r8
   122c0:	cmp	r0, r7
   122c4:	cmpcs	r6, r5
   122c8:	bcc	122fc <__assert_fail@plt+0xd38>
   122cc:	bl	11444 <__ctype_tolower_loc@plt>
   122d0:	ldrb	r2, [r6]
   122d4:	ldr	r0, [r0]
   122d8:	ldrb	r1, [r9, r8]
   122dc:	ldr	r0, [r0, r2, lsl #2]
   122e0:	cmp	r0, r1
   122e4:	bne	122fc <__assert_fail@plt+0xd38>
   122e8:	sub	r8, r8, #1
   122ec:	sub	r6, r6, #1
   122f0:	cmp	r8, #1
   122f4:	bne	122bc <__assert_fail@plt+0xcf8>
   122f8:	b	12398 <__assert_fail@plt+0xdd4>
   122fc:	movw	r0, #64992	; 0xfde0
   12300:	add	sl, sl, #2
   12304:	movt	r0, #2
   12308:	ldr	r7, [r0, sl, lsl #2]
   1230c:	cmp	r7, #0
   12310:	bne	12288 <__assert_fail@plt+0xcc4>
   12314:	mov	r0, r5
   12318:	mov	r1, #46	; 0x2e
   1231c:	bl	11480 <strchr@plt>
   12320:	cmp	r0, #0
   12324:	beq	123b4 <__assert_fail@plt+0xdf0>
   12328:	movw	r0, #2068	; 0x814
   1232c:	movt	r0, #3
   12330:	ldr	r0, [r0]
   12334:	cmp	r0, #0
   12338:	beq	11fb0 <__assert_fail@plt+0x9ec>
   1233c:	movw	r0, #48342	; 0xbcd6
   12340:	movt	r0, #1
   12344:	bl	11414 <puts@plt>
   12348:	mov	r0, r4
   1234c:	sub	sp, fp, #28
   12350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12354:	movw	r0, #2068	; 0x814
   12358:	movw	r4, #44008	; 0xabe8
   1235c:	movt	r0, #3
   12360:	movt	r4, #1
   12364:	ldr	r0, [r0]
   12368:	cmp	r0, #0
   1236c:	beq	11fb0 <__assert_fail@plt+0x9ec>
   12370:	movw	r0, #48189	; 0xbc3d
   12374:	movt	r0, #1
   12378:	bl	11414 <puts@plt>
   1237c:	mov	r0, r4
   12380:	sub	sp, fp, #28
   12384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12388:	mov	r4, r0
   1238c:	mov	r0, r4
   12390:	sub	sp, fp, #28
   12394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12398:	movw	r1, #64992	; 0xfde0
   1239c:	orr	r0, sl, #1
   123a0:	movt	r1, #2
   123a4:	ldr	r4, [r1, r0, lsl #2]
   123a8:	mov	r0, r4
   123ac:	sub	sp, fp, #28
   123b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123b4:	movw	r0, #53692	; 0xd1bc
   123b8:	movt	r0, #2
   123bc:	ldr	r4, [r0]
   123c0:	cmp	r4, #0
   123c4:	beq	12400 <__assert_fail@plt+0xe3c>
   123c8:	add	r6, r0, #4
   123cc:	mov	r0, r4
   123d0:	bl	11474 <strlen@plt>
   123d4:	mov	r2, r0
   123d8:	mov	r0, r5
   123dc:	mov	r1, r4
   123e0:	bl	114a4 <strncasecmp@plt>
   123e4:	cmp	r0, #0
   123e8:	beq	12434 <__assert_fail@plt+0xe70>
   123ec:	ldr	r4, [r6, #4]
   123f0:	add	r0, r6, #8
   123f4:	mov	r6, r0
   123f8:	cmp	r4, #0
   123fc:	bne	123cc <__assert_fail@plt+0xe08>
   12400:	movw	r0, #2068	; 0x814
   12404:	movw	r4, #44008	; 0xabe8
   12408:	movt	r0, #3
   1240c:	movt	r4, #1
   12410:	ldr	r0, [r0]
   12414:	cmp	r0, #0
   12418:	beq	11fb0 <__assert_fail@plt+0x9ec>
   1241c:	movw	r0, #48275	; 0xbc93
   12420:	movt	r0, #1
   12424:	bl	11414 <puts@plt>
   12428:	mov	r0, r4
   1242c:	sub	sp, fp, #28
   12430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12434:	ldr	r4, [r6]
   12438:	mov	r0, r4
   1243c:	sub	sp, fp, #28
   12440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12444:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12448:	add	fp, sp, #24
   1244c:	mov	r6, r0
   12450:	mov	r0, r1
   12454:	mov	r8, r2
   12458:	mov	r7, r1
   1245c:	bl	11474 <strlen@plt>
   12460:	mov	r4, r0
   12464:	mov	r0, r8
   12468:	bl	11474 <strlen@plt>
   1246c:	add	r0, r4, r0
   12470:	add	r0, r0, #13
   12474:	bl	14df4 <_obstack_memory_used@@Base+0x71c>
   12478:	mov	r5, #0
   1247c:	mov	r4, r0
   12480:	mov	r1, r6
   12484:	strb	r5, [r0]
   12488:	movw	r0, #53528	; 0xd118
   1248c:	movt	r0, #2
   12490:	bl	12ae0 <__assert_fail@plt+0x151c>
   12494:	cmp	r0, #0
   12498:	bne	124b8 <__assert_fail@plt+0xef4>
   1249c:	movw	r0, #2068	; 0x814
   124a0:	mov	r1, r6
   124a4:	movt	r0, #3
   124a8:	add	r0, r0, #72	; 0x48
   124ac:	bl	12ae0 <__assert_fail@plt+0x151c>
   124b0:	cmp	r0, #0
   124b4:	beq	124dc <__assert_fail@plt+0xf18>
   124b8:	mov	r0, r4
   124bc:	bl	11474 <strlen@plt>
   124c0:	movw	r1, #49720	; 0xc238
   124c4:	add	r0, r4, r0
   124c8:	movt	r1, #1
   124cc:	strb	r5, [r0, #8]
   124d0:	mov	r5, #1
   124d4:	vldr	d16, [r1]
   124d8:	vst1.8	{d16}, [r0]
   124dc:	ldrb	r0, [r7]
   124e0:	cmp	r0, #0
   124e4:	beq	12500 <__assert_fail@plt+0xf3c>
   124e8:	cmp	r5, #0
   124ec:	beq	1250c <__assert_fail@plt+0xf48>
   124f0:	mov	r0, r4
   124f4:	mov	r1, r7
   124f8:	bl	113e4 <strcat@plt>
   124fc:	b	12618 <__assert_fail@plt+0x1054>
   12500:	cmp	r5, #0
   12504:	beq	12540 <__assert_fail@plt+0xf7c>
   12508:	b	12618 <__assert_fail@plt+0x1054>
   1250c:	movw	r1, #44051	; 0xac13
   12510:	mov	r0, r6
   12514:	movt	r1, #1
   12518:	bl	1130c <strcmp@plt>
   1251c:	cmp	r0, #0
   12520:	beq	12534 <__assert_fail@plt+0xf70>
   12524:	movw	r0, #48450	; 0xbd42
   12528:	movt	r0, #1
   1252c:	bl	11414 <puts@plt>
   12530:	b	12540 <__assert_fail@plt+0xf7c>
   12534:	mov	r0, r4
   12538:	mov	r1, r7
   1253c:	bl	113e4 <strcat@plt>
   12540:	movw	r1, #44008	; 0xabe8
   12544:	mov	r0, r6
   12548:	movt	r1, #1
   1254c:	bl	1130c <strcmp@plt>
   12550:	cmp	r0, #0
   12554:	beq	12570 <__assert_fail@plt+0xfac>
   12558:	movw	r1, #44316	; 0xad1c
   1255c:	mov	r0, r6
   12560:	movt	r1, #1
   12564:	bl	1130c <strcmp@plt>
   12568:	cmp	r0, #0
   1256c:	bne	125bc <__assert_fail@plt+0xff8>
   12570:	movw	r1, #48504	; 0xbd78
   12574:	mov	r0, r8
   12578:	mov	r2, #2
   1257c:	movt	r1, #1
   12580:	bl	114a4 <strncasecmp@plt>
   12584:	cmp	r0, #0
   12588:	bne	125bc <__assert_fail@plt+0xff8>
   1258c:	mov	r2, r8
   12590:	ldrb	r0, [r2, #2]!
   12594:	sub	r0, r0, #48	; 0x30
   12598:	uxtb	r0, r0
   1259c:	cmp	r0, #9
   125a0:	bhi	125bc <__assert_fail@plt+0xff8>
   125a4:	movw	r1, #48507	; 0xbd7b
   125a8:	mov	r0, r4
   125ac:	movt	r1, #1
   125b0:	bl	1151c <sprintf@plt>
   125b4:	mov	r0, r4
   125b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125bc:	movw	r1, #44051	; 0xac13
   125c0:	mov	r0, r6
   125c4:	movt	r1, #1
   125c8:	bl	1130c <strcmp@plt>
   125cc:	cmp	r0, #0
   125d0:	beq	1262c <__assert_fail@plt+0x1068>
   125d4:	movw	r1, #48525	; 0xbd8d
   125d8:	mov	r0, r6
   125dc:	movt	r1, #1
   125e0:	bl	1130c <strcmp@plt>
   125e4:	cmp	r0, #0
   125e8:	bne	12600 <__assert_fail@plt+0x103c>
   125ec:	mov	r0, r8
   125f0:	mov	r1, #32
   125f4:	bl	11480 <strchr@plt>
   125f8:	cmp	r0, #0
   125fc:	beq	12670 <__assert_fail@plt+0x10ac>
   12600:	movw	r1, #48076	; 0xbbcc
   12604:	mov	r0, r6
   12608:	movt	r1, #1
   1260c:	bl	1130c <strcmp@plt>
   12610:	cmp	r0, #0
   12614:	beq	12638 <__assert_fail@plt+0x1074>
   12618:	mov	r0, r4
   1261c:	mov	r1, r8
   12620:	bl	113e4 <strcat@plt>
   12624:	mov	r0, r4
   12628:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1262c:	movw	r1, #48512	; 0xbd80
   12630:	movt	r1, #1
   12634:	b	12678 <__assert_fail@plt+0x10b4>
   12638:	movw	r0, #48555	; 0xbdab
   1263c:	movt	r0, #1
   12640:	bl	11408 <getenv@plt>
   12644:	cmp	r0, #0
   12648:	beq	12664 <__assert_fail@plt+0x10a0>
   1264c:	movw	r1, #48560	; 0xbdb0
   12650:	mov	r2, #2
   12654:	movt	r1, #1
   12658:	bl	11594 <strncmp@plt>
   1265c:	cmp	r0, #0
   12660:	beq	12618 <__assert_fail@plt+0x1054>
   12664:	movw	r1, #48563	; 0xbdb3
   12668:	movt	r1, #1
   1266c:	b	12678 <__assert_fail@plt+0x10b4>
   12670:	movw	r1, #48545	; 0xbda1
   12674:	movt	r1, #1
   12678:	mov	r0, r4
   1267c:	mov	r2, r8
   12680:	bl	1151c <sprintf@plt>
   12684:	mov	r0, r4
   12688:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1268c:	push	{fp, lr}
   12690:	mov	fp, sp
   12694:	mov	r4, r0
   12698:	movw	r0, #2360	; 0x938
   1269c:	movt	r0, #3
   126a0:	ldr	r0, [r0]
   126a4:	bl	11f3c <__assert_fail@plt+0x978>
   126a8:	movw	r0, #48802	; 0xbea2
   126ac:	mov	r1, r4
   126b0:	movt	r0, #1
   126b4:	bl	12c40 <__assert_fail@plt+0x167c>
   126b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126bc:	add	fp, sp, #28
   126c0:	sub	sp, sp, #484	; 0x1e4
   126c4:	sub	sp, sp, #1024	; 0x400
   126c8:	movw	sl, #2068	; 0x814
   126cc:	mov	r5, r1
   126d0:	movw	r1, #44567	; 0xae17
   126d4:	mov	r6, r0
   126d8:	movt	sl, #3
   126dc:	movt	r1, #1
   126e0:	ldr	r7, [sl, #4]
   126e4:	bl	112dc <fdopen@plt>
   126e8:	mov	r9, r0
   126ec:	mov	r0, r5
   126f0:	bl	11474 <strlen@plt>
   126f4:	mov	r2, r0
   126f8:	mov	r0, r6
   126fc:	mov	r1, r5
   12700:	bl	114c8 <write@plt>
   12704:	cmp	r0, #0
   12708:	blt	12954 <__assert_fail@plt+0x1390>
   1270c:	sub	r5, fp, #232	; 0xe8
   12710:	mov	r1, #200	; 0xc8
   12714:	mov	r2, r9
   12718:	mov	r0, r5
   1271c:	bl	11360 <fgets@plt>
   12720:	cmp	r0, #0
   12724:	beq	1292c <__assert_fail@plt+0x1368>
   12728:	mov	r8, #0
   1272c:	b	1273c <__assert_fail@plt+0x1178>
   12730:	mov	r7, #1
   12734:	mov	sl, r4
   12738:	b	12904 <__assert_fail@plt+0x1340>
   1273c:	add	r4, r8, #1
   12740:	cmp	r7, #1
   12744:	bne	12798 <__assert_fail@plt+0x11d4>
   12748:	movw	r0, #53588	; 0xd154
   1274c:	movt	r0, #2
   12750:	ldr	r6, [r0, r4, lsl #2]
   12754:	mov	r0, r6
   12758:	bl	11474 <strlen@plt>
   1275c:	mov	r2, r0
   12760:	mov	r0, r5
   12764:	mov	r1, r6
   12768:	bl	11594 <strncmp@plt>
   1276c:	mov	r6, r0
   12770:	cmp	r0, #0
   12774:	mov	r7, r0
   12778:	mov	r0, r5
   1277c:	mov	r1, #200	; 0xc8
   12780:	mov	r2, r9
   12784:	movwne	r7, #1
   12788:	bl	11360 <fgets@plt>
   1278c:	cmp	r0, #0
   12790:	bne	12740 <__assert_fail@plt+0x117c>
   12794:	b	12920 <__assert_fail@plt+0x135c>
   12798:	cmp	r7, #0
   1279c:	bne	12808 <__assert_fail@plt+0x1244>
   127a0:	movw	r0, #53588	; 0xd154
   127a4:	mov	r4, sl
   127a8:	sub	r6, fp, #488	; 0x1e8
   127ac:	mov	r8, #0
   127b0:	movt	r0, #2
   127b4:	ldr	sl, [r0]
   127b8:	cmp	sl, #0
   127bc:	beq	127fc <__assert_fail@plt+0x1238>
   127c0:	mov	r0, sl
   127c4:	bl	11474 <strlen@plt>
   127c8:	mov	r2, r0
   127cc:	mov	r0, r5
   127d0:	mov	r1, sl
   127d4:	bl	11594 <strncmp@plt>
   127d8:	cmp	r0, #0
   127dc:	beq	12730 <__assert_fail@plt+0x116c>
   127e0:	movw	r0, #53588	; 0xd154
   127e4:	movt	r0, #2
   127e8:	add	r0, r0, r8, lsl #2
   127ec:	add	r8, r8, #2
   127f0:	ldr	sl, [r0, #8]
   127f4:	cmp	sl, #0
   127f8:	bne	127c0 <__assert_fail@plt+0x11fc>
   127fc:	mov	r7, #0
   12800:	mov	sl, r4
   12804:	b	1280c <__assert_fail@plt+0x1248>
   12808:	sub	r6, fp, #488	; 0x1e8
   1280c:	movw	r1, #48574	; 0xbdbe
   12810:	mov	r0, r5
   12814:	mov	r2, #10
   12818:	movt	r1, #1
   1281c:	bl	11594 <strncmp@plt>
   12820:	cmp	r0, #0
   12824:	add	r4, sp, #8
   12828:	bne	128b0 <__assert_fail@plt+0x12ec>
   1282c:	movw	r1, #48585	; 0xbdc9
   12830:	mov	r0, r5
   12834:	mov	r2, r6
   12838:	sub	r3, fp, #504	; 0x1f8
   1283c:	str	r4, [sp]
   12840:	movt	r1, #1
   12844:	bl	11510 <sscanf@plt>
   12848:	cmp	r0, #3
   1284c:	bne	128b0 <__assert_fail@plt+0x12ec>
   12850:	ldr	r0, [sl]
   12854:	cmp	r0, #0
   12858:	beq	12870 <__assert_fail@plt+0x12ac>
   1285c:	movw	r0, #48631	; 0xbdf7
   12860:	mov	r1, r4
   12864:	mov	r2, r6
   12868:	movt	r0, #1
   1286c:	bl	11324 <printf@plt>
   12870:	mov	r0, r4
   12874:	bl	11474 <strlen@plt>
   12878:	add	r0, r4, r0
   1287c:	mov	r1, #0
   12880:	strb	r1, [r0, #2]
   12884:	movw	r1, #2573	; 0xa0d
   12888:	strh	r1, [r0]
   1288c:	mov	r0, r6
   12890:	sub	r1, fp, #504	; 0x1f8
   12894:	bl	11c74 <__assert_fail@plt+0x6b0>
   12898:	mov	r1, r4
   1289c:	mov	r6, r0
   128a0:	bl	126b8 <__assert_fail@plt+0x10f4>
   128a4:	mov	r0, r6
   128a8:	bl	115ac <close@plt>
   128ac:	b	12904 <__assert_fail@plt+0x1340>
   128b0:	mov	r0, r5
   128b4:	mov	r2, #1
   128b8:	movw	r3, #9217	; 0x2401
   128bc:	ldrb	r1, [r0]
   128c0:	cmp	r1, #13
   128c4:	bls	128d8 <__assert_fail@plt+0x1314>
   128c8:	add	r0, r0, #1
   128cc:	ldrb	r1, [r0]
   128d0:	cmp	r1, #13
   128d4:	bhi	128c8 <__assert_fail@plt+0x1304>
   128d8:	tst	r3, r2, lsl r1
   128dc:	beq	128c8 <__assert_fail@plt+0x1304>
   128e0:	mov	r1, #0
   128e4:	mov	r2, r5
   128e8:	strb	r1, [r0]
   128ec:	movw	r0, #2252	; 0x8cc
   128f0:	movw	r1, #50388	; 0xc4d4
   128f4:	movt	r0, #3
   128f8:	movt	r1, #1
   128fc:	ldr	r0, [r0]
   12900:	bl	1148c <fprintf@plt>
   12904:	mov	r0, r5
   12908:	mov	r1, #200	; 0xc8
   1290c:	mov	r2, r9
   12910:	bl	11360 <fgets@plt>
   12914:	cmp	r0, #0
   12918:	bne	1273c <__assert_fail@plt+0x1178>
   1291c:	b	1292c <__assert_fail@plt+0x1368>
   12920:	cmp	r6, #0
   12924:	movwne	r6, #1
   12928:	mov	r7, r6
   1292c:	mov	r0, r9
   12930:	bl	1136c <ferror@plt>
   12934:	cmp	r0, #0
   12938:	bne	12960 <__assert_fail@plt+0x139c>
   1293c:	cmp	r7, #1
   12940:	subne	sp, fp, #28
   12944:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12948:	movw	r0, #48669	; 0xbe1d
   1294c:	movt	r0, #1
   12950:	bl	12c40 <__assert_fail@plt+0x167c>
   12954:	movw	r0, #48568	; 0xbdb8
   12958:	movt	r0, #1
   1295c:	bl	12bdc <__assert_fail@plt+0x1618>
   12960:	movw	r0, #48663	; 0xbe17
   12964:	movt	r0, #1
   12968:	bl	12bdc <__assert_fail@plt+0x1618>
   1296c:	push	{r4, r5, fp, lr}
   12970:	add	fp, sp, #8
   12974:	mov	r4, r0
   12978:	movw	r0, #5072	; 0x13d0
   1297c:	mov	r5, r1
   12980:	movt	r0, #6
   12984:	cmp	r4, r0
   12988:	blt	12998 <__assert_fail@plt+0x13d4>
   1298c:	movw	r0, #48402	; 0xbd12
   12990:	movt	r0, #1
   12994:	bl	11414 <puts@plt>
   12998:	ldr	r0, [r5, #4]
   1299c:	movw	r1, #44008	; 0xabe8
   129a0:	movt	r1, #1
   129a4:	cmp	r0, #0
   129a8:	beq	129d4 <__assert_fail@plt+0x1410>
   129ac:	add	r2, r5, #12
   129b0:	ldrh	r3, [r2, #-12]
   129b4:	cmp	r3, r4
   129b8:	bgt	129c8 <__assert_fail@plt+0x1404>
   129bc:	ldrh	r3, [r2, #-10]
   129c0:	cmp	r3, r4
   129c4:	popge	{r4, r5, fp, pc}
   129c8:	ldr	r0, [r2], #8
   129cc:	cmp	r0, #0
   129d0:	bne	129b0 <__assert_fail@plt+0x13ec>
   129d4:	mov	r0, r1
   129d8:	pop	{r4, r5, fp, pc}
   129dc:	push	{r4, sl, fp, lr}
   129e0:	add	fp, sp, #8
   129e4:	sub	sp, sp, #24
   129e8:	mov	r4, #0
   129ec:	cmp	r0, #0
   129f0:	beq	12a40 <__assert_fail@plt+0x147c>
   129f4:	add	r1, sp, #8
   129f8:	add	r2, sp, #12
   129fc:	add	r3, sp, #16
   12a00:	str	r1, [sp, #4]
   12a04:	movw	r1, #48830	; 0xbebe
   12a08:	str	r2, [sp]
   12a0c:	sub	r2, fp, #12
   12a10:	movt	r1, #1
   12a14:	bl	11510 <sscanf@plt>
   12a18:	cmp	r0, #4
   12a1c:	bne	12a40 <__assert_fail@plt+0x147c>
   12a20:	ldr	r0, [sp, #16]
   12a24:	ldr	r1, [fp, #-12]
   12a28:	lsl	r0, r0, #16
   12a2c:	add	r0, r0, r1, lsl #24
   12a30:	ldr	r1, [sp, #12]
   12a34:	add	r0, r0, r1, lsl #8
   12a38:	ldr	r1, [sp, #8]
   12a3c:	add	r4, r0, r1
   12a40:	mov	r0, r4
   12a44:	sub	sp, fp, #8
   12a48:	pop	{r4, sl, fp, pc}
   12a4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a50:	add	fp, sp, #28
   12a54:	sub	sp, sp, #4
   12a58:	mov	r9, r1
   12a5c:	mov	r8, r0
   12a60:	mov	r7, r0
   12a64:	ldrb	r0, [r7], #1
   12a68:	cmp	r0, #0
   12a6c:	bne	12a64 <__assert_fail@plt+0x14a0>
   12a70:	mov	r0, #0
   12a74:	mov	r4, r9
   12a78:	ldrb	r1, [r4], #1
   12a7c:	mov	r5, r0
   12a80:	sub	r0, r0, #1
   12a84:	cmp	r1, #0
   12a88:	bne	12a78 <__assert_fail@plt+0x14b4>
   12a8c:	mvn	r6, #1
   12a90:	mov	sl, #0
   12a94:	add	r0, r4, r6
   12a98:	cmp	r0, r9
   12a9c:	addcs	r0, r7, r6
   12aa0:	cmpcs	r0, r8
   12aa4:	bcc	12ad4 <__assert_fail@plt+0x1510>
   12aa8:	bl	11444 <__ctype_tolower_loc@plt>
   12aac:	ldrb	r2, [r7, r6]
   12ab0:	ldr	r0, [r0]
   12ab4:	ldrb	r1, [r4, r6]
   12ab8:	ldr	r0, [r0, r2, lsl #2]
   12abc:	cmp	r0, r1
   12ac0:	bne	12ad4 <__assert_fail@plt+0x1510>
   12ac4:	adds	r5, r5, #1
   12ac8:	sub	r6, r6, #1
   12acc:	bne	12a94 <__assert_fail@plt+0x14d0>
   12ad0:	mov	sl, #1
   12ad4:	mov	r0, sl
   12ad8:	sub	sp, fp, #28
   12adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ae0:	push	{r4, r5, r6, r7, fp, lr}
   12ae4:	add	fp, sp, #16
   12ae8:	sub	sp, sp, #8
   12aec:	mov	r5, r1
   12af0:	mov	r6, r0
   12af4:	add	r1, sp, #4
   12af8:	mov	r0, r5
   12afc:	bl	11300 <inet_aton@plt>
   12b00:	ldr	r7, [r6]
   12b04:	mov	r4, #0
   12b08:	cmp	r7, #0
   12b0c:	beq	12bb0 <__assert_fail@plt+0x15ec>
   12b10:	cmp	r0, #0
   12b14:	beq	12b8c <__assert_fail@plt+0x15c8>
   12b18:	mov	r0, r7
   12b1c:	mov	r1, r5
   12b20:	bl	1130c <strcmp@plt>
   12b24:	cmp	r0, #0
   12b28:	beq	12bcc <__assert_fail@plt+0x1608>
   12b2c:	mov	r0, r7
   12b30:	bl	1157c <gethostbyname@plt>
   12b34:	cmp	r0, #0
   12b38:	beq	12b6c <__assert_fail@plt+0x15a8>
   12b3c:	ldr	r0, [r0, #16]
   12b40:	ldr	r1, [r0]
   12b44:	cmp	r1, #0
   12b48:	beq	12b6c <__assert_fail@plt+0x15a8>
   12b4c:	ldr	r2, [sp, #4]
   12b50:	add	r0, r0, #4
   12b54:	ldr	r1, [r1]
   12b58:	cmp	r1, r2
   12b5c:	beq	12b7c <__assert_fail@plt+0x15b8>
   12b60:	ldr	r1, [r0], #4
   12b64:	cmp	r1, #0
   12b68:	bne	12b54 <__assert_fail@plt+0x1590>
   12b6c:	ldr	r7, [r6, #4]!
   12b70:	cmp	r7, #0
   12b74:	bne	12b18 <__assert_fail@plt+0x1554>
   12b78:	b	12bb0 <__assert_fail@plt+0x15ec>
   12b7c:	mov	r4, #1
   12b80:	mov	r0, r4
   12b84:	sub	sp, fp, #16
   12b88:	pop	{r4, r5, r6, r7, fp, pc}
   12b8c:	add	r6, r6, #4
   12b90:	mov	r0, r7
   12b94:	mov	r1, r5
   12b98:	bl	1130c <strcmp@plt>
   12b9c:	cmp	r0, #0
   12ba0:	beq	12bbc <__assert_fail@plt+0x15f8>
   12ba4:	ldr	r7, [r6], #4
   12ba8:	cmp	r7, #0
   12bac:	bne	12b90 <__assert_fail@plt+0x15cc>
   12bb0:	mov	r0, r4
   12bb4:	sub	sp, fp, #16
   12bb8:	pop	{r4, r5, r6, r7, fp, pc}
   12bbc:	mov	r4, #1
   12bc0:	mov	r0, r4
   12bc4:	sub	sp, fp, #16
   12bc8:	pop	{r4, r5, r6, r7, fp, pc}
   12bcc:	mov	r4, #1
   12bd0:	mov	r0, r4
   12bd4:	sub	sp, fp, #16
   12bd8:	pop	{r4, r5, r6, r7, fp, pc}
   12bdc:	sub	sp, sp, #12
   12be0:	push	{fp, lr}
   12be4:	mov	fp, sp
   12be8:	sub	sp, sp, #4
   12bec:	movw	r4, #2248	; 0x8c8
   12bf0:	mov	ip, r0
   12bf4:	add	r0, fp, #8
   12bf8:	stm	r0, {r1, r2, r3}
   12bfc:	movt	r4, #3
   12c00:	add	r2, fp, #8
   12c04:	mov	r1, ip
   12c08:	ldr	r0, [r4]
   12c0c:	str	r2, [sp]
   12c10:	bl	114f8 <vfprintf@plt>
   12c14:	ldr	r4, [r4]
   12c18:	bl	11498 <__errno_location@plt>
   12c1c:	ldr	r0, [r0]
   12c20:	bl	11438 <strerror@plt>
   12c24:	movw	r1, #51001	; 0xc739
   12c28:	mov	r2, r0
   12c2c:	mov	r0, r4
   12c30:	movt	r1, #1
   12c34:	bl	1148c <fprintf@plt>
   12c38:	mov	r0, #1
   12c3c:	bl	11468 <exit@plt>
   12c40:	sub	sp, sp, #12
   12c44:	push	{fp, lr}
   12c48:	mov	fp, sp
   12c4c:	sub	sp, sp, #4
   12c50:	movw	r4, #2248	; 0x8c8
   12c54:	mov	ip, r0
   12c58:	add	r0, fp, #8
   12c5c:	stm	r0, {r1, r2, r3}
   12c60:	movt	r4, #3
   12c64:	add	r2, fp, #8
   12c68:	mov	r1, ip
   12c6c:	ldr	r0, [r4]
   12c70:	str	r2, [sp]
   12c74:	bl	114f8 <vfprintf@plt>
   12c78:	ldr	r1, [r4]
   12c7c:	mov	r0, #10
   12c80:	bl	11504 <fputc@plt>
   12c84:	mov	r0, #1
   12c88:	bl	11468 <exit@plt>
   12c8c:	push	{r4, r5, r6, r7, fp, lr}
   12c90:	add	fp, sp, #16
   12c94:	mov	r6, #7
   12c98:	cmp	r0, #1
   12c9c:	blt	12dbc <__assert_fail@plt+0x17f8>
   12ca0:	mov	r7, r0
   12ca4:	cmp	r0, #127	; 0x7f
   12ca8:	bhi	12dbc <__assert_fail@plt+0x17f8>
   12cac:	mov	r4, r1
   12cb0:	sub	r1, r7, #113	; 0x71
   12cb4:	cmp	r1, #5
   12cb8:	bhi	12cd4 <__assert_fail@plt+0x1710>
   12cbc:	mov	r0, #1
   12cc0:	mov	r2, #41	; 0x29
   12cc4:	tst	r2, r0, lsl r1
   12cc8:	movwne	r1, #2068	; 0x814
   12ccc:	movtne	r1, #3
   12cd0:	strne	r0, [r1, #16]
   12cd4:	movw	r5, #2316	; 0x90c
   12cd8:	movt	r5, #3
   12cdc:	ldr	r0, [r5, #12]
   12ce0:	ldr	r1, [r5, #16]
   12ce4:	cmp	r1, r0
   12ce8:	bne	12cfc <__assert_fail@plt+0x1738>
   12cec:	mov	r0, r5
   12cf0:	mov	r1, #1
   12cf4:	bl	1449c <_obstack_newchunk@@Base>
   12cf8:	ldr	r0, [r5, #12]
   12cfc:	add	r1, r0, #1
   12d00:	str	r1, [r5, #12]
   12d04:	mov	r1, #45	; 0x2d
   12d08:	strb	r1, [r0]
   12d0c:	ldr	r0, [r5, #12]
   12d10:	ldr	r1, [r5, #16]
   12d14:	cmp	r1, r0
   12d18:	bne	12d2c <__assert_fail@plt+0x1768>
   12d1c:	mov	r0, r5
   12d20:	mov	r1, #1
   12d24:	bl	1449c <_obstack_newchunk@@Base>
   12d28:	ldr	r0, [r5, #12]
   12d2c:	add	r1, r0, #1
   12d30:	mov	r6, #0
   12d34:	cmp	r4, #0
   12d38:	str	r1, [r5, #12]
   12d3c:	strb	r7, [r0]
   12d40:	beq	12dbc <__assert_fail@plt+0x17f8>
   12d44:	ldr	r0, [r5, #12]
   12d48:	ldr	r1, [r5, #16]
   12d4c:	cmp	r1, r0
   12d50:	bne	12d64 <__assert_fail@plt+0x17a0>
   12d54:	mov	r0, r5
   12d58:	mov	r1, #1
   12d5c:	bl	1449c <_obstack_newchunk@@Base>
   12d60:	ldr	r0, [r5, #12]
   12d64:	add	r1, r0, #1
   12d68:	str	r1, [r5, #12]
   12d6c:	mov	r1, #32
   12d70:	strb	r1, [r0]
   12d74:	mov	r0, r4
   12d78:	bl	11474 <strlen@plt>
   12d7c:	mov	r7, r0
   12d80:	ldr	r0, [r5, #12]
   12d84:	ldr	r1, [r5, #16]
   12d88:	sub	r1, r1, r0
   12d8c:	cmp	r1, r7
   12d90:	bcs	12da4 <__assert_fail@plt+0x17e0>
   12d94:	mov	r0, r5
   12d98:	mov	r1, r7
   12d9c:	bl	1449c <_obstack_newchunk@@Base>
   12da0:	ldr	r0, [r5, #12]
   12da4:	mov	r1, r4
   12da8:	mov	r2, r7
   12dac:	bl	11384 <memcpy@plt>
   12db0:	ldr	r0, [r5, #12]
   12db4:	add	r0, r0, r7
   12db8:	str	r0, [r5, #12]
   12dbc:	mov	r0, r6
   12dc0:	pop	{r4, r5, r6, r7, fp, pc}
   12dc4:	push	{r4, r5, r6, r7, fp, lr}
   12dc8:	add	fp, sp, #16
   12dcc:	mov	r5, r1
   12dd0:	mov	r1, r0
   12dd4:	mov	r0, #7
   12dd8:	cmp	r1, #103	; 0x67
   12ddc:	bgt	12e04 <__assert_fail@plt+0x1840>
   12de0:	cmp	r1, #72	; 0x48
   12de4:	beq	12e80 <__assert_fail@plt+0x18bc>
   12de8:	cmp	r1, #86	; 0x56
   12dec:	bne	12ea4 <__assert_fail@plt+0x18e0>
   12df0:	movw	r0, #2068	; 0x814
   12df4:	mov	r1, #1
   12df8:	movt	r0, #3
   12dfc:	str	r1, [r0]
   12e00:	b	12ea0 <__assert_fail@plt+0x18dc>
   12e04:	cmp	r1, #112	; 0x70
   12e08:	beq	12e94 <__assert_fail@plt+0x18d0>
   12e0c:	cmp	r1, #104	; 0x68
   12e10:	popne	{r4, r5, r6, r7, fp, pc}
   12e14:	mov	r0, r5
   12e18:	bl	11474 <strlen@plt>
   12e1c:	add	r0, r0, #1
   12e20:	bl	14df4 <_obstack_memory_used@@Base+0x71c>
   12e24:	movw	r6, #2068	; 0x814
   12e28:	mov	r4, r0
   12e2c:	movt	r6, #3
   12e30:	str	r0, [r6, #8]
   12e34:	add	r5, r5, #1
   12e38:	ldrb	r7, [r5, #-1]
   12e3c:	cmp	r7, #0
   12e40:	bne	12e68 <__assert_fail@plt+0x18a4>
   12e44:	b	12e74 <__assert_fail@plt+0x18b0>
   12e48:	bl	11444 <__ctype_tolower_loc@plt>
   12e4c:	ldr	r0, [r0]
   12e50:	ldr	r0, [r0, r7, lsl #2]
   12e54:	strb	r0, [r4], #1
   12e58:	add	r5, r5, #1
   12e5c:	ldrb	r7, [r5, #-1]
   12e60:	cmp	r7, #0
   12e64:	beq	12e74 <__assert_fail@plt+0x18b0>
   12e68:	cmp	r7, #58	; 0x3a
   12e6c:	bne	12e48 <__assert_fail@plt+0x1884>
   12e70:	str	r5, [r6, #12]
   12e74:	mov	r0, #0
   12e78:	strb	r0, [r4]
   12e7c:	pop	{r4, r5, r6, r7, fp, pc}
   12e80:	movw	r1, #2068	; 0x814
   12e84:	mov	r0, #0
   12e88:	movt	r1, #3
   12e8c:	str	r0, [r1, #4]
   12e90:	pop	{r4, r5, r6, r7, fp, pc}
   12e94:	movw	r0, #2068	; 0x814
   12e98:	movt	r0, #3
   12e9c:	str	r5, [r0, #12]
   12ea0:	mov	r0, #0
   12ea4:	pop	{r4, r5, r6, r7, fp, pc}

00012ea8 <argp_parse@@Base>:
   12ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12eac:	add	fp, sp, #28
   12eb0:	sub	sp, sp, #212	; 0xd4
   12eb4:	mov	r5, r3
   12eb8:	mov	r6, r2
   12ebc:	mov	r7, r1
   12ec0:	mov	r4, r0
   12ec4:	tst	r3, #1
   12ec8:	bne	12ef8 <argp_parse@@Base+0x50>
   12ecc:	movw	r0, #2244	; 0x8c4
   12ed0:	movw	r8, #2240	; 0x8c0
   12ed4:	movt	r0, #3
   12ed8:	movt	r8, #3
   12edc:	ldr	r1, [r0]
   12ee0:	cmp	r1, #0
   12ee4:	ldreq	r1, [r6]
   12ee8:	streq	r1, [r0]
   12eec:	ldr	r0, [r8]
   12ef0:	cmp	r0, #0
   12ef4:	beq	12fac <argp_parse@@Base+0x104>
   12ef8:	tst	r5, #16
   12efc:	str	r6, [fp, #-228]	; 0xffffff1c
   12f00:	bne	12fc4 <argp_parse@@Base+0x11c>
   12f04:	mov	r1, sp
   12f08:	sub	r3, r1, #64	; 0x40
   12f0c:	mov	sp, r3
   12f10:	mov	r2, sp
   12f14:	sub	r0, r2, #32
   12f18:	mov	sp, r0
   12f1c:	vmov.i32	q8, #0	; 0x00000000
   12f20:	sub	r2, r2, #20
   12f24:	cmp	r4, #0
   12f28:	vst1.32	{d16-d17}, [r2]
   12f2c:	mov	r2, r0
   12f30:	vst1.64	{d16-d17}, [r2]!
   12f34:	str	r3, [r2]
   12f38:	sub	r2, r1, #32
   12f3c:	sub	r1, r1, #48	; 0x30
   12f40:	vst1.64	{d16-d17}, [r2]
   12f44:	vst1.64	{d16-d17}, [r1]
   12f48:	mov	r1, #48	; 0x30
   12f4c:	mov	r2, r3
   12f50:	vst1.64	{d16-d17}, [r2], r1
   12f54:	vst1.64	{d16-d17}, [r2]
   12f58:	movw	r2, #49732	; 0xc244
   12f5c:	strne	r4, [r3], #16
   12f60:	movt	r2, #1
   12f64:	mov	r1, r3
   12f68:	str	r2, [r1], #16
   12f6c:	movw	r2, #2368	; 0x940
   12f70:	movt	r2, #3
   12f74:	ldr	r2, [r2]
   12f78:	cmp	r2, #0
   12f7c:	movweq	r2, #2264	; 0x8d8
   12f80:	movteq	r2, #3
   12f84:	ldreq	r2, [r2]
   12f88:	cmpeq	r2, #0
   12f8c:	beq	12fa0 <argp_parse@@Base+0xf8>
   12f90:	movw	r2, #49760	; 0xc260
   12f94:	mov	r3, r1
   12f98:	movt	r2, #1
   12f9c:	str	r2, [r1]
   12fa0:	mov	r1, #0
   12fa4:	str	r1, [r3, #16]
   12fa8:	b	12fc8 <argp_parse@@Base+0x120>
   12fac:	ldr	r0, [r6]
   12fb0:	bl	141c0 <argp_parse@@Base+0x1318>
   12fb4:	str	r0, [r8]
   12fb8:	tst	r5, #16
   12fbc:	str	r6, [fp, #-228]	; 0xffffff1c
   12fc0:	beq	12f04 <argp_parse@@Base+0x5c>
   12fc4:	mov	r0, r4
   12fc8:	sub	r9, fp, #96	; 0x60
   12fcc:	str	r7, [fp, #-232]	; 0xffffff18
   12fd0:	vmov.i32	q8, #0	; 0x00000000
   12fd4:	mov	r7, #12
   12fd8:	mov	r4, #0
   12fdc:	cmp	r0, #0
   12fe0:	str	r5, [fp, #-224]	; 0xffffff20
   12fe4:	str	r0, [fp, #-236]	; 0xffffff14
   12fe8:	mov	r1, r9
   12fec:	vst1.64	{d16-d17}, [r1], r7
   12ff0:	vst1.32	{d16-d17}, [r1]
   12ff4:	mov	r1, #1
   12ff8:	bic	r3, r1, r5, lsr #2
   12ffc:	str	r3, [fp, #-64]	; 0xffffffc0
   13000:	str	r4, [fp, #-60]	; 0xffffffc4
   13004:	str	r4, [fp, #-56]	; 0xffffffc8
   13008:	str	r4, [fp, #-52]	; 0xffffffcc
   1300c:	beq	13044 <argp_parse@@Base+0x19c>
   13010:	sub	r1, fp, #64	; 0x40
   13014:	bl	13d90 <argp_parse@@Base+0xee8>
   13018:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1301c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13020:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13024:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13028:	mov	r6, #16
   1302c:	add	r1, r6, r1, lsl #4
   13030:	add	r2, r2, r2, lsl #3
   13034:	mov	r6, #36	; 0x24
   13038:	lsl	r4, r0, #2
   1303c:	add	r8, r6, r2, lsl #2
   13040:	b	1304c <argp_parse@@Base+0x1a4>
   13044:	mov	r8, #36	; 0x24
   13048:	mov	r1, #16
   1304c:	add	r5, r8, r4
   13050:	add	sl, r5, r1
   13054:	add	r0, r3, sl
   13058:	add	r0, r0, #1
   1305c:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   13060:	cmp	r0, #0
   13064:	str	r0, [fp, #-100]	; 0xffffff9c
   13068:	beq	13b00 <argp_parse@@Base+0xc58>
   1306c:	mov	r6, r0
   13070:	mov	r0, #12
   13074:	sub	r1, fp, #220	; 0xdc
   13078:	mov	r2, r4
   1307c:	vld1.64	{d16-d17}, [r9], r0
   13080:	add	r0, r1, #20
   13084:	add	r7, r6, r8
   13088:	add	r8, r6, r5
   1308c:	add	r5, r6, sl
   13090:	vld1.32	{d18-d19}, [r9]
   13094:	vst1.32	{d16-d17}, [r0]
   13098:	add	r0, r1, #32
   1309c:	mov	r9, r1
   130a0:	mov	r1, #0
   130a4:	vst1.32	{d18-d19}, [r0]
   130a8:	mov	r0, #1
   130ac:	str	r6, [fp, #-172]	; 0xffffff54
   130b0:	str	r0, [fp, #-208]	; 0xffffff30
   130b4:	str	r0, [fp, #-204]	; 0xffffff34
   130b8:	mov	r0, r7
   130bc:	str	r7, [fp, #-164]	; 0xffffff5c
   130c0:	str	r8, [fp, #-212]	; 0xffffff2c
   130c4:	str	r5, [fp, #-216]	; 0xffffff28
   130c8:	bl	114bc <memset@plt>
   130cc:	str	r5, [fp, #-44]	; 0xffffffd4
   130d0:	str	r9, [fp, #-48]	; 0xffffffd0
   130d4:	ldr	r9, [fp, #-224]	; 0xffffff20
   130d8:	mov	r0, #45	; 0x2d
   130dc:	str	r8, [fp, #-40]	; 0xffffffd8
   130e0:	str	r7, [fp, #-36]	; 0xffffffdc
   130e4:	tst	r9, #8
   130e8:	moveq	r0, #43	; 0x2b
   130ec:	tsteq	r9, #4
   130f0:	beq	13718 <argp_parse@@Base+0x870>
   130f4:	add	r1, r5, #1
   130f8:	strb	r0, [r5]
   130fc:	str	r1, [fp, #-44]	; 0xffffffd4
   13100:	ldr	r0, [fp, #-236]	; 0xffffff14
   13104:	ldr	sl, [fp, #-228]	; 0xffffff1c
   13108:	mov	r5, #0
   1310c:	strb	r5, [r1]
   13110:	str	r5, [r8]
   13114:	cmp	r0, #0
   13118:	str	r0, [fp, #-220]	; 0xffffff24
   1311c:	beq	13154 <argp_parse@@Base+0x2ac>
   13120:	sub	sp, sp, #8
   13124:	sub	r1, fp, #48	; 0x30
   13128:	mov	r2, #0
   1312c:	mov	r3, r6
   13130:	str	r1, [sp]
   13134:	mov	r1, #0
   13138:	bl	13e78 <argp_parse@@Base+0xfd0>
   1313c:	add	sp, sp, #8
   13140:	str	r0, [fp, #-168]	; 0xffffff58
   13144:	mov	r6, r0
   13148:	ldr	r5, [fp, #-220]	; 0xffffff24
   1314c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13150:	b	1315c <argp_parse@@Base+0x2b4>
   13154:	mov	r4, r6
   13158:	str	r6, [fp, #-168]	; 0xffffff58
   1315c:	ldr	r3, [fp, #-232]	; 0xffffff18
   13160:	sub	r1, fp, #220	; 0xdc
   13164:	mov	r7, #0
   13168:	vmov.i32	q8, #0	; 0x00000000
   1316c:	mov	r0, #1
   13170:	mov	r8, sl
   13174:	cmp	r4, r6
   13178:	mov	r2, r1
   1317c:	add	r1, r1, #84	; 0x54
   13180:	str	r7, [fp, #-116]	; 0xffffff8c
   13184:	str	r7, [fp, #-120]	; 0xffffff88
   13188:	vst1.32	{d16-d17}, [r1]
   1318c:	str	r5, [fp, #-156]	; 0xffffff64
   13190:	str	r3, [fp, #-152]	; 0xffffff68
   13194:	str	sl, [fp, #-148]	; 0xffffff6c
   13198:	str	r9, [fp, #-140]	; 0xffffff74
   1319c:	str	r7, [fp, #-144]	; 0xffffff70
   131a0:	str	r2, [fp, #-104]	; 0xffffff98
   131a4:	str	r0, [fp, #-160]	; 0xffffff60
   131a8:	movw	r0, #2248	; 0x8c8
   131ac:	add	sl, r2, #64	; 0x40
   131b0:	movt	r0, #3
   131b4:	ldr	r0, [r0]
   131b8:	str	r0, [fp, #-112]	; 0xffffff90
   131bc:	movw	r0, #2252	; 0x8cc
   131c0:	movt	r0, #3
   131c4:	ldr	r0, [r0]
   131c8:	str	r0, [fp, #-108]	; 0xffffff94
   131cc:	bcs	132c0 <argp_parse@@Base+0x418>
   131d0:	ldr	r0, [fp, #12]
   131d4:	str	r0, [r4, #24]
   131d8:	cmp	r7, #7
   131dc:	cmpne	r7, #0
   131e0:	bne	13b00 <argp_parse@@Base+0xc58>
   131e4:	ldr	r0, [r4, #16]
   131e8:	cmp	r0, #0
   131ec:	ldrne	r1, [r4, #20]
   131f0:	ldrne	r0, [r0, #28]
   131f4:	ldrne	r0, [r0, r1, lsl #2]
   131f8:	strne	r0, [r4, #24]
   131fc:	ldr	r3, [r4]
   13200:	cmp	r3, #0
   13204:	beq	13264 <argp_parse@@Base+0x3bc>
   13208:	add	r0, r4, #28
   1320c:	ldr	r1, [r4, #32]
   13210:	mov	r2, sl
   13214:	str	r1, [fp, #-120]	; 0xffffff88
   13218:	ldr	r1, [r4, #24]
   1321c:	str	r1, [fp, #-128]	; 0xffffff80
   13220:	mov	r1, #0
   13224:	ldr	r0, [r0]
   13228:	str	r0, [fp, #-124]	; 0xffffff84
   1322c:	ldr	r0, [r4, #12]
   13230:	str	r0, [fp, #-136]	; 0xffffff78
   13234:	movw	r0, #6
   13238:	movt	r0, #256	; 0x100
   1323c:	sub	r0, r0, #3
   13240:	blx	r3
   13244:	mov	r7, r0
   13248:	ldr	r0, [fp, #-120]	; 0xffffff88
   1324c:	str	r0, [r4, #32]
   13250:	ldr	r0, [fp, #-168]	; 0xffffff58
   13254:	add	r4, r4, #36	; 0x24
   13258:	cmp	r4, r0
   1325c:	bcc	131d8 <argp_parse@@Base+0x330>
   13260:	b	132b4 <argp_parse@@Base+0x40c>
   13264:	ldr	r0, [r4, #4]
   13268:	mov	r7, #7
   1326c:	ldr	r0, [r0, #16]
   13270:	cmp	r0, #0
   13274:	ldrne	r0, [r0]
   13278:	cmpne	r0, #0
   1327c:	bne	13294 <argp_parse@@Base+0x3ec>
   13280:	ldr	r0, [fp, #-168]	; 0xffffff58
   13284:	add	r4, r4, #36	; 0x24
   13288:	cmp	r4, r0
   1328c:	bcc	131d8 <argp_parse@@Base+0x330>
   13290:	b	132b4 <argp_parse@@Base+0x40c>
   13294:	mov	r0, r4
   13298:	ldr	r2, [r4, #24]
   1329c:	ldr	r1, [r0, #28]!
   132a0:	str	r2, [r1]
   132a4:	ldr	r3, [r4]
   132a8:	cmp	r3, #0
   132ac:	bne	1320c <argp_parse@@Base+0x364>
   132b0:	b	13280 <argp_parse@@Base+0x3d8>
   132b4:	cmp	r7, #7
   132b8:	cmpne	r7, #0
   132bc:	bne	13b00 <argp_parse@@Base+0xc58>
   132c0:	ldr	r0, [fp, #-140]	; 0xffffff74
   132c4:	tst	r0, #2
   132c8:	bne	132f4 <argp_parse@@Base+0x44c>
   132cc:	mov	r0, #1
   132d0:	str	r0, [fp, #-204]	; 0xffffff34
   132d4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   132d8:	cmp	r0, r8
   132dc:	bne	13328 <argp_parse@@Base+0x480>
   132e0:	ldr	r0, [r8]
   132e4:	cmp	r0, #0
   132e8:	beq	13328 <argp_parse@@Base+0x480>
   132ec:	bl	141c0 <argp_parse@@Base+0x1318>
   132f0:	b	13334 <argp_parse@@Base+0x48c>
   132f4:	mov	r1, #0
   132f8:	tst	r0, #1
   132fc:	str	r1, [fp, #-204]	; 0xffffff34
   13300:	beq	1331c <argp_parse@@Base+0x474>
   13304:	ldr	r0, [fp, #-152]	; 0xffffff68
   13308:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1330c:	sub	r1, r1, #4
   13310:	add	r0, r0, #1
   13314:	str	r1, [fp, #-148]	; 0xffffff6c
   13318:	str	r0, [fp, #-152]	; 0xffffff68
   1331c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13320:	cmp	r0, r8
   13324:	beq	132e0 <argp_parse@@Base+0x438>
   13328:	movw	r0, #2240	; 0x8c0
   1332c:	movt	r0, #3
   13330:	ldr	r0, [r0]
   13334:	str	r0, [fp, #-116]	; 0xffffff8c
   13338:	sub	r0, fp, #220	; 0xdc
   1333c:	mov	r8, #0
   13340:	add	r6, r0, #12
   13344:	ldr	r0, [fp, #-132]	; 0xffffff7c
   13348:	cmp	r0, #0
   1334c:	beq	13360 <argp_parse@@Base+0x4b8>
   13350:	ldr	r9, [fp, #-144]	; 0xffffff70
   13354:	cmp	r9, r0
   13358:	bge	13414 <argp_parse@@Base+0x56c>
   1335c:	str	r8, [fp, #-132]	; 0xffffff7c
   13360:	ldr	r0, [fp, #-160]	; 0xffffff60
   13364:	ldr	r9, [fp, #-144]	; 0xffffff70
   13368:	cmp	r0, #0
   1336c:	beq	13414 <argp_parse@@Base+0x56c>
   13370:	mvn	r0, #0
   13374:	str	r0, [fp, #-200]	; 0xffffff38
   13378:	str	r9, [fp, #-208]	; 0xffffff30
   1337c:	ldr	r2, [fp, #-216]	; 0xffffff28
   13380:	ldr	r3, [fp, #-212]	; 0xffffff2c
   13384:	ldr	r0, [fp, #-152]	; 0xffffff68
   13388:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1338c:	ldrb	r7, [fp, #-140]	; 0xffffff74
   13390:	sub	sp, sp, #8
   13394:	tst	r7, #64	; 0x40
   13398:	bne	133ac <argp_parse@@Base+0x504>
   1339c:	str	r8, [sp]
   133a0:	str	r6, [sp, #4]
   133a4:	bl	142ac <argp_parse@@Base+0x1404>
   133a8:	b	133b8 <argp_parse@@Base+0x510>
   133ac:	str	r8, [sp]
   133b0:	str	r6, [sp, #4]
   133b4:	bl	14310 <argp_parse@@Base+0x1468>
   133b8:	add	sp, sp, #8
   133bc:	ldr	r9, [fp, #-208]	; 0xffffff30
   133c0:	mov	r7, r0
   133c4:	cmn	r0, #1
   133c8:	str	r9, [fp, #-144]	; 0xffffff70
   133cc:	beq	133e8 <argp_parse@@Base+0x540>
   133d0:	cmp	r7, #63	; 0x3f
   133d4:	beq	135c4 <argp_parse@@Base+0x71c>
   133d8:	cmp	r7, #1
   133dc:	bne	135d4 <argp_parse@@Base+0x72c>
   133e0:	ldr	r7, [fp, #-196]	; 0xffffff3c
   133e4:	b	1344c <argp_parse@@Base+0x5a4>
   133e8:	cmp	r9, #2
   133ec:	str	r8, [fp, #-160]	; 0xffffff60
   133f0:	blt	13414 <argp_parse@@Base+0x56c>
   133f4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   133f8:	movw	r1, #50220	; 0xc42c
   133fc:	movt	r1, #1
   13400:	add	r0, r0, r9, lsl #2
   13404:	ldr	r0, [r0, #-4]
   13408:	bl	1130c <strcmp@plt>
   1340c:	cmp	r0, #0
   13410:	streq	r9, [fp, #-132]	; 0xffffff7c
   13414:	ldr	r2, [fp, #-152]	; 0xffffff68
   13418:	mov	r1, #1
   1341c:	mov	r0, #7
   13420:	cmp	r9, r2
   13424:	bge	1373c <argp_parse@@Base+0x894>
   13428:	ldrb	r2, [fp, #-140]	; 0xffffff74
   1342c:	tst	r2, #4
   13430:	bne	1373c <argp_parse@@Base+0x894>
   13434:	add	r0, r9, #1
   13438:	str	r0, [fp, #-144]	; 0xffffff70
   1343c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   13440:	ldr	r7, [r1, r9, lsl #2]
   13444:	mov	r9, r0
   13448:	str	r7, [fp, #-196]	; 0xffffff3c
   1344c:	sub	r0, r9, #1
   13450:	str	r0, [fp, #-144]	; 0xffffff70
   13454:	ldr	r1, [fp, #-172]	; 0xffffff54
   13458:	ldr	r2, [fp, #-168]	; 0xffffff58
   1345c:	cmp	r1, r2
   13460:	bcs	13720 <argp_parse@@Base+0x878>
   13464:	add	r4, r1, #24
   13468:	b	13474 <argp_parse@@Base+0x5cc>
   1346c:	ldr	r0, [fp, #-144]	; 0xffffff70
   13470:	add	r4, r4, #36	; 0x24
   13474:	add	r1, r0, #1
   13478:	str	r1, [fp, #-144]	; 0xffffff70
   1347c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13480:	cmp	r3, #0
   13484:	beq	13524 <argp_parse@@Base+0x67c>
   13488:	ldr	r0, [r4, #8]
   1348c:	mov	r1, r7
   13490:	mov	r2, sl
   13494:	mov	r5, #0
   13498:	str	r0, [fp, #-120]	; 0xffffff88
   1349c:	ldr	r0, [r4]
   134a0:	str	r0, [fp, #-128]	; 0xffffff80
   134a4:	ldr	r0, [r4, #4]
   134a8:	str	r0, [fp, #-124]	; 0xffffff84
   134ac:	ldr	r0, [r4, #-12]
   134b0:	str	r0, [fp, #-136]	; 0xffffff78
   134b4:	mov	r0, #0
   134b8:	blx	r3
   134bc:	ldr	r1, [fp, #-120]	; 0xffffff88
   134c0:	cmp	r0, #7
   134c4:	str	r1, [r4, #8]
   134c8:	bne	1354c <argp_parse@@Base+0x6a4>
   134cc:	ldr	r0, [fp, #-144]	; 0xffffff70
   134d0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   134d4:	sub	r0, r0, #1
   134d8:	cmp	r3, #0
   134dc:	str	r0, [fp, #-144]	; 0xffffff70
   134e0:	beq	13528 <argp_parse@@Base+0x680>
   134e4:	ldr	r0, [r4]
   134e8:	mov	r1, #0
   134ec:	mov	r2, sl
   134f0:	str	r0, [fp, #-128]	; 0xffffff80
   134f4:	ldr	r0, [r4, #4]
   134f8:	str	r0, [fp, #-124]	; 0xffffff84
   134fc:	ldr	r0, [r4, #-12]
   13500:	str	r0, [fp, #-136]	; 0xffffff78
   13504:	movw	r0, #6
   13508:	movt	r0, #256	; 0x100
   1350c:	blx	r3
   13510:	ldr	r1, [fp, #-120]	; 0xffffff88
   13514:	str	r1, [r4, #8]
   13518:	cmp	r0, #7
   1351c:	beq	13534 <argp_parse@@Base+0x68c>
   13520:	b	13544 <argp_parse@@Base+0x69c>
   13524:	str	r0, [fp, #-144]	; 0xffffff70
   13528:	mov	r0, #7
   1352c:	cmp	r0, #7
   13530:	bne	13544 <argp_parse@@Base+0x69c>
   13534:	ldr	r2, [fp, #-168]	; 0xffffff58
   13538:	add	r1, r4, #12
   1353c:	cmp	r1, r2
   13540:	bcc	1346c <argp_parse@@Base+0x5c4>
   13544:	movw	r5, #6
   13548:	movt	r5, #256	; 0x100
   1354c:	cmp	r0, #0
   13550:	beq	13568 <argp_parse@@Base+0x6c0>
   13554:	cmp	r0, #7
   13558:	beq	13720 <argp_parse@@Base+0x878>
   1355c:	cmp	r0, #0
   13560:	beq	13344 <argp_parse@@Base+0x49c>
   13564:	b	13974 <argp_parse@@Base+0xacc>
   13568:	movw	r0, #6
   1356c:	movt	r0, #256	; 0x100
   13570:	cmp	r5, r0
   13574:	ldreq	r0, [fp, #-152]	; 0xffffff68
   13578:	streq	r0, [fp, #-144]	; 0xffffff70
   1357c:	ldrne	r0, [fp, #-144]	; 0xffffff70
   13580:	cmp	r0, r9
   13584:	bge	135a0 <argp_parse@@Base+0x6f8>
   13588:	mov	r0, #1
   1358c:	str	r0, [fp, #-160]	; 0xffffff60
   13590:	mov	r0, #0
   13594:	cmp	r0, #0
   13598:	beq	13344 <argp_parse@@Base+0x49c>
   1359c:	b	13974 <argp_parse@@Base+0xacc>
   135a0:	rsb	r1, r9, #1
   135a4:	add	r0, r1, r0
   135a8:	ldr	r1, [r4, #-12]
   135ac:	add	r0, r0, r1
   135b0:	str	r0, [r4, #-12]
   135b4:	mov	r0, #0
   135b8:	cmp	r0, #0
   135bc:	beq	13344 <argp_parse@@Base+0x49c>
   135c0:	b	13974 <argp_parse@@Base+0xacc>
   135c4:	ldr	r0, [fp, #-200]	; 0xffffff38
   135c8:	cmn	r0, #1
   135cc:	beq	1364c <argp_parse@@Base+0x7a4>
   135d0:	b	13b40 <argp_parse@@Base+0xc98>
   135d4:	cmp	r8, r7, asr #24
   135d8:	beq	1364c <argp_parse@@Base+0x7a4>
   135dc:	ldr	r1, [fp, #-172]	; 0xffffff54
   135e0:	asr	r0, r7, #24
   135e4:	sub	r0, r0, #1
   135e8:	add	r0, r0, r0, lsl #3
   135ec:	ldr	r3, [r1, r0, lsl #2]
   135f0:	cmp	r3, #0
   135f4:	beq	13b0c <argp_parse@@Base+0xc64>
   135f8:	add	r4, r1, r0, lsl #2
   135fc:	tst	r7, #8388608	; 0x800000
   13600:	mov	r2, sl
   13604:	ldr	r0, [r4, #32]!
   13608:	str	r0, [fp, #-120]	; 0xffffff88
   1360c:	ldr	r0, [r4, #-8]
   13610:	str	r0, [fp, #-128]	; 0xffffff80
   13614:	ldr	r0, [r4, #-4]
   13618:	str	r0, [fp, #-124]	; 0xffffff84
   1361c:	ldr	r0, [r4, #-20]	; 0xffffffec
   13620:	str	r0, [fp, #-136]	; 0xffffff78
   13624:	bic	r0, r7, #-16777216	; 0xff000000
   13628:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1362c:	orrne	r0, r0, #-16777216	; 0xff000000
   13630:	blx	r3
   13634:	mov	r1, #0
   13638:	ldr	r2, [fp, #-120]	; 0xffffff88
   1363c:	cmp	r0, #7
   13640:	str	r2, [r4]
   13644:	bne	1355c <argp_parse@@Base+0x6b4>
   13648:	b	136ec <argp_parse@@Base+0x844>
   1364c:	ldr	r0, [fp, #-216]	; 0xffffff28
   13650:	mov	r1, r7
   13654:	bl	11480 <strchr@plt>
   13658:	cmp	r0, #0
   1365c:	beq	136f4 <argp_parse@@Base+0x84c>
   13660:	ldr	r1, [fp, #-172]	; 0xffffff54
   13664:	ldr	r2, [fp, #-168]	; 0xffffff58
   13668:	cmp	r1, r2
   1366c:	bcs	136f4 <argp_parse@@Base+0x84c>
   13670:	add	r1, r1, #24
   13674:	ldr	r3, [r1, #-16]
   13678:	cmp	r3, r0
   1367c:	bhi	13698 <argp_parse@@Base+0x7f0>
   13680:	add	r3, r1, #36	; 0x24
   13684:	add	r1, r1, #12
   13688:	cmp	r1, r2
   1368c:	mov	r1, r3
   13690:	bcc	13674 <argp_parse@@Base+0x7cc>
   13694:	b	136f4 <argp_parse@@Base+0x84c>
   13698:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1369c:	cmp	r3, #0
   136a0:	beq	136f4 <argp_parse@@Base+0x84c>
   136a4:	mov	r4, r1
   136a8:	mov	r2, sl
   136ac:	ldr	r0, [r4, #8]!
   136b0:	str	r0, [fp, #-120]	; 0xffffff88
   136b4:	ldr	r0, [r1]
   136b8:	str	r0, [fp, #-128]	; 0xffffff80
   136bc:	ldr	r0, [r1, #4]
   136c0:	str	r0, [fp, #-124]	; 0xffffff84
   136c4:	ldr	r0, [r1, #-12]
   136c8:	str	r0, [fp, #-136]	; 0xffffff78
   136cc:	mov	r0, r7
   136d0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   136d4:	blx	r3
   136d8:	mov	r1, #1
   136dc:	ldr	r2, [fp, #-120]	; 0xffffff88
   136e0:	cmp	r0, #7
   136e4:	str	r2, [r4]
   136e8:	bne	1355c <argp_parse@@Base+0x6b4>
   136ec:	cmp	r1, #0
   136f0:	beq	13b0c <argp_parse@@Base+0xc64>
   136f4:	movw	r1, #50223	; 0xc42f
   136f8:	movw	r3, #49956	; 0xc324
   136fc:	mov	r0, sl
   13700:	mov	r2, r7
   13704:	movt	r1, #1
   13708:	movt	r3, #1
   1370c:	bl	16c1c <argp_error@@Base>
   13710:	mov	r0, #0
   13714:	b	13728 <argp_parse@@Base+0x880>
   13718:	mov	r1, r5
   1371c:	b	13100 <argp_parse@@Base+0x258>
   13720:	mov	r7, #1
   13724:	mov	r0, #1
   13728:	add	r1, r7, #1
   1372c:	clz	r1, r1
   13730:	lsr	r1, r1, #5
   13734:	orr	r1, r1, r0
   13738:	mov	r0, #7
   1373c:	subs	r7, r0, #7
   13740:	movne	r7, r0
   13744:	cmp	r1, #0
   13748:	moveq	r7, r0
   1374c:	cmp	r7, #0
   13750:	beq	13800 <argp_parse@@Base+0x958>
   13754:	cmp	r7, #0
   13758:	beq	139c4 <argp_parse@@Base+0xb1c>
   1375c:	cmp	r7, #7
   13760:	bne	13778 <argp_parse@@Base+0x8d0>
   13764:	ldr	r1, [fp, #-112]	; 0xffffff90
   13768:	mov	r0, sl
   1376c:	mov	r2, #260	; 0x104
   13770:	bl	16b60 <argp_state_help@@Base>
   13774:	mov	r7, #7
   13778:	ldr	r4, [fp, #-172]	; 0xffffff54
   1377c:	ldr	r0, [fp, #-168]	; 0xffffff58
   13780:	cmp	r4, r0
   13784:	bcs	13a80 <argp_parse@@Base+0xbd8>
   13788:	movw	r1, #6
   1378c:	movt	r1, #256	; 0x100
   13790:	sub	r6, r1, #1
   13794:	ldr	r3, [r4]
   13798:	cmp	r3, #0
   1379c:	beq	137dc <argp_parse@@Base+0x934>
   137a0:	ldr	r0, [r4, #32]
   137a4:	mov	r1, #0
   137a8:	mov	r2, sl
   137ac:	str	r0, [fp, #-120]	; 0xffffff88
   137b0:	ldr	r0, [r4, #24]
   137b4:	str	r0, [fp, #-128]	; 0xffffff80
   137b8:	ldr	r0, [r4, #28]
   137bc:	str	r0, [fp, #-124]	; 0xffffff84
   137c0:	ldr	r0, [r4, #12]
   137c4:	str	r0, [fp, #-136]	; 0xffffff78
   137c8:	mov	r0, r6
   137cc:	blx	r3
   137d0:	ldr	r0, [fp, #-120]	; 0xffffff88
   137d4:	str	r0, [r4, #32]
   137d8:	ldr	r0, [fp, #-168]	; 0xffffff58
   137dc:	add	r4, r4, #36	; 0x24
   137e0:	cmp	r4, r0
   137e4:	bcc	13794 <argp_parse@@Base+0x8ec>
   137e8:	ldr	r4, [fp, #-172]	; 0xffffff54
   137ec:	ldr	r0, [fp, #-168]	; 0xffffff58
   137f0:	sub	r6, r0, #36	; 0x24
   137f4:	cmp	r6, r4
   137f8:	bcs	13a90 <argp_parse@@Base+0xbe8>
   137fc:	b	13af0 <argp_parse@@Base+0xc48>
   13800:	ldr	r1, [fp, #-152]	; 0xffffff68
   13804:	ldr	r0, [fp, #-144]	; 0xffffff70
   13808:	cmp	r0, r1
   1380c:	bne	13960 <argp_parse@@Base+0xab8>
   13810:	ldr	r4, [fp, #-172]	; 0xffffff54
   13814:	ldr	r1, [fp, #-168]	; 0xffffff58
   13818:	mov	r0, #0
   1381c:	cmp	r4, r1
   13820:	bcs	138c8 <argp_parse@@Base+0xa20>
   13824:	movw	r0, #6
   13828:	mov	r7, #0
   1382c:	movt	r0, #256	; 0x100
   13830:	sub	r6, r0, #4
   13834:	mov	r0, #0
   13838:	cmp	r0, #7
   1383c:	cmpne	r0, #0
   13840:	bne	138c4 <argp_parse@@Base+0xa1c>
   13844:	ldr	r2, [r4, #12]
   13848:	cmp	r2, #0
   1384c:	beq	13860 <argp_parse@@Base+0x9b8>
   13850:	add	r4, r4, #36	; 0x24
   13854:	cmp	r4, r1
   13858:	bcc	13838 <argp_parse@@Base+0x990>
   1385c:	b	138c4 <argp_parse@@Base+0xa1c>
   13860:	ldr	r3, [r4]
   13864:	cmp	r3, #0
   13868:	beq	138b4 <argp_parse@@Base+0xa0c>
   1386c:	ldr	r0, [r4, #32]
   13870:	mov	r1, #0
   13874:	mov	r2, sl
   13878:	str	r0, [fp, #-120]	; 0xffffff88
   1387c:	ldr	r0, [r4, #24]
   13880:	str	r0, [fp, #-128]	; 0xffffff80
   13884:	ldr	r0, [r4, #28]
   13888:	str	r7, [fp, #-136]	; 0xffffff78
   1388c:	str	r0, [fp, #-124]	; 0xffffff84
   13890:	mov	r0, r6
   13894:	blx	r3
   13898:	ldr	r1, [fp, #-120]	; 0xffffff88
   1389c:	str	r1, [r4, #32]
   138a0:	ldr	r1, [fp, #-168]	; 0xffffff58
   138a4:	add	r4, r4, #36	; 0x24
   138a8:	cmp	r4, r1
   138ac:	bcc	13838 <argp_parse@@Base+0x990>
   138b0:	b	138c4 <argp_parse@@Base+0xa1c>
   138b4:	mov	r0, #7
   138b8:	add	r4, r4, #36	; 0x24
   138bc:	cmp	r4, r1
   138c0:	bcc	13838 <argp_parse@@Base+0x990>
   138c4:	ldr	r4, [fp, #-172]	; 0xffffff54
   138c8:	sub	r7, r1, #36	; 0x24
   138cc:	cmp	r7, r4
   138d0:	bcc	13954 <argp_parse@@Base+0xaac>
   138d4:	movw	r1, #6
   138d8:	movt	r1, #256	; 0x100
   138dc:	sub	r6, r1, #5
   138e0:	cmp	r0, #7
   138e4:	cmpne	r0, #0
   138e8:	bne	139a8 <argp_parse@@Base+0xb00>
   138ec:	ldr	r3, [r7]
   138f0:	cmp	r3, #0
   138f4:	beq	13944 <argp_parse@@Base+0xa9c>
   138f8:	ldr	r0, [r7, #32]
   138fc:	mov	r1, #0
   13900:	mov	r2, sl
   13904:	str	r0, [fp, #-120]	; 0xffffff88
   13908:	ldr	r0, [r7, #24]
   1390c:	str	r0, [fp, #-128]	; 0xffffff80
   13910:	ldr	r0, [r7, #28]
   13914:	str	r0, [fp, #-124]	; 0xffffff84
   13918:	ldr	r0, [r7, #12]
   1391c:	str	r0, [fp, #-136]	; 0xffffff78
   13920:	mov	r0, r6
   13924:	blx	r3
   13928:	ldr	r1, [fp, #-120]	; 0xffffff88
   1392c:	str	r1, [r7, #32]
   13930:	ldr	r4, [fp, #-172]	; 0xffffff54
   13934:	sub	r7, r7, #36	; 0x24
   13938:	cmp	r7, r4
   1393c:	bcs	138e0 <argp_parse@@Base+0xa38>
   13940:	b	13954 <argp_parse@@Base+0xaac>
   13944:	mov	r0, #7
   13948:	sub	r7, r7, #36	; 0x24
   1394c:	cmp	r7, r4
   13950:	bcs	138e0 <argp_parse@@Base+0xa38>
   13954:	subs	r7, r0, #7
   13958:	movne	r7, r0
   1395c:	b	139ac <argp_parse@@Base+0xb04>
   13960:	ldr	r1, [fp, #8]
   13964:	cmp	r1, #0
   13968:	beq	1397c <argp_parse@@Base+0xad4>
   1396c:	str	r0, [r1]
   13970:	b	139c4 <argp_parse@@Base+0xb1c>
   13974:	mov	r1, #0
   13978:	b	1373c <argp_parse@@Base+0x894>
   1397c:	ldrb	r0, [fp, #-140]	; 0xffffff74
   13980:	tst	r0, #2
   13984:	bne	13764 <argp_parse@@Base+0x8bc>
   13988:	ldr	r0, [fp, #-112]	; 0xffffff90
   1398c:	cmp	r0, #0
   13990:	beq	13764 <argp_parse@@Base+0x8bc>
   13994:	ldr	r2, [fp, #-116]	; 0xffffff8c
   13998:	movw	r1, #50244	; 0xc444
   1399c:	movt	r1, #1
   139a0:	bl	1148c <fprintf@plt>
   139a4:	b	13764 <argp_parse@@Base+0x8bc>
   139a8:	mov	r7, r0
   139ac:	ldr	r1, [fp, #8]
   139b0:	cmp	r1, #0
   139b4:	ldrne	r0, [fp, #-144]	; 0xffffff70
   139b8:	strne	r0, [r1]
   139bc:	cmp	r7, #0
   139c0:	bne	1375c <argp_parse@@Base+0x8b4>
   139c4:	ldr	r0, [fp, #-168]	; 0xffffff58
   139c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   139cc:	mov	r7, #0
   139d0:	sub	r5, r0, #36	; 0x24
   139d4:	cmp	r5, r4
   139d8:	bcc	13a80 <argp_parse@@Base+0xbd8>
   139dc:	movw	r1, #6
   139e0:	mov	r0, #0
   139e4:	movt	r1, #256	; 0x100
   139e8:	sub	r6, r1, #2
   139ec:	cmp	r0, #7
   139f0:	cmpne	r0, #0
   139f4:	bne	13a7c <argp_parse@@Base+0xbd4>
   139f8:	ldr	r3, [r5]
   139fc:	cmp	r3, #0
   13a00:	beq	13a50 <argp_parse@@Base+0xba8>
   13a04:	ldr	r0, [r5, #32]
   13a08:	mov	r1, #0
   13a0c:	mov	r2, sl
   13a10:	str	r0, [fp, #-120]	; 0xffffff88
   13a14:	ldr	r0, [r5, #24]
   13a18:	str	r0, [fp, #-128]	; 0xffffff80
   13a1c:	ldr	r0, [r5, #28]
   13a20:	str	r0, [fp, #-124]	; 0xffffff84
   13a24:	ldr	r0, [r5, #12]
   13a28:	str	r0, [fp, #-136]	; 0xffffff78
   13a2c:	mov	r0, r6
   13a30:	blx	r3
   13a34:	ldr	r1, [fp, #-120]	; 0xffffff88
   13a38:	str	r1, [r5, #32]
   13a3c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13a40:	sub	r5, r5, #36	; 0x24
   13a44:	cmp	r5, r4
   13a48:	bcs	139ec <argp_parse@@Base+0xb44>
   13a4c:	b	13a60 <argp_parse@@Base+0xbb8>
   13a50:	mov	r0, #7
   13a54:	sub	r5, r5, #36	; 0x24
   13a58:	cmp	r5, r4
   13a5c:	bcs	139ec <argp_parse@@Base+0xb44>
   13a60:	subs	r7, r0, #7
   13a64:	movne	r7, r0
   13a68:	ldr	r0, [fp, #-168]	; 0xffffff58
   13a6c:	sub	r6, r0, #36	; 0x24
   13a70:	cmp	r6, r4
   13a74:	bcs	13a90 <argp_parse@@Base+0xbe8>
   13a78:	b	13af0 <argp_parse@@Base+0xc48>
   13a7c:	mov	r7, r0
   13a80:	ldr	r0, [fp, #-168]	; 0xffffff58
   13a84:	sub	r6, r0, #36	; 0x24
   13a88:	cmp	r6, r4
   13a8c:	bcc	13af0 <argp_parse@@Base+0xc48>
   13a90:	movw	r0, #6
   13a94:	movt	r0, #256	; 0x100
   13a98:	add	r5, r0, #1
   13a9c:	ldr	r3, [r6]
   13aa0:	cmp	r3, #0
   13aa4:	beq	13ae4 <argp_parse@@Base+0xc3c>
   13aa8:	ldr	r0, [r6, #32]
   13aac:	mov	r1, #0
   13ab0:	mov	r2, sl
   13ab4:	str	r0, [fp, #-120]	; 0xffffff88
   13ab8:	ldr	r0, [r6, #24]
   13abc:	str	r0, [fp, #-128]	; 0xffffff80
   13ac0:	ldr	r0, [r6, #28]
   13ac4:	str	r0, [fp, #-124]	; 0xffffff84
   13ac8:	ldr	r0, [r6, #12]
   13acc:	str	r0, [fp, #-136]	; 0xffffff78
   13ad0:	mov	r0, r5
   13ad4:	blx	r3
   13ad8:	ldr	r0, [fp, #-120]	; 0xffffff88
   13adc:	str	r0, [r6, #32]
   13ae0:	ldr	r4, [fp, #-172]	; 0xffffff54
   13ae4:	sub	r6, r6, #36	; 0x24
   13ae8:	cmp	r6, r4
   13aec:	bcs	13a9c <argp_parse@@Base+0xbf4>
   13af0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13af4:	bl	14258 <argp_parse@@Base+0x13b0>
   13af8:	cmp	r7, #7
   13afc:	movweq	r7, #22
   13b00:	mov	r0, r7
   13b04:	sub	sp, fp, #28
   13b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b0c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   13b10:	ldr	r1, [r0, #12]
   13b14:	cmp	r1, r7
   13b18:	beq	13b48 <argp_parse@@Base+0xca0>
   13b1c:	ldr	r1, [r0]
   13b20:	cmp	r1, #0
   13b24:	beq	13b48 <argp_parse@@Base+0xca0>
   13b28:	add	r1, r0, #16
   13b2c:	ldr	r0, [r0, #28]
   13b30:	cmp	r0, r7
   13b34:	mov	r0, r1
   13b38:	bne	13b1c <argp_parse@@Base+0xc74>
   13b3c:	b	13b4c <argp_parse@@Base+0xca4>
   13b40:	mov	r1, #0
   13b44:	b	13738 <argp_parse@@Base+0x890>
   13b48:	mov	r1, r0
   13b4c:	ldr	r0, [r1]
   13b50:	movw	r2, #50240	; 0xc440
   13b54:	movw	r1, #50231	; 0xc437
   13b58:	movw	r3, #49956	; 0xc324
   13b5c:	movt	r2, #1
   13b60:	movt	r1, #1
   13b64:	movt	r3, #1
   13b68:	cmp	r0, #0
   13b6c:	movne	r2, r0
   13b70:	mov	r0, sl
   13b74:	b	1370c <argp_parse@@Base+0x864>
   13b78:	mov	ip, r0
   13b7c:	mov	r0, #0
   13b80:	cmp	r1, #0
   13b84:	beq	13bb4 <argp_parse@@Base+0xd0c>
   13b88:	ldr	r3, [r1, #52]	; 0x34
   13b8c:	ldr	r1, [r3, #48]	; 0x30
   13b90:	ldr	r3, [r3, #52]	; 0x34
   13b94:	b	13b9c <argp_parse@@Base+0xcf4>
   13b98:	add	r1, r1, #36	; 0x24
   13b9c:	cmp	r1, r3
   13ba0:	bxcs	lr
   13ba4:	ldr	r2, [r1, #4]
   13ba8:	cmp	r2, ip
   13bac:	bne	13b98 <argp_parse@@Base+0xcf0>
   13bb0:	ldr	r0, [r1, #24]
   13bb4:	bx	lr
   13bb8:	push	{r4, r5, r6, sl, fp, lr}
   13bbc:	add	fp, sp, #16
   13bc0:	mov	r5, r2
   13bc4:	mov	r6, r1
   13bc8:	mov	r4, #7
   13bcc:	cmn	r0, #3
   13bd0:	bgt	13c00 <argp_parse@@Base+0xd58>
   13bd4:	cmn	r0, #4
   13bd8:	beq	13c2c <argp_parse@@Base+0xd84>
   13bdc:	cmn	r0, #3
   13be0:	bne	13c84 <argp_parse@@Base+0xddc>
   13be4:	ldr	r1, [r5, #48]	; 0x30
   13be8:	mov	r0, r5
   13bec:	movw	r2, #513	; 0x201
   13bf0:	bl	16b60 <argp_state_help@@Base>
   13bf4:	mov	r4, #0
   13bf8:	mov	r0, r4
   13bfc:	pop	{r4, r5, r6, sl, fp, pc}
   13c00:	cmn	r0, #2
   13c04:	beq	13c8c <argp_parse@@Base+0xde4>
   13c08:	cmp	r0, #63	; 0x3f
   13c0c:	bne	13c84 <argp_parse@@Base+0xddc>
   13c10:	ldr	r1, [r5, #48]	; 0x30
   13c14:	mov	r0, r5
   13c18:	movw	r2, #634	; 0x27a
   13c1c:	bl	16b60 <argp_state_help@@Base>
   13c20:	mov	r4, #0
   13c24:	mov	r0, r4
   13c28:	pop	{r4, r5, r6, sl, fp, pc}
   13c2c:	movw	r0, #50158	; 0xc3ee
   13c30:	cmp	r6, #0
   13c34:	mov	r1, #0
   13c38:	mov	r2, #10
   13c3c:	mov	r4, #0
   13c40:	movt	r0, #1
   13c44:	movne	r0, r6
   13c48:	bl	11318 <strtol@plt>
   13c4c:	movw	r5, #2260	; 0x8d4
   13c50:	movt	r5, #3
   13c54:	str	r0, [r5]
   13c58:	ldr	r0, [r5]
   13c5c:	subs	r0, r0, #1
   13c60:	str	r0, [r5]
   13c64:	blt	13c84 <argp_parse@@Base+0xddc>
   13c68:	mov	r0, #1
   13c6c:	bl	113a8 <sleep@plt>
   13c70:	ldr	r0, [r5]
   13c74:	sub	r1, r0, #1
   13c78:	cmp	r0, #0
   13c7c:	str	r1, [r5]
   13c80:	bgt	13c68 <argp_parse@@Base+0xdc0>
   13c84:	mov	r0, r4
   13c88:	pop	{r4, r5, r6, sl, fp, pc}
   13c8c:	movw	r0, #2244	; 0x8c4
   13c90:	movt	r0, #3
   13c94:	str	r6, [r0]
   13c98:	mov	r0, r6
   13c9c:	bl	141c0 <argp_parse@@Base+0x1318>
   13ca0:	movw	r1, #2240	; 0x8c0
   13ca4:	str	r0, [r5, #40]	; 0x28
   13ca8:	mov	r4, #0
   13cac:	movt	r1, #3
   13cb0:	str	r0, [r1]
   13cb4:	ldr	r0, [r5, #16]
   13cb8:	and	r0, r0, #3
   13cbc:	cmp	r0, #1
   13cc0:	ldreq	r0, [r5, #8]
   13cc4:	streq	r6, [r0]
   13cc8:	moveq	r0, r4
   13ccc:	popeq	{r4, r5, r6, sl, fp, pc}
   13cd0:	mov	r0, r4
   13cd4:	pop	{r4, r5, r6, sl, fp, pc}
   13cd8:	push	{r4, sl, fp, lr}
   13cdc:	add	fp, sp, #8
   13ce0:	mov	r1, r0
   13ce4:	mov	r0, #7
   13ce8:	cmp	r1, #86	; 0x56
   13cec:	popne	{r4, sl, fp, pc}
   13cf0:	movw	r0, #2264	; 0x8d8
   13cf4:	mov	r4, r2
   13cf8:	movt	r0, #3
   13cfc:	ldr	r2, [r0]
   13d00:	cmp	r2, #0
   13d04:	beq	13d28 <argp_parse@@Base+0xe80>
   13d08:	ldr	r0, [r4, #48]	; 0x30
   13d0c:	mov	r1, r4
   13d10:	blx	r2
   13d14:	ldrb	r1, [r4, #16]
   13d18:	mov	r0, #0
   13d1c:	tst	r1, #32
   13d20:	beq	13d5c <argp_parse@@Base+0xeb4>
   13d24:	pop	{r4, sl, fp, pc}
   13d28:	movw	r0, #2368	; 0x940
   13d2c:	movt	r0, #3
   13d30:	ldr	r2, [r0]
   13d34:	cmp	r2, #0
   13d38:	beq	13d64 <argp_parse@@Base+0xebc>
   13d3c:	ldr	r0, [r4, #48]	; 0x30
   13d40:	movw	r1, #50388	; 0xc4d4
   13d44:	movt	r1, #1
   13d48:	bl	1148c <fprintf@plt>
   13d4c:	ldrb	r1, [r4, #16]
   13d50:	mov	r0, #0
   13d54:	tst	r1, #32
   13d58:	bne	13d24 <argp_parse@@Base+0xe7c>
   13d5c:	mov	r0, #0
   13d60:	bl	11468 <exit@plt>
   13d64:	movw	r1, #51444	; 0xc8f4
   13d68:	movw	r2, #50185	; 0xc409
   13d6c:	mov	r0, r4
   13d70:	movt	r1, #1
   13d74:	movt	r2, #1
   13d78:	bl	16c1c <argp_error@@Base>
   13d7c:	ldrb	r1, [r4, #16]
   13d80:	mov	r0, #0
   13d84:	tst	r1, #32
   13d88:	bne	13d24 <argp_parse@@Base+0xe7c>
   13d8c:	b	13d5c <argp_parse@@Base+0xeb4>
   13d90:	push	{r4, r5, fp, lr}
   13d94:	add	fp, sp, #8
   13d98:	ldr	r2, [r0]
   13d9c:	ldr	ip, [r0, #16]
   13da0:	mov	r4, r1
   13da4:	cmp	r2, #0
   13da8:	beq	13e20 <argp_parse@@Base+0xf78>
   13dac:	ldr	r0, [r4, #8]
   13db0:	mov	r3, #0
   13db4:	add	r0, r0, #1
   13db8:	str	r0, [r4, #8]
   13dbc:	mov	r0, #0
   13dc0:	add	r5, r2, r3, lsl #3
   13dc4:	ldr	r1, [r5, #4]
   13dc8:	cmp	r1, #0
   13dcc:	beq	13de8 <argp_parse@@Base+0xf40>
   13dd0:	add	r3, r3, #3
   13dd4:	add	r0, r0, #1
   13dd8:	add	r5, r2, r3, lsl #3
   13ddc:	ldr	r1, [r5, #4]
   13de0:	cmp	r1, #0
   13de4:	bne	13dd0 <argp_parse@@Base+0xf28>
   13de8:	ldr	r1, [r2, r3, lsl #3]
   13dec:	cmp	r1, #0
   13df0:	bne	13dd0 <argp_parse@@Base+0xf28>
   13df4:	ldr	r1, [r5, #16]
   13df8:	cmp	r1, #0
   13dfc:	bne	13dd0 <argp_parse@@Base+0xf28>
   13e00:	ldr	r1, [r5, #20]
   13e04:	cmp	r1, #0
   13e08:	bne	13dd0 <argp_parse@@Base+0xf28>
   13e0c:	ldr	r1, [r4]
   13e10:	mov	r2, r4
   13e14:	add	r1, r1, r3
   13e18:	str	r1, [r2], #4
   13e1c:	b	13e34 <argp_parse@@Base+0xf8c>
   13e20:	ldr	r0, [r0, #4]
   13e24:	cmp	r0, #0
   13e28:	beq	13e40 <argp_parse@@Base+0xf98>
   13e2c:	add	r2, r4, #8
   13e30:	mov	r0, #1
   13e34:	ldr	r1, [r2]
   13e38:	add	r0, r1, r0
   13e3c:	str	r0, [r2]
   13e40:	cmp	ip, #0
   13e44:	ldrne	r0, [ip]
   13e48:	cmpne	r0, #0
   13e4c:	beq	13e74 <argp_parse@@Base+0xfcc>
   13e50:	add	r5, ip, #16
   13e54:	mov	r1, r4
   13e58:	bl	13d90 <argp_parse@@Base+0xee8>
   13e5c:	ldr	r0, [r4, #12]
   13e60:	add	r0, r0, #1
   13e64:	str	r0, [r4, #12]
   13e68:	ldr	r0, [r5], #16
   13e6c:	cmp	r0, #0
   13e70:	bne	13e54 <argp_parse@@Base+0xfac>
   13e74:	pop	{r4, r5, fp, pc}
   13e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e7c:	add	fp, sp, #28
   13e80:	sub	sp, sp, #28
   13e84:	ldr	r7, [r0]
   13e88:	mov	r6, r3
   13e8c:	mov	r3, r1
   13e90:	ldr	r5, [r0, #16]
   13e94:	ldr	r1, [fp, #8]
   13e98:	cmp	r7, #0
   13e9c:	beq	14084 <argp_parse@@Base+0x11dc>
   13ea0:	str	r0, [sp, #8]
   13ea4:	add	r0, sp, #16
   13ea8:	add	r8, r1, #4
   13eac:	mov	r9, r7
   13eb0:	str	r3, [sp, #12]
   13eb4:	stm	r0, {r2, r5, r6}
   13eb8:	ldr	r4, [r9, #4]
   13ebc:	cmp	r4, #0
   13ec0:	bne	13efc <argp_parse@@Base+0x1054>
   13ec4:	b	13ed8 <argp_parse@@Base+0x1030>
   13ec8:	add	r9, r9, #24
   13ecc:	ldr	r4, [r9, #4]
   13ed0:	cmp	r4, #0
   13ed4:	bne	13efc <argp_parse@@Base+0x1054>
   13ed8:	ldr	r0, [r9]
   13edc:	cmp	r0, #0
   13ee0:	bne	13efc <argp_parse@@Base+0x1054>
   13ee4:	ldr	r0, [r9, #16]
   13ee8:	cmp	r0, #0
   13eec:	bne	13efc <argp_parse@@Base+0x1054>
   13ef0:	ldr	r0, [r9, #20]
   13ef4:	cmp	r0, #0
   13ef8:	beq	1406c <argp_parse@@Base+0x11c4>
   13efc:	ldr	r0, [r9, #12]
   13f00:	mov	r5, #0
   13f04:	tst	r0, #4
   13f08:	moveq	r7, r9
   13f0c:	ldrb	r1, [r7, #12]
   13f10:	tst	r1, #8
   13f14:	bne	13ec8 <argp_parse@@Base+0x1020>
   13f18:	sub	r1, r4, #1
   13f1c:	cmp	r1, #254	; 0xfe
   13f20:	bhi	13f9c <argp_parse@@Base+0x10f4>
   13f24:	ands	r0, r0, #8
   13f28:	bne	13f9c <argp_parse@@Base+0x10f4>
   13f2c:	bl	1145c <__ctype_b_loc@plt>
   13f30:	ldr	r0, [r0]
   13f34:	add	r0, r0, r4, lsl #1
   13f38:	ldrb	r0, [r0, #1]
   13f3c:	tst	r0, #64	; 0x40
   13f40:	beq	13f9c <argp_parse@@Base+0x10f4>
   13f44:	ldr	r0, [r8]
   13f48:	add	r1, r0, #1
   13f4c:	str	r1, [r8]
   13f50:	strb	r4, [r0]
   13f54:	ldr	r0, [r7, #8]
   13f58:	cmp	r0, #0
   13f5c:	beq	13f94 <argp_parse@@Base+0x10ec>
   13f60:	ldr	r0, [r8]
   13f64:	add	r1, r0, #1
   13f68:	str	r1, [r8]
   13f6c:	mov	r1, #58	; 0x3a
   13f70:	strb	r1, [r0]
   13f74:	ldrb	r0, [r7, #12]
   13f78:	tst	r0, #1
   13f7c:	beq	13f94 <argp_parse@@Base+0x10ec>
   13f80:	ldr	r0, [r8]
   13f84:	add	r1, r0, #1
   13f88:	str	r1, [r8]
   13f8c:	mov	r1, #58	; 0x3a
   13f90:	strb	r1, [r0]
   13f94:	ldr	r0, [r8]
   13f98:	strb	r5, [r0]
   13f9c:	ldr	r5, [r9]
   13fa0:	cmp	r5, #0
   13fa4:	beq	13ec8 <argp_parse@@Base+0x1020>
   13fa8:	ldr	r0, [fp, #8]
   13fac:	ldr	r4, [r0]
   13fb0:	ldr	sl, [r4, #8]
   13fb4:	ldr	r0, [sl]
   13fb8:	cmp	r0, #0
   13fbc:	beq	13ff0 <argp_parse@@Base+0x1148>
   13fc0:	mov	r6, sl
   13fc4:	mov	r1, r5
   13fc8:	bl	1130c <strcmp@plt>
   13fcc:	cmp	r0, #0
   13fd0:	beq	13fe4 <argp_parse@@Base+0x113c>
   13fd4:	ldr	r0, [r6, #16]!
   13fd8:	cmp	r0, #0
   13fdc:	bne	13fc4 <argp_parse@@Base+0x111c>
   13fe0:	b	13ff0 <argp_parse@@Base+0x1148>
   13fe4:	sub	r0, r6, sl
   13fe8:	cmn	r0, #1
   13fec:	bgt	13ec8 <argp_parse@@Base+0x1020>
   13ff0:	ldr	r6, [fp, #8]
   13ff4:	ldr	r0, [r6, #8]
   13ff8:	str	r5, [r0]
   13ffc:	ldr	r1, [r7, #8]
   14000:	cmp	r1, #0
   14004:	beq	1401c <argp_parse@@Base+0x1174>
   14008:	ldrb	r1, [r7, #12]
   1400c:	tst	r1, #1
   14010:	mov	r1, #2
   14014:	movweq	r1, #1
   14018:	b	14020 <argp_parse@@Base+0x1178>
   1401c:	mov	r1, #0
   14020:	mov	r5, #0
   14024:	stmib	r0, {r1, r5}
   14028:	ldr	r1, [r9, #4]
   1402c:	ldr	r3, [sp, #24]
   14030:	ldr	r2, [r4, #48]	; 0x30
   14034:	cmp	r1, #0
   14038:	sub	r2, r3, r2
   1403c:	mov	r3, #956301312	; 0x39000000
   14040:	ldreq	r1, [r7, #4]
   14044:	lsr	r2, r2, #2
   14048:	mul	r2, r2, r3
   1404c:	add	r2, r2, #16777216	; 0x1000000
   14050:	bic	r1, r1, #-16777216	; 0xff000000
   14054:	orr	r1, r2, r1
   14058:	str	r1, [r0, #12]
   1405c:	add	r1, r0, #16
   14060:	str	r1, [r6, #8]
   14064:	str	r5, [r0, #16]
   14068:	b	13ec8 <argp_parse@@Base+0x1020>
   1406c:	ldr	r0, [sp, #8]
   14070:	add	r6, sp, #16
   14074:	ldr	r7, [r0, #4]
   14078:	ldm	r6, {r2, r5, r6}
   1407c:	ldr	r3, [sp, #12]
   14080:	b	14098 <argp_parse@@Base+0x11f0>
   14084:	ldr	r7, [r0, #4]
   14088:	cmp	r7, #0
   1408c:	beq	14140 <argp_parse@@Base+0x1298>
   14090:	ldr	r1, [fp, #8]
   14094:	add	r8, r1, #4
   14098:	str	r0, [r6, #4]
   1409c:	str	r7, [r6]
   140a0:	mov	r0, #0
   140a4:	cmp	r5, #0
   140a8:	ldr	r1, [r8]
   140ac:	str	r0, [r6, #12]
   140b0:	str	r3, [r6, #16]
   140b4:	str	r2, [r6, #20]
   140b8:	str	r0, [r6, #24]
   140bc:	str	r0, [r6, #32]
   140c0:	str	r0, [r6, #28]
   140c4:	str	r1, [r6, #8]
   140c8:	beq	140f8 <argp_parse@@Base+0x1250>
   140cc:	ldr	r1, [r5, r0, lsl #2]
   140d0:	add	r0, r0, #4
   140d4:	cmp	r1, #0
   140d8:	bne	140cc <argp_parse@@Base+0x1224>
   140dc:	ldr	r1, [fp, #8]
   140e0:	mov	r2, r1
   140e4:	ldr	r1, [r1, #12]
   140e8:	add	r0, r1, r0
   140ec:	str	r1, [r6, #28]
   140f0:	sub	r0, r0, #4
   140f4:	str	r0, [r2, #12]
   140f8:	add	r3, r6, #36	; 0x24
   140fc:	cmp	r5, #0
   14100:	ldrne	r0, [r5]
   14104:	cmpne	r0, #0
   14108:	beq	14158 <argp_parse@@Base+0x12b0>
   1410c:	ldr	r7, [fp, #8]
   14110:	add	r4, r5, #16
   14114:	mov	r5, #0
   14118:	mov	r1, r6
   1411c:	mov	r2, r5
   14120:	str	r7, [sp]
   14124:	bl	13e78 <argp_parse@@Base+0xfd0>
   14128:	mov	r3, r0
   1412c:	ldr	r0, [r4, r5, lsl #4]
   14130:	add	r5, r5, #1
   14134:	cmp	r0, #0
   14138:	bne	14118 <argp_parse@@Base+0x1270>
   1413c:	b	14158 <argp_parse@@Base+0x12b0>
   14140:	mov	r3, r6
   14144:	mov	r6, #0
   14148:	cmp	r5, #0
   1414c:	ldrne	r0, [r5]
   14150:	cmpne	r0, #0
   14154:	bne	1410c <argp_parse@@Base+0x1264>
   14158:	mov	r0, r3
   1415c:	sub	sp, fp, #28
   14160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14164:	movw	r2, #2268	; 0x8dc
   14168:	movw	ip, #2264	; 0x8d8
   1416c:	movw	r3, #16776	; 0x4188
   14170:	movt	r2, #3
   14174:	movt	ip, #3
   14178:	movt	r3, #1
   1417c:	str	r3, [ip]
   14180:	stm	r2, {r0, r1}
   14184:	bx	lr
   14188:	push	{fp, lr}
   1418c:	mov	fp, sp
   14190:	sub	sp, sp, #8
   14194:	movw	r2, #2268	; 0x8dc
   14198:	movw	r3, #50282	; 0xc46a
   1419c:	movt	r2, #3
   141a0:	movt	r3, #1
   141a4:	ldm	r2, {r1, r2}
   141a8:	str	r2, [sp]
   141ac:	movw	r2, #50268	; 0xc45c
   141b0:	movt	r2, #1
   141b4:	bl	14ab0 <_obstack_memory_used@@Base+0x3d8>
   141b8:	mov	sp, fp
   141bc:	pop	{fp, pc}
   141c0:	sub	r0, r0, #1
   141c4:	ldrb	r3, [r0, #1]!
   141c8:	cmp	r3, #47	; 0x2f
   141cc:	beq	141c4 <argp_parse@@Base+0x131c>
   141d0:	mov	r2, #0
   141d4:	mov	r1, r0
   141d8:	uxtb	r3, r3
   141dc:	cmp	r3, #47	; 0x2f
   141e0:	beq	14208 <argp_parse@@Base+0x1360>
   141e4:	cmp	r3, #0
   141e8:	bxeq	lr
   141ec:	tst	r2, #1
   141f0:	mov	r2, #0
   141f4:	movne	r0, r1
   141f8:	ldrb	r3, [r1, #1]!
   141fc:	uxtb	r3, r3
   14200:	cmp	r3, #47	; 0x2f
   14204:	bne	141e4 <argp_parse@@Base+0x133c>
   14208:	ldrb	r3, [r1, #1]!
   1420c:	mov	r2, #1
   14210:	uxtb	r3, r3
   14214:	cmp	r3, #47	; 0x2f
   14218:	bne	141e4 <argp_parse@@Base+0x133c>
   1421c:	b	14208 <argp_parse@@Base+0x1360>
   14220:	push	{r4, sl, fp, lr}
   14224:	add	fp, sp, #8
   14228:	mov	r4, r0
   1422c:	bl	11474 <strlen@plt>
   14230:	mov	r1, r0
   14234:	sub	r2, r4, #1
   14238:	mov	r0, r1
   1423c:	cmp	r1, #2
   14240:	popcc	{r4, sl, fp, pc}
   14244:	ldrb	r3, [r2, r0]
   14248:	sub	r1, r0, #1
   1424c:	cmp	r3, #47	; 0x2f
   14250:	beq	14238 <argp_parse@@Base+0x1390>
   14254:	pop	{r4, sl, fp, pc}
   14258:	push	{r4, r5, r6, sl, fp, lr}
   1425c:	add	fp, sp, #16
   14260:	mov	r4, r0
   14264:	bl	11498 <__errno_location@plt>
   14268:	ldr	r6, [r0]
   1426c:	mov	r5, r0
   14270:	mov	r0, r4
   14274:	bl	11348 <free@plt>
   14278:	str	r6, [r5]
   1427c:	pop	{r4, r5, r6, sl, fp, pc}
   14280:	push	{fp, lr}
   14284:	mov	fp, sp
   14288:	sub	sp, sp, #16
   1428c:	mov	ip, #0
   14290:	str	ip, [sp, #8]
   14294:	str	ip, [sp, #4]
   14298:	ldr	ip, [fp, #8]
   1429c:	str	ip, [sp]
   142a0:	bl	19f3c <argp_failure@@Base+0x31ac>
   142a4:	mov	sp, fp
   142a8:	pop	{fp, pc}
   142ac:	push	{fp, lr}
   142b0:	mov	fp, sp
   142b4:	sub	sp, sp, #16
   142b8:	mov	ip, #0
   142bc:	str	ip, [sp, #12]
   142c0:	str	ip, [sp, #4]
   142c4:	ldr	ip, [fp, #12]
   142c8:	str	ip, [sp, #8]
   142cc:	ldr	ip, [fp, #8]
   142d0:	str	ip, [sp]
   142d4:	bl	18da8 <argp_failure@@Base+0x2018>
   142d8:	mov	sp, fp
   142dc:	pop	{fp, pc}
   142e0:	push	{fp, lr}
   142e4:	mov	fp, sp
   142e8:	sub	sp, sp, #16
   142ec:	mov	ip, #0
   142f0:	str	ip, [sp, #8]
   142f4:	mov	ip, #1
   142f8:	str	ip, [sp, #4]
   142fc:	ldr	ip, [fp, #8]
   14300:	str	ip, [sp]
   14304:	bl	19f3c <argp_failure@@Base+0x31ac>
   14308:	mov	sp, fp
   1430c:	pop	{fp, pc}
   14310:	push	{fp, lr}
   14314:	mov	fp, sp
   14318:	sub	sp, sp, #16
   1431c:	mov	ip, #0
   14320:	str	ip, [sp, #12]
   14324:	mov	ip, #1
   14328:	str	ip, [sp, #4]
   1432c:	ldr	ip, [fp, #12]
   14330:	str	ip, [sp, #8]
   14334:	ldr	ip, [fp, #8]
   14338:	str	ip, [sp]
   1433c:	bl	18da8 <argp_failure@@Base+0x2018>
   14340:	mov	sp, fp
   14344:	pop	{fp, pc}

00014348 <_obstack_begin@@Base>:
   14348:	push	{r4, r5, r6, sl, fp, lr}
   1434c:	add	fp, sp, #16
   14350:	cmp	r1, #0
   14354:	mov	r4, r0
   14358:	str	r3, [r0, #28]
   1435c:	mov	r5, r2
   14360:	movweq	r1, #4072	; 0xfe8
   14364:	cmp	r2, #0
   14368:	str	r1, [r0]
   1436c:	ldr	r0, [fp, #8]
   14370:	movweq	r5, #8
   14374:	sub	r6, r5, #1
   14378:	str	r0, [r4, #32]
   1437c:	str	r6, [r4, #24]
   14380:	ldrb	r0, [r4, #40]	; 0x28
   14384:	and	r0, r0, #254	; 0xfe
   14388:	strb	r0, [r4, #40]	; 0x28
   1438c:	mov	r0, r1
   14390:	blx	r3
   14394:	cmp	r0, #0
   14398:	str	r0, [r4, #4]
   1439c:	addne	r1, r6, r0
   143a0:	rsbne	r2, r5, #0
   143a4:	addne	r1, r1, #8
   143a8:	andne	r1, r1, r2
   143ac:	strne	r1, [r4, #12]
   143b0:	strne	r1, [r4, #8]
   143b4:	ldrne	r1, [r4]
   143b8:	addne	r1, r0, r1
   143bc:	strne	r1, [r0]
   143c0:	strne	r1, [r4, #16]
   143c4:	movne	r1, #0
   143c8:	strne	r1, [r0, #4]
   143cc:	ldrbne	r0, [r4, #40]	; 0x28
   143d0:	andne	r0, r0, #249	; 0xf9
   143d4:	strbne	r0, [r4, #40]	; 0x28
   143d8:	movne	r0, #1
   143dc:	popne	{r4, r5, r6, sl, fp, pc}
   143e0:	movw	r0, #2172	; 0x87c
   143e4:	movt	r0, #3
   143e8:	ldr	r0, [r0]
   143ec:	blx	r0

000143f0 <_obstack_begin_1@@Base>:
   143f0:	push	{r4, r5, r6, sl, fp, lr}
   143f4:	add	fp, sp, #16
   143f8:	cmp	r1, #0
   143fc:	mov	r4, r0
   14400:	str	r3, [r0, #28]
   14404:	mov	r5, r2
   14408:	movweq	r1, #4072	; 0xfe8
   1440c:	cmp	r2, #0
   14410:	str	r1, [r0]
   14414:	ldr	r0, [fp, #8]
   14418:	movweq	r5, #8
   1441c:	sub	r6, r5, #1
   14420:	str	r0, [r4, #32]
   14424:	ldr	r0, [fp, #12]
   14428:	str	r0, [r4, #36]	; 0x24
   1442c:	str	r6, [r4, #24]
   14430:	ldrb	r2, [r4, #40]	; 0x28
   14434:	orr	r2, r2, #1
   14438:	strb	r2, [r4, #40]	; 0x28
   1443c:	blx	r3
   14440:	cmp	r0, #0
   14444:	str	r0, [r4, #4]
   14448:	addne	r1, r6, r0
   1444c:	rsbne	r2, r5, #0
   14450:	addne	r1, r1, #8
   14454:	andne	r1, r1, r2
   14458:	strne	r1, [r4, #12]
   1445c:	strne	r1, [r4, #8]
   14460:	ldrne	r1, [r4]
   14464:	addne	r1, r0, r1
   14468:	strne	r1, [r0]
   1446c:	strne	r1, [r4, #16]
   14470:	movne	r1, #0
   14474:	strne	r1, [r0, #4]
   14478:	ldrbne	r0, [r4, #40]	; 0x28
   1447c:	andne	r0, r0, #249	; 0xf9
   14480:	strbne	r0, [r4, #40]	; 0x28
   14484:	movne	r0, #1
   14488:	popne	{r4, r5, r6, sl, fp, pc}
   1448c:	movw	r0, #2172	; 0x87c
   14490:	movt	r0, #3
   14494:	ldr	r0, [r0]
   14498:	blx	r0

0001449c <_obstack_newchunk@@Base>:
   1449c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144a0:	add	fp, sp, #28
   144a4:	sub	sp, sp, #4
   144a8:	mov	r4, r0
   144ac:	ldr	r2, [r0]
   144b0:	ldr	r0, [r0, #8]
   144b4:	ldr	r3, [r4, #12]
   144b8:	sub	r9, r3, r0
   144bc:	ldr	r0, [r4, #24]
   144c0:	mov	r3, #0
   144c4:	add	r1, r9, r1
   144c8:	adds	r6, r1, r0
   144cc:	adc	r0, r3, #0
   144d0:	mov	r3, #100	; 0x64
   144d4:	add	r3, r3, r9, lsr #3
   144d8:	adds	r7, r3, r6
   144dc:	movcs	r7, r6
   144e0:	cmp	r7, r2
   144e4:	movcc	r7, r2
   144e8:	cmp	r1, r9
   144ec:	bcc	145f0 <_obstack_newchunk@@Base+0x154>
   144f0:	cmp	r0, #0
   144f4:	bne	145f0 <_obstack_newchunk@@Base+0x154>
   144f8:	ldrb	r0, [r4, #40]	; 0x28
   144fc:	ldr	r8, [r4, #4]
   14500:	tst	r0, #1
   14504:	bne	14524 <_obstack_newchunk@@Base+0x88>
   14508:	ldr	r1, [r4, #28]
   1450c:	mov	r0, r7
   14510:	blx	r1
   14514:	mov	r6, r0
   14518:	cmp	r0, #0
   1451c:	bne	14540 <_obstack_newchunk@@Base+0xa4>
   14520:	b	145f0 <_obstack_newchunk@@Base+0x154>
   14524:	ldr	r2, [r4, #28]
   14528:	ldr	r0, [r4, #36]	; 0x24
   1452c:	mov	r1, r7
   14530:	blx	r2
   14534:	mov	r6, r0
   14538:	cmp	r0, #0
   1453c:	beq	145f0 <_obstack_newchunk@@Base+0x154>
   14540:	add	r0, r6, r7
   14544:	str	r6, [r4, #4]
   14548:	str	r8, [r6, #4]
   1454c:	mov	r2, r9
   14550:	str	r0, [r4, #16]
   14554:	str	r0, [r6]
   14558:	ldr	r5, [r4, #24]
   1455c:	ldr	sl, [r4, #8]
   14560:	add	r0, r5, r6
   14564:	mov	r1, sl
   14568:	add	r0, r0, #8
   1456c:	bic	r7, r0, r5
   14570:	mov	r0, r7
   14574:	bl	11384 <memcpy@plt>
   14578:	ldrb	r0, [r4, #40]	; 0x28
   1457c:	tst	r0, #2
   14580:	bne	145d0 <_obstack_newchunk@@Base+0x134>
   14584:	add	r1, r5, r8
   14588:	mvn	r0, r5
   1458c:	add	r1, r1, #8
   14590:	and	r0, r1, r0
   14594:	cmp	sl, r0
   14598:	bne	145d0 <_obstack_newchunk@@Base+0x134>
   1459c:	ldr	r0, [r8, #4]
   145a0:	str	r0, [r6, #4]
   145a4:	ldrb	r0, [r4, #40]	; 0x28
   145a8:	tst	r0, #1
   145ac:	bne	145c0 <_obstack_newchunk@@Base+0x124>
   145b0:	ldr	r1, [r4, #32]
   145b4:	mov	r0, r8
   145b8:	blx	r1
   145bc:	b	145d0 <_obstack_newchunk@@Base+0x134>
   145c0:	ldr	r2, [r4, #32]
   145c4:	ldr	r0, [r4, #36]	; 0x24
   145c8:	mov	r1, r8
   145cc:	blx	r2
   145d0:	add	r0, r7, r9
   145d4:	str	r7, [r4, #8]
   145d8:	str	r0, [r4, #12]
   145dc:	ldrb	r0, [r4, #40]	; 0x28
   145e0:	and	r0, r0, #253	; 0xfd
   145e4:	strb	r0, [r4, #40]	; 0x28
   145e8:	sub	sp, fp, #28
   145ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145f0:	movw	r0, #2172	; 0x87c
   145f4:	movt	r0, #3
   145f8:	ldr	r0, [r0]
   145fc:	blx	r0

00014600 <_obstack_allocated_p@@Base>:
   14600:	ldr	r2, [r0, #4]
   14604:	mov	r0, #0
   14608:	cmp	r2, #0
   1460c:	bxeq	lr
   14610:	cmp	r2, r1
   14614:	bcc	1462c <_obstack_allocated_p@@Base+0x2c>
   14618:	ldr	r2, [r2, #4]
   1461c:	cmp	r2, #0
   14620:	bxeq	lr
   14624:	cmp	r2, r1
   14628:	bcs	14618 <_obstack_allocated_p@@Base+0x18>
   1462c:	ldr	r3, [r2]
   14630:	cmp	r3, r1
   14634:	bcc	14618 <_obstack_allocated_p@@Base+0x18>
   14638:	mov	r0, #1
   1463c:	bx	lr

00014640 <_obstack_free@@Base>:
   14640:	push	{r4, r5, r6, sl, fp, lr}
   14644:	add	fp, sp, #16
   14648:	mov	r5, r1
   1464c:	ldr	r1, [r0, #4]
   14650:	cmp	r1, #0
   14654:	beq	146b4 <_obstack_free@@Base+0x74>
   14658:	mov	r4, r0
   1465c:	cmp	r1, r5
   14660:	bcs	14670 <_obstack_free@@Base+0x30>
   14664:	ldr	r0, [r1]
   14668:	cmp	r0, r5
   1466c:	bcs	146c0 <_obstack_free@@Base+0x80>
   14670:	ldrb	r0, [r4, #40]	; 0x28
   14674:	ldr	r6, [r1, #4]
   14678:	tst	r0, #1
   1467c:	bne	14690 <_obstack_free@@Base+0x50>
   14680:	ldr	r2, [r4, #32]
   14684:	mov	r0, r1
   14688:	blx	r2
   1468c:	b	1469c <_obstack_free@@Base+0x5c>
   14690:	ldr	r2, [r4, #32]
   14694:	ldr	r0, [r4, #36]	; 0x24
   14698:	blx	r2
   1469c:	ldrb	r0, [r4, #40]	; 0x28
   146a0:	cmp	r6, #0
   146a4:	mov	r1, r6
   146a8:	orr	r0, r0, #2
   146ac:	strb	r0, [r4, #40]	; 0x28
   146b0:	bne	1465c <_obstack_free@@Base+0x1c>
   146b4:	cmp	r5, #0
   146b8:	popeq	{r4, r5, r6, sl, fp, pc}
   146bc:	bl	115a0 <abort@plt>
   146c0:	str	r5, [r4, #8]
   146c4:	str	r5, [r4, #12]
   146c8:	ldr	r0, [r1]
   146cc:	str	r1, [r4, #4]
   146d0:	str	r0, [r4, #16]
   146d4:	pop	{r4, r5, r6, sl, fp, pc}

000146d8 <_obstack_memory_used@@Base>:
   146d8:	ldr	r1, [r0, #4]
   146dc:	mov	r0, #0
   146e0:	b	146f4 <_obstack_memory_used@@Base+0x1c>
   146e4:	ldr	r2, [r1]
   146e8:	sub	r0, r0, r1
   146ec:	ldr	r1, [r1, #4]
   146f0:	add	r0, r0, r2
   146f4:	cmp	r1, #0
   146f8:	bxeq	lr
   146fc:	b	146e4 <_obstack_memory_used@@Base+0xc>
   14700:	push	{fp, lr}
   14704:	mov	fp, sp
   14708:	movw	r0, #2248	; 0x8c8
   1470c:	movw	r1, #50388	; 0xc4d4
   14710:	movw	r2, #50295	; 0xc477
   14714:	movt	r0, #3
   14718:	movt	r1, #1
   1471c:	movt	r2, #1
   14720:	ldr	r0, [r0]
   14724:	bl	1148c <fprintf@plt>
   14728:	movw	r0, #2216	; 0x8a8
   1472c:	movt	r0, #3
   14730:	ldr	r0, [r0]
   14734:	bl	11468 <exit@plt>
   14738:	push	{r4, r5, fp, lr}
   1473c:	add	fp, sp, #8
   14740:	cmp	r0, #0
   14744:	beq	147d8 <_obstack_memory_used@@Base+0x100>
   14748:	mov	r1, #47	; 0x2f
   1474c:	mov	r4, r0
   14750:	bl	114ec <strrchr@plt>
   14754:	cmp	r0, #0
   14758:	mov	r5, r4
   1475c:	addne	r5, r0, #1
   14760:	sub	r0, r5, r4
   14764:	cmp	r0, #7
   14768:	blt	147bc <_obstack_memory_used@@Base+0xe4>
   1476c:	movw	r1, #50368	; 0xc4c0
   14770:	sub	r0, r5, #7
   14774:	mov	r2, #7
   14778:	movt	r1, #1
   1477c:	bl	11594 <strncmp@plt>
   14780:	cmp	r0, #0
   14784:	bne	147bc <_obstack_memory_used@@Base+0xe4>
   14788:	movw	r1, #50376	; 0xc4c8
   1478c:	mov	r0, r5
   14790:	mov	r2, #3
   14794:	movt	r1, #1
   14798:	bl	11594 <strncmp@plt>
   1479c:	cmp	r0, #0
   147a0:	beq	147ac <_obstack_memory_used@@Base+0xd4>
   147a4:	mov	r4, r5
   147a8:	b	147bc <_obstack_memory_used@@Base+0xe4>
   147ac:	movw	r0, #2240	; 0x8c0
   147b0:	add	r4, r5, #3
   147b4:	movt	r0, #3
   147b8:	str	r4, [r0]
   147bc:	movw	r0, #2244	; 0x8c4
   147c0:	movt	r0, #3
   147c4:	str	r4, [r0]
   147c8:	movw	r0, #2276	; 0x8e4
   147cc:	movt	r0, #3
   147d0:	str	r4, [r0]
   147d4:	pop	{r4, r5, fp, pc}
   147d8:	movw	r0, #2248	; 0x8c8
   147dc:	mov	r1, #55	; 0x37
   147e0:	mov	r2, #1
   147e4:	movt	r0, #3
   147e8:	ldr	r3, [r0]
   147ec:	movw	r0, #50312	; 0xc488
   147f0:	movt	r0, #1
   147f4:	bl	113d8 <fwrite@plt>
   147f8:	bl	115a0 <abort@plt>
   147fc:	push	{r4, r5, r6, r7, fp, lr}
   14800:	add	fp, sp, #16
   14804:	sub	sp, sp, #32
   14808:	ldr	r7, [fp, #12]
   1480c:	ldr	r6, [fp, #8]
   14810:	mov	r4, r2
   14814:	mov	r5, r0
   14818:	cmp	r1, #0
   1481c:	beq	1483c <_obstack_memory_used@@Base+0x164>
   14820:	mov	r2, r1
   14824:	movw	r1, #50380	; 0xc4cc
   14828:	str	r3, [sp]
   1482c:	mov	r0, r5
   14830:	mov	r3, r4
   14834:	movt	r1, #1
   14838:	b	1484c <_obstack_memory_used@@Base+0x174>
   1483c:	movw	r1, #50392	; 0xc4d8
   14840:	mov	r0, r5
   14844:	mov	r2, r4
   14848:	movt	r1, #1
   1484c:	bl	1148c <fprintf@plt>
   14850:	movw	r1, #51156	; 0xc7d4
   14854:	movw	r2, #50399	; 0xc4df
   14858:	mov	r0, r5
   1485c:	movw	r3, #2022	; 0x7e6
   14860:	movt	r1, #1
   14864:	movt	r2, #1
   14868:	bl	1148c <fprintf@plt>
   1486c:	mov	r0, #10
   14870:	mov	r1, r5
   14874:	bl	11504 <fputc@plt>
   14878:	movw	r1, #50403	; 0xc4e3
   1487c:	movw	r2, #50574	; 0xc58e
   14880:	mov	r0, r5
   14884:	movt	r1, #1
   14888:	movt	r2, #1
   1488c:	bl	1148c <fprintf@plt>
   14890:	mov	r0, #10
   14894:	mov	r1, r5
   14898:	bl	11504 <fputc@plt>
   1489c:	cmp	r7, #9
   148a0:	bhi	148dc <_obstack_memory_used@@Base+0x204>
   148a4:	add	r0, pc, #0
   148a8:	ldr	pc, [r0, r7, lsl #2]
   148ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148b0:	andeq	r4, r1, ip, lsl r9
   148b4:	andeq	r4, r1, r8, lsr r9
   148b8:	andeq	r4, r1, r4, asr r9
   148bc:	andeq	r4, r1, r8, ror r9
   148c0:	andeq	r4, r1, r0, lsr #19
   148c4:	andeq	r4, r1, r8, asr #19
   148c8:	strdeq	r4, [r1], -r8
   148cc:	andeq	r4, r1, r0, ror sl
   148d0:	andeq	r4, r1, r0, lsr sl
   148d4:	sub	sp, fp, #16
   148d8:	pop	{r4, r5, r6, r7, fp, pc}
   148dc:	add	r7, r6, #8
   148e0:	ldm	r6, {r2, r3}
   148e4:	add	lr, r6, #20
   148e8:	ldm	r7, {r0, r1, r7}
   148ec:	ldm	lr, {r4, ip, lr}
   148f0:	ldr	r6, [r6, #32]
   148f4:	stm	sp, {r0, r1, r7}
   148f8:	movw	r1, #50927	; 0xc6ef
   148fc:	add	r0, sp, #12
   14900:	stm	r0, {r4, ip, lr}
   14904:	str	r6, [sp, #24]
   14908:	movt	r1, #1
   1490c:	mov	r0, r5
   14910:	bl	1148c <fprintf@plt>
   14914:	sub	sp, fp, #16
   14918:	pop	{r4, r5, r6, r7, fp, pc}
   1491c:	ldr	r2, [r6]
   14920:	movw	r1, #50608	; 0xc5b0
   14924:	mov	r0, r5
   14928:	movt	r1, #1
   1492c:	sub	sp, fp, #16
   14930:	pop	{r4, r5, r6, r7, fp, lr}
   14934:	b	1148c <fprintf@plt>
   14938:	ldm	r6, {r2, r3}
   1493c:	movw	r1, #50624	; 0xc5c0
   14940:	mov	r0, r5
   14944:	movt	r1, #1
   14948:	sub	sp, fp, #16
   1494c:	pop	{r4, r5, r6, r7, fp, lr}
   14950:	b	1148c <fprintf@plt>
   14954:	ldm	r6, {r2, r3}
   14958:	ldr	r0, [r6, #8]
   1495c:	movw	r1, #50647	; 0xc5d7
   14960:	movt	r1, #1
   14964:	str	r0, [sp]
   14968:	mov	r0, r5
   1496c:	bl	1148c <fprintf@plt>
   14970:	sub	sp, fp, #16
   14974:	pop	{r4, r5, r6, r7, fp, pc}
   14978:	ldm	r6, {r2, r3}
   1497c:	ldr	r0, [r6, #8]
   14980:	ldr	r1, [r6, #12]
   14984:	stm	sp, {r0, r1}
   14988:	movw	r1, #50675	; 0xc5f3
   1498c:	movt	r1, #1
   14990:	mov	r0, r5
   14994:	bl	1148c <fprintf@plt>
   14998:	sub	sp, fp, #16
   1499c:	pop	{r4, r5, r6, r7, fp, pc}
   149a0:	add	r7, r6, #8
   149a4:	ldm	r6, {r2, r3}
   149a8:	ldm	r7, {r0, r1, r7}
   149ac:	stm	sp, {r0, r1, r7}
   149b0:	movw	r1, #50707	; 0xc613
   149b4:	movt	r1, #1
   149b8:	mov	r0, r5
   149bc:	bl	1148c <fprintf@plt>
   149c0:	sub	sp, fp, #16
   149c4:	pop	{r4, r5, r6, r7, fp, pc}
   149c8:	add	r7, r6, #8
   149cc:	ldm	r6, {r2, r3}
   149d0:	ldm	r7, {r0, r1, r7}
   149d4:	ldr	r6, [r6, #20]
   149d8:	stm	sp, {r0, r1, r7}
   149dc:	movw	r1, #50743	; 0xc637
   149e0:	str	r6, [sp, #12]
   149e4:	movt	r1, #1
   149e8:	mov	r0, r5
   149ec:	bl	1148c <fprintf@plt>
   149f0:	sub	sp, fp, #16
   149f4:	pop	{r4, r5, r6, r7, fp, pc}
   149f8:	add	r7, r6, #8
   149fc:	ldm	r6, {r2, r3}
   14a00:	ldm	r7, {r0, r1, r7}
   14a04:	ldr	r4, [r6, #20]
   14a08:	ldr	r6, [r6, #24]
   14a0c:	stm	sp, {r0, r1, r7}
   14a10:	movw	r1, #50783	; 0xc65f
   14a14:	str	r4, [sp, #12]
   14a18:	str	r6, [sp, #16]
   14a1c:	movt	r1, #1
   14a20:	mov	r0, r5
   14a24:	bl	1148c <fprintf@plt>
   14a28:	sub	sp, fp, #16
   14a2c:	pop	{r4, r5, r6, r7, fp, pc}
   14a30:	add	r7, r6, #8
   14a34:	ldm	r6, {r2, r3}
   14a38:	add	lr, r6, #20
   14a3c:	ldm	r7, {r0, r1, r7}
   14a40:	ldm	lr, {r4, ip, lr}
   14a44:	ldr	r6, [r6, #32]
   14a48:	stm	sp, {r0, r1, r7}
   14a4c:	movw	r1, #50875	; 0xc6bb
   14a50:	add	r0, sp, #12
   14a54:	stm	r0, {r4, ip, lr}
   14a58:	str	r6, [sp, #24]
   14a5c:	movt	r1, #1
   14a60:	mov	r0, r5
   14a64:	bl	1148c <fprintf@plt>
   14a68:	sub	sp, fp, #16
   14a6c:	pop	{r4, r5, r6, r7, fp, pc}
   14a70:	add	r7, r6, #8
   14a74:	ldm	r6, {r2, r3}
   14a78:	ldm	r7, {r0, r1, r7}
   14a7c:	ldr	r4, [r6, #20]
   14a80:	ldr	ip, [r6, #24]
   14a84:	ldr	r6, [r6, #28]
   14a88:	stm	sp, {r0, r1, r7}
   14a8c:	movw	r1, #50827	; 0xc68b
   14a90:	str	r4, [sp, #12]
   14a94:	str	ip, [sp, #16]
   14a98:	str	r6, [sp, #20]
   14a9c:	movt	r1, #1
   14aa0:	mov	r0, r5
   14aa4:	bl	1148c <fprintf@plt>
   14aa8:	sub	sp, fp, #16
   14aac:	pop	{r4, r5, r6, r7, fp, pc}
   14ab0:	push	{r4, sl, fp, lr}
   14ab4:	add	fp, sp, #8
   14ab8:	sub	sp, sp, #8
   14abc:	ldr	ip, [fp, #8]
   14ac0:	mov	lr, #0
   14ac4:	ldr	r4, [ip, lr, lsl #2]
   14ac8:	add	lr, lr, #1
   14acc:	cmp	r4, #0
   14ad0:	bne	14ac4 <_obstack_memory_used@@Base+0x3ec>
   14ad4:	sub	r4, lr, #1
   14ad8:	str	ip, [sp]
   14adc:	str	r4, [sp, #4]
   14ae0:	bl	147fc <_obstack_memory_used@@Base+0x124>
   14ae4:	sub	sp, fp, #8
   14ae8:	pop	{r4, sl, fp, pc}
   14aec:	push	{fp, lr}
   14af0:	mov	fp, sp
   14af4:	sub	sp, sp, #48	; 0x30
   14af8:	ldr	ip, [fp, #8]
   14afc:	ldr	lr, [ip]
   14b00:	cmp	lr, #0
   14b04:	str	lr, [sp, #8]
   14b08:	beq	14ba4 <_obstack_memory_used@@Base+0x4cc>
   14b0c:	ldr	lr, [ip, #4]
   14b10:	cmp	lr, #0
   14b14:	str	lr, [sp, #12]
   14b18:	beq	14bac <_obstack_memory_used@@Base+0x4d4>
   14b1c:	ldr	lr, [ip, #8]
   14b20:	cmp	lr, #0
   14b24:	str	lr, [sp, #16]
   14b28:	beq	14bb4 <_obstack_memory_used@@Base+0x4dc>
   14b2c:	ldr	lr, [ip, #12]
   14b30:	cmp	lr, #0
   14b34:	str	lr, [sp, #20]
   14b38:	beq	14bbc <_obstack_memory_used@@Base+0x4e4>
   14b3c:	ldr	lr, [ip, #16]
   14b40:	cmp	lr, #0
   14b44:	str	lr, [sp, #24]
   14b48:	beq	14bc4 <_obstack_memory_used@@Base+0x4ec>
   14b4c:	ldr	lr, [ip, #20]
   14b50:	cmp	lr, #0
   14b54:	str	lr, [sp, #28]
   14b58:	beq	14bcc <_obstack_memory_used@@Base+0x4f4>
   14b5c:	ldr	lr, [ip, #24]
   14b60:	cmp	lr, #0
   14b64:	str	lr, [sp, #32]
   14b68:	beq	14bd4 <_obstack_memory_used@@Base+0x4fc>
   14b6c:	ldr	lr, [ip, #28]
   14b70:	cmp	lr, #0
   14b74:	str	lr, [sp, #36]	; 0x24
   14b78:	beq	14bdc <_obstack_memory_used@@Base+0x504>
   14b7c:	ldr	lr, [ip, #32]
   14b80:	cmp	lr, #0
   14b84:	str	lr, [sp, #40]	; 0x28
   14b88:	beq	14be4 <_obstack_memory_used@@Base+0x50c>
   14b8c:	ldr	lr, [ip, #36]	; 0x24
   14b90:	mov	ip, #10
   14b94:	cmp	lr, #0
   14b98:	str	lr, [sp, #44]	; 0x2c
   14b9c:	movweq	ip, #9
   14ba0:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14ba4:	mov	ip, #0
   14ba8:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bac:	mov	ip, #1
   14bb0:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bb4:	mov	ip, #2
   14bb8:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bbc:	mov	ip, #3
   14bc0:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bc4:	mov	ip, #4
   14bc8:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bcc:	mov	ip, #5
   14bd0:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bd4:	mov	ip, #6
   14bd8:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14bdc:	mov	ip, #7
   14be0:	b	14be8 <_obstack_memory_used@@Base+0x510>
   14be4:	mov	ip, #8
   14be8:	add	lr, sp, #8
   14bec:	str	ip, [sp, #4]
   14bf0:	str	lr, [sp]
   14bf4:	bl	147fc <_obstack_memory_used@@Base+0x124>
   14bf8:	mov	sp, fp
   14bfc:	pop	{fp, pc}
   14c00:	push	{fp, lr}
   14c04:	mov	fp, sp
   14c08:	sub	sp, sp, #56	; 0x38
   14c0c:	add	ip, fp, #8
   14c10:	str	ip, [sp, #12]
   14c14:	ldr	lr, [fp, #8]
   14c18:	cmp	lr, #0
   14c1c:	str	lr, [sp, #16]
   14c20:	beq	14cbc <_obstack_memory_used@@Base+0x5e4>
   14c24:	ldr	lr, [ip, #4]
   14c28:	cmp	lr, #0
   14c2c:	str	lr, [sp, #20]
   14c30:	beq	14cc4 <_obstack_memory_used@@Base+0x5ec>
   14c34:	ldr	lr, [ip, #8]
   14c38:	cmp	lr, #0
   14c3c:	str	lr, [sp, #24]
   14c40:	beq	14ccc <_obstack_memory_used@@Base+0x5f4>
   14c44:	ldr	lr, [ip, #12]
   14c48:	cmp	lr, #0
   14c4c:	str	lr, [sp, #28]
   14c50:	beq	14cd4 <_obstack_memory_used@@Base+0x5fc>
   14c54:	ldr	lr, [ip, #16]
   14c58:	cmp	lr, #0
   14c5c:	str	lr, [sp, #32]
   14c60:	beq	14cdc <_obstack_memory_used@@Base+0x604>
   14c64:	ldr	lr, [ip, #20]
   14c68:	cmp	lr, #0
   14c6c:	str	lr, [sp, #36]	; 0x24
   14c70:	beq	14ce4 <_obstack_memory_used@@Base+0x60c>
   14c74:	ldr	lr, [ip, #24]
   14c78:	cmp	lr, #0
   14c7c:	str	lr, [sp, #40]	; 0x28
   14c80:	beq	14cec <_obstack_memory_used@@Base+0x614>
   14c84:	ldr	lr, [ip, #28]
   14c88:	cmp	lr, #0
   14c8c:	str	lr, [sp, #44]	; 0x2c
   14c90:	beq	14cf4 <_obstack_memory_used@@Base+0x61c>
   14c94:	ldr	lr, [ip, #32]
   14c98:	cmp	lr, #0
   14c9c:	str	lr, [sp, #48]	; 0x30
   14ca0:	beq	14cfc <_obstack_memory_used@@Base+0x624>
   14ca4:	ldr	lr, [ip, #36]	; 0x24
   14ca8:	mov	ip, #10
   14cac:	cmp	lr, #0
   14cb0:	str	lr, [sp, #52]	; 0x34
   14cb4:	movweq	ip, #9
   14cb8:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cbc:	mov	ip, #0
   14cc0:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cc4:	mov	ip, #1
   14cc8:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14ccc:	mov	ip, #2
   14cd0:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cd4:	mov	ip, #3
   14cd8:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cdc:	mov	ip, #4
   14ce0:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14ce4:	mov	ip, #5
   14ce8:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cec:	mov	ip, #6
   14cf0:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cf4:	mov	ip, #7
   14cf8:	b	14d00 <_obstack_memory_used@@Base+0x628>
   14cfc:	mov	ip, #8
   14d00:	add	lr, sp, #16
   14d04:	str	ip, [sp, #4]
   14d08:	str	lr, [sp]
   14d0c:	bl	147fc <_obstack_memory_used@@Base+0x124>
   14d10:	mov	sp, fp
   14d14:	pop	{fp, pc}
   14d18:	push	{fp, lr}
   14d1c:	mov	fp, sp
   14d20:	movw	r0, #2252	; 0x8cc
   14d24:	movt	r0, #3
   14d28:	ldr	r1, [r0]
   14d2c:	mov	r0, #10
   14d30:	bl	11504 <fputc@plt>
   14d34:	movw	r0, #50987	; 0xc72b
   14d38:	movw	r1, #51007	; 0xc73f
   14d3c:	movt	r0, #1
   14d40:	movt	r1, #1
   14d44:	bl	11324 <printf@plt>
   14d48:	movw	r0, #51029	; 0xc755
   14d4c:	movw	r1, #50268	; 0xc45c
   14d50:	movw	r2, #51049	; 0xc769
   14d54:	movt	r0, #1
   14d58:	movt	r1, #1
   14d5c:	movt	r2, #1
   14d60:	bl	11324 <printf@plt>
   14d64:	movw	r0, #51088	; 0xc790
   14d68:	movw	r1, #51127	; 0xc7b7
   14d6c:	movt	r0, #1
   14d70:	movt	r1, #1
   14d74:	pop	{fp, lr}
   14d78:	b	11324 <printf@plt>
   14d7c:	push	{r4, r5, r6, sl, fp, lr}
   14d80:	add	fp, sp, #16
   14d84:	mov	r4, r2
   14d88:	mov	r5, r1
   14d8c:	mov	r6, r0
   14d90:	bl	1a010 <argp_failure@@Base+0x3280>
   14d94:	cmp	r0, #0
   14d98:	popne	{r4, r5, r6, sl, fp, pc}
   14d9c:	cmp	r6, #0
   14da0:	beq	14db4 <_obstack_memory_used@@Base+0x6dc>
   14da4:	cmp	r5, #0
   14da8:	cmpne	r4, #0
   14dac:	bne	14db4 <_obstack_memory_used@@Base+0x6dc>
   14db0:	pop	{r4, r5, r6, sl, fp, pc}
   14db4:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14db8:	push	{r4, r5, r6, sl, fp, lr}
   14dbc:	add	fp, sp, #16
   14dc0:	mov	r4, r2
   14dc4:	mov	r5, r1
   14dc8:	mov	r6, r0
   14dcc:	bl	1a010 <argp_failure@@Base+0x3280>
   14dd0:	cmp	r0, #0
   14dd4:	popne	{r4, r5, r6, sl, fp, pc}
   14dd8:	cmp	r6, #0
   14ddc:	beq	14df0 <_obstack_memory_used@@Base+0x718>
   14de0:	cmp	r5, #0
   14de4:	cmpne	r4, #0
   14de8:	bne	14df0 <_obstack_memory_used@@Base+0x718>
   14dec:	pop	{r4, r5, r6, sl, fp, pc}
   14df0:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14df4:	push	{fp, lr}
   14df8:	mov	fp, sp
   14dfc:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   14e00:	cmp	r0, #0
   14e04:	popne	{fp, pc}
   14e08:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14e0c:	push	{fp, lr}
   14e10:	mov	fp, sp
   14e14:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   14e18:	cmp	r0, #0
   14e1c:	popne	{fp, pc}
   14e20:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14e24:	push	{fp, lr}
   14e28:	mov	fp, sp
   14e2c:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   14e30:	cmp	r0, #0
   14e34:	popne	{fp, pc}
   14e38:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14e3c:	push	{r4, r5, fp, lr}
   14e40:	add	fp, sp, #8
   14e44:	mov	r4, r1
   14e48:	mov	r5, r0
   14e4c:	bl	15408 <_obstack_memory_used@@Base+0xd30>
   14e50:	cmp	r0, #0
   14e54:	popne	{r4, r5, fp, pc}
   14e58:	cmp	r5, #0
   14e5c:	beq	14e6c <_obstack_memory_used@@Base+0x794>
   14e60:	cmp	r4, #0
   14e64:	bne	14e6c <_obstack_memory_used@@Base+0x794>
   14e68:	pop	{r4, r5, fp, pc}
   14e6c:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14e70:	push	{fp, lr}
   14e74:	mov	fp, sp
   14e78:	cmp	r1, #0
   14e7c:	orreq	r1, r1, #1
   14e80:	bl	15408 <_obstack_memory_used@@Base+0xd30>
   14e84:	cmp	r0, #0
   14e88:	popne	{fp, pc}
   14e8c:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14e90:	push	{fp, lr}
   14e94:	mov	fp, sp
   14e98:	clz	r3, r2
   14e9c:	lsr	ip, r3, #5
   14ea0:	clz	r3, r1
   14ea4:	lsr	r3, r3, #5
   14ea8:	orrs	r3, r3, ip
   14eac:	movwne	r1, #1
   14eb0:	movwne	r2, #1
   14eb4:	bl	1a010 <argp_failure@@Base+0x3280>
   14eb8:	cmp	r0, #0
   14ebc:	popne	{fp, pc}
   14ec0:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14ec4:	push	{fp, lr}
   14ec8:	mov	fp, sp
   14ecc:	mov	r2, r1
   14ed0:	mov	r1, r0
   14ed4:	mov	r0, #0
   14ed8:	bl	1a010 <argp_failure@@Base+0x3280>
   14edc:	cmp	r0, #0
   14ee0:	popne	{fp, pc}
   14ee4:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14ee8:	push	{fp, lr}
   14eec:	mov	fp, sp
   14ef0:	mov	r2, r1
   14ef4:	mov	r1, r0
   14ef8:	clz	r0, r2
   14efc:	clz	r3, r1
   14f00:	lsr	r0, r0, #5
   14f04:	lsr	r3, r3, #5
   14f08:	orrs	r0, r3, r0
   14f0c:	movwne	r1, #1
   14f10:	movwne	r2, #1
   14f14:	mov	r0, #0
   14f18:	bl	1a010 <argp_failure@@Base+0x3280>
   14f1c:	cmp	r0, #0
   14f20:	popne	{fp, pc}
   14f24:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14f28:	push	{r4, r5, r6, sl, fp, lr}
   14f2c:	add	fp, sp, #16
   14f30:	ldr	r5, [r1]
   14f34:	mov	r4, r1
   14f38:	mov	r6, r0
   14f3c:	cmp	r0, #0
   14f40:	beq	14f58 <_obstack_memory_used@@Base+0x880>
   14f44:	mov	r0, #1
   14f48:	add	r0, r0, r5, lsr #1
   14f4c:	adds	r5, r5, r0
   14f50:	bcc	14f60 <_obstack_memory_used@@Base+0x888>
   14f54:	b	14f9c <_obstack_memory_used@@Base+0x8c4>
   14f58:	cmp	r5, #0
   14f5c:	movweq	r5, #64	; 0x40
   14f60:	mov	r0, r6
   14f64:	mov	r1, r5
   14f68:	mov	r2, #1
   14f6c:	bl	1a010 <argp_failure@@Base+0x3280>
   14f70:	cmp	r5, #0
   14f74:	mov	r1, r5
   14f78:	movwne	r1, #1
   14f7c:	cmp	r0, #0
   14f80:	bne	14f94 <_obstack_memory_used@@Base+0x8bc>
   14f84:	clz	r2, r6
   14f88:	lsr	r2, r2, #5
   14f8c:	orrs	r1, r2, r1
   14f90:	bne	14f9c <_obstack_memory_used@@Base+0x8c4>
   14f94:	str	r5, [r4]
   14f98:	pop	{r4, r5, r6, sl, fp, pc}
   14f9c:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   14fa0:	push	{r4, r5, r6, r7, fp, lr}
   14fa4:	add	fp, sp, #16
   14fa8:	ldr	r5, [r1]
   14fac:	mov	r6, r2
   14fb0:	mov	r4, r1
   14fb4:	mov	r7, r0
   14fb8:	cmp	r0, #0
   14fbc:	beq	14fd4 <_obstack_memory_used@@Base+0x8fc>
   14fc0:	mov	r0, #1
   14fc4:	add	r0, r0, r5, lsr #1
   14fc8:	adds	r5, r5, r0
   14fcc:	bcc	14fec <_obstack_memory_used@@Base+0x914>
   14fd0:	b	15020 <_obstack_memory_used@@Base+0x948>
   14fd4:	cmp	r5, #0
   14fd8:	bne	14fec <_obstack_memory_used@@Base+0x914>
   14fdc:	mov	r0, #64	; 0x40
   14fe0:	cmp	r6, #64	; 0x40
   14fe4:	udiv	r5, r0, r6
   14fe8:	addhi	r5, r5, #1
   14fec:	mov	r0, r7
   14ff0:	mov	r1, r5
   14ff4:	mov	r2, r6
   14ff8:	bl	1a010 <argp_failure@@Base+0x3280>
   14ffc:	cmp	r0, #0
   15000:	bne	15018 <_obstack_memory_used@@Base+0x940>
   15004:	cmp	r7, #0
   15008:	beq	15020 <_obstack_memory_used@@Base+0x948>
   1500c:	cmp	r6, #0
   15010:	cmpne	r5, #0
   15014:	bne	15020 <_obstack_memory_used@@Base+0x948>
   15018:	str	r5, [r4]
   1501c:	pop	{r4, r5, r6, r7, fp, pc}
   15020:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15024:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15028:	add	fp, sp, #24
   1502c:	mov	r8, r1
   15030:	ldr	r1, [r1]
   15034:	mov	r5, r0
   15038:	add	r0, r1, r1, asr #1
   1503c:	cmp	r0, r1
   15040:	mvnvs	r0, #-2147483648	; 0x80000000
   15044:	cmp	r0, r3
   15048:	mov	r7, r0
   1504c:	movgt	r7, r3
   15050:	cmn	r3, #1
   15054:	movle	r7, r0
   15058:	ldr	r0, [fp, #8]
   1505c:	cmn	r0, #1
   15060:	ble	15088 <_obstack_memory_used@@Base+0x9b0>
   15064:	cmp	r0, #0
   15068:	beq	150dc <_obstack_memory_used@@Base+0xa04>
   1506c:	cmn	r7, #1
   15070:	ble	150b0 <_obstack_memory_used@@Base+0x9d8>
   15074:	mvn	r4, #-2147483648	; 0x80000000
   15078:	udiv	r6, r4, r0
   1507c:	cmp	r6, r7
   15080:	bge	150dc <_obstack_memory_used@@Base+0xa04>
   15084:	b	150ec <_obstack_memory_used@@Base+0xa14>
   15088:	cmn	r7, #1
   1508c:	ble	150cc <_obstack_memory_used@@Base+0x9f4>
   15090:	cmn	r0, #1
   15094:	beq	150dc <_obstack_memory_used@@Base+0xa04>
   15098:	mov	r6, #-2147483648	; 0x80000000
   1509c:	mvn	r4, #-2147483648	; 0x80000000
   150a0:	sdiv	r6, r6, r0
   150a4:	cmp	r6, r7
   150a8:	bge	150dc <_obstack_memory_used@@Base+0xa04>
   150ac:	b	150ec <_obstack_memory_used@@Base+0xa14>
   150b0:	beq	150dc <_obstack_memory_used@@Base+0xa04>
   150b4:	mov	r6, #-2147483648	; 0x80000000
   150b8:	mvn	r4, #-2147483648	; 0x80000000
   150bc:	sdiv	r6, r6, r7
   150c0:	cmp	r6, r0
   150c4:	bge	150dc <_obstack_memory_used@@Base+0xa04>
   150c8:	b	150ec <_obstack_memory_used@@Base+0xa14>
   150cc:	mvn	r4, #-2147483648	; 0x80000000
   150d0:	sdiv	r6, r4, r0
   150d4:	cmp	r7, r6
   150d8:	blt	150ec <_obstack_memory_used@@Base+0xa14>
   150dc:	mul	r6, r7, r0
   150e0:	mov	r4, #64	; 0x40
   150e4:	cmp	r6, #63	; 0x3f
   150e8:	bgt	150f4 <_obstack_memory_used@@Base+0xa1c>
   150ec:	sdiv	r7, r4, r0
   150f0:	mul	r6, r7, r0
   150f4:	cmp	r5, #0
   150f8:	moveq	r4, #0
   150fc:	streq	r4, [r8]
   15100:	sub	r4, r7, r1
   15104:	cmp	r4, r2
   15108:	bge	151b4 <_obstack_memory_used@@Base+0xadc>
   1510c:	add	r7, r1, r2
   15110:	mov	r6, #0
   15114:	mov	r2, #0
   15118:	cmp	r7, r3
   1511c:	movwgt	r6, #1
   15120:	cmn	r3, #1
   15124:	movwgt	r2, #1
   15128:	cmp	r7, r1
   1512c:	bvs	151e8 <_obstack_memory_used@@Base+0xb10>
   15130:	ands	r1, r2, r6
   15134:	bne	151e8 <_obstack_memory_used@@Base+0xb10>
   15138:	cmn	r0, #1
   1513c:	ble	15164 <_obstack_memory_used@@Base+0xa8c>
   15140:	cmp	r0, #0
   15144:	beq	151b0 <_obstack_memory_used@@Base+0xad8>
   15148:	cmn	r7, #1
   1514c:	ble	15188 <_obstack_memory_used@@Base+0xab0>
   15150:	mvn	r1, #-2147483648	; 0x80000000
   15154:	udiv	r1, r1, r0
   15158:	cmp	r1, r7
   1515c:	bge	151b0 <_obstack_memory_used@@Base+0xad8>
   15160:	b	151e8 <_obstack_memory_used@@Base+0xb10>
   15164:	cmn	r7, #1
   15168:	ble	151a0 <_obstack_memory_used@@Base+0xac8>
   1516c:	cmn	r0, #1
   15170:	beq	151b0 <_obstack_memory_used@@Base+0xad8>
   15174:	mov	r1, #-2147483648	; 0x80000000
   15178:	sdiv	r1, r1, r0
   1517c:	cmp	r1, r7
   15180:	bge	151b0 <_obstack_memory_used@@Base+0xad8>
   15184:	b	151e8 <_obstack_memory_used@@Base+0xb10>
   15188:	beq	151b0 <_obstack_memory_used@@Base+0xad8>
   1518c:	mov	r1, #-2147483648	; 0x80000000
   15190:	sdiv	r1, r1, r7
   15194:	cmp	r1, r0
   15198:	bge	151b0 <_obstack_memory_used@@Base+0xad8>
   1519c:	b	151e8 <_obstack_memory_used@@Base+0xb10>
   151a0:	mvn	r1, #-2147483648	; 0x80000000
   151a4:	sdiv	r1, r1, r0
   151a8:	cmp	r7, r1
   151ac:	blt	151e8 <_obstack_memory_used@@Base+0xb10>
   151b0:	mul	r6, r7, r0
   151b4:	mov	r0, r5
   151b8:	mov	r1, r6
   151bc:	bl	15408 <_obstack_memory_used@@Base+0xd30>
   151c0:	cmp	r6, #0
   151c4:	movwne	r6, #1
   151c8:	cmp	r0, #0
   151cc:	bne	151e0 <_obstack_memory_used@@Base+0xb08>
   151d0:	clz	r1, r5
   151d4:	lsr	r1, r1, #5
   151d8:	orrs	r1, r1, r6
   151dc:	bne	151e8 <_obstack_memory_used@@Base+0xb10>
   151e0:	str	r7, [r8]
   151e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151e8:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   151ec:	push	{fp, lr}
   151f0:	mov	fp, sp
   151f4:	mov	r1, #1
   151f8:	bl	15384 <_obstack_memory_used@@Base+0xcac>
   151fc:	cmp	r0, #0
   15200:	popne	{fp, pc}
   15204:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15208:	push	{fp, lr}
   1520c:	mov	fp, sp
   15210:	bl	15384 <_obstack_memory_used@@Base+0xcac>
   15214:	cmp	r0, #0
   15218:	popne	{fp, pc}
   1521c:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15220:	push	{fp, lr}
   15224:	mov	fp, sp
   15228:	mov	r1, #1
   1522c:	bl	15384 <_obstack_memory_used@@Base+0xcac>
   15230:	cmp	r0, #0
   15234:	popne	{fp, pc}
   15238:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   1523c:	push	{fp, lr}
   15240:	mov	fp, sp
   15244:	bl	15384 <_obstack_memory_used@@Base+0xcac>
   15248:	cmp	r0, #0
   1524c:	popne	{fp, pc}
   15250:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15254:	push	{r4, r5, r6, sl, fp, lr}
   15258:	add	fp, sp, #16
   1525c:	mov	r5, r0
   15260:	mov	r0, r1
   15264:	mov	r4, r1
   15268:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   1526c:	cmp	r0, #0
   15270:	beq	1528c <_obstack_memory_used@@Base+0xbb4>
   15274:	mov	r1, r5
   15278:	mov	r2, r4
   1527c:	mov	r6, r0
   15280:	bl	11384 <memcpy@plt>
   15284:	mov	r0, r6
   15288:	pop	{r4, r5, r6, sl, fp, pc}
   1528c:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15290:	push	{r4, r5, r6, sl, fp, lr}
   15294:	add	fp, sp, #16
   15298:	mov	r5, r0
   1529c:	mov	r0, r1
   152a0:	mov	r4, r1
   152a4:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   152a8:	cmp	r0, #0
   152ac:	beq	152c8 <_obstack_memory_used@@Base+0xbf0>
   152b0:	mov	r1, r5
   152b4:	mov	r2, r4
   152b8:	mov	r6, r0
   152bc:	bl	11384 <memcpy@plt>
   152c0:	mov	r0, r6
   152c4:	pop	{r4, r5, r6, sl, fp, pc}
   152c8:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   152cc:	push	{r4, r5, r6, sl, fp, lr}
   152d0:	add	fp, sp, #16
   152d4:	mov	r5, r0
   152d8:	add	r0, r1, #1
   152dc:	mov	r4, r1
   152e0:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   152e4:	cmp	r0, #0
   152e8:	beq	15310 <_obstack_memory_used@@Base+0xc38>
   152ec:	mov	r6, r0
   152f0:	mov	r0, #0
   152f4:	mov	r1, r5
   152f8:	mov	r2, r4
   152fc:	strb	r0, [r6, r4]
   15300:	mov	r0, r6
   15304:	bl	11384 <memcpy@plt>
   15308:	mov	r0, r6
   1530c:	pop	{r4, r5, r6, sl, fp, pc}
   15310:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15314:	push	{r4, r5, r6, sl, fp, lr}
   15318:	add	fp, sp, #16
   1531c:	mov	r4, r0
   15320:	bl	11474 <strlen@plt>
   15324:	add	r5, r0, #1
   15328:	mov	r0, r5
   1532c:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   15330:	cmp	r0, #0
   15334:	beq	15350 <_obstack_memory_used@@Base+0xc78>
   15338:	mov	r1, r4
   1533c:	mov	r2, r5
   15340:	mov	r6, r0
   15344:	bl	11384 <memcpy@plt>
   15348:	mov	r0, r6
   1534c:	pop	{r4, r5, r6, sl, fp, pc}
   15350:	bl	15354 <_obstack_memory_used@@Base+0xc7c>
   15354:	push	{fp, lr}
   15358:	mov	fp, sp
   1535c:	movw	r0, #2216	; 0x8a8
   15360:	movw	r2, #51444	; 0xc8f4
   15364:	movw	r3, #50295	; 0xc477
   15368:	mov	r1, #0
   1536c:	movt	r0, #3
   15370:	movt	r2, #1
   15374:	movt	r3, #1
   15378:	ldr	r0, [r0]
   1537c:	bl	113fc <error@plt>
   15380:	bl	115a0 <abort@plt>
   15384:	clz	r2, r1
   15388:	clz	r3, r0
   1538c:	lsr	r2, r2, #5
   15390:	lsr	r3, r3, #5
   15394:	orrs	r2, r3, r2
   15398:	movwne	r1, #1
   1539c:	movwne	r0, #1
   153a0:	cmp	r1, #0
   153a4:	beq	153d4 <_obstack_memory_used@@Base+0xcfc>
   153a8:	mvn	r2, #-2147483648	; 0x80000000
   153ac:	udiv	r2, r2, r1
   153b0:	cmp	r2, r0
   153b4:	bcs	153d4 <_obstack_memory_used@@Base+0xcfc>
   153b8:	push	{fp, lr}
   153bc:	mov	fp, sp
   153c0:	bl	11498 <__errno_location@plt>
   153c4:	mov	r1, #12
   153c8:	str	r1, [r0]
   153cc:	mov	r0, #0
   153d0:	pop	{fp, pc}
   153d4:	b	112e8 <calloc@plt>
   153d8:	cmp	r0, #0
   153dc:	movweq	r0, #1
   153e0:	cmn	r0, #1
   153e4:	ble	153ec <_obstack_memory_used@@Base+0xd14>
   153e8:	b	11420 <malloc@plt>
   153ec:	push	{fp, lr}
   153f0:	mov	fp, sp
   153f4:	bl	11498 <__errno_location@plt>
   153f8:	mov	r1, #12
   153fc:	str	r1, [r0]
   15400:	mov	r0, #0
   15404:	pop	{fp, pc}
   15408:	push	{fp, lr}
   1540c:	mov	fp, sp
   15410:	cmp	r0, #0
   15414:	beq	15430 <_obstack_memory_used@@Base+0xd58>
   15418:	cmp	r1, #0
   1541c:	beq	1543c <_obstack_memory_used@@Base+0xd64>
   15420:	cmn	r1, #1
   15424:	ble	15448 <_obstack_memory_used@@Base+0xd70>
   15428:	pop	{fp, lr}
   1542c:	b	113b4 <realloc@plt>
   15430:	mov	r0, r1
   15434:	pop	{fp, lr}
   15438:	b	153d8 <_obstack_memory_used@@Base+0xd00>
   1543c:	bl	14258 <argp_parse@@Base+0x13b0>
   15440:	mov	r0, #0
   15444:	pop	{fp, pc}
   15448:	bl	11498 <__errno_location@plt>
   1544c:	mov	r1, #12
   15450:	str	r1, [r0]
   15454:	mov	r0, #0
   15458:	pop	{fp, pc}

0001545c <argp_help@@Base>:
   1545c:	push	{fp, lr}
   15460:	mov	fp, sp
   15464:	sub	sp, sp, #8
   15468:	mov	ip, r2
   1546c:	mov	r2, r1
   15470:	str	r3, [sp]
   15474:	mov	r1, #0
   15478:	mov	r3, ip
   1547c:	bl	15488 <argp_help@@Base+0x2c>
   15480:	mov	sp, fp
   15484:	pop	{fp, pc}
   15488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1548c:	add	fp, sp, #28
   15490:	sub	sp, sp, #108	; 0x6c
   15494:	cmp	r2, #0
   15498:	str	r1, [fp, #-96]	; 0xffffffa0
   1549c:	str	r0, [fp, #-104]	; 0xffffff98
   154a0:	beq	169c4 <argp_help@@Base+0x1568>
   154a4:	ldr	r0, [fp, #8]
   154a8:	mov	r6, r3
   154ac:	mov	r4, r2
   154b0:	str	r0, [fp, #-92]	; 0xffffffa4
   154b4:	mov	r0, r2
   154b8:	bl	11528 <flockfile@plt>
   154bc:	movw	r9, #2176	; 0x880
   154c0:	str	r6, [fp, #-128]	; 0xffffff80
   154c4:	movt	r9, #3
   154c8:	ldr	r0, [r9, #36]	; 0x24
   154cc:	cmp	r0, #0
   154d0:	bne	15a94 <argp_help@@Base+0x638>
   154d4:	movw	r0, #51319	; 0xc877
   154d8:	movt	r0, #1
   154dc:	bl	11408 <getenv@plt>
   154e0:	mov	r8, r0
   154e4:	mov	r0, #32
   154e8:	mov	r1, r9
   154ec:	add	r3, r9, #16
   154f0:	sub	r2, fp, #88	; 0x58
   154f4:	vld1.64	{d16-d17}, [r1], r0
   154f8:	vld1.64	{d18-d19}, [r3]
   154fc:	add	r7, r2, #16
   15500:	cmp	r8, #0
   15504:	vldr	d20, [r1]
   15508:	mov	r1, r2
   1550c:	vst1.64	{d18-d19}, [r7]
   15510:	vst1.64	{d16-d17}, [r1], r0
   15514:	vstr	d20, [r1]
   15518:	beq	15a94 <argp_help@@Base+0x638>
   1551c:	ldrb	r5, [r8]
   15520:	str	r7, [fp, #-112]	; 0xffffff90
   15524:	str	r3, [fp, #-108]	; 0xffffff94
   15528:	str	r4, [fp, #-132]	; 0xffffff7c
   1552c:	cmp	r5, #0
   15530:	beq	15990 <argp_help@@Base+0x534>
   15534:	bl	1145c <__ctype_b_loc@plt>
   15538:	movw	r7, #51984	; 0xcb10
   1553c:	str	r0, [fp, #-100]	; 0xffffff9c
   15540:	movt	r7, #1
   15544:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15548:	uxtb	r1, r5
   1554c:	ldr	r0, [r0]
   15550:	add	r1, r0, r1, lsl #1
   15554:	ldrh	r1, [r1]
   15558:	tst	r1, #8192	; 0x2000
   1555c:	beq	15574 <argp_help@@Base+0x118>
   15560:	ldrb	r5, [r8, #1]!
   15564:	add	r1, r0, r5, lsl #1
   15568:	ldrh	r1, [r1]
   1556c:	tst	r1, #8192	; 0x2000
   15570:	bne	15560 <argp_help@@Base+0x104>
   15574:	tst	r1, #1024	; 0x400
   15578:	beq	1594c <argp_help@@Base+0x4f0>
   1557c:	mov	r3, r5
   15580:	mov	r2, r8
   15584:	b	1558c <argp_help@@Base+0x130>
   15588:	ldrb	r3, [r2, #1]!
   1558c:	uxtb	r6, r3
   15590:	add	r1, r0, r6, lsl #1
   15594:	ldrh	r1, [r1]
   15598:	tst	r1, #8
   1559c:	bne	15588 <argp_help@@Base+0x12c>
   155a0:	cmp	r6, #95	; 0x5f
   155a4:	cmpne	r6, #45	; 0x2d
   155a8:	beq	15588 <argp_help@@Base+0x12c>
   155ac:	tst	r1, #8192	; 0x2000
   155b0:	mov	r4, r2
   155b4:	beq	155d0 <argp_help@@Base+0x174>
   155b8:	mov	r4, r2
   155bc:	ldrb	r3, [r4, #1]!
   155c0:	add	r1, r0, r3, lsl #1
   155c4:	ldrh	r1, [r1]
   155c8:	tst	r1, #8192	; 0x2000
   155cc:	bne	155bc <argp_help@@Base+0x160>
   155d0:	sub	r9, r2, r8
   155d4:	uxtb	r2, r3
   155d8:	cmp	r2, #0
   155dc:	cmpne	r2, #44	; 0x2c
   155e0:	bne	15650 <argp_help@@Base+0x1f4>
   155e4:	uxtb	r0, r5
   155e8:	mov	r6, #1
   155ec:	cmp	r0, #110	; 0x6e
   155f0:	bne	15638 <argp_help@@Base+0x1dc>
   155f4:	ldrb	r0, [r8, #1]
   155f8:	mov	r6, #1
   155fc:	cmp	r0, #111	; 0x6f
   15600:	bne	15638 <argp_help@@Base+0x1dc>
   15604:	ldrb	r0, [r8, #2]
   15608:	mov	r6, #1
   1560c:	cmp	r0, #45	; 0x2d
   15610:	bne	15638 <argp_help@@Base+0x1dc>
   15614:	sub	r9, r9, #3
   15618:	add	r8, r8, #3
   1561c:	mov	sl, #0
   15620:	mov	r6, #1
   15624:	mov	r0, r7
   15628:	bl	11474 <strlen@plt>
   1562c:	cmp	r0, r9
   15630:	beq	156f4 <argp_help@@Base+0x298>
   15634:	b	15710 <argp_help@@Base+0x2b4>
   15638:	mov	sl, #1
   1563c:	mov	r0, r7
   15640:	bl	11474 <strlen@plt>
   15644:	cmp	r0, r9
   15648:	beq	156f4 <argp_help@@Base+0x298>
   1564c:	b	15710 <argp_help@@Base+0x2b4>
   15650:	cmp	r2, #61	; 0x3d
   15654:	bne	1566c <argp_help@@Base+0x210>
   15658:	ldrb	r1, [r4, #1]!
   1565c:	add	r1, r0, r1, lsl #1
   15660:	ldrh	r1, [r1]
   15664:	tst	r1, #8192	; 0x2000
   15668:	bne	15658 <argp_help@@Base+0x1fc>
   1566c:	mov	r6, #0
   15670:	tst	r1, #2048	; 0x800
   15674:	bne	15690 <argp_help@@Base+0x234>
   15678:	mov	sl, #0
   1567c:	mov	r0, r7
   15680:	bl	11474 <strlen@plt>
   15684:	cmp	r0, r9
   15688:	beq	156f4 <argp_help@@Base+0x298>
   1568c:	b	15710 <argp_help@@Base+0x2b4>
   15690:	mov	r0, r4
   15694:	mov	r1, #0
   15698:	mov	r2, #10
   1569c:	bl	11318 <strtol@plt>
   156a0:	mov	sl, r0
   156a4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   156a8:	sub	r4, r4, #1
   156ac:	ldr	r0, [r0]
   156b0:	ldrb	r1, [r4, #1]!
   156b4:	add	r1, r0, r1, lsl #1
   156b8:	ldrh	r1, [r1]
   156bc:	tst	r1, #2048	; 0x800
   156c0:	bne	156b0 <argp_help@@Base+0x254>
   156c4:	mov	r6, #0
   156c8:	tst	r1, #8192	; 0x2000
   156cc:	beq	156e4 <argp_help@@Base+0x288>
   156d0:	ldrb	r1, [r4, #1]!
   156d4:	add	r1, r0, r1, lsl #1
   156d8:	ldrb	r1, [r1, #1]
   156dc:	tst	r1, #32
   156e0:	bne	156d0 <argp_help@@Base+0x274>
   156e4:	mov	r0, r7
   156e8:	bl	11474 <strlen@plt>
   156ec:	cmp	r0, r9
   156f0:	bne	15710 <argp_help@@Base+0x2b4>
   156f4:	mov	r0, r8
   156f8:	mov	r1, r7
   156fc:	mov	r2, r9
   15700:	bl	11594 <strncmp@plt>
   15704:	cmp	r0, #0
   15708:	mov	r5, r7
   1570c:	beq	15890 <argp_help@@Base+0x434>
   15710:	add	r5, r7, #16
   15714:	mov	r0, r5
   15718:	bl	11474 <strlen@plt>
   1571c:	cmp	r0, r9
   15720:	bne	1573c <argp_help@@Base+0x2e0>
   15724:	mov	r0, r8
   15728:	mov	r1, r5
   1572c:	mov	r2, r9
   15730:	bl	11594 <strncmp@plt>
   15734:	cmp	r0, #0
   15738:	beq	15890 <argp_help@@Base+0x434>
   1573c:	add	r5, r7, #32
   15740:	mov	r0, r5
   15744:	bl	11474 <strlen@plt>
   15748:	cmp	r0, r9
   1574c:	bne	15768 <argp_help@@Base+0x30c>
   15750:	mov	r0, r8
   15754:	mov	r1, r5
   15758:	mov	r2, r9
   1575c:	bl	11594 <strncmp@plt>
   15760:	cmp	r0, #0
   15764:	beq	15890 <argp_help@@Base+0x434>
   15768:	add	r5, r7, #48	; 0x30
   1576c:	mov	r0, r5
   15770:	bl	11474 <strlen@plt>
   15774:	cmp	r0, r9
   15778:	bne	15794 <argp_help@@Base+0x338>
   1577c:	mov	r0, r8
   15780:	mov	r1, r5
   15784:	mov	r2, r9
   15788:	bl	11594 <strncmp@plt>
   1578c:	cmp	r0, #0
   15790:	beq	15890 <argp_help@@Base+0x434>
   15794:	add	r5, r7, #64	; 0x40
   15798:	mov	r0, r5
   1579c:	bl	11474 <strlen@plt>
   157a0:	cmp	r0, r9
   157a4:	bne	157c0 <argp_help@@Base+0x364>
   157a8:	mov	r0, r8
   157ac:	mov	r1, r5
   157b0:	mov	r2, r9
   157b4:	bl	11594 <strncmp@plt>
   157b8:	cmp	r0, #0
   157bc:	beq	15890 <argp_help@@Base+0x434>
   157c0:	add	r5, r7, #80	; 0x50
   157c4:	mov	r0, r5
   157c8:	bl	11474 <strlen@plt>
   157cc:	cmp	r0, r9
   157d0:	bne	157ec <argp_help@@Base+0x390>
   157d4:	mov	r0, r8
   157d8:	mov	r1, r5
   157dc:	mov	r2, r9
   157e0:	bl	11594 <strncmp@plt>
   157e4:	cmp	r0, #0
   157e8:	beq	15890 <argp_help@@Base+0x434>
   157ec:	add	r5, r7, #96	; 0x60
   157f0:	mov	r0, r5
   157f4:	bl	11474 <strlen@plt>
   157f8:	cmp	r0, r9
   157fc:	bne	15818 <argp_help@@Base+0x3bc>
   15800:	mov	r0, r8
   15804:	mov	r1, r5
   15808:	mov	r2, r9
   1580c:	bl	11594 <strncmp@plt>
   15810:	cmp	r0, #0
   15814:	beq	15890 <argp_help@@Base+0x434>
   15818:	add	r5, r7, #112	; 0x70
   1581c:	mov	r0, r5
   15820:	bl	11474 <strlen@plt>
   15824:	cmp	r0, r9
   15828:	bne	15844 <argp_help@@Base+0x3e8>
   1582c:	mov	r0, r8
   15830:	mov	r1, r5
   15834:	mov	r2, r9
   15838:	bl	11594 <strncmp@plt>
   1583c:	cmp	r0, #0
   15840:	beq	15890 <argp_help@@Base+0x434>
   15844:	add	r5, r7, #128	; 0x80
   15848:	mov	r0, r5
   1584c:	bl	11474 <strlen@plt>
   15850:	cmp	r0, r9
   15854:	bne	15870 <argp_help@@Base+0x414>
   15858:	mov	r0, r8
   1585c:	mov	r1, r5
   15860:	mov	r2, r9
   15864:	bl	11594 <strncmp@plt>
   15868:	cmp	r0, #0
   1586c:	beq	15890 <argp_help@@Base+0x434>
   15870:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15874:	ldr	r6, [fp, #-128]	; 0xffffff80
   15878:	cmp	r0, #0
   1587c:	sub	sp, sp, #8
   15880:	beq	15924 <argp_help@@Base+0x4c8>
   15884:	str	r9, [sp]
   15888:	str	r8, [sp, #4]
   1588c:	b	15930 <argp_help@@Base+0x4d4>
   15890:	cmp	r6, #0
   15894:	beq	158a4 <argp_help@@Base+0x448>
   15898:	ldrb	r0, [r5, #14]
   1589c:	cmp	r0, #0
   158a0:	beq	158dc <argp_help@@Base+0x480>
   158a4:	ldrb	r0, [r5, #15]
   158a8:	ldr	r6, [fp, #-128]	; 0xffffff80
   158ac:	sub	r1, fp, #88	; 0x58
   158b0:	str	sl, [r1, r0]
   158b4:	mov	r8, r4
   158b8:	movw	r9, #2176	; 0x880
   158bc:	ldrb	r0, [r8], #1
   158c0:	movt	r9, #3
   158c4:	cmp	r0, #44	; 0x2c
   158c8:	movne	r8, r4
   158cc:	ldrb	r5, [r8]
   158d0:	cmp	r5, #0
   158d4:	bne	15544 <argp_help@@Base+0xe8>
   158d8:	b	15990 <argp_help@@Base+0x534>
   158dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   158e0:	sub	sp, sp, #8
   158e4:	cmp	r0, #0
   158e8:	beq	158f8 <argp_help@@Base+0x49c>
   158ec:	str	r9, [sp]
   158f0:	str	r8, [sp, #4]
   158f4:	b	15904 <argp_help@@Base+0x4a8>
   158f8:	str	r9, [sp]
   158fc:	str	r8, [sp, #4]
   15900:	mov	r0, #0
   15904:	movw	r3, #51333	; 0xc885
   15908:	mov	r1, #0
   1590c:	mov	r2, #0
   15910:	movt	r3, #1
   15914:	bl	16d90 <argp_failure@@Base>
   15918:	add	sp, sp, #8
   1591c:	ldr	r6, [fp, #-128]	; 0xffffff80
   15920:	b	158b4 <argp_help@@Base+0x458>
   15924:	str	r9, [sp]
   15928:	str	r8, [sp, #4]
   1592c:	mov	r0, #0
   15930:	movw	r3, #51380	; 0xc8b4
   15934:	mov	r1, #0
   15938:	mov	r2, #0
   1593c:	movt	r3, #1
   15940:	bl	16d90 <argp_failure@@Base>
   15944:	add	sp, sp, #8
   15948:	b	158b4 <argp_help@@Base+0x458>
   1594c:	tst	r5, #255	; 0xff
   15950:	beq	15990 <argp_help@@Base+0x534>
   15954:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15958:	sub	sp, sp, #8
   1595c:	cmp	r0, #0
   15960:	beq	15970 <argp_help@@Base+0x514>
   15964:	movw	r3, #51418	; 0xc8da
   15968:	str	r8, [sp]
   1596c:	b	1597c <argp_help@@Base+0x520>
   15970:	movw	r3, #51418	; 0xc8da
   15974:	str	r8, [sp]
   15978:	mov	r0, #0
   1597c:	movt	r3, #1
   15980:	mov	r1, #0
   15984:	mov	r2, #0
   15988:	bl	16d90 <argp_failure@@Base>
   1598c:	add	sp, sp, #8
   15990:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15994:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15998:	movw	r0, #51984	; 0xcb10
   1599c:	movt	r0, #1
   159a0:	cmp	r2, r1
   159a4:	bge	15a28 <argp_help@@Base+0x5cc>
   159a8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   159ac:	cmp	r2, r1
   159b0:	bge	15a30 <argp_help@@Base+0x5d4>
   159b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   159b8:	cmp	r2, r1
   159bc:	bge	15a38 <argp_help@@Base+0x5dc>
   159c0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   159c4:	cmp	r2, r1
   159c8:	bge	15a40 <argp_help@@Base+0x5e4>
   159cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   159d0:	cmp	r2, r1
   159d4:	bge	15a48 <argp_help@@Base+0x5ec>
   159d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   159dc:	ldr	r4, [fp, #-132]	; 0xffffff7c
   159e0:	cmp	r2, r1
   159e4:	bge	16b58 <argp_help@@Base+0x16fc>
   159e8:	ldr	r0, [fp, #-112]	; 0xffffff90
   159ec:	sub	r1, fp, #88	; 0x58
   159f0:	mov	r2, r1
   159f4:	mov	r1, r9
   159f8:	vld1.64	{d16-d17}, [r0]
   159fc:	mov	r0, #32
   15a00:	vld1.64	{d18-d19}, [r2], r0
   15a04:	ldr	r0, [fp, #-108]	; 0xffffff94
   15a08:	vst1.64	{d16-d17}, [r0]
   15a0c:	mov	r0, #36	; 0x24
   15a10:	vst1.64	{d18-d19}, [r1], r0
   15a14:	mov	r0, #1
   15a18:	str	r0, [r1]
   15a1c:	ldr	r0, [r2]
   15a20:	str	r0, [r9, #32]
   15a24:	b	15a94 <argp_help@@Base+0x638>
   15a28:	add	r2, r0, #32
   15a2c:	b	15a4c <argp_help@@Base+0x5f0>
   15a30:	add	r2, r0, #48	; 0x30
   15a34:	b	15a4c <argp_help@@Base+0x5f0>
   15a38:	add	r2, r0, #64	; 0x40
   15a3c:	b	15a4c <argp_help@@Base+0x5f0>
   15a40:	add	r2, r0, #80	; 0x50
   15a44:	b	15a4c <argp_help@@Base+0x5f0>
   15a48:	add	r2, r0, #96	; 0x60
   15a4c:	ldr	r4, [fp, #-132]	; 0xffffff7c
   15a50:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15a54:	sub	sp, sp, #8
   15a58:	movw	r1, #51499	; 0xc92b
   15a5c:	cmp	r0, #0
   15a60:	movt	r1, #1
   15a64:	beq	15a74 <argp_help@@Base+0x618>
   15a68:	movw	r3, #51447	; 0xc8f7
   15a6c:	stm	sp, {r1, r2}
   15a70:	b	15a80 <argp_help@@Base+0x624>
   15a74:	movw	r3, #51447	; 0xc8f7
   15a78:	stm	sp, {r1, r2}
   15a7c:	mov	r0, #0
   15a80:	movt	r3, #1
   15a84:	mov	r1, #0
   15a88:	mov	r2, #0
   15a8c:	bl	16d90 <argp_failure@@Base>
   15a90:	add	sp, sp, #8
   15a94:	ldr	r2, [r9, #32]
   15a98:	mov	r0, r4
   15a9c:	mov	r1, #0
   15aa0:	mov	r3, #0
   15aa4:	mov	r5, #0
   15aa8:	bl	1a04c <argp_failure@@Base+0x32bc>
   15aac:	cmp	r0, #0
   15ab0:	beq	15b50 <argp_help@@Base+0x6f4>
   15ab4:	mov	sl, r0
   15ab8:	tst	r6, #11
   15abc:	str	r4, [fp, #-132]	; 0xffffff7c
   15ac0:	beq	15c2c <argp_help@@Base+0x7d0>
   15ac4:	ldr	r0, [fp, #-104]	; 0xffffff98
   15ac8:	mov	r1, #0
   15acc:	bl	16fd4 <argp_failure@@Base+0x244>
   15ad0:	ldr	r9, [r0, #4]
   15ad4:	mov	r5, r0
   15ad8:	cmp	r9, #0
   15adc:	beq	169cc <argp_help@@Base+0x1570>
   15ae0:	ldr	r6, [r5]
   15ae4:	movw	r4, #50014	; 0xc35e
   15ae8:	str	r5, [fp, #-108]	; 0xffffff94
   15aec:	mov	r5, r9
   15af0:	movt	r4, #1
   15af4:	str	r6, [fp, #-100]	; 0xffffff9c
   15af8:	ldr	r7, [r6, #4]
   15afc:	cmp	r7, #0
   15b00:	beq	15b40 <argp_help@@Base+0x6e4>
   15b04:	ldr	r0, [r6]
   15b08:	add	r8, r0, #12
   15b0c:	ldr	r0, [r8, #-12]
   15b10:	cmp	r0, #0
   15b14:	beq	15b34 <argp_help@@Base+0x6d8>
   15b18:	ldrb	r1, [r8]
   15b1c:	tst	r1, #2
   15b20:	bne	15b34 <argp_help@@Base+0x6d8>
   15b24:	mov	r1, r4
   15b28:	bl	1130c <strcmp@plt>
   15b2c:	cmp	r0, #0
   15b30:	beq	15b60 <argp_help@@Base+0x704>
   15b34:	subs	r7, r7, #1
   15b38:	add	r8, r8, #24
   15b3c:	bne	15b0c <argp_help@@Base+0x6b0>
   15b40:	subs	r5, r5, #1
   15b44:	add	r6, r6, #28
   15b48:	bne	15af8 <argp_help@@Base+0x69c>
   15b4c:	b	15b6c <argp_help@@Base+0x710>
   15b50:	mov	r0, r4
   15b54:	sub	sp, fp, #28
   15b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b5c:	b	113cc <funlockfile@plt>
   15b60:	cmp	r6, #0
   15b64:	mvnne	r0, #0
   15b68:	strne	r0, [r6, #12]
   15b6c:	ldr	r6, [fp, #-100]	; 0xffffff9c
   15b70:	movw	r4, #50177	; 0xc401
   15b74:	mov	r8, r9
   15b78:	movt	r4, #1
   15b7c:	ldr	r7, [r6, #4]
   15b80:	cmp	r7, #0
   15b84:	beq	15bc4 <argp_help@@Base+0x768>
   15b88:	ldr	r0, [r6]
   15b8c:	add	r5, r0, #12
   15b90:	ldr	r0, [r5, #-12]
   15b94:	cmp	r0, #0
   15b98:	beq	15bb8 <argp_help@@Base+0x75c>
   15b9c:	ldrb	r1, [r5]
   15ba0:	tst	r1, #2
   15ba4:	bne	15bb8 <argp_help@@Base+0x75c>
   15ba8:	mov	r1, r4
   15bac:	bl	1130c <strcmp@plt>
   15bb0:	cmp	r0, #0
   15bb4:	beq	15bd4 <argp_help@@Base+0x778>
   15bb8:	subs	r7, r7, #1
   15bbc:	add	r5, r5, #24
   15bc0:	bne	15b90 <argp_help@@Base+0x734>
   15bc4:	subs	r8, r8, #1
   15bc8:	add	r6, r6, #28
   15bcc:	bne	15b7c <argp_help@@Base+0x720>
   15bd0:	b	15be0 <argp_help@@Base+0x784>
   15bd4:	cmp	r6, #0
   15bd8:	mvnne	r0, #0
   15bdc:	strne	r0, [r6, #12]
   15be0:	cmp	r9, #0
   15be4:	beq	15c1c <argp_help@@Base+0x7c0>
   15be8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15bec:	mov	r1, #0
   15bf0:	add	r0, r0, #24
   15bf4:	str	r1, [r0], #28
   15bf8:	add	r1, r1, #1
   15bfc:	cmp	r9, r1
   15c00:	bne	15bf4 <argp_help@@Base+0x798>
   15c04:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15c08:	movw	r3, #33584	; 0x8330
   15c0c:	mov	r1, r9
   15c10:	mov	r2, #28
   15c14:	movt	r3, #1
   15c18:	bl	11540 <qsort@plt>
   15c1c:	ldr	r6, [fp, #-128]	; 0xffffff80
   15c20:	ldr	r5, [fp, #-108]	; 0xffffff94
   15c24:	movw	r9, #2176	; 0x880
   15c28:	movt	r9, #3
   15c2c:	tst	r6, #3
   15c30:	str	r5, [fp, #-108]	; 0xffffff94
   15c34:	beq	169e0 <argp_help@@Base+0x1584>
   15c38:	ldr	r1, [fp, #-104]	; 0xffffff98
   15c3c:	ldr	r0, [r1, #8]
   15c40:	ldr	r1, [r1, #16]
   15c44:	bl	1772c <argp_failure@@Base+0x99c>
   15c48:	mov	r2, r0
   15c4c:	add	r0, r0, #7
   15c50:	bic	r0, r0, #7
   15c54:	sub	r0, sp, r0
   15c58:	mov	sp, r0
   15c5c:	mov	r1, #0
   15c60:	str	r0, [fp, #-100]	; 0xffffff9c
   15c64:	bl	114bc <memset@plt>
   15c68:	mov	r7, #1
   15c6c:	ldr	r1, [sl, #24]
   15c70:	ldr	r2, [sl, #28]
   15c74:	ldr	r0, [sl, #16]
   15c78:	mov	r5, r6
   15c7c:	ldr	r6, [r9, #28]
   15c80:	sub	r1, r2, r1
   15c84:	cmp	r1, r0
   15c88:	bls	15c94 <argp_help@@Base+0x838>
   15c8c:	mov	r0, sl
   15c90:	bl	1a110 <argp_failure@@Base+0x3380>
   15c94:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15c98:	ldr	r4, [sl, #12]
   15c9c:	movw	r1, #51224	; 0xc818
   15ca0:	str	r6, [sl, #12]
   15ca4:	tst	r7, #1
   15ca8:	movt	r1, #1
   15cac:	str	r0, [fp, #-88]	; 0xffffffa8
   15cb0:	mov	r0, sl
   15cb4:	beq	15cc4 <argp_help@@Base+0x868>
   15cb8:	movw	r2, #51230	; 0xc81e
   15cbc:	movt	r2, #1
   15cc0:	b	15ccc <argp_help@@Base+0x870>
   15cc4:	movw	r2, #51237	; 0xc825
   15cc8:	movt	r2, #1
   15ccc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15cd0:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   15cd4:	ldr	r1, [sl, #24]
   15cd8:	ldr	r2, [sl, #28]
   15cdc:	ldr	r0, [sl, #16]
   15ce0:	ldr	r6, [r9, #28]
   15ce4:	sub	r1, r2, r1
   15ce8:	cmp	r1, r0
   15cec:	bls	15cf8 <argp_help@@Base+0x89c>
   15cf0:	mov	r0, sl
   15cf4:	bl	1a110 <argp_failure@@Base+0x3380>
   15cf8:	ldr	r8, [sl, #4]
   15cfc:	str	r6, [sl, #4]
   15d00:	mov	r6, r5
   15d04:	tst	r5, #2
   15d08:	bne	15d20 <argp_help@@Base+0x8c4>
   15d0c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d10:	mov	r1, sl
   15d14:	bl	177a4 <argp_failure@@Base+0xa14>
   15d18:	orr	r6, r6, #2
   15d1c:	b	15d84 <argp_help@@Base+0x928>
   15d20:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d24:	ldr	r0, [r0, #4]
   15d28:	cmp	r0, #0
   15d2c:	beq	15d84 <argp_help@@Base+0x928>
   15d30:	ldr	r0, [sl, #28]
   15d34:	ldr	r1, [sl, #32]
   15d38:	add	r2, r0, #12
   15d3c:	cmp	r2, r1
   15d40:	bls	15d5c <argp_help@@Base+0x900>
   15d44:	mov	r0, sl
   15d48:	mov	r1, #12
   15d4c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   15d50:	cmp	r0, #0
   15d54:	beq	15d84 <argp_help@@Base+0x928>
   15d58:	ldr	r0, [sl, #28]
   15d5c:	movw	r1, #51968	; 0xcb00
   15d60:	movt	r1, #1
   15d64:	vldr	d16, [r1]
   15d68:	movw	r1, #11822	; 0x2e2e
   15d6c:	movt	r1, #23854	; 0x5d2e
   15d70:	str	r1, [r0, #8]
   15d74:	vst1.8	{d16}, [r0]
   15d78:	ldr	r0, [sl, #28]
   15d7c:	add	r0, r0, #12
   15d80:	str	r0, [sl, #28]
   15d84:	sub	sp, sp, #8
   15d88:	str	sl, [sp]
   15d8c:	sub	r2, fp, #88	; 0x58
   15d90:	mov	r3, #1
   15d94:	ldr	r0, [fp, #-104]	; 0xffffff98
   15d98:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15d9c:	bl	17b60 <argp_failure@@Base+0xdd0>
   15da0:	add	sp, sp, #8
   15da4:	mov	r9, r0
   15da8:	ldr	r2, [sl, #24]
   15dac:	ldr	r0, [sl, #28]
   15db0:	ldr	r1, [sl, #16]
   15db4:	sub	r2, r0, r2
   15db8:	cmp	r2, r1
   15dbc:	bls	15df8 <argp_help@@Base+0x99c>
   15dc0:	mov	r0, sl
   15dc4:	bl	1a110 <argp_failure@@Base+0x3380>
   15dc8:	ldr	r2, [sl, #24]
   15dcc:	ldr	r0, [sl, #28]
   15dd0:	ldr	r1, [sl, #16]
   15dd4:	sub	r2, r0, r2
   15dd8:	cmp	r2, r1
   15ddc:	str	r4, [sl, #12]
   15de0:	bhi	15e04 <argp_help@@Base+0x9a8>
   15de4:	str	r8, [sl, #4]
   15de8:	ldr	r1, [sl, #32]
   15dec:	cmp	r0, r1
   15df0:	bcs	15e20 <argp_help@@Base+0x9c4>
   15df4:	b	15e38 <argp_help@@Base+0x9dc>
   15df8:	cmp	r2, r1
   15dfc:	str	r4, [sl, #12]
   15e00:	bls	15de4 <argp_help@@Base+0x988>
   15e04:	mov	r0, sl
   15e08:	bl	1a110 <argp_failure@@Base+0x3380>
   15e0c:	ldr	r0, [sl, #28]
   15e10:	str	r8, [sl, #4]
   15e14:	ldr	r1, [sl, #32]
   15e18:	cmp	r0, r1
   15e1c:	bcc	15e38 <argp_help@@Base+0x9dc>
   15e20:	mov	r0, sl
   15e24:	mov	r1, #1
   15e28:	bl	1a6b8 <argp_failure@@Base+0x3928>
   15e2c:	cmp	r0, #0
   15e30:	beq	15e48 <argp_help@@Base+0x9ec>
   15e34:	ldr	r0, [sl, #28]
   15e38:	add	r1, r0, #1
   15e3c:	str	r1, [sl, #28]
   15e40:	mov	r1, #10
   15e44:	strb	r1, [r0]
   15e48:	cmp	r9, #0
   15e4c:	movw	r9, #2176	; 0x880
   15e50:	mov	r7, #0
   15e54:	movt	r9, #3
   15e58:	bne	15c6c <argp_help@@Base+0x810>
   15e5c:	mov	r5, #1
   15e60:	tst	r6, #16
   15e64:	beq	15e90 <argp_help@@Base+0xa34>
   15e68:	sub	sp, sp, #8
   15e6c:	mov	r0, #1
   15e70:	mov	r2, #0
   15e74:	mov	r3, #0
   15e78:	stm	sp, {r0, sl}
   15e7c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15e80:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15e84:	bl	17e40 <argp_failure@@Base+0x10b0>
   15e88:	add	sp, sp, #8
   15e8c:	orr	r5, r0, r5
   15e90:	tst	r6, #4
   15e94:	bne	168a4 <argp_help@@Base+0x1448>
   15e98:	tst	r6, #8
   15e9c:	beq	168c8 <argp_help@@Base+0x146c>
   15ea0:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ea4:	ldr	r1, [r0, #4]
   15ea8:	cmp	r1, #0
   15eac:	beq	168c8 <argp_help@@Base+0x146c>
   15eb0:	str	r6, [fp, #-128]	; 0xffffff80
   15eb4:	cmp	r5, #0
   15eb8:	ldr	r4, [fp, #-108]	; 0xffffff94
   15ebc:	beq	15efc <argp_help@@Base+0xaa0>
   15ec0:	ldr	r0, [sl, #28]
   15ec4:	ldr	r1, [sl, #32]
   15ec8:	cmp	r0, r1
   15ecc:	bcc	15ee8 <argp_help@@Base+0xa8c>
   15ed0:	mov	r0, sl
   15ed4:	mov	r1, #1
   15ed8:	bl	1a6b8 <argp_failure@@Base+0x3928>
   15edc:	cmp	r0, #0
   15ee0:	beq	15ef8 <argp_help@@Base+0xa9c>
   15ee4:	ldr	r0, [sl, #28]
   15ee8:	add	r1, r0, #1
   15eec:	str	r1, [sl, #28]
   15ef0:	mov	r1, #10
   15ef4:	strb	r1, [r0]
   15ef8:	ldr	r1, [r4, #4]
   15efc:	ldr	r5, [r4]
   15f00:	mov	r0, #0
   15f04:	cmp	r1, #0
   15f08:	str	r0, [fp, #-44]	; 0xffffffd4
   15f0c:	str	r0, [fp, #-48]	; 0xffffffd0
   15f10:	str	r0, [fp, #-40]	; 0xffffffd8
   15f14:	beq	16890 <argp_help@@Base+0x1434>
   15f18:	add	r0, sl, #28
   15f1c:	str	r0, [fp, #-100]	; 0xffffff9c
   15f20:	ldr	r0, [r5, #8]
   15f24:	str	r1, [fp, #-116]	; 0xffffff8c
   15f28:	ldr	r1, [sl, #24]
   15f2c:	ldr	r2, [sl, #28]
   15f30:	ldr	r4, [r5]
   15f34:	str	r0, [fp, #-92]	; 0xffffffa4
   15f38:	ldr	r0, [sl, #16]
   15f3c:	sub	r1, r2, r1
   15f40:	cmp	r1, r0
   15f44:	bls	15f50 <argp_help@@Base+0xaf4>
   15f48:	mov	r0, sl
   15f4c:	bl	1a110 <argp_failure@@Base+0x3380>
   15f50:	mov	r7, #0
   15f54:	sub	r0, fp, #48	; 0x30
   15f58:	ldr	r2, [sl, #4]
   15f5c:	ldr	r1, [sl, #12]
   15f60:	mov	r8, r4
   15f64:	str	r7, [sl, #4]
   15f68:	str	sl, [fp, #-84]	; 0xffffffac
   15f6c:	str	r5, [fp, #-88]	; 0xffffffa8
   15f70:	str	r0, [fp, #-80]	; 0xffffffb0
   15f74:	mov	r0, #1
   15f78:	str	r0, [fp, #-76]	; 0xffffffb4
   15f7c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15f80:	str	r1, [fp, #-120]	; 0xffffff88
   15f84:	str	r2, [fp, #-124]	; 0xffffff84
   15f88:	str	r0, [fp, #-72]	; 0xffffffb8
   15f8c:	ldrb	r0, [r4, #12]
   15f90:	tst	r0, #8
   15f94:	bne	15fd4 <argp_help@@Base+0xb78>
   15f98:	ldr	r0, [r5, #4]
   15f9c:	cmp	r0, #0
   15fa0:	beq	15fd4 <argp_help@@Base+0xb78>
   15fa4:	add	r1, r4, #12
   15fa8:	ldr	r2, [r1, #-12]
   15fac:	cmp	r2, #0
   15fb0:	beq	15fc0 <argp_help@@Base+0xb64>
   15fb4:	ldrb	r2, [r1]
   15fb8:	tst	r2, #2
   15fbc:	beq	15fd0 <argp_help@@Base+0xb74>
   15fc0:	add	r1, r1, #24
   15fc4:	subs	r0, r0, #1
   15fc8:	bne	15fa8 <argp_help@@Base+0xb4c>
   15fcc:	b	15fd4 <argp_help@@Base+0xb78>
   15fd0:	mov	r7, #1
   15fd4:	ldr	r1, [sl, #24]
   15fd8:	ldr	r2, [sl, #28]
   15fdc:	ldr	r0, [sl, #16]
   15fe0:	ldr	r4, [r9, #8]
   15fe4:	sub	r1, r2, r1
   15fe8:	cmp	r1, r0
   15fec:	bls	15ff8 <argp_help@@Base+0xb9c>
   15ff0:	mov	r0, sl
   15ff4:	bl	1a110 <argp_failure@@Base+0x3380>
   15ff8:	str	r4, [sl, #12]
   15ffc:	mov	r4, r8
   16000:	str	r5, [fp, #-112]	; 0xffffff90
   16004:	ldr	r6, [r5, #4]
   16008:	cmp	r6, #0
   1600c:	beq	162ec <argp_help@@Base+0xe90>
   16010:	cmp	r7, #0
   16014:	beq	1619c <argp_help@@Base+0xd40>
   16018:	add	r7, r4, #12
   1601c:	ldr	r5, [r7]
   16020:	tst	r5, #8
   16024:	bne	16054 <argp_help@@Base+0xbf8>
   16028:	ldr	r4, [r7, #-8]
   1602c:	sub	r0, r4, #1
   16030:	cmp	r0, #254	; 0xfe
   16034:	bhi	16064 <argp_help@@Base+0xc08>
   16038:	bl	1145c <__ctype_b_loc@plt>
   1603c:	ldr	r0, [r0]
   16040:	add	r0, r0, r4, lsl #1
   16044:	ldrb	r0, [r0, #1]
   16048:	tst	r0, #64	; 0x40
   1604c:	bne	16078 <argp_help@@Base+0xc1c>
   16050:	mov	r4, r8
   16054:	add	r7, r7, #24
   16058:	subs	r6, r6, #1
   1605c:	bne	1601c <argp_help@@Base+0xbc0>
   16060:	b	162ec <argp_help@@Base+0xe90>
   16064:	mov	r4, r8
   16068:	add	r7, r7, #24
   1606c:	subs	r6, r6, #1
   16070:	bne	1601c <argp_help@@Base+0xbc0>
   16074:	b	162ec <argp_help@@Base+0xe90>
   16078:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1607c:	ldrb	r0, [r0]
   16080:	cmp	r4, r0
   16084:	bne	16160 <argp_help@@Base+0xd04>
   16088:	tst	r5, #2
   1608c:	mov	r4, r8
   16090:	bne	16180 <argp_help@@Base+0xd24>
   16094:	ldr	r0, [r9, #8]
   16098:	sub	r1, fp, #88	; 0x58
   1609c:	bl	188f4 <argp_failure@@Base+0x1b64>
   160a0:	ldr	r0, [sl, #28]
   160a4:	ldr	r1, [sl, #32]
   160a8:	cmp	r0, r1
   160ac:	bcc	160cc <argp_help@@Base+0xc70>
   160b0:	mov	r0, sl
   160b4:	mov	r1, #1
   160b8:	bl	1a6b8 <argp_failure@@Base+0x3928>
   160bc:	cmp	r0, #0
   160c0:	beq	160e0 <argp_help@@Base+0xc84>
   160c4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   160c8:	ldr	r0, [r0]
   160cc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160d0:	add	r1, r0, #1
   160d4:	str	r1, [r2]
   160d8:	mov	r1, #45	; 0x2d
   160dc:	strb	r1, [r0]
   160e0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   160e4:	ldr	r0, [sl, #28]
   160e8:	ldr	r1, [sl, #32]
   160ec:	ldrb	r5, [r2]
   160f0:	cmp	r0, r1
   160f4:	bcc	16114 <argp_help@@Base+0xcb8>
   160f8:	mov	r0, sl
   160fc:	mov	r1, #1
   16100:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16104:	cmp	r0, #0
   16108:	beq	16124 <argp_help@@Base+0xcc8>
   1610c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16110:	ldr	r0, [r0]
   16114:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16118:	add	r1, r0, #1
   1611c:	str	r1, [r2]
   16120:	strb	r5, [r0]
   16124:	ldr	r0, [r9]
   16128:	ldr	r2, [r4, #8]
   1612c:	cmp	r0, #0
   16130:	beq	16174 <argp_help@@Base+0xd18>
   16134:	cmp	r2, #0
   16138:	beq	16180 <argp_help@@Base+0xd24>
   1613c:	ldrb	r0, [r4, #12]
   16140:	tst	r0, #1
   16144:	mov	r0, sl
   16148:	movweq	r1, #51443	; 0xc8f3
   1614c:	movteq	r1, #1
   16150:	movwne	r1, #51939	; 0xcae3
   16154:	movtne	r1, #1
   16158:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   1615c:	b	16180 <argp_help@@Base+0xd24>
   16160:	mov	r4, r8
   16164:	add	r7, r7, #24
   16168:	subs	r6, r6, #1
   1616c:	bne	1601c <argp_help@@Base+0xbc0>
   16170:	b	162ec <argp_help@@Base+0xe90>
   16174:	cmp	r2, #0
   16178:	movne	r0, #1
   1617c:	strne	r0, [fp, #-40]	; 0xffffffd8
   16180:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16184:	add	r0, r0, #1
   16188:	str	r0, [fp, #-92]	; 0xffffffa4
   1618c:	add	r7, r7, #24
   16190:	subs	r6, r6, #1
   16194:	bne	1601c <argp_help@@Base+0xbc0>
   16198:	b	162ec <argp_help@@Base+0xe90>
   1619c:	add	r7, r4, #12
   161a0:	ldr	r5, [r7]
   161a4:	tst	r5, #8
   161a8:	bne	162b4 <argp_help@@Base+0xe58>
   161ac:	ldr	r9, [r7, #-8]
   161b0:	sub	r0, r9, #1
   161b4:	cmp	r0, #254	; 0xfe
   161b8:	bhi	162ac <argp_help@@Base+0xe50>
   161bc:	bl	1145c <__ctype_b_loc@plt>
   161c0:	ldr	r0, [r0]
   161c4:	add	r0, r0, r9, lsl #1
   161c8:	ldrb	r0, [r0, #1]
   161cc:	tst	r0, #64	; 0x40
   161d0:	beq	162ac <argp_help@@Base+0xe50>
   161d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   161d8:	ldrb	r0, [r0]
   161dc:	cmp	r9, r0
   161e0:	bne	162ac <argp_help@@Base+0xe50>
   161e4:	movw	r9, #2176	; 0x880
   161e8:	tst	r5, #2
   161ec:	movt	r9, #3
   161f0:	bne	162d4 <argp_help@@Base+0xe78>
   161f4:	ldr	r0, [r9, #8]
   161f8:	sub	r1, fp, #88	; 0x58
   161fc:	bl	188f4 <argp_failure@@Base+0x1b64>
   16200:	ldr	r0, [sl, #28]
   16204:	ldr	r1, [sl, #32]
   16208:	cmp	r0, r1
   1620c:	bcc	1622c <argp_help@@Base+0xdd0>
   16210:	mov	r0, sl
   16214:	mov	r1, #1
   16218:	bl	1a6b8 <argp_failure@@Base+0x3928>
   1621c:	cmp	r0, #0
   16220:	beq	16240 <argp_help@@Base+0xde4>
   16224:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16228:	ldr	r0, [r0]
   1622c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16230:	add	r1, r0, #1
   16234:	str	r1, [r2]
   16238:	mov	r1, #45	; 0x2d
   1623c:	strb	r1, [r0]
   16240:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16244:	ldr	r0, [sl, #28]
   16248:	ldr	r1, [sl, #32]
   1624c:	ldrb	r5, [r2]
   16250:	cmp	r0, r1
   16254:	bcc	16274 <argp_help@@Base+0xe18>
   16258:	mov	r0, sl
   1625c:	mov	r1, #1
   16260:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16264:	cmp	r0, #0
   16268:	beq	16284 <argp_help@@Base+0xe28>
   1626c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16270:	ldr	r0, [r0]
   16274:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16278:	add	r1, r0, #1
   1627c:	str	r1, [r2]
   16280:	strb	r5, [r0]
   16284:	ldr	r2, [r4, #8]
   16288:	cmp	r2, #0
   1628c:	beq	162d4 <argp_help@@Base+0xe78>
   16290:	ldrb	r0, [r4, #12]
   16294:	tst	r0, #1
   16298:	bne	162c4 <argp_help@@Base+0xe68>
   1629c:	movw	r1, #51443	; 0xc8f3
   162a0:	mov	r0, sl
   162a4:	movt	r1, #1
   162a8:	b	162d0 <argp_help@@Base+0xe74>
   162ac:	movw	r9, #2176	; 0x880
   162b0:	movt	r9, #3
   162b4:	add	r7, r7, #24
   162b8:	subs	r6, r6, #1
   162bc:	bne	161a0 <argp_help@@Base+0xd44>
   162c0:	b	162ec <argp_help@@Base+0xe90>
   162c4:	movw	r1, #51939	; 0xcae3
   162c8:	mov	r0, sl
   162cc:	movt	r1, #1
   162d0:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   162d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   162d8:	add	r0, r0, #1
   162dc:	str	r0, [fp, #-92]	; 0xffffffa4
   162e0:	add	r7, r7, #24
   162e4:	subs	r6, r6, #1
   162e8:	bne	161a0 <argp_help@@Base+0xd44>
   162ec:	ldrb	r0, [r4, #12]
   162f0:	tst	r0, #8
   162f4:	bne	163b8 <argp_help@@Base+0xf5c>
   162f8:	ldr	r1, [sl, #24]
   162fc:	ldr	r2, [sl, #28]
   16300:	ldr	r0, [sl, #16]
   16304:	ldr	r4, [r9, #12]
   16308:	sub	r1, r2, r1
   1630c:	cmp	r1, r0
   16310:	bls	1631c <argp_help@@Base+0xec0>
   16314:	mov	r0, sl
   16318:	bl	1a110 <argp_failure@@Base+0x3380>
   1631c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16320:	str	r4, [sl, #12]
   16324:	mov	r4, r8
   16328:	ldr	r5, [r0, #4]
   1632c:	cmp	r5, #0
   16330:	beq	1648c <argp_help@@Base+0x1030>
   16334:	add	r6, r4, #12
   16338:	ldr	r0, [r6, #-12]
   1633c:	cmp	r0, #0
   16340:	beq	163a8 <argp_help@@Base+0xf4c>
   16344:	ldrb	r0, [r6]
   16348:	tst	r0, #2
   1634c:	bne	163a8 <argp_help@@Base+0xf4c>
   16350:	ldr	r0, [r9, #12]
   16354:	sub	r1, fp, #88	; 0x58
   16358:	bl	188f4 <argp_failure@@Base+0x1b64>
   1635c:	ldr	r2, [r6, #-12]
   16360:	movw	r1, #51944	; 0xcae8
   16364:	mov	r0, sl
   16368:	movt	r1, #1
   1636c:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   16370:	ldr	r2, [r4, #8]
   16374:	cmp	r2, #0
   16378:	beq	163a8 <argp_help@@Base+0xf4c>
   1637c:	ldrb	r0, [r4, #12]
   16380:	tst	r0, #1
   16384:	bne	16398 <argp_help@@Base+0xf3c>
   16388:	movw	r1, #51949	; 0xcaed
   1638c:	mov	r0, sl
   16390:	movt	r1, #1
   16394:	b	163a4 <argp_help@@Base+0xf48>
   16398:	movw	r1, #51953	; 0xcaf1
   1639c:	mov	r0, sl
   163a0:	movt	r1, #1
   163a4:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   163a8:	add	r6, r6, #24
   163ac:	subs	r5, r5, #1
   163b0:	bne	16338 <argp_help@@Base+0xedc>
   163b4:	b	1648c <argp_help@@Base+0x1030>
   163b8:	ldr	r1, [sl, #24]
   163bc:	ldr	r2, [sl, #28]
   163c0:	ldr	r0, [sl, #16]
   163c4:	ldr	r4, [r9, #16]
   163c8:	sub	r1, r2, r1
   163cc:	cmp	r1, r0
   163d0:	bls	163dc <argp_help@@Base+0xf80>
   163d4:	mov	r0, sl
   163d8:	bl	1a110 <argp_failure@@Base+0x3380>
   163dc:	ldr	r0, [fp, #-112]	; 0xffffff90
   163e0:	str	r4, [sl, #12]
   163e4:	mov	r4, r8
   163e8:	ldr	r6, [r0, #4]
   163ec:	cmp	r6, #0
   163f0:	beq	1648c <argp_help@@Base+0x1030>
   163f4:	add	r8, r4, #12
   163f8:	ldr	r0, [r8, #-12]
   163fc:	cmp	r0, #0
   16400:	beq	16480 <argp_help@@Base+0x1024>
   16404:	ldrb	r0, [r8]
   16408:	tst	r0, #2
   1640c:	bne	16480 <argp_help@@Base+0x1024>
   16410:	ldr	r0, [r9, #16]
   16414:	sub	r1, fp, #88	; 0x58
   16418:	bl	188f4 <argp_failure@@Base+0x1b64>
   1641c:	ldr	r5, [r8, #-12]
   16420:	mov	r0, r5
   16424:	bl	11474 <strlen@plt>
   16428:	cmp	r0, #0
   1642c:	beq	16480 <argp_help@@Base+0x1024>
   16430:	mov	r7, r0
   16434:	ldr	r0, [sl, #28]
   16438:	ldr	r1, [sl, #32]
   1643c:	add	r2, r0, r7
   16440:	cmp	r2, r1
   16444:	bls	16464 <argp_help@@Base+0x1008>
   16448:	mov	r0, sl
   1644c:	mov	r1, r7
   16450:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16454:	cmp	r0, #0
   16458:	beq	16480 <argp_help@@Base+0x1024>
   1645c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16460:	ldr	r0, [r0]
   16464:	mov	r1, r5
   16468:	mov	r2, r7
   1646c:	bl	11384 <memcpy@plt>
   16470:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16474:	ldr	r0, [r1]
   16478:	add	r0, r0, r7
   1647c:	str	r0, [r1]
   16480:	add	r8, r8, #24
   16484:	subs	r6, r6, #1
   16488:	bne	163f8 <argp_help@@Base+0xf9c>
   1648c:	ldr	r1, [sl, #24]
   16490:	ldr	r2, [sl, #28]
   16494:	ldr	r0, [sl, #16]
   16498:	sub	r1, r2, r1
   1649c:	cmp	r1, r0
   164a0:	bls	164ac <argp_help@@Base+0x1050>
   164a4:	mov	r0, sl
   164a8:	bl	1a110 <argp_failure@@Base+0x3380>
   164ac:	mov	r0, #0
   164b0:	ldr	r5, [fp, #-112]	; 0xffffff90
   164b4:	str	r0, [sl, #4]
   164b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   164bc:	cmp	r0, #0
   164c0:	beq	1651c <argp_help@@Base+0x10c0>
   164c4:	ldrb	r0, [r4, #12]
   164c8:	mov	r6, r4
   164cc:	tst	r0, #8
   164d0:	bne	164fc <argp_help@@Base+0x10a0>
   164d4:	ldr	r4, [r6, #4]
   164d8:	sub	r0, r4, #1
   164dc:	cmp	r0, #254	; 0xfe
   164e0:	bhi	164fc <argp_help@@Base+0x10a0>
   164e4:	bl	1145c <__ctype_b_loc@plt>
   164e8:	ldr	r0, [r0]
   164ec:	add	r0, r0, r4, lsl #1
   164f0:	ldrb	r0, [r0, #1]
   164f4:	tst	r0, #64	; 0x40
   164f8:	bne	1681c <argp_help@@Base+0x13c0>
   164fc:	ldr	r0, [r6]
   16500:	cmp	r0, #0
   16504:	bne	1681c <argp_help@@Base+0x13c0>
   16508:	ldr	r1, [r5, #20]
   1650c:	ldr	r0, [r6, #16]
   16510:	sub	r2, fp, #88	; 0x58
   16514:	bl	18afc <argp_failure@@Base+0x1d6c>
   16518:	b	16818 <argp_help@@Base+0x13bc>
   1651c:	ldr	r6, [r5, #20]
   16520:	ldr	r5, [r4, #16]
   16524:	cmp	r6, #0
   16528:	mov	r8, r5
   1652c:	beq	16568 <argp_help@@Base+0x110c>
   16530:	ldr	r0, [r6, #20]
   16534:	mov	r8, r5
   16538:	cmp	r0, #0
   1653c:	beq	16568 <argp_help@@Base+0x110c>
   16540:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16544:	ldr	r7, [r4, #4]
   16548:	mov	r0, r6
   1654c:	bl	13b78 <argp_parse@@Base+0xcd0>
   16550:	ldr	r3, [r6, #20]
   16554:	mov	r2, r0
   16558:	mov	r0, r7
   1655c:	mov	r1, r5
   16560:	blx	r3
   16564:	mov	r8, r0
   16568:	cmp	r8, #0
   1656c:	beq	167ac <argp_help@@Base+0x1350>
   16570:	ldrb	r0, [r8]
   16574:	cmp	r0, #0
   16578:	beq	1679c <argp_help@@Base+0x1340>
   1657c:	ldr	r1, [sl, #24]
   16580:	ldr	r2, [sl, #28]
   16584:	ldr	r0, [sl, #16]
   16588:	str	r5, [fp, #-92]	; 0xffffffa4
   1658c:	sub	r1, r2, r1
   16590:	cmp	r1, r0
   16594:	bls	165b0 <argp_help@@Base+0x1154>
   16598:	mov	r0, sl
   1659c:	bl	1a110 <argp_failure@@Base+0x3380>
   165a0:	ldr	r1, [sl, #24]
   165a4:	ldr	r2, [sl, #28]
   165a8:	ldr	r0, [sl, #16]
   165ac:	sub	r1, r2, r1
   165b0:	ldr	r5, [r9, #20]
   165b4:	ldr	r4, [sl, #20]
   165b8:	cmp	r1, r0
   165bc:	mov	r6, r5
   165c0:	bls	165e0 <argp_help@@Base+0x1184>
   165c4:	mov	r0, sl
   165c8:	bl	1a110 <argp_failure@@Base+0x3380>
   165cc:	ldr	r1, [sl, #24]
   165d0:	ldr	r2, [sl, #28]
   165d4:	ldr	r6, [r9, #20]
   165d8:	ldr	r0, [sl, #16]
   165dc:	sub	r1, r2, r1
   165e0:	str	r5, [sl, #4]
   165e4:	bic	r7, r4, r4, asr #31
   165e8:	cmp	r1, r0
   165ec:	mov	r5, r6
   165f0:	bls	16600 <argp_help@@Base+0x11a4>
   165f4:	mov	r0, sl
   165f8:	bl	1a110 <argp_failure@@Base+0x3380>
   165fc:	ldr	r5, [r9, #20]
   16600:	add	r0, r5, #3
   16604:	str	r6, [sl, #12]
   16608:	cmp	r7, r0
   1660c:	bls	16654 <argp_help@@Base+0x11f8>
   16610:	ldr	r0, [sl, #28]
   16614:	ldr	r1, [sl, #32]
   16618:	cmp	r0, r1
   1661c:	bcc	1663c <argp_help@@Base+0x11e0>
   16620:	mov	r0, sl
   16624:	mov	r1, #1
   16628:	bl	1a6b8 <argp_failure@@Base+0x3928>
   1662c:	cmp	r0, #0
   16630:	beq	16738 <argp_help@@Base+0x12dc>
   16634:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16638:	ldr	r0, [r0]
   1663c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16640:	add	r1, r0, #1
   16644:	str	r1, [r2]
   16648:	mov	r1, #10
   1664c:	strb	r1, [r0]
   16650:	b	16738 <argp_help@@Base+0x12dc>
   16654:	cmp	r7, r5
   16658:	bcs	166e8 <argp_help@@Base+0x128c>
   1665c:	ldr	r1, [sl, #24]
   16660:	ldr	r2, [sl, #28]
   16664:	ldr	r0, [sl, #16]
   16668:	sub	r1, r2, r1
   1666c:	cmp	r1, r0
   16670:	bls	1667c <argp_help@@Base+0x1220>
   16674:	mov	r0, sl
   16678:	bl	1a110 <argp_failure@@Base+0x3380>
   1667c:	ldr	r0, [sl, #20]
   16680:	bic	r0, r0, r0, asr #31
   16684:	sub	r1, r5, r0
   16688:	cmp	r1, #1
   1668c:	blt	16738 <argp_help@@Base+0x12dc>
   16690:	add	r1, r5, #1
   16694:	sub	r6, r1, r0
   16698:	ldr	r0, [sl, #28]
   1669c:	ldr	r1, [sl, #32]
   166a0:	cmp	r0, r1
   166a4:	bcc	166c4 <argp_help@@Base+0x1268>
   166a8:	mov	r0, sl
   166ac:	mov	r1, #1
   166b0:	bl	1a6b8 <argp_failure@@Base+0x3928>
   166b4:	cmp	r0, #0
   166b8:	beq	166d8 <argp_help@@Base+0x127c>
   166bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   166c0:	ldr	r0, [r0]
   166c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   166c8:	add	r1, r0, #1
   166cc:	str	r1, [r2]
   166d0:	mov	r1, #32
   166d4:	strb	r1, [r0]
   166d8:	sub	r6, r6, #1
   166dc:	cmp	r6, #1
   166e0:	bgt	16698 <argp_help@@Base+0x123c>
   166e4:	b	16738 <argp_help@@Base+0x12dc>
   166e8:	ldr	r0, [sl, #28]
   166ec:	ldr	r1, [sl, #32]
   166f0:	add	r2, r0, #3
   166f4:	cmp	r2, r1
   166f8:	bls	16718 <argp_help@@Base+0x12bc>
   166fc:	mov	r0, sl
   16700:	mov	r1, #3
   16704:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16708:	cmp	r0, #0
   1670c:	beq	16738 <argp_help@@Base+0x12dc>
   16710:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16714:	ldr	r0, [r0]
   16718:	mov	r1, #32
   1671c:	strb	r1, [r0, #2]
   16720:	movw	r1, #8224	; 0x2020
   16724:	strh	r1, [r0]
   16728:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1672c:	ldr	r0, [r1]
   16730:	add	r0, r0, #3
   16734:	str	r0, [r1]
   16738:	mov	r0, r8
   1673c:	bl	11474 <strlen@plt>
   16740:	ldr	r5, [fp, #-92]	; 0xffffffa4
   16744:	cmp	r0, #0
   16748:	beq	1679c <argp_help@@Base+0x1340>
   1674c:	mov	r6, r0
   16750:	ldr	r0, [sl, #28]
   16754:	ldr	r1, [sl, #32]
   16758:	add	r2, r0, r6
   1675c:	cmp	r2, r1
   16760:	bls	16780 <argp_help@@Base+0x1324>
   16764:	mov	r0, sl
   16768:	mov	r1, r6
   1676c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16770:	cmp	r0, #0
   16774:	beq	1679c <argp_help@@Base+0x1340>
   16778:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1677c:	ldr	r0, [r0]
   16780:	mov	r1, r8
   16784:	mov	r2, r6
   16788:	bl	11384 <memcpy@plt>
   1678c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16790:	ldr	r0, [r1]
   16794:	add	r0, r0, r6
   16798:	str	r0, [r1]
   1679c:	cmp	r8, r5
   167a0:	beq	167ac <argp_help@@Base+0x1350>
   167a4:	mov	r0, r8
   167a8:	bl	14258 <argp_parse@@Base+0x13b0>
   167ac:	ldr	r2, [sl, #24]
   167b0:	ldr	r0, [sl, #28]
   167b4:	ldr	r1, [sl, #16]
   167b8:	sub	r2, r0, r2
   167bc:	cmp	r2, r1
   167c0:	bls	167d0 <argp_help@@Base+0x1374>
   167c4:	mov	r0, sl
   167c8:	bl	1a110 <argp_failure@@Base+0x3380>
   167cc:	ldr	r0, [sl, #28]
   167d0:	mov	r1, #0
   167d4:	ldr	r5, [fp, #-112]	; 0xffffff90
   167d8:	str	r1, [sl, #4]
   167dc:	ldr	r1, [sl, #32]
   167e0:	cmp	r0, r1
   167e4:	bcc	16804 <argp_help@@Base+0x13a8>
   167e8:	mov	r0, sl
   167ec:	mov	r1, #1
   167f0:	bl	1a6b8 <argp_failure@@Base+0x3928>
   167f4:	cmp	r0, #0
   167f8:	beq	16818 <argp_help@@Base+0x13bc>
   167fc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16800:	ldr	r0, [r0]
   16804:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16808:	add	r1, r0, #1
   1680c:	str	r1, [r2]
   16810:	mov	r1, #10
   16814:	strb	r1, [r0]
   16818:	str	r5, [fp, #-48]	; 0xffffffd0
   1681c:	ldr	r1, [sl, #24]
   16820:	ldr	r2, [sl, #28]
   16824:	ldr	r0, [sl, #16]
   16828:	sub	r1, r2, r1
   1682c:	cmp	r1, r0
   16830:	bls	1684c <argp_help@@Base+0x13f0>
   16834:	mov	r0, sl
   16838:	bl	1a110 <argp_failure@@Base+0x3380>
   1683c:	ldr	r1, [sl, #24]
   16840:	ldr	r2, [sl, #28]
   16844:	ldr	r0, [sl, #16]
   16848:	sub	r1, r2, r1
   1684c:	ldr	r2, [fp, #-124]	; 0xffffff84
   16850:	cmp	r1, r0
   16854:	str	r2, [sl, #4]
   16858:	bls	16864 <argp_help@@Base+0x1408>
   1685c:	mov	r0, sl
   16860:	bl	1a110 <argp_failure@@Base+0x3380>
   16864:	ldr	r1, [fp, #-116]	; 0xffffff8c
   16868:	ldr	r0, [fp, #-120]	; 0xffffff88
   1686c:	add	r5, r5, #28
   16870:	subs	r1, r1, #1
   16874:	str	r0, [sl, #12]
   16878:	bne	15f20 <argp_help@@Base+0xac4>
   1687c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16880:	cmp	r0, #0
   16884:	ldrne	r0, [r9, #4]
   16888:	cmpne	r0, #0
   1688c:	bne	169f0 <argp_help@@Base+0x1594>
   16890:	ldr	r6, [fp, #-128]	; 0xffffff80
   16894:	mov	r5, #1
   16898:	tst	r6, #32
   1689c:	bne	168d0 <argp_help@@Base+0x1474>
   168a0:	b	168f8 <argp_help@@Base+0x149c>
   168a4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   168a8:	movw	r1, #51244	; 0xc82c
   168ac:	mov	r0, sl
   168b0:	movt	r1, #1
   168b4:	mov	r3, r2
   168b8:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   168bc:	mov	r5, #1
   168c0:	tst	r6, #8
   168c4:	bne	15ea0 <argp_help@@Base+0xa44>
   168c8:	tst	r6, #32
   168cc:	beq	168f8 <argp_help@@Base+0x149c>
   168d0:	sub	sp, sp, #8
   168d4:	mov	r0, #0
   168d8:	mov	r2, #1
   168dc:	mov	r3, r5
   168e0:	stm	sp, {r0, sl}
   168e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   168e8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   168ec:	bl	17e40 <argp_failure@@Base+0x10b0>
   168f0:	add	sp, sp, #8
   168f4:	orr	r5, r0, r5
   168f8:	tst	r6, #64	; 0x40
   168fc:	movwne	r6, #2364	; 0x93c
   16900:	movtne	r6, #3
   16904:	ldrne	r0, [r6]
   16908:	cmpne	r0, #0
   1690c:	beq	16964 <argp_help@@Base+0x1508>
   16910:	cmp	r5, #0
   16914:	beq	16950 <argp_help@@Base+0x14f4>
   16918:	ldr	r0, [sl, #28]
   1691c:	ldr	r1, [sl, #32]
   16920:	cmp	r0, r1
   16924:	bcc	16940 <argp_help@@Base+0x14e4>
   16928:	mov	r0, sl
   1692c:	mov	r1, #1
   16930:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16934:	cmp	r0, #0
   16938:	beq	16950 <argp_help@@Base+0x14f4>
   1693c:	ldr	r0, [sl, #28]
   16940:	add	r1, r0, #1
   16944:	str	r1, [sl, #28]
   16948:	mov	r1, #10
   1694c:	strb	r1, [r0]
   16950:	ldr	r2, [r6]
   16954:	movw	r1, #51299	; 0xc863
   16958:	mov	r0, sl
   1695c:	movt	r1, #1
   16960:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   16964:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16968:	bl	113cc <funlockfile@plt>
   1696c:	ldr	r5, [fp, #-108]	; 0xffffff94
   16970:	cmp	r5, #0
   16974:	beq	169bc <argp_help@@Base+0x1560>
   16978:	ldr	r0, [r5, #12]
   1697c:	cmp	r0, #0
   16980:	beq	16998 <argp_help@@Base+0x153c>
   16984:	ldr	r4, [r0, #24]
   16988:	bl	14258 <argp_parse@@Base+0x13b0>
   1698c:	cmp	r4, #0
   16990:	mov	r0, r4
   16994:	bne	16984 <argp_help@@Base+0x1528>
   16998:	ldr	r0, [r5, #4]
   1699c:	cmp	r0, #0
   169a0:	beq	169b4 <argp_help@@Base+0x1558>
   169a4:	ldr	r0, [r5]
   169a8:	bl	14258 <argp_parse@@Base+0x13b0>
   169ac:	ldr	r0, [r5, #8]
   169b0:	bl	14258 <argp_parse@@Base+0x13b0>
   169b4:	mov	r0, r5
   169b8:	bl	14258 <argp_parse@@Base+0x13b0>
   169bc:	mov	r0, sl
   169c0:	bl	1a0cc <argp_failure@@Base+0x333c>
   169c4:	sub	sp, fp, #28
   169c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169cc:	movw	r9, #2176	; 0x880
   169d0:	movt	r9, #3
   169d4:	tst	r6, #3
   169d8:	str	r5, [fp, #-108]	; 0xffffff94
   169dc:	bne	15c38 <argp_help@@Base+0x7dc>
   169e0:	mov	r5, #0
   169e4:	tst	r6, #16
   169e8:	bne	15e68 <argp_help@@Base+0xa0c>
   169ec:	b	15e90 <argp_help@@Base+0xa34>
   169f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   169f4:	movw	r5, #51823	; 0xca6f
   169f8:	movt	r5, #1
   169fc:	cmp	r0, #0
   16a00:	beq	16a18 <argp_help@@Base+0x15bc>
   16a04:	ldr	r6, [r0]
   16a08:	cmp	r6, #0
   16a0c:	ldrne	r0, [r6, #20]
   16a10:	cmpne	r0, #0
   16a14:	bne	16b20 <argp_help@@Base+0x16c4>
   16a18:	ldrb	r0, [r5]
   16a1c:	cmp	r0, #0
   16a20:	beq	16b04 <argp_help@@Base+0x16a8>
   16a24:	ldr	r0, [sl, #28]
   16a28:	ldr	r1, [sl, #32]
   16a2c:	cmp	r0, r1
   16a30:	bcc	16a50 <argp_help@@Base+0x15f4>
   16a34:	mov	r0, sl
   16a38:	mov	r1, #1
   16a3c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16a40:	cmp	r0, #0
   16a44:	beq	16a64 <argp_help@@Base+0x1608>
   16a48:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16a4c:	ldr	r0, [r0]
   16a50:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16a54:	add	r1, r0, #1
   16a58:	str	r1, [r2]
   16a5c:	mov	r1, #10
   16a60:	strb	r1, [r0]
   16a64:	mov	r0, r5
   16a68:	bl	11474 <strlen@plt>
   16a6c:	cmp	r0, #0
   16a70:	beq	16ac4 <argp_help@@Base+0x1668>
   16a74:	mov	r6, r0
   16a78:	ldr	r0, [sl, #28]
   16a7c:	ldr	r1, [sl, #32]
   16a80:	add	r2, r0, r6
   16a84:	cmp	r2, r1
   16a88:	bls	16aa8 <argp_help@@Base+0x164c>
   16a8c:	mov	r0, sl
   16a90:	mov	r1, r6
   16a94:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16a98:	cmp	r0, #0
   16a9c:	beq	16ac4 <argp_help@@Base+0x1668>
   16aa0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16aa4:	ldr	r0, [r0]
   16aa8:	mov	r1, r5
   16aac:	mov	r2, r6
   16ab0:	bl	11384 <memcpy@plt>
   16ab4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16ab8:	ldr	r0, [r1]
   16abc:	add	r0, r0, r6
   16ac0:	str	r0, [r1]
   16ac4:	ldr	r0, [sl, #28]
   16ac8:	ldr	r1, [sl, #32]
   16acc:	cmp	r0, r1
   16ad0:	bcc	16af0 <argp_help@@Base+0x1694>
   16ad4:	mov	r0, sl
   16ad8:	mov	r1, #1
   16adc:	bl	1a6b8 <argp_failure@@Base+0x3928>
   16ae0:	cmp	r0, #0
   16ae4:	beq	16b04 <argp_help@@Base+0x16a8>
   16ae8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16aec:	ldr	r0, [r0]
   16af0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16af4:	add	r1, r0, #1
   16af8:	str	r1, [r2]
   16afc:	mov	r1, #10
   16b00:	strb	r1, [r0]
   16b04:	movw	r0, #51823	; 0xca6f
   16b08:	movt	r0, #1
   16b0c:	cmp	r5, r0
   16b10:	beq	16890 <argp_help@@Base+0x1434>
   16b14:	mov	r0, r5
   16b18:	bl	14258 <argp_parse@@Base+0x13b0>
   16b1c:	b	16890 <argp_help@@Base+0x1434>
   16b20:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16b24:	mov	r0, r6
   16b28:	bl	13b78 <argp_parse@@Base+0xcd0>
   16b2c:	ldr	r3, [r6, #20]
   16b30:	movw	r1, #51823	; 0xca6f
   16b34:	mov	r2, r0
   16b38:	movw	r0, #5
   16b3c:	movt	r0, #512	; 0x200
   16b40:	movt	r1, #1
   16b44:	blx	r3
   16b48:	mov	r5, r0
   16b4c:	cmp	r0, #0
   16b50:	bne	16a18 <argp_help@@Base+0x15bc>
   16b54:	b	16890 <argp_help@@Base+0x1434>
   16b58:	add	r2, r0, #112	; 0x70
   16b5c:	b	15a50 <argp_help@@Base+0x5f4>

00016b60 <argp_state_help@@Base>:
   16b60:	push	{r4, r5, fp, lr}
   16b64:	add	fp, sp, #8
   16b68:	sub	sp, sp, #8
   16b6c:	mov	r4, r2
   16b70:	mov	r2, r1
   16b74:	cmp	r0, #0
   16b78:	beq	16bc4 <argp_state_help@@Base+0x64>
   16b7c:	cmp	r2, #0
   16b80:	beq	16bfc <argp_state_help@@Base+0x9c>
   16b84:	ldr	r1, [r0, #16]
   16b88:	mov	r5, r0
   16b8c:	ands	r0, r1, #2
   16b90:	bne	16bfc <argp_state_help@@Base+0x9c>
   16b94:	ldr	r3, [r5, #40]	; 0x28
   16b98:	ldr	r0, [r5]
   16b9c:	and	r1, r1, #64	; 0x40
   16ba0:	orr	r4, r4, r1, lsl #1
   16ba4:	mov	r1, r5
   16ba8:	str	r3, [sp]
   16bac:	mov	r3, r4
   16bb0:	bl	15488 <argp_help@@Base+0x2c>
   16bb4:	ldrb	r0, [r5, #16]
   16bb8:	tst	r0, #32
   16bbc:	beq	16bec <argp_state_help@@Base+0x8c>
   16bc0:	b	16bfc <argp_state_help@@Base+0x9c>
   16bc4:	cmp	r2, #0
   16bc8:	beq	16bfc <argp_state_help@@Base+0x9c>
   16bcc:	movw	r0, #2240	; 0x8c0
   16bd0:	mov	r1, #0
   16bd4:	mov	r3, r4
   16bd8:	movt	r0, #3
   16bdc:	ldr	r0, [r0]
   16be0:	str	r0, [sp]
   16be4:	mov	r0, #0
   16be8:	bl	15488 <argp_help@@Base+0x2c>
   16bec:	tst	r4, #256	; 0x100
   16bf0:	bne	16c04 <argp_state_help@@Base+0xa4>
   16bf4:	tst	r4, #512	; 0x200
   16bf8:	bne	16c14 <argp_state_help@@Base+0xb4>
   16bfc:	sub	sp, fp, #8
   16c00:	pop	{r4, r5, fp, pc}
   16c04:	movw	r0, #2232	; 0x8b8
   16c08:	movt	r0, #3
   16c0c:	ldr	r0, [r0]
   16c10:	bl	11468 <exit@plt>
   16c14:	mov	r0, #0
   16c18:	bl	11468 <exit@plt>

00016c1c <argp_error@@Base>:
   16c1c:	sub	sp, sp, #8
   16c20:	push	{r4, r5, r6, r7, fp, lr}
   16c24:	add	fp, sp, #16
   16c28:	sub	sp, sp, #8
   16c2c:	mov	r6, r1
   16c30:	mov	r4, r0
   16c34:	cmp	r0, #0
   16c38:	str	r3, [fp, #12]
   16c3c:	str	r2, [fp, #8]
   16c40:	beq	16c70 <argp_error@@Base+0x54>
   16c44:	ldrb	r0, [r4, #16]
   16c48:	tst	r0, #2
   16c4c:	bne	16c60 <argp_error@@Base+0x44>
   16c50:	add	r0, r4, #44	; 0x2c
   16c54:	ldr	r5, [r0]
   16c58:	cmp	r5, #0
   16c5c:	bne	16c84 <argp_error@@Base+0x68>
   16c60:	sub	sp, fp, #16
   16c64:	pop	{r4, r5, r6, r7, fp, lr}
   16c68:	add	sp, sp, #8
   16c6c:	bx	lr
   16c70:	movw	r0, #2248	; 0x8c8
   16c74:	movt	r0, #3
   16c78:	ldr	r5, [r0]
   16c7c:	cmp	r5, #0
   16c80:	beq	16c60 <argp_error@@Base+0x44>
   16c84:	mov	r0, r5
   16c88:	bl	11528 <flockfile@plt>
   16c8c:	add	r0, fp, #8
   16c90:	cmp	r4, #0
   16c94:	str	r0, [sp, #4]
   16c98:	beq	16ca4 <argp_error@@Base+0x88>
   16c9c:	ldr	r0, [r4, #40]	; 0x28
   16ca0:	b	16cb0 <argp_error@@Base+0x94>
   16ca4:	movw	r0, #2240	; 0x8c0
   16ca8:	movt	r0, #3
   16cac:	ldr	r0, [r0]
   16cb0:	mov	r1, r5
   16cb4:	bl	112f4 <fputs_unlocked@plt>
   16cb8:	mov	r7, r5
   16cbc:	ldr	r0, [r7, #20]!
   16cc0:	ldr	r1, [r7, #4]
   16cc4:	cmp	r0, r1
   16cc8:	bcs	16d54 <argp_error@@Base+0x138>
   16ccc:	add	r1, r0, #1
   16cd0:	str	r1, [r7]
   16cd4:	mov	r1, #58	; 0x3a
   16cd8:	strb	r1, [r0]
   16cdc:	ldr	r0, [r5, #20]
   16ce0:	ldr	r1, [r5, #24]
   16ce4:	cmp	r0, r1
   16ce8:	bcs	16d70 <argp_error@@Base+0x154>
   16cec:	add	r1, r0, #1
   16cf0:	str	r1, [r7]
   16cf4:	mov	r1, #32
   16cf8:	strb	r1, [r0]
   16cfc:	ldr	r2, [sp, #4]
   16d00:	mov	r0, r5
   16d04:	mov	r1, r6
   16d08:	bl	114f8 <vfprintf@plt>
   16d0c:	ldr	r0, [r5, #20]
   16d10:	ldr	r1, [r5, #24]
   16d14:	cmp	r0, r1
   16d18:	bcs	16d80 <argp_error@@Base+0x164>
   16d1c:	add	r1, r0, #1
   16d20:	str	r1, [r7]
   16d24:	mov	r1, #10
   16d28:	strb	r1, [r0]
   16d2c:	mov	r0, r4
   16d30:	mov	r1, r5
   16d34:	mov	r2, #260	; 0x104
   16d38:	bl	16b60 <argp_state_help@@Base>
   16d3c:	mov	r0, r5
   16d40:	bl	113cc <funlockfile@plt>
   16d44:	sub	sp, fp, #16
   16d48:	pop	{r4, r5, r6, r7, fp, lr}
   16d4c:	add	sp, sp, #8
   16d50:	bx	lr
   16d54:	mov	r0, r5
   16d58:	mov	r1, #58	; 0x3a
   16d5c:	bl	114e0 <__overflow@plt>
   16d60:	ldr	r0, [r5, #20]
   16d64:	ldr	r1, [r5, #24]
   16d68:	cmp	r0, r1
   16d6c:	bcc	16cec <argp_error@@Base+0xd0>
   16d70:	mov	r0, r5
   16d74:	mov	r1, #32
   16d78:	bl	114e0 <__overflow@plt>
   16d7c:	b	16cfc <argp_error@@Base+0xe0>
   16d80:	mov	r0, r5
   16d84:	mov	r1, #10
   16d88:	bl	114e0 <__overflow@plt>
   16d8c:	b	16d2c <argp_error@@Base+0x110>

00016d90 <argp_failure@@Base>:
   16d90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d94:	add	fp, sp, #24
   16d98:	sub	sp, sp, #200	; 0xc8
   16d9c:	mov	r4, r3
   16da0:	mov	r9, r2
   16da4:	mov	r8, r1
   16da8:	mov	r5, r0
   16dac:	cmp	r0, #0
   16db0:	beq	16dd4 <argp_failure@@Base+0x44>
   16db4:	ldrb	r0, [r5, #16]
   16db8:	tst	r0, #2
   16dbc:	bne	16f74 <argp_failure@@Base+0x1e4>
   16dc0:	add	r0, r5, #44	; 0x2c
   16dc4:	ldr	r6, [r0]
   16dc8:	cmp	r6, #0
   16dcc:	bne	16de8 <argp_failure@@Base+0x58>
   16dd0:	b	16f74 <argp_failure@@Base+0x1e4>
   16dd4:	movw	r0, #2248	; 0x8c8
   16dd8:	movt	r0, #3
   16ddc:	ldr	r6, [r0]
   16de0:	cmp	r6, #0
   16de4:	beq	16f74 <argp_failure@@Base+0x1e4>
   16de8:	mov	r0, r6
   16dec:	bl	11528 <flockfile@plt>
   16df0:	movw	r0, #2240	; 0x8c0
   16df4:	cmp	r5, #0
   16df8:	mov	r1, r6
   16dfc:	movt	r0, #3
   16e00:	addne	r0, r5, #40	; 0x28
   16e04:	ldr	r0, [r0]
   16e08:	bl	112f4 <fputs_unlocked@plt>
   16e0c:	cmp	r4, #0
   16e10:	beq	16e6c <argp_failure@@Base+0xdc>
   16e14:	add	r0, fp, #8
   16e18:	str	r0, [sp]
   16e1c:	ldr	r0, [r6, #20]
   16e20:	ldr	r1, [r6, #24]
   16e24:	cmp	r0, r1
   16e28:	bcs	16f7c <argp_failure@@Base+0x1ec>
   16e2c:	add	r1, r0, #1
   16e30:	str	r1, [r6, #20]
   16e34:	mov	r1, #58	; 0x3a
   16e38:	strb	r1, [r0]
   16e3c:	ldr	r0, [r6, #20]
   16e40:	ldr	r1, [r6, #24]
   16e44:	cmp	r0, r1
   16e48:	bcs	16f98 <argp_failure@@Base+0x208>
   16e4c:	add	r1, r0, #1
   16e50:	str	r1, [r6, #20]
   16e54:	mov	r1, #32
   16e58:	strb	r1, [r0]
   16e5c:	ldr	r2, [sp]
   16e60:	mov	r0, r6
   16e64:	mov	r1, r4
   16e68:	bl	114f8 <vfprintf@plt>
   16e6c:	cmp	r9, #0
   16e70:	beq	16f40 <argp_failure@@Base+0x1b0>
   16e74:	mov	r4, r6
   16e78:	ldr	r0, [r4, #20]!
   16e7c:	mov	r7, r4
   16e80:	ldr	r1, [r7, #4]!
   16e84:	cmp	r0, r1
   16e88:	bcs	16fa8 <argp_failure@@Base+0x218>
   16e8c:	add	r1, r0, #1
   16e90:	str	r1, [r4]
   16e94:	mov	r1, #58	; 0x3a
   16e98:	strb	r1, [r0]
   16e9c:	ldr	r0, [r4]
   16ea0:	ldr	r1, [r7]
   16ea4:	cmp	r0, r1
   16ea8:	bcs	16fc4 <argp_failure@@Base+0x234>
   16eac:	add	r1, r0, #1
   16eb0:	str	r1, [r4]
   16eb4:	mov	r1, #32
   16eb8:	strb	r1, [r0]
   16ebc:	mov	r1, sp
   16ec0:	mov	r0, r9
   16ec4:	mov	r2, #200	; 0xc8
   16ec8:	bl	114b0 <strerror_r@plt>
   16ecc:	cmp	r0, #0
   16ed0:	bne	16ef0 <argp_failure@@Base+0x160>
   16ed4:	mov	r0, r9
   16ed8:	bl	11438 <strerror@plt>
   16edc:	mov	r1, r0
   16ee0:	movw	r0, #51203	; 0xc803
   16ee4:	movt	r0, #1
   16ee8:	cmp	r1, #0
   16eec:	movne	r0, r1
   16ef0:	mov	r1, r6
   16ef4:	bl	112f4 <fputs_unlocked@plt>
   16ef8:	ldr	r0, [r4]
   16efc:	ldr	r1, [r7]
   16f00:	cmp	r0, r1
   16f04:	bcs	16f58 <argp_failure@@Base+0x1c8>
   16f08:	add	r1, r0, #1
   16f0c:	str	r1, [r4]
   16f10:	mov	r1, #10
   16f14:	strb	r1, [r0]
   16f18:	mov	r0, r6
   16f1c:	bl	113cc <funlockfile@plt>
   16f20:	cmp	r8, #0
   16f24:	beq	16f74 <argp_failure@@Base+0x1e4>
   16f28:	cmp	r5, #0
   16f2c:	ldrbne	r0, [r5, #16]
   16f30:	tstne	r0, #32
   16f34:	bne	16f74 <argp_failure@@Base+0x1e4>
   16f38:	mov	r0, r8
   16f3c:	bl	11468 <exit@plt>
   16f40:	add	r7, r6, #24
   16f44:	add	r4, r6, #20
   16f48:	ldr	r0, [r4]
   16f4c:	ldr	r1, [r7]
   16f50:	cmp	r0, r1
   16f54:	bcc	16f08 <argp_failure@@Base+0x178>
   16f58:	mov	r0, r6
   16f5c:	mov	r1, #10
   16f60:	bl	114e0 <__overflow@plt>
   16f64:	mov	r0, r6
   16f68:	bl	113cc <funlockfile@plt>
   16f6c:	cmp	r8, #0
   16f70:	bne	16f28 <argp_failure@@Base+0x198>
   16f74:	sub	sp, fp, #24
   16f78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16f7c:	mov	r0, r6
   16f80:	mov	r1, #58	; 0x3a
   16f84:	bl	114e0 <__overflow@plt>
   16f88:	ldr	r0, [r6, #20]
   16f8c:	ldr	r1, [r6, #24]
   16f90:	cmp	r0, r1
   16f94:	bcc	16e4c <argp_failure@@Base+0xbc>
   16f98:	mov	r0, r6
   16f9c:	mov	r1, #32
   16fa0:	bl	114e0 <__overflow@plt>
   16fa4:	b	16e5c <argp_failure@@Base+0xcc>
   16fa8:	mov	r0, r6
   16fac:	mov	r1, #58	; 0x3a
   16fb0:	bl	114e0 <__overflow@plt>
   16fb4:	ldr	r0, [r4]
   16fb8:	ldr	r1, [r7]
   16fbc:	cmp	r0, r1
   16fc0:	bcc	16eac <argp_failure@@Base+0x11c>
   16fc4:	mov	r0, r6
   16fc8:	mov	r1, #32
   16fcc:	bl	114e0 <__overflow@plt>
   16fd0:	b	16ebc <argp_failure@@Base+0x12c>
   16fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fd8:	add	fp, sp, #28
   16fdc:	sub	sp, sp, #52	; 0x34
   16fe0:	ldr	r4, [r0]
   16fe4:	ldr	r7, [r0, #16]
   16fe8:	mov	r8, r0
   16fec:	mov	r0, #16
   16ff0:	mov	sl, r1
   16ff4:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   16ff8:	cmp	r0, #0
   16ffc:	beq	176ac <argp_failure@@Base+0x91c>
   17000:	mov	r9, r0
   17004:	mov	r0, #0
   17008:	cmp	r4, #0
   1700c:	str	r8, [sp, #40]	; 0x28
   17010:	mov	r1, r9
   17014:	str	r9, [fp, #-32]	; 0xffffffe0
   17018:	str	r0, [r1, #12]!
   1701c:	str	r1, [sp, #28]
   17020:	str	r0, [r1, #-8]
   17024:	beq	17294 <argp_failure@@Base+0x504>
   17028:	ldrb	r0, [r4, #12]
   1702c:	str	r7, [sp, #16]
   17030:	tst	r0, #4
   17034:	bne	176cc <argp_failure@@Base+0x93c>
   17038:	add	r7, r4, #12
   1703c:	mov	r6, #0
   17040:	mov	r8, #0
   17044:	ldr	r5, [r7, #-8]
   17048:	cmp	r5, #0
   1704c:	bne	17088 <argp_failure@@Base+0x2f8>
   17050:	b	17064 <argp_failure@@Base+0x2d4>
   17054:	add	r7, r7, #24
   17058:	ldr	r5, [r7, #-8]
   1705c:	cmp	r5, #0
   17060:	bne	17088 <argp_failure@@Base+0x2f8>
   17064:	ldr	r0, [r7, #-12]
   17068:	cmp	r0, #0
   1706c:	bne	17088 <argp_failure@@Base+0x2f8>
   17070:	ldr	r0, [r7, #4]
   17074:	cmp	r0, #0
   17078:	bne	17088 <argp_failure@@Base+0x2f8>
   1707c:	ldr	r0, [r7, #8]
   17080:	cmp	r0, #0
   17084:	beq	170c8 <argp_failure@@Base+0x338>
   17088:	ldr	r0, [r7]
   1708c:	sub	r1, r5, #1
   17090:	tst	r0, #4
   17094:	addeq	r6, r6, #1
   17098:	streq	r6, [r9, #4]
   1709c:	cmp	r1, #254	; 0xfe
   170a0:	bhi	17054 <argp_failure@@Base+0x2c4>
   170a4:	ands	r0, r0, #8
   170a8:	bne	17054 <argp_failure@@Base+0x2c4>
   170ac:	bl	1145c <__ctype_b_loc@plt>
   170b0:	ldr	r0, [r0]
   170b4:	add	r0, r0, r5, lsl #1
   170b8:	ldrb	r0, [r0, #1]
   170bc:	tst	r0, #64	; 0x40
   170c0:	addne	r8, r8, #1
   170c4:	b	17054 <argp_failure@@Base+0x2c4>
   170c8:	rsb	r0, r6, r6, lsl #3
   170cc:	lsl	r0, r0, #2
   170d0:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   170d4:	mov	r7, r0
   170d8:	str	r0, [r9]
   170dc:	add	r0, r8, #1
   170e0:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   170e4:	cmp	r7, #0
   170e8:	str	r0, [r9, #8]
   170ec:	movne	r5, r0
   170f0:	cmpne	r0, #0
   170f4:	bne	17118 <argp_failure@@Base+0x388>
   170f8:	movw	r0, #51603	; 0xc993
   170fc:	movw	r1, #51511	; 0xc937
   17100:	movw	r3, #51523	; 0xc943
   17104:	movw	r2, #474	; 0x1da
   17108:	movt	r0, #1
   1710c:	movt	r1, #1
   17110:	movt	r3, #1
   17114:	bl	115c4 <__assert_fail@plt>
   17118:	movw	r0, #37450	; 0x924a
   1711c:	movt	r0, #2340	; 0x924
   17120:	cmp	r6, r0
   17124:	bcs	176ec <argp_failure@@Base+0x95c>
   17128:	mov	r8, #0
   1712c:	mov	r0, #0
   17130:	ldr	r1, [r4, #4]
   17134:	cmp	r1, #0
   17138:	bne	1717c <argp_failure@@Base+0x3ec>
   1713c:	b	17158 <argp_failure@@Base+0x3c8>
   17140:	mov	r4, r0
   17144:	add	r7, r7, #28
   17148:	mov	r0, r9
   1714c:	ldr	r1, [r4, #4]
   17150:	cmp	r1, #0
   17154:	bne	1717c <argp_failure@@Base+0x3ec>
   17158:	ldr	r2, [r4]
   1715c:	cmp	r2, #0
   17160:	bne	1717c <argp_failure@@Base+0x3ec>
   17164:	ldr	r2, [r4, #16]
   17168:	cmp	r2, #0
   1716c:	bne	1717c <argp_failure@@Base+0x3ec>
   17170:	ldr	r2, [r4, #20]
   17174:	cmp	r2, #0
   17178:	beq	17280 <argp_failure@@Base+0x4f0>
   1717c:	stm	r7, {r4, r8}
   17180:	str	r5, [r7, #8]
   17184:	ldr	r9, [r4, #20]
   17188:	cmp	r9, #0
   1718c:	bne	171a8 <argp_failure@@Base+0x418>
   17190:	ldr	r2, [r4]
   17194:	cmp	r2, #0
   17198:	bne	171a4 <argp_failure@@Base+0x414>
   1719c:	cmp	r1, #0
   171a0:	addeq	r0, r0, #1
   171a4:	mov	r9, r0
   171a8:	ldr	r0, [sp, #40]	; 0x28
   171ac:	mov	r1, #0
   171b0:	str	r9, [r7, #12]
   171b4:	str	sl, [r7, #16]
   171b8:	str	r0, [r7, #20]
   171bc:	b	171c8 <argp_failure@@Base+0x438>
   171c0:	ldr	r1, [r7, #4]
   171c4:	mov	r4, r0
   171c8:	add	r0, r1, #1
   171cc:	str	r0, [r7, #4]
   171d0:	ldrb	r0, [r4, #12]
   171d4:	tst	r0, #8
   171d8:	bne	17224 <argp_failure@@Base+0x494>
   171dc:	ldr	r6, [r4, #4]
   171e0:	sub	r0, r6, #1
   171e4:	cmp	r0, #254	; 0xfe
   171e8:	bhi	17224 <argp_failure@@Base+0x494>
   171ec:	bl	1145c <__ctype_b_loc@plt>
   171f0:	ldr	r0, [r0]
   171f4:	add	r0, r0, r6, lsl #1
   171f8:	ldrb	r0, [r0, #1]
   171fc:	tst	r0, #64	; 0x40
   17200:	beq	17224 <argp_failure@@Base+0x494>
   17204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17208:	ldr	r0, [r0, #8]
   1720c:	cmp	r0, r5
   17210:	bcs	1725c <argp_failure@@Base+0x4cc>
   17214:	ldrb	r1, [r0], #1
   17218:	uxtb	r2, r6
   1721c:	cmp	r1, r2
   17220:	bne	1720c <argp_failure@@Base+0x47c>
   17224:	ldr	r1, [r4, #28]
   17228:	add	r0, r4, #24
   1722c:	cmp	r1, #0
   17230:	bne	17270 <argp_failure@@Base+0x4e0>
   17234:	ldr	r1, [r0]
   17238:	cmp	r1, #0
   1723c:	bne	17270 <argp_failure@@Base+0x4e0>
   17240:	ldr	r1, [r4, #40]	; 0x28
   17244:	cmp	r1, #0
   17248:	bne	17270 <argp_failure@@Base+0x4e0>
   1724c:	ldr	r1, [r4, #44]	; 0x2c
   17250:	cmp	r1, #0
   17254:	bne	17270 <argp_failure@@Base+0x4e0>
   17258:	b	17140 <argp_failure@@Base+0x3b0>
   1725c:	strb	r6, [r5], #1
   17260:	ldr	r1, [r4, #28]
   17264:	add	r0, r4, #24
   17268:	cmp	r1, #0
   1726c:	beq	17234 <argp_failure@@Base+0x4a4>
   17270:	ldrb	r1, [r4, #36]	; 0x24
   17274:	tst	r1, #4
   17278:	bne	171c0 <argp_failure@@Base+0x430>
   1727c:	b	17140 <argp_failure@@Base+0x3b0>
   17280:	ldr	r8, [sp, #40]	; 0x28
   17284:	ldr	r7, [sp, #16]
   17288:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1728c:	mov	r0, #0
   17290:	strb	r0, [r5]
   17294:	cmp	r7, #0
   17298:	ldrne	r0, [r7]
   1729c:	cmpne	r0, #0
   172a0:	bne	172b0 <argp_failure@@Base+0x520>
   172a4:	mov	r0, r9
   172a8:	sub	sp, fp, #28
   172ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172b0:	str	sl, [sp, #4]
   172b4:	ldr	r4, [r7, #12]
   172b8:	cmp	r4, #0
   172bc:	beq	172c8 <argp_failure@@Base+0x538>
   172c0:	ldr	r5, [r7, #8]
   172c4:	b	172d8 <argp_failure@@Base+0x548>
   172c8:	ldr	r5, [r7, #8]
   172cc:	mov	r1, sl
   172d0:	cmp	r5, #0
   172d4:	beq	17328 <argp_failure@@Base+0x598>
   172d8:	ldr	r6, [r8, #16]
   172dc:	mov	r0, #28
   172e0:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   172e4:	mov	r1, r0
   172e8:	cmp	r0, #0
   172ec:	beq	17328 <argp_failure@@Base+0x598>
   172f0:	sub	r0, r7, r6
   172f4:	str	r5, [r1]
   172f8:	cmp	sl, #0
   172fc:	asr	r0, r0, #4
   17300:	stmib	r1, {r0, r4, sl}
   17304:	str	r8, [r1, #16]
   17308:	ldr	r3, [sp, #28]
   1730c:	ldrne	r0, [sl, #20]
   17310:	ldr	r2, [r3]
   17314:	addne	r0, r0, #1
   17318:	str	r1, [r3]
   1731c:	moveq	r0, #0
   17320:	str	r0, [r1, #20]
   17324:	str	r2, [r1, #24]
   17328:	ldr	r0, [r7]
   1732c:	bl	16fd4 <argp_failure@@Base+0x244>
   17330:	ldr	r1, [sp, #28]
   17334:	mov	r6, r0
   17338:	ldr	r2, [r1]
   1733c:	mov	r0, r1
   17340:	add	r1, r2, #24
   17344:	cmp	r2, #0
   17348:	bne	17338 <argp_failure@@Base+0x5a8>
   1734c:	ldr	r1, [r6, #12]
   17350:	str	r1, [r0]
   17354:	mov	r0, #0
   17358:	str	r0, [r6, #12]
   1735c:	ldr	r0, [r6, #4]
   17360:	cmp	r0, #0
   17364:	beq	17674 <argp_failure@@Base+0x8e4>
   17368:	ldr	r4, [r9, #4]
   1736c:	cmp	r4, #0
   17370:	beq	17534 <argp_failure@@Base+0x7a4>
   17374:	add	r0, r4, r0
   17378:	str	r7, [sp, #16]
   1737c:	str	r0, [sp, #20]
   17380:	rsb	r0, r0, r0, lsl #3
   17384:	lsl	r0, r0, #2
   17388:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   1738c:	ldr	r8, [r9, #8]
   17390:	mov	r5, r0
   17394:	mov	r0, r8
   17398:	bl	11474 <strlen@plt>
   1739c:	mov	r7, r0
   173a0:	ldr	r0, [r6, #8]
   173a4:	bl	11474 <strlen@plt>
   173a8:	add	r0, r7, r0
   173ac:	str	r7, [fp, #-36]	; 0xffffffdc
   173b0:	add	r0, r0, #1
   173b4:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   173b8:	cmp	r5, #0
   173bc:	str	r5, [sp, #24]
   173c0:	cmpne	r0, #0
   173c4:	beq	1768c <argp_failure@@Base+0x8fc>
   173c8:	ldr	r1, [sp, #20]
   173cc:	str	r0, [sp, #36]	; 0x24
   173d0:	movw	r0, #37450	; 0x924a
   173d4:	movt	r0, #2340	; 0x924
   173d8:	cmp	r1, r0
   173dc:	bcs	1770c <argp_failure@@Base+0x97c>
   173e0:	ldr	r7, [sp, #24]
   173e4:	ldr	r1, [r9]
   173e8:	rsb	r5, r4, r4, lsl #3
   173ec:	lsl	r2, r5, #2
   173f0:	str	r2, [sp, #8]
   173f4:	mov	r0, r7
   173f8:	bl	11384 <memcpy@plt>
   173fc:	ldm	r6, {r1, r2}
   17400:	add	r0, r7, r5, lsl #2
   17404:	rsb	r2, r2, r2, lsl #3
   17408:	lsl	r2, r2, #2
   1740c:	bl	11384 <memcpy@plt>
   17410:	ldr	r5, [sp, #36]	; 0x24
   17414:	ldr	sl, [fp, #-36]	; 0xffffffdc
   17418:	mov	r1, r8
   1741c:	mov	r0, r5
   17420:	mov	r2, sl
   17424:	bl	11384 <memcpy@plt>
   17428:	add	r0, r7, #8
   1742c:	ldr	r1, [r0]
   17430:	subs	r4, r4, #1
   17434:	sub	r1, r1, r8
   17438:	add	r1, r5, r1
   1743c:	str	r1, [r0], #28
   17440:	bne	1742c <argp_failure@@Base+0x69c>
   17444:	ldr	r0, [r6, #4]
   17448:	add	r8, r5, sl
   1744c:	str	r6, [sp, #12]
   17450:	cmp	r0, #0
   17454:	beq	17550 <argp_failure@@Base+0x7c0>
   17458:	str	r0, [sp, #32]
   1745c:	ldr	r0, [sp, #24]
   17460:	ldr	r1, [sp, #8]
   17464:	add	r0, r0, r1
   17468:	mov	r1, sl
   1746c:	ldr	sl, [r6, #8]
   17470:	cmp	r1, #0
   17474:	ble	17558 <argp_failure@@Base+0x7c8>
   17478:	str	r8, [fp, #-36]	; 0xffffffdc
   1747c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17480:	str	r1, [r0, #8]
   17484:	ldr	r6, [r0, #4]
   17488:	cmp	r6, #0
   1748c:	beq	17510 <argp_failure@@Base+0x780>
   17490:	ldr	r9, [r0]
   17494:	mov	r7, r0
   17498:	ldrb	r0, [r9, #12]
   1749c:	tst	r0, #8
   174a0:	bne	17500 <argp_failure@@Base+0x770>
   174a4:	ldr	r5, [r9, #4]
   174a8:	sub	r0, r5, #1
   174ac:	cmp	r0, #254	; 0xfe
   174b0:	bhi	17500 <argp_failure@@Base+0x770>
   174b4:	ldrb	r4, [sl]
   174b8:	bl	1145c <__ctype_b_loc@plt>
   174bc:	cmp	r5, r4
   174c0:	bne	17500 <argp_failure@@Base+0x770>
   174c4:	ldr	r0, [r0]
   174c8:	add	r0, r0, r5, lsl #1
   174cc:	ldrh	r0, [r0]
   174d0:	ands	r0, r0, #16384	; 0x4000
   174d4:	ldr	r0, [sp, #36]	; 0x24
   174d8:	beq	17500 <argp_failure@@Base+0x770>
   174dc:	ldrb	r1, [r0], #1
   174e0:	cmp	r1, r4
   174e4:	beq	174fc <argp_failure@@Base+0x76c>
   174e8:	cmp	r0, r8
   174ec:	bcc	174dc <argp_failure@@Base+0x74c>
   174f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174f4:	strb	r4, [r0], #1
   174f8:	str	r0, [fp, #-36]	; 0xffffffdc
   174fc:	add	sl, sl, #1
   17500:	subs	r6, r6, #1
   17504:	add	r9, r9, #24
   17508:	bne	17498 <argp_failure@@Base+0x708>
   1750c:	b	17514 <argp_failure@@Base+0x784>
   17510:	mov	r7, r0
   17514:	ldr	r0, [sp, #32]
   17518:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1751c:	subs	r0, r0, #1
   17520:	str	r0, [sp, #32]
   17524:	mov	r0, r7
   17528:	add	r0, r7, #28
   1752c:	bne	1747c <argp_failure@@Base+0x6ec>
   17530:	b	175f4 <argp_failure@@Base+0x864>
   17534:	ldr	r1, [r6]
   17538:	ldr	r2, [r6, #8]
   1753c:	str	r1, [r9]
   17540:	stmib	r9, {r0, r2}
   17544:	mov	r0, #0
   17548:	str	r0, [r6, #4]
   1754c:	b	17674 <argp_failure@@Base+0x8e4>
   17550:	str	r8, [fp, #-36]	; 0xffffffdc
   17554:	b	175f4 <argp_failure@@Base+0x864>
   17558:	str	r8, [fp, #-36]	; 0xffffffdc
   1755c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17560:	str	r1, [r0, #8]
   17564:	ldr	r6, [r0, #4]
   17568:	cmp	r6, #0
   1756c:	beq	175d8 <argp_failure@@Base+0x848>
   17570:	mov	r8, r0
   17574:	ldr	r0, [r0]
   17578:	add	r4, r0, #12
   1757c:	ldrb	r0, [r4]
   17580:	tst	r0, #8
   17584:	bne	175c8 <argp_failure@@Base+0x838>
   17588:	ldr	r7, [r4, #-8]
   1758c:	sub	r0, r7, #1
   17590:	cmp	r0, #254	; 0xfe
   17594:	bhi	175c8 <argp_failure@@Base+0x838>
   17598:	ldrb	r5, [sl]
   1759c:	bl	1145c <__ctype_b_loc@plt>
   175a0:	cmp	r7, r5
   175a4:	bne	175c8 <argp_failure@@Base+0x838>
   175a8:	ldr	r0, [r0]
   175ac:	add	r0, r0, r7, lsl #1
   175b0:	ldrh	r0, [r0]
   175b4:	ands	r0, r0, #16384	; 0x4000
   175b8:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   175bc:	addne	sl, sl, #1
   175c0:	strbne	r5, [r0], #1
   175c4:	strne	r0, [fp, #-36]	; 0xffffffdc
   175c8:	add	r4, r4, #24
   175cc:	subs	r6, r6, #1
   175d0:	bne	1757c <argp_failure@@Base+0x7ec>
   175d4:	b	175dc <argp_failure@@Base+0x84c>
   175d8:	mov	r8, r0
   175dc:	ldr	r0, [sp, #32]
   175e0:	subs	r0, r0, #1
   175e4:	str	r0, [sp, #32]
   175e8:	mov	r0, r8
   175ec:	add	r0, r8, #28
   175f0:	bne	1755c <argp_failure@@Base+0x7cc>
   175f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   175f8:	mov	r0, #0
   175fc:	strb	r0, [r1]
   17600:	ldr	r0, [r9]
   17604:	bl	14258 <argp_parse@@Base+0x13b0>
   17608:	ldr	r0, [r9, #8]
   1760c:	bl	14258 <argp_parse@@Base+0x13b0>
   17610:	ldr	r0, [sp, #24]
   17614:	ldr	r6, [sp, #12]
   17618:	str	r0, [r9]
   1761c:	ldr	r0, [sp, #20]
   17620:	str	r0, [r9, #4]
   17624:	ldr	r0, [sp, #36]	; 0x24
   17628:	str	r0, [r9, #8]
   1762c:	ldr	r0, [r6, #12]
   17630:	cmp	r0, #0
   17634:	beq	1764c <argp_failure@@Base+0x8bc>
   17638:	ldr	r4, [r0, #24]
   1763c:	bl	14258 <argp_parse@@Base+0x13b0>
   17640:	cmp	r4, #0
   17644:	mov	r0, r4
   17648:	bne	17638 <argp_failure@@Base+0x8a8>
   1764c:	ldr	r0, [r6, #4]
   17650:	ldr	sl, [sp, #4]
   17654:	ldr	r8, [sp, #40]	; 0x28
   17658:	ldr	r7, [sp, #16]
   1765c:	cmp	r0, #0
   17660:	beq	17674 <argp_failure@@Base+0x8e4>
   17664:	ldr	r0, [r6]
   17668:	bl	14258 <argp_parse@@Base+0x13b0>
   1766c:	ldr	r0, [r6, #8]
   17670:	bl	14258 <argp_parse@@Base+0x13b0>
   17674:	mov	r0, r6
   17678:	bl	14258 <argp_parse@@Base+0x13b0>
   1767c:	ldr	r0, [r7, #16]!
   17680:	cmp	r0, #0
   17684:	bne	172b4 <argp_failure@@Base+0x524>
   17688:	b	172a4 <argp_failure@@Base+0x514>
   1768c:	movw	r0, #51695	; 0xc9ef
   17690:	movw	r1, #51511	; 0xc937
   17694:	movw	r3, #51720	; 0xca08
   17698:	movw	r2, #970	; 0x3ca
   1769c:	movt	r0, #1
   176a0:	movt	r1, #1
   176a4:	movt	r3, #1
   176a8:	bl	115c4 <__assert_fail@plt>
   176ac:	movw	r0, #51507	; 0xc933
   176b0:	movw	r1, #51511	; 0xc937
   176b4:	movw	r3, #51523	; 0xc943
   176b8:	movw	r2, #450	; 0x1c2
   176bc:	movt	r0, #1
   176c0:	movt	r1, #1
   176c4:	movt	r3, #1
   176c8:	bl	115c4 <__assert_fail@plt>
   176cc:	movw	r0, #51587	; 0xc983
   176d0:	movw	r1, #51511	; 0xc937
   176d4:	movw	r3, #51523	; 0xc943
   176d8:	mov	r2, #460	; 0x1cc
   176dc:	movt	r0, #1
   176e0:	movt	r1, #1
   176e4:	movt	r3, #1
   176e8:	bl	115c4 <__assert_fail@plt>
   176ec:	movw	r0, #51638	; 0xc9b6
   176f0:	movw	r1, #51511	; 0xc937
   176f4:	movw	r3, #51523	; 0xc943
   176f8:	mov	r2, #476	; 0x1dc
   176fc:	movt	r0, #1
   17700:	movt	r1, #1
   17704:	movt	r3, #1
   17708:	bl	115c4 <__assert_fail@plt>
   1770c:	movw	r0, #51643	; 0xc9bb
   17710:	movw	r1, #51511	; 0xc937
   17714:	movw	r3, #51720	; 0xca08
   17718:	mov	r2, #972	; 0x3cc
   1771c:	movt	r0, #1
   17720:	movt	r1, #1
   17724:	movt	r3, #1
   17728:	bl	115c4 <__assert_fail@plt>
   1772c:	push	{r4, r5, fp, lr}
   17730:	add	fp, sp, #8
   17734:	mov	r5, r1
   17738:	cmp	r0, #0
   1773c:	beq	17768 <argp_failure@@Base+0x9d8>
   17740:	mov	r1, #10
   17744:	bl	11480 <strchr@plt>
   17748:	mov	r4, r0
   1774c:	cmp	r0, #0
   17750:	movwne	r4, #1
   17754:	cmp	r5, #0
   17758:	ldrne	r1, [r5]
   1775c:	cmpne	r1, #0
   17760:	beq	1779c <argp_failure@@Base+0xa0c>
   17764:	b	1777c <argp_failure@@Base+0x9ec>
   17768:	mov	r4, #0
   1776c:	cmp	r5, #0
   17770:	ldrne	r1, [r5]
   17774:	cmpne	r1, #0
   17778:	beq	1779c <argp_failure@@Base+0xa0c>
   1777c:	add	r5, r5, #16
   17780:	ldr	r0, [r1, #8]
   17784:	ldr	r1, [r1, #16]
   17788:	bl	1772c <argp_failure@@Base+0x99c>
   1778c:	ldr	r1, [r5], #16
   17790:	add	r4, r0, r4
   17794:	cmp	r1, #0
   17798:	bne	17780 <argp_failure@@Base+0x9f0>
   1779c:	mov	r0, r4
   177a0:	pop	{r4, r5, fp, pc}
   177a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177a8:	add	fp, sp, #28
   177ac:	sub	sp, sp, #28
   177b0:	ldr	r4, [r0, #4]
   177b4:	str	r1, [fp, #-40]	; 0xffffffd8
   177b8:	cmp	r4, #0
   177bc:	beq	17b58 <argp_failure@@Base+0xdc8>
   177c0:	mov	r5, r0
   177c4:	ldr	r0, [r0, #8]
   177c8:	bl	11474 <strlen@plt>
   177cc:	add	r0, r0, #8
   177d0:	bic	r0, r0, #7
   177d4:	sub	r0, sp, r0
   177d8:	mov	sp, r0
   177dc:	ldr	r7, [r5]
   177e0:	str	r0, [fp, #-52]	; 0xffffffcc
   177e4:	str	r0, [fp, #-48]	; 0xffffffd0
   177e8:	str	r5, [fp, #-44]	; 0xffffffd4
   177ec:	ldr	r6, [r7, #4]
   177f0:	str	r4, [fp, #-36]	; 0xffffffdc
   177f4:	cmp	r6, #0
   177f8:	beq	1789c <argp_failure@@Base+0xb0c>
   177fc:	ldr	r4, [r7]
   17800:	ldr	r5, [r7, #8]
   17804:	mov	sl, r4
   17808:	b	17834 <argp_failure@@Base+0xaa4>
   1780c:	ldr	r0, [r4, #8]
   17810:	cmp	r0, #0
   17814:	bne	1788c <argp_failure@@Base+0xafc>
   17818:	ldr	r0, [r4, #12]
   1781c:	orr	r0, r0, r8
   17820:	tst	r0, #16
   17824:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   17828:	strbeq	r9, [r0], #1
   1782c:	streq	r0, [fp, #-48]	; 0xffffffd0
   17830:	b	1788c <argp_failure@@Base+0xafc>
   17834:	ldr	r8, [sl, #12]
   17838:	tst	r8, #8
   1783c:	bne	17890 <argp_failure@@Base+0xb00>
   17840:	ldr	r9, [sl, #4]
   17844:	sub	r0, r9, #1
   17848:	cmp	r0, #254	; 0xfe
   1784c:	bhi	17890 <argp_failure@@Base+0xb00>
   17850:	bl	1145c <__ctype_b_loc@plt>
   17854:	ldr	r0, [r0]
   17858:	add	r0, r0, r9, lsl #1
   1785c:	ldrb	r0, [r0, #1]
   17860:	tst	r0, #64	; 0x40
   17864:	beq	17890 <argp_failure@@Base+0xb00>
   17868:	ldrb	r0, [r5]
   1786c:	cmp	r9, r0
   17870:	bne	17890 <argp_failure@@Base+0xb00>
   17874:	tst	r8, #4
   17878:	moveq	r4, sl
   1787c:	tst	r8, #2
   17880:	ldreq	r0, [sl, #8]
   17884:	cmpeq	r0, #0
   17888:	beq	1780c <argp_failure@@Base+0xa7c>
   1788c:	add	r5, r5, #1
   17890:	subs	r6, r6, #1
   17894:	add	sl, sl, #24
   17898:	bne	17834 <argp_failure@@Base+0xaa4>
   1789c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   178a0:	ldr	r6, [fp, #-44]	; 0xffffffd4
   178a4:	add	r7, r7, #28
   178a8:	subs	r4, r4, #1
   178ac:	bne	177ec <argp_failure@@Base+0xa5c>
   178b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   178b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   178b8:	cmp	r1, r2
   178bc:	bls	178d8 <argp_failure@@Base+0xb48>
   178c0:	mov	r0, #0
   178c4:	strb	r0, [r1]
   178c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   178cc:	movw	r1, #51764	; 0xca34
   178d0:	movt	r1, #1
   178d4:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   178d8:	ldr	r5, [r6, #4]
   178dc:	cmp	r5, #0
   178e0:	beq	17b58 <argp_failure@@Base+0xdc8>
   178e4:	ldr	r8, [r6]
   178e8:	ldr	r9, [r8, #4]
   178ec:	cmp	r9, #0
   178f0:	beq	17a84 <argp_failure@@Base+0xcf4>
   178f4:	ldr	sl, [r8]
   178f8:	ldr	r4, [r8, #8]
   178fc:	str	sl, [fp, #-36]	; 0xffffffdc
   17900:	ldr	r6, [sl, #12]
   17904:	tst	r6, #8
   17908:	bne	17a78 <argp_failure@@Base+0xce8>
   1790c:	ldr	r7, [sl, #4]
   17910:	sub	r0, r7, #1
   17914:	cmp	r0, #254	; 0xfe
   17918:	bhi	17a78 <argp_failure@@Base+0xce8>
   1791c:	bl	1145c <__ctype_b_loc@plt>
   17920:	ldr	r0, [r0]
   17924:	add	r0, r0, r7, lsl #1
   17928:	ldrb	r0, [r0, #1]
   1792c:	tst	r0, #64	; 0x40
   17930:	beq	17a78 <argp_failure@@Base+0xce8>
   17934:	ldrb	r0, [r4]
   17938:	cmp	r7, r0
   1793c:	bne	17a78 <argp_failure@@Base+0xce8>
   17940:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17944:	tst	r6, #4
   17948:	moveq	r0, sl
   1794c:	tst	r6, #2
   17950:	str	r0, [fp, #-36]	; 0xffffffdc
   17954:	bne	17a74 <argp_failure@@Base+0xce4>
   17958:	ldr	r3, [sl, #8]
   1795c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17960:	cmp	r3, #0
   17964:	ldr	r0, [r0, #12]
   17968:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   1796c:	orr	r0, r0, r6
   17970:	ldreq	r3, [r1, #8]
   17974:	tst	r0, #16
   17978:	bne	17a74 <argp_failure@@Base+0xce4>
   1797c:	cmp	r3, #0
   17980:	beq	17a74 <argp_failure@@Base+0xce4>
   17984:	tst	r0, #1
   17988:	bne	17a14 <argp_failure@@Base+0xc84>
   1798c:	mov	r0, r3
   17990:	str	r3, [fp, #-48]	; 0xffffffd0
   17994:	bl	11474 <strlen@plt>
   17998:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1799c:	add	r6, r0, #6
   179a0:	ldr	r2, [r7, #24]
   179a4:	ldr	r0, [r7, #28]
   179a8:	ldr	r1, [r7, #16]
   179ac:	sub	r2, r0, r2
   179b0:	cmp	r2, r1
   179b4:	bls	179c4 <argp_failure@@Base+0xc34>
   179b8:	mov	r0, r7
   179bc:	bl	1a110 <argp_failure@@Base+0x3380>
   179c0:	ldr	r0, [r7, #28]
   179c4:	ldr	r3, [r7, #20]
   179c8:	ldr	r2, [r7, #8]
   179cc:	ldr	r1, [r7, #32]
   179d0:	cmp	r3, #0
   179d4:	addgt	r6, r6, r3
   179d8:	cmp	r6, r2
   179dc:	bcs	17a28 <argp_failure@@Base+0xc98>
   179e0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   179e4:	cmp	r0, r1
   179e8:	bcc	17a04 <argp_failure@@Base+0xc74>
   179ec:	mov	r0, r7
   179f0:	mov	r1, #1
   179f4:	bl	1a6b8 <argp_failure@@Base+0x3928>
   179f8:	cmp	r0, #0
   179fc:	beq	17a5c <argp_failure@@Base+0xccc>
   17a00:	ldr	r0, [r7, #28]
   17a04:	add	r1, r0, #1
   17a08:	str	r1, [r7, #28]
   17a0c:	mov	r1, #32
   17a10:	b	17a58 <argp_failure@@Base+0xcc8>
   17a14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a18:	movw	r1, #51771	; 0xca3b
   17a1c:	mov	r2, r7
   17a20:	movt	r1, #1
   17a24:	b	17a70 <argp_failure@@Base+0xce0>
   17a28:	ldr	r6, [fp, #-48]	; 0xffffffd0
   17a2c:	cmp	r0, r1
   17a30:	bcc	17a4c <argp_failure@@Base+0xcbc>
   17a34:	mov	r0, r7
   17a38:	mov	r1, #1
   17a3c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   17a40:	cmp	r0, #0
   17a44:	beq	17a5c <argp_failure@@Base+0xccc>
   17a48:	ldr	r0, [r7, #28]
   17a4c:	add	r1, r0, #1
   17a50:	str	r1, [r7, #28]
   17a54:	mov	r1, #10
   17a58:	strb	r1, [r0]
   17a5c:	ldr	r2, [sl, #4]
   17a60:	movw	r1, #51782	; 0xca46
   17a64:	mov	r0, r7
   17a68:	mov	r3, r6
   17a6c:	movt	r1, #1
   17a70:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   17a74:	add	r4, r4, #1
   17a78:	subs	r9, r9, #1
   17a7c:	add	sl, sl, #24
   17a80:	bne	17900 <argp_failure@@Base+0xb70>
   17a84:	subs	r5, r5, #1
   17a88:	add	r8, r8, #28
   17a8c:	bne	178e8 <argp_failure@@Base+0xb58>
   17a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a94:	ldr	r4, [r0, #4]
   17a98:	cmp	r4, #0
   17a9c:	beq	17b58 <argp_failure@@Base+0xdc8>
   17aa0:	ldr	r6, [r0]
   17aa4:	movw	sl, #51815	; 0xca67
   17aa8:	movw	r9, #51791	; 0xca4f
   17aac:	movt	sl, #1
   17ab0:	movt	r9, #1
   17ab4:	ldr	r7, [r6, #4]
   17ab8:	cmp	r7, #0
   17abc:	beq	17b4c <argp_failure@@Base+0xdbc>
   17ac0:	ldr	r8, [r6]
   17ac4:	mov	r5, r8
   17ac8:	ldr	r2, [r5]
   17acc:	cmp	r2, #0
   17ad0:	beq	17b24 <argp_failure@@Base+0xd94>
   17ad4:	ldr	r0, [r5, #12]
   17ad8:	tst	r0, #4
   17adc:	moveq	r8, r5
   17ae0:	tst	r0, #2
   17ae4:	bne	17b24 <argp_failure@@Base+0xd94>
   17ae8:	ldr	r3, [r5, #8]
   17aec:	ldr	r1, [r8, #12]
   17af0:	cmp	r3, #0
   17af4:	orr	r0, r1, r0
   17af8:	ldreq	r3, [r8, #8]
   17afc:	tst	r0, #16
   17b00:	bne	17b24 <argp_failure@@Base+0xd94>
   17b04:	cmp	r3, #0
   17b08:	beq	17b34 <argp_failure@@Base+0xda4>
   17b0c:	tst	r0, #1
   17b10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b14:	movne	r1, r9
   17b18:	movweq	r1, #51804	; 0xca5c
   17b1c:	movteq	r1, #1
   17b20:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   17b24:	subs	r7, r7, #1
   17b28:	add	r5, r5, #24
   17b2c:	bne	17ac8 <argp_failure@@Base+0xd38>
   17b30:	b	17b4c <argp_failure@@Base+0xdbc>
   17b34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b38:	mov	r1, sl
   17b3c:	bl	1a7a4 <argp_failure@@Base+0x3a14>
   17b40:	subs	r7, r7, #1
   17b44:	add	r5, r5, #24
   17b48:	bne	17ac8 <argp_failure@@Base+0xd38>
   17b4c:	subs	r4, r4, #1
   17b50:	add	r6, r6, #28
   17b54:	bne	17ab4 <argp_failure@@Base+0xd24>
   17b58:	sub	sp, fp, #28
   17b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b64:	add	fp, sp, #28
   17b68:	sub	sp, sp, #28
   17b6c:	ldr	r6, [r0, #8]
   17b70:	ldr	r5, [r0, #16]
   17b74:	ldr	sl, [r2]
   17b78:	mov	r4, r3
   17b7c:	mov	r9, r2
   17b80:	mov	r8, r1
   17b84:	mov	r7, r0
   17b88:	cmp	r0, #0
   17b8c:	mov	r0, r6
   17b90:	beq	17bc8 <argp_failure@@Base+0xe38>
   17b94:	ldr	r0, [r7, #20]
   17b98:	cmp	r0, #0
   17b9c:	mov	r0, r6
   17ba0:	beq	17bc8 <argp_failure@@Base+0xe38>
   17ba4:	mov	r0, r7
   17ba8:	mov	r1, r8
   17bac:	bl	13b78 <argp_parse@@Base+0xcd0>
   17bb0:	ldr	r3, [r7, #20]
   17bb4:	mov	r2, r0
   17bb8:	movw	r0, #6
   17bbc:	mov	r1, r6
   17bc0:	movt	r0, #512	; 0x200
   17bc4:	blx	r3
   17bc8:	cmp	r0, #0
   17bcc:	str	sl, [sp, #24]
   17bd0:	beq	17c30 <argp_failure@@Base+0xea0>
   17bd4:	mov	r1, #10
   17bd8:	mov	sl, r0
   17bdc:	bl	1133c <strchrnul@plt>
   17be0:	mov	r7, r0
   17be4:	ldrb	r0, [r0]
   17be8:	cmp	r0, #0
   17bec:	add	r0, sp, #12
   17bf0:	stm	r0, {r5, r6, sl}
   17bf4:	beq	17c4c <argp_failure@@Base+0xebc>
   17bf8:	ldr	r0, [sp, #24]
   17bfc:	ldrb	r6, [r0]
   17c00:	cmp	r6, #0
   17c04:	beq	17c54 <argp_failure@@Base+0xec4>
   17c08:	mov	r5, #0
   17c0c:	add	sl, r7, #1
   17c10:	mov	r1, #10
   17c14:	mov	r0, sl
   17c18:	bl	1133c <strchrnul@plt>
   17c1c:	add	r5, r5, #1
   17c20:	mov	r7, r0
   17c24:	cmp	r5, r6
   17c28:	bcc	17c0c <argp_failure@@Base+0xe7c>
   17c2c:	b	17c58 <argp_failure@@Base+0xec8>
   17c30:	mov	r7, #0
   17c34:	mov	sl, #0
   17c38:	cmp	r5, #0
   17c3c:	ldrne	r0, [r5]
   17c40:	cmpne	r0, #0
   17c44:	beq	17d98 <argp_failure@@Base+0x1008>
   17c48:	b	17db4 <argp_failure@@Base+0x1024>
   17c4c:	mov	r0, #0
   17c50:	b	17c68 <argp_failure@@Base+0xed8>
   17c54:	ldr	sl, [sp, #20]
   17c58:	ldr	r0, [r9]
   17c5c:	add	r0, r0, #1
   17c60:	str	r0, [r9]
   17c64:	mov	r0, #1
   17c68:	ldr	r5, [fp, #8]
   17c6c:	str	r0, [sp, #8]
   17c70:	add	r0, r7, #1
   17c74:	sub	r6, r0, sl
   17c78:	ldr	r2, [r5, #24]
   17c7c:	ldr	r0, [r5, #28]
   17c80:	ldr	r1, [r5, #16]
   17c84:	sub	r2, r0, r2
   17c88:	cmp	r2, r1
   17c8c:	bls	17c9c <argp_failure@@Base+0xf0c>
   17c90:	mov	r0, r5
   17c94:	bl	1a110 <argp_failure@@Base+0x3380>
   17c98:	ldr	r0, [r5, #28]
   17c9c:	ldr	r3, [r5, #20]
   17ca0:	ldr	r2, [r5, #8]
   17ca4:	ldr	r1, [r5, #32]
   17ca8:	cmp	r3, #0
   17cac:	addgt	r6, r6, r3
   17cb0:	cmp	r6, r2
   17cb4:	bcs	17ce8 <argp_failure@@Base+0xf58>
   17cb8:	cmp	r0, r1
   17cbc:	bcc	17cd8 <argp_failure@@Base+0xf48>
   17cc0:	mov	r0, r5
   17cc4:	mov	r1, #1
   17cc8:	bl	1a6b8 <argp_failure@@Base+0x3928>
   17ccc:	cmp	r0, #0
   17cd0:	beq	17d18 <argp_failure@@Base+0xf88>
   17cd4:	ldr	r0, [r5, #28]
   17cd8:	add	r1, r0, #1
   17cdc:	str	r1, [r5, #28]
   17ce0:	mov	r1, #32
   17ce4:	b	17d14 <argp_failure@@Base+0xf84>
   17ce8:	cmp	r0, r1
   17cec:	bcc	17d08 <argp_failure@@Base+0xf78>
   17cf0:	mov	r0, r5
   17cf4:	mov	r1, #1
   17cf8:	bl	1a6b8 <argp_failure@@Base+0x3928>
   17cfc:	cmp	r0, #0
   17d00:	beq	17d18 <argp_failure@@Base+0xf88>
   17d04:	ldr	r0, [r5, #28]
   17d08:	add	r1, r0, #1
   17d0c:	str	r1, [r5, #28]
   17d10:	mov	r1, #10
   17d14:	strb	r1, [r0]
   17d18:	mov	r6, r5
   17d1c:	sub	r5, r7, sl
   17d20:	ldr	r0, [r6, #28]
   17d24:	ldr	r1, [r6, #32]
   17d28:	add	r2, r0, r5
   17d2c:	cmp	r2, r1
   17d30:	bls	17d50 <argp_failure@@Base+0xfc0>
   17d34:	mov	r0, r6
   17d38:	mov	r1, r5
   17d3c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   17d40:	cmp	r0, #0
   17d44:	beq	17d68 <argp_failure@@Base+0xfd8>
   17d48:	ldr	r6, [fp, #8]
   17d4c:	ldr	r0, [r6, #28]
   17d50:	mov	r1, sl
   17d54:	mov	r2, r5
   17d58:	bl	11384 <memcpy@plt>
   17d5c:	ldr	r0, [r6, #28]
   17d60:	add	r0, r0, r5
   17d64:	str	r0, [r6, #28]
   17d68:	ldr	r0, [sp, #16]
   17d6c:	ldr	r1, [sp, #20]
   17d70:	cmp	r1, r0
   17d74:	beq	17d80 <argp_failure@@Base+0xff0>
   17d78:	mov	r0, r1
   17d7c:	bl	14258 <argp_parse@@Base+0x13b0>
   17d80:	ldr	r5, [sp, #12]
   17d84:	ldr	sl, [sp, #8]
   17d88:	cmp	r5, #0
   17d8c:	ldrne	r0, [r5]
   17d90:	cmpne	r0, #0
   17d94:	bne	17db4 <argp_failure@@Base+0x1024>
   17d98:	cmp	sl, #0
   17d9c:	cmpne	r4, #0
   17da0:	bne	17df4 <argp_failure@@Base+0x1064>
   17da4:	clz	r0, r4
   17da8:	lsr	r0, r0, #5
   17dac:	sub	sp, fp, #28
   17db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17db4:	add	r6, r5, #16
   17db8:	ldr	r5, [fp, #8]
   17dbc:	mov	r1, r8
   17dc0:	mov	r2, r9
   17dc4:	mov	r3, r4
   17dc8:	str	r5, [sp]
   17dcc:	bl	17b60 <argp_failure@@Base+0xdd0>
   17dd0:	clz	r1, r0
   17dd4:	ldr	r0, [r6], #16
   17dd8:	lsr	r4, r1, #5
   17ddc:	cmp	r0, #0
   17de0:	bne	17dbc <argp_failure@@Base+0x102c>
   17de4:	lsr	r4, r1, #5
   17de8:	cmp	sl, #0
   17dec:	cmpne	r4, #0
   17df0:	beq	17da4 <argp_failure@@Base+0x1014>
   17df4:	ldr	r2, [sp, #24]
   17df8:	ldrb	r1, [r7]
   17dfc:	ldrb	r0, [r2]
   17e00:	cmp	r1, #0
   17e04:	beq	17e24 <argp_failure@@Base+0x1094>
   17e08:	add	r0, r0, #1
   17e0c:	mov	r4, #0
   17e10:	strb	r0, [r2]
   17e14:	clz	r0, r4
   17e18:	lsr	r0, r0, #5
   17e1c:	sub	sp, fp, #28
   17e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e24:	cmp	r0, #0
   17e28:	movne	r0, #0
   17e2c:	strbne	r0, [r2]
   17e30:	clz	r0, r4
   17e34:	lsr	r0, r0, #5
   17e38:	sub	sp, fp, #28
   17e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e44:	add	fp, sp, #28
   17e48:	sub	sp, sp, #28
   17e4c:	ldr	r4, [r0, #12]
   17e50:	mov	r5, r0
   17e54:	ldr	r0, [r0, #16]
   17e58:	mov	r8, r2
   17e5c:	mov	r6, #0
   17e60:	str	r3, [sp, #20]
   17e64:	str	r1, [sp, #24]
   17e68:	cmp	r4, #0
   17e6c:	str	r0, [sp, #16]
   17e70:	beq	17eac <argp_failure@@Base+0x111c>
   17e74:	mov	r0, r4
   17e78:	mov	r1, #11
   17e7c:	bl	11480 <strchr@plt>
   17e80:	cmp	r0, #0
   17e84:	mov	r9, r0
   17e88:	mov	r7, r0
   17e8c:	subne	r9, r9, r4
   17e90:	cmp	r8, #0
   17e94:	movne	r9, #0
   17e98:	cmp	r0, #0
   17e9c:	addne	r7, r7, #1
   17ea0:	cmp	r8, #0
   17ea4:	moveq	r7, r4
   17ea8:	b	17eb4 <argp_failure@@Base+0x1124>
   17eac:	mov	r9, #0
   17eb0:	mov	r7, #0
   17eb4:	ldr	r0, [r5, #20]
   17eb8:	movw	r4, #1
   17ebc:	movt	r4, #512	; 0x200
   17ec0:	cmp	r0, #0
   17ec4:	beq	17fcc <argp_failure@@Base+0x123c>
   17ec8:	cmp	r9, #0
   17ecc:	beq	17ee0 <argp_failure@@Base+0x1150>
   17ed0:	mov	r0, r7
   17ed4:	mov	r1, r9
   17ed8:	bl	11378 <strndup@plt>
   17edc:	mov	r7, r0
   17ee0:	ldr	r1, [sp, #24]
   17ee4:	mov	r0, r5
   17ee8:	bl	13b78 <argp_parse@@Base+0xcd0>
   17eec:	ldr	r3, [r5, #20]
   17ef0:	mov	r6, r0
   17ef4:	cmp	r8, #0
   17ef8:	mov	r0, r4
   17efc:	mov	r1, r7
   17f00:	addne	r0, r0, #1
   17f04:	mov	r2, r6
   17f08:	blx	r3
   17f0c:	mov	r1, r0
   17f10:	cmp	r1, #0
   17f14:	beq	17fd8 <argp_failure@@Base+0x1248>
   17f18:	ldr	r0, [sp, #20]
   17f1c:	str	r1, [sp, #12]
   17f20:	cmp	r0, #0
   17f24:	beq	17f6c <argp_failure@@Base+0x11dc>
   17f28:	ldr	r0, [fp, #12]
   17f2c:	ldr	r2, [r0, #28]
   17f30:	ldr	r1, [r0, #32]
   17f34:	cmp	r2, r1
   17f38:	bcc	17f58 <argp_failure@@Base+0x11c8>
   17f3c:	mov	r1, #1
   17f40:	bl	1a6b8 <argp_failure@@Base+0x3928>
   17f44:	ldr	r1, [sp, #12]
   17f48:	cmp	r0, #0
   17f4c:	beq	17f6c <argp_failure@@Base+0x11dc>
   17f50:	ldr	r0, [fp, #12]
   17f54:	ldr	r2, [r0, #28]
   17f58:	add	r1, r2, #1
   17f5c:	str	r1, [r0, #28]
   17f60:	mov	r1, #10
   17f64:	strb	r1, [r2]
   17f68:	ldr	r1, [sp, #12]
   17f6c:	cmp	r9, #0
   17f70:	str	r6, [sp, #8]
   17f74:	beq	17fe8 <argp_failure@@Base+0x1258>
   17f78:	cmp	r1, r7
   17f7c:	bne	17fe8 <argp_failure@@Base+0x1258>
   17f80:	ldr	r6, [fp, #12]
   17f84:	ldr	r0, [r6, #28]!
   17f88:	ldr	r2, [r6, #4]
   17f8c:	add	r1, r0, r9
   17f90:	cmp	r1, r2
   17f94:	bls	17fb0 <argp_failure@@Base+0x1220>
   17f98:	ldr	r0, [fp, #12]
   17f9c:	mov	r1, r9
   17fa0:	bl	1a6b8 <argp_failure@@Base+0x3928>
   17fa4:	cmp	r0, #0
   17fa8:	beq	18328 <argp_failure@@Base+0x1598>
   17fac:	ldr	r0, [r6]
   17fb0:	mov	r1, r7
   17fb4:	mov	r2, r9
   17fb8:	mov	sl, r4
   17fbc:	bl	11384 <memcpy@plt>
   17fc0:	ldr	r0, [r6]
   17fc4:	add	r0, r0, r9
   17fc8:	b	18048 <argp_failure@@Base+0x12b8>
   17fcc:	mov	r1, r7
   17fd0:	cmp	r1, #0
   17fd4:	bne	17f18 <argp_failure@@Base+0x1188>
   17fd8:	mov	sl, #0
   17fdc:	cmp	r9, #0
   17fe0:	bne	180e8 <argp_failure@@Base+0x1358>
   17fe4:	b	180f8 <argp_failure@@Base+0x1368>
   17fe8:	mov	r0, r1
   17fec:	mov	sl, r4
   17ff0:	bl	11474 <strlen@plt>
   17ff4:	ldr	r1, [fp, #12]
   17ff8:	cmp	r0, #0
   17ffc:	add	r6, r1, #28
   18000:	beq	1804c <argp_failure@@Base+0x12bc>
   18004:	mov	r4, r0
   18008:	ldr	r0, [r1, #28]
   1800c:	ldr	r1, [r1, #32]
   18010:	add	r2, r0, r4
   18014:	cmp	r2, r1
   18018:	bls	18034 <argp_failure@@Base+0x12a4>
   1801c:	ldr	r0, [fp, #12]
   18020:	mov	r1, r4
   18024:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18028:	cmp	r0, #0
   1802c:	beq	1804c <argp_failure@@Base+0x12bc>
   18030:	ldr	r0, [r6]
   18034:	ldr	r1, [sp, #12]
   18038:	mov	r2, r4
   1803c:	bl	11384 <memcpy@plt>
   18040:	ldr	r0, [r6]
   18044:	add	r0, r0, r4
   18048:	str	r0, [r6]
   1804c:	ldr	r4, [fp, #12]
   18050:	ldr	r2, [r6]
   18054:	ldr	r1, [r4, #24]
   18058:	ldr	r0, [r4, #16]
   1805c:	sub	r1, r2, r1
   18060:	cmp	r1, r0
   18064:	bls	18070 <argp_failure@@Base+0x12e0>
   18068:	mov	r0, r4
   1806c:	bl	1a110 <argp_failure@@Base+0x3380>
   18070:	ldr	r1, [r4, #20]
   18074:	ldr	r0, [r4, #4]
   18078:	mov	r4, sl
   1807c:	bic	r1, r1, r1, asr #31
   18080:	cmp	r1, r0
   18084:	bls	180c8 <argp_failure@@Base+0x1338>
   18088:	ldr	r0, [fp, #12]
   1808c:	mov	r1, r0
   18090:	ldr	r0, [r0, #28]
   18094:	ldr	r1, [r1, #32]
   18098:	cmp	r0, r1
   1809c:	bcc	180b8 <argp_failure@@Base+0x1328>
   180a0:	ldr	r0, [fp, #12]
   180a4:	mov	r1, #1
   180a8:	bl	1a6b8 <argp_failure@@Base+0x3928>
   180ac:	cmp	r0, #0
   180b0:	beq	180c8 <argp_failure@@Base+0x1338>
   180b4:	ldr	r0, [r6]
   180b8:	add	r1, r0, #1
   180bc:	str	r1, [r6]
   180c0:	mov	r1, #10
   180c4:	strb	r1, [r0]
   180c8:	ldr	r0, [sp, #12]
   180cc:	mov	sl, #1
   180d0:	cmp	r0, r7
   180d4:	beq	180dc <argp_failure@@Base+0x134c>
   180d8:	bl	14258 <argp_parse@@Base+0x13b0>
   180dc:	ldr	r6, [sp, #8]
   180e0:	cmp	r9, #0
   180e4:	beq	180f8 <argp_failure@@Base+0x1368>
   180e8:	cmp	r7, #0
   180ec:	ldrne	r0, [r5, #20]
   180f0:	cmpne	r0, #0
   180f4:	bne	1818c <argp_failure@@Base+0x13fc>
   180f8:	ldr	r9, [fp, #12]
   180fc:	cmp	r8, #0
   18100:	beq	181a0 <argp_failure@@Base+0x1410>
   18104:	ldr	r3, [r5, #20]
   18108:	cmp	r3, #0
   1810c:	beq	181a0 <argp_failure@@Base+0x1410>
   18110:	add	r0, r4, #3
   18114:	mov	r1, #0
   18118:	mov	r2, r6
   1811c:	blx	r3
   18120:	cmp	r0, #0
   18124:	beq	181a0 <argp_failure@@Base+0x1410>
   18128:	mov	r6, r0
   1812c:	ldr	r0, [sp, #20]
   18130:	ldr	r5, [sp, #24]
   18134:	orrs	r0, sl, r0
   18138:	beq	18248 <argp_failure@@Base+0x14b8>
   1813c:	mov	r7, r9
   18140:	ldr	r0, [r7, #28]!
   18144:	ldr	r1, [r7, #4]
   18148:	cmp	r0, r1
   1814c:	bcc	18168 <argp_failure@@Base+0x13d8>
   18150:	mov	r0, r9
   18154:	mov	r1, #1
   18158:	bl	1a6b8 <argp_failure@@Base+0x3928>
   1815c:	cmp	r0, #0
   18160:	beq	18178 <argp_failure@@Base+0x13e8>
   18164:	ldr	r0, [r7]
   18168:	add	r1, r0, #1
   1816c:	str	r1, [r7]
   18170:	mov	r1, #10
   18174:	strb	r1, [r0]
   18178:	mov	r0, r6
   1817c:	bl	11474 <strlen@plt>
   18180:	cmp	r0, #0
   18184:	bne	1825c <argp_failure@@Base+0x14cc>
   18188:	b	182a4 <argp_failure@@Base+0x1514>
   1818c:	mov	r0, r7
   18190:	bl	14258 <argp_parse@@Base+0x13b0>
   18194:	ldr	r9, [fp, #12]
   18198:	cmp	r8, #0
   1819c:	bne	18104 <argp_failure@@Base+0x1374>
   181a0:	ldr	r5, [sp, #24]
   181a4:	ldr	r1, [sp, #16]
   181a8:	cmp	r1, #0
   181ac:	ldrne	r0, [r1]
   181b0:	cmpne	r0, #0
   181b4:	bne	181c4 <argp_failure@@Base+0x1434>
   181b8:	mov	r0, sl
   181bc:	sub	sp, fp, #28
   181c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181c4:	ldr	r4, [fp, #8]
   181c8:	cmp	r4, #0
   181cc:	beq	18210 <argp_failure@@Base+0x1480>
   181d0:	ldr	r7, [sp, #20]
   181d4:	add	r6, r1, #16
   181d8:	cmp	r7, #0
   181dc:	movwne	r7, #1
   181e0:	cmp	sl, #0
   181e4:	bne	181b8 <argp_failure@@Base+0x1428>
   181e8:	mov	r1, r5
   181ec:	mov	r2, r8
   181f0:	mov	r3, r7
   181f4:	stm	sp, {r4, r9}
   181f8:	bl	17e40 <argp_failure@@Base+0x10b0>
   181fc:	mov	sl, r0
   18200:	ldr	r0, [r6], #16
   18204:	cmp	r0, #0
   18208:	bne	181e0 <argp_failure@@Base+0x1450>
   1820c:	b	181b8 <argp_failure@@Base+0x1428>
   18210:	ldr	r7, [sp, #20]
   18214:	add	r4, r1, #16
   18218:	mov	r6, #0
   1821c:	orrs	r3, sl, r7
   18220:	mov	r1, r5
   18224:	mov	r2, r8
   18228:	stm	sp, {r6, r9}
   1822c:	movwne	r3, #1
   18230:	bl	17e40 <argp_failure@@Base+0x10b0>
   18234:	orr	sl, r0, sl
   18238:	ldr	r0, [r4], #16
   1823c:	cmp	r0, #0
   18240:	bne	1821c <argp_failure@@Base+0x148c>
   18244:	b	181b8 <argp_failure@@Base+0x1428>
   18248:	mov	r0, r6
   1824c:	bl	11474 <strlen@plt>
   18250:	add	r7, r9, #28
   18254:	cmp	r0, #0
   18258:	beq	182a4 <argp_failure@@Base+0x1514>
   1825c:	mov	r4, r0
   18260:	ldr	r0, [r9, #28]
   18264:	ldr	r1, [r9, #32]
   18268:	add	r2, r0, r4
   1826c:	cmp	r2, r1
   18270:	bls	1828c <argp_failure@@Base+0x14fc>
   18274:	mov	r0, r9
   18278:	mov	r1, r4
   1827c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18280:	cmp	r0, #0
   18284:	beq	182a4 <argp_failure@@Base+0x1514>
   18288:	ldr	r0, [r7]
   1828c:	mov	r1, r6
   18290:	mov	r2, r4
   18294:	bl	11384 <memcpy@plt>
   18298:	ldr	r0, [r7]
   1829c:	add	r0, r0, r4
   182a0:	str	r0, [r7]
   182a4:	mov	r0, r6
   182a8:	bl	14258 <argp_parse@@Base+0x13b0>
   182ac:	ldr	r1, [r9, #24]
   182b0:	ldr	r2, [r7]
   182b4:	ldr	r0, [r9, #16]
   182b8:	sub	r1, r2, r1
   182bc:	cmp	r1, r0
   182c0:	bls	182cc <argp_failure@@Base+0x153c>
   182c4:	mov	r0, r9
   182c8:	bl	1a110 <argp_failure@@Base+0x3380>
   182cc:	ldr	r1, [r9, #20]
   182d0:	ldr	r0, [r9, #4]
   182d4:	mov	sl, #1
   182d8:	bic	r1, r1, r1, asr #31
   182dc:	cmp	r1, r0
   182e0:	bls	181a4 <argp_failure@@Base+0x1414>
   182e4:	ldr	r0, [r9, #28]
   182e8:	ldr	r1, [r9, #32]
   182ec:	cmp	r0, r1
   182f0:	bcc	18310 <argp_failure@@Base+0x1580>
   182f4:	mov	r0, r9
   182f8:	mov	r1, #1
   182fc:	mov	sl, #1
   18300:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18304:	cmp	r0, #0
   18308:	beq	181a4 <argp_failure@@Base+0x1414>
   1830c:	ldr	r0, [r7]
   18310:	add	r1, r0, #1
   18314:	mov	sl, #1
   18318:	str	r1, [r7]
   1831c:	mov	r1, #10
   18320:	strb	r1, [r0]
   18324:	b	181a4 <argp_failure@@Base+0x1414>
   18328:	mov	sl, r4
   1832c:	b	1804c <argp_failure@@Base+0x12bc>
   18330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18334:	add	fp, sp, #28
   18338:	sub	sp, sp, #28
   1833c:	mov	r7, r0
   18340:	ldr	r0, [r0, #16]
   18344:	mov	r5, r1
   18348:	cmp	r0, #0
   1834c:	beq	18394 <argp_failure@@Base+0x1604>
   18350:	mov	r2, r0
   18354:	mov	r1, r2
   18358:	ldr	r2, [r2, #12]
   1835c:	cmp	r2, #0
   18360:	bne	18354 <argp_failure@@Base+0x15c4>
   18364:	add	r2, r1, #8
   18368:	ldr	r1, [r5, #16]
   1836c:	ldr	r3, [r2]
   18370:	cmp	r1, #0
   18374:	beq	183a8 <argp_failure@@Base+0x1618>
   18378:	mov	r2, r1
   1837c:	mov	r6, r2
   18380:	ldr	r2, [r2, #12]
   18384:	cmp	r2, #0
   18388:	bne	1837c <argp_failure@@Base+0x15ec>
   1838c:	add	r2, r6, #8
   18390:	b	183ac <argp_failure@@Base+0x161c>
   18394:	add	r2, r7, #12
   18398:	ldr	r1, [r5, #16]
   1839c:	ldr	r3, [r2]
   183a0:	cmp	r1, #0
   183a4:	bne	18378 <argp_failure@@Base+0x15e8>
   183a8:	add	r2, r5, #12
   183ac:	ldr	r6, [r2]
   183b0:	orr	r4, r6, r3
   183b4:	sub	r2, r3, r6
   183b8:	cmn	r4, #1
   183bc:	mov	r4, r2
   183c0:	suble	r4, r6, r3
   183c4:	and	r3, r6, r3
   183c8:	cmp	r3, #0
   183cc:	movlt	r4, r2
   183d0:	cmp	r4, #0
   183d4:	bne	183f4 <argp_failure@@Base+0x1664>
   183d8:	cmp	r0, #0
   183dc:	mov	r4, r0
   183e0:	movwne	r4, #1
   183e4:	cmp	r1, #0
   183e8:	subne	r4, r4, #1
   183ec:	cmp	r4, #0
   183f0:	beq	18400 <argp_failure@@Base+0x1670>
   183f4:	mov	r0, r4
   183f8:	sub	sp, fp, #28
   183fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18400:	cmp	r0, #0
   18404:	beq	18484 <argp_failure@@Base+0x16f4>
   18408:	ldr	r3, [r1, #20]
   1840c:	ldr	r2, [r0, #20]
   18410:	cmp	r2, r3
   18414:	ble	18444 <argp_failure@@Base+0x16b4>
   18418:	ldr	r0, [r0, #12]
   1841c:	ldr	r2, [r0, #20]
   18420:	cmp	r2, r3
   18424:	bgt	18418 <argp_failure@@Base+0x1688>
   18428:	bl	1888c <argp_failure@@Base+0x1afc>
   1842c:	mov	r4, r0
   18430:	cmp	r0, #0
   18434:	movweq	r4, #1
   18438:	mov	r0, r4
   1843c:	sub	sp, fp, #28
   18440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18444:	bge	18474 <argp_failure@@Base+0x16e4>
   18448:	ldr	r1, [r1, #12]
   1844c:	ldr	r3, [r1, #20]
   18450:	cmp	r2, r3
   18454:	blt	18448 <argp_failure@@Base+0x16b8>
   18458:	bl	1888c <argp_failure@@Base+0x1afc>
   1845c:	mov	r4, r0
   18460:	cmp	r0, #0
   18464:	mvneq	r4, #0
   18468:	mov	r0, r4
   1846c:	sub	sp, fp, #28
   18470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18474:	bl	1888c <argp_failure@@Base+0x1afc>
   18478:	mov	r4, r0
   1847c:	cmp	r0, #0
   18480:	bne	183f4 <argp_failure@@Base+0x1664>
   18484:	ldr	r0, [r7, #12]
   18488:	ldr	r1, [r5, #12]
   1848c:	orr	r2, r1, r0
   18490:	sub	r3, r0, r1
   18494:	cmn	r2, #1
   18498:	mov	r4, r3
   1849c:	suble	r4, r1, r0
   184a0:	and	r0, r1, r0
   184a4:	cmp	r0, #0
   184a8:	movlt	r4, r3
   184ac:	cmp	r4, #0
   184b0:	bne	183f4 <argp_failure@@Base+0x1664>
   184b4:	ldr	r4, [r7, #4]
   184b8:	ldr	sl, [r7]
   184bc:	mov	r9, #0
   184c0:	cmp	r4, #0
   184c4:	beq	184f8 <argp_failure@@Base+0x1768>
   184c8:	add	r0, sl, #12
   184cc:	mov	r1, r4
   184d0:	ldr	r9, [r0, #-12]
   184d4:	cmp	r9, #0
   184d8:	beq	184e8 <argp_failure@@Base+0x1758>
   184dc:	ldrb	r2, [r0]
   184e0:	tst	r2, #2
   184e4:	beq	184f8 <argp_failure@@Base+0x1768>
   184e8:	add	r0, r0, #24
   184ec:	subs	r1, r1, #1
   184f0:	bne	184d0 <argp_failure@@Base+0x1740>
   184f4:	mov	r9, #0
   184f8:	ldr	r3, [r5, #4]
   184fc:	ldr	ip, [r5]
   18500:	cmp	r3, #0
   18504:	beq	18534 <argp_failure@@Base+0x17a4>
   18508:	add	r0, ip, #12
   1850c:	mov	r1, r3
   18510:	ldr	r6, [r0, #-12]
   18514:	cmp	r6, #0
   18518:	beq	18528 <argp_failure@@Base+0x1798>
   1851c:	ldrb	r2, [r0]
   18520:	tst	r2, #2
   18524:	beq	18538 <argp_failure@@Base+0x17a8>
   18528:	add	r0, r0, #24
   1852c:	subs	r1, r1, #1
   18530:	bne	18510 <argp_failure@@Base+0x1780>
   18534:	mov	r6, #0
   18538:	ldr	r1, [sl, #12]
   1853c:	mov	r8, #0
   18540:	cmp	r9, #0
   18544:	str	r4, [sp, #12]
   18548:	str	r3, [sp, #16]
   1854c:	str	sl, [sp, #8]
   18550:	str	r1, [sp, #24]
   18554:	beq	185cc <argp_failure@@Base+0x183c>
   18558:	ands	r0, r1, #8
   1855c:	beq	185cc <argp_failure@@Base+0x183c>
   18560:	str	ip, [sp, #20]
   18564:	bl	1145c <__ctype_b_loc@plt>
   18568:	ldrb	r1, [r9]
   1856c:	ldr	r0, [r0]
   18570:	add	r2, r0, r1, lsl #1
   18574:	ldrb	r2, [r2, #1]
   18578:	tst	r2, #32
   1857c:	beq	18594 <argp_failure@@Base+0x1804>
   18580:	ldrb	r1, [r9, #1]!
   18584:	add	r2, r0, r1, lsl #1
   18588:	ldrb	r2, [r2, #1]
   1858c:	tst	r2, #32
   18590:	bne	18580 <argp_failure@@Base+0x17f0>
   18594:	ldr	ip, [sp, #20]
   18598:	subs	r4, r1, #45	; 0x2d
   1859c:	movwne	r4, #1
   185a0:	cmp	r1, #0
   185a4:	beq	185c4 <argp_failure@@Base+0x1834>
   185a8:	uxtb	r1, r1
   185ac:	ldrb	r1, [r0, r1, lsl #1]
   185b0:	tst	r1, #8
   185b4:	bne	185c4 <argp_failure@@Base+0x1834>
   185b8:	ldrb	r1, [r9, #1]!
   185bc:	cmp	r1, #0
   185c0:	bne	185a8 <argp_failure@@Base+0x1818>
   185c4:	ldr	r1, [sp, #24]
   185c8:	b	185d0 <argp_failure@@Base+0x1840>
   185cc:	mov	r4, #0
   185d0:	ldr	r0, [ip, #12]
   185d4:	cmp	r6, #0
   185d8:	str	r0, [sp, #4]
   185dc:	andsne	r0, r0, #8
   185e0:	beq	1864c <argp_failure@@Base+0x18bc>
   185e4:	mov	sl, ip
   185e8:	bl	1145c <__ctype_b_loc@plt>
   185ec:	ldrb	r1, [r6]
   185f0:	ldr	r0, [r0]
   185f4:	add	r2, r0, r1, lsl #1
   185f8:	ldrb	r2, [r2, #1]
   185fc:	tst	r2, #32
   18600:	beq	18618 <argp_failure@@Base+0x1888>
   18604:	ldrb	r1, [r6, #1]!
   18608:	add	r2, r0, r1, lsl #1
   1860c:	ldrb	r2, [r2, #1]
   18610:	tst	r2, #32
   18614:	bne	18604 <argp_failure@@Base+0x1874>
   18618:	subs	r8, r1, #45	; 0x2d
   1861c:	mov	ip, sl
   18620:	movwne	r8, #1
   18624:	cmp	r1, #0
   18628:	beq	18648 <argp_failure@@Base+0x18b8>
   1862c:	uxtb	r1, r1
   18630:	ldrb	r1, [r0, r1, lsl #1]
   18634:	tst	r1, #8
   18638:	bne	18648 <argp_failure@@Base+0x18b8>
   1863c:	ldrb	r1, [r6, #1]!
   18640:	cmp	r1, #0
   18644:	bne	1862c <argp_failure@@Base+0x189c>
   18648:	ldr	r1, [sp, #24]
   1864c:	subs	r4, r4, r8
   18650:	bne	183f4 <argp_failure@@Base+0x1664>
   18654:	ldr	r0, [sp, #12]
   18658:	mov	r2, #0
   1865c:	str	ip, [sp, #20]
   18660:	cmp	r0, #0
   18664:	beq	186fc <argp_failure@@Base+0x196c>
   18668:	rsb	sl, r0, #1
   1866c:	ldr	r0, [sp, #8]
   18670:	ldr	r4, [r7, #8]
   18674:	add	r8, r0, #36	; 0x24
   18678:	tst	r1, #8
   1867c:	beq	186a4 <argp_failure@@Base+0x1914>
   18680:	mov	r2, #0
   18684:	cmp	sl, #0
   18688:	beq	186fc <argp_failure@@Base+0x196c>
   1868c:	cmp	r2, #0
   18690:	bne	186fc <argp_failure@@Base+0x196c>
   18694:	ldr	r1, [r8], #24
   18698:	add	sl, sl, #1
   1869c:	tst	r1, #8
   186a0:	bne	18680 <argp_failure@@Base+0x18f0>
   186a4:	ldr	r7, [r8, #-32]	; 0xffffffe0
   186a8:	sub	r0, r7, #1
   186ac:	cmp	r0, #254	; 0xfe
   186b0:	bhi	18680 <argp_failure@@Base+0x18f0>
   186b4:	str	r1, [sp, #24]
   186b8:	bl	1145c <__ctype_b_loc@plt>
   186bc:	ldr	r0, [r0]
   186c0:	add	r0, r0, r7, lsl #1
   186c4:	ldrb	r0, [r0, #1]
   186c8:	tst	r0, #64	; 0x40
   186cc:	beq	18680 <argp_failure@@Base+0x18f0>
   186d0:	ldrb	r0, [r4]
   186d4:	mov	r2, r7
   186d8:	cmp	r7, r0
   186dc:	bne	18680 <argp_failure@@Base+0x18f0>
   186e0:	ldr	r0, [sp, #24]
   186e4:	add	r4, r4, #1
   186e8:	tst	r0, #2
   186ec:	mov	r0, #0
   186f0:	movne	r2, r0
   186f4:	cmp	sl, #0
   186f8:	bne	1868c <argp_failure@@Base+0x18fc>
   186fc:	ldr	r0, [sp, #16]
   18700:	mov	sl, #0
   18704:	mov	r1, r2
   18708:	str	r2, [sp, #24]
   1870c:	cmp	r0, #0
   18710:	beq	187b4 <argp_failure@@Base+0x1a24>
   18714:	rsb	r7, r0, #1
   18718:	ldr	r0, [sp, #20]
   1871c:	ldr	r5, [r5, #8]
   18720:	ldr	r4, [sp, #4]
   18724:	add	r8, r0, #36	; 0x24
   18728:	tst	r4, #8
   1872c:	beq	1874c <argp_failure@@Base+0x19bc>
   18730:	b	187a0 <argp_failure@@Base+0x1a10>
   18734:	ldr	r2, [sp, #24]
   18738:	b	187a0 <argp_failure@@Base+0x1a10>
   1873c:	ldr	r4, [r8], #24
   18740:	add	r7, r7, #1
   18744:	tst	r4, #8
   18748:	bne	187a0 <argp_failure@@Base+0x1a10>
   1874c:	ldr	sl, [r8, #-32]	; 0xffffffe0
   18750:	sub	r0, sl, #1
   18754:	cmp	r0, #254	; 0xfe
   18758:	bhi	187a0 <argp_failure@@Base+0x1a10>
   1875c:	bl	1145c <__ctype_b_loc@plt>
   18760:	ldr	r0, [r0]
   18764:	add	r0, r0, sl, lsl #1
   18768:	ldrb	r0, [r0, #1]
   1876c:	tst	r0, #64	; 0x40
   18770:	beq	18734 <argp_failure@@Base+0x19a4>
   18774:	ldrb	r0, [r5]
   18778:	ldr	r2, [sp, #24]
   1877c:	cmp	sl, r0
   18780:	bne	187a0 <argp_failure@@Base+0x1a10>
   18784:	tst	r4, #2
   18788:	mov	r0, #0
   1878c:	add	r5, r5, #1
   18790:	movne	sl, r0
   18794:	cmp	r7, #0
   18798:	bne	187ac <argp_failure@@Base+0x1a1c>
   1879c:	b	187b4 <argp_failure@@Base+0x1a24>
   187a0:	mov	sl, #0
   187a4:	cmp	r7, #0
   187a8:	beq	187b4 <argp_failure@@Base+0x1a24>
   187ac:	cmp	sl, #0
   187b0:	beq	1873c <argp_failure@@Base+0x19ac>
   187b4:	tst	r2, #255	; 0xff
   187b8:	mov	r5, r2
   187bc:	bne	187cc <argp_failure@@Base+0x1a3c>
   187c0:	cmp	r9, #0
   187c4:	ldrbne	r5, [r9]
   187c8:	moveq	r5, #0
   187cc:	tst	sl, #255	; 0xff
   187d0:	mov	r7, sl
   187d4:	bne	187e4 <argp_failure@@Base+0x1a54>
   187d8:	cmp	r6, #0
   187dc:	ldrbne	r7, [r6]
   187e0:	moveq	r7, #0
   187e4:	bl	11444 <__ctype_tolower_loc@plt>
   187e8:	ldr	r2, [r0]
   187ec:	uxtb	r0, r7
   187f0:	uxtb	r1, r5
   187f4:	ldr	r3, [r2, r0, lsl #2]
   187f8:	ldr	r2, [r2, r1, lsl #2]
   187fc:	subs	r4, r2, r3
   18800:	subseq	r4, r0, r1
   18804:	bne	183f4 <argp_failure@@Base+0x1664>
   18808:	ldr	r0, [sp, #24]
   1880c:	uxtb	r4, r0
   18810:	cmp	r4, #0
   18814:	movwne	r4, #1
   18818:	tst	sl, #255	; 0xff
   1881c:	subne	r4, r4, #1
   18820:	cmp	r4, #0
   18824:	bne	183f4 <argp_failure@@Base+0x1664>
   18828:	ldr	r0, [sp, #24]
   1882c:	tst	r0, #255	; 0xff
   18830:	beq	18844 <argp_failure@@Base+0x1ab4>
   18834:	mov	r4, #0
   18838:	mov	r0, r4
   1883c:	sub	sp, fp, #28
   18840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18844:	cmp	r9, #0
   18848:	mov	r4, r9
   1884c:	movwne	r4, #1
   18850:	cmp	r6, #0
   18854:	subne	r4, r4, #1
   18858:	cmp	r4, #0
   1885c:	bne	183f4 <argp_failure@@Base+0x1664>
   18860:	cmp	r9, #0
   18864:	beq	18834 <argp_failure@@Base+0x1aa4>
   18868:	mov	r0, r9
   1886c:	mov	r1, r6
   18870:	bl	113c0 <strcasecmp@plt>
   18874:	mov	r4, r0
   18878:	cmp	r0, #0
   1887c:	moveq	r4, #0
   18880:	mov	r0, r4
   18884:	sub	sp, fp, #28
   18888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1888c:	push	{r4, r5, fp, lr}
   18890:	add	fp, sp, #8
   18894:	mov	r4, r1
   18898:	mov	r5, r0
   1889c:	ldr	r1, [r1, #12]
   188a0:	ldr	r0, [r0, #12]
   188a4:	cmp	r0, r1
   188a8:	beq	188b8 <argp_failure@@Base+0x1b28>
   188ac:	bl	1888c <argp_failure@@Base+0x1afc>
   188b0:	cmp	r0, #0
   188b4:	popne	{r4, r5, fp, pc}
   188b8:	ldr	r1, [r5, #8]
   188bc:	ldr	r2, [r4, #8]
   188c0:	orr	r0, r2, r1
   188c4:	sub	r3, r1, r2
   188c8:	cmn	r0, #1
   188cc:	mov	r0, r3
   188d0:	suble	r0, r2, r1
   188d4:	and	r1, r2, r1
   188d8:	cmp	r1, #0
   188dc:	movlt	r0, r3
   188e0:	cmp	r0, #0
   188e4:	ldreq	r0, [r5, #4]
   188e8:	ldreq	r1, [r4, #4]
   188ec:	subeq	r0, r1, r0
   188f0:	pop	{r4, r5, fp, pc}
   188f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   188f8:	add	fp, sp, #24
   188fc:	mov	r8, r0
   18900:	ldr	r0, [r1, #12]
   18904:	mov	r5, r1
   18908:	cmp	r0, #0
   1890c:	beq	1895c <argp_failure@@Base+0x1bcc>
   18910:	ldr	r1, [r5, #8]
   18914:	ldr	r0, [r5]
   18918:	ldr	r4, [r1]
   1891c:	ldr	r7, [r0, #16]
   18920:	cmp	r4, #0
   18924:	ldrne	r1, [r1, #4]
   18928:	cmpne	r1, #0
   1892c:	bne	18a28 <argp_failure@@Base+0x1c98>
   18930:	cmp	r7, #0
   18934:	beq	1894c <argp_failure@@Base+0x1bbc>
   18938:	ldr	r0, [r7]
   1893c:	cmp	r0, #0
   18940:	ldrbne	r1, [r0]
   18944:	cmpne	r1, #0
   18948:	bne	18a80 <argp_failure@@Base+0x1cf0>
   1894c:	mov	r0, #0
   18950:	str	r0, [r5, #12]
   18954:	add	r5, r5, #4
   18958:	b	189a0 <argp_failure@@Base+0x1c10>
   1895c:	ldr	r6, [r5, #4]!
   18960:	ldr	r0, [r6, #28]
   18964:	ldr	r1, [r6, #32]
   18968:	add	r2, r0, #2
   1896c:	cmp	r2, r1
   18970:	bls	1898c <argp_failure@@Base+0x1bfc>
   18974:	mov	r0, r6
   18978:	mov	r1, #2
   1897c:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18980:	cmp	r0, #0
   18984:	beq	189a0 <argp_failure@@Base+0x1c10>
   18988:	ldr	r0, [r6, #28]
   1898c:	movw	r1, #8236	; 0x202c
   18990:	strh	r1, [r0]
   18994:	ldr	r0, [r6, #28]
   18998:	add	r0, r0, #2
   1899c:	str	r0, [r6, #28]
   189a0:	ldr	r5, [r5]
   189a4:	ldr	r1, [r5, #24]
   189a8:	ldr	r2, [r5, #28]
   189ac:	ldr	r0, [r5, #16]
   189b0:	sub	r1, r2, r1
   189b4:	cmp	r1, r0
   189b8:	bls	189c4 <argp_failure@@Base+0x1c34>
   189bc:	mov	r0, r5
   189c0:	bl	1a110 <argp_failure@@Base+0x3380>
   189c4:	ldr	r0, [r5, #20]
   189c8:	bic	r0, r0, r0, asr #31
   189cc:	sub	r1, r8, r0
   189d0:	cmp	r1, #1
   189d4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   189d8:	add	r1, r8, #1
   189dc:	mov	r6, #32
   189e0:	sub	r4, r1, r0
   189e4:	ldr	r0, [r5, #28]
   189e8:	ldr	r1, [r5, #32]
   189ec:	cmp	r0, r1
   189f0:	bcc	18a0c <argp_failure@@Base+0x1c7c>
   189f4:	mov	r0, r5
   189f8:	mov	r1, #1
   189fc:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18a00:	cmp	r0, #0
   18a04:	beq	18a18 <argp_failure@@Base+0x1c88>
   18a08:	ldr	r0, [r5, #28]
   18a0c:	add	r1, r0, #1
   18a10:	str	r1, [r5, #28]
   18a14:	strb	r6, [r0]
   18a18:	sub	r4, r4, #1
   18a1c:	cmp	r4, #1
   18a20:	bgt	189e4 <argp_failure@@Base+0x1c54>
   18a24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18a28:	ldr	r1, [r4, #12]
   18a2c:	ldr	r0, [r0, #12]
   18a30:	cmp	r0, r1
   18a34:	beq	18930 <argp_failure@@Base+0x1ba0>
   18a38:	ldr	r6, [r5, #4]
   18a3c:	ldr	r0, [r6, #28]
   18a40:	ldr	r1, [r6, #32]
   18a44:	cmp	r0, r1
   18a48:	bcc	18a64 <argp_failure@@Base+0x1cd4>
   18a4c:	mov	r0, r6
   18a50:	mov	r1, #1
   18a54:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18a58:	cmp	r0, #0
   18a5c:	beq	18930 <argp_failure@@Base+0x1ba0>
   18a60:	ldr	r0, [r6, #28]
   18a64:	add	r1, r0, #1
   18a68:	str	r1, [r6, #28]
   18a6c:	mov	r1, #10
   18a70:	strb	r1, [r0]
   18a74:	cmp	r7, #0
   18a78:	bne	18938 <argp_failure@@Base+0x1ba8>
   18a7c:	b	1894c <argp_failure@@Base+0x1bbc>
   18a80:	cmp	r4, #0
   18a84:	beq	18abc <argp_failure@@Base+0x1d2c>
   18a88:	ldr	r1, [r4, #16]
   18a8c:	cmp	r1, r7
   18a90:	beq	1894c <argp_failure@@Base+0x1bbc>
   18a94:	cmp	r1, #0
   18a98:	beq	18ab0 <argp_failure@@Base+0x1d20>
   18a9c:	ldr	r1, [r1, #12]
   18aa0:	cmp	r1, r7
   18aa4:	cmpne	r1, #0
   18aa8:	bne	18a9c <argp_failure@@Base+0x1d0c>
   18aac:	b	18ab4 <argp_failure@@Base+0x1d24>
   18ab0:	mov	r1, #0
   18ab4:	cmp	r1, r7
   18ab8:	beq	1894c <argp_failure@@Base+0x1bbc>
   18abc:	ldr	r1, [r5, #4]
   18ac0:	mov	r2, r5
   18ac4:	ldr	r4, [r1, #12]
   18ac8:	ldr	r1, [r7, #16]
   18acc:	bl	18afc <argp_failure@@Base+0x1d6c>
   18ad0:	ldr	r6, [r5, #4]
   18ad4:	ldr	r1, [r6, #24]
   18ad8:	ldr	r2, [r6, #28]
   18adc:	ldr	r0, [r6, #16]
   18ae0:	sub	r1, r2, r1
   18ae4:	cmp	r1, r0
   18ae8:	bls	18af4 <argp_failure@@Base+0x1d64>
   18aec:	mov	r0, r6
   18af0:	bl	1a110 <argp_failure@@Base+0x3380>
   18af4:	str	r4, [r6, #12]
   18af8:	b	1894c <argp_failure@@Base+0x1bbc>
   18afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b00:	add	fp, sp, #28
   18b04:	sub	sp, sp, #4
   18b08:	mov	r9, r2
   18b0c:	mov	r8, r0
   18b10:	cmp	r1, #0
   18b14:	mov	r6, r0
   18b18:	beq	18b58 <argp_failure@@Base+0x1dc8>
   18b1c:	ldr	r0, [r1, #20]
   18b20:	mov	r4, r1
   18b24:	mov	r6, r8
   18b28:	cmp	r0, #0
   18b2c:	beq	18b58 <argp_failure@@Base+0x1dc8>
   18b30:	ldr	r1, [r9, #16]
   18b34:	mov	r0, r4
   18b38:	bl	13b78 <argp_parse@@Base+0xcd0>
   18b3c:	ldr	r3, [r4, #20]
   18b40:	mov	r2, r0
   18b44:	movw	r0, #3
   18b48:	mov	r1, r8
   18b4c:	movt	r0, #512	; 0x200
   18b50:	blx	r3
   18b54:	mov	r6, r0
   18b58:	cmp	r6, #0
   18b5c:	beq	18d8c <argp_failure@@Base+0x1ffc>
   18b60:	ldrb	r0, [r6]
   18b64:	cmp	r0, #0
   18b68:	beq	18d80 <argp_failure@@Base+0x1ff0>
   18b6c:	ldr	r0, [r9, #8]
   18b70:	ldr	r0, [r0]
   18b74:	cmp	r0, #0
   18b78:	beq	18bb8 <argp_failure@@Base+0x1e28>
   18b7c:	ldr	r4, [r9, #4]
   18b80:	ldr	r0, [r4, #28]
   18b84:	ldr	r1, [r4, #32]
   18b88:	cmp	r0, r1
   18b8c:	bcc	18ba8 <argp_failure@@Base+0x1e18>
   18b90:	mov	r0, r4
   18b94:	mov	r1, #1
   18b98:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18b9c:	cmp	r0, #0
   18ba0:	beq	18bb8 <argp_failure@@Base+0x1e28>
   18ba4:	ldr	r0, [r4, #28]
   18ba8:	add	r1, r0, #1
   18bac:	str	r1, [r4, #28]
   18bb0:	mov	r1, #10
   18bb4:	strb	r1, [r0]
   18bb8:	ldr	r7, [r9, #4]
   18bbc:	movw	sl, #2176	; 0x880
   18bc0:	movt	sl, #3
   18bc4:	ldr	r4, [sl, #24]
   18bc8:	ldr	r1, [r7, #24]
   18bcc:	ldr	r2, [r7, #28]
   18bd0:	ldr	r0, [r7, #16]
   18bd4:	sub	r1, r2, r1
   18bd8:	cmp	r1, r0
   18bdc:	bls	18be8 <argp_failure@@Base+0x1e58>
   18be0:	mov	r0, r7
   18be4:	bl	1a110 <argp_failure@@Base+0x3380>
   18be8:	ldr	r0, [r7, #20]
   18bec:	bic	r0, r0, r0, asr #31
   18bf0:	sub	r1, r4, r0
   18bf4:	cmp	r1, #1
   18bf8:	blt	18c48 <argp_failure@@Base+0x1eb8>
   18bfc:	add	r1, r4, #1
   18c00:	mov	r5, #32
   18c04:	sub	r4, r1, r0
   18c08:	ldr	r0, [r7, #28]
   18c0c:	ldr	r1, [r7, #32]
   18c10:	cmp	r0, r1
   18c14:	bcc	18c30 <argp_failure@@Base+0x1ea0>
   18c18:	mov	r0, r7
   18c1c:	mov	r1, #1
   18c20:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18c24:	cmp	r0, #0
   18c28:	beq	18c3c <argp_failure@@Base+0x1eac>
   18c2c:	ldr	r0, [r7, #28]
   18c30:	add	r1, r0, #1
   18c34:	str	r1, [r7, #28]
   18c38:	strb	r5, [r0]
   18c3c:	sub	r4, r4, #1
   18c40:	cmp	r4, #1
   18c44:	bgt	18c08 <argp_failure@@Base+0x1e78>
   18c48:	ldr	r4, [r9, #4]
   18c4c:	ldr	r5, [sl, #24]
   18c50:	ldr	r1, [r4, #24]
   18c54:	ldr	r2, [r4, #28]
   18c58:	ldr	r0, [r4, #16]
   18c5c:	mov	r7, r4
   18c60:	sub	r1, r2, r1
   18c64:	mov	r2, sl
   18c68:	mov	sl, r5
   18c6c:	cmp	r1, r0
   18c70:	bls	18c98 <argp_failure@@Base+0x1f08>
   18c74:	mov	r0, r4
   18c78:	mov	r7, r2
   18c7c:	bl	1a110 <argp_failure@@Base+0x3380>
   18c80:	ldr	sl, [r7, #24]
   18c84:	ldr	r7, [r9, #4]
   18c88:	ldr	r1, [r7, #24]
   18c8c:	ldr	r2, [r7, #28]
   18c90:	ldr	r0, [r7, #16]
   18c94:	sub	r1, r2, r1
   18c98:	str	r5, [r4, #4]
   18c9c:	cmp	r1, r0
   18ca0:	mov	r5, r7
   18ca4:	bls	18cb4 <argp_failure@@Base+0x1f24>
   18ca8:	mov	r0, r7
   18cac:	bl	1a110 <argp_failure@@Base+0x3380>
   18cb0:	ldr	r5, [r9, #4]
   18cb4:	mov	r0, r6
   18cb8:	str	sl, [r7, #12]
   18cbc:	bl	11474 <strlen@plt>
   18cc0:	cmp	r0, #0
   18cc4:	beq	18d10 <argp_failure@@Base+0x1f80>
   18cc8:	mov	r4, r0
   18ccc:	ldr	r0, [r5, #28]
   18cd0:	ldr	r1, [r5, #32]
   18cd4:	add	r2, r0, r4
   18cd8:	cmp	r2, r1
   18cdc:	bls	18cf8 <argp_failure@@Base+0x1f68>
   18ce0:	mov	r0, r5
   18ce4:	mov	r1, r4
   18ce8:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18cec:	cmp	r0, #0
   18cf0:	beq	18d10 <argp_failure@@Base+0x1f80>
   18cf4:	ldr	r0, [r5, #28]
   18cf8:	mov	r1, r6
   18cfc:	mov	r2, r4
   18d00:	bl	11384 <memcpy@plt>
   18d04:	ldr	r0, [r5, #28]
   18d08:	add	r0, r0, r4
   18d0c:	str	r0, [r5, #28]
   18d10:	ldr	r4, [r9, #4]
   18d14:	mov	r5, r4
   18d18:	ldr	r2, [r4, #24]
   18d1c:	ldr	r0, [r4, #16]
   18d20:	ldr	r1, [r5, #28]!
   18d24:	sub	r2, r1, r2
   18d28:	cmp	r2, r0
   18d2c:	mov	r0, r4
   18d30:	bls	18d48 <argp_failure@@Base+0x1fb8>
   18d34:	mov	r0, r4
   18d38:	bl	1a110 <argp_failure@@Base+0x3380>
   18d3c:	ldr	r0, [r9, #4]
   18d40:	mov	r5, r0
   18d44:	ldr	r1, [r5, #28]!
   18d48:	mov	r2, #0
   18d4c:	str	r2, [r4, #4]
   18d50:	ldr	r2, [r0, #32]
   18d54:	cmp	r1, r2
   18d58:	bcc	18d70 <argp_failure@@Base+0x1fe0>
   18d5c:	mov	r1, #1
   18d60:	bl	1a6b8 <argp_failure@@Base+0x3928>
   18d64:	cmp	r0, #0
   18d68:	beq	18d80 <argp_failure@@Base+0x1ff0>
   18d6c:	ldr	r1, [r5]
   18d70:	add	r0, r1, #1
   18d74:	str	r0, [r5]
   18d78:	mov	r0, #10
   18d7c:	strb	r0, [r1]
   18d80:	ldr	r0, [r9, #8]
   18d84:	mov	r1, #1
   18d88:	str	r1, [r0, #4]
   18d8c:	cmp	r6, r8
   18d90:	subeq	sp, fp, #28
   18d94:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d98:	mov	r0, r6
   18d9c:	sub	sp, fp, #28
   18da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18da4:	b	14258 <argp_parse@@Base+0x13b0>
   18da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18dac:	add	fp, sp, #28
   18db0:	sub	sp, sp, #68	; 0x44
   18db4:	mvn	r6, #0
   18db8:	cmp	r0, #1
   18dbc:	blt	19528 <argp_failure@@Base+0x2798>
   18dc0:	mov	r7, r2
   18dc4:	ldr	r2, [fp, #16]
   18dc8:	mov	r5, r3
   18dcc:	mov	r3, r0
   18dd0:	mov	sl, r1
   18dd4:	mov	r0, #0
   18dd8:	ldr	r9, [r2]
   18ddc:	ldr	r6, [r2, #4]
   18de0:	str	r0, [r2, #12]
   18de4:	cmp	r9, #0
   18de8:	beq	18e0c <argp_failure@@Base+0x207c>
   18dec:	ldr	r0, [r2, #16]
   18df0:	cmp	r0, #0
   18df4:	beq	18e14 <argp_failure@@Base+0x2084>
   18df8:	ldrb	r0, [r7]
   18dfc:	cmp	r0, #45	; 0x2d
   18e00:	cmpne	r0, #43	; 0x2b
   18e04:	addeq	r7, r7, #1
   18e08:	b	18e88 <argp_failure@@Base+0x20f8>
   18e0c:	mov	r9, #1
   18e10:	str	r9, [r2]
   18e14:	mov	r0, #0
   18e18:	str	r9, [r2, #28]
   18e1c:	str	r9, [r2, #32]
   18e20:	str	r0, [r2, #20]
   18e24:	ldrb	r1, [r7]
   18e28:	cmp	r1, #43	; 0x2b
   18e2c:	beq	18e3c <argp_failure@@Base+0x20ac>
   18e30:	cmp	r1, #45	; 0x2d
   18e34:	bne	18e48 <argp_failure@@Base+0x20b8>
   18e38:	mov	r0, #2
   18e3c:	str	r0, [r2, #24]
   18e40:	add	r7, r7, #1
   18e44:	b	18e80 <argp_failure@@Base+0x20f0>
   18e48:	ldr	r0, [fp, #20]
   18e4c:	cmp	r0, #0
   18e50:	bne	18e78 <argp_failure@@Base+0x20e8>
   18e54:	movw	r0, #52201	; 0xcbe9
   18e58:	mov	r8, r2
   18e5c:	mov	r4, r3
   18e60:	movt	r0, #1
   18e64:	bl	11408 <getenv@plt>
   18e68:	mov	r3, r4
   18e6c:	mov	r2, r8
   18e70:	cmp	r0, #0
   18e74:	beq	19534 <argp_failure@@Base+0x27a4>
   18e78:	mov	r0, #0
   18e7c:	str	r0, [r2, #24]
   18e80:	mov	r0, #1
   18e84:	str	r0, [r2, #16]
   18e88:	ldrb	r0, [r7]
   18e8c:	ldr	r4, [r2, #20]
   18e90:	str	r5, [sp, #48]	; 0x30
   18e94:	subs	r0, r0, #58	; 0x3a
   18e98:	movne	r0, r6
   18e9c:	cmp	r4, #0
   18ea0:	str	r0, [fp, #-44]	; 0xffffffd4
   18ea4:	ldrbne	r0, [r4]
   18ea8:	cmpne	r0, #0
   18eac:	bne	18f44 <argp_failure@@Base+0x21b4>
   18eb0:	mov	r4, r2
   18eb4:	mov	r6, r2
   18eb8:	str	r7, [sp, #32]
   18ebc:	ldr	r1, [r4, #32]!
   18ec0:	cmp	r1, r9
   18ec4:	mov	r8, r1
   18ec8:	strgt	r9, [r4]
   18ecc:	movgt	r8, r9
   18ed0:	ldr	r5, [r6, #28]!
   18ed4:	cmp	r5, r9
   18ed8:	strgt	r9, [r6]
   18edc:	movgt	r5, r9
   18ee0:	ldr	r7, [r2, #24]
   18ee4:	cmp	r7, #1
   18ee8:	bne	19228 <argp_failure@@Base+0x2498>
   18eec:	cmp	r5, r8
   18ef0:	cmpne	r8, r9
   18ef4:	bne	1900c <argp_failure@@Base+0x227c>
   18ef8:	cmp	r8, r9
   18efc:	mov	r1, r6
   18f00:	mov	r0, r9
   18f04:	bne	1920c <argp_failure@@Base+0x247c>
   18f08:	mov	r8, r9
   18f0c:	cmp	r9, r3
   18f10:	bge	19220 <argp_failure@@Base+0x2490>
   18f14:	ldr	r0, [sl, r8, lsl #2]
   18f18:	ldrb	r1, [r0]
   18f1c:	cmp	r1, #45	; 0x2d
   18f20:	bne	18f30 <argp_failure@@Base+0x21a0>
   18f24:	ldrb	r0, [r0, #1]
   18f28:	cmp	r0, #0
   18f2c:	bne	19220 <argp_failure@@Base+0x2490>
   18f30:	add	r8, r8, #1
   18f34:	cmp	r8, r3
   18f38:	str	r8, [r2]
   18f3c:	blt	18f14 <argp_failure@@Base+0x2184>
   18f40:	b	19220 <argp_failure@@Base+0x2490>
   18f44:	str	r3, [fp, #-40]	; 0xffffffd8
   18f48:	add	r8, r4, #1
   18f4c:	mov	r0, r7
   18f50:	mov	r5, r2
   18f54:	str	r8, [r2, #20]
   18f58:	ldrb	r6, [r4]
   18f5c:	mov	r1, r6
   18f60:	bl	11480 <strchr@plt>
   18f64:	ldrb	r1, [r4, #1]
   18f68:	mov	r3, r5
   18f6c:	cmp	r1, #0
   18f70:	orr	r1, r6, #1
   18f74:	addeq	r9, r9, #1
   18f78:	streq	r9, [r5]
   18f7c:	cmp	r1, #59	; 0x3b
   18f80:	cmpne	r0, #0
   18f84:	bne	18fa8 <argp_failure@@Base+0x2218>
   18f88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f8c:	cmp	r0, #0
   18f90:	bne	195f4 <argp_failure@@Base+0x2864>
   18f94:	str	r6, [r3, #8]
   18f98:	mov	r6, #63	; 0x3f
   18f9c:	mov	r0, r6
   18fa0:	sub	sp, fp, #28
   18fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fa8:	ldrb	r2, [r0]
   18fac:	ldrb	r1, [r0, #1]
   18fb0:	cmp	r2, #87	; 0x57
   18fb4:	bne	19310 <argp_failure@@Base+0x2580>
   18fb8:	ldr	r2, [sp, #48]	; 0x30
   18fbc:	cmp	r2, #0
   18fc0:	beq	19310 <argp_failure@@Base+0x2580>
   18fc4:	cmp	r1, #59	; 0x3b
   18fc8:	bne	19310 <argp_failure@@Base+0x2580>
   18fcc:	ldrb	r0, [r8]
   18fd0:	cmp	r0, #0
   18fd4:	bne	19624 <argp_failure@@Base+0x2894>
   18fd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18fdc:	cmp	r9, r0
   18fe0:	bne	19620 <argp_failure@@Base+0x2890>
   18fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18fe8:	cmp	r0, #0
   18fec:	bne	196b4 <argp_failure@@Base+0x2924>
   18ff0:	str	r6, [r3, #8]
   18ff4:	ldrb	r6, [r7]
   18ff8:	cmp	r6, #58	; 0x3a
   18ffc:	movwne	r6, #63	; 0x3f
   19000:	mov	r0, r6
   19004:	sub	sp, fp, #28
   19008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1900c:	cmp	r9, r8
   19010:	str	r7, [sp, #20]
   19014:	str	r6, [sp, #24]
   19018:	str	r5, [sp, #36]	; 0x24
   1901c:	str	r4, [sp, #28]
   19020:	str	r3, [fp, #-40]	; 0xffffffd8
   19024:	ble	191e4 <argp_failure@@Base+0x2454>
   19028:	ldr	r0, [sp, #36]	; 0x24
   1902c:	cmp	r0, r8
   19030:	bge	191e4 <argp_failure@@Base+0x2454>
   19034:	add	r0, sl, r8, lsl #2
   19038:	mvn	r1, r1
   1903c:	ldr	r2, [sp, #36]	; 0x24
   19040:	mov	r3, r9
   19044:	str	r0, [fp, #-32]	; 0xffffffe0
   19048:	mvn	r0, r9
   1904c:	cmp	r0, r1
   19050:	movgt	r1, r0
   19054:	add	r0, r1, #1
   19058:	str	r1, [fp, #-36]	; 0xffffffdc
   1905c:	str	r0, [sp, #44]	; 0x2c
   19060:	add	r0, sl, #4
   19064:	str	r0, [sp, #40]	; 0x28
   19068:	sub	ip, r8, r2
   1906c:	sub	r7, r3, r8
   19070:	cmp	r7, ip
   19074:	ble	19130 <argp_failure@@Base+0x23a0>
   19078:	sub	r4, r3, ip
   1907c:	cmp	ip, #1
   19080:	blt	1911c <argp_failure@@Base+0x238c>
   19084:	mov	r7, #0
   19088:	cmp	ip, #4
   1908c:	bcc	190e4 <argp_failure@@Base+0x2354>
   19090:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19094:	ldr	r1, [sp, #40]	; 0x28
   19098:	add	lr, sl, r2, lsl #2
   1909c:	add	r0, r0, r3
   190a0:	add	r0, r0, r2
   190a4:	add	r0, r1, r0, lsl #2
   190a8:	add	r1, sl, r3, lsl #2
   190ac:	cmp	lr, r1
   190b0:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   190b4:	cmpcc	r0, r1
   190b8:	bcc	190e4 <argp_failure@@Base+0x2354>
   190bc:	bic	r7, ip, #3
   190c0:	mov	r1, r7
   190c4:	vld1.32	{d16-d17}, [r0]
   190c8:	vld1.32	{d18-d19}, [lr]
   190cc:	subs	r1, r1, #4
   190d0:	vst1.32	{d16-d17}, [lr]!
   190d4:	vst1.32	{d18-d19}, [r0]!
   190d8:	bne	190c4 <argp_failure@@Base+0x2334>
   190dc:	cmp	ip, r7
   190e0:	beq	1911c <argp_failure@@Base+0x238c>
   190e4:	add	r0, sl, r3, lsl #2
   190e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   190ec:	add	r1, r7, r2
   190f0:	add	r1, sl, r1, lsl #2
   190f4:	add	r3, r3, r7
   190f8:	add	r3, r3, r2
   190fc:	add	r7, r0, r3, lsl #2
   19100:	ldr	r5, [r1]
   19104:	add	r3, r3, #1
   19108:	ldr	r6, [r7, #4]
   1910c:	cmn	r3, #1
   19110:	str	r6, [r1], #4
   19114:	str	r5, [r7, #4]
   19118:	bne	190fc <argp_failure@@Base+0x236c>
   1911c:	mov	r3, r4
   19120:	cmp	r3, r8
   19124:	cmpgt	r8, r2
   19128:	bgt	19068 <argp_failure@@Base+0x22d8>
   1912c:	b	191e4 <argp_failure@@Base+0x2454>
   19130:	cmp	r7, #1
   19134:	blt	191d4 <argp_failure@@Base+0x2444>
   19138:	mov	r4, #0
   1913c:	cmp	r7, #3
   19140:	bls	191a0 <argp_failure@@Base+0x2410>
   19144:	add	r1, sl, r3, lsl #2
   19148:	add	r0, sl, r2, lsl #2
   1914c:	cmp	r0, r1
   19150:	bcs	19174 <argp_failure@@Base+0x23e4>
   19154:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19158:	ldr	r6, [sp, #40]	; 0x28
   1915c:	add	r1, r1, r3
   19160:	add	r1, r1, r2
   19164:	add	r1, r6, r1, lsl #2
   19168:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1916c:	cmp	r6, r1
   19170:	bcc	191a0 <argp_failure@@Base+0x2410>
   19174:	ldr	r6, [fp, #-32]	; 0xffffffe0
   19178:	bic	r4, r7, #3
   1917c:	mov	r1, r4
   19180:	vld1.32	{d16-d17}, [r6]
   19184:	vld1.32	{d18-d19}, [r0]
   19188:	subs	r1, r1, #4
   1918c:	vst1.32	{d16-d17}, [r0]!
   19190:	vst1.32	{d18-d19}, [r6]!
   19194:	bne	19180 <argp_failure@@Base+0x23f0>
   19198:	cmp	r7, r4
   1919c:	beq	191d4 <argp_failure@@Base+0x2444>
   191a0:	ldr	r1, [sp, #44]	; 0x2c
   191a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191a8:	add	r6, r4, r2
   191ac:	add	r1, r1, r3
   191b0:	add	r0, r0, r4, lsl #2
   191b4:	sub	r1, r1, r4
   191b8:	add	r4, sl, r6, lsl #2
   191bc:	ldr	r6, [r4]
   191c0:	ldr	r5, [r0]
   191c4:	subs	r1, r1, #1
   191c8:	str	r5, [r4], #4
   191cc:	str	r6, [r0], #4
   191d0:	bne	191bc <argp_failure@@Base+0x242c>
   191d4:	add	r2, r7, r2
   191d8:	cmp	r3, r8
   191dc:	cmpgt	r8, r2
   191e0:	bgt	19068 <argp_failure@@Base+0x22d8>
   191e4:	ldr	r0, [sp, #36]	; 0x24
   191e8:	ldr	r4, [sp, #28]
   191ec:	ldr	r6, [sp, #24]
   191f0:	ldr	r2, [fp, #16]
   191f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191f8:	ldr	r7, [sp, #20]
   191fc:	add	r0, r0, r9
   19200:	mov	r1, r4
   19204:	sub	r0, r0, r8
   19208:	str	r0, [r6]
   1920c:	mov	r5, r0
   19210:	str	r9, [r1]
   19214:	mov	r8, r9
   19218:	cmp	r9, r3
   1921c:	blt	18f14 <argp_failure@@Base+0x2184>
   19220:	mov	r9, r8
   19224:	str	r8, [r4]
   19228:	cmp	r9, r3
   1922c:	beq	1951c <argp_failure@@Base+0x278c>
   19230:	ldr	r0, [sl, r9, lsl #2]
   19234:	movw	r1, #50220	; 0xc42c
   19238:	str	r3, [fp, #-40]	; 0xffffffd8
   1923c:	movt	r1, #1
   19240:	bl	1130c <strcmp@plt>
   19244:	cmp	r0, #0
   19248:	beq	192e0 <argp_failure@@Base+0x2550>
   1924c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19250:	ldr	r2, [fp, #16]
   19254:	cmp	r9, r3
   19258:	beq	1951c <argp_failure@@Base+0x278c>
   1925c:	ldr	r0, [sl, r9, lsl #2]
   19260:	mvn	r6, #0
   19264:	ldrb	r1, [r0]
   19268:	cmp	r1, #45	; 0x2d
   1926c:	bne	19338 <argp_failure@@Base+0x25a8>
   19270:	mov	r4, r0
   19274:	ldrb	r1, [r4, #1]!
   19278:	cmp	r1, #0
   1927c:	beq	19338 <argp_failure@@Base+0x25a8>
   19280:	ldr	r6, [sp, #48]	; 0x30
   19284:	cmp	r6, #0
   19288:	beq	19554 <argp_failure@@Base+0x27c4>
   1928c:	ldr	r5, [fp, #12]
   19290:	ldr	r7, [sp, #32]
   19294:	cmp	r1, #45	; 0x2d
   19298:	bne	1955c <argp_failure@@Base+0x27cc>
   1929c:	add	r0, r0, #2
   192a0:	mov	r1, sl
   192a4:	str	r0, [r2, #20]
   192a8:	ldr	r0, [fp, #8]
   192ac:	stm	sp, {r0, r5}
   192b0:	str	r2, [sp, #8]
   192b4:	mov	r2, r7
   192b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   192bc:	str	r0, [sp, #12]
   192c0:	movw	r0, #50220	; 0xc42c
   192c4:	movt	r0, #1
   192c8:	str	r0, [sp, #16]
   192cc:	mov	r0, r3
   192d0:	mov	r3, r6
   192d4:	bl	1970c <argp_failure@@Base+0x297c>
   192d8:	sub	sp, fp, #28
   192dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192e0:	ldr	r2, [fp, #16]
   192e4:	add	r3, r9, #1
   192e8:	cmp	r5, r8
   192ec:	cmpne	r8, r3
   192f0:	str	r3, [r2]
   192f4:	bne	19358 <argp_failure@@Base+0x25c8>
   192f8:	cmp	r5, r8
   192fc:	ldr	r8, [fp, #-40]	; 0xffffffd8
   19300:	mov	r1, r6
   19304:	mov	r0, r3
   19308:	beq	1950c <argp_failure@@Base+0x277c>
   1930c:	b	19514 <argp_failure@@Base+0x2784>
   19310:	cmp	r1, #58	; 0x3a
   19314:	bne	19528 <argp_failure@@Base+0x2798>
   19318:	ldrb	r0, [r0, #2]
   1931c:	ldrb	r1, [r8]
   19320:	cmp	r0, #58	; 0x3a
   19324:	bne	1953c <argp_failure@@Base+0x27ac>
   19328:	cmp	r1, #0
   1932c:	bne	19544 <argp_failure@@Base+0x27b4>
   19330:	mov	r0, #0
   19334:	b	1967c <argp_failure@@Base+0x28ec>
   19338:	cmp	r7, #0
   1933c:	strne	r0, [r2, #12]
   19340:	addne	r0, r9, #1
   19344:	movne	r6, #1
   19348:	strne	r0, [r2]
   1934c:	mov	r0, r6
   19350:	sub	sp, fp, #28
   19354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19358:	cmp	r9, r8
   1935c:	str	r3, [fp, #-36]	; 0xffffffdc
   19360:	str	r6, [sp, #24]
   19364:	str	r5, [sp, #36]	; 0x24
   19368:	str	r4, [sp, #28]
   1936c:	blt	194e8 <argp_failure@@Base+0x2758>
   19370:	ldr	r0, [sp, #36]	; 0x24
   19374:	cmp	r0, r8
   19378:	bge	194e8 <argp_failure@@Base+0x2758>
   1937c:	sub	r0, sl, r8, lsl #2
   19380:	ldr	r7, [sp, #36]	; 0x24
   19384:	add	r9, sl, r8, lsl #2
   19388:	str	r0, [fp, #-44]	; 0xffffffd4
   1938c:	rsb	r0, r8, #0
   19390:	str	r0, [fp, #-32]	; 0xffffffe0
   19394:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19398:	sub	r4, r8, r7
   1939c:	sub	r3, r0, r8
   193a0:	cmp	r3, r4
   193a4:	ble	19444 <argp_failure@@Base+0x26b4>
   193a8:	sub	r3, r0, r4
   193ac:	cmp	r4, #1
   193b0:	blt	19430 <argp_failure@@Base+0x26a0>
   193b4:	mov	r1, #0
   193b8:	cmp	r4, #4
   193bc:	bcc	19400 <argp_failure@@Base+0x2670>
   193c0:	add	r2, sl, r0, lsl #2
   193c4:	add	lr, sl, r7, lsl #2
   193c8:	add	ip, sl, r3, lsl #2
   193cc:	cmp	lr, r2
   193d0:	cmpcc	ip, r9
   193d4:	bcc	19400 <argp_failure@@Base+0x2670>
   193d8:	bic	r1, r4, #3
   193dc:	mov	r2, r1
   193e0:	vld1.32	{d16-d17}, [ip]
   193e4:	vld1.32	{d18-d19}, [lr]
   193e8:	subs	r2, r2, #4
   193ec:	vst1.32	{d16-d17}, [lr]!
   193f0:	vst1.32	{d18-d19}, [ip]!
   193f4:	bne	193e0 <argp_failure@@Base+0x2650>
   193f8:	cmp	r4, r1
   193fc:	beq	19430 <argp_failure@@Base+0x26a0>
   19400:	add	r0, r7, r0
   19404:	sub	r2, r8, r1
   19408:	add	r1, r1, r7
   1940c:	add	r1, sl, r1, lsl #2
   19410:	add	r0, sl, r0, lsl #2
   19414:	ldr	r6, [r0, -r2, lsl #2]
   19418:	ldr	r5, [r1]
   1941c:	str	r6, [r1], #4
   19420:	str	r5, [r0, -r2, lsl #2]
   19424:	sub	r2, r2, #1
   19428:	cmp	r7, r2
   1942c:	bne	19414 <argp_failure@@Base+0x2684>
   19430:	mov	r0, r3
   19434:	cmp	r0, r8
   19438:	cmpgt	r8, r7
   1943c:	bgt	19398 <argp_failure@@Base+0x2608>
   19440:	b	194e8 <argp_failure@@Base+0x2758>
   19444:	cmp	r3, #1
   19448:	blt	194d8 <argp_failure@@Base+0x2748>
   1944c:	mov	r4, #0
   19450:	cmp	r3, #3
   19454:	bls	194a4 <argp_failure@@Base+0x2714>
   19458:	add	r2, sl, r0, lsl #2
   1945c:	add	r1, sl, r7, lsl #2
   19460:	cmp	r1, r2
   19464:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   19468:	addcc	r2, r7, r0
   1946c:	addcc	r2, r6, r2, lsl #2
   19470:	cmpcc	r9, r2
   19474:	bcc	194a4 <argp_failure@@Base+0x2714>
   19478:	bic	r4, r3, #3
   1947c:	mov	r6, r9
   19480:	mov	r2, r4
   19484:	vld1.32	{d16-d17}, [r6]
   19488:	vld1.32	{d18-d19}, [r1]
   1948c:	subs	r2, r2, #4
   19490:	vst1.32	{d16-d17}, [r1]!
   19494:	vst1.32	{d18-d19}, [r6]!
   19498:	bne	19484 <argp_failure@@Base+0x26f4>
   1949c:	cmp	r3, r4
   194a0:	beq	194d8 <argp_failure@@Base+0x2748>
   194a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   194a8:	add	r2, r4, r7
   194ac:	add	r6, r8, r4
   194b0:	add	r2, sl, r2, lsl #2
   194b4:	add	r1, r1, r0
   194b8:	sub	r1, r1, r4
   194bc:	add	r4, sl, r6, lsl #2
   194c0:	ldr	r6, [r2]
   194c4:	ldr	r5, [r4]
   194c8:	subs	r1, r1, #1
   194cc:	str	r5, [r2], #4
   194d0:	str	r6, [r4], #4
   194d4:	bne	194c0 <argp_failure@@Base+0x2730>
   194d8:	add	r7, r3, r7
   194dc:	cmp	r0, r8
   194e0:	cmpgt	r8, r7
   194e4:	bgt	19398 <argp_failure@@Base+0x2608>
   194e8:	ldr	r0, [sp, #36]	; 0x24
   194ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   194f0:	ldr	r1, [sp, #24]
   194f4:	ldr	r2, [fp, #16]
   194f8:	add	r0, r0, r3
   194fc:	sub	r0, r0, r8
   19500:	ldr	r8, [fp, #-40]	; 0xffffffd8
   19504:	str	r0, [r1]
   19508:	ldr	r1, [sp, #28]
   1950c:	mov	r5, r0
   19510:	str	r3, [r1]
   19514:	str	r8, [r2]
   19518:	str	r8, [r2, #32]
   1951c:	cmp	r5, r8
   19520:	mvn	r6, #0
   19524:	strne	r5, [r2]
   19528:	mov	r0, r6
   1952c:	sub	sp, fp, #28
   19530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19534:	mov	r0, #1
   19538:	b	18e7c <argp_failure@@Base+0x20ec>
   1953c:	cmp	r1, #0
   19540:	beq	195c8 <argp_failure@@Base+0x2838>
   19544:	add	r0, r9, #1
   19548:	str	r8, [r3, #12]
   1954c:	str	r0, [r3]
   19550:	b	19680 <argp_failure@@Base+0x28f0>
   19554:	ldr	r7, [sp, #32]
   19558:	b	196ac <argp_failure@@Base+0x291c>
   1955c:	cmp	r5, #0
   19560:	beq	196ac <argp_failure@@Base+0x291c>
   19564:	ldrb	r0, [r0, #2]
   19568:	cmp	r0, #0
   1956c:	beq	19694 <argp_failure@@Base+0x2904>
   19570:	ldr	r1, [fp, #8]
   19574:	str	r4, [r2, #20]
   19578:	movw	r0, #50221	; 0xc42d
   1957c:	movt	r0, #1
   19580:	stm	sp, {r1, r5}
   19584:	str	r2, [sp, #8]
   19588:	str	r0, [sp, #16]
   1958c:	mov	r0, r3
   19590:	mov	r2, r7
   19594:	mov	r3, r6
   19598:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1959c:	str	r1, [sp, #12]
   195a0:	mov	r1, sl
   195a4:	bl	1970c <argp_failure@@Base+0x297c>
   195a8:	ldr	r2, [fp, #16]
   195ac:	mov	r6, r0
   195b0:	cmn	r0, #1
   195b4:	bne	19528 <argp_failure@@Base+0x2798>
   195b8:	ldr	r9, [r2]
   195bc:	ldr	r0, [sl, r9, lsl #2]
   195c0:	add	r4, r0, #1
   195c4:	b	196ac <argp_failure@@Base+0x291c>
   195c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195cc:	cmp	r9, r0
   195d0:	bne	19670 <argp_failure@@Base+0x28e0>
   195d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   195d8:	cmp	r0, #0
   195dc:	bne	196e0 <argp_failure@@Base+0x2950>
   195e0:	str	r6, [r3, #8]
   195e4:	ldrb	r6, [r7]
   195e8:	cmp	r6, #58	; 0x3a
   195ec:	movwne	r6, #63	; 0x3f
   195f0:	b	19680 <argp_failure@@Base+0x28f0>
   195f4:	movw	r0, #2248	; 0x8c8
   195f8:	ldr	r2, [sl]
   195fc:	movw	r1, #52128	; 0xcba0
   19600:	mov	r4, r3
   19604:	mov	r3, r6
   19608:	movt	r0, #3
   1960c:	movt	r1, #1
   19610:	ldr	r0, [r0]
   19614:	bl	1148c <fprintf@plt>
   19618:	mov	r3, r4
   1961c:	b	18f94 <argp_failure@@Base+0x2204>
   19620:	ldr	r8, [sl, r9, lsl #2]
   19624:	ldr	r2, [fp, #8]
   19628:	mov	r0, #0
   1962c:	str	r8, [r3, #12]
   19630:	movw	r1, #52197	; 0xcbe5
   19634:	str	r0, [r3, #12]
   19638:	str	r8, [r3, #20]
   1963c:	movt	r1, #1
   19640:	str	r2, [sp]
   19644:	stmib	sp, {r0, r3}
   19648:	str	r1, [sp, #16]
   1964c:	mov	r1, sl
   19650:	mov	r2, r7
   19654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19658:	ldr	r3, [sp, #48]	; 0x30
   1965c:	str	r0, [sp, #12]
   19660:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19664:	bl	1970c <argp_failure@@Base+0x297c>
   19668:	sub	sp, fp, #28
   1966c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19670:	add	r0, r9, #1
   19674:	str	r0, [r3]
   19678:	ldr	r0, [sl, r9, lsl #2]
   1967c:	str	r0, [r3, #12]
   19680:	mov	r0, #0
   19684:	str	r0, [r3, #20]
   19688:	mov	r0, r6
   1968c:	sub	sp, fp, #28
   19690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19694:	mov	r0, r7
   19698:	bl	11480 <strchr@plt>
   1969c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   196a0:	ldr	r2, [fp, #16]
   196a4:	cmp	r0, #0
   196a8:	beq	19570 <argp_failure@@Base+0x27e0>
   196ac:	str	r4, [r2, #20]
   196b0:	b	18f48 <argp_failure@@Base+0x21b8>
   196b4:	movw	r0, #2248	; 0x8c8
   196b8:	ldr	r2, [sl]
   196bc:	movw	r1, #52156	; 0xcbbc
   196c0:	mov	r4, r3
   196c4:	mov	r3, r6
   196c8:	movt	r0, #3
   196cc:	movt	r1, #1
   196d0:	ldr	r0, [r0]
   196d4:	bl	1148c <fprintf@plt>
   196d8:	mov	r3, r4
   196dc:	b	18ff0 <argp_failure@@Base+0x2260>
   196e0:	movw	r0, #2248	; 0x8c8
   196e4:	ldr	r2, [sl]
   196e8:	movw	r1, #52156	; 0xcbbc
   196ec:	mov	r4, r3
   196f0:	mov	r3, r6
   196f4:	movt	r0, #3
   196f8:	movt	r1, #1
   196fc:	ldr	r0, [r0]
   19700:	bl	1148c <fprintf@plt>
   19704:	mov	r3, r4
   19708:	b	195e0 <argp_failure@@Base+0x2850>
   1970c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19710:	add	fp, sp, #28
   19714:	sub	sp, sp, #44	; 0x2c
   19718:	str	r0, [sp, #8]
   1971c:	ldr	r0, [fp, #16]
   19720:	str	r2, [sp, #12]
   19724:	str	r1, [sp, #16]
   19728:	ldr	r8, [r0, #20]
   1972c:	mov	r9, r8
   19730:	ldrb	r0, [r9]
   19734:	cmp	r0, #0
   19738:	cmpne	r0, #61	; 0x3d
   1973c:	beq	19754 <argp_failure@@Base+0x29c4>
   19740:	add	r9, r9, #1
   19744:	ldrb	r0, [r9]
   19748:	cmp	r0, #0
   1974c:	cmpne	r0, #61	; 0x3d
   19750:	bne	19740 <argp_failure@@Base+0x29b0>
   19754:	ldr	sl, [r3]
   19758:	mvn	r0, #0
   1975c:	str	r0, [sp, #24]
   19760:	cmp	sl, #0
   19764:	beq	19908 <argp_failure@@Base+0x2b78>
   19768:	sub	r0, r9, r8
   1976c:	mov	r4, #0
   19770:	mov	r6, sl
   19774:	mov	r7, r3
   19778:	str	r3, [sp, #28]
   1977c:	str	r0, [fp, #-32]	; 0xffffffe0
   19780:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19784:	mov	r0, r6
   19788:	mov	r1, r8
   1978c:	bl	11594 <strncmp@plt>
   19790:	cmp	r0, #0
   19794:	bne	197ac <argp_failure@@Base+0x2a1c>
   19798:	mov	r0, r6
   1979c:	bl	11474 <strlen@plt>
   197a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   197a4:	cmp	r1, r0
   197a8:	beq	19924 <argp_failure@@Base+0x2b94>
   197ac:	ldr	r6, [r7, #16]!
   197b0:	add	r4, r4, #1
   197b4:	cmp	r6, #0
   197b8:	bne	19780 <argp_failure@@Base+0x29f0>
   197bc:	cmp	sl, #0
   197c0:	beq	1992c <argp_failure@@Base+0x2b9c>
   197c4:	ldr	r0, [fp, #12]
   197c8:	cmp	r0, #0
   197cc:	beq	199ac <argp_failure@@Base+0x2c1c>
   197d0:	ldr	r0, [fp, #20]
   197d4:	cmp	r0, #0
   197d8:	beq	19cd0 <argp_failure@@Base+0x2f40>
   197dc:	mov	r0, #0
   197e0:	ldr	r6, [sp, #28]
   197e4:	mov	r5, #0
   197e8:	mov	r7, #0
   197ec:	str	r0, [sp, #32]
   197f0:	mvn	r0, #0
   197f4:	str	r0, [sp, #24]
   197f8:	mov	r0, #0
   197fc:	str	r0, [sp, #4]
   19800:	mov	r0, #0
   19804:	str	r0, [sp, #20]
   19808:	b	1981c <argp_failure@@Base+0x2a8c>
   1980c:	ldr	r0, [fp, #16]
   19810:	add	r1, r1, #1
   19814:	mov	r5, r1
   19818:	ldr	r8, [r0, #20]
   1981c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19820:	mov	r0, sl
   19824:	mov	r1, r8
   19828:	bl	11594 <strncmp@plt>
   1982c:	cmp	r0, #0
   19830:	beq	19848 <argp_failure@@Base+0x2ab8>
   19834:	mov	r1, r5
   19838:	ldr	sl, [r6, #16]!
   1983c:	cmp	sl, #0
   19840:	bne	1980c <argp_failure@@Base+0x2a7c>
   19844:	b	19b64 <argp_failure@@Base+0x2dd4>
   19848:	cmp	r7, #0
   1984c:	beq	198c8 <argp_failure@@Base+0x2b38>
   19850:	ldr	r0, [sp, #32]
   19854:	mov	r1, r5
   19858:	cmp	r0, #0
   1985c:	bne	19838 <argp_failure@@Base+0x2aa8>
   19860:	ldr	r8, [sp, #20]
   19864:	cmp	r8, #0
   19868:	bne	198a4 <argp_failure@@Base+0x2b14>
   1986c:	mov	r0, r4
   19870:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   19874:	cmp	r0, #0
   19878:	beq	198e4 <argp_failure@@Base+0x2b54>
   1987c:	mov	r1, #0
   19880:	mov	r2, r4
   19884:	mov	r8, r0
   19888:	bl	114bc <memset@plt>
   1988c:	ldr	r0, [sp, #24]
   19890:	mov	r1, #1
   19894:	mov	r2, #1
   19898:	str	r1, [sp, #4]
   1989c:	mov	r1, r5
   198a0:	strb	r2, [r8, r0]
   198a4:	mov	r0, #1
   198a8:	str	r8, [sp, #20]
   198ac:	strb	r0, [r8, r1]
   198b0:	mov	r0, #0
   198b4:	str	r0, [sp, #32]
   198b8:	ldr	sl, [r6, #16]!
   198bc:	cmp	sl, #0
   198c0:	bne	1980c <argp_failure@@Base+0x2a7c>
   198c4:	b	19b64 <argp_failure@@Base+0x2dd4>
   198c8:	mov	r7, r6
   198cc:	mov	r1, r5
   198d0:	str	r5, [sp, #24]
   198d4:	ldr	sl, [r6, #16]!
   198d8:	cmp	sl, #0
   198dc:	bne	1980c <argp_failure@@Base+0x2a7c>
   198e0:	b	19b64 <argp_failure@@Base+0x2dd4>
   198e4:	mov	r0, #1
   198e8:	mov	r1, r5
   198ec:	str	r0, [sp, #32]
   198f0:	mov	r0, #0
   198f4:	str	r0, [sp, #20]
   198f8:	ldr	sl, [r6, #16]!
   198fc:	cmp	sl, #0
   19900:	bne	1980c <argp_failure@@Base+0x2a7c>
   19904:	b	19b64 <argp_failure@@Base+0x2dd4>
   19908:	mov	r0, #0
   1990c:	mov	r4, #0
   19910:	mov	r7, #0
   19914:	mov	r1, #0
   19918:	mov	r8, #0
   1991c:	mov	r6, r3
   19920:	b	19940 <argp_failure@@Base+0x2bb0>
   19924:	str	r4, [sp, #24]
   19928:	b	19b88 <argp_failure@@Base+0x2df8>
   1992c:	ldr	r6, [sp, #28]
   19930:	mov	r0, #0
   19934:	mov	r7, #0
   19938:	mov	r1, #0
   1993c:	mov	r8, #0
   19940:	str	r0, [sp, #32]
   19944:	cmp	r1, #0
   19948:	ldreq	r0, [sp, #32]
   1994c:	cmpeq	r0, #0
   19950:	beq	19b80 <argp_failure@@Base+0x2df0>
   19954:	ldr	r0, [fp, #20]
   19958:	cmp	r0, #0
   1995c:	bne	19db0 <argp_failure@@Base+0x3020>
   19960:	cmp	r8, #0
   19964:	beq	19970 <argp_failure@@Base+0x2be0>
   19968:	mov	r0, r1
   1996c:	bl	14258 <argp_parse@@Base+0x13b0>
   19970:	ldr	r0, [fp, #16]
   19974:	ldr	r4, [r0, #20]
   19978:	mov	r5, r0
   1997c:	mov	r0, r4
   19980:	bl	11474 <strlen@plt>
   19984:	mov	r1, #0
   19988:	add	r0, r4, r0
   1998c:	str	r1, [r5, #8]
   19990:	str	r0, [r5, #20]
   19994:	ldr	r0, [r5]
   19998:	add	r0, r0, #1
   1999c:	str	r0, [r5]
   199a0:	mov	r0, #63	; 0x3f
   199a4:	sub	sp, fp, #28
   199a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199ac:	mov	r0, #0
   199b0:	mov	r6, #0
   199b4:	mov	r7, #0
   199b8:	str	r0, [sp, #36]	; 0x24
   199bc:	mvn	r0, #0
   199c0:	str	r0, [sp, #24]
   199c4:	mov	r0, #0
   199c8:	str	r0, [sp, #32]
   199cc:	mov	r0, #0
   199d0:	str	r0, [sp, #4]
   199d4:	mov	r0, #0
   199d8:	str	r0, [sp, #20]
   199dc:	b	199f4 <argp_failure@@Base+0x2c64>
   199e0:	ldr	r0, [fp, #16]
   199e4:	add	r3, r3, #16
   199e8:	add	r6, r6, #1
   199ec:	str	r3, [sp, #36]	; 0x24
   199f0:	ldr	r8, [r0, #20]
   199f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   199f8:	mov	r0, sl
   199fc:	mov	r1, r8
   19a00:	bl	11594 <strncmp@plt>
   19a04:	cmp	r0, #0
   19a08:	beq	19a28 <argp_failure@@Base+0x2c98>
   19a0c:	ldr	r5, [sp, #28]
   19a10:	ldr	r3, [sp, #36]	; 0x24
   19a14:	add	r0, r5, r6, lsl #4
   19a18:	ldr	sl, [r0, #16]
   19a1c:	cmp	sl, #0
   19a20:	bne	199e0 <argp_failure@@Base+0x2c50>
   19a24:	b	19b64 <argp_failure@@Base+0x2dd4>
   19a28:	ldr	r5, [sp, #28]
   19a2c:	ldr	r3, [sp, #36]	; 0x24
   19a30:	cmp	r7, #0
   19a34:	add	r0, r5, r3
   19a38:	beq	19ad0 <argp_failure@@Base+0x2d40>
   19a3c:	ldr	r1, [r0, #4]
   19a40:	ldr	r2, [r7, #4]
   19a44:	cmp	r2, r1
   19a48:	bne	19a5c <argp_failure@@Base+0x2ccc>
   19a4c:	ldr	r1, [r0, #8]
   19a50:	ldr	r2, [r7, #8]
   19a54:	cmp	r2, r1
   19a58:	beq	19aec <argp_failure@@Base+0x2d5c>
   19a5c:	ldr	r0, [sp, #32]
   19a60:	cmp	r0, #0
   19a64:	bne	19a14 <argp_failure@@Base+0x2c84>
   19a68:	ldr	r0, [fp, #20]
   19a6c:	cmp	r0, #0
   19a70:	beq	19b0c <argp_failure@@Base+0x2d7c>
   19a74:	ldr	r8, [sp, #20]
   19a78:	mov	r0, #0
   19a7c:	str	r0, [sp, #32]
   19a80:	cmp	r8, #0
   19a84:	bne	19b20 <argp_failure@@Base+0x2d90>
   19a88:	mov	r0, r4
   19a8c:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   19a90:	cmp	r0, #0
   19a94:	beq	19b40 <argp_failure@@Base+0x2db0>
   19a98:	mov	r8, r0
   19a9c:	mov	r0, #0
   19aa0:	mov	r1, #0
   19aa4:	mov	r2, r4
   19aa8:	str	r0, [sp, #32]
   19aac:	mov	r0, r8
   19ab0:	bl	114bc <memset@plt>
   19ab4:	ldr	r3, [sp, #36]	; 0x24
   19ab8:	ldr	r0, [sp, #24]
   19abc:	mov	r2, #1
   19ac0:	mov	r1, #1
   19ac4:	str	r1, [sp, #4]
   19ac8:	strb	r2, [r8, r0]
   19acc:	b	19b20 <argp_failure@@Base+0x2d90>
   19ad0:	mov	r7, r0
   19ad4:	str	r6, [sp, #24]
   19ad8:	add	r0, r5, r6, lsl #4
   19adc:	ldr	sl, [r0, #16]
   19ae0:	cmp	sl, #0
   19ae4:	bne	199e0 <argp_failure@@Base+0x2c50>
   19ae8:	b	19b64 <argp_failure@@Base+0x2dd4>
   19aec:	ldr	r1, [sp, #32]
   19af0:	cmp	r1, #0
   19af4:	bne	19a14 <argp_failure@@Base+0x2c84>
   19af8:	ldr	r0, [r0, #12]
   19afc:	ldr	r1, [r7, #12]
   19b00:	cmp	r1, r0
   19b04:	bne	19a68 <argp_failure@@Base+0x2cd8>
   19b08:	b	19a14 <argp_failure@@Base+0x2c84>
   19b0c:	ldr	r8, [sp, #20]
   19b10:	mov	r0, #1
   19b14:	str	r0, [sp, #32]
   19b18:	cmp	r8, #0
   19b1c:	beq	19b4c <argp_failure@@Base+0x2dbc>
   19b20:	mov	r0, #1
   19b24:	str	r8, [sp, #20]
   19b28:	strb	r0, [r8, r6]
   19b2c:	add	r0, r5, r6, lsl #4
   19b30:	ldr	sl, [r0, #16]
   19b34:	cmp	sl, #0
   19b38:	bne	199e0 <argp_failure@@Base+0x2c50>
   19b3c:	b	19b64 <argp_failure@@Base+0x2dd4>
   19b40:	ldr	r3, [sp, #36]	; 0x24
   19b44:	mov	r0, #1
   19b48:	str	r0, [sp, #32]
   19b4c:	mov	r0, #0
   19b50:	str	r0, [sp, #20]
   19b54:	add	r0, r5, r6, lsl #4
   19b58:	ldr	sl, [r0, #16]
   19b5c:	cmp	sl, #0
   19b60:	bne	199e0 <argp_failure@@Base+0x2c50>
   19b64:	ldr	r6, [sp, #28]
   19b68:	ldr	r1, [sp, #20]
   19b6c:	ldr	r8, [sp, #4]
   19b70:	cmp	r1, #0
   19b74:	ldreq	r0, [sp, #32]
   19b78:	cmpeq	r0, #0
   19b7c:	bne	19954 <argp_failure@@Base+0x2bc4>
   19b80:	cmp	r7, #0
   19b84:	beq	19c2c <argp_failure@@Base+0x2e9c>
   19b88:	ldr	r1, [fp, #16]
   19b8c:	mov	r0, #0
   19b90:	str	r0, [r1, #20]
   19b94:	mov	r2, r1
   19b98:	ldr	r1, [r1]
   19b9c:	add	r0, r1, #1
   19ba0:	str	r0, [r2]
   19ba4:	ldrb	r3, [r9]
   19ba8:	ldr	r2, [r7, #4]
   19bac:	cmp	r3, #0
   19bb0:	beq	19bcc <argp_failure@@Base+0x2e3c>
   19bb4:	cmp	r2, #0
   19bb8:	beq	19cac <argp_failure@@Base+0x2f1c>
   19bbc:	ldr	r1, [fp, #16]
   19bc0:	add	r0, r9, #1
   19bc4:	str	r0, [r1, #12]
   19bc8:	b	19bf8 <argp_failure@@Base+0x2e68>
   19bcc:	cmp	r2, #1
   19bd0:	bne	19bf8 <argp_failure@@Base+0x2e68>
   19bd4:	ldr	r2, [sp, #8]
   19bd8:	cmp	r0, r2
   19bdc:	bge	19d80 <argp_failure@@Base+0x2ff0>
   19be0:	ldr	r2, [fp, #16]
   19be4:	add	r1, r1, #2
   19be8:	str	r1, [r2]
   19bec:	ldr	r1, [sp, #16]
   19bf0:	ldr	r0, [r1, r0, lsl #2]
   19bf4:	str	r0, [r2, #12]
   19bf8:	ldr	r0, [fp, #8]
   19bfc:	cmp	r0, #0
   19c00:	ldrne	r1, [sp, #24]
   19c04:	strne	r1, [r0]
   19c08:	ldr	r1, [r7, #8]
   19c0c:	ldr	r0, [r7, #12]
   19c10:	cmp	r1, #0
   19c14:	strne	r0, [r1]
   19c18:	movne	r0, #0
   19c1c:	subne	sp, fp, #28
   19c20:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c24:	sub	sp, fp, #28
   19c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c2c:	ldr	r0, [fp, #12]
   19c30:	cmp	r0, #0
   19c34:	beq	19c78 <argp_failure@@Base+0x2ee8>
   19c38:	ldr	r0, [fp, #16]
   19c3c:	ldr	r1, [sp, #16]
   19c40:	ldr	r0, [r0]
   19c44:	ldr	r0, [r1, r0, lsl #2]
   19c48:	ldrb	r0, [r0, #1]
   19c4c:	cmp	r0, #45	; 0x2d
   19c50:	beq	19c78 <argp_failure@@Base+0x2ee8>
   19c54:	ldr	r0, [fp, #16]
   19c58:	ldr	r0, [r0, #20]
   19c5c:	ldrb	r1, [r0]
   19c60:	ldr	r0, [sp, #12]
   19c64:	bl	11480 <strchr@plt>
   19c68:	mov	r1, r0
   19c6c:	mvn	r0, #0
   19c70:	cmp	r1, #0
   19c74:	bne	19da8 <argp_failure@@Base+0x3018>
   19c78:	ldr	r0, [fp, #20]
   19c7c:	cmp	r0, #0
   19c80:	bne	19ea8 <argp_failure@@Base+0x3118>
   19c84:	ldr	r1, [fp, #16]
   19c88:	mov	r0, #0
   19c8c:	str	r0, [r1, #20]
   19c90:	str	r0, [r1, #8]
   19c94:	ldr	r0, [r1]
   19c98:	add	r0, r0, #1
   19c9c:	str	r0, [r1]
   19ca0:	mov	r0, #63	; 0x3f
   19ca4:	sub	sp, fp, #28
   19ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cac:	ldr	r0, [fp, #20]
   19cb0:	cmp	r0, #0
   19cb4:	bne	19edc <argp_failure@@Base+0x314c>
   19cb8:	ldr	r0, [r7, #12]
   19cbc:	ldr	r1, [fp, #16]
   19cc0:	str	r0, [r1, #8]
   19cc4:	mov	r0, #63	; 0x3f
   19cc8:	sub	sp, fp, #28
   19ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cd0:	ldr	r5, [sp, #28]
   19cd4:	mov	r0, #0
   19cd8:	mov	r6, #0
   19cdc:	mov	r7, #0
   19ce0:	str	r0, [sp, #32]
   19ce4:	mvn	r0, #0
   19ce8:	str	r0, [sp, #24]
   19cec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19cf0:	mov	r0, sl
   19cf4:	mov	r1, r8
   19cf8:	bl	11594 <strncmp@plt>
   19cfc:	cmp	r0, #0
   19d00:	beq	19d18 <argp_failure@@Base+0x2f88>
   19d04:	ldr	sl, [r5, #16]!
   19d08:	add	r6, r6, #1
   19d0c:	cmp	sl, #0
   19d10:	bne	19cec <argp_failure@@Base+0x2f5c>
   19d14:	b	19d60 <argp_failure@@Base+0x2fd0>
   19d18:	cmp	r7, #0
   19d1c:	beq	19d44 <argp_failure@@Base+0x2fb4>
   19d20:	ldr	r0, [sp, #32]
   19d24:	cmp	r0, #0
   19d28:	movweq	r0, #1
   19d2c:	str	r0, [sp, #32]
   19d30:	ldr	sl, [r5, #16]!
   19d34:	add	r6, r6, #1
   19d38:	cmp	sl, #0
   19d3c:	bne	19cec <argp_failure@@Base+0x2f5c>
   19d40:	b	19d60 <argp_failure@@Base+0x2fd0>
   19d44:	mov	r7, r5
   19d48:	mov	r0, r6
   19d4c:	str	r6, [sp, #24]
   19d50:	ldr	sl, [r5, #16]!
   19d54:	add	r6, r6, #1
   19d58:	cmp	sl, #0
   19d5c:	bne	19cec <argp_failure@@Base+0x2f5c>
   19d60:	ldr	r6, [sp, #28]
   19d64:	mov	r1, #0
   19d68:	mov	r8, #0
   19d6c:	cmp	r1, #0
   19d70:	ldreq	r0, [sp, #32]
   19d74:	cmpeq	r0, #0
   19d78:	bne	19954 <argp_failure@@Base+0x2bc4>
   19d7c:	b	19b80 <argp_failure@@Base+0x2df0>
   19d80:	ldr	r0, [fp, #20]
   19d84:	cmp	r0, #0
   19d88:	bne	19f0c <argp_failure@@Base+0x317c>
   19d8c:	ldr	r0, [r7, #12]
   19d90:	ldr	r1, [fp, #16]
   19d94:	str	r0, [r1, #8]
   19d98:	ldr	r0, [sp, #12]
   19d9c:	ldrb	r0, [r0]
   19da0:	cmp	r0, #58	; 0x3a
   19da4:	movwne	r0, #63	; 0x3f
   19da8:	sub	sp, fp, #28
   19dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19db0:	movw	sl, #2248	; 0x8c8
   19db4:	mov	r9, r1
   19db8:	ldr	r1, [sp, #32]
   19dbc:	movt	sl, #3
   19dc0:	ldr	r0, [sl]
   19dc4:	cmp	r1, #0
   19dc8:	beq	19e00 <argp_failure@@Base+0x3070>
   19dcc:	ldr	r1, [sp, #16]
   19dd0:	ldr	r3, [fp, #24]
   19dd4:	ldr	r2, [r1]
   19dd8:	ldr	r1, [fp, #16]
   19ddc:	ldr	r1, [r1, #20]
   19de0:	str	r1, [sp]
   19de4:	movw	r1, #52217	; 0xcbf9
   19de8:	movt	r1, #1
   19dec:	bl	1148c <fprintf@plt>
   19df0:	mov	r1, r9
   19df4:	cmp	r8, #0
   19df8:	bne	19968 <argp_failure@@Base+0x2bd8>
   19dfc:	b	19970 <argp_failure@@Base+0x2be0>
   19e00:	bl	11528 <flockfile@plt>
   19e04:	ldr	r1, [fp, #16]
   19e08:	ldr	r0, [sp, #16]
   19e0c:	ldr	r5, [fp, #24]
   19e10:	ldr	r1, [r1, #20]
   19e14:	ldr	r2, [r0]
   19e18:	ldr	r0, [sl]
   19e1c:	mov	r3, r5
   19e20:	str	r1, [sp]
   19e24:	movw	r1, #52249	; 0xcc19
   19e28:	movt	r1, #1
   19e2c:	bl	1148c <fprintf@plt>
   19e30:	cmp	r4, #0
   19e34:	beq	19e84 <argp_failure@@Base+0x30f4>
   19e38:	mov	r7, r9
   19e3c:	ldrb	r0, [r7]
   19e40:	cmp	r0, #0
   19e44:	bne	19e5c <argp_failure@@Base+0x30cc>
   19e48:	add	r6, r6, #16
   19e4c:	add	r7, r7, #1
   19e50:	subs	r4, r4, #1
   19e54:	bne	19e3c <argp_failure@@Base+0x30ac>
   19e58:	b	19e84 <argp_failure@@Base+0x30f4>
   19e5c:	ldr	r3, [r6]
   19e60:	ldr	r0, [sl]
   19e64:	movw	r1, #52296	; 0xcc48
   19e68:	mov	r2, r5
   19e6c:	movt	r1, #1
   19e70:	bl	1148c <fprintf@plt>
   19e74:	add	r6, r6, #16
   19e78:	add	r7, r7, #1
   19e7c:	subs	r4, r4, #1
   19e80:	bne	19e3c <argp_failure@@Base+0x30ac>
   19e84:	ldr	r1, [sl]
   19e88:	mov	r0, #10
   19e8c:	bl	11504 <fputc@plt>
   19e90:	ldr	r0, [sl]
   19e94:	bl	113cc <funlockfile@plt>
   19e98:	mov	r1, r9
   19e9c:	cmp	r8, #0
   19ea0:	bne	19968 <argp_failure@@Base+0x2bd8>
   19ea4:	b	19970 <argp_failure@@Base+0x2be0>
   19ea8:	ldr	r1, [fp, #16]
   19eac:	ldr	r0, [sp, #16]
   19eb0:	ldr	r3, [fp, #24]
   19eb4:	ldr	r2, [r0]
   19eb8:	movw	r0, #2248	; 0x8c8
   19ebc:	ldr	r1, [r1, #20]
   19ec0:	movt	r0, #3
   19ec4:	ldr	r0, [r0]
   19ec8:	str	r1, [sp]
   19ecc:	movw	r1, #52304	; 0xcc50
   19ed0:	movt	r1, #1
   19ed4:	bl	1148c <fprintf@plt>
   19ed8:	b	19c84 <argp_failure@@Base+0x2ef4>
   19edc:	ldr	r0, [sp, #16]
   19ee0:	ldr	r1, [r7]
   19ee4:	ldr	r3, [fp, #24]
   19ee8:	ldr	r2, [r0]
   19eec:	movw	r0, #2248	; 0x8c8
   19ef0:	str	r1, [sp]
   19ef4:	movw	r1, #52336	; 0xcc70
   19ef8:	movt	r0, #3
   19efc:	movt	r1, #1
   19f00:	ldr	r0, [r0]
   19f04:	bl	1148c <fprintf@plt>
   19f08:	b	19cb8 <argp_failure@@Base+0x2f28>
   19f0c:	ldr	r0, [sp, #16]
   19f10:	ldr	r1, [r7]
   19f14:	ldr	r3, [fp, #24]
   19f18:	ldr	r2, [r0]
   19f1c:	movw	r0, #2248	; 0x8c8
   19f20:	str	r1, [sp]
   19f24:	movw	r1, #52381	; 0xcc9d
   19f28:	movt	r0, #3
   19f2c:	movt	r1, #1
   19f30:	ldr	r0, [r0]
   19f34:	bl	1148c <fprintf@plt>
   19f38:	b	19d8c <argp_failure@@Base+0x2ffc>
   19f3c:	push	{r4, r5, r6, r7, fp, lr}
   19f40:	add	fp, sp, #16
   19f44:	sub	sp, sp, #16
   19f48:	movw	r6, #2220	; 0x8ac
   19f4c:	movw	r7, #2280	; 0x8e8
   19f50:	movt	r6, #3
   19f54:	movt	r7, #3
   19f58:	ldm	r6, {r4, r5}
   19f5c:	stm	r7, {r4, r5}
   19f60:	ldr	r5, [fp, #16]
   19f64:	str	r7, [sp, #8]
   19f68:	str	r5, [sp, #12]
   19f6c:	ldr	r5, [fp, #12]
   19f70:	str	r5, [sp, #4]
   19f74:	ldr	r5, [fp, #8]
   19f78:	str	r5, [sp]
   19f7c:	bl	18da8 <argp_failure@@Base+0x2018>
   19f80:	ldr	r1, [r7]
   19f84:	ldr	r2, [r7, #8]
   19f88:	ldr	r3, [r7, #12]
   19f8c:	str	r1, [r6]
   19f90:	movw	r1, #2372	; 0x944
   19f94:	str	r2, [r6, #8]
   19f98:	movt	r1, #3
   19f9c:	str	r3, [r1]
   19fa0:	sub	sp, fp, #16
   19fa4:	pop	{r4, r5, r6, r7, fp, pc}
   19fa8:	push	{r4, r5, r6, sl, fp, lr}
   19fac:	add	fp, sp, #16
   19fb0:	sub	sp, sp, #16
   19fb4:	movw	r5, #2220	; 0x8ac
   19fb8:	movw	r6, #2280	; 0x8e8
   19fbc:	movt	r5, #3
   19fc0:	movt	r6, #3
   19fc4:	ldm	r5, {r3, r4}
   19fc8:	stm	r6, {r3, r4}
   19fcc:	mov	r4, #0
   19fd0:	mov	r3, #1
   19fd4:	str	r4, [sp]
   19fd8:	stmib	sp, {r4, r6}
   19fdc:	str	r3, [sp, #12]
   19fe0:	mov	r3, #0
   19fe4:	bl	18da8 <argp_failure@@Base+0x2018>
   19fe8:	ldr	r1, [r6]
   19fec:	ldr	r2, [r6, #8]
   19ff0:	ldr	r3, [r6, #12]
   19ff4:	str	r1, [r5]
   19ff8:	movw	r1, #2372	; 0x944
   19ffc:	str	r2, [r5, #8]
   1a000:	movt	r1, #3
   1a004:	str	r3, [r1]
   1a008:	sub	sp, fp, #16
   1a00c:	pop	{r4, r5, r6, sl, fp, pc}
   1a010:	cmp	r2, #0
   1a014:	beq	1a044 <argp_failure@@Base+0x32b4>
   1a018:	mvn	r3, #0
   1a01c:	udiv	r3, r3, r2
   1a020:	cmp	r3, r1
   1a024:	bcs	1a044 <argp_failure@@Base+0x32b4>
   1a028:	push	{fp, lr}
   1a02c:	mov	fp, sp
   1a030:	bl	11498 <__errno_location@plt>
   1a034:	mov	r1, #12
   1a038:	str	r1, [r0]
   1a03c:	mov	r0, #0
   1a040:	pop	{fp, pc}
   1a044:	mul	r1, r2, r1
   1a048:	b	15408 <_obstack_memory_used@@Base+0xd30>
   1a04c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a050:	add	fp, sp, #24
   1a054:	mov	r5, r0
   1a058:	mov	r0, #36	; 0x24
   1a05c:	mov	r8, r3
   1a060:	mov	r6, r2
   1a064:	mov	r7, r1
   1a068:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   1a06c:	mov	r4, r0
   1a070:	cmp	r0, #0
   1a074:	beq	1a0b0 <argp_failure@@Base+0x3320>
   1a078:	mov	r0, #0
   1a07c:	stm	r4, {r5, r7}
   1a080:	str	r6, [r4, #8]
   1a084:	str	r8, [r4, #12]
   1a088:	str	r0, [r4, #16]
   1a08c:	str	r0, [r4, #20]
   1a090:	mov	r0, #200	; 0xc8
   1a094:	bl	153d8 <_obstack_memory_used@@Base+0xd00>
   1a098:	cmp	r0, #0
   1a09c:	str	r0, [r4, #24]
   1a0a0:	beq	1a0b8 <argp_failure@@Base+0x3328>
   1a0a4:	add	r1, r0, #200	; 0xc8
   1a0a8:	str	r0, [r4, #28]
   1a0ac:	str	r1, [r4, #32]
   1a0b0:	mov	r0, r4
   1a0b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a0b8:	mov	r0, r4
   1a0bc:	bl	14258 <argp_parse@@Base+0x13b0>
   1a0c0:	mov	r4, #0
   1a0c4:	mov	r0, r4
   1a0c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a0cc:	push	{r4, sl, fp, lr}
   1a0d0:	add	fp, sp, #8
   1a0d4:	mov	r4, r0
   1a0d8:	bl	1a110 <argp_failure@@Base+0x3380>
   1a0dc:	ldr	r0, [r4, #24]
   1a0e0:	ldr	r1, [r4, #28]
   1a0e4:	cmp	r1, r0
   1a0e8:	bls	1a100 <argp_failure@@Base+0x3370>
   1a0ec:	ldr	r3, [r4]
   1a0f0:	sub	r2, r1, r0
   1a0f4:	mov	r1, #1
   1a0f8:	bl	1139c <fwrite_unlocked@plt>
   1a0fc:	ldr	r0, [r4, #24]
   1a100:	bl	14258 <argp_parse@@Base+0x13b0>
   1a104:	mov	r0, r4
   1a108:	pop	{r4, sl, fp, lr}
   1a10c:	b	14258 <argp_parse@@Base+0x13b0>
   1a110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a114:	add	fp, sp, #28
   1a118:	sub	sp, sp, #12
   1a11c:	mov	r8, r0
   1a120:	ldr	r0, [r0, #16]
   1a124:	ldr	r1, [r8, #24]
   1a128:	ldr	ip, [r8, #28]
   1a12c:	add	sl, r1, r0
   1a130:	cmp	sl, ip
   1a134:	bcs	1a6a4 <argp_failure@@Base+0x3914>
   1a138:	ldr	r6, [r8, #20]
   1a13c:	mov	r3, #32
   1a140:	cmp	r6, #0
   1a144:	beq	1a150 <argp_failure@@Base+0x33c0>
   1a148:	mov	r9, sl
   1a14c:	b	1a1f0 <argp_failure@@Base+0x3460>
   1a150:	ldr	r6, [r8, #4]
   1a154:	cmp	r6, #0
   1a158:	beq	1a3f4 <argp_failure@@Base+0x3664>
   1a15c:	ldr	r1, [r8, #32]
   1a160:	add	r0, ip, r6
   1a164:	mov	r5, r6
   1a168:	cmp	r0, r1
   1a16c:	bcs	1a1a4 <argp_failure@@Base+0x3414>
   1a170:	add	r9, sl, r6
   1a174:	sub	r2, ip, sl
   1a178:	mov	r1, sl
   1a17c:	mov	r0, r9
   1a180:	bl	11330 <memmove@plt>
   1a184:	ldr	r0, [r8, #28]
   1a188:	mov	r1, #32
   1a18c:	mov	r2, r6
   1a190:	add	r0, r0, r6
   1a194:	str	r0, [r8, #28]
   1a198:	mov	r0, sl
   1a19c:	bl	114bc <memset@plt>
   1a1a0:	b	1a1e8 <argp_failure@@Base+0x3458>
   1a1a4:	ldr	r0, [r8]
   1a1a8:	ldr	r1, [r0, #20]
   1a1ac:	ldr	r2, [r0, #24]
   1a1b0:	cmp	r1, r2
   1a1b4:	bcs	1a1d0 <argp_failure@@Base+0x3440>
   1a1b8:	add	r2, r1, #1
   1a1bc:	str	r2, [r0, #20]
   1a1c0:	strb	r3, [r1]
   1a1c4:	subs	r5, r5, #1
   1a1c8:	bne	1a1a4 <argp_failure@@Base+0x3414>
   1a1cc:	b	1a1e4 <argp_failure@@Base+0x3454>
   1a1d0:	mov	r1, #32
   1a1d4:	bl	114e0 <__overflow@plt>
   1a1d8:	mov	r3, #32
   1a1dc:	subs	r5, r5, #1
   1a1e0:	bne	1a1a4 <argp_failure@@Base+0x3414>
   1a1e4:	mov	r9, sl
   1a1e8:	str	r6, [r8, #20]
   1a1ec:	ldr	ip, [r8, #28]
   1a1f0:	sub	r4, ip, r9
   1a1f4:	mov	r0, r9
   1a1f8:	mov	r1, #10
   1a1fc:	str	ip, [sp, #8]
   1a200:	mov	r2, r4
   1a204:	bl	114d4 <memchr@plt>
   1a208:	cmn	r6, #1
   1a20c:	mov	r7, r0
   1a210:	movle	r6, #0
   1a214:	strle	r6, [r8, #20]
   1a218:	cmp	r7, #0
   1a21c:	beq	1a254 <argp_failure@@Base+0x34c4>
   1a220:	ldr	r5, [r8, #8]
   1a224:	ldr	ip, [sp, #8]
   1a228:	sub	r0, r7, r9
   1a22c:	mov	r3, #32
   1a230:	add	r0, r0, r6
   1a234:	cmp	r0, r5
   1a238:	bge	1a270 <argp_failure@@Base+0x34e0>
   1a23c:	mov	r6, #0
   1a240:	add	sl, r7, #1
   1a244:	str	r6, [r8, #20]
   1a248:	cmp	sl, ip
   1a24c:	bcc	1a140 <argp_failure@@Base+0x33b0>
   1a250:	b	1a6a4 <argp_failure@@Base+0x3914>
   1a254:	ldr	ip, [sp, #8]
   1a258:	ldr	r5, [r8, #8]
   1a25c:	add	r0, r6, r4
   1a260:	mov	r3, #32
   1a264:	cmp	r0, r5
   1a268:	mov	r7, ip
   1a26c:	bcc	1a684 <argp_failure@@Base+0x38f4>
   1a270:	ldr	r0, [r8, #12]
   1a274:	str	r4, [sp, #4]
   1a278:	cmn	r0, #1
   1a27c:	ble	1a2dc <argp_failure@@Base+0x354c>
   1a280:	sub	sl, r5, r6
   1a284:	mov	r4, r0
   1a288:	mov	r1, #0
   1a28c:	add	r6, r9, sl
   1a290:	cmp	sl, #0
   1a294:	blt	1a334 <argp_failure@@Base+0x35a4>
   1a298:	bl	1145c <__ctype_b_loc@plt>
   1a29c:	ldr	r1, [r0]
   1a2a0:	mov	r0, r6
   1a2a4:	ldrb	r2, [r0]
   1a2a8:	ldrb	r2, [r1, r2, lsl #1]
   1a2ac:	tst	r2, #1
   1a2b0:	bne	1a3fc <argp_failure@@Base+0x366c>
   1a2b4:	sub	r0, r0, #1
   1a2b8:	cmp	r0, r9
   1a2bc:	bcs	1a2a4 <argp_failure@@Base+0x3514>
   1a2c0:	ldr	ip, [sp, #8]
   1a2c4:	mov	r3, #32
   1a2c8:	mov	r1, #0
   1a2cc:	add	r5, r0, #1
   1a2d0:	cmp	r5, r9
   1a2d4:	bhi	1a344 <argp_failure@@Base+0x35b4>
   1a2d8:	b	1a414 <argp_failure@@Base+0x3684>
   1a2dc:	sub	sl, r5, #1
   1a2e0:	cmp	r7, ip
   1a2e4:	bcs	1a68c <argp_failure@@Base+0x38fc>
   1a2e8:	sub	r0, sl, r6
   1a2ec:	sub	r2, ip, r7
   1a2f0:	mov	r1, r7
   1a2f4:	add	r0, r9, r0
   1a2f8:	bl	11330 <memmove@plt>
   1a2fc:	ldr	r0, [r8, #20]
   1a300:	ldr	r1, [r8, #28]
   1a304:	mov	r6, #0
   1a308:	mov	r3, #32
   1a30c:	str	r6, [r8, #20]
   1a310:	sub	r0, sl, r0
   1a314:	add	sl, r9, r5
   1a318:	add	r0, r9, r0
   1a31c:	sub	r0, r7, r0
   1a320:	add	ip, r1, r0
   1a324:	str	ip, [r8, #28]
   1a328:	cmp	sl, ip
   1a32c:	bcc	1a140 <argp_failure@@Base+0x33b0>
   1a330:	b	1a6a4 <argp_failure@@Base+0x3914>
   1a334:	mov	r0, r6
   1a338:	add	r5, r0, #1
   1a33c:	cmp	r5, r9
   1a340:	bls	1a414 <argp_failure@@Base+0x3684>
   1a344:	cmp	r1, #0
   1a348:	beq	1a520 <argp_failure@@Base+0x3790>
   1a34c:	sub	r1, r0, #1
   1a350:	mov	r7, r4
   1a354:	mov	r6, r1
   1a358:	cmp	r1, r9
   1a35c:	bcc	1a37c <argp_failure@@Base+0x35ec>
   1a360:	bl	1145c <__ctype_b_loc@plt>
   1a364:	mov	r1, r6
   1a368:	ldr	r0, [r0]
   1a36c:	ldrb	r2, [r1], #-1
   1a370:	ldrb	r0, [r0, r2, lsl #1]
   1a374:	tst	r0, #1
   1a378:	bne	1a354 <argp_failure@@Base+0x35c4>
   1a37c:	ldr	ip, [sp, #8]
   1a380:	add	r6, r6, #1
   1a384:	mov	r3, #32
   1a388:	add	r0, ip, #1
   1a38c:	cmp	r5, r0
   1a390:	bne	1a488 <argp_failure@@Base+0x36f8>
   1a394:	cmp	ip, r5
   1a398:	bls	1a558 <argp_failure@@Base+0x37c8>
   1a39c:	ldr	r0, [r8, #32]
   1a3a0:	sub	r1, r0, r6
   1a3a4:	cmp	r1, r7
   1a3a8:	bgt	1a558 <argp_failure@@Base+0x37c8>
   1a3ac:	sub	r0, r0, ip
   1a3b0:	add	r1, r7, #1
   1a3b4:	cmp	r0, r1
   1a3b8:	ble	1a4b4 <argp_failure@@Base+0x3724>
   1a3bc:	sub	r4, ip, r5
   1a3c0:	add	sl, r6, #1
   1a3c4:	mov	r1, r5
   1a3c8:	add	r0, sl, r7
   1a3cc:	mov	r2, r4
   1a3d0:	bl	11330 <memmove@plt>
   1a3d4:	ldr	r0, [r8, #12]
   1a3d8:	mov	r1, #10
   1a3dc:	mov	r3, #32
   1a3e0:	strb	r1, [r6]
   1a3e4:	add	r5, sl, r0
   1a3e8:	add	r0, r5, r4
   1a3ec:	sub	r0, r0, r9
   1a3f0:	b	1a508 <argp_failure@@Base+0x3778>
   1a3f4:	mov	r6, #0
   1a3f8:	b	1a148 <argp_failure@@Base+0x33b8>
   1a3fc:	ldr	ip, [sp, #8]
   1a400:	mov	r1, #1
   1a404:	mov	r3, #32
   1a408:	add	r5, r0, #1
   1a40c:	cmp	r5, r9
   1a410:	bhi	1a344 <argp_failure@@Base+0x35b4>
   1a414:	cmp	r6, r7
   1a418:	bcs	1a44c <argp_failure@@Base+0x36bc>
   1a41c:	add	r0, r9, sl
   1a420:	add	r1, r0, #1
   1a424:	mov	r6, r1
   1a428:	cmp	r1, r7
   1a42c:	bcs	1a44c <argp_failure@@Base+0x36bc>
   1a430:	bl	1145c <__ctype_b_loc@plt>
   1a434:	mov	r1, r6
   1a438:	ldr	r0, [r0]
   1a43c:	ldrb	r2, [r1], #1
   1a440:	ldrb	r0, [r0, r2, lsl #1]
   1a444:	tst	r0, #1
   1a448:	beq	1a424 <argp_failure@@Base+0x3694>
   1a44c:	cmp	r6, r7
   1a450:	beq	1a538 <argp_failure@@Base+0x37a8>
   1a454:	bl	1145c <__ctype_b_loc@plt>
   1a458:	ldr	r0, [r0]
   1a45c:	mov	r5, r6
   1a460:	ldrb	r1, [r5, #1]!
   1a464:	ldrb	r1, [r0, r1, lsl #1]
   1a468:	tst	r1, #1
   1a46c:	bne	1a460 <argp_failure@@Base+0x36d0>
   1a470:	ldr	ip, [sp, #8]
   1a474:	mov	r3, #32
   1a478:	mov	r7, r4
   1a47c:	add	r0, ip, #1
   1a480:	cmp	r5, r0
   1a484:	beq	1a394 <argp_failure@@Base+0x3604>
   1a488:	add	sl, r6, #1
   1a48c:	cmp	ip, r5
   1a490:	bls	1a55c <argp_failure@@Base+0x37cc>
   1a494:	sub	r0, r5, sl
   1a498:	cmp	r0, r7
   1a49c:	bge	1a55c <argp_failure@@Base+0x37cc>
   1a4a0:	ldr	r0, [r8, #32]
   1a4a4:	sub	r0, r0, ip
   1a4a8:	add	r1, r7, #1
   1a4ac:	cmp	r0, r1
   1a4b0:	bgt	1a3bc <argp_failure@@Base+0x362c>
   1a4b4:	ldr	r0, [r8, #24]
   1a4b8:	cmp	r6, r0
   1a4bc:	bls	1a4d8 <argp_failure@@Base+0x3748>
   1a4c0:	ldr	r3, [r8]
   1a4c4:	sub	r2, r6, r0
   1a4c8:	mov	r1, #1
   1a4cc:	bl	1139c <fwrite_unlocked@plt>
   1a4d0:	ldr	ip, [sp, #8]
   1a4d4:	mov	r3, #32
   1a4d8:	ldr	r0, [r8]
   1a4dc:	ldr	r1, [r0, #20]
   1a4e0:	ldr	r2, [r0, #24]
   1a4e4:	cmp	r1, r2
   1a4e8:	bcs	1a670 <argp_failure@@Base+0x38e0>
   1a4ec:	add	r2, r1, #1
   1a4f0:	str	r2, [r0, #20]
   1a4f4:	mov	r0, #10
   1a4f8:	strb	r0, [r1]
   1a4fc:	ldr	sl, [r8, #24]
   1a500:	sub	r0, ip, sl
   1a504:	mov	r9, sl
   1a508:	str	r0, [sp, #4]
   1a50c:	ldr	r6, [r8, #12]
   1a510:	sub	r0, r5, sl
   1a514:	cmp	r0, r6
   1a518:	blt	1a574 <argp_failure@@Base+0x37e4>
   1a51c:	b	1a5f8 <argp_failure@@Base+0x3868>
   1a520:	mov	r6, r5
   1a524:	mov	r7, r4
   1a528:	add	r0, ip, #1
   1a52c:	cmp	r5, r0
   1a530:	bne	1a488 <argp_failure@@Base+0x36f8>
   1a534:	b	1a394 <argp_failure@@Base+0x3604>
   1a538:	ldr	ip, [sp, #8]
   1a53c:	mov	r6, #0
   1a540:	add	sl, r7, #1
   1a544:	mov	r3, #32
   1a548:	str	r6, [r8, #20]
   1a54c:	cmp	sl, ip
   1a550:	bcc	1a140 <argp_failure@@Base+0x33b0>
   1a554:	b	1a6a4 <argp_failure@@Base+0x3914>
   1a558:	add	sl, r6, #1
   1a55c:	mov	r0, #10
   1a560:	strb	r0, [r6]
   1a564:	ldr	r6, [r8, #12]
   1a568:	sub	r0, r5, sl
   1a56c:	cmp	r0, r6
   1a570:	bge	1a5f8 <argp_failure@@Base+0x3868>
   1a574:	ldr	r0, [sp, #4]
   1a578:	add	r0, r9, r0
   1a57c:	add	r0, r0, #1
   1a580:	cmp	r5, r0
   1a584:	bne	1a598 <argp_failure@@Base+0x3808>
   1a588:	ldr	r0, [r8, #32]
   1a58c:	sub	r0, r0, r5
   1a590:	cmp	r0, r6
   1a594:	bge	1a5f8 <argp_failure@@Base+0x3868>
   1a598:	cmp	r6, #1
   1a59c:	blt	1a61c <argp_failure@@Base+0x388c>
   1a5a0:	mov	r7, #0
   1a5a4:	ldr	r0, [r8]
   1a5a8:	ldr	r1, [r0, #20]
   1a5ac:	ldr	r2, [r0, #24]
   1a5b0:	cmp	r1, r2
   1a5b4:	bcs	1a5d8 <argp_failure@@Base+0x3848>
   1a5b8:	add	r2, r1, #1
   1a5bc:	str	r2, [r0, #20]
   1a5c0:	strb	r3, [r1]
   1a5c4:	ldr	r6, [r8, #12]
   1a5c8:	add	r7, r7, #1
   1a5cc:	cmp	r7, r6
   1a5d0:	blt	1a5a4 <argp_failure@@Base+0x3814>
   1a5d4:	b	1a61c <argp_failure@@Base+0x388c>
   1a5d8:	mov	r1, #32
   1a5dc:	bl	114e0 <__overflow@plt>
   1a5e0:	mov	r3, #32
   1a5e4:	ldr	r6, [r8, #12]
   1a5e8:	add	r7, r7, #1
   1a5ec:	cmp	r7, r6
   1a5f0:	blt	1a5a4 <argp_failure@@Base+0x3814>
   1a5f4:	b	1a61c <argp_failure@@Base+0x388c>
   1a5f8:	cmp	r6, #1
   1a5fc:	blt	1a61c <argp_failure@@Base+0x388c>
   1a600:	mov	r0, #0
   1a604:	strb	r3, [sl, r0]
   1a608:	add	r0, r0, #1
   1a60c:	ldr	r6, [r8, #12]
   1a610:	cmp	r0, r6
   1a614:	blt	1a604 <argp_failure@@Base+0x3874>
   1a618:	add	sl, sl, r0
   1a61c:	cmp	sl, r5
   1a620:	bcs	1a644 <argp_failure@@Base+0x38b4>
   1a624:	ldr	r0, [sp, #4]
   1a628:	mov	r1, r5
   1a62c:	add	r0, r9, r0
   1a630:	sub	r2, r0, r5
   1a634:	mov	r0, sl
   1a638:	bl	11330 <memmove@plt>
   1a63c:	ldr	r6, [r8, #12]
   1a640:	mov	r3, #32
   1a644:	ldr	r0, [sp, #4]
   1a648:	cmp	r6, #0
   1a64c:	mvneq	r6, #0
   1a650:	str	r6, [r8, #20]
   1a654:	sub	r0, r0, r5
   1a658:	add	r0, r0, r9
   1a65c:	add	ip, sl, r0
   1a660:	str	ip, [r8, #28]
   1a664:	cmp	sl, ip
   1a668:	bcc	1a140 <argp_failure@@Base+0x33b0>
   1a66c:	b	1a6a4 <argp_failure@@Base+0x3914>
   1a670:	mov	r1, #10
   1a674:	bl	114e0 <__overflow@plt>
   1a678:	ldr	ip, [sp, #8]
   1a67c:	mov	r3, #32
   1a680:	b	1a4fc <argp_failure@@Base+0x376c>
   1a684:	str	r0, [r8, #20]
   1a688:	b	1a6a4 <argp_failure@@Base+0x3914>
   1a68c:	ldr	r0, [sp, #4]
   1a690:	add	r0, r6, r0
   1a694:	str	r0, [r8, #20]
   1a698:	sub	r0, sl, r0
   1a69c:	add	ip, ip, r0
   1a6a0:	str	ip, [r8, #28]
   1a6a4:	ldr	r0, [r8, #24]
   1a6a8:	sub	r0, ip, r0
   1a6ac:	str	r0, [r8, #16]
   1a6b0:	sub	sp, fp, #28
   1a6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6b8:	push	{r4, r5, r6, sl, fp, lr}
   1a6bc:	add	fp, sp, #16
   1a6c0:	mov	r4, r0
   1a6c4:	mov	r6, r1
   1a6c8:	ldr	r0, [r0, #28]
   1a6cc:	mov	r5, #1
   1a6d0:	ldr	r1, [r4, #32]
   1a6d4:	sub	r0, r1, r0
   1a6d8:	cmp	r0, r6
   1a6dc:	bcs	1a79c <argp_failure@@Base+0x3a0c>
   1a6e0:	mov	r0, r4
   1a6e4:	bl	1a110 <argp_failure@@Base+0x3380>
   1a6e8:	ldr	r0, [r4, #24]
   1a6ec:	ldr	r1, [r4, #28]
   1a6f0:	ldr	r3, [r4]
   1a6f4:	mov	r5, #1
   1a6f8:	sub	r2, r1, r0
   1a6fc:	mov	r1, #1
   1a700:	bl	1139c <fwrite_unlocked@plt>
   1a704:	mov	r1, r0
   1a708:	ldr	r0, [r4, #24]
   1a70c:	ldr	r2, [r4, #28]
   1a710:	sub	r3, r2, r0
   1a714:	cmp	r1, r3
   1a718:	bne	1a768 <argp_failure@@Base+0x39d8>
   1a71c:	mov	r1, #0
   1a720:	str	r1, [r4, #16]
   1a724:	str	r0, [r4, #28]
   1a728:	ldr	r1, [r4, #32]
   1a72c:	sub	r1, r1, r0
   1a730:	cmp	r1, r6
   1a734:	bcs	1a79c <argp_failure@@Base+0x3a0c>
   1a738:	adds	r6, r1, r6
   1a73c:	bcs	1a78c <argp_failure@@Base+0x39fc>
   1a740:	mov	r1, r6
   1a744:	bl	15408 <_obstack_memory_used@@Base+0xd30>
   1a748:	cmp	r0, #0
   1a74c:	beq	1a78c <argp_failure@@Base+0x39fc>
   1a750:	str	r0, [r4, #24]
   1a754:	add	r1, r0, r6
   1a758:	str	r0, [r4, #28]
   1a75c:	mov	r0, r5
   1a760:	str	r1, [r4, #32]
   1a764:	pop	{r4, r5, r6, sl, fp, pc}
   1a768:	sub	r2, r2, r1
   1a76c:	str	r2, [r4, #28]
   1a770:	sub	r2, r2, r0
   1a774:	ldr	r3, [r4, #16]
   1a778:	sub	r3, r3, r1
   1a77c:	add	r1, r0, r1
   1a780:	str	r3, [r4, #16]
   1a784:	bl	11330 <memmove@plt>
   1a788:	b	1a798 <argp_failure@@Base+0x3a08>
   1a78c:	bl	11498 <__errno_location@plt>
   1a790:	mov	r1, #12
   1a794:	str	r1, [r0]
   1a798:	mov	r5, #0
   1a79c:	mov	r0, r5
   1a7a0:	pop	{r4, r5, r6, sl, fp, pc}
   1a7a4:	sub	sp, sp, #8
   1a7a8:	push	{r4, r5, r6, r7, fp, lr}
   1a7ac:	add	fp, sp, #16
   1a7b0:	sub	sp, sp, #8
   1a7b4:	mov	r5, r1
   1a7b8:	mov	r4, r0
   1a7bc:	mov	r1, #150	; 0x96
   1a7c0:	add	r6, fp, #8
   1a7c4:	str	r3, [fp, #12]
   1a7c8:	str	r2, [fp, #8]
   1a7cc:	mov	r0, r4
   1a7d0:	bl	1a6b8 <argp_failure@@Base+0x3928>
   1a7d4:	cmp	r0, #0
   1a7d8:	beq	1a824 <argp_failure@@Base+0x3a94>
   1a7dc:	str	r6, [sp, #4]
   1a7e0:	mov	r2, r5
   1a7e4:	mov	r3, r6
   1a7e8:	ldr	r0, [r4, #28]
   1a7ec:	ldr	r1, [r4, #32]
   1a7f0:	sub	r7, r1, r0
   1a7f4:	mov	r1, r7
   1a7f8:	bl	11534 <vsnprintf@plt>
   1a7fc:	add	r1, r0, #1
   1a800:	cmp	r0, r7
   1a804:	bcs	1a7cc <argp_failure@@Base+0x3a3c>
   1a808:	ldr	r1, [r4, #28]
   1a80c:	add	r1, r1, r0
   1a810:	str	r1, [r4, #28]
   1a814:	sub	sp, fp, #16
   1a818:	pop	{r4, r5, r6, r7, fp, lr}
   1a81c:	add	sp, sp, #8
   1a820:	bx	lr
   1a824:	mvn	r0, #0
   1a828:	sub	sp, fp, #16
   1a82c:	pop	{r4, r5, r6, r7, fp, lr}
   1a830:	add	sp, sp, #8
   1a834:	bx	lr
   1a838:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a83c:	mov	r7, r0
   1a840:	ldr	r6, [pc, #72]	; 1a890 <argp_failure@@Base+0x3b00>
   1a844:	ldr	r5, [pc, #72]	; 1a894 <argp_failure@@Base+0x3b04>
   1a848:	add	r6, pc, r6
   1a84c:	add	r5, pc, r5
   1a850:	sub	r6, r6, r5
   1a854:	mov	r8, r1
   1a858:	mov	r9, r2
   1a85c:	bl	112bc <fdopen@plt-0x20>
   1a860:	asrs	r6, r6, #2
   1a864:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a868:	mov	r4, #0
   1a86c:	add	r4, r4, #1
   1a870:	ldr	r3, [r5], #4
   1a874:	mov	r2, r9
   1a878:	mov	r1, r8
   1a87c:	mov	r0, r7
   1a880:	blx	r3
   1a884:	cmp	r6, r4
   1a888:	bne	1a86c <argp_failure@@Base+0x3adc>
   1a88c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a890:			; <UNDEFINED> instruction: 0x000126bc
   1a894:			; <UNDEFINED> instruction: 0x000126b4
   1a898:	bx	lr

Disassembly of section .fini:

0001a89c <.fini>:
   1a89c:	push	{r3, lr}
   1a8a0:	pop	{r3, pc}
