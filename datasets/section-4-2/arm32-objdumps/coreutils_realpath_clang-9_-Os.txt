
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010dcc <.init>:
   10dcc:	push	{r3, lr}
   10dd0:	bl	1109c <__mempcpy_chk@plt+0x4c>
   10dd4:	pop	{r3, pc}

Disassembly of section .plt:

00010dd8 <calloc@plt-0x14>:
   10dd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10ddc:	ldr	lr, [pc, #4]	; 10de8 <calloc@plt-0x4>
   10de0:	add	lr, pc, lr
   10de4:	ldr	pc, [lr, #8]!
   10de8:	andeq	r6, r1, r8, lsl r2

00010dec <calloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #536]!	; 0x218

00010df8 <fputs_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #528]!	; 0x210

00010e04 <raise@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #520]!	; 0x208

00010e10 <strcmp@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #512]!	; 0x200

00010e1c <fflush@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #504]!	; 0x1f8

00010e28 <memmove@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #496]!	; 0x1f0

00010e34 <free@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e40 <faccessat@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #480]!	; 0x1e0

00010e4c <_exit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #472]!	; 0x1d8

00010e58 <memcpy@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #464]!	; 0x1d0

00010e64 <mbsinit@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e70 <dcgettext@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #448]!	; 0x1c0

00010e7c <realloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #440]!	; 0x1b8

00010e88 <textdomain@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #432]!	; 0x1b0

00010e94 <rawmemchr@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #424]!	; 0x1a8

00010ea0 <iswprint@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #416]!	; 0x1a0

00010eac <readlink@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #408]!	; 0x198

00010eb8 <lseek64@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #400]!	; 0x190

00010ec4 <__ctype_get_mb_cur_max@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #392]!	; 0x188

00010ed0 <__fpending@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #384]!	; 0x180

00010edc <ferror_unlocked@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #376]!	; 0x178

00010ee8 <mbrtowc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #368]!	; 0x170

00010ef4 <error@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #360]!	; 0x168

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #352]!	; 0x160

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #344]!	; 0x158

00010f18 <__freading@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #336]!	; 0x150

00010f24 <__gmon_start__@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #328]!	; 0x148

00010f30 <getopt_long@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #320]!	; 0x140

00010f3c <__ctype_b_loc@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #312]!	; 0x138

00010f48 <getcwd@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #304]!	; 0x130

00010f54 <exit@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #296]!	; 0x128

00010f60 <bcmp@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #288]!	; 0x120

00010f6c <strlen@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #280]!	; 0x118

00010f78 <__errno_location@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #272]!	; 0x110

00010f84 <__cxa_atexit@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #264]!	; 0x108

00010f90 <memset@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #256]!	; 0x100

00010f9c <__printf_chk@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #248]!	; 0xf8

00010fa8 <fileno@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #240]!	; 0xf0

00010fb4 <__fprintf_chk@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #232]!	; 0xe8

00010fc0 <fclose@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #224]!	; 0xe0

00010fcc <fseeko64@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #216]!	; 0xd8

00010fd8 <setlocale@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #208]!	; 0xd0

00010fe4 <strrchr@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #200]!	; 0xc8

00010ff0 <nl_langinfo@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #192]!	; 0xc0

00010ffc <bindtextdomain@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #184]!	; 0xb8

00011008 <__xstat64@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #176]!	; 0xb0

00011014 <fputs@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #168]!	; 0xa8

00011020 <strncmp@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #160]!	; 0xa0

0001102c <abort@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #152]!	; 0x98

00011038 <putchar_unlocked@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #144]!	; 0x90

00011044 <strspn@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #136]!	; 0x88

00011050 <__mempcpy_chk@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #128]!	; 0x80

Disassembly of section .text:

00011060 <.text>:
   11060:	mov	fp, #0
   11064:	mov	lr, #0
   11068:	pop	{r1}		; (ldr r1, [sp], #4)
   1106c:	mov	r2, sp
   11070:	push	{r2}		; (str r2, [sp, #-4]!)
   11074:	push	{r0}		; (str r0, [sp, #-4]!)
   11078:	ldr	ip, [pc, #16]	; 11090 <__mempcpy_chk@plt+0x40>
   1107c:	push	{ip}		; (str ip, [sp, #-4]!)
   11080:	ldr	r0, [pc, #12]	; 11094 <__mempcpy_chk@plt+0x44>
   11084:	ldr	r3, [pc, #12]	; 11098 <__mempcpy_chk@plt+0x48>
   11088:	bl	10f0c <__libc_start_main@plt>
   1108c:	bl	1102c <abort@plt>
   11090:	andeq	r6, r1, r8, asr r2
   11094:	muleq	r1, r0, r3
   11098:	strdeq	r6, [r1], -r8
   1109c:	ldr	r3, [pc, #20]	; 110b8 <__mempcpy_chk@plt+0x68>
   110a0:	ldr	r2, [pc, #20]	; 110bc <__mempcpy_chk@plt+0x6c>
   110a4:	add	r3, pc, r3
   110a8:	ldr	r2, [r3, r2]
   110ac:	cmp	r2, #0
   110b0:	bxeq	lr
   110b4:	b	10f24 <__gmon_start__@plt>
   110b8:	andeq	r5, r1, r4, asr pc
   110bc:	ldrdeq	r0, [r0], -ip
   110c0:	ldr	r0, [pc, #24]	; 110e0 <__mempcpy_chk@plt+0x90>
   110c4:	ldr	r3, [pc, #24]	; 110e4 <__mempcpy_chk@plt+0x94>
   110c8:	cmp	r3, r0
   110cc:	bxeq	lr
   110d0:	ldr	r3, [pc, #16]	; 110e8 <__mempcpy_chk@plt+0x98>
   110d4:	cmp	r3, #0
   110d8:	bxeq	lr
   110dc:	bx	r3
   110e0:	andeq	r7, r2, r0, lsr r1
   110e4:	andeq	r7, r2, r0, lsr r1
   110e8:	andeq	r0, r0, r0
   110ec:	ldr	r0, [pc, #36]	; 11118 <__mempcpy_chk@plt+0xc8>
   110f0:	ldr	r1, [pc, #36]	; 1111c <__mempcpy_chk@plt+0xcc>
   110f4:	sub	r1, r1, r0
   110f8:	asr	r1, r1, #2
   110fc:	add	r1, r1, r1, lsr #31
   11100:	asrs	r1, r1, #1
   11104:	bxeq	lr
   11108:	ldr	r3, [pc, #16]	; 11120 <__mempcpy_chk@plt+0xd0>
   1110c:	cmp	r3, #0
   11110:	bxeq	lr
   11114:	bx	r3
   11118:	andeq	r7, r2, r0, lsr r1
   1111c:	andeq	r7, r2, r0, lsr r1
   11120:	andeq	r0, r0, r0
   11124:	push	{r4, lr}
   11128:	ldr	r4, [pc, #24]	; 11148 <__mempcpy_chk@plt+0xf8>
   1112c:	ldrb	r3, [r4]
   11130:	cmp	r3, #0
   11134:	popne	{r4, pc}
   11138:	bl	110c0 <__mempcpy_chk@plt+0x70>
   1113c:	mov	r3, #1
   11140:	strb	r3, [r4]
   11144:	pop	{r4, pc}
   11148:	andeq	r7, r2, ip, asr #2
   1114c:	b	110ec <__mempcpy_chk@plt+0x9c>
   11150:	push	{fp, lr}
   11154:	mov	fp, sp
   11158:	sub	sp, sp, #56	; 0x38
   1115c:	mov	r8, r0
   11160:	cmp	r0, #0
   11164:	bne	11350 <__mempcpy_chk@plt+0x300>
   11168:	movw	r1, #25275	; 0x62bb
   1116c:	mov	r0, #0
   11170:	mov	r2, #5
   11174:	movt	r1, #1
   11178:	bl	10e70 <dcgettext@plt>
   1117c:	mov	r1, r0
   11180:	movw	r0, #29028	; 0x7164
   11184:	movt	r0, #2
   11188:	ldr	r2, [r0]
   1118c:	mov	r0, #1
   11190:	bl	10f9c <__printf_chk@plt>
   11194:	movw	r1, #25306	; 0x62da
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e70 <dcgettext@plt>
   111a8:	movw	r9, #28996	; 0x7144
   111ac:	movt	r9, #2
   111b0:	ldr	r1, [r9]
   111b4:	bl	10df8 <fputs_unlocked@plt>
   111b8:	movw	r1, #25385	; 0x6329
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10e70 <dcgettext@plt>
   111cc:	ldr	r1, [r9]
   111d0:	bl	10df8 <fputs_unlocked@plt>
   111d4:	movw	r1, #26011	; 0x659b
   111d8:	mov	r0, #0
   111dc:	mov	r2, #5
   111e0:	movt	r1, #1
   111e4:	bl	10e70 <dcgettext@plt>
   111e8:	ldr	r1, [r9]
   111ec:	bl	10df8 <fputs_unlocked@plt>
   111f0:	movw	r1, #26056	; 0x65c8
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	movt	r1, #1
   11200:	bl	10e70 <dcgettext@plt>
   11204:	ldr	r1, [r9]
   11208:	bl	10df8 <fputs_unlocked@plt>
   1120c:	movw	r0, #26864	; 0x68f0
   11210:	mov	r6, sp
   11214:	movt	r0, #1
   11218:	mov	r1, r6
   1121c:	ldm	r0!, {r2, r3, r4, r5}
   11220:	stmia	r1!, {r2, r3, r4, r5}
   11224:	ldm	r0!, {r2, r3, r4, r5, r7}
   11228:	stmia	r1!, {r2, r3, r4, r5, r7}
   1122c:	ldm	r0, {r2, r3, r4, r5, r7}
   11230:	stm	r1, {r2, r3, r4, r5, r7}
   11234:	movw	r1, #26195	; 0x6653
   11238:	movw	r5, #26110	; 0x65fe
   1123c:	movt	r1, #1
   11240:	movt	r5, #1
   11244:	mov	r0, r5
   11248:	bl	10e10 <strcmp@plt>
   1124c:	cmp	r0, #0
   11250:	ldrne	r1, [r6, #8]!
   11254:	cmpne	r1, #0
   11258:	bne	11244 <__mempcpy_chk@plt+0x1f4>
   1125c:	movw	r1, #26290	; 0x66b2
   11260:	ldr	r6, [r6, #4]
   11264:	mov	r0, #0
   11268:	mov	r2, #5
   1126c:	movt	r1, #1
   11270:	bl	10e70 <dcgettext@plt>
   11274:	movw	r2, #26151	; 0x6627
   11278:	movw	r3, #26313	; 0x66c9
   1127c:	mov	r1, r0
   11280:	mov	r0, #1
   11284:	movt	r2, #1
   11288:	movt	r3, #1
   1128c:	bl	10f9c <__printf_chk@plt>
   11290:	cmp	r6, #0
   11294:	mov	r0, #5
   11298:	mov	r1, #0
   1129c:	moveq	r6, r5
   112a0:	bl	10fd8 <setlocale@plt>
   112a4:	cmp	r0, #0
   112a8:	beq	112e0 <__mempcpy_chk@plt+0x290>
   112ac:	movw	r1, #26353	; 0x66f1
   112b0:	mov	r2, #3
   112b4:	movt	r1, #1
   112b8:	bl	11020 <strncmp@plt>
   112bc:	cmp	r0, #0
   112c0:	beq	112e0 <__mempcpy_chk@plt+0x290>
   112c4:	movw	r1, #26357	; 0x66f5
   112c8:	mov	r0, #0
   112cc:	mov	r2, #5
   112d0:	movt	r1, #1
   112d4:	bl	10e70 <dcgettext@plt>
   112d8:	ldr	r1, [r9]
   112dc:	bl	10df8 <fputs_unlocked@plt>
   112e0:	movw	r1, #26428	; 0x673c
   112e4:	mov	r0, #0
   112e8:	mov	r2, #5
   112ec:	movt	r1, #1
   112f0:	bl	10e70 <dcgettext@plt>
   112f4:	movw	r2, #26313	; 0x66c9
   112f8:	mov	r1, r0
   112fc:	mov	r0, #1
   11300:	mov	r3, r5
   11304:	movt	r2, #1
   11308:	bl	10f9c <__printf_chk@plt>
   1130c:	movw	r1, #26455	; 0x6757
   11310:	mov	r0, #0
   11314:	mov	r2, #5
   11318:	movt	r1, #1
   1131c:	bl	10e70 <dcgettext@plt>
   11320:	mov	r1, r0
   11324:	movw	r0, #26223	; 0x666f
   11328:	movw	r3, #25384	; 0x6328
   1132c:	cmp	r6, r5
   11330:	mov	r2, r6
   11334:	movt	r0, #1
   11338:	movt	r3, #1
   1133c:	moveq	r3, r0
   11340:	mov	r0, #1
   11344:	bl	10f9c <__printf_chk@plt>
   11348:	mov	r0, r8
   1134c:	bl	10f54 <exit@plt>
   11350:	movw	r0, #28992	; 0x7140
   11354:	movw	r1, #25236	; 0x6294
   11358:	mov	r2, #5
   1135c:	movt	r0, #2
   11360:	movt	r1, #1
   11364:	ldr	r5, [r0]
   11368:	mov	r0, #0
   1136c:	bl	10e70 <dcgettext@plt>
   11370:	mov	r2, r0
   11374:	movw	r0, #29028	; 0x7164
   11378:	mov	r1, #1
   1137c:	movt	r0, #2
   11380:	ldr	r3, [r0]
   11384:	mov	r0, r5
   11388:	bl	10fb4 <__fprintf_chk@plt>
   1138c:	b	11348 <__mempcpy_chk@plt+0x2f8>
   11390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11394:	add	fp, sp, #28
   11398:	sub	sp, sp, #12
   1139c:	mov	r5, r0
   113a0:	ldr	r0, [r1]
   113a4:	str	r1, [sp, #8]
   113a8:	bl	135a4 <__mempcpy_chk@plt+0x2554>
   113ac:	movw	r1, #25384	; 0x6328
   113b0:	mov	r0, #6
   113b4:	movt	r1, #1
   113b8:	bl	10fd8 <setlocale@plt>
   113bc:	movw	r4, #26155	; 0x662b
   113c0:	movw	r1, #26119	; 0x6607
   113c4:	movt	r4, #1
   113c8:	movt	r1, #1
   113cc:	mov	r0, r4
   113d0:	bl	10ffc <bindtextdomain@plt>
   113d4:	mov	r0, r4
   113d8:	bl	10e88 <textdomain@plt>
   113dc:	movw	r0, #9128	; 0x23a8
   113e0:	movt	r0, #1
   113e4:	bl	1625c <__mempcpy_chk@plt+0x520c>
   113e8:	movw	r9, #26143	; 0x661f
   113ec:	movw	r7, #26656	; 0x6820
   113f0:	mov	r8, #0
   113f4:	mov	r4, #0
   113f8:	mov	sl, #0
   113fc:	mov	r6, #1
   11400:	movt	r9, #1
   11404:	movt	r7, #1
   11408:	ldr	r1, [sp, #8]
   1140c:	mov	r0, r5
   11410:	mov	r2, r9
   11414:	mov	r3, r7
   11418:	str	r8, [sp]
   1141c:	bl	10f30 <getopt_long@plt>
   11420:	cmp	r0, #112	; 0x70
   11424:	bgt	11448 <__mempcpy_chk@plt+0x3f8>
   11428:	cmp	r0, #79	; 0x4f
   1142c:	ble	11470 <__mempcpy_chk@plt+0x420>
   11430:	cmp	r0, #80	; 0x50
   11434:	beq	114c0 <__mempcpy_chk@plt+0x470>
   11438:	cmp	r0, #101	; 0x65
   1143c:	bne	1150c <__mempcpy_chk@plt+0x4bc>
   11440:	bic	r6, r6, #3
   11444:	b	11408 <__mempcpy_chk@plt+0x3b8>
   11448:	cmp	r0, #121	; 0x79
   1144c:	ble	11498 <__mempcpy_chk@plt+0x448>
   11450:	cmp	r0, #122	; 0x7a
   11454:	beq	114ac <__mempcpy_chk@plt+0x45c>
   11458:	cmp	r0, #256	; 0x100
   1145c:	bne	114d4 <__mempcpy_chk@plt+0x484>
   11460:	movw	r0, #29000	; 0x7148
   11464:	movt	r0, #2
   11468:	ldr	r4, [r0]
   1146c:	b	11408 <__mempcpy_chk@plt+0x3b8>
   11470:	cmp	r0, #75	; 0x4b
   11474:	ble	11520 <__mempcpy_chk@plt+0x4d0>
   11478:	cmp	r0, #76	; 0x4c
   1147c:	bne	117d8 <__mempcpy_chk@plt+0x788>
   11480:	movw	r1, #29008	; 0x7150
   11484:	mov	r0, #1
   11488:	orr	r6, r6, #4
   1148c:	movt	r1, #2
   11490:	strb	r0, [r1]
   11494:	b	11408 <__mempcpy_chk@plt+0x3b8>
   11498:	cmp	r0, #113	; 0x71
   1149c:	bne	114f0 <__mempcpy_chk@plt+0x4a0>
   114a0:	movw	r0, #29009	; 0x7151
   114a4:	movt	r0, #2
   114a8:	b	114b4 <__mempcpy_chk@plt+0x464>
   114ac:	movw	r0, #29010	; 0x7152
   114b0:	movt	r0, #2
   114b4:	mov	r1, #1
   114b8:	strb	r1, [r0]
   114bc:	b	11408 <__mempcpy_chk@plt+0x3b8>
   114c0:	movw	r0, #29008	; 0x7150
   114c4:	bic	r6, r6, #4
   114c8:	movt	r0, #2
   114cc:	strb	r8, [r0]
   114d0:	b	11408 <__mempcpy_chk@plt+0x3b8>
   114d4:	movw	r1, #257	; 0x101
   114d8:	cmp	r0, r1
   114dc:	bne	117d8 <__mempcpy_chk@plt+0x788>
   114e0:	movw	r0, #29000	; 0x7148
   114e4:	movt	r0, #2
   114e8:	ldr	sl, [r0]
   114ec:	b	11408 <__mempcpy_chk@plt+0x3b8>
   114f0:	cmp	r0, #115	; 0x73
   114f4:	bne	117d8 <__mempcpy_chk@plt+0x788>
   114f8:	movw	r0, #29008	; 0x7150
   114fc:	orr	r6, r6, #4
   11500:	movt	r0, #2
   11504:	strb	r8, [r0]
   11508:	b	11408 <__mempcpy_chk@plt+0x3b8>
   1150c:	cmp	r0, #109	; 0x6d
   11510:	bne	117d8 <__mempcpy_chk@plt+0x788>
   11514:	mov	r0, #2
   11518:	bfi	r6, r0, #0, #2
   1151c:	b	11408 <__mempcpy_chk@plt+0x3b8>
   11520:	cmn	r0, #1
   11524:	bne	11754 <__mempcpy_chk@plt+0x704>
   11528:	movw	r9, #28984	; 0x7138
   1152c:	movt	r9, #2
   11530:	ldr	r0, [r9]
   11534:	cmp	r0, r5
   11538:	bge	117b4 <__mempcpy_chk@plt+0x764>
   1153c:	cmp	sl, #0
   11540:	mov	r7, sl
   11544:	movw	r8, #29012	; 0x7154
   11548:	moveq	r7, r4
   1154c:	cmp	r4, #0
   11550:	movt	r8, #2
   11554:	movne	r7, r4
   11558:	and	r4, r6, #3
   1155c:	cmp	r7, #0
   11560:	beq	11590 <__mempcpy_chk@plt+0x540>
   11564:	mov	r0, r7
   11568:	mov	r1, r6
   1156c:	bl	11870 <__mempcpy_chk@plt+0x820>
   11570:	cmp	r0, #0
   11574:	str	r0, [r8]
   11578:	beq	117e0 <__mempcpy_chk@plt+0x790>
   1157c:	cmp	r4, #0
   11580:	bne	11590 <__mempcpy_chk@plt+0x540>
   11584:	bl	118c8 <__mempcpy_chk@plt+0x878>
   11588:	cmp	r0, #0
   1158c:	beq	11838 <__mempcpy_chk@plt+0x7e8>
   11590:	cmp	sl, r7
   11594:	beq	115f4 <__mempcpy_chk@plt+0x5a4>
   11598:	cmp	sl, #0
   1159c:	beq	1161c <__mempcpy_chk@plt+0x5cc>
   115a0:	mov	r0, sl
   115a4:	mov	r1, r6
   115a8:	bl	11870 <__mempcpy_chk@plt+0x820>
   115ac:	cmp	r0, #0
   115b0:	beq	1180c <__mempcpy_chk@plt+0x7bc>
   115b4:	mov	r7, r0
   115b8:	cmp	r4, #0
   115bc:	bne	115d0 <__mempcpy_chk@plt+0x580>
   115c0:	mov	r0, r7
   115c4:	bl	118c8 <__mempcpy_chk@plt+0x878>
   115c8:	cmp	r0, #0
   115cc:	beq	11848 <__mempcpy_chk@plt+0x7f8>
   115d0:	ldr	r1, [r8]
   115d4:	mov	r0, r7
   115d8:	bl	11940 <__mempcpy_chk@plt+0x8f0>
   115dc:	cmp	r0, #0
   115e0:	beq	115fc <__mempcpy_chk@plt+0x5ac>
   115e4:	movw	r0, #29016	; 0x7158
   115e8:	movt	r0, #2
   115ec:	str	r7, [r0]
   115f0:	b	1161c <__mempcpy_chk@plt+0x5cc>
   115f4:	ldr	r0, [r8]
   115f8:	b	11610 <__mempcpy_chk@plt+0x5c0>
   115fc:	mov	r0, r7
   11600:	bl	1255c <__mempcpy_chk@plt+0x150c>
   11604:	ldr	r0, [r8]
   11608:	mov	r1, #0
   1160c:	str	r1, [r8]
   11610:	movw	r1, #29016	; 0x7158
   11614:	movt	r1, #2
   11618:	str	r0, [r1]
   1161c:	ldr	r1, [r9]
   11620:	mov	r0, #0
   11624:	cmp	r1, r5
   11628:	bge	1174c <__mempcpy_chk@plt+0x6fc>
   1162c:	mov	r8, #1
   11630:	ldr	r0, [sp, #8]
   11634:	ldr	r4, [r0, r1, lsl #2]
   11638:	mov	r1, r6
   1163c:	mov	r0, r4
   11640:	bl	11870 <__mempcpy_chk@plt+0x820>
   11644:	cmp	r0, #0
   11648:	beq	116e4 <__mempcpy_chk@plt+0x694>
   1164c:	mov	r7, r0
   11650:	movw	r0, #29012	; 0x7154
   11654:	movt	r0, #2
   11658:	ldr	r4, [r0]
   1165c:	cmp	r4, #0
   11660:	beq	116a4 <__mempcpy_chk@plt+0x654>
   11664:	movw	r0, #29016	; 0x7158
   11668:	movt	r0, #2
   1166c:	ldr	r0, [r0]
   11670:	cmp	r0, #0
   11674:	beq	11688 <__mempcpy_chk@plt+0x638>
   11678:	mov	r1, r7
   1167c:	bl	11940 <__mempcpy_chk@plt+0x8f0>
   11680:	cmp	r0, #0
   11684:	beq	116a4 <__mempcpy_chk@plt+0x654>
   11688:	mov	r0, r7
   1168c:	mov	r1, r4
   11690:	mov	r2, #0
   11694:	mov	r3, #0
   11698:	bl	119e0 <__mempcpy_chk@plt+0x990>
   1169c:	cmp	r0, #0
   116a0:	bne	116b8 <__mempcpy_chk@plt+0x668>
   116a4:	movw	r0, #28996	; 0x7144
   116a8:	movt	r0, #2
   116ac:	ldr	r1, [r0]
   116b0:	mov	r0, r7
   116b4:	bl	10df8 <fputs_unlocked@plt>
   116b8:	movw	r0, #29010	; 0x7152
   116bc:	movt	r0, #2
   116c0:	ldrb	r0, [r0]
   116c4:	cmp	r0, #0
   116c8:	mov	r0, #10
   116cc:	movwne	r0, #0
   116d0:	bl	11038 <putchar_unlocked@plt>
   116d4:	mov	r0, r7
   116d8:	bl	1255c <__mempcpy_chk@plt+0x150c>
   116dc:	mov	sl, #1
   116e0:	b	11730 <__mempcpy_chk@plt+0x6e0>
   116e4:	movw	r0, #29009	; 0x7151
   116e8:	mov	sl, #0
   116ec:	movt	r0, #2
   116f0:	ldrb	r0, [r0]
   116f4:	cmp	r0, #0
   116f8:	bne	11730 <__mempcpy_chk@plt+0x6e0>
   116fc:	bl	10f78 <__errno_location@plt>
   11700:	ldr	r7, [r0]
   11704:	mov	r0, #0
   11708:	mov	r1, #3
   1170c:	mov	r2, r4
   11710:	mov	sl, #0
   11714:	bl	14dfc <__mempcpy_chk@plt+0x3dac>
   11718:	movw	r2, #26980	; 0x6964
   1171c:	mov	r3, r0
   11720:	mov	r0, #0
   11724:	mov	r1, r7
   11728:	movt	r2, #1
   1172c:	bl	10ef4 <error@plt>
   11730:	ldr	r0, [r9]
   11734:	and	r8, r8, sl
   11738:	add	r1, r0, #1
   1173c:	cmp	r1, r5
   11740:	str	r1, [r9]
   11744:	blt	11630 <__mempcpy_chk@plt+0x5e0>
   11748:	eor	r0, r8, #1
   1174c:	sub	sp, fp, #28
   11750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11754:	cmn	r0, #3
   11758:	bne	117a4 <__mempcpy_chk@plt+0x754>
   1175c:	movw	r0, #28904	; 0x70e8
   11760:	movw	r2, #26165	; 0x6635
   11764:	mov	r1, #0
   11768:	movt	r0, #2
   1176c:	movt	r2, #1
   11770:	str	r1, [sp, #4]
   11774:	movw	r1, #26110	; 0x65fe
   11778:	movt	r1, #1
   1177c:	ldr	r3, [r0]
   11780:	movw	r0, #28996	; 0x7144
   11784:	str	r2, [sp]
   11788:	movw	r2, #26151	; 0x6627
   1178c:	movt	r0, #2
   11790:	movt	r2, #1
   11794:	ldr	r0, [r0]
   11798:	bl	15608 <__mempcpy_chk@plt+0x45b8>
   1179c:	mov	r0, #0
   117a0:	bl	10f54 <exit@plt>
   117a4:	cmn	r0, #2
   117a8:	bne	117d8 <__mempcpy_chk@plt+0x788>
   117ac:	mov	r0, #0
   117b0:	bl	11150 <__mempcpy_chk@plt+0x100>
   117b4:	movw	r1, #26179	; 0x6643
   117b8:	mov	r0, #0
   117bc:	mov	r2, #5
   117c0:	movt	r1, #1
   117c4:	bl	10e70 <dcgettext@plt>
   117c8:	mov	r2, r0
   117cc:	mov	r0, #0
   117d0:	mov	r1, #0
   117d4:	bl	10ef4 <error@plt>
   117d8:	mov	r0, #1
   117dc:	bl	11150 <__mempcpy_chk@plt+0x100>
   117e0:	bl	10f78 <__errno_location@plt>
   117e4:	ldr	r4, [r0]
   117e8:	mov	r0, #0
   117ec:	mov	r1, #3
   117f0:	mov	r2, r7
   117f4:	bl	14dfc <__mempcpy_chk@plt+0x3dac>
   117f8:	movw	r2, #26980	; 0x6964
   117fc:	mov	r3, r0
   11800:	mov	r0, #1
   11804:	mov	r1, r4
   11808:	b	11868 <__mempcpy_chk@plt+0x818>
   1180c:	bl	10f78 <__errno_location@plt>
   11810:	ldr	r5, [r0]
   11814:	mov	r0, #0
   11818:	mov	r1, #3
   1181c:	mov	r2, sl
   11820:	bl	14dfc <__mempcpy_chk@plt+0x3dac>
   11824:	movw	r2, #26980	; 0x6964
   11828:	mov	r3, r0
   1182c:	mov	r0, #1
   11830:	mov	r1, r5
   11834:	b	11868 <__mempcpy_chk@plt+0x818>
   11838:	mov	r0, #0
   1183c:	mov	r1, #3
   11840:	mov	r2, r7
   11844:	b	11854 <__mempcpy_chk@plt+0x804>
   11848:	mov	r0, #0
   1184c:	mov	r1, #3
   11850:	mov	r2, sl
   11854:	bl	14dfc <__mempcpy_chk@plt+0x3dac>
   11858:	movw	r2, #26980	; 0x6964
   1185c:	mov	r3, r0
   11860:	mov	r0, #1
   11864:	mov	r1, #20
   11868:	movt	r2, #1
   1186c:	bl	10ef4 <error@plt>
   11870:	push	{r4, r5, fp, lr}
   11874:	add	fp, sp, #8
   11878:	mov	r5, r1
   1187c:	bl	11cac <__mempcpy_chk@plt+0xc5c>
   11880:	mov	r4, r0
   11884:	movw	r0, #29008	; 0x7150
   11888:	movt	r0, #2
   1188c:	ldrb	r0, [r0]
   11890:	cmp	r0, #1
   11894:	bne	118c0 <__mempcpy_chk@plt+0x870>
   11898:	cmp	r4, #0
   1189c:	beq	118c0 <__mempcpy_chk@plt+0x870>
   118a0:	bic	r1, r5, #4
   118a4:	mov	r0, r4
   118a8:	bl	11cac <__mempcpy_chk@plt+0xc5c>
   118ac:	mov	r5, r0
   118b0:	mov	r0, r4
   118b4:	bl	1255c <__mempcpy_chk@plt+0x150c>
   118b8:	mov	r0, r5
   118bc:	pop	{r4, r5, fp, pc}
   118c0:	mov	r0, r4
   118c4:	pop	{r4, r5, fp, pc}
   118c8:	push	{r4, r5, r6, sl, fp, lr}
   118cc:	add	fp, sp, #16
   118d0:	sub	sp, sp, #104	; 0x68
   118d4:	mov	r1, sp
   118d8:	mov	r4, r0
   118dc:	bl	16274 <__mempcpy_chk@plt+0x5224>
   118e0:	cmp	r0, #0
   118e4:	ldreq	r0, [sp, #16]
   118e8:	andeq	r0, r0, #61440	; 0xf000
   118ec:	subeq	r0, r0, #16384	; 0x4000
   118f0:	clzeq	r0, r0
   118f4:	lsreq	r0, r0, #5
   118f8:	subeq	sp, fp, #16
   118fc:	popeq	{r4, r5, r6, sl, fp, pc}
   11900:	bl	10f78 <__errno_location@plt>
   11904:	movw	r1, #26634	; 0x680a
   11908:	ldr	r5, [r0]
   1190c:	mov	r0, #0
   11910:	mov	r2, #5
   11914:	movt	r1, #1
   11918:	bl	10e70 <dcgettext@plt>
   1191c:	mov	r6, r0
   11920:	mov	r0, #4
   11924:	mov	r1, r4
   11928:	bl	14c58 <__mempcpy_chk@plt+0x3c08>
   1192c:	mov	r3, r0
   11930:	mov	r0, #1
   11934:	mov	r1, r5
   11938:	mov	r2, r6
   1193c:	bl	10ef4 <error@plt>
   11940:	push	{fp, lr}
   11944:	mov	fp, sp
   11948:	ldrb	ip, [r0, #1]
   1194c:	cmp	ip, #47	; 0x2f
   11950:	beq	1196c <__mempcpy_chk@plt+0x91c>
   11954:	cmp	ip, #0
   11958:	bne	1198c <__mempcpy_chk@plt+0x93c>
   1195c:	ldrb	r0, [r1, #1]
   11960:	subs	r0, r0, #47	; 0x2f
   11964:	movwne	r0, #1
   11968:	pop	{fp, pc}
   1196c:	ldrb	r2, [r0, #2]
   11970:	ldrb	r3, [r1, #1]
   11974:	cmp	r2, #0
   11978:	bne	11990 <__mempcpy_chk@plt+0x940>
   1197c:	sub	r0, r3, #47	; 0x2f
   11980:	clz	r0, r0
   11984:	lsr	r0, r0, #5
   11988:	pop	{fp, pc}
   1198c:	ldrb	r3, [r1, #1]
   11990:	add	r2, r0, #2
   11994:	add	r1, r1, #2
   11998:	mov	r0, #0
   1199c:	tst	r3, #255	; 0xff
   119a0:	beq	119dc <__mempcpy_chk@plt+0x98c>
   119a4:	uxtb	lr, r3
   119a8:	uxtb	r3, ip
   119ac:	cmp	r3, lr
   119b0:	bne	119dc <__mempcpy_chk@plt+0x98c>
   119b4:	ldrb	ip, [r2], #1
   119b8:	ldrb	r3, [r1], #1
   119bc:	cmp	ip, #0
   119c0:	bne	1199c <__mempcpy_chk@plt+0x94c>
   119c4:	sub	r1, r3, #47	; 0x2f
   119c8:	clz	r0, r3
   119cc:	clz	r1, r1
   119d0:	lsr	r0, r0, #5
   119d4:	lsr	r1, r1, #5
   119d8:	orr	r0, r1, r0
   119dc:	pop	{fp, pc}
   119e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119e4:	add	fp, sp, #28
   119e8:	sub	sp, sp, #12
   119ec:	str	r3, [sp, #4]
   119f0:	str	r2, [sp, #8]
   119f4:	mov	r5, r1
   119f8:	mov	r4, r0
   119fc:	mov	r6, #0
   11a00:	ldrb	r0, [r0, #1]
   11a04:	ldrb	r1, [r1, #1]
   11a08:	sub	r0, r0, #47	; 0x2f
   11a0c:	sub	r1, r1, #47	; 0x2f
   11a10:	clz	r0, r0
   11a14:	clz	r1, r1
   11a18:	lsr	r0, r0, #5
   11a1c:	lsr	r1, r1, #5
   11a20:	teq	r1, r0
   11a24:	bne	11c0c <__mempcpy_chk@plt+0xbbc>
   11a28:	ldrb	r3, [r5]
   11a2c:	ldrb	r1, [r4]
   11a30:	cmp	r3, #0
   11a34:	beq	11a7c <__mempcpy_chk@plt+0xa2c>
   11a38:	mov	r0, #0
   11a3c:	mov	r2, #1
   11a40:	tst	r1, #255	; 0xff
   11a44:	beq	11a98 <__mempcpy_chk@plt+0xa48>
   11a48:	uxtb	r7, r1
   11a4c:	uxtb	r6, r3
   11a50:	cmp	r6, r7
   11a54:	bne	11a98 <__mempcpy_chk@plt+0xa48>
   11a58:	ldrb	r3, [r5, r2]
   11a5c:	ldrb	r1, [r4, r2]
   11a60:	cmp	r7, #47	; 0x2f
   11a64:	moveq	r0, r2
   11a68:	add	r2, r2, #1
   11a6c:	cmp	r3, #0
   11a70:	bne	11a40 <__mempcpy_chk@plt+0x9f0>
   11a74:	sub	r2, r2, #1
   11a78:	b	11a84 <__mempcpy_chk@plt+0xa34>
   11a7c:	mov	r2, #0
   11a80:	mov	r0, #0
   11a84:	cmp	r1, #0
   11a88:	beq	11aac <__mempcpy_chk@plt+0xa5c>
   11a8c:	cmp	r1, #47	; 0x2f
   11a90:	moveq	r0, r2
   11a94:	b	11ab0 <__mempcpy_chk@plt+0xa60>
   11a98:	tst	r1, #255	; 0xff
   11a9c:	uxtbeq	r1, r3
   11aa0:	cmpeq	r1, #47	; 0x2f
   11aa4:	bne	11ab0 <__mempcpy_chk@plt+0xa60>
   11aa8:	sub	r2, r2, #1
   11aac:	mov	r0, r2
   11ab0:	cmp	r0, #0
   11ab4:	beq	11ba4 <__mempcpy_chk@plt+0xb54>
   11ab8:	ldrb	r1, [r4, r0]!
   11abc:	ldrb	r0, [r5, r0]!
   11ac0:	mov	r8, r4
   11ac4:	cmp	r1, #47	; 0x2f
   11ac8:	sub	r1, r1, #47	; 0x2f
   11acc:	addeq	r8, r8, #1
   11ad0:	cmp	r0, #47	; 0x2f
   11ad4:	clz	r1, r1
   11ad8:	addeq	r5, r5, #1
   11adc:	lsr	r1, r1, #5
   11ae0:	ldrb	r0, [r5]
   11ae4:	cmp	r0, #0
   11ae8:	beq	11bac <__mempcpy_chk@plt+0xb5c>
   11aec:	movw	r0, #26921	; 0x6929
   11af0:	add	sl, sp, #4
   11af4:	add	r9, sp, #8
   11af8:	str	r1, [sp]
   11afc:	movt	r0, #1
   11b00:	mov	r1, r9
   11b04:	mov	r2, sl
   11b08:	bl	11c28 <__mempcpy_chk@plt+0xbd8>
   11b0c:	movw	r6, #26920	; 0x6928
   11b10:	mov	r7, r0
   11b14:	movt	r6, #1
   11b18:	ldrb	r0, [r5]
   11b1c:	cmp	r0, #47	; 0x2f
   11b20:	beq	11b30 <__mempcpy_chk@plt+0xae0>
   11b24:	cmp	r0, #0
   11b28:	bne	11b48 <__mempcpy_chk@plt+0xaf8>
   11b2c:	b	11b50 <__mempcpy_chk@plt+0xb00>
   11b30:	mov	r0, r6
   11b34:	mov	r1, r9
   11b38:	mov	r2, sl
   11b3c:	bl	11c28 <__mempcpy_chk@plt+0xbd8>
   11b40:	and	r1, r7, #1
   11b44:	orr	r7, r1, r0
   11b48:	add	r5, r5, #1
   11b4c:	b	11b18 <__mempcpy_chk@plt+0xac8>
   11b50:	ldr	r0, [sp]
   11b54:	and	r7, r7, #1
   11b58:	ldrb	r0, [r4, r0]
   11b5c:	cmp	r0, #0
   11b60:	beq	11c18 <__mempcpy_chk@plt+0xbc8>
   11b64:	movw	r0, #28095	; 0x6dbf
   11b68:	add	r4, sp, #8
   11b6c:	add	r5, sp, #4
   11b70:	movt	r0, #1
   11b74:	mov	r1, r4
   11b78:	mov	r2, r5
   11b7c:	bl	11c28 <__mempcpy_chk@plt+0xbd8>
   11b80:	orr	r6, r0, r7
   11b84:	mov	r0, r8
   11b88:	mov	r1, r4
   11b8c:	mov	r2, r5
   11b90:	bl	11c28 <__mempcpy_chk@plt+0xbd8>
   11b94:	orrs	r0, r6, r0
   11b98:	bne	11bdc <__mempcpy_chk@plt+0xb8c>
   11b9c:	mov	r6, #1
   11ba0:	b	11c0c <__mempcpy_chk@plt+0xbbc>
   11ba4:	mov	r6, #0
   11ba8:	b	11c0c <__mempcpy_chk@plt+0xbbc>
   11bac:	ldrb	r0, [r4, r1]
   11bb0:	movw	r1, #26922	; 0x692a
   11bb4:	add	r2, sp, #4
   11bb8:	movt	r1, #1
   11bbc:	cmp	r0, #0
   11bc0:	moveq	r8, r1
   11bc4:	add	r1, sp, #8
   11bc8:	mov	r0, r8
   11bcc:	bl	11c28 <__mempcpy_chk@plt+0xbd8>
   11bd0:	mov	r6, #1
   11bd4:	cmp	r0, #0
   11bd8:	beq	11c0c <__mempcpy_chk@plt+0xbbc>
   11bdc:	movw	r1, #26924	; 0x692c
   11be0:	mov	r0, #0
   11be4:	mov	r2, #5
   11be8:	mov	r6, #0
   11bec:	movt	r1, #1
   11bf0:	bl	10e70 <dcgettext@plt>
   11bf4:	movw	r2, #26980	; 0x6964
   11bf8:	mov	r3, r0
   11bfc:	mov	r0, #0
   11c00:	mov	r1, #36	; 0x24
   11c04:	movt	r2, #1
   11c08:	bl	10ef4 <error@plt>
   11c0c:	mov	r0, r6
   11c10:	sub	sp, fp, #28
   11c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c18:	mov	r6, #1
   11c1c:	cmp	r7, #0
   11c20:	bne	11bdc <__mempcpy_chk@plt+0xb8c>
   11c24:	b	11c0c <__mempcpy_chk@plt+0xbbc>
   11c28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c2c:	add	fp, sp, #24
   11c30:	ldr	r7, [r1]
   11c34:	mov	r6, r0
   11c38:	cmp	r7, #0
   11c3c:	beq	11c90 <__mempcpy_chk@plt+0xc40>
   11c40:	mov	r0, r6
   11c44:	mov	r8, r2
   11c48:	mov	r5, r1
   11c4c:	bl	10f6c <strlen@plt>
   11c50:	ldr	r1, [r8]
   11c54:	mov	r4, r0
   11c58:	mov	r0, #1
   11c5c:	cmp	r4, r1
   11c60:	bcs	11ca8 <__mempcpy_chk@plt+0xc58>
   11c64:	add	r2, r4, #1
   11c68:	mov	r0, r7
   11c6c:	mov	r1, r6
   11c70:	bl	10e58 <memcpy@plt>
   11c74:	ldr	r0, [r5]
   11c78:	add	r0, r0, r4
   11c7c:	str	r0, [r5]
   11c80:	ldr	r0, [r8]
   11c84:	sub	r0, r0, r4
   11c88:	str	r0, [r8]
   11c8c:	b	11ca4 <__mempcpy_chk@plt+0xc54>
   11c90:	movw	r0, #28996	; 0x7144
   11c94:	movt	r0, #2
   11c98:	ldr	r1, [r0]
   11c9c:	mov	r0, r6
   11ca0:	bl	10df8 <fputs_unlocked@plt>
   11ca4:	mov	r0, #0
   11ca8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cb0:	add	fp, sp, #28
   11cb4:	sub	sp, sp, #180	; 0xb4
   11cb8:	sub	sp, sp, #3072	; 0xc00
   11cbc:	and	r7, r1, #3
   11cc0:	mov	r8, r0
   11cc4:	sub	r0, r7, #1
   11cc8:	tst	r7, r0
   11ccc:	bne	11d58 <__mempcpy_chk@plt+0xd08>
   11cd0:	cmp	r8, #0
   11cd4:	beq	11d58 <__mempcpy_chk@plt+0xd08>
   11cd8:	ldrb	r0, [r8]
   11cdc:	cmp	r0, #0
   11ce0:	beq	11d74 <__mempcpy_chk@plt+0xd24>
   11ce4:	mov	r4, r1
   11ce8:	mov	r1, #1024	; 0x400
   11cec:	sub	lr, fp, #1024	; 0x400
   11cf0:	cmp	r0, #47	; 0x2f
   11cf4:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11cf8:	str	r1, [sp, #52]	; 0x34
   11cfc:	str	r1, [sp, #1188]	; 0x4a4
   11d00:	add	r1, sp, #1184	; 0x4a0
   11d04:	sub	r2, lr, #40	; 0x28
   11d08:	add	r1, r1, #8
   11d0c:	add	r2, r2, #8
   11d10:	str	r1, [sp, #16]
   11d14:	str	r1, [sp, #1184]	; 0x4a0
   11d18:	add	r1, sp, #48	; 0x30
   11d1c:	str	r2, [sp, #12]
   11d20:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11d24:	add	r5, r1, #8
   11d28:	mov	r0, r5
   11d2c:	str	r5, [sp, #48]	; 0x30
   11d30:	str	r5, [sp, #8]
   11d34:	bne	11d80 <__mempcpy_chk@plt+0xd30>
   11d38:	mov	r1, r8
   11d3c:	mov	r2, #0
   11d40:	mov	r3, #1024	; 0x400
   11d44:	bl	11050 <__mempcpy_chk@plt>
   11d48:	mov	r6, r0
   11d4c:	mov	r0, #47	; 0x2f
   11d50:	strb	r0, [r6], #1
   11d54:	b	11da0 <__mempcpy_chk@plt+0xd50>
   11d58:	bl	10f78 <__errno_location@plt>
   11d5c:	mov	r1, #22
   11d60:	mov	r4, #0
   11d64:	str	r1, [r0]
   11d68:	mov	r0, r4
   11d6c:	sub	sp, fp, #28
   11d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d74:	bl	10f78 <__errno_location@plt>
   11d78:	mov	r1, #2
   11d7c:	b	11d60 <__mempcpy_chk@plt+0xd10>
   11d80:	mov	r1, #1024	; 0x400
   11d84:	bl	10f48 <getcwd@plt>
   11d88:	cmp	r0, #0
   11d8c:	beq	122ac <__mempcpy_chk@plt+0x125c>
   11d90:	mov	r0, r5
   11d94:	mov	r1, #0
   11d98:	bl	10e94 <rawmemchr@plt>
   11d9c:	mov	r6, r0
   11da0:	ldrb	r0, [r8]
   11da4:	cmp	r0, #0
   11da8:	beq	12270 <__mempcpy_chk@plt+0x1220>
   11dac:	and	r1, r4, #4
   11db0:	add	r9, sp, #48	; 0x30
   11db4:	str	r7, [sp, #32]
   11db8:	str	r1, [sp, #40]	; 0x28
   11dbc:	mov	r1, #0
   11dc0:	str	r1, [sp, #24]
   11dc4:	mov	r1, #0
   11dc8:	str	r1, [sp, #36]	; 0x24
   11dcc:	mov	r1, #0
   11dd0:	str	r1, [sp, #20]
   11dd4:	uxtb	r1, r0
   11dd8:	cmp	r1, #47	; 0x2f
   11ddc:	bne	11dec <__mempcpy_chk@plt+0xd9c>
   11de0:	ldrb	r0, [r8, #1]!
   11de4:	cmp	r0, #47	; 0x2f
   11de8:	beq	11de0 <__mempcpy_chk@plt+0xd90>
   11dec:	mov	r1, r0
   11df0:	mov	sl, r8
   11df4:	b	11dfc <__mempcpy_chk@plt+0xdac>
   11df8:	ldrb	r1, [sl, #1]!
   11dfc:	uxtb	r1, r1
   11e00:	cmp	r1, #0
   11e04:	cmpne	r1, #47	; 0x2f
   11e08:	bne	11df8 <__mempcpy_chk@plt+0xda8>
   11e0c:	sub	r2, sl, r8
   11e10:	cmp	r2, #1
   11e14:	beq	11e2c <__mempcpy_chk@plt+0xddc>
   11e18:	cmp	r2, #2
   11e1c:	beq	11e3c <__mempcpy_chk@plt+0xdec>
   11e20:	cmp	r2, #0
   11e24:	bne	11e84 <__mempcpy_chk@plt+0xe34>
   11e28:	b	12278 <__mempcpy_chk@plt+0x1228>
   11e2c:	uxtb	r0, r0
   11e30:	cmp	r0, #46	; 0x2e
   11e34:	bne	11e84 <__mempcpy_chk@plt+0xe34>
   11e38:	b	11f78 <__mempcpy_chk@plt+0xf28>
   11e3c:	uxtb	r0, r0
   11e40:	cmp	r0, #46	; 0x2e
   11e44:	bne	11e84 <__mempcpy_chk@plt+0xe34>
   11e48:	ldrb	r0, [r8, #1]
   11e4c:	cmp	r0, #46	; 0x2e
   11e50:	bne	11e84 <__mempcpy_chk@plt+0xe34>
   11e54:	add	r0, r5, #1
   11e58:	cmp	r6, r0
   11e5c:	bls	11f78 <__mempcpy_chk@plt+0xf28>
   11e60:	sub	r0, r6, #1
   11e64:	mov	r6, r0
   11e68:	cmp	r0, r5
   11e6c:	bls	11f78 <__mempcpy_chk@plt+0xf28>
   11e70:	mov	r0, r6
   11e74:	ldrb	r1, [r0, #-1]!
   11e78:	cmp	r1, #47	; 0x2f
   11e7c:	bne	11e64 <__mempcpy_chk@plt+0xe14>
   11e80:	b	11f78 <__mempcpy_chk@plt+0xf28>
   11e84:	ldrb	r0, [r6, #-1]
   11e88:	add	r4, r2, #2
   11e8c:	str	r2, [sp, #44]	; 0x2c
   11e90:	cmp	r0, #47	; 0x2f
   11e94:	movne	r0, #47	; 0x2f
   11e98:	strbne	r0, [r6], #1
   11e9c:	ldr	r0, [sp, #52]	; 0x34
   11ea0:	add	r0, r5, r0
   11ea4:	sub	r0, r0, r6
   11ea8:	cmp	r0, r4
   11eac:	bcs	11ee4 <__mempcpy_chk@plt+0xe94>
   11eb0:	mov	r0, r9
   11eb4:	bl	151ac <__mempcpy_chk@plt+0x415c>
   11eb8:	cmp	r0, #0
   11ebc:	beq	12370 <__mempcpy_chk@plt+0x1320>
   11ec0:	sub	r0, r6, r5
   11ec4:	ldr	r5, [sp, #48]	; 0x30
   11ec8:	ldr	r1, [sp, #52]	; 0x34
   11ecc:	add	r6, r5, r0
   11ed0:	add	r0, r5, r1
   11ed4:	sub	r0, r0, r6
   11ed8:	cmp	r0, r4
   11edc:	bcc	11eb0 <__mempcpy_chk@plt+0xe60>
   11ee0:	ldr	r2, [sp, #44]	; 0x2c
   11ee4:	mov	r0, r6
   11ee8:	mov	r1, r8
   11eec:	mvn	r3, #0
   11ef0:	bl	11050 <__mempcpy_chk@plt>
   11ef4:	mov	r6, r0
   11ef8:	mov	r0, #0
   11efc:	strb	r0, [r6]
   11f00:	ldr	r0, [sp, #40]	; 0x28
   11f04:	cmp	r0, #0
   11f08:	bne	11f6c <__mempcpy_chk@plt+0xf1c>
   11f0c:	ldr	r0, [sp, #1188]	; 0x4a4
   11f10:	ldr	r7, [sp, #1184]	; 0x4a0
   11f14:	sub	r9, r0, #1
   11f18:	mov	r0, r5
   11f1c:	mov	r1, r7
   11f20:	mov	r2, r9
   11f24:	bl	10eac <readlink@plt>
   11f28:	cmp	r0, r9
   11f2c:	blt	11f44 <__mempcpy_chk@plt+0xef4>
   11f30:	add	r0, sp, #1184	; 0x4a0
   11f34:	bl	15140 <__mempcpy_chk@plt+0x40f0>
   11f38:	cmp	r0, #0
   11f3c:	bne	11f0c <__mempcpy_chk@plt+0xebc>
   11f40:	b	12370 <__mempcpy_chk@plt+0x1320>
   11f44:	mov	r4, r0
   11f48:	cmp	r0, #0
   11f4c:	add	r9, sp, #48	; 0x30
   11f50:	bmi	11f6c <__mempcpy_chk@plt+0xf1c>
   11f54:	ldr	r0, [sp, #24]
   11f58:	cmp	r0, #19
   11f5c:	bgt	11ff0 <__mempcpy_chk@plt+0xfa0>
   11f60:	add	r0, r0, #1
   11f64:	str	r0, [sp, #24]
   11f68:	b	12158 <__mempcpy_chk@plt+0x1108>
   11f6c:	ldr	r7, [sp, #32]
   11f70:	cmp	r7, #2
   11f74:	bne	11f8c <__mempcpy_chk@plt+0xf3c>
   11f78:	mov	r8, sl
   11f7c:	ldrb	r0, [r8]
   11f80:	cmp	r0, #0
   11f84:	bne	11dd4 <__mempcpy_chk@plt+0xd84>
   11f88:	b	12278 <__mempcpy_chk@plt+0x1228>
   11f8c:	ldrb	r0, [sl]
   11f90:	cmp	r0, #47	; 0x2f
   11f94:	bne	120c0 <__mempcpy_chk@plt+0x1070>
   11f98:	mov	r2, sl
   11f9c:	mov	r1, r2
   11fa0:	ldrb	r3, [r2, #1]!
   11fa4:	cmp	r3, #47	; 0x2f
   11fa8:	beq	11f9c <__mempcpy_chk@plt+0xf4c>
   11fac:	cmp	r3, #46	; 0x2e
   11fb0:	bne	120b8 <__mempcpy_chk@plt+0x1068>
   11fb4:	add	r2, r1, #2
   11fb8:	ldrb	r3, [r2]
   11fbc:	cmp	r3, #47	; 0x2f
   11fc0:	beq	11f9c <__mempcpy_chk@plt+0xf4c>
   11fc4:	cmp	r3, #0
   11fc8:	beq	11fe4 <__mempcpy_chk@plt+0xf94>
   11fcc:	cmp	r3, #46	; 0x2e
   11fd0:	bne	120c0 <__mempcpy_chk@plt+0x1070>
   11fd4:	ldrb	r1, [r1, #3]
   11fd8:	cmp	r1, #47	; 0x2f
   11fdc:	cmpne	r1, #0
   11fe0:	bne	120c0 <__mempcpy_chk@plt+0x1070>
   11fe4:	mov	r0, #47	; 0x2f
   11fe8:	strh	r0, [r6]
   11fec:	b	120d4 <__mempcpy_chk@plt+0x1084>
   11ff0:	ldrb	r0, [r8]
   11ff4:	add	lr, sp, #1024	; 0x400
   11ff8:	add	r2, lr, #56	; 0x38
   11ffc:	cmp	r0, #0
   12000:	beq	12158 <__mempcpy_chk@plt+0x1108>
   12004:	ldr	r9, [sp, #44]	; 0x2c
   12008:	mov	r0, #0
   1200c:	movw	r1, #26922	; 0x692a
   12010:	movt	r1, #1
   12014:	strb	r0, [r6, -r9]
   12018:	ldrb	r0, [r5]
   1201c:	cmp	r0, #0
   12020:	mov	r0, r5
   12024:	moveq	r0, r1
   12028:	mov	r1, r2
   1202c:	bl	16274 <__mempcpy_chk@plt+0x5224>
   12030:	cmp	r0, #0
   12034:	bne	12380 <__mempcpy_chk@plt+0x1330>
   12038:	rsb	r0, r9, #0
   1203c:	ldr	r9, [sp, #20]
   12040:	ldrb	r1, [r8]
   12044:	cmp	r9, #0
   12048:	strb	r1, [r6, r0]
   1204c:	bne	12084 <__mempcpy_chk@plt+0x1034>
   12050:	movw	r0, #13700	; 0x3584
   12054:	movw	r2, #13540	; 0x34e4
   12058:	movw	r3, #13596	; 0x351c
   1205c:	mov	r1, #0
   12060:	movt	r0, #1
   12064:	movt	r2, #1
   12068:	movt	r3, #1
   1206c:	str	r0, [sp]
   12070:	mov	r0, #7
   12074:	bl	12a14 <__mempcpy_chk@plt+0x19c4>
   12078:	mov	r9, r0
   1207c:	cmp	r0, #0
   12080:	beq	12370 <__mempcpy_chk@plt+0x1320>
   12084:	add	lr, sp, #1024	; 0x400
   12088:	mov	r0, r9
   1208c:	mov	r1, r8
   12090:	add	r2, lr, #56	; 0x38
   12094:	bl	1250c <__mempcpy_chk@plt+0x14bc>
   12098:	cmp	r0, #0
   1209c:	str	r9, [sp, #20]
   120a0:	beq	12144 <__mempcpy_chk@plt+0x10f4>
   120a4:	ldr	r7, [sp, #32]
   120a8:	cmp	r7, #2
   120ac:	bne	12374 <__mempcpy_chk@plt+0x1324>
   120b0:	mov	r8, sl
   120b4:	b	1222c <__mempcpy_chk@plt+0x11dc>
   120b8:	cmp	r3, #0
   120bc:	beq	11fe4 <__mempcpy_chk@plt+0xf94>
   120c0:	ldr	r1, [sp, #40]	; 0x28
   120c4:	cmp	r1, #0
   120c8:	beq	120f4 <__mempcpy_chk@plt+0x10a4>
   120cc:	cmp	r0, #0
   120d0:	bne	11f78 <__mempcpy_chk@plt+0xf28>
   120d4:	mvn	r0, #99	; 0x63
   120d8:	mov	r1, r5
   120dc:	mov	r2, #0
   120e0:	mov	r3, #512	; 0x200
   120e4:	bl	10e40 <faccessat@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	12104 <__mempcpy_chk@plt+0x10b4>
   120f0:	b	11f78 <__mempcpy_chk@plt+0xf28>
   120f4:	bl	10f78 <__errno_location@plt>
   120f8:	ldr	r0, [r0]
   120fc:	cmp	r0, #22
   12100:	beq	11f78 <__mempcpy_chk@plt+0xf28>
   12104:	mov	r4, #1
   12108:	cmp	r7, #1
   1210c:	bne	12298 <__mempcpy_chk@plt+0x1248>
   12110:	bl	10f78 <__errno_location@plt>
   12114:	ldr	r0, [r0]
   12118:	cmp	r0, #2
   1211c:	bne	12298 <__mempcpy_chk@plt+0x1248>
   12120:	movw	r1, #28095	; 0x6dbf
   12124:	mov	r0, sl
   12128:	movt	r1, #1
   1212c:	bl	11044 <strspn@plt>
   12130:	ldrb	r0, [sl, r0]
   12134:	mov	r8, sl
   12138:	cmp	r0, #0
   1213c:	beq	11f7c <__mempcpy_chk@plt+0xf2c>
   12140:	b	12298 <__mempcpy_chk@plt+0x1248>
   12144:	add	lr, sp, #1024	; 0x400
   12148:	mov	r0, r9
   1214c:	mov	r1, r8
   12150:	add	r2, lr, #56	; 0x38
   12154:	bl	12490 <__mempcpy_chk@plt+0x1440>
   12158:	mov	r0, #0
   1215c:	strb	r0, [r7, r4]
   12160:	ldr	r0, [sp, #36]	; 0x24
   12164:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12168:	tst	r0, #1
   1216c:	ldr	r0, [sp, #28]
   12170:	subne	r0, sl, r8
   12174:	str	r0, [sp, #28]
   12178:	mov	r0, sl
   1217c:	bl	10f6c <strlen@plt>
   12180:	mvn	r1, r4
   12184:	cmp	r0, r1
   12188:	bhi	12370 <__mempcpy_chk@plt+0x1320>
   1218c:	str	r0, [sp, #44]	; 0x2c
   12190:	add	r9, r0, r4
   12194:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12198:	cmp	r0, r9
   1219c:	bhi	121c4 <__mempcpy_chk@plt+0x1174>
   121a0:	sub	lr, fp, #1024	; 0x400
   121a4:	sub	r0, lr, #40	; 0x28
   121a8:	bl	151ac <__mempcpy_chk@plt+0x415c>
   121ac:	cmp	r0, #0
   121b0:	beq	12370 <__mempcpy_chk@plt+0x1320>
   121b4:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   121b8:	cmp	r0, r9
   121bc:	bls	121a0 <__mempcpy_chk@plt+0x1150>
   121c0:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   121c4:	ldr	r0, [sp, #36]	; 0x24
   121c8:	ldr	r1, [sp, #44]	; 0x2c
   121cc:	tst	r0, #1
   121d0:	ldr	r0, [sp, #28]
   121d4:	add	r2, r1, #1
   121d8:	addne	sl, r8, r0
   121dc:	add	r0, r8, r4
   121e0:	mov	r1, sl
   121e4:	bl	10e28 <memmove@plt>
   121e8:	mov	r0, r8
   121ec:	mov	r1, r7
   121f0:	mov	r2, r4
   121f4:	bl	10e58 <memcpy@plt>
   121f8:	ldrb	r0, [r7]
   121fc:	cmp	r0, #47	; 0x2f
   12200:	bne	12234 <__mempcpy_chk@plt+0x11e4>
   12204:	mov	r0, r5
   12208:	mov	r1, r7
   1220c:	mov	r2, #0
   12210:	mvn	r3, #0
   12214:	bl	11050 <__mempcpy_chk@plt>
   12218:	mov	r6, r0
   1221c:	mov	r0, #47	; 0x2f
   12220:	strb	r0, [r6], #1
   12224:	mov	r0, #1
   12228:	str	r0, [sp, #36]	; 0x24
   1222c:	add	r9, sp, #48	; 0x30
   12230:	b	11f7c <__mempcpy_chk@plt+0xf2c>
   12234:	add	r0, r5, #1
   12238:	mov	r1, #1
   1223c:	add	r9, sp, #48	; 0x30
   12240:	cmp	r6, r0
   12244:	str	r1, [sp, #36]	; 0x24
   12248:	bls	11f7c <__mempcpy_chk@plt+0xf2c>
   1224c:	sub	r0, r6, #1
   12250:	mov	r6, r0
   12254:	cmp	r0, r5
   12258:	bls	11f7c <__mempcpy_chk@plt+0xf2c>
   1225c:	mov	r0, r6
   12260:	ldrb	r1, [r0, #-1]!
   12264:	cmp	r1, #47	; 0x2f
   12268:	bne	12250 <__mempcpy_chk@plt+0x1200>
   1226c:	b	11f7c <__mempcpy_chk@plt+0xf2c>
   12270:	mov	r0, #0
   12274:	str	r0, [sp, #20]
   12278:	add	r0, r5, #1
   1227c:	cmp	r6, r0
   12280:	bls	12294 <__mempcpy_chk@plt+0x1244>
   12284:	mov	r0, r6
   12288:	ldrb	r1, [r0, #-1]!
   1228c:	cmp	r1, #47	; 0x2f
   12290:	moveq	r6, r0
   12294:	mov	r4, #0
   12298:	ldr	r0, [sp, #20]
   1229c:	cmp	r0, #0
   122a0:	beq	12304 <__mempcpy_chk@plt+0x12b4>
   122a4:	bl	12d40 <__mempcpy_chk@plt+0x1cf0>
   122a8:	b	12304 <__mempcpy_chk@plt+0x12b4>
   122ac:	bl	10f78 <__errno_location@plt>
   122b0:	ldr	r5, [sp, #8]
   122b4:	mov	r6, r0
   122b8:	add	r9, sp, #48	; 0x30
   122bc:	ldr	r0, [r6]
   122c0:	cmp	r0, #34	; 0x22
   122c4:	bne	122f4 <__mempcpy_chk@plt+0x12a4>
   122c8:	mov	r0, r9
   122cc:	bl	15140 <__mempcpy_chk@plt+0x40f0>
   122d0:	cmp	r0, #0
   122d4:	beq	12370 <__mempcpy_chk@plt+0x1320>
   122d8:	ldr	r5, [sp, #48]	; 0x30
   122dc:	ldr	r1, [sp, #52]	; 0x34
   122e0:	mov	r0, r5
   122e4:	bl	10f48 <getcwd@plt>
   122e8:	cmp	r0, #0
   122ec:	beq	122bc <__mempcpy_chk@plt+0x126c>
   122f0:	b	11d90 <__mempcpy_chk@plt+0xd40>
   122f4:	cmp	r0, #12
   122f8:	beq	12370 <__mempcpy_chk@plt+0x1320>
   122fc:	mov	r4, #1
   12300:	mov	r6, r5
   12304:	ldr	r1, [sp, #12]
   12308:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   1230c:	ldr	r7, [sp, #16]
   12310:	cmp	r0, r1
   12314:	beq	1231c <__mempcpy_chk@plt+0x12cc>
   12318:	bl	1255c <__mempcpy_chk@plt+0x150c>
   1231c:	ldr	r0, [sp, #1184]	; 0x4a0
   12320:	cmp	r0, r7
   12324:	beq	1232c <__mempcpy_chk@plt+0x12dc>
   12328:	bl	1255c <__mempcpy_chk@plt+0x150c>
   1232c:	cmp	r4, #0
   12330:	beq	12350 <__mempcpy_chk@plt+0x1300>
   12334:	ldr	r0, [sp, #48]	; 0x30
   12338:	ldr	r1, [sp, #8]
   1233c:	mov	r4, #0
   12340:	cmp	r0, r1
   12344:	beq	11d68 <__mempcpy_chk@plt+0xd18>
   12348:	bl	1255c <__mempcpy_chk@plt+0x150c>
   1234c:	b	11d68 <__mempcpy_chk@plt+0xd18>
   12350:	mov	r0, #0
   12354:	strb	r0, [r6], -r5
   12358:	add	r0, sp, #48	; 0x30
   1235c:	add	r1, r6, #1
   12360:	bl	150dc <__mempcpy_chk@plt+0x408c>
   12364:	mov	r4, r0
   12368:	cmp	r0, #0
   1236c:	bne	11d68 <__mempcpy_chk@plt+0xd18>
   12370:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   12374:	bl	10f78 <__errno_location@plt>
   12378:	mov	r1, #40	; 0x28
   1237c:	str	r1, [r0]
   12380:	mov	r4, #1
   12384:	b	12298 <__mempcpy_chk@plt+0x1248>
   12388:	movw	r1, #29020	; 0x715c
   1238c:	movt	r1, #2
   12390:	str	r0, [r1]
   12394:	bx	lr
   12398:	movw	r1, #29024	; 0x7160
   1239c:	movt	r1, #2
   123a0:	strb	r0, [r1]
   123a4:	bx	lr
   123a8:	push	{r4, r5, r6, sl, fp, lr}
   123ac:	add	fp, sp, #16
   123b0:	sub	sp, sp, #8
   123b4:	movw	r0, #28996	; 0x7144
   123b8:	movt	r0, #2
   123bc:	ldr	r0, [r0]
   123c0:	bl	15c54 <__mempcpy_chk@plt+0x4c04>
   123c4:	cmp	r0, #0
   123c8:	beq	123f0 <__mempcpy_chk@plt+0x13a0>
   123cc:	movw	r0, #29024	; 0x7160
   123d0:	movt	r0, #2
   123d4:	ldrb	r0, [r0]
   123d8:	cmp	r0, #0
   123dc:	beq	12410 <__mempcpy_chk@plt+0x13c0>
   123e0:	bl	10f78 <__errno_location@plt>
   123e4:	ldr	r0, [r0]
   123e8:	cmp	r0, #32
   123ec:	bne	12410 <__mempcpy_chk@plt+0x13c0>
   123f0:	movw	r0, #28992	; 0x7140
   123f4:	movt	r0, #2
   123f8:	ldr	r0, [r0]
   123fc:	bl	15c54 <__mempcpy_chk@plt+0x4c04>
   12400:	cmp	r0, #0
   12404:	subeq	sp, fp, #16
   12408:	popeq	{r4, r5, r6, sl, fp, pc}
   1240c:	b	12480 <__mempcpy_chk@plt+0x1430>
   12410:	movw	r1, #26964	; 0x6954
   12414:	mov	r0, #0
   12418:	mov	r2, #5
   1241c:	movt	r1, #1
   12420:	bl	10e70 <dcgettext@plt>
   12424:	mov	r4, r0
   12428:	movw	r0, #29020	; 0x715c
   1242c:	movt	r0, #2
   12430:	ldr	r6, [r0]
   12434:	bl	10f78 <__errno_location@plt>
   12438:	ldr	r5, [r0]
   1243c:	cmp	r6, #0
   12440:	bne	1245c <__mempcpy_chk@plt+0x140c>
   12444:	movw	r2, #26980	; 0x6964
   12448:	mov	r0, #0
   1244c:	mov	r1, r5
   12450:	mov	r3, r4
   12454:	movt	r2, #1
   12458:	b	1247c <__mempcpy_chk@plt+0x142c>
   1245c:	mov	r0, r6
   12460:	bl	14d50 <__mempcpy_chk@plt+0x3d00>
   12464:	movw	r2, #26976	; 0x6960
   12468:	mov	r3, r0
   1246c:	str	r4, [sp]
   12470:	mov	r0, #0
   12474:	mov	r1, r5
   12478:	movt	r2, #1
   1247c:	bl	10ef4 <error@plt>
   12480:	movw	r0, #28908	; 0x70ec
   12484:	movt	r0, #2
   12488:	ldr	r0, [r0]
   1248c:	bl	10e4c <_exit@plt>
   12490:	push	{r4, r5, r6, r7, fp, lr}
   12494:	add	fp, sp, #16
   12498:	cmp	r0, #0
   1249c:	beq	12504 <__mempcpy_chk@plt+0x14b4>
   124a0:	mov	r5, r0
   124a4:	mov	r0, #24
   124a8:	mov	r6, r2
   124ac:	mov	r7, r1
   124b0:	bl	15710 <__mempcpy_chk@plt+0x46c0>
   124b4:	mov	r4, r0
   124b8:	mov	r0, r7
   124bc:	bl	15b04 <__mempcpy_chk@plt+0x4ab4>
   124c0:	str	r0, [r4]
   124c4:	ldrd	r0, [r6, #96]	; 0x60
   124c8:	str	r0, [r4, #8]
   124cc:	str	r1, [r4, #12]
   124d0:	ldrd	r0, [r6]
   124d4:	str	r1, [r4, #20]
   124d8:	str	r0, [r4, #16]
   124dc:	mov	r0, r5
   124e0:	mov	r1, r4
   124e4:	bl	13390 <__mempcpy_chk@plt+0x2340>
   124e8:	cmp	r0, #0
   124ec:	beq	12508 <__mempcpy_chk@plt+0x14b8>
   124f0:	cmp	r0, r4
   124f4:	beq	12504 <__mempcpy_chk@plt+0x14b4>
   124f8:	mov	r0, r4
   124fc:	pop	{r4, r5, r6, r7, fp, lr}
   12500:	b	13584 <__mempcpy_chk@plt+0x2534>
   12504:	pop	{r4, r5, r6, r7, fp, pc}
   12508:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   1250c:	cmp	r0, #0
   12510:	moveq	r0, #0
   12514:	bxeq	lr
   12518:	push	{r4, r5, fp, lr}
   1251c:	add	fp, sp, #8
   12520:	sub	sp, sp, #24
   12524:	str	r1, [sp]
   12528:	mov	ip, sp
   1252c:	mov	r1, sp
   12530:	ldrd	r4, [r2, #96]	; 0x60
   12534:	add	r3, ip, #8
   12538:	add	ip, ip, #16
   1253c:	strd	r4, [r3]
   12540:	ldrd	r2, [r2]
   12544:	strd	r2, [ip]
   12548:	bl	12760 <__mempcpy_chk@plt+0x1710>
   1254c:	cmp	r0, #0
   12550:	movwne	r0, #1
   12554:	sub	sp, fp, #8
   12558:	pop	{r4, r5, fp, pc}
   1255c:	push	{r4, r5, r6, sl, fp, lr}
   12560:	add	fp, sp, #16
   12564:	mov	r4, r0
   12568:	bl	10f78 <__errno_location@plt>
   1256c:	ldr	r6, [r0]
   12570:	mov	r5, r0
   12574:	mov	r0, r4
   12578:	bl	10e34 <free@plt>
   1257c:	str	r6, [r5]
   12580:	pop	{r4, r5, r6, sl, fp, pc}
   12584:	andeq	r0, r0, r0
   12588:	ldr	r0, [r0, #8]
   1258c:	bx	lr
   12590:	ldr	r0, [r0, #12]
   12594:	bx	lr
   12598:	ldr	r0, [r0, #16]
   1259c:	bx	lr
   125a0:	ldm	r0, {r2, ip}
   125a4:	mov	r0, #0
   125a8:	cmp	r2, ip
   125ac:	bxcs	lr
   125b0:	mov	r0, #0
   125b4:	ldr	r1, [r2]
   125b8:	cmp	r1, #0
   125bc:	beq	125e0 <__mempcpy_chk@plt+0x1590>
   125c0:	mov	r3, #0
   125c4:	mov	r1, r2
   125c8:	ldr	r1, [r1, #4]
   125cc:	add	r3, r3, #1
   125d0:	cmp	r1, #0
   125d4:	bne	125c8 <__mempcpy_chk@plt+0x1578>
   125d8:	cmp	r3, r0
   125dc:	movhi	r0, r3
   125e0:	add	r2, r2, #8
   125e4:	cmp	r2, ip
   125e8:	bcc	125b4 <__mempcpy_chk@plt+0x1564>
   125ec:	bx	lr
   125f0:	push	{fp, lr}
   125f4:	mov	fp, sp
   125f8:	ldm	r0, {r3, ip}
   125fc:	mov	lr, #0
   12600:	mov	r1, #0
   12604:	cmp	r3, ip
   12608:	bcs	12644 <__mempcpy_chk@plt+0x15f4>
   1260c:	mov	r1, #0
   12610:	mov	lr, #0
   12614:	ldr	r2, [r3]
   12618:	cmp	r2, #0
   1261c:	beq	12638 <__mempcpy_chk@plt+0x15e8>
   12620:	mov	r2, r3
   12624:	ldr	r2, [r2, #4]
   12628:	add	r1, r1, #1
   1262c:	cmp	r2, #0
   12630:	bne	12624 <__mempcpy_chk@plt+0x15d4>
   12634:	add	lr, lr, #1
   12638:	add	r3, r3, #8
   1263c:	cmp	r3, ip
   12640:	bcc	12614 <__mempcpy_chk@plt+0x15c4>
   12644:	ldr	r2, [r0, #12]
   12648:	cmp	lr, r2
   1264c:	bne	12664 <__mempcpy_chk@plt+0x1614>
   12650:	ldr	r2, [r0, #16]
   12654:	mov	r0, #1
   12658:	cmp	r1, r2
   1265c:	movne	r0, #0
   12660:	pop	{fp, pc}
   12664:	mov	r0, #0
   12668:	pop	{fp, pc}
   1266c:	nop	{0}
   12670:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12674:	add	fp, sp, #24
   12678:	sub	sp, sp, #8
   1267c:	ldr	r6, [r0]
   12680:	ldmib	r0, {r2, r7, r8}
   12684:	ldr	r3, [r0, #16]
   12688:	mov	r4, r1
   1268c:	mov	r5, #0
   12690:	cmp	r6, r2
   12694:	bcs	126d4 <__mempcpy_chk@plt+0x1684>
   12698:	mov	r5, #0
   1269c:	ldr	r0, [r6]
   126a0:	cmp	r0, #0
   126a4:	beq	126c8 <__mempcpy_chk@plt+0x1678>
   126a8:	mov	r0, #0
   126ac:	mov	r1, r6
   126b0:	ldr	r1, [r1, #4]
   126b4:	add	r0, r0, #1
   126b8:	cmp	r1, #0
   126bc:	bne	126b0 <__mempcpy_chk@plt+0x1660>
   126c0:	cmp	r0, r5
   126c4:	movhi	r5, r0
   126c8:	add	r6, r6, #8
   126cc:	cmp	r6, r2
   126d0:	bcc	1269c <__mempcpy_chk@plt+0x164c>
   126d4:	movw	r2, #26983	; 0x6967
   126d8:	mov	r0, r4
   126dc:	mov	r1, #1
   126e0:	movt	r2, #1
   126e4:	bl	10fb4 <__fprintf_chk@plt>
   126e8:	movw	r2, #27007	; 0x697f
   126ec:	mov	r0, r4
   126f0:	mov	r1, #1
   126f4:	mov	r3, r7
   126f8:	movt	r2, #1
   126fc:	bl	10fb4 <__fprintf_chk@plt>
   12700:	vmov	s0, r8
   12704:	vldr	d16, [pc, #76]	; 12758 <__mempcpy_chk@plt+0x1708>
   12708:	movw	r2, #27031	; 0x6997
   1270c:	mov	r0, r4
   12710:	mov	r1, #1
   12714:	mov	r3, r8
   12718:	movt	r2, #1
   1271c:	vcvt.f64.u32	d17, s0
   12720:	vmov	s0, r7
   12724:	vcvt.f64.u32	d18, s0
   12728:	vmul.f64	d16, d17, d16
   1272c:	vdiv.f64	d16, d16, d18
   12730:	vstr	d16, [sp]
   12734:	bl	10fb4 <__fprintf_chk@plt>
   12738:	movw	r2, #27064	; 0x69b8
   1273c:	mov	r0, r4
   12740:	mov	r1, #1
   12744:	mov	r3, r5
   12748:	movt	r2, #1
   1274c:	sub	sp, fp, #24
   12750:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12754:	b	10fb4 <__fprintf_chk@plt>
   12758:	andeq	r0, r0, r0
   1275c:	subsmi	r0, r9, r0
   12760:	push	{r4, r5, r6, r7, fp, lr}
   12764:	add	fp, sp, #16
   12768:	mov	r4, r1
   1276c:	ldr	r1, [r0, #8]
   12770:	ldr	r2, [r0, #24]
   12774:	mov	r5, r0
   12778:	mov	r0, r4
   1277c:	blx	r2
   12780:	ldr	r1, [r5, #8]
   12784:	cmp	r0, r1
   12788:	bcs	127e8 <__mempcpy_chk@plt+0x1798>
   1278c:	ldr	r7, [r5]
   12790:	mov	r6, #0
   12794:	ldr	r1, [r7, r0, lsl #3]!
   12798:	cmp	r1, #0
   1279c:	cmpne	r7, #0
   127a0:	bne	127d0 <__mempcpy_chk@plt+0x1780>
   127a4:	mov	r0, r6
   127a8:	pop	{r4, r5, r6, r7, fp, pc}
   127ac:	ldr	r2, [r5, #28]
   127b0:	mov	r0, r4
   127b4:	blx	r2
   127b8:	cmp	r0, #0
   127bc:	bne	127e0 <__mempcpy_chk@plt+0x1790>
   127c0:	ldr	r7, [r7, #4]
   127c4:	cmp	r7, #0
   127c8:	beq	127a4 <__mempcpy_chk@plt+0x1754>
   127cc:	ldr	r1, [r7]
   127d0:	cmp	r1, r4
   127d4:	bne	127ac <__mempcpy_chk@plt+0x175c>
   127d8:	mov	r6, r4
   127dc:	b	127a4 <__mempcpy_chk@plt+0x1754>
   127e0:	ldr	r6, [r7]
   127e4:	b	127a4 <__mempcpy_chk@plt+0x1754>
   127e8:	bl	1102c <abort@plt>
   127ec:	push	{fp, lr}
   127f0:	mov	fp, sp
   127f4:	ldr	r1, [r0, #16]
   127f8:	cmp	r1, #0
   127fc:	beq	1281c <__mempcpy_chk@plt+0x17cc>
   12800:	ldm	r0, {r1, r2}
   12804:	cmp	r1, r2
   12808:	bcs	12824 <__mempcpy_chk@plt+0x17d4>
   1280c:	ldr	r0, [r1], #8
   12810:	cmp	r0, #0
   12814:	beq	12804 <__mempcpy_chk@plt+0x17b4>
   12818:	pop	{fp, pc}
   1281c:	mov	r0, #0
   12820:	pop	{fp, pc}
   12824:	bl	1102c <abort@plt>
   12828:	push	{r4, r5, fp, lr}
   1282c:	add	fp, sp, #8
   12830:	mov	r5, r1
   12834:	ldr	r1, [r0, #8]
   12838:	ldr	r2, [r0, #24]
   1283c:	mov	r4, r0
   12840:	mov	r0, r5
   12844:	blx	r2
   12848:	ldr	r1, [r4, #8]
   1284c:	cmp	r0, r1
   12850:	bcs	128b4 <__mempcpy_chk@plt+0x1864>
   12854:	ldr	r1, [r4]
   12858:	add	r2, r1, r0, lsl #3
   1285c:	ldr	r3, [r2]
   12860:	ldr	r2, [r2, #4]
   12864:	cmp	r3, r5
   12868:	beq	12878 <__mempcpy_chk@plt+0x1828>
   1286c:	cmp	r2, #0
   12870:	bne	1285c <__mempcpy_chk@plt+0x180c>
   12874:	b	12888 <__mempcpy_chk@plt+0x1838>
   12878:	cmp	r2, #0
   1287c:	beq	12888 <__mempcpy_chk@plt+0x1838>
   12880:	ldr	r0, [r2]
   12884:	pop	{r4, r5, fp, pc}
   12888:	ldr	r2, [r4, #4]
   1288c:	add	r0, r1, r0, lsl #3
   12890:	add	r1, r0, #8
   12894:	cmp	r1, r2
   12898:	bcs	128ac <__mempcpy_chk@plt+0x185c>
   1289c:	ldr	r0, [r1], #8
   128a0:	cmp	r0, #0
   128a4:	beq	12894 <__mempcpy_chk@plt+0x1844>
   128a8:	pop	{r4, r5, fp, pc}
   128ac:	mov	r0, #0
   128b0:	pop	{r4, r5, fp, pc}
   128b4:	bl	1102c <abort@plt>
   128b8:	push	{r4, r5, fp, lr}
   128bc:	add	fp, sp, #8
   128c0:	ldm	r0, {r5, lr}
   128c4:	mov	ip, r0
   128c8:	mov	r0, #0
   128cc:	cmp	r5, lr
   128d0:	popcs	{r4, r5, fp, pc}
   128d4:	mov	r0, #0
   128d8:	ldr	r3, [r5]
   128dc:	cmp	r3, #0
   128e0:	cmpne	r5, #0
   128e4:	bne	128f8 <__mempcpy_chk@plt+0x18a8>
   128e8:	add	r5, r5, #8
   128ec:	cmp	r5, lr
   128f0:	bcc	128d8 <__mempcpy_chk@plt+0x1888>
   128f4:	b	12924 <__mempcpy_chk@plt+0x18d4>
   128f8:	mov	r3, r5
   128fc:	cmp	r0, r2
   12900:	bcs	12924 <__mempcpy_chk@plt+0x18d4>
   12904:	ldr	r4, [r3]
   12908:	str	r4, [r1, r0, lsl #2]
   1290c:	add	r0, r0, #1
   12910:	ldr	r3, [r3, #4]
   12914:	cmp	r3, #0
   12918:	bne	128fc <__mempcpy_chk@plt+0x18ac>
   1291c:	ldr	lr, [ip, #4]
   12920:	b	128e8 <__mempcpy_chk@plt+0x1898>
   12924:	pop	{r4, r5, fp, pc}
   12928:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1292c:	add	fp, sp, #24
   12930:	mov	r5, r1
   12934:	ldr	r4, [r0]
   12938:	ldr	r1, [r0, #4]
   1293c:	mov	r6, #0
   12940:	cmp	r4, r1
   12944:	bcs	129b8 <__mempcpy_chk@plt+0x1968>
   12948:	mov	r9, r2
   1294c:	mov	r8, r0
   12950:	mov	r6, #0
   12954:	ldr	r0, [r4]
   12958:	cmp	r0, #0
   1295c:	cmpne	r4, #0
   12960:	bne	12974 <__mempcpy_chk@plt+0x1924>
   12964:	add	r4, r4, #8
   12968:	cmp	r4, r1
   1296c:	bcc	12954 <__mempcpy_chk@plt+0x1904>
   12970:	b	129b8 <__mempcpy_chk@plt+0x1968>
   12974:	mov	r1, r9
   12978:	blx	r5
   1297c:	cmp	r0, #0
   12980:	beq	129b8 <__mempcpy_chk@plt+0x1968>
   12984:	mov	r7, r4
   12988:	ldr	r7, [r7, #4]
   1298c:	add	r6, r6, #1
   12990:	cmp	r7, #0
   12994:	beq	129b0 <__mempcpy_chk@plt+0x1960>
   12998:	ldr	r0, [r7]
   1299c:	mov	r1, r9
   129a0:	blx	r5
   129a4:	cmp	r0, #0
   129a8:	bne	12988 <__mempcpy_chk@plt+0x1938>
   129ac:	b	129b8 <__mempcpy_chk@plt+0x1968>
   129b0:	ldr	r1, [r8, #4]
   129b4:	b	12964 <__mempcpy_chk@plt+0x1914>
   129b8:	mov	r0, r6
   129bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   129c0:	ldrb	r2, [r0]
   129c4:	cmp	r2, #0
   129c8:	moveq	r0, #0
   129cc:	bxeq	lr
   129d0:	add	r3, r0, #1
   129d4:	mov	r0, #0
   129d8:	rsb	r0, r0, r0, lsl #5
   129dc:	uxtab	r0, r0, r2
   129e0:	udiv	r2, r0, r1
   129e4:	mls	r0, r2, r1, r0
   129e8:	ldrb	r2, [r3], #1
   129ec:	cmp	r2, #0
   129f0:	bne	129d8 <__mempcpy_chk@plt+0x1988>
   129f4:	bx	lr
   129f8:	movw	r1, #27088	; 0x69d0
   129fc:	movt	r1, #1
   12a00:	vld1.32	{d16-d17}, [r1]!
   12a04:	ldr	r1, [r1]
   12a08:	vst1.32	{d16-d17}, [r0]!
   12a0c:	str	r1, [r0]
   12a10:	bx	lr
   12a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a18:	add	fp, sp, #28
   12a1c:	sub	sp, sp, #4
   12a20:	movw	sl, #11016	; 0x2b08
   12a24:	cmp	r3, #0
   12a28:	movw	r5, #10996	; 0x2af4
   12a2c:	mov	r8, r0
   12a30:	mov	r0, #40	; 0x28
   12a34:	mov	r7, r1
   12a38:	movt	sl, #1
   12a3c:	movne	sl, r3
   12a40:	cmp	r2, #0
   12a44:	movt	r5, #1
   12a48:	movne	r5, r2
   12a4c:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   12a50:	mov	r9, #0
   12a54:	cmp	r0, #0
   12a58:	beq	12ae8 <__mempcpy_chk@plt+0x1a98>
   12a5c:	movw	r6, #27088	; 0x69d0
   12a60:	cmp	r7, #0
   12a64:	mov	r4, r0
   12a68:	movt	r6, #1
   12a6c:	movne	r6, r7
   12a70:	str	r6, [r0, #20]
   12a74:	bl	12b18 <__mempcpy_chk@plt+0x1ac8>
   12a78:	cmp	r0, #0
   12a7c:	beq	12ae0 <__mempcpy_chk@plt+0x1a90>
   12a80:	mov	r0, r8
   12a84:	mov	r1, r6
   12a88:	bl	12bc4 <__mempcpy_chk@plt+0x1b74>
   12a8c:	cmp	r0, #0
   12a90:	str	r0, [r4, #8]
   12a94:	beq	12ae0 <__mempcpy_chk@plt+0x1a90>
   12a98:	mov	r1, #8
   12a9c:	bl	15b80 <__mempcpy_chk@plt+0x4b30>
   12aa0:	cmp	r0, #0
   12aa4:	str	r0, [r4]
   12aa8:	beq	12ae0 <__mempcpy_chk@plt+0x1a90>
   12aac:	ldr	r1, [fp, #8]
   12ab0:	mov	r2, #0
   12ab4:	str	r5, [r4, #24]
   12ab8:	str	sl, [r4, #28]
   12abc:	mov	r9, r4
   12ac0:	str	r1, [r4, #32]
   12ac4:	str	r2, [r4, #36]	; 0x24
   12ac8:	str	r2, [r4, #12]
   12acc:	str	r2, [r4, #16]
   12ad0:	ldr	r1, [r4, #8]
   12ad4:	add	r0, r0, r1, lsl #3
   12ad8:	str	r0, [r4, #4]
   12adc:	b	12ae8 <__mempcpy_chk@plt+0x1a98>
   12ae0:	mov	r0, r4
   12ae4:	bl	1255c <__mempcpy_chk@plt+0x150c>
   12ae8:	mov	r0, r9
   12aec:	sub	sp, fp, #28
   12af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12af4:	ror	r2, r0, #3
   12af8:	udiv	r2, r2, r1
   12afc:	mul	r1, r2, r1
   12b00:	rsb	r0, r1, r0, ror #3
   12b04:	bx	lr
   12b08:	sub	r0, r0, r1
   12b0c:	clz	r0, r0
   12b10:	lsr	r0, r0, #5
   12b14:	bx	lr
   12b18:	ldr	r3, [r0, #20]
   12b1c:	movw	r2, #27088	; 0x69d0
   12b20:	mov	r1, r0
   12b24:	mov	r0, #1
   12b28:	movt	r2, #1
   12b2c:	cmp	r3, r2
   12b30:	beq	12bb4 <__mempcpy_chk@plt+0x1b64>
   12b34:	vldr	s2, [pc, #124]	; 12bb8 <__mempcpy_chk@plt+0x1b68>
   12b38:	vldr	s0, [r3, #8]
   12b3c:	vcmpe.f32	s0, s2
   12b40:	vmrs	APSR_nzcv, fpscr
   12b44:	ble	12bac <__mempcpy_chk@plt+0x1b5c>
   12b48:	vldr	s4, [pc, #108]	; 12bbc <__mempcpy_chk@plt+0x1b6c>
   12b4c:	vcmpe.f32	s0, s4
   12b50:	vmrs	APSR_nzcv, fpscr
   12b54:	bpl	12bac <__mempcpy_chk@plt+0x1b5c>
   12b58:	vldr	s4, [pc, #96]	; 12bc0 <__mempcpy_chk@plt+0x1b70>
   12b5c:	vldr	s6, [r3, #12]
   12b60:	vcmpe.f32	s6, s4
   12b64:	vmrs	APSR_nzcv, fpscr
   12b68:	ble	12bac <__mempcpy_chk@plt+0x1b5c>
   12b6c:	vldr	s4, [r3]
   12b70:	vcmpe.f32	s4, #0.0
   12b74:	vmrs	APSR_nzcv, fpscr
   12b78:	blt	12bac <__mempcpy_chk@plt+0x1b5c>
   12b7c:	vadd.f32	s2, s4, s2
   12b80:	vcmpe.f32	s2, s0
   12b84:	vmrs	APSR_nzcv, fpscr
   12b88:	bpl	12bac <__mempcpy_chk@plt+0x1b5c>
   12b8c:	vldr	s0, [r3, #4]
   12b90:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12b94:	vcmpe.f32	s0, s4
   12b98:	vmrs	APSR_nzcv, fpscr
   12b9c:	bhi	12bac <__mempcpy_chk@plt+0x1b5c>
   12ba0:	vcmpe.f32	s2, s0
   12ba4:	vmrs	APSR_nzcv, fpscr
   12ba8:	bxmi	lr
   12bac:	mov	r0, #0
   12bb0:	str	r2, [r1, #20]
   12bb4:	bx	lr
   12bb8:	stclcc	12, cr12, [ip, #820]	; 0x334
   12bbc:	svccc	0x00666666
   12bc0:	svccc	0x008ccccd
   12bc4:	ldrb	r2, [r1, #16]
   12bc8:	cmp	r2, #0
   12bcc:	bne	12bfc <__mempcpy_chk@plt+0x1bac>
   12bd0:	vmov	s2, r0
   12bd4:	vldr	s0, [r1, #8]
   12bd8:	vldr	s4, [pc, #156]	; 12c7c <__mempcpy_chk@plt+0x1c2c>
   12bdc:	mov	r0, #0
   12be0:	vcvt.f32.u32	s2, s2
   12be4:	vdiv.f32	s2, s2, s0
   12be8:	vcmpe.f32	s2, s4
   12bec:	vcvt.u32.f32	s0, s2
   12bf0:	vmrs	APSR_nzcv, fpscr
   12bf4:	bxge	lr
   12bf8:	vmov	r0, s0
   12bfc:	cmp	r0, #10
   12c00:	movls	r0, #10
   12c04:	orr	r0, r0, #1
   12c08:	cmn	r0, #1
   12c0c:	beq	12c68 <__mempcpy_chk@plt+0x1c18>
   12c10:	mov	r1, #3
   12c14:	cmp	r0, #10
   12c18:	bcc	12c50 <__mempcpy_chk@plt+0x1c00>
   12c1c:	mov	r1, #3
   12c20:	mov	ip, #9
   12c24:	mov	r2, #12
   12c28:	udiv	r3, r0, r1
   12c2c:	mls	r3, r3, r1, r0
   12c30:	cmp	r3, #0
   12c34:	beq	12c50 <__mempcpy_chk@plt+0x1c00>
   12c38:	add	r3, ip, r2
   12c3c:	add	r2, r2, #8
   12c40:	add	r1, r1, #2
   12c44:	add	ip, r3, #4
   12c48:	cmp	ip, r0
   12c4c:	bcc	12c28 <__mempcpy_chk@plt+0x1bd8>
   12c50:	udiv	r2, r0, r1
   12c54:	mls	r1, r2, r1, r0
   12c58:	cmp	r1, #0
   12c5c:	bne	12c70 <__mempcpy_chk@plt+0x1c20>
   12c60:	add	r0, r0, #2
   12c64:	b	12c08 <__mempcpy_chk@plt+0x1bb8>
   12c68:	mov	r0, #0
   12c6c:	bx	lr
   12c70:	cmp	r0, #536870912	; 0x20000000
   12c74:	movcs	r0, #0
   12c78:	bx	lr
   12c7c:	svcmi	0x00800000
   12c80:	push	{r4, r5, r6, r7, fp, lr}
   12c84:	add	fp, sp, #16
   12c88:	mov	r4, r0
   12c8c:	ldr	r5, [r0]
   12c90:	ldr	r0, [r0, #4]
   12c94:	cmp	r5, r0
   12c98:	bcs	12d30 <__mempcpy_chk@plt+0x1ce0>
   12c9c:	mov	r6, #0
   12ca0:	ldr	r1, [r5]
   12ca4:	cmp	r1, #0
   12ca8:	beq	12d24 <__mempcpy_chk@plt+0x1cd4>
   12cac:	ldr	r1, [r4, #32]
   12cb0:	ldr	r7, [r5, #4]
   12cb4:	cmp	r1, #0
   12cb8:	mov	r0, r1
   12cbc:	movwne	r0, #1
   12cc0:	cmp	r7, #0
   12cc4:	beq	12d08 <__mempcpy_chk@plt+0x1cb8>
   12cc8:	tst	r0, #1
   12ccc:	beq	12cdc <__mempcpy_chk@plt+0x1c8c>
   12cd0:	ldr	r0, [r7]
   12cd4:	blx	r1
   12cd8:	ldr	r1, [r4, #32]
   12cdc:	str	r6, [r7]
   12ce0:	cmp	r1, #0
   12ce4:	ldr	r2, [r7, #4]
   12ce8:	ldr	r0, [r4, #36]	; 0x24
   12cec:	str	r0, [r7, #4]
   12cf0:	mov	r0, r1
   12cf4:	str	r7, [r4, #36]	; 0x24
   12cf8:	movwne	r0, #1
   12cfc:	cmp	r2, #0
   12d00:	mov	r7, r2
   12d04:	bne	12cc8 <__mempcpy_chk@plt+0x1c78>
   12d08:	cmp	r0, #0
   12d0c:	beq	12d18 <__mempcpy_chk@plt+0x1cc8>
   12d10:	ldr	r0, [r5]
   12d14:	blx	r1
   12d18:	str	r6, [r5]
   12d1c:	str	r6, [r5, #4]
   12d20:	ldr	r0, [r4, #4]
   12d24:	add	r5, r5, #8
   12d28:	cmp	r5, r0
   12d2c:	bcc	12ca0 <__mempcpy_chk@plt+0x1c50>
   12d30:	mov	r0, #0
   12d34:	str	r0, [r4, #12]
   12d38:	str	r0, [r4, #16]
   12d3c:	pop	{r4, r5, r6, r7, fp, pc}
   12d40:	push	{r4, r5, r6, sl, fp, lr}
   12d44:	add	fp, sp, #16
   12d48:	mov	r4, r0
   12d4c:	ldr	r0, [r0, #32]
   12d50:	cmp	r0, #0
   12d54:	beq	12db8 <__mempcpy_chk@plt+0x1d68>
   12d58:	ldr	r0, [r4, #16]
   12d5c:	cmp	r0, #0
   12d60:	beq	12db8 <__mempcpy_chk@plt+0x1d68>
   12d64:	ldr	r5, [r4]
   12d68:	ldr	r1, [r4, #4]
   12d6c:	cmp	r5, r1
   12d70:	bcs	12db8 <__mempcpy_chk@plt+0x1d68>
   12d74:	ldr	r0, [r5]
   12d78:	cmp	r0, #0
   12d7c:	cmpne	r5, #0
   12d80:	beq	12db0 <__mempcpy_chk@plt+0x1d60>
   12d84:	ldr	r1, [r4, #32]
   12d88:	blx	r1
   12d8c:	ldr	r6, [r5, #4]
   12d90:	cmp	r6, #0
   12d94:	beq	12dac <__mempcpy_chk@plt+0x1d5c>
   12d98:	ldr	r1, [r4, #32]
   12d9c:	ldr	r0, [r6]
   12da0:	blx	r1
   12da4:	ldr	r6, [r6, #4]
   12da8:	b	12d90 <__mempcpy_chk@plt+0x1d40>
   12dac:	ldr	r1, [r4, #4]
   12db0:	add	r5, r5, #8
   12db4:	b	12d6c <__mempcpy_chk@plt+0x1d1c>
   12db8:	ldr	r5, [r4]
   12dbc:	ldr	r1, [r4, #4]
   12dc0:	cmp	r5, r1
   12dc4:	bcs	12df4 <__mempcpy_chk@plt+0x1da4>
   12dc8:	ldr	r0, [r5, #4]
   12dcc:	cmp	r0, #0
   12dd0:	beq	12dec <__mempcpy_chk@plt+0x1d9c>
   12dd4:	ldr	r6, [r0, #4]
   12dd8:	bl	1255c <__mempcpy_chk@plt+0x150c>
   12ddc:	cmp	r6, #0
   12de0:	mov	r0, r6
   12de4:	bne	12dd4 <__mempcpy_chk@plt+0x1d84>
   12de8:	ldr	r1, [r4, #4]
   12dec:	add	r5, r5, #8
   12df0:	b	12dc0 <__mempcpy_chk@plt+0x1d70>
   12df4:	ldr	r0, [r4, #36]	; 0x24
   12df8:	cmp	r0, #0
   12dfc:	beq	12e14 <__mempcpy_chk@plt+0x1dc4>
   12e00:	ldr	r5, [r0, #4]
   12e04:	bl	1255c <__mempcpy_chk@plt+0x150c>
   12e08:	cmp	r5, #0
   12e0c:	mov	r0, r5
   12e10:	bne	12e00 <__mempcpy_chk@plt+0x1db0>
   12e14:	ldr	r0, [r4]
   12e18:	bl	1255c <__mempcpy_chk@plt+0x150c>
   12e1c:	mov	r0, r4
   12e20:	pop	{r4, r5, r6, sl, fp, lr}
   12e24:	b	1255c <__mempcpy_chk@plt+0x150c>
   12e28:	push	{r4, r5, r6, r7, fp, lr}
   12e2c:	add	fp, sp, #16
   12e30:	sub	sp, sp, #40	; 0x28
   12e34:	mov	r7, r0
   12e38:	mov	r2, r1
   12e3c:	mov	r4, r0
   12e40:	ldr	r1, [r7, #20]!
   12e44:	mov	r0, r2
   12e48:	bl	12bc4 <__mempcpy_chk@plt+0x1b74>
   12e4c:	mov	r5, #0
   12e50:	cmp	r0, #0
   12e54:	beq	12ee8 <__mempcpy_chk@plt+0x1e98>
   12e58:	mov	r6, r0
   12e5c:	ldr	r0, [r4, #8]
   12e60:	cmp	r6, r0
   12e64:	beq	12ee4 <__mempcpy_chk@plt+0x1e94>
   12e68:	mov	r0, r6
   12e6c:	mov	r1, #8
   12e70:	bl	15b80 <__mempcpy_chk@plt+0x4b30>
   12e74:	cmp	r0, #0
   12e78:	str	r0, [sp]
   12e7c:	beq	12ee8 <__mempcpy_chk@plt+0x1e98>
   12e80:	add	r0, r0, r6, lsl #3
   12e84:	mov	r1, #0
   12e88:	mov	r5, sp
   12e8c:	mov	r2, #0
   12e90:	str	r1, [sp, #16]
   12e94:	str	r1, [sp, #12]
   12e98:	str	r6, [sp, #8]
   12e9c:	mov	r1, r4
   12ea0:	str	r0, [sp, #4]
   12ea4:	add	r0, r5, #20
   12ea8:	vld1.32	{d16-d17}, [r7]
   12eac:	vst1.32	{d16-d17}, [r0]
   12eb0:	ldr	r0, [r4, #36]	; 0x24
   12eb4:	str	r0, [sp, #36]	; 0x24
   12eb8:	mov	r0, r5
   12ebc:	bl	12f40 <__mempcpy_chk@plt+0x1ef0>
   12ec0:	cmp	r0, #0
   12ec4:	beq	12ef4 <__mempcpy_chk@plt+0x1ea4>
   12ec8:	ldr	r0, [r4]
   12ecc:	bl	1255c <__mempcpy_chk@plt+0x150c>
   12ed0:	mov	r0, #36	; 0x24
   12ed4:	vld1.32	{d16-d17}, [r5], r0
   12ed8:	vst1.32	{d16-d17}, [r4], r0
   12edc:	ldr	r0, [r5]
   12ee0:	str	r0, [r4]
   12ee4:	mov	r5, #1
   12ee8:	mov	r0, r5
   12eec:	sub	sp, fp, #16
   12ef0:	pop	{r4, r5, r6, r7, fp, pc}
   12ef4:	ldr	r0, [sp, #36]	; 0x24
   12ef8:	mov	r1, sp
   12efc:	mov	r2, #1
   12f00:	str	r0, [r4, #36]	; 0x24
   12f04:	mov	r0, r4
   12f08:	bl	12f40 <__mempcpy_chk@plt+0x1ef0>
   12f0c:	cmp	r0, #0
   12f10:	beq	12f3c <__mempcpy_chk@plt+0x1eec>
   12f14:	mov	r1, sp
   12f18:	mov	r0, r4
   12f1c:	mov	r2, #0
   12f20:	mov	r5, #0
   12f24:	bl	12f40 <__mempcpy_chk@plt+0x1ef0>
   12f28:	cmp	r0, #0
   12f2c:	beq	12f3c <__mempcpy_chk@plt+0x1eec>
   12f30:	ldr	r0, [sp]
   12f34:	bl	1255c <__mempcpy_chk@plt+0x150c>
   12f38:	b	12ee8 <__mempcpy_chk@plt+0x1e98>
   12f3c:	bl	1102c <abort@plt>
   12f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f44:	add	fp, sp, #28
   12f48:	sub	sp, sp, #12
   12f4c:	ldr	sl, [r1]
   12f50:	str	r1, [sp, #8]
   12f54:	ldr	r1, [r1, #4]
   12f58:	mov	r7, r0
   12f5c:	mov	r0, #1
   12f60:	str	r2, [sp, #4]
   12f64:	cmp	sl, r1
   12f68:	bcs	130bc <__mempcpy_chk@plt+0x206c>
   12f6c:	add	r8, r7, #36	; 0x24
   12f70:	mov	r9, #0
   12f74:	ldr	r4, [sl]
   12f78:	cmp	r4, #0
   12f7c:	beq	130a4 <__mempcpy_chk@plt+0x2054>
   12f80:	ldr	r5, [sl, #4]
   12f84:	cmp	r5, #0
   12f88:	beq	13000 <__mempcpy_chk@plt+0x1fb0>
   12f8c:	ldr	r1, [r7, #8]
   12f90:	ldr	r4, [r5]
   12f94:	ldr	r2, [r7, #24]
   12f98:	mov	r0, r4
   12f9c:	blx	r2
   12fa0:	ldr	r1, [r7, #8]
   12fa4:	cmp	r0, r1
   12fa8:	bcs	130cc <__mempcpy_chk@plt+0x207c>
   12fac:	ldr	r3, [r7]
   12fb0:	ldr	r2, [r5, #4]
   12fb4:	ldr	r6, [r3, r0, lsl #3]
   12fb8:	cmp	r6, #0
   12fbc:	beq	12fcc <__mempcpy_chk@plt+0x1f7c>
   12fc0:	add	r0, r3, r0, lsl #3
   12fc4:	add	r0, r0, #4
   12fc8:	b	12fe4 <__mempcpy_chk@plt+0x1f94>
   12fcc:	str	r4, [r3, r0, lsl #3]
   12fd0:	ldr	r0, [r7, #12]
   12fd4:	add	r0, r0, #1
   12fd8:	str	r0, [r7, #12]
   12fdc:	mov	r0, r8
   12fe0:	str	r9, [r5]
   12fe4:	ldr	r3, [r0]
   12fe8:	cmp	r2, #0
   12fec:	str	r3, [r5, #4]
   12ff0:	str	r5, [r0]
   12ff4:	mov	r5, r2
   12ff8:	bne	12f90 <__mempcpy_chk@plt+0x1f40>
   12ffc:	ldr	r4, [sl]
   13000:	ldr	r0, [sp, #4]
   13004:	str	r9, [sl, #4]
   13008:	cmp	r0, #0
   1300c:	bne	130a4 <__mempcpy_chk@plt+0x2054>
   13010:	ldr	r1, [r7, #8]
   13014:	ldr	r2, [r7, #24]
   13018:	mov	r0, r4
   1301c:	blx	r2
   13020:	mov	r5, r0
   13024:	ldr	r0, [r7, #8]
   13028:	cmp	r5, r0
   1302c:	bcs	130cc <__mempcpy_chk@plt+0x207c>
   13030:	ldr	r6, [r7]
   13034:	ldr	r0, [r6, r5, lsl #3]
   13038:	cmp	r0, #0
   1303c:	beq	13058 <__mempcpy_chk@plt+0x2008>
   13040:	ldr	r0, [r8]
   13044:	cmp	r0, #0
   13048:	beq	1306c <__mempcpy_chk@plt+0x201c>
   1304c:	ldr	r1, [r0, #4]
   13050:	str	r1, [r8]
   13054:	b	1307c <__mempcpy_chk@plt+0x202c>
   13058:	str	r4, [r6, r5, lsl #3]
   1305c:	ldr	r0, [r7, #12]
   13060:	add	r0, r0, #1
   13064:	str	r0, [r7, #12]
   13068:	b	13090 <__mempcpy_chk@plt+0x2040>
   1306c:	mov	r0, #8
   13070:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   13074:	cmp	r0, #0
   13078:	beq	130c4 <__mempcpy_chk@plt+0x2074>
   1307c:	add	r1, r6, r5, lsl #3
   13080:	str	r4, [r0]
   13084:	ldr	r2, [r1, #4]
   13088:	str	r2, [r0, #4]
   1308c:	str	r0, [r1, #4]
   13090:	ldr	r1, [sp, #8]
   13094:	str	r9, [sl]
   13098:	ldr	r0, [r1, #12]
   1309c:	sub	r0, r0, #1
   130a0:	str	r0, [r1, #12]
   130a4:	ldr	r0, [sp, #8]
   130a8:	add	sl, sl, #8
   130ac:	ldr	r0, [r0, #4]
   130b0:	cmp	sl, r0
   130b4:	bcc	12f74 <__mempcpy_chk@plt+0x1f24>
   130b8:	mov	r0, #1
   130bc:	sub	sp, fp, #28
   130c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130c4:	mov	r0, #0
   130c8:	b	130bc <__mempcpy_chk@plt+0x206c>
   130cc:	bl	1102c <abort@plt>
   130d0:	push	{r4, r5, r6, r7, fp, lr}
   130d4:	add	fp, sp, #16
   130d8:	sub	sp, sp, #8
   130dc:	cmp	r1, #0
   130e0:	beq	13258 <__mempcpy_chk@plt+0x2208>
   130e4:	mov	r7, r2
   130e8:	add	r2, sp, #4
   130ec:	mov	r3, #0
   130f0:	mov	r5, r1
   130f4:	mov	r4, r0
   130f8:	mov	r6, #0
   130fc:	bl	13260 <__mempcpy_chk@plt+0x2210>
   13100:	cmp	r0, #0
   13104:	beq	13114 <__mempcpy_chk@plt+0x20c4>
   13108:	cmp	r7, #0
   1310c:	strne	r0, [r7]
   13110:	b	13244 <__mempcpy_chk@plt+0x21f4>
   13114:	vldr	s0, [r4, #8]
   13118:	ldr	r0, [r4, #20]
   1311c:	vldr	s2, [r4, #12]
   13120:	vldr	s4, [r0, #8]
   13124:	vcvt.f32.u32	s0, s0
   13128:	vcvt.f32.u32	s2, s2
   1312c:	vmul.f32	s0, s4, s0
   13130:	vcmpe.f32	s0, s2
   13134:	vmrs	APSR_nzcv, fpscr
   13138:	bpl	131cc <__mempcpy_chk@plt+0x217c>
   1313c:	mov	r0, r4
   13140:	bl	12b18 <__mempcpy_chk@plt+0x1ac8>
   13144:	vldr	s0, [r4, #8]
   13148:	ldr	r0, [r4, #20]
   1314c:	vldr	s4, [r4, #12]
   13150:	vcvt.f32.u32	s2, s0
   13154:	vldr	s0, [r0, #8]
   13158:	vcvt.f32.u32	s4, s4
   1315c:	vmul.f32	s6, s0, s2
   13160:	vcmpe.f32	s6, s4
   13164:	vmrs	APSR_nzcv, fpscr
   13168:	bpl	131cc <__mempcpy_chk@plt+0x217c>
   1316c:	vldr	s4, [r0, #12]
   13170:	ldrb	r0, [r0, #16]
   13174:	mvn	r6, #0
   13178:	cmp	r0, #0
   1317c:	vmul.f32	s2, s4, s2
   13180:	vldr	s4, [pc, #212]	; 1325c <__mempcpy_chk@plt+0x220c>
   13184:	vmul.f32	s0, s0, s2
   13188:	vseleq.f32	s0, s0, s2
   1318c:	vcmpe.f32	s0, s4
   13190:	vmrs	APSR_nzcv, fpscr
   13194:	bge	13244 <__mempcpy_chk@plt+0x21f4>
   13198:	vcvt.u32.f32	s0, s0
   1319c:	mov	r0, r4
   131a0:	vmov	r1, s0
   131a4:	bl	12e28 <__mempcpy_chk@plt+0x1dd8>
   131a8:	cmp	r0, #0
   131ac:	beq	13244 <__mempcpy_chk@plt+0x21f4>
   131b0:	add	r2, sp, #4
   131b4:	mov	r0, r4
   131b8:	mov	r1, r5
   131bc:	mov	r3, #0
   131c0:	bl	13260 <__mempcpy_chk@plt+0x2210>
   131c4:	cmp	r0, #0
   131c8:	bne	13258 <__mempcpy_chk@plt+0x2208>
   131cc:	ldr	r6, [sp, #4]
   131d0:	ldr	r0, [r6]
   131d4:	cmp	r0, #0
   131d8:	beq	131f4 <__mempcpy_chk@plt+0x21a4>
   131dc:	ldr	r0, [r4, #36]	; 0x24
   131e0:	cmp	r0, #0
   131e4:	beq	13214 <__mempcpy_chk@plt+0x21c4>
   131e8:	ldr	r1, [r0, #4]
   131ec:	str	r1, [r4, #36]	; 0x24
   131f0:	b	13224 <__mempcpy_chk@plt+0x21d4>
   131f4:	str	r5, [r6]
   131f8:	ldr	r0, [r4, #12]
   131fc:	ldr	r1, [r4, #16]
   13200:	add	r0, r0, #1
   13204:	add	r1, r1, #1
   13208:	str	r0, [r4, #12]
   1320c:	str	r1, [r4, #16]
   13210:	b	13240 <__mempcpy_chk@plt+0x21f0>
   13214:	mov	r0, #8
   13218:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   1321c:	cmp	r0, #0
   13220:	beq	13250 <__mempcpy_chk@plt+0x2200>
   13224:	str	r5, [r0]
   13228:	ldr	r1, [r6, #4]
   1322c:	str	r1, [r0, #4]
   13230:	str	r0, [r6, #4]
   13234:	ldr	r0, [r4, #16]
   13238:	add	r0, r0, #1
   1323c:	str	r0, [r4, #16]
   13240:	mov	r6, #1
   13244:	mov	r0, r6
   13248:	sub	sp, fp, #16
   1324c:	pop	{r4, r5, r6, r7, fp, pc}
   13250:	mvn	r6, #0
   13254:	b	13244 <__mempcpy_chk@plt+0x21f4>
   13258:	bl	1102c <abort@plt>
   1325c:	svcmi	0x00800000
   13260:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13264:	add	fp, sp, #24
   13268:	mov	r7, r2
   1326c:	mov	r4, r1
   13270:	ldr	r1, [r0, #8]
   13274:	ldr	r2, [r0, #24]
   13278:	mov	r5, r0
   1327c:	mov	r8, r3
   13280:	mov	r0, r4
   13284:	blx	r2
   13288:	ldr	r1, [r5, #8]
   1328c:	cmp	r0, r1
   13290:	bcs	1338c <__mempcpy_chk@plt+0x233c>
   13294:	ldr	r1, [r5]
   13298:	add	r6, r1, r0, lsl #3
   1329c:	str	r6, [r7]
   132a0:	ldr	r1, [r1, r0, lsl #3]
   132a4:	cmp	r1, #0
   132a8:	beq	13340 <__mempcpy_chk@plt+0x22f0>
   132ac:	cmp	r1, r4
   132b0:	beq	132cc <__mempcpy_chk@plt+0x227c>
   132b4:	ldr	r2, [r5, #28]
   132b8:	mov	r0, r4
   132bc:	blx	r2
   132c0:	cmp	r0, #0
   132c4:	beq	13300 <__mempcpy_chk@plt+0x22b0>
   132c8:	ldr	r4, [r6]
   132cc:	cmp	r8, #0
   132d0:	beq	13344 <__mempcpy_chk@plt+0x22f4>
   132d4:	ldr	r0, [r6, #4]
   132d8:	cmp	r0, #0
   132dc:	beq	1334c <__mempcpy_chk@plt+0x22fc>
   132e0:	ldm	r0, {r1, r2}
   132e4:	stm	r6, {r1, r2}
   132e8:	mov	r1, #0
   132ec:	str	r1, [r0]
   132f0:	ldr	r1, [r5, #36]	; 0x24
   132f4:	str	r1, [r0, #4]
   132f8:	str	r0, [r5, #36]	; 0x24
   132fc:	b	13344 <__mempcpy_chk@plt+0x22f4>
   13300:	ldr	r0, [r6, #4]!
   13304:	cmp	r0, #0
   13308:	beq	13340 <__mempcpy_chk@plt+0x22f0>
   1330c:	ldr	r1, [r0]
   13310:	cmp	r1, r4
   13314:	beq	13358 <__mempcpy_chk@plt+0x2308>
   13318:	ldr	r2, [r5, #28]
   1331c:	mov	r0, r4
   13320:	blx	r2
   13324:	ldr	r1, [r6]
   13328:	cmp	r0, #0
   1332c:	bne	13360 <__mempcpy_chk@plt+0x2310>
   13330:	ldr	r0, [r1, #4]!
   13334:	mov	r6, r1
   13338:	cmp	r0, #0
   1333c:	bne	1330c <__mempcpy_chk@plt+0x22bc>
   13340:	mov	r4, #0
   13344:	mov	r0, r4
   13348:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1334c:	mov	r0, #0
   13350:	str	r0, [r6]
   13354:	b	13344 <__mempcpy_chk@plt+0x22f4>
   13358:	mov	r1, r0
   1335c:	b	13364 <__mempcpy_chk@plt+0x2314>
   13360:	ldr	r4, [r1]
   13364:	cmp	r8, #0
   13368:	beq	13344 <__mempcpy_chk@plt+0x22f4>
   1336c:	ldr	r0, [r1, #4]
   13370:	str	r0, [r6]
   13374:	mov	r0, #0
   13378:	str	r0, [r1]
   1337c:	ldr	r0, [r5, #36]	; 0x24
   13380:	str	r0, [r1, #4]
   13384:	str	r1, [r5, #36]	; 0x24
   13388:	b	13344 <__mempcpy_chk@plt+0x22f4>
   1338c:	bl	1102c <abort@plt>
   13390:	push	{r4, sl, fp, lr}
   13394:	add	fp, sp, #8
   13398:	sub	sp, sp, #8
   1339c:	add	r2, sp, #4
   133a0:	mov	r4, r1
   133a4:	bl	130d0 <__mempcpy_chk@plt+0x2080>
   133a8:	cmn	r0, #1
   133ac:	beq	133c0 <__mempcpy_chk@plt+0x2370>
   133b0:	ldr	r1, [sp, #4]
   133b4:	cmp	r0, #0
   133b8:	moveq	r4, r1
   133bc:	b	133c4 <__mempcpy_chk@plt+0x2374>
   133c0:	mov	r4, #0
   133c4:	mov	r0, r4
   133c8:	sub	sp, fp, #8
   133cc:	pop	{r4, sl, fp, pc}
   133d0:	push	{r4, r5, r6, sl, fp, lr}
   133d4:	add	fp, sp, #16
   133d8:	sub	sp, sp, #8
   133dc:	add	r2, sp, #4
   133e0:	mov	r3, #1
   133e4:	mov	r4, r0
   133e8:	bl	13260 <__mempcpy_chk@plt+0x2210>
   133ec:	mov	r5, r0
   133f0:	cmp	r0, #0
   133f4:	beq	134d4 <__mempcpy_chk@plt+0x2484>
   133f8:	ldr	r0, [r4, #16]
   133fc:	sub	r0, r0, #1
   13400:	str	r0, [r4, #16]
   13404:	ldr	r0, [sp, #4]
   13408:	ldr	r0, [r0]
   1340c:	cmp	r0, #0
   13410:	bne	134d4 <__mempcpy_chk@plt+0x2484>
   13414:	ldr	r0, [r4, #12]
   13418:	vldr	s0, [r4, #8]
   1341c:	sub	r0, r0, #1
   13420:	str	r0, [r4, #12]
   13424:	vmov	s4, r0
   13428:	ldr	r1, [r4, #20]
   1342c:	vldr	s2, [r1]
   13430:	vcvt.f32.u32	s0, s0
   13434:	vcvt.f32.u32	s4, s4
   13438:	vmul.f32	s0, s2, s0
   1343c:	vcmpe.f32	s0, s4
   13440:	vmrs	APSR_nzcv, fpscr
   13444:	ble	134d4 <__mempcpy_chk@plt+0x2484>
   13448:	mov	r0, r4
   1344c:	bl	12b18 <__mempcpy_chk@plt+0x1ac8>
   13450:	vldr	s0, [r4, #8]
   13454:	ldr	r0, [r4, #20]
   13458:	vldr	s2, [r4, #12]
   1345c:	vcvt.f32.u32	s0, s0
   13460:	vldr	s4, [r0]
   13464:	vcvt.f32.u32	s2, s2
   13468:	vmul.f32	s4, s4, s0
   1346c:	vcmpe.f32	s4, s2
   13470:	vmrs	APSR_nzcv, fpscr
   13474:	ble	134d4 <__mempcpy_chk@plt+0x2484>
   13478:	vldr	s2, [r0, #4]
   1347c:	ldrb	r1, [r0, #16]
   13480:	cmp	r1, #0
   13484:	vmul.f32	s0, s2, s0
   13488:	bne	13494 <__mempcpy_chk@plt+0x2444>
   1348c:	vldr	s2, [r0, #8]
   13490:	vmul.f32	s0, s0, s2
   13494:	vcvt.u32.f32	s0, s0
   13498:	mov	r0, r4
   1349c:	vmov	r1, s0
   134a0:	bl	12e28 <__mempcpy_chk@plt+0x1dd8>
   134a4:	cmp	r0, #0
   134a8:	bne	134d4 <__mempcpy_chk@plt+0x2484>
   134ac:	ldr	r0, [r4, #36]	; 0x24
   134b0:	cmp	r0, #0
   134b4:	beq	134cc <__mempcpy_chk@plt+0x247c>
   134b8:	ldr	r6, [r0, #4]
   134bc:	bl	1255c <__mempcpy_chk@plt+0x150c>
   134c0:	cmp	r6, #0
   134c4:	mov	r0, r6
   134c8:	bne	134b8 <__mempcpy_chk@plt+0x2468>
   134cc:	mov	r0, #0
   134d0:	str	r0, [r4, #36]	; 0x24
   134d4:	mov	r0, r5
   134d8:	sub	sp, fp, #16
   134dc:	pop	{r4, r5, r6, sl, fp, pc}
   134e0:	b	133d0 <__mempcpy_chk@plt+0x2380>
   134e4:	push	{r4, r5, fp, lr}
   134e8:	add	fp, sp, #8
   134ec:	mov	r5, r0
   134f0:	ldr	r0, [r0]
   134f4:	mov	r4, r1
   134f8:	bl	15e70 <__mempcpy_chk@plt+0x4e20>
   134fc:	ldrd	r2, [r5, #8]
   13500:	eor	r0, r2, r0
   13504:	mov	r1, r3
   13508:	mov	r2, r4
   1350c:	mov	r3, #0
   13510:	bl	16084 <__mempcpy_chk@plt+0x5034>
   13514:	mov	r0, r2
   13518:	pop	{r4, r5, fp, pc}
   1351c:	push	{r4, r5, fp, lr}
   13520:	add	fp, sp, #8
   13524:	mov	lr, r1
   13528:	mov	r2, r0
   1352c:	ldr	r3, [r2, #8]!
   13530:	ldr	ip, [lr, #8]!
   13534:	ldr	r4, [r2, #4]
   13538:	eor	ip, r3, ip
   1353c:	ldr	r3, [lr, #4]
   13540:	eor	r3, r4, r3
   13544:	orrs	r3, ip, r3
   13548:	mov	ip, #0
   1354c:	bne	1357c <__mempcpy_chk@plt+0x252c>
   13550:	ldrd	r4, [lr, #8]
   13554:	ldrd	r2, [r2, #8]
   13558:	eor	r3, r3, r5
   1355c:	eor	r2, r2, r4
   13560:	orrs	r2, r2, r3
   13564:	bne	1357c <__mempcpy_chk@plt+0x252c>
   13568:	ldr	r1, [r1]
   1356c:	ldr	r0, [r0]
   13570:	bl	10e10 <strcmp@plt>
   13574:	clz	r0, r0
   13578:	lsr	ip, r0, #5
   1357c:	mov	r0, ip
   13580:	pop	{r4, r5, fp, pc}
   13584:	push	{r4, sl, fp, lr}
   13588:	add	fp, sp, #8
   1358c:	mov	r4, r0
   13590:	ldr	r0, [r0]
   13594:	bl	1255c <__mempcpy_chk@plt+0x150c>
   13598:	mov	r0, r4
   1359c:	pop	{r4, sl, fp, lr}
   135a0:	b	1255c <__mempcpy_chk@plt+0x150c>
   135a4:	push	{r4, r5, fp, lr}
   135a8:	add	fp, sp, #8
   135ac:	cmp	r0, #0
   135b0:	beq	13644 <__mempcpy_chk@plt+0x25f4>
   135b4:	mov	r1, #47	; 0x2f
   135b8:	mov	r4, r0
   135bc:	bl	10fe4 <strrchr@plt>
   135c0:	cmp	r0, #0
   135c4:	mov	r5, r4
   135c8:	addne	r5, r0, #1
   135cc:	sub	r0, r5, r4
   135d0:	cmp	r0, #7
   135d4:	blt	13628 <__mempcpy_chk@plt+0x25d8>
   135d8:	movw	r1, #27164	; 0x6a1c
   135dc:	sub	r0, r5, #7
   135e0:	mov	r2, #7
   135e4:	movt	r1, #1
   135e8:	bl	11020 <strncmp@plt>
   135ec:	cmp	r0, #0
   135f0:	bne	13628 <__mempcpy_chk@plt+0x25d8>
   135f4:	movw	r1, #27172	; 0x6a24
   135f8:	mov	r0, r5
   135fc:	mov	r2, #3
   13600:	movt	r1, #1
   13604:	bl	11020 <strncmp@plt>
   13608:	cmp	r0, #0
   1360c:	beq	13618 <__mempcpy_chk@plt+0x25c8>
   13610:	mov	r4, r5
   13614:	b	13628 <__mempcpy_chk@plt+0x25d8>
   13618:	movw	r0, #28976	; 0x7130
   1361c:	add	r4, r5, #3
   13620:	movt	r0, #2
   13624:	str	r4, [r0]
   13628:	movw	r0, #28980	; 0x7134
   1362c:	movt	r0, #2
   13630:	str	r4, [r0]
   13634:	movw	r0, #29028	; 0x7164
   13638:	movt	r0, #2
   1363c:	str	r4, [r0]
   13640:	pop	{r4, r5, fp, pc}
   13644:	movw	r0, #28992	; 0x7140
   13648:	movt	r0, #2
   1364c:	ldr	r1, [r0]
   13650:	movw	r0, #27108	; 0x69e4
   13654:	movt	r0, #1
   13658:	bl	11014 <fputs@plt>
   1365c:	bl	1102c <abort@plt>
   13660:	push	{r4, r5, r6, sl, fp, lr}
   13664:	add	fp, sp, #16
   13668:	mov	r4, r0
   1366c:	movw	r0, #29032	; 0x7168
   13670:	movt	r0, #2
   13674:	cmp	r4, #0
   13678:	moveq	r4, r0
   1367c:	bl	10f78 <__errno_location@plt>
   13680:	ldr	r6, [r0]
   13684:	mov	r5, r0
   13688:	mov	r0, r4
   1368c:	mov	r1, #48	; 0x30
   13690:	bl	15a60 <__mempcpy_chk@plt+0x4a10>
   13694:	str	r6, [r5]
   13698:	pop	{r4, r5, r6, sl, fp, pc}
   1369c:	movw	r1, #29032	; 0x7168
   136a0:	cmp	r0, #0
   136a4:	movt	r1, #2
   136a8:	movne	r1, r0
   136ac:	ldr	r0, [r1]
   136b0:	bx	lr
   136b4:	movw	r2, #29032	; 0x7168
   136b8:	cmp	r0, #0
   136bc:	movt	r2, #2
   136c0:	movne	r2, r0
   136c4:	str	r1, [r2]
   136c8:	bx	lr
   136cc:	movw	r3, #29032	; 0x7168
   136d0:	cmp	r0, #0
   136d4:	and	r2, r2, #1
   136d8:	movt	r3, #2
   136dc:	movne	r3, r0
   136e0:	ubfx	r0, r1, #5, #3
   136e4:	and	r1, r1, #31
   136e8:	add	ip, r3, r0, lsl #2
   136ec:	mov	r0, #1
   136f0:	ldr	r3, [ip, #8]
   136f4:	and	r0, r0, r3, lsr r1
   136f8:	eor	r2, r0, r2
   136fc:	eor	r1, r3, r2, lsl r1
   13700:	str	r1, [ip, #8]
   13704:	bx	lr
   13708:	movw	r2, #29032	; 0x7168
   1370c:	cmp	r0, #0
   13710:	movt	r2, #2
   13714:	movne	r2, r0
   13718:	ldr	r0, [r2, #4]
   1371c:	str	r1, [r2, #4]
   13720:	bx	lr
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	movw	r3, #29032	; 0x7168
   13730:	cmp	r0, #0
   13734:	movt	r3, #2
   13738:	movne	r3, r0
   1373c:	cmp	r1, #0
   13740:	mov	r0, #10
   13744:	cmpne	r2, #0
   13748:	str	r0, [r3]
   1374c:	bne	13754 <__mempcpy_chk@plt+0x2704>
   13750:	bl	1102c <abort@plt>
   13754:	str	r1, [r3, #40]	; 0x28
   13758:	str	r2, [r3, #44]	; 0x2c
   1375c:	pop	{fp, pc}
   13760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13764:	add	fp, sp, #28
   13768:	sub	sp, sp, #20
   1376c:	mov	r7, r0
   13770:	ldr	r0, [fp, #8]
   13774:	movw	r5, #29032	; 0x7168
   13778:	mov	r8, r3
   1377c:	mov	r9, r2
   13780:	mov	sl, r1
   13784:	movt	r5, #2
   13788:	cmp	r0, #0
   1378c:	movne	r5, r0
   13790:	bl	10f78 <__errno_location@plt>
   13794:	ldr	r2, [r5, #40]	; 0x28
   13798:	ldr	r3, [r5, #44]	; 0x2c
   1379c:	mov	r4, r0
   137a0:	ldm	r5, {r0, r1}
   137a4:	add	r5, r5, #8
   137a8:	ldr	r6, [r4]
   137ac:	stm	sp, {r0, r1, r5}
   137b0:	mov	r0, r7
   137b4:	mov	r1, sl
   137b8:	str	r2, [sp, #12]
   137bc:	str	r3, [sp, #16]
   137c0:	mov	r2, r9
   137c4:	mov	r3, r8
   137c8:	bl	137d8 <__mempcpy_chk@plt+0x2788>
   137cc:	str	r6, [r4]
   137d0:	sub	sp, fp, #28
   137d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137dc:	add	fp, sp, #28
   137e0:	sub	sp, sp, #156	; 0x9c
   137e4:	mov	r5, r0
   137e8:	add	r0, r2, #1
   137ec:	mov	r6, r1
   137f0:	mov	sl, r3
   137f4:	str	r2, [fp, #-80]	; 0xffffffb0
   137f8:	str	r0, [sp, #72]	; 0x48
   137fc:	ldr	r0, [fp, #12]
   13800:	and	r1, r0, #1
   13804:	str	r1, [sp, #32]
   13808:	and	r1, r0, #4
   1380c:	str	r1, [sp, #28]
   13810:	ubfx	r9, r0, #1, #1
   13814:	bl	10ec4 <__ctype_get_mb_cur_max@plt>
   13818:	str	r0, [sp, #40]	; 0x28
   1381c:	ldr	r0, [fp, #24]
   13820:	ldr	r7, [fp, #8]
   13824:	mov	r1, #0
   13828:	mov	lr, #0
   1382c:	str	r5, [fp, #-84]	; 0xffffffac
   13830:	str	r1, [sp, #60]	; 0x3c
   13834:	mov	r1, #1
   13838:	str	r1, [fp, #-48]	; 0xffffffd0
   1383c:	str	r0, [sp, #80]	; 0x50
   13840:	ldr	r0, [fp, #20]
   13844:	str	r0, [sp, #76]	; 0x4c
   13848:	mov	r0, #0
   1384c:	str	r0, [sp, #56]	; 0x38
   13850:	mov	r0, #0
   13854:	str	r0, [fp, #-88]	; 0xffffffa8
   13858:	mov	r0, #0
   1385c:	str	r0, [fp, #-72]	; 0xffffffb8
   13860:	mov	r0, #0
   13864:	cmp	r7, #10
   13868:	bhi	14844 <__mempcpy_chk@plt+0x37f4>
   1386c:	add	r1, pc, #24
   13870:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13874:	mov	ip, r6
   13878:	mov	r8, #0
   1387c:	mov	r2, #1
   13880:	mov	r6, #0
   13884:	mov	r3, sl
   13888:	ldr	pc, [r1, r7, lsl #2]
   1388c:	andeq	r3, r1, r8, ror r9
   13890:	andeq	r3, r1, ip, asr #19
   13894:	andeq	r3, r1, ip, lsl #19
   13898:	andeq	r3, r1, r0, ror r9
   1389c:	andeq	r3, r1, r0, asr #19
   138a0:	strdeq	r3, [r1], -r4
   138a4:	muleq	r1, ip, r9
   138a8:	andeq	r3, r1, r8, ror sl
   138ac:			; <UNDEFINED> instruction: 0x000138b8
   138b0:			; <UNDEFINED> instruction: 0x000138b8
   138b4:	strdeq	r3, [r1], -r8
   138b8:	movw	r0, #27256	; 0x6a78
   138bc:	mov	r1, r7
   138c0:	mov	r6, r5
   138c4:	mov	r4, ip
   138c8:	mov	r5, lr
   138cc:	movt	r0, #1
   138d0:	bl	14fa8 <__mempcpy_chk@plt+0x3f58>
   138d4:	str	r0, [sp, #76]	; 0x4c
   138d8:	movw	r0, #27258	; 0x6a7a
   138dc:	mov	r1, r7
   138e0:	movt	r0, #1
   138e4:	bl	14fa8 <__mempcpy_chk@plt+0x3f58>
   138e8:	mov	lr, r5
   138ec:	mov	r5, r6
   138f0:	mov	ip, r4
   138f4:	str	r0, [sp, #80]	; 0x50
   138f8:	mov	r8, #0
   138fc:	tst	r9, #1
   13900:	str	lr, [sp, #44]	; 0x2c
   13904:	bne	1393c <__mempcpy_chk@plt+0x28ec>
   13908:	ldr	r0, [sp, #76]	; 0x4c
   1390c:	ldrb	r0, [r0]
   13910:	cmp	r0, #0
   13914:	beq	1393c <__mempcpy_chk@plt+0x28ec>
   13918:	ldr	r1, [sp, #76]	; 0x4c
   1391c:	mov	r8, #0
   13920:	add	r1, r1, #1
   13924:	cmp	r8, ip
   13928:	strbcc	r0, [r5, r8]
   1392c:	ldrb	r0, [r1, r8]
   13930:	add	r8, r8, #1
   13934:	cmp	r0, #0
   13938:	bne	13924 <__mempcpy_chk@plt+0x28d4>
   1393c:	ldr	r6, [sp, #80]	; 0x50
   13940:	mov	r4, ip
   13944:	mov	r0, r6
   13948:	bl	10f6c <strlen@plt>
   1394c:	mov	ip, r4
   13950:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13954:	ldr	lr, [sp, #44]	; 0x2c
   13958:	str	r6, [fp, #-88]	; 0xffffffa8
   1395c:	str	r0, [fp, #-72]	; 0xffffffb8
   13960:	mov	r2, #1
   13964:	mov	r6, r9
   13968:	mov	r3, sl
   1396c:	b	13a78 <__mempcpy_chk@plt+0x2a28>
   13970:	mov	r0, #1
   13974:	b	139cc <__mempcpy_chk@plt+0x297c>
   13978:	mov	r7, #0
   1397c:	mov	r8, #0
   13980:	mov	r2, r0
   13984:	mov	r6, #0
   13988:	b	13a78 <__mempcpy_chk@plt+0x2a28>
   1398c:	tst	r9, #1
   13990:	bne	139cc <__mempcpy_chk@plt+0x297c>
   13994:	mov	r2, r0
   13998:	b	13a24 <__mempcpy_chk@plt+0x29d4>
   1399c:	mov	r0, #1
   139a0:	mov	r8, #0
   139a4:	mov	r7, #5
   139a8:	mov	r2, #1
   139ac:	str	r0, [fp, #-72]	; 0xffffffb8
   139b0:	movw	r0, #27254	; 0x6a76
   139b4:	movt	r0, #1
   139b8:	str	r0, [fp, #-88]	; 0xffffffa8
   139bc:	b	139ec <__mempcpy_chk@plt+0x299c>
   139c0:	mov	r2, #1
   139c4:	tst	r9, #1
   139c8:	beq	13a24 <__mempcpy_chk@plt+0x29d4>
   139cc:	mov	r1, #1
   139d0:	mov	r8, #0
   139d4:	mov	r7, #2
   139d8:	mov	r2, r0
   139dc:	str	r1, [fp, #-72]	; 0xffffffb8
   139e0:	movw	r1, #27258	; 0x6a7a
   139e4:	movt	r1, #1
   139e8:	str	r1, [fp, #-88]	; 0xffffffa8
   139ec:	mov	r6, #1
   139f0:	b	13a78 <__mempcpy_chk@plt+0x2a28>
   139f4:	tst	r9, #1
   139f8:	beq	13a48 <__mempcpy_chk@plt+0x29f8>
   139fc:	mov	r0, #1
   13a00:	mov	r8, #0
   13a04:	mov	r2, #1
   13a08:	mov	r6, #1
   13a0c:	mov	r7, #5
   13a10:	str	r0, [fp, #-72]	; 0xffffffb8
   13a14:	movw	r0, #27254	; 0x6a76
   13a18:	movt	r0, #1
   13a1c:	str	r0, [fp, #-88]	; 0xffffffa8
   13a20:	b	13a78 <__mempcpy_chk@plt+0x2a28>
   13a24:	cmp	ip, #0
   13a28:	mov	r8, #1
   13a2c:	mov	r6, #0
   13a30:	mov	r7, #2
   13a34:	movne	r0, #39	; 0x27
   13a38:	strbne	r0, [r5]
   13a3c:	movw	r0, #27258	; 0x6a7a
   13a40:	movt	r0, #1
   13a44:	b	13a6c <__mempcpy_chk@plt+0x2a1c>
   13a48:	cmp	ip, #0
   13a4c:	mov	r8, #1
   13a50:	mov	r2, #1
   13a54:	mov	r7, #5
   13a58:	mov	r6, #0
   13a5c:	movne	r0, #34	; 0x22
   13a60:	strbne	r0, [r5]
   13a64:	movw	r0, #27254	; 0x6a76
   13a68:	movt	r0, #1
   13a6c:	str	r0, [fp, #-88]	; 0xffffffa8
   13a70:	mov	r0, #1
   13a74:	str	r0, [fp, #-72]	; 0xffffffb8
   13a78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13a7c:	str	r7, [fp, #-68]	; 0xffffffbc
   13a80:	str	r6, [fp, #-76]	; 0xffffffb4
   13a84:	str	r2, [sp, #84]	; 0x54
   13a88:	cmp	r0, #0
   13a8c:	movwne	r0, #1
   13a90:	and	r1, r0, r6
   13a94:	and	r1, r2, r1
   13a98:	str	r1, [sp, #48]	; 0x30
   13a9c:	sub	r1, r7, #2
   13aa0:	clz	r1, r1
   13aa4:	lsr	r1, r1, #5
   13aa8:	and	r1, r1, r6
   13aac:	str	r1, [sp, #64]	; 0x40
   13ab0:	subs	r1, r7, #2
   13ab4:	eor	r7, r6, #1
   13ab8:	movwne	r1, #1
   13abc:	str	r7, [sp, #92]	; 0x5c
   13ac0:	orr	r7, r1, r7
   13ac4:	and	r1, r1, r2
   13ac8:	and	r0, r0, r1
   13acc:	str	r7, [sp, #68]	; 0x44
   13ad0:	mov	r7, #0
   13ad4:	str	r0, [fp, #-60]	; 0xffffffc4
   13ad8:	orr	r0, r1, r6
   13adc:	ldr	r1, [fp, #16]
   13ae0:	eor	r0, r0, #1
   13ae4:	clz	r1, r1
   13ae8:	lsr	r1, r1, #5
   13aec:	orr	r0, r1, r0
   13af0:	str	r0, [fp, #-64]	; 0xffffffc0
   13af4:	eor	r0, r2, #1
   13af8:	str	r0, [sp, #52]	; 0x34
   13afc:	cmn	r3, #1
   13b00:	beq	13b10 <__mempcpy_chk@plt+0x2ac0>
   13b04:	cmp	r7, r3
   13b08:	bne	13b1c <__mempcpy_chk@plt+0x2acc>
   13b0c:	b	14678 <__mempcpy_chk@plt+0x3628>
   13b10:	ldrb	r0, [r4, r7]
   13b14:	cmp	r0, #0
   13b18:	beq	14680 <__mempcpy_chk@plt+0x3630>
   13b1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13b20:	cmp	r0, #0
   13b24:	beq	13b6c <__mempcpy_chk@plt+0x2b1c>
   13b28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13b2c:	add	r5, r7, r0
   13b30:	cmp	r0, #2
   13b34:	bcc	13b80 <__mempcpy_chk@plt+0x2b30>
   13b38:	mov	r0, #0
   13b3c:	cmn	r3, #1
   13b40:	str	r0, [fp, #-56]	; 0xffffffc8
   13b44:	bne	13b88 <__mempcpy_chk@plt+0x2b38>
   13b48:	mov	r0, r4
   13b4c:	mov	r4, ip
   13b50:	mov	r6, lr
   13b54:	bl	10f6c <strlen@plt>
   13b58:	mov	ip, r4
   13b5c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13b60:	mov	lr, r6
   13b64:	mov	r3, r0
   13b68:	b	13b88 <__mempcpy_chk@plt+0x2b38>
   13b6c:	mov	r0, #0
   13b70:	mov	sl, r3
   13b74:	str	r0, [fp, #-56]	; 0xffffffc8
   13b78:	mov	r0, #0
   13b7c:	b	13bf4 <__mempcpy_chk@plt+0x2ba4>
   13b80:	mov	r0, #0
   13b84:	str	r0, [fp, #-56]	; 0xffffffc8
   13b88:	cmp	r5, r3
   13b8c:	bls	13ba0 <__mempcpy_chk@plt+0x2b50>
   13b90:	ldr	r5, [fp, #-84]	; 0xffffffac
   13b94:	mov	r0, #0
   13b98:	mov	sl, r3
   13b9c:	b	13bf4 <__mempcpy_chk@plt+0x2ba4>
   13ba0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13ba4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13ba8:	add	r0, r4, r7
   13bac:	mov	r5, lr
   13bb0:	mov	r6, ip
   13bb4:	mov	sl, r3
   13bb8:	bl	10f60 <bcmp@plt>
   13bbc:	ldr	r2, [sp, #92]	; 0x5c
   13bc0:	cmp	r0, #0
   13bc4:	ldr	r3, [fp, #-84]	; 0xffffffac
   13bc8:	mov	r1, r0
   13bcc:	movwne	r1, #1
   13bd0:	orr	r1, r1, r2
   13bd4:	tst	r1, #1
   13bd8:	beq	14704 <__mempcpy_chk@plt+0x36b4>
   13bdc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13be0:	clz	r0, r0
   13be4:	mov	lr, r5
   13be8:	mov	ip, r6
   13bec:	mov	r5, r3
   13bf0:	lsr	r0, r0, #5
   13bf4:	str	r0, [fp, #-52]	; 0xffffffcc
   13bf8:	ldrb	r6, [r4, r7]
   13bfc:	cmp	r6, #126	; 0x7e
   13c00:	bhi	14128 <__mempcpy_chk@plt+0x30d8>
   13c04:	add	r3, pc, #16
   13c08:	mov	r9, #1
   13c0c:	mov	r2, #110	; 0x6e
   13c10:	mov	r0, #97	; 0x61
   13c14:	mov	r1, #0
   13c18:	ldr	pc, [r3, r6, lsl #2]
   13c1c:	andeq	r3, r1, ip, lsl #31
   13c20:	andeq	r4, r1, r8, lsr #2
   13c24:	andeq	r4, r1, r8, lsr #2
   13c28:	andeq	r4, r1, r8, lsr #2
   13c2c:	andeq	r4, r1, r8, lsr #2
   13c30:	andeq	r4, r1, r8, lsr #2
   13c34:	andeq	r4, r1, r8, lsr #2
   13c38:	andeq	r4, r1, r8, lsr #3
   13c3c:	andeq	r3, r1, ip, ror #30
   13c40:	andeq	r3, r1, r4, ror #30
   13c44:	andeq	r3, r1, r8, ror pc
   13c48:	muleq	r1, r0, r0
   13c4c:	andeq	r3, r1, ip, asr pc
   13c50:	andeq	r3, r1, r4, ror pc
   13c54:	andeq	r4, r1, r8, lsr #2
   13c58:	andeq	r4, r1, r8, lsr #2
   13c5c:	andeq	r4, r1, r8, lsr #2
   13c60:	andeq	r4, r1, r8, lsr #2
   13c64:	andeq	r4, r1, r8, lsr #2
   13c68:	andeq	r4, r1, r8, lsr #2
   13c6c:	andeq	r4, r1, r8, lsr #2
   13c70:	andeq	r4, r1, r8, lsr #2
   13c74:	andeq	r4, r1, r8, lsr #2
   13c78:	andeq	r4, r1, r8, lsr #2
   13c7c:	andeq	r4, r1, r8, lsr #2
   13c80:	andeq	r4, r1, r8, lsr #2
   13c84:	andeq	r4, r1, r8, lsr #2
   13c88:	andeq	r4, r1, r8, lsr #2
   13c8c:	andeq	r4, r1, r8, lsr #2
   13c90:	andeq	r4, r1, r8, lsr #2
   13c94:	andeq	r4, r1, r8, lsr #2
   13c98:	andeq	r4, r1, r8, lsr #2
   13c9c:	andeq	r3, r1, ip, lsl #30
   13ca0:	andeq	r3, r1, r0, lsl pc
   13ca4:	andeq	r3, r1, r0, lsl pc
   13ca8:	strdeq	r3, [r1], -r4
   13cac:	andeq	r3, r1, r0, lsl pc
   13cb0:	andeq	r3, r1, r8, lsl lr
   13cb4:	andeq	r3, r1, r0, lsl pc
   13cb8:	muleq	r1, r8, r0
   13cbc:	andeq	r3, r1, r0, lsl pc
   13cc0:	andeq	r3, r1, r0, lsl pc
   13cc4:	andeq	r3, r1, r0, lsl pc
   13cc8:	andeq	r3, r1, r8, lsl lr
   13ccc:	andeq	r3, r1, r8, lsl lr
   13cd0:	andeq	r3, r1, r8, lsl lr
   13cd4:	andeq	r3, r1, r8, lsl lr
   13cd8:	andeq	r3, r1, r8, lsl lr
   13cdc:	andeq	r3, r1, r8, lsl lr
   13ce0:	andeq	r3, r1, r8, lsl lr
   13ce4:	andeq	r3, r1, r8, lsl lr
   13ce8:	andeq	r3, r1, r8, lsl lr
   13cec:	andeq	r3, r1, r8, lsl lr
   13cf0:	andeq	r3, r1, r8, lsl lr
   13cf4:	andeq	r3, r1, r8, lsl lr
   13cf8:	andeq	r3, r1, r8, lsl lr
   13cfc:	andeq	r3, r1, r8, lsl lr
   13d00:	andeq	r3, r1, r8, lsl lr
   13d04:	andeq	r3, r1, r8, lsl lr
   13d08:	andeq	r3, r1, r0, lsl pc
   13d0c:	andeq	r3, r1, r0, lsl pc
   13d10:	andeq	r3, r1, r0, lsl pc
   13d14:	andeq	r3, r1, r0, lsl pc
   13d18:	andeq	r4, r1, r4, rrx
   13d1c:	andeq	r4, r1, r8, lsr #2
   13d20:	andeq	r3, r1, r8, lsl lr
   13d24:	andeq	r3, r1, r8, lsl lr
   13d28:	andeq	r3, r1, r8, lsl lr
   13d2c:	andeq	r3, r1, r8, lsl lr
   13d30:	andeq	r3, r1, r8, lsl lr
   13d34:	andeq	r3, r1, r8, lsl lr
   13d38:	andeq	r3, r1, r8, lsl lr
   13d3c:	andeq	r3, r1, r8, lsl lr
   13d40:	andeq	r3, r1, r8, lsl lr
   13d44:	andeq	r3, r1, r8, lsl lr
   13d48:	andeq	r3, r1, r8, lsl lr
   13d4c:	andeq	r3, r1, r8, lsl lr
   13d50:	andeq	r3, r1, r8, lsl lr
   13d54:	andeq	r3, r1, r8, lsl lr
   13d58:	andeq	r3, r1, r8, lsl lr
   13d5c:	andeq	r3, r1, r8, lsl lr
   13d60:	andeq	r3, r1, r8, lsl lr
   13d64:	andeq	r3, r1, r8, lsl lr
   13d68:	andeq	r3, r1, r8, lsl lr
   13d6c:	andeq	r3, r1, r8, lsl lr
   13d70:	andeq	r3, r1, r8, lsl lr
   13d74:	andeq	r3, r1, r8, lsl lr
   13d78:	andeq	r3, r1, r8, lsl lr
   13d7c:	andeq	r3, r1, r8, lsl lr
   13d80:	andeq	r3, r1, r8, lsl lr
   13d84:	andeq	r3, r1, r8, lsl lr
   13d88:	andeq	r3, r1, r0, lsl pc
   13d8c:	andeq	r3, r1, r8, lsr pc
   13d90:	andeq	r3, r1, r8, lsl lr
   13d94:	andeq	r3, r1, r0, lsl pc
   13d98:	andeq	r3, r1, r8, lsl lr
   13d9c:	andeq	r3, r1, r0, lsl pc
   13da0:	andeq	r3, r1, r8, lsl lr
   13da4:	andeq	r3, r1, r8, lsl lr
   13da8:	andeq	r3, r1, r8, lsl lr
   13dac:	andeq	r3, r1, r8, lsl lr
   13db0:	andeq	r3, r1, r8, lsl lr
   13db4:	andeq	r3, r1, r8, lsl lr
   13db8:	andeq	r3, r1, r8, lsl lr
   13dbc:	andeq	r3, r1, r8, lsl lr
   13dc0:	andeq	r3, r1, r8, lsl lr
   13dc4:	andeq	r3, r1, r8, lsl lr
   13dc8:	andeq	r3, r1, r8, lsl lr
   13dcc:	andeq	r3, r1, r8, lsl lr
   13dd0:	andeq	r3, r1, r8, lsl lr
   13dd4:	andeq	r3, r1, r8, lsl lr
   13dd8:	andeq	r3, r1, r8, lsl lr
   13ddc:	andeq	r3, r1, r8, lsl lr
   13de0:	andeq	r3, r1, r8, lsl lr
   13de4:	andeq	r3, r1, r8, lsl lr
   13de8:	andeq	r3, r1, r8, lsl lr
   13dec:	andeq	r3, r1, r8, lsl lr
   13df0:	andeq	r3, r1, r8, lsl lr
   13df4:	andeq	r3, r1, r8, lsl lr
   13df8:	andeq	r3, r1, r8, lsl lr
   13dfc:	andeq	r3, r1, r8, lsl lr
   13e00:	andeq	r3, r1, r8, lsl lr
   13e04:	andeq	r3, r1, r8, lsl lr
   13e08:	andeq	r3, r1, ip, asr #29
   13e0c:	andeq	r3, r1, r0, lsl pc
   13e10:	andeq	r3, r1, ip, asr #29
   13e14:	strdeq	r3, [r1], -r4
   13e18:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13e1c:	tst	r0, #1
   13e20:	bne	13e4c <__mempcpy_chk@plt+0x2dfc>
   13e24:	ldr	r1, [fp, #16]
   13e28:	ubfx	r0, r6, #5, #3
   13e2c:	mov	r2, #1
   13e30:	ldr	r0, [r1, r0, lsl #2]
   13e34:	and	r1, r6, #31
   13e38:	tst	r0, r2, lsl r1
   13e3c:	beq	13e4c <__mempcpy_chk@plt+0x2dfc>
   13e40:	mov	r0, r6
   13e44:	mov	r1, r9
   13e48:	b	13e60 <__mempcpy_chk@plt+0x2e10>
   13e4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13e50:	mov	r1, r9
   13e54:	cmp	r0, #0
   13e58:	mov	r0, r6
   13e5c:	beq	145ac <__mempcpy_chk@plt+0x355c>
   13e60:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13e64:	tst	r2, #1
   13e68:	bne	14748 <__mempcpy_chk@plt+0x36f8>
   13e6c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13e70:	subs	r2, r2, #2
   13e74:	movwne	r2, #1
   13e78:	orr	r2, r2, lr
   13e7c:	tst	r2, #1
   13e80:	bne	13eb8 <__mempcpy_chk@plt+0x2e68>
   13e84:	cmp	r8, ip
   13e88:	mov	lr, #1
   13e8c:	movcc	r2, #39	; 0x27
   13e90:	strbcc	r2, [r5, r8]
   13e94:	add	r2, r8, #1
   13e98:	cmp	r2, ip
   13e9c:	movcc	r3, #36	; 0x24
   13ea0:	strbcc	r3, [r5, r2]
   13ea4:	add	r2, r8, #2
   13ea8:	add	r8, r8, #3
   13eac:	cmp	r2, ip
   13eb0:	movcc	r3, #39	; 0x27
   13eb4:	strbcc	r3, [r5, r2]
   13eb8:	cmp	r8, ip
   13ebc:	movcc	r2, #92	; 0x5c
   13ec0:	strbcc	r2, [r5, r8]
   13ec4:	add	r8, r8, #1
   13ec8:	b	145ec <__mempcpy_chk@plt+0x359c>
   13ecc:	cmp	sl, #1
   13ed0:	beq	13ef4 <__mempcpy_chk@plt+0x2ea4>
   13ed4:	mov	r9, #0
   13ed8:	cmn	sl, #1
   13edc:	bne	13f00 <__mempcpy_chk@plt+0x2eb0>
   13ee0:	ldrb	r0, [r4, #1]
   13ee4:	cmp	r0, #0
   13ee8:	beq	13ef4 <__mempcpy_chk@plt+0x2ea4>
   13eec:	mvn	sl, #0
   13ef0:	b	13f00 <__mempcpy_chk@plt+0x2eb0>
   13ef4:	mov	r9, #0
   13ef8:	cmp	r7, #0
   13efc:	beq	13f0c <__mempcpy_chk@plt+0x2ebc>
   13f00:	mov	r0, #0
   13f04:	str	r0, [fp, #-56]	; 0xffffffc8
   13f08:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   13f0c:	mov	r1, #1
   13f10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f14:	cmp	r0, #2
   13f18:	bne	13f30 <__mempcpy_chk@plt+0x2ee0>
   13f1c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13f20:	mov	r9, r1
   13f24:	tst	r0, #1
   13f28:	beq	13e18 <__mempcpy_chk@plt+0x2dc8>
   13f2c:	b	14748 <__mempcpy_chk@plt+0x36f8>
   13f30:	mov	r9, r1
   13f34:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   13f38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f3c:	cmp	r0, #2
   13f40:	bne	14184 <__mempcpy_chk@plt+0x3134>
   13f44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13f48:	tst	r0, #1
   13f4c:	bne	14748 <__mempcpy_chk@plt+0x36f8>
   13f50:	mov	r0, #0
   13f54:	str	r0, [fp, #-56]	; 0xffffffc8
   13f58:	b	1419c <__mempcpy_chk@plt+0x314c>
   13f5c:	mov	r0, #102	; 0x66
   13f60:	b	141a8 <__mempcpy_chk@plt+0x3158>
   13f64:	mov	r2, #116	; 0x74
   13f68:	b	13f78 <__mempcpy_chk@plt+0x2f28>
   13f6c:	mov	r0, #98	; 0x62
   13f70:	b	141a8 <__mempcpy_chk@plt+0x3158>
   13f74:	mov	r2, #114	; 0x72
   13f78:	ldr	r0, [sp, #68]	; 0x44
   13f7c:	tst	r0, #1
   13f80:	mov	r0, r2
   13f84:	bne	141a8 <__mempcpy_chk@plt+0x3158>
   13f88:	b	14748 <__mempcpy_chk@plt+0x36f8>
   13f8c:	ldr	r0, [sp, #84]	; 0x54
   13f90:	tst	r0, #1
   13f94:	beq	141c8 <__mempcpy_chk@plt+0x3178>
   13f98:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13f9c:	tst	r0, #1
   13fa0:	bne	14834 <__mempcpy_chk@plt+0x37e4>
   13fa4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13fa8:	mov	r2, sl
   13fac:	subs	r0, r0, #2
   13fb0:	movwne	r0, #1
   13fb4:	orr	r0, r0, lr
   13fb8:	tst	r0, #1
   13fbc:	bne	13ff4 <__mempcpy_chk@plt+0x2fa4>
   13fc0:	cmp	r8, ip
   13fc4:	mov	lr, #1
   13fc8:	movcc	r0, #39	; 0x27
   13fcc:	strbcc	r0, [r5, r8]
   13fd0:	add	r0, r8, #1
   13fd4:	cmp	r0, ip
   13fd8:	movcc	r1, #36	; 0x24
   13fdc:	strbcc	r1, [r5, r0]
   13fe0:	add	r0, r8, #2
   13fe4:	add	r8, r8, #3
   13fe8:	cmp	r0, ip
   13fec:	movcc	r1, #39	; 0x27
   13ff0:	strbcc	r1, [r5, r0]
   13ff4:	mov	r1, #1
   13ff8:	cmp	r8, ip
   13ffc:	mov	r9, #0
   14000:	mov	r6, #48	; 0x30
   14004:	str	r1, [fp, #-56]	; 0xffffffc8
   14008:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1400c:	movcc	r0, #92	; 0x5c
   14010:	strbcc	r0, [r5, r8]
   14014:	add	r0, r8, #1
   14018:	cmp	r1, #2
   1401c:	beq	14324 <__mempcpy_chk@plt+0x32d4>
   14020:	add	r1, r7, #1
   14024:	cmp	r1, r2
   14028:	bcs	14324 <__mempcpy_chk@plt+0x32d4>
   1402c:	ldrb	r1, [r4, r1]
   14030:	sub	r1, r1, #48	; 0x30
   14034:	uxtb	r1, r1
   14038:	cmp	r1, #9
   1403c:	bhi	14324 <__mempcpy_chk@plt+0x32d4>
   14040:	cmp	r0, ip
   14044:	movcc	r1, #48	; 0x30
   14048:	strbcc	r1, [r5, r0]
   1404c:	add	r0, r8, #2
   14050:	add	r8, r8, #3
   14054:	cmp	r0, ip
   14058:	movcc	r1, #48	; 0x30
   1405c:	strbcc	r1, [r5, r0]
   14060:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   14064:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14068:	mov	r6, #63	; 0x3f
   1406c:	cmp	r0, #5
   14070:	beq	1432c <__mempcpy_chk@plt+0x32dc>
   14074:	mov	r1, #0
   14078:	cmp	r0, #2
   1407c:	str	r1, [fp, #-56]	; 0xffffffc8
   14080:	bne	143e0 <__mempcpy_chk@plt+0x3390>
   14084:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14088:	mov	r9, #0
   1408c:	b	13f24 <__mempcpy_chk@plt+0x2ed4>
   14090:	mov	r0, #118	; 0x76
   14094:	b	141a8 <__mempcpy_chk@plt+0x3158>
   14098:	mov	r0, #1
   1409c:	mov	r6, #39	; 0x27
   140a0:	str	r0, [sp, #60]	; 0x3c
   140a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   140a8:	cmp	r0, #2
   140ac:	bne	14120 <__mempcpy_chk@plt+0x30d0>
   140b0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   140b4:	tst	r0, #1
   140b8:	bne	14748 <__mempcpy_chk@plt+0x36f8>
   140bc:	ldr	r2, [sp, #56]	; 0x38
   140c0:	clz	r1, ip
   140c4:	mov	lr, #0
   140c8:	lsr	r1, r1, #5
   140cc:	cmp	r2, #0
   140d0:	mov	r0, r2
   140d4:	movwne	r0, #1
   140d8:	orrs	r0, r0, r1
   140dc:	moveq	r2, ip
   140e0:	moveq	ip, r0
   140e4:	cmp	r8, ip
   140e8:	str	r2, [sp, #56]	; 0x38
   140ec:	movcc	r0, #39	; 0x27
   140f0:	strbcc	r0, [r5, r8]
   140f4:	add	r0, r8, #1
   140f8:	cmp	r0, ip
   140fc:	movcc	r1, #92	; 0x5c
   14100:	strbcc	r1, [r5, r0]
   14104:	add	r0, r8, #2
   14108:	add	r8, r8, #3
   1410c:	cmp	r0, ip
   14110:	movcc	r1, #39	; 0x27
   14114:	strbcc	r1, [r5, r0]
   14118:	mov	r0, #0
   1411c:	str	r0, [fp, #-56]	; 0xffffffc8
   14120:	mov	r9, #1
   14124:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   14128:	ldr	r0, [sp, #40]	; 0x28
   1412c:	str	lr, [sp, #44]	; 0x2c
   14130:	str	ip, [sp, #88]	; 0x58
   14134:	cmp	r0, #1
   14138:	bne	141e8 <__mempcpy_chk@plt+0x3198>
   1413c:	str	sl, [sp, #36]	; 0x24
   14140:	bl	10f3c <__ctype_b_loc@plt>
   14144:	ldr	r0, [r0]
   14148:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1414c:	mov	r1, #1
   14150:	add	r0, r0, r6, lsl #1
   14154:	ldrb	r0, [r0, #1]
   14158:	ubfx	r9, r0, #6, #1
   1415c:	ldr	r0, [sp, #52]	; 0x34
   14160:	ldr	lr, [sp, #44]	; 0x2c
   14164:	cmp	r1, #1
   14168:	orr	r3, r9, r0
   1416c:	bhi	143e8 <__mempcpy_chk@plt+0x3398>
   14170:	tst	r3, #1
   14174:	beq	143e8 <__mempcpy_chk@plt+0x3398>
   14178:	ldr	sl, [sp, #36]	; 0x24
   1417c:	ldr	ip, [sp, #88]	; 0x58
   14180:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   14184:	ldr	r1, [sp, #48]	; 0x30
   14188:	mov	r0, #0
   1418c:	str	r0, [fp, #-56]	; 0xffffffc8
   14190:	mov	r0, #92	; 0x5c
   14194:	cmp	r1, #0
   14198:	beq	141a8 <__mempcpy_chk@plt+0x3158>
   1419c:	mov	r6, #92	; 0x5c
   141a0:	mov	r9, #0
   141a4:	b	145ac <__mempcpy_chk@plt+0x355c>
   141a8:	mov	r1, #0
   141ac:	mov	r9, #0
   141b0:	str	r1, [fp, #-56]	; 0xffffffc8
   141b4:	ldr	r1, [sp, #84]	; 0x54
   141b8:	tst	r1, #1
   141bc:	mov	r1, #0
   141c0:	beq	13e18 <__mempcpy_chk@plt+0x2dc8>
   141c4:	b	13e60 <__mempcpy_chk@plt+0x2e10>
   141c8:	ldr	r0, [sp, #32]
   141cc:	mov	r6, #0
   141d0:	mov	r9, #0
   141d4:	cmp	r0, #0
   141d8:	mov	r0, #0
   141dc:	str	r0, [fp, #-56]	; 0xffffffc8
   141e0:	beq	13e18 <__mempcpy_chk@plt+0x2dc8>
   141e4:	b	14604 <__mempcpy_chk@plt+0x35b4>
   141e8:	mov	r0, #0
   141ec:	cmn	sl, #1
   141f0:	sub	r3, fp, #40	; 0x28
   141f4:	str	r0, [fp, #-36]	; 0xffffffdc
   141f8:	str	r0, [fp, #-40]	; 0xffffffd8
   141fc:	bne	14214 <__mempcpy_chk@plt+0x31c4>
   14200:	mov	r0, r4
   14204:	bl	10f6c <strlen@plt>
   14208:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1420c:	sub	r3, fp, #40	; 0x28
   14210:	mov	sl, r0
   14214:	ldr	r0, [sp, #72]	; 0x48
   14218:	mov	r9, #1
   1421c:	mov	r1, #0
   14220:	str	sl, [sp, #36]	; 0x24
   14224:	add	r0, r0, r7
   14228:	str	r0, [sp, #20]
   1422c:	add	r0, r1, r7
   14230:	str	r1, [sp, #24]
   14234:	add	r1, r4, r0
   14238:	mov	r4, r0
   1423c:	sub	r2, sl, r0
   14240:	sub	r0, fp, #44	; 0x2c
   14244:	bl	15ee4 <__mempcpy_chk@plt+0x4e94>
   14248:	cmp	r0, #0
   1424c:	beq	14658 <__mempcpy_chk@plt+0x3608>
   14250:	cmn	r0, #1
   14254:	beq	14610 <__mempcpy_chk@plt+0x35c0>
   14258:	ldr	r2, [sp, #36]	; 0x24
   1425c:	cmn	r0, #2
   14260:	beq	14618 <__mempcpy_chk@plt+0x35c8>
   14264:	ldr	r2, [sp, #64]	; 0x40
   14268:	ldr	ip, [sp, #88]	; 0x58
   1426c:	ldr	r4, [sp, #84]	; 0x54
   14270:	ldr	lr, [fp, #-48]	; 0xffffffd0
   14274:	cmp	r0, #2
   14278:	mov	r1, #0
   1427c:	movwcc	r1, #1
   14280:	eor	r2, r2, #1
   14284:	orrs	r1, r2, r1
   14288:	bne	142d8 <__mempcpy_chk@plt+0x3288>
   1428c:	ldr	r1, [sp, #24]
   14290:	ldr	r2, [sp, #20]
   14294:	add	r1, r2, r1
   14298:	sub	r2, r0, #1
   1429c:	ldrb	r3, [r1]
   142a0:	sub	r5, r3, #94	; 0x5e
   142a4:	cmp	r5, #30
   142a8:	bhi	142c0 <__mempcpy_chk@plt+0x3270>
   142ac:	mov	r4, #1
   142b0:	mov	sl, #1073741829	; 0x40000005
   142b4:	tst	sl, r4, lsl r5
   142b8:	ldr	r4, [sp, #84]	; 0x54
   142bc:	bne	14720 <__mempcpy_chk@plt+0x36d0>
   142c0:	sub	r3, r3, #91	; 0x5b
   142c4:	cmp	r3, #2
   142c8:	bcc	14720 <__mempcpy_chk@plt+0x36d0>
   142cc:	add	r1, r1, #1
   142d0:	subs	r2, r2, #1
   142d4:	bne	1429c <__mempcpy_chk@plt+0x324c>
   142d8:	ldr	r5, [sp, #24]
   142dc:	str	lr, [fp, #-48]	; 0xffffffd0
   142e0:	add	r5, r0, r5
   142e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142e8:	bl	10ea0 <iswprint@plt>
   142ec:	cmp	r0, #0
   142f0:	sub	r4, fp, #40	; 0x28
   142f4:	movwne	r0, #1
   142f8:	and	r9, r9, r0
   142fc:	mov	r0, r4
   14300:	bl	10e64 <mbsinit@plt>
   14304:	mov	r1, r5
   14308:	mov	r3, r4
   1430c:	ldr	sl, [sp, #36]	; 0x24
   14310:	ldr	r5, [fp, #-84]	; 0xffffffac
   14314:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14318:	cmp	r0, #0
   1431c:	beq	1422c <__mempcpy_chk@plt+0x31dc>
   14320:	b	1415c <__mempcpy_chk@plt+0x310c>
   14324:	mov	r8, r0
   14328:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   1432c:	mov	r0, #0
   14330:	str	r0, [fp, #-56]	; 0xffffffc8
   14334:	ldr	r0, [sp, #28]
   14338:	cmp	r0, #0
   1433c:	beq	143e0 <__mempcpy_chk@plt+0x3390>
   14340:	add	r0, r7, #2
   14344:	mov	r1, sl
   14348:	cmp	r0, sl
   1434c:	bcs	143e0 <__mempcpy_chk@plt+0x3390>
   14350:	add	r1, r7, r4
   14354:	ldrb	r1, [r1, #1]
   14358:	cmp	r1, #63	; 0x3f
   1435c:	bne	143e0 <__mempcpy_chk@plt+0x3390>
   14360:	ldrb	r9, [r4, r0]
   14364:	sub	r2, r9, #33	; 0x21
   14368:	cmp	r2, #29
   1436c:	bhi	143e0 <__mempcpy_chk@plt+0x3390>
   14370:	mov	r1, r4
   14374:	movw	r4, #20929	; 0x51c1
   14378:	mov	r3, #1
   1437c:	movt	r4, #14336	; 0x3800
   14380:	tst	r4, r3, lsl r2
   14384:	beq	1466c <__mempcpy_chk@plt+0x361c>
   14388:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1438c:	tst	r2, #1
   14390:	bne	1483c <__mempcpy_chk@plt+0x37ec>
   14394:	cmp	r8, ip
   14398:	mov	r4, r1
   1439c:	mov	r7, r0
   143a0:	mov	r6, r9
   143a4:	movcc	r2, #63	; 0x3f
   143a8:	strbcc	r2, [r5, r8]
   143ac:	add	r2, r8, #1
   143b0:	cmp	r2, ip
   143b4:	movcc	r3, #34	; 0x22
   143b8:	strbcc	r3, [r5, r2]
   143bc:	add	r2, r8, #2
   143c0:	cmp	r2, ip
   143c4:	movcc	r3, #34	; 0x22
   143c8:	strbcc	r3, [r5, r2]
   143cc:	add	r2, r8, #3
   143d0:	add	r8, r8, #4
   143d4:	cmp	r2, ip
   143d8:	movcc	r3, #63	; 0x3f
   143dc:	strbcc	r3, [r5, r2]
   143e0:	mov	r9, #0
   143e4:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   143e8:	ldr	sl, [sp, #36]	; 0x24
   143ec:	add	r0, r1, r7
   143f0:	mov	r2, #0
   143f4:	str	r3, [sp, #24]
   143f8:	str	r0, [fp, #-56]	; 0xffffffc8
   143fc:	tst	r3, #1
   14400:	beq	1442c <__mempcpy_chk@plt+0x33dc>
   14404:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14408:	tst	r0, #1
   1440c:	beq	144f4 <__mempcpy_chk@plt+0x34a4>
   14410:	ldr	r1, [sp, #88]	; 0x58
   14414:	mov	r0, r3
   14418:	cmp	r8, r1
   1441c:	movcc	r1, #92	; 0x5c
   14420:	strbcc	r1, [r5, r8]
   14424:	add	r8, r8, #1
   14428:	b	144f8 <__mempcpy_chk@plt+0x34a8>
   1442c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14430:	tst	r1, #1
   14434:	bne	14744 <__mempcpy_chk@plt+0x36f4>
   14438:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1443c:	subs	r2, r1, #2
   14440:	movwne	r2, #1
   14444:	orr	r2, r2, lr
   14448:	tst	r2, #1
   1444c:	bne	14490 <__mempcpy_chk@plt+0x3440>
   14450:	ldr	r1, [sp, #88]	; 0x58
   14454:	add	r2, r8, #1
   14458:	mov	lr, #1
   1445c:	cmp	r8, r1
   14460:	movcc	r1, #39	; 0x27
   14464:	strbcc	r1, [r5, r8]
   14468:	ldr	r1, [sp, #88]	; 0x58
   1446c:	cmp	r2, r1
   14470:	movcc	r1, #36	; 0x24
   14474:	strbcc	r1, [r5, r2]
   14478:	ldr	r1, [sp, #88]	; 0x58
   1447c:	add	r2, r8, #2
   14480:	add	r8, r8, #3
   14484:	cmp	r2, r1
   14488:	movcc	r1, #39	; 0x27
   1448c:	strbcc	r1, [r5, r2]
   14490:	ldr	r1, [sp, #88]	; 0x58
   14494:	add	r2, r8, #1
   14498:	mov	r0, r3
   1449c:	cmp	r8, r1
   144a0:	movcc	r1, #92	; 0x5c
   144a4:	strbcc	r1, [r5, r8]
   144a8:	ldr	r1, [sp, #88]	; 0x58
   144ac:	cmp	r2, r1
   144b0:	bcs	144c4 <__mempcpy_chk@plt+0x3474>
   144b4:	uxtb	r3, r6
   144b8:	mov	r1, #48	; 0x30
   144bc:	orr	r3, r1, r3, lsr #6
   144c0:	strb	r3, [r5, r2]
   144c4:	ldr	r1, [sp, #88]	; 0x58
   144c8:	add	r2, r8, #2
   144cc:	add	r8, r8, #3
   144d0:	cmp	r2, r1
   144d4:	lsrcc	r3, r6, #3
   144d8:	movcc	r1, #6
   144dc:	bficc	r3, r1, #3, #29
   144e0:	mov	r1, #6
   144e4:	bfi	r6, r1, #3, #29
   144e8:	strbcc	r3, [r5, r2]
   144ec:	mov	r2, #1
   144f0:	b	14500 <__mempcpy_chk@plt+0x34b0>
   144f4:	mov	r0, r3
   144f8:	mov	r1, #0
   144fc:	str	r1, [fp, #-52]	; 0xffffffcc
   14500:	mov	ip, r2
   14504:	and	r1, r2, #1
   14508:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1450c:	add	r3, r7, #1
   14510:	cmp	r2, r3
   14514:	bls	1459c <__mempcpy_chk@plt+0x354c>
   14518:	cmp	r1, #0
   1451c:	mvn	r5, lr
   14520:	movwne	r1, #1
   14524:	orr	r5, r5, r1
   14528:	tst	r5, #1
   1452c:	bne	14570 <__mempcpy_chk@plt+0x3520>
   14530:	ldr	r1, [sp, #88]	; 0x58
   14534:	ldr	r5, [fp, #-84]	; 0xffffffac
   14538:	mov	r2, r4
   1453c:	ldr	r4, [sp, #88]	; 0x58
   14540:	ldr	r0, [sp, #24]
   14544:	mov	lr, #0
   14548:	cmp	r8, r1
   1454c:	movcc	r1, #39	; 0x27
   14550:	strbcc	r1, [r5, r8]
   14554:	add	r1, r8, #1
   14558:	add	r8, r8, #2
   1455c:	cmp	r1, r4
   14560:	movcc	r4, #39	; 0x27
   14564:	strbcc	r4, [r5, r1]
   14568:	mov	r4, r2
   1456c:	b	14574 <__mempcpy_chk@plt+0x3524>
   14570:	ldr	r5, [fp, #-84]	; 0xffffffac
   14574:	ldr	r1, [sp, #88]	; 0x58
   14578:	mov	r2, ip
   1457c:	cmp	r8, r1
   14580:	ldr	r1, [sp, #72]	; 0x48
   14584:	strbcc	r6, [r5, r8]
   14588:	add	r8, r8, #1
   1458c:	ldrb	r6, [r1, r7]
   14590:	mov	r7, r3
   14594:	mov	r3, r0
   14598:	b	143fc <__mempcpy_chk@plt+0x33ac>
   1459c:	ldr	ip, [sp, #88]	; 0x58
   145a0:	cmp	r1, #0
   145a4:	movwne	r1, #1
   145a8:	str	r1, [fp, #-56]	; 0xffffffc8
   145ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   145b0:	cmp	r0, #0
   145b4:	bne	145e4 <__mempcpy_chk@plt+0x3594>
   145b8:	tst	lr, #1
   145bc:	beq	145e4 <__mempcpy_chk@plt+0x3594>
   145c0:	cmp	r8, ip
   145c4:	mov	lr, #0
   145c8:	movcc	r0, #39	; 0x27
   145cc:	strbcc	r0, [r5, r8]
   145d0:	add	r0, r8, #1
   145d4:	add	r8, r8, #2
   145d8:	cmp	r0, ip
   145dc:	movcc	r1, #39	; 0x27
   145e0:	strbcc	r1, [r5, r0]
   145e4:	mov	r1, r9
   145e8:	mov	r0, r6
   145ec:	cmp	r8, ip
   145f0:	strbcc	r0, [r5, r8]
   145f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   145f8:	add	r8, r8, #1
   145fc:	and	r0, r0, r1
   14600:	str	r0, [fp, #-48]	; 0xffffffd0
   14604:	mov	r3, sl
   14608:	add	r7, r7, #1
   1460c:	b	13afc <__mempcpy_chk@plt+0x2aac>
   14610:	mov	r9, #0
   14614:	b	14658 <__mempcpy_chk@plt+0x3608>
   14618:	mov	r9, #0
   1461c:	cmp	r2, r4
   14620:	bls	14658 <__mempcpy_chk@plt+0x3608>
   14624:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14628:	ldr	r1, [sp, #24]
   1462c:	add	r0, r4, r7
   14630:	mov	r3, r1
   14634:	ldrb	r1, [r0, r1]
   14638:	cmp	r1, #0
   1463c:	beq	14664 <__mempcpy_chk@plt+0x3614>
   14640:	add	r3, r3, #1
   14644:	add	r1, r7, r3
   14648:	cmp	r1, r2
   1464c:	mov	r1, r3
   14650:	bcc	14630 <__mempcpy_chk@plt+0x35e0>
   14654:	b	1415c <__mempcpy_chk@plt+0x310c>
   14658:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1465c:	ldr	r1, [sp, #24]
   14660:	b	1415c <__mempcpy_chk@plt+0x310c>
   14664:	mov	r1, r3
   14668:	b	1415c <__mempcpy_chk@plt+0x310c>
   1466c:	mov	r9, #0
   14670:	mov	r4, r1
   14674:	b	13e18 <__mempcpy_chk@plt+0x2dc8>
   14678:	mov	sl, r7
   1467c:	b	14684 <__mempcpy_chk@plt+0x3634>
   14680:	mvn	sl, #0
   14684:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14688:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1468c:	eor	r0, r1, #2
   14690:	orr	r0, r0, r8
   14694:	clz	r0, r0
   14698:	lsr	r0, r0, #5
   1469c:	tst	r2, r0
   146a0:	bne	14748 <__mempcpy_chk@plt+0x36f8>
   146a4:	subs	r0, r1, #2
   146a8:	movwne	r0, #1
   146ac:	orr	r0, r2, r0
   146b0:	tst	r0, #1
   146b4:	ldreq	r0, [sp, #60]	; 0x3c
   146b8:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   146bc:	eoreq	r0, r0, #1
   146c0:	tsteq	r0, #1
   146c4:	bne	147dc <__mempcpy_chk@plt+0x378c>
   146c8:	tst	r1, #1
   146cc:	bne	147a8 <__mempcpy_chk@plt+0x3758>
   146d0:	ldr	r6, [sp, #56]	; 0x38
   146d4:	mov	r9, #0
   146d8:	cmp	r6, #0
   146dc:	beq	147d4 <__mempcpy_chk@plt+0x3784>
   146e0:	ldr	r0, [sp, #84]	; 0x54
   146e4:	mov	r1, #0
   146e8:	mov	r7, #2
   146ec:	cmp	ip, #0
   146f0:	str	r1, [fp, #-48]	; 0xffffffd0
   146f4:	mov	r1, #0
   146f8:	str	r1, [fp, #-76]	; 0xffffffb4
   146fc:	beq	13864 <__mempcpy_chk@plt+0x2814>
   14700:	b	147dc <__mempcpy_chk@plt+0x378c>
   14704:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14708:	ldr	r1, [fp, #12]
   1470c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14710:	mov	r5, r3
   14714:	mov	ip, r6
   14718:	mov	r3, sl
   1471c:	b	1476c <__mempcpy_chk@plt+0x371c>
   14720:	tst	r4, #1
   14724:	ldr	r5, [fp, #-84]	; 0xffffffac
   14728:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1472c:	ldr	r1, [fp, #12]
   14730:	ldr	r3, [sp, #36]	; 0x24
   14734:	mov	r0, #2
   14738:	movwne	r0, #4
   1473c:	mov	r2, r0
   14740:	b	1476c <__mempcpy_chk@plt+0x371c>
   14744:	ldr	ip, [sp, #88]	; 0x58
   14748:	ldr	r1, [sp, #84]	; 0x54
   1474c:	mov	r0, #2
   14750:	tst	r1, #1
   14754:	movwne	r0, #4
   14758:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1475c:	ldr	r1, [fp, #12]
   14760:	mov	r3, sl
   14764:	cmp	r2, #2
   14768:	moveq	r2, r0
   1476c:	mov	r0, #0
   14770:	bic	r1, r1, #2
   14774:	str	r2, [sp]
   14778:	mov	r2, r4
   1477c:	str	r0, [sp, #8]
   14780:	ldr	r0, [sp, #76]	; 0x4c
   14784:	str	r1, [sp, #4]
   14788:	mov	r1, ip
   1478c:	str	r0, [sp, #12]
   14790:	ldr	r0, [sp, #80]	; 0x50
   14794:	str	r0, [sp, #16]
   14798:	mov	r0, r5
   1479c:	bl	137d8 <__mempcpy_chk@plt+0x2788>
   147a0:	mov	r8, r0
   147a4:	b	14828 <__mempcpy_chk@plt+0x37d8>
   147a8:	mov	r0, #5
   147ac:	ldr	r1, [sp, #56]	; 0x38
   147b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   147b4:	mov	r3, sl
   147b8:	str	r0, [sp]
   147bc:	ldr	r0, [fp, #12]
   147c0:	str	r0, [sp, #4]
   147c4:	ldr	r0, [fp, #16]
   147c8:	str	r0, [sp, #8]
   147cc:	ldr	r0, [sp, #76]	; 0x4c
   147d0:	b	1478c <__mempcpy_chk@plt+0x373c>
   147d4:	mov	r0, #0
   147d8:	str	r0, [fp, #-76]	; 0xffffffb4
   147dc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   147e0:	cmp	r1, #0
   147e4:	beq	1481c <__mempcpy_chk@plt+0x37cc>
   147e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   147ec:	tst	r0, #1
   147f0:	bne	1481c <__mempcpy_chk@plt+0x37cc>
   147f4:	ldrb	r0, [r1]
   147f8:	cmp	r0, #0
   147fc:	beq	1481c <__mempcpy_chk@plt+0x37cc>
   14800:	add	r1, r1, #1
   14804:	cmp	r8, ip
   14808:	strbcc	r0, [r5, r8]
   1480c:	add	r8, r8, #1
   14810:	ldrb	r0, [r1], #1
   14814:	cmp	r0, #0
   14818:	bne	14804 <__mempcpy_chk@plt+0x37b4>
   1481c:	cmp	r8, ip
   14820:	movcc	r0, #0
   14824:	strbcc	r0, [r5, r8]
   14828:	mov	r0, r8
   1482c:	sub	sp, fp, #28
   14830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14834:	mov	r0, #4
   14838:	b	14758 <__mempcpy_chk@plt+0x3708>
   1483c:	mov	r4, r1
   14840:	b	14748 <__mempcpy_chk@plt+0x36f8>
   14844:	bl	1102c <abort@plt>
   14848:	mov	r3, r2
   1484c:	mov	r2, #0
   14850:	b	14854 <__mempcpy_chk@plt+0x3804>
   14854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14858:	add	fp, sp, #28
   1485c:	sub	sp, sp, #36	; 0x24
   14860:	movw	r8, #29032	; 0x7168
   14864:	cmp	r3, #0
   14868:	mov	r4, r2
   1486c:	str	r2, [sp, #24]
   14870:	mov	r5, r1
   14874:	mov	r6, r0
   14878:	str	r0, [sp, #20]
   1487c:	movt	r8, #2
   14880:	movne	r8, r3
   14884:	bl	10f78 <__errno_location@plt>
   14888:	str	r0, [sp, #28]
   1488c:	ldr	r1, [r8, #40]	; 0x28
   14890:	ldr	r2, [r8, #44]	; 0x2c
   14894:	ldr	r7, [r0]
   14898:	cmp	r4, #0
   1489c:	add	sl, r8, #8
   148a0:	mov	r0, #0
   148a4:	ldm	r8, {r3, r9}
   148a8:	orreq	r9, r9, #1
   148ac:	stm	sp, {r3, r9, sl}
   148b0:	str	r1, [sp, #12]
   148b4:	str	r2, [sp, #16]
   148b8:	mov	r1, #0
   148bc:	mov	r2, r6
   148c0:	mov	r3, r5
   148c4:	str	r7, [sp, #32]
   148c8:	mov	r7, r5
   148cc:	bl	137d8 <__mempcpy_chk@plt+0x2788>
   148d0:	add	r4, r0, #1
   148d4:	mov	r5, r0
   148d8:	mov	r0, r4
   148dc:	bl	15740 <__mempcpy_chk@plt+0x46f0>
   148e0:	mov	r6, r0
   148e4:	ldr	r0, [r8]
   148e8:	ldr	r2, [r8, #44]	; 0x2c
   148ec:	ldr	r1, [r8, #40]	; 0x28
   148f0:	mov	r3, r7
   148f4:	stm	sp, {r0, r9, sl}
   148f8:	str	r2, [sp, #16]
   148fc:	ldr	r2, [sp, #20]
   14900:	str	r1, [sp, #12]
   14904:	mov	r0, r6
   14908:	mov	r1, r4
   1490c:	bl	137d8 <__mempcpy_chk@plt+0x2788>
   14910:	ldr	r0, [sp, #24]
   14914:	ldr	r1, [sp, #32]
   14918:	ldr	r2, [sp, #28]
   1491c:	cmp	r0, #0
   14920:	str	r1, [r2]
   14924:	strne	r5, [r0]
   14928:	mov	r0, r6
   1492c:	sub	sp, fp, #28
   14930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14934:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14938:	add	fp, sp, #24
   1493c:	movw	r5, #28916	; 0x70f4
   14940:	movw	r8, #28912	; 0x70f0
   14944:	movt	r5, #2
   14948:	movt	r8, #2
   1494c:	ldr	r0, [r5]
   14950:	ldr	r4, [r8]
   14954:	cmp	r0, #2
   14958:	blt	14984 <__mempcpy_chk@plt+0x3934>
   1495c:	add	r7, r4, #12
   14960:	mov	r6, #0
   14964:	ldr	r0, [r7, r6, lsl #3]
   14968:	bl	1255c <__mempcpy_chk@plt+0x150c>
   1496c:	ldr	r1, [r5]
   14970:	add	r2, r6, #2
   14974:	add	r0, r6, #1
   14978:	mov	r6, r0
   1497c:	cmp	r2, r1
   14980:	blt	14964 <__mempcpy_chk@plt+0x3914>
   14984:	ldr	r0, [r4, #4]
   14988:	movw	r9, #29080	; 0x7198
   1498c:	movw	r7, #28920	; 0x70f8
   14990:	movt	r9, #2
   14994:	movt	r7, #2
   14998:	cmp	r0, r9
   1499c:	beq	149ac <__mempcpy_chk@plt+0x395c>
   149a0:	bl	1255c <__mempcpy_chk@plt+0x150c>
   149a4:	mov	r0, #256	; 0x100
   149a8:	stm	r7, {r0, r9}
   149ac:	cmp	r4, r7
   149b0:	beq	149c0 <__mempcpy_chk@plt+0x3970>
   149b4:	mov	r0, r4
   149b8:	bl	1255c <__mempcpy_chk@plt+0x150c>
   149bc:	str	r7, [r8]
   149c0:	mov	r0, #1
   149c4:	str	r0, [r5]
   149c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   149cc:	movw	r3, #29032	; 0x7168
   149d0:	mvn	r2, #0
   149d4:	movt	r3, #2
   149d8:	b	149dc <__mempcpy_chk@plt+0x398c>
   149dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149e0:	add	fp, sp, #28
   149e4:	sub	sp, sp, #44	; 0x2c
   149e8:	mov	r7, r3
   149ec:	str	r2, [sp, #36]	; 0x24
   149f0:	str	r1, [sp, #32]
   149f4:	mov	r5, r0
   149f8:	bl	10f78 <__errno_location@plt>
   149fc:	cmp	r5, #0
   14a00:	bmi	14b70 <__mempcpy_chk@plt+0x3b20>
   14a04:	cmn	r5, #-2147483647	; 0x80000001
   14a08:	beq	14b70 <__mempcpy_chk@plt+0x3b20>
   14a0c:	movw	r8, #28916	; 0x70f4
   14a10:	movw	r4, #28912	; 0x70f0
   14a14:	str	r0, [sp, #28]
   14a18:	ldr	r0, [r0]
   14a1c:	movt	r8, #2
   14a20:	movt	r4, #2
   14a24:	ldr	r1, [r8]
   14a28:	ldr	r6, [r4]
   14a2c:	str	r0, [sp, #24]
   14a30:	cmp	r1, r5
   14a34:	ble	14a40 <__mempcpy_chk@plt+0x39f0>
   14a38:	mov	sl, r6
   14a3c:	b	14aac <__mempcpy_chk@plt+0x3a5c>
   14a40:	movw	r9, #28920	; 0x70f8
   14a44:	mov	r0, #8
   14a48:	str	r1, [fp, #-32]	; 0xffffffe0
   14a4c:	sub	r1, r5, r1
   14a50:	mvn	r3, #-2147483648	; 0x80000000
   14a54:	movt	r9, #2
   14a58:	str	r0, [sp]
   14a5c:	add	r2, r1, #1
   14a60:	sub	r1, fp, #32
   14a64:	subs	r0, r6, r9
   14a68:	movne	r0, r6
   14a6c:	bl	15870 <__mempcpy_chk@plt+0x4820>
   14a70:	mov	sl, r0
   14a74:	cmp	r6, r9
   14a78:	str	r0, [r4]
   14a7c:	bne	14a88 <__mempcpy_chk@plt+0x3a38>
   14a80:	ldrd	r0, [r9]
   14a84:	stm	sl, {r0, r1}
   14a88:	ldr	r1, [r8]
   14a8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a90:	add	r0, sl, r1, lsl #3
   14a94:	sub	r1, r2, r1
   14a98:	lsl	r2, r1, #3
   14a9c:	mov	r1, #0
   14aa0:	bl	10f90 <memset@plt>
   14aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14aa8:	str	r0, [r8]
   14aac:	mov	r9, sl
   14ab0:	ldm	r7, {r0, r1}
   14ab4:	orr	r8, r1, #1
   14ab8:	add	r1, r7, #8
   14abc:	ldr	r2, [r7, #40]	; 0x28
   14ac0:	ldr	r3, [r7, #44]	; 0x2c
   14ac4:	ldr	r6, [r9, r5, lsl #3]!
   14ac8:	str	r1, [sp, #20]
   14acc:	ldr	r4, [r9, #4]!
   14ad0:	stm	sp, {r0, r8}
   14ad4:	add	r0, sp, #8
   14ad8:	stm	r0, {r1, r2, r3}
   14adc:	ldr	r2, [sp, #32]
   14ae0:	ldr	r3, [sp, #36]	; 0x24
   14ae4:	mov	r1, r6
   14ae8:	mov	r0, r4
   14aec:	bl	137d8 <__mempcpy_chk@plt+0x2788>
   14af0:	cmp	r6, r0
   14af4:	bhi	14b58 <__mempcpy_chk@plt+0x3b08>
   14af8:	add	r6, r0, #1
   14afc:	movw	r0, #29080	; 0x7198
   14b00:	movt	r0, #2
   14b04:	str	r6, [sl, r5, lsl #3]
   14b08:	cmp	r4, r0
   14b0c:	beq	14b18 <__mempcpy_chk@plt+0x3ac8>
   14b10:	mov	r0, r4
   14b14:	bl	1255c <__mempcpy_chk@plt+0x150c>
   14b18:	mov	r0, r6
   14b1c:	bl	15740 <__mempcpy_chk@plt+0x46f0>
   14b20:	str	r0, [r9]
   14b24:	mov	r4, r0
   14b28:	add	r3, sp, #8
   14b2c:	ldr	r0, [r7]
   14b30:	ldr	r1, [r7, #40]	; 0x28
   14b34:	ldr	r2, [r7, #44]	; 0x2c
   14b38:	stm	sp, {r0, r8}
   14b3c:	ldr	r0, [sp, #20]
   14b40:	stm	r3, {r0, r1, r2}
   14b44:	ldr	r2, [sp, #32]
   14b48:	ldr	r3, [sp, #36]	; 0x24
   14b4c:	mov	r0, r4
   14b50:	mov	r1, r6
   14b54:	bl	137d8 <__mempcpy_chk@plt+0x2788>
   14b58:	ldr	r0, [sp, #28]
   14b5c:	ldr	r1, [sp, #24]
   14b60:	str	r1, [r0]
   14b64:	mov	r0, r4
   14b68:	sub	sp, fp, #28
   14b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b70:	bl	1102c <abort@plt>
   14b74:	movw	r3, #29032	; 0x7168
   14b78:	movt	r3, #2
   14b7c:	b	149dc <__mempcpy_chk@plt+0x398c>
   14b80:	movw	r3, #29032	; 0x7168
   14b84:	mov	r1, r0
   14b88:	mov	r0, #0
   14b8c:	mvn	r2, #0
   14b90:	movt	r3, #2
   14b94:	b	149dc <__mempcpy_chk@plt+0x398c>
   14b98:	movw	r3, #29032	; 0x7168
   14b9c:	mov	r2, r1
   14ba0:	mov	r1, r0
   14ba4:	mov	r0, #0
   14ba8:	movt	r3, #2
   14bac:	b	149dc <__mempcpy_chk@plt+0x398c>
   14bb0:	push	{fp, lr}
   14bb4:	mov	fp, sp
   14bb8:	sub	sp, sp, #48	; 0x30
   14bbc:	vmov.i32	q8, #0	; 0x00000000
   14bc0:	mov	ip, #32
   14bc4:	mov	r3, sp
   14bc8:	mov	lr, r2
   14bcc:	cmp	r1, #10
   14bd0:	add	r2, r3, #16
   14bd4:	vst1.64	{d16-d17}, [r3], ip
   14bd8:	vst1.64	{d16-d17}, [r2]
   14bdc:	vst1.64	{d16-d17}, [r3]
   14be0:	beq	14c00 <__mempcpy_chk@plt+0x3bb0>
   14be4:	str	r1, [sp]
   14be8:	mov	r3, sp
   14bec:	mov	r1, lr
   14bf0:	mvn	r2, #0
   14bf4:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14bf8:	mov	sp, fp
   14bfc:	pop	{fp, pc}
   14c00:	bl	1102c <abort@plt>
   14c04:	push	{r4, sl, fp, lr}
   14c08:	add	fp, sp, #8
   14c0c:	sub	sp, sp, #48	; 0x30
   14c10:	vmov.i32	q8, #0	; 0x00000000
   14c14:	mov	ip, r3
   14c18:	mov	r3, sp
   14c1c:	mov	lr, #32
   14c20:	cmp	r1, #10
   14c24:	add	r4, r3, #16
   14c28:	vst1.64	{d16-d17}, [r3], lr
   14c2c:	vst1.64	{d16-d17}, [r4]
   14c30:	vst1.64	{d16-d17}, [r3]
   14c34:	beq	14c54 <__mempcpy_chk@plt+0x3c04>
   14c38:	str	r1, [sp]
   14c3c:	mov	r1, r2
   14c40:	mov	r3, sp
   14c44:	mov	r2, ip
   14c48:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14c4c:	sub	sp, fp, #8
   14c50:	pop	{r4, sl, fp, pc}
   14c54:	bl	1102c <abort@plt>
   14c58:	mov	r2, r1
   14c5c:	mov	r1, r0
   14c60:	mov	r0, #0
   14c64:	b	14bb0 <__mempcpy_chk@plt+0x3b60>
   14c68:	mov	r3, r2
   14c6c:	mov	r2, r1
   14c70:	mov	r1, r0
   14c74:	mov	r0, #0
   14c78:	b	14c04 <__mempcpy_chk@plt+0x3bb4>
   14c7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c80:	add	fp, sp, #24
   14c84:	sub	sp, sp, #48	; 0x30
   14c88:	movw	r8, #29032	; 0x7168
   14c8c:	mov	lr, r0
   14c90:	mov	r3, sp
   14c94:	mov	ip, r1
   14c98:	movt	r8, #2
   14c9c:	mov	r1, r3
   14ca0:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14ca4:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14ca8:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   14cac:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14cb0:	ubfx	r0, r2, #5, #3
   14cb4:	and	r2, r2, #31
   14cb8:	mov	r4, #1
   14cbc:	add	r0, r3, r0, lsl #2
   14cc0:	ldr	r1, [r0, #8]
   14cc4:	bic	r4, r4, r1, lsr r2
   14cc8:	eor	r1, r1, r4, lsl r2
   14ccc:	mov	r2, ip
   14cd0:	str	r1, [r0, #8]
   14cd4:	mov	r0, #0
   14cd8:	mov	r1, lr
   14cdc:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14ce0:	sub	sp, fp, #24
   14ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ce8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cec:	add	fp, sp, #24
   14cf0:	sub	sp, sp, #48	; 0x30
   14cf4:	movw	lr, #29032	; 0x7168
   14cf8:	mov	ip, r0
   14cfc:	mov	r3, sp
   14d00:	movt	lr, #2
   14d04:	mov	r2, r3
   14d08:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   14d0c:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   14d10:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   14d14:	stm	r2, {r0, r4, r5, r6, r7, r8}
   14d18:	ubfx	r0, r1, #5, #3
   14d1c:	and	r1, r1, #31
   14d20:	mov	r7, #1
   14d24:	add	r0, r3, r0, lsl #2
   14d28:	ldr	r2, [r0, #8]
   14d2c:	bic	r7, r7, r2, lsr r1
   14d30:	eor	r1, r2, r7, lsl r1
   14d34:	mvn	r2, #0
   14d38:	str	r1, [r0, #8]
   14d3c:	mov	r0, #0
   14d40:	mov	r1, ip
   14d44:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14d48:	sub	sp, fp, #24
   14d4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d50:	push	{r4, r5, r6, r7, fp, lr}
   14d54:	add	fp, sp, #16
   14d58:	sub	sp, sp, #48	; 0x30
   14d5c:	movw	lr, #29032	; 0x7168
   14d60:	mov	ip, r0
   14d64:	mov	r3, sp
   14d68:	movt	lr, #2
   14d6c:	mov	r2, r3
   14d70:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14d74:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14d78:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   14d7c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14d80:	mov	r1, ip
   14d84:	mvn	r2, #0
   14d88:	ldr	r0, [sp, #12]
   14d8c:	orr	r0, r0, #67108864	; 0x4000000
   14d90:	str	r0, [sp, #12]
   14d94:	mov	r0, #0
   14d98:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14d9c:	sub	sp, fp, #16
   14da0:	pop	{r4, r5, r6, r7, fp, pc}
   14da4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14da8:	add	fp, sp, #24
   14dac:	sub	sp, sp, #48	; 0x30
   14db0:	movw	r8, #29032	; 0x7168
   14db4:	mov	ip, r1
   14db8:	mov	lr, r0
   14dbc:	mov	r3, sp
   14dc0:	movt	r8, #2
   14dc4:	mov	r2, r3
   14dc8:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14dcc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14dd0:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14dd4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14dd8:	mov	r1, lr
   14ddc:	mov	r2, ip
   14de0:	ldr	r0, [sp, #12]
   14de4:	orr	r0, r0, #67108864	; 0x4000000
   14de8:	str	r0, [sp, #12]
   14dec:	mov	r0, #0
   14df0:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14df4:	sub	sp, fp, #24
   14df8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14dfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e00:	add	fp, sp, #24
   14e04:	sub	sp, sp, #96	; 0x60
   14e08:	vmov.i32	q8, #0	; 0x00000000
   14e0c:	mov	lr, sp
   14e10:	mov	ip, r2
   14e14:	cmp	r1, #10
   14e18:	add	r3, lr, #16
   14e1c:	mov	r2, lr
   14e20:	vst1.64	{d16-d17}, [r3]
   14e24:	mov	r3, #28
   14e28:	vst1.64	{d16-d17}, [r2], r3
   14e2c:	vst1.32	{d16-d17}, [r2]
   14e30:	beq	14e70 <__mempcpy_chk@plt+0x3e20>
   14e34:	str	r1, [sp, #48]	; 0x30
   14e38:	add	r3, sp, #48	; 0x30
   14e3c:	ldm	lr!, {r2, r4, r5, r6, r7}
   14e40:	add	r1, r3, #4
   14e44:	stmia	r1!, {r2, r4, r5, r6, r7}
   14e48:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   14e4c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14e50:	mvn	r2, #0
   14e54:	ldr	r1, [sp, #60]	; 0x3c
   14e58:	orr	r1, r1, #67108864	; 0x4000000
   14e5c:	str	r1, [sp, #60]	; 0x3c
   14e60:	mov	r1, ip
   14e64:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14e68:	sub	sp, fp, #24
   14e6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e70:	bl	1102c <abort@plt>
   14e74:	push	{fp, lr}
   14e78:	mov	fp, sp
   14e7c:	sub	sp, sp, #8
   14e80:	mvn	ip, #0
   14e84:	str	ip, [sp]
   14e88:	bl	14e94 <__mempcpy_chk@plt+0x3e44>
   14e8c:	mov	sp, fp
   14e90:	pop	{fp, pc}
   14e94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e98:	add	fp, sp, #24
   14e9c:	sub	sp, sp, #48	; 0x30
   14ea0:	movw	ip, #29032	; 0x7168
   14ea4:	mov	lr, r3
   14ea8:	mov	r3, sp
   14eac:	cmp	r1, #0
   14eb0:	movt	ip, #2
   14eb4:	cmpne	r2, #0
   14eb8:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   14ebc:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   14ec0:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14ec4:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14ec8:	mov	r3, #10
   14ecc:	str	r3, [sp]
   14ed0:	bne	14ed8 <__mempcpy_chk@plt+0x3e88>
   14ed4:	bl	1102c <abort@plt>
   14ed8:	ldr	ip, [fp, #8]
   14edc:	str	r2, [sp, #44]	; 0x2c
   14ee0:	str	r1, [sp, #40]	; 0x28
   14ee4:	mov	r3, sp
   14ee8:	mov	r1, lr
   14eec:	mov	r2, ip
   14ef0:	bl	149dc <__mempcpy_chk@plt+0x398c>
   14ef4:	sub	sp, fp, #24
   14ef8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14efc:	push	{fp, lr}
   14f00:	mov	fp, sp
   14f04:	sub	sp, sp, #8
   14f08:	mov	r3, r2
   14f0c:	mov	r2, r1
   14f10:	mov	r1, r0
   14f14:	mvn	r0, #0
   14f18:	str	r0, [sp]
   14f1c:	mov	r0, #0
   14f20:	bl	14e94 <__mempcpy_chk@plt+0x3e44>
   14f24:	mov	sp, fp
   14f28:	pop	{fp, pc}
   14f2c:	push	{fp, lr}
   14f30:	mov	fp, sp
   14f34:	sub	sp, sp, #8
   14f38:	mov	ip, r2
   14f3c:	mov	r2, r1
   14f40:	mov	r1, r0
   14f44:	str	r3, [sp]
   14f48:	mov	r0, #0
   14f4c:	mov	r3, ip
   14f50:	bl	14e94 <__mempcpy_chk@plt+0x3e44>
   14f54:	mov	sp, fp
   14f58:	pop	{fp, pc}
   14f5c:	movw	r3, #28928	; 0x7100
   14f60:	movt	r3, #2
   14f64:	b	149dc <__mempcpy_chk@plt+0x398c>
   14f68:	movw	r3, #28928	; 0x7100
   14f6c:	mov	r2, r1
   14f70:	mov	r1, r0
   14f74:	mov	r0, #0
   14f78:	movt	r3, #2
   14f7c:	b	149dc <__mempcpy_chk@plt+0x398c>
   14f80:	movw	r3, #28928	; 0x7100
   14f84:	mvn	r2, #0
   14f88:	movt	r3, #2
   14f8c:	b	149dc <__mempcpy_chk@plt+0x398c>
   14f90:	movw	r3, #28928	; 0x7100
   14f94:	mov	r1, r0
   14f98:	mov	r0, #0
   14f9c:	mvn	r2, #0
   14fa0:	movt	r3, #2
   14fa4:	b	149dc <__mempcpy_chk@plt+0x398c>
   14fa8:	push	{r4, r5, fp, lr}
   14fac:	add	fp, sp, #8
   14fb0:	mov	r5, r0
   14fb4:	mov	r4, r1
   14fb8:	mov	r0, #0
   14fbc:	mov	r2, #5
   14fc0:	mov	r1, r5
   14fc4:	bl	10e70 <dcgettext@plt>
   14fc8:	cmp	r0, r5
   14fcc:	popne	{r4, r5, fp, pc}
   14fd0:	bl	15eac <__mempcpy_chk@plt+0x4e5c>
   14fd4:	ldrb	r1, [r0]
   14fd8:	and	r1, r1, #223	; 0xdf
   14fdc:	cmp	r1, #71	; 0x47
   14fe0:	beq	15048 <__mempcpy_chk@plt+0x3ff8>
   14fe4:	cmp	r1, #85	; 0x55
   14fe8:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   14fec:	ldrb	r1, [r0, #1]
   14ff0:	and	r1, r1, #223	; 0xdf
   14ff4:	cmp	r1, #84	; 0x54
   14ff8:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   14ffc:	ldrb	r1, [r0, #2]
   15000:	and	r1, r1, #223	; 0xdf
   15004:	cmp	r1, #70	; 0x46
   15008:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   1500c:	ldrb	r1, [r0, #3]
   15010:	cmp	r1, #45	; 0x2d
   15014:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15018:	ldrb	r1, [r0, #4]
   1501c:	cmp	r1, #56	; 0x38
   15020:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15024:	ldrb	r0, [r0, #5]
   15028:	cmp	r0, #0
   1502c:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15030:	ldrb	r1, [r5]
   15034:	movw	r2, #27260	; 0x6a7c
   15038:	movw	r0, #27264	; 0x6a80
   1503c:	movt	r2, #1
   15040:	movt	r0, #1
   15044:	b	150d0 <__mempcpy_chk@plt+0x4080>
   15048:	ldrb	r1, [r0, #1]
   1504c:	and	r1, r1, #223	; 0xdf
   15050:	cmp	r1, #66	; 0x42
   15054:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15058:	ldrb	r1, [r0, #2]
   1505c:	cmp	r1, #49	; 0x31
   15060:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15064:	ldrb	r1, [r0, #3]
   15068:	cmp	r1, #56	; 0x38
   1506c:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15070:	ldrb	r1, [r0, #4]
   15074:	cmp	r1, #48	; 0x30
   15078:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   1507c:	ldrb	r1, [r0, #5]
   15080:	cmp	r1, #51	; 0x33
   15084:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15088:	ldrb	r1, [r0, #6]
   1508c:	cmp	r1, #48	; 0x30
   15090:	bne	150a0 <__mempcpy_chk@plt+0x4050>
   15094:	ldrb	r0, [r0, #7]
   15098:	cmp	r0, #0
   1509c:	beq	150bc <__mempcpy_chk@plt+0x406c>
   150a0:	movw	r1, #27254	; 0x6a76
   150a4:	movw	r0, #27258	; 0x6a7a
   150a8:	cmp	r4, #9
   150ac:	movt	r1, #1
   150b0:	movt	r0, #1
   150b4:	moveq	r0, r1
   150b8:	pop	{r4, r5, fp, pc}
   150bc:	ldrb	r1, [r5]
   150c0:	movw	r2, #27268	; 0x6a84
   150c4:	movw	r0, #27272	; 0x6a88
   150c8:	movt	r2, #1
   150cc:	movt	r0, #1
   150d0:	cmp	r1, #96	; 0x60
   150d4:	moveq	r0, r2
   150d8:	pop	{r4, r5, fp, pc}
   150dc:	push	{r4, r5, r6, sl, fp, lr}
   150e0:	add	fp, sp, #16
   150e4:	ldr	r4, [r0], #8
   150e8:	mov	r5, r1
   150ec:	cmp	r4, r0
   150f0:	beq	15110 <__mempcpy_chk@plt+0x40c0>
   150f4:	mov	r0, r4
   150f8:	mov	r1, r5
   150fc:	bl	15c04 <__mempcpy_chk@plt+0x4bb4>
   15100:	cmp	r0, #0
   15104:	mov	r6, r0
   15108:	moveq	r6, r4
   1510c:	b	15138 <__mempcpy_chk@plt+0x40e8>
   15110:	mov	r0, r5
   15114:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15118:	cmp	r0, #0
   1511c:	beq	15134 <__mempcpy_chk@plt+0x40e4>
   15120:	mov	r1, r4
   15124:	mov	r2, r5
   15128:	mov	r6, r0
   1512c:	bl	10e58 <memcpy@plt>
   15130:	b	15138 <__mempcpy_chk@plt+0x40e8>
   15134:	mov	r6, #0
   15138:	mov	r0, r6
   1513c:	pop	{r4, r5, r6, sl, fp, pc}
   15140:	push	{r4, r5, r6, sl, fp, lr}
   15144:	add	fp, sp, #16
   15148:	mov	r4, r0
   1514c:	add	r6, r0, #8
   15150:	ldrd	r0, [r0]
   15154:	lsl	r5, r1, #1
   15158:	cmp	r0, r6
   1515c:	beq	15168 <__mempcpy_chk@plt+0x4118>
   15160:	bl	1255c <__mempcpy_chk@plt+0x150c>
   15164:	ldr	r1, [r4, #4]
   15168:	cmp	r5, r1
   1516c:	bcc	15190 <__mempcpy_chk@plt+0x4140>
   15170:	mov	r0, r5
   15174:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15178:	cmp	r0, #0
   1517c:	beq	1519c <__mempcpy_chk@plt+0x414c>
   15180:	str	r0, [r4]
   15184:	mov	r0, #1
   15188:	str	r5, [r4, #4]
   1518c:	pop	{r4, r5, r6, sl, fp, pc}
   15190:	bl	10f78 <__errno_location@plt>
   15194:	mov	r1, #12
   15198:	str	r1, [r0]
   1519c:	str	r6, [r4]
   151a0:	mov	r0, #0
   151a4:	mov	r5, #1024	; 0x400
   151a8:	b	15188 <__mempcpy_chk@plt+0x4138>
   151ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151b0:	add	fp, sp, #24
   151b4:	ldrd	r8, [r0]
   151b8:	add	r7, r0, #8
   151bc:	mov	r4, r0
   151c0:	lsl	r5, r9, #1
   151c4:	cmp	r8, r7
   151c8:	beq	151f4 <__mempcpy_chk@plt+0x41a4>
   151cc:	cmp	r5, r9
   151d0:	bcc	1522c <__mempcpy_chk@plt+0x41dc>
   151d4:	mov	r0, r8
   151d8:	mov	r1, r5
   151dc:	bl	15c04 <__mempcpy_chk@plt+0x4bb4>
   151e0:	mov	r6, r0
   151e4:	cmp	r0, #0
   151e8:	bne	15214 <__mempcpy_chk@plt+0x41c4>
   151ec:	ldr	r8, [r4]
   151f0:	b	15238 <__mempcpy_chk@plt+0x41e8>
   151f4:	mov	r0, r5
   151f8:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   151fc:	cmp	r0, #0
   15200:	beq	15224 <__mempcpy_chk@plt+0x41d4>
   15204:	ldr	r2, [r4, #4]
   15208:	mov	r1, r8
   1520c:	mov	r6, r0
   15210:	bl	10e58 <memcpy@plt>
   15214:	mov	r0, #1
   15218:	str	r6, [r4]
   1521c:	str	r5, [r4, #4]
   15220:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15224:	mov	r0, #0
   15228:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1522c:	bl	10f78 <__errno_location@plt>
   15230:	mov	r1, #12
   15234:	str	r1, [r0]
   15238:	mov	r0, r8
   1523c:	bl	1255c <__mempcpy_chk@plt+0x150c>
   15240:	str	r7, [r4]
   15244:	mov	r0, #0
   15248:	mov	r5, #1024	; 0x400
   1524c:	b	1521c <__mempcpy_chk@plt+0x41cc>
   15250:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15254:	add	fp, sp, #24
   15258:	sub	sp, sp, #32
   1525c:	ldr	r6, [fp, #12]
   15260:	ldr	r7, [fp, #8]
   15264:	mov	r4, r2
   15268:	mov	r8, r0
   1526c:	cmp	r1, #0
   15270:	beq	15298 <__mempcpy_chk@plt+0x4248>
   15274:	movw	r2, #27360	; 0x6ae0
   15278:	mov	r5, r1
   1527c:	str	r3, [sp, #4]
   15280:	str	r4, [sp]
   15284:	mov	r0, r8
   15288:	mov	r1, #1
   1528c:	movt	r2, #1
   15290:	mov	r3, r5
   15294:	b	152b0 <__mempcpy_chk@plt+0x4260>
   15298:	movw	r2, #27372	; 0x6aec
   1529c:	str	r3, [sp]
   152a0:	mov	r0, r8
   152a4:	mov	r1, #1
   152a8:	mov	r3, r4
   152ac:	movt	r2, #1
   152b0:	bl	10fb4 <__fprintf_chk@plt>
   152b4:	movw	r1, #27379	; 0x6af3
   152b8:	mov	r0, #0
   152bc:	mov	r2, #5
   152c0:	movt	r1, #1
   152c4:	bl	10e70 <dcgettext@plt>
   152c8:	movw	r2, #28097	; 0x6dc1
   152cc:	mov	r3, r0
   152d0:	movw	r0, #2022	; 0x7e6
   152d4:	mov	r1, #1
   152d8:	movt	r2, #1
   152dc:	str	r0, [sp]
   152e0:	mov	r0, r8
   152e4:	bl	10fb4 <__fprintf_chk@plt>
   152e8:	movw	r4, #25383	; 0x6327
   152ec:	mov	r1, r8
   152f0:	movt	r4, #1
   152f4:	mov	r0, r4
   152f8:	bl	10df8 <fputs_unlocked@plt>
   152fc:	movw	r1, #27383	; 0x6af7
   15300:	mov	r0, #0
   15304:	mov	r2, #5
   15308:	movt	r1, #1
   1530c:	bl	10e70 <dcgettext@plt>
   15310:	movw	r3, #27554	; 0x6ba2
   15314:	mov	r2, r0
   15318:	mov	r0, r8
   1531c:	mov	r1, #1
   15320:	movt	r3, #1
   15324:	bl	10fb4 <__fprintf_chk@plt>
   15328:	mov	r0, r4
   1532c:	mov	r1, r8
   15330:	bl	10df8 <fputs_unlocked@plt>
   15334:	cmp	r6, #9
   15338:	bhi	1539c <__mempcpy_chk@plt+0x434c>
   1533c:	add	r0, pc, #0
   15340:	ldr	pc, [r0, r6, lsl #2]
   15344:	andeq	r5, r1, r4, ror r5
   15348:	andeq	r5, r1, ip, ror #6
   1534c:	andeq	r5, r1, r8, lsr #7
   15350:	ldrdeq	r5, [r1], -r0
   15354:	strdeq	r5, [r1], -r8
   15358:	andeq	r5, r1, r0, lsr #8
   1535c:	andeq	r5, r1, r8, asr #8
   15360:	andeq	r5, r1, r0, lsl #9
   15364:	andeq	r5, r1, r0, lsr #10
   15368:	andeq	r5, r1, r8, asr #9
   1536c:	movw	r1, #27588	; 0x6bc4
   15370:	mov	r0, #0
   15374:	mov	r2, #5
   15378:	movt	r1, #1
   1537c:	bl	10e70 <dcgettext@plt>
   15380:	ldr	r3, [r7]
   15384:	mov	r2, r0
   15388:	mov	r0, r8
   1538c:	mov	r1, #1
   15390:	sub	sp, fp, #24
   15394:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15398:	b	10fb4 <__fprintf_chk@plt>
   1539c:	movw	r1, #27907	; 0x6d03
   153a0:	movt	r1, #1
   153a4:	b	154d0 <__mempcpy_chk@plt+0x4480>
   153a8:	movw	r1, #27604	; 0x6bd4
   153ac:	mov	r0, #0
   153b0:	mov	r2, #5
   153b4:	movt	r1, #1
   153b8:	bl	10e70 <dcgettext@plt>
   153bc:	mov	r2, r0
   153c0:	ldr	r3, [r7]
   153c4:	ldr	r0, [r7, #4]
   153c8:	str	r0, [sp]
   153cc:	b	154bc <__mempcpy_chk@plt+0x446c>
   153d0:	movw	r1, #27627	; 0x6beb
   153d4:	mov	r0, #0
   153d8:	mov	r2, #5
   153dc:	movt	r1, #1
   153e0:	bl	10e70 <dcgettext@plt>
   153e4:	mov	r2, r0
   153e8:	ldr	r3, [r7]
   153ec:	ldmib	r7, {r0, r1}
   153f0:	stm	sp, {r0, r1}
   153f4:	b	154bc <__mempcpy_chk@plt+0x446c>
   153f8:	movw	r1, #27655	; 0x6c07
   153fc:	mov	r0, #0
   15400:	mov	r2, #5
   15404:	movt	r1, #1
   15408:	bl	10e70 <dcgettext@plt>
   1540c:	ldr	r3, [r7]
   15410:	mov	r2, r0
   15414:	ldmib	r7, {r0, r1, r7}
   15418:	stm	sp, {r0, r1, r7}
   1541c:	b	154bc <__mempcpy_chk@plt+0x446c>
   15420:	movw	r1, #27687	; 0x6c27
   15424:	mov	r0, #0
   15428:	mov	r2, #5
   1542c:	movt	r1, #1
   15430:	bl	10e70 <dcgettext@plt>
   15434:	ldr	r3, [r7]
   15438:	mov	r2, r0
   1543c:	ldmib	r7, {r0, r1, r6, r7}
   15440:	stm	sp, {r0, r1, r6, r7}
   15444:	b	154bc <__mempcpy_chk@plt+0x446c>
   15448:	movw	r1, #27723	; 0x6c4b
   1544c:	mov	r0, #0
   15450:	mov	r2, #5
   15454:	movt	r1, #1
   15458:	bl	10e70 <dcgettext@plt>
   1545c:	mov	r2, r0
   15460:	ldr	r3, [r7]
   15464:	ldmib	r7, {r0, r1, r6}
   15468:	ldr	r5, [r7, #16]
   1546c:	ldr	r7, [r7, #20]
   15470:	stm	sp, {r0, r1, r6}
   15474:	str	r5, [sp, #12]
   15478:	str	r7, [sp, #16]
   1547c:	b	154bc <__mempcpy_chk@plt+0x446c>
   15480:	movw	r1, #27763	; 0x6c73
   15484:	mov	r0, #0
   15488:	mov	r2, #5
   1548c:	movt	r1, #1
   15490:	bl	10e70 <dcgettext@plt>
   15494:	mov	r2, r0
   15498:	ldr	r3, [r7]
   1549c:	ldmib	r7, {r0, r1, r6}
   154a0:	ldr	r5, [r7, #16]
   154a4:	ldr	r4, [r7, #20]
   154a8:	ldr	r7, [r7, #24]
   154ac:	stm	sp, {r0, r1, r6}
   154b0:	str	r5, [sp, #12]
   154b4:	str	r4, [sp, #16]
   154b8:	str	r7, [sp, #20]
   154bc:	mov	r0, r8
   154c0:	mov	r1, #1
   154c4:	b	15570 <__mempcpy_chk@plt+0x4520>
   154c8:	movw	r1, #27855	; 0x6ccf
   154cc:	movt	r1, #1
   154d0:	mov	r0, #0
   154d4:	mov	r2, #5
   154d8:	bl	10e70 <dcgettext@plt>
   154dc:	mov	ip, r0
   154e0:	ldr	r3, [r7]
   154e4:	ldr	r0, [r7, #4]
   154e8:	ldr	r1, [r7, #8]
   154ec:	ldr	r6, [r7, #12]
   154f0:	ldr	r5, [r7, #16]
   154f4:	ldr	r4, [r7, #20]
   154f8:	ldr	r2, [r7, #24]
   154fc:	ldr	lr, [r7, #28]
   15500:	ldr	r7, [r7, #32]
   15504:	stm	sp, {r0, r1, r6}
   15508:	str	r5, [sp, #12]
   1550c:	str	r4, [sp, #16]
   15510:	str	r2, [sp, #20]
   15514:	str	lr, [sp, #24]
   15518:	str	r7, [sp, #28]
   1551c:	b	15564 <__mempcpy_chk@plt+0x4514>
   15520:	movw	r1, #27807	; 0x6c9f
   15524:	mov	r0, #0
   15528:	mov	r2, #5
   1552c:	movt	r1, #1
   15530:	bl	10e70 <dcgettext@plt>
   15534:	mov	ip, r0
   15538:	ldr	r3, [r7]
   1553c:	ldmib	r7, {r0, r1, r6}
   15540:	ldr	r5, [r7, #16]
   15544:	ldr	r4, [r7, #20]
   15548:	ldr	r2, [r7, #24]
   1554c:	ldr	r7, [r7, #28]
   15550:	stm	sp, {r0, r1, r6}
   15554:	str	r5, [sp, #12]
   15558:	str	r4, [sp, #16]
   1555c:	str	r2, [sp, #20]
   15560:	str	r7, [sp, #24]
   15564:	mov	r0, r8
   15568:	mov	r1, #1
   1556c:	mov	r2, ip
   15570:	bl	10fb4 <__fprintf_chk@plt>
   15574:	sub	sp, fp, #24
   15578:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1557c:	push	{r4, sl, fp, lr}
   15580:	add	fp, sp, #8
   15584:	sub	sp, sp, #8
   15588:	ldr	ip, [fp, #8]
   1558c:	mov	lr, #0
   15590:	ldr	r4, [ip, lr, lsl #2]
   15594:	add	lr, lr, #1
   15598:	cmp	r4, #0
   1559c:	bne	15590 <__mempcpy_chk@plt+0x4540>
   155a0:	sub	r4, lr, #1
   155a4:	str	ip, [sp]
   155a8:	str	r4, [sp, #4]
   155ac:	bl	15250 <__mempcpy_chk@plt+0x4200>
   155b0:	sub	sp, fp, #8
   155b4:	pop	{r4, sl, fp, pc}
   155b8:	push	{r4, r5, fp, lr}
   155bc:	add	fp, sp, #8
   155c0:	sub	sp, sp, #48	; 0x30
   155c4:	ldr	r4, [fp, #8]
   155c8:	mov	ip, #0
   155cc:	add	lr, sp, #8
   155d0:	ldr	r5, [r4]
   155d4:	cmp	r5, #0
   155d8:	str	r5, [lr, ip, lsl #2]
   155dc:	beq	155f4 <__mempcpy_chk@plt+0x45a4>
   155e0:	add	ip, ip, #1
   155e4:	add	r4, r4, #4
   155e8:	cmp	ip, #10
   155ec:	bne	155d0 <__mempcpy_chk@plt+0x4580>
   155f0:	mov	ip, #10
   155f4:	str	lr, [sp]
   155f8:	str	ip, [sp, #4]
   155fc:	bl	15250 <__mempcpy_chk@plt+0x4200>
   15600:	sub	sp, fp, #8
   15604:	pop	{r4, r5, fp, pc}
   15608:	push	{fp, lr}
   1560c:	mov	fp, sp
   15610:	sub	sp, sp, #8
   15614:	add	ip, fp, #8
   15618:	str	ip, [sp, #4]
   1561c:	str	ip, [sp]
   15620:	bl	155b8 <__mempcpy_chk@plt+0x4568>
   15624:	mov	sp, fp
   15628:	pop	{fp, pc}
   1562c:	push	{fp, lr}
   15630:	mov	fp, sp
   15634:	movw	r0, #28996	; 0x7144
   15638:	movt	r0, #2
   1563c:	ldr	r1, [r0]
   15640:	movw	r0, #25383	; 0x6327
   15644:	movt	r0, #1
   15648:	bl	10df8 <fputs_unlocked@plt>
   1564c:	movw	r1, #27967	; 0x6d3f
   15650:	mov	r0, #0
   15654:	mov	r2, #5
   15658:	movt	r1, #1
   1565c:	bl	10e70 <dcgettext@plt>
   15660:	movw	r2, #27987	; 0x6d53
   15664:	mov	r1, r0
   15668:	mov	r0, #1
   1566c:	movt	r2, #1
   15670:	bl	10f9c <__printf_chk@plt>
   15674:	movw	r1, #28009	; 0x6d69
   15678:	mov	r0, #0
   1567c:	mov	r2, #5
   15680:	movt	r1, #1
   15684:	bl	10e70 <dcgettext@plt>
   15688:	movw	r2, #26151	; 0x6627
   1568c:	movw	r3, #26313	; 0x66c9
   15690:	mov	r1, r0
   15694:	mov	r0, #1
   15698:	movt	r2, #1
   1569c:	movt	r3, #1
   156a0:	bl	10f9c <__printf_chk@plt>
   156a4:	movw	r1, #28029	; 0x6d7d
   156a8:	mov	r0, #0
   156ac:	mov	r2, #5
   156b0:	movt	r1, #1
   156b4:	bl	10e70 <dcgettext@plt>
   156b8:	movw	r2, #28068	; 0x6da4
   156bc:	mov	r1, r0
   156c0:	mov	r0, #1
   156c4:	movt	r2, #1
   156c8:	pop	{fp, lr}
   156cc:	b	10f9c <__printf_chk@plt>
   156d0:	b	156d4 <__mempcpy_chk@plt+0x4684>
   156d4:	push	{r4, r5, r6, sl, fp, lr}
   156d8:	add	fp, sp, #16
   156dc:	mov	r4, r2
   156e0:	mov	r5, r1
   156e4:	mov	r6, r0
   156e8:	bl	15f48 <__mempcpy_chk@plt+0x4ef8>
   156ec:	cmp	r0, #0
   156f0:	popne	{r4, r5, r6, sl, fp, pc}
   156f4:	cmp	r6, #0
   156f8:	beq	1570c <__mempcpy_chk@plt+0x46bc>
   156fc:	cmp	r5, #0
   15700:	cmpne	r4, #0
   15704:	bne	1570c <__mempcpy_chk@plt+0x46bc>
   15708:	pop	{r4, r5, r6, sl, fp, pc}
   1570c:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15710:	push	{fp, lr}
   15714:	mov	fp, sp
   15718:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   1571c:	cmp	r0, #0
   15720:	popne	{fp, pc}
   15724:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15728:	push	{fp, lr}
   1572c:	mov	fp, sp
   15730:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15734:	cmp	r0, #0
   15738:	popne	{fp, pc}
   1573c:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15740:	push	{fp, lr}
   15744:	mov	fp, sp
   15748:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   1574c:	cmp	r0, #0
   15750:	popne	{fp, pc}
   15754:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15758:	push	{r4, r5, fp, lr}
   1575c:	add	fp, sp, #8
   15760:	mov	r4, r1
   15764:	mov	r5, r0
   15768:	bl	15c04 <__mempcpy_chk@plt+0x4bb4>
   1576c:	cmp	r0, #0
   15770:	popne	{r4, r5, fp, pc}
   15774:	cmp	r5, #0
   15778:	beq	15788 <__mempcpy_chk@plt+0x4738>
   1577c:	cmp	r4, #0
   15780:	bne	15788 <__mempcpy_chk@plt+0x4738>
   15784:	pop	{r4, r5, fp, pc}
   15788:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   1578c:	push	{fp, lr}
   15790:	mov	fp, sp
   15794:	cmp	r1, #0
   15798:	orreq	r1, r1, #1
   1579c:	bl	15c04 <__mempcpy_chk@plt+0x4bb4>
   157a0:	cmp	r0, #0
   157a4:	popne	{fp, pc}
   157a8:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   157ac:	push	{fp, lr}
   157b0:	mov	fp, sp
   157b4:	clz	r3, r2
   157b8:	lsr	ip, r3, #5
   157bc:	clz	r3, r1
   157c0:	lsr	r3, r3, #5
   157c4:	orrs	r3, r3, ip
   157c8:	movwne	r1, #1
   157cc:	movwne	r2, #1
   157d0:	bl	15f48 <__mempcpy_chk@plt+0x4ef8>
   157d4:	cmp	r0, #0
   157d8:	popne	{fp, pc}
   157dc:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   157e0:	push	{fp, lr}
   157e4:	mov	fp, sp
   157e8:	mov	r2, r1
   157ec:	mov	r1, r0
   157f0:	mov	r0, #0
   157f4:	bl	15f48 <__mempcpy_chk@plt+0x4ef8>
   157f8:	cmp	r0, #0
   157fc:	popne	{fp, pc}
   15800:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15804:	mov	r2, r1
   15808:	mov	r1, r0
   1580c:	mov	r0, #0
   15810:	b	157ac <__mempcpy_chk@plt+0x475c>
   15814:	mov	r2, #1
   15818:	b	1581c <__mempcpy_chk@plt+0x47cc>
   1581c:	push	{r4, r5, fp, lr}
   15820:	add	fp, sp, #8
   15824:	ldr	r5, [r1]
   15828:	mov	r4, r1
   1582c:	cmp	r0, #0
   15830:	beq	15848 <__mempcpy_chk@plt+0x47f8>
   15834:	mov	r1, #1
   15838:	add	r1, r1, r5, lsr #1
   1583c:	adds	r5, r5, r1
   15840:	bcc	15860 <__mempcpy_chk@plt+0x4810>
   15844:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15848:	cmp	r5, #0
   1584c:	bne	15860 <__mempcpy_chk@plt+0x4810>
   15850:	mov	r1, #64	; 0x40
   15854:	cmp	r2, #64	; 0x40
   15858:	udiv	r5, r1, r2
   1585c:	addhi	r5, r5, #1
   15860:	mov	r1, r5
   15864:	bl	156d4 <__mempcpy_chk@plt+0x4684>
   15868:	str	r5, [r4]
   1586c:	pop	{r4, r5, fp, pc}
   15870:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15874:	add	fp, sp, #24
   15878:	ldr	r6, [r1]
   1587c:	mov	r8, r1
   15880:	ldr	r4, [fp, #8]
   15884:	add	r1, r6, r6, asr #1
   15888:	cmp	r1, r6
   1588c:	mvnvs	r1, #-2147483648	; 0x80000000
   15890:	cmp	r1, r3
   15894:	mov	r5, r1
   15898:	movgt	r5, r3
   1589c:	cmn	r3, #1
   158a0:	movle	r5, r1
   158a4:	cmn	r4, #1
   158a8:	ble	158c8 <__mempcpy_chk@plt+0x4878>
   158ac:	cmp	r4, #0
   158b0:	beq	1591c <__mempcpy_chk@plt+0x48cc>
   158b4:	cmn	r5, #1
   158b8:	ble	158f0 <__mempcpy_chk@plt+0x48a0>
   158bc:	mvn	r7, #-2147483648	; 0x80000000
   158c0:	udiv	r1, r7, r4
   158c4:	b	158e4 <__mempcpy_chk@plt+0x4894>
   158c8:	cmn	r5, #1
   158cc:	ble	1590c <__mempcpy_chk@plt+0x48bc>
   158d0:	cmn	r4, #1
   158d4:	beq	1591c <__mempcpy_chk@plt+0x48cc>
   158d8:	mov	r1, #-2147483648	; 0x80000000
   158dc:	mvn	r7, #-2147483648	; 0x80000000
   158e0:	sdiv	r1, r1, r4
   158e4:	cmp	r1, r5
   158e8:	bge	1591c <__mempcpy_chk@plt+0x48cc>
   158ec:	b	1592c <__mempcpy_chk@plt+0x48dc>
   158f0:	beq	1591c <__mempcpy_chk@plt+0x48cc>
   158f4:	mov	r1, #-2147483648	; 0x80000000
   158f8:	mvn	r7, #-2147483648	; 0x80000000
   158fc:	sdiv	r1, r1, r5
   15900:	cmp	r1, r4
   15904:	bge	1591c <__mempcpy_chk@plt+0x48cc>
   15908:	b	1592c <__mempcpy_chk@plt+0x48dc>
   1590c:	mvn	r7, #-2147483648	; 0x80000000
   15910:	sdiv	r1, r7, r4
   15914:	cmp	r5, r1
   15918:	blt	1592c <__mempcpy_chk@plt+0x48dc>
   1591c:	mul	r1, r5, r4
   15920:	mov	r7, #64	; 0x40
   15924:	cmp	r1, #63	; 0x3f
   15928:	bgt	15934 <__mempcpy_chk@plt+0x48e4>
   1592c:	sdiv	r5, r7, r4
   15930:	mul	r1, r5, r4
   15934:	cmp	r0, #0
   15938:	moveq	r7, #0
   1593c:	streq	r7, [r8]
   15940:	sub	r7, r5, r6
   15944:	cmp	r7, r2
   15948:	bge	159ec <__mempcpy_chk@plt+0x499c>
   1594c:	add	r5, r6, r2
   15950:	mov	r2, #0
   15954:	mov	r1, #0
   15958:	cmp	r5, r3
   1595c:	movwgt	r2, #1
   15960:	cmn	r3, #1
   15964:	movwgt	r1, #1
   15968:	cmp	r5, r6
   1596c:	bvs	159d4 <__mempcpy_chk@plt+0x4984>
   15970:	ands	r1, r1, r2
   15974:	bne	159d4 <__mempcpy_chk@plt+0x4984>
   15978:	cmn	r4, #1
   1597c:	ble	1599c <__mempcpy_chk@plt+0x494c>
   15980:	cmp	r4, #0
   15984:	beq	159e8 <__mempcpy_chk@plt+0x4998>
   15988:	cmn	r5, #1
   1598c:	ble	159c0 <__mempcpy_chk@plt+0x4970>
   15990:	mvn	r1, #-2147483648	; 0x80000000
   15994:	udiv	r1, r1, r4
   15998:	b	159b4 <__mempcpy_chk@plt+0x4964>
   1599c:	cmn	r5, #1
   159a0:	ble	159d8 <__mempcpy_chk@plt+0x4988>
   159a4:	cmn	r4, #1
   159a8:	beq	159e8 <__mempcpy_chk@plt+0x4998>
   159ac:	mov	r1, #-2147483648	; 0x80000000
   159b0:	sdiv	r1, r1, r4
   159b4:	cmp	r1, r5
   159b8:	bge	159e8 <__mempcpy_chk@plt+0x4998>
   159bc:	b	159d4 <__mempcpy_chk@plt+0x4984>
   159c0:	beq	159e8 <__mempcpy_chk@plt+0x4998>
   159c4:	mov	r1, #-2147483648	; 0x80000000
   159c8:	sdiv	r1, r1, r5
   159cc:	cmp	r1, r4
   159d0:	bge	159e8 <__mempcpy_chk@plt+0x4998>
   159d4:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   159d8:	mvn	r1, #-2147483648	; 0x80000000
   159dc:	sdiv	r1, r1, r4
   159e0:	cmp	r5, r1
   159e4:	blt	159d4 <__mempcpy_chk@plt+0x4984>
   159e8:	mul	r1, r5, r4
   159ec:	bl	15758 <__mempcpy_chk@plt+0x4708>
   159f0:	str	r5, [r8]
   159f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159f8:	push	{fp, lr}
   159fc:	mov	fp, sp
   15a00:	mov	r1, #1
   15a04:	bl	15b80 <__mempcpy_chk@plt+0x4b30>
   15a08:	cmp	r0, #0
   15a0c:	popne	{fp, pc}
   15a10:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15a14:	push	{fp, lr}
   15a18:	mov	fp, sp
   15a1c:	bl	15b80 <__mempcpy_chk@plt+0x4b30>
   15a20:	cmp	r0, #0
   15a24:	popne	{fp, pc}
   15a28:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15a2c:	push	{fp, lr}
   15a30:	mov	fp, sp
   15a34:	mov	r1, #1
   15a38:	bl	15b80 <__mempcpy_chk@plt+0x4b30>
   15a3c:	cmp	r0, #0
   15a40:	popne	{fp, pc}
   15a44:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15a48:	push	{fp, lr}
   15a4c:	mov	fp, sp
   15a50:	bl	15b80 <__mempcpy_chk@plt+0x4b30>
   15a54:	cmp	r0, #0
   15a58:	popne	{fp, pc}
   15a5c:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15a60:	push	{r4, r5, fp, lr}
   15a64:	add	fp, sp, #8
   15a68:	mov	r5, r0
   15a6c:	mov	r0, r1
   15a70:	mov	r4, r1
   15a74:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15a78:	cmp	r0, #0
   15a7c:	beq	15a90 <__mempcpy_chk@plt+0x4a40>
   15a80:	mov	r1, r5
   15a84:	mov	r2, r4
   15a88:	pop	{r4, r5, fp, lr}
   15a8c:	b	10e58 <memcpy@plt>
   15a90:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15a94:	push	{r4, r5, fp, lr}
   15a98:	add	fp, sp, #8
   15a9c:	mov	r5, r0
   15aa0:	mov	r0, r1
   15aa4:	mov	r4, r1
   15aa8:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15aac:	cmp	r0, #0
   15ab0:	beq	15ac4 <__mempcpy_chk@plt+0x4a74>
   15ab4:	mov	r1, r5
   15ab8:	mov	r2, r4
   15abc:	pop	{r4, r5, fp, lr}
   15ac0:	b	10e58 <memcpy@plt>
   15ac4:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15ac8:	push	{r4, r5, fp, lr}
   15acc:	add	fp, sp, #8
   15ad0:	mov	r5, r0
   15ad4:	add	r0, r1, #1
   15ad8:	mov	r4, r1
   15adc:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15ae0:	cmp	r0, #0
   15ae4:	beq	15b00 <__mempcpy_chk@plt+0x4ab0>
   15ae8:	mov	r1, #0
   15aec:	mov	r2, r4
   15af0:	strb	r1, [r0, r4]
   15af4:	mov	r1, r5
   15af8:	pop	{r4, r5, fp, lr}
   15afc:	b	10e58 <memcpy@plt>
   15b00:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15b04:	push	{r4, r5, fp, lr}
   15b08:	add	fp, sp, #8
   15b0c:	mov	r4, r0
   15b10:	bl	10f6c <strlen@plt>
   15b14:	add	r5, r0, #1
   15b18:	mov	r0, r5
   15b1c:	bl	15bd4 <__mempcpy_chk@plt+0x4b84>
   15b20:	cmp	r0, #0
   15b24:	beq	15b38 <__mempcpy_chk@plt+0x4ae8>
   15b28:	mov	r1, r4
   15b2c:	mov	r2, r5
   15b30:	pop	{r4, r5, fp, lr}
   15b34:	b	10e58 <memcpy@plt>
   15b38:	bl	15b3c <__mempcpy_chk@plt+0x4aec>
   15b3c:	push	{fp, lr}
   15b40:	mov	fp, sp
   15b44:	movw	r0, #28908	; 0x70ec
   15b48:	movw	r1, #28144	; 0x6df0
   15b4c:	mov	r2, #5
   15b50:	movt	r0, #2
   15b54:	movt	r1, #1
   15b58:	ldr	r4, [r0]
   15b5c:	mov	r0, #0
   15b60:	bl	10e70 <dcgettext@plt>
   15b64:	movw	r2, #26980	; 0x6964
   15b68:	mov	r3, r0
   15b6c:	mov	r0, r4
   15b70:	mov	r1, #0
   15b74:	movt	r2, #1
   15b78:	bl	10ef4 <error@plt>
   15b7c:	bl	1102c <abort@plt>
   15b80:	clz	r2, r1
   15b84:	clz	r3, r0
   15b88:	lsr	r2, r2, #5
   15b8c:	lsr	r3, r3, #5
   15b90:	orrs	r2, r3, r2
   15b94:	movwne	r1, #1
   15b98:	movwne	r0, #1
   15b9c:	cmp	r1, #0
   15ba0:	beq	15bd0 <__mempcpy_chk@plt+0x4b80>
   15ba4:	mvn	r2, #-2147483648	; 0x80000000
   15ba8:	udiv	r2, r2, r1
   15bac:	cmp	r2, r0
   15bb0:	bcs	15bd0 <__mempcpy_chk@plt+0x4b80>
   15bb4:	push	{fp, lr}
   15bb8:	mov	fp, sp
   15bbc:	bl	10f78 <__errno_location@plt>
   15bc0:	mov	r1, #12
   15bc4:	str	r1, [r0]
   15bc8:	mov	r0, #0
   15bcc:	pop	{fp, pc}
   15bd0:	b	10dec <calloc@plt>
   15bd4:	cmp	r0, #0
   15bd8:	movweq	r0, #1
   15bdc:	cmn	r0, #1
   15be0:	ble	15be8 <__mempcpy_chk@plt+0x4b98>
   15be4:	b	10f00 <malloc@plt>
   15be8:	push	{fp, lr}
   15bec:	mov	fp, sp
   15bf0:	bl	10f78 <__errno_location@plt>
   15bf4:	mov	r1, #12
   15bf8:	str	r1, [r0]
   15bfc:	mov	r0, #0
   15c00:	pop	{fp, pc}
   15c04:	push	{fp, lr}
   15c08:	mov	fp, sp
   15c0c:	cmp	r0, #0
   15c10:	beq	15c2c <__mempcpy_chk@plt+0x4bdc>
   15c14:	cmp	r1, #0
   15c18:	beq	15c38 <__mempcpy_chk@plt+0x4be8>
   15c1c:	cmn	r1, #1
   15c20:	ble	15c40 <__mempcpy_chk@plt+0x4bf0>
   15c24:	pop	{fp, lr}
   15c28:	b	10e7c <realloc@plt>
   15c2c:	mov	r0, r1
   15c30:	pop	{fp, lr}
   15c34:	b	15bd4 <__mempcpy_chk@plt+0x4b84>
   15c38:	bl	1255c <__mempcpy_chk@plt+0x150c>
   15c3c:	b	15c4c <__mempcpy_chk@plt+0x4bfc>
   15c40:	bl	10f78 <__errno_location@plt>
   15c44:	mov	r1, #12
   15c48:	str	r1, [r0]
   15c4c:	mov	r0, #0
   15c50:	pop	{fp, pc}
   15c54:	push	{r4, r5, r6, sl, fp, lr}
   15c58:	add	fp, sp, #16
   15c5c:	mov	r4, r0
   15c60:	bl	10ed0 <__fpending@plt>
   15c64:	mov	r5, r0
   15c68:	mov	r0, r4
   15c6c:	bl	10edc <ferror_unlocked@plt>
   15c70:	mov	r6, r0
   15c74:	mov	r0, r4
   15c78:	bl	15cd4 <__mempcpy_chk@plt+0x4c84>
   15c7c:	cmp	r6, #0
   15c80:	beq	15ca0 <__mempcpy_chk@plt+0x4c50>
   15c84:	mvn	r4, #0
   15c88:	cmp	r0, #0
   15c8c:	bne	15ccc <__mempcpy_chk@plt+0x4c7c>
   15c90:	bl	10f78 <__errno_location@plt>
   15c94:	mov	r1, #0
   15c98:	str	r1, [r0]
   15c9c:	b	15ccc <__mempcpy_chk@plt+0x4c7c>
   15ca0:	cmp	r0, #0
   15ca4:	mov	r4, r0
   15ca8:	mvnne	r4, #0
   15cac:	cmp	r5, #0
   15cb0:	bne	15ccc <__mempcpy_chk@plt+0x4c7c>
   15cb4:	cmp	r0, #0
   15cb8:	beq	15ccc <__mempcpy_chk@plt+0x4c7c>
   15cbc:	bl	10f78 <__errno_location@plt>
   15cc0:	ldr	r0, [r0]
   15cc4:	subs	r4, r0, #9
   15cc8:	mvnne	r4, #0
   15ccc:	mov	r0, r4
   15cd0:	pop	{r4, r5, r6, sl, fp, pc}
   15cd4:	push	{r4, r5, r6, sl, fp, lr}
   15cd8:	add	fp, sp, #16
   15cdc:	sub	sp, sp, #8
   15ce0:	mov	r4, r0
   15ce4:	bl	10fa8 <fileno@plt>
   15ce8:	cmn	r0, #1
   15cec:	ble	15d60 <__mempcpy_chk@plt+0x4d10>
   15cf0:	mov	r0, r4
   15cf4:	bl	10f18 <__freading@plt>
   15cf8:	cmp	r0, #0
   15cfc:	beq	15d28 <__mempcpy_chk@plt+0x4cd8>
   15d00:	mov	r0, r4
   15d04:	bl	10fa8 <fileno@plt>
   15d08:	mov	r1, #1
   15d0c:	mov	r2, #0
   15d10:	mov	r3, #0
   15d14:	str	r1, [sp]
   15d18:	bl	10eb8 <lseek64@plt>
   15d1c:	and	r0, r0, r1
   15d20:	cmn	r0, #1
   15d24:	beq	15d60 <__mempcpy_chk@plt+0x4d10>
   15d28:	mov	r0, r4
   15d2c:	bl	15d70 <__mempcpy_chk@plt+0x4d20>
   15d30:	cmp	r0, #0
   15d34:	beq	15d60 <__mempcpy_chk@plt+0x4d10>
   15d38:	bl	10f78 <__errno_location@plt>
   15d3c:	ldr	r6, [r0]
   15d40:	mov	r5, r0
   15d44:	mov	r0, r4
   15d48:	bl	10fc0 <fclose@plt>
   15d4c:	cmp	r6, #0
   15d50:	strne	r6, [r5]
   15d54:	mvnne	r0, #0
   15d58:	sub	sp, fp, #16
   15d5c:	pop	{r4, r5, r6, sl, fp, pc}
   15d60:	mov	r0, r4
   15d64:	sub	sp, fp, #16
   15d68:	pop	{r4, r5, r6, sl, fp, lr}
   15d6c:	b	10fc0 <fclose@plt>
   15d70:	push	{r4, sl, fp, lr}
   15d74:	add	fp, sp, #8
   15d78:	sub	sp, sp, #8
   15d7c:	mov	r4, r0
   15d80:	cmp	r0, #0
   15d84:	beq	15dbc <__mempcpy_chk@plt+0x4d6c>
   15d88:	mov	r0, r4
   15d8c:	bl	10f18 <__freading@plt>
   15d90:	cmp	r0, #0
   15d94:	beq	15dbc <__mempcpy_chk@plt+0x4d6c>
   15d98:	ldrb	r0, [r4, #1]
   15d9c:	tst	r0, #1
   15da0:	beq	15dbc <__mempcpy_chk@plt+0x4d6c>
   15da4:	mov	r0, #1
   15da8:	mov	r2, #0
   15dac:	mov	r3, #0
   15db0:	str	r0, [sp]
   15db4:	mov	r0, r4
   15db8:	bl	15dcc <__mempcpy_chk@plt+0x4d7c>
   15dbc:	mov	r0, r4
   15dc0:	sub	sp, fp, #8
   15dc4:	pop	{r4, sl, fp, lr}
   15dc8:	b	10e1c <fflush@plt>
   15dcc:	push	{r4, r5, r6, r7, fp, lr}
   15dd0:	add	fp, sp, #16
   15dd4:	sub	sp, sp, #8
   15dd8:	mov	r4, r0
   15ddc:	ldr	r0, [r0, #4]
   15de0:	mov	r5, r3
   15de4:	mov	r6, r2
   15de8:	ldr	r1, [r4, #8]
   15dec:	cmp	r1, r0
   15df0:	bne	15e0c <__mempcpy_chk@plt+0x4dbc>
   15df4:	ldrd	r0, [r4, #16]
   15df8:	cmp	r1, r0
   15dfc:	bne	15e0c <__mempcpy_chk@plt+0x4dbc>
   15e00:	ldr	r0, [r4, #36]	; 0x24
   15e04:	cmp	r0, #0
   15e08:	beq	15e24 <__mempcpy_chk@plt+0x4dd4>
   15e0c:	mov	r0, r4
   15e10:	mov	r2, r6
   15e14:	mov	r3, r5
   15e18:	sub	sp, fp, #16
   15e1c:	pop	{r4, r5, r6, r7, fp, lr}
   15e20:	b	10fcc <fseeko64@plt>
   15e24:	ldr	r7, [fp, #8]
   15e28:	mov	r0, r4
   15e2c:	bl	10fa8 <fileno@plt>
   15e30:	mov	r2, r6
   15e34:	mov	r3, r5
   15e38:	str	r7, [sp]
   15e3c:	bl	10eb8 <lseek64@plt>
   15e40:	and	r2, r0, r1
   15e44:	cmn	r2, #1
   15e48:	beq	15e64 <__mempcpy_chk@plt+0x4e14>
   15e4c:	strd	r0, [r4, #80]	; 0x50
   15e50:	ldr	r0, [r4]
   15e54:	bic	r0, r0, #16
   15e58:	str	r0, [r4]
   15e5c:	mov	r0, #0
   15e60:	b	15e68 <__mempcpy_chk@plt+0x4e18>
   15e64:	mvn	r0, #0
   15e68:	sub	sp, fp, #16
   15e6c:	pop	{r4, r5, r6, r7, fp, pc}
   15e70:	ldrb	r2, [r0]
   15e74:	cmp	r2, #0
   15e78:	beq	15e9c <__mempcpy_chk@plt+0x4e4c>
   15e7c:	add	r3, r0, #1
   15e80:	mov	r0, #0
   15e84:	ror	r0, r0, #23
   15e88:	uxtab	r0, r0, r2
   15e8c:	ldrb	r2, [r3], #1
   15e90:	cmp	r2, #0
   15e94:	bne	15e84 <__mempcpy_chk@plt+0x4e34>
   15e98:	b	15ea0 <__mempcpy_chk@plt+0x4e50>
   15e9c:	mov	r0, #0
   15ea0:	udiv	r2, r0, r1
   15ea4:	mls	r0, r2, r1, r0
   15ea8:	bx	lr
   15eac:	push	{fp, lr}
   15eb0:	mov	fp, sp
   15eb4:	mov	r0, #14
   15eb8:	bl	10ff0 <nl_langinfo@plt>
   15ebc:	movw	r1, #25384	; 0x6328
   15ec0:	cmp	r0, #0
   15ec4:	movt	r1, #1
   15ec8:	movne	r1, r0
   15ecc:	movw	r0, #28161	; 0x6e01
   15ed0:	ldrb	r2, [r1]
   15ed4:	movt	r0, #1
   15ed8:	cmp	r2, #0
   15edc:	movne	r0, r1
   15ee0:	pop	{fp, pc}
   15ee4:	push	{r4, r5, r6, r7, fp, lr}
   15ee8:	add	fp, sp, #16
   15eec:	sub	sp, sp, #8
   15ef0:	cmp	r0, #0
   15ef4:	add	r5, sp, #4
   15ef8:	mov	r7, r2
   15efc:	mov	r4, r1
   15f00:	movne	r5, r0
   15f04:	mov	r0, r5
   15f08:	bl	10ee8 <mbrtowc@plt>
   15f0c:	mov	r6, r0
   15f10:	cmp	r7, #0
   15f14:	beq	15f3c <__mempcpy_chk@plt+0x4eec>
   15f18:	cmn	r6, #2
   15f1c:	bcc	15f3c <__mempcpy_chk@plt+0x4eec>
   15f20:	mov	r0, #0
   15f24:	bl	15f84 <__mempcpy_chk@plt+0x4f34>
   15f28:	cmp	r0, #0
   15f2c:	bne	15f3c <__mempcpy_chk@plt+0x4eec>
   15f30:	ldrb	r0, [r4]
   15f34:	mov	r6, #1
   15f38:	str	r0, [r5]
   15f3c:	mov	r0, r6
   15f40:	sub	sp, fp, #16
   15f44:	pop	{r4, r5, r6, r7, fp, pc}
   15f48:	cmp	r2, #0
   15f4c:	beq	15f7c <__mempcpy_chk@plt+0x4f2c>
   15f50:	mvn	r3, #0
   15f54:	udiv	r3, r3, r2
   15f58:	cmp	r3, r1
   15f5c:	bcs	15f7c <__mempcpy_chk@plt+0x4f2c>
   15f60:	push	{fp, lr}
   15f64:	mov	fp, sp
   15f68:	bl	10f78 <__errno_location@plt>
   15f6c:	mov	r1, #12
   15f70:	str	r1, [r0]
   15f74:	mov	r0, #0
   15f78:	pop	{fp, pc}
   15f7c:	mul	r1, r2, r1
   15f80:	b	15c04 <__mempcpy_chk@plt+0x4bb4>
   15f84:	push	{r4, sl, fp, lr}
   15f88:	add	fp, sp, #8
   15f8c:	sub	sp, sp, #264	; 0x108
   15f90:	add	r1, sp, #7
   15f94:	movw	r2, #257	; 0x101
   15f98:	bl	15ff0 <__mempcpy_chk@plt+0x4fa0>
   15f9c:	mov	r4, #0
   15fa0:	cmp	r0, #0
   15fa4:	bne	15fe4 <__mempcpy_chk@plt+0x4f94>
   15fa8:	movw	r1, #28167	; 0x6e07
   15fac:	add	r0, sp, #7
   15fb0:	mov	r2, #2
   15fb4:	movt	r1, #1
   15fb8:	bl	10f60 <bcmp@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fe4 <__mempcpy_chk@plt+0x4f94>
   15fc4:	movw	r1, #28169	; 0x6e09
   15fc8:	add	r0, sp, #7
   15fcc:	mov	r2, #6
   15fd0:	movt	r1, #1
   15fd4:	bl	10f60 <bcmp@plt>
   15fd8:	cmp	r0, #0
   15fdc:	mov	r4, r0
   15fe0:	movwne	r4, #1
   15fe4:	mov	r0, r4
   15fe8:	sub	sp, fp, #8
   15fec:	pop	{r4, sl, fp, pc}
   15ff0:	push	{r4, r5, r6, r7, fp, lr}
   15ff4:	add	fp, sp, #16
   15ff8:	mov	r4, r1
   15ffc:	mov	r1, #0
   16000:	mov	r6, r2
   16004:	bl	10fd8 <setlocale@plt>
   16008:	cmp	r0, #0
   1600c:	beq	16038 <__mempcpy_chk@plt+0x4fe8>
   16010:	mov	r7, r0
   16014:	bl	10f6c <strlen@plt>
   16018:	cmp	r0, r6
   1601c:	bcs	1604c <__mempcpy_chk@plt+0x4ffc>
   16020:	add	r2, r0, #1
   16024:	mov	r0, r4
   16028:	mov	r1, r7
   1602c:	bl	10e58 <memcpy@plt>
   16030:	mov	r5, #0
   16034:	b	16074 <__mempcpy_chk@plt+0x5024>
   16038:	cmp	r6, #0
   1603c:	mov	r5, #22
   16040:	movne	r0, #0
   16044:	strbne	r0, [r4]
   16048:	b	16074 <__mempcpy_chk@plt+0x5024>
   1604c:	mov	r5, #34	; 0x22
   16050:	cmp	r6, #0
   16054:	beq	16074 <__mempcpy_chk@plt+0x5024>
   16058:	sub	r6, r6, #1
   1605c:	mov	r0, r4
   16060:	mov	r1, r7
   16064:	mov	r2, r6
   16068:	bl	10e58 <memcpy@plt>
   1606c:	mov	r0, #0
   16070:	strb	r0, [r4, r6]
   16074:	mov	r0, r5
   16078:	pop	{r4, r5, r6, r7, fp, pc}
   1607c:	mov	r1, #0
   16080:	b	10fd8 <setlocale@plt>
   16084:	cmp	r3, #0
   16088:	cmpeq	r2, #0
   1608c:	bne	160a4 <__mempcpy_chk@plt+0x5054>
   16090:	cmp	r1, #0
   16094:	cmpeq	r0, #0
   16098:	mvnne	r1, #0
   1609c:	mvnne	r0, #0
   160a0:	b	160c0 <__mempcpy_chk@plt+0x5070>
   160a4:	sub	sp, sp, #8
   160a8:	push	{sp, lr}
   160ac:	bl	160d0 <__mempcpy_chk@plt+0x5080>
   160b0:	ldr	lr, [sp, #4]
   160b4:	add	sp, sp, #8
   160b8:	pop	{r2, r3}
   160bc:	bx	lr
   160c0:	push	{r1, lr}
   160c4:	mov	r0, #8
   160c8:	bl	10e04 <raise@plt>
   160cc:	pop	{r1, pc}
   160d0:	cmp	r1, r3
   160d4:	cmpeq	r0, r2
   160d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160dc:	mov	r4, r0
   160e0:	movcc	r0, #0
   160e4:	mov	r5, r1
   160e8:	ldr	lr, [sp, #36]	; 0x24
   160ec:	movcc	r1, r0
   160f0:	bcc	161ec <__mempcpy_chk@plt+0x519c>
   160f4:	cmp	r3, #0
   160f8:	clzeq	ip, r2
   160fc:	clzne	ip, r3
   16100:	addeq	ip, ip, #32
   16104:	cmp	r5, #0
   16108:	clzeq	r1, r4
   1610c:	addeq	r1, r1, #32
   16110:	clzne	r1, r5
   16114:	sub	ip, ip, r1
   16118:	sub	sl, ip, #32
   1611c:	lsl	r9, r3, ip
   16120:	rsb	fp, ip, #32
   16124:	orr	r9, r9, r2, lsl sl
   16128:	orr	r9, r9, r2, lsr fp
   1612c:	lsl	r8, r2, ip
   16130:	cmp	r5, r9
   16134:	cmpeq	r4, r8
   16138:	movcc	r0, #0
   1613c:	movcc	r1, r0
   16140:	bcc	1615c <__mempcpy_chk@plt+0x510c>
   16144:	mov	r0, #1
   16148:	subs	r4, r4, r8
   1614c:	lsl	r1, r0, sl
   16150:	orr	r1, r1, r0, lsr fp
   16154:	lsl	r0, r0, ip
   16158:	sbc	r5, r5, r9
   1615c:	cmp	ip, #0
   16160:	beq	161ec <__mempcpy_chk@plt+0x519c>
   16164:	lsr	r6, r8, #1
   16168:	orr	r6, r6, r9, lsl #31
   1616c:	lsr	r7, r9, #1
   16170:	mov	r2, ip
   16174:	b	16198 <__mempcpy_chk@plt+0x5148>
   16178:	subs	r3, r4, r6
   1617c:	sbc	r8, r5, r7
   16180:	adds	r3, r3, r3
   16184:	adc	r8, r8, r8
   16188:	adds	r4, r3, #1
   1618c:	adc	r5, r8, #0
   16190:	subs	r2, r2, #1
   16194:	beq	161b4 <__mempcpy_chk@plt+0x5164>
   16198:	cmp	r5, r7
   1619c:	cmpeq	r4, r6
   161a0:	bcs	16178 <__mempcpy_chk@plt+0x5128>
   161a4:	adds	r4, r4, r4
   161a8:	adc	r5, r5, r5
   161ac:	subs	r2, r2, #1
   161b0:	bne	16198 <__mempcpy_chk@plt+0x5148>
   161b4:	lsr	r3, r4, ip
   161b8:	orr	r3, r3, r5, lsl fp
   161bc:	lsr	r2, r5, ip
   161c0:	orr	r3, r3, r5, lsr sl
   161c4:	adds	r0, r0, r4
   161c8:	mov	r4, r3
   161cc:	lsl	r3, r2, ip
   161d0:	orr	r3, r3, r4, lsl sl
   161d4:	lsl	ip, r4, ip
   161d8:	orr	r3, r3, r4, lsr fp
   161dc:	adc	r1, r1, r5
   161e0:	subs	r0, r0, ip
   161e4:	mov	r5, r2
   161e8:	sbc	r1, r1, r3
   161ec:	cmp	lr, #0
   161f0:	strdne	r4, [lr]
   161f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   161fc:	mov	r7, r0
   16200:	ldr	r6, [pc, #72]	; 16250 <__mempcpy_chk@plt+0x5200>
   16204:	ldr	r5, [pc, #72]	; 16254 <__mempcpy_chk@plt+0x5204>
   16208:	add	r6, pc, r6
   1620c:	add	r5, pc, r5
   16210:	sub	r6, r6, r5
   16214:	mov	r8, r1
   16218:	mov	r9, r2
   1621c:	bl	10dcc <calloc@plt-0x20>
   16220:	asrs	r6, r6, #2
   16224:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16228:	mov	r4, #0
   1622c:	add	r4, r4, #1
   16230:	ldr	r3, [r5], #4
   16234:	mov	r2, r9
   16238:	mov	r1, r8
   1623c:	mov	r0, r7
   16240:	blx	r3
   16244:	cmp	r6, r4
   16248:	bne	1622c <__mempcpy_chk@plt+0x51dc>
   1624c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16250:	strdeq	r0, [r1], -ip
   16254:	strdeq	r0, [r1], -r4
   16258:	bx	lr
   1625c:	ldr	r3, [pc, #12]	; 16270 <__mempcpy_chk@plt+0x5220>
   16260:	mov	r1, #0
   16264:	add	r3, pc, r3
   16268:	ldr	r2, [r3]
   1626c:	b	10f84 <__cxa_atexit@plt>
   16270:	andeq	r0, r1, r8, ror lr
   16274:	mov	r2, r1
   16278:	mov	r1, r0
   1627c:	mov	r0, #3
   16280:	b	11008 <__xstat64@plt>

Disassembly of section .fini:

00016284 <.fini>:
   16284:	push	{r3, lr}
   16288:	pop	{r3, pc}
