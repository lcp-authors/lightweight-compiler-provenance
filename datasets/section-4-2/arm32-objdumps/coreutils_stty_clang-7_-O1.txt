
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

000110cc <.init>:
   110cc:	push	{r3, lr}
   110d0:	bl	11410 <tcgetattr@plt+0x48>
   110d4:	pop	{r3, pc}

Disassembly of section .plt:

000110d8 <calloc@plt-0x14>:
   110d8:	push	{lr}		; (str lr, [sp, #-4]!)
   110dc:	ldr	lr, [pc, #4]	; 110e8 <calloc@plt-0x4>
   110e0:	add	lr, pc, lr
   110e4:	ldr	pc, [lr, #8]!
   110e8:	andeq	sl, r1, r8, lsl pc

000110ec <calloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #106496	; 0x1a000
   110f4:	ldr	pc, [ip, #3864]!	; 0xf18

000110f8 <fputs_unlocked@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #106496	; 0x1a000
   11100:	ldr	pc, [ip, #3856]!	; 0xf10

00011104 <raise@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #106496	; 0x1a000
   1110c:	ldr	pc, [ip, #3848]!	; 0xf08

00011110 <strcmp@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #106496	; 0x1a000
   11118:	ldr	pc, [ip, #3840]!	; 0xf00

0001111c <strtol@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #106496	; 0x1a000
   11124:	ldr	pc, [ip, #3832]!	; 0xef8

00011128 <fflush@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #106496	; 0x1a000
   11130:	ldr	pc, [ip, #3824]!	; 0xef0

00011134 <free@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #106496	; 0x1a000
   1113c:	ldr	pc, [ip, #3816]!	; 0xee8

00011140 <_exit@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #106496	; 0x1a000
   11148:	ldr	pc, [ip, #3808]!	; 0xee0

0001114c <memcpy@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #106496	; 0x1a000
   11154:	ldr	pc, [ip, #3800]!	; 0xed8

00011158 <mbsinit@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #106496	; 0x1a000
   11160:	ldr	pc, [ip, #3792]!	; 0xed0

00011164 <memcmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #106496	; 0x1a000
   1116c:	ldr	pc, [ip, #3784]!	; 0xec8

00011170 <dcgettext@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #106496	; 0x1a000
   11178:	ldr	pc, [ip, #3776]!	; 0xec0

0001117c <cfgetispeed@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #106496	; 0x1a000
   11184:	ldr	pc, [ip, #3768]!	; 0xeb8

00011188 <dup2@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #106496	; 0x1a000
   11190:	ldr	pc, [ip, #3760]!	; 0xeb0

00011194 <realloc@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #106496	; 0x1a000
   1119c:	ldr	pc, [ip, #3752]!	; 0xea8

000111a0 <textdomain@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #106496	; 0x1a000
   111a8:	ldr	pc, [ip, #3744]!	; 0xea0

000111ac <iswprint@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #106496	; 0x1a000
   111b4:	ldr	pc, [ip, #3736]!	; 0xe98

000111b8 <cfsetospeed@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #106496	; 0x1a000
   111c0:	ldr	pc, [ip, #3728]!	; 0xe90

000111c4 <fwrite@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #106496	; 0x1a000
   111cc:	ldr	pc, [ip, #3720]!	; 0xe88

000111d0 <ioctl@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #106496	; 0x1a000
   111d8:	ldr	pc, [ip, #3712]!	; 0xe80

000111dc <lseek64@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #106496	; 0x1a000
   111e4:	ldr	pc, [ip, #3704]!	; 0xe78

000111e8 <__ctype_get_mb_cur_max@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #106496	; 0x1a000
   111f0:	ldr	pc, [ip, #3696]!	; 0xe70

000111f4 <tcsetattr@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #106496	; 0x1a000
   111fc:	ldr	pc, [ip, #3688]!	; 0xe68

00011200 <__fpending@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #106496	; 0x1a000
   11208:	ldr	pc, [ip, #3680]!	; 0xe60

0001120c <ferror_unlocked@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #106496	; 0x1a000
   11214:	ldr	pc, [ip, #3672]!	; 0xe58

00011218 <mbrtowc@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #106496	; 0x1a000
   11220:	ldr	pc, [ip, #3664]!	; 0xe50

00011224 <error@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #106496	; 0x1a000
   1122c:	ldr	pc, [ip, #3656]!	; 0xe48

00011230 <open64@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #106496	; 0x1a000
   11238:	ldr	pc, [ip, #3648]!	; 0xe40

0001123c <getenv@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #106496	; 0x1a000
   11244:	ldr	pc, [ip, #3640]!	; 0xe38

00011248 <malloc@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #106496	; 0x1a000
   11250:	ldr	pc, [ip, #3632]!	; 0xe30

00011254 <__libc_start_main@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #106496	; 0x1a000
   1125c:	ldr	pc, [ip, #3624]!	; 0xe28

00011260 <__freading@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #106496	; 0x1a000
   11268:	ldr	pc, [ip, #3616]!	; 0xe20

0001126c <__gmon_start__@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #106496	; 0x1a000
   11274:	ldr	pc, [ip, #3608]!	; 0xe18

00011278 <getopt_long@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #106496	; 0x1a000
   11280:	ldr	pc, [ip, #3600]!	; 0xe10

00011284 <__ctype_b_loc@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #106496	; 0x1a000
   1128c:	ldr	pc, [ip, #3592]!	; 0xe08

00011290 <exit@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #106496	; 0x1a000
   11298:	ldr	pc, [ip, #3584]!	; 0xe00

0001129c <strtoul@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #106496	; 0x1a000
   112a4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112a8 <strlen@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #106496	; 0x1a000
   112b0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112b4 <strchr@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #106496	; 0x1a000
   112bc:	ldr	pc, [ip, #3560]!	; 0xde8

000112c0 <cfsetispeed@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #106496	; 0x1a000
   112c8:	ldr	pc, [ip, #3552]!	; 0xde0

000112cc <cfgetospeed@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #106496	; 0x1a000
   112d4:	ldr	pc, [ip, #3544]!	; 0xdd8

000112d8 <__errno_location@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #106496	; 0x1a000
   112e0:	ldr	pc, [ip, #3536]!	; 0xdd0

000112e4 <__cxa_atexit@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #106496	; 0x1a000
   112ec:	ldr	pc, [ip, #3528]!	; 0xdc8

000112f0 <__vasprintf_chk@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #106496	; 0x1a000
   112f8:	ldr	pc, [ip, #3520]!	; 0xdc0

000112fc <memset@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #106496	; 0x1a000
   11304:	ldr	pc, [ip, #3512]!	; 0xdb8

00011308 <__printf_chk@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #106496	; 0x1a000
   11310:	ldr	pc, [ip, #3504]!	; 0xdb0

00011314 <fileno@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #106496	; 0x1a000
   1131c:	ldr	pc, [ip, #3496]!	; 0xda8

00011320 <strtoumax@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #106496	; 0x1a000
   11328:	ldr	pc, [ip, #3488]!	; 0xda0

0001132c <__fprintf_chk@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #106496	; 0x1a000
   11334:	ldr	pc, [ip, #3480]!	; 0xd98

00011338 <fclose@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #106496	; 0x1a000
   11340:	ldr	pc, [ip, #3472]!	; 0xd90

00011344 <fseeko64@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #106496	; 0x1a000
   1134c:	ldr	pc, [ip, #3464]!	; 0xd88

00011350 <fcntl64@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #106496	; 0x1a000
   11358:	ldr	pc, [ip, #3456]!	; 0xd80

0001135c <setlocale@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #106496	; 0x1a000
   11364:	ldr	pc, [ip, #3448]!	; 0xd78

00011368 <strrchr@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #106496	; 0x1a000
   11370:	ldr	pc, [ip, #3440]!	; 0xd70

00011374 <nl_langinfo@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #106496	; 0x1a000
   1137c:	ldr	pc, [ip, #3432]!	; 0xd68

00011380 <bindtextdomain@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #106496	; 0x1a000
   11388:	ldr	pc, [ip, #3424]!	; 0xd60

0001138c <strncmp@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #106496	; 0x1a000
   11394:	ldr	pc, [ip, #3416]!	; 0xd58

00011398 <abort@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #106496	; 0x1a000
   113a0:	ldr	pc, [ip, #3408]!	; 0xd50

000113a4 <close@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #106496	; 0x1a000
   113ac:	ldr	pc, [ip, #3400]!	; 0xd48

000113b0 <putchar_unlocked@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #106496	; 0x1a000
   113b8:	ldr	pc, [ip, #3392]!	; 0xd40

000113bc <__assert_fail@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #106496	; 0x1a000
   113c4:	ldr	pc, [ip, #3384]!	; 0xd38

000113c8 <tcgetattr@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #106496	; 0x1a000
   113d0:	ldr	pc, [ip, #3376]!	; 0xd30

Disassembly of section .text:

000113d4 <.text>:
   113d4:	mov	fp, #0
   113d8:	mov	lr, #0
   113dc:	pop	{r1}		; (ldr r1, [sp], #4)
   113e0:	mov	r2, sp
   113e4:	push	{r2}		; (str r2, [sp, #-4]!)
   113e8:	push	{r0}		; (str r0, [sp, #-4]!)
   113ec:	ldr	ip, [pc, #16]	; 11404 <tcgetattr@plt+0x3c>
   113f0:	push	{ip}		; (str ip, [sp, #-4]!)
   113f4:	ldr	r0, [pc, #12]	; 11408 <tcgetattr@plt+0x40>
   113f8:	ldr	r3, [pc, #12]	; 1140c <tcgetattr@plt+0x44>
   113fc:	bl	11254 <__libc_start_main@plt>
   11400:	bl	11398 <abort@plt>
   11404:	andeq	r7, r1, ip, lsl #24
   11408:	strheq	r2, [r1], -r8
   1140c:	andeq	r7, r1, ip, lsr #23
   11410:	ldr	r3, [pc, #20]	; 1142c <tcgetattr@plt+0x64>
   11414:	ldr	r2, [pc, #20]	; 11430 <tcgetattr@plt+0x68>
   11418:	add	r3, pc, r3
   1141c:	ldr	r2, [r3, r2]
   11420:	cmp	r2, #0
   11424:	bxeq	lr
   11428:	b	1126c <__gmon_start__@plt>
   1142c:	andeq	sl, r1, r0, ror #23
   11430:	andeq	r0, r0, r4, lsl #2
   11434:	ldr	r0, [pc, #24]	; 11454 <tcgetattr@plt+0x8c>
   11438:	ldr	r3, [pc, #24]	; 11458 <tcgetattr@plt+0x90>
   1143c:	cmp	r3, r0
   11440:	bxeq	lr
   11444:	ldr	r3, [pc, #16]	; 1145c <tcgetattr@plt+0x94>
   11448:	cmp	r3, #0
   1144c:	bxeq	lr
   11450:	bx	r3
   11454:	andeq	ip, r2, r0, ror #2
   11458:	andeq	ip, r2, r0, ror #2
   1145c:	andeq	r0, r0, r0
   11460:	ldr	r0, [pc, #36]	; 1148c <tcgetattr@plt+0xc4>
   11464:	ldr	r1, [pc, #36]	; 11490 <tcgetattr@plt+0xc8>
   11468:	sub	r1, r1, r0
   1146c:	asr	r1, r1, #2
   11470:	add	r1, r1, r1, lsr #31
   11474:	asrs	r1, r1, #1
   11478:	bxeq	lr
   1147c:	ldr	r3, [pc, #16]	; 11494 <tcgetattr@plt+0xcc>
   11480:	cmp	r3, #0
   11484:	bxeq	lr
   11488:	bx	r3
   1148c:	andeq	ip, r2, r0, ror #2
   11490:	andeq	ip, r2, r0, ror #2
   11494:	andeq	r0, r0, r0
   11498:	push	{r4, lr}
   1149c:	ldr	r4, [pc, #24]	; 114bc <tcgetattr@plt+0xf4>
   114a0:	ldrb	r3, [r4]
   114a4:	cmp	r3, #0
   114a8:	popne	{r4, pc}
   114ac:	bl	11434 <tcgetattr@plt+0x6c>
   114b0:	mov	r3, #1
   114b4:	strb	r3, [r4]
   114b8:	pop	{r4, pc}
   114bc:	andeq	ip, r2, r4, lsl #3
   114c0:	b	11460 <tcgetattr@plt+0x98>
   114c4:	push	{fp, lr}
   114c8:	mov	fp, sp
   114cc:	sub	sp, sp, #8
   114d0:	mov	r4, r0
   114d4:	cmp	r0, #0
   114d8:	bne	11ec0 <tcgetattr@plt+0xaf8>
   114dc:	movw	r1, #31835	; 0x7c5b
   114e0:	movt	r1, #1
   114e4:	mov	r0, #0
   114e8:	mov	r2, #5
   114ec:	bl	11170 <dcgettext@plt>
   114f0:	mov	r1, r0
   114f4:	movw	r0, #49756	; 0xc25c
   114f8:	movt	r0, #2
   114fc:	ldr	r2, [r0]
   11500:	str	r2, [sp]
   11504:	mov	r0, #1
   11508:	mov	r3, r2
   1150c:	bl	11308 <__printf_chk@plt>
   11510:	movw	r1, #31986	; 0x7cf2
   11514:	movt	r1, #1
   11518:	mov	r0, #0
   1151c:	mov	r2, #5
   11520:	bl	11170 <dcgettext@plt>
   11524:	movw	r6, #49524	; 0xc174
   11528:	movt	r6, #2
   1152c:	ldr	r1, [r6]
   11530:	bl	110f8 <fputs_unlocked@plt>
   11534:	bl	11f04 <tcgetattr@plt+0xb3c>
   11538:	movw	r1, #32029	; 0x7d1d
   1153c:	movt	r1, #1
   11540:	mov	r0, #0
   11544:	mov	r2, #5
   11548:	bl	11170 <dcgettext@plt>
   1154c:	ldr	r1, [r6]
   11550:	bl	110f8 <fputs_unlocked@plt>
   11554:	movw	r1, #32245	; 0x7df5
   11558:	movt	r1, #1
   1155c:	mov	r0, #0
   11560:	mov	r2, #5
   11564:	bl	11170 <dcgettext@plt>
   11568:	ldr	r1, [r6]
   1156c:	bl	110f8 <fputs_unlocked@plt>
   11570:	movw	r1, #32290	; 0x7e22
   11574:	movt	r1, #1
   11578:	mov	r0, #0
   1157c:	mov	r2, #5
   11580:	bl	11170 <dcgettext@plt>
   11584:	ldr	r1, [r6]
   11588:	bl	110f8 <fputs_unlocked@plt>
   1158c:	movw	r1, #32344	; 0x7e58
   11590:	movt	r1, #1
   11594:	mov	r0, #0
   11598:	mov	r2, #5
   1159c:	bl	11170 <dcgettext@plt>
   115a0:	ldr	r1, [r6]
   115a4:	bl	110f8 <fputs_unlocked@plt>
   115a8:	movw	r1, #32485	; 0x7ee5
   115ac:	movt	r1, #1
   115b0:	mov	r0, #0
   115b4:	mov	r2, #5
   115b8:	bl	11170 <dcgettext@plt>
   115bc:	ldr	r1, [r6]
   115c0:	bl	110f8 <fputs_unlocked@plt>
   115c4:	movw	r1, #32507	; 0x7efb
   115c8:	movt	r1, #1
   115cc:	mov	r0, #0
   115d0:	mov	r2, #5
   115d4:	bl	11170 <dcgettext@plt>
   115d8:	ldr	r1, [r6]
   115dc:	bl	110f8 <fputs_unlocked@plt>
   115e0:	movw	r1, #32563	; 0x7f33
   115e4:	movt	r1, #1
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	bl	11170 <dcgettext@plt>
   115f4:	ldr	r1, [r6]
   115f8:	bl	110f8 <fputs_unlocked@plt>
   115fc:	movw	r1, #32673	; 0x7fa1
   11600:	movt	r1, #1
   11604:	mov	r0, #0
   11608:	mov	r2, #5
   1160c:	bl	11170 <dcgettext@plt>
   11610:	ldr	r1, [r6]
   11614:	bl	110f8 <fputs_unlocked@plt>
   11618:	movw	r1, #32726	; 0x7fd6
   1161c:	movt	r1, #1
   11620:	mov	r0, #0
   11624:	mov	r2, #5
   11628:	bl	11170 <dcgettext@plt>
   1162c:	ldr	r1, [r6]
   11630:	bl	110f8 <fputs_unlocked@plt>
   11634:	movw	r1, #32887	; 0x8077
   11638:	movt	r1, #1
   1163c:	mov	r0, #0
   11640:	mov	r2, #5
   11644:	bl	11170 <dcgettext@plt>
   11648:	ldr	r1, [r6]
   1164c:	bl	110f8 <fputs_unlocked@plt>
   11650:	movw	r1, #32947	; 0x80b3
   11654:	movt	r1, #1
   11658:	mov	r0, #0
   1165c:	mov	r2, #5
   11660:	bl	11170 <dcgettext@plt>
   11664:	ldr	r1, [r6]
   11668:	bl	110f8 <fputs_unlocked@plt>
   1166c:	movw	r1, #32994	; 0x80e2
   11670:	movt	r1, #1
   11674:	mov	r0, #0
   11678:	mov	r2, #5
   1167c:	bl	11170 <dcgettext@plt>
   11680:	ldr	r1, [r6]
   11684:	bl	110f8 <fputs_unlocked@plt>
   11688:	movw	r1, #33046	; 0x8116
   1168c:	movt	r1, #1
   11690:	mov	r0, #0
   11694:	mov	r2, #5
   11698:	bl	11170 <dcgettext@plt>
   1169c:	ldr	r1, [r6]
   116a0:	bl	110f8 <fputs_unlocked@plt>
   116a4:	movw	r1, #33209	; 0x81b9
   116a8:	movt	r1, #1
   116ac:	mov	r0, #0
   116b0:	mov	r2, #5
   116b4:	bl	11170 <dcgettext@plt>
   116b8:	ldr	r1, [r6]
   116bc:	bl	110f8 <fputs_unlocked@plt>
   116c0:	movw	r1, #33271	; 0x81f7
   116c4:	movt	r1, #1
   116c8:	mov	r0, #0
   116cc:	mov	r2, #5
   116d0:	bl	11170 <dcgettext@plt>
   116d4:	ldr	r1, [r6]
   116d8:	bl	110f8 <fputs_unlocked@plt>
   116dc:	movw	r1, #33325	; 0x822d
   116e0:	movt	r1, #1
   116e4:	mov	r0, #0
   116e8:	mov	r2, #5
   116ec:	bl	11170 <dcgettext@plt>
   116f0:	ldr	r1, [r6]
   116f4:	bl	110f8 <fputs_unlocked@plt>
   116f8:	movw	r1, #33405	; 0x827d
   116fc:	movt	r1, #1
   11700:	mov	r0, #0
   11704:	mov	r2, #5
   11708:	bl	11170 <dcgettext@plt>
   1170c:	ldr	r1, [r6]
   11710:	bl	110f8 <fputs_unlocked@plt>
   11714:	movw	r1, #33503	; 0x82df
   11718:	movt	r1, #1
   1171c:	mov	r0, #0
   11720:	mov	r2, #5
   11724:	bl	11170 <dcgettext@plt>
   11728:	mov	r5, r0
   1172c:	movw	r0, #49424	; 0xc110
   11730:	movt	r0, #2
   11734:	ldr	r0, [r0]
   11738:	movw	r2, #40409	; 0x9dd9
   1173c:	movt	r2, #1
   11740:	movw	r1, #40665	; 0x9ed9
   11744:	movt	r1, #1
   11748:	cmp	r0, #1
   1174c:	moveq	r1, r2
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	11170 <dcgettext@plt>
   1175c:	mov	r2, r0
   11760:	mov	r0, #1
   11764:	mov	r1, r5
   11768:	bl	11308 <__printf_chk@plt>
   1176c:	movw	r1, #33584	; 0x8330
   11770:	movt	r1, #1
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	bl	11170 <dcgettext@plt>
   11780:	ldr	r1, [r6]
   11784:	bl	110f8 <fputs_unlocked@plt>
   11788:	movw	r1, #33627	; 0x835b
   1178c:	movt	r1, #1
   11790:	mov	r0, #0
   11794:	mov	r2, #5
   11798:	bl	11170 <dcgettext@plt>
   1179c:	ldr	r1, [r6]
   117a0:	bl	110f8 <fputs_unlocked@plt>
   117a4:	movw	r1, #33667	; 0x8383
   117a8:	movt	r1, #1
   117ac:	mov	r0, #0
   117b0:	mov	r2, #5
   117b4:	bl	11170 <dcgettext@plt>
   117b8:	ldr	r1, [r6]
   117bc:	bl	110f8 <fputs_unlocked@plt>
   117c0:	movw	r1, #33788	; 0x83fc
   117c4:	movt	r1, #1
   117c8:	mov	r0, #0
   117cc:	mov	r2, #5
   117d0:	bl	11170 <dcgettext@plt>
   117d4:	ldr	r1, [r6]
   117d8:	bl	110f8 <fputs_unlocked@plt>
   117dc:	movw	r1, #33929	; 0x8489
   117e0:	movt	r1, #1
   117e4:	mov	r0, #0
   117e8:	mov	r2, #5
   117ec:	bl	11170 <dcgettext@plt>
   117f0:	ldr	r1, [r6]
   117f4:	bl	110f8 <fputs_unlocked@plt>
   117f8:	movw	r1, #34044	; 0x84fc
   117fc:	movt	r1, #1
   11800:	mov	r0, #0
   11804:	mov	r2, #5
   11808:	bl	11170 <dcgettext@plt>
   1180c:	ldr	r1, [r6]
   11810:	bl	110f8 <fputs_unlocked@plt>
   11814:	movw	r1, #34155	; 0x856b
   11818:	movt	r1, #1
   1181c:	mov	r0, #0
   11820:	mov	r2, #5
   11824:	bl	11170 <dcgettext@plt>
   11828:	ldr	r1, [r6]
   1182c:	bl	110f8 <fputs_unlocked@plt>
   11830:	movw	r1, #34200	; 0x8598
   11834:	movt	r1, #1
   11838:	mov	r0, #0
   1183c:	mov	r2, #5
   11840:	bl	11170 <dcgettext@plt>
   11844:	ldr	r1, [r6]
   11848:	bl	110f8 <fputs_unlocked@plt>
   1184c:	movw	r1, #34260	; 0x85d4
   11850:	movt	r1, #1
   11854:	mov	r0, #0
   11858:	mov	r2, #5
   1185c:	bl	11170 <dcgettext@plt>
   11860:	ldr	r1, [r6]
   11864:	bl	110f8 <fputs_unlocked@plt>
   11868:	movw	r1, #34568	; 0x8708
   1186c:	movt	r1, #1
   11870:	mov	r0, #0
   11874:	mov	r2, #5
   11878:	bl	11170 <dcgettext@plt>
   1187c:	ldr	r1, [r6]
   11880:	bl	110f8 <fputs_unlocked@plt>
   11884:	movw	r1, #34618	; 0x873a
   11888:	movt	r1, #1
   1188c:	mov	r0, #0
   11890:	mov	r2, #5
   11894:	bl	11170 <dcgettext@plt>
   11898:	ldr	r1, [r6]
   1189c:	bl	110f8 <fputs_unlocked@plt>
   118a0:	movw	r1, #34875	; 0x883b
   118a4:	movt	r1, #1
   118a8:	mov	r0, #0
   118ac:	mov	r2, #5
   118b0:	bl	11170 <dcgettext@plt>
   118b4:	ldr	r1, [r6]
   118b8:	bl	110f8 <fputs_unlocked@plt>
   118bc:	movw	r1, #34950	; 0x8886
   118c0:	movt	r1, #1
   118c4:	mov	r0, #0
   118c8:	mov	r2, #5
   118cc:	bl	11170 <dcgettext@plt>
   118d0:	ldr	r1, [r6]
   118d4:	bl	110f8 <fputs_unlocked@plt>
   118d8:	movw	r1, #35109	; 0x8925
   118dc:	movt	r1, #1
   118e0:	mov	r0, #0
   118e4:	mov	r2, #5
   118e8:	bl	11170 <dcgettext@plt>
   118ec:	ldr	r1, [r6]
   118f0:	bl	110f8 <fputs_unlocked@plt>
   118f4:	movw	r1, #35169	; 0x8961
   118f8:	movt	r1, #1
   118fc:	mov	r0, #0
   11900:	mov	r2, #5
   11904:	bl	11170 <dcgettext@plt>
   11908:	ldr	r1, [r6]
   1190c:	bl	110f8 <fputs_unlocked@plt>
   11910:	movw	r1, #35231	; 0x899f
   11914:	movt	r1, #1
   11918:	mov	r0, #0
   1191c:	mov	r2, #5
   11920:	bl	11170 <dcgettext@plt>
   11924:	ldr	r1, [r6]
   11928:	bl	110f8 <fputs_unlocked@plt>
   1192c:	movw	r1, #35308	; 0x89ec
   11930:	movt	r1, #1
   11934:	mov	r0, #0
   11938:	mov	r2, #5
   1193c:	bl	11170 <dcgettext@plt>
   11940:	ldr	r1, [r6]
   11944:	bl	110f8 <fputs_unlocked@plt>
   11948:	movw	r1, #35516	; 0x8abc
   1194c:	movt	r1, #1
   11950:	mov	r0, #0
   11954:	mov	r2, #5
   11958:	bl	11170 <dcgettext@plt>
   1195c:	ldr	r1, [r6]
   11960:	bl	110f8 <fputs_unlocked@plt>
   11964:	movw	r1, #35535	; 0x8acf
   11968:	movt	r1, #1
   1196c:	mov	r0, #0
   11970:	mov	r2, #5
   11974:	bl	11170 <dcgettext@plt>
   11978:	ldr	r1, [r6]
   1197c:	bl	110f8 <fputs_unlocked@plt>
   11980:	movw	r1, #35588	; 0x8b04
   11984:	movt	r1, #1
   11988:	mov	r0, #0
   1198c:	mov	r2, #5
   11990:	bl	11170 <dcgettext@plt>
   11994:	ldr	r1, [r6]
   11998:	bl	110f8 <fputs_unlocked@plt>
   1199c:	movw	r1, #35647	; 0x8b3f
   119a0:	movt	r1, #1
   119a4:	mov	r0, #0
   119a8:	mov	r2, #5
   119ac:	bl	11170 <dcgettext@plt>
   119b0:	ldr	r1, [r6]
   119b4:	bl	110f8 <fputs_unlocked@plt>
   119b8:	movw	r1, #35700	; 0x8b74
   119bc:	movt	r1, #1
   119c0:	mov	r0, #0
   119c4:	mov	r2, #5
   119c8:	bl	11170 <dcgettext@plt>
   119cc:	ldr	r1, [r6]
   119d0:	bl	110f8 <fputs_unlocked@plt>
   119d4:	movw	r1, #35751	; 0x8ba7
   119d8:	movt	r1, #1
   119dc:	mov	r0, #0
   119e0:	mov	r2, #5
   119e4:	bl	11170 <dcgettext@plt>
   119e8:	ldr	r1, [r6]
   119ec:	bl	110f8 <fputs_unlocked@plt>
   119f0:	movw	r1, #35806	; 0x8bde
   119f4:	movt	r1, #1
   119f8:	mov	r0, #0
   119fc:	mov	r2, #5
   11a00:	bl	11170 <dcgettext@plt>
   11a04:	ldr	r1, [r6]
   11a08:	bl	110f8 <fputs_unlocked@plt>
   11a0c:	movw	r1, #35881	; 0x8c29
   11a10:	movt	r1, #1
   11a14:	mov	r0, #0
   11a18:	mov	r2, #5
   11a1c:	bl	11170 <dcgettext@plt>
   11a20:	ldr	r1, [r6]
   11a24:	bl	110f8 <fputs_unlocked@plt>
   11a28:	movw	r1, #35958	; 0x8c76
   11a2c:	movt	r1, #1
   11a30:	mov	r0, #0
   11a34:	mov	r2, #5
   11a38:	bl	11170 <dcgettext@plt>
   11a3c:	ldr	r1, [r6]
   11a40:	bl	110f8 <fputs_unlocked@plt>
   11a44:	movw	r1, #36020	; 0x8cb4
   11a48:	movt	r1, #1
   11a4c:	mov	r0, #0
   11a50:	mov	r2, #5
   11a54:	bl	11170 <dcgettext@plt>
   11a58:	ldr	r1, [r6]
   11a5c:	bl	110f8 <fputs_unlocked@plt>
   11a60:	movw	r1, #36083	; 0x8cf3
   11a64:	movt	r1, #1
   11a68:	mov	r0, #0
   11a6c:	mov	r2, #5
   11a70:	bl	11170 <dcgettext@plt>
   11a74:	ldr	r1, [r6]
   11a78:	bl	110f8 <fputs_unlocked@plt>
   11a7c:	movw	r1, #36136	; 0x8d28
   11a80:	movt	r1, #1
   11a84:	mov	r0, #0
   11a88:	mov	r2, #5
   11a8c:	bl	11170 <dcgettext@plt>
   11a90:	ldr	r1, [r6]
   11a94:	bl	110f8 <fputs_unlocked@plt>
   11a98:	movw	r1, #36204	; 0x8d6c
   11a9c:	movt	r1, #1
   11aa0:	mov	r0, #0
   11aa4:	mov	r2, #5
   11aa8:	bl	11170 <dcgettext@plt>
   11aac:	ldr	r1, [r6]
   11ab0:	bl	110f8 <fputs_unlocked@plt>
   11ab4:	movw	r1, #36241	; 0x8d91
   11ab8:	movt	r1, #1
   11abc:	mov	r0, #0
   11ac0:	mov	r2, #5
   11ac4:	bl	11170 <dcgettext@plt>
   11ac8:	ldr	r1, [r6]
   11acc:	bl	110f8 <fputs_unlocked@plt>
   11ad0:	movw	r1, #36359	; 0x8e07
   11ad4:	movt	r1, #1
   11ad8:	mov	r0, #0
   11adc:	mov	r2, #5
   11ae0:	bl	11170 <dcgettext@plt>
   11ae4:	ldr	r1, [r6]
   11ae8:	bl	110f8 <fputs_unlocked@plt>
   11aec:	movw	r1, #36415	; 0x8e3f
   11af0:	movt	r1, #1
   11af4:	mov	r0, #0
   11af8:	mov	r2, #5
   11afc:	bl	11170 <dcgettext@plt>
   11b00:	ldr	r1, [r6]
   11b04:	bl	110f8 <fputs_unlocked@plt>
   11b08:	movw	r1, #36501	; 0x8e95
   11b0c:	movt	r1, #1
   11b10:	mov	r0, #0
   11b14:	mov	r2, #5
   11b18:	bl	11170 <dcgettext@plt>
   11b1c:	ldr	r1, [r6]
   11b20:	bl	110f8 <fputs_unlocked@plt>
   11b24:	movw	r1, #36648	; 0x8f28
   11b28:	movt	r1, #1
   11b2c:	mov	r0, #0
   11b30:	mov	r2, #5
   11b34:	bl	11170 <dcgettext@plt>
   11b38:	ldr	r1, [r6]
   11b3c:	bl	110f8 <fputs_unlocked@plt>
   11b40:	movw	r1, #36713	; 0x8f69
   11b44:	movt	r1, #1
   11b48:	mov	r0, #0
   11b4c:	mov	r2, #5
   11b50:	bl	11170 <dcgettext@plt>
   11b54:	ldr	r1, [r6]
   11b58:	bl	110f8 <fputs_unlocked@plt>
   11b5c:	movw	r1, #36753	; 0x8f91
   11b60:	movt	r1, #1
   11b64:	mov	r0, #0
   11b68:	mov	r2, #5
   11b6c:	bl	11170 <dcgettext@plt>
   11b70:	ldr	r1, [r6]
   11b74:	bl	110f8 <fputs_unlocked@plt>
   11b78:	movw	r1, #36790	; 0x8fb6
   11b7c:	movt	r1, #1
   11b80:	mov	r0, #0
   11b84:	mov	r2, #5
   11b88:	bl	11170 <dcgettext@plt>
   11b8c:	ldr	r1, [r6]
   11b90:	bl	110f8 <fputs_unlocked@plt>
   11b94:	movw	r1, #36883	; 0x9013
   11b98:	movt	r1, #1
   11b9c:	mov	r0, #0
   11ba0:	mov	r2, #5
   11ba4:	bl	11170 <dcgettext@plt>
   11ba8:	ldr	r1, [r6]
   11bac:	bl	110f8 <fputs_unlocked@plt>
   11bb0:	movw	r1, #36920	; 0x9038
   11bb4:	movt	r1, #1
   11bb8:	mov	r0, #0
   11bbc:	mov	r2, #5
   11bc0:	bl	11170 <dcgettext@plt>
   11bc4:	ldr	r1, [r6]
   11bc8:	bl	110f8 <fputs_unlocked@plt>
   11bcc:	movw	r1, #36988	; 0x907c
   11bd0:	movt	r1, #1
   11bd4:	mov	r0, #0
   11bd8:	mov	r2, #5
   11bdc:	bl	11170 <dcgettext@plt>
   11be0:	ldr	r1, [r6]
   11be4:	bl	110f8 <fputs_unlocked@plt>
   11be8:	movw	r1, #37059	; 0x90c3
   11bec:	movt	r1, #1
   11bf0:	mov	r0, #0
   11bf4:	mov	r2, #5
   11bf8:	bl	11170 <dcgettext@plt>
   11bfc:	ldr	r1, [r6]
   11c00:	bl	110f8 <fputs_unlocked@plt>
   11c04:	movw	r1, #37127	; 0x9107
   11c08:	movt	r1, #1
   11c0c:	mov	r0, #0
   11c10:	mov	r2, #5
   11c14:	bl	11170 <dcgettext@plt>
   11c18:	ldr	r1, [r6]
   11c1c:	bl	110f8 <fputs_unlocked@plt>
   11c20:	movw	r1, #37160	; 0x9128
   11c24:	movt	r1, #1
   11c28:	mov	r0, #0
   11c2c:	mov	r2, #5
   11c30:	bl	11170 <dcgettext@plt>
   11c34:	mov	r1, r0
   11c38:	movw	r2, #37261	; 0x918d
   11c3c:	movt	r2, #1
   11c40:	mov	r0, #1
   11c44:	bl	11308 <__printf_chk@plt>
   11c48:	movw	r1, #37288	; 0x91a8
   11c4c:	movt	r1, #1
   11c50:	mov	r0, #0
   11c54:	mov	r2, #5
   11c58:	bl	11170 <dcgettext@plt>
   11c5c:	ldr	r1, [r6]
   11c60:	bl	110f8 <fputs_unlocked@plt>
   11c64:	movw	r1, #37439	; 0x923f
   11c68:	movt	r1, #1
   11c6c:	mov	r0, #0
   11c70:	mov	r2, #5
   11c74:	bl	11170 <dcgettext@plt>
   11c78:	ldr	r1, [r6]
   11c7c:	bl	110f8 <fputs_unlocked@plt>
   11c80:	movw	r1, #37476	; 0x9264
   11c84:	movt	r1, #1
   11c88:	mov	r0, #0
   11c8c:	mov	r2, #5
   11c90:	bl	11170 <dcgettext@plt>
   11c94:	ldr	r1, [r6]
   11c98:	bl	110f8 <fputs_unlocked@plt>
   11c9c:	movw	r1, #37549	; 0x92ad
   11ca0:	movt	r1, #1
   11ca4:	mov	r0, #0
   11ca8:	mov	r2, #5
   11cac:	bl	11170 <dcgettext@plt>
   11cb0:	ldr	r1, [r6]
   11cb4:	bl	110f8 <fputs_unlocked@plt>
   11cb8:	movw	r1, #37621	; 0x92f5
   11cbc:	movt	r1, #1
   11cc0:	mov	r0, #0
   11cc4:	mov	r2, #5
   11cc8:	bl	11170 <dcgettext@plt>
   11ccc:	ldr	r1, [r6]
   11cd0:	bl	110f8 <fputs_unlocked@plt>
   11cd4:	movw	r1, #37645	; 0x930d
   11cd8:	movt	r1, #1
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	bl	11170 <dcgettext@plt>
   11ce8:	ldr	r1, [r6]
   11cec:	bl	110f8 <fputs_unlocked@plt>
   11cf0:	movw	r1, #37680	; 0x9330
   11cf4:	movt	r1, #1
   11cf8:	mov	r0, #0
   11cfc:	mov	r2, #5
   11d00:	bl	11170 <dcgettext@plt>
   11d04:	ldr	r1, [r6]
   11d08:	bl	110f8 <fputs_unlocked@plt>
   11d0c:	movw	r1, #37746	; 0x9372
   11d10:	movt	r1, #1
   11d14:	mov	r0, #0
   11d18:	mov	r2, #5
   11d1c:	bl	11170 <dcgettext@plt>
   11d20:	ldr	r1, [r6]
   11d24:	bl	110f8 <fputs_unlocked@plt>
   11d28:	movw	r1, #37916	; 0x941c
   11d2c:	movt	r1, #1
   11d30:	mov	r0, #0
   11d34:	mov	r2, #5
   11d38:	bl	11170 <dcgettext@plt>
   11d3c:	mov	r1, r0
   11d40:	movw	r2, #37945	; 0x9439
   11d44:	movt	r2, #1
   11d48:	mov	r0, #1
   11d4c:	bl	11308 <__printf_chk@plt>
   11d50:	movw	r1, #37966	; 0x944e
   11d54:	movt	r1, #1
   11d58:	mov	r0, #0
   11d5c:	mov	r2, #5
   11d60:	bl	11170 <dcgettext@plt>
   11d64:	mov	r1, r0
   11d68:	movw	r2, #38039	; 0x9497
   11d6c:	movt	r2, #1
   11d70:	mov	r0, #1
   11d74:	bl	11308 <__printf_chk@plt>
   11d78:	movw	r1, #38067	; 0x94b3
   11d7c:	movt	r1, #1
   11d80:	mov	r0, #0
   11d84:	mov	r2, #5
   11d88:	bl	11170 <dcgettext@plt>
   11d8c:	ldr	r1, [r6]
   11d90:	bl	110f8 <fputs_unlocked@plt>
   11d94:	movw	r1, #38102	; 0x94d6
   11d98:	movt	r1, #1
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	bl	11170 <dcgettext@plt>
   11da8:	ldr	r1, [r6]
   11dac:	bl	110f8 <fputs_unlocked@plt>
   11db0:	movw	r1, #38251	; 0x956b
   11db4:	movt	r1, #1
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	bl	11170 <dcgettext@plt>
   11dc4:	ldr	r1, [r6]
   11dc8:	bl	110f8 <fputs_unlocked@plt>
   11dcc:	movw	r1, #38295	; 0x9597
   11dd0:	movt	r1, #1
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	bl	11170 <dcgettext@plt>
   11de0:	ldr	r1, [r6]
   11de4:	bl	110f8 <fputs_unlocked@plt>
   11de8:	movw	r1, #38397	; 0x95fd
   11dec:	movt	r1, #1
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	bl	11170 <dcgettext@plt>
   11dfc:	mov	r1, r0
   11e00:	movw	r2, #38454	; 0x9636
   11e04:	movt	r2, #1
   11e08:	movw	r3, #38468	; 0x9644
   11e0c:	movt	r3, #1
   11e10:	mov	r0, #1
   11e14:	bl	11308 <__printf_chk@plt>
   11e18:	movw	r1, #38509	; 0x966d
   11e1c:	movt	r1, #1
   11e20:	mov	r0, #0
   11e24:	mov	r2, #5
   11e28:	bl	11170 <dcgettext@plt>
   11e2c:	ldr	r1, [r6]
   11e30:	bl	110f8 <fputs_unlocked@plt>
   11e34:	movw	r1, #38712	; 0x9738
   11e38:	movt	r1, #1
   11e3c:	mov	r0, #0
   11e40:	mov	r2, #5
   11e44:	bl	11170 <dcgettext@plt>
   11e48:	mov	r1, r0
   11e4c:	movw	r2, #38921	; 0x9809
   11e50:	movt	r2, #1
   11e54:	mov	r0, #1
   11e58:	bl	11308 <__printf_chk@plt>
   11e5c:	movw	r1, #38952	; 0x9828
   11e60:	movt	r1, #1
   11e64:	mov	r0, #0
   11e68:	mov	r2, #5
   11e6c:	bl	11170 <dcgettext@plt>
   11e70:	mov	r1, r0
   11e74:	movw	r0, #39324	; 0x999c
   11e78:	movt	r0, #1
   11e7c:	str	r0, [sp]
   11e80:	movw	r2, #39208	; 0x9928
   11e84:	movt	r2, #1
   11e88:	movw	r3, #39265	; 0x9961
   11e8c:	movt	r3, #1
   11e90:	mov	r0, #1
   11e94:	bl	11308 <__printf_chk@plt>
   11e98:	movw	r1, #39385	; 0x99d9
   11e9c:	movt	r1, #1
   11ea0:	mov	r0, #0
   11ea4:	mov	r2, #5
   11ea8:	bl	11170 <dcgettext@plt>
   11eac:	ldr	r1, [r6]
   11eb0:	bl	110f8 <fputs_unlocked@plt>
   11eb4:	bl	11f34 <tcgetattr@plt+0xb6c>
   11eb8:	mov	r0, r4
   11ebc:	bl	11290 <exit@plt>
   11ec0:	movw	r0, #49520	; 0xc170
   11ec4:	movt	r0, #2
   11ec8:	ldr	r5, [r0]
   11ecc:	movw	r1, #31796	; 0x7c34
   11ed0:	movt	r1, #1
   11ed4:	mov	r0, #0
   11ed8:	mov	r2, #5
   11edc:	bl	11170 <dcgettext@plt>
   11ee0:	mov	r2, r0
   11ee4:	movw	r0, #49756	; 0xc25c
   11ee8:	movt	r0, #2
   11eec:	ldr	r3, [r0]
   11ef0:	mov	r0, r5
   11ef4:	mov	r1, #1
   11ef8:	bl	1132c <__fprintf_chk@plt>
   11efc:	mov	r0, r4
   11f00:	bl	11290 <exit@plt>
   11f04:	push	{fp, lr}
   11f08:	mov	fp, sp
   11f0c:	movw	r1, #39999	; 0x9c3f
   11f10:	movt	r1, #1
   11f14:	mov	r0, #0
   11f18:	mov	r2, #5
   11f1c:	bl	11170 <dcgettext@plt>
   11f20:	movw	r1, #49524	; 0xc174
   11f24:	movt	r1, #2
   11f28:	ldr	r1, [r1]
   11f2c:	pop	{fp, lr}
   11f30:	b	110f8 <fputs_unlocked@plt>
   11f34:	push	{r4, r5, fp, lr}
   11f38:	add	fp, sp, #8
   11f3c:	sub	sp, sp, #56	; 0x38
   11f40:	movw	r0, #41728	; 0xa300
   11f44:	movt	r0, #1
   11f48:	add	r1, r0, #32
   11f4c:	mov	r5, sp
   11f50:	mov	r2, #48	; 0x30
   11f54:	vld1.64	{d16-d17}, [r1]
   11f58:	add	r1, r5, #32
   11f5c:	add	r3, r0, #16
   11f60:	vld1.64	{d18-d19}, [r0], r2
   11f64:	vld1.64	{d20-d21}, [r3]
   11f68:	vldr	d22, [r0]
   11f6c:	vst1.64	{d16-d17}, [r1]
   11f70:	add	r0, r5, #16
   11f74:	vst1.64	{d20-d21}, [r0]
   11f78:	mov	r0, r5
   11f7c:	vst1.64	{d18-d19}, [r0], r2
   11f80:	vstr	d22, [r0]
   11f84:	ldr	r1, [sp]
   11f88:	cmp	r1, #0
   11f8c:	beq	11fb4 <tcgetattr@plt+0xbec>
   11f90:	mov	r5, sp
   11f94:	movw	r4, #39662	; 0x9aee
   11f98:	movt	r4, #1
   11f9c:	mov	r0, r4
   11fa0:	bl	11110 <strcmp@plt>
   11fa4:	cmp	r0, #0
   11fa8:	ldrne	r1, [r5, #8]!
   11fac:	cmpne	r1, #0
   11fb0:	bne	11f9c <tcgetattr@plt+0xbd4>
   11fb4:	ldr	r4, [r5, #4]
   11fb8:	movw	r1, #40169	; 0x9ce9
   11fbc:	movt	r1, #1
   11fc0:	mov	r0, #0
   11fc4:	mov	r2, #5
   11fc8:	bl	11170 <dcgettext@plt>
   11fcc:	mov	r1, r0
   11fd0:	movw	r2, #39730	; 0x9b32
   11fd4:	movt	r2, #1
   11fd8:	movw	r3, #40192	; 0x9d00
   11fdc:	movt	r3, #1
   11fe0:	mov	r0, #1
   11fe4:	bl	11308 <__printf_chk@plt>
   11fe8:	movw	r5, #39662	; 0x9aee
   11fec:	movt	r5, #1
   11ff0:	cmp	r4, #0
   11ff4:	moveq	r4, r5
   11ff8:	mov	r0, #5
   11ffc:	mov	r1, #0
   12000:	bl	1135c <setlocale@plt>
   12004:	cmp	r0, #0
   12008:	beq	12048 <tcgetattr@plt+0xc80>
   1200c:	movw	r1, #40232	; 0x9d28
   12010:	movt	r1, #1
   12014:	mov	r2, #3
   12018:	bl	1138c <strncmp@plt>
   1201c:	cmp	r0, #0
   12020:	beq	12048 <tcgetattr@plt+0xc80>
   12024:	movw	r1, #40236	; 0x9d2c
   12028:	movt	r1, #1
   1202c:	mov	r0, #0
   12030:	mov	r2, #5
   12034:	bl	11170 <dcgettext@plt>
   12038:	movw	r1, #49524	; 0xc174
   1203c:	movt	r1, #2
   12040:	ldr	r1, [r1]
   12044:	bl	110f8 <fputs_unlocked@plt>
   12048:	movw	r1, #40307	; 0x9d73
   1204c:	movt	r1, #1
   12050:	mov	r0, #0
   12054:	mov	r2, #5
   12058:	bl	11170 <dcgettext@plt>
   1205c:	mov	r1, r0
   12060:	movw	r2, #40192	; 0x9d00
   12064:	movt	r2, #1
   12068:	mov	r0, #1
   1206c:	mov	r3, r5
   12070:	bl	11308 <__printf_chk@plt>
   12074:	movw	r1, #40334	; 0x9d8e
   12078:	movt	r1, #1
   1207c:	mov	r0, #0
   12080:	mov	r2, #5
   12084:	bl	11170 <dcgettext@plt>
   12088:	mov	r1, r0
   1208c:	movw	r0, #40102	; 0x9ca6
   12090:	movt	r0, #1
   12094:	movw	r3, #37058	; 0x90c2
   12098:	movt	r3, #1
   1209c:	cmp	r4, r5
   120a0:	moveq	r3, r0
   120a4:	mov	r0, #1
   120a8:	mov	r2, r4
   120ac:	bl	11308 <__printf_chk@plt>
   120b0:	sub	sp, fp, #8
   120b4:	pop	{r4, r5, fp, pc}
   120b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120bc:	add	fp, sp, #28
   120c0:	sub	sp, sp, #28
   120c4:	mov	r9, r1
   120c8:	mov	r7, r0
   120cc:	ldr	r0, [r1]
   120d0:	bl	14180 <tcgetattr@plt+0x2db8>
   120d4:	movw	r1, #37058	; 0x90c2
   120d8:	movt	r1, #1
   120dc:	mov	r0, #6
   120e0:	bl	1135c <setlocale@plt>
   120e4:	movw	r6, #39734	; 0x9b36
   120e8:	movt	r6, #1
   120ec:	movw	r1, #39667	; 0x9af3
   120f0:	movt	r1, #1
   120f4:	mov	r0, r6
   120f8:	bl	11380 <bindtextdomain@plt>
   120fc:	mov	r0, r6
   12100:	bl	111a0 <textdomain@plt>
   12104:	movw	r0, #15908	; 0x3e24
   12108:	movt	r0, #1
   1210c:	bl	17c10 <tcgetattr@plt+0x6848>
   12110:	movw	r0, #49528	; 0xc178
   12114:	movt	r0, #2
   12118:	mov	r5, #0
   1211c:	str	r5, [r0]
   12120:	mov	r6, #1
   12124:	mov	r4, #0
   12128:	mov	r0, #0
   1212c:	str	r0, [sp, #16]
   12130:	mov	r0, #0
   12134:	str	r0, [sp, #12]
   12138:	mov	r0, #1
   1213c:	str	r0, [sp, #20]
   12140:	mov	r8, #0
   12144:	mov	sl, #0
   12148:	b	12154 <tcgetattr@plt+0xd8c>
   1214c:	mov	r7, r5
   12150:	mov	r5, #0
   12154:	str	r5, [sp]
   12158:	sub	r0, r7, r4
   1215c:	add	r1, r9, r4, lsl #2
   12160:	movw	r2, #39691	; 0x9b0b
   12164:	movt	r2, #1
   12168:	movw	r3, #41632	; 0xa2a0
   1216c:	movt	r3, #1
   12170:	bl	11278 <getopt_long@plt>
   12174:	cmp	r0, #69	; 0x45
   12178:	bgt	12198 <tcgetattr@plt+0xdd0>
   1217c:	cmn	r0, #1
   12180:	beq	122a0 <tcgetattr@plt+0xed8>
   12184:	cmn	r0, #3
   12188:	beq	124d8 <tcgetattr@plt+0x1110>
   1218c:	cmn	r0, #2
   12190:	bne	121c0 <tcgetattr@plt+0xdf8>
   12194:	b	12520 <tcgetattr@plt+0x1158>
   12198:	cmp	r0, #70	; 0x46
   1219c:	beq	12224 <tcgetattr@plt+0xe5c>
   121a0:	cmp	r0, #97	; 0x61
   121a4:	beq	1223c <tcgetattr@plt+0xe74>
   121a8:	cmp	r0, #103	; 0x67
   121ac:	bne	121c0 <tcgetattr@plt+0xdf8>
   121b0:	mov	sl, #2
   121b4:	mov	r0, #1
   121b8:	str	r0, [sp, #12]
   121bc:	b	12248 <tcgetattr@plt+0xe80>
   121c0:	mov	r5, sl
   121c4:	add	r4, r6, r4
   121c8:	ldr	sl, [r9, r4, lsl #2]
   121cc:	mov	r0, sl
   121d0:	movw	r1, #39760	; 0x9b50
   121d4:	movt	r1, #1
   121d8:	bl	11110 <strcmp@plt>
   121dc:	cmp	r0, #0
   121e0:	beq	12208 <tcgetattr@plt+0xe40>
   121e4:	mov	r0, sl
   121e8:	movw	r1, #39761	; 0x9b51
   121ec:	movt	r1, #1
   121f0:	bl	11110 <strcmp@plt>
   121f4:	clz	r0, r0
   121f8:	lsr	r0, r0, #5
   121fc:	ldr	r1, [sp, #20]
   12200:	and	r1, r1, r0
   12204:	str	r1, [sp, #20]
   12208:	mov	sl, r5
   1220c:	mov	r5, #0
   12210:	movw	r0, #49512	; 0xc168
   12214:	movt	r0, #2
   12218:	str	r5, [r0]
   1221c:	mov	r6, #1
   12220:	b	12250 <tcgetattr@plt+0xe88>
   12224:	cmp	r8, #0
   12228:	bne	1259c <tcgetattr@plt+0x11d4>
   1222c:	movw	r0, #49536	; 0xc180
   12230:	movt	r0, #2
   12234:	ldr	r8, [r0]
   12238:	b	12248 <tcgetattr@plt+0xe80>
   1223c:	mov	r0, #1
   12240:	str	r0, [sp, #16]
   12244:	mov	sl, #1
   12248:	movw	r0, #49512	; 0xc168
   1224c:	movt	r0, #2
   12250:	ldr	r0, [r0]
   12254:	cmp	r6, r0
   12258:	bge	12154 <tcgetattr@plt+0xd8c>
   1225c:	mov	r5, r7
   12260:	add	r0, r4, r6
   12264:	add	r0, r9, r0, lsl #2
   12268:	movw	r1, #49512	; 0xc168
   1226c:	movt	r1, #2
   12270:	ldr	r7, [r1]
   12274:	add	r1, r6, #1
   12278:	cmp	r7, r1
   1227c:	movgt	r1, r7
   12280:	sub	r1, r1, r6
   12284:	lsl	r2, r1, #2
   12288:	mov	r1, #0
   1228c:	bl	112fc <memset@plt>
   12290:	add	r6, r6, #1
   12294:	cmp	r6, r7
   12298:	blt	12290 <tcgetattr@plt+0xec8>
   1229c:	b	1214c <tcgetattr@plt+0xd84>
   122a0:	ldr	r6, [sp, #12]
   122a4:	ldr	r1, [sp, #16]
   122a8:	and	r0, r1, r6
   122ac:	tst	r0, #1
   122b0:	bne	125a8 <tcgetattr@plt+0x11e0>
   122b4:	mov	r5, sl
   122b8:	orr	r4, r1, r6
   122bc:	tst	r4, #1
   122c0:	beq	122d4 <tcgetattr@plt+0xf0c>
   122c4:	ldr	r0, [sp, #20]
   122c8:	eor	r0, r0, #1
   122cc:	tst	r0, #1
   122d0:	bne	125b4 <tcgetattr@plt+0x11ec>
   122d4:	cmp	r8, #0
   122d8:	mov	sl, r8
   122dc:	bne	122fc <tcgetattr@plt+0xf34>
   122e0:	movw	r1, #39900	; 0x9bdc
   122e4:	movt	r1, #1
   122e8:	mov	r0, #0
   122ec:	mov	r2, #5
   122f0:	bl	11170 <dcgettext@plt>
   122f4:	ldr	r1, [sp, #16]
   122f8:	mov	sl, r0
   122fc:	ldr	r0, [sp, #20]
   12300:	orr	r0, r1, r0
   12304:	orr	r0, r6, r0
   12308:	tst	r0, #1
   1230c:	bne	12340 <tcgetattr@plt+0xf78>
   12310:	add	r0, sp, #27
   12314:	add	r1, sp, #26
   12318:	movw	r2, #49604	; 0xc1c4
   1231c:	movt	r2, #2
   12320:	str	r2, [sp]
   12324:	str	r1, [sp, #4]
   12328:	str	r0, [sp, #8]
   1232c:	mov	r0, #1
   12330:	mov	r1, sl
   12334:	mov	r2, r9
   12338:	mov	r3, r7
   1233c:	bl	12614 <tcgetattr@plt+0x124c>
   12340:	cmp	r8, #0
   12344:	beq	12390 <tcgetattr@plt+0xfc8>
   12348:	mov	r0, #0
   1234c:	mov	r1, sl
   12350:	mov	r2, #2048	; 0x800
   12354:	mov	r3, #0
   12358:	bl	140f0 <tcgetattr@plt+0x2d28>
   1235c:	cmn	r0, #1
   12360:	ble	12528 <tcgetattr@plt+0x1160>
   12364:	mov	r0, #0
   12368:	mov	r1, #3
   1236c:	bl	13f0c <tcgetattr@plt+0x2b44>
   12370:	cmn	r0, #1
   12374:	beq	12558 <tcgetattr@plt+0x1190>
   12378:	bic	r2, r0, #2048	; 0x800
   1237c:	mov	r0, #0
   12380:	mov	r1, #4
   12384:	bl	13f0c <tcgetattr@plt+0x2b44>
   12388:	cmn	r0, #1
   1238c:	ble	12558 <tcgetattr@plt+0x1190>
   12390:	movw	r6, #49544	; 0xc188
   12394:	movt	r6, #2
   12398:	mov	r0, #0
   1239c:	mov	r1, r6
   123a0:	bl	113c8 <tcgetattr@plt>
   123a4:	cmp	r0, #0
   123a8:	bne	12528 <tcgetattr@plt+0x1160>
   123ac:	ldr	r0, [sp, #20]
   123b0:	orr	r0, r4, r0
   123b4:	tst	r0, #1
   123b8:	beq	123ec <tcgetattr@plt+0x1024>
   123bc:	bl	12aec <tcgetattr@plt+0x1724>
   123c0:	movw	r1, #49664	; 0xc200
   123c4:	movt	r1, #2
   123c8:	str	r0, [r1]
   123cc:	movw	r0, #49668	; 0xc204
   123d0:	movt	r0, #2
   123d4:	mov	r1, #0
   123d8:	str	r1, [r0]
   123dc:	mov	r0, r5
   123e0:	mov	r1, sl
   123e4:	bl	12b78 <tcgetattr@plt+0x17b0>
   123e8:	b	124cc <tcgetattr@plt+0x1104>
   123ec:	mov	r0, #0
   123f0:	strb	r0, [sp, #27]
   123f4:	strb	r0, [sp, #26]
   123f8:	add	r0, sp, #27
   123fc:	add	r1, sp, #26
   12400:	str	r6, [sp]
   12404:	str	r1, [sp, #4]
   12408:	str	r0, [sp, #8]
   1240c:	mov	r0, #0
   12410:	mov	r1, sl
   12414:	mov	r2, r9
   12418:	mov	r3, r7
   1241c:	bl	12614 <tcgetattr@plt+0x124c>
   12420:	ldrb	r0, [sp, #27]
   12424:	cmp	r0, #0
   12428:	beq	124cc <tcgetattr@plt+0x1104>
   1242c:	movw	r0, #49424	; 0xc110
   12430:	movt	r0, #2
   12434:	ldr	r1, [r0]
   12438:	movw	r2, #49544	; 0xc188
   1243c:	movt	r2, #2
   12440:	mov	r0, #0
   12444:	bl	111f4 <tcsetattr@plt>
   12448:	cmp	r0, #0
   1244c:	bne	12528 <tcgetattr@plt+0x1160>
   12450:	movw	r1, #49672	; 0xc208
   12454:	movt	r1, #2
   12458:	mov	r0, #0
   1245c:	bl	113c8 <tcgetattr@plt>
   12460:	cmp	r0, #0
   12464:	bne	12528 <tcgetattr@plt+0x1160>
   12468:	movw	r0, #49544	; 0xc188
   1246c:	movt	r0, #2
   12470:	movw	r4, #49672	; 0xc208
   12474:	movt	r4, #2
   12478:	mov	r1, r4
   1247c:	mov	r2, #60	; 0x3c
   12480:	bl	11164 <memcmp@plt>
   12484:	cmp	r0, #0
   12488:	beq	124cc <tcgetattr@plt+0x1104>
   1248c:	ldr	r0, [r4, #8]
   12490:	movw	r1, #65535	; 0xffff
   12494:	movt	r1, #61424	; 0xeff0
   12498:	and	r0, r0, r1
   1249c:	str	r0, [r4, #8]
   124a0:	ldrb	r0, [sp, #26]
   124a4:	cmp	r0, #0
   124a8:	bne	125d8 <tcgetattr@plt+0x1210>
   124ac:	movw	r0, #49544	; 0xc188
   124b0:	movt	r0, #2
   124b4:	movw	r1, #49672	; 0xc208
   124b8:	movt	r1, #2
   124bc:	mov	r2, #60	; 0x3c
   124c0:	bl	11164 <memcmp@plt>
   124c4:	cmp	r0, #0
   124c8:	bne	125d8 <tcgetattr@plt+0x1210>
   124cc:	mov	r0, #0
   124d0:	sub	sp, fp, #28
   124d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124d8:	movw	r0, #49428	; 0xc114
   124dc:	movt	r0, #2
   124e0:	ldr	r3, [r0]
   124e4:	movw	r0, #49524	; 0xc174
   124e8:	movt	r0, #2
   124ec:	ldr	r0, [r0]
   124f0:	mov	r1, #0
   124f4:	movw	r2, #39744	; 0x9b40
   124f8:	movt	r2, #1
   124fc:	str	r2, [sp]
   12500:	str	r1, [sp, #4]
   12504:	movw	r1, #39662	; 0x9aee
   12508:	movt	r1, #1
   1250c:	movw	r2, #39730	; 0x9b32
   12510:	movt	r2, #1
   12514:	bl	16188 <tcgetattr@plt+0x4dc0>
   12518:	mov	r0, #0
   1251c:	bl	11290 <exit@plt>
   12520:	mov	r0, #0
   12524:	bl	114c4 <tcgetattr@plt+0xfc>
   12528:	bl	112d8 <__errno_location@plt>
   1252c:	ldr	r4, [r0]
   12530:	mov	r0, #0
   12534:	mov	r1, #3
   12538:	mov	r2, sl
   1253c:	bl	15878 <tcgetattr@plt+0x44b0>
   12540:	mov	r3, r0
   12544:	movw	r2, #44263	; 0xace7
   12548:	movt	r2, #1
   1254c:	mov	r0, #1
   12550:	mov	r1, r4
   12554:	bl	11224 <error@plt>
   12558:	bl	112d8 <__errno_location@plt>
   1255c:	ldr	r4, [r0]
   12560:	movw	r1, #39915	; 0x9beb
   12564:	movt	r1, #1
   12568:	mov	r0, #0
   1256c:	mov	r2, #5
   12570:	bl	11170 <dcgettext@plt>
   12574:	mov	r5, r0
   12578:	mov	r0, #0
   1257c:	mov	r1, #3
   12580:	mov	r2, sl
   12584:	bl	15878 <tcgetattr@plt+0x44b0>
   12588:	mov	r3, r0
   1258c:	mov	r0, #1
   12590:	mov	r1, r4
   12594:	mov	r2, r5
   12598:	bl	11224 <error@plt>
   1259c:	movw	r1, #39697	; 0x9b11
   125a0:	movt	r1, #1
   125a4:	b	125bc <tcgetattr@plt+0x11f4>
   125a8:	movw	r1, #39767	; 0x9b57
   125ac:	movt	r1, #1
   125b0:	b	125bc <tcgetattr@plt+0x11f4>
   125b4:	movw	r1, #39846	; 0x9ba6
   125b8:	movt	r1, #1
   125bc:	mov	r0, #0
   125c0:	mov	r2, #5
   125c4:	bl	11170 <dcgettext@plt>
   125c8:	mov	r2, r0
   125cc:	mov	r0, #1
   125d0:	mov	r1, #0
   125d4:	bl	11224 <error@plt>
   125d8:	movw	r1, #39952	; 0x9c10
   125dc:	movt	r1, #1
   125e0:	mov	r0, #0
   125e4:	mov	r2, #5
   125e8:	bl	11170 <dcgettext@plt>
   125ec:	mov	r4, r0
   125f0:	mov	r0, #0
   125f4:	mov	r1, #3
   125f8:	mov	r2, sl
   125fc:	bl	15878 <tcgetattr@plt+0x44b0>
   12600:	mov	r3, r0
   12604:	mov	r0, #1
   12608:	mov	r1, #0
   1260c:	mov	r2, r4
   12610:	bl	11224 <error@plt>
   12614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12618:	add	fp, sp, #28
   1261c:	sub	sp, sp, #12
   12620:	str	r1, [sp]
   12624:	str	r0, [sp, #4]
   12628:	cmp	r3, #2
   1262c:	blt	12a7c <tcgetattr@plt+0x16b4>
   12630:	mov	r5, r3
   12634:	mov	sl, r2
   12638:	sub	r0, r3, #1
   1263c:	str	r0, [sp, #8]
   12640:	mov	r7, #1
   12644:	b	12918 <tcgetattr@plt+0x1550>
   12648:	cmp	r8, #0
   1264c:	bne	12a6c <tcgetattr@plt+0x16a4>
   12650:	mov	r0, r9
   12654:	movw	r1, #40455	; 0x9e07
   12658:	movt	r1, #1
   1265c:	bl	11110 <strcmp@plt>
   12660:	cmp	r0, #0
   12664:	mov	sl, r4
   12668:	beq	1273c <tcgetattr@plt+0x1374>
   1266c:	mov	r0, r9
   12670:	movw	r1, #40462	; 0x9e0e
   12674:	movt	r1, #1
   12678:	bl	11110 <strcmp@plt>
   1267c:	cmp	r0, #0
   12680:	beq	12768 <tcgetattr@plt+0x13a0>
   12684:	mov	r0, r9
   12688:	movw	r1, #40469	; 0x9e15
   1268c:	movt	r1, #1
   12690:	bl	11110 <strcmp@plt>
   12694:	cmp	r0, #0
   12698:	beq	127e8 <tcgetattr@plt+0x1420>
   1269c:	mov	r0, r9
   126a0:	movw	r1, #40474	; 0x9e1a
   126a4:	movt	r1, #1
   126a8:	bl	11110 <strcmp@plt>
   126ac:	cmp	r0, #0
   126b0:	beq	127b0 <tcgetattr@plt+0x13e8>
   126b4:	mov	r0, r9
   126b8:	movw	r1, #40479	; 0x9e1f
   126bc:	movt	r1, #1
   126c0:	bl	11110 <strcmp@plt>
   126c4:	cmp	r0, #0
   126c8:	beq	127b0 <tcgetattr@plt+0x13e8>
   126cc:	mov	r0, r9
   126d0:	movw	r1, #40487	; 0x9e27
   126d4:	movt	r1, #1
   126d8:	bl	11110 <strcmp@plt>
   126dc:	cmp	r0, #0
   126e0:	beq	12824 <tcgetattr@plt+0x145c>
   126e4:	mov	r0, r9
   126e8:	movw	r1, #40492	; 0x9e2c
   126ec:	movt	r1, #1
   126f0:	bl	11110 <strcmp@plt>
   126f4:	cmp	r0, #0
   126f8:	beq	12860 <tcgetattr@plt+0x1498>
   126fc:	mov	r0, r9
   12700:	movw	r1, #40456	; 0x9e08
   12704:	movt	r1, #1
   12708:	bl	11110 <strcmp@plt>
   1270c:	cmp	r0, #0
   12710:	beq	128c8 <tcgetattr@plt+0x1500>
   12714:	mov	r0, r9
   12718:	bl	13434 <tcgetattr@plt+0x206c>
   1271c:	cmn	r0, #1
   12720:	beq	128f4 <tcgetattr@plt+0x152c>
   12724:	ldr	r0, [sp, #4]
   12728:	cmp	r0, #0
   1272c:	bne	12a70 <tcgetattr@plt+0x16a8>
   12730:	mov	r0, #2
   12734:	mov	r1, r9
   12738:	b	12790 <tcgetattr@plt+0x13c8>
   1273c:	ldr	r0, [sp, #8]
   12740:	cmp	r7, r0
   12744:	addne	r7, r7, #1
   12748:	ldrne	r1, [sl, r7, lsl #2]
   1274c:	cmpne	r1, #0
   12750:	beq	12a84 <tcgetattr@plt+0x16bc>
   12754:	ldr	r0, [sp, #4]
   12758:	cmp	r0, #0
   1275c:	bne	12a70 <tcgetattr@plt+0x16a8>
   12760:	mov	r0, #0
   12764:	b	12790 <tcgetattr@plt+0x13c8>
   12768:	ldr	r0, [sp, #8]
   1276c:	cmp	r7, r0
   12770:	addne	r7, r7, #1
   12774:	ldrne	r1, [sl, r7, lsl #2]
   12778:	cmpne	r1, #0
   1277c:	beq	12a84 <tcgetattr@plt+0x16bc>
   12780:	ldr	r0, [sp, #4]
   12784:	cmp	r0, #0
   12788:	bne	12a70 <tcgetattr@plt+0x16a8>
   1278c:	mov	r0, #1
   12790:	ldr	r2, [fp, #8]
   12794:	bl	13108 <tcgetattr@plt+0x1d40>
   12798:	ldr	r0, [fp, #12]
   1279c:	mov	r1, #1
   127a0:	strb	r1, [r0]
   127a4:	ldr	r0, [fp, #16]
   127a8:	strb	r1, [r0]
   127ac:	b	12a70 <tcgetattr@plt+0x16a8>
   127b0:	ldr	r0, [sp, #8]
   127b4:	cmp	r7, r0
   127b8:	addne	r7, r7, #1
   127bc:	ldrne	r0, [sl, r7, lsl #2]
   127c0:	cmpne	r0, #0
   127c4:	beq	12a84 <tcgetattr@plt+0x16bc>
   127c8:	ldr	r1, [sp, #4]
   127cc:	cmp	r1, #0
   127d0:	bne	12a70 <tcgetattr@plt+0x16a8>
   127d4:	mvn	r1, #-2147483648	; 0x80000000
   127d8:	bl	13220 <tcgetattr@plt+0x1e58>
   127dc:	mov	r1, r0
   127e0:	mvn	r0, #0
   127e4:	b	12818 <tcgetattr@plt+0x1450>
   127e8:	ldr	r0, [sp, #8]
   127ec:	cmp	r7, r0
   127f0:	addne	r7, r7, #1
   127f4:	ldrne	r0, [sl, r7, lsl #2]
   127f8:	cmpne	r0, #0
   127fc:	beq	12a84 <tcgetattr@plt+0x16bc>
   12800:	ldr	r1, [sp, #4]
   12804:	cmp	r1, #0
   12808:	bne	12a70 <tcgetattr@plt+0x16a8>
   1280c:	mvn	r1, #-2147483648	; 0x80000000
   12810:	bl	13220 <tcgetattr@plt+0x1e58>
   12814:	mvn	r1, #0
   12818:	ldr	r2, [sp]
   1281c:	bl	13158 <tcgetattr@plt+0x1d90>
   12820:	b	12a70 <tcgetattr@plt+0x16a8>
   12824:	ldr	r0, [sp, #4]
   12828:	cmp	r0, #0
   1282c:	bne	12a70 <tcgetattr@plt+0x16a8>
   12830:	bl	12aec <tcgetattr@plt+0x1724>
   12834:	movw	r1, #49664	; 0xc200
   12838:	movt	r1, #2
   1283c:	str	r0, [r1]
   12840:	mov	r0, #0
   12844:	movw	r1, #49668	; 0xc204
   12848:	movt	r1, #2
   1284c:	str	r0, [r1]
   12850:	mov	r0, #0
   12854:	ldr	r1, [sp]
   12858:	bl	13280 <tcgetattr@plt+0x1eb8>
   1285c:	b	12a70 <tcgetattr@plt+0x16a8>
   12860:	ldr	r0, [sp, #8]
   12864:	cmp	r7, r0
   12868:	addne	r7, r7, #1
   1286c:	ldrne	r0, [sl, r7, lsl #2]
   12870:	cmpne	r0, #0
   12874:	beq	12a84 <tcgetattr@plt+0x16bc>
   12878:	mvn	r1, #0
   1287c:	bl	13220 <tcgetattr@plt+0x1e58>
   12880:	ldr	r1, [fp, #8]
   12884:	strb	r0, [r1, #16]
   12888:	cmp	r0, #256	; 0x100
   1288c:	bcc	12908 <tcgetattr@plt+0x1540>
   12890:	mov	r0, #0
   12894:	movw	r1, #40497	; 0x9e31
   12898:	movt	r1, #1
   1289c:	mov	r2, #5
   128a0:	bl	11170 <dcgettext@plt>
   128a4:	mov	r6, r0
   128a8:	ldr	r0, [sl, r7, lsl #2]
   128ac:	bl	159b8 <tcgetattr@plt+0x45f0>
   128b0:	mov	r3, r0
   128b4:	mov	r0, #0
   128b8:	mov	r1, #0
   128bc:	mov	r2, r6
   128c0:	bl	11224 <error@plt>
   128c4:	b	12908 <tcgetattr@plt+0x1540>
   128c8:	ldr	r0, [sp, #4]
   128cc:	cmp	r0, #0
   128d0:	bne	12a70 <tcgetattr@plt+0x16a8>
   128d4:	bl	12aec <tcgetattr@plt+0x1724>
   128d8:	movw	r1, #49664	; 0xc200
   128dc:	movt	r1, #2
   128e0:	str	r0, [r1]
   128e4:	ldr	r0, [fp, #8]
   128e8:	mov	r1, #0
   128ec:	bl	1336c <tcgetattr@plt+0x1fa4>
   128f0:	b	12a70 <tcgetattr@plt+0x16a8>
   128f4:	mov	r0, r9
   128f8:	ldr	r1, [fp, #8]
   128fc:	bl	13480 <tcgetattr@plt+0x20b8>
   12900:	cmp	r0, #0
   12904:	beq	12ae0 <tcgetattr@plt+0x1718>
   12908:	ldr	r0, [fp, #16]
   1290c:	mov	r1, #1
   12910:	strb	r1, [r0]
   12914:	b	12a70 <tcgetattr@plt+0x16a8>
   12918:	ldr	r0, [sl, r7, lsl #2]
   1291c:	cmp	r0, #0
   12920:	beq	12a70 <tcgetattr@plt+0x16a8>
   12924:	mov	r9, r0
   12928:	ldrb	r4, [r9], #1
   1292c:	cmp	r4, #45	; 0x2d
   12930:	movne	r9, r0
   12934:	mov	r0, r9
   12938:	movw	r1, #39761	; 0x9b51
   1293c:	movt	r1, #1
   12940:	bl	11110 <strcmp@plt>
   12944:	cmp	r0, #0
   12948:	beq	129c0 <tcgetattr@plt+0x15f8>
   1294c:	mov	r0, r9
   12950:	movw	r1, #40524	; 0x9e4c
   12954:	movt	r1, #1
   12958:	bl	11110 <strcmp@plt>
   1295c:	cmp	r0, #0
   12960:	movw	r6, #41784	; 0xa338
   12964:	movt	r6, #1
   12968:	beq	12994 <tcgetattr@plt+0x15cc>
   1296c:	movw	r6, #41784	; 0xa338
   12970:	movt	r6, #1
   12974:	ldr	r1, [r6, #20]
   12978:	cmp	r1, #0
   1297c:	beq	129d8 <tcgetattr@plt+0x1610>
   12980:	mov	r0, r9
   12984:	bl	11110 <strcmp@plt>
   12988:	add	r6, r6, #20
   1298c:	cmp	r0, #0
   12990:	bne	12974 <tcgetattr@plt+0x15ac>
   12994:	sub	r0, r4, #45	; 0x2d
   12998:	clz	r0, r0
   1299c:	lsr	r1, r0, #5
   129a0:	mov	r0, r6
   129a4:	ldr	r2, [fp, #8]
   129a8:	bl	12ba0 <tcgetattr@plt+0x17d8>
   129ac:	mov	r8, r0
   129b0:	ldr	r0, [fp, #16]
   129b4:	mov	r1, #1
   129b8:	strb	r1, [r0]
   129bc:	b	129dc <tcgetattr@plt+0x1614>
   129c0:	subs	r0, r4, #45	; 0x2d
   129c4:	movwne	r0, #1
   129c8:	movw	r1, #49424	; 0xc110
   129cc:	movt	r1, #2
   129d0:	str	r0, [r1]
   129d4:	b	12a70 <tcgetattr@plt+0x16a8>
   129d8:	mov	r8, #0
   129dc:	cmp	r8, #0
   129e0:	cmpeq	r4, #45	; 0x2d
   129e4:	beq	12ac0 <tcgetattr@plt+0x16f8>
   129e8:	cmp	r8, #0
   129ec:	bne	12a70 <tcgetattr@plt+0x16a8>
   129f0:	mov	r4, sl
   129f4:	mov	r0, r9
   129f8:	movw	r1, #41040	; 0xa050
   129fc:	movt	r1, #1
   12a00:	bl	11110 <strcmp@plt>
   12a04:	cmp	r0, #0
   12a08:	movw	sl, #43584	; 0xaa40
   12a0c:	movt	sl, #1
   12a10:	beq	12a3c <tcgetattr@plt+0x1674>
   12a14:	movw	sl, #43584	; 0xaa40
   12a18:	movt	sl, #1
   12a1c:	ldr	r1, [sl, #12]
   12a20:	cmp	r1, #0
   12a24:	beq	12648 <tcgetattr@plt+0x1280>
   12a28:	mov	r0, r9
   12a2c:	bl	11110 <strcmp@plt>
   12a30:	add	sl, sl, #12
   12a34:	cmp	r0, #0
   12a38:	bne	12a1c <tcgetattr@plt+0x1654>
   12a3c:	ldr	r0, [sp, #8]
   12a40:	cmp	r7, r0
   12a44:	addne	r7, r7, #1
   12a48:	ldrne	r1, [r4, r7, lsl #2]
   12a4c:	cmpne	r1, #0
   12a50:	beq	12a84 <tcgetattr@plt+0x16bc>
   12a54:	mov	r0, sl
   12a58:	ldr	r2, [fp, #8]
   12a5c:	bl	13024 <tcgetattr@plt+0x1c5c>
   12a60:	ldr	r0, [fp, #16]
   12a64:	mov	r1, #1
   12a68:	strb	r1, [r0]
   12a6c:	mov	sl, r4
   12a70:	add	r7, r7, #1
   12a74:	cmp	r7, r5
   12a78:	blt	12918 <tcgetattr@plt+0x1550>
   12a7c:	sub	sp, fp, #28
   12a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a84:	movw	r1, #40432	; 0x9df0
   12a88:	movt	r1, #1
   12a8c:	mov	r0, #0
   12a90:	mov	r2, #5
   12a94:	bl	11170 <dcgettext@plt>
   12a98:	mov	r4, r0
   12a9c:	mov	r0, r9
   12aa0:	bl	159b8 <tcgetattr@plt+0x45f0>
   12aa4:	mov	r3, r0
   12aa8:	mov	r0, #0
   12aac:	mov	r1, #0
   12ab0:	mov	r2, r4
   12ab4:	bl	11224 <error@plt>
   12ab8:	mov	r0, #1
   12abc:	bl	114c4 <tcgetattr@plt+0xfc>
   12ac0:	movw	r1, #40412	; 0x9ddc
   12ac4:	movt	r1, #1
   12ac8:	mov	r0, #0
   12acc:	mov	r2, #5
   12ad0:	bl	11170 <dcgettext@plt>
   12ad4:	mov	r4, r0
   12ad8:	sub	r0, r9, #1
   12adc:	b	12aa0 <tcgetattr@plt+0x16d8>
   12ae0:	movw	r1, #40412	; 0x9ddc
   12ae4:	movt	r1, #1
   12ae8:	b	12a8c <tcgetattr@plt+0x16c4>
   12aec:	push	{fp, lr}
   12af0:	mov	fp, sp
   12af4:	sub	sp, sp, #16
   12af8:	add	r1, sp, #8
   12afc:	mov	r0, #1
   12b00:	bl	13694 <tcgetattr@plt+0x22cc>
   12b04:	cmp	r0, #0
   12b08:	bne	12b20 <tcgetattr@plt+0x1758>
   12b0c:	ldrh	r0, [sp, #10]
   12b10:	cmp	r0, #0
   12b14:	beq	12b20 <tcgetattr@plt+0x1758>
   12b18:	mov	sp, fp
   12b1c:	pop	{fp, pc}
   12b20:	movw	r0, #41441	; 0xa1e1
   12b24:	movt	r0, #1
   12b28:	bl	1123c <getenv@plt>
   12b2c:	cmp	r0, #0
   12b30:	beq	12b64 <tcgetattr@plt+0x179c>
   12b34:	movw	r1, #37058	; 0x90c2
   12b38:	movt	r1, #1
   12b3c:	str	r1, [sp]
   12b40:	add	r3, sp, #4
   12b44:	mov	r1, #0
   12b48:	mov	r2, #0
   12b4c:	bl	1677c <tcgetattr@plt+0x53b4>
   12b50:	cmp	r0, #0
   12b54:	bne	12b64 <tcgetattr@plt+0x179c>
   12b58:	ldr	r0, [sp, #4]
   12b5c:	cmp	r0, #0
   12b60:	bgt	12b6c <tcgetattr@plt+0x17a4>
   12b64:	mov	r0, #80	; 0x50
   12b68:	str	r0, [sp, #4]
   12b6c:	ldr	r0, [sp, #4]
   12b70:	mov	sp, fp
   12b74:	pop	{fp, pc}
   12b78:	cmp	r0, #2
   12b7c:	beq	12b94 <tcgetattr@plt+0x17cc>
   12b80:	cmp	r0, #1
   12b84:	beq	12b98 <tcgetattr@plt+0x17d0>
   12b88:	cmp	r0, #0
   12b8c:	bxne	lr
   12b90:	b	1387c <tcgetattr@plt+0x24b4>
   12b94:	b	13cd8 <tcgetattr@plt+0x2910>
   12b98:	mov	r0, r1
   12b9c:	b	13acc <tcgetattr@plt+0x2704>
   12ba0:	push	{r4, r5, r6, sl, fp, lr}
   12ba4:	add	fp, sp, #16
   12ba8:	mov	r4, r2
   12bac:	mov	r5, r1
   12bb0:	mov	r6, r0
   12bb4:	cmp	r1, #0
   12bb8:	beq	12bcc <tcgetattr@plt+0x1804>
   12bbc:	ldrb	r1, [r6, #8]
   12bc0:	mov	r0, #0
   12bc4:	tst	r1, #4
   12bc8:	beq	12c04 <tcgetattr@plt+0x183c>
   12bcc:	ldr	r0, [r6, #4]
   12bd0:	mov	r1, r4
   12bd4:	bl	13528 <tcgetattr@plt+0x2160>
   12bd8:	cmp	r0, #0
   12bdc:	beq	12c08 <tcgetattr@plt+0x1840>
   12be0:	ldr	r1, [r6, #12]
   12be4:	ldr	r2, [r6, #16]
   12be8:	ldr	r3, [r0]
   12bec:	bic	r2, r3, r2
   12bf0:	cmp	r5, #0
   12bf4:	orreq	r1, r2, r1
   12bf8:	bicne	r1, r2, r1
   12bfc:	str	r1, [r0]
   12c00:	mov	r0, #1
   12c04:	pop	{r4, r5, r6, sl, fp, pc}
   12c08:	ldr	r6, [r6]
   12c0c:	movw	r1, #40900	; 0x9fc4
   12c10:	movt	r1, #1
   12c14:	mov	r0, r6
   12c18:	bl	11110 <strcmp@plt>
   12c1c:	cmp	r0, #0
   12c20:	beq	12dd8 <tcgetattr@plt+0x1a10>
   12c24:	movw	r1, #40906	; 0x9fca
   12c28:	movt	r1, #1
   12c2c:	mov	r0, r6
   12c30:	bl	11110 <strcmp@plt>
   12c34:	cmp	r0, #0
   12c38:	beq	12dd8 <tcgetattr@plt+0x1a10>
   12c3c:	movw	r1, #40913	; 0x9fd1
   12c40:	movt	r1, #1
   12c44:	mov	r0, r6
   12c48:	bl	11110 <strcmp@plt>
   12c4c:	cmp	r0, #0
   12c50:	beq	12e04 <tcgetattr@plt+0x1a3c>
   12c54:	movw	r1, #40834	; 0x9f82
   12c58:	movt	r1, #1
   12c5c:	mov	r0, r6
   12c60:	bl	11110 <strcmp@plt>
   12c64:	cmp	r0, #0
   12c68:	beq	12e20 <tcgetattr@plt+0x1a58>
   12c6c:	movw	r1, #40918	; 0x9fd6
   12c70:	movt	r1, #1
   12c74:	mov	r0, r6
   12c78:	bl	11110 <strcmp@plt>
   12c7c:	cmp	r0, #0
   12c80:	beq	12e4c <tcgetattr@plt+0x1a84>
   12c84:	movw	r1, #40921	; 0x9fd9
   12c88:	movt	r1, #1
   12c8c:	mov	r0, r6
   12c90:	bl	11110 <strcmp@plt>
   12c94:	cmp	r0, #0
   12c98:	beq	12e70 <tcgetattr@plt+0x1aa8>
   12c9c:	movw	r1, #40950	; 0x9ff6
   12ca0:	movt	r1, #1
   12ca4:	mov	r0, r6
   12ca8:	bl	11110 <strcmp@plt>
   12cac:	cmp	r0, #0
   12cb0:	beq	12e7c <tcgetattr@plt+0x1ab4>
   12cb4:	movw	r1, #40937	; 0x9fe9
   12cb8:	movt	r1, #1
   12cbc:	mov	r0, r6
   12cc0:	bl	11110 <strcmp@plt>
   12cc4:	cmp	r0, #0
   12cc8:	beq	12e94 <tcgetattr@plt+0x1acc>
   12ccc:	movw	r1, #40943	; 0x9fef
   12cd0:	movt	r1, #1
   12cd4:	mov	r0, r6
   12cd8:	bl	11110 <strcmp@plt>
   12cdc:	cmp	r0, #0
   12ce0:	beq	12f14 <tcgetattr@plt+0x1b4c>
   12ce4:	movw	r1, #40933	; 0x9fe5
   12ce8:	movt	r1, #1
   12cec:	mov	r0, r6
   12cf0:	bl	11110 <strcmp@plt>
   12cf4:	cmp	r0, #0
   12cf8:	beq	12ebc <tcgetattr@plt+0x1af4>
   12cfc:	movw	r1, #40926	; 0x9fde
   12d00:	movt	r1, #1
   12d04:	mov	r0, r6
   12d08:	bl	11110 <strcmp@plt>
   12d0c:	cmp	r0, #0
   12d10:	beq	12ebc <tcgetattr@plt+0x1af4>
   12d14:	movw	r1, #40957	; 0x9ffd
   12d18:	movt	r1, #1
   12d1c:	mov	r0, r6
   12d20:	bl	11110 <strcmp@plt>
   12d24:	cmp	r0, #0
   12d28:	beq	12fa0 <tcgetattr@plt+0x1bd8>
   12d2c:	movw	r1, #40965	; 0xa005
   12d30:	movt	r1, #1
   12d34:	mov	r0, r6
   12d38:	bl	11110 <strcmp@plt>
   12d3c:	cmp	r0, #0
   12d40:	beq	12fdc <tcgetattr@plt+0x1c14>
   12d44:	movw	r1, #40970	; 0xa00a
   12d48:	movt	r1, #1
   12d4c:	mov	r0, r6
   12d50:	bl	11110 <strcmp@plt>
   12d54:	cmp	r0, #0
   12d58:	beq	12fb8 <tcgetattr@plt+0x1bf0>
   12d5c:	movw	r1, #40976	; 0xa010
   12d60:	movt	r1, #1
   12d64:	mov	r0, r6
   12d68:	bl	11110 <strcmp@plt>
   12d6c:	cmp	r0, #0
   12d70:	beq	12fb8 <tcgetattr@plt+0x1bf0>
   12d74:	movw	r1, #40982	; 0xa016
   12d78:	movt	r1, #1
   12d7c:	mov	r0, r6
   12d80:	bl	11110 <strcmp@plt>
   12d84:	cmp	r0, #0
   12d88:	beq	13014 <tcgetattr@plt+0x1c4c>
   12d8c:	movw	r1, #40986	; 0xa01a
   12d90:	movt	r1, #1
   12d94:	mov	r0, r6
   12d98:	bl	11110 <strcmp@plt>
   12d9c:	mov	r1, r0
   12da0:	mov	r0, #1
   12da4:	cmp	r1, #0
   12da8:	popne	{r4, r5, r6, sl, fp, pc}
   12dac:	mov	r1, #3
   12db0:	strb	r1, [r4, #17]
   12db4:	movw	r1, #5503	; 0x157f
   12db8:	strh	r1, [r4, #19]
   12dbc:	ldr	r1, [r4]
   12dc0:	ldr	r2, [r4, #12]
   12dc4:	orr	r2, r2, #2576	; 0xa10
   12dc8:	str	r2, [r4, #12]
   12dcc:	bic	r1, r1, #2048	; 0x800
   12dd0:	str	r1, [r4]
   12dd4:	pop	{r4, r5, r6, sl, fp, pc}
   12dd8:	ldr	r0, [r4, #8]
   12ddc:	cmp	r5, #0
   12de0:	beq	12df4 <tcgetattr@plt+0x1a2c>
   12de4:	bic	r0, r0, #304	; 0x130
   12de8:	orr	r0, r0, #48	; 0x30
   12dec:	str	r0, [r4, #8]
   12df0:	b	12c00 <tcgetattr@plt+0x1838>
   12df4:	bic	r0, r0, #816	; 0x330
   12df8:	orr	r0, r0, #288	; 0x120
   12dfc:	str	r0, [r4, #8]
   12e00:	b	12c00 <tcgetattr@plt+0x1838>
   12e04:	ldr	r0, [r4, #8]
   12e08:	cmp	r5, #0
   12e0c:	bne	12de4 <tcgetattr@plt+0x1a1c>
   12e10:	bic	r0, r0, #816	; 0x330
   12e14:	orr	r0, r0, #800	; 0x320
   12e18:	str	r0, [r4, #8]
   12e1c:	b	12c00 <tcgetattr@plt+0x1838>
   12e20:	ldr	r0, [r4]
   12e24:	cmp	r5, #0
   12e28:	beq	12e58 <tcgetattr@plt+0x1a90>
   12e2c:	mov	r1, #4
   12e30:	bfi	r0, r1, #6, #3
   12e34:	str	r0, [r4]
   12e38:	ldr	r0, [r4, #4]
   12e3c:	bic	r0, r0, #44	; 0x2c
   12e40:	orr	r0, r0, #4
   12e44:	str	r0, [r4, #4]
   12e48:	b	12c00 <tcgetattr@plt+0x1838>
   12e4c:	movw	r0, #5503	; 0x157f
   12e50:	strh	r0, [r4, #19]
   12e54:	b	12c00 <tcgetattr@plt+0x1838>
   12e58:	bic	r0, r0, #256	; 0x100
   12e5c:	str	r0, [r4]
   12e60:	ldr	r0, [r4, #4]
   12e64:	bic	r0, r0, #4
   12e68:	str	r0, [r4, #4]
   12e6c:	b	12c00 <tcgetattr@plt+0x1838>
   12e70:	mov	r0, r4
   12e74:	bl	13580 <tcgetattr@plt+0x21b8>
   12e78:	b	12c00 <tcgetattr@plt+0x1838>
   12e7c:	ldr	r0, [r4, #12]
   12e80:	cmp	r5, #0
   12e84:	biceq	r0, r0, #2
   12e88:	orrne	r0, r0, #2
   12e8c:	str	r0, [r4, #12]
   12e90:	b	12c00 <tcgetattr@plt+0x1838>
   12e94:	ldr	r0, [r4, #8]
   12e98:	bic	r0, r0, #304	; 0x130
   12e9c:	cmp	r5, #0
   12ea0:	beq	12f44 <tcgetattr@plt+0x1b7c>
   12ea4:	orr	r0, r0, #288	; 0x120
   12ea8:	str	r0, [r4, #8]
   12eac:	ldr	r0, [r4]
   12eb0:	orr	r0, r0, #32
   12eb4:	str	r0, [r4]
   12eb8:	b	12c00 <tcgetattr@plt+0x1838>
   12ebc:	ldrb	r1, [r6]
   12ec0:	subs	r0, r1, #99	; 0x63
   12ec4:	movwne	r0, #1
   12ec8:	subs	r1, r1, #114	; 0x72
   12ecc:	movwne	r1, #1
   12ed0:	eor	r2, r5, #1
   12ed4:	orr	r1, r1, r2
   12ed8:	cmp	r1, #1
   12edc:	bne	12f5c <tcgetattr@plt+0x1b94>
   12ee0:	orrs	r0, r0, r5
   12ee4:	beq	12f5c <tcgetattr@plt+0x1b94>
   12ee8:	mov	r0, #0
   12eec:	str	r0, [r4]
   12ef0:	mov	r0, #256	; 0x100
   12ef4:	strh	r0, [r4, #22]
   12ef8:	ldr	r0, [r4, #4]
   12efc:	ldr	r1, [r4, #12]
   12f00:	bic	r0, r0, #1
   12f04:	str	r0, [r4, #4]
   12f08:	bic	r0, r1, #7
   12f0c:	str	r0, [r4, #12]
   12f10:	b	12c00 <tcgetattr@plt+0x1838>
   12f14:	ldr	r0, [r4, #8]
   12f18:	bic	r0, r0, #304	; 0x130
   12f1c:	cmp	r5, #0
   12f20:	beq	12f80 <tcgetattr@plt+0x1bb8>
   12f24:	orr	r0, r0, #288	; 0x120
   12f28:	str	r0, [r4, #8]
   12f2c:	ldm	r4, {r0, r1}
   12f30:	orr	r0, r0, #32
   12f34:	str	r0, [r4]
   12f38:	orr	r0, r1, #1
   12f3c:	str	r0, [r4, #4]
   12f40:	b	12c00 <tcgetattr@plt+0x1838>
   12f44:	orr	r0, r0, #48	; 0x30
   12f48:	str	r0, [r4, #8]
   12f4c:	ldr	r0, [r4]
   12f50:	bic	r0, r0, #32
   12f54:	str	r0, [r4]
   12f58:	b	12c00 <tcgetattr@plt+0x1838>
   12f5c:	ldm	r4, {r0, r1}
   12f60:	ldr	r2, [r4, #12]
   12f64:	movw	r3, #1318	; 0x526
   12f68:	orr	r0, r0, r3
   12f6c:	orr	r1, r1, #1
   12f70:	stm	r4, {r0, r1}
   12f74:	orr	r0, r2, #3
   12f78:	str	r0, [r4, #12]
   12f7c:	b	12c00 <tcgetattr@plt+0x1838>
   12f80:	orr	r0, r0, #48	; 0x30
   12f84:	str	r0, [r4, #8]
   12f88:	ldm	r4, {r0, r1}
   12f8c:	bic	r0, r0, #32
   12f90:	str	r0, [r4]
   12f94:	bic	r0, r1, #1
   12f98:	str	r0, [r4, #4]
   12f9c:	b	12c00 <tcgetattr@plt+0x1838>
   12fa0:	ldr	r0, [r4]
   12fa4:	cmp	r5, #0
   12fa8:	biceq	r0, r0, #2048	; 0x800
   12fac:	orrne	r0, r0, #2048	; 0x800
   12fb0:	str	r0, [r4]
   12fb4:	b	12c00 <tcgetattr@plt+0x1838>
   12fb8:	ldr	r0, [r4, #12]
   12fbc:	cmp	r5, #0
   12fc0:	beq	12ff4 <tcgetattr@plt+0x1c2c>
   12fc4:	bic	r0, r0, #4
   12fc8:	str	r0, [r4, #12]
   12fcc:	ldm	r4, {r0, r1}
   12fd0:	bic	r0, r0, #512	; 0x200
   12fd4:	bic	r1, r1, #2
   12fd8:	b	13008 <tcgetattr@plt+0x1c40>
   12fdc:	ldr	r0, [r4, #4]
   12fe0:	cmp	r5, #0
   12fe4:	biceq	r0, r0, #6144	; 0x1800
   12fe8:	orrne	r0, r0, #6144	; 0x1800
   12fec:	str	r0, [r4, #4]
   12ff0:	b	12c00 <tcgetattr@plt+0x1838>
   12ff4:	orr	r0, r0, #4
   12ff8:	str	r0, [r4, #12]
   12ffc:	ldm	r4, {r0, r1}
   13000:	orr	r0, r0, #512	; 0x200
   13004:	orr	r1, r1, #2
   13008:	str	r0, [r4]
   1300c:	str	r1, [r4, #4]
   13010:	b	12c00 <tcgetattr@plt+0x1838>
   13014:	ldr	r0, [r4, #12]
   13018:	orr	r0, r0, #2576	; 0xa10
   1301c:	str	r0, [r4, #12]
   13020:	b	12c00 <tcgetattr@plt+0x1838>
   13024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13028:	add	fp, sp, #24
   1302c:	mov	r9, r2
   13030:	mov	r6, r1
   13034:	mov	r5, r0
   13038:	ldr	r4, [r0]
   1303c:	movw	r1, #41107	; 0xa093
   13040:	movt	r1, #1
   13044:	mov	r0, r4
   13048:	bl	11110 <strcmp@plt>
   1304c:	cmp	r0, #0
   13050:	beq	130e8 <tcgetattr@plt+0x1d20>
   13054:	movw	r1, #41111	; 0xa097
   13058:	movt	r1, #1
   1305c:	mov	r0, r4
   13060:	bl	11110 <strcmp@plt>
   13064:	cmp	r0, #0
   13068:	beq	130e8 <tcgetattr@plt+0x1d20>
   1306c:	ldrb	r4, [r6]
   13070:	cmp	r4, #0
   13074:	ldrbne	r8, [r6, #1]
   13078:	cmpne	r8, #0
   1307c:	bne	13090 <tcgetattr@plt+0x1cc8>
   13080:	mov	r0, r4
   13084:	bl	13690 <tcgetattr@plt+0x22c8>
   13088:	mov	r7, r4
   1308c:	b	130f8 <tcgetattr@plt+0x1d30>
   13090:	movw	r1, #41116	; 0xa09c
   13094:	movt	r1, #1
   13098:	mov	r0, r6
   1309c:	bl	11110 <strcmp@plt>
   130a0:	mov	r7, #0
   130a4:	cmp	r0, #0
   130a8:	beq	130f8 <tcgetattr@plt+0x1d30>
   130ac:	movw	r1, #41119	; 0xa09f
   130b0:	movt	r1, #1
   130b4:	mov	r0, r6
   130b8:	bl	11110 <strcmp@plt>
   130bc:	cmp	r0, #0
   130c0:	beq	130f8 <tcgetattr@plt+0x1d30>
   130c4:	cmp	r4, #94	; 0x5e
   130c8:	bne	130e8 <tcgetattr@plt+0x1d20>
   130cc:	mov	r7, #127	; 0x7f
   130d0:	cmp	r8, #63	; 0x3f
   130d4:	beq	130f8 <tcgetattr@plt+0x1d30>
   130d8:	mov	r0, r8
   130dc:	bl	13690 <tcgetattr@plt+0x22c8>
   130e0:	and	r7, r8, #159	; 0x9f
   130e4:	b	130f8 <tcgetattr@plt+0x1d30>
   130e8:	mov	r0, r6
   130ec:	mov	r1, #255	; 0xff
   130f0:	bl	13220 <tcgetattr@plt+0x1e58>
   130f4:	mov	r7, r0
   130f8:	ldr	r0, [r5, #8]
   130fc:	add	r0, r9, r0
   13100:	strb	r7, [r0, #17]
   13104:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13108:	push	{r4, r5, r6, sl, fp, lr}
   1310c:	add	fp, sp, #16
   13110:	mov	r4, r2
   13114:	mov	r6, r0
   13118:	mov	r0, r1
   1311c:	bl	13434 <tcgetattr@plt+0x206c>
   13120:	mov	r5, r0
   13124:	orr	r0, r6, #2
   13128:	cmp	r0, #2
   1312c:	bne	1313c <tcgetattr@plt+0x1d74>
   13130:	mov	r0, r4
   13134:	mov	r1, r5
   13138:	bl	112c0 <cfsetispeed@plt>
   1313c:	sub	r0, r6, #1
   13140:	cmp	r0, #1
   13144:	pophi	{r4, r5, r6, sl, fp, pc}
   13148:	mov	r0, r4
   1314c:	mov	r1, r5
   13150:	pop	{r4, r5, r6, sl, fp, lr}
   13154:	b	111b8 <cfsetospeed@plt>
   13158:	push	{r4, r5, r6, r7, fp, lr}
   1315c:	add	fp, sp, #16
   13160:	sub	sp, sp, #8
   13164:	mov	r4, r2
   13168:	mov	r5, r1
   1316c:	mov	r6, r0
   13170:	mov	r1, sp
   13174:	mov	r0, #0
   13178:	bl	13694 <tcgetattr@plt+0x22cc>
   1317c:	cmp	r0, #0
   13180:	beq	131a0 <tcgetattr@plt+0x1dd8>
   13184:	bl	112d8 <__errno_location@plt>
   13188:	ldr	r7, [r0]
   1318c:	mov	r0, #0
   13190:	cmp	r7, #22
   13194:	bne	131fc <tcgetattr@plt+0x1e34>
   13198:	str	r0, [sp, #4]
   1319c:	str	r0, [sp]
   131a0:	cmp	r6, #0
   131a4:	strhge	r6, [sp]
   131a8:	cmp	r5, #0
   131ac:	strhge	r5, [sp, #2]
   131b0:	mov	r2, sp
   131b4:	mov	r0, #0
   131b8:	movw	r1, #21524	; 0x5414
   131bc:	bl	111d0 <ioctl@plt>
   131c0:	cmp	r0, #0
   131c4:	subeq	sp, fp, #16
   131c8:	popeq	{r4, r5, r6, r7, fp, pc}
   131cc:	bl	112d8 <__errno_location@plt>
   131d0:	ldr	r5, [r0]
   131d4:	mov	r0, #0
   131d8:	mov	r1, #3
   131dc:	mov	r2, r4
   131e0:	bl	15878 <tcgetattr@plt+0x44b0>
   131e4:	mov	r3, r0
   131e8:	movw	r2, #44263	; 0xace7
   131ec:	movt	r2, #1
   131f0:	mov	r0, #1
   131f4:	mov	r1, r5
   131f8:	bl	11224 <error@plt>
   131fc:	mov	r1, #3
   13200:	mov	r2, r4
   13204:	bl	15878 <tcgetattr@plt+0x44b0>
   13208:	mov	r3, r0
   1320c:	movw	r2, #44263	; 0xace7
   13210:	movt	r2, #1
   13214:	mov	r0, #1
   13218:	mov	r1, r7
   1321c:	bl	11224 <error@plt>
   13220:	push	{r4, r5, r6, sl, fp, lr}
   13224:	add	fp, sp, #16
   13228:	sub	sp, sp, #24
   1322c:	mov	r4, r1
   13230:	mov	r5, r0
   13234:	mov	r6, #0
   13238:	movw	r1, #41128	; 0xa0a8
   1323c:	movt	r1, #1
   13240:	mov	r0, #0
   13244:	mov	r2, #5
   13248:	bl	11170 <dcgettext@plt>
   1324c:	movw	r1, #41125	; 0xa0a5
   13250:	movt	r1, #1
   13254:	stm	sp, {r4, r6}
   13258:	str	r1, [sp, #8]
   1325c:	str	r0, [sp, #12]
   13260:	str	r6, [sp, #16]
   13264:	mov	r0, r5
   13268:	mov	r1, #0
   1326c:	mov	r2, #0
   13270:	mov	r3, #0
   13274:	bl	16684 <tcgetattr@plt+0x52bc>
   13278:	sub	sp, fp, #16
   1327c:	pop	{r4, r5, r6, sl, fp, pc}
   13280:	push	{r4, r5, r6, sl, fp, lr}
   13284:	add	fp, sp, #16
   13288:	sub	sp, sp, #8
   1328c:	mov	r4, r1
   13290:	mov	r5, r0
   13294:	mov	r1, sp
   13298:	mov	r0, #0
   1329c:	bl	13694 <tcgetattr@plt+0x22cc>
   132a0:	cmp	r0, #0
   132a4:	beq	132c8 <tcgetattr@plt+0x1f00>
   132a8:	bl	112d8 <__errno_location@plt>
   132ac:	ldr	r6, [r0]
   132b0:	cmp	r6, #22
   132b4:	bne	13308 <tcgetattr@plt+0x1f40>
   132b8:	cmp	r5, #0
   132bc:	beq	13330 <tcgetattr@plt+0x1f68>
   132c0:	sub	sp, fp, #16
   132c4:	pop	{r4, r5, r6, sl, fp, pc}
   132c8:	movw	r1, #41193	; 0xa0e9
   132cc:	movt	r1, #1
   132d0:	movw	r0, #41214	; 0xa0fe
   132d4:	movt	r0, #1
   132d8:	cmp	r5, #0
   132dc:	movne	r0, r1
   132e0:	ldrh	r2, [sp, #2]
   132e4:	ldrh	r1, [sp]
   132e8:	bl	136a0 <tcgetattr@plt+0x22d8>
   132ec:	cmp	r5, #0
   132f0:	movweq	r0, #49668	; 0xc204
   132f4:	movteq	r0, #2
   132f8:	moveq	r1, #0
   132fc:	streq	r1, [r0]
   13300:	sub	sp, fp, #16
   13304:	pop	{r4, r5, r6, sl, fp, pc}
   13308:	mov	r0, #0
   1330c:	mov	r1, #3
   13310:	mov	r2, r4
   13314:	bl	15878 <tcgetattr@plt+0x44b0>
   13318:	mov	r3, r0
   1331c:	movw	r2, #44263	; 0xace7
   13320:	movt	r2, #1
   13324:	mov	r0, #1
   13328:	mov	r1, r6
   1332c:	bl	11224 <error@plt>
   13330:	movw	r1, #41153	; 0xa0c1
   13334:	movt	r1, #1
   13338:	mov	r0, #0
   1333c:	mov	r2, #5
   13340:	bl	11170 <dcgettext@plt>
   13344:	mov	r5, r0
   13348:	mov	r0, #0
   1334c:	mov	r1, #3
   13350:	mov	r2, r4
   13354:	bl	15878 <tcgetattr@plt+0x44b0>
   13358:	mov	r3, r0
   1335c:	mov	r0, #1
   13360:	mov	r1, #0
   13364:	mov	r2, r5
   13368:	bl	11224 <error@plt>
   1336c:	push	{r4, r5, r6, r7, fp, lr}
   13370:	add	fp, sp, #16
   13374:	mov	r4, r1
   13378:	mov	r5, r0
   1337c:	bl	1117c <cfgetispeed@plt>
   13380:	cmp	r0, #0
   13384:	beq	133a4 <tcgetattr@plt+0x1fdc>
   13388:	mov	r0, r5
   1338c:	bl	1117c <cfgetispeed@plt>
   13390:	mov	r6, r0
   13394:	mov	r0, r5
   13398:	bl	112cc <cfgetospeed@plt>
   1339c:	cmp	r6, r0
   133a0:	bne	133d8 <tcgetattr@plt+0x2010>
   133a4:	movw	r0, #41239	; 0xa117
   133a8:	movt	r0, #1
   133ac:	movw	r6, #41259	; 0xa12b
   133b0:	movt	r6, #1
   133b4:	cmp	r4, #0
   133b8:	movne	r6, r0
   133bc:	mov	r0, r5
   133c0:	bl	112cc <cfgetospeed@plt>
   133c4:	bl	1376c <tcgetattr@plt+0x23a4>
   133c8:	mov	r1, r0
   133cc:	mov	r0, r6
   133d0:	bl	136a0 <tcgetattr@plt+0x22d8>
   133d4:	b	1341c <tcgetattr@plt+0x2054>
   133d8:	movw	r0, #41221	; 0xa105
   133dc:	movt	r0, #1
   133e0:	movw	r6, #41255	; 0xa127
   133e4:	movt	r6, #1
   133e8:	cmp	r4, #0
   133ec:	movne	r6, r0
   133f0:	mov	r0, r5
   133f4:	bl	1117c <cfgetispeed@plt>
   133f8:	bl	1376c <tcgetattr@plt+0x23a4>
   133fc:	mov	r7, r0
   13400:	mov	r0, r5
   13404:	bl	112cc <cfgetospeed@plt>
   13408:	bl	1376c <tcgetattr@plt+0x23a4>
   1340c:	mov	r2, r0
   13410:	mov	r0, r6
   13414:	mov	r1, r7
   13418:	bl	136a0 <tcgetattr@plt+0x22d8>
   1341c:	cmp	r4, #0
   13420:	movweq	r0, #49668	; 0xc204
   13424:	movteq	r0, #2
   13428:	moveq	r1, #0
   1342c:	streq	r1, [r0]
   13430:	pop	{r4, r5, r6, r7, fp, pc}
   13434:	push	{r4, r5, r6, sl, fp, lr}
   13438:	add	fp, sp, #16
   1343c:	mov	r4, r0
   13440:	mov	r5, #0
   13444:	movw	r6, #43812	; 0xab24
   13448:	movt	r6, #1
   1344c:	b	13460 <tcgetattr@plt+0x2098>
   13450:	add	r5, r5, #12
   13454:	cmp	r5, #408	; 0x198
   13458:	mvneq	r0, #0
   1345c:	popeq	{r4, r5, r6, sl, fp, pc}
   13460:	ldr	r1, [r6, r5]
   13464:	mov	r0, r4
   13468:	bl	11110 <strcmp@plt>
   1346c:	cmp	r0, #0
   13470:	bne	13450 <tcgetattr@plt+0x2088>
   13474:	add	r0, r6, r5
   13478:	ldr	r0, [r0, #4]
   1347c:	pop	{r4, r5, r6, sl, fp, pc}
   13480:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13484:	add	fp, sp, #24
   13488:	sub	sp, sp, #24
   1348c:	mov	r5, r1
   13490:	mov	r8, #0
   13494:	add	r6, sp, #8
   13498:	add	r7, sp, #4
   1349c:	mov	r4, #0
   134a0:	mov	r1, r7
   134a4:	mov	r2, r6
   134a8:	bl	137a0 <tcgetattr@plt+0x23d8>
   134ac:	cmp	r0, #0
   134b0:	bne	1351c <tcgetattr@plt+0x2154>
   134b4:	ldr	r0, [sp, #4]
   134b8:	add	r6, r6, #4
   134bc:	add	r4, r4, #1
   134c0:	add	r0, r0, #1
   134c4:	cmp	r4, #4
   134c8:	bcc	134a0 <tcgetattr@plt+0x20d8>
   134cc:	add	r7, sp, #8
   134d0:	ldm	r7, {r1, r2, r3, r7}
   134d4:	stm	r5, {r1, r2, r3, r7}
   134d8:	add	r6, r5, #17
   134dc:	mov	r8, #0
   134e0:	add	r5, sp, #4
   134e4:	mov	r7, #0
   134e8:	add	r2, r6, r7
   134ec:	subs	r3, r7, #31
   134f0:	movwne	r3, #58	; 0x3a
   134f4:	mov	r1, r5
   134f8:	bl	13808 <tcgetattr@plt+0x2440>
   134fc:	cmp	r0, #0
   13500:	bne	1351c <tcgetattr@plt+0x2154>
   13504:	ldr	r0, [sp, #4]
   13508:	add	r7, r7, #1
   1350c:	add	r0, r0, #1
   13510:	cmp	r7, #32
   13514:	bcc	134e8 <tcgetattr@plt+0x2120>
   13518:	mov	r8, #1
   1351c:	mov	r0, r8
   13520:	sub	sp, fp, #24
   13524:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13528:	cmp	r0, #4
   1352c:	bhi	13574 <tcgetattr@plt+0x21ac>
   13530:	mov	r2, r0
   13534:	mov	r0, #0
   13538:	add	r3, pc, #0
   1353c:	ldr	pc, [r3, r2, lsl #2]
   13540:	andeq	r3, r1, r4, asr r5
   13544:	andeq	r3, r1, r4, ror #10
   13548:	andeq	r3, r1, ip, ror #10
   1354c:	andeq	r3, r1, ip, asr r5
   13550:	andeq	r3, r1, r8, asr r5
   13554:	add	r0, r1, #8
   13558:	bx	lr
   1355c:	add	r0, r1, #12
   13560:	bx	lr
   13564:	mov	r0, r1
   13568:	bx	lr
   1356c:	add	r0, r1, #4
   13570:	bx	lr
   13574:	push	{fp, lr}
   13578:	mov	fp, sp
   1357c:	bl	11398 <abort@plt>
   13580:	push	{r4, r5, r6, r7, fp, lr}
   13584:	add	fp, sp, #16
   13588:	mov	r4, r0
   1358c:	mov	r0, #0
   13590:	movw	r1, #43584	; 0xaa40
   13594:	movt	r1, #1
   13598:	add	r2, r1, r0
   1359c:	ldr	r3, [r2, #8]
   135a0:	add	r3, r4, r3
   135a4:	ldrb	r2, [r2, #4]
   135a8:	strb	r2, [r3, #17]
   135ac:	add	r0, r0, #12
   135b0:	cmp	r0, #216	; 0xd8
   135b4:	bne	13598 <tcgetattr@plt+0x21d0>
   135b8:	movw	r5, #63756	; 0xf90c
   135bc:	movt	r5, #65535	; 0xffff
   135c0:	movw	r6, #41784	; 0xa338
   135c4:	movt	r6, #1
   135c8:	b	135d4 <tcgetattr@plt+0x220c>
   135cc:	adds	r5, r5, #20
   135d0:	popeq	{r4, r5, r6, r7, fp, pc}
   135d4:	add	r7, r6, r5
   135d8:	ldrb	r0, [r7, #1788]	; 0x6fc
   135dc:	tst	r0, #16
   135e0:	bne	135cc <tcgetattr@plt+0x2204>
   135e4:	tst	r0, #1
   135e8:	bne	13620 <tcgetattr@plt+0x2258>
   135ec:	tst	r0, #2
   135f0:	beq	135cc <tcgetattr@plt+0x2204>
   135f4:	ldr	r0, [r7, #1784]	; 0x6f8
   135f8:	mov	r1, r4
   135fc:	bl	13528 <tcgetattr@plt+0x2160>
   13600:	cmp	r0, #0
   13604:	beq	13670 <tcgetattr@plt+0x22a8>
   13608:	ldr	r1, [r7, #1792]	; 0x700
   1360c:	ldr	r2, [r7, #1796]	; 0x704
   13610:	ldr	r3, [r0]
   13614:	bic	r2, r3, r2
   13618:	bic	r1, r2, r1
   1361c:	b	13648 <tcgetattr@plt+0x2280>
   13620:	ldr	r0, [r7, #1784]	; 0x6f8
   13624:	mov	r1, r4
   13628:	bl	13528 <tcgetattr@plt+0x2160>
   1362c:	cmp	r0, #0
   13630:	beq	13650 <tcgetattr@plt+0x2288>
   13634:	ldr	r1, [r7, #1792]	; 0x700
   13638:	ldr	r2, [r7, #1796]	; 0x704
   1363c:	ldr	r3, [r0]
   13640:	bic	r2, r3, r2
   13644:	orr	r1, r2, r1
   13648:	str	r1, [r0]
   1364c:	b	135cc <tcgetattr@plt+0x2204>
   13650:	movw	r0, #40990	; 0xa01e
   13654:	movt	r0, #1
   13658:	movw	r1, #40996	; 0xa024
   1365c:	movt	r1, #1
   13660:	movw	r3, #41007	; 0xa02f
   13664:	movt	r3, #1
   13668:	movw	r2, #2252	; 0x8cc
   1366c:	bl	113bc <__assert_fail@plt>
   13670:	movw	r0, #40990	; 0xa01e
   13674:	movt	r0, #1
   13678:	movw	r1, #40996	; 0xa024
   1367c:	movt	r1, #1
   13680:	movw	r3, #41007	; 0xa02f
   13684:	movt	r3, #1
   13688:	movw	r2, #2258	; 0x8d2
   1368c:	bl	113bc <__assert_fail@plt>
   13690:	bx	lr
   13694:	mov	r2, r1
   13698:	movw	r1, #21523	; 0x5413
   1369c:	b	111d0 <ioctl@plt>
   136a0:	sub	sp, sp, #12
   136a4:	push	{r4, r5, fp, lr}
   136a8:	add	fp, sp, #8
   136ac:	sub	sp, sp, #12
   136b0:	mov	r4, r0
   136b4:	add	r0, fp, #8
   136b8:	stm	r0, {r1, r2, r3}
   136bc:	add	r3, fp, #8
   136c0:	str	r3, [sp, #8]
   136c4:	add	r0, sp, #4
   136c8:	mov	r1, #1
   136cc:	mov	r2, r4
   136d0:	bl	112f0 <__vasprintf_chk@plt>
   136d4:	cmn	r0, #1
   136d8:	ble	13768 <tcgetattr@plt+0x23a0>
   136dc:	mov	r4, r0
   136e0:	movw	r5, #49668	; 0xc204
   136e4:	movt	r5, #2
   136e8:	ldr	r0, [r5]
   136ec:	cmp	r0, #1
   136f0:	blt	13730 <tcgetattr@plt+0x2368>
   136f4:	movw	r1, #49664	; 0xc200
   136f8:	movt	r1, #2
   136fc:	ldr	r1, [r1]
   13700:	sub	r0, r1, r0
   13704:	cmp	r0, r4
   13708:	bge	1371c <tcgetattr@plt+0x2354>
   1370c:	mov	r0, #10
   13710:	bl	113b0 <putchar_unlocked@plt>
   13714:	mov	r0, #0
   13718:	b	1372c <tcgetattr@plt+0x2364>
   1371c:	mov	r0, #32
   13720:	bl	113b0 <putchar_unlocked@plt>
   13724:	ldr	r0, [r5]
   13728:	add	r0, r0, #1
   1372c:	str	r0, [r5]
   13730:	movw	r0, #49524	; 0xc174
   13734:	movt	r0, #2
   13738:	ldr	r1, [r0]
   1373c:	ldr	r0, [sp, #4]
   13740:	bl	110f8 <fputs_unlocked@plt>
   13744:	ldr	r0, [sp, #4]
   13748:	bl	14158 <tcgetattr@plt+0x2d90>
   1374c:	ldr	r0, [r5]
   13750:	add	r0, r0, r4
   13754:	str	r0, [r5]
   13758:	sub	sp, fp, #8
   1375c:	pop	{r4, r5, fp, lr}
   13760:	add	sp, sp, #12
   13764:	bx	lr
   13768:	bl	16640 <tcgetattr@plt+0x5278>
   1376c:	mov	r1, #0
   13770:	movw	ip, #43812	; 0xab24
   13774:	movt	ip, #1
   13778:	add	r3, ip, r1
   1377c:	ldr	r2, [r3, #4]
   13780:	cmp	r2, r0
   13784:	ldreq	r0, [r3, #8]
   13788:	bxeq	lr
   1378c:	add	r1, r1, #12
   13790:	cmp	r1, #408	; 0x198
   13794:	moveq	r0, #0
   13798:	bxeq	lr
   1379c:	b	13778 <tcgetattr@plt+0x23b0>
   137a0:	push	{r4, r5, r6, r7, fp, lr}
   137a4:	add	fp, sp, #16
   137a8:	mov	r4, r2
   137ac:	mov	r6, r1
   137b0:	mov	r5, r0
   137b4:	bl	112d8 <__errno_location@plt>
   137b8:	mov	r7, r0
   137bc:	mov	r0, #0
   137c0:	str	r0, [r7]
   137c4:	mov	r0, r5
   137c8:	mov	r1, r6
   137cc:	mov	r2, #16
   137d0:	bl	1129c <strtoul@plt>
   137d4:	mov	r1, r0
   137d8:	ldr	r2, [r7]
   137dc:	mvn	r0, #0
   137e0:	cmp	r2, #0
   137e4:	popne	{r4, r5, r6, r7, fp, pc}
   137e8:	ldr	r2, [r6]
   137ec:	cmp	r2, r5
   137f0:	beq	13804 <tcgetattr@plt+0x243c>
   137f4:	ldrb	r2, [r2]
   137f8:	cmp	r2, #58	; 0x3a
   137fc:	streq	r1, [r4]
   13800:	moveq	r0, #0
   13804:	pop	{r4, r5, r6, r7, fp, pc}
   13808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1380c:	add	fp, sp, #24
   13810:	mov	r5, r3
   13814:	mov	r8, r2
   13818:	mov	r7, r1
   1381c:	mov	r6, r0
   13820:	bl	112d8 <__errno_location@plt>
   13824:	mov	r4, r0
   13828:	mov	r0, #0
   1382c:	str	r0, [r4]
   13830:	mov	r0, r6
   13834:	mov	r1, r7
   13838:	mov	r2, #16
   1383c:	bl	1129c <strtoul@plt>
   13840:	mov	r1, r0
   13844:	ldr	r2, [r4]
   13848:	mvn	r0, #0
   1384c:	cmp	r2, #0
   13850:	bne	13878 <tcgetattr@plt+0x24b0>
   13854:	cmp	r1, #255	; 0xff
   13858:	pophi	{r4, r5, r6, r7, r8, sl, fp, pc}
   1385c:	ldr	r2, [r7]
   13860:	cmp	r2, r6
   13864:	beq	13878 <tcgetattr@plt+0x24b0>
   13868:	ldrb	r2, [r2]
   1386c:	cmp	r2, r5
   13870:	strbeq	r1, [r8]
   13874:	moveq	r0, #0
   13878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1387c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13880:	add	fp, sp, #28
   13884:	sub	sp, sp, #4
   13888:	movw	r4, #49544	; 0xc188
   1388c:	movt	r4, #2
   13890:	mov	sl, #1
   13894:	mov	r0, r4
   13898:	mov	r1, #1
   1389c:	bl	1336c <tcgetattr@plt+0x1fa4>
   138a0:	ldrb	r1, [r4, #16]
   138a4:	movw	r0, #41449	; 0xa1e9
   138a8:	movt	r0, #1
   138ac:	bl	136a0 <tcgetattr@plt+0x22d8>
   138b0:	mov	r0, #10
   138b4:	bl	113b0 <putchar_unlocked@plt>
   138b8:	movw	r1, #49668	; 0xc204
   138bc:	movt	r1, #2
   138c0:	mov	r0, #0
   138c4:	str	r0, [r1]
   138c8:	movw	r0, #43584	; 0xaa40
   138cc:	movt	r0, #1
   138d0:	add	r8, r0, #8
   138d4:	movw	r7, #41040	; 0xa050
   138d8:	movt	r7, #1
   138dc:	movw	r5, #41107	; 0xa093
   138e0:	movt	r5, #1
   138e4:	movw	r9, #41093	; 0xa085
   138e8:	movt	r9, #1
   138ec:	ldr	r0, [r8]
   138f0:	add	r0, r4, r0
   138f4:	ldrb	r6, [r0, #17]
   138f8:	ldrb	r0, [r8, #-4]
   138fc:	cmp	r6, r0
   13900:	beq	13938 <tcgetattr@plt+0x2570>
   13904:	mov	r0, r7
   13908:	mov	r1, r9
   1390c:	bl	11110 <strcmp@plt>
   13910:	cmp	r0, #0
   13914:	beq	13938 <tcgetattr@plt+0x2570>
   13918:	mov	r0, r6
   1391c:	bl	13d48 <tcgetattr@plt+0x2980>
   13920:	mov	r2, r0
   13924:	movw	r0, #41460	; 0xa1f4
   13928:	movt	r0, #1
   1392c:	mov	r1, r7
   13930:	bl	136a0 <tcgetattr@plt+0x22d8>
   13934:	mov	sl, #0
   13938:	ldr	r7, [r8, #4]
   1393c:	mov	r0, r7
   13940:	mov	r1, r5
   13944:	bl	11110 <strcmp@plt>
   13948:	add	r8, r8, #12
   1394c:	cmp	r0, #0
   13950:	bne	138ec <tcgetattr@plt+0x2524>
   13954:	ldrb	r0, [r4, #12]
   13958:	tst	r0, #2
   1395c:	bne	13978 <tcgetattr@plt+0x25b0>
   13960:	ldrb	r2, [r4, #22]
   13964:	ldrb	r1, [r4, #23]
   13968:	movw	r0, #41469	; 0xa1fd
   1396c:	movt	r0, #1
   13970:	bl	136a0 <tcgetattr@plt+0x22d8>
   13974:	b	13988 <tcgetattr@plt+0x25c0>
   13978:	tst	sl, #1
   1397c:	bne	13988 <tcgetattr@plt+0x25c0>
   13980:	mov	r0, #10
   13984:	bl	113b0 <putchar_unlocked@plt>
   13988:	mov	r1, #0
   1398c:	movw	r0, #49668	; 0xc204
   13990:	movt	r0, #2
   13994:	str	r1, [r0]
   13998:	mov	r9, #1
   1399c:	movw	r6, #63756	; 0xf90c
   139a0:	movt	r6, #65535	; 0xffff
   139a4:	movw	r8, #41784	; 0xa338
   139a8:	movt	r8, #1
   139ac:	movw	r4, #49544	; 0xc188
   139b0:	movt	r4, #2
   139b4:	mov	r0, #0
   139b8:	add	r5, r8, r6
   139bc:	ldrb	sl, [r5, #1788]	; 0x6fc
   139c0:	tst	sl, #8
   139c4:	bne	13a7c <tcgetattr@plt+0x26b4>
   139c8:	ldr	r7, [r5, #1784]	; 0x6f8
   139cc:	subs	r0, r7, r0
   139d0:	clz	r1, r0
   139d4:	movwne	r0, #1
   139d8:	lsr	r1, r1, #5
   139dc:	orr	r1, r9, r1
   139e0:	tst	r1, #1
   139e4:	beq	139f0 <tcgetattr@plt+0x2628>
   139e8:	orr	r9, r9, r0
   139ec:	b	13a0c <tcgetattr@plt+0x2644>
   139f0:	mov	r0, #10
   139f4:	bl	113b0 <putchar_unlocked@plt>
   139f8:	movw	r0, #49668	; 0xc204
   139fc:	movt	r0, #2
   13a00:	mov	r1, #0
   13a04:	str	r1, [r0]
   13a08:	mov	r9, #1
   13a0c:	mov	r0, r7
   13a10:	mov	r1, r4
   13a14:	bl	13528 <tcgetattr@plt+0x2160>
   13a18:	ldr	r1, [r5, #1796]	; 0x704
   13a1c:	cmp	r1, #0
   13a20:	ldreq	r1, [r5, #1792]	; 0x700
   13a24:	cmp	r0, #0
   13a28:	beq	13aac <tcgetattr@plt+0x26e4>
   13a2c:	ldr	r0, [r0]
   13a30:	and	r0, r0, r1
   13a34:	ldr	r1, [r5, #1792]	; 0x700
   13a38:	cmp	r0, r1
   13a3c:	bne	13a58 <tcgetattr@plt+0x2690>
   13a40:	tst	sl, #2
   13a44:	beq	13a78 <tcgetattr@plt+0x26b0>
   13a48:	ldr	r1, [r5, #1780]	; 0x6f4
   13a4c:	movw	r0, #44263	; 0xace7
   13a50:	movt	r0, #1
   13a54:	b	13a70 <tcgetattr@plt+0x26a8>
   13a58:	and	r0, sl, #5
   13a5c:	cmp	r0, #5
   13a60:	bne	13a78 <tcgetattr@plt+0x26b0>
   13a64:	ldr	r1, [r5, #1780]	; 0x6f4
   13a68:	movw	r0, #41532	; 0xa23c
   13a6c:	movt	r0, #1
   13a70:	bl	136a0 <tcgetattr@plt+0x22d8>
   13a74:	mov	r9, #0
   13a78:	mov	r0, r7
   13a7c:	adds	r6, r6, #20
   13a80:	bne	139b8 <tcgetattr@plt+0x25f0>
   13a84:	tst	r9, #1
   13a88:	bne	13a94 <tcgetattr@plt+0x26cc>
   13a8c:	mov	r0, #10
   13a90:	bl	113b0 <putchar_unlocked@plt>
   13a94:	mov	r0, #0
   13a98:	movw	r1, #49668	; 0xc204
   13a9c:	movt	r1, #2
   13aa0:	str	r0, [r1]
   13aa4:	sub	sp, fp, #28
   13aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aac:	movw	r0, #40990	; 0xa01e
   13ab0:	movt	r0, #1
   13ab4:	movw	r1, #40996	; 0xa024
   13ab8:	movt	r1, #1
   13abc:	movw	r3, #41493	; 0xa215
   13ac0:	movt	r3, #1
   13ac4:	movw	r2, #1953	; 0x7a1
   13ac8:	bl	113bc <__assert_fail@plt>
   13acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ad0:	add	fp, sp, #28
   13ad4:	sub	sp, sp, #4
   13ad8:	mov	r4, r0
   13adc:	movw	r8, #49544	; 0xc188
   13ae0:	movt	r8, #2
   13ae4:	mov	r0, r8
   13ae8:	mov	r1, #1
   13aec:	bl	1336c <tcgetattr@plt+0x1fa4>
   13af0:	mov	r0, #1
   13af4:	mov	r1, r4
   13af8:	bl	13280 <tcgetattr@plt+0x1eb8>
   13afc:	ldrb	r1, [r8, #16]
   13b00:	movw	r0, #41449	; 0xa1e9
   13b04:	movt	r0, #1
   13b08:	bl	136a0 <tcgetattr@plt+0x22d8>
   13b0c:	mov	r0, #10
   13b10:	bl	113b0 <putchar_unlocked@plt>
   13b14:	movw	r1, #49668	; 0xc204
   13b18:	movt	r1, #2
   13b1c:	mov	r0, #0
   13b20:	str	r0, [r1]
   13b24:	movw	r0, #43584	; 0xaa40
   13b28:	movt	r0, #1
   13b2c:	add	r7, r0, #8
   13b30:	movw	r4, #41040	; 0xa050
   13b34:	movt	r4, #1
   13b38:	movw	r5, #41093	; 0xa085
   13b3c:	movt	r5, #1
   13b40:	movw	r6, #41107	; 0xa093
   13b44:	movt	r6, #1
   13b48:	movw	r9, #41460	; 0xa1f4
   13b4c:	movt	r9, #1
   13b50:	mov	r0, r4
   13b54:	mov	r1, r5
   13b58:	bl	11110 <strcmp@plt>
   13b5c:	cmp	r0, #0
   13b60:	beq	13b84 <tcgetattr@plt+0x27bc>
   13b64:	ldr	r0, [r7]
   13b68:	add	r0, r8, r0
   13b6c:	ldrb	r0, [r0, #17]
   13b70:	bl	13d48 <tcgetattr@plt+0x2980>
   13b74:	mov	r2, r0
   13b78:	mov	r0, r9
   13b7c:	mov	r1, r4
   13b80:	bl	136a0 <tcgetattr@plt+0x22d8>
   13b84:	ldr	r4, [r7, #4]
   13b88:	mov	r0, r4
   13b8c:	mov	r1, r6
   13b90:	bl	11110 <strcmp@plt>
   13b94:	add	r7, r7, #12
   13b98:	cmp	r0, #0
   13b9c:	bne	13b50 <tcgetattr@plt+0x2788>
   13ba0:	ldrb	r2, [r8, #22]
   13ba4:	ldrb	r1, [r8, #23]
   13ba8:	movw	r0, #41544	; 0xa248
   13bac:	movt	r0, #1
   13bb0:	bl	136a0 <tcgetattr@plt+0x22d8>
   13bb4:	movw	r0, #49668	; 0xc204
   13bb8:	movt	r0, #2
   13bbc:	ldr	r0, [r0]
   13bc0:	cmp	r0, #0
   13bc4:	beq	13bd0 <tcgetattr@plt+0x2808>
   13bc8:	mov	r0, #10
   13bcc:	bl	113b0 <putchar_unlocked@plt>
   13bd0:	mov	r1, #0
   13bd4:	movw	r0, #49668	; 0xc204
   13bd8:	movt	r0, #2
   13bdc:	str	r1, [r0]
   13be0:	movw	r5, #63756	; 0xf90c
   13be4:	movt	r5, #65535	; 0xffff
   13be8:	movw	r8, #41784	; 0xa338
   13bec:	movt	r8, #1
   13bf0:	movw	r4, #49544	; 0xc188
   13bf4:	movt	r4, #2
   13bf8:	mov	r9, #0
   13bfc:	add	sl, r8, r5
   13c00:	ldrb	r6, [sl, #1788]	; 0x6fc
   13c04:	tst	r6, #8
   13c08:	bne	13c90 <tcgetattr@plt+0x28c8>
   13c0c:	ldr	r7, [sl, #1784]	; 0x6f8
   13c10:	cmp	r7, r9
   13c14:	beq	13c34 <tcgetattr@plt+0x286c>
   13c18:	mov	r0, #10
   13c1c:	bl	113b0 <putchar_unlocked@plt>
   13c20:	movw	r0, #49668	; 0xc204
   13c24:	movt	r0, #2
   13c28:	mov	r1, #0
   13c2c:	str	r1, [r0]
   13c30:	mov	r9, r7
   13c34:	mov	r0, r7
   13c38:	mov	r1, r4
   13c3c:	bl	13528 <tcgetattr@plt+0x2160>
   13c40:	ldr	r1, [sl, #1796]	; 0x704
   13c44:	cmp	r1, #0
   13c48:	ldreq	r1, [sl, #1792]	; 0x700
   13c4c:	cmp	r0, #0
   13c50:	beq	13cb8 <tcgetattr@plt+0x28f0>
   13c54:	ldr	r0, [r0]
   13c58:	and	r0, r0, r1
   13c5c:	ldr	r1, [sl, #1792]	; 0x700
   13c60:	cmp	r0, r1
   13c64:	bne	13c78 <tcgetattr@plt+0x28b0>
   13c68:	ldr	r1, [sl, #1780]	; 0x6f4
   13c6c:	movw	r0, #44263	; 0xace7
   13c70:	movt	r0, #1
   13c74:	b	13c8c <tcgetattr@plt+0x28c4>
   13c78:	tst	r6, #4
   13c7c:	beq	13c90 <tcgetattr@plt+0x28c8>
   13c80:	ldr	r1, [sl, #1780]	; 0x6f4
   13c84:	movw	r0, #41532	; 0xa23c
   13c88:	movt	r0, #1
   13c8c:	bl	136a0 <tcgetattr@plt+0x22d8>
   13c90:	adds	r5, r5, #20
   13c94:	bne	13bfc <tcgetattr@plt+0x2834>
   13c98:	mov	r0, #10
   13c9c:	bl	113b0 <putchar_unlocked@plt>
   13ca0:	mov	r0, #0
   13ca4:	movw	r1, #49668	; 0xc204
   13ca8:	movt	r1, #2
   13cac:	str	r0, [r1]
   13cb0:	sub	sp, fp, #28
   13cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cb8:	movw	r0, #40990	; 0xa01e
   13cbc:	movt	r0, #1
   13cc0:	movw	r1, #40996	; 0xa024
   13cc4:	movt	r1, #1
   13cc8:	movw	r3, #41567	; 0xa25f
   13ccc:	movt	r3, #1
   13cd0:	movw	r2, #2037	; 0x7f5
   13cd4:	bl	113bc <__assert_fail@plt>
   13cd8:	push	{r4, r5, r6, sl, fp, lr}
   13cdc:	add	fp, sp, #16
   13ce0:	sub	sp, sp, #8
   13ce4:	movw	r5, #49544	; 0xc188
   13ce8:	movt	r5, #2
   13cec:	ldm	r5, {r2, r3}
   13cf0:	ldr	r0, [r5, #8]
   13cf4:	ldr	r1, [r5, #12]
   13cf8:	stm	sp, {r0, r1}
   13cfc:	movw	r1, #41616	; 0xa290
   13d00:	movt	r1, #1
   13d04:	mov	r0, #1
   13d08:	bl	11308 <__printf_chk@plt>
   13d0c:	mov	r6, #0
   13d10:	movw	r4, #41627	; 0xa29b
   13d14:	movt	r4, #1
   13d18:	add	r0, r5, r6
   13d1c:	ldrb	r2, [r0, #17]
   13d20:	mov	r0, #1
   13d24:	mov	r1, r4
   13d28:	bl	11308 <__printf_chk@plt>
   13d2c:	add	r6, r6, #1
   13d30:	cmp	r6, #32
   13d34:	bne	13d18 <tcgetattr@plt+0x2950>
   13d38:	mov	r0, #10
   13d3c:	sub	sp, fp, #16
   13d40:	pop	{r4, r5, r6, sl, fp, lr}
   13d44:	b	113b0 <putchar_unlocked@plt>
   13d48:	cmp	r0, #0
   13d4c:	movweq	r0, #41536	; 0xa240
   13d50:	movteq	r0, #1
   13d54:	bxeq	lr
   13d58:	movw	r1, #49732	; 0xc244
   13d5c:	movt	r1, #2
   13d60:	cmp	r0, #32
   13d64:	bcc	13d78 <tcgetattr@plt+0x29b0>
   13d68:	cmp	r0, #126	; 0x7e
   13d6c:	bhi	13da0 <tcgetattr@plt+0x29d8>
   13d70:	strb	r0, [r1], #1
   13d74:	b	13d8c <tcgetattr@plt+0x29c4>
   13d78:	mov	r2, #94	; 0x5e
   13d7c:	strb	r2, [r1]
   13d80:	add	r0, r0, #64	; 0x40
   13d84:	strb	r0, [r1, #1]
   13d88:	add	r1, r1, #2
   13d8c:	mov	r0, #0
   13d90:	strb	r0, [r1]
   13d94:	movw	r0, #49732	; 0xc244
   13d98:	movt	r0, #2
   13d9c:	bx	lr
   13da0:	cmp	r0, #127	; 0x7f
   13da4:	bne	13db4 <tcgetattr@plt+0x29ec>
   13da8:	movw	r0, #16222	; 0x3f5e
   13dac:	strh	r0, [r1], #2
   13db0:	b	13d8c <tcgetattr@plt+0x29c4>
   13db4:	movw	r2, #11597	; 0x2d4d
   13db8:	strh	r2, [r1]
   13dbc:	cmp	r0, #160	; 0xa0
   13dc0:	bcc	13ddc <tcgetattr@plt+0x2a14>
   13dc4:	cmp	r0, #255	; 0xff
   13dc8:	beq	13df4 <tcgetattr@plt+0x2a2c>
   13dcc:	eor	r0, r0, #128	; 0x80
   13dd0:	strb	r0, [r1, #2]
   13dd4:	add	r1, r1, #3
   13dd8:	b	13d8c <tcgetattr@plt+0x29c4>
   13ddc:	mov	r2, #94	; 0x5e
   13de0:	strb	r2, [r1, #2]
   13de4:	sub	r0, r0, #64	; 0x40
   13de8:	strb	r0, [r1, #3]
   13dec:	add	r1, r1, #4
   13df0:	b	13d8c <tcgetattr@plt+0x29c4>
   13df4:	movw	r0, #16222	; 0x3f5e
   13df8:	strh	r0, [r1, #2]
   13dfc:	add	r1, r1, #4
   13e00:	b	13d8c <tcgetattr@plt+0x29c4>
   13e04:	movw	r1, #49744	; 0xc250
   13e08:	movt	r1, #2
   13e0c:	str	r0, [r1]
   13e10:	bx	lr
   13e14:	movw	r1, #49748	; 0xc254
   13e18:	movt	r1, #2
   13e1c:	strb	r0, [r1]
   13e20:	bx	lr
   13e24:	push	{r4, r5, r6, sl, fp, lr}
   13e28:	add	fp, sp, #16
   13e2c:	sub	sp, sp, #8
   13e30:	movw	r0, #49524	; 0xc174
   13e34:	movt	r0, #2
   13e38:	ldr	r0, [r0]
   13e3c:	bl	175d4 <tcgetattr@plt+0x620c>
   13e40:	cmp	r0, #0
   13e44:	beq	13e6c <tcgetattr@plt+0x2aa4>
   13e48:	movw	r0, #49748	; 0xc254
   13e4c:	movt	r0, #2
   13e50:	ldrb	r0, [r0]
   13e54:	cmp	r0, #0
   13e58:	beq	13e8c <tcgetattr@plt+0x2ac4>
   13e5c:	bl	112d8 <__errno_location@plt>
   13e60:	ldr	r0, [r0]
   13e64:	cmp	r0, #32
   13e68:	bne	13e8c <tcgetattr@plt+0x2ac4>
   13e6c:	movw	r0, #49520	; 0xc170
   13e70:	movt	r0, #2
   13e74:	ldr	r0, [r0]
   13e78:	bl	175d4 <tcgetattr@plt+0x620c>
   13e7c:	cmp	r0, #0
   13e80:	subeq	sp, fp, #16
   13e84:	popeq	{r4, r5, r6, sl, fp, pc}
   13e88:	b	13efc <tcgetattr@plt+0x2b34>
   13e8c:	movw	r1, #44247	; 0xacd7
   13e90:	movt	r1, #1
   13e94:	mov	r0, #0
   13e98:	mov	r2, #5
   13e9c:	bl	11170 <dcgettext@plt>
   13ea0:	mov	r4, r0
   13ea4:	movw	r0, #49744	; 0xc250
   13ea8:	movt	r0, #2
   13eac:	ldr	r6, [r0]
   13eb0:	bl	112d8 <__errno_location@plt>
   13eb4:	ldr	r5, [r0]
   13eb8:	cmp	r6, #0
   13ebc:	bne	13ed8 <tcgetattr@plt+0x2b10>
   13ec0:	movw	r2, #44263	; 0xace7
   13ec4:	movt	r2, #1
   13ec8:	mov	r0, #0
   13ecc:	mov	r1, r5
   13ed0:	mov	r3, r4
   13ed4:	b	13ef8 <tcgetattr@plt+0x2b30>
   13ed8:	mov	r0, r6
   13edc:	bl	15868 <tcgetattr@plt+0x44a0>
   13ee0:	mov	r3, r0
   13ee4:	str	r4, [sp]
   13ee8:	movw	r2, #44259	; 0xace3
   13eec:	movt	r2, #1
   13ef0:	mov	r0, #0
   13ef4:	mov	r1, r5
   13ef8:	bl	11224 <error@plt>
   13efc:	movw	r0, #49432	; 0xc118
   13f00:	movt	r0, #2
   13f04:	ldr	r0, [r0]
   13f08:	bl	11140 <_exit@plt>
   13f0c:	sub	sp, sp, #8
   13f10:	push	{fp, lr}
   13f14:	mov	fp, sp
   13f18:	sub	sp, sp, #8
   13f1c:	str	r3, [fp, #12]
   13f20:	str	r2, [fp, #8]
   13f24:	add	r2, fp, #8
   13f28:	str	r2, [sp, #4]
   13f2c:	cmp	r1, #11
   13f30:	bhi	13f70 <tcgetattr@plt+0x2ba8>
   13f34:	mov	r2, #1
   13f38:	movw	r3, #1300	; 0x514
   13f3c:	tst	r3, r2, lsl r1
   13f40:	bne	13fc0 <tcgetattr@plt+0x2bf8>
   13f44:	movw	r3, #2570	; 0xa0a
   13f48:	tst	r3, r2, lsl r1
   13f4c:	bne	13f98 <tcgetattr@plt+0x2bd0>
   13f50:	cmp	r1, #0
   13f54:	bne	13f70 <tcgetattr@plt+0x2ba8>
   13f58:	ldr	r1, [sp, #4]
   13f5c:	add	r2, r1, #4
   13f60:	str	r2, [sp, #4]
   13f64:	ldr	r1, [r1]
   13f68:	bl	13fe4 <tcgetattr@plt+0x2c1c>
   13f6c:	b	13fd4 <tcgetattr@plt+0x2c0c>
   13f70:	sub	r2, r1, #1024	; 0x400
   13f74:	cmp	r2, #10
   13f78:	bhi	13fc0 <tcgetattr@plt+0x2bf8>
   13f7c:	mov	ip, #1
   13f80:	movw	r3, #645	; 0x285
   13f84:	tst	r3, ip, lsl r2
   13f88:	bne	13fc0 <tcgetattr@plt+0x2bf8>
   13f8c:	movw	r3, #1282	; 0x502
   13f90:	tst	r3, ip, lsl r2
   13f94:	beq	13fa0 <tcgetattr@plt+0x2bd8>
   13f98:	bl	11350 <fcntl64@plt>
   13f9c:	b	13fd4 <tcgetattr@plt+0x2c0c>
   13fa0:	cmp	r2, #6
   13fa4:	bne	13fc0 <tcgetattr@plt+0x2bf8>
   13fa8:	ldr	r1, [sp, #4]
   13fac:	add	r2, r1, #4
   13fb0:	str	r2, [sp, #4]
   13fb4:	ldr	r1, [r1]
   13fb8:	bl	13ff0 <tcgetattr@plt+0x2c28>
   13fbc:	b	13fd4 <tcgetattr@plt+0x2c0c>
   13fc0:	ldr	r2, [sp, #4]
   13fc4:	add	r3, r2, #4
   13fc8:	str	r3, [sp, #4]
   13fcc:	ldr	r2, [r2]
   13fd0:	bl	11350 <fcntl64@plt>
   13fd4:	mov	sp, fp
   13fd8:	pop	{fp, lr}
   13fdc:	add	sp, sp, #8
   13fe0:	bx	lr
   13fe4:	mov	r2, r1
   13fe8:	mov	r1, #0
   13fec:	b	11350 <fcntl64@plt>
   13ff0:	push	{r4, r5, r6, r7, fp, lr}
   13ff4:	add	fp, sp, #16
   13ff8:	mov	r5, r1
   13ffc:	mov	r6, r0
   14000:	movw	r7, #49752	; 0xc258
   14004:	movt	r7, #2
   14008:	ldr	r0, [r7]
   1400c:	cmp	r0, #0
   14010:	blt	14074 <tcgetattr@plt+0x2cac>
   14014:	mov	r0, r6
   14018:	movw	r1, #1030	; 0x406
   1401c:	mov	r2, r5
   14020:	bl	11350 <fcntl64@plt>
   14024:	mov	r4, r0
   14028:	cmn	r0, #1
   1402c:	bgt	14060 <tcgetattr@plt+0x2c98>
   14030:	bl	112d8 <__errno_location@plt>
   14034:	ldr	r0, [r0]
   14038:	cmp	r0, #22
   1403c:	bne	14060 <tcgetattr@plt+0x2c98>
   14040:	mov	r0, r6
   14044:	mov	r1, r5
   14048:	bl	13fe4 <tcgetattr@plt+0x2c1c>
   1404c:	mov	r4, r0
   14050:	cmp	r0, #0
   14054:	blt	140c4 <tcgetattr@plt+0x2cfc>
   14058:	mvn	r0, #0
   1405c:	b	14064 <tcgetattr@plt+0x2c9c>
   14060:	mov	r0, #1
   14064:	str	r0, [r7]
   14068:	cmp	r4, #0
   1406c:	bge	1408c <tcgetattr@plt+0x2cc4>
   14070:	b	140c4 <tcgetattr@plt+0x2cfc>
   14074:	mov	r0, r6
   14078:	mov	r1, r5
   1407c:	bl	13fe4 <tcgetattr@plt+0x2c1c>
   14080:	mov	r4, r0
   14084:	cmp	r4, #0
   14088:	blt	140c4 <tcgetattr@plt+0x2cfc>
   1408c:	ldr	r0, [r7]
   14090:	cmn	r0, #1
   14094:	bne	140c4 <tcgetattr@plt+0x2cfc>
   14098:	mov	r0, r4
   1409c:	mov	r1, #1
   140a0:	bl	11350 <fcntl64@plt>
   140a4:	cmp	r0, #0
   140a8:	blt	140cc <tcgetattr@plt+0x2d04>
   140ac:	orr	r2, r0, #1
   140b0:	mov	r0, r4
   140b4:	mov	r1, #2
   140b8:	bl	11350 <fcntl64@plt>
   140bc:	cmn	r0, #1
   140c0:	beq	140cc <tcgetattr@plt+0x2d04>
   140c4:	mov	r0, r4
   140c8:	pop	{r4, r5, r6, r7, fp, pc}
   140cc:	bl	112d8 <__errno_location@plt>
   140d0:	mov	r5, r0
   140d4:	ldr	r6, [r0]
   140d8:	mov	r0, r4
   140dc:	bl	113a4 <close@plt>
   140e0:	str	r6, [r5]
   140e4:	mvn	r4, #0
   140e8:	mov	r0, r4
   140ec:	pop	{r4, r5, r6, r7, fp, pc}
   140f0:	push	{r4, r5, r6, r7, fp, lr}
   140f4:	add	fp, sp, #16
   140f8:	mov	r5, r0
   140fc:	mov	r0, r1
   14100:	mov	r1, r2
   14104:	mov	r2, r3
   14108:	bl	11230 <open64@plt>
   1410c:	mov	r4, r0
   14110:	cmp	r0, r5
   14114:	beq	14150 <tcgetattr@plt+0x2d88>
   14118:	cmp	r4, #0
   1411c:	blt	14150 <tcgetattr@plt+0x2d88>
   14120:	mov	r0, r4
   14124:	mov	r1, r5
   14128:	bl	11188 <dup2@plt>
   1412c:	mov	r5, r0
   14130:	bl	112d8 <__errno_location@plt>
   14134:	mov	r6, r0
   14138:	ldr	r7, [r0]
   1413c:	mov	r0, r4
   14140:	bl	113a4 <close@plt>
   14144:	str	r7, [r6]
   14148:	mov	r0, r5
   1414c:	pop	{r4, r5, r6, r7, fp, pc}
   14150:	mov	r0, r4
   14154:	pop	{r4, r5, r6, r7, fp, pc}
   14158:	push	{r4, r5, r6, sl, fp, lr}
   1415c:	add	fp, sp, #16
   14160:	mov	r4, r0
   14164:	bl	112d8 <__errno_location@plt>
   14168:	mov	r5, r0
   1416c:	ldr	r6, [r0]
   14170:	mov	r0, r4
   14174:	bl	11134 <free@plt>
   14178:	str	r6, [r5]
   1417c:	pop	{r4, r5, r6, sl, fp, pc}
   14180:	push	{r4, r5, fp, lr}
   14184:	add	fp, sp, #8
   14188:	cmp	r0, #0
   1418c:	beq	14220 <tcgetattr@plt+0x2e58>
   14190:	mov	r4, r0
   14194:	mov	r1, #47	; 0x2f
   14198:	bl	11368 <strrchr@plt>
   1419c:	cmp	r0, #0
   141a0:	mov	r5, r4
   141a4:	addne	r5, r0, #1
   141a8:	sub	r0, r5, r4
   141ac:	cmp	r0, #7
   141b0:	blt	14204 <tcgetattr@plt+0x2e3c>
   141b4:	sub	r0, r5, #7
   141b8:	movw	r1, #44322	; 0xad22
   141bc:	movt	r1, #1
   141c0:	mov	r2, #7
   141c4:	bl	1138c <strncmp@plt>
   141c8:	cmp	r0, #0
   141cc:	bne	14204 <tcgetattr@plt+0x2e3c>
   141d0:	movw	r1, #44330	; 0xad2a
   141d4:	movt	r1, #1
   141d8:	mov	r0, r5
   141dc:	mov	r2, #3
   141e0:	bl	1138c <strncmp@plt>
   141e4:	cmp	r0, #0
   141e8:	beq	141f4 <tcgetattr@plt+0x2e2c>
   141ec:	mov	r4, r5
   141f0:	b	14204 <tcgetattr@plt+0x2e3c>
   141f4:	add	r4, r5, #3
   141f8:	movw	r0, #49504	; 0xc160
   141fc:	movt	r0, #2
   14200:	str	r4, [r0]
   14204:	movw	r0, #49508	; 0xc164
   14208:	movt	r0, #2
   1420c:	str	r4, [r0]
   14210:	movw	r0, #49756	; 0xc25c
   14214:	movt	r0, #2
   14218:	str	r4, [r0]
   1421c:	pop	{r4, r5, fp, pc}
   14220:	movw	r0, #49520	; 0xc170
   14224:	movt	r0, #2
   14228:	ldr	r3, [r0]
   1422c:	movw	r0, #44266	; 0xacea
   14230:	movt	r0, #1
   14234:	mov	r1, #55	; 0x37
   14238:	mov	r2, #1
   1423c:	bl	111c4 <fwrite@plt>
   14240:	bl	11398 <abort@plt>
   14244:	push	{r4, r5, r6, sl, fp, lr}
   14248:	add	fp, sp, #16
   1424c:	mov	r4, r0
   14250:	movw	r0, #49760	; 0xc260
   14254:	movt	r0, #2
   14258:	cmp	r4, #0
   1425c:	moveq	r4, r0
   14260:	bl	112d8 <__errno_location@plt>
   14264:	mov	r5, r0
   14268:	ldr	r6, [r0]
   1426c:	mov	r0, r4
   14270:	mov	r1, #48	; 0x30
   14274:	bl	16584 <tcgetattr@plt+0x51bc>
   14278:	str	r6, [r5]
   1427c:	pop	{r4, r5, r6, sl, fp, pc}
   14280:	movw	r1, #49760	; 0xc260
   14284:	movt	r1, #2
   14288:	cmp	r0, #0
   1428c:	movne	r1, r0
   14290:	ldr	r0, [r1]
   14294:	bx	lr
   14298:	movw	r2, #49760	; 0xc260
   1429c:	movt	r2, #2
   142a0:	cmp	r0, #0
   142a4:	movne	r2, r0
   142a8:	str	r1, [r2]
   142ac:	bx	lr
   142b0:	movw	r3, #49760	; 0xc260
   142b4:	movt	r3, #2
   142b8:	cmp	r0, #0
   142bc:	movne	r3, r0
   142c0:	ubfx	r0, r1, #5, #3
   142c4:	add	r0, r3, r0, lsl #2
   142c8:	ldr	r3, [r0, #8]
   142cc:	and	r1, r1, #31
   142d0:	eor	r2, r2, r3, lsr r1
   142d4:	and	r2, r2, #1
   142d8:	eor	r2, r3, r2, lsl r1
   142dc:	str	r2, [r0, #8]
   142e0:	mov	r0, #1
   142e4:	and	r0, r0, r3, lsr r1
   142e8:	bx	lr
   142ec:	movw	r2, #49760	; 0xc260
   142f0:	movt	r2, #2
   142f4:	cmp	r0, #0
   142f8:	movne	r2, r0
   142fc:	ldr	r0, [r2, #4]
   14300:	str	r1, [r2, #4]
   14304:	bx	lr
   14308:	movw	r3, #49760	; 0xc260
   1430c:	movt	r3, #2
   14310:	cmp	r0, #0
   14314:	movne	r3, r0
   14318:	mov	r0, #10
   1431c:	str	r0, [r3]
   14320:	cmp	r1, #0
   14324:	cmpne	r2, #0
   14328:	bne	14338 <tcgetattr@plt+0x2f70>
   1432c:	push	{fp, lr}
   14330:	mov	fp, sp
   14334:	bl	11398 <abort@plt>
   14338:	str	r1, [r3, #40]	; 0x28
   1433c:	str	r2, [r3, #44]	; 0x2c
   14340:	bx	lr
   14344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14348:	add	fp, sp, #28
   1434c:	sub	sp, sp, #20
   14350:	mov	r8, r3
   14354:	mov	r9, r2
   14358:	mov	sl, r1
   1435c:	mov	r7, r0
   14360:	ldr	r0, [fp, #8]
   14364:	movw	r5, #49760	; 0xc260
   14368:	movt	r5, #2
   1436c:	cmp	r0, #0
   14370:	movne	r5, r0
   14374:	bl	112d8 <__errno_location@plt>
   14378:	mov	r4, r0
   1437c:	ldm	r5, {r0, r1}
   14380:	ldr	r2, [r5, #40]	; 0x28
   14384:	ldr	r3, [r5, #44]	; 0x2c
   14388:	ldr	r6, [r4]
   1438c:	add	r5, r5, #8
   14390:	stm	sp, {r0, r1, r5}
   14394:	str	r2, [sp, #12]
   14398:	str	r3, [sp, #16]
   1439c:	mov	r0, r7
   143a0:	mov	r1, sl
   143a4:	mov	r2, r9
   143a8:	mov	r3, r8
   143ac:	bl	143bc <tcgetattr@plt+0x2ff4>
   143b0:	str	r6, [r4]
   143b4:	sub	sp, fp, #28
   143b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143c0:	add	fp, sp, #28
   143c4:	sub	sp, sp, #156	; 0x9c
   143c8:	mov	r9, r3
   143cc:	str	r2, [fp, #-84]	; 0xffffffac
   143d0:	mov	r6, r1
   143d4:	mov	r7, r0
   143d8:	ldr	r0, [fp, #12]
   143dc:	and	r1, r0, #4
   143e0:	str	r1, [sp, #32]
   143e4:	and	r1, r0, #1
   143e8:	str	r1, [sp, #36]	; 0x24
   143ec:	ubfx	sl, r0, #1, #1
   143f0:	bl	111e8 <__ctype_get_mb_cur_max@plt>
   143f4:	str	r0, [sp, #40]	; 0x28
   143f8:	ldr	r0, [fp, #24]
   143fc:	str	r0, [sp, #76]	; 0x4c
   14400:	ldr	r0, [fp, #20]
   14404:	str	r0, [sp, #68]	; 0x44
   14408:	ldr	r0, [fp, #8]
   1440c:	str	r0, [fp, #-60]	; 0xffffffc4
   14410:	mov	r0, #0
   14414:	str	r0, [sp, #72]	; 0x48
   14418:	mov	r0, #0
   1441c:	str	r0, [sp, #92]	; 0x5c
   14420:	mov	r0, #0
   14424:	str	r0, [fp, #-72]	; 0xffffffb8
   14428:	mov	r0, #0
   1442c:	mov	r1, #0
   14430:	str	r1, [fp, #-56]	; 0xffffffc8
   14434:	mov	r1, #0
   14438:	str	r1, [sp, #56]	; 0x38
   1443c:	mov	r5, #1
   14440:	str	r7, [sp, #80]	; 0x50
   14444:	mov	r4, r6
   14448:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1444c:	cmp	r6, #10
   14450:	bhi	153b8 <tcgetattr@plt+0x3ff0>
   14454:	add	r1, pc, #20
   14458:	mov	r8, #0
   1445c:	mov	r2, #1
   14460:	mov	r3, #0
   14464:	ldr	ip, [fp, #-84]	; 0xffffffac
   14468:	mov	lr, r9
   1446c:	ldr	pc, [r1, r6, lsl #2]
   14470:	andeq	r4, r1, r8, asr #10
   14474:	andeq	r4, r1, r8, ror r5
   14478:	andeq	r4, r1, r8, lsr r5
   1447c:	andeq	r4, r1, r0, lsr r5
   14480:	andeq	r4, r1, ip, ror #10
   14484:	andeq	r4, r1, ip, asr #11
   14488:	andeq	r4, r1, r8, asr r5
   1448c:	andeq	r4, r1, r8, lsr #12
   14490:	muleq	r1, ip, r4
   14494:	muleq	r1, ip, r4
   14498:	andeq	r4, r1, r4, asr #9
   1449c:	movw	r0, #44412	; 0xad7c
   144a0:	movt	r0, #1
   144a4:	mov	r1, r6
   144a8:	bl	159c4 <tcgetattr@plt+0x45fc>
   144ac:	str	r0, [sp, #68]	; 0x44
   144b0:	movw	r0, #44414	; 0xad7e
   144b4:	movt	r0, #1
   144b8:	mov	r1, r6
   144bc:	bl	159c4 <tcgetattr@plt+0x45fc>
   144c0:	str	r0, [sp, #76]	; 0x4c
   144c4:	mov	r8, #0
   144c8:	tst	sl, #1
   144cc:	bne	14504 <tcgetattr@plt+0x313c>
   144d0:	ldr	r0, [sp, #68]	; 0x44
   144d4:	ldrb	r0, [r0]
   144d8:	cmp	r0, #0
   144dc:	beq	14504 <tcgetattr@plt+0x313c>
   144e0:	ldr	r1, [sp, #68]	; 0x44
   144e4:	add	r1, r1, #1
   144e8:	mov	r8, #0
   144ec:	cmp	r8, r4
   144f0:	strbcc	r0, [r7, r8]
   144f4:	ldrb	r0, [r1, r8]
   144f8:	add	r8, r8, #1
   144fc:	cmp	r0, #0
   14500:	bne	144ec <tcgetattr@plt+0x3124>
   14504:	ldr	r6, [sp, #76]	; 0x4c
   14508:	mov	r0, r6
   1450c:	bl	112a8 <strlen@plt>
   14510:	str	r0, [fp, #-72]	; 0xffffffb8
   14514:	str	r6, [sp, #92]	; 0x5c
   14518:	mov	r2, #1
   1451c:	mov	r3, sl
   14520:	ldr	ip, [fp, #-84]	; 0xffffffac
   14524:	mov	lr, r9
   14528:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1452c:	b	14628 <tcgetattr@plt+0x3260>
   14530:	mov	r0, #1
   14534:	b	14578 <tcgetattr@plt+0x31b0>
   14538:	tst	sl, #1
   1453c:	bne	14578 <tcgetattr@plt+0x31b0>
   14540:	mov	r2, r0
   14544:	b	145a0 <tcgetattr@plt+0x31d8>
   14548:	mov	r6, #0
   1454c:	mov	r8, #0
   14550:	mov	r2, r0
   14554:	b	14624 <tcgetattr@plt+0x325c>
   14558:	mov	r0, #1
   1455c:	str	r0, [fp, #-72]	; 0xffffffb8
   14560:	mov	r8, #0
   14564:	mov	r6, #5
   14568:	b	145e4 <tcgetattr@plt+0x321c>
   1456c:	mov	r2, #1
   14570:	tst	sl, #1
   14574:	beq	145a0 <tcgetattr@plt+0x31d8>
   14578:	mov	r1, #1
   1457c:	str	r1, [fp, #-72]	; 0xffffffb8
   14580:	mov	r8, #0
   14584:	mov	r6, #2
   14588:	movw	r1, #44414	; 0xad7e
   1458c:	movt	r1, #1
   14590:	str	r1, [sp, #92]	; 0x5c
   14594:	mov	r2, r0
   14598:	mov	r3, #1
   1459c:	b	14628 <tcgetattr@plt+0x3260>
   145a0:	mov	r8, #1
   145a4:	mov	r6, #2
   145a8:	cmp	r4, #0
   145ac:	movne	r0, #39	; 0x27
   145b0:	strbne	r0, [r7]
   145b4:	movw	r0, #44414	; 0xad7e
   145b8:	movt	r0, #1
   145bc:	str	r0, [sp, #92]	; 0x5c
   145c0:	mov	r0, #1
   145c4:	str	r0, [fp, #-72]	; 0xffffffb8
   145c8:	b	14624 <tcgetattr@plt+0x325c>
   145cc:	mov	r6, #5
   145d0:	tst	sl, #1
   145d4:	beq	145fc <tcgetattr@plt+0x3234>
   145d8:	mov	r0, #1
   145dc:	str	r0, [fp, #-72]	; 0xffffffb8
   145e0:	mov	r8, #0
   145e4:	movw	r0, #44410	; 0xad7a
   145e8:	movt	r0, #1
   145ec:	str	r0, [sp, #92]	; 0x5c
   145f0:	mov	r2, #1
   145f4:	mov	r3, #1
   145f8:	b	14628 <tcgetattr@plt+0x3260>
   145fc:	cmp	r4, #0
   14600:	movne	r0, #34	; 0x22
   14604:	strbne	r0, [r7]
   14608:	mov	r8, #1
   1460c:	movw	r0, #44410	; 0xad7a
   14610:	movt	r0, #1
   14614:	str	r0, [sp, #92]	; 0x5c
   14618:	mov	r0, #1
   1461c:	str	r0, [fp, #-72]	; 0xffffffb8
   14620:	mov	r2, #1
   14624:	mov	r3, #0
   14628:	ldr	r0, [fp, #16]
   1462c:	cmp	r0, #0
   14630:	movwne	r0, #1
   14634:	and	r0, r0, r3
   14638:	str	r0, [fp, #-88]	; 0xffffffa8
   1463c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14640:	cmp	r0, #0
   14644:	movwne	r0, #1
   14648:	and	r1, r0, r3
   1464c:	and	r1, r2, r1
   14650:	str	r1, [sp, #48]	; 0x30
   14654:	str	r6, [fp, #-60]	; 0xffffffc4
   14658:	subs	r6, r6, #2
   1465c:	clz	r1, r6
   14660:	lsr	r1, r1, #5
   14664:	and	r1, r1, r3
   14668:	str	r1, [sp, #60]	; 0x3c
   1466c:	str	r6, [fp, #-80]	; 0xffffffb0
   14670:	mov	r1, r6
   14674:	movwne	r1, #1
   14678:	str	r3, [fp, #-76]	; 0xffffffb4
   1467c:	eor	r3, r3, #1
   14680:	str	r3, [sp, #88]	; 0x58
   14684:	orr	r3, r1, r3
   14688:	str	r3, [sp, #64]	; 0x40
   1468c:	and	r1, r1, r2
   14690:	str	r1, [fp, #-68]	; 0xffffffbc
   14694:	and	r0, r0, r1
   14698:	str	r0, [fp, #-64]	; 0xffffffc0
   1469c:	str	r2, [sp, #84]	; 0x54
   146a0:	eor	r0, r2, #1
   146a4:	str	r0, [sp, #52]	; 0x34
   146a8:	mov	r6, #0
   146ac:	cmn	lr, #1
   146b0:	beq	146c0 <tcgetattr@plt+0x32f8>
   146b4:	cmp	r6, lr
   146b8:	bne	146cc <tcgetattr@plt+0x3304>
   146bc:	b	15238 <tcgetattr@plt+0x3e70>
   146c0:	ldrb	r0, [ip, r6]
   146c4:	cmp	r0, #0
   146c8:	beq	15238 <tcgetattr@plt+0x3e70>
   146cc:	str	r5, [fp, #-48]	; 0xffffffd0
   146d0:	mov	sl, #0
   146d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   146d8:	cmp	r0, #0
   146dc:	beq	14710 <tcgetattr@plt+0x3348>
   146e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   146e4:	add	r5, r6, r0
   146e8:	cmp	r0, #2
   146ec:	bcc	14708 <tcgetattr@plt+0x3340>
   146f0:	cmn	lr, #1
   146f4:	bne	14708 <tcgetattr@plt+0x3340>
   146f8:	mov	r0, ip
   146fc:	bl	112a8 <strlen@plt>
   14700:	ldr	ip, [fp, #-84]	; 0xffffffac
   14704:	mov	lr, r0
   14708:	cmp	r5, lr
   1470c:	bls	1471c <tcgetattr@plt+0x3354>
   14710:	mov	r0, #0
   14714:	str	r0, [fp, #-52]	; 0xffffffcc
   14718:	b	14768 <tcgetattr@plt+0x33a0>
   1471c:	mov	r5, r4
   14720:	mov	r4, lr
   14724:	add	r0, ip, r6
   14728:	ldr	r1, [sp, #92]	; 0x5c
   1472c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14730:	bl	11164 <memcmp@plt>
   14734:	cmp	r0, #0
   14738:	mov	r1, r0
   1473c:	movwne	r1, #1
   14740:	ldr	r2, [sp, #88]	; 0x58
   14744:	orr	r1, r1, r2
   14748:	tst	r1, #1
   1474c:	beq	152fc <tcgetattr@plt+0x3f34>
   14750:	clz	r0, r0
   14754:	lsr	r0, r0, #5
   14758:	str	r0, [fp, #-52]	; 0xffffffcc
   1475c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14760:	mov	lr, r4
   14764:	mov	r4, r5
   14768:	ldrb	r5, [ip, r6]
   1476c:	cmp	r5, #126	; 0x7e
   14770:	bhi	14b2c <tcgetattr@plt+0x3764>
   14774:	mov	r9, #1
   14778:	mov	r2, #110	; 0x6e
   1477c:	mov	r0, #97	; 0x61
   14780:	add	r3, pc, #4
   14784:	mov	r1, #0
   14788:	ldr	pc, [r3, r5, lsl #2]
   1478c:	andeq	r4, r1, r4, lsr #20
   14790:	andeq	r4, r1, ip, lsr #22
   14794:	andeq	r4, r1, ip, lsr #22
   14798:	andeq	r4, r1, ip, lsr #22
   1479c:	andeq	r4, r1, ip, lsr #22
   147a0:	andeq	r4, r1, ip, lsr #22
   147a4:	andeq	r4, r1, ip, lsr #22
   147a8:	strdeq	r4, [r1], -r0
   147ac:	andeq	r4, r1, r4, lsl #20
   147b0:	strdeq	r4, [r1], -ip
   147b4:	andeq	r4, r1, r0, lsl sl
   147b8:	muleq	r1, r4, sl
   147bc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   147c0:	andeq	r4, r1, ip, lsl #20
   147c4:	andeq	r4, r1, ip, lsr #22
   147c8:	andeq	r4, r1, ip, lsr #22
   147cc:	andeq	r4, r1, ip, lsr #22
   147d0:	andeq	r4, r1, ip, lsr #22
   147d4:	andeq	r4, r1, ip, lsr #22
   147d8:	andeq	r4, r1, ip, lsr #22
   147dc:	andeq	r4, r1, ip, lsr #22
   147e0:	andeq	r4, r1, ip, lsr #22
   147e4:	andeq	r4, r1, ip, lsr #22
   147e8:	andeq	r4, r1, ip, lsr #22
   147ec:	andeq	r4, r1, ip, lsr #22
   147f0:	andeq	r4, r1, ip, lsr #22
   147f4:	andeq	r4, r1, ip, lsr #22
   147f8:	andeq	r4, r1, ip, lsr #22
   147fc:	andeq	r4, r1, ip, lsr #22
   14800:	andeq	r4, r1, ip, lsr #22
   14804:	andeq	r4, r1, ip, lsr #22
   14808:	andeq	r4, r1, ip, lsr #22
   1480c:	andeq	r4, r1, r0, lsr #23
   14810:	andeq	r4, r1, r4, lsr #23
   14814:	andeq	r4, r1, r4, lsr #23
   14818:	muleq	r1, ip, r9
   1481c:	andeq	r4, r1, r4, lsr #23
   14820:	andeq	r4, r1, r8, lsl #19
   14824:	andeq	r4, r1, r4, lsr #23
   14828:	muleq	r1, ip, sl
   1482c:	andeq	r4, r1, r4, lsr #23
   14830:	andeq	r4, r1, r4, lsr #23
   14834:	andeq	r4, r1, r4, lsr #23
   14838:	andeq	r4, r1, r8, lsl #19
   1483c:	andeq	r4, r1, r8, lsl #19
   14840:	andeq	r4, r1, r8, lsl #19
   14844:	andeq	r4, r1, r8, lsl #19
   14848:	andeq	r4, r1, r8, lsl #19
   1484c:	andeq	r4, r1, r8, lsl #19
   14850:	andeq	r4, r1, r8, lsl #19
   14854:	andeq	r4, r1, r8, lsl #19
   14858:	andeq	r4, r1, r8, lsl #19
   1485c:	andeq	r4, r1, r8, lsl #19
   14860:	andeq	r4, r1, r8, lsl #19
   14864:	andeq	r4, r1, r8, lsl #19
   14868:	andeq	r4, r1, r8, lsl #19
   1486c:	andeq	r4, r1, r8, lsl #19
   14870:	andeq	r4, r1, r8, lsl #19
   14874:	andeq	r4, r1, r8, lsl #19
   14878:	andeq	r4, r1, r4, lsr #23
   1487c:	andeq	r4, r1, r4, lsr #23
   14880:	andeq	r4, r1, r4, lsr #23
   14884:	andeq	r4, r1, r4, lsr #23
   14888:	andeq	r4, r1, r4, ror #20
   1488c:	andeq	r4, r1, ip, lsr #22
   14890:	andeq	r4, r1, r8, lsl #19
   14894:	andeq	r4, r1, r8, lsl #19
   14898:	andeq	r4, r1, r8, lsl #19
   1489c:	andeq	r4, r1, r8, lsl #19
   148a0:	andeq	r4, r1, r8, lsl #19
   148a4:	andeq	r4, r1, r8, lsl #19
   148a8:	andeq	r4, r1, r8, lsl #19
   148ac:	andeq	r4, r1, r8, lsl #19
   148b0:	andeq	r4, r1, r8, lsl #19
   148b4:	andeq	r4, r1, r8, lsl #19
   148b8:	andeq	r4, r1, r8, lsl #19
   148bc:	andeq	r4, r1, r8, lsl #19
   148c0:	andeq	r4, r1, r8, lsl #19
   148c4:	andeq	r4, r1, r8, lsl #19
   148c8:	andeq	r4, r1, r8, lsl #19
   148cc:	andeq	r4, r1, r8, lsl #19
   148d0:	andeq	r4, r1, r8, lsl #19
   148d4:	andeq	r4, r1, r8, lsl #19
   148d8:	andeq	r4, r1, r8, lsl #19
   148dc:	andeq	r4, r1, r8, lsl #19
   148e0:	andeq	r4, r1, r8, lsl #19
   148e4:	andeq	r4, r1, r8, lsl #19
   148e8:	andeq	r4, r1, r8, lsl #19
   148ec:	andeq	r4, r1, r8, lsl #19
   148f0:	andeq	r4, r1, r8, lsl #19
   148f4:	andeq	r4, r1, r8, lsl #19
   148f8:	andeq	r4, r1, r4, lsr #23
   148fc:	ldrdeq	r4, [r1], -r0
   14900:	andeq	r4, r1, r8, lsl #19
   14904:	andeq	r4, r1, r4, lsr #23
   14908:	andeq	r4, r1, r8, lsl #19
   1490c:	andeq	r4, r1, r4, lsr #23
   14910:	andeq	r4, r1, r8, lsl #19
   14914:	andeq	r4, r1, r8, lsl #19
   14918:	andeq	r4, r1, r8, lsl #19
   1491c:	andeq	r4, r1, r8, lsl #19
   14920:	andeq	r4, r1, r8, lsl #19
   14924:	andeq	r4, r1, r8, lsl #19
   14928:	andeq	r4, r1, r8, lsl #19
   1492c:	andeq	r4, r1, r8, lsl #19
   14930:	andeq	r4, r1, r8, lsl #19
   14934:	andeq	r4, r1, r8, lsl #19
   14938:	andeq	r4, r1, r8, lsl #19
   1493c:	andeq	r4, r1, r8, lsl #19
   14940:	andeq	r4, r1, r8, lsl #19
   14944:	andeq	r4, r1, r8, lsl #19
   14948:	andeq	r4, r1, r8, lsl #19
   1494c:	andeq	r4, r1, r8, lsl #19
   14950:	andeq	r4, r1, r8, lsl #19
   14954:	andeq	r4, r1, r8, lsl #19
   14958:	andeq	r4, r1, r8, lsl #19
   1495c:	andeq	r4, r1, r8, lsl #19
   14960:	andeq	r4, r1, r8, lsl #19
   14964:	andeq	r4, r1, r8, lsl #19
   14968:	andeq	r4, r1, r8, lsl #19
   1496c:	andeq	r4, r1, r8, lsl #19
   14970:	andeq	r4, r1, r8, lsl #19
   14974:	andeq	r4, r1, r8, lsl #19
   14978:			; <UNDEFINED> instruction: 0x000149b0
   1497c:	andeq	r4, r1, r4, lsr #23
   14980:			; <UNDEFINED> instruction: 0x000149b0
   14984:	muleq	r1, ip, r9
   14988:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1498c:	cmp	r0, #0
   14990:	beq	14c04 <tcgetattr@plt+0x383c>
   14994:	ldr	r0, [fp, #16]
   14998:	b	14c08 <tcgetattr@plt+0x3840>
   1499c:	mov	r9, #0
   149a0:	cmp	r6, #0
   149a4:	beq	14ba0 <tcgetattr@plt+0x37d8>
   149a8:	mov	sl, #0
   149ac:	b	14988 <tcgetattr@plt+0x35c0>
   149b0:	mov	r9, #0
   149b4:	cmn	lr, #1
   149b8:	beq	14b84 <tcgetattr@plt+0x37bc>
   149bc:	cmp	r6, #0
   149c0:	bne	149a8 <tcgetattr@plt+0x35e0>
   149c4:	cmp	lr, #1
   149c8:	beq	14ba0 <tcgetattr@plt+0x37d8>
   149cc:	b	149a8 <tcgetattr@plt+0x35e0>
   149d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   149d4:	cmp	r0, #2
   149d8:	bne	14bcc <tcgetattr@plt+0x3804>
   149dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   149e0:	tst	r0, #1
   149e4:	bne	15314 <tcgetattr@plt+0x3f4c>
   149e8:	mov	sl, #0
   149ec:	mov	r0, #92	; 0x5c
   149f0:	b	14be0 <tcgetattr@plt+0x3818>
   149f4:	mov	r0, #102	; 0x66
   149f8:	b	14bf0 <tcgetattr@plt+0x3828>
   149fc:	mov	r2, #116	; 0x74
   14a00:	b	14a10 <tcgetattr@plt+0x3648>
   14a04:	mov	r0, #98	; 0x62
   14a08:	b	14bf0 <tcgetattr@plt+0x3828>
   14a0c:	mov	r2, #114	; 0x72
   14a10:	ldr	r0, [sp, #64]	; 0x40
   14a14:	tst	r0, #1
   14a18:	mov	r0, r2
   14a1c:	bne	14bf0 <tcgetattr@plt+0x3828>
   14a20:	b	15314 <tcgetattr@plt+0x3f4c>
   14a24:	ldr	r0, [sp, #84]	; 0x54
   14a28:	tst	r0, #1
   14a2c:	beq	14ce0 <tcgetattr@plt+0x3918>
   14a30:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14a34:	tst	r0, #1
   14a38:	bne	15314 <tcgetattr@plt+0x3f4c>
   14a3c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14a40:	cmp	r0, #2
   14a44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14a48:	movwne	r0, #1
   14a4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14a50:	orr	r0, r0, r2
   14a54:	tst	r0, #1
   14a58:	beq	150d4 <tcgetattr@plt+0x3d0c>
   14a5c:	mov	r0, r8
   14a60:	b	15108 <tcgetattr@plt+0x3d40>
   14a64:	mov	sl, #0
   14a68:	mov	r5, #63	; 0x3f
   14a6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14a70:	cmp	r0, #5
   14a74:	beq	14e94 <tcgetattr@plt+0x3acc>
   14a78:	cmp	r0, #2
   14a7c:	bne	14f34 <tcgetattr@plt+0x3b6c>
   14a80:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14a84:	tst	r0, #1
   14a88:	mov	r9, #0
   14a8c:	beq	14988 <tcgetattr@plt+0x35c0>
   14a90:	b	15314 <tcgetattr@plt+0x3f4c>
   14a94:	mov	r0, #118	; 0x76
   14a98:	b	14bf0 <tcgetattr@plt+0x3828>
   14a9c:	mov	r5, #39	; 0x27
   14aa0:	mov	r0, #1
   14aa4:	str	r0, [sp, #56]	; 0x38
   14aa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14aac:	cmp	r0, #2
   14ab0:	bne	14d00 <tcgetattr@plt+0x3938>
   14ab4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14ab8:	tst	r0, #1
   14abc:	bne	15314 <tcgetattr@plt+0x3f4c>
   14ac0:	ldr	r2, [sp, #72]	; 0x48
   14ac4:	cmp	r2, #0
   14ac8:	mov	r0, r2
   14acc:	movwne	r0, #1
   14ad0:	clz	r1, r4
   14ad4:	lsr	r1, r1, #5
   14ad8:	orrs	r0, r0, r1
   14adc:	moveq	r2, r4
   14ae0:	str	r2, [sp, #72]	; 0x48
   14ae4:	moveq	r4, r0
   14ae8:	cmp	r8, r4
   14aec:	movcc	r0, #39	; 0x27
   14af0:	strbcc	r0, [r7, r8]
   14af4:	add	r0, r8, #1
   14af8:	cmp	r0, r4
   14afc:	movcc	r1, #92	; 0x5c
   14b00:	strbcc	r1, [r7, r0]
   14b04:	add	r0, r8, #2
   14b08:	cmp	r0, r4
   14b0c:	movcc	r1, #39	; 0x27
   14b10:	strbcc	r1, [r7, r0]
   14b14:	add	r8, r8, #3
   14b18:	mov	r0, #0
   14b1c:	str	r0, [fp, #-56]	; 0xffffffc8
   14b20:	mov	sl, #0
   14b24:	mov	r9, #1
   14b28:	b	14988 <tcgetattr@plt+0x35c0>
   14b2c:	str	r4, [sp, #24]
   14b30:	ldr	r0, [sp, #40]	; 0x28
   14b34:	cmp	r0, #1
   14b38:	bne	14d08 <tcgetattr@plt+0x3940>
   14b3c:	str	lr, [sp, #28]
   14b40:	bl	11284 <__ctype_b_loc@plt>
   14b44:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b48:	ldr	r0, [r0]
   14b4c:	add	r0, r0, r5, lsl #1
   14b50:	ldrb	r0, [r0, #1]
   14b54:	ubfx	r9, r0, #6, #1
   14b58:	mov	r1, #1
   14b5c:	ldr	r4, [sp, #24]
   14b60:	ldr	r0, [sp, #52]	; 0x34
   14b64:	orr	r0, r9, r0
   14b68:	mov	r2, r1
   14b6c:	cmp	r1, #1
   14b70:	bhi	14f3c <tcgetattr@plt+0x3b74>
   14b74:	tst	r0, #1
   14b78:	beq	14f3c <tcgetattr@plt+0x3b74>
   14b7c:	ldr	lr, [sp, #28]
   14b80:	b	14988 <tcgetattr@plt+0x35c0>
   14b84:	cmp	r6, #0
   14b88:	ldrbeq	r0, [ip, #1]
   14b8c:	cmpeq	r0, #0
   14b90:	beq	14ba0 <tcgetattr@plt+0x37d8>
   14b94:	mvn	lr, #0
   14b98:	mov	sl, #0
   14b9c:	b	14988 <tcgetattr@plt+0x35c0>
   14ba0:	mov	r1, #1
   14ba4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14ba8:	cmp	r0, #2
   14bac:	bne	14bc4 <tcgetattr@plt+0x37fc>
   14bb0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14bb4:	tst	r0, #1
   14bb8:	mov	r9, r1
   14bbc:	beq	14988 <tcgetattr@plt+0x35c0>
   14bc0:	b	15314 <tcgetattr@plt+0x3f4c>
   14bc4:	mov	r9, r1
   14bc8:	b	14988 <tcgetattr@plt+0x35c0>
   14bcc:	mov	sl, #0
   14bd0:	mov	r0, #92	; 0x5c
   14bd4:	ldr	r1, [sp, #48]	; 0x30
   14bd8:	cmp	r1, #0
   14bdc:	beq	14bf0 <tcgetattr@plt+0x3828>
   14be0:	mov	r9, #0
   14be4:	cmp	sl, #0
   14be8:	beq	151a0 <tcgetattr@plt+0x3dd8>
   14bec:	b	151dc <tcgetattr@plt+0x3e14>
   14bf0:	mov	r9, #0
   14bf4:	ldr	r1, [sp, #84]	; 0x54
   14bf8:	tst	r1, #1
   14bfc:	mov	sl, #0
   14c00:	bne	14c40 <tcgetattr@plt+0x3878>
   14c04:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14c08:	cmp	r0, #0
   14c0c:	mov	r0, r5
   14c10:	beq	14c34 <tcgetattr@plt+0x386c>
   14c14:	ubfx	r0, r5, #5, #3
   14c18:	ldr	r1, [fp, #16]
   14c1c:	ldr	r0, [r1, r0, lsl #2]
   14c20:	and	r1, r5, #31
   14c24:	mov	r2, #1
   14c28:	tst	r0, r2, lsl r1
   14c2c:	mov	r0, r5
   14c30:	bne	14c40 <tcgetattr@plt+0x3878>
   14c34:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14c38:	cmp	r1, #0
   14c3c:	beq	15198 <tcgetattr@plt+0x3dd0>
   14c40:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14c44:	tst	r1, #1
   14c48:	bne	15314 <tcgetattr@plt+0x3f4c>
   14c4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14c50:	cmp	r1, #2
   14c54:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14c58:	movwne	r1, #1
   14c5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14c60:	orr	r1, r1, r2
   14c64:	tst	r1, #1
   14c68:	beq	14c74 <tcgetattr@plt+0x38ac>
   14c6c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14c70:	b	14cb0 <tcgetattr@plt+0x38e8>
   14c74:	cmp	r8, r4
   14c78:	movcc	r1, #39	; 0x27
   14c7c:	strbcc	r1, [r7, r8]
   14c80:	add	r1, r8, #1
   14c84:	cmp	r1, r4
   14c88:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14c8c:	movcc	r2, #36	; 0x24
   14c90:	strbcc	r2, [r7, r1]
   14c94:	add	r1, r8, #2
   14c98:	cmp	r1, r4
   14c9c:	movcc	r2, #39	; 0x27
   14ca0:	strbcc	r2, [r7, r1]
   14ca4:	add	r8, r8, #3
   14ca8:	mov	r1, #1
   14cac:	str	r1, [fp, #-56]	; 0xffffffc8
   14cb0:	cmp	r8, r4
   14cb4:	movcc	r1, #92	; 0x5c
   14cb8:	strbcc	r1, [r7, r8]
   14cbc:	add	r8, r8, #1
   14cc0:	cmp	r8, r4
   14cc4:	strbcc	r0, [r7, r8]
   14cc8:	and	r5, r5, r9
   14ccc:	add	r8, r8, #1
   14cd0:	add	r6, r6, #1
   14cd4:	cmn	lr, #1
   14cd8:	bne	146b4 <tcgetattr@plt+0x32ec>
   14cdc:	b	146c0 <tcgetattr@plt+0x32f8>
   14ce0:	mov	r9, #0
   14ce4:	ldr	r0, [sp, #36]	; 0x24
   14ce8:	cmp	r0, #0
   14cec:	mov	sl, #0
   14cf0:	mov	r5, #0
   14cf4:	beq	14c04 <tcgetattr@plt+0x383c>
   14cf8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14cfc:	b	14cd0 <tcgetattr@plt+0x3908>
   14d00:	mov	r9, #1
   14d04:	b	14988 <tcgetattr@plt+0x35c0>
   14d08:	mov	r0, #0
   14d0c:	str	r0, [fp, #-36]	; 0xffffffdc
   14d10:	str	r0, [fp, #-40]	; 0xffffffd8
   14d14:	cmn	lr, #1
   14d18:	bne	14d2c <tcgetattr@plt+0x3964>
   14d1c:	mov	r0, ip
   14d20:	bl	112a8 <strlen@plt>
   14d24:	ldr	ip, [fp, #-84]	; 0xffffffac
   14d28:	mov	lr, r0
   14d2c:	add	r0, ip, r6
   14d30:	str	r0, [sp, #20]
   14d34:	mov	r9, #1
   14d38:	mov	r7, #0
   14d3c:	sub	r4, fp, #40	; 0x28
   14d40:	str	lr, [sp, #28]
   14d44:	str	r7, [sp, #44]	; 0x2c
   14d48:	add	r7, r7, r6
   14d4c:	add	r1, ip, r7
   14d50:	sub	r2, lr, r7
   14d54:	sub	r0, fp, #44	; 0x2c
   14d58:	mov	r3, r4
   14d5c:	bl	17890 <tcgetattr@plt+0x64c8>
   14d60:	cmp	r0, #0
   14d64:	beq	15224 <tcgetattr@plt+0x3e5c>
   14d68:	cmn	r0, #1
   14d6c:	beq	151e4 <tcgetattr@plt+0x3e1c>
   14d70:	cmn	r0, #2
   14d74:	ldr	lr, [sp, #28]
   14d78:	beq	151ec <tcgetattr@plt+0x3e24>
   14d7c:	cmp	r0, #2
   14d80:	mov	r1, #0
   14d84:	movwcc	r1, #1
   14d88:	ldr	r2, [sp, #60]	; 0x3c
   14d8c:	eor	r2, r2, #1
   14d90:	orrs	r1, r2, r1
   14d94:	ldr	r4, [sp, #24]
   14d98:	bne	14e58 <tcgetattr@plt+0x3a90>
   14d9c:	ldr	r1, [sp, #44]	; 0x2c
   14da0:	ldr	r2, [sp, #20]
   14da4:	add	r1, r2, r1
   14da8:	mov	r2, #1
   14dac:	ldrb	r3, [r1, r2]
   14db0:	sub	r3, r3, #91	; 0x5b
   14db4:	cmp	r3, #33	; 0x21
   14db8:	bhi	14e4c <tcgetattr@plt+0x3a84>
   14dbc:	add	r7, pc, #0
   14dc0:	ldr	pc, [r7, r3, lsl #2]
   14dc4:	andeq	r5, r1, ip, lsl #6
   14dc8:	andeq	r5, r1, ip, lsl #6
   14dcc:	andeq	r4, r1, ip, asr #28
   14dd0:	andeq	r5, r1, ip, lsl #6
   14dd4:	andeq	r4, r1, ip, asr #28
   14dd8:	andeq	r5, r1, ip, lsl #6
   14ddc:	andeq	r4, r1, ip, asr #28
   14de0:	andeq	r4, r1, ip, asr #28
   14de4:	andeq	r4, r1, ip, asr #28
   14de8:	andeq	r4, r1, ip, asr #28
   14dec:	andeq	r4, r1, ip, asr #28
   14df0:	andeq	r4, r1, ip, asr #28
   14df4:	andeq	r4, r1, ip, asr #28
   14df8:	andeq	r4, r1, ip, asr #28
   14dfc:	andeq	r4, r1, ip, asr #28
   14e00:	andeq	r4, r1, ip, asr #28
   14e04:	andeq	r4, r1, ip, asr #28
   14e08:	andeq	r4, r1, ip, asr #28
   14e0c:	andeq	r4, r1, ip, asr #28
   14e10:	andeq	r4, r1, ip, asr #28
   14e14:	andeq	r4, r1, ip, asr #28
   14e18:	andeq	r4, r1, ip, asr #28
   14e1c:	andeq	r4, r1, ip, asr #28
   14e20:	andeq	r4, r1, ip, asr #28
   14e24:	andeq	r4, r1, ip, asr #28
   14e28:	andeq	r4, r1, ip, asr #28
   14e2c:	andeq	r4, r1, ip, asr #28
   14e30:	andeq	r4, r1, ip, asr #28
   14e34:	andeq	r4, r1, ip, asr #28
   14e38:	andeq	r4, r1, ip, asr #28
   14e3c:	andeq	r4, r1, ip, asr #28
   14e40:	andeq	r4, r1, ip, asr #28
   14e44:	andeq	r4, r1, ip, asr #28
   14e48:	andeq	r5, r1, ip, lsl #6
   14e4c:	add	r2, r2, #1
   14e50:	cmp	r2, r0
   14e54:	bcc	14dac <tcgetattr@plt+0x39e4>
   14e58:	ldr	r7, [sp, #44]	; 0x2c
   14e5c:	add	r7, r0, r7
   14e60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e64:	bl	111ac <iswprint@plt>
   14e68:	cmp	r0, #0
   14e6c:	movwne	r0, #1
   14e70:	and	r9, r9, r0
   14e74:	sub	r4, fp, #40	; 0x28
   14e78:	mov	r0, r4
   14e7c:	bl	11158 <mbsinit@plt>
   14e80:	ldr	lr, [sp, #28]
   14e84:	cmp	r0, #0
   14e88:	ldr	ip, [fp, #-84]	; 0xffffffac
   14e8c:	beq	14d44 <tcgetattr@plt+0x397c>
   14e90:	b	1522c <tcgetattr@plt+0x3e64>
   14e94:	ldr	r0, [sp, #32]
   14e98:	cmp	r0, #0
   14e9c:	beq	14f34 <tcgetattr@plt+0x3b6c>
   14ea0:	add	r0, r6, #2
   14ea4:	cmp	r0, lr
   14ea8:	bcs	14f34 <tcgetattr@plt+0x3b6c>
   14eac:	add	r1, ip, r6
   14eb0:	ldrb	r1, [r1, #1]
   14eb4:	cmp	r1, #63	; 0x3f
   14eb8:	bne	14f34 <tcgetattr@plt+0x3b6c>
   14ebc:	ldrb	r9, [ip, r0]
   14ec0:	sub	r2, r9, #33	; 0x21
   14ec4:	cmp	r2, #29
   14ec8:	bhi	14f34 <tcgetattr@plt+0x3b6c>
   14ecc:	mov	r3, #1
   14ed0:	movw	r1, #20929	; 0x51c1
   14ed4:	movt	r1, #14336	; 0x3800
   14ed8:	tst	r1, r3, lsl r2
   14edc:	beq	14f34 <tcgetattr@plt+0x3b6c>
   14ee0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14ee4:	tst	r1, #1
   14ee8:	bne	15314 <tcgetattr@plt+0x3f4c>
   14eec:	cmp	r8, r4
   14ef0:	movcc	r1, #63	; 0x3f
   14ef4:	strbcc	r1, [r7, r8]
   14ef8:	add	r2, r8, #1
   14efc:	cmp	r2, r4
   14f00:	movcc	r1, #34	; 0x22
   14f04:	strbcc	r1, [r7, r2]
   14f08:	add	r2, r8, #2
   14f0c:	cmp	r2, r4
   14f10:	movcc	r1, #34	; 0x22
   14f14:	strbcc	r1, [r7, r2]
   14f18:	add	r2, r8, #3
   14f1c:	cmp	r2, r4
   14f20:	movcc	r1, #63	; 0x3f
   14f24:	strbcc	r1, [r7, r2]
   14f28:	add	r8, r8, #4
   14f2c:	mov	r6, r0
   14f30:	mov	r5, r9
   14f34:	mov	r9, #0
   14f38:	b	14988 <tcgetattr@plt+0x35c0>
   14f3c:	add	r1, r2, r6
   14f40:	str	r1, [sp, #44]	; 0x2c
   14f44:	add	r1, r6, #1
   14f48:	mov	r3, #0
   14f4c:	ldr	lr, [sp, #28]
   14f50:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14f54:	tst	r0, #1
   14f58:	bne	1504c <tcgetattr@plt+0x3c84>
   14f5c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14f60:	tst	r2, #1
   14f64:	bne	15314 <tcgetattr@plt+0x3f4c>
   14f68:	cmp	r6, #2
   14f6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14f70:	movwne	r3, #1
   14f74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f78:	orr	r3, r3, r2
   14f7c:	tst	r3, #1
   14f80:	bne	14fbc <tcgetattr@plt+0x3bf4>
   14f84:	cmp	r8, r4
   14f88:	movcc	r2, #39	; 0x27
   14f8c:	strbcc	r2, [r7, r8]
   14f90:	add	r3, r8, #1
   14f94:	cmp	r3, r4
   14f98:	movcc	r2, #36	; 0x24
   14f9c:	strbcc	r2, [r7, r3]
   14fa0:	add	r3, r8, #2
   14fa4:	cmp	r3, r4
   14fa8:	movcc	r2, #39	; 0x27
   14fac:	strbcc	r2, [r7, r3]
   14fb0:	add	r8, r8, #3
   14fb4:	mov	r2, #1
   14fb8:	str	r2, [fp, #-56]	; 0xffffffc8
   14fbc:	cmp	r8, r4
   14fc0:	movcc	r2, #92	; 0x5c
   14fc4:	strbcc	r2, [r7, r8]
   14fc8:	add	r3, r8, #1
   14fcc:	cmp	r3, r4
   14fd0:	bcs	14ff0 <tcgetattr@plt+0x3c28>
   14fd4:	and	r7, r5, #192	; 0xc0
   14fd8:	mov	r2, #48	; 0x30
   14fdc:	orr	r7, r2, r7, lsr #6
   14fe0:	ldr	r6, [sp, #80]	; 0x50
   14fe4:	strb	r7, [r6, r3]
   14fe8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14fec:	ldr	r7, [sp, #80]	; 0x50
   14ff0:	add	r3, r8, #2
   14ff4:	cmp	r3, r4
   14ff8:	bcs	15018 <tcgetattr@plt+0x3c50>
   14ffc:	lsr	r7, r5, #3
   15000:	mov	r2, #6
   15004:	bfi	r7, r2, #3, #29
   15008:	ldr	r6, [sp, #80]	; 0x50
   1500c:	strb	r7, [r6, r3]
   15010:	ldr	r6, [fp, #-60]	; 0xffffffc4
   15014:	ldr	r7, [sp, #80]	; 0x50
   15018:	mov	r2, #6
   1501c:	bfi	r5, r2, #3, #29
   15020:	add	r8, r8, #3
   15024:	mov	r3, #1
   15028:	b	15070 <tcgetattr@plt+0x3ca8>
   1502c:	ldr	r7, [sp, #80]	; 0x50
   15030:	cmp	r8, r4
   15034:	strbcc	r5, [r7, r8]
   15038:	ldrb	r5, [ip, r1]
   1503c:	add	r1, r1, #1
   15040:	add	r8, r8, #1
   15044:	tst	r0, #1
   15048:	beq	14f5c <tcgetattr@plt+0x3b94>
   1504c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15050:	tst	r2, #1
   15054:	beq	15068 <tcgetattr@plt+0x3ca0>
   15058:	cmp	r8, r4
   1505c:	movcc	r2, #92	; 0x5c
   15060:	strbcc	r2, [r7, r8]
   15064:	add	r8, r8, #1
   15068:	mov	r2, #0
   1506c:	str	r2, [fp, #-52]	; 0xffffffcc
   15070:	and	sl, r3, #1
   15074:	ldr	r2, [sp, #44]	; 0x2c
   15078:	cmp	r2, r1
   1507c:	bls	15188 <tcgetattr@plt+0x3dc0>
   15080:	cmp	sl, #0
   15084:	movwne	sl, #1
   15088:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1508c:	mvn	r7, r2
   15090:	orr	r7, r7, sl
   15094:	tst	r7, #1
   15098:	bne	1502c <tcgetattr@plt+0x3c64>
   1509c:	cmp	r8, r4
   150a0:	ldrcc	r7, [sp, #80]	; 0x50
   150a4:	movcc	r2, #39	; 0x27
   150a8:	strbcc	r2, [r7, r8]
   150ac:	add	r7, r8, #1
   150b0:	cmp	r7, r4
   150b4:	ldrcc	r6, [sp, #80]	; 0x50
   150b8:	movcc	r2, #39	; 0x27
   150bc:	strbcc	r2, [r6, r7]
   150c0:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   150c4:	add	r8, r8, #2
   150c8:	mov	r2, #0
   150cc:	str	r2, [fp, #-56]	; 0xffffffc8
   150d0:	b	1502c <tcgetattr@plt+0x3c64>
   150d4:	cmp	r8, r4
   150d8:	movcc	r0, #39	; 0x27
   150dc:	strbcc	r0, [r7, r8]
   150e0:	add	r0, r8, #1
   150e4:	cmp	r0, r4
   150e8:	movcc	r1, #36	; 0x24
   150ec:	strbcc	r1, [r7, r0]
   150f0:	add	r0, r8, #2
   150f4:	cmp	r0, r4
   150f8:	movcc	r1, #39	; 0x27
   150fc:	strbcc	r1, [r7, r0]
   15100:	add	r0, r8, #3
   15104:	mov	r2, #1
   15108:	cmp	r0, r4
   1510c:	movcc	r1, #92	; 0x5c
   15110:	strbcc	r1, [r7, r0]
   15114:	str	r2, [fp, #-56]	; 0xffffffc8
   15118:	add	r8, r0, #1
   1511c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15120:	cmp	r1, #2
   15124:	beq	15178 <tcgetattr@plt+0x3db0>
   15128:	add	r1, r6, #1
   1512c:	mov	r9, #0
   15130:	mov	sl, #1
   15134:	mov	r5, #48	; 0x30
   15138:	cmp	r1, lr
   1513c:	bcs	14988 <tcgetattr@plt+0x35c0>
   15140:	ldrb	r1, [ip, r1]
   15144:	sub	r1, r1, #48	; 0x30
   15148:	uxtb	r1, r1
   1514c:	cmp	r1, #9
   15150:	bhi	14988 <tcgetattr@plt+0x35c0>
   15154:	cmp	r8, r4
   15158:	movcc	r1, #48	; 0x30
   1515c:	strbcc	r1, [r7, r8]
   15160:	add	r1, r0, #2
   15164:	cmp	r1, r4
   15168:	movcc	r2, #48	; 0x30
   1516c:	strbcc	r2, [r7, r1]
   15170:	add	r8, r0, #3
   15174:	b	14988 <tcgetattr@plt+0x35c0>
   15178:	mov	r0, #48	; 0x30
   1517c:	mov	sl, #1
   15180:	mov	r9, #0
   15184:	b	14c34 <tcgetattr@plt+0x386c>
   15188:	sub	r6, r1, #1
   1518c:	cmp	sl, #0
   15190:	movwne	sl, #1
   15194:	mov	r0, r5
   15198:	cmp	sl, #0
   1519c:	bne	151dc <tcgetattr@plt+0x3e14>
   151a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   151a4:	tst	r1, #1
   151a8:	beq	151dc <tcgetattr@plt+0x3e14>
   151ac:	cmp	r8, r4
   151b0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   151b4:	movcc	r1, #39	; 0x27
   151b8:	strbcc	r1, [r7, r8]
   151bc:	add	r1, r8, #1
   151c0:	cmp	r1, r4
   151c4:	movcc	r2, #39	; 0x27
   151c8:	strbcc	r2, [r7, r1]
   151cc:	add	r8, r8, #2
   151d0:	mov	r1, #0
   151d4:	str	r1, [fp, #-56]	; 0xffffffc8
   151d8:	b	14cc0 <tcgetattr@plt+0x38f8>
   151dc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   151e0:	b	14cc0 <tcgetattr@plt+0x38f8>
   151e4:	mov	r9, #0
   151e8:	b	15224 <tcgetattr@plt+0x3e5c>
   151ec:	mov	r9, #0
   151f0:	cmp	r7, lr
   151f4:	bcs	15224 <tcgetattr@plt+0x3e5c>
   151f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   151fc:	ldr	r7, [sp, #44]	; 0x2c
   15200:	ldr	r0, [sp, #20]
   15204:	ldrb	r0, [r0, r7]
   15208:	cmp	r0, #0
   1520c:	beq	1522c <tcgetattr@plt+0x3e64>
   15210:	add	r7, r7, #1
   15214:	add	r0, r6, r7
   15218:	cmp	r0, lr
   1521c:	bcc	15200 <tcgetattr@plt+0x3e38>
   15220:	b	1522c <tcgetattr@plt+0x3e64>
   15224:	ldr	ip, [fp, #-84]	; 0xffffffac
   15228:	ldr	r7, [sp, #44]	; 0x2c
   1522c:	mov	r1, r7
   15230:	ldr	r7, [sp, #80]	; 0x50
   15234:	b	14b5c <tcgetattr@plt+0x3794>
   15238:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1523c:	eor	r0, r1, #2
   15240:	orr	r0, r0, r8
   15244:	clz	r0, r0
   15248:	lsr	r0, r0, #5
   1524c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15250:	tst	r2, r0
   15254:	bne	15314 <tcgetattr@plt+0x3f4c>
   15258:	cmp	r1, #2
   1525c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15260:	movwne	r0, #1
   15264:	orr	r0, r2, r0
   15268:	tst	r0, #1
   1526c:	ldreq	r0, [sp, #56]	; 0x38
   15270:	eoreq	r0, r0, #1
   15274:	tsteq	r0, #1
   15278:	bne	152ac <tcgetattr@plt+0x3ee4>
   1527c:	mov	r9, lr
   15280:	tst	r5, #1
   15284:	bne	1537c <tcgetattr@plt+0x3fb4>
   15288:	ldr	r0, [sp, #72]	; 0x48
   1528c:	cmp	r0, #0
   15290:	beq	152ac <tcgetattr@plt+0x3ee4>
   15294:	mov	r5, #0
   15298:	cmp	r4, #0
   1529c:	ldr	r0, [sp, #84]	; 0x54
   152a0:	mov	sl, r2
   152a4:	ldr	r6, [sp, #72]	; 0x48
   152a8:	beq	14444 <tcgetattr@plt+0x307c>
   152ac:	ldr	r1, [sp, #92]	; 0x5c
   152b0:	clz	r0, r1
   152b4:	lsr	r0, r0, #5
   152b8:	orr	r0, r0, r2
   152bc:	tst	r0, #1
   152c0:	bne	152ec <tcgetattr@plt+0x3f24>
   152c4:	ldrb	r0, [r1]
   152c8:	cmp	r0, #0
   152cc:	beq	152ec <tcgetattr@plt+0x3f24>
   152d0:	add	r1, r1, #1
   152d4:	cmp	r8, r4
   152d8:	strbcc	r0, [r7, r8]
   152dc:	add	r8, r8, #1
   152e0:	ldrb	r0, [r1], #1
   152e4:	cmp	r0, #0
   152e8:	bne	152d4 <tcgetattr@plt+0x3f0c>
   152ec:	cmp	r8, r4
   152f0:	movcc	r0, #0
   152f4:	strbcc	r0, [r7, r8]
   152f8:	b	15370 <tcgetattr@plt+0x3fa8>
   152fc:	ldr	ip, [fp, #-84]	; 0xffffffac
   15300:	mov	lr, r4
   15304:	mov	r4, r5
   15308:	b	15314 <tcgetattr@plt+0x3f4c>
   1530c:	ldr	r7, [sp, #80]	; 0x50
   15310:	ldr	ip, [fp, #-84]	; 0xffffffac
   15314:	mov	r0, #0
   15318:	ldr	r1, [fp, #12]
   1531c:	bic	r1, r1, #2
   15320:	ldr	r2, [sp, #84]	; 0x54
   15324:	tst	r2, #1
   15328:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1532c:	mov	r2, r3
   15330:	movwne	r2, #4
   15334:	cmp	r3, #2
   15338:	movne	r2, r3
   1533c:	str	r2, [sp]
   15340:	str	r1, [sp, #4]
   15344:	str	r0, [sp, #8]
   15348:	ldr	r0, [sp, #68]	; 0x44
   1534c:	str	r0, [sp, #12]
   15350:	ldr	r0, [sp, #76]	; 0x4c
   15354:	str	r0, [sp, #16]
   15358:	mov	r0, r7
   1535c:	mov	r1, r4
   15360:	mov	r2, ip
   15364:	mov	r3, lr
   15368:	bl	143bc <tcgetattr@plt+0x2ff4>
   1536c:	mov	r8, r0
   15370:	mov	r0, r8
   15374:	sub	sp, fp, #28
   15378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1537c:	mov	r0, #5
   15380:	str	r0, [sp]
   15384:	ldr	r0, [fp, #12]
   15388:	str	r0, [sp, #4]
   1538c:	ldr	r0, [fp, #16]
   15390:	str	r0, [sp, #8]
   15394:	ldr	r0, [sp, #68]	; 0x44
   15398:	str	r0, [sp, #12]
   1539c:	ldr	r0, [sp, #76]	; 0x4c
   153a0:	str	r0, [sp, #16]
   153a4:	mov	r0, r7
   153a8:	ldr	r1, [sp, #72]	; 0x48
   153ac:	ldr	r2, [fp, #-84]	; 0xffffffac
   153b0:	mov	r3, r9
   153b4:	b	15368 <tcgetattr@plt+0x3fa0>
   153b8:	bl	11398 <abort@plt>
   153bc:	mov	r3, r2
   153c0:	mov	r2, #0
   153c4:	b	153c8 <tcgetattr@plt+0x4000>
   153c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153cc:	add	fp, sp, #28
   153d0:	sub	sp, sp, #36	; 0x24
   153d4:	mov	r4, r2
   153d8:	str	r2, [sp, #24]
   153dc:	mov	r5, r1
   153e0:	mov	r6, r0
   153e4:	str	r0, [sp, #20]
   153e8:	movw	r8, #49760	; 0xc260
   153ec:	movt	r8, #2
   153f0:	cmp	r3, #0
   153f4:	movne	r8, r3
   153f8:	bl	112d8 <__errno_location@plt>
   153fc:	str	r0, [sp, #28]
   15400:	ldm	r8, {r3, r9}
   15404:	ldr	r1, [r8, #40]	; 0x28
   15408:	ldr	r2, [r8, #44]	; 0x2c
   1540c:	ldr	r7, [r0]
   15410:	str	r7, [sp, #32]
   15414:	add	sl, r8, #8
   15418:	cmp	r4, #0
   1541c:	orreq	r9, r9, #1
   15420:	stm	sp, {r3, r9, sl}
   15424:	str	r1, [sp, #12]
   15428:	str	r2, [sp, #16]
   1542c:	mov	r0, #0
   15430:	mov	r1, #0
   15434:	mov	r2, r6
   15438:	mov	r3, r5
   1543c:	mov	r7, r5
   15440:	bl	143bc <tcgetattr@plt+0x2ff4>
   15444:	mov	r5, r0
   15448:	add	r4, r0, #1
   1544c:	mov	r0, r4
   15450:	bl	162cc <tcgetattr@plt+0x4f04>
   15454:	mov	r6, r0
   15458:	ldr	r0, [r8]
   1545c:	ldr	r1, [r8, #40]	; 0x28
   15460:	ldr	r2, [r8, #44]	; 0x2c
   15464:	stm	sp, {r0, r9, sl}
   15468:	str	r1, [sp, #12]
   1546c:	str	r2, [sp, #16]
   15470:	mov	r0, r6
   15474:	mov	r1, r4
   15478:	ldr	r2, [sp, #20]
   1547c:	mov	r3, r7
   15480:	bl	143bc <tcgetattr@plt+0x2ff4>
   15484:	ldr	r0, [sp, #24]
   15488:	ldr	r1, [sp, #32]
   1548c:	ldr	r2, [sp, #28]
   15490:	str	r1, [r2]
   15494:	cmp	r0, #0
   15498:	strne	r5, [r0]
   1549c:	mov	r0, r6
   154a0:	sub	sp, fp, #28
   154a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154ac:	add	fp, sp, #24
   154b0:	movw	r8, #49440	; 0xc120
   154b4:	movt	r8, #2
   154b8:	ldr	r4, [r8]
   154bc:	movw	r5, #49444	; 0xc124
   154c0:	movt	r5, #2
   154c4:	ldr	r0, [r5]
   154c8:	cmp	r0, #2
   154cc:	blt	154f8 <tcgetattr@plt+0x4130>
   154d0:	add	r7, r4, #12
   154d4:	mov	r6, #0
   154d8:	ldr	r0, [r7, r6, lsl #3]
   154dc:	bl	14158 <tcgetattr@plt+0x2d90>
   154e0:	add	r0, r6, #1
   154e4:	ldr	r1, [r5]
   154e8:	add	r2, r6, #2
   154ec:	cmp	r2, r1
   154f0:	mov	r6, r0
   154f4:	blt	154d8 <tcgetattr@plt+0x4110>
   154f8:	ldr	r0, [r4, #4]
   154fc:	movw	r7, #49808	; 0xc290
   15500:	movt	r7, #2
   15504:	cmp	r0, r7
   15508:	beq	15520 <tcgetattr@plt+0x4158>
   1550c:	bl	14158 <tcgetattr@plt+0x2d90>
   15510:	movw	r0, #49448	; 0xc128
   15514:	movt	r0, #2
   15518:	mov	r6, #256	; 0x100
   1551c:	strd	r6, [r0]
   15520:	movw	r6, #49448	; 0xc128
   15524:	movt	r6, #2
   15528:	cmp	r4, r6
   1552c:	beq	1553c <tcgetattr@plt+0x4174>
   15530:	mov	r0, r4
   15534:	bl	14158 <tcgetattr@plt+0x2d90>
   15538:	str	r6, [r8]
   1553c:	mov	r0, #1
   15540:	str	r0, [r5]
   15544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15548:	movw	r3, #49760	; 0xc260
   1554c:	movt	r3, #2
   15550:	mvn	r2, #0
   15554:	b	15558 <tcgetattr@plt+0x4190>
   15558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1555c:	add	fp, sp, #28
   15560:	sub	sp, sp, #44	; 0x2c
   15564:	mov	r7, r3
   15568:	str	r2, [sp, #36]	; 0x24
   1556c:	str	r1, [sp, #32]
   15570:	mov	r5, r0
   15574:	bl	112d8 <__errno_location@plt>
   15578:	cmp	r5, #0
   1557c:	blt	156e8 <tcgetattr@plt+0x4320>
   15580:	cmn	r5, #-2147483647	; 0x80000001
   15584:	beq	156e8 <tcgetattr@plt+0x4320>
   15588:	movw	r4, #49440	; 0xc120
   1558c:	movt	r4, #2
   15590:	ldr	r6, [r4]
   15594:	str	r0, [sp, #28]
   15598:	ldr	r0, [r0]
   1559c:	str	r0, [sp, #24]
   155a0:	movw	r8, #49444	; 0xc124
   155a4:	movt	r8, #2
   155a8:	ldr	r1, [r8]
   155ac:	cmp	r1, r5
   155b0:	ble	155bc <tcgetattr@plt+0x41f4>
   155b4:	mov	sl, r6
   155b8:	b	15624 <tcgetattr@plt+0x425c>
   155bc:	str	r1, [fp, #-32]	; 0xffffffe0
   155c0:	mov	r0, #8
   155c4:	str	r0, [sp]
   155c8:	movw	r9, #49448	; 0xc128
   155cc:	movt	r9, #2
   155d0:	subs	r0, r6, r9
   155d4:	movne	r0, r6
   155d8:	add	r2, r5, #1
   155dc:	sub	r2, r2, r1
   155e0:	sub	r1, fp, #32
   155e4:	mvn	r3, #-2147483648	; 0x80000000
   155e8:	bl	163b4 <tcgetattr@plt+0x4fec>
   155ec:	mov	sl, r0
   155f0:	str	r0, [r4]
   155f4:	cmp	r6, r9
   155f8:	ldrdeq	r0, [r9]
   155fc:	stmeq	sl, {r0, r1}
   15600:	ldr	r1, [r8]
   15604:	add	r0, sl, r1, lsl #3
   15608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1560c:	sub	r1, r2, r1
   15610:	lsl	r2, r1, #3
   15614:	mov	r1, #0
   15618:	bl	112fc <memset@plt>
   1561c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15620:	str	r0, [r8]
   15624:	mov	r9, sl
   15628:	ldr	r6, [r9, r5, lsl #3]!
   1562c:	ldr	r4, [r9, #4]!
   15630:	ldm	r7, {r0, r1}
   15634:	ldr	r2, [r7, #40]	; 0x28
   15638:	ldr	r3, [r7, #44]	; 0x2c
   1563c:	orr	r8, r1, #1
   15640:	add	r1, r7, #8
   15644:	stm	sp, {r0, r8}
   15648:	str	r1, [sp, #20]
   1564c:	add	r0, sp, #8
   15650:	stm	r0, {r1, r2, r3}
   15654:	mov	r0, r4
   15658:	mov	r1, r6
   1565c:	ldr	r2, [sp, #32]
   15660:	ldr	r3, [sp, #36]	; 0x24
   15664:	bl	143bc <tcgetattr@plt+0x2ff4>
   15668:	cmp	r6, r0
   1566c:	bhi	156d0 <tcgetattr@plt+0x4308>
   15670:	add	r6, r0, #1
   15674:	str	r6, [sl, r5, lsl #3]
   15678:	movw	r0, #49808	; 0xc290
   1567c:	movt	r0, #2
   15680:	cmp	r4, r0
   15684:	beq	15690 <tcgetattr@plt+0x42c8>
   15688:	mov	r0, r4
   1568c:	bl	14158 <tcgetattr@plt+0x2d90>
   15690:	mov	r0, r6
   15694:	bl	162cc <tcgetattr@plt+0x4f04>
   15698:	mov	r4, r0
   1569c:	str	r0, [r9]
   156a0:	ldr	r0, [r7]
   156a4:	ldr	r1, [r7, #40]	; 0x28
   156a8:	ldr	r2, [r7, #44]	; 0x2c
   156ac:	stm	sp, {r0, r8}
   156b0:	ldr	r0, [sp, #20]
   156b4:	add	r3, sp, #8
   156b8:	stm	r3, {r0, r1, r2}
   156bc:	mov	r0, r4
   156c0:	mov	r1, r6
   156c4:	ldr	r2, [sp, #32]
   156c8:	ldr	r3, [sp, #36]	; 0x24
   156cc:	bl	143bc <tcgetattr@plt+0x2ff4>
   156d0:	ldr	r0, [sp, #28]
   156d4:	ldr	r1, [sp, #24]
   156d8:	str	r1, [r0]
   156dc:	mov	r0, r4
   156e0:	sub	sp, fp, #28
   156e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156e8:	bl	11398 <abort@plt>
   156ec:	movw	r3, #49760	; 0xc260
   156f0:	movt	r3, #2
   156f4:	b	15558 <tcgetattr@plt+0x4190>
   156f8:	mov	r1, r0
   156fc:	mov	r0, #0
   15700:	b	15548 <tcgetattr@plt+0x4180>
   15704:	mov	r2, r1
   15708:	mov	r1, r0
   1570c:	mov	r0, #0
   15710:	b	156ec <tcgetattr@plt+0x4324>
   15714:	push	{r4, r5, r6, sl, fp, lr}
   15718:	add	fp, sp, #16
   1571c:	sub	sp, sp, #48	; 0x30
   15720:	mov	r4, r2
   15724:	mov	r5, r0
   15728:	mov	r6, sp
   1572c:	mov	r0, r6
   15730:	bl	15750 <tcgetattr@plt+0x4388>
   15734:	mov	r0, r5
   15738:	mov	r1, r4
   1573c:	mvn	r2, #0
   15740:	mov	r3, r6
   15744:	bl	15558 <tcgetattr@plt+0x4190>
   15748:	sub	sp, fp, #16
   1574c:	pop	{r4, r5, r6, sl, fp, pc}
   15750:	vmov.i32	q8, #0	; 0x00000000
   15754:	mov	r2, #32
   15758:	mov	r3, r0
   1575c:	vst1.32	{d16-d17}, [r3], r2
   15760:	vst1.32	{d16-d17}, [r3]
   15764:	add	r2, r0, #16
   15768:	vst1.32	{d16-d17}, [r2]
   1576c:	cmp	r1, #10
   15770:	strne	r1, [r0]
   15774:	bxne	lr
   15778:	push	{fp, lr}
   1577c:	mov	fp, sp
   15780:	bl	11398 <abort@plt>
   15784:	push	{r4, r5, r6, r7, fp, lr}
   15788:	add	fp, sp, #16
   1578c:	sub	sp, sp, #48	; 0x30
   15790:	mov	r4, r3
   15794:	mov	r5, r2
   15798:	mov	r6, r0
   1579c:	mov	r7, sp
   157a0:	mov	r0, r7
   157a4:	bl	15750 <tcgetattr@plt+0x4388>
   157a8:	mov	r0, r6
   157ac:	mov	r1, r5
   157b0:	mov	r2, r4
   157b4:	mov	r3, r7
   157b8:	bl	15558 <tcgetattr@plt+0x4190>
   157bc:	sub	sp, fp, #16
   157c0:	pop	{r4, r5, r6, r7, fp, pc}
   157c4:	mov	r2, r1
   157c8:	mov	r1, r0
   157cc:	mov	r0, #0
   157d0:	b	15714 <tcgetattr@plt+0x434c>
   157d4:	mov	r3, r2
   157d8:	mov	r2, r1
   157dc:	mov	r1, r0
   157e0:	mov	r0, #0
   157e4:	b	15784 <tcgetattr@plt+0x43bc>
   157e8:	push	{r4, r5, r6, sl, fp, lr}
   157ec:	add	fp, sp, #16
   157f0:	sub	sp, sp, #48	; 0x30
   157f4:	mov	r4, r1
   157f8:	mov	r5, r0
   157fc:	mov	r0, #32
   15800:	movw	r1, #49760	; 0xc260
   15804:	movt	r1, #2
   15808:	add	r3, r1, #16
   1580c:	vld1.64	{d16-d17}, [r1], r0
   15810:	mov	r6, sp
   15814:	vld1.64	{d18-d19}, [r3]
   15818:	add	r3, r6, #16
   1581c:	vld1.64	{d20-d21}, [r1]
   15820:	vst1.64	{d18-d19}, [r3]
   15824:	mov	r1, r6
   15828:	vst1.64	{d16-d17}, [r1], r0
   1582c:	vst1.64	{d20-d21}, [r1]
   15830:	mov	r0, r6
   15834:	mov	r1, r2
   15838:	mov	r2, #1
   1583c:	bl	142b0 <tcgetattr@plt+0x2ee8>
   15840:	mov	r0, #0
   15844:	mov	r1, r5
   15848:	mov	r2, r4
   1584c:	mov	r3, r6
   15850:	bl	15558 <tcgetattr@plt+0x4190>
   15854:	sub	sp, fp, #16
   15858:	pop	{r4, r5, r6, sl, fp, pc}
   1585c:	mov	r2, r1
   15860:	mvn	r1, #0
   15864:	b	157e8 <tcgetattr@plt+0x4420>
   15868:	mov	r1, #58	; 0x3a
   1586c:	b	1585c <tcgetattr@plt+0x4494>
   15870:	mov	r2, #58	; 0x3a
   15874:	b	157e8 <tcgetattr@plt+0x4420>
   15878:	push	{r4, r5, r6, sl, fp, lr}
   1587c:	add	fp, sp, #16
   15880:	sub	sp, sp, #48	; 0x30
   15884:	mov	r4, r2
   15888:	mov	r5, r0
   1588c:	mov	r6, sp
   15890:	mov	r0, r6
   15894:	bl	15750 <tcgetattr@plt+0x4388>
   15898:	mov	r0, r6
   1589c:	mov	r1, #58	; 0x3a
   158a0:	mov	r2, #1
   158a4:	bl	142b0 <tcgetattr@plt+0x2ee8>
   158a8:	mov	r0, r5
   158ac:	mov	r1, r4
   158b0:	mvn	r2, #0
   158b4:	mov	r3, r6
   158b8:	bl	15558 <tcgetattr@plt+0x4190>
   158bc:	sub	sp, fp, #16
   158c0:	pop	{r4, r5, r6, sl, fp, pc}
   158c4:	push	{fp, lr}
   158c8:	mov	fp, sp
   158cc:	sub	sp, sp, #8
   158d0:	mvn	ip, #0
   158d4:	str	ip, [sp]
   158d8:	bl	158e4 <tcgetattr@plt+0x451c>
   158dc:	mov	sp, fp
   158e0:	pop	{fp, pc}
   158e4:	push	{r4, r5, r6, r7, fp, lr}
   158e8:	add	fp, sp, #16
   158ec:	sub	sp, sp, #48	; 0x30
   158f0:	mov	r7, r3
   158f4:	mov	r5, r0
   158f8:	mov	r0, #32
   158fc:	movw	r3, #49760	; 0xc260
   15900:	movt	r3, #2
   15904:	add	r4, r3, #16
   15908:	vld1.64	{d16-d17}, [r3], r0
   1590c:	mov	r6, sp
   15910:	vld1.64	{d18-d19}, [r4]
   15914:	add	r4, r6, #16
   15918:	vld1.64	{d20-d21}, [r3]
   1591c:	vst1.64	{d18-d19}, [r4]
   15920:	mov	r3, r6
   15924:	vst1.64	{d16-d17}, [r3], r0
   15928:	vst1.64	{d20-d21}, [r3]
   1592c:	mov	r0, r6
   15930:	bl	14308 <tcgetattr@plt+0x2f40>
   15934:	ldr	r2, [fp, #8]
   15938:	mov	r0, r5
   1593c:	mov	r1, r7
   15940:	mov	r3, r6
   15944:	bl	15558 <tcgetattr@plt+0x4190>
   15948:	sub	sp, fp, #16
   1594c:	pop	{r4, r5, r6, r7, fp, pc}
   15950:	mov	r3, r2
   15954:	mov	r2, r1
   15958:	mov	r1, r0
   1595c:	mov	r0, #0
   15960:	b	158c4 <tcgetattr@plt+0x44fc>
   15964:	push	{fp, lr}
   15968:	mov	fp, sp
   1596c:	sub	sp, sp, #8
   15970:	mov	ip, r2
   15974:	mov	r2, r1
   15978:	mov	r1, r0
   1597c:	str	r3, [sp]
   15980:	mov	r0, #0
   15984:	mov	r3, ip
   15988:	bl	158e4 <tcgetattr@plt+0x451c>
   1598c:	mov	sp, fp
   15990:	pop	{fp, pc}
   15994:	movw	r3, #49456	; 0xc130
   15998:	movt	r3, #2
   1599c:	b	15558 <tcgetattr@plt+0x4190>
   159a0:	mov	r2, r1
   159a4:	mov	r1, r0
   159a8:	mov	r0, #0
   159ac:	b	15994 <tcgetattr@plt+0x45cc>
   159b0:	mvn	r2, #0
   159b4:	b	15994 <tcgetattr@plt+0x45cc>
   159b8:	mov	r1, r0
   159bc:	mov	r0, #0
   159c0:	b	159b0 <tcgetattr@plt+0x45e8>
   159c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   159c8:	add	fp, sp, #24
   159cc:	sub	sp, sp, #16
   159d0:	mov	r4, r1
   159d4:	mov	r5, r0
   159d8:	mov	r7, #0
   159dc:	mov	r0, #0
   159e0:	mov	r1, r5
   159e4:	mov	r2, #5
   159e8:	bl	11170 <dcgettext@plt>
   159ec:	cmp	r0, r5
   159f0:	beq	159fc <tcgetattr@plt+0x4634>
   159f4:	sub	sp, fp, #24
   159f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159fc:	bl	17858 <tcgetattr@plt+0x6490>
   15a00:	mov	r6, r0
   15a04:	mov	r8, #56	; 0x38
   15a08:	mov	r0, #45	; 0x2d
   15a0c:	stm	sp, {r0, r8}
   15a10:	str	r7, [sp, #8]
   15a14:	str	r7, [sp, #12]
   15a18:	mov	r0, r6
   15a1c:	mov	r1, #85	; 0x55
   15a20:	mov	r2, #84	; 0x54
   15a24:	mov	r3, #70	; 0x46
   15a28:	bl	15ac0 <tcgetattr@plt+0x46f8>
   15a2c:	cmp	r0, #0
   15a30:	beq	15a4c <tcgetattr@plt+0x4684>
   15a34:	ldrb	r1, [r5]
   15a38:	movw	r2, #44416	; 0xad80
   15a3c:	movt	r2, #1
   15a40:	movw	r0, #44420	; 0xad84
   15a44:	movt	r0, #1
   15a48:	b	15a90 <tcgetattr@plt+0x46c8>
   15a4c:	mov	r0, #48	; 0x30
   15a50:	mov	r1, #51	; 0x33
   15a54:	str	r8, [sp]
   15a58:	stmib	sp, {r0, r1}
   15a5c:	str	r0, [sp, #12]
   15a60:	mov	r0, r6
   15a64:	mov	r1, #71	; 0x47
   15a68:	mov	r2, #66	; 0x42
   15a6c:	mov	r3, #49	; 0x31
   15a70:	bl	15ac0 <tcgetattr@plt+0x46f8>
   15a74:	cmp	r0, #0
   15a78:	beq	15aa0 <tcgetattr@plt+0x46d8>
   15a7c:	ldrb	r1, [r5]
   15a80:	movw	r2, #44424	; 0xad88
   15a84:	movt	r2, #1
   15a88:	movw	r0, #44428	; 0xad8c
   15a8c:	movt	r0, #1
   15a90:	cmp	r1, #96	; 0x60
   15a94:	moveq	r0, r2
   15a98:	sub	sp, fp, #24
   15a9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15aa0:	movw	r1, #44410	; 0xad7a
   15aa4:	movt	r1, #1
   15aa8:	movw	r0, #44414	; 0xad7e
   15aac:	movt	r0, #1
   15ab0:	cmp	r4, #9
   15ab4:	moveq	r0, r1
   15ab8:	sub	sp, fp, #24
   15abc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ac0:	push	{r4, r5, r6, r7, fp, lr}
   15ac4:	add	fp, sp, #16
   15ac8:	sub	sp, sp, #16
   15acc:	mov	r4, r3
   15ad0:	mov	r5, r2
   15ad4:	mov	r7, r1
   15ad8:	mov	r6, r0
   15adc:	mov	r0, r1
   15ae0:	bl	17564 <tcgetattr@plt+0x619c>
   15ae4:	ldrb	r1, [r6]
   15ae8:	cmp	r0, #0
   15aec:	andne	r1, r1, #223	; 0xdf
   15af0:	mov	r0, #0
   15af4:	cmp	r1, r7
   15af8:	bne	15b38 <tcgetattr@plt+0x4770>
   15afc:	cmp	r7, #0
   15b00:	moveq	r0, #1
   15b04:	subeq	sp, fp, #16
   15b08:	popeq	{r4, r5, r6, r7, fp, pc}
   15b0c:	ldr	r0, [fp, #20]
   15b10:	ldr	r1, [fp, #16]
   15b14:	ldr	r2, [fp, #12]
   15b18:	ldr	r3, [fp, #8]
   15b1c:	str	r2, [sp]
   15b20:	str	r1, [sp, #4]
   15b24:	str	r0, [sp, #8]
   15b28:	mov	r0, r6
   15b2c:	mov	r1, r5
   15b30:	mov	r2, r4
   15b34:	bl	15b40 <tcgetattr@plt+0x4778>
   15b38:	sub	sp, fp, #16
   15b3c:	pop	{r4, r5, r6, r7, fp, pc}
   15b40:	push	{r4, r5, r6, r7, fp, lr}
   15b44:	add	fp, sp, #16
   15b48:	sub	sp, sp, #8
   15b4c:	mov	r4, r3
   15b50:	mov	r5, r2
   15b54:	mov	r7, r1
   15b58:	mov	r6, r0
   15b5c:	mov	r0, r1
   15b60:	bl	17564 <tcgetattr@plt+0x619c>
   15b64:	ldrb	r1, [r6, #1]
   15b68:	cmp	r0, #0
   15b6c:	andne	r1, r1, #223	; 0xdf
   15b70:	mov	r0, #0
   15b74:	cmp	r1, r7
   15b78:	bne	15bb0 <tcgetattr@plt+0x47e8>
   15b7c:	cmp	r7, #0
   15b80:	moveq	r0, #1
   15b84:	subeq	sp, fp, #16
   15b88:	popeq	{r4, r5, r6, r7, fp, pc}
   15b8c:	ldr	r0, [fp, #16]
   15b90:	ldr	r1, [fp, #12]
   15b94:	ldr	r3, [fp, #8]
   15b98:	str	r1, [sp]
   15b9c:	str	r0, [sp, #4]
   15ba0:	mov	r0, r6
   15ba4:	mov	r1, r5
   15ba8:	mov	r2, r4
   15bac:	bl	15bb8 <tcgetattr@plt+0x47f0>
   15bb0:	sub	sp, fp, #16
   15bb4:	pop	{r4, r5, r6, r7, fp, pc}
   15bb8:	push	{r4, r5, r6, r7, fp, lr}
   15bbc:	add	fp, sp, #16
   15bc0:	sub	sp, sp, #8
   15bc4:	mov	r4, r3
   15bc8:	mov	r5, r2
   15bcc:	mov	r7, r1
   15bd0:	mov	r6, r0
   15bd4:	mov	r0, r1
   15bd8:	bl	17564 <tcgetattr@plt+0x619c>
   15bdc:	ldrb	r1, [r6, #2]
   15be0:	cmp	r0, #0
   15be4:	andne	r1, r1, #223	; 0xdf
   15be8:	mov	r0, #0
   15bec:	cmp	r1, r7
   15bf0:	bne	15c20 <tcgetattr@plt+0x4858>
   15bf4:	cmp	r7, #0
   15bf8:	moveq	r0, #1
   15bfc:	subeq	sp, fp, #16
   15c00:	popeq	{r4, r5, r6, r7, fp, pc}
   15c04:	ldr	r0, [fp, #12]
   15c08:	ldr	r3, [fp, #8]
   15c0c:	str	r0, [sp]
   15c10:	mov	r0, r6
   15c14:	mov	r1, r5
   15c18:	mov	r2, r4
   15c1c:	bl	15c28 <tcgetattr@plt+0x4860>
   15c20:	sub	sp, fp, #16
   15c24:	pop	{r4, r5, r6, r7, fp, pc}
   15c28:	push	{r4, r5, r6, r7, fp, lr}
   15c2c:	add	fp, sp, #16
   15c30:	mov	r4, r3
   15c34:	mov	r5, r2
   15c38:	mov	r7, r1
   15c3c:	mov	r6, r0
   15c40:	mov	r0, r1
   15c44:	bl	17564 <tcgetattr@plt+0x619c>
   15c48:	ldrb	r1, [r6, #3]
   15c4c:	ldr	r3, [fp, #8]
   15c50:	cmp	r0, #0
   15c54:	andne	r1, r1, #223	; 0xdf
   15c58:	mov	r0, #0
   15c5c:	cmp	r1, r7
   15c60:	popne	{r4, r5, r6, r7, fp, pc}
   15c64:	cmp	r7, #0
   15c68:	beq	15c80 <tcgetattr@plt+0x48b8>
   15c6c:	mov	r0, r6
   15c70:	mov	r1, r5
   15c74:	mov	r2, r4
   15c78:	pop	{r4, r5, r6, r7, fp, lr}
   15c7c:	b	15c88 <tcgetattr@plt+0x48c0>
   15c80:	mov	r0, #1
   15c84:	pop	{r4, r5, r6, r7, fp, pc}
   15c88:	push	{r4, r5, r6, r7, fp, lr}
   15c8c:	add	fp, sp, #16
   15c90:	mov	r4, r3
   15c94:	mov	r5, r2
   15c98:	mov	r7, r1
   15c9c:	mov	r6, r0
   15ca0:	mov	r0, r1
   15ca4:	bl	17564 <tcgetattr@plt+0x619c>
   15ca8:	ldrb	r1, [r6, #4]
   15cac:	cmp	r0, #0
   15cb0:	andne	r1, r1, #223	; 0xdf
   15cb4:	mov	r0, #0
   15cb8:	cmp	r1, r7
   15cbc:	popne	{r4, r5, r6, r7, fp, pc}
   15cc0:	cmp	r7, #0
   15cc4:	beq	15cdc <tcgetattr@plt+0x4914>
   15cc8:	mov	r0, r6
   15ccc:	mov	r1, r5
   15cd0:	mov	r2, r4
   15cd4:	pop	{r4, r5, r6, r7, fp, lr}
   15cd8:	b	15ce4 <tcgetattr@plt+0x491c>
   15cdc:	mov	r0, #1
   15ce0:	pop	{r4, r5, r6, r7, fp, pc}
   15ce4:	push	{r4, r5, r6, sl, fp, lr}
   15ce8:	add	fp, sp, #16
   15cec:	mov	r4, r2
   15cf0:	mov	r6, r1
   15cf4:	mov	r5, r0
   15cf8:	mov	r0, r1
   15cfc:	bl	17564 <tcgetattr@plt+0x619c>
   15d00:	ldrb	r1, [r5, #5]
   15d04:	cmp	r0, #0
   15d08:	andne	r1, r1, #223	; 0xdf
   15d0c:	mov	r0, #0
   15d10:	cmp	r1, r6
   15d14:	popne	{r4, r5, r6, sl, fp, pc}
   15d18:	cmp	r6, #0
   15d1c:	beq	15d30 <tcgetattr@plt+0x4968>
   15d20:	mov	r0, r5
   15d24:	mov	r1, r4
   15d28:	pop	{r4, r5, r6, sl, fp, lr}
   15d2c:	b	15d38 <tcgetattr@plt+0x4970>
   15d30:	mov	r0, #1
   15d34:	pop	{r4, r5, r6, sl, fp, pc}
   15d38:	push	{r4, r5, fp, lr}
   15d3c:	add	fp, sp, #8
   15d40:	mov	r5, r1
   15d44:	mov	r4, r0
   15d48:	mov	r0, r1
   15d4c:	bl	17564 <tcgetattr@plt+0x619c>
   15d50:	ldrb	r1, [r4, #6]
   15d54:	cmp	r0, #0
   15d58:	andne	r1, r1, #223	; 0xdf
   15d5c:	mov	r0, #0
   15d60:	cmp	r1, r5
   15d64:	popne	{r4, r5, fp, pc}
   15d68:	cmp	r5, #0
   15d6c:	beq	15d7c <tcgetattr@plt+0x49b4>
   15d70:	mov	r0, r4
   15d74:	pop	{r4, r5, fp, lr}
   15d78:	b	15d84 <tcgetattr@plt+0x49bc>
   15d7c:	mov	r0, #1
   15d80:	pop	{r4, r5, fp, pc}
   15d84:	push	{r4, sl, fp, lr}
   15d88:	add	fp, sp, #8
   15d8c:	mov	r4, r0
   15d90:	mov	r0, #0
   15d94:	bl	17564 <tcgetattr@plt+0x619c>
   15d98:	ldrb	r1, [r4, #7]
   15d9c:	cmp	r0, #0
   15da0:	beq	15db8 <tcgetattr@plt+0x49f0>
   15da4:	tst	r1, #223	; 0xdf
   15da8:	moveq	r0, #1
   15dac:	popeq	{r4, sl, fp, pc}
   15db0:	mov	r0, #0
   15db4:	pop	{r4, sl, fp, pc}
   15db8:	cmp	r1, #0
   15dbc:	moveq	r0, #1
   15dc0:	popeq	{r4, sl, fp, pc}
   15dc4:	mov	r0, #0
   15dc8:	pop	{r4, sl, fp, pc}
   15dcc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15dd0:	add	fp, sp, #24
   15dd4:	sub	sp, sp, #32
   15dd8:	mov	r4, r2
   15ddc:	mov	r8, r0
   15de0:	ldr	r6, [fp, #12]
   15de4:	ldr	r7, [fp, #8]
   15de8:	cmp	r1, #0
   15dec:	beq	15e14 <tcgetattr@plt+0x4a4c>
   15df0:	mov	r5, r1
   15df4:	str	r4, [sp]
   15df8:	str	r3, [sp, #4]
   15dfc:	movw	r2, #44516	; 0xade4
   15e00:	movt	r2, #1
   15e04:	mov	r0, r8
   15e08:	mov	r1, #1
   15e0c:	mov	r3, r5
   15e10:	b	15e2c <tcgetattr@plt+0x4a64>
   15e14:	str	r3, [sp]
   15e18:	movw	r2, #44528	; 0xadf0
   15e1c:	movt	r2, #1
   15e20:	mov	r0, r8
   15e24:	mov	r1, #1
   15e28:	mov	r3, r4
   15e2c:	bl	1132c <__fprintf_chk@plt>
   15e30:	movw	r1, #44535	; 0xadf7
   15e34:	movt	r1, #1
   15e38:	mov	r0, #0
   15e3c:	mov	r2, #5
   15e40:	bl	11170 <dcgettext@plt>
   15e44:	mov	r3, r0
   15e48:	movw	r0, #2022	; 0x7e6
   15e4c:	str	r0, [sp]
   15e50:	movw	r2, #45253	; 0xb0c5
   15e54:	movt	r2, #1
   15e58:	mov	r0, r8
   15e5c:	mov	r1, #1
   15e60:	bl	1132c <__fprintf_chk@plt>
   15e64:	movw	r4, #37057	; 0x90c1
   15e68:	movt	r4, #1
   15e6c:	mov	r0, r4
   15e70:	mov	r1, r8
   15e74:	bl	110f8 <fputs_unlocked@plt>
   15e78:	movw	r1, #44539	; 0xadfb
   15e7c:	movt	r1, #1
   15e80:	mov	r0, #0
   15e84:	mov	r2, #5
   15e88:	bl	11170 <dcgettext@plt>
   15e8c:	mov	r2, r0
   15e90:	movw	r3, #44710	; 0xaea6
   15e94:	movt	r3, #1
   15e98:	mov	r0, r8
   15e9c:	mov	r1, #1
   15ea0:	bl	1132c <__fprintf_chk@plt>
   15ea4:	mov	r0, r4
   15ea8:	mov	r1, r8
   15eac:	bl	110f8 <fputs_unlocked@plt>
   15eb0:	cmp	r6, #9
   15eb4:	bhi	15ef0 <tcgetattr@plt+0x4b28>
   15eb8:	add	r0, pc, #0
   15ebc:	ldr	pc, [r0, r6, lsl #2]
   15ec0:	andeq	r5, r1, r8, ror #29
   15ec4:	strdeq	r5, [r1], -ip
   15ec8:	andeq	r5, r1, ip, lsr #30
   15ecc:	andeq	r5, r1, r4, asr pc
   15ed0:	andeq	r5, r1, ip, ror pc
   15ed4:	andeq	r5, r1, r4, lsr #31
   15ed8:	andeq	r5, r1, ip, asr #31
   15edc:	andeq	r6, r1, r4
   15ee0:	andeq	r6, r1, r4, lsr #1
   15ee4:	andeq	r6, r1, ip, asr #32
   15ee8:	sub	sp, fp, #24
   15eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ef0:	movw	r1, #45063	; 0xb007
   15ef4:	movt	r1, #1
   15ef8:	b	16054 <tcgetattr@plt+0x4c8c>
   15efc:	movw	r1, #44744	; 0xaec8
   15f00:	movt	r1, #1
   15f04:	mov	r0, #0
   15f08:	mov	r2, #5
   15f0c:	bl	11170 <dcgettext@plt>
   15f10:	mov	r2, r0
   15f14:	ldr	r3, [r7]
   15f18:	mov	r0, r8
   15f1c:	mov	r1, #1
   15f20:	sub	sp, fp, #24
   15f24:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f28:	b	1132c <__fprintf_chk@plt>
   15f2c:	movw	r1, #44760	; 0xaed8
   15f30:	movt	r1, #1
   15f34:	mov	r0, #0
   15f38:	mov	r2, #5
   15f3c:	bl	11170 <dcgettext@plt>
   15f40:	mov	r2, r0
   15f44:	ldr	r3, [r7]
   15f48:	ldr	r0, [r7, #4]
   15f4c:	str	r0, [sp]
   15f50:	b	16040 <tcgetattr@plt+0x4c78>
   15f54:	movw	r1, #44783	; 0xaeef
   15f58:	movt	r1, #1
   15f5c:	mov	r0, #0
   15f60:	mov	r2, #5
   15f64:	bl	11170 <dcgettext@plt>
   15f68:	mov	r2, r0
   15f6c:	ldr	r3, [r7]
   15f70:	ldmib	r7, {r0, r1}
   15f74:	stm	sp, {r0, r1}
   15f78:	b	16040 <tcgetattr@plt+0x4c78>
   15f7c:	movw	r1, #44811	; 0xaf0b
   15f80:	movt	r1, #1
   15f84:	mov	r0, #0
   15f88:	mov	r2, #5
   15f8c:	bl	11170 <dcgettext@plt>
   15f90:	mov	r2, r0
   15f94:	ldr	r3, [r7]
   15f98:	ldmib	r7, {r0, r1, r7}
   15f9c:	stm	sp, {r0, r1, r7}
   15fa0:	b	16040 <tcgetattr@plt+0x4c78>
   15fa4:	movw	r1, #44843	; 0xaf2b
   15fa8:	movt	r1, #1
   15fac:	mov	r0, #0
   15fb0:	mov	r2, #5
   15fb4:	bl	11170 <dcgettext@plt>
   15fb8:	mov	r2, r0
   15fbc:	ldr	r3, [r7]
   15fc0:	ldmib	r7, {r0, r1, r6, r7}
   15fc4:	stm	sp, {r0, r1, r6, r7}
   15fc8:	b	16040 <tcgetattr@plt+0x4c78>
   15fcc:	movw	r1, #44879	; 0xaf4f
   15fd0:	movt	r1, #1
   15fd4:	mov	r0, #0
   15fd8:	mov	r2, #5
   15fdc:	bl	11170 <dcgettext@plt>
   15fe0:	mov	r2, r0
   15fe4:	ldr	r3, [r7]
   15fe8:	ldmib	r7, {r0, r1, r6}
   15fec:	ldr	r5, [r7, #16]
   15ff0:	ldr	r7, [r7, #20]
   15ff4:	stm	sp, {r0, r1, r6}
   15ff8:	str	r5, [sp, #12]
   15ffc:	str	r7, [sp, #16]
   16000:	b	16040 <tcgetattr@plt+0x4c78>
   16004:	movw	r1, #44919	; 0xaf77
   16008:	movt	r1, #1
   1600c:	mov	r0, #0
   16010:	mov	r2, #5
   16014:	bl	11170 <dcgettext@plt>
   16018:	mov	r2, r0
   1601c:	ldr	r3, [r7]
   16020:	ldmib	r7, {r0, r1, r6}
   16024:	ldr	r5, [r7, #16]
   16028:	ldr	r4, [r7, #20]
   1602c:	ldr	r7, [r7, #24]
   16030:	stm	sp, {r0, r1, r6}
   16034:	str	r5, [sp, #12]
   16038:	str	r4, [sp, #16]
   1603c:	str	r7, [sp, #20]
   16040:	mov	r0, r8
   16044:	mov	r1, #1
   16048:	b	160f4 <tcgetattr@plt+0x4d2c>
   1604c:	movw	r1, #45011	; 0xafd3
   16050:	movt	r1, #1
   16054:	mov	r0, #0
   16058:	mov	r2, #5
   1605c:	bl	11170 <dcgettext@plt>
   16060:	mov	ip, r0
   16064:	ldr	r3, [r7]
   16068:	ldr	r0, [r7, #4]
   1606c:	ldr	r1, [r7, #8]
   16070:	ldr	r6, [r7, #12]
   16074:	ldr	r5, [r7, #16]
   16078:	ldr	r4, [r7, #20]
   1607c:	ldr	r2, [r7, #24]
   16080:	ldr	lr, [r7, #28]
   16084:	ldr	r7, [r7, #32]
   16088:	stm	sp, {r0, r1, r6}
   1608c:	str	r5, [sp, #12]
   16090:	str	r4, [sp, #16]
   16094:	str	r2, [sp, #20]
   16098:	str	lr, [sp, #24]
   1609c:	str	r7, [sp, #28]
   160a0:	b	160e8 <tcgetattr@plt+0x4d20>
   160a4:	movw	r1, #44963	; 0xafa3
   160a8:	movt	r1, #1
   160ac:	mov	r0, #0
   160b0:	mov	r2, #5
   160b4:	bl	11170 <dcgettext@plt>
   160b8:	mov	ip, r0
   160bc:	ldr	r3, [r7]
   160c0:	ldmib	r7, {r0, r1, r6}
   160c4:	ldr	r5, [r7, #16]
   160c8:	ldr	r4, [r7, #20]
   160cc:	ldr	r2, [r7, #24]
   160d0:	ldr	r7, [r7, #28]
   160d4:	stm	sp, {r0, r1, r6}
   160d8:	str	r5, [sp, #12]
   160dc:	str	r4, [sp, #16]
   160e0:	str	r2, [sp, #20]
   160e4:	str	r7, [sp, #24]
   160e8:	mov	r0, r8
   160ec:	mov	r1, #1
   160f0:	mov	r2, ip
   160f4:	bl	1132c <__fprintf_chk@plt>
   160f8:	sub	sp, fp, #24
   160fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16100:	push	{r4, sl, fp, lr}
   16104:	add	fp, sp, #8
   16108:	sub	sp, sp, #8
   1610c:	mov	lr, #0
   16110:	ldr	ip, [fp, #8]
   16114:	ldr	r4, [ip, lr, lsl #2]
   16118:	add	lr, lr, #1
   1611c:	cmp	r4, #0
   16120:	bne	16114 <tcgetattr@plt+0x4d4c>
   16124:	sub	r4, lr, #1
   16128:	str	ip, [sp]
   1612c:	str	r4, [sp, #4]
   16130:	bl	15dcc <tcgetattr@plt+0x4a04>
   16134:	sub	sp, fp, #8
   16138:	pop	{r4, sl, fp, pc}
   1613c:	push	{r4, r5, fp, lr}
   16140:	add	fp, sp, #8
   16144:	sub	sp, sp, #48	; 0x30
   16148:	mov	ip, #0
   1614c:	ldr	r4, [fp, #8]
   16150:	add	lr, sp, #8
   16154:	ldr	r5, [r4]
   16158:	str	r5, [lr, ip, lsl #2]
   1615c:	cmp	r5, #0
   16160:	beq	16174 <tcgetattr@plt+0x4dac>
   16164:	add	ip, ip, #1
   16168:	add	r4, r4, #4
   1616c:	cmp	ip, #10
   16170:	bcc	16154 <tcgetattr@plt+0x4d8c>
   16174:	str	lr, [sp]
   16178:	str	ip, [sp, #4]
   1617c:	bl	15dcc <tcgetattr@plt+0x4a04>
   16180:	sub	sp, fp, #8
   16184:	pop	{r4, r5, fp, pc}
   16188:	push	{fp, lr}
   1618c:	mov	fp, sp
   16190:	sub	sp, sp, #8
   16194:	add	ip, fp, #8
   16198:	str	ip, [sp, #4]
   1619c:	str	ip, [sp]
   161a0:	bl	1613c <tcgetattr@plt+0x4d74>
   161a4:	mov	sp, fp
   161a8:	pop	{fp, pc}
   161ac:	push	{fp, lr}
   161b0:	mov	fp, sp
   161b4:	movw	r0, #49524	; 0xc174
   161b8:	movt	r0, #2
   161bc:	ldr	r1, [r0]
   161c0:	movw	r0, #37057	; 0x90c1
   161c4:	movt	r0, #1
   161c8:	bl	110f8 <fputs_unlocked@plt>
   161cc:	movw	r1, #45123	; 0xb043
   161d0:	movt	r1, #1
   161d4:	mov	r0, #0
   161d8:	mov	r2, #5
   161dc:	bl	11170 <dcgettext@plt>
   161e0:	mov	r1, r0
   161e4:	movw	r2, #45143	; 0xb057
   161e8:	movt	r2, #1
   161ec:	mov	r0, #1
   161f0:	bl	11308 <__printf_chk@plt>
   161f4:	movw	r1, #45165	; 0xb06d
   161f8:	movt	r1, #1
   161fc:	mov	r0, #0
   16200:	mov	r2, #5
   16204:	bl	11170 <dcgettext@plt>
   16208:	mov	r1, r0
   1620c:	movw	r2, #39730	; 0x9b32
   16210:	movt	r2, #1
   16214:	movw	r3, #40192	; 0x9d00
   16218:	movt	r3, #1
   1621c:	mov	r0, #1
   16220:	bl	11308 <__printf_chk@plt>
   16224:	movw	r1, #45185	; 0xb081
   16228:	movt	r1, #1
   1622c:	mov	r0, #0
   16230:	mov	r2, #5
   16234:	bl	11170 <dcgettext@plt>
   16238:	mov	r1, r0
   1623c:	movw	r2, #45224	; 0xb0a8
   16240:	movt	r2, #1
   16244:	mov	r0, #1
   16248:	pop	{fp, lr}
   1624c:	b	11308 <__printf_chk@plt>
   16250:	b	16254 <tcgetattr@plt+0x4e8c>
   16254:	push	{r4, r5, r6, sl, fp, lr}
   16258:	add	fp, sp, #16
   1625c:	mov	r4, r2
   16260:	mov	r5, r1
   16264:	mov	r6, r0
   16268:	bl	178f0 <tcgetattr@plt+0x6528>
   1626c:	cmp	r0, #0
   16270:	popne	{r4, r5, r6, sl, fp, pc}
   16274:	cmp	r6, #0
   16278:	beq	1628c <tcgetattr@plt+0x4ec4>
   1627c:	cmp	r5, #0
   16280:	cmpne	r4, #0
   16284:	bne	1628c <tcgetattr@plt+0x4ec4>
   16288:	pop	{r4, r5, r6, sl, fp, pc}
   1628c:	bl	16640 <tcgetattr@plt+0x5278>
   16290:	push	{fp, lr}
   16294:	mov	fp, sp
   16298:	bl	1722c <tcgetattr@plt+0x5e64>
   1629c:	bl	162a4 <tcgetattr@plt+0x4edc>
   162a0:	pop	{fp, pc}
   162a4:	cmp	r0, #0
   162a8:	bxne	lr
   162ac:	push	{fp, lr}
   162b0:	mov	fp, sp
   162b4:	bl	16640 <tcgetattr@plt+0x5278>
   162b8:	push	{fp, lr}
   162bc:	mov	fp, sp
   162c0:	bl	17824 <tcgetattr@plt+0x645c>
   162c4:	bl	162a4 <tcgetattr@plt+0x4edc>
   162c8:	pop	{fp, pc}
   162cc:	b	16290 <tcgetattr@plt+0x4ec8>
   162d0:	push	{r4, r5, fp, lr}
   162d4:	add	fp, sp, #8
   162d8:	mov	r4, r1
   162dc:	mov	r5, r0
   162e0:	bl	1725c <tcgetattr@plt+0x5e94>
   162e4:	cmp	r0, #0
   162e8:	popne	{r4, r5, fp, pc}
   162ec:	cmp	r5, #0
   162f0:	beq	16300 <tcgetattr@plt+0x4f38>
   162f4:	cmp	r4, #0
   162f8:	bne	16300 <tcgetattr@plt+0x4f38>
   162fc:	pop	{r4, r5, fp, pc}
   16300:	bl	16640 <tcgetattr@plt+0x5278>
   16304:	push	{fp, lr}
   16308:	mov	fp, sp
   1630c:	bl	17828 <tcgetattr@plt+0x6460>
   16310:	bl	162a4 <tcgetattr@plt+0x4edc>
   16314:	pop	{fp, pc}
   16318:	push	{fp, lr}
   1631c:	mov	fp, sp
   16320:	bl	17838 <tcgetattr@plt+0x6470>
   16324:	bl	162a4 <tcgetattr@plt+0x4edc>
   16328:	pop	{fp, pc}
   1632c:	push	{fp, lr}
   16330:	mov	fp, sp
   16334:	mov	r2, r1
   16338:	mov	r1, r0
   1633c:	mov	r0, #0
   16340:	bl	16254 <tcgetattr@plt+0x4e8c>
   16344:	pop	{fp, pc}
   16348:	mov	r2, r1
   1634c:	mov	r1, r0
   16350:	mov	r0, #0
   16354:	b	16318 <tcgetattr@plt+0x4f50>
   16358:	mov	r2, #1
   1635c:	b	16360 <tcgetattr@plt+0x4f98>
   16360:	push	{r4, r5, fp, lr}
   16364:	add	fp, sp, #8
   16368:	mov	r4, r1
   1636c:	ldr	r5, [r1]
   16370:	cmp	r0, #0
   16374:	beq	1638c <tcgetattr@plt+0x4fc4>
   16378:	mov	r1, #1
   1637c:	add	r1, r1, r5, lsr #1
   16380:	adds	r5, r5, r1
   16384:	bcc	163a4 <tcgetattr@plt+0x4fdc>
   16388:	bl	16640 <tcgetattr@plt+0x5278>
   1638c:	cmp	r5, #0
   16390:	bne	163a4 <tcgetattr@plt+0x4fdc>
   16394:	mov	r1, #64	; 0x40
   16398:	udiv	r5, r1, r2
   1639c:	cmp	r2, #64	; 0x40
   163a0:	addhi	r5, r5, #1
   163a4:	mov	r1, r5
   163a8:	bl	16254 <tcgetattr@plt+0x4e8c>
   163ac:	str	r5, [r4]
   163b0:	pop	{r4, r5, fp, pc}
   163b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   163b8:	add	fp, sp, #24
   163bc:	mov	r8, r1
   163c0:	ldr	r6, [r1]
   163c4:	add	r1, r6, r6, asr #1
   163c8:	cmp	r1, r6
   163cc:	mvnvs	r1, #-2147483648	; 0x80000000
   163d0:	cmp	r1, r3
   163d4:	mov	r5, r1
   163d8:	movgt	r5, r3
   163dc:	cmn	r3, #1
   163e0:	movle	r5, r1
   163e4:	ldr	r4, [fp, #8]
   163e8:	cmn	r4, #1
   163ec:	ble	16414 <tcgetattr@plt+0x504c>
   163f0:	cmp	r4, #0
   163f4:	beq	16468 <tcgetattr@plt+0x50a0>
   163f8:	cmn	r5, #1
   163fc:	ble	1643c <tcgetattr@plt+0x5074>
   16400:	mvn	r7, #-2147483648	; 0x80000000
   16404:	udiv	r1, r7, r4
   16408:	cmp	r1, r5
   1640c:	bge	16468 <tcgetattr@plt+0x50a0>
   16410:	b	16478 <tcgetattr@plt+0x50b0>
   16414:	cmn	r5, #1
   16418:	ble	16458 <tcgetattr@plt+0x5090>
   1641c:	cmn	r4, #1
   16420:	beq	16468 <tcgetattr@plt+0x50a0>
   16424:	mov	r1, #-2147483648	; 0x80000000
   16428:	sdiv	r1, r1, r4
   1642c:	mvn	r7, #-2147483648	; 0x80000000
   16430:	cmp	r1, r5
   16434:	bge	16468 <tcgetattr@plt+0x50a0>
   16438:	b	16478 <tcgetattr@plt+0x50b0>
   1643c:	beq	16468 <tcgetattr@plt+0x50a0>
   16440:	mov	r1, #-2147483648	; 0x80000000
   16444:	sdiv	r1, r1, r5
   16448:	mvn	r7, #-2147483648	; 0x80000000
   1644c:	cmp	r1, r4
   16450:	bge	16468 <tcgetattr@plt+0x50a0>
   16454:	b	16478 <tcgetattr@plt+0x50b0>
   16458:	mvn	r7, #-2147483648	; 0x80000000
   1645c:	sdiv	r1, r7, r4
   16460:	cmp	r5, r1
   16464:	blt	16478 <tcgetattr@plt+0x50b0>
   16468:	mul	r1, r5, r4
   1646c:	mov	r7, #64	; 0x40
   16470:	cmp	r1, #63	; 0x3f
   16474:	bgt	16480 <tcgetattr@plt+0x50b8>
   16478:	sdiv	r5, r7, r4
   1647c:	mul	r1, r5, r4
   16480:	cmp	r0, #0
   16484:	moveq	r7, #0
   16488:	streq	r7, [r8]
   1648c:	sub	r7, r5, r6
   16490:	cmp	r7, r2
   16494:	bge	16540 <tcgetattr@plt+0x5178>
   16498:	add	r5, r6, r2
   1649c:	mov	r1, #0
   164a0:	cmp	r5, r3
   164a4:	mov	r2, #0
   164a8:	movwgt	r2, #1
   164ac:	cmn	r3, #1
   164b0:	movwgt	r1, #1
   164b4:	cmp	r5, r6
   164b8:	bvs	16528 <tcgetattr@plt+0x5160>
   164bc:	ands	r1, r1, r2
   164c0:	bne	16528 <tcgetattr@plt+0x5160>
   164c4:	cmn	r4, #1
   164c8:	ble	164f0 <tcgetattr@plt+0x5128>
   164cc:	cmp	r4, #0
   164d0:	beq	1653c <tcgetattr@plt+0x5174>
   164d4:	cmn	r5, #1
   164d8:	ble	16514 <tcgetattr@plt+0x514c>
   164dc:	mvn	r1, #-2147483648	; 0x80000000
   164e0:	udiv	r1, r1, r4
   164e4:	cmp	r1, r5
   164e8:	bge	1653c <tcgetattr@plt+0x5174>
   164ec:	b	16528 <tcgetattr@plt+0x5160>
   164f0:	cmn	r5, #1
   164f4:	ble	1652c <tcgetattr@plt+0x5164>
   164f8:	cmn	r4, #1
   164fc:	beq	1653c <tcgetattr@plt+0x5174>
   16500:	mov	r1, #-2147483648	; 0x80000000
   16504:	sdiv	r1, r1, r4
   16508:	cmp	r1, r5
   1650c:	bge	1653c <tcgetattr@plt+0x5174>
   16510:	b	16528 <tcgetattr@plt+0x5160>
   16514:	beq	1653c <tcgetattr@plt+0x5174>
   16518:	mov	r1, #-2147483648	; 0x80000000
   1651c:	sdiv	r1, r1, r5
   16520:	cmp	r1, r4
   16524:	bge	1653c <tcgetattr@plt+0x5174>
   16528:	bl	16640 <tcgetattr@plt+0x5278>
   1652c:	mvn	r1, #-2147483648	; 0x80000000
   16530:	sdiv	r1, r1, r4
   16534:	cmp	r5, r1
   16538:	blt	16528 <tcgetattr@plt+0x5160>
   1653c:	mul	r1, r5, r4
   16540:	bl	162d0 <tcgetattr@plt+0x4f08>
   16544:	str	r5, [r8]
   16548:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1654c:	mov	r1, #1
   16550:	b	16554 <tcgetattr@plt+0x518c>
   16554:	push	{fp, lr}
   16558:	mov	fp, sp
   1655c:	bl	171d8 <tcgetattr@plt+0x5e10>
   16560:	bl	162a4 <tcgetattr@plt+0x4edc>
   16564:	pop	{fp, pc}
   16568:	mov	r1, #1
   1656c:	b	16570 <tcgetattr@plt+0x51a8>
   16570:	push	{fp, lr}
   16574:	mov	fp, sp
   16578:	bl	17834 <tcgetattr@plt+0x646c>
   1657c:	bl	162a4 <tcgetattr@plt+0x4edc>
   16580:	pop	{fp, pc}
   16584:	push	{r4, r5, r6, sl, fp, lr}
   16588:	add	fp, sp, #16
   1658c:	mov	r4, r1
   16590:	mov	r5, r0
   16594:	mov	r0, r1
   16598:	bl	16290 <tcgetattr@plt+0x4ec8>
   1659c:	mov	r6, r0
   165a0:	mov	r1, r5
   165a4:	mov	r2, r4
   165a8:	bl	1114c <memcpy@plt>
   165ac:	mov	r0, r6
   165b0:	pop	{r4, r5, r6, sl, fp, pc}
   165b4:	push	{r4, r5, r6, sl, fp, lr}
   165b8:	add	fp, sp, #16
   165bc:	mov	r4, r1
   165c0:	mov	r5, r0
   165c4:	mov	r0, r1
   165c8:	bl	162b8 <tcgetattr@plt+0x4ef0>
   165cc:	mov	r6, r0
   165d0:	mov	r1, r5
   165d4:	mov	r2, r4
   165d8:	bl	1114c <memcpy@plt>
   165dc:	mov	r0, r6
   165e0:	pop	{r4, r5, r6, sl, fp, pc}
   165e4:	push	{r4, r5, r6, sl, fp, lr}
   165e8:	add	fp, sp, #16
   165ec:	mov	r4, r1
   165f0:	mov	r5, r0
   165f4:	add	r0, r1, #1
   165f8:	bl	162b8 <tcgetattr@plt+0x4ef0>
   165fc:	mov	r6, r0
   16600:	mov	r0, #0
   16604:	strb	r0, [r6, r4]
   16608:	mov	r0, r6
   1660c:	mov	r1, r5
   16610:	mov	r2, r4
   16614:	bl	1114c <memcpy@plt>
   16618:	mov	r0, r6
   1661c:	pop	{r4, r5, r6, sl, fp, pc}
   16620:	push	{r4, sl, fp, lr}
   16624:	add	fp, sp, #8
   16628:	mov	r4, r0
   1662c:	bl	112a8 <strlen@plt>
   16630:	add	r1, r0, #1
   16634:	mov	r0, r4
   16638:	pop	{r4, sl, fp, lr}
   1663c:	b	16584 <tcgetattr@plt+0x51bc>
   16640:	push	{fp, lr}
   16644:	mov	fp, sp
   16648:	movw	r0, #49432	; 0xc118
   1664c:	movt	r0, #2
   16650:	ldr	r4, [r0]
   16654:	movw	r1, #45300	; 0xb0f4
   16658:	movt	r1, #1
   1665c:	mov	r0, #0
   16660:	mov	r2, #5
   16664:	bl	11170 <dcgettext@plt>
   16668:	mov	r3, r0
   1666c:	movw	r2, #44263	; 0xace7
   16670:	movt	r2, #1
   16674:	mov	r0, r4
   16678:	mov	r1, #0
   1667c:	bl	11224 <error@plt>
   16680:	bl	11398 <abort@plt>
   16684:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16688:	add	fp, sp, #24
   1668c:	sub	sp, sp, #16
   16690:	mov	r5, r3
   16694:	mov	r6, r2
   16698:	mov	r2, r1
   1669c:	mov	r8, r0
   166a0:	ldr	r0, [fp, #16]
   166a4:	str	r0, [sp]
   166a8:	add	r3, sp, #8
   166ac:	mov	r0, r8
   166b0:	mov	r1, #0
   166b4:	bl	16ca4 <tcgetattr@plt+0x58dc>
   166b8:	cmp	r0, #0
   166bc:	bne	1674c <tcgetattr@plt+0x5384>
   166c0:	ldr	r7, [sp, #8]
   166c4:	ldr	r4, [sp, #12]
   166c8:	subs	r0, r7, r6
   166cc:	sbcs	r0, r4, r5
   166d0:	bcc	166f4 <tcgetattr@plt+0x532c>
   166d4:	ldr	r0, [fp, #12]
   166d8:	ldr	r1, [fp, #8]
   166dc:	subs	r1, r1, r7
   166e0:	sbcs	r0, r0, r4
   166e4:	ldrcs	r0, [sp, #8]
   166e8:	ldrcs	r1, [sp, #12]
   166ec:	subcs	sp, fp, #24
   166f0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   166f4:	bl	112d8 <__errno_location@plt>
   166f8:	subs	r1, r7, #1073741824	; 0x40000000
   166fc:	sbcs	r1, r4, #0
   16700:	movcc	r1, #34	; 0x22
   16704:	movcs	r1, #75	; 0x4b
   16708:	str	r1, [r0]
   1670c:	ldr	r5, [fp, #24]
   16710:	ldr	r6, [fp, #20]
   16714:	bl	112d8 <__errno_location@plt>
   16718:	ldr	r4, [r0]
   1671c:	mov	r0, r8
   16720:	bl	159b8 <tcgetattr@plt+0x45f0>
   16724:	str	r0, [sp]
   16728:	subs	r1, r4, #22
   1672c:	movne	r1, r4
   16730:	cmp	r5, #0
   16734:	movweq	r5, #1
   16738:	movw	r2, #44259	; 0xace3
   1673c:	movt	r2, #1
   16740:	mov	r0, r5
   16744:	mov	r3, r6
   16748:	bl	11224 <error@plt>
   1674c:	cmp	r0, #1
   16750:	beq	16768 <tcgetattr@plt+0x53a0>
   16754:	cmp	r0, #3
   16758:	bne	1670c <tcgetattr@plt+0x5344>
   1675c:	bl	112d8 <__errno_location@plt>
   16760:	mov	r1, #0
   16764:	b	16708 <tcgetattr@plt+0x5340>
   16768:	bl	112d8 <__errno_location@plt>
   1676c:	mov	r1, #75	; 0x4b
   16770:	b	16708 <tcgetattr@plt+0x5340>
   16774:	mov	r1, #10
   16778:	b	16684 <tcgetattr@plt+0x52bc>
   1677c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16780:	add	fp, sp, #28
   16784:	sub	sp, sp, #12
   16788:	cmp	r2, #37	; 0x25
   1678c:	bcs	16b90 <tcgetattr@plt+0x57c8>
   16790:	mov	r9, r3
   16794:	mov	r5, r2
   16798:	mov	r6, r1
   1679c:	mov	r4, r0
   167a0:	ldr	sl, [fp, #8]
   167a4:	bl	112d8 <__errno_location@plt>
   167a8:	mov	r7, r0
   167ac:	mov	r0, #0
   167b0:	str	r0, [r7]
   167b4:	add	r8, sp, #8
   167b8:	cmp	r6, #0
   167bc:	movne	r8, r6
   167c0:	mov	r0, r4
   167c4:	mov	r1, r8
   167c8:	mov	r2, r5
   167cc:	bl	1111c <strtol@plt>
   167d0:	str	r0, [sp, #4]
   167d4:	ldr	r6, [r8]
   167d8:	cmp	r6, r4
   167dc:	beq	16808 <tcgetattr@plt+0x5440>
   167e0:	ldr	r0, [r7]
   167e4:	cmp	r0, #0
   167e8:	beq	1683c <tcgetattr@plt+0x5474>
   167ec:	mov	r5, #4
   167f0:	cmp	r0, #34	; 0x22
   167f4:	bne	16b84 <tcgetattr@plt+0x57bc>
   167f8:	mov	r5, #1
   167fc:	cmp	sl, #0
   16800:	bne	16848 <tcgetattr@plt+0x5480>
   16804:	b	16b7c <tcgetattr@plt+0x57b4>
   16808:	mov	r5, #4
   1680c:	cmp	sl, #0
   16810:	ldrbne	r1, [r6]
   16814:	cmpne	r1, #0
   16818:	beq	16b84 <tcgetattr@plt+0x57bc>
   1681c:	mov	r0, sl
   16820:	bl	112b4 <strchr@plt>
   16824:	cmp	r0, #0
   16828:	beq	16b84 <tcgetattr@plt+0x57bc>
   1682c:	mov	r0, #1
   16830:	str	r0, [sp, #4]
   16834:	mov	r5, #0
   16838:	b	16848 <tcgetattr@plt+0x5480>
   1683c:	mov	r5, r0
   16840:	cmp	sl, #0
   16844:	beq	16b7c <tcgetattr@plt+0x57b4>
   16848:	ldrb	r4, [r6]
   1684c:	cmp	r4, #0
   16850:	beq	16b7c <tcgetattr@plt+0x57b4>
   16854:	mov	r0, sl
   16858:	mov	r1, r4
   1685c:	bl	112b4 <strchr@plt>
   16860:	cmp	r0, #0
   16864:	beq	16a7c <tcgetattr@plt+0x56b4>
   16868:	sub	r0, r4, #69	; 0x45
   1686c:	mov	r1, #1
   16870:	str	r1, [sp]
   16874:	mov	r7, #1024	; 0x400
   16878:	cmp	r0, #47	; 0x2f
   1687c:	bhi	16978 <tcgetattr@plt+0x55b0>
   16880:	add	r1, pc, #0
   16884:	ldr	pc, [r1, r0, lsl #2]
   16888:	andeq	r6, r1, r8, asr #18
   1688c:	andeq	r6, r1, r8, ror r9
   16890:	andeq	r6, r1, r8, asr #18
   16894:	andeq	r6, r1, r8, ror r9
   16898:	andeq	r6, r1, r8, ror r9
   1689c:	andeq	r6, r1, r8, ror r9
   168a0:	andeq	r6, r1, r8, asr #18
   168a4:	andeq	r6, r1, r8, ror r9
   168a8:	andeq	r6, r1, r8, asr #18
   168ac:	andeq	r6, r1, r8, ror r9
   168b0:	andeq	r6, r1, r8, ror r9
   168b4:	andeq	r6, r1, r8, asr #18
   168b8:	andeq	r6, r1, r8, ror r9
   168bc:	andeq	r6, r1, r8, ror r9
   168c0:	andeq	r6, r1, r8, ror r9
   168c4:	andeq	r6, r1, r8, asr #18
   168c8:	andeq	r6, r1, r8, ror r9
   168cc:	andeq	r6, r1, r8, ror r9
   168d0:	andeq	r6, r1, r8, ror r9
   168d4:	andeq	r6, r1, r8, ror r9
   168d8:	andeq	r6, r1, r8, asr #18
   168dc:	andeq	r6, r1, r8, asr #18
   168e0:	andeq	r6, r1, r8, ror r9
   168e4:	andeq	r6, r1, r8, ror r9
   168e8:	andeq	r6, r1, r8, ror r9
   168ec:	andeq	r6, r1, r8, ror r9
   168f0:	andeq	r6, r1, r8, ror r9
   168f4:	andeq	r6, r1, r8, ror r9
   168f8:	andeq	r6, r1, r8, ror r9
   168fc:	andeq	r6, r1, r8, ror r9
   16900:	andeq	r6, r1, r8, ror r9
   16904:	andeq	r6, r1, r8, ror r9
   16908:	andeq	r6, r1, r8, ror r9
   1690c:	andeq	r6, r1, r8, ror r9
   16910:	andeq	r6, r1, r8, asr #18
   16914:	andeq	r6, r1, r8, ror r9
   16918:	andeq	r6, r1, r8, ror r9
   1691c:	andeq	r6, r1, r8, ror r9
   16920:	andeq	r6, r1, r8, asr #18
   16924:	andeq	r6, r1, r8, ror r9
   16928:	andeq	r6, r1, r8, asr #18
   1692c:	andeq	r6, r1, r8, ror r9
   16930:	andeq	r6, r1, r8, ror r9
   16934:	andeq	r6, r1, r8, ror r9
   16938:	andeq	r6, r1, r8, ror r9
   1693c:	andeq	r6, r1, r8, ror r9
   16940:	andeq	r6, r1, r8, ror r9
   16944:	andeq	r6, r1, r8, asr #18
   16948:	mov	r0, sl
   1694c:	mov	r1, #48	; 0x30
   16950:	bl	112b4 <strchr@plt>
   16954:	cmp	r0, #0
   16958:	beq	16978 <tcgetattr@plt+0x55b0>
   1695c:	ldrb	r0, [r6, #1]
   16960:	cmp	r0, #66	; 0x42
   16964:	cmpne	r0, #68	; 0x44
   16968:	bne	16a8c <tcgetattr@plt+0x56c4>
   1696c:	mov	r0, #2
   16970:	str	r0, [sp]
   16974:	mov	r7, #1000	; 0x3e8
   16978:	sub	r1, r4, #66	; 0x42
   1697c:	cmp	r1, #53	; 0x35
   16980:	bhi	16a7c <tcgetattr@plt+0x56b4>
   16984:	mov	r0, #0
   16988:	add	r2, pc, #0
   1698c:	ldr	pc, [r2, r1, lsl #2]
   16990:	strdeq	r6, [r1], -ip
   16994:	andeq	r6, r1, ip, ror sl
   16998:	andeq	r6, r1, ip, ror sl
   1699c:	andeq	r6, r1, r8, lsl #22
   169a0:	andeq	r6, r1, ip, ror sl
   169a4:	andeq	r6, r1, r8, ror #20
   169a8:	andeq	r6, r1, ip, ror sl
   169ac:	andeq	r6, r1, ip, ror sl
   169b0:	andeq	r6, r1, ip, ror sl
   169b4:	andeq	r6, r1, ip, lsr #21
   169b8:	andeq	r6, r1, ip, ror sl
   169bc:	andeq	r6, r1, r0, asr #21
   169c0:	andeq	r6, r1, ip, ror sl
   169c4:	andeq	r6, r1, ip, ror sl
   169c8:	andeq	r6, r1, ip, lsl fp
   169cc:	andeq	r6, r1, ip, ror sl
   169d0:	andeq	r6, r1, ip, ror sl
   169d4:	andeq	r6, r1, ip, ror sl
   169d8:	ldrdeq	r6, [r1], -r4
   169dc:	andeq	r6, r1, ip, ror sl
   169e0:	andeq	r6, r1, ip, ror sl
   169e4:	andeq	r6, r1, ip, ror sl
   169e8:	andeq	r6, r1, ip, ror sl
   169ec:	andeq	r6, r1, r0, lsr fp
   169f0:	andeq	r6, r1, r8, ror #21
   169f4:	andeq	r6, r1, ip, ror sl
   169f8:	andeq	r6, r1, ip, ror sl
   169fc:	andeq	r6, r1, ip, ror sl
   16a00:	andeq	r6, r1, ip, ror sl
   16a04:	andeq	r6, r1, ip, ror sl
   16a08:	andeq	r6, r1, ip, ror sl
   16a0c:	andeq	r6, r1, ip, ror sl
   16a10:	andeq	r6, r1, r4, asr #22
   16a14:	andeq	r6, r1, ip, asr fp
   16a18:	andeq	r6, r1, ip, ror sl
   16a1c:	andeq	r6, r1, ip, ror sl
   16a20:	andeq	r6, r1, ip, ror sl
   16a24:	andeq	r6, r1, r8, ror #20
   16a28:	andeq	r6, r1, ip, ror sl
   16a2c:	andeq	r6, r1, ip, ror sl
   16a30:	andeq	r6, r1, ip, ror sl
   16a34:	andeq	r6, r1, ip, lsr #21
   16a38:	andeq	r6, r1, ip, ror sl
   16a3c:	andeq	r6, r1, r0, asr #21
   16a40:	andeq	r6, r1, ip, ror sl
   16a44:	andeq	r6, r1, ip, ror sl
   16a48:	andeq	r6, r1, ip, ror sl
   16a4c:	andeq	r6, r1, ip, ror sl
   16a50:	andeq	r6, r1, ip, ror sl
   16a54:	andeq	r6, r1, ip, ror sl
   16a58:	ldrdeq	r6, [r1], -r4
   16a5c:	andeq	r6, r1, ip, ror sl
   16a60:	andeq	r6, r1, ip, ror sl
   16a64:	andeq	r6, r1, r0, asr fp
   16a68:	add	r0, sp, #4
   16a6c:	mov	r1, r7
   16a70:	mov	r2, #3
   16a74:	bl	16c5c <tcgetattr@plt+0x5894>
   16a78:	b	16b5c <tcgetattr@plt+0x5794>
   16a7c:	ldr	r0, [sp, #4]
   16a80:	str	r0, [r9]
   16a84:	orr	r5, r5, #2
   16a88:	b	16b84 <tcgetattr@plt+0x57bc>
   16a8c:	cmp	r0, #105	; 0x69
   16a90:	bne	16978 <tcgetattr@plt+0x55b0>
   16a94:	ldrb	r0, [r6, #2]
   16a98:	mov	r1, #1
   16a9c:	cmp	r0, #66	; 0x42
   16aa0:	movweq	r1, #3
   16aa4:	str	r1, [sp]
   16aa8:	b	16978 <tcgetattr@plt+0x55b0>
   16aac:	add	r0, sp, #4
   16ab0:	mov	r1, r7
   16ab4:	mov	r2, #1
   16ab8:	bl	16c5c <tcgetattr@plt+0x5894>
   16abc:	b	16b5c <tcgetattr@plt+0x5794>
   16ac0:	add	r0, sp, #4
   16ac4:	mov	r1, r7
   16ac8:	mov	r2, #2
   16acc:	bl	16c5c <tcgetattr@plt+0x5894>
   16ad0:	b	16b5c <tcgetattr@plt+0x5794>
   16ad4:	add	r0, sp, #4
   16ad8:	mov	r1, r7
   16adc:	mov	r2, #4
   16ae0:	bl	16c5c <tcgetattr@plt+0x5894>
   16ae4:	b	16b5c <tcgetattr@plt+0x5794>
   16ae8:	add	r0, sp, #4
   16aec:	mov	r1, r7
   16af0:	mov	r2, #7
   16af4:	bl	16c5c <tcgetattr@plt+0x5894>
   16af8:	b	16b5c <tcgetattr@plt+0x5794>
   16afc:	add	r0, sp, #4
   16b00:	mov	r1, #1024	; 0x400
   16b04:	b	16b58 <tcgetattr@plt+0x5790>
   16b08:	add	r0, sp, #4
   16b0c:	mov	r1, r7
   16b10:	mov	r2, #6
   16b14:	bl	16c5c <tcgetattr@plt+0x5894>
   16b18:	b	16b5c <tcgetattr@plt+0x5794>
   16b1c:	add	r0, sp, #4
   16b20:	mov	r1, r7
   16b24:	mov	r2, #5
   16b28:	bl	16c5c <tcgetattr@plt+0x5894>
   16b2c:	b	16b5c <tcgetattr@plt+0x5794>
   16b30:	add	r0, sp, #4
   16b34:	mov	r1, r7
   16b38:	mov	r2, #8
   16b3c:	bl	16c5c <tcgetattr@plt+0x5894>
   16b40:	b	16b5c <tcgetattr@plt+0x5794>
   16b44:	add	r0, sp, #4
   16b48:	mov	r1, #512	; 0x200
   16b4c:	b	16b58 <tcgetattr@plt+0x5790>
   16b50:	add	r0, sp, #4
   16b54:	mov	r1, #2
   16b58:	bl	16bb0 <tcgetattr@plt+0x57e8>
   16b5c:	ldr	r1, [r8]
   16b60:	ldr	r3, [sp]
   16b64:	add	r2, r1, r3
   16b68:	str	r2, [r8]
   16b6c:	ldrb	r1, [r1, r3]
   16b70:	orr	r5, r0, r5
   16b74:	cmp	r1, #0
   16b78:	orrne	r5, r5, #2
   16b7c:	ldr	r0, [sp, #4]
   16b80:	str	r0, [r9]
   16b84:	mov	r0, r5
   16b88:	sub	sp, fp, #28
   16b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b90:	movw	r0, #45317	; 0xb105
   16b94:	movt	r0, #1
   16b98:	movw	r1, #45428	; 0xb174
   16b9c:	movt	r1, #1
   16ba0:	movw	r3, #45355	; 0xb12b
   16ba4:	movt	r3, #1
   16ba8:	mov	r2, #85	; 0x55
   16bac:	bl	113bc <__assert_fail@plt>
   16bb0:	cmn	r1, #1
   16bb4:	ble	16be0 <tcgetattr@plt+0x5818>
   16bb8:	cmp	r1, #0
   16bbc:	beq	16c1c <tcgetattr@plt+0x5854>
   16bc0:	ldr	r2, [r0]
   16bc4:	cmn	r2, #1
   16bc8:	ble	16c08 <tcgetattr@plt+0x5840>
   16bcc:	mvn	r3, #-2147483648	; 0x80000000
   16bd0:	udiv	r3, r3, r1
   16bd4:	cmp	r3, r2
   16bd8:	bge	16c1c <tcgetattr@plt+0x5854>
   16bdc:	b	16c3c <tcgetattr@plt+0x5874>
   16be0:	ldr	r2, [r0]
   16be4:	cmn	r2, #1
   16be8:	ble	16c2c <tcgetattr@plt+0x5864>
   16bec:	cmn	r1, #1
   16bf0:	beq	16c1c <tcgetattr@plt+0x5854>
   16bf4:	mov	r3, #-2147483648	; 0x80000000
   16bf8:	sdiv	r3, r3, r1
   16bfc:	cmp	r3, r2
   16c00:	bge	16c1c <tcgetattr@plt+0x5854>
   16c04:	b	16c3c <tcgetattr@plt+0x5874>
   16c08:	beq	16c1c <tcgetattr@plt+0x5854>
   16c0c:	mov	r3, #-2147483648	; 0x80000000
   16c10:	sdiv	r2, r3, r2
   16c14:	cmp	r2, r1
   16c18:	blt	16c3c <tcgetattr@plt+0x5874>
   16c1c:	ldr	r2, [r0]
   16c20:	mul	r2, r2, r1
   16c24:	mov	r1, #0
   16c28:	b	16c50 <tcgetattr@plt+0x5888>
   16c2c:	mvn	r3, #-2147483648	; 0x80000000
   16c30:	sdiv	r3, r3, r1
   16c34:	cmp	r2, r3
   16c38:	bge	16c1c <tcgetattr@plt+0x5854>
   16c3c:	ldr	r1, [r0]
   16c40:	mvn	r2, #-2147483648	; 0x80000000
   16c44:	cmp	r1, #0
   16c48:	movlt	r2, #-2147483648	; 0x80000000
   16c4c:	mov	r1, #1
   16c50:	str	r2, [r0]
   16c54:	mov	r0, r1
   16c58:	bx	lr
   16c5c:	push	{r4, r5, r6, r7, fp, lr}
   16c60:	add	fp, sp, #16
   16c64:	cmp	r2, #0
   16c68:	moveq	r6, #0
   16c6c:	moveq	r0, r6
   16c70:	popeq	{r4, r5, r6, r7, fp, pc}
   16c74:	mov	r4, r2
   16c78:	mov	r5, r1
   16c7c:	mov	r7, r0
   16c80:	mov	r6, #0
   16c84:	mov	r0, r7
   16c88:	mov	r1, r5
   16c8c:	bl	16bb0 <tcgetattr@plt+0x57e8>
   16c90:	orr	r6, r0, r6
   16c94:	subs	r4, r4, #1
   16c98:	bne	16c84 <tcgetattr@plt+0x58bc>
   16c9c:	mov	r0, r6
   16ca0:	pop	{r4, r5, r6, r7, fp, pc}
   16ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ca8:	add	fp, sp, #28
   16cac:	sub	sp, sp, #20
   16cb0:	cmp	r2, #37	; 0x25
   16cb4:	bcs	170e4 <tcgetattr@plt+0x5d1c>
   16cb8:	mov	r5, r2
   16cbc:	mov	r6, r1
   16cc0:	mov	r4, r0
   16cc4:	str	r3, [sp, #4]
   16cc8:	ldr	sl, [fp, #8]
   16ccc:	bl	112d8 <__errno_location@plt>
   16cd0:	mov	r7, r0
   16cd4:	mov	r0, #0
   16cd8:	str	r0, [r7]
   16cdc:	bl	11284 <__ctype_b_loc@plt>
   16ce0:	ldr	r1, [r0]
   16ce4:	mov	r2, r4
   16ce8:	ldrb	r0, [r2], #1
   16cec:	add	r3, r1, r0, lsl #1
   16cf0:	ldrb	r3, [r3, #1]
   16cf4:	tst	r3, #32
   16cf8:	bne	16ce8 <tcgetattr@plt+0x5920>
   16cfc:	add	r9, sp, #16
   16d00:	cmp	r6, #0
   16d04:	movne	r9, r6
   16d08:	mov	r8, #4
   16d0c:	cmp	r0, #45	; 0x2d
   16d10:	beq	170d8 <tcgetattr@plt+0x5d10>
   16d14:	mov	r0, r4
   16d18:	mov	r1, r9
   16d1c:	mov	r2, r5
   16d20:	bl	11320 <strtoumax@plt>
   16d24:	str	r1, [sp, #12]
   16d28:	str	r0, [sp, #8]
   16d2c:	ldr	r6, [r9]
   16d30:	cmp	r6, r4
   16d34:	beq	16d5c <tcgetattr@plt+0x5994>
   16d38:	ldr	r0, [r7]
   16d3c:	cmp	r0, #0
   16d40:	beq	16d90 <tcgetattr@plt+0x59c8>
   16d44:	cmp	r0, #34	; 0x22
   16d48:	bne	170d8 <tcgetattr@plt+0x5d10>
   16d4c:	mov	r8, #1
   16d50:	cmp	sl, #0
   16d54:	bne	16d9c <tcgetattr@plt+0x59d4>
   16d58:	b	170c8 <tcgetattr@plt+0x5d00>
   16d5c:	cmp	sl, #0
   16d60:	ldrbne	r1, [r6]
   16d64:	cmpne	r1, #0
   16d68:	beq	170d8 <tcgetattr@plt+0x5d10>
   16d6c:	mov	r0, sl
   16d70:	bl	112b4 <strchr@plt>
   16d74:	cmp	r0, #0
   16d78:	beq	170d8 <tcgetattr@plt+0x5d10>
   16d7c:	mov	r8, #0
   16d80:	str	r8, [sp, #12]
   16d84:	mov	r0, #1
   16d88:	str	r0, [sp, #8]
   16d8c:	b	16d9c <tcgetattr@plt+0x59d4>
   16d90:	mov	r8, r0
   16d94:	cmp	sl, #0
   16d98:	beq	170c8 <tcgetattr@plt+0x5d00>
   16d9c:	ldrb	r4, [r6]
   16da0:	cmp	r4, #0
   16da4:	beq	170c8 <tcgetattr@plt+0x5d00>
   16da8:	mov	r0, sl
   16dac:	mov	r1, r4
   16db0:	bl	112b4 <strchr@plt>
   16db4:	cmp	r0, #0
   16db8:	beq	16fc8 <tcgetattr@plt+0x5c00>
   16dbc:	sub	r0, r4, #69	; 0x45
   16dc0:	mov	r7, #1
   16dc4:	mov	r5, #1024	; 0x400
   16dc8:	cmp	r0, #47	; 0x2f
   16dcc:	bhi	16ec4 <tcgetattr@plt+0x5afc>
   16dd0:	add	r1, pc, #0
   16dd4:	ldr	pc, [r1, r0, lsl #2]
   16dd8:	muleq	r1, r8, lr
   16ddc:	andeq	r6, r1, r4, asr #29
   16de0:	muleq	r1, r8, lr
   16de4:	andeq	r6, r1, r4, asr #29
   16de8:	andeq	r6, r1, r4, asr #29
   16dec:	andeq	r6, r1, r4, asr #29
   16df0:	muleq	r1, r8, lr
   16df4:	andeq	r6, r1, r4, asr #29
   16df8:	muleq	r1, r8, lr
   16dfc:	andeq	r6, r1, r4, asr #29
   16e00:	andeq	r6, r1, r4, asr #29
   16e04:	muleq	r1, r8, lr
   16e08:	andeq	r6, r1, r4, asr #29
   16e0c:	andeq	r6, r1, r4, asr #29
   16e10:	andeq	r6, r1, r4, asr #29
   16e14:	muleq	r1, r8, lr
   16e18:	andeq	r6, r1, r4, asr #29
   16e1c:	andeq	r6, r1, r4, asr #29
   16e20:	andeq	r6, r1, r4, asr #29
   16e24:	andeq	r6, r1, r4, asr #29
   16e28:	muleq	r1, r8, lr
   16e2c:	muleq	r1, r8, lr
   16e30:	andeq	r6, r1, r4, asr #29
   16e34:	andeq	r6, r1, r4, asr #29
   16e38:	andeq	r6, r1, r4, asr #29
   16e3c:	andeq	r6, r1, r4, asr #29
   16e40:	andeq	r6, r1, r4, asr #29
   16e44:	andeq	r6, r1, r4, asr #29
   16e48:	andeq	r6, r1, r4, asr #29
   16e4c:	andeq	r6, r1, r4, asr #29
   16e50:	andeq	r6, r1, r4, asr #29
   16e54:	andeq	r6, r1, r4, asr #29
   16e58:	andeq	r6, r1, r4, asr #29
   16e5c:	andeq	r6, r1, r4, asr #29
   16e60:	muleq	r1, r8, lr
   16e64:	andeq	r6, r1, r4, asr #29
   16e68:	andeq	r6, r1, r4, asr #29
   16e6c:	andeq	r6, r1, r4, asr #29
   16e70:	muleq	r1, r8, lr
   16e74:	andeq	r6, r1, r4, asr #29
   16e78:	muleq	r1, r8, lr
   16e7c:	andeq	r6, r1, r4, asr #29
   16e80:	andeq	r6, r1, r4, asr #29
   16e84:	andeq	r6, r1, r4, asr #29
   16e88:	andeq	r6, r1, r4, asr #29
   16e8c:	andeq	r6, r1, r4, asr #29
   16e90:	andeq	r6, r1, r4, asr #29
   16e94:	muleq	r1, r8, lr
   16e98:	mov	r0, sl
   16e9c:	mov	r1, #48	; 0x30
   16ea0:	bl	112b4 <strchr@plt>
   16ea4:	cmp	r0, #0
   16ea8:	beq	16ec4 <tcgetattr@plt+0x5afc>
   16eac:	ldrb	r0, [r6, #1]
   16eb0:	cmp	r0, #66	; 0x42
   16eb4:	cmpne	r0, #68	; 0x44
   16eb8:	bne	16fe0 <tcgetattr@plt+0x5c18>
   16ebc:	mov	r7, #2
   16ec0:	mov	r5, #1000	; 0x3e8
   16ec4:	sub	r1, r4, #66	; 0x42
   16ec8:	cmp	r1, #53	; 0x35
   16ecc:	bhi	16fc8 <tcgetattr@plt+0x5c00>
   16ed0:	mov	r0, #0
   16ed4:	add	r2, pc, #0
   16ed8:	ldr	pc, [r2, r1, lsl #2]
   16edc:	andeq	r7, r1, ip, asr #32
   16ee0:	andeq	r6, r1, r8, asr #31
   16ee4:	andeq	r6, r1, r8, asr #31
   16ee8:	andeq	r7, r1, r8, asr r0
   16eec:	andeq	r6, r1, r8, asr #31
   16ef0:			; <UNDEFINED> instruction: 0x00016fb4
   16ef4:	andeq	r6, r1, r8, asr #31
   16ef8:	andeq	r6, r1, r8, asr #31
   16efc:	andeq	r6, r1, r8, asr #31
   16f00:	strdeq	r6, [r1], -ip
   16f04:	andeq	r6, r1, r8, asr #31
   16f08:	andeq	r7, r1, r0, lsl r0
   16f0c:	andeq	r6, r1, r8, asr #31
   16f10:	andeq	r6, r1, r8, asr #31
   16f14:	andeq	r7, r1, ip, rrx
   16f18:	andeq	r6, r1, r8, asr #31
   16f1c:	andeq	r6, r1, r8, asr #31
   16f20:	andeq	r6, r1, r8, asr #31
   16f24:	andeq	r7, r1, r4, lsr #32
   16f28:	andeq	r6, r1, r8, asr #31
   16f2c:	andeq	r6, r1, r8, asr #31
   16f30:	andeq	r6, r1, r8, asr #31
   16f34:	andeq	r6, r1, r8, asr #31
   16f38:	andeq	r7, r1, r0, lsl #1
   16f3c:	andeq	r7, r1, r8, lsr r0
   16f40:	andeq	r6, r1, r8, asr #31
   16f44:	andeq	r6, r1, r8, asr #31
   16f48:	andeq	r6, r1, r8, asr #31
   16f4c:	andeq	r6, r1, r8, asr #31
   16f50:	andeq	r6, r1, r8, asr #31
   16f54:	andeq	r6, r1, r8, asr #31
   16f58:	andeq	r6, r1, r8, asr #31
   16f5c:	muleq	r1, r4, r0
   16f60:	andeq	r7, r1, ip, lsr #1
   16f64:	andeq	r6, r1, r8, asr #31
   16f68:	andeq	r6, r1, r8, asr #31
   16f6c:	andeq	r6, r1, r8, asr #31
   16f70:			; <UNDEFINED> instruction: 0x00016fb4
   16f74:	andeq	r6, r1, r8, asr #31
   16f78:	andeq	r6, r1, r8, asr #31
   16f7c:	andeq	r6, r1, r8, asr #31
   16f80:	strdeq	r6, [r1], -ip
   16f84:	andeq	r6, r1, r8, asr #31
   16f88:	andeq	r7, r1, r0, lsl r0
   16f8c:	andeq	r6, r1, r8, asr #31
   16f90:	andeq	r6, r1, r8, asr #31
   16f94:	andeq	r6, r1, r8, asr #31
   16f98:	andeq	r6, r1, r8, asr #31
   16f9c:	andeq	r6, r1, r8, asr #31
   16fa0:	andeq	r6, r1, r8, asr #31
   16fa4:	andeq	r7, r1, r4, lsr #32
   16fa8:	andeq	r6, r1, r8, asr #31
   16fac:	andeq	r6, r1, r8, asr #31
   16fb0:	andeq	r7, r1, r0, lsr #1
   16fb4:	add	r0, sp, #8
   16fb8:	mov	r1, r5
   16fbc:	mov	r2, #3
   16fc0:	bl	17190 <tcgetattr@plt+0x5dc8>
   16fc4:	b	170ac <tcgetattr@plt+0x5ce4>
   16fc8:	ldr	r0, [sp, #8]
   16fcc:	ldr	r1, [sp, #12]
   16fd0:	ldr	r2, [sp, #4]
   16fd4:	strd	r0, [r2]
   16fd8:	orr	r8, r8, #2
   16fdc:	b	170d8 <tcgetattr@plt+0x5d10>
   16fe0:	cmp	r0, #105	; 0x69
   16fe4:	bne	16ec4 <tcgetattr@plt+0x5afc>
   16fe8:	ldrb	r0, [r6, #2]
   16fec:	mov	r7, #1
   16ff0:	cmp	r0, #66	; 0x42
   16ff4:	movweq	r7, #3
   16ff8:	b	16ec4 <tcgetattr@plt+0x5afc>
   16ffc:	add	r0, sp, #8
   17000:	mov	r1, r5
   17004:	mov	r2, #1
   17008:	bl	17190 <tcgetattr@plt+0x5dc8>
   1700c:	b	170ac <tcgetattr@plt+0x5ce4>
   17010:	add	r0, sp, #8
   17014:	mov	r1, r5
   17018:	mov	r2, #2
   1701c:	bl	17190 <tcgetattr@plt+0x5dc8>
   17020:	b	170ac <tcgetattr@plt+0x5ce4>
   17024:	add	r0, sp, #8
   17028:	mov	r1, r5
   1702c:	mov	r2, #4
   17030:	bl	17190 <tcgetattr@plt+0x5dc8>
   17034:	b	170ac <tcgetattr@plt+0x5ce4>
   17038:	add	r0, sp, #8
   1703c:	mov	r1, r5
   17040:	mov	r2, #7
   17044:	bl	17190 <tcgetattr@plt+0x5dc8>
   17048:	b	170ac <tcgetattr@plt+0x5ce4>
   1704c:	add	r0, sp, #8
   17050:	mov	r1, #1024	; 0x400
   17054:	b	170a8 <tcgetattr@plt+0x5ce0>
   17058:	add	r0, sp, #8
   1705c:	mov	r1, r5
   17060:	mov	r2, #6
   17064:	bl	17190 <tcgetattr@plt+0x5dc8>
   17068:	b	170ac <tcgetattr@plt+0x5ce4>
   1706c:	add	r0, sp, #8
   17070:	mov	r1, r5
   17074:	mov	r2, #5
   17078:	bl	17190 <tcgetattr@plt+0x5dc8>
   1707c:	b	170ac <tcgetattr@plt+0x5ce4>
   17080:	add	r0, sp, #8
   17084:	mov	r1, r5
   17088:	mov	r2, #8
   1708c:	bl	17190 <tcgetattr@plt+0x5dc8>
   17090:	b	170ac <tcgetattr@plt+0x5ce4>
   17094:	add	r0, sp, #8
   17098:	mov	r1, #512	; 0x200
   1709c:	b	170a8 <tcgetattr@plt+0x5ce0>
   170a0:	add	r0, sp, #8
   170a4:	mov	r1, #2
   170a8:	bl	17104 <tcgetattr@plt+0x5d3c>
   170ac:	ldr	r1, [r9]
   170b0:	add	r2, r1, r7
   170b4:	str	r2, [r9]
   170b8:	ldrb	r1, [r1, r7]
   170bc:	orr	r8, r0, r8
   170c0:	cmp	r1, #0
   170c4:	orrne	r8, r8, #2
   170c8:	ldr	r0, [sp, #8]
   170cc:	ldr	r1, [sp, #12]
   170d0:	ldr	r2, [sp, #4]
   170d4:	strd	r0, [r2]
   170d8:	mov	r0, r8
   170dc:	sub	sp, fp, #28
   170e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170e4:	movw	r0, #45317	; 0xb105
   170e8:	movt	r0, #1
   170ec:	movw	r1, #45426	; 0xb172
   170f0:	movt	r1, #1
   170f4:	movw	r3, #45442	; 0xb182
   170f8:	movt	r3, #1
   170fc:	mov	r2, #85	; 0x55
   17100:	bl	113bc <__assert_fail@plt>
   17104:	push	{r4, r5, r6, r7, fp, lr}
   17108:	add	fp, sp, #16
   1710c:	mov	r5, r1
   17110:	mov	r4, r0
   17114:	cmn	r1, #1
   17118:	ble	17150 <tcgetattr@plt+0x5d88>
   1711c:	cmp	r5, #0
   17120:	beq	17170 <tcgetattr@plt+0x5da8>
   17124:	asr	r3, r5, #31
   17128:	mvn	r6, #0
   1712c:	mvn	r0, #0
   17130:	mvn	r1, #0
   17134:	mov	r2, r5
   17138:	bl	17a38 <tcgetattr@plt+0x6670>
   1713c:	ldrd	r2, [r4]
   17140:	subs	r0, r0, r2
   17144:	sbcs	r0, r1, r3
   17148:	bcc	17160 <tcgetattr@plt+0x5d98>
   1714c:	b	17170 <tcgetattr@plt+0x5da8>
   17150:	ldrd	r0, [r4]
   17154:	orrs	r0, r0, r1
   17158:	beq	17170 <tcgetattr@plt+0x5da8>
   1715c:	mvn	r6, #0
   17160:	mov	r0, #1
   17164:	mvn	r7, #0
   17168:	strd	r6, [r4]
   1716c:	pop	{r4, r5, r6, r7, fp, pc}
   17170:	ldrd	r0, [r4]
   17174:	umull	r6, r2, r0, r5
   17178:	asr	r3, r5, #31
   1717c:	mla	r0, r0, r3, r2
   17180:	mla	r7, r1, r5, r0
   17184:	mov	r0, #0
   17188:	strd	r6, [r4]
   1718c:	pop	{r4, r5, r6, r7, fp, pc}
   17190:	push	{r4, r5, r6, r7, fp, lr}
   17194:	add	fp, sp, #16
   17198:	cmp	r2, #0
   1719c:	moveq	r6, #0
   171a0:	moveq	r0, r6
   171a4:	popeq	{r4, r5, r6, r7, fp, pc}
   171a8:	mov	r4, r2
   171ac:	mov	r5, r1
   171b0:	mov	r7, r0
   171b4:	mov	r6, #0
   171b8:	mov	r0, r7
   171bc:	mov	r1, r5
   171c0:	bl	17104 <tcgetattr@plt+0x5d3c>
   171c4:	orr	r6, r0, r6
   171c8:	subs	r4, r4, #1
   171cc:	bne	171b8 <tcgetattr@plt+0x5df0>
   171d0:	mov	r0, r6
   171d4:	pop	{r4, r5, r6, r7, fp, pc}
   171d8:	clz	r2, r1
   171dc:	lsr	r2, r2, #5
   171e0:	clz	r3, r0
   171e4:	lsr	r3, r3, #5
   171e8:	orrs	r2, r3, r2
   171ec:	movwne	r1, #1
   171f0:	movwne	r0, #1
   171f4:	cmp	r1, #0
   171f8:	beq	17228 <tcgetattr@plt+0x5e60>
   171fc:	mvn	r2, #-2147483648	; 0x80000000
   17200:	udiv	r2, r2, r1
   17204:	cmp	r2, r0
   17208:	bcs	17228 <tcgetattr@plt+0x5e60>
   1720c:	push	{fp, lr}
   17210:	mov	fp, sp
   17214:	bl	112d8 <__errno_location@plt>
   17218:	mov	r1, #12
   1721c:	str	r1, [r0]
   17220:	mov	r0, #0
   17224:	pop	{fp, pc}
   17228:	b	110ec <calloc@plt>
   1722c:	cmp	r0, #0
   17230:	movweq	r0, #1
   17234:	cmn	r0, #1
   17238:	ble	17240 <tcgetattr@plt+0x5e78>
   1723c:	b	11248 <malloc@plt>
   17240:	push	{fp, lr}
   17244:	mov	fp, sp
   17248:	bl	112d8 <__errno_location@plt>
   1724c:	mov	r1, #12
   17250:	str	r1, [r0]
   17254:	mov	r0, #0
   17258:	pop	{fp, pc}
   1725c:	push	{fp, lr}
   17260:	mov	fp, sp
   17264:	cmp	r0, #0
   17268:	beq	17284 <tcgetattr@plt+0x5ebc>
   1726c:	cmp	r1, #0
   17270:	beq	17290 <tcgetattr@plt+0x5ec8>
   17274:	cmn	r1, #1
   17278:	ble	1729c <tcgetattr@plt+0x5ed4>
   1727c:	pop	{fp, lr}
   17280:	b	11194 <realloc@plt>
   17284:	mov	r0, r1
   17288:	pop	{fp, lr}
   1728c:	b	1722c <tcgetattr@plt+0x5e64>
   17290:	bl	14158 <tcgetattr@plt+0x2d90>
   17294:	mov	r0, #0
   17298:	pop	{fp, pc}
   1729c:	bl	112d8 <__errno_location@plt>
   172a0:	mov	r1, #12
   172a4:	str	r1, [r0]
   172a8:	mov	r0, #0
   172ac:	pop	{fp, pc}
   172b0:	mov	r1, r0
   172b4:	sub	r2, r0, #65	; 0x41
   172b8:	mov	r0, #1
   172bc:	cmp	r2, #26
   172c0:	subcs	r2, r1, #97	; 0x61
   172c4:	cmpcs	r2, #26
   172c8:	bcs	172d0 <tcgetattr@plt+0x5f08>
   172cc:	bx	lr
   172d0:	sub	r1, r1, #48	; 0x30
   172d4:	cmp	r1, #10
   172d8:	movcs	r0, #0
   172dc:	bx	lr
   172e0:	mov	r1, r0
   172e4:	sub	r2, r0, #65	; 0x41
   172e8:	mov	r0, #1
   172ec:	cmp	r2, #26
   172f0:	subcs	r1, r1, #97	; 0x61
   172f4:	cmpcs	r1, #26
   172f8:	movcs	r0, #0
   172fc:	bx	lr
   17300:	mov	r1, #0
   17304:	cmp	r0, #128	; 0x80
   17308:	movwcc	r1, #1
   1730c:	mov	r0, r1
   17310:	bx	lr
   17314:	sub	r1, r0, #9
   17318:	clz	r1, r1
   1731c:	lsr	r1, r1, #5
   17320:	sub	r0, r0, #32
   17324:	clz	r0, r0
   17328:	lsr	r0, r0, #5
   1732c:	orr	r0, r0, r1
   17330:	bx	lr
   17334:	mov	r1, r0
   17338:	mov	r0, #1
   1733c:	cmp	r1, #32
   17340:	bxcc	lr
   17344:	cmp	r1, #127	; 0x7f
   17348:	movne	r0, #0
   1734c:	bx	lr
   17350:	sub	r1, r0, #48	; 0x30
   17354:	mov	r0, #0
   17358:	cmp	r1, #10
   1735c:	movwcc	r0, #1
   17360:	bx	lr
   17364:	sub	r1, r0, #33	; 0x21
   17368:	mov	r0, #0
   1736c:	cmp	r1, #94	; 0x5e
   17370:	movwcc	r0, #1
   17374:	bx	lr
   17378:	sub	r1, r0, #97	; 0x61
   1737c:	mov	r0, #0
   17380:	cmp	r1, #26
   17384:	movwcc	r0, #1
   17388:	bx	lr
   1738c:	sub	r1, r0, #32
   17390:	mov	r0, #0
   17394:	cmp	r1, #95	; 0x5f
   17398:	movwcc	r0, #1
   1739c:	bx	lr
   173a0:	sub	r1, r0, #33	; 0x21
   173a4:	cmp	r1, #93	; 0x5d
   173a8:	bhi	17534 <tcgetattr@plt+0x616c>
   173ac:	mov	r0, #1
   173b0:	add	r2, pc, #0
   173b4:	ldr	pc, [r2, r1, lsl #2]
   173b8:	andeq	r7, r1, r0, lsr r5
   173bc:	andeq	r7, r1, r0, lsr r5
   173c0:	andeq	r7, r1, r0, lsr r5
   173c4:	andeq	r7, r1, r0, lsr r5
   173c8:	andeq	r7, r1, r0, lsr r5
   173cc:	andeq	r7, r1, r0, lsr r5
   173d0:	andeq	r7, r1, r0, lsr r5
   173d4:	andeq	r7, r1, r0, lsr r5
   173d8:	andeq	r7, r1, r0, lsr r5
   173dc:	andeq	r7, r1, r0, lsr r5
   173e0:	andeq	r7, r1, r0, lsr r5
   173e4:	andeq	r7, r1, r0, lsr r5
   173e8:	andeq	r7, r1, r0, lsr r5
   173ec:	andeq	r7, r1, r0, lsr r5
   173f0:	andeq	r7, r1, r0, lsr r5
   173f4:	andeq	r7, r1, r4, lsr r5
   173f8:	andeq	r7, r1, r4, lsr r5
   173fc:	andeq	r7, r1, r4, lsr r5
   17400:	andeq	r7, r1, r4, lsr r5
   17404:	andeq	r7, r1, r4, lsr r5
   17408:	andeq	r7, r1, r4, lsr r5
   1740c:	andeq	r7, r1, r4, lsr r5
   17410:	andeq	r7, r1, r4, lsr r5
   17414:	andeq	r7, r1, r4, lsr r5
   17418:	andeq	r7, r1, r4, lsr r5
   1741c:	andeq	r7, r1, r0, lsr r5
   17420:	andeq	r7, r1, r0, lsr r5
   17424:	andeq	r7, r1, r0, lsr r5
   17428:	andeq	r7, r1, r0, lsr r5
   1742c:	andeq	r7, r1, r0, lsr r5
   17430:	andeq	r7, r1, r0, lsr r5
   17434:	andeq	r7, r1, r0, lsr r5
   17438:	andeq	r7, r1, r4, lsr r5
   1743c:	andeq	r7, r1, r4, lsr r5
   17440:	andeq	r7, r1, r4, lsr r5
   17444:	andeq	r7, r1, r4, lsr r5
   17448:	andeq	r7, r1, r4, lsr r5
   1744c:	andeq	r7, r1, r4, lsr r5
   17450:	andeq	r7, r1, r4, lsr r5
   17454:	andeq	r7, r1, r4, lsr r5
   17458:	andeq	r7, r1, r4, lsr r5
   1745c:	andeq	r7, r1, r4, lsr r5
   17460:	andeq	r7, r1, r4, lsr r5
   17464:	andeq	r7, r1, r4, lsr r5
   17468:	andeq	r7, r1, r4, lsr r5
   1746c:	andeq	r7, r1, r4, lsr r5
   17470:	andeq	r7, r1, r4, lsr r5
   17474:	andeq	r7, r1, r4, lsr r5
   17478:	andeq	r7, r1, r4, lsr r5
   1747c:	andeq	r7, r1, r4, lsr r5
   17480:	andeq	r7, r1, r4, lsr r5
   17484:	andeq	r7, r1, r4, lsr r5
   17488:	andeq	r7, r1, r4, lsr r5
   1748c:	andeq	r7, r1, r4, lsr r5
   17490:	andeq	r7, r1, r4, lsr r5
   17494:	andeq	r7, r1, r4, lsr r5
   17498:	andeq	r7, r1, r4, lsr r5
   1749c:	andeq	r7, r1, r4, lsr r5
   174a0:	andeq	r7, r1, r0, lsr r5
   174a4:	andeq	r7, r1, r0, lsr r5
   174a8:	andeq	r7, r1, r0, lsr r5
   174ac:	andeq	r7, r1, r0, lsr r5
   174b0:	andeq	r7, r1, r0, lsr r5
   174b4:	andeq	r7, r1, r0, lsr r5
   174b8:	andeq	r7, r1, r4, lsr r5
   174bc:	andeq	r7, r1, r4, lsr r5
   174c0:	andeq	r7, r1, r4, lsr r5
   174c4:	andeq	r7, r1, r4, lsr r5
   174c8:	andeq	r7, r1, r4, lsr r5
   174cc:	andeq	r7, r1, r4, lsr r5
   174d0:	andeq	r7, r1, r4, lsr r5
   174d4:	andeq	r7, r1, r4, lsr r5
   174d8:	andeq	r7, r1, r4, lsr r5
   174dc:	andeq	r7, r1, r4, lsr r5
   174e0:	andeq	r7, r1, r4, lsr r5
   174e4:	andeq	r7, r1, r4, lsr r5
   174e8:	andeq	r7, r1, r4, lsr r5
   174ec:	andeq	r7, r1, r4, lsr r5
   174f0:	andeq	r7, r1, r4, lsr r5
   174f4:	andeq	r7, r1, r4, lsr r5
   174f8:	andeq	r7, r1, r4, lsr r5
   174fc:	andeq	r7, r1, r4, lsr r5
   17500:	andeq	r7, r1, r4, lsr r5
   17504:	andeq	r7, r1, r4, lsr r5
   17508:	andeq	r7, r1, r4, lsr r5
   1750c:	andeq	r7, r1, r4, lsr r5
   17510:	andeq	r7, r1, r4, lsr r5
   17514:	andeq	r7, r1, r4, lsr r5
   17518:	andeq	r7, r1, r4, lsr r5
   1751c:	andeq	r7, r1, r4, lsr r5
   17520:	andeq	r7, r1, r0, lsr r5
   17524:	andeq	r7, r1, r0, lsr r5
   17528:	andeq	r7, r1, r0, lsr r5
   1752c:	andeq	r7, r1, r0, lsr r5
   17530:	bx	lr
   17534:	mov	r0, #0
   17538:	bx	lr
   1753c:	sub	r0, r0, #9
   17540:	cmp	r0, #23
   17544:	movhi	r0, #0
   17548:	bxhi	lr
   1754c:	bic	r0, r0, #-16777216	; 0xff000000
   17550:	movw	r1, #31
   17554:	movt	r1, #128	; 0x80
   17558:	mov	r2, #1
   1755c:	and	r0, r2, r1, lsr r0
   17560:	bx	lr
   17564:	sub	r1, r0, #65	; 0x41
   17568:	mov	r0, #0
   1756c:	cmp	r1, #26
   17570:	movwcc	r0, #1
   17574:	bx	lr
   17578:	mov	r1, r0
   1757c:	sub	r2, r0, #48	; 0x30
   17580:	mov	r0, #1
   17584:	cmp	r2, #22
   17588:	bhi	175a0 <tcgetattr@plt+0x61d8>
   1758c:	mov	ip, #1
   17590:	movw	r3, #1023	; 0x3ff
   17594:	movt	r3, #126	; 0x7e
   17598:	tst	r3, ip, lsl r2
   1759c:	bxne	lr
   175a0:	sub	r1, r1, #97	; 0x61
   175a4:	cmp	r1, #6
   175a8:	movcs	r0, #0
   175ac:	bxcs	lr
   175b0:	bx	lr
   175b4:	sub	r1, r0, #65	; 0x41
   175b8:	cmp	r1, #26
   175bc:	addcc	r0, r0, #32
   175c0:	bx	lr
   175c4:	sub	r1, r0, #97	; 0x61
   175c8:	cmp	r1, #26
   175cc:	subcc	r0, r0, #32
   175d0:	bx	lr
   175d4:	push	{r4, r5, r6, sl, fp, lr}
   175d8:	add	fp, sp, #16
   175dc:	mov	r4, r0
   175e0:	bl	11200 <__fpending@plt>
   175e4:	mov	r5, r0
   175e8:	mov	r0, r4
   175ec:	bl	1120c <ferror_unlocked@plt>
   175f0:	mov	r6, r0
   175f4:	mov	r0, r4
   175f8:	bl	1765c <tcgetattr@plt+0x6294>
   175fc:	cmp	r6, #0
   17600:	beq	17620 <tcgetattr@plt+0x6258>
   17604:	mvn	r4, #0
   17608:	cmp	r0, #0
   1760c:	bne	17654 <tcgetattr@plt+0x628c>
   17610:	bl	112d8 <__errno_location@plt>
   17614:	mov	r1, #0
   17618:	str	r1, [r0]
   1761c:	b	17654 <tcgetattr@plt+0x628c>
   17620:	cmp	r0, #0
   17624:	mov	r4, r0
   17628:	mvnne	r4, #0
   1762c:	cmp	r5, #0
   17630:	bne	17654 <tcgetattr@plt+0x628c>
   17634:	cmp	r0, #0
   17638:	beq	17654 <tcgetattr@plt+0x628c>
   1763c:	bl	112d8 <__errno_location@plt>
   17640:	ldr	r0, [r0]
   17644:	subs	r4, r0, #9
   17648:	mvnne	r4, #0
   1764c:	mov	r0, r4
   17650:	pop	{r4, r5, r6, sl, fp, pc}
   17654:	mov	r0, r4
   17658:	pop	{r4, r5, r6, sl, fp, pc}
   1765c:	push	{r4, r5, fp, lr}
   17660:	add	fp, sp, #8
   17664:	sub	sp, sp, #8
   17668:	mov	r4, r0
   1766c:	bl	11314 <fileno@plt>
   17670:	cmn	r0, #1
   17674:	ble	176ec <tcgetattr@plt+0x6324>
   17678:	mov	r0, r4
   1767c:	bl	11260 <__freading@plt>
   17680:	cmp	r0, #0
   17684:	beq	176b0 <tcgetattr@plt+0x62e8>
   17688:	mov	r0, r4
   1768c:	bl	11314 <fileno@plt>
   17690:	mov	r1, #1
   17694:	str	r1, [sp]
   17698:	mov	r2, #0
   1769c:	mov	r3, #0
   176a0:	bl	111dc <lseek64@plt>
   176a4:	and	r0, r0, r1
   176a8:	cmn	r0, #1
   176ac:	beq	176ec <tcgetattr@plt+0x6324>
   176b0:	mov	r0, r4
   176b4:	bl	176fc <tcgetattr@plt+0x6334>
   176b8:	cmp	r0, #0
   176bc:	beq	176ec <tcgetattr@plt+0x6324>
   176c0:	bl	112d8 <__errno_location@plt>
   176c4:	ldr	r5, [r0]
   176c8:	mov	r0, r4
   176cc:	bl	11338 <fclose@plt>
   176d0:	cmp	r5, #0
   176d4:	beq	176e4 <tcgetattr@plt+0x631c>
   176d8:	bl	112d8 <__errno_location@plt>
   176dc:	str	r5, [r0]
   176e0:	mvn	r0, #0
   176e4:	sub	sp, fp, #8
   176e8:	pop	{r4, r5, fp, pc}
   176ec:	mov	r0, r4
   176f0:	sub	sp, fp, #8
   176f4:	pop	{r4, r5, fp, lr}
   176f8:	b	11338 <fclose@plt>
   176fc:	push	{r4, sl, fp, lr}
   17700:	add	fp, sp, #8
   17704:	mov	r4, r0
   17708:	cmp	r0, #0
   1770c:	beq	17724 <tcgetattr@plt+0x635c>
   17710:	mov	r0, r4
   17714:	bl	11260 <__freading@plt>
   17718:	cmp	r0, #0
   1771c:	movne	r0, r4
   17720:	blne	17730 <tcgetattr@plt+0x6368>
   17724:	mov	r0, r4
   17728:	pop	{r4, sl, fp, lr}
   1772c:	b	11128 <fflush@plt>
   17730:	ldrb	r1, [r0, #1]
   17734:	tst	r1, #1
   17738:	bxeq	lr
   1773c:	push	{fp, lr}
   17740:	mov	fp, sp
   17744:	sub	sp, sp, #8
   17748:	mov	r1, #1
   1774c:	str	r1, [sp]
   17750:	mov	r2, #0
   17754:	mov	r3, #0
   17758:	bl	17764 <tcgetattr@plt+0x639c>
   1775c:	mov	sp, fp
   17760:	pop	{fp, pc}
   17764:	push	{r4, r5, r6, r7, fp, lr}
   17768:	add	fp, sp, #16
   1776c:	sub	sp, sp, #8
   17770:	mov	r5, r3
   17774:	mov	r6, r2
   17778:	mov	r4, r0
   1777c:	ldr	r0, [r0, #4]
   17780:	ldr	r1, [r4, #8]
   17784:	cmp	r1, r0
   17788:	bne	177a4 <tcgetattr@plt+0x63dc>
   1778c:	ldrd	r0, [r4, #16]
   17790:	cmp	r1, r0
   17794:	bne	177a4 <tcgetattr@plt+0x63dc>
   17798:	ldr	r0, [r4, #36]	; 0x24
   1779c:	cmp	r0, #0
   177a0:	beq	177bc <tcgetattr@plt+0x63f4>
   177a4:	mov	r0, r4
   177a8:	mov	r2, r6
   177ac:	mov	r3, r5
   177b0:	sub	sp, fp, #16
   177b4:	pop	{r4, r5, r6, r7, fp, lr}
   177b8:	b	11344 <fseeko64@plt>
   177bc:	ldr	r7, [fp, #8]
   177c0:	mov	r0, r4
   177c4:	bl	11314 <fileno@plt>
   177c8:	str	r7, [sp]
   177cc:	mov	r2, r6
   177d0:	mov	r3, r5
   177d4:	bl	111dc <lseek64@plt>
   177d8:	and	r2, r0, r1
   177dc:	cmn	r2, #1
   177e0:	mvneq	r0, #0
   177e4:	subeq	sp, fp, #16
   177e8:	popeq	{r4, r5, r6, r7, fp, pc}
   177ec:	strd	r0, [r4, #80]	; 0x50
   177f0:	ldr	r0, [r4]
   177f4:	bic	r0, r0, #16
   177f8:	str	r0, [r4]
   177fc:	mov	r0, #0
   17800:	sub	sp, fp, #16
   17804:	pop	{r4, r5, r6, r7, fp, pc}
   17808:	push	{fp, lr}
   1780c:	mov	fp, sp
   17810:	bl	112d8 <__errno_location@plt>
   17814:	mov	r1, #12
   17818:	str	r1, [r0]
   1781c:	mov	r0, #0
   17820:	pop	{fp, pc}
   17824:	b	1722c <tcgetattr@plt+0x5e64>
   17828:	cmp	r1, #0
   1782c:	orreq	r1, r1, #1
   17830:	b	1725c <tcgetattr@plt+0x5e94>
   17834:	b	171d8 <tcgetattr@plt+0x5e10>
   17838:	clz	r3, r2
   1783c:	lsr	ip, r3, #5
   17840:	clz	r3, r1
   17844:	lsr	r3, r3, #5
   17848:	orrs	r3, r3, ip
   1784c:	movwne	r1, #1
   17850:	movwne	r2, #1
   17854:	b	178f0 <tcgetattr@plt+0x6528>
   17858:	push	{fp, lr}
   1785c:	mov	fp, sp
   17860:	mov	r0, #14
   17864:	bl	11374 <nl_langinfo@plt>
   17868:	movw	r1, #37058	; 0x90c2
   1786c:	movt	r1, #1
   17870:	cmp	r0, #0
   17874:	movne	r1, r0
   17878:	ldrb	r2, [r1]
   1787c:	movw	r0, #45521	; 0xb1d1
   17880:	movt	r0, #1
   17884:	cmp	r2, #0
   17888:	movne	r0, r1
   1788c:	pop	{fp, pc}
   17890:	push	{r4, r5, r6, r7, fp, lr}
   17894:	add	fp, sp, #16
   17898:	sub	sp, sp, #8
   1789c:	mov	r7, r2
   178a0:	mov	r4, r1
   178a4:	add	r5, sp, #4
   178a8:	cmp	r0, #0
   178ac:	movne	r5, r0
   178b0:	mov	r0, r5
   178b4:	bl	11218 <mbrtowc@plt>
   178b8:	mov	r6, r0
   178bc:	cmp	r7, #0
   178c0:	beq	178e4 <tcgetattr@plt+0x651c>
   178c4:	cmn	r6, #2
   178c8:	bcc	178e4 <tcgetattr@plt+0x651c>
   178cc:	mov	r0, #0
   178d0:	bl	1792c <tcgetattr@plt+0x6564>
   178d4:	cmp	r0, #0
   178d8:	ldrbeq	r0, [r4]
   178dc:	streq	r0, [r5]
   178e0:	moveq	r6, #1
   178e4:	mov	r0, r6
   178e8:	sub	sp, fp, #16
   178ec:	pop	{r4, r5, r6, r7, fp, pc}
   178f0:	cmp	r2, #0
   178f4:	beq	17924 <tcgetattr@plt+0x655c>
   178f8:	mvn	r3, #0
   178fc:	udiv	r3, r3, r2
   17900:	cmp	r3, r1
   17904:	bcs	17924 <tcgetattr@plt+0x655c>
   17908:	push	{fp, lr}
   1790c:	mov	fp, sp
   17910:	bl	112d8 <__errno_location@plt>
   17914:	mov	r1, #12
   17918:	str	r1, [r0]
   1791c:	mov	r0, #0
   17920:	pop	{fp, pc}
   17924:	mul	r1, r2, r1
   17928:	b	1725c <tcgetattr@plt+0x5e94>
   1792c:	push	{r4, sl, fp, lr}
   17930:	add	fp, sp, #8
   17934:	sub	sp, sp, #264	; 0x108
   17938:	add	r1, sp, #7
   1793c:	movw	r2, #257	; 0x101
   17940:	bl	17990 <tcgetattr@plt+0x65c8>
   17944:	mov	r4, #0
   17948:	cmp	r0, #0
   1794c:	bne	17984 <tcgetattr@plt+0x65bc>
   17950:	add	r0, sp, #7
   17954:	movw	r1, #45527	; 0xb1d7
   17958:	movt	r1, #1
   1795c:	bl	11110 <strcmp@plt>
   17960:	cmp	r0, #0
   17964:	beq	17984 <tcgetattr@plt+0x65bc>
   17968:	add	r0, sp, #7
   1796c:	movw	r1, #45529	; 0xb1d9
   17970:	movt	r1, #1
   17974:	bl	11110 <strcmp@plt>
   17978:	mov	r4, r0
   1797c:	cmp	r0, #0
   17980:	movwne	r4, #1
   17984:	mov	r0, r4
   17988:	sub	sp, fp, #8
   1798c:	pop	{r4, sl, fp, pc}
   17990:	b	17994 <tcgetattr@plt+0x65cc>
   17994:	push	{r4, r5, r6, r7, fp, lr}
   17998:	add	fp, sp, #16
   1799c:	mov	r6, r2
   179a0:	mov	r4, r1
   179a4:	bl	17a30 <tcgetattr@plt+0x6668>
   179a8:	cmp	r0, #0
   179ac:	beq	179dc <tcgetattr@plt+0x6614>
   179b0:	mov	r7, r0
   179b4:	bl	112a8 <strlen@plt>
   179b8:	cmp	r0, r6
   179bc:	bcs	179fc <tcgetattr@plt+0x6634>
   179c0:	add	r2, r0, #1
   179c4:	mov	r0, r4
   179c8:	mov	r1, r7
   179cc:	bl	1114c <memcpy@plt>
   179d0:	mov	r5, #0
   179d4:	mov	r0, r5
   179d8:	pop	{r4, r5, r6, r7, fp, pc}
   179dc:	mov	r5, #22
   179e0:	cmp	r6, #0
   179e4:	movne	r0, #0
   179e8:	strbne	r0, [r4]
   179ec:	movne	r0, r5
   179f0:	popne	{r4, r5, r6, r7, fp, pc}
   179f4:	mov	r0, r5
   179f8:	pop	{r4, r5, r6, r7, fp, pc}
   179fc:	mov	r5, #34	; 0x22
   17a00:	cmp	r6, #0
   17a04:	beq	17a24 <tcgetattr@plt+0x665c>
   17a08:	sub	r6, r6, #1
   17a0c:	mov	r0, r4
   17a10:	mov	r1, r7
   17a14:	mov	r2, r6
   17a18:	bl	1114c <memcpy@plt>
   17a1c:	mov	r0, #0
   17a20:	strb	r0, [r4, r6]
   17a24:	mov	r0, r5
   17a28:	pop	{r4, r5, r6, r7, fp, pc}
   17a2c:	b	17a30 <tcgetattr@plt+0x6668>
   17a30:	mov	r1, #0
   17a34:	b	1135c <setlocale@plt>
   17a38:	cmp	r3, #0
   17a3c:	cmpeq	r2, #0
   17a40:	bne	17a58 <tcgetattr@plt+0x6690>
   17a44:	cmp	r1, #0
   17a48:	cmpeq	r0, #0
   17a4c:	mvnne	r1, #0
   17a50:	mvnne	r0, #0
   17a54:	b	17a74 <tcgetattr@plt+0x66ac>
   17a58:	sub	sp, sp, #8
   17a5c:	push	{sp, lr}
   17a60:	bl	17a84 <tcgetattr@plt+0x66bc>
   17a64:	ldr	lr, [sp, #4]
   17a68:	add	sp, sp, #8
   17a6c:	pop	{r2, r3}
   17a70:	bx	lr
   17a74:	push	{r1, lr}
   17a78:	mov	r0, #8
   17a7c:	bl	11104 <raise@plt>
   17a80:	pop	{r1, pc}
   17a84:	cmp	r1, r3
   17a88:	cmpeq	r0, r2
   17a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a90:	mov	r4, r0
   17a94:	movcc	r0, #0
   17a98:	mov	r5, r1
   17a9c:	ldr	lr, [sp, #36]	; 0x24
   17aa0:	movcc	r1, r0
   17aa4:	bcc	17ba0 <tcgetattr@plt+0x67d8>
   17aa8:	cmp	r3, #0
   17aac:	clzeq	ip, r2
   17ab0:	clzne	ip, r3
   17ab4:	addeq	ip, ip, #32
   17ab8:	cmp	r5, #0
   17abc:	clzeq	r1, r4
   17ac0:	addeq	r1, r1, #32
   17ac4:	clzne	r1, r5
   17ac8:	sub	ip, ip, r1
   17acc:	sub	sl, ip, #32
   17ad0:	lsl	r9, r3, ip
   17ad4:	rsb	fp, ip, #32
   17ad8:	orr	r9, r9, r2, lsl sl
   17adc:	orr	r9, r9, r2, lsr fp
   17ae0:	lsl	r8, r2, ip
   17ae4:	cmp	r5, r9
   17ae8:	cmpeq	r4, r8
   17aec:	movcc	r0, #0
   17af0:	movcc	r1, r0
   17af4:	bcc	17b10 <tcgetattr@plt+0x6748>
   17af8:	mov	r0, #1
   17afc:	subs	r4, r4, r8
   17b00:	lsl	r1, r0, sl
   17b04:	orr	r1, r1, r0, lsr fp
   17b08:	lsl	r0, r0, ip
   17b0c:	sbc	r5, r5, r9
   17b10:	cmp	ip, #0
   17b14:	beq	17ba0 <tcgetattr@plt+0x67d8>
   17b18:	lsr	r6, r8, #1
   17b1c:	orr	r6, r6, r9, lsl #31
   17b20:	lsr	r7, r9, #1
   17b24:	mov	r2, ip
   17b28:	b	17b4c <tcgetattr@plt+0x6784>
   17b2c:	subs	r3, r4, r6
   17b30:	sbc	r8, r5, r7
   17b34:	adds	r3, r3, r3
   17b38:	adc	r8, r8, r8
   17b3c:	adds	r4, r3, #1
   17b40:	adc	r5, r8, #0
   17b44:	subs	r2, r2, #1
   17b48:	beq	17b68 <tcgetattr@plt+0x67a0>
   17b4c:	cmp	r5, r7
   17b50:	cmpeq	r4, r6
   17b54:	bcs	17b2c <tcgetattr@plt+0x6764>
   17b58:	adds	r4, r4, r4
   17b5c:	adc	r5, r5, r5
   17b60:	subs	r2, r2, #1
   17b64:	bne	17b4c <tcgetattr@plt+0x6784>
   17b68:	lsr	r3, r4, ip
   17b6c:	orr	r3, r3, r5, lsl fp
   17b70:	lsr	r2, r5, ip
   17b74:	orr	r3, r3, r5, lsr sl
   17b78:	adds	r0, r0, r4
   17b7c:	mov	r4, r3
   17b80:	lsl	r3, r2, ip
   17b84:	orr	r3, r3, r4, lsl sl
   17b88:	lsl	ip, r4, ip
   17b8c:	orr	r3, r3, r4, lsr fp
   17b90:	adc	r1, r1, r5
   17b94:	subs	r0, r0, ip
   17b98:	mov	r5, r2
   17b9c:	sbc	r1, r1, r3
   17ba0:	cmp	lr, #0
   17ba4:	strdne	r4, [lr]
   17ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17bb0:	mov	r7, r0
   17bb4:	ldr	r6, [pc, #72]	; 17c04 <tcgetattr@plt+0x683c>
   17bb8:	ldr	r5, [pc, #72]	; 17c08 <tcgetattr@plt+0x6840>
   17bbc:	add	r6, pc, r6
   17bc0:	add	r5, pc, r5
   17bc4:	sub	r6, r6, r5
   17bc8:	mov	r8, r1
   17bcc:	mov	r9, r2
   17bd0:	bl	110cc <calloc@plt-0x20>
   17bd4:	asrs	r6, r6, #2
   17bd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17bdc:	mov	r4, #0
   17be0:	add	r4, r4, #1
   17be4:	ldr	r3, [r5], #4
   17be8:	mov	r2, r9
   17bec:	mov	r1, r8
   17bf0:	mov	r0, r7
   17bf4:	blx	r3
   17bf8:	cmp	r6, r4
   17bfc:	bne	17be0 <tcgetattr@plt+0x6818>
   17c00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c04:	andeq	r4, r1, r8, asr #6
   17c08:	andeq	r4, r1, r0, asr #6
   17c0c:	bx	lr
   17c10:	ldr	r3, [pc, #12]	; 17c24 <tcgetattr@plt+0x685c>
   17c14:	mov	r1, #0
   17c18:	add	r3, pc, r3
   17c1c:	ldr	r2, [r3]
   17c20:	b	112e4 <__cxa_atexit@plt>
   17c24:	andeq	r4, r1, ip, ror #9

Disassembly of section .fini:

00017c28 <.fini>:
   17c28:	push	{r3, lr}
   17c2c:	pop	{r3, pc}
