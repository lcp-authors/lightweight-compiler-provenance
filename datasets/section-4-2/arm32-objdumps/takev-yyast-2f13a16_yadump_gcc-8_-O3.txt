
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

000104ac <.init>:
   104ac:	push	{r3, lr}
   104b0:	bl	10708 <close@plt+0x194>
   104b4:	pop	{r3, pc}

Disassembly of section .plt:

000104b8 <free@plt-0x14>:
   104b8:	push	{lr}		; (str lr, [sp, #-4]!)
   104bc:	ldr	lr, [pc, #4]	; 104c8 <free@plt-0x4>
   104c0:	add	lr, pc, lr
   104c4:	ldr	pc, [lr, #8]!
   104c8:	andeq	r0, r1, r8, lsr fp

000104cc <free@plt>:
   104cc:	add	ip, pc, #0, 12
   104d0:	add	ip, ip, #16, 20	; 0x10000
   104d4:	ldr	pc, [ip, #2872]!	; 0xb38

000104d8 <strndup@plt>:
   104d8:	add	ip, pc, #0, 12
   104dc:	add	ip, ip, #16, 20	; 0x10000
   104e0:	ldr	pc, [ip, #2864]!	; 0xb30

000104e4 <perror@plt>:
   104e4:	add	ip, pc, #0, 12
   104e8:	add	ip, ip, #16, 20	; 0x10000
   104ec:	ldr	pc, [ip, #2856]!	; 0xb28

000104f0 <fwrite@plt>:
   104f0:	add	ip, pc, #0, 12
   104f4:	add	ip, ip, #16, 20	; 0x10000
   104f8:	ldr	pc, [ip, #2848]!	; 0xb20

000104fc <__libc_start_main@plt>:
   104fc:	add	ip, pc, #0, 12
   10500:	add	ip, ip, #16, 20	; 0x10000
   10504:	ldr	pc, [ip, #2840]!	; 0xb18

00010508 <__fxstat@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #16, 20	; 0x10000
   10510:	ldr	pc, [ip, #2832]!	; 0xb10

00010514 <__gmon_start__@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #16, 20	; 0x10000
   1051c:	ldr	pc, [ip, #2824]!	; 0xb08

00010520 <open@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #16, 20	; 0x10000
   10528:	ldr	pc, [ip, #2816]!	; 0xb00

0001052c <exit@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #16, 20	; 0x10000
   10534:	ldr	pc, [ip, #2808]!	; 0xaf8

00010538 <mmap@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #16, 20	; 0x10000
   10540:	ldr	pc, [ip, #2800]!	; 0xaf0

00010544 <fprintf@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #16, 20	; 0x10000
   1054c:	ldr	pc, [ip, #2792]!	; 0xae8

00010550 <munmap@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #16, 20	; 0x10000
   10558:	ldr	pc, [ip, #2784]!	; 0xae0

0001055c <fputc@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #16, 20	; 0x10000
   10564:	ldr	pc, [ip, #2776]!	; 0xad8

00010568 <abort@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #16, 20	; 0x10000
   10570:	ldr	pc, [ip, #2768]!	; 0xad0

00010574 <close@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #16, 20	; 0x10000
   1057c:	ldr	pc, [ip, #2760]!	; 0xac8

Disassembly of section .text:

00010580 <.text>:
   10580:	cmp	r0, #2
   10584:	strd	r4, [sp, #-20]!	; 0xffffffec
   10588:	strd	r6, [sp, #8]
   1058c:	str	lr, [sp, #16]
   10590:	sub	sp, sp, #100	; 0x64
   10594:	bne	10640 <close@plt+0xcc>
   10598:	mov	r3, r1
   1059c:	mov	r1, #0
   105a0:	ldr	r0, [r3, #4]
   105a4:	bl	10520 <open@plt>
   105a8:	cmn	r0, #1
   105ac:	mov	r4, r0
   105b0:	beq	106b8 <close@plt+0x144>
   105b4:	mov	r1, r0
   105b8:	add	r2, sp, #8
   105bc:	mov	r0, #3
   105c0:	bl	10508 <__fxstat@plt>
   105c4:	cmn	r0, #1
   105c8:	beq	106a4 <close@plt+0x130>
   105cc:	ldr	r6, [sp, #52]	; 0x34
   105d0:	mov	r5, #0
   105d4:	mov	r3, #1
   105d8:	mov	r0, r5
   105dc:	mov	r2, r3
   105e0:	strd	r4, [sp]
   105e4:	mov	r1, r6
   105e8:	bl	10538 <mmap@plt>
   105ec:	cmn	r0, #1
   105f0:	mov	r7, r0
   105f4:	beq	10690 <close@plt+0x11c>
   105f8:	mov	r2, r5
   105fc:	mov	r1, r6
   10600:	bl	10884 <close@plt+0x310>
   10604:	mov	r1, r6
   10608:	mov	r0, r7
   1060c:	bl	10550 <munmap@plt>
   10610:	cmn	r0, #1
   10614:	beq	1067c <close@plt+0x108>
   10618:	mov	r0, r4
   1061c:	bl	10574 <close@plt>
   10620:	cmn	r0, #1
   10624:	beq	10668 <close@plt+0xf4>
   10628:	mov	r0, r5
   1062c:	add	sp, sp, #100	; 0x64
   10630:	ldrd	r4, [sp]
   10634:	ldrd	r6, [sp, #8]
   10638:	add	sp, sp, #16
   1063c:	pop	{pc}		; (ldr pc, [sp], #4)
   10640:	movw	r3, #4184	; 0x1058
   10644:	movt	r3, #2
   10648:	movw	r0, #3388	; 0xd3c
   1064c:	movt	r0, #1
   10650:	ldr	r3, [r3]
   10654:	mov	r2, #31
   10658:	mov	r1, #1
   1065c:	bl	104f0 <fwrite@plt>
   10660:	mov	r0, #1
   10664:	bl	1052c <exit@plt>
   10668:	movw	r0, #3548	; 0xddc
   1066c:	movt	r0, #1
   10670:	bl	104e4 <perror@plt>
   10674:	mov	r0, #1
   10678:	bl	1052c <exit@plt>
   1067c:	movw	r0, #3508	; 0xdb4
   10680:	movt	r0, #1
   10684:	bl	104e4 <perror@plt>
   10688:	mov	r0, #1
   1068c:	bl	1052c <exit@plt>
   10690:	movw	r0, #3472	; 0xd90
   10694:	movt	r0, #1
   10698:	bl	104e4 <perror@plt>
   1069c:	mov	r0, #1
   106a0:	bl	1052c <exit@plt>
   106a4:	movw	r0, #3444	; 0xd74
   106a8:	movt	r0, #1
   106ac:	bl	104e4 <perror@plt>
   106b0:	mov	r0, #1
   106b4:	bl	1052c <exit@plt>
   106b8:	movw	r0, #3420	; 0xd5c
   106bc:	movt	r0, #1
   106c0:	bl	104e4 <perror@plt>
   106c4:	mov	r0, #1
   106c8:	bl	1052c <exit@plt>
   106cc:	mov	fp, #0
   106d0:	mov	lr, #0
   106d4:	pop	{r1}		; (ldr r1, [sp], #4)
   106d8:	mov	r2, sp
   106dc:	push	{r2}		; (str r2, [sp, #-4]!)
   106e0:	push	{r0}		; (str r0, [sp, #-4]!)
   106e4:	ldr	ip, [pc, #16]	; 106fc <close@plt+0x188>
   106e8:	push	{ip}		; (str ip, [sp, #-4]!)
   106ec:	ldr	r0, [pc, #12]	; 10700 <close@plt+0x18c>
   106f0:	ldr	r3, [pc, #12]	; 10704 <close@plt+0x190>
   106f4:	bl	104fc <__libc_start_main@plt>
   106f8:	bl	10568 <abort@plt>
   106fc:	andeq	r0, r1, ip, lsr ip
   10700:	andeq	r0, r1, r0, lsl #11
   10704:	ldrdeq	r0, [r1], -ip
   10708:	ldr	r3, [pc, #20]	; 10724 <close@plt+0x1b0>
   1070c:	ldr	r2, [pc, #20]	; 10728 <close@plt+0x1b4>
   10710:	add	r3, pc, r3
   10714:	ldr	r2, [r3, r2]
   10718:	cmp	r2, #0
   1071c:	bxeq	lr
   10720:	b	10514 <__gmon_start__@plt>
   10724:	andeq	r0, r1, r8, ror #17
   10728:	andeq	r0, r0, r8, asr #32
   1072c:	ldr	r0, [pc, #24]	; 1074c <close@plt+0x1d8>
   10730:	ldr	r3, [pc, #24]	; 10750 <close@plt+0x1dc>
   10734:	cmp	r3, r0
   10738:	bxeq	lr
   1073c:	ldr	r3, [pc, #16]	; 10754 <close@plt+0x1e0>
   10740:	cmp	r3, #0
   10744:	bxeq	lr
   10748:	bx	r3
   1074c:	andeq	r1, r2, r4, asr r0
   10750:	andeq	r1, r2, r4, asr r0
   10754:	andeq	r0, r0, r0
   10758:	ldr	r0, [pc, #36]	; 10784 <close@plt+0x210>
   1075c:	ldr	r1, [pc, #36]	; 10788 <close@plt+0x214>
   10760:	sub	r1, r1, r0
   10764:	asr	r1, r1, #2
   10768:	add	r1, r1, r1, lsr #31
   1076c:	asrs	r1, r1, #1
   10770:	bxeq	lr
   10774:	ldr	r3, [pc, #16]	; 1078c <close@plt+0x218>
   10778:	cmp	r3, #0
   1077c:	bxeq	lr
   10780:	bx	r3
   10784:	andeq	r1, r2, r4, asr r0
   10788:	andeq	r1, r2, r4, asr r0
   1078c:	andeq	r0, r0, r0
   10790:	push	{r4, lr}
   10794:	ldr	r4, [pc, #24]	; 107b4 <close@plt+0x240>
   10798:	ldrb	r3, [r4]
   1079c:	cmp	r3, #0
   107a0:	popne	{r4, pc}
   107a4:	bl	1072c <close@plt+0x1b8>
   107a8:	mov	r3, #1
   107ac:	strb	r3, [r4]
   107b0:	pop	{r4, pc}
   107b4:	andeq	r1, r2, r0, rrx
   107b8:	b	10758 <close@plt+0x1e4>
   107bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   107c0:	subs	r5, r0, #0
   107c4:	strd	r6, [sp, #8]
   107c8:	str	r8, [sp, #16]
   107cc:	str	lr, [sp, #20]
   107d0:	beq	10808 <close@plt+0x294>
   107d4:	movw	r7, #4188	; 0x105c
   107d8:	movt	r7, #2
   107dc:	movw	r6, #3148	; 0xc4c
   107e0:	movt	r6, #1
   107e4:	mov	r4, #0
   107e8:	add	r4, r4, #1
   107ec:	mov	r2, #2
   107f0:	ldr	r3, [r7]
   107f4:	mov	r1, #1
   107f8:	mov	r0, r6
   107fc:	bl	104f0 <fwrite@plt>
   10800:	cmp	r5, r4
   10804:	bne	107e8 <close@plt+0x274>
   10808:	ldrd	r4, [sp]
   1080c:	ldrd	r6, [sp, #8]
   10810:	ldr	r8, [sp, #16]
   10814:	add	sp, sp, #20
   10818:	pop	{pc}		; (ldr pc, [sp], #4)
   1081c:	ubfx	r2, r0, #8, #8
   10820:	str	r4, [sp, #-8]!
   10824:	uxtb	ip, r1
   10828:	ubfx	r3, r0, #16, #8
   1082c:	str	lr, [sp, #4]
   10830:	sub	sp, sp, #24
   10834:	ubfx	r4, r1, #8, #8
   10838:	uxtb	lr, r0
   1083c:	lsr	r0, r0, #24
   10840:	stm	sp, {r4, ip}
   10844:	movw	ip, #4188	; 0x105c
   10848:	movt	ip, #2
   1084c:	str	r3, [sp, #12]
   10850:	ubfx	r3, r1, #16, #8
   10854:	str	r2, [sp, #16]
   10858:	lsr	r2, r1, #24
   1085c:	movw	r1, #3152	; 0xc50
   10860:	movt	r1, #1
   10864:	str	r0, [sp, #8]
   10868:	str	lr, [sp, #20]
   1086c:	ldr	r0, [ip]
   10870:	bl	10544 <fprintf@plt>
   10874:	add	sp, sp, #24
   10878:	ldr	r4, [sp]
   1087c:	add	sp, sp, #4
   10880:	pop	{pc}		; (ldr pc, [sp], #4)
   10884:	cmp	r1, #31
   10888:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1088c:	movw	r5, #4188	; 0x105c
   10890:	movt	r5, #2
   10894:	strd	r6, [sp, #8]
   10898:	strd	r8, [sp, #16]
   1089c:	mov	r8, r0
   108a0:	strd	sl, [sp, #24]
   108a4:	str	lr, [sp, #32]
   108a8:	sub	sp, sp, #36	; 0x24
   108ac:	ldr	r0, [r5]
   108b0:	bls	10bbc <close@plt+0x648>
   108b4:	mov	r6, r2
   108b8:	mov	ip, #0
   108bc:	ldrb	r3, [r8, #31]
   108c0:	ldr	sl, [r8, #12]
   108c4:	ldr	fp, [r8]
   108c8:	str	r3, [sp, #28]
   108cc:	ldr	r9, [r8, #4]
   108d0:	rev	sl, sl
   108d4:	ldr	r2, [r8, #24]
   108d8:	sub	sl, sl, #32
   108dc:	cmp	r1, sl
   108e0:	rev	fp, fp
   108e4:	rev	r9, r9
   108e8:	rev	r2, r2
   108ec:	bcc	10b9c <close@plt+0x628>
   108f0:	cmn	r2, #1
   108f4:	beq	109e0 <close@plt+0x46c>
   108f8:	ldr	r3, [r8, #16]
   108fc:	movw	r1, #3272	; 0xcc8
   10900:	movt	r1, #1
   10904:	ldr	ip, [r8, #20]
   10908:	rev	r3, r3
   1090c:	rev	ip, ip
   10910:	str	ip, [sp]
   10914:	bl	10544 <fprintf@plt>
   10918:	movw	r1, #3300	; 0xce4
   1091c:	movt	r1, #1
   10920:	ldr	r0, [r5]
   10924:	mov	r2, sl
   10928:	mov	r3, #0
   1092c:	bl	10544 <fprintf@plt>
   10930:	cmp	r6, #0
   10934:	movwne	r7, #3148	; 0xc4c
   10938:	movne	r4, #0
   1093c:	movtne	r7, #1
   10940:	beq	10964 <close@plt+0x3f0>
   10944:	add	r4, r4, #1
   10948:	mov	r2, #2
   1094c:	ldr	r3, [r5]
   10950:	mov	r1, #1
   10954:	mov	r0, r7
   10958:	bl	104f0 <fwrite@plt>
   1095c:	cmp	r4, r6
   10960:	bne	10944 <close@plt+0x3d0>
   10964:	mov	r0, #32
   10968:	ldr	r1, [r5]
   1096c:	bl	1055c <fputc@plt>
   10970:	ubfx	r2, r9, #8, #8
   10974:	uxtb	r0, r9
   10978:	uxtb	r1, fp
   1097c:	ubfx	r3, r9, #16, #8
   10980:	ubfx	ip, fp, #8, #8
   10984:	lsr	r9, r9, #24
   10988:	str	ip, [sp]
   1098c:	stmib	sp, {r1, r9}
   10990:	movw	r1, #3152	; 0xc50
   10994:	movt	r1, #1
   10998:	str	r3, [sp, #12]
   1099c:	ubfx	r3, fp, #16, #8
   109a0:	str	r2, [sp, #16]
   109a4:	lsr	r2, fp, #24
   109a8:	str	r0, [sp, #20]
   109ac:	ldr	r0, [r5]
   109b0:	bl	10544 <fprintf@plt>
   109b4:	ldr	r3, [sp, #28]
   109b8:	cmp	r3, #6
   109bc:	ldrls	pc, [pc, r3, lsl #2]
   109c0:	b	10b18 <close@plt+0x5a4>
   109c4:	andeq	r0, r1, r4, asr #20
   109c8:	andeq	r0, r1, r8, lsl fp
   109cc:	andeq	r0, r1, r0, ror #20
   109d0:	andeq	r0, r1, r8, lsr #21
   109d4:	ldrdeq	r0, [r1], -r8
   109d8:	strdeq	r0, [r1], -r8
   109dc:	strdeq	r0, [r1], -ip
   109e0:	mov	r3, r0
   109e4:	mov	r2, #11
   109e8:	movw	r0, #3288	; 0xcd8
   109ec:	movt	r0, #1
   109f0:	mov	r1, #1
   109f4:	bl	104f0 <fwrite@plt>
   109f8:	b	10918 <close@plt+0x3a4>
   109fc:	cmp	sl, #8
   10a00:	ldr	r0, [r5]
   10a04:	beq	10b3c <close@plt+0x5c8>
   10a08:	movw	r1, #3352	; 0xd18
   10a0c:	movt	r1, #1
   10a10:	mov	r2, sl
   10a14:	bl	10544 <fprintf@plt>
   10a18:	ldr	r0, [r8, #12]
   10a1c:	rev	r0, r0
   10a20:	add	r0, r0, #7
   10a24:	bic	r0, r0, #7
   10a28:	add	sp, sp, #36	; 0x24
   10a2c:	ldrd	r4, [sp]
   10a30:	ldrd	r6, [sp, #8]
   10a34:	ldrd	r8, [sp, #16]
   10a38:	ldrd	sl, [sp, #24]
   10a3c:	add	sp, sp, #32
   10a40:	pop	{pc}		; (ldr pc, [sp], #4)
   10a44:	movw	r0, #3368	; 0xd28
   10a48:	movt	r0, #1
   10a4c:	ldr	r3, [r5]
   10a50:	mov	r2, #6
   10a54:	mov	r1, #1
   10a58:	bl	104f0 <fwrite@plt>
   10a5c:	b	10a18 <close@plt+0x4a4>
   10a60:	mov	r0, #10
   10a64:	ldr	r1, [r5]
   10a68:	bl	1055c <fputc@plt>
   10a6c:	cmp	sl, #0
   10a70:	beq	10a18 <close@plt+0x4a4>
   10a74:	mov	r4, #0
   10a78:	add	r6, r6, #1
   10a7c:	mov	r1, r4
   10a80:	add	r0, r4, #32
   10a84:	sub	r1, sl, r1
   10a88:	add	r0, r8, r0
   10a8c:	mov	r2, r6
   10a90:	bl	10884 <close@plt+0x310>
   10a94:	add	r4, r4, r0
   10a98:	cmp	r4, sl
   10a9c:	mov	r1, r4
   10aa0:	bcc	10a80 <close@plt+0x50c>
   10aa4:	b	10a18 <close@plt+0x4a4>
   10aa8:	mov	r1, sl
   10aac:	add	r0, r8, #32
   10ab0:	bl	104d8 <strndup@plt>
   10ab4:	mov	r4, r0
   10ab8:	mov	r2, r0
   10abc:	ldr	r0, [r5]
   10ac0:	movw	r1, #3360	; 0xd20
   10ac4:	movt	r1, #1
   10ac8:	bl	10544 <fprintf@plt>
   10acc:	mov	r0, r4
   10ad0:	bl	104cc <free@plt>
   10ad4:	b	10a18 <close@plt+0x4a4>
   10ad8:	cmp	sl, #8
   10adc:	ldr	r0, [r5]
   10ae0:	beq	10b7c <close@plt+0x608>
   10ae4:	mov	r2, sl
   10ae8:	movw	r1, #3320	; 0xcf8
   10aec:	movt	r1, #1
   10af0:	bl	10544 <fprintf@plt>
   10af4:	b	10a18 <close@plt+0x4a4>
   10af8:	cmp	sl, #8
   10afc:	ldr	r0, [r5]
   10b00:	beq	10b5c <close@plt+0x5e8>
   10b04:	mov	r2, sl
   10b08:	movw	r1, #3336	; 0xd08
   10b0c:	movt	r1, #1
   10b10:	bl	10544 <fprintf@plt>
   10b14:	b	10a18 <close@plt+0x4a4>
   10b18:	movw	r3, #4184	; 0x1058
   10b1c:	movt	r3, #2
   10b20:	movw	r0, #3376	; 0xd30
   10b24:	movt	r0, #1
   10b28:	ldr	r3, [r3]
   10b2c:	mov	r2, #11
   10b30:	mov	r1, #1
   10b34:	bl	104f0 <fwrite@plt>
   10b38:	b	10a18 <close@plt+0x4a4>
   10b3c:	ldr	ip, [r8, #32]
   10b40:	movw	r1, #3344	; 0xd10
   10b44:	movt	r1, #1
   10b48:	ldr	lr, [r8, #36]	; 0x24
   10b4c:	rev	r3, ip
   10b50:	rev	r2, lr
   10b54:	bl	10544 <fprintf@plt>
   10b58:	b	10a18 <close@plt+0x4a4>
   10b5c:	ldr	r3, [r8, #32]
   10b60:	movw	r1, #3328	; 0xd00
   10b64:	movt	r1, #1
   10b68:	ldr	r2, [r8, #36]	; 0x24
   10b6c:	rev	r3, r3
   10b70:	rev	r2, r2
   10b74:	bl	10544 <fprintf@plt>
   10b78:	b	10a18 <close@plt+0x4a4>
   10b7c:	ldr	r3, [r8, #32]
   10b80:	movw	r1, #3312	; 0xcf0
   10b84:	movt	r1, #1
   10b88:	ldr	r2, [r8, #36]	; 0x24
   10b8c:	rev	r3, r3
   10b90:	rev	r2, r2
   10b94:	bl	10544 <fprintf@plt>
   10b98:	b	10a18 <close@plt+0x4a4>
   10b9c:	mov	r2, sl
   10ba0:	mov	r3, ip
   10ba4:	stm	sp, {r1, ip}
   10ba8:	movw	r1, #3212	; 0xc8c
   10bac:	movt	r1, #1
   10bb0:	bl	10544 <fprintf@plt>
   10bb4:	mov	r0, #1
   10bb8:	bl	1052c <exit@plt>
   10bbc:	mov	r3, r0
   10bc0:	mov	r2, #39	; 0x27
   10bc4:	movw	r0, #3172	; 0xc64
   10bc8:	movt	r0, #1
   10bcc:	mov	r1, #1
   10bd0:	bl	104f0 <fwrite@plt>
   10bd4:	mov	r0, #1
   10bd8:	bl	1052c <exit@plt>
   10bdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10be0:	mov	r7, r0
   10be4:	ldr	r6, [pc, #72]	; 10c34 <close@plt+0x6c0>
   10be8:	ldr	r5, [pc, #72]	; 10c38 <close@plt+0x6c4>
   10bec:	add	r6, pc, r6
   10bf0:	add	r5, pc, r5
   10bf4:	sub	r6, r6, r5
   10bf8:	mov	r8, r1
   10bfc:	mov	r9, r2
   10c00:	bl	104ac <free@plt-0x20>
   10c04:	asrs	r6, r6, #2
   10c08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c0c:	mov	r4, #0
   10c10:	add	r4, r4, #1
   10c14:	ldr	r3, [r5], #4
   10c18:	mov	r2, r9
   10c1c:	mov	r1, r8
   10c20:	mov	r0, r7
   10c24:	blx	r3
   10c28:	cmp	r6, r4
   10c2c:	bne	10c10 <close@plt+0x69c>
   10c30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c34:	andeq	r0, r1, r0, lsr #6
   10c38:	andeq	r0, r1, r8, lsl r3
   10c3c:	bx	lr

Disassembly of section .fini:

00010c40 <.fini>:
   10c40:	push	{r3, lr}
   10c44:	pop	{r3, pc}
