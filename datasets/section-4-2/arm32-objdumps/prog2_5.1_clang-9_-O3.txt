
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010b50 <.init>:
   10b50:	push	{r3, lr}
   10b54:	bl	10c30 <_start@@Base+0x3c>
   10b58:	pop	{r3, pc}

Disassembly of section .plt:

00010b5c <calloc@plt-0x14>:
   10b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b60:	ldr	lr, [pc, #4]	; 10b6c <calloc@plt-0x4>
   10b64:	add	lr, pc, lr
   10b68:	ldr	pc, [lr, #8]!
   10b6c:	muleq	r1, r4, r4

00010b70 <calloc@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1172]!	; 0x494

00010b7c <printf@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1164]!	; 0x48c

00010b88 <free@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1156]!	; 0x484

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1148]!	; 0x47c

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1140]!	; 0x474

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1124]!	; 0x464

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1116]!	; 0x45c

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1108]!	; 0x454

00010bdc <putchar@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1100]!	; 0x44c

00010be8 <abort@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1092]!	; 0x444

Disassembly of section .text:

00010bf4 <_start@@Base>:
   10bf4:	mov	fp, #0
   10bf8:	mov	lr, #0
   10bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   10c00:	mov	r2, sp
   10c04:	push	{r2}		; (str r2, [sp, #-4]!)
   10c08:	push	{r0}		; (str r0, [sp, #-4]!)
   10c0c:	ldr	ip, [pc, #16]	; 10c24 <_start@@Base+0x30>
   10c10:	push	{ip}		; (str ip, [sp, #-4]!)
   10c14:	ldr	r0, [pc, #12]	; 10c28 <_start@@Base+0x34>
   10c18:	ldr	r3, [pc, #12]	; 10c2c <_start@@Base+0x38>
   10c1c:	bl	10bb8 <__libc_start_main@plt>
   10c20:	bl	10be8 <abort@plt>
   10c24:	andeq	r1, r1, r4, ror #21
   10c28:	andeq	r0, r1, r4, ror #25
   10c2c:	andeq	r1, r1, r4, lsl #21
   10c30:	ldr	r3, [pc, #20]	; 10c4c <_start@@Base+0x58>
   10c34:	ldr	r2, [pc, #20]	; 10c50 <_start@@Base+0x5c>
   10c38:	add	r3, pc, r3
   10c3c:	ldr	r2, [r3, r2]
   10c40:	cmp	r2, #0
   10c44:	bxeq	lr
   10c48:	b	10bc4 <__gmon_start__@plt>
   10c4c:	andeq	r1, r1, r0, asr #7
   10c50:	andeq	r0, r0, r8, lsr r0
   10c54:	ldr	r0, [pc, #24]	; 10c74 <_start@@Base+0x80>
   10c58:	ldr	r3, [pc, #24]	; 10c78 <_start@@Base+0x84>
   10c5c:	cmp	r3, r0
   10c60:	bxeq	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x88>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r2, r2, r4, asr #32
   10c78:	andeq	r2, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r0, [pc, #36]	; 10cac <_start@@Base+0xb8>
   10c84:	ldr	r1, [pc, #36]	; 10cb0 <_start@@Base+0xbc>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc0>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r2, r2, r4, asr #32
   10cb0:	andeq	r2, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xe8>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c54 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r2, r2, r4, asr #32
   10ce0:	b	10c80 <_start@@Base+0x8c>

00010ce4 <main@@Base>:
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #4
   10cf0:	vpush	{d8}
   10cf4:	sub	sp, sp, #40	; 0x28
   10cf8:	mov	r0, #4
   10cfc:	mov	r1, #3
   10d00:	bl	113f4 <armazem_novo@@Base>
   10d04:	mov	r4, r0
   10d08:	movw	r0, #7125	; 0x1bd5
   10d0c:	movt	r0, #1
   10d10:	bl	10ba0 <puts@plt>
   10d14:	vldr	s0, [pc, #312]	; 10e54 <main@@Base+0x170>
   10d18:	movw	r0, #6900	; 0x1af4
   10d1c:	movt	r0, #1
   10d20:	bl	11624 <contentor_novo@@Base>
   10d24:	vldr	s0, [pc, #300]	; 10e58 <main@@Base+0x174>
   10d28:	mov	r8, r0
   10d2c:	movw	r0, #6907	; 0x1afb
   10d30:	movt	r0, #1
   10d34:	bl	11624 <contentor_novo@@Base>
   10d38:	vldr	s0, [pc, #284]	; 10e5c <main@@Base+0x178>
   10d3c:	mov	sl, r0
   10d40:	movw	r0, #6910	; 0x1afe
   10d44:	movt	r0, #1
   10d48:	bl	11624 <contentor_novo@@Base>
   10d4c:	vldr	s0, [pc, #268]	; 10e60 <main@@Base+0x17c>
   10d50:	str	r0, [sp, #24]
   10d54:	movw	r0, #6917	; 0x1b05
   10d58:	movt	r0, #1
   10d5c:	bl	11624 <contentor_novo@@Base>
   10d60:	vldr	s16, [pc, #252]	; 10e64 <main@@Base+0x180>
   10d64:	mov	r5, r0
   10d68:	movw	r0, #6923	; 0x1b0b
   10d6c:	movt	r0, #1
   10d70:	vmov.f32	s0, s16
   10d74:	bl	11624 <contentor_novo@@Base>
   10d78:	vldr	s0, [pc, #232]	; 10e68 <main@@Base+0x184>
   10d7c:	str	r0, [sp, #8]
   10d80:	movw	r0, #6929	; 0x1b11
   10d84:	movt	r0, #1
   10d88:	bl	11624 <contentor_novo@@Base>
   10d8c:	vldr	s0, [pc, #216]	; 10e6c <main@@Base+0x188>
   10d90:	str	r0, [sp, #16]
   10d94:	movw	r0, #6937	; 0x1b19
   10d98:	movt	r0, #1
   10d9c:	bl	11624 <contentor_novo@@Base>
   10da0:	vldr	s0, [pc, #200]	; 10e70 <main@@Base+0x18c>
   10da4:	str	r0, [sp, #20]
   10da8:	movw	r0, #6947	; 0x1b23
   10dac:	movt	r0, #1
   10db0:	bl	11624 <contentor_novo@@Base>
   10db4:	str	r0, [sp, #12]
   10db8:	movw	r0, #6954	; 0x1b2a
   10dbc:	vmov.f32	s0, s16
   10dc0:	movt	r0, #1
   10dc4:	bl	11624 <contentor_novo@@Base>
   10dc8:	vldr	s0, [pc, #164]	; 10e74 <main@@Base+0x190>
   10dcc:	mov	r9, r0
   10dd0:	movw	r0, #6966	; 0x1b36
   10dd4:	movt	r0, #1
   10dd8:	bl	11624 <contentor_novo@@Base>
   10ddc:	vldr	s0, [pc, #148]	; 10e78 <main@@Base+0x194>
   10de0:	mov	r7, r0
   10de4:	movw	r0, #6974	; 0x1b3e
   10de8:	movt	r0, #1
   10dec:	bl	11624 <contentor_novo@@Base>
   10df0:	vldr	s0, [pc, #132]	; 10e7c <main@@Base+0x198>
   10df4:	str	r0, [sp, #28]
   10df8:	movw	r0, #6983	; 0x1b47
   10dfc:	movt	r0, #1
   10e00:	bl	11624 <contentor_novo@@Base>
   10e04:	vldr	s0, [pc, #116]	; 10e80 <main@@Base+0x19c>
   10e08:	str	r0, [sp, #32]
   10e0c:	movw	r0, #6989	; 0x1b4d
   10e10:	movt	r0, #1
   10e14:	bl	11624 <contentor_novo@@Base>
   10e18:	str	r0, [sp, #36]	; 0x24
   10e1c:	movw	r0, #7144	; 0x1be8
   10e20:	movt	r0, #1
   10e24:	bl	10ba0 <puts@plt>
   10e28:	mov	r0, r4
   10e2c:	bl	1129c <imprimeArmazem@@Base>
   10e30:	movw	r0, #7171	; 0x1c03
   10e34:	movt	r0, #1
   10e38:	bl	10ba0 <puts@plt>
   10e3c:	mov	r0, r4
   10e40:	mov	r1, r8
   10e44:	bl	114bc <armazenar_contentor@@Base>
   10e48:	cmp	r0, #0
   10e4c:	beq	10e94 <main@@Base+0x1b0>
   10e50:	b	10e84 <main@@Base+0x1a0>
   10e54:	cmnmi	r6, #0
   10e58:	cmnmi	sl, #0
   10e5c:	strmi	r8, [r4], #-0
   10e60:	ldrtmi	r8, [r1], #-0
   10e64:			; <UNDEFINED> instruction: 0x43be0000
   10e68:	bicmi	r0, r3, #0
   10e6c:	sbcmi	r0, r8, #0
   10e70:	adcmi	r0, r0, #0
   10e74:	tstmi	r6, #0
   10e78:	orrmi	r0, r7, #0
   10e7c:	bicsmi	r0, r7, #0
   10e80:	movtmi	r0, #32768	; 0x8000
   10e84:	ldr	r1, [r8]
   10e88:	movw	r0, #6997	; 0x1b55
   10e8c:	movt	r0, #1
   10e90:	bl	10b7c <printf@plt>
   10e94:	mov	r0, r4
   10e98:	mov	r1, sl
   10e9c:	bl	114bc <armazenar_contentor@@Base>
   10ea0:	cmp	r0, #0
   10ea4:	beq	10eb8 <main@@Base+0x1d4>
   10ea8:	ldr	r1, [sl]
   10eac:	movw	r0, #6997	; 0x1b55
   10eb0:	movt	r0, #1
   10eb4:	bl	10b7c <printf@plt>
   10eb8:	ldr	r8, [sp, #24]
   10ebc:	mov	r0, r4
   10ec0:	mov	r1, r8
   10ec4:	bl	114bc <armazenar_contentor@@Base>
   10ec8:	cmp	r0, #0
   10ecc:	str	r7, [sp, #4]
   10ed0:	beq	10ee4 <main@@Base+0x200>
   10ed4:	ldr	r1, [r8]
   10ed8:	movw	r0, #6997	; 0x1b55
   10edc:	movt	r0, #1
   10ee0:	bl	10b7c <printf@plt>
   10ee4:	mov	r0, r4
   10ee8:	mov	r1, r5
   10eec:	bl	114bc <armazenar_contentor@@Base>
   10ef0:	ldr	r7, [sp, #12]
   10ef4:	cmp	r0, #0
   10ef8:	beq	10f0c <main@@Base+0x228>
   10efc:	ldr	r1, [r5]
   10f00:	movw	r0, #6997	; 0x1b55
   10f04:	movt	r0, #1
   10f08:	bl	10b7c <printf@plt>
   10f0c:	movw	r0, #7204	; 0x1c24
   10f10:	movt	r0, #1
   10f14:	bl	10ba0 <puts@plt>
   10f18:	mov	r0, r4
   10f1c:	bl	1129c <imprimeArmazem@@Base>
   10f20:	movw	r0, #7231	; 0x1c3f
   10f24:	movt	r0, #1
   10f28:	bl	10ba0 <puts@plt>
   10f2c:	ldr	r5, [sp, #8]
   10f30:	mov	r0, r4
   10f34:	mov	r1, r5
   10f38:	bl	114bc <armazenar_contentor@@Base>
   10f3c:	ldr	r6, [sp, #20]
   10f40:	cmp	r0, #0
   10f44:	beq	10f58 <main@@Base+0x274>
   10f48:	ldr	r1, [r5]
   10f4c:	movw	r0, #6997	; 0x1b55
   10f50:	movt	r0, #1
   10f54:	bl	10b7c <printf@plt>
   10f58:	ldr	sl, [sp, #16]
   10f5c:	mov	r0, r4
   10f60:	mov	r1, sl
   10f64:	bl	114bc <armazenar_contentor@@Base>
   10f68:	ldr	r5, [sp, #32]
   10f6c:	cmp	r0, #0
   10f70:	beq	10f84 <main@@Base+0x2a0>
   10f74:	ldr	r1, [sl]
   10f78:	movw	r0, #6997	; 0x1b55
   10f7c:	movt	r0, #1
   10f80:	bl	10b7c <printf@plt>
   10f84:	mov	r0, r4
   10f88:	mov	r1, r6
   10f8c:	bl	114bc <armazenar_contentor@@Base>
   10f90:	cmp	r0, #0
   10f94:	mov	r0, r6
   10f98:	ldr	r6, [sp, #28]
   10f9c:	beq	10fb0 <main@@Base+0x2cc>
   10fa0:	ldr	r1, [r0]
   10fa4:	movw	r0, #6997	; 0x1b55
   10fa8:	movt	r0, #1
   10fac:	bl	10b7c <printf@plt>
   10fb0:	mov	r0, r4
   10fb4:	mov	r1, r7
   10fb8:	bl	114bc <armazenar_contentor@@Base>
   10fbc:	cmp	r0, #0
   10fc0:	beq	10fd4 <main@@Base+0x2f0>
   10fc4:	ldr	r1, [r7]
   10fc8:	movw	r0, #6997	; 0x1b55
   10fcc:	movt	r0, #1
   10fd0:	bl	10b7c <printf@plt>
   10fd4:	mov	r0, r4
   10fd8:	mov	r1, r9
   10fdc:	bl	114bc <armazenar_contentor@@Base>
   10fe0:	cmp	r0, #0
   10fe4:	beq	10ff8 <main@@Base+0x314>
   10fe8:	ldr	r1, [r9]
   10fec:	movw	r0, #6997	; 0x1b55
   10ff0:	movt	r0, #1
   10ff4:	bl	10b7c <printf@plt>
   10ff8:	ldr	r7, [sp, #4]
   10ffc:	mov	r0, r4
   11000:	mov	r1, r7
   11004:	bl	114bc <armazenar_contentor@@Base>
   11008:	cmp	r0, #0
   1100c:	beq	11020 <main@@Base+0x33c>
   11010:	ldr	r1, [r7]
   11014:	movw	r0, #6997	; 0x1b55
   11018:	movt	r0, #1
   1101c:	bl	10b7c <printf@plt>
   11020:	mov	r0, r4
   11024:	mov	r1, r6
   11028:	bl	114bc <armazenar_contentor@@Base>
   1102c:	cmp	r0, #0
   11030:	beq	11044 <main@@Base+0x360>
   11034:	ldr	r1, [r6]
   11038:	movw	r0, #6997	; 0x1b55
   1103c:	movt	r0, #1
   11040:	bl	10b7c <printf@plt>
   11044:	mov	r0, r4
   11048:	mov	r1, r5
   1104c:	bl	114bc <armazenar_contentor@@Base>
   11050:	cmp	r0, #0
   11054:	beq	11068 <main@@Base+0x384>
   11058:	ldr	r1, [r5]
   1105c:	movw	r0, #6997	; 0x1b55
   11060:	movt	r0, #1
   11064:	bl	10b7c <printf@plt>
   11068:	movw	r0, #7264	; 0x1c60
   1106c:	movt	r0, #1
   11070:	bl	10ba0 <puts@plt>
   11074:	mov	r0, r4
   11078:	bl	1129c <imprimeArmazem@@Base>
   1107c:	mov	r0, r4
   11080:	bl	11450 <armazem_cheio@@Base>
   11084:	movw	r2, #7291	; 0x1c7b
   11088:	movw	r1, #7529	; 0x1d69
   1108c:	cmp	r0, #0
   11090:	movt	r2, #1
   11094:	movt	r1, #1
   11098:	moveq	r1, r2
   1109c:	mov	r0, r1
   110a0:	bl	10ba0 <puts@plt>
   110a4:	ldr	r1, [sp, #36]	; 0x24
   110a8:	mov	r0, r4
   110ac:	bl	114bc <armazenar_contentor@@Base>
   110b0:	cmp	r0, #0
   110b4:	beq	110c8 <main@@Base+0x3e4>
   110b8:	ldr	r1, [r8]
   110bc:	movw	r0, #7035	; 0x1b7b
   110c0:	movt	r0, #1
   110c4:	bl	10b7c <printf@plt>
   110c8:	movw	r0, #7328	; 0x1ca0
   110cc:	movt	r0, #1
   110d0:	bl	10ba0 <puts@plt>
   110d4:	mov	r0, r4
   110d8:	bl	11584 <expedir_contentor@@Base>
   110dc:	movw	r5, #7499	; 0x1d4b
   110e0:	mov	r6, r0
   110e4:	movt	r5, #1
   110e8:	mov	r0, r5
   110ec:	bl	10ba0 <puts@plt>
   110f0:	mov	r0, r6
   110f4:	bl	11690 <contentor_imprime@@Base>
   110f8:	mov	r0, r4
   110fc:	bl	11584 <expedir_contentor@@Base>
   11100:	mov	r6, r0
   11104:	mov	r0, r5
   11108:	bl	10ba0 <puts@plt>
   1110c:	mov	r0, r6
   11110:	bl	11690 <contentor_imprime@@Base>
   11114:	mov	r0, r4
   11118:	bl	11584 <expedir_contentor@@Base>
   1111c:	mov	r6, r0
   11120:	mov	r0, r5
   11124:	bl	10ba0 <puts@plt>
   11128:	mov	r0, r6
   1112c:	bl	11690 <contentor_imprime@@Base>
   11130:	mov	r0, r4
   11134:	bl	11584 <expedir_contentor@@Base>
   11138:	mov	r6, r0
   1113c:	mov	r0, r5
   11140:	bl	10ba0 <puts@plt>
   11144:	mov	r0, r6
   11148:	bl	11690 <contentor_imprime@@Base>
   1114c:	mov	r0, r4
   11150:	bl	11584 <expedir_contentor@@Base>
   11154:	mov	r6, r0
   11158:	mov	r0, r5
   1115c:	bl	10ba0 <puts@plt>
   11160:	mov	r0, r6
   11164:	bl	11690 <contentor_imprime@@Base>
   11168:	mov	r0, r4
   1116c:	bl	11584 <expedir_contentor@@Base>
   11170:	mov	r6, r0
   11174:	mov	r0, r5
   11178:	bl	10ba0 <puts@plt>
   1117c:	mov	r0, r6
   11180:	bl	11690 <contentor_imprime@@Base>
   11184:	mov	r0, r4
   11188:	bl	11584 <expedir_contentor@@Base>
   1118c:	mov	r6, r0
   11190:	mov	r0, r5
   11194:	bl	10ba0 <puts@plt>
   11198:	mov	r0, r6
   1119c:	bl	11690 <contentor_imprime@@Base>
   111a0:	mov	r0, r4
   111a4:	bl	11584 <expedir_contentor@@Base>
   111a8:	mov	r6, r0
   111ac:	mov	r0, r5
   111b0:	bl	10ba0 <puts@plt>
   111b4:	mov	r0, r6
   111b8:	bl	11690 <contentor_imprime@@Base>
   111bc:	movw	r0, #7361	; 0x1cc1
   111c0:	movt	r0, #1
   111c4:	bl	10ba0 <puts@plt>
   111c8:	mov	r0, r4
   111cc:	bl	1129c <imprimeArmazem@@Base>
   111d0:	movw	r0, #7388	; 0x1cdc
   111d4:	movt	r0, #1
   111d8:	bl	10ba0 <puts@plt>
   111dc:	mov	r0, r4
   111e0:	bl	11584 <expedir_contentor@@Base>
   111e4:	mov	r6, r0
   111e8:	mov	r0, r5
   111ec:	bl	10ba0 <puts@plt>
   111f0:	mov	r0, r6
   111f4:	bl	11690 <contentor_imprime@@Base>
   111f8:	mov	r0, r4
   111fc:	bl	11584 <expedir_contentor@@Base>
   11200:	mov	r6, r0
   11204:	mov	r0, r5
   11208:	bl	10ba0 <puts@plt>
   1120c:	mov	r0, r6
   11210:	bl	11690 <contentor_imprime@@Base>
   11214:	mov	r0, r4
   11218:	bl	11584 <expedir_contentor@@Base>
   1121c:	mov	r6, r0
   11220:	mov	r0, r5
   11224:	bl	10ba0 <puts@plt>
   11228:	mov	r0, r6
   1122c:	bl	11690 <contentor_imprime@@Base>
   11230:	mov	r0, r4
   11234:	bl	11584 <expedir_contentor@@Base>
   11238:	mov	r6, r0
   1123c:	mov	r0, r5
   11240:	bl	10ba0 <puts@plt>
   11244:	mov	r0, r6
   11248:	bl	11690 <contentor_imprime@@Base>
   1124c:	movw	r0, #7421	; 0x1cfd
   11250:	movt	r0, #1
   11254:	bl	10ba0 <puts@plt>
   11258:	mov	r0, r4
   1125c:	bl	1129c <imprimeArmazem@@Base>
   11260:	mov	r0, r4
   11264:	bl	11428 <armazem_vazio@@Base>
   11268:	movw	r2, #7448	; 0x1d18
   1126c:	movw	r1, #7485	; 0x1d3d
   11270:	cmp	r0, #0
   11274:	movt	r2, #1
   11278:	movt	r1, #1
   1127c:	moveq	r1, r2
   11280:	mov	r0, r1
   11284:	bl	10ba0 <puts@plt>
   11288:	mov	r0, #0
   1128c:	sub	sp, fp, #40	; 0x28
   11290:	vpop	{d8}
   11294:	add	sp, sp, #4
   11298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001129c <imprimeArmazem@@Base>:
   1129c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a0:	add	fp, sp, #28
   112a4:	sub	sp, sp, #4
   112a8:	cmp	r0, #0
   112ac:	beq	11370 <imprimeArmazem@@Base+0xd4>
   112b0:	ldr	r5, [r0, #8]
   112b4:	mov	r4, r0
   112b8:	cmp	r5, #0
   112bc:	beq	11370 <imprimeArmazem@@Base+0xd4>
   112c0:	ldr	r9, [r5, #4]
   112c4:	mov	r1, #4
   112c8:	mov	r0, r9
   112cc:	bl	10b70 <calloc@plt>
   112d0:	str	r0, [sp]
   112d4:	ldr	r0, [r5]
   112d8:	cmp	r0, #0
   112dc:	beq	112fc <imprimeArmazem@@Base+0x60>
   112e0:	ldr	r1, [sp]
   112e4:	ldr	r2, [r0]
   112e8:	ldr	r2, [r2, #4]
   112ec:	str	r2, [r1], #4
   112f0:	ldr	r0, [r0, #4]
   112f4:	cmp	r0, #0
   112f8:	bne	112e4 <imprimeArmazem@@Base+0x48>
   112fc:	mov	r0, #10
   11300:	bl	10bdc <putchar@plt>
   11304:	ldr	r5, [r4, #4]
   11308:	cmp	r5, #1
   1130c:	blt	1139c <imprimeArmazem@@Base+0x100>
   11310:	cmp	r9, #0
   11314:	ble	11378 <imprimeArmazem@@Base+0xdc>
   11318:	movw	r7, #7115	; 0x1bcb
   1131c:	movw	r6, #7110	; 0x1bc6
   11320:	movt	r7, #1
   11324:	movt	r6, #1
   11328:	movw	r0, #7117	; 0x1bcd
   1132c:	movt	r0, #1
   11330:	bl	10b7c <printf@plt>
   11334:	ldr	r8, [sp]
   11338:	mov	sl, r9
   1133c:	ldr	r0, [r8], #4
   11340:	cmp	r0, r5
   11344:	mov	r0, r6
   11348:	movlt	r0, r7
   1134c:	bl	10b7c <printf@plt>
   11350:	subs	sl, sl, #1
   11354:	bne	1133c <imprimeArmazem@@Base+0xa0>
   11358:	mov	r0, #10
   1135c:	bl	10bdc <putchar@plt>
   11360:	sub	r5, r5, #1
   11364:	cmp	r5, #0
   11368:	bgt	11328 <imprimeArmazem@@Base+0x8c>
   1136c:	b	1139c <imprimeArmazem@@Base+0x100>
   11370:	sub	sp, fp, #28
   11374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11378:	movw	r6, #7117	; 0x1bcd
   1137c:	movt	r6, #1
   11380:	mov	r0, r6
   11384:	bl	10b7c <printf@plt>
   11388:	mov	r0, #10
   1138c:	bl	10bdc <putchar@plt>
   11390:	sub	r5, r5, #1
   11394:	cmp	r5, #0
   11398:	bgt	11380 <imprimeArmazem@@Base+0xe4>
   1139c:	movw	r0, #7122	; 0x1bd2
   113a0:	movt	r0, #1
   113a4:	bl	10b7c <printf@plt>
   113a8:	ldr	r0, [r4]
   113ac:	cmp	r0, #1
   113b0:	blt	113d8 <imprimeArmazem@@Base+0x13c>
   113b4:	movw	r6, #7120	; 0x1bd0
   113b8:	mov	r5, #0
   113bc:	movt	r6, #1
   113c0:	mov	r0, r6
   113c4:	bl	10b7c <printf@plt>
   113c8:	ldr	r0, [r4]
   113cc:	add	r5, r5, #1
   113d0:	cmp	r5, r0
   113d4:	blt	113c0 <imprimeArmazem@@Base+0x124>
   113d8:	movw	r0, #7033	; 0x1b79
   113dc:	movt	r0, #1
   113e0:	bl	10ba0 <puts@plt>
   113e4:	ldr	r0, [sp]
   113e8:	sub	sp, fp, #28
   113ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113f0:	b	10b88 <free@plt>

000113f4 <armazem_novo@@Base>:
   113f4:	push	{r4, r5, r6, sl, fp, lr}
   113f8:	add	fp, sp, #16
   113fc:	mov	r5, r0
   11400:	mov	r0, #12
   11404:	mov	r4, r1
   11408:	bl	10bac <malloc@plt>
   1140c:	str	r5, [r0]
   11410:	mov	r6, r0
   11414:	str	r4, [r0, #4]
   11418:	bl	1170c <fila_nova@@Base>
   1141c:	str	r0, [r6, #8]
   11420:	mov	r0, r6
   11424:	pop	{r4, r5, r6, sl, fp, pc}

00011428 <armazem_vazio@@Base>:
   11428:	cmp	r0, #0
   1142c:	moveq	r0, #1
   11430:	bxeq	lr
   11434:	push	{fp, lr}
   11438:	mov	fp, sp
   1143c:	ldr	r0, [r0, #8]
   11440:	bl	11784 <fila_tamanho@@Base>
   11444:	clz	r0, r0
   11448:	lsr	r0, r0, #5
   1144c:	pop	{fp, pc}

00011450 <armazem_cheio@@Base>:
   11450:	push	{r4, r5, fp, lr}
   11454:	add	fp, sp, #8
   11458:	mov	r5, #0
   1145c:	cmp	r0, #0
   11460:	beq	114a8 <armazem_cheio@@Base+0x58>
   11464:	mov	r4, r0
   11468:	ldr	r0, [r0, #8]
   1146c:	bl	11784 <fila_tamanho@@Base>
   11470:	cmp	r0, #0
   11474:	beq	114a8 <armazem_cheio@@Base+0x58>
   11478:	ldr	r0, [r4, #8]
   1147c:	bl	11784 <fila_tamanho@@Base>
   11480:	ldr	r1, [r4]
   11484:	cmp	r0, r1
   11488:	bne	114b0 <armazem_cheio@@Base+0x60>
   1148c:	ldr	r0, [r4, #8]
   11490:	bl	117bc <fila_back@@Base>
   11494:	ldr	r1, [r4, #4]
   11498:	ldr	r0, [r0, #4]
   1149c:	mov	r5, #1
   114a0:	cmp	r0, r1
   114a4:	movne	r5, #0
   114a8:	mov	r0, r5
   114ac:	pop	{r4, r5, fp, pc}
   114b0:	mov	r5, #0
   114b4:	mov	r0, r5
   114b8:	pop	{r4, r5, fp, pc}

000114bc <armazenar_contentor@@Base>:
   114bc:	push	{r4, r5, r6, r7, fp, lr}
   114c0:	add	fp, sp, #16
   114c4:	mov	r4, r1
   114c8:	mov	r5, r0
   114cc:	bl	11918 <pilha_nova@@Base>
   114d0:	cmp	r5, #0
   114d4:	mov	r7, #0
   114d8:	cmpne	r4, #0
   114dc:	beq	1157c <armazenar_contentor@@Base+0xc0>
   114e0:	mov	r6, r0
   114e4:	ldr	r0, [r5, #8]
   114e8:	bl	11784 <fila_tamanho@@Base>
   114ec:	cmp	r0, #0
   114f0:	beq	11520 <armazenar_contentor@@Base+0x64>
   114f4:	ldr	r0, [r5, #8]
   114f8:	bl	11784 <fila_tamanho@@Base>
   114fc:	ldr	r1, [r5]
   11500:	cmp	r0, r1
   11504:	bne	11520 <armazenar_contentor@@Base+0x64>
   11508:	ldr	r0, [r5, #8]
   1150c:	bl	117bc <fila_back@@Base>
   11510:	ldr	r1, [r5, #4]
   11514:	ldr	r0, [r0, #4]
   11518:	cmp	r0, r1
   1151c:	beq	1157c <armazenar_contentor@@Base+0xc0>
   11520:	ldr	r0, [r5, #8]
   11524:	bl	11784 <fila_tamanho@@Base>
   11528:	cmp	r0, #0
   1152c:	bne	11544 <armazenar_contentor@@Base+0x88>
   11530:	ldr	r7, [r5, #8]
   11534:	bl	11918 <pilha_nova@@Base>
   11538:	mov	r1, r0
   1153c:	mov	r0, r7
   11540:	bl	117f4 <fila_push@@Base>
   11544:	ldr	r0, [r5, #8]
   11548:	bl	117bc <fila_back@@Base>
   1154c:	ldr	r1, [r5, #4]
   11550:	ldr	r0, [r0, #4]
   11554:	cmp	r0, r1
   11558:	bne	11568 <armazenar_contentor@@Base+0xac>
   1155c:	ldr	r0, [r5, #8]
   11560:	mov	r1, r6
   11564:	bl	117f4 <fila_push@@Base>
   11568:	ldr	r0, [r5, #8]
   1156c:	bl	117bc <fila_back@@Base>
   11570:	mov	r1, r4
   11574:	bl	119c8 <pilha_push@@Base>
   11578:	mov	r7, #1
   1157c:	mov	r0, r7
   11580:	pop	{r4, r5, r6, r7, fp, pc}

00011584 <expedir_contentor@@Base>:
   11584:	push	{r4, r5, fp, lr}
   11588:	add	fp, sp, #8
   1158c:	mov	r4, #0
   11590:	cmp	r0, #0
   11594:	beq	1161c <expedir_contentor@@Base+0x98>
   11598:	mov	r5, r0
   1159c:	ldr	r0, [r0, #8]
   115a0:	bl	11784 <fila_tamanho@@Base>
   115a4:	cmp	r0, #0
   115a8:	beq	1161c <expedir_contentor@@Base+0x98>
   115ac:	ldr	r0, [r5, #8]
   115b0:	bl	11794 <fila_front@@Base>
   115b4:	bl	119a0 <pilha_top@@Base>
   115b8:	cmp	r0, #0
   115bc:	beq	1161c <expedir_contentor@@Base+0x98>
   115c0:	ldr	r0, [r5, #8]
   115c4:	bl	11794 <fila_front@@Base>
   115c8:	bl	119a0 <pilha_top@@Base>
   115cc:	ldr	r4, [r0]
   115d0:	ldr	r0, [r5, #8]
   115d4:	bl	11794 <fila_front@@Base>
   115d8:	bl	119a0 <pilha_top@@Base>
   115dc:	vldr	s0, [r0, #4]
   115e0:	mov	r0, r4
   115e4:	bl	11624 <contentor_novo@@Base>
   115e8:	mov	r4, r0
   115ec:	ldr	r0, [r5, #8]
   115f0:	bl	11794 <fila_front@@Base>
   115f4:	mov	r1, r0
   115f8:	ldr	r0, [r5, #8]
   115fc:	ldr	r1, [r1, #4]
   11600:	cmp	r1, #1
   11604:	bgt	11614 <expedir_contentor@@Base+0x90>
   11608:	bl	11870 <fila_pop@@Base>
   1160c:	mov	r0, r4
   11610:	pop	{r4, r5, fp, pc}
   11614:	bl	11794 <fila_front@@Base>
   11618:	bl	11a3c <pilha_pop@@Base>
   1161c:	mov	r0, r4
   11620:	pop	{r4, r5, fp, pc}

00011624 <contentor_novo@@Base>:
   11624:	push	{r4, r5, fp, lr}
   11628:	add	fp, sp, #8
   1162c:	vpush	{d8}
   11630:	mov	r4, r0
   11634:	mov	r0, #8
   11638:	vmov.f32	s16, s0
   1163c:	bl	10bac <malloc@plt>
   11640:	mov	r5, r0
   11644:	mov	r0, r4
   11648:	bl	10bd0 <strlen@plt>
   1164c:	add	r0, r0, #1
   11650:	bl	10bac <malloc@plt>
   11654:	mov	r1, r4
   11658:	str	r0, [r5]
   1165c:	bl	10b94 <strcpy@plt>
   11660:	vstr	s16, [r5, #4]
   11664:	mov	r0, r5
   11668:	vpop	{d8}
   1166c:	pop	{r4, r5, fp, pc}

00011670 <contentor_apaga@@Base>:
   11670:	push	{r4, sl, fp, lr}
   11674:	add	fp, sp, #8
   11678:	mov	r4, r0
   1167c:	ldr	r0, [r0]
   11680:	bl	10b88 <free@plt>
   11684:	mov	r0, r4
   11688:	pop	{r4, sl, fp, lr}
   1168c:	b	10b88 <free@plt>

00011690 <contentor_imprime@@Base>:
   11690:	cmp	r0, #0
   11694:	beq	116b4 <contentor_imprime@@Base+0x24>
   11698:	vldr	s0, [r0, #4]
   1169c:	ldr	r1, [r0]
   116a0:	movw	r0, #7543	; 0x1d77
   116a4:	movt	r0, #1
   116a8:	vcvt.f64.f32	d16, s0
   116ac:	vmov	r2, r3, d16
   116b0:	b	10b7c <printf@plt>
   116b4:	movw	r0, #7586	; 0x1da2
   116b8:	movt	r0, #1
   116bc:	b	10ba0 <puts@plt>

000116c0 <fila_novo_elemento@@Base>:
   116c0:	push	{r4, r5, fp, lr}
   116c4:	add	fp, sp, #8
   116c8:	mov	r5, r0
   116cc:	mov	r0, #8
   116d0:	bl	10bac <malloc@plt>
   116d4:	mov	r4, #0
   116d8:	cmp	r0, #0
   116dc:	beq	116f8 <fila_novo_elemento@@Base+0x38>
   116e0:	cmp	r5, #0
   116e4:	str	r5, [r0]
   116e8:	beq	11700 <fila_novo_elemento@@Base+0x40>
   116ec:	mov	r1, #0
   116f0:	mov	r4, r0
   116f4:	str	r1, [r0, #4]
   116f8:	mov	r0, r4
   116fc:	pop	{r4, r5, fp, pc}
   11700:	bl	10b88 <free@plt>
   11704:	mov	r0, r4
   11708:	pop	{r4, r5, fp, pc}

0001170c <fila_nova@@Base>:
   1170c:	push	{fp, lr}
   11710:	mov	fp, sp
   11714:	mov	r0, #8
   11718:	bl	10bac <malloc@plt>
   1171c:	cmp	r0, #0
   11720:	moveq	r0, #0
   11724:	movne	r1, #0
   11728:	strne	r1, [r0]
   1172c:	strne	r1, [r0, #4]
   11730:	pop	{fp, pc}

00011734 <fila_apaga@@Base>:
   11734:	cmp	r0, #0
   11738:	bxeq	lr
   1173c:	push	{r4, r5, fp, lr}
   11740:	add	fp, sp, #8
   11744:	mov	r4, r0
   11748:	ldr	r5, [r4]
   1174c:	cmp	r5, #0
   11750:	beq	11778 <fila_apaga@@Base+0x44>
   11754:	ldr	r0, [r5, #4]
   11758:	str	r0, [r4]
   1175c:	ldr	r0, [r5]
   11760:	bl	11940 <pilha_apaga@@Base>
   11764:	mov	r0, r5
   11768:	bl	10b88 <free@plt>
   1176c:	ldr	r5, [r4]
   11770:	cmp	r5, #0
   11774:	bne	11754 <fila_apaga@@Base+0x20>
   11778:	mov	r0, r4
   1177c:	pop	{r4, r5, fp, lr}
   11780:	b	10b88 <free@plt>

00011784 <fila_tamanho@@Base>:
   11784:	cmp	r0, #0
   11788:	ldrne	r0, [r0, #4]
   1178c:	mvneq	r0, #0
   11790:	bx	lr

00011794 <fila_front@@Base>:
   11794:	mov	r1, r0
   11798:	mov	r0, #0
   1179c:	cmp	r1, #0
   117a0:	beq	117b8 <fila_front@@Base+0x24>
   117a4:	ldr	r2, [r1, #4]
   117a8:	cmp	r2, #0
   117ac:	bxeq	lr
   117b0:	ldr	r0, [r1]
   117b4:	ldr	r0, [r0]
   117b8:	bx	lr

000117bc <fila_back@@Base>:
   117bc:	mov	r1, r0
   117c0:	mov	r0, #0
   117c4:	cmp	r1, #0
   117c8:	beq	117f0 <fila_back@@Base+0x34>
   117cc:	ldr	r2, [r1, #4]
   117d0:	cmp	r2, #0
   117d4:	bxeq	lr
   117d8:	ldr	r0, [r1]
   117dc:	mov	r1, r0
   117e0:	ldr	r0, [r0, #4]
   117e4:	cmp	r0, #0
   117e8:	bne	117dc <fila_back@@Base+0x20>
   117ec:	ldr	r0, [r1]
   117f0:	bx	lr

000117f4 <fila_push@@Base>:
   117f4:	push	{r4, r5, r6, sl, fp, lr}
   117f8:	add	fp, sp, #16
   117fc:	cmp	r0, #0
   11800:	beq	1185c <fila_push@@Base+0x68>
   11804:	ldr	r6, [r0]
   11808:	mov	r4, r0
   1180c:	mov	r0, #8
   11810:	mov	r5, r1
   11814:	bl	10bac <malloc@plt>
   11818:	cmp	r0, #0
   1181c:	beq	1185c <fila_push@@Base+0x68>
   11820:	cmp	r5, #0
   11824:	str	r5, [r0]
   11828:	beq	11860 <fila_push@@Base+0x6c>
   1182c:	mov	r1, #0
   11830:	cmp	r6, #0
   11834:	str	r1, [r0, #4]
   11838:	ldr	r1, [r4, #4]
   1183c:	add	r1, r1, #1
   11840:	str	r1, [r4, #4]
   11844:	beq	11868 <fila_push@@Base+0x74>
   11848:	mov	r1, r6
   1184c:	ldr	r6, [r6, #4]
   11850:	cmp	r6, #0
   11854:	bne	11848 <fila_push@@Base+0x54>
   11858:	str	r0, [r1, #4]
   1185c:	pop	{r4, r5, r6, sl, fp, pc}
   11860:	pop	{r4, r5, r6, sl, fp, lr}
   11864:	b	10b88 <free@plt>
   11868:	str	r0, [r4]
   1186c:	pop	{r4, r5, r6, sl, fp, pc}

00011870 <fila_pop@@Base>:
   11870:	push	{r4, sl, fp, lr}
   11874:	add	fp, sp, #8
   11878:	cmp	r0, #0
   1187c:	popeq	{r4, sl, fp, pc}
   11880:	ldr	r1, [r0, #4]
   11884:	cmp	r1, #0
   11888:	beq	118b4 <fila_pop@@Base+0x44>
   1188c:	sub	r1, r1, #1
   11890:	str	r1, [r0, #4]
   11894:	ldr	r4, [r0]
   11898:	ldr	r1, [r4, #4]
   1189c:	str	r1, [r0]
   118a0:	ldr	r0, [r4]
   118a4:	bl	11940 <pilha_apaga@@Base>
   118a8:	mov	r0, r4
   118ac:	pop	{r4, sl, fp, lr}
   118b0:	b	10b88 <free@plt>
   118b4:	pop	{r4, sl, fp, pc}

000118b8 <pilha_novo_elemento@@Base>:
   118b8:	push	{r4, r5, r6, sl, fp, lr}
   118bc:	add	fp, sp, #16
   118c0:	mov	r6, r0
   118c4:	mov	r0, #8
   118c8:	bl	10bac <malloc@plt>
   118cc:	mov	r4, #0
   118d0:	cmp	r0, #0
   118d4:	beq	11900 <pilha_novo_elemento@@Base+0x48>
   118d8:	vldr	s0, [r6, #4]
   118dc:	mov	r5, r0
   118e0:	ldr	r0, [r6]
   118e4:	bl	11624 <contentor_novo@@Base>
   118e8:	cmp	r0, #0
   118ec:	str	r0, [r5]
   118f0:	beq	11908 <pilha_novo_elemento@@Base+0x50>
   118f4:	mov	r0, #0
   118f8:	mov	r4, r5
   118fc:	str	r0, [r5, #4]
   11900:	mov	r0, r4
   11904:	pop	{r4, r5, r6, sl, fp, pc}
   11908:	mov	r0, r5
   1190c:	bl	10b88 <free@plt>
   11910:	mov	r0, r4
   11914:	pop	{r4, r5, r6, sl, fp, pc}

00011918 <pilha_nova@@Base>:
   11918:	push	{fp, lr}
   1191c:	mov	fp, sp
   11920:	mov	r0, #8
   11924:	bl	10bac <malloc@plt>
   11928:	cmp	r0, #0
   1192c:	moveq	r0, #0
   11930:	movne	r1, #0
   11934:	strne	r1, [r0]
   11938:	strne	r1, [r0, #4]
   1193c:	pop	{fp, pc}

00011940 <pilha_apaga@@Base>:
   11940:	cmp	r0, #0
   11944:	bxeq	lr
   11948:	push	{r4, r5, fp, lr}
   1194c:	add	fp, sp, #8
   11950:	mov	r4, r0
   11954:	ldr	r5, [r4]
   11958:	cmp	r5, #0
   1195c:	beq	11984 <pilha_apaga@@Base+0x44>
   11960:	ldr	r0, [r5, #4]
   11964:	str	r0, [r4]
   11968:	ldr	r0, [r5]
   1196c:	bl	11670 <contentor_apaga@@Base>
   11970:	mov	r0, r5
   11974:	bl	10b88 <free@plt>
   11978:	ldr	r5, [r4]
   1197c:	cmp	r5, #0
   11980:	bne	11960 <pilha_apaga@@Base+0x20>
   11984:	mov	r0, r4
   11988:	pop	{r4, r5, fp, lr}
   1198c:	b	10b88 <free@plt>

00011990 <pilha_tamanho@@Base>:
   11990:	cmp	r0, #0
   11994:	ldrne	r0, [r0, #4]
   11998:	mvneq	r0, #0
   1199c:	bx	lr

000119a0 <pilha_top@@Base>:
   119a0:	mov	r1, r0
   119a4:	mov	r0, #0
   119a8:	cmp	r1, #0
   119ac:	beq	119c4 <pilha_top@@Base+0x24>
   119b0:	ldr	r2, [r1, #4]
   119b4:	cmp	r2, #0
   119b8:	bxeq	lr
   119bc:	ldr	r0, [r1]
   119c0:	ldr	r0, [r0]
   119c4:	bx	lr

000119c8 <pilha_push@@Base>:
   119c8:	push	{r4, r5, r6, sl, fp, lr}
   119cc:	add	fp, sp, #16
   119d0:	cmp	r0, #0
   119d4:	beq	11a2c <pilha_push@@Base+0x64>
   119d8:	mov	r4, r0
   119dc:	mov	r0, #8
   119e0:	mov	r6, r1
   119e4:	bl	10bac <malloc@plt>
   119e8:	cmp	r0, #0
   119ec:	beq	11a2c <pilha_push@@Base+0x64>
   119f0:	vldr	s0, [r6, #4]
   119f4:	mov	r5, r0
   119f8:	ldr	r0, [r6]
   119fc:	bl	11624 <contentor_novo@@Base>
   11a00:	cmp	r0, #0
   11a04:	str	r0, [r5]
   11a08:	beq	11a30 <pilha_push@@Base+0x68>
   11a0c:	mov	r0, #0
   11a10:	str	r0, [r5, #4]
   11a14:	ldm	r4, {r0, r1}
   11a18:	add	r1, r1, #1
   11a1c:	str	r1, [r4, #4]
   11a20:	cmp	r0, #0
   11a24:	strne	r0, [r5, #4]
   11a28:	str	r5, [r4]
   11a2c:	pop	{r4, r5, r6, sl, fp, pc}
   11a30:	mov	r0, r5
   11a34:	pop	{r4, r5, r6, sl, fp, lr}
   11a38:	b	10b88 <free@plt>

00011a3c <pilha_pop@@Base>:
   11a3c:	push	{r4, sl, fp, lr}
   11a40:	add	fp, sp, #8
   11a44:	cmp	r0, #0
   11a48:	popeq	{r4, sl, fp, pc}
   11a4c:	ldr	r1, [r0, #4]
   11a50:	cmp	r1, #0
   11a54:	beq	11a80 <pilha_pop@@Base+0x44>
   11a58:	ldr	r4, [r0]
   11a5c:	sub	r1, r1, #1
   11a60:	ldr	r2, [r4, #4]
   11a64:	str	r2, [r0]
   11a68:	str	r1, [r0, #4]
   11a6c:	ldr	r0, [r4]
   11a70:	bl	11670 <contentor_apaga@@Base>
   11a74:	mov	r0, r4
   11a78:	pop	{r4, sl, fp, lr}
   11a7c:	b	10b88 <free@plt>
   11a80:	pop	{r4, sl, fp, pc}

00011a84 <__libc_csu_init@@Base>:
   11a84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a88:	mov	r7, r0
   11a8c:	ldr	r6, [pc, #72]	; 11adc <__libc_csu_init@@Base+0x58>
   11a90:	ldr	r5, [pc, #72]	; 11ae0 <__libc_csu_init@@Base+0x5c>
   11a94:	add	r6, pc, r6
   11a98:	add	r5, pc, r5
   11a9c:	sub	r6, r6, r5
   11aa0:	mov	r8, r1
   11aa4:	mov	r9, r2
   11aa8:	bl	10b50 <calloc@plt-0x20>
   11aac:	asrs	r6, r6, #2
   11ab0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ab4:	mov	r4, #0
   11ab8:	add	r4, r4, #1
   11abc:	ldr	r3, [r5], #4
   11ac0:	mov	r2, r9
   11ac4:	mov	r1, r8
   11ac8:	mov	r0, r7
   11acc:	blx	r3
   11ad0:	cmp	r6, r4
   11ad4:	bne	11ab8 <__libc_csu_init@@Base+0x34>
   11ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11adc:	andeq	r0, r1, r0, ror r4
   11ae0:	andeq	r0, r1, r8, ror #8

00011ae4 <__libc_csu_fini@@Base>:
   11ae4:	bx	lr

Disassembly of section .fini:

00011ae8 <.fini>:
   11ae8:	push	{r3, lr}
   11aec:	pop	{r3, pc}
