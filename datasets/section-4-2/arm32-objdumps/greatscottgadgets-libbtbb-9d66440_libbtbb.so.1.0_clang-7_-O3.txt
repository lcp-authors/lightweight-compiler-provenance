
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000044ac <.init>:
    44ac:	push	{r3, lr}
    44b0:	bl	4810 <__assert_fail@plt+0x14>
    44b4:	pop	{r3, pc}

Disassembly of section .plt:

000044b8 <calloc@plt-0x14>:
    44b8:	push	{lr}		; (str lr, [sp, #-4]!)
    44bc:	ldr	lr, [pc, #4]	; 44c8 <calloc@plt-0x4>
    44c0:	add	lr, pc, lr
    44c4:	ldr	pc, [lr, #8]!
    44c8:	andeq	r8, r2, r8, lsr fp

000044cc <calloc@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #40, 20	; 0x28000
    44d4:	ldr	pc, [ip, #2872]!	; 0xb38

000044d8 <raise@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #40, 20	; 0x28000
    44e0:	ldr	pc, [ip, #2864]!	; 0xb30

000044e4 <gen_hop_pattern@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #40, 20	; 0x28000
    44ec:	ldr	pc, [ip, #2856]!	; 0xb28

000044f0 <__cxa_finalize@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #40, 20	; 0x28000
    44f8:	ldr	pc, [ip, #2848]!	; 0xb20

000044fc <btbb_get_payload_packed@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #40, 20	; 0x28000
    4504:	ldr	pc, [ip, #2840]!	; 0xb18

00004508 <printf@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #40, 20	; 0x28000
    4510:	ldr	pc, [ip, #2832]!	; 0xb10

00004514 <fopen@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #40, 20	; 0x28000
    451c:	ldr	pc, [ip, #2824]!	; 0xb08

00004520 <lell_packet_is_data@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #40, 20	; 0x28000
    4528:	ldr	pc, [ip, #2816]!	; 0xb00

0000452c <fflush@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #40, 20	; 0x28000
    4534:	ldr	pc, [ip, #2808]!	; 0xaf8

00004538 <btbb_packet_set_flag@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #40, 20	; 0x28000
    4540:	ldr	pc, [ip, #2800]!	; 0xaf0

00004544 <pcapng_append_interface_option@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #40, 20	; 0x28000
    454c:	ldr	pc, [ip, #2792]!	; 0xae8

00004550 <free@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #40, 20	; 0x28000
    4558:	ldr	pc, [ip, #2784]!	; 0xae0

0000455c <btbb_packet_get_modulation@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #40, 20	; 0x28000
    4564:	ldr	pc, [ip, #2776]!	; 0xad8

00004568 <btbb_packet_get_ac_errors@plt>:
    4568:	add	ip, pc, #0, 12
    456c:	add	ip, ip, #40, 20	; 0x28000
    4570:	ldr	pc, [ip, #2768]!	; 0xad0

00004574 <memcpy@plt>:
    4574:	add	ip, pc, #0, 12
    4578:	add	ip, ip, #40, 20	; 0x28000
    457c:	ldr	pc, [ip, #2760]!	; 0xac8

00004580 <btbb_uap_from_header@plt>:
    4580:	add	ip, pc, #0, 12
    4584:	add	ip, ip, #40, 20	; 0x28000
    4588:	ldr	pc, [ip, #2752]!	; 0xac0

0000458c <fhs@plt>:
    458c:	add	ip, pc, #0, 12
    4590:	add	ip, ip, #40, 20	; 0x28000
    4594:	ldr	pc, [ip, #2744]!	; 0xab8

00004598 <EV4@plt>:
    4598:	add	ip, pc, #0, 12
    459c:	add	ip, ip, #40, 20	; 0x28000
    45a0:	ldr	pc, [ip, #2736]!	; 0xab0

000045a4 <memcmp@plt>:
    45a4:	add	ip, pc, #0, 12
    45a8:	add	ip, ip, #40, 20	; 0x28000
    45ac:	ldr	pc, [ip, #2728]!	; 0xaa8

000045b0 <btbb_header_present@plt>:
    45b0:	add	ip, pc, #0, 12
    45b4:	add	ip, ip, #40, 20	; 0x28000
    45b8:	ldr	pc, [ip, #2720]!	; 0xaa0

000045bc <pcapng_create@plt>:
    45bc:	add	ip, pc, #0, 12
    45c0:	add	ip, ip, #40, 20	; 0x28000
    45c4:	ldr	pc, [ip, #2712]!	; 0xa98

000045c8 <DM@plt>:
    45c8:	add	ip, pc, #0, 12
    45cc:	add	ip, ip, #40, 20	; 0x28000
    45d0:	ldr	pc, [ip, #2704]!	; 0xa90

000045d4 <HV@plt>:
    45d4:	add	ip, pc, #0, 12
    45d8:	add	ip, ip, #40, 20	; 0x28000
    45dc:	ldr	pc, [ip, #2696]!	; 0xa88

000045e0 <perror@plt>:
    45e0:	add	ip, pc, #0, 12
    45e4:	add	ip, ip, #40, 20	; 0x28000
    45e8:	ldr	pc, [ip, #2688]!	; 0xa80

000045ec <perm_table_init@plt>:
    45ec:	add	ip, pc, #0, 12
    45f0:	add	ip, ip, #40, 20	; 0x28000
    45f4:	ldr	pc, [ip, #2680]!	; 0xa78

000045f8 <btbb_packet_set_uap@plt>:
    45f8:	add	ip, pc, #0, 12
    45fc:	add	ip, ip, #40, 20	; 0x28000
    4600:	ldr	pc, [ip, #2672]!	; 0xa70

00004604 <fwrite@plt>:
    4604:	add	ip, pc, #0, 12
    4608:	add	ip, ip, #40, 20	; 0x28000
    460c:	ldr	pc, [ip, #2664]!	; 0xa68

00004610 <btbb_gen_syncword@plt>:
    4610:	add	ip, pc, #0, 12
    4614:	add	ip, ip, #40, 20	; 0x28000
    4618:	ldr	pc, [ip, #2656]!	; 0xa60

0000461c <crc_check@plt>:
    461c:	add	ip, pc, #0, 12
    4620:	add	ip, ip, #40, 20	; 0x28000
    4624:	ldr	pc, [ip, #2648]!	; 0xa58

00004628 <btbb_decode@plt>:
    4628:	add	ip, pc, #0, 12
    462c:	add	ip, ip, #40, 20	; 0x28000
    4630:	ldr	pc, [ip, #2640]!	; 0xa50

00004634 <btbb_winnow@plt>:
    4634:	add	ip, pc, #0, 12
    4638:	add	ip, ip, #40, 20	; 0x28000
    463c:	ldr	pc, [ip, #2632]!	; 0xa48

00004640 <get_hop_pattern@plt>:
    4640:	add	ip, pc, #0, 12
    4644:	add	ip, ip, #40, 20	; 0x28000
    4648:	ldr	pc, [ip, #2624]!	; 0xa40

0000464c <puts@plt>:
    464c:	add	ip, pc, #0, 12
    4650:	add	ip, ip, #40, 20	; 0x28000
    4654:	ldr	pc, [ip, #2616]!	; 0xa38

00004658 <malloc@plt>:
    4658:	add	ip, pc, #0, 12
    465c:	add	ip, ip, #40, 20	; 0x28000
    4660:	ldr	pc, [ip, #2608]!	; 0xa30

00004664 <try_hop@plt>:
    4664:	add	ip, pc, #0, 12
    4668:	add	ip, ip, #40, 20	; 0x28000
    466c:	ldr	pc, [ip, #2600]!	; 0xa28

00004670 <__gmon_start__@plt>:
    4670:	add	ip, pc, #0, 12
    4674:	add	ip, ip, #40, 20	; 0x28000
    4678:	ldr	pc, [ip, #2592]!	; 0xa20

0000467c <open@plt>:
    467c:	add	ip, pc, #0, 12
    4680:	add	ip, ip, #40, 20	; 0x28000
    4684:	ldr	pc, [ip, #2584]!	; 0xa18

00004688 <__ctype_b_loc@plt>:
    4688:	add	ip, pc, #0, 12
    468c:	add	ip, ip, #40, 20	; 0x28000
    4690:	ldr	pc, [ip, #2576]!	; 0xa10

00004694 <exit@plt>:
    4694:	add	ip, pc, #0, 12
    4698:	add	ip, ip, #40, 20	; 0x28000
    469c:	ldr	pc, [ip, #2568]!	; 0xa08

000046a0 <btbb_packet_get_payload_length@plt>:
    46a0:	add	ip, pc, #0, 12
    46a4:	add	ip, ip, #40, 20	; 0x28000
    46a8:	ldr	pc, [ip, #2560]!	; 0xa00

000046ac <strlen@plt>:
    46ac:	add	ip, pc, #0, 12
    46b0:	add	ip, ip, #40, 20	; 0x28000
    46b4:	ldr	pc, [ip, #2552]!	; 0x9f8

000046b8 <btbb_decode_header@plt>:
    46b8:	add	ip, pc, #0, 12
    46bc:	add	ip, ip, #40, 20	; 0x28000
    46c0:	ldr	pc, [ip, #2544]!	; 0x9f0

000046c4 <mmap@plt>:
    46c4:	add	ip, pc, #0, 12
    46c8:	add	ip, ip, #40, 20	; 0x28000
    46cc:	ldr	pc, [ip, #2536]!	; 0x9e8

000046d0 <btbb_packet_get_header_packed@plt>:
    46d0:	add	ip, pc, #0, 12
    46d4:	add	ip, ip, #40, 20	; 0x28000
    46d8:	ldr	pc, [ip, #2528]!	; 0x9e0

000046dc <lell_get_channel_k@plt>:
    46dc:	add	ip, pc, #0, 12
    46e0:	add	ip, ip, #40, 20	; 0x28000
    46e4:	ldr	pc, [ip, #2520]!	; 0x9d8

000046e8 <fprintf@plt>:
    46e8:	add	ip, pc, #0, 12
    46ec:	add	ip, ip, #40, 20	; 0x28000
    46f0:	ldr	pc, [ip, #2512]!	; 0x9d0

000046f4 <getpagesize@plt>:
    46f4:	add	ip, pc, #0, 12
    46f8:	add	ip, ip, #40, 20	; 0x28000
    46fc:	ldr	pc, [ip, #2504]!	; 0x9c8

00004700 <pcapng_append_packet@plt>:
    4700:	add	ip, pc, #0, 12
    4704:	add	ip, ip, #40, 20	; 0x28000
    4708:	ldr	pc, [ip, #2496]!	; 0x9c0

0000470c <btbb_packet_get_transport@plt>:
    470c:	add	ip, pc, #0, 12
    4710:	add	ip, ip, #40, 20	; 0x28000
    4714:	ldr	pc, [ip, #2488]!	; 0x9b8

00004718 <memset@plt>:
    4718:	add	ip, pc, #0, 12
    471c:	add	ip, ip, #40, 20	; 0x28000
    4720:	ldr	pc, [ip, #2480]!	; 0x9b0

00004724 <putchar@plt>:
    4724:	add	ip, pc, #0, 12
    4728:	add	ip, ip, #40, 20	; 0x28000
    472c:	ldr	pc, [ip, #2472]!	; 0x9a8

00004730 <strncpy@plt>:
    4730:	add	ip, pc, #0, 12
    4734:	add	ip, ip, #40, 20	; 0x28000
    4738:	ldr	pc, [ip, #2464]!	; 0x9a0

0000473c <EV3@plt>:
    473c:	add	ip, pc, #0, 12
    4740:	add	ip, ip, #40, 20	; 0x28000
    4744:	ldr	pc, [ip, #2456]!	; 0x998

00004748 <btbb_packet_get_lap@plt>:
    4748:	add	ip, pc, #0, 12
    474c:	add	ip, ip, #40, 20	; 0x28000
    4750:	ldr	pc, [ip, #2448]!	; 0x990

00004754 <bt_compidtostr@plt>:
    4754:	add	ip, pc, #0, 12
    4758:	add	ip, ip, #40, 20	; 0x28000
    475c:	ldr	pc, [ip, #2440]!	; 0x988

00004760 <write@plt>:
    4760:	add	ip, pc, #0, 12
    4764:	add	ip, ip, #40, 20	; 0x28000
    4768:	ldr	pc, [ip, #2432]!	; 0x980

0000476c <get_piconet@plt>:
    476c:	add	ip, pc, #0, 12
    4770:	add	ip, ip, #40, 20	; 0x28000
    4774:	ldr	pc, [ip, #2424]!	; 0x978

00004778 <fclose@plt>:
    4778:	add	ip, pc, #0, 12
    477c:	add	ip, ip, #40, 20	; 0x28000
    4780:	ldr	pc, [ip, #2416]!	; 0x970

00004784 <EV5@plt>:
    4784:	add	ip, pc, #0, 12
    4788:	add	ip, ip, #40, 20	; 0x28000
    478c:	ldr	pc, [ip, #2408]!	; 0x968

00004790 <munmap@plt>:
    4790:	add	ip, pc, #0, 12
    4794:	add	ip, ip, #40, 20	; 0x28000
    4798:	ldr	pc, [ip, #2400]!	; 0x960

0000479c <DH@plt>:
    479c:	add	ip, pc, #0, 12
    47a0:	add	ip, ip, #40, 20	; 0x28000
    47a4:	ldr	pc, [ip, #2392]!	; 0x958

000047a8 <btbb_packet_get_channel@plt>:
    47a8:	add	ip, pc, #0, 12
    47ac:	add	ip, ip, #40, 20	; 0x28000
    47b0:	ldr	pc, [ip, #2384]!	; 0x950

000047b4 <btbb_decode_payload@plt>:
    47b4:	add	ip, pc, #0, 12
    47b8:	add	ip, ip, #40, 20	; 0x28000
    47bc:	ldr	pc, [ip, #2376]!	; 0x948

000047c0 <promiscuous_packet_search@plt>:
    47c0:	add	ip, pc, #0, 12
    47c4:	add	ip, ip, #40, 20	; 0x28000
    47c8:	ldr	pc, [ip, #2368]!	; 0x940

000047cc <pcapng_close@plt>:
    47cc:	add	ip, pc, #0, 12
    47d0:	add	ip, ip, #40, 20	; 0x28000
    47d4:	ldr	pc, [ip, #2360]!	; 0x938

000047d8 <btbb_print_packet@plt>:
    47d8:	add	ip, pc, #0, 12
    47dc:	add	ip, ip, #40, 20	; 0x28000
    47e0:	ldr	pc, [ip, #2352]!	; 0x930

000047e4 <try_clock@plt>:
    47e4:	add	ip, pc, #0, 12
    47e8:	add	ip, ip, #40, 20	; 0x28000
    47ec:	ldr	pc, [ip, #2344]!	; 0x928

000047f0 <close@plt>:
    47f0:	add	ip, pc, #0, 12
    47f4:	add	ip, ip, #40, 20	; 0x28000
    47f8:	ldr	pc, [ip, #2336]!	; 0x920

000047fc <__assert_fail@plt>:
    47fc:	add	ip, pc, #0, 12
    4800:	add	ip, ip, #40, 20	; 0x28000
    4804:	ldr	pc, [ip, #2328]!	; 0x918

Disassembly of section .text:

00004810 <btbb_gen_syncword@@Base-0x130>:
    4810:	ldr	r3, [pc, #20]	; 482c <__assert_fail@plt+0x30>
    4814:	ldr	r2, [pc, #20]	; 4830 <__assert_fail@plt+0x34>
    4818:	add	r3, pc, r3
    481c:	ldr	r2, [r3, r2]
    4820:	cmp	r2, #0
    4824:	bxeq	lr
    4828:	b	4670 <__gmon_start__@plt>
    482c:	andeq	r8, r2, r0, ror #15
    4830:	andeq	r0, r0, r4, lsr r1
    4834:	ldr	r0, [pc, #44]	; 4868 <__assert_fail@plt+0x6c>
    4838:	ldr	r3, [pc, #44]	; 486c <__assert_fail@plt+0x70>
    483c:	add	r0, pc, r0
    4840:	add	r3, pc, r3
    4844:	cmp	r3, r0
    4848:	ldr	r3, [pc, #32]	; 4870 <__assert_fail@plt+0x74>
    484c:	add	r3, pc, r3
    4850:	bxeq	lr
    4854:	ldr	r2, [pc, #24]	; 4874 <__assert_fail@plt+0x78>
    4858:	ldr	r3, [r3, r2]
    485c:	cmp	r3, #0
    4860:	bxeq	lr
    4864:	bx	r3
    4868:	andeq	r8, r2, r4, lsl #18
    486c:	andeq	r8, r2, r0, lsl #18
    4870:	andeq	r8, r2, ip, lsr #15
    4874:	andeq	r0, r0, r4, lsr #2
    4878:	ldr	r0, [pc, #56]	; 48b8 <__assert_fail@plt+0xbc>
    487c:	ldr	r3, [pc, #56]	; 48bc <__assert_fail@plt+0xc0>
    4880:	add	r0, pc, r0
    4884:	add	r3, pc, r3
    4888:	sub	r1, r3, r0
    488c:	ldr	r3, [pc, #44]	; 48c0 <__assert_fail@plt+0xc4>
    4890:	asr	r1, r1, #2
    4894:	add	r3, pc, r3
    4898:	add	r1, r1, r1, lsr #31
    489c:	asrs	r1, r1, #1
    48a0:	bxeq	lr
    48a4:	ldr	r2, [pc, #24]	; 48c4 <__assert_fail@plt+0xc8>
    48a8:	ldr	r3, [r3, r2]
    48ac:	cmp	r3, #0
    48b0:	bxeq	lr
    48b4:	bx	r3
    48b8:	andeq	r8, r2, r0, asr #17
    48bc:			; <UNDEFINED> instruction: 0x000288bc
    48c0:	andeq	r8, r2, r4, ror #14
    48c4:	andeq	r0, r0, ip, lsr r1
    48c8:	ldr	r3, [pc, #76]	; 491c <__assert_fail@plt+0x120>
    48cc:	ldr	r2, [pc, #76]	; 4920 <__assert_fail@plt+0x124>
    48d0:	add	r3, pc, r3
    48d4:	add	r2, pc, r2
    48d8:	ldrb	r3, [r3]
    48dc:	cmp	r3, #0
    48e0:	bxne	lr
    48e4:	ldr	r3, [pc, #56]	; 4924 <__assert_fail@plt+0x128>
    48e8:	push	{r4, lr}
    48ec:	ldr	r3, [r2, r3]
    48f0:	cmp	r3, #0
    48f4:	beq	4904 <__assert_fail@plt+0x108>
    48f8:	ldr	r3, [pc, #40]	; 4928 <__assert_fail@plt+0x12c>
    48fc:	ldr	r0, [pc, r3]
    4900:	bl	44f0 <__cxa_finalize@plt>
    4904:	bl	4834 <__assert_fail@plt+0x38>
    4908:	ldr	r3, [pc, #28]	; 492c <__assert_fail@plt+0x130>
    490c:	mov	r2, #1
    4910:	add	r3, pc, r3
    4914:	strb	r2, [r3]
    4918:	pop	{r4, pc}
    491c:	andeq	r8, r2, r0, ror r8
    4920:	andeq	r8, r2, r4, lsr #14
    4924:	andeq	r0, r0, r0, lsr #2
    4928:	andeq	r8, r2, ip, lsr r8
    492c:	andeq	r8, r2, r0, lsr r8
    4930:	b	4878 <__assert_fail@plt+0x7c>
	...

00004940 <btbb_gen_syncword@@Base>:
    4940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4944:	add	fp, sp, #28
    4948:	sub	sp, sp, #60	; 0x3c
    494c:	mov	r1, r0
    4950:	ands	r0, r0, #8388608	; 0x800000
    4954:	movw	r2, #8223	; 0x201f
    4958:	str	r0, [fp, #-32]	; 0xffffffe0
    495c:	movw	r0, #52842	; 0xce6a
    4960:	movt	r2, #61625	; 0xf0b9
    4964:	movt	r0, #26451	; 0x6753
    4968:	movweq	r0, #3710	; 0xe7e
    496c:	movteq	r0, #51074	; 0xc782
    4970:	ands	r3, r1, #4194304	; 0x400000
    4974:	eorne	r0, r0, r2
    4978:	movw	r2, #3803	; 0xedb
    497c:	str	r3, [fp, #-36]	; 0xffffffdc
    4980:	ands	r3, r1, #2097152	; 0x200000
    4984:	movt	r2, #15076	; 0x3ae4
    4988:	str	r3, [fp, #-40]	; 0xffffffd8
    498c:	ldr	r7, [fp, #-36]	; 0xffffffdc
    4990:	eorne	r0, r0, r2
    4994:	movw	r2, #39353	; 0x99b9
    4998:	ands	r3, r1, #1048576	; 0x100000
    499c:	movt	r2, #24522	; 0x5fca
    49a0:	str	r3, [sp, #44]	; 0x2c
    49a4:	eorne	r0, r0, r2
    49a8:	movw	r2, #53768	; 0xd208
    49ac:	ands	r3, r1, #524288	; 0x80000
    49b0:	movt	r2, #27997	; 0x6d5d
    49b4:	str	r3, [sp, #40]	; 0x28
    49b8:	eorne	r0, r0, r2
    49bc:	movw	r2, #59652	; 0xe904
    49c0:	ands	r3, r1, #262144	; 0x40000
    49c4:	movt	r2, #46766	; 0xb6ae
    49c8:	str	r3, [sp, #36]	; 0x24
    49cc:	eorne	r0, r0, r2
    49d0:	movw	r2, #29826	; 0x7482
    49d4:	ands	r3, r1, #131072	; 0x20000
    49d8:	movt	r2, #56151	; 0xdb57
    49dc:	str	r3, [sp, #32]
    49e0:	eorne	r0, r0, r2
    49e4:	movw	r2, #47681	; 0xba41
    49e8:	ands	r3, r1, #65536	; 0x10000
    49ec:	movt	r2, #28075	; 0x6dab
    49f0:	str	r3, [sp, #28]
    49f4:	eorne	r0, r0, r2
    49f8:	movw	r2, #17396	; 0x43f4
    49fc:	ands	r3, r1, #32768	; 0x8000
    4a00:	movt	r2, #62573	; 0xf46d
    4a04:	str	r3, [sp, #24]
    4a08:	eorne	r0, r0, r2
    4a0c:	movw	r2, #41466	; 0xa1fa
    4a10:	ands	r3, r1, #16384	; 0x4000
    4a14:	movt	r2, #31286	; 0x7a36
    4a18:	str	r3, [sp, #20]
    4a1c:	eorne	r0, r0, r2
    4a20:	movw	r2, #20733	; 0x50fd
    4a24:	ands	r3, r1, #8192	; 0x2000
    4a28:	movt	r2, #48411	; 0xbd1b
    4a2c:	str	r3, [sp, #16]
    4a30:	eorne	r0, r0, r2
    4a34:	movw	r2, #13994	; 0x36aa
    4a38:	ands	r8, r1, #4096	; 0x1000
    4a3c:	movt	r2, #39989	; 0x9c35
    4a40:	eorne	r0, r0, r2
    4a44:	movw	r2, #39765	; 0x9b55
    4a48:	ands	r9, r1, #2048	; 0x800
    4a4c:	movt	r2, #19994	; 0x4e1a
    4a50:	eorne	r0, r0, r2
    4a54:	movw	r2, #54142	; 0xd37e
    4a58:	ands	sl, r1, #1024	; 0x400
    4a5c:	movt	r2, #26037	; 0x65b5
    4a60:	eorne	r0, r0, r2
    4a64:	movw	r2, #59839	; 0xe9bf
    4a68:	ands	r3, r1, #512	; 0x200
    4a6c:	movt	r2, #13018	; 0x32da
    4a70:	str	r3, [sp, #12]
    4a74:	eorne	r0, r0, r2
    4a78:	movw	r2, #59915	; 0xea0b
    4a7c:	ands	r3, r1, #256	; 0x100
    4a80:	movt	r2, #23509	; 0x5bd5
    4a84:	str	r3, [sp, #8]
    4a88:	eorne	r0, r0, r2
    4a8c:	movw	r2, #27601	; 0x6bd1
    4a90:	ands	r3, r1, #128	; 0x80
    4a94:	movt	r2, #61266	; 0xef52
    4a98:	str	r3, [sp, #4]
    4a9c:	eorne	r0, r0, r2
    4aa0:	movw	r2, #43836	; 0xab3c
    4aa4:	ands	r3, r1, #64	; 0x40
    4aa8:	movt	r2, #13585	; 0x3511
    4aac:	str	r3, [sp]
    4ab0:	eorne	r0, r0, r2
    4ab4:	movw	r2, #54686	; 0xd59e
    4ab8:	ands	r6, r1, #32
    4abc:	movt	r2, #39560	; 0x9a88
    4ac0:	eorne	r0, r0, r2
    4ac4:	movw	r2, #27343	; 0x6acf
    4ac8:	ands	r5, r1, #16
    4acc:	movt	r2, #52548	; 0xcd44
    4ad0:	eorne	r0, r0, r2
    4ad4:	movw	r2, #43955	; 0xabb3
    4ad8:	ands	r4, r1, #8
    4adc:	movt	r2, #42010	; 0xa41a
    4ae0:	eorne	r0, r0, r2
    4ae4:	movw	r2, #51981	; 0xcb0d
    4ae8:	ands	lr, r1, #4
    4aec:	movt	r2, #37045	; 0x90b5
    4af0:	eorne	r0, r0, r2
    4af4:	movw	r2, #31570	; 0x7b52
    4af8:	ands	ip, r1, #2
    4afc:	movt	r2, #2786	; 0xae2
    4b00:	eorne	r0, r0, r2
    4b04:	movw	r2, #15785	; 0x3da9
    4b08:	ands	r3, r1, #1
    4b0c:	mov	r1, #1308622848	; 0x4e000000
    4b10:	movt	r2, #34161	; 0x8571
    4b14:	eorne	r0, r0, r2
    4b18:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4b1c:	cmp	r2, #0
    4b20:	moveq	r1, #-1342177278	; 0xb0000002
    4b24:	cmp	r7, #0
    4b28:	ldr	r7, [fp, #-40]	; 0xffffffd8
    4b2c:	eor	r2, r1, #3
    4b30:	eorne	r1, r2, #16777216	; 0x1000000
    4b34:	eor	r2, r1, #3
    4b38:	cmp	r7, #0
    4b3c:	ldr	r7, [sp, #44]	; 0x2c
    4b40:	eorne	r1, r2, #8388608	; 0x800000
    4b44:	eor	r2, r1, #3
    4b48:	cmp	r7, #0
    4b4c:	ldr	r7, [sp, #40]	; 0x28
    4b50:	eorne	r1, r2, #4194304	; 0x400000
    4b54:	eor	r2, r1, #3
    4b58:	cmp	r7, #0
    4b5c:	ldr	r7, [sp, #36]	; 0x24
    4b60:	eorne	r1, r2, #2097152	; 0x200000
    4b64:	eor	r2, r1, #1
    4b68:	cmp	r7, #0
    4b6c:	ldr	r7, [sp, #24]
    4b70:	eorne	r1, r2, #1048576	; 0x100000
    4b74:	ldr	r2, [sp, #32]
    4b78:	cmp	r2, #0
    4b7c:	ldr	r2, [sp, #28]
    4b80:	eorne	r1, r1, #524288	; 0x80000
    4b84:	cmp	r2, #0
    4b88:	eorne	r1, r1, #262144	; 0x40000
    4b8c:	cmp	r7, #0
    4b90:	ldr	r7, [sp, #20]
    4b94:	eor	r2, r1, #2
    4b98:	eorne	r1, r2, #131072	; 0x20000
    4b9c:	eor	r2, r1, #1
    4ba0:	cmp	r7, #0
    4ba4:	ldr	r7, [sp, #12]
    4ba8:	eorne	r1, r2, #65536	; 0x10000
    4bac:	ldr	r2, [sp, #16]
    4bb0:	cmp	r2, #0
    4bb4:	movw	r2, #16386	; 0x4002
    4bb8:	eorne	r1, r1, #32768	; 0x8000
    4bbc:	cmp	r8, #0
    4bc0:	eorne	r1, r1, r2
    4bc4:	movw	r2, #8193	; 0x2001
    4bc8:	cmp	r9, #0
    4bcc:	eorne	r1, r1, r2
    4bd0:	movw	r2, #4098	; 0x1002
    4bd4:	cmp	sl, #0
    4bd8:	eorne	r1, r1, r2
    4bdc:	cmp	r7, #0
    4be0:	ldr	r7, [sp, #8]
    4be4:	movw	r2, #2049	; 0x801
    4be8:	eorne	r1, r1, r2
    4bec:	movw	r2, #1026	; 0x402
    4bf0:	cmp	r7, #0
    4bf4:	ldr	r7, [sp, #4]
    4bf8:	eorne	r1, r1, r2
    4bfc:	movw	r2, #515	; 0x203
    4c00:	cmp	r7, #0
    4c04:	ldr	r7, [sp]
    4c08:	eorne	r1, r1, r2
    4c0c:	movw	r2, #259	; 0x103
    4c10:	cmp	r7, #0
    4c14:	eorne	r1, r1, r2
    4c18:	cmp	r6, #0
    4c1c:	eorne	r1, r1, #129	; 0x81
    4c20:	cmp	r5, #0
    4c24:	eorne	r1, r1, #64	; 0x40
    4c28:	cmp	r4, #0
    4c2c:	eorne	r1, r1, #34	; 0x22
    4c30:	cmp	lr, #0
    4c34:	eorne	r1, r1, #19
    4c38:	cmp	ip, #0
    4c3c:	eorne	r1, r1, #11
    4c40:	cmp	r3, #0
    4c44:	eorne	r1, r1, #5
    4c48:	sub	sp, fp, #28
    4c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00004c50 <btbb_get_release@@Base>:
    4c50:	ldr	r0, [pc, #4]	; 4c5c <btbb_get_release@@Base+0xc>
    4c54:	add	r0, pc, r0
    4c58:	bx	lr
    4c5c:	andeq	lr, r0, r4, lsl #14

00004c60 <btbb_get_version@@Base>:
    4c60:	ldr	r0, [pc, #4]	; 4c6c <btbb_get_version@@Base+0xc>
    4c64:	add	r0, pc, r0
    4c68:	bx	lr
    4c6c:	strdeq	lr, [r0], -pc	; <UNPREDICTABLE>

00004c70 <btbb_init@@Base>:
    4c70:	push	{r4, r5, r6, sl, fp, lr}
    4c74:	add	fp, sp, #16
    4c78:	cmp	r0, #6
    4c7c:	bcs	4cd0 <btbb_init@@Base+0x60>
    4c80:	mov	r5, r0
    4c84:	mov	r4, #0
    4c88:	cmp	r0, #0
    4c8c:	beq	4cc8 <btbb_init@@Base+0x58>
    4c90:	ldr	r0, [pc, #112]	; 4d08 <btbb_init@@Base+0x98>
    4c94:	ldr	r0, [pc, r0]
    4c98:	cmp	r0, #0
    4c9c:	bne	4cc8 <btbb_init@@Base+0x58>
    4ca0:	mov	r4, #0
    4ca4:	mov	r6, #0
    4ca8:	add	r6, r6, #1
    4cac:	mov	r0, #0
    4cb0:	mov	r1, #0
    4cb4:	mov	r2, #0
    4cb8:	mov	r3, r6
    4cbc:	bl	a80c <clock_from_fhs@@Base+0xd0>
    4cc0:	cmp	r5, r6
    4cc4:	bne	4ca8 <btbb_init@@Base+0x38>
    4cc8:	mov	r0, r4
    4ccc:	pop	{r4, r5, r6, sl, fp, pc}
    4cd0:	ldr	r0, [pc, #36]	; 4cfc <btbb_init@@Base+0x8c>
    4cd4:	ldr	r0, [pc, r0]
    4cd8:	ldr	r0, [r0]
    4cdc:	ldr	r1, [pc, #28]	; 4d00 <btbb_init@@Base+0x90>
    4ce0:	ldr	r2, [pc, #28]	; 4d04 <btbb_init@@Base+0x94>
    4ce4:	add	r1, pc, r1
    4ce8:	add	r2, pc, r2
    4cec:	bl	46e8 <fprintf@plt>
    4cf0:	mvn	r4, #0
    4cf4:	mov	r0, r4
    4cf8:	pop	{r4, r5, r6, sl, fp, pc}
    4cfc:	andeq	r8, r2, ip, asr #8
    4d00:	andeq	lr, r0, r3, lsl #13
    4d04:	muleq	r0, pc, r6	; <UNPREDICTABLE>
    4d08:			; <UNDEFINED> instruction: 0x000284b0

00004d0c <btbb_packet_new@@Base>:
    4d0c:	push	{r4, r5, fp, lr}
    4d10:	add	fp, sp, #8
    4d14:	mov	r0, #1
    4d18:	mov	r1, #5952	; 0x1740
    4d1c:	mov	r5, #1
    4d20:	bl	44cc <calloc@plt>
    4d24:	mov	r4, r0
    4d28:	cmp	r0, #0
    4d2c:	movne	r0, r4
    4d30:	strne	r5, [r4]
    4d34:	popne	{r4, r5, fp, pc}
    4d38:	ldr	r0, [pc, #32]	; 4d60 <btbb_packet_new@@Base+0x54>
    4d3c:	mov	r1, #25
    4d40:	mov	r2, #1
    4d44:	ldr	r0, [pc, r0]
    4d48:	ldr	r3, [r0]
    4d4c:	ldr	r0, [pc, #16]	; 4d64 <btbb_packet_new@@Base+0x58>
    4d50:	add	r0, pc, r0
    4d54:	bl	4604 <fwrite@plt>
    4d58:	mov	r0, r4
    4d5c:	pop	{r4, r5, fp, pc}
    4d60:	ldrdeq	r8, [r2], -ip
    4d64:	andeq	lr, r0, r1, asr #12

00004d68 <btbb_packet_ref@@Base>:
    4d68:	ldr	r1, [r0]
    4d6c:	add	r1, r1, #1
    4d70:	str	r1, [r0]
    4d74:	bx	lr

00004d78 <btbb_packet_unref@@Base>:
    4d78:	ldr	r1, [r0]
    4d7c:	subs	r1, r1, #1
    4d80:	str	r1, [r0]
    4d84:	bxne	lr
    4d88:	b	4550 <free@plt>

00004d8c <btbb_packet_get_lap@@Base>:
    4d8c:	ldr	r0, [r0, #12]
    4d90:	bx	lr

00004d94 <btbb_packet_set_uap@@Base>:
    4d94:	strb	r1, [r0, #9]
    4d98:	ldr	r1, [r0, #4]
    4d9c:	orr	r1, r1, #4
    4da0:	str	r1, [r0, #4]
    4da4:	bx	lr

00004da8 <btbb_packet_set_flag@@Base>:
    4da8:	push	{fp, lr}
    4dac:	mov	fp, sp
    4db0:	ldr	lr, [r0, #4]
    4db4:	mov	ip, #1
    4db8:	cmp	r2, #0
    4dbc:	orr	r3, lr, ip, lsl r1
    4dc0:	biceq	r3, lr, ip, lsl r1
    4dc4:	str	r3, [r0, #4]
    4dc8:	pop	{fp, pc}

00004dcc <btbb_packet_get_uap@@Base>:
    4dcc:	ldrb	r0, [r0, #9]
    4dd0:	bx	lr

00004dd4 <btbb_packet_get_nap@@Base>:
    4dd4:	ldrh	r0, [r0, #10]
    4dd8:	bx	lr

00004ddc <btbb_packet_get_clkn@@Base>:
    4ddc:	ldr	r0, [r0, #2816]	; 0xb00
    4de0:	bx	lr

00004de4 <btbb_packet_get_channel@@Base>:
    4de4:	ldrb	r0, [r0, #8]
    4de8:	bx	lr

00004dec <btbb_packet_set_modulation@@Base>:
    4dec:	strb	r1, [r0, #16]
    4df0:	bx	lr

00004df4 <btbb_packet_get_modulation@@Base>:
    4df4:	ldrb	r0, [r0, #16]
    4df8:	bx	lr

00004dfc <btbb_packet_set_transport@@Base>:
    4dfc:	strb	r1, [r0, #17]
    4e00:	bx	lr

00004e04 <btbb_packet_get_transport@@Base>:
    4e04:	ldrb	r0, [r0, #17]
    4e08:	bx	lr

00004e0c <btbb_packet_get_ac_errors@@Base>:
    4e0c:	ldrb	r0, [r0, #2820]	; 0xb04
    4e10:	bx	lr
    4e14:	nop	{0}
    4e18:	nop	{0}
    4e1c:	nop	{0}

00004e20 <promiscuous_packet_search@@Base>:
    4e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4e24:	add	fp, sp, #28
    4e28:	sub	sp, sp, #164	; 0xa4
    4e2c:	cmp	r1, #1
    4e30:	str	r3, [sp, #20]
    4e34:	blt	5824 <promiscuous_packet_search@@Base+0xa04>
    4e38:	mov	lr, r0
    4e3c:	mov	r7, r1
    4e40:	ldrb	r0, [r0, #57]	; 0x39
    4e44:	str	r2, [sp, #4]
    4e48:	ldr	ip, [fp, #8]
    4e4c:	mov	r4, #0
    4e50:	ldrb	r1, [lr, #58]	; 0x3a
    4e54:	ldrb	r2, [lr, #59]	; 0x3b
    4e58:	ldrb	r3, [lr, #60]	; 0x3c
    4e5c:	orr	r0, r0, r1, lsl #1
    4e60:	ldrb	r1, [lr, #61]	; 0x3d
    4e64:	orr	r0, r0, r2, lsl #2
    4e68:	orr	r0, r0, r3, lsl #3
    4e6c:	orr	r0, r0, r1, lsl #4
    4e70:	ldrb	r1, [lr, #62]	; 0x3e
    4e74:	ldr	r3, [pc, #2740]	; 5930 <promiscuous_packet_search@@Base+0xb10>
    4e78:	str	lr, [sp, #8]
    4e7c:	str	r7, [sp, #16]
    4e80:	orr	r0, r0, r1, lsl #5
    4e84:	add	r3, pc, r3
    4e88:	lsl	r8, r0, #1
    4e8c:	b	50a0 <promiscuous_packet_search@@Base+0x280>
    4e90:	ldr	r3, [pc, #2736]	; 5948 <promiscuous_packet_search@@Base+0xb28>
    4e94:	ldr	r7, [sp, #16]
    4e98:	add	r3, pc, r3
    4e9c:	ldr	r1, [sp, #20]
    4ea0:	uxtb	r0, r0
    4ea4:	cmp	r0, r1
    4ea8:	bgt	5818 <promiscuous_packet_search@@Base+0x9f8>
    4eac:	b	5834 <promiscuous_packet_search@@Base+0xa14>
    4eb0:	andeq	r0, r0, r4
    4eb4:	andeq	r0, r0, r0
    4eb8:	andeq	r0, r0, r5
    4ebc:	andeq	r0, r0, r0
    4ec0:	andeq	r0, r0, r2
    4ec4:	andeq	r0, r0, r0
    4ec8:	andeq	r0, r0, r3
	...
    4ed8:	andeq	r0, r0, r1
    4edc:	andeq	r0, r0, r0
    4ee0:	andeq	r0, r0, r6
    4ee4:	andeq	r0, r0, r0
    4ee8:	andeq	r0, r0, r7
    4eec:	andeq	r0, r0, r0
    4ef0:	andeq	r0, r0, r8
    4ef4:	andeq	r0, r0, r0
    4ef8:	andeq	r0, r0, r9
    4efc:	andeq	r0, r0, r0
    4f00:	andeq	r0, r0, sl
    4f04:	andeq	r0, r0, r0
    4f08:	andeq	r0, r0, fp
    4f0c:	andeq	r0, r0, r0
    4f10:	andeq	r0, r0, ip
    4f14:	andeq	r0, r0, r0
    4f18:	andeq	r0, r0, sp
    4f1c:	andeq	r0, r0, r0
    4f20:	andeq	r0, r0, lr
    4f24:	andeq	r0, r0, r0
    4f28:	andeq	r0, r0, pc
    4f2c:	andeq	r0, r0, r0
    4f30:	andeq	r0, r0, r2, lsl r0
    4f34:	andeq	r0, r0, r0
    4f38:	andeq	r0, r0, r3, lsl r0
    4f3c:	andeq	r0, r0, r0
    4f40:	andeq	r0, r0, r0, lsl r0
    4f44:	andeq	r0, r0, r0
    4f48:	andeq	r0, r0, r1, lsl r0
    4f4c:	andeq	r0, r0, r0
    4f50:	andeq	r0, r0, r4, lsl r0
    4f54:	andeq	r0, r0, r0
    4f58:	andeq	r0, r0, r5, lsl r0
    4f5c:	andeq	r0, r0, r0
    4f60:	andeq	r0, r0, r6, lsl r0
    4f64:	andeq	r0, r0, r0
    4f68:	andeq	r0, r0, r7, lsl r0
    4f6c:	andeq	r0, r0, r0
    4f70:	andeq	r0, r0, r0, lsr #32
    4f74:	andeq	r0, r0, r0
    4f78:	andeq	r0, r0, r1, lsr #32
    4f7c:	andeq	r0, r0, r0
    4f80:	andeq	r0, r0, sl, lsl r0
    4f84:	andeq	r0, r0, r0
    4f88:	andeq	r0, r0, fp, lsl r0
    4f8c:	andeq	r0, r0, r0
    4f90:	andeq	r0, r0, r8, lsl r0
    4f94:	andeq	r0, r0, r0
    4f98:	andeq	r0, r0, r9, lsl r0
    4f9c:	andeq	r0, r0, r0
    4fa0:	rsb	r6, r0, #0
    4fa4:	ldr	r0, [sl, #40]	; 0x28
    4fa8:	cmp	r0, #8
    4fac:	bne	4fc8 <promiscuous_packet_search@@Base+0x1a8>
    4fb0:	ldr	r0, [sl, #36]	; 0x24
    4fb4:	sub	r1, fp, #40	; 0x28
    4fb8:	mov	r2, #8
    4fbc:	bl	45a4 <memcmp@plt>
    4fc0:	cmp	r0, #0
    4fc4:	beq	4fdc <promiscuous_packet_search@@Base+0x1bc>
    4fc8:	ldr	r0, [sl, #32]
    4fcc:	cmp	r0, #0
    4fd0:	addsne	sl, r0, r6
    4fd4:	bne	4fa4 <promiscuous_packet_search@@Base+0x184>
    4fd8:	b	57f0 <promiscuous_packet_search@@Base+0x9d0>
    4fdc:	ldrd	r0, [sl, #8]
    4fe0:	movw	r2, #21845	; 0x5555
    4fe4:	movw	r3, #13107	; 0x3333
    4fe8:	movt	r2, #21845	; 0x5555
    4fec:	movt	r3, #13107	; 0x3333
    4ff0:	mov	ip, r2
    4ff4:	mov	r6, r3
    4ff8:	and	r2, r2, r1, lsr #1
    4ffc:	sub	r2, r1, r2
    5000:	eor	r1, r1, r9
    5004:	and	r3, r3, r2, lsr #2
    5008:	and	r2, r2, r6
    500c:	lsr	r1, r1, #2
    5010:	add	r2, r2, r3
    5014:	movw	r3, #3855	; 0xf0f
    5018:	str	r1, [sp, #12]
    501c:	movt	r3, #3855	; 0xf0f
    5020:	add	r2, r2, r2, lsr #4
    5024:	mov	lr, r3
    5028:	and	r2, r2, r3
    502c:	movw	r3, #257	; 0x101
    5030:	movt	r3, #257	; 0x101
    5034:	mov	sl, r3
    5038:	mul	r2, r2, r3
    503c:	and	r3, ip, r0, lsr #1
    5040:	mov	ip, r5
    5044:	sub	r0, r0, r3
    5048:	and	r3, r6, r0, lsr #2
    504c:	and	r0, r0, r6
    5050:	add	r0, r0, r3
    5054:	add	r0, r0, r0, lsr #4
    5058:	and	r0, r0, lr
    505c:	mul	r0, r0, sl
    5060:	lsr	r0, r0, #24
    5064:	add	r0, r0, r2, lsr #24
    5068:	b	57f8 <promiscuous_packet_search@@Base+0x9d8>
    506c:	nop	{0}
    5070:	andeq	r0, r0, lr, lsl r0
    5074:	andeq	r0, r0, r0
    5078:	andeq	r0, r0, pc, lsl r0
    507c:	andeq	r0, r0, r0
    5080:	andeq	r0, r0, ip, lsl r0
    5084:	andeq	r0, r0, r0
    5088:	andeq	r0, r0, sp, lsl r0
    508c:	andeq	r0, r0, r0
    5090:	andeq	r0, r0, r2, lsr #32
    5094:	andeq	r0, r0, r0
    5098:	andeq	r0, r0, r3, lsr #32
    509c:	andeq	r0, r0, r0
    50a0:	add	r0, lr, r4
    50a4:	and	r2, r8, #254	; 0xfe
    50a8:	ldrb	r1, [r0, #63]	; 0x3f
    50ac:	lsl	r1, r1, #6
    50b0:	orr	r8, r1, r2, lsr #1
    50b4:	uxtb	r1, r8
    50b8:	ldrb	r1, [r3, r1]
    50bc:	cmp	r1, #1
    50c0:	bhi	5818 <promiscuous_packet_search@@Base+0x9f8>
    50c4:	ldrh	r1, [r0]
    50c8:	add	r5, sp, #24
    50cc:	movw	sl, #2040	; 0x7f8
    50d0:	strh	r1, [sp, #24]
    50d4:	ldrh	r1, [r0, #2]
    50d8:	strh	r1, [fp, #-44]	; 0xffffffd4
    50dc:	ldrh	r1, [r0, #4]
    50e0:	strh	r1, [fp, #-48]	; 0xffffffd0
    50e4:	ldrh	r3, [r0, #10]
    50e8:	ldrh	r2, [r0, #6]
    50ec:	vld1.16	{d16[0]}, [r5 :16]
    50f0:	ldrh	r1, [r0, #12]
    50f4:	strh	r3, [fp, #-60]	; 0xffffffc4
    50f8:	sub	r3, fp, #44	; 0x2c
    50fc:	vmovl.u8	q10, d16
    5100:	vld1.16	{d17[0]}, [r3 :16]
    5104:	strh	r2, [fp, #-52]	; 0xffffffcc
    5108:	sub	r3, fp, #48	; 0x30
    510c:	vmovl.u16	q10, d20
    5110:	ldrh	r2, [r0, #8]
    5114:	vld1.16	{d18[0]}, [r3 :16]
    5118:	vmovl.u32	q10, d20
    511c:	vmovl.u8	q12, d17
    5120:	strh	r2, [fp, #-56]	; 0xffffffc8
    5124:	strh	r1, [fp, #-64]	; 0xffffffc0
    5128:	sub	r1, fp, #60	; 0x3c
    512c:	sub	r2, fp, #64	; 0x40
    5130:	vmovl.u8	q13, d18
    5134:	vmovl.u16	q12, d24
    5138:	vld1.16	{d16[0]}, [r1 :16]
    513c:	sub	r1, fp, #52	; 0x34
    5140:	vld1.16	{d23[0]}, [r2 :16]
    5144:	vmovl.u32	q12, d24
    5148:	vld1.16	{d22[0]}, [r1 :16]
    514c:	sub	r1, fp, #56	; 0x38
    5150:	vld1.16	{d17[0]}, [r1 :16]
    5154:	ldrh	r1, [r0, #14]
    5158:	vmovl.u8	q9, d16
    515c:	vmovl.u8	q14, d22
    5160:	vmovl.u16	q9, d18
    5164:	strh	r1, [fp, #-68]	; 0xffffffbc
    5168:	vmovl.u8	q15, d17
    516c:	vmovl.u8	q8, d23
    5170:	vmovl.u16	q11, d26
    5174:	vmovl.u16	q14, d28
    5178:	vmovl.u32	q9, d18
    517c:	ldrh	r1, [r0, #20]
    5180:	ldrh	r2, [r0, #16]
    5184:	sub	r3, pc, #732	; 0x2dc
    5188:	sub	r6, pc, #720	; 0x2d0
    518c:	sub	r5, pc, #708	; 0x2c4
    5190:	vmovl.u32	q14, d28
    5194:	vmovl.u32	q11, d22
    5198:	vmovl.u16	q15, d30
    519c:	vmovl.u16	q8, d16
    51a0:	vld1.64	{d26-d27}, [r5 :128]
    51a4:	vld1.64	{d0-d1}, [r6 :128]
    51a8:	sub	r5, fp, #68	; 0x44
    51ac:	vld1.64	{d4-d5}, [r3 :128]
    51b0:	vmovl.u32	q15, d30
    51b4:	vmovl.u32	q8, d16
    51b8:	strh	r2, [fp, #-72]	; 0xffffffb8
    51bc:	sub	r2, pc, #740	; 0x2e4
    51c0:	vld1.16	{d2[0]}, [r5 :16]
    51c4:	sub	r5, fp, #80	; 0x50
    51c8:	vshl.u64	q10, q10, q13
    51cc:	vld1.64	{d26-d27}, [r2 :128]
    51d0:	sub	r2, fp, #72	; 0x48
    51d4:	vshl.u64	q12, q12, q0
    51d8:	vshl.u64	q11, q11, q2
    51dc:	vld1.16	{d0[0]}, [r2 :16]
    51e0:	strh	r1, [fp, #-80]	; 0xffffffb0
    51e4:	vorr	q10, q12, q10
    51e8:	ldrh	r1, [r0, #18]
    51ec:	sub	r2, pc, #772	; 0x304
    51f0:	vorr	q10, q11, q10
    51f4:	vld1.64	{d24-d25}, [r2 :128]
    51f8:	vmovl.u8	q1, d2
    51fc:	vshl.u64	q13, q14, q13
    5200:	vmovl.u16	q1, d2
    5204:	vmovl.u8	q11, d0
    5208:	vorr	q10, q13, q10
    520c:	strh	r1, [fp, #-76]	; 0xffffffb4
    5210:	sub	r1, pc, #792	; 0x318
    5214:	ldrh	r2, [r0, #24]
    5218:	vmovl.u16	q11, d22
    521c:	vld1.64	{d28-d29}, [r1 :128]
    5220:	ldrh	r1, [r0, #22]
    5224:	sub	r3, pc, #796	; 0x31c
    5228:	vld1.16	{d0[0]}, [r5 :16]
    522c:	sub	r5, fp, #76	; 0x4c
    5230:	vshl.u64	q12, q15, q12
    5234:	vmovl.u32	q11, d22
    5238:	vld1.16	{d26[0]}, [r5 :16]
    523c:	vld1.64	{d30-d31}, [r3 :128]
    5240:	vorr	q10, q12, q10
    5244:	sub	r5, fp, #88	; 0x58
    5248:	strh	r2, [fp, #-88]	; 0xffffffa8
    524c:	strh	r1, [fp, #-84]	; 0xffffffac
    5250:	vshl.u64	q9, q9, q14
    5254:	vmovl.u8	q12, d0
    5258:	vmovl.u32	q0, d2
    525c:	ldrh	r1, [r0, #28]
    5260:	ldrh	r2, [r0, #26]
    5264:	sub	r3, pc, #844	; 0x34c
    5268:	vorr	q9, q9, q10
    526c:	vld1.16	{d28[0]}, [r5 :16]
    5270:	vshl.u64	q15, q8, q15
    5274:	vmovl.u8	q13, d26
    5278:	sub	r5, fp, #92	; 0x5c
    527c:	vld1.64	{d20-d21}, [r3 :128]
    5280:	sub	r3, fp, #84	; 0x54
    5284:	vorr	q15, q15, q9
    5288:	vmovl.u16	q9, d24
    528c:	vmovl.u16	q12, d26
    5290:	vld1.16	{d29[0]}, [r3 :16]
    5294:	vmovl.u32	q12, d24
    5298:	vmovl.u32	q9, d18
    529c:	strh	r2, [fp, #-92]	; 0xffffffa4
    52a0:	strh	r1, [sp, #96]	; 0x60
    52a4:	vmovl.u8	q8, d28
    52a8:	ldrh	r1, [r0, #32]
    52ac:	vshl.u64	q10, q0, q10
    52b0:	vmovl.u16	q8, d16
    52b4:	vorr	q10, q10, q15
    52b8:	vmovl.u8	q14, d29
    52bc:	vmovl.u32	q8, d16
    52c0:	vmovl.u16	q14, d28
    52c4:	vmovl.u32	q14, d28
    52c8:	strh	r1, [sp, #88]	; 0x58
    52cc:	ldrh	r1, [r0, #30]
    52d0:	sub	r2, pc, #936	; 0x3a8
    52d4:	sub	r3, pc, #924	; 0x39c
    52d8:	vld1.16	{d26[0]}, [r5 :16]
    52dc:	add	r5, sp, #80	; 0x50
    52e0:	vld1.64	{d0-d1}, [r3 :128]
    52e4:	vld1.64	{d2-d3}, [r2 :128]
    52e8:	add	r3, sp, #96	; 0x60
    52ec:	strh	r1, [sp, #92]	; 0x5c
    52f0:	vmovl.u8	q13, d26
    52f4:	ldrh	r1, [r0, #34]	; 0x22
    52f8:	vshl.u64	q11, q11, q0
    52fc:	vshl.u64	q12, q12, q1
    5300:	vmovl.u16	q13, d26
    5304:	vorr	q10, q11, q10
    5308:	vmovl.u32	q13, d26
    530c:	vorr	q10, q12, q10
    5310:	strh	r1, [sp, #84]	; 0x54
    5314:	ldrh	r1, [r0, #36]	; 0x24
    5318:	sub	r2, pc, #976	; 0x3d0
    531c:	vld1.16	{d30[0]}, [r3 :16]
    5320:	add	r3, sp, #88	; 0x58
    5324:	vld1.64	{d0-d1}, [r2 :128]
    5328:	add	r2, sp, #92	; 0x5c
    532c:	vld1.16	{d31[0]}, [r3 :16]
    5330:	vld1.16	{d22[0]}, [r2 :16]
    5334:	add	r2, sp, #84	; 0x54
    5338:	vld1.16	{d23[0]}, [r2 :16]
    533c:	strh	r1, [sp, #80]	; 0x50
    5340:	vmovl.u8	q1, d30
    5344:	ldrh	r1, [r0, #38]	; 0x26
    5348:	sub	r2, pc, #1008	; 0x3f0
    534c:	vshl.u64	q9, q9, q0
    5350:	vmovl.u8	q15, d31
    5354:	vld1.64	{d24-d25}, [r2 :128]
    5358:	sub	r2, pc, #1008	; 0x3f0
    535c:	sub	r3, pc, #996	; 0x3e4
    5360:	sub	r6, pc, #984	; 0x3d8
    5364:	vld1.16	{d6[0]}, [r5 :16]
    5368:	vorr	q9, q9, q10
    536c:	vmovl.u16	q10, d2
    5370:	vmovl.u8	q0, d22
    5374:	vmovl.u16	q15, d30
    5378:	add	r5, sp, #60	; 0x3c
    537c:	vld1.64	{d4-d5}, [r6 :128]
    5380:	vmovl.u8	q11, d23
    5384:	vmovl.u16	q0, d0
    5388:	vmovl.u32	q10, d20
    538c:	vmovl.u32	q0, d0
    5390:	strh	r1, [sp, #76]	; 0x4c
    5394:	ldrh	r6, [r0, #40]	; 0x28
    5398:	ldrh	r1, [r0, #42]	; 0x2a
    539c:	vshl.u64	q12, q14, q12
    53a0:	vld1.64	{d28-d29}, [r3 :128]
    53a4:	add	r3, sp, #76	; 0x4c
    53a8:	vshl.u64	q1, q8, q2
    53ac:	vorr	q9, q12, q9
    53b0:	vmovl.u8	q12, d6
    53b4:	vld1.64	{d6-d7}, [r2 :128]
    53b8:	vmovl.u16	q8, d22
    53bc:	vorr	q9, q1, q9
    53c0:	vmovl.u32	q8, d16
    53c4:	strh	r6, [sp, #72]	; 0x48
    53c8:	vshl.u64	q11, q13, q14
    53cc:	vmovl.u32	q13, d30
    53d0:	vld1.16	{d4[0]}, [r3 :16]
    53d4:	strh	r1, [sp, #68]	; 0x44
    53d8:	vorr	q11, q11, q9
    53dc:	vmovl.u16	q9, d24
    53e0:	vshl.u64	q13, q13, q3
    53e4:	ldrh	r1, [r0, #48]	; 0x30
    53e8:	sub	r2, pc, #896	; 0x380
    53ec:	sub	r3, pc, #884	; 0x374
    53f0:	vmovl.u32	q9, d18
    53f4:	vld1.64	{d28-d29}, [r3 :128]
    53f8:	add	r3, sp, #72	; 0x48
    53fc:	vld1.16	{d30[0]}, [r3 :16]
    5400:	vmovl.u8	q1, d4
    5404:	vld1.64	{d4-d5}, [r2 :128]
    5408:	add	r2, sp, #68	; 0x44
    540c:	vld1.16	{d24[0]}, [r2 :16]
    5410:	strh	r1, [sp, #56]	; 0x38
    5414:	ldrh	r1, [r0, #46]	; 0x2e
    5418:	ldrh	r2, [r0, #44]	; 0x2c
    541c:	sub	r3, pc, #916	; 0x394
    5420:	vshl.u64	q10, q10, q14
    5424:	vmovl.u8	q14, d30
    5428:	vorr	q10, q10, q11
    542c:	vld1.64	{d22-d23}, [r3 :128]
    5430:	vshl.u64	q15, q0, q2
    5434:	vmovl.u16	q0, d2
    5438:	vmovl.u16	q14, d28
    543c:	vorr	q10, q15, q10
    5440:	vmovl.u8	q12, d24
    5444:	vmovl.u32	q0, d0
    5448:	vmovl.u32	q14, d28
    544c:	strh	r2, [sp, #64]	; 0x40
    5450:	strh	r1, [sp, #60]	; 0x3c
    5454:	add	r2, sp, #64	; 0x40
    5458:	vorr	q10, q13, q10
    545c:	vmovl.u16	q12, d24
    5460:	ldrh	r1, [r0, #50]	; 0x32
    5464:	vld1.16	{d30[0]}, [r2 :16]
    5468:	vshl.u64	q8, q8, q11
    546c:	vorr	q8, q8, q10
    5470:	strh	r1, [sp, #52]	; 0x34
    5474:	add	r1, sp, #56	; 0x38
    5478:	vmovl.u8	q15, d30
    547c:	vld1.16	{d26[0]}, [r1 :16]
    5480:	add	r1, pc, #968	; 0x3c8
    5484:	add	r2, pc, #980	; 0x3d4
    5488:	add	r3, pc, #992	; 0x3e0
    548c:	vld1.16	{d22[0]}, [r5 :16]
    5490:	vmovl.u16	q15, d30
    5494:	vld1.64	{d2-d3}, [r3 :128]
    5498:	ldrh	r3, [r0, #52]	; 0x34
    549c:	vld1.64	{d4-d5}, [r2 :128]
    54a0:	add	r2, sp, #52	; 0x34
    54a4:	vmovl.u32	q15, d30
    54a8:	vld1.16	{d23[0]}, [r2 :16]
    54ac:	vmovl.u8	q10, d22
    54b0:	vmovl.u8	q13, d26
    54b4:	strh	r3, [sp, #48]	; 0x30
    54b8:	add	r2, pc, #960	; 0x3c0
    54bc:	vshl.u64	q9, q9, q1
    54c0:	vld1.64	{d2-d3}, [r1 :128]
    54c4:	ldrh	r1, [r0, #56]	; 0x38
    54c8:	add	r3, sp, #48	; 0x30
    54cc:	vshl.u64	q0, q0, q2
    54d0:	vmovl.u16	q10, d20
    54d4:	vmovl.u16	q13, d26
    54d8:	vld1.64	{d6-d7}, [r2 :128]
    54dc:	ldrh	r2, [r0, #54]	; 0x36
    54e0:	vorr	q8, q9, q8
    54e4:	vmovl.u8	q9, d23
    54e8:	vmovl.u32	q11, d24
    54ec:	vld1.16	{d24[0]}, [r3 :16]
    54f0:	vmovl.u32	q10, d20
    54f4:	vmovl.u32	q13, d26
    54f8:	vorr	q8, q0, q8
    54fc:	vmovl.u16	q9, d18
    5500:	vmovl.u32	q9, d18
    5504:	vshl.u64	q14, q14, q1
    5508:	strh	r2, [sp, #44]	; 0x2c
    550c:	strh	r1, [sp, #40]	; 0x28
    5510:	vorr	q8, q14, q8
    5514:	vshl.u64	q11, q11, q3
    5518:	vmovl.u8	q12, d24
    551c:	ldrh	r2, [r0, #58]	; 0x3a
    5520:	ldrh	r1, [r0, #60]	; 0x3c
    5524:	add	r3, pc, #868	; 0x364
    5528:	vorr	q8, q11, q8
    552c:	vmovl.u16	q12, d24
    5530:	vld1.64	{d28-d29}, [r3 :128]
    5534:	add	r3, sp, #44	; 0x2c
    5538:	vmovl.u32	q12, d24
    553c:	vld1.16	{d0[0]}, [r3 :16]
    5540:	strh	r2, [sp, #36]	; 0x24
    5544:	add	r2, pc, #852	; 0x354
    5548:	add	r3, pc, #864	; 0x360
    554c:	vld1.64	{d2-d3}, [r3 :128]
    5550:	add	r3, sp, #40	; 0x28
    5554:	vshl.u64	q14, q15, q14
    5558:	vld1.16	{d22[0]}, [r3 :16]
    555c:	strh	r1, [sp, #32]
    5560:	add	r1, sp, #36	; 0x24
    5564:	vmovl.u8	q15, d0
    5568:	vld1.64	{d0-d1}, [r2 :128]
    556c:	vorr	q8, q14, q8
    5570:	ldrh	r0, [r0, #62]	; 0x3e
    5574:	vld1.16	{d23[0]}, [r1 :16]
    5578:	vmovl.u16	q15, d30
    557c:	vmovl.u32	q15, d30
    5580:	vshl.u64	q10, q10, q1
    5584:	vshl.u64	q13, q13, q0
    5588:	vorr	q8, q10, q8
    558c:	vmovl.u8	q1, d22
    5590:	strh	r0, [sp, #28]
    5594:	add	r0, sp, #32
    5598:	vorr	q8, q13, q8
    559c:	vmovl.u16	q13, d2
    55a0:	vmovl.u8	q11, d23
    55a4:	vld1.16	{d28[0]}, [r0 :16]
    55a8:	add	r0, pc, #784	; 0x310
    55ac:	add	r1, pc, #796	; 0x31c
    55b0:	vmovl.u16	q11, d22
    55b4:	vld1.64	{d4-d5}, [r1 :128]
    55b8:	add	r1, sp, #28
    55bc:	vld1.64	{d0-d1}, [r0 :128]
    55c0:	vmovl.u32	q11, d22
    55c4:	vld1.16	{d20[0]}, [r1 :16]
    55c8:	add	r0, pc, #784	; 0x310
    55cc:	add	r1, pc, #796	; 0x31c
    55d0:	vmovl.u8	q14, d28
    55d4:	vshl.u64	q9, q9, q2
    55d8:	vshl.u64	q12, q12, q0
    55dc:	vld1.64	{d0-d1}, [r0 :128]
    55e0:	add	r0, pc, #792	; 0x318
    55e4:	vmovl.u16	q14, d28
    55e8:	vorr	q8, q9, q8
    55ec:	vld1.64	{d18-d19}, [r1 :128]
    55f0:	add	r1, pc, #792	; 0x318
    55f4:	add	r2, pc, #804	; 0x324
    55f8:	vmovl.u8	q10, d20
    55fc:	vmovl.u32	q14, d28
    5600:	vorr	q8, q12, q8
    5604:	vmovl.u32	q12, d26
    5608:	vld1.64	{d26-d27}, [r2 :128]
    560c:	vmovl.u16	q10, d20
    5610:	mov	r2, #1016	; 0x3f8
    5614:	vmovl.u32	q10, d20
    5618:	vshl.u64	q12, q12, q0
    561c:	vshl.u64	q9, q15, q9
    5620:	vld1.64	{d30-d31}, [r1 :128]
    5624:	vorr	q8, q9, q8
    5628:	vld1.64	{d18-d19}, [r0 :128]
    562c:	vshl.u64	q11, q11, q13
    5630:	mov	r0, #0
    5634:	vorr	q8, q12, q8
    5638:	strb	r0, [ip]
    563c:	vorr	q8, q11, q8
    5640:	ldr	r3, [pc, #748]	; 5934 <promiscuous_packet_search@@Base+0xb14>
    5644:	ldr	r6, [pc, #748]	; 5938 <promiscuous_packet_search@@Base+0xb18>
    5648:	ldr	r7, [pc, #748]	; 593c <promiscuous_packet_search@@Base+0xb1c>
    564c:	vshl.u64	q12, q14, q15
    5650:	vshl.u64	q9, q10, q9
    5654:	vorr	q8, q12, q8
    5658:	vorr	q8, q9, q8
    565c:	vext.8	q9, q8, q8, #8
    5660:	add	r3, pc, r3
    5664:	add	r6, pc, r6
    5668:	add	r7, pc, r7
    566c:	vorr	q8, q8, q9
    5670:	vmov.32	r1, d16[1]
    5674:	and	r2, r2, r1, lsr #22
    5678:	bic	r1, r1, #-33554432	; 0xfe000000
    567c:	ldr	r2, [r3, r2]!
    5680:	ldr	r3, [r3, #4]
    5684:	orr	r9, r3, r1
    5688:	movw	r1, #36246	; 0x8d96
    568c:	movt	r1, #33668	; 0x8384
    5690:	eor	r1, r9, r1
    5694:	uxtb	r3, r1
    5698:	and	r5, sl, r1, lsr #5
    569c:	ldr	r5, [r7, r5]!
    56a0:	ldr	r3, [r6, r3, lsl #3]!
    56a4:	eor	r3, r5, r3
    56a8:	vmov.32	r5, d16[0]
    56ac:	ldr	r7, [r7, #4]
    56b0:	orr	r2, r2, r5
    56b4:	ldr	r5, [pc, #644]	; 5940 <promiscuous_packet_search@@Base+0xb20>
    56b8:	eor	r2, r3, r2
    56bc:	and	r3, sl, r1, lsr #13
    56c0:	and	r1, sl, r1, lsr #21
    56c4:	add	r5, pc, r5
    56c8:	ldr	r3, [r5, r3]!
    56cc:	eor	r2, r2, r3
    56d0:	ldr	r3, [pc, #620]	; 5944 <promiscuous_packet_search@@Base+0xb24>
    56d4:	add	r3, pc, r3
    56d8:	ldr	r1, [r3, r1]!
    56dc:	eor	r1, r2, r1
    56e0:	movw	r2, #21756	; 0x54fc
    56e4:	ldr	r3, [r3, #4]
    56e8:	movt	r2, #48076	; 0xbbcc
    56ec:	eor	r1, r1, r2
    56f0:	ldr	r2, [r6, #4]
    56f4:	eor	r2, r7, r2
    56f8:	ldr	r7, [r5, #4]
    56fc:	eor	r2, r2, r7
    5700:	eor	r2, r2, r3
    5704:	orrs	r3, r1, r2
    5708:	lsr	r3, r9, #2
    570c:	str	r3, [sp, #12]
    5710:	beq	4e90 <promiscuous_packet_search@@Base+0x70>
    5714:	str	r1, [fp, #-40]	; 0xffffffd8
    5718:	str	r2, [fp, #-36]	; 0xffffffdc
    571c:	ldr	r7, [sp, #16]
    5720:	mov	r5, ip
    5724:	ldr	r0, [pc, #544]	; 594c <promiscuous_packet_search@@Base+0xb2c>
    5728:	ldr	r0, [pc, r0]
    572c:	cmp	r0, #0
    5730:	beq	57f0 <promiscuous_packet_search@@Base+0x9d0>
    5734:	movw	r3, #47810	; 0xbac2
    5738:	ldr	r0, [r0, #16]
    573c:	movt	r3, #40777	; 0x9f49
    5740:	mov	r6, r3
    5744:	add	r1, r1, r3
    5748:	movw	r3, #31161	; 0x79b9
    574c:	movt	r3, #40503	; 0x9e37
    5750:	add	r3, r2, r3
    5754:	add	r2, r2, r6
    5758:	sub	r1, r1, r3
    575c:	movw	r3, #63341	; 0xf76d
    5760:	movt	r3, #7
    5764:	eor	r1, r1, r3
    5768:	movw	r3, #48887	; 0xbef7
    576c:	sub	r2, r2, r1
    5770:	movt	r3, #65261	; 0xfeed
    5774:	eor	r2, r2, r1, lsl #8
    5778:	sub	r3, r3, r1
    577c:	sub	r3, r3, r2
    5780:	sub	r1, r1, r2
    5784:	eor	r3, r3, r2, lsr #13
    5788:	sub	r1, r1, r3
    578c:	sub	r2, r2, r3
    5790:	eor	r1, r1, r3, lsr #12
    5794:	sub	r2, r2, r1
    5798:	sub	r3, r3, r1
    579c:	eor	r2, r2, r1, lsl #16
    57a0:	sub	r3, r3, r2
    57a4:	sub	r1, r1, r2
    57a8:	eor	r3, r3, r2, lsr #5
    57ac:	sub	r1, r1, r3
    57b0:	sub	r2, r2, r3
    57b4:	eor	r1, r1, r3, lsr #3
    57b8:	sub	r2, r2, r1
    57bc:	eor	r2, r2, r1, lsl #10
    57c0:	sub	r1, r3, r1
    57c4:	sub	r1, r1, r2
    57c8:	eor	r1, r1, r2, lsr #15
    57cc:	ldm	r0, {r2, r3}
    57d0:	sub	r3, r3, #1
    57d4:	and	r1, r3, r1
    57d8:	add	r1, r1, r1, lsl #1
    57dc:	ldr	r1, [r2, r1, lsl #2]
    57e0:	cmp	r1, #0
    57e4:	ldrne	r0, [r0, #20]
    57e8:	subsne	sl, r1, r0
    57ec:	bne	4fa0 <promiscuous_packet_search@@Base+0x180>
    57f0:	mov	r0, #255	; 0xff
    57f4:	mov	ip, r5
    57f8:	strb	r0, [r5]
    57fc:	ldr	lr, [sp, #8]
    5800:	ldr	r3, [pc, #328]	; 5950 <promiscuous_packet_search@@Base+0xb30>
    5804:	add	r3, pc, r3
    5808:	ldr	r1, [sp, #20]
    580c:	uxtb	r0, r0
    5810:	cmp	r0, r1
    5814:	ble	5834 <promiscuous_packet_search@@Base+0xa14>
    5818:	add	r4, r4, #1
    581c:	cmp	r4, r7
    5820:	blt	50a0 <promiscuous_packet_search@@Base+0x280>
    5824:	mvn	r4, #0
    5828:	mov	r0, r4
    582c:	sub	sp, fp, #28
    5830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5834:	ldr	r0, [sp, #12]
    5838:	ldr	r1, [sp, #4]
    583c:	bic	r0, r0, #-16777216	; 0xff000000
    5840:	str	r0, [r1]
    5844:	mov	r0, r4
    5848:	sub	sp, fp, #28
    584c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5850:	andeq	r0, r0, r8, lsr #32
    5854:	andeq	r0, r0, r0
    5858:	andeq	r0, r0, r9, lsr #32
    585c:	andeq	r0, r0, r0
    5860:	andeq	r0, r0, r6, lsr #32
    5864:	andeq	r0, r0, r0
    5868:	andeq	r0, r0, r7, lsr #32
    586c:	andeq	r0, r0, r0
    5870:	andeq	r0, r0, r4, lsr #32
    5874:	andeq	r0, r0, r0
    5878:	andeq	r0, r0, r5, lsr #32
    587c:	andeq	r0, r0, r0
    5880:	andeq	r0, r0, sl, lsr #32
    5884:	andeq	r0, r0, r0
    5888:	andeq	r0, r0, fp, lsr #32
    588c:	andeq	r0, r0, r0
    5890:	andeq	r0, r0, ip, lsr #32
    5894:	andeq	r0, r0, r0
    5898:	andeq	r0, r0, sp, lsr #32
    589c:	andeq	r0, r0, r0
    58a0:	andeq	r0, r0, r0, lsr r0
    58a4:	andeq	r0, r0, r0
    58a8:	andeq	r0, r0, r1, lsr r0
    58ac:	andeq	r0, r0, r0
    58b0:	andeq	r0, r0, lr, lsr #32
    58b4:	andeq	r0, r0, r0
    58b8:	andeq	r0, r0, pc, lsr #32
    58bc:	andeq	r0, r0, r0
    58c0:	andeq	r0, r0, r4, lsr r0
    58c4:	andeq	r0, r0, r0
    58c8:	andeq	r0, r0, r5, lsr r0
    58cc:	andeq	r0, r0, r0
    58d0:	andeq	r0, r0, r2, lsr r0
    58d4:	andeq	r0, r0, r0
    58d8:	andeq	r0, r0, r3, lsr r0
    58dc:	andeq	r0, r0, r0
    58e0:	andeq	r0, r0, r8, lsr r0
    58e4:	andeq	r0, r0, r0
    58e8:	andeq	r0, r0, r9, lsr r0
    58ec:	andeq	r0, r0, r0
    58f0:	andeq	r0, r0, r6, lsr r0
    58f4:	andeq	r0, r0, r0
    58f8:	andeq	r0, r0, r7, lsr r0
    58fc:	andeq	r0, r0, r0
    5900:	andeq	r0, r0, lr, lsr r0
    5904:	andeq	r0, r0, r0
    5908:	andeq	r0, r0, pc, lsr r0
    590c:	andeq	r0, r0, r0
    5910:	andeq	r0, r0, ip, lsr r0
    5914:	andeq	r0, r0, r0
    5918:	andeq	r0, r0, sp, lsr r0
    591c:	andeq	r0, r0, r0
    5920:	andeq	r0, r0, sl, lsr r0
    5924:	andeq	r0, r0, r0
    5928:	andeq	r0, r0, fp, lsr r0
    592c:	andeq	r0, r0, r0
    5930:	andeq	lr, r0, r4, ror #12
    5934:	andeq	sp, r0, r8, lsl #30
    5938:	andeq	lr, r0, r4, lsl #6
    593c:	andeq	lr, r0, r0, lsl #22
    5940:	andeq	pc, r0, r4, lsr #5
    5944:	muleq	r0, r4, sl
    5948:	andeq	lr, r0, r0, asr r6
    594c:	andeq	r7, r2, ip, lsl sl
    5950:	andeq	sp, r0, r4, ror #25
    5954:	nop	{0}
    5958:	nop	{0}
    595c:	nop	{0}

00005960 <find_known_lap@@Base>:
    5960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5964:	add	fp, sp, #28
    5968:	sub	sp, sp, #148	; 0x94
    596c:	str	r0, [sp, #12]
    5970:	mov	r0, r2
    5974:	str	r3, [sp, #16]
    5978:	mov	r8, r1
    597c:	bl	4610 <btbb_gen_syncword@plt>
    5980:	str	r0, [sp, #8]
    5984:	mvn	r0, #0
    5988:	cmp	r8, #1
    598c:	str	r1, [sp, #4]
    5990:	blt	60e0 <find_known_lap@@Base+0x780>
    5994:	movw	r1, #21845	; 0x5555
    5998:	movw	ip, #13107	; 0x3333
    599c:	movw	sl, #3855	; 0xf0f
    59a0:	movw	lr, #257	; 0x101
    59a4:	mov	r3, #0
    59a8:	movt	r1, #21845	; 0x5555
    59ac:	movt	ip, #13107	; 0x3333
    59b0:	movt	sl, #3855	; 0xf0f
    59b4:	movt	lr, #257	; 0x101
    59b8:	ldr	r6, [sp, #12]
    59bc:	add	r0, sp, #20
    59c0:	ldrh	r9, [r6, r3]!
    59c4:	strh	r9, [sp, #20]
    59c8:	ldrh	r4, [r6, #2]
    59cc:	strh	r4, [fp, #-32]	; 0xffffffe0
    59d0:	ldrh	r7, [r6, #4]
    59d4:	vld1.16	{d16[0]}, [r0 :16]
    59d8:	ldrh	r4, [r6, #12]
    59dc:	ldrh	r2, [r6, #6]
    59e0:	sub	r0, fp, #32
    59e4:	strh	r7, [fp, #-36]	; 0xffffffdc
    59e8:	vmovl.u8	q10, d16
    59ec:	ldrh	r7, [r6, #10]
    59f0:	vmovl.u16	q10, d20
    59f4:	vmovl.u32	q10, d20
    59f8:	strh	r7, [fp, #-48]	; 0xffffffd0
    59fc:	vld1.16	{d17[0]}, [r0 :16]
    5a00:	strh	r2, [fp, #-40]	; 0xffffffd8
    5a04:	sub	r0, fp, #36	; 0x24
    5a08:	ldrh	r2, [r6, #8]
    5a0c:	vld1.16	{d18[0]}, [r0 :16]
    5a10:	sub	r0, fp, #48	; 0x30
    5a14:	vmovl.u8	q12, d17
    5a18:	strh	r2, [fp, #-44]	; 0xffffffd4
    5a1c:	strh	r4, [fp, #-52]	; 0xffffffcc
    5a20:	vmovl.u8	q13, d18
    5a24:	vmovl.u16	q12, d24
    5a28:	vld1.16	{d16[0]}, [r0 :16]
    5a2c:	sub	r0, fp, #40	; 0x28
    5a30:	ldrh	r2, [r6, #14]
    5a34:	vmovl.u32	q12, d24
    5a38:	vld1.16	{d22[0]}, [r0 :16]
    5a3c:	sub	r0, fp, #44	; 0x2c
    5a40:	vld1.16	{d17[0]}, [r0 :16]
    5a44:	sub	r0, fp, #52	; 0x34
    5a48:	vld1.16	{d23[0]}, [r0 :16]
    5a4c:	strh	r2, [fp, #-56]	; 0xffffffc8
    5a50:	vmovl.u8	q9, d16
    5a54:	ldrh	r2, [r6, #20]
    5a58:	ldrh	r4, [r6, #16]
    5a5c:	add	r7, pc, #972	; 0x3cc
    5a60:	add	r0, pc, #984	; 0x3d8
    5a64:	add	r5, pc, #996	; 0x3e4
    5a68:	vmovl.u8	q14, d22
    5a6c:	vmovl.u16	q9, d18
    5a70:	vmovl.u8	q15, d17
    5a74:	vld1.64	{d0-d1}, [r0 :128]
    5a78:	vmovl.u16	q14, d28
    5a7c:	vld1.64	{d4-d5}, [r7 :128]
    5a80:	vmovl.u32	q9, d18
    5a84:	vmovl.u8	q8, d23
    5a88:	vmovl.u16	q11, d26
    5a8c:	vld1.64	{d26-d27}, [r5 :128]
    5a90:	vmovl.u32	q14, d28
    5a94:	sub	r5, fp, #68	; 0x44
    5a98:	vmovl.u16	q15, d30
    5a9c:	vmovl.u32	q11, d22
    5aa0:	vmovl.u32	q15, d30
    5aa4:	vmovl.u16	q8, d16
    5aa8:	strh	r4, [fp, #-60]	; 0xffffffc4
    5aac:	add	r0, pc, #940	; 0x3ac
    5ab0:	sub	r4, fp, #56	; 0x38
    5ab4:	vmovl.u32	q8, d16
    5ab8:	vld1.16	{d2[0]}, [r4 :16]
    5abc:	vshl.u64	q12, q12, q0
    5ac0:	vshl.u64	q11, q11, q2
    5ac4:	vshl.u64	q10, q10, q13
    5ac8:	vld1.64	{d26-d27}, [r0 :128]
    5acc:	sub	r0, fp, #60	; 0x3c
    5ad0:	vld1.16	{d0[0]}, [r0 :16]
    5ad4:	strh	r2, [fp, #-68]	; 0xffffffbc
    5ad8:	vorr	q10, q12, q10
    5adc:	ldrh	r0, [r6, #18]
    5ae0:	add	r2, pc, #904	; 0x388
    5ae4:	vorr	q10, q11, q10
    5ae8:	vld1.64	{d24-d25}, [r2 :128]
    5aec:	vmovl.u8	q1, d2
    5af0:	vshl.u64	q13, q14, q13
    5af4:	vmovl.u16	q1, d2
    5af8:	vmovl.u8	q11, d0
    5afc:	vorr	q10, q13, q10
    5b00:	strh	r0, [fp, #-64]	; 0xffffffc0
    5b04:	add	r0, pc, #884	; 0x374
    5b08:	ldrh	r2, [r6, #24]
    5b0c:	vmovl.u16	q11, d22
    5b10:	vld1.64	{d28-d29}, [r0 :128]
    5b14:	ldrh	r0, [r6, #22]
    5b18:	add	r4, pc, #880	; 0x370
    5b1c:	vld1.16	{d0[0]}, [r5 :16]
    5b20:	sub	r5, fp, #64	; 0x40
    5b24:	vshl.u64	q12, q15, q12
    5b28:	vmovl.u32	q11, d22
    5b2c:	vld1.16	{d26[0]}, [r5 :16]
    5b30:	vld1.64	{d30-d31}, [r4 :128]
    5b34:	vorr	q10, q12, q10
    5b38:	sub	r5, fp, #76	; 0x4c
    5b3c:	strh	r2, [fp, #-76]	; 0xffffffb4
    5b40:	strh	r0, [fp, #-72]	; 0xffffffb8
    5b44:	vshl.u64	q9, q9, q14
    5b48:	vmovl.u8	q12, d0
    5b4c:	vmovl.u32	q0, d2
    5b50:	ldrh	r0, [r6, #28]
    5b54:	ldrh	r2, [r6, #26]
    5b58:	add	r4, pc, #832	; 0x340
    5b5c:	vorr	q9, q9, q10
    5b60:	vld1.16	{d28[0]}, [r5 :16]
    5b64:	vshl.u64	q15, q8, q15
    5b68:	vmovl.u8	q13, d26
    5b6c:	sub	r5, fp, #80	; 0x50
    5b70:	vld1.64	{d20-d21}, [r4 :128]
    5b74:	sub	r4, fp, #72	; 0x48
    5b78:	vorr	q15, q15, q9
    5b7c:	vmovl.u16	q9, d24
    5b80:	vmovl.u16	q12, d26
    5b84:	vld1.16	{d29[0]}, [r4 :16]
    5b88:	vmovl.u32	q12, d24
    5b8c:	vmovl.u32	q9, d18
    5b90:	strh	r2, [fp, #-80]	; 0xffffffb0
    5b94:	strh	r0, [fp, #-84]	; 0xffffffac
    5b98:	vmovl.u8	q8, d28
    5b9c:	ldrh	r0, [r6, #32]
    5ba0:	vshl.u64	q10, q0, q10
    5ba4:	vmovl.u16	q8, d16
    5ba8:	vorr	q10, q10, q15
    5bac:	vmovl.u8	q14, d29
    5bb0:	vmovl.u32	q8, d16
    5bb4:	vmovl.u16	q14, d28
    5bb8:	vmovl.u32	q14, d28
    5bbc:	strh	r0, [sp, #84]	; 0x54
    5bc0:	ldrh	r0, [r6, #30]
    5bc4:	add	r2, pc, #740	; 0x2e4
    5bc8:	add	r4, pc, #752	; 0x2f0
    5bcc:	vld1.16	{d26[0]}, [r5 :16]
    5bd0:	vld1.64	{d0-d1}, [r4 :128]
    5bd4:	vld1.64	{d2-d3}, [r2 :128]
    5bd8:	sub	r4, fp, #84	; 0x54
    5bdc:	strh	r0, [sp, #88]	; 0x58
    5be0:	vmovl.u8	q13, d26
    5be4:	ldrh	r0, [r6, #34]	; 0x22
    5be8:	vshl.u64	q11, q11, q0
    5bec:	vshl.u64	q12, q12, q1
    5bf0:	vmovl.u16	q13, d26
    5bf4:	vorr	q10, q11, q10
    5bf8:	vmovl.u32	q13, d26
    5bfc:	vorr	q10, q12, q10
    5c00:	strh	r0, [sp, #80]	; 0x50
    5c04:	ldrh	r0, [r6, #36]	; 0x24
    5c08:	add	r2, pc, #704	; 0x2c0
    5c0c:	vld1.16	{d30[0]}, [r4 :16]
    5c10:	add	r4, sp, #84	; 0x54
    5c14:	vld1.64	{d0-d1}, [r2 :128]
    5c18:	add	r2, sp, #88	; 0x58
    5c1c:	vld1.16	{d31[0]}, [r4 :16]
    5c20:	vld1.16	{d22[0]}, [r2 :16]
    5c24:	add	r2, sp, #80	; 0x50
    5c28:	vld1.16	{d23[0]}, [r2 :16]
    5c2c:	strh	r0, [sp, #76]	; 0x4c
    5c30:	vmovl.u8	q1, d30
    5c34:	ldrh	r0, [r6, #38]	; 0x26
    5c38:	add	r2, pc, #672	; 0x2a0
    5c3c:	vshl.u64	q9, q9, q0
    5c40:	vmovl.u8	q15, d31
    5c44:	vld1.64	{d24-d25}, [r2 :128]
    5c48:	add	r2, pc, #672	; 0x2a0
    5c4c:	add	r4, pc, #684	; 0x2ac
    5c50:	add	r5, pc, #696	; 0x2b8
    5c54:	vorr	q9, q9, q10
    5c58:	vmovl.u16	q10, d2
    5c5c:	vmovl.u8	q0, d22
    5c60:	vmovl.u16	q15, d30
    5c64:	vld1.64	{d4-d5}, [r5 :128]
    5c68:	add	r5, sp, #76	; 0x4c
    5c6c:	vmovl.u8	q11, d23
    5c70:	vmovl.u16	q0, d0
    5c74:	vmovl.u32	q10, d20
    5c78:	vld1.16	{d6[0]}, [r5 :16]
    5c7c:	vmovl.u32	q0, d0
    5c80:	strh	r0, [sp, #72]	; 0x48
    5c84:	ldrh	r5, [r6, #40]	; 0x28
    5c88:	ldrh	r0, [r6, #42]	; 0x2a
    5c8c:	vshl.u64	q12, q14, q12
    5c90:	vld1.64	{d28-d29}, [r4 :128]
    5c94:	add	r4, sp, #72	; 0x48
    5c98:	vshl.u64	q1, q8, q2
    5c9c:	vorr	q9, q12, q9
    5ca0:	vmovl.u16	q8, d22
    5ca4:	vmovl.u8	q12, d6
    5ca8:	vld1.64	{d6-d7}, [r2 :128]
    5cac:	vorr	q9, q1, q9
    5cb0:	vmovl.u32	q8, d16
    5cb4:	strh	r5, [sp, #68]	; 0x44
    5cb8:	vshl.u64	q11, q13, q14
    5cbc:	vmovl.u32	q13, d30
    5cc0:	add	r5, sp, #56	; 0x38
    5cc4:	vld1.16	{d4[0]}, [r4 :16]
    5cc8:	strh	r0, [sp, #64]	; 0x40
    5ccc:	vorr	q11, q11, q9
    5cd0:	vmovl.u16	q9, d24
    5cd4:	ldrh	r0, [r6, #48]	; 0x30
    5cd8:	add	r2, pc, #576	; 0x240
    5cdc:	add	r4, pc, #588	; 0x24c
    5ce0:	vshl.u64	q13, q13, q3
    5ce4:	vmovl.u32	q9, d18
    5ce8:	vld1.64	{d28-d29}, [r4 :128]
    5cec:	add	r4, sp, #68	; 0x44
    5cf0:	vld1.16	{d30[0]}, [r4 :16]
    5cf4:	vmovl.u8	q1, d4
    5cf8:	vld1.64	{d4-d5}, [r2 :128]
    5cfc:	add	r2, sp, #64	; 0x40
    5d00:	vld1.16	{d24[0]}, [r2 :16]
    5d04:	strh	r0, [sp, #52]	; 0x34
    5d08:	ldrh	r0, [r6, #46]	; 0x2e
    5d0c:	ldrh	r2, [r6, #44]	; 0x2c
    5d10:	add	r4, pc, #1000	; 0x3e8
    5d14:	vshl.u64	q10, q10, q14
    5d18:	vmovl.u8	q14, d30
    5d1c:	vorr	q10, q10, q11
    5d20:	vld1.64	{d22-d23}, [r4 :128]
    5d24:	vshl.u64	q15, q0, q2
    5d28:	vmovl.u16	q0, d2
    5d2c:	vmovl.u16	q14, d28
    5d30:	vorr	q10, q15, q10
    5d34:	vmovl.u8	q12, d24
    5d38:	vmovl.u32	q0, d0
    5d3c:	vmovl.u32	q14, d28
    5d40:	strh	r2, [sp, #60]	; 0x3c
    5d44:	strh	r0, [sp, #56]	; 0x38
    5d48:	add	r2, sp, #60	; 0x3c
    5d4c:	vorr	q10, q13, q10
    5d50:	vmovl.u16	q12, d24
    5d54:	ldrh	r0, [r6, #50]	; 0x32
    5d58:	vld1.16	{d30[0]}, [r2 :16]
    5d5c:	vshl.u64	q8, q8, q11
    5d60:	vorr	q8, q8, q10
    5d64:	strh	r0, [sp, #48]	; 0x30
    5d68:	add	r0, sp, #52	; 0x34
    5d6c:	vmovl.u8	q15, d30
    5d70:	vld1.16	{d26[0]}, [r0 :16]
    5d74:	add	r0, pc, #916	; 0x394
    5d78:	add	r2, pc, #928	; 0x3a0
    5d7c:	add	r4, pc, #940	; 0x3ac
    5d80:	vld1.16	{d22[0]}, [r5 :16]
    5d84:	vmovl.u16	q15, d30
    5d88:	vld1.64	{d2-d3}, [r4 :128]
    5d8c:	ldrh	r4, [r6, #52]	; 0x34
    5d90:	vld1.64	{d4-d5}, [r2 :128]
    5d94:	add	r2, sp, #48	; 0x30
    5d98:	vmovl.u32	q15, d30
    5d9c:	vld1.16	{d23[0]}, [r2 :16]
    5da0:	vmovl.u8	q10, d22
    5da4:	vmovl.u8	q13, d26
    5da8:	strh	r4, [sp, #44]	; 0x2c
    5dac:	add	r2, pc, #908	; 0x38c
    5db0:	vshl.u64	q9, q9, q1
    5db4:	vld1.64	{d2-d3}, [r0 :128]
    5db8:	ldrh	r0, [r6, #56]	; 0x38
    5dbc:	add	r4, sp, #44	; 0x2c
    5dc0:	vshl.u64	q0, q0, q2
    5dc4:	vmovl.u16	q10, d20
    5dc8:	vmovl.u16	q13, d26
    5dcc:	vld1.64	{d6-d7}, [r2 :128]
    5dd0:	ldrh	r2, [r6, #54]	; 0x36
    5dd4:	vorr	q8, q9, q8
    5dd8:	vmovl.u8	q9, d23
    5ddc:	vmovl.u32	q11, d24
    5de0:	vld1.16	{d24[0]}, [r4 :16]
    5de4:	vmovl.u32	q10, d20
    5de8:	vmovl.u32	q13, d26
    5dec:	vorr	q8, q0, q8
    5df0:	vmovl.u16	q9, d18
    5df4:	vmovl.u32	q9, d18
    5df8:	vshl.u64	q14, q14, q1
    5dfc:	strh	r2, [sp, #40]	; 0x28
    5e00:	strh	r0, [sp, #36]	; 0x24
    5e04:	vorr	q8, q14, q8
    5e08:	vshl.u64	q11, q11, q3
    5e0c:	vmovl.u8	q12, d24
    5e10:	ldrh	r2, [r6, #58]	; 0x3a
    5e14:	ldrh	r0, [r6, #60]	; 0x3c
    5e18:	add	r4, pc, #816	; 0x330
    5e1c:	vorr	q8, q11, q8
    5e20:	vmovl.u16	q12, d24
    5e24:	b	5f40 <find_known_lap@@Base+0x5e0>
    5e28:	nop	{0}
    5e2c:	nop	{0}
    5e30:	andeq	r0, r0, r4
    5e34:	andeq	r0, r0, r0
    5e38:	andeq	r0, r0, r5
    5e3c:	andeq	r0, r0, r0
    5e40:	andeq	r0, r0, r2
    5e44:	andeq	r0, r0, r0
    5e48:	andeq	r0, r0, r3
	...
    5e58:	andeq	r0, r0, r1
    5e5c:	andeq	r0, r0, r0
    5e60:	andeq	r0, r0, r6
    5e64:	andeq	r0, r0, r0
    5e68:	andeq	r0, r0, r7
    5e6c:	andeq	r0, r0, r0
    5e70:	andeq	r0, r0, r8
    5e74:	andeq	r0, r0, r0
    5e78:	andeq	r0, r0, r9
    5e7c:	andeq	r0, r0, r0
    5e80:	andeq	r0, r0, sl
    5e84:	andeq	r0, r0, r0
    5e88:	andeq	r0, r0, fp
    5e8c:	andeq	r0, r0, r0
    5e90:	andeq	r0, r0, ip
    5e94:	andeq	r0, r0, r0
    5e98:	andeq	r0, r0, sp
    5e9c:	andeq	r0, r0, r0
    5ea0:	andeq	r0, r0, lr
    5ea4:	andeq	r0, r0, r0
    5ea8:	andeq	r0, r0, pc
    5eac:	andeq	r0, r0, r0
    5eb0:	andeq	r0, r0, r2, lsl r0
    5eb4:	andeq	r0, r0, r0
    5eb8:	andeq	r0, r0, r3, lsl r0
    5ebc:	andeq	r0, r0, r0
    5ec0:	andeq	r0, r0, r0, lsl r0
    5ec4:	andeq	r0, r0, r0
    5ec8:	andeq	r0, r0, r1, lsl r0
    5ecc:	andeq	r0, r0, r0
    5ed0:	andeq	r0, r0, r4, lsl r0
    5ed4:	andeq	r0, r0, r0
    5ed8:	andeq	r0, r0, r5, lsl r0
    5edc:	andeq	r0, r0, r0
    5ee0:	andeq	r0, r0, r6, lsl r0
    5ee4:	andeq	r0, r0, r0
    5ee8:	andeq	r0, r0, r7, lsl r0
    5eec:	andeq	r0, r0, r0
    5ef0:	andeq	r0, r0, r0, lsr #32
    5ef4:	andeq	r0, r0, r0
    5ef8:	andeq	r0, r0, r1, lsr #32
    5efc:	andeq	r0, r0, r0
    5f00:	andeq	r0, r0, sl, lsl r0
    5f04:	andeq	r0, r0, r0
    5f08:	andeq	r0, r0, fp, lsl r0
    5f0c:	andeq	r0, r0, r0
    5f10:	andeq	r0, r0, r8, lsl r0
    5f14:	andeq	r0, r0, r0
    5f18:	andeq	r0, r0, r9, lsl r0
    5f1c:	andeq	r0, r0, r0
    5f20:	andeq	r0, r0, lr, lsl r0
    5f24:	andeq	r0, r0, r0
    5f28:	andeq	r0, r0, pc, lsl r0
    5f2c:	andeq	r0, r0, r0
    5f30:	andeq	r0, r0, ip, lsl r0
    5f34:	andeq	r0, r0, r0
    5f38:	andeq	r0, r0, sp, lsl r0
    5f3c:	andeq	r0, r0, r0
    5f40:	vld1.64	{d28-d29}, [r4 :128]
    5f44:	add	r4, sp, #40	; 0x28
    5f48:	vmovl.u32	q12, d24
    5f4c:	vld1.16	{d0[0]}, [r4 :16]
    5f50:	strh	r2, [sp, #32]
    5f54:	add	r2, pc, #516	; 0x204
    5f58:	add	r4, pc, #528	; 0x210
    5f5c:	vld1.64	{d2-d3}, [r4 :128]
    5f60:	add	r4, sp, #36	; 0x24
    5f64:	vshl.u64	q14, q15, q14
    5f68:	vld1.16	{d22[0]}, [r4 :16]
    5f6c:	strh	r0, [sp, #28]
    5f70:	add	r4, sp, #32
    5f74:	vmovl.u8	q15, d0
    5f78:	vld1.64	{d0-d1}, [r2 :128]
    5f7c:	vorr	q8, q14, q8
    5f80:	ldrh	r0, [r6, #62]	; 0x3e
    5f84:	vld1.16	{d23[0]}, [r4 :16]
    5f88:	vmovl.u16	q15, d30
    5f8c:	vmovl.u32	q15, d30
    5f90:	vshl.u64	q10, q10, q1
    5f94:	vshl.u64	q13, q13, q0
    5f98:	vorr	q8, q10, q8
    5f9c:	vmovl.u8	q1, d22
    5fa0:	strh	r0, [sp, #24]
    5fa4:	add	r0, sp, #28
    5fa8:	vorr	q8, q13, q8
    5fac:	vmovl.u16	q13, d2
    5fb0:	vmovl.u8	q11, d23
    5fb4:	vld1.16	{d28[0]}, [r0 :16]
    5fb8:	add	r0, pc, #448	; 0x1c0
    5fbc:	add	r2, pc, #460	; 0x1cc
    5fc0:	vmovl.u16	q11, d22
    5fc4:	vld1.64	{d4-d5}, [r2 :128]
    5fc8:	add	r2, sp, #24
    5fcc:	vld1.64	{d0-d1}, [r0 :128]
    5fd0:	vmovl.u32	q11, d22
    5fd4:	vld1.16	{d20[0]}, [r2 :16]
    5fd8:	add	r0, pc, #448	; 0x1c0
    5fdc:	add	r2, pc, #460	; 0x1cc
    5fe0:	vmovl.u8	q14, d28
    5fe4:	vshl.u64	q9, q9, q2
    5fe8:	vshl.u64	q12, q12, q0
    5fec:	vld1.64	{d0-d1}, [r0 :128]
    5ff0:	add	r0, pc, #456	; 0x1c8
    5ff4:	vmovl.u16	q14, d28
    5ff8:	vorr	q8, q9, q8
    5ffc:	vld1.64	{d18-d19}, [r2 :128]
    6000:	add	r2, pc, #456	; 0x1c8
    6004:	add	r4, pc, #468	; 0x1d4
    6008:	vmovl.u8	q10, d20
    600c:	vmovl.u32	q14, d28
    6010:	vorr	q8, q12, q8
    6014:	vmovl.u32	q12, d26
    6018:	vld1.64	{d26-d27}, [r4 :128]
    601c:	vmovl.u16	q10, d20
    6020:	ldr	r4, [sp, #8]
    6024:	vmovl.u32	q10, d20
    6028:	vshl.u64	q12, q12, q0
    602c:	vshl.u64	q9, q15, q9
    6030:	vld1.64	{d30-d31}, [r2 :128]
    6034:	ldr	r2, [sp, #4]
    6038:	vorr	q8, q9, q8
    603c:	vld1.64	{d18-d19}, [r0 :128]
    6040:	vshl.u64	q11, q11, q13
    6044:	vorr	q8, q12, q8
    6048:	vorr	q8, q11, q8
    604c:	vshl.u64	q12, q14, q15
    6050:	vshl.u64	q9, q10, q9
    6054:	vorr	q8, q12, q8
    6058:	vorr	q8, q9, q8
    605c:	vext.8	q9, q8, q8, #8
    6060:	vorr	q8, q8, q9
    6064:	vmov.32	r0, d16[1]
    6068:	eor	r0, r0, r2
    606c:	and	r2, r1, r0, lsr #1
    6070:	sub	r0, r0, r2
    6074:	and	r2, ip, r0, lsr #2
    6078:	and	r0, r0, ip
    607c:	add	r0, r0, r2
    6080:	vmov.32	r2, d16[0]
    6084:	eor	r2, r2, r4
    6088:	add	r0, r0, r0, lsr #4
    608c:	and	r4, r1, r2, lsr #1
    6090:	and	r0, r0, sl
    6094:	sub	r2, r2, r4
    6098:	mul	r0, r0, lr
    609c:	and	r4, ip, r2, lsr #2
    60a0:	and	r2, r2, ip
    60a4:	add	r2, r2, r4
    60a8:	add	r2, r2, r2, lsr #4
    60ac:	and	r2, r2, sl
    60b0:	mul	r2, r2, lr
    60b4:	lsr	r2, r2, #24
    60b8:	add	r0, r2, r0, lsr #24
    60bc:	ldr	r2, [fp, #8]
    60c0:	strb	r0, [r2]
    60c4:	ldr	r2, [sp, #16]
    60c8:	cmp	r0, r2
    60cc:	ble	60e8 <find_known_lap@@Base+0x788>
    60d0:	add	r3, r3, #1
    60d4:	cmp	r3, r8
    60d8:	blt	59b8 <find_known_lap@@Base+0x58>
    60dc:	mvn	r0, #0
    60e0:	sub	sp, fp, #28
    60e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60e8:	mov	r0, r3
    60ec:	sub	sp, fp, #28
    60f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60f4:	nop	{0}
    60f8:	nop	{0}
    60fc:	nop	{0}
    6100:	andeq	r0, r0, r2, lsr #32
    6104:	andeq	r0, r0, r0
    6108:	andeq	r0, r0, r3, lsr #32
    610c:	andeq	r0, r0, r0
    6110:	andeq	r0, r0, r8, lsr #32
    6114:	andeq	r0, r0, r0
    6118:	andeq	r0, r0, r9, lsr #32
    611c:	andeq	r0, r0, r0
    6120:	andeq	r0, r0, r6, lsr #32
    6124:	andeq	r0, r0, r0
    6128:	andeq	r0, r0, r7, lsr #32
    612c:	andeq	r0, r0, r0
    6130:	andeq	r0, r0, r4, lsr #32
    6134:	andeq	r0, r0, r0
    6138:	andeq	r0, r0, r5, lsr #32
    613c:	andeq	r0, r0, r0
    6140:	andeq	r0, r0, sl, lsr #32
    6144:	andeq	r0, r0, r0
    6148:	andeq	r0, r0, fp, lsr #32
    614c:	andeq	r0, r0, r0
    6150:	andeq	r0, r0, ip, lsr #32
    6154:	andeq	r0, r0, r0
    6158:	andeq	r0, r0, sp, lsr #32
    615c:	andeq	r0, r0, r0
    6160:	andeq	r0, r0, r0, lsr r0
    6164:	andeq	r0, r0, r0
    6168:	andeq	r0, r0, r1, lsr r0
    616c:	andeq	r0, r0, r0
    6170:	andeq	r0, r0, lr, lsr #32
    6174:	andeq	r0, r0, r0
    6178:	andeq	r0, r0, pc, lsr #32
    617c:	andeq	r0, r0, r0
    6180:	andeq	r0, r0, r4, lsr r0
    6184:	andeq	r0, r0, r0
    6188:	andeq	r0, r0, r5, lsr r0
    618c:	andeq	r0, r0, r0
    6190:	andeq	r0, r0, r2, lsr r0
    6194:	andeq	r0, r0, r0
    6198:	andeq	r0, r0, r3, lsr r0
    619c:	andeq	r0, r0, r0
    61a0:	andeq	r0, r0, r8, lsr r0
    61a4:	andeq	r0, r0, r0
    61a8:	andeq	r0, r0, r9, lsr r0
    61ac:	andeq	r0, r0, r0
    61b0:	andeq	r0, r0, r6, lsr r0
    61b4:	andeq	r0, r0, r0
    61b8:	andeq	r0, r0, r7, lsr r0
    61bc:	andeq	r0, r0, r0
    61c0:	andeq	r0, r0, lr, lsr r0
    61c4:	andeq	r0, r0, r0
    61c8:	andeq	r0, r0, pc, lsr r0
    61cc:	andeq	r0, r0, r0
    61d0:	andeq	r0, r0, ip, lsr r0
    61d4:	andeq	r0, r0, r0
    61d8:	andeq	r0, r0, sp, lsr r0
    61dc:	andeq	r0, r0, r0
    61e0:	andeq	r0, r0, sl, lsr r0
    61e4:	andeq	r0, r0, r0
    61e8:	andeq	r0, r0, fp, lsr r0
    61ec:	andeq	r0, r0, r0

000061f0 <btbb_find_ac@@Base>:
    61f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    61f4:	add	fp, sp, #28
    61f8:	sub	sp, sp, #148	; 0x94
    61fc:	mov	sl, r3
    6200:	mov	r9, r1
    6204:	mov	r8, r0
    6208:	cmn	r2, #1
    620c:	str	r2, [fp, #-32]	; 0xffffffe0
    6210:	beq	69d0 <btbb_find_ac@@Base+0x7e0>
    6214:	mov	r0, r2
    6218:	bl	4610 <btbb_gen_syncword@plt>
    621c:	mvn	r4, #0
    6220:	cmp	r9, #1
    6224:	str	r0, [sp, #8]
    6228:	str	r1, [sp, #4]
    622c:	blt	6a44 <btbb_find_ac@@Base+0x854>
    6230:	movw	r3, #13107	; 0x3333
    6234:	movw	ip, #257	; 0x101
    6238:	mov	r4, #0
    623c:	movt	r3, #13107	; 0x3333
    6240:	movt	ip, #257	; 0x101
    6244:	mov	r7, r8
    6248:	add	r1, sp, #12
    624c:	ldrh	lr, [r7, r4]!
    6250:	strh	lr, [sp, #12]
    6254:	ldrh	r2, [r7, #2]
    6258:	strh	r2, [fp, #-40]	; 0xffffffd8
    625c:	ldrh	r0, [r7, #4]
    6260:	vld1.16	{d16[0]}, [r1 :16]
    6264:	ldrh	r2, [r7, #12]
    6268:	ldrh	r5, [r7, #6]
    626c:	sub	r1, fp, #44	; 0x2c
    6270:	strh	r0, [fp, #-44]	; 0xffffffd4
    6274:	vmovl.u8	q10, d16
    6278:	ldrh	r0, [r7, #10]
    627c:	vmovl.u16	q10, d20
    6280:	vmovl.u32	q10, d20
    6284:	strh	r0, [fp, #-56]	; 0xffffffc8
    6288:	sub	r0, fp, #40	; 0x28
    628c:	vld1.16	{d17[0]}, [r0 :16]
    6290:	strh	r5, [fp, #-48]	; 0xffffffd0
    6294:	ldrh	r0, [r7, #8]
    6298:	vld1.16	{d18[0]}, [r1 :16]
    629c:	sub	r1, fp, #60	; 0x3c
    62a0:	vmovl.u8	q12, d17
    62a4:	strh	r0, [fp, #-52]	; 0xffffffcc
    62a8:	strh	r2, [fp, #-60]	; 0xffffffc4
    62ac:	sub	r0, fp, #56	; 0x38
    62b0:	vmovl.u8	q13, d18
    62b4:	vmovl.u16	q12, d24
    62b8:	vld1.16	{d16[0]}, [r0 :16]
    62bc:	sub	r0, fp, #48	; 0x30
    62c0:	vld1.16	{d23[0]}, [r1 :16]
    62c4:	vmovl.u32	q12, d24
    62c8:	vld1.16	{d22[0]}, [r0 :16]
    62cc:	sub	r0, fp, #52	; 0x34
    62d0:	vld1.16	{d17[0]}, [r0 :16]
    62d4:	ldrh	r0, [r7, #14]
    62d8:	vmovl.u8	q9, d16
    62dc:	vmovl.u8	q14, d22
    62e0:	vmovl.u16	q9, d18
    62e4:	strh	r0, [fp, #-64]	; 0xffffffc0
    62e8:	vmovl.u8	q15, d17
    62ec:	vmovl.u8	q8, d23
    62f0:	vmovl.u16	q11, d26
    62f4:	vmovl.u16	q14, d28
    62f8:	vmovl.u32	q9, d18
    62fc:	ldrh	r0, [r7, #20]
    6300:	ldrh	r2, [r7, #16]
    6304:	add	r5, pc, #964	; 0x3c4
    6308:	add	r1, pc, #976	; 0x3d0
    630c:	add	r6, pc, #988	; 0x3dc
    6310:	vmovl.u32	q14, d28
    6314:	vmovl.u32	q11, d22
    6318:	vmovl.u16	q15, d30
    631c:	vmovl.u16	q8, d16
    6320:	vld1.64	{d26-d27}, [r6 :128]
    6324:	vld1.64	{d0-d1}, [r1 :128]
    6328:	vld1.64	{d4-d5}, [r5 :128]
    632c:	sub	r6, fp, #76	; 0x4c
    6330:	vmovl.u32	q15, d30
    6334:	vmovl.u32	q8, d16
    6338:	strh	r2, [fp, #-68]	; 0xffffffbc
    633c:	add	r1, pc, #956	; 0x3bc
    6340:	sub	r2, fp, #64	; 0x40
    6344:	vshl.u64	q10, q10, q13
    6348:	vld1.64	{d26-d27}, [r1 :128]
    634c:	sub	r1, fp, #68	; 0x44
    6350:	vld1.16	{d2[0]}, [r2 :16]
    6354:	vshl.u64	q12, q12, q0
    6358:	vshl.u64	q11, q11, q2
    635c:	vld1.16	{d0[0]}, [r1 :16]
    6360:	strh	r0, [fp, #-76]	; 0xffffffb4
    6364:	vorr	q10, q12, q10
    6368:	ldrh	r0, [r7, #18]
    636c:	add	r1, pc, #924	; 0x39c
    6370:	vorr	q10, q11, q10
    6374:	vld1.64	{d24-d25}, [r1 :128]
    6378:	vshl.u64	q13, q14, q13
    637c:	vmovl.u8	q1, d2
    6380:	vmovl.u8	q11, d0
    6384:	vorr	q10, q13, q10
    6388:	vmovl.u16	q1, d2
    638c:	strh	r0, [fp, #-72]	; 0xffffffb8
    6390:	add	r0, pc, #904	; 0x388
    6394:	ldrh	r1, [r7, #24]
    6398:	vmovl.u16	q11, d22
    639c:	vld1.64	{d28-d29}, [r0 :128]
    63a0:	ldrh	r0, [r7, #22]
    63a4:	add	r2, pc, #900	; 0x384
    63a8:	vld1.16	{d0[0]}, [r6 :16]
    63ac:	sub	r6, fp, #72	; 0x48
    63b0:	vshl.u64	q12, q15, q12
    63b4:	vmovl.u32	q11, d22
    63b8:	vld1.16	{d26[0]}, [r6 :16]
    63bc:	vld1.64	{d30-d31}, [r2 :128]
    63c0:	vorr	q10, q12, q10
    63c4:	sub	r6, fp, #84	; 0x54
    63c8:	strh	r1, [fp, #-84]	; 0xffffffac
    63cc:	strh	r0, [fp, #-80]	; 0xffffffb0
    63d0:	vshl.u64	q9, q9, q14
    63d4:	vmovl.u8	q12, d0
    63d8:	vmovl.u32	q0, d2
    63dc:	ldrh	r0, [r7, #28]
    63e0:	ldrh	r1, [r7, #26]
    63e4:	add	r2, pc, #852	; 0x354
    63e8:	vorr	q9, q9, q10
    63ec:	vld1.16	{d28[0]}, [r6 :16]
    63f0:	vshl.u64	q15, q8, q15
    63f4:	vmovl.u8	q13, d26
    63f8:	add	r6, sp, #88	; 0x58
    63fc:	vld1.64	{d20-d21}, [r2 :128]
    6400:	sub	r2, fp, #80	; 0x50
    6404:	vorr	q15, q15, q9
    6408:	vmovl.u16	q9, d24
    640c:	vmovl.u16	q12, d26
    6410:	vld1.16	{d29[0]}, [r2 :16]
    6414:	vmovl.u32	q12, d24
    6418:	vmovl.u32	q9, d18
    641c:	strh	r1, [sp, #88]	; 0x58
    6420:	strh	r0, [sp, #84]	; 0x54
    6424:	vmovl.u8	q8, d28
    6428:	ldrh	r0, [r7, #32]
    642c:	vshl.u64	q10, q0, q10
    6430:	vmovl.u16	q8, d16
    6434:	vorr	q10, q10, q15
    6438:	vmovl.u8	q14, d29
    643c:	vmovl.u32	q8, d16
    6440:	vmovl.u16	q14, d28
    6444:	vmovl.u32	q14, d28
    6448:	strh	r0, [sp, #76]	; 0x4c
    644c:	ldrh	r0, [r7, #30]
    6450:	add	r1, pc, #760	; 0x2f8
    6454:	add	r2, pc, #772	; 0x304
    6458:	vld1.16	{d26[0]}, [r6 :16]
    645c:	vld1.64	{d0-d1}, [r2 :128]
    6460:	vld1.64	{d2-d3}, [r1 :128]
    6464:	add	r2, sp, #84	; 0x54
    6468:	strh	r0, [sp, #80]	; 0x50
    646c:	vmovl.u8	q13, d26
    6470:	ldrh	r0, [r7, #34]	; 0x22
    6474:	vshl.u64	q11, q11, q0
    6478:	vshl.u64	q12, q12, q1
    647c:	vmovl.u16	q13, d26
    6480:	vorr	q10, q11, q10
    6484:	vmovl.u32	q13, d26
    6488:	vorr	q10, q12, q10
    648c:	strh	r0, [sp, #72]	; 0x48
    6490:	ldrh	r0, [r7, #36]	; 0x24
    6494:	add	r1, pc, #724	; 0x2d4
    6498:	vld1.16	{d30[0]}, [r2 :16]
    649c:	add	r2, sp, #76	; 0x4c
    64a0:	vld1.64	{d0-d1}, [r1 :128]
    64a4:	add	r1, sp, #80	; 0x50
    64a8:	vld1.16	{d31[0]}, [r2 :16]
    64ac:	vld1.16	{d22[0]}, [r1 :16]
    64b0:	add	r1, sp, #72	; 0x48
    64b4:	vld1.16	{d23[0]}, [r1 :16]
    64b8:	strh	r0, [sp, #68]	; 0x44
    64bc:	vmovl.u8	q1, d30
    64c0:	ldrh	r0, [r7, #38]	; 0x26
    64c4:	add	r1, pc, #692	; 0x2b4
    64c8:	vshl.u64	q9, q9, q0
    64cc:	vmovl.u8	q15, d31
    64d0:	vld1.64	{d24-d25}, [r1 :128]
    64d4:	add	r1, pc, #692	; 0x2b4
    64d8:	add	r2, pc, #704	; 0x2c0
    64dc:	add	r6, pc, #716	; 0x2cc
    64e0:	vorr	q9, q9, q10
    64e4:	vmovl.u16	q10, d2
    64e8:	vmovl.u8	q0, d22
    64ec:	vmovl.u16	q15, d30
    64f0:	vld1.64	{d4-d5}, [r6 :128]
    64f4:	add	r6, sp, #68	; 0x44
    64f8:	vmovl.u8	q11, d23
    64fc:	vmovl.u16	q0, d0
    6500:	vmovl.u32	q10, d20
    6504:	vld1.16	{d6[0]}, [r6 :16]
    6508:	vmovl.u32	q0, d0
    650c:	strh	r0, [sp, #64]	; 0x40
    6510:	ldrh	r6, [r7, #40]	; 0x28
    6514:	ldrh	r0, [r7, #42]	; 0x2a
    6518:	vshl.u64	q12, q14, q12
    651c:	vld1.64	{d28-d29}, [r2 :128]
    6520:	add	r2, sp, #64	; 0x40
    6524:	vshl.u64	q1, q8, q2
    6528:	vorr	q9, q12, q9
    652c:	vmovl.u16	q8, d22
    6530:	vmovl.u8	q12, d6
    6534:	vld1.64	{d6-d7}, [r1 :128]
    6538:	vorr	q9, q1, q9
    653c:	vmovl.u32	q8, d16
    6540:	strh	r6, [sp, #60]	; 0x3c
    6544:	vshl.u64	q11, q13, q14
    6548:	vmovl.u32	q13, d30
    654c:	add	r6, sp, #48	; 0x30
    6550:	vld1.16	{d4[0]}, [r2 :16]
    6554:	strh	r0, [sp, #56]	; 0x38
    6558:	vorr	q11, q11, q9
    655c:	vmovl.u16	q9, d24
    6560:	ldrh	r0, [r7, #48]	; 0x30
    6564:	add	r1, pc, #596	; 0x254
    6568:	add	r2, pc, #608	; 0x260
    656c:	vshl.u64	q13, q13, q3
    6570:	vmovl.u32	q9, d18
    6574:	vld1.64	{d28-d29}, [r2 :128]
    6578:	add	r2, sp, #60	; 0x3c
    657c:	vld1.16	{d30[0]}, [r2 :16]
    6580:	vmovl.u8	q1, d4
    6584:	vld1.64	{d4-d5}, [r1 :128]
    6588:	add	r1, sp, #56	; 0x38
    658c:	vld1.16	{d24[0]}, [r1 :16]
    6590:	strh	r0, [sp, #44]	; 0x2c
    6594:	ldrh	r0, [r7, #46]	; 0x2e
    6598:	ldrh	r1, [r7, #44]	; 0x2c
    659c:	add	r2, pc, #572	; 0x23c
    65a0:	vshl.u64	q10, q10, q14
    65a4:	vmovl.u8	q14, d30
    65a8:	vorr	q10, q10, q11
    65ac:	vld1.64	{d22-d23}, [r2 :128]
    65b0:	vshl.u64	q15, q0, q2
    65b4:	vmovl.u16	q0, d2
    65b8:	vmovl.u16	q14, d28
    65bc:	vorr	q10, q15, q10
    65c0:	vmovl.u8	q12, d24
    65c4:	vmovl.u32	q0, d0
    65c8:	vmovl.u32	q14, d28
    65cc:	strh	r1, [sp, #52]	; 0x34
    65d0:	strh	r0, [sp, #48]	; 0x30
    65d4:	add	r1, sp, #52	; 0x34
    65d8:	vorr	q10, q13, q10
    65dc:	vmovl.u16	q12, d24
    65e0:	ldrh	r0, [r7, #50]	; 0x32
    65e4:	vld1.16	{d30[0]}, [r1 :16]
    65e8:	vshl.u64	q8, q8, q11
    65ec:	vorr	q8, q8, q10
    65f0:	strh	r0, [sp, #40]	; 0x28
    65f4:	add	r0, sp, #44	; 0x2c
    65f8:	vmovl.u8	q15, d30
    65fc:	vld1.16	{d26[0]}, [r0 :16]
    6600:	add	r0, pc, #488	; 0x1e8
    6604:	add	r1, pc, #500	; 0x1f4
    6608:	add	r2, pc, #512	; 0x200
    660c:	vld1.16	{d22[0]}, [r6 :16]
    6610:	vmovl.u16	q15, d30
    6614:	vld1.64	{d2-d3}, [r2 :128]
    6618:	ldrh	r2, [r7, #52]	; 0x34
    661c:	vld1.64	{d4-d5}, [r1 :128]
    6620:	add	r1, sp, #40	; 0x28
    6624:	vmovl.u32	q15, d30
    6628:	vld1.16	{d23[0]}, [r1 :16]
    662c:	vmovl.u8	q10, d22
    6630:	vmovl.u8	q13, d26
    6634:	strh	r2, [sp, #36]	; 0x24
    6638:	add	r1, pc, #480	; 0x1e0
    663c:	vshl.u64	q9, q9, q1
    6640:	vld1.64	{d2-d3}, [r0 :128]
    6644:	ldrh	r0, [r7, #56]	; 0x38
    6648:	add	r2, sp, #36	; 0x24
    664c:	vshl.u64	q0, q0, q2
    6650:	vmovl.u16	q10, d20
    6654:	vmovl.u16	q13, d26
    6658:	vld1.64	{d6-d7}, [r1 :128]
    665c:	ldrh	r1, [r7, #54]	; 0x36
    6660:	vorr	q8, q9, q8
    6664:	vmovl.u8	q9, d23
    6668:	vmovl.u32	q11, d24
    666c:	vld1.16	{d24[0]}, [r2 :16]
    6670:	vmovl.u32	q10, d20
    6674:	vmovl.u32	q13, d26
    6678:	vorr	q8, q0, q8
    667c:	vmovl.u16	q9, d18
    6680:	vmovl.u32	q9, d18
    6684:	vshl.u64	q14, q14, q1
    6688:	strh	r1, [sp, #32]
    668c:	strh	r0, [sp, #28]
    6690:	vorr	q8, q14, q8
    6694:	vshl.u64	q11, q11, q3
    6698:	vmovl.u8	q12, d24
    669c:	ldrh	r1, [r7, #58]	; 0x3a
    66a0:	ldrh	r0, [r7, #60]	; 0x3c
    66a4:	add	r2, pc, #996	; 0x3e4
    66a8:	vorr	q8, q11, q8
    66ac:	vmovl.u16	q12, d24
    66b0:	vld1.64	{d28-d29}, [r2 :128]
    66b4:	add	r2, sp, #32
    66b8:	vmovl.u32	q12, d24
    66bc:	vld1.16	{d0[0]}, [r2 :16]
    66c0:	strh	r1, [sp, #24]
    66c4:	add	r1, pc, #980	; 0x3d4
    66c8:	add	r2, pc, #992	; 0x3e0
    66cc:	b	6830 <btbb_find_ac@@Base+0x640>
    66d0:	andeq	r0, r0, r4
    66d4:	andeq	r0, r0, r0
    66d8:	andeq	r0, r0, r5
    66dc:	andeq	r0, r0, r0
    66e0:	andeq	r0, r0, r2
    66e4:	andeq	r0, r0, r0
    66e8:	andeq	r0, r0, r3
	...
    66f8:	andeq	r0, r0, r1
    66fc:	andeq	r0, r0, r0
    6700:	andeq	r0, r0, r6
    6704:	andeq	r0, r0, r0
    6708:	andeq	r0, r0, r7
    670c:	andeq	r0, r0, r0
    6710:	andeq	r0, r0, r8
    6714:	andeq	r0, r0, r0
    6718:	andeq	r0, r0, r9
    671c:	andeq	r0, r0, r0
    6720:	andeq	r0, r0, sl
    6724:	andeq	r0, r0, r0
    6728:	andeq	r0, r0, fp
    672c:	andeq	r0, r0, r0
    6730:	andeq	r0, r0, ip
    6734:	andeq	r0, r0, r0
    6738:	andeq	r0, r0, sp
    673c:	andeq	r0, r0, r0
    6740:	andeq	r0, r0, lr
    6744:	andeq	r0, r0, r0
    6748:	andeq	r0, r0, pc
    674c:	andeq	r0, r0, r0
    6750:	andeq	r0, r0, r2, lsl r0
    6754:	andeq	r0, r0, r0
    6758:	andeq	r0, r0, r3, lsl r0
    675c:	andeq	r0, r0, r0
    6760:	andeq	r0, r0, r0, lsl r0
    6764:	andeq	r0, r0, r0
    6768:	andeq	r0, r0, r1, lsl r0
    676c:	andeq	r0, r0, r0
    6770:	andeq	r0, r0, r4, lsl r0
    6774:	andeq	r0, r0, r0
    6778:	andeq	r0, r0, r5, lsl r0
    677c:	andeq	r0, r0, r0
    6780:	andeq	r0, r0, r6, lsl r0
    6784:	andeq	r0, r0, r0
    6788:	andeq	r0, r0, r7, lsl r0
    678c:	andeq	r0, r0, r0
    6790:	andeq	r0, r0, r0, lsr #32
    6794:	andeq	r0, r0, r0
    6798:	andeq	r0, r0, r1, lsr #32
    679c:	andeq	r0, r0, r0
    67a0:	andeq	r0, r0, sl, lsl r0
    67a4:	andeq	r0, r0, r0
    67a8:	andeq	r0, r0, fp, lsl r0
    67ac:	andeq	r0, r0, r0
    67b0:	andeq	r0, r0, r8, lsl r0
    67b4:	andeq	r0, r0, r0
    67b8:	andeq	r0, r0, r9, lsl r0
    67bc:	andeq	r0, r0, r0
    67c0:	andeq	r0, r0, lr, lsl r0
    67c4:	andeq	r0, r0, r0
    67c8:	andeq	r0, r0, pc, lsl r0
    67cc:	andeq	r0, r0, r0
    67d0:	andeq	r0, r0, ip, lsl r0
    67d4:	andeq	r0, r0, r0
    67d8:	andeq	r0, r0, sp, lsl r0
    67dc:	andeq	r0, r0, r0
    67e0:	andeq	r0, r0, r2, lsr #32
    67e4:	andeq	r0, r0, r0
    67e8:	andeq	r0, r0, r3, lsr #32
    67ec:	andeq	r0, r0, r0
    67f0:	andeq	r0, r0, r8, lsr #32
    67f4:	andeq	r0, r0, r0
    67f8:	andeq	r0, r0, r9, lsr #32
    67fc:	andeq	r0, r0, r0
    6800:	andeq	r0, r0, r6, lsr #32
    6804:	andeq	r0, r0, r0
    6808:	andeq	r0, r0, r7, lsr #32
    680c:	andeq	r0, r0, r0
    6810:	andeq	r0, r0, r4, lsr #32
    6814:	andeq	r0, r0, r0
    6818:	andeq	r0, r0, r5, lsr #32
    681c:	andeq	r0, r0, r0
    6820:	andeq	r0, r0, sl, lsr #32
    6824:	andeq	r0, r0, r0
    6828:	andeq	r0, r0, fp, lsr #32
    682c:	andeq	r0, r0, r0
    6830:	vld1.64	{d2-d3}, [r2 :128]
    6834:	add	r2, sp, #28
    6838:	vshl.u64	q14, q15, q14
    683c:	vld1.16	{d22[0]}, [r2 :16]
    6840:	strh	r0, [sp, #20]
    6844:	add	r2, sp, #24
    6848:	vmovl.u8	q15, d0
    684c:	vld1.64	{d0-d1}, [r1 :128]
    6850:	vorr	q8, q14, q8
    6854:	ldrh	r0, [r7, #62]	; 0x3e
    6858:	vld1.16	{d23[0]}, [r2 :16]
    685c:	vmovl.u16	q15, d30
    6860:	vmovl.u32	q15, d30
    6864:	vshl.u64	q10, q10, q1
    6868:	vshl.u64	q13, q13, q0
    686c:	vorr	q8, q10, q8
    6870:	vmovl.u8	q1, d22
    6874:	strh	r0, [sp, #16]
    6878:	add	r0, sp, #20
    687c:	vorr	q8, q13, q8
    6880:	vmovl.u16	q13, d2
    6884:	vmovl.u8	q11, d23
    6888:	vld1.16	{d28[0]}, [r0 :16]
    688c:	add	r0, pc, #556	; 0x22c
    6890:	add	r1, pc, #568	; 0x238
    6894:	vmovl.u16	q11, d22
    6898:	vld1.64	{d4-d5}, [r1 :128]
    689c:	add	r1, sp, #16
    68a0:	vld1.64	{d0-d1}, [r0 :128]
    68a4:	vmovl.u32	q11, d22
    68a8:	vld1.16	{d20[0]}, [r1 :16]
    68ac:	add	r0, pc, #556	; 0x22c
    68b0:	add	r1, pc, #568	; 0x238
    68b4:	vmovl.u8	q14, d28
    68b8:	vshl.u64	q9, q9, q2
    68bc:	vshl.u64	q12, q12, q0
    68c0:	vld1.64	{d0-d1}, [r0 :128]
    68c4:	add	r0, pc, #564	; 0x234
    68c8:	vmovl.u16	q14, d28
    68cc:	vorr	q8, q9, q8
    68d0:	vld1.64	{d18-d19}, [r1 :128]
    68d4:	add	r1, pc, #564	; 0x234
    68d8:	add	r2, pc, #576	; 0x240
    68dc:	vmovl.u8	q10, d20
    68e0:	vmovl.u32	q14, d28
    68e4:	vorr	q8, q12, q8
    68e8:	vmovl.u32	q12, d26
    68ec:	vld1.64	{d26-d27}, [r2 :128]
    68f0:	vmovl.u16	q10, d20
    68f4:	ldr	r2, [sp, #8]
    68f8:	vmovl.u32	q10, d20
    68fc:	vshl.u64	q12, q12, q0
    6900:	vshl.u64	q9, q15, q9
    6904:	vld1.64	{d30-d31}, [r1 :128]
    6908:	ldr	r1, [sp, #4]
    690c:	vorr	q8, q9, q8
    6910:	vld1.64	{d18-d19}, [r0 :128]
    6914:	vshl.u64	q11, q11, q13
    6918:	vorr	q8, q12, q8
    691c:	vorr	q8, q11, q8
    6920:	vshl.u64	q12, q14, q15
    6924:	vshl.u64	q9, q10, q9
    6928:	vorr	q8, q12, q8
    692c:	vorr	q8, q9, q8
    6930:	vext.8	q9, q8, q8, #8
    6934:	vorr	q8, q8, q9
    6938:	vmov.32	r0, d16[1]
    693c:	eor	r0, r0, r1
    6940:	movw	r1, #21845	; 0x5555
    6944:	movt	r1, #21845	; 0x5555
    6948:	mov	r7, r1
    694c:	and	r1, r1, r0, lsr #1
    6950:	sub	r0, r0, r1
    6954:	and	r1, r3, r0, lsr #2
    6958:	and	r0, r0, r3
    695c:	add	r0, r0, r1
    6960:	movw	r1, #3855	; 0xf0f
    6964:	movt	r1, #3855	; 0xf0f
    6968:	add	r0, r0, r0, lsr #4
    696c:	and	r0, r0, r1
    6970:	mov	r6, r1
    6974:	vmov.32	r1, d16[0]
    6978:	eor	r1, r1, r2
    697c:	mul	r0, r0, ip
    6980:	and	r2, r7, r1, lsr #1
    6984:	sub	r1, r1, r2
    6988:	and	r2, r3, r1, lsr #2
    698c:	and	r1, r1, r3
    6990:	add	r1, r1, r2
    6994:	add	r1, r1, r1, lsr #4
    6998:	and	r1, r1, r6
    699c:	mul	r1, r1, ip
    69a0:	lsr	r1, r1, #24
    69a4:	add	r7, r1, r0, lsr #24
    69a8:	cmp	r7, sl
    69ac:	ble	6a50 <btbb_find_ac@@Base+0x860>
    69b0:	add	r4, r4, #1
    69b4:	cmp	r4, r9
    69b8:	blt	6244 <btbb_find_ac@@Base+0x54>
    69bc:	strb	r7, [fp, #-33]	; 0xffffffdf
    69c0:	mvn	r4, #0
    69c4:	mov	r0, r4
    69c8:	sub	sp, fp, #28
    69cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    69d0:	sub	r0, fp, #33	; 0x21
    69d4:	sub	r2, fp, #32
    69d8:	mov	r1, r9
    69dc:	mov	r3, sl
    69e0:	str	r0, [sp]
    69e4:	mov	r0, r8
    69e8:	bl	47c0 <promiscuous_packet_search@plt>
    69ec:	mov	r4, r0
    69f0:	cmp	r4, #0
    69f4:	blt	6a44 <btbb_find_ac@@Base+0x854>
    69f8:	ldr	r6, [fp, #8]
    69fc:	ldr	r5, [r6]
    6a00:	cmp	r5, #0
    6a04:	bne	6a2c <btbb_find_ac@@Base+0x83c>
    6a08:	mov	r0, #1
    6a0c:	mov	r1, #5952	; 0x1740
    6a10:	mov	r7, #1
    6a14:	bl	44cc <calloc@plt>
    6a18:	mov	r5, r0
    6a1c:	cmp	r0, #0
    6a20:	beq	6a60 <btbb_find_ac@@Base+0x870>
    6a24:	str	r7, [r5]
    6a28:	str	r5, [r6]
    6a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a30:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    6a34:	mov	r2, #1
    6a38:	str	r2, [r5, #4]
    6a3c:	strb	r1, [r5, #2820]	; 0xb04
    6a40:	str	r0, [r5, #12]
    6a44:	mov	r0, r4
    6a48:	sub	sp, fp, #28
    6a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a50:	strb	r7, [fp, #-33]	; 0xffffffdf
    6a54:	cmp	r4, #0
    6a58:	bge	69f8 <btbb_find_ac@@Base+0x808>
    6a5c:	b	6a44 <btbb_find_ac@@Base+0x854>
    6a60:	ldr	r0, [pc, #200]	; 6b30 <btbb_find_ac@@Base+0x940>
    6a64:	mov	r1, #25
    6a68:	mov	r2, #1
    6a6c:	ldr	r0, [pc, r0]
    6a70:	ldr	r3, [r0]
    6a74:	ldr	r0, [pc, #184]	; 6b34 <btbb_find_ac@@Base+0x944>
    6a78:	add	r0, pc, r0
    6a7c:	bl	4604 <fwrite@plt>
    6a80:	b	6a28 <btbb_find_ac@@Base+0x838>
    6a84:	nop	{0}
    6a88:	nop	{0}
    6a8c:	nop	{0}
    6a90:	andeq	r0, r0, ip, lsr #32
    6a94:	andeq	r0, r0, r0
    6a98:	andeq	r0, r0, sp, lsr #32
    6a9c:	andeq	r0, r0, r0
    6aa0:	andeq	r0, r0, r0, lsr r0
    6aa4:	andeq	r0, r0, r0
    6aa8:	andeq	r0, r0, r1, lsr r0
    6aac:	andeq	r0, r0, r0
    6ab0:	andeq	r0, r0, lr, lsr #32
    6ab4:	andeq	r0, r0, r0
    6ab8:	andeq	r0, r0, pc, lsr #32
    6abc:	andeq	r0, r0, r0
    6ac0:	andeq	r0, r0, r4, lsr r0
    6ac4:	andeq	r0, r0, r0
    6ac8:	andeq	r0, r0, r5, lsr r0
    6acc:	andeq	r0, r0, r0
    6ad0:	andeq	r0, r0, r2, lsr r0
    6ad4:	andeq	r0, r0, r0
    6ad8:	andeq	r0, r0, r3, lsr r0
    6adc:	andeq	r0, r0, r0
    6ae0:	andeq	r0, r0, r8, lsr r0
    6ae4:	andeq	r0, r0, r0
    6ae8:	andeq	r0, r0, r9, lsr r0
    6aec:	andeq	r0, r0, r0
    6af0:	andeq	r0, r0, r6, lsr r0
    6af4:	andeq	r0, r0, r0
    6af8:	andeq	r0, r0, r7, lsr r0
    6afc:	andeq	r0, r0, r0
    6b00:	andeq	r0, r0, lr, lsr r0
    6b04:	andeq	r0, r0, r0
    6b08:	andeq	r0, r0, pc, lsr r0
    6b0c:	andeq	r0, r0, r0
    6b10:	andeq	r0, r0, ip, lsr r0
    6b14:	andeq	r0, r0, r0
    6b18:	andeq	r0, r0, sp, lsr r0
    6b1c:	andeq	r0, r0, r0
    6b20:	andeq	r0, r0, sl, lsr r0
    6b24:	andeq	r0, r0, r0
    6b28:	andeq	r0, r0, fp, lsr r0
    6b2c:	andeq	r0, r0, r0
    6b30:			; <UNDEFINED> instruction: 0x000266b4
    6b34:	andeq	ip, r0, r9, lsl r9

00006b38 <btbb_packet_set_data@@Base>:
    6b38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6b3c:	add	fp, sp, #24
    6b40:	ldr	lr, [fp, #8]
    6b44:	movw	ip, #3125	; 0xc35
    6b48:	cmp	r2, ip
    6b4c:	movlt	ip, r2
    6b50:	cmp	r2, #1
    6b54:	blt	6be0 <btbb_packet_set_data@@Base+0xa8>
    6b58:	cmp	ip, #1
    6b5c:	mov	r4, #1
    6b60:	mov	r6, #1
    6b64:	mov	r2, #0
    6b68:	movgt	r4, ip
    6b6c:	cmp	r4, #16
    6b70:	bcc	6bc4 <btbb_packet_set_data@@Base+0x8c>
    6b74:	cmp	ip, #1
    6b78:	movw	r8, #2824	; 0xb08
    6b7c:	movgt	r6, ip
    6b80:	add	r5, r0, r8
    6b84:	add	r7, r1, r6
    6b88:	cmp	r5, r7
    6b8c:	bcs	6ba0 <btbb_packet_set_data@@Base+0x68>
    6b90:	add	r6, r0, r6
    6b94:	add	r6, r6, r8
    6b98:	cmp	r6, r1
    6b9c:	bhi	6bc4 <btbb_packet_set_data@@Base+0x8c>
    6ba0:	bic	r2, r4, #-2147483633	; 0x8000000f
    6ba4:	mov	r7, r1
    6ba8:	mov	r6, r2
    6bac:	vld1.8	{d16-d17}, [r7]!
    6bb0:	subs	r6, r6, #16
    6bb4:	vst1.8	{d16-d17}, [r5]!
    6bb8:	bne	6bac <btbb_packet_set_data@@Base+0x74>
    6bbc:	cmp	r4, r2
    6bc0:	beq	6be0 <btbb_packet_set_data@@Base+0xa8>
    6bc4:	movw	r4, #2824	; 0xb08
    6bc8:	add	r4, r0, r4
    6bcc:	ldrb	r5, [r1, r2]
    6bd0:	strb	r5, [r4, r2]
    6bd4:	add	r2, r2, #1
    6bd8:	cmp	r2, ip
    6bdc:	blt	6bcc <btbb_packet_set_data@@Base+0x94>
    6be0:	movw	r1, #2822	; 0xb06
    6be4:	strh	ip, [r0, r1]
    6be8:	lsr	r1, lr, #1
    6bec:	strb	r3, [r0, #8]
    6bf0:	str	r1, [r0, #2816]	; 0xb00
    6bf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00006bf8 <btbb_packet_get_flag@@Base>:
    6bf8:	ldr	r0, [r0, #4]
    6bfc:	mov	r2, #1
    6c00:	and	r0, r0, r2, lsl r1
    6c04:	cmp	r0, #0
    6c08:	movwne	r0, #1
    6c0c:	bx	lr

00006c10 <btbb_get_symbols@@Base>:
    6c10:	movw	r1, #2824	; 0xb08
    6c14:	add	r0, r0, r1
    6c18:	bx	lr

00006c1c <btbb_packet_get_payload_length@@Base>:
    6c1c:	ldr	r0, [r0, #64]	; 0x40
    6c20:	bx	lr

00006c24 <btbb_get_payload@@Base>:
    6c24:	add	r0, r0, #68	; 0x44
    6c28:	bx	lr

00006c2c <btbb_get_payload_packed@@Base>:
    6c2c:	push	{r4, r5, r6, sl, fp, lr}
    6c30:	add	fp, sp, #16
    6c34:	ldr	r2, [r0, #64]	; 0x40
    6c38:	cmp	r2, #1
    6c3c:	blt	6c98 <btbb_get_payload_packed@@Base+0x6c>
    6c40:	mov	r3, #0
    6c44:	add	r2, r0, r3, lsl #3
    6c48:	ldrb	ip, [r2, #68]	; 0x44
    6c4c:	ldrb	lr, [r2, #69]	; 0x45
    6c50:	ldrb	r6, [r2, #70]	; 0x46
    6c54:	ldrb	r5, [r2, #71]	; 0x47
    6c58:	orr	r4, ip, lr, lsl #1
    6c5c:	orr	r6, r4, r6, lsl #2
    6c60:	orr	r6, r6, r5, lsl #3
    6c64:	ldrb	r5, [r2, #72]	; 0x48
    6c68:	orr	r6, r6, r5, lsl #4
    6c6c:	ldrb	r5, [r2, #73]	; 0x49
    6c70:	orr	r6, r6, r5, lsl #5
    6c74:	ldrb	r5, [r2, #74]	; 0x4a
    6c78:	ldrb	r2, [r2, #75]	; 0x4b
    6c7c:	orr	r6, r6, r5, lsl #6
    6c80:	orr	r2, r6, r2, lsl #7
    6c84:	strb	r2, [r1, r3]
    6c88:	add	r3, r3, #1
    6c8c:	ldr	r2, [r0, #64]	; 0x40
    6c90:	cmp	r3, r2
    6c94:	blt	6c44 <btbb_get_payload_packed@@Base+0x18>
    6c98:	mov	r0, r2
    6c9c:	pop	{r4, r5, r6, sl, fp, pc}

00006ca0 <btbb_packet_get_type@@Base>:
    6ca0:	ldrb	r0, [r0, #18]
    6ca4:	bx	lr

00006ca8 <btbb_packet_get_lt_addr@@Base>:
    6ca8:	ldrb	r0, [r0, #19]
    6cac:	bx	lr

00006cb0 <btbb_packet_get_header_flags@@Base>:
    6cb0:	ldrb	r0, [r0, #20]
    6cb4:	bx	lr

00006cb8 <btbb_packet_get_hec@@Base>:
    6cb8:	ldrb	r0, [r0, #21]
    6cbc:	bx	lr

00006cc0 <btbb_packet_get_header_packed@@Base>:
    6cc0:	ldrb	ip, [r0, #22]
    6cc4:	ldrb	r2, [r0, #23]
    6cc8:	ldrb	r3, [r0, #24]
    6ccc:	ldrb	r1, [r0, #25]
    6cd0:	orr	r2, ip, r2, lsl #1
    6cd4:	orr	r2, r2, r3, lsl #2
    6cd8:	orr	r1, r2, r1, lsl #3
    6cdc:	ldrb	r2, [r0, #26]
    6ce0:	orr	r1, r1, r2, lsl #4
    6ce4:	ldrb	r2, [r0, #27]
    6ce8:	orr	r1, r1, r2, lsl #5
    6cec:	ldrb	r2, [r0, #28]
    6cf0:	orr	r1, r1, r2, lsl #6
    6cf4:	ldrb	r2, [r0, #29]
    6cf8:	orr	r1, r1, r2, lsl #7
    6cfc:	ldrb	r2, [r0, #30]
    6d00:	orr	r1, r1, r2, lsl #8
    6d04:	ldrb	r2, [r0, #31]
    6d08:	orr	r1, r1, r2, lsl #9
    6d0c:	ldrb	r2, [r0, #32]
    6d10:	orr	r1, r1, r2, lsl #10
    6d14:	ldrb	r2, [r0, #33]	; 0x21
    6d18:	orr	r1, r1, r2, lsl #11
    6d1c:	ldrb	r2, [r0, #34]	; 0x22
    6d20:	orr	r1, r1, r2, lsl #12
    6d24:	ldrb	r2, [r0, #35]	; 0x23
    6d28:	orr	r1, r1, r2, lsl #13
    6d2c:	ldrb	r2, [r0, #36]	; 0x24
    6d30:	orr	r1, r1, r2, lsl #14
    6d34:	ldrb	r2, [r0, #37]	; 0x25
    6d38:	orr	r1, r1, r2, lsl #15
    6d3c:	ldrb	r2, [r0, #38]	; 0x26
    6d40:	ldrb	r0, [r0, #39]	; 0x27
    6d44:	orr	r1, r1, r2, lsl #16
    6d48:	orr	r0, r1, r0, lsl #17
    6d4c:	bx	lr

00006d50 <crc_check@@Base>:
    6d50:	push	{r4, sl, fp, lr}
    6d54:	add	fp, sp, #8
    6d58:	mov	r4, r1
    6d5c:	mov	r1, r0
    6d60:	ldrb	r0, [r4, #18]
    6d64:	sub	r2, r0, #2
    6d68:	mov	r0, #1
    6d6c:	cmp	r2, #13
    6d70:	bhi	6de8 <crc_check@@Base+0x98>
    6d74:	add	r3, pc, #4
    6d78:	ldr	r2, [r3, r2, lsl #2]
    6d7c:	add	pc, r3, r2
    6d80:	strheq	r0, [r0], -r4
    6d84:	andeq	r0, r0, r8, lsr r0
    6d88:	andeq	r0, r0, r4, ror r0
    6d8c:	andeq	r0, r0, ip, asr #1
    6d90:	andeq	r0, r0, r8, rrx
    6d94:	andeq	r0, r0, r4, ror #1
    6d98:	andeq	r0, r0, r8, lsr r0
    6d9c:	andeq	r0, r0, r8, rrx
    6da0:	andeq	r0, r0, r8, lsr r0
    6da4:	andeq	r0, r0, r4, ror r0
    6da8:	strdeq	r0, [r0], -ip
    6dac:	andeq	r0, r0, r4, lsl r1
    6db0:	andeq	r0, r0, r8, lsr r0
    6db4:	andeq	r0, r0, r4, ror r0
    6db8:	mov	r0, r1
    6dbc:	mov	r1, r4
    6dc0:	bl	45c8 <DM@plt>
    6dc4:	cmp	r0, #0
    6dc8:	beq	6e08 <crc_check@@Base+0xb8>
    6dcc:	cmp	r0, #2
    6dd0:	blt	6de8 <crc_check@@Base+0x98>
    6dd4:	ldrb	r2, [r4, #18]
    6dd8:	mov	r1, #1
    6ddc:	cmp	r2, #7
    6de0:	cmpne	r2, #13
    6de4:	beq	6e2c <crc_check@@Base+0xdc>
    6de8:	mov	r1, r0
    6dec:	mov	r0, r1
    6df0:	pop	{r4, sl, fp, pc}
    6df4:	mov	r0, r1
    6df8:	mov	r1, r4
    6dfc:	bl	479c <DH@plt>
    6e00:	cmp	r0, #0
    6e04:	bne	6dcc <crc_check@@Base+0x7c>
    6e08:	ldrb	r2, [r4, #18]
    6e0c:	mov	r1, #1
    6e10:	cmp	r2, #5
    6e14:	bhi	6e2c <crc_check@@Base+0xdc>
    6e18:	mov	r3, #1
    6e1c:	mov	r4, #44	; 0x2c
    6e20:	mov	r0, #0
    6e24:	tst	r4, r3, lsl r2
    6e28:	movne	r1, r0
    6e2c:	mov	r0, r1
    6e30:	pop	{r4, sl, fp, pc}
    6e34:	mov	r0, r1
    6e38:	mov	r1, r4
    6e3c:	bl	458c <fhs@plt>
    6e40:	cmp	r0, #0
    6e44:	bne	6dcc <crc_check@@Base+0x7c>
    6e48:	b	6e08 <crc_check@@Base+0xb8>
    6e4c:	mov	r0, r1
    6e50:	mov	r1, r4
    6e54:	bl	45d4 <HV@plt>
    6e58:	cmp	r0, #0
    6e5c:	bne	6dcc <crc_check@@Base+0x7c>
    6e60:	b	6e08 <crc_check@@Base+0xb8>
    6e64:	mov	r0, r1
    6e68:	mov	r1, r4
    6e6c:	bl	473c <EV3@plt>
    6e70:	cmp	r0, #0
    6e74:	bne	6dcc <crc_check@@Base+0x7c>
    6e78:	b	6e08 <crc_check@@Base+0xb8>
    6e7c:	mov	r0, r1
    6e80:	mov	r1, r4
    6e84:	bl	4598 <EV4@plt>
    6e88:	cmp	r0, #0
    6e8c:	bne	6dcc <crc_check@@Base+0x7c>
    6e90:	b	6e08 <crc_check@@Base+0xb8>
    6e94:	mov	r0, r1
    6e98:	mov	r1, r4
    6e9c:	bl	4784 <EV5@plt>
    6ea0:	cmp	r0, #0
    6ea4:	bne	6dcc <crc_check@@Base+0x7c>
    6ea8:	b	6e08 <crc_check@@Base+0xb8>

00006eac <fhs@@Base>:
    6eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6eb0:	add	fp, sp, #28
    6eb4:	sub	sp, sp, #4
    6eb8:	mov	r7, r0
    6ebc:	mov	r0, #20
    6ec0:	mov	r5, r1
    6ec4:	str	r0, [r1, #64]	; 0x40
    6ec8:	movw	r0, #2822	; 0xb06
    6ecc:	ldrh	r0, [r1, r0]
    6ed0:	lsr	r1, r0, #1
    6ed4:	mov	r0, #1
    6ed8:	cmp	r1, #181	; 0xb5
    6edc:	bcc	7058 <fhs@@Base+0x1ac>
    6ee0:	movw	r0, #2946	; 0xb82
    6ee4:	mov	r1, #160	; 0xa0
    6ee8:	add	r0, r5, r0
    6eec:	bl	7f28 <HV@@Base+0x360>
    6ef0:	mov	r8, r0
    6ef4:	mov	r0, #0
    6ef8:	cmp	r8, #0
    6efc:	beq	7058 <fhs@@Base+0x1ac>
    6f00:	ldr	r9, [r5, #64]	; 0x40
    6f04:	cmp	r9, #1
    6f08:	blt	6f7c <fhs@@Base+0xd0>
    6f0c:	ldr	r1, [pc, #332]	; 7060 <fhs@@Base+0x1b4>
    6f10:	and	r0, r7, #63	; 0x3f
    6f14:	ldr	r2, [r5, #4]
    6f18:	ldr	ip, [pc, #324]	; 7064 <fhs@@Base+0x1b8>
    6f1c:	movw	lr, #1033	; 0x409
    6f20:	mov	r6, r8
    6f24:	movt	lr, #33026	; 0x8102
    6f28:	add	r1, pc, r1
    6f2c:	and	r2, r2, #1
    6f30:	add	ip, pc, ip
    6f34:	ldrb	r0, [r1, r0]
    6f38:	add	r1, r5, #68	; 0x44
    6f3c:	add	r4, r0, #18
    6f40:	lsl	r0, r9, #3
    6f44:	smmla	r7, r4, lr, r4
    6f48:	cmp	r2, #0
    6f4c:	asr	r3, r7, #6
    6f50:	add	r3, r3, r7, lsr #31
    6f54:	ldrb	r7, [r6]
    6f58:	add	r6, r6, #1
    6f5c:	rsb	r3, r3, r3, lsl #7
    6f60:	sub	r4, r4, r3
    6f64:	ldrbne	r3, [ip, r4]
    6f68:	add	r4, r4, #1
    6f6c:	eorne	r7, r3, r7
    6f70:	subs	r0, r0, #1
    6f74:	strb	r7, [r1], #1
    6f78:	bne	6f44 <fhs@@Base+0x98>
    6f7c:	mov	r0, r5
    6f80:	bl	815c <HV@@Base+0x594>
    6f84:	cmp	r0, #0
    6f88:	beq	6fa0 <fhs@@Base+0xf4>
    6f8c:	mov	r0, r8
    6f90:	bl	4550 <free@plt>
    6f94:	mov	r0, #1000	; 0x3e8
    6f98:	sub	sp, fp, #28
    6f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6fa0:	cmp	r9, #0
    6fa4:	ble	703c <fhs@@Base+0x190>
    6fa8:	mov	r0, #0
    6fac:	movw	sl, #1033	; 0x409
    6fb0:	mov	r6, #32
    6fb4:	sub	r7, r0, r9, lsl #3
    6fb8:	ldr	r0, [r5, #4]
    6fbc:	ldr	r9, [pc, #164]	; 7068 <fhs@@Base+0x1bc>
    6fc0:	movt	sl, #33026	; 0x8102
    6fc4:	and	r4, r0, #1
    6fc8:	add	r9, pc, r9
    6fcc:	ldr	r0, [pc, #152]	; 706c <fhs@@Base+0x1c0>
    6fd0:	add	r0, pc, r0
    6fd4:	ldrb	r0, [r0, r6]
    6fd8:	add	r1, r0, #18
    6fdc:	mov	r0, #0
    6fe0:	smmla	r2, r1, sl, r1
    6fe4:	cmp	r4, #0
    6fe8:	asr	r3, r2, #6
    6fec:	add	r2, r3, r2, lsr #31
    6ff0:	rsb	r2, r2, r2, lsl #7
    6ff4:	sub	r1, r1, r2
    6ff8:	ldrb	r2, [r8, -r0]
    6ffc:	ldrbne	r3, [r9, r1]
    7000:	add	r1, r1, #1
    7004:	eorne	r2, r3, r2
    7008:	sub	r3, r5, r0
    700c:	sub	r0, r0, #1
    7010:	cmp	r7, r0
    7014:	strb	r2, [r3, #68]	; 0x44
    7018:	bne	6fe0 <fhs@@Base+0x134>
    701c:	mov	r0, r5
    7020:	bl	815c <HV@@Base+0x594>
    7024:	cmp	r0, #0
    7028:	bne	6f8c <fhs@@Base+0xe0>
    702c:	add	r6, r6, #1
    7030:	cmp	r6, #64	; 0x40
    7034:	bcc	6fcc <fhs@@Base+0x120>
    7038:	b	704c <fhs@@Base+0x1a0>
    703c:	mov	r0, r5
    7040:	bl	815c <HV@@Base+0x594>
    7044:	cmp	r0, #0
    7048:	bne	6f8c <fhs@@Base+0xe0>
    704c:	mov	r0, r8
    7050:	bl	4550 <free@plt>
    7054:	mov	r0, #0
    7058:	sub	sp, fp, #28
    705c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7060:	strdeq	ip, [r0], -r6
    7064:	andeq	lr, r0, r8, lsr sl
    7068:	andeq	lr, r0, r0, lsr #19
    706c:	andeq	ip, r0, lr, asr #8

00007070 <DM@@Base>:
    7070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7074:	add	fp, sp, #28
    7078:	sub	sp, sp, #12
    707c:	mov	r8, r0
    7080:	ldrb	r0, [r1, #18]
    7084:	mov	r4, r1
    7088:	sub	r1, r0, #3
    708c:	cmp	r1, #11
    7090:	bhi	7210 <DM@@Base+0x1a0>
    7094:	movw	r0, #2946	; 0xb82
    7098:	mov	r7, #20
    709c:	mov	r2, #1
    70a0:	mov	r5, #0
    70a4:	add	r9, r4, r0
    70a8:	movw	r0, #2822	; 0xb06
    70ac:	ldrh	r0, [r4, r0]
    70b0:	add	r3, pc, #8
    70b4:	ldr	r1, [r3, r1, lsl #2]
    70b8:	sub	sl, r0, #122	; 0x7a
    70bc:	add	pc, r3, r1
    70c0:	andeq	r0, r0, r4, asr r0
    70c4:	andeq	r0, r0, r4, lsr r1
    70c8:	andeq	r0, r0, r4, lsr r1
    70cc:	andeq	r0, r0, r4, lsr r1
    70d0:	andeq	r0, r0, r4, lsr r1
    70d4:	andeq	r0, r0, r0, lsr r0
    70d8:	andeq	r0, r0, r4, lsr r1
    70dc:	andeq	r0, r0, r4, asr #32
    70e0:	andeq	r0, r0, r4, lsr r1
    70e4:	andeq	r0, r0, r4, lsr r1
    70e8:	andeq	r0, r0, r4, lsr r1
    70ec:	andeq	r0, r0, ip, asr #32
    70f0:	movw	r1, #3026	; 0xbd2
    70f4:	sub	sl, r0, #202	; 0xca
    70f8:	mov	r7, #12
    70fc:	add	r9, r4, r1
    7100:	b	7114 <DM@@Base+0xa4>
    7104:	mov	r7, #125	; 0x7d
    7108:	b	7110 <DM@@Base+0xa0>
    710c:	mov	r7, #228	; 0xe4
    7110:	mov	r2, #2
    7114:	mov	r5, #1
    7118:	mov	r0, r9
    711c:	mov	r1, r8
    7120:	mov	r3, sl
    7124:	str	r4, [sp, #4]
    7128:	str	r5, [sp]
    712c:	bl	829c <HV@@Base+0x6d4>
    7130:	cmp	r0, #0
    7134:	beq	7200 <DM@@Base+0x190>
    7138:	ldr	r6, [r4, #64]	; 0x40
    713c:	cmp	r6, r7
    7140:	bgt	71f4 <DM@@Base+0x184>
    7144:	cmp	sl, r6, lsl #3
    7148:	blt	71f4 <DM@@Base+0x184>
    714c:	lsl	r7, r6, #3
    7150:	mov	r0, r9
    7154:	mov	r1, r7
    7158:	bl	7f28 <HV@@Base+0x360>
    715c:	cmp	r0, #0
    7160:	mov	r5, #0
    7164:	beq	71f4 <DM@@Base+0x184>
    7168:	cmp	r6, #1
    716c:	blt	71dc <DM@@Base+0x16c>
    7170:	ldr	r2, [pc, #168]	; 7220 <DM@@Base+0x1b0>
    7174:	and	r1, r8, #63	; 0x3f
    7178:	movw	lr, #1033	; 0x409
    717c:	mov	r5, r0
    7180:	movt	lr, #33026	; 0x8102
    7184:	add	r2, pc, r2
    7188:	ldrb	r1, [r2, r1]
    718c:	ldr	r2, [r4, #4]
    7190:	ldr	ip, [pc, #140]	; 7224 <DM@@Base+0x1b4>
    7194:	add	r6, r1, #18
    7198:	add	r1, r4, #68	; 0x44
    719c:	and	r8, r2, #1
    71a0:	add	ip, pc, ip
    71a4:	smmla	r3, r6, lr, r6
    71a8:	cmp	r8, #0
    71ac:	asr	r2, r3, #6
    71b0:	add	r2, r2, r3, lsr #31
    71b4:	ldrb	r3, [r5]
    71b8:	add	r5, r5, #1
    71bc:	rsb	r2, r2, r2, lsl #7
    71c0:	sub	r6, r6, r2
    71c4:	ldrbne	r2, [ip, r6]
    71c8:	add	r6, r6, #1
    71cc:	eorne	r3, r2, r3
    71d0:	subs	r7, r7, #1
    71d4:	strb	r3, [r1], #1
    71d8:	bne	71a4 <DM@@Base+0x134>
    71dc:	bl	4550 <free@plt>
    71e0:	mov	r0, r4
    71e4:	bl	815c <HV@@Base+0x594>
    71e8:	mov	r5, #10
    71ec:	cmp	r0, #0
    71f0:	movweq	r5, #2
    71f4:	mov	r0, r5
    71f8:	sub	sp, fp, #28
    71fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7200:	mov	r5, #0
    7204:	mov	r0, r5
    7208:	sub	sp, fp, #28
    720c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7210:	mov	r5, #0
    7214:	mov	r0, r5
    7218:	sub	sp, fp, #28
    721c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7220:	muleq	r0, sl, r2
    7224:	andeq	lr, r0, r8, asr #15

00007228 <DH@@Base>:
    7228:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    722c:	add	fp, sp, #24
    7230:	sub	sp, sp, #8
    7234:	mov	r8, r0
    7238:	ldrb	r0, [r1, #18]
    723c:	mov	r6, #0
    7240:	sub	r0, r0, #4
    7244:	cmp	r0, #11
    7248:	bhi	73f0 <DH@@Base+0x1c8>
    724c:	mov	r5, r1
    7250:	movw	r1, #2822	; 0xb06
    7254:	mov	r2, #1
    7258:	mov	r4, #30
    725c:	ldrh	r1, [r5, r1]
    7260:	add	r3, pc, #4
    7264:	ldr	r0, [r3, r0, lsl #2]
    7268:	add	pc, r3, r0
    726c:	andeq	r0, r0, r4, asr #32
    7270:	andeq	r0, r0, r4, lsl #3
    7274:	andeq	r0, r0, r4, lsl #3
    7278:	andeq	r0, r0, r4, lsl #3
    727c:	andeq	r0, r0, r4, lsl #3
    7280:	andeq	r0, r0, r4, asr #32
    7284:	andeq	r0, r0, r4, lsl #3
    7288:	andeq	r0, r0, r0, lsr r0
    728c:	andeq	r0, r0, r4, lsl #3
    7290:	andeq	r0, r0, r4, lsl #3
    7294:	andeq	r0, r0, r4, lsl #3
    7298:	andeq	r0, r0, ip, lsr r0
    729c:	mov	r2, #2
    72a0:	mov	r4, #187	; 0xbb
    72a4:	b	72b0 <DH@@Base+0x88>
    72a8:	mov	r2, #2
    72ac:	movw	r4, #343	; 0x157
    72b0:	movw	r0, #2946	; 0xb82
    72b4:	sub	r7, r1, #122	; 0x7a
    72b8:	mov	r6, #0
    72bc:	mov	r1, r8
    72c0:	str	r5, [sp, #4]
    72c4:	add	r0, r5, r0
    72c8:	mov	r3, r7
    72cc:	str	r6, [sp]
    72d0:	bl	829c <HV@@Base+0x6d4>
    72d4:	cmp	r0, #0
    72d8:	beq	73f0 <DH@@Base+0x1c8>
    72dc:	ldr	r0, [r5, #64]	; 0x40
    72e0:	mov	r6, #1
    72e4:	cmp	r0, r4
    72e8:	bgt	73f0 <DH@@Base+0x1c8>
    72ec:	cmp	r7, r0, lsl #3
    72f0:	blt	73f0 <DH@@Base+0x1c8>
    72f4:	cmp	r0, #1
    72f8:	blt	73cc <DH@@Base+0x1a4>
    72fc:	ldrb	r1, [r5, #4]
    7300:	tst	r1, #1
    7304:	bne	736c <DH@@Base+0x144>
    7308:	lsl	r0, r0, #3
    730c:	mov	r1, #0
    7310:	cmp	r0, #15
    7314:	bls	734c <DH@@Base+0x124>
    7318:	bic	r1, r0, #15
    731c:	movw	r2, #2946	; 0xb82
    7320:	mov	r4, r5
    7324:	mov	r3, r1
    7328:	add	r7, r4, r2
    732c:	subs	r3, r3, #16
    7330:	vld1.8	{d16-d17}, [r7]
    7334:	add	r7, r4, #68	; 0x44
    7338:	add	r4, r4, #16
    733c:	vst1.8	{d16-d17}, [r7]
    7340:	bne	7328 <DH@@Base+0x100>
    7344:	cmp	r0, r1
    7348:	beq	73cc <DH@@Base+0x1a4>
    734c:	add	r2, r5, r1
    7350:	sub	r0, r0, r1
    7354:	ldrb	r1, [r2, #2946]	; 0xb82
    7358:	subs	r0, r0, #1
    735c:	strb	r1, [r2, #68]	; 0x44
    7360:	add	r2, r2, #1
    7364:	bne	7354 <DH@@Base+0x12c>
    7368:	b	73cc <DH@@Base+0x1a4>
    736c:	ldr	r2, [pc, #136]	; 73fc <DH@@Base+0x1d4>
    7370:	and	r1, r8, #63	; 0x3f
    7374:	lsl	r0, r0, #3
    7378:	mov	r3, r5
    737c:	add	r2, pc, r2
    7380:	ldrb	r1, [r2, r1]
    7384:	ldr	r2, [pc, #116]	; 7400 <DH@@Base+0x1d8>
    7388:	add	r7, r1, #18
    738c:	movw	r1, #1033	; 0x409
    7390:	add	r2, pc, r2
    7394:	movt	r1, #33026	; 0x8102
    7398:	smmla	r6, r7, r1, r7
    739c:	subs	r0, r0, #1
    73a0:	asr	r4, r6, #6
    73a4:	add	r6, r4, r6, lsr #31
    73a8:	ldrb	r4, [r3, #2946]	; 0xb82
    73ac:	sub	r6, r6, r6, lsl #7
    73b0:	add	r7, r7, r6
    73b4:	ldrb	r6, [r2, r7]
    73b8:	add	r7, r7, #1
    73bc:	eor	r6, r6, r4
    73c0:	strb	r6, [r3, #68]	; 0x44
    73c4:	add	r3, r3, #1
    73c8:	bne	7398 <DH@@Base+0x170>
    73cc:	ldrb	r0, [r5, #18]
    73d0:	mov	r6, #2
    73d4:	cmp	r0, #9
    73d8:	beq	73f0 <DH@@Base+0x1c8>
    73dc:	mov	r0, r5
    73e0:	bl	815c <HV@@Base+0x594>
    73e4:	mov	r6, #10
    73e8:	cmp	r0, #0
    73ec:	movweq	r6, #2
    73f0:	mov	r0, r6
    73f4:	sub	sp, fp, #24
    73f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    73fc:	andeq	ip, r0, r2, lsr #1
    7400:	ldrdeq	lr, [r0], -r8

00007404 <EV3@@Base>:
    7404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7408:	add	fp, sp, #28
    740c:	sub	sp, sp, #4
    7410:	mov	r4, r1
    7414:	mov	r1, #0
    7418:	movw	r2, #2822	; 0xb06
    741c:	movw	r7, #1033	; 0x409
    7420:	and	r9, r0, #63	; 0x3f
    7424:	str	r1, [r4, #64]	; 0x40
    7428:	movt	r7, #33026	; 0x8102
    742c:	ldrh	r2, [r4, r2]
    7430:	ldr	r8, [pc, #520]	; 7640 <EV3@@Base+0x23c>
    7434:	ldr	r6, [pc, #520]	; 7644 <EV3@@Base+0x240>
    7438:	sub	sl, r2, #122	; 0x7a
    743c:	add	r8, pc, r8
    7440:	add	r6, pc, r6
    7444:	add	r0, r1, #1
    7448:	lsl	r0, r0, #3
    744c:	cmp	r0, sl
    7450:	bgt	7628 <EV3@@Base+0x224>
    7454:	lsl	r0, r1, #3
    7458:	ldrb	r1, [r8, r9]
    745c:	add	r1, r0, r1
    7460:	add	r0, r4, r0
    7464:	add	r1, r1, #18
    7468:	add	r0, r0, #68	; 0x44
    746c:	smmla	r2, r1, r7, r1
    7470:	asr	r3, r2, #6
    7474:	add	r2, r3, r2, lsr #31
    7478:	ldrb	r3, [r4, #4]
    747c:	sub	r2, r2, r2, lsl #7
    7480:	add	r1, r1, r2
    7484:	ldrb	r2, [r4, #2946]	; 0xb82
    7488:	tst	r3, #1
    748c:	ldrbne	r3, [r6, r1]
    7490:	add	r1, r1, #1
    7494:	eorne	r2, r3, r2
    7498:	strb	r2, [r0]
    749c:	smmla	r2, r1, r7, r1
    74a0:	asr	r3, r2, #6
    74a4:	add	r2, r3, r2, lsr #31
    74a8:	ldrb	r3, [r4, #4]
    74ac:	sub	r2, r2, r2, lsl #7
    74b0:	add	r1, r1, r2
    74b4:	ldrb	r2, [r4, #2947]	; 0xb83
    74b8:	tst	r3, #1
    74bc:	ldrbne	r3, [r6, r1]
    74c0:	add	r1, r1, #1
    74c4:	eorne	r2, r3, r2
    74c8:	strb	r2, [r0, #1]
    74cc:	smmla	r2, r1, r7, r1
    74d0:	asr	r3, r2, #6
    74d4:	add	r2, r3, r2, lsr #31
    74d8:	ldrb	r3, [r4, #4]
    74dc:	sub	r2, r2, r2, lsl #7
    74e0:	add	r1, r1, r2
    74e4:	ldrb	r2, [r4, #2948]	; 0xb84
    74e8:	tst	r3, #1
    74ec:	ldrbne	r3, [r6, r1]
    74f0:	add	r1, r1, #1
    74f4:	eorne	r2, r3, r2
    74f8:	strb	r2, [r0, #2]
    74fc:	smmla	r2, r1, r7, r1
    7500:	asr	r3, r2, #6
    7504:	add	r2, r3, r2, lsr #31
    7508:	ldrb	r3, [r4, #4]
    750c:	sub	r2, r2, r2, lsl #7
    7510:	add	r1, r1, r2
    7514:	ldrb	r2, [r4, #2949]	; 0xb85
    7518:	tst	r3, #1
    751c:	ldrbne	r3, [r6, r1]
    7520:	eorne	r2, r3, r2
    7524:	strb	r2, [r0, #3]
    7528:	ldrb	r3, [r4, #4]
    752c:	ldrb	r2, [r4, #2950]	; 0xb86
    7530:	tst	r3, #1
    7534:	bne	7554 <EV3@@Base+0x150>
    7538:	strb	r2, [r0, #4]
    753c:	ldrb	r1, [r4, #2951]	; 0xb87
    7540:	strb	r1, [r0, #5]
    7544:	ldrb	r1, [r4, #2952]	; 0xb88
    7548:	strb	r1, [r0, #6]
    754c:	ldrb	r1, [r4, #2953]	; 0xb89
    7550:	b	75ec <EV3@@Base+0x1e8>
    7554:	add	r1, r1, #1
    7558:	smmla	r3, r1, r7, r1
    755c:	asr	r5, r3, #6
    7560:	add	r3, r5, r3, lsr #31
    7564:	sub	r3, r3, r3, lsl #7
    7568:	add	r1, r1, r3
    756c:	ldrb	r3, [r6, r1]
    7570:	add	r1, r1, #1
    7574:	eor	r2, r3, r2
    7578:	strb	r2, [r0, #4]
    757c:	smmla	r2, r1, r7, r1
    7580:	asr	r3, r2, #6
    7584:	add	r2, r3, r2, lsr #31
    7588:	ldrb	r3, [r4, #2951]	; 0xb87
    758c:	sub	r2, r2, r2, lsl #7
    7590:	add	r1, r1, r2
    7594:	ldrb	r2, [r6, r1]
    7598:	add	r1, r1, #1
    759c:	eor	r2, r2, r3
    75a0:	strb	r2, [r0, #5]
    75a4:	smmla	r2, r1, r7, r1
    75a8:	asr	r3, r2, #6
    75ac:	add	r2, r3, r2, lsr #31
    75b0:	ldrb	r3, [r4, #2952]	; 0xb88
    75b4:	sub	r2, r2, r2, lsl #7
    75b8:	add	r1, r1, r2
    75bc:	ldrb	r2, [r6, r1]
    75c0:	add	r1, r1, #1
    75c4:	eor	r2, r2, r3
    75c8:	strb	r2, [r0, #6]
    75cc:	smmla	r2, r1, r7, r1
    75d0:	asr	r3, r2, #6
    75d4:	add	r2, r3, r2, lsr #31
    75d8:	sub	r2, r2, r2, lsl #7
    75dc:	add	r1, r1, r2
    75e0:	ldrb	r2, [r4, #2953]	; 0xb89
    75e4:	ldrb	r1, [r6, r1]
    75e8:	eor	r1, r1, r2
    75ec:	strb	r1, [r0, #7]
    75f0:	ldr	r5, [r4, #64]	; 0x40
    75f4:	cmp	r5, #2
    75f8:	ble	760c <EV3@@Base+0x208>
    75fc:	mov	r0, r4
    7600:	bl	815c <HV@@Base+0x594>
    7604:	cmp	r0, #0
    7608:	bne	7634 <EV3@@Base+0x230>
    760c:	add	r1, r5, #1
    7610:	cmp	r5, #31
    7614:	str	r1, [r4, #64]	; 0x40
    7618:	blt	7444 <EV3@@Base+0x40>
    761c:	mov	r0, #2
    7620:	sub	sp, fp, #28
    7624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7628:	mov	r0, #1
    762c:	sub	sp, fp, #28
    7630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7634:	mov	r0, #10
    7638:	sub	sp, fp, #28
    763c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7640:	andeq	fp, r0, r2, ror #31
    7644:	andeq	lr, r0, r8, lsr #10

00007648 <EV4@@Base>:
    7648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    764c:	add	fp, sp, #28
    7650:	sub	sp, sp, #12
    7654:	mov	r5, r1
    7658:	mov	r1, #1
    765c:	and	r0, r0, #63	; 0x3f
    7660:	movw	sl, #2065	; 0x811
    7664:	mov	r4, #0
    7668:	mov	r6, #0
    766c:	str	r1, [r5, #64]	; 0x40
    7670:	movw	r1, #2946	; 0xb82
    7674:	str	r0, [sp]
    7678:	movt	sl, #516	; 0x204
    767c:	add	r1, r5, r1
    7680:	str	r1, [sp, #4]
    7684:	movw	r1, #2822	; 0xb06
    7688:	ldrh	r1, [r5, r1]
    768c:	sub	r1, r1, #122	; 0x7a
    7690:	str	r1, [sp, #8]
    7694:	ldr	r8, [pc, #732]	; 7978 <EV4@@Base+0x330>
    7698:	add	r8, pc, r8
    769c:	ldr	r0, [sp, #8]
    76a0:	add	r9, r6, #15
    76a4:	cmp	r9, r0
    76a8:	bgt	7958 <EV4@@Base+0x310>
    76ac:	ldr	r0, [sp, #4]
    76b0:	mov	r1, #10
    76b4:	add	r0, r0, r6
    76b8:	bl	7f28 <HV@@Base+0x360>
    76bc:	cmp	r0, #0
    76c0:	beq	7964 <EV4@@Base+0x31c>
    76c4:	ldr	r1, [sp]
    76c8:	ldr	r2, [pc, #684]	; 797c <EV4@@Base+0x334>
    76cc:	ldrb	r6, [r5, #4]
    76d0:	add	r2, pc, r2
    76d4:	tst	r6, #1
    76d8:	ldrb	r1, [r2, r1]
    76dc:	ldrb	r2, [r0]
    76e0:	add	r1, r4, r1
    76e4:	add	r3, r1, #18
    76e8:	umull	r1, r7, r3, sl
    76ec:	add	r1, r5, r4
    76f0:	add	r1, r1, #68	; 0x44
    76f4:	bne	7744 <EV4@@Base+0xfc>
    76f8:	strb	r2, [r1]
    76fc:	ldrb	r2, [r0, #1]
    7700:	strb	r2, [r1, #1]
    7704:	ldrb	r2, [r0, #2]
    7708:	strb	r2, [r1, #2]
    770c:	ldrb	r2, [r0, #3]
    7710:	strb	r2, [r1, #3]
    7714:	ldrb	r2, [r0, #4]
    7718:	strb	r2, [r1, #4]
    771c:	ldrb	r2, [r0, #5]
    7720:	strb	r2, [r1, #5]
    7724:	ldrb	r2, [r0, #6]
    7728:	strb	r2, [r1, #6]
    772c:	ldrb	r2, [r0, #7]
    7730:	strb	r2, [r1, #7]
    7734:	ldrb	r2, [r0, #8]
    7738:	strb	r2, [r1, #8]
    773c:	ldrb	r2, [r0, #9]
    7740:	b	78ec <EV4@@Base+0x2a4>
    7744:	sub	r6, r3, r7
    7748:	add	r7, r7, r6, lsr #1
    774c:	lsr	r7, r7, #6
    7750:	sub	r7, r7, r7, lsl #7
    7754:	add	r3, r3, r7
    7758:	ldrb	r7, [r8, r3]
    775c:	eor	r2, r7, r2
    7760:	strb	r2, [r1]
    7764:	add	r2, r3, #1
    7768:	umull	r3, r7, r2, sl
    776c:	sub	r3, r2, r7
    7770:	add	r3, r7, r3, lsr #1
    7774:	ldrb	r7, [r0, #1]
    7778:	lsr	r3, r3, #6
    777c:	sub	r3, r3, r3, lsl #7
    7780:	add	r2, r2, r3
    7784:	ldrb	r3, [r8, r2]
    7788:	add	r2, r2, #1
    778c:	eor	r3, r3, r7
    7790:	strb	r3, [r1, #1]
    7794:	umull	r3, r7, r2, sl
    7798:	sub	r3, r2, r7
    779c:	add	r3, r7, r3, lsr #1
    77a0:	ldrb	r7, [r0, #2]
    77a4:	lsr	r3, r3, #6
    77a8:	sub	r3, r3, r3, lsl #7
    77ac:	add	r2, r2, r3
    77b0:	ldrb	r3, [r8, r2]
    77b4:	add	r2, r2, #1
    77b8:	eor	r3, r3, r7
    77bc:	strb	r3, [r1, #2]
    77c0:	umull	r3, r7, r2, sl
    77c4:	sub	r3, r2, r7
    77c8:	add	r3, r7, r3, lsr #1
    77cc:	ldrb	r7, [r0, #3]
    77d0:	lsr	r3, r3, #6
    77d4:	sub	r3, r3, r3, lsl #7
    77d8:	add	r2, r2, r3
    77dc:	ldrb	r3, [r8, r2]
    77e0:	add	r2, r2, #1
    77e4:	eor	r3, r3, r7
    77e8:	strb	r3, [r1, #3]
    77ec:	umull	r3, r7, r2, sl
    77f0:	sub	r3, r2, r7
    77f4:	add	r3, r7, r3, lsr #1
    77f8:	ldrb	r7, [r0, #4]
    77fc:	lsr	r3, r3, #6
    7800:	sub	r3, r3, r3, lsl #7
    7804:	add	r2, r2, r3
    7808:	ldrb	r3, [r8, r2]
    780c:	add	r2, r2, #1
    7810:	eor	r3, r3, r7
    7814:	strb	r3, [r1, #4]
    7818:	umull	r3, r7, r2, sl
    781c:	sub	r3, r2, r7
    7820:	add	r3, r7, r3, lsr #1
    7824:	ldrb	r7, [r0, #5]
    7828:	lsr	r3, r3, #6
    782c:	sub	r3, r3, r3, lsl #7
    7830:	add	r2, r2, r3
    7834:	ldrb	r3, [r8, r2]
    7838:	add	r2, r2, #1
    783c:	eor	r3, r3, r7
    7840:	strb	r3, [r1, #5]
    7844:	umull	r3, r7, r2, sl
    7848:	sub	r3, r2, r7
    784c:	add	r3, r7, r3, lsr #1
    7850:	ldrb	r7, [r0, #6]
    7854:	lsr	r3, r3, #6
    7858:	sub	r3, r3, r3, lsl #7
    785c:	add	r2, r2, r3
    7860:	ldrb	r3, [r8, r2]
    7864:	add	r2, r2, #1
    7868:	eor	r3, r3, r7
    786c:	strb	r3, [r1, #6]
    7870:	umull	r3, r7, r2, sl
    7874:	sub	r3, r2, r7
    7878:	add	r3, r7, r3, lsr #1
    787c:	ldrb	r7, [r0, #7]
    7880:	lsr	r3, r3, #6
    7884:	sub	r3, r3, r3, lsl #7
    7888:	add	r2, r2, r3
    788c:	ldrb	r3, [r8, r2]
    7890:	add	r2, r2, #1
    7894:	eor	r3, r3, r7
    7898:	strb	r3, [r1, #7]
    789c:	umull	r3, r7, r2, sl
    78a0:	sub	r3, r2, r7
    78a4:	add	r3, r7, r3, lsr #1
    78a8:	ldrb	r7, [r0, #8]
    78ac:	lsr	r3, r3, #6
    78b0:	sub	r3, r3, r3, lsl #7
    78b4:	add	r2, r2, r3
    78b8:	ldrb	r3, [r8, r2]
    78bc:	add	r2, r2, #1
    78c0:	eor	r3, r3, r7
    78c4:	strb	r3, [r1, #8]
    78c8:	umull	r3, r7, r2, sl
    78cc:	sub	r3, r2, r7
    78d0:	add	r3, r7, r3, lsr #1
    78d4:	lsr	r3, r3, #6
    78d8:	sub	r3, r3, r3, lsl #7
    78dc:	add	r2, r2, r3
    78e0:	ldrb	r3, [r0, #9]
    78e4:	ldrb	r2, [r8, r2]
    78e8:	eor	r2, r2, r3
    78ec:	strb	r2, [r1, #9]
    78f0:	bl	4550 <free@plt>
    78f4:	ldr	r0, [r5, #64]	; 0x40
    78f8:	cmp	r4, r0, lsl #3
    78fc:	blt	792c <EV4@@Base+0x2e4>
    7900:	add	r6, r0, #1
    7904:	lsl	r7, r0, #3
    7908:	mov	r0, r5
    790c:	bl	815c <HV@@Base+0x594>
    7910:	cmp	r0, #0
    7914:	bne	794c <EV4@@Base+0x304>
    7918:	add	r7, r7, #8
    791c:	str	r6, [r5, #64]	; 0x40
    7920:	add	r6, r6, #1
    7924:	cmp	r7, r4
    7928:	ble	7908 <EV4@@Base+0x2c0>
    792c:	movw	r0, #1470	; 0x5be
    7930:	add	r4, r4, #10
    7934:	mov	r6, r9
    7938:	cmp	r9, r0
    793c:	bcc	769c <EV4@@Base+0x54>
    7940:	mov	r0, #2
    7944:	sub	sp, fp, #28
    7948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    794c:	mov	r0, #10
    7950:	sub	sp, fp, #28
    7954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7958:	mov	r0, #1
    795c:	sub	sp, fp, #28
    7960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7964:	mov	r0, #0
    7968:	cmp	r6, #44	; 0x2c
    796c:	movwhi	r0, #1
    7970:	sub	sp, fp, #28
    7974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7978:	ldrdeq	lr, [r0], -r0
    797c:	andeq	fp, r0, lr, asr #26

00007980 <EV5@@Base>:
    7980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7984:	add	fp, sp, #28
    7988:	sub	sp, sp, #4
    798c:	mov	r4, r1
    7990:	mov	r1, #0
    7994:	movw	r2, #2822	; 0xb06
    7998:	movw	r7, #1033	; 0x409
    799c:	and	r9, r0, #63	; 0x3f
    79a0:	str	r1, [r4, #64]	; 0x40
    79a4:	movt	r7, #33026	; 0x8102
    79a8:	ldrh	r2, [r4, r2]
    79ac:	ldr	r8, [pc, #520]	; 7bbc <EV5@@Base+0x23c>
    79b0:	ldr	r6, [pc, #520]	; 7bc0 <EV5@@Base+0x240>
    79b4:	sub	sl, r2, #122	; 0x7a
    79b8:	add	r8, pc, r8
    79bc:	add	r6, pc, r6
    79c0:	add	r0, r1, #1
    79c4:	lsl	r0, r0, #3
    79c8:	cmp	r0, sl
    79cc:	bgt	7ba4 <EV5@@Base+0x224>
    79d0:	lsl	r0, r1, #3
    79d4:	ldrb	r1, [r8, r9]
    79d8:	add	r1, r0, r1
    79dc:	add	r0, r4, r0
    79e0:	add	r1, r1, #18
    79e4:	add	r0, r0, #68	; 0x44
    79e8:	smmla	r2, r1, r7, r1
    79ec:	asr	r3, r2, #6
    79f0:	add	r2, r3, r2, lsr #31
    79f4:	ldrb	r3, [r4, #4]
    79f8:	sub	r2, r2, r2, lsl #7
    79fc:	add	r1, r1, r2
    7a00:	ldrb	r2, [r4, #2946]	; 0xb82
    7a04:	tst	r3, #1
    7a08:	ldrbne	r3, [r6, r1]
    7a0c:	add	r1, r1, #1
    7a10:	eorne	r2, r3, r2
    7a14:	strb	r2, [r0]
    7a18:	smmla	r2, r1, r7, r1
    7a1c:	asr	r3, r2, #6
    7a20:	add	r2, r3, r2, lsr #31
    7a24:	ldrb	r3, [r4, #4]
    7a28:	sub	r2, r2, r2, lsl #7
    7a2c:	add	r1, r1, r2
    7a30:	ldrb	r2, [r4, #2947]	; 0xb83
    7a34:	tst	r3, #1
    7a38:	ldrbne	r3, [r6, r1]
    7a3c:	add	r1, r1, #1
    7a40:	eorne	r2, r3, r2
    7a44:	strb	r2, [r0, #1]
    7a48:	smmla	r2, r1, r7, r1
    7a4c:	asr	r3, r2, #6
    7a50:	add	r2, r3, r2, lsr #31
    7a54:	ldrb	r3, [r4, #4]
    7a58:	sub	r2, r2, r2, lsl #7
    7a5c:	add	r1, r1, r2
    7a60:	ldrb	r2, [r4, #2948]	; 0xb84
    7a64:	tst	r3, #1
    7a68:	ldrbne	r3, [r6, r1]
    7a6c:	add	r1, r1, #1
    7a70:	eorne	r2, r3, r2
    7a74:	strb	r2, [r0, #2]
    7a78:	smmla	r2, r1, r7, r1
    7a7c:	asr	r3, r2, #6
    7a80:	add	r2, r3, r2, lsr #31
    7a84:	ldrb	r3, [r4, #4]
    7a88:	sub	r2, r2, r2, lsl #7
    7a8c:	add	r1, r1, r2
    7a90:	ldrb	r2, [r4, #2949]	; 0xb85
    7a94:	tst	r3, #1
    7a98:	ldrbne	r3, [r6, r1]
    7a9c:	eorne	r2, r3, r2
    7aa0:	strb	r2, [r0, #3]
    7aa4:	ldrb	r3, [r4, #4]
    7aa8:	ldrb	r2, [r4, #2950]	; 0xb86
    7aac:	tst	r3, #1
    7ab0:	bne	7ad0 <EV5@@Base+0x150>
    7ab4:	strb	r2, [r0, #4]
    7ab8:	ldrb	r1, [r4, #2951]	; 0xb87
    7abc:	strb	r1, [r0, #5]
    7ac0:	ldrb	r1, [r4, #2952]	; 0xb88
    7ac4:	strb	r1, [r0, #6]
    7ac8:	ldrb	r1, [r4, #2953]	; 0xb89
    7acc:	b	7b68 <EV5@@Base+0x1e8>
    7ad0:	add	r1, r1, #1
    7ad4:	smmla	r3, r1, r7, r1
    7ad8:	asr	r5, r3, #6
    7adc:	add	r3, r5, r3, lsr #31
    7ae0:	sub	r3, r3, r3, lsl #7
    7ae4:	add	r1, r1, r3
    7ae8:	ldrb	r3, [r6, r1]
    7aec:	add	r1, r1, #1
    7af0:	eor	r2, r3, r2
    7af4:	strb	r2, [r0, #4]
    7af8:	smmla	r2, r1, r7, r1
    7afc:	asr	r3, r2, #6
    7b00:	add	r2, r3, r2, lsr #31
    7b04:	ldrb	r3, [r4, #2951]	; 0xb87
    7b08:	sub	r2, r2, r2, lsl #7
    7b0c:	add	r1, r1, r2
    7b10:	ldrb	r2, [r6, r1]
    7b14:	add	r1, r1, #1
    7b18:	eor	r2, r2, r3
    7b1c:	strb	r2, [r0, #5]
    7b20:	smmla	r2, r1, r7, r1
    7b24:	asr	r3, r2, #6
    7b28:	add	r2, r3, r2, lsr #31
    7b2c:	ldrb	r3, [r4, #2952]	; 0xb88
    7b30:	sub	r2, r2, r2, lsl #7
    7b34:	add	r1, r1, r2
    7b38:	ldrb	r2, [r6, r1]
    7b3c:	add	r1, r1, #1
    7b40:	eor	r2, r2, r3
    7b44:	strb	r2, [r0, #6]
    7b48:	smmla	r2, r1, r7, r1
    7b4c:	asr	r3, r2, #6
    7b50:	add	r2, r3, r2, lsr #31
    7b54:	sub	r2, r2, r2, lsl #7
    7b58:	add	r1, r1, r2
    7b5c:	ldrb	r2, [r4, #2953]	; 0xb89
    7b60:	ldrb	r1, [r6, r1]
    7b64:	eor	r1, r1, r2
    7b68:	strb	r1, [r0, #7]
    7b6c:	ldr	r5, [r4, #64]	; 0x40
    7b70:	cmp	r5, #2
    7b74:	ble	7b88 <EV5@@Base+0x208>
    7b78:	mov	r0, r4
    7b7c:	bl	815c <HV@@Base+0x594>
    7b80:	cmp	r0, #0
    7b84:	bne	7bb0 <EV5@@Base+0x230>
    7b88:	add	r1, r5, #1
    7b8c:	cmp	r5, #181	; 0xb5
    7b90:	str	r1, [r4, #64]	; 0x40
    7b94:	blt	79c0 <EV5@@Base+0x40>
    7b98:	mov	r0, #2
    7b9c:	sub	sp, fp, #28
    7ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7ba4:	mov	r0, #1
    7ba8:	sub	sp, fp, #28
    7bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7bb0:	mov	r0, #10
    7bb4:	sub	sp, fp, #28
    7bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7bbc:	andeq	fp, r0, r6, ror #20
    7bc0:	andeq	sp, r0, ip, lsr #31
    7bc4:	nop	{0}

00007bc8 <HV@@Base>:
    7bc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7bcc:	add	fp, sp, #24
    7bd0:	sub	sp, sp, #80	; 0x50
    7bd4:	mov	r6, r0
    7bd8:	mov	r0, #0
    7bdc:	mov	r5, r1
    7be0:	str	r0, [r1, #40]	; 0x28
    7be4:	movw	r1, #2822	; 0xb06
    7be8:	ldrh	r1, [r5, r1]
    7bec:	lsr	r1, r1, #1
    7bf0:	cmp	r1, #180	; 0xb4
    7bf4:	bhi	7c0c <HV@@Base+0x44>
    7bf8:	str	r0, [r5, #64]	; 0x40
    7bfc:	mov	r8, #1
    7c00:	mov	r0, r8
    7c04:	sub	sp, fp, #24
    7c08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7c0c:	movw	r0, #2946	; 0xb82
    7c10:	mov	r8, #2
    7c14:	add	r1, r5, r0
    7c18:	ldrb	r0, [r5, #18]
    7c1c:	cmp	r0, #7
    7c20:	beq	7cec <HV@@Base+0x124>
    7c24:	cmp	r0, #6
    7c28:	beq	7d20 <HV@@Base+0x158>
    7c2c:	cmp	r0, #5
    7c30:	bne	7ee8 <HV@@Base+0x320>
    7c34:	vldr	d18, [pc, #700]	; 7ef8 <HV@@Base+0x330>
    7c38:	vldr	d19, [pc, #704]	; 7f00 <HV@@Base+0x338>
    7c3c:	vldr	d20, [pc, #708]	; 7f08 <HV@@Base+0x340>
    7c40:	movw	r0, #2946	; 0xb82
    7c44:	vmov.i32	q8, #0	; 0x00000000
    7c48:	mov	r2, #0
    7c4c:	vmov.i32	q11, #255	; 0x000000ff
    7c50:	add	r1, r5, r0
    7c54:	mov	r0, sp
    7c58:	mov	r3, r1
    7c5c:	add	r1, r1, #12
    7c60:	vld1.8	{d24}, [r3]!
    7c64:	ldr	r3, [r3]
    7c68:	vmov.32	d25[0], r3
    7c6c:	add	r3, r0, r2
    7c70:	add	r2, r2, #4
    7c74:	vtbl.8	d21, {d24-d25}, d18
    7c78:	vtbl.8	d26, {d24-d25}, d19
    7c7c:	vtbl.8	d24, {d24-d25}, d20
    7c80:	cmp	r2, #80	; 0x50
    7c84:	veor	d25, d26, d21
    7c88:	veor	d27, d24, d26
    7c8c:	veor	d28, d24, d21
    7c90:	vorr	d25, d27, d25
    7c94:	vorr	d27, d24, d21
    7c98:	vand	d21, d24, d21
    7c9c:	vorr	d25, d25, d28
    7ca0:	vand	d24, d27, d26
    7ca4:	vmovl.u16	q13, d25
    7ca8:	vorr	d21, d24, d21
    7cac:	vand	q12, q13, q11
    7cb0:	vuzp.8	d21, d26
    7cb4:	vadd.i32	q8, q8, q12
    7cb8:	vst1.32	{d21[0]}, [r3]
    7cbc:	bne	7c58 <HV@@Base+0x90>
    7cc0:	vext.8	q9, q8, q8, #8
    7cc4:	vadd.i32	q8, q8, q9
    7cc8:	vdup.32	q9, d16[1]
    7ccc:	vadd.i32	q8, q8, q9
    7cd0:	vmov.32	r1, d16[0]
    7cd4:	cmp	r1, #19
    7cd8:	bls	7d68 <HV@@Base+0x1a0>
    7cdc:	mov	r8, #0
    7ce0:	mov	r0, r8
    7ce4:	sub	sp, fp, #24
    7ce8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7cec:	mov	r0, #30
    7cf0:	str	r0, [r5, #64]	; 0x40
    7cf4:	ldr	r0, [r5, #4]
    7cf8:	orr	r2, r0, #128	; 0x80
    7cfc:	tst	r0, #1
    7d00:	str	r2, [r5, #4]
    7d04:	bne	7da0 <HV@@Base+0x1d8>
    7d08:	add	r0, r5, #68	; 0x44
    7d0c:	mov	r2, #240	; 0xf0
    7d10:	bl	4574 <memcpy@plt>
    7d14:	mov	r0, r8
    7d18:	sub	sp, fp, #24
    7d1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7d20:	mov	r0, r1
    7d24:	mov	r1, #160	; 0xa0
    7d28:	bl	7f28 <HV@@Base+0x360>
    7d2c:	cmp	r0, #0
    7d30:	beq	7e04 <HV@@Base+0x23c>
    7d34:	mov	r7, r0
    7d38:	mov	r0, #20
    7d3c:	str	r0, [r5, #64]	; 0x40
    7d40:	ldr	r0, [r5, #4]
    7d44:	orr	r1, r0, #128	; 0x80
    7d48:	tst	r0, #1
    7d4c:	str	r1, [r5, #4]
    7d50:	bne	7e14 <HV@@Base+0x24c>
    7d54:	add	r0, r5, #68	; 0x44
    7d58:	mov	r1, r7
    7d5c:	mov	r2, #160	; 0xa0
    7d60:	bl	4574 <memcpy@plt>
    7d64:	b	7e74 <HV@@Base+0x2ac>
    7d68:	mov	r1, #10
    7d6c:	str	r1, [r5, #64]	; 0x40
    7d70:	ldr	r1, [r5, #4]
    7d74:	orr	r2, r1, #128	; 0x80
    7d78:	tst	r1, #1
    7d7c:	str	r2, [r5, #4]
    7d80:	bne	7e88 <HV@@Base+0x2c0>
    7d84:	add	r0, r5, #68	; 0x44
    7d88:	mov	r1, sp
    7d8c:	mov	r2, #80	; 0x50
    7d90:	bl	4574 <memcpy@plt>
    7d94:	mov	r0, r8
    7d98:	sub	sp, fp, #24
    7d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7da0:	ldr	r1, [pc, #376]	; 7f20 <HV@@Base+0x358>
    7da4:	and	r0, r6, #63	; 0x3f
    7da8:	ldr	r2, [pc, #372]	; 7f24 <HV@@Base+0x35c>
    7dac:	add	r1, pc, r1
    7db0:	add	r2, pc, r2
    7db4:	ldrb	r0, [r1, r0]
    7db8:	movw	r1, #1033	; 0x409
    7dbc:	movt	r1, #33026	; 0x8102
    7dc0:	add	r3, r0, #18
    7dc4:	mov	r0, #0
    7dc8:	smmla	r7, r3, r1, r3
    7dcc:	asr	r6, r7, #6
    7dd0:	add	r7, r6, r7, lsr #31
    7dd4:	add	r6, r5, r0
    7dd8:	add	r0, r0, #1
    7ddc:	sub	r7, r7, r7, lsl #7
    7de0:	ldrb	r4, [r6, #2946]	; 0xb82
    7de4:	cmp	r0, #240	; 0xf0
    7de8:	add	r3, r3, r7
    7dec:	ldrb	r7, [r2, r3]
    7df0:	add	r3, r3, #1
    7df4:	eor	r7, r7, r4
    7df8:	strb	r7, [r6, #68]	; 0x44
    7dfc:	bne	7dc8 <HV@@Base+0x200>
    7e00:	b	7ee8 <HV@@Base+0x320>
    7e04:	mov	r8, #0
    7e08:	mov	r0, r8
    7e0c:	sub	sp, fp, #24
    7e10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7e14:	ldr	r1, [pc, #252]	; 7f18 <HV@@Base+0x350>
    7e18:	and	r0, r6, #63	; 0x3f
    7e1c:	ldr	r3, [pc, #248]	; 7f1c <HV@@Base+0x354>
    7e20:	movw	r2, #1033	; 0x409
    7e24:	movt	r2, #33026	; 0x8102
    7e28:	add	r1, pc, r1
    7e2c:	add	r3, pc, r3
    7e30:	ldrb	r0, [r1, r0]
    7e34:	mov	r1, #0
    7e38:	add	r6, r0, #18
    7e3c:	add	r0, r5, #68	; 0x44
    7e40:	smmla	r5, r6, r2, r6
    7e44:	asr	r4, r5, #6
    7e48:	add	r5, r4, r5, lsr #31
    7e4c:	ldrb	r4, [r7, r1]
    7e50:	sub	r5, r5, r5, lsl #7
    7e54:	add	r6, r6, r5
    7e58:	ldrb	r5, [r3, r6]
    7e5c:	add	r6, r6, #1
    7e60:	eor	r5, r5, r4
    7e64:	strb	r5, [r0, r1]
    7e68:	add	r1, r1, #1
    7e6c:	cmp	r1, #160	; 0xa0
    7e70:	bne	7e40 <HV@@Base+0x278>
    7e74:	mov	r0, r7
    7e78:	bl	4550 <free@plt>
    7e7c:	mov	r0, r8
    7e80:	sub	sp, fp, #24
    7e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7e88:	ldr	r2, [pc, #128]	; 7f10 <HV@@Base+0x348>
    7e8c:	and	r1, r6, #63	; 0x3f
    7e90:	ldr	r7, [pc, #124]	; 7f14 <HV@@Base+0x34c>
    7e94:	movw	r3, #1033	; 0x409
    7e98:	movt	r3, #33026	; 0x8102
    7e9c:	add	r2, pc, r2
    7ea0:	add	r7, pc, r7
    7ea4:	ldrb	r1, [r2, r1]
    7ea8:	mov	r2, #0
    7eac:	add	r6, r1, #18
    7eb0:	add	r1, r5, #68	; 0x44
    7eb4:	smmla	r5, r6, r3, r6
    7eb8:	asr	r4, r5, #6
    7ebc:	add	r5, r4, r5, lsr #31
    7ec0:	ldrb	r4, [r0, r2]
    7ec4:	sub	r5, r5, r5, lsl #7
    7ec8:	add	r6, r6, r5
    7ecc:	ldrb	r5, [r7, r6]
    7ed0:	add	r6, r6, #1
    7ed4:	eor	r5, r5, r4
    7ed8:	strb	r5, [r1, r2]
    7edc:	add	r2, r2, #1
    7ee0:	cmp	r2, #80	; 0x50
    7ee4:	bne	7eb4 <HV@@Base+0x2ec>
    7ee8:	mov	r0, r8
    7eec:	sub	sp, fp, #24
    7ef0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7ef4:	nop	{0}
    7ef8:			; <UNDEFINED> instruction: 0xff03ff00
    7efc:			; <UNDEFINED> instruction: 0xff09ff06
    7f00:			; <UNDEFINED> instruction: 0xff04ff01
    7f04:			; <UNDEFINED> instruction: 0xff0aff07
    7f08:			; <UNDEFINED> instruction: 0xff05ff02
    7f0c:			; <UNDEFINED> instruction: 0xff0bff08
    7f10:	andeq	fp, r0, r2, lsl #11
    7f14:	andeq	sp, r0, r8, asr #21
    7f18:	strdeq	fp, [r0], -r6
    7f1c:	andeq	sp, r0, ip, lsr fp
    7f20:	andeq	fp, r0, r2, ror r6
    7f24:			; <UNDEFINED> instruction: 0x0000dbb8
    7f28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7f2c:	add	fp, sp, #24
    7f30:	mov	r5, r0
    7f34:	movw	r0, #26215	; 0x6667
    7f38:	mov	r8, r1
    7f3c:	movt	r0, #26214	; 0x6666
    7f40:	smmul	r0, r1, r0
    7f44:	lsr	r1, r0, #2
    7f48:	add	r0, r1, r0, lsr #31
    7f4c:	add	r0, r0, r0, lsl #2
    7f50:	sub	r0, r8, r0, lsl #1
    7f54:	uxtb	r0, r0
    7f58:	rsb	r1, r0, #10
    7f5c:	cmp	r0, #0
    7f60:	addne	r8, r8, r1
    7f64:	mov	r0, r8
    7f68:	bl	4658 <malloc@plt>
    7f6c:	cmp	r8, #1
    7f70:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
    7f74:	mov	r1, #0
    7f78:	mvn	ip, #6
    7f7c:	vld1.8	{d16}, [r5]
    7f80:	ldrh	r2, [r5, #8]
    7f84:	add	r3, r0, r1
    7f88:	strh	r2, [r3, #8]
    7f8c:	vst1.8	{d16}, [r3]
    7f90:	ldrb	r2, [r5]
    7f94:	ldrb	r3, [r5, #1]
    7f98:	ldrb	r4, [r5, #2]
    7f9c:	ldrb	r6, [r5, #3]
    7fa0:	orr	r7, r2, r3, lsl #1
    7fa4:	and	r2, r2, #1
    7fa8:	rsb	r2, r2, #0
    7fac:	tst	r7, #2
    7fb0:	and	r3, r2, #11
    7fb4:	orr	r2, r7, r4, lsl #2
    7fb8:	ldrb	r7, [r5, #4]
    7fbc:	eorne	r3, r3, #22
    7fc0:	tst	r2, #4
    7fc4:	orr	r2, r2, r6, lsl #3
    7fc8:	eorne	r3, r3, #7
    7fcc:	tst	r2, #8
    7fd0:	eorne	r3, r3, #14
    7fd4:	orr	r2, r2, r7, lsl #4
    7fd8:	ldrb	r7, [r5, #5]
    7fdc:	tst	r2, #16
    7fe0:	eorne	r3, r3, #28
    7fe4:	orr	r2, r2, r7, lsl #5
    7fe8:	ldrb	r7, [r5, #6]
    7fec:	tst	r2, #32
    7ff0:	eorne	r3, r3, #19
    7ff4:	orr	r2, r2, r7, lsl #6
    7ff8:	ldrb	r7, [r5, #7]
    7ffc:	tst	r2, #64	; 0x40
    8000:	eorne	r3, r3, #13
    8004:	orr	r2, r2, r7, lsl #7
    8008:	ldrb	r7, [r5, #8]
    800c:	tst	r2, #128	; 0x80
    8010:	eorne	r3, r3, #26
    8014:	orr	r2, r2, r7, lsl #8
    8018:	ldrb	r7, [r5, #9]
    801c:	tst	r2, #256	; 0x100
    8020:	eorne	r3, r3, #31
    8024:	orr	r2, r2, r7, lsl #9
    8028:	ldrb	r7, [r5, #10]
    802c:	tst	r2, #512	; 0x200
    8030:	ldrb	r2, [r5, #11]
    8034:	eorne	r3, r3, #21
    8038:	orr	r2, r7, r2, lsl #1
    803c:	ldrb	r7, [r5, #12]
    8040:	orr	r2, r2, r7, lsl #2
    8044:	ldrb	r7, [r5, #13]
    8048:	orr	r2, r2, r7, lsl #3
    804c:	ldrb	r7, [r5, #14]
    8050:	orr	r2, r2, r7, lsl #4
    8054:	eor	r3, r2, r3
    8058:	sub	r2, r3, #1
    805c:	and	r2, r2, r3
    8060:	tst	r2, #255	; 0xff
    8064:	beq	813c <HV@@Base+0x574>
    8068:	uxtab	r3, ip, r3
    806c:	cmp	r3, #24
    8070:	bhi	8150 <HV@@Base+0x588>
    8074:	add	r2, pc, #4
    8078:	ldr	r3, [r2, r3, lsl #2]
    807c:	add	pc, r2, r3
    8080:	andeq	r0, r0, r4, rrx
    8084:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8088:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    808c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8090:	andeq	r0, r0, ip, rrx
    8094:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8098:	andeq	r0, r0, r4, ror r0
    809c:	andeq	r0, r0, ip, ror r0
    80a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80b0:	andeq	r0, r0, r4, lsl #1
    80b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80b8:	andeq	r0, r0, ip, lsl #1
    80bc:	muleq	r0, r4, r0
    80c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80cc:	muleq	r0, ip, r0
    80d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80d4:	andeq	r0, r0, r4, lsr #1
    80d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    80e0:	andeq	r0, r0, ip, lsr #1
    80e4:	add	r3, r1, #2
    80e8:	b	8130 <HV@@Base+0x568>
    80ec:	mov	r3, r1
    80f0:	b	8130 <HV@@Base+0x568>
    80f4:	add	r3, r1, #6
    80f8:	b	8130 <HV@@Base+0x568>
    80fc:	add	r3, r1, #3
    8100:	b	8130 <HV@@Base+0x568>
    8104:	add	r3, r1, #5
    8108:	b	8130 <HV@@Base+0x568>
    810c:	add	r3, r1, #9
    8110:	b	8130 <HV@@Base+0x568>
    8114:	orr	r3, r1, #1
    8118:	b	8130 <HV@@Base+0x568>
    811c:	add	r3, r1, #7
    8120:	b	8130 <HV@@Base+0x568>
    8124:	add	r3, r1, #4
    8128:	b	8130 <HV@@Base+0x568>
    812c:	add	r3, r1, #8
    8130:	ldrb	r2, [r0, r3]
    8134:	eor	r2, r2, #1
    8138:	strb	r2, [r0, r3]
    813c:	add	r1, r1, #10
    8140:	add	r5, r5, #15
    8144:	cmp	r1, r8
    8148:	blt	7f7c <HV@@Base+0x3b4>
    814c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    8150:	bl	4550 <free@plt>
    8154:	mov	r0, #0
    8158:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    815c:	push	{r4, sl, fp, lr}
    8160:	add	fp, sp, #8
    8164:	ldrb	r1, [r0, #9]
    8168:	mov	r2, #2
    816c:	lsl	r3, r1, #7
    8170:	and	r2, r2, r1, lsr #5
    8174:	orr	r3, r3, r1, lsr #7
    8178:	orr	r2, r3, r2
    817c:	mov	r3, #4
    8180:	and	r3, r3, r1, lsr #3
    8184:	orr	r2, r2, r3
    8188:	mov	r3, #8
    818c:	and	r3, r3, r1, lsr #1
    8190:	orr	r2, r2, r3
    8194:	and	r3, r1, #8
    8198:	orr	r2, r2, r3, lsl #1
    819c:	and	r3, r1, #4
    81a0:	and	r1, r1, #2
    81a4:	orr	r2, r2, r3, lsl #3
    81a8:	mvn	r3, #15
    81ac:	orr	r1, r2, r1, lsl #5
    81b0:	ldr	r2, [r0, #64]	; 0x40
    81b4:	lsl	r1, r1, #8
    81b8:	add	lr, r3, r2, lsl #3
    81bc:	cmp	lr, #1
    81c0:	blt	8204 <HV@@Base+0x63c>
    81c4:	mov	r2, #0
    81c8:	movw	ip, #65534	; 0xfffe
    81cc:	mov	r3, #0
    81d0:	add	r2, r0, r2
    81d4:	and	r4, r1, ip
    81d8:	add	r3, r3, #1
    81dc:	ldrb	r2, [r2, #68]	; 0x44
    81e0:	eor	r1, r1, r2
    81e4:	lsl	r2, r1, #15
    81e8:	and	r1, r1, #1
    81ec:	orr	r2, r2, r4, lsr #1
    81f0:	eor	r2, r2, r1, lsl #10
    81f4:	eor	r1, r2, r1, lsl #3
    81f8:	uxth	r2, r3
    81fc:	cmp	lr, r2
    8200:	bgt	81d0 <HV@@Base+0x608>
    8204:	add	r0, r0, lr
    8208:	uxth	r1, r1
    820c:	ldrb	ip, [r0, #68]	; 0x44
    8210:	ldrb	r3, [r0, #69]	; 0x45
    8214:	ldrb	r4, [r0, #70]	; 0x46
    8218:	ldrb	r2, [r0, #71]	; 0x47
    821c:	orr	r3, ip, r3, lsl #1
    8220:	orr	r3, r3, r4, lsl #2
    8224:	orr	r2, r3, r2, lsl #3
    8228:	ldrb	r3, [r0, #72]	; 0x48
    822c:	orr	r2, r2, r3, lsl #4
    8230:	ldrb	r3, [r0, #73]	; 0x49
    8234:	orr	r2, r2, r3, lsl #5
    8238:	ldrb	r3, [r0, #74]	; 0x4a
    823c:	orr	r2, r2, r3, lsl #6
    8240:	ldrb	r3, [r0, #75]	; 0x4b
    8244:	orr	r2, r2, r3, lsl #7
    8248:	ldrb	r3, [r0, #76]	; 0x4c
    824c:	orr	r2, r2, r3, lsl #8
    8250:	ldrb	r3, [r0, #77]	; 0x4d
    8254:	orr	r2, r2, r3, lsl #9
    8258:	ldrb	r3, [r0, #78]	; 0x4e
    825c:	orr	r2, r2, r3, lsl #10
    8260:	ldrb	r3, [r0, #79]	; 0x4f
    8264:	orr	r2, r2, r3, lsl #11
    8268:	ldrb	r3, [r0, #80]	; 0x50
    826c:	orr	r2, r2, r3, lsl #12
    8270:	ldrb	r3, [r0, #81]	; 0x51
    8274:	orr	r2, r2, r3, lsl #13
    8278:	ldrb	r3, [r0, #82]	; 0x52
    827c:	ldrb	r0, [r0, #83]	; 0x53
    8280:	orr	r2, r2, r3, lsl #14
    8284:	orr	r0, r2, r0, lsl #15
    8288:	uxth	r0, r0
    828c:	sub	r0, r1, r0
    8290:	clz	r0, r0
    8294:	lsr	r0, r0, #5
    8298:	pop	{r4, sl, fp, pc}
    829c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    82a0:	add	fp, sp, #28
    82a4:	sub	sp, sp, #36	; 0x24
    82a8:	mov	r6, r1
    82ac:	ldr	sl, [fp, #12]
    82b0:	ldr	r1, [fp, #8]
    82b4:	mov	r9, r2
    82b8:	mov	r5, #0
    82bc:	cmp	r2, #2
    82c0:	bne	8398 <HV@@Base+0x7d0>
    82c4:	cmp	r3, #16
    82c8:	blt	8f14 <HV@@Base+0x134c>
    82cc:	cmp	r1, #0
    82d0:	beq	842c <HV@@Base+0x864>
    82d4:	cmp	r3, #30
    82d8:	blt	8f14 <HV@@Base+0x134c>
    82dc:	mov	r1, #16
    82e0:	bl	7f28 <HV@@Base+0x360>
    82e4:	cmp	r0, #0
    82e8:	beq	8f14 <HV@@Base+0x134c>
    82ec:	ldr	r2, [pc, #3116]	; 8f20 <HV@@Base+0x1358>
    82f0:	and	r1, r6, #63	; 0x3f
    82f4:	ldrb	r5, [sl, #4]
    82f8:	add	r2, pc, r2
    82fc:	tst	r5, #1
    8300:	ldrb	r1, [r2, r1]
    8304:	add	r2, r1, #18
    8308:	movw	r1, #2065	; 0x811
    830c:	movt	r1, #516	; 0x204
    8310:	umull	r3, r6, r2, r1
    8314:	ldrb	r3, [r0]
    8318:	bne	89ec <HV@@Base+0xe24>
    831c:	strb	r3, [sl, #44]	; 0x2c
    8320:	ldrb	r1, [r0, #1]
    8324:	strb	r1, [sl, #45]	; 0x2d
    8328:	ldrb	r1, [r0, #2]
    832c:	strb	r1, [sl, #46]	; 0x2e
    8330:	ldrb	r1, [r0, #3]
    8334:	strb	r1, [sl, #47]	; 0x2f
    8338:	ldrb	r1, [r0, #4]
    833c:	strb	r1, [sl, #48]	; 0x30
    8340:	ldrb	r1, [r0, #5]
    8344:	strb	r1, [sl, #49]	; 0x31
    8348:	ldrb	r1, [r0, #6]
    834c:	strb	r1, [sl, #50]	; 0x32
    8350:	ldrb	r1, [r0, #7]
    8354:	strb	r1, [sl, #51]	; 0x33
    8358:	ldrb	r1, [r0, #8]
    835c:	strb	r1, [sl, #52]	; 0x34
    8360:	ldrb	r1, [r0, #9]
    8364:	strb	r1, [sl, #53]	; 0x35
    8368:	ldrb	r1, [r0, #10]
    836c:	strb	r1, [sl, #54]	; 0x36
    8370:	ldrb	r1, [r0, #11]
    8374:	strb	r1, [sl, #55]	; 0x37
    8378:	ldrb	r1, [r0, #12]
    837c:	strb	r1, [sl, #56]	; 0x38
    8380:	ldrb	r1, [r0, #13]
    8384:	strb	r1, [sl, #57]	; 0x39
    8388:	ldrb	r1, [r0, #14]
    838c:	strb	r1, [sl, #58]	; 0x3a
    8390:	ldrb	r1, [r0, #15]
    8394:	b	8ca4 <HV@@Base+0x10dc>
    8398:	cmp	r3, #8
    839c:	blt	8f14 <HV@@Base+0x134c>
    83a0:	cmp	r1, #0
    83a4:	beq	84e0 <HV@@Base+0x918>
    83a8:	cmp	r3, #15
    83ac:	blt	8f14 <HV@@Base+0x134c>
    83b0:	mov	r1, #8
    83b4:	bl	7f28 <HV@@Base+0x360>
    83b8:	cmp	r0, #0
    83bc:	beq	8f14 <HV@@Base+0x134c>
    83c0:	ldr	r2, [pc, #2912]	; 8f28 <HV@@Base+0x1360>
    83c4:	and	r1, r6, #63	; 0x3f
    83c8:	ldrb	r5, [sl, #4]
    83cc:	add	r2, pc, r2
    83d0:	tst	r5, #1
    83d4:	ldrb	r1, [r2, r1]
    83d8:	add	r2, r1, #18
    83dc:	movw	r1, #2065	; 0x811
    83e0:	movt	r1, #516	; 0x204
    83e4:	umull	r3, r6, r2, r1
    83e8:	ldrb	r3, [r0]
    83ec:	bne	8d34 <HV@@Base+0x116c>
    83f0:	strb	r3, [sl, #44]	; 0x2c
    83f4:	ldrb	r1, [r0, #1]
    83f8:	strb	r1, [sl, #45]	; 0x2d
    83fc:	ldrb	r1, [r0, #2]
    8400:	strb	r1, [sl, #46]	; 0x2e
    8404:	ldrb	r1, [r0, #3]
    8408:	strb	r1, [sl, #47]	; 0x2f
    840c:	ldrb	r1, [r0, #4]
    8410:	strb	r1, [sl, #48]	; 0x30
    8414:	ldrb	r1, [r0, #5]
    8418:	strb	r1, [sl, #49]	; 0x31
    841c:	ldrb	r1, [r0, #6]
    8420:	strb	r1, [sl, #50]	; 0x32
    8424:	ldrb	r1, [r0, #7]
    8428:	b	8e8c <HV@@Base+0x12c4>
    842c:	ldr	r2, [pc, #2800]	; 8f24 <HV@@Base+0x135c>
    8430:	and	r1, r6, #63	; 0x3f
    8434:	movw	r8, #2065	; 0x811
    8438:	ldrb	r5, [sl, #4]
    843c:	movt	r8, #516	; 0x204
    8440:	add	r2, pc, r2
    8444:	tst	r5, #1
    8448:	ldrb	r1, [r2, r1]
    844c:	add	r3, r1, #18
    8450:	umull	r2, r6, r3, r8
    8454:	ldrb	r2, [r0]
    8458:	bne	854c <HV@@Base+0x984>
    845c:	strb	r2, [sl, #44]	; 0x2c
    8460:	ldrb	r1, [r0, #1]
    8464:	strb	r1, [sl, #45]	; 0x2d
    8468:	ldrb	r1, [r0, #2]
    846c:	strb	r1, [sl, #46]	; 0x2e
    8470:	ldrb	r4, [r0, #3]
    8474:	strb	r4, [sl, #47]	; 0x2f
    8478:	ldrb	r7, [r0, #4]
    847c:	strb	r7, [sl, #48]	; 0x30
    8480:	ldrb	ip, [r0, #5]
    8484:	strb	ip, [sl, #49]	; 0x31
    8488:	ldrb	r5, [r0, #6]
    848c:	strb	r5, [sl, #50]	; 0x32
    8490:	ldrb	r8, [r0, #7]
    8494:	strb	r8, [sl, #51]	; 0x33
    8498:	ldrb	r1, [r0, #8]
    849c:	strb	r1, [sl, #52]	; 0x34
    84a0:	str	r1, [sp, #28]
    84a4:	ldrb	r1, [r0, #9]
    84a8:	strb	r1, [sl, #53]	; 0x35
    84ac:	str	r1, [sp, #32]
    84b0:	ldrb	r3, [r0, #10]
    84b4:	strb	r3, [sl, #54]	; 0x36
    84b8:	ldrb	r6, [r0, #11]
    84bc:	strb	r6, [sl, #55]	; 0x37
    84c0:	ldrb	r2, [r0, #12]
    84c4:	strb	r2, [sl, #56]	; 0x38
    84c8:	ldrb	r1, [r0, #13]
    84cc:	strb	r1, [sl, #57]	; 0x39
    84d0:	ldrb	r1, [r0, #14]
    84d4:	strb	r1, [sl, #58]	; 0x3a
    84d8:	ldrb	r0, [r0, #15]
    84dc:	b	8884 <HV@@Base+0xcbc>
    84e0:	ldr	r2, [pc, #2628]	; 8f2c <HV@@Base+0x1364>
    84e4:	and	r1, r6, #63	; 0x3f
    84e8:	ldrb	r5, [sl, #4]
    84ec:	add	r2, pc, r2
    84f0:	tst	r5, #1
    84f4:	ldrb	r1, [r2, r1]
    84f8:	add	r3, r1, #18
    84fc:	movw	r1, #2065	; 0x811
    8500:	movt	r1, #516	; 0x204
    8504:	umull	r2, r6, r3, r1
    8508:	ldrb	r2, [r0]
    850c:	bne	888c <HV@@Base+0xcc4>
    8510:	strb	r2, [sl, #44]	; 0x2c
    8514:	ldrb	r1, [r0, #1]
    8518:	strb	r1, [sl, #45]	; 0x2d
    851c:	ldrb	r1, [r0, #2]
    8520:	strb	r1, [sl, #46]	; 0x2e
    8524:	ldrb	r3, [r0, #3]
    8528:	strb	r3, [sl, #47]	; 0x2f
    852c:	ldrb	r6, [r0, #4]
    8530:	strb	r6, [sl, #48]	; 0x30
    8534:	ldrb	r5, [r0, #5]
    8538:	strb	r5, [sl, #49]	; 0x31
    853c:	ldrb	r2, [r0, #6]
    8540:	strb	r2, [sl, #50]	; 0x32
    8544:	ldrb	r0, [r0, #7]
    8548:	b	89e4 <HV@@Base+0xe1c>
    854c:	sub	r5, r3, r6
    8550:	ldr	r7, [pc, #2524]	; 8f34 <HV@@Base+0x136c>
    8554:	add	r6, r6, r5, lsr #1
    8558:	lsr	r6, r6, #6
    855c:	sub	r6, r6, r6, lsl #7
    8560:	add	r3, r3, r6
    8564:	add	r7, pc, r7
    8568:	ldrb	r6, [r7, r3]
    856c:	eor	r2, r6, r2
    8570:	strb	r2, [sl, #44]	; 0x2c
    8574:	add	r2, r3, #1
    8578:	umull	r3, r6, r2, r8
    857c:	sub	r3, r2, r6
    8580:	add	r3, r6, r3, lsr #1
    8584:	ldrb	r6, [r0, #1]
    8588:	lsr	r3, r3, #6
    858c:	sub	r3, r3, r3, lsl #7
    8590:	add	r2, r2, r3
    8594:	ldrb	r3, [r7, r2]
    8598:	add	r2, r2, #1
    859c:	eor	r3, r3, r6
    85a0:	strb	r3, [sl, #45]	; 0x2d
    85a4:	umull	r3, r6, r2, r8
    85a8:	sub	r3, r2, r6
    85ac:	add	r3, r6, r3, lsr #1
    85b0:	ldrb	r6, [r0, #2]
    85b4:	lsr	r3, r3, #6
    85b8:	sub	r3, r3, r3, lsl #7
    85bc:	add	r2, r2, r3
    85c0:	ldrb	r3, [r7, r2]
    85c4:	add	r2, r2, #1
    85c8:	eor	r3, r3, r6
    85cc:	strb	r3, [sl, #46]	; 0x2e
    85d0:	umull	r3, r6, r2, r8
    85d4:	sub	r3, r2, r6
    85d8:	add	r3, r6, r3, lsr #1
    85dc:	lsr	r3, r3, #6
    85e0:	sub	r3, r3, r3, lsl #7
    85e4:	add	r2, r2, r3
    85e8:	str	r2, [sp, #32]
    85ec:	add	r2, r2, #1
    85f0:	umull	r3, r6, r2, r8
    85f4:	sub	r3, r2, r6
    85f8:	add	r3, r6, r3, lsr #1
    85fc:	lsr	r3, r3, #6
    8600:	sub	r3, r3, r3, lsl #7
    8604:	add	r2, r2, r3
    8608:	str	r2, [sp, #28]
    860c:	add	r2, r2, #1
    8610:	umull	r3, r6, r2, r8
    8614:	sub	r3, r2, r6
    8618:	add	r3, r6, r3, lsr #1
    861c:	lsr	r3, r3, #6
    8620:	sub	r3, r3, r3, lsl #7
    8624:	add	r2, r2, r3
    8628:	str	r2, [sp, #24]
    862c:	add	r2, r2, #1
    8630:	umull	r3, r6, r2, r8
    8634:	sub	r3, r2, r6
    8638:	add	r3, r6, r3, lsr #1
    863c:	lsr	r3, r3, #6
    8640:	sub	r3, r3, r3, lsl #7
    8644:	add	r2, r2, r3
    8648:	str	r2, [sp, #20]
    864c:	add	r2, r2, #1
    8650:	umull	r3, r6, r2, r8
    8654:	sub	r3, r2, r6
    8658:	add	r3, r6, r3, lsr #1
    865c:	lsr	r3, r3, #6
    8660:	sub	r3, r3, r3, lsl #7
    8664:	add	lr, r2, r3
    8668:	add	r3, lr, #1
    866c:	umull	r6, r1, r3, r8
    8670:	sub	r6, r3, r1
    8674:	add	r1, r1, r6, lsr #1
    8678:	lsr	r1, r1, #6
    867c:	sub	r1, r1, r1, lsl #7
    8680:	add	r3, r3, r1
    8684:	add	r1, r3, #1
    8688:	umull	r6, r4, r1, r8
    868c:	sub	r6, r1, r4
    8690:	add	r6, r4, r6, lsr #1
    8694:	lsr	r6, r6, #6
    8698:	sub	r6, r6, r6, lsl #7
    869c:	add	r6, r1, r6
    86a0:	add	r1, r6, #1
    86a4:	umull	r4, r7, r1, r8
    86a8:	sub	r4, r1, r7
    86ac:	add	r7, r7, r4, lsr #1
    86b0:	lsr	r7, r7, #6
    86b4:	sub	r7, r7, r7, lsl #7
    86b8:	add	r4, r1, r7
    86bc:	add	r1, r4, #1
    86c0:	umull	r7, ip, r1, r8
    86c4:	sub	r7, r1, ip
    86c8:	add	r7, ip, r7, lsr #1
    86cc:	lsr	r7, r7, #6
    86d0:	sub	r7, r7, r7, lsl #7
    86d4:	add	ip, r1, r7
    86d8:	add	r1, ip, #1
    86dc:	umull	r5, r7, r1, r8
    86e0:	sub	r5, r1, r7
    86e4:	add	r5, r7, r5, lsr #1
    86e8:	lsr	r5, r5, #6
    86ec:	sub	r5, r5, r5, lsl #7
    86f0:	add	r1, r1, r5
    86f4:	add	r5, r1, #1
    86f8:	umull	r7, r8, r5, r8
    86fc:	sub	r7, r5, r8
    8700:	add	r7, r8, r7, lsr #1
    8704:	lsr	r7, r7, #6
    8708:	sub	r7, r7, r7, lsl #7
    870c:	add	r2, r5, r7
    8710:	str	r2, [sp, #16]
    8714:	ldr	r8, [pc, #2076]	; 8f38 <HV@@Base+0x1370>
    8718:	ldr	r2, [sp, #20]
    871c:	add	r8, pc, r8
    8720:	ldrb	r1, [r8, r1]
    8724:	mov	r5, r8
    8728:	ldrb	r3, [r8, r3]
    872c:	str	r1, [sp, #12]
    8730:	ldrb	r1, [r8, ip]
    8734:	str	r1, [sp, #8]
    8738:	ldrb	r1, [r8, r4]
    873c:	str	r1, [sp, #4]
    8740:	ldrb	r1, [r8, r6]
    8744:	ldrb	r6, [r8, lr]
    8748:	ldrb	lr, [r8, r2]
    874c:	ldr	r2, [sp, #24]
    8750:	ldrb	r7, [r8, r2]
    8754:	ldr	r2, [sp, #28]
    8758:	ldrb	r4, [r8, r2]
    875c:	ldr	r2, [sp, #32]
    8760:	ldrb	r2, [r8, r2]
    8764:	ldrb	r8, [r0, #3]
    8768:	eor	r2, r2, r8
    876c:	strb	r2, [sl, #47]	; 0x2f
    8770:	str	r2, [sp, #24]
    8774:	ldrb	r2, [r0, #4]
    8778:	eor	r2, r4, r2
    877c:	strb	r2, [sl, #48]	; 0x30
    8780:	str	r2, [sp, #20]
    8784:	ldrb	r2, [r0, #5]
    8788:	eor	ip, r7, r2
    878c:	strb	ip, [sl, #49]	; 0x31
    8790:	ldrb	r2, [r0, #6]
    8794:	eor	r5, lr, r2
    8798:	strb	r5, [sl, #50]	; 0x32
    879c:	ldrb	r7, [r0, #7]
    87a0:	eor	r7, r6, r7
    87a4:	strb	r7, [sl, #51]	; 0x33
    87a8:	ldrb	r6, [r0, #8]
    87ac:	eor	r2, r3, r6
    87b0:	strb	r2, [sl, #52]	; 0x34
    87b4:	str	r2, [sp, #28]
    87b8:	ldr	r2, [sp, #8]
    87bc:	ldrb	r3, [r0, #9]
    87c0:	eor	r1, r1, r3
    87c4:	strb	r1, [sl, #53]	; 0x35
    87c8:	str	r1, [sp, #32]
    87cc:	ldr	r1, [sp, #4]
    87d0:	ldrb	r3, [r0, #10]
    87d4:	eor	r3, r1, r3
    87d8:	strb	r3, [sl, #54]	; 0x36
    87dc:	ldrb	r1, [r0, #11]
    87e0:	eor	r6, r2, r1
    87e4:	ldr	r2, [sp, #12]
    87e8:	strb	r6, [sl, #55]	; 0x37
    87ec:	ldrb	r1, [r0, #12]
    87f0:	eor	r2, r2, r1
    87f4:	strb	r2, [sl, #56]	; 0x38
    87f8:	ldr	lr, [pc, #1852]	; 8f3c <HV@@Base+0x1374>
    87fc:	ldr	r8, [sp, #16]
    8800:	ldrb	r4, [r0, #13]
    8804:	add	lr, pc, lr
    8808:	ldrb	r1, [lr, r8]
    880c:	eor	r1, r1, r4
    8810:	movw	r4, #2065	; 0x811
    8814:	strb	r1, [sl, #57]	; 0x39
    8818:	add	r1, r8, #1
    881c:	movt	r4, #516	; 0x204
    8820:	umull	r4, r8, r1, r4
    8824:	sub	r4, r1, r8
    8828:	add	r4, r8, r4, lsr #1
    882c:	mov	r8, r7
    8830:	ldrb	r7, [r0, #14]
    8834:	lsr	r4, r4, #6
    8838:	sub	r4, r4, r4, lsl #7
    883c:	add	r1, r1, r4
    8840:	ldrb	r4, [lr, r1]
    8844:	add	r1, r1, #1
    8848:	eor	r4, r4, r7
    884c:	strb	r4, [sl, #58]	; 0x3a
    8850:	movw	r4, #2065	; 0x811
    8854:	movt	r4, #516	; 0x204
    8858:	ldrb	r0, [r0, #15]
    885c:	umull	r4, r7, r1, r4
    8860:	sub	r4, r1, r7
    8864:	add	r4, r7, r4, lsr #1
    8868:	ldr	r7, [sp, #20]
    886c:	lsr	r4, r4, #6
    8870:	sub	r4, r4, r4, lsl #7
    8874:	add	r1, r1, r4
    8878:	ldr	r4, [sp, #24]
    887c:	ldrb	r1, [lr, r1]
    8880:	eor	r0, r1, r0
    8884:	strb	r0, [sl, #59]	; 0x3b
    8888:	b	8cdc <HV@@Base+0x1114>
    888c:	sub	r7, r3, r6
    8890:	ldr	ip, [pc, #1708]	; 8f44 <HV@@Base+0x137c>
    8894:	add	r7, r6, r7, lsr #1
    8898:	lsr	r7, r7, #6
    889c:	sub	r7, r7, r7, lsl #7
    88a0:	add	r3, r3, r7
    88a4:	add	ip, pc, ip
    88a8:	ldrb	r7, [ip, r3]
    88ac:	eor	r2, r7, r2
    88b0:	strb	r2, [sl, #44]	; 0x2c
    88b4:	add	r2, r3, #1
    88b8:	umull	r3, r7, r2, r1
    88bc:	sub	r3, r2, r7
    88c0:	add	r3, r7, r3, lsr #1
    88c4:	ldrb	r7, [r0, #1]
    88c8:	lsr	r3, r3, #6
    88cc:	sub	r3, r3, r3, lsl #7
    88d0:	add	r2, r2, r3
    88d4:	ldrb	r3, [ip, r2]
    88d8:	add	r2, r2, #1
    88dc:	eor	r3, r3, r7
    88e0:	strb	r3, [sl, #45]	; 0x2d
    88e4:	umull	r3, r7, r2, r1
    88e8:	sub	r3, r2, r7
    88ec:	add	r3, r7, r3, lsr #1
    88f0:	ldrb	r7, [r0, #2]
    88f4:	lsr	r3, r3, #6
    88f8:	sub	r3, r3, r3, lsl #7
    88fc:	add	r2, r2, r3
    8900:	ldrb	r3, [ip, r2]
    8904:	add	r2, r2, #1
    8908:	eor	r3, r3, r7
    890c:	strb	r3, [sl, #46]	; 0x2e
    8910:	umull	r3, r7, r2, r1
    8914:	sub	r3, r2, r7
    8918:	add	r3, r7, r3, lsr #1
    891c:	lsr	r3, r3, #6
    8920:	sub	r3, r3, r3, lsl #7
    8924:	add	r2, r2, r3
    8928:	add	r3, r2, #1
    892c:	ldrb	r2, [ip, r2]
    8930:	umull	r7, r6, r3, r1
    8934:	sub	r7, r3, r6
    8938:	add	r7, r6, r7, lsr #1
    893c:	lsr	r7, r7, #6
    8940:	sub	r7, r7, r7, lsl #7
    8944:	add	r3, r3, r7
    8948:	add	r7, r3, #1
    894c:	umull	r6, r5, r7, r1
    8950:	sub	r6, r7, r5
    8954:	add	r6, r5, r6, lsr #1
    8958:	lsr	r6, r6, #6
    895c:	sub	r6, r6, r6, lsl #7
    8960:	add	r7, r7, r6
    8964:	add	r6, r7, #1
    8968:	ldrb	r7, [ip, r7]
    896c:	umull	r5, r4, r6, r1
    8970:	sub	r5, r6, r4
    8974:	add	r5, r4, r5, lsr #1
    8978:	lsr	r5, r5, #6
    897c:	sub	r5, r5, r5, lsl #7
    8980:	add	r4, r6, r5
    8984:	ldrb	r6, [ip, r3]
    8988:	ldrb	r3, [r0, #3]
    898c:	eor	r3, r2, r3
    8990:	strb	r3, [sl, #47]	; 0x2f
    8994:	ldrb	r2, [r0, #4]
    8998:	eor	r6, r6, r2
    899c:	strb	r6, [sl, #48]	; 0x30
    89a0:	ldrb	r2, [r0, #5]
    89a4:	eor	r5, r7, r2
    89a8:	ldrb	r2, [ip, r4]
    89ac:	strb	r5, [sl, #49]	; 0x31
    89b0:	ldrb	r7, [r0, #6]
    89b4:	eor	r2, r2, r7
    89b8:	add	r7, r4, #1
    89bc:	umull	r1, r4, r7, r1
    89c0:	strb	r2, [sl, #50]	; 0x32
    89c4:	sub	r1, r7, r4
    89c8:	ldrb	r0, [r0, #7]
    89cc:	add	r1, r4, r1, lsr #1
    89d0:	lsr	r1, r1, #6
    89d4:	sub	r1, r1, r1, lsl #7
    89d8:	add	r1, r7, r1
    89dc:	ldrb	r1, [ip, r1]
    89e0:	eor	r0, r1, r0
    89e4:	strb	r0, [sl, #51]	; 0x33
    89e8:	b	8ea8 <HV@@Base+0x12e0>
    89ec:	sub	r7, r2, r6
    89f0:	add	r7, r6, r7, lsr #1
    89f4:	lsr	r7, r7, #6
    89f8:	sub	r7, r7, r7, lsl #7
    89fc:	add	r7, r2, r7
    8a00:	ldr	r2, [pc, #1336]	; 8f40 <HV@@Base+0x1378>
    8a04:	add	r2, pc, r2
    8a08:	ldrb	r6, [r2, r7]
    8a0c:	eor	r3, r6, r3
    8a10:	strb	r3, [sl, #44]	; 0x2c
    8a14:	add	r3, r7, #1
    8a18:	umull	r7, r6, r3, r1
    8a1c:	sub	r7, r3, r6
    8a20:	add	r7, r6, r7, lsr #1
    8a24:	ldrb	r6, [r0, #1]
    8a28:	lsr	r7, r7, #6
    8a2c:	sub	r7, r7, r7, lsl #7
    8a30:	add	r3, r3, r7
    8a34:	ldrb	r7, [r2, r3]
    8a38:	add	r3, r3, #1
    8a3c:	eor	r7, r7, r6
    8a40:	strb	r7, [sl, #45]	; 0x2d
    8a44:	umull	r7, r6, r3, r1
    8a48:	sub	r7, r3, r6
    8a4c:	add	r7, r6, r7, lsr #1
    8a50:	ldrb	r6, [r0, #2]
    8a54:	lsr	r7, r7, #6
    8a58:	sub	r7, r7, r7, lsl #7
    8a5c:	add	r3, r3, r7
    8a60:	ldrb	r7, [r2, r3]
    8a64:	add	r3, r3, #1
    8a68:	eor	r7, r7, r6
    8a6c:	strb	r7, [sl, #46]	; 0x2e
    8a70:	umull	r7, r6, r3, r1
    8a74:	sub	r7, r3, r6
    8a78:	add	r7, r6, r7, lsr #1
    8a7c:	ldrb	r6, [r0, #3]
    8a80:	lsr	r7, r7, #6
    8a84:	sub	r7, r7, r7, lsl #7
    8a88:	add	r3, r3, r7
    8a8c:	ldrb	r7, [r2, r3]
    8a90:	add	r3, r3, #1
    8a94:	eor	r7, r7, r6
    8a98:	strb	r7, [sl, #47]	; 0x2f
    8a9c:	umull	r7, r6, r3, r1
    8aa0:	sub	r7, r3, r6
    8aa4:	add	r7, r6, r7, lsr #1
    8aa8:	ldrb	r6, [r0, #4]
    8aac:	lsr	r7, r7, #6
    8ab0:	sub	r7, r7, r7, lsl #7
    8ab4:	add	r3, r3, r7
    8ab8:	ldrb	r7, [r2, r3]
    8abc:	add	r3, r3, #1
    8ac0:	eor	r7, r7, r6
    8ac4:	strb	r7, [sl, #48]	; 0x30
    8ac8:	umull	r7, r6, r3, r1
    8acc:	sub	r7, r3, r6
    8ad0:	add	r7, r6, r7, lsr #1
    8ad4:	ldrb	r6, [r0, #5]
    8ad8:	lsr	r7, r7, #6
    8adc:	sub	r7, r7, r7, lsl #7
    8ae0:	add	r3, r3, r7
    8ae4:	ldrb	r7, [r2, r3]
    8ae8:	add	r3, r3, #1
    8aec:	eor	r7, r7, r6
    8af0:	strb	r7, [sl, #49]	; 0x31
    8af4:	umull	r7, r6, r3, r1
    8af8:	sub	r7, r3, r6
    8afc:	add	r7, r6, r7, lsr #1
    8b00:	ldrb	r6, [r0, #6]
    8b04:	lsr	r7, r7, #6
    8b08:	sub	r7, r7, r7, lsl #7
    8b0c:	add	r3, r3, r7
    8b10:	ldrb	r7, [r2, r3]
    8b14:	add	r3, r3, #1
    8b18:	eor	r7, r7, r6
    8b1c:	strb	r7, [sl, #50]	; 0x32
    8b20:	umull	r7, r6, r3, r1
    8b24:	sub	r7, r3, r6
    8b28:	add	r7, r6, r7, lsr #1
    8b2c:	ldrb	r6, [r0, #7]
    8b30:	lsr	r7, r7, #6
    8b34:	sub	r7, r7, r7, lsl #7
    8b38:	add	r3, r3, r7
    8b3c:	ldrb	r7, [r2, r3]
    8b40:	add	r3, r3, #1
    8b44:	eor	r7, r7, r6
    8b48:	strb	r7, [sl, #51]	; 0x33
    8b4c:	umull	r7, r6, r3, r1
    8b50:	sub	r7, r3, r6
    8b54:	add	r7, r6, r7, lsr #1
    8b58:	ldrb	r6, [r0, #8]
    8b5c:	lsr	r7, r7, #6
    8b60:	sub	r7, r7, r7, lsl #7
    8b64:	add	r3, r3, r7
    8b68:	ldrb	r7, [r2, r3]
    8b6c:	add	r3, r3, #1
    8b70:	eor	r7, r7, r6
    8b74:	strb	r7, [sl, #52]	; 0x34
    8b78:	umull	r7, r6, r3, r1
    8b7c:	sub	r7, r3, r6
    8b80:	add	r7, r6, r7, lsr #1
    8b84:	ldrb	r6, [r0, #9]
    8b88:	lsr	r7, r7, #6
    8b8c:	sub	r7, r7, r7, lsl #7
    8b90:	add	r3, r3, r7
    8b94:	ldrb	r7, [r2, r3]
    8b98:	add	r3, r3, #1
    8b9c:	eor	r7, r7, r6
    8ba0:	strb	r7, [sl, #53]	; 0x35
    8ba4:	umull	r7, r6, r3, r1
    8ba8:	sub	r7, r3, r6
    8bac:	add	r7, r6, r7, lsr #1
    8bb0:	ldrb	r6, [r0, #10]
    8bb4:	lsr	r7, r7, #6
    8bb8:	sub	r7, r7, r7, lsl #7
    8bbc:	add	r3, r3, r7
    8bc0:	ldrb	r7, [r2, r3]
    8bc4:	add	r3, r3, #1
    8bc8:	eor	r7, r7, r6
    8bcc:	strb	r7, [sl, #54]	; 0x36
    8bd0:	umull	r7, r6, r3, r1
    8bd4:	sub	r7, r3, r6
    8bd8:	add	r7, r6, r7, lsr #1
    8bdc:	ldrb	r6, [r0, #11]
    8be0:	lsr	r7, r7, #6
    8be4:	sub	r7, r7, r7, lsl #7
    8be8:	add	r3, r3, r7
    8bec:	ldrb	r7, [r2, r3]
    8bf0:	add	r3, r3, #1
    8bf4:	eor	r7, r7, r6
    8bf8:	strb	r7, [sl, #55]	; 0x37
    8bfc:	umull	r7, r6, r3, r1
    8c00:	sub	r7, r3, r6
    8c04:	add	r7, r6, r7, lsr #1
    8c08:	ldrb	r6, [r0, #12]
    8c0c:	lsr	r7, r7, #6
    8c10:	sub	r7, r7, r7, lsl #7
    8c14:	add	r3, r3, r7
    8c18:	ldrb	r7, [r2, r3]
    8c1c:	add	r3, r3, #1
    8c20:	eor	r7, r7, r6
    8c24:	strb	r7, [sl, #56]	; 0x38
    8c28:	umull	r7, r6, r3, r1
    8c2c:	sub	r7, r3, r6
    8c30:	add	r7, r6, r7, lsr #1
    8c34:	ldrb	r6, [r0, #13]
    8c38:	lsr	r7, r7, #6
    8c3c:	sub	r7, r7, r7, lsl #7
    8c40:	add	r3, r3, r7
    8c44:	ldrb	r7, [r2, r3]
    8c48:	add	r3, r3, #1
    8c4c:	eor	r7, r7, r6
    8c50:	strb	r7, [sl, #57]	; 0x39
    8c54:	umull	r7, r6, r3, r1
    8c58:	sub	r7, r3, r6
    8c5c:	add	r7, r6, r7, lsr #1
    8c60:	ldrb	r6, [r0, #14]
    8c64:	lsr	r7, r7, #6
    8c68:	sub	r7, r7, r7, lsl #7
    8c6c:	add	r3, r3, r7
    8c70:	ldrb	r7, [r2, r3]
    8c74:	add	r3, r3, #1
    8c78:	eor	r7, r7, r6
    8c7c:	strb	r7, [sl, #58]	; 0x3a
    8c80:	umull	r1, r7, r3, r1
    8c84:	sub	r1, r3, r7
    8c88:	add	r1, r7, r1, lsr #1
    8c8c:	lsr	r1, r1, #6
    8c90:	sub	r1, r1, r1, lsl #7
    8c94:	add	r1, r3, r1
    8c98:	ldrb	r1, [r2, r1]
    8c9c:	ldrb	r2, [r0, #15]
    8ca0:	eor	r1, r1, r2
    8ca4:	strb	r1, [sl, #59]	; 0x3b
    8ca8:	bl	4550 <free@plt>
    8cac:	ldrb	r0, [sl, #53]	; 0x35
    8cb0:	ldrb	r2, [sl, #56]	; 0x38
    8cb4:	ldrb	r6, [sl, #55]	; 0x37
    8cb8:	ldrb	r3, [sl, #54]	; 0x36
    8cbc:	ldrb	r8, [sl, #51]	; 0x33
    8cc0:	ldrb	r4, [sl, #47]	; 0x2f
    8cc4:	ldrb	r7, [sl, #48]	; 0x30
    8cc8:	ldrb	ip, [sl, #49]	; 0x31
    8ccc:	ldrb	r5, [sl, #50]	; 0x32
    8cd0:	str	r0, [sp, #32]
    8cd4:	ldrb	r0, [sl, #52]	; 0x34
    8cd8:	str	r0, [sp, #28]
    8cdc:	uxtb	r0, r7
    8ce0:	uxtb	r1, r4
    8ce4:	orr	r0, r1, r0, lsl #1
    8ce8:	uxtb	r1, ip
    8cec:	orr	r0, r0, r1, lsl #2
    8cf0:	uxtb	r1, r5
    8cf4:	orr	r0, r0, r1, lsl #3
    8cf8:	uxtb	r1, r8
    8cfc:	orr	r0, r0, r1, lsl #4
    8d00:	ldr	r1, [sp, #28]
    8d04:	uxtb	r1, r1
    8d08:	orr	r0, r0, r1, lsl #5
    8d0c:	ldr	r1, [sp, #32]
    8d10:	uxtb	r1, r1
    8d14:	orr	r0, r0, r1, lsl #6
    8d18:	uxtb	r1, r3
    8d1c:	orr	r0, r0, r1, lsl #7
    8d20:	mov	r1, #4
    8d24:	orr	r0, r0, r6, lsl #8
    8d28:	orr	r0, r0, r2, lsl #9
    8d2c:	uxtah	r0, r1, r0
    8d30:	b	8ec0 <HV@@Base+0x12f8>
    8d34:	sub	r7, r2, r6
    8d38:	add	r7, r6, r7, lsr #1
    8d3c:	lsr	r7, r7, #6
    8d40:	sub	r7, r7, r7, lsl #7
    8d44:	add	r7, r2, r7
    8d48:	ldr	r2, [pc, #504]	; 8f48 <HV@@Base+0x1380>
    8d4c:	add	r2, pc, r2
    8d50:	ldrb	r6, [r2, r7]
    8d54:	eor	r3, r6, r3
    8d58:	strb	r3, [sl, #44]	; 0x2c
    8d5c:	add	r3, r7, #1
    8d60:	umull	r7, r6, r3, r1
    8d64:	sub	r7, r3, r6
    8d68:	add	r7, r6, r7, lsr #1
    8d6c:	ldrb	r6, [r0, #1]
    8d70:	lsr	r7, r7, #6
    8d74:	sub	r7, r7, r7, lsl #7
    8d78:	add	r3, r3, r7
    8d7c:	ldrb	r7, [r2, r3]
    8d80:	add	r3, r3, #1
    8d84:	eor	r7, r7, r6
    8d88:	strb	r7, [sl, #45]	; 0x2d
    8d8c:	umull	r7, r6, r3, r1
    8d90:	sub	r7, r3, r6
    8d94:	add	r7, r6, r7, lsr #1
    8d98:	ldrb	r6, [r0, #2]
    8d9c:	lsr	r7, r7, #6
    8da0:	sub	r7, r7, r7, lsl #7
    8da4:	add	r3, r3, r7
    8da8:	ldrb	r7, [r2, r3]
    8dac:	add	r3, r3, #1
    8db0:	eor	r7, r7, r6
    8db4:	strb	r7, [sl, #46]	; 0x2e
    8db8:	umull	r7, r6, r3, r1
    8dbc:	sub	r7, r3, r6
    8dc0:	add	r7, r6, r7, lsr #1
    8dc4:	ldrb	r6, [r0, #3]
    8dc8:	lsr	r7, r7, #6
    8dcc:	sub	r7, r7, r7, lsl #7
    8dd0:	add	r3, r3, r7
    8dd4:	ldrb	r7, [r2, r3]
    8dd8:	add	r3, r3, #1
    8ddc:	eor	r7, r7, r6
    8de0:	strb	r7, [sl, #47]	; 0x2f
    8de4:	umull	r7, r6, r3, r1
    8de8:	sub	r7, r3, r6
    8dec:	add	r7, r6, r7, lsr #1
    8df0:	ldrb	r6, [r0, #4]
    8df4:	lsr	r7, r7, #6
    8df8:	sub	r7, r7, r7, lsl #7
    8dfc:	add	r3, r3, r7
    8e00:	ldrb	r7, [r2, r3]
    8e04:	add	r3, r3, #1
    8e08:	eor	r7, r7, r6
    8e0c:	strb	r7, [sl, #48]	; 0x30
    8e10:	umull	r7, r6, r3, r1
    8e14:	sub	r7, r3, r6
    8e18:	add	r7, r6, r7, lsr #1
    8e1c:	ldrb	r6, [r0, #5]
    8e20:	lsr	r7, r7, #6
    8e24:	sub	r7, r7, r7, lsl #7
    8e28:	add	r3, r3, r7
    8e2c:	ldrb	r7, [r2, r3]
    8e30:	add	r3, r3, #1
    8e34:	eor	r7, r7, r6
    8e38:	strb	r7, [sl, #49]	; 0x31
    8e3c:	umull	r7, r6, r3, r1
    8e40:	sub	r7, r3, r6
    8e44:	add	r7, r6, r7, lsr #1
    8e48:	ldrb	r6, [r0, #6]
    8e4c:	lsr	r7, r7, #6
    8e50:	sub	r7, r7, r7, lsl #7
    8e54:	add	r3, r3, r7
    8e58:	ldrb	r7, [r2, r3]
    8e5c:	add	r3, r3, #1
    8e60:	eor	r7, r7, r6
    8e64:	strb	r7, [sl, #50]	; 0x32
    8e68:	umull	r1, r7, r3, r1
    8e6c:	sub	r1, r3, r7
    8e70:	add	r1, r7, r1, lsr #1
    8e74:	lsr	r1, r1, #6
    8e78:	sub	r1, r1, r1, lsl #7
    8e7c:	add	r1, r3, r1
    8e80:	ldrb	r1, [r2, r1]
    8e84:	ldrb	r2, [r0, #7]
    8e88:	eor	r1, r1, r2
    8e8c:	strb	r1, [sl, #51]	; 0x33
    8e90:	bl	4550 <free@plt>
    8e94:	ldrb	r0, [sl, #51]	; 0x33
    8e98:	ldrb	r3, [sl, #47]	; 0x2f
    8e9c:	ldrb	r6, [sl, #48]	; 0x30
    8ea0:	ldrb	r5, [sl, #49]	; 0x31
    8ea4:	ldrb	r2, [sl, #50]	; 0x32
    8ea8:	orr	r1, r3, r6, lsl #1
    8eac:	orr	r1, r1, r5, lsl #2
    8eb0:	orr	r1, r1, r2, lsl #3
    8eb4:	orr	r0, r1, r0, lsl #4
    8eb8:	mov	r1, #3
    8ebc:	uxtab	r0, r1, r0
    8ec0:	str	r0, [sl, #64]	; 0x40
    8ec4:	mov	r5, #1
    8ec8:	ldrb	r1, [sl, #18]
    8ecc:	sub	r2, r1, #3
    8ed0:	mov	r1, #0
    8ed4:	uxtb	r3, r2
    8ed8:	cmp	r3, #12
    8edc:	sxtbls	r1, r2
    8ee0:	ldrls	r2, [pc, #72]	; 8f30 <HV@@Base+0x1368>
    8ee4:	str	r9, [sl, #40]	; 0x28
    8ee8:	addls	r2, pc, r2
    8eec:	ldrls	r1, [r2, r1, lsl #2]
    8ef0:	cmp	r0, r1
    8ef4:	movlt	r1, r0
    8ef8:	str	r1, [sl, #64]	; 0x40
    8efc:	ldrb	r0, [sl, #44]	; 0x2c
    8f00:	ldrb	r1, [sl, #45]	; 0x2d
    8f04:	ldrb	r2, [sl, #46]	; 0x2e
    8f08:	orr	r0, r0, r1, lsl #1
    8f0c:	strb	r2, [sl, #61]	; 0x3d
    8f10:	strb	r0, [sl, #60]	; 0x3c
    8f14:	mov	r0, r5
    8f18:	sub	sp, fp, #28
    8f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8f20:	andeq	fp, r0, r6, lsr #2
    8f24:	ldrdeq	sl, [r0], -lr
    8f28:	andeq	fp, r0, r2, asr r0
    8f2c:	andeq	sl, r0, r2, lsr pc
    8f30:	andeq	ip, r0, r0, lsl #22
    8f34:	andeq	sp, r0, r4, lsl #8
    8f38:	andeq	sp, r0, ip, asr #4
    8f3c:	andeq	sp, r0, r4, ror #2
    8f40:	andeq	ip, r0, r4, ror #30
    8f44:	andeq	sp, r0, r4, asr #1
    8f48:	andeq	ip, r0, ip, lsl ip
    8f4c:	nop	{0}

00008f50 <try_clock@@Base>:
    8f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8f54:	add	fp, sp, #28
    8f58:	sub	sp, sp, #68	; 0x44
    8f5c:	mov	r9, r1
    8f60:	movw	r1, #2892	; 0xb4c
    8f64:	vldr	d18, [pc, #596]	; 91c0 <try_clock@@Base+0x270>
    8f68:	vldr	d19, [pc, #600]	; 91c8 <try_clock@@Base+0x278>
    8f6c:	vldr	d20, [pc, #604]	; 91d0 <try_clock@@Base+0x280>
    8f70:	add	ip, sp, #48	; 0x30
    8f74:	add	r1, r9, r1
    8f78:	ldr	r2, [r9, #2900]	; 0xb54
    8f7c:	vld1.8	{d16}, [r1]
    8f80:	movw	r1, #2904	; 0xb58
    8f84:	add	r1, r9, r1
    8f88:	vmov.32	d17[0], r2
    8f8c:	vtbl.8	d21, {d16-d17}, d18
    8f90:	vtbl.8	d22, {d16-d17}, d19
    8f94:	vtbl.8	d16, {d16-d17}, d20
    8f98:	vorr	d17, d22, d21
    8f9c:	vand	d23, d22, d21
    8fa0:	vand	d17, d17, d16
    8fa4:	vorr	d17, d17, d23
    8fa8:	vuzp.8	d17, d23
    8fac:	vst1.32	{d17[0]}, [ip :32]
    8fb0:	vld1.8	{d24}, [r1]
    8fb4:	ldr	r1, [r9, #2912]	; 0xb60
    8fb8:	vmov.32	d25[0], r1
    8fbc:	orr	r1, ip, #4
    8fc0:	vtbl.8	d17, {d24-d25}, d18
    8fc4:	vtbl.8	d23, {d24-d25}, d19
    8fc8:	vtbl.8	d24, {d24-d25}, d20
    8fcc:	vorr	d25, d23, d17
    8fd0:	vand	d26, d23, d17
    8fd4:	vand	d25, d25, d24
    8fd8:	vorr	d25, d25, d26
    8fdc:	vuzp.8	d25, d26
    8fe0:	vst1.32	{d25[0]}, [r1 :32]
    8fe4:	movw	r1, #2916	; 0xb64
    8fe8:	add	r1, r9, r1
    8fec:	vld1.8	{d26}, [r1]
    8ff0:	ldr	r1, [r9, #2924]	; 0xb6c
    8ff4:	vmov.32	d27[0], r1
    8ff8:	add	r1, ip, #8
    8ffc:	vtbl.8	d25, {d26-d27}, d18
    9000:	vtbl.8	d28, {d26-d27}, d19
    9004:	vtbl.8	d26, {d26-d27}, d20
    9008:	vorr	d27, d28, d25
    900c:	vand	d29, d28, d25
    9010:	vand	d27, d27, d26
    9014:	vorr	d27, d27, d29
    9018:	vuzp.8	d27, d29
    901c:	vst1.32	{d27[0]}, [r1 :32]
    9020:	add	r1, r9, #2928	; 0xb70
    9024:	vld1.8	{d30}, [r1]
    9028:	ldr	r1, [r9, #2936]	; 0xb78
    902c:	vmov.32	d31[0], r1
    9030:	add	r1, ip, #12
    9034:	vtbl.8	d18, {d30-d31}, d18
    9038:	vtbl.8	d19, {d30-d31}, d19
    903c:	vtbl.8	d20, {d30-d31}, d20
    9040:	veor	d31, d24, d17
    9044:	veor	d24, d23, d24
    9048:	veor	d30, d16, d21
    904c:	veor	d16, d22, d16
    9050:	veor	d21, d22, d21
    9054:	veor	d17, d23, d17
    9058:	veor	d23, d26, d25
    905c:	vorr	d27, d19, d18
    9060:	vand	d29, d19, d18
    9064:	vorr	d22, d24, d31
    9068:	veor	d24, d28, d26
    906c:	vorr	d16, d16, d30
    9070:	vand	d27, d27, d20
    9074:	vorr	d16, d16, d21
    9078:	vorr	d17, d22, d17
    907c:	vorr	d22, d24, d23
    9080:	veor	d21, d28, d25
    9084:	veor	d23, d20, d18
    9088:	veor	d20, d19, d20
    908c:	veor	d18, d19, d18
    9090:	vmov.i32	q12, #255	; 0x000000ff
    9094:	vorr	d27, d27, d29
    9098:	vorr	d19, d20, d23
    909c:	vorr	d21, d22, d21
    90a0:	vuzp.8	d27, d26
    90a4:	vorr	d18, d19, d18
    90a8:	vmovl.u16	q10, d21
    90ac:	vst1.32	{d27[0]}, [r1 :32]
    90b0:	vmovl.u16	q13, d16
    90b4:	vmovl.u16	q8, d17
    90b8:	vmovl.u16	q9, d18
    90bc:	vand	q10, q10, q12
    90c0:	ldrb	r1, [r9, #2940]	; 0xb7c
    90c4:	ldrb	r3, [r9, #2942]	; 0xb7e
    90c8:	ldrb	lr, [r9, #2941]	; 0xb7d
    90cc:	vand	q11, q13, q12
    90d0:	vand	q8, q8, q12
    90d4:	vand	q9, q9, q12
    90d8:	vadd.i32	q8, q11, q8
    90dc:	vadd.i32	q8, q8, q10
    90e0:	vadd.i32	q8, q8, q9
    90e4:	orr	r6, r3, r1
    90e8:	and	r5, r3, r1
    90ec:	vext.8	q9, q8, q8, #8
    90f0:	and	r6, r6, lr
    90f4:	vadd.i32	q8, q8, q9
    90f8:	orr	r6, r6, r5
    90fc:	vdup.32	q9, d16[1]
    9100:	strb	r6, [sp, #64]	; 0x40
    9104:	vadd.i32	q8, q8, q9
    9108:	ldrb	r6, [r9, #2943]	; 0xb7f
    910c:	ldrb	r4, [r9, #2945]	; 0xb81
    9110:	ldrb	r5, [r9, #2944]	; 0xb80
    9114:	vmov.32	r8, d16[0]
    9118:	orr	r2, r4, r6
    911c:	and	r7, r4, r6
    9120:	and	r2, r2, r5
    9124:	orr	r2, r2, r7
    9128:	eor	r7, lr, r1
    912c:	eor	r1, r3, r1
    9130:	strb	r2, [sp, #65]	; 0x41
    9134:	eor	r2, r3, lr
    9138:	eor	r3, r4, r5
    913c:	orr	r2, r2, r7
    9140:	orr	r1, r2, r1
    9144:	eor	r2, r5, r6
    9148:	orr	r2, r3, r2
    914c:	eor	r3, r4, r6
    9150:	uxtab	r1, r8, r1
    9154:	orr	r2, r2, r3
    9158:	uxtab	r2, r1, r2
    915c:	mov	r1, #0
    9160:	cmp	r2, #3
    9164:	bhi	95c0 <try_clock@@Base+0x670>
    9168:	ldrb	r1, [r9, #4]
    916c:	tst	r1, #1
    9170:	bne	91d8 <try_clock@@Base+0x288>
    9174:	vld1.64	{d16-d17}, [ip]!
    9178:	add	r1, sp, #24
    917c:	ldrh	r0, [ip]
    9180:	strh	r0, [sp, #40]	; 0x28
    9184:	mov	r0, #17
    9188:	vst1.64	{d16-d17}, [r1], r0
    918c:	ldrb	r4, [r1]
    9190:	ldrb	sl, [sp, #39]	; 0x27
    9194:	ldrb	r5, [sp, #38]	; 0x26
    9198:	ldrb	r7, [sp, #37]	; 0x25
    919c:	ldrb	r3, [sp, #36]	; 0x24
    91a0:	ldrb	r1, [sp, #35]	; 0x23
    91a4:	ldrb	lr, [sp, #31]
    91a8:	ldrb	ip, [sp, #32]
    91ac:	ldrb	r0, [sp, #33]	; 0x21
    91b0:	ldrb	r2, [sp, #34]	; 0x22
    91b4:	ldrb	r6, [sp, #40]	; 0x28
    91b8:	b	953c <try_clock@@Base+0x5ec>
    91bc:	nop	{0}
    91c0:			; <UNDEFINED> instruction: 0xff03ff00
    91c4:			; <UNDEFINED> instruction: 0xff09ff06
    91c8:			; <UNDEFINED> instruction: 0xff05ff02
    91cc:			; <UNDEFINED> instruction: 0xff0bff08
    91d0:			; <UNDEFINED> instruction: 0xff04ff01
    91d4:			; <UNDEFINED> instruction: 0xff0aff07
    91d8:	ldr	r1, [pc, #1004]	; 95cc <try_clock@@Base+0x67c>
    91dc:	and	r0, r0, #63	; 0x3f
    91e0:	movw	r8, #2065	; 0x811
    91e4:	ldr	ip, [pc, #996]	; 95d0 <try_clock@@Base+0x680>
    91e8:	ldrb	r6, [sp, #48]	; 0x30
    91ec:	ldrb	r5, [sp, #49]	; 0x31
    91f0:	ldrb	r4, [sp, #50]	; 0x32
    91f4:	movt	r8, #516	; 0x204
    91f8:	add	r1, pc, r1
    91fc:	add	ip, pc, ip
    9200:	ldrb	r0, [r1, r0]
    9204:	umull	r2, r3, r0, r8
    9208:	sub	r2, r0, r3
    920c:	add	r2, r3, r2, lsr #1
    9210:	lsr	r2, r2, #6
    9214:	sub	r2, r2, r2, lsl #7
    9218:	add	r3, r0, r2
    921c:	ldrb	r2, [sp, #51]	; 0x33
    9220:	ldrb	r7, [ip, r3]
    9224:	add	r3, r3, #1
    9228:	eor	r7, r7, r6
    922c:	strb	r7, [sp, #24]
    9230:	umull	r7, r6, r3, r8
    9234:	sub	r7, r3, r6
    9238:	add	r7, r6, r7, lsr #1
    923c:	lsr	r7, r7, #6
    9240:	sub	r7, r7, r7, lsl #7
    9244:	add	r3, r3, r7
    9248:	ldrb	r7, [ip, r3]
    924c:	add	r3, r3, #1
    9250:	eor	r7, r7, r5
    9254:	strb	r7, [sp, #25]
    9258:	umull	r7, r6, r3, r8
    925c:	sub	r7, r3, r6
    9260:	add	r7, r6, r7, lsr #1
    9264:	lsr	r7, r7, #6
    9268:	sub	r7, r7, r7, lsl #7
    926c:	add	r3, r3, r7
    9270:	ldrb	r7, [ip, r3]
    9274:	add	r3, r3, #1
    9278:	eor	r7, r7, r4
    927c:	strb	r7, [sp, #26]
    9280:	umull	r7, r6, r3, r8
    9284:	sub	r7, r3, r6
    9288:	add	r7, r6, r7, lsr #1
    928c:	lsr	r7, r7, #6
    9290:	sub	r7, r7, r7, lsl #7
    9294:	add	r3, r3, r7
    9298:	ldrb	r7, [ip, r3]
    929c:	eor	r2, r7, r2
    92a0:	strb	r2, [sp, #27]
    92a4:	add	r2, r3, #1
    92a8:	umull	r3, r7, r2, r8
    92ac:	sub	r3, r2, r7
    92b0:	add	r3, r7, r3, lsr #1
    92b4:	ldrb	r7, [sp, #52]	; 0x34
    92b8:	lsr	r3, r3, #6
    92bc:	sub	r3, r3, r3, lsl #7
    92c0:	add	r2, r2, r3
    92c4:	ldrb	r3, [ip, r2]
    92c8:	add	r2, r2, #1
    92cc:	eor	r3, r3, r7
    92d0:	strb	r3, [sp, #28]
    92d4:	umull	r3, r7, r2, r8
    92d8:	sub	r3, r2, r7
    92dc:	add	r3, r7, r3, lsr #1
    92e0:	ldrb	r7, [sp, #53]	; 0x35
    92e4:	lsr	r3, r3, #6
    92e8:	sub	r3, r3, r3, lsl #7
    92ec:	add	r2, r2, r3
    92f0:	ldrb	r3, [ip, r2]
    92f4:	add	r2, r2, #1
    92f8:	eor	r3, r3, r7
    92fc:	strb	r3, [sp, #29]
    9300:	umull	r3, r7, r2, r8
    9304:	sub	r3, r2, r7
    9308:	add	r3, r7, r3, lsr #1
    930c:	ldrb	r7, [sp, #54]	; 0x36
    9310:	lsr	r3, r3, #6
    9314:	sub	r3, r3, r3, lsl #7
    9318:	add	r2, r2, r3
    931c:	ldrb	r3, [ip, r2]
    9320:	add	r2, r2, #1
    9324:	eor	r3, r3, r7
    9328:	strb	r3, [sp, #30]
    932c:	umull	r3, r7, r2, r8
    9330:	sub	r3, r2, r7
    9334:	add	r3, r7, r3, lsr #1
    9338:	lsr	r3, r3, #6
    933c:	sub	r3, r3, r3, lsl #7
    9340:	add	r0, r2, r3
    9344:	add	r2, r0, #1
    9348:	umull	r3, r7, r2, r8
    934c:	sub	r3, r2, r7
    9350:	add	r3, r7, r3, lsr #1
    9354:	lsr	r3, r3, #6
    9358:	sub	r3, r3, r3, lsl #7
    935c:	add	lr, r2, r3
    9360:	add	r2, lr, #1
    9364:	umull	r3, r5, r2, r8
    9368:	sub	r3, r2, r5
    936c:	add	r3, r5, r3, lsr #1
    9370:	lsr	r3, r3, #6
    9374:	sub	r3, r3, r3, lsl #7
    9378:	add	r1, r2, r3
    937c:	add	r2, r1, #1
    9380:	str	r1, [sp, #20]
    9384:	umull	r3, r5, r2, r8
    9388:	sub	r3, r2, r5
    938c:	add	r3, r5, r3, lsr #1
    9390:	lsr	r3, r3, #6
    9394:	sub	r3, r3, r3, lsl #7
    9398:	add	r1, r2, r3
    939c:	add	r2, r1, #1
    93a0:	str	r1, [sp, #16]
    93a4:	umull	r3, r5, r2, r8
    93a8:	sub	r3, r2, r5
    93ac:	add	r3, r5, r3, lsr #1
    93b0:	lsr	r3, r3, #6
    93b4:	sub	r3, r3, r3, lsl #7
    93b8:	add	r1, r2, r3
    93bc:	add	r2, r1, #1
    93c0:	str	r1, [sp, #12]
    93c4:	umull	r3, r5, r2, r8
    93c8:	sub	r3, r2, r5
    93cc:	add	r3, r5, r3, lsr #1
    93d0:	lsr	r3, r3, #6
    93d4:	sub	r3, r3, r3, lsl #7
    93d8:	add	r1, r2, r3
    93dc:	ldrb	r3, [sp, #56]	; 0x38
    93e0:	add	r2, r1, #1
    93e4:	str	r1, [sp, #8]
    93e8:	umull	r5, r6, r2, r8
    93ec:	sub	r5, r2, r6
    93f0:	add	r6, r6, r5, lsr #1
    93f4:	lsr	r6, r6, #6
    93f8:	sub	r6, r6, r6, lsl #7
    93fc:	add	r2, r2, r6
    9400:	add	r6, r2, #1
    9404:	umull	r5, r7, r6, r8
    9408:	sub	r5, r6, r7
    940c:	add	r5, r7, r5, lsr #1
    9410:	lsr	r5, r5, #6
    9414:	sub	r5, r5, r5, lsl #7
    9418:	add	r5, r6, r5
    941c:	add	r6, r5, #1
    9420:	umull	r7, r1, r6, r8
    9424:	sub	r7, r6, r1
    9428:	add	r1, r1, r7, lsr #1
    942c:	lsr	r1, r1, #6
    9430:	sub	r1, r1, r1, lsl #7
    9434:	add	r1, r6, r1
    9438:	add	r6, r1, #1
    943c:	umull	r7, sl, r6, r8
    9440:	sub	r7, r6, sl
    9444:	add	r7, sl, r7, lsr #1
    9448:	lsr	r7, r7, #6
    944c:	sub	r7, r7, r7, lsl #7
    9450:	add	r6, r6, r7
    9454:	add	r7, r6, #1
    9458:	umull	r4, r8, r7, r8
    945c:	sub	r4, r7, r8
    9460:	add	r4, r8, r4, lsr #1
    9464:	mov	r8, ip
    9468:	lsr	r4, r4, #6
    946c:	ldrb	r1, [r8, r1]
    9470:	sub	r4, r4, r4, lsl #7
    9474:	add	r4, r7, r4
    9478:	ldrb	r7, [ip, lr]
    947c:	ldrb	lr, [sp, #59]	; 0x3b
    9480:	ldrb	r4, [ip, r4]
    9484:	eor	ip, r7, r3
    9488:	ldrb	r3, [r8, r0]
    948c:	ldrb	r7, [sp, #55]	; 0x37
    9490:	eor	r0, r3, r7
    9494:	ldrb	r3, [sp, #65]	; 0x41
    9498:	strb	r0, [sp, #31]
    949c:	strb	ip, [sp, #32]
    94a0:	eor	r3, r4, r3
    94a4:	ldrb	r4, [sp, #64]	; 0x40
    94a8:	str	r3, [sp, #4]
    94ac:	ldrb	r3, [r8, r6]
    94b0:	eor	r6, r3, r4
    94b4:	ldrb	r3, [sp, #63]	; 0x3f
    94b8:	ldrb	r4, [sp, #57]	; 0x39
    94bc:	eor	sl, r1, r3
    94c0:	ldrb	r1, [r8, r5]
    94c4:	ldrb	r3, [sp, #62]	; 0x3e
    94c8:	eor	r5, r1, r3
    94cc:	ldrb	r1, [r8, r2]
    94d0:	ldrb	r2, [sp, #61]	; 0x3d
    94d4:	ldrb	r3, [sp, #60]	; 0x3c
    94d8:	eor	r7, r1, r2
    94dc:	ldr	r1, [sp, #8]
    94e0:	ldrb	r2, [sp, #58]	; 0x3a
    94e4:	ldrb	r1, [r8, r1]
    94e8:	eor	r3, r1, r3
    94ec:	ldr	r1, [sp, #12]
    94f0:	ldrb	r1, [r8, r1]
    94f4:	eor	r1, r1, lr
    94f8:	mov	lr, r0
    94fc:	ldr	r0, [sp, #16]
    9500:	ldrb	r0, [r8, r0]
    9504:	eor	r2, r0, r2
    9508:	ldr	r0, [sp, #20]
    950c:	ldrb	r0, [r8, r0]
    9510:	eor	r0, r0, r4
    9514:	ldr	r4, [sp, #4]
    9518:	strb	r0, [sp, #33]	; 0x21
    951c:	strb	r2, [sp, #34]	; 0x22
    9520:	strb	r1, [sp, #35]	; 0x23
    9524:	strb	r3, [sp, #36]	; 0x24
    9528:	strb	r7, [sp, #37]	; 0x25
    952c:	strb	r5, [sp, #38]	; 0x26
    9530:	strb	sl, [sp, #39]	; 0x27
    9534:	strb	r6, [sp, #40]	; 0x28
    9538:	strb	r4, [sp, #41]	; 0x29
    953c:	orr	r1, r2, r1, lsl #1
    9540:	ldrb	r2, [sp, #24]
    9544:	orr	r1, r1, r3, lsl #2
    9548:	ldrb	r3, [sp, #25]
    954c:	orr	r1, r1, r7, lsl #3
    9550:	ldrb	r7, [sp, #26]
    9554:	orr	r1, r1, r5, lsl #4
    9558:	ldrb	r5, [sp, #28]
    955c:	orr	r1, r1, sl, lsl #5
    9560:	orr	r1, r1, r6, lsl #6
    9564:	orr	r2, r2, r3, lsl #1
    9568:	ldrb	r6, [sp, #29]
    956c:	uxtb	r3, lr
    9570:	orr	r1, r1, r4, lsl #7
    9574:	ldrb	r4, [sp, #27]
    9578:	orr	r2, r2, r7, lsl #2
    957c:	ldrb	r7, [sp, #30]
    9580:	uxtb	r1, r1
    9584:	orr	r2, r2, r4, lsl #3
    9588:	orr	r2, r2, r5, lsl #4
    958c:	orr	r2, r2, r6, lsl #5
    9590:	orr	r2, r2, r7, lsl #6
    9594:	orr	r2, r2, r3, lsl #7
    9598:	orr	r2, r2, ip, lsl #8
    959c:	orr	r0, r2, r0, lsl #9
    95a0:	uxth	r0, r0
    95a4:	bl	95d4 <try_clock@@Base+0x684>
    95a8:	mov	r1, r0
    95ac:	strb	r0, [r9, #9]
    95b0:	orr	r0, r4, r5, lsl #1
    95b4:	orr	r0, r0, r6, lsl #2
    95b8:	orr	r0, r0, r7, lsl #3
    95bc:	strb	r0, [r9, #18]
    95c0:	mov	r0, r1
    95c4:	sub	sp, fp, #28
    95c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95cc:	andeq	sl, r0, r6, lsr #4
    95d0:	andeq	ip, r0, ip, ror #14
    95d4:	sxtb	r2, r1
    95d8:	mov	r3, #2
    95dc:	cmn	r2, #1
    95e0:	ubfx	r2, r0, #9, #1
    95e4:	eorle	r1, r1, #101	; 0x65
    95e8:	eor	r2, r2, r1, lsr #7
    95ec:	orr	r2, r2, r1, lsl #1
    95f0:	lsl	r1, r1, #1
    95f4:	sxtb	r1, r1
    95f8:	cmn	r1, #1
    95fc:	eorle	r2, r2, #101	; 0x65
    9600:	uxtb	r1, r2
    9604:	ubfx	r2, r0, #8, #1
    9608:	eor	r2, r2, r1, lsr #7
    960c:	orr	r2, r2, r1, lsl #1
    9610:	lsl	r1, r1, #1
    9614:	sxtb	r1, r1
    9618:	cmn	r1, #1
    961c:	eorle	r2, r2, #101	; 0x65
    9620:	uxtb	r1, r2
    9624:	ubfx	r2, r0, #7, #1
    9628:	eor	r2, r2, r1, lsr #7
    962c:	orr	r2, r2, r1, lsl #1
    9630:	lsl	r1, r1, #1
    9634:	sxtb	r1, r1
    9638:	cmn	r1, #1
    963c:	eorle	r2, r2, #101	; 0x65
    9640:	uxtb	r1, r2
    9644:	ubfx	r2, r0, #6, #1
    9648:	eor	r2, r2, r1, lsr #7
    964c:	orr	r2, r2, r1, lsl #1
    9650:	lsl	r1, r1, #1
    9654:	sxtb	r1, r1
    9658:	cmn	r1, #1
    965c:	eorle	r2, r2, #101	; 0x65
    9660:	uxtb	r1, r2
    9664:	ubfx	r2, r0, #5, #1
    9668:	eor	r2, r2, r1, lsr #7
    966c:	orr	r2, r2, r1, lsl #1
    9670:	lsl	r1, r1, #1
    9674:	sxtb	r1, r1
    9678:	cmn	r1, #1
    967c:	eorle	r2, r2, #101	; 0x65
    9680:	uxtb	r1, r2
    9684:	ubfx	r2, r0, #4, #1
    9688:	eor	r2, r2, r1, lsr #7
    968c:	orr	r2, r2, r1, lsl #1
    9690:	lsl	r1, r1, #1
    9694:	sxtb	r1, r1
    9698:	cmn	r1, #1
    969c:	eorle	r2, r2, #101	; 0x65
    96a0:	uxtb	r1, r2
    96a4:	ubfx	r2, r0, #3, #1
    96a8:	eor	r2, r2, r1, lsr #7
    96ac:	orr	r2, r2, r1, lsl #1
    96b0:	lsl	r1, r1, #1
    96b4:	sxtb	r1, r1
    96b8:	cmn	r1, #1
    96bc:	eorle	r2, r2, #101	; 0x65
    96c0:	uxtb	r1, r2
    96c4:	ubfx	r2, r0, #2, #1
    96c8:	eor	r2, r2, r1, lsr #7
    96cc:	orr	r2, r2, r1, lsl #1
    96d0:	lsl	r1, r1, #1
    96d4:	sxtb	r1, r1
    96d8:	cmn	r1, #1
    96dc:	eorle	r2, r2, #101	; 0x65
    96e0:	uxtb	r1, r2
    96e4:	ubfx	r2, r0, #1, #1
    96e8:	and	r0, r0, #1
    96ec:	eor	r2, r2, r1, lsr #7
    96f0:	orr	r2, r2, r1, lsl #1
    96f4:	lsl	r1, r1, #1
    96f8:	sxtb	r1, r1
    96fc:	cmn	r1, #1
    9700:	eorle	r2, r2, #101	; 0x65
    9704:	uxtb	r1, r2
    9708:	eor	r0, r0, r1, lsr #7
    970c:	orr	r0, r0, r1, lsl #1
    9710:	uxtb	r1, r0
    9714:	lsl	r2, r0, #7
    9718:	orr	r2, r2, r1, lsr #7
    971c:	and	r3, r3, r1, lsr #5
    9720:	orr	r2, r2, r3
    9724:	mov	r3, #4
    9728:	and	r3, r3, r1, lsr #3
    972c:	orr	r2, r2, r3
    9730:	mov	r3, #8
    9734:	and	r1, r3, r1, lsr #1
    9738:	orr	r1, r2, r1
    973c:	and	r2, r0, #8
    9740:	orr	r1, r1, r2, lsl #1
    9744:	and	r2, r0, #4
    9748:	and	r0, r0, #2
    974c:	orr	r1, r1, r2, lsl #3
    9750:	orr	r0, r1, r0, lsl #5
    9754:	uxtb	r0, r0
    9758:	bx	lr
    975c:	nop	{0}

00009760 <btbb_decode_header@@Base>:
    9760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9764:	add	fp, sp, #28
    9768:	sub	sp, sp, #52	; 0x34
    976c:	ldr	ip, [r0, #4]
    9770:	mov	sl, r0
    9774:	mov	r0, #0
    9778:	tst	ip, #16
    977c:	beq	9e6c <btbb_decode_header@@Base+0x70c>
    9780:	movw	r1, #2892	; 0xb4c
    9784:	ldr	r2, [sl, #2900]	; 0xb54
    9788:	vldr	d18, [pc, #608]	; 99f0 <btbb_decode_header@@Base+0x290>
    978c:	vldr	d19, [pc, #612]	; 99f8 <btbb_decode_header@@Base+0x298>
    9790:	vldr	d20, [pc, #616]	; 9a00 <btbb_decode_header@@Base+0x2a0>
    9794:	add	lr, sp, #32
    9798:	add	r1, sl, r1
    979c:	vld1.8	{d16}, [r1]
    97a0:	vmov.32	d17[0], r2
    97a4:	movw	r2, #2904	; 0xb58
    97a8:	vtbl.8	d21, {d16-d17}, d18
    97ac:	vtbl.8	d22, {d16-d17}, d19
    97b0:	vtbl.8	d16, {d16-d17}, d20
    97b4:	add	r2, sl, r2
    97b8:	vorr	d17, d22, d21
    97bc:	vand	d23, d22, d21
    97c0:	vand	d17, d17, d16
    97c4:	vorr	d17, d17, d23
    97c8:	vuzp.8	d17, d23
    97cc:	vst1.32	{d17[0]}, [lr :32]
    97d0:	vld1.8	{d24}, [r2]
    97d4:	ldr	r2, [sl, #2912]	; 0xb60
    97d8:	vmov.32	d25[0], r2
    97dc:	orr	r2, lr, #4
    97e0:	vtbl.8	d17, {d24-d25}, d18
    97e4:	vtbl.8	d23, {d24-d25}, d19
    97e8:	vtbl.8	d24, {d24-d25}, d20
    97ec:	vorr	d25, d23, d17
    97f0:	vand	d26, d23, d17
    97f4:	vand	d25, d25, d24
    97f8:	vorr	d25, d25, d26
    97fc:	vuzp.8	d25, d26
    9800:	vst1.32	{d25[0]}, [r2 :32]
    9804:	movw	r2, #2916	; 0xb64
    9808:	add	r2, sl, r2
    980c:	vld1.8	{d26}, [r2]
    9810:	ldr	r2, [sl, #2924]	; 0xb6c
    9814:	vmov.32	d27[0], r2
    9818:	add	r2, lr, #8
    981c:	vtbl.8	d25, {d26-d27}, d18
    9820:	vtbl.8	d28, {d26-d27}, d19
    9824:	vtbl.8	d26, {d26-d27}, d20
    9828:	vorr	d27, d28, d25
    982c:	vand	d29, d28, d25
    9830:	vand	d27, d27, d26
    9834:	vorr	d27, d27, d29
    9838:	vuzp.8	d27, d29
    983c:	vst1.32	{d27[0]}, [r2 :32]
    9840:	add	r2, sl, #2928	; 0xb70
    9844:	vld1.8	{d30}, [r2]
    9848:	ldr	r2, [sl, #2936]	; 0xb78
    984c:	vmov.32	d31[0], r2
    9850:	add	r2, lr, #12
    9854:	vtbl.8	d18, {d30-d31}, d18
    9858:	vtbl.8	d19, {d30-d31}, d19
    985c:	vtbl.8	d20, {d30-d31}, d20
    9860:	veor	d31, d24, d17
    9864:	veor	d24, d23, d24
    9868:	veor	d30, d16, d21
    986c:	veor	d16, d22, d16
    9870:	veor	d21, d22, d21
    9874:	veor	d17, d23, d17
    9878:	veor	d23, d26, d25
    987c:	vorr	d27, d19, d18
    9880:	vand	d29, d19, d18
    9884:	vorr	d22, d24, d31
    9888:	veor	d24, d28, d26
    988c:	vorr	d16, d16, d30
    9890:	vand	d27, d27, d20
    9894:	vorr	d16, d16, d21
    9898:	vorr	d17, d22, d17
    989c:	vorr	d22, d24, d23
    98a0:	veor	d21, d28, d25
    98a4:	veor	d23, d20, d18
    98a8:	veor	d20, d19, d20
    98ac:	veor	d18, d19, d18
    98b0:	vmov.i32	q12, #255	; 0x000000ff
    98b4:	vorr	d27, d27, d29
    98b8:	vorr	d19, d20, d23
    98bc:	vorr	d21, d22, d21
    98c0:	vuzp.8	d27, d26
    98c4:	vorr	d18, d19, d18
    98c8:	vmovl.u16	q10, d21
    98cc:	vst1.32	{d27[0]}, [r2 :32]
    98d0:	vmovl.u16	q13, d16
    98d4:	vmovl.u16	q8, d17
    98d8:	vmovl.u16	q9, d18
    98dc:	vand	q10, q10, q12
    98e0:	ldrb	r2, [sl, #2940]	; 0xb7c
    98e4:	ldrb	r3, [sl, #2942]	; 0xb7e
    98e8:	ldrb	r7, [sl, #2941]	; 0xb7d
    98ec:	vand	q11, q13, q12
    98f0:	vand	q8, q8, q12
    98f4:	vand	q9, q9, q12
    98f8:	vadd.i32	q8, q11, q8
    98fc:	vadd.i32	q8, q8, q10
    9900:	vadd.i32	q8, q8, q9
    9904:	orr	r6, r3, r2
    9908:	and	r5, r3, r2
    990c:	vext.8	q9, q8, q8, #8
    9910:	and	r6, r6, r7
    9914:	vadd.i32	q8, q8, q9
    9918:	orr	r6, r6, r5
    991c:	vdup.32	q9, d16[1]
    9920:	strb	r6, [sp, #48]	; 0x30
    9924:	vadd.i32	q8, q8, q9
    9928:	ldrb	r6, [sl, #2943]	; 0xb7f
    992c:	ldrb	r0, [sl, #2945]	; 0xb81
    9930:	ldrb	r5, [sl, #2944]	; 0xb80
    9934:	orr	r1, r0, r6
    9938:	and	r4, r0, r6
    993c:	and	r1, r1, r5
    9940:	orr	r1, r1, r4
    9944:	eor	r4, r7, r2
    9948:	eor	r7, r3, r7
    994c:	eor	r2, r3, r2
    9950:	eor	r3, r0, r5
    9954:	eor	r0, r0, r6
    9958:	orr	r4, r7, r4
    995c:	strb	r1, [sp, #49]	; 0x31
    9960:	vmov.32	r1, d16[0]
    9964:	orr	r2, r4, r2
    9968:	uxtab	r1, r1, r2
    996c:	eor	r2, r5, r6
    9970:	orr	r2, r3, r2
    9974:	orr	r0, r2, r0
    9978:	uxtab	r0, r1, r0
    997c:	cmp	r0, #3
    9980:	movhi	r0, #0
    9984:	subhi	sp, fp, #28
    9988:	pophi	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    998c:	tst	ip, #1
    9990:	bne	9a08 <btbb_decode_header@@Base+0x2a8>
    9994:	vld1.64	{d16-d17}, [lr]!
    9998:	add	r0, sl, #22
    999c:	vst1.8	{d16-d17}, [r0]
    99a0:	ldrh	r0, [lr]
    99a4:	strh	r0, [sl, #38]	; 0x26
    99a8:	ldrb	r0, [sl, #36]	; 0x24
    99ac:	ldrb	ip, [sl, #37]	; 0x25
    99b0:	ldrb	r1, [sl, #29]
    99b4:	ldrb	r2, [sl, #32]
    99b8:	ldrb	r3, [sl, #38]	; 0x26
    99bc:	ldrb	lr, [sl, #39]	; 0x27
    99c0:	str	r0, [sp, #8]
    99c4:	ldrb	r0, [sl, #35]	; 0x23
    99c8:	str	r0, [sp, #12]
    99cc:	ldrb	r0, [sl, #34]	; 0x22
    99d0:	str	r0, [sp, #16]
    99d4:	ldrb	r0, [sl, #33]	; 0x21
    99d8:	str	r0, [sp, #20]
    99dc:	ldrb	r0, [sl, #30]
    99e0:	str	r0, [sp, #28]
    99e4:	ldrb	r0, [sl, #31]
    99e8:	str	r0, [sp, #24]
    99ec:	b	9d84 <btbb_decode_header@@Base+0x624>
    99f0:			; <UNDEFINED> instruction: 0xff03ff00
    99f4:			; <UNDEFINED> instruction: 0xff09ff06
    99f8:			; <UNDEFINED> instruction: 0xff05ff02
    99fc:			; <UNDEFINED> instruction: 0xff0bff08
    9a00:			; <UNDEFINED> instruction: 0xff04ff01
    9a04:			; <UNDEFINED> instruction: 0xff0aff07
    9a08:	ldr	r0, [sl, #2816]	; 0xb00
    9a0c:	ldr	r1, [pc, #1120]	; 9e74 <btbb_decode_header@@Base+0x714>
    9a10:	movw	r8, #2065	; 0x811
    9a14:	ldr	ip, [pc, #1116]	; 9e78 <btbb_decode_header@@Base+0x718>
    9a18:	ldrb	r7, [sp, #32]
    9a1c:	movt	r8, #516	; 0x204
    9a20:	and	r0, r0, #63	; 0x3f
    9a24:	add	r1, pc, r1
    9a28:	add	ip, pc, ip
    9a2c:	ldrb	r0, [r1, r0]
    9a30:	umull	r2, r3, r0, r8
    9a34:	sub	r2, r0, r3
    9a38:	add	r2, r3, r2, lsr #1
    9a3c:	lsr	r2, r2, #6
    9a40:	sub	r2, r2, r2, lsl #7
    9a44:	add	r2, r0, r2
    9a48:	ldrb	r3, [ip, r2]
    9a4c:	add	r2, r2, #1
    9a50:	eor	r3, r3, r7
    9a54:	strb	r3, [sl, #22]
    9a58:	umull	r3, r7, r2, r8
    9a5c:	sub	r3, r2, r7
    9a60:	add	r3, r7, r3, lsr #1
    9a64:	ldrb	r7, [sp, #33]	; 0x21
    9a68:	lsr	r3, r3, #6
    9a6c:	sub	r3, r3, r3, lsl #7
    9a70:	add	r2, r2, r3
    9a74:	ldrb	r3, [ip, r2]
    9a78:	add	r2, r2, #1
    9a7c:	eor	r3, r3, r7
    9a80:	strb	r3, [sl, #23]
    9a84:	umull	r3, r7, r2, r8
    9a88:	sub	r3, r2, r7
    9a8c:	add	r3, r7, r3, lsr #1
    9a90:	ldrb	r7, [sp, #34]	; 0x22
    9a94:	lsr	r3, r3, #6
    9a98:	sub	r3, r3, r3, lsl #7
    9a9c:	add	r2, r2, r3
    9aa0:	ldrb	r3, [ip, r2]
    9aa4:	add	r2, r2, #1
    9aa8:	eor	r3, r3, r7
    9aac:	strb	r3, [sl, #24]
    9ab0:	umull	r3, r7, r2, r8
    9ab4:	sub	r3, r2, r7
    9ab8:	add	r3, r7, r3, lsr #1
    9abc:	ldrb	r7, [sp, #35]	; 0x23
    9ac0:	lsr	r3, r3, #6
    9ac4:	sub	r3, r3, r3, lsl #7
    9ac8:	add	r2, r2, r3
    9acc:	ldrb	r3, [ip, r2]
    9ad0:	add	r2, r2, #1
    9ad4:	eor	r3, r3, r7
    9ad8:	strb	r3, [sl, #25]
    9adc:	umull	r3, r7, r2, r8
    9ae0:	sub	r3, r2, r7
    9ae4:	add	r3, r7, r3, lsr #1
    9ae8:	ldrb	r7, [sp, #36]	; 0x24
    9aec:	lsr	r3, r3, #6
    9af0:	sub	r3, r3, r3, lsl #7
    9af4:	add	r2, r2, r3
    9af8:	ldrb	r3, [ip, r2]
    9afc:	add	r2, r2, #1
    9b00:	eor	r3, r3, r7
    9b04:	strb	r3, [sl, #26]
    9b08:	umull	r3, r7, r2, r8
    9b0c:	sub	r3, r2, r7
    9b10:	add	r3, r7, r3, lsr #1
    9b14:	ldrb	r7, [sp, #37]	; 0x25
    9b18:	lsr	r3, r3, #6
    9b1c:	sub	r3, r3, r3, lsl #7
    9b20:	add	r2, r2, r3
    9b24:	ldrb	r3, [ip, r2]
    9b28:	add	r2, r2, #1
    9b2c:	eor	r3, r3, r7
    9b30:	strb	r3, [sl, #27]
    9b34:	umull	r3, r7, r2, r8
    9b38:	sub	r3, r2, r7
    9b3c:	add	r3, r7, r3, lsr #1
    9b40:	ldrb	r7, [sp, #38]	; 0x26
    9b44:	lsr	r3, r3, #6
    9b48:	sub	r3, r3, r3, lsl #7
    9b4c:	add	r2, r2, r3
    9b50:	ldrb	r3, [ip, r2]
    9b54:	add	r2, r2, #1
    9b58:	eor	r3, r3, r7
    9b5c:	strb	r3, [sl, #28]
    9b60:	umull	r3, r7, r2, r8
    9b64:	sub	r3, r2, r7
    9b68:	add	r3, r7, r3, lsr #1
    9b6c:	lsr	r3, r3, #6
    9b70:	sub	r3, r3, r3, lsl #7
    9b74:	add	r0, r2, r3
    9b78:	add	r2, r0, #1
    9b7c:	str	r0, [sp, #28]
    9b80:	umull	r3, r7, r2, r8
    9b84:	sub	r3, r2, r7
    9b88:	add	r3, r7, r3, lsr #1
    9b8c:	lsr	r3, r3, #6
    9b90:	sub	r3, r3, r3, lsl #7
    9b94:	add	r0, r2, r3
    9b98:	add	r2, r0, #1
    9b9c:	str	r0, [sp, #24]
    9ba0:	umull	r3, r4, r2, r8
    9ba4:	sub	r3, r2, r4
    9ba8:	add	r3, r4, r3, lsr #1
    9bac:	lsr	r3, r3, #6
    9bb0:	sub	r3, r3, r3, lsl #7
    9bb4:	add	r9, r2, r3
    9bb8:	add	r2, r9, #1
    9bbc:	umull	r3, r4, r2, r8
    9bc0:	sub	r3, r2, r4
    9bc4:	add	r3, r4, r3, lsr #1
    9bc8:	lsr	r3, r3, #6
    9bcc:	sub	r3, r3, r3, lsl #7
    9bd0:	add	r6, r2, r3
    9bd4:	add	r2, r6, #1
    9bd8:	ldrb	r6, [ip, r6]
    9bdc:	umull	r3, r4, r2, r8
    9be0:	sub	r3, r2, r4
    9be4:	add	r3, r4, r3, lsr #1
    9be8:	lsr	r3, r3, #6
    9bec:	sub	r3, r3, r3, lsl #7
    9bf0:	add	r5, r2, r3
    9bf4:	add	r2, r5, #1
    9bf8:	ldrb	r5, [ip, r5]
    9bfc:	umull	r3, r4, r2, r8
    9c00:	sub	r3, r2, r4
    9c04:	add	r3, r4, r3, lsr #1
    9c08:	lsr	r3, r3, #6
    9c0c:	sub	r3, r3, r3, lsl #7
    9c10:	add	lr, r2, r3
    9c14:	add	r3, lr, #1
    9c18:	ldrb	lr, [ip, lr]
    9c1c:	umull	r4, r7, r3, r8
    9c20:	sub	r4, r3, r7
    9c24:	add	r4, r7, r4, lsr #1
    9c28:	lsr	r4, r4, #6
    9c2c:	sub	r4, r4, r4, lsl #7
    9c30:	add	r7, r3, r4
    9c34:	add	r3, r7, #1
    9c38:	umull	r4, r1, r3, r8
    9c3c:	sub	r4, r3, r1
    9c40:	add	r1, r1, r4, lsr #1
    9c44:	lsr	r1, r1, #6
    9c48:	sub	r1, r1, r1, lsl #7
    9c4c:	add	r2, r3, r1
    9c50:	add	r3, r2, #1
    9c54:	umull	r4, r0, r3, r8
    9c58:	sub	r4, r3, r0
    9c5c:	add	r0, r0, r4, lsr #1
    9c60:	lsr	r0, r0, #6
    9c64:	sub	r0, r0, r0, lsl #7
    9c68:	add	r1, r3, r0
    9c6c:	add	r3, r1, #1
    9c70:	umull	r4, r0, r3, r8
    9c74:	sub	r4, r3, r0
    9c78:	add	r0, r0, r4, lsr #1
    9c7c:	lsr	r0, r0, #6
    9c80:	sub	r0, r0, r0, lsl #7
    9c84:	add	r0, r3, r0
    9c88:	add	r3, r0, #1
    9c8c:	ldrb	r0, [ip, r0]
    9c90:	umull	r4, r8, r3, r8
    9c94:	sub	r4, r3, r8
    9c98:	add	r4, r8, r4, lsr #1
    9c9c:	ldrb	r8, [ip, r1]
    9ca0:	ldr	r1, [sp, #24]
    9ca4:	lsr	r4, r4, #6
    9ca8:	str	r0, [sp]
    9cac:	ldrb	r0, [ip, r2]
    9cb0:	ldrb	r2, [ip, r7]
    9cb4:	sub	r4, r4, r4, lsl #7
    9cb8:	add	r3, r3, r4
    9cbc:	ldrb	r3, [ip, r3]
    9cc0:	ldrb	r4, [ip, r1]
    9cc4:	ldr	r1, [sp, #28]
    9cc8:	str	r0, [sp, #8]
    9ccc:	ldrb	r0, [ip, r9]
    9cd0:	str	r3, [sp, #4]
    9cd4:	ldrb	r7, [ip, r1]
    9cd8:	ldrb	r3, [sp, #39]	; 0x27
    9cdc:	eor	r1, r7, r3
    9ce0:	strb	r1, [sl, #29]
    9ce4:	ldrb	r3, [sp, #40]	; 0x28
    9ce8:	eor	r3, r4, r3
    9cec:	strb	r3, [sl, #30]
    9cf0:	str	r3, [sp, #28]
    9cf4:	ldrb	r3, [sp, #41]	; 0x29
    9cf8:	eor	r0, r0, r3
    9cfc:	strb	r0, [sl, #31]
    9d00:	str	r0, [sp, #24]
    9d04:	ldrb	r3, [sp, #42]	; 0x2a
    9d08:	eor	r4, r6, r3
    9d0c:	strb	r4, [sl, #32]
    9d10:	ldrb	r3, [sp, #43]	; 0x2b
    9d14:	eor	r0, r5, r3
    9d18:	strb	r0, [sl, #33]	; 0x21
    9d1c:	str	r0, [sp, #20]
    9d20:	ldrb	r3, [sp, #44]	; 0x2c
    9d24:	eor	r0, lr, r3
    9d28:	strb	r0, [sl, #34]	; 0x22
    9d2c:	str	r0, [sp, #16]
    9d30:	ldrb	r3, [sp, #45]	; 0x2d
    9d34:	eor	r0, r2, r3
    9d38:	strb	r0, [sl, #35]	; 0x23
    9d3c:	str	r0, [sp, #12]
    9d40:	ldr	r0, [sp, #8]
    9d44:	ldrb	r2, [sp, #46]	; 0x2e
    9d48:	eor	r0, r0, r2
    9d4c:	strb	r0, [sl, #36]	; 0x24
    9d50:	str	r0, [sp, #8]
    9d54:	ldr	r0, [sp]
    9d58:	ldrb	r2, [sp, #47]	; 0x2f
    9d5c:	eor	ip, r8, r2
    9d60:	mov	r2, r4
    9d64:	strb	ip, [sl, #37]	; 0x25
    9d68:	ldrb	r3, [sp, #48]	; 0x30
    9d6c:	eor	r3, r0, r3
    9d70:	ldr	r0, [sp, #4]
    9d74:	strb	r3, [sl, #38]	; 0x26
    9d78:	ldrb	r7, [sp, #49]	; 0x31
    9d7c:	eor	lr, r0, r7
    9d80:	strb	lr, [sl, #39]	; 0x27
    9d84:	ldrb	r0, [sl, #22]
    9d88:	ldrb	r6, [sl, #23]
    9d8c:	ldrb	r7, [sl, #24]
    9d90:	ldrb	r5, [sl, #25]
    9d94:	ldrb	r8, [sl, #28]
    9d98:	uxtb	r9, r1
    9d9c:	ldr	r1, [sp, #28]
    9da0:	orr	r4, r0, r6, lsl #1
    9da4:	str	r5, [sp]
    9da8:	str	r0, [sp, #4]
    9dac:	orr	r4, r4, r7, lsl #2
    9db0:	orr	r5, r4, r5, lsl #3
    9db4:	ldrb	r4, [sl, #26]
    9db8:	orr	r0, r5, r4, lsl #4
    9dbc:	ldrb	r5, [sl, #27]
    9dc0:	orr	r0, r0, r5, lsl #5
    9dc4:	orr	r0, r0, r8, lsl #6
    9dc8:	orr	r0, r0, r9, lsl #7
    9dcc:	orr	r0, r0, r1, lsl #8
    9dd0:	ldr	r1, [sp, #24]
    9dd4:	orr	r0, r0, r1, lsl #9
    9dd8:	ldr	r1, [sp, #20]
    9ddc:	uxth	r0, r0
    9de0:	orr	r1, r2, r1, lsl #1
    9de4:	ldr	r2, [sp, #16]
    9de8:	orr	r1, r1, r2, lsl #2
    9dec:	ldr	r2, [sp, #12]
    9df0:	orr	r1, r1, r2, lsl #3
    9df4:	ldr	r2, [sp, #8]
    9df8:	orr	r1, r1, r2, lsl #4
    9dfc:	orr	r1, r1, ip, lsl #5
    9e00:	orr	r1, r1, r3, lsl #6
    9e04:	orr	r9, r1, lr, lsl #7
    9e08:	uxtb	r1, r9
    9e0c:	bl	95d4 <try_clock@@Base+0x684>
    9e10:	ldrb	r1, [sl, #9]
    9e14:	cmp	r0, r1
    9e18:	mov	r0, #0
    9e1c:	bne	9e6c <btbb_decode_header@@Base+0x70c>
    9e20:	ldr	r2, [sp, #4]
    9e24:	lsl	r1, r6, #1
    9e28:	lsl	r0, r7, #2
    9e2c:	strb	r9, [sl, #21]
    9e30:	orr	r1, r2, r1
    9e34:	orr	r0, r1, r0
    9e38:	strb	r0, [sl, #19]
    9e3c:	ldr	r0, [sp]
    9e40:	orr	r0, r0, r4, lsl #1
    9e44:	orr	r0, r0, r5, lsl #2
    9e48:	orr	r0, r0, r8, lsl #3
    9e4c:	strb	r0, [sl, #18]
    9e50:	ldrb	r0, [sl, #29]
    9e54:	ldrb	r1, [sl, #30]
    9e58:	ldrb	r2, [sl, #31]
    9e5c:	orr	r0, r0, r1, lsl #1
    9e60:	orr	r0, r0, r2, lsl #2
    9e64:	strb	r0, [sl, #20]
    9e68:	mov	r0, #1
    9e6c:	sub	sp, fp, #28
    9e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e74:	strdeq	r9, [r0], -sl
    9e78:	andeq	fp, r0, r0, asr #30

00009e7c <btbb_decode_payload@@Base>:
    9e7c:	push	{r4, sl, fp, lr}
    9e80:	add	fp, sp, #8
    9e84:	mov	r4, r0
    9e88:	mov	r0, #0
    9e8c:	str	r0, [r4, #40]	; 0x28
    9e90:	ldrb	r1, [r4, #18]
    9e94:	cmp	r1, #15
    9e98:	bhi	9f78 <btbb_decode_payload@@Base+0xfc>
    9e9c:	add	r0, pc, #4
    9ea0:	ldr	r1, [r0, r1, lsl #2]
    9ea4:	add	pc, r0, r1
    9ea8:	andeq	r0, r0, r8, ror r0
    9eac:	andeq	r0, r0, r8, ror r0
    9eb0:	muleq	r0, r4, r0
    9eb4:	andeq	r0, r0, r0, asr #32
    9eb8:	andeq	r0, r0, ip, asr r0
    9ebc:	andeq	r0, r0, r4, asr #1
    9ec0:	andeq	r0, r0, r4, asr #1
    9ec4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    9ec8:	andeq	r0, r0, r0, asr #32
    9ecc:	andeq	r0, r0, ip, asr r0
    9ed0:	andeq	r0, r0, r0, asr #32
    9ed4:	andeq	r0, r0, ip, asr r0
    9ed8:	strdeq	r0, [r0], -ip
    9edc:	andeq	r0, r0, r0, ror #1
    9ee0:	andeq	r0, r0, r0, asr #32
    9ee4:	andeq	r0, r0, ip, asr r0
    9ee8:	ldr	r0, [r4, #2816]	; 0xb00
    9eec:	mov	r1, r4
    9ef0:	bl	45c8 <DM@plt>
    9ef4:	ldr	r1, [r4, #4]
    9ef8:	orr	r1, r1, #128	; 0x80
    9efc:	str	r1, [r4, #4]
    9f00:	pop	{r4, sl, fp, pc}
    9f04:	ldr	r0, [r4, #2816]	; 0xb00
    9f08:	mov	r1, r4
    9f0c:	bl	479c <DH@plt>
    9f10:	ldr	r1, [r4, #4]
    9f14:	orr	r1, r1, #128	; 0x80
    9f18:	str	r1, [r4, #4]
    9f1c:	pop	{r4, sl, fp, pc}
    9f20:	mov	r0, #0
    9f24:	str	r0, [r4, #64]	; 0x40
    9f28:	mov	r0, #1
    9f2c:	ldr	r1, [r4, #4]
    9f30:	orr	r1, r1, #128	; 0x80
    9f34:	str	r1, [r4, #4]
    9f38:	pop	{r4, sl, fp, pc}
    9f3c:	ldr	r0, [r4, #2816]	; 0xb00
    9f40:	mov	r1, r4
    9f44:	bl	458c <fhs@plt>
    9f48:	ldr	r1, [r4, #4]
    9f4c:	orr	r1, r1, #128	; 0x80
    9f50:	str	r1, [r4, #4]
    9f54:	pop	{r4, sl, fp, pc}
    9f58:	ldr	r0, [r4, #2816]	; 0xb00
    9f5c:	mov	r1, r4
    9f60:	bl	473c <EV3@plt>
    9f64:	cmp	r0, #1
    9f68:	bgt	9f78 <btbb_decode_payload@@Base+0xfc>
    9f6c:	ldr	r0, [r4, #2816]	; 0xb00
    9f70:	mov	r1, r4
    9f74:	bl	45d4 <HV@plt>
    9f78:	ldr	r1, [r4, #4]
    9f7c:	orr	r1, r1, #128	; 0x80
    9f80:	str	r1, [r4, #4]
    9f84:	pop	{r4, sl, fp, pc}
    9f88:	ldr	r0, [r4, #2816]	; 0xb00
    9f8c:	mov	r1, r4
    9f90:	bl	4784 <EV5@plt>
    9f94:	ldr	r1, [r4, #4]
    9f98:	orr	r1, r1, #128	; 0x80
    9f9c:	str	r1, [r4, #4]
    9fa0:	pop	{r4, sl, fp, pc}
    9fa4:	ldr	r0, [r4, #2816]	; 0xb00
    9fa8:	mov	r1, r4
    9fac:	bl	4598 <EV4@plt>
    9fb0:	ldr	r1, [r4, #4]
    9fb4:	orr	r1, r1, #128	; 0x80
    9fb8:	str	r1, [r4, #4]
    9fbc:	pop	{r4, sl, fp, pc}

00009fc0 <btbb_decode@@Base>:
    9fc0:	push	{r4, r5, fp, lr}
    9fc4:	add	fp, sp, #8
    9fc8:	mov	r4, r0
    9fcc:	ldr	r0, [r0, #4]
    9fd0:	bic	r0, r0, #128	; 0x80
    9fd4:	str	r0, [r4, #4]
    9fd8:	mov	r0, r4
    9fdc:	bl	46b8 <btbb_decode_header@plt>
    9fe0:	cmp	r0, #0
    9fe4:	moveq	r5, #0
    9fe8:	moveq	r0, r5
    9fec:	popeq	{r4, r5, fp, pc}
    9ff0:	mov	r0, r4
    9ff4:	bl	47b4 <btbb_decode_payload@plt>
    9ff8:	mov	r5, r0
    9ffc:	cmp	r0, #1
    a000:	blt	a024 <btbb_decode@@Base+0x64>
    a004:	ldr	r0, [r4, #2816]	; 0xb00
    a008:	mov	r2, r5
    a00c:	and	r1, r0, #63	; 0x3f
    a010:	ldr	r0, [pc, #20]	; a02c <btbb_decode@@Base+0x6c>
    a014:	add	r0, pc, r0
    a018:	bl	4508 <printf@plt>
    a01c:	mov	r0, r4
    a020:	bl	47d8 <btbb_print_packet@plt>
    a024:	mov	r0, r5
    a028:	pop	{r4, r5, fp, pc}
    a02c:	muleq	r0, r7, r3

0000a030 <btbb_print_packet@@Base>:
    a030:	push	{r4, r5, r6, r7, fp, lr}
    a034:	add	fp, sp, #16
    a038:	mov	r4, r0
    a03c:	ldrb	r0, [r0, #4]
    a040:	tst	r0, #128	; 0x80
    a044:	bne	a04c <btbb_print_packet@@Base+0x1c>
    a048:	pop	{r4, r5, r6, r7, fp, pc}
    a04c:	ldrb	r0, [r4, #18]
    a050:	ldr	r1, [pc, #256]	; a158 <btbb_print_packet@@Base+0x128>
    a054:	add	r1, pc, r1
    a058:	ldr	r1, [r1, r0, lsl #2]
    a05c:	ldr	r0, [pc, #248]	; a15c <btbb_print_packet@@Base+0x12c>
    a060:	add	r0, pc, r0
    a064:	bl	4508 <printf@plt>
    a068:	ldr	r0, [r4, #40]	; 0x28
    a06c:	cmp	r0, #0
    a070:	ble	a0bc <btbb_print_packet@@Base+0x8c>
    a074:	ldrb	r1, [r4, #19]
    a078:	ldr	r0, [pc, #224]	; a160 <btbb_print_packet@@Base+0x130>
    a07c:	add	r0, pc, r0
    a080:	bl	4508 <printf@plt>
    a084:	ldrb	r1, [r4, #60]	; 0x3c
    a088:	ldr	r0, [pc, #212]	; a164 <btbb_print_packet@@Base+0x134>
    a08c:	add	r0, pc, r0
    a090:	bl	4508 <printf@plt>
    a094:	ldrb	r1, [r4, #61]	; 0x3d
    a098:	ldr	r0, [pc, #200]	; a168 <btbb_print_packet@@Base+0x138>
    a09c:	add	r0, pc, r0
    a0a0:	bl	4508 <printf@plt>
    a0a4:	mov	r5, r4
    a0a8:	ldr	r1, [r5, #64]!	; 0x40
    a0ac:	ldr	r0, [pc, #184]	; a16c <btbb_print_packet@@Base+0x13c>
    a0b0:	add	r0, pc, r0
    a0b4:	bl	4508 <printf@plt>
    a0b8:	b	a0c0 <btbb_print_packet@@Base+0x90>
    a0bc:	add	r5, r4, #64	; 0x40
    a0c0:	ldr	r0, [r5]
    a0c4:	cmp	r0, #0
    a0c8:	popeq	{r4, r5, r6, r7, fp, pc}
    a0cc:	ldr	r0, [pc, #156]	; a170 <btbb_print_packet@@Base+0x140>
    a0d0:	add	r0, pc, r0
    a0d4:	bl	4508 <printf@plt>
    a0d8:	ldr	r0, [r5]
    a0dc:	cmp	r0, #1
    a0e0:	blt	a14c <btbb_print_packet@@Base+0x11c>
    a0e4:	ldr	r7, [pc, #136]	; a174 <btbb_print_packet@@Base+0x144>
    a0e8:	mov	r6, #0
    a0ec:	add	r7, pc, r7
    a0f0:	add	r0, r4, r6, lsl #3
    a0f4:	ldrb	r1, [r0, #68]	; 0x44
    a0f8:	ldrb	r2, [r0, #69]	; 0x45
    a0fc:	ldrb	r3, [r0, #70]	; 0x46
    a100:	ldrb	r5, [r0, #71]	; 0x47
    a104:	orr	r1, r1, r2, lsl #1
    a108:	ldrb	r2, [r0, #72]	; 0x48
    a10c:	orr	r1, r1, r3, lsl #2
    a110:	orr	r1, r1, r5, lsl #3
    a114:	orr	r1, r1, r2, lsl #4
    a118:	ldrb	r2, [r0, #73]	; 0x49
    a11c:	orr	r1, r1, r2, lsl #5
    a120:	ldrb	r2, [r0, #74]	; 0x4a
    a124:	ldrb	r0, [r0, #75]	; 0x4b
    a128:	orr	r1, r1, r2, lsl #6
    a12c:	orr	r0, r1, r0, lsl #7
    a130:	uxtb	r1, r0
    a134:	mov	r0, r7
    a138:	bl	4508 <printf@plt>
    a13c:	ldr	r0, [r4, #64]	; 0x40
    a140:	add	r6, r6, #1
    a144:	cmp	r6, r0
    a148:	blt	a0f0 <btbb_print_packet@@Base+0xc0>
    a14c:	mov	r0, #10
    a150:	pop	{r4, r5, r6, r7, fp, lr}
    a154:	b	4724 <putchar@plt>
    a158:	muleq	r2, r4, sp
    a15c:	andeq	r9, r0, r5, ror r3
    a160:	andeq	r9, r0, r5, ror #6
    a164:	andeq	r9, r0, r4, ror #6
    a168:	andeq	r9, r0, r0, ror #6
    a16c:	andeq	r9, r0, r8, asr r3
    a170:	muleq	r0, lr, lr
    a174:	andeq	ip, r0, fp, lsl #2

0000a178 <tun_format@@Base>:
    a178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    a17c:	add	fp, sp, #24
    a180:	ldr	r8, [r0, #64]	; 0x40
    a184:	mov	r9, r0
    a188:	add	r0, r8, #9
    a18c:	bl	4658 <malloc@plt>
    a190:	ldr	r1, [r9, #2816]	; 0xb00
    a194:	cmp	r8, #1
    a198:	lsr	r2, r1, #8
    a19c:	strb	r1, [r0]
    a1a0:	strb	r2, [r0, #1]
    a1a4:	lsr	r2, r1, #16
    a1a8:	lsr	r1, r1, #24
    a1ac:	strb	r2, [r0, #2]
    a1b0:	strb	r1, [r0, #3]
    a1b4:	ldrb	r1, [r9, #8]
    a1b8:	strb	r1, [r0, #4]
    a1bc:	ldr	r1, [r9, #4]
    a1c0:	and	r2, r1, #2
    a1c4:	ubfx	r1, r1, #5, #1
    a1c8:	orr	r1, r1, r2
    a1cc:	strb	r1, [r0, #5]
    a1d0:	ldrb	ip, [r9, #22]
    a1d4:	ldrb	r2, [r9, #23]
    a1d8:	ldrb	r3, [r9, #24]
    a1dc:	ldrb	r1, [r9, #25]
    a1e0:	orr	r2, ip, r2, lsl #1
    a1e4:	orr	r2, r2, r3, lsl #2
    a1e8:	orr	r1, r2, r1, lsl #3
    a1ec:	ldrb	r2, [r9, #26]
    a1f0:	orr	r1, r1, r2, lsl #4
    a1f4:	ldrb	r2, [r9, #27]
    a1f8:	orr	r1, r1, r2, lsl #5
    a1fc:	ldrb	r2, [r9, #28]
    a200:	orr	r1, r1, r2, lsl #6
    a204:	strb	r1, [r0, #6]
    a208:	ldrb	r1, [r9, #29]
    a20c:	ldrb	r2, [r9, #30]
    a210:	ldrb	r3, [r9, #31]
    a214:	orr	r1, r1, r2, lsl #1
    a218:	orr	r1, r1, r3, lsl #2
    a21c:	strb	r1, [r0, #7]
    a220:	ldrb	ip, [r9, #32]
    a224:	ldrb	r2, [r9, #33]	; 0x21
    a228:	ldrb	r3, [r9, #34]	; 0x22
    a22c:	ldrb	r1, [r9, #35]	; 0x23
    a230:	orr	r2, ip, r2, lsl #1
    a234:	orr	r2, r2, r3, lsl #2
    a238:	orr	r1, r2, r1, lsl #3
    a23c:	ldrb	r2, [r9, #36]	; 0x24
    a240:	orr	r1, r1, r2, lsl #4
    a244:	ldrb	r2, [r9, #37]	; 0x25
    a248:	orr	r1, r1, r2, lsl #5
    a24c:	ldrb	r2, [r9, #38]	; 0x26
    a250:	orr	r1, r1, r2, lsl #6
    a254:	ldrb	r2, [r9, #39]	; 0x27
    a258:	orr	r1, r1, r2, lsl #7
    a25c:	strb	r1, [r0, #8]
    a260:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
    a264:	add	r1, r0, #9
    a268:	mov	r2, #0
    a26c:	add	r3, r9, r2, lsl #3
    a270:	ldrb	r5, [r3, #68]	; 0x44
    a274:	ldrb	r6, [r3, #69]	; 0x45
    a278:	ldrb	r7, [r3, #70]	; 0x46
    a27c:	ldrb	r4, [r3, #71]	; 0x47
    a280:	orr	r6, r5, r6, lsl #1
    a284:	orr	r7, r6, r7, lsl #2
    a288:	ldrb	r6, [r3, #72]	; 0x48
    a28c:	orr	r7, r7, r4, lsl #3
    a290:	orr	r7, r7, r6, lsl #4
    a294:	ldrb	r6, [r3, #73]	; 0x49
    a298:	orr	r7, r7, r6, lsl #5
    a29c:	ldrb	r6, [r3, #74]	; 0x4a
    a2a0:	ldrb	r3, [r3, #75]	; 0x4b
    a2a4:	orr	r7, r7, r6, lsl #6
    a2a8:	orr	r3, r7, r3, lsl #7
    a2ac:	strb	r3, [r1, r2]
    a2b0:	add	r2, r2, #1
    a2b4:	cmp	r8, r2
    a2b8:	bne	a26c <tun_format@@Base+0xf4>
    a2bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000a2c0 <btbb_header_present@@Base>:
    a2c0:	movw	r1, #2822	; 0xb06
    a2c4:	ldrh	r2, [r0, r1]
    a2c8:	mov	r1, #0
    a2cc:	cmp	r2, #122	; 0x7a
    a2d0:	bcc	a5ac <btbb_header_present@@Base+0x2ec>
    a2d4:	push	{r4, sl, fp, lr}
    a2d8:	add	fp, sp, #8
    a2dc:	ldrb	r1, [r0, #2892]	; 0xb4c
    a2e0:	ldrb	r2, [r0, #2893]	; 0xb4d
    a2e4:	ldrb	r3, [r0, #2894]	; 0xb4e
    a2e8:	ldrb	lr, [r0, #2889]	; 0xb49
    a2ec:	eor	ip, r2, r1
    a2f0:	eor	r2, r3, r2
    a2f4:	eor	r1, r3, r1
    a2f8:	ldrb	r3, [r0, #2888]	; 0xb48
    a2fc:	orr	r2, r2, ip
    a300:	orr	ip, r2, r1
    a304:	ldrb	r2, [r0, #2887]	; 0xb47
    a308:	ldrb	r1, [r0, #2890]	; 0xb4a
    a30c:	clz	r4, r2
    a310:	lsr	r4, r4, #5
    a314:	eor	r1, r1, r4
    a318:	eor	r3, r3, r4
    a31c:	eor	r4, lr, r2
    a320:	uxtab	r3, r3, r4
    a324:	add	r1, r3, r1
    a328:	ldrb	r3, [r0, #2891]	; 0xb4b
    a32c:	eor	r2, r3, r2
    a330:	ldrb	r3, [r0, #2896]	; 0xb50
    a334:	uxtab	r1, r1, r2
    a338:	ldrb	r2, [r0, #2895]	; 0xb4f
    a33c:	uxtab	ip, r1, ip
    a340:	ldrb	r1, [r0, #2897]	; 0xb51
    a344:	eor	r4, r3, r2
    a348:	eor	r3, r1, r3
    a34c:	eor	r1, r1, r2
    a350:	ldrb	r2, [r0, #2898]	; 0xb52
    a354:	orr	r3, r3, r4
    a358:	orr	r1, r3, r1
    a35c:	ldrb	r3, [r0, #2899]	; 0xb53
    a360:	uxtab	ip, ip, r1
    a364:	ldrb	r1, [r0, #2900]	; 0xb54
    a368:	eor	r4, r3, r2
    a36c:	eor	r3, r1, r3
    a370:	eor	r1, r1, r2
    a374:	ldrb	r2, [r0, #2901]	; 0xb55
    a378:	orr	r3, r3, r4
    a37c:	orr	r1, r3, r1
    a380:	ldrb	r3, [r0, #2902]	; 0xb56
    a384:	uxtab	ip, ip, r1
    a388:	ldrb	r1, [r0, #2903]	; 0xb57
    a38c:	eor	r4, r3, r2
    a390:	eor	r3, r1, r3
    a394:	eor	r1, r1, r2
    a398:	ldrb	r2, [r0, #2904]	; 0xb58
    a39c:	orr	r3, r3, r4
    a3a0:	orr	r1, r3, r1
    a3a4:	ldrb	r3, [r0, #2905]	; 0xb59
    a3a8:	uxtab	ip, ip, r1
    a3ac:	ldrb	r1, [r0, #2906]	; 0xb5a
    a3b0:	eor	r4, r3, r2
    a3b4:	eor	r3, r1, r3
    a3b8:	eor	r1, r1, r2
    a3bc:	ldrb	r2, [r0, #2907]	; 0xb5b
    a3c0:	orr	r3, r3, r4
    a3c4:	orr	r1, r3, r1
    a3c8:	ldrb	r3, [r0, #2908]	; 0xb5c
    a3cc:	uxtab	ip, ip, r1
    a3d0:	ldrb	r1, [r0, #2909]	; 0xb5d
    a3d4:	eor	r4, r3, r2
    a3d8:	eor	r3, r1, r3
    a3dc:	eor	r1, r1, r2
    a3e0:	ldrb	r2, [r0, #2910]	; 0xb5e
    a3e4:	orr	r3, r3, r4
    a3e8:	orr	r1, r3, r1
    a3ec:	ldrb	r3, [r0, #2911]	; 0xb5f
    a3f0:	uxtab	ip, ip, r1
    a3f4:	ldrb	r1, [r0, #2912]	; 0xb60
    a3f8:	eor	r4, r3, r2
    a3fc:	eor	r3, r1, r3
    a400:	eor	r1, r1, r2
    a404:	ldrb	r2, [r0, #2913]	; 0xb61
    a408:	orr	r3, r3, r4
    a40c:	orr	r1, r3, r1
    a410:	ldrb	r3, [r0, #2914]	; 0xb62
    a414:	uxtab	ip, ip, r1
    a418:	ldrb	r1, [r0, #2915]	; 0xb63
    a41c:	eor	r4, r3, r2
    a420:	eor	r3, r1, r3
    a424:	eor	r1, r1, r2
    a428:	ldrb	r2, [r0, #2916]	; 0xb64
    a42c:	orr	r3, r3, r4
    a430:	orr	r1, r3, r1
    a434:	ldrb	r3, [r0, #2917]	; 0xb65
    a438:	uxtab	ip, ip, r1
    a43c:	ldrb	r1, [r0, #2918]	; 0xb66
    a440:	eor	r4, r3, r2
    a444:	eor	r3, r1, r3
    a448:	eor	r1, r1, r2
    a44c:	ldrb	r2, [r0, #2919]	; 0xb67
    a450:	orr	r3, r3, r4
    a454:	orr	r1, r3, r1
    a458:	ldrb	r3, [r0, #2920]	; 0xb68
    a45c:	uxtab	ip, ip, r1
    a460:	ldrb	r1, [r0, #2921]	; 0xb69
    a464:	eor	r4, r3, r2
    a468:	eor	r3, r1, r3
    a46c:	eor	r1, r1, r2
    a470:	ldrb	r2, [r0, #2922]	; 0xb6a
    a474:	orr	r3, r3, r4
    a478:	orr	r1, r3, r1
    a47c:	ldrb	r3, [r0, #2923]	; 0xb6b
    a480:	uxtab	ip, ip, r1
    a484:	ldrb	r1, [r0, #2924]	; 0xb6c
    a488:	eor	r4, r3, r2
    a48c:	eor	r3, r1, r3
    a490:	eor	r1, r1, r2
    a494:	ldrb	r2, [r0, #2925]	; 0xb6d
    a498:	orr	r3, r3, r4
    a49c:	orr	r1, r3, r1
    a4a0:	ldrb	r3, [r0, #2926]	; 0xb6e
    a4a4:	uxtab	ip, ip, r1
    a4a8:	ldrb	r1, [r0, #2927]	; 0xb6f
    a4ac:	eor	r4, r3, r2
    a4b0:	eor	r3, r1, r3
    a4b4:	eor	r1, r1, r2
    a4b8:	ldrb	r2, [r0, #2928]	; 0xb70
    a4bc:	orr	r3, r3, r4
    a4c0:	orr	r1, r3, r1
    a4c4:	ldrb	r3, [r0, #2929]	; 0xb71
    a4c8:	uxtab	ip, ip, r1
    a4cc:	ldrb	r1, [r0, #2930]	; 0xb72
    a4d0:	eor	r4, r3, r2
    a4d4:	eor	r3, r1, r3
    a4d8:	eor	r1, r1, r2
    a4dc:	ldrb	r2, [r0, #2931]	; 0xb73
    a4e0:	orr	r3, r3, r4
    a4e4:	orr	r1, r3, r1
    a4e8:	ldrb	r3, [r0, #2932]	; 0xb74
    a4ec:	uxtab	ip, ip, r1
    a4f0:	ldrb	r1, [r0, #2933]	; 0xb75
    a4f4:	eor	r4, r3, r2
    a4f8:	eor	r3, r1, r3
    a4fc:	eor	r1, r1, r2
    a500:	ldrb	r2, [r0, #2934]	; 0xb76
    a504:	orr	r3, r3, r4
    a508:	orr	r1, r3, r1
    a50c:	ldrb	r3, [r0, #2935]	; 0xb77
    a510:	uxtab	ip, ip, r1
    a514:	ldrb	r1, [r0, #2936]	; 0xb78
    a518:	eor	r4, r3, r2
    a51c:	eor	r3, r1, r3
    a520:	eor	r1, r1, r2
    a524:	ldrb	r2, [r0, #2937]	; 0xb79
    a528:	orr	r3, r3, r4
    a52c:	orr	r1, r3, r1
    a530:	ldrb	r3, [r0, #2938]	; 0xb7a
    a534:	uxtab	ip, ip, r1
    a538:	ldrb	r1, [r0, #2939]	; 0xb7b
    a53c:	eor	r4, r3, r2
    a540:	eor	r3, r1, r3
    a544:	eor	r1, r1, r2
    a548:	ldrb	r2, [r0, #2940]	; 0xb7c
    a54c:	orr	r3, r3, r4
    a550:	orr	r1, r3, r1
    a554:	ldrb	r3, [r0, #2941]	; 0xb7d
    a558:	uxtab	ip, ip, r1
    a55c:	ldrb	r1, [r0, #2942]	; 0xb7e
    a560:	eor	r4, r3, r2
    a564:	eor	r3, r1, r3
    a568:	eor	r1, r1, r2
    a56c:	ldrb	r2, [r0, #2943]	; 0xb7f
    a570:	orr	r3, r3, r4
    a574:	orr	r1, r3, r1
    a578:	ldrb	r3, [r0, #2944]	; 0xb80
    a57c:	ldrb	r0, [r0, #2945]	; 0xb81
    a580:	uxtab	r1, ip, r1
    a584:	eor	r4, r3, r2
    a588:	eor	r3, r0, r3
    a58c:	eor	r0, r0, r2
    a590:	orr	r3, r3, r4
    a594:	orr	r0, r3, r0
    a598:	uxtab	r0, r1, r0
    a59c:	mov	r1, #0
    a5a0:	cmp	r0, #5
    a5a4:	movwlt	r1, #1
    a5a8:	pop	{r4, sl, fp, lr}
    a5ac:	mov	r0, r1
    a5b0:	bx	lr

0000a5b4 <lap_from_fhs@@Base>:
    a5b4:	ldrb	ip, [r0, #102]	; 0x66
    a5b8:	ldrb	r2, [r0, #103]	; 0x67
    a5bc:	ldrb	r3, [r0, #104]	; 0x68
    a5c0:	ldrb	r1, [r0, #105]	; 0x69
    a5c4:	orr	r2, ip, r2, lsl #1
    a5c8:	orr	r2, r2, r3, lsl #2
    a5cc:	orr	r1, r2, r1, lsl #3
    a5d0:	ldrb	r2, [r0, #106]	; 0x6a
    a5d4:	orr	r1, r1, r2, lsl #4
    a5d8:	ldrb	r2, [r0, #107]	; 0x6b
    a5dc:	orr	r1, r1, r2, lsl #5
    a5e0:	ldrb	r2, [r0, #108]	; 0x6c
    a5e4:	orr	r1, r1, r2, lsl #6
    a5e8:	ldrb	r2, [r0, #109]	; 0x6d
    a5ec:	orr	r1, r1, r2, lsl #7
    a5f0:	ldrb	r2, [r0, #110]	; 0x6e
    a5f4:	orr	r1, r1, r2, lsl #8
    a5f8:	ldrb	r2, [r0, #111]	; 0x6f
    a5fc:	orr	r1, r1, r2, lsl #9
    a600:	ldrb	r2, [r0, #112]	; 0x70
    a604:	orr	r1, r1, r2, lsl #10
    a608:	ldrb	r2, [r0, #113]	; 0x71
    a60c:	orr	r1, r1, r2, lsl #11
    a610:	ldrb	r2, [r0, #114]	; 0x72
    a614:	orr	r1, r1, r2, lsl #12
    a618:	ldrb	r2, [r0, #115]	; 0x73
    a61c:	orr	r1, r1, r2, lsl #13
    a620:	ldrb	r2, [r0, #116]	; 0x74
    a624:	orr	r1, r1, r2, lsl #14
    a628:	ldrb	r2, [r0, #117]	; 0x75
    a62c:	orr	r1, r1, r2, lsl #15
    a630:	ldrb	r2, [r0, #118]	; 0x76
    a634:	orr	r1, r1, r2, lsl #16
    a638:	ldrb	r2, [r0, #119]	; 0x77
    a63c:	orr	r1, r1, r2, lsl #17
    a640:	ldrb	r2, [r0, #120]	; 0x78
    a644:	orr	r1, r1, r2, lsl #18
    a648:	ldrb	r2, [r0, #121]	; 0x79
    a64c:	orr	r1, r1, r2, lsl #19
    a650:	ldrb	r2, [r0, #122]	; 0x7a
    a654:	orr	r1, r1, r2, lsl #20
    a658:	ldrb	r2, [r0, #123]	; 0x7b
    a65c:	orr	r1, r1, r2, lsl #21
    a660:	ldrb	r2, [r0, #124]	; 0x7c
    a664:	ldrb	r0, [r0, #125]	; 0x7d
    a668:	orr	r1, r1, r2, lsl #22
    a66c:	orr	r0, r1, r0, lsl #23
    a670:	bx	lr

0000a674 <uap_from_fhs@@Base>:
    a674:	ldrb	ip, [r0, #132]	; 0x84
    a678:	ldrb	r2, [r0, #133]	; 0x85
    a67c:	ldrb	r3, [r0, #134]	; 0x86
    a680:	ldrb	r1, [r0, #135]	; 0x87
    a684:	orr	r2, ip, r2, lsl #1
    a688:	orr	r2, r2, r3, lsl #2
    a68c:	orr	r1, r2, r1, lsl #3
    a690:	ldrb	r2, [r0, #136]	; 0x88
    a694:	orr	r1, r1, r2, lsl #4
    a698:	ldrb	r2, [r0, #137]	; 0x89
    a69c:	orr	r1, r1, r2, lsl #5
    a6a0:	ldrb	r2, [r0, #138]	; 0x8a
    a6a4:	ldrb	r0, [r0, #139]	; 0x8b
    a6a8:	orr	r1, r1, r2, lsl #6
    a6ac:	orr	r0, r1, r0, lsl #7
    a6b0:	uxtb	r0, r0
    a6b4:	bx	lr

0000a6b8 <nap_from_fhs@@Base>:
    a6b8:	ldrb	ip, [r0, #140]	; 0x8c
    a6bc:	ldrb	r2, [r0, #141]	; 0x8d
    a6c0:	ldrb	r3, [r0, #142]	; 0x8e
    a6c4:	ldrb	r1, [r0, #143]	; 0x8f
    a6c8:	orr	r2, ip, r2, lsl #1
    a6cc:	orr	r2, r2, r3, lsl #2
    a6d0:	orr	r1, r2, r1, lsl #3
    a6d4:	ldrb	r2, [r0, #144]	; 0x90
    a6d8:	orr	r1, r1, r2, lsl #4
    a6dc:	ldrb	r2, [r0, #145]	; 0x91
    a6e0:	orr	r1, r1, r2, lsl #5
    a6e4:	ldrb	r2, [r0, #146]	; 0x92
    a6e8:	orr	r1, r1, r2, lsl #6
    a6ec:	ldrb	r2, [r0, #147]	; 0x93
    a6f0:	orr	r1, r1, r2, lsl #7
    a6f4:	ldrb	r2, [r0, #148]	; 0x94
    a6f8:	orr	r1, r1, r2, lsl #8
    a6fc:	ldrb	r2, [r0, #149]	; 0x95
    a700:	orr	r1, r1, r2, lsl #9
    a704:	ldrb	r2, [r0, #150]	; 0x96
    a708:	orr	r1, r1, r2, lsl #10
    a70c:	ldrb	r2, [r0, #151]	; 0x97
    a710:	orr	r1, r1, r2, lsl #11
    a714:	ldrb	r2, [r0, #152]	; 0x98
    a718:	orr	r1, r1, r2, lsl #12
    a71c:	ldrb	r2, [r0, #153]	; 0x99
    a720:	orr	r1, r1, r2, lsl #13
    a724:	ldrb	r2, [r0, #154]	; 0x9a
    a728:	ldrb	r0, [r0, #155]	; 0x9b
    a72c:	orr	r1, r1, r2, lsl #14
    a730:	orr	r0, r1, r0, lsl #15
    a734:	uxth	r0, r0
    a738:	bx	lr

0000a73c <clock_from_fhs@@Base>:
    a73c:	ldrb	ip, [r0, #183]	; 0xb7
    a740:	ldrb	r2, [r0, #184]	; 0xb8
    a744:	ldrb	r3, [r0, #185]	; 0xb9
    a748:	ldrb	r1, [r0, #186]	; 0xba
    a74c:	orr	r2, ip, r2, lsl #1
    a750:	orr	r2, r2, r3, lsl #2
    a754:	orr	r1, r2, r1, lsl #3
    a758:	ldrb	r2, [r0, #187]	; 0xbb
    a75c:	orr	r1, r1, r2, lsl #4
    a760:	ldrb	r2, [r0, #188]	; 0xbc
    a764:	orr	r1, r1, r2, lsl #5
    a768:	ldrb	r2, [r0, #189]	; 0xbd
    a76c:	orr	r1, r1, r2, lsl #6
    a770:	ldrb	r2, [r0, #190]	; 0xbe
    a774:	orr	r1, r1, r2, lsl #7
    a778:	ldrb	r2, [r0, #191]	; 0xbf
    a77c:	orr	r1, r1, r2, lsl #8
    a780:	ldrb	r2, [r0, #192]	; 0xc0
    a784:	orr	r1, r1, r2, lsl #9
    a788:	ldrb	r2, [r0, #193]	; 0xc1
    a78c:	orr	r1, r1, r2, lsl #10
    a790:	ldrb	r2, [r0, #194]	; 0xc2
    a794:	orr	r1, r1, r2, lsl #11
    a798:	ldrb	r2, [r0, #195]	; 0xc3
    a79c:	orr	r1, r1, r2, lsl #12
    a7a0:	ldrb	r2, [r0, #196]	; 0xc4
    a7a4:	orr	r1, r1, r2, lsl #13
    a7a8:	ldrb	r2, [r0, #197]	; 0xc5
    a7ac:	orr	r1, r1, r2, lsl #14
    a7b0:	ldrb	r2, [r0, #198]	; 0xc6
    a7b4:	orr	r1, r1, r2, lsl #15
    a7b8:	ldrb	r2, [r0, #199]	; 0xc7
    a7bc:	orr	r1, r1, r2, lsl #16
    a7c0:	ldrb	r2, [r0, #200]	; 0xc8
    a7c4:	orr	r1, r1, r2, lsl #17
    a7c8:	ldrb	r2, [r0, #201]	; 0xc9
    a7cc:	orr	r1, r1, r2, lsl #18
    a7d0:	ldrb	r2, [r0, #202]	; 0xca
    a7d4:	orr	r1, r1, r2, lsl #19
    a7d8:	ldrb	r2, [r0, #203]	; 0xcb
    a7dc:	orr	r1, r1, r2, lsl #20
    a7e0:	ldrb	r2, [r0, #204]	; 0xcc
    a7e4:	orr	r1, r1, r2, lsl #21
    a7e8:	ldrb	r2, [r0, #205]	; 0xcd
    a7ec:	orr	r1, r1, r2, lsl #22
    a7f0:	ldrb	r2, [r0, #206]	; 0xce
    a7f4:	orr	r1, r1, r2, lsl #23
    a7f8:	ldrb	r2, [r0, #207]	; 0xcf
    a7fc:	ldrb	r0, [r0, #208]	; 0xd0
    a800:	orr	r1, r1, r2, lsl #24
    a804:	orr	r0, r1, r0, lsl #25
    a808:	bx	lr
    a80c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a810:	add	fp, sp, #28
    a814:	sub	sp, sp, #4
    a818:	vpush	{d8-d9}
    a81c:	sub	sp, sp, #24
    a820:	cmp	r2, #57	; 0x39
    a824:	str	r1, [sp, #16]
    a828:	bgt	acc0 <clock_from_fhs@@Base+0x584>
    a82c:	sub	r6, r3, #1
    a830:	mov	r8, r0
    a834:	mov	r9, #0
    a838:	vmov.i32	q4, #0	; 0x00000000
    a83c:	str	r0, [sp, #12]
    a840:	str	r6, [sp, #8]
    a844:	mov	r7, r2
    a848:	mov	r2, #1
    a84c:	sub	r1, r7, #32
    a850:	lsl	r0, r2, r7
    a854:	str	r7, [sp, #20]
    a858:	cmp	r1, #0
    a85c:	movwge	r0, #0
    a860:	orr	r4, r0, r8
    a864:	rsb	r0, r7, #32
    a868:	lsr	r0, r2, r0
    a86c:	lslge	r0, r2, r1
    a870:	ldr	r1, [sp, #16]
    a874:	cmp	r6, #0
    a878:	orr	r5, r0, r1
    a87c:	beq	a8a8 <clock_from_fhs@@Base+0x16c>
    a880:	add	r2, r7, #1
    a884:	mov	r0, r4
    a888:	mov	r1, r5
    a88c:	mov	r3, r6
    a890:	bl	a80c <clock_from_fhs@@Base+0xd0>
    a894:	ldr	r0, [sp, #20]
    a898:	add	r2, r0, #1
    a89c:	cmp	r0, #57	; 0x39
    a8a0:	blt	a844 <clock_from_fhs@@Base+0x108>
    a8a4:	b	acc0 <clock_from_fhs@@Base+0x584>
    a8a8:	mov	r0, #48	; 0x30
    a8ac:	bl	4658 <malloc@plt>
    a8b0:	mov	r8, r0
    a8b4:	str	r5, [r0, #12]
    a8b8:	str	r9, [r0, #24]
    a8bc:	mov	r0, #8
    a8c0:	movw	ip, #2040	; 0x7f8
    a8c4:	str	r0, [r8, #40]	; 0x28
    a8c8:	movw	r0, #29288	; 0x7268
    a8cc:	add	lr, r8, #16
    a8d0:	ldr	r2, [pc, #1024]	; acd8 <clock_from_fhs@@Base+0x59c>
    a8d4:	ldr	r6, [pc, #1024]	; acdc <clock_from_fhs@@Base+0x5a0>
    a8d8:	movt	r0, #52347	; 0xcc7b
    a8dc:	str	r4, [r8, #8]
    a8e0:	eor	r0, r5, r0
    a8e4:	ldr	r5, [pc, #1012]	; ace0 <clock_from_fhs@@Base+0x5a4>
    a8e8:	uxtb	r3, r0
    a8ec:	and	r1, ip, r0, lsr #5
    a8f0:	add	r6, pc, r6
    a8f4:	add	r2, pc, r2
    a8f8:	ldr	r3, [r6, r3, lsl #3]!
    a8fc:	ldr	r1, [r2, r1]!
    a900:	add	r5, pc, r5
    a904:	eor	r3, r3, r4
    a908:	eor	r1, r3, r1
    a90c:	and	r3, ip, r0, lsr #13
    a910:	and	r0, ip, r0, lsr #21
    a914:	ldr	r3, [r5, r3]!
    a918:	eor	r1, r1, r3
    a91c:	ldr	r3, [pc, #960]	; ace4 <clock_from_fhs@@Base+0x5a8>
    a920:	add	r3, pc, r3
    a924:	ldr	r0, [r3, r0]!
    a928:	eor	r0, r1, r0
    a92c:	movw	r1, #19995	; 0x4e1b
    a930:	movt	r1, #65377	; 0xff61
    a934:	eor	r0, r0, r1
    a938:	ldr	r1, [r6, #4]
    a93c:	str	r0, [r8]
    a940:	ldr	r0, [r2, #4]
    a944:	eor	r0, r1, r0
    a948:	ldr	r1, [r5, #4]
    a94c:	eor	r0, r0, r1
    a950:	ldr	r1, [r3, #4]
    a954:	eor	r0, r0, r1
    a958:	str	r0, [r8, #4]
    a95c:	str	r8, [r8, #36]	; 0x24
    a960:	ldr	r0, [pc, #896]	; ace8 <clock_from_fhs@@Base+0x5ac>
    a964:	ldr	r0, [pc, r0]
    a968:	cmp	r0, #0
    a96c:	beq	a990 <clock_from_fhs@@Base+0x254>
    a970:	ldr	r4, [r0, #16]!
    a974:	ldr	r1, [r4, #16]
    a978:	str	r8, [r1, #8]
    a97c:	ldr	r2, [r4, #20]
    a980:	sub	r1, r1, r2
    a984:	str	r1, [r8, #20]
    a988:	str	lr, [r4, #16]
    a98c:	b	aa1c <clock_from_fhs@@Base+0x2e0>
    a990:	ldr	r0, [pc, #852]	; acec <clock_from_fhs@@Base+0x5b0>
    a994:	mov	r5, lr
    a998:	str	r9, [r8, #20]
    a99c:	add	r0, pc, r0
    a9a0:	str	r8, [r0]
    a9a4:	mov	r0, #44	; 0x2c
    a9a8:	bl	4658 <malloc@plt>
    a9ac:	cmp	r0, #0
    a9b0:	str	r0, [r8, #16]
    a9b4:	beq	acd0 <clock_from_fhs@@Base+0x594>
    a9b8:	mov	r4, r0
    a9bc:	add	r0, r0, #12
    a9c0:	vst1.32	{d8-d9}, [r0]
    a9c4:	mov	r0, #32
    a9c8:	str	r0, [r4, #4]
    a9cc:	mov	r0, #5
    a9d0:	str	r0, [r4, #8]
    a9d4:	add	r0, r4, #28
    a9d8:	vst1.32	{d8-d9}, [r0]
    a9dc:	mov	r0, #16
    a9e0:	str	r5, [r4, #16]
    a9e4:	str	r0, [r4, #20]
    a9e8:	mov	r0, #384	; 0x180
    a9ec:	bl	4658 <malloc@plt>
    a9f0:	cmp	r0, #0
    a9f4:	str	r0, [r4]
    a9f8:	beq	acd0 <clock_from_fhs@@Base+0x594>
    a9fc:	mov	r1, #0
    aa00:	mov	r2, #384	; 0x180
    aa04:	bl	4718 <memset@plt>
    aa08:	movw	r0, #8161	; 0x1fe1
    aa0c:	mov	lr, r5
    aa10:	movt	r0, #40977	; 0xa011
    aa14:	str	r0, [r4, #40]	; 0x28
    aa18:	mov	r0, r5
    aa1c:	ldr	r1, [r4, #12]
    aa20:	movw	r2, #31161	; 0x79b9
    aa24:	movw	r3, #47810	; 0xbac2
    aa28:	movt	r2, #40503	; 0x9e37
    aa2c:	movt	r3, #40777	; 0x9f49
    aa30:	add	r1, r1, #1
    aa34:	str	r1, [r4, #12]
    aa38:	ldrb	r4, [r8, #3]
    aa3c:	ldr	r1, [r8, #4]
    aa40:	ldrb	r5, [r8, #2]
    aa44:	ldrb	r6, [r8, #1]
    aa48:	ldrb	ip, [r8]
    aa4c:	ldr	sl, [r0]
    aa50:	add	r2, r1, r2
    aa54:	add	r4, r3, r4, lsl #24
    aa58:	add	r1, r1, r3
    aa5c:	movw	r3, #48887	; 0xbef7
    aa60:	str	sl, [r8, #16]
    aa64:	sub	r2, r4, r2
    aa68:	movt	r3, #65261	; 0xfeed
    aa6c:	add	r2, r2, r5, lsl #16
    aa70:	add	r2, r2, r6, lsl #8
    aa74:	movw	r6, #63341	; 0xf76d
    aa78:	add	r2, r2, ip
    aa7c:	movt	r6, #7
    aa80:	eor	r2, r2, r6
    aa84:	sub	r1, r1, r2
    aa88:	sub	r3, r3, r2
    aa8c:	eor	r1, r1, r2, lsl #8
    aa90:	sub	r3, r3, r1
    aa94:	sub	r2, r2, r1
    aa98:	eor	r3, r3, r1, lsr #13
    aa9c:	sub	r2, r2, r3
    aaa0:	sub	r1, r1, r3
    aaa4:	eor	r2, r2, r3, lsr #12
    aaa8:	sub	r1, r1, r2
    aaac:	sub	r3, r3, r2
    aab0:	eor	r1, r1, r2, lsl #16
    aab4:	sub	r3, r3, r1
    aab8:	sub	r2, r2, r1
    aabc:	eor	r3, r3, r1, lsr #5
    aac0:	sub	r2, r2, r3
    aac4:	sub	r1, r1, r3
    aac8:	eor	r2, r2, r3, lsr #3
    aacc:	sub	r1, r1, r2
    aad0:	eor	r1, r1, r2, lsl #10
    aad4:	sub	r2, r3, r2
    aad8:	sub	r2, r2, r1
    aadc:	eor	r1, r2, r1, lsr #15
    aae0:	str	r1, [r8, #44]	; 0x2c
    aae4:	ldr	r2, [r0]
    aae8:	ldm	r2, {r0, r2}
    aaec:	sub	r2, r2, #1
    aaf0:	mov	r3, r0
    aaf4:	and	r1, r1, r2
    aaf8:	add	r2, r1, r1, lsl #1
    aafc:	ldr	r6, [r3, r2, lsl #2]!
    ab00:	add	r0, r0, r2, lsl #2
    ab04:	mov	r2, #10
    ab08:	ldr	r1, [r3, #4]
    ab0c:	cmp	r6, #0
    ab10:	add	r1, r1, #1
    ab14:	str	r1, [r3, #4]
    ab18:	str	r9, [r8, #28]
    ab1c:	str	r6, [r8, #32]
    ab20:	strne	lr, [r6, #12]
    ab24:	str	lr, [r3]
    ab28:	ldr	r8, [sp, #12]
    ab2c:	ldr	r6, [sp, #8]
    ab30:	ldr	r0, [r0, #8]
    ab34:	add	r0, r0, r0, lsl #2
    ab38:	add	r0, r2, r0, lsl #1
    ab3c:	cmp	r1, r0
    ab40:	bcc	ac90 <clock_from_fhs@@Base+0x554>
    ab44:	ldr	r0, [sl, #36]	; 0x24
    ab48:	cmp	r0, #1
    ab4c:	beq	ac90 <clock_from_fhs@@Base+0x554>
    ab50:	ldr	r0, [sl, #4]
    ab54:	str	lr, [sp, #4]
    ab58:	add	r0, r0, r0, lsl #1
    ab5c:	lsl	r0, r0, #3
    ab60:	bl	4658 <malloc@plt>
    ab64:	cmp	r0, #0
    ab68:	beq	acd0 <clock_from_fhs@@Base+0x594>
    ab6c:	mov	r8, r0
    ab70:	ldr	r0, [sl, #4]
    ab74:	mov	r1, #0
    ab78:	add	r0, r0, r0, lsl #1
    ab7c:	lsl	r2, r0, #3
    ab80:	mov	r0, r8
    ab84:	bl	4718 <memset@plt>
    ab88:	str	r9, [sl, #28]
    ab8c:	mvn	r2, #0
    ab90:	mov	r6, #1
    ab94:	ldm	sl, {r0, ip}
    ab98:	ldr	r1, [sl, #8]
    ab9c:	ldr	r7, [sl, #12]
    aba0:	add	r1, r1, #1
    aba4:	add	r2, r2, ip, lsl #1
    aba8:	lsr	r3, r7, r1
    abac:	tst	r2, r7
    abb0:	addne	r3, r6, r7, lsr r1
    abb4:	cmp	ip, #0
    abb8:	str	r3, [sl, #24]
    abbc:	beq	ac40 <clock_from_fhs@@Base+0x504>
    abc0:	mov	r6, #0
    abc4:	mov	lr, #0
    abc8:	add	r1, lr, lr, lsl #1
    abcc:	ldr	r1, [r0, r1, lsl #2]
    abd0:	cmp	r1, #0
    abd4:	beq	ac34 <clock_from_fhs@@Base+0x4f8>
    abd8:	ldr	r5, [r1, #28]
    abdc:	ldr	r4, [r1, #16]
    abe0:	and	r5, r5, r2
    abe4:	add	r5, r5, r5, lsl #1
    abe8:	add	r5, r8, r5, lsl #2
    abec:	ldr	r7, [r5, #4]
    abf0:	add	r9, r7, #1
    abf4:	cmp	r9, r3
    abf8:	str	r9, [r5, #4]
    abfc:	addhi	r6, r6, #1
    ac00:	udivhi	r7, r9, r3
    ac04:	mov	r9, #0
    ac08:	strhi	r6, [sl, #28]
    ac0c:	strhi	r7, [r5, #8]
    ac10:	str	r9, [r1, #12]
    ac14:	ldr	r7, [r5]
    ac18:	cmp	r7, #0
    ac1c:	str	r7, [r1, #16]
    ac20:	strne	r1, [r7, #12]
    ac24:	str	r1, [r5]
    ac28:	cmp	r4, #0
    ac2c:	mov	r1, r4
    ac30:	bne	abd8 <clock_from_fhs@@Base+0x49c>
    ac34:	add	lr, lr, #1
    ac38:	cmp	lr, ip
    ac3c:	bne	abc8 <clock_from_fhs@@Base+0x48c>
    ac40:	bl	4550 <free@plt>
    ac44:	ldr	r0, [sp, #4]
    ac48:	ldr	r0, [r0]
    ac4c:	str	r8, [r0]
    ac50:	ldmib	r0, {r1, r2, r3}
    ac54:	ldr	r7, [r0, #28]
    ac58:	lsl	r1, r1, #1
    ac5c:	cmp	r7, r3, lsr #1
    ac60:	str	r1, [r0, #4]
    ac64:	add	r1, r2, #1
    ac68:	str	r1, [r0, #8]
    ac6c:	bls	aca4 <clock_from_fhs@@Base+0x568>
    ac70:	ldr	r1, [r0, #32]
    ac74:	ldr	r8, [sp, #12]
    ac78:	ldr	r6, [sp, #8]
    ac7c:	add	r1, r1, #1
    ac80:	cmp	r1, #2
    ac84:	str	r1, [r0, #32]
    ac88:	movcs	r1, #1
    ac8c:	strcs	r1, [r0, #36]	; 0x24
    ac90:	ldr	r0, [sp, #20]
    ac94:	add	r2, r0, #1
    ac98:	cmp	r0, #57	; 0x39
    ac9c:	blt	a844 <clock_from_fhs@@Base+0x108>
    aca0:	b	acc0 <clock_from_fhs@@Base+0x584>
    aca4:	ldr	r8, [sp, #12]
    aca8:	ldr	r6, [sp, #8]
    acac:	str	r9, [r0, #32]
    acb0:	ldr	r0, [sp, #20]
    acb4:	add	r2, r0, #1
    acb8:	cmp	r0, #57	; 0x39
    acbc:	blt	a844 <clock_from_fhs@@Base+0x108>
    acc0:	sub	sp, fp, #48	; 0x30
    acc4:	vpop	{d8-d9}
    acc8:	add	sp, sp, #4
    accc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    acd0:	mvn	r0, #0
    acd4:	bl	4694 <exit@plt>
    acd8:	andeq	r9, r0, r4, ror r8
    acdc:	andeq	r9, r0, r8, ror r0
    ace0:	andeq	sl, r0, r8, rrx
    ace4:	andeq	sl, r0, r8, asr #16
    ace8:	andeq	r2, r2, r0, ror #15
    acec:	andeq	r2, r2, r8, lsr #15

0000acf0 <count_bits@@Base>:
    acf0:	mov	r1, #0
    acf4:	cmp	r0, #0
    acf8:	beq	ad10 <count_bits@@Base+0x20>
    acfc:	sub	r2, r0, #1
    ad00:	add	r1, r1, #1
    ad04:	and	r0, r2, r0
    ad08:	tst	r0, #255	; 0xff
    ad0c:	bne	acfc <count_bits@@Base+0xc>
    ad10:	mov	r0, r1
    ad14:	bx	lr

0000ad18 <btbb_piconet_new@@Base>:
    ad18:	push	{r4, sl, fp, lr}
    ad1c:	add	fp, sp, #8
    ad20:	mov	r0, #1
    ad24:	movw	r1, #5660	; 0x161c
    ad28:	mov	r4, #1
    ad2c:	bl	44cc <calloc@plt>
    ad30:	str	r4, [r0]
    ad34:	pop	{r4, sl, fp, pc}

0000ad38 <btbb_piconet_ref@@Base>:
    ad38:	ldr	r1, [r0]
    ad3c:	add	r1, r1, #1
    ad40:	str	r1, [r0]
    ad44:	bx	lr

0000ad48 <btbb_piconet_unref@@Base>:
    ad48:	ldr	r1, [r0]
    ad4c:	subs	r1, r1, #1
    ad50:	str	r1, [r0]
    ad54:	bxne	lr
    ad58:	b	4550 <free@plt>

0000ad5c <btbb_init_survey@@Base>:
    ad5c:	ldr	r0, [pc, #16]	; ad74 <btbb_init_survey@@Base+0x18>
    ad60:	mov	r1, #1
    ad64:	add	r0, pc, r0
    ad68:	strb	r1, [r0]
    ad6c:	mov	r0, #0
    ad70:	bx	lr
    ad74:	andeq	r2, r2, r8, ror #7

0000ad78 <btbb_init_piconet@@Base>:
    ad78:	str	r1, [r0, #24]
    ad7c:	ldr	r1, [r0, #4]
    ad80:	orr	r1, r1, #8
    ad84:	str	r1, [r0, #4]
    ad88:	bx	lr

0000ad8c <btbb_piconet_set_flag@@Base>:
    ad8c:	push	{fp, lr}
    ad90:	mov	fp, sp
    ad94:	ldr	lr, [r0, #4]
    ad98:	mov	ip, #1
    ad9c:	cmp	r2, #0
    ada0:	orr	r3, lr, ip, lsl r1
    ada4:	biceq	r3, lr, ip, lsl r1
    ada8:	str	r3, [r0, #4]
    adac:	pop	{fp, pc}

0000adb0 <btbb_piconet_get_flag@@Base>:
    adb0:	ldr	r0, [r0, #4]
    adb4:	mov	r2, #1
    adb8:	and	r0, r0, r2, lsl r1
    adbc:	cmp	r0, #0
    adc0:	movwne	r0, #1
    adc4:	bx	lr

0000adc8 <btbb_piconet_set_uap@@Base>:
    adc8:	strb	r1, [r0, #28]
    adcc:	ldr	r1, [r0, #4]
    add0:	orr	r1, r1, #4
    add4:	str	r1, [r0, #4]
    add8:	bx	lr

0000addc <btbb_piconet_get_uap@@Base>:
    addc:	ldrb	r0, [r0, #28]
    ade0:	bx	lr

0000ade4 <btbb_piconet_get_lap@@Base>:
    ade4:	ldr	r0, [r0, #24]
    ade8:	bx	lr

0000adec <btbb_piconet_get_nap@@Base>:
    adec:	ldrh	r0, [r0, #30]
    adf0:	bx	lr

0000adf4 <btbb_piconet_get_bdaddr@@Base>:
    adf4:	ldrb	r1, [r0, #28]
    adf8:	ldr	r2, [r0, #24]
    adfc:	orr	r2, r2, r1, lsl #24
    ae00:	ldrh	r1, [r0, #30]
    ae04:	mov	r0, r2
    ae08:	bx	lr

0000ae0c <btbb_piconet_get_clk_offset@@Base>:
    ae0c:	movw	r1, #5648	; 0x1610
    ae10:	ldr	r0, [r0, r1]
    ae14:	bx	lr

0000ae18 <btbb_piconet_set_clk_offset@@Base>:
    ae18:	movw	r2, #5648	; 0x1610
    ae1c:	str	r1, [r0, r2]
    ae20:	bx	lr

0000ae24 <btbb_piconet_set_afh_map@@Base>:
    ae24:	push	{r4, sl, fp, lr}
    ae28:	add	fp, sp, #8
    ae2c:	mov	ip, #0
    ae30:	mov	lr, #0
    ae34:	strb	ip, [r0, #22]
    ae38:	ldrb	r2, [r1]
    ae3c:	cmp	r2, #0
    ae40:	strb	r2, [r0, #12]
    ae44:	beq	ae60 <btbb_piconet_set_afh_map@@Base+0x3c>
    ae48:	mov	lr, #0
    ae4c:	sub	r3, r2, #1
    ae50:	add	lr, lr, #1
    ae54:	and	r2, r3, r2
    ae58:	tst	r2, #255	; 0xff
    ae5c:	bne	ae4c <btbb_piconet_set_afh_map@@Base+0x28>
    ae60:	strb	lr, [r0, #22]
    ae64:	ldrb	r2, [r1, #1]
    ae68:	cmp	r2, #0
    ae6c:	strb	r2, [r0, #13]
    ae70:	beq	ae8c <btbb_piconet_set_afh_map@@Base+0x68>
    ae74:	mov	ip, #0
    ae78:	sub	r3, r2, #1
    ae7c:	add	ip, ip, #1
    ae80:	and	r2, r3, r2
    ae84:	tst	r2, #255	; 0xff
    ae88:	bne	ae78 <btbb_piconet_set_afh_map@@Base+0x54>
    ae8c:	add	ip, lr, ip
    ae90:	mov	lr, #0
    ae94:	mov	r2, #0
    ae98:	strb	ip, [r0, #22]
    ae9c:	ldrb	r3, [r1, #2]
    aea0:	cmp	r3, #0
    aea4:	strb	r3, [r0, #14]
    aea8:	beq	aec4 <btbb_piconet_set_afh_map@@Base+0xa0>
    aeac:	mov	r2, #0
    aeb0:	sub	r4, r3, #1
    aeb4:	add	r2, r2, #1
    aeb8:	and	r3, r4, r3
    aebc:	tst	r3, #255	; 0xff
    aec0:	bne	aeb0 <btbb_piconet_set_afh_map@@Base+0x8c>
    aec4:	add	r3, ip, r2
    aec8:	strb	r3, [r0, #22]
    aecc:	ldrb	r2, [r1, #3]
    aed0:	cmp	r2, #0
    aed4:	strb	r2, [r0, #15]
    aed8:	beq	aef4 <btbb_piconet_set_afh_map@@Base+0xd0>
    aedc:	mov	lr, #0
    aee0:	sub	r4, r2, #1
    aee4:	add	lr, lr, #1
    aee8:	and	r2, r4, r2
    aeec:	tst	r2, #255	; 0xff
    aef0:	bne	aee0 <btbb_piconet_set_afh_map@@Base+0xbc>
    aef4:	add	ip, r3, lr
    aef8:	mov	lr, #0
    aefc:	mov	r2, #0
    af00:	strb	ip, [r0, #22]
    af04:	ldrb	r3, [r1, #4]
    af08:	cmp	r3, #0
    af0c:	strb	r3, [r0, #16]
    af10:	beq	af2c <btbb_piconet_set_afh_map@@Base+0x108>
    af14:	mov	r2, #0
    af18:	sub	r4, r3, #1
    af1c:	add	r2, r2, #1
    af20:	and	r3, r4, r3
    af24:	tst	r3, #255	; 0xff
    af28:	bne	af18 <btbb_piconet_set_afh_map@@Base+0xf4>
    af2c:	add	r3, ip, r2
    af30:	strb	r3, [r0, #22]
    af34:	ldrb	r2, [r1, #5]
    af38:	cmp	r2, #0
    af3c:	strb	r2, [r0, #17]
    af40:	beq	af5c <btbb_piconet_set_afh_map@@Base+0x138>
    af44:	mov	lr, #0
    af48:	sub	r4, r2, #1
    af4c:	add	lr, lr, #1
    af50:	and	r2, r4, r2
    af54:	tst	r2, #255	; 0xff
    af58:	bne	af48 <btbb_piconet_set_afh_map@@Base+0x124>
    af5c:	add	ip, r3, lr
    af60:	mov	lr, #0
    af64:	mov	r2, #0
    af68:	strb	ip, [r0, #22]
    af6c:	ldrb	r3, [r1, #6]
    af70:	cmp	r3, #0
    af74:	strb	r3, [r0, #18]
    af78:	beq	af94 <btbb_piconet_set_afh_map@@Base+0x170>
    af7c:	mov	r2, #0
    af80:	sub	r4, r3, #1
    af84:	add	r2, r2, #1
    af88:	and	r3, r4, r3
    af8c:	tst	r3, #255	; 0xff
    af90:	bne	af80 <btbb_piconet_set_afh_map@@Base+0x15c>
    af94:	add	r3, ip, r2
    af98:	strb	r3, [r0, #22]
    af9c:	ldrb	r2, [r1, #7]
    afa0:	cmp	r2, #0
    afa4:	strb	r2, [r0, #19]
    afa8:	beq	afc4 <btbb_piconet_set_afh_map@@Base+0x1a0>
    afac:	mov	lr, #0
    afb0:	sub	r4, r2, #1
    afb4:	add	lr, lr, #1
    afb8:	and	r2, r4, r2
    afbc:	tst	r2, #255	; 0xff
    afc0:	bne	afb0 <btbb_piconet_set_afh_map@@Base+0x18c>
    afc4:	add	ip, r3, lr
    afc8:	mov	lr, #0
    afcc:	mov	r2, #0
    afd0:	strb	ip, [r0, #22]
    afd4:	ldrb	r3, [r1, #8]
    afd8:	cmp	r3, #0
    afdc:	strb	r3, [r0, #20]
    afe0:	beq	affc <btbb_piconet_set_afh_map@@Base+0x1d8>
    afe4:	mov	r2, #0
    afe8:	sub	r4, r3, #1
    afec:	add	r2, r2, #1
    aff0:	and	r3, r4, r3
    aff4:	tst	r3, #255	; 0xff
    aff8:	bne	afe8 <btbb_piconet_set_afh_map@@Base+0x1c4>
    affc:	add	r3, ip, r2
    b000:	strb	r3, [r0, #22]
    b004:	ldrb	r1, [r1, #9]
    b008:	cmp	r1, #0
    b00c:	strb	r1, [r0, #21]
    b010:	beq	b02c <btbb_piconet_set_afh_map@@Base+0x208>
    b014:	mov	lr, #0
    b018:	sub	r2, r1, #1
    b01c:	add	lr, lr, #1
    b020:	and	r1, r2, r1
    b024:	tst	r1, #255	; 0xff
    b028:	bne	b018 <btbb_piconet_set_afh_map@@Base+0x1f4>
    b02c:	add	r1, r3, lr
    b030:	strb	r1, [r0, #22]
    b034:	ldrb	r1, [r0, #4]
    b038:	tst	r1, #4
    b03c:	popeq	{r4, sl, fp, pc}
    b040:	pop	{r4, sl, fp, lr}
    b044:	b	b048 <get_hop_pattern@@Base>

0000b048 <get_hop_pattern@@Base>:
    b048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b04c:	add	fp, sp, #28
    b050:	sub	sp, sp, #20
    b054:	mov	r5, r0
    b058:	ldrb	r0, [r0, #28]
    b05c:	mov	r3, #128	; 0x80
    b060:	movw	r9, #63341	; 0xf76d
    b064:	movw	r7, #16653	; 0x410d
    b068:	movw	r4, #47814	; 0xbac6
    b06c:	movw	sl, #48883	; 0xbef3
    b070:	ldr	r1, [r5, #24]
    b074:	ldr	r2, [r5, #4]
    b078:	movt	r9, #7
    b07c:	movt	r7, #274	; 0x112
    b080:	movt	r4, #40777	; 0x9f49
    b084:	movt	sl, #65261	; 0xfeed
    b088:	orr	r6, r1, r0, lsl #24
    b08c:	ldrb	r0, [r5, #22]
    b090:	and	r2, r3, r2, lsr #4
    b094:	str	r6, [sp, #8]
    b098:	orr	r8, r2, r0
    b09c:	str	r8, [sp, #12]
    b0a0:	ldr	r0, [pc, #1116]	; b504 <get_hop_pattern@@Base+0x4bc>
    b0a4:	ldr	r0, [pc, r0]
    b0a8:	cmp	r0, #0
    b0ac:	beq	b1a8 <get_hop_pattern@@Base+0x160>
    b0b0:	and	r2, r6, #-16777216	; 0xff000000
    b0b4:	and	r3, r1, #16711680	; 0xff0000
    b0b8:	ldr	r0, [r0, #12]
    b0bc:	add	r2, r2, r7
    b0c0:	add	r2, r2, r3
    b0c4:	and	r3, r1, #65280	; 0xff00
    b0c8:	add	r2, r2, r3
    b0cc:	uxtab	r1, r2, r1
    b0d0:	eor	r1, r1, r9
    b0d4:	sub	r2, r4, r1
    b0d8:	sub	r3, sl, r1
    b0dc:	eor	r2, r2, r1, lsl #8
    b0e0:	sub	r3, r3, r2
    b0e4:	sub	r1, r1, r2
    b0e8:	eor	r3, r3, r2, lsr #13
    b0ec:	sub	r1, r1, r3
    b0f0:	sub	r2, r2, r3
    b0f4:	eor	r1, r1, r3, lsr #12
    b0f8:	sub	r2, r2, r1
    b0fc:	sub	r3, r3, r1
    b100:	eor	r2, r2, r1, lsl #16
    b104:	sub	r3, r3, r2
    b108:	sub	r1, r1, r2
    b10c:	eor	r3, r3, r2, lsr #5
    b110:	sub	r1, r1, r3
    b114:	sub	r2, r2, r3
    b118:	eor	r1, r1, r3, lsr #3
    b11c:	sub	r2, r2, r1
    b120:	eor	r2, r2, r1, lsl #10
    b124:	sub	r1, r3, r1
    b128:	sub	r1, r1, r2
    b12c:	eor	r1, r1, r2, lsr #15
    b130:	ldm	r0, {r2, r3}
    b134:	sub	r3, r3, #1
    b138:	and	r1, r1, r3
    b13c:	add	r1, r1, r1, lsl #1
    b140:	ldr	r1, [r2, r1, lsl #2]
    b144:	cmp	r1, #0
    b148:	ldrne	r2, [r0, #20]
    b14c:	subsne	r4, r1, r2
    b150:	beq	b1a8 <get_hop_pattern@@Base+0x160>
    b154:	b	b16c <get_hop_pattern@@Base+0x124>
    b158:	ldr	r1, [r4, #28]
    b15c:	cmp	r1, #0
    b160:	ldrne	r2, [r0, #20]
    b164:	subsne	r4, r1, r2
    b168:	beq	b1a8 <get_hop_pattern@@Base+0x160>
    b16c:	ldr	r1, [r4, #36]	; 0x24
    b170:	cmp	r1, #4
    b174:	bne	b158 <get_hop_pattern@@Base+0x110>
    b178:	ldr	r1, [r4, #32]
    b17c:	ldr	r2, [sp, #8]
    b180:	ldr	r1, [r1]
    b184:	cmp	r1, r2
    b188:	bne	b158 <get_hop_pattern@@Base+0x110>
    b18c:	ldr	r0, [pc, #892]	; b510 <get_hop_pattern@@Base+0x4c8>
    b190:	add	r0, pc, r0
    b194:	bl	464c <puts@plt>
    b198:	ldr	r0, [r4, #8]
    b19c:	str	r0, [r5, #372]	; 0x174
    b1a0:	sub	sp, fp, #28
    b1a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1a8:	mov	r0, r5
    b1ac:	bl	44e4 <gen_hop_pattern@plt>
    b1b0:	mov	r0, #48	; 0x30
    b1b4:	bl	4658 <malloc@plt>
    b1b8:	mov	r4, r0
    b1bc:	ldr	r0, [r5, #372]	; 0x174
    b1c0:	mov	r1, #0
    b1c4:	mov	r2, #4
    b1c8:	str	r1, [r4, #20]
    b1cc:	stm	r4, {r6, r8}
    b1d0:	add	r8, r4, #12
    b1d4:	str	r0, [r4, #8]
    b1d8:	str	r4, [r4, #32]
    b1dc:	str	r2, [r4, #36]	; 0x24
    b1e0:	ldr	r0, [pc, #800]	; b508 <get_hop_pattern@@Base+0x4c0>
    b1e4:	ldr	r0, [pc, r0]
    b1e8:	cmp	r0, #0
    b1ec:	beq	b210 <get_hop_pattern@@Base+0x1c8>
    b1f0:	ldr	r5, [r0, #12]!
    b1f4:	ldr	r1, [r5, #16]
    b1f8:	str	r4, [r1, #8]
    b1fc:	ldr	r2, [r5, #20]
    b200:	sub	r1, r1, r2
    b204:	str	r1, [r4, #16]
    b208:	str	r8, [r5, #16]
    b20c:	b	b294 <get_hop_pattern@@Base+0x24c>
    b210:	ldr	r0, [pc, #756]	; b50c <get_hop_pattern@@Base+0x4c4>
    b214:	str	r1, [r4, #16]
    b218:	add	r0, pc, r0
    b21c:	str	r4, [r0]
    b220:	mov	r0, #44	; 0x2c
    b224:	bl	4658 <malloc@plt>
    b228:	cmp	r0, #0
    b22c:	str	r0, [r4, #12]
    b230:	beq	b4fc <get_hop_pattern@@Base+0x4b4>
    b234:	mov	r5, r0
    b238:	vmov.i32	q8, #0	; 0x00000000
    b23c:	add	r0, r0, #12
    b240:	mov	r1, #5
    b244:	vst1.32	{d16-d17}, [r0]
    b248:	mov	r0, #32
    b24c:	stmib	r5, {r0, r1}
    b250:	add	r0, r5, #28
    b254:	vst1.32	{d16-d17}, [r0]
    b258:	mov	r0, #12
    b25c:	str	r8, [r5, #16]
    b260:	str	r0, [r5, #20]
    b264:	mov	r0, #384	; 0x180
    b268:	bl	4658 <malloc@plt>
    b26c:	cmp	r0, #0
    b270:	str	r0, [r5]
    b274:	beq	b4fc <get_hop_pattern@@Base+0x4b4>
    b278:	mov	r1, #0
    b27c:	mov	r2, #384	; 0x180
    b280:	bl	4718 <memset@plt>
    b284:	movw	r0, #8161	; 0x1fe1
    b288:	movt	r0, #40977	; 0xa011
    b28c:	str	r0, [r5, #40]	; 0x28
    b290:	mov	r0, r8
    b294:	ldr	r1, [r5, #12]
    b298:	add	r1, r1, #1
    b29c:	str	r1, [r5, #12]
    b2a0:	ldr	r5, [r0]
    b2a4:	str	r5, [r4, #12]
    b2a8:	ldrb	r6, [r4, #3]
    b2ac:	ldrb	r3, [r4, #2]
    b2b0:	ldrb	r2, [r4, #1]
    b2b4:	ldrb	r1, [r4]
    b2b8:	add	r7, r7, r6, lsl #24
    b2bc:	mov	r6, #0
    b2c0:	add	r3, r7, r3, lsl #16
    b2c4:	add	r2, r3, r2, lsl #8
    b2c8:	add	r1, r2, r1
    b2cc:	movw	r2, #47814	; 0xbac6
    b2d0:	eor	r1, r1, r9
    b2d4:	movt	r2, #40777	; 0x9f49
    b2d8:	sub	r2, r2, r1
    b2dc:	sub	r3, sl, r1
    b2e0:	eor	r2, r2, r1, lsl #8
    b2e4:	sub	r3, r3, r2
    b2e8:	sub	r1, r1, r2
    b2ec:	eor	r3, r3, r2, lsr #13
    b2f0:	sub	r1, r1, r3
    b2f4:	sub	r2, r2, r3
    b2f8:	eor	r1, r1, r3, lsr #12
    b2fc:	sub	r2, r2, r1
    b300:	sub	r3, r3, r1
    b304:	eor	r2, r2, r1, lsl #16
    b308:	sub	r3, r3, r2
    b30c:	sub	r1, r1, r2
    b310:	eor	r3, r3, r2, lsr #5
    b314:	sub	r1, r1, r3
    b318:	sub	r2, r2, r3
    b31c:	eor	r1, r1, r3, lsr #3
    b320:	sub	r2, r2, r1
    b324:	eor	r2, r2, r1, lsl #10
    b328:	sub	r1, r3, r1
    b32c:	sub	r1, r1, r2
    b330:	eor	r1, r1, r2, lsr #15
    b334:	str	r1, [r4, #40]	; 0x28
    b338:	ldr	r2, [r0]
    b33c:	ldm	r2, {r0, r2}
    b340:	sub	r2, r2, #1
    b344:	mov	r3, r0
    b348:	and	r1, r1, r2
    b34c:	add	r2, r1, r1, lsl #1
    b350:	ldr	r7, [r3, r2, lsl #2]!
    b354:	add	r0, r0, r2, lsl #2
    b358:	mov	r2, #10
    b35c:	ldr	r1, [r3, #4]
    b360:	cmp	r7, #0
    b364:	add	r1, r1, #1
    b368:	str	r1, [r3, #4]
    b36c:	str	r6, [r4, #24]
    b370:	str	r7, [r4, #28]
    b374:	strne	r8, [r7, #12]
    b378:	str	r8, [r3]
    b37c:	ldr	r0, [r0, #8]
    b380:	add	r0, r0, r0, lsl #2
    b384:	add	r0, r2, r0, lsl #1
    b388:	cmp	r1, r0
    b38c:	bcc	b4f4 <get_hop_pattern@@Base+0x4ac>
    b390:	ldr	r0, [r5, #36]	; 0x24
    b394:	cmp	r0, #1
    b398:	beq	b4f4 <get_hop_pattern@@Base+0x4ac>
    b39c:	ldr	r0, [r5, #4]
    b3a0:	str	r8, [sp]
    b3a4:	add	r0, r0, r0, lsl #1
    b3a8:	lsl	r0, r0, #3
    b3ac:	bl	4658 <malloc@plt>
    b3b0:	cmp	r0, #0
    b3b4:	beq	b4fc <get_hop_pattern@@Base+0x4b4>
    b3b8:	mov	r9, r0
    b3bc:	ldr	r0, [r5, #4]
    b3c0:	mov	r1, #0
    b3c4:	mov	sl, #0
    b3c8:	add	r0, r0, r0, lsl #1
    b3cc:	lsl	r2, r0, #3
    b3d0:	mov	r0, r9
    b3d4:	bl	4718 <memset@plt>
    b3d8:	str	sl, [r5, #28]
    b3dc:	mvn	r2, #0
    b3e0:	mov	r6, #1
    b3e4:	ldr	r0, [r5]
    b3e8:	str	r0, [sp, #4]
    b3ec:	ldmib	r5, {r0, r1, r7}
    b3f0:	add	r1, r1, #1
    b3f4:	add	r2, r2, r0, lsl #1
    b3f8:	lsr	r3, r7, r1
    b3fc:	tst	r2, r7
    b400:	addne	r3, r6, r7, lsr r1
    b404:	cmp	r0, #0
    b408:	str	r3, [r5, #24]
    b40c:	beq	b494 <get_hop_pattern@@Base+0x44c>
    b410:	mov	ip, r5
    b414:	mov	r6, #0
    b418:	mov	lr, #0
    b41c:	ldr	r4, [sp, #4]
    b420:	add	r1, lr, lr, lsl #1
    b424:	ldr	r5, [r4, r1, lsl #2]
    b428:	cmp	r5, #0
    b42c:	beq	b488 <get_hop_pattern@@Base+0x440>
    b430:	ldr	r1, [r5, #28]
    b434:	ldr	r7, [r5, #16]
    b438:	and	r1, r1, r2
    b43c:	add	r1, r1, r1, lsl #1
    b440:	add	r1, r9, r1, lsl #2
    b444:	ldr	r4, [r1, #4]
    b448:	add	r8, r4, #1
    b44c:	cmp	r8, r3
    b450:	str	r8, [r1, #4]
    b454:	addhi	r6, r6, #1
    b458:	udivhi	r4, r8, r3
    b45c:	strhi	r6, [ip, #28]
    b460:	strhi	r4, [r1, #8]
    b464:	str	sl, [r5, #12]
    b468:	ldr	r4, [r1]
    b46c:	cmp	r4, #0
    b470:	str	r4, [r5, #16]
    b474:	strne	r5, [r4, #12]
    b478:	str	r5, [r1]
    b47c:	cmp	r7, #0
    b480:	mov	r5, r7
    b484:	bne	b430 <get_hop_pattern@@Base+0x3e8>
    b488:	add	lr, lr, #1
    b48c:	cmp	lr, r0
    b490:	bne	b41c <get_hop_pattern@@Base+0x3d4>
    b494:	ldr	r0, [sp, #4]
    b498:	bl	4550 <free@plt>
    b49c:	ldr	r0, [sp]
    b4a0:	ldr	r0, [r0]
    b4a4:	str	r9, [r0]
    b4a8:	ldmib	r0, {r1, r2, r3}
    b4ac:	ldr	r7, [r0, #28]
    b4b0:	lsl	r1, r1, #1
    b4b4:	cmp	r7, r3, lsr #1
    b4b8:	str	r1, [r0, #4]
    b4bc:	add	r1, r2, #1
    b4c0:	str	r1, [r0, #8]
    b4c4:	movls	r1, #0
    b4c8:	strls	r1, [r0, #32]
    b4cc:	subls	sp, fp, #28
    b4d0:	popls	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b4d4:	ldr	r1, [r0, #32]
    b4d8:	add	r1, r1, #1
    b4dc:	cmp	r1, #2
    b4e0:	str	r1, [r0, #32]
    b4e4:	movcs	r1, #1
    b4e8:	strcs	r1, [r0, #36]	; 0x24
    b4ec:	subcs	sp, fp, #28
    b4f0:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b4f4:	sub	sp, fp, #28
    b4f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b4fc:	mvn	r0, #0
    b500:	bl	4694 <exit@plt>
    b504:	andeq	r2, r2, ip, lsr #1
    b508:	andeq	r1, r2, ip, ror #30
    b50c:	andeq	r1, r2, r8, lsr pc
    b510:	muleq	r0, r8, r9

0000b514 <btbb_piconet_get_afh_map@@Base>:
    b514:	add	r0, r0, #12
    b518:	bx	lr

0000b51c <btbb_piconet_set_channel_seen@@Base>:
    b51c:	push	{fp, lr}
    b520:	mov	fp, sp
    b524:	add	r2, r0, r1, lsr #3
    b528:	and	lr, r1, #7
    b52c:	mov	ip, #1
    b530:	mov	r1, #0
    b534:	ldrb	r3, [r2, #12]!
    b538:	tst	r3, ip, lsl lr
    b53c:	beq	b548 <btbb_piconet_set_channel_seen@@Base+0x2c>
    b540:	mov	r0, r1
    b544:	pop	{fp, pc}
    b548:	lsl	r1, ip, lr
    b54c:	orr	r1, r3, r1
    b550:	strb	r1, [r2]
    b554:	ldrb	r1, [r0, #22]
    b558:	add	r1, r1, #1
    b55c:	strb	r1, [r0, #22]
    b560:	mov	r1, #1
    b564:	mov	r0, r1
    b568:	pop	{fp, pc}

0000b56c <btbb_piconet_clear_channel_seen@@Base>:
    b56c:	push	{fp, lr}
    b570:	mov	fp, sp
    b574:	mov	lr, r0
    b578:	and	ip, r1, #7
    b57c:	mov	r0, #1
    b580:	add	r1, lr, r1, lsr #3
    b584:	ldrb	r3, [r1, #12]!
    b588:	tst	r3, r0, lsl ip
    b58c:	moveq	r0, #0
    b590:	popeq	{fp, pc}
    b594:	lsl	r2, r0, ip
    b598:	bic	r2, r3, r2
    b59c:	strb	r2, [r1]
    b5a0:	ldrb	r1, [lr, #22]
    b5a4:	sub	r1, r1, #1
    b5a8:	strb	r1, [lr, #22]
    b5ac:	pop	{fp, pc}

0000b5b0 <btbb_piconet_get_channel_seen@@Base>:
    b5b0:	mov	r2, r0
    b5b4:	mov	r0, #1
    b5b8:	cmp	r1, #78	; 0x4e
    b5bc:	bxhi	lr
    b5c0:	add	r0, r2, r1, lsr #3
    b5c4:	and	r1, r1, #7
    b5c8:	mov	r2, #1
    b5cc:	ldrb	r0, [r0, #12]
    b5d0:	and	r0, r0, r2, lsl r1
    b5d4:	cmp	r0, #0
    b5d8:	movwne	r0, #1
    b5dc:	bx	lr

0000b5e0 <precalc@@Base>:
    b5e0:	push	{r4, r5, r6, sl, fp, lr}
    b5e4:	add	fp, sp, #16
    b5e8:	movw	lr, #29865	; 0x74a9
    b5ec:	mov	r1, #0
    b5f0:	mov	r3, #79	; 0x4f
    b5f4:	mov	ip, #1
    b5f8:	mov	r2, #0
    b5fc:	movt	lr, #53092	; 0xcf64
    b600:	b	b610 <precalc@@Base+0x30>
    b604:	add	r1, r1, #1
    b608:	cmp	r1, #79	; 0x4f
    b60c:	popeq	{r4, r5, r6, sl, fp, pc}
    b610:	lsl	r4, r1, #1
    b614:	uxtb	r4, r4
    b618:	umull	r5, r6, r4, lr
    b61c:	lsr	r5, r6, #6
    b620:	mls	r4, r5, r3, r4
    b624:	ldrb	r5, [r0, #5]
    b628:	tst	r5, #8
    b62c:	bne	b638 <precalc@@Base+0x58>
    b630:	mov	r5, r1
    b634:	b	b658 <precalc@@Base+0x78>
    b638:	add	r5, r0, r4, lsr #3
    b63c:	and	r6, r4, #7
    b640:	ldrb	r5, [r5, #12]
    b644:	tst	r5, ip, lsl r6
    b648:	beq	b604 <precalc@@Base+0x24>
    b64c:	add	r6, r2, #1
    b650:	mov	r5, r2
    b654:	mov	r2, r6
    b658:	add	r5, r0, r5, lsl #2
    b65c:	str	r4, [r5, #56]	; 0x38
    b660:	b	b604 <precalc@@Base+0x24>

0000b664 <address_precalc@@Base>:
    b664:	push	{r4, r5, fp, lr}
    b668:	add	fp, sp, #8
    b66c:	ubfx	r2, r0, #19, #4
    b670:	mov	ip, #8
    b674:	mov	lr, #16
    b678:	and	r4, r0, #1
    b67c:	str	r2, [r1, #36]	; 0x24
    b680:	ubfx	r2, r0, #23, #5
    b684:	and	r3, lr, r0, asr #4
    b688:	str	r2, [r1, #44]	; 0x2c
    b68c:	ubfx	r2, r0, #10, #9
    b690:	str	r2, [r1, #52]	; 0x34
    b694:	and	r2, ip, r0, asr #3
    b698:	orr	r2, r2, r4
    b69c:	orr	r2, r2, r3
    b6a0:	mov	r3, #4
    b6a4:	and	r4, r3, r0, asr #2
    b6a8:	and	r3, r3, r0, asr #3
    b6ac:	orr	r2, r2, r4
    b6b0:	mov	r4, #2
    b6b4:	and	r5, r4, r0, asr #1
    b6b8:	orr	r2, r2, r5
    b6bc:	mov	r5, #64	; 0x40
    b6c0:	str	r2, [r1, #48]	; 0x30
    b6c4:	mov	r2, #32
    b6c8:	and	r5, r5, r0, lsr #7
    b6cc:	and	r2, r2, r0, lsr #6
    b6d0:	orr	r2, r5, r2
    b6d4:	and	r5, lr, r0, lsr #5
    b6d8:	orr	r2, r2, r5
    b6dc:	and	r5, ip, r0, asr #4
    b6e0:	orr	r2, r2, r5
    b6e4:	orr	r2, r2, r3
    b6e8:	and	r3, r4, r0, asr #2
    b6ec:	orr	r2, r2, r3
    b6f0:	mov	r3, #1
    b6f4:	and	r0, r3, r0, asr #1
    b6f8:	orr	r0, r2, r0
    b6fc:	str	r0, [r1, #40]	; 0x28
    b700:	pop	{r4, r5, fp, pc}

0000b704 <perm5@@Base>:
    b704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b708:	add	fp, sp, #28
    b70c:	sub	sp, sp, #4
    b710:	ubfx	r3, r0, #1, #1
    b714:	ubfx	r9, r0, #2, #1
    b718:	and	r7, r0, #1
    b71c:	ands	lr, r1, #16
    b720:	ubfx	ip, r0, #3, #1
    b724:	mov	r6, r9
    b728:	mov	r4, r7
    b72c:	moveq	r6, r3
    b730:	ands	r8, r1, #8
    b734:	moveq	r4, ip
    b738:	ands	r5, r1, #4
    b73c:	mov	r5, r4
    b740:	movne	r4, r6
    b744:	moveq	r5, r6
    b748:	cmp	lr, #0
    b74c:	moveq	r3, r9
    b750:	cmp	r8, #0
    b754:	and	r8, r1, #2
    b758:	ubfx	r9, r0, #4, #1
    b75c:	moveq	ip, r7
    b760:	ands	r0, r1, #1
    b764:	mov	r1, r5
    b768:	mov	r7, ip
    b76c:	str	r0, [sp]
    b770:	mov	r0, r3
    b774:	moveq	r7, r4
    b778:	cmp	r8, #0
    b77c:	moveq	r0, r9
    b780:	ands	sl, r2, #256	; 0x100
    b784:	moveq	r1, r0
    b788:	ands	r6, r2, #128	; 0x80
    b78c:	mov	lr, r1
    b790:	movne	r1, r7
    b794:	moveq	lr, r7
    b798:	cmp	sl, #0
    b79c:	mov	r6, r1
    b7a0:	moveq	r0, r5
    b7a4:	ldr	r5, [sp]
    b7a8:	mov	r7, lr
    b7ac:	cmp	r5, #0
    b7b0:	movne	ip, r4
    b7b4:	cmp	r8, #0
    b7b8:	movne	r3, r9
    b7bc:	ands	r4, r2, #64	; 0x40
    b7c0:	mov	sl, ip
    b7c4:	moveq	sl, r3
    b7c8:	moveq	r3, ip
    b7cc:	ands	ip, r2, #16
    b7d0:	moveq	r6, r3
    b7d4:	ands	r9, r2, #32
    b7d8:	mov	r4, sl
    b7dc:	moveq	r7, r0
    b7e0:	ands	r8, r2, #4
    b7e4:	moveq	r4, r7
    b7e8:	ands	r5, r2, #1
    b7ec:	mov	r5, r6
    b7f0:	moveq	r5, r4
    b7f4:	moveq	r4, r6
    b7f8:	cmp	r9, #0
    b7fc:	moveq	r0, lr
    b800:	cmp	ip, #0
    b804:	add	r4, r4, r5, lsl #1
    b808:	moveq	r3, r1
    b80c:	ands	r1, r2, #8
    b810:	mov	r6, r3
    b814:	moveq	r6, r0
    b818:	cmp	r8, #0
    b81c:	moveq	r7, sl
    b820:	ands	r2, r2, #2
    b824:	mov	r2, r6
    b828:	moveq	r2, r7
    b82c:	moveq	r7, r6
    b830:	cmp	r1, #0
    b834:	add	r2, r4, r2, lsl #2
    b838:	movne	r3, r0
    b83c:	add	r2, r2, r7, lsl #3
    b840:	add	r0, r2, r3, lsl #4
    b844:	sub	sp, fp, #28
    b848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b84c:	nop	{0}

0000b850 <perm_table_init@@Base>:
    b850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b854:	add	fp, sp, #28
    b858:	sub	sp, sp, #4
    b85c:	vpush	{d8-d15}
    b860:	sub	sp, sp, #200	; 0xc8
    b864:	bfc	sp, #0, #4
    b868:	ldr	r5, [pc, #1596]	; beac <perm_table_init@@Base+0x65c>
    b86c:	mov	r0, #0
    b870:	vmov.i32	q8, #256	; 0x00000100
    b874:	vmov.i32	q12, #16	; 0x00000010
    b878:	vmov.i32	q6, #8	; 0x00000008
    b87c:	ldr	r5, [pc, r5]
    b880:	ubfx	r1, r0, #4, #1
    b884:	and	lr, r0, #1
    b888:	mov	r9, #0
    b88c:	str	r1, [sp, #28]
    b890:	ubfx	r1, r0, #3, #1
    b894:	str	r1, [sp, #24]
    b898:	ubfx	r1, r0, #2, #1
    b89c:	str	r1, [sp, #20]
    b8a0:	ubfx	r1, r0, #1, #1
    b8a4:	str	r0, [sp, #12]
    b8a8:	str	r5, [sp, #8]
    b8ac:	str	r1, [sp, #16]
    b8b0:	ldr	r0, [sp, #24]
    b8b4:	ldr	r3, [sp, #20]
    b8b8:	ldr	r6, [sp, #16]
    b8bc:	ands	r1, r9, #8
    b8c0:	mov	r4, lr
    b8c4:	mov	r7, r0
    b8c8:	moveq	r4, r0
    b8cc:	mov	sl, r3
    b8d0:	moveq	r7, lr
    b8d4:	ands	r2, r9, #16
    b8d8:	moveq	sl, r6
    b8dc:	ands	ip, r9, #4
    b8e0:	mov	r0, r7
    b8e4:	mov	r1, sl
    b8e8:	moveq	r1, r4
    b8ec:	ands	r8, r9, #1
    b8f0:	moveq	r0, r1
    b8f4:	moveq	r1, r7
    b8f8:	cmp	ip, #0
    b8fc:	movne	sl, r4
    b900:	cmp	r2, #0
    b904:	mov	r2, r6
    b908:	moveq	r2, r3
    b90c:	ldr	r3, [sp, #28]
    b910:	ands	r7, r9, #2
    b914:	mov	r4, r2
    b918:	mov	r7, #0
    b91c:	movne	r2, r3
    b920:	moveq	r4, r3
    b924:	add	r3, pc, #100	; 0x64
    b928:	add	r6, pc, #112	; 0x70
    b92c:	vld1.64	{d2-d3}, [r6 :128]
    b930:	add	r6, pc, #120	; 0x78
    b934:	vdup.32	q10, r2
    b938:	add	r2, sp, #32
    b93c:	vld1.64	{d8-d9}, [r3 :128]
    b940:	vld1.64	{d18-d19}, [r6 :128]
    b944:	add	r6, pc, #116	; 0x74
    b948:	vst1.64	{d20-d21}, [r2 :128]
    b94c:	vdup.32	q10, r4
    b950:	add	r2, sp, #112	; 0x70
    b954:	vld1.64	{d6-d7}, [r6 :128]
    b958:	vst1.64	{d20-d21}, [r2 :128]
    b95c:	vdup.32	q10, sl
    b960:	add	r2, sp, #160	; 0xa0
    b964:	vst1.64	{d20-d21}, [r2 :128]
    b968:	vdup.32	q10, r1
    b96c:	add	r1, sp, #144	; 0x90
    b970:	vst1.64	{d20-d21}, [r1 :128]
    b974:	vdup.32	q10, r0
    b978:	add	r0, sp, #128	; 0x80
    b97c:	vst1.64	{d20-d21}, [r0 :128]
    b980:	b	b9d0 <perm_table_init@@Base+0x180>
    b984:	nop	{0}
    b988:	nop	{0}
    b98c:	nop	{0}
    b990:	andeq	r0, r0, r0
    b994:	andeq	r0, r0, r1
    b998:	andeq	r0, r0, r2
    b99c:	andeq	r0, r0, r3
    b9a0:	andeq	r0, r0, ip
    b9a4:	andeq	r0, r0, sp
    b9a8:	andeq	r0, r0, lr
    b9ac:	andeq	r0, r0, pc
    b9b0:	andeq	r0, r0, r8
    b9b4:	andeq	r0, r0, r9
    b9b8:	andeq	r0, r0, sl
    b9bc:	andeq	r0, r0, fp
    b9c0:	andeq	r0, r0, r4
    b9c4:	andeq	r0, r0, r5
    b9c8:	andeq	r0, r0, r6
    b9cc:	andeq	r0, r0, r7
    b9d0:	add	r0, sp, #176	; 0xb0
    b9d4:	vtst.32	q13, q9, q8
    b9d8:	vmov.i32	q8, #128	; 0x00000080
    b9dc:	vst1.64	{d18-d19}, [r0 :128]
    b9e0:	add	r0, sp, #64	; 0x40
    b9e4:	vtst.32	q14, q9, q8
    b9e8:	vorr	q10, q13, q13
    b9ec:	vst1.64	{d2-d3}, [r0 :128]
    b9f0:	add	r0, sp, #112	; 0x70
    b9f4:	vorr	q15, q14, q14
    b9f8:	vld1.64	{d18-d19}, [r0 :128]
    b9fc:	add	r0, sp, #160	; 0xa0
    ba00:	vld1.64	{d16-d17}, [r0 :128]
    ba04:	add	r0, sp, #128	; 0x80
    ba08:	vld1.64	{d22-d23}, [r0 :128]
    ba0c:	add	r0, sp, #176	; 0xb0
    ba10:	vbsl	q10, q8, q9
    ba14:	vbsl	q13, q9, q8
    ba18:	vmov.i32	q8, #64	; 0x00000040
    ba1c:	vbsl	q15, q10, q11
    ba20:	vbsl	q14, q11, q10
    ba24:	vld1.64	{d20-d21}, [r0 :128]
    ba28:	add	r0, sp, #176	; 0xb0
    ba2c:	vtst.32	q11, q10, q8
    ba30:	vld1.64	{d16-d17}, [r0 :128]
    ba34:	add	r0, sp, #32
    ba38:	vld1.64	{d2-d3}, [r0 :128]
    ba3c:	add	r0, sp, #144	; 0x90
    ba40:	vld1.64	{d20-d21}, [r0 :128]
    ba44:	add	r0, sp, #176	; 0xb0
    ba48:	vtst.32	q0, q8, q12
    ba4c:	vorr	q12, q11, q11
    ba50:	vmov.i32	q8, #32	; 0x00000020
    ba54:	vorr	q2, q10, q10
    ba58:	vbsl	q12, q1, q10
    ba5c:	vld1.64	{d20-d21}, [r0 :128]
    ba60:	add	r0, sp, #176	; 0xb0
    ba64:	vbsl	q11, q2, q1
    ba68:	vorr	q2, q1, q1
    ba6c:	vtst.32	q5, q10, q8
    ba70:	vld1.64	{d16-d17}, [r0 :128]
    ba74:	add	r0, sp, #64	; 0x40
    ba78:	vorr	q7, q5, q5
    ba7c:	vld1.64	{d2-d3}, [r0 :128]
    ba80:	add	r0, sp, #176	; 0xb0
    ba84:	vbsl	q5, q15, q13
    ba88:	vbsl	q7, q13, q15
    ba8c:	vld1.64	{d26-d27}, [r0 :128]
    ba90:	add	r0, sp, #176	; 0xb0
    ba94:	vtst.32	q8, q8, q6
    ba98:	vorr	q6, q0, q0
    ba9c:	vbsl	q0, q14, q12
    baa0:	vbsl	q6, q12, q14
    baa4:	vld1.64	{d28-d29}, [r0 :128]
    baa8:	vmov.i32	q12, #4	; 0x00000004
    baac:	vorr	q10, q8, q8
    bab0:	add	r0, sp, #176	; 0xb0
    bab4:	vtst.32	q12, q13, q12
    bab8:	vmov.i32	q13, #1	; 0x00000001
    babc:	vbsl	q10, q7, q6
    bac0:	vbsl	q8, q6, q7
    bac4:	vshl.s32	q10, q10, #4
    bac8:	vtst.32	q13, q14, q13
    bacc:	vorr	q14, q12, q12
    bad0:	vbsl	q12, q5, q11
    bad4:	vbsl	q14, q11, q5
    bad8:	vorr	q15, q13, q13
    badc:	vmov.i32	q11, #2	; 0x00000002
    bae0:	vbsl	q13, q0, q14
    bae4:	vbsl	q15, q14, q0
    bae8:	vadd.i32	q10, q10, q15
    baec:	vshl.s32	q13, q13, #1
    baf0:	vadd.i32	q10, q10, q13
    baf4:	vld1.64	{d26-d27}, [r0 :128]
    baf8:	add	r0, sp, #96	; 0x60
    bafc:	vtst.32	q11, q13, q11
    bb00:	vorr	q13, q11, q11
    bb04:	vbsl	q11, q12, q8
    bb08:	vbsl	q13, q8, q12
    bb0c:	vshl.s32	q8, q11, #3
    bb10:	vshl.s32	q13, q13, #2
    bb14:	vadd.i32	q10, q10, q13
    bb18:	vadd.i32	q8, q10, q8
    bb1c:	vmov.i32	q10, #128	; 0x00000080
    bb20:	vst1.64	{d16-d17}, [r0 :128]
    bb24:	add	r0, sp, #160	; 0xa0
    bb28:	vmov.i32	q8, #256	; 0x00000100
    bb2c:	vtst.32	q11, q3, q10
    bb30:	vld1.64	{d26-d27}, [r0 :128]
    bb34:	add	r0, sp, #128	; 0x80
    bb38:	vtst.32	q8, q3, q8
    bb3c:	vorr	q14, q11, q11
    bb40:	vld1.64	{d20-d21}, [r0 :128]
    bb44:	vorr	q12, q8, q8
    bb48:	add	r0, sp, #144	; 0x90
    bb4c:	vbsl	q12, q13, q9
    bb50:	vbsl	q8, q9, q13
    bb54:	vmov.i32	q9, #64	; 0x00000040
    bb58:	vtst.32	q13, q3, q9
    bb5c:	vmov.i32	q9, #16	; 0x00000010
    bb60:	vbsl	q14, q12, q10
    bb64:	vbsl	q11, q10, q12
    bb68:	vld1.64	{d20-d21}, [r0 :128]
    bb6c:	add	r0, sp, #80	; 0x50
    bb70:	vtst.32	q15, q3, q9
    bb74:	vmov.i32	q9, #32	; 0x00000020
    bb78:	vorr	q0, q13, q13
    bb7c:	vtst.32	q5, q3, q9
    bb80:	vmov.i32	q9, #8	; 0x00000008
    bb84:	vorr	q6, q15, q15
    bb88:	vorr	q7, q5, q5
    bb8c:	vbsl	q5, q14, q8
    bb90:	vtst.32	q9, q3, q9
    bb94:	vbsl	q7, q8, q14
    bb98:	vmov.i32	q8, #4	; 0x00000004
    bb9c:	vbsl	q0, q2, q10
    bba0:	vbsl	q13, q10, q2
    bba4:	vmov.i32	q10, #1	; 0x00000001
    bba8:	vorr	q12, q9, q9
    bbac:	vtst.32	q8, q3, q8
    bbb0:	vbsl	q6, q0, q11
    bbb4:	vbsl	q15, q11, q0
    bbb8:	vtst.32	q11, q3, q10
    bbbc:	vmov.i32	q10, #2	; 0x00000002
    bbc0:	vorr	q14, q8, q8
    bbc4:	vbsl	q12, q7, q6
    bbc8:	vorr	q0, q11, q11
    bbcc:	vbsl	q9, q6, q7
    bbd0:	vbsl	q8, q5, q13
    bbd4:	vbsl	q14, q13, q5
    bbd8:	vshl.s32	q12, q12, #4
    bbdc:	vbsl	q11, q15, q14
    bbe0:	vbsl	q0, q14, q15
    bbe4:	vadd.i32	q12, q12, q0
    bbe8:	vshl.s32	q11, q11, #1
    bbec:	vadd.i32	q11, q12, q11
    bbf0:	vtst.32	q12, q3, q10
    bbf4:	vorr	q13, q12, q12
    bbf8:	vbsl	q12, q8, q9
    bbfc:	vbsl	q13, q9, q8
    bc00:	vshl.s32	q8, q12, #3
    bc04:	vmov.i32	q9, #128	; 0x00000080
    bc08:	vshl.s32	q13, q13, #2
    bc0c:	vtst.32	q9, q4, q9
    bc10:	vadd.i32	q11, q11, q13
    bc14:	vorr	q15, q9, q9
    bc18:	vadd.i32	q8, q11, q8
    bc1c:	vst1.64	{d16-d17}, [r0 :128]
    bc20:	add	r0, sp, #112	; 0x70
    bc24:	vmov.i32	q8, #256	; 0x00000100
    bc28:	vld1.64	{d20-d21}, [r0 :128]
    bc2c:	add	r0, sp, #160	; 0xa0
    bc30:	vtst.32	q8, q4, q8
    bc34:	vld1.64	{d26-d27}, [r0 :128]
    bc38:	add	r0, sp, #128	; 0x80
    bc3c:	vorr	q11, q8, q8
    bc40:	vld1.64	{d24-d25}, [r0 :128]
    bc44:	add	r0, sp, #144	; 0x90
    bc48:	vbsl	q11, q13, q10
    bc4c:	vbsl	q8, q10, q13
    bc50:	vmov.i32	q10, #64	; 0x00000040
    bc54:	vtst.32	q14, q4, q10
    bc58:	vbsl	q15, q11, q12
    bc5c:	vbsl	q9, q12, q11
    bc60:	vmov.i32	q10, #16	; 0x00000010
    bc64:	vorr	q12, q2, q2
    bc68:	vld1.64	{d4-d5}, [r0 :128]
    bc6c:	add	r0, sp, #48	; 0x30
    bc70:	vtst.32	q11, q4, q10
    bc74:	vmov.i32	q10, #32	; 0x00000020
    bc78:	vorr	q0, q14, q14
    bc7c:	vtst.32	q5, q4, q10
    bc80:	vmov.i32	q10, #8	; 0x00000008
    bc84:	vorr	q6, q11, q11
    bc88:	vorr	q7, q5, q5
    bc8c:	vbsl	q5, q15, q8
    bc90:	vtst.32	q10, q4, q10
    bc94:	vbsl	q0, q12, q2
    bc98:	vbsl	q7, q8, q15
    bc9c:	vmov.i32	q8, #4	; 0x00000004
    bca0:	vbsl	q14, q2, q12
    bca4:	vorr	q13, q10, q10
    bca8:	vorr	q2, q12, q12
    bcac:	vbsl	q6, q0, q9
    bcb0:	vbsl	q11, q9, q0
    bcb4:	vmov.i32	q9, #1	; 0x00000001
    bcb8:	vtst.32	q8, q4, q8
    bcbc:	vorr	q15, q8, q8
    bcc0:	vtst.32	q9, q4, q9
    bcc4:	vbsl	q13, q7, q6
    bcc8:	vbsl	q10, q6, q7
    bccc:	vbsl	q8, q5, q14
    bcd0:	vbsl	q15, q14, q5
    bcd4:	vorr	q0, q9, q9
    bcd8:	vshl.s32	q13, q13, #4
    bcdc:	vbsl	q9, q11, q15
    bce0:	vbsl	q0, q15, q11
    bce4:	vmov.i32	q11, #2	; 0x00000002
    bce8:	vadd.i32	q13, q13, q0
    bcec:	vshl.s32	q9, q9, #1
    bcf0:	vtst.32	q11, q4, q11
    bcf4:	vadd.i32	q9, q13, q9
    bcf8:	vorr	q13, q11, q11
    bcfc:	vbsl	q11, q8, q10
    bd00:	vbsl	q13, q10, q8
    bd04:	vshl.s32	q8, q11, #3
    bd08:	vshl.s32	q13, q13, #2
    bd0c:	vadd.i32	q9, q9, q13
    bd10:	vadd.i32	q8, q9, q8
    bd14:	vmov.i32	q9, #256	; 0x00000100
    bd18:	vst1.64	{d16-d17}, [r0 :128]
    bd1c:	add	r0, sp, #112	; 0x70
    bd20:	vmov.i32	q8, #128	; 0x00000080
    bd24:	vtst.32	q9, q1, q9
    bd28:	vld1.64	{d26-d27}, [r0 :128]
    bd2c:	add	r0, sp, #160	; 0xa0
    bd30:	vtst.32	q8, q1, q8
    bd34:	vorr	q10, q9, q9
    bd38:	vld1.64	{d28-d29}, [r0 :128]
    bd3c:	add	r0, sp, #128	; 0x80
    bd40:	vorr	q11, q8, q8
    bd44:	vld1.64	{d24-d25}, [r0 :128]
    bd48:	add	r0, sp, #144	; 0x90
    bd4c:	vbsl	q10, q14, q13
    bd50:	vbsl	q9, q13, q14
    bd54:	vld1.64	{d26-d27}, [r0 :128]
    bd58:	vmov.i32	q14, #64	; 0x00000040
    bd5c:	add	r0, sp, #48	; 0x30
    bd60:	vbsl	q11, q10, q12
    bd64:	vbsl	q8, q12, q10
    bd68:	vmov.i32	q10, #8	; 0x00000008
    bd6c:	vtst.32	q15, q1, q14
    bd70:	vmov.i32	q14, #16	; 0x00000010
    bd74:	vtst.32	q12, q1, q10
    bd78:	vmov.i32	q10, #32	; 0x00000020
    bd7c:	vorr	q5, q15, q15
    bd80:	vtst.32	q0, q1, q14
    bd84:	vtst.32	q10, q1, q10
    bd88:	vorr	q6, q0, q0
    bd8c:	vorr	q14, q12, q12
    bd90:	vorr	q7, q10, q10
    bd94:	vbsl	q5, q2, q13
    bd98:	vbsl	q10, q11, q9
    bd9c:	vbsl	q15, q13, q2
    bda0:	vbsl	q7, q9, q11
    bda4:	vmov.i32	q9, #4	; 0x00000004
    bda8:	vbsl	q6, q5, q8
    bdac:	vbsl	q0, q8, q5
    bdb0:	vmov.i32	q8, #1	; 0x00000001
    bdb4:	vtst.32	q9, q1, q9
    bdb8:	vtst.32	q8, q1, q8
    bdbc:	vbsl	q14, q7, q6
    bdc0:	vbsl	q12, q6, q7
    bdc4:	vmov.i32	q6, #8	; 0x00000008
    bdc8:	vorr	q11, q9, q9
    bdcc:	vorr	q5, q8, q8
    bdd0:	vbsl	q9, q10, q15
    bdd4:	vshl.s32	q14, q14, #4
    bdd8:	vbsl	q11, q15, q10
    bddc:	vbsl	q8, q0, q11
    bde0:	vbsl	q5, q11, q0
    bde4:	vmov.i32	q11, #2	; 0x00000002
    bde8:	vtst.32	q10, q1, q11
    bdec:	vadd.i32	q14, q14, q5
    bdf0:	vshl.s32	q8, q8, #1
    bdf4:	vorr	q11, q10, q10
    bdf8:	vadd.i32	q8, q14, q8
    bdfc:	vbsl	q10, q9, q12
    be00:	vbsl	q11, q12, q9
    be04:	vshl.s32	q9, q10, #3
    be08:	vmov.i32	q12, #16	; 0x00000010
    be0c:	vshl.s32	q11, q11, #2
    be10:	vadd.i32	q4, q4, q12
    be14:	vadd.i32	q3, q3, q12
    be18:	vadd.i32	q1, q1, q12
    be1c:	vadd.i32	q8, q8, q11
    be20:	vadd.i32	q8, q8, q9
    be24:	vld1.64	{d18-d19}, [r0 :128]
    be28:	add	r0, sp, #80	; 0x50
    be2c:	vld1.64	{d20-d21}, [r0 :128]
    be30:	add	r0, sp, #96	; 0x60
    be34:	vmovn.i32	d18, q9
    be38:	vmovn.i32	d19, q10
    be3c:	vld1.64	{d20-d21}, [r0 :128]
    be40:	add	r0, sp, #176	; 0xb0
    be44:	vmovn.i32	d20, q10
    be48:	vmovn.i32	d21, q8
    be4c:	vmovn.i16	d16, q9
    be50:	vld1.64	{d18-d19}, [r0 :128]
    be54:	add	r0, r5, r7
    be58:	add	r7, r7, #16
    be5c:	vmovn.i16	d17, q10
    be60:	cmp	r7, #512	; 0x200
    be64:	vst1.8	{d16-d17}, [r0]
    be68:	vmov.i32	q8, #256	; 0x00000100
    be6c:	vadd.i32	q9, q9, q12
    be70:	bne	b9d0 <perm_table_init@@Base+0x180>
    be74:	add	r9, r9, #1
    be78:	add	r5, r5, #512	; 0x200
    be7c:	cmp	r9, #32
    be80:	bne	b8b0 <perm_table_init@@Base+0x60>
    be84:	ldr	r0, [sp, #12]
    be88:	ldr	r5, [sp, #8]
    be8c:	add	r0, r0, #1
    be90:	add	r5, r5, #16384	; 0x4000
    be94:	cmp	r0, #32
    be98:	bne	b880 <perm_table_init@@Base+0x30>
    be9c:	sub	sp, fp, #96	; 0x60
    bea0:	vpop	{d8-d15}
    bea4:	add	sp, sp, #4
    bea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    beac:	andeq	r1, r2, r8, lsr #17

0000beb0 <fast_perm@@Base>:
    beb0:	push	{r4, r5, r6, r7, fp, lr}
    beb4:	add	fp, sp, #16
    beb8:	ldr	r7, [pc, #60]	; befc <fast_perm@@Base+0x4c>
    bebc:	mov	r6, r0
    bec0:	mov	r4, r2
    bec4:	mov	r5, r1
    bec8:	ldr	r7, [pc, r7]
    becc:	ldr	r0, [r7]
    bed0:	cmp	r0, #0
    bed4:	bne	bee4 <fast_perm@@Base+0x34>
    bed8:	bl	45ec <perm_table_init@plt>
    bedc:	mov	r0, #1
    bee0:	str	r0, [r7]
    bee4:	ldr	r0, [pc, #20]	; bf00 <fast_perm@@Base+0x50>
    bee8:	ldr	r0, [pc, r0]
    beec:	add	r0, r0, r6, lsl #14
    bef0:	add	r0, r0, r5, lsl #9
    bef4:	ldrb	r0, [r0, r4]
    bef8:	pop	{r4, r5, r6, r7, fp, pc}
    befc:	andeq	r1, r2, r0, ror #4
    bf00:	andeq	r1, r2, ip, lsr r2

0000bf04 <gen_hop_pattern@@Base>:
    bf04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bf08:	add	fp, sp, #28
    bf0c:	sub	sp, sp, #68	; 0x44
    bf10:	mov	r4, r0
    bf14:	ldr	r0, [pc, #964]	; c2e0 <gen_hop_pattern@@Base+0x3dc>
    bf18:	add	r0, pc, r0
    bf1c:	bl	464c <puts@plt>
    bf20:	mov	r0, #134217728	; 0x8000000
    bf24:	bl	4658 <malloc@plt>
    bf28:	str	r0, [r4, #372]	; 0x174
    bf2c:	mov	r0, #0
    bf30:	mov	r1, #79	; 0x4f
    bf34:	mov	ip, #1
    bf38:	mov	r2, #0
    bf3c:	lsl	r3, r0, #1
    bf40:	movw	r7, #29865	; 0x74a9
    bf44:	uxtb	r3, r3
    bf48:	movt	r7, #53092	; 0xcf64
    bf4c:	umull	r7, r5, r3, r7
    bf50:	lsr	r7, r5, #6
    bf54:	mls	r7, r7, r1, r3
    bf58:	ldrb	r3, [r4, #5]
    bf5c:	tst	r3, #8
    bf60:	bne	bf6c <gen_hop_pattern@@Base+0x68>
    bf64:	mov	r3, r0
    bf68:	b	bf8c <gen_hop_pattern@@Base+0x88>
    bf6c:	add	r3, r4, r7, lsr #3
    bf70:	and	r5, r7, #7
    bf74:	ldrb	r3, [r3, #12]
    bf78:	tst	r3, ip, lsl r5
    bf7c:	beq	bf94 <gen_hop_pattern@@Base+0x90>
    bf80:	add	r6, r2, #1
    bf84:	mov	r3, r2
    bf88:	mov	r2, r6
    bf8c:	add	r3, r4, r3, lsl #2
    bf90:	str	r7, [r3, #56]	; 0x38
    bf94:	add	r0, r0, #1
    bf98:	cmp	r0, #79	; 0x4f
    bf9c:	bne	bf3c <gen_hop_pattern@@Base+0x38>
    bfa0:	ldr	r0, [r4, #24]
    bfa4:	mov	r7, #8
    bfa8:	mov	ip, #16
    bfac:	ubfx	r1, r0, #19, #4
    bfb0:	and	r5, r0, #1
    bfb4:	str	r1, [r4, #36]	; 0x24
    bfb8:	ubfx	r1, r0, #10, #9
    bfbc:	str	r1, [r4, #52]	; 0x34
    bfc0:	ldrb	r1, [r4, #28]
    bfc4:	orr	r1, r0, r1, lsl #24
    bfc8:	ubfx	r2, r1, #23, #5
    bfcc:	bic	r1, r1, #-268435456	; 0xf0000000
    bfd0:	and	r6, r7, r1, lsr #3
    bfd4:	and	r3, ip, r1, lsr #4
    bfd8:	str	r2, [r4, #44]	; 0x2c
    bfdc:	orr	r6, r6, r5
    bfe0:	orr	r3, r6, r3
    bfe4:	mov	r6, #4
    bfe8:	and	r5, r6, r1, lsr #2
    bfec:	orr	r3, r3, r5
    bff0:	mov	r5, #2
    bff4:	and	r2, r5, r1, lsr #1
    bff8:	orr	r2, r3, r2
    bffc:	mov	r3, #64	; 0x40
    c000:	str	r2, [r4, #48]	; 0x30
    c004:	mov	r2, #32
    c008:	and	r3, r3, r0, lsr #7
    c00c:	and	r2, r2, r0, lsr #6
    c010:	and	r0, ip, r0, lsr #5
    c014:	orr	r2, r3, r2
    c018:	orr	r0, r2, r0
    c01c:	and	r2, r7, r1, lsr #4
    c020:	mov	r7, #0
    c024:	orr	r0, r0, r2
    c028:	and	r2, r6, r1, lsr #3
    c02c:	mov	r6, #0
    c030:	orr	r0, r0, r2
    c034:	and	r2, r5, r1, lsr #2
    c038:	ubfx	r1, r1, #1, #1
    c03c:	orr	r0, r0, r2
    c040:	mov	r2, #0
    c044:	orr	r0, r0, r1
    c048:	mov	r1, #0
    c04c:	str	r0, [r4, #40]	; 0x28
    c050:	ldr	r3, [pc, #652]	; c2e4 <gen_hop_pattern@@Base+0x3e0>
    c054:	ldr	r3, [pc, r3]
    c058:	str	r7, [fp, #-36]	; 0xffffffdc
    c05c:	mov	r7, #0
    c060:	str	r7, [fp, #-32]	; 0xffffffe0
    c064:	mov	r7, #0
    c068:	str	r2, [sp, #4]
    c06c:	str	r6, [sp, #12]
    c070:	str	r1, [sp, #8]
    c074:	ldr	r0, [r4, #44]	; 0x2c
    c078:	str	r7, [sp, #16]
    c07c:	eor	r0, r0, r7
    c080:	mov	r7, #0
    c084:	str	r0, [sp, #40]	; 0x28
    c088:	str	r6, [sp, #24]
    c08c:	str	r1, [sp, #20]
    c090:	ldr	r0, [r4, #48]	; 0x30
    c094:	str	r7, [sp, #36]	; 0x24
    c098:	eor	r0, r0, r7
    c09c:	mov	r7, r1
    c0a0:	str	r0, [fp, #-40]	; 0xffffffd8
    c0a4:	eor	r0, r0, #31
    c0a8:	str	r0, [fp, #-44]	; 0xffffffd4
    c0ac:	str	r6, [sp, #32]
    c0b0:	str	r1, [sp, #28]
    c0b4:	mov	r1, #0
    c0b8:	str	r7, [sp, #48]	; 0x30
    c0bc:	ldr	r0, [r4, #52]	; 0x34
    c0c0:	str	r1, [sp, #44]	; 0x2c
    c0c4:	mov	r8, #0
    c0c8:	ldr	r7, [sp, #40]	; 0x28
    c0cc:	eor	r9, r0, r1
    c0d0:	asr	r0, r7, #31
    c0d4:	ldr	r1, [r4, #36]	; 0x24
    c0d8:	add	r0, r7, r0, lsr #27
    c0dc:	bic	r0, r0, #31
    c0e0:	sub	r0, r7, r0
    c0e4:	eor	r5, r0, r1
    c0e8:	ldr	r0, [r3]
    c0ec:	cmp	r0, #0
    c0f0:	bne	c108 <gen_hop_pattern@@Base+0x204>
    c0f4:	bl	45ec <perm_table_init@plt>
    c0f8:	ldr	r3, [pc, #488]	; c2e8 <gen_hop_pattern@@Base+0x3e4>
    c0fc:	mov	r0, #1
    c100:	ldr	r3, [pc, r3]
    c104:	str	r0, [r3]
    c108:	ldr	r0, [pc, #476]	; c2ec <gen_hop_pattern@@Base+0x3e8>
    c10c:	ldr	r0, [pc, r0]
    c110:	ldr	r1, [r4, #40]	; 0x28
    c114:	add	sl, r0, r5, lsl #14
    c118:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c11c:	add	r0, sl, r0, lsl #9
    c120:	ldrb	r0, [r0, r9]
    c124:	add	r0, r1, r0
    c128:	ldrb	r1, [r4, #5]
    c12c:	tst	r1, #8
    c130:	bne	c158 <gen_hop_pattern@@Base+0x254>
    c134:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c138:	add	r0, r0, r1
    c13c:	movw	r1, #29865	; 0x74a9
    c140:	movt	r1, #53092	; 0xcf64
    c144:	umull	r1, r2, r0, r1
    c148:	lsr	r1, r2, #6
    c14c:	mov	r2, #79	; 0x4f
    c150:	mls	r0, r1, r2, r0
    c154:	b	c16c <gen_hop_pattern@@Base+0x268>
    c158:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c15c:	add	r0, r0, r1
    c160:	ldrb	r1, [r4, #22]
    c164:	udiv	r2, r0, r1
    c168:	mls	r0, r2, r1, r0
    c16c:	ldr	r1, [r4, #372]	; 0x174
    c170:	add	r0, r4, r0, lsl #2
    c174:	ldr	r0, [r0, #56]	; 0x38
    c178:	add	r1, r1, r6
    c17c:	strb	r0, [r1, r8]
    c180:	ldr	r0, [r3]
    c184:	cmp	r0, #0
    c188:	bne	c1a0 <gen_hop_pattern@@Base+0x29c>
    c18c:	bl	45ec <perm_table_init@plt>
    c190:	ldr	r3, [pc, #344]	; c2f0 <gen_hop_pattern@@Base+0x3ec>
    c194:	mov	r0, #1
    c198:	ldr	r3, [pc, r3]
    c19c:	str	r0, [r3]
    c1a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c1a4:	ldr	r1, [r4, #40]	; 0x28
    c1a8:	add	r0, sl, r0, lsl #9
    c1ac:	ldrb	r0, [r0, r9]
    c1b0:	add	r0, r0, r1
    c1b4:	ldrb	r1, [r4, #5]
    c1b8:	add	r0, r0, #32
    c1bc:	tst	r1, #8
    c1c0:	bne	c1e8 <gen_hop_pattern@@Base+0x2e4>
    c1c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c1c8:	add	r0, r0, r1
    c1cc:	movw	r1, #29865	; 0x74a9
    c1d0:	movt	r1, #53092	; 0xcf64
    c1d4:	umull	r1, r2, r0, r1
    c1d8:	lsr	r1, r2, #6
    c1dc:	mov	r2, #79	; 0x4f
    c1e0:	mls	r0, r1, r2, r0
    c1e4:	b	c1fc <gen_hop_pattern@@Base+0x2f8>
    c1e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c1ec:	add	r0, r0, r1
    c1f0:	ldrb	r1, [r4, #22]
    c1f4:	udiv	r2, r0, r1
    c1f8:	mls	r0, r2, r1, r0
    c1fc:	ldr	r1, [r4, #372]	; 0x174
    c200:	add	r0, r4, r0, lsl #2
    c204:	add	r7, r7, #1
    c208:	ldr	r0, [r0, #56]	; 0x38
    c20c:	add	r1, r1, r6
    c210:	add	r1, r1, r8
    c214:	add	r8, r8, #2
    c218:	cmp	r8, #64	; 0x40
    c21c:	strb	r0, [r1, #1]
    c220:	bne	c0d0 <gen_hop_pattern@@Base+0x1cc>
    c224:	ldr	r7, [sp, #48]	; 0x30
    c228:	movw	r0, #29865	; 0x74a9
    c22c:	add	r6, r6, #64	; 0x40
    c230:	movt	r0, #53092	; 0xcf64
    c234:	add	r7, r7, #16
    c238:	umull	r0, r1, r7, r0
    c23c:	lsr	r0, r1, #6
    c240:	mov	r1, #79	; 0x4f
    c244:	mls	r2, r0, r1, r7
    c248:	ldrb	r0, [r4, #22]
    c24c:	str	r2, [fp, #-32]	; 0xffffffe0
    c250:	udiv	r1, r2, r0
    c254:	mls	r0, r1, r0, r2
    c258:	str	r0, [fp, #-36]	; 0xffffffdc
    c25c:	ldr	r1, [sp, #44]	; 0x2c
    c260:	add	r1, r1, #1
    c264:	cmp	r1, #512	; 0x200
    c268:	bne	c0b8 <gen_hop_pattern@@Base+0x1b4>
    c26c:	ldr	r7, [sp, #36]	; 0x24
    c270:	ldr	r6, [sp, #32]
    c274:	ldr	r1, [sp, #28]
    c278:	add	r7, r7, #1
    c27c:	add	r6, r6, #32768	; 0x8000
    c280:	add	r1, r1, #8192	; 0x2000
    c284:	cmp	r7, #32
    c288:	bne	c090 <gen_hop_pattern@@Base+0x18c>
    c28c:	ldr	r7, [sp, #16]
    c290:	ldr	r6, [sp, #24]
    c294:	ldr	r1, [sp, #20]
    c298:	add	r7, r7, #1
    c29c:	add	r6, r6, #1048576	; 0x100000
    c2a0:	add	r1, r1, #262144	; 0x40000
    c2a4:	cmp	r7, #32
    c2a8:	bne	c074 <gen_hop_pattern@@Base+0x170>
    c2ac:	ldr	r2, [sp, #4]
    c2b0:	ldr	r6, [sp, #12]
    c2b4:	ldr	r1, [sp, #8]
    c2b8:	add	r2, r2, #1
    c2bc:	add	r6, r6, #33554432	; 0x2000000
    c2c0:	add	r1, r1, #8388608	; 0x800000
    c2c4:	cmp	r2, #4
    c2c8:	bne	c064 <gen_hop_pattern@@Base+0x160>
    c2cc:	ldr	r0, [pc, #32]	; c2f4 <gen_hop_pattern@@Base+0x3f0>
    c2d0:	add	r0, pc, r0
    c2d4:	sub	sp, fp, #28
    c2d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c2dc:	b	464c <puts@plt>
    c2e0:	andeq	r9, r0, r0, asr #24
    c2e4:	ldrdeq	r1, [r2], -r4
    c2e8:	andeq	r1, r2, r8, lsr #32
    c2ec:	andeq	r1, r2, r8, lsl r0
    c2f0:	muleq	r2, r0, pc	; <UNPREDICTABLE>
    c2f4:			; <UNDEFINED> instruction: 0x000098b8

0000c2f8 <single_hop@@Base>:
    c2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c2fc:	add	fp, sp, #28
    c300:	sub	sp, sp, #4
    c304:	mov	r4, r1
    c308:	mov	r5, r0
    c30c:	ldr	r0, [r1, #36]	; 0x24
    c310:	ldr	r1, [r1, #44]	; 0x2c
    c314:	movw	ip, #65520	; 0xfff0
    c318:	ldr	r2, [r4, #48]	; 0x30
    c31c:	ldr	r3, [r4, #52]	; 0x34
    c320:	ubfx	r6, r5, #1, #1
    c324:	ldr	r8, [pc, #168]	; c3d4 <single_hop@@Base+0xdc>
    c328:	movt	ip, #511	; 0x1ff
    c32c:	rsb	r7, r6, r6, lsl #5
    c330:	eor	r1, r1, r5, lsr #21
    c334:	ldr	r8, [pc, r8]
    c338:	add	r1, r1, r5, lsr #2
    c33c:	eor	r2, r2, r5, lsr #16
    c340:	and	r1, r1, #31
    c344:	and	r2, r2, #31
    c348:	eor	sl, r1, r0
    c34c:	eor	r9, r2, r7
    c350:	eor	r7, r3, r5, lsr #7
    c354:	bfc	r7, #9, #23
    c358:	ldr	r0, [r8]
    c35c:	cmp	r0, #0
    c360:	bne	c378 <single_hop@@Base+0x80>
    c364:	bl	45ec <perm_table_init@plt>
    c368:	movw	ip, #65520	; 0xfff0
    c36c:	mov	r0, #1
    c370:	movt	ip, #511	; 0x1ff
    c374:	str	r0, [r8]
    c378:	ldr	r2, [pc, #88]	; c3d8 <single_hop@@Base+0xe0>
    c37c:	and	r1, ip, r5, lsr #3
    c380:	lsl	r0, r6, #5
    c384:	ldr	r2, [pc, r2]
    c388:	add	r2, r2, sl, lsl #14
    c38c:	add	r2, r2, r9, lsl #9
    c390:	ldrb	r3, [r2, r7]
    c394:	ldrb	r7, [r4, #5]
    c398:	mov	r2, #79	; 0x4f
    c39c:	tst	r7, #8
    c3a0:	add	r0, r0, r3
    c3a4:	ldrbne	r2, [r4, #22]
    c3a8:	udiv	r7, r1, r2
    c3ac:	mls	r1, r7, r2, r1
    c3b0:	add	r0, r0, r1
    c3b4:	ldr	r1, [r4, #40]	; 0x28
    c3b8:	add	r0, r0, r1
    c3bc:	udiv	r1, r0, r2
    c3c0:	mls	r0, r1, r2, r0
    c3c4:	add	r0, r4, r0, lsl #2
    c3c8:	ldrb	r0, [r0, #56]	; 0x38
    c3cc:	sub	sp, fp, #28
    c3d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3d4:	strdeq	r0, [r2], -r4
    c3d8:	andeq	r0, r2, r0, lsr #27

0000c3dc <hop@@Base>:
    c3dc:	ldr	r1, [r1, #372]	; 0x174
    c3e0:	ldrb	r0, [r1, r0]
    c3e4:	bx	lr

0000c3e8 <btbb_init_hop_reversal@@Base>:
    c3e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c3ec:	add	fp, sp, #28
    c3f0:	sub	sp, sp, #4
    c3f4:	mov	r8, r0
    c3f8:	mov	r0, r1
    c3fc:	mov	sl, r1
    c400:	bl	4640 <get_hop_pattern@plt>
    c404:	movw	r0, #15728	; 0x3d70
    c408:	cmp	r8, #0
    c40c:	movt	r0, #10
    c410:	movweq	r0, #15760	; 0x3d90
    c414:	movteq	r0, #3
    c418:	bl	4658 <malloc@plt>
    c41c:	str	r0, [sl, #32]
    c420:	movw	r1, #5648	; 0x1610
    c424:	movw	r2, #5652	; 0x1614
    c428:	movw	r9, #65472	; 0xffc0
    c42c:	movw	ip, #34079	; 0x851f
    c430:	mov	lr, #25
    c434:	ldr	r1, [sl, r1]
    c438:	ldr	r2, [sl, r2]
    c43c:	ldr	r5, [sl, #372]	; 0x174
    c440:	movt	r9, #2047	; 0x7ff
    c444:	movt	ip, #20971	; 0x51eb
    c448:	add	r1, r2, r1
    c44c:	and	r3, r1, #63	; 0x3f
    c450:	movw	r1, #4648	; 0x1228
    c454:	ldrb	r2, [sl, r1]
    c458:	mov	r1, #0
    c45c:	ldr	r6, [sl, #8]
    c460:	ldrb	r7, [r5, r3]
    c464:	cmp	r6, #0
    c468:	addne	r6, r7, #24
    c46c:	umullne	r7, r4, r6, ip
    c470:	lsrne	r4, r4, #3
    c474:	mlsne	r4, r4, lr, r6
    c478:	addne	r7, r4, #26
    c47c:	uxtb	r4, r7
    c480:	cmp	r4, r2
    c484:	add	r4, r3, #64	; 0x40
    c488:	streq	r3, [r0, r1, lsl #2]
    c48c:	addeq	r1, r1, #1
    c490:	cmp	r3, r9
    c494:	mov	r3, r4
    c498:	bcc	c45c <btbb_init_hop_reversal@@Base+0x74>
    c49c:	mov	r0, #0
    c4a0:	movw	r3, #56799	; 0xdddf
    c4a4:	cmp	r8, #0
    c4a8:	str	r0, [sl, #388]	; 0x184
    c4ac:	str	r1, [sl, #376]	; 0x178
    c4b0:	mov	r0, #8704	; 0x2200
    c4b4:	movt	r3, #65535	; 0xffff
    c4b8:	ldr	r2, [sl, #4]
    c4bc:	movweq	r0, #512	; 0x200
    c4c0:	and	r2, r2, r3
    c4c4:	orr	r0, r2, r0
    c4c8:	str	r0, [sl, #4]
    c4cc:	ldr	r0, [pc, #16]	; c4e4 <btbb_init_hop_reversal@@Base+0xfc>
    c4d0:	add	r0, pc, r0
    c4d4:	bl	4508 <printf@plt>
    c4d8:	ldr	r0, [sl, #376]	; 0x178
    c4dc:	sub	sp, fp, #28
    c4e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c4e4:	andeq	r9, r0, ip, asr #10

0000c4e8 <try_hop@@Base>:
    c4e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4ec:	add	fp, sp, #28
    c4f0:	sub	sp, sp, #4
    c4f4:	ldrb	r7, [r1, #28]
    c4f8:	mov	r4, r1
    c4fc:	mov	r5, r0
    c500:	bl	4628 <btbb_decode@plt>
    c504:	ldr	r6, [r4, #4]
    c508:	tst	r6, #512	; 0x200
    c50c:	bne	c610 <try_hop@@Base+0x128>
    c510:	mov	r0, r5
    c514:	mov	r1, r4
    c518:	bl	4580 <btbb_uap_from_header@plt>
    c51c:	tst	r6, #16
    c520:	bne	c660 <try_hop@@Base+0x178>
    c524:	cmp	r0, #0
    c528:	beq	c68c <try_hop@@Base+0x1a4>
    c52c:	ldrb	r0, [r4, #28]
    c530:	cmp	r7, r0
    c534:	bne	c6a8 <try_hop@@Base+0x1c0>
    c538:	mov	r0, r4
    c53c:	str	r7, [sp]
    c540:	bl	4640 <get_hop_pattern@plt>
    c544:	movw	r0, #15760	; 0x3d90
    c548:	movt	r0, #3
    c54c:	bl	4658 <malloc@plt>
    c550:	str	r0, [r4, #32]
    c554:	movw	r1, #5648	; 0x1610
    c558:	movw	r2, #5652	; 0x1614
    c55c:	movw	r9, #65472	; 0xffc0
    c560:	movw	ip, #34079	; 0x851f
    c564:	mov	lr, #25
    c568:	ldr	r1, [r4, r1]
    c56c:	ldr	r2, [r4, r2]
    c570:	ldr	r5, [r4, #8]
    c574:	ldr	r6, [r4, #372]	; 0x174
    c578:	movt	r9, #2047	; 0x7ff
    c57c:	movt	ip, #20971	; 0x51eb
    c580:	add	r1, r2, r1
    c584:	and	r3, r1, #63	; 0x3f
    c588:	movw	r1, #4648	; 0x1228
    c58c:	ldrb	sl, [r4, r1]
    c590:	mov	r1, #0
    c594:	ldrb	r7, [r6, r3]
    c598:	cmp	r5, #0
    c59c:	addne	r7, r7, #24
    c5a0:	umullne	r2, r8, r7, ip
    c5a4:	lsrne	r2, r8, #3
    c5a8:	mlsne	r2, r2, lr, r7
    c5ac:	addne	r7, r2, #26
    c5b0:	uxtb	r2, r7
    c5b4:	cmp	r2, sl
    c5b8:	add	r2, r3, #64	; 0x40
    c5bc:	streq	r3, [r0, r1, lsl #2]
    c5c0:	addeq	r1, r1, #1
    c5c4:	cmp	r3, r9
    c5c8:	mov	r3, r2
    c5cc:	bcc	c594 <try_hop@@Base+0xac>
    c5d0:	mov	r0, #0
    c5d4:	movw	r2, #56799	; 0xdddf
    c5d8:	str	r0, [r4, #388]	; 0x184
    c5dc:	str	r1, [r4, #376]	; 0x178
    c5e0:	movt	r2, #65535	; 0xffff
    c5e4:	ldr	r0, [r4, #4]
    c5e8:	and	r0, r0, r2
    c5ec:	orr	r0, r0, #512	; 0x200
    c5f0:	str	r0, [r4, #4]
    c5f4:	ldr	r0, [pc, #196]	; c6c0 <try_hop@@Base+0x1d8>
    c5f8:	add	r0, pc, r0
    c5fc:	bl	4508 <printf@plt>
    c600:	mov	r0, r4
    c604:	bl	4634 <btbb_winnow@plt>
    c608:	ldr	r7, [sp]
    c60c:	b	c68c <try_hop@@Base+0x1a4>
    c610:	movw	r1, #5652	; 0x1614
    c614:	ldr	r0, [r4, #380]	; 0x17c
    c618:	ldr	r2, [r5, #2816]	; 0xb00
    c61c:	ldr	r1, [r4, r1]
    c620:	add	r0, r4, r0, lsl #2
    c624:	sub	r1, r2, r1
    c628:	movw	r2, #4648	; 0x1228
    c62c:	str	r1, [r0, #648]	; 0x288
    c630:	ldr	r0, [r4, #380]	; 0x17c
    c634:	ldrb	r1, [r5, #8]
    c638:	add	r0, r4, r0
    c63c:	strb	r1, [r0, r2]
    c640:	ldr	r0, [r4, #380]	; 0x17c
    c644:	ldr	r1, [r4, #384]	; 0x180
    c648:	add	r0, r0, #1
    c64c:	add	r1, r1, #1
    c650:	str	r0, [r4, #380]	; 0x17c
    c654:	mov	r0, r4
    c658:	str	r1, [r4, #384]	; 0x180
    c65c:	bl	4634 <btbb_winnow@plt>
    c660:	ldrb	r0, [r4, #4]
    c664:	tst	r0, #32
    c668:	beq	c68c <try_hop@@Base+0x1a4>
    c66c:	ldr	r0, [pc, #68]	; c6b8 <try_hop@@Base+0x1d0>
    c670:	add	r0, pc, r0
    c674:	bl	464c <puts@plt>
    c678:	movw	r0, #5648	; 0x1610
    c67c:	ldr	r1, [r4, r0]
    c680:	ldr	r0, [pc, #52]	; c6bc <try_hop@@Base+0x1d4>
    c684:	add	r0, pc, r0
    c688:	bl	4508 <printf@plt>
    c68c:	ldr	r0, [r4, #4]
    c690:	tst	r0, #4
    c694:	orreq	r0, r0, #4
    c698:	strbeq	r7, [r4, #28]
    c69c:	streq	r0, [r4, #4]
    c6a0:	sub	sp, fp, #28
    c6a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c6a8:	ldr	r0, [pc, #20]	; c6c4 <try_hop@@Base+0x1dc>
    c6ac:	add	r0, pc, r0
    c6b0:	bl	464c <puts@plt>
    c6b4:	b	c68c <try_hop@@Base+0x1a4>
    c6b8:	muleq	r0, pc, r4	; <UNPREDICTABLE>
    c6bc:			; <UNDEFINED> instruction: 0x000093b7
    c6c0:	andeq	r9, r0, r4, lsr #8
    c6c4:	strdeq	r9, [r0], -ip

0000c6c8 <btbb_winnow@@Base>:
    c6c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6cc:	add	fp, sp, #28
    c6d0:	sub	sp, sp, #4
    c6d4:	mov	r9, r0
    c6d8:	ldr	r1, [r0, #376]	; 0x178
    c6dc:	ldr	r2, [r0, #380]	; 0x17c
    c6e0:	ldr	r0, [r0, #388]	; 0x184
    c6e4:	cmp	r0, r2
    c6e8:	bge	c864 <btbb_winnow@@Base+0x19c>
    c6ec:	cmp	r1, #1
    c6f0:	blt	c80c <btbb_winnow@@Base+0x144>
    c6f4:	mov	r8, #25
    c6f8:	add	r2, r9, r0
    c6fc:	movw	r3, #4648	; 0x1228
    c700:	add	r0, r9, r0, lsl #2
    c704:	ldr	r5, [r9, #372]	; 0x174
    c708:	mov	r6, #0
    c70c:	mov	r7, #0
    c710:	ldrb	lr, [r2, r3]
    c714:	ldr	ip, [r0, #648]	; 0x288
    c718:	ldr	r3, [r9, #32]
    c71c:	ldr	r4, [r3, r7, lsl #2]
    c720:	ldr	r2, [r9, #8]
    c724:	add	r0, r4, ip
    c728:	cmp	r2, #0
    c72c:	bic	r0, r0, #-134217728	; 0xf8000000
    c730:	ldrb	r0, [r5, r0]
    c734:	beq	c754 <btbb_winnow@@Base+0x8c>
    c738:	movw	r2, #34079	; 0x851f
    c73c:	add	r0, r0, #24
    c740:	movt	r2, #20971	; 0x51eb
    c744:	umull	r2, sl, r0, r2
    c748:	lsr	r2, sl, #3
    c74c:	mls	r0, r2, r8, r0
    c750:	add	r0, r0, #26
    c754:	uxtb	r0, r0
    c758:	add	r7, r7, #1
    c75c:	cmp	r0, lr
    c760:	streq	r4, [r3, r6, lsl #2]
    c764:	addeq	r6, r6, #1
    c768:	ldreq	r1, [r9, #376]	; 0x178
    c76c:	cmp	r7, r1
    c770:	blt	c71c <btbb_winnow@@Base+0x54>
    c774:	cmp	r6, #0
    c778:	str	r6, [r9, #376]	; 0x178
    c77c:	beq	c814 <btbb_winnow@@Base+0x14c>
    c780:	cmp	r6, #1
    c784:	beq	c874 <btbb_winnow@@Base+0x1ac>
    c788:	cmp	r6, #2
    c78c:	blt	c858 <btbb_winnow@@Base+0x190>
    c790:	ldr	r1, [r9, #380]	; 0x17c
    c794:	cmp	r1, #1
    c798:	blt	c7ec <btbb_winnow@@Base+0x124>
    c79c:	ldr	r0, [r9, #388]	; 0x184
    c7a0:	movw	r3, #4648	; 0x1228
    c7a4:	sub	r0, r0, #1
    c7a8:	add	r2, r9, r0
    c7ac:	ldrb	r2, [r2, r3]
    c7b0:	cmp	lr, r2
    c7b4:	bne	c7ec <btbb_winnow@@Base+0x124>
    c7b8:	add	r0, r9, r0, lsl #2
    c7bc:	ldr	r0, [r0, #648]	; 0x288
    c7c0:	add	r0, r0, #1
    c7c4:	cmp	ip, r0
    c7c8:	ldreq	r0, [r9, #4]
    c7cc:	andseq	r2, r0, #4096	; 0x1000
    c7d0:	bne	c7ec <btbb_winnow@@Base+0x124>
    c7d4:	orr	r0, r0, #4096	; 0x1000
    c7d8:	str	r0, [r9, #4]
    c7dc:	ldr	r0, [pc, #220]	; c8c0 <btbb_winnow@@Base+0x1f8>
    c7e0:	add	r0, pc, r0
    c7e4:	bl	464c <puts@plt>
    c7e8:	ldr	r1, [r9, #380]	; 0x17c
    c7ec:	ldr	r0, [r9, #388]	; 0x184
    c7f0:	add	r0, r0, #1
    c7f4:	cmp	r0, r1
    c7f8:	str	r0, [r9, #388]	; 0x184
    c7fc:	bge	c858 <btbb_winnow@@Base+0x190>
    c800:	ldr	r1, [r9, #376]	; 0x178
    c804:	cmp	r1, #0
    c808:	bgt	c6f8 <btbb_winnow@@Base+0x30>
    c80c:	mov	r0, #0
    c810:	str	r0, [r9, #376]	; 0x178
    c814:	ldr	r0, [r9, #4]
    c818:	tst	r0, #512	; 0x200
    c81c:	beq	c834 <btbb_winnow@@Base+0x16c>
    c820:	ldr	r0, [r9, #32]
    c824:	bl	4550 <free@plt>
    c828:	mov	r0, #0
    c82c:	str	r0, [r9, #372]	; 0x174
    c830:	ldr	r0, [r9, #4]
    c834:	movw	r1, #61899	; 0xf1cb
    c838:	mov	r2, #2048	; 0x800
    c83c:	mov	r6, #0
    c840:	movt	r1, #65535	; 0xffff
    c844:	str	r6, [r9, #380]	; 0x17c
    c848:	and	r1, r0, r1
    c84c:	and	r0, r2, r0, lsr #1
    c850:	orr	r0, r0, r1
    c854:	str	r0, [r9, #4]
    c858:	mov	r0, r6
    c85c:	sub	sp, fp, #28
    c860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c864:	mov	r6, r1
    c868:	mov	r0, r6
    c86c:	sub	sp, fp, #28
    c870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c874:	movw	r0, #5652	; 0x1614
    c878:	ldr	r1, [r3]
    c87c:	ldr	r0, [r9, r0]
    c880:	sub	r0, r1, r0
    c884:	movw	r1, #5648	; 0x1610
    c888:	lsl	r0, r0, #1
    c88c:	str	r0, [r9, r1]
    c890:	ldr	r1, [r3]
    c894:	ldr	r0, [pc, #32]	; c8bc <btbb_winnow@@Base+0x1f4>
    c898:	add	r0, pc, r0
    c89c:	bl	4508 <printf@plt>
    c8a0:	ldr	r0, [r9, #4]
    c8a4:	mov	r6, #1
    c8a8:	orr	r0, r0, #32
    c8ac:	str	r0, [r9, #4]
    c8b0:	mov	r0, r6
    c8b4:	sub	sp, fp, #28
    c8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c8bc:	andeq	r9, r0, fp, asr r2
    c8c0:	andeq	r9, r0, r8, ror #7

0000c8c4 <btbb_uap_from_header@@Base>:
    c8c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c8c8:	add	fp, sp, #28
    c8cc:	sub	sp, sp, #12
    c8d0:	mov	r5, r0
    c8d4:	ldr	r0, [r0, #2816]	; 0xb00
    c8d8:	mov	r4, r1
    c8dc:	mov	r2, #1
    c8e0:	str	r0, [sp, #8]
    c8e4:	ldrb	r0, [r1, #5]
    c8e8:	tst	r0, #4
    c8ec:	ldreq	r1, [sp, #8]
    c8f0:	movweq	r0, #5652	; 0x1614
    c8f4:	streq	r1, [r4, r0]
    c8f8:	ldrb	r0, [r5, #8]
    c8fc:	and	r1, r0, #7
    c900:	add	r0, r4, r0, lsr #3
    c904:	ldrb	r3, [r0, #12]!
    c908:	tst	r3, r2, lsl r1
    c90c:	beq	cab8 <btbb_uap_from_header@@Base+0x1f4>
    c910:	ldr	r0, [r4, #380]	; 0x17c
    c914:	cmp	r0, #1000	; 0x3e8
    c918:	bge	cadc <btbb_uap_from_header@@Base+0x218>
    c91c:	movw	r1, #5652	; 0x1614
    c920:	mov	r2, r4
    c924:	add	r0, r4, r0, lsl #2
    c928:	add	r9, r4, #392	; 0x188
    c92c:	mov	r8, #0
    c930:	mov	sl, #0
    c934:	ldr	r1, [r2, r1]!
    c938:	str	r2, [sp, #4]
    c93c:	ldr	r2, [sp, #8]
    c940:	sub	r1, r2, r1
    c944:	movw	r2, #4648	; 0x1228
    c948:	str	r1, [r0, #648]	; 0x288
    c94c:	ldr	r0, [r4, #380]	; 0x17c
    c950:	ldrb	r1, [r5, #8]
    c954:	add	r0, r4, r0
    c958:	strb	r1, [r0, r2]
    c95c:	ldr	r0, [r4, #380]	; 0x17c
    c960:	ldr	r1, [r4, #384]	; 0x180
    c964:	add	r0, r0, #1
    c968:	add	r1, r1, #1
    c96c:	str	r0, [r4, #380]	; 0x17c
    c970:	mov	r0, #0
    c974:	str	r1, [r4, #384]	; 0x180
    c978:	str	r0, [sp]
    c97c:	ldr	r0, [r9, r8, lsl #2]
    c980:	cmn	r0, #1
    c984:	bgt	c994 <btbb_uap_from_header@@Base+0xd0>
    c988:	ldr	r2, [r4, #4]
    c98c:	tst	r2, #1024	; 0x400
    c990:	bne	ca00 <btbb_uap_from_header@@Base+0x13c>
    c994:	ldr	r1, [sp, #4]
    c998:	ldr	r0, [sp, #8]
    c99c:	ldr	r1, [r1]
    c9a0:	add	r0, r0, r8
    c9a4:	sub	r0, r0, r1
    c9a8:	mov	r1, r5
    c9ac:	and	r7, r0, #63	; 0x3f
    c9b0:	mov	r0, r7
    c9b4:	bl	47e4 <try_clock@plt>
    c9b8:	ldr	r2, [r4, #4]
    c9bc:	mov	r6, r0
    c9c0:	tst	r2, #1024	; 0x400
    c9c4:	beq	ca10 <btbb_uap_from_header@@Base+0x14c>
    c9c8:	ldr	r1, [r9, r8, lsl #2]
    c9cc:	mvn	r0, #0
    c9d0:	cmp	r1, r6
    c9d4:	beq	ca10 <btbb_uap_from_header@@Base+0x14c>
    c9d8:	ands	r3, r2, #4
    c9dc:	bne	ca28 <btbb_uap_from_header@@Base+0x164>
    c9e0:	sub	r1, r0, #1
    c9e4:	cmp	r1, #2
    c9e8:	bcc	ca44 <btbb_uap_from_header@@Base+0x180>
    c9ec:	add	r0, r0, #1
    c9f0:	cmp	r0, #1
    c9f4:	bhi	cb34 <btbb_uap_from_header@@Base+0x270>
    c9f8:	mvn	r0, #0
    c9fc:	str	r0, [r9, r8, lsl #2]
    ca00:	add	r8, r8, #1
    ca04:	cmp	r8, #64	; 0x40
    ca08:	bcc	c97c <btbb_uap_from_header@@Base+0xb8>
    ca0c:	b	ca5c <btbb_uap_from_header@@Base+0x198>
    ca10:	mov	r0, r7
    ca14:	mov	r1, r5
    ca18:	bl	461c <crc_check@plt>
    ca1c:	ldr	r2, [r4, #4]
    ca20:	ands	r3, r2, #4
    ca24:	beq	c9e0 <btbb_uap_from_header@@Base+0x11c>
    ca28:	ldrb	r1, [r4, #28]
    ca2c:	cmp	r6, r1
    ca30:	mvn	r1, #0
    ca34:	movne	r0, r1
    ca38:	sub	r1, r0, #1
    ca3c:	cmp	r1, #2
    ca40:	bcs	c9ec <btbb_uap_from_header@@Base+0x128>
    ca44:	add	sl, sl, #1
    ca48:	str	r6, [r9, r8, lsl #2]
    ca4c:	str	r8, [sp]
    ca50:	add	r8, r8, #1
    ca54:	cmp	r8, #64	; 0x40
    ca58:	bcc	c97c <btbb_uap_from_header@@Base+0xb8>
    ca5c:	orr	r1, r2, #1024	; 0x400
    ca60:	cmp	sl, #0
    ca64:	str	r1, [r4, #4]
    ca68:	beq	cb88 <btbb_uap_from_header@@Base+0x2c4>
    ca6c:	mov	r0, #0
    ca70:	cmp	sl, #1
    ca74:	bne	cb2c <btbb_uap_from_header@@Base+0x268>
    ca78:	ldr	r0, [sp, #4]
    ca7c:	ldr	r5, [sp]
    ca80:	tst	r2, #4
    ca84:	ldr	r0, [r0]
    ca88:	sub	r0, r5, r0
    ca8c:	and	r1, r0, #63	; 0x3f
    ca90:	movw	r0, #5648	; 0x1610
    ca94:	str	r1, [r4, r0]
    ca98:	bne	cb94 <btbb_uap_from_header@@Base+0x2d0>
    ca9c:	add	r5, r4, r5, lsl #2
    caa0:	ldr	r2, [r4, #384]	; 0x180
    caa4:	ldr	r1, [r5, #392]!	; 0x188
    caa8:	ldr	r0, [pc, #304]	; cbe0 <btbb_uap_from_header@@Base+0x31c>
    caac:	add	r0, pc, r0
    cab0:	bl	4508 <printf@plt>
    cab4:	b	cbac <btbb_uap_from_header@@Base+0x2e8>
    cab8:	lsl	r1, r2, r1
    cabc:	orr	r1, r3, r1
    cac0:	strb	r1, [r0]
    cac4:	ldrb	r0, [r4, #22]
    cac8:	add	r0, r0, #1
    cacc:	strb	r0, [r4, #22]
    cad0:	ldr	r0, [r4, #380]	; 0x17c
    cad4:	cmp	r0, #1000	; 0x3e8
    cad8:	blt	c91c <btbb_uap_from_header@@Base+0x58>
    cadc:	ldr	r0, [pc, #240]	; cbd4 <btbb_uap_from_header@@Base+0x310>
    cae0:	add	r0, pc, r0
    cae4:	bl	464c <puts@plt>
    cae8:	ldr	r1, [r4, #4]
    caec:	tst	r1, #512	; 0x200
    caf0:	beq	cb08 <btbb_uap_from_header@@Base+0x244>
    caf4:	ldr	r0, [r4, #32]
    caf8:	bl	4550 <free@plt>
    cafc:	mov	r0, #0
    cb00:	str	r0, [r4, #372]	; 0x174
    cb04:	ldr	r1, [r4, #4]
    cb08:	movw	r2, #61899	; 0xf1cb
    cb0c:	mov	r3, #2048	; 0x800
    cb10:	mov	r0, #0
    cb14:	movt	r2, #65535	; 0xffff
    cb18:	str	r0, [r4, #380]	; 0x17c
    cb1c:	and	r2, r1, r2
    cb20:	and	r1, r3, r1, lsr #1
    cb24:	orr	r1, r1, r2
    cb28:	str	r1, [r4, #4]
    cb2c:	sub	sp, fp, #28
    cb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cb34:	ldr	r0, [sp, #4]
    cb38:	cmp	r3, #0
    cb3c:	ldr	r0, [r0]
    cb40:	sub	r0, r8, r0
    cb44:	and	r1, r0, #63	; 0x3f
    cb48:	movw	r0, #5648	; 0x1610
    cb4c:	str	r1, [r4, r0]
    cb50:	bne	cb68 <btbb_uap_from_header@@Base+0x2a4>
    cb54:	ldr	r2, [r4, #384]	; 0x180
    cb58:	ldr	r0, [pc, #120]	; cbd8 <btbb_uap_from_header@@Base+0x314>
    cb5c:	mov	r1, r6
    cb60:	add	r0, pc, r0
    cb64:	b	cb74 <btbb_uap_from_header@@Base+0x2b0>
    cb68:	ldr	r2, [r4, #384]	; 0x180
    cb6c:	ldr	r0, [pc, #104]	; cbdc <btbb_uap_from_header@@Base+0x318>
    cb70:	add	r0, pc, r0
    cb74:	bl	4508 <printf@plt>
    cb78:	mov	r0, #0
    cb7c:	strb	r6, [r4, #28]
    cb80:	str	r0, [r4, #384]	; 0x180
    cb84:	b	cbbc <btbb_uap_from_header@@Base+0x2f8>
    cb88:	tst	r2, #512	; 0x200
    cb8c:	bne	caf4 <btbb_uap_from_header@@Base+0x230>
    cb90:	b	cb08 <btbb_uap_from_header@@Base+0x244>
    cb94:	ldr	r2, [r4, #384]	; 0x180
    cb98:	ldr	r0, [pc, #68]	; cbe4 <btbb_uap_from_header@@Base+0x320>
    cb9c:	add	r0, pc, r0
    cba0:	bl	4508 <printf@plt>
    cba4:	add	r0, r4, r5, lsl #2
    cba8:	add	r5, r0, #392	; 0x188
    cbac:	ldr	r0, [r5]
    cbb0:	mov	r1, #0
    cbb4:	str	r1, [r4, #384]	; 0x180
    cbb8:	strb	r0, [r4, #28]
    cbbc:	ldr	r0, [r4, #4]
    cbc0:	orr	r0, r0, #20
    cbc4:	str	r0, [r4, #4]
    cbc8:	mov	r0, #1
    cbcc:	sub	sp, fp, #28
    cbd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cbd4:	andeq	r9, r0, r8, lsl r1
    cbd8:	andeq	r8, r0, pc, ror #29
    cbdc:	andeq	r8, r0, r6, lsl pc
    cbe0:			; <UNDEFINED> instruction: 0x00008fb0
    cbe4:	strdeq	r8, [r0], -r7

0000cbe8 <btbb_print_afh_map@@Base>:
    cbe8:	push	{r4, r5, r6, r7, fp, lr}
    cbec:	add	fp, sp, #16
    cbf0:	sub	sp, sp, #32
    cbf4:	ldrb	ip, [r0, #15]
    cbf8:	ldrb	lr, [r0, #16]
    cbfc:	ldrb	r1, [r0, #12]
    cc00:	ldrb	r2, [r0, #13]
    cc04:	ldrb	r3, [r0, #14]
    cc08:	ldrb	r4, [r0, #17]
    cc0c:	ldrb	r5, [r0, #18]
    cc10:	ldrb	r6, [r0, #19]
    cc14:	ldrb	r7, [r0, #20]
    cc18:	ldrb	r0, [r0, #21]
    cc1c:	stm	sp, {ip, lr}
    cc20:	add	ip, sp, #8
    cc24:	stm	ip, {r4, r5, r6, r7}
    cc28:	str	r0, [sp, #24]
    cc2c:	ldr	r0, [pc, #12]	; cc40 <btbb_print_afh_map@@Base+0x58>
    cc30:	add	r0, pc, r0
    cc34:	bl	4508 <printf@plt>
    cc38:	sub	sp, fp, #16
    cc3c:	pop	{r4, r5, r6, r7, fp, pc}
    cc40:	andeq	r8, r0, lr, lsl #29

0000cc44 <get_piconet@@Base>:
    cc44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc48:	add	fp, sp, #28
    cc4c:	sub	sp, sp, #20
    cc50:	str	r0, [sp, #16]
    cc54:	movw	sl, #63341	; 0xf76d
    cc58:	movw	r1, #16653	; 0x410d
    cc5c:	movw	r2, #47814	; 0xbac6
    cc60:	movw	r8, #48883	; 0xbef3
    cc64:	mov	r6, r0
    cc68:	ldr	r7, [pc, #1164]	; d0fc <get_piconet@@Base+0x4b8>
    cc6c:	movt	sl, #7
    cc70:	movt	r1, #274	; 0x112
    cc74:	movt	r2, #40777	; 0x9f49
    cc78:	movt	r8, #65261	; 0xfeed
    cc7c:	ldr	r7, [pc, r7]
    cc80:	cmp	r7, #0
    cc84:	beq	cd74 <get_piconet@@Base+0x130>
    cc88:	and	r0, r6, #-16777216	; 0xff000000
    cc8c:	add	r0, r0, r1
    cc90:	and	r1, r6, #16711680	; 0xff0000
    cc94:	add	r0, r0, r1
    cc98:	and	r1, r6, #65280	; 0xff00
    cc9c:	add	r0, r0, r1
    cca0:	uxtab	r0, r0, r6
    cca4:	eor	r0, r0, sl
    cca8:	sub	r1, r2, r0
    ccac:	sub	r2, r8, r0
    ccb0:	eor	r1, r1, r0, lsl #8
    ccb4:	sub	r2, r2, r1
    ccb8:	sub	r0, r0, r1
    ccbc:	eor	r2, r2, r1, lsr #13
    ccc0:	sub	r0, r0, r2
    ccc4:	sub	r1, r1, r2
    ccc8:	eor	r0, r0, r2, lsr #12
    cccc:	sub	r1, r1, r0
    ccd0:	sub	r2, r2, r0
    ccd4:	eor	r1, r1, r0, lsl #16
    ccd8:	sub	r2, r2, r1
    ccdc:	sub	r0, r0, r1
    cce0:	eor	r2, r2, r1, lsr #5
    cce4:	sub	r0, r0, r2
    cce8:	sub	r1, r1, r2
    ccec:	eor	r0, r0, r2, lsr #3
    ccf0:	sub	r1, r1, r0
    ccf4:	eor	r1, r1, r0, lsl #10
    ccf8:	sub	r0, r2, r0
    ccfc:	sub	r0, r0, r1
    cd00:	eor	r1, r0, r1, lsr #15
    cd04:	ldr	r0, [r7, #8]
    cd08:	ldm	r0, {r2, r3}
    cd0c:	sub	r3, r3, #1
    cd10:	and	r1, r1, r3
    cd14:	add	r1, r1, r1, lsl #1
    cd18:	ldr	r1, [r2, r1, lsl #2]
    cd1c:	cmp	r1, #0
    cd20:	ldrne	r2, [r0, #20]
    cd24:	subsne	r1, r1, r2
    cd28:	beq	cd74 <get_piconet@@Base+0x130>
    cd2c:	b	cd44 <get_piconet@@Base+0x100>
    cd30:	ldr	r1, [r1, #24]
    cd34:	cmp	r1, #0
    cd38:	ldrne	r2, [r0, #20]
    cd3c:	subsne	r1, r1, r2
    cd40:	beq	cd74 <get_piconet@@Base+0x130>
    cd44:	ldr	r2, [r1, #32]
    cd48:	cmp	r2, #4
    cd4c:	bne	cd30 <get_piconet@@Base+0xec>
    cd50:	ldr	r2, [r1, #28]
    cd54:	ldr	r3, [sp, #16]
    cd58:	ldr	r2, [r2]
    cd5c:	cmp	r2, r3
    cd60:	bne	cd30 <get_piconet@@Base+0xec>
    cd64:	ldr	r4, [r1, #4]
    cd68:	mov	r0, r4
    cd6c:	sub	sp, fp, #28
    cd70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd74:	mov	r0, #1
    cd78:	movw	r1, #5660	; 0x161c
    cd7c:	mov	r5, #1
    cd80:	bl	44cc <calloc@plt>
    cd84:	mov	r4, r0
    cd88:	str	r6, [r0, #24]
    cd8c:	mov	r0, #8
    cd90:	str	r5, [r4]
    cd94:	str	r0, [r4, #4]
    cd98:	mov	r0, #40	; 0x28
    cd9c:	bl	4658 <malloc@plt>
    cda0:	mov	r5, r0
    cda4:	str	r6, [r0]
    cda8:	str	r4, [r0, #4]
    cdac:	mov	r0, #0
    cdb0:	mov	r1, #4
    cdb4:	cmp	r7, #0
    cdb8:	add	r9, r5, #8
    cdbc:	str	r0, [r5, #16]
    cdc0:	str	r5, [r5, #28]
    cdc4:	str	r1, [r5, #32]
    cdc8:	beq	cdec <get_piconet@@Base+0x1a8>
    cdcc:	ldr	r6, [r7, #8]!
    cdd0:	ldr	r0, [r6, #16]
    cdd4:	str	r5, [r0, #8]
    cdd8:	ldr	r1, [r6, #20]
    cddc:	sub	r0, r0, r1
    cde0:	str	r0, [r5, #12]
    cde4:	str	r9, [r6, #16]
    cde8:	b	ce70 <get_piconet@@Base+0x22c>
    cdec:	ldr	r1, [pc, #780]	; d100 <get_piconet@@Base+0x4bc>
    cdf0:	str	r0, [r5, #12]
    cdf4:	mov	r0, #44	; 0x2c
    cdf8:	add	r1, pc, r1
    cdfc:	str	r5, [r1]
    ce00:	bl	4658 <malloc@plt>
    ce04:	cmp	r0, #0
    ce08:	str	r0, [r5, #8]
    ce0c:	beq	d0f4 <get_piconet@@Base+0x4b0>
    ce10:	mov	r6, r0
    ce14:	vmov.i32	q8, #0	; 0x00000000
    ce18:	add	r0, r0, #12
    ce1c:	mov	r1, #5
    ce20:	vst1.32	{d16-d17}, [r0]
    ce24:	mov	r0, #32
    ce28:	stmib	r6, {r0, r1}
    ce2c:	add	r0, r6, #28
    ce30:	vst1.32	{d16-d17}, [r0]
    ce34:	mov	r0, #8
    ce38:	str	r9, [r6, #16]
    ce3c:	str	r0, [r6, #20]
    ce40:	mov	r0, #384	; 0x180
    ce44:	bl	4658 <malloc@plt>
    ce48:	cmp	r0, #0
    ce4c:	str	r0, [r6]
    ce50:	beq	d0f4 <get_piconet@@Base+0x4b0>
    ce54:	mov	r1, #0
    ce58:	mov	r2, #384	; 0x180
    ce5c:	bl	4718 <memset@plt>
    ce60:	movw	r0, #8161	; 0x1fe1
    ce64:	mov	r7, r9
    ce68:	movt	r0, #40977	; 0xa011
    ce6c:	str	r0, [r6, #40]	; 0x28
    ce70:	ldr	r0, [r6, #12]
    ce74:	add	r0, r0, #1
    ce78:	str	r0, [r6, #12]
    ce7c:	movw	r6, #16653	; 0x410d
    ce80:	ldr	ip, [r7]
    ce84:	movt	r6, #274	; 0x112
    ce88:	str	ip, [r5, #8]
    ce8c:	ldrb	r3, [r5, #3]
    ce90:	ldrb	r2, [r5, #2]
    ce94:	ldrb	r1, [r5, #1]
    ce98:	ldrb	r0, [r5]
    ce9c:	add	r3, r6, r3, lsl #24
    cea0:	mov	r6, #0
    cea4:	add	r2, r3, r2, lsl #16
    cea8:	add	r1, r2, r1, lsl #8
    ceac:	add	r0, r1, r0
    ceb0:	movw	r1, #47814	; 0xbac6
    ceb4:	eor	r0, r0, sl
    ceb8:	movt	r1, #40777	; 0x9f49
    cebc:	sub	r1, r1, r0
    cec0:	sub	r2, r8, r0
    cec4:	eor	r1, r1, r0, lsl #8
    cec8:	sub	r2, r2, r1
    cecc:	sub	r0, r0, r1
    ced0:	eor	r2, r2, r1, lsr #13
    ced4:	sub	r0, r0, r2
    ced8:	sub	r1, r1, r2
    cedc:	eor	r0, r0, r2, lsr #12
    cee0:	sub	r1, r1, r0
    cee4:	sub	r2, r2, r0
    cee8:	eor	r1, r1, r0, lsl #16
    ceec:	sub	r2, r2, r1
    cef0:	sub	r0, r0, r1
    cef4:	eor	r2, r2, r1, lsr #5
    cef8:	sub	r0, r0, r2
    cefc:	sub	r1, r1, r2
    cf00:	eor	r0, r0, r2, lsr #3
    cf04:	sub	r1, r1, r0
    cf08:	eor	r1, r1, r0, lsl #10
    cf0c:	sub	r0, r2, r0
    cf10:	sub	r0, r0, r1
    cf14:	eor	r1, r0, r1, lsr #15
    cf18:	str	r1, [r5, #36]	; 0x24
    cf1c:	ldr	r2, [r7]
    cf20:	ldm	r2, {r0, r2}
    cf24:	sub	r2, r2, #1
    cf28:	mov	r3, r0
    cf2c:	and	r1, r1, r2
    cf30:	add	r2, r1, r1, lsl #1
    cf34:	ldr	r7, [r3, r2, lsl #2]!
    cf38:	add	r0, r0, r2, lsl #2
    cf3c:	mov	r2, #10
    cf40:	ldr	r1, [r3, #4]
    cf44:	cmp	r7, #0
    cf48:	add	r1, r1, #1
    cf4c:	str	r1, [r3, #4]
    cf50:	str	r6, [r5, #20]
    cf54:	str	r7, [r5, #24]
    cf58:	strne	r9, [r7, #12]
    cf5c:	str	r9, [r3]
    cf60:	ldr	r0, [r0, #8]
    cf64:	add	r0, r0, r0, lsl #2
    cf68:	add	r0, r2, r0, lsl #1
    cf6c:	cmp	r1, r0
    cf70:	bcc	d0d0 <get_piconet@@Base+0x48c>
    cf74:	ldr	r0, [ip, #36]	; 0x24
    cf78:	cmp	r0, #1
    cf7c:	beq	d0d0 <get_piconet@@Base+0x48c>
    cf80:	ldr	r0, [ip, #4]
    cf84:	str	r4, [sp, #8]
    cf88:	str	r9, [sp, #4]
    cf8c:	mov	r4, ip
    cf90:	add	r0, r0, r0, lsl #1
    cf94:	lsl	r0, r0, #3
    cf98:	bl	4658 <malloc@plt>
    cf9c:	cmp	r0, #0
    cfa0:	beq	d0f4 <get_piconet@@Base+0x4b0>
    cfa4:	mov	r8, r0
    cfa8:	ldr	r0, [r4, #4]
    cfac:	mov	r1, #0
    cfb0:	mov	r9, #0
    cfb4:	add	r0, r0, r0, lsl #1
    cfb8:	lsl	r2, r0, #3
    cfbc:	mov	r0, r8
    cfc0:	bl	4718 <memset@plt>
    cfc4:	str	r9, [r4, #28]
    cfc8:	mvn	r2, #0
    cfcc:	mov	r6, #1
    cfd0:	ldr	r0, [r4]
    cfd4:	str	r0, [sp, #12]
    cfd8:	ldmib	r4, {r0, r1, r7}
    cfdc:	add	r1, r1, #1
    cfe0:	add	r2, r2, r0, lsl #1
    cfe4:	lsr	r3, r7, r1
    cfe8:	tst	r2, r7
    cfec:	addne	r3, r6, r7, lsr r1
    cff0:	cmp	r0, #0
    cff4:	str	r3, [r4, #24]
    cff8:	beq	d080 <get_piconet@@Base+0x43c>
    cffc:	mov	ip, r4
    d000:	mov	r4, #0
    d004:	mov	lr, #0
    d008:	ldr	r5, [sp, #12]
    d00c:	add	r1, lr, lr, lsl #1
    d010:	ldr	r6, [r5, r1, lsl #2]
    d014:	cmp	r6, #0
    d018:	beq	d074 <get_piconet@@Base+0x430>
    d01c:	ldr	r1, [r6, #28]
    d020:	ldr	r7, [r6, #16]
    d024:	and	r1, r1, r2
    d028:	add	r1, r1, r1, lsl #1
    d02c:	add	r1, r8, r1, lsl #2
    d030:	ldr	r5, [r1, #4]
    d034:	add	sl, r5, #1
    d038:	cmp	sl, r3
    d03c:	str	sl, [r1, #4]
    d040:	addhi	r4, r4, #1
    d044:	udivhi	r5, sl, r3
    d048:	strhi	r4, [ip, #28]
    d04c:	strhi	r5, [r1, #8]
    d050:	str	r9, [r6, #12]
    d054:	ldr	r5, [r1]
    d058:	cmp	r5, #0
    d05c:	str	r5, [r6, #16]
    d060:	strne	r6, [r5, #12]
    d064:	str	r6, [r1]
    d068:	cmp	r7, #0
    d06c:	mov	r6, r7
    d070:	bne	d01c <get_piconet@@Base+0x3d8>
    d074:	add	lr, lr, #1
    d078:	cmp	lr, r0
    d07c:	bne	d008 <get_piconet@@Base+0x3c4>
    d080:	ldr	r0, [sp, #12]
    d084:	bl	4550 <free@plt>
    d088:	ldr	r0, [sp, #4]
    d08c:	ldr	r0, [r0]
    d090:	str	r8, [r0]
    d094:	ldmib	r0, {r1, r2, r3}
    d098:	ldr	r7, [r0, #28]
    d09c:	lsl	r1, r1, #1
    d0a0:	cmp	r7, r3, lsr #1
    d0a4:	str	r1, [r0, #4]
    d0a8:	add	r1, r2, #1
    d0ac:	str	r1, [r0, #8]
    d0b0:	bls	d0dc <get_piconet@@Base+0x498>
    d0b4:	ldr	r1, [r0, #32]
    d0b8:	ldr	r4, [sp, #8]
    d0bc:	add	r1, r1, #1
    d0c0:	cmp	r1, #2
    d0c4:	str	r1, [r0, #32]
    d0c8:	movcs	r1, #1
    d0cc:	strcs	r1, [r0, #36]	; 0x24
    d0d0:	mov	r0, r4
    d0d4:	sub	sp, fp, #28
    d0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d0dc:	ldr	r4, [sp, #8]
    d0e0:	mov	r1, #0
    d0e4:	str	r1, [r0, #32]
    d0e8:	mov	r0, r4
    d0ec:	sub	sp, fp, #28
    d0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d0f4:	mvn	r0, #0
    d0f8:	bl	4694 <exit@plt>
    d0fc:	ldrdeq	r0, [r2], -r8
    d100:	andeq	r0, r2, ip, asr r3

0000d104 <btbb_next_survey_result@@Base>:
    d104:	push	{r4, sl, fp, lr}
    d108:	add	fp, sp, #8
    d10c:	ldr	r0, [pc, #48]	; d144 <btbb_next_survey_result@@Base+0x40>
    d110:	ldr	r0, [pc, r0]
    d114:	cmp	r0, #0
    d118:	moveq	r4, #0
    d11c:	moveq	r0, r4
    d120:	popeq	{r4, sl, fp, pc}
    d124:	ldr	r4, [r0, #4]
    d128:	ldr	r1, [r0, #16]
    d12c:	ldr	r2, [pc, #20]	; d148 <btbb_next_survey_result@@Base+0x44>
    d130:	add	r2, pc, r2
    d134:	str	r1, [r2]
    d138:	bl	4550 <free@plt>
    d13c:	mov	r0, r4
    d140:	pop	{r4, sl, fp, pc}
    d144:	andeq	r0, r2, r4, asr #32
    d148:	andeq	r0, r2, r4, lsr #32

0000d14c <btbb_process_packet@@Base>:
    d14c:	push	{r4, r5, r6, sl, fp, lr}
    d150:	add	fp, sp, #16
    d154:	mov	r5, r0
    d158:	ldr	r0, [pc, #408]	; d2f8 <btbb_process_packet@@Base+0x1ac>
    d15c:	add	r0, pc, r0
    d160:	ldrb	r0, [r0]
    d164:	cmp	r0, #1
    d168:	bne	d1e4 <btbb_process_packet@@Base+0x98>
    d16c:	mov	r0, r5
    d170:	bl	4748 <btbb_packet_get_lap@plt>
    d174:	bl	476c <get_piconet@plt>
    d178:	mov	r6, r0
    d17c:	ldrb	r0, [r5, #8]
    d180:	mov	r2, #1
    d184:	and	r1, r0, #7
    d188:	add	r0, r6, r0, lsr #3
    d18c:	ldrb	r3, [r0, #12]!
    d190:	tst	r3, r2, lsl r1
    d194:	bne	d1b0 <btbb_process_packet@@Base+0x64>
    d198:	lsl	r1, r2, r1
    d19c:	orr	r1, r3, r1
    d1a0:	strb	r1, [r0]
    d1a4:	ldrb	r0, [r6, #22]
    d1a8:	add	r0, r0, #1
    d1ac:	strb	r0, [r6, #22]
    d1b0:	mov	r0, r5
    d1b4:	bl	45b0 <btbb_header_present@plt>
    d1b8:	mov	r4, #0
    d1bc:	cmp	r0, #0
    d1c0:	beq	d294 <btbb_process_packet@@Base+0x148>
    d1c4:	ldrb	r0, [r6, #4]
    d1c8:	tst	r0, #4
    d1cc:	bne	d294 <btbb_process_packet@@Base+0x148>
    d1d0:	mov	r0, r5
    d1d4:	mov	r1, r6
    d1d8:	bl	4580 <btbb_uap_from_header@plt>
    d1dc:	mov	r0, r4
    d1e0:	pop	{r4, r5, r6, sl, fp, pc}
    d1e4:	mov	r6, r1
    d1e8:	mov	r4, #0
    d1ec:	cmp	r1, #0
    d1f0:	beq	d294 <btbb_process_packet@@Base+0x148>
    d1f4:	ldrb	r0, [r5, #8]
    d1f8:	mov	r2, #1
    d1fc:	and	r1, r0, #7
    d200:	add	r0, r6, r0, lsr #3
    d204:	ldrb	r3, [r0, #12]!
    d208:	tst	r3, r2, lsl r1
    d20c:	beq	d270 <btbb_process_packet@@Base+0x124>
    d210:	ldrb	r0, [r6, #4]
    d214:	tst	r0, #8
    d218:	beq	d294 <btbb_process_packet@@Base+0x148>
    d21c:	mov	r0, r5
    d220:	bl	45b0 <btbb_header_present@plt>
    d224:	cmp	r0, #0
    d228:	beq	d294 <btbb_process_packet@@Base+0x148>
    d22c:	ldrb	r0, [r6, #5]
    d230:	ldrb	r1, [r6, #28]
    d234:	tst	r0, #64	; 0x40
    d238:	bne	d29c <btbb_process_packet@@Base+0x150>
    d23c:	cmp	r1, #0
    d240:	beq	d1d0 <btbb_process_packet@@Base+0x84>
    d244:	mov	r0, r5
    d248:	mov	r1, r6
    d24c:	bl	4664 <try_hop@plt>
    d250:	ldr	r0, [r6, #4]
    d254:	and	r1, r0, #48	; 0x30
    d258:	cmp	r1, #48	; 0x30
    d25c:	orreq	r0, r0, #16384	; 0x4000
    d260:	mvneq	r4, #0
    d264:	streq	r0, [r6, #4]
    d268:	mov	r0, r4
    d26c:	pop	{r4, r5, r6, sl, fp, pc}
    d270:	lsl	r1, r2, r1
    d274:	orr	r1, r3, r1
    d278:	strb	r1, [r0]
    d27c:	ldrb	r0, [r6, #22]
    d280:	add	r0, r0, #1
    d284:	strb	r0, [r6, #22]
    d288:	ldrb	r0, [r6, #4]
    d28c:	tst	r0, #8
    d290:	bne	d21c <btbb_process_packet@@Base+0xd0>
    d294:	mov	r0, r4
    d298:	pop	{r4, r5, r6, sl, fp, pc}
    d29c:	mov	r0, r5
    d2a0:	bl	45f8 <btbb_packet_set_uap@plt>
    d2a4:	mov	r0, r5
    d2a8:	mov	r1, #4
    d2ac:	mov	r2, #1
    d2b0:	bl	4538 <btbb_packet_set_flag@plt>
    d2b4:	mov	r0, r5
    d2b8:	mov	r1, #5
    d2bc:	mov	r2, #1
    d2c0:	bl	4538 <btbb_packet_set_flag@plt>
    d2c4:	mov	r0, r5
    d2c8:	bl	4628 <btbb_decode@plt>
    d2cc:	cmp	r0, #0
    d2d0:	beq	d2e4 <btbb_process_packet@@Base+0x198>
    d2d4:	mov	r0, r5
    d2d8:	bl	47d8 <btbb_print_packet@plt>
    d2dc:	mov	r0, r4
    d2e0:	pop	{r4, r5, r6, sl, fp, pc}
    d2e4:	ldr	r0, [pc, #16]	; d2fc <btbb_process_packet@@Base+0x1b0>
    d2e8:	add	r0, pc, r0
    d2ec:	bl	464c <puts@plt>
    d2f0:	mov	r0, r4
    d2f4:	pop	{r4, r5, r6, sl, fp, pc}
    d2f8:	strdeq	pc, [r1], -r0
    d2fc:	andeq	r8, r0, r0, asr #18

0000d300 <lell_packet_new@@Base>:
    d300:	push	{r4, sl, fp, lr}
    d304:	add	fp, sp, #8
    d308:	mov	r0, #1
    d30c:	mov	r1, #104	; 0x68
    d310:	mov	r4, #1
    d314:	bl	44cc <calloc@plt>
    d318:	str	r4, [r0, #96]	; 0x60
    d31c:	pop	{r4, sl, fp, pc}

0000d320 <lell_packet_ref@@Base>:
    d320:	ldr	r1, [r0, #96]	; 0x60
    d324:	add	r1, r1, #1
    d328:	str	r1, [r0, #96]	; 0x60
    d32c:	bx	lr

0000d330 <lell_packet_unref@@Base>:
    d330:	ldr	r1, [r0, #96]	; 0x60
    d334:	subs	r1, r1, #1
    d338:	str	r1, [r0, #96]	; 0x60
    d33c:	bxne	lr
    d340:	b	4550 <free@plt>

0000d344 <lell_allocate_and_decode@@Base>:
    d344:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d348:	add	fp, sp, #24
    d34c:	mov	r5, r1
    d350:	mov	r6, r0
    d354:	mov	r0, #1
    d358:	mov	r1, #104	; 0x68
    d35c:	mov	r7, r3
    d360:	mov	r8, r2
    d364:	mov	r9, #1
    d368:	bl	44cc <calloc@plt>
    d36c:	str	r9, [r0, #96]	; 0x60
    d370:	str	r0, [r7]
    d374:	mov	r1, #48	; 0x30
    d378:	mov	r4, r0
    d37c:	add	r0, r6, #16
    d380:	add	r2, r6, #32
    d384:	vld1.8	{d16-d17}, [r6], r1
    d388:	vld1.8	{d18-d19}, [r0]
    d38c:	vld1.8	{d20-d21}, [r2]
    d390:	add	r0, r4, #16
    d394:	vld1.8	{d22-d23}, [r6]
    d398:	vst1.8	{d18-d19}, [r0]
    d39c:	add	r0, r4, #32
    d3a0:	vst1.8	{d20-d21}, [r0]
    d3a4:	mov	r0, r4
    d3a8:	vst1.8	{d16-d17}, [r0], r1
    d3ac:	mov	r1, #37	; 0x25
    d3b0:	vst1.8	{d22-d23}, [r0]
    d3b4:	movw	r0, #2402	; 0x962
    d3b8:	cmp	r5, r0
    d3bc:	beq	d414 <lell_allocate_and_decode@@Base+0xd0>
    d3c0:	movw	r1, #2425	; 0x979
    d3c4:	cmp	r5, r1
    d3c8:	bhi	d3e0 <lell_allocate_and_decode@@Base+0x9c>
    d3cc:	movw	r1, #2404	; 0x964
    d3d0:	sub	r1, r5, r1
    d3d4:	add	r1, r1, r1, lsr #31
    d3d8:	asr	r1, r1, #1
    d3dc:	b	d414 <lell_allocate_and_decode@@Base+0xd0>
    d3e0:	movw	r2, #2426	; 0x97a
    d3e4:	mov	r1, #38	; 0x26
    d3e8:	cmp	r5, r2
    d3ec:	beq	d414 <lell_allocate_and_decode@@Base+0xd0>
    d3f0:	lsr	r2, r5, #4
    d3f4:	mov	r1, #39	; 0x27
    d3f8:	cmp	r2, #154	; 0x9a
    d3fc:	bhi	d414 <lell_allocate_and_decode@@Base+0xd0>
    d400:	movw	r1, #2428	; 0x97c
    d404:	mov	r2, #11
    d408:	sub	r1, r5, r1
    d40c:	add	r1, r1, r1, lsr #31
    d410:	add	r1, r2, r1, lsr #1
    d414:	sub	r0, r5, r0
    d418:	strb	r1, [r4, #68]	; 0x44
    d41c:	str	r8, [r4, #76]	; 0x4c
    d420:	uxtb	r1, r1
    d424:	add	r0, r0, r0, lsr #31
    d428:	cmp	r1, #36	; 0x24
    d42c:	lsr	r0, r0, #1
    d430:	strb	r0, [r4, #69]	; 0x45
    d434:	ldr	r0, [r4]
    d438:	str	r0, [r4, #64]	; 0x40
    d43c:	ldrb	r2, [r4, #5]
    d440:	bls	d4c4 <lell_allocate_and_decode@@Base+0x180>
    d444:	and	r1, r2, #63	; 0x3f
    d448:	str	r1, [r4, #72]	; 0x48
    d44c:	movw	r1, #48854	; 0xbed6
    d450:	movt	r1, #36489	; 0x8e89
    d454:	subs	r2, r0, r1
    d458:	clz	r2, r2
    d45c:	lsr	r2, r2, #5
    d460:	strb	r2, [r4, #100]	; 0x64
    d464:	ldrb	r2, [r4, #4]
    d468:	and	r3, r2, #15
    d46c:	strb	r3, [r4, #80]	; 0x50
    d470:	ubfx	r3, r2, #6, #1
    d474:	lsr	r2, r2, #7
    d478:	str	r3, [r4, #84]	; 0x54
    d47c:	str	r2, [r4, #88]	; 0x58
    d480:	mov	r2, #0
    d484:	beq	d4bc <lell_allocate_and_decode@@Base+0x178>
    d488:	eors	r0, r0, r1
    d48c:	beq	d4b8 <lell_allocate_and_decode@@Base+0x174>
    d490:	mov	r1, #0
    d494:	mov	r2, r1
    d498:	sub	r1, r0, #1
    d49c:	ands	r0, r1, r0
    d4a0:	add	r1, r2, #1
    d4a4:	bne	d494 <lell_allocate_and_decode@@Base+0x150>
    d4a8:	tst	r2, #255	; 0xff
    d4ac:	moveq	r2, #1
    d4b0:	streq	r2, [r4, #92]	; 0x5c
    d4b4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    d4b8:	mov	r2, #32
    d4bc:	str	r2, [r4, #92]	; 0x5c
    d4c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d4c4:	and	r1, r2, #31
    d4c8:	str	r1, [r4, #72]	; 0x48
    d4cc:	bl	d4f8 <lell_packet_is_data@@Base+0x14>
    d4d0:	str	r0, [r4, #92]	; 0x5c
    d4d4:	clz	r0, r0
    d4d8:	lsr	r0, r0, #5
    d4dc:	strb	r0, [r4, #100]	; 0x64
    d4e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000d4e4 <lell_packet_is_data@@Base>:
    d4e4:	ldrb	r1, [r0, #68]	; 0x44
    d4e8:	mov	r0, #0
    d4ec:	cmp	r1, #37	; 0x25
    d4f0:	movwcc	r0, #1
    d4f4:	bx	lr
    d4f8:	push	{r4, r5, fp, lr}
    d4fc:	add	fp, sp, #8
    d500:	mov	ip, r0
    d504:	ldr	r0, [pc, #4048]	; e4dc <lell_packet_is_data@@Base+0xff8>
    d508:	ldr	r1, [pc, #4048]	; e4e0 <lell_packet_is_data@@Base+0xffc>
    d50c:	movw	lr, #48854	; 0xbed6
    d510:	tst	ip, #1
    d514:	uxtb	r3, ip
    d518:	ubfx	r4, ip, #8, #8
    d51c:	movt	lr, #36489	; 0x8e89
    d520:	add	r1, pc, r1
    d524:	add	r0, pc, r0
    d528:	mov	r2, r1
    d52c:	mov	r5, r1
    d530:	moveq	r2, r0
    d534:	tst	ip, #128	; 0x80
    d538:	moveq	r5, r0
    d53c:	ldrb	r2, [r2, r3]
    d540:	tst	ip, #32768	; 0x8000
    d544:	ldrb	r5, [r5, r4]
    d548:	ubfx	r4, ip, #16, #8
    d54c:	add	r2, r5, r2
    d550:	mov	r5, r1
    d554:	moveq	r5, r0
    d558:	tst	ip, #8388608	; 0x800000
    d55c:	moveq	r1, r0
    d560:	ldrb	r5, [r5, r4]
    d564:	ldrb	r0, [r1, ip, lsr #24]
    d568:	mov	r1, #0
    d56c:	add	r2, r2, r5
    d570:	eor	r5, ip, ip, lsr #8
    d574:	add	r0, r2, r0
    d578:	eor	r2, r3, ip, lsr #24
    d57c:	eor	r3, ip, ip, lsr #16
    d580:	orr	r3, r5, r3
    d584:	subs	r0, r0, #24
    d588:	uxtb	r3, r3
    d58c:	movls	r0, r1
    d590:	eors	r4, ip, lr
    d594:	orr	r2, r2, r3
    d598:	ldr	r3, [pc, #4072]	; e588 <lell_packet_is_data@@Base+0x10a4>
    d59c:	clz	r2, r2
    d5a0:	lsr	r2, r2, #5
    d5a4:	add	r3, pc, r3
    d5a8:	ldrb	r3, [r3, ip, lsr #26]
    d5ac:	beq	d5d4 <lell_packet_is_data@@Base+0xf0>
    d5b0:	mov	r1, #0
    d5b4:	mov	r5, r1
    d5b8:	sub	r1, r4, #1
    d5bc:	ands	r4, r1, r4
    d5c0:	add	r1, r5, #1
    d5c4:	bne	d5b4 <lell_packet_is_data@@Base+0xd0>
    d5c8:	uxtb	r1, r5
    d5cc:	clz	r1, r1
    d5d0:	lsr	r1, r1, #5
    d5d4:	mov	r4, #1
    d5d8:	cmp	ip, lr
    d5dc:	movweq	r4, #2
    d5e0:	add	r2, r4, r2
    d5e4:	sub	r2, r2, r3
    d5e8:	add	r0, r2, r0
    d5ec:	mov	r2, ip
    d5f0:	add	r0, r0, r1
    d5f4:	bfc	r2, #12, #20
    d5f8:	movw	r1, #2035	; 0x7f3
    d5fc:	cmp	r2, r1
    d600:	ble	d640 <lell_packet_is_data@@Base+0x15c>
    d604:	movw	r1, #3063	; 0xbf7
    d608:	cmp	r2, r1
    d60c:	ble	dc64 <lell_packet_is_data@@Base+0x780>
    d610:	cmp	r2, #3712	; 0xe80
    d614:	bge	dcd0 <lell_packet_is_data@@Base+0x7ec>
    d618:	movw	r1, #3325	; 0xcfd
    d61c:	cmp	r2, r1
    d620:	bgt	dd58 <lell_packet_is_data@@Base+0x874>
    d624:	movw	r1, #3064	; 0xbf8
    d628:	sub	r1, r2, r1
    d62c:	cmp	r1, #16
    d630:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    d634:	cmp	r2, #3200	; 0xc80
    d638:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    d63c:	b	de34 <lell_packet_is_data@@Base+0x950>
    d640:	movw	r1, #765	; 0x2fd
    d644:	cmp	r2, r1
    d648:	bgt	dc98 <lell_packet_is_data@@Base+0x7b4>
    d64c:	cmp	r2, #384	; 0x180
    d650:	bhi	dda8 <lell_packet_is_data@@Base+0x8c4>
    d654:	add	r1, pc, #4
    d658:	ldr	r2, [r1, r2, lsl #2]
    d65c:	add	pc, r1, r2
    d660:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d664:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d668:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d66c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d670:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d674:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d678:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d67c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d680:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d684:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d688:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d68c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d690:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d694:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d698:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d69c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d6e0:	ldrdeq	r0, [r0], -r4
    d6e4:	ldrdeq	r0, [r0], -r4
    d6e8:	ldrdeq	r0, [r0], -r4
    d6ec:	ldrdeq	r0, [r0], -r4
    d6f0:	ldrdeq	r0, [r0], -r4
    d6f4:	ldrdeq	r0, [r0], -r4
    d6f8:	ldrdeq	r0, [r0], -r4
    d6fc:	ldrdeq	r0, [r0], -r4
    d700:	ldrdeq	r0, [r0], -r4
    d704:	ldrdeq	r0, [r0], -r4
    d708:	ldrdeq	r0, [r0], -r4
    d70c:	ldrdeq	r0, [r0], -r4
    d710:	ldrdeq	r0, [r0], -r4
    d714:	ldrdeq	r0, [r0], -r4
    d718:	ldrdeq	r0, [r0], -r4
    d71c:	ldrdeq	r0, [r0], -r4
    d720:	ldrdeq	r0, [r0], -r4
    d724:	ldrdeq	r0, [r0], -r4
    d728:	ldrdeq	r0, [r0], -r4
    d72c:	ldrdeq	r0, [r0], -r4
    d730:	ldrdeq	r0, [r0], -r4
    d734:	ldrdeq	r0, [r0], -r4
    d738:	ldrdeq	r0, [r0], -r4
    d73c:	ldrdeq	r0, [r0], -r4
    d740:	ldrdeq	r0, [r0], -r4
    d744:	ldrdeq	r0, [r0], -r4
    d748:	ldrdeq	r0, [r0], -r4
    d74c:	ldrdeq	r0, [r0], -r4
    d750:	ldrdeq	r0, [r0], -r4
    d754:	ldrdeq	r0, [r0], -r4
    d758:	ldrdeq	r0, [r0], -r4
    d75c:	ldrdeq	r0, [r0], -r4
    d760:	ldrdeq	r0, [r0], -r4
    d764:	ldrdeq	r0, [r0], -r4
    d768:	ldrdeq	r0, [r0], -r4
    d76c:	ldrdeq	r0, [r0], -r4
    d770:	ldrdeq	r0, [r0], -r4
    d774:	ldrdeq	r0, [r0], -r4
    d778:	ldrdeq	r0, [r0], -r4
    d77c:	ldrdeq	r0, [r0], -r4
    d780:	ldrdeq	r0, [r0], -r4
    d784:	ldrdeq	r0, [r0], -r4
    d788:	ldrdeq	r0, [r0], -r4
    d78c:	ldrdeq	r0, [r0], -r4
    d790:	ldrdeq	r0, [r0], -r4
    d794:	ldrdeq	r0, [r0], -r4
    d798:	ldrdeq	r0, [r0], -r4
    d79c:	ldrdeq	r0, [r0], -r4
    d7a0:	ldrdeq	r0, [r0], -r4
    d7a4:	ldrdeq	r0, [r0], -r4
    d7a8:	ldrdeq	r0, [r0], -r4
    d7ac:	ldrdeq	r0, [r0], -r4
    d7b0:	ldrdeq	r0, [r0], -r4
    d7b4:	ldrdeq	r0, [r0], -r4
    d7b8:	ldrdeq	r0, [r0], -r4
    d7bc:	ldrdeq	r0, [r0], -r4
    d7c0:	ldrdeq	r0, [r0], -r4
    d7c4:	ldrdeq	r0, [r0], -r4
    d7c8:	ldrdeq	r0, [r0], -r4
    d7cc:	ldrdeq	r0, [r0], -r4
    d7d0:	ldrdeq	r0, [r0], -r4
    d7d4:	ldrdeq	r0, [r0], -r4
    d7d8:	ldrdeq	r0, [r0], -r4
    d7dc:	ldrdeq	r0, [r0], -r4
    d7e0:	ldrdeq	r0, [r0], -r4
    d7e4:	ldrdeq	r0, [r0], -r4
    d7e8:	ldrdeq	r0, [r0], -r4
    d7ec:	ldrdeq	r0, [r0], -r4
    d7f0:	ldrdeq	r0, [r0], -r4
    d7f4:	ldrdeq	r0, [r0], -r4
    d7f8:	ldrdeq	r0, [r0], -r4
    d7fc:	ldrdeq	r0, [r0], -r4
    d800:	ldrdeq	r0, [r0], -r4
    d804:	ldrdeq	r0, [r0], -r4
    d808:	ldrdeq	r0, [r0], -r4
    d80c:	ldrdeq	r0, [r0], -r4
    d810:	ldrdeq	r0, [r0], -r4
    d814:	ldrdeq	r0, [r0], -r4
    d818:	ldrdeq	r0, [r0], -r4
    d81c:	ldrdeq	r0, [r0], -r4
    d820:	ldrdeq	r0, [r0], -r4
    d824:	ldrdeq	r0, [r0], -r4
    d828:	ldrdeq	r0, [r0], -r4
    d82c:	ldrdeq	r0, [r0], -r4
    d830:	ldrdeq	r0, [r0], -r4
    d834:	ldrdeq	r0, [r0], -r4
    d838:	ldrdeq	r0, [r0], -r4
    d83c:	ldrdeq	r0, [r0], -r4
    d840:	ldrdeq	r0, [r0], -r4
    d844:	ldrdeq	r0, [r0], -r4
    d848:	ldrdeq	r0, [r0], -r4
    d84c:	ldrdeq	r0, [r0], -r4
    d850:	ldrdeq	r0, [r0], -r4
    d854:	ldrdeq	r0, [r0], -r4
    d858:	ldrdeq	r0, [r0], -r4
    d85c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d860:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d864:	ldrdeq	r0, [r0], -r4
    d868:	ldrdeq	r0, [r0], -r4
    d86c:	ldrdeq	r0, [r0], -r4
    d870:	ldrdeq	r0, [r0], -r4
    d874:	ldrdeq	r0, [r0], -r4
    d878:	ldrdeq	r0, [r0], -r4
    d87c:	ldrdeq	r0, [r0], -r4
    d880:	ldrdeq	r0, [r0], -r4
    d884:	ldrdeq	r0, [r0], -r4
    d888:	ldrdeq	r0, [r0], -r4
    d88c:	ldrdeq	r0, [r0], -r4
    d890:	ldrdeq	r0, [r0], -r4
    d894:	ldrdeq	r0, [r0], -r4
    d898:	ldrdeq	r0, [r0], -r4
    d89c:	ldrdeq	r0, [r0], -r4
    d8a0:	ldrdeq	r0, [r0], -r4
    d8a4:	ldrdeq	r0, [r0], -r4
    d8a8:	ldrdeq	r0, [r0], -r4
    d8ac:	ldrdeq	r0, [r0], -r4
    d8b0:	ldrdeq	r0, [r0], -r4
    d8b4:	ldrdeq	r0, [r0], -r4
    d8b8:	ldrdeq	r0, [r0], -r4
    d8bc:	ldrdeq	r0, [r0], -r4
    d8c0:	ldrdeq	r0, [r0], -r4
    d8c4:	ldrdeq	r0, [r0], -r4
    d8c8:	ldrdeq	r0, [r0], -r4
    d8cc:	ldrdeq	r0, [r0], -r4
    d8d0:	ldrdeq	r0, [r0], -r4
    d8d4:	ldrdeq	r0, [r0], -r4
    d8d8:	ldrdeq	r0, [r0], -r4
    d8dc:	ldrdeq	r0, [r0], -r4
    d8e0:	ldrdeq	r0, [r0], -r4
    d8e4:	ldrdeq	r0, [r0], -r4
    d8e8:	ldrdeq	r0, [r0], -r4
    d8ec:	ldrdeq	r0, [r0], -r4
    d8f0:	ldrdeq	r0, [r0], -r4
    d8f4:	ldrdeq	r0, [r0], -r4
    d8f8:	ldrdeq	r0, [r0], -r4
    d8fc:	ldrdeq	r0, [r0], -r4
    d900:	ldrdeq	r0, [r0], -r4
    d904:	ldrdeq	r0, [r0], -r4
    d908:	ldrdeq	r0, [r0], -r4
    d90c:	ldrdeq	r0, [r0], -r4
    d910:	ldrdeq	r0, [r0], -r4
    d914:	ldrdeq	r0, [r0], -r4
    d918:	ldrdeq	r0, [r0], -r4
    d91c:	ldrdeq	r0, [r0], -r4
    d920:	ldrdeq	r0, [r0], -r4
    d924:	ldrdeq	r0, [r0], -r4
    d928:	ldrdeq	r0, [r0], -r4
    d92c:	ldrdeq	r0, [r0], -r4
    d930:	ldrdeq	r0, [r0], -r4
    d934:	ldrdeq	r0, [r0], -r4
    d938:	ldrdeq	r0, [r0], -r4
    d93c:	ldrdeq	r0, [r0], -r4
    d940:	ldrdeq	r0, [r0], -r4
    d944:	ldrdeq	r0, [r0], -r4
    d948:	ldrdeq	r0, [r0], -r4
    d94c:	ldrdeq	r0, [r0], -r4
    d950:	ldrdeq	r0, [r0], -r4
    d954:	ldrdeq	r0, [r0], -r4
    d958:	ldrdeq	r0, [r0], -r4
    d95c:	ldrdeq	r0, [r0], -r4
    d960:	ldrdeq	r0, [r0], -r4
    d964:	ldrdeq	r0, [r0], -r4
    d968:	ldrdeq	r0, [r0], -r4
    d96c:	ldrdeq	r0, [r0], -r4
    d970:	ldrdeq	r0, [r0], -r4
    d974:	ldrdeq	r0, [r0], -r4
    d978:	ldrdeq	r0, [r0], -r4
    d97c:	ldrdeq	r0, [r0], -r4
    d980:	ldrdeq	r0, [r0], -r4
    d984:	ldrdeq	r0, [r0], -r4
    d988:	ldrdeq	r0, [r0], -r4
    d98c:	ldrdeq	r0, [r0], -r4
    d990:	ldrdeq	r0, [r0], -r4
    d994:	ldrdeq	r0, [r0], -r4
    d998:	ldrdeq	r0, [r0], -r4
    d99c:	ldrdeq	r0, [r0], -r4
    d9a0:	ldrdeq	r0, [r0], -r4
    d9a4:	ldrdeq	r0, [r0], -r4
    d9a8:	ldrdeq	r0, [r0], -r4
    d9ac:	ldrdeq	r0, [r0], -r4
    d9b0:	ldrdeq	r0, [r0], -r4
    d9b4:	ldrdeq	r0, [r0], -r4
    d9b8:	ldrdeq	r0, [r0], -r4
    d9bc:	ldrdeq	r0, [r0], -r4
    d9c0:	ldrdeq	r0, [r0], -r4
    d9c4:	ldrdeq	r0, [r0], -r4
    d9c8:	ldrdeq	r0, [r0], -r4
    d9cc:	ldrdeq	r0, [r0], -r4
    d9d0:	ldrdeq	r0, [r0], -r4
    d9d4:	ldrdeq	r0, [r0], -r4
    d9d8:	ldrdeq	r0, [r0], -r4
    d9dc:	ldrdeq	r0, [r0], -r4
    d9e0:	ldrdeq	r0, [r0], -r4
    d9e4:	ldrdeq	r0, [r0], -r4
    d9e8:	ldrdeq	r0, [r0], -r4
    d9ec:	ldrdeq	r0, [r0], -r4
    d9f0:	ldrdeq	r0, [r0], -r4
    d9f4:	ldrdeq	r0, [r0], -r4
    d9f8:	ldrdeq	r0, [r0], -r4
    d9fc:	ldrdeq	r0, [r0], -r4
    da00:	ldrdeq	r0, [r0], -r4
    da04:	ldrdeq	r0, [r0], -r4
    da08:	ldrdeq	r0, [r0], -r4
    da0c:	ldrdeq	r0, [r0], -r4
    da10:	ldrdeq	r0, [r0], -r4
    da14:	ldrdeq	r0, [r0], -r4
    da18:	ldrdeq	r0, [r0], -r4
    da1c:	ldrdeq	r0, [r0], -r4
    da20:	ldrdeq	r0, [r0], -r4
    da24:	ldrdeq	r0, [r0], -r4
    da28:	ldrdeq	r0, [r0], -r4
    da2c:	ldrdeq	r0, [r0], -r4
    da30:	ldrdeq	r0, [r0], -r4
    da34:	ldrdeq	r0, [r0], -r4
    da38:	ldrdeq	r0, [r0], -r4
    da3c:	ldrdeq	r0, [r0], -r4
    da40:	ldrdeq	r0, [r0], -r4
    da44:	ldrdeq	r0, [r0], -r4
    da48:	ldrdeq	r0, [r0], -r4
    da4c:	ldrdeq	r0, [r0], -r4
    da50:	ldrdeq	r0, [r0], -r4
    da54:	ldrdeq	r0, [r0], -r4
    da58:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    da5c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    da60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    da64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    da68:	ldrdeq	r0, [r0], -r4
    da6c:	ldrdeq	r0, [r0], -r4
    da70:	ldrdeq	r0, [r0], -r4
    da74:	ldrdeq	r0, [r0], -r4
    da78:	ldrdeq	r0, [r0], -r4
    da7c:	ldrdeq	r0, [r0], -r4
    da80:	ldrdeq	r0, [r0], -r4
    da84:	ldrdeq	r0, [r0], -r4
    da88:	ldrdeq	r0, [r0], -r4
    da8c:	ldrdeq	r0, [r0], -r4
    da90:	ldrdeq	r0, [r0], -r4
    da94:	ldrdeq	r0, [r0], -r4
    da98:	ldrdeq	r0, [r0], -r4
    da9c:	ldrdeq	r0, [r0], -r4
    daa0:	ldrdeq	r0, [r0], -r4
    daa4:	ldrdeq	r0, [r0], -r4
    daa8:	ldrdeq	r0, [r0], -r4
    daac:	ldrdeq	r0, [r0], -r4
    dab0:	ldrdeq	r0, [r0], -r4
    dab4:	ldrdeq	r0, [r0], -r4
    dab8:	ldrdeq	r0, [r0], -r4
    dabc:	ldrdeq	r0, [r0], -r4
    dac0:	ldrdeq	r0, [r0], -r4
    dac4:	ldrdeq	r0, [r0], -r4
    dac8:	ldrdeq	r0, [r0], -r4
    dacc:	ldrdeq	r0, [r0], -r4
    dad0:	ldrdeq	r0, [r0], -r4
    dad4:	ldrdeq	r0, [r0], -r4
    dad8:	ldrdeq	r0, [r0], -r4
    dadc:	ldrdeq	r0, [r0], -r4
    dae0:	ldrdeq	r0, [r0], -r4
    dae4:	ldrdeq	r0, [r0], -r4
    dae8:	ldrdeq	r0, [r0], -r4
    daec:	ldrdeq	r0, [r0], -r4
    daf0:	ldrdeq	r0, [r0], -r4
    daf4:	ldrdeq	r0, [r0], -r4
    daf8:	ldrdeq	r0, [r0], -r4
    dafc:	ldrdeq	r0, [r0], -r4
    db00:	ldrdeq	r0, [r0], -r4
    db04:	ldrdeq	r0, [r0], -r4
    db08:	ldrdeq	r0, [r0], -r4
    db0c:	ldrdeq	r0, [r0], -r4
    db10:	ldrdeq	r0, [r0], -r4
    db14:	ldrdeq	r0, [r0], -r4
    db18:	ldrdeq	r0, [r0], -r4
    db1c:	ldrdeq	r0, [r0], -r4
    db20:	ldrdeq	r0, [r0], -r4
    db24:	ldrdeq	r0, [r0], -r4
    db28:	ldrdeq	r0, [r0], -r4
    db2c:	ldrdeq	r0, [r0], -r4
    db30:	ldrdeq	r0, [r0], -r4
    db34:	ldrdeq	r0, [r0], -r4
    db38:	ldrdeq	r0, [r0], -r4
    db3c:	ldrdeq	r0, [r0], -r4
    db40:	ldrdeq	r0, [r0], -r4
    db44:	ldrdeq	r0, [r0], -r4
    db48:	ldrdeq	r0, [r0], -r4
    db4c:	ldrdeq	r0, [r0], -r4
    db50:	ldrdeq	r0, [r0], -r4
    db54:	ldrdeq	r0, [r0], -r4
    db58:	ldrdeq	r0, [r0], -r4
    db5c:	ldrdeq	r0, [r0], -r4
    db60:	ldrdeq	r0, [r0], -r4
    db64:	ldrdeq	r0, [r0], -r4
    db68:	ldrdeq	r0, [r0], -r4
    db6c:	ldrdeq	r0, [r0], -r4
    db70:	ldrdeq	r0, [r0], -r4
    db74:	ldrdeq	r0, [r0], -r4
    db78:	ldrdeq	r0, [r0], -r4
    db7c:	ldrdeq	r0, [r0], -r4
    db80:	ldrdeq	r0, [r0], -r4
    db84:	ldrdeq	r0, [r0], -r4
    db88:	ldrdeq	r0, [r0], -r4
    db8c:	ldrdeq	r0, [r0], -r4
    db90:	ldrdeq	r0, [r0], -r4
    db94:	ldrdeq	r0, [r0], -r4
    db98:	ldrdeq	r0, [r0], -r4
    db9c:	ldrdeq	r0, [r0], -r4
    dba0:	ldrdeq	r0, [r0], -r4
    dba4:	ldrdeq	r0, [r0], -r4
    dba8:	ldrdeq	r0, [r0], -r4
    dbac:	ldrdeq	r0, [r0], -r4
    dbb0:	ldrdeq	r0, [r0], -r4
    dbb4:	ldrdeq	r0, [r0], -r4
    dbb8:	ldrdeq	r0, [r0], -r4
    dbbc:	ldrdeq	r0, [r0], -r4
    dbc0:	ldrdeq	r0, [r0], -r4
    dbc4:	ldrdeq	r0, [r0], -r4
    dbc8:	ldrdeq	r0, [r0], -r4
    dbcc:	ldrdeq	r0, [r0], -r4
    dbd0:	ldrdeq	r0, [r0], -r4
    dbd4:	ldrdeq	r0, [r0], -r4
    dbd8:	ldrdeq	r0, [r0], -r4
    dbdc:	ldrdeq	r0, [r0], -r4
    dbe0:	ldrdeq	r0, [r0], -r4
    dbe4:	ldrdeq	r0, [r0], -r4
    dbe8:	ldrdeq	r0, [r0], -r4
    dbec:	ldrdeq	r0, [r0], -r4
    dbf0:	ldrdeq	r0, [r0], -r4
    dbf4:	ldrdeq	r0, [r0], -r4
    dbf8:	ldrdeq	r0, [r0], -r4
    dbfc:	ldrdeq	r0, [r0], -r4
    dc00:	ldrdeq	r0, [r0], -r4
    dc04:	ldrdeq	r0, [r0], -r4
    dc08:	ldrdeq	r0, [r0], -r4
    dc0c:	ldrdeq	r0, [r0], -r4
    dc10:	ldrdeq	r0, [r0], -r4
    dc14:	ldrdeq	r0, [r0], -r4
    dc18:	ldrdeq	r0, [r0], -r4
    dc1c:	ldrdeq	r0, [r0], -r4
    dc20:	ldrdeq	r0, [r0], -r4
    dc24:	ldrdeq	r0, [r0], -r4
    dc28:	ldrdeq	r0, [r0], -r4
    dc2c:	ldrdeq	r0, [r0], -r4
    dc30:	ldrdeq	r0, [r0], -r4
    dc34:	ldrdeq	r0, [r0], -r4
    dc38:	ldrdeq	r0, [r0], -r4
    dc3c:	ldrdeq	r0, [r0], -r4
    dc40:	ldrdeq	r0, [r0], -r4
    dc44:	ldrdeq	r0, [r0], -r4
    dc48:	ldrdeq	r0, [r0], -r4
    dc4c:	ldrdeq	r0, [r0], -r4
    dc50:	ldrdeq	r0, [r0], -r4
    dc54:	ldrdeq	r0, [r0], -r4
    dc58:	ldrdeq	r0, [r0], -r4
    dc5c:	ldrdeq	r0, [r0], -r4
    dc60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dc64:	cmp	r2, #2432	; 0x980
    dc68:	bge	dd2c <lell_packet_is_data@@Base+0x848>
    dc6c:	movw	r1, #2036	; 0x7f4
    dc70:	sub	r1, r2, r1
    dc74:	cmp	r1, #28
    dc78:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    dc7c:	movw	r1, #2302	; 0x8fe
    dc80:	sub	r1, r2, r1
    dc84:	cmp	r1, #4
    dc88:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    dc8c:	cmp	r2, #2176	; 0x880
    dc90:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dc94:	b	de34 <lell_packet_is_data@@Base+0x950>
    dc98:	cmp	r2, #1152	; 0x480
    dc9c:	bge	dcfc <lell_packet_is_data@@Base+0x818>
    dca0:	sub	r1, r2, #1016	; 0x3f8
    dca4:	cmp	r1, #15
    dca8:	bhi	dcb4 <lell_packet_is_data@@Base+0x7d0>
    dcac:	cmp	r1, #9
    dcb0:	bne	de30 <lell_packet_is_data@@Base+0x94c>
    dcb4:	movw	r1, #766	; 0x2fe
    dcb8:	sub	r1, r2, r1
    dcbc:	cmp	r1, #4
    dcc0:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    dcc4:	cmp	r2, #896	; 0x380
    dcc8:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dccc:	b	de34 <lell_packet_is_data@@Base+0x950>
    dcd0:	cmp	r2, #4064	; 0xfe0
    dcd4:	blt	de10 <lell_packet_is_data@@Base+0x92c>
    dcd8:	sub	r1, r2, #4064	; 0xfe0
    dcdc:	cmp	r1, #31
    dce0:	bhi	de34 <lell_packet_is_data@@Base+0x950>
    dce4:	movw	r3, #1
    dce8:	mov	r2, #1
    dcec:	movt	r3, #65535	; 0xffff
    dcf0:	tst	r3, r2, lsl r1
    dcf4:	addne	r0, r0, #1
    dcf8:	b	de34 <lell_packet_is_data@@Base+0x950>
    dcfc:	movw	r1, #1531	; 0x5fb
    dd00:	cmp	r2, r1
    dd04:	ble	ddc8 <lell_packet_is_data@@Base+0x8e4>
    dd08:	cmp	r2, #1664	; 0x680
    dd0c:	bge	ddec <lell_packet_is_data@@Base+0x908>
    dd10:	movw	r1, #1532	; 0x5fc
    dd14:	sub	r1, r2, r1
    dd18:	cmp	r1, #7
    dd1c:	bhi	de34 <lell_packet_is_data@@Base+0x950>
    dd20:	cmp	r1, #4
    dd24:	bne	de30 <lell_packet_is_data@@Base+0x94c>
    dd28:	b	de34 <lell_packet_is_data@@Base+0x950>
    dd2c:	cmp	r2, #2688	; 0xa80
    dd30:	bge	dd84 <lell_packet_is_data@@Base+0x8a0>
    dd34:	movw	r1, #2556	; 0x9fc
    dd38:	sub	r1, r2, r1
    dd3c:	cmp	r1, #7
    dd40:	bhi	dd4c <lell_packet_is_data@@Base+0x868>
    dd44:	cmp	r1, #4
    dd48:	bne	de30 <lell_packet_is_data@@Base+0x94c>
    dd4c:	cmp	r2, #2432	; 0x980
    dd50:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dd54:	b	de34 <lell_packet_is_data@@Base+0x950>
    dd58:	movw	r1, #3580	; 0xdfc
    dd5c:	sub	r1, r2, r1
    dd60:	cmp	r1, #8
    dd64:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    dd68:	movw	r1, #3326	; 0xcfe
    dd6c:	sub	r1, r2, r1
    dd70:	cmp	r1, #4
    dd74:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    dd78:	cmp	r2, #3456	; 0xd80
    dd7c:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dd80:	b	de34 <lell_packet_is_data@@Base+0x950>
    dd84:	movw	r1, #2814	; 0xafe
    dd88:	sub	r1, r2, r1
    dd8c:	cmp	r1, #4
    dd90:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    dd94:	cmp	r2, #2688	; 0xa80
    dd98:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dd9c:	cmp	r2, #2944	; 0xb80
    dda0:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dda4:	b	de34 <lell_packet_is_data@@Base+0x950>
    dda8:	sub	r1, r2, #508	; 0x1fc
    ddac:	cmp	r1, #7
    ddb0:	bhi	ddbc <lell_packet_is_data@@Base+0x8d8>
    ddb4:	cmp	r1, #4
    ddb8:	bne	de30 <lell_packet_is_data@@Base+0x94c>
    ddbc:	cmp	r2, #640	; 0x280
    ddc0:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    ddc4:	b	de34 <lell_packet_is_data@@Base+0x950>
    ddc8:	movw	r1, #1278	; 0x4fe
    ddcc:	sub	r1, r2, r1
    ddd0:	cmp	r1, #4
    ddd4:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    ddd8:	cmp	r2, #1152	; 0x480
    dddc:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dde0:	cmp	r2, #1408	; 0x580
    dde4:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    dde8:	b	de34 <lell_packet_is_data@@Base+0x950>
    ddec:	movw	r1, #1790	; 0x6fe
    ddf0:	sub	r1, r2, r1
    ddf4:	cmp	r1, #4
    ddf8:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    ddfc:	cmp	r2, #1664	; 0x680
    de00:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    de04:	cmp	r2, #1920	; 0x780
    de08:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    de0c:	b	de34 <lell_packet_is_data@@Base+0x950>
    de10:	movw	r1, #3838	; 0xefe
    de14:	sub	r1, r2, r1
    de18:	cmp	r1, #4
    de1c:	bcc	de30 <lell_packet_is_data@@Base+0x94c>
    de20:	cmp	r2, #3712	; 0xe80
    de24:	beq	de30 <lell_packet_is_data@@Base+0x94c>
    de28:	cmp	r2, #3968	; 0xf80
    de2c:	bne	de34 <lell_packet_is_data@@Base+0x950>
    de30:	add	r0, r0, #1
    de34:	ubfx	r3, ip, #4, #12
    de38:	movw	r1, #2035	; 0x7f3
    de3c:	lsr	r2, ip, #8
    de40:	cmp	r3, r1
    de44:	ble	de84 <lell_packet_is_data@@Base+0x9a0>
    de48:	movw	r1, #3063	; 0xbf7
    de4c:	cmp	r3, r1
    de50:	ble	e4a8 <lell_packet_is_data@@Base+0xfc4>
    de54:	cmp	r3, #3712	; 0xe80
    de58:	bge	e51c <lell_packet_is_data@@Base+0x1038>
    de5c:	movw	r1, #3325	; 0xcfd
    de60:	cmp	r3, r1
    de64:	bgt	e5b8 <lell_packet_is_data@@Base+0x10d4>
    de68:	movw	r1, #3064	; 0xbf8
    de6c:	sub	r1, r3, r1
    de70:	cmp	r1, #16
    de74:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    de78:	cmp	r3, #3200	; 0xc80
    de7c:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    de80:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    de84:	movw	r1, #765	; 0x2fd
    de88:	cmp	r3, r1
    de8c:	bgt	e4e4 <lell_packet_is_data@@Base+0x1000>
    de90:	cmp	r3, #384	; 0x180
    de94:	bhi	e608 <lell_packet_is_data@@Base+0x1124>
    de98:	add	r1, pc, #4
    de9c:	ldr	r3, [r1, r3, lsl #2]
    dea0:	add	pc, r1, r3
    dea4:	andeq	r0, r0, ip, ror #15
    dea8:	andeq	r0, r0, ip, ror #15
    deac:	andeq	r0, r0, ip, ror #15
    deb0:	andeq	r0, r0, ip, ror #15
    deb4:	andeq	r0, r0, ip, ror #15
    deb8:	andeq	r0, r0, ip, ror #15
    debc:	andeq	r0, r0, ip, ror #15
    dec0:	andeq	r0, r0, ip, ror #15
    dec4:	andeq	r0, r0, ip, ror #15
    dec8:	andeq	r0, r0, ip, ror #15
    decc:	andeq	r0, r0, ip, ror #15
    ded0:	andeq	r0, r0, ip, ror #15
    ded4:	andeq	r0, r0, ip, ror #15
    ded8:	andeq	r0, r0, ip, ror #15
    dedc:	andeq	r0, r0, ip, ror #15
    dee0:	andeq	r0, r0, ip, ror #15
    dee4:	andeq	r0, r0, ip, ror #15
    dee8:	andeq	r0, r0, ip, ror #15
    deec:	andeq	r0, r0, ip, ror #15
    def0:	andeq	r0, r0, ip, ror #15
    def4:	andeq	r0, r0, ip, ror #15
    def8:	andeq	r0, r0, ip, ror #15
    defc:	andeq	r0, r0, ip, ror #15
    df00:	andeq	r0, r0, ip, ror #15
    df04:	andeq	r0, r0, ip, ror #15
    df08:	andeq	r0, r0, ip, ror #15
    df0c:	andeq	r0, r0, ip, ror #15
    df10:	andeq	r0, r0, ip, ror #15
    df14:	andeq	r0, r0, ip, ror #15
    df18:	andeq	r0, r0, ip, ror #15
    df1c:	andeq	r0, r0, ip, ror #15
    df20:	andeq	r0, r0, ip, ror #15
    df24:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df28:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df30:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df34:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df38:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df3c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df40:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df44:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df48:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df4c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df50:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df54:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df58:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df5c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df60:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df64:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df68:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df6c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df70:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df74:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df78:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df7c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df80:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df84:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df88:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df8c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df90:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df94:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df98:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    df9c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfa0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfa4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfa8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfb0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfb4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfb8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfbc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfc0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfc4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfc8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfcc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfd0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfd4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfd8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfdc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfe0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfe4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfe8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dfec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dff0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dff4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dff8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dffc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e000:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e004:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e008:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e00c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e010:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e014:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e018:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e01c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e020:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e024:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e028:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e02c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e030:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e034:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e038:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e03c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e040:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e044:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e048:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e04c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e050:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e054:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e058:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e05c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e060:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e064:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e068:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e06c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e070:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e074:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e078:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e07c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e080:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e084:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e088:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e08c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e090:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e094:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e098:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e09c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0a0:	andeq	r0, r0, ip, ror #15
    e0a4:	andeq	r0, r0, ip, ror #15
    e0a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e100:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e104:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e108:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e10c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e110:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e114:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e118:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e11c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e120:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e124:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e128:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e12c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e130:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e134:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e138:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e13c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e140:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e144:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e148:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e14c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e150:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e154:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e158:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e15c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e160:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e164:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e168:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e16c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e170:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e174:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e178:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e17c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e180:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e184:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e188:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e18c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e190:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e194:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e198:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e19c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e200:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e204:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e208:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e20c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e210:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e214:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e218:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e21c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e220:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e224:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e228:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e22c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e230:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e234:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e238:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e23c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e240:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e244:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e248:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e24c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e250:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e254:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e258:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e25c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e260:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e264:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e268:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e26c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e270:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e274:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e278:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e27c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e280:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e284:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e288:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e28c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e290:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e294:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e298:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e29c:	andeq	r0, r0, ip, ror #15
    e2a0:	andeq	r0, r0, ip, ror #15
    e2a4:	andeq	r0, r0, ip, ror #15
    e2a8:	andeq	r0, r0, ip, ror #15
    e2ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e300:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e304:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e308:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e30c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e310:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e314:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e318:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e31c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e320:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e324:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e328:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e32c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e330:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e334:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e338:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e33c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e340:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e344:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e348:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e34c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e350:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e354:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e358:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e35c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e360:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e364:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e368:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e36c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e370:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e374:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e378:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e37c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e380:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e384:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e388:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e38c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e390:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e394:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e398:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e39c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e400:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e404:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e408:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e40c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e410:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e414:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e418:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e41c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e420:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e424:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e428:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e42c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e430:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e434:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e438:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e43c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e440:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e444:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e448:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e44c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e450:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e454:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e458:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e45c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e460:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e464:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e468:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e46c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e470:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e474:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e478:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e47c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e480:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e484:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e488:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e48c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e490:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e494:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e498:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e49c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4a4:	andeq	r0, r0, ip, ror #15
    e4a8:	cmp	r3, #2432	; 0x980
    e4ac:	bge	e58c <lell_packet_is_data@@Base+0x10a8>
    e4b0:	movw	r1, #2036	; 0x7f4
    e4b4:	sub	r1, r3, r1
    e4b8:	cmp	r1, #28
    e4bc:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e4c0:	movw	r1, #2302	; 0x8fe
    e4c4:	sub	r1, r3, r1
    e4c8:	cmp	r1, #4
    e4cc:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e4d0:	cmp	r3, #2176	; 0x880
    e4d4:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e4d8:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e4dc:			; <UNDEFINED> instruction: 0x00008ebf
    e4e0:	andeq	r8, r0, r2, ror #20
    e4e4:	cmp	r3, #1152	; 0x480
    e4e8:	bge	e558 <lell_packet_is_data@@Base+0x1074>
    e4ec:	sub	r1, r3, #1016	; 0x3f8
    e4f0:	cmp	r1, #15
    e4f4:	bhi	e500 <lell_packet_is_data@@Base+0x101c>
    e4f8:	cmp	r1, #9
    e4fc:	bne	e690 <lell_packet_is_data@@Base+0x11ac>
    e500:	movw	r1, #766	; 0x2fe
    e504:	sub	r1, r3, r1
    e508:	cmp	r1, #4
    e50c:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e510:	cmp	r3, #896	; 0x380
    e514:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e518:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e51c:	cmp	r3, #4064	; 0xfe0
    e520:	blt	e670 <lell_packet_is_data@@Base+0x118c>
    e524:	sub	r1, r3, #4064	; 0xfe0
    e528:	cmp	r1, #31
    e52c:	bhi	e694 <lell_packet_is_data@@Base+0x11b0>
    e530:	movw	r5, #1
    e534:	mov	r3, #1
    e538:	movt	r5, #65535	; 0xffff
    e53c:	tst	r5, r3, lsl r1
    e540:	addne	r0, r0, #1
    e544:	bfc	r2, #12, #20
    e548:	movw	r1, #2035	; 0x7f3
    e54c:	cmp	r2, r1
    e550:	bgt	e6a4 <lell_packet_is_data@@Base+0x11c0>
    e554:	b	e6e0 <lell_packet_is_data@@Base+0x11fc>
    e558:	movw	r1, #1531	; 0x5fb
    e55c:	cmp	r3, r1
    e560:	ble	e628 <lell_packet_is_data@@Base+0x1144>
    e564:	cmp	r3, #1664	; 0x680
    e568:	bge	e64c <lell_packet_is_data@@Base+0x1168>
    e56c:	movw	r1, #1532	; 0x5fc
    e570:	sub	r1, r3, r1
    e574:	cmp	r1, #7
    e578:	bhi	e694 <lell_packet_is_data@@Base+0x11b0>
    e57c:	cmp	r1, #4
    e580:	bne	e690 <lell_packet_is_data@@Base+0x11ac>
    e584:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e588:	andeq	r8, r0, pc, lsr pc
    e58c:	cmp	r3, #2688	; 0xa80
    e590:	bge	e5e4 <lell_packet_is_data@@Base+0x1100>
    e594:	movw	r1, #2556	; 0x9fc
    e598:	sub	r1, r3, r1
    e59c:	cmp	r1, #7
    e5a0:	bhi	e5ac <lell_packet_is_data@@Base+0x10c8>
    e5a4:	cmp	r1, #4
    e5a8:	bne	e690 <lell_packet_is_data@@Base+0x11ac>
    e5ac:	cmp	r3, #2432	; 0x980
    e5b0:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e5b4:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e5b8:	movw	r1, #3580	; 0xdfc
    e5bc:	sub	r1, r3, r1
    e5c0:	cmp	r1, #8
    e5c4:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e5c8:	movw	r1, #3326	; 0xcfe
    e5cc:	sub	r1, r3, r1
    e5d0:	cmp	r1, #4
    e5d4:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e5d8:	cmp	r3, #3456	; 0xd80
    e5dc:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e5e0:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e5e4:	movw	r1, #2814	; 0xafe
    e5e8:	sub	r1, r3, r1
    e5ec:	cmp	r1, #4
    e5f0:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e5f4:	cmp	r3, #2688	; 0xa80
    e5f8:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e5fc:	cmp	r3, #2944	; 0xb80
    e600:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e604:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e608:	sub	r1, r3, #508	; 0x1fc
    e60c:	cmp	r1, #7
    e610:	bhi	e61c <lell_packet_is_data@@Base+0x1138>
    e614:	cmp	r1, #4
    e618:	bne	e690 <lell_packet_is_data@@Base+0x11ac>
    e61c:	cmp	r3, #640	; 0x280
    e620:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e624:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e628:	movw	r1, #1278	; 0x4fe
    e62c:	sub	r1, r3, r1
    e630:	cmp	r1, #4
    e634:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e638:	cmp	r3, #1152	; 0x480
    e63c:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e640:	cmp	r3, #1408	; 0x580
    e644:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e648:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e64c:	movw	r1, #1790	; 0x6fe
    e650:	sub	r1, r3, r1
    e654:	cmp	r1, #4
    e658:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e65c:	cmp	r3, #1664	; 0x680
    e660:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e664:	cmp	r3, #1920	; 0x780
    e668:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e66c:	b	e694 <lell_packet_is_data@@Base+0x11b0>
    e670:	movw	r1, #3838	; 0xefe
    e674:	sub	r1, r3, r1
    e678:	cmp	r1, #4
    e67c:	bcc	e690 <lell_packet_is_data@@Base+0x11ac>
    e680:	cmp	r3, #3712	; 0xe80
    e684:	beq	e690 <lell_packet_is_data@@Base+0x11ac>
    e688:	cmp	r3, #3968	; 0xf80
    e68c:	bne	e694 <lell_packet_is_data@@Base+0x11b0>
    e690:	add	r0, r0, #1
    e694:	bfc	r2, #12, #20
    e698:	movw	r1, #2035	; 0x7f3
    e69c:	cmp	r2, r1
    e6a0:	ble	e6e0 <lell_packet_is_data@@Base+0x11fc>
    e6a4:	movw	r1, #3063	; 0xbf7
    e6a8:	cmp	r2, r1
    e6ac:	ble	ed04 <lell_packet_is_data@@Base+0x1820>
    e6b0:	cmp	r2, #3712	; 0xe80
    e6b4:	bge	ed70 <lell_packet_is_data@@Base+0x188c>
    e6b8:	movw	r1, #3325	; 0xcfd
    e6bc:	cmp	r2, r1
    e6c0:	bgt	edf8 <lell_packet_is_data@@Base+0x1914>
    e6c4:	movw	r1, #3064	; 0xbf8
    e6c8:	sub	r1, r2, r1
    e6cc:	cmp	r1, #16
    e6d0:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    e6d4:	cmp	r2, #3200	; 0xc80
    e6d8:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    e6dc:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    e6e0:	movw	r1, #765	; 0x2fd
    e6e4:	cmp	r2, r1
    e6e8:	bgt	ed38 <lell_packet_is_data@@Base+0x1854>
    e6ec:	cmp	r2, #384	; 0x180
    e6f0:	bhi	ee48 <lell_packet_is_data@@Base+0x1964>
    e6f4:	add	r1, pc, #4
    e6f8:	ldr	r2, [r1, r2, lsl #2]
    e6fc:	add	pc, r1, r2
    e700:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e704:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e708:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e70c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e710:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e714:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e718:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e71c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e720:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e724:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e728:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e72c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e730:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e734:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e738:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e73c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e740:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e744:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e748:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e74c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e750:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e754:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e758:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e75c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e760:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e764:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e768:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e76c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e770:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e774:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e778:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e77c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e780:	ldrdeq	r0, [r0], -r4
    e784:	ldrdeq	r0, [r0], -r4
    e788:	ldrdeq	r0, [r0], -r4
    e78c:	ldrdeq	r0, [r0], -r4
    e790:	ldrdeq	r0, [r0], -r4
    e794:	ldrdeq	r0, [r0], -r4
    e798:	ldrdeq	r0, [r0], -r4
    e79c:	ldrdeq	r0, [r0], -r4
    e7a0:	ldrdeq	r0, [r0], -r4
    e7a4:	ldrdeq	r0, [r0], -r4
    e7a8:	ldrdeq	r0, [r0], -r4
    e7ac:	ldrdeq	r0, [r0], -r4
    e7b0:	ldrdeq	r0, [r0], -r4
    e7b4:	ldrdeq	r0, [r0], -r4
    e7b8:	ldrdeq	r0, [r0], -r4
    e7bc:	ldrdeq	r0, [r0], -r4
    e7c0:	ldrdeq	r0, [r0], -r4
    e7c4:	ldrdeq	r0, [r0], -r4
    e7c8:	ldrdeq	r0, [r0], -r4
    e7cc:	ldrdeq	r0, [r0], -r4
    e7d0:	ldrdeq	r0, [r0], -r4
    e7d4:	ldrdeq	r0, [r0], -r4
    e7d8:	ldrdeq	r0, [r0], -r4
    e7dc:	ldrdeq	r0, [r0], -r4
    e7e0:	ldrdeq	r0, [r0], -r4
    e7e4:	ldrdeq	r0, [r0], -r4
    e7e8:	ldrdeq	r0, [r0], -r4
    e7ec:	ldrdeq	r0, [r0], -r4
    e7f0:	ldrdeq	r0, [r0], -r4
    e7f4:	ldrdeq	r0, [r0], -r4
    e7f8:	ldrdeq	r0, [r0], -r4
    e7fc:	ldrdeq	r0, [r0], -r4
    e800:	ldrdeq	r0, [r0], -r4
    e804:	ldrdeq	r0, [r0], -r4
    e808:	ldrdeq	r0, [r0], -r4
    e80c:	ldrdeq	r0, [r0], -r4
    e810:	ldrdeq	r0, [r0], -r4
    e814:	ldrdeq	r0, [r0], -r4
    e818:	ldrdeq	r0, [r0], -r4
    e81c:	ldrdeq	r0, [r0], -r4
    e820:	ldrdeq	r0, [r0], -r4
    e824:	ldrdeq	r0, [r0], -r4
    e828:	ldrdeq	r0, [r0], -r4
    e82c:	ldrdeq	r0, [r0], -r4
    e830:	ldrdeq	r0, [r0], -r4
    e834:	ldrdeq	r0, [r0], -r4
    e838:	ldrdeq	r0, [r0], -r4
    e83c:	ldrdeq	r0, [r0], -r4
    e840:	ldrdeq	r0, [r0], -r4
    e844:	ldrdeq	r0, [r0], -r4
    e848:	ldrdeq	r0, [r0], -r4
    e84c:	ldrdeq	r0, [r0], -r4
    e850:	ldrdeq	r0, [r0], -r4
    e854:	ldrdeq	r0, [r0], -r4
    e858:	ldrdeq	r0, [r0], -r4
    e85c:	ldrdeq	r0, [r0], -r4
    e860:	ldrdeq	r0, [r0], -r4
    e864:	ldrdeq	r0, [r0], -r4
    e868:	ldrdeq	r0, [r0], -r4
    e86c:	ldrdeq	r0, [r0], -r4
    e870:	ldrdeq	r0, [r0], -r4
    e874:	ldrdeq	r0, [r0], -r4
    e878:	ldrdeq	r0, [r0], -r4
    e87c:	ldrdeq	r0, [r0], -r4
    e880:	ldrdeq	r0, [r0], -r4
    e884:	ldrdeq	r0, [r0], -r4
    e888:	ldrdeq	r0, [r0], -r4
    e88c:	ldrdeq	r0, [r0], -r4
    e890:	ldrdeq	r0, [r0], -r4
    e894:	ldrdeq	r0, [r0], -r4
    e898:	ldrdeq	r0, [r0], -r4
    e89c:	ldrdeq	r0, [r0], -r4
    e8a0:	ldrdeq	r0, [r0], -r4
    e8a4:	ldrdeq	r0, [r0], -r4
    e8a8:	ldrdeq	r0, [r0], -r4
    e8ac:	ldrdeq	r0, [r0], -r4
    e8b0:	ldrdeq	r0, [r0], -r4
    e8b4:	ldrdeq	r0, [r0], -r4
    e8b8:	ldrdeq	r0, [r0], -r4
    e8bc:	ldrdeq	r0, [r0], -r4
    e8c0:	ldrdeq	r0, [r0], -r4
    e8c4:	ldrdeq	r0, [r0], -r4
    e8c8:	ldrdeq	r0, [r0], -r4
    e8cc:	ldrdeq	r0, [r0], -r4
    e8d0:	ldrdeq	r0, [r0], -r4
    e8d4:	ldrdeq	r0, [r0], -r4
    e8d8:	ldrdeq	r0, [r0], -r4
    e8dc:	ldrdeq	r0, [r0], -r4
    e8e0:	ldrdeq	r0, [r0], -r4
    e8e4:	ldrdeq	r0, [r0], -r4
    e8e8:	ldrdeq	r0, [r0], -r4
    e8ec:	ldrdeq	r0, [r0], -r4
    e8f0:	ldrdeq	r0, [r0], -r4
    e8f4:	ldrdeq	r0, [r0], -r4
    e8f8:	ldrdeq	r0, [r0], -r4
    e8fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e900:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e904:	ldrdeq	r0, [r0], -r4
    e908:	ldrdeq	r0, [r0], -r4
    e90c:	ldrdeq	r0, [r0], -r4
    e910:	ldrdeq	r0, [r0], -r4
    e914:	ldrdeq	r0, [r0], -r4
    e918:	ldrdeq	r0, [r0], -r4
    e91c:	ldrdeq	r0, [r0], -r4
    e920:	ldrdeq	r0, [r0], -r4
    e924:	ldrdeq	r0, [r0], -r4
    e928:	ldrdeq	r0, [r0], -r4
    e92c:	ldrdeq	r0, [r0], -r4
    e930:	ldrdeq	r0, [r0], -r4
    e934:	ldrdeq	r0, [r0], -r4
    e938:	ldrdeq	r0, [r0], -r4
    e93c:	ldrdeq	r0, [r0], -r4
    e940:	ldrdeq	r0, [r0], -r4
    e944:	ldrdeq	r0, [r0], -r4
    e948:	ldrdeq	r0, [r0], -r4
    e94c:	ldrdeq	r0, [r0], -r4
    e950:	ldrdeq	r0, [r0], -r4
    e954:	ldrdeq	r0, [r0], -r4
    e958:	ldrdeq	r0, [r0], -r4
    e95c:	ldrdeq	r0, [r0], -r4
    e960:	ldrdeq	r0, [r0], -r4
    e964:	ldrdeq	r0, [r0], -r4
    e968:	ldrdeq	r0, [r0], -r4
    e96c:	ldrdeq	r0, [r0], -r4
    e970:	ldrdeq	r0, [r0], -r4
    e974:	ldrdeq	r0, [r0], -r4
    e978:	ldrdeq	r0, [r0], -r4
    e97c:	ldrdeq	r0, [r0], -r4
    e980:	ldrdeq	r0, [r0], -r4
    e984:	ldrdeq	r0, [r0], -r4
    e988:	ldrdeq	r0, [r0], -r4
    e98c:	ldrdeq	r0, [r0], -r4
    e990:	ldrdeq	r0, [r0], -r4
    e994:	ldrdeq	r0, [r0], -r4
    e998:	ldrdeq	r0, [r0], -r4
    e99c:	ldrdeq	r0, [r0], -r4
    e9a0:	ldrdeq	r0, [r0], -r4
    e9a4:	ldrdeq	r0, [r0], -r4
    e9a8:	ldrdeq	r0, [r0], -r4
    e9ac:	ldrdeq	r0, [r0], -r4
    e9b0:	ldrdeq	r0, [r0], -r4
    e9b4:	ldrdeq	r0, [r0], -r4
    e9b8:	ldrdeq	r0, [r0], -r4
    e9bc:	ldrdeq	r0, [r0], -r4
    e9c0:	ldrdeq	r0, [r0], -r4
    e9c4:	ldrdeq	r0, [r0], -r4
    e9c8:	ldrdeq	r0, [r0], -r4
    e9cc:	ldrdeq	r0, [r0], -r4
    e9d0:	ldrdeq	r0, [r0], -r4
    e9d4:	ldrdeq	r0, [r0], -r4
    e9d8:	ldrdeq	r0, [r0], -r4
    e9dc:	ldrdeq	r0, [r0], -r4
    e9e0:	ldrdeq	r0, [r0], -r4
    e9e4:	ldrdeq	r0, [r0], -r4
    e9e8:	ldrdeq	r0, [r0], -r4
    e9ec:	ldrdeq	r0, [r0], -r4
    e9f0:	ldrdeq	r0, [r0], -r4
    e9f4:	ldrdeq	r0, [r0], -r4
    e9f8:	ldrdeq	r0, [r0], -r4
    e9fc:	ldrdeq	r0, [r0], -r4
    ea00:	ldrdeq	r0, [r0], -r4
    ea04:	ldrdeq	r0, [r0], -r4
    ea08:	ldrdeq	r0, [r0], -r4
    ea0c:	ldrdeq	r0, [r0], -r4
    ea10:	ldrdeq	r0, [r0], -r4
    ea14:	ldrdeq	r0, [r0], -r4
    ea18:	ldrdeq	r0, [r0], -r4
    ea1c:	ldrdeq	r0, [r0], -r4
    ea20:	ldrdeq	r0, [r0], -r4
    ea24:	ldrdeq	r0, [r0], -r4
    ea28:	ldrdeq	r0, [r0], -r4
    ea2c:	ldrdeq	r0, [r0], -r4
    ea30:	ldrdeq	r0, [r0], -r4
    ea34:	ldrdeq	r0, [r0], -r4
    ea38:	ldrdeq	r0, [r0], -r4
    ea3c:	ldrdeq	r0, [r0], -r4
    ea40:	ldrdeq	r0, [r0], -r4
    ea44:	ldrdeq	r0, [r0], -r4
    ea48:	ldrdeq	r0, [r0], -r4
    ea4c:	ldrdeq	r0, [r0], -r4
    ea50:	ldrdeq	r0, [r0], -r4
    ea54:	ldrdeq	r0, [r0], -r4
    ea58:	ldrdeq	r0, [r0], -r4
    ea5c:	ldrdeq	r0, [r0], -r4
    ea60:	ldrdeq	r0, [r0], -r4
    ea64:	ldrdeq	r0, [r0], -r4
    ea68:	ldrdeq	r0, [r0], -r4
    ea6c:	ldrdeq	r0, [r0], -r4
    ea70:	ldrdeq	r0, [r0], -r4
    ea74:	ldrdeq	r0, [r0], -r4
    ea78:	ldrdeq	r0, [r0], -r4
    ea7c:	ldrdeq	r0, [r0], -r4
    ea80:	ldrdeq	r0, [r0], -r4
    ea84:	ldrdeq	r0, [r0], -r4
    ea88:	ldrdeq	r0, [r0], -r4
    ea8c:	ldrdeq	r0, [r0], -r4
    ea90:	ldrdeq	r0, [r0], -r4
    ea94:	ldrdeq	r0, [r0], -r4
    ea98:	ldrdeq	r0, [r0], -r4
    ea9c:	ldrdeq	r0, [r0], -r4
    eaa0:	ldrdeq	r0, [r0], -r4
    eaa4:	ldrdeq	r0, [r0], -r4
    eaa8:	ldrdeq	r0, [r0], -r4
    eaac:	ldrdeq	r0, [r0], -r4
    eab0:	ldrdeq	r0, [r0], -r4
    eab4:	ldrdeq	r0, [r0], -r4
    eab8:	ldrdeq	r0, [r0], -r4
    eabc:	ldrdeq	r0, [r0], -r4
    eac0:	ldrdeq	r0, [r0], -r4
    eac4:	ldrdeq	r0, [r0], -r4
    eac8:	ldrdeq	r0, [r0], -r4
    eacc:	ldrdeq	r0, [r0], -r4
    ead0:	ldrdeq	r0, [r0], -r4
    ead4:	ldrdeq	r0, [r0], -r4
    ead8:	ldrdeq	r0, [r0], -r4
    eadc:	ldrdeq	r0, [r0], -r4
    eae0:	ldrdeq	r0, [r0], -r4
    eae4:	ldrdeq	r0, [r0], -r4
    eae8:	ldrdeq	r0, [r0], -r4
    eaec:	ldrdeq	r0, [r0], -r4
    eaf0:	ldrdeq	r0, [r0], -r4
    eaf4:	ldrdeq	r0, [r0], -r4
    eaf8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    eafc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    eb00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    eb04:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    eb08:	ldrdeq	r0, [r0], -r4
    eb0c:	ldrdeq	r0, [r0], -r4
    eb10:	ldrdeq	r0, [r0], -r4
    eb14:	ldrdeq	r0, [r0], -r4
    eb18:	ldrdeq	r0, [r0], -r4
    eb1c:	ldrdeq	r0, [r0], -r4
    eb20:	ldrdeq	r0, [r0], -r4
    eb24:	ldrdeq	r0, [r0], -r4
    eb28:	ldrdeq	r0, [r0], -r4
    eb2c:	ldrdeq	r0, [r0], -r4
    eb30:	ldrdeq	r0, [r0], -r4
    eb34:	ldrdeq	r0, [r0], -r4
    eb38:	ldrdeq	r0, [r0], -r4
    eb3c:	ldrdeq	r0, [r0], -r4
    eb40:	ldrdeq	r0, [r0], -r4
    eb44:	ldrdeq	r0, [r0], -r4
    eb48:	ldrdeq	r0, [r0], -r4
    eb4c:	ldrdeq	r0, [r0], -r4
    eb50:	ldrdeq	r0, [r0], -r4
    eb54:	ldrdeq	r0, [r0], -r4
    eb58:	ldrdeq	r0, [r0], -r4
    eb5c:	ldrdeq	r0, [r0], -r4
    eb60:	ldrdeq	r0, [r0], -r4
    eb64:	ldrdeq	r0, [r0], -r4
    eb68:	ldrdeq	r0, [r0], -r4
    eb6c:	ldrdeq	r0, [r0], -r4
    eb70:	ldrdeq	r0, [r0], -r4
    eb74:	ldrdeq	r0, [r0], -r4
    eb78:	ldrdeq	r0, [r0], -r4
    eb7c:	ldrdeq	r0, [r0], -r4
    eb80:	ldrdeq	r0, [r0], -r4
    eb84:	ldrdeq	r0, [r0], -r4
    eb88:	ldrdeq	r0, [r0], -r4
    eb8c:	ldrdeq	r0, [r0], -r4
    eb90:	ldrdeq	r0, [r0], -r4
    eb94:	ldrdeq	r0, [r0], -r4
    eb98:	ldrdeq	r0, [r0], -r4
    eb9c:	ldrdeq	r0, [r0], -r4
    eba0:	ldrdeq	r0, [r0], -r4
    eba4:	ldrdeq	r0, [r0], -r4
    eba8:	ldrdeq	r0, [r0], -r4
    ebac:	ldrdeq	r0, [r0], -r4
    ebb0:	ldrdeq	r0, [r0], -r4
    ebb4:	ldrdeq	r0, [r0], -r4
    ebb8:	ldrdeq	r0, [r0], -r4
    ebbc:	ldrdeq	r0, [r0], -r4
    ebc0:	ldrdeq	r0, [r0], -r4
    ebc4:	ldrdeq	r0, [r0], -r4
    ebc8:	ldrdeq	r0, [r0], -r4
    ebcc:	ldrdeq	r0, [r0], -r4
    ebd0:	ldrdeq	r0, [r0], -r4
    ebd4:	ldrdeq	r0, [r0], -r4
    ebd8:	ldrdeq	r0, [r0], -r4
    ebdc:	ldrdeq	r0, [r0], -r4
    ebe0:	ldrdeq	r0, [r0], -r4
    ebe4:	ldrdeq	r0, [r0], -r4
    ebe8:	ldrdeq	r0, [r0], -r4
    ebec:	ldrdeq	r0, [r0], -r4
    ebf0:	ldrdeq	r0, [r0], -r4
    ebf4:	ldrdeq	r0, [r0], -r4
    ebf8:	ldrdeq	r0, [r0], -r4
    ebfc:	ldrdeq	r0, [r0], -r4
    ec00:	ldrdeq	r0, [r0], -r4
    ec04:	ldrdeq	r0, [r0], -r4
    ec08:	ldrdeq	r0, [r0], -r4
    ec0c:	ldrdeq	r0, [r0], -r4
    ec10:	ldrdeq	r0, [r0], -r4
    ec14:	ldrdeq	r0, [r0], -r4
    ec18:	ldrdeq	r0, [r0], -r4
    ec1c:	ldrdeq	r0, [r0], -r4
    ec20:	ldrdeq	r0, [r0], -r4
    ec24:	ldrdeq	r0, [r0], -r4
    ec28:	ldrdeq	r0, [r0], -r4
    ec2c:	ldrdeq	r0, [r0], -r4
    ec30:	ldrdeq	r0, [r0], -r4
    ec34:	ldrdeq	r0, [r0], -r4
    ec38:	ldrdeq	r0, [r0], -r4
    ec3c:	ldrdeq	r0, [r0], -r4
    ec40:	ldrdeq	r0, [r0], -r4
    ec44:	ldrdeq	r0, [r0], -r4
    ec48:	ldrdeq	r0, [r0], -r4
    ec4c:	ldrdeq	r0, [r0], -r4
    ec50:	ldrdeq	r0, [r0], -r4
    ec54:	ldrdeq	r0, [r0], -r4
    ec58:	ldrdeq	r0, [r0], -r4
    ec5c:	ldrdeq	r0, [r0], -r4
    ec60:	ldrdeq	r0, [r0], -r4
    ec64:	ldrdeq	r0, [r0], -r4
    ec68:	ldrdeq	r0, [r0], -r4
    ec6c:	ldrdeq	r0, [r0], -r4
    ec70:	ldrdeq	r0, [r0], -r4
    ec74:	ldrdeq	r0, [r0], -r4
    ec78:	ldrdeq	r0, [r0], -r4
    ec7c:	ldrdeq	r0, [r0], -r4
    ec80:	ldrdeq	r0, [r0], -r4
    ec84:	ldrdeq	r0, [r0], -r4
    ec88:	ldrdeq	r0, [r0], -r4
    ec8c:	ldrdeq	r0, [r0], -r4
    ec90:	ldrdeq	r0, [r0], -r4
    ec94:	ldrdeq	r0, [r0], -r4
    ec98:	ldrdeq	r0, [r0], -r4
    ec9c:	ldrdeq	r0, [r0], -r4
    eca0:	ldrdeq	r0, [r0], -r4
    eca4:	ldrdeq	r0, [r0], -r4
    eca8:	ldrdeq	r0, [r0], -r4
    ecac:	ldrdeq	r0, [r0], -r4
    ecb0:	ldrdeq	r0, [r0], -r4
    ecb4:	ldrdeq	r0, [r0], -r4
    ecb8:	ldrdeq	r0, [r0], -r4
    ecbc:	ldrdeq	r0, [r0], -r4
    ecc0:	ldrdeq	r0, [r0], -r4
    ecc4:	ldrdeq	r0, [r0], -r4
    ecc8:	ldrdeq	r0, [r0], -r4
    eccc:	ldrdeq	r0, [r0], -r4
    ecd0:	ldrdeq	r0, [r0], -r4
    ecd4:	ldrdeq	r0, [r0], -r4
    ecd8:	ldrdeq	r0, [r0], -r4
    ecdc:	ldrdeq	r0, [r0], -r4
    ece0:	ldrdeq	r0, [r0], -r4
    ece4:	ldrdeq	r0, [r0], -r4
    ece8:	ldrdeq	r0, [r0], -r4
    ecec:	ldrdeq	r0, [r0], -r4
    ecf0:	ldrdeq	r0, [r0], -r4
    ecf4:	ldrdeq	r0, [r0], -r4
    ecf8:	ldrdeq	r0, [r0], -r4
    ecfc:	ldrdeq	r0, [r0], -r4
    ed00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ed04:	cmp	r2, #2432	; 0x980
    ed08:	bge	edcc <lell_packet_is_data@@Base+0x18e8>
    ed0c:	movw	r1, #2036	; 0x7f4
    ed10:	sub	r1, r2, r1
    ed14:	cmp	r1, #28
    ed18:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ed1c:	movw	r1, #2302	; 0x8fe
    ed20:	sub	r1, r2, r1
    ed24:	cmp	r1, #4
    ed28:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ed2c:	cmp	r2, #2176	; 0x880
    ed30:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ed34:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ed38:	cmp	r2, #1152	; 0x480
    ed3c:	bge	ed9c <lell_packet_is_data@@Base+0x18b8>
    ed40:	sub	r1, r2, #1016	; 0x3f8
    ed44:	cmp	r1, #15
    ed48:	bhi	ed54 <lell_packet_is_data@@Base+0x1870>
    ed4c:	cmp	r1, #9
    ed50:	bne	eed0 <lell_packet_is_data@@Base+0x19ec>
    ed54:	movw	r1, #766	; 0x2fe
    ed58:	sub	r1, r2, r1
    ed5c:	cmp	r1, #4
    ed60:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ed64:	cmp	r2, #896	; 0x380
    ed68:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ed6c:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ed70:	cmp	r2, #4064	; 0xfe0
    ed74:	blt	eeb0 <lell_packet_is_data@@Base+0x19cc>
    ed78:	sub	r1, r2, #4064	; 0xfe0
    ed7c:	cmp	r1, #31
    ed80:	bhi	eed4 <lell_packet_is_data@@Base+0x19f0>
    ed84:	movw	r3, #1
    ed88:	mov	r2, #1
    ed8c:	movt	r3, #65535	; 0xffff
    ed90:	tst	r3, r2, lsl r1
    ed94:	addne	r0, r0, #1
    ed98:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ed9c:	movw	r1, #1531	; 0x5fb
    eda0:	cmp	r2, r1
    eda4:	ble	ee68 <lell_packet_is_data@@Base+0x1984>
    eda8:	cmp	r2, #1664	; 0x680
    edac:	bge	ee8c <lell_packet_is_data@@Base+0x19a8>
    edb0:	movw	r1, #1532	; 0x5fc
    edb4:	sub	r1, r2, r1
    edb8:	cmp	r1, #7
    edbc:	bhi	eed4 <lell_packet_is_data@@Base+0x19f0>
    edc0:	cmp	r1, #4
    edc4:	bne	eed0 <lell_packet_is_data@@Base+0x19ec>
    edc8:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    edcc:	cmp	r2, #2688	; 0xa80
    edd0:	bge	ee24 <lell_packet_is_data@@Base+0x1940>
    edd4:	movw	r1, #2556	; 0x9fc
    edd8:	sub	r1, r2, r1
    eddc:	cmp	r1, #7
    ede0:	bhi	edec <lell_packet_is_data@@Base+0x1908>
    ede4:	cmp	r1, #4
    ede8:	bne	eed0 <lell_packet_is_data@@Base+0x19ec>
    edec:	cmp	r2, #2432	; 0x980
    edf0:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    edf4:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    edf8:	movw	r1, #3580	; 0xdfc
    edfc:	sub	r1, r2, r1
    ee00:	cmp	r1, #8
    ee04:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee08:	movw	r1, #3326	; 0xcfe
    ee0c:	sub	r1, r2, r1
    ee10:	cmp	r1, #4
    ee14:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee18:	cmp	r2, #3456	; 0xd80
    ee1c:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee20:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ee24:	movw	r1, #2814	; 0xafe
    ee28:	sub	r1, r2, r1
    ee2c:	cmp	r1, #4
    ee30:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee34:	cmp	r2, #2688	; 0xa80
    ee38:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee3c:	cmp	r2, #2944	; 0xb80
    ee40:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee44:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ee48:	sub	r1, r2, #508	; 0x1fc
    ee4c:	cmp	r1, #7
    ee50:	bhi	ee5c <lell_packet_is_data@@Base+0x1978>
    ee54:	cmp	r1, #4
    ee58:	bne	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee5c:	cmp	r2, #640	; 0x280
    ee60:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee64:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ee68:	movw	r1, #1278	; 0x4fe
    ee6c:	sub	r1, r2, r1
    ee70:	cmp	r1, #4
    ee74:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee78:	cmp	r2, #1152	; 0x480
    ee7c:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee80:	cmp	r2, #1408	; 0x580
    ee84:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee88:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    ee8c:	movw	r1, #1790	; 0x6fe
    ee90:	sub	r1, r2, r1
    ee94:	cmp	r1, #4
    ee98:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    ee9c:	cmp	r2, #1664	; 0x680
    eea0:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    eea4:	cmp	r2, #1920	; 0x780
    eea8:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    eeac:	b	eed4 <lell_packet_is_data@@Base+0x19f0>
    eeb0:	movw	r1, #3838	; 0xefe
    eeb4:	sub	r1, r2, r1
    eeb8:	cmp	r1, #4
    eebc:	bcc	eed0 <lell_packet_is_data@@Base+0x19ec>
    eec0:	cmp	r2, #3712	; 0xe80
    eec4:	beq	eed0 <lell_packet_is_data@@Base+0x19ec>
    eec8:	cmp	r2, #3968	; 0xf80
    eecc:	bne	eed4 <lell_packet_is_data@@Base+0x19f0>
    eed0:	add	r0, r0, #1
    eed4:	ubfx	r3, ip, #12, #12
    eed8:	movw	r1, #2035	; 0x7f3
    eedc:	lsr	r2, ip, #16
    eee0:	cmp	r3, r1
    eee4:	ble	ef24 <lell_packet_is_data@@Base+0x1a40>
    eee8:	movw	r1, #3063	; 0xbf7
    eeec:	cmp	r3, r1
    eef0:	ble	f548 <lell_packet_is_data@@Base+0x2064>
    eef4:	cmp	r3, #3712	; 0xe80
    eef8:	bge	f5b4 <lell_packet_is_data@@Base+0x20d0>
    eefc:	movw	r1, #3325	; 0xcfd
    ef00:	cmp	r3, r1
    ef04:	bgt	f64c <lell_packet_is_data@@Base+0x2168>
    ef08:	movw	r1, #3064	; 0xbf8
    ef0c:	sub	r1, r3, r1
    ef10:	cmp	r1, #16
    ef14:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    ef18:	cmp	r3, #3200	; 0xc80
    ef1c:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    ef20:	b	f728 <lell_packet_is_data@@Base+0x2244>
    ef24:	movw	r1, #765	; 0x2fd
    ef28:	cmp	r3, r1
    ef2c:	bgt	f57c <lell_packet_is_data@@Base+0x2098>
    ef30:	cmp	r3, #384	; 0x180
    ef34:	bhi	f69c <lell_packet_is_data@@Base+0x21b8>
    ef38:	add	r1, pc, #4
    ef3c:	ldr	r3, [r1, r3, lsl #2]
    ef40:	add	pc, r1, r3
    ef44:	andeq	r0, r0, r0, ror #15
    ef48:	andeq	r0, r0, r0, ror #15
    ef4c:	andeq	r0, r0, r0, ror #15
    ef50:	andeq	r0, r0, r0, ror #15
    ef54:	andeq	r0, r0, r0, ror #15
    ef58:	andeq	r0, r0, r0, ror #15
    ef5c:	andeq	r0, r0, r0, ror #15
    ef60:	andeq	r0, r0, r0, ror #15
    ef64:	andeq	r0, r0, r0, ror #15
    ef68:	andeq	r0, r0, r0, ror #15
    ef6c:	andeq	r0, r0, r0, ror #15
    ef70:	andeq	r0, r0, r0, ror #15
    ef74:	andeq	r0, r0, r0, ror #15
    ef78:	andeq	r0, r0, r0, ror #15
    ef7c:	andeq	r0, r0, r0, ror #15
    ef80:	andeq	r0, r0, r0, ror #15
    ef84:	andeq	r0, r0, r0, ror #15
    ef88:	andeq	r0, r0, r0, ror #15
    ef8c:	andeq	r0, r0, r0, ror #15
    ef90:	andeq	r0, r0, r0, ror #15
    ef94:	andeq	r0, r0, r0, ror #15
    ef98:	andeq	r0, r0, r0, ror #15
    ef9c:	andeq	r0, r0, r0, ror #15
    efa0:	andeq	r0, r0, r0, ror #15
    efa4:	andeq	r0, r0, r0, ror #15
    efa8:	andeq	r0, r0, r0, ror #15
    efac:	andeq	r0, r0, r0, ror #15
    efb0:	andeq	r0, r0, r0, ror #15
    efb4:	andeq	r0, r0, r0, ror #15
    efb8:	andeq	r0, r0, r0, ror #15
    efbc:	andeq	r0, r0, r0, ror #15
    efc0:	andeq	r0, r0, r0, ror #15
    efc4:	andeq	r0, r0, r4, ror #15
    efc8:	andeq	r0, r0, r4, ror #15
    efcc:	andeq	r0, r0, r4, ror #15
    efd0:	andeq	r0, r0, r4, ror #15
    efd4:	andeq	r0, r0, r4, ror #15
    efd8:	andeq	r0, r0, r4, ror #15
    efdc:	andeq	r0, r0, r4, ror #15
    efe0:	andeq	r0, r0, r4, ror #15
    efe4:	andeq	r0, r0, r4, ror #15
    efe8:	andeq	r0, r0, r4, ror #15
    efec:	andeq	r0, r0, r4, ror #15
    eff0:	andeq	r0, r0, r4, ror #15
    eff4:	andeq	r0, r0, r4, ror #15
    eff8:	andeq	r0, r0, r4, ror #15
    effc:	andeq	r0, r0, r4, ror #15
    f000:	andeq	r0, r0, r4, ror #15
    f004:	andeq	r0, r0, r4, ror #15
    f008:	andeq	r0, r0, r4, ror #15
    f00c:	andeq	r0, r0, r4, ror #15
    f010:	andeq	r0, r0, r4, ror #15
    f014:	andeq	r0, r0, r4, ror #15
    f018:	andeq	r0, r0, r4, ror #15
    f01c:	andeq	r0, r0, r4, ror #15
    f020:	andeq	r0, r0, r4, ror #15
    f024:	andeq	r0, r0, r4, ror #15
    f028:	andeq	r0, r0, r4, ror #15
    f02c:	andeq	r0, r0, r4, ror #15
    f030:	andeq	r0, r0, r4, ror #15
    f034:	andeq	r0, r0, r4, ror #15
    f038:	andeq	r0, r0, r4, ror #15
    f03c:	andeq	r0, r0, r4, ror #15
    f040:	andeq	r0, r0, r4, ror #15
    f044:	andeq	r0, r0, r4, ror #15
    f048:	andeq	r0, r0, r4, ror #15
    f04c:	andeq	r0, r0, r4, ror #15
    f050:	andeq	r0, r0, r4, ror #15
    f054:	andeq	r0, r0, r4, ror #15
    f058:	andeq	r0, r0, r4, ror #15
    f05c:	andeq	r0, r0, r4, ror #15
    f060:	andeq	r0, r0, r4, ror #15
    f064:	andeq	r0, r0, r4, ror #15
    f068:	andeq	r0, r0, r4, ror #15
    f06c:	andeq	r0, r0, r4, ror #15
    f070:	andeq	r0, r0, r4, ror #15
    f074:	andeq	r0, r0, r4, ror #15
    f078:	andeq	r0, r0, r4, ror #15
    f07c:	andeq	r0, r0, r4, ror #15
    f080:	andeq	r0, r0, r4, ror #15
    f084:	andeq	r0, r0, r4, ror #15
    f088:	andeq	r0, r0, r4, ror #15
    f08c:	andeq	r0, r0, r4, ror #15
    f090:	andeq	r0, r0, r4, ror #15
    f094:	andeq	r0, r0, r4, ror #15
    f098:	andeq	r0, r0, r4, ror #15
    f09c:	andeq	r0, r0, r4, ror #15
    f0a0:	andeq	r0, r0, r4, ror #15
    f0a4:	andeq	r0, r0, r4, ror #15
    f0a8:	andeq	r0, r0, r4, ror #15
    f0ac:	andeq	r0, r0, r4, ror #15
    f0b0:	andeq	r0, r0, r4, ror #15
    f0b4:	andeq	r0, r0, r4, ror #15
    f0b8:	andeq	r0, r0, r4, ror #15
    f0bc:	andeq	r0, r0, r4, ror #15
    f0c0:	andeq	r0, r0, r4, ror #15
    f0c4:	andeq	r0, r0, r4, ror #15
    f0c8:	andeq	r0, r0, r4, ror #15
    f0cc:	andeq	r0, r0, r4, ror #15
    f0d0:	andeq	r0, r0, r4, ror #15
    f0d4:	andeq	r0, r0, r4, ror #15
    f0d8:	andeq	r0, r0, r4, ror #15
    f0dc:	andeq	r0, r0, r4, ror #15
    f0e0:	andeq	r0, r0, r4, ror #15
    f0e4:	andeq	r0, r0, r4, ror #15
    f0e8:	andeq	r0, r0, r4, ror #15
    f0ec:	andeq	r0, r0, r4, ror #15
    f0f0:	andeq	r0, r0, r4, ror #15
    f0f4:	andeq	r0, r0, r4, ror #15
    f0f8:	andeq	r0, r0, r4, ror #15
    f0fc:	andeq	r0, r0, r4, ror #15
    f100:	andeq	r0, r0, r4, ror #15
    f104:	andeq	r0, r0, r4, ror #15
    f108:	andeq	r0, r0, r4, ror #15
    f10c:	andeq	r0, r0, r4, ror #15
    f110:	andeq	r0, r0, r4, ror #15
    f114:	andeq	r0, r0, r4, ror #15
    f118:	andeq	r0, r0, r4, ror #15
    f11c:	andeq	r0, r0, r4, ror #15
    f120:	andeq	r0, r0, r4, ror #15
    f124:	andeq	r0, r0, r4, ror #15
    f128:	andeq	r0, r0, r4, ror #15
    f12c:	andeq	r0, r0, r4, ror #15
    f130:	andeq	r0, r0, r4, ror #15
    f134:	andeq	r0, r0, r4, ror #15
    f138:	andeq	r0, r0, r4, ror #15
    f13c:	andeq	r0, r0, r4, ror #15
    f140:	andeq	r0, r0, r0, ror #15
    f144:	andeq	r0, r0, r0, ror #15
    f148:	andeq	r0, r0, r4, ror #15
    f14c:	andeq	r0, r0, r4, ror #15
    f150:	andeq	r0, r0, r4, ror #15
    f154:	andeq	r0, r0, r4, ror #15
    f158:	andeq	r0, r0, r4, ror #15
    f15c:	andeq	r0, r0, r4, ror #15
    f160:	andeq	r0, r0, r4, ror #15
    f164:	andeq	r0, r0, r4, ror #15
    f168:	andeq	r0, r0, r4, ror #15
    f16c:	andeq	r0, r0, r4, ror #15
    f170:	andeq	r0, r0, r4, ror #15
    f174:	andeq	r0, r0, r4, ror #15
    f178:	andeq	r0, r0, r4, ror #15
    f17c:	andeq	r0, r0, r4, ror #15
    f180:	andeq	r0, r0, r4, ror #15
    f184:	andeq	r0, r0, r4, ror #15
    f188:	andeq	r0, r0, r4, ror #15
    f18c:	andeq	r0, r0, r4, ror #15
    f190:	andeq	r0, r0, r4, ror #15
    f194:	andeq	r0, r0, r4, ror #15
    f198:	andeq	r0, r0, r4, ror #15
    f19c:	andeq	r0, r0, r4, ror #15
    f1a0:	andeq	r0, r0, r4, ror #15
    f1a4:	andeq	r0, r0, r4, ror #15
    f1a8:	andeq	r0, r0, r4, ror #15
    f1ac:	andeq	r0, r0, r4, ror #15
    f1b0:	andeq	r0, r0, r4, ror #15
    f1b4:	andeq	r0, r0, r4, ror #15
    f1b8:	andeq	r0, r0, r4, ror #15
    f1bc:	andeq	r0, r0, r4, ror #15
    f1c0:	andeq	r0, r0, r4, ror #15
    f1c4:	andeq	r0, r0, r4, ror #15
    f1c8:	andeq	r0, r0, r4, ror #15
    f1cc:	andeq	r0, r0, r4, ror #15
    f1d0:	andeq	r0, r0, r4, ror #15
    f1d4:	andeq	r0, r0, r4, ror #15
    f1d8:	andeq	r0, r0, r4, ror #15
    f1dc:	andeq	r0, r0, r4, ror #15
    f1e0:	andeq	r0, r0, r4, ror #15
    f1e4:	andeq	r0, r0, r4, ror #15
    f1e8:	andeq	r0, r0, r4, ror #15
    f1ec:	andeq	r0, r0, r4, ror #15
    f1f0:	andeq	r0, r0, r4, ror #15
    f1f4:	andeq	r0, r0, r4, ror #15
    f1f8:	andeq	r0, r0, r4, ror #15
    f1fc:	andeq	r0, r0, r4, ror #15
    f200:	andeq	r0, r0, r4, ror #15
    f204:	andeq	r0, r0, r4, ror #15
    f208:	andeq	r0, r0, r4, ror #15
    f20c:	andeq	r0, r0, r4, ror #15
    f210:	andeq	r0, r0, r4, ror #15
    f214:	andeq	r0, r0, r4, ror #15
    f218:	andeq	r0, r0, r4, ror #15
    f21c:	andeq	r0, r0, r4, ror #15
    f220:	andeq	r0, r0, r4, ror #15
    f224:	andeq	r0, r0, r4, ror #15
    f228:	andeq	r0, r0, r4, ror #15
    f22c:	andeq	r0, r0, r4, ror #15
    f230:	andeq	r0, r0, r4, ror #15
    f234:	andeq	r0, r0, r4, ror #15
    f238:	andeq	r0, r0, r4, ror #15
    f23c:	andeq	r0, r0, r4, ror #15
    f240:	andeq	r0, r0, r4, ror #15
    f244:	andeq	r0, r0, r4, ror #15
    f248:	andeq	r0, r0, r4, ror #15
    f24c:	andeq	r0, r0, r4, ror #15
    f250:	andeq	r0, r0, r4, ror #15
    f254:	andeq	r0, r0, r4, ror #15
    f258:	andeq	r0, r0, r4, ror #15
    f25c:	andeq	r0, r0, r4, ror #15
    f260:	andeq	r0, r0, r4, ror #15
    f264:	andeq	r0, r0, r4, ror #15
    f268:	andeq	r0, r0, r4, ror #15
    f26c:	andeq	r0, r0, r4, ror #15
    f270:	andeq	r0, r0, r4, ror #15
    f274:	andeq	r0, r0, r4, ror #15
    f278:	andeq	r0, r0, r4, ror #15
    f27c:	andeq	r0, r0, r4, ror #15
    f280:	andeq	r0, r0, r4, ror #15
    f284:	andeq	r0, r0, r4, ror #15
    f288:	andeq	r0, r0, r4, ror #15
    f28c:	andeq	r0, r0, r4, ror #15
    f290:	andeq	r0, r0, r4, ror #15
    f294:	andeq	r0, r0, r4, ror #15
    f298:	andeq	r0, r0, r4, ror #15
    f29c:	andeq	r0, r0, r4, ror #15
    f2a0:	andeq	r0, r0, r4, ror #15
    f2a4:	andeq	r0, r0, r4, ror #15
    f2a8:	andeq	r0, r0, r4, ror #15
    f2ac:	andeq	r0, r0, r4, ror #15
    f2b0:	andeq	r0, r0, r4, ror #15
    f2b4:	andeq	r0, r0, r4, ror #15
    f2b8:	andeq	r0, r0, r4, ror #15
    f2bc:	andeq	r0, r0, r4, ror #15
    f2c0:	andeq	r0, r0, r4, ror #15
    f2c4:	andeq	r0, r0, r4, ror #15
    f2c8:	andeq	r0, r0, r4, ror #15
    f2cc:	andeq	r0, r0, r4, ror #15
    f2d0:	andeq	r0, r0, r4, ror #15
    f2d4:	andeq	r0, r0, r4, ror #15
    f2d8:	andeq	r0, r0, r4, ror #15
    f2dc:	andeq	r0, r0, r4, ror #15
    f2e0:	andeq	r0, r0, r4, ror #15
    f2e4:	andeq	r0, r0, r4, ror #15
    f2e8:	andeq	r0, r0, r4, ror #15
    f2ec:	andeq	r0, r0, r4, ror #15
    f2f0:	andeq	r0, r0, r4, ror #15
    f2f4:	andeq	r0, r0, r4, ror #15
    f2f8:	andeq	r0, r0, r4, ror #15
    f2fc:	andeq	r0, r0, r4, ror #15
    f300:	andeq	r0, r0, r4, ror #15
    f304:	andeq	r0, r0, r4, ror #15
    f308:	andeq	r0, r0, r4, ror #15
    f30c:	andeq	r0, r0, r4, ror #15
    f310:	andeq	r0, r0, r4, ror #15
    f314:	andeq	r0, r0, r4, ror #15
    f318:	andeq	r0, r0, r4, ror #15
    f31c:	andeq	r0, r0, r4, ror #15
    f320:	andeq	r0, r0, r4, ror #15
    f324:	andeq	r0, r0, r4, ror #15
    f328:	andeq	r0, r0, r4, ror #15
    f32c:	andeq	r0, r0, r4, ror #15
    f330:	andeq	r0, r0, r4, ror #15
    f334:	andeq	r0, r0, r4, ror #15
    f338:	andeq	r0, r0, r4, ror #15
    f33c:	andeq	r0, r0, r0, ror #15
    f340:	andeq	r0, r0, r0, ror #15
    f344:	andeq	r0, r0, r0, ror #15
    f348:	andeq	r0, r0, r0, ror #15
    f34c:	andeq	r0, r0, r4, ror #15
    f350:	andeq	r0, r0, r4, ror #15
    f354:	andeq	r0, r0, r4, ror #15
    f358:	andeq	r0, r0, r4, ror #15
    f35c:	andeq	r0, r0, r4, ror #15
    f360:	andeq	r0, r0, r4, ror #15
    f364:	andeq	r0, r0, r4, ror #15
    f368:	andeq	r0, r0, r4, ror #15
    f36c:	andeq	r0, r0, r4, ror #15
    f370:	andeq	r0, r0, r4, ror #15
    f374:	andeq	r0, r0, r4, ror #15
    f378:	andeq	r0, r0, r4, ror #15
    f37c:	andeq	r0, r0, r4, ror #15
    f380:	andeq	r0, r0, r4, ror #15
    f384:	andeq	r0, r0, r4, ror #15
    f388:	andeq	r0, r0, r4, ror #15
    f38c:	andeq	r0, r0, r4, ror #15
    f390:	andeq	r0, r0, r4, ror #15
    f394:	andeq	r0, r0, r4, ror #15
    f398:	andeq	r0, r0, r4, ror #15
    f39c:	andeq	r0, r0, r4, ror #15
    f3a0:	andeq	r0, r0, r4, ror #15
    f3a4:	andeq	r0, r0, r4, ror #15
    f3a8:	andeq	r0, r0, r4, ror #15
    f3ac:	andeq	r0, r0, r4, ror #15
    f3b0:	andeq	r0, r0, r4, ror #15
    f3b4:	andeq	r0, r0, r4, ror #15
    f3b8:	andeq	r0, r0, r4, ror #15
    f3bc:	andeq	r0, r0, r4, ror #15
    f3c0:	andeq	r0, r0, r4, ror #15
    f3c4:	andeq	r0, r0, r4, ror #15
    f3c8:	andeq	r0, r0, r4, ror #15
    f3cc:	andeq	r0, r0, r4, ror #15
    f3d0:	andeq	r0, r0, r4, ror #15
    f3d4:	andeq	r0, r0, r4, ror #15
    f3d8:	andeq	r0, r0, r4, ror #15
    f3dc:	andeq	r0, r0, r4, ror #15
    f3e0:	andeq	r0, r0, r4, ror #15
    f3e4:	andeq	r0, r0, r4, ror #15
    f3e8:	andeq	r0, r0, r4, ror #15
    f3ec:	andeq	r0, r0, r4, ror #15
    f3f0:	andeq	r0, r0, r4, ror #15
    f3f4:	andeq	r0, r0, r4, ror #15
    f3f8:	andeq	r0, r0, r4, ror #15
    f3fc:	andeq	r0, r0, r4, ror #15
    f400:	andeq	r0, r0, r4, ror #15
    f404:	andeq	r0, r0, r4, ror #15
    f408:	andeq	r0, r0, r4, ror #15
    f40c:	andeq	r0, r0, r4, ror #15
    f410:	andeq	r0, r0, r4, ror #15
    f414:	andeq	r0, r0, r4, ror #15
    f418:	andeq	r0, r0, r4, ror #15
    f41c:	andeq	r0, r0, r4, ror #15
    f420:	andeq	r0, r0, r4, ror #15
    f424:	andeq	r0, r0, r4, ror #15
    f428:	andeq	r0, r0, r4, ror #15
    f42c:	andeq	r0, r0, r4, ror #15
    f430:	andeq	r0, r0, r4, ror #15
    f434:	andeq	r0, r0, r4, ror #15
    f438:	andeq	r0, r0, r4, ror #15
    f43c:	andeq	r0, r0, r4, ror #15
    f440:	andeq	r0, r0, r4, ror #15
    f444:	andeq	r0, r0, r4, ror #15
    f448:	andeq	r0, r0, r4, ror #15
    f44c:	andeq	r0, r0, r4, ror #15
    f450:	andeq	r0, r0, r4, ror #15
    f454:	andeq	r0, r0, r4, ror #15
    f458:	andeq	r0, r0, r4, ror #15
    f45c:	andeq	r0, r0, r4, ror #15
    f460:	andeq	r0, r0, r4, ror #15
    f464:	andeq	r0, r0, r4, ror #15
    f468:	andeq	r0, r0, r4, ror #15
    f46c:	andeq	r0, r0, r4, ror #15
    f470:	andeq	r0, r0, r4, ror #15
    f474:	andeq	r0, r0, r4, ror #15
    f478:	andeq	r0, r0, r4, ror #15
    f47c:	andeq	r0, r0, r4, ror #15
    f480:	andeq	r0, r0, r4, ror #15
    f484:	andeq	r0, r0, r4, ror #15
    f488:	andeq	r0, r0, r4, ror #15
    f48c:	andeq	r0, r0, r4, ror #15
    f490:	andeq	r0, r0, r4, ror #15
    f494:	andeq	r0, r0, r4, ror #15
    f498:	andeq	r0, r0, r4, ror #15
    f49c:	andeq	r0, r0, r4, ror #15
    f4a0:	andeq	r0, r0, r4, ror #15
    f4a4:	andeq	r0, r0, r4, ror #15
    f4a8:	andeq	r0, r0, r4, ror #15
    f4ac:	andeq	r0, r0, r4, ror #15
    f4b0:	andeq	r0, r0, r4, ror #15
    f4b4:	andeq	r0, r0, r4, ror #15
    f4b8:	andeq	r0, r0, r4, ror #15
    f4bc:	andeq	r0, r0, r4, ror #15
    f4c0:	andeq	r0, r0, r4, ror #15
    f4c4:	andeq	r0, r0, r4, ror #15
    f4c8:	andeq	r0, r0, r4, ror #15
    f4cc:	andeq	r0, r0, r4, ror #15
    f4d0:	andeq	r0, r0, r4, ror #15
    f4d4:	andeq	r0, r0, r4, ror #15
    f4d8:	andeq	r0, r0, r4, ror #15
    f4dc:	andeq	r0, r0, r4, ror #15
    f4e0:	andeq	r0, r0, r4, ror #15
    f4e4:	andeq	r0, r0, r4, ror #15
    f4e8:	andeq	r0, r0, r4, ror #15
    f4ec:	andeq	r0, r0, r4, ror #15
    f4f0:	andeq	r0, r0, r4, ror #15
    f4f4:	andeq	r0, r0, r4, ror #15
    f4f8:	andeq	r0, r0, r4, ror #15
    f4fc:	andeq	r0, r0, r4, ror #15
    f500:	andeq	r0, r0, r4, ror #15
    f504:	andeq	r0, r0, r4, ror #15
    f508:	andeq	r0, r0, r4, ror #15
    f50c:	andeq	r0, r0, r4, ror #15
    f510:	andeq	r0, r0, r4, ror #15
    f514:	andeq	r0, r0, r4, ror #15
    f518:	andeq	r0, r0, r4, ror #15
    f51c:	andeq	r0, r0, r4, ror #15
    f520:	andeq	r0, r0, r4, ror #15
    f524:	andeq	r0, r0, r4, ror #15
    f528:	andeq	r0, r0, r4, ror #15
    f52c:	andeq	r0, r0, r4, ror #15
    f530:	andeq	r0, r0, r4, ror #15
    f534:	andeq	r0, r0, r4, ror #15
    f538:	andeq	r0, r0, r4, ror #15
    f53c:	andeq	r0, r0, r4, ror #15
    f540:	andeq	r0, r0, r4, ror #15
    f544:	andeq	r0, r0, r0, ror #15
    f548:	cmp	r3, #2432	; 0x980
    f54c:	bge	f620 <lell_packet_is_data@@Base+0x213c>
    f550:	movw	r1, #2036	; 0x7f4
    f554:	sub	r1, r3, r1
    f558:	cmp	r1, #28
    f55c:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f560:	movw	r1, #2302	; 0x8fe
    f564:	sub	r1, r3, r1
    f568:	cmp	r1, #4
    f56c:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f570:	cmp	r3, #2176	; 0x880
    f574:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f578:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f57c:	cmp	r3, #1152	; 0x480
    f580:	bge	f5f0 <lell_packet_is_data@@Base+0x210c>
    f584:	sub	r1, r3, #1016	; 0x3f8
    f588:	cmp	r1, #15
    f58c:	bhi	f598 <lell_packet_is_data@@Base+0x20b4>
    f590:	cmp	r1, #9
    f594:	bne	f724 <lell_packet_is_data@@Base+0x2240>
    f598:	movw	r1, #766	; 0x2fe
    f59c:	sub	r1, r3, r1
    f5a0:	cmp	r1, #4
    f5a4:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f5a8:	cmp	r3, #896	; 0x380
    f5ac:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f5b0:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f5b4:	cmp	r3, #4064	; 0xfe0
    f5b8:	blt	f704 <lell_packet_is_data@@Base+0x2220>
    f5bc:	sub	r1, r3, #4064	; 0xfe0
    f5c0:	cmp	r1, #31
    f5c4:	bhi	f728 <lell_packet_is_data@@Base+0x2244>
    f5c8:	movw	r5, #1
    f5cc:	mov	r3, #1
    f5d0:	movt	r5, #65535	; 0xffff
    f5d4:	tst	r5, r3, lsl r1
    f5d8:	addne	r0, r0, #1
    f5dc:	bfc	r2, #12, #20
    f5e0:	movw	r1, #2035	; 0x7f3
    f5e4:	cmp	r2, r1
    f5e8:	bgt	f738 <lell_packet_is_data@@Base+0x2254>
    f5ec:	b	f774 <lell_packet_is_data@@Base+0x2290>
    f5f0:	movw	r1, #1531	; 0x5fb
    f5f4:	cmp	r3, r1
    f5f8:	ble	f6bc <lell_packet_is_data@@Base+0x21d8>
    f5fc:	cmp	r3, #1664	; 0x680
    f600:	bge	f6e0 <lell_packet_is_data@@Base+0x21fc>
    f604:	movw	r1, #1532	; 0x5fc
    f608:	sub	r1, r3, r1
    f60c:	cmp	r1, #7
    f610:	bhi	f728 <lell_packet_is_data@@Base+0x2244>
    f614:	cmp	r1, #4
    f618:	bne	f724 <lell_packet_is_data@@Base+0x2240>
    f61c:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f620:	cmp	r3, #2688	; 0xa80
    f624:	bge	f678 <lell_packet_is_data@@Base+0x2194>
    f628:	movw	r1, #2556	; 0x9fc
    f62c:	sub	r1, r3, r1
    f630:	cmp	r1, #7
    f634:	bhi	f640 <lell_packet_is_data@@Base+0x215c>
    f638:	cmp	r1, #4
    f63c:	bne	f724 <lell_packet_is_data@@Base+0x2240>
    f640:	cmp	r3, #2432	; 0x980
    f644:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f648:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f64c:	movw	r1, #3580	; 0xdfc
    f650:	sub	r1, r3, r1
    f654:	cmp	r1, #8
    f658:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f65c:	movw	r1, #3326	; 0xcfe
    f660:	sub	r1, r3, r1
    f664:	cmp	r1, #4
    f668:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f66c:	cmp	r3, #3456	; 0xd80
    f670:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f674:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f678:	movw	r1, #2814	; 0xafe
    f67c:	sub	r1, r3, r1
    f680:	cmp	r1, #4
    f684:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f688:	cmp	r3, #2688	; 0xa80
    f68c:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f690:	cmp	r3, #2944	; 0xb80
    f694:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f698:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f69c:	sub	r1, r3, #508	; 0x1fc
    f6a0:	cmp	r1, #7
    f6a4:	bhi	f6b0 <lell_packet_is_data@@Base+0x21cc>
    f6a8:	cmp	r1, #4
    f6ac:	bne	f724 <lell_packet_is_data@@Base+0x2240>
    f6b0:	cmp	r3, #640	; 0x280
    f6b4:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f6b8:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f6bc:	movw	r1, #1278	; 0x4fe
    f6c0:	sub	r1, r3, r1
    f6c4:	cmp	r1, #4
    f6c8:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f6cc:	cmp	r3, #1152	; 0x480
    f6d0:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f6d4:	cmp	r3, #1408	; 0x580
    f6d8:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f6dc:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f6e0:	movw	r1, #1790	; 0x6fe
    f6e4:	sub	r1, r3, r1
    f6e8:	cmp	r1, #4
    f6ec:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f6f0:	cmp	r3, #1664	; 0x680
    f6f4:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f6f8:	cmp	r3, #1920	; 0x780
    f6fc:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f700:	b	f728 <lell_packet_is_data@@Base+0x2244>
    f704:	movw	r1, #3838	; 0xefe
    f708:	sub	r1, r3, r1
    f70c:	cmp	r1, #4
    f710:	bcc	f724 <lell_packet_is_data@@Base+0x2240>
    f714:	cmp	r3, #3712	; 0xe80
    f718:	beq	f724 <lell_packet_is_data@@Base+0x2240>
    f71c:	cmp	r3, #3968	; 0xf80
    f720:	bne	f728 <lell_packet_is_data@@Base+0x2244>
    f724:	add	r0, r0, #1
    f728:	bfc	r2, #12, #20
    f72c:	movw	r1, #2035	; 0x7f3
    f730:	cmp	r2, r1
    f734:	ble	f774 <lell_packet_is_data@@Base+0x2290>
    f738:	movw	r1, #3063	; 0xbf7
    f73c:	cmp	r2, r1
    f740:	ble	fd98 <lell_packet_is_data@@Base+0x28b4>
    f744:	cmp	r2, #3712	; 0xe80
    f748:	bge	fe04 <lell_packet_is_data@@Base+0x2920>
    f74c:	movw	r1, #3325	; 0xcfd
    f750:	cmp	r2, r1
    f754:	bgt	fe9c <lell_packet_is_data@@Base+0x29b8>
    f758:	movw	r1, #3064	; 0xbf8
    f75c:	sub	r1, r2, r1
    f760:	cmp	r1, #16
    f764:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    f768:	cmp	r2, #3200	; 0xc80
    f76c:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    f770:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    f774:	movw	r1, #765	; 0x2fd
    f778:	cmp	r2, r1
    f77c:	bgt	fdcc <lell_packet_is_data@@Base+0x28e8>
    f780:	cmp	r2, #384	; 0x180
    f784:	bhi	feec <lell_packet_is_data@@Base+0x2a08>
    f788:	add	r1, pc, #4
    f78c:	ldr	r2, [r1, r2, lsl #2]
    f790:	add	pc, r1, r2
    f794:	andeq	r0, r0, r0, ror #15
    f798:	andeq	r0, r0, r0, ror #15
    f79c:	andeq	r0, r0, r0, ror #15
    f7a0:	andeq	r0, r0, r0, ror #15
    f7a4:	andeq	r0, r0, r0, ror #15
    f7a8:	andeq	r0, r0, r0, ror #15
    f7ac:	andeq	r0, r0, r0, ror #15
    f7b0:	andeq	r0, r0, r0, ror #15
    f7b4:	andeq	r0, r0, r0, ror #15
    f7b8:	andeq	r0, r0, r0, ror #15
    f7bc:	andeq	r0, r0, r0, ror #15
    f7c0:	andeq	r0, r0, r0, ror #15
    f7c4:	andeq	r0, r0, r0, ror #15
    f7c8:	andeq	r0, r0, r0, ror #15
    f7cc:	andeq	r0, r0, r0, ror #15
    f7d0:	andeq	r0, r0, r0, ror #15
    f7d4:	andeq	r0, r0, r0, ror #15
    f7d8:	andeq	r0, r0, r0, ror #15
    f7dc:	andeq	r0, r0, r0, ror #15
    f7e0:	andeq	r0, r0, r0, ror #15
    f7e4:	andeq	r0, r0, r0, ror #15
    f7e8:	andeq	r0, r0, r0, ror #15
    f7ec:	andeq	r0, r0, r0, ror #15
    f7f0:	andeq	r0, r0, r0, ror #15
    f7f4:	andeq	r0, r0, r0, ror #15
    f7f8:	andeq	r0, r0, r0, ror #15
    f7fc:	andeq	r0, r0, r0, ror #15
    f800:	andeq	r0, r0, r0, ror #15
    f804:	andeq	r0, r0, r0, ror #15
    f808:	andeq	r0, r0, r0, ror #15
    f80c:	andeq	r0, r0, r0, ror #15
    f810:	andeq	r0, r0, r0, ror #15
    f814:	andeq	r0, r0, r4, ror #15
    f818:	andeq	r0, r0, r4, ror #15
    f81c:	andeq	r0, r0, r4, ror #15
    f820:	andeq	r0, r0, r4, ror #15
    f824:	andeq	r0, r0, r4, ror #15
    f828:	andeq	r0, r0, r4, ror #15
    f82c:	andeq	r0, r0, r4, ror #15
    f830:	andeq	r0, r0, r4, ror #15
    f834:	andeq	r0, r0, r4, ror #15
    f838:	andeq	r0, r0, r4, ror #15
    f83c:	andeq	r0, r0, r4, ror #15
    f840:	andeq	r0, r0, r4, ror #15
    f844:	andeq	r0, r0, r4, ror #15
    f848:	andeq	r0, r0, r4, ror #15
    f84c:	andeq	r0, r0, r4, ror #15
    f850:	andeq	r0, r0, r4, ror #15
    f854:	andeq	r0, r0, r4, ror #15
    f858:	andeq	r0, r0, r4, ror #15
    f85c:	andeq	r0, r0, r4, ror #15
    f860:	andeq	r0, r0, r4, ror #15
    f864:	andeq	r0, r0, r4, ror #15
    f868:	andeq	r0, r0, r4, ror #15
    f86c:	andeq	r0, r0, r4, ror #15
    f870:	andeq	r0, r0, r4, ror #15
    f874:	andeq	r0, r0, r4, ror #15
    f878:	andeq	r0, r0, r4, ror #15
    f87c:	andeq	r0, r0, r4, ror #15
    f880:	andeq	r0, r0, r4, ror #15
    f884:	andeq	r0, r0, r4, ror #15
    f888:	andeq	r0, r0, r4, ror #15
    f88c:	andeq	r0, r0, r4, ror #15
    f890:	andeq	r0, r0, r4, ror #15
    f894:	andeq	r0, r0, r4, ror #15
    f898:	andeq	r0, r0, r4, ror #15
    f89c:	andeq	r0, r0, r4, ror #15
    f8a0:	andeq	r0, r0, r4, ror #15
    f8a4:	andeq	r0, r0, r4, ror #15
    f8a8:	andeq	r0, r0, r4, ror #15
    f8ac:	andeq	r0, r0, r4, ror #15
    f8b0:	andeq	r0, r0, r4, ror #15
    f8b4:	andeq	r0, r0, r4, ror #15
    f8b8:	andeq	r0, r0, r4, ror #15
    f8bc:	andeq	r0, r0, r4, ror #15
    f8c0:	andeq	r0, r0, r4, ror #15
    f8c4:	andeq	r0, r0, r4, ror #15
    f8c8:	andeq	r0, r0, r4, ror #15
    f8cc:	andeq	r0, r0, r4, ror #15
    f8d0:	andeq	r0, r0, r4, ror #15
    f8d4:	andeq	r0, r0, r4, ror #15
    f8d8:	andeq	r0, r0, r4, ror #15
    f8dc:	andeq	r0, r0, r4, ror #15
    f8e0:	andeq	r0, r0, r4, ror #15
    f8e4:	andeq	r0, r0, r4, ror #15
    f8e8:	andeq	r0, r0, r4, ror #15
    f8ec:	andeq	r0, r0, r4, ror #15
    f8f0:	andeq	r0, r0, r4, ror #15
    f8f4:	andeq	r0, r0, r4, ror #15
    f8f8:	andeq	r0, r0, r4, ror #15
    f8fc:	andeq	r0, r0, r4, ror #15
    f900:	andeq	r0, r0, r4, ror #15
    f904:	andeq	r0, r0, r4, ror #15
    f908:	andeq	r0, r0, r4, ror #15
    f90c:	andeq	r0, r0, r4, ror #15
    f910:	andeq	r0, r0, r4, ror #15
    f914:	andeq	r0, r0, r4, ror #15
    f918:	andeq	r0, r0, r4, ror #15
    f91c:	andeq	r0, r0, r4, ror #15
    f920:	andeq	r0, r0, r4, ror #15
    f924:	andeq	r0, r0, r4, ror #15
    f928:	andeq	r0, r0, r4, ror #15
    f92c:	andeq	r0, r0, r4, ror #15
    f930:	andeq	r0, r0, r4, ror #15
    f934:	andeq	r0, r0, r4, ror #15
    f938:	andeq	r0, r0, r4, ror #15
    f93c:	andeq	r0, r0, r4, ror #15
    f940:	andeq	r0, r0, r4, ror #15
    f944:	andeq	r0, r0, r4, ror #15
    f948:	andeq	r0, r0, r4, ror #15
    f94c:	andeq	r0, r0, r4, ror #15
    f950:	andeq	r0, r0, r4, ror #15
    f954:	andeq	r0, r0, r4, ror #15
    f958:	andeq	r0, r0, r4, ror #15
    f95c:	andeq	r0, r0, r4, ror #15
    f960:	andeq	r0, r0, r4, ror #15
    f964:	andeq	r0, r0, r4, ror #15
    f968:	andeq	r0, r0, r4, ror #15
    f96c:	andeq	r0, r0, r4, ror #15
    f970:	andeq	r0, r0, r4, ror #15
    f974:	andeq	r0, r0, r4, ror #15
    f978:	andeq	r0, r0, r4, ror #15
    f97c:	andeq	r0, r0, r4, ror #15
    f980:	andeq	r0, r0, r4, ror #15
    f984:	andeq	r0, r0, r4, ror #15
    f988:	andeq	r0, r0, r4, ror #15
    f98c:	andeq	r0, r0, r4, ror #15
    f990:	andeq	r0, r0, r0, ror #15
    f994:	andeq	r0, r0, r0, ror #15
    f998:	andeq	r0, r0, r4, ror #15
    f99c:	andeq	r0, r0, r4, ror #15
    f9a0:	andeq	r0, r0, r4, ror #15
    f9a4:	andeq	r0, r0, r4, ror #15
    f9a8:	andeq	r0, r0, r4, ror #15
    f9ac:	andeq	r0, r0, r4, ror #15
    f9b0:	andeq	r0, r0, r4, ror #15
    f9b4:	andeq	r0, r0, r4, ror #15
    f9b8:	andeq	r0, r0, r4, ror #15
    f9bc:	andeq	r0, r0, r4, ror #15
    f9c0:	andeq	r0, r0, r4, ror #15
    f9c4:	andeq	r0, r0, r4, ror #15
    f9c8:	andeq	r0, r0, r4, ror #15
    f9cc:	andeq	r0, r0, r4, ror #15
    f9d0:	andeq	r0, r0, r4, ror #15
    f9d4:	andeq	r0, r0, r4, ror #15
    f9d8:	andeq	r0, r0, r4, ror #15
    f9dc:	andeq	r0, r0, r4, ror #15
    f9e0:	andeq	r0, r0, r4, ror #15
    f9e4:	andeq	r0, r0, r4, ror #15
    f9e8:	andeq	r0, r0, r4, ror #15
    f9ec:	andeq	r0, r0, r4, ror #15
    f9f0:	andeq	r0, r0, r4, ror #15
    f9f4:	andeq	r0, r0, r4, ror #15
    f9f8:	andeq	r0, r0, r4, ror #15
    f9fc:	andeq	r0, r0, r4, ror #15
    fa00:	andeq	r0, r0, r4, ror #15
    fa04:	andeq	r0, r0, r4, ror #15
    fa08:	andeq	r0, r0, r4, ror #15
    fa0c:	andeq	r0, r0, r4, ror #15
    fa10:	andeq	r0, r0, r4, ror #15
    fa14:	andeq	r0, r0, r4, ror #15
    fa18:	andeq	r0, r0, r4, ror #15
    fa1c:	andeq	r0, r0, r4, ror #15
    fa20:	andeq	r0, r0, r4, ror #15
    fa24:	andeq	r0, r0, r4, ror #15
    fa28:	andeq	r0, r0, r4, ror #15
    fa2c:	andeq	r0, r0, r4, ror #15
    fa30:	andeq	r0, r0, r4, ror #15
    fa34:	andeq	r0, r0, r4, ror #15
    fa38:	andeq	r0, r0, r4, ror #15
    fa3c:	andeq	r0, r0, r4, ror #15
    fa40:	andeq	r0, r0, r4, ror #15
    fa44:	andeq	r0, r0, r4, ror #15
    fa48:	andeq	r0, r0, r4, ror #15
    fa4c:	andeq	r0, r0, r4, ror #15
    fa50:	andeq	r0, r0, r4, ror #15
    fa54:	andeq	r0, r0, r4, ror #15
    fa58:	andeq	r0, r0, r4, ror #15
    fa5c:	andeq	r0, r0, r4, ror #15
    fa60:	andeq	r0, r0, r4, ror #15
    fa64:	andeq	r0, r0, r4, ror #15
    fa68:	andeq	r0, r0, r4, ror #15
    fa6c:	andeq	r0, r0, r4, ror #15
    fa70:	andeq	r0, r0, r4, ror #15
    fa74:	andeq	r0, r0, r4, ror #15
    fa78:	andeq	r0, r0, r4, ror #15
    fa7c:	andeq	r0, r0, r4, ror #15
    fa80:	andeq	r0, r0, r4, ror #15
    fa84:	andeq	r0, r0, r4, ror #15
    fa88:	andeq	r0, r0, r4, ror #15
    fa8c:	andeq	r0, r0, r4, ror #15
    fa90:	andeq	r0, r0, r4, ror #15
    fa94:	andeq	r0, r0, r4, ror #15
    fa98:	andeq	r0, r0, r4, ror #15
    fa9c:	andeq	r0, r0, r4, ror #15
    faa0:	andeq	r0, r0, r4, ror #15
    faa4:	andeq	r0, r0, r4, ror #15
    faa8:	andeq	r0, r0, r4, ror #15
    faac:	andeq	r0, r0, r4, ror #15
    fab0:	andeq	r0, r0, r4, ror #15
    fab4:	andeq	r0, r0, r4, ror #15
    fab8:	andeq	r0, r0, r4, ror #15
    fabc:	andeq	r0, r0, r4, ror #15
    fac0:	andeq	r0, r0, r4, ror #15
    fac4:	andeq	r0, r0, r4, ror #15
    fac8:	andeq	r0, r0, r4, ror #15
    facc:	andeq	r0, r0, r4, ror #15
    fad0:	andeq	r0, r0, r4, ror #15
    fad4:	andeq	r0, r0, r4, ror #15
    fad8:	andeq	r0, r0, r4, ror #15
    fadc:	andeq	r0, r0, r4, ror #15
    fae0:	andeq	r0, r0, r4, ror #15
    fae4:	andeq	r0, r0, r4, ror #15
    fae8:	andeq	r0, r0, r4, ror #15
    faec:	andeq	r0, r0, r4, ror #15
    faf0:	andeq	r0, r0, r4, ror #15
    faf4:	andeq	r0, r0, r4, ror #15
    faf8:	andeq	r0, r0, r4, ror #15
    fafc:	andeq	r0, r0, r4, ror #15
    fb00:	andeq	r0, r0, r4, ror #15
    fb04:	andeq	r0, r0, r4, ror #15
    fb08:	andeq	r0, r0, r4, ror #15
    fb0c:	andeq	r0, r0, r4, ror #15
    fb10:	andeq	r0, r0, r4, ror #15
    fb14:	andeq	r0, r0, r4, ror #15
    fb18:	andeq	r0, r0, r4, ror #15
    fb1c:	andeq	r0, r0, r4, ror #15
    fb20:	andeq	r0, r0, r4, ror #15
    fb24:	andeq	r0, r0, r4, ror #15
    fb28:	andeq	r0, r0, r4, ror #15
    fb2c:	andeq	r0, r0, r4, ror #15
    fb30:	andeq	r0, r0, r4, ror #15
    fb34:	andeq	r0, r0, r4, ror #15
    fb38:	andeq	r0, r0, r4, ror #15
    fb3c:	andeq	r0, r0, r4, ror #15
    fb40:	andeq	r0, r0, r4, ror #15
    fb44:	andeq	r0, r0, r4, ror #15
    fb48:	andeq	r0, r0, r4, ror #15
    fb4c:	andeq	r0, r0, r4, ror #15
    fb50:	andeq	r0, r0, r4, ror #15
    fb54:	andeq	r0, r0, r4, ror #15
    fb58:	andeq	r0, r0, r4, ror #15
    fb5c:	andeq	r0, r0, r4, ror #15
    fb60:	andeq	r0, r0, r4, ror #15
    fb64:	andeq	r0, r0, r4, ror #15
    fb68:	andeq	r0, r0, r4, ror #15
    fb6c:	andeq	r0, r0, r4, ror #15
    fb70:	andeq	r0, r0, r4, ror #15
    fb74:	andeq	r0, r0, r4, ror #15
    fb78:	andeq	r0, r0, r4, ror #15
    fb7c:	andeq	r0, r0, r4, ror #15
    fb80:	andeq	r0, r0, r4, ror #15
    fb84:	andeq	r0, r0, r4, ror #15
    fb88:	andeq	r0, r0, r4, ror #15
    fb8c:	andeq	r0, r0, r0, ror #15
    fb90:	andeq	r0, r0, r0, ror #15
    fb94:	andeq	r0, r0, r0, ror #15
    fb98:	andeq	r0, r0, r0, ror #15
    fb9c:	andeq	r0, r0, r4, ror #15
    fba0:	andeq	r0, r0, r4, ror #15
    fba4:	andeq	r0, r0, r4, ror #15
    fba8:	andeq	r0, r0, r4, ror #15
    fbac:	andeq	r0, r0, r4, ror #15
    fbb0:	andeq	r0, r0, r4, ror #15
    fbb4:	andeq	r0, r0, r4, ror #15
    fbb8:	andeq	r0, r0, r4, ror #15
    fbbc:	andeq	r0, r0, r4, ror #15
    fbc0:	andeq	r0, r0, r4, ror #15
    fbc4:	andeq	r0, r0, r4, ror #15
    fbc8:	andeq	r0, r0, r4, ror #15
    fbcc:	andeq	r0, r0, r4, ror #15
    fbd0:	andeq	r0, r0, r4, ror #15
    fbd4:	andeq	r0, r0, r4, ror #15
    fbd8:	andeq	r0, r0, r4, ror #15
    fbdc:	andeq	r0, r0, r4, ror #15
    fbe0:	andeq	r0, r0, r4, ror #15
    fbe4:	andeq	r0, r0, r4, ror #15
    fbe8:	andeq	r0, r0, r4, ror #15
    fbec:	andeq	r0, r0, r4, ror #15
    fbf0:	andeq	r0, r0, r4, ror #15
    fbf4:	andeq	r0, r0, r4, ror #15
    fbf8:	andeq	r0, r0, r4, ror #15
    fbfc:	andeq	r0, r0, r4, ror #15
    fc00:	andeq	r0, r0, r4, ror #15
    fc04:	andeq	r0, r0, r4, ror #15
    fc08:	andeq	r0, r0, r4, ror #15
    fc0c:	andeq	r0, r0, r4, ror #15
    fc10:	andeq	r0, r0, r4, ror #15
    fc14:	andeq	r0, r0, r4, ror #15
    fc18:	andeq	r0, r0, r4, ror #15
    fc1c:	andeq	r0, r0, r4, ror #15
    fc20:	andeq	r0, r0, r4, ror #15
    fc24:	andeq	r0, r0, r4, ror #15
    fc28:	andeq	r0, r0, r4, ror #15
    fc2c:	andeq	r0, r0, r4, ror #15
    fc30:	andeq	r0, r0, r4, ror #15
    fc34:	andeq	r0, r0, r4, ror #15
    fc38:	andeq	r0, r0, r4, ror #15
    fc3c:	andeq	r0, r0, r4, ror #15
    fc40:	andeq	r0, r0, r4, ror #15
    fc44:	andeq	r0, r0, r4, ror #15
    fc48:	andeq	r0, r0, r4, ror #15
    fc4c:	andeq	r0, r0, r4, ror #15
    fc50:	andeq	r0, r0, r4, ror #15
    fc54:	andeq	r0, r0, r4, ror #15
    fc58:	andeq	r0, r0, r4, ror #15
    fc5c:	andeq	r0, r0, r4, ror #15
    fc60:	andeq	r0, r0, r4, ror #15
    fc64:	andeq	r0, r0, r4, ror #15
    fc68:	andeq	r0, r0, r4, ror #15
    fc6c:	andeq	r0, r0, r4, ror #15
    fc70:	andeq	r0, r0, r4, ror #15
    fc74:	andeq	r0, r0, r4, ror #15
    fc78:	andeq	r0, r0, r4, ror #15
    fc7c:	andeq	r0, r0, r4, ror #15
    fc80:	andeq	r0, r0, r4, ror #15
    fc84:	andeq	r0, r0, r4, ror #15
    fc88:	andeq	r0, r0, r4, ror #15
    fc8c:	andeq	r0, r0, r4, ror #15
    fc90:	andeq	r0, r0, r4, ror #15
    fc94:	andeq	r0, r0, r4, ror #15
    fc98:	andeq	r0, r0, r4, ror #15
    fc9c:	andeq	r0, r0, r4, ror #15
    fca0:	andeq	r0, r0, r4, ror #15
    fca4:	andeq	r0, r0, r4, ror #15
    fca8:	andeq	r0, r0, r4, ror #15
    fcac:	andeq	r0, r0, r4, ror #15
    fcb0:	andeq	r0, r0, r4, ror #15
    fcb4:	andeq	r0, r0, r4, ror #15
    fcb8:	andeq	r0, r0, r4, ror #15
    fcbc:	andeq	r0, r0, r4, ror #15
    fcc0:	andeq	r0, r0, r4, ror #15
    fcc4:	andeq	r0, r0, r4, ror #15
    fcc8:	andeq	r0, r0, r4, ror #15
    fccc:	andeq	r0, r0, r4, ror #15
    fcd0:	andeq	r0, r0, r4, ror #15
    fcd4:	andeq	r0, r0, r4, ror #15
    fcd8:	andeq	r0, r0, r4, ror #15
    fcdc:	andeq	r0, r0, r4, ror #15
    fce0:	andeq	r0, r0, r4, ror #15
    fce4:	andeq	r0, r0, r4, ror #15
    fce8:	andeq	r0, r0, r4, ror #15
    fcec:	andeq	r0, r0, r4, ror #15
    fcf0:	andeq	r0, r0, r4, ror #15
    fcf4:	andeq	r0, r0, r4, ror #15
    fcf8:	andeq	r0, r0, r4, ror #15
    fcfc:	andeq	r0, r0, r4, ror #15
    fd00:	andeq	r0, r0, r4, ror #15
    fd04:	andeq	r0, r0, r4, ror #15
    fd08:	andeq	r0, r0, r4, ror #15
    fd0c:	andeq	r0, r0, r4, ror #15
    fd10:	andeq	r0, r0, r4, ror #15
    fd14:	andeq	r0, r0, r4, ror #15
    fd18:	andeq	r0, r0, r4, ror #15
    fd1c:	andeq	r0, r0, r4, ror #15
    fd20:	andeq	r0, r0, r4, ror #15
    fd24:	andeq	r0, r0, r4, ror #15
    fd28:	andeq	r0, r0, r4, ror #15
    fd2c:	andeq	r0, r0, r4, ror #15
    fd30:	andeq	r0, r0, r4, ror #15
    fd34:	andeq	r0, r0, r4, ror #15
    fd38:	andeq	r0, r0, r4, ror #15
    fd3c:	andeq	r0, r0, r4, ror #15
    fd40:	andeq	r0, r0, r4, ror #15
    fd44:	andeq	r0, r0, r4, ror #15
    fd48:	andeq	r0, r0, r4, ror #15
    fd4c:	andeq	r0, r0, r4, ror #15
    fd50:	andeq	r0, r0, r4, ror #15
    fd54:	andeq	r0, r0, r4, ror #15
    fd58:	andeq	r0, r0, r4, ror #15
    fd5c:	andeq	r0, r0, r4, ror #15
    fd60:	andeq	r0, r0, r4, ror #15
    fd64:	andeq	r0, r0, r4, ror #15
    fd68:	andeq	r0, r0, r4, ror #15
    fd6c:	andeq	r0, r0, r4, ror #15
    fd70:	andeq	r0, r0, r4, ror #15
    fd74:	andeq	r0, r0, r4, ror #15
    fd78:	andeq	r0, r0, r4, ror #15
    fd7c:	andeq	r0, r0, r4, ror #15
    fd80:	andeq	r0, r0, r4, ror #15
    fd84:	andeq	r0, r0, r4, ror #15
    fd88:	andeq	r0, r0, r4, ror #15
    fd8c:	andeq	r0, r0, r4, ror #15
    fd90:	andeq	r0, r0, r4, ror #15
    fd94:	andeq	r0, r0, r0, ror #15
    fd98:	cmp	r2, #2432	; 0x980
    fd9c:	bge	fe70 <lell_packet_is_data@@Base+0x298c>
    fda0:	movw	r1, #2036	; 0x7f4
    fda4:	sub	r1, r2, r1
    fda8:	cmp	r1, #28
    fdac:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    fdb0:	movw	r1, #2302	; 0x8fe
    fdb4:	sub	r1, r2, r1
    fdb8:	cmp	r1, #4
    fdbc:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    fdc0:	cmp	r2, #2176	; 0x880
    fdc4:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    fdc8:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    fdcc:	cmp	r2, #1152	; 0x480
    fdd0:	bge	fe40 <lell_packet_is_data@@Base+0x295c>
    fdd4:	sub	r1, r2, #1016	; 0x3f8
    fdd8:	cmp	r1, #15
    fddc:	bhi	fde8 <lell_packet_is_data@@Base+0x2904>
    fde0:	cmp	r1, #9
    fde4:	bne	ff74 <lell_packet_is_data@@Base+0x2a90>
    fde8:	movw	r1, #766	; 0x2fe
    fdec:	sub	r1, r2, r1
    fdf0:	cmp	r1, #4
    fdf4:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    fdf8:	cmp	r2, #896	; 0x380
    fdfc:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    fe00:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    fe04:	cmp	r2, #4064	; 0xfe0
    fe08:	blt	ff54 <lell_packet_is_data@@Base+0x2a70>
    fe0c:	sub	r1, r2, #4064	; 0xfe0
    fe10:	cmp	r1, #31
    fe14:	bhi	ff78 <lell_packet_is_data@@Base+0x2a94>
    fe18:	movw	r3, #1
    fe1c:	mov	r2, #1
    fe20:	movt	r3, #65535	; 0xffff
    fe24:	tst	r3, r2, lsl r1
    fe28:	addne	r0, r0, #1
    fe2c:	lsr	r1, ip, #20
    fe30:	movw	r2, #2035	; 0x7f3
    fe34:	cmp	r1, r2
    fe38:	bgt	ff88 <lell_packet_is_data@@Base+0x2aa4>
    fe3c:	b	ffc4 <lell_packet_is_data@@Base+0x2ae0>
    fe40:	movw	r1, #1531	; 0x5fb
    fe44:	cmp	r2, r1
    fe48:	ble	ff0c <lell_packet_is_data@@Base+0x2a28>
    fe4c:	cmp	r2, #1664	; 0x680
    fe50:	bge	ff30 <lell_packet_is_data@@Base+0x2a4c>
    fe54:	movw	r1, #1532	; 0x5fc
    fe58:	sub	r1, r2, r1
    fe5c:	cmp	r1, #7
    fe60:	bhi	ff78 <lell_packet_is_data@@Base+0x2a94>
    fe64:	cmp	r1, #4
    fe68:	bne	ff74 <lell_packet_is_data@@Base+0x2a90>
    fe6c:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    fe70:	cmp	r2, #2688	; 0xa80
    fe74:	bge	fec8 <lell_packet_is_data@@Base+0x29e4>
    fe78:	movw	r1, #2556	; 0x9fc
    fe7c:	sub	r1, r2, r1
    fe80:	cmp	r1, #7
    fe84:	bhi	fe90 <lell_packet_is_data@@Base+0x29ac>
    fe88:	cmp	r1, #4
    fe8c:	bne	ff74 <lell_packet_is_data@@Base+0x2a90>
    fe90:	cmp	r2, #2432	; 0x980
    fe94:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    fe98:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    fe9c:	movw	r1, #3580	; 0xdfc
    fea0:	sub	r1, r2, r1
    fea4:	cmp	r1, #8
    fea8:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    feac:	movw	r1, #3326	; 0xcfe
    feb0:	sub	r1, r2, r1
    feb4:	cmp	r1, #4
    feb8:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    febc:	cmp	r2, #3456	; 0xd80
    fec0:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    fec4:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    fec8:	movw	r1, #2814	; 0xafe
    fecc:	sub	r1, r2, r1
    fed0:	cmp	r1, #4
    fed4:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    fed8:	cmp	r2, #2688	; 0xa80
    fedc:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    fee0:	cmp	r2, #2944	; 0xb80
    fee4:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    fee8:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    feec:	sub	r1, r2, #508	; 0x1fc
    fef0:	cmp	r1, #7
    fef4:	bhi	ff00 <lell_packet_is_data@@Base+0x2a1c>
    fef8:	cmp	r1, #4
    fefc:	bne	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff00:	cmp	r2, #640	; 0x280
    ff04:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff08:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    ff0c:	movw	r1, #1278	; 0x4fe
    ff10:	sub	r1, r2, r1
    ff14:	cmp	r1, #4
    ff18:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff1c:	cmp	r2, #1152	; 0x480
    ff20:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff24:	cmp	r2, #1408	; 0x580
    ff28:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff2c:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    ff30:	movw	r1, #1790	; 0x6fe
    ff34:	sub	r1, r2, r1
    ff38:	cmp	r1, #4
    ff3c:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff40:	cmp	r2, #1664	; 0x680
    ff44:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff48:	cmp	r2, #1920	; 0x780
    ff4c:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff50:	b	ff78 <lell_packet_is_data@@Base+0x2a94>
    ff54:	movw	r1, #3838	; 0xefe
    ff58:	sub	r1, r2, r1
    ff5c:	cmp	r1, #4
    ff60:	bcc	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff64:	cmp	r2, #3712	; 0xe80
    ff68:	beq	ff74 <lell_packet_is_data@@Base+0x2a90>
    ff6c:	cmp	r2, #3968	; 0xf80
    ff70:	bne	ff78 <lell_packet_is_data@@Base+0x2a94>
    ff74:	add	r0, r0, #1
    ff78:	lsr	r1, ip, #20
    ff7c:	movw	r2, #2035	; 0x7f3
    ff80:	cmp	r1, r2
    ff84:	ble	ffc4 <lell_packet_is_data@@Base+0x2ae0>
    ff88:	movw	r2, #3063	; 0xbf7
    ff8c:	cmp	r1, r2
    ff90:	ble	105e8 <lell_packet_is_data@@Base+0x3104>
    ff94:	cmp	r1, #3712	; 0xe80
    ff98:	bge	10654 <lell_packet_is_data@@Base+0x3170>
    ff9c:	movw	r2, #3325	; 0xcfd
    ffa0:	cmp	r1, r2
    ffa4:	bgt	106dc <lell_packet_is_data@@Base+0x31f8>
    ffa8:	movw	r2, #3064	; 0xbf8
    ffac:	sub	r2, r1, r2
    ffb0:	cmp	r2, #16
    ffb4:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
    ffb8:	cmp	r1, #3200	; 0xc80
    ffbc:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
    ffc0:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
    ffc4:	movw	r2, #765	; 0x2fd
    ffc8:	cmp	r1, r2
    ffcc:	bgt	1061c <lell_packet_is_data@@Base+0x3138>
    ffd0:	cmp	r1, #384	; 0x180
    ffd4:	bhi	1072c <lell_packet_is_data@@Base+0x3248>
    ffd8:	add	r2, pc, #4
    ffdc:	ldr	r1, [r2, r1, lsl #2]
    ffe0:	add	pc, r2, r1
    ffe4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ffe8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ffec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    fff0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    fff4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    fff8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    fffc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10000:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10004:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10008:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1000c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10010:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10014:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10018:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1001c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10020:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10024:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10028:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1002c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10030:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10034:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10038:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1003c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10040:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10044:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10048:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1004c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10050:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10054:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10058:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1005c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10060:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10064:	ldrdeq	r0, [r0], -r4
   10068:	ldrdeq	r0, [r0], -r4
   1006c:	ldrdeq	r0, [r0], -r4
   10070:	ldrdeq	r0, [r0], -r4
   10074:	ldrdeq	r0, [r0], -r4
   10078:	ldrdeq	r0, [r0], -r4
   1007c:	ldrdeq	r0, [r0], -r4
   10080:	ldrdeq	r0, [r0], -r4
   10084:	ldrdeq	r0, [r0], -r4
   10088:	ldrdeq	r0, [r0], -r4
   1008c:	ldrdeq	r0, [r0], -r4
   10090:	ldrdeq	r0, [r0], -r4
   10094:	ldrdeq	r0, [r0], -r4
   10098:	ldrdeq	r0, [r0], -r4
   1009c:	ldrdeq	r0, [r0], -r4
   100a0:	ldrdeq	r0, [r0], -r4
   100a4:	ldrdeq	r0, [r0], -r4
   100a8:	ldrdeq	r0, [r0], -r4
   100ac:	ldrdeq	r0, [r0], -r4
   100b0:	ldrdeq	r0, [r0], -r4
   100b4:	ldrdeq	r0, [r0], -r4
   100b8:	ldrdeq	r0, [r0], -r4
   100bc:	ldrdeq	r0, [r0], -r4
   100c0:	ldrdeq	r0, [r0], -r4
   100c4:	ldrdeq	r0, [r0], -r4
   100c8:	ldrdeq	r0, [r0], -r4
   100cc:	ldrdeq	r0, [r0], -r4
   100d0:	ldrdeq	r0, [r0], -r4
   100d4:	ldrdeq	r0, [r0], -r4
   100d8:	ldrdeq	r0, [r0], -r4
   100dc:	ldrdeq	r0, [r0], -r4
   100e0:	ldrdeq	r0, [r0], -r4
   100e4:	ldrdeq	r0, [r0], -r4
   100e8:	ldrdeq	r0, [r0], -r4
   100ec:	ldrdeq	r0, [r0], -r4
   100f0:	ldrdeq	r0, [r0], -r4
   100f4:	ldrdeq	r0, [r0], -r4
   100f8:	ldrdeq	r0, [r0], -r4
   100fc:	ldrdeq	r0, [r0], -r4
   10100:	ldrdeq	r0, [r0], -r4
   10104:	ldrdeq	r0, [r0], -r4
   10108:	ldrdeq	r0, [r0], -r4
   1010c:	ldrdeq	r0, [r0], -r4
   10110:	ldrdeq	r0, [r0], -r4
   10114:	ldrdeq	r0, [r0], -r4
   10118:	ldrdeq	r0, [r0], -r4
   1011c:	ldrdeq	r0, [r0], -r4
   10120:	ldrdeq	r0, [r0], -r4
   10124:	ldrdeq	r0, [r0], -r4
   10128:	ldrdeq	r0, [r0], -r4
   1012c:	ldrdeq	r0, [r0], -r4
   10130:	ldrdeq	r0, [r0], -r4
   10134:	ldrdeq	r0, [r0], -r4
   10138:	ldrdeq	r0, [r0], -r4
   1013c:	ldrdeq	r0, [r0], -r4
   10140:	ldrdeq	r0, [r0], -r4
   10144:	ldrdeq	r0, [r0], -r4
   10148:	ldrdeq	r0, [r0], -r4
   1014c:	ldrdeq	r0, [r0], -r4
   10150:	ldrdeq	r0, [r0], -r4
   10154:	ldrdeq	r0, [r0], -r4
   10158:	ldrdeq	r0, [r0], -r4
   1015c:	ldrdeq	r0, [r0], -r4
   10160:	ldrdeq	r0, [r0], -r4
   10164:	ldrdeq	r0, [r0], -r4
   10168:	ldrdeq	r0, [r0], -r4
   1016c:	ldrdeq	r0, [r0], -r4
   10170:	ldrdeq	r0, [r0], -r4
   10174:	ldrdeq	r0, [r0], -r4
   10178:	ldrdeq	r0, [r0], -r4
   1017c:	ldrdeq	r0, [r0], -r4
   10180:	ldrdeq	r0, [r0], -r4
   10184:	ldrdeq	r0, [r0], -r4
   10188:	ldrdeq	r0, [r0], -r4
   1018c:	ldrdeq	r0, [r0], -r4
   10190:	ldrdeq	r0, [r0], -r4
   10194:	ldrdeq	r0, [r0], -r4
   10198:	ldrdeq	r0, [r0], -r4
   1019c:	ldrdeq	r0, [r0], -r4
   101a0:	ldrdeq	r0, [r0], -r4
   101a4:	ldrdeq	r0, [r0], -r4
   101a8:	ldrdeq	r0, [r0], -r4
   101ac:	ldrdeq	r0, [r0], -r4
   101b0:	ldrdeq	r0, [r0], -r4
   101b4:	ldrdeq	r0, [r0], -r4
   101b8:	ldrdeq	r0, [r0], -r4
   101bc:	ldrdeq	r0, [r0], -r4
   101c0:	ldrdeq	r0, [r0], -r4
   101c4:	ldrdeq	r0, [r0], -r4
   101c8:	ldrdeq	r0, [r0], -r4
   101cc:	ldrdeq	r0, [r0], -r4
   101d0:	ldrdeq	r0, [r0], -r4
   101d4:	ldrdeq	r0, [r0], -r4
   101d8:	ldrdeq	r0, [r0], -r4
   101dc:	ldrdeq	r0, [r0], -r4
   101e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101e8:	ldrdeq	r0, [r0], -r4
   101ec:	ldrdeq	r0, [r0], -r4
   101f0:	ldrdeq	r0, [r0], -r4
   101f4:	ldrdeq	r0, [r0], -r4
   101f8:	ldrdeq	r0, [r0], -r4
   101fc:	ldrdeq	r0, [r0], -r4
   10200:	ldrdeq	r0, [r0], -r4
   10204:	ldrdeq	r0, [r0], -r4
   10208:	ldrdeq	r0, [r0], -r4
   1020c:	ldrdeq	r0, [r0], -r4
   10210:	ldrdeq	r0, [r0], -r4
   10214:	ldrdeq	r0, [r0], -r4
   10218:	ldrdeq	r0, [r0], -r4
   1021c:	ldrdeq	r0, [r0], -r4
   10220:	ldrdeq	r0, [r0], -r4
   10224:	ldrdeq	r0, [r0], -r4
   10228:	ldrdeq	r0, [r0], -r4
   1022c:	ldrdeq	r0, [r0], -r4
   10230:	ldrdeq	r0, [r0], -r4
   10234:	ldrdeq	r0, [r0], -r4
   10238:	ldrdeq	r0, [r0], -r4
   1023c:	ldrdeq	r0, [r0], -r4
   10240:	ldrdeq	r0, [r0], -r4
   10244:	ldrdeq	r0, [r0], -r4
   10248:	ldrdeq	r0, [r0], -r4
   1024c:	ldrdeq	r0, [r0], -r4
   10250:	ldrdeq	r0, [r0], -r4
   10254:	ldrdeq	r0, [r0], -r4
   10258:	ldrdeq	r0, [r0], -r4
   1025c:	ldrdeq	r0, [r0], -r4
   10260:	ldrdeq	r0, [r0], -r4
   10264:	ldrdeq	r0, [r0], -r4
   10268:	ldrdeq	r0, [r0], -r4
   1026c:	ldrdeq	r0, [r0], -r4
   10270:	ldrdeq	r0, [r0], -r4
   10274:	ldrdeq	r0, [r0], -r4
   10278:	ldrdeq	r0, [r0], -r4
   1027c:	ldrdeq	r0, [r0], -r4
   10280:	ldrdeq	r0, [r0], -r4
   10284:	ldrdeq	r0, [r0], -r4
   10288:	ldrdeq	r0, [r0], -r4
   1028c:	ldrdeq	r0, [r0], -r4
   10290:	ldrdeq	r0, [r0], -r4
   10294:	ldrdeq	r0, [r0], -r4
   10298:	ldrdeq	r0, [r0], -r4
   1029c:	ldrdeq	r0, [r0], -r4
   102a0:	ldrdeq	r0, [r0], -r4
   102a4:	ldrdeq	r0, [r0], -r4
   102a8:	ldrdeq	r0, [r0], -r4
   102ac:	ldrdeq	r0, [r0], -r4
   102b0:	ldrdeq	r0, [r0], -r4
   102b4:	ldrdeq	r0, [r0], -r4
   102b8:	ldrdeq	r0, [r0], -r4
   102bc:	ldrdeq	r0, [r0], -r4
   102c0:	ldrdeq	r0, [r0], -r4
   102c4:	ldrdeq	r0, [r0], -r4
   102c8:	ldrdeq	r0, [r0], -r4
   102cc:	ldrdeq	r0, [r0], -r4
   102d0:	ldrdeq	r0, [r0], -r4
   102d4:	ldrdeq	r0, [r0], -r4
   102d8:	ldrdeq	r0, [r0], -r4
   102dc:	ldrdeq	r0, [r0], -r4
   102e0:	ldrdeq	r0, [r0], -r4
   102e4:	ldrdeq	r0, [r0], -r4
   102e8:	ldrdeq	r0, [r0], -r4
   102ec:	ldrdeq	r0, [r0], -r4
   102f0:	ldrdeq	r0, [r0], -r4
   102f4:	ldrdeq	r0, [r0], -r4
   102f8:	ldrdeq	r0, [r0], -r4
   102fc:	ldrdeq	r0, [r0], -r4
   10300:	ldrdeq	r0, [r0], -r4
   10304:	ldrdeq	r0, [r0], -r4
   10308:	ldrdeq	r0, [r0], -r4
   1030c:	ldrdeq	r0, [r0], -r4
   10310:	ldrdeq	r0, [r0], -r4
   10314:	ldrdeq	r0, [r0], -r4
   10318:	ldrdeq	r0, [r0], -r4
   1031c:	ldrdeq	r0, [r0], -r4
   10320:	ldrdeq	r0, [r0], -r4
   10324:	ldrdeq	r0, [r0], -r4
   10328:	ldrdeq	r0, [r0], -r4
   1032c:	ldrdeq	r0, [r0], -r4
   10330:	ldrdeq	r0, [r0], -r4
   10334:	ldrdeq	r0, [r0], -r4
   10338:	ldrdeq	r0, [r0], -r4
   1033c:	ldrdeq	r0, [r0], -r4
   10340:	ldrdeq	r0, [r0], -r4
   10344:	ldrdeq	r0, [r0], -r4
   10348:	ldrdeq	r0, [r0], -r4
   1034c:	ldrdeq	r0, [r0], -r4
   10350:	ldrdeq	r0, [r0], -r4
   10354:	ldrdeq	r0, [r0], -r4
   10358:	ldrdeq	r0, [r0], -r4
   1035c:	ldrdeq	r0, [r0], -r4
   10360:	ldrdeq	r0, [r0], -r4
   10364:	ldrdeq	r0, [r0], -r4
   10368:	ldrdeq	r0, [r0], -r4
   1036c:	ldrdeq	r0, [r0], -r4
   10370:	ldrdeq	r0, [r0], -r4
   10374:	ldrdeq	r0, [r0], -r4
   10378:	ldrdeq	r0, [r0], -r4
   1037c:	ldrdeq	r0, [r0], -r4
   10380:	ldrdeq	r0, [r0], -r4
   10384:	ldrdeq	r0, [r0], -r4
   10388:	ldrdeq	r0, [r0], -r4
   1038c:	ldrdeq	r0, [r0], -r4
   10390:	ldrdeq	r0, [r0], -r4
   10394:	ldrdeq	r0, [r0], -r4
   10398:	ldrdeq	r0, [r0], -r4
   1039c:	ldrdeq	r0, [r0], -r4
   103a0:	ldrdeq	r0, [r0], -r4
   103a4:	ldrdeq	r0, [r0], -r4
   103a8:	ldrdeq	r0, [r0], -r4
   103ac:	ldrdeq	r0, [r0], -r4
   103b0:	ldrdeq	r0, [r0], -r4
   103b4:	ldrdeq	r0, [r0], -r4
   103b8:	ldrdeq	r0, [r0], -r4
   103bc:	ldrdeq	r0, [r0], -r4
   103c0:	ldrdeq	r0, [r0], -r4
   103c4:	ldrdeq	r0, [r0], -r4
   103c8:	ldrdeq	r0, [r0], -r4
   103cc:	ldrdeq	r0, [r0], -r4
   103d0:	ldrdeq	r0, [r0], -r4
   103d4:	ldrdeq	r0, [r0], -r4
   103d8:	ldrdeq	r0, [r0], -r4
   103dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   103e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   103e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   103e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   103ec:	ldrdeq	r0, [r0], -r4
   103f0:	ldrdeq	r0, [r0], -r4
   103f4:	ldrdeq	r0, [r0], -r4
   103f8:	ldrdeq	r0, [r0], -r4
   103fc:	ldrdeq	r0, [r0], -r4
   10400:	ldrdeq	r0, [r0], -r4
   10404:	ldrdeq	r0, [r0], -r4
   10408:	ldrdeq	r0, [r0], -r4
   1040c:	ldrdeq	r0, [r0], -r4
   10410:	ldrdeq	r0, [r0], -r4
   10414:	ldrdeq	r0, [r0], -r4
   10418:	ldrdeq	r0, [r0], -r4
   1041c:	ldrdeq	r0, [r0], -r4
   10420:	ldrdeq	r0, [r0], -r4
   10424:	ldrdeq	r0, [r0], -r4
   10428:	ldrdeq	r0, [r0], -r4
   1042c:	ldrdeq	r0, [r0], -r4
   10430:	ldrdeq	r0, [r0], -r4
   10434:	ldrdeq	r0, [r0], -r4
   10438:	ldrdeq	r0, [r0], -r4
   1043c:	ldrdeq	r0, [r0], -r4
   10440:	ldrdeq	r0, [r0], -r4
   10444:	ldrdeq	r0, [r0], -r4
   10448:	ldrdeq	r0, [r0], -r4
   1044c:	ldrdeq	r0, [r0], -r4
   10450:	ldrdeq	r0, [r0], -r4
   10454:	ldrdeq	r0, [r0], -r4
   10458:	ldrdeq	r0, [r0], -r4
   1045c:	ldrdeq	r0, [r0], -r4
   10460:	ldrdeq	r0, [r0], -r4
   10464:	ldrdeq	r0, [r0], -r4
   10468:	ldrdeq	r0, [r0], -r4
   1046c:	ldrdeq	r0, [r0], -r4
   10470:	ldrdeq	r0, [r0], -r4
   10474:	ldrdeq	r0, [r0], -r4
   10478:	ldrdeq	r0, [r0], -r4
   1047c:	ldrdeq	r0, [r0], -r4
   10480:	ldrdeq	r0, [r0], -r4
   10484:	ldrdeq	r0, [r0], -r4
   10488:	ldrdeq	r0, [r0], -r4
   1048c:	ldrdeq	r0, [r0], -r4
   10490:	ldrdeq	r0, [r0], -r4
   10494:	ldrdeq	r0, [r0], -r4
   10498:	ldrdeq	r0, [r0], -r4
   1049c:	ldrdeq	r0, [r0], -r4
   104a0:	ldrdeq	r0, [r0], -r4
   104a4:	ldrdeq	r0, [r0], -r4
   104a8:	ldrdeq	r0, [r0], -r4
   104ac:	ldrdeq	r0, [r0], -r4
   104b0:	ldrdeq	r0, [r0], -r4
   104b4:	ldrdeq	r0, [r0], -r4
   104b8:	ldrdeq	r0, [r0], -r4
   104bc:	ldrdeq	r0, [r0], -r4
   104c0:	ldrdeq	r0, [r0], -r4
   104c4:	ldrdeq	r0, [r0], -r4
   104c8:	ldrdeq	r0, [r0], -r4
   104cc:	ldrdeq	r0, [r0], -r4
   104d0:	ldrdeq	r0, [r0], -r4
   104d4:	ldrdeq	r0, [r0], -r4
   104d8:	ldrdeq	r0, [r0], -r4
   104dc:	ldrdeq	r0, [r0], -r4
   104e0:	ldrdeq	r0, [r0], -r4
   104e4:	ldrdeq	r0, [r0], -r4
   104e8:	ldrdeq	r0, [r0], -r4
   104ec:	ldrdeq	r0, [r0], -r4
   104f0:	ldrdeq	r0, [r0], -r4
   104f4:	ldrdeq	r0, [r0], -r4
   104f8:	ldrdeq	r0, [r0], -r4
   104fc:	ldrdeq	r0, [r0], -r4
   10500:	ldrdeq	r0, [r0], -r4
   10504:	ldrdeq	r0, [r0], -r4
   10508:	ldrdeq	r0, [r0], -r4
   1050c:	ldrdeq	r0, [r0], -r4
   10510:	ldrdeq	r0, [r0], -r4
   10514:	ldrdeq	r0, [r0], -r4
   10518:	ldrdeq	r0, [r0], -r4
   1051c:	ldrdeq	r0, [r0], -r4
   10520:	ldrdeq	r0, [r0], -r4
   10524:	ldrdeq	r0, [r0], -r4
   10528:	ldrdeq	r0, [r0], -r4
   1052c:	ldrdeq	r0, [r0], -r4
   10530:	ldrdeq	r0, [r0], -r4
   10534:	ldrdeq	r0, [r0], -r4
   10538:	ldrdeq	r0, [r0], -r4
   1053c:	ldrdeq	r0, [r0], -r4
   10540:	ldrdeq	r0, [r0], -r4
   10544:	ldrdeq	r0, [r0], -r4
   10548:	ldrdeq	r0, [r0], -r4
   1054c:	ldrdeq	r0, [r0], -r4
   10550:	ldrdeq	r0, [r0], -r4
   10554:	ldrdeq	r0, [r0], -r4
   10558:	ldrdeq	r0, [r0], -r4
   1055c:	ldrdeq	r0, [r0], -r4
   10560:	ldrdeq	r0, [r0], -r4
   10564:	ldrdeq	r0, [r0], -r4
   10568:	ldrdeq	r0, [r0], -r4
   1056c:	ldrdeq	r0, [r0], -r4
   10570:	ldrdeq	r0, [r0], -r4
   10574:	ldrdeq	r0, [r0], -r4
   10578:	ldrdeq	r0, [r0], -r4
   1057c:	ldrdeq	r0, [r0], -r4
   10580:	ldrdeq	r0, [r0], -r4
   10584:	ldrdeq	r0, [r0], -r4
   10588:	ldrdeq	r0, [r0], -r4
   1058c:	ldrdeq	r0, [r0], -r4
   10590:	ldrdeq	r0, [r0], -r4
   10594:	ldrdeq	r0, [r0], -r4
   10598:	ldrdeq	r0, [r0], -r4
   1059c:	ldrdeq	r0, [r0], -r4
   105a0:	ldrdeq	r0, [r0], -r4
   105a4:	ldrdeq	r0, [r0], -r4
   105a8:	ldrdeq	r0, [r0], -r4
   105ac:	ldrdeq	r0, [r0], -r4
   105b0:	ldrdeq	r0, [r0], -r4
   105b4:	ldrdeq	r0, [r0], -r4
   105b8:	ldrdeq	r0, [r0], -r4
   105bc:	ldrdeq	r0, [r0], -r4
   105c0:	ldrdeq	r0, [r0], -r4
   105c4:	ldrdeq	r0, [r0], -r4
   105c8:	ldrdeq	r0, [r0], -r4
   105cc:	ldrdeq	r0, [r0], -r4
   105d0:	ldrdeq	r0, [r0], -r4
   105d4:	ldrdeq	r0, [r0], -r4
   105d8:	ldrdeq	r0, [r0], -r4
   105dc:	ldrdeq	r0, [r0], -r4
   105e0:	ldrdeq	r0, [r0], -r4
   105e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   105e8:	cmp	r1, #2432	; 0x980
   105ec:	bge	106b0 <lell_packet_is_data@@Base+0x31cc>
   105f0:	movw	r2, #2036	; 0x7f4
   105f4:	sub	r2, r1, r2
   105f8:	cmp	r2, #28
   105fc:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   10600:	movw	r2, #2302	; 0x8fe
   10604:	sub	r2, r1, r2
   10608:	cmp	r2, #4
   1060c:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   10610:	cmp	r1, #2176	; 0x880
   10614:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10618:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   1061c:	cmp	r1, #1152	; 0x480
   10620:	bge	10680 <lell_packet_is_data@@Base+0x319c>
   10624:	sub	r2, r1, #1016	; 0x3f8
   10628:	cmp	r2, #15
   1062c:	bhi	10638 <lell_packet_is_data@@Base+0x3154>
   10630:	cmp	r2, #9
   10634:	bne	107b4 <lell_packet_is_data@@Base+0x32d0>
   10638:	movw	r2, #766	; 0x2fe
   1063c:	sub	r2, r1, r2
   10640:	cmp	r2, #4
   10644:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   10648:	cmp	r1, #896	; 0x380
   1064c:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10650:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   10654:	cmp	r1, #4064	; 0xfe0
   10658:	blt	10794 <lell_packet_is_data@@Base+0x32b0>
   1065c:	sub	r1, r1, #4064	; 0xfe0
   10660:	cmp	r1, #31
   10664:	bhi	107b8 <lell_packet_is_data@@Base+0x32d4>
   10668:	movw	r3, #1
   1066c:	mov	r2, #1
   10670:	movt	r3, #65535	; 0xffff
   10674:	tst	r3, r2, lsl r1
   10678:	addne	r0, r0, #1
   1067c:	pop	{r4, r5, fp, pc}
   10680:	movw	r2, #1531	; 0x5fb
   10684:	cmp	r1, r2
   10688:	ble	1074c <lell_packet_is_data@@Base+0x3268>
   1068c:	cmp	r1, #1664	; 0x680
   10690:	bge	10770 <lell_packet_is_data@@Base+0x328c>
   10694:	movw	r2, #1532	; 0x5fc
   10698:	sub	r1, r1, r2
   1069c:	cmp	r1, #7
   106a0:	pophi	{r4, r5, fp, pc}
   106a4:	cmp	r1, #4
   106a8:	bne	107b4 <lell_packet_is_data@@Base+0x32d0>
   106ac:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   106b0:	cmp	r1, #2688	; 0xa80
   106b4:	bge	10708 <lell_packet_is_data@@Base+0x3224>
   106b8:	movw	r2, #2556	; 0x9fc
   106bc:	sub	r2, r1, r2
   106c0:	cmp	r2, #7
   106c4:	bhi	106d0 <lell_packet_is_data@@Base+0x31ec>
   106c8:	cmp	r2, #4
   106cc:	bne	107b4 <lell_packet_is_data@@Base+0x32d0>
   106d0:	cmp	r1, #2432	; 0x980
   106d4:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   106d8:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   106dc:	movw	r2, #3580	; 0xdfc
   106e0:	sub	r2, r1, r2
   106e4:	cmp	r2, #8
   106e8:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   106ec:	movw	r2, #3326	; 0xcfe
   106f0:	sub	r2, r1, r2
   106f4:	cmp	r2, #4
   106f8:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   106fc:	cmp	r1, #3456	; 0xd80
   10700:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10704:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   10708:	movw	r2, #2814	; 0xafe
   1070c:	sub	r2, r1, r2
   10710:	cmp	r2, #4
   10714:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   10718:	cmp	r1, #2688	; 0xa80
   1071c:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10720:	cmp	r1, #2944	; 0xb80
   10724:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10728:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   1072c:	sub	r2, r1, #508	; 0x1fc
   10730:	cmp	r2, #7
   10734:	bhi	10740 <lell_packet_is_data@@Base+0x325c>
   10738:	cmp	r2, #4
   1073c:	bne	107b4 <lell_packet_is_data@@Base+0x32d0>
   10740:	cmp	r1, #640	; 0x280
   10744:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10748:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   1074c:	movw	r2, #1278	; 0x4fe
   10750:	sub	r2, r1, r2
   10754:	cmp	r2, #4
   10758:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   1075c:	cmp	r1, #1152	; 0x480
   10760:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10764:	cmp	r1, #1408	; 0x580
   10768:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   1076c:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   10770:	movw	r2, #1790	; 0x6fe
   10774:	sub	r2, r1, r2
   10778:	cmp	r2, #4
   1077c:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   10780:	cmp	r1, #1664	; 0x680
   10784:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10788:	cmp	r1, #1920	; 0x780
   1078c:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   10790:	b	107b8 <lell_packet_is_data@@Base+0x32d4>
   10794:	movw	r2, #3838	; 0xefe
   10798:	sub	r2, r1, r2
   1079c:	cmp	r2, #4
   107a0:	bcc	107b4 <lell_packet_is_data@@Base+0x32d0>
   107a4:	cmp	r1, #3712	; 0xe80
   107a8:	beq	107b4 <lell_packet_is_data@@Base+0x32d0>
   107ac:	cmp	r1, #3968	; 0xf80
   107b0:	bne	107b8 <lell_packet_is_data@@Base+0x32d4>
   107b4:	add	r0, r0, #1
   107b8:	pop	{r4, r5, fp, pc}

000107bc <lell_get_access_address@@Base>:
   107bc:	ldr	r0, [r0, #64]	; 0x40
   107c0:	bx	lr

000107c4 <lell_get_access_address_offenses@@Base>:
   107c4:	ldr	r0, [r0, #92]	; 0x5c
   107c8:	bx	lr

000107cc <lell_get_channel_index@@Base>:
   107cc:	ldrb	r0, [r0, #68]	; 0x44
   107d0:	bx	lr

000107d4 <lell_get_channel_k@@Base>:
   107d4:	ldrb	r0, [r0, #69]	; 0x45
   107d8:	bx	lr

000107dc <lell_get_adv_type_str@@Base>:
   107dc:	ldrb	r2, [r0, #68]	; 0x44
   107e0:	mov	r1, r0
   107e4:	mov	r0, #0
   107e8:	cmp	r2, #37	; 0x25
   107ec:	bxcc	lr
   107f0:	ldrb	r0, [r1, #80]	; 0x50
   107f4:	cmp	r0, #6
   107f8:	ldrhi	r0, [pc, #20]	; 10814 <lell_get_adv_type_str@@Base+0x38>
   107fc:	addhi	r0, pc, r0
   10800:	bxhi	lr
   10804:	ldr	r1, [pc, #12]	; 10818 <lell_get_adv_type_str@@Base+0x3c>
   10808:	add	r1, pc, r1
   1080c:	ldr	r0, [r1, r0, lsl #2]
   10810:	bx	lr
   10814:	andeq	r5, r0, r4, asr #8
   10818:	andeq	fp, r1, r0, lsr #12

0001081c <lell_print@@Base>:
   1081c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10820:	add	fp, sp, #28
   10824:	sub	sp, sp, #4
   10828:	mov	r4, r0
   1082c:	ldrb	r0, [r0, #68]	; 0x44
   10830:	mov	sl, r4
   10834:	cmp	r0, #36	; 0x24
   10838:	bls	108a8 <lell_print@@Base+0x8c>
   1083c:	ldr	r3, [sl, #72]!	; 0x48
   10840:	ldrb	r0, [sl, #28]
   10844:	ldr	r1, [pc, #2040]	; 11044 <lell_print@@Base+0x828>
   10848:	ldr	r2, [pc, #2040]	; 11048 <lell_print@@Base+0x82c>
   1084c:	add	r1, pc, r1
   10850:	add	r2, pc, r2
   10854:	tst	r0, #1
   10858:	moveq	r2, r1
   1085c:	ldr	r1, [sl, #-8]
   10860:	ldr	r0, [pc, #2020]	; 1104c <lell_print@@Base+0x830>
   10864:	add	r0, pc, r0
   10868:	bl	4508 <printf@plt>
   1086c:	ldrb	r1, [sl, #-4]
   10870:	ldr	r0, [pc, #2008]	; 11050 <lell_print@@Base+0x834>
   10874:	add	r0, pc, r0
   10878:	bl	4508 <printf@plt>
   1087c:	ldrb	r0, [sl, #-4]
   10880:	mov	r1, #0
   10884:	cmp	r0, #37	; 0x25
   10888:	bcc	10964 <lell_print@@Base+0x148>
   1088c:	ldrb	r0, [r4, #80]	; 0x50
   10890:	cmp	r0, #6
   10894:	bhi	1095c <lell_print@@Base+0x140>
   10898:	ldr	r1, [pc, #1976]	; 11058 <lell_print@@Base+0x83c>
   1089c:	add	r1, pc, r1
   108a0:	ldr	r1, [r1, r0, lsl #2]
   108a4:	b	10964 <lell_print@@Base+0x148>
   108a8:	ldr	r3, [sl, #72]!	; 0x48
   108ac:	ldrb	r0, [sl, #28]
   108b0:	ldr	r1, [pc, #1896]	; 11020 <lell_print@@Base+0x804>
   108b4:	ldr	r2, [pc, #1896]	; 11024 <lell_print@@Base+0x808>
   108b8:	ldrb	r5, [sl, #-68]	; 0xffffffbc
   108bc:	add	r1, pc, r1
   108c0:	add	r2, pc, r2
   108c4:	tst	r0, #1
   108c8:	moveq	r2, r1
   108cc:	ldr	r1, [sl, #-8]
   108d0:	ldr	r0, [pc, #1872]	; 11028 <lell_print@@Base+0x80c>
   108d4:	add	r0, pc, r0
   108d8:	bl	4508 <printf@plt>
   108dc:	ldrb	r1, [sl, #-4]
   108e0:	ldr	r0, [pc, #1860]	; 1102c <lell_print@@Base+0x810>
   108e4:	add	r0, pc, r0
   108e8:	bl	4508 <printf@plt>
   108ec:	ldr	r0, [pc, #1852]	; 11030 <lell_print@@Base+0x814>
   108f0:	and	r5, r5, #3
   108f4:	mov	r1, r5
   108f8:	add	r0, pc, r0
   108fc:	ldr	r2, [r0, r5, lsl #2]
   10900:	ldr	r0, [pc, #1836]	; 11034 <lell_print@@Base+0x818>
   10904:	add	r0, pc, r0
   10908:	bl	4508 <printf@plt>
   1090c:	ldrb	r0, [sl, #-68]	; 0xffffffbc
   10910:	ubfx	r1, r0, #2, #1
   10914:	ubfx	r2, r0, #3, #1
   10918:	ubfx	r3, r0, #4, #1
   1091c:	ldr	r0, [pc, #1812]	; 11038 <lell_print@@Base+0x81c>
   10920:	add	r0, pc, r0
   10924:	bl	4508 <printf@plt>
   10928:	cmp	r5, #3
   1092c:	bne	10d00 <lell_print@@Base+0x4e4>
   10930:	ldrb	r1, [r4, #6]
   10934:	ldr	r2, [pc, #1792]	; 1103c <lell_print@@Base+0x820>
   10938:	cmp	r1, #20
   1093c:	mov	r0, r1
   10940:	add	r2, pc, r2
   10944:	movcs	r0, #20
   10948:	ldr	r2, [r2, r0, lsl #2]
   1094c:	ldr	r0, [pc, #1772]	; 11040 <lell_print@@Base+0x824>
   10950:	add	r0, pc, r0
   10954:	bl	4508 <printf@plt>
   10958:	b	10d00 <lell_print@@Base+0x4e4>
   1095c:	ldr	r1, [pc, #1776]	; 11054 <lell_print@@Base+0x838>
   10960:	add	r1, pc, r1
   10964:	ldr	r0, [pc, #1776]	; 1105c <lell_print@@Base+0x840>
   10968:	add	r0, pc, r0
   1096c:	bl	4508 <printf@plt>
   10970:	ldrb	r0, [r4, #80]	; 0x50
   10974:	cmp	r0, #6
   10978:	bhi	10d00 <lell_print@@Base+0x4e4>
   1097c:	add	r1, pc, #4
   10980:	ldr	r0, [r1, r0, lsl #2]
   10984:	add	pc, r1, r0
   10988:	andeq	r0, r0, ip, lsl r0
   1098c:	strdeq	r0, [r0], -r8
   10990:	andeq	r0, r0, ip, lsl r0
   10994:	muleq	r0, r8, r1
   10998:	muleq	r0, r4, r2
   1099c:	andeq	r0, r0, r0, lsr r4
   109a0:	andeq	r0, r0, ip, lsl r0
   109a4:	ldr	r6, [r4, #84]	; 0x54
   109a8:	ldrb	r2, [r4, #11]
   109ac:	ldr	r0, [pc, #1708]	; 11060 <lell_print@@Base+0x844>
   109b0:	ldr	r1, [pc, #1708]	; 11064 <lell_print@@Base+0x848>
   109b4:	add	r0, pc, r0
   109b8:	add	r1, pc, r1
   109bc:	bl	4508 <printf@plt>
   109c0:	ldrb	r1, [r4, #10]
   109c4:	ldr	r5, [pc, #1692]	; 11068 <lell_print@@Base+0x84c>
   109c8:	add	r5, pc, r5
   109cc:	mov	r0, r5
   109d0:	bl	4508 <printf@plt>
   109d4:	ldrb	r1, [r4, #9]
   109d8:	mov	r0, r5
   109dc:	bl	4508 <printf@plt>
   109e0:	ldrb	r1, [r4, #8]
   109e4:	mov	r0, r5
   109e8:	bl	4508 <printf@plt>
   109ec:	ldrb	r1, [r4, #7]
   109f0:	mov	r0, r5
   109f4:	bl	4508 <printf@plt>
   109f8:	ldrb	r1, [r4, #6]
   109fc:	mov	r0, r5
   10a00:	bl	4508 <printf@plt>
   10a04:	ldr	r0, [pc, #1632]	; 1106c <lell_print@@Base+0x850>
   10a08:	ldr	r1, [pc, #1632]	; 11070 <lell_print@@Base+0x854>
   10a0c:	cmp	r6, #0
   10a10:	add	r0, pc, r0
   10a14:	add	r1, pc, r1
   10a18:	moveq	r1, r0
   10a1c:	ldr	r0, [pc, #1616]	; 11074 <lell_print@@Base+0x858>
   10a20:	add	r0, pc, r0
   10a24:	bl	4508 <printf@plt>
   10a28:	ldr	r0, [r4, #72]	; 0x48
   10a2c:	cmp	r0, #7
   10a30:	blt	10d00 <lell_print@@Base+0x4e4>
   10a34:	ldr	r0, [pc, #1596]	; 11078 <lell_print@@Base+0x85c>
   10a38:	add	r0, pc, r0
   10a3c:	bl	4508 <printf@plt>
   10a40:	ldr	r0, [sl]
   10a44:	cmp	r0, #7
   10a48:	blt	10ce8 <lell_print@@Base+0x4cc>
   10a4c:	ldr	r5, [pc, #1576]	; 1107c <lell_print@@Base+0x860>
   10a50:	add	r6, r4, #12
   10a54:	mov	r7, #0
   10a58:	add	r5, pc, r5
   10a5c:	ldrb	r1, [r6, r7]
   10a60:	mov	r0, r5
   10a64:	bl	4508 <printf@plt>
   10a68:	ldr	r0, [sl]
   10a6c:	add	r7, r7, #1
   10a70:	sub	r0, r0, #6
   10a74:	cmp	r7, r0
   10a78:	blt	10a5c <lell_print@@Base+0x240>
   10a7c:	b	10ce8 <lell_print@@Base+0x4cc>
   10a80:	ldr	r9, [r4, #84]	; 0x54
   10a84:	ldrb	r2, [r4, #11]
   10a88:	ldr	r0, [pc, #1520]	; 11080 <lell_print@@Base+0x864>
   10a8c:	ldr	r1, [pc, #1520]	; 11084 <lell_print@@Base+0x868>
   10a90:	add	r0, pc, r0
   10a94:	add	r1, pc, r1
   10a98:	bl	4508 <printf@plt>
   10a9c:	ldrb	r1, [r4, #10]
   10aa0:	ldr	r5, [pc, #1504]	; 11088 <lell_print@@Base+0x86c>
   10aa4:	add	r5, pc, r5
   10aa8:	mov	r0, r5
   10aac:	bl	4508 <printf@plt>
   10ab0:	ldrb	r1, [r4, #9]
   10ab4:	mov	r0, r5
   10ab8:	bl	4508 <printf@plt>
   10abc:	ldrb	r1, [r4, #8]
   10ac0:	mov	r0, r5
   10ac4:	bl	4508 <printf@plt>
   10ac8:	ldrb	r1, [r4, #7]
   10acc:	mov	r0, r5
   10ad0:	bl	4508 <printf@plt>
   10ad4:	ldrb	r1, [r4, #6]
   10ad8:	mov	r0, r5
   10adc:	bl	4508 <printf@plt>
   10ae0:	ldr	r7, [pc, #1444]	; 1108c <lell_print@@Base+0x870>
   10ae4:	ldr	r6, [pc, #1444]	; 11090 <lell_print@@Base+0x874>
   10ae8:	cmp	r9, #0
   10aec:	ldr	r9, [pc, #1440]	; 11094 <lell_print@@Base+0x878>
   10af0:	add	r6, pc, r6
   10af4:	add	r9, pc, r9
   10af8:	add	r7, pc, r7
   10afc:	mov	r1, r6
   10b00:	mov	r0, r9
   10b04:	moveq	r1, r7
   10b08:	bl	4508 <printf@plt>
   10b0c:	ldr	r8, [r4, #88]	; 0x58
   10b10:	ldrb	r2, [r4, #17]
   10b14:	ldr	r1, [pc, #1404]	; 11098 <lell_print@@Base+0x87c>
   10b18:	add	r1, pc, r1
   10b1c:	b	10bbc <lell_print@@Base+0x3a0>
   10b20:	ldr	r9, [r4, #84]	; 0x54
   10b24:	ldrb	r2, [r4, #11]
   10b28:	ldr	r0, [pc, #1392]	; 110a0 <lell_print@@Base+0x884>
   10b2c:	ldr	r1, [pc, #1392]	; 110a4 <lell_print@@Base+0x888>
   10b30:	add	r0, pc, r0
   10b34:	add	r1, pc, r1
   10b38:	bl	4508 <printf@plt>
   10b3c:	ldrb	r1, [r4, #10]
   10b40:	ldr	r5, [pc, #1376]	; 110a8 <lell_print@@Base+0x88c>
   10b44:	add	r5, pc, r5
   10b48:	mov	r0, r5
   10b4c:	bl	4508 <printf@plt>
   10b50:	ldrb	r1, [r4, #9]
   10b54:	mov	r0, r5
   10b58:	bl	4508 <printf@plt>
   10b5c:	ldrb	r1, [r4, #8]
   10b60:	mov	r0, r5
   10b64:	bl	4508 <printf@plt>
   10b68:	ldrb	r1, [r4, #7]
   10b6c:	mov	r0, r5
   10b70:	bl	4508 <printf@plt>
   10b74:	ldrb	r1, [r4, #6]
   10b78:	mov	r0, r5
   10b7c:	bl	4508 <printf@plt>
   10b80:	ldr	r7, [pc, #1316]	; 110ac <lell_print@@Base+0x890>
   10b84:	ldr	r6, [pc, #1316]	; 110b0 <lell_print@@Base+0x894>
   10b88:	cmp	r9, #0
   10b8c:	ldr	r9, [pc, #1312]	; 110b4 <lell_print@@Base+0x898>
   10b90:	add	r6, pc, r6
   10b94:	add	r9, pc, r9
   10b98:	add	r7, pc, r7
   10b9c:	mov	r1, r6
   10ba0:	mov	r0, r9
   10ba4:	moveq	r1, r7
   10ba8:	bl	4508 <printf@plt>
   10bac:	ldr	r8, [r4, #88]	; 0x58
   10bb0:	ldrb	r2, [r4, #17]
   10bb4:	ldr	r1, [pc, #1276]	; 110b8 <lell_print@@Base+0x89c>
   10bb8:	add	r1, pc, r1
   10bbc:	ldr	r0, [pc, #1240]	; 1109c <lell_print@@Base+0x880>
   10bc0:	add	r0, pc, r0
   10bc4:	bl	4508 <printf@plt>
   10bc8:	ldrb	r1, [r4, #16]
   10bcc:	mov	r0, r5
   10bd0:	bl	4508 <printf@plt>
   10bd4:	ldrb	r1, [r4, #15]
   10bd8:	mov	r0, r5
   10bdc:	bl	4508 <printf@plt>
   10be0:	ldrb	r1, [r4, #14]
   10be4:	mov	r0, r5
   10be8:	bl	4508 <printf@plt>
   10bec:	ldrb	r1, [r4, #13]
   10bf0:	mov	r0, r5
   10bf4:	bl	4508 <printf@plt>
   10bf8:	ldrb	r1, [r4, #12]
   10bfc:	mov	r0, r5
   10c00:	bl	4508 <printf@plt>
   10c04:	cmp	r8, #0
   10c08:	mov	r0, r9
   10c0c:	moveq	r6, r7
   10c10:	mov	r1, r6
   10c14:	bl	4508 <printf@plt>
   10c18:	b	10d00 <lell_print@@Base+0x4e4>
   10c1c:	ldr	r6, [r4, #84]	; 0x54
   10c20:	ldrb	r2, [r4, #11]
   10c24:	ldr	r0, [pc, #1168]	; 110bc <lell_print@@Base+0x8a0>
   10c28:	ldr	r1, [pc, #1168]	; 110c0 <lell_print@@Base+0x8a4>
   10c2c:	add	r0, pc, r0
   10c30:	add	r1, pc, r1
   10c34:	bl	4508 <printf@plt>
   10c38:	ldrb	r1, [r4, #10]
   10c3c:	ldr	r5, [pc, #1152]	; 110c4 <lell_print@@Base+0x8a8>
   10c40:	add	r5, pc, r5
   10c44:	mov	r0, r5
   10c48:	bl	4508 <printf@plt>
   10c4c:	ldrb	r1, [r4, #9]
   10c50:	mov	r0, r5
   10c54:	bl	4508 <printf@plt>
   10c58:	ldrb	r1, [r4, #8]
   10c5c:	mov	r0, r5
   10c60:	bl	4508 <printf@plt>
   10c64:	ldrb	r1, [r4, #7]
   10c68:	mov	r0, r5
   10c6c:	bl	4508 <printf@plt>
   10c70:	ldrb	r1, [r4, #6]
   10c74:	mov	r0, r5
   10c78:	bl	4508 <printf@plt>
   10c7c:	ldr	r0, [pc, #1092]	; 110c8 <lell_print@@Base+0x8ac>
   10c80:	ldr	r1, [pc, #1092]	; 110cc <lell_print@@Base+0x8b0>
   10c84:	cmp	r6, #0
   10c88:	add	r0, pc, r0
   10c8c:	add	r1, pc, r1
   10c90:	moveq	r1, r0
   10c94:	ldr	r0, [pc, #1076]	; 110d0 <lell_print@@Base+0x8b4>
   10c98:	add	r0, pc, r0
   10c9c:	bl	4508 <printf@plt>
   10ca0:	ldr	r0, [pc, #1068]	; 110d4 <lell_print@@Base+0x8b8>
   10ca4:	add	r0, pc, r0
   10ca8:	bl	4508 <printf@plt>
   10cac:	ldr	r0, [r4, #72]	; 0x48
   10cb0:	cmp	r0, #7
   10cb4:	blt	10ce8 <lell_print@@Base+0x4cc>
   10cb8:	ldr	r5, [pc, #1048]	; 110d8 <lell_print@@Base+0x8bc>
   10cbc:	add	r6, r4, #12
   10cc0:	mov	r7, #0
   10cc4:	add	r5, pc, r5
   10cc8:	ldrb	r1, [r6, r7]
   10ccc:	mov	r0, r5
   10cd0:	bl	4508 <printf@plt>
   10cd4:	ldr	r0, [sl]
   10cd8:	add	r7, r7, #1
   10cdc:	sub	r0, r0, #6
   10ce0:	cmp	r7, r0
   10ce4:	blt	10cc8 <lell_print@@Base+0x4ac>
   10ce8:	mov	r0, #10
   10cec:	bl	4724 <putchar@plt>
   10cf0:	ldr	r1, [r4, #72]	; 0x48
   10cf4:	add	r0, r4, #12
   10cf8:	sub	r1, r1, #6
   10cfc:	bl	1114c <lell_print@@Base+0x930>
   10d00:	mov	r0, #10
   10d04:	bl	4724 <putchar@plt>
   10d08:	ldr	r0, [pc, #1068]	; 1113c <lell_print@@Base+0x920>
   10d0c:	add	r0, pc, r0
   10d10:	bl	4508 <printf@plt>
   10d14:	ldr	r0, [sl]
   10d18:	cmp	r0, #1
   10d1c:	blt	10d50 <lell_print@@Base+0x534>
   10d20:	ldr	r5, [pc, #1048]	; 11140 <lell_print@@Base+0x924>
   10d24:	mov	r6, #6
   10d28:	add	r5, pc, r5
   10d2c:	ldrb	r1, [r4, r6]
   10d30:	mov	r0, r5
   10d34:	bl	4508 <printf@plt>
   10d38:	ldr	r1, [r4, #72]	; 0x48
   10d3c:	add	r0, r6, #1
   10d40:	add	r1, r1, #5
   10d44:	cmp	r6, r1
   10d48:	mov	r6, r0
   10d4c:	blt	10d2c <lell_print@@Base+0x510>
   10d50:	mov	r0, #10
   10d54:	bl	4724 <putchar@plt>
   10d58:	ldr	r0, [pc, #996]	; 11144 <lell_print@@Base+0x928>
   10d5c:	add	r0, pc, r0
   10d60:	bl	4508 <printf@plt>
   10d64:	ldr	r0, [r4, #72]	; 0x48
   10d68:	add	r0, r4, r0
   10d6c:	ldrb	r1, [r0, #6]
   10d70:	ldr	r5, [pc, #976]	; 11148 <lell_print@@Base+0x92c>
   10d74:	add	r5, pc, r5
   10d78:	mov	r0, r5
   10d7c:	bl	4508 <printf@plt>
   10d80:	ldr	r0, [r4, #72]	; 0x48
   10d84:	add	r0, r4, r0
   10d88:	ldrb	r1, [r0, #7]
   10d8c:	mov	r0, r5
   10d90:	bl	4508 <printf@plt>
   10d94:	ldr	r0, [r4, #72]	; 0x48
   10d98:	add	r0, r4, r0
   10d9c:	ldrb	r1, [r0, #8]
   10da0:	mov	r0, r5
   10da4:	bl	4508 <printf@plt>
   10da8:	mov	r0, #10
   10dac:	sub	sp, fp, #28
   10db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10db4:	b	4724 <putchar@plt>
   10db8:	ldr	r9, [r4, #84]	; 0x54
   10dbc:	ldrb	r2, [r4, #11]
   10dc0:	ldr	r0, [pc, #788]	; 110dc <lell_print@@Base+0x8c0>
   10dc4:	ldr	r1, [pc, #788]	; 110e0 <lell_print@@Base+0x8c4>
   10dc8:	add	r0, pc, r0
   10dcc:	add	r1, pc, r1
   10dd0:	bl	4508 <printf@plt>
   10dd4:	ldrb	r1, [r4, #10]
   10dd8:	ldr	r5, [pc, #772]	; 110e4 <lell_print@@Base+0x8c8>
   10ddc:	add	r5, pc, r5
   10de0:	mov	r0, r5
   10de4:	bl	4508 <printf@plt>
   10de8:	ldrb	r1, [r4, #9]
   10dec:	mov	r0, r5
   10df0:	bl	4508 <printf@plt>
   10df4:	ldrb	r1, [r4, #8]
   10df8:	mov	r0, r5
   10dfc:	bl	4508 <printf@plt>
   10e00:	ldrb	r1, [r4, #7]
   10e04:	mov	r0, r5
   10e08:	bl	4508 <printf@plt>
   10e0c:	ldrb	r1, [r4, #6]
   10e10:	mov	r0, r5
   10e14:	bl	4508 <printf@plt>
   10e18:	ldr	r7, [pc, #712]	; 110e8 <lell_print@@Base+0x8cc>
   10e1c:	ldr	r6, [pc, #712]	; 110ec <lell_print@@Base+0x8d0>
   10e20:	cmp	r9, #0
   10e24:	ldr	r9, [pc, #708]	; 110f0 <lell_print@@Base+0x8d4>
   10e28:	add	r6, pc, r6
   10e2c:	add	r9, pc, r9
   10e30:	add	r7, pc, r7
   10e34:	mov	r1, r6
   10e38:	mov	r0, r9
   10e3c:	moveq	r1, r7
   10e40:	bl	4508 <printf@plt>
   10e44:	ldr	r8, [r4, #88]	; 0x58
   10e48:	ldrb	r2, [r4, #17]
   10e4c:	ldr	r1, [pc, #672]	; 110f4 <lell_print@@Base+0x8d8>
   10e50:	ldr	r0, [pc, #672]	; 110f8 <lell_print@@Base+0x8dc>
   10e54:	add	r1, pc, r1
   10e58:	add	r0, pc, r0
   10e5c:	bl	4508 <printf@plt>
   10e60:	ldrb	r1, [r4, #16]
   10e64:	mov	r0, r5
   10e68:	bl	4508 <printf@plt>
   10e6c:	ldrb	r1, [r4, #15]
   10e70:	mov	r0, r5
   10e74:	bl	4508 <printf@plt>
   10e78:	ldrb	r1, [r4, #14]
   10e7c:	mov	r0, r5
   10e80:	bl	4508 <printf@plt>
   10e84:	ldrb	r1, [r4, #13]
   10e88:	mov	r0, r5
   10e8c:	bl	4508 <printf@plt>
   10e90:	ldrb	r1, [r4, #12]
   10e94:	mov	r0, r5
   10e98:	bl	4508 <printf@plt>
   10e9c:	cmp	r8, #0
   10ea0:	mov	r0, r9
   10ea4:	moveq	r6, r7
   10ea8:	mov	r1, r6
   10eac:	bl	4508 <printf@plt>
   10eb0:	ldr	r2, [r4, #18]
   10eb4:	ldr	r0, [pc, #576]	; 110fc <lell_print@@Base+0x8e0>
   10eb8:	ldr	r1, [pc, #576]	; 11100 <lell_print@@Base+0x8e4>
   10ebc:	add	r0, pc, r0
   10ec0:	add	r1, pc, r1
   10ec4:	bl	4508 <printf@plt>
   10ec8:	ldrb	r0, [r4, #22]
   10ecc:	ldrb	r1, [r4, #23]
   10ed0:	ldrb	r2, [r4, #24]
   10ed4:	orr	r0, r0, r1, lsl #8
   10ed8:	orr	r2, r0, r2, lsl #16
   10edc:	ldr	r0, [pc, #544]	; 11104 <lell_print@@Base+0x8e8>
   10ee0:	ldr	r1, [pc, #544]	; 11108 <lell_print@@Base+0x8ec>
   10ee4:	add	r0, pc, r0
   10ee8:	add	r1, pc, r1
   10eec:	bl	4508 <printf@plt>
   10ef0:	ldrb	r2, [r4, #25]
   10ef4:	ldr	r0, [pc, #528]	; 1110c <lell_print@@Base+0x8f0>
   10ef8:	ldr	r1, [pc, #528]	; 11110 <lell_print@@Base+0x8f4>
   10efc:	add	r0, pc, r0
   10f00:	add	r1, pc, r1
   10f04:	mov	r3, r2
   10f08:	bl	4508 <printf@plt>
   10f0c:	ldrb	r0, [r4, #26]
   10f10:	ldrb	r1, [r4, #27]
   10f14:	ldr	r5, [pc, #504]	; 11114 <lell_print@@Base+0x8f8>
   10f18:	orr	r2, r0, r1, lsl #8
   10f1c:	ldr	r1, [pc, #500]	; 11118 <lell_print@@Base+0x8fc>
   10f20:	add	r5, pc, r5
   10f24:	mov	r0, r5
   10f28:	mov	r3, r2
   10f2c:	add	r1, pc, r1
   10f30:	bl	4508 <printf@plt>
   10f34:	ldrb	r0, [r4, #28]
   10f38:	ldrb	r1, [r4, #29]
   10f3c:	orr	r2, r0, r1, lsl #8
   10f40:	ldr	r1, [pc, #468]	; 1111c <lell_print@@Base+0x900>
   10f44:	mov	r0, r5
   10f48:	mov	r3, r2
   10f4c:	add	r1, pc, r1
   10f50:	bl	4508 <printf@plt>
   10f54:	ldrb	r0, [r4, #30]
   10f58:	ldrb	r1, [r4, #31]
   10f5c:	orr	r2, r0, r1, lsl #8
   10f60:	ldr	r1, [pc, #440]	; 11120 <lell_print@@Base+0x904>
   10f64:	mov	r0, r5
   10f68:	mov	r3, r2
   10f6c:	add	r1, pc, r1
   10f70:	bl	4508 <printf@plt>
   10f74:	ldrb	r0, [r4, #32]
   10f78:	ldrb	r1, [r4, #33]	; 0x21
   10f7c:	orr	r2, r0, r1, lsl #8
   10f80:	ldr	r1, [pc, #412]	; 11124 <lell_print@@Base+0x908>
   10f84:	mov	r0, r5
   10f88:	mov	r3, r2
   10f8c:	add	r1, pc, r1
   10f90:	bl	4508 <printf@plt>
   10f94:	ldr	r0, [pc, #396]	; 11128 <lell_print@@Base+0x90c>
   10f98:	add	r0, pc, r0
   10f9c:	bl	4508 <printf@plt>
   10fa0:	ldrb	r1, [r4, #34]	; 0x22
   10fa4:	ldr	r5, [pc, #384]	; 1112c <lell_print@@Base+0x910>
   10fa8:	add	r5, pc, r5
   10fac:	mov	r0, r5
   10fb0:	bl	4508 <printf@plt>
   10fb4:	ldrb	r1, [r4, #35]	; 0x23
   10fb8:	mov	r0, r5
   10fbc:	bl	4508 <printf@plt>
   10fc0:	ldrb	r1, [r4, #36]	; 0x24
   10fc4:	mov	r0, r5
   10fc8:	bl	4508 <printf@plt>
   10fcc:	ldrb	r1, [r4, #37]	; 0x25
   10fd0:	mov	r0, r5
   10fd4:	bl	4508 <printf@plt>
   10fd8:	ldrb	r1, [r4, #38]	; 0x26
   10fdc:	mov	r0, r5
   10fe0:	bl	4508 <printf@plt>
   10fe4:	mov	r0, #10
   10fe8:	bl	4724 <putchar@plt>
   10fec:	ldrb	r0, [r4, #39]	; 0x27
   10ff0:	and	r1, r0, #31
   10ff4:	ldr	r0, [pc, #308]	; 11130 <lell_print@@Base+0x914>
   10ff8:	add	r0, pc, r0
   10ffc:	bl	4508 <printf@plt>
   11000:	ldrb	r0, [r4, #39]	; 0x27
   11004:	lsr	r1, r0, #5
   11008:	ldr	r0, [pc, #292]	; 11134 <lell_print@@Base+0x918>
   1100c:	add	r0, pc, r0
   11010:	ldr	r2, [r0, r1, lsl #2]
   11014:	ldr	r0, [pc, #284]	; 11138 <lell_print@@Base+0x91c>
   11018:	add	r0, pc, r0
   1101c:	b	10954 <lell_print@@Base+0x138>
   11020:	andeq	r5, r0, r9, lsl #8
   11024:	andeq	r5, r0, r7, lsl #8
   11028:	ldrdeq	r5, [r0], -r0
   1102c:	andeq	r5, r0, r9, ror #7
   11030:	andeq	fp, r1, ip, asr #10
   11034:	andeq	r5, r0, r0, ror #7
   11038:	ldrdeq	r5, [r0], -r7
   1103c:	andeq	fp, r1, r4, lsl r5
   11040:	andeq	r5, r0, sp, lsr #10
   11044:	andeq	r5, r0, r9, ror r4
   11048:	andeq	r5, r0, r7, ror r4
   1104c:	andeq	r5, r0, lr, lsr #12
   11050:	andeq	r5, r0, r9, asr r4
   11054:	andeq	r5, r0, r0, ror #5
   11058:	andeq	fp, r1, ip, lsl #11
   1105c:	andeq	r5, r0, r1, asr r5
   11060:	andeq	r5, r0, r0, lsr #14
   11064:	andeq	r5, r0, r0, lsl r5
   11068:	andeq	r5, r0, r7, lsl r7
   1106c:	andeq	r5, r0, r3, ror #13
   11070:	ldrdeq	r5, [r0], -r8
   11074:	andeq	r5, r0, r5, asr #13
   11078:	muleq	r0, r8, r4
   1107c:	muleq	r0, pc, r7	; <UNPREDICTABLE>
   11080:	andeq	r5, r0, r4, asr #12
   11084:	andeq	r5, r0, r4, lsr r4
   11088:	andeq	r5, r0, fp, lsr r6
   1108c:	strdeq	r5, [r0], -fp
   11090:	strdeq	r5, [r0], -ip
   11094:	strdeq	r5, [r0], -r1
   11098:	andeq	r5, r0, r5, asr #7
   1109c:	andeq	r5, r0, r4, lsl r5
   110a0:	andeq	r5, r0, r4, lsr #11
   110a4:			; <UNDEFINED> instruction: 0x000053b1
   110a8:	muleq	r0, fp, r5
   110ac:	andeq	r5, r0, fp, asr r5
   110b0:	andeq	r5, r0, ip, asr r5
   110b4:	andeq	r5, r0, r1, asr r5
   110b8:	andeq	r5, r0, r0, lsl r3
   110bc:	andeq	r5, r0, r8, lsr #9
   110c0:	muleq	r0, r8, r2
   110c4:	muleq	r0, pc, r4	; <UNPREDICTABLE>
   110c8:	andeq	r5, r0, fp, ror #8
   110cc:	andeq	r5, r0, r0, ror #8
   110d0:	andeq	r5, r0, sp, asr #8
   110d4:	andeq	r5, r0, r9, asr #4
   110d8:	andeq	r5, r0, r3, lsr r5
   110dc:	andeq	r5, r0, ip, lsl #6
   110e0:	andeq	r5, r0, r1, lsl r1
   110e4:	andeq	r5, r0, r3, lsl #6
   110e8:	andeq	r5, r0, r3, asr #5
   110ec:	andeq	r5, r0, r4, asr #5
   110f0:			; <UNDEFINED> instruction: 0x000052b9
   110f4:	andeq	r5, r0, r4, ror r0
   110f8:	andeq	r5, r0, ip, ror r2
   110fc:	andeq	r5, r0, r6, asr #8
   11100:	andeq	r5, r0, lr, lsr r0
   11104:	andeq	r5, r0, sl, lsr #8
   11108:	andeq	r5, r0, lr, lsl r0
   1110c:	andeq	r5, r0, lr, lsl r4
   11110:	andeq	r5, r0, r0, lsl r0
   11114:	andeq	r5, r0, fp, lsl #8
   11118:	andeq	r4, r0, lr, ror #31
   1111c:	ldrdeq	r4, [r0], -sl
   11120:	andeq	r4, r0, r5, asr #31
   11124:	andeq	r4, r0, pc, lsr #31
   11128:	andeq	r4, r0, sp, lsr #31
   1112c:	andeq	r5, r0, pc, asr #4
   11130:	andeq	r4, r0, r6, asr pc
   11134:	muleq	r1, ip, lr
   11138:	andeq	r4, r0, r3, asr #30
   1113c:	andeq	r5, r0, r0, ror #4
   11140:	andeq	r5, r0, pc, asr #9
   11144:	andeq	r5, r0, fp, lsl r2
   11148:	andeq	r5, r0, r3, lsl #9
   1114c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11150:	add	fp, sp, #28
   11154:	sub	sp, sp, #4
   11158:	vpush	{d8}
   1115c:	sub	sp, sp, #32
   11160:	cmp	r1, #1
   11164:	blt	118cc <lell_print@@Base+0x10b0>
   11168:	mov	r7, r0
   1116c:	add	r0, r0, #2
   11170:	mov	r3, r1
   11174:	mov	r9, #0
   11178:	vmov.f64	d8, #116	; 0x3fa00000  1.250
   1117c:	str	r0, [sp, #4]
   11180:	add	r0, r7, #4
   11184:	str	r0, [sp]
   11188:	ldr	r4, [pc, #1928]	; 11918 <lell_print@@Base+0x10fc>
   1118c:	ldr	r2, [pc, #1928]	; 1191c <lell_print@@Base+0x1100>
   11190:	ldr	sl, [pc, #1928]	; 11920 <lell_print@@Base+0x1104>
   11194:	str	r1, [sp, #8]
   11198:	str	r7, [sp, #12]
   1119c:	add	r4, pc, r4
   111a0:	add	r2, pc, r2
   111a4:	add	sl, pc, sl
   111a8:	ldrb	r6, [r7, r9]
   111ac:	add	r1, r9, #1
   111b0:	mov	r8, r9
   111b4:	add	r9, r1, r6
   111b8:	cmp	r9, r3
   111bc:	bgt	118dc <lell_print@@Base+0x10c0>
   111c0:	cmp	r6, #0
   111c4:	beq	118fc <lell_print@@Base+0x10e0>
   111c8:	ldrb	r7, [r7, r1]
   111cc:	ldr	r0, [pc, #1872]	; 11924 <lell_print@@Base+0x1108>
   111d0:	mov	r5, r2
   111d4:	add	r0, pc, r0
   111d8:	mov	r1, r7
   111dc:	bl	4508 <printf@plt>
   111e0:	sub	r0, r7, #1
   111e4:	cmp	r0, #21
   111e8:	bhi	1134c <lell_print@@Base+0xb30>
   111ec:	add	r1, pc, #4
   111f0:	ldr	r0, [r1, r0, lsl #2]
   111f4:	add	pc, r1, r0
   111f8:	andeq	r0, r0, r8, asr r0
   111fc:	andeq	r0, r0, r4, lsr #4
   11200:	andeq	r0, r0, r8, ror r2
   11204:	andeq	r0, r0, r0, ror #3
   11208:	andeq	r0, r0, r0, ror #3
   1120c:	muleq	r0, r4, r2
   11210:			; <UNDEFINED> instruction: 0x000002bc
   11214:	andeq	r0, r0, r0, ror #3
   11218:	andeq	r0, r0, r8, lsl #8
   1121c:	andeq	r0, r0, r0, ror #8
   11220:	andeq	r0, r0, r0, ror #3
   11224:	andeq	r0, r0, r0, ror #3
   11228:	andeq	r0, r0, r0, ror #3
   1122c:	andeq	r0, r0, r0, ror #3
   11230:	andeq	r0, r0, r0, ror #3
   11234:	andeq	r0, r0, r0, ror #3
   11238:	andeq	r0, r0, r0, ror #3
   1123c:	muleq	r0, r8, r4
   11240:	andeq	r0, r0, r0, ror #3
   11244:	andeq	r0, r0, r0, ror #3
   11248:	andeq	r0, r0, r0, ror #3
   1124c:	andeq	r0, r0, r4, lsl r5
   11250:	ldr	r0, [pc, #1748]	; 1192c <lell_print@@Base+0x1110>
   11254:	add	r0, pc, r0
   11258:	bl	464c <puts@plt>
   1125c:	mov	r0, r4
   11260:	bl	4508 <printf@plt>
   11264:	ldr	r7, [sp, #12]
   11268:	add	r6, r8, #2
   1126c:	ldrb	r0, [r7, r6]
   11270:	ldr	r4, [pc, #1720]	; 11930 <lell_print@@Base+0x1114>
   11274:	add	r4, pc, r4
   11278:	lsr	r1, r0, #7
   1127c:	mov	r0, r4
   11280:	bl	4508 <printf@plt>
   11284:	ldrb	r0, [r7, r6]
   11288:	ubfx	r1, r0, #6, #1
   1128c:	mov	r0, r4
   11290:	bl	4508 <printf@plt>
   11294:	ldrb	r0, [r7, r6]
   11298:	ubfx	r1, r0, #5, #1
   1129c:	mov	r0, r4
   112a0:	bl	4508 <printf@plt>
   112a4:	ldrb	r0, [r7, r6]
   112a8:	ubfx	r1, r0, #4, #1
   112ac:	mov	r0, r4
   112b0:	bl	4508 <printf@plt>
   112b4:	ldrb	r0, [r7, r6]
   112b8:	ubfx	r1, r0, #3, #1
   112bc:	mov	r0, r4
   112c0:	bl	4508 <printf@plt>
   112c4:	ldrb	r0, [r7, r6]
   112c8:	ubfx	r1, r0, #2, #1
   112cc:	mov	r0, r4
   112d0:	bl	4508 <printf@plt>
   112d4:	ldrb	r0, [r7, r6]
   112d8:	ubfx	r1, r0, #1, #1
   112dc:	mov	r0, r4
   112e0:	bl	4508 <printf@plt>
   112e4:	ldrb	r0, [r7, r6]
   112e8:	and	r1, r0, #1
   112ec:	mov	r0, r4
   112f0:	bl	4508 <printf@plt>
   112f4:	mov	r0, #10
   112f8:	bl	4724 <putchar@plt>
   112fc:	ldrb	r0, [r7, r6]
   11300:	ldr	r4, [pc, #1580]	; 11934 <lell_print@@Base+0x1118>
   11304:	tst	r0, #1
   11308:	add	r4, pc, r4
   1130c:	bne	11798 <lell_print@@Base+0xf7c>
   11310:	tst	r0, #2
   11314:	bne	117b8 <lell_print@@Base+0xf9c>
   11318:	tst	r0, #4
   1131c:	bne	117d8 <lell_print@@Base+0xfbc>
   11320:	tst	r0, #8
   11324:	bne	117f8 <lell_print@@Base+0xfdc>
   11328:	tst	r0, #16
   1132c:	bne	11818 <lell_print@@Base+0xffc>
   11330:	tst	r0, #32
   11334:	bne	11838 <lell_print@@Base+0x101c>
   11338:	tst	r0, #64	; 0x40
   1133c:	bne	11858 <lell_print@@Base+0x103c>
   11340:	tst	r0, #128	; 0x80
   11344:	bne	11878 <lell_print@@Base+0x105c>
   11348:	b	1188c <lell_print@@Base+0x1070>
   1134c:	cmp	r7, #255	; 0xff
   11350:	bne	113d8 <lell_print@@Base+0xbbc>
   11354:	ldr	r0, [pc, #1608]	; 119a4 <lell_print@@Base+0x1188>
   11358:	add	r0, pc, r0
   1135c:	bl	464c <puts@plt>
   11360:	mov	r0, r4
   11364:	bl	4508 <printf@plt>
   11368:	cmp	r6, #3
   1136c:	bcc	11788 <lell_print@@Base+0xf6c>
   11370:	ldr	r0, [sp, #12]
   11374:	add	r0, r0, r8
   11378:	ldrh	r0, [r0, #2]
   1137c:	bl	4754 <bt_compidtostr@plt>
   11380:	mov	r1, r0
   11384:	ldr	r0, [pc, #1564]	; 119a8 <lell_print@@Base+0x118c>
   11388:	add	r0, pc, r0
   1138c:	bl	4508 <printf@plt>
   11390:	mov	r0, r4
   11394:	bl	4508 <printf@plt>
   11398:	ldr	r0, [pc, #1548]	; 119ac <lell_print@@Base+0x1190>
   1139c:	add	r0, pc, r0
   113a0:	bl	4508 <printf@plt>
   113a4:	ldr	r7, [pc, #1540]	; 119b0 <lell_print@@Base+0x1194>
   113a8:	cmp	r6, #3
   113ac:	add	r7, pc, r7
   113b0:	beq	1188c <lell_print@@Base+0x1070>
   113b4:	ldr	r0, [sp]
   113b8:	sub	r6, r6, #3
   113bc:	add	r4, r0, r8
   113c0:	ldrb	r1, [r4], #1
   113c4:	mov	r0, r7
   113c8:	bl	4508 <printf@plt>
   113cc:	subs	r6, r6, #1
   113d0:	bne	113c0 <lell_print@@Base+0xba4>
   113d4:	b	1188c <lell_print@@Base+0x1070>
   113d8:	mov	r0, #10
   113dc:	bl	4724 <putchar@plt>
   113e0:	mov	r0, r4
   113e4:	bl	4508 <printf@plt>
   113e8:	ldr	r7, [pc, #1336]	; 11928 <lell_print@@Base+0x110c>
   113ec:	cmp	r6, #2
   113f0:	add	r7, pc, r7
   113f4:	bcc	1188c <lell_print@@Base+0x1070>
   113f8:	ldr	r0, [sp, #4]
   113fc:	sub	r6, r6, #1
   11400:	add	r4, r0, r8
   11404:	ldrb	r1, [r4], #1
   11408:	mov	r0, r7
   1140c:	bl	4508 <printf@plt>
   11410:	subs	r6, r6, #1
   11414:	bne	11404 <lell_print@@Base+0xbe8>
   11418:	b	1188c <lell_print@@Base+0x1070>
   1141c:	ldr	r0, [pc, #1332]	; 11958 <lell_print@@Base+0x113c>
   11420:	add	r0, pc, r0
   11424:	bl	464c <puts@plt>
   11428:	mov	r2, r5
   1142c:	tst	r6, #1
   11430:	beq	118b4 <lell_print@@Base+0x1098>
   11434:	cmp	r6, #2
   11438:	bcc	118b4 <lell_print@@Base+0x1098>
   1143c:	ldr	r0, [sp, #4]
   11440:	sub	r4, r6, #1
   11444:	mov	r7, #0
   11448:	add	r6, r0, r8
   1144c:	add	r0, r6, r7
   11450:	ldrh	r1, [r0]
   11454:	mov	r0, r2
   11458:	bl	4508 <printf@plt>
   1145c:	add	r7, r7, #2
   11460:	mov	r2, r5
   11464:	cmp	r7, r4
   11468:	blt	1144c <lell_print@@Base+0xc30>
   1146c:	b	118b4 <lell_print@@Base+0x1098>
   11470:	ldr	r0, [pc, #1252]	; 1195c <lell_print@@Base+0x1140>
   11474:	add	r0, pc, r0
   11478:	bl	464c <puts@plt>
   1147c:	mov	r2, r5
   11480:	tst	r6, #1
   11484:	bne	11434 <lell_print@@Base+0xc18>
   11488:	b	118b4 <lell_print@@Base+0x1098>
   1148c:	ldr	r0, [pc, #1232]	; 11964 <lell_print@@Base+0x1148>
   11490:	add	r0, pc, r0
   11494:	bl	464c <puts@plt>
   11498:	sub	r7, r6, #1
   1149c:	tst	r7, #15
   114a0:	beq	114cc <lell_print@@Base+0xcb0>
   114a4:	ldr	r0, [pc, #1220]	; 11970 <lell_print@@Base+0x1154>
   114a8:	mov	r1, r7
   114ac:	add	r0, pc, r0
   114b0:	b	118ac <lell_print@@Base+0x1090>
   114b4:	ldr	r0, [pc, #1196]	; 11968 <lell_print@@Base+0x114c>
   114b8:	add	r0, pc, r0
   114bc:	bl	464c <puts@plt>
   114c0:	sub	r7, r6, #1
   114c4:	tst	r7, #15
   114c8:	bne	114a4 <lell_print@@Base+0xc88>
   114cc:	cmp	r6, #2
   114d0:	bcc	118b0 <lell_print@@Base+0x1094>
   114d4:	ldr	r0, [sp, #4]
   114d8:	mov	r4, #0
   114dc:	add	r6, r0, r8
   114e0:	ldrb	r0, [r6, r4]
   114e4:	and	r1, r4, #15
   114e8:	add	r3, sp, #16
   114ec:	eor	r2, r1, #15
   114f0:	cmp	r1, #15
   114f4:	strb	r0, [r3, r2]
   114f8:	bne	115f0 <lell_print@@Base+0xdd4>
   114fc:	ldr	r0, [pc, #1128]	; 1196c <lell_print@@Base+0x1150>
   11500:	add	r0, pc, r0
   11504:	bl	4508 <printf@plt>
   11508:	ldrb	r1, [sp, #16]
   1150c:	mov	r0, sl
   11510:	bl	4508 <printf@plt>
   11514:	ldrb	r1, [sp, #17]
   11518:	mov	r0, sl
   1151c:	bl	4508 <printf@plt>
   11520:	ldrb	r1, [sp, #18]
   11524:	mov	r0, sl
   11528:	bl	4508 <printf@plt>
   1152c:	ldrb	r1, [sp, #19]
   11530:	mov	r0, sl
   11534:	bl	4508 <printf@plt>
   11538:	mov	r0, #45	; 0x2d
   1153c:	bl	4724 <putchar@plt>
   11540:	ldrb	r1, [sp, #20]
   11544:	mov	r0, sl
   11548:	bl	4508 <printf@plt>
   1154c:	ldrb	r1, [sp, #21]
   11550:	mov	r0, sl
   11554:	bl	4508 <printf@plt>
   11558:	mov	r0, #45	; 0x2d
   1155c:	bl	4724 <putchar@plt>
   11560:	ldrb	r1, [sp, #22]
   11564:	mov	r0, sl
   11568:	bl	4508 <printf@plt>
   1156c:	ldrb	r1, [sp, #23]
   11570:	mov	r0, sl
   11574:	bl	4508 <printf@plt>
   11578:	mov	r0, #45	; 0x2d
   1157c:	bl	4724 <putchar@plt>
   11580:	ldrb	r1, [sp, #24]
   11584:	mov	r0, sl
   11588:	bl	4508 <printf@plt>
   1158c:	ldrb	r1, [sp, #25]
   11590:	mov	r0, sl
   11594:	bl	4508 <printf@plt>
   11598:	mov	r0, #45	; 0x2d
   1159c:	bl	4724 <putchar@plt>
   115a0:	ldrb	r1, [sp, #26]
   115a4:	mov	r0, sl
   115a8:	bl	4508 <printf@plt>
   115ac:	ldrb	r1, [sp, #27]
   115b0:	mov	r0, sl
   115b4:	bl	4508 <printf@plt>
   115b8:	ldrb	r1, [sp, #28]
   115bc:	mov	r0, sl
   115c0:	bl	4508 <printf@plt>
   115c4:	ldrb	r1, [sp, #29]
   115c8:	mov	r0, sl
   115cc:	bl	4508 <printf@plt>
   115d0:	ldrb	r1, [sp, #30]
   115d4:	mov	r0, sl
   115d8:	bl	4508 <printf@plt>
   115dc:	ldrb	r1, [sp, #31]
   115e0:	mov	r0, sl
   115e4:	bl	4508 <printf@plt>
   115e8:	mov	r0, #10
   115ec:	bl	4724 <putchar@plt>
   115f0:	add	r4, r4, #1
   115f4:	cmp	r7, r4
   115f8:	bne	114e0 <lell_print@@Base+0xcc4>
   115fc:	b	118b0 <lell_print@@Base+0x1094>
   11600:	ldr	r0, [pc, #876]	; 11974 <lell_print@@Base+0x1158>
   11604:	add	r0, pc, r0
   11608:	bl	464c <puts@plt>
   1160c:	mov	r0, r4
   11610:	bl	4508 <printf@plt>
   11614:	cmp	r6, #2
   11618:	bcc	1188c <lell_print@@Base+0x1070>
   1161c:	ldr	r0, [sp, #4]
   11620:	sub	r7, r6, #1
   11624:	add	r4, r0, r8
   11628:	bl	4688 <__ctype_b_loc@plt>
   1162c:	mov	r6, r0
   11630:	ldrb	r0, [r4], #1
   11634:	ldr	r1, [r6]
   11638:	add	r1, r1, r0, lsl #1
   1163c:	ldrh	r1, [r1]
   11640:	tst	r1, #16384	; 0x4000
   11644:	movweq	r0, #46	; 0x2e
   11648:	bl	4724 <putchar@plt>
   1164c:	subs	r7, r7, #1
   11650:	bne	11630 <lell_print@@Base+0xe14>
   11654:	b	1188c <lell_print@@Base+0x1070>
   11658:	ldr	r0, [pc, #792]	; 11978 <lell_print@@Base+0x115c>
   1165c:	add	r0, pc, r0
   11660:	bl	464c <puts@plt>
   11664:	mov	r0, r4
   11668:	bl	4508 <printf@plt>
   1166c:	sub	r1, r6, #1
   11670:	cmp	r1, #1
   11674:	bne	11898 <lell_print@@Base+0x107c>
   11678:	ldr	r0, [sp, #12]
   1167c:	add	r0, r0, r8
   11680:	ldrb	r1, [r0, #2]
   11684:	ldr	r0, [pc, #752]	; 1197c <lell_print@@Base+0x1160>
   11688:	add	r0, pc, r0
   1168c:	b	118ac <lell_print@@Base+0x1090>
   11690:	ldr	r0, [pc, #748]	; 11984 <lell_print@@Base+0x1168>
   11694:	add	r0, pc, r0
   11698:	bl	464c <puts@plt>
   1169c:	mov	r0, r4
   116a0:	bl	4508 <printf@plt>
   116a4:	sub	r1, r6, #1
   116a8:	cmp	r1, #4
   116ac:	bne	118a4 <lell_print@@Base+0x1088>
   116b0:	ldr	r0, [sp, #12]
   116b4:	add	r4, r0, r8
   116b8:	ldrb	r0, [r4, #2]
   116bc:	ldrb	r1, [r4, #3]
   116c0:	orr	r0, r0, r1, lsl #8
   116c4:	vmov	s0, r0
   116c8:	vcvt.f64.s32	d16, s0
   116cc:	ldr	r0, [pc, #692]	; 11988 <lell_print@@Base+0x116c>
   116d0:	vmul.f64	d16, d16, d8
   116d4:	vmov	r2, r3, d16
   116d8:	add	r0, pc, r0
   116dc:	bl	4508 <printf@plt>
   116e0:	ldrb	r0, [r4, #4]
   116e4:	ldrb	r1, [r4, #5]
   116e8:	orr	r0, r0, r1, lsl #8
   116ec:	vmov	s0, r0
   116f0:	vcvt.f64.s32	d16, s0
   116f4:	ldr	r0, [pc, #656]	; 1198c <lell_print@@Base+0x1170>
   116f8:	vmul.f64	d16, d16, d8
   116fc:	vmov	r2, r3, d16
   11700:	add	r0, pc, r0
   11704:	bl	4508 <printf@plt>
   11708:	b	118b0 <lell_print@@Base+0x1094>
   1170c:	ldr	r0, [pc, #640]	; 11994 <lell_print@@Base+0x1178>
   11710:	add	r0, pc, r0
   11714:	bl	464c <puts@plt>
   11718:	mov	r0, r4
   1171c:	bl	4508 <printf@plt>
   11720:	cmp	r6, #3
   11724:	bcc	11788 <lell_print@@Base+0xf6c>
   11728:	ldr	r0, [sp, #12]
   1172c:	add	r0, r0, r8
   11730:	ldrb	r1, [r0, #2]
   11734:	ldrb	r0, [r0, #3]
   11738:	orr	r1, r1, r0, lsl #8
   1173c:	ldr	r0, [pc, #596]	; 11998 <lell_print@@Base+0x117c>
   11740:	add	r0, pc, r0
   11744:	bl	4508 <printf@plt>
   11748:	ldr	r7, [pc, #588]	; 1199c <lell_print@@Base+0x1180>
   1174c:	cmp	r6, #3
   11750:	add	r7, pc, r7
   11754:	beq	1188c <lell_print@@Base+0x1070>
   11758:	ldr	r0, [pc, #576]	; 119a0 <lell_print@@Base+0x1184>
   1175c:	add	r0, pc, r0
   11760:	bl	4508 <printf@plt>
   11764:	ldr	r0, [sp]
   11768:	sub	r6, r6, #3
   1176c:	add	r4, r0, r8
   11770:	ldrb	r1, [r4], #1
   11774:	mov	r0, r7
   11778:	bl	4508 <printf@plt>
   1177c:	subs	r6, r6, #1
   11780:	bne	11770 <lell_print@@Base+0xf54>
   11784:	b	1188c <lell_print@@Base+0x1070>
   11788:	ldr	r0, [pc, #548]	; 119b4 <lell_print@@Base+0x1198>
   1178c:	sub	r1, r6, #1
   11790:	add	r0, pc, r0
   11794:	b	118ac <lell_print@@Base+0x1090>
   11798:	mov	r0, r4
   1179c:	bl	4508 <printf@plt>
   117a0:	ldr	r0, [pc, #400]	; 11938 <lell_print@@Base+0x111c>
   117a4:	add	r0, pc, r0
   117a8:	bl	464c <puts@plt>
   117ac:	ldrb	r0, [r7, r6]
   117b0:	tst	r0, #2
   117b4:	beq	11318 <lell_print@@Base+0xafc>
   117b8:	mov	r0, r4
   117bc:	bl	4508 <printf@plt>
   117c0:	ldr	r0, [pc, #372]	; 1193c <lell_print@@Base+0x1120>
   117c4:	add	r0, pc, r0
   117c8:	bl	464c <puts@plt>
   117cc:	ldrb	r0, [r7, r6]
   117d0:	tst	r0, #4
   117d4:	beq	11320 <lell_print@@Base+0xb04>
   117d8:	mov	r0, r4
   117dc:	bl	4508 <printf@plt>
   117e0:	ldr	r0, [pc, #344]	; 11940 <lell_print@@Base+0x1124>
   117e4:	add	r0, pc, r0
   117e8:	bl	464c <puts@plt>
   117ec:	ldrb	r0, [r7, r6]
   117f0:	tst	r0, #8
   117f4:	beq	11328 <lell_print@@Base+0xb0c>
   117f8:	mov	r0, r4
   117fc:	bl	4508 <printf@plt>
   11800:	ldr	r0, [pc, #316]	; 11944 <lell_print@@Base+0x1128>
   11804:	add	r0, pc, r0
   11808:	bl	464c <puts@plt>
   1180c:	ldrb	r0, [r7, r6]
   11810:	tst	r0, #16
   11814:	beq	11330 <lell_print@@Base+0xb14>
   11818:	mov	r0, r4
   1181c:	bl	4508 <printf@plt>
   11820:	ldr	r0, [pc, #288]	; 11948 <lell_print@@Base+0x112c>
   11824:	add	r0, pc, r0
   11828:	bl	464c <puts@plt>
   1182c:	ldrb	r0, [r7, r6]
   11830:	tst	r0, #32
   11834:	beq	11338 <lell_print@@Base+0xb1c>
   11838:	mov	r0, r4
   1183c:	bl	4508 <printf@plt>
   11840:	ldr	r0, [pc, #260]	; 1194c <lell_print@@Base+0x1130>
   11844:	add	r0, pc, r0
   11848:	bl	464c <puts@plt>
   1184c:	ldrb	r0, [r7, r6]
   11850:	tst	r0, #64	; 0x40
   11854:	beq	11340 <lell_print@@Base+0xb24>
   11858:	mov	r0, r4
   1185c:	bl	4508 <printf@plt>
   11860:	ldr	r0, [pc, #232]	; 11950 <lell_print@@Base+0x1134>
   11864:	add	r0, pc, r0
   11868:	bl	464c <puts@plt>
   1186c:	ldrb	r0, [r7, r6]
   11870:	tst	r0, #128	; 0x80
   11874:	beq	1188c <lell_print@@Base+0x1070>
   11878:	mov	r0, r4
   1187c:	bl	4508 <printf@plt>
   11880:	ldr	r0, [pc, #204]	; 11954 <lell_print@@Base+0x1138>
   11884:	add	r0, pc, r0
   11888:	bl	464c <puts@plt>
   1188c:	mov	r0, #10
   11890:	bl	4724 <putchar@plt>
   11894:	b	118b0 <lell_print@@Base+0x1094>
   11898:	ldr	r0, [pc, #224]	; 11980 <lell_print@@Base+0x1164>
   1189c:	add	r0, pc, r0
   118a0:	b	118ac <lell_print@@Base+0x1090>
   118a4:	ldr	r0, [pc, #228]	; 11990 <lell_print@@Base+0x1174>
   118a8:	add	r0, pc, r0
   118ac:	bl	4508 <printf@plt>
   118b0:	mov	r2, r5
   118b4:	ldr	r3, [sp, #8]
   118b8:	ldr	r4, [pc, #160]	; 11960 <lell_print@@Base+0x1144>
   118bc:	ldr	r7, [sp, #12]
   118c0:	cmp	r9, r3
   118c4:	add	r4, pc, r4
   118c8:	blt	111a8 <lell_print@@Base+0x98c>
   118cc:	sub	sp, fp, #40	; 0x28
   118d0:	vpop	{d8}
   118d4:	add	sp, sp, #4
   118d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118dc:	ldr	r0, [pc, #212]	; 119b8 <lell_print@@Base+0x119c>
   118e0:	mov	r2, r6
   118e4:	add	r0, pc, r0
   118e8:	sub	sp, fp, #40	; 0x28
   118ec:	vpop	{d8}
   118f0:	add	sp, sp, #4
   118f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f8:	b	4508 <printf@plt>
   118fc:	ldr	r0, [pc, #184]	; 119bc <lell_print@@Base+0x11a0>
   11900:	add	r0, pc, r0
   11904:	sub	sp, fp, #40	; 0x28
   11908:	vpop	{d8}
   1190c:	add	sp, sp, #4
   11910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11914:	b	464c <puts@plt>
   11918:			; <UNDEFINED> instruction: 0x00004fb1
   1191c:			; <UNDEFINED> instruction: 0x00004fb9
   11920:	andeq	r5, r0, r4, asr r0
   11924:	andeq	r4, r0, r0, ror #30
   11928:	andeq	r4, r0, r7, lsl #28
   1192c:	andeq	r5, r0, r6, lsl #3
   11930:	ldrdeq	r4, [r0], -r2
   11934:	andeq	r4, r0, r1, asr #28
   11938:	muleq	r0, r7, sl
   1193c:	muleq	r0, r4, sl
   11940:	muleq	r0, r1, sl
   11944:	andeq	r4, r0, r6, lsl #21
   11948:	andeq	r4, r0, r5, lsr #21
   1194c:	andeq	r4, r0, r4, lsl #8
   11950:	andeq	r4, r0, r4, ror #7
   11954:	andeq	r4, r0, r4, asr #7
   11958:	andeq	r5, r0, r8, lsl #4
   1195c:	muleq	r0, r4, r1
   11960:	andeq	r4, r0, r9, lsl #17
   11964:	andeq	r5, r0, r8, asr #2
   11968:	andeq	r5, r0, r0, lsl #2
   1196c:	andeq	r4, r0, sp, asr #24
   11970:			; <UNDEFINED> instruction: 0x00004cbe
   11974:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   11978:	andeq	r4, r0, ip, lsl pc
   1197c:	andeq	r4, r0, lr, lsl #22
   11980:	andeq	r4, r0, r2, lsl #18
   11984:			; <UNDEFINED> instruction: 0x00004eb4
   11988:	andeq	r4, r0, r6, ror #21
   1198c:	andeq	r4, r0, r7, asr #21
   11990:	andeq	r4, r0, sl, lsr #18
   11994:			; <UNDEFINED> instruction: 0x00004cba
   11998:			; <UNDEFINED> instruction: 0x00004ab2
   1199c:	andeq	r4, r0, r7, lsr #21
   119a0:	andeq	r4, r0, r1, lsr #21
   119a4:	ldrdeq	r5, [r0], -r0
   119a8:	andeq	r4, r0, r6, lsr #29
   119ac:	andeq	r4, r0, ip, asr fp
   119b0:	andeq	r4, r0, fp, asr #28
   119b4:	andeq	r4, r0, fp, ror sl
   119b8:	andeq	r4, r0, r6, lsl r8
   119bc:	andeq	r4, r0, r8, asr sp

000119c0 <bt_compidtostr@@Base>:
   119c0:	add	r0, r0, #1
   119c4:	movw	r2, #1038	; 0x40e
   119c8:	uxth	r1, r0
   119cc:	cmp	r1, r2
   119d0:	ldrhi	r0, [pc, #28]	; 119f4 <bt_compidtostr@@Base+0x34>
   119d4:	addhi	r0, pc, r0
   119d8:	bxhi	lr
   119dc:	ldr	r1, [pc, #12]	; 119f0 <bt_compidtostr@@Base+0x30>
   119e0:	sxth	r0, r0
   119e4:	add	r1, pc, r1
   119e8:	ldr	r0, [r1, r0, lsl #2]
   119ec:	bx	lr
   119f0:	andeq	sl, r1, r4, ror #9
   119f4:	andeq	r9, r0, pc, asr #21
	...

00011a00 <btbb_pcap_open@@Base>:
   11a00:	push	{r4, sl, fp, lr}
   11a04:	add	fp, sp, #8
   11a08:	sub	sp, sp, #24
   11a0c:	movw	r3, #15437	; 0x3c4d
   11a10:	movt	r3, #41394	; 0xa1b2
   11a14:	str	r3, [sp]
   11a18:	movw	r3, #2
   11a1c:	movt	r3, #4
   11a20:	str	r3, [sp, #4]
   11a24:	mov	r3, #0
   11a28:	str	r3, [sp, #8]
   11a2c:	str	r3, [sp, #12]
   11a30:	str	r2, [sp, #16]
   11a34:	str	r1, [sp, #20]
   11a38:	ldr	r1, [pc, #48]	; 11a70 <btbb_pcap_open@@Base+0x70>
   11a3c:	add	r1, pc, r1
   11a40:	bl	4514 <fopen@plt>
   11a44:	mov	r4, r0
   11a48:	cmp	r0, #0
   11a4c:	beq	11a64 <btbb_pcap_open@@Base+0x64>
   11a50:	mov	r0, sp
   11a54:	mov	r1, #24
   11a58:	mov	r2, #1
   11a5c:	mov	r3, r4
   11a60:	bl	4604 <fwrite@plt>
   11a64:	mov	r0, r4
   11a68:	sub	sp, fp, #8
   11a6c:	pop	{r4, sl, fp, pc}
   11a70:	andeq	r9, r0, r4, ror sl
   11a74:	nop	{0}
   11a78:	nop	{0}
   11a7c:	nop	{0}

00011a80 <btbb_pcap_create_file@@Base>:
   11a80:	push	{r4, r5, r6, r7, fp, lr}
   11a84:	add	fp, sp, #16
   11a88:	sub	sp, sp, #24
   11a8c:	mov	r7, r0
   11a90:	mov	r0, #4
   11a94:	mov	r5, r1
   11a98:	bl	4658 <malloc@plt>
   11a9c:	cmp	r0, #0
   11aa0:	beq	11b20 <btbb_pcap_create_file@@Base+0xa0>
   11aa4:	mov	r6, #0
   11aa8:	mov	r4, r0
   11aac:	str	r6, [r0]
   11ab0:	add	r0, pc, #184	; 0xb8
   11ab4:	vld1.64	{d16-d17}, [r0 :128]
   11ab8:	mov	r0, sp
   11abc:	add	r0, r0, #8
   11ac0:	vst1.32	{d16-d17}, [r0]
   11ac4:	movw	r0, #15437	; 0x3c4d
   11ac8:	movt	r0, #41394	; 0xa1b2
   11acc:	str	r0, [sp]
   11ad0:	movw	r0, #2
   11ad4:	movt	r0, #4
   11ad8:	str	r0, [sp, #4]
   11adc:	mov	r0, r7
   11ae0:	ldr	r1, [pc, #152]	; 11b80 <btbb_pcap_create_file@@Base+0x100>
   11ae4:	add	r1, pc, r1
   11ae8:	bl	4514 <fopen@plt>
   11aec:	cmp	r0, #0
   11af0:	beq	11b30 <btbb_pcap_create_file@@Base+0xb0>
   11af4:	mov	r7, r0
   11af8:	mov	r0, sp
   11afc:	mov	r1, #24
   11b00:	mov	r2, #1
   11b04:	mov	r3, r7
   11b08:	bl	4604 <fwrite@plt>
   11b0c:	str	r7, [r4]
   11b10:	str	r4, [r5]
   11b14:	mov	r0, r6
   11b18:	sub	sp, fp, #16
   11b1c:	pop	{r4, r5, r6, r7, fp, pc}
   11b20:	mvn	r6, #2
   11b24:	mov	r0, r6
   11b28:	sub	sp, fp, #16
   11b2c:	pop	{r4, r5, r6, r7, fp, pc}
   11b30:	mov	r0, #0
   11b34:	str	r0, [r4]
   11b38:	ldr	r0, [pc, #68]	; 11b84 <btbb_pcap_create_file@@Base+0x104>
   11b3c:	add	r0, pc, r0
   11b40:	bl	45e0 <perror@plt>
   11b44:	ldr	r0, [r4]
   11b48:	cmp	r0, #0
   11b4c:	beq	11b54 <btbb_pcap_create_file@@Base+0xd4>
   11b50:	bl	4778 <fclose@plt>
   11b54:	mov	r0, r4
   11b58:	bl	4550 <free@plt>
   11b5c:	mvn	r6, #1
   11b60:	mov	r0, r6
   11b64:	sub	sp, fp, #16
   11b68:	pop	{r4, r5, r6, r7, fp, pc}
   11b6c:	nop	{0}
	...
   11b78:	muleq	r0, r0, r1
   11b7c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11b80:	andeq	r9, r0, ip, asr #19
   11b84:	andeq	r9, r0, r6, ror r9

00011b88 <btbb_pcap_close@@Base>:
   11b88:	cmp	r0, #0
   11b8c:	mvneq	r0, #0
   11b90:	bxeq	lr
   11b94:	push	{r4, sl, fp, lr}
   11b98:	add	fp, sp, #8
   11b9c:	mov	r4, r0
   11ba0:	ldr	r0, [r0]
   11ba4:	cmp	r0, #0
   11ba8:	beq	11bb0 <btbb_pcap_close@@Base+0x28>
   11bac:	bl	4778 <fclose@plt>
   11bb0:	mov	r0, r4
   11bb4:	bl	4550 <free@plt>
   11bb8:	mov	r0, #0
   11bbc:	pop	{r4, sl, fp, pc}

00011bc0 <btbb_pcap_dump@@Base>:
   11bc0:	push	{r4, r5, r6, sl, fp, lr}
   11bc4:	add	fp, sp, #16
   11bc8:	mov	r6, r0
   11bcc:	mov	r4, r2
   11bd0:	mov	r5, r1
   11bd4:	mov	r0, r1
   11bd8:	mov	r1, #16
   11bdc:	mov	r2, #1
   11be0:	mov	r3, r6
   11be4:	bl	4604 <fwrite@plt>
   11be8:	ldr	r1, [r5, #8]
   11bec:	mov	r0, r4
   11bf0:	mov	r2, #1
   11bf4:	mov	r3, r6
   11bf8:	bl	4604 <fwrite@plt>
   11bfc:	mov	r0, r6
   11c00:	pop	{r4, r5, r6, sl, fp, lr}
   11c04:	b	452c <fflush@plt>

00011c08 <btbb_pcap_append_packet@@Base>:
   11c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c0c:	add	fp, sp, #28
   11c10:	sub	sp, sp, #468	; 0x1d4
   11c14:	mvn	r5, #0
   11c18:	cmp	r0, #0
   11c1c:	beq	11ddc <btbb_pcap_append_packet@@Base+0x1d4>
   11c20:	mov	sl, r0
   11c24:	ldr	r0, [r0]
   11c28:	cmp	r0, #0
   11c2c:	beq	11ddc <btbb_pcap_append_packet@@Base+0x1d4>
   11c30:	ldr	r7, [fp, #24]
   11c34:	mov	r4, r3
   11c38:	mov	r9, r2
   11c3c:	mov	r0, r7
   11c40:	bl	46a0 <btbb_packet_get_payload_length@plt>
   11c44:	mov	r6, r0
   11c48:	add	r0, r0, #7
   11c4c:	str	sp, [fp, #-476]	; 0xfffffe24
   11c50:	bic	r0, r0, #7
   11c54:	sub	r1, sp, r0
   11c58:	mov	sp, r1
   11c5c:	mov	r0, r7
   11c60:	str	r1, [fp, #-496]	; 0xfffffe10
   11c64:	bl	44fc <btbb_get_payload_packed@plt>
   11c68:	movw	r2, #51712	; 0xca00
   11c6c:	mov	r0, r9
   11c70:	mov	r1, r4
   11c74:	mov	r3, #0
   11c78:	mov	r5, #0
   11c7c:	movt	r2, #15258	; 0x3b9a
   11c80:	bl	131e0 <lell_pcapng_close@@Base+0x28>
   11c84:	mov	r4, r0
   11c88:	mov	r0, r7
   11c8c:	bl	47a8 <btbb_packet_get_channel@plt>
   11c90:	str	r0, [fp, #-480]	; 0xfffffe20
   11c94:	mov	r0, r7
   11c98:	bl	4568 <btbb_packet_get_ac_errors@plt>
   11c9c:	str	r0, [fp, #-484]	; 0xfffffe1c
   11ca0:	mov	r0, r7
   11ca4:	bl	470c <btbb_packet_get_transport@plt>
   11ca8:	str	r0, [fp, #-488]	; 0xfffffe18
   11cac:	mov	r0, r7
   11cb0:	bl	455c <btbb_packet_get_modulation@plt>
   11cb4:	str	r0, [fp, #-492]	; 0xfffffe14
   11cb8:	mov	r0, r7
   11cbc:	bl	4748 <btbb_packet_get_lap@plt>
   11cc0:	mov	r8, r0
   11cc4:	mov	r0, r7
   11cc8:	bl	46d0 <btbb_packet_get_header_packed@plt>
   11ccc:	movw	r1, #51712	; 0xca00
   11cd0:	cmp	r6, #400	; 0x190
   11cd4:	str	r4, [fp, #-472]	; 0xfffffe28
   11cd8:	ldr	r2, [fp, #-492]	; 0xfffffe14
   11cdc:	ldr	r3, [fp, #16]
   11ce0:	sub	lr, fp, #256	; 0x100
   11ce4:	mov	r7, #3
   11ce8:	movt	r1, #15258	; 0x3b9a
   11cec:	movcs	r6, #400	; 0x190
   11cf0:	mls	r1, r4, r1, r9
   11cf4:	ldr	r4, [fp, #8]
   11cf8:	str	r1, [fp, #-468]	; 0xfffffe2c
   11cfc:	add	r1, r6, #22
   11d00:	str	r1, [fp, #-464]	; 0xfffffe30
   11d04:	str	r1, [fp, #-460]	; 0xfffffe34
   11d08:	ldr	r1, [fp, #-480]	; 0xfffffe20
   11d0c:	strb	r1, [fp, #-456]	; 0xfffffe38
   11d10:	ldr	r1, [fp, #-484]	; 0xfffffe1c
   11d14:	strb	r1, [fp, #-453]	; 0xfffffe3b
   11d18:	ldr	r1, [fp, #-488]	; 0xfffffe18
   11d1c:	orr	r1, r2, r1, lsl #4
   11d20:	ldr	r2, [fp, #20]
   11d24:	strb	r1, [fp, #-452]	; 0xfffffe3c
   11d28:	sub	r1, lr, #194	; 0xc2
   11d2c:	strb	r5, [fp, #-451]	; 0xfffffe3d
   11d30:	strh	r5, [r1]
   11d34:	str	r8, [fp, #-448]	; 0xfffffe40
   11d38:	mov	r8, r1
   11d3c:	bic	r1, r3, #-16777216	; 0xff000000
   11d40:	strb	r4, [fp, #-455]	; 0xfffffe39
   11d44:	orr	r1, r1, r2, lsl #24
   11d48:	str	r1, [fp, #-444]	; 0xfffffe44
   11d4c:	ldr	r1, [fp, #12]
   11d50:	cmp	r1, r4
   11d54:	sub	r4, fp, #472	; 0x1d8
   11d58:	strb	r1, [fp, #-454]	; 0xfffffe3a
   11d5c:	str	r0, [fp, #-440]	; 0xfffffe48
   11d60:	movwlt	r7, #7
   11d64:	cmn	r3, #1
   11d68:	orrne	r7, r7, #16
   11d6c:	cmp	r2, #255	; 0xff
   11d70:	orrne	r7, r7, #128	; 0x80
   11d74:	cmp	r6, #0
   11d78:	strh	r7, [r8, #14]
   11d7c:	beq	11d9c <btbb_pcap_append_packet@@Base+0x194>
   11d80:	cmp	r6, #400	; 0x190
   11d84:	bhi	11de8 <btbb_pcap_append_packet@@Base+0x1e0>
   11d88:	ldr	r1, [fp, #-496]	; 0xfffffe10
   11d8c:	add	r0, r4, #38	; 0x26
   11d90:	mov	r2, r6
   11d94:	bl	4574 <memcpy@plt>
   11d98:	orr	r7, r7, #32
   11d9c:	strh	r7, [r8, #14]
   11da0:	sub	r0, fp, #472	; 0x1d8
   11da4:	mov	r1, #16
   11da8:	mov	r2, #1
   11dac:	add	r4, r4, #16
   11db0:	ldr	r6, [sl]
   11db4:	mov	r3, r6
   11db8:	bl	4604 <fwrite@plt>
   11dbc:	ldr	r1, [fp, #-464]	; 0xfffffe30
   11dc0:	mov	r0, r4
   11dc4:	mov	r2, #1
   11dc8:	mov	r3, r6
   11dcc:	bl	4604 <fwrite@plt>
   11dd0:	mov	r0, r6
   11dd4:	bl	452c <fflush@plt>
   11dd8:	ldr	sp, [fp, #-476]	; 0xfffffe24
   11ddc:	mov	r0, r5
   11de0:	sub	sp, fp, #28
   11de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11de8:	ldr	r0, [pc, #24]	; 11e08 <btbb_pcap_append_packet@@Base+0x200>
   11dec:	ldr	r1, [pc, #24]	; 11e0c <btbb_pcap_append_packet@@Base+0x204>
   11df0:	ldr	r3, [pc, #24]	; 11e10 <btbb_pcap_append_packet@@Base+0x208>
   11df4:	mov	r2, #162	; 0xa2
   11df8:	add	r0, pc, r0
   11dfc:	add	r1, pc, r1
   11e00:	add	r3, pc, r3
   11e04:	bl	47fc <__assert_fail@plt>
   11e08:	andeq	r9, r0, r6, asr #13
   11e0c:	strdeq	r9, [r0], -r7
   11e10:	andeq	r9, r0, fp, lsr r7
   11e14:	nop	{0}
   11e18:	nop	{0}
   11e1c:	nop	{0}

00011e20 <lell_pcap_create_file@@Base>:
   11e20:	push	{r4, r5, r6, r7, fp, lr}
   11e24:	add	fp, sp, #16
   11e28:	sub	sp, sp, #24
   11e2c:	mov	r7, r0
   11e30:	mov	r0, #12
   11e34:	mov	r4, r1
   11e38:	bl	4658 <malloc@plt>
   11e3c:	cmp	r0, #0
   11e40:	beq	11ed0 <lell_pcap_create_file@@Base+0xb0>
   11e44:	mov	r5, #0
   11e48:	mov	r6, r0
   11e4c:	str	r5, [r0]
   11e50:	str	r5, [r0, #4]
   11e54:	str	r5, [r0, #8]
   11e58:	add	r0, pc, #160	; 0xa0
   11e5c:	vld1.64	{d16-d17}, [r0 :128]
   11e60:	mov	r0, sp
   11e64:	add	r0, r0, #8
   11e68:	vst1.32	{d16-d17}, [r0]
   11e6c:	movw	r0, #15437	; 0x3c4d
   11e70:	movt	r0, #41394	; 0xa1b2
   11e74:	str	r0, [sp]
   11e78:	movw	r0, #2
   11e7c:	movt	r0, #4
   11e80:	str	r0, [sp, #4]
   11e84:	mov	r0, r7
   11e88:	ldr	r1, [pc, #128]	; 11f10 <lell_pcap_create_file@@Base+0xf0>
   11e8c:	add	r1, pc, r1
   11e90:	bl	4514 <fopen@plt>
   11e94:	cmp	r0, #0
   11e98:	beq	11ee0 <lell_pcap_create_file@@Base+0xc0>
   11e9c:	mov	r7, r0
   11ea0:	mov	r0, sp
   11ea4:	mov	r1, #24
   11ea8:	mov	r2, #1
   11eac:	mov	r3, r7
   11eb0:	bl	4604 <fwrite@plt>
   11eb4:	mov	r0, #256	; 0x100
   11eb8:	str	r7, [r6]
   11ebc:	str	r0, [r6, #4]
   11ec0:	str	r6, [r4]
   11ec4:	mov	r0, r5
   11ec8:	sub	sp, fp, #16
   11ecc:	pop	{r4, r5, r6, r7, fp, pc}
   11ed0:	mvn	r5, #2
   11ed4:	mov	r0, r5
   11ed8:	sub	sp, fp, #16
   11edc:	pop	{r4, r5, r6, r7, fp, pc}
   11ee0:	mov	r0, r6
   11ee4:	bl	4550 <free@plt>
   11ee8:	mvn	r5, #1
   11eec:	mov	r0, r5
   11ef0:	sub	sp, fp, #16
   11ef4:	pop	{r4, r5, r6, r7, fp, pc}
   11ef8:	nop	{0}
   11efc:	nop	{0}
	...
   11f08:	muleq	r0, r0, r1
   11f0c:	andeq	r0, r0, r0, lsl #2
   11f10:	andeq	r9, r0, r4, lsr #12
   11f14:	nop	{0}
   11f18:	nop	{0}
   11f1c:	nop	{0}

00011f20 <lell_pcap_ppi_create_file@@Base>:
   11f20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f24:	add	fp, sp, #24
   11f28:	sub	sp, sp, #24
   11f2c:	mov	r4, r0
   11f30:	mov	r0, #12
   11f34:	mov	r5, r2
   11f38:	mov	r8, r1
   11f3c:	bl	4658 <malloc@plt>
   11f40:	cmp	r0, #0
   11f44:	beq	11fd8 <lell_pcap_ppi_create_file@@Base+0xb8>
   11f48:	mov	r6, #0
   11f4c:	mov	r7, r0
   11f50:	str	r6, [r0]
   11f54:	str	r6, [r0, #4]
   11f58:	str	r6, [r0, #8]
   11f5c:	add	r0, pc, #156	; 0x9c
   11f60:	vld1.64	{d16-d17}, [r0 :128]
   11f64:	mov	r0, sp
   11f68:	add	r0, r0, #8
   11f6c:	vst1.32	{d16-d17}, [r0]
   11f70:	movw	r0, #15437	; 0x3c4d
   11f74:	movt	r0, #41394	; 0xa1b2
   11f78:	str	r0, [sp]
   11f7c:	movw	r0, #2
   11f80:	movt	r0, #4
   11f84:	str	r0, [sp, #4]
   11f88:	mov	r0, r4
   11f8c:	ldr	r1, [pc, #124]	; 12010 <lell_pcap_ppi_create_file@@Base+0xf0>
   11f90:	add	r1, pc, r1
   11f94:	bl	4514 <fopen@plt>
   11f98:	cmp	r0, #0
   11f9c:	beq	11fe8 <lell_pcap_ppi_create_file@@Base+0xc8>
   11fa0:	mov	r4, r0
   11fa4:	mov	r0, sp
   11fa8:	mov	r1, #24
   11fac:	mov	r2, #1
   11fb0:	mov	r3, r4
   11fb4:	bl	4604 <fwrite@plt>
   11fb8:	mov	r0, #192	; 0xc0
   11fbc:	str	r4, [r7]
   11fc0:	str	r0, [r7, #4]
   11fc4:	str	r7, [r5]
   11fc8:	strb	r8, [r7, #8]
   11fcc:	mov	r0, r6
   11fd0:	sub	sp, fp, #24
   11fd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11fd8:	mvn	r6, #2
   11fdc:	mov	r0, r6
   11fe0:	sub	sp, fp, #24
   11fe4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11fe8:	mov	r0, r7
   11fec:	bl	4550 <free@plt>
   11ff0:	mvn	r6, #1
   11ff4:	mov	r0, r6
   11ff8:	sub	sp, fp, #24
   11ffc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
   12008:	muleq	r0, r0, r1
   1200c:	andeq	r0, r0, r0, asr #1
   12010:	andeq	r9, r0, r0, lsr #10

00012014 <lell_pcap_append_packet@@Base>:
   12014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12018:	add	fp, sp, #28
   1201c:	sub	sp, sp, #292	; 0x124
   12020:	mvn	r4, #0
   12024:	cmp	r0, #0
   12028:	beq	1212c <lell_pcap_append_packet@@Base+0x118>
   1202c:	mov	r5, r0
   12030:	ldr	r0, [r0]
   12034:	cmp	r0, #0
   12038:	beq	1212c <lell_pcap_append_packet@@Base+0x118>
   1203c:	ldr	r0, [r5, #4]
   12040:	cmp	r0, #256	; 0x100
   12044:	bne	1212c <lell_pcap_append_packet@@Base+0x118>
   12048:	movw	r9, #51712	; 0xca00
   1204c:	ldr	r8, [fp, #20]
   12050:	ldr	sl, [fp, #8]
   12054:	mov	r1, r3
   12058:	mov	r7, r2
   1205c:	mov	r0, r2
   12060:	mov	r3, #0
   12064:	mov	r4, #0
   12068:	movt	r9, #15258	; 0x3b9a
   1206c:	mov	r2, r9
   12070:	bl	131e0 <lell_pcapng_close@@Base+0x28>
   12074:	mov	r6, r0
   12078:	mls	r7, r0, r9, r7
   1207c:	mov	r0, r8
   12080:	bl	4520 <lell_packet_is_data@plt>
   12084:	ldr	r1, [r8, #72]	; 0x48
   12088:	ldr	r2, [r8, #92]	; 0x5c
   1208c:	ldrb	r3, [r8, #69]	; 0x45
   12090:	stmib	sp, {r6, r7}
   12094:	ldr	r6, [fp, #12]
   12098:	ldr	r7, [fp, #16]
   1209c:	clz	r0, r0
   120a0:	strb	sl, [sp, #21]
   120a4:	lsr	r0, r0, #5
   120a8:	str	r7, [sp, #24]
   120ac:	mov	r7, #35	; 0x23
   120b0:	cmp	r6, sl
   120b4:	strb	r6, [sp, #22]
   120b8:	add	r6, sp, #4
   120bc:	movwlt	r7, #39	; 0x27
   120c0:	orr	r0, r7, r0, lsl #4
   120c4:	strh	r0, [sp, #28]
   120c8:	strb	r3, [sp, #20]
   120cc:	strb	r2, [sp, #23]
   120d0:	add	r2, r1, #9
   120d4:	add	r0, r1, #19
   120d8:	mov	r1, r8
   120dc:	cmp	r2, #255	; 0xff
   120e0:	str	r0, [sp, #12]
   120e4:	movcs	r2, #255	; 0xff
   120e8:	add	r0, r2, #10
   120ec:	str	r0, [sp, #16]
   120f0:	add	r0, r6, #26
   120f4:	bl	4574 <memcpy@plt>
   120f8:	ldr	r5, [r5]
   120fc:	mov	r0, r6
   12100:	mov	r1, #16
   12104:	mov	r2, #1
   12108:	mov	r3, r5
   1210c:	bl	4604 <fwrite@plt>
   12110:	ldr	r1, [sp, #12]
   12114:	add	r0, r6, #16
   12118:	mov	r2, #1
   1211c:	mov	r3, r5
   12120:	bl	4604 <fwrite@plt>
   12124:	mov	r0, r5
   12128:	bl	452c <fflush@plt>
   1212c:	mov	r0, r4
   12130:	sub	sp, fp, #28
   12134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012138 <lell_pcap_append_ppi_packet@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #300	; 0x12c
   12144:	mvn	r4, #0
   12148:	cmp	r0, #0
   1214c:	beq	1226c <lell_pcap_append_ppi_packet@@Base+0x134>
   12150:	mov	r5, r0
   12154:	ldr	r0, [r0]
   12158:	cmp	r0, #0
   1215c:	beq	1226c <lell_pcap_append_ppi_packet@@Base+0x134>
   12160:	ldr	r0, [r5, #4]
   12164:	cmp	r0, #192	; 0xc0
   12168:	bne	1226c <lell_pcap_append_ppi_packet@@Base+0x134>
   1216c:	movw	r9, #51712	; 0xca00
   12170:	ldr	r8, [fp, #28]
   12174:	ldr	sl, [fp, #8]
   12178:	mov	r1, r3
   1217c:	mov	r7, r2
   12180:	mov	r0, r2
   12184:	mov	r3, #0
   12188:	mov	r4, #0
   1218c:	movt	r9, #15258	; 0x3b9a
   12190:	mov	r2, r9
   12194:	bl	131e0 <lell_pcapng_close@@Base+0x28>
   12198:	mov	r6, r0
   1219c:	mls	r7, r0, r9, r7
   121a0:	mov	r0, r8
   121a4:	bl	46dc <lell_get_channel_k@plt>
   121a8:	ldr	r1, [r8, #72]	; 0x48
   121ac:	mov	r2, #1572864	; 0x180000
   121b0:	stm	sp, {r6, r7}
   121b4:	mov	r6, sp
   121b8:	str	r2, [sp, #16]
   121bc:	mov	r2, #147	; 0x93
   121c0:	str	r2, [sp, #20]
   121c4:	movw	r2, #30006	; 0x7536
   121c8:	movt	r2, #12
   121cc:	str	r2, [sp, #24]
   121d0:	add	r2, r1, #33	; 0x21
   121d4:	str	r2, [sp, #12]
   121d8:	add	r2, r1, #9
   121dc:	cmp	r2, #255	; 0xff
   121e0:	movcs	r2, #255	; 0xff
   121e4:	add	r1, r2, #24
   121e8:	str	r1, [sp, #8]
   121ec:	movw	r1, #2402	; 0x962
   121f0:	add	r0, r1, r0, lsl #1
   121f4:	ldrb	r1, [r5, #8]
   121f8:	strh	r0, [sp, #29]
   121fc:	strb	sl, [sp, #31]
   12200:	strb	r1, [sp, #28]
   12204:	ldr	r1, [fp, #16]
   12208:	ldr	r0, [r8, #76]	; 0x4c
   1220c:	strb	r1, [sp, #36]	; 0x24
   12210:	ldr	r1, [fp, #12]
   12214:	strb	r1, [sp, #37]	; 0x25
   12218:	ldr	r1, [fp, #20]
   1221c:	strb	r1, [sp, #38]	; 0x26
   12220:	ldr	r1, [fp, #24]
   12224:	strb	r1, [sp, #39]	; 0x27
   12228:	str	r0, [sp, #32]
   1222c:	add	r0, r6, #40	; 0x28
   12230:	mov	r1, r8
   12234:	bl	4574 <memcpy@plt>
   12238:	ldr	r5, [r5]
   1223c:	mov	r0, r6
   12240:	mov	r1, #16
   12244:	mov	r2, #1
   12248:	mov	r3, r5
   1224c:	bl	4604 <fwrite@plt>
   12250:	ldr	r1, [sp, #8]
   12254:	add	r0, r6, #16
   12258:	mov	r2, #1
   1225c:	mov	r3, r5
   12260:	bl	4604 <fwrite@plt>
   12264:	mov	r0, r5
   12268:	bl	452c <fflush@plt>
   1226c:	mov	r0, r4
   12270:	sub	sp, fp, #28
   12274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012278 <lell_pcap_close@@Base>:
   12278:	cmp	r0, #0
   1227c:	mvneq	r0, #0
   12280:	bxeq	lr
   12284:	push	{r4, sl, fp, lr}
   12288:	add	fp, sp, #8
   1228c:	mov	r4, r0
   12290:	ldr	r0, [r0]
   12294:	cmp	r0, #0
   12298:	beq	122a0 <lell_pcap_close@@Base+0x28>
   1229c:	bl	4778 <fclose@plt>
   122a0:	mov	r0, r4
   122a4:	bl	4550 <free@plt>
   122a8:	mov	r0, #0
   122ac:	pop	{r4, sl, fp, pc}

000122b0 <pcapng_create@@Base>:
   122b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122b4:	add	fp, sp, #28
   122b8:	sub	sp, sp, #4
   122bc:	vpush	{d8-d9}
   122c0:	sub	sp, sp, #48	; 0x30
   122c4:	mov	r7, r3
   122c8:	mov	r8, r2
   122cc:	mov	r5, r1
   122d0:	mov	r4, r0
   122d4:	vmov.i32	q4, #0	; 0x00000000
   122d8:	add	sl, r0, #4
   122dc:	bl	46f4 <getpagesize@plt>
   122e0:	mov	r6, r0
   122e4:	mov	r0, #0
   122e8:	mov	r1, #194	; 0xc2
   122ec:	mov	r2, #432	; 0x1b0
   122f0:	vst1.32	{d8-d9}, [sl]
   122f4:	str	r0, [r4, #20]
   122f8:	str	r0, [r4, #24]
   122fc:	mov	r0, r5
   12300:	bl	467c <open@plt>
   12304:	mov	r9, #6
   12308:	cmn	r0, #1
   1230c:	str	r0, [r4]
   12310:	beq	12710 <pcapng_create@@Base+0x460>
   12314:	ldr	r1, [pc, #1128]	; 12784 <pcapng_create@@Base+0x4d4>
   12318:	add	r1, pc, r1
   1231c:	vld1.64	{d16-d17}, [r1]!
   12320:	vldr	d18, [r1]
   12324:	add	r1, sp, #24
   12328:	mov	r2, r1
   1232c:	vst1.64	{d16-d17}, [r2]!
   12330:	vstr	d18, [r2]
   12334:	mov	r2, #24
   12338:	str	r2, [r4, #8]
   1233c:	mov	r2, #24
   12340:	bl	4760 <write@plt>
   12344:	cmn	r0, #1
   12348:	mov	r5, r0
   1234c:	str	r6, [sp, #20]
   12350:	cmpne	r8, #0
   12354:	bne	1236c <pcapng_create@@Base+0xbc>
   12358:	ldr	r0, [r4, #8]
   1235c:	cmn	r5, #1
   12360:	str	r0, [r4, #12]
   12364:	bne	12430 <pcapng_create@@Base+0x180>
   12368:	b	12710 <pcapng_create@@Base+0x460>
   1236c:	ldrh	r0, [r8]
   12370:	str	r7, [sp, #12]
   12374:	str	sl, [sp, #16]
   12378:	cmp	r0, #0
   1237c:	beq	12418 <pcapng_create@@Base+0x168>
   12380:	ldr	r7, [pc, #1024]	; 12788 <pcapng_create@@Base+0x4d8>
   12384:	add	r7, pc, r7
   12388:	ldrh	sl, [r8, #2]
   1238c:	cmp	sl, #0
   12390:	beq	12418 <pcapng_create@@Base+0x168>
   12394:	ldr	r0, [r4]
   12398:	add	r2, sl, #4
   1239c:	mov	r1, r8
   123a0:	bl	4760 <write@plt>
   123a4:	movw	r1, #65532	; 0xfffc
   123a8:	mov	r5, r0
   123ac:	add	r0, sl, #3
   123b0:	movt	r1, #1
   123b4:	and	r9, r0, r1
   123b8:	subs	r0, r9, sl
   123bc:	cmnne	r5, #1
   123c0:	beq	123f0 <pcapng_create@@Base+0x140>
   123c4:	add	r0, sl, #1
   123c8:	sub	r6, r0, r9
   123cc:	ldr	r0, [r4]
   123d0:	mov	r1, r7
   123d4:	mov	r2, #1
   123d8:	bl	4760 <write@plt>
   123dc:	cmp	r6, #0
   123e0:	mov	r5, r0
   123e4:	addne	r6, r6, #1
   123e8:	cmnne	r5, #1
   123ec:	bne	123cc <pcapng_create@@Base+0x11c>
   123f0:	ldr	r1, [r4, #8]
   123f4:	add	r0, r9, #4
   123f8:	cmn	r5, #1
   123fc:	add	r1, r1, r0
   12400:	str	r1, [r4, #8]
   12404:	beq	126f8 <pcapng_create@@Base+0x448>
   12408:	add	r8, r8, r0
   1240c:	ldrh	r0, [r8]
   12410:	cmp	r0, #0
   12414:	bne	12388 <pcapng_create@@Base+0xd8>
   12418:	ldr	r0, [r4, #8]
   1241c:	ldr	sl, [sp, #16]
   12420:	ldr	r6, [sp, #20]
   12424:	ldr	r7, [sp, #12]
   12428:	mov	r9, #6
   1242c:	str	r0, [r4, #12]
   12430:	add	r1, r7, r6
   12434:	add	r1, r1, r0
   12438:	add	r1, r1, #3
   1243c:	udiv	r1, r1, r6
   12440:	mul	r1, r1, r6
   12444:	subs	r7, r1, r0
   12448:	str	r1, [r4, #8]
   1244c:	cmnne	r5, #1
   12450:	beq	12480 <pcapng_create@@Base+0x1d0>
   12454:	ldr	r6, [pc, #816]	; 1278c <pcapng_create@@Base+0x4dc>
   12458:	add	r6, pc, r6
   1245c:	ldr	r0, [r4]
   12460:	mov	r1, r6
   12464:	mov	r2, #1
   12468:	bl	4760 <write@plt>
   1246c:	mov	r5, r0
   12470:	subs	r7, r7, #1
   12474:	cmnne	r5, #1
   12478:	bne	1245c <pcapng_create@@Base+0x1ac>
   1247c:	ldr	r1, [r4, #8]
   12480:	ldr	r0, [r4]
   12484:	mov	r2, #0
   12488:	mov	r3, #1
   1248c:	stm	sp, {r0, r2}
   12490:	mov	r0, #0
   12494:	mov	r2, #3
   12498:	bl	46c4 <mmap@plt>
   1249c:	cmn	r5, #1
   124a0:	str	r0, [r4, #4]
   124a4:	beq	12710 <pcapng_create@@Base+0x460>
   124a8:	cmn	r0, #1
   124ac:	beq	12514 <pcapng_create@@Base+0x264>
   124b0:	ldr	r0, [fp, #12]
   124b4:	ldr	r1, [fp, #8]
   124b8:	mov	r2, #0
   124bc:	mov	r3, #1
   124c0:	str	r2, [sp, #28]
   124c4:	str	r3, [sp, #24]
   124c8:	strh	r1, [sp, #32]
   124cc:	strh	r2, [sp, #34]	; 0x22
   124d0:	str	r0, [sp, #36]	; 0x24
   124d4:	mov	r0, #16
   124d8:	add	r1, sp, #24
   124dc:	mov	r2, #16
   124e0:	str	r0, [r4, #20]
   124e4:	ldr	r0, [r4]
   124e8:	bl	4760 <write@plt>
   124ec:	cmn	r0, #1
   124f0:	mov	r5, r0
   124f4:	ldrne	r6, [fp, #16]
   124f8:	cmpne	r6, #0
   124fc:	bne	1252c <pcapng_create@@Base+0x27c>
   12500:	ldr	r0, [r4, #20]
   12504:	cmn	r5, #1
   12508:	str	r0, [r4, #24]
   1250c:	bne	125e4 <pcapng_create@@Base+0x334>
   12510:	b	12710 <pcapng_create@@Base+0x460>
   12514:	mov	r9, #7
   12518:	ldr	r0, [r4, #16]
   1251c:	add	r1, r0, #1
   12520:	cmp	r1, #2
   12524:	bcc	12720 <pcapng_create@@Base+0x470>
   12528:	b	12754 <pcapng_create@@Base+0x4a4>
   1252c:	ldrh	r0, [r6]
   12530:	str	sl, [sp, #16]
   12534:	cmp	r0, #0
   12538:	beq	125d4 <pcapng_create@@Base+0x324>
   1253c:	ldr	sl, [pc, #588]	; 12790 <pcapng_create@@Base+0x4e0>
   12540:	movw	r8, #65532	; 0xfffc
   12544:	movt	r8, #1
   12548:	add	sl, pc, sl
   1254c:	ldrh	r7, [r6, #2]
   12550:	cmp	r7, #0
   12554:	beq	125d4 <pcapng_create@@Base+0x324>
   12558:	ldr	r0, [r4]
   1255c:	add	r2, r7, #4
   12560:	mov	r1, r6
   12564:	bl	4760 <write@plt>
   12568:	mov	r5, r0
   1256c:	add	r0, r7, #3
   12570:	and	r9, r0, r8
   12574:	subs	r0, r9, r7
   12578:	cmnne	r5, #1
   1257c:	beq	125ac <pcapng_create@@Base+0x2fc>
   12580:	add	r0, r7, #1
   12584:	sub	r7, r0, r9
   12588:	ldr	r0, [r4]
   1258c:	mov	r1, sl
   12590:	mov	r2, #1
   12594:	bl	4760 <write@plt>
   12598:	cmp	r7, #0
   1259c:	mov	r5, r0
   125a0:	addne	r7, r7, #1
   125a4:	cmnne	r5, #1
   125a8:	bne	12588 <pcapng_create@@Base+0x2d8>
   125ac:	ldr	r1, [r4, #20]
   125b0:	add	r0, r9, #4
   125b4:	cmn	r5, #1
   125b8:	add	r1, r1, r0
   125bc:	str	r1, [r4, #20]
   125c0:	beq	12700 <pcapng_create@@Base+0x450>
   125c4:	add	r6, r6, r0
   125c8:	ldrh	r0, [r6]
   125cc:	cmp	r0, #0
   125d0:	bne	1254c <pcapng_create@@Base+0x29c>
   125d4:	ldr	r0, [r4, #20]
   125d8:	ldr	sl, [sp, #16]
   125dc:	mov	r9, #6
   125e0:	str	r0, [r4, #24]
   125e4:	ldr	r1, [fp, #20]
   125e8:	ldr	r2, [sp, #20]
   125ec:	add	r1, r1, r2
   125f0:	add	r1, r1, r0
   125f4:	add	r1, r1, #3
   125f8:	udiv	r1, r1, r2
   125fc:	mul	r1, r1, r2
   12600:	subs	r7, r1, r0
   12604:	str	r1, [r4, #20]
   12608:	beq	12638 <pcapng_create@@Base+0x388>
   1260c:	ldr	r6, [pc, #384]	; 12794 <pcapng_create@@Base+0x4e4>
   12610:	add	r6, pc, r6
   12614:	ldr	r0, [r4]
   12618:	mov	r1, r6
   1261c:	mov	r2, #1
   12620:	bl	4760 <write@plt>
   12624:	mov	r5, r0
   12628:	subs	r7, r7, #1
   1262c:	cmnne	r5, #1
   12630:	bne	12614 <pcapng_create@@Base+0x364>
   12634:	ldr	r1, [r4, #20]
   12638:	ldr	r0, [r4]
   1263c:	ldr	r2, [r4, #8]
   12640:	mov	r3, #1
   12644:	stm	sp, {r0, r2}
   12648:	mov	r0, #0
   1264c:	mov	r2, #3
   12650:	bl	46c4 <mmap@plt>
   12654:	cmn	r5, #1
   12658:	str	r0, [r4, #16]
   1265c:	beq	12710 <pcapng_create@@Base+0x460>
   12660:	cmn	r0, #1
   12664:	mov	r9, #7
   12668:	beq	12710 <pcapng_create@@Base+0x460>
   1266c:	ldmib	r4, {r0, r1, r2}
   12670:	ldr	r3, [pc, #288]	; 12798 <pcapng_create@@Base+0x4e8>
   12674:	mov	r9, #0
   12678:	sub	r1, r1, r2
   1267c:	add	r3, pc, r3
   12680:	sub	r1, r1, #12
   12684:	strh	r1, [r3, #2]
   12688:	ldr	r1, [pc, #268]	; 1279c <pcapng_create@@Base+0x4ec>
   1268c:	ldr	r1, [pc, r1]
   12690:	str	r1, [r0, r2]
   12694:	ldmib	r4, {r0, r1}
   12698:	bic	r2, r1, #3
   1269c:	str	r1, [r0, #4]
   126a0:	add	r0, r0, r2
   126a4:	str	r1, [r0, #-4]
   126a8:	ldr	r0, [r4, #20]
   126ac:	ldr	r1, [r4, #24]
   126b0:	sub	r0, r0, r1
   126b4:	sub	r0, r0, #12
   126b8:	strh	r0, [r3, #2]
   126bc:	ldr	r0, [r4, #16]
   126c0:	ldr	r2, [pc, #216]	; 127a0 <pcapng_create@@Base+0x4f0>
   126c4:	ldr	r2, [pc, r2]
   126c8:	str	r2, [r0, r1]
   126cc:	ldr	r1, [r4, #20]
   126d0:	ldr	r0, [r4, #16]
   126d4:	bic	r2, r1, #3
   126d8:	str	r1, [r0, #4]
   126dc:	add	r0, r0, r2
   126e0:	str	r1, [r0, #-4]
   126e4:	ldr	r0, [r4, #4]
   126e8:	ldr	r1, [r4, #20]
   126ec:	str	r9, [r0, #20]
   126f0:	str	r1, [r0, #16]
   126f4:	b	12740 <pcapng_create@@Base+0x490>
   126f8:	str	r1, [r4, #12]
   126fc:	b	12708 <pcapng_create@@Base+0x458>
   12700:	ldr	r0, [r4, #20]
   12704:	str	r0, [r4, #24]
   12708:	ldr	sl, [sp, #16]
   1270c:	mov	r9, #6
   12710:	ldr	r0, [r4, #16]
   12714:	add	r1, r0, #1
   12718:	cmp	r1, #2
   1271c:	bcs	12754 <pcapng_create@@Base+0x4a4>
   12720:	ldr	r0, [sl]
   12724:	add	r1, r0, #1
   12728:	cmp	r1, #2
   1272c:	bcs	1276c <pcapng_create@@Base+0x4bc>
   12730:	ldr	r0, [r4]
   12734:	cmn	r0, #1
   12738:	beq	12740 <pcapng_create@@Base+0x490>
   1273c:	bl	47f0 <close@plt>
   12740:	mov	r0, r9
   12744:	sub	sp, fp, #48	; 0x30
   12748:	vpop	{d8-d9}
   1274c:	add	sp, sp, #4
   12750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12754:	ldr	r1, [r4, #20]
   12758:	bl	4790 <munmap@plt>
   1275c:	ldr	r0, [sl]
   12760:	add	r1, r0, #1
   12764:	cmp	r1, #2
   12768:	bcc	12730 <pcapng_create@@Base+0x480>
   1276c:	ldr	r1, [r4, #8]
   12770:	bl	4790 <munmap@plt>
   12774:	ldr	r0, [r4]
   12778:	cmn	r0, #1
   1277c:	bne	1273c <pcapng_create@@Base+0x48c>
   12780:	b	12740 <pcapng_create@@Base+0x490>
   12784:	andeq	r9, r0, r0, ror #6
   12788:	andeq	r9, r0, ip, lsl #6
   1278c:	andeq	r9, r0, r8, lsr r2
   12790:	andeq	r9, r0, r8, asr #2
   12794:	andeq	r9, r0, r0, lsl #1
   12798:	andeq	sl, r1, r0, asr #21
   1279c:			; <UNDEFINED> instruction: 0x0001aab0
   127a0:	andeq	sl, r1, r8, ror sl

000127a4 <pcapng_close@@Base>:
   127a4:	push	{r4, sl, fp, lr}
   127a8:	add	fp, sp, #8
   127ac:	mov	r4, r0
   127b0:	ldr	r0, [r0, #16]
   127b4:	add	r1, r0, #1
   127b8:	cmp	r1, #2
   127bc:	bcs	127e8 <pcapng_close@@Base+0x44>
   127c0:	ldr	r0, [r4, #4]
   127c4:	add	r1, r0, #1
   127c8:	cmp	r1, #2
   127cc:	bcs	12800 <pcapng_close@@Base+0x5c>
   127d0:	ldr	r0, [r4]
   127d4:	cmn	r0, #1
   127d8:	beq	127e0 <pcapng_close@@Base+0x3c>
   127dc:	bl	47f0 <close@plt>
   127e0:	mov	r0, #0
   127e4:	pop	{r4, sl, fp, pc}
   127e8:	ldr	r1, [r4, #20]
   127ec:	bl	4790 <munmap@plt>
   127f0:	ldr	r0, [r4, #4]
   127f4:	add	r1, r0, #1
   127f8:	cmp	r1, #2
   127fc:	bcc	127d0 <pcapng_close@@Base+0x2c>
   12800:	ldr	r1, [r4, #8]
   12804:	bl	4790 <munmap@plt>
   12808:	ldr	r0, [r4]
   1280c:	cmn	r0, #1
   12810:	bne	127dc <pcapng_close@@Base+0x38>
   12814:	b	127e0 <pcapng_close@@Base+0x3c>

00012818 <pcapng_append_section_option@@Base>:
   12818:	push	{r4, r5, fp, lr}
   1281c:	add	fp, sp, #8
   12820:	mov	r4, r0
   12824:	mov	r0, #1
   12828:	cmp	r4, #0
   1282c:	ldrne	r2, [r4]
   12830:	cmnne	r2, #1
   12834:	beq	1285c <pcapng_append_section_option@@Base+0x44>
   12838:	ldr	r2, [r4, #4]
   1283c:	mov	r0, #5
   12840:	add	r3, r2, #1
   12844:	cmp	r3, #2
   12848:	popcc	{r4, r5, fp, pc}
   1284c:	cmp	r1, #0
   12850:	ldrne	r3, [r4, #12]
   12854:	cmpne	r3, #0
   12858:	bne	12860 <pcapng_append_section_option@@Base+0x48>
   1285c:	pop	{r4, r5, fp, pc}
   12860:	ldrh	r5, [r1, #2]
   12864:	add	r0, r2, r3
   12868:	add	r2, r5, #4
   1286c:	bl	4574 <memcpy@plt>
   12870:	movw	r1, #65532	; 0xfffc
   12874:	add	r0, r5, #7
   12878:	movt	r1, #1
   1287c:	and	r0, r0, r1
   12880:	ldmib	r4, {r1, r2, r3}
   12884:	add	r0, r0, r3
   12888:	str	r0, [r4, #12]
   1288c:	sub	r2, r2, r0
   12890:	ldr	r3, [pc, #28]	; 128b4 <pcapng_append_section_option@@Base+0x9c>
   12894:	sub	r2, r2, #12
   12898:	add	r3, pc, r3
   1289c:	strh	r2, [r3, #2]
   128a0:	ldr	r2, [pc, #16]	; 128b8 <pcapng_append_section_option@@Base+0xa0>
   128a4:	ldr	r2, [pc, r2]
   128a8:	str	r2, [r1, r0]
   128ac:	mov	r0, #0
   128b0:	pop	{r4, r5, fp, pc}
   128b4:	andeq	sl, r1, r4, lsr #17
   128b8:	muleq	r1, r8, r8

000128bc <pcapng_append_interface_option@@Base>:
   128bc:	push	{r4, r5, fp, lr}
   128c0:	add	fp, sp, #8
   128c4:	mov	r4, r0
   128c8:	mov	r0, #1
   128cc:	cmp	r4, #0
   128d0:	ldrne	r2, [r4]
   128d4:	cmnne	r2, #1
   128d8:	beq	12900 <pcapng_append_interface_option@@Base+0x44>
   128dc:	ldr	r2, [r4, #16]
   128e0:	mov	r0, #5
   128e4:	add	r3, r2, #1
   128e8:	cmp	r3, #2
   128ec:	popcc	{r4, r5, fp, pc}
   128f0:	cmp	r1, #0
   128f4:	ldrne	r3, [r4, #24]
   128f8:	cmpne	r3, #0
   128fc:	bne	12904 <pcapng_append_interface_option@@Base+0x48>
   12900:	pop	{r4, r5, fp, pc}
   12904:	ldrh	r5, [r1, #2]
   12908:	add	r0, r2, r3
   1290c:	add	r2, r5, #4
   12910:	bl	4574 <memcpy@plt>
   12914:	movw	r1, #65532	; 0xfffc
   12918:	add	r0, r5, #7
   1291c:	add	r3, r4, #16
   12920:	movt	r1, #1
   12924:	and	r0, r0, r1
   12928:	ldm	r3, {r1, r2, r3}
   1292c:	add	r0, r0, r3
   12930:	str	r0, [r4, #24]
   12934:	sub	r2, r2, r0
   12938:	ldr	r3, [pc, #28]	; 1295c <pcapng_append_interface_option@@Base+0xa0>
   1293c:	sub	r2, r2, #12
   12940:	add	r3, pc, r3
   12944:	strh	r2, [r3, #2]
   12948:	ldr	r2, [pc, #16]	; 12960 <pcapng_append_interface_option@@Base+0xa4>
   1294c:	ldr	r2, [pc, r2]
   12950:	str	r2, [r1, r0]
   12954:	mov	r0, #0
   12958:	pop	{r4, r5, fp, pc}
   1295c:	strdeq	sl, [r1], -ip
   12960:	strdeq	sl, [r1], -r0

00012964 <pcapng_append_packet@@Base>:
   12964:	push	{r4, r5, fp, lr}
   12968:	add	fp, sp, #8
   1296c:	mov	r4, r0
   12970:	mov	r0, #1
   12974:	cmp	r4, #0
   12978:	ldrne	r2, [r4]
   1297c:	cmnne	r2, #1
   12980:	bne	12988 <pcapng_append_packet@@Base+0x24>
   12984:	pop	{r4, r5, fp, pc}
   12988:	ldr	r5, [r1, #4]
   1298c:	mov	r0, r2
   12990:	mov	r2, r5
   12994:	bl	4760 <write@plt>
   12998:	mov	r1, r0
   1299c:	mov	r0, #0
   129a0:	cmn	r1, #1
   129a4:	popeq	{r4, r5, fp, pc}
   129a8:	ldr	r1, [r4, #4]
   129ac:	ldr	r2, [r1, #16]
   129b0:	ldr	r3, [r1, #20]
   129b4:	adds	r2, r2, r5
   129b8:	str	r2, [r1, #16]
   129bc:	adc	r2, r3, #0
   129c0:	str	r2, [r1, #20]
   129c4:	pop	{r4, r5, fp, pc}

000129c8 <btbb_pcapng_create_file@@Base>:
   129c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129cc:	add	fp, sp, #28
   129d0:	sub	sp, sp, #292	; 0x124
   129d4:	mov	r6, r0
   129d8:	mov	r0, #28
   129dc:	mov	r8, r2
   129e0:	mov	r7, r1
   129e4:	bl	4658 <malloc@plt>
   129e8:	cmp	r0, #0
   129ec:	mvneq	r0, #4
   129f0:	subeq	sp, fp, #28
   129f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129f8:	add	r4, sp, #20
   129fc:	mov	r9, r0
   12a00:	mov	r1, #0
   12a04:	movw	r2, #258	; 0x102
   12a08:	mov	sl, #0
   12a0c:	orr	r0, r4, #2
   12a10:	bl	4718 <memset@plt>
   12a14:	mov	r0, #3
   12a18:	cmp	r7, #0
   12a1c:	strh	r0, [sp, #20]
   12a20:	beq	12acc <btbb_pcapng_create_file@@Base+0x104>
   12a24:	add	r5, r4, #4
   12a28:	mov	r1, r7
   12a2c:	mov	r2, #256	; 0x100
   12a30:	mov	r0, r5
   12a34:	bl	4730 <strncpy@plt>
   12a38:	mov	r0, r5
   12a3c:	strb	sl, [sp, #279]	; 0x117
   12a40:	bl	46ac <strlen@plt>
   12a44:	strh	r0, [sp, #22]
   12a48:	bl	46f4 <getpagesize@plt>
   12a4c:	mov	r3, r0
   12a50:	mov	r1, #255	; 0xff
   12a54:	mov	r0, #400	; 0x190
   12a58:	str	r1, [sp]
   12a5c:	stmib	sp, {r0, r4}
   12a60:	str	r3, [sp, #12]
   12a64:	mov	r0, r9
   12a68:	mov	r1, r6
   12a6c:	ldr	r2, [pc, #256]	; 12b74 <btbb_pcapng_create_file@@Base+0x1ac>
   12a70:	ldr	r2, [pc, r2]
   12a74:	bl	45bc <pcapng_create@plt>
   12a78:	mov	r6, r0
   12a7c:	cmp	r0, #0
   12a80:	bne	12b44 <btbb_pcapng_create_file@@Base+0x17c>
   12a84:	ldrh	r1, [sp, #20]
   12a88:	cmp	r1, #0
   12a8c:	beq	12b08 <btbb_pcapng_create_file@@Base+0x140>
   12a90:	movw	r0, #65532	; 0xfffc
   12a94:	movt	r0, #1
   12a98:	ldrh	r2, [r4, #2]
   12a9c:	cmp	r2, #0
   12aa0:	beq	12b08 <btbb_pcapng_create_file@@Base+0x140>
   12aa4:	uxth	r1, r1
   12aa8:	cmp	r1, #9
   12aac:	beq	12b58 <btbb_pcapng_create_file@@Base+0x190>
   12ab0:	add	r1, r2, #3
   12ab4:	and	r1, r1, r0
   12ab8:	add	r4, r4, r1
   12abc:	ldrh	r1, [r4, #4]!
   12ac0:	cmp	r1, #0
   12ac4:	bne	12a98 <btbb_pcapng_create_file@@Base+0xd0>
   12ac8:	b	12b08 <btbb_pcapng_create_file@@Base+0x140>
   12acc:	bl	46f4 <getpagesize@plt>
   12ad0:	mov	r3, r0
   12ad4:	mov	r1, #255	; 0xff
   12ad8:	mov	r0, #400	; 0x190
   12adc:	str	r1, [sp]
   12ae0:	stmib	sp, {r0, sl}
   12ae4:	str	r3, [sp, #12]
   12ae8:	mov	r0, r9
   12aec:	mov	r1, r6
   12af0:	ldr	r2, [pc, #112]	; 12b68 <btbb_pcapng_create_file@@Base+0x1a0>
   12af4:	ldr	r2, [pc, r2]
   12af8:	bl	45bc <pcapng_create@plt>
   12afc:	mov	r6, r0
   12b00:	cmp	r0, #0
   12b04:	bne	12b44 <btbb_pcapng_create_file@@Base+0x17c>
   12b08:	ldr	r0, [pc, #92]	; 12b6c <btbb_pcapng_create_file@@Base+0x1a4>
   12b0c:	sub	r1, fp, #40	; 0x28
   12b10:	add	r0, pc, r0
   12b14:	ldrb	r0, [r0, #4]
   12b18:	strb	r0, [fp, #-36]	; 0xffffffdc
   12b1c:	ldr	r0, [pc, #76]	; 12b70 <btbb_pcapng_create_file@@Base+0x1a8>
   12b20:	ldr	r0, [pc, r0]
   12b24:	str	r0, [fp, #-40]	; 0xffffffd8
   12b28:	mov	r0, r9
   12b2c:	bl	4544 <pcapng_append_interface_option@plt>
   12b30:	cmp	r0, #0
   12b34:	beq	12b58 <btbb_pcapng_create_file@@Base+0x190>
   12b38:	mov	r6, r0
   12b3c:	mov	r0, r9
   12b40:	bl	47cc <pcapng_close@plt>
   12b44:	mov	r0, r9
   12b48:	bl	4550 <free@plt>
   12b4c:	rsb	r0, r6, #0
   12b50:	sub	sp, fp, #28
   12b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b58:	str	r9, [r8]
   12b5c:	mov	r0, #0
   12b60:	sub	sp, fp, #28
   12b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b68:	andeq	sl, r1, ip, lsr r6
   12b6c:	muleq	r0, r4, fp
   12b70:	andeq	r8, r0, r4, lsl #23
   12b74:	andeq	sl, r1, r0, asr #13

00012b78 <btbb_pcapng_append_packet@@Base>:
   12b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b7c:	add	fp, sp, #28
   12b80:	sub	sp, sp, #476	; 0x1dc
   12b84:	ldr	r4, [fp, #24]
   12b88:	str	r0, [fp, #-488]	; 0xfffffe18
   12b8c:	str	r3, [fp, #-496]	; 0xfffffe10
   12b90:	str	r2, [fp, #-492]	; 0xfffffe14
   12b94:	mov	r0, r4
   12b98:	bl	46a0 <btbb_packet_get_payload_length@plt>
   12b9c:	mov	r5, r0
   12ba0:	add	r0, r0, #7
   12ba4:	bic	r0, r0, #7
   12ba8:	sub	r1, sp, r0
   12bac:	mov	sp, r1
   12bb0:	mov	r0, r4
   12bb4:	str	r1, [fp, #-500]	; 0xfffffe0c
   12bb8:	bl	44fc <btbb_get_payload_packed@plt>
   12bbc:	mov	r0, r4
   12bc0:	bl	47a8 <btbb_packet_get_channel@plt>
   12bc4:	mov	r7, r0
   12bc8:	mov	r0, r4
   12bcc:	bl	4568 <btbb_packet_get_ac_errors@plt>
   12bd0:	mov	r8, r0
   12bd4:	mov	r0, r4
   12bd8:	bl	470c <btbb_packet_get_transport@plt>
   12bdc:	mov	r9, r0
   12be0:	mov	r0, r4
   12be4:	bl	455c <btbb_packet_get_modulation@plt>
   12be8:	mov	sl, r0
   12bec:	mov	r0, r4
   12bf0:	bl	4748 <btbb_packet_get_lap@plt>
   12bf4:	mov	r6, r0
   12bf8:	mov	r0, r4
   12bfc:	bl	46d0 <btbb_packet_get_header_packed@plt>
   12c00:	mov	r1, #6
   12c04:	cmp	r5, #400	; 0x190
   12c08:	ldr	r3, [fp, #20]
   12c0c:	sub	lr, fp, #256	; 0x100
   12c10:	mov	r4, #3
   12c14:	str	r1, [fp, #-484]	; 0xfffffe1c
   12c18:	ldr	r1, [fp, #-496]	; 0xfffffe10
   12c1c:	movge	r5, #400	; 0x190
   12c20:	str	r1, [fp, #-472]	; 0xfffffe28
   12c24:	ldr	r1, [fp, #-492]	; 0xfffffe14
   12c28:	str	r1, [fp, #-468]	; 0xfffffe2c
   12c2c:	add	r1, r5, #22
   12c30:	str	r1, [fp, #-464]	; 0xfffffe30
   12c34:	str	r1, [fp, #-460]	; 0xfffffe34
   12c38:	mov	r1, #0
   12c3c:	strb	r7, [fp, #-456]	; 0xfffffe38
   12c40:	add	r7, r5, #61	; 0x3d
   12c44:	str	r1, [fp, #-476]	; 0xfffffe24
   12c48:	orr	r1, sl, r9, lsl #4
   12c4c:	strb	r8, [fp, #-453]	; 0xfffffe3b
   12c50:	sub	r8, lr, #194	; 0xc2
   12c54:	mov	r9, #0
   12c58:	strb	r1, [fp, #-452]	; 0xfffffe3c
   12c5c:	ldr	r1, [fp, #16]
   12c60:	strb	r9, [fp, #-451]	; 0xfffffe3d
   12c64:	strh	r9, [r8]
   12c68:	str	r6, [fp, #-448]	; 0xfffffe40
   12c6c:	bic	r6, r7, #3
   12c70:	str	r6, [fp, #-480]	; 0xfffffe20
   12c74:	bic	r2, r1, #-16777216	; 0xff000000
   12c78:	orr	r2, r2, r3, lsl #24
   12c7c:	str	r2, [fp, #-444]	; 0xfffffe44
   12c80:	ldr	r2, [fp, #8]
   12c84:	strb	r2, [fp, #-455]	; 0xfffffe39
   12c88:	str	r0, [fp, #-440]	; 0xfffffe48
   12c8c:	ldr	r0, [fp, #12]
   12c90:	cmp	r0, r2
   12c94:	strb	r0, [fp, #-454]	; 0xfffffe3a
   12c98:	movwlt	r4, #7
   12c9c:	cmn	r1, #1
   12ca0:	orrne	r4, r4, #16
   12ca4:	cmp	r3, #255	; 0xff
   12ca8:	orrne	r4, r4, #128	; 0x80
   12cac:	cmp	r5, #0
   12cb0:	strh	r4, [r8, #14]
   12cb4:	beq	12cd8 <btbb_pcapng_append_packet@@Base+0x160>
   12cb8:	cmp	r5, #400	; 0x190
   12cbc:	bhi	12d04 <btbb_pcapng_append_packet@@Base+0x18c>
   12cc0:	ldr	r1, [fp, #-500]	; 0xfffffe0c
   12cc4:	sub	r0, fp, #484	; 0x1e4
   12cc8:	mov	r2, r5
   12ccc:	add	r0, r0, #50	; 0x32
   12cd0:	bl	4574 <memcpy@plt>
   12cd4:	orr	r4, r4, #32
   12cd8:	lsr	r0, r7, #2
   12cdc:	sub	r1, fp, #484	; 0x1e4
   12ce0:	strh	r4, [r8, #14]
   12ce4:	add	r0, r1, r0, lsl #2
   12ce8:	str	r9, [r0, #-8]
   12cec:	str	r6, [r0, #-4]
   12cf0:	ldr	r0, [fp, #-488]	; 0xfffffe18
   12cf4:	bl	4700 <pcapng_append_packet@plt>
   12cf8:	rsb	r0, r0, #0
   12cfc:	sub	sp, fp, #28
   12d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d04:	ldr	r0, [pc, #24]	; 12d24 <btbb_pcapng_append_packet@@Base+0x1ac>
   12d08:	ldr	r1, [pc, #24]	; 12d28 <btbb_pcapng_append_packet@@Base+0x1b0>
   12d0c:	ldr	r3, [pc, #24]	; 12d2c <btbb_pcapng_append_packet@@Base+0x1b4>
   12d10:	mov	r2, #221	; 0xdd
   12d14:	add	r0, pc, r0
   12d18:	add	r1, pc, r1
   12d1c:	add	r3, pc, r3
   12d20:	bl	47fc <__assert_fail@plt>
   12d24:	andeq	r8, r0, sl, lsr #15
   12d28:	muleq	r0, r1, r9
   12d2c:	ldrdeq	r8, [r0], -sl

00012d30 <btbb_pcapng_record_bdaddr@@Base>:
   12d30:	push	{fp, lr}
   12d34:	mov	fp, sp
   12d38:	sub	sp, sp, #16
   12d3c:	movw	r1, #54080	; 0xd340
   12d40:	strb	r2, [sp, #8]
   12d44:	movt	r1, #12
   12d48:	str	r1, [sp, #4]
   12d4c:	lsr	r1, r2, #8
   12d50:	strb	r3, [sp, #12]
   12d54:	strb	r1, [sp, #9]
   12d58:	lsr	r1, r2, #16
   12d5c:	strb	r1, [sp, #10]
   12d60:	lsr	r1, r2, #24
   12d64:	strb	r1, [sp, #11]
   12d68:	lsr	r1, r3, #8
   12d6c:	strb	r1, [sp, #13]
   12d70:	ldr	r1, [fp, #8]
   12d74:	strb	r1, [sp, #14]
   12d78:	ldr	r1, [fp, #12]
   12d7c:	strb	r1, [sp, #15]
   12d80:	add	r1, sp, #4
   12d84:	bl	4544 <pcapng_append_interface_option@plt>
   12d88:	rsb	r0, r0, #0
   12d8c:	mov	sp, fp
   12d90:	pop	{fp, pc}

00012d94 <btbb_pcapng_record_btclock@@Base>:
   12d94:	push	{fp, lr}
   12d98:	mov	fp, sp
   12d9c:	sub	sp, sp, #24
   12da0:	movw	r1, #54081	; 0xd341
   12da4:	movt	r1, #24
   12da8:	str	r1, [sp]
   12dac:	ldr	r1, [fp, #12]
   12db0:	str	r2, [sp, #12]
   12db4:	str	r1, [sp, #8]
   12db8:	ldr	r1, [fp, #8]
   12dbc:	str	r1, [sp, #4]
   12dc0:	ldr	r1, [fp, #16]
   12dc4:	str	r1, [sp, #16]
   12dc8:	ldr	r1, [fp, #20]
   12dcc:	str	r1, [sp, #20]
   12dd0:	mov	r1, sp
   12dd4:	bl	4544 <pcapng_append_interface_option@plt>
   12dd8:	rsb	r0, r0, #0
   12ddc:	mov	sp, fp
   12de0:	pop	{fp, pc}

00012de4 <btbb_pcapng_close@@Base>:
   12de4:	push	{r4, sl, fp, lr}
   12de8:	add	fp, sp, #8
   12dec:	mov	r4, r0
   12df0:	bl	47cc <pcapng_close@plt>
   12df4:	cmp	r4, #0
   12df8:	beq	12e04 <btbb_pcapng_close@@Base+0x20>
   12dfc:	mov	r0, r4
   12e00:	bl	4550 <free@plt>
   12e04:	mvn	r0, #0
   12e08:	pop	{r4, sl, fp, pc}

00012e0c <lell_pcapng_create_file@@Base>:
   12e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e10:	add	fp, sp, #28
   12e14:	sub	sp, sp, #292	; 0x124
   12e18:	mov	r6, r0
   12e1c:	mov	r0, #28
   12e20:	mov	r4, r2
   12e24:	mov	r7, r1
   12e28:	bl	4658 <malloc@plt>
   12e2c:	cmp	r0, #0
   12e30:	mvneq	r0, #4
   12e34:	subeq	sp, fp, #28
   12e38:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e3c:	str	r4, [sp, #16]
   12e40:	add	r4, sp, #20
   12e44:	mov	r9, r0
   12e48:	mov	r1, #0
   12e4c:	movw	r2, #258	; 0x102
   12e50:	mov	sl, #0
   12e54:	orr	r0, r4, #2
   12e58:	bl	4718 <memset@plt>
   12e5c:	mov	r0, #3
   12e60:	cmp	r7, #0
   12e64:	strh	r0, [sp, #20]
   12e68:	beq	12f14 <lell_pcapng_create_file@@Base+0x108>
   12e6c:	add	r5, r4, #4
   12e70:	mov	r1, r7
   12e74:	mov	r2, #256	; 0x100
   12e78:	mov	r8, #256	; 0x100
   12e7c:	mov	r0, r5
   12e80:	bl	4730 <strncpy@plt>
   12e84:	mov	r0, r5
   12e88:	strb	sl, [sp, #279]	; 0x117
   12e8c:	bl	46ac <strlen@plt>
   12e90:	strh	r0, [sp, #22]
   12e94:	bl	46f4 <getpagesize@plt>
   12e98:	mov	r3, r0
   12e9c:	mov	r0, #64	; 0x40
   12ea0:	str	r8, [sp]
   12ea4:	mov	r1, r6
   12ea8:	stmib	sp, {r0, r4}
   12eac:	str	r3, [sp, #12]
   12eb0:	mov	r0, r9
   12eb4:	ldr	r2, [pc, #260]	; 12fc0 <lell_pcapng_create_file@@Base+0x1b4>
   12eb8:	ldr	r2, [pc, r2]
   12ebc:	bl	45bc <pcapng_create@plt>
   12ec0:	mov	r6, r0
   12ec4:	cmp	r0, #0
   12ec8:	bne	12f8c <lell_pcapng_create_file@@Base+0x180>
   12ecc:	ldrh	r1, [sp, #20]
   12ed0:	cmp	r1, #0
   12ed4:	beq	12f50 <lell_pcapng_create_file@@Base+0x144>
   12ed8:	movw	r0, #65532	; 0xfffc
   12edc:	movt	r0, #1
   12ee0:	ldrh	r2, [r4, #2]
   12ee4:	cmp	r2, #0
   12ee8:	beq	12f50 <lell_pcapng_create_file@@Base+0x144>
   12eec:	uxth	r1, r1
   12ef0:	cmp	r1, #9
   12ef4:	beq	12fa0 <lell_pcapng_create_file@@Base+0x194>
   12ef8:	add	r1, r2, #3
   12efc:	and	r1, r1, r0
   12f00:	add	r4, r4, r1
   12f04:	ldrh	r1, [r4, #4]!
   12f08:	cmp	r1, #0
   12f0c:	bne	12ee0 <lell_pcapng_create_file@@Base+0xd4>
   12f10:	b	12f50 <lell_pcapng_create_file@@Base+0x144>
   12f14:	bl	46f4 <getpagesize@plt>
   12f18:	mov	r3, r0
   12f1c:	mov	r1, #256	; 0x100
   12f20:	mov	r0, #64	; 0x40
   12f24:	str	r1, [sp]
   12f28:	stmib	sp, {r0, sl}
   12f2c:	str	r3, [sp, #12]
   12f30:	mov	r0, r9
   12f34:	mov	r1, r6
   12f38:	ldr	r2, [pc, #116]	; 12fb4 <lell_pcapng_create_file@@Base+0x1a8>
   12f3c:	ldr	r2, [pc, r2]
   12f40:	bl	45bc <pcapng_create@plt>
   12f44:	mov	r6, r0
   12f48:	cmp	r0, #0
   12f4c:	bne	12f8c <lell_pcapng_create_file@@Base+0x180>
   12f50:	ldr	r0, [pc, #96]	; 12fb8 <lell_pcapng_create_file@@Base+0x1ac>
   12f54:	sub	r1, fp, #40	; 0x28
   12f58:	add	r0, pc, r0
   12f5c:	ldrb	r0, [r0, #4]
   12f60:	strb	r0, [fp, #-36]	; 0xffffffdc
   12f64:	ldr	r0, [pc, #80]	; 12fbc <lell_pcapng_create_file@@Base+0x1b0>
   12f68:	ldr	r0, [pc, r0]
   12f6c:	str	r0, [fp, #-40]	; 0xffffffd8
   12f70:	mov	r0, r9
   12f74:	bl	4544 <pcapng_append_interface_option@plt>
   12f78:	cmp	r0, #0
   12f7c:	beq	12fa0 <lell_pcapng_create_file@@Base+0x194>
   12f80:	mov	r6, r0
   12f84:	mov	r0, r9
   12f88:	bl	47cc <pcapng_close@plt>
   12f8c:	mov	r0, r9
   12f90:	bl	4550 <free@plt>
   12f94:	rsb	r0, r6, #0
   12f98:	sub	sp, fp, #28
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fa0:	ldr	r0, [sp, #16]
   12fa4:	str	r9, [r0]
   12fa8:	mov	r0, #0
   12fac:	sub	sp, fp, #28
   12fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fb4:	strdeq	sl, [r1], -r4
   12fb8:	andeq	r8, r0, ip, asr #14
   12fbc:	andeq	r8, r0, ip, lsr r7
   12fc0:	andeq	sl, r1, r8, ror r2

00012fc4 <lell_pcapng_append_packet@@Base>:
   12fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fc8:	add	fp, sp, #28
   12fcc:	sub	sp, sp, #372	; 0x174
   12fd0:	ldr	r5, [fp, #20]
   12fd4:	str	r0, [sp, #12]
   12fd8:	mov	r8, r3
   12fdc:	mov	sl, r2
   12fe0:	mov	r0, r5
   12fe4:	bl	4520 <lell_packet_is_data@plt>
   12fe8:	ldr	r1, [r5, #72]	; 0x48
   12fec:	add	r2, r1, #9
   12ff0:	cmp	r2, #256	; 0x100
   12ff4:	bcs	13130 <lell_pcapng_append_packet@@Base+0x16c>
   12ff8:	add	r3, r1, #19
   12ffc:	add	r1, r1, #58	; 0x3a
   13000:	ldr	lr, [fp, #12]
   13004:	ldr	ip, [fp, #16]
   13008:	ldrb	r4, [r5, #69]	; 0x45
   1300c:	mov	r9, #6
   13010:	ldr	r7, [r5, #92]	; 0x5c
   13014:	clz	r0, r0
   13018:	str	r8, [sp, #4]
   1301c:	bic	r6, r1, #3
   13020:	lsr	r1, r1, #2
   13024:	lsr	r0, r0, #5
   13028:	str	r1, [sp, #8]
   1302c:	ldr	r1, [fp, #8]
   13030:	str	r6, [sp, #20]
   13034:	str	r9, [sp, #16]
   13038:	mov	r9, #0
   1303c:	str	r9, [sp, #24]
   13040:	str	r8, [sp, #28]
   13044:	str	sl, [sp, #32]
   13048:	str	r3, [sp, #36]	; 0x24
   1304c:	str	r3, [sp, #40]	; 0x28
   13050:	mov	r3, #35	; 0x23
   13054:	mov	r8, sl
   13058:	cmp	lr, r1
   1305c:	strb	r1, [sp, #45]	; 0x2d
   13060:	strb	lr, [sp, #46]	; 0x2e
   13064:	str	ip, [sp, #48]	; 0x30
   13068:	strb	r4, [sp, #44]	; 0x2c
   1306c:	add	r4, sp, #16
   13070:	strb	r7, [sp, #47]	; 0x2f
   13074:	mov	r1, r5
   13078:	movwlt	r3, #39	; 0x27
   1307c:	orr	r0, r3, r0, lsl #4
   13080:	strh	r0, [sp, #52]	; 0x34
   13084:	add	r0, r4, #38	; 0x26
   13088:	bl	4574 <memcpy@plt>
   1308c:	ldr	r0, [sp, #8]
   13090:	ldr	sl, [sp, #12]
   13094:	mov	r1, r4
   13098:	add	r0, r4, r0, lsl #2
   1309c:	str	r9, [r0, #-8]
   130a0:	str	r6, [r0, #-4]
   130a4:	mov	r0, sl
   130a8:	bl	4700 <pcapng_append_packet@plt>
   130ac:	rsb	r4, r0, #0
   130b0:	cmp	r0, #0
   130b4:	bne	13124 <lell_pcapng_append_packet@@Base+0x160>
   130b8:	mov	r0, r5
   130bc:	mov	r6, r8
   130c0:	bl	4520 <lell_packet_is_data@plt>
   130c4:	cmp	r0, #0
   130c8:	bne	13124 <lell_pcapng_append_packet@@Base+0x160>
   130cc:	ldrb	r0, [r5, #80]	; 0x50
   130d0:	cmp	r0, #5
   130d4:	bne	13124 <lell_pcapng_append_packet@@Base+0x160>
   130d8:	movw	r0, #54144	; 0xd380
   130dc:	str	r6, [fp, #-76]	; 0xffffffb4
   130e0:	mov	r2, #32
   130e4:	sub	r1, fp, #80	; 0x50
   130e8:	movt	r0, #46	; 0x2e
   130ec:	str	r0, [fp, #-80]	; 0xffffffb0
   130f0:	ldr	r0, [sp, #4]
   130f4:	str	r0, [fp, #-72]	; 0xffffffb8
   130f8:	add	r0, r5, #16
   130fc:	vld1.8	{d16-d17}, [r0]
   13100:	vld1.8	{d18-d19}, [r5], r2
   13104:	add	r0, r1, #28
   13108:	vst1.32	{d16-d17}, [r0]
   1310c:	add	r0, r1, #12
   13110:	vst1.32	{d18-d19}, [r0]
   13114:	ldrh	r0, [r5]
   13118:	strh	r0, [fp, #-36]	; 0xffffffdc
   1311c:	mov	r0, sl
   13120:	bl	4544 <pcapng_append_interface_option@plt>
   13124:	mov	r0, r4
   13128:	sub	sp, fp, #28
   1312c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13130:	ldr	r0, [pc, #24]	; 13150 <lell_pcapng_append_packet@@Base+0x18c>
   13134:	ldr	r1, [pc, #24]	; 13154 <lell_pcapng_append_packet@@Base+0x190>
   13138:	ldr	r3, [pc, #24]	; 13158 <lell_pcapng_append_packet@@Base+0x194>
   1313c:	movw	r2, #441	; 0x1b9
   13140:	add	r0, pc, r0
   13144:	add	r1, pc, r1
   13148:	add	r3, pc, r3
   1314c:	bl	47fc <__assert_fail@plt>
   13150:	strdeq	r8, [r0], -r2
   13154:	andeq	r8, r0, r5, ror #10
   13158:	andeq	r8, r0, r3, lsl #14

0001315c <lell_pcapng_record_connect_req@@Base>:
   1315c:	push	{fp, lr}
   13160:	mov	fp, sp
   13164:	sub	sp, sp, #48	; 0x30
   13168:	stmib	sp, {r2, r3}
   1316c:	ldr	r2, [fp, #8]
   13170:	movw	r1, #54144	; 0xd380
   13174:	mov	ip, #32
   13178:	movt	r1, #46	; 0x2e
   1317c:	str	r1, [sp]
   13180:	mov	r1, sp
   13184:	add	r3, r1, #12
   13188:	add	lr, r2, #16
   1318c:	vld1.8	{d16-d17}, [r2], ip
   13190:	vld1.8	{d18-d19}, [lr]
   13194:	vst1.32	{d16-d17}, [r3]
   13198:	add	r3, r1, #28
   1319c:	vst1.32	{d18-d19}, [r3]
   131a0:	ldrh	r2, [r2]
   131a4:	strh	r2, [sp, #44]	; 0x2c
   131a8:	bl	4544 <pcapng_append_interface_option@plt>
   131ac:	rsb	r0, r0, #0
   131b0:	mov	sp, fp
   131b4:	pop	{fp, pc}

000131b8 <lell_pcapng_close@@Base>:
   131b8:	push	{r4, sl, fp, lr}
   131bc:	add	fp, sp, #8
   131c0:	mov	r4, r0
   131c4:	bl	47cc <pcapng_close@plt>
   131c8:	cmp	r4, #0
   131cc:	beq	131d8 <lell_pcapng_close@@Base+0x20>
   131d0:	mov	r0, r4
   131d4:	bl	4550 <free@plt>
   131d8:	mvn	r0, #0
   131dc:	pop	{r4, sl, fp, pc}
   131e0:	cmp	r3, #0
   131e4:	cmpeq	r2, #0
   131e8:	bne	13200 <lell_pcapng_close@@Base+0x48>
   131ec:	cmp	r1, #0
   131f0:	cmpeq	r0, #0
   131f4:	mvnne	r1, #0
   131f8:	mvnne	r0, #0
   131fc:	b	1321c <lell_pcapng_close@@Base+0x64>
   13200:	sub	sp, sp, #8
   13204:	push	{sp, lr}
   13208:	bl	1322c <lell_pcapng_close@@Base+0x74>
   1320c:	ldr	lr, [sp, #4]
   13210:	add	sp, sp, #8
   13214:	pop	{r2, r3}
   13218:	bx	lr
   1321c:	push	{r1, lr}
   13220:	mov	r0, #8
   13224:	bl	44d8 <raise@plt>
   13228:	pop	{r1, pc}
   1322c:	cmp	r1, r3
   13230:	cmpeq	r0, r2
   13234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13238:	mov	r4, r0
   1323c:	movcc	r0, #0
   13240:	mov	r5, r1
   13244:	ldr	lr, [sp, #36]	; 0x24
   13248:	movcc	r1, r0
   1324c:	bcc	13348 <lell_pcapng_close@@Base+0x190>
   13250:	cmp	r3, #0
   13254:	clzeq	ip, r2
   13258:	clzne	ip, r3
   1325c:	addeq	ip, ip, #32
   13260:	cmp	r5, #0
   13264:	clzeq	r1, r4
   13268:	addeq	r1, r1, #32
   1326c:	clzne	r1, r5
   13270:	sub	ip, ip, r1
   13274:	sub	sl, ip, #32
   13278:	lsl	r9, r3, ip
   1327c:	rsb	fp, ip, #32
   13280:	orr	r9, r9, r2, lsl sl
   13284:	orr	r9, r9, r2, lsr fp
   13288:	lsl	r8, r2, ip
   1328c:	cmp	r5, r9
   13290:	cmpeq	r4, r8
   13294:	movcc	r0, #0
   13298:	movcc	r1, r0
   1329c:	bcc	132b8 <lell_pcapng_close@@Base+0x100>
   132a0:	mov	r0, #1
   132a4:	subs	r4, r4, r8
   132a8:	lsl	r1, r0, sl
   132ac:	orr	r1, r1, r0, lsr fp
   132b0:	lsl	r0, r0, ip
   132b4:	sbc	r5, r5, r9
   132b8:	cmp	ip, #0
   132bc:	beq	13348 <lell_pcapng_close@@Base+0x190>
   132c0:	lsr	r6, r8, #1
   132c4:	orr	r6, r6, r9, lsl #31
   132c8:	lsr	r7, r9, #1
   132cc:	mov	r2, ip
   132d0:	b	132f4 <lell_pcapng_close@@Base+0x13c>
   132d4:	subs	r3, r4, r6
   132d8:	sbc	r8, r5, r7
   132dc:	adds	r3, r3, r3
   132e0:	adc	r8, r8, r8
   132e4:	adds	r4, r3, #1
   132e8:	adc	r5, r8, #0
   132ec:	subs	r2, r2, #1
   132f0:	beq	13310 <lell_pcapng_close@@Base+0x158>
   132f4:	cmp	r5, r7
   132f8:	cmpeq	r4, r6
   132fc:	bcs	132d4 <lell_pcapng_close@@Base+0x11c>
   13300:	adds	r4, r4, r4
   13304:	adc	r5, r5, r5
   13308:	subs	r2, r2, #1
   1330c:	bne	132f4 <lell_pcapng_close@@Base+0x13c>
   13310:	lsr	r3, r4, ip
   13314:	orr	r3, r3, r5, lsl fp
   13318:	lsr	r2, r5, ip
   1331c:	orr	r3, r3, r5, lsr sl
   13320:	adds	r0, r0, r4
   13324:	mov	r4, r3
   13328:	lsl	r3, r2, ip
   1332c:	orr	r3, r3, r4, lsl sl
   13330:	lsl	ip, r4, ip
   13334:	orr	r3, r3, r4, lsr fp
   13338:	adc	r1, r1, r5
   1333c:	subs	r0, r0, ip
   13340:	mov	r5, r2
   13344:	sbc	r1, r1, r3
   13348:	cmp	lr, #0
   1334c:	strdne	r4, [lr]
   13350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00013354 <.fini>:
   13354:	push	{r3, lr}
   13358:	pop	{r3, pc}
