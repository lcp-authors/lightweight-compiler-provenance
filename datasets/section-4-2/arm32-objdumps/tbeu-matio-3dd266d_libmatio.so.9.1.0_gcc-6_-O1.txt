
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001448 <_init>:
    1448:	push	{r3, lr}
    144c:	bl	1748 <call_weak_fn>
    1450:	pop	{r3, pc}

Disassembly of section .plt:

00001454 <.plt>:
    1454:	push	{lr}		; (str lr, [sp, #-4]!)
    1458:	ldr	lr, [pc, #4]	; 1464 <.plt+0x10>
    145c:	add	lr, pc, lr
    1460:	ldr	pc, [lr, #8]!
    1464:	.word	0x00062b9c

00001468 <calloc@plt>:
    1468:	add	ip, pc, #0, 12
    146c:	add	ip, ip, #401408	; 0x62000
    1470:	ldr	pc, [ip, #2972]!	; 0xb9c

00001474 <raise@plt>:
    1474:	add	ip, pc, #0, 12
    1478:	add	ip, ip, #401408	; 0x62000
    147c:	ldr	pc, [ip, #2964]!	; 0xb94

00001480 <Mat_VarReadNext@plt>:
    1480:	add	ip, pc, #0, 12
    1484:	add	ip, ip, #401408	; 0x62000
    1488:	ldr	pc, [ip, #2956]!	; 0xb8c

0000148c <strcmp@plt>:
    148c:	add	ip, pc, #0, 12
    1490:	add	ip, ip, #401408	; 0x62000
    1494:	ldr	pc, [ip, #2948]!	; 0xb84

00001498 <__cxa_finalize@plt>:
    1498:	add	ip, pc, #0, 12
    149c:	add	ip, ip, #401408	; 0x62000
    14a0:	ldr	pc, [ip, #2940]!	; 0xb7c

000014a4 <Mat_Open@plt>:
    14a4:	add	ip, pc, #0, 12
    14a8:	add	ip, ip, #401408	; 0x62000
    14ac:	ldr	pc, [ip, #2932]!	; 0xb74

000014b0 <printf@plt>:
    14b0:	add	ip, pc, #0, 12
    14b4:	add	ip, ip, #401408	; 0x62000
    14b8:	ldr	pc, [ip, #2924]!	; 0xb6c

000014bc <fopen@plt>:
    14bc:	add	ip, pc, #0, 12
    14c0:	add	ip, ip, #401408	; 0x62000
    14c4:	ldr	pc, [ip, #2916]!	; 0xb64

000014c8 <inflate@plt>:
    14c8:	add	ip, pc, #0, 12
    14cc:	add	ip, ip, #401408	; 0x62000
    14d0:	ldr	pc, [ip, #2908]!	; 0xb5c

000014d4 <fflush@plt>:
    14d4:	add	ip, pc, #0, 12
    14d8:	add	ip, ip, #401408	; 0x62000
    14dc:	ldr	pc, [ip, #2900]!	; 0xb54

000014e0 <free@plt>:
    14e0:	add	ip, pc, #0, 12
    14e4:	add	ip, ip, #401408	; 0x62000
    14e8:	ldr	pc, [ip, #2892]!	; 0xb4c

000014ec <Mat_Warning@plt>:
    14ec:	add	ip, pc, #0, 12
    14f0:	add	ip, ip, #401408	; 0x62000
    14f4:	ldr	pc, [ip, #2884]!	; 0xb44

000014f8 <memcpy@plt>:
    14f8:	add	ip, pc, #0, 12
    14fc:	add	ip, ip, #401408	; 0x62000
    1500:	ldr	pc, [ip, #2876]!	; 0xb3c

00001504 <Mat_VarWrite@plt>:
    1504:	add	ip, pc, #0, 12
    1508:	add	ip, ip, #401408	; 0x62000
    150c:	ldr	pc, [ip, #2868]!	; 0xb34

00001510 <time@plt>:
    1510:	add	ip, pc, #0, 12
    1514:	add	ip, ip, #401408	; 0x62000
    1518:	ldr	pc, [ip, #2860]!	; 0xb2c

0000151c <ftell@plt>:
    151c:	add	ip, pc, #0, 12
    1520:	add	ip, ip, #401408	; 0x62000
    1524:	ldr	pc, [ip, #2852]!	; 0xb24

00001528 <ctime@plt>:
    1528:	add	ip, pc, #0, 12
    152c:	add	ip, ip, #401408	; 0x62000
    1530:	ldr	pc, [ip, #2844]!	; 0xb1c

00001534 <strdup@plt>:
    1534:	add	ip, pc, #0, 12
    1538:	add	ip, ip, #401408	; 0x62000
    153c:	ldr	pc, [ip, #2836]!	; 0xb14

00001540 <realloc@plt>:
    1540:	add	ip, pc, #0, 12
    1544:	add	ip, ip, #401408	; 0x62000
    1548:	ldr	pc, [ip, #2828]!	; 0xb0c

0000154c <Mat_VarReadInfo@plt>:
    154c:	add	ip, pc, #0, 12
    1550:	add	ip, ip, #401408	; 0x62000
    1554:	ldr	pc, [ip, #2820]!	; 0xb04

00001558 <zError@plt>:
    1558:	add	ip, pc, #0, 12
    155c:	add	ip, ip, #401408	; 0x62000
    1560:	ldr	pc, [ip, #2812]!	; 0xafc

00001564 <deflate@plt>:
    1564:	add	ip, pc, #0, 12
    1568:	add	ip, ip, #401408	; 0x62000
    156c:	ldr	pc, [ip, #2804]!	; 0xaf4

00001570 <Mat_VarCalloc@plt>:
    1570:	add	ip, pc, #0, 12
    1574:	add	ip, ip, #401408	; 0x62000
    1578:	ldr	pc, [ip, #2796]!	; 0xaec

0000157c <fwrite@plt>:
    157c:	add	ip, pc, #0, 12
    1580:	add	ip, ip, #401408	; 0x62000
    1584:	ldr	pc, [ip, #2788]!	; 0xae4

00001588 <fread@plt>:
    1588:	add	ip, pc, #0, 12
    158c:	add	ip, ip, #401408	; 0x62000
    1590:	ldr	pc, [ip, #2780]!	; 0xadc

00001594 <floor@plt>:
    1594:	add	ip, pc, #0, 12
    1598:	add	ip, ip, #401408	; 0x62000
    159c:	ldr	pc, [ip, #2772]!	; 0xad4

000015a0 <puts@plt>:
    15a0:	add	ip, pc, #0, 12
    15a4:	add	ip, ip, #401408	; 0x62000
    15a8:	ldr	pc, [ip, #2764]!	; 0xacc

000015ac <malloc@plt>:
    15ac:	add	ip, pc, #0, 12
    15b0:	add	ip, ip, #401408	; 0x62000
    15b4:	ldr	pc, [ip, #2756]!	; 0xac4

000015b8 <deflateInit_@plt>:
    15b8:	add	ip, pc, #0, 12
    15bc:	add	ip, ip, #401408	; 0x62000
    15c0:	ldr	pc, [ip, #2748]!	; 0xabc

000015c4 <mktemp@plt>:
    15c4:	add	ip, pc, #0, 12
    15c8:	add	ip, ip, #401408	; 0x62000
    15cc:	ldr	pc, [ip, #2740]!	; 0xab4

000015d0 <__gmon_start__@plt>:
    15d0:	add	ip, pc, #0, 12
    15d4:	add	ip, ip, #401408	; 0x62000
    15d8:	ldr	pc, [ip, #2732]!	; 0xaac

000015dc <exit@plt>:
    15dc:	add	ip, pc, #0, 12
    15e0:	add	ip, ip, #401408	; 0x62000
    15e4:	ldr	pc, [ip, #2724]!	; 0xaa4

000015e8 <feof@plt>:
    15e8:	add	ip, pc, #0, 12
    15ec:	add	ip, ip, #401408	; 0x62000
    15f0:	ldr	pc, [ip, #2716]!	; 0xa9c

000015f4 <Mat_VarFree@plt>:
    15f4:	add	ip, pc, #0, 12
    15f8:	add	ip, ip, #401408	; 0x62000
    15fc:	ldr	pc, [ip, #2708]!	; 0xa94

00001600 <Mat_SizeOf@plt>:
    1600:	add	ip, pc, #0, 12
    1604:	add	ip, ip, #401408	; 0x62000
    1608:	ldr	pc, [ip, #2700]!	; 0xa8c

0000160c <Mat_GetDir@plt>:
    160c:	add	ip, pc, #0, 12
    1610:	add	ip, ip, #401408	; 0x62000
    1614:	ldr	pc, [ip, #2692]!	; 0xa84

00001618 <inflateEnd@plt>:
    1618:	add	ip, pc, #0, 12
    161c:	add	ip, ip, #401408	; 0x62000
    1620:	ldr	pc, [ip, #2684]!	; 0xa7c

00001624 <inflateCopy@plt>:
    1624:	add	ip, pc, #0, 12
    1628:	add	ip, ip, #401408	; 0x62000
    162c:	ldr	pc, [ip, #2676]!	; 0xa74

00001630 <strlen@plt>:
    1630:	add	ip, pc, #0, 12
    1634:	add	ip, ip, #401408	; 0x62000
    1638:	ldr	pc, [ip, #2668]!	; 0xa6c

0000163c <fprintf@plt>:
    163c:	add	ip, pc, #0, 12
    1640:	add	ip, ip, #401408	; 0x62000
    1644:	ldr	pc, [ip, #2660]!	; 0xa64

00001648 <Mat_VarPrint@plt>:
    1648:	add	ip, pc, #0, 12
    164c:	add	ip, ip, #401408	; 0x62000
    1650:	ldr	pc, [ip, #2652]!	; 0xa5c

00001654 <snprintf@plt>:
    1654:	add	ip, pc, #0, 12
    1658:	add	ip, ip, #401408	; 0x62000
    165c:	ldr	pc, [ip, #2644]!	; 0xa54

00001660 <Mat_Rewind@plt>:
    1660:	add	ip, pc, #0, 12
    1664:	add	ip, ip, #401408	; 0x62000
    1668:	ldr	pc, [ip, #2636]!	; 0xa4c

0000166c <memset@plt>:
    166c:	add	ip, pc, #0, 12
    1670:	add	ip, ip, #401408	; 0x62000
    1674:	ldr	pc, [ip, #2628]!	; 0xa44

00001678 <putchar@plt>:
    1678:	add	ip, pc, #0, 12
    167c:	add	ip, ip, #401408	; 0x62000
    1680:	ldr	pc, [ip, #2620]!	; 0xa3c

00001684 <Mat_Close@plt>:
    1684:	add	ip, pc, #0, 12
    1688:	add	ip, ip, #401408	; 0x62000
    168c:	ldr	pc, [ip, #2612]!	; 0xa34

00001690 <Mat_Critical@plt>:
    1690:	add	ip, pc, #0, 12
    1694:	add	ip, ip, #401408	; 0x62000
    1698:	ldr	pc, [ip, #2604]!	; 0xa2c

0000169c <deflateEnd@plt>:
    169c:	add	ip, pc, #0, 12
    16a0:	add	ip, ip, #401408	; 0x62000
    16a4:	ldr	pc, [ip, #2596]!	; 0xa24

000016a8 <fclose@plt>:
    16a8:	add	ip, pc, #0, 12
    16ac:	add	ip, ip, #401408	; 0x62000
    16b0:	ldr	pc, [ip, #2588]!	; 0xa1c

000016b4 <inflateInit_@plt>:
    16b4:	add	ip, pc, #0, 12
    16b8:	add	ip, ip, #401408	; 0x62000
    16bc:	ldr	pc, [ip, #2580]!	; 0xa14

000016c0 <Mat_CreateVer@plt>:
    16c0:	add	ip, pc, #0, 12
    16c4:	add	ip, ip, #401408	; 0x62000
    16c8:	ldr	pc, [ip, #2572]!	; 0xa0c

000016cc <remove@plt>:
    16cc:	add	ip, pc, #0, 12
    16d0:	add	ip, ip, #401408	; 0x62000
    16d4:	ldr	pc, [ip, #2564]!	; 0xa04

000016d8 <vsnprintf@plt>:
    16d8:	add	ip, pc, #0, 12
    16dc:	add	ip, ip, #401408	; 0x62000
    16e0:	ldr	pc, [ip, #2556]!	; 0x9fc

000016e4 <Mat_VarGetStructFieldByName@plt>:
    16e4:	add	ip, pc, #0, 12
    16e8:	add	ip, ip, #401408	; 0x62000
    16ec:	ldr	pc, [ip, #2548]!	; 0x9f4

000016f0 <Mat_SizeOfClass@plt>:
    16f0:	add	ip, pc, #0, 12
    16f4:	add	ip, ip, #401408	; 0x62000
    16f8:	ldr	pc, [ip, #2540]!	; 0x9ec

000016fc <Mat_VarGetStructFieldByIndex@plt>:
    16fc:	add	ip, pc, #0, 12
    1700:	add	ip, ip, #401408	; 0x62000
    1704:	ldr	pc, [ip, #2532]!	; 0x9e4

00001708 <Mat_VarGetSize@plt>:
    1708:	add	ip, pc, #0, 12
    170c:	add	ip, ip, #401408	; 0x62000
    1710:	ldr	pc, [ip, #2524]!	; 0x9dc

00001714 <fseek@plt>:
    1714:	add	ip, pc, #0, 12
    1718:	add	ip, ip, #401408	; 0x62000
    171c:	ldr	pc, [ip, #2516]!	; 0x9d4

00001720 <abort@plt>:
    1720:	add	ip, pc, #0, 12
    1724:	add	ip, ip, #401408	; 0x62000
    1728:	ldr	pc, [ip, #2508]!	; 0x9cc

0000172c <Mat_VarDuplicate@plt>:
    172c:	add	ip, pc, #0, 12
    1730:	add	ip, ip, #401408	; 0x62000
    1734:	ldr	pc, [ip, #2500]!	; 0x9c4

00001738 <Mat_VarReadNextInfo@plt>:
    1738:	add	ip, pc, #0, 12
    173c:	add	ip, ip, #401408	; 0x62000
    1740:	ldr	pc, [ip, #2492]!	; 0x9bc

Disassembly of section .text:

00001748 <call_weak_fn>:
    1748:	ldr	r3, [pc, #20]	; 1764 <call_weak_fn+0x1c>
    174c:	ldr	r2, [pc, #20]	; 1768 <call_weak_fn+0x20>
    1750:	add	r3, pc, r3
    1754:	ldr	r2, [r3, r2]
    1758:	cmp	r2, #0
    175c:	bxeq	lr
    1760:	b	15d0 <__gmon_start__@plt>
    1764:	.word	0x000628a8
    1768:	.word	0x0000010c

0000176c <deregister_tm_clones>:
    176c:	ldr	r3, [pc, #52]	; 17a8 <deregister_tm_clones+0x3c>
    1770:	ldr	r0, [pc, #52]	; 17ac <deregister_tm_clones+0x40>
    1774:	add	r3, pc, r3
    1778:	add	r0, pc, r0
    177c:	add	r3, r3, #3
    1780:	sub	r3, r3, r0
    1784:	cmp	r3, #6
    1788:	ldr	r3, [pc, #32]	; 17b0 <deregister_tm_clones+0x44>
    178c:	add	r3, pc, r3
    1790:	bxls	lr
    1794:	ldr	r2, [pc, #24]	; 17b4 <deregister_tm_clones+0x48>
    1798:	ldr	r3, [r3, r2]
    179c:	cmp	r3, #0
    17a0:	bxeq	lr
    17a4:	bx	r3
    17a8:	.word	0x00062a50
    17ac:	.word	0x00062a4c
    17b0:	.word	0x0006286c
    17b4:	.word	0x00000104

000017b8 <register_tm_clones>:
    17b8:	ldr	r1, [pc, #56]	; 17f8 <register_tm_clones+0x40>
    17bc:	ldr	r0, [pc, #56]	; 17fc <register_tm_clones+0x44>
    17c0:	add	r1, pc, r1
    17c4:	add	r0, pc, r0
    17c8:	sub	r1, r1, r0
    17cc:	ldr	r3, [pc, #44]	; 1800 <register_tm_clones+0x48>
    17d0:	asr	r1, r1, #2
    17d4:	add	r3, pc, r3
    17d8:	add	r1, r1, r1, lsr #31
    17dc:	asrs	r1, r1, #1
    17e0:	bxeq	lr
    17e4:	ldr	r2, [pc, #24]	; 1804 <register_tm_clones+0x4c>
    17e8:	ldr	r3, [r3, r2]
    17ec:	cmp	r3, #0
    17f0:	bxeq	lr
    17f4:	bx	r3
    17f8:	.word	0x00062a04
    17fc:	.word	0x00062a00
    1800:	.word	0x00062824
    1804:	.word	0x00000118

00001808 <__do_global_dtors_aux>:
    1808:	ldr	r3, [pc, #76]	; 185c <__do_global_dtors_aux+0x54>
    180c:	ldr	r2, [pc, #76]	; 1860 <__do_global_dtors_aux+0x58>
    1810:	add	r3, pc, r3
    1814:	add	r2, pc, r2
    1818:	ldrb	r3, [r3]
    181c:	cmp	r3, #0
    1820:	bxne	lr
    1824:	ldr	r3, [pc, #56]	; 1864 <__do_global_dtors_aux+0x5c>
    1828:	push	{r4, lr}
    182c:	ldr	r3, [r2, r3]
    1830:	cmp	r3, #0
    1834:	beq	1844 <__do_global_dtors_aux+0x3c>
    1838:	ldr	r3, [pc, #40]	; 1868 <__do_global_dtors_aux+0x60>
    183c:	ldr	r0, [pc, r3]
    1840:	bl	1498 <__cxa_finalize@plt>
    1844:	bl	176c <deregister_tm_clones>
    1848:	ldr	r3, [pc, #28]	; 186c <__do_global_dtors_aux+0x64>
    184c:	mov	r2, #1
    1850:	add	r3, pc, r3
    1854:	strb	r2, [r3]
    1858:	pop	{r4, pc}
    185c:	.word	0x000629b4
    1860:	.word	0x000627e4
    1864:	.word	0x00000100
    1868:	.word	0x000628d8
    186c:	.word	0x00062974

00001870 <frame_dummy>:
    1870:	ldr	r0, [pc, #56]	; 18b0 <frame_dummy+0x40>
    1874:	ldr	r3, [pc, #56]	; 18b4 <frame_dummy+0x44>
    1878:	add	r0, pc, r0
    187c:	ldr	r2, [r0]
    1880:	add	r3, pc, r3
    1884:	cmp	r2, #0
    1888:	bne	1890 <frame_dummy+0x20>
    188c:	b	17b8 <register_tm_clones>
    1890:	ldr	r2, [pc, #32]	; 18b8 <frame_dummy+0x48>
    1894:	ldr	r3, [r3, r2]
    1898:	cmp	r3, #0
    189c:	beq	188c <frame_dummy+0x1c>
    18a0:	push	{r4, lr}
    18a4:	blx	r3
    18a8:	pop	{r4, lr}
    18ac:	b	17b8 <register_tm_clones>
    18b0:	.word	0x00062684
    18b4:	.word	0x00062778
    18b8:	.word	0x00000114

000018bc <Mat_int64Swap>:
    18bc:	push	{lr}		; (str lr, [sp, #-4]!)
    18c0:	ldr	ip, [r0]
    18c4:	ldr	lr, [r0, #4]
    18c8:	asr	r3, lr, #24
    18cc:	eor	r2, r3, ip
    18d0:	sxtb	r2, r2
    18d4:	eor	r3, r3, r2
    18d8:	bic	lr, lr, #-16777216	; 0xff000000
    18dc:	orr	lr, lr, r3, lsl #24
    18e0:	eor	r3, r3, r2
    18e4:	uxtb	r3, r3
    18e8:	bic	ip, ip, #255	; 0xff
    18ec:	orr	r3, r3, ip
    18f0:	lsl	r2, lr, #8
    18f4:	asr	r2, r2, #24
    18f8:	sxth	ip, r3
    18fc:	eor	ip, r2, ip, asr #8
    1900:	eor	r2, r2, ip
    1904:	uxtb	r1, r2
    1908:	bic	lr, lr, #16711680	; 0xff0000
    190c:	orr	lr, lr, r1, lsl #16
    1910:	eor	ip, ip, r2
    1914:	uxtb	ip, ip
    1918:	bic	r3, r3, #65280	; 0xff00
    191c:	orr	ip, r3, ip, lsl #8
    1920:	sxth	r3, lr
    1924:	asr	r3, r3, #8
    1928:	lsl	r2, ip, #8
    192c:	eor	r2, r3, r2, asr #24
    1930:	eor	r3, r3, r2
    1934:	uxtb	r1, r3
    1938:	bic	lr, lr, #65280	; 0xff00
    193c:	orr	lr, lr, r1, lsl #8
    1940:	eor	r2, r2, r3
    1944:	uxtb	r3, r2
    1948:	bic	r2, ip, #16711680	; 0xff0000
    194c:	orr	r2, r2, r3, lsl #16
    1950:	sxtb	r3, lr
    1954:	eor	ip, r3, r2, asr #24
    1958:	eor	r3, r3, ip
    195c:	uxtb	r1, r3
    1960:	bic	lr, lr, #255	; 0xff
    1964:	orr	r1, r1, lr
    1968:	eor	ip, ip, r3
    196c:	bic	r3, r2, #-16777216	; 0xff000000
    1970:	orr	r3, r3, ip, lsl #24
    1974:	str	r3, [r0]
    1978:	str	r1, [r0, #4]
    197c:	mov	r0, r3
    1980:	pop	{pc}		; (ldr pc, [sp], #4)

00001984 <Mat_uint64Swap>:
    1984:	push	{lr}		; (str lr, [sp, #-4]!)
    1988:	ldr	r1, [r0]
    198c:	ldr	ip, [r0, #4]
    1990:	bic	lr, ip, #-16777216	; 0xff000000
    1994:	bic	r3, r1, #255	; 0xff
    1998:	orr	r3, r3, ip, lsr #24
    199c:	orr	r1, lr, r1, lsl #24
    19a0:	lsr	lr, lr, #16
    19a4:	eor	ip, lr, r3, lsr #8
    19a8:	uxtb	ip, ip
    19ac:	eor	lr, lr, ip
    19b0:	uxtb	r2, lr
    19b4:	bic	r1, r1, #16711680	; 0xff0000
    19b8:	orr	r1, r1, r2, lsl #16
    19bc:	eor	ip, ip, r2
    19c0:	bic	r3, r3, #65280	; 0xff00
    19c4:	orr	ip, r3, ip, lsl #8
    19c8:	lsr	r3, r1, #8
    19cc:	uxtb	r3, r3
    19d0:	eor	r2, r3, ip, lsr #16
    19d4:	uxtb	r2, r2
    19d8:	eor	r3, r3, r2
    19dc:	bic	r1, r1, #65280	; 0xff00
    19e0:	orr	r1, r1, r3, lsl #8
    19e4:	eor	r3, r3, r2
    19e8:	bic	r2, ip, #16711680	; 0xff0000
    19ec:	orr	r2, r2, r3, lsl #16
    19f0:	uxtb	r3, r1
    19f4:	eor	ip, r3, r2, lsr #24
    19f8:	eor	r3, r3, ip
    19fc:	bic	r1, r1, #255	; 0xff
    1a00:	orr	r1, r3, r1
    1a04:	eor	ip, ip, r3
    1a08:	bic	r3, r2, #-16777216	; 0xff000000
    1a0c:	orr	r3, r3, ip, lsl #24
    1a10:	str	r3, [r0]
    1a14:	str	r1, [r0, #4]
    1a18:	mov	r0, r3
    1a1c:	pop	{pc}		; (ldr pc, [sp], #4)

00001a20 <Mat_int32Swap>:
    1a20:	ldr	r3, [r0]
    1a24:	asr	r1, r3, #24
    1a28:	eor	r2, r1, r3
    1a2c:	sxtb	r2, r2
    1a30:	eor	r1, r1, r2
    1a34:	bic	r3, r3, #-16777216	; 0xff000000
    1a38:	orr	r3, r3, r1, lsl #24
    1a3c:	eor	r2, r2, r1
    1a40:	uxtb	r2, r2
    1a44:	bic	r3, r3, #255	; 0xff
    1a48:	orr	r3, r2, r3
    1a4c:	lsl	r1, r3, #8
    1a50:	asr	r1, r1, #24
    1a54:	sxth	r2, r3
    1a58:	eor	r2, r1, r2, asr #8
    1a5c:	eor	r1, r1, r2
    1a60:	uxtb	ip, r1
    1a64:	bic	r3, r3, #16711680	; 0xff0000
    1a68:	orr	r3, r3, ip, lsl #16
    1a6c:	eor	r2, r2, r1
    1a70:	uxtb	r2, r2
    1a74:	bic	r3, r3, #65280	; 0xff00
    1a78:	orr	r3, r3, r2, lsl #8
    1a7c:	str	r3, [r0]
    1a80:	mov	r0, r3
    1a84:	bx	lr

00001a88 <Mat_uint32Swap>:
    1a88:	ldr	r3, [r0]
    1a8c:	lsr	r1, r3, #24
    1a90:	eor	r2, r1, r3
    1a94:	uxtb	r2, r2
    1a98:	eor	r1, r1, r2
    1a9c:	bic	r3, r3, #-16777216	; 0xff000000
    1aa0:	orr	r3, r3, r1, lsl #24
    1aa4:	eor	r2, r2, r1
    1aa8:	bic	r3, r3, #255	; 0xff
    1aac:	orr	r3, r2, r3
    1ab0:	lsr	r2, r3, #16
    1ab4:	uxtb	r2, r2
    1ab8:	eor	r1, r2, r3, lsr #8
    1abc:	uxtb	r1, r1
    1ac0:	eor	r2, r2, r1
    1ac4:	bic	r3, r3, #16711680	; 0xff0000
    1ac8:	orr	r3, r3, r2, lsl #16
    1acc:	eor	r2, r2, r1
    1ad0:	bic	r3, r3, #65280	; 0xff00
    1ad4:	orr	r3, r3, r2, lsl #8
    1ad8:	str	r3, [r0]
    1adc:	mov	r0, r3
    1ae0:	bx	lr

00001ae4 <Mat_int16Swap>:
    1ae4:	ldrh	r2, [r0]
    1ae8:	sxth	r3, r2
    1aec:	asr	r3, r3, #8
    1af0:	eor	r2, r2, r3
    1af4:	sxtb	r2, r2
    1af8:	eor	r3, r3, r2
    1afc:	uxtb	r1, r3
    1b00:	eor	r3, r3, r2
    1b04:	uxtb	r3, r3
    1b08:	orr	r3, r3, r1, lsl #8
    1b0c:	sxth	r3, r3
    1b10:	strh	r3, [r0]
    1b14:	mov	r0, r3
    1b18:	bx	lr

00001b1c <Mat_uint16Swap>:
    1b1c:	ldrh	r2, [r0]
    1b20:	lsr	r3, r2, #8
    1b24:	uxtb	r2, r2
    1b28:	orr	r3, r3, r2, lsl #8
    1b2c:	strh	r3, [r0]
    1b30:	mov	r0, r3
    1b34:	bx	lr

00001b38 <Mat_floatSwap>:
    1b38:	ldr	r3, [r0]
    1b3c:	lsr	r1, r3, #24
    1b40:	eor	r2, r1, r3
    1b44:	uxtb	r2, r2
    1b48:	eor	r1, r1, r2
    1b4c:	bic	r3, r3, #-16777216	; 0xff000000
    1b50:	orr	r3, r3, r1, lsl #24
    1b54:	eor	r2, r2, r1
    1b58:	bic	r3, r3, #255	; 0xff
    1b5c:	orr	r3, r2, r3
    1b60:	lsr	r2, r3, #16
    1b64:	uxtb	r2, r2
    1b68:	eor	r1, r2, r3, lsr #8
    1b6c:	uxtb	r1, r1
    1b70:	eor	r2, r2, r1
    1b74:	bic	r3, r3, #16711680	; 0xff0000
    1b78:	orr	r3, r3, r2, lsl #16
    1b7c:	eor	r2, r2, r1
    1b80:	bic	r3, r3, #65280	; 0xff00
    1b84:	orr	r3, r3, r2, lsl #8
    1b88:	vmov	s0, r3
    1b8c:	str	r3, [r0]
    1b90:	bx	lr

00001b94 <Mat_doubleSwap>:
    1b94:	push	{lr}		; (str lr, [sp, #-4]!)
    1b98:	ldrd	r2, [r0]
    1b9c:	lsr	ip, r3, #24
    1ba0:	eor	r1, ip, r2
    1ba4:	uxtb	r1, r1
    1ba8:	eor	ip, ip, r1
    1bac:	bic	lr, r3, #-16777216	; 0xff000000
    1bb0:	orr	r3, lr, ip, lsl #24
    1bb4:	eor	r1, r1, ip
    1bb8:	bic	ip, r2, #255	; 0xff
    1bbc:	orr	r2, r1, ip
    1bc0:	lsr	r1, r3, #16
    1bc4:	uxtb	r1, r1
    1bc8:	eor	ip, r1, r2, lsr #8
    1bcc:	uxtb	ip, ip
    1bd0:	eor	r1, r1, ip
    1bd4:	bic	lr, r3, #16711680	; 0xff0000
    1bd8:	orr	r3, lr, r1, lsl #16
    1bdc:	eor	r1, r1, ip
    1be0:	bic	ip, r2, #65280	; 0xff00
    1be4:	orr	r2, ip, r1, lsl #8
    1be8:	lsr	r1, r3, #8
    1bec:	uxtb	r1, r1
    1bf0:	eor	ip, r1, r2, lsr #16
    1bf4:	uxtb	ip, ip
    1bf8:	eor	r1, r1, ip
    1bfc:	bic	lr, r3, #65280	; 0xff00
    1c00:	orr	r3, lr, r1, lsl #8
    1c04:	eor	r1, r1, ip
    1c08:	bic	ip, r2, #16711680	; 0xff0000
    1c0c:	orr	r2, ip, r1, lsl #16
    1c10:	uxtb	r1, r3
    1c14:	eor	ip, r1, r2, lsr #24
    1c18:	eor	r1, r1, ip
    1c1c:	bic	lr, r3, #255	; 0xff
    1c20:	orr	r3, r1, lr
    1c24:	eor	r1, r1, ip
    1c28:	bic	ip, r2, #-16777216	; 0xff000000
    1c2c:	orr	r2, ip, r1, lsl #24
    1c30:	vmov	d0, r2, r3
    1c34:	vstr	d0, [r0]
    1c38:	pop	{pc}		; (ldr pc, [sp], #4)

00001c3c <mat_logfunc>:
    1c3c:	push	{r4, lr}
    1c40:	ldr	ip, [pc, #500]	; 1e3c <mat_logfunc+0x200>
    1c44:	add	ip, pc, ip
    1c48:	ldr	lr, [pc, #496]	; 1e40 <mat_logfunc+0x204>
    1c4c:	add	lr, pc, lr
    1c50:	ldr	r2, [lr]
    1c54:	cmp	r2, #0
    1c58:	beq	1d4c <mat_logfunc+0x110>
    1c5c:	tst	r0, #2
    1c60:	bne	1cac <mat_logfunc+0x70>
    1c64:	tst	r0, #1
    1c68:	bne	1cd4 <mat_logfunc+0x98>
    1c6c:	tst	r0, #4
    1c70:	bne	1cfc <mat_logfunc+0xc0>
    1c74:	tst	r0, #16
    1c78:	bne	1d24 <mat_logfunc+0xe8>
    1c7c:	tst	r0, #8
    1c80:	popeq	{r4, pc}
    1c84:	ldr	r3, [pc, #440]	; 1e44 <mat_logfunc+0x208>
    1c88:	ldr	r4, [ip, r3]
    1c8c:	mov	r2, r1
    1c90:	ldr	r1, [pc, #432]	; 1e48 <mat_logfunc+0x20c>
    1c94:	add	r1, pc, r1
    1c98:	ldr	r0, [r4]
    1c9c:	bl	163c <fprintf@plt>
    1ca0:	ldr	r0, [r4]
    1ca4:	bl	14d4 <fflush@plt>
    1ca8:	pop	{r4, pc}
    1cac:	ldr	r3, [pc, #408]	; 1e4c <mat_logfunc+0x210>
    1cb0:	ldr	r4, [ip, r3]
    1cb4:	mov	r3, r1
    1cb8:	ldr	r1, [pc, #400]	; 1e50 <mat_logfunc+0x214>
    1cbc:	add	r1, pc, r1
    1cc0:	ldr	r0, [r4]
    1cc4:	bl	163c <fprintf@plt>
    1cc8:	ldr	r0, [r4]
    1ccc:	bl	14d4 <fflush@plt>
    1cd0:	pop	{r4, pc}
    1cd4:	ldr	r3, [pc, #368]	; 1e4c <mat_logfunc+0x210>
    1cd8:	ldr	r4, [ip, r3]
    1cdc:	mov	r3, r1
    1ce0:	ldr	r1, [pc, #364]	; 1e54 <mat_logfunc+0x218>
    1ce4:	add	r1, pc, r1
    1ce8:	ldr	r0, [r4]
    1cec:	bl	163c <fprintf@plt>
    1cf0:	ldr	r0, [r4]
    1cf4:	bl	14d4 <fflush@plt>
    1cf8:	bl	1720 <abort@plt>
    1cfc:	ldr	r3, [pc, #328]	; 1e4c <mat_logfunc+0x210>
    1d00:	ldr	r4, [ip, r3]
    1d04:	mov	r3, r1
    1d08:	ldr	r1, [pc, #328]	; 1e58 <mat_logfunc+0x21c>
    1d0c:	add	r1, pc, r1
    1d10:	ldr	r0, [r4]
    1d14:	bl	163c <fprintf@plt>
    1d18:	ldr	r0, [r4]
    1d1c:	bl	14d4 <fflush@plt>
    1d20:	pop	{r4, pc}
    1d24:	ldr	r3, [pc, #288]	; 1e4c <mat_logfunc+0x210>
    1d28:	ldr	r4, [ip, r3]
    1d2c:	mov	r3, r1
    1d30:	ldr	r1, [pc, #292]	; 1e5c <mat_logfunc+0x220>
    1d34:	add	r1, pc, r1
    1d38:	ldr	r0, [r4]
    1d3c:	bl	163c <fprintf@plt>
    1d40:	ldr	r0, [r4]
    1d44:	bl	14d4 <fflush@plt>
    1d48:	pop	{r4, pc}
    1d4c:	tst	r0, #2
    1d50:	bne	1d9c <mat_logfunc+0x160>
    1d54:	tst	r0, #1
    1d58:	bne	1dc4 <mat_logfunc+0x188>
    1d5c:	tst	r0, #4
    1d60:	bne	1dec <mat_logfunc+0x1b0>
    1d64:	tst	r0, #16
    1d68:	bne	1e14 <mat_logfunc+0x1d8>
    1d6c:	tst	r0, #8
    1d70:	popeq	{r4, pc}
    1d74:	ldr	r3, [pc, #200]	; 1e44 <mat_logfunc+0x208>
    1d78:	ldr	r4, [ip, r3]
    1d7c:	mov	r2, r1
    1d80:	ldr	r1, [pc, #216]	; 1e60 <mat_logfunc+0x224>
    1d84:	add	r1, pc, r1
    1d88:	ldr	r0, [r4]
    1d8c:	bl	163c <fprintf@plt>
    1d90:	ldr	r0, [r4]
    1d94:	bl	14d4 <fflush@plt>
    1d98:	pop	{r4, pc}
    1d9c:	ldr	r3, [pc, #168]	; 1e4c <mat_logfunc+0x210>
    1da0:	ldr	r4, [ip, r3]
    1da4:	mov	r2, r1
    1da8:	ldr	r1, [pc, #180]	; 1e64 <mat_logfunc+0x228>
    1dac:	add	r1, pc, r1
    1db0:	ldr	r0, [r4]
    1db4:	bl	163c <fprintf@plt>
    1db8:	ldr	r0, [r4]
    1dbc:	bl	14d4 <fflush@plt>
    1dc0:	pop	{r4, pc}
    1dc4:	ldr	r3, [pc, #128]	; 1e4c <mat_logfunc+0x210>
    1dc8:	ldr	r4, [ip, r3]
    1dcc:	mov	r2, r1
    1dd0:	ldr	r1, [pc, #144]	; 1e68 <mat_logfunc+0x22c>
    1dd4:	add	r1, pc, r1
    1dd8:	ldr	r0, [r4]
    1ddc:	bl	163c <fprintf@plt>
    1de0:	ldr	r0, [r4]
    1de4:	bl	14d4 <fflush@plt>
    1de8:	bl	1720 <abort@plt>
    1dec:	ldr	r3, [pc, #88]	; 1e4c <mat_logfunc+0x210>
    1df0:	ldr	r4, [ip, r3]
    1df4:	mov	r2, r1
    1df8:	ldr	r1, [pc, #108]	; 1e6c <mat_logfunc+0x230>
    1dfc:	add	r1, pc, r1
    1e00:	ldr	r0, [r4]
    1e04:	bl	163c <fprintf@plt>
    1e08:	ldr	r0, [r4]
    1e0c:	bl	14d4 <fflush@plt>
    1e10:	pop	{r4, pc}
    1e14:	ldr	r3, [pc, #48]	; 1e4c <mat_logfunc+0x210>
    1e18:	ldr	r4, [ip, r3]
    1e1c:	mov	r2, r1
    1e20:	ldr	r1, [pc, #72]	; 1e70 <mat_logfunc+0x234>
    1e24:	add	r1, pc, r1
    1e28:	ldr	r0, [r4]
    1e2c:	bl	163c <fprintf@plt>
    1e30:	ldr	r0, [r4]
    1e34:	bl	14d4 <fflush@plt>
    1e38:	pop	{r4, pc}
    1e3c:	.word	0x000623b4
    1e40:	.word	0x0006257c
    1e44:	.word	0x00000110
    1e48:	.word	0x00050d48
    1e4c:	.word	0x00000108
    1e50:	.word	0x0005024c
    1e54:	.word	0x00050224
    1e58:	.word	0x00050208
    1e5c:	.word	0x000501ec
    1e60:	.word	0x00050c58
    1e64:	.word	0x00050180
    1e68:	.word	0x00050158
    1e6c:	.word	0x0005013c
    1e70:	.word	0x00050120

00001e74 <strdup_vprintf>:
    1e74:	push	{r4, r5, r6, r7, lr}
    1e78:	sub	sp, sp, #12
    1e7c:	mov	r6, r0
    1e80:	mov	r4, r1
    1e84:	str	r1, [sp, #4]
    1e88:	mov	r3, r1
    1e8c:	mov	r2, r0
    1e90:	mov	r1, #0
    1e94:	mov	r0, r1
    1e98:	bl	16d8 <vsnprintf@plt>
    1e9c:	add	r7, r0, #1
    1ea0:	add	r0, r0, #2
    1ea4:	bl	15ac <malloc@plt>
    1ea8:	subs	r5, r0, #0
    1eac:	beq	1ec4 <strdup_vprintf+0x50>
    1eb0:	mov	r3, r4
    1eb4:	mov	r2, r6
    1eb8:	mov	r1, r7
    1ebc:	mov	r0, r5
    1ec0:	bl	16d8 <vsnprintf@plt>
    1ec4:	mov	r0, r5
    1ec8:	add	sp, sp, #12
    1ecc:	pop	{r4, r5, r6, r7, pc}

00001ed0 <mat_log>:
    1ed0:	ldr	r3, [pc, #76]	; 1f24 <mat_log+0x54>
    1ed4:	add	r3, pc, r3
    1ed8:	ldr	r3, [r3, #4]
    1edc:	cmp	r3, #0
    1ee0:	bxeq	lr
    1ee4:	push	{r4, r5, r6, lr}
    1ee8:	mov	r3, r1
    1eec:	mov	r4, r0
    1ef0:	mov	r1, r2
    1ef4:	mov	r0, r3
    1ef8:	bl	1e74 <strdup_vprintf>
    1efc:	mov	r5, r0
    1f00:	ldr	r3, [pc, #32]	; 1f28 <mat_log+0x58>
    1f04:	add	r3, pc, r3
    1f08:	ldr	r3, [r3, #4]
    1f0c:	mov	r1, r0
    1f10:	mov	r0, r4
    1f14:	blx	r3
    1f18:	mov	r0, r5
    1f1c:	bl	14e0 <free@plt>
    1f20:	pop	{r4, r5, r6, pc}
    1f24:	.word	0x000622f4
    1f28:	.word	0x000622c4

00001f2c <strdup_printf>:
    1f2c:	push	{r0, r1, r2, r3}
    1f30:	push	{lr}		; (str lr, [sp, #-4]!)
    1f34:	sub	sp, sp, #12
    1f38:	add	r1, sp, #20
    1f3c:	str	r1, [sp, #4]
    1f40:	ldr	r0, [sp, #16]
    1f44:	bl	1e74 <strdup_vprintf>
    1f48:	add	sp, sp, #12
    1f4c:	pop	{lr}		; (ldr lr, [sp], #4)
    1f50:	add	sp, sp, #16
    1f54:	bx	lr

00001f58 <Mat_SetVerbose>:
    1f58:	ldr	r3, [pc, #16]	; 1f70 <Mat_SetVerbose+0x18>
    1f5c:	add	r3, pc, r3
    1f60:	str	r0, [r3, #8]
    1f64:	str	r1, [r3, #12]
    1f68:	mov	r0, #0
    1f6c:	bx	lr
    1f70:	.word	0x0006226c

00001f74 <Mat_SetDebug>:
    1f74:	ldr	r3, [pc, #12]	; 1f88 <Mat_SetDebug+0x14>
    1f78:	add	r3, pc, r3
    1f7c:	str	r0, [r3, #16]
    1f80:	mov	r0, #0
    1f84:	bx	lr
    1f88:	.word	0x00062250

00001f8c <Mat_Message>:
    1f8c:	push	{r0, r1, r2, r3}
    1f90:	push	{lr}		; (str lr, [sp, #-4]!)
    1f94:	sub	sp, sp, #12
    1f98:	ldr	r3, [pc, #72]	; 1fe8 <Mat_Message+0x5c>
    1f9c:	add	r3, pc, r3
    1fa0:	ldr	r3, [r3, #12]
    1fa4:	cmp	r3, #0
    1fa8:	bne	1fd4 <Mat_Message+0x48>
    1fac:	ldr	r3, [pc, #56]	; 1fec <Mat_Message+0x60>
    1fb0:	add	r3, pc, r3
    1fb4:	ldr	r3, [r3, #4]
    1fb8:	cmp	r3, #0
    1fbc:	beq	1fd4 <Mat_Message+0x48>
    1fc0:	add	r2, sp, #20
    1fc4:	str	r2, [sp, #4]
    1fc8:	ldr	r1, [sp, #16]
    1fcc:	mov	r0, #8
    1fd0:	bl	1ed0 <mat_log>
    1fd4:	mov	r0, #0
    1fd8:	add	sp, sp, #12
    1fdc:	pop	{lr}		; (ldr lr, [sp], #4)
    1fe0:	add	sp, sp, #16
    1fe4:	bx	lr
    1fe8:	.word	0x0006222c
    1fec:	.word	0x00062218

00001ff0 <Mat_DebugMessage>:
    1ff0:	push	{r1, r2, r3}
    1ff4:	push	{lr}		; (str lr, [sp, #-4]!)
    1ff8:	sub	sp, sp, #8
    1ffc:	ldr	r3, [pc, #76]	; 2050 <Mat_DebugMessage+0x60>
    2000:	add	r3, pc, r3
    2004:	ldr	r3, [r3, #12]
    2008:	cmp	r3, #0
    200c:	bne	2024 <Mat_DebugMessage+0x34>
    2010:	ldr	r3, [pc, #60]	; 2054 <Mat_DebugMessage+0x64>
    2014:	add	r3, pc, r3
    2018:	ldr	r3, [r3, #16]
    201c:	cmp	r3, r0
    2020:	bge	2038 <Mat_DebugMessage+0x48>
    2024:	mov	r0, #0
    2028:	add	sp, sp, #8
    202c:	pop	{lr}		; (ldr lr, [sp], #4)
    2030:	add	sp, sp, #12
    2034:	bx	lr
    2038:	add	r2, sp, #16
    203c:	str	r2, [sp, #4]
    2040:	ldr	r1, [sp, #12]
    2044:	mov	r0, #16
    2048:	bl	1ed0 <mat_log>
    204c:	b	2024 <Mat_DebugMessage+0x34>
    2050:	.word	0x000621c8
    2054:	.word	0x000621b4

00002058 <Mat_VerbMessage>:
    2058:	push	{r1, r2, r3}
    205c:	push	{lr}		; (str lr, [sp, #-4]!)
    2060:	sub	sp, sp, #8
    2064:	ldr	r3, [pc, #76]	; 20b8 <Mat_VerbMessage+0x60>
    2068:	add	r3, pc, r3
    206c:	ldr	r3, [r3, #12]
    2070:	cmp	r3, #0
    2074:	bne	208c <Mat_VerbMessage+0x34>
    2078:	ldr	r3, [pc, #60]	; 20bc <Mat_VerbMessage+0x64>
    207c:	add	r3, pc, r3
    2080:	ldr	r3, [r3, #8]
    2084:	cmp	r3, r0
    2088:	bge	20a0 <Mat_VerbMessage+0x48>
    208c:	mov	r0, #0
    2090:	add	sp, sp, #8
    2094:	pop	{lr}		; (ldr lr, [sp], #4)
    2098:	add	sp, sp, #12
    209c:	bx	lr
    20a0:	add	r2, sp, #16
    20a4:	str	r2, [sp, #4]
    20a8:	ldr	r1, [sp, #12]
    20ac:	mov	r0, #8
    20b0:	bl	1ed0 <mat_log>
    20b4:	b	208c <Mat_VerbMessage+0x34>
    20b8:	.word	0x00062160
    20bc:	.word	0x0006214c

000020c0 <Mat_Critical>:
    20c0:	push	{r0, r1, r2, r3}
    20c4:	push	{lr}		; (str lr, [sp, #-4]!)
    20c8:	sub	sp, sp, #12
    20cc:	add	r2, sp, #20
    20d0:	str	r2, [sp, #4]
    20d4:	ldr	r1, [sp, #16]
    20d8:	mov	r0, #2
    20dc:	bl	1ed0 <mat_log>
    20e0:	add	sp, sp, #12
    20e4:	pop	{lr}		; (ldr lr, [sp], #4)
    20e8:	add	sp, sp, #16
    20ec:	bx	lr

000020f0 <Mat_Error>:
    20f0:	push	{r0, r1, r2, r3}
    20f4:	push	{lr}		; (str lr, [sp, #-4]!)
    20f8:	sub	sp, sp, #12
    20fc:	add	r2, sp, #20
    2100:	str	r2, [sp, #4]
    2104:	ldr	r1, [sp, #16]
    2108:	mov	r0, #1
    210c:	bl	1ed0 <mat_log>
    2110:	bl	1720 <abort@plt>

00002114 <Mat_Help>:
    2114:	push	{r4, lr}
    2118:	mov	r4, r0
    211c:	ldr	r0, [r0]
    2120:	cmp	r0, #0
    2124:	beq	2138 <Mat_Help+0x24>
    2128:	bl	15a0 <puts@plt>
    212c:	ldr	r0, [r4, #4]!
    2130:	cmp	r0, #0
    2134:	bne	2128 <Mat_Help+0x14>
    2138:	mov	r0, #0
    213c:	bl	15dc <exit@plt>

00002140 <Mat_LogClose>:
    2140:	mov	r2, #0
    2144:	ldr	r3, [pc, #12]	; 2158 <Mat_LogClose+0x18>
    2148:	add	r3, pc, r3
    214c:	str	r2, [r3, #4]
    2150:	mov	r0, #1
    2154:	bx	lr
    2158:	.word	0x00062080

0000215c <Mat_LogInit>:
    215c:	ldr	r3, [pc, #28]	; 2180 <Mat_LogInit+0x24>
    2160:	add	r3, pc, r3
    2164:	ldr	r2, [pc, #24]	; 2184 <Mat_LogInit+0x28>
    2168:	add	r2, pc, r2
    216c:	str	r2, [r3, #4]
    2170:	mov	r0, #0
    2174:	str	r0, [r3, #8]
    2178:	str	r0, [r3, #12]
    217c:	bx	lr
    2180:	.word	0x00062068
    2184:	.word	0xfffffacc

00002188 <Mat_LogInitFunc>:
    2188:	ldr	r3, [pc, #24]	; 21a8 <Mat_LogInitFunc+0x20>
    218c:	add	r3, pc, r3
    2190:	str	r1, [r3, #4]
    2194:	str	r0, [r3]
    2198:	mov	r0, #0
    219c:	str	r0, [r3, #8]
    21a0:	str	r0, [r3, #12]
    21a4:	bx	lr
    21a8:	.word	0x0006203c

000021ac <Mat_Warning>:
    21ac:	push	{r0, r1, r2, r3}
    21b0:	push	{lr}		; (str lr, [sp, #-4]!)
    21b4:	sub	sp, sp, #12
    21b8:	add	r2, sp, #20
    21bc:	str	r2, [sp, #4]
    21c0:	ldr	r1, [sp, #16]
    21c4:	mov	r0, #4
    21c8:	bl	1ed0 <mat_log>
    21cc:	add	sp, sp, #12
    21d0:	pop	{lr}		; (ldr lr, [sp], #4)
    21d4:	add	sp, sp, #16
    21d8:	bx	lr

000021dc <Mat_SizeOf>:
    21dc:	sub	r0, r0, #1
    21e0:	cmp	r0, #17
    21e4:	addls	pc, pc, r0, lsl #2
    21e8:	b	226c <Mat_SizeOf+0x90>
    21ec:	b	224c <Mat_SizeOf+0x70>
    21f0:	b	2254 <Mat_SizeOf+0x78>
    21f4:	b	223c <Mat_SizeOf+0x60>
    21f8:	b	2244 <Mat_SizeOf+0x68>
    21fc:	b	2234 <Mat_SizeOf+0x58>
    2200:	b	2234 <Mat_SizeOf+0x58>
    2204:	b	2234 <Mat_SizeOf+0x58>
    2208:	b	226c <Mat_SizeOf+0x90>
    220c:	b	2274 <Mat_SizeOf+0x98>
    2210:	b	226c <Mat_SizeOf+0x90>
    2214:	b	226c <Mat_SizeOf+0x90>
    2218:	b	2274 <Mat_SizeOf+0x98>
    221c:	b	2274 <Mat_SizeOf+0x98>
    2220:	b	226c <Mat_SizeOf+0x90>
    2224:	b	226c <Mat_SizeOf+0x90>
    2228:	b	225c <Mat_SizeOf+0x80>
    222c:	b	2264 <Mat_SizeOf+0x88>
    2230:	b	2234 <Mat_SizeOf+0x58>
    2234:	mov	r0, #4
    2238:	bx	lr
    223c:	mov	r0, #2
    2240:	bx	lr
    2244:	mov	r0, #2
    2248:	bx	lr
    224c:	mov	r0, #1
    2250:	bx	lr
    2254:	mov	r0, #1
    2258:	bx	lr
    225c:	mov	r0, #1
    2260:	bx	lr
    2264:	mov	r0, #2
    2268:	bx	lr
    226c:	mov	r0, #0
    2270:	bx	lr
    2274:	mov	r0, #8
    2278:	bx	lr

0000227c <InflateSkip>:
    227c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2280:	sub	sp, sp, #1024	; 0x400
    2284:	sub	sp, sp, #4
    2288:	subs	r7, r2, #0
    228c:	movle	r8, #0
    2290:	ble	22fc <InflateSkip+0x80>
    2294:	mov	r4, r1
    2298:	mov	r9, r0
    229c:	cmp	r7, #512	; 0x200
    22a0:	movlt	r5, r7
    22a4:	movge	r5, #512	; 0x200
    22a8:	ldr	r3, [r1, #4]
    22ac:	cmp	r3, #0
    22b0:	movne	r8, #0
    22b4:	beq	230c <InflateSkip+0x90>
    22b8:	str	r5, [r4, #16]
    22bc:	str	sp, [r4, #12]
    22c0:	mov	r1, #3
    22c4:	mov	r0, r4
    22c8:	bl	14c8 <inflate@plt>
    22cc:	mov	r6, r0
    22d0:	cmp	r0, #1
    22d4:	beq	22fc <InflateSkip+0x80>
    22d8:	cmp	r0, #0
    22dc:	beq	2334 <InflateSkip+0xb8>
    22e0:	cmp	r0, #2
    22e4:	mvneq	r0, #2
    22e8:	bl	1558 <zError@plt>
    22ec:	mov	r1, r0
    22f0:	ldr	r0, [pc, #328]	; 2440 <InflateSkip+0x1c4>
    22f4:	add	r0, pc, r0
    22f8:	bl	1690 <Mat_Critical@plt>
    22fc:	mov	r0, r8
    2300:	add	sp, sp, #1024	; 0x400
    2304:	add	sp, sp, #4
    2308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    230c:	add	r0, sp, #512	; 0x200
    2310:	str	r0, [r1]
    2314:	ldr	r3, [r9]
    2318:	mov	r2, r5
    231c:	mov	r1, #1
    2320:	bl	1588 <fread@plt>
    2324:	ldr	r8, [r4, #4]
    2328:	add	r8, r0, r8
    232c:	str	r8, [r4, #4]
    2330:	b	22b8 <InflateSkip+0x3c>
    2334:	ldr	r3, [r4, #16]
    2338:	cmp	r3, #0
    233c:	bne	2364 <InflateSkip+0xe8>
    2340:	sub	r3, r7, r5
    2344:	cmp	r3, #512	; 0x200
    2348:	movge	r3, #512	; 0x200
    234c:	str	r3, [r4, #16]
    2350:	str	sp, [r4, #12]
    2354:	cmp	r7, r5
    2358:	ble	23b8 <InflateSkip+0x13c>
    235c:	mov	r6, r5
    2360:	mov	r5, r3
    2364:	add	sl, sp, #512	; 0x200
    2368:	mov	fp, sp
    236c:	b	23f0 <InflateSkip+0x174>
    2370:	str	sl, [r4]
    2374:	ldr	r3, [r9]
    2378:	mov	r2, r5
    237c:	mov	r1, #1
    2380:	mov	r0, sl
    2384:	bl	1588 <fread@plt>
    2388:	ldr	r3, [r4, #4]
    238c:	add	r0, r0, r3
    2390:	str	r0, [r4, #4]
    2394:	add	r8, r8, r0
    2398:	b	23fc <InflateSkip+0x180>
    239c:	cmp	r0, #2
    23a0:	mvneq	r0, #2
    23a4:	bl	1558 <zError@plt>
    23a8:	mov	r1, r0
    23ac:	ldr	r0, [pc, #144]	; 2444 <InflateSkip+0x1c8>
    23b0:	add	r0, pc, r0
    23b4:	bl	1690 <Mat_Critical@plt>
    23b8:	ldr	r1, [r4, #4]
    23bc:	cmp	r1, #0
    23c0:	beq	22fc <InflateSkip+0x80>
    23c4:	mov	r2, #1
    23c8:	rsb	r1, r1, #0
    23cc:	ldr	r0, [r9]
    23d0:	bl	1714 <fseek@plt>
    23d4:	ldr	r3, [r4, #4]
    23d8:	sub	r8, r8, r3
    23dc:	mov	r3, #0
    23e0:	str	r3, [r4, #4]
    23e4:	b	22fc <InflateSkip+0x80>
    23e8:	cmp	r6, r7
    23ec:	bge	23b8 <InflateSkip+0x13c>
    23f0:	ldr	r3, [r4, #4]
    23f4:	cmp	r3, #0
    23f8:	beq	2370 <InflateSkip+0xf4>
    23fc:	mov	r1, #3
    2400:	mov	r0, r4
    2404:	bl	14c8 <inflate@plt>
    2408:	cmp	r0, #1
    240c:	beq	23b8 <InflateSkip+0x13c>
    2410:	cmp	r0, #0
    2414:	bne	239c <InflateSkip+0x120>
    2418:	ldr	r3, [r4, #16]
    241c:	cmp	r3, #0
    2420:	bne	23e8 <InflateSkip+0x16c>
    2424:	add	r6, r6, r5
    2428:	sub	r5, r7, r6
    242c:	cmp	r5, #512	; 0x200
    2430:	movge	r5, #512	; 0x200
    2434:	str	r5, [r4, #16]
    2438:	str	fp, [r4, #12]
    243c:	b	23e8 <InflateSkip+0x16c>
    2440:	.word	0x0004fc5c
    2444:	.word	0x0004fba0

00002448 <InflateSkip2>:
    2448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    244c:	sub	sp, sp, #68	; 0x44
    2450:	mov	fp, r0
    2454:	mov	r4, r1
    2458:	mov	r7, r2
    245c:	ldr	r3, [r1, #52]	; 0x34
    2460:	ldr	r3, [r3, #12]
    2464:	ldr	r2, [r3, #4]
    2468:	cmp	r2, #0
    246c:	movne	r8, #0
    2470:	beq	24dc <InflateSkip2+0x94>
    2474:	ldr	r3, [r4, #52]	; 0x34
    2478:	ldr	r3, [r3, #12]
    247c:	mov	r2, #1
    2480:	str	r2, [r3, #16]
    2484:	ldr	r3, [r4, #52]	; 0x34
    2488:	ldr	r3, [r3, #12]
    248c:	str	sp, [r3, #12]
    2490:	ldr	r3, [r4, #52]	; 0x34
    2494:	mov	r1, #0
    2498:	ldr	r0, [r3, #12]
    249c:	bl	14c8 <inflate@plt>
    24a0:	subs	r5, r0, #0
    24a4:	beq	2508 <InflateSkip2+0xc0>
    24a8:	ldr	r4, [r4, #36]	; 0x24
    24ac:	cmp	r5, #2
    24b0:	movne	r0, r5
    24b4:	mvneq	r0, #2
    24b8:	bl	1558 <zError@plt>
    24bc:	mov	r2, r0
    24c0:	mov	r1, r4
    24c4:	ldr	r0, [pc, #360]	; 2634 <InflateSkip2+0x1ec>
    24c8:	add	r0, pc, r0
    24cc:	bl	1690 <Mat_Critical@plt>
    24d0:	mov	r0, r8
    24d4:	add	sp, sp, #68	; 0x44
    24d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    24dc:	mov	r1, #1
    24e0:	str	r1, [r3, #4]
    24e4:	ldr	r3, [r4, #52]	; 0x34
    24e8:	ldr	r3, [r3, #12]
    24ec:	add	r0, sp, #32
    24f0:	str	r0, [r3]
    24f4:	ldr	r3, [fp]
    24f8:	mov	r2, r1
    24fc:	bl	1588 <fread@plt>
    2500:	mov	r8, r0
    2504:	b	2474 <InflateSkip2+0x2c>
    2508:	ldr	r3, [r4, #52]	; 0x34
    250c:	ldr	r3, [r3, #12]
    2510:	ldr	r2, [r3, #16]
    2514:	cmp	r2, #0
    2518:	bne	2530 <InflateSkip2+0xe8>
    251c:	mov	r2, #1
    2520:	str	r2, [r3, #16]
    2524:	ldr	r3, [r4, #52]	; 0x34
    2528:	ldr	r3, [r3, #12]
    252c:	str	sp, [r3, #12]
    2530:	cmp	r7, #0
    2534:	ble	25f4 <InflateSkip2+0x1ac>
    2538:	mov	r6, #1
    253c:	add	r9, sp, #32
    2540:	mov	sl, sp
    2544:	b	2588 <InflateSkip2+0x140>
    2548:	ldr	r3, [r4, #52]	; 0x34
    254c:	mov	r1, #0
    2550:	ldr	r0, [r3, #12]
    2554:	bl	14c8 <inflate@plt>
    2558:	cmp	r0, #0
    255c:	bne	25cc <InflateSkip2+0x184>
    2560:	ldr	r3, [r4, #52]	; 0x34
    2564:	ldr	r3, [r3, #12]
    2568:	ldr	r2, [r3, #16]
    256c:	cmp	r2, #0
    2570:	streq	r6, [r3, #16]
    2574:	ldreq	r3, [r4, #52]	; 0x34
    2578:	ldreq	r3, [r3, #12]
    257c:	streq	sl, [r3, #12]
    2580:	cmp	r5, r7
    2584:	bge	25f4 <InflateSkip2+0x1ac>
    2588:	ldr	r3, [r4, #52]	; 0x34
    258c:	ldr	r3, [r3, #12]
    2590:	ldr	r2, [r3, #4]
    2594:	cmp	r2, #0
    2598:	bne	2548 <InflateSkip2+0x100>
    259c:	str	r6, [r3, #4]
    25a0:	ldr	r3, [r4, #52]	; 0x34
    25a4:	ldr	r3, [r3, #12]
    25a8:	str	r9, [r3]
    25ac:	ldr	r3, [fp]
    25b0:	mov	r2, r6
    25b4:	mov	r1, r6
    25b8:	mov	r0, r9
    25bc:	bl	1588 <fread@plt>
    25c0:	add	r8, r8, r0
    25c4:	add	r5, r5, #1
    25c8:	b	2548 <InflateSkip2+0x100>
    25cc:	ldr	r4, [r4, #36]	; 0x24
    25d0:	cmp	r0, #2
    25d4:	mvneq	r0, #2
    25d8:	bl	1558 <zError@plt>
    25dc:	mov	r2, r0
    25e0:	mov	r1, r4
    25e4:	ldr	r0, [pc, #76]	; 2638 <InflateSkip2+0x1f0>
    25e8:	add	r0, pc, r0
    25ec:	bl	1690 <Mat_Critical@plt>
    25f0:	b	24d0 <InflateSkip2+0x88>
    25f4:	ldr	r3, [r4, #52]	; 0x34
    25f8:	ldr	r3, [r3, #12]
    25fc:	ldr	r1, [r3, #4]
    2600:	cmp	r1, #0
    2604:	beq	24d0 <InflateSkip2+0x88>
    2608:	mov	r2, #1
    260c:	rsb	r1, r1, #0
    2610:	ldr	r0, [fp]
    2614:	bl	1714 <fseek@plt>
    2618:	ldr	r3, [r4, #52]	; 0x34
    261c:	ldr	r3, [r3, #12]
    2620:	ldr	r2, [r3, #4]
    2624:	sub	r8, r8, r2
    2628:	mov	r2, #0
    262c:	str	r2, [r3, #4]
    2630:	b	24d0 <InflateSkip2+0x88>
    2634:	.word	0x0004faac
    2638:	.word	0x0004f98c

0000263c <InflateSkipData>:
    263c:	push	{r4, r5, r6, lr}
    2640:	mov	r4, r3
    2644:	cmp	r1, #0
    2648:	cmpne	r3, #0
    264c:	movle	r3, #1
    2650:	movgt	r3, #0
    2654:	cmp	r0, #0
    2658:	orreq	r3, r3, #1
    265c:	cmp	r3, #0
    2660:	bne	26f4 <InflateSkipData+0xb8>
    2664:	mov	r5, r1
    2668:	mov	lr, r0
    266c:	sub	r2, r2, #1
    2670:	cmp	r2, #12
    2674:	addls	pc, pc, r2, lsl #2
    2678:	b	26fc <InflateSkipData+0xc0>
    267c:	b	26e4 <InflateSkipData+0xa8>
    2680:	b	26dc <InflateSkipData+0xa0>
    2684:	b	26cc <InflateSkipData+0x90>
    2688:	b	26d4 <InflateSkipData+0x98>
    268c:	b	26b0 <InflateSkipData+0x74>
    2690:	b	26b0 <InflateSkipData+0x74>
    2694:	b	26b0 <InflateSkipData+0x74>
    2698:	b	26fc <InflateSkipData+0xc0>
    269c:	b	26ec <InflateSkipData+0xb0>
    26a0:	b	26fc <InflateSkipData+0xc0>
    26a4:	b	26fc <InflateSkipData+0xc0>
    26a8:	b	26ec <InflateSkipData+0xb0>
    26ac:	b	26ec <InflateSkipData+0xb0>
    26b0:	mov	r2, #4
    26b4:	mov	r0, lr
    26b8:	mov	r1, r5
    26bc:	mul	r2, r4, r2
    26c0:	bl	227c <InflateSkip>
    26c4:	mov	r0, r4
    26c8:	pop	{r4, r5, r6, pc}
    26cc:	mov	r2, #2
    26d0:	b	26b4 <InflateSkipData+0x78>
    26d4:	mov	r2, #2
    26d8:	b	26b4 <InflateSkipData+0x78>
    26dc:	mov	r2, #1
    26e0:	b	26b4 <InflateSkipData+0x78>
    26e4:	mov	r2, #1
    26e8:	b	26b4 <InflateSkipData+0x78>
    26ec:	mov	r2, #8
    26f0:	b	26b4 <InflateSkipData+0x78>
    26f4:	mov	r0, #0
    26f8:	pop	{r4, r5, r6, pc}
    26fc:	mov	r0, #0
    2700:	pop	{r4, r5, r6, pc}

00002704 <InflateVarTag>:
    2704:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2708:	sub	sp, sp, #32
    270c:	subs	r5, r2, #0
    2710:	beq	288c <InflateVarTag+0x188>
    2714:	mov	r4, r1
    2718:	mov	r9, r0
    271c:	ldr	r3, [r1, #52]	; 0x34
    2720:	ldr	r3, [r3, #12]
    2724:	ldr	r2, [r3, #4]
    2728:	cmp	r2, #0
    272c:	movne	r7, #0
    2730:	beq	2790 <InflateVarTag+0x8c>
    2734:	ldr	r3, [r4, #52]	; 0x34
    2738:	ldr	r3, [r3, #12]
    273c:	mov	r2, #8
    2740:	str	r2, [r3, #16]
    2744:	ldr	r3, [r4, #52]	; 0x34
    2748:	ldr	r3, [r3, #12]
    274c:	str	r5, [r3, #12]
    2750:	ldr	r3, [r4, #52]	; 0x34
    2754:	mov	r1, #0
    2758:	ldr	r0, [r3, #12]
    275c:	bl	14c8 <inflate@plt>
    2760:	cmp	r0, #0
    2764:	beq	27bc <InflateVarTag+0xb8>
    2768:	cmp	r0, #2
    276c:	mvneq	r0, #2
    2770:	bl	1558 <zError@plt>
    2774:	mov	r1, r0
    2778:	ldr	r0, [pc, #276]	; 2894 <InflateVarTag+0x190>
    277c:	add	r0, pc, r0
    2780:	bl	1690 <Mat_Critical@plt>
    2784:	mov	r0, r7
    2788:	add	sp, sp, #32
    278c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2790:	mov	r1, #1
    2794:	str	r1, [r3, #4]
    2798:	ldr	r3, [r4, #52]	; 0x34
    279c:	ldr	r3, [r3, #12]
    27a0:	mov	r0, sp
    27a4:	str	sp, [r3]
    27a8:	ldr	r3, [r9]
    27ac:	mov	r2, r1
    27b0:	bl	1588 <fread@plt>
    27b4:	mov	r7, r0
    27b8:	b	2734 <InflateVarTag+0x30>
    27bc:	mov	r5, #1
    27c0:	mov	r6, r5
    27c4:	mov	r8, sp
    27c8:	mov	sl, #0
    27cc:	ldr	r3, [r4, #52]	; 0x34
    27d0:	ldr	r3, [r3, #12]
    27d4:	ldr	r2, [r3, #16]
    27d8:	cmp	r2, #0
    27dc:	beq	2854 <InflateVarTag+0x150>
    27e0:	ldr	r2, [r3, #4]
    27e4:	cmp	r2, #0
    27e8:	cmpeq	r5, #1
    27ec:	bne	2854 <InflateVarTag+0x150>
    27f0:	str	r6, [r3, #4]
    27f4:	ldr	r3, [r4, #52]	; 0x34
    27f8:	ldr	r3, [r3, #12]
    27fc:	str	r8, [r3]
    2800:	ldr	r3, [r9]
    2804:	mov	r2, r6
    2808:	mov	r1, r6
    280c:	mov	r0, r8
    2810:	bl	1588 <fread@plt>
    2814:	mov	r5, r0
    2818:	add	r7, r7, r0
    281c:	ldr	r3, [r4, #52]	; 0x34
    2820:	mov	r1, sl
    2824:	ldr	r0, [r3, #12]
    2828:	bl	14c8 <inflate@plt>
    282c:	cmp	r0, #0
    2830:	beq	27cc <InflateVarTag+0xc8>
    2834:	cmp	r0, #2
    2838:	mvneq	r0, #2
    283c:	bl	1558 <zError@plt>
    2840:	mov	r1, r0
    2844:	ldr	r0, [pc, #76]	; 2898 <InflateVarTag+0x194>
    2848:	add	r0, pc, r0
    284c:	bl	1690 <Mat_Critical@plt>
    2850:	b	2784 <InflateVarTag+0x80>
    2854:	ldr	r1, [r3, #4]
    2858:	cmp	r1, #0
    285c:	beq	2784 <InflateVarTag+0x80>
    2860:	mov	r2, #1
    2864:	rsb	r1, r1, #0
    2868:	ldr	r0, [r9]
    286c:	bl	1714 <fseek@plt>
    2870:	ldr	r3, [r4, #52]	; 0x34
    2874:	ldr	r3, [r3, #12]
    2878:	ldr	r2, [r3, #4]
    287c:	sub	r7, r7, r2
    2880:	mov	r2, #0
    2884:	str	r2, [r3, #4]
    2888:	b	2784 <InflateVarTag+0x80>
    288c:	mov	r7, #0
    2890:	b	2784 <InflateVarTag+0x80>
    2894:	.word	0x0004f820
    2898:	.word	0x0004f754

0000289c <InflateArrayFlags>:
    289c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    28a0:	sub	sp, sp, #32
    28a4:	subs	r5, r2, #0
    28a8:	beq	2a24 <InflateArrayFlags+0x188>
    28ac:	mov	r4, r1
    28b0:	mov	r9, r0
    28b4:	ldr	r3, [r1, #52]	; 0x34
    28b8:	ldr	r3, [r3, #12]
    28bc:	ldr	r2, [r3, #4]
    28c0:	cmp	r2, #0
    28c4:	movne	r7, #0
    28c8:	beq	2928 <InflateArrayFlags+0x8c>
    28cc:	ldr	r3, [r4, #52]	; 0x34
    28d0:	ldr	r3, [r3, #12]
    28d4:	mov	r2, #16
    28d8:	str	r2, [r3, #16]
    28dc:	ldr	r3, [r4, #52]	; 0x34
    28e0:	ldr	r3, [r3, #12]
    28e4:	str	r5, [r3, #12]
    28e8:	ldr	r3, [r4, #52]	; 0x34
    28ec:	mov	r1, #0
    28f0:	ldr	r0, [r3, #12]
    28f4:	bl	14c8 <inflate@plt>
    28f8:	cmp	r0, #0
    28fc:	beq	2954 <InflateArrayFlags+0xb8>
    2900:	cmp	r0, #2
    2904:	mvneq	r0, #2
    2908:	bl	1558 <zError@plt>
    290c:	mov	r1, r0
    2910:	ldr	r0, [pc, #276]	; 2a2c <InflateArrayFlags+0x190>
    2914:	add	r0, pc, r0
    2918:	bl	1690 <Mat_Critical@plt>
    291c:	mov	r0, r7
    2920:	add	sp, sp, #32
    2924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2928:	mov	r1, #1
    292c:	str	r1, [r3, #4]
    2930:	ldr	r3, [r4, #52]	; 0x34
    2934:	ldr	r3, [r3, #12]
    2938:	mov	r0, sp
    293c:	str	sp, [r3]
    2940:	ldr	r3, [r9]
    2944:	mov	r2, r1
    2948:	bl	1588 <fread@plt>
    294c:	mov	r7, r0
    2950:	b	28cc <InflateArrayFlags+0x30>
    2954:	mov	r5, #1
    2958:	mov	r6, r5
    295c:	mov	r8, sp
    2960:	mov	sl, #0
    2964:	ldr	r3, [r4, #52]	; 0x34
    2968:	ldr	r3, [r3, #12]
    296c:	ldr	r2, [r3, #16]
    2970:	cmp	r2, #0
    2974:	beq	29ec <InflateArrayFlags+0x150>
    2978:	ldr	r2, [r3, #4]
    297c:	cmp	r2, #0
    2980:	cmpeq	r5, #1
    2984:	bne	29ec <InflateArrayFlags+0x150>
    2988:	str	r6, [r3, #4]
    298c:	ldr	r3, [r4, #52]	; 0x34
    2990:	ldr	r3, [r3, #12]
    2994:	str	r8, [r3]
    2998:	ldr	r3, [r9]
    299c:	mov	r2, r6
    29a0:	mov	r1, r6
    29a4:	mov	r0, r8
    29a8:	bl	1588 <fread@plt>
    29ac:	mov	r5, r0
    29b0:	add	r7, r7, r0
    29b4:	ldr	r3, [r4, #52]	; 0x34
    29b8:	mov	r1, sl
    29bc:	ldr	r0, [r3, #12]
    29c0:	bl	14c8 <inflate@plt>
    29c4:	cmp	r0, #0
    29c8:	beq	2964 <InflateArrayFlags+0xc8>
    29cc:	cmp	r0, #2
    29d0:	mvneq	r0, #2
    29d4:	bl	1558 <zError@plt>
    29d8:	mov	r1, r0
    29dc:	ldr	r0, [pc, #76]	; 2a30 <InflateArrayFlags+0x194>
    29e0:	add	r0, pc, r0
    29e4:	bl	1690 <Mat_Critical@plt>
    29e8:	b	291c <InflateArrayFlags+0x80>
    29ec:	ldr	r1, [r3, #4]
    29f0:	cmp	r1, #0
    29f4:	beq	291c <InflateArrayFlags+0x80>
    29f8:	mov	r2, #1
    29fc:	rsb	r1, r1, #0
    2a00:	ldr	r0, [r9]
    2a04:	bl	1714 <fseek@plt>
    2a08:	ldr	r3, [r4, #52]	; 0x34
    2a0c:	ldr	r3, [r3, #12]
    2a10:	ldr	r2, [r3, #4]
    2a14:	sub	r7, r7, r2
    2a18:	mov	r2, #0
    2a1c:	str	r2, [r3, #4]
    2a20:	b	291c <InflateArrayFlags+0x80>
    2a24:	mov	r7, #0
    2a28:	b	291c <InflateArrayFlags+0x80>
    2a2c:	.word	0x0004f6ac
    2a30:	.word	0x0004f5e0

00002a34 <InflateRankDims>:
    2a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2a38:	sub	sp, sp, #52	; 0x34
    2a3c:	subs	sl, r2, #0
    2a40:	beq	2db0 <InflateRankDims+0x37c>
    2a44:	str	r3, [sp, #4]
    2a48:	mov	r4, r1
    2a4c:	mov	r9, r0
    2a50:	ldr	r3, [r1, #52]	; 0x34
    2a54:	ldr	r3, [r3, #12]
    2a58:	ldr	r2, [r3, #4]
    2a5c:	cmp	r2, #0
    2a60:	movne	r7, #0
    2a64:	beq	2ac8 <InflateRankDims+0x94>
    2a68:	ldr	r3, [r4, #52]	; 0x34
    2a6c:	ldr	r3, [r3, #12]
    2a70:	mov	r2, #8
    2a74:	str	r2, [r3, #16]
    2a78:	ldr	r3, [r4, #52]	; 0x34
    2a7c:	ldr	r3, [r3, #12]
    2a80:	str	sl, [r3, #12]
    2a84:	ldr	r3, [r4, #52]	; 0x34
    2a88:	mov	r1, #0
    2a8c:	ldr	r0, [r3, #12]
    2a90:	bl	14c8 <inflate@plt>
    2a94:	subs	fp, r0, #0
    2a98:	beq	2af4 <InflateRankDims+0xc0>
    2a9c:	cmp	fp, #2
    2aa0:	movne	r0, fp
    2aa4:	mvneq	r0, #2
    2aa8:	bl	1558 <zError@plt>
    2aac:	mov	r1, r0
    2ab0:	ldr	r0, [pc, #768]	; 2db8 <InflateRankDims+0x384>
    2ab4:	add	r0, pc, r0
    2ab8:	bl	1690 <Mat_Critical@plt>
    2abc:	mov	r0, r7
    2ac0:	add	sp, sp, #52	; 0x34
    2ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ac8:	mov	r1, #1
    2acc:	str	r1, [r3, #4]
    2ad0:	ldr	r3, [r4, #52]	; 0x34
    2ad4:	ldr	r3, [r3, #12]
    2ad8:	add	r0, sp, #16
    2adc:	str	r0, [r3]
    2ae0:	ldr	r3, [r9]
    2ae4:	mov	r2, r1
    2ae8:	bl	1588 <fread@plt>
    2aec:	mov	r7, r0
    2af0:	b	2a68 <InflateRankDims+0x34>
    2af4:	mov	r5, #1
    2af8:	mov	r6, r5
    2afc:	add	r8, sp, #16
    2b00:	ldr	r3, [r4, #52]	; 0x34
    2b04:	ldr	r3, [r3, #12]
    2b08:	ldr	r2, [r3, #16]
    2b0c:	cmp	r2, #0
    2b10:	beq	2b88 <InflateRankDims+0x154>
    2b14:	ldr	r2, [r3, #4]
    2b18:	cmp	r2, #0
    2b1c:	cmpeq	r5, #1
    2b20:	bne	2b88 <InflateRankDims+0x154>
    2b24:	str	r6, [r3, #4]
    2b28:	ldr	r3, [r4, #52]	; 0x34
    2b2c:	ldr	r3, [r3, #12]
    2b30:	str	r8, [r3]
    2b34:	ldr	r3, [r9]
    2b38:	mov	r2, r6
    2b3c:	mov	r1, r6
    2b40:	mov	r0, r8
    2b44:	bl	1588 <fread@plt>
    2b48:	mov	r5, r0
    2b4c:	add	r7, r7, r0
    2b50:	ldr	r3, [r4, #52]	; 0x34
    2b54:	mov	r1, #0
    2b58:	ldr	r0, [r3, #12]
    2b5c:	bl	14c8 <inflate@plt>
    2b60:	cmp	r0, #0
    2b64:	beq	2b00 <InflateRankDims+0xcc>
    2b68:	cmp	r0, #2
    2b6c:	mvneq	r0, #2
    2b70:	bl	1558 <zError@plt>
    2b74:	mov	r1, r0
    2b78:	ldr	r0, [pc, #572]	; 2dbc <InflateRankDims+0x388>
    2b7c:	add	r0, pc, r0
    2b80:	bl	1690 <Mat_Critical@plt>
    2b84:	b	2abc <InflateRankDims+0x88>
    2b88:	ldr	r3, [sl]
    2b8c:	str	r3, [sp, #8]
    2b90:	ldr	r3, [sl, #4]
    2b94:	str	r3, [sp, #12]
    2b98:	ldr	r3, [r9, #20]
    2b9c:	cmp	r3, #0
    2ba0:	bne	2c50 <InflateRankDims+0x21c>
    2ba4:	ldrh	r3, [sp, #8]
    2ba8:	cmp	r3, #5
    2bac:	bne	2c64 <InflateRankDims+0x230>
    2bb0:	ldr	r3, [sp, #12]
    2bb4:	tst	r3, #7
    2bb8:	beq	2bd4 <InflateRankDims+0x1a0>
    2bbc:	asr	fp, r3, #31
    2bc0:	lsr	r2, fp, #29
    2bc4:	add	fp, r3, r2
    2bc8:	and	fp, fp, #7
    2bcc:	sub	fp, fp, r2
    2bd0:	rsb	fp, fp, #8
    2bd4:	add	fp, fp, r3
    2bd8:	ldr	r3, [r4, #52]	; 0x34
    2bdc:	ldr	r3, [r3, #12]
    2be0:	ldr	r2, [r3, #4]
    2be4:	cmp	r2, #0
    2be8:	beq	2c74 <InflateRankDims+0x240>
    2bec:	ldr	r3, [r4, #52]	; 0x34
    2bf0:	ldr	r3, [r3, #12]
    2bf4:	str	fp, [r3, #16]
    2bf8:	add	r3, fp, #2
    2bfc:	ldr	r2, [sp, #4]
    2c00:	cmp	r2, r3, lsl #2
    2c04:	bcc	2ca0 <InflateRankDims+0x26c>
    2c08:	ldr	r3, [r4, #52]	; 0x34
    2c0c:	ldr	r3, [r3, #12]
    2c10:	add	sl, sl, #8
    2c14:	str	sl, [r3, #12]
    2c18:	ldr	r3, [r4, #52]	; 0x34
    2c1c:	mov	r1, #0
    2c20:	ldr	r0, [r3, #12]
    2c24:	bl	14c8 <inflate@plt>
    2c28:	cmp	r0, #0
    2c2c:	beq	2ce0 <InflateRankDims+0x2ac>
    2c30:	cmp	r0, #2
    2c34:	mvneq	r0, #2
    2c38:	bl	1558 <zError@plt>
    2c3c:	mov	r1, r0
    2c40:	ldr	r0, [pc, #376]	; 2dc0 <InflateRankDims+0x38c>
    2c44:	add	r0, pc, r0
    2c48:	bl	1690 <Mat_Critical@plt>
    2c4c:	b	2abc <InflateRankDims+0x88>
    2c50:	add	r0, sp, #8
    2c54:	bl	1a20 <Mat_int32Swap>
    2c58:	add	r0, sp, #12
    2c5c:	bl	1a20 <Mat_int32Swap>
    2c60:	b	2ba4 <InflateRankDims+0x170>
    2c64:	ldr	r0, [pc, #344]	; 2dc4 <InflateRankDims+0x390>
    2c68:	add	r0, pc, r0
    2c6c:	bl	1690 <Mat_Critical@plt>
    2c70:	b	2abc <InflateRankDims+0x88>
    2c74:	mov	r1, #1
    2c78:	str	r1, [r3, #4]
    2c7c:	ldr	r3, [r4, #52]	; 0x34
    2c80:	ldr	r3, [r3, #12]
    2c84:	add	r0, sp, #16
    2c88:	str	r0, [r3]
    2c8c:	ldr	r3, [r9]
    2c90:	mov	r2, r1
    2c94:	bl	1588 <fread@plt>
    2c98:	add	r7, r7, r0
    2c9c:	b	2bec <InflateRankDims+0x1b8>
    2ca0:	mov	r1, #4
    2ca4:	mov	r0, fp
    2ca8:	bl	1468 <calloc@plt>
    2cac:	ldr	r3, [sp, #88]	; 0x58
    2cb0:	str	r0, [r3]
    2cb4:	cmp	r0, #0
    2cb8:	ldrne	r3, [r4, #52]	; 0x34
    2cbc:	ldrne	r3, [r3, #12]
    2cc0:	strne	r0, [r3, #12]
    2cc4:	bne	2c18 <InflateRankDims+0x1e4>
    2cc8:	mov	r3, #0
    2ccc:	str	r3, [sl, #4]
    2cd0:	ldr	r0, [pc, #240]	; 2dc8 <InflateRankDims+0x394>
    2cd4:	add	r0, pc, r0
    2cd8:	bl	1690 <Mat_Critical@plt>
    2cdc:	b	2abc <InflateRankDims+0x88>
    2ce0:	mov	r5, #1
    2ce4:	mov	r6, r5
    2ce8:	add	r8, sp, #16
    2cec:	mov	sl, #0
    2cf0:	ldr	r3, [r4, #52]	; 0x34
    2cf4:	ldr	r3, [r3, #12]
    2cf8:	ldr	r2, [r3, #16]
    2cfc:	cmp	r2, #0
    2d00:	beq	2d78 <InflateRankDims+0x344>
    2d04:	ldr	r2, [r3, #4]
    2d08:	cmp	r2, #0
    2d0c:	cmpeq	r5, #1
    2d10:	bne	2d78 <InflateRankDims+0x344>
    2d14:	str	r6, [r3, #4]
    2d18:	ldr	r3, [r4, #52]	; 0x34
    2d1c:	ldr	r3, [r3, #12]
    2d20:	str	r8, [r3]
    2d24:	ldr	r3, [r9]
    2d28:	mov	r2, r6
    2d2c:	mov	r1, r6
    2d30:	mov	r0, r8
    2d34:	bl	1588 <fread@plt>
    2d38:	mov	r5, r0
    2d3c:	add	r7, r7, r0
    2d40:	ldr	r3, [r4, #52]	; 0x34
    2d44:	mov	r1, sl
    2d48:	ldr	r0, [r3, #12]
    2d4c:	bl	14c8 <inflate@plt>
    2d50:	cmp	r0, #0
    2d54:	beq	2cf0 <InflateRankDims+0x2bc>
    2d58:	cmp	r0, #2
    2d5c:	mvneq	r0, #2
    2d60:	bl	1558 <zError@plt>
    2d64:	mov	r1, r0
    2d68:	ldr	r0, [pc, #92]	; 2dcc <InflateRankDims+0x398>
    2d6c:	add	r0, pc, r0
    2d70:	bl	1690 <Mat_Critical@plt>
    2d74:	b	2abc <InflateRankDims+0x88>
    2d78:	ldr	r1, [r3, #4]
    2d7c:	cmp	r1, #0
    2d80:	beq	2abc <InflateRankDims+0x88>
    2d84:	mov	r2, #1
    2d88:	rsb	r1, r1, #0
    2d8c:	ldr	r0, [r9]
    2d90:	bl	1714 <fseek@plt>
    2d94:	ldr	r3, [r4, #52]	; 0x34
    2d98:	ldr	r3, [r3, #12]
    2d9c:	ldr	r2, [r3, #4]
    2da0:	sub	r7, r7, r2
    2da4:	mov	r2, #0
    2da8:	str	r2, [r3, #4]
    2dac:	b	2abc <InflateRankDims+0x88>
    2db0:	mov	r7, #0
    2db4:	b	2abc <InflateRankDims+0x88>
    2db8:	.word	0x0004f534
    2dbc:	.word	0x0004f46c
    2dc0:	.word	0x0004f3a4
    2dc4:	.word	0x0004f3a8
    2dc8:	.word	0x0004f37c
    2dcc:	.word	0x0004f27c

00002dd0 <InflateVarNameTag>:
    2dd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2dd4:	sub	sp, sp, #32
    2dd8:	subs	r5, r2, #0
    2ddc:	beq	2f58 <InflateVarNameTag+0x188>
    2de0:	mov	r4, r1
    2de4:	mov	r9, r0
    2de8:	ldr	r3, [r1, #52]	; 0x34
    2dec:	ldr	r3, [r3, #12]
    2df0:	ldr	r2, [r3, #4]
    2df4:	cmp	r2, #0
    2df8:	movne	r7, #0
    2dfc:	beq	2e5c <InflateVarNameTag+0x8c>
    2e00:	ldr	r3, [r4, #52]	; 0x34
    2e04:	ldr	r3, [r3, #12]
    2e08:	mov	r2, #8
    2e0c:	str	r2, [r3, #16]
    2e10:	ldr	r3, [r4, #52]	; 0x34
    2e14:	ldr	r3, [r3, #12]
    2e18:	str	r5, [r3, #12]
    2e1c:	ldr	r3, [r4, #52]	; 0x34
    2e20:	mov	r1, #0
    2e24:	ldr	r0, [r3, #12]
    2e28:	bl	14c8 <inflate@plt>
    2e2c:	cmp	r0, #0
    2e30:	beq	2e88 <InflateVarNameTag+0xb8>
    2e34:	cmp	r0, #2
    2e38:	mvneq	r0, #2
    2e3c:	bl	1558 <zError@plt>
    2e40:	mov	r1, r0
    2e44:	ldr	r0, [pc, #276]	; 2f60 <InflateVarNameTag+0x190>
    2e48:	add	r0, pc, r0
    2e4c:	bl	1690 <Mat_Critical@plt>
    2e50:	mov	r0, r7
    2e54:	add	sp, sp, #32
    2e58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2e5c:	mov	r1, #1
    2e60:	str	r1, [r3, #4]
    2e64:	ldr	r3, [r4, #52]	; 0x34
    2e68:	ldr	r3, [r3, #12]
    2e6c:	mov	r0, sp
    2e70:	str	sp, [r3]
    2e74:	ldr	r3, [r9]
    2e78:	mov	r2, r1
    2e7c:	bl	1588 <fread@plt>
    2e80:	mov	r7, r0
    2e84:	b	2e00 <InflateVarNameTag+0x30>
    2e88:	mov	r5, #1
    2e8c:	mov	r6, r5
    2e90:	mov	r8, sp
    2e94:	mov	sl, #0
    2e98:	ldr	r3, [r4, #52]	; 0x34
    2e9c:	ldr	r3, [r3, #12]
    2ea0:	ldr	r2, [r3, #16]
    2ea4:	cmp	r2, #0
    2ea8:	beq	2f20 <InflateVarNameTag+0x150>
    2eac:	ldr	r2, [r3, #4]
    2eb0:	cmp	r2, #0
    2eb4:	cmpeq	r5, #1
    2eb8:	bne	2f20 <InflateVarNameTag+0x150>
    2ebc:	str	r6, [r3, #4]
    2ec0:	ldr	r3, [r4, #52]	; 0x34
    2ec4:	ldr	r3, [r3, #12]
    2ec8:	str	r8, [r3]
    2ecc:	ldr	r3, [r9]
    2ed0:	mov	r2, r6
    2ed4:	mov	r1, r6
    2ed8:	mov	r0, r8
    2edc:	bl	1588 <fread@plt>
    2ee0:	mov	r5, r0
    2ee4:	add	r7, r7, r0
    2ee8:	ldr	r3, [r4, #52]	; 0x34
    2eec:	mov	r1, sl
    2ef0:	ldr	r0, [r3, #12]
    2ef4:	bl	14c8 <inflate@plt>
    2ef8:	cmp	r0, #0
    2efc:	beq	2e98 <InflateVarNameTag+0xc8>
    2f00:	cmp	r0, #2
    2f04:	mvneq	r0, #2
    2f08:	bl	1558 <zError@plt>
    2f0c:	mov	r1, r0
    2f10:	ldr	r0, [pc, #76]	; 2f64 <InflateVarNameTag+0x194>
    2f14:	add	r0, pc, r0
    2f18:	bl	1690 <Mat_Critical@plt>
    2f1c:	b	2e50 <InflateVarNameTag+0x80>
    2f20:	ldr	r1, [r3, #4]
    2f24:	cmp	r1, #0
    2f28:	beq	2e50 <InflateVarNameTag+0x80>
    2f2c:	mov	r2, #1
    2f30:	rsb	r1, r1, #0
    2f34:	ldr	r0, [r9]
    2f38:	bl	1714 <fseek@plt>
    2f3c:	ldr	r3, [r4, #52]	; 0x34
    2f40:	ldr	r3, [r3, #12]
    2f44:	ldr	r2, [r3, #4]
    2f48:	sub	r7, r7, r2
    2f4c:	mov	r2, #0
    2f50:	str	r2, [r3, #4]
    2f54:	b	2e50 <InflateVarNameTag+0x80>
    2f58:	mov	r7, #0
    2f5c:	b	2e50 <InflateVarNameTag+0x80>
    2f60:	.word	0x0004f22c
    2f64:	.word	0x0004f160

00002f68 <InflateVarName>:
    2f68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2f6c:	sub	sp, sp, #32
    2f70:	subs	r5, r2, #0
    2f74:	beq	30f0 <InflateVarName+0x188>
    2f78:	mov	r6, r3
    2f7c:	mov	r4, r1
    2f80:	mov	r9, r0
    2f84:	ldr	r3, [r1, #52]	; 0x34
    2f88:	ldr	r2, [r3, #12]
    2f8c:	ldr	r3, [r2, #4]
    2f90:	cmp	r3, #0
    2f94:	movne	r7, #0
    2f98:	beq	2ff4 <InflateVarName+0x8c>
    2f9c:	ldr	r3, [r4, #52]	; 0x34
    2fa0:	ldr	r3, [r3, #12]
    2fa4:	str	r6, [r3, #16]
    2fa8:	ldr	r3, [r4, #52]	; 0x34
    2fac:	ldr	r3, [r3, #12]
    2fb0:	str	r5, [r3, #12]
    2fb4:	ldr	r3, [r4, #52]	; 0x34
    2fb8:	mov	r1, #0
    2fbc:	ldr	r0, [r3, #12]
    2fc0:	bl	14c8 <inflate@plt>
    2fc4:	cmp	r0, #0
    2fc8:	beq	3020 <InflateVarName+0xb8>
    2fcc:	cmp	r0, #2
    2fd0:	mvneq	r0, #2
    2fd4:	bl	1558 <zError@plt>
    2fd8:	mov	r1, r0
    2fdc:	ldr	r0, [pc, #276]	; 30f8 <InflateVarName+0x190>
    2fe0:	add	r0, pc, r0
    2fe4:	bl	1690 <Mat_Critical@plt>
    2fe8:	mov	r0, r7
    2fec:	add	sp, sp, #32
    2ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2ff4:	mov	r1, #1
    2ff8:	str	r1, [r2, #4]
    2ffc:	ldr	r3, [r4, #52]	; 0x34
    3000:	ldr	r3, [r3, #12]
    3004:	mov	r0, sp
    3008:	str	sp, [r3]
    300c:	ldr	r3, [r9]
    3010:	mov	r2, r1
    3014:	bl	1588 <fread@plt>
    3018:	mov	r7, r0
    301c:	b	2f9c <InflateVarName+0x34>
    3020:	mov	r5, #1
    3024:	mov	r6, r5
    3028:	mov	r8, sp
    302c:	mov	sl, #0
    3030:	ldr	r3, [r4, #52]	; 0x34
    3034:	ldr	r3, [r3, #12]
    3038:	ldr	r2, [r3, #16]
    303c:	cmp	r2, #0
    3040:	beq	30b8 <InflateVarName+0x150>
    3044:	ldr	r2, [r3, #4]
    3048:	cmp	r2, #0
    304c:	cmpeq	r5, #1
    3050:	bne	30b8 <InflateVarName+0x150>
    3054:	str	r6, [r3, #4]
    3058:	ldr	r3, [r4, #52]	; 0x34
    305c:	ldr	r3, [r3, #12]
    3060:	str	r8, [r3]
    3064:	ldr	r3, [r9]
    3068:	mov	r2, r6
    306c:	mov	r1, r6
    3070:	mov	r0, r8
    3074:	bl	1588 <fread@plt>
    3078:	mov	r5, r0
    307c:	add	r7, r7, r0
    3080:	ldr	r3, [r4, #52]	; 0x34
    3084:	mov	r1, sl
    3088:	ldr	r0, [r3, #12]
    308c:	bl	14c8 <inflate@plt>
    3090:	cmp	r0, #0
    3094:	beq	3030 <InflateVarName+0xc8>
    3098:	cmp	r0, #2
    309c:	mvneq	r0, #2
    30a0:	bl	1558 <zError@plt>
    30a4:	mov	r1, r0
    30a8:	ldr	r0, [pc, #76]	; 30fc <InflateVarName+0x194>
    30ac:	add	r0, pc, r0
    30b0:	bl	1690 <Mat_Critical@plt>
    30b4:	b	2fe8 <InflateVarName+0x80>
    30b8:	ldr	r1, [r3, #4]
    30bc:	cmp	r1, #0
    30c0:	beq	2fe8 <InflateVarName+0x80>
    30c4:	mov	r2, #1
    30c8:	rsb	r1, r1, #0
    30cc:	ldr	r0, [r9]
    30d0:	bl	1714 <fseek@plt>
    30d4:	ldr	r3, [r4, #52]	; 0x34
    30d8:	ldr	r3, [r3, #12]
    30dc:	ldr	r2, [r3, #4]
    30e0:	sub	r7, r7, r2
    30e4:	mov	r2, #0
    30e8:	str	r2, [r3, #4]
    30ec:	b	2fe8 <InflateVarName+0x80>
    30f0:	mov	r7, #0
    30f4:	b	2fe8 <InflateVarName+0x80>
    30f8:	.word	0x0004f0bc
    30fc:	.word	0x0004eff0

00003100 <InflateDataTag>:
    3100:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3104:	sub	sp, sp, #32
    3108:	subs	r5, r2, #0
    310c:	beq	32b0 <InflateDataTag+0x1b0>
    3110:	mov	r4, r1
    3114:	mov	r9, r0
    3118:	ldr	r3, [r1, #52]	; 0x34
    311c:	ldr	r3, [r3, #12]
    3120:	ldr	r2, [r3, #4]
    3124:	cmp	r2, #0
    3128:	movne	r7, #0
    312c:	beq	319c <InflateDataTag+0x9c>
    3130:	ldr	r3, [r4, #52]	; 0x34
    3134:	ldr	r3, [r3, #12]
    3138:	mov	r2, #8
    313c:	str	r2, [r3, #16]
    3140:	ldr	r3, [r4, #52]	; 0x34
    3144:	ldr	r3, [r3, #12]
    3148:	str	r5, [r3, #12]
    314c:	ldr	r3, [r4, #52]	; 0x34
    3150:	mov	r1, #0
    3154:	ldr	r0, [r3, #12]
    3158:	bl	14c8 <inflate@plt>
    315c:	cmp	r0, #1
    3160:	beq	3190 <InflateDataTag+0x90>
    3164:	cmp	r0, #0
    3168:	beq	31c8 <InflateDataTag+0xc8>
    316c:	ldr	r4, [r4, #36]	; 0x24
    3170:	cmp	r0, #2
    3174:	mvneq	r0, #2
    3178:	bl	1558 <zError@plt>
    317c:	mov	r2, r0
    3180:	mov	r1, r4
    3184:	ldr	r0, [pc, #300]	; 32b8 <InflateDataTag+0x1b8>
    3188:	add	r0, pc, r0
    318c:	bl	1690 <Mat_Critical@plt>
    3190:	mov	r0, r7
    3194:	add	sp, sp, #32
    3198:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    319c:	mov	r1, #1
    31a0:	str	r1, [r3, #4]
    31a4:	ldr	r3, [r4, #52]	; 0x34
    31a8:	ldr	r3, [r3, #12]
    31ac:	mov	r0, sp
    31b0:	str	sp, [r3]
    31b4:	ldr	r3, [r9]
    31b8:	mov	r2, r1
    31bc:	bl	1588 <fread@plt>
    31c0:	mov	r7, r0
    31c4:	b	3130 <InflateDataTag+0x30>
    31c8:	mov	r5, #1
    31cc:	mov	r6, r5
    31d0:	mov	r8, sp
    31d4:	mov	sl, #0
    31d8:	ldr	r3, [r4, #52]	; 0x34
    31dc:	ldr	r3, [r3, #12]
    31e0:	ldr	r2, [r3, #16]
    31e4:	cmp	r2, #0
    31e8:	beq	3270 <InflateDataTag+0x170>
    31ec:	ldr	r2, [r3, #4]
    31f0:	cmp	r2, #0
    31f4:	cmpeq	r5, #1
    31f8:	bne	3270 <InflateDataTag+0x170>
    31fc:	str	r6, [r3, #4]
    3200:	ldr	r3, [r4, #52]	; 0x34
    3204:	ldr	r3, [r3, #12]
    3208:	str	r8, [r3]
    320c:	ldr	r3, [r9]
    3210:	mov	r2, r6
    3214:	mov	r1, r6
    3218:	mov	r0, r8
    321c:	bl	1588 <fread@plt>
    3220:	mov	r5, r0
    3224:	add	r7, r7, r0
    3228:	ldr	r3, [r4, #52]	; 0x34
    322c:	mov	r1, sl
    3230:	ldr	r0, [r3, #12]
    3234:	bl	14c8 <inflate@plt>
    3238:	cmp	r0, #1
    323c:	beq	3270 <InflateDataTag+0x170>
    3240:	cmp	r0, #0
    3244:	beq	31d8 <InflateDataTag+0xd8>
    3248:	ldr	r4, [r4, #36]	; 0x24
    324c:	cmp	r0, #2
    3250:	mvneq	r0, #2
    3254:	bl	1558 <zError@plt>
    3258:	mov	r2, r0
    325c:	mov	r1, r4
    3260:	ldr	r0, [pc, #84]	; 32bc <InflateDataTag+0x1bc>
    3264:	add	r0, pc, r0
    3268:	bl	1690 <Mat_Critical@plt>
    326c:	b	3190 <InflateDataTag+0x90>
    3270:	ldr	r3, [r4, #52]	; 0x34
    3274:	ldr	r3, [r3, #12]
    3278:	ldr	r1, [r3, #4]
    327c:	cmp	r1, #0
    3280:	beq	3190 <InflateDataTag+0x90>
    3284:	mov	r2, #1
    3288:	rsb	r1, r1, #0
    328c:	ldr	r0, [r9]
    3290:	bl	1714 <fseek@plt>
    3294:	ldr	r3, [r4, #52]	; 0x34
    3298:	ldr	r3, [r3, #12]
    329c:	ldr	r2, [r3, #4]
    32a0:	sub	r7, r7, r2
    32a4:	mov	r2, #0
    32a8:	str	r2, [r3, #4]
    32ac:	b	3190 <InflateDataTag+0x90>
    32b0:	mov	r7, #0
    32b4:	b	3190 <InflateDataTag+0x90>
    32b8:	.word	0x0004ef38
    32bc:	.word	0x0004ee5c

000032c0 <InflateDataType>:
    32c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    32c4:	sub	sp, sp, #32
    32c8:	subs	r5, r2, #0
    32cc:	beq	3408 <InflateDataType+0x148>
    32d0:	mov	r4, r1
    32d4:	mov	r9, r0
    32d8:	ldr	r3, [r1, #4]
    32dc:	cmp	r3, #0
    32e0:	movne	r7, #0
    32e4:	beq	3330 <InflateDataType+0x70>
    32e8:	mov	r3, #4
    32ec:	str	r3, [r4, #16]
    32f0:	str	r5, [r4, #12]
    32f4:	mov	r1, #0
    32f8:	mov	r0, r4
    32fc:	bl	14c8 <inflate@plt>
    3300:	cmp	r0, #0
    3304:	beq	3354 <InflateDataType+0x94>
    3308:	cmp	r0, #2
    330c:	mvneq	r0, #2
    3310:	bl	1558 <zError@plt>
    3314:	mov	r1, r0
    3318:	ldr	r0, [pc, #240]	; 3410 <InflateDataType+0x150>
    331c:	add	r0, pc, r0
    3320:	bl	1690 <Mat_Critical@plt>
    3324:	mov	r0, r7
    3328:	add	sp, sp, #32
    332c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3330:	mov	r1, #1
    3334:	str	r1, [r4, #4]
    3338:	mov	r0, sp
    333c:	str	sp, [r4]
    3340:	ldr	r3, [r9]
    3344:	mov	r2, r1
    3348:	bl	1588 <fread@plt>
    334c:	mov	r7, r0
    3350:	b	32e8 <InflateDataType+0x28>
    3354:	mov	r5, #1
    3358:	mov	r6, r5
    335c:	mov	r8, sp
    3360:	mov	sl, #0
    3364:	ldr	r3, [r4, #16]
    3368:	cmp	r3, #0
    336c:	beq	33d8 <InflateDataType+0x118>
    3370:	ldr	r3, [r4, #4]
    3374:	cmp	r3, #0
    3378:	cmpeq	r5, #1
    337c:	bne	33d8 <InflateDataType+0x118>
    3380:	str	r6, [r4, #4]
    3384:	str	r8, [r4]
    3388:	ldr	r3, [r9]
    338c:	mov	r2, r6
    3390:	mov	r1, r6
    3394:	mov	r0, r8
    3398:	bl	1588 <fread@plt>
    339c:	mov	r5, r0
    33a0:	add	r7, r7, r0
    33a4:	mov	r1, sl
    33a8:	mov	r0, r4
    33ac:	bl	14c8 <inflate@plt>
    33b0:	cmp	r0, #0
    33b4:	beq	3364 <InflateDataType+0xa4>
    33b8:	cmp	r0, #2
    33bc:	mvneq	r0, #2
    33c0:	bl	1558 <zError@plt>
    33c4:	mov	r1, r0
    33c8:	ldr	r0, [pc, #68]	; 3414 <InflateDataType+0x154>
    33cc:	add	r0, pc, r0
    33d0:	bl	1690 <Mat_Critical@plt>
    33d4:	b	3324 <InflateDataType+0x64>
    33d8:	ldr	r1, [r4, #4]
    33dc:	cmp	r1, #0
    33e0:	beq	3324 <InflateDataType+0x64>
    33e4:	mov	r2, #1
    33e8:	rsb	r1, r1, #0
    33ec:	ldr	r0, [r9]
    33f0:	bl	1714 <fseek@plt>
    33f4:	ldr	r3, [r4, #4]
    33f8:	sub	r7, r7, r3
    33fc:	mov	r3, #0
    3400:	str	r3, [r4, #4]
    3404:	b	3324 <InflateDataType+0x64>
    3408:	mov	r7, #0
    340c:	b	3324 <InflateDataType+0x64>
    3410:	.word	0x0004edd0
    3414:	.word	0x0004ed20

00003418 <InflateData>:
    3418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    341c:	sub	sp, sp, #1024	; 0x400
    3420:	sub	sp, sp, #4
    3424:	cmp	r2, #0
    3428:	cmpne	r3, #0
    342c:	moveq	r5, #0
    3430:	beq	34c0 <InflateData+0xa8>
    3434:	mov	r6, r3
    3438:	mov	r7, r2
    343c:	mov	r4, r1
    3440:	mov	r8, r0
    3444:	ldr	r3, [r1, #4]
    3448:	cmp	r3, #0
    344c:	bne	347c <InflateData+0x64>
    3450:	cmp	r6, #1024	; 0x400
    3454:	ldr	r3, [r0]
    3458:	movhi	r2, #1024	; 0x400
    345c:	movls	r2, r6
    3460:	mov	r1, #1
    3464:	mov	r0, sp
    3468:	bl	1588 <fread@plt>
    346c:	str	r0, [r4, #4]
    3470:	ldr	r5, [r4, #4]
    3474:	str	sp, [r4]
    3478:	b	3480 <InflateData+0x68>
    347c:	mov	r5, #0
    3480:	str	r6, [r4, #16]
    3484:	str	r7, [r4, #12]
    3488:	mov	r1, #3
    348c:	mov	r0, r4
    3490:	bl	14c8 <inflate@plt>
    3494:	cmp	r0, #1
    3498:	beq	34c0 <InflateData+0xa8>
    349c:	cmp	r0, #0
    34a0:	beq	35b0 <InflateData+0x198>
    34a4:	cmp	r0, #2
    34a8:	mvneq	r0, #2
    34ac:	bl	1558 <zError@plt>
    34b0:	mov	r1, r0
    34b4:	ldr	r0, [pc, #264]	; 35c4 <InflateData+0x1ac>
    34b8:	add	r0, pc, r0
    34bc:	bl	1690 <Mat_Critical@plt>
    34c0:	mov	r0, r5
    34c4:	add	sp, sp, #1024	; 0x400
    34c8:	add	sp, sp, #4
    34cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    34d0:	ldr	r3, [r8]
    34d4:	mov	r2, fp
    34d8:	mov	r1, sl
    34dc:	mov	r0, r7
    34e0:	bl	1588 <fread@plt>
    34e4:	str	r0, [r4, #4]
    34e8:	ldr	r3, [r4, #4]
    34ec:	add	r5, r5, r3
    34f0:	str	r7, [r4]
    34f4:	mov	r1, r9
    34f8:	mov	r0, r4
    34fc:	bl	14c8 <inflate@plt>
    3500:	cmp	r0, #1
    3504:	beq	3580 <InflateData+0x168>
    3508:	cmp	r0, #0
    350c:	cmnne	r0, #5
    3510:	bne	3564 <InflateData+0x14c>
    3514:	ldr	r3, [r4, #16]
    3518:	cmp	r3, #0
    351c:	beq	3580 <InflateData+0x168>
    3520:	ldr	r1, [r4, #4]
    3524:	cmp	r1, #0
    3528:	bne	358c <InflateData+0x174>
    352c:	add	r3, r5, #1024	; 0x400
    3530:	cmp	r6, r3
    3534:	bhi	34d0 <InflateData+0xb8>
    3538:	add	r3, r5, #1
    353c:	cmp	r6, r3
    3540:	ldr	r3, [r8]
    3544:	movcc	r2, sl
    3548:	movcc	r1, r2
    354c:	subcs	r2, r6, r5
    3550:	movcs	r1, sl
    3554:	mov	r0, r7
    3558:	bl	1588 <fread@plt>
    355c:	str	r0, [r4, #4]
    3560:	b	34e8 <InflateData+0xd0>
    3564:	cmp	r0, #2
    3568:	mvneq	r0, #2
    356c:	bl	1558 <zError@plt>
    3570:	mov	r1, r0
    3574:	ldr	r0, [pc, #76]	; 35c8 <InflateData+0x1b0>
    3578:	add	r0, pc, r0
    357c:	bl	1690 <Mat_Critical@plt>
    3580:	ldr	r1, [r4, #4]
    3584:	cmp	r1, #0
    3588:	beq	34c0 <InflateData+0xa8>
    358c:	mov	r2, #1
    3590:	rsb	r1, r1, #0
    3594:	ldr	r0, [r8]
    3598:	bl	1714 <fseek@plt>
    359c:	ldr	r3, [r4, #4]
    35a0:	sub	r5, r5, r3
    35a4:	mov	r3, #0
    35a8:	str	r3, [r4, #4]
    35ac:	b	34c0 <InflateData+0xa8>
    35b0:	mov	r7, sp
    35b4:	mov	sl, #1
    35b8:	mov	fp, #1024	; 0x400
    35bc:	mov	r9, #3
    35c0:	b	3514 <InflateData+0xfc>
    35c4:	.word	0x0004ec5c
    35c8:	.word	0x0004eb9c

000035cc <InflateFieldNameLength>:
    35cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    35d0:	sub	sp, sp, #32
    35d4:	subs	r5, r2, #0
    35d8:	beq	3754 <InflateFieldNameLength+0x188>
    35dc:	mov	r4, r1
    35e0:	mov	r9, r0
    35e4:	ldr	r3, [r1, #52]	; 0x34
    35e8:	ldr	r3, [r3, #12]
    35ec:	ldr	r2, [r3, #4]
    35f0:	cmp	r2, #0
    35f4:	movne	r7, #0
    35f8:	beq	3658 <InflateFieldNameLength+0x8c>
    35fc:	ldr	r3, [r4, #52]	; 0x34
    3600:	ldr	r3, [r3, #12]
    3604:	mov	r2, #8
    3608:	str	r2, [r3, #16]
    360c:	ldr	r3, [r4, #52]	; 0x34
    3610:	ldr	r3, [r3, #12]
    3614:	str	r5, [r3, #12]
    3618:	ldr	r3, [r4, #52]	; 0x34
    361c:	mov	r1, #0
    3620:	ldr	r0, [r3, #12]
    3624:	bl	14c8 <inflate@plt>
    3628:	cmp	r0, #0
    362c:	beq	3684 <InflateFieldNameLength+0xb8>
    3630:	cmp	r0, #2
    3634:	mvneq	r0, #2
    3638:	bl	1558 <zError@plt>
    363c:	mov	r1, r0
    3640:	ldr	r0, [pc, #276]	; 375c <InflateFieldNameLength+0x190>
    3644:	add	r0, pc, r0
    3648:	bl	1690 <Mat_Critical@plt>
    364c:	mov	r0, r7
    3650:	add	sp, sp, #32
    3654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3658:	mov	r1, #1
    365c:	str	r1, [r3, #4]
    3660:	ldr	r3, [r4, #52]	; 0x34
    3664:	ldr	r3, [r3, #12]
    3668:	mov	r0, sp
    366c:	str	sp, [r3]
    3670:	ldr	r3, [r9]
    3674:	mov	r2, r1
    3678:	bl	1588 <fread@plt>
    367c:	mov	r7, r0
    3680:	b	35fc <InflateFieldNameLength+0x30>
    3684:	mov	r5, #1
    3688:	mov	r6, r5
    368c:	mov	r8, sp
    3690:	mov	sl, #0
    3694:	ldr	r3, [r4, #52]	; 0x34
    3698:	ldr	r3, [r3, #12]
    369c:	ldr	r2, [r3, #16]
    36a0:	cmp	r2, #0
    36a4:	beq	371c <InflateFieldNameLength+0x150>
    36a8:	ldr	r2, [r3, #4]
    36ac:	cmp	r2, #0
    36b0:	cmpeq	r5, #1
    36b4:	bne	371c <InflateFieldNameLength+0x150>
    36b8:	str	r6, [r3, #4]
    36bc:	ldr	r3, [r4, #52]	; 0x34
    36c0:	ldr	r3, [r3, #12]
    36c4:	str	r8, [r3]
    36c8:	ldr	r3, [r9]
    36cc:	mov	r2, r6
    36d0:	mov	r1, r6
    36d4:	mov	r0, r8
    36d8:	bl	1588 <fread@plt>
    36dc:	mov	r5, r0
    36e0:	add	r7, r7, r0
    36e4:	ldr	r3, [r4, #52]	; 0x34
    36e8:	mov	r1, sl
    36ec:	ldr	r0, [r3, #12]
    36f0:	bl	14c8 <inflate@plt>
    36f4:	cmp	r0, #0
    36f8:	beq	3694 <InflateFieldNameLength+0xc8>
    36fc:	cmp	r0, #2
    3700:	mvneq	r0, #2
    3704:	bl	1558 <zError@plt>
    3708:	mov	r1, r0
    370c:	ldr	r0, [pc, #76]	; 3760 <InflateFieldNameLength+0x194>
    3710:	add	r0, pc, r0
    3714:	bl	1690 <Mat_Critical@plt>
    3718:	b	364c <InflateFieldNameLength+0x80>
    371c:	ldr	r1, [r3, #4]
    3720:	cmp	r1, #0
    3724:	beq	364c <InflateFieldNameLength+0x80>
    3728:	mov	r2, #1
    372c:	rsb	r1, r1, #0
    3730:	ldr	r0, [r9]
    3734:	bl	1714 <fseek@plt>
    3738:	ldr	r3, [r4, #52]	; 0x34
    373c:	ldr	r3, [r3, #12]
    3740:	ldr	r2, [r3, #4]
    3744:	sub	r7, r7, r2
    3748:	mov	r2, #0
    374c:	str	r2, [r3, #4]
    3750:	b	364c <InflateFieldNameLength+0x80>
    3754:	mov	r7, #0
    3758:	b	364c <InflateFieldNameLength+0x80>
    375c:	.word	0x0004eaf4
    3760:	.word	0x0004ea28

00003764 <InflateFieldNamesTag>:
    3764:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3768:	sub	sp, sp, #32
    376c:	subs	r5, r2, #0
    3770:	beq	38ec <InflateFieldNamesTag+0x188>
    3774:	mov	r4, r1
    3778:	mov	r9, r0
    377c:	ldr	r3, [r1, #52]	; 0x34
    3780:	ldr	r3, [r3, #12]
    3784:	ldr	r2, [r3, #4]
    3788:	cmp	r2, #0
    378c:	movne	r7, #0
    3790:	beq	37f0 <InflateFieldNamesTag+0x8c>
    3794:	ldr	r3, [r4, #52]	; 0x34
    3798:	ldr	r3, [r3, #12]
    379c:	mov	r2, #8
    37a0:	str	r2, [r3, #16]
    37a4:	ldr	r3, [r4, #52]	; 0x34
    37a8:	ldr	r3, [r3, #12]
    37ac:	str	r5, [r3, #12]
    37b0:	ldr	r3, [r4, #52]	; 0x34
    37b4:	mov	r1, #0
    37b8:	ldr	r0, [r3, #12]
    37bc:	bl	14c8 <inflate@plt>
    37c0:	cmp	r0, #0
    37c4:	beq	381c <InflateFieldNamesTag+0xb8>
    37c8:	cmp	r0, #2
    37cc:	mvneq	r0, #2
    37d0:	bl	1558 <zError@plt>
    37d4:	mov	r1, r0
    37d8:	ldr	r0, [pc, #276]	; 38f4 <InflateFieldNamesTag+0x190>
    37dc:	add	r0, pc, r0
    37e0:	bl	1690 <Mat_Critical@plt>
    37e4:	mov	r0, r7
    37e8:	add	sp, sp, #32
    37ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    37f0:	mov	r1, #1
    37f4:	str	r1, [r3, #4]
    37f8:	ldr	r3, [r4, #52]	; 0x34
    37fc:	ldr	r3, [r3, #12]
    3800:	mov	r0, sp
    3804:	str	sp, [r3]
    3808:	ldr	r3, [r9]
    380c:	mov	r2, r1
    3810:	bl	1588 <fread@plt>
    3814:	mov	r7, r0
    3818:	b	3794 <InflateFieldNamesTag+0x30>
    381c:	mov	r5, #1
    3820:	mov	r6, r5
    3824:	mov	r8, sp
    3828:	mov	sl, #0
    382c:	ldr	r3, [r4, #52]	; 0x34
    3830:	ldr	r3, [r3, #12]
    3834:	ldr	r2, [r3, #16]
    3838:	cmp	r2, #0
    383c:	beq	38b4 <InflateFieldNamesTag+0x150>
    3840:	ldr	r2, [r3, #4]
    3844:	cmp	r2, #0
    3848:	cmpeq	r5, #1
    384c:	bne	38b4 <InflateFieldNamesTag+0x150>
    3850:	str	r6, [r3, #4]
    3854:	ldr	r3, [r4, #52]	; 0x34
    3858:	ldr	r3, [r3, #12]
    385c:	str	r8, [r3]
    3860:	ldr	r3, [r9]
    3864:	mov	r2, r6
    3868:	mov	r1, r6
    386c:	mov	r0, r8
    3870:	bl	1588 <fread@plt>
    3874:	mov	r5, r0
    3878:	add	r7, r7, r0
    387c:	ldr	r3, [r4, #52]	; 0x34
    3880:	mov	r1, sl
    3884:	ldr	r0, [r3, #12]
    3888:	bl	14c8 <inflate@plt>
    388c:	cmp	r0, #0
    3890:	beq	382c <InflateFieldNamesTag+0xc8>
    3894:	cmp	r0, #2
    3898:	mvneq	r0, #2
    389c:	bl	1558 <zError@plt>
    38a0:	mov	r1, r0
    38a4:	ldr	r0, [pc, #76]	; 38f8 <InflateFieldNamesTag+0x194>
    38a8:	add	r0, pc, r0
    38ac:	bl	1690 <Mat_Critical@plt>
    38b0:	b	37e4 <InflateFieldNamesTag+0x80>
    38b4:	ldr	r1, [r3, #4]
    38b8:	cmp	r1, #0
    38bc:	beq	37e4 <InflateFieldNamesTag+0x80>
    38c0:	mov	r2, #1
    38c4:	rsb	r1, r1, #0
    38c8:	ldr	r0, [r9]
    38cc:	bl	1714 <fseek@plt>
    38d0:	ldr	r3, [r4, #52]	; 0x34
    38d4:	ldr	r3, [r3, #12]
    38d8:	ldr	r2, [r3, #4]
    38dc:	sub	r7, r7, r2
    38e0:	mov	r2, #0
    38e4:	str	r2, [r3, #4]
    38e8:	b	37e4 <InflateFieldNamesTag+0x80>
    38ec:	mov	r7, #0
    38f0:	b	37e4 <InflateFieldNamesTag+0x80>
    38f4:	.word	0x0004e988
    38f8:	.word	0x0004e8bc

000038fc <InflateFieldNames>:
    38fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3900:	sub	sp, sp, #32
    3904:	subs	r5, r2, #0
    3908:	beq	3a90 <InflateFieldNames+0x194>
    390c:	mov	r6, r3
    3910:	mov	r4, r1
    3914:	mov	r9, r0
    3918:	ldr	r3, [r1, #52]	; 0x34
    391c:	ldr	r2, [r3, #12]
    3920:	ldr	r3, [r2, #4]
    3924:	cmp	r3, #0
    3928:	movne	r7, #0
    392c:	beq	3994 <InflateFieldNames+0x98>
    3930:	ldr	r3, [r4, #52]	; 0x34
    3934:	ldr	r2, [r3, #12]
    3938:	ldr	r3, [sp, #68]	; 0x44
    393c:	ldr	r1, [sp, #64]	; 0x40
    3940:	mla	r3, r1, r6, r3
    3944:	str	r3, [r2, #16]
    3948:	ldr	r3, [r4, #52]	; 0x34
    394c:	ldr	r3, [r3, #12]
    3950:	str	r5, [r3, #12]
    3954:	ldr	r3, [r4, #52]	; 0x34
    3958:	mov	r1, #0
    395c:	ldr	r0, [r3, #12]
    3960:	bl	14c8 <inflate@plt>
    3964:	cmp	r0, #0
    3968:	beq	39c0 <InflateFieldNames+0xc4>
    396c:	cmp	r0, #2
    3970:	mvneq	r0, #2
    3974:	bl	1558 <zError@plt>
    3978:	mov	r1, r0
    397c:	ldr	r0, [pc, #276]	; 3a98 <InflateFieldNames+0x19c>
    3980:	add	r0, pc, r0
    3984:	bl	1690 <Mat_Critical@plt>
    3988:	mov	r0, r7
    398c:	add	sp, sp, #32
    3990:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3994:	mov	r1, #1
    3998:	str	r1, [r2, #4]
    399c:	ldr	r3, [r4, #52]	; 0x34
    39a0:	ldr	r3, [r3, #12]
    39a4:	mov	r0, sp
    39a8:	str	sp, [r3]
    39ac:	ldr	r3, [r9]
    39b0:	mov	r2, r1
    39b4:	bl	1588 <fread@plt>
    39b8:	mov	r7, r0
    39bc:	b	3930 <InflateFieldNames+0x34>
    39c0:	mov	r5, #1
    39c4:	mov	r6, r5
    39c8:	mov	r8, sp
    39cc:	mov	sl, #0
    39d0:	ldr	r3, [r4, #52]	; 0x34
    39d4:	ldr	r3, [r3, #12]
    39d8:	ldr	r2, [r3, #16]
    39dc:	cmp	r2, #0
    39e0:	beq	3a58 <InflateFieldNames+0x15c>
    39e4:	ldr	r2, [r3, #4]
    39e8:	cmp	r2, #0
    39ec:	cmpeq	r5, #1
    39f0:	bne	3a58 <InflateFieldNames+0x15c>
    39f4:	str	r6, [r3, #4]
    39f8:	ldr	r3, [r4, #52]	; 0x34
    39fc:	ldr	r3, [r3, #12]
    3a00:	str	r8, [r3]
    3a04:	ldr	r3, [r9]
    3a08:	mov	r2, r6
    3a0c:	mov	r1, r6
    3a10:	mov	r0, r8
    3a14:	bl	1588 <fread@plt>
    3a18:	mov	r5, r0
    3a1c:	add	r7, r7, r0
    3a20:	ldr	r3, [r4, #52]	; 0x34
    3a24:	mov	r1, sl
    3a28:	ldr	r0, [r3, #12]
    3a2c:	bl	14c8 <inflate@plt>
    3a30:	cmp	r0, #0
    3a34:	beq	39d0 <InflateFieldNames+0xd4>
    3a38:	cmp	r0, #2
    3a3c:	mvneq	r0, #2
    3a40:	bl	1558 <zError@plt>
    3a44:	mov	r1, r0
    3a48:	ldr	r0, [pc, #76]	; 3a9c <InflateFieldNames+0x1a0>
    3a4c:	add	r0, pc, r0
    3a50:	bl	1690 <Mat_Critical@plt>
    3a54:	b	3988 <InflateFieldNames+0x8c>
    3a58:	ldr	r1, [r3, #4]
    3a5c:	cmp	r1, #0
    3a60:	beq	3988 <InflateFieldNames+0x8c>
    3a64:	mov	r2, #1
    3a68:	rsb	r1, r1, #0
    3a6c:	ldr	r0, [r9]
    3a70:	bl	1714 <fseek@plt>
    3a74:	ldr	r3, [r4, #52]	; 0x34
    3a78:	ldr	r3, [r3, #12]
    3a7c:	ldr	r2, [r3, #4]
    3a80:	sub	r7, r7, r2
    3a84:	mov	r2, #0
    3a88:	str	r2, [r3, #4]
    3a8c:	b	3988 <InflateFieldNames+0x8c>
    3a90:	mov	r7, #0
    3a94:	b	3988 <InflateFieldNames+0x8c>
    3a98:	.word	0x0004e810
    3a9c:	.word	0x0004e744

00003aa0 <ReadDoubleData>:
    3aa0:	cmp	r1, #0
    3aa4:	cmpne	r0, #0
    3aa8:	beq	4ee4 <ReadDoubleData+0x1444>
    3aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3ab0:	sub	sp, sp, #2064	; 0x810
    3ab4:	sub	sp, sp, #4
    3ab8:	mov	r9, r0
    3abc:	mov	ip, r1
    3ac0:	ldr	r1, [r0]
    3ac4:	cmp	r1, #0
    3ac8:	moveq	r0, #0
    3acc:	beq	4d08 <ReadDoubleData+0x1268>
    3ad0:	str	ip, [sp, #4]
    3ad4:	mov	r7, r3
    3ad8:	mov	r4, r2
    3adc:	mov	r0, r2
    3ae0:	bl	1600 <Mat_SizeOf@plt>
    3ae4:	str	r0, [sp]
    3ae8:	sub	r2, r4, #1
    3aec:	cmp	r2, #12
    3af0:	addls	pc, pc, r2, lsl #2
    3af4:	b	4eec <ReadDoubleData+0x144c>
    3af8:	b	4c80 <ReadDoubleData+0x11e0>
    3afc:	b	4dbc <ReadDoubleData+0x131c>
    3b00:	b	4798 <ReadDoubleData+0xcf8>
    3b04:	b	4a0c <ReadDoubleData+0xf6c>
    3b08:	b	42b0 <ReadDoubleData+0x810>
    3b0c:	b	4524 <ReadDoubleData+0xa84>
    3b10:	b	3b7c <ReadDoubleData+0xdc>
    3b14:	b	4eec <ReadDoubleData+0x144c>
    3b18:	b	3b2c <ReadDoubleData+0x8c>
    3b1c:	b	4eec <ReadDoubleData+0x144c>
    3b20:	b	4eec <ReadDoubleData+0x144c>
    3b24:	b	3dc8 <ReadDoubleData+0x328>
    3b28:	b	403c <ReadDoubleData+0x59c>
    3b2c:	ldr	r3, [r9]
    3b30:	mov	r2, r7
    3b34:	ldr	r1, [sp]
    3b38:	ldr	r5, [sp, #4]
    3b3c:	mov	r0, r5
    3b40:	bl	1588 <fread@plt>
    3b44:	mov	r8, r0
    3b48:	ldr	r3, [r9, #20]
    3b4c:	cmp	r3, #0
    3b50:	beq	4d00 <ReadDoubleData+0x1260>
    3b54:	cmp	r7, #0
    3b58:	ble	4d00 <ReadDoubleData+0x1260>
    3b5c:	mov	r4, #0
    3b60:	mov	r0, r5
    3b64:	bl	1b94 <Mat_doubleSwap>
    3b68:	add	r4, r4, #1
    3b6c:	add	r5, r5, #8
    3b70:	cmp	r7, r4
    3b74:	bne	3b60 <ReadDoubleData+0xc0>
    3b78:	b	4d00 <ReadDoubleData+0x1260>
    3b7c:	ldr	r8, [r9, #20]
    3b80:	cmp	r8, #0
    3b84:	beq	3cc4 <ReadDoubleData+0x224>
    3b88:	cmp	r7, #256	; 0x100
    3b8c:	ble	3c74 <ReadDoubleData+0x1d4>
    3b90:	sub	r3, r7, #256	; 0x100
    3b94:	cmp	r3, #0
    3b98:	movle	sl, #0
    3b9c:	movle	r8, sl
    3ba0:	ble	3c14 <ReadDoubleData+0x174>
    3ba4:	ldr	fp, [sp, #4]
    3ba8:	mov	sl, #0
    3bac:	mov	r8, sl
    3bb0:	add	r2, sp, #16
    3bb4:	str	r2, [sp, #8]
    3bb8:	add	r6, sp, #1040	; 0x410
    3bbc:	str	r7, [sp, #12]
    3bc0:	mov	r7, r3
    3bc4:	ldr	r3, [r9]
    3bc8:	mov	r2, #256	; 0x100
    3bcc:	ldr	r1, [sp]
    3bd0:	ldr	r4, [sp, #8]
    3bd4:	mov	r0, r4
    3bd8:	bl	1588 <fread@plt>
    3bdc:	add	r8, r8, r0
    3be0:	mov	r5, fp
    3be4:	mov	r0, r4
    3be8:	bl	1b38 <Mat_floatSwap>
    3bec:	vcvt.f64.f32	d0, s0
    3bf0:	vstmia	r5!, {d0}
    3bf4:	add	r4, r4, #4
    3bf8:	cmp	r4, r6
    3bfc:	bne	3be4 <ReadDoubleData+0x144>
    3c00:	add	sl, sl, #256	; 0x100
    3c04:	add	fp, fp, #2048	; 0x800
    3c08:	cmp	sl, r7
    3c0c:	blt	3bc4 <ReadDoubleData+0x124>
    3c10:	ldr	r7, [sp, #12]
    3c14:	cmp	r7, sl
    3c18:	ble	4d00 <ReadDoubleData+0x1260>
    3c1c:	sub	r7, r7, sl
    3c20:	ldr	r3, [r9]
    3c24:	mov	r2, r7
    3c28:	ldr	r1, [sp]
    3c2c:	add	r0, sp, #16
    3c30:	bl	1588 <fread@plt>
    3c34:	add	r8, r8, r0
    3c38:	cmp	r7, #0
    3c3c:	ble	4d00 <ReadDoubleData+0x1260>
    3c40:	add	r5, sp, #16
    3c44:	ldr	r3, [sp, #4]
    3c48:	add	sl, r3, sl, lsl #3
    3c4c:	mov	r4, #0
    3c50:	mov	r0, r5
    3c54:	bl	1b38 <Mat_floatSwap>
    3c58:	vcvt.f64.f32	d0, s0
    3c5c:	vstmia	sl!, {d0}
    3c60:	add	r4, r4, #1
    3c64:	add	r5, r5, #4
    3c68:	cmp	r7, r4
    3c6c:	bne	3c50 <ReadDoubleData+0x1b0>
    3c70:	b	4d00 <ReadDoubleData+0x1260>
    3c74:	ldr	r3, [r9]
    3c78:	mov	r2, r7
    3c7c:	ldr	r1, [sp]
    3c80:	add	r0, sp, #16
    3c84:	bl	1588 <fread@plt>
    3c88:	mov	r8, r0
    3c8c:	cmp	r7, #0
    3c90:	ble	4d00 <ReadDoubleData+0x1260>
    3c94:	add	r5, sp, #16
    3c98:	ldr	r3, [sp, #4]
    3c9c:	mov	r4, r3
    3ca0:	add	r7, r3, r7, lsl #3
    3ca4:	mov	r0, r5
    3ca8:	bl	1b38 <Mat_floatSwap>
    3cac:	vcvt.f64.f32	d0, s0
    3cb0:	vstmia	r4!, {d0}
    3cb4:	add	r5, r5, #4
    3cb8:	cmp	r4, r7
    3cbc:	bne	3ca4 <ReadDoubleData+0x204>
    3cc0:	b	4d00 <ReadDoubleData+0x1260>
    3cc4:	cmp	r7, #256	; 0x100
    3cc8:	ble	3d84 <ReadDoubleData+0x2e4>
    3ccc:	sub	fp, r7, #256	; 0x100
    3cd0:	cmp	fp, #0
    3cd4:	movle	r5, r8
    3cd8:	ble	3d30 <ReadDoubleData+0x290>
    3cdc:	ldr	r6, [sp, #4]
    3ce0:	mov	r5, r8
    3ce4:	add	sl, sp, #16
    3ce8:	add	r4, sp, #1040	; 0x410
    3cec:	ldr	r3, [r9]
    3cf0:	mov	r2, #256	; 0x100
    3cf4:	ldr	r1, [sp]
    3cf8:	mov	r0, sl
    3cfc:	bl	1588 <fread@plt>
    3d00:	add	r8, r8, r0
    3d04:	mov	r3, sl
    3d08:	mov	r2, r6
    3d0c:	vldmia	r3!, {s14}
    3d10:	vcvt.f64.f32	d7, s14
    3d14:	vstmia	r2!, {d7}
    3d18:	cmp	r3, r4
    3d1c:	bne	3d0c <ReadDoubleData+0x26c>
    3d20:	add	r5, r5, #256	; 0x100
    3d24:	add	r6, r6, #2048	; 0x800
    3d28:	cmp	r5, fp
    3d2c:	blt	3cec <ReadDoubleData+0x24c>
    3d30:	cmp	r7, r5
    3d34:	ble	4d00 <ReadDoubleData+0x1260>
    3d38:	sub	r7, r7, r5
    3d3c:	ldr	r3, [r9]
    3d40:	mov	r2, r7
    3d44:	ldr	r1, [sp]
    3d48:	add	r0, sp, #16
    3d4c:	bl	1588 <fread@plt>
    3d50:	add	r8, r8, r0
    3d54:	cmp	r7, #0
    3d58:	ble	4d00 <ReadDoubleData+0x1260>
    3d5c:	add	r3, sp, #16
    3d60:	ldr	r2, [sp, #4]
    3d64:	add	r5, r2, r5, lsl #3
    3d68:	add	r2, r3, r7, lsl #2
    3d6c:	vldmia	r3!, {s14}
    3d70:	vcvt.f64.f32	d7, s14
    3d74:	vstmia	r5!, {d7}
    3d78:	cmp	r3, r2
    3d7c:	bne	3d6c <ReadDoubleData+0x2cc>
    3d80:	b	4d00 <ReadDoubleData+0x1260>
    3d84:	ldr	r3, [r9]
    3d88:	mov	r2, r7
    3d8c:	ldr	r1, [sp]
    3d90:	add	r0, sp, #16
    3d94:	bl	1588 <fread@plt>
    3d98:	mov	r8, r0
    3d9c:	cmp	r7, #0
    3da0:	ble	4d00 <ReadDoubleData+0x1260>
    3da4:	add	r3, sp, #16
    3da8:	ldr	r2, [sp, #4]
    3dac:	add	r7, r3, r7, lsl #2
    3db0:	vldmia	r3!, {s14}
    3db4:	vcvt.f64.f32	d7, s14
    3db8:	vstmia	r2!, {d7}
    3dbc:	cmp	r3, r7
    3dc0:	bne	3db0 <ReadDoubleData+0x310>
    3dc4:	b	4d00 <ReadDoubleData+0x1260>
    3dc8:	ldr	r8, [r9, #20]
    3dcc:	cmp	r8, #0
    3dd0:	beq	3f10 <ReadDoubleData+0x470>
    3dd4:	cmp	r7, #256	; 0x100
    3dd8:	ble	3ec0 <ReadDoubleData+0x420>
    3ddc:	sub	r3, r7, #256	; 0x100
    3de0:	cmp	r3, #0
    3de4:	movle	sl, #0
    3de8:	movle	r8, sl
    3dec:	ble	3e60 <ReadDoubleData+0x3c0>
    3df0:	ldr	fp, [sp, #4]
    3df4:	mov	sl, #0
    3df8:	mov	r8, sl
    3dfc:	add	r2, sp, #16
    3e00:	str	r2, [sp, #8]
    3e04:	str	r7, [sp, #12]
    3e08:	mov	r7, r3
    3e0c:	ldr	r3, [r9]
    3e10:	mov	r2, #256	; 0x100
    3e14:	ldr	r1, [sp]
    3e18:	ldr	r4, [sp, #8]
    3e1c:	mov	r0, r4
    3e20:	bl	1588 <fread@plt>
    3e24:	add	r8, r8, r0
    3e28:	add	r6, sp, #2064	; 0x810
    3e2c:	mov	r5, fp
    3e30:	mov	r0, r4
    3e34:	bl	18bc <Mat_int64Swap>
    3e38:	bl	51b60 <__aeabi_l2d>
    3e3c:	strd	r0, [r5], #8
    3e40:	add	r4, r4, #8
    3e44:	cmp	r4, r6
    3e48:	bne	3e30 <ReadDoubleData+0x390>
    3e4c:	add	sl, sl, #256	; 0x100
    3e50:	add	fp, fp, #2048	; 0x800
    3e54:	cmp	sl, r7
    3e58:	blt	3e0c <ReadDoubleData+0x36c>
    3e5c:	ldr	r7, [sp, #12]
    3e60:	cmp	r7, sl
    3e64:	ble	4d00 <ReadDoubleData+0x1260>
    3e68:	sub	r7, r7, sl
    3e6c:	ldr	r3, [r9]
    3e70:	mov	r2, r7
    3e74:	ldr	r1, [sp]
    3e78:	add	r0, sp, #16
    3e7c:	bl	1588 <fread@plt>
    3e80:	add	r8, r8, r0
    3e84:	cmp	r7, #0
    3e88:	ble	4d00 <ReadDoubleData+0x1260>
    3e8c:	add	r5, sp, #16
    3e90:	ldr	r3, [sp, #4]
    3e94:	add	sl, r3, sl, lsl #3
    3e98:	mov	r4, #0
    3e9c:	mov	r0, r5
    3ea0:	bl	18bc <Mat_int64Swap>
    3ea4:	bl	51b60 <__aeabi_l2d>
    3ea8:	strd	r0, [sl], #8
    3eac:	add	r4, r4, #1
    3eb0:	add	r5, r5, #8
    3eb4:	cmp	r7, r4
    3eb8:	bne	3e9c <ReadDoubleData+0x3fc>
    3ebc:	b	4d00 <ReadDoubleData+0x1260>
    3ec0:	ldr	r3, [r9]
    3ec4:	mov	r2, r7
    3ec8:	ldr	r1, [sp]
    3ecc:	add	r0, sp, #16
    3ed0:	bl	1588 <fread@plt>
    3ed4:	mov	r8, r0
    3ed8:	cmp	r7, #0
    3edc:	ble	4d00 <ReadDoubleData+0x1260>
    3ee0:	add	r5, sp, #16
    3ee4:	ldr	r3, [sp, #4]
    3ee8:	mov	r4, r3
    3eec:	add	r7, r3, r7, lsl #3
    3ef0:	mov	r0, r5
    3ef4:	bl	18bc <Mat_int64Swap>
    3ef8:	bl	51b60 <__aeabi_l2d>
    3efc:	strd	r0, [r4], #8
    3f00:	add	r5, r5, #8
    3f04:	cmp	r4, r7
    3f08:	bne	3ef0 <ReadDoubleData+0x450>
    3f0c:	b	4d00 <ReadDoubleData+0x1260>
    3f10:	cmp	r7, #256	; 0x100
    3f14:	ble	3ff0 <ReadDoubleData+0x550>
    3f18:	sub	r3, r7, #256	; 0x100
    3f1c:	str	r3, [sp, #8]
    3f20:	cmp	r3, #0
    3f24:	movle	sl, r8
    3f28:	ble	3f94 <ReadDoubleData+0x4f4>
    3f2c:	ldr	fp, [sp, #4]
    3f30:	mov	sl, r8
    3f34:	add	r3, sp, #16
    3f38:	add	r6, sp, #2048	; 0x800
    3f3c:	add	r6, r6, #8
    3f40:	str	r7, [sp, #12]
    3f44:	mov	r7, r3
    3f48:	ldr	r3, [r9]
    3f4c:	mov	r2, #256	; 0x100
    3f50:	ldr	r1, [sp]
    3f54:	mov	r0, r7
    3f58:	bl	1588 <fread@plt>
    3f5c:	add	r8, r8, r0
    3f60:	sub	r4, r7, #8
    3f64:	mov	r5, fp
    3f68:	ldrd	r0, [r4, #8]!
    3f6c:	bl	51b60 <__aeabi_l2d>
    3f70:	strd	r0, [r5], #8
    3f74:	cmp	r4, r6
    3f78:	bne	3f68 <ReadDoubleData+0x4c8>
    3f7c:	add	sl, sl, #256	; 0x100
    3f80:	add	fp, fp, #2048	; 0x800
    3f84:	ldr	r3, [sp, #8]
    3f88:	cmp	sl, r3
    3f8c:	blt	3f48 <ReadDoubleData+0x4a8>
    3f90:	ldr	r7, [sp, #12]
    3f94:	cmp	r7, sl
    3f98:	ble	4d00 <ReadDoubleData+0x1260>
    3f9c:	sub	r7, r7, sl
    3fa0:	ldr	r3, [r9]
    3fa4:	mov	r2, r7
    3fa8:	ldr	r1, [sp]
    3fac:	add	r0, sp, #16
    3fb0:	bl	1588 <fread@plt>
    3fb4:	add	r8, r8, r0
    3fb8:	cmp	r7, #0
    3fbc:	ble	4d00 <ReadDoubleData+0x1260>
    3fc0:	add	r5, sp, #16
    3fc4:	add	r4, sp, #8
    3fc8:	ldr	r3, [sp, #4]
    3fcc:	add	sl, r3, sl, lsl #3
    3fd0:	sub	r7, r7, #-536870911	; 0xe0000001
    3fd4:	add	r5, r5, r7, lsl #3
    3fd8:	ldrd	r0, [r4, #8]!
    3fdc:	bl	51b60 <__aeabi_l2d>
    3fe0:	strd	r0, [sl], #8
    3fe4:	cmp	r4, r5
    3fe8:	bne	3fd8 <ReadDoubleData+0x538>
    3fec:	b	4d00 <ReadDoubleData+0x1260>
    3ff0:	ldr	r3, [r9]
    3ff4:	mov	r2, r7
    3ff8:	ldr	r1, [sp]
    3ffc:	add	r0, sp, #16
    4000:	bl	1588 <fread@plt>
    4004:	mov	r8, r0
    4008:	cmp	r7, #0
    400c:	ble	4d00 <ReadDoubleData+0x1260>
    4010:	add	r6, sp, #16
    4014:	add	r4, sp, #8
    4018:	ldr	r5, [sp, #4]
    401c:	sub	r7, r7, #-536870911	; 0xe0000001
    4020:	add	r6, r6, r7, lsl #3
    4024:	ldrd	r0, [r4, #8]!
    4028:	bl	51b60 <__aeabi_l2d>
    402c:	strd	r0, [r5], #8
    4030:	cmp	r4, r6
    4034:	bne	4024 <ReadDoubleData+0x584>
    4038:	b	4d00 <ReadDoubleData+0x1260>
    403c:	ldr	r8, [r9, #20]
    4040:	cmp	r8, #0
    4044:	beq	4184 <ReadDoubleData+0x6e4>
    4048:	cmp	r7, #256	; 0x100
    404c:	ble	4134 <ReadDoubleData+0x694>
    4050:	sub	r3, r7, #256	; 0x100
    4054:	cmp	r3, #0
    4058:	movle	sl, #0
    405c:	movle	r8, sl
    4060:	ble	40d4 <ReadDoubleData+0x634>
    4064:	ldr	fp, [sp, #4]
    4068:	mov	sl, #0
    406c:	mov	r8, sl
    4070:	add	r2, sp, #16
    4074:	str	r2, [sp, #8]
    4078:	str	r7, [sp, #12]
    407c:	mov	r7, r3
    4080:	ldr	r3, [r9]
    4084:	mov	r2, #256	; 0x100
    4088:	ldr	r1, [sp]
    408c:	ldr	r4, [sp, #8]
    4090:	mov	r0, r4
    4094:	bl	1588 <fread@plt>
    4098:	add	r8, r8, r0
    409c:	add	r6, sp, #2064	; 0x810
    40a0:	mov	r5, fp
    40a4:	mov	r0, r4
    40a8:	bl	1984 <Mat_uint64Swap>
    40ac:	bl	51b4c <__aeabi_ul2d>
    40b0:	strd	r0, [r5], #8
    40b4:	add	r4, r4, #8
    40b8:	cmp	r4, r6
    40bc:	bne	40a4 <ReadDoubleData+0x604>
    40c0:	add	sl, sl, #256	; 0x100
    40c4:	add	fp, fp, #2048	; 0x800
    40c8:	cmp	sl, r7
    40cc:	blt	4080 <ReadDoubleData+0x5e0>
    40d0:	ldr	r7, [sp, #12]
    40d4:	cmp	r7, sl
    40d8:	ble	4d00 <ReadDoubleData+0x1260>
    40dc:	sub	r7, r7, sl
    40e0:	ldr	r3, [r9]
    40e4:	mov	r2, r7
    40e8:	ldr	r1, [sp]
    40ec:	add	r0, sp, #16
    40f0:	bl	1588 <fread@plt>
    40f4:	add	r8, r8, r0
    40f8:	cmp	r7, #0
    40fc:	ble	4d00 <ReadDoubleData+0x1260>
    4100:	add	r5, sp, #16
    4104:	ldr	r3, [sp, #4]
    4108:	add	sl, r3, sl, lsl #3
    410c:	mov	r4, #0
    4110:	mov	r0, r5
    4114:	bl	1984 <Mat_uint64Swap>
    4118:	bl	51b4c <__aeabi_ul2d>
    411c:	strd	r0, [sl], #8
    4120:	add	r4, r4, #1
    4124:	add	r5, r5, #8
    4128:	cmp	r7, r4
    412c:	bne	4110 <ReadDoubleData+0x670>
    4130:	b	4d00 <ReadDoubleData+0x1260>
    4134:	ldr	r3, [r9]
    4138:	mov	r2, r7
    413c:	ldr	r1, [sp]
    4140:	add	r0, sp, #16
    4144:	bl	1588 <fread@plt>
    4148:	mov	r8, r0
    414c:	cmp	r7, #0
    4150:	ble	4d00 <ReadDoubleData+0x1260>
    4154:	add	r5, sp, #16
    4158:	ldr	r3, [sp, #4]
    415c:	mov	r4, r3
    4160:	add	r7, r3, r7, lsl #3
    4164:	mov	r0, r5
    4168:	bl	1984 <Mat_uint64Swap>
    416c:	bl	51b4c <__aeabi_ul2d>
    4170:	strd	r0, [r4], #8
    4174:	add	r5, r5, #8
    4178:	cmp	r4, r7
    417c:	bne	4164 <ReadDoubleData+0x6c4>
    4180:	b	4d00 <ReadDoubleData+0x1260>
    4184:	cmp	r7, #256	; 0x100
    4188:	ble	4264 <ReadDoubleData+0x7c4>
    418c:	sub	r3, r7, #256	; 0x100
    4190:	str	r3, [sp, #8]
    4194:	cmp	r3, #0
    4198:	movle	sl, r8
    419c:	ble	4208 <ReadDoubleData+0x768>
    41a0:	ldr	fp, [sp, #4]
    41a4:	mov	sl, r8
    41a8:	add	r3, sp, #16
    41ac:	add	r6, sp, #2048	; 0x800
    41b0:	add	r6, r6, #8
    41b4:	str	r7, [sp, #12]
    41b8:	mov	r7, r3
    41bc:	ldr	r3, [r9]
    41c0:	mov	r2, #256	; 0x100
    41c4:	ldr	r1, [sp]
    41c8:	mov	r0, r7
    41cc:	bl	1588 <fread@plt>
    41d0:	add	r8, r8, r0
    41d4:	sub	r4, r7, #8
    41d8:	mov	r5, fp
    41dc:	ldrd	r0, [r4, #8]!
    41e0:	bl	51b4c <__aeabi_ul2d>
    41e4:	strd	r0, [r5], #8
    41e8:	cmp	r4, r6
    41ec:	bne	41dc <ReadDoubleData+0x73c>
    41f0:	add	sl, sl, #256	; 0x100
    41f4:	add	fp, fp, #2048	; 0x800
    41f8:	ldr	r3, [sp, #8]
    41fc:	cmp	sl, r3
    4200:	blt	41bc <ReadDoubleData+0x71c>
    4204:	ldr	r7, [sp, #12]
    4208:	cmp	r7, sl
    420c:	ble	4d00 <ReadDoubleData+0x1260>
    4210:	sub	r7, r7, sl
    4214:	ldr	r3, [r9]
    4218:	mov	r2, r7
    421c:	ldr	r1, [sp]
    4220:	add	r0, sp, #16
    4224:	bl	1588 <fread@plt>
    4228:	add	r8, r8, r0
    422c:	cmp	r7, #0
    4230:	ble	4d00 <ReadDoubleData+0x1260>
    4234:	add	r5, sp, #16
    4238:	add	r4, sp, #8
    423c:	ldr	r3, [sp, #4]
    4240:	add	sl, r3, sl, lsl #3
    4244:	sub	r7, r7, #-536870911	; 0xe0000001
    4248:	add	r5, r5, r7, lsl #3
    424c:	ldrd	r0, [r4, #8]!
    4250:	bl	51b4c <__aeabi_ul2d>
    4254:	strd	r0, [sl], #8
    4258:	cmp	r4, r5
    425c:	bne	424c <ReadDoubleData+0x7ac>
    4260:	b	4d00 <ReadDoubleData+0x1260>
    4264:	ldr	r3, [r9]
    4268:	mov	r2, r7
    426c:	ldr	r1, [sp]
    4270:	add	r0, sp, #16
    4274:	bl	1588 <fread@plt>
    4278:	mov	r8, r0
    427c:	cmp	r7, #0
    4280:	ble	4d00 <ReadDoubleData+0x1260>
    4284:	add	r6, sp, #16
    4288:	add	r4, sp, #8
    428c:	ldr	r5, [sp, #4]
    4290:	sub	r7, r7, #-536870911	; 0xe0000001
    4294:	add	r6, r6, r7, lsl #3
    4298:	ldrd	r0, [r4, #8]!
    429c:	bl	51b4c <__aeabi_ul2d>
    42a0:	strd	r0, [r5], #8
    42a4:	cmp	r4, r6
    42a8:	bne	4298 <ReadDoubleData+0x7f8>
    42ac:	b	4d00 <ReadDoubleData+0x1260>
    42b0:	ldr	r8, [r9, #20]
    42b4:	cmp	r8, #0
    42b8:	beq	4404 <ReadDoubleData+0x964>
    42bc:	cmp	r7, #256	; 0x100
    42c0:	ble	43b0 <ReadDoubleData+0x910>
    42c4:	sub	r3, r7, #256	; 0x100
    42c8:	cmp	r3, #0
    42cc:	movle	sl, #0
    42d0:	movle	r8, sl
    42d4:	ble	434c <ReadDoubleData+0x8ac>
    42d8:	ldr	fp, [sp, #4]
    42dc:	mov	sl, #0
    42e0:	mov	r8, sl
    42e4:	add	r2, sp, #16
    42e8:	str	r2, [sp, #8]
    42ec:	add	r6, sp, #1040	; 0x410
    42f0:	str	r7, [sp, #12]
    42f4:	mov	r7, r3
    42f8:	ldr	r3, [r9]
    42fc:	mov	r2, #256	; 0x100
    4300:	ldr	r1, [sp]
    4304:	ldr	r4, [sp, #8]
    4308:	mov	r0, r4
    430c:	bl	1588 <fread@plt>
    4310:	add	r8, r8, r0
    4314:	mov	r5, fp
    4318:	mov	r0, r4
    431c:	bl	1a20 <Mat_int32Swap>
    4320:	vmov	s15, r0
    4324:	vcvt.f64.s32	d7, s15
    4328:	vstmia	r5!, {d7}
    432c:	add	r4, r4, #4
    4330:	cmp	r4, r6
    4334:	bne	4318 <ReadDoubleData+0x878>
    4338:	add	sl, sl, #256	; 0x100
    433c:	add	fp, fp, #2048	; 0x800
    4340:	cmp	sl, r7
    4344:	blt	42f8 <ReadDoubleData+0x858>
    4348:	ldr	r7, [sp, #12]
    434c:	cmp	r7, sl
    4350:	ble	4d00 <ReadDoubleData+0x1260>
    4354:	sub	r7, r7, sl
    4358:	ldr	r3, [r9]
    435c:	mov	r2, r7
    4360:	ldr	r1, [sp]
    4364:	add	r0, sp, #16
    4368:	bl	1588 <fread@plt>
    436c:	add	r8, r8, r0
    4370:	cmp	r7, #0
    4374:	ble	4d00 <ReadDoubleData+0x1260>
    4378:	add	r5, sp, #16
    437c:	ldr	r3, [sp, #4]
    4380:	add	sl, r3, sl, lsl #3
    4384:	mov	r4, #0
    4388:	mov	r0, r5
    438c:	bl	1a20 <Mat_int32Swap>
    4390:	vmov	s15, r0
    4394:	vcvt.f64.s32	d7, s15
    4398:	vstmia	sl!, {d7}
    439c:	add	r4, r4, #1
    43a0:	add	r5, r5, #4
    43a4:	cmp	r7, r4
    43a8:	bne	4388 <ReadDoubleData+0x8e8>
    43ac:	b	4d00 <ReadDoubleData+0x1260>
    43b0:	ldr	r3, [r9]
    43b4:	mov	r2, r7
    43b8:	ldr	r1, [sp]
    43bc:	add	r0, sp, #16
    43c0:	bl	1588 <fread@plt>
    43c4:	mov	r8, r0
    43c8:	cmp	r7, #0
    43cc:	ble	4d00 <ReadDoubleData+0x1260>
    43d0:	add	r5, sp, #16
    43d4:	ldr	r3, [sp, #4]
    43d8:	mov	r4, r3
    43dc:	add	r7, r3, r7, lsl #3
    43e0:	mov	r0, r5
    43e4:	bl	1a20 <Mat_int32Swap>
    43e8:	vmov	s15, r0
    43ec:	vcvt.f64.s32	d7, s15
    43f0:	vstmia	r4!, {d7}
    43f4:	add	r5, r5, #4
    43f8:	cmp	r4, r7
    43fc:	bne	43e0 <ReadDoubleData+0x940>
    4400:	b	4d00 <ReadDoubleData+0x1260>
    4404:	cmp	r7, #256	; 0x100
    4408:	ble	44d4 <ReadDoubleData+0xa34>
    440c:	sub	fp, r7, #256	; 0x100
    4410:	cmp	fp, #0
    4414:	movle	r5, r8
    4418:	ble	4474 <ReadDoubleData+0x9d4>
    441c:	ldr	r6, [sp, #4]
    4420:	mov	r5, r8
    4424:	add	sl, sp, #16
    4428:	add	r4, sl, #1020	; 0x3fc
    442c:	ldr	r3, [r9]
    4430:	mov	r2, #256	; 0x100
    4434:	ldr	r1, [sp]
    4438:	mov	r0, sl
    443c:	bl	1588 <fread@plt>
    4440:	add	r8, r8, r0
    4444:	sub	r3, sl, #4
    4448:	mov	r2, r6
    444c:	ldr	r1, [r3, #4]!
    4450:	vmov	s14, r1
    4454:	vcvt.f64.s32	d7, s14
    4458:	vstmia	r2!, {d7}
    445c:	cmp	r3, r4
    4460:	bne	444c <ReadDoubleData+0x9ac>
    4464:	add	r5, r5, #256	; 0x100
    4468:	add	r6, r6, #2048	; 0x800
    446c:	cmp	r5, fp
    4470:	blt	442c <ReadDoubleData+0x98c>
    4474:	cmp	r7, r5
    4478:	ble	4d00 <ReadDoubleData+0x1260>
    447c:	sub	r7, r7, r5
    4480:	ldr	r3, [r9]
    4484:	mov	r2, r7
    4488:	ldr	r1, [sp]
    448c:	add	r0, sp, #16
    4490:	bl	1588 <fread@plt>
    4494:	add	r8, r8, r0
    4498:	cmp	r7, #0
    449c:	ble	4d00 <ReadDoubleData+0x1260>
    44a0:	add	r2, sp, #16
    44a4:	add	r3, sp, #12
    44a8:	ldr	r1, [sp, #4]
    44ac:	add	r5, r1, r5, lsl #3
    44b0:	sub	r7, r7, #-1073741823	; 0xc0000001
    44b4:	add	r2, r2, r7, lsl #2
    44b8:	ldr	r1, [r3, #4]!
    44bc:	vmov	s14, r1
    44c0:	vcvt.f64.s32	d7, s14
    44c4:	vstmia	r5!, {d7}
    44c8:	cmp	r3, r2
    44cc:	bne	44b8 <ReadDoubleData+0xa18>
    44d0:	b	4d00 <ReadDoubleData+0x1260>
    44d4:	ldr	r3, [r9]
    44d8:	mov	r2, r7
    44dc:	ldr	r1, [sp]
    44e0:	add	r0, sp, #16
    44e4:	bl	1588 <fread@plt>
    44e8:	mov	r8, r0
    44ec:	cmp	r7, #0
    44f0:	ble	4d00 <ReadDoubleData+0x1260>
    44f4:	add	r1, sp, #16
    44f8:	add	r3, sp, #12
    44fc:	ldr	r2, [sp, #4]
    4500:	sub	r7, r7, #-1073741823	; 0xc0000001
    4504:	add	r1, r1, r7, lsl #2
    4508:	ldr	r0, [r3, #4]!
    450c:	vmov	s14, r0
    4510:	vcvt.f64.s32	d7, s14
    4514:	vstmia	r2!, {d7}
    4518:	cmp	r3, r1
    451c:	bne	4508 <ReadDoubleData+0xa68>
    4520:	b	4d00 <ReadDoubleData+0x1260>
    4524:	ldr	r8, [r9, #20]
    4528:	cmp	r8, #0
    452c:	beq	4678 <ReadDoubleData+0xbd8>
    4530:	cmp	r7, #256	; 0x100
    4534:	ble	4624 <ReadDoubleData+0xb84>
    4538:	sub	r3, r7, #256	; 0x100
    453c:	cmp	r3, #0
    4540:	movle	sl, #0
    4544:	movle	r8, sl
    4548:	ble	45c0 <ReadDoubleData+0xb20>
    454c:	ldr	fp, [sp, #4]
    4550:	mov	sl, #0
    4554:	mov	r8, sl
    4558:	add	r2, sp, #16
    455c:	str	r2, [sp, #8]
    4560:	add	r6, sp, #1040	; 0x410
    4564:	str	r7, [sp, #12]
    4568:	mov	r7, r3
    456c:	ldr	r3, [r9]
    4570:	mov	r2, #256	; 0x100
    4574:	ldr	r1, [sp]
    4578:	ldr	r4, [sp, #8]
    457c:	mov	r0, r4
    4580:	bl	1588 <fread@plt>
    4584:	add	r8, r8, r0
    4588:	mov	r5, fp
    458c:	mov	r0, r4
    4590:	bl	1a88 <Mat_uint32Swap>
    4594:	vmov	s15, r0
    4598:	vcvt.f64.u32	d7, s15
    459c:	vstmia	r5!, {d7}
    45a0:	add	r4, r4, #4
    45a4:	cmp	r4, r6
    45a8:	bne	458c <ReadDoubleData+0xaec>
    45ac:	add	sl, sl, #256	; 0x100
    45b0:	add	fp, fp, #2048	; 0x800
    45b4:	cmp	sl, r7
    45b8:	blt	456c <ReadDoubleData+0xacc>
    45bc:	ldr	r7, [sp, #12]
    45c0:	cmp	r7, sl
    45c4:	ble	4d00 <ReadDoubleData+0x1260>
    45c8:	sub	r7, r7, sl
    45cc:	ldr	r3, [r9]
    45d0:	mov	r2, r7
    45d4:	ldr	r1, [sp]
    45d8:	add	r0, sp, #16
    45dc:	bl	1588 <fread@plt>
    45e0:	add	r8, r8, r0
    45e4:	cmp	r7, #0
    45e8:	ble	4d00 <ReadDoubleData+0x1260>
    45ec:	add	r5, sp, #16
    45f0:	ldr	r3, [sp, #4]
    45f4:	add	sl, r3, sl, lsl #3
    45f8:	mov	r4, #0
    45fc:	mov	r0, r5
    4600:	bl	1a88 <Mat_uint32Swap>
    4604:	vmov	s15, r0
    4608:	vcvt.f64.u32	d7, s15
    460c:	vstmia	sl!, {d7}
    4610:	add	r4, r4, #1
    4614:	add	r5, r5, #4
    4618:	cmp	r7, r4
    461c:	bne	45fc <ReadDoubleData+0xb5c>
    4620:	b	4d00 <ReadDoubleData+0x1260>
    4624:	ldr	r3, [r9]
    4628:	mov	r2, r7
    462c:	ldr	r1, [sp]
    4630:	add	r0, sp, #16
    4634:	bl	1588 <fread@plt>
    4638:	mov	r8, r0
    463c:	cmp	r7, #0
    4640:	ble	4d00 <ReadDoubleData+0x1260>
    4644:	add	r5, sp, #16
    4648:	ldr	r3, [sp, #4]
    464c:	mov	r4, r3
    4650:	add	r7, r3, r7, lsl #3
    4654:	mov	r0, r5
    4658:	bl	1a88 <Mat_uint32Swap>
    465c:	vmov	s15, r0
    4660:	vcvt.f64.u32	d7, s15
    4664:	vstmia	r4!, {d7}
    4668:	add	r5, r5, #4
    466c:	cmp	r4, r7
    4670:	bne	4654 <ReadDoubleData+0xbb4>
    4674:	b	4d00 <ReadDoubleData+0x1260>
    4678:	cmp	r7, #256	; 0x100
    467c:	ble	4748 <ReadDoubleData+0xca8>
    4680:	sub	fp, r7, #256	; 0x100
    4684:	cmp	fp, #0
    4688:	movle	r5, r8
    468c:	ble	46e8 <ReadDoubleData+0xc48>
    4690:	ldr	r6, [sp, #4]
    4694:	mov	r5, r8
    4698:	add	sl, sp, #16
    469c:	add	r4, sl, #1020	; 0x3fc
    46a0:	ldr	r3, [r9]
    46a4:	mov	r2, #256	; 0x100
    46a8:	ldr	r1, [sp]
    46ac:	mov	r0, sl
    46b0:	bl	1588 <fread@plt>
    46b4:	add	r8, r8, r0
    46b8:	sub	r3, sl, #4
    46bc:	mov	r2, r6
    46c0:	ldr	r1, [r3, #4]!
    46c4:	vmov	s14, r1
    46c8:	vcvt.f64.u32	d7, s14
    46cc:	vstmia	r2!, {d7}
    46d0:	cmp	r3, r4
    46d4:	bne	46c0 <ReadDoubleData+0xc20>
    46d8:	add	r5, r5, #256	; 0x100
    46dc:	add	r6, r6, #2048	; 0x800
    46e0:	cmp	r5, fp
    46e4:	blt	46a0 <ReadDoubleData+0xc00>
    46e8:	cmp	r7, r5
    46ec:	ble	4d00 <ReadDoubleData+0x1260>
    46f0:	sub	r7, r7, r5
    46f4:	ldr	r3, [r9]
    46f8:	mov	r2, r7
    46fc:	ldr	r1, [sp]
    4700:	add	r0, sp, #16
    4704:	bl	1588 <fread@plt>
    4708:	add	r8, r8, r0
    470c:	cmp	r7, #0
    4710:	ble	4d00 <ReadDoubleData+0x1260>
    4714:	add	r2, sp, #16
    4718:	add	r3, sp, #12
    471c:	ldr	r1, [sp, #4]
    4720:	add	r5, r1, r5, lsl #3
    4724:	sub	r7, r7, #-1073741823	; 0xc0000001
    4728:	add	r2, r2, r7, lsl #2
    472c:	ldr	r1, [r3, #4]!
    4730:	vmov	s14, r1
    4734:	vcvt.f64.u32	d7, s14
    4738:	vstmia	r5!, {d7}
    473c:	cmp	r3, r2
    4740:	bne	472c <ReadDoubleData+0xc8c>
    4744:	b	4d00 <ReadDoubleData+0x1260>
    4748:	ldr	r3, [r9]
    474c:	mov	r2, r7
    4750:	ldr	r1, [sp]
    4754:	add	r0, sp, #16
    4758:	bl	1588 <fread@plt>
    475c:	mov	r8, r0
    4760:	cmp	r7, #0
    4764:	ble	4d00 <ReadDoubleData+0x1260>
    4768:	add	r1, sp, #16
    476c:	add	r3, sp, #12
    4770:	ldr	r2, [sp, #4]
    4774:	sub	r7, r7, #-1073741823	; 0xc0000001
    4778:	add	r1, r1, r7, lsl #2
    477c:	ldr	r0, [r3, #4]!
    4780:	vmov	s14, r0
    4784:	vcvt.f64.u32	d7, s14
    4788:	vstmia	r2!, {d7}
    478c:	cmp	r3, r1
    4790:	bne	477c <ReadDoubleData+0xcdc>
    4794:	b	4d00 <ReadDoubleData+0x1260>
    4798:	ldr	r8, [r9, #20]
    479c:	cmp	r8, #0
    47a0:	beq	48e8 <ReadDoubleData+0xe48>
    47a4:	cmp	r7, #256	; 0x100
    47a8:	ble	4894 <ReadDoubleData+0xdf4>
    47ac:	sub	r3, r7, #256	; 0x100
    47b0:	cmp	r3, #0
    47b4:	movle	sl, #0
    47b8:	movle	r8, sl
    47bc:	ble	4834 <ReadDoubleData+0xd94>
    47c0:	ldr	fp, [sp, #4]
    47c4:	mov	sl, #0
    47c8:	mov	r8, sl
    47cc:	add	r2, sp, #16
    47d0:	str	r2, [sp, #8]
    47d4:	add	r6, sp, #528	; 0x210
    47d8:	str	r7, [sp, #12]
    47dc:	mov	r7, r3
    47e0:	ldr	r3, [r9]
    47e4:	mov	r2, #256	; 0x100
    47e8:	ldr	r1, [sp]
    47ec:	ldr	r4, [sp, #8]
    47f0:	mov	r0, r4
    47f4:	bl	1588 <fread@plt>
    47f8:	add	r8, r8, r0
    47fc:	mov	r5, fp
    4800:	mov	r0, r4
    4804:	bl	1ae4 <Mat_int16Swap>
    4808:	vmov	s15, r0
    480c:	vcvt.f64.s32	d7, s15
    4810:	vstmia	r5!, {d7}
    4814:	add	r4, r4, #2
    4818:	cmp	r6, r4
    481c:	bne	4800 <ReadDoubleData+0xd60>
    4820:	add	sl, sl, #256	; 0x100
    4824:	add	fp, fp, #2048	; 0x800
    4828:	cmp	sl, r7
    482c:	blt	47e0 <ReadDoubleData+0xd40>
    4830:	ldr	r7, [sp, #12]
    4834:	cmp	r7, sl
    4838:	ble	4d00 <ReadDoubleData+0x1260>
    483c:	sub	r7, r7, sl
    4840:	ldr	r3, [r9]
    4844:	mov	r2, r7
    4848:	ldr	r1, [sp]
    484c:	add	r0, sp, #16
    4850:	bl	1588 <fread@plt>
    4854:	add	r8, r8, r0
    4858:	cmp	r7, #0
    485c:	ble	4d00 <ReadDoubleData+0x1260>
    4860:	add	r4, sp, #16
    4864:	ldr	r3, [sp, #4]
    4868:	add	sl, r3, sl, lsl #3
    486c:	add	r7, r4, r7, lsl #1
    4870:	mov	r0, r4
    4874:	bl	1ae4 <Mat_int16Swap>
    4878:	vmov	s15, r0
    487c:	vcvt.f64.s32	d7, s15
    4880:	vstmia	sl!, {d7}
    4884:	add	r4, r4, #2
    4888:	cmp	r7, r4
    488c:	bne	4870 <ReadDoubleData+0xdd0>
    4890:	b	4d00 <ReadDoubleData+0x1260>
    4894:	ldr	r3, [r9]
    4898:	mov	r2, r7
    489c:	ldr	r1, [sp]
    48a0:	add	r0, sp, #16
    48a4:	bl	1588 <fread@plt>
    48a8:	mov	r8, r0
    48ac:	cmp	r7, #0
    48b0:	ble	4d00 <ReadDoubleData+0x1260>
    48b4:	add	r5, sp, #16
    48b8:	ldr	r3, [sp, #4]
    48bc:	mov	r4, r3
    48c0:	add	r7, r3, r7, lsl #3
    48c4:	mov	r0, r5
    48c8:	bl	1ae4 <Mat_int16Swap>
    48cc:	vmov	s15, r0
    48d0:	vcvt.f64.s32	d7, s15
    48d4:	vstmia	r4!, {d7}
    48d8:	add	r5, r5, #2
    48dc:	cmp	r7, r4
    48e0:	bne	48c4 <ReadDoubleData+0xe24>
    48e4:	b	4d00 <ReadDoubleData+0x1260>
    48e8:	cmp	r7, #256	; 0x100
    48ec:	ble	49bc <ReadDoubleData+0xf1c>
    48f0:	sub	fp, r7, #256	; 0x100
    48f4:	cmp	fp, #0
    48f8:	movle	r5, r8
    48fc:	ble	495c <ReadDoubleData+0xebc>
    4900:	ldr	r6, [sp, #4]
    4904:	mov	r5, r8
    4908:	add	sl, sp, #16
    490c:	add	r4, sl, #508	; 0x1fc
    4910:	add	r4, r4, #2
    4914:	ldr	r3, [r9]
    4918:	mov	r2, #256	; 0x100
    491c:	ldr	r1, [sp]
    4920:	mov	r0, sl
    4924:	bl	1588 <fread@plt>
    4928:	add	r8, r8, r0
    492c:	sub	r3, sl, #2
    4930:	mov	r2, r6
    4934:	ldrsh	r1, [r3, #2]!
    4938:	vmov	s14, r1
    493c:	vcvt.f64.s32	d7, s14
    4940:	vstmia	r2!, {d7}
    4944:	cmp	r3, r4
    4948:	bne	4934 <ReadDoubleData+0xe94>
    494c:	add	r5, r5, #256	; 0x100
    4950:	add	r6, r6, #2048	; 0x800
    4954:	cmp	r5, fp
    4958:	blt	4914 <ReadDoubleData+0xe74>
    495c:	cmp	r7, r5
    4960:	ble	4d00 <ReadDoubleData+0x1260>
    4964:	sub	r7, r7, r5
    4968:	ldr	r3, [r9]
    496c:	mov	r2, r7
    4970:	ldr	r1, [sp]
    4974:	add	r0, sp, #16
    4978:	bl	1588 <fread@plt>
    497c:	add	r8, r8, r0
    4980:	cmp	r7, #0
    4984:	ble	4d00 <ReadDoubleData+0x1260>
    4988:	add	r2, sp, #16
    498c:	add	r3, sp, #14
    4990:	ldr	r1, [sp, #4]
    4994:	add	r5, r1, r5, lsl #3
    4998:	sub	r7, r7, #-2147483647	; 0x80000001
    499c:	add	r2, r2, r7, lsl #1
    49a0:	ldrsh	r1, [r3, #2]!
    49a4:	vmov	s14, r1
    49a8:	vcvt.f64.s32	d7, s14
    49ac:	vstmia	r5!, {d7}
    49b0:	cmp	r3, r2
    49b4:	bne	49a0 <ReadDoubleData+0xf00>
    49b8:	b	4d00 <ReadDoubleData+0x1260>
    49bc:	ldr	r3, [r9]
    49c0:	mov	r2, r7
    49c4:	ldr	r1, [sp]
    49c8:	add	r0, sp, #16
    49cc:	bl	1588 <fread@plt>
    49d0:	mov	r8, r0
    49d4:	cmp	r7, #0
    49d8:	ble	4d00 <ReadDoubleData+0x1260>
    49dc:	add	r1, sp, #16
    49e0:	add	r3, sp, #14
    49e4:	ldr	r2, [sp, #4]
    49e8:	sub	r7, r7, #-2147483647	; 0x80000001
    49ec:	add	r1, r1, r7, lsl #1
    49f0:	ldrsh	r0, [r3, #2]!
    49f4:	vmov	s14, r0
    49f8:	vcvt.f64.s32	d7, s14
    49fc:	vstmia	r2!, {d7}
    4a00:	cmp	r1, r3
    4a04:	bne	49f0 <ReadDoubleData+0xf50>
    4a08:	b	4d00 <ReadDoubleData+0x1260>
    4a0c:	ldr	r8, [r9, #20]
    4a10:	cmp	r8, #0
    4a14:	beq	4b5c <ReadDoubleData+0x10bc>
    4a18:	cmp	r7, #256	; 0x100
    4a1c:	ble	4b08 <ReadDoubleData+0x1068>
    4a20:	sub	r3, r7, #256	; 0x100
    4a24:	cmp	r3, #0
    4a28:	movle	sl, #0
    4a2c:	movle	r8, sl
    4a30:	ble	4aa8 <ReadDoubleData+0x1008>
    4a34:	ldr	fp, [sp, #4]
    4a38:	mov	sl, #0
    4a3c:	mov	r8, sl
    4a40:	add	r2, sp, #16
    4a44:	str	r2, [sp, #8]
    4a48:	add	r6, sp, #528	; 0x210
    4a4c:	str	r7, [sp, #12]
    4a50:	mov	r7, r3
    4a54:	ldr	r3, [r9]
    4a58:	mov	r2, #256	; 0x100
    4a5c:	ldr	r1, [sp]
    4a60:	ldr	r4, [sp, #8]
    4a64:	mov	r0, r4
    4a68:	bl	1588 <fread@plt>
    4a6c:	add	r8, r8, r0
    4a70:	mov	r5, fp
    4a74:	mov	r0, r4
    4a78:	bl	1b1c <Mat_uint16Swap>
    4a7c:	vmov	s15, r0
    4a80:	vcvt.f64.u32	d7, s15
    4a84:	vstmia	r5!, {d7}
    4a88:	add	r4, r4, #2
    4a8c:	cmp	r4, r6
    4a90:	bne	4a74 <ReadDoubleData+0xfd4>
    4a94:	add	sl, sl, #256	; 0x100
    4a98:	add	fp, fp, #2048	; 0x800
    4a9c:	cmp	sl, r7
    4aa0:	blt	4a54 <ReadDoubleData+0xfb4>
    4aa4:	ldr	r7, [sp, #12]
    4aa8:	cmp	r7, sl
    4aac:	ble	4d00 <ReadDoubleData+0x1260>
    4ab0:	sub	r7, r7, sl
    4ab4:	ldr	r3, [r9]
    4ab8:	mov	r2, r7
    4abc:	ldr	r1, [sp]
    4ac0:	add	r0, sp, #16
    4ac4:	bl	1588 <fread@plt>
    4ac8:	add	r8, r8, r0
    4acc:	cmp	r7, #0
    4ad0:	ble	4d00 <ReadDoubleData+0x1260>
    4ad4:	add	r4, sp, #16
    4ad8:	ldr	r3, [sp, #4]
    4adc:	add	sl, r3, sl, lsl #3
    4ae0:	add	r7, r4, r7, lsl #1
    4ae4:	mov	r0, r4
    4ae8:	bl	1b1c <Mat_uint16Swap>
    4aec:	vmov	s15, r0
    4af0:	vcvt.f64.u32	d7, s15
    4af4:	vstmia	sl!, {d7}
    4af8:	add	r4, r4, #2
    4afc:	cmp	r4, r7
    4b00:	bne	4ae4 <ReadDoubleData+0x1044>
    4b04:	b	4d00 <ReadDoubleData+0x1260>
    4b08:	ldr	r3, [r9]
    4b0c:	mov	r2, r7
    4b10:	ldr	r1, [sp]
    4b14:	add	r0, sp, #16
    4b18:	bl	1588 <fread@plt>
    4b1c:	mov	r8, r0
    4b20:	cmp	r7, #0
    4b24:	ble	4d00 <ReadDoubleData+0x1260>
    4b28:	add	r5, sp, #16
    4b2c:	ldr	r3, [sp, #4]
    4b30:	mov	r4, r3
    4b34:	add	r7, r3, r7, lsl #3
    4b38:	mov	r0, r5
    4b3c:	bl	1b1c <Mat_uint16Swap>
    4b40:	vmov	s15, r0
    4b44:	vcvt.f64.u32	d7, s15
    4b48:	vstmia	r4!, {d7}
    4b4c:	add	r5, r5, #2
    4b50:	cmp	r4, r7
    4b54:	bne	4b38 <ReadDoubleData+0x1098>
    4b58:	b	4d00 <ReadDoubleData+0x1260>
    4b5c:	cmp	r7, #256	; 0x100
    4b60:	ble	4c30 <ReadDoubleData+0x1190>
    4b64:	sub	fp, r7, #256	; 0x100
    4b68:	cmp	fp, #0
    4b6c:	movle	r5, r8
    4b70:	ble	4bd0 <ReadDoubleData+0x1130>
    4b74:	ldr	r6, [sp, #4]
    4b78:	mov	r5, r8
    4b7c:	add	sl, sp, #16
    4b80:	add	r4, sl, #508	; 0x1fc
    4b84:	add	r4, r4, #2
    4b88:	ldr	r3, [r9]
    4b8c:	mov	r2, #256	; 0x100
    4b90:	ldr	r1, [sp]
    4b94:	mov	r0, sl
    4b98:	bl	1588 <fread@plt>
    4b9c:	add	r8, r8, r0
    4ba0:	sub	r3, sl, #2
    4ba4:	mov	r2, r6
    4ba8:	ldrh	r1, [r3, #2]!
    4bac:	vmov	s14, r1
    4bb0:	vcvt.f64.u32	d7, s14
    4bb4:	vstmia	r2!, {d7}
    4bb8:	cmp	r3, r4
    4bbc:	bne	4ba8 <ReadDoubleData+0x1108>
    4bc0:	add	r5, r5, #256	; 0x100
    4bc4:	add	r6, r6, #2048	; 0x800
    4bc8:	cmp	r5, fp
    4bcc:	blt	4b88 <ReadDoubleData+0x10e8>
    4bd0:	cmp	r7, r5
    4bd4:	ble	4d00 <ReadDoubleData+0x1260>
    4bd8:	sub	r7, r7, r5
    4bdc:	ldr	r3, [r9]
    4be0:	mov	r2, r7
    4be4:	ldr	r1, [sp]
    4be8:	add	r0, sp, #16
    4bec:	bl	1588 <fread@plt>
    4bf0:	add	r8, r8, r0
    4bf4:	cmp	r7, #0
    4bf8:	ble	4d00 <ReadDoubleData+0x1260>
    4bfc:	add	r2, sp, #16
    4c00:	add	r3, sp, #14
    4c04:	ldr	r1, [sp, #4]
    4c08:	add	r5, r1, r5, lsl #3
    4c0c:	sub	r7, r7, #-2147483647	; 0x80000001
    4c10:	add	r2, r2, r7, lsl #1
    4c14:	ldrh	r1, [r3, #2]!
    4c18:	vmov	s14, r1
    4c1c:	vcvt.f64.u32	d7, s14
    4c20:	vstmia	r5!, {d7}
    4c24:	cmp	r3, r2
    4c28:	bne	4c14 <ReadDoubleData+0x1174>
    4c2c:	b	4d00 <ReadDoubleData+0x1260>
    4c30:	ldr	r3, [r9]
    4c34:	mov	r2, r7
    4c38:	ldr	r1, [sp]
    4c3c:	add	r0, sp, #16
    4c40:	bl	1588 <fread@plt>
    4c44:	mov	r8, r0
    4c48:	cmp	r7, #0
    4c4c:	ble	4d00 <ReadDoubleData+0x1260>
    4c50:	add	r1, sp, #16
    4c54:	add	r3, sp, #14
    4c58:	ldr	r2, [sp, #4]
    4c5c:	sub	r7, r7, #-2147483647	; 0x80000001
    4c60:	add	r1, r1, r7, lsl #1
    4c64:	ldrh	r0, [r3, #2]!
    4c68:	vmov	s14, r0
    4c6c:	vcvt.f64.u32	d7, s14
    4c70:	vstmia	r2!, {d7}
    4c74:	cmp	r3, r1
    4c78:	bne	4c64 <ReadDoubleData+0x11c4>
    4c7c:	b	4d00 <ReadDoubleData+0x1260>
    4c80:	cmp	r7, #256	; 0x100
    4c84:	ble	4d14 <ReadDoubleData+0x1274>
    4c88:	sub	fp, r7, #256	; 0x100
    4c8c:	cmp	fp, #0
    4c90:	movle	r5, #0
    4c94:	movle	r8, r5
    4c98:	ble	4cf8 <ReadDoubleData+0x1258>
    4c9c:	ldr	r6, [sp, #4]
    4ca0:	mov	r5, #0
    4ca4:	mov	r8, r5
    4ca8:	add	sl, sp, #16
    4cac:	add	r4, sl, #255	; 0xff
    4cb0:	ldr	r3, [r9]
    4cb4:	mov	r2, #256	; 0x100
    4cb8:	ldr	r1, [sp]
    4cbc:	mov	r0, sl
    4cc0:	bl	1588 <fread@plt>
    4cc4:	add	r8, r8, r0
    4cc8:	sub	r3, sl, #1
    4ccc:	mov	r2, r6
    4cd0:	ldrsb	r1, [r3, #1]!
    4cd4:	vmov	s14, r1
    4cd8:	vcvt.f64.s32	d7, s14
    4cdc:	vstmia	r2!, {d7}
    4ce0:	cmp	r3, r4
    4ce4:	bne	4cd0 <ReadDoubleData+0x1230>
    4ce8:	add	r5, r5, #256	; 0x100
    4cec:	add	r6, r6, #2048	; 0x800
    4cf0:	cmp	r5, fp
    4cf4:	blt	4cb0 <ReadDoubleData+0x1210>
    4cf8:	cmp	r7, r5
    4cfc:	bgt	4d64 <ReadDoubleData+0x12c4>
    4d00:	ldr	r3, [sp]
    4d04:	mul	r0, r3, r8
    4d08:	add	sp, sp, #2064	; 0x810
    4d0c:	add	sp, sp, #4
    4d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4d14:	ldr	r3, [r9]
    4d18:	mov	r2, r7
    4d1c:	ldr	r1, [sp]
    4d20:	add	r0, sp, #16
    4d24:	bl	1588 <fread@plt>
    4d28:	mov	r8, r0
    4d2c:	cmp	r7, #0
    4d30:	ble	4d00 <ReadDoubleData+0x1260>
    4d34:	add	r1, sp, #16
    4d38:	add	r3, sp, #15
    4d3c:	ldr	r2, [sp, #4]
    4d40:	sub	r7, r7, #1
    4d44:	add	r1, r1, r7
    4d48:	ldrsb	r0, [r3, #1]!
    4d4c:	vmov	s14, r0
    4d50:	vcvt.f64.s32	d7, s14
    4d54:	vstmia	r2!, {d7}
    4d58:	cmp	r1, r3
    4d5c:	bne	4d48 <ReadDoubleData+0x12a8>
    4d60:	b	4d00 <ReadDoubleData+0x1260>
    4d64:	sub	r7, r7, r5
    4d68:	ldr	r3, [r9]
    4d6c:	mov	r2, r7
    4d70:	ldr	r1, [sp]
    4d74:	add	r0, sp, #16
    4d78:	bl	1588 <fread@plt>
    4d7c:	add	r8, r8, r0
    4d80:	cmp	r7, #0
    4d84:	ble	4d00 <ReadDoubleData+0x1260>
    4d88:	add	r2, sp, #16
    4d8c:	add	r3, sp, #15
    4d90:	ldr	r1, [sp, #4]
    4d94:	add	r5, r1, r5, lsl #3
    4d98:	sub	r7, r7, #1
    4d9c:	add	r2, r2, r7
    4da0:	ldrsb	r1, [r3, #1]!
    4da4:	vmov	s14, r1
    4da8:	vcvt.f64.s32	d7, s14
    4dac:	vstmia	r5!, {d7}
    4db0:	cmp	r3, r2
    4db4:	bne	4da0 <ReadDoubleData+0x1300>
    4db8:	b	4d00 <ReadDoubleData+0x1260>
    4dbc:	cmp	r7, #256	; 0x100
    4dc0:	ble	4e94 <ReadDoubleData+0x13f4>
    4dc4:	sub	fp, r7, #256	; 0x100
    4dc8:	cmp	fp, #0
    4dcc:	movle	r5, #0
    4dd0:	movle	r8, r5
    4dd4:	ble	4e34 <ReadDoubleData+0x1394>
    4dd8:	ldr	r6, [sp, #4]
    4ddc:	mov	r5, #0
    4de0:	mov	r8, r5
    4de4:	add	sl, sp, #16
    4de8:	add	r4, sl, #255	; 0xff
    4dec:	ldr	r3, [r9]
    4df0:	mov	r2, #256	; 0x100
    4df4:	ldr	r1, [sp]
    4df8:	mov	r0, sl
    4dfc:	bl	1588 <fread@plt>
    4e00:	add	r8, r8, r0
    4e04:	sub	r3, sl, #1
    4e08:	mov	r2, r6
    4e0c:	ldrb	r1, [r3, #1]!
    4e10:	vmov	s14, r1
    4e14:	vcvt.f64.u32	d7, s14
    4e18:	vstmia	r2!, {d7}
    4e1c:	cmp	r4, r3
    4e20:	bne	4e0c <ReadDoubleData+0x136c>
    4e24:	add	r5, r5, #256	; 0x100
    4e28:	add	r6, r6, #2048	; 0x800
    4e2c:	cmp	r5, fp
    4e30:	blt	4dec <ReadDoubleData+0x134c>
    4e34:	cmp	r7, r5
    4e38:	ble	4d00 <ReadDoubleData+0x1260>
    4e3c:	sub	r7, r7, r5
    4e40:	ldr	r3, [r9]
    4e44:	mov	r2, r7
    4e48:	ldr	r1, [sp]
    4e4c:	add	r0, sp, #16
    4e50:	bl	1588 <fread@plt>
    4e54:	add	r8, r8, r0
    4e58:	cmp	r7, #0
    4e5c:	ble	4d00 <ReadDoubleData+0x1260>
    4e60:	add	r2, sp, #16
    4e64:	add	r3, sp, #15
    4e68:	ldr	r1, [sp, #4]
    4e6c:	add	r5, r1, r5, lsl #3
    4e70:	sub	r7, r7, #1
    4e74:	add	r2, r2, r7
    4e78:	ldrb	r1, [r3, #1]!
    4e7c:	vmov	s14, r1
    4e80:	vcvt.f64.u32	d7, s14
    4e84:	vstmia	r5!, {d7}
    4e88:	cmp	r2, r3
    4e8c:	bne	4e78 <ReadDoubleData+0x13d8>
    4e90:	b	4d00 <ReadDoubleData+0x1260>
    4e94:	ldr	r3, [r9]
    4e98:	mov	r2, r7
    4e9c:	ldr	r1, [sp]
    4ea0:	add	r0, sp, #16
    4ea4:	bl	1588 <fread@plt>
    4ea8:	mov	r8, r0
    4eac:	cmp	r7, #0
    4eb0:	ble	4d00 <ReadDoubleData+0x1260>
    4eb4:	add	r1, sp, #16
    4eb8:	add	r3, sp, #15
    4ebc:	ldr	r2, [sp, #4]
    4ec0:	sub	r7, r7, #1
    4ec4:	add	r1, r1, r7
    4ec8:	ldrb	r0, [r3, #1]!
    4ecc:	vmov	s14, r0
    4ed0:	vcvt.f64.u32	d7, s14
    4ed4:	vstmia	r2!, {d7}
    4ed8:	cmp	r3, r1
    4edc:	bne	4ec8 <ReadDoubleData+0x1428>
    4ee0:	b	4d00 <ReadDoubleData+0x1260>
    4ee4:	mov	r0, #0
    4ee8:	bx	lr
    4eec:	mov	r0, #0
    4ef0:	b	4d08 <ReadDoubleData+0x1268>

00004ef4 <ReadCompressedDoubleData>:
    4ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4ef8:	sub	sp, sp, #1040	; 0x410
    4efc:	sub	sp, sp, #4
    4f00:	str	r0, [sp]
    4f04:	str	r1, [sp, #4]
    4f08:	str	r2, [sp, #8]
    4f0c:	mov	r4, r3
    4f10:	ldr	fp, [sp, #1080]	; 0x438
    4f14:	mov	r0, r3
    4f18:	bl	1600 <Mat_SizeOf@plt>
    4f1c:	mov	r8, r0
    4f20:	sub	r4, r4, #1
    4f24:	cmp	r4, #12
    4f28:	addls	pc, pc, r4, lsl #2
    4f2c:	b	61c4 <ReadCompressedDoubleData+0x12d0>
    4f30:	b	60a8 <ReadCompressedDoubleData+0x11b4>
    4f34:	b	5f80 <ReadCompressedDoubleData+0x108c>
    4f38:	b	5af0 <ReadCompressedDoubleData+0xbfc>
    4f3c:	b	5d38 <ReadCompressedDoubleData+0xe44>
    4f40:	b	5658 <ReadCompressedDoubleData+0x764>
    4f44:	b	58a4 <ReadCompressedDoubleData+0x9b0>
    4f48:	b	4fc8 <ReadCompressedDoubleData+0xd4>
    4f4c:	b	61c4 <ReadCompressedDoubleData+0x12d0>
    4f50:	b	4f64 <ReadCompressedDoubleData+0x70>
    4f54:	b	61c4 <ReadCompressedDoubleData+0x12d0>
    4f58:	b	61c4 <ReadCompressedDoubleData+0x12d0>
    4f5c:	b	51e8 <ReadCompressedDoubleData+0x2f4>
    4f60:	b	5420 <ReadCompressedDoubleData+0x52c>
    4f64:	ldr	r0, [sp]
    4f68:	ldr	r3, [r0, #20]
    4f6c:	cmp	r3, #0
    4f70:	beq	4fb0 <ReadCompressedDoubleData+0xbc>
    4f74:	mul	r3, r8, fp
    4f78:	ldr	r5, [sp, #8]
    4f7c:	mov	r2, r5
    4f80:	ldr	r1, [sp, #4]
    4f84:	bl	3418 <InflateData>
    4f88:	cmp	fp, #0
    4f8c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    4f90:	mov	r4, #0
    4f94:	mov	r0, r5
    4f98:	bl	1b94 <Mat_doubleSwap>
    4f9c:	add	r4, r4, #1
    4fa0:	add	r5, r5, #8
    4fa4:	cmp	fp, r4
    4fa8:	bne	4f94 <ReadCompressedDoubleData+0xa0>
    4fac:	b	6044 <ReadCompressedDoubleData+0x1150>
    4fb0:	mul	r3, r8, fp
    4fb4:	ldr	r2, [sp, #8]
    4fb8:	ldr	r1, [sp, #4]
    4fbc:	ldr	r0, [sp]
    4fc0:	bl	3418 <InflateData>
    4fc4:	b	6044 <ReadCompressedDoubleData+0x1150>
    4fc8:	ldr	r3, [sp]
    4fcc:	ldr	r4, [r3, #20]
    4fd0:	cmp	r4, #0
    4fd4:	beq	50f8 <ReadCompressedDoubleData+0x204>
    4fd8:	cmp	fp, #256	; 0x100
    4fdc:	ble	50a4 <ReadCompressedDoubleData+0x1b0>
    4fe0:	sub	fp, fp, #256	; 0x100
    4fe4:	cmp	fp, #0
    4fe8:	ble	50f0 <ReadCompressedDoubleData+0x1fc>
    4fec:	lsl	r3, r0, #8
    4ff0:	str	r3, [sp, #12]
    4ff4:	ldr	r9, [sp, #8]
    4ff8:	mov	r7, #0
    4ffc:	add	sl, sp, #16
    5000:	ldr	r3, [sp, #12]
    5004:	mov	r2, sl
    5008:	ldr	r1, [sp, #4]
    500c:	ldr	r0, [sp]
    5010:	bl	3418 <InflateData>
    5014:	mov	r4, sl
    5018:	add	r6, sp, #1040	; 0x410
    501c:	mov	r5, r9
    5020:	mov	r0, r4
    5024:	bl	1b38 <Mat_floatSwap>
    5028:	vcvt.f64.f32	d0, s0
    502c:	vstmia	r5!, {d0}
    5030:	add	r4, r4, #4
    5034:	cmp	r4, r6
    5038:	bne	5020 <ReadCompressedDoubleData+0x12c>
    503c:	add	r7, r7, #256	; 0x100
    5040:	add	r9, r9, #2048	; 0x800
    5044:	cmp	fp, r7
    5048:	bgt	5000 <ReadCompressedDoubleData+0x10c>
    504c:	sub	r3, r7, #256	; 0x100
    5050:	sub	fp, fp, r3
    5054:	mul	r3, r8, fp
    5058:	add	r2, sp, #16
    505c:	ldr	r1, [sp, #4]
    5060:	ldr	r0, [sp]
    5064:	bl	3418 <InflateData>
    5068:	cmp	fp, #0
    506c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5070:	add	r5, sp, #16
    5074:	ldr	r3, [sp, #8]
    5078:	add	r7, r3, r7, lsl #3
    507c:	mov	r4, #0
    5080:	mov	r0, r5
    5084:	bl	1b38 <Mat_floatSwap>
    5088:	vcvt.f64.f32	d0, s0
    508c:	vstmia	r7!, {d0}
    5090:	add	r4, r4, #1
    5094:	add	r5, r5, #4
    5098:	cmp	fp, r4
    509c:	bne	5080 <ReadCompressedDoubleData+0x18c>
    50a0:	b	6044 <ReadCompressedDoubleData+0x1150>
    50a4:	mul	r3, fp, r0
    50a8:	add	r2, sp, #16
    50ac:	ldr	r1, [sp, #4]
    50b0:	ldr	r0, [sp]
    50b4:	bl	3418 <InflateData>
    50b8:	cmp	fp, #0
    50bc:	ble	6044 <ReadCompressedDoubleData+0x1150>
    50c0:	add	r5, sp, #16
    50c4:	ldr	r3, [sp, #8]
    50c8:	mov	r4, r3
    50cc:	add	r6, r3, fp, lsl #3
    50d0:	mov	r0, r5
    50d4:	bl	1b38 <Mat_floatSwap>
    50d8:	vcvt.f64.f32	d0, s0
    50dc:	vstmia	r4!, {d0}
    50e0:	add	r5, r5, #4
    50e4:	cmp	r4, r6
    50e8:	bne	50d0 <ReadCompressedDoubleData+0x1dc>
    50ec:	b	6044 <ReadCompressedDoubleData+0x1150>
    50f0:	mov	r7, #0
    50f4:	b	504c <ReadCompressedDoubleData+0x158>
    50f8:	cmp	fp, #256	; 0x100
    50fc:	ble	51a8 <ReadCompressedDoubleData+0x2b4>
    5100:	sub	fp, fp, #256	; 0x100
    5104:	cmp	fp, #0
    5108:	ble	515c <ReadCompressedDoubleData+0x268>
    510c:	lsl	r7, r0, #8
    5110:	ldr	r5, [sp, #8]
    5114:	add	r6, sp, #16
    5118:	mov	r3, r7
    511c:	mov	r2, r6
    5120:	ldr	r1, [sp, #4]
    5124:	ldr	r0, [sp]
    5128:	bl	3418 <InflateData>
    512c:	mov	r3, r6
    5130:	add	r1, sp, #1040	; 0x410
    5134:	mov	r2, r5
    5138:	vldmia	r3!, {s14}
    513c:	vcvt.f64.f32	d7, s14
    5140:	vstmia	r2!, {d7}
    5144:	cmp	r3, r1
    5148:	bne	5138 <ReadCompressedDoubleData+0x244>
    514c:	add	r4, r4, #256	; 0x100
    5150:	add	r5, r5, #2048	; 0x800
    5154:	cmp	fp, r4
    5158:	bgt	5118 <ReadCompressedDoubleData+0x224>
    515c:	sub	r3, r4, #256	; 0x100
    5160:	sub	fp, fp, r3
    5164:	mul	r3, fp, r8
    5168:	add	r2, sp, #16
    516c:	ldr	r1, [sp, #4]
    5170:	ldr	r0, [sp]
    5174:	bl	3418 <InflateData>
    5178:	cmp	fp, #0
    517c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5180:	add	r3, sp, #16
    5184:	ldr	r2, [sp, #8]
    5188:	add	r4, r2, r4, lsl #3
    518c:	add	r2, r3, fp, lsl #2
    5190:	vldmia	r3!, {s14}
    5194:	vcvt.f64.f32	d7, s14
    5198:	vstmia	r4!, {d7}
    519c:	cmp	r3, r2
    51a0:	bne	5190 <ReadCompressedDoubleData+0x29c>
    51a4:	b	6044 <ReadCompressedDoubleData+0x1150>
    51a8:	mul	r3, fp, r0
    51ac:	add	r2, sp, #16
    51b0:	ldr	r1, [sp, #4]
    51b4:	ldr	r0, [sp]
    51b8:	bl	3418 <InflateData>
    51bc:	cmp	fp, #0
    51c0:	ble	6044 <ReadCompressedDoubleData+0x1150>
    51c4:	add	r3, sp, #16
    51c8:	ldr	r2, [sp, #8]
    51cc:	add	r1, r3, fp, lsl #2
    51d0:	vldmia	r3!, {s14}
    51d4:	vcvt.f64.f32	d7, s14
    51d8:	vstmia	r2!, {d7}
    51dc:	cmp	r3, r1
    51e0:	bne	51d0 <ReadCompressedDoubleData+0x2dc>
    51e4:	b	6044 <ReadCompressedDoubleData+0x1150>
    51e8:	ldr	r3, [sp]
    51ec:	ldr	r7, [r3, #20]
    51f0:	cmp	r7, #0
    51f4:	beq	5318 <ReadCompressedDoubleData+0x424>
    51f8:	cmp	fp, #128	; 0x80
    51fc:	ble	52c4 <ReadCompressedDoubleData+0x3d0>
    5200:	sub	fp, fp, #128	; 0x80
    5204:	cmp	fp, #0
    5208:	ble	5310 <ReadCompressedDoubleData+0x41c>
    520c:	lsl	r3, r0, #7
    5210:	str	r3, [sp, #12]
    5214:	ldr	r9, [sp, #8]
    5218:	mov	r7, #0
    521c:	add	sl, sp, #16
    5220:	ldr	r3, [sp, #12]
    5224:	mov	r2, sl
    5228:	ldr	r1, [sp, #4]
    522c:	ldr	r0, [sp]
    5230:	bl	3418 <InflateData>
    5234:	mov	r4, sl
    5238:	add	r6, sp, #1040	; 0x410
    523c:	mov	r5, r9
    5240:	mov	r0, r4
    5244:	bl	18bc <Mat_int64Swap>
    5248:	bl	51b60 <__aeabi_l2d>
    524c:	strd	r0, [r5], #8
    5250:	add	r4, r4, #8
    5254:	cmp	r4, r6
    5258:	bne	5240 <ReadCompressedDoubleData+0x34c>
    525c:	add	r7, r7, #128	; 0x80
    5260:	add	r9, r9, #1024	; 0x400
    5264:	cmp	fp, r7
    5268:	bgt	5220 <ReadCompressedDoubleData+0x32c>
    526c:	sub	r3, r7, #128	; 0x80
    5270:	sub	fp, fp, r3
    5274:	mul	r3, r8, fp
    5278:	add	r2, sp, #16
    527c:	ldr	r1, [sp, #4]
    5280:	ldr	r0, [sp]
    5284:	bl	3418 <InflateData>
    5288:	cmp	fp, #0
    528c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5290:	add	r5, sp, #16
    5294:	ldr	r3, [sp, #8]
    5298:	add	r7, r3, r7, lsl #3
    529c:	mov	r4, #0
    52a0:	mov	r0, r5
    52a4:	bl	18bc <Mat_int64Swap>
    52a8:	bl	51b60 <__aeabi_l2d>
    52ac:	strd	r0, [r7], #8
    52b0:	add	r4, r4, #1
    52b4:	add	r5, r5, #8
    52b8:	cmp	fp, r4
    52bc:	bne	52a0 <ReadCompressedDoubleData+0x3ac>
    52c0:	b	6044 <ReadCompressedDoubleData+0x1150>
    52c4:	mul	r3, fp, r0
    52c8:	add	r2, sp, #16
    52cc:	ldr	r1, [sp, #4]
    52d0:	ldr	r0, [sp]
    52d4:	bl	3418 <InflateData>
    52d8:	cmp	fp, #0
    52dc:	ble	6044 <ReadCompressedDoubleData+0x1150>
    52e0:	add	r5, sp, #16
    52e4:	ldr	r3, [sp, #8]
    52e8:	mov	r4, r3
    52ec:	add	r6, r3, fp, lsl #3
    52f0:	mov	r0, r5
    52f4:	bl	18bc <Mat_int64Swap>
    52f8:	bl	51b60 <__aeabi_l2d>
    52fc:	strd	r0, [r4], #8
    5300:	add	r5, r5, #8
    5304:	cmp	r4, r6
    5308:	bne	52f0 <ReadCompressedDoubleData+0x3fc>
    530c:	b	6044 <ReadCompressedDoubleData+0x1150>
    5310:	mov	r7, #0
    5314:	b	526c <ReadCompressedDoubleData+0x378>
    5318:	cmp	fp, #128	; 0x80
    531c:	ble	53d8 <ReadCompressedDoubleData+0x4e4>
    5320:	sub	fp, fp, #128	; 0x80
    5324:	cmp	fp, #0
    5328:	ble	5384 <ReadCompressedDoubleData+0x490>
    532c:	lsl	r3, r0, #7
    5330:	str	r3, [sp, #12]
    5334:	ldr	r9, [sp, #8]
    5338:	add	sl, sp, #16
    533c:	add	r6, sp, #1024	; 0x400
    5340:	add	r6, r6, #8
    5344:	ldr	r3, [sp, #12]
    5348:	mov	r2, sl
    534c:	ldr	r1, [sp, #4]
    5350:	ldr	r0, [sp]
    5354:	bl	3418 <InflateData>
    5358:	sub	r4, sl, #8
    535c:	mov	r5, r9
    5360:	ldrd	r0, [r4, #8]!
    5364:	bl	51b60 <__aeabi_l2d>
    5368:	strd	r0, [r5], #8
    536c:	cmp	r4, r6
    5370:	bne	5360 <ReadCompressedDoubleData+0x46c>
    5374:	add	r7, r7, #128	; 0x80
    5378:	add	r9, r9, #1024	; 0x400
    537c:	cmp	fp, r7
    5380:	bgt	5344 <ReadCompressedDoubleData+0x450>
    5384:	sub	r3, r7, #128	; 0x80
    5388:	sub	fp, fp, r3
    538c:	mul	r3, fp, r8
    5390:	add	r2, sp, #16
    5394:	ldr	r1, [sp, #4]
    5398:	ldr	r0, [sp]
    539c:	bl	3418 <InflateData>
    53a0:	cmp	fp, #0
    53a4:	ble	6044 <ReadCompressedDoubleData+0x1150>
    53a8:	add	r5, sp, #16
    53ac:	add	r4, sp, #8
    53b0:	ldr	r3, [sp, #8]
    53b4:	add	r7, r3, r7, lsl #3
    53b8:	sub	r3, fp, #-536870911	; 0xe0000001
    53bc:	add	r5, r5, r3, lsl #3
    53c0:	ldrd	r0, [r4, #8]!
    53c4:	bl	51b60 <__aeabi_l2d>
    53c8:	strd	r0, [r7], #8
    53cc:	cmp	r4, r5
    53d0:	bne	53c0 <ReadCompressedDoubleData+0x4cc>
    53d4:	b	6044 <ReadCompressedDoubleData+0x1150>
    53d8:	mul	r3, fp, r0
    53dc:	add	r2, sp, #16
    53e0:	ldr	r1, [sp, #4]
    53e4:	ldr	r0, [sp]
    53e8:	bl	3418 <InflateData>
    53ec:	cmp	fp, #0
    53f0:	ble	6044 <ReadCompressedDoubleData+0x1150>
    53f4:	add	r6, sp, #16
    53f8:	add	r4, sp, #8
    53fc:	ldr	r5, [sp, #8]
    5400:	sub	r3, fp, #-536870911	; 0xe0000001
    5404:	add	r6, r6, r3, lsl #3
    5408:	ldrd	r0, [r4, #8]!
    540c:	bl	51b60 <__aeabi_l2d>
    5410:	strd	r0, [r5], #8
    5414:	cmp	r4, r6
    5418:	bne	5408 <ReadCompressedDoubleData+0x514>
    541c:	b	6044 <ReadCompressedDoubleData+0x1150>
    5420:	ldr	r3, [sp]
    5424:	ldr	r7, [r3, #20]
    5428:	cmp	r7, #0
    542c:	beq	5550 <ReadCompressedDoubleData+0x65c>
    5430:	cmp	fp, #128	; 0x80
    5434:	ble	54fc <ReadCompressedDoubleData+0x608>
    5438:	sub	fp, fp, #128	; 0x80
    543c:	cmp	fp, #0
    5440:	ble	5548 <ReadCompressedDoubleData+0x654>
    5444:	lsl	r3, r0, #7
    5448:	str	r3, [sp, #12]
    544c:	ldr	r9, [sp, #8]
    5450:	mov	r7, #0
    5454:	add	sl, sp, #16
    5458:	ldr	r3, [sp, #12]
    545c:	mov	r2, sl
    5460:	ldr	r1, [sp, #4]
    5464:	ldr	r0, [sp]
    5468:	bl	3418 <InflateData>
    546c:	mov	r4, sl
    5470:	add	r6, sp, #1040	; 0x410
    5474:	mov	r5, r9
    5478:	mov	r0, r4
    547c:	bl	1984 <Mat_uint64Swap>
    5480:	bl	51b4c <__aeabi_ul2d>
    5484:	strd	r0, [r5], #8
    5488:	add	r4, r4, #8
    548c:	cmp	r4, r6
    5490:	bne	5478 <ReadCompressedDoubleData+0x584>
    5494:	add	r7, r7, #128	; 0x80
    5498:	add	r9, r9, #1024	; 0x400
    549c:	cmp	fp, r7
    54a0:	bgt	5458 <ReadCompressedDoubleData+0x564>
    54a4:	sub	r3, r7, #128	; 0x80
    54a8:	sub	fp, fp, r3
    54ac:	mul	r3, r8, fp
    54b0:	add	r2, sp, #16
    54b4:	ldr	r1, [sp, #4]
    54b8:	ldr	r0, [sp]
    54bc:	bl	3418 <InflateData>
    54c0:	cmp	fp, #0
    54c4:	ble	6044 <ReadCompressedDoubleData+0x1150>
    54c8:	add	r5, sp, #16
    54cc:	ldr	r3, [sp, #8]
    54d0:	add	r7, r3, r7, lsl #3
    54d4:	mov	r4, #0
    54d8:	mov	r0, r5
    54dc:	bl	1984 <Mat_uint64Swap>
    54e0:	bl	51b4c <__aeabi_ul2d>
    54e4:	strd	r0, [r7], #8
    54e8:	add	r4, r4, #1
    54ec:	add	r5, r5, #8
    54f0:	cmp	fp, r4
    54f4:	bne	54d8 <ReadCompressedDoubleData+0x5e4>
    54f8:	b	6044 <ReadCompressedDoubleData+0x1150>
    54fc:	mul	r3, fp, r0
    5500:	add	r2, sp, #16
    5504:	ldr	r1, [sp, #4]
    5508:	ldr	r0, [sp]
    550c:	bl	3418 <InflateData>
    5510:	cmp	fp, #0
    5514:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5518:	add	r5, sp, #16
    551c:	ldr	r3, [sp, #8]
    5520:	mov	r4, r3
    5524:	add	r6, r3, fp, lsl #3
    5528:	mov	r0, r5
    552c:	bl	1984 <Mat_uint64Swap>
    5530:	bl	51b4c <__aeabi_ul2d>
    5534:	strd	r0, [r4], #8
    5538:	add	r5, r5, #8
    553c:	cmp	r4, r6
    5540:	bne	5528 <ReadCompressedDoubleData+0x634>
    5544:	b	6044 <ReadCompressedDoubleData+0x1150>
    5548:	mov	r7, #0
    554c:	b	54a4 <ReadCompressedDoubleData+0x5b0>
    5550:	cmp	fp, #128	; 0x80
    5554:	ble	5610 <ReadCompressedDoubleData+0x71c>
    5558:	sub	fp, fp, #128	; 0x80
    555c:	cmp	fp, #0
    5560:	ble	55bc <ReadCompressedDoubleData+0x6c8>
    5564:	lsl	r3, r0, #7
    5568:	str	r3, [sp, #12]
    556c:	ldr	r9, [sp, #8]
    5570:	add	sl, sp, #16
    5574:	add	r6, sp, #1024	; 0x400
    5578:	add	r6, r6, #8
    557c:	ldr	r3, [sp, #12]
    5580:	mov	r2, sl
    5584:	ldr	r1, [sp, #4]
    5588:	ldr	r0, [sp]
    558c:	bl	3418 <InflateData>
    5590:	sub	r4, sl, #8
    5594:	mov	r5, r9
    5598:	ldrd	r0, [r4, #8]!
    559c:	bl	51b4c <__aeabi_ul2d>
    55a0:	strd	r0, [r5], #8
    55a4:	cmp	r4, r6
    55a8:	bne	5598 <ReadCompressedDoubleData+0x6a4>
    55ac:	add	r7, r7, #128	; 0x80
    55b0:	add	r9, r9, #1024	; 0x400
    55b4:	cmp	fp, r7
    55b8:	bgt	557c <ReadCompressedDoubleData+0x688>
    55bc:	sub	r3, r7, #128	; 0x80
    55c0:	sub	fp, fp, r3
    55c4:	mul	r3, fp, r8
    55c8:	add	r2, sp, #16
    55cc:	ldr	r1, [sp, #4]
    55d0:	ldr	r0, [sp]
    55d4:	bl	3418 <InflateData>
    55d8:	cmp	fp, #0
    55dc:	ble	6044 <ReadCompressedDoubleData+0x1150>
    55e0:	add	r5, sp, #16
    55e4:	add	r4, sp, #8
    55e8:	ldr	r3, [sp, #8]
    55ec:	add	r7, r3, r7, lsl #3
    55f0:	sub	r3, fp, #-536870911	; 0xe0000001
    55f4:	add	r5, r5, r3, lsl #3
    55f8:	ldrd	r0, [r4, #8]!
    55fc:	bl	51b4c <__aeabi_ul2d>
    5600:	strd	r0, [r7], #8
    5604:	cmp	r4, r5
    5608:	bne	55f8 <ReadCompressedDoubleData+0x704>
    560c:	b	6044 <ReadCompressedDoubleData+0x1150>
    5610:	mul	r3, fp, r0
    5614:	add	r2, sp, #16
    5618:	ldr	r1, [sp, #4]
    561c:	ldr	r0, [sp]
    5620:	bl	3418 <InflateData>
    5624:	cmp	fp, #0
    5628:	ble	6044 <ReadCompressedDoubleData+0x1150>
    562c:	add	r6, sp, #16
    5630:	add	r4, sp, #8
    5634:	ldr	r5, [sp, #8]
    5638:	sub	r3, fp, #-536870911	; 0xe0000001
    563c:	add	r6, r6, r3, lsl #3
    5640:	ldrd	r0, [r4, #8]!
    5644:	bl	51b4c <__aeabi_ul2d>
    5648:	strd	r0, [r5], #8
    564c:	cmp	r4, r6
    5650:	bne	5640 <ReadCompressedDoubleData+0x74c>
    5654:	b	6044 <ReadCompressedDoubleData+0x1150>
    5658:	ldr	r3, [sp]
    565c:	ldr	r5, [r3, #20]
    5660:	cmp	r5, #0
    5664:	beq	5794 <ReadCompressedDoubleData+0x8a0>
    5668:	cmp	fp, #256	; 0x100
    566c:	ble	573c <ReadCompressedDoubleData+0x848>
    5670:	sub	fp, fp, #256	; 0x100
    5674:	cmp	fp, #0
    5678:	ble	578c <ReadCompressedDoubleData+0x898>
    567c:	lsl	r3, r0, #8
    5680:	str	r3, [sp, #12]
    5684:	ldr	r9, [sp, #8]
    5688:	mov	r7, #0
    568c:	add	sl, sp, #16
    5690:	ldr	r3, [sp, #12]
    5694:	mov	r2, sl
    5698:	ldr	r1, [sp, #4]
    569c:	ldr	r0, [sp]
    56a0:	bl	3418 <InflateData>
    56a4:	mov	r4, sl
    56a8:	add	r6, sp, #1040	; 0x410
    56ac:	mov	r5, r9
    56b0:	mov	r0, r4
    56b4:	bl	1a20 <Mat_int32Swap>
    56b8:	vmov	s15, r0
    56bc:	vcvt.f64.s32	d7, s15
    56c0:	vstmia	r5!, {d7}
    56c4:	add	r4, r4, #4
    56c8:	cmp	r4, r6
    56cc:	bne	56b0 <ReadCompressedDoubleData+0x7bc>
    56d0:	add	r7, r7, #256	; 0x100
    56d4:	add	r9, r9, #2048	; 0x800
    56d8:	cmp	fp, r7
    56dc:	bgt	5690 <ReadCompressedDoubleData+0x79c>
    56e0:	sub	r3, r7, #256	; 0x100
    56e4:	sub	fp, fp, r3
    56e8:	mul	r3, r8, fp
    56ec:	add	r2, sp, #16
    56f0:	ldr	r1, [sp, #4]
    56f4:	ldr	r0, [sp]
    56f8:	bl	3418 <InflateData>
    56fc:	cmp	fp, #0
    5700:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5704:	add	r5, sp, #16
    5708:	ldr	r3, [sp, #8]
    570c:	add	r7, r3, r7, lsl #3
    5710:	mov	r4, #0
    5714:	mov	r0, r5
    5718:	bl	1a20 <Mat_int32Swap>
    571c:	vmov	s15, r0
    5720:	vcvt.f64.s32	d7, s15
    5724:	vstmia	r7!, {d7}
    5728:	add	r4, r4, #1
    572c:	add	r5, r5, #4
    5730:	cmp	fp, r4
    5734:	bne	5714 <ReadCompressedDoubleData+0x820>
    5738:	b	6044 <ReadCompressedDoubleData+0x1150>
    573c:	mul	r3, fp, r0
    5740:	add	r2, sp, #16
    5744:	ldr	r1, [sp, #4]
    5748:	ldr	r0, [sp]
    574c:	bl	3418 <InflateData>
    5750:	cmp	fp, #0
    5754:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5758:	add	r5, sp, #16
    575c:	ldr	r3, [sp, #8]
    5760:	mov	r4, r3
    5764:	add	r6, r3, fp, lsl #3
    5768:	mov	r0, r5
    576c:	bl	1a20 <Mat_int32Swap>
    5770:	vmov	s15, r0
    5774:	vcvt.f64.s32	d7, s15
    5778:	vstmia	r4!, {d7}
    577c:	add	r5, r5, #4
    5780:	cmp	r4, r6
    5784:	bne	5768 <ReadCompressedDoubleData+0x874>
    5788:	b	6044 <ReadCompressedDoubleData+0x1150>
    578c:	mov	r7, #0
    5790:	b	56e0 <ReadCompressedDoubleData+0x7ec>
    5794:	cmp	fp, #256	; 0x100
    5798:	ble	5858 <ReadCompressedDoubleData+0x964>
    579c:	sub	fp, fp, #256	; 0x100
    57a0:	cmp	fp, #0
    57a4:	ble	5800 <ReadCompressedDoubleData+0x90c>
    57a8:	lsl	r9, r0, #8
    57ac:	ldr	r6, [sp, #8]
    57b0:	add	r7, sp, #16
    57b4:	add	r4, sp, #1024	; 0x400
    57b8:	add	r4, r4, #12
    57bc:	mov	r3, r9
    57c0:	mov	r2, r7
    57c4:	ldr	r1, [sp, #4]
    57c8:	ldr	r0, [sp]
    57cc:	bl	3418 <InflateData>
    57d0:	sub	r3, r7, #4
    57d4:	mov	r2, r6
    57d8:	ldr	r1, [r3, #4]!
    57dc:	vmov	s14, r1
    57e0:	vcvt.f64.s32	d7, s14
    57e4:	vstmia	r2!, {d7}
    57e8:	cmp	r3, r4
    57ec:	bne	57d8 <ReadCompressedDoubleData+0x8e4>
    57f0:	add	r5, r5, #256	; 0x100
    57f4:	add	r6, r6, #2048	; 0x800
    57f8:	cmp	fp, r5
    57fc:	bgt	57bc <ReadCompressedDoubleData+0x8c8>
    5800:	sub	r3, r5, #256	; 0x100
    5804:	sub	fp, fp, r3
    5808:	mul	r3, fp, r8
    580c:	add	r2, sp, #16
    5810:	ldr	r1, [sp, #4]
    5814:	ldr	r0, [sp]
    5818:	bl	3418 <InflateData>
    581c:	cmp	fp, #0
    5820:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5824:	add	r2, sp, #16
    5828:	add	r3, sp, #12
    582c:	ldr	r1, [sp, #8]
    5830:	add	r5, r1, r5, lsl #3
    5834:	sub	r1, fp, #-1073741823	; 0xc0000001
    5838:	add	r2, r2, r1, lsl #2
    583c:	ldr	r1, [r3, #4]!
    5840:	vmov	s14, r1
    5844:	vcvt.f64.s32	d7, s14
    5848:	vstmia	r5!, {d7}
    584c:	cmp	r3, r2
    5850:	bne	583c <ReadCompressedDoubleData+0x948>
    5854:	b	6044 <ReadCompressedDoubleData+0x1150>
    5858:	mul	r3, fp, r0
    585c:	add	r2, sp, #16
    5860:	ldr	r1, [sp, #4]
    5864:	ldr	r0, [sp]
    5868:	bl	3418 <InflateData>
    586c:	cmp	fp, #0
    5870:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5874:	add	r1, sp, #16
    5878:	add	r3, sp, #12
    587c:	ldr	r2, [sp, #8]
    5880:	sub	r0, fp, #-1073741823	; 0xc0000001
    5884:	add	r1, r1, r0, lsl #2
    5888:	ldr	r0, [r3, #4]!
    588c:	vmov	s14, r0
    5890:	vcvt.f64.s32	d7, s14
    5894:	vstmia	r2!, {d7}
    5898:	cmp	r3, r1
    589c:	bne	5888 <ReadCompressedDoubleData+0x994>
    58a0:	b	6044 <ReadCompressedDoubleData+0x1150>
    58a4:	ldr	r3, [sp]
    58a8:	ldr	r5, [r3, #20]
    58ac:	cmp	r5, #0
    58b0:	beq	59e0 <ReadCompressedDoubleData+0xaec>
    58b4:	cmp	fp, #256	; 0x100
    58b8:	ble	5988 <ReadCompressedDoubleData+0xa94>
    58bc:	sub	fp, fp, #256	; 0x100
    58c0:	cmp	fp, #0
    58c4:	ble	59d8 <ReadCompressedDoubleData+0xae4>
    58c8:	lsl	r3, r0, #8
    58cc:	str	r3, [sp, #12]
    58d0:	ldr	r9, [sp, #8]
    58d4:	mov	r7, #0
    58d8:	add	sl, sp, #16
    58dc:	ldr	r3, [sp, #12]
    58e0:	mov	r2, sl
    58e4:	ldr	r1, [sp, #4]
    58e8:	ldr	r0, [sp]
    58ec:	bl	3418 <InflateData>
    58f0:	mov	r4, sl
    58f4:	add	r6, sp, #1040	; 0x410
    58f8:	mov	r5, r9
    58fc:	mov	r0, r4
    5900:	bl	1a88 <Mat_uint32Swap>
    5904:	vmov	s15, r0
    5908:	vcvt.f64.u32	d7, s15
    590c:	vstmia	r5!, {d7}
    5910:	add	r4, r4, #4
    5914:	cmp	r4, r6
    5918:	bne	58fc <ReadCompressedDoubleData+0xa08>
    591c:	add	r7, r7, #256	; 0x100
    5920:	add	r9, r9, #2048	; 0x800
    5924:	cmp	fp, r7
    5928:	bgt	58dc <ReadCompressedDoubleData+0x9e8>
    592c:	sub	r3, r7, #256	; 0x100
    5930:	sub	fp, fp, r3
    5934:	mul	r3, r8, fp
    5938:	add	r2, sp, #16
    593c:	ldr	r1, [sp, #4]
    5940:	ldr	r0, [sp]
    5944:	bl	3418 <InflateData>
    5948:	cmp	fp, #0
    594c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5950:	add	r5, sp, #16
    5954:	ldr	r3, [sp, #8]
    5958:	add	r7, r3, r7, lsl #3
    595c:	mov	r4, #0
    5960:	mov	r0, r5
    5964:	bl	1a88 <Mat_uint32Swap>
    5968:	vmov	s15, r0
    596c:	vcvt.f64.u32	d7, s15
    5970:	vstmia	r7!, {d7}
    5974:	add	r4, r4, #1
    5978:	add	r5, r5, #4
    597c:	cmp	fp, r4
    5980:	bne	5960 <ReadCompressedDoubleData+0xa6c>
    5984:	b	6044 <ReadCompressedDoubleData+0x1150>
    5988:	mul	r3, fp, r0
    598c:	add	r2, sp, #16
    5990:	ldr	r1, [sp, #4]
    5994:	ldr	r0, [sp]
    5998:	bl	3418 <InflateData>
    599c:	cmp	fp, #0
    59a0:	ble	6044 <ReadCompressedDoubleData+0x1150>
    59a4:	add	r5, sp, #16
    59a8:	ldr	r3, [sp, #8]
    59ac:	mov	r4, r3
    59b0:	add	r6, r3, fp, lsl #3
    59b4:	mov	r0, r5
    59b8:	bl	1a88 <Mat_uint32Swap>
    59bc:	vmov	s15, r0
    59c0:	vcvt.f64.u32	d7, s15
    59c4:	vstmia	r4!, {d7}
    59c8:	add	r5, r5, #4
    59cc:	cmp	r4, r6
    59d0:	bne	59b4 <ReadCompressedDoubleData+0xac0>
    59d4:	b	6044 <ReadCompressedDoubleData+0x1150>
    59d8:	mov	r7, #0
    59dc:	b	592c <ReadCompressedDoubleData+0xa38>
    59e0:	cmp	fp, #256	; 0x100
    59e4:	ble	5aa4 <ReadCompressedDoubleData+0xbb0>
    59e8:	sub	fp, fp, #256	; 0x100
    59ec:	cmp	fp, #0
    59f0:	ble	5a4c <ReadCompressedDoubleData+0xb58>
    59f4:	lsl	r9, r0, #8
    59f8:	ldr	r6, [sp, #8]
    59fc:	add	r7, sp, #16
    5a00:	add	r4, sp, #1024	; 0x400
    5a04:	add	r4, r4, #12
    5a08:	mov	r3, r9
    5a0c:	mov	r2, r7
    5a10:	ldr	r1, [sp, #4]
    5a14:	ldr	r0, [sp]
    5a18:	bl	3418 <InflateData>
    5a1c:	sub	r3, r7, #4
    5a20:	mov	r2, r6
    5a24:	ldr	r1, [r3, #4]!
    5a28:	vmov	s14, r1
    5a2c:	vcvt.f64.u32	d7, s14
    5a30:	vstmia	r2!, {d7}
    5a34:	cmp	r3, r4
    5a38:	bne	5a24 <ReadCompressedDoubleData+0xb30>
    5a3c:	add	r5, r5, #256	; 0x100
    5a40:	add	r6, r6, #2048	; 0x800
    5a44:	cmp	fp, r5
    5a48:	bgt	5a08 <ReadCompressedDoubleData+0xb14>
    5a4c:	sub	r3, r5, #256	; 0x100
    5a50:	sub	fp, fp, r3
    5a54:	mul	r3, fp, r8
    5a58:	add	r2, sp, #16
    5a5c:	ldr	r1, [sp, #4]
    5a60:	ldr	r0, [sp]
    5a64:	bl	3418 <InflateData>
    5a68:	cmp	fp, #0
    5a6c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5a70:	add	r2, sp, #16
    5a74:	add	r3, sp, #12
    5a78:	ldr	r1, [sp, #8]
    5a7c:	add	r5, r1, r5, lsl #3
    5a80:	sub	r1, fp, #-1073741823	; 0xc0000001
    5a84:	add	r2, r2, r1, lsl #2
    5a88:	ldr	r1, [r3, #4]!
    5a8c:	vmov	s14, r1
    5a90:	vcvt.f64.u32	d7, s14
    5a94:	vstmia	r5!, {d7}
    5a98:	cmp	r3, r2
    5a9c:	bne	5a88 <ReadCompressedDoubleData+0xb94>
    5aa0:	b	6044 <ReadCompressedDoubleData+0x1150>
    5aa4:	mul	r3, fp, r0
    5aa8:	add	r2, sp, #16
    5aac:	ldr	r1, [sp, #4]
    5ab0:	ldr	r0, [sp]
    5ab4:	bl	3418 <InflateData>
    5ab8:	cmp	fp, #0
    5abc:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5ac0:	add	r1, sp, #16
    5ac4:	add	r3, sp, #12
    5ac8:	ldr	r2, [sp, #8]
    5acc:	sub	r0, fp, #-1073741823	; 0xc0000001
    5ad0:	add	r1, r1, r0, lsl #2
    5ad4:	ldr	r0, [r3, #4]!
    5ad8:	vmov	s14, r0
    5adc:	vcvt.f64.u32	d7, s14
    5ae0:	vstmia	r2!, {d7}
    5ae4:	cmp	r3, r1
    5ae8:	bne	5ad4 <ReadCompressedDoubleData+0xbe0>
    5aec:	b	6044 <ReadCompressedDoubleData+0x1150>
    5af0:	ldr	r3, [sp]
    5af4:	ldr	r5, [r3, #20]
    5af8:	cmp	r5, #0
    5afc:	beq	5c28 <ReadCompressedDoubleData+0xd34>
    5b00:	cmp	fp, #512	; 0x200
    5b04:	ble	5bd0 <ReadCompressedDoubleData+0xcdc>
    5b08:	sub	fp, fp, #512	; 0x200
    5b0c:	cmp	fp, #0
    5b10:	ble	5c20 <ReadCompressedDoubleData+0xd2c>
    5b14:	lsl	r3, r0, #9
    5b18:	str	r3, [sp, #12]
    5b1c:	ldr	r9, [sp, #8]
    5b20:	mov	r7, #0
    5b24:	add	sl, sp, #16
    5b28:	ldr	r3, [sp, #12]
    5b2c:	mov	r2, sl
    5b30:	ldr	r1, [sp, #4]
    5b34:	ldr	r0, [sp]
    5b38:	bl	3418 <InflateData>
    5b3c:	mov	r4, sl
    5b40:	add	r6, sp, #1040	; 0x410
    5b44:	mov	r5, r9
    5b48:	mov	r0, r4
    5b4c:	bl	1ae4 <Mat_int16Swap>
    5b50:	vmov	s15, r0
    5b54:	vcvt.f64.s32	d7, s15
    5b58:	vstmia	r5!, {d7}
    5b5c:	add	r4, r4, #2
    5b60:	cmp	r6, r4
    5b64:	bne	5b48 <ReadCompressedDoubleData+0xc54>
    5b68:	add	r7, r7, #512	; 0x200
    5b6c:	add	r9, r9, #4096	; 0x1000
    5b70:	cmp	fp, r7
    5b74:	bgt	5b28 <ReadCompressedDoubleData+0xc34>
    5b78:	sub	r3, r7, #512	; 0x200
    5b7c:	sub	fp, fp, r3
    5b80:	mul	r3, fp, r8
    5b84:	add	r2, sp, #16
    5b88:	ldr	r1, [sp, #4]
    5b8c:	ldr	r0, [sp]
    5b90:	bl	3418 <InflateData>
    5b94:	cmp	fp, #0
    5b98:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5b9c:	add	r4, sp, #16
    5ba0:	ldr	r3, [sp, #8]
    5ba4:	add	r7, r3, r7, lsl #3
    5ba8:	add	r5, r4, fp, lsl #1
    5bac:	mov	r0, r4
    5bb0:	bl	1ae4 <Mat_int16Swap>
    5bb4:	vmov	s15, r0
    5bb8:	vcvt.f64.s32	d7, s15
    5bbc:	vstmia	r7!, {d7}
    5bc0:	add	r4, r4, #2
    5bc4:	cmp	r5, r4
    5bc8:	bne	5bac <ReadCompressedDoubleData+0xcb8>
    5bcc:	b	6044 <ReadCompressedDoubleData+0x1150>
    5bd0:	mul	r3, fp, r0
    5bd4:	add	r2, sp, #16
    5bd8:	ldr	r1, [sp, #4]
    5bdc:	ldr	r0, [sp]
    5be0:	bl	3418 <InflateData>
    5be4:	cmp	fp, #0
    5be8:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5bec:	add	r5, sp, #16
    5bf0:	ldr	r3, [sp, #8]
    5bf4:	mov	r4, r3
    5bf8:	add	r6, r3, fp, lsl #3
    5bfc:	mov	r0, r5
    5c00:	bl	1ae4 <Mat_int16Swap>
    5c04:	vmov	s15, r0
    5c08:	vcvt.f64.s32	d7, s15
    5c0c:	vstmia	r4!, {d7}
    5c10:	add	r5, r5, #2
    5c14:	cmp	r6, r4
    5c18:	bne	5bfc <ReadCompressedDoubleData+0xd08>
    5c1c:	b	6044 <ReadCompressedDoubleData+0x1150>
    5c20:	mov	r7, #0
    5c24:	b	5b78 <ReadCompressedDoubleData+0xc84>
    5c28:	cmp	fp, #512	; 0x200
    5c2c:	ble	5cec <ReadCompressedDoubleData+0xdf8>
    5c30:	sub	fp, fp, #512	; 0x200
    5c34:	cmp	fp, #0
    5c38:	ble	5c94 <ReadCompressedDoubleData+0xda0>
    5c3c:	lsl	r9, r0, #9
    5c40:	ldr	r6, [sp, #8]
    5c44:	add	r7, sp, #16
    5c48:	add	r4, sp, #1024	; 0x400
    5c4c:	add	r4, r4, #14
    5c50:	mov	r3, r9
    5c54:	mov	r2, r7
    5c58:	ldr	r1, [sp, #4]
    5c5c:	ldr	r0, [sp]
    5c60:	bl	3418 <InflateData>
    5c64:	sub	r3, r7, #2
    5c68:	mov	r2, r6
    5c6c:	ldrsh	r1, [r3, #2]!
    5c70:	vmov	s14, r1
    5c74:	vcvt.f64.s32	d7, s14
    5c78:	vstmia	r2!, {d7}
    5c7c:	cmp	r4, r3
    5c80:	bne	5c6c <ReadCompressedDoubleData+0xd78>
    5c84:	add	r5, r5, #512	; 0x200
    5c88:	add	r6, r6, #4096	; 0x1000
    5c8c:	cmp	fp, r5
    5c90:	bgt	5c50 <ReadCompressedDoubleData+0xd5c>
    5c94:	sub	r3, r5, #512	; 0x200
    5c98:	sub	fp, fp, r3
    5c9c:	mul	r3, fp, r8
    5ca0:	add	r2, sp, #16
    5ca4:	ldr	r1, [sp, #4]
    5ca8:	ldr	r0, [sp]
    5cac:	bl	3418 <InflateData>
    5cb0:	cmp	fp, #0
    5cb4:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5cb8:	add	r2, sp, #16
    5cbc:	add	r3, sp, #14
    5cc0:	ldr	r1, [sp, #8]
    5cc4:	add	r5, r1, r5, lsl #3
    5cc8:	sub	r1, fp, #-2147483647	; 0x80000001
    5ccc:	add	r2, r2, r1, lsl #1
    5cd0:	ldrsh	r1, [r3, #2]!
    5cd4:	vmov	s14, r1
    5cd8:	vcvt.f64.s32	d7, s14
    5cdc:	vstmia	r5!, {d7}
    5ce0:	cmp	r2, r3
    5ce4:	bne	5cd0 <ReadCompressedDoubleData+0xddc>
    5ce8:	b	6044 <ReadCompressedDoubleData+0x1150>
    5cec:	mul	r3, fp, r0
    5cf0:	add	r2, sp, #16
    5cf4:	ldr	r1, [sp, #4]
    5cf8:	ldr	r0, [sp]
    5cfc:	bl	3418 <InflateData>
    5d00:	cmp	fp, #0
    5d04:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5d08:	add	r1, sp, #16
    5d0c:	add	r3, sp, #14
    5d10:	ldr	r2, [sp, #8]
    5d14:	sub	r0, fp, #-2147483647	; 0x80000001
    5d18:	add	r1, r1, r0, lsl #1
    5d1c:	ldrsh	r0, [r3, #2]!
    5d20:	vmov	s14, r0
    5d24:	vcvt.f64.s32	d7, s14
    5d28:	vstmia	r2!, {d7}
    5d2c:	cmp	r3, r1
    5d30:	bne	5d1c <ReadCompressedDoubleData+0xe28>
    5d34:	b	6044 <ReadCompressedDoubleData+0x1150>
    5d38:	ldr	r3, [sp]
    5d3c:	ldr	r5, [r3, #20]
    5d40:	cmp	r5, #0
    5d44:	beq	5e70 <ReadCompressedDoubleData+0xf7c>
    5d48:	cmp	fp, #512	; 0x200
    5d4c:	ble	5e18 <ReadCompressedDoubleData+0xf24>
    5d50:	sub	fp, fp, #512	; 0x200
    5d54:	cmp	fp, #0
    5d58:	ble	5e68 <ReadCompressedDoubleData+0xf74>
    5d5c:	lsl	r3, r0, #9
    5d60:	str	r3, [sp, #12]
    5d64:	ldr	r9, [sp, #8]
    5d68:	mov	r7, #0
    5d6c:	add	sl, sp, #16
    5d70:	ldr	r3, [sp, #12]
    5d74:	mov	r2, sl
    5d78:	ldr	r1, [sp, #4]
    5d7c:	ldr	r0, [sp]
    5d80:	bl	3418 <InflateData>
    5d84:	mov	r4, sl
    5d88:	add	r6, sp, #1040	; 0x410
    5d8c:	mov	r5, r9
    5d90:	mov	r0, r4
    5d94:	bl	1b1c <Mat_uint16Swap>
    5d98:	vmov	s15, r0
    5d9c:	vcvt.f64.u32	d7, s15
    5da0:	vstmia	r5!, {d7}
    5da4:	add	r4, r4, #2
    5da8:	cmp	r6, r4
    5dac:	bne	5d90 <ReadCompressedDoubleData+0xe9c>
    5db0:	add	r7, r7, #512	; 0x200
    5db4:	add	r9, r9, #4096	; 0x1000
    5db8:	cmp	fp, r7
    5dbc:	bgt	5d70 <ReadCompressedDoubleData+0xe7c>
    5dc0:	sub	r3, r7, #512	; 0x200
    5dc4:	sub	fp, fp, r3
    5dc8:	mul	r3, fp, r8
    5dcc:	add	r2, sp, #16
    5dd0:	ldr	r1, [sp, #4]
    5dd4:	ldr	r0, [sp]
    5dd8:	bl	3418 <InflateData>
    5ddc:	cmp	fp, #0
    5de0:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5de4:	add	r4, sp, #16
    5de8:	ldr	r3, [sp, #8]
    5dec:	add	r7, r3, r7, lsl #3
    5df0:	add	r5, r4, fp, lsl #1
    5df4:	mov	r0, r4
    5df8:	bl	1b1c <Mat_uint16Swap>
    5dfc:	vmov	s15, r0
    5e00:	vcvt.f64.u32	d7, s15
    5e04:	vstmia	r7!, {d7}
    5e08:	add	r4, r4, #2
    5e0c:	cmp	r5, r4
    5e10:	bne	5df4 <ReadCompressedDoubleData+0xf00>
    5e14:	b	6044 <ReadCompressedDoubleData+0x1150>
    5e18:	mul	r3, fp, r0
    5e1c:	add	r2, sp, #16
    5e20:	ldr	r1, [sp, #4]
    5e24:	ldr	r0, [sp]
    5e28:	bl	3418 <InflateData>
    5e2c:	cmp	fp, #0
    5e30:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5e34:	add	r5, sp, #16
    5e38:	ldr	r3, [sp, #8]
    5e3c:	mov	r4, r3
    5e40:	add	r6, r3, fp, lsl #3
    5e44:	mov	r0, r5
    5e48:	bl	1b1c <Mat_uint16Swap>
    5e4c:	vmov	s15, r0
    5e50:	vcvt.f64.u32	d7, s15
    5e54:	vstmia	r4!, {d7}
    5e58:	add	r5, r5, #2
    5e5c:	cmp	r6, r4
    5e60:	bne	5e44 <ReadCompressedDoubleData+0xf50>
    5e64:	b	6044 <ReadCompressedDoubleData+0x1150>
    5e68:	mov	r7, #0
    5e6c:	b	5dc0 <ReadCompressedDoubleData+0xecc>
    5e70:	cmp	fp, #512	; 0x200
    5e74:	ble	5f34 <ReadCompressedDoubleData+0x1040>
    5e78:	sub	fp, fp, #512	; 0x200
    5e7c:	cmp	fp, #0
    5e80:	ble	5edc <ReadCompressedDoubleData+0xfe8>
    5e84:	lsl	r9, r0, #9
    5e88:	ldr	r6, [sp, #8]
    5e8c:	add	r7, sp, #16
    5e90:	add	r4, sp, #1024	; 0x400
    5e94:	add	r4, r4, #14
    5e98:	mov	r3, r9
    5e9c:	mov	r2, r7
    5ea0:	ldr	r1, [sp, #4]
    5ea4:	ldr	r0, [sp]
    5ea8:	bl	3418 <InflateData>
    5eac:	sub	r3, r7, #2
    5eb0:	mov	r2, r6
    5eb4:	ldrh	r1, [r3, #2]!
    5eb8:	vmov	s14, r1
    5ebc:	vcvt.f64.u32	d7, s14
    5ec0:	vstmia	r2!, {d7}
    5ec4:	cmp	r3, r4
    5ec8:	bne	5eb4 <ReadCompressedDoubleData+0xfc0>
    5ecc:	add	r5, r5, #512	; 0x200
    5ed0:	add	r6, r6, #4096	; 0x1000
    5ed4:	cmp	fp, r5
    5ed8:	bgt	5e98 <ReadCompressedDoubleData+0xfa4>
    5edc:	sub	r3, r5, #512	; 0x200
    5ee0:	sub	fp, fp, r3
    5ee4:	mul	r3, fp, r8
    5ee8:	add	r2, sp, #16
    5eec:	ldr	r1, [sp, #4]
    5ef0:	ldr	r0, [sp]
    5ef4:	bl	3418 <InflateData>
    5ef8:	cmp	fp, #0
    5efc:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5f00:	add	r2, sp, #16
    5f04:	add	r3, sp, #14
    5f08:	ldr	r1, [sp, #8]
    5f0c:	add	r5, r1, r5, lsl #3
    5f10:	sub	r1, fp, #-2147483647	; 0x80000001
    5f14:	add	r2, r2, r1, lsl #1
    5f18:	ldrh	r1, [r3, #2]!
    5f1c:	vmov	s14, r1
    5f20:	vcvt.f64.u32	d7, s14
    5f24:	vstmia	r5!, {d7}
    5f28:	cmp	r3, r2
    5f2c:	bne	5f18 <ReadCompressedDoubleData+0x1024>
    5f30:	b	6044 <ReadCompressedDoubleData+0x1150>
    5f34:	mul	r3, fp, r0
    5f38:	add	r2, sp, #16
    5f3c:	ldr	r1, [sp, #4]
    5f40:	ldr	r0, [sp]
    5f44:	bl	3418 <InflateData>
    5f48:	cmp	fp, #0
    5f4c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    5f50:	add	r1, sp, #16
    5f54:	add	r3, sp, #14
    5f58:	ldr	r2, [sp, #8]
    5f5c:	sub	r0, fp, #-2147483647	; 0x80000001
    5f60:	add	r1, r1, r0, lsl #1
    5f64:	ldrh	r0, [r3, #2]!
    5f68:	vmov	s14, r0
    5f6c:	vcvt.f64.u32	d7, s14
    5f70:	vstmia	r2!, {d7}
    5f74:	cmp	r3, r1
    5f78:	bne	5f64 <ReadCompressedDoubleData+0x1070>
    5f7c:	b	6044 <ReadCompressedDoubleData+0x1150>
    5f80:	cmp	fp, #1024	; 0x400
    5f84:	ble	6054 <ReadCompressedDoubleData+0x1160>
    5f88:	sub	fp, fp, #1024	; 0x400
    5f8c:	cmp	fp, #0
    5f90:	ble	60a0 <ReadCompressedDoubleData+0x11ac>
    5f94:	lsl	r9, r0, #10
    5f98:	ldr	r6, [sp, #8]
    5f9c:	mov	r5, #0
    5fa0:	add	r7, sp, #16
    5fa4:	add	r4, sp, #1024	; 0x400
    5fa8:	add	r4, r4, #15
    5fac:	mov	r3, r9
    5fb0:	mov	r2, r7
    5fb4:	ldr	r1, [sp, #4]
    5fb8:	ldr	r0, [sp]
    5fbc:	bl	3418 <InflateData>
    5fc0:	sub	r3, r7, #1
    5fc4:	mov	r2, r6
    5fc8:	ldrb	r1, [r3, #1]!
    5fcc:	vmov	s14, r1
    5fd0:	vcvt.f64.u32	d7, s14
    5fd4:	vstmia	r2!, {d7}
    5fd8:	cmp	r3, r4
    5fdc:	bne	5fc8 <ReadCompressedDoubleData+0x10d4>
    5fe0:	add	r5, r5, #1024	; 0x400
    5fe4:	add	r6, r6, #8192	; 0x2000
    5fe8:	cmp	fp, r5
    5fec:	bgt	5fac <ReadCompressedDoubleData+0x10b8>
    5ff0:	sub	r3, r5, #1024	; 0x400
    5ff4:	sub	fp, fp, r3
    5ff8:	mul	r3, fp, r8
    5ffc:	add	r2, sp, #16
    6000:	ldr	r1, [sp, #4]
    6004:	ldr	r0, [sp]
    6008:	bl	3418 <InflateData>
    600c:	cmp	fp, #0
    6010:	ble	6044 <ReadCompressedDoubleData+0x1150>
    6014:	add	r2, sp, #16
    6018:	add	r3, sp, #15
    601c:	ldr	r1, [sp, #8]
    6020:	add	r5, r1, r5, lsl #3
    6024:	sub	r1, fp, #1
    6028:	add	r2, r2, r1
    602c:	ldrb	r1, [r3, #1]!
    6030:	vmov	s14, r1
    6034:	vcvt.f64.u32	d7, s14
    6038:	vstmia	r5!, {d7}
    603c:	cmp	r3, r2
    6040:	bne	602c <ReadCompressedDoubleData+0x1138>
    6044:	mul	r0, r8, fp
    6048:	add	sp, sp, #1040	; 0x410
    604c:	add	sp, sp, #4
    6050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6054:	mul	r3, fp, r0
    6058:	add	r2, sp, #16
    605c:	ldr	r1, [sp, #4]
    6060:	ldr	r0, [sp]
    6064:	bl	3418 <InflateData>
    6068:	cmp	fp, #0
    606c:	ble	6044 <ReadCompressedDoubleData+0x1150>
    6070:	add	r1, sp, #16
    6074:	add	r3, sp, #15
    6078:	ldr	r2, [sp, #8]
    607c:	sub	r0, fp, #1
    6080:	add	r1, r1, r0
    6084:	ldrb	r0, [r3, #1]!
    6088:	vmov	s14, r0
    608c:	vcvt.f64.u32	d7, s14
    6090:	vstmia	r2!, {d7}
    6094:	cmp	r1, r3
    6098:	bne	6084 <ReadCompressedDoubleData+0x1190>
    609c:	b	6044 <ReadCompressedDoubleData+0x1150>
    60a0:	mov	r5, #0
    60a4:	b	5ff0 <ReadCompressedDoubleData+0x10fc>
    60a8:	cmp	fp, #1024	; 0x400
    60ac:	ble	6170 <ReadCompressedDoubleData+0x127c>
    60b0:	sub	fp, fp, #1024	; 0x400
    60b4:	cmp	fp, #0
    60b8:	ble	61bc <ReadCompressedDoubleData+0x12c8>
    60bc:	lsl	r9, r0, #10
    60c0:	ldr	r6, [sp, #8]
    60c4:	mov	r5, #0
    60c8:	add	r7, sp, #16
    60cc:	add	r4, sp, #1024	; 0x400
    60d0:	add	r4, r4, #15
    60d4:	mov	r3, r9
    60d8:	mov	r2, r7
    60dc:	ldr	r1, [sp, #4]
    60e0:	ldr	r0, [sp]
    60e4:	bl	3418 <InflateData>
    60e8:	sub	r3, r7, #1
    60ec:	mov	r2, r6
    60f0:	ldrsb	r1, [r3, #1]!
    60f4:	vmov	s14, r1
    60f8:	vcvt.f64.s32	d7, s14
    60fc:	vstmia	r2!, {d7}
    6100:	cmp	r4, r3
    6104:	bne	60f0 <ReadCompressedDoubleData+0x11fc>
    6108:	add	r5, r5, #1024	; 0x400
    610c:	add	r6, r6, #8192	; 0x2000
    6110:	cmp	fp, r5
    6114:	bgt	60d4 <ReadCompressedDoubleData+0x11e0>
    6118:	sub	r3, r5, #1024	; 0x400
    611c:	sub	fp, fp, r3
    6120:	mul	r3, fp, r8
    6124:	add	r2, sp, #16
    6128:	ldr	r1, [sp, #4]
    612c:	ldr	r0, [sp]
    6130:	bl	3418 <InflateData>
    6134:	cmp	fp, #0
    6138:	ble	6044 <ReadCompressedDoubleData+0x1150>
    613c:	add	r2, sp, #16
    6140:	add	r3, sp, #15
    6144:	ldr	r1, [sp, #8]
    6148:	add	r5, r1, r5, lsl #3
    614c:	sub	r1, fp, #1
    6150:	add	r2, r2, r1
    6154:	ldrsb	r1, [r3, #1]!
    6158:	vmov	s14, r1
    615c:	vcvt.f64.s32	d7, s14
    6160:	vstmia	r5!, {d7}
    6164:	cmp	r3, r2
    6168:	bne	6154 <ReadCompressedDoubleData+0x1260>
    616c:	b	6044 <ReadCompressedDoubleData+0x1150>
    6170:	mul	r3, fp, r0
    6174:	add	r2, sp, #16
    6178:	ldr	r1, [sp, #4]
    617c:	ldr	r0, [sp]
    6180:	bl	3418 <InflateData>
    6184:	cmp	fp, #0
    6188:	ble	6044 <ReadCompressedDoubleData+0x1150>
    618c:	add	r1, sp, #16
    6190:	add	r3, sp, #15
    6194:	ldr	r2, [sp, #8]
    6198:	sub	r0, fp, #1
    619c:	add	r1, r1, r0
    61a0:	ldrsb	r0, [r3, #1]!
    61a4:	vmov	s14, r0
    61a8:	vcvt.f64.s32	d7, s14
    61ac:	vstmia	r2!, {d7}
    61b0:	cmp	r3, r1
    61b4:	bne	61a0 <ReadCompressedDoubleData+0x12ac>
    61b8:	b	6044 <ReadCompressedDoubleData+0x1150>
    61bc:	mov	r5, #0
    61c0:	b	6118 <ReadCompressedDoubleData+0x1224>
    61c4:	mov	r0, #0
    61c8:	b	6048 <ReadCompressedDoubleData+0x1154>

000061cc <ReadSingleData>:
    61cc:	cmp	r1, #0
    61d0:	cmpne	r0, #0
    61d4:	beq	77fc <ReadSingleData+0x1630>
    61d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    61dc:	sub	sp, sp, #2064	; 0x810
    61e0:	sub	sp, sp, #4
    61e4:	mov	r9, r0
    61e8:	mov	ip, r1
    61ec:	ldr	r1, [r0]
    61f0:	cmp	r1, #0
    61f4:	moveq	r0, #0
    61f8:	beq	7124 <ReadSingleData+0xf58>
    61fc:	str	ip, [sp, #4]
    6200:	mov	r7, r3
    6204:	mov	r4, r2
    6208:	mov	r0, r2
    620c:	bl	1600 <Mat_SizeOf@plt>
    6210:	str	r0, [sp]
    6214:	sub	r3, r4, #1
    6218:	cmp	r3, #8
    621c:	addls	pc, pc, r3, lsl #2
    6220:	b	7300 <ReadSingleData+0x1134>
    6224:	b	709c <ReadSingleData+0xed0>
    6228:	b	71d8 <ReadSingleData+0x100c>
    622c:	b	6bb4 <ReadSingleData+0x9e8>
    6230:	b	6e28 <ReadSingleData+0xc5c>
    6234:	b	66cc <ReadSingleData+0x500>
    6238:	b	6940 <ReadSingleData+0x774>
    623c:	b	6498 <ReadSingleData+0x2cc>
    6240:	b	7300 <ReadSingleData+0x1134>
    6244:	b	6248 <ReadSingleData+0x7c>
    6248:	ldr	r8, [r9, #20]
    624c:	cmp	r8, #0
    6250:	beq	6390 <ReadSingleData+0x1c4>
    6254:	cmp	r7, #256	; 0x100
    6258:	ble	6340 <ReadSingleData+0x174>
    625c:	sub	r3, r7, #256	; 0x100
    6260:	cmp	r3, #0
    6264:	movle	sl, #0
    6268:	movle	r8, sl
    626c:	ble	62e0 <ReadSingleData+0x114>
    6270:	ldr	fp, [sp, #4]
    6274:	mov	sl, #0
    6278:	mov	r8, sl
    627c:	add	r2, sp, #16
    6280:	str	r2, [sp, #8]
    6284:	str	r7, [sp, #12]
    6288:	mov	r7, r3
    628c:	ldr	r3, [r9]
    6290:	mov	r2, #256	; 0x100
    6294:	ldr	r1, [sp]
    6298:	ldr	r4, [sp, #8]
    629c:	mov	r0, r4
    62a0:	bl	1588 <fread@plt>
    62a4:	add	r8, r8, r0
    62a8:	add	r6, sp, #2064	; 0x810
    62ac:	mov	r5, fp
    62b0:	mov	r0, r4
    62b4:	bl	1b94 <Mat_doubleSwap>
    62b8:	vcvt.f32.f64	s0, d0
    62bc:	vstmia	r5!, {s0}
    62c0:	add	r4, r4, #8
    62c4:	cmp	r4, r6
    62c8:	bne	62b0 <ReadSingleData+0xe4>
    62cc:	add	sl, sl, #256	; 0x100
    62d0:	add	fp, fp, #1024	; 0x400
    62d4:	cmp	sl, r7
    62d8:	blt	628c <ReadSingleData+0xc0>
    62dc:	ldr	r7, [sp, #12]
    62e0:	cmp	r7, sl
    62e4:	ble	711c <ReadSingleData+0xf50>
    62e8:	sub	r7, r7, sl
    62ec:	ldr	r3, [r9]
    62f0:	mov	r2, r7
    62f4:	ldr	r1, [sp]
    62f8:	add	r0, sp, #16
    62fc:	bl	1588 <fread@plt>
    6300:	add	r8, r8, r0
    6304:	cmp	r7, #0
    6308:	ble	711c <ReadSingleData+0xf50>
    630c:	add	r5, sp, #16
    6310:	ldr	r3, [sp, #4]
    6314:	add	sl, r3, sl, lsl #2
    6318:	mov	r4, #0
    631c:	mov	r0, r5
    6320:	bl	1b94 <Mat_doubleSwap>
    6324:	vcvt.f32.f64	s0, d0
    6328:	vstmia	sl!, {s0}
    632c:	add	r4, r4, #1
    6330:	add	r5, r5, #8
    6334:	cmp	r7, r4
    6338:	bne	631c <ReadSingleData+0x150>
    633c:	b	711c <ReadSingleData+0xf50>
    6340:	ldr	r3, [r9]
    6344:	mov	r2, r7
    6348:	ldr	r1, [sp]
    634c:	add	r0, sp, #16
    6350:	bl	1588 <fread@plt>
    6354:	mov	r8, r0
    6358:	cmp	r7, #0
    635c:	ble	711c <ReadSingleData+0xf50>
    6360:	add	r5, sp, #16
    6364:	ldr	r3, [sp, #4]
    6368:	mov	r4, r3
    636c:	add	r7, r3, r7, lsl #2
    6370:	mov	r0, r5
    6374:	bl	1b94 <Mat_doubleSwap>
    6378:	vcvt.f32.f64	s0, d0
    637c:	vstmia	r4!, {s0}
    6380:	add	r5, r5, #8
    6384:	cmp	r4, r7
    6388:	bne	6370 <ReadSingleData+0x1a4>
    638c:	b	711c <ReadSingleData+0xf50>
    6390:	cmp	r7, #256	; 0x100
    6394:	ble	6454 <ReadSingleData+0x288>
    6398:	sub	sl, r7, #256	; 0x100
    639c:	cmp	sl, #0
    63a0:	movle	r4, r8
    63a4:	ble	6400 <ReadSingleData+0x234>
    63a8:	ldr	r5, [sp, #4]
    63ac:	mov	r4, r8
    63b0:	add	r6, sp, #16
    63b4:	mov	fp, #256	; 0x100
    63b8:	ldr	r3, [r9]
    63bc:	mov	r2, fp
    63c0:	ldr	r1, [sp]
    63c4:	mov	r0, r6
    63c8:	bl	1588 <fread@plt>
    63cc:	add	r8, r8, r0
    63d0:	mov	r3, r6
    63d4:	add	r1, sp, #2064	; 0x810
    63d8:	mov	r2, r5
    63dc:	vldmia	r3!, {d7}
    63e0:	vcvt.f32.f64	s14, d7
    63e4:	vstmia	r2!, {s14}
    63e8:	cmp	r3, r1
    63ec:	bne	63dc <ReadSingleData+0x210>
    63f0:	add	r4, r4, #256	; 0x100
    63f4:	add	r5, r5, #1024	; 0x400
    63f8:	cmp	r4, sl
    63fc:	blt	63b8 <ReadSingleData+0x1ec>
    6400:	cmp	r7, r4
    6404:	ble	711c <ReadSingleData+0xf50>
    6408:	sub	r7, r7, r4
    640c:	ldr	r3, [r9]
    6410:	mov	r2, r7
    6414:	ldr	r1, [sp]
    6418:	add	r0, sp, #16
    641c:	bl	1588 <fread@plt>
    6420:	add	r8, r8, r0
    6424:	cmp	r7, #0
    6428:	ble	711c <ReadSingleData+0xf50>
    642c:	add	r3, sp, #16
    6430:	ldr	r2, [sp, #4]
    6434:	add	r4, r2, r4, lsl #2
    6438:	add	r2, r3, r7, lsl #3
    643c:	vldmia	r3!, {d7}
    6440:	vcvt.f32.f64	s14, d7
    6444:	vstmia	r4!, {s14}
    6448:	cmp	r3, r2
    644c:	bne	643c <ReadSingleData+0x270>
    6450:	b	711c <ReadSingleData+0xf50>
    6454:	ldr	r3, [r9]
    6458:	mov	r2, r7
    645c:	ldr	r1, [sp]
    6460:	add	r0, sp, #16
    6464:	bl	1588 <fread@plt>
    6468:	mov	r8, r0
    646c:	cmp	r7, #0
    6470:	ble	711c <ReadSingleData+0xf50>
    6474:	add	r3, sp, #16
    6478:	ldr	r2, [sp, #4]
    647c:	add	r7, r3, r7, lsl #3
    6480:	vldmia	r3!, {d7}
    6484:	vcvt.f32.f64	s14, d7
    6488:	vstmia	r2!, {s14}
    648c:	cmp	r3, r7
    6490:	bne	6480 <ReadSingleData+0x2b4>
    6494:	b	711c <ReadSingleData+0xf50>
    6498:	ldr	r8, [r9, #20]
    649c:	cmp	r8, #0
    64a0:	beq	65d4 <ReadSingleData+0x408>
    64a4:	cmp	r7, #256	; 0x100
    64a8:	ble	6588 <ReadSingleData+0x3bc>
    64ac:	sub	r3, r7, #256	; 0x100
    64b0:	cmp	r3, #0
    64b4:	movle	sl, #0
    64b8:	movle	r8, sl
    64bc:	ble	652c <ReadSingleData+0x360>
    64c0:	ldr	fp, [sp, #4]
    64c4:	mov	sl, #0
    64c8:	mov	r8, sl
    64cc:	add	r2, sp, #16
    64d0:	str	r2, [sp, #8]
    64d4:	add	r6, sp, #1040	; 0x410
    64d8:	str	r7, [sp, #12]
    64dc:	mov	r7, r3
    64e0:	ldr	r3, [r9]
    64e4:	mov	r2, #256	; 0x100
    64e8:	ldr	r1, [sp]
    64ec:	ldr	r4, [sp, #8]
    64f0:	mov	r0, r4
    64f4:	bl	1588 <fread@plt>
    64f8:	add	r8, r8, r0
    64fc:	mov	r5, fp
    6500:	mov	r0, r4
    6504:	bl	1b38 <Mat_floatSwap>
    6508:	vstmia	r5!, {s0}
    650c:	add	r4, r4, #4
    6510:	cmp	r4, r6
    6514:	bne	6500 <ReadSingleData+0x334>
    6518:	add	sl, sl, #256	; 0x100
    651c:	add	fp, fp, #1024	; 0x400
    6520:	cmp	sl, r7
    6524:	blt	64e0 <ReadSingleData+0x314>
    6528:	ldr	r7, [sp, #12]
    652c:	cmp	r7, sl
    6530:	ble	711c <ReadSingleData+0xf50>
    6534:	sub	r7, r7, sl
    6538:	ldr	r3, [r9]
    653c:	mov	r2, r7
    6540:	ldr	r1, [sp]
    6544:	add	r0, sp, #16
    6548:	bl	1588 <fread@plt>
    654c:	add	r8, r8, r0
    6550:	cmp	r7, #0
    6554:	ble	711c <ReadSingleData+0xf50>
    6558:	add	r5, sp, #16
    655c:	ldr	r3, [sp, #4]
    6560:	add	sl, r3, sl, lsl #2
    6564:	mov	r4, #0
    6568:	mov	r0, r5
    656c:	bl	1b38 <Mat_floatSwap>
    6570:	vstmia	sl!, {s0}
    6574:	add	r4, r4, #1
    6578:	add	r5, r5, #4
    657c:	cmp	r7, r4
    6580:	bne	6568 <ReadSingleData+0x39c>
    6584:	b	711c <ReadSingleData+0xf50>
    6588:	ldr	r3, [r9]
    658c:	mov	r2, r7
    6590:	ldr	r1, [sp]
    6594:	add	r0, sp, #16
    6598:	bl	1588 <fread@plt>
    659c:	mov	r8, r0
    65a0:	cmp	r7, #0
    65a4:	ble	711c <ReadSingleData+0xf50>
    65a8:	add	r5, sp, #16
    65ac:	ldr	r3, [sp, #4]
    65b0:	mov	r4, r3
    65b4:	add	r7, r3, r7, lsl #2
    65b8:	mov	r0, r5
    65bc:	bl	1b38 <Mat_floatSwap>
    65c0:	vstmia	r4!, {s0}
    65c4:	add	r5, r5, #4
    65c8:	cmp	r4, r7
    65cc:	bne	65b8 <ReadSingleData+0x3ec>
    65d0:	b	711c <ReadSingleData+0xf50>
    65d4:	cmp	r7, #256	; 0x100
    65d8:	ble	668c <ReadSingleData+0x4c0>
    65dc:	sub	fp, r7, #256	; 0x100
    65e0:	cmp	fp, #0
    65e4:	movle	r5, r8
    65e8:	ble	663c <ReadSingleData+0x470>
    65ec:	ldr	r6, [sp, #4]
    65f0:	mov	r5, r8
    65f4:	add	sl, sp, #16
    65f8:	add	r4, sp, #1040	; 0x410
    65fc:	ldr	r3, [r9]
    6600:	mov	r2, #256	; 0x100
    6604:	ldr	r1, [sp]
    6608:	mov	r0, sl
    660c:	bl	1588 <fread@plt>
    6610:	add	r8, r8, r0
    6614:	mov	r3, sl
    6618:	mov	r2, r6
    661c:	ldr	r1, [r3], #4
    6620:	str	r1, [r2], #4
    6624:	cmp	r3, r4
    6628:	bne	661c <ReadSingleData+0x450>
    662c:	add	r5, r5, #256	; 0x100
    6630:	add	r6, r6, #1024	; 0x400
    6634:	cmp	r5, fp
    6638:	blt	65fc <ReadSingleData+0x430>
    663c:	cmp	r7, r5
    6640:	ble	711c <ReadSingleData+0xf50>
    6644:	sub	r7, r7, r5
    6648:	ldr	r3, [r9]
    664c:	mov	r2, r7
    6650:	ldr	r1, [sp]
    6654:	add	r0, sp, #16
    6658:	bl	1588 <fread@plt>
    665c:	add	r8, r8, r0
    6660:	cmp	r7, #0
    6664:	ble	711c <ReadSingleData+0xf50>
    6668:	add	r3, sp, #16
    666c:	ldr	r2, [sp, #4]
    6670:	add	r5, r2, r5, lsl #2
    6674:	add	r1, r3, r7, lsl #2
    6678:	ldr	r2, [r3], #4
    667c:	str	r2, [r5], #4
    6680:	cmp	r3, r1
    6684:	bne	6678 <ReadSingleData+0x4ac>
    6688:	b	711c <ReadSingleData+0xf50>
    668c:	ldr	r3, [r9]
    6690:	mov	r2, r7
    6694:	ldr	r1, [sp]
    6698:	add	r0, sp, #16
    669c:	bl	1588 <fread@plt>
    66a0:	mov	r8, r0
    66a4:	cmp	r7, #0
    66a8:	ble	711c <ReadSingleData+0xf50>
    66ac:	add	r3, sp, #16
    66b0:	ldr	r2, [sp, #4]
    66b4:	add	r7, r3, r7, lsl #2
    66b8:	ldr	r1, [r3], #4
    66bc:	str	r1, [r2], #4
    66c0:	cmp	r3, r7
    66c4:	bne	66b8 <ReadSingleData+0x4ec>
    66c8:	b	711c <ReadSingleData+0xf50>
    66cc:	ldr	r8, [r9, #20]
    66d0:	cmp	r8, #0
    66d4:	beq	6820 <ReadSingleData+0x654>
    66d8:	cmp	r7, #256	; 0x100
    66dc:	ble	67cc <ReadSingleData+0x600>
    66e0:	sub	r3, r7, #256	; 0x100
    66e4:	cmp	r3, #0
    66e8:	movle	sl, #0
    66ec:	movle	r8, sl
    66f0:	ble	6768 <ReadSingleData+0x59c>
    66f4:	ldr	fp, [sp, #4]
    66f8:	mov	sl, #0
    66fc:	mov	r8, sl
    6700:	add	r2, sp, #16
    6704:	str	r2, [sp, #8]
    6708:	add	r6, sp, #1040	; 0x410
    670c:	str	r7, [sp, #12]
    6710:	mov	r7, r3
    6714:	ldr	r3, [r9]
    6718:	mov	r2, #256	; 0x100
    671c:	ldr	r1, [sp]
    6720:	ldr	r4, [sp, #8]
    6724:	mov	r0, r4
    6728:	bl	1588 <fread@plt>
    672c:	add	r8, r8, r0
    6730:	mov	r5, fp
    6734:	mov	r0, r4
    6738:	bl	1a20 <Mat_int32Swap>
    673c:	vmov	s15, r0
    6740:	vcvt.f32.s32	s15, s15
    6744:	vstmia	r5!, {s15}
    6748:	add	r4, r4, #4
    674c:	cmp	r4, r6
    6750:	bne	6734 <ReadSingleData+0x568>
    6754:	add	sl, sl, #256	; 0x100
    6758:	add	fp, fp, #1024	; 0x400
    675c:	cmp	sl, r7
    6760:	blt	6714 <ReadSingleData+0x548>
    6764:	ldr	r7, [sp, #12]
    6768:	cmp	r7, sl
    676c:	ble	711c <ReadSingleData+0xf50>
    6770:	sub	r7, r7, sl
    6774:	ldr	r3, [r9]
    6778:	mov	r2, r7
    677c:	ldr	r1, [sp]
    6780:	add	r0, sp, #16
    6784:	bl	1588 <fread@plt>
    6788:	add	r8, r8, r0
    678c:	cmp	r7, #0
    6790:	ble	711c <ReadSingleData+0xf50>
    6794:	add	r5, sp, #16
    6798:	ldr	r3, [sp, #4]
    679c:	add	sl, r3, sl, lsl #2
    67a0:	mov	r4, #0
    67a4:	mov	r0, r5
    67a8:	bl	1a20 <Mat_int32Swap>
    67ac:	vmov	s15, r0
    67b0:	vcvt.f32.s32	s15, s15
    67b4:	vstmia	sl!, {s15}
    67b8:	add	r4, r4, #1
    67bc:	add	r5, r5, #4
    67c0:	cmp	r7, r4
    67c4:	bne	67a4 <ReadSingleData+0x5d8>
    67c8:	b	711c <ReadSingleData+0xf50>
    67cc:	ldr	r3, [r9]
    67d0:	mov	r2, r7
    67d4:	ldr	r1, [sp]
    67d8:	add	r0, sp, #16
    67dc:	bl	1588 <fread@plt>
    67e0:	mov	r8, r0
    67e4:	cmp	r7, #0
    67e8:	ble	711c <ReadSingleData+0xf50>
    67ec:	add	r5, sp, #16
    67f0:	ldr	r3, [sp, #4]
    67f4:	mov	r4, r3
    67f8:	add	r7, r3, r7, lsl #2
    67fc:	mov	r0, r5
    6800:	bl	1a20 <Mat_int32Swap>
    6804:	vmov	s15, r0
    6808:	vcvt.f32.s32	s15, s15
    680c:	vstmia	r4!, {s15}
    6810:	add	r5, r5, #4
    6814:	cmp	r4, r7
    6818:	bne	67fc <ReadSingleData+0x630>
    681c:	b	711c <ReadSingleData+0xf50>
    6820:	cmp	r7, #256	; 0x100
    6824:	ble	68f0 <ReadSingleData+0x724>
    6828:	sub	fp, r7, #256	; 0x100
    682c:	cmp	fp, #0
    6830:	movle	r5, r8
    6834:	ble	6890 <ReadSingleData+0x6c4>
    6838:	ldr	r6, [sp, #4]
    683c:	mov	r5, r8
    6840:	add	sl, sp, #16
    6844:	add	r4, sl, #1020	; 0x3fc
    6848:	ldr	r3, [r9]
    684c:	mov	r2, #256	; 0x100
    6850:	ldr	r1, [sp]
    6854:	mov	r0, sl
    6858:	bl	1588 <fread@plt>
    685c:	add	r8, r8, r0
    6860:	sub	r3, sl, #4
    6864:	mov	r2, r6
    6868:	ldr	r1, [r3, #4]!
    686c:	vmov	s15, r1
    6870:	vcvt.f32.s32	s15, s15
    6874:	vstmia	r2!, {s15}
    6878:	cmp	r3, r4
    687c:	bne	6868 <ReadSingleData+0x69c>
    6880:	add	r5, r5, #256	; 0x100
    6884:	add	r6, r6, #1024	; 0x400
    6888:	cmp	r5, fp
    688c:	blt	6848 <ReadSingleData+0x67c>
    6890:	cmp	r7, r5
    6894:	ble	711c <ReadSingleData+0xf50>
    6898:	sub	r7, r7, r5
    689c:	ldr	r3, [r9]
    68a0:	mov	r2, r7
    68a4:	ldr	r1, [sp]
    68a8:	add	r0, sp, #16
    68ac:	bl	1588 <fread@plt>
    68b0:	add	r8, r8, r0
    68b4:	cmp	r7, #0
    68b8:	ble	711c <ReadSingleData+0xf50>
    68bc:	add	r2, sp, #16
    68c0:	add	r3, sp, #12
    68c4:	ldr	r1, [sp, #4]
    68c8:	add	r5, r1, r5, lsl #2
    68cc:	sub	r7, r7, #-1073741823	; 0xc0000001
    68d0:	add	r2, r2, r7, lsl #2
    68d4:	ldr	r1, [r3, #4]!
    68d8:	vmov	s15, r1
    68dc:	vcvt.f32.s32	s15, s15
    68e0:	vstmia	r5!, {s15}
    68e4:	cmp	r3, r2
    68e8:	bne	68d4 <ReadSingleData+0x708>
    68ec:	b	711c <ReadSingleData+0xf50>
    68f0:	ldr	r3, [r9]
    68f4:	mov	r2, r7
    68f8:	ldr	r1, [sp]
    68fc:	add	r0, sp, #16
    6900:	bl	1588 <fread@plt>
    6904:	mov	r8, r0
    6908:	cmp	r7, #0
    690c:	ble	711c <ReadSingleData+0xf50>
    6910:	add	r1, sp, #16
    6914:	add	r3, sp, #12
    6918:	ldr	r2, [sp, #4]
    691c:	sub	r7, r7, #-1073741823	; 0xc0000001
    6920:	add	r1, r1, r7, lsl #2
    6924:	ldr	r0, [r3, #4]!
    6928:	vmov	s15, r0
    692c:	vcvt.f32.s32	s15, s15
    6930:	vstmia	r2!, {s15}
    6934:	cmp	r3, r1
    6938:	bne	6924 <ReadSingleData+0x758>
    693c:	b	711c <ReadSingleData+0xf50>
    6940:	ldr	r8, [r9, #20]
    6944:	cmp	r8, #0
    6948:	beq	6a94 <ReadSingleData+0x8c8>
    694c:	cmp	r7, #256	; 0x100
    6950:	ble	6a40 <ReadSingleData+0x874>
    6954:	sub	r3, r7, #256	; 0x100
    6958:	cmp	r3, #0
    695c:	movle	sl, #0
    6960:	movle	r8, sl
    6964:	ble	69dc <ReadSingleData+0x810>
    6968:	ldr	fp, [sp, #4]
    696c:	mov	sl, #0
    6970:	mov	r8, sl
    6974:	add	r2, sp, #16
    6978:	str	r2, [sp, #8]
    697c:	add	r6, sp, #1040	; 0x410
    6980:	str	r7, [sp, #12]
    6984:	mov	r7, r3
    6988:	ldr	r3, [r9]
    698c:	mov	r2, #256	; 0x100
    6990:	ldr	r1, [sp]
    6994:	ldr	r4, [sp, #8]
    6998:	mov	r0, r4
    699c:	bl	1588 <fread@plt>
    69a0:	add	r8, r8, r0
    69a4:	mov	r5, fp
    69a8:	mov	r0, r4
    69ac:	bl	1a88 <Mat_uint32Swap>
    69b0:	vmov	s15, r0
    69b4:	vcvt.f32.u32	s15, s15
    69b8:	vstmia	r5!, {s15}
    69bc:	add	r4, r4, #4
    69c0:	cmp	r4, r6
    69c4:	bne	69a8 <ReadSingleData+0x7dc>
    69c8:	add	sl, sl, #256	; 0x100
    69cc:	add	fp, fp, #1024	; 0x400
    69d0:	cmp	sl, r7
    69d4:	blt	6988 <ReadSingleData+0x7bc>
    69d8:	ldr	r7, [sp, #12]
    69dc:	cmp	r7, sl
    69e0:	ble	711c <ReadSingleData+0xf50>
    69e4:	sub	r7, r7, sl
    69e8:	ldr	r3, [r9]
    69ec:	mov	r2, r7
    69f0:	ldr	r1, [sp]
    69f4:	add	r0, sp, #16
    69f8:	bl	1588 <fread@plt>
    69fc:	add	r8, r8, r0
    6a00:	cmp	r7, #0
    6a04:	ble	711c <ReadSingleData+0xf50>
    6a08:	add	r5, sp, #16
    6a0c:	ldr	r3, [sp, #4]
    6a10:	add	sl, r3, sl, lsl #2
    6a14:	mov	r4, #0
    6a18:	mov	r0, r5
    6a1c:	bl	1a88 <Mat_uint32Swap>
    6a20:	vmov	s15, r0
    6a24:	vcvt.f32.u32	s15, s15
    6a28:	vstmia	sl!, {s15}
    6a2c:	add	r4, r4, #1
    6a30:	add	r5, r5, #4
    6a34:	cmp	r7, r4
    6a38:	bne	6a18 <ReadSingleData+0x84c>
    6a3c:	b	711c <ReadSingleData+0xf50>
    6a40:	ldr	r3, [r9]
    6a44:	mov	r2, r7
    6a48:	ldr	r1, [sp]
    6a4c:	add	r0, sp, #16
    6a50:	bl	1588 <fread@plt>
    6a54:	mov	r8, r0
    6a58:	cmp	r7, #0
    6a5c:	ble	711c <ReadSingleData+0xf50>
    6a60:	add	r5, sp, #16
    6a64:	ldr	r3, [sp, #4]
    6a68:	mov	r4, r3
    6a6c:	add	r7, r3, r7, lsl #2
    6a70:	mov	r0, r5
    6a74:	bl	1a88 <Mat_uint32Swap>
    6a78:	vmov	s15, r0
    6a7c:	vcvt.f32.u32	s15, s15
    6a80:	vstmia	r4!, {s15}
    6a84:	add	r5, r5, #4
    6a88:	cmp	r4, r7
    6a8c:	bne	6a70 <ReadSingleData+0x8a4>
    6a90:	b	711c <ReadSingleData+0xf50>
    6a94:	cmp	r7, #256	; 0x100
    6a98:	ble	6b64 <ReadSingleData+0x998>
    6a9c:	sub	fp, r7, #256	; 0x100
    6aa0:	cmp	fp, #0
    6aa4:	movle	r5, r8
    6aa8:	ble	6b04 <ReadSingleData+0x938>
    6aac:	ldr	r6, [sp, #4]
    6ab0:	mov	r5, r8
    6ab4:	add	sl, sp, #16
    6ab8:	add	r4, sl, #1020	; 0x3fc
    6abc:	ldr	r3, [r9]
    6ac0:	mov	r2, #256	; 0x100
    6ac4:	ldr	r1, [sp]
    6ac8:	mov	r0, sl
    6acc:	bl	1588 <fread@plt>
    6ad0:	add	r8, r8, r0
    6ad4:	sub	r3, sl, #4
    6ad8:	mov	r2, r6
    6adc:	ldr	r1, [r3, #4]!
    6ae0:	vmov	s15, r1
    6ae4:	vcvt.f32.u32	s15, s15
    6ae8:	vstmia	r2!, {s15}
    6aec:	cmp	r3, r4
    6af0:	bne	6adc <ReadSingleData+0x910>
    6af4:	add	r5, r5, #256	; 0x100
    6af8:	add	r6, r6, #1024	; 0x400
    6afc:	cmp	r5, fp
    6b00:	blt	6abc <ReadSingleData+0x8f0>
    6b04:	cmp	r7, r5
    6b08:	ble	711c <ReadSingleData+0xf50>
    6b0c:	sub	r7, r7, r5
    6b10:	ldr	r3, [r9]
    6b14:	mov	r2, r7
    6b18:	ldr	r1, [sp]
    6b1c:	add	r0, sp, #16
    6b20:	bl	1588 <fread@plt>
    6b24:	add	r8, r8, r0
    6b28:	cmp	r7, #0
    6b2c:	ble	711c <ReadSingleData+0xf50>
    6b30:	add	r2, sp, #16
    6b34:	add	r3, sp, #12
    6b38:	ldr	r1, [sp, #4]
    6b3c:	add	r5, r1, r5, lsl #2
    6b40:	sub	r7, r7, #-1073741823	; 0xc0000001
    6b44:	add	r2, r2, r7, lsl #2
    6b48:	ldr	r1, [r3, #4]!
    6b4c:	vmov	s15, r1
    6b50:	vcvt.f32.u32	s15, s15
    6b54:	vstmia	r5!, {s15}
    6b58:	cmp	r3, r2
    6b5c:	bne	6b48 <ReadSingleData+0x97c>
    6b60:	b	711c <ReadSingleData+0xf50>
    6b64:	ldr	r3, [r9]
    6b68:	mov	r2, r7
    6b6c:	ldr	r1, [sp]
    6b70:	add	r0, sp, #16
    6b74:	bl	1588 <fread@plt>
    6b78:	mov	r8, r0
    6b7c:	cmp	r7, #0
    6b80:	ble	711c <ReadSingleData+0xf50>
    6b84:	add	r1, sp, #16
    6b88:	add	r3, sp, #12
    6b8c:	ldr	r2, [sp, #4]
    6b90:	sub	r7, r7, #-1073741823	; 0xc0000001
    6b94:	add	r1, r1, r7, lsl #2
    6b98:	ldr	r0, [r3, #4]!
    6b9c:	vmov	s15, r0
    6ba0:	vcvt.f32.u32	s15, s15
    6ba4:	vstmia	r2!, {s15}
    6ba8:	cmp	r3, r1
    6bac:	bne	6b98 <ReadSingleData+0x9cc>
    6bb0:	b	711c <ReadSingleData+0xf50>
    6bb4:	ldr	r8, [r9, #20]
    6bb8:	cmp	r8, #0
    6bbc:	beq	6d04 <ReadSingleData+0xb38>
    6bc0:	cmp	r7, #256	; 0x100
    6bc4:	ble	6cb0 <ReadSingleData+0xae4>
    6bc8:	sub	r3, r7, #256	; 0x100
    6bcc:	cmp	r3, #0
    6bd0:	movle	sl, #0
    6bd4:	movle	r8, sl
    6bd8:	ble	6c50 <ReadSingleData+0xa84>
    6bdc:	ldr	fp, [sp, #4]
    6be0:	mov	sl, #0
    6be4:	mov	r8, sl
    6be8:	add	r2, sp, #16
    6bec:	str	r2, [sp, #8]
    6bf0:	add	r6, sp, #528	; 0x210
    6bf4:	str	r7, [sp, #12]
    6bf8:	mov	r7, r3
    6bfc:	ldr	r3, [r9]
    6c00:	mov	r2, #256	; 0x100
    6c04:	ldr	r1, [sp]
    6c08:	ldr	r4, [sp, #8]
    6c0c:	mov	r0, r4
    6c10:	bl	1588 <fread@plt>
    6c14:	add	r8, r8, r0
    6c18:	mov	r5, fp
    6c1c:	mov	r0, r4
    6c20:	bl	1ae4 <Mat_int16Swap>
    6c24:	vmov	s15, r0
    6c28:	vcvt.f32.s32	s15, s15
    6c2c:	vstmia	r5!, {s15}
    6c30:	add	r4, r4, #2
    6c34:	cmp	r6, r4
    6c38:	bne	6c1c <ReadSingleData+0xa50>
    6c3c:	add	sl, sl, #256	; 0x100
    6c40:	add	fp, fp, #1024	; 0x400
    6c44:	cmp	sl, r7
    6c48:	blt	6bfc <ReadSingleData+0xa30>
    6c4c:	ldr	r7, [sp, #12]
    6c50:	cmp	r7, sl
    6c54:	ble	711c <ReadSingleData+0xf50>
    6c58:	sub	r7, r7, sl
    6c5c:	ldr	r3, [r9]
    6c60:	mov	r2, r7
    6c64:	ldr	r1, [sp]
    6c68:	add	r0, sp, #16
    6c6c:	bl	1588 <fread@plt>
    6c70:	add	r8, r8, r0
    6c74:	cmp	r7, #0
    6c78:	ble	711c <ReadSingleData+0xf50>
    6c7c:	add	r4, sp, #16
    6c80:	ldr	r3, [sp, #4]
    6c84:	add	sl, r3, sl, lsl #2
    6c88:	add	r7, r4, r7, lsl #1
    6c8c:	mov	r0, r4
    6c90:	bl	1ae4 <Mat_int16Swap>
    6c94:	vmov	s15, r0
    6c98:	vcvt.f32.s32	s15, s15
    6c9c:	vstmia	sl!, {s15}
    6ca0:	add	r4, r4, #2
    6ca4:	cmp	r4, r7
    6ca8:	bne	6c8c <ReadSingleData+0xac0>
    6cac:	b	711c <ReadSingleData+0xf50>
    6cb0:	ldr	r3, [r9]
    6cb4:	mov	r2, r7
    6cb8:	ldr	r1, [sp]
    6cbc:	add	r0, sp, #16
    6cc0:	bl	1588 <fread@plt>
    6cc4:	mov	r8, r0
    6cc8:	cmp	r7, #0
    6ccc:	ble	711c <ReadSingleData+0xf50>
    6cd0:	add	r5, sp, #16
    6cd4:	ldr	r3, [sp, #4]
    6cd8:	mov	r4, r3
    6cdc:	add	r7, r3, r7, lsl #2
    6ce0:	mov	r0, r5
    6ce4:	bl	1ae4 <Mat_int16Swap>
    6ce8:	vmov	s15, r0
    6cec:	vcvt.f32.s32	s15, s15
    6cf0:	vstmia	r4!, {s15}
    6cf4:	add	r5, r5, #2
    6cf8:	cmp	r4, r7
    6cfc:	bne	6ce0 <ReadSingleData+0xb14>
    6d00:	b	711c <ReadSingleData+0xf50>
    6d04:	cmp	r7, #256	; 0x100
    6d08:	ble	6dd8 <ReadSingleData+0xc0c>
    6d0c:	sub	fp, r7, #256	; 0x100
    6d10:	cmp	fp, #0
    6d14:	movle	r5, r8
    6d18:	ble	6d78 <ReadSingleData+0xbac>
    6d1c:	ldr	r6, [sp, #4]
    6d20:	mov	r5, r8
    6d24:	add	sl, sp, #16
    6d28:	add	r4, sl, #508	; 0x1fc
    6d2c:	add	r4, r4, #2
    6d30:	ldr	r3, [r9]
    6d34:	mov	r2, #256	; 0x100
    6d38:	ldr	r1, [sp]
    6d3c:	mov	r0, sl
    6d40:	bl	1588 <fread@plt>
    6d44:	add	r8, r8, r0
    6d48:	sub	r3, sl, #2
    6d4c:	mov	r2, r6
    6d50:	ldrsh	r1, [r3, #2]!
    6d54:	vmov	s15, r1
    6d58:	vcvt.f32.s32	s15, s15
    6d5c:	vstmia	r2!, {s15}
    6d60:	cmp	r3, r4
    6d64:	bne	6d50 <ReadSingleData+0xb84>
    6d68:	add	r5, r5, #256	; 0x100
    6d6c:	add	r6, r6, #1024	; 0x400
    6d70:	cmp	r5, fp
    6d74:	blt	6d30 <ReadSingleData+0xb64>
    6d78:	cmp	r7, r5
    6d7c:	ble	711c <ReadSingleData+0xf50>
    6d80:	sub	r7, r7, r5
    6d84:	ldr	r3, [r9]
    6d88:	mov	r2, r7
    6d8c:	ldr	r1, [sp]
    6d90:	add	r0, sp, #16
    6d94:	bl	1588 <fread@plt>
    6d98:	add	r8, r8, r0
    6d9c:	cmp	r7, #0
    6da0:	ble	711c <ReadSingleData+0xf50>
    6da4:	add	r2, sp, #16
    6da8:	add	r3, sp, #14
    6dac:	ldr	r1, [sp, #4]
    6db0:	add	r5, r1, r5, lsl #2
    6db4:	sub	r7, r7, #-2147483647	; 0x80000001
    6db8:	add	r2, r2, r7, lsl #1
    6dbc:	ldrsh	r1, [r3, #2]!
    6dc0:	vmov	s15, r1
    6dc4:	vcvt.f32.s32	s15, s15
    6dc8:	vstmia	r5!, {s15}
    6dcc:	cmp	r3, r2
    6dd0:	bne	6dbc <ReadSingleData+0xbf0>
    6dd4:	b	711c <ReadSingleData+0xf50>
    6dd8:	ldr	r3, [r9]
    6ddc:	mov	r2, r7
    6de0:	ldr	r1, [sp]
    6de4:	add	r0, sp, #16
    6de8:	bl	1588 <fread@plt>
    6dec:	mov	r8, r0
    6df0:	cmp	r7, #0
    6df4:	ble	711c <ReadSingleData+0xf50>
    6df8:	add	r1, sp, #16
    6dfc:	add	r3, sp, #14
    6e00:	ldr	r2, [sp, #4]
    6e04:	sub	r7, r7, #-2147483647	; 0x80000001
    6e08:	add	r1, r1, r7, lsl #1
    6e0c:	ldrsh	r0, [r3, #2]!
    6e10:	vmov	s15, r0
    6e14:	vcvt.f32.s32	s15, s15
    6e18:	vstmia	r2!, {s15}
    6e1c:	cmp	r3, r1
    6e20:	bne	6e0c <ReadSingleData+0xc40>
    6e24:	b	711c <ReadSingleData+0xf50>
    6e28:	ldr	r8, [r9, #20]
    6e2c:	cmp	r8, #0
    6e30:	beq	6f78 <ReadSingleData+0xdac>
    6e34:	cmp	r7, #256	; 0x100
    6e38:	ble	6f24 <ReadSingleData+0xd58>
    6e3c:	sub	r3, r7, #256	; 0x100
    6e40:	cmp	r3, #0
    6e44:	movle	sl, #0
    6e48:	movle	r8, sl
    6e4c:	ble	6ec4 <ReadSingleData+0xcf8>
    6e50:	ldr	fp, [sp, #4]
    6e54:	mov	sl, #0
    6e58:	mov	r8, sl
    6e5c:	add	r2, sp, #16
    6e60:	str	r2, [sp, #8]
    6e64:	add	r6, sp, #528	; 0x210
    6e68:	str	r7, [sp, #12]
    6e6c:	mov	r7, r3
    6e70:	ldr	r3, [r9]
    6e74:	mov	r2, #256	; 0x100
    6e78:	ldr	r1, [sp]
    6e7c:	ldr	r4, [sp, #8]
    6e80:	mov	r0, r4
    6e84:	bl	1588 <fread@plt>
    6e88:	add	r8, r8, r0
    6e8c:	mov	r5, fp
    6e90:	mov	r0, r4
    6e94:	bl	1b1c <Mat_uint16Swap>
    6e98:	vmov	s15, r0
    6e9c:	vcvt.f32.u32	s15, s15
    6ea0:	vstmia	r5!, {s15}
    6ea4:	add	r4, r4, #2
    6ea8:	cmp	r4, r6
    6eac:	bne	6e90 <ReadSingleData+0xcc4>
    6eb0:	add	sl, sl, #256	; 0x100
    6eb4:	add	fp, fp, #1024	; 0x400
    6eb8:	cmp	sl, r7
    6ebc:	blt	6e70 <ReadSingleData+0xca4>
    6ec0:	ldr	r7, [sp, #12]
    6ec4:	cmp	r7, sl
    6ec8:	ble	711c <ReadSingleData+0xf50>
    6ecc:	sub	r7, r7, sl
    6ed0:	ldr	r3, [r9]
    6ed4:	mov	r2, r7
    6ed8:	ldr	r1, [sp]
    6edc:	add	r0, sp, #16
    6ee0:	bl	1588 <fread@plt>
    6ee4:	add	r8, r8, r0
    6ee8:	cmp	r7, #0
    6eec:	ble	711c <ReadSingleData+0xf50>
    6ef0:	add	r4, sp, #16
    6ef4:	ldr	r3, [sp, #4]
    6ef8:	add	sl, r3, sl, lsl #2
    6efc:	add	r7, r4, r7, lsl #1
    6f00:	mov	r0, r4
    6f04:	bl	1b1c <Mat_uint16Swap>
    6f08:	vmov	s15, r0
    6f0c:	vcvt.f32.u32	s15, s15
    6f10:	vstmia	sl!, {s15}
    6f14:	add	r4, r4, #2
    6f18:	cmp	r4, r7
    6f1c:	bne	6f00 <ReadSingleData+0xd34>
    6f20:	b	711c <ReadSingleData+0xf50>
    6f24:	ldr	r3, [r9]
    6f28:	mov	r2, r7
    6f2c:	ldr	r1, [sp]
    6f30:	add	r0, sp, #16
    6f34:	bl	1588 <fread@plt>
    6f38:	mov	r8, r0
    6f3c:	cmp	r7, #0
    6f40:	ble	711c <ReadSingleData+0xf50>
    6f44:	add	r5, sp, #16
    6f48:	ldr	r3, [sp, #4]
    6f4c:	mov	r4, r3
    6f50:	add	r7, r3, r7, lsl #2
    6f54:	mov	r0, r5
    6f58:	bl	1b1c <Mat_uint16Swap>
    6f5c:	vmov	s15, r0
    6f60:	vcvt.f32.u32	s15, s15
    6f64:	vstmia	r4!, {s15}
    6f68:	add	r5, r5, #2
    6f6c:	cmp	r4, r7
    6f70:	bne	6f54 <ReadSingleData+0xd88>
    6f74:	b	711c <ReadSingleData+0xf50>
    6f78:	cmp	r7, #256	; 0x100
    6f7c:	ble	704c <ReadSingleData+0xe80>
    6f80:	sub	fp, r7, #256	; 0x100
    6f84:	cmp	fp, #0
    6f88:	movle	r5, r8
    6f8c:	ble	6fec <ReadSingleData+0xe20>
    6f90:	ldr	r6, [sp, #4]
    6f94:	mov	r5, r8
    6f98:	add	sl, sp, #16
    6f9c:	add	r4, sl, #508	; 0x1fc
    6fa0:	add	r4, r4, #2
    6fa4:	ldr	r3, [r9]
    6fa8:	mov	r2, #256	; 0x100
    6fac:	ldr	r1, [sp]
    6fb0:	mov	r0, sl
    6fb4:	bl	1588 <fread@plt>
    6fb8:	add	r8, r8, r0
    6fbc:	sub	r3, sl, #2
    6fc0:	mov	r2, r6
    6fc4:	ldrh	r1, [r3, #2]!
    6fc8:	vmov	s15, r1
    6fcc:	vcvt.f32.u32	s15, s15
    6fd0:	vstmia	r2!, {s15}
    6fd4:	cmp	r3, r4
    6fd8:	bne	6fc4 <ReadSingleData+0xdf8>
    6fdc:	add	r5, r5, #256	; 0x100
    6fe0:	add	r6, r6, #1024	; 0x400
    6fe4:	cmp	r5, fp
    6fe8:	blt	6fa4 <ReadSingleData+0xdd8>
    6fec:	cmp	r7, r5
    6ff0:	ble	711c <ReadSingleData+0xf50>
    6ff4:	sub	r7, r7, r5
    6ff8:	ldr	r3, [r9]
    6ffc:	mov	r2, r7
    7000:	ldr	r1, [sp]
    7004:	add	r0, sp, #16
    7008:	bl	1588 <fread@plt>
    700c:	add	r8, r8, r0
    7010:	cmp	r7, #0
    7014:	ble	711c <ReadSingleData+0xf50>
    7018:	add	r2, sp, #16
    701c:	add	r3, sp, #14
    7020:	ldr	r1, [sp, #4]
    7024:	add	r5, r1, r5, lsl #2
    7028:	sub	r7, r7, #-2147483647	; 0x80000001
    702c:	add	r2, r2, r7, lsl #1
    7030:	ldrh	r1, [r3, #2]!
    7034:	vmov	s15, r1
    7038:	vcvt.f32.u32	s15, s15
    703c:	vstmia	r5!, {s15}
    7040:	cmp	r3, r2
    7044:	bne	7030 <ReadSingleData+0xe64>
    7048:	b	711c <ReadSingleData+0xf50>
    704c:	ldr	r3, [r9]
    7050:	mov	r2, r7
    7054:	ldr	r1, [sp]
    7058:	add	r0, sp, #16
    705c:	bl	1588 <fread@plt>
    7060:	mov	r8, r0
    7064:	cmp	r7, #0
    7068:	ble	711c <ReadSingleData+0xf50>
    706c:	add	r1, sp, #16
    7070:	add	r3, sp, #14
    7074:	ldr	r2, [sp, #4]
    7078:	sub	r7, r7, #-2147483647	; 0x80000001
    707c:	add	r1, r1, r7, lsl #1
    7080:	ldrh	r0, [r3, #2]!
    7084:	vmov	s15, r0
    7088:	vcvt.f32.u32	s15, s15
    708c:	vstmia	r2!, {s15}
    7090:	cmp	r3, r1
    7094:	bne	7080 <ReadSingleData+0xeb4>
    7098:	b	711c <ReadSingleData+0xf50>
    709c:	cmp	r7, #256	; 0x100
    70a0:	ble	7130 <ReadSingleData+0xf64>
    70a4:	sub	fp, r7, #256	; 0x100
    70a8:	cmp	fp, #0
    70ac:	movle	r5, #0
    70b0:	movle	r8, r5
    70b4:	ble	7114 <ReadSingleData+0xf48>
    70b8:	ldr	r6, [sp, #4]
    70bc:	mov	r5, #0
    70c0:	mov	r8, r5
    70c4:	add	sl, sp, #16
    70c8:	add	r4, sl, #255	; 0xff
    70cc:	ldr	r3, [r9]
    70d0:	mov	r2, #256	; 0x100
    70d4:	ldr	r1, [sp]
    70d8:	mov	r0, sl
    70dc:	bl	1588 <fread@plt>
    70e0:	add	r8, r8, r0
    70e4:	sub	r3, sl, #1
    70e8:	mov	r2, r6
    70ec:	ldrsb	r1, [r3, #1]!
    70f0:	vmov	s15, r1
    70f4:	vcvt.f32.s32	s15, s15
    70f8:	vstmia	r2!, {s15}
    70fc:	cmp	r4, r3
    7100:	bne	70ec <ReadSingleData+0xf20>
    7104:	add	r5, r5, #256	; 0x100
    7108:	add	r6, r6, #1024	; 0x400
    710c:	cmp	r5, fp
    7110:	blt	70cc <ReadSingleData+0xf00>
    7114:	cmp	r7, r5
    7118:	bgt	7180 <ReadSingleData+0xfb4>
    711c:	ldr	r3, [sp]
    7120:	mul	r0, r3, r8
    7124:	add	sp, sp, #2064	; 0x810
    7128:	add	sp, sp, #4
    712c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7130:	ldr	r3, [r9]
    7134:	mov	r2, r7
    7138:	ldr	r1, [sp]
    713c:	add	r0, sp, #16
    7140:	bl	1588 <fread@plt>
    7144:	mov	r8, r0
    7148:	cmp	r7, #0
    714c:	ble	711c <ReadSingleData+0xf50>
    7150:	add	r1, sp, #16
    7154:	add	r3, sp, #15
    7158:	ldr	r2, [sp, #4]
    715c:	sub	r7, r7, #1
    7160:	add	r1, r1, r7
    7164:	ldrsb	r0, [r3, #1]!
    7168:	vmov	s15, r0
    716c:	vcvt.f32.s32	s15, s15
    7170:	vstmia	r2!, {s15}
    7174:	cmp	r1, r3
    7178:	bne	7164 <ReadSingleData+0xf98>
    717c:	b	711c <ReadSingleData+0xf50>
    7180:	sub	r7, r7, r5
    7184:	ldr	r3, [r9]
    7188:	mov	r2, r7
    718c:	ldr	r1, [sp]
    7190:	add	r0, sp, #16
    7194:	bl	1588 <fread@plt>
    7198:	add	r8, r8, r0
    719c:	cmp	r7, #0
    71a0:	ble	711c <ReadSingleData+0xf50>
    71a4:	add	r2, sp, #16
    71a8:	add	r3, sp, #15
    71ac:	ldr	r1, [sp, #4]
    71b0:	add	r5, r1, r5, lsl #2
    71b4:	sub	r7, r7, #1
    71b8:	add	r2, r2, r7
    71bc:	ldrsb	r1, [r3, #1]!
    71c0:	vmov	s15, r1
    71c4:	vcvt.f32.s32	s15, s15
    71c8:	vstmia	r5!, {s15}
    71cc:	cmp	r3, r2
    71d0:	bne	71bc <ReadSingleData+0xff0>
    71d4:	b	711c <ReadSingleData+0xf50>
    71d8:	cmp	r7, #256	; 0x100
    71dc:	ble	72b0 <ReadSingleData+0x10e4>
    71e0:	sub	fp, r7, #256	; 0x100
    71e4:	cmp	fp, #0
    71e8:	movle	r5, #0
    71ec:	movle	r8, r5
    71f0:	ble	7250 <ReadSingleData+0x1084>
    71f4:	ldr	r6, [sp, #4]
    71f8:	mov	r5, #0
    71fc:	mov	r8, r5
    7200:	add	sl, sp, #16
    7204:	add	r4, sl, #255	; 0xff
    7208:	ldr	r3, [r9]
    720c:	mov	r2, #256	; 0x100
    7210:	ldr	r1, [sp]
    7214:	mov	r0, sl
    7218:	bl	1588 <fread@plt>
    721c:	add	r8, r8, r0
    7220:	sub	r3, sl, #1
    7224:	mov	r2, r6
    7228:	ldrb	r1, [r3, #1]!
    722c:	vmov	s15, r1
    7230:	vcvt.f32.u32	s15, s15
    7234:	vstmia	r2!, {s15}
    7238:	cmp	r4, r3
    723c:	bne	7228 <ReadSingleData+0x105c>
    7240:	add	r5, r5, #256	; 0x100
    7244:	add	r6, r6, #1024	; 0x400
    7248:	cmp	r5, fp
    724c:	blt	7208 <ReadSingleData+0x103c>
    7250:	cmp	r7, r5
    7254:	ble	711c <ReadSingleData+0xf50>
    7258:	sub	r7, r7, r5
    725c:	ldr	r3, [r9]
    7260:	mov	r2, r7
    7264:	ldr	r1, [sp]
    7268:	add	r0, sp, #16
    726c:	bl	1588 <fread@plt>
    7270:	add	r8, r8, r0
    7274:	cmp	r7, #0
    7278:	ble	711c <ReadSingleData+0xf50>
    727c:	add	r2, sp, #16
    7280:	add	r3, sp, #15
    7284:	ldr	r1, [sp, #4]
    7288:	add	r5, r1, r5, lsl #2
    728c:	sub	r7, r7, #1
    7290:	add	r2, r2, r7
    7294:	ldrb	r1, [r3, #1]!
    7298:	vmov	s15, r1
    729c:	vcvt.f32.u32	s15, s15
    72a0:	vstmia	r5!, {s15}
    72a4:	cmp	r2, r3
    72a8:	bne	7294 <ReadSingleData+0x10c8>
    72ac:	b	711c <ReadSingleData+0xf50>
    72b0:	ldr	r3, [r9]
    72b4:	mov	r2, r7
    72b8:	ldr	r1, [sp]
    72bc:	add	r0, sp, #16
    72c0:	bl	1588 <fread@plt>
    72c4:	mov	r8, r0
    72c8:	cmp	r7, #0
    72cc:	ble	711c <ReadSingleData+0xf50>
    72d0:	add	r1, sp, #16
    72d4:	add	r3, sp, #15
    72d8:	ldr	r2, [sp, #4]
    72dc:	sub	r7, r7, #1
    72e0:	add	r1, r1, r7
    72e4:	ldrb	r0, [r3, #1]!
    72e8:	vmov	s15, r0
    72ec:	vcvt.f32.u32	s15, s15
    72f0:	vstmia	r2!, {s15}
    72f4:	cmp	r1, r3
    72f8:	bne	72e4 <ReadSingleData+0x1118>
    72fc:	b	711c <ReadSingleData+0xf50>
    7300:	cmp	r4, #12
    7304:	beq	740c <ReadSingleData+0x1240>
    7308:	cmp	r4, #13
    730c:	movne	r8, #0
    7310:	bne	711c <ReadSingleData+0xf50>
    7314:	ldr	r8, [r9, #20]
    7318:	cmp	r8, #0
    731c:	beq	76d0 <ReadSingleData+0x1504>
    7320:	cmp	r7, #256	; 0x100
    7324:	ble	7680 <ReadSingleData+0x14b4>
    7328:	sub	fp, r7, #256	; 0x100
    732c:	cmp	fp, #0
    7330:	movle	sl, #0
    7334:	movle	r8, sl
    7338:	ble	73ac <ReadSingleData+0x11e0>
    733c:	ldr	r3, [sp, #4]
    7340:	str	r3, [sp, #8]
    7344:	mov	sl, #0
    7348:	mov	r8, sl
    734c:	add	r3, sp, #16
    7350:	str	r3, [sp, #12]
    7354:	ldr	r3, [r9]
    7358:	mov	r2, #256	; 0x100
    735c:	ldr	r1, [sp]
    7360:	ldr	r4, [sp, #12]
    7364:	mov	r0, r4
    7368:	bl	1588 <fread@plt>
    736c:	add	r8, r8, r0
    7370:	add	r6, sp, #2064	; 0x810
    7374:	ldr	r5, [sp, #8]
    7378:	mov	r0, r4
    737c:	bl	1984 <Mat_uint64Swap>
    7380:	bl	51d84 <__aeabi_ul2f>
    7384:	str	r0, [r5], #4
    7388:	add	r4, r4, #8
    738c:	cmp	r6, r4
    7390:	bne	7378 <ReadSingleData+0x11ac>
    7394:	add	sl, sl, #256	; 0x100
    7398:	ldr	r3, [sp, #8]
    739c:	add	r3, r3, #1024	; 0x400
    73a0:	str	r3, [sp, #8]
    73a4:	cmp	sl, fp
    73a8:	blt	7354 <ReadSingleData+0x1188>
    73ac:	cmp	r7, sl
    73b0:	ble	711c <ReadSingleData+0xf50>
    73b4:	sub	r7, r7, sl
    73b8:	ldr	r3, [r9]
    73bc:	mov	r2, r7
    73c0:	ldr	r1, [sp]
    73c4:	add	r0, sp, #16
    73c8:	bl	1588 <fread@plt>
    73cc:	add	r8, r8, r0
    73d0:	cmp	r7, #0
    73d4:	ble	711c <ReadSingleData+0xf50>
    73d8:	add	r5, sp, #16
    73dc:	ldr	r3, [sp, #4]
    73e0:	add	sl, r3, sl, lsl #2
    73e4:	mov	r4, #0
    73e8:	mov	r0, r5
    73ec:	bl	1984 <Mat_uint64Swap>
    73f0:	bl	51d84 <__aeabi_ul2f>
    73f4:	str	r0, [sl], #4
    73f8:	add	r4, r4, #1
    73fc:	add	r5, r5, #8
    7400:	cmp	r7, r4
    7404:	bne	73e8 <ReadSingleData+0x121c>
    7408:	b	711c <ReadSingleData+0xf50>
    740c:	ldr	r8, [r9, #20]
    7410:	cmp	r8, #0
    7414:	beq	7554 <ReadSingleData+0x1388>
    7418:	cmp	r7, #256	; 0x100
    741c:	ble	7504 <ReadSingleData+0x1338>
    7420:	sub	fp, r7, #256	; 0x100
    7424:	cmp	fp, #0
    7428:	movle	sl, #0
    742c:	movle	r8, sl
    7430:	ble	74a4 <ReadSingleData+0x12d8>
    7434:	ldr	r3, [sp, #4]
    7438:	str	r3, [sp, #8]
    743c:	mov	sl, #0
    7440:	mov	r8, sl
    7444:	add	r3, sp, #16
    7448:	str	r3, [sp, #12]
    744c:	ldr	r3, [r9]
    7450:	mov	r2, #256	; 0x100
    7454:	ldr	r1, [sp]
    7458:	ldr	r4, [sp, #12]
    745c:	mov	r0, r4
    7460:	bl	1588 <fread@plt>
    7464:	add	r8, r8, r0
    7468:	add	r6, sp, #2064	; 0x810
    746c:	ldr	r5, [sp, #8]
    7470:	mov	r0, r4
    7474:	bl	18bc <Mat_int64Swap>
    7478:	bl	51d94 <__aeabi_l2f>
    747c:	str	r0, [r5], #4
    7480:	add	r4, r4, #8
    7484:	cmp	r6, r4
    7488:	bne	7470 <ReadSingleData+0x12a4>
    748c:	add	sl, sl, #256	; 0x100
    7490:	ldr	r3, [sp, #8]
    7494:	add	r3, r3, #1024	; 0x400
    7498:	str	r3, [sp, #8]
    749c:	cmp	sl, fp
    74a0:	blt	744c <ReadSingleData+0x1280>
    74a4:	cmp	r7, sl
    74a8:	ble	711c <ReadSingleData+0xf50>
    74ac:	sub	r7, r7, sl
    74b0:	ldr	r3, [r9]
    74b4:	mov	r2, r7
    74b8:	ldr	r1, [sp]
    74bc:	add	r0, sp, #16
    74c0:	bl	1588 <fread@plt>
    74c4:	add	r8, r8, r0
    74c8:	cmp	r7, #0
    74cc:	ble	711c <ReadSingleData+0xf50>
    74d0:	add	r5, sp, #16
    74d4:	ldr	r3, [sp, #4]
    74d8:	add	sl, r3, sl, lsl #2
    74dc:	mov	r4, #0
    74e0:	mov	r0, r5
    74e4:	bl	18bc <Mat_int64Swap>
    74e8:	bl	51d94 <__aeabi_l2f>
    74ec:	str	r0, [sl], #4
    74f0:	add	r4, r4, #1
    74f4:	add	r5, r5, #8
    74f8:	cmp	r7, r4
    74fc:	bne	74e0 <ReadSingleData+0x1314>
    7500:	b	711c <ReadSingleData+0xf50>
    7504:	ldr	r3, [r9]
    7508:	mov	r2, r7
    750c:	ldr	r1, [sp]
    7510:	add	r0, sp, #16
    7514:	bl	1588 <fread@plt>
    7518:	mov	r8, r0
    751c:	cmp	r7, #0
    7520:	ble	711c <ReadSingleData+0xf50>
    7524:	add	r5, sp, #16
    7528:	ldr	r3, [sp, #4]
    752c:	mov	r4, r3
    7530:	add	r7, r3, r7, lsl #2
    7534:	mov	r0, r5
    7538:	bl	18bc <Mat_int64Swap>
    753c:	bl	51d94 <__aeabi_l2f>
    7540:	str	r0, [r4], #4
    7544:	add	r5, r5, #8
    7548:	cmp	r7, r4
    754c:	bne	7534 <ReadSingleData+0x1368>
    7550:	b	711c <ReadSingleData+0xf50>
    7554:	cmp	r7, #256	; 0x100
    7558:	ble	7634 <ReadSingleData+0x1468>
    755c:	sub	fp, r7, #256	; 0x100
    7560:	cmp	fp, #0
    7564:	movle	sl, r8
    7568:	ble	75d8 <ReadSingleData+0x140c>
    756c:	ldr	r3, [sp, #4]
    7570:	str	r3, [sp, #8]
    7574:	mov	sl, r8
    7578:	add	r3, sp, #16
    757c:	str	r3, [sp, #12]
    7580:	add	r6, sp, #2048	; 0x800
    7584:	add	r6, r6, #8
    7588:	ldr	r3, [r9]
    758c:	mov	r2, #256	; 0x100
    7590:	ldr	r1, [sp]
    7594:	ldr	r4, [sp, #12]
    7598:	mov	r0, r4
    759c:	bl	1588 <fread@plt>
    75a0:	add	r8, r8, r0
    75a4:	sub	r4, r4, #8
    75a8:	ldr	r5, [sp, #8]
    75ac:	ldrd	r0, [r4, #8]!
    75b0:	bl	51d94 <__aeabi_l2f>
    75b4:	str	r0, [r5], #4
    75b8:	cmp	r4, r6
    75bc:	bne	75ac <ReadSingleData+0x13e0>
    75c0:	add	sl, sl, #256	; 0x100
    75c4:	ldr	r3, [sp, #8]
    75c8:	add	r3, r3, #1024	; 0x400
    75cc:	str	r3, [sp, #8]
    75d0:	cmp	sl, fp
    75d4:	blt	7588 <ReadSingleData+0x13bc>
    75d8:	cmp	r7, sl
    75dc:	ble	711c <ReadSingleData+0xf50>
    75e0:	sub	r7, r7, sl
    75e4:	ldr	r3, [r9]
    75e8:	mov	r2, r7
    75ec:	ldr	r1, [sp]
    75f0:	add	r0, sp, #16
    75f4:	bl	1588 <fread@plt>
    75f8:	add	r8, r8, r0
    75fc:	cmp	r7, #0
    7600:	ble	711c <ReadSingleData+0xf50>
    7604:	add	r5, sp, #16
    7608:	add	r4, sp, #8
    760c:	ldr	r3, [sp, #4]
    7610:	add	sl, r3, sl, lsl #2
    7614:	sub	r7, r7, #-536870911	; 0xe0000001
    7618:	add	r5, r5, r7, lsl #3
    761c:	ldrd	r0, [r4, #8]!
    7620:	bl	51d94 <__aeabi_l2f>
    7624:	str	r0, [sl], #4
    7628:	cmp	r5, r4
    762c:	bne	761c <ReadSingleData+0x1450>
    7630:	b	711c <ReadSingleData+0xf50>
    7634:	ldr	r3, [r9]
    7638:	mov	r2, r7
    763c:	ldr	r1, [sp]
    7640:	add	r0, sp, #16
    7644:	bl	1588 <fread@plt>
    7648:	mov	r8, r0
    764c:	cmp	r7, #0
    7650:	ble	711c <ReadSingleData+0xf50>
    7654:	add	r6, sp, #16
    7658:	add	r4, sp, #8
    765c:	ldr	r5, [sp, #4]
    7660:	sub	r7, r7, #-536870911	; 0xe0000001
    7664:	add	r6, r6, r7, lsl #3
    7668:	ldrd	r0, [r4, #8]!
    766c:	bl	51d94 <__aeabi_l2f>
    7670:	str	r0, [r5], #4
    7674:	cmp	r4, r6
    7678:	bne	7668 <ReadSingleData+0x149c>
    767c:	b	711c <ReadSingleData+0xf50>
    7680:	ldr	r3, [r9]
    7684:	mov	r2, r7
    7688:	ldr	r1, [sp]
    768c:	add	r0, sp, #16
    7690:	bl	1588 <fread@plt>
    7694:	mov	r8, r0
    7698:	cmp	r7, #0
    769c:	ble	711c <ReadSingleData+0xf50>
    76a0:	add	r5, sp, #16
    76a4:	ldr	r3, [sp, #4]
    76a8:	mov	r4, r3
    76ac:	add	r7, r3, r7, lsl #2
    76b0:	mov	r0, r5
    76b4:	bl	1984 <Mat_uint64Swap>
    76b8:	bl	51d84 <__aeabi_ul2f>
    76bc:	str	r0, [r4], #4
    76c0:	add	r5, r5, #8
    76c4:	cmp	r7, r4
    76c8:	bne	76b0 <ReadSingleData+0x14e4>
    76cc:	b	711c <ReadSingleData+0xf50>
    76d0:	cmp	r7, #256	; 0x100
    76d4:	ble	77b0 <ReadSingleData+0x15e4>
    76d8:	sub	fp, r7, #256	; 0x100
    76dc:	cmp	fp, #0
    76e0:	movle	sl, r8
    76e4:	ble	7754 <ReadSingleData+0x1588>
    76e8:	ldr	r3, [sp, #4]
    76ec:	str	r3, [sp, #8]
    76f0:	mov	sl, r8
    76f4:	add	r3, sp, #16
    76f8:	str	r3, [sp, #12]
    76fc:	add	r6, sp, #2048	; 0x800
    7700:	add	r6, r6, #8
    7704:	ldr	r3, [r9]
    7708:	mov	r2, #256	; 0x100
    770c:	ldr	r1, [sp]
    7710:	ldr	r4, [sp, #12]
    7714:	mov	r0, r4
    7718:	bl	1588 <fread@plt>
    771c:	add	r8, r8, r0
    7720:	sub	r4, r4, #8
    7724:	ldr	r5, [sp, #8]
    7728:	ldrd	r0, [r4, #8]!
    772c:	bl	51d84 <__aeabi_ul2f>
    7730:	str	r0, [r5], #4
    7734:	cmp	r6, r4
    7738:	bne	7728 <ReadSingleData+0x155c>
    773c:	add	sl, sl, #256	; 0x100
    7740:	ldr	r3, [sp, #8]
    7744:	add	r3, r3, #1024	; 0x400
    7748:	str	r3, [sp, #8]
    774c:	cmp	sl, fp
    7750:	blt	7704 <ReadSingleData+0x1538>
    7754:	cmp	r7, sl
    7758:	ble	711c <ReadSingleData+0xf50>
    775c:	sub	r7, r7, sl
    7760:	ldr	r3, [r9]
    7764:	mov	r2, r7
    7768:	ldr	r1, [sp]
    776c:	add	r0, sp, #16
    7770:	bl	1588 <fread@plt>
    7774:	add	r8, r8, r0
    7778:	cmp	r7, #0
    777c:	ble	711c <ReadSingleData+0xf50>
    7780:	add	r5, sp, #16
    7784:	add	r4, sp, #8
    7788:	ldr	r3, [sp, #4]
    778c:	add	sl, r3, sl, lsl #2
    7790:	sub	r7, r7, #-536870911	; 0xe0000001
    7794:	add	r5, r5, r7, lsl #3
    7798:	ldrd	r0, [r4, #8]!
    779c:	bl	51d84 <__aeabi_ul2f>
    77a0:	str	r0, [sl], #4
    77a4:	cmp	r4, r5
    77a8:	bne	7798 <ReadSingleData+0x15cc>
    77ac:	b	711c <ReadSingleData+0xf50>
    77b0:	ldr	r3, [r9]
    77b4:	mov	r2, r7
    77b8:	ldr	r1, [sp]
    77bc:	add	r0, sp, #16
    77c0:	bl	1588 <fread@plt>
    77c4:	mov	r8, r0
    77c8:	cmp	r7, #0
    77cc:	ble	711c <ReadSingleData+0xf50>
    77d0:	add	r6, sp, #16
    77d4:	add	r4, sp, #8
    77d8:	ldr	r5, [sp, #4]
    77dc:	sub	r7, r7, #-536870911	; 0xe0000001
    77e0:	add	r6, r6, r7, lsl #3
    77e4:	ldrd	r0, [r4, #8]!
    77e8:	bl	51d84 <__aeabi_ul2f>
    77ec:	str	r0, [r5], #4
    77f0:	cmp	r4, r6
    77f4:	bne	77e4 <ReadSingleData+0x1618>
    77f8:	b	711c <ReadSingleData+0xf50>
    77fc:	mov	r0, #0
    7800:	bx	lr

00007804 <ReadCompressedSingleData>:
    7804:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7808:	sub	sp, sp, #8
    780c:	ldr	r7, [sp, #40]	; 0x28
    7810:	mov	r9, r2
    7814:	cmp	r2, #0
    7818:	cmpne	r1, #0
    781c:	moveq	r2, #1
    7820:	movne	r2, #0
    7824:	cmp	r0, #0
    7828:	orreq	r2, r2, #1
    782c:	cmp	r2, #0
    7830:	movne	r0, #0
    7834:	bne	78c8 <ReadCompressedSingleData+0xc4>
    7838:	mov	r6, r1
    783c:	mov	r5, r0
    7840:	mov	r8, r3
    7844:	mov	r0, r3
    7848:	bl	1600 <Mat_SizeOf@plt>
    784c:	mov	r4, r0
    7850:	sub	r3, r8, #1
    7854:	cmp	r3, #8
    7858:	addls	pc, pc, r3, lsl #2
    785c:	b	7c6c <ReadCompressedSingleData+0x468>
    7860:	b	78d0 <ReadCompressedSingleData+0xcc>
    7864:	b	7884 <ReadCompressedSingleData+0x80>
    7868:	b	7b44 <ReadCompressedSingleData+0x340>
    786c:	b	7bd8 <ReadCompressedSingleData+0x3d4>
    7870:	b	7a24 <ReadCompressedSingleData+0x220>
    7874:	b	7ab4 <ReadCompressedSingleData+0x2b0>
    7878:	b	79a0 <ReadCompressedSingleData+0x19c>
    787c:	b	7c6c <ReadCompressedSingleData+0x468>
    7880:	b	7914 <ReadCompressedSingleData+0x110>
    7884:	cmp	r7, #0
    7888:	movgt	r8, #0
    788c:	movgt	sl, sp
    7890:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7894:	mov	r3, r4
    7898:	mov	r2, sl
    789c:	mov	r1, r6
    78a0:	mov	r0, r5
    78a4:	bl	3418 <InflateData>
    78a8:	ldrb	r3, [sp]
    78ac:	vmov	s15, r3
    78b0:	vcvt.f32.u32	s15, s15
    78b4:	vstmia	r9!, {s15}
    78b8:	add	r8, r8, #1
    78bc:	cmp	r7, r8
    78c0:	bne	7894 <ReadCompressedSingleData+0x90>
    78c4:	mul	r0, r4, r7
    78c8:	add	sp, sp, #8
    78cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    78d0:	cmp	r7, #0
    78d4:	movgt	r8, #0
    78d8:	movgt	sl, sp
    78dc:	ble	78c4 <ReadCompressedSingleData+0xc0>
    78e0:	mov	r3, r4
    78e4:	mov	r2, sl
    78e8:	mov	r1, r6
    78ec:	mov	r0, r5
    78f0:	bl	3418 <InflateData>
    78f4:	ldrsb	r3, [sp]
    78f8:	vmov	s15, r3
    78fc:	vcvt.f32.s32	s15, s15
    7900:	vstmia	r9!, {s15}
    7904:	add	r8, r8, #1
    7908:	cmp	r7, r8
    790c:	bne	78e0 <ReadCompressedSingleData+0xdc>
    7910:	b	78c4 <ReadCompressedSingleData+0xc0>
    7914:	ldr	r8, [r5, #20]
    7918:	cmp	r8, #0
    791c:	bne	795c <ReadCompressedSingleData+0x158>
    7920:	cmp	r7, #0
    7924:	movgt	sl, sp
    7928:	ble	78c4 <ReadCompressedSingleData+0xc0>
    792c:	mov	r3, r4
    7930:	mov	r2, sl
    7934:	mov	r1, r6
    7938:	mov	r0, r5
    793c:	bl	3418 <InflateData>
    7940:	vldr	d7, [sp]
    7944:	vcvt.f32.f64	s14, d7
    7948:	vstmia	r9!, {s14}
    794c:	add	r8, r8, #1
    7950:	cmp	r7, r8
    7954:	bne	792c <ReadCompressedSingleData+0x128>
    7958:	b	78c4 <ReadCompressedSingleData+0xc0>
    795c:	cmp	r7, #0
    7960:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7964:	mov	r8, #0
    7968:	mov	sl, sp
    796c:	mov	r3, r4
    7970:	mov	r2, sl
    7974:	mov	r1, r6
    7978:	mov	r0, r5
    797c:	bl	3418 <InflateData>
    7980:	mov	r0, sl
    7984:	bl	1b94 <Mat_doubleSwap>
    7988:	vcvt.f32.f64	s0, d0
    798c:	vstmia	r9!, {s0}
    7990:	add	r8, r8, #1
    7994:	cmp	r7, r8
    7998:	bne	796c <ReadCompressedSingleData+0x168>
    799c:	b	78c4 <ReadCompressedSingleData+0xc0>
    79a0:	ldr	r8, [r5, #20]
    79a4:	cmp	r8, #0
    79a8:	bne	79e4 <ReadCompressedSingleData+0x1e0>
    79ac:	cmp	r7, #0
    79b0:	movgt	sl, sp
    79b4:	ble	78c4 <ReadCompressedSingleData+0xc0>
    79b8:	mov	r3, r4
    79bc:	mov	r2, sl
    79c0:	mov	r1, r6
    79c4:	mov	r0, r5
    79c8:	bl	3418 <InflateData>
    79cc:	ldr	r3, [sp]
    79d0:	str	r3, [r9], #4
    79d4:	add	r8, r8, #1
    79d8:	cmp	r7, r8
    79dc:	bne	79b8 <ReadCompressedSingleData+0x1b4>
    79e0:	b	78c4 <ReadCompressedSingleData+0xc0>
    79e4:	cmp	r7, #0
    79e8:	ble	78c4 <ReadCompressedSingleData+0xc0>
    79ec:	mov	r8, #0
    79f0:	mov	sl, sp
    79f4:	mov	r3, r4
    79f8:	mov	r2, sl
    79fc:	mov	r1, r6
    7a00:	mov	r0, r5
    7a04:	bl	3418 <InflateData>
    7a08:	mov	r0, sl
    7a0c:	bl	1b38 <Mat_floatSwap>
    7a10:	vstmia	r9!, {s0}
    7a14:	add	r8, r8, #1
    7a18:	cmp	r7, r8
    7a1c:	bne	79f4 <ReadCompressedSingleData+0x1f0>
    7a20:	b	78c4 <ReadCompressedSingleData+0xc0>
    7a24:	ldr	r8, [r5, #20]
    7a28:	cmp	r8, #0
    7a2c:	bne	7a6c <ReadCompressedSingleData+0x268>
    7a30:	cmp	r7, #0
    7a34:	movgt	sl, sp
    7a38:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7a3c:	mov	r3, r4
    7a40:	mov	r2, sl
    7a44:	mov	r1, r6
    7a48:	mov	r0, r5
    7a4c:	bl	3418 <InflateData>
    7a50:	vldr	s15, [sp]
    7a54:	vcvt.f32.s32	s15, s15
    7a58:	vstmia	r9!, {s15}
    7a5c:	add	r8, r8, #1
    7a60:	cmp	r7, r8
    7a64:	bne	7a3c <ReadCompressedSingleData+0x238>
    7a68:	b	78c4 <ReadCompressedSingleData+0xc0>
    7a6c:	cmp	r7, #0
    7a70:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7a74:	mov	r8, #0
    7a78:	mov	sl, sp
    7a7c:	mov	r3, r4
    7a80:	mov	r2, sl
    7a84:	mov	r1, r6
    7a88:	mov	r0, r5
    7a8c:	bl	3418 <InflateData>
    7a90:	mov	r0, sl
    7a94:	bl	1a20 <Mat_int32Swap>
    7a98:	vmov	s15, r0
    7a9c:	vcvt.f32.s32	s15, s15
    7aa0:	vstmia	r9!, {s15}
    7aa4:	add	r8, r8, #1
    7aa8:	cmp	r7, r8
    7aac:	bne	7a7c <ReadCompressedSingleData+0x278>
    7ab0:	b	78c4 <ReadCompressedSingleData+0xc0>
    7ab4:	ldr	r8, [r5, #20]
    7ab8:	cmp	r8, #0
    7abc:	bne	7afc <ReadCompressedSingleData+0x2f8>
    7ac0:	cmp	r7, #0
    7ac4:	movgt	sl, sp
    7ac8:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7acc:	mov	r3, r4
    7ad0:	mov	r2, sl
    7ad4:	mov	r1, r6
    7ad8:	mov	r0, r5
    7adc:	bl	3418 <InflateData>
    7ae0:	vldr	s15, [sp]
    7ae4:	vcvt.f32.u32	s15, s15
    7ae8:	vstmia	r9!, {s15}
    7aec:	add	r8, r8, #1
    7af0:	cmp	r7, r8
    7af4:	bne	7acc <ReadCompressedSingleData+0x2c8>
    7af8:	b	78c4 <ReadCompressedSingleData+0xc0>
    7afc:	cmp	r7, #0
    7b00:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7b04:	mov	r8, #0
    7b08:	mov	sl, sp
    7b0c:	mov	r3, r4
    7b10:	mov	r2, sl
    7b14:	mov	r1, r6
    7b18:	mov	r0, r5
    7b1c:	bl	3418 <InflateData>
    7b20:	mov	r0, sl
    7b24:	bl	1a88 <Mat_uint32Swap>
    7b28:	vmov	s15, r0
    7b2c:	vcvt.f32.u32	s15, s15
    7b30:	vstmia	r9!, {s15}
    7b34:	add	r8, r8, #1
    7b38:	cmp	r7, r8
    7b3c:	bne	7b0c <ReadCompressedSingleData+0x308>
    7b40:	b	78c4 <ReadCompressedSingleData+0xc0>
    7b44:	ldr	r8, [r5, #20]
    7b48:	cmp	r8, #0
    7b4c:	bne	7b90 <ReadCompressedSingleData+0x38c>
    7b50:	cmp	r7, #0
    7b54:	movgt	sl, sp
    7b58:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7b5c:	mov	r3, r4
    7b60:	mov	r2, sl
    7b64:	mov	r1, r6
    7b68:	mov	r0, r5
    7b6c:	bl	3418 <InflateData>
    7b70:	ldrsh	r3, [sp]
    7b74:	vmov	s15, r3
    7b78:	vcvt.f32.s32	s15, s15
    7b7c:	vstmia	r9!, {s15}
    7b80:	add	r8, r8, #1
    7b84:	cmp	r7, r8
    7b88:	bne	7b5c <ReadCompressedSingleData+0x358>
    7b8c:	b	78c4 <ReadCompressedSingleData+0xc0>
    7b90:	cmp	r7, #0
    7b94:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7b98:	mov	r8, #0
    7b9c:	mov	sl, sp
    7ba0:	mov	r3, r4
    7ba4:	mov	r2, sl
    7ba8:	mov	r1, r6
    7bac:	mov	r0, r5
    7bb0:	bl	3418 <InflateData>
    7bb4:	mov	r0, sl
    7bb8:	bl	1ae4 <Mat_int16Swap>
    7bbc:	vmov	s15, r0
    7bc0:	vcvt.f32.s32	s15, s15
    7bc4:	vstmia	r9!, {s15}
    7bc8:	add	r8, r8, #1
    7bcc:	cmp	r7, r8
    7bd0:	bne	7ba0 <ReadCompressedSingleData+0x39c>
    7bd4:	b	78c4 <ReadCompressedSingleData+0xc0>
    7bd8:	ldr	r8, [r5, #20]
    7bdc:	cmp	r8, #0
    7be0:	bne	7c24 <ReadCompressedSingleData+0x420>
    7be4:	cmp	r7, #0
    7be8:	movgt	sl, sp
    7bec:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7bf0:	mov	r3, r4
    7bf4:	mov	r2, sl
    7bf8:	mov	r1, r6
    7bfc:	mov	r0, r5
    7c00:	bl	3418 <InflateData>
    7c04:	ldrh	r3, [sp]
    7c08:	vmov	s15, r3
    7c0c:	vcvt.f32.u32	s15, s15
    7c10:	vstmia	r9!, {s15}
    7c14:	add	r8, r8, #1
    7c18:	cmp	r7, r8
    7c1c:	bne	7bf0 <ReadCompressedSingleData+0x3ec>
    7c20:	b	78c4 <ReadCompressedSingleData+0xc0>
    7c24:	cmp	r7, #0
    7c28:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7c2c:	mov	r8, #0
    7c30:	mov	sl, sp
    7c34:	mov	r3, r4
    7c38:	mov	r2, sl
    7c3c:	mov	r1, r6
    7c40:	mov	r0, r5
    7c44:	bl	3418 <InflateData>
    7c48:	mov	r0, sl
    7c4c:	bl	1b1c <Mat_uint16Swap>
    7c50:	vmov	s15, r0
    7c54:	vcvt.f32.u32	s15, s15
    7c58:	vstmia	r9!, {s15}
    7c5c:	add	r8, r8, #1
    7c60:	cmp	r7, r8
    7c64:	bne	7c34 <ReadCompressedSingleData+0x430>
    7c68:	b	78c4 <ReadCompressedSingleData+0xc0>
    7c6c:	cmp	r8, #12
    7c70:	beq	7cc4 <ReadCompressedSingleData+0x4c0>
    7c74:	cmp	r8, #13
    7c78:	bne	78c4 <ReadCompressedSingleData+0xc0>
    7c7c:	ldr	r8, [r5, #20]
    7c80:	cmp	r8, #0
    7c84:	bne	7d50 <ReadCompressedSingleData+0x54c>
    7c88:	cmp	r7, #0
    7c8c:	movgt	sl, sp
    7c90:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7c94:	mov	r3, r4
    7c98:	mov	r2, sl
    7c9c:	mov	r1, r6
    7ca0:	mov	r0, r5
    7ca4:	bl	3418 <InflateData>
    7ca8:	ldrd	r0, [sp]
    7cac:	bl	51d84 <__aeabi_ul2f>
    7cb0:	str	r0, [r9], #4
    7cb4:	add	r8, r8, #1
    7cb8:	cmp	r7, r8
    7cbc:	bne	7c94 <ReadCompressedSingleData+0x490>
    7cc0:	b	78c4 <ReadCompressedSingleData+0xc0>
    7cc4:	ldr	r8, [r5, #20]
    7cc8:	cmp	r8, #0
    7ccc:	bne	7d0c <ReadCompressedSingleData+0x508>
    7cd0:	cmp	r7, #0
    7cd4:	movgt	sl, sp
    7cd8:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7cdc:	mov	r3, r4
    7ce0:	mov	r2, sl
    7ce4:	mov	r1, r6
    7ce8:	mov	r0, r5
    7cec:	bl	3418 <InflateData>
    7cf0:	ldrd	r0, [sp]
    7cf4:	bl	51d94 <__aeabi_l2f>
    7cf8:	str	r0, [r9], #4
    7cfc:	add	r8, r8, #1
    7d00:	cmp	r7, r8
    7d04:	bne	7cdc <ReadCompressedSingleData+0x4d8>
    7d08:	b	78c4 <ReadCompressedSingleData+0xc0>
    7d0c:	cmp	r7, #0
    7d10:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7d14:	mov	r8, #0
    7d18:	mov	sl, sp
    7d1c:	mov	r3, r4
    7d20:	mov	r2, sl
    7d24:	mov	r1, r6
    7d28:	mov	r0, r5
    7d2c:	bl	3418 <InflateData>
    7d30:	mov	r0, sl
    7d34:	bl	18bc <Mat_int64Swap>
    7d38:	bl	51d94 <__aeabi_l2f>
    7d3c:	str	r0, [r9], #4
    7d40:	add	r8, r8, #1
    7d44:	cmp	r7, r8
    7d48:	bne	7d1c <ReadCompressedSingleData+0x518>
    7d4c:	b	78c4 <ReadCompressedSingleData+0xc0>
    7d50:	cmp	r7, #0
    7d54:	ble	78c4 <ReadCompressedSingleData+0xc0>
    7d58:	mov	r8, #0
    7d5c:	mov	sl, sp
    7d60:	mov	r3, r4
    7d64:	mov	r2, sl
    7d68:	mov	r1, r6
    7d6c:	mov	r0, r5
    7d70:	bl	3418 <InflateData>
    7d74:	mov	r0, sl
    7d78:	bl	1984 <Mat_uint64Swap>
    7d7c:	bl	51d84 <__aeabi_ul2f>
    7d80:	str	r0, [r9], #4
    7d84:	add	r8, r8, #1
    7d88:	cmp	r7, r8
    7d8c:	bne	7d60 <ReadCompressedSingleData+0x55c>
    7d90:	b	78c4 <ReadCompressedSingleData+0xc0>

00007d94 <ReadInt64Data>:
    7d94:	cmp	r1, #0
    7d98:	cmpne	r0, #0
    7d9c:	beq	945c <ReadInt64Data+0x16c8>
    7da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7da4:	sub	sp, sp, #2064	; 0x810
    7da8:	sub	sp, sp, #12
    7dac:	mov	sl, r0
    7db0:	mov	ip, r1
    7db4:	ldr	r1, [r0]
    7db8:	cmp	r1, #0
    7dbc:	moveq	r0, #0
    7dc0:	beq	8dbc <ReadInt64Data+0x1028>
    7dc4:	str	ip, [sp, #8]
    7dc8:	mov	r8, r3
    7dcc:	mov	r4, r2
    7dd0:	mov	r0, r2
    7dd4:	bl	1600 <Mat_SizeOf@plt>
    7dd8:	str	r0, [sp, #4]
    7ddc:	sub	r3, r4, #1
    7de0:	cmp	r3, #8
    7de4:	addls	pc, pc, r3, lsl #2
    7de8:	b	8f98 <ReadInt64Data+0x1204>
    7dec:	b	8d34 <ReadInt64Data+0xfa0>
    7df0:	b	8e70 <ReadInt64Data+0x10dc>
    7df4:	b	883c <ReadInt64Data+0xaa8>
    7df8:	b	8ab8 <ReadInt64Data+0xd24>
    7dfc:	b	8320 <ReadInt64Data+0x58c>
    7e00:	b	8594 <ReadInt64Data+0x800>
    7e04:	b	8098 <ReadInt64Data+0x304>
    7e08:	b	8f98 <ReadInt64Data+0x1204>
    7e0c:	b	7e10 <ReadInt64Data+0x7c>
    7e10:	ldr	r9, [sl, #20]
    7e14:	cmp	r9, #0
    7e18:	beq	7f70 <ReadInt64Data+0x1dc>
    7e1c:	cmp	r8, #256	; 0x100
    7e20:	ble	7f1c <ReadInt64Data+0x188>
    7e24:	sub	r3, r8, #256	; 0x100
    7e28:	mov	r2, r3
    7e2c:	cmp	r3, #0
    7e30:	movle	r7, #0
    7e34:	movle	r9, r7
    7e38:	ble	7eb8 <ReadInt64Data+0x124>
    7e3c:	ldr	r3, [sp, #8]
    7e40:	sub	fp, r3, #8
    7e44:	mov	r7, #0
    7e48:	mov	r9, r7
    7e4c:	add	r3, sp, #24
    7e50:	str	r3, [sp, #12]
    7e54:	str	r8, [sp, #16]
    7e58:	mov	r8, r2
    7e5c:	ldr	r3, [sl]
    7e60:	mov	r2, #256	; 0x100
    7e64:	ldr	r1, [sp, #4]
    7e68:	ldr	r4, [sp, #12]
    7e6c:	mov	r0, r4
    7e70:	bl	1588 <fread@plt>
    7e74:	add	r9, r9, r0
    7e78:	add	r6, sp, #2064	; 0x810
    7e7c:	add	r6, r6, #8
    7e80:	mov	r5, fp
    7e84:	mov	r0, r4
    7e88:	bl	1b94 <Mat_doubleSwap>
    7e8c:	vmov	r0, r1, d0
    7e90:	bl	51e4c <__aeabi_d2lz>
    7e94:	strd	r0, [r5, #8]!
    7e98:	add	r4, r4, #8
    7e9c:	cmp	r4, r6
    7ea0:	bne	7e84 <ReadInt64Data+0xf0>
    7ea4:	add	r7, r7, #256	; 0x100
    7ea8:	add	fp, fp, #2048	; 0x800
    7eac:	cmp	r7, r8
    7eb0:	blt	7e5c <ReadInt64Data+0xc8>
    7eb4:	ldr	r8, [sp, #16]
    7eb8:	cmp	r8, r7
    7ebc:	ble	8db4 <ReadInt64Data+0x1020>
    7ec0:	sub	r8, r8, r7
    7ec4:	ldr	r3, [sl]
    7ec8:	mov	r2, r8
    7ecc:	ldr	r1, [sp, #4]
    7ed0:	add	r0, sp, #24
    7ed4:	bl	1588 <fread@plt>
    7ed8:	add	r9, r9, r0
    7edc:	cmp	r8, #0
    7ee0:	ble	8db4 <ReadInt64Data+0x1020>
    7ee4:	add	r5, sp, #24
    7ee8:	ldr	r3, [sp, #8]
    7eec:	add	r7, r3, r7, lsl #3
    7ef0:	mov	r4, #0
    7ef4:	mov	r0, r5
    7ef8:	bl	1b94 <Mat_doubleSwap>
    7efc:	vmov	r0, r1, d0
    7f00:	bl	51e4c <__aeabi_d2lz>
    7f04:	strd	r0, [r7], #8
    7f08:	add	r4, r4, #1
    7f0c:	add	r5, r5, #8
    7f10:	cmp	r8, r4
    7f14:	bne	7ef4 <ReadInt64Data+0x160>
    7f18:	b	8db4 <ReadInt64Data+0x1020>
    7f1c:	ldr	r3, [sl]
    7f20:	mov	r2, r8
    7f24:	ldr	r1, [sp, #4]
    7f28:	add	r0, sp, #24
    7f2c:	bl	1588 <fread@plt>
    7f30:	mov	r9, r0
    7f34:	cmp	r8, #0
    7f38:	ble	8db4 <ReadInt64Data+0x1020>
    7f3c:	add	r5, sp, #24
    7f40:	ldr	r3, [sp, #8]
    7f44:	mov	r4, r3
    7f48:	add	r8, r3, r8, lsl #3
    7f4c:	mov	r0, r5
    7f50:	bl	1b94 <Mat_doubleSwap>
    7f54:	vmov	r0, r1, d0
    7f58:	bl	51e4c <__aeabi_d2lz>
    7f5c:	strd	r0, [r4], #8
    7f60:	add	r5, r5, #8
    7f64:	cmp	r4, r8
    7f68:	bne	7f4c <ReadInt64Data+0x1b8>
    7f6c:	b	8db4 <ReadInt64Data+0x1020>
    7f70:	cmp	r8, #256	; 0x100
    7f74:	ble	8050 <ReadInt64Data+0x2bc>
    7f78:	sub	r3, r8, #256	; 0x100
    7f7c:	mov	r2, r3
    7f80:	cmp	r3, #0
    7f84:	movle	r7, r9
    7f88:	ble	7ff8 <ReadInt64Data+0x264>
    7f8c:	ldr	r3, [sp, #8]
    7f90:	sub	fp, r3, #8
    7f94:	mov	r7, r9
    7f98:	add	r3, sp, #24
    7f9c:	str	r3, [sp, #12]
    7fa0:	str	r8, [sp, #16]
    7fa4:	mov	r8, r2
    7fa8:	ldr	r3, [sl]
    7fac:	mov	r2, #256	; 0x100
    7fb0:	ldr	r1, [sp, #4]
    7fb4:	ldr	r4, [sp, #12]
    7fb8:	mov	r0, r4
    7fbc:	bl	1588 <fread@plt>
    7fc0:	add	r9, r9, r0
    7fc4:	add	r6, sp, #2064	; 0x810
    7fc8:	add	r6, r6, #8
    7fcc:	mov	r5, fp
    7fd0:	ldrd	r0, [r4], #8
    7fd4:	bl	51e4c <__aeabi_d2lz>
    7fd8:	strd	r0, [r5, #8]!
    7fdc:	cmp	r4, r6
    7fe0:	bne	7fd0 <ReadInt64Data+0x23c>
    7fe4:	add	r7, r7, #256	; 0x100
    7fe8:	add	fp, fp, #2048	; 0x800
    7fec:	cmp	r7, r8
    7ff0:	blt	7fa8 <ReadInt64Data+0x214>
    7ff4:	ldr	r8, [sp, #16]
    7ff8:	cmp	r8, r7
    7ffc:	ble	8db4 <ReadInt64Data+0x1020>
    8000:	sub	r8, r8, r7
    8004:	ldr	r3, [sl]
    8008:	mov	r2, r8
    800c:	ldr	r1, [sp, #4]
    8010:	add	r0, sp, #24
    8014:	bl	1588 <fread@plt>
    8018:	add	r9, r9, r0
    801c:	cmp	r8, #0
    8020:	ble	8db4 <ReadInt64Data+0x1020>
    8024:	add	r5, sp, #24
    8028:	sub	r4, r7, #-536870911	; 0xe0000001
    802c:	ldr	r3, [sp, #8]
    8030:	add	r4, r3, r4, lsl #3
    8034:	add	r8, r5, r8, lsl #3
    8038:	ldrd	r0, [r5], #8
    803c:	bl	51e4c <__aeabi_d2lz>
    8040:	strd	r0, [r4, #8]!
    8044:	cmp	r5, r8
    8048:	bne	8038 <ReadInt64Data+0x2a4>
    804c:	b	8db4 <ReadInt64Data+0x1020>
    8050:	ldr	r3, [sl]
    8054:	mov	r2, r8
    8058:	ldr	r1, [sp, #4]
    805c:	add	r0, sp, #24
    8060:	bl	1588 <fread@plt>
    8064:	mov	r9, r0
    8068:	cmp	r8, #0
    806c:	ble	8db4 <ReadInt64Data+0x1020>
    8070:	add	r4, sp, #24
    8074:	ldr	r3, [sp, #8]
    8078:	sub	r5, r3, #8
    807c:	add	r8, r4, r8, lsl #3
    8080:	ldrd	r0, [r4], #8
    8084:	bl	51e4c <__aeabi_d2lz>
    8088:	strd	r0, [r5, #8]!
    808c:	cmp	r4, r8
    8090:	bne	8080 <ReadInt64Data+0x2ec>
    8094:	b	8db4 <ReadInt64Data+0x1020>
    8098:	ldr	r9, [sl, #20]
    809c:	cmp	r9, #0
    80a0:	beq	81f8 <ReadInt64Data+0x464>
    80a4:	cmp	r8, #256	; 0x100
    80a8:	ble	81a4 <ReadInt64Data+0x410>
    80ac:	sub	r3, r8, #256	; 0x100
    80b0:	mov	r2, r3
    80b4:	cmp	r3, #0
    80b8:	movle	r7, #0
    80bc:	movle	r9, r7
    80c0:	ble	8140 <ReadInt64Data+0x3ac>
    80c4:	ldr	r3, [sp, #8]
    80c8:	sub	fp, r3, #8
    80cc:	mov	r7, #0
    80d0:	mov	r9, r7
    80d4:	add	r3, sp, #24
    80d8:	str	r3, [sp, #12]
    80dc:	add	r6, sp, #1040	; 0x410
    80e0:	add	r6, r6, #8
    80e4:	str	r8, [sp, #16]
    80e8:	mov	r8, r2
    80ec:	ldr	r3, [sl]
    80f0:	mov	r2, #256	; 0x100
    80f4:	ldr	r1, [sp, #4]
    80f8:	ldr	r4, [sp, #12]
    80fc:	mov	r0, r4
    8100:	bl	1588 <fread@plt>
    8104:	add	r9, r9, r0
    8108:	mov	r5, fp
    810c:	mov	r0, r4
    8110:	bl	1b38 <Mat_floatSwap>
    8114:	vmov	r0, s0
    8118:	bl	51e20 <__aeabi_f2lz>
    811c:	strd	r0, [r5, #8]!
    8120:	add	r4, r4, #4
    8124:	cmp	r4, r6
    8128:	bne	810c <ReadInt64Data+0x378>
    812c:	add	r7, r7, #256	; 0x100
    8130:	add	fp, fp, #2048	; 0x800
    8134:	cmp	r7, r8
    8138:	blt	80ec <ReadInt64Data+0x358>
    813c:	ldr	r8, [sp, #16]
    8140:	cmp	r8, r7
    8144:	ble	8db4 <ReadInt64Data+0x1020>
    8148:	sub	r8, r8, r7
    814c:	ldr	r3, [sl]
    8150:	mov	r2, r8
    8154:	ldr	r1, [sp, #4]
    8158:	add	r0, sp, #24
    815c:	bl	1588 <fread@plt>
    8160:	add	r9, r9, r0
    8164:	cmp	r8, #0
    8168:	ble	8db4 <ReadInt64Data+0x1020>
    816c:	add	r5, sp, #24
    8170:	ldr	r3, [sp, #8]
    8174:	add	r7, r3, r7, lsl #3
    8178:	mov	r4, #0
    817c:	mov	r0, r5
    8180:	bl	1b38 <Mat_floatSwap>
    8184:	vmov	r0, s0
    8188:	bl	51e20 <__aeabi_f2lz>
    818c:	strd	r0, [r7], #8
    8190:	add	r4, r4, #1
    8194:	add	r5, r5, #4
    8198:	cmp	r8, r4
    819c:	bne	817c <ReadInt64Data+0x3e8>
    81a0:	b	8db4 <ReadInt64Data+0x1020>
    81a4:	ldr	r3, [sl]
    81a8:	mov	r2, r8
    81ac:	ldr	r1, [sp, #4]
    81b0:	add	r0, sp, #24
    81b4:	bl	1588 <fread@plt>
    81b8:	mov	r9, r0
    81bc:	cmp	r8, #0
    81c0:	ble	8db4 <ReadInt64Data+0x1020>
    81c4:	add	r5, sp, #24
    81c8:	ldr	r3, [sp, #8]
    81cc:	mov	r4, r3
    81d0:	add	r8, r3, r8, lsl #3
    81d4:	mov	r0, r5
    81d8:	bl	1b38 <Mat_floatSwap>
    81dc:	vmov	r0, s0
    81e0:	bl	51e20 <__aeabi_f2lz>
    81e4:	strd	r0, [r4], #8
    81e8:	add	r5, r5, #4
    81ec:	cmp	r4, r8
    81f0:	bne	81d4 <ReadInt64Data+0x440>
    81f4:	b	8db4 <ReadInt64Data+0x1020>
    81f8:	cmp	r8, #256	; 0x100
    81fc:	ble	82d8 <ReadInt64Data+0x544>
    8200:	sub	r3, r8, #256	; 0x100
    8204:	mov	r2, r3
    8208:	cmp	r3, #0
    820c:	movle	r7, r9
    8210:	ble	8280 <ReadInt64Data+0x4ec>
    8214:	ldr	r3, [sp, #8]
    8218:	sub	fp, r3, #8
    821c:	mov	r7, r9
    8220:	add	r3, sp, #24
    8224:	str	r3, [sp, #12]
    8228:	add	r6, sp, #1040	; 0x410
    822c:	add	r6, r6, #8
    8230:	str	r8, [sp, #16]
    8234:	mov	r8, r2
    8238:	ldr	r3, [sl]
    823c:	mov	r2, #256	; 0x100
    8240:	ldr	r1, [sp, #4]
    8244:	ldr	r4, [sp, #12]
    8248:	mov	r0, r4
    824c:	bl	1588 <fread@plt>
    8250:	add	r9, r9, r0
    8254:	mov	r5, fp
    8258:	ldr	r0, [r4], #4
    825c:	bl	51e20 <__aeabi_f2lz>
    8260:	strd	r0, [r5, #8]!
    8264:	cmp	r4, r6
    8268:	bne	8258 <ReadInt64Data+0x4c4>
    826c:	add	r7, r7, #256	; 0x100
    8270:	add	fp, fp, #2048	; 0x800
    8274:	cmp	r7, r8
    8278:	blt	8238 <ReadInt64Data+0x4a4>
    827c:	ldr	r8, [sp, #16]
    8280:	cmp	r8, r7
    8284:	ble	8db4 <ReadInt64Data+0x1020>
    8288:	sub	r8, r8, r7
    828c:	ldr	r3, [sl]
    8290:	mov	r2, r8
    8294:	ldr	r1, [sp, #4]
    8298:	add	r0, sp, #24
    829c:	bl	1588 <fread@plt>
    82a0:	add	r9, r9, r0
    82a4:	cmp	r8, #0
    82a8:	ble	8db4 <ReadInt64Data+0x1020>
    82ac:	add	r5, sp, #24
    82b0:	sub	r4, r7, #-536870911	; 0xe0000001
    82b4:	ldr	r3, [sp, #8]
    82b8:	add	r4, r3, r4, lsl #3
    82bc:	add	r8, r5, r8, lsl #2
    82c0:	ldr	r0, [r5], #4
    82c4:	bl	51e20 <__aeabi_f2lz>
    82c8:	strd	r0, [r4, #8]!
    82cc:	cmp	r5, r8
    82d0:	bne	82c0 <ReadInt64Data+0x52c>
    82d4:	b	8db4 <ReadInt64Data+0x1020>
    82d8:	ldr	r3, [sl]
    82dc:	mov	r2, r8
    82e0:	ldr	r1, [sp, #4]
    82e4:	add	r0, sp, #24
    82e8:	bl	1588 <fread@plt>
    82ec:	mov	r9, r0
    82f0:	cmp	r8, #0
    82f4:	ble	8db4 <ReadInt64Data+0x1020>
    82f8:	add	r4, sp, #24
    82fc:	ldr	r3, [sp, #8]
    8300:	sub	r5, r3, #8
    8304:	add	r8, r4, r8, lsl #2
    8308:	ldr	r0, [r4], #4
    830c:	bl	51e20 <__aeabi_f2lz>
    8310:	strd	r0, [r5, #8]!
    8314:	cmp	r4, r8
    8318:	bne	8308 <ReadInt64Data+0x574>
    831c:	b	8db4 <ReadInt64Data+0x1020>
    8320:	ldr	r9, [sl, #20]
    8324:	cmp	r9, #0
    8328:	beq	8474 <ReadInt64Data+0x6e0>
    832c:	cmp	r8, #256	; 0x100
    8330:	ble	8424 <ReadInt64Data+0x690>
    8334:	sub	r3, r8, #256	; 0x100
    8338:	mov	r2, r3
    833c:	cmp	r3, #0
    8340:	movle	r7, #0
    8344:	movle	r9, r7
    8348:	ble	83c4 <ReadInt64Data+0x630>
    834c:	ldr	r3, [sp, #8]
    8350:	sub	fp, r3, #8
    8354:	mov	r7, #0
    8358:	mov	r9, r7
    835c:	add	r3, sp, #24
    8360:	str	r3, [sp, #12]
    8364:	add	r6, sp, #1040	; 0x410
    8368:	add	r6, r6, #8
    836c:	str	r8, [sp, #16]
    8370:	mov	r8, r2
    8374:	ldr	r3, [sl]
    8378:	mov	r2, #256	; 0x100
    837c:	ldr	r1, [sp, #4]
    8380:	ldr	r4, [sp, #12]
    8384:	mov	r0, r4
    8388:	bl	1588 <fread@plt>
    838c:	add	r9, r9, r0
    8390:	mov	r5, fp
    8394:	mov	r0, r4
    8398:	bl	1a20 <Mat_int32Swap>
    839c:	asr	r1, r0, #31
    83a0:	strd	r0, [r5, #8]!
    83a4:	add	r4, r4, #4
    83a8:	cmp	r4, r6
    83ac:	bne	8394 <ReadInt64Data+0x600>
    83b0:	add	r7, r7, #256	; 0x100
    83b4:	add	fp, fp, #2048	; 0x800
    83b8:	cmp	r7, r8
    83bc:	blt	8374 <ReadInt64Data+0x5e0>
    83c0:	ldr	r8, [sp, #16]
    83c4:	cmp	r8, r7
    83c8:	ble	8db4 <ReadInt64Data+0x1020>
    83cc:	sub	r8, r8, r7
    83d0:	ldr	r3, [sl]
    83d4:	mov	r2, r8
    83d8:	ldr	r1, [sp, #4]
    83dc:	add	r0, sp, #24
    83e0:	bl	1588 <fread@plt>
    83e4:	add	r9, r9, r0
    83e8:	cmp	r8, #0
    83ec:	ble	8db4 <ReadInt64Data+0x1020>
    83f0:	add	r5, sp, #24
    83f4:	ldr	r3, [sp, #8]
    83f8:	add	r7, r3, r7, lsl #3
    83fc:	mov	r4, #0
    8400:	mov	r0, r5
    8404:	bl	1a20 <Mat_int32Swap>
    8408:	asr	r1, r0, #31
    840c:	strd	r0, [r7], #8
    8410:	add	r4, r4, #1
    8414:	add	r5, r5, #4
    8418:	cmp	r8, r4
    841c:	bne	8400 <ReadInt64Data+0x66c>
    8420:	b	8db4 <ReadInt64Data+0x1020>
    8424:	ldr	r3, [sl]
    8428:	mov	r2, r8
    842c:	ldr	r1, [sp, #4]
    8430:	add	r0, sp, #24
    8434:	bl	1588 <fread@plt>
    8438:	mov	r9, r0
    843c:	cmp	r8, #0
    8440:	ble	8db4 <ReadInt64Data+0x1020>
    8444:	add	r5, sp, #24
    8448:	ldr	r3, [sp, #8]
    844c:	mov	r4, r3
    8450:	add	r8, r3, r8, lsl #3
    8454:	mov	r0, r5
    8458:	bl	1a20 <Mat_int32Swap>
    845c:	asr	r1, r0, #31
    8460:	strd	r0, [r4], #8
    8464:	add	r5, r5, #4
    8468:	cmp	r4, r8
    846c:	bne	8454 <ReadInt64Data+0x6c0>
    8470:	b	8db4 <ReadInt64Data+0x1020>
    8474:	cmp	r8, #256	; 0x100
    8478:	ble	8544 <ReadInt64Data+0x7b0>
    847c:	sub	fp, r8, #256	; 0x100
    8480:	cmp	fp, #0
    8484:	movle	r5, r9
    8488:	ble	84e4 <ReadInt64Data+0x750>
    848c:	ldr	r3, [sp, #8]
    8490:	sub	r6, r3, #8
    8494:	mov	r5, r9
    8498:	add	r7, sp, #24
    849c:	add	r4, r7, #1020	; 0x3fc
    84a0:	ldr	r3, [sl]
    84a4:	mov	r2, #256	; 0x100
    84a8:	ldr	r1, [sp, #4]
    84ac:	mov	r0, r7
    84b0:	bl	1588 <fread@plt>
    84b4:	add	r9, r9, r0
    84b8:	sub	r1, r7, #4
    84bc:	mov	r0, r6
    84c0:	ldr	r2, [r1, #4]!
    84c4:	asr	r3, r2, #31
    84c8:	strd	r2, [r0, #8]!
    84cc:	cmp	r1, r4
    84d0:	bne	84c0 <ReadInt64Data+0x72c>
    84d4:	add	r5, r5, #256	; 0x100
    84d8:	add	r6, r6, #2048	; 0x800
    84dc:	cmp	r5, fp
    84e0:	blt	84a0 <ReadInt64Data+0x70c>
    84e4:	cmp	r8, r5
    84e8:	ble	8db4 <ReadInt64Data+0x1020>
    84ec:	sub	r8, r8, r5
    84f0:	ldr	r3, [sl]
    84f4:	mov	r2, r8
    84f8:	ldr	r1, [sp, #4]
    84fc:	add	r0, sp, #24
    8500:	bl	1588 <fread@plt>
    8504:	add	r9, r9, r0
    8508:	cmp	r8, #0
    850c:	ble	8db4 <ReadInt64Data+0x1020>
    8510:	add	ip, sp, #24
    8514:	add	r0, sp, #20
    8518:	sub	r1, r5, #-536870911	; 0xe0000001
    851c:	ldr	r3, [sp, #8]
    8520:	add	r1, r3, r1, lsl #3
    8524:	sub	r8, r8, #-1073741823	; 0xc0000001
    8528:	add	ip, ip, r8, lsl #2
    852c:	ldr	r2, [r0, #4]!
    8530:	asr	r3, r2, #31
    8534:	strd	r2, [r1, #8]!
    8538:	cmp	r0, ip
    853c:	bne	852c <ReadInt64Data+0x798>
    8540:	b	8db4 <ReadInt64Data+0x1020>
    8544:	ldr	r3, [sl]
    8548:	mov	r2, r8
    854c:	ldr	r1, [sp, #4]
    8550:	add	r0, sp, #24
    8554:	bl	1588 <fread@plt>
    8558:	mov	r9, r0
    855c:	cmp	r8, #0
    8560:	ble	8db4 <ReadInt64Data+0x1020>
    8564:	add	ip, sp, #24
    8568:	add	r1, sp, #20
    856c:	ldr	r3, [sp, #8]
    8570:	sub	r0, r3, #8
    8574:	sub	r8, r8, #-1073741823	; 0xc0000001
    8578:	add	ip, ip, r8, lsl #2
    857c:	ldr	r2, [r1, #4]!
    8580:	asr	r3, r2, #31
    8584:	strd	r2, [r0, #8]!
    8588:	cmp	r1, ip
    858c:	bne	857c <ReadInt64Data+0x7e8>
    8590:	b	8db4 <ReadInt64Data+0x1020>
    8594:	ldr	r9, [sl, #20]
    8598:	cmp	r9, #0
    859c:	beq	8700 <ReadInt64Data+0x96c>
    85a0:	cmp	r8, #256	; 0x100
    85a4:	ble	86a8 <ReadInt64Data+0x914>
    85a8:	sub	r3, r8, #256	; 0x100
    85ac:	str	r3, [sp, #12]
    85b0:	cmp	r3, #0
    85b4:	movle	fp, #0
    85b8:	movle	r9, fp
    85bc:	ble	8640 <ReadInt64Data+0x8ac>
    85c0:	ldr	r3, [sp, #8]
    85c4:	sub	r3, r3, #8
    85c8:	mov	fp, #0
    85cc:	mov	r9, fp
    85d0:	add	r2, sp, #24
    85d4:	str	r2, [sp, #16]
    85d8:	add	r7, sp, #1040	; 0x410
    85dc:	add	r7, r7, #8
    85e0:	mov	r6, fp
    85e4:	str	r8, [sp, #20]
    85e8:	mov	r8, r3
    85ec:	ldr	r3, [sl]
    85f0:	mov	r2, #256	; 0x100
    85f4:	ldr	r1, [sp, #4]
    85f8:	ldr	r4, [sp, #16]
    85fc:	mov	r0, r4
    8600:	bl	1588 <fread@plt>
    8604:	add	r9, r9, r0
    8608:	mov	r5, r8
    860c:	mov	r0, r4
    8610:	bl	1a88 <Mat_uint32Swap>
    8614:	str	r0, [r5, #8]!
    8618:	str	r6, [r5, #4]
    861c:	add	r4, r4, #4
    8620:	cmp	r4, r7
    8624:	bne	860c <ReadInt64Data+0x878>
    8628:	add	fp, fp, #256	; 0x100
    862c:	add	r8, r8, #2048	; 0x800
    8630:	ldr	r3, [sp, #12]
    8634:	cmp	fp, r3
    8638:	blt	85ec <ReadInt64Data+0x858>
    863c:	ldr	r8, [sp, #20]
    8640:	cmp	r8, fp
    8644:	ble	8db4 <ReadInt64Data+0x1020>
    8648:	sub	r8, r8, fp
    864c:	ldr	r3, [sl]
    8650:	mov	r2, r8
    8654:	ldr	r1, [sp, #4]
    8658:	add	r0, sp, #24
    865c:	bl	1588 <fread@plt>
    8660:	add	r9, r9, r0
    8664:	cmp	r8, #0
    8668:	ble	8db4 <ReadInt64Data+0x1020>
    866c:	add	r5, sp, #24
    8670:	ldr	r3, [sp, #8]
    8674:	add	fp, r3, fp, lsl #3
    8678:	mov	r4, #0
    867c:	mov	r6, r4
    8680:	mov	r0, r5
    8684:	bl	1a88 <Mat_uint32Swap>
    8688:	str	r0, [fp]
    868c:	str	r6, [fp, #4]
    8690:	add	fp, fp, #8
    8694:	add	r4, r4, #1
    8698:	add	r5, r5, #4
    869c:	cmp	r8, r4
    86a0:	bne	8680 <ReadInt64Data+0x8ec>
    86a4:	b	8db4 <ReadInt64Data+0x1020>
    86a8:	ldr	r3, [sl]
    86ac:	mov	r2, r8
    86b0:	ldr	r1, [sp, #4]
    86b4:	add	r0, sp, #24
    86b8:	bl	1588 <fread@plt>
    86bc:	mov	r9, r0
    86c0:	cmp	r8, #0
    86c4:	ble	8db4 <ReadInt64Data+0x1020>
    86c8:	add	r5, sp, #24
    86cc:	ldr	r3, [sp, #8]
    86d0:	mov	r4, r3
    86d4:	add	r8, r3, r8, lsl #3
    86d8:	mov	r6, #0
    86dc:	mov	r0, r5
    86e0:	bl	1a88 <Mat_uint32Swap>
    86e4:	str	r0, [r4]
    86e8:	str	r6, [r4, #4]
    86ec:	add	r4, r4, #8
    86f0:	add	r5, r5, #4
    86f4:	cmp	r4, r8
    86f8:	bne	86dc <ReadInt64Data+0x948>
    86fc:	b	8db4 <ReadInt64Data+0x1020>
    8700:	cmp	r8, #256	; 0x100
    8704:	ble	87e8 <ReadInt64Data+0xa54>
    8708:	sub	r3, r8, #256	; 0x100
    870c:	mov	r2, r3
    8710:	cmp	r3, #0
    8714:	movle	r6, r9
    8718:	ble	8784 <ReadInt64Data+0x9f0>
    871c:	ldr	r3, [sp, #8]
    8720:	sub	r7, r3, #8
    8724:	mov	r6, r9
    8728:	add	fp, sp, #24
    872c:	add	r5, fp, #1020	; 0x3fc
    8730:	mov	r4, #0
    8734:	str	r8, [sp, #12]
    8738:	mov	r8, r2
    873c:	ldr	r3, [sl]
    8740:	mov	r2, #256	; 0x100
    8744:	ldr	r1, [sp, #4]
    8748:	mov	r0, fp
    874c:	bl	1588 <fread@plt>
    8750:	add	r9, r9, r0
    8754:	sub	r2, fp, #4
    8758:	mov	r3, r7
    875c:	ldr	r1, [r2, #4]!
    8760:	str	r1, [r3, #8]!
    8764:	str	r4, [r3, #4]
    8768:	cmp	r2, r5
    876c:	bne	875c <ReadInt64Data+0x9c8>
    8770:	add	r6, r6, #256	; 0x100
    8774:	add	r7, r7, #2048	; 0x800
    8778:	cmp	r6, r8
    877c:	blt	873c <ReadInt64Data+0x9a8>
    8780:	ldr	r8, [sp, #12]
    8784:	cmp	r8, r6
    8788:	ble	8db4 <ReadInt64Data+0x1020>
    878c:	sub	r8, r8, r6
    8790:	ldr	r3, [sl]
    8794:	mov	r2, r8
    8798:	ldr	r1, [sp, #4]
    879c:	add	r0, sp, #24
    87a0:	bl	1588 <fread@plt>
    87a4:	add	r9, r9, r0
    87a8:	cmp	r8, #0
    87ac:	ble	8db4 <ReadInt64Data+0x1020>
    87b0:	add	r0, sp, #24
    87b4:	add	r2, sp, #20
    87b8:	sub	r3, r6, #-536870911	; 0xe0000001
    87bc:	ldr	r1, [sp, #8]
    87c0:	add	r3, r1, r3, lsl #3
    87c4:	sub	r8, r8, #-1073741823	; 0xc0000001
    87c8:	add	r0, r0, r8, lsl #2
    87cc:	mov	ip, #0
    87d0:	ldr	r1, [r2, #4]!
    87d4:	str	r1, [r3, #8]!
    87d8:	str	ip, [r3, #4]
    87dc:	cmp	r2, r0
    87e0:	bne	87d0 <ReadInt64Data+0xa3c>
    87e4:	b	8db4 <ReadInt64Data+0x1020>
    87e8:	ldr	r3, [sl]
    87ec:	mov	r2, r8
    87f0:	ldr	r1, [sp, #4]
    87f4:	add	r0, sp, #24
    87f8:	bl	1588 <fread@plt>
    87fc:	mov	r9, r0
    8800:	cmp	r8, #0
    8804:	ble	8db4 <ReadInt64Data+0x1020>
    8808:	add	r0, sp, #24
    880c:	add	r2, sp, #20
    8810:	ldr	r3, [sp, #8]
    8814:	sub	r3, r3, #8
    8818:	sub	r8, r8, #-1073741823	; 0xc0000001
    881c:	add	r0, r0, r8, lsl #2
    8820:	mov	ip, #0
    8824:	ldr	r1, [r2, #4]!
    8828:	str	r1, [r3, #8]!
    882c:	str	ip, [r3, #4]
    8830:	cmp	r2, r0
    8834:	bne	8824 <ReadInt64Data+0xa90>
    8838:	b	8db4 <ReadInt64Data+0x1020>
    883c:	ldr	r9, [sl, #20]
    8840:	cmp	r9, #0
    8844:	beq	8994 <ReadInt64Data+0xc00>
    8848:	cmp	r8, #256	; 0x100
    884c:	ble	8940 <ReadInt64Data+0xbac>
    8850:	sub	r3, r8, #256	; 0x100
    8854:	mov	r2, r3
    8858:	cmp	r3, #0
    885c:	movle	r7, #0
    8860:	movle	r9, r7
    8864:	ble	88e0 <ReadInt64Data+0xb4c>
    8868:	ldr	r3, [sp, #8]
    886c:	sub	fp, r3, #8
    8870:	mov	r7, #0
    8874:	mov	r9, r7
    8878:	add	r3, sp, #24
    887c:	str	r3, [sp, #12]
    8880:	add	r6, sp, #536	; 0x218
    8884:	str	r8, [sp, #16]
    8888:	mov	r8, r2
    888c:	ldr	r3, [sl]
    8890:	mov	r2, #256	; 0x100
    8894:	ldr	r1, [sp, #4]
    8898:	ldr	r4, [sp, #12]
    889c:	mov	r0, r4
    88a0:	bl	1588 <fread@plt>
    88a4:	add	r9, r9, r0
    88a8:	mov	r5, fp
    88ac:	mov	r0, r4
    88b0:	bl	1ae4 <Mat_int16Swap>
    88b4:	sxth	r0, r0
    88b8:	asr	r1, r0, #31
    88bc:	strd	r0, [r5, #8]!
    88c0:	add	r4, r4, #2
    88c4:	cmp	r4, r6
    88c8:	bne	88ac <ReadInt64Data+0xb18>
    88cc:	add	r7, r7, #256	; 0x100
    88d0:	add	fp, fp, #2048	; 0x800
    88d4:	cmp	r7, r8
    88d8:	blt	888c <ReadInt64Data+0xaf8>
    88dc:	ldr	r8, [sp, #16]
    88e0:	cmp	r8, r7
    88e4:	ble	8db4 <ReadInt64Data+0x1020>
    88e8:	sub	r8, r8, r7
    88ec:	ldr	r3, [sl]
    88f0:	mov	r2, r8
    88f4:	ldr	r1, [sp, #4]
    88f8:	add	r0, sp, #24
    88fc:	bl	1588 <fread@plt>
    8900:	add	r9, r9, r0
    8904:	cmp	r8, #0
    8908:	ble	8db4 <ReadInt64Data+0x1020>
    890c:	add	r4, sp, #24
    8910:	ldr	r3, [sp, #8]
    8914:	add	r7, r3, r7, lsl #3
    8918:	add	r8, r4, r8, lsl #1
    891c:	mov	r0, r4
    8920:	bl	1ae4 <Mat_int16Swap>
    8924:	sxth	r0, r0
    8928:	asr	r1, r0, #31
    892c:	strd	r0, [r7], #8
    8930:	add	r4, r4, #2
    8934:	cmp	r4, r8
    8938:	bne	891c <ReadInt64Data+0xb88>
    893c:	b	8db4 <ReadInt64Data+0x1020>
    8940:	ldr	r3, [sl]
    8944:	mov	r2, r8
    8948:	ldr	r1, [sp, #4]
    894c:	add	r0, sp, #24
    8950:	bl	1588 <fread@plt>
    8954:	mov	r9, r0
    8958:	cmp	r8, #0
    895c:	ble	8db4 <ReadInt64Data+0x1020>
    8960:	add	r5, sp, #24
    8964:	ldr	r3, [sp, #8]
    8968:	mov	r4, r3
    896c:	add	r8, r3, r8, lsl #3
    8970:	mov	r0, r5
    8974:	bl	1ae4 <Mat_int16Swap>
    8978:	sxth	r0, r0
    897c:	asr	r1, r0, #31
    8980:	strd	r0, [r4], #8
    8984:	add	r5, r5, #2
    8988:	cmp	r8, r4
    898c:	bne	8970 <ReadInt64Data+0xbdc>
    8990:	b	8db4 <ReadInt64Data+0x1020>
    8994:	cmp	r8, #256	; 0x100
    8998:	ble	8a68 <ReadInt64Data+0xcd4>
    899c:	sub	fp, r8, #256	; 0x100
    89a0:	cmp	fp, #0
    89a4:	movle	r5, r9
    89a8:	ble	8a08 <ReadInt64Data+0xc74>
    89ac:	ldr	r3, [sp, #8]
    89b0:	sub	r6, r3, #8
    89b4:	mov	r5, r9
    89b8:	add	r7, sp, #24
    89bc:	add	r4, r7, #508	; 0x1fc
    89c0:	add	r4, r4, #2
    89c4:	ldr	r3, [sl]
    89c8:	mov	r2, #256	; 0x100
    89cc:	ldr	r1, [sp, #4]
    89d0:	mov	r0, r7
    89d4:	bl	1588 <fread@plt>
    89d8:	add	r9, r9, r0
    89dc:	sub	r3, r7, #2
    89e0:	mov	r2, r6
    89e4:	ldrsh	r0, [r3, #2]!
    89e8:	asr	r1, r0, #31
    89ec:	strd	r0, [r2, #8]!
    89f0:	cmp	r3, r4
    89f4:	bne	89e4 <ReadInt64Data+0xc50>
    89f8:	add	r5, r5, #256	; 0x100
    89fc:	add	r6, r6, #2048	; 0x800
    8a00:	cmp	r5, fp
    8a04:	blt	89c4 <ReadInt64Data+0xc30>
    8a08:	cmp	r8, r5
    8a0c:	ble	8db4 <ReadInt64Data+0x1020>
    8a10:	sub	r8, r8, r5
    8a14:	ldr	r3, [sl]
    8a18:	mov	r2, r8
    8a1c:	ldr	r1, [sp, #4]
    8a20:	add	r0, sp, #24
    8a24:	bl	1588 <fread@plt>
    8a28:	add	r9, r9, r0
    8a2c:	cmp	r8, #0
    8a30:	ble	8db4 <ReadInt64Data+0x1020>
    8a34:	add	ip, sp, #24
    8a38:	add	r2, sp, #22
    8a3c:	sub	r3, r5, #-536870911	; 0xe0000001
    8a40:	ldr	r1, [sp, #8]
    8a44:	add	r3, r1, r3, lsl #3
    8a48:	sub	r8, r8, #-2147483647	; 0x80000001
    8a4c:	add	ip, ip, r8, lsl #1
    8a50:	ldrsh	r0, [r2, #2]!
    8a54:	asr	r1, r0, #31
    8a58:	strd	r0, [r3, #8]!
    8a5c:	cmp	r2, ip
    8a60:	bne	8a50 <ReadInt64Data+0xcbc>
    8a64:	b	8db4 <ReadInt64Data+0x1020>
    8a68:	ldr	r3, [sl]
    8a6c:	mov	r2, r8
    8a70:	ldr	r1, [sp, #4]
    8a74:	add	r0, sp, #24
    8a78:	bl	1588 <fread@plt>
    8a7c:	mov	r9, r0
    8a80:	cmp	r8, #0
    8a84:	ble	8db4 <ReadInt64Data+0x1020>
    8a88:	add	ip, sp, #24
    8a8c:	add	r3, sp, #22
    8a90:	ldr	r2, [sp, #8]
    8a94:	sub	r2, r2, #8
    8a98:	sub	r8, r8, #-2147483647	; 0x80000001
    8a9c:	add	ip, ip, r8, lsl #1
    8aa0:	ldrsh	r0, [r3, #2]!
    8aa4:	asr	r1, r0, #31
    8aa8:	strd	r0, [r2, #8]!
    8aac:	cmp	r3, ip
    8ab0:	bne	8aa0 <ReadInt64Data+0xd0c>
    8ab4:	b	8db4 <ReadInt64Data+0x1020>
    8ab8:	ldr	r9, [sl, #20]
    8abc:	cmp	r9, #0
    8ac0:	beq	8c10 <ReadInt64Data+0xe7c>
    8ac4:	cmp	r8, #256	; 0x100
    8ac8:	ble	8bbc <ReadInt64Data+0xe28>
    8acc:	sub	r3, r8, #256	; 0x100
    8ad0:	mov	r2, r3
    8ad4:	cmp	r3, #0
    8ad8:	movle	r7, #0
    8adc:	movle	r9, r7
    8ae0:	ble	8b5c <ReadInt64Data+0xdc8>
    8ae4:	ldr	r3, [sp, #8]
    8ae8:	sub	fp, r3, #8
    8aec:	mov	r7, #0
    8af0:	mov	r9, r7
    8af4:	add	r3, sp, #24
    8af8:	str	r3, [sp, #12]
    8afc:	add	r6, sp, #536	; 0x218
    8b00:	str	r8, [sp, #16]
    8b04:	mov	r8, r2
    8b08:	ldr	r3, [sl]
    8b0c:	mov	r2, #256	; 0x100
    8b10:	ldr	r1, [sp, #4]
    8b14:	ldr	r4, [sp, #12]
    8b18:	mov	r0, r4
    8b1c:	bl	1588 <fread@plt>
    8b20:	add	r9, r9, r0
    8b24:	mov	r5, fp
    8b28:	mov	r0, r4
    8b2c:	bl	1b1c <Mat_uint16Swap>
    8b30:	uxth	r0, r0
    8b34:	mov	r1, #0
    8b38:	strd	r0, [r5, #8]!
    8b3c:	add	r4, r4, #2
    8b40:	cmp	r4, r6
    8b44:	bne	8b28 <ReadInt64Data+0xd94>
    8b48:	add	r7, r7, #256	; 0x100
    8b4c:	add	fp, fp, #2048	; 0x800
    8b50:	cmp	r7, r8
    8b54:	blt	8b08 <ReadInt64Data+0xd74>
    8b58:	ldr	r8, [sp, #16]
    8b5c:	cmp	r8, r7
    8b60:	ble	8db4 <ReadInt64Data+0x1020>
    8b64:	sub	r8, r8, r7
    8b68:	ldr	r3, [sl]
    8b6c:	mov	r2, r8
    8b70:	ldr	r1, [sp, #4]
    8b74:	add	r0, sp, #24
    8b78:	bl	1588 <fread@plt>
    8b7c:	add	r9, r9, r0
    8b80:	cmp	r8, #0
    8b84:	ble	8db4 <ReadInt64Data+0x1020>
    8b88:	add	r4, sp, #24
    8b8c:	ldr	r3, [sp, #8]
    8b90:	add	r7, r3, r7, lsl #3
    8b94:	add	r8, r4, r8, lsl #1
    8b98:	mov	r0, r4
    8b9c:	bl	1b1c <Mat_uint16Swap>
    8ba0:	uxth	r0, r0
    8ba4:	mov	r1, #0
    8ba8:	strd	r0, [r7], #8
    8bac:	add	r4, r4, #2
    8bb0:	cmp	r4, r8
    8bb4:	bne	8b98 <ReadInt64Data+0xe04>
    8bb8:	b	8db4 <ReadInt64Data+0x1020>
    8bbc:	ldr	r3, [sl]
    8bc0:	mov	r2, r8
    8bc4:	ldr	r1, [sp, #4]
    8bc8:	add	r0, sp, #24
    8bcc:	bl	1588 <fread@plt>
    8bd0:	mov	r9, r0
    8bd4:	cmp	r8, #0
    8bd8:	ble	8db4 <ReadInt64Data+0x1020>
    8bdc:	add	r5, sp, #24
    8be0:	ldr	r3, [sp, #8]
    8be4:	mov	r4, r3
    8be8:	add	r8, r3, r8, lsl #3
    8bec:	mov	r0, r5
    8bf0:	bl	1b1c <Mat_uint16Swap>
    8bf4:	uxth	r0, r0
    8bf8:	mov	r1, #0
    8bfc:	strd	r0, [r4], #8
    8c00:	add	r5, r5, #2
    8c04:	cmp	r4, r8
    8c08:	bne	8bec <ReadInt64Data+0xe58>
    8c0c:	b	8db4 <ReadInt64Data+0x1020>
    8c10:	cmp	r8, #256	; 0x100
    8c14:	ble	8ce4 <ReadInt64Data+0xf50>
    8c18:	sub	fp, r8, #256	; 0x100
    8c1c:	cmp	fp, #0
    8c20:	movle	r5, r9
    8c24:	ble	8c84 <ReadInt64Data+0xef0>
    8c28:	ldr	r3, [sp, #8]
    8c2c:	sub	r6, r3, #8
    8c30:	mov	r5, r9
    8c34:	add	r7, sp, #24
    8c38:	add	r4, r7, #508	; 0x1fc
    8c3c:	add	r4, r4, #2
    8c40:	ldr	r3, [sl]
    8c44:	mov	r2, #256	; 0x100
    8c48:	ldr	r1, [sp, #4]
    8c4c:	mov	r0, r7
    8c50:	bl	1588 <fread@plt>
    8c54:	add	r9, r9, r0
    8c58:	sub	r3, r7, #2
    8c5c:	mov	r2, r6
    8c60:	ldrh	r0, [r3, #2]!
    8c64:	mov	r1, #0
    8c68:	strd	r0, [r2, #8]!
    8c6c:	cmp	r3, r4
    8c70:	bne	8c60 <ReadInt64Data+0xecc>
    8c74:	add	r5, r5, #256	; 0x100
    8c78:	add	r6, r6, #2048	; 0x800
    8c7c:	cmp	r5, fp
    8c80:	blt	8c40 <ReadInt64Data+0xeac>
    8c84:	cmp	r8, r5
    8c88:	ble	8db4 <ReadInt64Data+0x1020>
    8c8c:	sub	r8, r8, r5
    8c90:	ldr	r3, [sl]
    8c94:	mov	r2, r8
    8c98:	ldr	r1, [sp, #4]
    8c9c:	add	r0, sp, #24
    8ca0:	bl	1588 <fread@plt>
    8ca4:	add	r9, r9, r0
    8ca8:	cmp	r8, #0
    8cac:	ble	8db4 <ReadInt64Data+0x1020>
    8cb0:	add	ip, sp, #24
    8cb4:	add	r2, sp, #22
    8cb8:	sub	r3, r5, #-536870911	; 0xe0000001
    8cbc:	ldr	r1, [sp, #8]
    8cc0:	add	r3, r1, r3, lsl #3
    8cc4:	sub	r8, r8, #-2147483647	; 0x80000001
    8cc8:	add	ip, ip, r8, lsl #1
    8ccc:	ldrh	r0, [r2, #2]!
    8cd0:	mov	r1, #0
    8cd4:	strd	r0, [r3, #8]!
    8cd8:	cmp	r2, ip
    8cdc:	bne	8ccc <ReadInt64Data+0xf38>
    8ce0:	b	8db4 <ReadInt64Data+0x1020>
    8ce4:	ldr	r3, [sl]
    8ce8:	mov	r2, r8
    8cec:	ldr	r1, [sp, #4]
    8cf0:	add	r0, sp, #24
    8cf4:	bl	1588 <fread@plt>
    8cf8:	mov	r9, r0
    8cfc:	cmp	r8, #0
    8d00:	ble	8db4 <ReadInt64Data+0x1020>
    8d04:	add	ip, sp, #24
    8d08:	add	r3, sp, #22
    8d0c:	ldr	r2, [sp, #8]
    8d10:	sub	r2, r2, #8
    8d14:	sub	r8, r8, #-2147483647	; 0x80000001
    8d18:	add	ip, ip, r8, lsl #1
    8d1c:	ldrh	r0, [r3, #2]!
    8d20:	mov	r1, #0
    8d24:	strd	r0, [r2, #8]!
    8d28:	cmp	r3, ip
    8d2c:	bne	8d1c <ReadInt64Data+0xf88>
    8d30:	b	8db4 <ReadInt64Data+0x1020>
    8d34:	cmp	r8, #256	; 0x100
    8d38:	ble	8dc8 <ReadInt64Data+0x1034>
    8d3c:	sub	fp, r8, #256	; 0x100
    8d40:	cmp	fp, #0
    8d44:	movle	r5, #0
    8d48:	movle	r9, r5
    8d4c:	ble	8dac <ReadInt64Data+0x1018>
    8d50:	ldr	r3, [sp, #8]
    8d54:	sub	r6, r3, #8
    8d58:	mov	r5, #0
    8d5c:	mov	r9, r5
    8d60:	add	r7, sp, #24
    8d64:	add	r4, r7, #255	; 0xff
    8d68:	ldr	r3, [sl]
    8d6c:	mov	r2, #256	; 0x100
    8d70:	ldr	r1, [sp, #4]
    8d74:	mov	r0, r7
    8d78:	bl	1588 <fread@plt>
    8d7c:	add	r9, r9, r0
    8d80:	sub	r3, r7, #1
    8d84:	mov	r2, r6
    8d88:	ldrsb	r0, [r3, #1]!
    8d8c:	asr	r1, r0, #31
    8d90:	strd	r0, [r2, #8]!
    8d94:	cmp	r4, r3
    8d98:	bne	8d88 <ReadInt64Data+0xff4>
    8d9c:	add	r5, r5, #256	; 0x100
    8da0:	add	r6, r6, #2048	; 0x800
    8da4:	cmp	r5, fp
    8da8:	blt	8d68 <ReadInt64Data+0xfd4>
    8dac:	cmp	r8, r5
    8db0:	bgt	8e18 <ReadInt64Data+0x1084>
    8db4:	ldr	r3, [sp, #4]
    8db8:	mul	r0, r3, r9
    8dbc:	add	sp, sp, #2064	; 0x810
    8dc0:	add	sp, sp, #12
    8dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8dc8:	ldr	r3, [sl]
    8dcc:	mov	r2, r8
    8dd0:	ldr	r1, [sp, #4]
    8dd4:	add	r0, sp, #24
    8dd8:	bl	1588 <fread@plt>
    8ddc:	mov	r9, r0
    8de0:	cmp	r8, #0
    8de4:	ble	8db4 <ReadInt64Data+0x1020>
    8de8:	add	ip, sp, #24
    8dec:	add	r3, sp, #23
    8df0:	ldr	r2, [sp, #8]
    8df4:	sub	r2, r2, #8
    8df8:	sub	r8, r8, #1
    8dfc:	add	ip, ip, r8
    8e00:	ldrsb	r0, [r3, #1]!
    8e04:	asr	r1, r0, #31
    8e08:	strd	r0, [r2, #8]!
    8e0c:	cmp	ip, r3
    8e10:	bne	8e00 <ReadInt64Data+0x106c>
    8e14:	b	8db4 <ReadInt64Data+0x1020>
    8e18:	sub	r8, r8, r5
    8e1c:	ldr	r3, [sl]
    8e20:	mov	r2, r8
    8e24:	ldr	r1, [sp, #4]
    8e28:	add	r0, sp, #24
    8e2c:	bl	1588 <fread@plt>
    8e30:	add	r9, r9, r0
    8e34:	cmp	r8, #0
    8e38:	ble	8db4 <ReadInt64Data+0x1020>
    8e3c:	add	ip, sp, #24
    8e40:	add	r2, sp, #23
    8e44:	sub	r3, r5, #-536870911	; 0xe0000001
    8e48:	ldr	r1, [sp, #8]
    8e4c:	add	r3, r1, r3, lsl #3
    8e50:	sub	r8, r8, #1
    8e54:	add	ip, ip, r8
    8e58:	ldrsb	r0, [r2, #1]!
    8e5c:	asr	r1, r0, #31
    8e60:	strd	r0, [r3, #8]!
    8e64:	cmp	ip, r2
    8e68:	bne	8e58 <ReadInt64Data+0x10c4>
    8e6c:	b	8db4 <ReadInt64Data+0x1020>
    8e70:	cmp	r8, #256	; 0x100
    8e74:	ble	8f48 <ReadInt64Data+0x11b4>
    8e78:	sub	fp, r8, #256	; 0x100
    8e7c:	cmp	fp, #0
    8e80:	movle	r5, #0
    8e84:	movle	r9, r5
    8e88:	ble	8ee8 <ReadInt64Data+0x1154>
    8e8c:	ldr	r3, [sp, #8]
    8e90:	sub	r6, r3, #8
    8e94:	mov	r5, #0
    8e98:	mov	r9, r5
    8e9c:	add	r7, sp, #24
    8ea0:	add	r4, r7, #255	; 0xff
    8ea4:	ldr	r3, [sl]
    8ea8:	mov	r2, #256	; 0x100
    8eac:	ldr	r1, [sp, #4]
    8eb0:	mov	r0, r7
    8eb4:	bl	1588 <fread@plt>
    8eb8:	add	r9, r9, r0
    8ebc:	sub	r3, r7, #1
    8ec0:	mov	r2, r6
    8ec4:	ldrb	r0, [r3, #1]!
    8ec8:	mov	r1, #0
    8ecc:	strd	r0, [r2, #8]!
    8ed0:	cmp	r4, r3
    8ed4:	bne	8ec4 <ReadInt64Data+0x1130>
    8ed8:	add	r5, r5, #256	; 0x100
    8edc:	add	r6, r6, #2048	; 0x800
    8ee0:	cmp	r5, fp
    8ee4:	blt	8ea4 <ReadInt64Data+0x1110>
    8ee8:	cmp	r8, r5
    8eec:	ble	8db4 <ReadInt64Data+0x1020>
    8ef0:	sub	r8, r8, r5
    8ef4:	ldr	r3, [sl]
    8ef8:	mov	r2, r8
    8efc:	ldr	r1, [sp, #4]
    8f00:	add	r0, sp, #24
    8f04:	bl	1588 <fread@plt>
    8f08:	add	r9, r9, r0
    8f0c:	cmp	r8, #0
    8f10:	ble	8db4 <ReadInt64Data+0x1020>
    8f14:	add	ip, sp, #24
    8f18:	add	r2, sp, #23
    8f1c:	sub	r3, r5, #-536870911	; 0xe0000001
    8f20:	ldr	r1, [sp, #8]
    8f24:	add	r3, r1, r3, lsl #3
    8f28:	sub	r8, r8, #1
    8f2c:	add	ip, ip, r8
    8f30:	ldrb	r0, [r2, #1]!
    8f34:	mov	r1, #0
    8f38:	strd	r0, [r3, #8]!
    8f3c:	cmp	ip, r2
    8f40:	bne	8f30 <ReadInt64Data+0x119c>
    8f44:	b	8db4 <ReadInt64Data+0x1020>
    8f48:	ldr	r3, [sl]
    8f4c:	mov	r2, r8
    8f50:	ldr	r1, [sp, #4]
    8f54:	add	r0, sp, #24
    8f58:	bl	1588 <fread@plt>
    8f5c:	mov	r9, r0
    8f60:	cmp	r8, #0
    8f64:	ble	8db4 <ReadInt64Data+0x1020>
    8f68:	add	ip, sp, #24
    8f6c:	add	r3, sp, #23
    8f70:	ldr	r2, [sp, #8]
    8f74:	sub	r2, r2, #8
    8f78:	sub	r8, r8, #1
    8f7c:	add	ip, ip, r8
    8f80:	ldrb	r0, [r3, #1]!
    8f84:	mov	r1, #0
    8f88:	strd	r0, [r2, #8]!
    8f8c:	cmp	ip, r3
    8f90:	bne	8f80 <ReadInt64Data+0x11ec>
    8f94:	b	8db4 <ReadInt64Data+0x1020>
    8f98:	cmp	r4, #12
    8f9c:	beq	90a0 <ReadInt64Data+0x130c>
    8fa0:	cmp	r4, #13
    8fa4:	movne	r9, #0
    8fa8:	bne	8db4 <ReadInt64Data+0x1020>
    8fac:	ldr	r9, [sl, #20]
    8fb0:	cmp	r9, #0
    8fb4:	beq	9344 <ReadInt64Data+0x15b0>
    8fb8:	cmp	r8, #256	; 0x100
    8fbc:	ble	92f8 <ReadInt64Data+0x1564>
    8fc0:	sub	r3, r8, #256	; 0x100
    8fc4:	str	r3, [sp, #12]
    8fc8:	cmp	r3, #0
    8fcc:	movle	r7, #0
    8fd0:	movle	r9, r7
    8fd4:	ble	9044 <ReadInt64Data+0x12b0>
    8fd8:	ldr	r3, [sp, #8]
    8fdc:	sub	fp, r3, #8
    8fe0:	mov	r7, #0
    8fe4:	mov	r9, r7
    8fe8:	add	r3, sp, #24
    8fec:	str	r3, [sp, #16]
    8ff0:	ldr	r3, [sl]
    8ff4:	mov	r2, #256	; 0x100
    8ff8:	ldr	r1, [sp, #4]
    8ffc:	ldr	r4, [sp, #16]
    9000:	mov	r0, r4
    9004:	bl	1588 <fread@plt>
    9008:	add	r9, r9, r0
    900c:	add	r6, sp, #2064	; 0x810
    9010:	add	r6, r6, #8
    9014:	mov	r5, fp
    9018:	mov	r0, r4
    901c:	bl	1984 <Mat_uint64Swap>
    9020:	strd	r0, [r5, #8]!
    9024:	add	r4, r4, #8
    9028:	cmp	r4, r6
    902c:	bne	9018 <ReadInt64Data+0x1284>
    9030:	add	r7, r7, #256	; 0x100
    9034:	add	fp, fp, #2048	; 0x800
    9038:	ldr	r3, [sp, #12]
    903c:	cmp	r7, r3
    9040:	blt	8ff0 <ReadInt64Data+0x125c>
    9044:	cmp	r8, r7
    9048:	ble	8db4 <ReadInt64Data+0x1020>
    904c:	sub	r8, r8, r7
    9050:	ldr	r3, [sl]
    9054:	mov	r2, r8
    9058:	ldr	r1, [sp, #4]
    905c:	add	r0, sp, #24
    9060:	bl	1588 <fread@plt>
    9064:	add	r9, r9, r0
    9068:	cmp	r8, #0
    906c:	ble	8db4 <ReadInt64Data+0x1020>
    9070:	add	r5, sp, #24
    9074:	ldr	r3, [sp, #8]
    9078:	add	r7, r3, r7, lsl #3
    907c:	mov	r4, #0
    9080:	mov	r0, r5
    9084:	bl	1984 <Mat_uint64Swap>
    9088:	strd	r0, [r7], #8
    908c:	add	r4, r4, #1
    9090:	add	r5, r5, #8
    9094:	cmp	r8, r4
    9098:	bne	9080 <ReadInt64Data+0x12ec>
    909c:	b	8db4 <ReadInt64Data+0x1020>
    90a0:	ldr	r9, [sl, #20]
    90a4:	cmp	r9, #0
    90a8:	beq	91e0 <ReadInt64Data+0x144c>
    90ac:	cmp	r8, #256	; 0x100
    90b0:	ble	9194 <ReadInt64Data+0x1400>
    90b4:	sub	r3, r8, #256	; 0x100
    90b8:	str	r3, [sp, #12]
    90bc:	cmp	r3, #0
    90c0:	movle	r7, #0
    90c4:	movle	r9, r7
    90c8:	ble	9138 <ReadInt64Data+0x13a4>
    90cc:	ldr	r3, [sp, #8]
    90d0:	sub	fp, r3, #8
    90d4:	mov	r7, #0
    90d8:	mov	r9, r7
    90dc:	add	r3, sp, #24
    90e0:	str	r3, [sp, #16]
    90e4:	ldr	r3, [sl]
    90e8:	mov	r2, #256	; 0x100
    90ec:	ldr	r1, [sp, #4]
    90f0:	ldr	r4, [sp, #16]
    90f4:	mov	r0, r4
    90f8:	bl	1588 <fread@plt>
    90fc:	add	r9, r9, r0
    9100:	add	r6, sp, #2064	; 0x810
    9104:	add	r6, r6, #8
    9108:	mov	r5, fp
    910c:	mov	r0, r4
    9110:	bl	18bc <Mat_int64Swap>
    9114:	strd	r0, [r5, #8]!
    9118:	add	r4, r4, #8
    911c:	cmp	r6, r4
    9120:	bne	910c <ReadInt64Data+0x1378>
    9124:	add	r7, r7, #256	; 0x100
    9128:	add	fp, fp, #2048	; 0x800
    912c:	ldr	r3, [sp, #12]
    9130:	cmp	r7, r3
    9134:	blt	90e4 <ReadInt64Data+0x1350>
    9138:	cmp	r8, r7
    913c:	ble	8db4 <ReadInt64Data+0x1020>
    9140:	sub	r8, r8, r7
    9144:	ldr	r3, [sl]
    9148:	mov	r2, r8
    914c:	ldr	r1, [sp, #4]
    9150:	add	r0, sp, #24
    9154:	bl	1588 <fread@plt>
    9158:	add	r9, r9, r0
    915c:	cmp	r8, #0
    9160:	ble	8db4 <ReadInt64Data+0x1020>
    9164:	add	r5, sp, #24
    9168:	ldr	r3, [sp, #8]
    916c:	add	r7, r3, r7, lsl #3
    9170:	mov	r4, #0
    9174:	mov	r0, r5
    9178:	bl	18bc <Mat_int64Swap>
    917c:	strd	r0, [r7], #8
    9180:	add	r4, r4, #1
    9184:	add	r5, r5, #8
    9188:	cmp	r8, r4
    918c:	bne	9174 <ReadInt64Data+0x13e0>
    9190:	b	8db4 <ReadInt64Data+0x1020>
    9194:	ldr	r3, [sl]
    9198:	mov	r2, r8
    919c:	ldr	r1, [sp, #4]
    91a0:	add	r0, sp, #24
    91a4:	bl	1588 <fread@plt>
    91a8:	mov	r9, r0
    91ac:	cmp	r8, #0
    91b0:	ble	8db4 <ReadInt64Data+0x1020>
    91b4:	add	r5, sp, #24
    91b8:	ldr	r3, [sp, #8]
    91bc:	mov	r4, r3
    91c0:	add	r8, r3, r8, lsl #3
    91c4:	mov	r0, r5
    91c8:	bl	18bc <Mat_int64Swap>
    91cc:	strd	r0, [r4], #8
    91d0:	add	r5, r5, #8
    91d4:	cmp	r8, r4
    91d8:	bne	91c4 <ReadInt64Data+0x1430>
    91dc:	b	8db4 <ReadInt64Data+0x1020>
    91e0:	cmp	r8, #256	; 0x100
    91e4:	ble	92ac <ReadInt64Data+0x1518>
    91e8:	sub	r7, r8, #256	; 0x100
    91ec:	cmp	r7, #0
    91f0:	movle	r5, r9
    91f4:	ble	924c <ReadInt64Data+0x14b8>
    91f8:	ldr	r3, [sp, #8]
    91fc:	sub	r6, r3, #8
    9200:	mov	r5, r9
    9204:	add	fp, sp, #24
    9208:	add	r4, sp, #2064	; 0x810
    920c:	ldr	r3, [sl]
    9210:	mov	r2, #256	; 0x100
    9214:	ldr	r1, [sp, #4]
    9218:	mov	r0, fp
    921c:	bl	1588 <fread@plt>
    9220:	add	r9, r9, r0
    9224:	sub	r3, fp, #8
    9228:	mov	r2, r6
    922c:	ldrd	r0, [r3, #8]!
    9230:	strd	r0, [r2, #8]!
    9234:	cmp	r3, r4
    9238:	bne	922c <ReadInt64Data+0x1498>
    923c:	add	r5, r5, #256	; 0x100
    9240:	add	r6, r6, #2048	; 0x800
    9244:	cmp	r5, r7
    9248:	blt	920c <ReadInt64Data+0x1478>
    924c:	cmp	r8, r5
    9250:	ble	8db4 <ReadInt64Data+0x1020>
    9254:	sub	r8, r8, r5
    9258:	ldr	r3, [sl]
    925c:	mov	r2, r8
    9260:	ldr	r1, [sp, #4]
    9264:	add	r0, sp, #24
    9268:	bl	1588 <fread@plt>
    926c:	add	r9, r9, r0
    9270:	cmp	r8, #0
    9274:	ble	8db4 <ReadInt64Data+0x1020>
    9278:	add	r1, sp, #24
    927c:	add	r2, sp, #16
    9280:	sub	r3, r5, #-536870911	; 0xe0000001
    9284:	ldr	r0, [sp, #8]
    9288:	add	r3, r0, r3, lsl #3
    928c:	sub	r8, r8, #-536870911	; 0xe0000001
    9290:	add	r1, r1, r8, lsl #3
    9294:	mov	ip, r1
    9298:	ldrd	r0, [r2, #8]!
    929c:	strd	r0, [r3, #8]!
    92a0:	cmp	r2, ip
    92a4:	bne	9298 <ReadInt64Data+0x1504>
    92a8:	b	8db4 <ReadInt64Data+0x1020>
    92ac:	ldr	r3, [sl]
    92b0:	mov	r2, r8
    92b4:	ldr	r1, [sp, #4]
    92b8:	add	r0, sp, #24
    92bc:	bl	1588 <fread@plt>
    92c0:	mov	r9, r0
    92c4:	cmp	r8, #0
    92c8:	ble	8db4 <ReadInt64Data+0x1020>
    92cc:	add	ip, sp, #24
    92d0:	add	r3, sp, #16
    92d4:	ldr	r2, [sp, #8]
    92d8:	sub	r2, r2, #8
    92dc:	sub	r8, r8, #-536870911	; 0xe0000001
    92e0:	add	ip, ip, r8, lsl #3
    92e4:	ldrd	r0, [r3, #8]!
    92e8:	strd	r0, [r2, #8]!
    92ec:	cmp	ip, r3
    92f0:	bne	92e4 <ReadInt64Data+0x1550>
    92f4:	b	8db4 <ReadInt64Data+0x1020>
    92f8:	ldr	r3, [sl]
    92fc:	mov	r2, r8
    9300:	ldr	r1, [sp, #4]
    9304:	add	r0, sp, #24
    9308:	bl	1588 <fread@plt>
    930c:	mov	r9, r0
    9310:	cmp	r8, #0
    9314:	ble	8db4 <ReadInt64Data+0x1020>
    9318:	add	r5, sp, #24
    931c:	ldr	r3, [sp, #8]
    9320:	mov	r4, r3
    9324:	add	r8, r3, r8, lsl #3
    9328:	mov	r0, r5
    932c:	bl	1984 <Mat_uint64Swap>
    9330:	strd	r0, [r4], #8
    9334:	add	r5, r5, #8
    9338:	cmp	r8, r4
    933c:	bne	9328 <ReadInt64Data+0x1594>
    9340:	b	8db4 <ReadInt64Data+0x1020>
    9344:	cmp	r8, #256	; 0x100
    9348:	ble	9410 <ReadInt64Data+0x167c>
    934c:	sub	r7, r8, #256	; 0x100
    9350:	cmp	r7, #0
    9354:	movle	r5, r9
    9358:	ble	93b0 <ReadInt64Data+0x161c>
    935c:	ldr	r3, [sp, #8]
    9360:	sub	r6, r3, #8
    9364:	mov	r5, r9
    9368:	add	fp, sp, #24
    936c:	add	r4, sp, #2064	; 0x810
    9370:	ldr	r3, [sl]
    9374:	mov	r2, #256	; 0x100
    9378:	ldr	r1, [sp, #4]
    937c:	mov	r0, fp
    9380:	bl	1588 <fread@plt>
    9384:	add	r9, r9, r0
    9388:	sub	r3, fp, #8
    938c:	mov	r2, r6
    9390:	ldrd	r0, [r3, #8]!
    9394:	strd	r0, [r2, #8]!
    9398:	cmp	r4, r3
    939c:	bne	9390 <ReadInt64Data+0x15fc>
    93a0:	add	r5, r5, #256	; 0x100
    93a4:	add	r6, r6, #2048	; 0x800
    93a8:	cmp	r5, r7
    93ac:	blt	9370 <ReadInt64Data+0x15dc>
    93b0:	cmp	r8, r5
    93b4:	ble	8db4 <ReadInt64Data+0x1020>
    93b8:	sub	r8, r8, r5
    93bc:	ldr	r3, [sl]
    93c0:	mov	r2, r8
    93c4:	ldr	r1, [sp, #4]
    93c8:	add	r0, sp, #24
    93cc:	bl	1588 <fread@plt>
    93d0:	add	r9, r9, r0
    93d4:	cmp	r8, #0
    93d8:	ble	8db4 <ReadInt64Data+0x1020>
    93dc:	add	r1, sp, #24
    93e0:	add	r2, sp, #16
    93e4:	sub	r3, r5, #-536870911	; 0xe0000001
    93e8:	ldr	r0, [sp, #8]
    93ec:	add	r3, r0, r3, lsl #3
    93f0:	sub	r8, r8, #-536870911	; 0xe0000001
    93f4:	add	r1, r1, r8, lsl #3
    93f8:	mov	ip, r1
    93fc:	ldrd	r0, [r2, #8]!
    9400:	strd	r0, [r3, #8]!
    9404:	cmp	r2, ip
    9408:	bne	93fc <ReadInt64Data+0x1668>
    940c:	b	8db4 <ReadInt64Data+0x1020>
    9410:	ldr	r3, [sl]
    9414:	mov	r2, r8
    9418:	ldr	r1, [sp, #4]
    941c:	add	r0, sp, #24
    9420:	bl	1588 <fread@plt>
    9424:	mov	r9, r0
    9428:	cmp	r8, #0
    942c:	ble	8db4 <ReadInt64Data+0x1020>
    9430:	add	ip, sp, #24
    9434:	add	r3, sp, #16
    9438:	ldr	r2, [sp, #8]
    943c:	sub	r2, r2, #8
    9440:	sub	r8, r8, #-536870911	; 0xe0000001
    9444:	add	ip, ip, r8, lsl #3
    9448:	ldrd	r0, [r3, #8]!
    944c:	strd	r0, [r2, #8]!
    9450:	cmp	r3, ip
    9454:	bne	9448 <ReadInt64Data+0x16b4>
    9458:	b	8db4 <ReadInt64Data+0x1020>
    945c:	mov	r0, #0
    9460:	bx	lr

00009464 <ReadCompressedInt64Data>:
    9464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9468:	sub	sp, sp, #12
    946c:	ldr	r6, [sp, #48]	; 0x30
    9470:	mov	r9, r2
    9474:	cmp	r2, #0
    9478:	cmpne	r1, #0
    947c:	moveq	r2, #1
    9480:	movne	r2, #0
    9484:	cmp	r0, #0
    9488:	orreq	r2, r2, #1
    948c:	cmp	r2, #0
    9490:	movne	r0, #0
    9494:	bne	9528 <ReadCompressedInt64Data+0xc4>
    9498:	mov	r8, r1
    949c:	mov	r5, r0
    94a0:	mov	r7, r3
    94a4:	mov	r0, r3
    94a8:	bl	1600 <Mat_SizeOf@plt>
    94ac:	mov	r4, r0
    94b0:	sub	r3, r7, #1
    94b4:	cmp	r3, #8
    94b8:	addls	pc, pc, r3, lsl #2
    94bc:	b	9904 <ReadCompressedInt64Data+0x4a0>
    94c0:	b	9530 <ReadCompressedInt64Data+0xcc>
    94c4:	b	94e4 <ReadCompressedInt64Data+0x80>
    94c8:	b	97d4 <ReadCompressedInt64Data+0x370>
    94cc:	b	986c <ReadCompressedInt64Data+0x408>
    94d0:	b	96a4 <ReadCompressedInt64Data+0x240>
    94d4:	b	9738 <ReadCompressedInt64Data+0x2d4>
    94d8:	b	960c <ReadCompressedInt64Data+0x1a8>
    94dc:	b	9904 <ReadCompressedInt64Data+0x4a0>
    94e0:	b	9574 <ReadCompressedInt64Data+0x110>
    94e4:	cmp	r6, #0
    94e8:	subgt	r9, r9, #8
    94ec:	movgt	r7, #0
    94f0:	movgt	sl, sp
    94f4:	ble	9524 <ReadCompressedInt64Data+0xc0>
    94f8:	mov	r3, r4
    94fc:	mov	r2, sl
    9500:	mov	r1, r8
    9504:	mov	r0, r5
    9508:	bl	3418 <InflateData>
    950c:	ldrb	r2, [sp]
    9510:	mov	r3, #0
    9514:	strd	r2, [r9, #8]!
    9518:	add	r7, r7, #1
    951c:	cmp	r6, r7
    9520:	bne	94f8 <ReadCompressedInt64Data+0x94>
    9524:	mul	r0, r4, r6
    9528:	add	sp, sp, #12
    952c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9530:	cmp	r6, #0
    9534:	subgt	r9, r9, #8
    9538:	movgt	r7, #0
    953c:	movgt	sl, sp
    9540:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9544:	mov	r3, r4
    9548:	mov	r2, sl
    954c:	mov	r1, r8
    9550:	mov	r0, r5
    9554:	bl	3418 <InflateData>
    9558:	ldrsb	r2, [sp]
    955c:	asr	r3, r2, #31
    9560:	strd	r2, [r9, #8]!
    9564:	add	r7, r7, #1
    9568:	cmp	r6, r7
    956c:	bne	9544 <ReadCompressedInt64Data+0xe0>
    9570:	b	9524 <ReadCompressedInt64Data+0xc0>
    9574:	ldr	r7, [r5, #20]
    9578:	cmp	r7, #0
    957c:	bne	95c0 <ReadCompressedInt64Data+0x15c>
    9580:	cmp	r6, #0
    9584:	subgt	r9, r9, #8
    9588:	movgt	sl, sp
    958c:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9590:	mov	r3, r4
    9594:	mov	r2, sl
    9598:	mov	r1, r8
    959c:	mov	r0, r5
    95a0:	bl	3418 <InflateData>
    95a4:	ldrd	r0, [sp]
    95a8:	bl	51e4c <__aeabi_d2lz>
    95ac:	strd	r0, [r9, #8]!
    95b0:	add	r7, r7, #1
    95b4:	cmp	r6, r7
    95b8:	bne	9590 <ReadCompressedInt64Data+0x12c>
    95bc:	b	9524 <ReadCompressedInt64Data+0xc0>
    95c0:	cmp	r6, #0
    95c4:	ble	9524 <ReadCompressedInt64Data+0xc0>
    95c8:	sub	r9, r9, #8
    95cc:	mov	r7, #0
    95d0:	mov	sl, sp
    95d4:	mov	r3, r4
    95d8:	mov	r2, sl
    95dc:	mov	r1, r8
    95e0:	mov	r0, r5
    95e4:	bl	3418 <InflateData>
    95e8:	mov	r0, sl
    95ec:	bl	1b94 <Mat_doubleSwap>
    95f0:	vmov	r0, r1, d0
    95f4:	bl	51e4c <__aeabi_d2lz>
    95f8:	strd	r0, [r9, #8]!
    95fc:	add	r7, r7, #1
    9600:	cmp	r6, r7
    9604:	bne	95d4 <ReadCompressedInt64Data+0x170>
    9608:	b	9524 <ReadCompressedInt64Data+0xc0>
    960c:	ldr	r7, [r5, #20]
    9610:	cmp	r7, #0
    9614:	bne	9658 <ReadCompressedInt64Data+0x1f4>
    9618:	cmp	r6, #0
    961c:	subgt	r9, r9, #8
    9620:	movgt	sl, sp
    9624:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9628:	mov	r3, r4
    962c:	mov	r2, sl
    9630:	mov	r1, r8
    9634:	mov	r0, r5
    9638:	bl	3418 <InflateData>
    963c:	ldr	r0, [sp]
    9640:	bl	51e20 <__aeabi_f2lz>
    9644:	strd	r0, [r9, #8]!
    9648:	add	r7, r7, #1
    964c:	cmp	r6, r7
    9650:	bne	9628 <ReadCompressedInt64Data+0x1c4>
    9654:	b	9524 <ReadCompressedInt64Data+0xc0>
    9658:	cmp	r6, #0
    965c:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9660:	sub	r9, r9, #8
    9664:	mov	r7, #0
    9668:	mov	sl, sp
    966c:	mov	r3, r4
    9670:	mov	r2, sl
    9674:	mov	r1, r8
    9678:	mov	r0, r5
    967c:	bl	3418 <InflateData>
    9680:	mov	r0, sl
    9684:	bl	1b38 <Mat_floatSwap>
    9688:	vmov	r0, s0
    968c:	bl	51e20 <__aeabi_f2lz>
    9690:	strd	r0, [r9, #8]!
    9694:	add	r7, r7, #1
    9698:	cmp	r6, r7
    969c:	bne	966c <ReadCompressedInt64Data+0x208>
    96a0:	b	9524 <ReadCompressedInt64Data+0xc0>
    96a4:	ldr	r7, [r5, #20]
    96a8:	cmp	r7, #0
    96ac:	bne	96f0 <ReadCompressedInt64Data+0x28c>
    96b0:	cmp	r6, #0
    96b4:	subgt	r9, r9, #8
    96b8:	movgt	sl, sp
    96bc:	ble	9524 <ReadCompressedInt64Data+0xc0>
    96c0:	mov	r3, r4
    96c4:	mov	r2, sl
    96c8:	mov	r1, r8
    96cc:	mov	r0, r5
    96d0:	bl	3418 <InflateData>
    96d4:	ldr	r2, [sp]
    96d8:	asr	r3, r2, #31
    96dc:	strd	r2, [r9, #8]!
    96e0:	add	r7, r7, #1
    96e4:	cmp	r6, r7
    96e8:	bne	96c0 <ReadCompressedInt64Data+0x25c>
    96ec:	b	9524 <ReadCompressedInt64Data+0xc0>
    96f0:	cmp	r6, #0
    96f4:	ble	9524 <ReadCompressedInt64Data+0xc0>
    96f8:	sub	r9, r9, #8
    96fc:	mov	r7, #0
    9700:	mov	sl, sp
    9704:	mov	r3, r4
    9708:	mov	r2, sl
    970c:	mov	r1, r8
    9710:	mov	r0, r5
    9714:	bl	3418 <InflateData>
    9718:	mov	r0, sl
    971c:	bl	1a20 <Mat_int32Swap>
    9720:	asr	r1, r0, #31
    9724:	strd	r0, [r9, #8]!
    9728:	add	r7, r7, #1
    972c:	cmp	r6, r7
    9730:	bne	9704 <ReadCompressedInt64Data+0x2a0>
    9734:	b	9524 <ReadCompressedInt64Data+0xc0>
    9738:	ldr	r7, [r5, #20]
    973c:	cmp	r7, #0
    9740:	bne	9788 <ReadCompressedInt64Data+0x324>
    9744:	cmp	r6, #0
    9748:	subgt	r9, r9, #8
    974c:	movgt	fp, sp
    9750:	movgt	sl, #0
    9754:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9758:	mov	r3, r4
    975c:	mov	r2, fp
    9760:	mov	r1, r8
    9764:	mov	r0, r5
    9768:	bl	3418 <InflateData>
    976c:	ldr	r3, [sp]
    9770:	str	r3, [r9, #8]!
    9774:	str	sl, [r9, #4]
    9778:	add	r7, r7, #1
    977c:	cmp	r6, r7
    9780:	bne	9758 <ReadCompressedInt64Data+0x2f4>
    9784:	b	9524 <ReadCompressedInt64Data+0xc0>
    9788:	cmp	r6, #0
    978c:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9790:	sub	r9, r9, #8
    9794:	mov	r7, #0
    9798:	mov	sl, sp
    979c:	mov	fp, r7
    97a0:	mov	r3, r4
    97a4:	mov	r2, sl
    97a8:	mov	r1, r8
    97ac:	mov	r0, r5
    97b0:	bl	3418 <InflateData>
    97b4:	mov	r0, sl
    97b8:	bl	1a88 <Mat_uint32Swap>
    97bc:	str	r0, [r9, #8]!
    97c0:	str	fp, [r9, #4]
    97c4:	add	r7, r7, #1
    97c8:	cmp	r6, r7
    97cc:	bne	97a0 <ReadCompressedInt64Data+0x33c>
    97d0:	b	9524 <ReadCompressedInt64Data+0xc0>
    97d4:	ldr	r7, [r5, #20]
    97d8:	cmp	r7, #0
    97dc:	bne	9820 <ReadCompressedInt64Data+0x3bc>
    97e0:	cmp	r6, #0
    97e4:	subgt	r9, r9, #8
    97e8:	movgt	sl, sp
    97ec:	ble	9524 <ReadCompressedInt64Data+0xc0>
    97f0:	mov	r3, r4
    97f4:	mov	r2, sl
    97f8:	mov	r1, r8
    97fc:	mov	r0, r5
    9800:	bl	3418 <InflateData>
    9804:	ldrsh	r2, [sp]
    9808:	asr	r3, r2, #31
    980c:	strd	r2, [r9, #8]!
    9810:	add	r7, r7, #1
    9814:	cmp	r6, r7
    9818:	bne	97f0 <ReadCompressedInt64Data+0x38c>
    981c:	b	9524 <ReadCompressedInt64Data+0xc0>
    9820:	cmp	r6, #0
    9824:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9828:	sub	r9, r9, #8
    982c:	mov	r7, #0
    9830:	mov	sl, sp
    9834:	mov	r3, r4
    9838:	mov	r2, sl
    983c:	mov	r1, r8
    9840:	mov	r0, r5
    9844:	bl	3418 <InflateData>
    9848:	mov	r0, sl
    984c:	bl	1ae4 <Mat_int16Swap>
    9850:	sxth	r0, r0
    9854:	asr	r1, r0, #31
    9858:	strd	r0, [r9, #8]!
    985c:	add	r7, r7, #1
    9860:	cmp	r6, r7
    9864:	bne	9834 <ReadCompressedInt64Data+0x3d0>
    9868:	b	9524 <ReadCompressedInt64Data+0xc0>
    986c:	ldr	r7, [r5, #20]
    9870:	cmp	r7, #0
    9874:	bne	98b8 <ReadCompressedInt64Data+0x454>
    9878:	cmp	r6, #0
    987c:	subgt	r9, r9, #8
    9880:	movgt	sl, sp
    9884:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9888:	mov	r3, r4
    988c:	mov	r2, sl
    9890:	mov	r1, r8
    9894:	mov	r0, r5
    9898:	bl	3418 <InflateData>
    989c:	ldrh	r2, [sp]
    98a0:	mov	r3, #0
    98a4:	strd	r2, [r9, #8]!
    98a8:	add	r7, r7, #1
    98ac:	cmp	r6, r7
    98b0:	bne	9888 <ReadCompressedInt64Data+0x424>
    98b4:	b	9524 <ReadCompressedInt64Data+0xc0>
    98b8:	cmp	r6, #0
    98bc:	ble	9524 <ReadCompressedInt64Data+0xc0>
    98c0:	sub	r9, r9, #8
    98c4:	mov	r7, #0
    98c8:	mov	sl, sp
    98cc:	mov	r3, r4
    98d0:	mov	r2, sl
    98d4:	mov	r1, r8
    98d8:	mov	r0, r5
    98dc:	bl	3418 <InflateData>
    98e0:	mov	r0, sl
    98e4:	bl	1b1c <Mat_uint16Swap>
    98e8:	uxth	r0, r0
    98ec:	mov	r1, #0
    98f0:	strd	r0, [r9, #8]!
    98f4:	add	r7, r7, #1
    98f8:	cmp	r6, r7
    98fc:	bne	98cc <ReadCompressedInt64Data+0x468>
    9900:	b	9524 <ReadCompressedInt64Data+0xc0>
    9904:	cmp	r7, #12
    9908:	beq	995c <ReadCompressedInt64Data+0x4f8>
    990c:	cmp	r7, #13
    9910:	bne	9524 <ReadCompressedInt64Data+0xc0>
    9914:	ldr	r7, [r5, #20]
    9918:	cmp	r7, #0
    991c:	bne	99e8 <ReadCompressedInt64Data+0x584>
    9920:	cmp	r6, #0
    9924:	subgt	r9, r9, #8
    9928:	movgt	sl, sp
    992c:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9930:	mov	r3, r4
    9934:	mov	r2, sl
    9938:	mov	r1, r8
    993c:	mov	r0, r5
    9940:	bl	3418 <InflateData>
    9944:	ldrd	r2, [sp]
    9948:	strd	r2, [r9, #8]!
    994c:	add	r7, r7, #1
    9950:	cmp	r6, r7
    9954:	bne	9930 <ReadCompressedInt64Data+0x4cc>
    9958:	b	9524 <ReadCompressedInt64Data+0xc0>
    995c:	ldr	r7, [r5, #20]
    9960:	cmp	r7, #0
    9964:	bne	99a4 <ReadCompressedInt64Data+0x540>
    9968:	cmp	r6, #0
    996c:	subgt	r9, r9, #8
    9970:	movgt	sl, sp
    9974:	ble	9524 <ReadCompressedInt64Data+0xc0>
    9978:	mov	r3, r4
    997c:	mov	r2, sl
    9980:	mov	r1, r8
    9984:	mov	r0, r5
    9988:	bl	3418 <InflateData>
    998c:	ldrd	r2, [sp]
    9990:	strd	r2, [r9, #8]!
    9994:	add	r7, r7, #1
    9998:	cmp	r6, r7
    999c:	bne	9978 <ReadCompressedInt64Data+0x514>
    99a0:	b	9524 <ReadCompressedInt64Data+0xc0>
    99a4:	cmp	r6, #0
    99a8:	ble	9524 <ReadCompressedInt64Data+0xc0>
    99ac:	sub	r9, r9, #8
    99b0:	mov	r7, #0
    99b4:	mov	sl, sp
    99b8:	mov	r3, r4
    99bc:	mov	r2, sl
    99c0:	mov	r1, r8
    99c4:	mov	r0, r5
    99c8:	bl	3418 <InflateData>
    99cc:	mov	r0, sl
    99d0:	bl	18bc <Mat_int64Swap>
    99d4:	strd	r0, [r9, #8]!
    99d8:	add	r7, r7, #1
    99dc:	cmp	r6, r7
    99e0:	bne	99b8 <ReadCompressedInt64Data+0x554>
    99e4:	b	9524 <ReadCompressedInt64Data+0xc0>
    99e8:	cmp	r6, #0
    99ec:	ble	9524 <ReadCompressedInt64Data+0xc0>
    99f0:	sub	r9, r9, #8
    99f4:	mov	r7, #0
    99f8:	mov	sl, sp
    99fc:	mov	r3, r4
    9a00:	mov	r2, sl
    9a04:	mov	r1, r8
    9a08:	mov	r0, r5
    9a0c:	bl	3418 <InflateData>
    9a10:	mov	r0, sl
    9a14:	bl	1984 <Mat_uint64Swap>
    9a18:	strd	r0, [r9, #8]!
    9a1c:	add	r7, r7, #1
    9a20:	cmp	r6, r7
    9a24:	bne	99fc <ReadCompressedInt64Data+0x598>
    9a28:	b	9524 <ReadCompressedInt64Data+0xc0>

00009a2c <ReadUInt64Data>:
    9a2c:	cmp	r1, #0
    9a30:	cmpne	r0, #0
    9a34:	beq	b0f4 <ReadUInt64Data+0x16c8>
    9a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9a3c:	sub	sp, sp, #2064	; 0x810
    9a40:	sub	sp, sp, #12
    9a44:	mov	sl, r0
    9a48:	mov	ip, r1
    9a4c:	ldr	r1, [r0]
    9a50:	cmp	r1, #0
    9a54:	moveq	r0, #0
    9a58:	beq	aa54 <ReadUInt64Data+0x1028>
    9a5c:	str	ip, [sp, #8]
    9a60:	mov	r8, r3
    9a64:	mov	r4, r2
    9a68:	mov	r0, r2
    9a6c:	bl	1600 <Mat_SizeOf@plt>
    9a70:	str	r0, [sp, #4]
    9a74:	sub	r3, r4, #1
    9a78:	cmp	r3, #8
    9a7c:	addls	pc, pc, r3, lsl #2
    9a80:	b	ac30 <ReadUInt64Data+0x1204>
    9a84:	b	a9cc <ReadUInt64Data+0xfa0>
    9a88:	b	ab08 <ReadUInt64Data+0x10dc>
    9a8c:	b	a4d4 <ReadUInt64Data+0xaa8>
    9a90:	b	a750 <ReadUInt64Data+0xd24>
    9a94:	b	9fb8 <ReadUInt64Data+0x58c>
    9a98:	b	a22c <ReadUInt64Data+0x800>
    9a9c:	b	9d30 <ReadUInt64Data+0x304>
    9aa0:	b	ac30 <ReadUInt64Data+0x1204>
    9aa4:	b	9aa8 <ReadUInt64Data+0x7c>
    9aa8:	ldr	r9, [sl, #20]
    9aac:	cmp	r9, #0
    9ab0:	beq	9c08 <ReadUInt64Data+0x1dc>
    9ab4:	cmp	r8, #256	; 0x100
    9ab8:	ble	9bb4 <ReadUInt64Data+0x188>
    9abc:	sub	r3, r8, #256	; 0x100
    9ac0:	mov	r2, r3
    9ac4:	cmp	r3, #0
    9ac8:	movle	r7, #0
    9acc:	movle	r9, r7
    9ad0:	ble	9b50 <ReadUInt64Data+0x124>
    9ad4:	ldr	r3, [sp, #8]
    9ad8:	sub	fp, r3, #8
    9adc:	mov	r7, #0
    9ae0:	mov	r9, r7
    9ae4:	add	r3, sp, #24
    9ae8:	str	r3, [sp, #12]
    9aec:	str	r8, [sp, #16]
    9af0:	mov	r8, r2
    9af4:	ldr	r3, [sl]
    9af8:	mov	r2, #256	; 0x100
    9afc:	ldr	r1, [sp, #4]
    9b00:	ldr	r4, [sp, #12]
    9b04:	mov	r0, r4
    9b08:	bl	1588 <fread@plt>
    9b0c:	add	r9, r9, r0
    9b10:	add	r6, sp, #2064	; 0x810
    9b14:	add	r6, r6, #8
    9b18:	mov	r5, fp
    9b1c:	mov	r0, r4
    9b20:	bl	1b94 <Mat_doubleSwap>
    9b24:	vmov	r0, r1, d0
    9b28:	bl	51ec0 <__aeabi_d2ulz>
    9b2c:	strd	r0, [r5, #8]!
    9b30:	add	r4, r4, #8
    9b34:	cmp	r4, r6
    9b38:	bne	9b1c <ReadUInt64Data+0xf0>
    9b3c:	add	r7, r7, #256	; 0x100
    9b40:	add	fp, fp, #2048	; 0x800
    9b44:	cmp	r7, r8
    9b48:	blt	9af4 <ReadUInt64Data+0xc8>
    9b4c:	ldr	r8, [sp, #16]
    9b50:	cmp	r8, r7
    9b54:	ble	aa4c <ReadUInt64Data+0x1020>
    9b58:	sub	r8, r8, r7
    9b5c:	ldr	r3, [sl]
    9b60:	mov	r2, r8
    9b64:	ldr	r1, [sp, #4]
    9b68:	add	r0, sp, #24
    9b6c:	bl	1588 <fread@plt>
    9b70:	add	r9, r9, r0
    9b74:	cmp	r8, #0
    9b78:	ble	aa4c <ReadUInt64Data+0x1020>
    9b7c:	add	r5, sp, #24
    9b80:	ldr	r3, [sp, #8]
    9b84:	add	r7, r3, r7, lsl #3
    9b88:	mov	r4, #0
    9b8c:	mov	r0, r5
    9b90:	bl	1b94 <Mat_doubleSwap>
    9b94:	vmov	r0, r1, d0
    9b98:	bl	51ec0 <__aeabi_d2ulz>
    9b9c:	strd	r0, [r7], #8
    9ba0:	add	r4, r4, #1
    9ba4:	add	r5, r5, #8
    9ba8:	cmp	r8, r4
    9bac:	bne	9b8c <ReadUInt64Data+0x160>
    9bb0:	b	aa4c <ReadUInt64Data+0x1020>
    9bb4:	ldr	r3, [sl]
    9bb8:	mov	r2, r8
    9bbc:	ldr	r1, [sp, #4]
    9bc0:	add	r0, sp, #24
    9bc4:	bl	1588 <fread@plt>
    9bc8:	mov	r9, r0
    9bcc:	cmp	r8, #0
    9bd0:	ble	aa4c <ReadUInt64Data+0x1020>
    9bd4:	add	r5, sp, #24
    9bd8:	ldr	r3, [sp, #8]
    9bdc:	mov	r4, r3
    9be0:	add	r8, r3, r8, lsl #3
    9be4:	mov	r0, r5
    9be8:	bl	1b94 <Mat_doubleSwap>
    9bec:	vmov	r0, r1, d0
    9bf0:	bl	51ec0 <__aeabi_d2ulz>
    9bf4:	strd	r0, [r4], #8
    9bf8:	add	r5, r5, #8
    9bfc:	cmp	r4, r8
    9c00:	bne	9be4 <ReadUInt64Data+0x1b8>
    9c04:	b	aa4c <ReadUInt64Data+0x1020>
    9c08:	cmp	r8, #256	; 0x100
    9c0c:	ble	9ce8 <ReadUInt64Data+0x2bc>
    9c10:	sub	r3, r8, #256	; 0x100
    9c14:	mov	r2, r3
    9c18:	cmp	r3, #0
    9c1c:	movle	r7, r9
    9c20:	ble	9c90 <ReadUInt64Data+0x264>
    9c24:	ldr	r3, [sp, #8]
    9c28:	sub	fp, r3, #8
    9c2c:	mov	r7, r9
    9c30:	add	r3, sp, #24
    9c34:	str	r3, [sp, #12]
    9c38:	str	r8, [sp, #16]
    9c3c:	mov	r8, r2
    9c40:	ldr	r3, [sl]
    9c44:	mov	r2, #256	; 0x100
    9c48:	ldr	r1, [sp, #4]
    9c4c:	ldr	r4, [sp, #12]
    9c50:	mov	r0, r4
    9c54:	bl	1588 <fread@plt>
    9c58:	add	r9, r9, r0
    9c5c:	add	r6, sp, #2064	; 0x810
    9c60:	add	r6, r6, #8
    9c64:	mov	r5, fp
    9c68:	ldrd	r0, [r4], #8
    9c6c:	bl	51ec0 <__aeabi_d2ulz>
    9c70:	strd	r0, [r5, #8]!
    9c74:	cmp	r4, r6
    9c78:	bne	9c68 <ReadUInt64Data+0x23c>
    9c7c:	add	r7, r7, #256	; 0x100
    9c80:	add	fp, fp, #2048	; 0x800
    9c84:	cmp	r7, r8
    9c88:	blt	9c40 <ReadUInt64Data+0x214>
    9c8c:	ldr	r8, [sp, #16]
    9c90:	cmp	r8, r7
    9c94:	ble	aa4c <ReadUInt64Data+0x1020>
    9c98:	sub	r8, r8, r7
    9c9c:	ldr	r3, [sl]
    9ca0:	mov	r2, r8
    9ca4:	ldr	r1, [sp, #4]
    9ca8:	add	r0, sp, #24
    9cac:	bl	1588 <fread@plt>
    9cb0:	add	r9, r9, r0
    9cb4:	cmp	r8, #0
    9cb8:	ble	aa4c <ReadUInt64Data+0x1020>
    9cbc:	add	r5, sp, #24
    9cc0:	sub	r4, r7, #-536870911	; 0xe0000001
    9cc4:	ldr	r3, [sp, #8]
    9cc8:	add	r4, r3, r4, lsl #3
    9ccc:	add	r8, r5, r8, lsl #3
    9cd0:	ldrd	r0, [r5], #8
    9cd4:	bl	51ec0 <__aeabi_d2ulz>
    9cd8:	strd	r0, [r4, #8]!
    9cdc:	cmp	r5, r8
    9ce0:	bne	9cd0 <ReadUInt64Data+0x2a4>
    9ce4:	b	aa4c <ReadUInt64Data+0x1020>
    9ce8:	ldr	r3, [sl]
    9cec:	mov	r2, r8
    9cf0:	ldr	r1, [sp, #4]
    9cf4:	add	r0, sp, #24
    9cf8:	bl	1588 <fread@plt>
    9cfc:	mov	r9, r0
    9d00:	cmp	r8, #0
    9d04:	ble	aa4c <ReadUInt64Data+0x1020>
    9d08:	add	r4, sp, #24
    9d0c:	ldr	r3, [sp, #8]
    9d10:	sub	r5, r3, #8
    9d14:	add	r8, r4, r8, lsl #3
    9d18:	ldrd	r0, [r4], #8
    9d1c:	bl	51ec0 <__aeabi_d2ulz>
    9d20:	strd	r0, [r5, #8]!
    9d24:	cmp	r4, r8
    9d28:	bne	9d18 <ReadUInt64Data+0x2ec>
    9d2c:	b	aa4c <ReadUInt64Data+0x1020>
    9d30:	ldr	r9, [sl, #20]
    9d34:	cmp	r9, #0
    9d38:	beq	9e90 <ReadUInt64Data+0x464>
    9d3c:	cmp	r8, #256	; 0x100
    9d40:	ble	9e3c <ReadUInt64Data+0x410>
    9d44:	sub	r3, r8, #256	; 0x100
    9d48:	mov	r2, r3
    9d4c:	cmp	r3, #0
    9d50:	movle	r7, #0
    9d54:	movle	r9, r7
    9d58:	ble	9dd8 <ReadUInt64Data+0x3ac>
    9d5c:	ldr	r3, [sp, #8]
    9d60:	sub	fp, r3, #8
    9d64:	mov	r7, #0
    9d68:	mov	r9, r7
    9d6c:	add	r3, sp, #24
    9d70:	str	r3, [sp, #12]
    9d74:	add	r6, sp, #1040	; 0x410
    9d78:	add	r6, r6, #8
    9d7c:	str	r8, [sp, #16]
    9d80:	mov	r8, r2
    9d84:	ldr	r3, [sl]
    9d88:	mov	r2, #256	; 0x100
    9d8c:	ldr	r1, [sp, #4]
    9d90:	ldr	r4, [sp, #12]
    9d94:	mov	r0, r4
    9d98:	bl	1588 <fread@plt>
    9d9c:	add	r9, r9, r0
    9da0:	mov	r5, fp
    9da4:	mov	r0, r4
    9da8:	bl	1b38 <Mat_floatSwap>
    9dac:	vmov	r0, s0
    9db0:	bl	51e78 <__aeabi_f2ulz>
    9db4:	strd	r0, [r5, #8]!
    9db8:	add	r4, r4, #4
    9dbc:	cmp	r4, r6
    9dc0:	bne	9da4 <ReadUInt64Data+0x378>
    9dc4:	add	r7, r7, #256	; 0x100
    9dc8:	add	fp, fp, #2048	; 0x800
    9dcc:	cmp	r7, r8
    9dd0:	blt	9d84 <ReadUInt64Data+0x358>
    9dd4:	ldr	r8, [sp, #16]
    9dd8:	cmp	r8, r7
    9ddc:	ble	aa4c <ReadUInt64Data+0x1020>
    9de0:	sub	r8, r8, r7
    9de4:	ldr	r3, [sl]
    9de8:	mov	r2, r8
    9dec:	ldr	r1, [sp, #4]
    9df0:	add	r0, sp, #24
    9df4:	bl	1588 <fread@plt>
    9df8:	add	r9, r9, r0
    9dfc:	cmp	r8, #0
    9e00:	ble	aa4c <ReadUInt64Data+0x1020>
    9e04:	add	r5, sp, #24
    9e08:	ldr	r3, [sp, #8]
    9e0c:	add	r7, r3, r7, lsl #3
    9e10:	mov	r4, #0
    9e14:	mov	r0, r5
    9e18:	bl	1b38 <Mat_floatSwap>
    9e1c:	vmov	r0, s0
    9e20:	bl	51e78 <__aeabi_f2ulz>
    9e24:	strd	r0, [r7], #8
    9e28:	add	r4, r4, #1
    9e2c:	add	r5, r5, #4
    9e30:	cmp	r8, r4
    9e34:	bne	9e14 <ReadUInt64Data+0x3e8>
    9e38:	b	aa4c <ReadUInt64Data+0x1020>
    9e3c:	ldr	r3, [sl]
    9e40:	mov	r2, r8
    9e44:	ldr	r1, [sp, #4]
    9e48:	add	r0, sp, #24
    9e4c:	bl	1588 <fread@plt>
    9e50:	mov	r9, r0
    9e54:	cmp	r8, #0
    9e58:	ble	aa4c <ReadUInt64Data+0x1020>
    9e5c:	add	r5, sp, #24
    9e60:	ldr	r3, [sp, #8]
    9e64:	mov	r4, r3
    9e68:	add	r8, r3, r8, lsl #3
    9e6c:	mov	r0, r5
    9e70:	bl	1b38 <Mat_floatSwap>
    9e74:	vmov	r0, s0
    9e78:	bl	51e78 <__aeabi_f2ulz>
    9e7c:	strd	r0, [r4], #8
    9e80:	add	r5, r5, #4
    9e84:	cmp	r4, r8
    9e88:	bne	9e6c <ReadUInt64Data+0x440>
    9e8c:	b	aa4c <ReadUInt64Data+0x1020>
    9e90:	cmp	r8, #256	; 0x100
    9e94:	ble	9f70 <ReadUInt64Data+0x544>
    9e98:	sub	r3, r8, #256	; 0x100
    9e9c:	mov	r2, r3
    9ea0:	cmp	r3, #0
    9ea4:	movle	r7, r9
    9ea8:	ble	9f18 <ReadUInt64Data+0x4ec>
    9eac:	ldr	r3, [sp, #8]
    9eb0:	sub	fp, r3, #8
    9eb4:	mov	r7, r9
    9eb8:	add	r3, sp, #24
    9ebc:	str	r3, [sp, #12]
    9ec0:	add	r6, sp, #1040	; 0x410
    9ec4:	add	r6, r6, #8
    9ec8:	str	r8, [sp, #16]
    9ecc:	mov	r8, r2
    9ed0:	ldr	r3, [sl]
    9ed4:	mov	r2, #256	; 0x100
    9ed8:	ldr	r1, [sp, #4]
    9edc:	ldr	r4, [sp, #12]
    9ee0:	mov	r0, r4
    9ee4:	bl	1588 <fread@plt>
    9ee8:	add	r9, r9, r0
    9eec:	mov	r5, fp
    9ef0:	ldr	r0, [r4], #4
    9ef4:	bl	51e78 <__aeabi_f2ulz>
    9ef8:	strd	r0, [r5, #8]!
    9efc:	cmp	r4, r6
    9f00:	bne	9ef0 <ReadUInt64Data+0x4c4>
    9f04:	add	r7, r7, #256	; 0x100
    9f08:	add	fp, fp, #2048	; 0x800
    9f0c:	cmp	r7, r8
    9f10:	blt	9ed0 <ReadUInt64Data+0x4a4>
    9f14:	ldr	r8, [sp, #16]
    9f18:	cmp	r8, r7
    9f1c:	ble	aa4c <ReadUInt64Data+0x1020>
    9f20:	sub	r8, r8, r7
    9f24:	ldr	r3, [sl]
    9f28:	mov	r2, r8
    9f2c:	ldr	r1, [sp, #4]
    9f30:	add	r0, sp, #24
    9f34:	bl	1588 <fread@plt>
    9f38:	add	r9, r9, r0
    9f3c:	cmp	r8, #0
    9f40:	ble	aa4c <ReadUInt64Data+0x1020>
    9f44:	add	r5, sp, #24
    9f48:	sub	r4, r7, #-536870911	; 0xe0000001
    9f4c:	ldr	r3, [sp, #8]
    9f50:	add	r4, r3, r4, lsl #3
    9f54:	add	r8, r5, r8, lsl #2
    9f58:	ldr	r0, [r5], #4
    9f5c:	bl	51e78 <__aeabi_f2ulz>
    9f60:	strd	r0, [r4, #8]!
    9f64:	cmp	r5, r8
    9f68:	bne	9f58 <ReadUInt64Data+0x52c>
    9f6c:	b	aa4c <ReadUInt64Data+0x1020>
    9f70:	ldr	r3, [sl]
    9f74:	mov	r2, r8
    9f78:	ldr	r1, [sp, #4]
    9f7c:	add	r0, sp, #24
    9f80:	bl	1588 <fread@plt>
    9f84:	mov	r9, r0
    9f88:	cmp	r8, #0
    9f8c:	ble	aa4c <ReadUInt64Data+0x1020>
    9f90:	add	r4, sp, #24
    9f94:	ldr	r3, [sp, #8]
    9f98:	sub	r5, r3, #8
    9f9c:	add	r8, r4, r8, lsl #2
    9fa0:	ldr	r0, [r4], #4
    9fa4:	bl	51e78 <__aeabi_f2ulz>
    9fa8:	strd	r0, [r5, #8]!
    9fac:	cmp	r4, r8
    9fb0:	bne	9fa0 <ReadUInt64Data+0x574>
    9fb4:	b	aa4c <ReadUInt64Data+0x1020>
    9fb8:	ldr	r9, [sl, #20]
    9fbc:	cmp	r9, #0
    9fc0:	beq	a10c <ReadUInt64Data+0x6e0>
    9fc4:	cmp	r8, #256	; 0x100
    9fc8:	ble	a0bc <ReadUInt64Data+0x690>
    9fcc:	sub	r3, r8, #256	; 0x100
    9fd0:	mov	r2, r3
    9fd4:	cmp	r3, #0
    9fd8:	movle	r7, #0
    9fdc:	movle	r9, r7
    9fe0:	ble	a05c <ReadUInt64Data+0x630>
    9fe4:	ldr	r3, [sp, #8]
    9fe8:	sub	fp, r3, #8
    9fec:	mov	r7, #0
    9ff0:	mov	r9, r7
    9ff4:	add	r3, sp, #24
    9ff8:	str	r3, [sp, #12]
    9ffc:	add	r6, sp, #1040	; 0x410
    a000:	add	r6, r6, #8
    a004:	str	r8, [sp, #16]
    a008:	mov	r8, r2
    a00c:	ldr	r3, [sl]
    a010:	mov	r2, #256	; 0x100
    a014:	ldr	r1, [sp, #4]
    a018:	ldr	r4, [sp, #12]
    a01c:	mov	r0, r4
    a020:	bl	1588 <fread@plt>
    a024:	add	r9, r9, r0
    a028:	mov	r5, fp
    a02c:	mov	r0, r4
    a030:	bl	1a20 <Mat_int32Swap>
    a034:	asr	r1, r0, #31
    a038:	strd	r0, [r5, #8]!
    a03c:	add	r4, r4, #4
    a040:	cmp	r4, r6
    a044:	bne	a02c <ReadUInt64Data+0x600>
    a048:	add	r7, r7, #256	; 0x100
    a04c:	add	fp, fp, #2048	; 0x800
    a050:	cmp	r7, r8
    a054:	blt	a00c <ReadUInt64Data+0x5e0>
    a058:	ldr	r8, [sp, #16]
    a05c:	cmp	r8, r7
    a060:	ble	aa4c <ReadUInt64Data+0x1020>
    a064:	sub	r8, r8, r7
    a068:	ldr	r3, [sl]
    a06c:	mov	r2, r8
    a070:	ldr	r1, [sp, #4]
    a074:	add	r0, sp, #24
    a078:	bl	1588 <fread@plt>
    a07c:	add	r9, r9, r0
    a080:	cmp	r8, #0
    a084:	ble	aa4c <ReadUInt64Data+0x1020>
    a088:	add	r5, sp, #24
    a08c:	ldr	r3, [sp, #8]
    a090:	add	r7, r3, r7, lsl #3
    a094:	mov	r4, #0
    a098:	mov	r0, r5
    a09c:	bl	1a20 <Mat_int32Swap>
    a0a0:	asr	r1, r0, #31
    a0a4:	strd	r0, [r7], #8
    a0a8:	add	r4, r4, #1
    a0ac:	add	r5, r5, #4
    a0b0:	cmp	r8, r4
    a0b4:	bne	a098 <ReadUInt64Data+0x66c>
    a0b8:	b	aa4c <ReadUInt64Data+0x1020>
    a0bc:	ldr	r3, [sl]
    a0c0:	mov	r2, r8
    a0c4:	ldr	r1, [sp, #4]
    a0c8:	add	r0, sp, #24
    a0cc:	bl	1588 <fread@plt>
    a0d0:	mov	r9, r0
    a0d4:	cmp	r8, #0
    a0d8:	ble	aa4c <ReadUInt64Data+0x1020>
    a0dc:	add	r5, sp, #24
    a0e0:	ldr	r3, [sp, #8]
    a0e4:	mov	r4, r3
    a0e8:	add	r8, r3, r8, lsl #3
    a0ec:	mov	r0, r5
    a0f0:	bl	1a20 <Mat_int32Swap>
    a0f4:	asr	r1, r0, #31
    a0f8:	strd	r0, [r4], #8
    a0fc:	add	r5, r5, #4
    a100:	cmp	r4, r8
    a104:	bne	a0ec <ReadUInt64Data+0x6c0>
    a108:	b	aa4c <ReadUInt64Data+0x1020>
    a10c:	cmp	r8, #256	; 0x100
    a110:	ble	a1dc <ReadUInt64Data+0x7b0>
    a114:	sub	fp, r8, #256	; 0x100
    a118:	cmp	fp, #0
    a11c:	movle	r5, r9
    a120:	ble	a17c <ReadUInt64Data+0x750>
    a124:	ldr	r3, [sp, #8]
    a128:	sub	r6, r3, #8
    a12c:	mov	r5, r9
    a130:	add	r7, sp, #24
    a134:	add	r4, r7, #1020	; 0x3fc
    a138:	ldr	r3, [sl]
    a13c:	mov	r2, #256	; 0x100
    a140:	ldr	r1, [sp, #4]
    a144:	mov	r0, r7
    a148:	bl	1588 <fread@plt>
    a14c:	add	r9, r9, r0
    a150:	sub	r1, r7, #4
    a154:	mov	r0, r6
    a158:	ldr	r2, [r1, #4]!
    a15c:	asr	r3, r2, #31
    a160:	strd	r2, [r0, #8]!
    a164:	cmp	r1, r4
    a168:	bne	a158 <ReadUInt64Data+0x72c>
    a16c:	add	r5, r5, #256	; 0x100
    a170:	add	r6, r6, #2048	; 0x800
    a174:	cmp	r5, fp
    a178:	blt	a138 <ReadUInt64Data+0x70c>
    a17c:	cmp	r8, r5
    a180:	ble	aa4c <ReadUInt64Data+0x1020>
    a184:	sub	r8, r8, r5
    a188:	ldr	r3, [sl]
    a18c:	mov	r2, r8
    a190:	ldr	r1, [sp, #4]
    a194:	add	r0, sp, #24
    a198:	bl	1588 <fread@plt>
    a19c:	add	r9, r9, r0
    a1a0:	cmp	r8, #0
    a1a4:	ble	aa4c <ReadUInt64Data+0x1020>
    a1a8:	add	ip, sp, #24
    a1ac:	add	r0, sp, #20
    a1b0:	sub	r1, r5, #-536870911	; 0xe0000001
    a1b4:	ldr	r3, [sp, #8]
    a1b8:	add	r1, r3, r1, lsl #3
    a1bc:	sub	r8, r8, #-1073741823	; 0xc0000001
    a1c0:	add	ip, ip, r8, lsl #2
    a1c4:	ldr	r2, [r0, #4]!
    a1c8:	asr	r3, r2, #31
    a1cc:	strd	r2, [r1, #8]!
    a1d0:	cmp	r0, ip
    a1d4:	bne	a1c4 <ReadUInt64Data+0x798>
    a1d8:	b	aa4c <ReadUInt64Data+0x1020>
    a1dc:	ldr	r3, [sl]
    a1e0:	mov	r2, r8
    a1e4:	ldr	r1, [sp, #4]
    a1e8:	add	r0, sp, #24
    a1ec:	bl	1588 <fread@plt>
    a1f0:	mov	r9, r0
    a1f4:	cmp	r8, #0
    a1f8:	ble	aa4c <ReadUInt64Data+0x1020>
    a1fc:	add	ip, sp, #24
    a200:	add	r1, sp, #20
    a204:	ldr	r3, [sp, #8]
    a208:	sub	r0, r3, #8
    a20c:	sub	r8, r8, #-1073741823	; 0xc0000001
    a210:	add	ip, ip, r8, lsl #2
    a214:	ldr	r2, [r1, #4]!
    a218:	asr	r3, r2, #31
    a21c:	strd	r2, [r0, #8]!
    a220:	cmp	r1, ip
    a224:	bne	a214 <ReadUInt64Data+0x7e8>
    a228:	b	aa4c <ReadUInt64Data+0x1020>
    a22c:	ldr	r9, [sl, #20]
    a230:	cmp	r9, #0
    a234:	beq	a398 <ReadUInt64Data+0x96c>
    a238:	cmp	r8, #256	; 0x100
    a23c:	ble	a340 <ReadUInt64Data+0x914>
    a240:	sub	r3, r8, #256	; 0x100
    a244:	str	r3, [sp, #12]
    a248:	cmp	r3, #0
    a24c:	movle	fp, #0
    a250:	movle	r9, fp
    a254:	ble	a2d8 <ReadUInt64Data+0x8ac>
    a258:	ldr	r3, [sp, #8]
    a25c:	sub	r3, r3, #8
    a260:	mov	fp, #0
    a264:	mov	r9, fp
    a268:	add	r2, sp, #24
    a26c:	str	r2, [sp, #16]
    a270:	add	r7, sp, #1040	; 0x410
    a274:	add	r7, r7, #8
    a278:	mov	r6, fp
    a27c:	str	r8, [sp, #20]
    a280:	mov	r8, r3
    a284:	ldr	r3, [sl]
    a288:	mov	r2, #256	; 0x100
    a28c:	ldr	r1, [sp, #4]
    a290:	ldr	r4, [sp, #16]
    a294:	mov	r0, r4
    a298:	bl	1588 <fread@plt>
    a29c:	add	r9, r9, r0
    a2a0:	mov	r5, r8
    a2a4:	mov	r0, r4
    a2a8:	bl	1a88 <Mat_uint32Swap>
    a2ac:	str	r0, [r5, #8]!
    a2b0:	str	r6, [r5, #4]
    a2b4:	add	r4, r4, #4
    a2b8:	cmp	r4, r7
    a2bc:	bne	a2a4 <ReadUInt64Data+0x878>
    a2c0:	add	fp, fp, #256	; 0x100
    a2c4:	add	r8, r8, #2048	; 0x800
    a2c8:	ldr	r3, [sp, #12]
    a2cc:	cmp	fp, r3
    a2d0:	blt	a284 <ReadUInt64Data+0x858>
    a2d4:	ldr	r8, [sp, #20]
    a2d8:	cmp	r8, fp
    a2dc:	ble	aa4c <ReadUInt64Data+0x1020>
    a2e0:	sub	r8, r8, fp
    a2e4:	ldr	r3, [sl]
    a2e8:	mov	r2, r8
    a2ec:	ldr	r1, [sp, #4]
    a2f0:	add	r0, sp, #24
    a2f4:	bl	1588 <fread@plt>
    a2f8:	add	r9, r9, r0
    a2fc:	cmp	r8, #0
    a300:	ble	aa4c <ReadUInt64Data+0x1020>
    a304:	add	r5, sp, #24
    a308:	ldr	r3, [sp, #8]
    a30c:	add	fp, r3, fp, lsl #3
    a310:	mov	r4, #0
    a314:	mov	r6, r4
    a318:	mov	r0, r5
    a31c:	bl	1a88 <Mat_uint32Swap>
    a320:	str	r0, [fp]
    a324:	str	r6, [fp, #4]
    a328:	add	fp, fp, #8
    a32c:	add	r4, r4, #1
    a330:	add	r5, r5, #4
    a334:	cmp	r8, r4
    a338:	bne	a318 <ReadUInt64Data+0x8ec>
    a33c:	b	aa4c <ReadUInt64Data+0x1020>
    a340:	ldr	r3, [sl]
    a344:	mov	r2, r8
    a348:	ldr	r1, [sp, #4]
    a34c:	add	r0, sp, #24
    a350:	bl	1588 <fread@plt>
    a354:	mov	r9, r0
    a358:	cmp	r8, #0
    a35c:	ble	aa4c <ReadUInt64Data+0x1020>
    a360:	add	r5, sp, #24
    a364:	ldr	r3, [sp, #8]
    a368:	mov	r4, r3
    a36c:	add	r8, r3, r8, lsl #3
    a370:	mov	r6, #0
    a374:	mov	r0, r5
    a378:	bl	1a88 <Mat_uint32Swap>
    a37c:	str	r0, [r4]
    a380:	str	r6, [r4, #4]
    a384:	add	r4, r4, #8
    a388:	add	r5, r5, #4
    a38c:	cmp	r4, r8
    a390:	bne	a374 <ReadUInt64Data+0x948>
    a394:	b	aa4c <ReadUInt64Data+0x1020>
    a398:	cmp	r8, #256	; 0x100
    a39c:	ble	a480 <ReadUInt64Data+0xa54>
    a3a0:	sub	r3, r8, #256	; 0x100
    a3a4:	mov	r2, r3
    a3a8:	cmp	r3, #0
    a3ac:	movle	r6, r9
    a3b0:	ble	a41c <ReadUInt64Data+0x9f0>
    a3b4:	ldr	r3, [sp, #8]
    a3b8:	sub	r7, r3, #8
    a3bc:	mov	r6, r9
    a3c0:	add	fp, sp, #24
    a3c4:	add	r5, fp, #1020	; 0x3fc
    a3c8:	mov	r4, #0
    a3cc:	str	r8, [sp, #12]
    a3d0:	mov	r8, r2
    a3d4:	ldr	r3, [sl]
    a3d8:	mov	r2, #256	; 0x100
    a3dc:	ldr	r1, [sp, #4]
    a3e0:	mov	r0, fp
    a3e4:	bl	1588 <fread@plt>
    a3e8:	add	r9, r9, r0
    a3ec:	sub	r2, fp, #4
    a3f0:	mov	r3, r7
    a3f4:	ldr	r1, [r2, #4]!
    a3f8:	str	r1, [r3, #8]!
    a3fc:	str	r4, [r3, #4]
    a400:	cmp	r2, r5
    a404:	bne	a3f4 <ReadUInt64Data+0x9c8>
    a408:	add	r6, r6, #256	; 0x100
    a40c:	add	r7, r7, #2048	; 0x800
    a410:	cmp	r6, r8
    a414:	blt	a3d4 <ReadUInt64Data+0x9a8>
    a418:	ldr	r8, [sp, #12]
    a41c:	cmp	r8, r6
    a420:	ble	aa4c <ReadUInt64Data+0x1020>
    a424:	sub	r8, r8, r6
    a428:	ldr	r3, [sl]
    a42c:	mov	r2, r8
    a430:	ldr	r1, [sp, #4]
    a434:	add	r0, sp, #24
    a438:	bl	1588 <fread@plt>
    a43c:	add	r9, r9, r0
    a440:	cmp	r8, #0
    a444:	ble	aa4c <ReadUInt64Data+0x1020>
    a448:	add	r0, sp, #24
    a44c:	add	r2, sp, #20
    a450:	sub	r3, r6, #-536870911	; 0xe0000001
    a454:	ldr	r1, [sp, #8]
    a458:	add	r3, r1, r3, lsl #3
    a45c:	sub	r8, r8, #-1073741823	; 0xc0000001
    a460:	add	r0, r0, r8, lsl #2
    a464:	mov	ip, #0
    a468:	ldr	r1, [r2, #4]!
    a46c:	str	r1, [r3, #8]!
    a470:	str	ip, [r3, #4]
    a474:	cmp	r2, r0
    a478:	bne	a468 <ReadUInt64Data+0xa3c>
    a47c:	b	aa4c <ReadUInt64Data+0x1020>
    a480:	ldr	r3, [sl]
    a484:	mov	r2, r8
    a488:	ldr	r1, [sp, #4]
    a48c:	add	r0, sp, #24
    a490:	bl	1588 <fread@plt>
    a494:	mov	r9, r0
    a498:	cmp	r8, #0
    a49c:	ble	aa4c <ReadUInt64Data+0x1020>
    a4a0:	add	r0, sp, #24
    a4a4:	add	r2, sp, #20
    a4a8:	ldr	r3, [sp, #8]
    a4ac:	sub	r3, r3, #8
    a4b0:	sub	r8, r8, #-1073741823	; 0xc0000001
    a4b4:	add	r0, r0, r8, lsl #2
    a4b8:	mov	ip, #0
    a4bc:	ldr	r1, [r2, #4]!
    a4c0:	str	r1, [r3, #8]!
    a4c4:	str	ip, [r3, #4]
    a4c8:	cmp	r2, r0
    a4cc:	bne	a4bc <ReadUInt64Data+0xa90>
    a4d0:	b	aa4c <ReadUInt64Data+0x1020>
    a4d4:	ldr	r9, [sl, #20]
    a4d8:	cmp	r9, #0
    a4dc:	beq	a62c <ReadUInt64Data+0xc00>
    a4e0:	cmp	r8, #256	; 0x100
    a4e4:	ble	a5d8 <ReadUInt64Data+0xbac>
    a4e8:	sub	r3, r8, #256	; 0x100
    a4ec:	mov	r2, r3
    a4f0:	cmp	r3, #0
    a4f4:	movle	r7, #0
    a4f8:	movle	r9, r7
    a4fc:	ble	a578 <ReadUInt64Data+0xb4c>
    a500:	ldr	r3, [sp, #8]
    a504:	sub	fp, r3, #8
    a508:	mov	r7, #0
    a50c:	mov	r9, r7
    a510:	add	r3, sp, #24
    a514:	str	r3, [sp, #12]
    a518:	add	r6, sp, #536	; 0x218
    a51c:	str	r8, [sp, #16]
    a520:	mov	r8, r2
    a524:	ldr	r3, [sl]
    a528:	mov	r2, #256	; 0x100
    a52c:	ldr	r1, [sp, #4]
    a530:	ldr	r4, [sp, #12]
    a534:	mov	r0, r4
    a538:	bl	1588 <fread@plt>
    a53c:	add	r9, r9, r0
    a540:	mov	r5, fp
    a544:	mov	r0, r4
    a548:	bl	1ae4 <Mat_int16Swap>
    a54c:	sxth	r0, r0
    a550:	asr	r1, r0, #31
    a554:	strd	r0, [r5, #8]!
    a558:	add	r4, r4, #2
    a55c:	cmp	r4, r6
    a560:	bne	a544 <ReadUInt64Data+0xb18>
    a564:	add	r7, r7, #256	; 0x100
    a568:	add	fp, fp, #2048	; 0x800
    a56c:	cmp	r7, r8
    a570:	blt	a524 <ReadUInt64Data+0xaf8>
    a574:	ldr	r8, [sp, #16]
    a578:	cmp	r8, r7
    a57c:	ble	aa4c <ReadUInt64Data+0x1020>
    a580:	sub	r8, r8, r7
    a584:	ldr	r3, [sl]
    a588:	mov	r2, r8
    a58c:	ldr	r1, [sp, #4]
    a590:	add	r0, sp, #24
    a594:	bl	1588 <fread@plt>
    a598:	add	r9, r9, r0
    a59c:	cmp	r8, #0
    a5a0:	ble	aa4c <ReadUInt64Data+0x1020>
    a5a4:	add	r4, sp, #24
    a5a8:	ldr	r3, [sp, #8]
    a5ac:	add	r7, r3, r7, lsl #3
    a5b0:	add	r8, r4, r8, lsl #1
    a5b4:	mov	r0, r4
    a5b8:	bl	1ae4 <Mat_int16Swap>
    a5bc:	sxth	r0, r0
    a5c0:	asr	r1, r0, #31
    a5c4:	strd	r0, [r7], #8
    a5c8:	add	r4, r4, #2
    a5cc:	cmp	r4, r8
    a5d0:	bne	a5b4 <ReadUInt64Data+0xb88>
    a5d4:	b	aa4c <ReadUInt64Data+0x1020>
    a5d8:	ldr	r3, [sl]
    a5dc:	mov	r2, r8
    a5e0:	ldr	r1, [sp, #4]
    a5e4:	add	r0, sp, #24
    a5e8:	bl	1588 <fread@plt>
    a5ec:	mov	r9, r0
    a5f0:	cmp	r8, #0
    a5f4:	ble	aa4c <ReadUInt64Data+0x1020>
    a5f8:	add	r5, sp, #24
    a5fc:	ldr	r3, [sp, #8]
    a600:	mov	r4, r3
    a604:	add	r8, r3, r8, lsl #3
    a608:	mov	r0, r5
    a60c:	bl	1ae4 <Mat_int16Swap>
    a610:	sxth	r0, r0
    a614:	asr	r1, r0, #31
    a618:	strd	r0, [r4], #8
    a61c:	add	r5, r5, #2
    a620:	cmp	r8, r4
    a624:	bne	a608 <ReadUInt64Data+0xbdc>
    a628:	b	aa4c <ReadUInt64Data+0x1020>
    a62c:	cmp	r8, #256	; 0x100
    a630:	ble	a700 <ReadUInt64Data+0xcd4>
    a634:	sub	fp, r8, #256	; 0x100
    a638:	cmp	fp, #0
    a63c:	movle	r5, r9
    a640:	ble	a6a0 <ReadUInt64Data+0xc74>
    a644:	ldr	r3, [sp, #8]
    a648:	sub	r6, r3, #8
    a64c:	mov	r5, r9
    a650:	add	r7, sp, #24
    a654:	add	r4, r7, #508	; 0x1fc
    a658:	add	r4, r4, #2
    a65c:	ldr	r3, [sl]
    a660:	mov	r2, #256	; 0x100
    a664:	ldr	r1, [sp, #4]
    a668:	mov	r0, r7
    a66c:	bl	1588 <fread@plt>
    a670:	add	r9, r9, r0
    a674:	sub	r3, r7, #2
    a678:	mov	r2, r6
    a67c:	ldrsh	r0, [r3, #2]!
    a680:	asr	r1, r0, #31
    a684:	strd	r0, [r2, #8]!
    a688:	cmp	r3, r4
    a68c:	bne	a67c <ReadUInt64Data+0xc50>
    a690:	add	r5, r5, #256	; 0x100
    a694:	add	r6, r6, #2048	; 0x800
    a698:	cmp	r5, fp
    a69c:	blt	a65c <ReadUInt64Data+0xc30>
    a6a0:	cmp	r8, r5
    a6a4:	ble	aa4c <ReadUInt64Data+0x1020>
    a6a8:	sub	r8, r8, r5
    a6ac:	ldr	r3, [sl]
    a6b0:	mov	r2, r8
    a6b4:	ldr	r1, [sp, #4]
    a6b8:	add	r0, sp, #24
    a6bc:	bl	1588 <fread@plt>
    a6c0:	add	r9, r9, r0
    a6c4:	cmp	r8, #0
    a6c8:	ble	aa4c <ReadUInt64Data+0x1020>
    a6cc:	add	ip, sp, #24
    a6d0:	add	r2, sp, #22
    a6d4:	sub	r3, r5, #-536870911	; 0xe0000001
    a6d8:	ldr	r1, [sp, #8]
    a6dc:	add	r3, r1, r3, lsl #3
    a6e0:	sub	r8, r8, #-2147483647	; 0x80000001
    a6e4:	add	ip, ip, r8, lsl #1
    a6e8:	ldrsh	r0, [r2, #2]!
    a6ec:	asr	r1, r0, #31
    a6f0:	strd	r0, [r3, #8]!
    a6f4:	cmp	r2, ip
    a6f8:	bne	a6e8 <ReadUInt64Data+0xcbc>
    a6fc:	b	aa4c <ReadUInt64Data+0x1020>
    a700:	ldr	r3, [sl]
    a704:	mov	r2, r8
    a708:	ldr	r1, [sp, #4]
    a70c:	add	r0, sp, #24
    a710:	bl	1588 <fread@plt>
    a714:	mov	r9, r0
    a718:	cmp	r8, #0
    a71c:	ble	aa4c <ReadUInt64Data+0x1020>
    a720:	add	ip, sp, #24
    a724:	add	r3, sp, #22
    a728:	ldr	r2, [sp, #8]
    a72c:	sub	r2, r2, #8
    a730:	sub	r8, r8, #-2147483647	; 0x80000001
    a734:	add	ip, ip, r8, lsl #1
    a738:	ldrsh	r0, [r3, #2]!
    a73c:	asr	r1, r0, #31
    a740:	strd	r0, [r2, #8]!
    a744:	cmp	r3, ip
    a748:	bne	a738 <ReadUInt64Data+0xd0c>
    a74c:	b	aa4c <ReadUInt64Data+0x1020>
    a750:	ldr	r9, [sl, #20]
    a754:	cmp	r9, #0
    a758:	beq	a8a8 <ReadUInt64Data+0xe7c>
    a75c:	cmp	r8, #256	; 0x100
    a760:	ble	a854 <ReadUInt64Data+0xe28>
    a764:	sub	r3, r8, #256	; 0x100
    a768:	mov	r2, r3
    a76c:	cmp	r3, #0
    a770:	movle	r7, #0
    a774:	movle	r9, r7
    a778:	ble	a7f4 <ReadUInt64Data+0xdc8>
    a77c:	ldr	r3, [sp, #8]
    a780:	sub	fp, r3, #8
    a784:	mov	r7, #0
    a788:	mov	r9, r7
    a78c:	add	r3, sp, #24
    a790:	str	r3, [sp, #12]
    a794:	add	r6, sp, #536	; 0x218
    a798:	str	r8, [sp, #16]
    a79c:	mov	r8, r2
    a7a0:	ldr	r3, [sl]
    a7a4:	mov	r2, #256	; 0x100
    a7a8:	ldr	r1, [sp, #4]
    a7ac:	ldr	r4, [sp, #12]
    a7b0:	mov	r0, r4
    a7b4:	bl	1588 <fread@plt>
    a7b8:	add	r9, r9, r0
    a7bc:	mov	r5, fp
    a7c0:	mov	r0, r4
    a7c4:	bl	1b1c <Mat_uint16Swap>
    a7c8:	uxth	r0, r0
    a7cc:	mov	r1, #0
    a7d0:	strd	r0, [r5, #8]!
    a7d4:	add	r4, r4, #2
    a7d8:	cmp	r4, r6
    a7dc:	bne	a7c0 <ReadUInt64Data+0xd94>
    a7e0:	add	r7, r7, #256	; 0x100
    a7e4:	add	fp, fp, #2048	; 0x800
    a7e8:	cmp	r7, r8
    a7ec:	blt	a7a0 <ReadUInt64Data+0xd74>
    a7f0:	ldr	r8, [sp, #16]
    a7f4:	cmp	r8, r7
    a7f8:	ble	aa4c <ReadUInt64Data+0x1020>
    a7fc:	sub	r8, r8, r7
    a800:	ldr	r3, [sl]
    a804:	mov	r2, r8
    a808:	ldr	r1, [sp, #4]
    a80c:	add	r0, sp, #24
    a810:	bl	1588 <fread@plt>
    a814:	add	r9, r9, r0
    a818:	cmp	r8, #0
    a81c:	ble	aa4c <ReadUInt64Data+0x1020>
    a820:	add	r4, sp, #24
    a824:	ldr	r3, [sp, #8]
    a828:	add	r7, r3, r7, lsl #3
    a82c:	add	r8, r4, r8, lsl #1
    a830:	mov	r0, r4
    a834:	bl	1b1c <Mat_uint16Swap>
    a838:	uxth	r0, r0
    a83c:	mov	r1, #0
    a840:	strd	r0, [r7], #8
    a844:	add	r4, r4, #2
    a848:	cmp	r4, r8
    a84c:	bne	a830 <ReadUInt64Data+0xe04>
    a850:	b	aa4c <ReadUInt64Data+0x1020>
    a854:	ldr	r3, [sl]
    a858:	mov	r2, r8
    a85c:	ldr	r1, [sp, #4]
    a860:	add	r0, sp, #24
    a864:	bl	1588 <fread@plt>
    a868:	mov	r9, r0
    a86c:	cmp	r8, #0
    a870:	ble	aa4c <ReadUInt64Data+0x1020>
    a874:	add	r5, sp, #24
    a878:	ldr	r3, [sp, #8]
    a87c:	mov	r4, r3
    a880:	add	r8, r3, r8, lsl #3
    a884:	mov	r0, r5
    a888:	bl	1b1c <Mat_uint16Swap>
    a88c:	uxth	r0, r0
    a890:	mov	r1, #0
    a894:	strd	r0, [r4], #8
    a898:	add	r5, r5, #2
    a89c:	cmp	r4, r8
    a8a0:	bne	a884 <ReadUInt64Data+0xe58>
    a8a4:	b	aa4c <ReadUInt64Data+0x1020>
    a8a8:	cmp	r8, #256	; 0x100
    a8ac:	ble	a97c <ReadUInt64Data+0xf50>
    a8b0:	sub	fp, r8, #256	; 0x100
    a8b4:	cmp	fp, #0
    a8b8:	movle	r5, r9
    a8bc:	ble	a91c <ReadUInt64Data+0xef0>
    a8c0:	ldr	r3, [sp, #8]
    a8c4:	sub	r6, r3, #8
    a8c8:	mov	r5, r9
    a8cc:	add	r7, sp, #24
    a8d0:	add	r4, r7, #508	; 0x1fc
    a8d4:	add	r4, r4, #2
    a8d8:	ldr	r3, [sl]
    a8dc:	mov	r2, #256	; 0x100
    a8e0:	ldr	r1, [sp, #4]
    a8e4:	mov	r0, r7
    a8e8:	bl	1588 <fread@plt>
    a8ec:	add	r9, r9, r0
    a8f0:	sub	r3, r7, #2
    a8f4:	mov	r2, r6
    a8f8:	ldrh	r0, [r3, #2]!
    a8fc:	mov	r1, #0
    a900:	strd	r0, [r2, #8]!
    a904:	cmp	r3, r4
    a908:	bne	a8f8 <ReadUInt64Data+0xecc>
    a90c:	add	r5, r5, #256	; 0x100
    a910:	add	r6, r6, #2048	; 0x800
    a914:	cmp	r5, fp
    a918:	blt	a8d8 <ReadUInt64Data+0xeac>
    a91c:	cmp	r8, r5
    a920:	ble	aa4c <ReadUInt64Data+0x1020>
    a924:	sub	r8, r8, r5
    a928:	ldr	r3, [sl]
    a92c:	mov	r2, r8
    a930:	ldr	r1, [sp, #4]
    a934:	add	r0, sp, #24
    a938:	bl	1588 <fread@plt>
    a93c:	add	r9, r9, r0
    a940:	cmp	r8, #0
    a944:	ble	aa4c <ReadUInt64Data+0x1020>
    a948:	add	ip, sp, #24
    a94c:	add	r2, sp, #22
    a950:	sub	r3, r5, #-536870911	; 0xe0000001
    a954:	ldr	r1, [sp, #8]
    a958:	add	r3, r1, r3, lsl #3
    a95c:	sub	r8, r8, #-2147483647	; 0x80000001
    a960:	add	ip, ip, r8, lsl #1
    a964:	ldrh	r0, [r2, #2]!
    a968:	mov	r1, #0
    a96c:	strd	r0, [r3, #8]!
    a970:	cmp	r2, ip
    a974:	bne	a964 <ReadUInt64Data+0xf38>
    a978:	b	aa4c <ReadUInt64Data+0x1020>
    a97c:	ldr	r3, [sl]
    a980:	mov	r2, r8
    a984:	ldr	r1, [sp, #4]
    a988:	add	r0, sp, #24
    a98c:	bl	1588 <fread@plt>
    a990:	mov	r9, r0
    a994:	cmp	r8, #0
    a998:	ble	aa4c <ReadUInt64Data+0x1020>
    a99c:	add	ip, sp, #24
    a9a0:	add	r3, sp, #22
    a9a4:	ldr	r2, [sp, #8]
    a9a8:	sub	r2, r2, #8
    a9ac:	sub	r8, r8, #-2147483647	; 0x80000001
    a9b0:	add	ip, ip, r8, lsl #1
    a9b4:	ldrh	r0, [r3, #2]!
    a9b8:	mov	r1, #0
    a9bc:	strd	r0, [r2, #8]!
    a9c0:	cmp	r3, ip
    a9c4:	bne	a9b4 <ReadUInt64Data+0xf88>
    a9c8:	b	aa4c <ReadUInt64Data+0x1020>
    a9cc:	cmp	r8, #256	; 0x100
    a9d0:	ble	aa60 <ReadUInt64Data+0x1034>
    a9d4:	sub	fp, r8, #256	; 0x100
    a9d8:	cmp	fp, #0
    a9dc:	movle	r5, #0
    a9e0:	movle	r9, r5
    a9e4:	ble	aa44 <ReadUInt64Data+0x1018>
    a9e8:	ldr	r3, [sp, #8]
    a9ec:	sub	r6, r3, #8
    a9f0:	mov	r5, #0
    a9f4:	mov	r9, r5
    a9f8:	add	r7, sp, #24
    a9fc:	add	r4, r7, #255	; 0xff
    aa00:	ldr	r3, [sl]
    aa04:	mov	r2, #256	; 0x100
    aa08:	ldr	r1, [sp, #4]
    aa0c:	mov	r0, r7
    aa10:	bl	1588 <fread@plt>
    aa14:	add	r9, r9, r0
    aa18:	sub	r3, r7, #1
    aa1c:	mov	r2, r6
    aa20:	ldrsb	r0, [r3, #1]!
    aa24:	asr	r1, r0, #31
    aa28:	strd	r0, [r2, #8]!
    aa2c:	cmp	r4, r3
    aa30:	bne	aa20 <ReadUInt64Data+0xff4>
    aa34:	add	r5, r5, #256	; 0x100
    aa38:	add	r6, r6, #2048	; 0x800
    aa3c:	cmp	r5, fp
    aa40:	blt	aa00 <ReadUInt64Data+0xfd4>
    aa44:	cmp	r8, r5
    aa48:	bgt	aab0 <ReadUInt64Data+0x1084>
    aa4c:	ldr	r3, [sp, #4]
    aa50:	mul	r0, r3, r9
    aa54:	add	sp, sp, #2064	; 0x810
    aa58:	add	sp, sp, #12
    aa5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa60:	ldr	r3, [sl]
    aa64:	mov	r2, r8
    aa68:	ldr	r1, [sp, #4]
    aa6c:	add	r0, sp, #24
    aa70:	bl	1588 <fread@plt>
    aa74:	mov	r9, r0
    aa78:	cmp	r8, #0
    aa7c:	ble	aa4c <ReadUInt64Data+0x1020>
    aa80:	add	ip, sp, #24
    aa84:	add	r3, sp, #23
    aa88:	ldr	r2, [sp, #8]
    aa8c:	sub	r2, r2, #8
    aa90:	sub	r8, r8, #1
    aa94:	add	ip, ip, r8
    aa98:	ldrsb	r0, [r3, #1]!
    aa9c:	asr	r1, r0, #31
    aaa0:	strd	r0, [r2, #8]!
    aaa4:	cmp	ip, r3
    aaa8:	bne	aa98 <ReadUInt64Data+0x106c>
    aaac:	b	aa4c <ReadUInt64Data+0x1020>
    aab0:	sub	r8, r8, r5
    aab4:	ldr	r3, [sl]
    aab8:	mov	r2, r8
    aabc:	ldr	r1, [sp, #4]
    aac0:	add	r0, sp, #24
    aac4:	bl	1588 <fread@plt>
    aac8:	add	r9, r9, r0
    aacc:	cmp	r8, #0
    aad0:	ble	aa4c <ReadUInt64Data+0x1020>
    aad4:	add	ip, sp, #24
    aad8:	add	r2, sp, #23
    aadc:	sub	r3, r5, #-536870911	; 0xe0000001
    aae0:	ldr	r1, [sp, #8]
    aae4:	add	r3, r1, r3, lsl #3
    aae8:	sub	r8, r8, #1
    aaec:	add	ip, ip, r8
    aaf0:	ldrsb	r0, [r2, #1]!
    aaf4:	asr	r1, r0, #31
    aaf8:	strd	r0, [r3, #8]!
    aafc:	cmp	ip, r2
    ab00:	bne	aaf0 <ReadUInt64Data+0x10c4>
    ab04:	b	aa4c <ReadUInt64Data+0x1020>
    ab08:	cmp	r8, #256	; 0x100
    ab0c:	ble	abe0 <ReadUInt64Data+0x11b4>
    ab10:	sub	fp, r8, #256	; 0x100
    ab14:	cmp	fp, #0
    ab18:	movle	r5, #0
    ab1c:	movle	r9, r5
    ab20:	ble	ab80 <ReadUInt64Data+0x1154>
    ab24:	ldr	r3, [sp, #8]
    ab28:	sub	r6, r3, #8
    ab2c:	mov	r5, #0
    ab30:	mov	r9, r5
    ab34:	add	r7, sp, #24
    ab38:	add	r4, r7, #255	; 0xff
    ab3c:	ldr	r3, [sl]
    ab40:	mov	r2, #256	; 0x100
    ab44:	ldr	r1, [sp, #4]
    ab48:	mov	r0, r7
    ab4c:	bl	1588 <fread@plt>
    ab50:	add	r9, r9, r0
    ab54:	sub	r3, r7, #1
    ab58:	mov	r2, r6
    ab5c:	ldrb	r0, [r3, #1]!
    ab60:	mov	r1, #0
    ab64:	strd	r0, [r2, #8]!
    ab68:	cmp	r4, r3
    ab6c:	bne	ab5c <ReadUInt64Data+0x1130>
    ab70:	add	r5, r5, #256	; 0x100
    ab74:	add	r6, r6, #2048	; 0x800
    ab78:	cmp	r5, fp
    ab7c:	blt	ab3c <ReadUInt64Data+0x1110>
    ab80:	cmp	r8, r5
    ab84:	ble	aa4c <ReadUInt64Data+0x1020>
    ab88:	sub	r8, r8, r5
    ab8c:	ldr	r3, [sl]
    ab90:	mov	r2, r8
    ab94:	ldr	r1, [sp, #4]
    ab98:	add	r0, sp, #24
    ab9c:	bl	1588 <fread@plt>
    aba0:	add	r9, r9, r0
    aba4:	cmp	r8, #0
    aba8:	ble	aa4c <ReadUInt64Data+0x1020>
    abac:	add	ip, sp, #24
    abb0:	add	r2, sp, #23
    abb4:	sub	r3, r5, #-536870911	; 0xe0000001
    abb8:	ldr	r1, [sp, #8]
    abbc:	add	r3, r1, r3, lsl #3
    abc0:	sub	r8, r8, #1
    abc4:	add	ip, ip, r8
    abc8:	ldrb	r0, [r2, #1]!
    abcc:	mov	r1, #0
    abd0:	strd	r0, [r3, #8]!
    abd4:	cmp	ip, r2
    abd8:	bne	abc8 <ReadUInt64Data+0x119c>
    abdc:	b	aa4c <ReadUInt64Data+0x1020>
    abe0:	ldr	r3, [sl]
    abe4:	mov	r2, r8
    abe8:	ldr	r1, [sp, #4]
    abec:	add	r0, sp, #24
    abf0:	bl	1588 <fread@plt>
    abf4:	mov	r9, r0
    abf8:	cmp	r8, #0
    abfc:	ble	aa4c <ReadUInt64Data+0x1020>
    ac00:	add	ip, sp, #24
    ac04:	add	r3, sp, #23
    ac08:	ldr	r2, [sp, #8]
    ac0c:	sub	r2, r2, #8
    ac10:	sub	r8, r8, #1
    ac14:	add	ip, ip, r8
    ac18:	ldrb	r0, [r3, #1]!
    ac1c:	mov	r1, #0
    ac20:	strd	r0, [r2, #8]!
    ac24:	cmp	ip, r3
    ac28:	bne	ac18 <ReadUInt64Data+0x11ec>
    ac2c:	b	aa4c <ReadUInt64Data+0x1020>
    ac30:	cmp	r4, #12
    ac34:	beq	ad38 <ReadUInt64Data+0x130c>
    ac38:	cmp	r4, #13
    ac3c:	movne	r9, #0
    ac40:	bne	aa4c <ReadUInt64Data+0x1020>
    ac44:	ldr	r9, [sl, #20]
    ac48:	cmp	r9, #0
    ac4c:	beq	afdc <ReadUInt64Data+0x15b0>
    ac50:	cmp	r8, #256	; 0x100
    ac54:	ble	af90 <ReadUInt64Data+0x1564>
    ac58:	sub	r3, r8, #256	; 0x100
    ac5c:	str	r3, [sp, #12]
    ac60:	cmp	r3, #0
    ac64:	movle	r7, #0
    ac68:	movle	r9, r7
    ac6c:	ble	acdc <ReadUInt64Data+0x12b0>
    ac70:	ldr	r3, [sp, #8]
    ac74:	sub	fp, r3, #8
    ac78:	mov	r7, #0
    ac7c:	mov	r9, r7
    ac80:	add	r3, sp, #24
    ac84:	str	r3, [sp, #16]
    ac88:	ldr	r3, [sl]
    ac8c:	mov	r2, #256	; 0x100
    ac90:	ldr	r1, [sp, #4]
    ac94:	ldr	r4, [sp, #16]
    ac98:	mov	r0, r4
    ac9c:	bl	1588 <fread@plt>
    aca0:	add	r9, r9, r0
    aca4:	add	r6, sp, #2064	; 0x810
    aca8:	add	r6, r6, #8
    acac:	mov	r5, fp
    acb0:	mov	r0, r4
    acb4:	bl	1984 <Mat_uint64Swap>
    acb8:	strd	r0, [r5, #8]!
    acbc:	add	r4, r4, #8
    acc0:	cmp	r4, r6
    acc4:	bne	acb0 <ReadUInt64Data+0x1284>
    acc8:	add	r7, r7, #256	; 0x100
    accc:	add	fp, fp, #2048	; 0x800
    acd0:	ldr	r3, [sp, #12]
    acd4:	cmp	r7, r3
    acd8:	blt	ac88 <ReadUInt64Data+0x125c>
    acdc:	cmp	r8, r7
    ace0:	ble	aa4c <ReadUInt64Data+0x1020>
    ace4:	sub	r8, r8, r7
    ace8:	ldr	r3, [sl]
    acec:	mov	r2, r8
    acf0:	ldr	r1, [sp, #4]
    acf4:	add	r0, sp, #24
    acf8:	bl	1588 <fread@plt>
    acfc:	add	r9, r9, r0
    ad00:	cmp	r8, #0
    ad04:	ble	aa4c <ReadUInt64Data+0x1020>
    ad08:	add	r5, sp, #24
    ad0c:	ldr	r3, [sp, #8]
    ad10:	add	r7, r3, r7, lsl #3
    ad14:	mov	r4, #0
    ad18:	mov	r0, r5
    ad1c:	bl	1984 <Mat_uint64Swap>
    ad20:	strd	r0, [r7], #8
    ad24:	add	r4, r4, #1
    ad28:	add	r5, r5, #8
    ad2c:	cmp	r8, r4
    ad30:	bne	ad18 <ReadUInt64Data+0x12ec>
    ad34:	b	aa4c <ReadUInt64Data+0x1020>
    ad38:	ldr	r9, [sl, #20]
    ad3c:	cmp	r9, #0
    ad40:	beq	ae78 <ReadUInt64Data+0x144c>
    ad44:	cmp	r8, #256	; 0x100
    ad48:	ble	ae2c <ReadUInt64Data+0x1400>
    ad4c:	sub	r3, r8, #256	; 0x100
    ad50:	str	r3, [sp, #12]
    ad54:	cmp	r3, #0
    ad58:	movle	r7, #0
    ad5c:	movle	r9, r7
    ad60:	ble	add0 <ReadUInt64Data+0x13a4>
    ad64:	ldr	r3, [sp, #8]
    ad68:	sub	fp, r3, #8
    ad6c:	mov	r7, #0
    ad70:	mov	r9, r7
    ad74:	add	r3, sp, #24
    ad78:	str	r3, [sp, #16]
    ad7c:	ldr	r3, [sl]
    ad80:	mov	r2, #256	; 0x100
    ad84:	ldr	r1, [sp, #4]
    ad88:	ldr	r4, [sp, #16]
    ad8c:	mov	r0, r4
    ad90:	bl	1588 <fread@plt>
    ad94:	add	r9, r9, r0
    ad98:	add	r6, sp, #2064	; 0x810
    ad9c:	add	r6, r6, #8
    ada0:	mov	r5, fp
    ada4:	mov	r0, r4
    ada8:	bl	18bc <Mat_int64Swap>
    adac:	strd	r0, [r5, #8]!
    adb0:	add	r4, r4, #8
    adb4:	cmp	r6, r4
    adb8:	bne	ada4 <ReadUInt64Data+0x1378>
    adbc:	add	r7, r7, #256	; 0x100
    adc0:	add	fp, fp, #2048	; 0x800
    adc4:	ldr	r3, [sp, #12]
    adc8:	cmp	r7, r3
    adcc:	blt	ad7c <ReadUInt64Data+0x1350>
    add0:	cmp	r8, r7
    add4:	ble	aa4c <ReadUInt64Data+0x1020>
    add8:	sub	r8, r8, r7
    addc:	ldr	r3, [sl]
    ade0:	mov	r2, r8
    ade4:	ldr	r1, [sp, #4]
    ade8:	add	r0, sp, #24
    adec:	bl	1588 <fread@plt>
    adf0:	add	r9, r9, r0
    adf4:	cmp	r8, #0
    adf8:	ble	aa4c <ReadUInt64Data+0x1020>
    adfc:	add	r5, sp, #24
    ae00:	ldr	r3, [sp, #8]
    ae04:	add	r7, r3, r7, lsl #3
    ae08:	mov	r4, #0
    ae0c:	mov	r0, r5
    ae10:	bl	18bc <Mat_int64Swap>
    ae14:	strd	r0, [r7], #8
    ae18:	add	r4, r4, #1
    ae1c:	add	r5, r5, #8
    ae20:	cmp	r8, r4
    ae24:	bne	ae0c <ReadUInt64Data+0x13e0>
    ae28:	b	aa4c <ReadUInt64Data+0x1020>
    ae2c:	ldr	r3, [sl]
    ae30:	mov	r2, r8
    ae34:	ldr	r1, [sp, #4]
    ae38:	add	r0, sp, #24
    ae3c:	bl	1588 <fread@plt>
    ae40:	mov	r9, r0
    ae44:	cmp	r8, #0
    ae48:	ble	aa4c <ReadUInt64Data+0x1020>
    ae4c:	add	r5, sp, #24
    ae50:	ldr	r3, [sp, #8]
    ae54:	mov	r4, r3
    ae58:	add	r8, r3, r8, lsl #3
    ae5c:	mov	r0, r5
    ae60:	bl	18bc <Mat_int64Swap>
    ae64:	strd	r0, [r4], #8
    ae68:	add	r5, r5, #8
    ae6c:	cmp	r8, r4
    ae70:	bne	ae5c <ReadUInt64Data+0x1430>
    ae74:	b	aa4c <ReadUInt64Data+0x1020>
    ae78:	cmp	r8, #256	; 0x100
    ae7c:	ble	af44 <ReadUInt64Data+0x1518>
    ae80:	sub	r7, r8, #256	; 0x100
    ae84:	cmp	r7, #0
    ae88:	movle	r5, r9
    ae8c:	ble	aee4 <ReadUInt64Data+0x14b8>
    ae90:	ldr	r3, [sp, #8]
    ae94:	sub	r6, r3, #8
    ae98:	mov	r5, r9
    ae9c:	add	fp, sp, #24
    aea0:	add	r4, sp, #2064	; 0x810
    aea4:	ldr	r3, [sl]
    aea8:	mov	r2, #256	; 0x100
    aeac:	ldr	r1, [sp, #4]
    aeb0:	mov	r0, fp
    aeb4:	bl	1588 <fread@plt>
    aeb8:	add	r9, r9, r0
    aebc:	sub	r3, fp, #8
    aec0:	mov	r2, r6
    aec4:	ldrd	r0, [r3, #8]!
    aec8:	strd	r0, [r2, #8]!
    aecc:	cmp	r3, r4
    aed0:	bne	aec4 <ReadUInt64Data+0x1498>
    aed4:	add	r5, r5, #256	; 0x100
    aed8:	add	r6, r6, #2048	; 0x800
    aedc:	cmp	r5, r7
    aee0:	blt	aea4 <ReadUInt64Data+0x1478>
    aee4:	cmp	r8, r5
    aee8:	ble	aa4c <ReadUInt64Data+0x1020>
    aeec:	sub	r8, r8, r5
    aef0:	ldr	r3, [sl]
    aef4:	mov	r2, r8
    aef8:	ldr	r1, [sp, #4]
    aefc:	add	r0, sp, #24
    af00:	bl	1588 <fread@plt>
    af04:	add	r9, r9, r0
    af08:	cmp	r8, #0
    af0c:	ble	aa4c <ReadUInt64Data+0x1020>
    af10:	add	r1, sp, #24
    af14:	add	r2, sp, #16
    af18:	sub	r3, r5, #-536870911	; 0xe0000001
    af1c:	ldr	r0, [sp, #8]
    af20:	add	r3, r0, r3, lsl #3
    af24:	sub	r8, r8, #-536870911	; 0xe0000001
    af28:	add	r1, r1, r8, lsl #3
    af2c:	mov	ip, r1
    af30:	ldrd	r0, [r2, #8]!
    af34:	strd	r0, [r3, #8]!
    af38:	cmp	r2, ip
    af3c:	bne	af30 <ReadUInt64Data+0x1504>
    af40:	b	aa4c <ReadUInt64Data+0x1020>
    af44:	ldr	r3, [sl]
    af48:	mov	r2, r8
    af4c:	ldr	r1, [sp, #4]
    af50:	add	r0, sp, #24
    af54:	bl	1588 <fread@plt>
    af58:	mov	r9, r0
    af5c:	cmp	r8, #0
    af60:	ble	aa4c <ReadUInt64Data+0x1020>
    af64:	add	ip, sp, #24
    af68:	add	r3, sp, #16
    af6c:	ldr	r2, [sp, #8]
    af70:	sub	r2, r2, #8
    af74:	sub	r8, r8, #-536870911	; 0xe0000001
    af78:	add	ip, ip, r8, lsl #3
    af7c:	ldrd	r0, [r3, #8]!
    af80:	strd	r0, [r2, #8]!
    af84:	cmp	ip, r3
    af88:	bne	af7c <ReadUInt64Data+0x1550>
    af8c:	b	aa4c <ReadUInt64Data+0x1020>
    af90:	ldr	r3, [sl]
    af94:	mov	r2, r8
    af98:	ldr	r1, [sp, #4]
    af9c:	add	r0, sp, #24
    afa0:	bl	1588 <fread@plt>
    afa4:	mov	r9, r0
    afa8:	cmp	r8, #0
    afac:	ble	aa4c <ReadUInt64Data+0x1020>
    afb0:	add	r5, sp, #24
    afb4:	ldr	r3, [sp, #8]
    afb8:	mov	r4, r3
    afbc:	add	r8, r3, r8, lsl #3
    afc0:	mov	r0, r5
    afc4:	bl	1984 <Mat_uint64Swap>
    afc8:	strd	r0, [r4], #8
    afcc:	add	r5, r5, #8
    afd0:	cmp	r8, r4
    afd4:	bne	afc0 <ReadUInt64Data+0x1594>
    afd8:	b	aa4c <ReadUInt64Data+0x1020>
    afdc:	cmp	r8, #256	; 0x100
    afe0:	ble	b0a8 <ReadUInt64Data+0x167c>
    afe4:	sub	r7, r8, #256	; 0x100
    afe8:	cmp	r7, #0
    afec:	movle	r5, r9
    aff0:	ble	b048 <ReadUInt64Data+0x161c>
    aff4:	ldr	r3, [sp, #8]
    aff8:	sub	r6, r3, #8
    affc:	mov	r5, r9
    b000:	add	fp, sp, #24
    b004:	add	r4, sp, #2064	; 0x810
    b008:	ldr	r3, [sl]
    b00c:	mov	r2, #256	; 0x100
    b010:	ldr	r1, [sp, #4]
    b014:	mov	r0, fp
    b018:	bl	1588 <fread@plt>
    b01c:	add	r9, r9, r0
    b020:	sub	r3, fp, #8
    b024:	mov	r2, r6
    b028:	ldrd	r0, [r3, #8]!
    b02c:	strd	r0, [r2, #8]!
    b030:	cmp	r4, r3
    b034:	bne	b028 <ReadUInt64Data+0x15fc>
    b038:	add	r5, r5, #256	; 0x100
    b03c:	add	r6, r6, #2048	; 0x800
    b040:	cmp	r5, r7
    b044:	blt	b008 <ReadUInt64Data+0x15dc>
    b048:	cmp	r8, r5
    b04c:	ble	aa4c <ReadUInt64Data+0x1020>
    b050:	sub	r8, r8, r5
    b054:	ldr	r3, [sl]
    b058:	mov	r2, r8
    b05c:	ldr	r1, [sp, #4]
    b060:	add	r0, sp, #24
    b064:	bl	1588 <fread@plt>
    b068:	add	r9, r9, r0
    b06c:	cmp	r8, #0
    b070:	ble	aa4c <ReadUInt64Data+0x1020>
    b074:	add	r1, sp, #24
    b078:	add	r2, sp, #16
    b07c:	sub	r3, r5, #-536870911	; 0xe0000001
    b080:	ldr	r0, [sp, #8]
    b084:	add	r3, r0, r3, lsl #3
    b088:	sub	r8, r8, #-536870911	; 0xe0000001
    b08c:	add	r1, r1, r8, lsl #3
    b090:	mov	ip, r1
    b094:	ldrd	r0, [r2, #8]!
    b098:	strd	r0, [r3, #8]!
    b09c:	cmp	r2, ip
    b0a0:	bne	b094 <ReadUInt64Data+0x1668>
    b0a4:	b	aa4c <ReadUInt64Data+0x1020>
    b0a8:	ldr	r3, [sl]
    b0ac:	mov	r2, r8
    b0b0:	ldr	r1, [sp, #4]
    b0b4:	add	r0, sp, #24
    b0b8:	bl	1588 <fread@plt>
    b0bc:	mov	r9, r0
    b0c0:	cmp	r8, #0
    b0c4:	ble	aa4c <ReadUInt64Data+0x1020>
    b0c8:	add	ip, sp, #24
    b0cc:	add	r3, sp, #16
    b0d0:	ldr	r2, [sp, #8]
    b0d4:	sub	r2, r2, #8
    b0d8:	sub	r8, r8, #-536870911	; 0xe0000001
    b0dc:	add	ip, ip, r8, lsl #3
    b0e0:	ldrd	r0, [r3, #8]!
    b0e4:	strd	r0, [r2, #8]!
    b0e8:	cmp	r3, ip
    b0ec:	bne	b0e0 <ReadUInt64Data+0x16b4>
    b0f0:	b	aa4c <ReadUInt64Data+0x1020>
    b0f4:	mov	r0, #0
    b0f8:	bx	lr

0000b0fc <ReadCompressedUInt64Data>:
    b0fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b100:	sub	sp, sp, #12
    b104:	ldr	r6, [sp, #48]	; 0x30
    b108:	mov	r9, r2
    b10c:	cmp	r2, #0
    b110:	cmpne	r1, #0
    b114:	moveq	r2, #1
    b118:	movne	r2, #0
    b11c:	cmp	r0, #0
    b120:	orreq	r2, r2, #1
    b124:	cmp	r2, #0
    b128:	movne	r0, #0
    b12c:	bne	b1c0 <ReadCompressedUInt64Data+0xc4>
    b130:	mov	r8, r1
    b134:	mov	r5, r0
    b138:	mov	r7, r3
    b13c:	mov	r0, r3
    b140:	bl	1600 <Mat_SizeOf@plt>
    b144:	mov	r4, r0
    b148:	sub	r3, r7, #1
    b14c:	cmp	r3, #8
    b150:	addls	pc, pc, r3, lsl #2
    b154:	b	b59c <ReadCompressedUInt64Data+0x4a0>
    b158:	b	b1c8 <ReadCompressedUInt64Data+0xcc>
    b15c:	b	b17c <ReadCompressedUInt64Data+0x80>
    b160:	b	b46c <ReadCompressedUInt64Data+0x370>
    b164:	b	b504 <ReadCompressedUInt64Data+0x408>
    b168:	b	b33c <ReadCompressedUInt64Data+0x240>
    b16c:	b	b3d0 <ReadCompressedUInt64Data+0x2d4>
    b170:	b	b2a4 <ReadCompressedUInt64Data+0x1a8>
    b174:	b	b59c <ReadCompressedUInt64Data+0x4a0>
    b178:	b	b20c <ReadCompressedUInt64Data+0x110>
    b17c:	cmp	r6, #0
    b180:	subgt	r9, r9, #8
    b184:	movgt	r7, #0
    b188:	movgt	sl, sp
    b18c:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b190:	mov	r3, r4
    b194:	mov	r2, sl
    b198:	mov	r1, r8
    b19c:	mov	r0, r5
    b1a0:	bl	3418 <InflateData>
    b1a4:	ldrb	r2, [sp]
    b1a8:	mov	r3, #0
    b1ac:	strd	r2, [r9, #8]!
    b1b0:	add	r7, r7, #1
    b1b4:	cmp	r6, r7
    b1b8:	bne	b190 <ReadCompressedUInt64Data+0x94>
    b1bc:	mul	r0, r4, r6
    b1c0:	add	sp, sp, #12
    b1c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1c8:	cmp	r6, #0
    b1cc:	subgt	r9, r9, #8
    b1d0:	movgt	r7, #0
    b1d4:	movgt	sl, sp
    b1d8:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b1dc:	mov	r3, r4
    b1e0:	mov	r2, sl
    b1e4:	mov	r1, r8
    b1e8:	mov	r0, r5
    b1ec:	bl	3418 <InflateData>
    b1f0:	ldrsb	r2, [sp]
    b1f4:	asr	r3, r2, #31
    b1f8:	strd	r2, [r9, #8]!
    b1fc:	add	r7, r7, #1
    b200:	cmp	r6, r7
    b204:	bne	b1dc <ReadCompressedUInt64Data+0xe0>
    b208:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b20c:	ldr	r7, [r5, #20]
    b210:	cmp	r7, #0
    b214:	bne	b258 <ReadCompressedUInt64Data+0x15c>
    b218:	cmp	r6, #0
    b21c:	subgt	r9, r9, #8
    b220:	movgt	sl, sp
    b224:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b228:	mov	r3, r4
    b22c:	mov	r2, sl
    b230:	mov	r1, r8
    b234:	mov	r0, r5
    b238:	bl	3418 <InflateData>
    b23c:	ldrd	r0, [sp]
    b240:	bl	51ec0 <__aeabi_d2ulz>
    b244:	strd	r0, [r9, #8]!
    b248:	add	r7, r7, #1
    b24c:	cmp	r6, r7
    b250:	bne	b228 <ReadCompressedUInt64Data+0x12c>
    b254:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b258:	cmp	r6, #0
    b25c:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b260:	sub	r9, r9, #8
    b264:	mov	r7, #0
    b268:	mov	sl, sp
    b26c:	mov	r3, r4
    b270:	mov	r2, sl
    b274:	mov	r1, r8
    b278:	mov	r0, r5
    b27c:	bl	3418 <InflateData>
    b280:	mov	r0, sl
    b284:	bl	1b94 <Mat_doubleSwap>
    b288:	vmov	r0, r1, d0
    b28c:	bl	51ec0 <__aeabi_d2ulz>
    b290:	strd	r0, [r9, #8]!
    b294:	add	r7, r7, #1
    b298:	cmp	r6, r7
    b29c:	bne	b26c <ReadCompressedUInt64Data+0x170>
    b2a0:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b2a4:	ldr	r7, [r5, #20]
    b2a8:	cmp	r7, #0
    b2ac:	bne	b2f0 <ReadCompressedUInt64Data+0x1f4>
    b2b0:	cmp	r6, #0
    b2b4:	subgt	r9, r9, #8
    b2b8:	movgt	sl, sp
    b2bc:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b2c0:	mov	r3, r4
    b2c4:	mov	r2, sl
    b2c8:	mov	r1, r8
    b2cc:	mov	r0, r5
    b2d0:	bl	3418 <InflateData>
    b2d4:	ldr	r0, [sp]
    b2d8:	bl	51e78 <__aeabi_f2ulz>
    b2dc:	strd	r0, [r9, #8]!
    b2e0:	add	r7, r7, #1
    b2e4:	cmp	r6, r7
    b2e8:	bne	b2c0 <ReadCompressedUInt64Data+0x1c4>
    b2ec:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b2f0:	cmp	r6, #0
    b2f4:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b2f8:	sub	r9, r9, #8
    b2fc:	mov	r7, #0
    b300:	mov	sl, sp
    b304:	mov	r3, r4
    b308:	mov	r2, sl
    b30c:	mov	r1, r8
    b310:	mov	r0, r5
    b314:	bl	3418 <InflateData>
    b318:	mov	r0, sl
    b31c:	bl	1b38 <Mat_floatSwap>
    b320:	vmov	r0, s0
    b324:	bl	51e78 <__aeabi_f2ulz>
    b328:	strd	r0, [r9, #8]!
    b32c:	add	r7, r7, #1
    b330:	cmp	r6, r7
    b334:	bne	b304 <ReadCompressedUInt64Data+0x208>
    b338:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b33c:	ldr	r7, [r5, #20]
    b340:	cmp	r7, #0
    b344:	bne	b388 <ReadCompressedUInt64Data+0x28c>
    b348:	cmp	r6, #0
    b34c:	subgt	r9, r9, #8
    b350:	movgt	sl, sp
    b354:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b358:	mov	r3, r4
    b35c:	mov	r2, sl
    b360:	mov	r1, r8
    b364:	mov	r0, r5
    b368:	bl	3418 <InflateData>
    b36c:	ldr	r2, [sp]
    b370:	asr	r3, r2, #31
    b374:	strd	r2, [r9, #8]!
    b378:	add	r7, r7, #1
    b37c:	cmp	r6, r7
    b380:	bne	b358 <ReadCompressedUInt64Data+0x25c>
    b384:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b388:	cmp	r6, #0
    b38c:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b390:	sub	r9, r9, #8
    b394:	mov	r7, #0
    b398:	mov	sl, sp
    b39c:	mov	r3, r4
    b3a0:	mov	r2, sl
    b3a4:	mov	r1, r8
    b3a8:	mov	r0, r5
    b3ac:	bl	3418 <InflateData>
    b3b0:	mov	r0, sl
    b3b4:	bl	1a20 <Mat_int32Swap>
    b3b8:	asr	r1, r0, #31
    b3bc:	strd	r0, [r9, #8]!
    b3c0:	add	r7, r7, #1
    b3c4:	cmp	r6, r7
    b3c8:	bne	b39c <ReadCompressedUInt64Data+0x2a0>
    b3cc:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b3d0:	ldr	r7, [r5, #20]
    b3d4:	cmp	r7, #0
    b3d8:	bne	b420 <ReadCompressedUInt64Data+0x324>
    b3dc:	cmp	r6, #0
    b3e0:	subgt	r9, r9, #8
    b3e4:	movgt	fp, sp
    b3e8:	movgt	sl, #0
    b3ec:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b3f0:	mov	r3, r4
    b3f4:	mov	r2, fp
    b3f8:	mov	r1, r8
    b3fc:	mov	r0, r5
    b400:	bl	3418 <InflateData>
    b404:	ldr	r3, [sp]
    b408:	str	r3, [r9, #8]!
    b40c:	str	sl, [r9, #4]
    b410:	add	r7, r7, #1
    b414:	cmp	r6, r7
    b418:	bne	b3f0 <ReadCompressedUInt64Data+0x2f4>
    b41c:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b420:	cmp	r6, #0
    b424:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b428:	sub	r9, r9, #8
    b42c:	mov	r7, #0
    b430:	mov	sl, sp
    b434:	mov	fp, r7
    b438:	mov	r3, r4
    b43c:	mov	r2, sl
    b440:	mov	r1, r8
    b444:	mov	r0, r5
    b448:	bl	3418 <InflateData>
    b44c:	mov	r0, sl
    b450:	bl	1a88 <Mat_uint32Swap>
    b454:	str	r0, [r9, #8]!
    b458:	str	fp, [r9, #4]
    b45c:	add	r7, r7, #1
    b460:	cmp	r6, r7
    b464:	bne	b438 <ReadCompressedUInt64Data+0x33c>
    b468:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b46c:	ldr	r7, [r5, #20]
    b470:	cmp	r7, #0
    b474:	bne	b4b8 <ReadCompressedUInt64Data+0x3bc>
    b478:	cmp	r6, #0
    b47c:	subgt	r9, r9, #8
    b480:	movgt	sl, sp
    b484:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b488:	mov	r3, r4
    b48c:	mov	r2, sl
    b490:	mov	r1, r8
    b494:	mov	r0, r5
    b498:	bl	3418 <InflateData>
    b49c:	ldrsh	r2, [sp]
    b4a0:	asr	r3, r2, #31
    b4a4:	strd	r2, [r9, #8]!
    b4a8:	add	r7, r7, #1
    b4ac:	cmp	r6, r7
    b4b0:	bne	b488 <ReadCompressedUInt64Data+0x38c>
    b4b4:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b4b8:	cmp	r6, #0
    b4bc:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b4c0:	sub	r9, r9, #8
    b4c4:	mov	r7, #0
    b4c8:	mov	sl, sp
    b4cc:	mov	r3, r4
    b4d0:	mov	r2, sl
    b4d4:	mov	r1, r8
    b4d8:	mov	r0, r5
    b4dc:	bl	3418 <InflateData>
    b4e0:	mov	r0, sl
    b4e4:	bl	1ae4 <Mat_int16Swap>
    b4e8:	sxth	r0, r0
    b4ec:	asr	r1, r0, #31
    b4f0:	strd	r0, [r9, #8]!
    b4f4:	add	r7, r7, #1
    b4f8:	cmp	r6, r7
    b4fc:	bne	b4cc <ReadCompressedUInt64Data+0x3d0>
    b500:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b504:	ldr	r7, [r5, #20]
    b508:	cmp	r7, #0
    b50c:	bne	b550 <ReadCompressedUInt64Data+0x454>
    b510:	cmp	r6, #0
    b514:	subgt	r9, r9, #8
    b518:	movgt	sl, sp
    b51c:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b520:	mov	r3, r4
    b524:	mov	r2, sl
    b528:	mov	r1, r8
    b52c:	mov	r0, r5
    b530:	bl	3418 <InflateData>
    b534:	ldrh	r2, [sp]
    b538:	mov	r3, #0
    b53c:	strd	r2, [r9, #8]!
    b540:	add	r7, r7, #1
    b544:	cmp	r6, r7
    b548:	bne	b520 <ReadCompressedUInt64Data+0x424>
    b54c:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b550:	cmp	r6, #0
    b554:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b558:	sub	r9, r9, #8
    b55c:	mov	r7, #0
    b560:	mov	sl, sp
    b564:	mov	r3, r4
    b568:	mov	r2, sl
    b56c:	mov	r1, r8
    b570:	mov	r0, r5
    b574:	bl	3418 <InflateData>
    b578:	mov	r0, sl
    b57c:	bl	1b1c <Mat_uint16Swap>
    b580:	uxth	r0, r0
    b584:	mov	r1, #0
    b588:	strd	r0, [r9, #8]!
    b58c:	add	r7, r7, #1
    b590:	cmp	r6, r7
    b594:	bne	b564 <ReadCompressedUInt64Data+0x468>
    b598:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b59c:	cmp	r7, #12
    b5a0:	beq	b5f4 <ReadCompressedUInt64Data+0x4f8>
    b5a4:	cmp	r7, #13
    b5a8:	bne	b1bc <ReadCompressedUInt64Data+0xc0>
    b5ac:	ldr	r7, [r5, #20]
    b5b0:	cmp	r7, #0
    b5b4:	bne	b680 <ReadCompressedUInt64Data+0x584>
    b5b8:	cmp	r6, #0
    b5bc:	subgt	r9, r9, #8
    b5c0:	movgt	sl, sp
    b5c4:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b5c8:	mov	r3, r4
    b5cc:	mov	r2, sl
    b5d0:	mov	r1, r8
    b5d4:	mov	r0, r5
    b5d8:	bl	3418 <InflateData>
    b5dc:	ldrd	r2, [sp]
    b5e0:	strd	r2, [r9, #8]!
    b5e4:	add	r7, r7, #1
    b5e8:	cmp	r6, r7
    b5ec:	bne	b5c8 <ReadCompressedUInt64Data+0x4cc>
    b5f0:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b5f4:	ldr	r7, [r5, #20]
    b5f8:	cmp	r7, #0
    b5fc:	bne	b63c <ReadCompressedUInt64Data+0x540>
    b600:	cmp	r6, #0
    b604:	subgt	r9, r9, #8
    b608:	movgt	sl, sp
    b60c:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b610:	mov	r3, r4
    b614:	mov	r2, sl
    b618:	mov	r1, r8
    b61c:	mov	r0, r5
    b620:	bl	3418 <InflateData>
    b624:	ldrd	r2, [sp]
    b628:	strd	r2, [r9, #8]!
    b62c:	add	r7, r7, #1
    b630:	cmp	r6, r7
    b634:	bne	b610 <ReadCompressedUInt64Data+0x514>
    b638:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b63c:	cmp	r6, #0
    b640:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b644:	sub	r9, r9, #8
    b648:	mov	r7, #0
    b64c:	mov	sl, sp
    b650:	mov	r3, r4
    b654:	mov	r2, sl
    b658:	mov	r1, r8
    b65c:	mov	r0, r5
    b660:	bl	3418 <InflateData>
    b664:	mov	r0, sl
    b668:	bl	18bc <Mat_int64Swap>
    b66c:	strd	r0, [r9, #8]!
    b670:	add	r7, r7, #1
    b674:	cmp	r6, r7
    b678:	bne	b650 <ReadCompressedUInt64Data+0x554>
    b67c:	b	b1bc <ReadCompressedUInt64Data+0xc0>
    b680:	cmp	r6, #0
    b684:	ble	b1bc <ReadCompressedUInt64Data+0xc0>
    b688:	sub	r9, r9, #8
    b68c:	mov	r7, #0
    b690:	mov	sl, sp
    b694:	mov	r3, r4
    b698:	mov	r2, sl
    b69c:	mov	r1, r8
    b6a0:	mov	r0, r5
    b6a4:	bl	3418 <InflateData>
    b6a8:	mov	r0, sl
    b6ac:	bl	1984 <Mat_uint64Swap>
    b6b0:	strd	r0, [r9, #8]!
    b6b4:	add	r7, r7, #1
    b6b8:	cmp	r6, r7
    b6bc:	bne	b694 <ReadCompressedUInt64Data+0x598>
    b6c0:	b	b1bc <ReadCompressedUInt64Data+0xc0>

0000b6c4 <ReadInt32Data>:
    b6c4:	cmp	r1, #0
    b6c8:	cmpne	r0, #0
    b6cc:	beq	cc94 <ReadInt32Data+0x15d0>
    b6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6d4:	sub	sp, sp, #2064	; 0x810
    b6d8:	sub	sp, sp, #4
    b6dc:	mov	r9, r0
    b6e0:	mov	ip, r1
    b6e4:	ldr	r1, [r0]
    b6e8:	cmp	r1, #0
    b6ec:	moveq	r0, #0
    b6f0:	beq	c610 <ReadInt32Data+0xf4c>
    b6f4:	str	ip, [sp, #4]
    b6f8:	mov	r7, r3
    b6fc:	mov	r4, r2
    b700:	mov	r0, r2
    b704:	bl	1600 <Mat_SizeOf@plt>
    b708:	str	r0, [sp]
    b70c:	sub	r3, r4, #1
    b710:	cmp	r3, #8
    b714:	addls	pc, pc, r3, lsl #2
    b718:	b	c7d8 <ReadInt32Data+0x1114>
    b71c:	b	c58c <ReadInt32Data+0xec8>
    b720:	b	c6bc <ReadInt32Data+0xff8>
    b724:	b	c0d4 <ReadInt32Data+0xa10>
    b728:	b	c330 <ReadInt32Data+0xc6c>
    b72c:	b	bc24 <ReadInt32Data+0x560>
    b730:	b	be7c <ReadInt32Data+0x7b8>
    b734:	b	b9b4 <ReadInt32Data+0x2f0>
    b738:	b	c7d8 <ReadInt32Data+0x1114>
    b73c:	b	b740 <ReadInt32Data+0x7c>
    b740:	ldr	r8, [r9, #20]
    b744:	cmp	r8, #0
    b748:	beq	b894 <ReadInt32Data+0x1d0>
    b74c:	cmp	r7, #256	; 0x100
    b750:	ble	b844 <ReadInt32Data+0x180>
    b754:	sub	r3, r7, #256	; 0x100
    b758:	mov	r2, r3
    b75c:	cmp	r3, #0
    b760:	movle	sl, #0
    b764:	movle	r8, sl
    b768:	ble	b7e4 <ReadInt32Data+0x120>
    b76c:	ldr	r3, [sp, #4]
    b770:	sub	fp, r3, #4
    b774:	mov	sl, #0
    b778:	mov	r8, sl
    b77c:	add	r3, sp, #16
    b780:	str	r3, [sp, #8]
    b784:	str	r7, [sp, #12]
    b788:	mov	r7, r2
    b78c:	ldr	r3, [r9]
    b790:	mov	r2, #256	; 0x100
    b794:	ldr	r1, [sp]
    b798:	ldr	r4, [sp, #8]
    b79c:	mov	r0, r4
    b7a0:	bl	1588 <fread@plt>
    b7a4:	add	r8, r8, r0
    b7a8:	add	r6, sp, #2064	; 0x810
    b7ac:	mov	r5, fp
    b7b0:	mov	r0, r4
    b7b4:	bl	1b94 <Mat_doubleSwap>
    b7b8:	vcvt.s32.f64	s0, d0
    b7bc:	vmov	r3, s0
    b7c0:	str	r3, [r5, #4]!
    b7c4:	add	r4, r4, #8
    b7c8:	cmp	r4, r6
    b7cc:	bne	b7b0 <ReadInt32Data+0xec>
    b7d0:	add	sl, sl, #256	; 0x100
    b7d4:	add	fp, fp, #1024	; 0x400
    b7d8:	cmp	sl, r7
    b7dc:	blt	b78c <ReadInt32Data+0xc8>
    b7e0:	ldr	r7, [sp, #12]
    b7e4:	cmp	r7, sl
    b7e8:	ble	c608 <ReadInt32Data+0xf44>
    b7ec:	sub	r7, r7, sl
    b7f0:	ldr	r3, [r9]
    b7f4:	mov	r2, r7
    b7f8:	ldr	r1, [sp]
    b7fc:	add	r0, sp, #16
    b800:	bl	1588 <fread@plt>
    b804:	add	r8, r8, r0
    b808:	cmp	r7, #0
    b80c:	ble	c608 <ReadInt32Data+0xf44>
    b810:	add	r5, sp, #16
    b814:	ldr	r3, [sp, #4]
    b818:	add	sl, r3, sl, lsl #2
    b81c:	mov	r4, #0
    b820:	mov	r0, r5
    b824:	bl	1b94 <Mat_doubleSwap>
    b828:	vcvt.s32.f64	s0, d0
    b82c:	vstmia	sl!, {s0}
    b830:	add	r4, r4, #1
    b834:	add	r5, r5, #8
    b838:	cmp	r7, r4
    b83c:	bne	b820 <ReadInt32Data+0x15c>
    b840:	b	c608 <ReadInt32Data+0xf44>
    b844:	ldr	r3, [r9]
    b848:	mov	r2, r7
    b84c:	ldr	r1, [sp]
    b850:	add	r0, sp, #16
    b854:	bl	1588 <fread@plt>
    b858:	mov	r8, r0
    b85c:	cmp	r7, #0
    b860:	ble	c608 <ReadInt32Data+0xf44>
    b864:	add	r5, sp, #16
    b868:	ldr	r3, [sp, #4]
    b86c:	mov	r4, r3
    b870:	add	r7, r3, r7, lsl #2
    b874:	mov	r0, r5
    b878:	bl	1b94 <Mat_doubleSwap>
    b87c:	vcvt.s32.f64	s0, d0
    b880:	vstmia	r4!, {s0}
    b884:	add	r5, r5, #8
    b888:	cmp	r4, r7
    b88c:	bne	b874 <ReadInt32Data+0x1b0>
    b890:	b	c608 <ReadInt32Data+0xf44>
    b894:	cmp	r7, #256	; 0x100
    b898:	ble	b968 <ReadInt32Data+0x2a4>
    b89c:	sub	sl, r7, #256	; 0x100
    b8a0:	cmp	sl, #0
    b8a4:	movle	r4, r8
    b8a8:	ble	b90c <ReadInt32Data+0x248>
    b8ac:	ldr	r3, [sp, #4]
    b8b0:	sub	r5, r3, #4
    b8b4:	mov	r4, r8
    b8b8:	add	r6, sp, #16
    b8bc:	mov	fp, #256	; 0x100
    b8c0:	ldr	r3, [r9]
    b8c4:	mov	r2, fp
    b8c8:	ldr	r1, [sp]
    b8cc:	mov	r0, r6
    b8d0:	bl	1588 <fread@plt>
    b8d4:	add	r8, r8, r0
    b8d8:	mov	r3, r6
    b8dc:	add	r1, sp, #2064	; 0x810
    b8e0:	mov	r2, r5
    b8e4:	vldmia	r3!, {d7}
    b8e8:	vcvt.s32.f64	s14, d7
    b8ec:	vmov	r0, s14
    b8f0:	str	r0, [r2, #4]!
    b8f4:	cmp	r3, r1
    b8f8:	bne	b8e4 <ReadInt32Data+0x220>
    b8fc:	add	r4, r4, #256	; 0x100
    b900:	add	r5, r5, #1024	; 0x400
    b904:	cmp	r4, sl
    b908:	blt	b8c0 <ReadInt32Data+0x1fc>
    b90c:	cmp	r7, r4
    b910:	ble	c608 <ReadInt32Data+0xf44>
    b914:	sub	r7, r7, r4
    b918:	ldr	r3, [r9]
    b91c:	mov	r2, r7
    b920:	ldr	r1, [sp]
    b924:	add	r0, sp, #16
    b928:	bl	1588 <fread@plt>
    b92c:	add	r8, r8, r0
    b930:	cmp	r7, #0
    b934:	ble	c608 <ReadInt32Data+0xf44>
    b938:	add	r2, sp, #16
    b93c:	sub	r3, r4, #-1073741823	; 0xc0000001
    b940:	ldr	r1, [sp, #4]
    b944:	add	r3, r1, r3, lsl #2
    b948:	add	r7, r2, r7, lsl #3
    b94c:	vldmia	r2!, {d7}
    b950:	vcvt.s32.f64	s14, d7
    b954:	vmov	r1, s14
    b958:	str	r1, [r3, #4]!
    b95c:	cmp	r2, r7
    b960:	bne	b94c <ReadInt32Data+0x288>
    b964:	b	c608 <ReadInt32Data+0xf44>
    b968:	ldr	r3, [r9]
    b96c:	mov	r2, r7
    b970:	ldr	r1, [sp]
    b974:	add	r0, sp, #16
    b978:	bl	1588 <fread@plt>
    b97c:	mov	r8, r0
    b980:	cmp	r7, #0
    b984:	ble	c608 <ReadInt32Data+0xf44>
    b988:	add	r3, sp, #16
    b98c:	ldr	r2, [sp, #4]
    b990:	sub	r2, r2, #4
    b994:	add	r7, r3, r7, lsl #3
    b998:	vldmia	r3!, {d7}
    b99c:	vcvt.s32.f64	s14, d7
    b9a0:	vmov	r1, s14
    b9a4:	str	r1, [r2, #4]!
    b9a8:	cmp	r3, r7
    b9ac:	bne	b998 <ReadInt32Data+0x2d4>
    b9b0:	b	c608 <ReadInt32Data+0xf44>
    b9b4:	ldr	r8, [r9, #20]
    b9b8:	cmp	r8, #0
    b9bc:	beq	bb08 <ReadInt32Data+0x444>
    b9c0:	cmp	r7, #256	; 0x100
    b9c4:	ble	bab8 <ReadInt32Data+0x3f4>
    b9c8:	sub	r3, r7, #256	; 0x100
    b9cc:	mov	r2, r3
    b9d0:	cmp	r3, #0
    b9d4:	movle	sl, #0
    b9d8:	movle	r8, sl
    b9dc:	ble	ba58 <ReadInt32Data+0x394>
    b9e0:	ldr	r3, [sp, #4]
    b9e4:	sub	fp, r3, #4
    b9e8:	mov	sl, #0
    b9ec:	mov	r8, sl
    b9f0:	add	r3, sp, #16
    b9f4:	str	r3, [sp, #8]
    b9f8:	add	r6, sp, #1040	; 0x410
    b9fc:	str	r7, [sp, #12]
    ba00:	mov	r7, r2
    ba04:	ldr	r3, [r9]
    ba08:	mov	r2, #256	; 0x100
    ba0c:	ldr	r1, [sp]
    ba10:	ldr	r4, [sp, #8]
    ba14:	mov	r0, r4
    ba18:	bl	1588 <fread@plt>
    ba1c:	add	r8, r8, r0
    ba20:	mov	r5, fp
    ba24:	mov	r0, r4
    ba28:	bl	1b38 <Mat_floatSwap>
    ba2c:	vcvt.s32.f32	s0, s0
    ba30:	vmov	r3, s0
    ba34:	str	r3, [r5, #4]!
    ba38:	add	r4, r4, #4
    ba3c:	cmp	r4, r6
    ba40:	bne	ba24 <ReadInt32Data+0x360>
    ba44:	add	sl, sl, #256	; 0x100
    ba48:	add	fp, fp, #1024	; 0x400
    ba4c:	cmp	sl, r7
    ba50:	blt	ba04 <ReadInt32Data+0x340>
    ba54:	ldr	r7, [sp, #12]
    ba58:	cmp	r7, sl
    ba5c:	ble	c608 <ReadInt32Data+0xf44>
    ba60:	sub	r7, r7, sl
    ba64:	ldr	r3, [r9]
    ba68:	mov	r2, r7
    ba6c:	ldr	r1, [sp]
    ba70:	add	r0, sp, #16
    ba74:	bl	1588 <fread@plt>
    ba78:	add	r8, r8, r0
    ba7c:	cmp	r7, #0
    ba80:	ble	c608 <ReadInt32Data+0xf44>
    ba84:	add	r5, sp, #16
    ba88:	ldr	r3, [sp, #4]
    ba8c:	add	sl, r3, sl, lsl #2
    ba90:	mov	r4, #0
    ba94:	mov	r0, r5
    ba98:	bl	1b38 <Mat_floatSwap>
    ba9c:	vcvt.s32.f32	s0, s0
    baa0:	vstmia	sl!, {s0}
    baa4:	add	r4, r4, #1
    baa8:	add	r5, r5, #4
    baac:	cmp	r7, r4
    bab0:	bne	ba94 <ReadInt32Data+0x3d0>
    bab4:	b	c608 <ReadInt32Data+0xf44>
    bab8:	ldr	r3, [r9]
    babc:	mov	r2, r7
    bac0:	ldr	r1, [sp]
    bac4:	add	r0, sp, #16
    bac8:	bl	1588 <fread@plt>
    bacc:	mov	r8, r0
    bad0:	cmp	r7, #0
    bad4:	ble	c608 <ReadInt32Data+0xf44>
    bad8:	add	r5, sp, #16
    badc:	ldr	r3, [sp, #4]
    bae0:	mov	r4, r3
    bae4:	add	r7, r3, r7, lsl #2
    bae8:	mov	r0, r5
    baec:	bl	1b38 <Mat_floatSwap>
    baf0:	vcvt.s32.f32	s0, s0
    baf4:	vstmia	r4!, {s0}
    baf8:	add	r5, r5, #4
    bafc:	cmp	r4, r7
    bb00:	bne	bae8 <ReadInt32Data+0x424>
    bb04:	b	c608 <ReadInt32Data+0xf44>
    bb08:	cmp	r7, #256	; 0x100
    bb0c:	ble	bbd8 <ReadInt32Data+0x514>
    bb10:	sub	sl, r7, #256	; 0x100
    bb14:	cmp	sl, #0
    bb18:	movle	r5, r8
    bb1c:	ble	bb7c <ReadInt32Data+0x4b8>
    bb20:	ldr	r3, [sp, #4]
    bb24:	sub	r6, r3, #4
    bb28:	mov	r5, r8
    bb2c:	add	fp, sp, #16
    bb30:	add	r4, sp, #1040	; 0x410
    bb34:	ldr	r3, [r9]
    bb38:	mov	r2, #256	; 0x100
    bb3c:	ldr	r1, [sp]
    bb40:	mov	r0, fp
    bb44:	bl	1588 <fread@plt>
    bb48:	add	r8, r8, r0
    bb4c:	mov	r3, fp
    bb50:	mov	r2, r6
    bb54:	vldmia	r3!, {s15}
    bb58:	vcvt.s32.f32	s15, s15
    bb5c:	vmov	r1, s15
    bb60:	str	r1, [r2, #4]!
    bb64:	cmp	r3, r4
    bb68:	bne	bb54 <ReadInt32Data+0x490>
    bb6c:	add	r5, r5, #256	; 0x100
    bb70:	add	r6, r6, #1024	; 0x400
    bb74:	cmp	r5, sl
    bb78:	blt	bb34 <ReadInt32Data+0x470>
    bb7c:	cmp	r7, r5
    bb80:	ble	c608 <ReadInt32Data+0xf44>
    bb84:	sub	r7, r7, r5
    bb88:	ldr	r3, [r9]
    bb8c:	mov	r2, r7
    bb90:	ldr	r1, [sp]
    bb94:	add	r0, sp, #16
    bb98:	bl	1588 <fread@plt>
    bb9c:	add	r8, r8, r0
    bba0:	cmp	r7, #0
    bba4:	ble	c608 <ReadInt32Data+0xf44>
    bba8:	add	r2, sp, #16
    bbac:	sub	r3, r5, #-1073741823	; 0xc0000001
    bbb0:	ldr	r1, [sp, #4]
    bbb4:	add	r3, r1, r3, lsl #2
    bbb8:	add	r7, r2, r7, lsl #2
    bbbc:	vldmia	r2!, {s15}
    bbc0:	vcvt.s32.f32	s15, s15
    bbc4:	vmov	r1, s15
    bbc8:	str	r1, [r3, #4]!
    bbcc:	cmp	r2, r7
    bbd0:	bne	bbbc <ReadInt32Data+0x4f8>
    bbd4:	b	c608 <ReadInt32Data+0xf44>
    bbd8:	ldr	r3, [r9]
    bbdc:	mov	r2, r7
    bbe0:	ldr	r1, [sp]
    bbe4:	add	r0, sp, #16
    bbe8:	bl	1588 <fread@plt>
    bbec:	mov	r8, r0
    bbf0:	cmp	r7, #0
    bbf4:	ble	c608 <ReadInt32Data+0xf44>
    bbf8:	add	r3, sp, #16
    bbfc:	ldr	r2, [sp, #4]
    bc00:	sub	r2, r2, #4
    bc04:	add	r7, r3, r7, lsl #2
    bc08:	vldmia	r3!, {s15}
    bc0c:	vcvt.s32.f32	s15, s15
    bc10:	vmov	r1, s15
    bc14:	str	r1, [r2, #4]!
    bc18:	cmp	r3, r7
    bc1c:	bne	bc08 <ReadInt32Data+0x544>
    bc20:	b	c608 <ReadInt32Data+0xf44>
    bc24:	ldr	r8, [r9, #20]
    bc28:	cmp	r8, #0
    bc2c:	beq	bd68 <ReadInt32Data+0x6a4>
    bc30:	cmp	r7, #256	; 0x100
    bc34:	ble	bd1c <ReadInt32Data+0x658>
    bc38:	sub	r3, r7, #256	; 0x100
    bc3c:	mov	r2, r3
    bc40:	cmp	r3, #0
    bc44:	movle	sl, #0
    bc48:	movle	r8, sl
    bc4c:	ble	bcc0 <ReadInt32Data+0x5fc>
    bc50:	ldr	r3, [sp, #4]
    bc54:	sub	fp, r3, #4
    bc58:	mov	sl, #0
    bc5c:	mov	r8, sl
    bc60:	add	r3, sp, #16
    bc64:	str	r3, [sp, #8]
    bc68:	add	r6, sp, #1040	; 0x410
    bc6c:	str	r7, [sp, #12]
    bc70:	mov	r7, r2
    bc74:	ldr	r3, [r9]
    bc78:	mov	r2, #256	; 0x100
    bc7c:	ldr	r1, [sp]
    bc80:	ldr	r4, [sp, #8]
    bc84:	mov	r0, r4
    bc88:	bl	1588 <fread@plt>
    bc8c:	add	r8, r8, r0
    bc90:	mov	r5, fp
    bc94:	mov	r0, r4
    bc98:	bl	1a20 <Mat_int32Swap>
    bc9c:	str	r0, [r5, #4]!
    bca0:	add	r4, r4, #4
    bca4:	cmp	r4, r6
    bca8:	bne	bc94 <ReadInt32Data+0x5d0>
    bcac:	add	sl, sl, #256	; 0x100
    bcb0:	add	fp, fp, #1024	; 0x400
    bcb4:	cmp	sl, r7
    bcb8:	blt	bc74 <ReadInt32Data+0x5b0>
    bcbc:	ldr	r7, [sp, #12]
    bcc0:	cmp	r7, sl
    bcc4:	ble	c608 <ReadInt32Data+0xf44>
    bcc8:	sub	r7, r7, sl
    bccc:	ldr	r3, [r9]
    bcd0:	mov	r2, r7
    bcd4:	ldr	r1, [sp]
    bcd8:	add	r0, sp, #16
    bcdc:	bl	1588 <fread@plt>
    bce0:	add	r8, r8, r0
    bce4:	cmp	r7, #0
    bce8:	ble	c608 <ReadInt32Data+0xf44>
    bcec:	add	r5, sp, #16
    bcf0:	ldr	r3, [sp, #4]
    bcf4:	add	sl, r3, sl, lsl #2
    bcf8:	mov	r4, #0
    bcfc:	mov	r0, r5
    bd00:	bl	1a20 <Mat_int32Swap>
    bd04:	str	r0, [sl], #4
    bd08:	add	r4, r4, #1
    bd0c:	add	r5, r5, #4
    bd10:	cmp	r7, r4
    bd14:	bne	bcfc <ReadInt32Data+0x638>
    bd18:	b	c608 <ReadInt32Data+0xf44>
    bd1c:	ldr	r3, [r9]
    bd20:	mov	r2, r7
    bd24:	ldr	r1, [sp]
    bd28:	add	r0, sp, #16
    bd2c:	bl	1588 <fread@plt>
    bd30:	mov	r8, r0
    bd34:	cmp	r7, #0
    bd38:	ble	c608 <ReadInt32Data+0xf44>
    bd3c:	add	r5, sp, #16
    bd40:	ldr	r3, [sp, #4]
    bd44:	mov	r4, r3
    bd48:	add	r7, r3, r7, lsl #2
    bd4c:	mov	r0, r5
    bd50:	bl	1a20 <Mat_int32Swap>
    bd54:	str	r0, [r4], #4
    bd58:	add	r5, r5, #4
    bd5c:	cmp	r4, r7
    bd60:	bne	bd4c <ReadInt32Data+0x688>
    bd64:	b	c608 <ReadInt32Data+0xf44>
    bd68:	cmp	r7, #256	; 0x100
    bd6c:	ble	be30 <ReadInt32Data+0x76c>
    bd70:	sub	fp, r7, #256	; 0x100
    bd74:	cmp	fp, #0
    bd78:	movle	r5, r8
    bd7c:	ble	bdd4 <ReadInt32Data+0x710>
    bd80:	ldr	r3, [sp, #4]
    bd84:	sub	r6, r3, #4
    bd88:	mov	r5, r8
    bd8c:	add	sl, sp, #16
    bd90:	add	r4, sl, #1020	; 0x3fc
    bd94:	ldr	r3, [r9]
    bd98:	mov	r2, #256	; 0x100
    bd9c:	ldr	r1, [sp]
    bda0:	mov	r0, sl
    bda4:	bl	1588 <fread@plt>
    bda8:	add	r8, r8, r0
    bdac:	sub	r3, sl, #4
    bdb0:	mov	r2, r6
    bdb4:	ldr	r1, [r3, #4]!
    bdb8:	str	r1, [r2, #4]!
    bdbc:	cmp	r3, r4
    bdc0:	bne	bdb4 <ReadInt32Data+0x6f0>
    bdc4:	add	r5, r5, #256	; 0x100
    bdc8:	add	r6, r6, #1024	; 0x400
    bdcc:	cmp	r5, fp
    bdd0:	blt	bd94 <ReadInt32Data+0x6d0>
    bdd4:	cmp	r7, r5
    bdd8:	ble	c608 <ReadInt32Data+0xf44>
    bddc:	sub	r7, r7, r5
    bde0:	ldr	r3, [r9]
    bde4:	mov	r2, r7
    bde8:	ldr	r1, [sp]
    bdec:	add	r0, sp, #16
    bdf0:	bl	1588 <fread@plt>
    bdf4:	add	r8, r8, r0
    bdf8:	cmp	r7, #0
    bdfc:	ble	c608 <ReadInt32Data+0xf44>
    be00:	add	r0, sp, #16
    be04:	add	r2, sp, #12
    be08:	sub	r3, r5, #-1073741823	; 0xc0000001
    be0c:	ldr	r1, [sp, #4]
    be10:	add	r3, r1, r3, lsl #2
    be14:	sub	r7, r7, #-1073741823	; 0xc0000001
    be18:	add	r0, r0, r7, lsl #2
    be1c:	ldr	r1, [r2, #4]!
    be20:	str	r1, [r3, #4]!
    be24:	cmp	r2, r0
    be28:	bne	be1c <ReadInt32Data+0x758>
    be2c:	b	c608 <ReadInt32Data+0xf44>
    be30:	ldr	r3, [r9]
    be34:	mov	r2, r7
    be38:	ldr	r1, [sp]
    be3c:	add	r0, sp, #16
    be40:	bl	1588 <fread@plt>
    be44:	mov	r8, r0
    be48:	cmp	r7, #0
    be4c:	ble	c608 <ReadInt32Data+0xf44>
    be50:	add	r0, sp, #16
    be54:	add	r3, sp, #12
    be58:	ldr	r2, [sp, #4]
    be5c:	sub	r2, r2, #4
    be60:	sub	r7, r7, #-1073741823	; 0xc0000001
    be64:	add	r0, r0, r7, lsl #2
    be68:	ldr	r1, [r3, #4]!
    be6c:	str	r1, [r2, #4]!
    be70:	cmp	r3, r0
    be74:	bne	be68 <ReadInt32Data+0x7a4>
    be78:	b	c608 <ReadInt32Data+0xf44>
    be7c:	ldr	r8, [r9, #20]
    be80:	cmp	r8, #0
    be84:	beq	bfc0 <ReadInt32Data+0x8fc>
    be88:	cmp	r7, #256	; 0x100
    be8c:	ble	bf74 <ReadInt32Data+0x8b0>
    be90:	sub	r3, r7, #256	; 0x100
    be94:	mov	r2, r3
    be98:	cmp	r3, #0
    be9c:	movle	sl, #0
    bea0:	movle	r8, sl
    bea4:	ble	bf18 <ReadInt32Data+0x854>
    bea8:	ldr	r3, [sp, #4]
    beac:	sub	fp, r3, #4
    beb0:	mov	sl, #0
    beb4:	mov	r8, sl
    beb8:	add	r3, sp, #16
    bebc:	str	r3, [sp, #8]
    bec0:	add	r6, sp, #1040	; 0x410
    bec4:	str	r7, [sp, #12]
    bec8:	mov	r7, r2
    becc:	ldr	r3, [r9]
    bed0:	mov	r2, #256	; 0x100
    bed4:	ldr	r1, [sp]
    bed8:	ldr	r4, [sp, #8]
    bedc:	mov	r0, r4
    bee0:	bl	1588 <fread@plt>
    bee4:	add	r8, r8, r0
    bee8:	mov	r5, fp
    beec:	mov	r0, r4
    bef0:	bl	1a88 <Mat_uint32Swap>
    bef4:	str	r0, [r5, #4]!
    bef8:	add	r4, r4, #4
    befc:	cmp	r4, r6
    bf00:	bne	beec <ReadInt32Data+0x828>
    bf04:	add	sl, sl, #256	; 0x100
    bf08:	add	fp, fp, #1024	; 0x400
    bf0c:	cmp	sl, r7
    bf10:	blt	becc <ReadInt32Data+0x808>
    bf14:	ldr	r7, [sp, #12]
    bf18:	cmp	r7, sl
    bf1c:	ble	c608 <ReadInt32Data+0xf44>
    bf20:	sub	r7, r7, sl
    bf24:	ldr	r3, [r9]
    bf28:	mov	r2, r7
    bf2c:	ldr	r1, [sp]
    bf30:	add	r0, sp, #16
    bf34:	bl	1588 <fread@plt>
    bf38:	add	r8, r8, r0
    bf3c:	cmp	r7, #0
    bf40:	ble	c608 <ReadInt32Data+0xf44>
    bf44:	add	r5, sp, #16
    bf48:	ldr	r3, [sp, #4]
    bf4c:	add	sl, r3, sl, lsl #2
    bf50:	mov	r4, #0
    bf54:	mov	r0, r5
    bf58:	bl	1a88 <Mat_uint32Swap>
    bf5c:	str	r0, [sl], #4
    bf60:	add	r4, r4, #1
    bf64:	add	r5, r5, #4
    bf68:	cmp	r7, r4
    bf6c:	bne	bf54 <ReadInt32Data+0x890>
    bf70:	b	c608 <ReadInt32Data+0xf44>
    bf74:	ldr	r3, [r9]
    bf78:	mov	r2, r7
    bf7c:	ldr	r1, [sp]
    bf80:	add	r0, sp, #16
    bf84:	bl	1588 <fread@plt>
    bf88:	mov	r8, r0
    bf8c:	cmp	r7, #0
    bf90:	ble	c608 <ReadInt32Data+0xf44>
    bf94:	add	r5, sp, #16
    bf98:	ldr	r3, [sp, #4]
    bf9c:	mov	r4, r3
    bfa0:	add	r7, r3, r7, lsl #2
    bfa4:	mov	r0, r5
    bfa8:	bl	1a88 <Mat_uint32Swap>
    bfac:	str	r0, [r4], #4
    bfb0:	add	r5, r5, #4
    bfb4:	cmp	r4, r7
    bfb8:	bne	bfa4 <ReadInt32Data+0x8e0>
    bfbc:	b	c608 <ReadInt32Data+0xf44>
    bfc0:	cmp	r7, #256	; 0x100
    bfc4:	ble	c088 <ReadInt32Data+0x9c4>
    bfc8:	sub	fp, r7, #256	; 0x100
    bfcc:	cmp	fp, #0
    bfd0:	movle	r5, r8
    bfd4:	ble	c02c <ReadInt32Data+0x968>
    bfd8:	ldr	r3, [sp, #4]
    bfdc:	sub	r6, r3, #4
    bfe0:	mov	r5, r8
    bfe4:	add	sl, sp, #16
    bfe8:	add	r4, sl, #1020	; 0x3fc
    bfec:	ldr	r3, [r9]
    bff0:	mov	r2, #256	; 0x100
    bff4:	ldr	r1, [sp]
    bff8:	mov	r0, sl
    bffc:	bl	1588 <fread@plt>
    c000:	add	r8, r8, r0
    c004:	sub	r3, sl, #4
    c008:	mov	r2, r6
    c00c:	ldr	r1, [r3, #4]!
    c010:	str	r1, [r2, #4]!
    c014:	cmp	r3, r4
    c018:	bne	c00c <ReadInt32Data+0x948>
    c01c:	add	r5, r5, #256	; 0x100
    c020:	add	r6, r6, #1024	; 0x400
    c024:	cmp	r5, fp
    c028:	blt	bfec <ReadInt32Data+0x928>
    c02c:	cmp	r7, r5
    c030:	ble	c608 <ReadInt32Data+0xf44>
    c034:	sub	r7, r7, r5
    c038:	ldr	r3, [r9]
    c03c:	mov	r2, r7
    c040:	ldr	r1, [sp]
    c044:	add	r0, sp, #16
    c048:	bl	1588 <fread@plt>
    c04c:	add	r8, r8, r0
    c050:	cmp	r7, #0
    c054:	ble	c608 <ReadInt32Data+0xf44>
    c058:	add	r0, sp, #16
    c05c:	add	r2, sp, #12
    c060:	sub	r3, r5, #-1073741823	; 0xc0000001
    c064:	ldr	r1, [sp, #4]
    c068:	add	r3, r1, r3, lsl #2
    c06c:	sub	r7, r7, #-1073741823	; 0xc0000001
    c070:	add	r0, r0, r7, lsl #2
    c074:	ldr	r1, [r2, #4]!
    c078:	str	r1, [r3, #4]!
    c07c:	cmp	r2, r0
    c080:	bne	c074 <ReadInt32Data+0x9b0>
    c084:	b	c608 <ReadInt32Data+0xf44>
    c088:	ldr	r3, [r9]
    c08c:	mov	r2, r7
    c090:	ldr	r1, [sp]
    c094:	add	r0, sp, #16
    c098:	bl	1588 <fread@plt>
    c09c:	mov	r8, r0
    c0a0:	cmp	r7, #0
    c0a4:	ble	c608 <ReadInt32Data+0xf44>
    c0a8:	add	r0, sp, #16
    c0ac:	add	r3, sp, #12
    c0b0:	ldr	r2, [sp, #4]
    c0b4:	sub	r2, r2, #4
    c0b8:	sub	r7, r7, #-1073741823	; 0xc0000001
    c0bc:	add	r0, r0, r7, lsl #2
    c0c0:	ldr	r1, [r3, #4]!
    c0c4:	str	r1, [r2, #4]!
    c0c8:	cmp	r3, r0
    c0cc:	bne	c0c0 <ReadInt32Data+0x9fc>
    c0d0:	b	c608 <ReadInt32Data+0xf44>
    c0d4:	ldr	r8, [r9, #20]
    c0d8:	cmp	r8, #0
    c0dc:	beq	c218 <ReadInt32Data+0xb54>
    c0e0:	cmp	r7, #256	; 0x100
    c0e4:	ble	c1cc <ReadInt32Data+0xb08>
    c0e8:	sub	r3, r7, #256	; 0x100
    c0ec:	mov	r2, r3
    c0f0:	cmp	r3, #0
    c0f4:	movle	sl, #0
    c0f8:	movle	r8, sl
    c0fc:	ble	c170 <ReadInt32Data+0xaac>
    c100:	ldr	r3, [sp, #4]
    c104:	sub	fp, r3, #4
    c108:	mov	sl, #0
    c10c:	mov	r8, sl
    c110:	add	r3, sp, #16
    c114:	str	r3, [sp, #8]
    c118:	add	r6, sp, #528	; 0x210
    c11c:	str	r7, [sp, #12]
    c120:	mov	r7, r2
    c124:	ldr	r3, [r9]
    c128:	mov	r2, #256	; 0x100
    c12c:	ldr	r1, [sp]
    c130:	ldr	r4, [sp, #8]
    c134:	mov	r0, r4
    c138:	bl	1588 <fread@plt>
    c13c:	add	r8, r8, r0
    c140:	mov	r5, fp
    c144:	mov	r0, r4
    c148:	bl	1ae4 <Mat_int16Swap>
    c14c:	str	r0, [r5, #4]!
    c150:	add	r4, r4, #2
    c154:	cmp	r4, r6
    c158:	bne	c144 <ReadInt32Data+0xa80>
    c15c:	add	sl, sl, #256	; 0x100
    c160:	add	fp, fp, #1024	; 0x400
    c164:	cmp	sl, r7
    c168:	blt	c124 <ReadInt32Data+0xa60>
    c16c:	ldr	r7, [sp, #12]
    c170:	cmp	r7, sl
    c174:	ble	c608 <ReadInt32Data+0xf44>
    c178:	sub	r7, r7, sl
    c17c:	ldr	r3, [r9]
    c180:	mov	r2, r7
    c184:	ldr	r1, [sp]
    c188:	add	r0, sp, #16
    c18c:	bl	1588 <fread@plt>
    c190:	add	r8, r8, r0
    c194:	cmp	r7, #0
    c198:	ble	c608 <ReadInt32Data+0xf44>
    c19c:	ldr	r3, [sp, #4]
    c1a0:	add	sl, r3, sl, lsl #2
    c1a4:	lsl	r7, r7, #1
    c1a8:	mov	r4, #0
    c1ac:	add	r5, sp, #16
    c1b0:	add	r0, r5, r4
    c1b4:	bl	1ae4 <Mat_int16Swap>
    c1b8:	str	r0, [sl], #4
    c1bc:	add	r4, r4, #2
    c1c0:	cmp	r4, r7
    c1c4:	bne	c1b0 <ReadInt32Data+0xaec>
    c1c8:	b	c608 <ReadInt32Data+0xf44>
    c1cc:	ldr	r3, [r9]
    c1d0:	mov	r2, r7
    c1d4:	ldr	r1, [sp]
    c1d8:	add	r0, sp, #16
    c1dc:	bl	1588 <fread@plt>
    c1e0:	mov	r8, r0
    c1e4:	cmp	r7, #0
    c1e8:	ble	c608 <ReadInt32Data+0xf44>
    c1ec:	add	r5, sp, #16
    c1f0:	ldr	r3, [sp, #4]
    c1f4:	mov	r4, r3
    c1f8:	add	r7, r3, r7, lsl #2
    c1fc:	mov	r0, r5
    c200:	bl	1ae4 <Mat_int16Swap>
    c204:	str	r0, [r4], #4
    c208:	add	r5, r5, #2
    c20c:	cmp	r7, r4
    c210:	bne	c1fc <ReadInt32Data+0xb38>
    c214:	b	c608 <ReadInt32Data+0xf44>
    c218:	cmp	r7, #256	; 0x100
    c21c:	ble	c2e4 <ReadInt32Data+0xc20>
    c220:	sub	fp, r7, #256	; 0x100
    c224:	cmp	fp, #0
    c228:	movle	r5, r8
    c22c:	ble	c288 <ReadInt32Data+0xbc4>
    c230:	ldr	r3, [sp, #4]
    c234:	sub	r6, r3, #4
    c238:	mov	r5, r8
    c23c:	add	sl, sp, #16
    c240:	add	r4, sl, #508	; 0x1fc
    c244:	add	r4, r4, #2
    c248:	ldr	r3, [r9]
    c24c:	mov	r2, #256	; 0x100
    c250:	ldr	r1, [sp]
    c254:	mov	r0, sl
    c258:	bl	1588 <fread@plt>
    c25c:	add	r8, r8, r0
    c260:	sub	r3, sl, #2
    c264:	mov	r2, r6
    c268:	ldrsh	r1, [r3, #2]!
    c26c:	str	r1, [r2, #4]!
    c270:	cmp	r3, r4
    c274:	bne	c268 <ReadInt32Data+0xba4>
    c278:	add	r5, r5, #256	; 0x100
    c27c:	add	r6, r6, #1024	; 0x400
    c280:	cmp	r5, fp
    c284:	blt	c248 <ReadInt32Data+0xb84>
    c288:	cmp	r7, r5
    c28c:	ble	c608 <ReadInt32Data+0xf44>
    c290:	sub	r7, r7, r5
    c294:	ldr	r3, [r9]
    c298:	mov	r2, r7
    c29c:	ldr	r1, [sp]
    c2a0:	add	r0, sp, #16
    c2a4:	bl	1588 <fread@plt>
    c2a8:	add	r8, r8, r0
    c2ac:	cmp	r7, #0
    c2b0:	ble	c608 <ReadInt32Data+0xf44>
    c2b4:	add	r0, sp, #16
    c2b8:	add	r2, sp, #14
    c2bc:	sub	r3, r5, #-1073741823	; 0xc0000001
    c2c0:	ldr	r1, [sp, #4]
    c2c4:	add	r3, r1, r3, lsl #2
    c2c8:	sub	r7, r7, #-2147483647	; 0x80000001
    c2cc:	add	r0, r0, r7, lsl #1
    c2d0:	ldrsh	r1, [r2, #2]!
    c2d4:	str	r1, [r3, #4]!
    c2d8:	cmp	r2, r0
    c2dc:	bne	c2d0 <ReadInt32Data+0xc0c>
    c2e0:	b	c608 <ReadInt32Data+0xf44>
    c2e4:	ldr	r3, [r9]
    c2e8:	mov	r2, r7
    c2ec:	ldr	r1, [sp]
    c2f0:	add	r0, sp, #16
    c2f4:	bl	1588 <fread@plt>
    c2f8:	mov	r8, r0
    c2fc:	cmp	r7, #0
    c300:	ble	c608 <ReadInt32Data+0xf44>
    c304:	add	r0, sp, #16
    c308:	add	r3, sp, #14
    c30c:	ldr	r2, [sp, #4]
    c310:	sub	r2, r2, #4
    c314:	sub	r7, r7, #-2147483647	; 0x80000001
    c318:	add	r0, r0, r7, lsl #1
    c31c:	ldrsh	r1, [r3, #2]!
    c320:	str	r1, [r2, #4]!
    c324:	cmp	r3, r0
    c328:	bne	c31c <ReadInt32Data+0xc58>
    c32c:	b	c608 <ReadInt32Data+0xf44>
    c330:	ldr	r8, [r9, #20]
    c334:	cmp	r8, #0
    c338:	beq	c474 <ReadInt32Data+0xdb0>
    c33c:	cmp	r7, #256	; 0x100
    c340:	ble	c428 <ReadInt32Data+0xd64>
    c344:	sub	r3, r7, #256	; 0x100
    c348:	mov	r2, r3
    c34c:	cmp	r3, #0
    c350:	movle	sl, #0
    c354:	movle	r8, sl
    c358:	ble	c3cc <ReadInt32Data+0xd08>
    c35c:	ldr	r3, [sp, #4]
    c360:	sub	fp, r3, #4
    c364:	mov	sl, #0
    c368:	mov	r8, sl
    c36c:	add	r3, sp, #16
    c370:	str	r3, [sp, #8]
    c374:	add	r6, sp, #528	; 0x210
    c378:	str	r7, [sp, #12]
    c37c:	mov	r7, r2
    c380:	ldr	r3, [r9]
    c384:	mov	r2, #256	; 0x100
    c388:	ldr	r1, [sp]
    c38c:	ldr	r4, [sp, #8]
    c390:	mov	r0, r4
    c394:	bl	1588 <fread@plt>
    c398:	add	r8, r8, r0
    c39c:	mov	r5, fp
    c3a0:	mov	r0, r4
    c3a4:	bl	1b1c <Mat_uint16Swap>
    c3a8:	str	r0, [r5, #4]!
    c3ac:	add	r4, r4, #2
    c3b0:	cmp	r4, r6
    c3b4:	bne	c3a0 <ReadInt32Data+0xcdc>
    c3b8:	add	sl, sl, #256	; 0x100
    c3bc:	add	fp, fp, #1024	; 0x400
    c3c0:	cmp	sl, r7
    c3c4:	blt	c380 <ReadInt32Data+0xcbc>
    c3c8:	ldr	r7, [sp, #12]
    c3cc:	cmp	r7, sl
    c3d0:	ble	c608 <ReadInt32Data+0xf44>
    c3d4:	sub	r7, r7, sl
    c3d8:	ldr	r3, [r9]
    c3dc:	mov	r2, r7
    c3e0:	ldr	r1, [sp]
    c3e4:	add	r0, sp, #16
    c3e8:	bl	1588 <fread@plt>
    c3ec:	add	r8, r8, r0
    c3f0:	cmp	r7, #0
    c3f4:	ble	c608 <ReadInt32Data+0xf44>
    c3f8:	ldr	r3, [sp, #4]
    c3fc:	add	sl, r3, sl, lsl #2
    c400:	lsl	r7, r7, #1
    c404:	mov	r4, #0
    c408:	add	r5, sp, #16
    c40c:	add	r0, r5, r4
    c410:	bl	1b1c <Mat_uint16Swap>
    c414:	str	r0, [sl], #4
    c418:	add	r4, r4, #2
    c41c:	cmp	r4, r7
    c420:	bne	c40c <ReadInt32Data+0xd48>
    c424:	b	c608 <ReadInt32Data+0xf44>
    c428:	ldr	r3, [r9]
    c42c:	mov	r2, r7
    c430:	ldr	r1, [sp]
    c434:	add	r0, sp, #16
    c438:	bl	1588 <fread@plt>
    c43c:	mov	r8, r0
    c440:	cmp	r7, #0
    c444:	ble	c608 <ReadInt32Data+0xf44>
    c448:	add	r5, sp, #16
    c44c:	ldr	r3, [sp, #4]
    c450:	mov	r4, r3
    c454:	add	r7, r3, r7, lsl #2
    c458:	mov	r0, r5
    c45c:	bl	1b1c <Mat_uint16Swap>
    c460:	str	r0, [r4], #4
    c464:	add	r5, r5, #2
    c468:	cmp	r4, r7
    c46c:	bne	c458 <ReadInt32Data+0xd94>
    c470:	b	c608 <ReadInt32Data+0xf44>
    c474:	cmp	r7, #256	; 0x100
    c478:	ble	c540 <ReadInt32Data+0xe7c>
    c47c:	sub	fp, r7, #256	; 0x100
    c480:	cmp	fp, #0
    c484:	movle	r5, r8
    c488:	ble	c4e4 <ReadInt32Data+0xe20>
    c48c:	ldr	r3, [sp, #4]
    c490:	sub	r6, r3, #4
    c494:	mov	r5, r8
    c498:	add	sl, sp, #16
    c49c:	add	r4, sl, #508	; 0x1fc
    c4a0:	add	r4, r4, #2
    c4a4:	ldr	r3, [r9]
    c4a8:	mov	r2, #256	; 0x100
    c4ac:	ldr	r1, [sp]
    c4b0:	mov	r0, sl
    c4b4:	bl	1588 <fread@plt>
    c4b8:	add	r8, r8, r0
    c4bc:	sub	r3, sl, #2
    c4c0:	mov	r2, r6
    c4c4:	ldrh	r1, [r3, #2]!
    c4c8:	str	r1, [r2, #4]!
    c4cc:	cmp	r3, r4
    c4d0:	bne	c4c4 <ReadInt32Data+0xe00>
    c4d4:	add	r5, r5, #256	; 0x100
    c4d8:	add	r6, r6, #1024	; 0x400
    c4dc:	cmp	r5, fp
    c4e0:	blt	c4a4 <ReadInt32Data+0xde0>
    c4e4:	cmp	r7, r5
    c4e8:	ble	c608 <ReadInt32Data+0xf44>
    c4ec:	sub	r7, r7, r5
    c4f0:	ldr	r3, [r9]
    c4f4:	mov	r2, r7
    c4f8:	ldr	r1, [sp]
    c4fc:	add	r0, sp, #16
    c500:	bl	1588 <fread@plt>
    c504:	add	r8, r8, r0
    c508:	cmp	r7, #0
    c50c:	ble	c608 <ReadInt32Data+0xf44>
    c510:	add	r0, sp, #16
    c514:	add	r2, sp, #14
    c518:	sub	r3, r5, #-1073741823	; 0xc0000001
    c51c:	ldr	r1, [sp, #4]
    c520:	add	r3, r1, r3, lsl #2
    c524:	sub	r7, r7, #-2147483647	; 0x80000001
    c528:	add	r0, r0, r7, lsl #1
    c52c:	ldrh	r1, [r2, #2]!
    c530:	str	r1, [r3, #4]!
    c534:	cmp	r2, r0
    c538:	bne	c52c <ReadInt32Data+0xe68>
    c53c:	b	c608 <ReadInt32Data+0xf44>
    c540:	ldr	r3, [r9]
    c544:	mov	r2, r7
    c548:	ldr	r1, [sp]
    c54c:	add	r0, sp, #16
    c550:	bl	1588 <fread@plt>
    c554:	mov	r8, r0
    c558:	cmp	r7, #0
    c55c:	ble	c608 <ReadInt32Data+0xf44>
    c560:	add	r0, sp, #16
    c564:	add	r3, sp, #14
    c568:	ldr	r2, [sp, #4]
    c56c:	sub	r2, r2, #4
    c570:	sub	r7, r7, #-2147483647	; 0x80000001
    c574:	add	r0, r0, r7, lsl #1
    c578:	ldrh	r1, [r3, #2]!
    c57c:	str	r1, [r2, #4]!
    c580:	cmp	r3, r0
    c584:	bne	c578 <ReadInt32Data+0xeb4>
    c588:	b	c608 <ReadInt32Data+0xf44>
    c58c:	cmp	r7, #256	; 0x100
    c590:	ble	c61c <ReadInt32Data+0xf58>
    c594:	sub	fp, r7, #256	; 0x100
    c598:	cmp	fp, #0
    c59c:	movle	r5, #0
    c5a0:	movle	r8, r5
    c5a4:	ble	c600 <ReadInt32Data+0xf3c>
    c5a8:	ldr	r3, [sp, #4]
    c5ac:	sub	r6, r3, #4
    c5b0:	mov	r5, #0
    c5b4:	mov	r8, r5
    c5b8:	add	sl, sp, #16
    c5bc:	add	r4, sl, #255	; 0xff
    c5c0:	ldr	r3, [r9]
    c5c4:	mov	r2, #256	; 0x100
    c5c8:	ldr	r1, [sp]
    c5cc:	mov	r0, sl
    c5d0:	bl	1588 <fread@plt>
    c5d4:	add	r8, r8, r0
    c5d8:	sub	r3, sl, #1
    c5dc:	mov	r2, r6
    c5e0:	ldrsb	r1, [r3, #1]!
    c5e4:	str	r1, [r2, #4]!
    c5e8:	cmp	r4, r3
    c5ec:	bne	c5e0 <ReadInt32Data+0xf1c>
    c5f0:	add	r5, r5, #256	; 0x100
    c5f4:	add	r6, r6, #1024	; 0x400
    c5f8:	cmp	r5, fp
    c5fc:	blt	c5c0 <ReadInt32Data+0xefc>
    c600:	cmp	r7, r5
    c604:	bgt	c668 <ReadInt32Data+0xfa4>
    c608:	ldr	r3, [sp]
    c60c:	mul	r0, r3, r8
    c610:	add	sp, sp, #2064	; 0x810
    c614:	add	sp, sp, #4
    c618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c61c:	ldr	r3, [r9]
    c620:	mov	r2, r7
    c624:	ldr	r1, [sp]
    c628:	add	r0, sp, #16
    c62c:	bl	1588 <fread@plt>
    c630:	mov	r8, r0
    c634:	cmp	r7, #0
    c638:	ble	c608 <ReadInt32Data+0xf44>
    c63c:	add	r0, sp, #16
    c640:	add	r3, sp, #15
    c644:	ldr	r2, [sp, #4]
    c648:	sub	r2, r2, #4
    c64c:	sub	r7, r7, #1
    c650:	add	r0, r0, r7
    c654:	ldrsb	r1, [r3, #1]!
    c658:	str	r1, [r2, #4]!
    c65c:	cmp	r0, r3
    c660:	bne	c654 <ReadInt32Data+0xf90>
    c664:	b	c608 <ReadInt32Data+0xf44>
    c668:	sub	r7, r7, r5
    c66c:	ldr	r3, [r9]
    c670:	mov	r2, r7
    c674:	ldr	r1, [sp]
    c678:	add	r0, sp, #16
    c67c:	bl	1588 <fread@plt>
    c680:	add	r8, r8, r0
    c684:	cmp	r7, #0
    c688:	ble	c608 <ReadInt32Data+0xf44>
    c68c:	add	r0, sp, #16
    c690:	add	r2, sp, #15
    c694:	sub	r3, r5, #-1073741823	; 0xc0000001
    c698:	ldr	r1, [sp, #4]
    c69c:	add	r3, r1, r3, lsl #2
    c6a0:	sub	r7, r7, #1
    c6a4:	add	r0, r0, r7
    c6a8:	ldrsb	r1, [r2, #1]!
    c6ac:	str	r1, [r3, #4]!
    c6b0:	cmp	r0, r2
    c6b4:	bne	c6a8 <ReadInt32Data+0xfe4>
    c6b8:	b	c608 <ReadInt32Data+0xf44>
    c6bc:	cmp	r7, #256	; 0x100
    c6c0:	ble	c78c <ReadInt32Data+0x10c8>
    c6c4:	sub	fp, r7, #256	; 0x100
    c6c8:	cmp	fp, #0
    c6cc:	movle	r5, #0
    c6d0:	movle	r8, r5
    c6d4:	ble	c730 <ReadInt32Data+0x106c>
    c6d8:	ldr	r3, [sp, #4]
    c6dc:	sub	r6, r3, #4
    c6e0:	mov	r5, #0
    c6e4:	mov	r8, r5
    c6e8:	add	sl, sp, #16
    c6ec:	add	r4, sl, #255	; 0xff
    c6f0:	ldr	r3, [r9]
    c6f4:	mov	r2, #256	; 0x100
    c6f8:	ldr	r1, [sp]
    c6fc:	mov	r0, sl
    c700:	bl	1588 <fread@plt>
    c704:	add	r8, r8, r0
    c708:	sub	r3, sl, #1
    c70c:	mov	r2, r6
    c710:	ldrb	r1, [r3, #1]!
    c714:	str	r1, [r2, #4]!
    c718:	cmp	r4, r3
    c71c:	bne	c710 <ReadInt32Data+0x104c>
    c720:	add	r5, r5, #256	; 0x100
    c724:	add	r6, r6, #1024	; 0x400
    c728:	cmp	r5, fp
    c72c:	blt	c6f0 <ReadInt32Data+0x102c>
    c730:	cmp	r7, r5
    c734:	ble	c608 <ReadInt32Data+0xf44>
    c738:	sub	r7, r7, r5
    c73c:	ldr	r3, [r9]
    c740:	mov	r2, r7
    c744:	ldr	r1, [sp]
    c748:	add	r0, sp, #16
    c74c:	bl	1588 <fread@plt>
    c750:	add	r8, r8, r0
    c754:	cmp	r7, #0
    c758:	ble	c608 <ReadInt32Data+0xf44>
    c75c:	add	r0, sp, #16
    c760:	add	r2, sp, #15
    c764:	sub	r3, r5, #-1073741823	; 0xc0000001
    c768:	ldr	r1, [sp, #4]
    c76c:	add	r3, r1, r3, lsl #2
    c770:	sub	r7, r7, #1
    c774:	add	r0, r0, r7
    c778:	ldrb	r1, [r2, #1]!
    c77c:	str	r1, [r3, #4]!
    c780:	cmp	r0, r2
    c784:	bne	c778 <ReadInt32Data+0x10b4>
    c788:	b	c608 <ReadInt32Data+0xf44>
    c78c:	ldr	r3, [r9]
    c790:	mov	r2, r7
    c794:	ldr	r1, [sp]
    c798:	add	r0, sp, #16
    c79c:	bl	1588 <fread@plt>
    c7a0:	mov	r8, r0
    c7a4:	cmp	r7, #0
    c7a8:	ble	c608 <ReadInt32Data+0xf44>
    c7ac:	add	r0, sp, #16
    c7b0:	add	r3, sp, #15
    c7b4:	ldr	r2, [sp, #4]
    c7b8:	sub	r2, r2, #4
    c7bc:	sub	r7, r7, #1
    c7c0:	add	r0, r0, r7
    c7c4:	ldrb	r1, [r3, #1]!
    c7c8:	str	r1, [r2, #4]!
    c7cc:	cmp	r0, r3
    c7d0:	bne	c7c4 <ReadInt32Data+0x1100>
    c7d4:	b	c608 <ReadInt32Data+0xf44>
    c7d8:	cmp	r4, #12
    c7dc:	beq	c8dc <ReadInt32Data+0x1218>
    c7e0:	cmp	r4, #13
    c7e4:	movne	r8, #0
    c7e8:	bne	c608 <ReadInt32Data+0xf44>
    c7ec:	ldr	r8, [r9, #20]
    c7f0:	cmp	r8, #0
    c7f4:	beq	cb7c <ReadInt32Data+0x14b8>
    c7f8:	cmp	r7, #256	; 0x100
    c7fc:	ble	cb30 <ReadInt32Data+0x146c>
    c800:	sub	r3, r7, #256	; 0x100
    c804:	str	r3, [sp, #8]
    c808:	cmp	r3, #0
    c80c:	movle	sl, #0
    c810:	movle	r8, sl
    c814:	ble	c880 <ReadInt32Data+0x11bc>
    c818:	ldr	r3, [sp, #4]
    c81c:	sub	fp, r3, #4
    c820:	mov	sl, #0
    c824:	mov	r8, sl
    c828:	add	r3, sp, #16
    c82c:	str	r3, [sp, #12]
    c830:	ldr	r3, [r9]
    c834:	mov	r2, #256	; 0x100
    c838:	ldr	r1, [sp]
    c83c:	ldr	r4, [sp, #12]
    c840:	mov	r0, r4
    c844:	bl	1588 <fread@plt>
    c848:	add	r8, r8, r0
    c84c:	add	r6, sp, #2064	; 0x810
    c850:	mov	r5, fp
    c854:	mov	r0, r4
    c858:	bl	1984 <Mat_uint64Swap>
    c85c:	str	r0, [r5, #4]!
    c860:	add	r4, r4, #8
    c864:	cmp	r4, r6
    c868:	bne	c854 <ReadInt32Data+0x1190>
    c86c:	add	sl, sl, #256	; 0x100
    c870:	add	fp, fp, #1024	; 0x400
    c874:	ldr	r3, [sp, #8]
    c878:	cmp	sl, r3
    c87c:	blt	c830 <ReadInt32Data+0x116c>
    c880:	cmp	r7, sl
    c884:	ble	c608 <ReadInt32Data+0xf44>
    c888:	sub	r7, r7, sl
    c88c:	ldr	r3, [r9]
    c890:	mov	r2, r7
    c894:	ldr	r1, [sp]
    c898:	add	r0, sp, #16
    c89c:	bl	1588 <fread@plt>
    c8a0:	add	r8, r8, r0
    c8a4:	cmp	r7, #0
    c8a8:	ble	c608 <ReadInt32Data+0xf44>
    c8ac:	add	r5, sp, #16
    c8b0:	ldr	r3, [sp, #4]
    c8b4:	add	sl, r3, sl, lsl #2
    c8b8:	mov	r4, #0
    c8bc:	mov	r0, r5
    c8c0:	bl	1984 <Mat_uint64Swap>
    c8c4:	str	r0, [sl], #4
    c8c8:	add	r4, r4, #1
    c8cc:	add	r5, r5, #8
    c8d0:	cmp	r7, r4
    c8d4:	bne	c8bc <ReadInt32Data+0x11f8>
    c8d8:	b	c608 <ReadInt32Data+0xf44>
    c8dc:	ldr	r8, [r9, #20]
    c8e0:	cmp	r8, #0
    c8e4:	beq	ca18 <ReadInt32Data+0x1354>
    c8e8:	cmp	r7, #256	; 0x100
    c8ec:	ble	c9cc <ReadInt32Data+0x1308>
    c8f0:	sub	r3, r7, #256	; 0x100
    c8f4:	str	r3, [sp, #8]
    c8f8:	cmp	r3, #0
    c8fc:	movle	sl, #0
    c900:	movle	r8, sl
    c904:	ble	c970 <ReadInt32Data+0x12ac>
    c908:	ldr	r3, [sp, #4]
    c90c:	sub	fp, r3, #4
    c910:	mov	sl, #0
    c914:	mov	r8, sl
    c918:	add	r3, sp, #16
    c91c:	str	r3, [sp, #12]
    c920:	ldr	r3, [r9]
    c924:	mov	r2, #256	; 0x100
    c928:	ldr	r1, [sp]
    c92c:	ldr	r4, [sp, #12]
    c930:	mov	r0, r4
    c934:	bl	1588 <fread@plt>
    c938:	add	r8, r8, r0
    c93c:	add	r6, sp, #2064	; 0x810
    c940:	mov	r5, fp
    c944:	mov	r0, r4
    c948:	bl	18bc <Mat_int64Swap>
    c94c:	str	r0, [r5, #4]!
    c950:	add	r4, r4, #8
    c954:	cmp	r6, r4
    c958:	bne	c944 <ReadInt32Data+0x1280>
    c95c:	add	sl, sl, #256	; 0x100
    c960:	add	fp, fp, #1024	; 0x400
    c964:	ldr	r3, [sp, #8]
    c968:	cmp	sl, r3
    c96c:	blt	c920 <ReadInt32Data+0x125c>
    c970:	cmp	r7, sl
    c974:	ble	c608 <ReadInt32Data+0xf44>
    c978:	sub	r7, r7, sl
    c97c:	ldr	r3, [r9]
    c980:	mov	r2, r7
    c984:	ldr	r1, [sp]
    c988:	add	r0, sp, #16
    c98c:	bl	1588 <fread@plt>
    c990:	add	r8, r8, r0
    c994:	cmp	r7, #0
    c998:	ble	c608 <ReadInt32Data+0xf44>
    c99c:	add	r5, sp, #16
    c9a0:	ldr	r3, [sp, #4]
    c9a4:	add	sl, r3, sl, lsl #2
    c9a8:	mov	r4, #0
    c9ac:	mov	r0, r5
    c9b0:	bl	18bc <Mat_int64Swap>
    c9b4:	str	r0, [sl], #4
    c9b8:	add	r4, r4, #1
    c9bc:	add	r5, r5, #8
    c9c0:	cmp	r7, r4
    c9c4:	bne	c9ac <ReadInt32Data+0x12e8>
    c9c8:	b	c608 <ReadInt32Data+0xf44>
    c9cc:	ldr	r3, [r9]
    c9d0:	mov	r2, r7
    c9d4:	ldr	r1, [sp]
    c9d8:	add	r0, sp, #16
    c9dc:	bl	1588 <fread@plt>
    c9e0:	mov	r8, r0
    c9e4:	cmp	r7, #0
    c9e8:	ble	c608 <ReadInt32Data+0xf44>
    c9ec:	add	r5, sp, #16
    c9f0:	ldr	r3, [sp, #4]
    c9f4:	mov	r4, r3
    c9f8:	add	r7, r3, r7, lsl #2
    c9fc:	mov	r0, r5
    ca00:	bl	18bc <Mat_int64Swap>
    ca04:	str	r0, [r4], #4
    ca08:	add	r5, r5, #8
    ca0c:	cmp	r7, r4
    ca10:	bne	c9fc <ReadInt32Data+0x1338>
    ca14:	b	c608 <ReadInt32Data+0xf44>
    ca18:	cmp	r7, #256	; 0x100
    ca1c:	ble	cae4 <ReadInt32Data+0x1420>
    ca20:	sub	sl, r7, #256	; 0x100
    ca24:	cmp	sl, #0
    ca28:	movle	r5, r8
    ca2c:	ble	ca88 <ReadInt32Data+0x13c4>
    ca30:	ldr	r3, [sp, #4]
    ca34:	sub	r6, r3, #4
    ca38:	mov	r5, r8
    ca3c:	add	fp, sp, #16
    ca40:	add	r4, sp, #2048	; 0x800
    ca44:	add	r4, r4, #8
    ca48:	ldr	r3, [r9]
    ca4c:	mov	r2, #256	; 0x100
    ca50:	ldr	r1, [sp]
    ca54:	mov	r0, fp
    ca58:	bl	1588 <fread@plt>
    ca5c:	add	r8, r8, r0
    ca60:	sub	r3, fp, #8
    ca64:	mov	r2, r6
    ca68:	ldr	r1, [r3, #8]!
    ca6c:	str	r1, [r2, #4]!
    ca70:	cmp	r3, r4
    ca74:	bne	ca68 <ReadInt32Data+0x13a4>
    ca78:	add	r5, r5, #256	; 0x100
    ca7c:	add	r6, r6, #1024	; 0x400
    ca80:	cmp	r5, sl
    ca84:	blt	ca48 <ReadInt32Data+0x1384>
    ca88:	cmp	r7, r5
    ca8c:	ble	c608 <ReadInt32Data+0xf44>
    ca90:	sub	r7, r7, r5
    ca94:	ldr	r3, [r9]
    ca98:	mov	r2, r7
    ca9c:	ldr	r1, [sp]
    caa0:	add	r0, sp, #16
    caa4:	bl	1588 <fread@plt>
    caa8:	add	r8, r8, r0
    caac:	cmp	r7, #0
    cab0:	ble	c608 <ReadInt32Data+0xf44>
    cab4:	add	r1, sp, #16
    cab8:	add	r2, sp, #8
    cabc:	sub	r3, r5, #-1073741823	; 0xc0000001
    cac0:	ldr	r0, [sp, #4]
    cac4:	add	r3, r0, r3, lsl #2
    cac8:	sub	r7, r7, #-536870911	; 0xe0000001
    cacc:	add	r1, r1, r7, lsl #3
    cad0:	ldr	r0, [r2, #8]!
    cad4:	str	r0, [r3, #4]!
    cad8:	cmp	r2, r1
    cadc:	bne	cad0 <ReadInt32Data+0x140c>
    cae0:	b	c608 <ReadInt32Data+0xf44>
    cae4:	ldr	r3, [r9]
    cae8:	mov	r2, r7
    caec:	ldr	r1, [sp]
    caf0:	add	r0, sp, #16
    caf4:	bl	1588 <fread@plt>
    caf8:	mov	r8, r0
    cafc:	cmp	r7, #0
    cb00:	ble	c608 <ReadInt32Data+0xf44>
    cb04:	add	r0, sp, #16
    cb08:	add	r3, sp, #8
    cb0c:	ldr	r2, [sp, #4]
    cb10:	sub	r2, r2, #4
    cb14:	sub	r7, r7, #-536870911	; 0xe0000001
    cb18:	add	r0, r0, r7, lsl #3
    cb1c:	ldr	r1, [r3, #8]!
    cb20:	str	r1, [r2, #4]!
    cb24:	cmp	r0, r3
    cb28:	bne	cb1c <ReadInt32Data+0x1458>
    cb2c:	b	c608 <ReadInt32Data+0xf44>
    cb30:	ldr	r3, [r9]
    cb34:	mov	r2, r7
    cb38:	ldr	r1, [sp]
    cb3c:	add	r0, sp, #16
    cb40:	bl	1588 <fread@plt>
    cb44:	mov	r8, r0
    cb48:	cmp	r7, #0
    cb4c:	ble	c608 <ReadInt32Data+0xf44>
    cb50:	add	r5, sp, #16
    cb54:	ldr	r3, [sp, #4]
    cb58:	mov	r4, r3
    cb5c:	add	r7, r3, r7, lsl #2
    cb60:	mov	r0, r5
    cb64:	bl	1984 <Mat_uint64Swap>
    cb68:	str	r0, [r4], #4
    cb6c:	add	r5, r5, #8
    cb70:	cmp	r7, r4
    cb74:	bne	cb60 <ReadInt32Data+0x149c>
    cb78:	b	c608 <ReadInt32Data+0xf44>
    cb7c:	cmp	r7, #256	; 0x100
    cb80:	ble	cc48 <ReadInt32Data+0x1584>
    cb84:	sub	sl, r7, #256	; 0x100
    cb88:	cmp	sl, #0
    cb8c:	movle	r5, r8
    cb90:	ble	cbec <ReadInt32Data+0x1528>
    cb94:	ldr	r3, [sp, #4]
    cb98:	sub	r6, r3, #4
    cb9c:	mov	r5, r8
    cba0:	add	fp, sp, #16
    cba4:	add	r4, sp, #2048	; 0x800
    cba8:	add	r4, r4, #8
    cbac:	ldr	r3, [r9]
    cbb0:	mov	r2, #256	; 0x100
    cbb4:	ldr	r1, [sp]
    cbb8:	mov	r0, fp
    cbbc:	bl	1588 <fread@plt>
    cbc0:	add	r8, r8, r0
    cbc4:	sub	r3, fp, #8
    cbc8:	mov	r2, r6
    cbcc:	ldr	r1, [r3, #8]!
    cbd0:	str	r1, [r2, #4]!
    cbd4:	cmp	r4, r3
    cbd8:	bne	cbcc <ReadInt32Data+0x1508>
    cbdc:	add	r5, r5, #256	; 0x100
    cbe0:	add	r6, r6, #1024	; 0x400
    cbe4:	cmp	r5, sl
    cbe8:	blt	cbac <ReadInt32Data+0x14e8>
    cbec:	cmp	r7, r5
    cbf0:	ble	c608 <ReadInt32Data+0xf44>
    cbf4:	sub	r7, r7, r5
    cbf8:	ldr	r3, [r9]
    cbfc:	mov	r2, r7
    cc00:	ldr	r1, [sp]
    cc04:	add	r0, sp, #16
    cc08:	bl	1588 <fread@plt>
    cc0c:	add	r8, r8, r0
    cc10:	cmp	r7, #0
    cc14:	ble	c608 <ReadInt32Data+0xf44>
    cc18:	add	r1, sp, #16
    cc1c:	add	r2, sp, #8
    cc20:	sub	r3, r5, #-1073741823	; 0xc0000001
    cc24:	ldr	r0, [sp, #4]
    cc28:	add	r3, r0, r3, lsl #2
    cc2c:	sub	r7, r7, #-536870911	; 0xe0000001
    cc30:	add	r1, r1, r7, lsl #3
    cc34:	ldr	r0, [r2, #8]!
    cc38:	str	r0, [r3, #4]!
    cc3c:	cmp	r2, r1
    cc40:	bne	cc34 <ReadInt32Data+0x1570>
    cc44:	b	c608 <ReadInt32Data+0xf44>
    cc48:	ldr	r3, [r9]
    cc4c:	mov	r2, r7
    cc50:	ldr	r1, [sp]
    cc54:	add	r0, sp, #16
    cc58:	bl	1588 <fread@plt>
    cc5c:	mov	r8, r0
    cc60:	cmp	r7, #0
    cc64:	ble	c608 <ReadInt32Data+0xf44>
    cc68:	add	r0, sp, #16
    cc6c:	add	r3, sp, #8
    cc70:	ldr	r2, [sp, #4]
    cc74:	sub	r2, r2, #4
    cc78:	sub	r7, r7, #-536870911	; 0xe0000001
    cc7c:	add	r0, r0, r7, lsl #3
    cc80:	ldr	r1, [r3, #8]!
    cc84:	str	r1, [r2, #4]!
    cc88:	cmp	r3, r0
    cc8c:	bne	cc80 <ReadInt32Data+0x15bc>
    cc90:	b	c608 <ReadInt32Data+0xf44>
    cc94:	mov	r0, #0
    cc98:	bx	lr

0000cc9c <ReadCompressedInt32Data>:
    cc9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    cca0:	sub	sp, sp, #8
    cca4:	ldr	r6, [sp, #40]	; 0x28
    cca8:	mov	r9, r2
    ccac:	cmp	r2, #0
    ccb0:	cmpne	r1, #0
    ccb4:	moveq	r2, #1
    ccb8:	movne	r2, #0
    ccbc:	cmp	r0, #0
    ccc0:	orreq	r2, r2, #1
    ccc4:	cmp	r2, #0
    ccc8:	movne	r0, #0
    cccc:	bne	cd5c <ReadCompressedInt32Data+0xc0>
    ccd0:	mov	r8, r1
    ccd4:	mov	r5, r0
    ccd8:	mov	r7, r3
    ccdc:	mov	r0, r3
    cce0:	bl	1600 <Mat_SizeOf@plt>
    cce4:	mov	r4, r0
    cce8:	sub	r3, r7, #1
    ccec:	cmp	r3, #8
    ccf0:	addls	pc, pc, r3, lsl #2
    ccf4:	b	d10c <ReadCompressedInt32Data+0x470>
    ccf8:	b	cd64 <ReadCompressedInt32Data+0xc8>
    ccfc:	b	cd1c <ReadCompressedInt32Data+0x80>
    cd00:	b	cff4 <ReadCompressedInt32Data+0x358>
    cd04:	b	d080 <ReadCompressedInt32Data+0x3e4>
    cd08:	b	cedc <ReadCompressedInt32Data+0x240>
    cd0c:	b	cf68 <ReadCompressedInt32Data+0x2cc>
    cd10:	b	ce40 <ReadCompressedInt32Data+0x1a4>
    cd14:	b	d10c <ReadCompressedInt32Data+0x470>
    cd18:	b	cda4 <ReadCompressedInt32Data+0x108>
    cd1c:	cmp	r6, #0
    cd20:	subgt	r9, r9, #4
    cd24:	movgt	r7, #0
    cd28:	movgt	sl, sp
    cd2c:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cd30:	mov	r3, r4
    cd34:	mov	r2, sl
    cd38:	mov	r1, r8
    cd3c:	mov	r0, r5
    cd40:	bl	3418 <InflateData>
    cd44:	ldrb	r3, [sp]
    cd48:	str	r3, [r9, #4]!
    cd4c:	add	r7, r7, #1
    cd50:	cmp	r6, r7
    cd54:	bne	cd30 <ReadCompressedInt32Data+0x94>
    cd58:	mul	r0, r4, r6
    cd5c:	add	sp, sp, #8
    cd60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    cd64:	cmp	r6, #0
    cd68:	subgt	r9, r9, #4
    cd6c:	movgt	r7, #0
    cd70:	movgt	sl, sp
    cd74:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cd78:	mov	r3, r4
    cd7c:	mov	r2, sl
    cd80:	mov	r1, r8
    cd84:	mov	r0, r5
    cd88:	bl	3418 <InflateData>
    cd8c:	ldrsb	r3, [sp]
    cd90:	str	r3, [r9, #4]!
    cd94:	add	r7, r7, #1
    cd98:	cmp	r6, r7
    cd9c:	bne	cd78 <ReadCompressedInt32Data+0xdc>
    cda0:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cda4:	ldr	r7, [r5, #20]
    cda8:	cmp	r7, #0
    cdac:	bne	cdf4 <ReadCompressedInt32Data+0x158>
    cdb0:	cmp	r6, #0
    cdb4:	subgt	r9, r9, #4
    cdb8:	movgt	sl, sp
    cdbc:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cdc0:	mov	r3, r4
    cdc4:	mov	r2, sl
    cdc8:	mov	r1, r8
    cdcc:	mov	r0, r5
    cdd0:	bl	3418 <InflateData>
    cdd4:	vldr	d7, [sp]
    cdd8:	vcvt.s32.f64	s14, d7
    cddc:	vmov	r3, s14
    cde0:	str	r3, [r9, #4]!
    cde4:	add	r7, r7, #1
    cde8:	cmp	r6, r7
    cdec:	bne	cdc0 <ReadCompressedInt32Data+0x124>
    cdf0:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cdf4:	cmp	r6, #0
    cdf8:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cdfc:	sub	r9, r9, #4
    ce00:	mov	r7, #0
    ce04:	mov	sl, sp
    ce08:	mov	r3, r4
    ce0c:	mov	r2, sl
    ce10:	mov	r1, r8
    ce14:	mov	r0, r5
    ce18:	bl	3418 <InflateData>
    ce1c:	mov	r0, sl
    ce20:	bl	1b94 <Mat_doubleSwap>
    ce24:	vcvt.s32.f64	s0, d0
    ce28:	vmov	r3, s0
    ce2c:	str	r3, [r9, #4]!
    ce30:	add	r7, r7, #1
    ce34:	cmp	r6, r7
    ce38:	bne	ce08 <ReadCompressedInt32Data+0x16c>
    ce3c:	b	cd58 <ReadCompressedInt32Data+0xbc>
    ce40:	ldr	r7, [r5, #20]
    ce44:	cmp	r7, #0
    ce48:	bne	ce90 <ReadCompressedInt32Data+0x1f4>
    ce4c:	cmp	r6, #0
    ce50:	subgt	r9, r9, #4
    ce54:	movgt	sl, sp
    ce58:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    ce5c:	mov	r3, r4
    ce60:	mov	r2, sl
    ce64:	mov	r1, r8
    ce68:	mov	r0, r5
    ce6c:	bl	3418 <InflateData>
    ce70:	vldr	s15, [sp]
    ce74:	vcvt.s32.f32	s15, s15
    ce78:	vmov	r3, s15
    ce7c:	str	r3, [r9, #4]!
    ce80:	add	r7, r7, #1
    ce84:	cmp	r6, r7
    ce88:	bne	ce5c <ReadCompressedInt32Data+0x1c0>
    ce8c:	b	cd58 <ReadCompressedInt32Data+0xbc>
    ce90:	cmp	r6, #0
    ce94:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    ce98:	sub	r9, r9, #4
    ce9c:	mov	r7, #0
    cea0:	mov	sl, sp
    cea4:	mov	r3, r4
    cea8:	mov	r2, sl
    ceac:	mov	r1, r8
    ceb0:	mov	r0, r5
    ceb4:	bl	3418 <InflateData>
    ceb8:	mov	r0, sl
    cebc:	bl	1b38 <Mat_floatSwap>
    cec0:	vcvt.s32.f32	s0, s0
    cec4:	vmov	r3, s0
    cec8:	str	r3, [r9, #4]!
    cecc:	add	r7, r7, #1
    ced0:	cmp	r6, r7
    ced4:	bne	cea4 <ReadCompressedInt32Data+0x208>
    ced8:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cedc:	ldr	r7, [r5, #20]
    cee0:	cmp	r7, #0
    cee4:	bne	cf24 <ReadCompressedInt32Data+0x288>
    cee8:	cmp	r6, #0
    ceec:	subgt	r9, r9, #4
    cef0:	movgt	sl, sp
    cef4:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cef8:	mov	r3, r4
    cefc:	mov	r2, sl
    cf00:	mov	r1, r8
    cf04:	mov	r0, r5
    cf08:	bl	3418 <InflateData>
    cf0c:	ldr	r3, [sp]
    cf10:	str	r3, [r9, #4]!
    cf14:	add	r7, r7, #1
    cf18:	cmp	r6, r7
    cf1c:	bne	cef8 <ReadCompressedInt32Data+0x25c>
    cf20:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cf24:	cmp	r6, #0
    cf28:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cf2c:	sub	r9, r9, #4
    cf30:	mov	r7, #0
    cf34:	mov	sl, sp
    cf38:	mov	r3, r4
    cf3c:	mov	r2, sl
    cf40:	mov	r1, r8
    cf44:	mov	r0, r5
    cf48:	bl	3418 <InflateData>
    cf4c:	mov	r0, sl
    cf50:	bl	1a20 <Mat_int32Swap>
    cf54:	str	r0, [r9, #4]!
    cf58:	add	r7, r7, #1
    cf5c:	cmp	r6, r7
    cf60:	bne	cf38 <ReadCompressedInt32Data+0x29c>
    cf64:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cf68:	ldr	r7, [r5, #20]
    cf6c:	cmp	r7, #0
    cf70:	bne	cfb0 <ReadCompressedInt32Data+0x314>
    cf74:	cmp	r6, #0
    cf78:	subgt	r9, r9, #4
    cf7c:	movgt	sl, sp
    cf80:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cf84:	mov	r3, r4
    cf88:	mov	r2, sl
    cf8c:	mov	r1, r8
    cf90:	mov	r0, r5
    cf94:	bl	3418 <InflateData>
    cf98:	ldr	r3, [sp]
    cf9c:	str	r3, [r9, #4]!
    cfa0:	add	r7, r7, #1
    cfa4:	cmp	r6, r7
    cfa8:	bne	cf84 <ReadCompressedInt32Data+0x2e8>
    cfac:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cfb0:	cmp	r6, #0
    cfb4:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    cfb8:	sub	r9, r9, #4
    cfbc:	mov	r7, #0
    cfc0:	mov	sl, sp
    cfc4:	mov	r3, r4
    cfc8:	mov	r2, sl
    cfcc:	mov	r1, r8
    cfd0:	mov	r0, r5
    cfd4:	bl	3418 <InflateData>
    cfd8:	mov	r0, sl
    cfdc:	bl	1a88 <Mat_uint32Swap>
    cfe0:	str	r0, [r9, #4]!
    cfe4:	add	r7, r7, #1
    cfe8:	cmp	r6, r7
    cfec:	bne	cfc4 <ReadCompressedInt32Data+0x328>
    cff0:	b	cd58 <ReadCompressedInt32Data+0xbc>
    cff4:	ldr	r7, [r5, #20]
    cff8:	cmp	r7, #0
    cffc:	bne	d03c <ReadCompressedInt32Data+0x3a0>
    d000:	cmp	r6, #0
    d004:	subgt	r9, r9, #4
    d008:	movgt	sl, sp
    d00c:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d010:	mov	r3, r4
    d014:	mov	r2, sl
    d018:	mov	r1, r8
    d01c:	mov	r0, r5
    d020:	bl	3418 <InflateData>
    d024:	ldrsh	r3, [sp]
    d028:	str	r3, [r9, #4]!
    d02c:	add	r7, r7, #1
    d030:	cmp	r6, r7
    d034:	bne	d010 <ReadCompressedInt32Data+0x374>
    d038:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d03c:	cmp	r6, #0
    d040:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d044:	sub	r9, r9, #4
    d048:	mov	r7, #0
    d04c:	mov	sl, sp
    d050:	mov	r3, r4
    d054:	mov	r2, sl
    d058:	mov	r1, r8
    d05c:	mov	r0, r5
    d060:	bl	3418 <InflateData>
    d064:	mov	r0, sl
    d068:	bl	1ae4 <Mat_int16Swap>
    d06c:	str	r0, [r9, #4]!
    d070:	add	r7, r7, #1
    d074:	cmp	r6, r7
    d078:	bne	d050 <ReadCompressedInt32Data+0x3b4>
    d07c:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d080:	ldr	r7, [r5, #20]
    d084:	cmp	r7, #0
    d088:	bne	d0c8 <ReadCompressedInt32Data+0x42c>
    d08c:	cmp	r6, #0
    d090:	subgt	r9, r9, #4
    d094:	movgt	sl, sp
    d098:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d09c:	mov	r3, r4
    d0a0:	mov	r2, sl
    d0a4:	mov	r1, r8
    d0a8:	mov	r0, r5
    d0ac:	bl	3418 <InflateData>
    d0b0:	ldrh	r3, [sp]
    d0b4:	str	r3, [r9, #4]!
    d0b8:	add	r7, r7, #1
    d0bc:	cmp	r6, r7
    d0c0:	bne	d09c <ReadCompressedInt32Data+0x400>
    d0c4:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d0c8:	cmp	r6, #0
    d0cc:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d0d0:	sub	r9, r9, #4
    d0d4:	mov	r7, #0
    d0d8:	mov	sl, sp
    d0dc:	mov	r3, r4
    d0e0:	mov	r2, sl
    d0e4:	mov	r1, r8
    d0e8:	mov	r0, r5
    d0ec:	bl	3418 <InflateData>
    d0f0:	mov	r0, sl
    d0f4:	bl	1b1c <Mat_uint16Swap>
    d0f8:	str	r0, [r9, #4]!
    d0fc:	add	r7, r7, #1
    d100:	cmp	r6, r7
    d104:	bne	d0dc <ReadCompressedInt32Data+0x440>
    d108:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d10c:	cmp	r7, #12
    d110:	beq	d164 <ReadCompressedInt32Data+0x4c8>
    d114:	cmp	r7, #13
    d118:	bne	cd58 <ReadCompressedInt32Data+0xbc>
    d11c:	ldr	r7, [r5, #20]
    d120:	cmp	r7, #0
    d124:	bne	d1f0 <ReadCompressedInt32Data+0x554>
    d128:	cmp	r6, #0
    d12c:	subgt	r9, r9, #4
    d130:	movgt	sl, sp
    d134:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d138:	mov	r3, r4
    d13c:	mov	r2, sl
    d140:	mov	r1, r8
    d144:	mov	r0, r5
    d148:	bl	3418 <InflateData>
    d14c:	ldr	r3, [sp]
    d150:	str	r3, [r9, #4]!
    d154:	add	r7, r7, #1
    d158:	cmp	r6, r7
    d15c:	bne	d138 <ReadCompressedInt32Data+0x49c>
    d160:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d164:	ldr	r7, [r5, #20]
    d168:	cmp	r7, #0
    d16c:	bne	d1ac <ReadCompressedInt32Data+0x510>
    d170:	cmp	r6, #0
    d174:	subgt	r9, r9, #4
    d178:	movgt	sl, sp
    d17c:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d180:	mov	r3, r4
    d184:	mov	r2, sl
    d188:	mov	r1, r8
    d18c:	mov	r0, r5
    d190:	bl	3418 <InflateData>
    d194:	ldr	r3, [sp]
    d198:	str	r3, [r9, #4]!
    d19c:	add	r7, r7, #1
    d1a0:	cmp	r6, r7
    d1a4:	bne	d180 <ReadCompressedInt32Data+0x4e4>
    d1a8:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d1ac:	cmp	r6, #0
    d1b0:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d1b4:	sub	r9, r9, #4
    d1b8:	mov	r7, #0
    d1bc:	mov	sl, sp
    d1c0:	mov	r3, r4
    d1c4:	mov	r2, sl
    d1c8:	mov	r1, r8
    d1cc:	mov	r0, r5
    d1d0:	bl	3418 <InflateData>
    d1d4:	mov	r0, sl
    d1d8:	bl	18bc <Mat_int64Swap>
    d1dc:	str	r0, [r9, #4]!
    d1e0:	add	r7, r7, #1
    d1e4:	cmp	r6, r7
    d1e8:	bne	d1c0 <ReadCompressedInt32Data+0x524>
    d1ec:	b	cd58 <ReadCompressedInt32Data+0xbc>
    d1f0:	cmp	r6, #0
    d1f4:	ble	cd58 <ReadCompressedInt32Data+0xbc>
    d1f8:	sub	r9, r9, #4
    d1fc:	mov	r7, #0
    d200:	mov	sl, sp
    d204:	mov	r3, r4
    d208:	mov	r2, sl
    d20c:	mov	r1, r8
    d210:	mov	r0, r5
    d214:	bl	3418 <InflateData>
    d218:	mov	r0, sl
    d21c:	bl	1984 <Mat_uint64Swap>
    d220:	str	r0, [r9, #4]!
    d224:	add	r7, r7, #1
    d228:	cmp	r6, r7
    d22c:	bne	d204 <ReadCompressedInt32Data+0x568>
    d230:	b	cd58 <ReadCompressedInt32Data+0xbc>

0000d234 <ReadUInt32Data>:
    d234:	cmp	r1, #0
    d238:	cmpne	r0, #0
    d23c:	beq	e804 <ReadUInt32Data+0x15d0>
    d240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d244:	sub	sp, sp, #2064	; 0x810
    d248:	sub	sp, sp, #4
    d24c:	mov	r9, r0
    d250:	mov	ip, r1
    d254:	ldr	r1, [r0]
    d258:	cmp	r1, #0
    d25c:	moveq	r0, #0
    d260:	beq	e180 <ReadUInt32Data+0xf4c>
    d264:	str	ip, [sp, #4]
    d268:	mov	r7, r3
    d26c:	mov	r4, r2
    d270:	mov	r0, r2
    d274:	bl	1600 <Mat_SizeOf@plt>
    d278:	str	r0, [sp]
    d27c:	sub	r3, r4, #1
    d280:	cmp	r3, #8
    d284:	addls	pc, pc, r3, lsl #2
    d288:	b	e348 <ReadUInt32Data+0x1114>
    d28c:	b	e0fc <ReadUInt32Data+0xec8>
    d290:	b	e22c <ReadUInt32Data+0xff8>
    d294:	b	dc44 <ReadUInt32Data+0xa10>
    d298:	b	dea0 <ReadUInt32Data+0xc6c>
    d29c:	b	d794 <ReadUInt32Data+0x560>
    d2a0:	b	d9ec <ReadUInt32Data+0x7b8>
    d2a4:	b	d524 <ReadUInt32Data+0x2f0>
    d2a8:	b	e348 <ReadUInt32Data+0x1114>
    d2ac:	b	d2b0 <ReadUInt32Data+0x7c>
    d2b0:	ldr	r8, [r9, #20]
    d2b4:	cmp	r8, #0
    d2b8:	beq	d404 <ReadUInt32Data+0x1d0>
    d2bc:	cmp	r7, #256	; 0x100
    d2c0:	ble	d3b4 <ReadUInt32Data+0x180>
    d2c4:	sub	r3, r7, #256	; 0x100
    d2c8:	mov	r2, r3
    d2cc:	cmp	r3, #0
    d2d0:	movle	sl, #0
    d2d4:	movle	r8, sl
    d2d8:	ble	d354 <ReadUInt32Data+0x120>
    d2dc:	ldr	r3, [sp, #4]
    d2e0:	sub	fp, r3, #4
    d2e4:	mov	sl, #0
    d2e8:	mov	r8, sl
    d2ec:	add	r3, sp, #16
    d2f0:	str	r3, [sp, #8]
    d2f4:	str	r7, [sp, #12]
    d2f8:	mov	r7, r2
    d2fc:	ldr	r3, [r9]
    d300:	mov	r2, #256	; 0x100
    d304:	ldr	r1, [sp]
    d308:	ldr	r4, [sp, #8]
    d30c:	mov	r0, r4
    d310:	bl	1588 <fread@plt>
    d314:	add	r8, r8, r0
    d318:	add	r6, sp, #2064	; 0x810
    d31c:	mov	r5, fp
    d320:	mov	r0, r4
    d324:	bl	1b94 <Mat_doubleSwap>
    d328:	vcvt.u32.f64	s0, d0
    d32c:	vmov	r3, s0
    d330:	str	r3, [r5, #4]!
    d334:	add	r4, r4, #8
    d338:	cmp	r4, r6
    d33c:	bne	d320 <ReadUInt32Data+0xec>
    d340:	add	sl, sl, #256	; 0x100
    d344:	add	fp, fp, #1024	; 0x400
    d348:	cmp	sl, r7
    d34c:	blt	d2fc <ReadUInt32Data+0xc8>
    d350:	ldr	r7, [sp, #12]
    d354:	cmp	r7, sl
    d358:	ble	e178 <ReadUInt32Data+0xf44>
    d35c:	sub	r7, r7, sl
    d360:	ldr	r3, [r9]
    d364:	mov	r2, r7
    d368:	ldr	r1, [sp]
    d36c:	add	r0, sp, #16
    d370:	bl	1588 <fread@plt>
    d374:	add	r8, r8, r0
    d378:	cmp	r7, #0
    d37c:	ble	e178 <ReadUInt32Data+0xf44>
    d380:	add	r5, sp, #16
    d384:	ldr	r3, [sp, #4]
    d388:	add	sl, r3, sl, lsl #2
    d38c:	mov	r4, #0
    d390:	mov	r0, r5
    d394:	bl	1b94 <Mat_doubleSwap>
    d398:	vcvt.u32.f64	s0, d0
    d39c:	vstmia	sl!, {s0}
    d3a0:	add	r4, r4, #1
    d3a4:	add	r5, r5, #8
    d3a8:	cmp	r7, r4
    d3ac:	bne	d390 <ReadUInt32Data+0x15c>
    d3b0:	b	e178 <ReadUInt32Data+0xf44>
    d3b4:	ldr	r3, [r9]
    d3b8:	mov	r2, r7
    d3bc:	ldr	r1, [sp]
    d3c0:	add	r0, sp, #16
    d3c4:	bl	1588 <fread@plt>
    d3c8:	mov	r8, r0
    d3cc:	cmp	r7, #0
    d3d0:	ble	e178 <ReadUInt32Data+0xf44>
    d3d4:	add	r5, sp, #16
    d3d8:	ldr	r3, [sp, #4]
    d3dc:	mov	r4, r3
    d3e0:	add	r7, r3, r7, lsl #2
    d3e4:	mov	r0, r5
    d3e8:	bl	1b94 <Mat_doubleSwap>
    d3ec:	vcvt.u32.f64	s0, d0
    d3f0:	vstmia	r4!, {s0}
    d3f4:	add	r5, r5, #8
    d3f8:	cmp	r4, r7
    d3fc:	bne	d3e4 <ReadUInt32Data+0x1b0>
    d400:	b	e178 <ReadUInt32Data+0xf44>
    d404:	cmp	r7, #256	; 0x100
    d408:	ble	d4d8 <ReadUInt32Data+0x2a4>
    d40c:	sub	sl, r7, #256	; 0x100
    d410:	cmp	sl, #0
    d414:	movle	r4, r8
    d418:	ble	d47c <ReadUInt32Data+0x248>
    d41c:	ldr	r3, [sp, #4]
    d420:	sub	r5, r3, #4
    d424:	mov	r4, r8
    d428:	add	r6, sp, #16
    d42c:	mov	fp, #256	; 0x100
    d430:	ldr	r3, [r9]
    d434:	mov	r2, fp
    d438:	ldr	r1, [sp]
    d43c:	mov	r0, r6
    d440:	bl	1588 <fread@plt>
    d444:	add	r8, r8, r0
    d448:	mov	r3, r6
    d44c:	add	r1, sp, #2064	; 0x810
    d450:	mov	r2, r5
    d454:	vldmia	r3!, {d7}
    d458:	vcvt.u32.f64	s14, d7
    d45c:	vmov	r0, s14
    d460:	str	r0, [r2, #4]!
    d464:	cmp	r3, r1
    d468:	bne	d454 <ReadUInt32Data+0x220>
    d46c:	add	r4, r4, #256	; 0x100
    d470:	add	r5, r5, #1024	; 0x400
    d474:	cmp	r4, sl
    d478:	blt	d430 <ReadUInt32Data+0x1fc>
    d47c:	cmp	r7, r4
    d480:	ble	e178 <ReadUInt32Data+0xf44>
    d484:	sub	r7, r7, r4
    d488:	ldr	r3, [r9]
    d48c:	mov	r2, r7
    d490:	ldr	r1, [sp]
    d494:	add	r0, sp, #16
    d498:	bl	1588 <fread@plt>
    d49c:	add	r8, r8, r0
    d4a0:	cmp	r7, #0
    d4a4:	ble	e178 <ReadUInt32Data+0xf44>
    d4a8:	add	r2, sp, #16
    d4ac:	sub	r3, r4, #-1073741823	; 0xc0000001
    d4b0:	ldr	r1, [sp, #4]
    d4b4:	add	r3, r1, r3, lsl #2
    d4b8:	add	r7, r2, r7, lsl #3
    d4bc:	vldmia	r2!, {d7}
    d4c0:	vcvt.u32.f64	s14, d7
    d4c4:	vmov	r1, s14
    d4c8:	str	r1, [r3, #4]!
    d4cc:	cmp	r2, r7
    d4d0:	bne	d4bc <ReadUInt32Data+0x288>
    d4d4:	b	e178 <ReadUInt32Data+0xf44>
    d4d8:	ldr	r3, [r9]
    d4dc:	mov	r2, r7
    d4e0:	ldr	r1, [sp]
    d4e4:	add	r0, sp, #16
    d4e8:	bl	1588 <fread@plt>
    d4ec:	mov	r8, r0
    d4f0:	cmp	r7, #0
    d4f4:	ble	e178 <ReadUInt32Data+0xf44>
    d4f8:	add	r3, sp, #16
    d4fc:	ldr	r2, [sp, #4]
    d500:	sub	r2, r2, #4
    d504:	add	r7, r3, r7, lsl #3
    d508:	vldmia	r3!, {d7}
    d50c:	vcvt.u32.f64	s14, d7
    d510:	vmov	r1, s14
    d514:	str	r1, [r2, #4]!
    d518:	cmp	r3, r7
    d51c:	bne	d508 <ReadUInt32Data+0x2d4>
    d520:	b	e178 <ReadUInt32Data+0xf44>
    d524:	ldr	r8, [r9, #20]
    d528:	cmp	r8, #0
    d52c:	beq	d678 <ReadUInt32Data+0x444>
    d530:	cmp	r7, #256	; 0x100
    d534:	ble	d628 <ReadUInt32Data+0x3f4>
    d538:	sub	r3, r7, #256	; 0x100
    d53c:	mov	r2, r3
    d540:	cmp	r3, #0
    d544:	movle	sl, #0
    d548:	movle	r8, sl
    d54c:	ble	d5c8 <ReadUInt32Data+0x394>
    d550:	ldr	r3, [sp, #4]
    d554:	sub	fp, r3, #4
    d558:	mov	sl, #0
    d55c:	mov	r8, sl
    d560:	add	r3, sp, #16
    d564:	str	r3, [sp, #8]
    d568:	add	r6, sp, #1040	; 0x410
    d56c:	str	r7, [sp, #12]
    d570:	mov	r7, r2
    d574:	ldr	r3, [r9]
    d578:	mov	r2, #256	; 0x100
    d57c:	ldr	r1, [sp]
    d580:	ldr	r4, [sp, #8]
    d584:	mov	r0, r4
    d588:	bl	1588 <fread@plt>
    d58c:	add	r8, r8, r0
    d590:	mov	r5, fp
    d594:	mov	r0, r4
    d598:	bl	1b38 <Mat_floatSwap>
    d59c:	vcvt.u32.f32	s0, s0
    d5a0:	vmov	r3, s0
    d5a4:	str	r3, [r5, #4]!
    d5a8:	add	r4, r4, #4
    d5ac:	cmp	r4, r6
    d5b0:	bne	d594 <ReadUInt32Data+0x360>
    d5b4:	add	sl, sl, #256	; 0x100
    d5b8:	add	fp, fp, #1024	; 0x400
    d5bc:	cmp	sl, r7
    d5c0:	blt	d574 <ReadUInt32Data+0x340>
    d5c4:	ldr	r7, [sp, #12]
    d5c8:	cmp	r7, sl
    d5cc:	ble	e178 <ReadUInt32Data+0xf44>
    d5d0:	sub	r7, r7, sl
    d5d4:	ldr	r3, [r9]
    d5d8:	mov	r2, r7
    d5dc:	ldr	r1, [sp]
    d5e0:	add	r0, sp, #16
    d5e4:	bl	1588 <fread@plt>
    d5e8:	add	r8, r8, r0
    d5ec:	cmp	r7, #0
    d5f0:	ble	e178 <ReadUInt32Data+0xf44>
    d5f4:	add	r5, sp, #16
    d5f8:	ldr	r3, [sp, #4]
    d5fc:	add	sl, r3, sl, lsl #2
    d600:	mov	r4, #0
    d604:	mov	r0, r5
    d608:	bl	1b38 <Mat_floatSwap>
    d60c:	vcvt.u32.f32	s0, s0
    d610:	vstmia	sl!, {s0}
    d614:	add	r4, r4, #1
    d618:	add	r5, r5, #4
    d61c:	cmp	r7, r4
    d620:	bne	d604 <ReadUInt32Data+0x3d0>
    d624:	b	e178 <ReadUInt32Data+0xf44>
    d628:	ldr	r3, [r9]
    d62c:	mov	r2, r7
    d630:	ldr	r1, [sp]
    d634:	add	r0, sp, #16
    d638:	bl	1588 <fread@plt>
    d63c:	mov	r8, r0
    d640:	cmp	r7, #0
    d644:	ble	e178 <ReadUInt32Data+0xf44>
    d648:	add	r5, sp, #16
    d64c:	ldr	r3, [sp, #4]
    d650:	mov	r4, r3
    d654:	add	r7, r3, r7, lsl #2
    d658:	mov	r0, r5
    d65c:	bl	1b38 <Mat_floatSwap>
    d660:	vcvt.u32.f32	s0, s0
    d664:	vstmia	r4!, {s0}
    d668:	add	r5, r5, #4
    d66c:	cmp	r4, r7
    d670:	bne	d658 <ReadUInt32Data+0x424>
    d674:	b	e178 <ReadUInt32Data+0xf44>
    d678:	cmp	r7, #256	; 0x100
    d67c:	ble	d748 <ReadUInt32Data+0x514>
    d680:	sub	sl, r7, #256	; 0x100
    d684:	cmp	sl, #0
    d688:	movle	r5, r8
    d68c:	ble	d6ec <ReadUInt32Data+0x4b8>
    d690:	ldr	r3, [sp, #4]
    d694:	sub	r6, r3, #4
    d698:	mov	r5, r8
    d69c:	add	fp, sp, #16
    d6a0:	add	r4, sp, #1040	; 0x410
    d6a4:	ldr	r3, [r9]
    d6a8:	mov	r2, #256	; 0x100
    d6ac:	ldr	r1, [sp]
    d6b0:	mov	r0, fp
    d6b4:	bl	1588 <fread@plt>
    d6b8:	add	r8, r8, r0
    d6bc:	mov	r3, fp
    d6c0:	mov	r2, r6
    d6c4:	vldmia	r3!, {s15}
    d6c8:	vcvt.u32.f32	s15, s15
    d6cc:	vmov	r1, s15
    d6d0:	str	r1, [r2, #4]!
    d6d4:	cmp	r3, r4
    d6d8:	bne	d6c4 <ReadUInt32Data+0x490>
    d6dc:	add	r5, r5, #256	; 0x100
    d6e0:	add	r6, r6, #1024	; 0x400
    d6e4:	cmp	r5, sl
    d6e8:	blt	d6a4 <ReadUInt32Data+0x470>
    d6ec:	cmp	r7, r5
    d6f0:	ble	e178 <ReadUInt32Data+0xf44>
    d6f4:	sub	r7, r7, r5
    d6f8:	ldr	r3, [r9]
    d6fc:	mov	r2, r7
    d700:	ldr	r1, [sp]
    d704:	add	r0, sp, #16
    d708:	bl	1588 <fread@plt>
    d70c:	add	r8, r8, r0
    d710:	cmp	r7, #0
    d714:	ble	e178 <ReadUInt32Data+0xf44>
    d718:	add	r2, sp, #16
    d71c:	sub	r3, r5, #-1073741823	; 0xc0000001
    d720:	ldr	r1, [sp, #4]
    d724:	add	r3, r1, r3, lsl #2
    d728:	add	r7, r2, r7, lsl #2
    d72c:	vldmia	r2!, {s15}
    d730:	vcvt.u32.f32	s15, s15
    d734:	vmov	r1, s15
    d738:	str	r1, [r3, #4]!
    d73c:	cmp	r2, r7
    d740:	bne	d72c <ReadUInt32Data+0x4f8>
    d744:	b	e178 <ReadUInt32Data+0xf44>
    d748:	ldr	r3, [r9]
    d74c:	mov	r2, r7
    d750:	ldr	r1, [sp]
    d754:	add	r0, sp, #16
    d758:	bl	1588 <fread@plt>
    d75c:	mov	r8, r0
    d760:	cmp	r7, #0
    d764:	ble	e178 <ReadUInt32Data+0xf44>
    d768:	add	r3, sp, #16
    d76c:	ldr	r2, [sp, #4]
    d770:	sub	r2, r2, #4
    d774:	add	r7, r3, r7, lsl #2
    d778:	vldmia	r3!, {s15}
    d77c:	vcvt.u32.f32	s15, s15
    d780:	vmov	r1, s15
    d784:	str	r1, [r2, #4]!
    d788:	cmp	r3, r7
    d78c:	bne	d778 <ReadUInt32Data+0x544>
    d790:	b	e178 <ReadUInt32Data+0xf44>
    d794:	ldr	r8, [r9, #20]
    d798:	cmp	r8, #0
    d79c:	beq	d8d8 <ReadUInt32Data+0x6a4>
    d7a0:	cmp	r7, #256	; 0x100
    d7a4:	ble	d88c <ReadUInt32Data+0x658>
    d7a8:	sub	r3, r7, #256	; 0x100
    d7ac:	mov	r2, r3
    d7b0:	cmp	r3, #0
    d7b4:	movle	sl, #0
    d7b8:	movle	r8, sl
    d7bc:	ble	d830 <ReadUInt32Data+0x5fc>
    d7c0:	ldr	r3, [sp, #4]
    d7c4:	sub	fp, r3, #4
    d7c8:	mov	sl, #0
    d7cc:	mov	r8, sl
    d7d0:	add	r3, sp, #16
    d7d4:	str	r3, [sp, #8]
    d7d8:	add	r6, sp, #1040	; 0x410
    d7dc:	str	r7, [sp, #12]
    d7e0:	mov	r7, r2
    d7e4:	ldr	r3, [r9]
    d7e8:	mov	r2, #256	; 0x100
    d7ec:	ldr	r1, [sp]
    d7f0:	ldr	r4, [sp, #8]
    d7f4:	mov	r0, r4
    d7f8:	bl	1588 <fread@plt>
    d7fc:	add	r8, r8, r0
    d800:	mov	r5, fp
    d804:	mov	r0, r4
    d808:	bl	1a20 <Mat_int32Swap>
    d80c:	str	r0, [r5, #4]!
    d810:	add	r4, r4, #4
    d814:	cmp	r4, r6
    d818:	bne	d804 <ReadUInt32Data+0x5d0>
    d81c:	add	sl, sl, #256	; 0x100
    d820:	add	fp, fp, #1024	; 0x400
    d824:	cmp	sl, r7
    d828:	blt	d7e4 <ReadUInt32Data+0x5b0>
    d82c:	ldr	r7, [sp, #12]
    d830:	cmp	r7, sl
    d834:	ble	e178 <ReadUInt32Data+0xf44>
    d838:	sub	r7, r7, sl
    d83c:	ldr	r3, [r9]
    d840:	mov	r2, r7
    d844:	ldr	r1, [sp]
    d848:	add	r0, sp, #16
    d84c:	bl	1588 <fread@plt>
    d850:	add	r8, r8, r0
    d854:	cmp	r7, #0
    d858:	ble	e178 <ReadUInt32Data+0xf44>
    d85c:	add	r5, sp, #16
    d860:	ldr	r3, [sp, #4]
    d864:	add	sl, r3, sl, lsl #2
    d868:	mov	r4, #0
    d86c:	mov	r0, r5
    d870:	bl	1a20 <Mat_int32Swap>
    d874:	str	r0, [sl], #4
    d878:	add	r4, r4, #1
    d87c:	add	r5, r5, #4
    d880:	cmp	r7, r4
    d884:	bne	d86c <ReadUInt32Data+0x638>
    d888:	b	e178 <ReadUInt32Data+0xf44>
    d88c:	ldr	r3, [r9]
    d890:	mov	r2, r7
    d894:	ldr	r1, [sp]
    d898:	add	r0, sp, #16
    d89c:	bl	1588 <fread@plt>
    d8a0:	mov	r8, r0
    d8a4:	cmp	r7, #0
    d8a8:	ble	e178 <ReadUInt32Data+0xf44>
    d8ac:	add	r5, sp, #16
    d8b0:	ldr	r3, [sp, #4]
    d8b4:	mov	r4, r3
    d8b8:	add	r7, r3, r7, lsl #2
    d8bc:	mov	r0, r5
    d8c0:	bl	1a20 <Mat_int32Swap>
    d8c4:	str	r0, [r4], #4
    d8c8:	add	r5, r5, #4
    d8cc:	cmp	r4, r7
    d8d0:	bne	d8bc <ReadUInt32Data+0x688>
    d8d4:	b	e178 <ReadUInt32Data+0xf44>
    d8d8:	cmp	r7, #256	; 0x100
    d8dc:	ble	d9a0 <ReadUInt32Data+0x76c>
    d8e0:	sub	fp, r7, #256	; 0x100
    d8e4:	cmp	fp, #0
    d8e8:	movle	r5, r8
    d8ec:	ble	d944 <ReadUInt32Data+0x710>
    d8f0:	ldr	r3, [sp, #4]
    d8f4:	sub	r6, r3, #4
    d8f8:	mov	r5, r8
    d8fc:	add	sl, sp, #16
    d900:	add	r4, sl, #1020	; 0x3fc
    d904:	ldr	r3, [r9]
    d908:	mov	r2, #256	; 0x100
    d90c:	ldr	r1, [sp]
    d910:	mov	r0, sl
    d914:	bl	1588 <fread@plt>
    d918:	add	r8, r8, r0
    d91c:	sub	r3, sl, #4
    d920:	mov	r2, r6
    d924:	ldr	r1, [r3, #4]!
    d928:	str	r1, [r2, #4]!
    d92c:	cmp	r3, r4
    d930:	bne	d924 <ReadUInt32Data+0x6f0>
    d934:	add	r5, r5, #256	; 0x100
    d938:	add	r6, r6, #1024	; 0x400
    d93c:	cmp	r5, fp
    d940:	blt	d904 <ReadUInt32Data+0x6d0>
    d944:	cmp	r7, r5
    d948:	ble	e178 <ReadUInt32Data+0xf44>
    d94c:	sub	r7, r7, r5
    d950:	ldr	r3, [r9]
    d954:	mov	r2, r7
    d958:	ldr	r1, [sp]
    d95c:	add	r0, sp, #16
    d960:	bl	1588 <fread@plt>
    d964:	add	r8, r8, r0
    d968:	cmp	r7, #0
    d96c:	ble	e178 <ReadUInt32Data+0xf44>
    d970:	add	r0, sp, #16
    d974:	add	r2, sp, #12
    d978:	sub	r3, r5, #-1073741823	; 0xc0000001
    d97c:	ldr	r1, [sp, #4]
    d980:	add	r3, r1, r3, lsl #2
    d984:	sub	r7, r7, #-1073741823	; 0xc0000001
    d988:	add	r0, r0, r7, lsl #2
    d98c:	ldr	r1, [r2, #4]!
    d990:	str	r1, [r3, #4]!
    d994:	cmp	r2, r0
    d998:	bne	d98c <ReadUInt32Data+0x758>
    d99c:	b	e178 <ReadUInt32Data+0xf44>
    d9a0:	ldr	r3, [r9]
    d9a4:	mov	r2, r7
    d9a8:	ldr	r1, [sp]
    d9ac:	add	r0, sp, #16
    d9b0:	bl	1588 <fread@plt>
    d9b4:	mov	r8, r0
    d9b8:	cmp	r7, #0
    d9bc:	ble	e178 <ReadUInt32Data+0xf44>
    d9c0:	add	r0, sp, #16
    d9c4:	add	r3, sp, #12
    d9c8:	ldr	r2, [sp, #4]
    d9cc:	sub	r2, r2, #4
    d9d0:	sub	r7, r7, #-1073741823	; 0xc0000001
    d9d4:	add	r0, r0, r7, lsl #2
    d9d8:	ldr	r1, [r3, #4]!
    d9dc:	str	r1, [r2, #4]!
    d9e0:	cmp	r3, r0
    d9e4:	bne	d9d8 <ReadUInt32Data+0x7a4>
    d9e8:	b	e178 <ReadUInt32Data+0xf44>
    d9ec:	ldr	r8, [r9, #20]
    d9f0:	cmp	r8, #0
    d9f4:	beq	db30 <ReadUInt32Data+0x8fc>
    d9f8:	cmp	r7, #256	; 0x100
    d9fc:	ble	dae4 <ReadUInt32Data+0x8b0>
    da00:	sub	r3, r7, #256	; 0x100
    da04:	mov	r2, r3
    da08:	cmp	r3, #0
    da0c:	movle	sl, #0
    da10:	movle	r8, sl
    da14:	ble	da88 <ReadUInt32Data+0x854>
    da18:	ldr	r3, [sp, #4]
    da1c:	sub	fp, r3, #4
    da20:	mov	sl, #0
    da24:	mov	r8, sl
    da28:	add	r3, sp, #16
    da2c:	str	r3, [sp, #8]
    da30:	add	r6, sp, #1040	; 0x410
    da34:	str	r7, [sp, #12]
    da38:	mov	r7, r2
    da3c:	ldr	r3, [r9]
    da40:	mov	r2, #256	; 0x100
    da44:	ldr	r1, [sp]
    da48:	ldr	r4, [sp, #8]
    da4c:	mov	r0, r4
    da50:	bl	1588 <fread@plt>
    da54:	add	r8, r8, r0
    da58:	mov	r5, fp
    da5c:	mov	r0, r4
    da60:	bl	1a88 <Mat_uint32Swap>
    da64:	str	r0, [r5, #4]!
    da68:	add	r4, r4, #4
    da6c:	cmp	r4, r6
    da70:	bne	da5c <ReadUInt32Data+0x828>
    da74:	add	sl, sl, #256	; 0x100
    da78:	add	fp, fp, #1024	; 0x400
    da7c:	cmp	sl, r7
    da80:	blt	da3c <ReadUInt32Data+0x808>
    da84:	ldr	r7, [sp, #12]
    da88:	cmp	r7, sl
    da8c:	ble	e178 <ReadUInt32Data+0xf44>
    da90:	sub	r7, r7, sl
    da94:	ldr	r3, [r9]
    da98:	mov	r2, r7
    da9c:	ldr	r1, [sp]
    daa0:	add	r0, sp, #16
    daa4:	bl	1588 <fread@plt>
    daa8:	add	r8, r8, r0
    daac:	cmp	r7, #0
    dab0:	ble	e178 <ReadUInt32Data+0xf44>
    dab4:	add	r5, sp, #16
    dab8:	ldr	r3, [sp, #4]
    dabc:	add	sl, r3, sl, lsl #2
    dac0:	mov	r4, #0
    dac4:	mov	r0, r5
    dac8:	bl	1a88 <Mat_uint32Swap>
    dacc:	str	r0, [sl], #4
    dad0:	add	r4, r4, #1
    dad4:	add	r5, r5, #4
    dad8:	cmp	r7, r4
    dadc:	bne	dac4 <ReadUInt32Data+0x890>
    dae0:	b	e178 <ReadUInt32Data+0xf44>
    dae4:	ldr	r3, [r9]
    dae8:	mov	r2, r7
    daec:	ldr	r1, [sp]
    daf0:	add	r0, sp, #16
    daf4:	bl	1588 <fread@plt>
    daf8:	mov	r8, r0
    dafc:	cmp	r7, #0
    db00:	ble	e178 <ReadUInt32Data+0xf44>
    db04:	add	r5, sp, #16
    db08:	ldr	r3, [sp, #4]
    db0c:	mov	r4, r3
    db10:	add	r7, r3, r7, lsl #2
    db14:	mov	r0, r5
    db18:	bl	1a88 <Mat_uint32Swap>
    db1c:	str	r0, [r4], #4
    db20:	add	r5, r5, #4
    db24:	cmp	r4, r7
    db28:	bne	db14 <ReadUInt32Data+0x8e0>
    db2c:	b	e178 <ReadUInt32Data+0xf44>
    db30:	cmp	r7, #256	; 0x100
    db34:	ble	dbf8 <ReadUInt32Data+0x9c4>
    db38:	sub	fp, r7, #256	; 0x100
    db3c:	cmp	fp, #0
    db40:	movle	r5, r8
    db44:	ble	db9c <ReadUInt32Data+0x968>
    db48:	ldr	r3, [sp, #4]
    db4c:	sub	r6, r3, #4
    db50:	mov	r5, r8
    db54:	add	sl, sp, #16
    db58:	add	r4, sl, #1020	; 0x3fc
    db5c:	ldr	r3, [r9]
    db60:	mov	r2, #256	; 0x100
    db64:	ldr	r1, [sp]
    db68:	mov	r0, sl
    db6c:	bl	1588 <fread@plt>
    db70:	add	r8, r8, r0
    db74:	sub	r3, sl, #4
    db78:	mov	r2, r6
    db7c:	ldr	r1, [r3, #4]!
    db80:	str	r1, [r2, #4]!
    db84:	cmp	r3, r4
    db88:	bne	db7c <ReadUInt32Data+0x948>
    db8c:	add	r5, r5, #256	; 0x100
    db90:	add	r6, r6, #1024	; 0x400
    db94:	cmp	r5, fp
    db98:	blt	db5c <ReadUInt32Data+0x928>
    db9c:	cmp	r7, r5
    dba0:	ble	e178 <ReadUInt32Data+0xf44>
    dba4:	sub	r7, r7, r5
    dba8:	ldr	r3, [r9]
    dbac:	mov	r2, r7
    dbb0:	ldr	r1, [sp]
    dbb4:	add	r0, sp, #16
    dbb8:	bl	1588 <fread@plt>
    dbbc:	add	r8, r8, r0
    dbc0:	cmp	r7, #0
    dbc4:	ble	e178 <ReadUInt32Data+0xf44>
    dbc8:	add	r0, sp, #16
    dbcc:	add	r2, sp, #12
    dbd0:	sub	r3, r5, #-1073741823	; 0xc0000001
    dbd4:	ldr	r1, [sp, #4]
    dbd8:	add	r3, r1, r3, lsl #2
    dbdc:	sub	r7, r7, #-1073741823	; 0xc0000001
    dbe0:	add	r0, r0, r7, lsl #2
    dbe4:	ldr	r1, [r2, #4]!
    dbe8:	str	r1, [r3, #4]!
    dbec:	cmp	r2, r0
    dbf0:	bne	dbe4 <ReadUInt32Data+0x9b0>
    dbf4:	b	e178 <ReadUInt32Data+0xf44>
    dbf8:	ldr	r3, [r9]
    dbfc:	mov	r2, r7
    dc00:	ldr	r1, [sp]
    dc04:	add	r0, sp, #16
    dc08:	bl	1588 <fread@plt>
    dc0c:	mov	r8, r0
    dc10:	cmp	r7, #0
    dc14:	ble	e178 <ReadUInt32Data+0xf44>
    dc18:	add	r0, sp, #16
    dc1c:	add	r3, sp, #12
    dc20:	ldr	r2, [sp, #4]
    dc24:	sub	r2, r2, #4
    dc28:	sub	r7, r7, #-1073741823	; 0xc0000001
    dc2c:	add	r0, r0, r7, lsl #2
    dc30:	ldr	r1, [r3, #4]!
    dc34:	str	r1, [r2, #4]!
    dc38:	cmp	r3, r0
    dc3c:	bne	dc30 <ReadUInt32Data+0x9fc>
    dc40:	b	e178 <ReadUInt32Data+0xf44>
    dc44:	ldr	r8, [r9, #20]
    dc48:	cmp	r8, #0
    dc4c:	beq	dd88 <ReadUInt32Data+0xb54>
    dc50:	cmp	r7, #256	; 0x100
    dc54:	ble	dd3c <ReadUInt32Data+0xb08>
    dc58:	sub	r3, r7, #256	; 0x100
    dc5c:	mov	r2, r3
    dc60:	cmp	r3, #0
    dc64:	movle	sl, #0
    dc68:	movle	r8, sl
    dc6c:	ble	dce0 <ReadUInt32Data+0xaac>
    dc70:	ldr	r3, [sp, #4]
    dc74:	sub	fp, r3, #4
    dc78:	mov	sl, #0
    dc7c:	mov	r8, sl
    dc80:	add	r3, sp, #16
    dc84:	str	r3, [sp, #8]
    dc88:	add	r6, sp, #528	; 0x210
    dc8c:	str	r7, [sp, #12]
    dc90:	mov	r7, r2
    dc94:	ldr	r3, [r9]
    dc98:	mov	r2, #256	; 0x100
    dc9c:	ldr	r1, [sp]
    dca0:	ldr	r4, [sp, #8]
    dca4:	mov	r0, r4
    dca8:	bl	1588 <fread@plt>
    dcac:	add	r8, r8, r0
    dcb0:	mov	r5, fp
    dcb4:	mov	r0, r4
    dcb8:	bl	1ae4 <Mat_int16Swap>
    dcbc:	str	r0, [r5, #4]!
    dcc0:	add	r4, r4, #2
    dcc4:	cmp	r4, r6
    dcc8:	bne	dcb4 <ReadUInt32Data+0xa80>
    dccc:	add	sl, sl, #256	; 0x100
    dcd0:	add	fp, fp, #1024	; 0x400
    dcd4:	cmp	sl, r7
    dcd8:	blt	dc94 <ReadUInt32Data+0xa60>
    dcdc:	ldr	r7, [sp, #12]
    dce0:	cmp	r7, sl
    dce4:	ble	e178 <ReadUInt32Data+0xf44>
    dce8:	sub	r7, r7, sl
    dcec:	ldr	r3, [r9]
    dcf0:	mov	r2, r7
    dcf4:	ldr	r1, [sp]
    dcf8:	add	r0, sp, #16
    dcfc:	bl	1588 <fread@plt>
    dd00:	add	r8, r8, r0
    dd04:	cmp	r7, #0
    dd08:	ble	e178 <ReadUInt32Data+0xf44>
    dd0c:	ldr	r3, [sp, #4]
    dd10:	add	sl, r3, sl, lsl #2
    dd14:	lsl	r7, r7, #1
    dd18:	mov	r4, #0
    dd1c:	add	r5, sp, #16
    dd20:	add	r0, r5, r4
    dd24:	bl	1ae4 <Mat_int16Swap>
    dd28:	str	r0, [sl], #4
    dd2c:	add	r4, r4, #2
    dd30:	cmp	r4, r7
    dd34:	bne	dd20 <ReadUInt32Data+0xaec>
    dd38:	b	e178 <ReadUInt32Data+0xf44>
    dd3c:	ldr	r3, [r9]
    dd40:	mov	r2, r7
    dd44:	ldr	r1, [sp]
    dd48:	add	r0, sp, #16
    dd4c:	bl	1588 <fread@plt>
    dd50:	mov	r8, r0
    dd54:	cmp	r7, #0
    dd58:	ble	e178 <ReadUInt32Data+0xf44>
    dd5c:	add	r5, sp, #16
    dd60:	ldr	r3, [sp, #4]
    dd64:	mov	r4, r3
    dd68:	add	r7, r3, r7, lsl #2
    dd6c:	mov	r0, r5
    dd70:	bl	1ae4 <Mat_int16Swap>
    dd74:	str	r0, [r4], #4
    dd78:	add	r5, r5, #2
    dd7c:	cmp	r7, r4
    dd80:	bne	dd6c <ReadUInt32Data+0xb38>
    dd84:	b	e178 <ReadUInt32Data+0xf44>
    dd88:	cmp	r7, #256	; 0x100
    dd8c:	ble	de54 <ReadUInt32Data+0xc20>
    dd90:	sub	fp, r7, #256	; 0x100
    dd94:	cmp	fp, #0
    dd98:	movle	r5, r8
    dd9c:	ble	ddf8 <ReadUInt32Data+0xbc4>
    dda0:	ldr	r3, [sp, #4]
    dda4:	sub	r6, r3, #4
    dda8:	mov	r5, r8
    ddac:	add	sl, sp, #16
    ddb0:	add	r4, sl, #508	; 0x1fc
    ddb4:	add	r4, r4, #2
    ddb8:	ldr	r3, [r9]
    ddbc:	mov	r2, #256	; 0x100
    ddc0:	ldr	r1, [sp]
    ddc4:	mov	r0, sl
    ddc8:	bl	1588 <fread@plt>
    ddcc:	add	r8, r8, r0
    ddd0:	sub	r3, sl, #2
    ddd4:	mov	r2, r6
    ddd8:	ldrsh	r1, [r3, #2]!
    dddc:	str	r1, [r2, #4]!
    dde0:	cmp	r3, r4
    dde4:	bne	ddd8 <ReadUInt32Data+0xba4>
    dde8:	add	r5, r5, #256	; 0x100
    ddec:	add	r6, r6, #1024	; 0x400
    ddf0:	cmp	r5, fp
    ddf4:	blt	ddb8 <ReadUInt32Data+0xb84>
    ddf8:	cmp	r7, r5
    ddfc:	ble	e178 <ReadUInt32Data+0xf44>
    de00:	sub	r7, r7, r5
    de04:	ldr	r3, [r9]
    de08:	mov	r2, r7
    de0c:	ldr	r1, [sp]
    de10:	add	r0, sp, #16
    de14:	bl	1588 <fread@plt>
    de18:	add	r8, r8, r0
    de1c:	cmp	r7, #0
    de20:	ble	e178 <ReadUInt32Data+0xf44>
    de24:	add	r0, sp, #16
    de28:	add	r2, sp, #14
    de2c:	sub	r3, r5, #-1073741823	; 0xc0000001
    de30:	ldr	r1, [sp, #4]
    de34:	add	r3, r1, r3, lsl #2
    de38:	sub	r7, r7, #-2147483647	; 0x80000001
    de3c:	add	r0, r0, r7, lsl #1
    de40:	ldrsh	r1, [r2, #2]!
    de44:	str	r1, [r3, #4]!
    de48:	cmp	r2, r0
    de4c:	bne	de40 <ReadUInt32Data+0xc0c>
    de50:	b	e178 <ReadUInt32Data+0xf44>
    de54:	ldr	r3, [r9]
    de58:	mov	r2, r7
    de5c:	ldr	r1, [sp]
    de60:	add	r0, sp, #16
    de64:	bl	1588 <fread@plt>
    de68:	mov	r8, r0
    de6c:	cmp	r7, #0
    de70:	ble	e178 <ReadUInt32Data+0xf44>
    de74:	add	r0, sp, #16
    de78:	add	r3, sp, #14
    de7c:	ldr	r2, [sp, #4]
    de80:	sub	r2, r2, #4
    de84:	sub	r7, r7, #-2147483647	; 0x80000001
    de88:	add	r0, r0, r7, lsl #1
    de8c:	ldrsh	r1, [r3, #2]!
    de90:	str	r1, [r2, #4]!
    de94:	cmp	r3, r0
    de98:	bne	de8c <ReadUInt32Data+0xc58>
    de9c:	b	e178 <ReadUInt32Data+0xf44>
    dea0:	ldr	r8, [r9, #20]
    dea4:	cmp	r8, #0
    dea8:	beq	dfe4 <ReadUInt32Data+0xdb0>
    deac:	cmp	r7, #256	; 0x100
    deb0:	ble	df98 <ReadUInt32Data+0xd64>
    deb4:	sub	r3, r7, #256	; 0x100
    deb8:	mov	r2, r3
    debc:	cmp	r3, #0
    dec0:	movle	sl, #0
    dec4:	movle	r8, sl
    dec8:	ble	df3c <ReadUInt32Data+0xd08>
    decc:	ldr	r3, [sp, #4]
    ded0:	sub	fp, r3, #4
    ded4:	mov	sl, #0
    ded8:	mov	r8, sl
    dedc:	add	r3, sp, #16
    dee0:	str	r3, [sp, #8]
    dee4:	add	r6, sp, #528	; 0x210
    dee8:	str	r7, [sp, #12]
    deec:	mov	r7, r2
    def0:	ldr	r3, [r9]
    def4:	mov	r2, #256	; 0x100
    def8:	ldr	r1, [sp]
    defc:	ldr	r4, [sp, #8]
    df00:	mov	r0, r4
    df04:	bl	1588 <fread@plt>
    df08:	add	r8, r8, r0
    df0c:	mov	r5, fp
    df10:	mov	r0, r4
    df14:	bl	1b1c <Mat_uint16Swap>
    df18:	str	r0, [r5, #4]!
    df1c:	add	r4, r4, #2
    df20:	cmp	r4, r6
    df24:	bne	df10 <ReadUInt32Data+0xcdc>
    df28:	add	sl, sl, #256	; 0x100
    df2c:	add	fp, fp, #1024	; 0x400
    df30:	cmp	sl, r7
    df34:	blt	def0 <ReadUInt32Data+0xcbc>
    df38:	ldr	r7, [sp, #12]
    df3c:	cmp	r7, sl
    df40:	ble	e178 <ReadUInt32Data+0xf44>
    df44:	sub	r7, r7, sl
    df48:	ldr	r3, [r9]
    df4c:	mov	r2, r7
    df50:	ldr	r1, [sp]
    df54:	add	r0, sp, #16
    df58:	bl	1588 <fread@plt>
    df5c:	add	r8, r8, r0
    df60:	cmp	r7, #0
    df64:	ble	e178 <ReadUInt32Data+0xf44>
    df68:	ldr	r3, [sp, #4]
    df6c:	add	sl, r3, sl, lsl #2
    df70:	lsl	r7, r7, #1
    df74:	mov	r4, #0
    df78:	add	r5, sp, #16
    df7c:	add	r0, r5, r4
    df80:	bl	1b1c <Mat_uint16Swap>
    df84:	str	r0, [sl], #4
    df88:	add	r4, r4, #2
    df8c:	cmp	r4, r7
    df90:	bne	df7c <ReadUInt32Data+0xd48>
    df94:	b	e178 <ReadUInt32Data+0xf44>
    df98:	ldr	r3, [r9]
    df9c:	mov	r2, r7
    dfa0:	ldr	r1, [sp]
    dfa4:	add	r0, sp, #16
    dfa8:	bl	1588 <fread@plt>
    dfac:	mov	r8, r0
    dfb0:	cmp	r7, #0
    dfb4:	ble	e178 <ReadUInt32Data+0xf44>
    dfb8:	add	r5, sp, #16
    dfbc:	ldr	r3, [sp, #4]
    dfc0:	mov	r4, r3
    dfc4:	add	r7, r3, r7, lsl #2
    dfc8:	mov	r0, r5
    dfcc:	bl	1b1c <Mat_uint16Swap>
    dfd0:	str	r0, [r4], #4
    dfd4:	add	r5, r5, #2
    dfd8:	cmp	r4, r7
    dfdc:	bne	dfc8 <ReadUInt32Data+0xd94>
    dfe0:	b	e178 <ReadUInt32Data+0xf44>
    dfe4:	cmp	r7, #256	; 0x100
    dfe8:	ble	e0b0 <ReadUInt32Data+0xe7c>
    dfec:	sub	fp, r7, #256	; 0x100
    dff0:	cmp	fp, #0
    dff4:	movle	r5, r8
    dff8:	ble	e054 <ReadUInt32Data+0xe20>
    dffc:	ldr	r3, [sp, #4]
    e000:	sub	r6, r3, #4
    e004:	mov	r5, r8
    e008:	add	sl, sp, #16
    e00c:	add	r4, sl, #508	; 0x1fc
    e010:	add	r4, r4, #2
    e014:	ldr	r3, [r9]
    e018:	mov	r2, #256	; 0x100
    e01c:	ldr	r1, [sp]
    e020:	mov	r0, sl
    e024:	bl	1588 <fread@plt>
    e028:	add	r8, r8, r0
    e02c:	sub	r3, sl, #2
    e030:	mov	r2, r6
    e034:	ldrh	r1, [r3, #2]!
    e038:	str	r1, [r2, #4]!
    e03c:	cmp	r3, r4
    e040:	bne	e034 <ReadUInt32Data+0xe00>
    e044:	add	r5, r5, #256	; 0x100
    e048:	add	r6, r6, #1024	; 0x400
    e04c:	cmp	r5, fp
    e050:	blt	e014 <ReadUInt32Data+0xde0>
    e054:	cmp	r7, r5
    e058:	ble	e178 <ReadUInt32Data+0xf44>
    e05c:	sub	r7, r7, r5
    e060:	ldr	r3, [r9]
    e064:	mov	r2, r7
    e068:	ldr	r1, [sp]
    e06c:	add	r0, sp, #16
    e070:	bl	1588 <fread@plt>
    e074:	add	r8, r8, r0
    e078:	cmp	r7, #0
    e07c:	ble	e178 <ReadUInt32Data+0xf44>
    e080:	add	r0, sp, #16
    e084:	add	r2, sp, #14
    e088:	sub	r3, r5, #-1073741823	; 0xc0000001
    e08c:	ldr	r1, [sp, #4]
    e090:	add	r3, r1, r3, lsl #2
    e094:	sub	r7, r7, #-2147483647	; 0x80000001
    e098:	add	r0, r0, r7, lsl #1
    e09c:	ldrh	r1, [r2, #2]!
    e0a0:	str	r1, [r3, #4]!
    e0a4:	cmp	r2, r0
    e0a8:	bne	e09c <ReadUInt32Data+0xe68>
    e0ac:	b	e178 <ReadUInt32Data+0xf44>
    e0b0:	ldr	r3, [r9]
    e0b4:	mov	r2, r7
    e0b8:	ldr	r1, [sp]
    e0bc:	add	r0, sp, #16
    e0c0:	bl	1588 <fread@plt>
    e0c4:	mov	r8, r0
    e0c8:	cmp	r7, #0
    e0cc:	ble	e178 <ReadUInt32Data+0xf44>
    e0d0:	add	r0, sp, #16
    e0d4:	add	r3, sp, #14
    e0d8:	ldr	r2, [sp, #4]
    e0dc:	sub	r2, r2, #4
    e0e0:	sub	r7, r7, #-2147483647	; 0x80000001
    e0e4:	add	r0, r0, r7, lsl #1
    e0e8:	ldrh	r1, [r3, #2]!
    e0ec:	str	r1, [r2, #4]!
    e0f0:	cmp	r3, r0
    e0f4:	bne	e0e8 <ReadUInt32Data+0xeb4>
    e0f8:	b	e178 <ReadUInt32Data+0xf44>
    e0fc:	cmp	r7, #256	; 0x100
    e100:	ble	e18c <ReadUInt32Data+0xf58>
    e104:	sub	fp, r7, #256	; 0x100
    e108:	cmp	fp, #0
    e10c:	movle	r5, #0
    e110:	movle	r8, r5
    e114:	ble	e170 <ReadUInt32Data+0xf3c>
    e118:	ldr	r3, [sp, #4]
    e11c:	sub	r6, r3, #4
    e120:	mov	r5, #0
    e124:	mov	r8, r5
    e128:	add	sl, sp, #16
    e12c:	add	r4, sl, #255	; 0xff
    e130:	ldr	r3, [r9]
    e134:	mov	r2, #256	; 0x100
    e138:	ldr	r1, [sp]
    e13c:	mov	r0, sl
    e140:	bl	1588 <fread@plt>
    e144:	add	r8, r8, r0
    e148:	sub	r3, sl, #1
    e14c:	mov	r2, r6
    e150:	ldrsb	r1, [r3, #1]!
    e154:	str	r1, [r2, #4]!
    e158:	cmp	r4, r3
    e15c:	bne	e150 <ReadUInt32Data+0xf1c>
    e160:	add	r5, r5, #256	; 0x100
    e164:	add	r6, r6, #1024	; 0x400
    e168:	cmp	r5, fp
    e16c:	blt	e130 <ReadUInt32Data+0xefc>
    e170:	cmp	r7, r5
    e174:	bgt	e1d8 <ReadUInt32Data+0xfa4>
    e178:	ldr	r3, [sp]
    e17c:	mul	r0, r3, r8
    e180:	add	sp, sp, #2064	; 0x810
    e184:	add	sp, sp, #4
    e188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e18c:	ldr	r3, [r9]
    e190:	mov	r2, r7
    e194:	ldr	r1, [sp]
    e198:	add	r0, sp, #16
    e19c:	bl	1588 <fread@plt>
    e1a0:	mov	r8, r0
    e1a4:	cmp	r7, #0
    e1a8:	ble	e178 <ReadUInt32Data+0xf44>
    e1ac:	add	r0, sp, #16
    e1b0:	add	r3, sp, #15
    e1b4:	ldr	r2, [sp, #4]
    e1b8:	sub	r2, r2, #4
    e1bc:	sub	r7, r7, #1
    e1c0:	add	r0, r0, r7
    e1c4:	ldrsb	r1, [r3, #1]!
    e1c8:	str	r1, [r2, #4]!
    e1cc:	cmp	r0, r3
    e1d0:	bne	e1c4 <ReadUInt32Data+0xf90>
    e1d4:	b	e178 <ReadUInt32Data+0xf44>
    e1d8:	sub	r7, r7, r5
    e1dc:	ldr	r3, [r9]
    e1e0:	mov	r2, r7
    e1e4:	ldr	r1, [sp]
    e1e8:	add	r0, sp, #16
    e1ec:	bl	1588 <fread@plt>
    e1f0:	add	r8, r8, r0
    e1f4:	cmp	r7, #0
    e1f8:	ble	e178 <ReadUInt32Data+0xf44>
    e1fc:	add	r0, sp, #16
    e200:	add	r2, sp, #15
    e204:	sub	r3, r5, #-1073741823	; 0xc0000001
    e208:	ldr	r1, [sp, #4]
    e20c:	add	r3, r1, r3, lsl #2
    e210:	sub	r7, r7, #1
    e214:	add	r0, r0, r7
    e218:	ldrsb	r1, [r2, #1]!
    e21c:	str	r1, [r3, #4]!
    e220:	cmp	r0, r2
    e224:	bne	e218 <ReadUInt32Data+0xfe4>
    e228:	b	e178 <ReadUInt32Data+0xf44>
    e22c:	cmp	r7, #256	; 0x100
    e230:	ble	e2fc <ReadUInt32Data+0x10c8>
    e234:	sub	fp, r7, #256	; 0x100
    e238:	cmp	fp, #0
    e23c:	movle	r5, #0
    e240:	movle	r8, r5
    e244:	ble	e2a0 <ReadUInt32Data+0x106c>
    e248:	ldr	r3, [sp, #4]
    e24c:	sub	r6, r3, #4
    e250:	mov	r5, #0
    e254:	mov	r8, r5
    e258:	add	sl, sp, #16
    e25c:	add	r4, sl, #255	; 0xff
    e260:	ldr	r3, [r9]
    e264:	mov	r2, #256	; 0x100
    e268:	ldr	r1, [sp]
    e26c:	mov	r0, sl
    e270:	bl	1588 <fread@plt>
    e274:	add	r8, r8, r0
    e278:	sub	r3, sl, #1
    e27c:	mov	r2, r6
    e280:	ldrb	r1, [r3, #1]!
    e284:	str	r1, [r2, #4]!
    e288:	cmp	r4, r3
    e28c:	bne	e280 <ReadUInt32Data+0x104c>
    e290:	add	r5, r5, #256	; 0x100
    e294:	add	r6, r6, #1024	; 0x400
    e298:	cmp	r5, fp
    e29c:	blt	e260 <ReadUInt32Data+0x102c>
    e2a0:	cmp	r7, r5
    e2a4:	ble	e178 <ReadUInt32Data+0xf44>
    e2a8:	sub	r7, r7, r5
    e2ac:	ldr	r3, [r9]
    e2b0:	mov	r2, r7
    e2b4:	ldr	r1, [sp]
    e2b8:	add	r0, sp, #16
    e2bc:	bl	1588 <fread@plt>
    e2c0:	add	r8, r8, r0
    e2c4:	cmp	r7, #0
    e2c8:	ble	e178 <ReadUInt32Data+0xf44>
    e2cc:	add	r0, sp, #16
    e2d0:	add	r2, sp, #15
    e2d4:	sub	r3, r5, #-1073741823	; 0xc0000001
    e2d8:	ldr	r1, [sp, #4]
    e2dc:	add	r3, r1, r3, lsl #2
    e2e0:	sub	r7, r7, #1
    e2e4:	add	r0, r0, r7
    e2e8:	ldrb	r1, [r2, #1]!
    e2ec:	str	r1, [r3, #4]!
    e2f0:	cmp	r0, r2
    e2f4:	bne	e2e8 <ReadUInt32Data+0x10b4>
    e2f8:	b	e178 <ReadUInt32Data+0xf44>
    e2fc:	ldr	r3, [r9]
    e300:	mov	r2, r7
    e304:	ldr	r1, [sp]
    e308:	add	r0, sp, #16
    e30c:	bl	1588 <fread@plt>
    e310:	mov	r8, r0
    e314:	cmp	r7, #0
    e318:	ble	e178 <ReadUInt32Data+0xf44>
    e31c:	add	r0, sp, #16
    e320:	add	r3, sp, #15
    e324:	ldr	r2, [sp, #4]
    e328:	sub	r2, r2, #4
    e32c:	sub	r7, r7, #1
    e330:	add	r0, r0, r7
    e334:	ldrb	r1, [r3, #1]!
    e338:	str	r1, [r2, #4]!
    e33c:	cmp	r0, r3
    e340:	bne	e334 <ReadUInt32Data+0x1100>
    e344:	b	e178 <ReadUInt32Data+0xf44>
    e348:	cmp	r4, #12
    e34c:	beq	e44c <ReadUInt32Data+0x1218>
    e350:	cmp	r4, #13
    e354:	movne	r8, #0
    e358:	bne	e178 <ReadUInt32Data+0xf44>
    e35c:	ldr	r8, [r9, #20]
    e360:	cmp	r8, #0
    e364:	beq	e6ec <ReadUInt32Data+0x14b8>
    e368:	cmp	r7, #256	; 0x100
    e36c:	ble	e6a0 <ReadUInt32Data+0x146c>
    e370:	sub	r3, r7, #256	; 0x100
    e374:	str	r3, [sp, #8]
    e378:	cmp	r3, #0
    e37c:	movle	sl, #0
    e380:	movle	r8, sl
    e384:	ble	e3f0 <ReadUInt32Data+0x11bc>
    e388:	ldr	r3, [sp, #4]
    e38c:	sub	fp, r3, #4
    e390:	mov	sl, #0
    e394:	mov	r8, sl
    e398:	add	r3, sp, #16
    e39c:	str	r3, [sp, #12]
    e3a0:	ldr	r3, [r9]
    e3a4:	mov	r2, #256	; 0x100
    e3a8:	ldr	r1, [sp]
    e3ac:	ldr	r4, [sp, #12]
    e3b0:	mov	r0, r4
    e3b4:	bl	1588 <fread@plt>
    e3b8:	add	r8, r8, r0
    e3bc:	add	r6, sp, #2064	; 0x810
    e3c0:	mov	r5, fp
    e3c4:	mov	r0, r4
    e3c8:	bl	1984 <Mat_uint64Swap>
    e3cc:	str	r0, [r5, #4]!
    e3d0:	add	r4, r4, #8
    e3d4:	cmp	r4, r6
    e3d8:	bne	e3c4 <ReadUInt32Data+0x1190>
    e3dc:	add	sl, sl, #256	; 0x100
    e3e0:	add	fp, fp, #1024	; 0x400
    e3e4:	ldr	r3, [sp, #8]
    e3e8:	cmp	sl, r3
    e3ec:	blt	e3a0 <ReadUInt32Data+0x116c>
    e3f0:	cmp	r7, sl
    e3f4:	ble	e178 <ReadUInt32Data+0xf44>
    e3f8:	sub	r7, r7, sl
    e3fc:	ldr	r3, [r9]
    e400:	mov	r2, r7
    e404:	ldr	r1, [sp]
    e408:	add	r0, sp, #16
    e40c:	bl	1588 <fread@plt>
    e410:	add	r8, r8, r0
    e414:	cmp	r7, #0
    e418:	ble	e178 <ReadUInt32Data+0xf44>
    e41c:	add	r5, sp, #16
    e420:	ldr	r3, [sp, #4]
    e424:	add	sl, r3, sl, lsl #2
    e428:	mov	r4, #0
    e42c:	mov	r0, r5
    e430:	bl	1984 <Mat_uint64Swap>
    e434:	str	r0, [sl], #4
    e438:	add	r4, r4, #1
    e43c:	add	r5, r5, #8
    e440:	cmp	r7, r4
    e444:	bne	e42c <ReadUInt32Data+0x11f8>
    e448:	b	e178 <ReadUInt32Data+0xf44>
    e44c:	ldr	r8, [r9, #20]
    e450:	cmp	r8, #0
    e454:	beq	e588 <ReadUInt32Data+0x1354>
    e458:	cmp	r7, #256	; 0x100
    e45c:	ble	e53c <ReadUInt32Data+0x1308>
    e460:	sub	r3, r7, #256	; 0x100
    e464:	str	r3, [sp, #8]
    e468:	cmp	r3, #0
    e46c:	movle	sl, #0
    e470:	movle	r8, sl
    e474:	ble	e4e0 <ReadUInt32Data+0x12ac>
    e478:	ldr	r3, [sp, #4]
    e47c:	sub	fp, r3, #4
    e480:	mov	sl, #0
    e484:	mov	r8, sl
    e488:	add	r3, sp, #16
    e48c:	str	r3, [sp, #12]
    e490:	ldr	r3, [r9]
    e494:	mov	r2, #256	; 0x100
    e498:	ldr	r1, [sp]
    e49c:	ldr	r4, [sp, #12]
    e4a0:	mov	r0, r4
    e4a4:	bl	1588 <fread@plt>
    e4a8:	add	r8, r8, r0
    e4ac:	add	r6, sp, #2064	; 0x810
    e4b0:	mov	r5, fp
    e4b4:	mov	r0, r4
    e4b8:	bl	18bc <Mat_int64Swap>
    e4bc:	str	r0, [r5, #4]!
    e4c0:	add	r4, r4, #8
    e4c4:	cmp	r6, r4
    e4c8:	bne	e4b4 <ReadUInt32Data+0x1280>
    e4cc:	add	sl, sl, #256	; 0x100
    e4d0:	add	fp, fp, #1024	; 0x400
    e4d4:	ldr	r3, [sp, #8]
    e4d8:	cmp	sl, r3
    e4dc:	blt	e490 <ReadUInt32Data+0x125c>
    e4e0:	cmp	r7, sl
    e4e4:	ble	e178 <ReadUInt32Data+0xf44>
    e4e8:	sub	r7, r7, sl
    e4ec:	ldr	r3, [r9]
    e4f0:	mov	r2, r7
    e4f4:	ldr	r1, [sp]
    e4f8:	add	r0, sp, #16
    e4fc:	bl	1588 <fread@plt>
    e500:	add	r8, r8, r0
    e504:	cmp	r7, #0
    e508:	ble	e178 <ReadUInt32Data+0xf44>
    e50c:	add	r5, sp, #16
    e510:	ldr	r3, [sp, #4]
    e514:	add	sl, r3, sl, lsl #2
    e518:	mov	r4, #0
    e51c:	mov	r0, r5
    e520:	bl	18bc <Mat_int64Swap>
    e524:	str	r0, [sl], #4
    e528:	add	r4, r4, #1
    e52c:	add	r5, r5, #8
    e530:	cmp	r7, r4
    e534:	bne	e51c <ReadUInt32Data+0x12e8>
    e538:	b	e178 <ReadUInt32Data+0xf44>
    e53c:	ldr	r3, [r9]
    e540:	mov	r2, r7
    e544:	ldr	r1, [sp]
    e548:	add	r0, sp, #16
    e54c:	bl	1588 <fread@plt>
    e550:	mov	r8, r0
    e554:	cmp	r7, #0
    e558:	ble	e178 <ReadUInt32Data+0xf44>
    e55c:	add	r5, sp, #16
    e560:	ldr	r3, [sp, #4]
    e564:	mov	r4, r3
    e568:	add	r7, r3, r7, lsl #2
    e56c:	mov	r0, r5
    e570:	bl	18bc <Mat_int64Swap>
    e574:	str	r0, [r4], #4
    e578:	add	r5, r5, #8
    e57c:	cmp	r7, r4
    e580:	bne	e56c <ReadUInt32Data+0x1338>
    e584:	b	e178 <ReadUInt32Data+0xf44>
    e588:	cmp	r7, #256	; 0x100
    e58c:	ble	e654 <ReadUInt32Data+0x1420>
    e590:	sub	sl, r7, #256	; 0x100
    e594:	cmp	sl, #0
    e598:	movle	r5, r8
    e59c:	ble	e5f8 <ReadUInt32Data+0x13c4>
    e5a0:	ldr	r3, [sp, #4]
    e5a4:	sub	r6, r3, #4
    e5a8:	mov	r5, r8
    e5ac:	add	fp, sp, #16
    e5b0:	add	r4, sp, #2048	; 0x800
    e5b4:	add	r4, r4, #8
    e5b8:	ldr	r3, [r9]
    e5bc:	mov	r2, #256	; 0x100
    e5c0:	ldr	r1, [sp]
    e5c4:	mov	r0, fp
    e5c8:	bl	1588 <fread@plt>
    e5cc:	add	r8, r8, r0
    e5d0:	sub	r3, fp, #8
    e5d4:	mov	r2, r6
    e5d8:	ldr	r1, [r3, #8]!
    e5dc:	str	r1, [r2, #4]!
    e5e0:	cmp	r3, r4
    e5e4:	bne	e5d8 <ReadUInt32Data+0x13a4>
    e5e8:	add	r5, r5, #256	; 0x100
    e5ec:	add	r6, r6, #1024	; 0x400
    e5f0:	cmp	r5, sl
    e5f4:	blt	e5b8 <ReadUInt32Data+0x1384>
    e5f8:	cmp	r7, r5
    e5fc:	ble	e178 <ReadUInt32Data+0xf44>
    e600:	sub	r7, r7, r5
    e604:	ldr	r3, [r9]
    e608:	mov	r2, r7
    e60c:	ldr	r1, [sp]
    e610:	add	r0, sp, #16
    e614:	bl	1588 <fread@plt>
    e618:	add	r8, r8, r0
    e61c:	cmp	r7, #0
    e620:	ble	e178 <ReadUInt32Data+0xf44>
    e624:	add	r1, sp, #16
    e628:	add	r2, sp, #8
    e62c:	sub	r3, r5, #-1073741823	; 0xc0000001
    e630:	ldr	r0, [sp, #4]
    e634:	add	r3, r0, r3, lsl #2
    e638:	sub	r7, r7, #-536870911	; 0xe0000001
    e63c:	add	r1, r1, r7, lsl #3
    e640:	ldr	r0, [r2, #8]!
    e644:	str	r0, [r3, #4]!
    e648:	cmp	r2, r1
    e64c:	bne	e640 <ReadUInt32Data+0x140c>
    e650:	b	e178 <ReadUInt32Data+0xf44>
    e654:	ldr	r3, [r9]
    e658:	mov	r2, r7
    e65c:	ldr	r1, [sp]
    e660:	add	r0, sp, #16
    e664:	bl	1588 <fread@plt>
    e668:	mov	r8, r0
    e66c:	cmp	r7, #0
    e670:	ble	e178 <ReadUInt32Data+0xf44>
    e674:	add	r0, sp, #16
    e678:	add	r3, sp, #8
    e67c:	ldr	r2, [sp, #4]
    e680:	sub	r2, r2, #4
    e684:	sub	r7, r7, #-536870911	; 0xe0000001
    e688:	add	r0, r0, r7, lsl #3
    e68c:	ldr	r1, [r3, #8]!
    e690:	str	r1, [r2, #4]!
    e694:	cmp	r0, r3
    e698:	bne	e68c <ReadUInt32Data+0x1458>
    e69c:	b	e178 <ReadUInt32Data+0xf44>
    e6a0:	ldr	r3, [r9]
    e6a4:	mov	r2, r7
    e6a8:	ldr	r1, [sp]
    e6ac:	add	r0, sp, #16
    e6b0:	bl	1588 <fread@plt>
    e6b4:	mov	r8, r0
    e6b8:	cmp	r7, #0
    e6bc:	ble	e178 <ReadUInt32Data+0xf44>
    e6c0:	add	r5, sp, #16
    e6c4:	ldr	r3, [sp, #4]
    e6c8:	mov	r4, r3
    e6cc:	add	r7, r3, r7, lsl #2
    e6d0:	mov	r0, r5
    e6d4:	bl	1984 <Mat_uint64Swap>
    e6d8:	str	r0, [r4], #4
    e6dc:	add	r5, r5, #8
    e6e0:	cmp	r7, r4
    e6e4:	bne	e6d0 <ReadUInt32Data+0x149c>
    e6e8:	b	e178 <ReadUInt32Data+0xf44>
    e6ec:	cmp	r7, #256	; 0x100
    e6f0:	ble	e7b8 <ReadUInt32Data+0x1584>
    e6f4:	sub	sl, r7, #256	; 0x100
    e6f8:	cmp	sl, #0
    e6fc:	movle	r5, r8
    e700:	ble	e75c <ReadUInt32Data+0x1528>
    e704:	ldr	r3, [sp, #4]
    e708:	sub	r6, r3, #4
    e70c:	mov	r5, r8
    e710:	add	fp, sp, #16
    e714:	add	r4, sp, #2048	; 0x800
    e718:	add	r4, r4, #8
    e71c:	ldr	r3, [r9]
    e720:	mov	r2, #256	; 0x100
    e724:	ldr	r1, [sp]
    e728:	mov	r0, fp
    e72c:	bl	1588 <fread@plt>
    e730:	add	r8, r8, r0
    e734:	sub	r3, fp, #8
    e738:	mov	r2, r6
    e73c:	ldr	r1, [r3, #8]!
    e740:	str	r1, [r2, #4]!
    e744:	cmp	r4, r3
    e748:	bne	e73c <ReadUInt32Data+0x1508>
    e74c:	add	r5, r5, #256	; 0x100
    e750:	add	r6, r6, #1024	; 0x400
    e754:	cmp	r5, sl
    e758:	blt	e71c <ReadUInt32Data+0x14e8>
    e75c:	cmp	r7, r5
    e760:	ble	e178 <ReadUInt32Data+0xf44>
    e764:	sub	r7, r7, r5
    e768:	ldr	r3, [r9]
    e76c:	mov	r2, r7
    e770:	ldr	r1, [sp]
    e774:	add	r0, sp, #16
    e778:	bl	1588 <fread@plt>
    e77c:	add	r8, r8, r0
    e780:	cmp	r7, #0
    e784:	ble	e178 <ReadUInt32Data+0xf44>
    e788:	add	r1, sp, #16
    e78c:	add	r2, sp, #8
    e790:	sub	r3, r5, #-1073741823	; 0xc0000001
    e794:	ldr	r0, [sp, #4]
    e798:	add	r3, r0, r3, lsl #2
    e79c:	sub	r7, r7, #-536870911	; 0xe0000001
    e7a0:	add	r1, r1, r7, lsl #3
    e7a4:	ldr	r0, [r2, #8]!
    e7a8:	str	r0, [r3, #4]!
    e7ac:	cmp	r2, r1
    e7b0:	bne	e7a4 <ReadUInt32Data+0x1570>
    e7b4:	b	e178 <ReadUInt32Data+0xf44>
    e7b8:	ldr	r3, [r9]
    e7bc:	mov	r2, r7
    e7c0:	ldr	r1, [sp]
    e7c4:	add	r0, sp, #16
    e7c8:	bl	1588 <fread@plt>
    e7cc:	mov	r8, r0
    e7d0:	cmp	r7, #0
    e7d4:	ble	e178 <ReadUInt32Data+0xf44>
    e7d8:	add	r0, sp, #16
    e7dc:	add	r3, sp, #8
    e7e0:	ldr	r2, [sp, #4]
    e7e4:	sub	r2, r2, #4
    e7e8:	sub	r7, r7, #-536870911	; 0xe0000001
    e7ec:	add	r0, r0, r7, lsl #3
    e7f0:	ldr	r1, [r3, #8]!
    e7f4:	str	r1, [r2, #4]!
    e7f8:	cmp	r3, r0
    e7fc:	bne	e7f0 <ReadUInt32Data+0x15bc>
    e800:	b	e178 <ReadUInt32Data+0xf44>
    e804:	mov	r0, #0
    e808:	bx	lr

0000e80c <ReadCompressedUInt32Data>:
    e80c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e810:	sub	sp, sp, #8
    e814:	ldr	r6, [sp, #40]	; 0x28
    e818:	mov	r9, r2
    e81c:	cmp	r2, #0
    e820:	cmpne	r1, #0
    e824:	moveq	r2, #1
    e828:	movne	r2, #0
    e82c:	cmp	r0, #0
    e830:	orreq	r2, r2, #1
    e834:	cmp	r2, #0
    e838:	movne	r0, #0
    e83c:	bne	e8cc <ReadCompressedUInt32Data+0xc0>
    e840:	mov	r8, r1
    e844:	mov	r5, r0
    e848:	mov	r7, r3
    e84c:	mov	r0, r3
    e850:	bl	1600 <Mat_SizeOf@plt>
    e854:	mov	r4, r0
    e858:	sub	r3, r7, #1
    e85c:	cmp	r3, #8
    e860:	addls	pc, pc, r3, lsl #2
    e864:	b	ec7c <ReadCompressedUInt32Data+0x470>
    e868:	b	e8d4 <ReadCompressedUInt32Data+0xc8>
    e86c:	b	e88c <ReadCompressedUInt32Data+0x80>
    e870:	b	eb64 <ReadCompressedUInt32Data+0x358>
    e874:	b	ebf0 <ReadCompressedUInt32Data+0x3e4>
    e878:	b	ea4c <ReadCompressedUInt32Data+0x240>
    e87c:	b	ead8 <ReadCompressedUInt32Data+0x2cc>
    e880:	b	e9b0 <ReadCompressedUInt32Data+0x1a4>
    e884:	b	ec7c <ReadCompressedUInt32Data+0x470>
    e888:	b	e914 <ReadCompressedUInt32Data+0x108>
    e88c:	cmp	r6, #0
    e890:	subgt	r9, r9, #4
    e894:	movgt	r7, #0
    e898:	movgt	sl, sp
    e89c:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    e8a0:	mov	r3, r4
    e8a4:	mov	r2, sl
    e8a8:	mov	r1, r8
    e8ac:	mov	r0, r5
    e8b0:	bl	3418 <InflateData>
    e8b4:	ldrb	r3, [sp]
    e8b8:	str	r3, [r9, #4]!
    e8bc:	add	r7, r7, #1
    e8c0:	cmp	r6, r7
    e8c4:	bne	e8a0 <ReadCompressedUInt32Data+0x94>
    e8c8:	mul	r0, r4, r6
    e8cc:	add	sp, sp, #8
    e8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    e8d4:	cmp	r6, #0
    e8d8:	subgt	r9, r9, #4
    e8dc:	movgt	r7, #0
    e8e0:	movgt	sl, sp
    e8e4:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    e8e8:	mov	r3, r4
    e8ec:	mov	r2, sl
    e8f0:	mov	r1, r8
    e8f4:	mov	r0, r5
    e8f8:	bl	3418 <InflateData>
    e8fc:	ldrsb	r3, [sp]
    e900:	str	r3, [r9, #4]!
    e904:	add	r7, r7, #1
    e908:	cmp	r6, r7
    e90c:	bne	e8e8 <ReadCompressedUInt32Data+0xdc>
    e910:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    e914:	ldr	r7, [r5, #20]
    e918:	cmp	r7, #0
    e91c:	bne	e964 <ReadCompressedUInt32Data+0x158>
    e920:	cmp	r6, #0
    e924:	subgt	r9, r9, #4
    e928:	movgt	sl, sp
    e92c:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    e930:	mov	r3, r4
    e934:	mov	r2, sl
    e938:	mov	r1, r8
    e93c:	mov	r0, r5
    e940:	bl	3418 <InflateData>
    e944:	vldr	d7, [sp]
    e948:	vcvt.u32.f64	s14, d7
    e94c:	vmov	r3, s14
    e950:	str	r3, [r9, #4]!
    e954:	add	r7, r7, #1
    e958:	cmp	r6, r7
    e95c:	bne	e930 <ReadCompressedUInt32Data+0x124>
    e960:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    e964:	cmp	r6, #0
    e968:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    e96c:	sub	r9, r9, #4
    e970:	mov	r7, #0
    e974:	mov	sl, sp
    e978:	mov	r3, r4
    e97c:	mov	r2, sl
    e980:	mov	r1, r8
    e984:	mov	r0, r5
    e988:	bl	3418 <InflateData>
    e98c:	mov	r0, sl
    e990:	bl	1b94 <Mat_doubleSwap>
    e994:	vcvt.u32.f64	s0, d0
    e998:	vmov	r3, s0
    e99c:	str	r3, [r9, #4]!
    e9a0:	add	r7, r7, #1
    e9a4:	cmp	r6, r7
    e9a8:	bne	e978 <ReadCompressedUInt32Data+0x16c>
    e9ac:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    e9b0:	ldr	r7, [r5, #20]
    e9b4:	cmp	r7, #0
    e9b8:	bne	ea00 <ReadCompressedUInt32Data+0x1f4>
    e9bc:	cmp	r6, #0
    e9c0:	subgt	r9, r9, #4
    e9c4:	movgt	sl, sp
    e9c8:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    e9cc:	mov	r3, r4
    e9d0:	mov	r2, sl
    e9d4:	mov	r1, r8
    e9d8:	mov	r0, r5
    e9dc:	bl	3418 <InflateData>
    e9e0:	vldr	s15, [sp]
    e9e4:	vcvt.u32.f32	s15, s15
    e9e8:	vmov	r3, s15
    e9ec:	str	r3, [r9, #4]!
    e9f0:	add	r7, r7, #1
    e9f4:	cmp	r6, r7
    e9f8:	bne	e9cc <ReadCompressedUInt32Data+0x1c0>
    e9fc:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ea00:	cmp	r6, #0
    ea04:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ea08:	sub	r9, r9, #4
    ea0c:	mov	r7, #0
    ea10:	mov	sl, sp
    ea14:	mov	r3, r4
    ea18:	mov	r2, sl
    ea1c:	mov	r1, r8
    ea20:	mov	r0, r5
    ea24:	bl	3418 <InflateData>
    ea28:	mov	r0, sl
    ea2c:	bl	1b38 <Mat_floatSwap>
    ea30:	vcvt.u32.f32	s0, s0
    ea34:	vmov	r3, s0
    ea38:	str	r3, [r9, #4]!
    ea3c:	add	r7, r7, #1
    ea40:	cmp	r6, r7
    ea44:	bne	ea14 <ReadCompressedUInt32Data+0x208>
    ea48:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ea4c:	ldr	r7, [r5, #20]
    ea50:	cmp	r7, #0
    ea54:	bne	ea94 <ReadCompressedUInt32Data+0x288>
    ea58:	cmp	r6, #0
    ea5c:	subgt	r9, r9, #4
    ea60:	movgt	sl, sp
    ea64:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ea68:	mov	r3, r4
    ea6c:	mov	r2, sl
    ea70:	mov	r1, r8
    ea74:	mov	r0, r5
    ea78:	bl	3418 <InflateData>
    ea7c:	ldr	r3, [sp]
    ea80:	str	r3, [r9, #4]!
    ea84:	add	r7, r7, #1
    ea88:	cmp	r6, r7
    ea8c:	bne	ea68 <ReadCompressedUInt32Data+0x25c>
    ea90:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ea94:	cmp	r6, #0
    ea98:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ea9c:	sub	r9, r9, #4
    eaa0:	mov	r7, #0
    eaa4:	mov	sl, sp
    eaa8:	mov	r3, r4
    eaac:	mov	r2, sl
    eab0:	mov	r1, r8
    eab4:	mov	r0, r5
    eab8:	bl	3418 <InflateData>
    eabc:	mov	r0, sl
    eac0:	bl	1a20 <Mat_int32Swap>
    eac4:	str	r0, [r9, #4]!
    eac8:	add	r7, r7, #1
    eacc:	cmp	r6, r7
    ead0:	bne	eaa8 <ReadCompressedUInt32Data+0x29c>
    ead4:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ead8:	ldr	r7, [r5, #20]
    eadc:	cmp	r7, #0
    eae0:	bne	eb20 <ReadCompressedUInt32Data+0x314>
    eae4:	cmp	r6, #0
    eae8:	subgt	r9, r9, #4
    eaec:	movgt	sl, sp
    eaf0:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    eaf4:	mov	r3, r4
    eaf8:	mov	r2, sl
    eafc:	mov	r1, r8
    eb00:	mov	r0, r5
    eb04:	bl	3418 <InflateData>
    eb08:	ldr	r3, [sp]
    eb0c:	str	r3, [r9, #4]!
    eb10:	add	r7, r7, #1
    eb14:	cmp	r6, r7
    eb18:	bne	eaf4 <ReadCompressedUInt32Data+0x2e8>
    eb1c:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    eb20:	cmp	r6, #0
    eb24:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    eb28:	sub	r9, r9, #4
    eb2c:	mov	r7, #0
    eb30:	mov	sl, sp
    eb34:	mov	r3, r4
    eb38:	mov	r2, sl
    eb3c:	mov	r1, r8
    eb40:	mov	r0, r5
    eb44:	bl	3418 <InflateData>
    eb48:	mov	r0, sl
    eb4c:	bl	1a88 <Mat_uint32Swap>
    eb50:	str	r0, [r9, #4]!
    eb54:	add	r7, r7, #1
    eb58:	cmp	r6, r7
    eb5c:	bne	eb34 <ReadCompressedUInt32Data+0x328>
    eb60:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    eb64:	ldr	r7, [r5, #20]
    eb68:	cmp	r7, #0
    eb6c:	bne	ebac <ReadCompressedUInt32Data+0x3a0>
    eb70:	cmp	r6, #0
    eb74:	subgt	r9, r9, #4
    eb78:	movgt	sl, sp
    eb7c:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    eb80:	mov	r3, r4
    eb84:	mov	r2, sl
    eb88:	mov	r1, r8
    eb8c:	mov	r0, r5
    eb90:	bl	3418 <InflateData>
    eb94:	ldrsh	r3, [sp]
    eb98:	str	r3, [r9, #4]!
    eb9c:	add	r7, r7, #1
    eba0:	cmp	r6, r7
    eba4:	bne	eb80 <ReadCompressedUInt32Data+0x374>
    eba8:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ebac:	cmp	r6, #0
    ebb0:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ebb4:	sub	r9, r9, #4
    ebb8:	mov	r7, #0
    ebbc:	mov	sl, sp
    ebc0:	mov	r3, r4
    ebc4:	mov	r2, sl
    ebc8:	mov	r1, r8
    ebcc:	mov	r0, r5
    ebd0:	bl	3418 <InflateData>
    ebd4:	mov	r0, sl
    ebd8:	bl	1ae4 <Mat_int16Swap>
    ebdc:	str	r0, [r9, #4]!
    ebe0:	add	r7, r7, #1
    ebe4:	cmp	r6, r7
    ebe8:	bne	ebc0 <ReadCompressedUInt32Data+0x3b4>
    ebec:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ebf0:	ldr	r7, [r5, #20]
    ebf4:	cmp	r7, #0
    ebf8:	bne	ec38 <ReadCompressedUInt32Data+0x42c>
    ebfc:	cmp	r6, #0
    ec00:	subgt	r9, r9, #4
    ec04:	movgt	sl, sp
    ec08:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ec0c:	mov	r3, r4
    ec10:	mov	r2, sl
    ec14:	mov	r1, r8
    ec18:	mov	r0, r5
    ec1c:	bl	3418 <InflateData>
    ec20:	ldrh	r3, [sp]
    ec24:	str	r3, [r9, #4]!
    ec28:	add	r7, r7, #1
    ec2c:	cmp	r6, r7
    ec30:	bne	ec0c <ReadCompressedUInt32Data+0x400>
    ec34:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ec38:	cmp	r6, #0
    ec3c:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ec40:	sub	r9, r9, #4
    ec44:	mov	r7, #0
    ec48:	mov	sl, sp
    ec4c:	mov	r3, r4
    ec50:	mov	r2, sl
    ec54:	mov	r1, r8
    ec58:	mov	r0, r5
    ec5c:	bl	3418 <InflateData>
    ec60:	mov	r0, sl
    ec64:	bl	1b1c <Mat_uint16Swap>
    ec68:	str	r0, [r9, #4]!
    ec6c:	add	r7, r7, #1
    ec70:	cmp	r6, r7
    ec74:	bne	ec4c <ReadCompressedUInt32Data+0x440>
    ec78:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ec7c:	cmp	r7, #12
    ec80:	beq	ecd4 <ReadCompressedUInt32Data+0x4c8>
    ec84:	cmp	r7, #13
    ec88:	bne	e8c8 <ReadCompressedUInt32Data+0xbc>
    ec8c:	ldr	r7, [r5, #20]
    ec90:	cmp	r7, #0
    ec94:	bne	ed60 <ReadCompressedUInt32Data+0x554>
    ec98:	cmp	r6, #0
    ec9c:	subgt	r9, r9, #4
    eca0:	movgt	sl, sp
    eca4:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    eca8:	mov	r3, r4
    ecac:	mov	r2, sl
    ecb0:	mov	r1, r8
    ecb4:	mov	r0, r5
    ecb8:	bl	3418 <InflateData>
    ecbc:	ldr	r3, [sp]
    ecc0:	str	r3, [r9, #4]!
    ecc4:	add	r7, r7, #1
    ecc8:	cmp	r6, r7
    eccc:	bne	eca8 <ReadCompressedUInt32Data+0x49c>
    ecd0:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ecd4:	ldr	r7, [r5, #20]
    ecd8:	cmp	r7, #0
    ecdc:	bne	ed1c <ReadCompressedUInt32Data+0x510>
    ece0:	cmp	r6, #0
    ece4:	subgt	r9, r9, #4
    ece8:	movgt	sl, sp
    ecec:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ecf0:	mov	r3, r4
    ecf4:	mov	r2, sl
    ecf8:	mov	r1, r8
    ecfc:	mov	r0, r5
    ed00:	bl	3418 <InflateData>
    ed04:	ldr	r3, [sp]
    ed08:	str	r3, [r9, #4]!
    ed0c:	add	r7, r7, #1
    ed10:	cmp	r6, r7
    ed14:	bne	ecf0 <ReadCompressedUInt32Data+0x4e4>
    ed18:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ed1c:	cmp	r6, #0
    ed20:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ed24:	sub	r9, r9, #4
    ed28:	mov	r7, #0
    ed2c:	mov	sl, sp
    ed30:	mov	r3, r4
    ed34:	mov	r2, sl
    ed38:	mov	r1, r8
    ed3c:	mov	r0, r5
    ed40:	bl	3418 <InflateData>
    ed44:	mov	r0, sl
    ed48:	bl	18bc <Mat_int64Swap>
    ed4c:	str	r0, [r9, #4]!
    ed50:	add	r7, r7, #1
    ed54:	cmp	r6, r7
    ed58:	bne	ed30 <ReadCompressedUInt32Data+0x524>
    ed5c:	b	e8c8 <ReadCompressedUInt32Data+0xbc>
    ed60:	cmp	r6, #0
    ed64:	ble	e8c8 <ReadCompressedUInt32Data+0xbc>
    ed68:	sub	r9, r9, #4
    ed6c:	mov	r7, #0
    ed70:	mov	sl, sp
    ed74:	mov	r3, r4
    ed78:	mov	r2, sl
    ed7c:	mov	r1, r8
    ed80:	mov	r0, r5
    ed84:	bl	3418 <InflateData>
    ed88:	mov	r0, sl
    ed8c:	bl	1984 <Mat_uint64Swap>
    ed90:	str	r0, [r9, #4]!
    ed94:	add	r7, r7, #1
    ed98:	cmp	r6, r7
    ed9c:	bne	ed74 <ReadCompressedUInt32Data+0x568>
    eda0:	b	e8c8 <ReadCompressedUInt32Data+0xbc>

0000eda4 <ReadInt16Data>:
    eda4:	cmp	r1, #0
    eda8:	cmpne	r0, #0
    edac:	beq	10384 <ReadInt16Data+0x15e0>
    edb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    edb4:	sub	sp, sp, #2064	; 0x810
    edb8:	sub	sp, sp, #4
    edbc:	mov	r9, r0
    edc0:	mov	ip, r1
    edc4:	ldr	r1, [r0]
    edc8:	cmp	r1, #0
    edcc:	moveq	r0, #0
    edd0:	beq	fd00 <ReadInt16Data+0xf5c>
    edd4:	str	ip, [sp, #4]
    edd8:	mov	r7, r3
    eddc:	mov	r4, r2
    ede0:	mov	r0, r2
    ede4:	bl	1600 <Mat_SizeOf@plt>
    ede8:	str	r0, [sp]
    edec:	sub	r3, r4, #1
    edf0:	cmp	r3, #8
    edf4:	addls	pc, pc, r3, lsl #2
    edf8:	b	fec8 <ReadInt16Data+0x1124>
    edfc:	b	fc7c <ReadInt16Data+0xed8>
    ee00:	b	fdac <ReadInt16Data+0x1008>
    ee04:	b	f7c4 <ReadInt16Data+0xa20>
    ee08:	b	fa20 <ReadInt16Data+0xc7c>
    ee0c:	b	f314 <ReadInt16Data+0x570>
    ee10:	b	f56c <ReadInt16Data+0x7c8>
    ee14:	b	f09c <ReadInt16Data+0x2f8>
    ee18:	b	fec8 <ReadInt16Data+0x1124>
    ee1c:	b	ee20 <ReadInt16Data+0x7c>
    ee20:	ldr	r8, [r9, #20]
    ee24:	cmp	r8, #0
    ee28:	beq	ef7c <ReadInt16Data+0x1d8>
    ee2c:	cmp	r7, #256	; 0x100
    ee30:	ble	ef28 <ReadInt16Data+0x184>
    ee34:	sub	r3, r7, #256	; 0x100
    ee38:	mov	r2, r3
    ee3c:	cmp	r3, #0
    ee40:	movle	sl, #0
    ee44:	movle	r8, sl
    ee48:	ble	eec4 <ReadInt16Data+0x120>
    ee4c:	ldr	r3, [sp, #4]
    ee50:	sub	fp, r3, #2
    ee54:	mov	sl, #0
    ee58:	mov	r8, sl
    ee5c:	add	r3, sp, #16
    ee60:	str	r3, [sp, #8]
    ee64:	str	r7, [sp, #12]
    ee68:	mov	r7, r2
    ee6c:	ldr	r3, [r9]
    ee70:	mov	r2, #256	; 0x100
    ee74:	ldr	r1, [sp]
    ee78:	ldr	r4, [sp, #8]
    ee7c:	mov	r0, r4
    ee80:	bl	1588 <fread@plt>
    ee84:	add	r8, r8, r0
    ee88:	add	r6, sp, #2064	; 0x810
    ee8c:	mov	r5, fp
    ee90:	mov	r0, r4
    ee94:	bl	1b94 <Mat_doubleSwap>
    ee98:	vcvt.s32.f64	s15, d0
    ee9c:	vmov	r3, s15
    eea0:	strh	r3, [r5, #2]!
    eea4:	add	r4, r4, #8
    eea8:	cmp	r4, r6
    eeac:	bne	ee90 <ReadInt16Data+0xec>
    eeb0:	add	sl, sl, #256	; 0x100
    eeb4:	add	fp, fp, #512	; 0x200
    eeb8:	cmp	sl, r7
    eebc:	blt	ee6c <ReadInt16Data+0xc8>
    eec0:	ldr	r7, [sp, #12]
    eec4:	cmp	r7, sl
    eec8:	ble	fcf8 <ReadInt16Data+0xf54>
    eecc:	sub	r7, r7, sl
    eed0:	ldr	r3, [r9]
    eed4:	mov	r2, r7
    eed8:	ldr	r1, [sp]
    eedc:	add	r0, sp, #16
    eee0:	bl	1588 <fread@plt>
    eee4:	add	r8, r8, r0
    eee8:	cmp	r7, #0
    eeec:	ble	fcf8 <ReadInt16Data+0xf54>
    eef0:	add	r6, sp, #16
    eef4:	ldr	r3, [sp, #4]
    eef8:	add	r5, r3, sl, lsl #1
    eefc:	add	r7, r7, sl
    ef00:	add	r7, r3, r7, lsl #1
    ef04:	mov	r0, r6
    ef08:	bl	1b94 <Mat_doubleSwap>
    ef0c:	vcvt.s32.f64	s15, d0
    ef10:	vmov	r3, s15
    ef14:	strh	r3, [r5], #2
    ef18:	add	r6, r6, #8
    ef1c:	cmp	r5, r7
    ef20:	bne	ef04 <ReadInt16Data+0x160>
    ef24:	b	fcf8 <ReadInt16Data+0xf54>
    ef28:	ldr	r3, [r9]
    ef2c:	mov	r2, r7
    ef30:	ldr	r1, [sp]
    ef34:	add	r0, sp, #16
    ef38:	bl	1588 <fread@plt>
    ef3c:	mov	r8, r0
    ef40:	cmp	r7, #0
    ef44:	ble	fcf8 <ReadInt16Data+0xf54>
    ef48:	add	r5, sp, #16
    ef4c:	ldr	r3, [sp, #4]
    ef50:	mov	r4, r3
    ef54:	add	r7, r3, r7, lsl #1
    ef58:	mov	r0, r5
    ef5c:	bl	1b94 <Mat_doubleSwap>
    ef60:	vcvt.s32.f64	s15, d0
    ef64:	vmov	r3, s15
    ef68:	strh	r3, [r4], #2
    ef6c:	add	r5, r5, #8
    ef70:	cmp	r4, r7
    ef74:	bne	ef58 <ReadInt16Data+0x1b4>
    ef78:	b	fcf8 <ReadInt16Data+0xf54>
    ef7c:	cmp	r7, #256	; 0x100
    ef80:	ble	f050 <ReadInt16Data+0x2ac>
    ef84:	sub	sl, r7, #256	; 0x100
    ef88:	cmp	sl, #0
    ef8c:	movle	r4, r8
    ef90:	ble	eff4 <ReadInt16Data+0x250>
    ef94:	ldr	r3, [sp, #4]
    ef98:	sub	r5, r3, #2
    ef9c:	mov	r4, r8
    efa0:	add	r6, sp, #16
    efa4:	mov	fp, #256	; 0x100
    efa8:	ldr	r3, [r9]
    efac:	mov	r2, fp
    efb0:	ldr	r1, [sp]
    efb4:	mov	r0, r6
    efb8:	bl	1588 <fread@plt>
    efbc:	add	r8, r8, r0
    efc0:	mov	r2, r6
    efc4:	add	r0, sp, #2064	; 0x810
    efc8:	mov	r1, r5
    efcc:	vldmia	r2!, {d7}
    efd0:	vcvt.s32.f64	s15, d7
    efd4:	vmov	r3, s15
    efd8:	strh	r3, [r1, #2]!
    efdc:	cmp	r2, r0
    efe0:	bne	efcc <ReadInt16Data+0x228>
    efe4:	add	r4, r4, #256	; 0x100
    efe8:	add	r5, r5, #512	; 0x200
    efec:	cmp	r4, sl
    eff0:	blt	efa8 <ReadInt16Data+0x204>
    eff4:	cmp	r7, r4
    eff8:	ble	fcf8 <ReadInt16Data+0xf54>
    effc:	sub	r7, r7, r4
    f000:	ldr	r3, [r9]
    f004:	mov	r2, r7
    f008:	ldr	r1, [sp]
    f00c:	add	r0, sp, #16
    f010:	bl	1588 <fread@plt>
    f014:	add	r8, r8, r0
    f018:	cmp	r7, #0
    f01c:	ble	fcf8 <ReadInt16Data+0xf54>
    f020:	add	r1, sp, #16
    f024:	sub	r2, r4, #-2147483647	; 0x80000001
    f028:	ldr	r3, [sp, #4]
    f02c:	add	r2, r3, r2, lsl #1
    f030:	add	r7, r1, r7, lsl #3
    f034:	vldmia	r1!, {d7}
    f038:	vcvt.s32.f64	s15, d7
    f03c:	vmov	r3, s15
    f040:	strh	r3, [r2, #2]!
    f044:	cmp	r1, r7
    f048:	bne	f034 <ReadInt16Data+0x290>
    f04c:	b	fcf8 <ReadInt16Data+0xf54>
    f050:	ldr	r3, [r9]
    f054:	mov	r2, r7
    f058:	ldr	r1, [sp]
    f05c:	add	r0, sp, #16
    f060:	bl	1588 <fread@plt>
    f064:	mov	r8, r0
    f068:	cmp	r7, #0
    f06c:	ble	fcf8 <ReadInt16Data+0xf54>
    f070:	add	r2, sp, #16
    f074:	ldr	r3, [sp, #4]
    f078:	sub	r1, r3, #2
    f07c:	add	r7, r2, r7, lsl #3
    f080:	vldmia	r2!, {d7}
    f084:	vcvt.s32.f64	s15, d7
    f088:	vmov	r3, s15
    f08c:	strh	r3, [r1, #2]!
    f090:	cmp	r2, r7
    f094:	bne	f080 <ReadInt16Data+0x2dc>
    f098:	b	fcf8 <ReadInt16Data+0xf54>
    f09c:	ldr	r8, [r9, #20]
    f0a0:	cmp	r8, #0
    f0a4:	beq	f1f8 <ReadInt16Data+0x454>
    f0a8:	cmp	r7, #256	; 0x100
    f0ac:	ble	f1a4 <ReadInt16Data+0x400>
    f0b0:	sub	r3, r7, #256	; 0x100
    f0b4:	mov	r2, r3
    f0b8:	cmp	r3, #0
    f0bc:	movle	sl, #0
    f0c0:	movle	r8, sl
    f0c4:	ble	f140 <ReadInt16Data+0x39c>
    f0c8:	ldr	r3, [sp, #4]
    f0cc:	sub	fp, r3, #2
    f0d0:	mov	sl, #0
    f0d4:	mov	r8, sl
    f0d8:	add	r3, sp, #16
    f0dc:	str	r3, [sp, #8]
    f0e0:	add	r6, sp, #1040	; 0x410
    f0e4:	str	r7, [sp, #12]
    f0e8:	mov	r7, r2
    f0ec:	ldr	r3, [r9]
    f0f0:	mov	r2, #256	; 0x100
    f0f4:	ldr	r1, [sp]
    f0f8:	ldr	r4, [sp, #8]
    f0fc:	mov	r0, r4
    f100:	bl	1588 <fread@plt>
    f104:	add	r8, r8, r0
    f108:	mov	r5, fp
    f10c:	mov	r0, r4
    f110:	bl	1b38 <Mat_floatSwap>
    f114:	vcvt.s32.f32	s15, s0
    f118:	vmov	r3, s15
    f11c:	strh	r3, [r5, #2]!
    f120:	add	r4, r4, #4
    f124:	cmp	r4, r6
    f128:	bne	f10c <ReadInt16Data+0x368>
    f12c:	add	sl, sl, #256	; 0x100
    f130:	add	fp, fp, #512	; 0x200
    f134:	cmp	sl, r7
    f138:	blt	f0ec <ReadInt16Data+0x348>
    f13c:	ldr	r7, [sp, #12]
    f140:	cmp	r7, sl
    f144:	ble	fcf8 <ReadInt16Data+0xf54>
    f148:	sub	r7, r7, sl
    f14c:	ldr	r3, [r9]
    f150:	mov	r2, r7
    f154:	ldr	r1, [sp]
    f158:	add	r0, sp, #16
    f15c:	bl	1588 <fread@plt>
    f160:	add	r8, r8, r0
    f164:	cmp	r7, #0
    f168:	ble	fcf8 <ReadInt16Data+0xf54>
    f16c:	add	r6, sp, #16
    f170:	ldr	r3, [sp, #4]
    f174:	add	r5, r3, sl, lsl #1
    f178:	add	r7, r7, sl
    f17c:	add	r7, r3, r7, lsl #1
    f180:	mov	r0, r6
    f184:	bl	1b38 <Mat_floatSwap>
    f188:	vcvt.s32.f32	s15, s0
    f18c:	vmov	r3, s15
    f190:	strh	r3, [r5], #2
    f194:	add	r6, r6, #4
    f198:	cmp	r5, r7
    f19c:	bne	f180 <ReadInt16Data+0x3dc>
    f1a0:	b	fcf8 <ReadInt16Data+0xf54>
    f1a4:	ldr	r3, [r9]
    f1a8:	mov	r2, r7
    f1ac:	ldr	r1, [sp]
    f1b0:	add	r0, sp, #16
    f1b4:	bl	1588 <fread@plt>
    f1b8:	mov	r8, r0
    f1bc:	cmp	r7, #0
    f1c0:	ble	fcf8 <ReadInt16Data+0xf54>
    f1c4:	add	r5, sp, #16
    f1c8:	ldr	r3, [sp, #4]
    f1cc:	mov	r4, r3
    f1d0:	add	r7, r3, r7, lsl #1
    f1d4:	mov	r0, r5
    f1d8:	bl	1b38 <Mat_floatSwap>
    f1dc:	vcvt.s32.f32	s15, s0
    f1e0:	vmov	r3, s15
    f1e4:	strh	r3, [r4], #2
    f1e8:	add	r5, r5, #4
    f1ec:	cmp	r4, r7
    f1f0:	bne	f1d4 <ReadInt16Data+0x430>
    f1f4:	b	fcf8 <ReadInt16Data+0xf54>
    f1f8:	cmp	r7, #256	; 0x100
    f1fc:	ble	f2c8 <ReadInt16Data+0x524>
    f200:	sub	sl, r7, #256	; 0x100
    f204:	cmp	sl, #0
    f208:	movle	r5, r8
    f20c:	ble	f26c <ReadInt16Data+0x4c8>
    f210:	ldr	r3, [sp, #4]
    f214:	sub	r6, r3, #2
    f218:	mov	r5, r8
    f21c:	add	fp, sp, #16
    f220:	add	r4, sp, #1040	; 0x410
    f224:	ldr	r3, [r9]
    f228:	mov	r2, #256	; 0x100
    f22c:	ldr	r1, [sp]
    f230:	mov	r0, fp
    f234:	bl	1588 <fread@plt>
    f238:	add	r8, r8, r0
    f23c:	mov	r2, fp
    f240:	mov	r1, r6
    f244:	vldmia	r2!, {s15}
    f248:	vcvt.s32.f32	s15, s15
    f24c:	vmov	r3, s15
    f250:	strh	r3, [r1, #2]!
    f254:	cmp	r2, r4
    f258:	bne	f244 <ReadInt16Data+0x4a0>
    f25c:	add	r5, r5, #256	; 0x100
    f260:	add	r6, r6, #512	; 0x200
    f264:	cmp	r5, sl
    f268:	blt	f224 <ReadInt16Data+0x480>
    f26c:	cmp	r7, r5
    f270:	ble	fcf8 <ReadInt16Data+0xf54>
    f274:	sub	r7, r7, r5
    f278:	ldr	r3, [r9]
    f27c:	mov	r2, r7
    f280:	ldr	r1, [sp]
    f284:	add	r0, sp, #16
    f288:	bl	1588 <fread@plt>
    f28c:	add	r8, r8, r0
    f290:	cmp	r7, #0
    f294:	ble	fcf8 <ReadInt16Data+0xf54>
    f298:	add	r1, sp, #16
    f29c:	sub	r2, r5, #-2147483647	; 0x80000001
    f2a0:	ldr	r3, [sp, #4]
    f2a4:	add	r2, r3, r2, lsl #1
    f2a8:	add	r7, r1, r7, lsl #2
    f2ac:	vldmia	r1!, {s15}
    f2b0:	vcvt.s32.f32	s15, s15
    f2b4:	vmov	r3, s15
    f2b8:	strh	r3, [r2, #2]!
    f2bc:	cmp	r1, r7
    f2c0:	bne	f2ac <ReadInt16Data+0x508>
    f2c4:	b	fcf8 <ReadInt16Data+0xf54>
    f2c8:	ldr	r3, [r9]
    f2cc:	mov	r2, r7
    f2d0:	ldr	r1, [sp]
    f2d4:	add	r0, sp, #16
    f2d8:	bl	1588 <fread@plt>
    f2dc:	mov	r8, r0
    f2e0:	cmp	r7, #0
    f2e4:	ble	fcf8 <ReadInt16Data+0xf54>
    f2e8:	add	r2, sp, #16
    f2ec:	ldr	r3, [sp, #4]
    f2f0:	sub	r1, r3, #2
    f2f4:	add	r7, r2, r7, lsl #2
    f2f8:	vldmia	r2!, {s15}
    f2fc:	vcvt.s32.f32	s15, s15
    f300:	vmov	r3, s15
    f304:	strh	r3, [r1, #2]!
    f308:	cmp	r2, r7
    f30c:	bne	f2f8 <ReadInt16Data+0x554>
    f310:	b	fcf8 <ReadInt16Data+0xf54>
    f314:	ldr	r8, [r9, #20]
    f318:	cmp	r8, #0
    f31c:	beq	f458 <ReadInt16Data+0x6b4>
    f320:	cmp	r7, #256	; 0x100
    f324:	ble	f40c <ReadInt16Data+0x668>
    f328:	sub	r3, r7, #256	; 0x100
    f32c:	mov	r2, r3
    f330:	cmp	r3, #0
    f334:	movle	sl, #0
    f338:	movle	r8, sl
    f33c:	ble	f3b0 <ReadInt16Data+0x60c>
    f340:	ldr	r3, [sp, #4]
    f344:	sub	fp, r3, #2
    f348:	mov	sl, #0
    f34c:	mov	r8, sl
    f350:	add	r3, sp, #16
    f354:	str	r3, [sp, #8]
    f358:	add	r6, sp, #1040	; 0x410
    f35c:	str	r7, [sp, #12]
    f360:	mov	r7, r2
    f364:	ldr	r3, [r9]
    f368:	mov	r2, #256	; 0x100
    f36c:	ldr	r1, [sp]
    f370:	ldr	r4, [sp, #8]
    f374:	mov	r0, r4
    f378:	bl	1588 <fread@plt>
    f37c:	add	r8, r8, r0
    f380:	mov	r5, fp
    f384:	mov	r0, r4
    f388:	bl	1a20 <Mat_int32Swap>
    f38c:	strh	r0, [r5, #2]!
    f390:	add	r4, r4, #4
    f394:	cmp	r4, r6
    f398:	bne	f384 <ReadInt16Data+0x5e0>
    f39c:	add	sl, sl, #256	; 0x100
    f3a0:	add	fp, fp, #512	; 0x200
    f3a4:	cmp	sl, r7
    f3a8:	blt	f364 <ReadInt16Data+0x5c0>
    f3ac:	ldr	r7, [sp, #12]
    f3b0:	cmp	r7, sl
    f3b4:	ble	fcf8 <ReadInt16Data+0xf54>
    f3b8:	sub	r7, r7, sl
    f3bc:	ldr	r3, [r9]
    f3c0:	mov	r2, r7
    f3c4:	ldr	r1, [sp]
    f3c8:	add	r0, sp, #16
    f3cc:	bl	1588 <fread@plt>
    f3d0:	add	r8, r8, r0
    f3d4:	cmp	r7, #0
    f3d8:	ble	fcf8 <ReadInt16Data+0xf54>
    f3dc:	add	r6, sp, #16
    f3e0:	ldr	r3, [sp, #4]
    f3e4:	add	r5, r3, sl, lsl #1
    f3e8:	add	r7, r7, sl
    f3ec:	add	r7, r3, r7, lsl #1
    f3f0:	mov	r0, r6
    f3f4:	bl	1a20 <Mat_int32Swap>
    f3f8:	strh	r0, [r5], #2
    f3fc:	add	r6, r6, #4
    f400:	cmp	r5, r7
    f404:	bne	f3f0 <ReadInt16Data+0x64c>
    f408:	b	fcf8 <ReadInt16Data+0xf54>
    f40c:	ldr	r3, [r9]
    f410:	mov	r2, r7
    f414:	ldr	r1, [sp]
    f418:	add	r0, sp, #16
    f41c:	bl	1588 <fread@plt>
    f420:	mov	r8, r0
    f424:	cmp	r7, #0
    f428:	ble	fcf8 <ReadInt16Data+0xf54>
    f42c:	add	r5, sp, #16
    f430:	ldr	r3, [sp, #4]
    f434:	mov	r4, r3
    f438:	add	r7, r3, r7, lsl #1
    f43c:	mov	r0, r5
    f440:	bl	1a20 <Mat_int32Swap>
    f444:	strh	r0, [r4], #2
    f448:	add	r5, r5, #4
    f44c:	cmp	r4, r7
    f450:	bne	f43c <ReadInt16Data+0x698>
    f454:	b	fcf8 <ReadInt16Data+0xf54>
    f458:	cmp	r7, #256	; 0x100
    f45c:	ble	f520 <ReadInt16Data+0x77c>
    f460:	sub	fp, r7, #256	; 0x100
    f464:	cmp	fp, #0
    f468:	movle	r5, r8
    f46c:	ble	f4c4 <ReadInt16Data+0x720>
    f470:	ldr	r3, [sp, #4]
    f474:	sub	r6, r3, #2
    f478:	mov	r5, r8
    f47c:	add	sl, sp, #16
    f480:	add	r4, sl, #1020	; 0x3fc
    f484:	ldr	r3, [r9]
    f488:	mov	r2, #256	; 0x100
    f48c:	ldr	r1, [sp]
    f490:	mov	r0, sl
    f494:	bl	1588 <fread@plt>
    f498:	add	r8, r8, r0
    f49c:	sub	r3, sl, #4
    f4a0:	mov	r2, r6
    f4a4:	ldr	r1, [r3, #4]!
    f4a8:	strh	r1, [r2, #2]!
    f4ac:	cmp	r3, r4
    f4b0:	bne	f4a4 <ReadInt16Data+0x700>
    f4b4:	add	r5, r5, #256	; 0x100
    f4b8:	add	r6, r6, #512	; 0x200
    f4bc:	cmp	r5, fp
    f4c0:	blt	f484 <ReadInt16Data+0x6e0>
    f4c4:	cmp	r7, r5
    f4c8:	ble	fcf8 <ReadInt16Data+0xf54>
    f4cc:	sub	r7, r7, r5
    f4d0:	ldr	r3, [r9]
    f4d4:	mov	r2, r7
    f4d8:	ldr	r1, [sp]
    f4dc:	add	r0, sp, #16
    f4e0:	bl	1588 <fread@plt>
    f4e4:	add	r8, r8, r0
    f4e8:	cmp	r7, #0
    f4ec:	ble	fcf8 <ReadInt16Data+0xf54>
    f4f0:	add	r0, sp, #16
    f4f4:	add	r2, sp, #12
    f4f8:	sub	r3, r5, #-2147483647	; 0x80000001
    f4fc:	ldr	r1, [sp, #4]
    f500:	add	r3, r1, r3, lsl #1
    f504:	sub	r7, r7, #-1073741823	; 0xc0000001
    f508:	add	r0, r0, r7, lsl #2
    f50c:	ldr	r1, [r2, #4]!
    f510:	strh	r1, [r3, #2]!
    f514:	cmp	r2, r0
    f518:	bne	f50c <ReadInt16Data+0x768>
    f51c:	b	fcf8 <ReadInt16Data+0xf54>
    f520:	ldr	r3, [r9]
    f524:	mov	r2, r7
    f528:	ldr	r1, [sp]
    f52c:	add	r0, sp, #16
    f530:	bl	1588 <fread@plt>
    f534:	mov	r8, r0
    f538:	cmp	r7, #0
    f53c:	ble	fcf8 <ReadInt16Data+0xf54>
    f540:	add	r0, sp, #16
    f544:	add	r3, sp, #12
    f548:	ldr	r2, [sp, #4]
    f54c:	sub	r2, r2, #2
    f550:	sub	r7, r7, #-1073741823	; 0xc0000001
    f554:	add	r0, r0, r7, lsl #2
    f558:	ldr	r1, [r3, #4]!
    f55c:	strh	r1, [r2, #2]!
    f560:	cmp	r3, r0
    f564:	bne	f558 <ReadInt16Data+0x7b4>
    f568:	b	fcf8 <ReadInt16Data+0xf54>
    f56c:	ldr	r8, [r9, #20]
    f570:	cmp	r8, #0
    f574:	beq	f6b0 <ReadInt16Data+0x90c>
    f578:	cmp	r7, #256	; 0x100
    f57c:	ble	f664 <ReadInt16Data+0x8c0>
    f580:	sub	r3, r7, #256	; 0x100
    f584:	mov	r2, r3
    f588:	cmp	r3, #0
    f58c:	movle	sl, #0
    f590:	movle	r8, sl
    f594:	ble	f608 <ReadInt16Data+0x864>
    f598:	ldr	r3, [sp, #4]
    f59c:	sub	fp, r3, #2
    f5a0:	mov	sl, #0
    f5a4:	mov	r8, sl
    f5a8:	add	r3, sp, #16
    f5ac:	str	r3, [sp, #8]
    f5b0:	add	r6, sp, #1040	; 0x410
    f5b4:	str	r7, [sp, #12]
    f5b8:	mov	r7, r2
    f5bc:	ldr	r3, [r9]
    f5c0:	mov	r2, #256	; 0x100
    f5c4:	ldr	r1, [sp]
    f5c8:	ldr	r4, [sp, #8]
    f5cc:	mov	r0, r4
    f5d0:	bl	1588 <fread@plt>
    f5d4:	add	r8, r8, r0
    f5d8:	mov	r5, fp
    f5dc:	mov	r0, r4
    f5e0:	bl	1a88 <Mat_uint32Swap>
    f5e4:	strh	r0, [r5, #2]!
    f5e8:	add	r4, r4, #4
    f5ec:	cmp	r4, r6
    f5f0:	bne	f5dc <ReadInt16Data+0x838>
    f5f4:	add	sl, sl, #256	; 0x100
    f5f8:	add	fp, fp, #512	; 0x200
    f5fc:	cmp	sl, r7
    f600:	blt	f5bc <ReadInt16Data+0x818>
    f604:	ldr	r7, [sp, #12]
    f608:	cmp	r7, sl
    f60c:	ble	fcf8 <ReadInt16Data+0xf54>
    f610:	sub	r7, r7, sl
    f614:	ldr	r3, [r9]
    f618:	mov	r2, r7
    f61c:	ldr	r1, [sp]
    f620:	add	r0, sp, #16
    f624:	bl	1588 <fread@plt>
    f628:	add	r8, r8, r0
    f62c:	cmp	r7, #0
    f630:	ble	fcf8 <ReadInt16Data+0xf54>
    f634:	add	r6, sp, #16
    f638:	ldr	r3, [sp, #4]
    f63c:	add	r5, r3, sl, lsl #1
    f640:	add	r7, r7, sl
    f644:	add	r7, r3, r7, lsl #1
    f648:	mov	r0, r6
    f64c:	bl	1a88 <Mat_uint32Swap>
    f650:	strh	r0, [r5], #2
    f654:	add	r6, r6, #4
    f658:	cmp	r5, r7
    f65c:	bne	f648 <ReadInt16Data+0x8a4>
    f660:	b	fcf8 <ReadInt16Data+0xf54>
    f664:	ldr	r3, [r9]
    f668:	mov	r2, r7
    f66c:	ldr	r1, [sp]
    f670:	add	r0, sp, #16
    f674:	bl	1588 <fread@plt>
    f678:	mov	r8, r0
    f67c:	cmp	r7, #0
    f680:	ble	fcf8 <ReadInt16Data+0xf54>
    f684:	add	r5, sp, #16
    f688:	ldr	r3, [sp, #4]
    f68c:	mov	r4, r3
    f690:	add	r7, r3, r7, lsl #1
    f694:	mov	r0, r5
    f698:	bl	1a88 <Mat_uint32Swap>
    f69c:	strh	r0, [r4], #2
    f6a0:	add	r5, r5, #4
    f6a4:	cmp	r4, r7
    f6a8:	bne	f694 <ReadInt16Data+0x8f0>
    f6ac:	b	fcf8 <ReadInt16Data+0xf54>
    f6b0:	cmp	r7, #256	; 0x100
    f6b4:	ble	f778 <ReadInt16Data+0x9d4>
    f6b8:	sub	fp, r7, #256	; 0x100
    f6bc:	cmp	fp, #0
    f6c0:	movle	r5, r8
    f6c4:	ble	f71c <ReadInt16Data+0x978>
    f6c8:	ldr	r3, [sp, #4]
    f6cc:	sub	r6, r3, #2
    f6d0:	mov	r5, r8
    f6d4:	add	sl, sp, #16
    f6d8:	add	r4, sl, #1020	; 0x3fc
    f6dc:	ldr	r3, [r9]
    f6e0:	mov	r2, #256	; 0x100
    f6e4:	ldr	r1, [sp]
    f6e8:	mov	r0, sl
    f6ec:	bl	1588 <fread@plt>
    f6f0:	add	r8, r8, r0
    f6f4:	sub	r3, sl, #4
    f6f8:	mov	r2, r6
    f6fc:	ldr	r1, [r3, #4]!
    f700:	strh	r1, [r2, #2]!
    f704:	cmp	r3, r4
    f708:	bne	f6fc <ReadInt16Data+0x958>
    f70c:	add	r5, r5, #256	; 0x100
    f710:	add	r6, r6, #512	; 0x200
    f714:	cmp	r5, fp
    f718:	blt	f6dc <ReadInt16Data+0x938>
    f71c:	cmp	r7, r5
    f720:	ble	fcf8 <ReadInt16Data+0xf54>
    f724:	sub	r7, r7, r5
    f728:	ldr	r3, [r9]
    f72c:	mov	r2, r7
    f730:	ldr	r1, [sp]
    f734:	add	r0, sp, #16
    f738:	bl	1588 <fread@plt>
    f73c:	add	r8, r8, r0
    f740:	cmp	r7, #0
    f744:	ble	fcf8 <ReadInt16Data+0xf54>
    f748:	add	r0, sp, #16
    f74c:	add	r2, sp, #12
    f750:	sub	r3, r5, #-2147483647	; 0x80000001
    f754:	ldr	r1, [sp, #4]
    f758:	add	r3, r1, r3, lsl #1
    f75c:	sub	r7, r7, #-1073741823	; 0xc0000001
    f760:	add	r0, r0, r7, lsl #2
    f764:	ldr	r1, [r2, #4]!
    f768:	strh	r1, [r3, #2]!
    f76c:	cmp	r2, r0
    f770:	bne	f764 <ReadInt16Data+0x9c0>
    f774:	b	fcf8 <ReadInt16Data+0xf54>
    f778:	ldr	r3, [r9]
    f77c:	mov	r2, r7
    f780:	ldr	r1, [sp]
    f784:	add	r0, sp, #16
    f788:	bl	1588 <fread@plt>
    f78c:	mov	r8, r0
    f790:	cmp	r7, #0
    f794:	ble	fcf8 <ReadInt16Data+0xf54>
    f798:	add	r0, sp, #16
    f79c:	add	r3, sp, #12
    f7a0:	ldr	r2, [sp, #4]
    f7a4:	sub	r2, r2, #2
    f7a8:	sub	r7, r7, #-1073741823	; 0xc0000001
    f7ac:	add	r0, r0, r7, lsl #2
    f7b0:	ldr	r1, [r3, #4]!
    f7b4:	strh	r1, [r2, #2]!
    f7b8:	cmp	r3, r0
    f7bc:	bne	f7b0 <ReadInt16Data+0xa0c>
    f7c0:	b	fcf8 <ReadInt16Data+0xf54>
    f7c4:	ldr	r8, [r9, #20]
    f7c8:	cmp	r8, #0
    f7cc:	beq	f908 <ReadInt16Data+0xb64>
    f7d0:	cmp	r7, #256	; 0x100
    f7d4:	ble	f8bc <ReadInt16Data+0xb18>
    f7d8:	sub	r3, r7, #256	; 0x100
    f7dc:	mov	r2, r3
    f7e0:	cmp	r3, #0
    f7e4:	movle	sl, #0
    f7e8:	movle	r8, sl
    f7ec:	ble	f860 <ReadInt16Data+0xabc>
    f7f0:	ldr	r3, [sp, #4]
    f7f4:	sub	fp, r3, #2
    f7f8:	mov	sl, #0
    f7fc:	mov	r8, sl
    f800:	add	r3, sp, #16
    f804:	str	r3, [sp, #8]
    f808:	add	r6, sp, #528	; 0x210
    f80c:	str	r7, [sp, #12]
    f810:	mov	r7, r2
    f814:	ldr	r3, [r9]
    f818:	mov	r2, #256	; 0x100
    f81c:	ldr	r1, [sp]
    f820:	ldr	r4, [sp, #8]
    f824:	mov	r0, r4
    f828:	bl	1588 <fread@plt>
    f82c:	add	r8, r8, r0
    f830:	mov	r5, fp
    f834:	mov	r0, r4
    f838:	bl	1ae4 <Mat_int16Swap>
    f83c:	strh	r0, [r5, #2]!
    f840:	add	r4, r4, #2
    f844:	cmp	r4, r6
    f848:	bne	f834 <ReadInt16Data+0xa90>
    f84c:	add	sl, sl, #256	; 0x100
    f850:	add	fp, fp, #512	; 0x200
    f854:	cmp	sl, r7
    f858:	blt	f814 <ReadInt16Data+0xa70>
    f85c:	ldr	r7, [sp, #12]
    f860:	cmp	r7, sl
    f864:	ble	fcf8 <ReadInt16Data+0xf54>
    f868:	sub	r7, r7, sl
    f86c:	ldr	r3, [r9]
    f870:	mov	r2, r7
    f874:	ldr	r1, [sp]
    f878:	add	r0, sp, #16
    f87c:	bl	1588 <fread@plt>
    f880:	add	r8, r8, r0
    f884:	cmp	r7, #0
    f888:	ble	fcf8 <ReadInt16Data+0xf54>
    f88c:	add	r6, sp, #16
    f890:	ldr	r3, [sp, #4]
    f894:	add	r5, r3, sl, lsl #1
    f898:	add	r7, r7, sl
    f89c:	add	r7, r3, r7, lsl #1
    f8a0:	mov	r0, r6
    f8a4:	bl	1ae4 <Mat_int16Swap>
    f8a8:	strh	r0, [r5], #2
    f8ac:	add	r6, r6, #2
    f8b0:	cmp	r5, r7
    f8b4:	bne	f8a0 <ReadInt16Data+0xafc>
    f8b8:	b	fcf8 <ReadInt16Data+0xf54>
    f8bc:	ldr	r3, [r9]
    f8c0:	mov	r2, r7
    f8c4:	ldr	r1, [sp]
    f8c8:	add	r0, sp, #16
    f8cc:	bl	1588 <fread@plt>
    f8d0:	mov	r8, r0
    f8d4:	cmp	r7, #0
    f8d8:	ble	fcf8 <ReadInt16Data+0xf54>
    f8dc:	add	r5, sp, #16
    f8e0:	ldr	r3, [sp, #4]
    f8e4:	mov	r4, r3
    f8e8:	add	r7, r3, r7, lsl #1
    f8ec:	mov	r0, r5
    f8f0:	bl	1ae4 <Mat_int16Swap>
    f8f4:	strh	r0, [r4], #2
    f8f8:	add	r5, r5, #2
    f8fc:	cmp	r4, r7
    f900:	bne	f8ec <ReadInt16Data+0xb48>
    f904:	b	fcf8 <ReadInt16Data+0xf54>
    f908:	cmp	r7, #256	; 0x100
    f90c:	ble	f9d4 <ReadInt16Data+0xc30>
    f910:	sub	fp, r7, #256	; 0x100
    f914:	cmp	fp, #0
    f918:	movle	r5, r8
    f91c:	ble	f978 <ReadInt16Data+0xbd4>
    f920:	ldr	r3, [sp, #4]
    f924:	sub	r6, r3, #2
    f928:	mov	r5, r8
    f92c:	add	sl, sp, #16
    f930:	add	r4, sl, #508	; 0x1fc
    f934:	add	r4, r4, #2
    f938:	ldr	r3, [r9]
    f93c:	mov	r2, #256	; 0x100
    f940:	ldr	r1, [sp]
    f944:	mov	r0, sl
    f948:	bl	1588 <fread@plt>
    f94c:	add	r8, r8, r0
    f950:	sub	r3, sl, #2
    f954:	mov	r2, r6
    f958:	ldrh	r1, [r3, #2]!
    f95c:	strh	r1, [r2, #2]!
    f960:	cmp	r3, r4
    f964:	bne	f958 <ReadInt16Data+0xbb4>
    f968:	add	r5, r5, #256	; 0x100
    f96c:	add	r6, r6, #512	; 0x200
    f970:	cmp	r5, fp
    f974:	blt	f938 <ReadInt16Data+0xb94>
    f978:	cmp	r7, r5
    f97c:	ble	fcf8 <ReadInt16Data+0xf54>
    f980:	sub	r7, r7, r5
    f984:	ldr	r3, [r9]
    f988:	mov	r2, r7
    f98c:	ldr	r1, [sp]
    f990:	add	r0, sp, #16
    f994:	bl	1588 <fread@plt>
    f998:	add	r8, r8, r0
    f99c:	cmp	r7, #0
    f9a0:	ble	fcf8 <ReadInt16Data+0xf54>
    f9a4:	add	r0, sp, #16
    f9a8:	add	r2, sp, #14
    f9ac:	sub	r3, r5, #-2147483647	; 0x80000001
    f9b0:	ldr	r1, [sp, #4]
    f9b4:	add	r3, r1, r3, lsl #1
    f9b8:	sub	r7, r7, #-2147483647	; 0x80000001
    f9bc:	add	r0, r0, r7, lsl #1
    f9c0:	ldrh	r1, [r2, #2]!
    f9c4:	strh	r1, [r3, #2]!
    f9c8:	cmp	r2, r0
    f9cc:	bne	f9c0 <ReadInt16Data+0xc1c>
    f9d0:	b	fcf8 <ReadInt16Data+0xf54>
    f9d4:	ldr	r3, [r9]
    f9d8:	mov	r2, r7
    f9dc:	ldr	r1, [sp]
    f9e0:	add	r0, sp, #16
    f9e4:	bl	1588 <fread@plt>
    f9e8:	mov	r8, r0
    f9ec:	cmp	r7, #0
    f9f0:	ble	fcf8 <ReadInt16Data+0xf54>
    f9f4:	add	r0, sp, #16
    f9f8:	add	r3, sp, #14
    f9fc:	ldr	r2, [sp, #4]
    fa00:	sub	r2, r2, #2
    fa04:	sub	r7, r7, #-2147483647	; 0x80000001
    fa08:	add	r0, r0, r7, lsl #1
    fa0c:	ldrh	r1, [r3, #2]!
    fa10:	strh	r1, [r2, #2]!
    fa14:	cmp	r3, r0
    fa18:	bne	fa0c <ReadInt16Data+0xc68>
    fa1c:	b	fcf8 <ReadInt16Data+0xf54>
    fa20:	ldr	r8, [r9, #20]
    fa24:	cmp	r8, #0
    fa28:	beq	fb64 <ReadInt16Data+0xdc0>
    fa2c:	cmp	r7, #256	; 0x100
    fa30:	ble	fb18 <ReadInt16Data+0xd74>
    fa34:	sub	r3, r7, #256	; 0x100
    fa38:	mov	r2, r3
    fa3c:	cmp	r3, #0
    fa40:	movle	sl, #0
    fa44:	movle	r8, sl
    fa48:	ble	fabc <ReadInt16Data+0xd18>
    fa4c:	ldr	r3, [sp, #4]
    fa50:	sub	fp, r3, #2
    fa54:	mov	sl, #0
    fa58:	mov	r8, sl
    fa5c:	add	r3, sp, #16
    fa60:	str	r3, [sp, #8]
    fa64:	add	r6, sp, #528	; 0x210
    fa68:	str	r7, [sp, #12]
    fa6c:	mov	r7, r2
    fa70:	ldr	r3, [r9]
    fa74:	mov	r2, #256	; 0x100
    fa78:	ldr	r1, [sp]
    fa7c:	ldr	r4, [sp, #8]
    fa80:	mov	r0, r4
    fa84:	bl	1588 <fread@plt>
    fa88:	add	r8, r8, r0
    fa8c:	mov	r5, fp
    fa90:	mov	r0, r4
    fa94:	bl	1b1c <Mat_uint16Swap>
    fa98:	strh	r0, [r5, #2]!
    fa9c:	add	r4, r4, #2
    faa0:	cmp	r4, r6
    faa4:	bne	fa90 <ReadInt16Data+0xcec>
    faa8:	add	sl, sl, #256	; 0x100
    faac:	add	fp, fp, #512	; 0x200
    fab0:	cmp	sl, r7
    fab4:	blt	fa70 <ReadInt16Data+0xccc>
    fab8:	ldr	r7, [sp, #12]
    fabc:	cmp	r7, sl
    fac0:	ble	fcf8 <ReadInt16Data+0xf54>
    fac4:	sub	r7, r7, sl
    fac8:	ldr	r3, [r9]
    facc:	mov	r2, r7
    fad0:	ldr	r1, [sp]
    fad4:	add	r0, sp, #16
    fad8:	bl	1588 <fread@plt>
    fadc:	add	r8, r8, r0
    fae0:	cmp	r7, #0
    fae4:	ble	fcf8 <ReadInt16Data+0xf54>
    fae8:	add	r6, sp, #16
    faec:	ldr	r3, [sp, #4]
    faf0:	add	r5, r3, sl, lsl #1
    faf4:	add	r7, r7, sl
    faf8:	add	r7, r3, r7, lsl #1
    fafc:	mov	r0, r6
    fb00:	bl	1b1c <Mat_uint16Swap>
    fb04:	strh	r0, [r5], #2
    fb08:	add	r6, r6, #2
    fb0c:	cmp	r5, r7
    fb10:	bne	fafc <ReadInt16Data+0xd58>
    fb14:	b	fcf8 <ReadInt16Data+0xf54>
    fb18:	ldr	r3, [r9]
    fb1c:	mov	r2, r7
    fb20:	ldr	r1, [sp]
    fb24:	add	r0, sp, #16
    fb28:	bl	1588 <fread@plt>
    fb2c:	mov	r8, r0
    fb30:	cmp	r7, #0
    fb34:	ble	fcf8 <ReadInt16Data+0xf54>
    fb38:	add	r5, sp, #16
    fb3c:	ldr	r3, [sp, #4]
    fb40:	mov	r4, r3
    fb44:	add	r7, r3, r7, lsl #1
    fb48:	mov	r0, r5
    fb4c:	bl	1b1c <Mat_uint16Swap>
    fb50:	strh	r0, [r4], #2
    fb54:	add	r5, r5, #2
    fb58:	cmp	r4, r7
    fb5c:	bne	fb48 <ReadInt16Data+0xda4>
    fb60:	b	fcf8 <ReadInt16Data+0xf54>
    fb64:	cmp	r7, #256	; 0x100
    fb68:	ble	fc30 <ReadInt16Data+0xe8c>
    fb6c:	sub	fp, r7, #256	; 0x100
    fb70:	cmp	fp, #0
    fb74:	movle	r5, r8
    fb78:	ble	fbd4 <ReadInt16Data+0xe30>
    fb7c:	ldr	r3, [sp, #4]
    fb80:	sub	r6, r3, #2
    fb84:	mov	r5, r8
    fb88:	add	sl, sp, #16
    fb8c:	add	r4, sl, #508	; 0x1fc
    fb90:	add	r4, r4, #2
    fb94:	ldr	r3, [r9]
    fb98:	mov	r2, #256	; 0x100
    fb9c:	ldr	r1, [sp]
    fba0:	mov	r0, sl
    fba4:	bl	1588 <fread@plt>
    fba8:	add	r8, r8, r0
    fbac:	sub	r3, sl, #2
    fbb0:	mov	r2, r6
    fbb4:	ldrh	r1, [r3, #2]!
    fbb8:	strh	r1, [r2, #2]!
    fbbc:	cmp	r3, r4
    fbc0:	bne	fbb4 <ReadInt16Data+0xe10>
    fbc4:	add	r5, r5, #256	; 0x100
    fbc8:	add	r6, r6, #512	; 0x200
    fbcc:	cmp	r5, fp
    fbd0:	blt	fb94 <ReadInt16Data+0xdf0>
    fbd4:	cmp	r7, r5
    fbd8:	ble	fcf8 <ReadInt16Data+0xf54>
    fbdc:	sub	r7, r7, r5
    fbe0:	ldr	r3, [r9]
    fbe4:	mov	r2, r7
    fbe8:	ldr	r1, [sp]
    fbec:	add	r0, sp, #16
    fbf0:	bl	1588 <fread@plt>
    fbf4:	add	r8, r8, r0
    fbf8:	cmp	r7, #0
    fbfc:	ble	fcf8 <ReadInt16Data+0xf54>
    fc00:	add	r0, sp, #16
    fc04:	add	r2, sp, #14
    fc08:	sub	r3, r5, #-2147483647	; 0x80000001
    fc0c:	ldr	r1, [sp, #4]
    fc10:	add	r3, r1, r3, lsl #1
    fc14:	sub	r7, r7, #-2147483647	; 0x80000001
    fc18:	add	r0, r0, r7, lsl #1
    fc1c:	ldrh	r1, [r2, #2]!
    fc20:	strh	r1, [r3, #2]!
    fc24:	cmp	r2, r0
    fc28:	bne	fc1c <ReadInt16Data+0xe78>
    fc2c:	b	fcf8 <ReadInt16Data+0xf54>
    fc30:	ldr	r3, [r9]
    fc34:	mov	r2, r7
    fc38:	ldr	r1, [sp]
    fc3c:	add	r0, sp, #16
    fc40:	bl	1588 <fread@plt>
    fc44:	mov	r8, r0
    fc48:	cmp	r7, #0
    fc4c:	ble	fcf8 <ReadInt16Data+0xf54>
    fc50:	add	r0, sp, #16
    fc54:	add	r3, sp, #14
    fc58:	ldr	r2, [sp, #4]
    fc5c:	sub	r2, r2, #2
    fc60:	sub	r7, r7, #-2147483647	; 0x80000001
    fc64:	add	r0, r0, r7, lsl #1
    fc68:	ldrh	r1, [r3, #2]!
    fc6c:	strh	r1, [r2, #2]!
    fc70:	cmp	r3, r0
    fc74:	bne	fc68 <ReadInt16Data+0xec4>
    fc78:	b	fcf8 <ReadInt16Data+0xf54>
    fc7c:	cmp	r7, #256	; 0x100
    fc80:	ble	fd0c <ReadInt16Data+0xf68>
    fc84:	sub	fp, r7, #256	; 0x100
    fc88:	cmp	fp, #0
    fc8c:	movle	r5, #0
    fc90:	movle	r8, r5
    fc94:	ble	fcf0 <ReadInt16Data+0xf4c>
    fc98:	ldr	r3, [sp, #4]
    fc9c:	sub	r6, r3, #2
    fca0:	mov	r5, #0
    fca4:	mov	r8, r5
    fca8:	add	sl, sp, #16
    fcac:	add	r4, sl, #255	; 0xff
    fcb0:	ldr	r3, [r9]
    fcb4:	mov	r2, #256	; 0x100
    fcb8:	ldr	r1, [sp]
    fcbc:	mov	r0, sl
    fcc0:	bl	1588 <fread@plt>
    fcc4:	add	r8, r8, r0
    fcc8:	sub	r3, sl, #1
    fccc:	mov	r2, r6
    fcd0:	ldrsb	r1, [r3, #1]!
    fcd4:	strh	r1, [r2, #2]!
    fcd8:	cmp	r4, r3
    fcdc:	bne	fcd0 <ReadInt16Data+0xf2c>
    fce0:	add	r5, r5, #256	; 0x100
    fce4:	add	r6, r6, #512	; 0x200
    fce8:	cmp	r5, fp
    fcec:	blt	fcb0 <ReadInt16Data+0xf0c>
    fcf0:	cmp	r7, r5
    fcf4:	bgt	fd58 <ReadInt16Data+0xfb4>
    fcf8:	ldr	r3, [sp]
    fcfc:	mul	r0, r3, r8
    fd00:	add	sp, sp, #2064	; 0x810
    fd04:	add	sp, sp, #4
    fd08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fd0c:	ldr	r3, [r9]
    fd10:	mov	r2, r7
    fd14:	ldr	r1, [sp]
    fd18:	add	r0, sp, #16
    fd1c:	bl	1588 <fread@plt>
    fd20:	mov	r8, r0
    fd24:	cmp	r7, #0
    fd28:	ble	fcf8 <ReadInt16Data+0xf54>
    fd2c:	add	r0, sp, #16
    fd30:	add	r3, sp, #15
    fd34:	ldr	r2, [sp, #4]
    fd38:	sub	r2, r2, #2
    fd3c:	sub	r7, r7, #1
    fd40:	add	r0, r0, r7
    fd44:	ldrsb	r1, [r3, #1]!
    fd48:	strh	r1, [r2, #2]!
    fd4c:	cmp	r3, r0
    fd50:	bne	fd44 <ReadInt16Data+0xfa0>
    fd54:	b	fcf8 <ReadInt16Data+0xf54>
    fd58:	sub	r7, r7, r5
    fd5c:	ldr	r3, [r9]
    fd60:	mov	r2, r7
    fd64:	ldr	r1, [sp]
    fd68:	add	r0, sp, #16
    fd6c:	bl	1588 <fread@plt>
    fd70:	add	r8, r8, r0
    fd74:	cmp	r7, #0
    fd78:	ble	fcf8 <ReadInt16Data+0xf54>
    fd7c:	add	r0, sp, #16
    fd80:	add	r2, sp, #15
    fd84:	sub	r3, r5, #-2147483647	; 0x80000001
    fd88:	ldr	r1, [sp, #4]
    fd8c:	add	r3, r1, r3, lsl #1
    fd90:	sub	r7, r7, #1
    fd94:	add	r0, r0, r7
    fd98:	ldrsb	r1, [r2, #1]!
    fd9c:	strh	r1, [r3, #2]!
    fda0:	cmp	r2, r0
    fda4:	bne	fd98 <ReadInt16Data+0xff4>
    fda8:	b	fcf8 <ReadInt16Data+0xf54>
    fdac:	cmp	r7, #256	; 0x100
    fdb0:	ble	fe7c <ReadInt16Data+0x10d8>
    fdb4:	sub	fp, r7, #256	; 0x100
    fdb8:	cmp	fp, #0
    fdbc:	movle	r5, #0
    fdc0:	movle	r8, r5
    fdc4:	ble	fe20 <ReadInt16Data+0x107c>
    fdc8:	ldr	r3, [sp, #4]
    fdcc:	sub	r6, r3, #2
    fdd0:	mov	r5, #0
    fdd4:	mov	r8, r5
    fdd8:	add	sl, sp, #16
    fddc:	add	r4, sl, #255	; 0xff
    fde0:	ldr	r3, [r9]
    fde4:	mov	r2, #256	; 0x100
    fde8:	ldr	r1, [sp]
    fdec:	mov	r0, sl
    fdf0:	bl	1588 <fread@plt>
    fdf4:	add	r8, r8, r0
    fdf8:	sub	r3, sl, #1
    fdfc:	mov	r2, r6
    fe00:	ldrb	r1, [r3, #1]!
    fe04:	strh	r1, [r2, #2]!
    fe08:	cmp	r3, r4
    fe0c:	bne	fe00 <ReadInt16Data+0x105c>
    fe10:	add	r5, r5, #256	; 0x100
    fe14:	add	r6, r6, #512	; 0x200
    fe18:	cmp	r5, fp
    fe1c:	blt	fde0 <ReadInt16Data+0x103c>
    fe20:	cmp	r7, r5
    fe24:	ble	fcf8 <ReadInt16Data+0xf54>
    fe28:	sub	r7, r7, r5
    fe2c:	ldr	r3, [r9]
    fe30:	mov	r2, r7
    fe34:	ldr	r1, [sp]
    fe38:	add	r0, sp, #16
    fe3c:	bl	1588 <fread@plt>
    fe40:	add	r8, r8, r0
    fe44:	cmp	r7, #0
    fe48:	ble	fcf8 <ReadInt16Data+0xf54>
    fe4c:	add	r0, sp, #16
    fe50:	add	r2, sp, #15
    fe54:	sub	r3, r5, #-2147483647	; 0x80000001
    fe58:	ldr	r1, [sp, #4]
    fe5c:	add	r3, r1, r3, lsl #1
    fe60:	sub	r7, r7, #1
    fe64:	add	r0, r0, r7
    fe68:	ldrb	r1, [r2, #1]!
    fe6c:	strh	r1, [r3, #2]!
    fe70:	cmp	r0, r2
    fe74:	bne	fe68 <ReadInt16Data+0x10c4>
    fe78:	b	fcf8 <ReadInt16Data+0xf54>
    fe7c:	ldr	r3, [r9]
    fe80:	mov	r2, r7
    fe84:	ldr	r1, [sp]
    fe88:	add	r0, sp, #16
    fe8c:	bl	1588 <fread@plt>
    fe90:	mov	r8, r0
    fe94:	cmp	r7, #0
    fe98:	ble	fcf8 <ReadInt16Data+0xf54>
    fe9c:	add	r0, sp, #16
    fea0:	add	r3, sp, #15
    fea4:	ldr	r2, [sp, #4]
    fea8:	sub	r2, r2, #2
    feac:	sub	r7, r7, #1
    feb0:	add	r0, r0, r7
    feb4:	ldrb	r1, [r3, #1]!
    feb8:	strh	r1, [r2, #2]!
    febc:	cmp	r0, r3
    fec0:	bne	feb4 <ReadInt16Data+0x1110>
    fec4:	b	fcf8 <ReadInt16Data+0xf54>
    fec8:	cmp	r4, #12
    fecc:	beq	ffcc <ReadInt16Data+0x1228>
    fed0:	cmp	r4, #13
    fed4:	movne	r8, #0
    fed8:	bne	fcf8 <ReadInt16Data+0xf54>
    fedc:	ldr	r8, [r9, #20]
    fee0:	cmp	r8, #0
    fee4:	beq	1026c <ReadInt16Data+0x14c8>
    fee8:	cmp	r7, #256	; 0x100
    feec:	ble	10220 <ReadInt16Data+0x147c>
    fef0:	sub	r3, r7, #256	; 0x100
    fef4:	str	r3, [sp, #8]
    fef8:	cmp	r3, #0
    fefc:	movle	sl, #0
    ff00:	movle	r8, sl
    ff04:	ble	ff70 <ReadInt16Data+0x11cc>
    ff08:	ldr	r3, [sp, #4]
    ff0c:	sub	fp, r3, #2
    ff10:	mov	sl, #0
    ff14:	mov	r8, sl
    ff18:	add	r3, sp, #16
    ff1c:	str	r3, [sp, #12]
    ff20:	ldr	r3, [r9]
    ff24:	mov	r2, #256	; 0x100
    ff28:	ldr	r1, [sp]
    ff2c:	ldr	r4, [sp, #12]
    ff30:	mov	r0, r4
    ff34:	bl	1588 <fread@plt>
    ff38:	add	r8, r8, r0
    ff3c:	add	r6, sp, #2064	; 0x810
    ff40:	mov	r5, fp
    ff44:	mov	r0, r4
    ff48:	bl	1984 <Mat_uint64Swap>
    ff4c:	strh	r0, [r5, #2]!
    ff50:	add	r4, r4, #8
    ff54:	cmp	r6, r4
    ff58:	bne	ff44 <ReadInt16Data+0x11a0>
    ff5c:	add	sl, sl, #256	; 0x100
    ff60:	add	fp, fp, #512	; 0x200
    ff64:	ldr	r3, [sp, #8]
    ff68:	cmp	sl, r3
    ff6c:	blt	ff20 <ReadInt16Data+0x117c>
    ff70:	cmp	r7, sl
    ff74:	ble	fcf8 <ReadInt16Data+0xf54>
    ff78:	sub	r4, r7, sl
    ff7c:	ldr	r3, [r9]
    ff80:	mov	r2, r4
    ff84:	ldr	r1, [sp]
    ff88:	add	r0, sp, #16
    ff8c:	bl	1588 <fread@plt>
    ff90:	add	r8, r8, r0
    ff94:	cmp	r4, #0
    ff98:	ble	fcf8 <ReadInt16Data+0xf54>
    ff9c:	add	r6, sp, #16
    ffa0:	ldr	r3, [sp, #4]
    ffa4:	add	r5, r3, sl, lsl #1
    ffa8:	add	r4, sl, r4
    ffac:	add	r4, r3, r4, lsl #1
    ffb0:	mov	r0, r6
    ffb4:	bl	1984 <Mat_uint64Swap>
    ffb8:	strh	r0, [r5], #2
    ffbc:	add	r6, r6, #8
    ffc0:	cmp	r5, r4
    ffc4:	bne	ffb0 <ReadInt16Data+0x120c>
    ffc8:	b	fcf8 <ReadInt16Data+0xf54>
    ffcc:	ldr	r8, [r9, #20]
    ffd0:	cmp	r8, #0
    ffd4:	beq	10108 <ReadInt16Data+0x1364>
    ffd8:	cmp	r7, #256	; 0x100
    ffdc:	ble	100bc <ReadInt16Data+0x1318>
    ffe0:	sub	r3, r7, #256	; 0x100
    ffe4:	str	r3, [sp, #8]
    ffe8:	cmp	r3, #0
    ffec:	movle	sl, #0
    fff0:	movle	r8, sl
    fff4:	ble	10060 <ReadInt16Data+0x12bc>
    fff8:	ldr	r3, [sp, #4]
    fffc:	sub	fp, r3, #2
   10000:	mov	sl, #0
   10004:	mov	r8, sl
   10008:	add	r3, sp, #16
   1000c:	str	r3, [sp, #12]
   10010:	ldr	r3, [r9]
   10014:	mov	r2, #256	; 0x100
   10018:	ldr	r1, [sp]
   1001c:	ldr	r4, [sp, #12]
   10020:	mov	r0, r4
   10024:	bl	1588 <fread@plt>
   10028:	add	r8, r8, r0
   1002c:	add	r6, sp, #2064	; 0x810
   10030:	mov	r5, fp
   10034:	mov	r0, r4
   10038:	bl	18bc <Mat_int64Swap>
   1003c:	strh	r0, [r5, #2]!
   10040:	add	r4, r4, #8
   10044:	cmp	r4, r6
   10048:	bne	10034 <ReadInt16Data+0x1290>
   1004c:	add	sl, sl, #256	; 0x100
   10050:	add	fp, fp, #512	; 0x200
   10054:	ldr	r3, [sp, #8]
   10058:	cmp	sl, r3
   1005c:	blt	10010 <ReadInt16Data+0x126c>
   10060:	cmp	r7, sl
   10064:	ble	fcf8 <ReadInt16Data+0xf54>
   10068:	sub	r7, r7, sl
   1006c:	ldr	r3, [r9]
   10070:	mov	r2, r7
   10074:	ldr	r1, [sp]
   10078:	add	r0, sp, #16
   1007c:	bl	1588 <fread@plt>
   10080:	add	r8, r8, r0
   10084:	cmp	r7, #0
   10088:	ble	fcf8 <ReadInt16Data+0xf54>
   1008c:	add	r6, sp, #16
   10090:	ldr	r3, [sp, #4]
   10094:	add	r5, r3, sl, lsl #1
   10098:	add	r7, r7, sl
   1009c:	add	r7, r3, r7, lsl #1
   100a0:	mov	r0, r6
   100a4:	bl	18bc <Mat_int64Swap>
   100a8:	strh	r0, [r5], #2
   100ac:	add	r6, r6, #8
   100b0:	cmp	r5, r7
   100b4:	bne	100a0 <ReadInt16Data+0x12fc>
   100b8:	b	fcf8 <ReadInt16Data+0xf54>
   100bc:	ldr	r3, [r9]
   100c0:	mov	r2, r7
   100c4:	ldr	r1, [sp]
   100c8:	add	r0, sp, #16
   100cc:	bl	1588 <fread@plt>
   100d0:	mov	r8, r0
   100d4:	cmp	r7, #0
   100d8:	ble	fcf8 <ReadInt16Data+0xf54>
   100dc:	add	r5, sp, #16
   100e0:	ldr	r3, [sp, #4]
   100e4:	mov	r4, r3
   100e8:	add	r7, r3, r7, lsl #1
   100ec:	mov	r0, r5
   100f0:	bl	18bc <Mat_int64Swap>
   100f4:	strh	r0, [r4], #2
   100f8:	add	r5, r5, #8
   100fc:	cmp	r7, r4
   10100:	bne	100ec <ReadInt16Data+0x1348>
   10104:	b	fcf8 <ReadInt16Data+0xf54>
   10108:	cmp	r7, #256	; 0x100
   1010c:	ble	101d4 <ReadInt16Data+0x1430>
   10110:	sub	sl, r7, #256	; 0x100
   10114:	cmp	sl, #0
   10118:	movle	r5, r8
   1011c:	ble	10178 <ReadInt16Data+0x13d4>
   10120:	ldr	r3, [sp, #4]
   10124:	sub	r6, r3, #2
   10128:	mov	r5, r8
   1012c:	add	fp, sp, #16
   10130:	add	r4, sp, #2048	; 0x800
   10134:	add	r4, r4, #8
   10138:	ldr	r3, [r9]
   1013c:	mov	r2, #256	; 0x100
   10140:	ldr	r1, [sp]
   10144:	mov	r0, fp
   10148:	bl	1588 <fread@plt>
   1014c:	add	r8, r8, r0
   10150:	sub	r3, fp, #8
   10154:	mov	r2, r6
   10158:	ldr	r1, [r3, #8]!
   1015c:	strh	r1, [r2, #2]!
   10160:	cmp	r3, r4
   10164:	bne	10158 <ReadInt16Data+0x13b4>
   10168:	add	r5, r5, #256	; 0x100
   1016c:	add	r6, r6, #512	; 0x200
   10170:	cmp	r5, sl
   10174:	blt	10138 <ReadInt16Data+0x1394>
   10178:	cmp	r7, r5
   1017c:	ble	fcf8 <ReadInt16Data+0xf54>
   10180:	sub	r7, r7, r5
   10184:	ldr	r3, [r9]
   10188:	mov	r2, r7
   1018c:	ldr	r1, [sp]
   10190:	add	r0, sp, #16
   10194:	bl	1588 <fread@plt>
   10198:	add	r8, r8, r0
   1019c:	cmp	r7, #0
   101a0:	ble	fcf8 <ReadInt16Data+0xf54>
   101a4:	add	r1, sp, #16
   101a8:	add	r2, sp, #8
   101ac:	sub	r3, r5, #-2147483647	; 0x80000001
   101b0:	ldr	r0, [sp, #4]
   101b4:	add	r3, r0, r3, lsl #1
   101b8:	sub	r7, r7, #-536870911	; 0xe0000001
   101bc:	add	r1, r1, r7, lsl #3
   101c0:	ldr	r0, [r2, #8]!
   101c4:	strh	r0, [r3, #2]!
   101c8:	cmp	r1, r2
   101cc:	bne	101c0 <ReadInt16Data+0x141c>
   101d0:	b	fcf8 <ReadInt16Data+0xf54>
   101d4:	ldr	r3, [r9]
   101d8:	mov	r2, r7
   101dc:	ldr	r1, [sp]
   101e0:	add	r0, sp, #16
   101e4:	bl	1588 <fread@plt>
   101e8:	mov	r8, r0
   101ec:	cmp	r7, #0
   101f0:	ble	fcf8 <ReadInt16Data+0xf54>
   101f4:	add	r0, sp, #16
   101f8:	add	r3, sp, #8
   101fc:	ldr	r2, [sp, #4]
   10200:	sub	r2, r2, #2
   10204:	sub	r7, r7, #-536870911	; 0xe0000001
   10208:	add	r0, r0, r7, lsl #3
   1020c:	ldr	r1, [r3, #8]!
   10210:	strh	r1, [r2, #2]!
   10214:	cmp	r0, r3
   10218:	bne	1020c <ReadInt16Data+0x1468>
   1021c:	b	fcf8 <ReadInt16Data+0xf54>
   10220:	ldr	r3, [r9]
   10224:	mov	r2, r7
   10228:	ldr	r1, [sp]
   1022c:	add	r0, sp, #16
   10230:	bl	1588 <fread@plt>
   10234:	mov	r8, r0
   10238:	cmp	r7, #0
   1023c:	ble	fcf8 <ReadInt16Data+0xf54>
   10240:	add	r5, sp, #16
   10244:	ldr	r3, [sp, #4]
   10248:	mov	r4, r3
   1024c:	add	r7, r3, r7, lsl #1
   10250:	mov	r0, r5
   10254:	bl	1984 <Mat_uint64Swap>
   10258:	strh	r0, [r4], #2
   1025c:	add	r5, r5, #8
   10260:	cmp	r4, r7
   10264:	bne	10250 <ReadInt16Data+0x14ac>
   10268:	b	fcf8 <ReadInt16Data+0xf54>
   1026c:	cmp	r7, #256	; 0x100
   10270:	ble	10338 <ReadInt16Data+0x1594>
   10274:	sub	sl, r7, #256	; 0x100
   10278:	cmp	sl, #0
   1027c:	movle	r5, r8
   10280:	ble	102dc <ReadInt16Data+0x1538>
   10284:	ldr	r3, [sp, #4]
   10288:	sub	r6, r3, #2
   1028c:	mov	r5, r8
   10290:	add	fp, sp, #16
   10294:	add	r4, sp, #2048	; 0x800
   10298:	add	r4, r4, #8
   1029c:	ldr	r3, [r9]
   102a0:	mov	r2, #256	; 0x100
   102a4:	ldr	r1, [sp]
   102a8:	mov	r0, fp
   102ac:	bl	1588 <fread@plt>
   102b0:	add	r8, r8, r0
   102b4:	sub	r3, fp, #8
   102b8:	mov	r2, r6
   102bc:	ldr	r1, [r3, #8]!
   102c0:	strh	r1, [r2, #2]!
   102c4:	cmp	r3, r4
   102c8:	bne	102bc <ReadInt16Data+0x1518>
   102cc:	add	r5, r5, #256	; 0x100
   102d0:	add	r6, r6, #512	; 0x200
   102d4:	cmp	r5, sl
   102d8:	blt	1029c <ReadInt16Data+0x14f8>
   102dc:	cmp	r7, r5
   102e0:	ble	fcf8 <ReadInt16Data+0xf54>
   102e4:	sub	r7, r7, r5
   102e8:	ldr	r3, [r9]
   102ec:	mov	r2, r7
   102f0:	ldr	r1, [sp]
   102f4:	add	r0, sp, #16
   102f8:	bl	1588 <fread@plt>
   102fc:	add	r8, r8, r0
   10300:	cmp	r7, #0
   10304:	ble	fcf8 <ReadInt16Data+0xf54>
   10308:	add	r1, sp, #16
   1030c:	add	r2, sp, #8
   10310:	sub	r3, r5, #-2147483647	; 0x80000001
   10314:	ldr	r0, [sp, #4]
   10318:	add	r3, r0, r3, lsl #1
   1031c:	sub	r7, r7, #-536870911	; 0xe0000001
   10320:	add	r1, r1, r7, lsl #3
   10324:	ldr	r0, [r2, #8]!
   10328:	strh	r0, [r3, #2]!
   1032c:	cmp	r2, r1
   10330:	bne	10324 <ReadInt16Data+0x1580>
   10334:	b	fcf8 <ReadInt16Data+0xf54>
   10338:	ldr	r3, [r9]
   1033c:	mov	r2, r7
   10340:	ldr	r1, [sp]
   10344:	add	r0, sp, #16
   10348:	bl	1588 <fread@plt>
   1034c:	mov	r8, r0
   10350:	cmp	r7, #0
   10354:	ble	fcf8 <ReadInt16Data+0xf54>
   10358:	add	r0, sp, #16
   1035c:	add	r3, sp, #8
   10360:	ldr	r2, [sp, #4]
   10364:	sub	r2, r2, #2
   10368:	sub	r7, r7, #-536870911	; 0xe0000001
   1036c:	add	r0, r0, r7, lsl #3
   10370:	ldr	r1, [r3, #8]!
   10374:	strh	r1, [r2, #2]!
   10378:	cmp	r0, r3
   1037c:	bne	10370 <ReadInt16Data+0x15cc>
   10380:	b	fcf8 <ReadInt16Data+0xf54>
   10384:	mov	r0, #0
   10388:	bx	lr

0001038c <ReadCompressedInt16Data>:
   1038c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10390:	sub	sp, sp, #8
   10394:	ldr	r9, [sp, #40]	; 0x28
   10398:	mov	r4, r2
   1039c:	cmp	r2, #0
   103a0:	cmpne	r1, #0
   103a4:	moveq	r2, #1
   103a8:	movne	r2, #0
   103ac:	cmp	r0, #0
   103b0:	orreq	r2, r2, #1
   103b4:	cmp	r2, #0
   103b8:	movne	r0, #0
   103bc:	bne	10448 <ReadCompressedInt16Data+0xbc>
   103c0:	mov	r7, r1
   103c4:	mov	r6, r0
   103c8:	mov	r8, r3
   103cc:	mov	r0, r3
   103d0:	bl	1600 <Mat_SizeOf@plt>
   103d4:	mov	r5, r0
   103d8:	sub	r3, r8, #1
   103dc:	cmp	r3, #8
   103e0:	addls	pc, pc, r3, lsl #2
   103e4:	b	107dc <ReadCompressedInt16Data+0x450>
   103e8:	b	10450 <ReadCompressedInt16Data+0xc4>
   103ec:	b	1040c <ReadCompressedInt16Data+0x80>
   103f0:	b	106cc <ReadCompressedInt16Data+0x340>
   103f4:	b	10754 <ReadCompressedInt16Data+0x3c8>
   103f8:	b	105bc <ReadCompressedInt16Data+0x230>
   103fc:	b	10644 <ReadCompressedInt16Data+0x2b8>
   10400:	b	10524 <ReadCompressedInt16Data+0x198>
   10404:	b	107dc <ReadCompressedInt16Data+0x450>
   10408:	b	1048c <ReadCompressedInt16Data+0x100>
   1040c:	cmp	r9, #0
   10410:	movgt	r8, r4
   10414:	addgt	r4, r4, r9, lsl #1
   10418:	movgt	sl, sp
   1041c:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10420:	mov	r3, r5
   10424:	mov	r2, sl
   10428:	mov	r1, r7
   1042c:	mov	r0, r6
   10430:	bl	3418 <InflateData>
   10434:	ldrb	r3, [sp]
   10438:	strh	r3, [r8], #2
   1043c:	cmp	r8, r4
   10440:	bne	10420 <ReadCompressedInt16Data+0x94>
   10444:	mul	r0, r5, r9
   10448:	add	sp, sp, #8
   1044c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10450:	cmp	r9, #0
   10454:	movgt	r8, r4
   10458:	addgt	r4, r4, r9, lsl #1
   1045c:	movgt	sl, sp
   10460:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10464:	mov	r3, r5
   10468:	mov	r2, sl
   1046c:	mov	r1, r7
   10470:	mov	r0, r6
   10474:	bl	3418 <InflateData>
   10478:	ldrsb	r3, [sp]
   1047c:	strh	r3, [r8], #2
   10480:	cmp	r8, r4
   10484:	bne	10464 <ReadCompressedInt16Data+0xd8>
   10488:	b	10444 <ReadCompressedInt16Data+0xb8>
   1048c:	ldr	r3, [r6, #20]
   10490:	cmp	r3, #0
   10494:	bne	104dc <ReadCompressedInt16Data+0x150>
   10498:	cmp	r9, #0
   1049c:	movgt	r8, r4
   104a0:	addgt	r4, r4, r9, lsl #1
   104a4:	movgt	sl, sp
   104a8:	ble	10444 <ReadCompressedInt16Data+0xb8>
   104ac:	mov	r3, r5
   104b0:	mov	r2, sl
   104b4:	mov	r1, r7
   104b8:	mov	r0, r6
   104bc:	bl	3418 <InflateData>
   104c0:	vldr	d7, [sp]
   104c4:	vcvt.s32.f64	s15, d7
   104c8:	vmov	r3, s15
   104cc:	strh	r3, [r8], #2
   104d0:	cmp	r8, r4
   104d4:	bne	104ac <ReadCompressedInt16Data+0x120>
   104d8:	b	10444 <ReadCompressedInt16Data+0xb8>
   104dc:	cmp	r9, #0
   104e0:	ble	10444 <ReadCompressedInt16Data+0xb8>
   104e4:	mov	r8, r4
   104e8:	add	r4, r4, r9, lsl #1
   104ec:	mov	sl, sp
   104f0:	mov	r3, r5
   104f4:	mov	r2, sl
   104f8:	mov	r1, r7
   104fc:	mov	r0, r6
   10500:	bl	3418 <InflateData>
   10504:	mov	r0, sl
   10508:	bl	1b94 <Mat_doubleSwap>
   1050c:	vcvt.s32.f64	s15, d0
   10510:	vmov	r3, s15
   10514:	strh	r3, [r8], #2
   10518:	cmp	r8, r4
   1051c:	bne	104f0 <ReadCompressedInt16Data+0x164>
   10520:	b	10444 <ReadCompressedInt16Data+0xb8>
   10524:	ldr	r3, [r6, #20]
   10528:	cmp	r3, #0
   1052c:	bne	10574 <ReadCompressedInt16Data+0x1e8>
   10530:	cmp	r9, #0
   10534:	movgt	r8, r4
   10538:	addgt	r4, r4, r9, lsl #1
   1053c:	movgt	sl, sp
   10540:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10544:	mov	r3, r5
   10548:	mov	r2, sl
   1054c:	mov	r1, r7
   10550:	mov	r0, r6
   10554:	bl	3418 <InflateData>
   10558:	vldr	s15, [sp]
   1055c:	vcvt.s32.f32	s15, s15
   10560:	vmov	r3, s15
   10564:	strh	r3, [r8], #2
   10568:	cmp	r8, r4
   1056c:	bne	10544 <ReadCompressedInt16Data+0x1b8>
   10570:	b	10444 <ReadCompressedInt16Data+0xb8>
   10574:	cmp	r9, #0
   10578:	ble	10444 <ReadCompressedInt16Data+0xb8>
   1057c:	mov	r8, r4
   10580:	add	r4, r4, r9, lsl #1
   10584:	mov	sl, sp
   10588:	mov	r3, r5
   1058c:	mov	r2, sl
   10590:	mov	r1, r7
   10594:	mov	r0, r6
   10598:	bl	3418 <InflateData>
   1059c:	mov	r0, sl
   105a0:	bl	1b38 <Mat_floatSwap>
   105a4:	vcvt.s32.f32	s15, s0
   105a8:	vmov	r3, s15
   105ac:	strh	r3, [r8], #2
   105b0:	cmp	r8, r4
   105b4:	bne	10588 <ReadCompressedInt16Data+0x1fc>
   105b8:	b	10444 <ReadCompressedInt16Data+0xb8>
   105bc:	ldr	r3, [r6, #20]
   105c0:	cmp	r3, #0
   105c4:	bne	10604 <ReadCompressedInt16Data+0x278>
   105c8:	cmp	r9, #0
   105cc:	movgt	r8, r4
   105d0:	addgt	r4, r4, r9, lsl #1
   105d4:	movgt	sl, sp
   105d8:	ble	10444 <ReadCompressedInt16Data+0xb8>
   105dc:	mov	r3, r5
   105e0:	mov	r2, sl
   105e4:	mov	r1, r7
   105e8:	mov	r0, r6
   105ec:	bl	3418 <InflateData>
   105f0:	ldr	r3, [sp]
   105f4:	strh	r3, [r8], #2
   105f8:	cmp	r4, r8
   105fc:	bne	105dc <ReadCompressedInt16Data+0x250>
   10600:	b	10444 <ReadCompressedInt16Data+0xb8>
   10604:	cmp	r9, #0
   10608:	ble	10444 <ReadCompressedInt16Data+0xb8>
   1060c:	mov	r8, r4
   10610:	add	r4, r4, r9, lsl #1
   10614:	mov	sl, sp
   10618:	mov	r3, r5
   1061c:	mov	r2, sl
   10620:	mov	r1, r7
   10624:	mov	r0, r6
   10628:	bl	3418 <InflateData>
   1062c:	mov	r0, sl
   10630:	bl	1a20 <Mat_int32Swap>
   10634:	strh	r0, [r8], #2
   10638:	cmp	r4, r8
   1063c:	bne	10618 <ReadCompressedInt16Data+0x28c>
   10640:	b	10444 <ReadCompressedInt16Data+0xb8>
   10644:	ldr	r3, [r6, #20]
   10648:	cmp	r3, #0
   1064c:	bne	1068c <ReadCompressedInt16Data+0x300>
   10650:	cmp	r9, #0
   10654:	movgt	r8, r4
   10658:	addgt	r4, r4, r9, lsl #1
   1065c:	movgt	sl, sp
   10660:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10664:	mov	r3, r5
   10668:	mov	r2, sl
   1066c:	mov	r1, r7
   10670:	mov	r0, r6
   10674:	bl	3418 <InflateData>
   10678:	ldr	r3, [sp]
   1067c:	strh	r3, [r8], #2
   10680:	cmp	r8, r4
   10684:	bne	10664 <ReadCompressedInt16Data+0x2d8>
   10688:	b	10444 <ReadCompressedInt16Data+0xb8>
   1068c:	cmp	r9, #0
   10690:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10694:	mov	r8, r4
   10698:	add	r4, r4, r9, lsl #1
   1069c:	mov	sl, sp
   106a0:	mov	r3, r5
   106a4:	mov	r2, sl
   106a8:	mov	r1, r7
   106ac:	mov	r0, r6
   106b0:	bl	3418 <InflateData>
   106b4:	mov	r0, sl
   106b8:	bl	1a88 <Mat_uint32Swap>
   106bc:	strh	r0, [r8], #2
   106c0:	cmp	r4, r8
   106c4:	bne	106a0 <ReadCompressedInt16Data+0x314>
   106c8:	b	10444 <ReadCompressedInt16Data+0xb8>
   106cc:	ldr	r3, [r6, #20]
   106d0:	cmp	r3, #0
   106d4:	bne	10714 <ReadCompressedInt16Data+0x388>
   106d8:	cmp	r9, #0
   106dc:	movgt	r8, r4
   106e0:	addgt	r4, r4, r9, lsl #1
   106e4:	movgt	sl, sp
   106e8:	ble	10444 <ReadCompressedInt16Data+0xb8>
   106ec:	mov	r3, r5
   106f0:	mov	r2, sl
   106f4:	mov	r1, r7
   106f8:	mov	r0, r6
   106fc:	bl	3418 <InflateData>
   10700:	ldrh	r3, [sp]
   10704:	strh	r3, [r8], #2
   10708:	cmp	r8, r4
   1070c:	bne	106ec <ReadCompressedInt16Data+0x360>
   10710:	b	10444 <ReadCompressedInt16Data+0xb8>
   10714:	cmp	r9, #0
   10718:	ble	10444 <ReadCompressedInt16Data+0xb8>
   1071c:	mov	r8, r4
   10720:	add	r4, r4, r9, lsl #1
   10724:	mov	sl, sp
   10728:	mov	r3, r5
   1072c:	mov	r2, sl
   10730:	mov	r1, r7
   10734:	mov	r0, r6
   10738:	bl	3418 <InflateData>
   1073c:	mov	r0, sl
   10740:	bl	1ae4 <Mat_int16Swap>
   10744:	strh	r0, [r8], #2
   10748:	cmp	r8, r4
   1074c:	bne	10728 <ReadCompressedInt16Data+0x39c>
   10750:	b	10444 <ReadCompressedInt16Data+0xb8>
   10754:	ldr	r3, [r6, #20]
   10758:	cmp	r3, #0
   1075c:	bne	1079c <ReadCompressedInt16Data+0x410>
   10760:	cmp	r9, #0
   10764:	movgt	r8, r4
   10768:	addgt	r4, r4, r9, lsl #1
   1076c:	movgt	sl, sp
   10770:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10774:	mov	r3, r5
   10778:	mov	r2, sl
   1077c:	mov	r1, r7
   10780:	mov	r0, r6
   10784:	bl	3418 <InflateData>
   10788:	ldrh	r3, [sp]
   1078c:	strh	r3, [r8], #2
   10790:	cmp	r4, r8
   10794:	bne	10774 <ReadCompressedInt16Data+0x3e8>
   10798:	b	10444 <ReadCompressedInt16Data+0xb8>
   1079c:	cmp	r9, #0
   107a0:	ble	10444 <ReadCompressedInt16Data+0xb8>
   107a4:	mov	r8, r4
   107a8:	add	r4, r4, r9, lsl #1
   107ac:	mov	sl, sp
   107b0:	mov	r3, r5
   107b4:	mov	r2, sl
   107b8:	mov	r1, r7
   107bc:	mov	r0, r6
   107c0:	bl	3418 <InflateData>
   107c4:	mov	r0, sl
   107c8:	bl	1b1c <Mat_uint16Swap>
   107cc:	strh	r0, [r8], #2
   107d0:	cmp	r8, r4
   107d4:	bne	107b0 <ReadCompressedInt16Data+0x424>
   107d8:	b	10444 <ReadCompressedInt16Data+0xb8>
   107dc:	cmp	r8, #12
   107e0:	beq	10834 <ReadCompressedInt16Data+0x4a8>
   107e4:	cmp	r8, #13
   107e8:	bne	10444 <ReadCompressedInt16Data+0xb8>
   107ec:	ldr	r3, [r6, #20]
   107f0:	cmp	r3, #0
   107f4:	bne	108bc <ReadCompressedInt16Data+0x530>
   107f8:	cmp	r9, #0
   107fc:	movgt	r8, r4
   10800:	addgt	r4, r4, r9, lsl #1
   10804:	movgt	sl, sp
   10808:	ble	10444 <ReadCompressedInt16Data+0xb8>
   1080c:	mov	r3, r5
   10810:	mov	r2, sl
   10814:	mov	r1, r7
   10818:	mov	r0, r6
   1081c:	bl	3418 <InflateData>
   10820:	ldr	r3, [sp]
   10824:	strh	r3, [r8], #2
   10828:	cmp	r8, r4
   1082c:	bne	1080c <ReadCompressedInt16Data+0x480>
   10830:	b	10444 <ReadCompressedInt16Data+0xb8>
   10834:	ldr	r3, [r6, #20]
   10838:	cmp	r3, #0
   1083c:	bne	1087c <ReadCompressedInt16Data+0x4f0>
   10840:	cmp	r9, #0
   10844:	movgt	r8, r4
   10848:	addgt	r4, r4, r9, lsl #1
   1084c:	movgt	sl, sp
   10850:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10854:	mov	r3, r5
   10858:	mov	r2, sl
   1085c:	mov	r1, r7
   10860:	mov	r0, r6
   10864:	bl	3418 <InflateData>
   10868:	ldr	r3, [sp]
   1086c:	strh	r3, [r8], #2
   10870:	cmp	r8, r4
   10874:	bne	10854 <ReadCompressedInt16Data+0x4c8>
   10878:	b	10444 <ReadCompressedInt16Data+0xb8>
   1087c:	cmp	r9, #0
   10880:	ble	10444 <ReadCompressedInt16Data+0xb8>
   10884:	mov	r8, r4
   10888:	add	r4, r4, r9, lsl #1
   1088c:	mov	sl, sp
   10890:	mov	r3, r5
   10894:	mov	r2, sl
   10898:	mov	r1, r7
   1089c:	mov	r0, r6
   108a0:	bl	3418 <InflateData>
   108a4:	mov	r0, sl
   108a8:	bl	18bc <Mat_int64Swap>
   108ac:	strh	r0, [r8], #2
   108b0:	cmp	r8, r4
   108b4:	bne	10890 <ReadCompressedInt16Data+0x504>
   108b8:	b	10444 <ReadCompressedInt16Data+0xb8>
   108bc:	cmp	r9, #0
   108c0:	ble	10444 <ReadCompressedInt16Data+0xb8>
   108c4:	mov	r8, r4
   108c8:	add	r4, r4, r9, lsl #1
   108cc:	mov	sl, sp
   108d0:	mov	r3, r5
   108d4:	mov	r2, sl
   108d8:	mov	r1, r7
   108dc:	mov	r0, r6
   108e0:	bl	3418 <InflateData>
   108e4:	mov	r0, sl
   108e8:	bl	1984 <Mat_uint64Swap>
   108ec:	strh	r0, [r8], #2
   108f0:	cmp	r8, r4
   108f4:	bne	108d0 <ReadCompressedInt16Data+0x544>
   108f8:	b	10444 <ReadCompressedInt16Data+0xb8>

000108fc <ReadUInt16Data>:
   108fc:	cmp	r1, #0
   10900:	cmpne	r0, #0
   10904:	beq	11edc <ReadUInt16Data+0x15e0>
   10908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1090c:	sub	sp, sp, #2064	; 0x810
   10910:	sub	sp, sp, #4
   10914:	mov	r9, r0
   10918:	mov	ip, r1
   1091c:	ldr	r1, [r0]
   10920:	cmp	r1, #0
   10924:	moveq	r0, #0
   10928:	beq	11858 <ReadUInt16Data+0xf5c>
   1092c:	str	ip, [sp, #4]
   10930:	mov	r7, r3
   10934:	mov	r4, r2
   10938:	mov	r0, r2
   1093c:	bl	1600 <Mat_SizeOf@plt>
   10940:	str	r0, [sp]
   10944:	sub	r3, r4, #1
   10948:	cmp	r3, #8
   1094c:	addls	pc, pc, r3, lsl #2
   10950:	b	11a20 <ReadUInt16Data+0x1124>
   10954:	b	117d4 <ReadUInt16Data+0xed8>
   10958:	b	11904 <ReadUInt16Data+0x1008>
   1095c:	b	1131c <ReadUInt16Data+0xa20>
   10960:	b	11578 <ReadUInt16Data+0xc7c>
   10964:	b	10e6c <ReadUInt16Data+0x570>
   10968:	b	110c4 <ReadUInt16Data+0x7c8>
   1096c:	b	10bf4 <ReadUInt16Data+0x2f8>
   10970:	b	11a20 <ReadUInt16Data+0x1124>
   10974:	b	10978 <ReadUInt16Data+0x7c>
   10978:	ldr	r8, [r9, #20]
   1097c:	cmp	r8, #0
   10980:	beq	10ad4 <ReadUInt16Data+0x1d8>
   10984:	cmp	r7, #256	; 0x100
   10988:	ble	10a80 <ReadUInt16Data+0x184>
   1098c:	sub	r3, r7, #256	; 0x100
   10990:	mov	r2, r3
   10994:	cmp	r3, #0
   10998:	movle	sl, #0
   1099c:	movle	r8, sl
   109a0:	ble	10a1c <ReadUInt16Data+0x120>
   109a4:	ldr	r3, [sp, #4]
   109a8:	sub	fp, r3, #2
   109ac:	mov	sl, #0
   109b0:	mov	r8, sl
   109b4:	add	r3, sp, #16
   109b8:	str	r3, [sp, #8]
   109bc:	str	r7, [sp, #12]
   109c0:	mov	r7, r2
   109c4:	ldr	r3, [r9]
   109c8:	mov	r2, #256	; 0x100
   109cc:	ldr	r1, [sp]
   109d0:	ldr	r4, [sp, #8]
   109d4:	mov	r0, r4
   109d8:	bl	1588 <fread@plt>
   109dc:	add	r8, r8, r0
   109e0:	add	r6, sp, #2064	; 0x810
   109e4:	mov	r5, fp
   109e8:	mov	r0, r4
   109ec:	bl	1b94 <Mat_doubleSwap>
   109f0:	vcvt.u32.f64	s15, d0
   109f4:	vmov	r3, s15
   109f8:	strh	r3, [r5, #2]!
   109fc:	add	r4, r4, #8
   10a00:	cmp	r4, r6
   10a04:	bne	109e8 <ReadUInt16Data+0xec>
   10a08:	add	sl, sl, #256	; 0x100
   10a0c:	add	fp, fp, #512	; 0x200
   10a10:	cmp	sl, r7
   10a14:	blt	109c4 <ReadUInt16Data+0xc8>
   10a18:	ldr	r7, [sp, #12]
   10a1c:	cmp	r7, sl
   10a20:	ble	11850 <ReadUInt16Data+0xf54>
   10a24:	sub	r7, r7, sl
   10a28:	ldr	r3, [r9]
   10a2c:	mov	r2, r7
   10a30:	ldr	r1, [sp]
   10a34:	add	r0, sp, #16
   10a38:	bl	1588 <fread@plt>
   10a3c:	add	r8, r8, r0
   10a40:	cmp	r7, #0
   10a44:	ble	11850 <ReadUInt16Data+0xf54>
   10a48:	add	r6, sp, #16
   10a4c:	ldr	r3, [sp, #4]
   10a50:	add	r5, r3, sl, lsl #1
   10a54:	add	r7, r7, sl
   10a58:	add	r7, r3, r7, lsl #1
   10a5c:	mov	r0, r6
   10a60:	bl	1b94 <Mat_doubleSwap>
   10a64:	vcvt.u32.f64	s15, d0
   10a68:	vmov	r3, s15
   10a6c:	strh	r3, [r5], #2
   10a70:	add	r6, r6, #8
   10a74:	cmp	r5, r7
   10a78:	bne	10a5c <ReadUInt16Data+0x160>
   10a7c:	b	11850 <ReadUInt16Data+0xf54>
   10a80:	ldr	r3, [r9]
   10a84:	mov	r2, r7
   10a88:	ldr	r1, [sp]
   10a8c:	add	r0, sp, #16
   10a90:	bl	1588 <fread@plt>
   10a94:	mov	r8, r0
   10a98:	cmp	r7, #0
   10a9c:	ble	11850 <ReadUInt16Data+0xf54>
   10aa0:	add	r5, sp, #16
   10aa4:	ldr	r3, [sp, #4]
   10aa8:	mov	r4, r3
   10aac:	add	r7, r3, r7, lsl #1
   10ab0:	mov	r0, r5
   10ab4:	bl	1b94 <Mat_doubleSwap>
   10ab8:	vcvt.u32.f64	s15, d0
   10abc:	vmov	r3, s15
   10ac0:	strh	r3, [r4], #2
   10ac4:	add	r5, r5, #8
   10ac8:	cmp	r4, r7
   10acc:	bne	10ab0 <ReadUInt16Data+0x1b4>
   10ad0:	b	11850 <ReadUInt16Data+0xf54>
   10ad4:	cmp	r7, #256	; 0x100
   10ad8:	ble	10ba8 <ReadUInt16Data+0x2ac>
   10adc:	sub	sl, r7, #256	; 0x100
   10ae0:	cmp	sl, #0
   10ae4:	movle	r4, r8
   10ae8:	ble	10b4c <ReadUInt16Data+0x250>
   10aec:	ldr	r3, [sp, #4]
   10af0:	sub	r5, r3, #2
   10af4:	mov	r4, r8
   10af8:	add	r6, sp, #16
   10afc:	mov	fp, #256	; 0x100
   10b00:	ldr	r3, [r9]
   10b04:	mov	r2, fp
   10b08:	ldr	r1, [sp]
   10b0c:	mov	r0, r6
   10b10:	bl	1588 <fread@plt>
   10b14:	add	r8, r8, r0
   10b18:	mov	r2, r6
   10b1c:	add	r0, sp, #2064	; 0x810
   10b20:	mov	r1, r5
   10b24:	vldmia	r2!, {d7}
   10b28:	vcvt.u32.f64	s15, d7
   10b2c:	vmov	r3, s15
   10b30:	strh	r3, [r1, #2]!
   10b34:	cmp	r2, r0
   10b38:	bne	10b24 <ReadUInt16Data+0x228>
   10b3c:	add	r4, r4, #256	; 0x100
   10b40:	add	r5, r5, #512	; 0x200
   10b44:	cmp	r4, sl
   10b48:	blt	10b00 <ReadUInt16Data+0x204>
   10b4c:	cmp	r7, r4
   10b50:	ble	11850 <ReadUInt16Data+0xf54>
   10b54:	sub	r7, r7, r4
   10b58:	ldr	r3, [r9]
   10b5c:	mov	r2, r7
   10b60:	ldr	r1, [sp]
   10b64:	add	r0, sp, #16
   10b68:	bl	1588 <fread@plt>
   10b6c:	add	r8, r8, r0
   10b70:	cmp	r7, #0
   10b74:	ble	11850 <ReadUInt16Data+0xf54>
   10b78:	add	r1, sp, #16
   10b7c:	sub	r2, r4, #-2147483647	; 0x80000001
   10b80:	ldr	r3, [sp, #4]
   10b84:	add	r2, r3, r2, lsl #1
   10b88:	add	r7, r1, r7, lsl #3
   10b8c:	vldmia	r1!, {d7}
   10b90:	vcvt.u32.f64	s15, d7
   10b94:	vmov	r3, s15
   10b98:	strh	r3, [r2, #2]!
   10b9c:	cmp	r1, r7
   10ba0:	bne	10b8c <ReadUInt16Data+0x290>
   10ba4:	b	11850 <ReadUInt16Data+0xf54>
   10ba8:	ldr	r3, [r9]
   10bac:	mov	r2, r7
   10bb0:	ldr	r1, [sp]
   10bb4:	add	r0, sp, #16
   10bb8:	bl	1588 <fread@plt>
   10bbc:	mov	r8, r0
   10bc0:	cmp	r7, #0
   10bc4:	ble	11850 <ReadUInt16Data+0xf54>
   10bc8:	add	r2, sp, #16
   10bcc:	ldr	r3, [sp, #4]
   10bd0:	sub	r1, r3, #2
   10bd4:	add	r7, r2, r7, lsl #3
   10bd8:	vldmia	r2!, {d7}
   10bdc:	vcvt.u32.f64	s15, d7
   10be0:	vmov	r3, s15
   10be4:	strh	r3, [r1, #2]!
   10be8:	cmp	r2, r7
   10bec:	bne	10bd8 <ReadUInt16Data+0x2dc>
   10bf0:	b	11850 <ReadUInt16Data+0xf54>
   10bf4:	ldr	r8, [r9, #20]
   10bf8:	cmp	r8, #0
   10bfc:	beq	10d50 <ReadUInt16Data+0x454>
   10c00:	cmp	r7, #256	; 0x100
   10c04:	ble	10cfc <ReadUInt16Data+0x400>
   10c08:	sub	r3, r7, #256	; 0x100
   10c0c:	mov	r2, r3
   10c10:	cmp	r3, #0
   10c14:	movle	sl, #0
   10c18:	movle	r8, sl
   10c1c:	ble	10c98 <ReadUInt16Data+0x39c>
   10c20:	ldr	r3, [sp, #4]
   10c24:	sub	fp, r3, #2
   10c28:	mov	sl, #0
   10c2c:	mov	r8, sl
   10c30:	add	r3, sp, #16
   10c34:	str	r3, [sp, #8]
   10c38:	add	r6, sp, #1040	; 0x410
   10c3c:	str	r7, [sp, #12]
   10c40:	mov	r7, r2
   10c44:	ldr	r3, [r9]
   10c48:	mov	r2, #256	; 0x100
   10c4c:	ldr	r1, [sp]
   10c50:	ldr	r4, [sp, #8]
   10c54:	mov	r0, r4
   10c58:	bl	1588 <fread@plt>
   10c5c:	add	r8, r8, r0
   10c60:	mov	r5, fp
   10c64:	mov	r0, r4
   10c68:	bl	1b38 <Mat_floatSwap>
   10c6c:	vcvt.u32.f32	s15, s0
   10c70:	vmov	r3, s15
   10c74:	strh	r3, [r5, #2]!
   10c78:	add	r4, r4, #4
   10c7c:	cmp	r4, r6
   10c80:	bne	10c64 <ReadUInt16Data+0x368>
   10c84:	add	sl, sl, #256	; 0x100
   10c88:	add	fp, fp, #512	; 0x200
   10c8c:	cmp	sl, r7
   10c90:	blt	10c44 <ReadUInt16Data+0x348>
   10c94:	ldr	r7, [sp, #12]
   10c98:	cmp	r7, sl
   10c9c:	ble	11850 <ReadUInt16Data+0xf54>
   10ca0:	sub	r7, r7, sl
   10ca4:	ldr	r3, [r9]
   10ca8:	mov	r2, r7
   10cac:	ldr	r1, [sp]
   10cb0:	add	r0, sp, #16
   10cb4:	bl	1588 <fread@plt>
   10cb8:	add	r8, r8, r0
   10cbc:	cmp	r7, #0
   10cc0:	ble	11850 <ReadUInt16Data+0xf54>
   10cc4:	add	r6, sp, #16
   10cc8:	ldr	r3, [sp, #4]
   10ccc:	add	r5, r3, sl, lsl #1
   10cd0:	add	r7, r7, sl
   10cd4:	add	r7, r3, r7, lsl #1
   10cd8:	mov	r0, r6
   10cdc:	bl	1b38 <Mat_floatSwap>
   10ce0:	vcvt.u32.f32	s15, s0
   10ce4:	vmov	r3, s15
   10ce8:	strh	r3, [r5], #2
   10cec:	add	r6, r6, #4
   10cf0:	cmp	r5, r7
   10cf4:	bne	10cd8 <ReadUInt16Data+0x3dc>
   10cf8:	b	11850 <ReadUInt16Data+0xf54>
   10cfc:	ldr	r3, [r9]
   10d00:	mov	r2, r7
   10d04:	ldr	r1, [sp]
   10d08:	add	r0, sp, #16
   10d0c:	bl	1588 <fread@plt>
   10d10:	mov	r8, r0
   10d14:	cmp	r7, #0
   10d18:	ble	11850 <ReadUInt16Data+0xf54>
   10d1c:	add	r5, sp, #16
   10d20:	ldr	r3, [sp, #4]
   10d24:	mov	r4, r3
   10d28:	add	r7, r3, r7, lsl #1
   10d2c:	mov	r0, r5
   10d30:	bl	1b38 <Mat_floatSwap>
   10d34:	vcvt.u32.f32	s15, s0
   10d38:	vmov	r3, s15
   10d3c:	strh	r3, [r4], #2
   10d40:	add	r5, r5, #4
   10d44:	cmp	r4, r7
   10d48:	bne	10d2c <ReadUInt16Data+0x430>
   10d4c:	b	11850 <ReadUInt16Data+0xf54>
   10d50:	cmp	r7, #256	; 0x100
   10d54:	ble	10e20 <ReadUInt16Data+0x524>
   10d58:	sub	sl, r7, #256	; 0x100
   10d5c:	cmp	sl, #0
   10d60:	movle	r5, r8
   10d64:	ble	10dc4 <ReadUInt16Data+0x4c8>
   10d68:	ldr	r3, [sp, #4]
   10d6c:	sub	r6, r3, #2
   10d70:	mov	r5, r8
   10d74:	add	fp, sp, #16
   10d78:	add	r4, sp, #1040	; 0x410
   10d7c:	ldr	r3, [r9]
   10d80:	mov	r2, #256	; 0x100
   10d84:	ldr	r1, [sp]
   10d88:	mov	r0, fp
   10d8c:	bl	1588 <fread@plt>
   10d90:	add	r8, r8, r0
   10d94:	mov	r2, fp
   10d98:	mov	r1, r6
   10d9c:	vldmia	r2!, {s15}
   10da0:	vcvt.u32.f32	s15, s15
   10da4:	vmov	r3, s15
   10da8:	strh	r3, [r1, #2]!
   10dac:	cmp	r2, r4
   10db0:	bne	10d9c <ReadUInt16Data+0x4a0>
   10db4:	add	r5, r5, #256	; 0x100
   10db8:	add	r6, r6, #512	; 0x200
   10dbc:	cmp	r5, sl
   10dc0:	blt	10d7c <ReadUInt16Data+0x480>
   10dc4:	cmp	r7, r5
   10dc8:	ble	11850 <ReadUInt16Data+0xf54>
   10dcc:	sub	r7, r7, r5
   10dd0:	ldr	r3, [r9]
   10dd4:	mov	r2, r7
   10dd8:	ldr	r1, [sp]
   10ddc:	add	r0, sp, #16
   10de0:	bl	1588 <fread@plt>
   10de4:	add	r8, r8, r0
   10de8:	cmp	r7, #0
   10dec:	ble	11850 <ReadUInt16Data+0xf54>
   10df0:	add	r1, sp, #16
   10df4:	sub	r2, r5, #-2147483647	; 0x80000001
   10df8:	ldr	r3, [sp, #4]
   10dfc:	add	r2, r3, r2, lsl #1
   10e00:	add	r7, r1, r7, lsl #2
   10e04:	vldmia	r1!, {s15}
   10e08:	vcvt.u32.f32	s15, s15
   10e0c:	vmov	r3, s15
   10e10:	strh	r3, [r2, #2]!
   10e14:	cmp	r1, r7
   10e18:	bne	10e04 <ReadUInt16Data+0x508>
   10e1c:	b	11850 <ReadUInt16Data+0xf54>
   10e20:	ldr	r3, [r9]
   10e24:	mov	r2, r7
   10e28:	ldr	r1, [sp]
   10e2c:	add	r0, sp, #16
   10e30:	bl	1588 <fread@plt>
   10e34:	mov	r8, r0
   10e38:	cmp	r7, #0
   10e3c:	ble	11850 <ReadUInt16Data+0xf54>
   10e40:	add	r2, sp, #16
   10e44:	ldr	r3, [sp, #4]
   10e48:	sub	r1, r3, #2
   10e4c:	add	r7, r2, r7, lsl #2
   10e50:	vldmia	r2!, {s15}
   10e54:	vcvt.u32.f32	s15, s15
   10e58:	vmov	r3, s15
   10e5c:	strh	r3, [r1, #2]!
   10e60:	cmp	r2, r7
   10e64:	bne	10e50 <ReadUInt16Data+0x554>
   10e68:	b	11850 <ReadUInt16Data+0xf54>
   10e6c:	ldr	r8, [r9, #20]
   10e70:	cmp	r8, #0
   10e74:	beq	10fb0 <ReadUInt16Data+0x6b4>
   10e78:	cmp	r7, #256	; 0x100
   10e7c:	ble	10f64 <ReadUInt16Data+0x668>
   10e80:	sub	r3, r7, #256	; 0x100
   10e84:	mov	r2, r3
   10e88:	cmp	r3, #0
   10e8c:	movle	sl, #0
   10e90:	movle	r8, sl
   10e94:	ble	10f08 <ReadUInt16Data+0x60c>
   10e98:	ldr	r3, [sp, #4]
   10e9c:	sub	fp, r3, #2
   10ea0:	mov	sl, #0
   10ea4:	mov	r8, sl
   10ea8:	add	r3, sp, #16
   10eac:	str	r3, [sp, #8]
   10eb0:	add	r6, sp, #1040	; 0x410
   10eb4:	str	r7, [sp, #12]
   10eb8:	mov	r7, r2
   10ebc:	ldr	r3, [r9]
   10ec0:	mov	r2, #256	; 0x100
   10ec4:	ldr	r1, [sp]
   10ec8:	ldr	r4, [sp, #8]
   10ecc:	mov	r0, r4
   10ed0:	bl	1588 <fread@plt>
   10ed4:	add	r8, r8, r0
   10ed8:	mov	r5, fp
   10edc:	mov	r0, r4
   10ee0:	bl	1a20 <Mat_int32Swap>
   10ee4:	strh	r0, [r5, #2]!
   10ee8:	add	r4, r4, #4
   10eec:	cmp	r4, r6
   10ef0:	bne	10edc <ReadUInt16Data+0x5e0>
   10ef4:	add	sl, sl, #256	; 0x100
   10ef8:	add	fp, fp, #512	; 0x200
   10efc:	cmp	sl, r7
   10f00:	blt	10ebc <ReadUInt16Data+0x5c0>
   10f04:	ldr	r7, [sp, #12]
   10f08:	cmp	r7, sl
   10f0c:	ble	11850 <ReadUInt16Data+0xf54>
   10f10:	sub	r7, r7, sl
   10f14:	ldr	r3, [r9]
   10f18:	mov	r2, r7
   10f1c:	ldr	r1, [sp]
   10f20:	add	r0, sp, #16
   10f24:	bl	1588 <fread@plt>
   10f28:	add	r8, r8, r0
   10f2c:	cmp	r7, #0
   10f30:	ble	11850 <ReadUInt16Data+0xf54>
   10f34:	add	r6, sp, #16
   10f38:	ldr	r3, [sp, #4]
   10f3c:	add	r5, r3, sl, lsl #1
   10f40:	add	r7, r7, sl
   10f44:	add	r7, r3, r7, lsl #1
   10f48:	mov	r0, r6
   10f4c:	bl	1a20 <Mat_int32Swap>
   10f50:	strh	r0, [r5], #2
   10f54:	add	r6, r6, #4
   10f58:	cmp	r5, r7
   10f5c:	bne	10f48 <ReadUInt16Data+0x64c>
   10f60:	b	11850 <ReadUInt16Data+0xf54>
   10f64:	ldr	r3, [r9]
   10f68:	mov	r2, r7
   10f6c:	ldr	r1, [sp]
   10f70:	add	r0, sp, #16
   10f74:	bl	1588 <fread@plt>
   10f78:	mov	r8, r0
   10f7c:	cmp	r7, #0
   10f80:	ble	11850 <ReadUInt16Data+0xf54>
   10f84:	add	r5, sp, #16
   10f88:	ldr	r3, [sp, #4]
   10f8c:	mov	r4, r3
   10f90:	add	r7, r3, r7, lsl #1
   10f94:	mov	r0, r5
   10f98:	bl	1a20 <Mat_int32Swap>
   10f9c:	strh	r0, [r4], #2
   10fa0:	add	r5, r5, #4
   10fa4:	cmp	r4, r7
   10fa8:	bne	10f94 <ReadUInt16Data+0x698>
   10fac:	b	11850 <ReadUInt16Data+0xf54>
   10fb0:	cmp	r7, #256	; 0x100
   10fb4:	ble	11078 <ReadUInt16Data+0x77c>
   10fb8:	sub	fp, r7, #256	; 0x100
   10fbc:	cmp	fp, #0
   10fc0:	movle	r5, r8
   10fc4:	ble	1101c <ReadUInt16Data+0x720>
   10fc8:	ldr	r3, [sp, #4]
   10fcc:	sub	r6, r3, #2
   10fd0:	mov	r5, r8
   10fd4:	add	sl, sp, #16
   10fd8:	add	r4, sl, #1020	; 0x3fc
   10fdc:	ldr	r3, [r9]
   10fe0:	mov	r2, #256	; 0x100
   10fe4:	ldr	r1, [sp]
   10fe8:	mov	r0, sl
   10fec:	bl	1588 <fread@plt>
   10ff0:	add	r8, r8, r0
   10ff4:	sub	r3, sl, #4
   10ff8:	mov	r2, r6
   10ffc:	ldr	r1, [r3, #4]!
   11000:	strh	r1, [r2, #2]!
   11004:	cmp	r3, r4
   11008:	bne	10ffc <ReadUInt16Data+0x700>
   1100c:	add	r5, r5, #256	; 0x100
   11010:	add	r6, r6, #512	; 0x200
   11014:	cmp	r5, fp
   11018:	blt	10fdc <ReadUInt16Data+0x6e0>
   1101c:	cmp	r7, r5
   11020:	ble	11850 <ReadUInt16Data+0xf54>
   11024:	sub	r7, r7, r5
   11028:	ldr	r3, [r9]
   1102c:	mov	r2, r7
   11030:	ldr	r1, [sp]
   11034:	add	r0, sp, #16
   11038:	bl	1588 <fread@plt>
   1103c:	add	r8, r8, r0
   11040:	cmp	r7, #0
   11044:	ble	11850 <ReadUInt16Data+0xf54>
   11048:	add	r0, sp, #16
   1104c:	add	r2, sp, #12
   11050:	sub	r3, r5, #-2147483647	; 0x80000001
   11054:	ldr	r1, [sp, #4]
   11058:	add	r3, r1, r3, lsl #1
   1105c:	sub	r7, r7, #-1073741823	; 0xc0000001
   11060:	add	r0, r0, r7, lsl #2
   11064:	ldr	r1, [r2, #4]!
   11068:	strh	r1, [r3, #2]!
   1106c:	cmp	r2, r0
   11070:	bne	11064 <ReadUInt16Data+0x768>
   11074:	b	11850 <ReadUInt16Data+0xf54>
   11078:	ldr	r3, [r9]
   1107c:	mov	r2, r7
   11080:	ldr	r1, [sp]
   11084:	add	r0, sp, #16
   11088:	bl	1588 <fread@plt>
   1108c:	mov	r8, r0
   11090:	cmp	r7, #0
   11094:	ble	11850 <ReadUInt16Data+0xf54>
   11098:	add	r0, sp, #16
   1109c:	add	r3, sp, #12
   110a0:	ldr	r2, [sp, #4]
   110a4:	sub	r2, r2, #2
   110a8:	sub	r7, r7, #-1073741823	; 0xc0000001
   110ac:	add	r0, r0, r7, lsl #2
   110b0:	ldr	r1, [r3, #4]!
   110b4:	strh	r1, [r2, #2]!
   110b8:	cmp	r3, r0
   110bc:	bne	110b0 <ReadUInt16Data+0x7b4>
   110c0:	b	11850 <ReadUInt16Data+0xf54>
   110c4:	ldr	r8, [r9, #20]
   110c8:	cmp	r8, #0
   110cc:	beq	11208 <ReadUInt16Data+0x90c>
   110d0:	cmp	r7, #256	; 0x100
   110d4:	ble	111bc <ReadUInt16Data+0x8c0>
   110d8:	sub	r3, r7, #256	; 0x100
   110dc:	mov	r2, r3
   110e0:	cmp	r3, #0
   110e4:	movle	sl, #0
   110e8:	movle	r8, sl
   110ec:	ble	11160 <ReadUInt16Data+0x864>
   110f0:	ldr	r3, [sp, #4]
   110f4:	sub	fp, r3, #2
   110f8:	mov	sl, #0
   110fc:	mov	r8, sl
   11100:	add	r3, sp, #16
   11104:	str	r3, [sp, #8]
   11108:	add	r6, sp, #1040	; 0x410
   1110c:	str	r7, [sp, #12]
   11110:	mov	r7, r2
   11114:	ldr	r3, [r9]
   11118:	mov	r2, #256	; 0x100
   1111c:	ldr	r1, [sp]
   11120:	ldr	r4, [sp, #8]
   11124:	mov	r0, r4
   11128:	bl	1588 <fread@plt>
   1112c:	add	r8, r8, r0
   11130:	mov	r5, fp
   11134:	mov	r0, r4
   11138:	bl	1a88 <Mat_uint32Swap>
   1113c:	strh	r0, [r5, #2]!
   11140:	add	r4, r4, #4
   11144:	cmp	r4, r6
   11148:	bne	11134 <ReadUInt16Data+0x838>
   1114c:	add	sl, sl, #256	; 0x100
   11150:	add	fp, fp, #512	; 0x200
   11154:	cmp	sl, r7
   11158:	blt	11114 <ReadUInt16Data+0x818>
   1115c:	ldr	r7, [sp, #12]
   11160:	cmp	r7, sl
   11164:	ble	11850 <ReadUInt16Data+0xf54>
   11168:	sub	r7, r7, sl
   1116c:	ldr	r3, [r9]
   11170:	mov	r2, r7
   11174:	ldr	r1, [sp]
   11178:	add	r0, sp, #16
   1117c:	bl	1588 <fread@plt>
   11180:	add	r8, r8, r0
   11184:	cmp	r7, #0
   11188:	ble	11850 <ReadUInt16Data+0xf54>
   1118c:	add	r6, sp, #16
   11190:	ldr	r3, [sp, #4]
   11194:	add	r5, r3, sl, lsl #1
   11198:	add	r7, r7, sl
   1119c:	add	r7, r3, r7, lsl #1
   111a0:	mov	r0, r6
   111a4:	bl	1a88 <Mat_uint32Swap>
   111a8:	strh	r0, [r5], #2
   111ac:	add	r6, r6, #4
   111b0:	cmp	r5, r7
   111b4:	bne	111a0 <ReadUInt16Data+0x8a4>
   111b8:	b	11850 <ReadUInt16Data+0xf54>
   111bc:	ldr	r3, [r9]
   111c0:	mov	r2, r7
   111c4:	ldr	r1, [sp]
   111c8:	add	r0, sp, #16
   111cc:	bl	1588 <fread@plt>
   111d0:	mov	r8, r0
   111d4:	cmp	r7, #0
   111d8:	ble	11850 <ReadUInt16Data+0xf54>
   111dc:	add	r5, sp, #16
   111e0:	ldr	r3, [sp, #4]
   111e4:	mov	r4, r3
   111e8:	add	r7, r3, r7, lsl #1
   111ec:	mov	r0, r5
   111f0:	bl	1a88 <Mat_uint32Swap>
   111f4:	strh	r0, [r4], #2
   111f8:	add	r5, r5, #4
   111fc:	cmp	r4, r7
   11200:	bne	111ec <ReadUInt16Data+0x8f0>
   11204:	b	11850 <ReadUInt16Data+0xf54>
   11208:	cmp	r7, #256	; 0x100
   1120c:	ble	112d0 <ReadUInt16Data+0x9d4>
   11210:	sub	fp, r7, #256	; 0x100
   11214:	cmp	fp, #0
   11218:	movle	r5, r8
   1121c:	ble	11274 <ReadUInt16Data+0x978>
   11220:	ldr	r3, [sp, #4]
   11224:	sub	r6, r3, #2
   11228:	mov	r5, r8
   1122c:	add	sl, sp, #16
   11230:	add	r4, sl, #1020	; 0x3fc
   11234:	ldr	r3, [r9]
   11238:	mov	r2, #256	; 0x100
   1123c:	ldr	r1, [sp]
   11240:	mov	r0, sl
   11244:	bl	1588 <fread@plt>
   11248:	add	r8, r8, r0
   1124c:	sub	r3, sl, #4
   11250:	mov	r2, r6
   11254:	ldr	r1, [r3, #4]!
   11258:	strh	r1, [r2, #2]!
   1125c:	cmp	r3, r4
   11260:	bne	11254 <ReadUInt16Data+0x958>
   11264:	add	r5, r5, #256	; 0x100
   11268:	add	r6, r6, #512	; 0x200
   1126c:	cmp	r5, fp
   11270:	blt	11234 <ReadUInt16Data+0x938>
   11274:	cmp	r7, r5
   11278:	ble	11850 <ReadUInt16Data+0xf54>
   1127c:	sub	r7, r7, r5
   11280:	ldr	r3, [r9]
   11284:	mov	r2, r7
   11288:	ldr	r1, [sp]
   1128c:	add	r0, sp, #16
   11290:	bl	1588 <fread@plt>
   11294:	add	r8, r8, r0
   11298:	cmp	r7, #0
   1129c:	ble	11850 <ReadUInt16Data+0xf54>
   112a0:	add	r0, sp, #16
   112a4:	add	r2, sp, #12
   112a8:	sub	r3, r5, #-2147483647	; 0x80000001
   112ac:	ldr	r1, [sp, #4]
   112b0:	add	r3, r1, r3, lsl #1
   112b4:	sub	r7, r7, #-1073741823	; 0xc0000001
   112b8:	add	r0, r0, r7, lsl #2
   112bc:	ldr	r1, [r2, #4]!
   112c0:	strh	r1, [r3, #2]!
   112c4:	cmp	r2, r0
   112c8:	bne	112bc <ReadUInt16Data+0x9c0>
   112cc:	b	11850 <ReadUInt16Data+0xf54>
   112d0:	ldr	r3, [r9]
   112d4:	mov	r2, r7
   112d8:	ldr	r1, [sp]
   112dc:	add	r0, sp, #16
   112e0:	bl	1588 <fread@plt>
   112e4:	mov	r8, r0
   112e8:	cmp	r7, #0
   112ec:	ble	11850 <ReadUInt16Data+0xf54>
   112f0:	add	r0, sp, #16
   112f4:	add	r3, sp, #12
   112f8:	ldr	r2, [sp, #4]
   112fc:	sub	r2, r2, #2
   11300:	sub	r7, r7, #-1073741823	; 0xc0000001
   11304:	add	r0, r0, r7, lsl #2
   11308:	ldr	r1, [r3, #4]!
   1130c:	strh	r1, [r2, #2]!
   11310:	cmp	r3, r0
   11314:	bne	11308 <ReadUInt16Data+0xa0c>
   11318:	b	11850 <ReadUInt16Data+0xf54>
   1131c:	ldr	r8, [r9, #20]
   11320:	cmp	r8, #0
   11324:	beq	11460 <ReadUInt16Data+0xb64>
   11328:	cmp	r7, #256	; 0x100
   1132c:	ble	11414 <ReadUInt16Data+0xb18>
   11330:	sub	r3, r7, #256	; 0x100
   11334:	mov	r2, r3
   11338:	cmp	r3, #0
   1133c:	movle	sl, #0
   11340:	movle	r8, sl
   11344:	ble	113b8 <ReadUInt16Data+0xabc>
   11348:	ldr	r3, [sp, #4]
   1134c:	sub	fp, r3, #2
   11350:	mov	sl, #0
   11354:	mov	r8, sl
   11358:	add	r3, sp, #16
   1135c:	str	r3, [sp, #8]
   11360:	add	r6, sp, #528	; 0x210
   11364:	str	r7, [sp, #12]
   11368:	mov	r7, r2
   1136c:	ldr	r3, [r9]
   11370:	mov	r2, #256	; 0x100
   11374:	ldr	r1, [sp]
   11378:	ldr	r4, [sp, #8]
   1137c:	mov	r0, r4
   11380:	bl	1588 <fread@plt>
   11384:	add	r8, r8, r0
   11388:	mov	r5, fp
   1138c:	mov	r0, r4
   11390:	bl	1ae4 <Mat_int16Swap>
   11394:	strh	r0, [r5, #2]!
   11398:	add	r4, r4, #2
   1139c:	cmp	r4, r6
   113a0:	bne	1138c <ReadUInt16Data+0xa90>
   113a4:	add	sl, sl, #256	; 0x100
   113a8:	add	fp, fp, #512	; 0x200
   113ac:	cmp	sl, r7
   113b0:	blt	1136c <ReadUInt16Data+0xa70>
   113b4:	ldr	r7, [sp, #12]
   113b8:	cmp	r7, sl
   113bc:	ble	11850 <ReadUInt16Data+0xf54>
   113c0:	sub	r7, r7, sl
   113c4:	ldr	r3, [r9]
   113c8:	mov	r2, r7
   113cc:	ldr	r1, [sp]
   113d0:	add	r0, sp, #16
   113d4:	bl	1588 <fread@plt>
   113d8:	add	r8, r8, r0
   113dc:	cmp	r7, #0
   113e0:	ble	11850 <ReadUInt16Data+0xf54>
   113e4:	add	r6, sp, #16
   113e8:	ldr	r3, [sp, #4]
   113ec:	add	r5, r3, sl, lsl #1
   113f0:	add	r7, r7, sl
   113f4:	add	r7, r3, r7, lsl #1
   113f8:	mov	r0, r6
   113fc:	bl	1ae4 <Mat_int16Swap>
   11400:	strh	r0, [r5], #2
   11404:	add	r6, r6, #2
   11408:	cmp	r5, r7
   1140c:	bne	113f8 <ReadUInt16Data+0xafc>
   11410:	b	11850 <ReadUInt16Data+0xf54>
   11414:	ldr	r3, [r9]
   11418:	mov	r2, r7
   1141c:	ldr	r1, [sp]
   11420:	add	r0, sp, #16
   11424:	bl	1588 <fread@plt>
   11428:	mov	r8, r0
   1142c:	cmp	r7, #0
   11430:	ble	11850 <ReadUInt16Data+0xf54>
   11434:	add	r5, sp, #16
   11438:	ldr	r3, [sp, #4]
   1143c:	mov	r4, r3
   11440:	add	r7, r3, r7, lsl #1
   11444:	mov	r0, r5
   11448:	bl	1ae4 <Mat_int16Swap>
   1144c:	strh	r0, [r4], #2
   11450:	add	r5, r5, #2
   11454:	cmp	r4, r7
   11458:	bne	11444 <ReadUInt16Data+0xb48>
   1145c:	b	11850 <ReadUInt16Data+0xf54>
   11460:	cmp	r7, #256	; 0x100
   11464:	ble	1152c <ReadUInt16Data+0xc30>
   11468:	sub	fp, r7, #256	; 0x100
   1146c:	cmp	fp, #0
   11470:	movle	r5, r8
   11474:	ble	114d0 <ReadUInt16Data+0xbd4>
   11478:	ldr	r3, [sp, #4]
   1147c:	sub	r6, r3, #2
   11480:	mov	r5, r8
   11484:	add	sl, sp, #16
   11488:	add	r4, sl, #508	; 0x1fc
   1148c:	add	r4, r4, #2
   11490:	ldr	r3, [r9]
   11494:	mov	r2, #256	; 0x100
   11498:	ldr	r1, [sp]
   1149c:	mov	r0, sl
   114a0:	bl	1588 <fread@plt>
   114a4:	add	r8, r8, r0
   114a8:	sub	r3, sl, #2
   114ac:	mov	r2, r6
   114b0:	ldrh	r1, [r3, #2]!
   114b4:	strh	r1, [r2, #2]!
   114b8:	cmp	r3, r4
   114bc:	bne	114b0 <ReadUInt16Data+0xbb4>
   114c0:	add	r5, r5, #256	; 0x100
   114c4:	add	r6, r6, #512	; 0x200
   114c8:	cmp	r5, fp
   114cc:	blt	11490 <ReadUInt16Data+0xb94>
   114d0:	cmp	r7, r5
   114d4:	ble	11850 <ReadUInt16Data+0xf54>
   114d8:	sub	r7, r7, r5
   114dc:	ldr	r3, [r9]
   114e0:	mov	r2, r7
   114e4:	ldr	r1, [sp]
   114e8:	add	r0, sp, #16
   114ec:	bl	1588 <fread@plt>
   114f0:	add	r8, r8, r0
   114f4:	cmp	r7, #0
   114f8:	ble	11850 <ReadUInt16Data+0xf54>
   114fc:	add	r0, sp, #16
   11500:	add	r2, sp, #14
   11504:	sub	r3, r5, #-2147483647	; 0x80000001
   11508:	ldr	r1, [sp, #4]
   1150c:	add	r3, r1, r3, lsl #1
   11510:	sub	r7, r7, #-2147483647	; 0x80000001
   11514:	add	r0, r0, r7, lsl #1
   11518:	ldrh	r1, [r2, #2]!
   1151c:	strh	r1, [r3, #2]!
   11520:	cmp	r2, r0
   11524:	bne	11518 <ReadUInt16Data+0xc1c>
   11528:	b	11850 <ReadUInt16Data+0xf54>
   1152c:	ldr	r3, [r9]
   11530:	mov	r2, r7
   11534:	ldr	r1, [sp]
   11538:	add	r0, sp, #16
   1153c:	bl	1588 <fread@plt>
   11540:	mov	r8, r0
   11544:	cmp	r7, #0
   11548:	ble	11850 <ReadUInt16Data+0xf54>
   1154c:	add	r0, sp, #16
   11550:	add	r3, sp, #14
   11554:	ldr	r2, [sp, #4]
   11558:	sub	r2, r2, #2
   1155c:	sub	r7, r7, #-2147483647	; 0x80000001
   11560:	add	r0, r0, r7, lsl #1
   11564:	ldrh	r1, [r3, #2]!
   11568:	strh	r1, [r2, #2]!
   1156c:	cmp	r3, r0
   11570:	bne	11564 <ReadUInt16Data+0xc68>
   11574:	b	11850 <ReadUInt16Data+0xf54>
   11578:	ldr	r8, [r9, #20]
   1157c:	cmp	r8, #0
   11580:	beq	116bc <ReadUInt16Data+0xdc0>
   11584:	cmp	r7, #256	; 0x100
   11588:	ble	11670 <ReadUInt16Data+0xd74>
   1158c:	sub	r3, r7, #256	; 0x100
   11590:	mov	r2, r3
   11594:	cmp	r3, #0
   11598:	movle	sl, #0
   1159c:	movle	r8, sl
   115a0:	ble	11614 <ReadUInt16Data+0xd18>
   115a4:	ldr	r3, [sp, #4]
   115a8:	sub	fp, r3, #2
   115ac:	mov	sl, #0
   115b0:	mov	r8, sl
   115b4:	add	r3, sp, #16
   115b8:	str	r3, [sp, #8]
   115bc:	add	r6, sp, #528	; 0x210
   115c0:	str	r7, [sp, #12]
   115c4:	mov	r7, r2
   115c8:	ldr	r3, [r9]
   115cc:	mov	r2, #256	; 0x100
   115d0:	ldr	r1, [sp]
   115d4:	ldr	r4, [sp, #8]
   115d8:	mov	r0, r4
   115dc:	bl	1588 <fread@plt>
   115e0:	add	r8, r8, r0
   115e4:	mov	r5, fp
   115e8:	mov	r0, r4
   115ec:	bl	1b1c <Mat_uint16Swap>
   115f0:	strh	r0, [r5, #2]!
   115f4:	add	r4, r4, #2
   115f8:	cmp	r4, r6
   115fc:	bne	115e8 <ReadUInt16Data+0xcec>
   11600:	add	sl, sl, #256	; 0x100
   11604:	add	fp, fp, #512	; 0x200
   11608:	cmp	sl, r7
   1160c:	blt	115c8 <ReadUInt16Data+0xccc>
   11610:	ldr	r7, [sp, #12]
   11614:	cmp	r7, sl
   11618:	ble	11850 <ReadUInt16Data+0xf54>
   1161c:	sub	r7, r7, sl
   11620:	ldr	r3, [r9]
   11624:	mov	r2, r7
   11628:	ldr	r1, [sp]
   1162c:	add	r0, sp, #16
   11630:	bl	1588 <fread@plt>
   11634:	add	r8, r8, r0
   11638:	cmp	r7, #0
   1163c:	ble	11850 <ReadUInt16Data+0xf54>
   11640:	add	r6, sp, #16
   11644:	ldr	r3, [sp, #4]
   11648:	add	r5, r3, sl, lsl #1
   1164c:	add	r7, r7, sl
   11650:	add	r7, r3, r7, lsl #1
   11654:	mov	r0, r6
   11658:	bl	1b1c <Mat_uint16Swap>
   1165c:	strh	r0, [r5], #2
   11660:	add	r6, r6, #2
   11664:	cmp	r5, r7
   11668:	bne	11654 <ReadUInt16Data+0xd58>
   1166c:	b	11850 <ReadUInt16Data+0xf54>
   11670:	ldr	r3, [r9]
   11674:	mov	r2, r7
   11678:	ldr	r1, [sp]
   1167c:	add	r0, sp, #16
   11680:	bl	1588 <fread@plt>
   11684:	mov	r8, r0
   11688:	cmp	r7, #0
   1168c:	ble	11850 <ReadUInt16Data+0xf54>
   11690:	add	r5, sp, #16
   11694:	ldr	r3, [sp, #4]
   11698:	mov	r4, r3
   1169c:	add	r7, r3, r7, lsl #1
   116a0:	mov	r0, r5
   116a4:	bl	1b1c <Mat_uint16Swap>
   116a8:	strh	r0, [r4], #2
   116ac:	add	r5, r5, #2
   116b0:	cmp	r4, r7
   116b4:	bne	116a0 <ReadUInt16Data+0xda4>
   116b8:	b	11850 <ReadUInt16Data+0xf54>
   116bc:	cmp	r7, #256	; 0x100
   116c0:	ble	11788 <ReadUInt16Data+0xe8c>
   116c4:	sub	fp, r7, #256	; 0x100
   116c8:	cmp	fp, #0
   116cc:	movle	r5, r8
   116d0:	ble	1172c <ReadUInt16Data+0xe30>
   116d4:	ldr	r3, [sp, #4]
   116d8:	sub	r6, r3, #2
   116dc:	mov	r5, r8
   116e0:	add	sl, sp, #16
   116e4:	add	r4, sl, #508	; 0x1fc
   116e8:	add	r4, r4, #2
   116ec:	ldr	r3, [r9]
   116f0:	mov	r2, #256	; 0x100
   116f4:	ldr	r1, [sp]
   116f8:	mov	r0, sl
   116fc:	bl	1588 <fread@plt>
   11700:	add	r8, r8, r0
   11704:	sub	r3, sl, #2
   11708:	mov	r2, r6
   1170c:	ldrh	r1, [r3, #2]!
   11710:	strh	r1, [r2, #2]!
   11714:	cmp	r3, r4
   11718:	bne	1170c <ReadUInt16Data+0xe10>
   1171c:	add	r5, r5, #256	; 0x100
   11720:	add	r6, r6, #512	; 0x200
   11724:	cmp	r5, fp
   11728:	blt	116ec <ReadUInt16Data+0xdf0>
   1172c:	cmp	r7, r5
   11730:	ble	11850 <ReadUInt16Data+0xf54>
   11734:	sub	r7, r7, r5
   11738:	ldr	r3, [r9]
   1173c:	mov	r2, r7
   11740:	ldr	r1, [sp]
   11744:	add	r0, sp, #16
   11748:	bl	1588 <fread@plt>
   1174c:	add	r8, r8, r0
   11750:	cmp	r7, #0
   11754:	ble	11850 <ReadUInt16Data+0xf54>
   11758:	add	r0, sp, #16
   1175c:	add	r2, sp, #14
   11760:	sub	r3, r5, #-2147483647	; 0x80000001
   11764:	ldr	r1, [sp, #4]
   11768:	add	r3, r1, r3, lsl #1
   1176c:	sub	r7, r7, #-2147483647	; 0x80000001
   11770:	add	r0, r0, r7, lsl #1
   11774:	ldrh	r1, [r2, #2]!
   11778:	strh	r1, [r3, #2]!
   1177c:	cmp	r2, r0
   11780:	bne	11774 <ReadUInt16Data+0xe78>
   11784:	b	11850 <ReadUInt16Data+0xf54>
   11788:	ldr	r3, [r9]
   1178c:	mov	r2, r7
   11790:	ldr	r1, [sp]
   11794:	add	r0, sp, #16
   11798:	bl	1588 <fread@plt>
   1179c:	mov	r8, r0
   117a0:	cmp	r7, #0
   117a4:	ble	11850 <ReadUInt16Data+0xf54>
   117a8:	add	r0, sp, #16
   117ac:	add	r3, sp, #14
   117b0:	ldr	r2, [sp, #4]
   117b4:	sub	r2, r2, #2
   117b8:	sub	r7, r7, #-2147483647	; 0x80000001
   117bc:	add	r0, r0, r7, lsl #1
   117c0:	ldrh	r1, [r3, #2]!
   117c4:	strh	r1, [r2, #2]!
   117c8:	cmp	r3, r0
   117cc:	bne	117c0 <ReadUInt16Data+0xec4>
   117d0:	b	11850 <ReadUInt16Data+0xf54>
   117d4:	cmp	r7, #256	; 0x100
   117d8:	ble	11864 <ReadUInt16Data+0xf68>
   117dc:	sub	fp, r7, #256	; 0x100
   117e0:	cmp	fp, #0
   117e4:	movle	r5, #0
   117e8:	movle	r8, r5
   117ec:	ble	11848 <ReadUInt16Data+0xf4c>
   117f0:	ldr	r3, [sp, #4]
   117f4:	sub	r6, r3, #2
   117f8:	mov	r5, #0
   117fc:	mov	r8, r5
   11800:	add	sl, sp, #16
   11804:	add	r4, sl, #255	; 0xff
   11808:	ldr	r3, [r9]
   1180c:	mov	r2, #256	; 0x100
   11810:	ldr	r1, [sp]
   11814:	mov	r0, sl
   11818:	bl	1588 <fread@plt>
   1181c:	add	r8, r8, r0
   11820:	sub	r3, sl, #1
   11824:	mov	r2, r6
   11828:	ldrsb	r1, [r3, #1]!
   1182c:	strh	r1, [r2, #2]!
   11830:	cmp	r4, r3
   11834:	bne	11828 <ReadUInt16Data+0xf2c>
   11838:	add	r5, r5, #256	; 0x100
   1183c:	add	r6, r6, #512	; 0x200
   11840:	cmp	r5, fp
   11844:	blt	11808 <ReadUInt16Data+0xf0c>
   11848:	cmp	r7, r5
   1184c:	bgt	118b0 <ReadUInt16Data+0xfb4>
   11850:	ldr	r3, [sp]
   11854:	mul	r0, r3, r8
   11858:	add	sp, sp, #2064	; 0x810
   1185c:	add	sp, sp, #4
   11860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11864:	ldr	r3, [r9]
   11868:	mov	r2, r7
   1186c:	ldr	r1, [sp]
   11870:	add	r0, sp, #16
   11874:	bl	1588 <fread@plt>
   11878:	mov	r8, r0
   1187c:	cmp	r7, #0
   11880:	ble	11850 <ReadUInt16Data+0xf54>
   11884:	add	r0, sp, #16
   11888:	add	r3, sp, #15
   1188c:	ldr	r2, [sp, #4]
   11890:	sub	r2, r2, #2
   11894:	sub	r7, r7, #1
   11898:	add	r0, r0, r7
   1189c:	ldrsb	r1, [r3, #1]!
   118a0:	strh	r1, [r2, #2]!
   118a4:	cmp	r3, r0
   118a8:	bne	1189c <ReadUInt16Data+0xfa0>
   118ac:	b	11850 <ReadUInt16Data+0xf54>
   118b0:	sub	r7, r7, r5
   118b4:	ldr	r3, [r9]
   118b8:	mov	r2, r7
   118bc:	ldr	r1, [sp]
   118c0:	add	r0, sp, #16
   118c4:	bl	1588 <fread@plt>
   118c8:	add	r8, r8, r0
   118cc:	cmp	r7, #0
   118d0:	ble	11850 <ReadUInt16Data+0xf54>
   118d4:	add	r0, sp, #16
   118d8:	add	r2, sp, #15
   118dc:	sub	r3, r5, #-2147483647	; 0x80000001
   118e0:	ldr	r1, [sp, #4]
   118e4:	add	r3, r1, r3, lsl #1
   118e8:	sub	r7, r7, #1
   118ec:	add	r0, r0, r7
   118f0:	ldrsb	r1, [r2, #1]!
   118f4:	strh	r1, [r3, #2]!
   118f8:	cmp	r2, r0
   118fc:	bne	118f0 <ReadUInt16Data+0xff4>
   11900:	b	11850 <ReadUInt16Data+0xf54>
   11904:	cmp	r7, #256	; 0x100
   11908:	ble	119d4 <ReadUInt16Data+0x10d8>
   1190c:	sub	fp, r7, #256	; 0x100
   11910:	cmp	fp, #0
   11914:	movle	r5, #0
   11918:	movle	r8, r5
   1191c:	ble	11978 <ReadUInt16Data+0x107c>
   11920:	ldr	r3, [sp, #4]
   11924:	sub	r6, r3, #2
   11928:	mov	r5, #0
   1192c:	mov	r8, r5
   11930:	add	sl, sp, #16
   11934:	add	r4, sl, #255	; 0xff
   11938:	ldr	r3, [r9]
   1193c:	mov	r2, #256	; 0x100
   11940:	ldr	r1, [sp]
   11944:	mov	r0, sl
   11948:	bl	1588 <fread@plt>
   1194c:	add	r8, r8, r0
   11950:	sub	r3, sl, #1
   11954:	mov	r2, r6
   11958:	ldrb	r1, [r3, #1]!
   1195c:	strh	r1, [r2, #2]!
   11960:	cmp	r3, r4
   11964:	bne	11958 <ReadUInt16Data+0x105c>
   11968:	add	r5, r5, #256	; 0x100
   1196c:	add	r6, r6, #512	; 0x200
   11970:	cmp	r5, fp
   11974:	blt	11938 <ReadUInt16Data+0x103c>
   11978:	cmp	r7, r5
   1197c:	ble	11850 <ReadUInt16Data+0xf54>
   11980:	sub	r7, r7, r5
   11984:	ldr	r3, [r9]
   11988:	mov	r2, r7
   1198c:	ldr	r1, [sp]
   11990:	add	r0, sp, #16
   11994:	bl	1588 <fread@plt>
   11998:	add	r8, r8, r0
   1199c:	cmp	r7, #0
   119a0:	ble	11850 <ReadUInt16Data+0xf54>
   119a4:	add	r0, sp, #16
   119a8:	add	r2, sp, #15
   119ac:	sub	r3, r5, #-2147483647	; 0x80000001
   119b0:	ldr	r1, [sp, #4]
   119b4:	add	r3, r1, r3, lsl #1
   119b8:	sub	r7, r7, #1
   119bc:	add	r0, r0, r7
   119c0:	ldrb	r1, [r2, #1]!
   119c4:	strh	r1, [r3, #2]!
   119c8:	cmp	r0, r2
   119cc:	bne	119c0 <ReadUInt16Data+0x10c4>
   119d0:	b	11850 <ReadUInt16Data+0xf54>
   119d4:	ldr	r3, [r9]
   119d8:	mov	r2, r7
   119dc:	ldr	r1, [sp]
   119e0:	add	r0, sp, #16
   119e4:	bl	1588 <fread@plt>
   119e8:	mov	r8, r0
   119ec:	cmp	r7, #0
   119f0:	ble	11850 <ReadUInt16Data+0xf54>
   119f4:	add	r0, sp, #16
   119f8:	add	r3, sp, #15
   119fc:	ldr	r2, [sp, #4]
   11a00:	sub	r2, r2, #2
   11a04:	sub	r7, r7, #1
   11a08:	add	r0, r0, r7
   11a0c:	ldrb	r1, [r3, #1]!
   11a10:	strh	r1, [r2, #2]!
   11a14:	cmp	r0, r3
   11a18:	bne	11a0c <ReadUInt16Data+0x1110>
   11a1c:	b	11850 <ReadUInt16Data+0xf54>
   11a20:	cmp	r4, #12
   11a24:	beq	11b24 <ReadUInt16Data+0x1228>
   11a28:	cmp	r4, #13
   11a2c:	movne	r8, #0
   11a30:	bne	11850 <ReadUInt16Data+0xf54>
   11a34:	ldr	r8, [r9, #20]
   11a38:	cmp	r8, #0
   11a3c:	beq	11dc4 <ReadUInt16Data+0x14c8>
   11a40:	cmp	r7, #256	; 0x100
   11a44:	ble	11d78 <ReadUInt16Data+0x147c>
   11a48:	sub	r3, r7, #256	; 0x100
   11a4c:	str	r3, [sp, #8]
   11a50:	cmp	r3, #0
   11a54:	movle	sl, #0
   11a58:	movle	r8, sl
   11a5c:	ble	11ac8 <ReadUInt16Data+0x11cc>
   11a60:	ldr	r3, [sp, #4]
   11a64:	sub	fp, r3, #2
   11a68:	mov	sl, #0
   11a6c:	mov	r8, sl
   11a70:	add	r3, sp, #16
   11a74:	str	r3, [sp, #12]
   11a78:	ldr	r3, [r9]
   11a7c:	mov	r2, #256	; 0x100
   11a80:	ldr	r1, [sp]
   11a84:	ldr	r4, [sp, #12]
   11a88:	mov	r0, r4
   11a8c:	bl	1588 <fread@plt>
   11a90:	add	r8, r8, r0
   11a94:	add	r6, sp, #2064	; 0x810
   11a98:	mov	r5, fp
   11a9c:	mov	r0, r4
   11aa0:	bl	1984 <Mat_uint64Swap>
   11aa4:	strh	r0, [r5, #2]!
   11aa8:	add	r4, r4, #8
   11aac:	cmp	r6, r4
   11ab0:	bne	11a9c <ReadUInt16Data+0x11a0>
   11ab4:	add	sl, sl, #256	; 0x100
   11ab8:	add	fp, fp, #512	; 0x200
   11abc:	ldr	r3, [sp, #8]
   11ac0:	cmp	sl, r3
   11ac4:	blt	11a78 <ReadUInt16Data+0x117c>
   11ac8:	cmp	r7, sl
   11acc:	ble	11850 <ReadUInt16Data+0xf54>
   11ad0:	sub	r4, r7, sl
   11ad4:	ldr	r3, [r9]
   11ad8:	mov	r2, r4
   11adc:	ldr	r1, [sp]
   11ae0:	add	r0, sp, #16
   11ae4:	bl	1588 <fread@plt>
   11ae8:	add	r8, r8, r0
   11aec:	cmp	r4, #0
   11af0:	ble	11850 <ReadUInt16Data+0xf54>
   11af4:	add	r6, sp, #16
   11af8:	ldr	r3, [sp, #4]
   11afc:	add	r5, r3, sl, lsl #1
   11b00:	add	r4, sl, r4
   11b04:	add	r4, r3, r4, lsl #1
   11b08:	mov	r0, r6
   11b0c:	bl	1984 <Mat_uint64Swap>
   11b10:	strh	r0, [r5], #2
   11b14:	add	r6, r6, #8
   11b18:	cmp	r5, r4
   11b1c:	bne	11b08 <ReadUInt16Data+0x120c>
   11b20:	b	11850 <ReadUInt16Data+0xf54>
   11b24:	ldr	r8, [r9, #20]
   11b28:	cmp	r8, #0
   11b2c:	beq	11c60 <ReadUInt16Data+0x1364>
   11b30:	cmp	r7, #256	; 0x100
   11b34:	ble	11c14 <ReadUInt16Data+0x1318>
   11b38:	sub	r3, r7, #256	; 0x100
   11b3c:	str	r3, [sp, #8]
   11b40:	cmp	r3, #0
   11b44:	movle	sl, #0
   11b48:	movle	r8, sl
   11b4c:	ble	11bb8 <ReadUInt16Data+0x12bc>
   11b50:	ldr	r3, [sp, #4]
   11b54:	sub	fp, r3, #2
   11b58:	mov	sl, #0
   11b5c:	mov	r8, sl
   11b60:	add	r3, sp, #16
   11b64:	str	r3, [sp, #12]
   11b68:	ldr	r3, [r9]
   11b6c:	mov	r2, #256	; 0x100
   11b70:	ldr	r1, [sp]
   11b74:	ldr	r4, [sp, #12]
   11b78:	mov	r0, r4
   11b7c:	bl	1588 <fread@plt>
   11b80:	add	r8, r8, r0
   11b84:	add	r6, sp, #2064	; 0x810
   11b88:	mov	r5, fp
   11b8c:	mov	r0, r4
   11b90:	bl	18bc <Mat_int64Swap>
   11b94:	strh	r0, [r5, #2]!
   11b98:	add	r4, r4, #8
   11b9c:	cmp	r4, r6
   11ba0:	bne	11b8c <ReadUInt16Data+0x1290>
   11ba4:	add	sl, sl, #256	; 0x100
   11ba8:	add	fp, fp, #512	; 0x200
   11bac:	ldr	r3, [sp, #8]
   11bb0:	cmp	sl, r3
   11bb4:	blt	11b68 <ReadUInt16Data+0x126c>
   11bb8:	cmp	r7, sl
   11bbc:	ble	11850 <ReadUInt16Data+0xf54>
   11bc0:	sub	r7, r7, sl
   11bc4:	ldr	r3, [r9]
   11bc8:	mov	r2, r7
   11bcc:	ldr	r1, [sp]
   11bd0:	add	r0, sp, #16
   11bd4:	bl	1588 <fread@plt>
   11bd8:	add	r8, r8, r0
   11bdc:	cmp	r7, #0
   11be0:	ble	11850 <ReadUInt16Data+0xf54>
   11be4:	add	r6, sp, #16
   11be8:	ldr	r3, [sp, #4]
   11bec:	add	r5, r3, sl, lsl #1
   11bf0:	add	r7, r7, sl
   11bf4:	add	r7, r3, r7, lsl #1
   11bf8:	mov	r0, r6
   11bfc:	bl	18bc <Mat_int64Swap>
   11c00:	strh	r0, [r5], #2
   11c04:	add	r6, r6, #8
   11c08:	cmp	r5, r7
   11c0c:	bne	11bf8 <ReadUInt16Data+0x12fc>
   11c10:	b	11850 <ReadUInt16Data+0xf54>
   11c14:	ldr	r3, [r9]
   11c18:	mov	r2, r7
   11c1c:	ldr	r1, [sp]
   11c20:	add	r0, sp, #16
   11c24:	bl	1588 <fread@plt>
   11c28:	mov	r8, r0
   11c2c:	cmp	r7, #0
   11c30:	ble	11850 <ReadUInt16Data+0xf54>
   11c34:	add	r5, sp, #16
   11c38:	ldr	r3, [sp, #4]
   11c3c:	mov	r4, r3
   11c40:	add	r7, r3, r7, lsl #1
   11c44:	mov	r0, r5
   11c48:	bl	18bc <Mat_int64Swap>
   11c4c:	strh	r0, [r4], #2
   11c50:	add	r5, r5, #8
   11c54:	cmp	r7, r4
   11c58:	bne	11c44 <ReadUInt16Data+0x1348>
   11c5c:	b	11850 <ReadUInt16Data+0xf54>
   11c60:	cmp	r7, #256	; 0x100
   11c64:	ble	11d2c <ReadUInt16Data+0x1430>
   11c68:	sub	sl, r7, #256	; 0x100
   11c6c:	cmp	sl, #0
   11c70:	movle	r5, r8
   11c74:	ble	11cd0 <ReadUInt16Data+0x13d4>
   11c78:	ldr	r3, [sp, #4]
   11c7c:	sub	r6, r3, #2
   11c80:	mov	r5, r8
   11c84:	add	fp, sp, #16
   11c88:	add	r4, sp, #2048	; 0x800
   11c8c:	add	r4, r4, #8
   11c90:	ldr	r3, [r9]
   11c94:	mov	r2, #256	; 0x100
   11c98:	ldr	r1, [sp]
   11c9c:	mov	r0, fp
   11ca0:	bl	1588 <fread@plt>
   11ca4:	add	r8, r8, r0
   11ca8:	sub	r3, fp, #8
   11cac:	mov	r2, r6
   11cb0:	ldr	r1, [r3, #8]!
   11cb4:	strh	r1, [r2, #2]!
   11cb8:	cmp	r3, r4
   11cbc:	bne	11cb0 <ReadUInt16Data+0x13b4>
   11cc0:	add	r5, r5, #256	; 0x100
   11cc4:	add	r6, r6, #512	; 0x200
   11cc8:	cmp	r5, sl
   11ccc:	blt	11c90 <ReadUInt16Data+0x1394>
   11cd0:	cmp	r7, r5
   11cd4:	ble	11850 <ReadUInt16Data+0xf54>
   11cd8:	sub	r7, r7, r5
   11cdc:	ldr	r3, [r9]
   11ce0:	mov	r2, r7
   11ce4:	ldr	r1, [sp]
   11ce8:	add	r0, sp, #16
   11cec:	bl	1588 <fread@plt>
   11cf0:	add	r8, r8, r0
   11cf4:	cmp	r7, #0
   11cf8:	ble	11850 <ReadUInt16Data+0xf54>
   11cfc:	add	r1, sp, #16
   11d00:	add	r2, sp, #8
   11d04:	sub	r3, r5, #-2147483647	; 0x80000001
   11d08:	ldr	r0, [sp, #4]
   11d0c:	add	r3, r0, r3, lsl #1
   11d10:	sub	r7, r7, #-536870911	; 0xe0000001
   11d14:	add	r1, r1, r7, lsl #3
   11d18:	ldr	r0, [r2, #8]!
   11d1c:	strh	r0, [r3, #2]!
   11d20:	cmp	r1, r2
   11d24:	bne	11d18 <ReadUInt16Data+0x141c>
   11d28:	b	11850 <ReadUInt16Data+0xf54>
   11d2c:	ldr	r3, [r9]
   11d30:	mov	r2, r7
   11d34:	ldr	r1, [sp]
   11d38:	add	r0, sp, #16
   11d3c:	bl	1588 <fread@plt>
   11d40:	mov	r8, r0
   11d44:	cmp	r7, #0
   11d48:	ble	11850 <ReadUInt16Data+0xf54>
   11d4c:	add	r0, sp, #16
   11d50:	add	r3, sp, #8
   11d54:	ldr	r2, [sp, #4]
   11d58:	sub	r2, r2, #2
   11d5c:	sub	r7, r7, #-536870911	; 0xe0000001
   11d60:	add	r0, r0, r7, lsl #3
   11d64:	ldr	r1, [r3, #8]!
   11d68:	strh	r1, [r2, #2]!
   11d6c:	cmp	r0, r3
   11d70:	bne	11d64 <ReadUInt16Data+0x1468>
   11d74:	b	11850 <ReadUInt16Data+0xf54>
   11d78:	ldr	r3, [r9]
   11d7c:	mov	r2, r7
   11d80:	ldr	r1, [sp]
   11d84:	add	r0, sp, #16
   11d88:	bl	1588 <fread@plt>
   11d8c:	mov	r8, r0
   11d90:	cmp	r7, #0
   11d94:	ble	11850 <ReadUInt16Data+0xf54>
   11d98:	add	r5, sp, #16
   11d9c:	ldr	r3, [sp, #4]
   11da0:	mov	r4, r3
   11da4:	add	r7, r3, r7, lsl #1
   11da8:	mov	r0, r5
   11dac:	bl	1984 <Mat_uint64Swap>
   11db0:	strh	r0, [r4], #2
   11db4:	add	r5, r5, #8
   11db8:	cmp	r4, r7
   11dbc:	bne	11da8 <ReadUInt16Data+0x14ac>
   11dc0:	b	11850 <ReadUInt16Data+0xf54>
   11dc4:	cmp	r7, #256	; 0x100
   11dc8:	ble	11e90 <ReadUInt16Data+0x1594>
   11dcc:	sub	sl, r7, #256	; 0x100
   11dd0:	cmp	sl, #0
   11dd4:	movle	r5, r8
   11dd8:	ble	11e34 <ReadUInt16Data+0x1538>
   11ddc:	ldr	r3, [sp, #4]
   11de0:	sub	r6, r3, #2
   11de4:	mov	r5, r8
   11de8:	add	fp, sp, #16
   11dec:	add	r4, sp, #2048	; 0x800
   11df0:	add	r4, r4, #8
   11df4:	ldr	r3, [r9]
   11df8:	mov	r2, #256	; 0x100
   11dfc:	ldr	r1, [sp]
   11e00:	mov	r0, fp
   11e04:	bl	1588 <fread@plt>
   11e08:	add	r8, r8, r0
   11e0c:	sub	r3, fp, #8
   11e10:	mov	r2, r6
   11e14:	ldr	r1, [r3, #8]!
   11e18:	strh	r1, [r2, #2]!
   11e1c:	cmp	r3, r4
   11e20:	bne	11e14 <ReadUInt16Data+0x1518>
   11e24:	add	r5, r5, #256	; 0x100
   11e28:	add	r6, r6, #512	; 0x200
   11e2c:	cmp	r5, sl
   11e30:	blt	11df4 <ReadUInt16Data+0x14f8>
   11e34:	cmp	r7, r5
   11e38:	ble	11850 <ReadUInt16Data+0xf54>
   11e3c:	sub	r7, r7, r5
   11e40:	ldr	r3, [r9]
   11e44:	mov	r2, r7
   11e48:	ldr	r1, [sp]
   11e4c:	add	r0, sp, #16
   11e50:	bl	1588 <fread@plt>
   11e54:	add	r8, r8, r0
   11e58:	cmp	r7, #0
   11e5c:	ble	11850 <ReadUInt16Data+0xf54>
   11e60:	add	r1, sp, #16
   11e64:	add	r2, sp, #8
   11e68:	sub	r3, r5, #-2147483647	; 0x80000001
   11e6c:	ldr	r0, [sp, #4]
   11e70:	add	r3, r0, r3, lsl #1
   11e74:	sub	r7, r7, #-536870911	; 0xe0000001
   11e78:	add	r1, r1, r7, lsl #3
   11e7c:	ldr	r0, [r2, #8]!
   11e80:	strh	r0, [r3, #2]!
   11e84:	cmp	r2, r1
   11e88:	bne	11e7c <ReadUInt16Data+0x1580>
   11e8c:	b	11850 <ReadUInt16Data+0xf54>
   11e90:	ldr	r3, [r9]
   11e94:	mov	r2, r7
   11e98:	ldr	r1, [sp]
   11e9c:	add	r0, sp, #16
   11ea0:	bl	1588 <fread@plt>
   11ea4:	mov	r8, r0
   11ea8:	cmp	r7, #0
   11eac:	ble	11850 <ReadUInt16Data+0xf54>
   11eb0:	add	r0, sp, #16
   11eb4:	add	r3, sp, #8
   11eb8:	ldr	r2, [sp, #4]
   11ebc:	sub	r2, r2, #2
   11ec0:	sub	r7, r7, #-536870911	; 0xe0000001
   11ec4:	add	r0, r0, r7, lsl #3
   11ec8:	ldr	r1, [r3, #8]!
   11ecc:	strh	r1, [r2, #2]!
   11ed0:	cmp	r0, r3
   11ed4:	bne	11ec8 <ReadUInt16Data+0x15cc>
   11ed8:	b	11850 <ReadUInt16Data+0xf54>
   11edc:	mov	r0, #0
   11ee0:	bx	lr

00011ee4 <ReadCompressedUInt16Data>:
   11ee4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ee8:	sub	sp, sp, #8
   11eec:	ldr	r9, [sp, #40]	; 0x28
   11ef0:	mov	r4, r2
   11ef4:	cmp	r2, #0
   11ef8:	cmpne	r1, #0
   11efc:	moveq	r2, #1
   11f00:	movne	r2, #0
   11f04:	cmp	r0, #0
   11f08:	orreq	r2, r2, #1
   11f0c:	cmp	r2, #0
   11f10:	movne	r0, #0
   11f14:	bne	11fa0 <ReadCompressedUInt16Data+0xbc>
   11f18:	mov	r7, r1
   11f1c:	mov	r6, r0
   11f20:	mov	r8, r3
   11f24:	mov	r0, r3
   11f28:	bl	1600 <Mat_SizeOf@plt>
   11f2c:	mov	r5, r0
   11f30:	sub	r3, r8, #1
   11f34:	cmp	r3, #8
   11f38:	addls	pc, pc, r3, lsl #2
   11f3c:	b	12334 <ReadCompressedUInt16Data+0x450>
   11f40:	b	11fa8 <ReadCompressedUInt16Data+0xc4>
   11f44:	b	11f64 <ReadCompressedUInt16Data+0x80>
   11f48:	b	12224 <ReadCompressedUInt16Data+0x340>
   11f4c:	b	122ac <ReadCompressedUInt16Data+0x3c8>
   11f50:	b	12114 <ReadCompressedUInt16Data+0x230>
   11f54:	b	1219c <ReadCompressedUInt16Data+0x2b8>
   11f58:	b	1207c <ReadCompressedUInt16Data+0x198>
   11f5c:	b	12334 <ReadCompressedUInt16Data+0x450>
   11f60:	b	11fe4 <ReadCompressedUInt16Data+0x100>
   11f64:	cmp	r9, #0
   11f68:	movgt	r8, r4
   11f6c:	addgt	r4, r4, r9, lsl #1
   11f70:	movgt	sl, sp
   11f74:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   11f78:	mov	r3, r5
   11f7c:	mov	r2, sl
   11f80:	mov	r1, r7
   11f84:	mov	r0, r6
   11f88:	bl	3418 <InflateData>
   11f8c:	ldrb	r3, [sp]
   11f90:	strh	r3, [r8], #2
   11f94:	cmp	r8, r4
   11f98:	bne	11f78 <ReadCompressedUInt16Data+0x94>
   11f9c:	mul	r0, r5, r9
   11fa0:	add	sp, sp, #8
   11fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fa8:	cmp	r9, #0
   11fac:	movgt	r8, r4
   11fb0:	addgt	r4, r4, r9, lsl #1
   11fb4:	movgt	sl, sp
   11fb8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   11fbc:	mov	r3, r5
   11fc0:	mov	r2, sl
   11fc4:	mov	r1, r7
   11fc8:	mov	r0, r6
   11fcc:	bl	3418 <InflateData>
   11fd0:	ldrsb	r3, [sp]
   11fd4:	strh	r3, [r8], #2
   11fd8:	cmp	r8, r4
   11fdc:	bne	11fbc <ReadCompressedUInt16Data+0xd8>
   11fe0:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   11fe4:	ldr	r3, [r6, #20]
   11fe8:	cmp	r3, #0
   11fec:	bne	12034 <ReadCompressedUInt16Data+0x150>
   11ff0:	cmp	r9, #0
   11ff4:	movgt	r8, r4
   11ff8:	addgt	r4, r4, r9, lsl #1
   11ffc:	movgt	sl, sp
   12000:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   12004:	mov	r3, r5
   12008:	mov	r2, sl
   1200c:	mov	r1, r7
   12010:	mov	r0, r6
   12014:	bl	3418 <InflateData>
   12018:	vldr	d7, [sp]
   1201c:	vcvt.u32.f64	s15, d7
   12020:	vmov	r3, s15
   12024:	strh	r3, [r8], #2
   12028:	cmp	r8, r4
   1202c:	bne	12004 <ReadCompressedUInt16Data+0x120>
   12030:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   12034:	cmp	r9, #0
   12038:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   1203c:	mov	r8, r4
   12040:	add	r4, r4, r9, lsl #1
   12044:	mov	sl, sp
   12048:	mov	r3, r5
   1204c:	mov	r2, sl
   12050:	mov	r1, r7
   12054:	mov	r0, r6
   12058:	bl	3418 <InflateData>
   1205c:	mov	r0, sl
   12060:	bl	1b94 <Mat_doubleSwap>
   12064:	vcvt.u32.f64	s15, d0
   12068:	vmov	r3, s15
   1206c:	strh	r3, [r8], #2
   12070:	cmp	r8, r4
   12074:	bne	12048 <ReadCompressedUInt16Data+0x164>
   12078:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   1207c:	ldr	r3, [r6, #20]
   12080:	cmp	r3, #0
   12084:	bne	120cc <ReadCompressedUInt16Data+0x1e8>
   12088:	cmp	r9, #0
   1208c:	movgt	r8, r4
   12090:	addgt	r4, r4, r9, lsl #1
   12094:	movgt	sl, sp
   12098:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   1209c:	mov	r3, r5
   120a0:	mov	r2, sl
   120a4:	mov	r1, r7
   120a8:	mov	r0, r6
   120ac:	bl	3418 <InflateData>
   120b0:	vldr	s15, [sp]
   120b4:	vcvt.u32.f32	s15, s15
   120b8:	vmov	r3, s15
   120bc:	strh	r3, [r8], #2
   120c0:	cmp	r8, r4
   120c4:	bne	1209c <ReadCompressedUInt16Data+0x1b8>
   120c8:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   120cc:	cmp	r9, #0
   120d0:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   120d4:	mov	r8, r4
   120d8:	add	r4, r4, r9, lsl #1
   120dc:	mov	sl, sp
   120e0:	mov	r3, r5
   120e4:	mov	r2, sl
   120e8:	mov	r1, r7
   120ec:	mov	r0, r6
   120f0:	bl	3418 <InflateData>
   120f4:	mov	r0, sl
   120f8:	bl	1b38 <Mat_floatSwap>
   120fc:	vcvt.u32.f32	s15, s0
   12100:	vmov	r3, s15
   12104:	strh	r3, [r8], #2
   12108:	cmp	r8, r4
   1210c:	bne	120e0 <ReadCompressedUInt16Data+0x1fc>
   12110:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   12114:	ldr	r3, [r6, #20]
   12118:	cmp	r3, #0
   1211c:	bne	1215c <ReadCompressedUInt16Data+0x278>
   12120:	cmp	r9, #0
   12124:	movgt	r8, r4
   12128:	addgt	r4, r4, r9, lsl #1
   1212c:	movgt	sl, sp
   12130:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   12134:	mov	r3, r5
   12138:	mov	r2, sl
   1213c:	mov	r1, r7
   12140:	mov	r0, r6
   12144:	bl	3418 <InflateData>
   12148:	ldr	r3, [sp]
   1214c:	strh	r3, [r8], #2
   12150:	cmp	r4, r8
   12154:	bne	12134 <ReadCompressedUInt16Data+0x250>
   12158:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   1215c:	cmp	r9, #0
   12160:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   12164:	mov	r8, r4
   12168:	add	r4, r4, r9, lsl #1
   1216c:	mov	sl, sp
   12170:	mov	r3, r5
   12174:	mov	r2, sl
   12178:	mov	r1, r7
   1217c:	mov	r0, r6
   12180:	bl	3418 <InflateData>
   12184:	mov	r0, sl
   12188:	bl	1a20 <Mat_int32Swap>
   1218c:	strh	r0, [r8], #2
   12190:	cmp	r4, r8
   12194:	bne	12170 <ReadCompressedUInt16Data+0x28c>
   12198:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   1219c:	ldr	r3, [r6, #20]
   121a0:	cmp	r3, #0
   121a4:	bne	121e4 <ReadCompressedUInt16Data+0x300>
   121a8:	cmp	r9, #0
   121ac:	movgt	r8, r4
   121b0:	addgt	r4, r4, r9, lsl #1
   121b4:	movgt	sl, sp
   121b8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   121bc:	mov	r3, r5
   121c0:	mov	r2, sl
   121c4:	mov	r1, r7
   121c8:	mov	r0, r6
   121cc:	bl	3418 <InflateData>
   121d0:	ldr	r3, [sp]
   121d4:	strh	r3, [r8], #2
   121d8:	cmp	r8, r4
   121dc:	bne	121bc <ReadCompressedUInt16Data+0x2d8>
   121e0:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   121e4:	cmp	r9, #0
   121e8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   121ec:	mov	r8, r4
   121f0:	add	r4, r4, r9, lsl #1
   121f4:	mov	sl, sp
   121f8:	mov	r3, r5
   121fc:	mov	r2, sl
   12200:	mov	r1, r7
   12204:	mov	r0, r6
   12208:	bl	3418 <InflateData>
   1220c:	mov	r0, sl
   12210:	bl	1a88 <Mat_uint32Swap>
   12214:	strh	r0, [r8], #2
   12218:	cmp	r4, r8
   1221c:	bne	121f8 <ReadCompressedUInt16Data+0x314>
   12220:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   12224:	ldr	r3, [r6, #20]
   12228:	cmp	r3, #0
   1222c:	bne	1226c <ReadCompressedUInt16Data+0x388>
   12230:	cmp	r9, #0
   12234:	movgt	r8, r4
   12238:	addgt	r4, r4, r9, lsl #1
   1223c:	movgt	sl, sp
   12240:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   12244:	mov	r3, r5
   12248:	mov	r2, sl
   1224c:	mov	r1, r7
   12250:	mov	r0, r6
   12254:	bl	3418 <InflateData>
   12258:	ldrh	r3, [sp]
   1225c:	strh	r3, [r8], #2
   12260:	cmp	r8, r4
   12264:	bne	12244 <ReadCompressedUInt16Data+0x360>
   12268:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   1226c:	cmp	r9, #0
   12270:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   12274:	mov	r8, r4
   12278:	add	r4, r4, r9, lsl #1
   1227c:	mov	sl, sp
   12280:	mov	r3, r5
   12284:	mov	r2, sl
   12288:	mov	r1, r7
   1228c:	mov	r0, r6
   12290:	bl	3418 <InflateData>
   12294:	mov	r0, sl
   12298:	bl	1ae4 <Mat_int16Swap>
   1229c:	strh	r0, [r8], #2
   122a0:	cmp	r8, r4
   122a4:	bne	12280 <ReadCompressedUInt16Data+0x39c>
   122a8:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   122ac:	ldr	r3, [r6, #20]
   122b0:	cmp	r3, #0
   122b4:	bne	122f4 <ReadCompressedUInt16Data+0x410>
   122b8:	cmp	r9, #0
   122bc:	movgt	r8, r4
   122c0:	addgt	r4, r4, r9, lsl #1
   122c4:	movgt	sl, sp
   122c8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   122cc:	mov	r3, r5
   122d0:	mov	r2, sl
   122d4:	mov	r1, r7
   122d8:	mov	r0, r6
   122dc:	bl	3418 <InflateData>
   122e0:	ldrh	r3, [sp]
   122e4:	strh	r3, [r8], #2
   122e8:	cmp	r4, r8
   122ec:	bne	122cc <ReadCompressedUInt16Data+0x3e8>
   122f0:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   122f4:	cmp	r9, #0
   122f8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   122fc:	mov	r8, r4
   12300:	add	r4, r4, r9, lsl #1
   12304:	mov	sl, sp
   12308:	mov	r3, r5
   1230c:	mov	r2, sl
   12310:	mov	r1, r7
   12314:	mov	r0, r6
   12318:	bl	3418 <InflateData>
   1231c:	mov	r0, sl
   12320:	bl	1b1c <Mat_uint16Swap>
   12324:	strh	r0, [r8], #2
   12328:	cmp	r8, r4
   1232c:	bne	12308 <ReadCompressedUInt16Data+0x424>
   12330:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   12334:	cmp	r8, #12
   12338:	beq	1238c <ReadCompressedUInt16Data+0x4a8>
   1233c:	cmp	r8, #13
   12340:	bne	11f9c <ReadCompressedUInt16Data+0xb8>
   12344:	ldr	r3, [r6, #20]
   12348:	cmp	r3, #0
   1234c:	bne	12414 <ReadCompressedUInt16Data+0x530>
   12350:	cmp	r9, #0
   12354:	movgt	r8, r4
   12358:	addgt	r4, r4, r9, lsl #1
   1235c:	movgt	sl, sp
   12360:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   12364:	mov	r3, r5
   12368:	mov	r2, sl
   1236c:	mov	r1, r7
   12370:	mov	r0, r6
   12374:	bl	3418 <InflateData>
   12378:	ldr	r3, [sp]
   1237c:	strh	r3, [r8], #2
   12380:	cmp	r8, r4
   12384:	bne	12364 <ReadCompressedUInt16Data+0x480>
   12388:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   1238c:	ldr	r3, [r6, #20]
   12390:	cmp	r3, #0
   12394:	bne	123d4 <ReadCompressedUInt16Data+0x4f0>
   12398:	cmp	r9, #0
   1239c:	movgt	r8, r4
   123a0:	addgt	r4, r4, r9, lsl #1
   123a4:	movgt	sl, sp
   123a8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   123ac:	mov	r3, r5
   123b0:	mov	r2, sl
   123b4:	mov	r1, r7
   123b8:	mov	r0, r6
   123bc:	bl	3418 <InflateData>
   123c0:	ldr	r3, [sp]
   123c4:	strh	r3, [r8], #2
   123c8:	cmp	r8, r4
   123cc:	bne	123ac <ReadCompressedUInt16Data+0x4c8>
   123d0:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   123d4:	cmp	r9, #0
   123d8:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   123dc:	mov	r8, r4
   123e0:	add	r4, r4, r9, lsl #1
   123e4:	mov	sl, sp
   123e8:	mov	r3, r5
   123ec:	mov	r2, sl
   123f0:	mov	r1, r7
   123f4:	mov	r0, r6
   123f8:	bl	3418 <InflateData>
   123fc:	mov	r0, sl
   12400:	bl	18bc <Mat_int64Swap>
   12404:	strh	r0, [r8], #2
   12408:	cmp	r8, r4
   1240c:	bne	123e8 <ReadCompressedUInt16Data+0x504>
   12410:	b	11f9c <ReadCompressedUInt16Data+0xb8>
   12414:	cmp	r9, #0
   12418:	ble	11f9c <ReadCompressedUInt16Data+0xb8>
   1241c:	mov	r8, r4
   12420:	add	r4, r4, r9, lsl #1
   12424:	mov	sl, sp
   12428:	mov	r3, r5
   1242c:	mov	r2, sl
   12430:	mov	r1, r7
   12434:	mov	r0, r6
   12438:	bl	3418 <InflateData>
   1243c:	mov	r0, sl
   12440:	bl	1984 <Mat_uint64Swap>
   12444:	strh	r0, [r8], #2
   12448:	cmp	r8, r4
   1244c:	bne	12428 <ReadCompressedUInt16Data+0x544>
   12450:	b	11f9c <ReadCompressedUInt16Data+0xb8>

00012454 <ReadInt8Data>:
   12454:	cmp	r1, #0
   12458:	cmpne	r0, #0
   1245c:	beq	138f8 <ReadInt8Data+0x14a4>
   12460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12464:	sub	sp, sp, #2064	; 0x810
   12468:	sub	sp, sp, #4
   1246c:	mov	sl, r0
   12470:	mov	r6, r1
   12474:	ldr	r1, [r0]
   12478:	cmp	r1, #0
   1247c:	moveq	r0, #0
   12480:	beq	132cc <ReadInt8Data+0xe78>
   12484:	mov	r8, r3
   12488:	mov	r4, r2
   1248c:	mov	r0, r2
   12490:	bl	1600 <Mat_SizeOf@plt>
   12494:	str	r0, [sp, #4]
   12498:	sub	r3, r4, #1
   1249c:	cmp	r3, #8
   124a0:	addls	pc, pc, r3, lsl #2
   124a4:	b	1347c <ReadInt8Data+0x1028>
   124a8:	b	13250 <ReadInt8Data+0xdfc>
   124ac:	b	13370 <ReadInt8Data+0xf1c>
   124b0:	b	12de0 <ReadInt8Data+0x98c>
   124b4:	b	13018 <ReadInt8Data+0xbc4>
   124b8:	b	12978 <ReadInt8Data+0x524>
   124bc:	b	12bac <ReadInt8Data+0x758>
   124c0:	b	12724 <ReadInt8Data+0x2d0>
   124c4:	b	1347c <ReadInt8Data+0x1028>
   124c8:	b	124cc <ReadInt8Data+0x78>
   124cc:	ldr	r9, [sl, #20]
   124d0:	cmp	r9, #0
   124d4:	beq	12614 <ReadInt8Data+0x1c0>
   124d8:	cmp	r8, #256	; 0x100
   124dc:	ble	125c4 <ReadInt8Data+0x170>
   124e0:	sub	r3, r8, #256	; 0x100
   124e4:	cmp	r3, #0
   124e8:	movle	fp, #0
   124ec:	movle	r9, fp
   124f0:	ble	12564 <ReadInt8Data+0x110>
   124f4:	mov	fp, #0
   124f8:	mov	r9, fp
   124fc:	add	r2, sp, #16
   12500:	str	r2, [sp, #8]
   12504:	str	r8, [sp, #12]
   12508:	mov	r8, r3
   1250c:	ldr	r3, [sl]
   12510:	mov	r2, #256	; 0x100
   12514:	ldr	r1, [sp, #4]
   12518:	ldr	r4, [sp, #8]
   1251c:	mov	r0, r4
   12520:	bl	1588 <fread@plt>
   12524:	add	r9, r9, r0
   12528:	sub	r5, fp, #1
   1252c:	add	r5, r6, r5
   12530:	add	r7, sp, #2064	; 0x810
   12534:	mov	r0, r4
   12538:	bl	1b94 <Mat_doubleSwap>
   1253c:	vcvt.s32.f64	s15, d0
   12540:	vmov	r3, s15
   12544:	strb	r3, [r5, #1]!
   12548:	add	r4, r4, #8
   1254c:	cmp	r4, r7
   12550:	bne	12534 <ReadInt8Data+0xe0>
   12554:	add	fp, fp, #256	; 0x100
   12558:	cmp	fp, r8
   1255c:	blt	1250c <ReadInt8Data+0xb8>
   12560:	ldr	r8, [sp, #12]
   12564:	cmp	r8, fp
   12568:	ble	132c4 <ReadInt8Data+0xe70>
   1256c:	sub	r8, r8, fp
   12570:	ldr	r3, [sl]
   12574:	mov	r2, r8
   12578:	ldr	r1, [sp, #4]
   1257c:	add	r0, sp, #16
   12580:	bl	1588 <fread@plt>
   12584:	add	r9, r9, r0
   12588:	cmp	r8, #0
   1258c:	ble	132c4 <ReadInt8Data+0xe70>
   12590:	add	r5, sp, #16
   12594:	add	r4, r6, fp
   12598:	add	r8, r8, fp
   1259c:	add	r6, r6, r8
   125a0:	mov	r0, r5
   125a4:	bl	1b94 <Mat_doubleSwap>
   125a8:	vcvt.s32.f64	s15, d0
   125ac:	vmov	r3, s15
   125b0:	strb	r3, [r4], #1
   125b4:	add	r5, r5, #8
   125b8:	cmp	r4, r6
   125bc:	bne	125a0 <ReadInt8Data+0x14c>
   125c0:	b	132c4 <ReadInt8Data+0xe70>
   125c4:	ldr	r3, [sl]
   125c8:	mov	r2, r8
   125cc:	ldr	r1, [sp, #4]
   125d0:	add	r0, sp, #16
   125d4:	bl	1588 <fread@plt>
   125d8:	mov	r9, r0
   125dc:	cmp	r8, #0
   125e0:	ble	132c4 <ReadInt8Data+0xe70>
   125e4:	add	r5, sp, #16
   125e8:	mov	r4, r6
   125ec:	add	r6, r6, r8
   125f0:	mov	r0, r5
   125f4:	bl	1b94 <Mat_doubleSwap>
   125f8:	vcvt.s32.f64	s15, d0
   125fc:	vmov	r3, s15
   12600:	strb	r3, [r4], #1
   12604:	add	r5, r5, #8
   12608:	cmp	r4, r6
   1260c:	bne	125f0 <ReadInt8Data+0x19c>
   12610:	b	132c4 <ReadInt8Data+0xe70>
   12614:	cmp	r8, #256	; 0x100
   12618:	ble	126dc <ReadInt8Data+0x288>
   1261c:	sub	r7, r8, #256	; 0x100
   12620:	cmp	r7, #0
   12624:	movle	r4, r9
   12628:	ble	12684 <ReadInt8Data+0x230>
   1262c:	mov	r4, r9
   12630:	add	r5, sp, #16
   12634:	mov	fp, #256	; 0x100
   12638:	ldr	r3, [sl]
   1263c:	mov	r2, fp
   12640:	ldr	r1, [sp, #4]
   12644:	mov	r0, r5
   12648:	bl	1588 <fread@plt>
   1264c:	add	r9, r9, r0
   12650:	mov	r2, r5
   12654:	sub	r1, r4, #1
   12658:	add	r1, r6, r1
   1265c:	add	r0, sp, #2064	; 0x810
   12660:	vldmia	r2!, {d7}
   12664:	vcvt.s32.f64	s15, d7
   12668:	vmov	r3, s15
   1266c:	strb	r3, [r1, #1]!
   12670:	cmp	r2, r0
   12674:	bne	12660 <ReadInt8Data+0x20c>
   12678:	add	r4, r4, #256	; 0x100
   1267c:	cmp	r4, r7
   12680:	blt	12638 <ReadInt8Data+0x1e4>
   12684:	cmp	r8, r4
   12688:	ble	132c4 <ReadInt8Data+0xe70>
   1268c:	sub	r8, r8, r4
   12690:	ldr	r3, [sl]
   12694:	mov	r2, r8
   12698:	ldr	r1, [sp, #4]
   1269c:	add	r0, sp, #16
   126a0:	bl	1588 <fread@plt>
   126a4:	add	r9, r9, r0
   126a8:	cmp	r8, #0
   126ac:	ble	132c4 <ReadInt8Data+0xe70>
   126b0:	add	r2, sp, #16
   126b4:	sub	r4, r4, #1
   126b8:	add	r6, r6, r4
   126bc:	add	r8, r2, r8, lsl #3
   126c0:	vldmia	r2!, {d7}
   126c4:	vcvt.s32.f64	s15, d7
   126c8:	vmov	r3, s15
   126cc:	strb	r3, [r6, #1]!
   126d0:	cmp	r2, r8
   126d4:	bne	126c0 <ReadInt8Data+0x26c>
   126d8:	b	132c4 <ReadInt8Data+0xe70>
   126dc:	ldr	r3, [sl]
   126e0:	mov	r2, r8
   126e4:	ldr	r1, [sp, #4]
   126e8:	add	r0, sp, #16
   126ec:	bl	1588 <fread@plt>
   126f0:	mov	r9, r0
   126f4:	cmp	r8, #0
   126f8:	ble	132c4 <ReadInt8Data+0xe70>
   126fc:	add	r2, sp, #16
   12700:	sub	r6, r6, #1
   12704:	add	r8, r2, r8, lsl #3
   12708:	vldmia	r2!, {d7}
   1270c:	vcvt.s32.f64	s15, d7
   12710:	vmov	r3, s15
   12714:	strb	r3, [r6, #1]!
   12718:	cmp	r2, r8
   1271c:	bne	12708 <ReadInt8Data+0x2b4>
   12720:	b	132c4 <ReadInt8Data+0xe70>
   12724:	ldr	r9, [sl, #20]
   12728:	cmp	r9, #0
   1272c:	beq	1286c <ReadInt8Data+0x418>
   12730:	cmp	r8, #256	; 0x100
   12734:	ble	1281c <ReadInt8Data+0x3c8>
   12738:	sub	r3, r8, #256	; 0x100
   1273c:	cmp	r3, #0
   12740:	movle	fp, #0
   12744:	movle	r9, fp
   12748:	ble	127bc <ReadInt8Data+0x368>
   1274c:	mov	fp, #0
   12750:	mov	r9, fp
   12754:	add	r2, sp, #16
   12758:	str	r2, [sp, #8]
   1275c:	add	r7, sp, #1040	; 0x410
   12760:	str	r8, [sp, #12]
   12764:	mov	r8, r3
   12768:	ldr	r3, [sl]
   1276c:	mov	r2, #256	; 0x100
   12770:	ldr	r1, [sp, #4]
   12774:	ldr	r4, [sp, #8]
   12778:	mov	r0, r4
   1277c:	bl	1588 <fread@plt>
   12780:	add	r9, r9, r0
   12784:	sub	r5, fp, #1
   12788:	add	r5, r6, r5
   1278c:	mov	r0, r4
   12790:	bl	1b38 <Mat_floatSwap>
   12794:	vcvt.s32.f32	s15, s0
   12798:	vmov	r3, s15
   1279c:	strb	r3, [r5, #1]!
   127a0:	add	r4, r4, #4
   127a4:	cmp	r4, r7
   127a8:	bne	1278c <ReadInt8Data+0x338>
   127ac:	add	fp, fp, #256	; 0x100
   127b0:	cmp	fp, r8
   127b4:	blt	12768 <ReadInt8Data+0x314>
   127b8:	ldr	r8, [sp, #12]
   127bc:	cmp	r8, fp
   127c0:	ble	132c4 <ReadInt8Data+0xe70>
   127c4:	sub	r8, r8, fp
   127c8:	ldr	r3, [sl]
   127cc:	mov	r2, r8
   127d0:	ldr	r1, [sp, #4]
   127d4:	add	r0, sp, #16
   127d8:	bl	1588 <fread@plt>
   127dc:	add	r9, r9, r0
   127e0:	cmp	r8, #0
   127e4:	ble	132c4 <ReadInt8Data+0xe70>
   127e8:	add	r5, sp, #16
   127ec:	add	r4, r6, fp
   127f0:	add	r8, r8, fp
   127f4:	add	r6, r6, r8
   127f8:	mov	r0, r5
   127fc:	bl	1b38 <Mat_floatSwap>
   12800:	vcvt.s32.f32	s15, s0
   12804:	vmov	r3, s15
   12808:	strb	r3, [r4], #1
   1280c:	add	r5, r5, #4
   12810:	cmp	r4, r6
   12814:	bne	127f8 <ReadInt8Data+0x3a4>
   12818:	b	132c4 <ReadInt8Data+0xe70>
   1281c:	ldr	r3, [sl]
   12820:	mov	r2, r8
   12824:	ldr	r1, [sp, #4]
   12828:	add	r0, sp, #16
   1282c:	bl	1588 <fread@plt>
   12830:	mov	r9, r0
   12834:	cmp	r8, #0
   12838:	ble	132c4 <ReadInt8Data+0xe70>
   1283c:	add	r5, sp, #16
   12840:	mov	r4, r6
   12844:	add	r6, r6, r8
   12848:	mov	r0, r5
   1284c:	bl	1b38 <Mat_floatSwap>
   12850:	vcvt.s32.f32	s15, s0
   12854:	vmov	r3, s15
   12858:	strb	r3, [r4], #1
   1285c:	add	r5, r5, #4
   12860:	cmp	r4, r6
   12864:	bne	12848 <ReadInt8Data+0x3f4>
   12868:	b	132c4 <ReadInt8Data+0xe70>
   1286c:	cmp	r8, #256	; 0x100
   12870:	ble	12930 <ReadInt8Data+0x4dc>
   12874:	sub	fp, r8, #256	; 0x100
   12878:	cmp	fp, #0
   1287c:	movle	r5, r9
   12880:	ble	128d8 <ReadInt8Data+0x484>
   12884:	mov	r5, r9
   12888:	add	r7, sp, #16
   1288c:	add	r4, sp, #1040	; 0x410
   12890:	ldr	r3, [sl]
   12894:	mov	r2, #256	; 0x100
   12898:	ldr	r1, [sp, #4]
   1289c:	mov	r0, r7
   128a0:	bl	1588 <fread@plt>
   128a4:	add	r9, r9, r0
   128a8:	mov	r2, r7
   128ac:	sub	r1, r5, #1
   128b0:	add	r1, r6, r1
   128b4:	vldmia	r2!, {s15}
   128b8:	vcvt.s32.f32	s15, s15
   128bc:	vmov	r3, s15
   128c0:	strb	r3, [r1, #1]!
   128c4:	cmp	r2, r4
   128c8:	bne	128b4 <ReadInt8Data+0x460>
   128cc:	add	r5, r5, #256	; 0x100
   128d0:	cmp	r5, fp
   128d4:	blt	12890 <ReadInt8Data+0x43c>
   128d8:	cmp	r8, r5
   128dc:	ble	132c4 <ReadInt8Data+0xe70>
   128e0:	sub	r8, r8, r5
   128e4:	ldr	r3, [sl]
   128e8:	mov	r2, r8
   128ec:	ldr	r1, [sp, #4]
   128f0:	add	r0, sp, #16
   128f4:	bl	1588 <fread@plt>
   128f8:	add	r9, r9, r0
   128fc:	cmp	r8, #0
   12900:	ble	132c4 <ReadInt8Data+0xe70>
   12904:	add	r2, sp, #16
   12908:	sub	r5, r5, #1
   1290c:	add	r6, r6, r5
   12910:	add	r8, r2, r8, lsl #2
   12914:	vldmia	r2!, {s15}
   12918:	vcvt.s32.f32	s15, s15
   1291c:	vmov	r3, s15
   12920:	strb	r3, [r6, #1]!
   12924:	cmp	r2, r8
   12928:	bne	12914 <ReadInt8Data+0x4c0>
   1292c:	b	132c4 <ReadInt8Data+0xe70>
   12930:	ldr	r3, [sl]
   12934:	mov	r2, r8
   12938:	ldr	r1, [sp, #4]
   1293c:	add	r0, sp, #16
   12940:	bl	1588 <fread@plt>
   12944:	mov	r9, r0
   12948:	cmp	r8, #0
   1294c:	ble	132c4 <ReadInt8Data+0xe70>
   12950:	add	r2, sp, #16
   12954:	sub	r6, r6, #1
   12958:	add	r8, r2, r8, lsl #2
   1295c:	vldmia	r2!, {s15}
   12960:	vcvt.s32.f32	s15, s15
   12964:	vmov	r3, s15
   12968:	strb	r3, [r6, #1]!
   1296c:	cmp	r2, r8
   12970:	bne	1295c <ReadInt8Data+0x508>
   12974:	b	132c4 <ReadInt8Data+0xe70>
   12978:	ldr	r9, [sl, #20]
   1297c:	cmp	r9, #0
   12980:	beq	12aa8 <ReadInt8Data+0x654>
   12984:	cmp	r8, #256	; 0x100
   12988:	ble	12a60 <ReadInt8Data+0x60c>
   1298c:	sub	r3, r8, #256	; 0x100
   12990:	cmp	r3, #0
   12994:	movle	fp, #0
   12998:	movle	r9, fp
   1299c:	ble	12a08 <ReadInt8Data+0x5b4>
   129a0:	mov	fp, #0
   129a4:	mov	r9, fp
   129a8:	add	r2, sp, #16
   129ac:	str	r2, [sp, #8]
   129b0:	add	r7, sp, #1040	; 0x410
   129b4:	str	r8, [sp, #12]
   129b8:	mov	r8, r3
   129bc:	ldr	r3, [sl]
   129c0:	mov	r2, #256	; 0x100
   129c4:	ldr	r1, [sp, #4]
   129c8:	ldr	r4, [sp, #8]
   129cc:	mov	r0, r4
   129d0:	bl	1588 <fread@plt>
   129d4:	add	r9, r9, r0
   129d8:	sub	r5, fp, #1
   129dc:	add	r5, r6, r5
   129e0:	mov	r0, r4
   129e4:	bl	1a20 <Mat_int32Swap>
   129e8:	strb	r0, [r5, #1]!
   129ec:	add	r4, r4, #4
   129f0:	cmp	r4, r7
   129f4:	bne	129e0 <ReadInt8Data+0x58c>
   129f8:	add	fp, fp, #256	; 0x100
   129fc:	cmp	fp, r8
   12a00:	blt	129bc <ReadInt8Data+0x568>
   12a04:	ldr	r8, [sp, #12]
   12a08:	cmp	r8, fp
   12a0c:	ble	132c4 <ReadInt8Data+0xe70>
   12a10:	sub	r8, r8, fp
   12a14:	ldr	r3, [sl]
   12a18:	mov	r2, r8
   12a1c:	ldr	r1, [sp, #4]
   12a20:	add	r0, sp, #16
   12a24:	bl	1588 <fread@plt>
   12a28:	add	r9, r9, r0
   12a2c:	cmp	r8, #0
   12a30:	ble	132c4 <ReadInt8Data+0xe70>
   12a34:	add	r5, sp, #16
   12a38:	add	r4, r6, fp
   12a3c:	add	r8, r8, fp
   12a40:	add	r6, r6, r8
   12a44:	mov	r0, r5
   12a48:	bl	1a20 <Mat_int32Swap>
   12a4c:	strb	r0, [r4], #1
   12a50:	add	r5, r5, #4
   12a54:	cmp	r4, r6
   12a58:	bne	12a44 <ReadInt8Data+0x5f0>
   12a5c:	b	132c4 <ReadInt8Data+0xe70>
   12a60:	ldr	r3, [sl]
   12a64:	mov	r2, r8
   12a68:	ldr	r1, [sp, #4]
   12a6c:	add	r0, sp, #16
   12a70:	bl	1588 <fread@plt>
   12a74:	mov	r9, r0
   12a78:	cmp	r8, #0
   12a7c:	ble	132c4 <ReadInt8Data+0xe70>
   12a80:	add	r5, sp, #16
   12a84:	mov	r4, r6
   12a88:	add	r6, r6, r8
   12a8c:	mov	r0, r5
   12a90:	bl	1a20 <Mat_int32Swap>
   12a94:	strb	r0, [r4], #1
   12a98:	add	r5, r5, #4
   12a9c:	cmp	r4, r6
   12aa0:	bne	12a8c <ReadInt8Data+0x638>
   12aa4:	b	132c4 <ReadInt8Data+0xe70>
   12aa8:	cmp	r8, #256	; 0x100
   12aac:	ble	12b64 <ReadInt8Data+0x710>
   12ab0:	sub	fp, r8, #256	; 0x100
   12ab4:	cmp	fp, #0
   12ab8:	movle	r5, r9
   12abc:	ble	12b0c <ReadInt8Data+0x6b8>
   12ac0:	mov	r5, r9
   12ac4:	add	r7, sp, #16
   12ac8:	add	r4, r7, #1020	; 0x3fc
   12acc:	ldr	r3, [sl]
   12ad0:	mov	r2, #256	; 0x100
   12ad4:	ldr	r1, [sp, #4]
   12ad8:	mov	r0, r7
   12adc:	bl	1588 <fread@plt>
   12ae0:	add	r9, r9, r0
   12ae4:	sub	r3, r7, #4
   12ae8:	sub	r2, r5, #1
   12aec:	add	r2, r6, r2
   12af0:	ldr	r1, [r3, #4]!
   12af4:	strb	r1, [r2, #1]!
   12af8:	cmp	r3, r4
   12afc:	bne	12af0 <ReadInt8Data+0x69c>
   12b00:	add	r5, r5, #256	; 0x100
   12b04:	cmp	r5, fp
   12b08:	blt	12acc <ReadInt8Data+0x678>
   12b0c:	cmp	r8, r5
   12b10:	ble	132c4 <ReadInt8Data+0xe70>
   12b14:	sub	r8, r8, r5
   12b18:	ldr	r3, [sl]
   12b1c:	mov	r2, r8
   12b20:	ldr	r1, [sp, #4]
   12b24:	add	r0, sp, #16
   12b28:	bl	1588 <fread@plt>
   12b2c:	add	r9, r9, r0
   12b30:	cmp	r8, #0
   12b34:	ble	132c4 <ReadInt8Data+0xe70>
   12b38:	add	r1, sp, #16
   12b3c:	add	r3, sp, #12
   12b40:	sub	r5, r5, #1
   12b44:	add	r6, r6, r5
   12b48:	sub	r8, r8, #-1073741823	; 0xc0000001
   12b4c:	add	r1, r1, r8, lsl #2
   12b50:	ldr	r2, [r3, #4]!
   12b54:	strb	r2, [r6, #1]!
   12b58:	cmp	r3, r1
   12b5c:	bne	12b50 <ReadInt8Data+0x6fc>
   12b60:	b	132c4 <ReadInt8Data+0xe70>
   12b64:	ldr	r3, [sl]
   12b68:	mov	r2, r8
   12b6c:	ldr	r1, [sp, #4]
   12b70:	add	r0, sp, #16
   12b74:	bl	1588 <fread@plt>
   12b78:	mov	r9, r0
   12b7c:	cmp	r8, #0
   12b80:	ble	132c4 <ReadInt8Data+0xe70>
   12b84:	add	r1, sp, #16
   12b88:	add	r3, sp, #12
   12b8c:	sub	r6, r6, #1
   12b90:	sub	r8, r8, #-1073741823	; 0xc0000001
   12b94:	add	r1, r1, r8, lsl #2
   12b98:	ldr	r2, [r3, #4]!
   12b9c:	strb	r2, [r6, #1]!
   12ba0:	cmp	r3, r1
   12ba4:	bne	12b98 <ReadInt8Data+0x744>
   12ba8:	b	132c4 <ReadInt8Data+0xe70>
   12bac:	ldr	r9, [sl, #20]
   12bb0:	cmp	r9, #0
   12bb4:	beq	12cdc <ReadInt8Data+0x888>
   12bb8:	cmp	r8, #256	; 0x100
   12bbc:	ble	12c94 <ReadInt8Data+0x840>
   12bc0:	sub	r3, r8, #256	; 0x100
   12bc4:	cmp	r3, #0
   12bc8:	movle	fp, #0
   12bcc:	movle	r9, fp
   12bd0:	ble	12c3c <ReadInt8Data+0x7e8>
   12bd4:	mov	fp, #0
   12bd8:	mov	r9, fp
   12bdc:	add	r2, sp, #16
   12be0:	str	r2, [sp, #8]
   12be4:	add	r7, sp, #1040	; 0x410
   12be8:	str	r8, [sp, #12]
   12bec:	mov	r8, r3
   12bf0:	ldr	r3, [sl]
   12bf4:	mov	r2, #256	; 0x100
   12bf8:	ldr	r1, [sp, #4]
   12bfc:	ldr	r4, [sp, #8]
   12c00:	mov	r0, r4
   12c04:	bl	1588 <fread@plt>
   12c08:	add	r9, r9, r0
   12c0c:	sub	r5, fp, #1
   12c10:	add	r5, r6, r5
   12c14:	mov	r0, r4
   12c18:	bl	1a88 <Mat_uint32Swap>
   12c1c:	strb	r0, [r5, #1]!
   12c20:	add	r4, r4, #4
   12c24:	cmp	r4, r7
   12c28:	bne	12c14 <ReadInt8Data+0x7c0>
   12c2c:	add	fp, fp, #256	; 0x100
   12c30:	cmp	fp, r8
   12c34:	blt	12bf0 <ReadInt8Data+0x79c>
   12c38:	ldr	r8, [sp, #12]
   12c3c:	cmp	r8, fp
   12c40:	ble	132c4 <ReadInt8Data+0xe70>
   12c44:	sub	r8, r8, fp
   12c48:	ldr	r3, [sl]
   12c4c:	mov	r2, r8
   12c50:	ldr	r1, [sp, #4]
   12c54:	add	r0, sp, #16
   12c58:	bl	1588 <fread@plt>
   12c5c:	add	r9, r9, r0
   12c60:	cmp	r8, #0
   12c64:	ble	132c4 <ReadInt8Data+0xe70>
   12c68:	add	r5, sp, #16
   12c6c:	add	r4, r6, fp
   12c70:	add	r8, r8, fp
   12c74:	add	r6, r6, r8
   12c78:	mov	r0, r5
   12c7c:	bl	1a88 <Mat_uint32Swap>
   12c80:	strb	r0, [r4], #1
   12c84:	add	r5, r5, #4
   12c88:	cmp	r4, r6
   12c8c:	bne	12c78 <ReadInt8Data+0x824>
   12c90:	b	132c4 <ReadInt8Data+0xe70>
   12c94:	ldr	r3, [sl]
   12c98:	mov	r2, r8
   12c9c:	ldr	r1, [sp, #4]
   12ca0:	add	r0, sp, #16
   12ca4:	bl	1588 <fread@plt>
   12ca8:	mov	r9, r0
   12cac:	cmp	r8, #0
   12cb0:	ble	132c4 <ReadInt8Data+0xe70>
   12cb4:	add	r5, sp, #16
   12cb8:	mov	r4, r6
   12cbc:	add	r6, r6, r8
   12cc0:	mov	r0, r5
   12cc4:	bl	1a88 <Mat_uint32Swap>
   12cc8:	strb	r0, [r4], #1
   12ccc:	add	r5, r5, #4
   12cd0:	cmp	r4, r6
   12cd4:	bne	12cc0 <ReadInt8Data+0x86c>
   12cd8:	b	132c4 <ReadInt8Data+0xe70>
   12cdc:	cmp	r8, #256	; 0x100
   12ce0:	ble	12d98 <ReadInt8Data+0x944>
   12ce4:	sub	fp, r8, #256	; 0x100
   12ce8:	cmp	fp, #0
   12cec:	movle	r5, r9
   12cf0:	ble	12d40 <ReadInt8Data+0x8ec>
   12cf4:	mov	r5, r9
   12cf8:	add	r7, sp, #16
   12cfc:	add	r4, r7, #1020	; 0x3fc
   12d00:	ldr	r3, [sl]
   12d04:	mov	r2, #256	; 0x100
   12d08:	ldr	r1, [sp, #4]
   12d0c:	mov	r0, r7
   12d10:	bl	1588 <fread@plt>
   12d14:	add	r9, r9, r0
   12d18:	sub	r3, r7, #4
   12d1c:	sub	r2, r5, #1
   12d20:	add	r2, r6, r2
   12d24:	ldr	r1, [r3, #4]!
   12d28:	strb	r1, [r2, #1]!
   12d2c:	cmp	r3, r4
   12d30:	bne	12d24 <ReadInt8Data+0x8d0>
   12d34:	add	r5, r5, #256	; 0x100
   12d38:	cmp	r5, fp
   12d3c:	blt	12d00 <ReadInt8Data+0x8ac>
   12d40:	cmp	r8, r5
   12d44:	ble	132c4 <ReadInt8Data+0xe70>
   12d48:	sub	r8, r8, r5
   12d4c:	ldr	r3, [sl]
   12d50:	mov	r2, r8
   12d54:	ldr	r1, [sp, #4]
   12d58:	add	r0, sp, #16
   12d5c:	bl	1588 <fread@plt>
   12d60:	add	r9, r9, r0
   12d64:	cmp	r8, #0
   12d68:	ble	132c4 <ReadInt8Data+0xe70>
   12d6c:	add	r1, sp, #16
   12d70:	add	r3, sp, #12
   12d74:	sub	r5, r5, #1
   12d78:	add	r6, r6, r5
   12d7c:	sub	r8, r8, #-1073741823	; 0xc0000001
   12d80:	add	r1, r1, r8, lsl #2
   12d84:	ldr	r2, [r3, #4]!
   12d88:	strb	r2, [r6, #1]!
   12d8c:	cmp	r3, r1
   12d90:	bne	12d84 <ReadInt8Data+0x930>
   12d94:	b	132c4 <ReadInt8Data+0xe70>
   12d98:	ldr	r3, [sl]
   12d9c:	mov	r2, r8
   12da0:	ldr	r1, [sp, #4]
   12da4:	add	r0, sp, #16
   12da8:	bl	1588 <fread@plt>
   12dac:	mov	r9, r0
   12db0:	cmp	r8, #0
   12db4:	ble	132c4 <ReadInt8Data+0xe70>
   12db8:	add	r1, sp, #16
   12dbc:	add	r3, sp, #12
   12dc0:	sub	r6, r6, #1
   12dc4:	sub	r8, r8, #-1073741823	; 0xc0000001
   12dc8:	add	r1, r1, r8, lsl #2
   12dcc:	ldr	r2, [r3, #4]!
   12dd0:	strb	r2, [r6, #1]!
   12dd4:	cmp	r3, r1
   12dd8:	bne	12dcc <ReadInt8Data+0x978>
   12ddc:	b	132c4 <ReadInt8Data+0xe70>
   12de0:	ldr	r9, [sl, #20]
   12de4:	cmp	r9, #0
   12de8:	beq	12f10 <ReadInt8Data+0xabc>
   12dec:	cmp	r8, #256	; 0x100
   12df0:	ble	12ec8 <ReadInt8Data+0xa74>
   12df4:	sub	r3, r8, #256	; 0x100
   12df8:	cmp	r3, #0
   12dfc:	movle	fp, #0
   12e00:	movle	r9, fp
   12e04:	ble	12e70 <ReadInt8Data+0xa1c>
   12e08:	mov	fp, #0
   12e0c:	mov	r9, fp
   12e10:	add	r2, sp, #16
   12e14:	str	r2, [sp, #8]
   12e18:	add	r7, sp, #528	; 0x210
   12e1c:	str	r8, [sp, #12]
   12e20:	mov	r8, r3
   12e24:	ldr	r3, [sl]
   12e28:	mov	r2, #256	; 0x100
   12e2c:	ldr	r1, [sp, #4]
   12e30:	ldr	r4, [sp, #8]
   12e34:	mov	r0, r4
   12e38:	bl	1588 <fread@plt>
   12e3c:	add	r9, r9, r0
   12e40:	sub	r5, fp, #1
   12e44:	add	r5, r6, r5
   12e48:	mov	r0, r4
   12e4c:	bl	1ae4 <Mat_int16Swap>
   12e50:	strb	r0, [r5, #1]!
   12e54:	add	r4, r4, #2
   12e58:	cmp	r4, r7
   12e5c:	bne	12e48 <ReadInt8Data+0x9f4>
   12e60:	add	fp, fp, #256	; 0x100
   12e64:	cmp	fp, r8
   12e68:	blt	12e24 <ReadInt8Data+0x9d0>
   12e6c:	ldr	r8, [sp, #12]
   12e70:	cmp	r8, fp
   12e74:	ble	132c4 <ReadInt8Data+0xe70>
   12e78:	sub	r8, r8, fp
   12e7c:	ldr	r3, [sl]
   12e80:	mov	r2, r8
   12e84:	ldr	r1, [sp, #4]
   12e88:	add	r0, sp, #16
   12e8c:	bl	1588 <fread@plt>
   12e90:	add	r9, r9, r0
   12e94:	cmp	r8, #0
   12e98:	ble	132c4 <ReadInt8Data+0xe70>
   12e9c:	add	r5, sp, #16
   12ea0:	add	r4, r6, fp
   12ea4:	add	fp, fp, r8
   12ea8:	add	r6, r6, fp
   12eac:	mov	r0, r5
   12eb0:	bl	1ae4 <Mat_int16Swap>
   12eb4:	strb	r0, [r4], #1
   12eb8:	add	r5, r5, #2
   12ebc:	cmp	r4, r6
   12ec0:	bne	12eac <ReadInt8Data+0xa58>
   12ec4:	b	132c4 <ReadInt8Data+0xe70>
   12ec8:	ldr	r3, [sl]
   12ecc:	mov	r2, r8
   12ed0:	ldr	r1, [sp, #4]
   12ed4:	add	r0, sp, #16
   12ed8:	bl	1588 <fread@plt>
   12edc:	mov	r9, r0
   12ee0:	cmp	r8, #0
   12ee4:	ble	132c4 <ReadInt8Data+0xe70>
   12ee8:	add	r5, sp, #16
   12eec:	mov	r4, r6
   12ef0:	add	r6, r6, r8
   12ef4:	mov	r0, r5
   12ef8:	bl	1ae4 <Mat_int16Swap>
   12efc:	strb	r0, [r4], #1
   12f00:	add	r5, r5, #2
   12f04:	cmp	r6, r4
   12f08:	bne	12ef4 <ReadInt8Data+0xaa0>
   12f0c:	b	132c4 <ReadInt8Data+0xe70>
   12f10:	cmp	r8, #256	; 0x100
   12f14:	ble	12fd0 <ReadInt8Data+0xb7c>
   12f18:	sub	fp, r8, #256	; 0x100
   12f1c:	cmp	fp, #0
   12f20:	movle	r5, r9
   12f24:	ble	12f78 <ReadInt8Data+0xb24>
   12f28:	mov	r5, r9
   12f2c:	add	r7, sp, #16
   12f30:	add	r4, r7, #508	; 0x1fc
   12f34:	add	r4, r4, #2
   12f38:	ldr	r3, [sl]
   12f3c:	mov	r2, #256	; 0x100
   12f40:	ldr	r1, [sp, #4]
   12f44:	mov	r0, r7
   12f48:	bl	1588 <fread@plt>
   12f4c:	add	r9, r9, r0
   12f50:	sub	r3, r7, #2
   12f54:	sub	r2, r5, #1
   12f58:	add	r2, r6, r2
   12f5c:	ldrh	r1, [r3, #2]!
   12f60:	strb	r1, [r2, #1]!
   12f64:	cmp	r3, r4
   12f68:	bne	12f5c <ReadInt8Data+0xb08>
   12f6c:	add	r5, r5, #256	; 0x100
   12f70:	cmp	r5, fp
   12f74:	blt	12f38 <ReadInt8Data+0xae4>
   12f78:	cmp	r8, r5
   12f7c:	ble	132c4 <ReadInt8Data+0xe70>
   12f80:	sub	r8, r8, r5
   12f84:	ldr	r3, [sl]
   12f88:	mov	r2, r8
   12f8c:	ldr	r1, [sp, #4]
   12f90:	add	r0, sp, #16
   12f94:	bl	1588 <fread@plt>
   12f98:	add	r9, r9, r0
   12f9c:	cmp	r8, #0
   12fa0:	ble	132c4 <ReadInt8Data+0xe70>
   12fa4:	add	r1, sp, #16
   12fa8:	add	r3, sp, #14
   12fac:	sub	r5, r5, #1
   12fb0:	add	r6, r6, r5
   12fb4:	sub	r8, r8, #-2147483647	; 0x80000001
   12fb8:	add	r1, r1, r8, lsl #1
   12fbc:	ldrh	r2, [r3, #2]!
   12fc0:	strb	r2, [r6, #1]!
   12fc4:	cmp	r3, r1
   12fc8:	bne	12fbc <ReadInt8Data+0xb68>
   12fcc:	b	132c4 <ReadInt8Data+0xe70>
   12fd0:	ldr	r3, [sl]
   12fd4:	mov	r2, r8
   12fd8:	ldr	r1, [sp, #4]
   12fdc:	add	r0, sp, #16
   12fe0:	bl	1588 <fread@plt>
   12fe4:	mov	r9, r0
   12fe8:	cmp	r8, #0
   12fec:	ble	132c4 <ReadInt8Data+0xe70>
   12ff0:	add	r1, sp, #16
   12ff4:	add	r3, sp, #14
   12ff8:	sub	r6, r6, #1
   12ffc:	sub	r8, r8, #-2147483647	; 0x80000001
   13000:	add	r1, r1, r8, lsl #1
   13004:	ldrh	r2, [r3, #2]!
   13008:	strb	r2, [r6, #1]!
   1300c:	cmp	r3, r1
   13010:	bne	13004 <ReadInt8Data+0xbb0>
   13014:	b	132c4 <ReadInt8Data+0xe70>
   13018:	ldr	r9, [sl, #20]
   1301c:	cmp	r9, #0
   13020:	beq	13148 <ReadInt8Data+0xcf4>
   13024:	cmp	r8, #256	; 0x100
   13028:	ble	13100 <ReadInt8Data+0xcac>
   1302c:	sub	r3, r8, #256	; 0x100
   13030:	cmp	r3, #0
   13034:	movle	fp, #0
   13038:	movle	r9, fp
   1303c:	ble	130a8 <ReadInt8Data+0xc54>
   13040:	mov	fp, #0
   13044:	mov	r9, fp
   13048:	add	r2, sp, #16
   1304c:	str	r2, [sp, #8]
   13050:	add	r7, sp, #528	; 0x210
   13054:	str	r8, [sp, #12]
   13058:	mov	r8, r3
   1305c:	ldr	r3, [sl]
   13060:	mov	r2, #256	; 0x100
   13064:	ldr	r1, [sp, #4]
   13068:	ldr	r4, [sp, #8]
   1306c:	mov	r0, r4
   13070:	bl	1588 <fread@plt>
   13074:	add	r9, r9, r0
   13078:	sub	r5, fp, #1
   1307c:	add	r5, r6, r5
   13080:	mov	r0, r4
   13084:	bl	1b1c <Mat_uint16Swap>
   13088:	strb	r0, [r5, #1]!
   1308c:	add	r4, r4, #2
   13090:	cmp	r4, r7
   13094:	bne	13080 <ReadInt8Data+0xc2c>
   13098:	add	fp, fp, #256	; 0x100
   1309c:	cmp	fp, r8
   130a0:	blt	1305c <ReadInt8Data+0xc08>
   130a4:	ldr	r8, [sp, #12]
   130a8:	cmp	r8, fp
   130ac:	ble	132c4 <ReadInt8Data+0xe70>
   130b0:	sub	r8, r8, fp
   130b4:	ldr	r3, [sl]
   130b8:	mov	r2, r8
   130bc:	ldr	r1, [sp, #4]
   130c0:	add	r0, sp, #16
   130c4:	bl	1588 <fread@plt>
   130c8:	add	r9, r9, r0
   130cc:	cmp	r8, #0
   130d0:	ble	132c4 <ReadInt8Data+0xe70>
   130d4:	add	r5, sp, #16
   130d8:	add	r4, r6, fp
   130dc:	add	r8, r8, fp
   130e0:	add	r6, r6, r8
   130e4:	mov	r0, r5
   130e8:	bl	1b1c <Mat_uint16Swap>
   130ec:	strb	r0, [r4], #1
   130f0:	add	r5, r5, #2
   130f4:	cmp	r4, r6
   130f8:	bne	130e4 <ReadInt8Data+0xc90>
   130fc:	b	132c4 <ReadInt8Data+0xe70>
   13100:	ldr	r3, [sl]
   13104:	mov	r2, r8
   13108:	ldr	r1, [sp, #4]
   1310c:	add	r0, sp, #16
   13110:	bl	1588 <fread@plt>
   13114:	mov	r9, r0
   13118:	cmp	r8, #0
   1311c:	ble	132c4 <ReadInt8Data+0xe70>
   13120:	add	r5, sp, #16
   13124:	mov	r4, r6
   13128:	add	r6, r6, r8
   1312c:	mov	r0, r5
   13130:	bl	1b1c <Mat_uint16Swap>
   13134:	strb	r0, [r4], #1
   13138:	add	r5, r5, #2
   1313c:	cmp	r4, r6
   13140:	bne	1312c <ReadInt8Data+0xcd8>
   13144:	b	132c4 <ReadInt8Data+0xe70>
   13148:	cmp	r8, #256	; 0x100
   1314c:	ble	13208 <ReadInt8Data+0xdb4>
   13150:	sub	fp, r8, #256	; 0x100
   13154:	cmp	fp, #0
   13158:	movle	r5, r9
   1315c:	ble	131b0 <ReadInt8Data+0xd5c>
   13160:	mov	r5, r9
   13164:	add	r7, sp, #16
   13168:	add	r4, r7, #508	; 0x1fc
   1316c:	add	r4, r4, #2
   13170:	ldr	r3, [sl]
   13174:	mov	r2, #256	; 0x100
   13178:	ldr	r1, [sp, #4]
   1317c:	mov	r0, r7
   13180:	bl	1588 <fread@plt>
   13184:	add	r9, r9, r0
   13188:	sub	r3, r7, #2
   1318c:	sub	r2, r5, #1
   13190:	add	r2, r6, r2
   13194:	ldrh	r1, [r3, #2]!
   13198:	strb	r1, [r2, #1]!
   1319c:	cmp	r3, r4
   131a0:	bne	13194 <ReadInt8Data+0xd40>
   131a4:	add	r5, r5, #256	; 0x100
   131a8:	cmp	r5, fp
   131ac:	blt	13170 <ReadInt8Data+0xd1c>
   131b0:	cmp	r8, r5
   131b4:	ble	132c4 <ReadInt8Data+0xe70>
   131b8:	sub	r8, r8, r5
   131bc:	ldr	r3, [sl]
   131c0:	mov	r2, r8
   131c4:	ldr	r1, [sp, #4]
   131c8:	add	r0, sp, #16
   131cc:	bl	1588 <fread@plt>
   131d0:	add	r9, r9, r0
   131d4:	cmp	r8, #0
   131d8:	ble	132c4 <ReadInt8Data+0xe70>
   131dc:	add	r1, sp, #16
   131e0:	add	r3, sp, #14
   131e4:	sub	r5, r5, #1
   131e8:	add	r6, r6, r5
   131ec:	sub	r8, r8, #-2147483647	; 0x80000001
   131f0:	add	r1, r1, r8, lsl #1
   131f4:	ldrh	r2, [r3, #2]!
   131f8:	strb	r2, [r6, #1]!
   131fc:	cmp	r3, r1
   13200:	bne	131f4 <ReadInt8Data+0xda0>
   13204:	b	132c4 <ReadInt8Data+0xe70>
   13208:	ldr	r3, [sl]
   1320c:	mov	r2, r8
   13210:	ldr	r1, [sp, #4]
   13214:	add	r0, sp, #16
   13218:	bl	1588 <fread@plt>
   1321c:	mov	r9, r0
   13220:	cmp	r8, #0
   13224:	ble	132c4 <ReadInt8Data+0xe70>
   13228:	add	r1, sp, #16
   1322c:	add	r3, sp, #14
   13230:	sub	r6, r6, #1
   13234:	sub	r8, r8, #-2147483647	; 0x80000001
   13238:	add	r1, r1, r8, lsl #1
   1323c:	ldrh	r2, [r3, #2]!
   13240:	strb	r2, [r6, #1]!
   13244:	cmp	r3, r1
   13248:	bne	1323c <ReadInt8Data+0xde8>
   1324c:	b	132c4 <ReadInt8Data+0xe70>
   13250:	cmp	r8, #256	; 0x100
   13254:	ble	132d8 <ReadInt8Data+0xe84>
   13258:	sub	fp, r8, #256	; 0x100
   1325c:	cmp	fp, #0
   13260:	movle	r5, #0
   13264:	movle	r9, r5
   13268:	ble	132bc <ReadInt8Data+0xe68>
   1326c:	mov	r5, #0
   13270:	mov	r9, r5
   13274:	add	r7, sp, #16
   13278:	add	r4, r7, #255	; 0xff
   1327c:	ldr	r3, [sl]
   13280:	mov	r2, #256	; 0x100
   13284:	ldr	r1, [sp, #4]
   13288:	mov	r0, r7
   1328c:	bl	1588 <fread@plt>
   13290:	add	r9, r9, r0
   13294:	sub	r3, r7, #1
   13298:	sub	r2, r5, #1
   1329c:	add	r2, r6, r2
   132a0:	ldrb	r1, [r3, #1]!
   132a4:	strb	r1, [r2, #1]!
   132a8:	cmp	r3, r4
   132ac:	bne	132a0 <ReadInt8Data+0xe4c>
   132b0:	add	r5, r5, #256	; 0x100
   132b4:	cmp	r5, fp
   132b8:	blt	1327c <ReadInt8Data+0xe28>
   132bc:	cmp	r8, r5
   132c0:	bgt	13320 <ReadInt8Data+0xecc>
   132c4:	ldr	r3, [sp, #4]
   132c8:	mul	r0, r3, r9
   132cc:	add	sp, sp, #2064	; 0x810
   132d0:	add	sp, sp, #4
   132d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132d8:	ldr	r3, [sl]
   132dc:	mov	r2, r8
   132e0:	ldr	r1, [sp, #4]
   132e4:	add	r0, sp, #16
   132e8:	bl	1588 <fread@plt>
   132ec:	mov	r9, r0
   132f0:	cmp	r8, #0
   132f4:	ble	132c4 <ReadInt8Data+0xe70>
   132f8:	add	r1, sp, #16
   132fc:	add	r3, sp, #15
   13300:	sub	r6, r6, #1
   13304:	sub	r8, r8, #1
   13308:	add	r1, r1, r8
   1330c:	ldrb	r2, [r3, #1]!
   13310:	strb	r2, [r6, #1]!
   13314:	cmp	r1, r3
   13318:	bne	1330c <ReadInt8Data+0xeb8>
   1331c:	b	132c4 <ReadInt8Data+0xe70>
   13320:	sub	r8, r8, r5
   13324:	ldr	r3, [sl]
   13328:	mov	r2, r8
   1332c:	ldr	r1, [sp, #4]
   13330:	add	r0, sp, #16
   13334:	bl	1588 <fread@plt>
   13338:	add	r9, r9, r0
   1333c:	cmp	r8, #0
   13340:	ble	132c4 <ReadInt8Data+0xe70>
   13344:	add	r1, sp, #16
   13348:	add	r3, sp, #15
   1334c:	sub	r5, r5, #1
   13350:	add	r6, r6, r5
   13354:	sub	r8, r8, #1
   13358:	add	r1, r1, r8
   1335c:	ldrb	r2, [r3, #1]!
   13360:	strb	r2, [r6, #1]!
   13364:	cmp	r1, r3
   13368:	bne	1335c <ReadInt8Data+0xf08>
   1336c:	b	132c4 <ReadInt8Data+0xe70>
   13370:	cmp	r8, #256	; 0x100
   13374:	ble	13434 <ReadInt8Data+0xfe0>
   13378:	sub	fp, r8, #256	; 0x100
   1337c:	cmp	fp, #0
   13380:	movle	r5, #0
   13384:	movle	r9, r5
   13388:	ble	133dc <ReadInt8Data+0xf88>
   1338c:	mov	r5, #0
   13390:	mov	r9, r5
   13394:	add	r7, sp, #16
   13398:	add	r4, r7, #255	; 0xff
   1339c:	ldr	r3, [sl]
   133a0:	mov	r2, #256	; 0x100
   133a4:	ldr	r1, [sp, #4]
   133a8:	mov	r0, r7
   133ac:	bl	1588 <fread@plt>
   133b0:	add	r9, r9, r0
   133b4:	sub	r3, r7, #1
   133b8:	sub	r2, r5, #1
   133bc:	add	r2, r6, r2
   133c0:	ldrb	r1, [r3, #1]!
   133c4:	strb	r1, [r2, #1]!
   133c8:	cmp	r4, r3
   133cc:	bne	133c0 <ReadInt8Data+0xf6c>
   133d0:	add	r5, r5, #256	; 0x100
   133d4:	cmp	r5, fp
   133d8:	blt	1339c <ReadInt8Data+0xf48>
   133dc:	cmp	r8, r5
   133e0:	ble	132c4 <ReadInt8Data+0xe70>
   133e4:	sub	r8, r8, r5
   133e8:	ldr	r3, [sl]
   133ec:	mov	r2, r8
   133f0:	ldr	r1, [sp, #4]
   133f4:	add	r0, sp, #16
   133f8:	bl	1588 <fread@plt>
   133fc:	add	r9, r9, r0
   13400:	cmp	r8, #0
   13404:	ble	132c4 <ReadInt8Data+0xe70>
   13408:	add	r1, sp, #16
   1340c:	add	r3, sp, #15
   13410:	sub	r5, r5, #1
   13414:	add	r6, r6, r5
   13418:	sub	r8, r8, #1
   1341c:	add	r1, r1, r8
   13420:	ldrb	r2, [r3, #1]!
   13424:	strb	r2, [r6, #1]!
   13428:	cmp	r1, r3
   1342c:	bne	13420 <ReadInt8Data+0xfcc>
   13430:	b	132c4 <ReadInt8Data+0xe70>
   13434:	ldr	r3, [sl]
   13438:	mov	r2, r8
   1343c:	ldr	r1, [sp, #4]
   13440:	add	r0, sp, #16
   13444:	bl	1588 <fread@plt>
   13448:	mov	r9, r0
   1344c:	cmp	r8, #0
   13450:	ble	132c4 <ReadInt8Data+0xe70>
   13454:	add	r1, sp, #16
   13458:	add	r3, sp, #15
   1345c:	sub	r6, r6, #1
   13460:	sub	r8, r8, #1
   13464:	add	r1, r1, r8
   13468:	ldrb	r2, [r3, #1]!
   1346c:	strb	r2, [r6, #1]!
   13470:	cmp	r3, r1
   13474:	bne	13468 <ReadInt8Data+0x1014>
   13478:	b	132c4 <ReadInt8Data+0xe70>
   1347c:	cmp	r4, #12
   13480:	beq	13574 <ReadInt8Data+0x1120>
   13484:	cmp	r4, #13
   13488:	movne	r9, #0
   1348c:	bne	132c4 <ReadInt8Data+0xe70>
   13490:	ldr	r9, [sl, #20]
   13494:	cmp	r9, #0
   13498:	beq	137f0 <ReadInt8Data+0x139c>
   1349c:	cmp	r8, #256	; 0x100
   134a0:	ble	137a8 <ReadInt8Data+0x1354>
   134a4:	sub	r3, r8, #256	; 0x100
   134a8:	str	r3, [sp, #8]
   134ac:	cmp	r3, #0
   134b0:	movle	fp, #0
   134b4:	movle	r9, fp
   134b8:	ble	1351c <ReadInt8Data+0x10c8>
   134bc:	mov	fp, #0
   134c0:	mov	r9, fp
   134c4:	add	r3, sp, #16
   134c8:	str	r3, [sp, #12]
   134cc:	ldr	r3, [sl]
   134d0:	mov	r2, #256	; 0x100
   134d4:	ldr	r1, [sp, #4]
   134d8:	ldr	r4, [sp, #12]
   134dc:	mov	r0, r4
   134e0:	bl	1588 <fread@plt>
   134e4:	add	r9, r9, r0
   134e8:	sub	r5, fp, #1
   134ec:	add	r5, r6, r5
   134f0:	add	r7, sp, #2064	; 0x810
   134f4:	mov	r0, r4
   134f8:	bl	1984 <Mat_uint64Swap>
   134fc:	strb	r0, [r5, #1]!
   13500:	add	r4, r4, #8
   13504:	cmp	r7, r4
   13508:	bne	134f4 <ReadInt8Data+0x10a0>
   1350c:	add	fp, fp, #256	; 0x100
   13510:	ldr	r3, [sp, #8]
   13514:	cmp	fp, r3
   13518:	blt	134cc <ReadInt8Data+0x1078>
   1351c:	cmp	r8, fp
   13520:	ble	132c4 <ReadInt8Data+0xe70>
   13524:	sub	r8, r8, fp
   13528:	ldr	r3, [sl]
   1352c:	mov	r2, r8
   13530:	ldr	r1, [sp, #4]
   13534:	add	r0, sp, #16
   13538:	bl	1588 <fread@plt>
   1353c:	add	r9, r9, r0
   13540:	cmp	r8, #0
   13544:	ble	132c4 <ReadInt8Data+0xe70>
   13548:	add	r5, sp, #16
   1354c:	add	r4, r6, fp
   13550:	add	r8, r8, fp
   13554:	add	r6, r6, r8
   13558:	mov	r0, r5
   1355c:	bl	1984 <Mat_uint64Swap>
   13560:	strb	r0, [r4], #1
   13564:	add	r5, r5, #8
   13568:	cmp	r6, r4
   1356c:	bne	13558 <ReadInt8Data+0x1104>
   13570:	b	132c4 <ReadInt8Data+0xe70>
   13574:	ldr	r9, [sl, #20]
   13578:	cmp	r9, #0
   1357c:	beq	136a0 <ReadInt8Data+0x124c>
   13580:	cmp	r8, #256	; 0x100
   13584:	ble	13658 <ReadInt8Data+0x1204>
   13588:	sub	r3, r8, #256	; 0x100
   1358c:	str	r3, [sp, #8]
   13590:	cmp	r3, #0
   13594:	movle	fp, #0
   13598:	movle	r9, fp
   1359c:	ble	13600 <ReadInt8Data+0x11ac>
   135a0:	mov	fp, #0
   135a4:	mov	r9, fp
   135a8:	add	r3, sp, #16
   135ac:	str	r3, [sp, #12]
   135b0:	ldr	r3, [sl]
   135b4:	mov	r2, #256	; 0x100
   135b8:	ldr	r1, [sp, #4]
   135bc:	ldr	r4, [sp, #12]
   135c0:	mov	r0, r4
   135c4:	bl	1588 <fread@plt>
   135c8:	add	r9, r9, r0
   135cc:	sub	r5, fp, #1
   135d0:	add	r5, r6, r5
   135d4:	add	r7, sp, #2064	; 0x810
   135d8:	mov	r0, r4
   135dc:	bl	18bc <Mat_int64Swap>
   135e0:	strb	r0, [r5, #1]!
   135e4:	add	r4, r4, #8
   135e8:	cmp	r4, r7
   135ec:	bne	135d8 <ReadInt8Data+0x1184>
   135f0:	add	fp, fp, #256	; 0x100
   135f4:	ldr	r3, [sp, #8]
   135f8:	cmp	fp, r3
   135fc:	blt	135b0 <ReadInt8Data+0x115c>
   13600:	cmp	r8, fp
   13604:	ble	132c4 <ReadInt8Data+0xe70>
   13608:	sub	r8, r8, fp
   1360c:	ldr	r3, [sl]
   13610:	mov	r2, r8
   13614:	ldr	r1, [sp, #4]
   13618:	add	r0, sp, #16
   1361c:	bl	1588 <fread@plt>
   13620:	add	r9, r9, r0
   13624:	cmp	r8, #0
   13628:	ble	132c4 <ReadInt8Data+0xe70>
   1362c:	add	r5, sp, #16
   13630:	add	r4, r6, fp
   13634:	add	r8, r8, fp
   13638:	add	r6, r6, r8
   1363c:	mov	r0, r5
   13640:	bl	18bc <Mat_int64Swap>
   13644:	strb	r0, [r4], #1
   13648:	add	r5, r5, #8
   1364c:	cmp	r4, r6
   13650:	bne	1363c <ReadInt8Data+0x11e8>
   13654:	b	132c4 <ReadInt8Data+0xe70>
   13658:	ldr	r3, [sl]
   1365c:	mov	r2, r8
   13660:	ldr	r1, [sp, #4]
   13664:	add	r0, sp, #16
   13668:	bl	1588 <fread@plt>
   1366c:	mov	r9, r0
   13670:	cmp	r8, #0
   13674:	ble	132c4 <ReadInt8Data+0xe70>
   13678:	add	r5, sp, #16
   1367c:	mov	r4, r6
   13680:	add	r6, r6, r8
   13684:	mov	r0, r5
   13688:	bl	18bc <Mat_int64Swap>
   1368c:	strb	r0, [r4], #1
   13690:	add	r5, r5, #8
   13694:	cmp	r6, r4
   13698:	bne	13684 <ReadInt8Data+0x1230>
   1369c:	b	132c4 <ReadInt8Data+0xe70>
   136a0:	cmp	r8, #256	; 0x100
   136a4:	ble	13760 <ReadInt8Data+0x130c>
   136a8:	sub	fp, r8, #256	; 0x100
   136ac:	cmp	fp, #0
   136b0:	movle	r5, r9
   136b4:	ble	13708 <ReadInt8Data+0x12b4>
   136b8:	mov	r5, r9
   136bc:	add	r7, sp, #16
   136c0:	add	r4, sp, #2048	; 0x800
   136c4:	add	r4, r4, #8
   136c8:	ldr	r3, [sl]
   136cc:	mov	r2, #256	; 0x100
   136d0:	ldr	r1, [sp, #4]
   136d4:	mov	r0, r7
   136d8:	bl	1588 <fread@plt>
   136dc:	add	r9, r9, r0
   136e0:	sub	r3, r7, #8
   136e4:	sub	r2, r5, #1
   136e8:	add	r2, r6, r2
   136ec:	ldr	r1, [r3, #8]!
   136f0:	strb	r1, [r2, #1]!
   136f4:	cmp	r3, r4
   136f8:	bne	136ec <ReadInt8Data+0x1298>
   136fc:	add	r5, r5, #256	; 0x100
   13700:	cmp	r5, fp
   13704:	blt	136c8 <ReadInt8Data+0x1274>
   13708:	cmp	r8, r5
   1370c:	ble	132c4 <ReadInt8Data+0xe70>
   13710:	sub	r8, r8, r5
   13714:	ldr	r3, [sl]
   13718:	mov	r2, r8
   1371c:	ldr	r1, [sp, #4]
   13720:	add	r0, sp, #16
   13724:	bl	1588 <fread@plt>
   13728:	add	r9, r9, r0
   1372c:	cmp	r8, #0
   13730:	ble	132c4 <ReadInt8Data+0xe70>
   13734:	add	r2, sp, #16
   13738:	add	r3, sp, #8
   1373c:	sub	r5, r5, #1
   13740:	add	r6, r6, r5
   13744:	sub	r8, r8, #-536870911	; 0xe0000001
   13748:	add	r2, r2, r8, lsl #3
   1374c:	ldr	r1, [r3, #8]!
   13750:	strb	r1, [r6, #1]!
   13754:	cmp	r2, r3
   13758:	bne	1374c <ReadInt8Data+0x12f8>
   1375c:	b	132c4 <ReadInt8Data+0xe70>
   13760:	ldr	r3, [sl]
   13764:	mov	r2, r8
   13768:	ldr	r1, [sp, #4]
   1376c:	add	r0, sp, #16
   13770:	bl	1588 <fread@plt>
   13774:	mov	r9, r0
   13778:	cmp	r8, #0
   1377c:	ble	132c4 <ReadInt8Data+0xe70>
   13780:	add	r1, sp, #16
   13784:	add	r3, sp, #8
   13788:	sub	r6, r6, #1
   1378c:	sub	r8, r8, #-536870911	; 0xe0000001
   13790:	add	r1, r1, r8, lsl #3
   13794:	ldr	r2, [r3, #8]!
   13798:	strb	r2, [r6, #1]!
   1379c:	cmp	r1, r3
   137a0:	bne	13794 <ReadInt8Data+0x1340>
   137a4:	b	132c4 <ReadInt8Data+0xe70>
   137a8:	ldr	r3, [sl]
   137ac:	mov	r2, r8
   137b0:	ldr	r1, [sp, #4]
   137b4:	add	r0, sp, #16
   137b8:	bl	1588 <fread@plt>
   137bc:	mov	r9, r0
   137c0:	cmp	r8, #0
   137c4:	ble	132c4 <ReadInt8Data+0xe70>
   137c8:	add	r5, sp, #16
   137cc:	mov	r4, r6
   137d0:	add	r6, r6, r8
   137d4:	mov	r0, r5
   137d8:	bl	1984 <Mat_uint64Swap>
   137dc:	strb	r0, [r4], #1
   137e0:	add	r5, r5, #8
   137e4:	cmp	r4, r6
   137e8:	bne	137d4 <ReadInt8Data+0x1380>
   137ec:	b	132c4 <ReadInt8Data+0xe70>
   137f0:	cmp	r8, #256	; 0x100
   137f4:	ble	138b0 <ReadInt8Data+0x145c>
   137f8:	sub	fp, r8, #256	; 0x100
   137fc:	cmp	fp, #0
   13800:	movle	r5, r9
   13804:	ble	13858 <ReadInt8Data+0x1404>
   13808:	mov	r5, r9
   1380c:	add	r7, sp, #16
   13810:	add	r4, sp, #2048	; 0x800
   13814:	add	r4, r4, #8
   13818:	ldr	r3, [sl]
   1381c:	mov	r2, #256	; 0x100
   13820:	ldr	r1, [sp, #4]
   13824:	mov	r0, r7
   13828:	bl	1588 <fread@plt>
   1382c:	add	r9, r9, r0
   13830:	sub	r3, r7, #8
   13834:	sub	r2, r5, #1
   13838:	add	r2, r6, r2
   1383c:	ldr	r1, [r3, #8]!
   13840:	strb	r1, [r2, #1]!
   13844:	cmp	r4, r3
   13848:	bne	1383c <ReadInt8Data+0x13e8>
   1384c:	add	r5, r5, #256	; 0x100
   13850:	cmp	r5, fp
   13854:	blt	13818 <ReadInt8Data+0x13c4>
   13858:	cmp	r8, r5
   1385c:	ble	132c4 <ReadInt8Data+0xe70>
   13860:	sub	r8, r8, r5
   13864:	ldr	r3, [sl]
   13868:	mov	r2, r8
   1386c:	ldr	r1, [sp, #4]
   13870:	add	r0, sp, #16
   13874:	bl	1588 <fread@plt>
   13878:	add	r9, r9, r0
   1387c:	cmp	r8, #0
   13880:	ble	132c4 <ReadInt8Data+0xe70>
   13884:	add	r2, sp, #16
   13888:	add	r3, sp, #8
   1388c:	sub	r5, r5, #1
   13890:	add	r6, r6, r5
   13894:	sub	r8, r8, #-536870911	; 0xe0000001
   13898:	add	r2, r2, r8, lsl #3
   1389c:	ldr	r1, [r3, #8]!
   138a0:	strb	r1, [r6, #1]!
   138a4:	cmp	r3, r2
   138a8:	bne	1389c <ReadInt8Data+0x1448>
   138ac:	b	132c4 <ReadInt8Data+0xe70>
   138b0:	ldr	r3, [sl]
   138b4:	mov	r2, r8
   138b8:	ldr	r1, [sp, #4]
   138bc:	add	r0, sp, #16
   138c0:	bl	1588 <fread@plt>
   138c4:	mov	r9, r0
   138c8:	cmp	r8, #0
   138cc:	ble	132c4 <ReadInt8Data+0xe70>
   138d0:	add	r1, sp, #16
   138d4:	add	r3, sp, #8
   138d8:	sub	r6, r6, #1
   138dc:	sub	r8, r8, #-536870911	; 0xe0000001
   138e0:	add	r1, r1, r8, lsl #3
   138e4:	ldr	r2, [r3, #8]!
   138e8:	strb	r2, [r6, #1]!
   138ec:	cmp	r3, r1
   138f0:	bne	138e4 <ReadInt8Data+0x1490>
   138f4:	b	132c4 <ReadInt8Data+0xe70>
   138f8:	mov	r0, #0
   138fc:	bx	lr

00013900 <ReadCompressedInt8Data>:
   13900:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13904:	sub	sp, sp, #8
   13908:	ldr	r9, [sp, #40]	; 0x28
   1390c:	mov	r4, r2
   13910:	cmp	r2, #0
   13914:	cmpne	r1, #0
   13918:	moveq	r2, #1
   1391c:	movne	r2, #0
   13920:	cmp	r0, #0
   13924:	orreq	r2, r2, #1
   13928:	cmp	r2, #0
   1392c:	movne	r0, #0
   13930:	bne	139bc <ReadCompressedInt8Data+0xbc>
   13934:	mov	r7, r1
   13938:	mov	r6, r0
   1393c:	mov	r8, r3
   13940:	mov	r0, r3
   13944:	bl	1600 <Mat_SizeOf@plt>
   13948:	mov	r5, r0
   1394c:	sub	r3, r8, #1
   13950:	cmp	r3, #8
   13954:	addls	pc, pc, r3, lsl #2
   13958:	b	13d50 <ReadCompressedInt8Data+0x450>
   1395c:	b	139c4 <ReadCompressedInt8Data+0xc4>
   13960:	b	13980 <ReadCompressedInt8Data+0x80>
   13964:	b	13c40 <ReadCompressedInt8Data+0x340>
   13968:	b	13cc8 <ReadCompressedInt8Data+0x3c8>
   1396c:	b	13b30 <ReadCompressedInt8Data+0x230>
   13970:	b	13bb8 <ReadCompressedInt8Data+0x2b8>
   13974:	b	13a98 <ReadCompressedInt8Data+0x198>
   13978:	b	13d50 <ReadCompressedInt8Data+0x450>
   1397c:	b	13a00 <ReadCompressedInt8Data+0x100>
   13980:	cmp	r9, #0
   13984:	movgt	r8, r4
   13988:	addgt	r4, r4, r9
   1398c:	movgt	sl, sp
   13990:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13994:	mov	r3, r5
   13998:	mov	r2, sl
   1399c:	mov	r1, r7
   139a0:	mov	r0, r6
   139a4:	bl	3418 <InflateData>
   139a8:	ldrb	r3, [sp]
   139ac:	strb	r3, [r8], #1
   139b0:	cmp	r4, r8
   139b4:	bne	13994 <ReadCompressedInt8Data+0x94>
   139b8:	mul	r0, r5, r9
   139bc:	add	sp, sp, #8
   139c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139c4:	cmp	r9, #0
   139c8:	movgt	r8, r4
   139cc:	addgt	r4, r4, r9
   139d0:	movgt	sl, sp
   139d4:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   139d8:	mov	r3, r5
   139dc:	mov	r2, sl
   139e0:	mov	r1, r7
   139e4:	mov	r0, r6
   139e8:	bl	3418 <InflateData>
   139ec:	ldrb	r3, [sp]
   139f0:	strb	r3, [r8], #1
   139f4:	cmp	r4, r8
   139f8:	bne	139d8 <ReadCompressedInt8Data+0xd8>
   139fc:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13a00:	ldr	r3, [r6, #20]
   13a04:	cmp	r3, #0
   13a08:	bne	13a50 <ReadCompressedInt8Data+0x150>
   13a0c:	cmp	r9, #0
   13a10:	movgt	r8, r4
   13a14:	addgt	r4, r4, r9
   13a18:	movgt	sl, sp
   13a1c:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13a20:	mov	r3, r5
   13a24:	mov	r2, sl
   13a28:	mov	r1, r7
   13a2c:	mov	r0, r6
   13a30:	bl	3418 <InflateData>
   13a34:	vldr	d7, [sp]
   13a38:	vcvt.s32.f64	s15, d7
   13a3c:	vmov	r3, s15
   13a40:	strb	r3, [r8], #1
   13a44:	cmp	r8, r4
   13a48:	bne	13a20 <ReadCompressedInt8Data+0x120>
   13a4c:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13a50:	cmp	r9, #0
   13a54:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13a58:	mov	r8, r4
   13a5c:	add	r4, r4, r9
   13a60:	mov	sl, sp
   13a64:	mov	r3, r5
   13a68:	mov	r2, sl
   13a6c:	mov	r1, r7
   13a70:	mov	r0, r6
   13a74:	bl	3418 <InflateData>
   13a78:	mov	r0, sl
   13a7c:	bl	1b94 <Mat_doubleSwap>
   13a80:	vcvt.s32.f64	s15, d0
   13a84:	vmov	r3, s15
   13a88:	strb	r3, [r8], #1
   13a8c:	cmp	r8, r4
   13a90:	bne	13a64 <ReadCompressedInt8Data+0x164>
   13a94:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13a98:	ldr	r3, [r6, #20]
   13a9c:	cmp	r3, #0
   13aa0:	bne	13ae8 <ReadCompressedInt8Data+0x1e8>
   13aa4:	cmp	r9, #0
   13aa8:	movgt	r8, r4
   13aac:	addgt	r4, r4, r9
   13ab0:	movgt	sl, sp
   13ab4:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13ab8:	mov	r3, r5
   13abc:	mov	r2, sl
   13ac0:	mov	r1, r7
   13ac4:	mov	r0, r6
   13ac8:	bl	3418 <InflateData>
   13acc:	vldr	s15, [sp]
   13ad0:	vcvt.s32.f32	s15, s15
   13ad4:	vmov	r3, s15
   13ad8:	strb	r3, [r8], #1
   13adc:	cmp	r8, r4
   13ae0:	bne	13ab8 <ReadCompressedInt8Data+0x1b8>
   13ae4:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13ae8:	cmp	r9, #0
   13aec:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13af0:	mov	r8, r4
   13af4:	add	r4, r4, r9
   13af8:	mov	sl, sp
   13afc:	mov	r3, r5
   13b00:	mov	r2, sl
   13b04:	mov	r1, r7
   13b08:	mov	r0, r6
   13b0c:	bl	3418 <InflateData>
   13b10:	mov	r0, sl
   13b14:	bl	1b38 <Mat_floatSwap>
   13b18:	vcvt.s32.f32	s15, s0
   13b1c:	vmov	r3, s15
   13b20:	strb	r3, [r8], #1
   13b24:	cmp	r4, r8
   13b28:	bne	13afc <ReadCompressedInt8Data+0x1fc>
   13b2c:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13b30:	ldr	r3, [r6, #20]
   13b34:	cmp	r3, #0
   13b38:	bne	13b78 <ReadCompressedInt8Data+0x278>
   13b3c:	cmp	r9, #0
   13b40:	movgt	r8, r4
   13b44:	addgt	r4, r4, r9
   13b48:	movgt	sl, sp
   13b4c:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13b50:	mov	r3, r5
   13b54:	mov	r2, sl
   13b58:	mov	r1, r7
   13b5c:	mov	r0, r6
   13b60:	bl	3418 <InflateData>
   13b64:	ldr	r3, [sp]
   13b68:	strb	r3, [r8], #1
   13b6c:	cmp	r4, r8
   13b70:	bne	13b50 <ReadCompressedInt8Data+0x250>
   13b74:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13b78:	cmp	r9, #0
   13b7c:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13b80:	mov	r8, r4
   13b84:	add	r4, r4, r9
   13b88:	mov	sl, sp
   13b8c:	mov	r3, r5
   13b90:	mov	r2, sl
   13b94:	mov	r1, r7
   13b98:	mov	r0, r6
   13b9c:	bl	3418 <InflateData>
   13ba0:	mov	r0, sl
   13ba4:	bl	1a20 <Mat_int32Swap>
   13ba8:	strb	r0, [r8], #1
   13bac:	cmp	r4, r8
   13bb0:	bne	13b8c <ReadCompressedInt8Data+0x28c>
   13bb4:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13bb8:	ldr	r3, [r6, #20]
   13bbc:	cmp	r3, #0
   13bc0:	bne	13c00 <ReadCompressedInt8Data+0x300>
   13bc4:	cmp	r9, #0
   13bc8:	movgt	r8, r4
   13bcc:	addgt	r4, r4, r9
   13bd0:	movgt	sl, sp
   13bd4:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13bd8:	mov	r3, r5
   13bdc:	mov	r2, sl
   13be0:	mov	r1, r7
   13be4:	mov	r0, r6
   13be8:	bl	3418 <InflateData>
   13bec:	ldr	r3, [sp]
   13bf0:	strb	r3, [r8], #1
   13bf4:	cmp	r8, r4
   13bf8:	bne	13bd8 <ReadCompressedInt8Data+0x2d8>
   13bfc:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13c00:	cmp	r9, #0
   13c04:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13c08:	mov	r8, r4
   13c0c:	add	r4, r4, r9
   13c10:	mov	sl, sp
   13c14:	mov	r3, r5
   13c18:	mov	r2, sl
   13c1c:	mov	r1, r7
   13c20:	mov	r0, r6
   13c24:	bl	3418 <InflateData>
   13c28:	mov	r0, sl
   13c2c:	bl	1a88 <Mat_uint32Swap>
   13c30:	strb	r0, [r8], #1
   13c34:	cmp	r4, r8
   13c38:	bne	13c14 <ReadCompressedInt8Data+0x314>
   13c3c:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13c40:	ldr	r3, [r6, #20]
   13c44:	cmp	r3, #0
   13c48:	bne	13c88 <ReadCompressedInt8Data+0x388>
   13c4c:	cmp	r9, #0
   13c50:	movgt	r8, r4
   13c54:	addgt	r4, r4, r9
   13c58:	movgt	sl, sp
   13c5c:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13c60:	mov	r3, r5
   13c64:	mov	r2, sl
   13c68:	mov	r1, r7
   13c6c:	mov	r0, r6
   13c70:	bl	3418 <InflateData>
   13c74:	ldrh	r3, [sp]
   13c78:	strb	r3, [r8], #1
   13c7c:	cmp	r8, r4
   13c80:	bne	13c60 <ReadCompressedInt8Data+0x360>
   13c84:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13c88:	cmp	r9, #0
   13c8c:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13c90:	mov	r8, r4
   13c94:	add	r4, r4, r9
   13c98:	mov	sl, sp
   13c9c:	mov	r3, r5
   13ca0:	mov	r2, sl
   13ca4:	mov	r1, r7
   13ca8:	mov	r0, r6
   13cac:	bl	3418 <InflateData>
   13cb0:	mov	r0, sl
   13cb4:	bl	1ae4 <Mat_int16Swap>
   13cb8:	strb	r0, [r8], #1
   13cbc:	cmp	r4, r8
   13cc0:	bne	13c9c <ReadCompressedInt8Data+0x39c>
   13cc4:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13cc8:	ldr	r3, [r6, #20]
   13ccc:	cmp	r3, #0
   13cd0:	bne	13d10 <ReadCompressedInt8Data+0x410>
   13cd4:	cmp	r9, #0
   13cd8:	movgt	r8, r4
   13cdc:	addgt	r4, r4, r9
   13ce0:	movgt	sl, sp
   13ce4:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13ce8:	mov	r3, r5
   13cec:	mov	r2, sl
   13cf0:	mov	r1, r7
   13cf4:	mov	r0, r6
   13cf8:	bl	3418 <InflateData>
   13cfc:	ldrh	r3, [sp]
   13d00:	strb	r3, [r8], #1
   13d04:	cmp	r4, r8
   13d08:	bne	13ce8 <ReadCompressedInt8Data+0x3e8>
   13d0c:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13d10:	cmp	r9, #0
   13d14:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13d18:	mov	r8, r4
   13d1c:	add	r4, r4, r9
   13d20:	mov	sl, sp
   13d24:	mov	r3, r5
   13d28:	mov	r2, sl
   13d2c:	mov	r1, r7
   13d30:	mov	r0, r6
   13d34:	bl	3418 <InflateData>
   13d38:	mov	r0, sl
   13d3c:	bl	1b1c <Mat_uint16Swap>
   13d40:	strb	r0, [r8], #1
   13d44:	cmp	r8, r4
   13d48:	bne	13d24 <ReadCompressedInt8Data+0x424>
   13d4c:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13d50:	cmp	r8, #12
   13d54:	beq	13da8 <ReadCompressedInt8Data+0x4a8>
   13d58:	cmp	r8, #13
   13d5c:	bne	139b8 <ReadCompressedInt8Data+0xb8>
   13d60:	ldr	r3, [r6, #20]
   13d64:	cmp	r3, #0
   13d68:	bne	13e30 <ReadCompressedInt8Data+0x530>
   13d6c:	cmp	r9, #0
   13d70:	movgt	r8, r4
   13d74:	addgt	r4, r4, r9
   13d78:	movgt	sl, sp
   13d7c:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13d80:	mov	r3, r5
   13d84:	mov	r2, sl
   13d88:	mov	r1, r7
   13d8c:	mov	r0, r6
   13d90:	bl	3418 <InflateData>
   13d94:	ldr	r3, [sp]
   13d98:	strb	r3, [r8], #1
   13d9c:	cmp	r4, r8
   13da0:	bne	13d80 <ReadCompressedInt8Data+0x480>
   13da4:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13da8:	ldr	r3, [r6, #20]
   13dac:	cmp	r3, #0
   13db0:	bne	13df0 <ReadCompressedInt8Data+0x4f0>
   13db4:	cmp	r9, #0
   13db8:	movgt	r8, r4
   13dbc:	addgt	r4, r4, r9
   13dc0:	movgt	sl, sp
   13dc4:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13dc8:	mov	r3, r5
   13dcc:	mov	r2, sl
   13dd0:	mov	r1, r7
   13dd4:	mov	r0, r6
   13dd8:	bl	3418 <InflateData>
   13ddc:	ldr	r3, [sp]
   13de0:	strb	r3, [r8], #1
   13de4:	cmp	r8, r4
   13de8:	bne	13dc8 <ReadCompressedInt8Data+0x4c8>
   13dec:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13df0:	cmp	r9, #0
   13df4:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13df8:	mov	r8, r4
   13dfc:	add	r4, r4, r9
   13e00:	mov	sl, sp
   13e04:	mov	r3, r5
   13e08:	mov	r2, sl
   13e0c:	mov	r1, r7
   13e10:	mov	r0, r6
   13e14:	bl	3418 <InflateData>
   13e18:	mov	r0, sl
   13e1c:	bl	18bc <Mat_int64Swap>
   13e20:	strb	r0, [r8], #1
   13e24:	cmp	r8, r4
   13e28:	bne	13e04 <ReadCompressedInt8Data+0x504>
   13e2c:	b	139b8 <ReadCompressedInt8Data+0xb8>
   13e30:	cmp	r9, #0
   13e34:	ble	139b8 <ReadCompressedInt8Data+0xb8>
   13e38:	mov	r8, r4
   13e3c:	add	r4, r4, r9
   13e40:	mov	sl, sp
   13e44:	mov	r3, r5
   13e48:	mov	r2, sl
   13e4c:	mov	r1, r7
   13e50:	mov	r0, r6
   13e54:	bl	3418 <InflateData>
   13e58:	mov	r0, sl
   13e5c:	bl	1984 <Mat_uint64Swap>
   13e60:	strb	r0, [r8], #1
   13e64:	cmp	r8, r4
   13e68:	bne	13e44 <ReadCompressedInt8Data+0x544>
   13e6c:	b	139b8 <ReadCompressedInt8Data+0xb8>

00013e70 <ReadUInt8Data>:
   13e70:	cmp	r1, #0
   13e74:	cmpne	r0, #0
   13e78:	beq	15314 <ReadUInt8Data+0x14a4>
   13e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e80:	sub	sp, sp, #2064	; 0x810
   13e84:	sub	sp, sp, #4
   13e88:	mov	sl, r0
   13e8c:	mov	r6, r1
   13e90:	ldr	r1, [r0]
   13e94:	cmp	r1, #0
   13e98:	moveq	r0, #0
   13e9c:	beq	14ce8 <ReadUInt8Data+0xe78>
   13ea0:	mov	r8, r3
   13ea4:	mov	r4, r2
   13ea8:	mov	r0, r2
   13eac:	bl	1600 <Mat_SizeOf@plt>
   13eb0:	str	r0, [sp, #4]
   13eb4:	sub	r3, r4, #1
   13eb8:	cmp	r3, #8
   13ebc:	addls	pc, pc, r3, lsl #2
   13ec0:	b	14e98 <ReadUInt8Data+0x1028>
   13ec4:	b	14c6c <ReadUInt8Data+0xdfc>
   13ec8:	b	14d8c <ReadUInt8Data+0xf1c>
   13ecc:	b	147fc <ReadUInt8Data+0x98c>
   13ed0:	b	14a34 <ReadUInt8Data+0xbc4>
   13ed4:	b	14394 <ReadUInt8Data+0x524>
   13ed8:	b	145c8 <ReadUInt8Data+0x758>
   13edc:	b	14140 <ReadUInt8Data+0x2d0>
   13ee0:	b	14e98 <ReadUInt8Data+0x1028>
   13ee4:	b	13ee8 <ReadUInt8Data+0x78>
   13ee8:	ldr	r9, [sl, #20]
   13eec:	cmp	r9, #0
   13ef0:	beq	14030 <ReadUInt8Data+0x1c0>
   13ef4:	cmp	r8, #256	; 0x100
   13ef8:	ble	13fe0 <ReadUInt8Data+0x170>
   13efc:	sub	r3, r8, #256	; 0x100
   13f00:	cmp	r3, #0
   13f04:	movle	fp, #0
   13f08:	movle	r9, fp
   13f0c:	ble	13f80 <ReadUInt8Data+0x110>
   13f10:	mov	fp, #0
   13f14:	mov	r9, fp
   13f18:	add	r2, sp, #16
   13f1c:	str	r2, [sp, #8]
   13f20:	str	r8, [sp, #12]
   13f24:	mov	r8, r3
   13f28:	ldr	r3, [sl]
   13f2c:	mov	r2, #256	; 0x100
   13f30:	ldr	r1, [sp, #4]
   13f34:	ldr	r4, [sp, #8]
   13f38:	mov	r0, r4
   13f3c:	bl	1588 <fread@plt>
   13f40:	add	r9, r9, r0
   13f44:	sub	r5, fp, #1
   13f48:	add	r5, r6, r5
   13f4c:	add	r7, sp, #2064	; 0x810
   13f50:	mov	r0, r4
   13f54:	bl	1b94 <Mat_doubleSwap>
   13f58:	vcvt.u32.f64	s15, d0
   13f5c:	vmov	r3, s15
   13f60:	strb	r3, [r5, #1]!
   13f64:	add	r4, r4, #8
   13f68:	cmp	r4, r7
   13f6c:	bne	13f50 <ReadUInt8Data+0xe0>
   13f70:	add	fp, fp, #256	; 0x100
   13f74:	cmp	fp, r8
   13f78:	blt	13f28 <ReadUInt8Data+0xb8>
   13f7c:	ldr	r8, [sp, #12]
   13f80:	cmp	r8, fp
   13f84:	ble	14ce0 <ReadUInt8Data+0xe70>
   13f88:	sub	r8, r8, fp
   13f8c:	ldr	r3, [sl]
   13f90:	mov	r2, r8
   13f94:	ldr	r1, [sp, #4]
   13f98:	add	r0, sp, #16
   13f9c:	bl	1588 <fread@plt>
   13fa0:	add	r9, r9, r0
   13fa4:	cmp	r8, #0
   13fa8:	ble	14ce0 <ReadUInt8Data+0xe70>
   13fac:	add	r5, sp, #16
   13fb0:	add	r4, r6, fp
   13fb4:	add	r8, r8, fp
   13fb8:	add	r6, r6, r8
   13fbc:	mov	r0, r5
   13fc0:	bl	1b94 <Mat_doubleSwap>
   13fc4:	vcvt.u32.f64	s15, d0
   13fc8:	vmov	r3, s15
   13fcc:	strb	r3, [r4], #1
   13fd0:	add	r5, r5, #8
   13fd4:	cmp	r4, r6
   13fd8:	bne	13fbc <ReadUInt8Data+0x14c>
   13fdc:	b	14ce0 <ReadUInt8Data+0xe70>
   13fe0:	ldr	r3, [sl]
   13fe4:	mov	r2, r8
   13fe8:	ldr	r1, [sp, #4]
   13fec:	add	r0, sp, #16
   13ff0:	bl	1588 <fread@plt>
   13ff4:	mov	r9, r0
   13ff8:	cmp	r8, #0
   13ffc:	ble	14ce0 <ReadUInt8Data+0xe70>
   14000:	add	r5, sp, #16
   14004:	mov	r4, r6
   14008:	add	r6, r6, r8
   1400c:	mov	r0, r5
   14010:	bl	1b94 <Mat_doubleSwap>
   14014:	vcvt.u32.f64	s15, d0
   14018:	vmov	r3, s15
   1401c:	strb	r3, [r4], #1
   14020:	add	r5, r5, #8
   14024:	cmp	r4, r6
   14028:	bne	1400c <ReadUInt8Data+0x19c>
   1402c:	b	14ce0 <ReadUInt8Data+0xe70>
   14030:	cmp	r8, #256	; 0x100
   14034:	ble	140f8 <ReadUInt8Data+0x288>
   14038:	sub	r7, r8, #256	; 0x100
   1403c:	cmp	r7, #0
   14040:	movle	r4, r9
   14044:	ble	140a0 <ReadUInt8Data+0x230>
   14048:	mov	r4, r9
   1404c:	add	r5, sp, #16
   14050:	mov	fp, #256	; 0x100
   14054:	ldr	r3, [sl]
   14058:	mov	r2, fp
   1405c:	ldr	r1, [sp, #4]
   14060:	mov	r0, r5
   14064:	bl	1588 <fread@plt>
   14068:	add	r9, r9, r0
   1406c:	mov	r2, r5
   14070:	sub	r1, r4, #1
   14074:	add	r1, r6, r1
   14078:	add	r0, sp, #2064	; 0x810
   1407c:	vldmia	r2!, {d7}
   14080:	vcvt.u32.f64	s15, d7
   14084:	vmov	r3, s15
   14088:	strb	r3, [r1, #1]!
   1408c:	cmp	r2, r0
   14090:	bne	1407c <ReadUInt8Data+0x20c>
   14094:	add	r4, r4, #256	; 0x100
   14098:	cmp	r4, r7
   1409c:	blt	14054 <ReadUInt8Data+0x1e4>
   140a0:	cmp	r8, r4
   140a4:	ble	14ce0 <ReadUInt8Data+0xe70>
   140a8:	sub	r8, r8, r4
   140ac:	ldr	r3, [sl]
   140b0:	mov	r2, r8
   140b4:	ldr	r1, [sp, #4]
   140b8:	add	r0, sp, #16
   140bc:	bl	1588 <fread@plt>
   140c0:	add	r9, r9, r0
   140c4:	cmp	r8, #0
   140c8:	ble	14ce0 <ReadUInt8Data+0xe70>
   140cc:	add	r2, sp, #16
   140d0:	sub	r4, r4, #1
   140d4:	add	r6, r6, r4
   140d8:	add	r8, r2, r8, lsl #3
   140dc:	vldmia	r2!, {d7}
   140e0:	vcvt.u32.f64	s15, d7
   140e4:	vmov	r3, s15
   140e8:	strb	r3, [r6, #1]!
   140ec:	cmp	r2, r8
   140f0:	bne	140dc <ReadUInt8Data+0x26c>
   140f4:	b	14ce0 <ReadUInt8Data+0xe70>
   140f8:	ldr	r3, [sl]
   140fc:	mov	r2, r8
   14100:	ldr	r1, [sp, #4]
   14104:	add	r0, sp, #16
   14108:	bl	1588 <fread@plt>
   1410c:	mov	r9, r0
   14110:	cmp	r8, #0
   14114:	ble	14ce0 <ReadUInt8Data+0xe70>
   14118:	add	r2, sp, #16
   1411c:	sub	r6, r6, #1
   14120:	add	r8, r2, r8, lsl #3
   14124:	vldmia	r2!, {d7}
   14128:	vcvt.u32.f64	s15, d7
   1412c:	vmov	r3, s15
   14130:	strb	r3, [r6, #1]!
   14134:	cmp	r2, r8
   14138:	bne	14124 <ReadUInt8Data+0x2b4>
   1413c:	b	14ce0 <ReadUInt8Data+0xe70>
   14140:	ldr	r9, [sl, #20]
   14144:	cmp	r9, #0
   14148:	beq	14288 <ReadUInt8Data+0x418>
   1414c:	cmp	r8, #256	; 0x100
   14150:	ble	14238 <ReadUInt8Data+0x3c8>
   14154:	sub	r3, r8, #256	; 0x100
   14158:	cmp	r3, #0
   1415c:	movle	fp, #0
   14160:	movle	r9, fp
   14164:	ble	141d8 <ReadUInt8Data+0x368>
   14168:	mov	fp, #0
   1416c:	mov	r9, fp
   14170:	add	r2, sp, #16
   14174:	str	r2, [sp, #8]
   14178:	add	r7, sp, #1040	; 0x410
   1417c:	str	r8, [sp, #12]
   14180:	mov	r8, r3
   14184:	ldr	r3, [sl]
   14188:	mov	r2, #256	; 0x100
   1418c:	ldr	r1, [sp, #4]
   14190:	ldr	r4, [sp, #8]
   14194:	mov	r0, r4
   14198:	bl	1588 <fread@plt>
   1419c:	add	r9, r9, r0
   141a0:	sub	r5, fp, #1
   141a4:	add	r5, r6, r5
   141a8:	mov	r0, r4
   141ac:	bl	1b38 <Mat_floatSwap>
   141b0:	vcvt.u32.f32	s15, s0
   141b4:	vmov	r3, s15
   141b8:	strb	r3, [r5, #1]!
   141bc:	add	r4, r4, #4
   141c0:	cmp	r4, r7
   141c4:	bne	141a8 <ReadUInt8Data+0x338>
   141c8:	add	fp, fp, #256	; 0x100
   141cc:	cmp	fp, r8
   141d0:	blt	14184 <ReadUInt8Data+0x314>
   141d4:	ldr	r8, [sp, #12]
   141d8:	cmp	r8, fp
   141dc:	ble	14ce0 <ReadUInt8Data+0xe70>
   141e0:	sub	r8, r8, fp
   141e4:	ldr	r3, [sl]
   141e8:	mov	r2, r8
   141ec:	ldr	r1, [sp, #4]
   141f0:	add	r0, sp, #16
   141f4:	bl	1588 <fread@plt>
   141f8:	add	r9, r9, r0
   141fc:	cmp	r8, #0
   14200:	ble	14ce0 <ReadUInt8Data+0xe70>
   14204:	add	r5, sp, #16
   14208:	add	r4, r6, fp
   1420c:	add	r8, r8, fp
   14210:	add	r6, r6, r8
   14214:	mov	r0, r5
   14218:	bl	1b38 <Mat_floatSwap>
   1421c:	vcvt.u32.f32	s15, s0
   14220:	vmov	r3, s15
   14224:	strb	r3, [r4], #1
   14228:	add	r5, r5, #4
   1422c:	cmp	r4, r6
   14230:	bne	14214 <ReadUInt8Data+0x3a4>
   14234:	b	14ce0 <ReadUInt8Data+0xe70>
   14238:	ldr	r3, [sl]
   1423c:	mov	r2, r8
   14240:	ldr	r1, [sp, #4]
   14244:	add	r0, sp, #16
   14248:	bl	1588 <fread@plt>
   1424c:	mov	r9, r0
   14250:	cmp	r8, #0
   14254:	ble	14ce0 <ReadUInt8Data+0xe70>
   14258:	add	r5, sp, #16
   1425c:	mov	r4, r6
   14260:	add	r6, r6, r8
   14264:	mov	r0, r5
   14268:	bl	1b38 <Mat_floatSwap>
   1426c:	vcvt.u32.f32	s15, s0
   14270:	vmov	r3, s15
   14274:	strb	r3, [r4], #1
   14278:	add	r5, r5, #4
   1427c:	cmp	r4, r6
   14280:	bne	14264 <ReadUInt8Data+0x3f4>
   14284:	b	14ce0 <ReadUInt8Data+0xe70>
   14288:	cmp	r8, #256	; 0x100
   1428c:	ble	1434c <ReadUInt8Data+0x4dc>
   14290:	sub	fp, r8, #256	; 0x100
   14294:	cmp	fp, #0
   14298:	movle	r5, r9
   1429c:	ble	142f4 <ReadUInt8Data+0x484>
   142a0:	mov	r5, r9
   142a4:	add	r7, sp, #16
   142a8:	add	r4, sp, #1040	; 0x410
   142ac:	ldr	r3, [sl]
   142b0:	mov	r2, #256	; 0x100
   142b4:	ldr	r1, [sp, #4]
   142b8:	mov	r0, r7
   142bc:	bl	1588 <fread@plt>
   142c0:	add	r9, r9, r0
   142c4:	mov	r2, r7
   142c8:	sub	r1, r5, #1
   142cc:	add	r1, r6, r1
   142d0:	vldmia	r2!, {s15}
   142d4:	vcvt.u32.f32	s15, s15
   142d8:	vmov	r3, s15
   142dc:	strb	r3, [r1, #1]!
   142e0:	cmp	r2, r4
   142e4:	bne	142d0 <ReadUInt8Data+0x460>
   142e8:	add	r5, r5, #256	; 0x100
   142ec:	cmp	r5, fp
   142f0:	blt	142ac <ReadUInt8Data+0x43c>
   142f4:	cmp	r8, r5
   142f8:	ble	14ce0 <ReadUInt8Data+0xe70>
   142fc:	sub	r8, r8, r5
   14300:	ldr	r3, [sl]
   14304:	mov	r2, r8
   14308:	ldr	r1, [sp, #4]
   1430c:	add	r0, sp, #16
   14310:	bl	1588 <fread@plt>
   14314:	add	r9, r9, r0
   14318:	cmp	r8, #0
   1431c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14320:	add	r2, sp, #16
   14324:	sub	r5, r5, #1
   14328:	add	r6, r6, r5
   1432c:	add	r8, r2, r8, lsl #2
   14330:	vldmia	r2!, {s15}
   14334:	vcvt.u32.f32	s15, s15
   14338:	vmov	r3, s15
   1433c:	strb	r3, [r6, #1]!
   14340:	cmp	r2, r8
   14344:	bne	14330 <ReadUInt8Data+0x4c0>
   14348:	b	14ce0 <ReadUInt8Data+0xe70>
   1434c:	ldr	r3, [sl]
   14350:	mov	r2, r8
   14354:	ldr	r1, [sp, #4]
   14358:	add	r0, sp, #16
   1435c:	bl	1588 <fread@plt>
   14360:	mov	r9, r0
   14364:	cmp	r8, #0
   14368:	ble	14ce0 <ReadUInt8Data+0xe70>
   1436c:	add	r2, sp, #16
   14370:	sub	r6, r6, #1
   14374:	add	r8, r2, r8, lsl #2
   14378:	vldmia	r2!, {s15}
   1437c:	vcvt.u32.f32	s15, s15
   14380:	vmov	r3, s15
   14384:	strb	r3, [r6, #1]!
   14388:	cmp	r2, r8
   1438c:	bne	14378 <ReadUInt8Data+0x508>
   14390:	b	14ce0 <ReadUInt8Data+0xe70>
   14394:	ldr	r9, [sl, #20]
   14398:	cmp	r9, #0
   1439c:	beq	144c4 <ReadUInt8Data+0x654>
   143a0:	cmp	r8, #256	; 0x100
   143a4:	ble	1447c <ReadUInt8Data+0x60c>
   143a8:	sub	r3, r8, #256	; 0x100
   143ac:	cmp	r3, #0
   143b0:	movle	fp, #0
   143b4:	movle	r9, fp
   143b8:	ble	14424 <ReadUInt8Data+0x5b4>
   143bc:	mov	fp, #0
   143c0:	mov	r9, fp
   143c4:	add	r2, sp, #16
   143c8:	str	r2, [sp, #8]
   143cc:	add	r7, sp, #1040	; 0x410
   143d0:	str	r8, [sp, #12]
   143d4:	mov	r8, r3
   143d8:	ldr	r3, [sl]
   143dc:	mov	r2, #256	; 0x100
   143e0:	ldr	r1, [sp, #4]
   143e4:	ldr	r4, [sp, #8]
   143e8:	mov	r0, r4
   143ec:	bl	1588 <fread@plt>
   143f0:	add	r9, r9, r0
   143f4:	sub	r5, fp, #1
   143f8:	add	r5, r6, r5
   143fc:	mov	r0, r4
   14400:	bl	1a20 <Mat_int32Swap>
   14404:	strb	r0, [r5, #1]!
   14408:	add	r4, r4, #4
   1440c:	cmp	r4, r7
   14410:	bne	143fc <ReadUInt8Data+0x58c>
   14414:	add	fp, fp, #256	; 0x100
   14418:	cmp	fp, r8
   1441c:	blt	143d8 <ReadUInt8Data+0x568>
   14420:	ldr	r8, [sp, #12]
   14424:	cmp	r8, fp
   14428:	ble	14ce0 <ReadUInt8Data+0xe70>
   1442c:	sub	r8, r8, fp
   14430:	ldr	r3, [sl]
   14434:	mov	r2, r8
   14438:	ldr	r1, [sp, #4]
   1443c:	add	r0, sp, #16
   14440:	bl	1588 <fread@plt>
   14444:	add	r9, r9, r0
   14448:	cmp	r8, #0
   1444c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14450:	add	r5, sp, #16
   14454:	add	r4, r6, fp
   14458:	add	r8, r8, fp
   1445c:	add	r6, r6, r8
   14460:	mov	r0, r5
   14464:	bl	1a20 <Mat_int32Swap>
   14468:	strb	r0, [r4], #1
   1446c:	add	r5, r5, #4
   14470:	cmp	r4, r6
   14474:	bne	14460 <ReadUInt8Data+0x5f0>
   14478:	b	14ce0 <ReadUInt8Data+0xe70>
   1447c:	ldr	r3, [sl]
   14480:	mov	r2, r8
   14484:	ldr	r1, [sp, #4]
   14488:	add	r0, sp, #16
   1448c:	bl	1588 <fread@plt>
   14490:	mov	r9, r0
   14494:	cmp	r8, #0
   14498:	ble	14ce0 <ReadUInt8Data+0xe70>
   1449c:	add	r5, sp, #16
   144a0:	mov	r4, r6
   144a4:	add	r6, r6, r8
   144a8:	mov	r0, r5
   144ac:	bl	1a20 <Mat_int32Swap>
   144b0:	strb	r0, [r4], #1
   144b4:	add	r5, r5, #4
   144b8:	cmp	r4, r6
   144bc:	bne	144a8 <ReadUInt8Data+0x638>
   144c0:	b	14ce0 <ReadUInt8Data+0xe70>
   144c4:	cmp	r8, #256	; 0x100
   144c8:	ble	14580 <ReadUInt8Data+0x710>
   144cc:	sub	fp, r8, #256	; 0x100
   144d0:	cmp	fp, #0
   144d4:	movle	r5, r9
   144d8:	ble	14528 <ReadUInt8Data+0x6b8>
   144dc:	mov	r5, r9
   144e0:	add	r7, sp, #16
   144e4:	add	r4, r7, #1020	; 0x3fc
   144e8:	ldr	r3, [sl]
   144ec:	mov	r2, #256	; 0x100
   144f0:	ldr	r1, [sp, #4]
   144f4:	mov	r0, r7
   144f8:	bl	1588 <fread@plt>
   144fc:	add	r9, r9, r0
   14500:	sub	r3, r7, #4
   14504:	sub	r2, r5, #1
   14508:	add	r2, r6, r2
   1450c:	ldr	r1, [r3, #4]!
   14510:	strb	r1, [r2, #1]!
   14514:	cmp	r3, r4
   14518:	bne	1450c <ReadUInt8Data+0x69c>
   1451c:	add	r5, r5, #256	; 0x100
   14520:	cmp	r5, fp
   14524:	blt	144e8 <ReadUInt8Data+0x678>
   14528:	cmp	r8, r5
   1452c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14530:	sub	r8, r8, r5
   14534:	ldr	r3, [sl]
   14538:	mov	r2, r8
   1453c:	ldr	r1, [sp, #4]
   14540:	add	r0, sp, #16
   14544:	bl	1588 <fread@plt>
   14548:	add	r9, r9, r0
   1454c:	cmp	r8, #0
   14550:	ble	14ce0 <ReadUInt8Data+0xe70>
   14554:	add	r1, sp, #16
   14558:	add	r3, sp, #12
   1455c:	sub	r5, r5, #1
   14560:	add	r6, r6, r5
   14564:	sub	r8, r8, #-1073741823	; 0xc0000001
   14568:	add	r1, r1, r8, lsl #2
   1456c:	ldr	r2, [r3, #4]!
   14570:	strb	r2, [r6, #1]!
   14574:	cmp	r3, r1
   14578:	bne	1456c <ReadUInt8Data+0x6fc>
   1457c:	b	14ce0 <ReadUInt8Data+0xe70>
   14580:	ldr	r3, [sl]
   14584:	mov	r2, r8
   14588:	ldr	r1, [sp, #4]
   1458c:	add	r0, sp, #16
   14590:	bl	1588 <fread@plt>
   14594:	mov	r9, r0
   14598:	cmp	r8, #0
   1459c:	ble	14ce0 <ReadUInt8Data+0xe70>
   145a0:	add	r1, sp, #16
   145a4:	add	r3, sp, #12
   145a8:	sub	r6, r6, #1
   145ac:	sub	r8, r8, #-1073741823	; 0xc0000001
   145b0:	add	r1, r1, r8, lsl #2
   145b4:	ldr	r2, [r3, #4]!
   145b8:	strb	r2, [r6, #1]!
   145bc:	cmp	r3, r1
   145c0:	bne	145b4 <ReadUInt8Data+0x744>
   145c4:	b	14ce0 <ReadUInt8Data+0xe70>
   145c8:	ldr	r9, [sl, #20]
   145cc:	cmp	r9, #0
   145d0:	beq	146f8 <ReadUInt8Data+0x888>
   145d4:	cmp	r8, #256	; 0x100
   145d8:	ble	146b0 <ReadUInt8Data+0x840>
   145dc:	sub	r3, r8, #256	; 0x100
   145e0:	cmp	r3, #0
   145e4:	movle	fp, #0
   145e8:	movle	r9, fp
   145ec:	ble	14658 <ReadUInt8Data+0x7e8>
   145f0:	mov	fp, #0
   145f4:	mov	r9, fp
   145f8:	add	r2, sp, #16
   145fc:	str	r2, [sp, #8]
   14600:	add	r7, sp, #1040	; 0x410
   14604:	str	r8, [sp, #12]
   14608:	mov	r8, r3
   1460c:	ldr	r3, [sl]
   14610:	mov	r2, #256	; 0x100
   14614:	ldr	r1, [sp, #4]
   14618:	ldr	r4, [sp, #8]
   1461c:	mov	r0, r4
   14620:	bl	1588 <fread@plt>
   14624:	add	r9, r9, r0
   14628:	sub	r5, fp, #1
   1462c:	add	r5, r6, r5
   14630:	mov	r0, r4
   14634:	bl	1a88 <Mat_uint32Swap>
   14638:	strb	r0, [r5, #1]!
   1463c:	add	r4, r4, #4
   14640:	cmp	r4, r7
   14644:	bne	14630 <ReadUInt8Data+0x7c0>
   14648:	add	fp, fp, #256	; 0x100
   1464c:	cmp	fp, r8
   14650:	blt	1460c <ReadUInt8Data+0x79c>
   14654:	ldr	r8, [sp, #12]
   14658:	cmp	r8, fp
   1465c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14660:	sub	r8, r8, fp
   14664:	ldr	r3, [sl]
   14668:	mov	r2, r8
   1466c:	ldr	r1, [sp, #4]
   14670:	add	r0, sp, #16
   14674:	bl	1588 <fread@plt>
   14678:	add	r9, r9, r0
   1467c:	cmp	r8, #0
   14680:	ble	14ce0 <ReadUInt8Data+0xe70>
   14684:	add	r5, sp, #16
   14688:	add	r4, r6, fp
   1468c:	add	r8, r8, fp
   14690:	add	r6, r6, r8
   14694:	mov	r0, r5
   14698:	bl	1a88 <Mat_uint32Swap>
   1469c:	strb	r0, [r4], #1
   146a0:	add	r5, r5, #4
   146a4:	cmp	r4, r6
   146a8:	bne	14694 <ReadUInt8Data+0x824>
   146ac:	b	14ce0 <ReadUInt8Data+0xe70>
   146b0:	ldr	r3, [sl]
   146b4:	mov	r2, r8
   146b8:	ldr	r1, [sp, #4]
   146bc:	add	r0, sp, #16
   146c0:	bl	1588 <fread@plt>
   146c4:	mov	r9, r0
   146c8:	cmp	r8, #0
   146cc:	ble	14ce0 <ReadUInt8Data+0xe70>
   146d0:	add	r5, sp, #16
   146d4:	mov	r4, r6
   146d8:	add	r6, r6, r8
   146dc:	mov	r0, r5
   146e0:	bl	1a88 <Mat_uint32Swap>
   146e4:	strb	r0, [r4], #1
   146e8:	add	r5, r5, #4
   146ec:	cmp	r4, r6
   146f0:	bne	146dc <ReadUInt8Data+0x86c>
   146f4:	b	14ce0 <ReadUInt8Data+0xe70>
   146f8:	cmp	r8, #256	; 0x100
   146fc:	ble	147b4 <ReadUInt8Data+0x944>
   14700:	sub	fp, r8, #256	; 0x100
   14704:	cmp	fp, #0
   14708:	movle	r5, r9
   1470c:	ble	1475c <ReadUInt8Data+0x8ec>
   14710:	mov	r5, r9
   14714:	add	r7, sp, #16
   14718:	add	r4, r7, #1020	; 0x3fc
   1471c:	ldr	r3, [sl]
   14720:	mov	r2, #256	; 0x100
   14724:	ldr	r1, [sp, #4]
   14728:	mov	r0, r7
   1472c:	bl	1588 <fread@plt>
   14730:	add	r9, r9, r0
   14734:	sub	r3, r7, #4
   14738:	sub	r2, r5, #1
   1473c:	add	r2, r6, r2
   14740:	ldr	r1, [r3, #4]!
   14744:	strb	r1, [r2, #1]!
   14748:	cmp	r3, r4
   1474c:	bne	14740 <ReadUInt8Data+0x8d0>
   14750:	add	r5, r5, #256	; 0x100
   14754:	cmp	r5, fp
   14758:	blt	1471c <ReadUInt8Data+0x8ac>
   1475c:	cmp	r8, r5
   14760:	ble	14ce0 <ReadUInt8Data+0xe70>
   14764:	sub	r8, r8, r5
   14768:	ldr	r3, [sl]
   1476c:	mov	r2, r8
   14770:	ldr	r1, [sp, #4]
   14774:	add	r0, sp, #16
   14778:	bl	1588 <fread@plt>
   1477c:	add	r9, r9, r0
   14780:	cmp	r8, #0
   14784:	ble	14ce0 <ReadUInt8Data+0xe70>
   14788:	add	r1, sp, #16
   1478c:	add	r3, sp, #12
   14790:	sub	r5, r5, #1
   14794:	add	r6, r6, r5
   14798:	sub	r8, r8, #-1073741823	; 0xc0000001
   1479c:	add	r1, r1, r8, lsl #2
   147a0:	ldr	r2, [r3, #4]!
   147a4:	strb	r2, [r6, #1]!
   147a8:	cmp	r3, r1
   147ac:	bne	147a0 <ReadUInt8Data+0x930>
   147b0:	b	14ce0 <ReadUInt8Data+0xe70>
   147b4:	ldr	r3, [sl]
   147b8:	mov	r2, r8
   147bc:	ldr	r1, [sp, #4]
   147c0:	add	r0, sp, #16
   147c4:	bl	1588 <fread@plt>
   147c8:	mov	r9, r0
   147cc:	cmp	r8, #0
   147d0:	ble	14ce0 <ReadUInt8Data+0xe70>
   147d4:	add	r1, sp, #16
   147d8:	add	r3, sp, #12
   147dc:	sub	r6, r6, #1
   147e0:	sub	r8, r8, #-1073741823	; 0xc0000001
   147e4:	add	r1, r1, r8, lsl #2
   147e8:	ldr	r2, [r3, #4]!
   147ec:	strb	r2, [r6, #1]!
   147f0:	cmp	r3, r1
   147f4:	bne	147e8 <ReadUInt8Data+0x978>
   147f8:	b	14ce0 <ReadUInt8Data+0xe70>
   147fc:	ldr	r9, [sl, #20]
   14800:	cmp	r9, #0
   14804:	beq	1492c <ReadUInt8Data+0xabc>
   14808:	cmp	r8, #256	; 0x100
   1480c:	ble	148e4 <ReadUInt8Data+0xa74>
   14810:	sub	r3, r8, #256	; 0x100
   14814:	cmp	r3, #0
   14818:	movle	fp, #0
   1481c:	movle	r9, fp
   14820:	ble	1488c <ReadUInt8Data+0xa1c>
   14824:	mov	fp, #0
   14828:	mov	r9, fp
   1482c:	add	r2, sp, #16
   14830:	str	r2, [sp, #8]
   14834:	add	r7, sp, #528	; 0x210
   14838:	str	r8, [sp, #12]
   1483c:	mov	r8, r3
   14840:	ldr	r3, [sl]
   14844:	mov	r2, #256	; 0x100
   14848:	ldr	r1, [sp, #4]
   1484c:	ldr	r4, [sp, #8]
   14850:	mov	r0, r4
   14854:	bl	1588 <fread@plt>
   14858:	add	r9, r9, r0
   1485c:	sub	r5, fp, #1
   14860:	add	r5, r6, r5
   14864:	mov	r0, r4
   14868:	bl	1ae4 <Mat_int16Swap>
   1486c:	strb	r0, [r5, #1]!
   14870:	add	r4, r4, #2
   14874:	cmp	r4, r7
   14878:	bne	14864 <ReadUInt8Data+0x9f4>
   1487c:	add	fp, fp, #256	; 0x100
   14880:	cmp	fp, r8
   14884:	blt	14840 <ReadUInt8Data+0x9d0>
   14888:	ldr	r8, [sp, #12]
   1488c:	cmp	r8, fp
   14890:	ble	14ce0 <ReadUInt8Data+0xe70>
   14894:	sub	r8, r8, fp
   14898:	ldr	r3, [sl]
   1489c:	mov	r2, r8
   148a0:	ldr	r1, [sp, #4]
   148a4:	add	r0, sp, #16
   148a8:	bl	1588 <fread@plt>
   148ac:	add	r9, r9, r0
   148b0:	cmp	r8, #0
   148b4:	ble	14ce0 <ReadUInt8Data+0xe70>
   148b8:	add	r5, sp, #16
   148bc:	add	r4, r6, fp
   148c0:	add	fp, fp, r8
   148c4:	add	r6, r6, fp
   148c8:	mov	r0, r5
   148cc:	bl	1ae4 <Mat_int16Swap>
   148d0:	strb	r0, [r4], #1
   148d4:	add	r5, r5, #2
   148d8:	cmp	r4, r6
   148dc:	bne	148c8 <ReadUInt8Data+0xa58>
   148e0:	b	14ce0 <ReadUInt8Data+0xe70>
   148e4:	ldr	r3, [sl]
   148e8:	mov	r2, r8
   148ec:	ldr	r1, [sp, #4]
   148f0:	add	r0, sp, #16
   148f4:	bl	1588 <fread@plt>
   148f8:	mov	r9, r0
   148fc:	cmp	r8, #0
   14900:	ble	14ce0 <ReadUInt8Data+0xe70>
   14904:	add	r5, sp, #16
   14908:	mov	r4, r6
   1490c:	add	r6, r6, r8
   14910:	mov	r0, r5
   14914:	bl	1ae4 <Mat_int16Swap>
   14918:	strb	r0, [r4], #1
   1491c:	add	r5, r5, #2
   14920:	cmp	r6, r4
   14924:	bne	14910 <ReadUInt8Data+0xaa0>
   14928:	b	14ce0 <ReadUInt8Data+0xe70>
   1492c:	cmp	r8, #256	; 0x100
   14930:	ble	149ec <ReadUInt8Data+0xb7c>
   14934:	sub	fp, r8, #256	; 0x100
   14938:	cmp	fp, #0
   1493c:	movle	r5, r9
   14940:	ble	14994 <ReadUInt8Data+0xb24>
   14944:	mov	r5, r9
   14948:	add	r7, sp, #16
   1494c:	add	r4, r7, #508	; 0x1fc
   14950:	add	r4, r4, #2
   14954:	ldr	r3, [sl]
   14958:	mov	r2, #256	; 0x100
   1495c:	ldr	r1, [sp, #4]
   14960:	mov	r0, r7
   14964:	bl	1588 <fread@plt>
   14968:	add	r9, r9, r0
   1496c:	sub	r3, r7, #2
   14970:	sub	r2, r5, #1
   14974:	add	r2, r6, r2
   14978:	ldrh	r1, [r3, #2]!
   1497c:	strb	r1, [r2, #1]!
   14980:	cmp	r3, r4
   14984:	bne	14978 <ReadUInt8Data+0xb08>
   14988:	add	r5, r5, #256	; 0x100
   1498c:	cmp	r5, fp
   14990:	blt	14954 <ReadUInt8Data+0xae4>
   14994:	cmp	r8, r5
   14998:	ble	14ce0 <ReadUInt8Data+0xe70>
   1499c:	sub	r8, r8, r5
   149a0:	ldr	r3, [sl]
   149a4:	mov	r2, r8
   149a8:	ldr	r1, [sp, #4]
   149ac:	add	r0, sp, #16
   149b0:	bl	1588 <fread@plt>
   149b4:	add	r9, r9, r0
   149b8:	cmp	r8, #0
   149bc:	ble	14ce0 <ReadUInt8Data+0xe70>
   149c0:	add	r1, sp, #16
   149c4:	add	r3, sp, #14
   149c8:	sub	r5, r5, #1
   149cc:	add	r6, r6, r5
   149d0:	sub	r8, r8, #-2147483647	; 0x80000001
   149d4:	add	r1, r1, r8, lsl #1
   149d8:	ldrh	r2, [r3, #2]!
   149dc:	strb	r2, [r6, #1]!
   149e0:	cmp	r3, r1
   149e4:	bne	149d8 <ReadUInt8Data+0xb68>
   149e8:	b	14ce0 <ReadUInt8Data+0xe70>
   149ec:	ldr	r3, [sl]
   149f0:	mov	r2, r8
   149f4:	ldr	r1, [sp, #4]
   149f8:	add	r0, sp, #16
   149fc:	bl	1588 <fread@plt>
   14a00:	mov	r9, r0
   14a04:	cmp	r8, #0
   14a08:	ble	14ce0 <ReadUInt8Data+0xe70>
   14a0c:	add	r1, sp, #16
   14a10:	add	r3, sp, #14
   14a14:	sub	r6, r6, #1
   14a18:	sub	r8, r8, #-2147483647	; 0x80000001
   14a1c:	add	r1, r1, r8, lsl #1
   14a20:	ldrh	r2, [r3, #2]!
   14a24:	strb	r2, [r6, #1]!
   14a28:	cmp	r3, r1
   14a2c:	bne	14a20 <ReadUInt8Data+0xbb0>
   14a30:	b	14ce0 <ReadUInt8Data+0xe70>
   14a34:	ldr	r9, [sl, #20]
   14a38:	cmp	r9, #0
   14a3c:	beq	14b64 <ReadUInt8Data+0xcf4>
   14a40:	cmp	r8, #256	; 0x100
   14a44:	ble	14b1c <ReadUInt8Data+0xcac>
   14a48:	sub	r3, r8, #256	; 0x100
   14a4c:	cmp	r3, #0
   14a50:	movle	fp, #0
   14a54:	movle	r9, fp
   14a58:	ble	14ac4 <ReadUInt8Data+0xc54>
   14a5c:	mov	fp, #0
   14a60:	mov	r9, fp
   14a64:	add	r2, sp, #16
   14a68:	str	r2, [sp, #8]
   14a6c:	add	r7, sp, #528	; 0x210
   14a70:	str	r8, [sp, #12]
   14a74:	mov	r8, r3
   14a78:	ldr	r3, [sl]
   14a7c:	mov	r2, #256	; 0x100
   14a80:	ldr	r1, [sp, #4]
   14a84:	ldr	r4, [sp, #8]
   14a88:	mov	r0, r4
   14a8c:	bl	1588 <fread@plt>
   14a90:	add	r9, r9, r0
   14a94:	sub	r5, fp, #1
   14a98:	add	r5, r6, r5
   14a9c:	mov	r0, r4
   14aa0:	bl	1b1c <Mat_uint16Swap>
   14aa4:	strb	r0, [r5, #1]!
   14aa8:	add	r4, r4, #2
   14aac:	cmp	r4, r7
   14ab0:	bne	14a9c <ReadUInt8Data+0xc2c>
   14ab4:	add	fp, fp, #256	; 0x100
   14ab8:	cmp	fp, r8
   14abc:	blt	14a78 <ReadUInt8Data+0xc08>
   14ac0:	ldr	r8, [sp, #12]
   14ac4:	cmp	r8, fp
   14ac8:	ble	14ce0 <ReadUInt8Data+0xe70>
   14acc:	sub	r8, r8, fp
   14ad0:	ldr	r3, [sl]
   14ad4:	mov	r2, r8
   14ad8:	ldr	r1, [sp, #4]
   14adc:	add	r0, sp, #16
   14ae0:	bl	1588 <fread@plt>
   14ae4:	add	r9, r9, r0
   14ae8:	cmp	r8, #0
   14aec:	ble	14ce0 <ReadUInt8Data+0xe70>
   14af0:	add	r5, sp, #16
   14af4:	add	r4, r6, fp
   14af8:	add	r8, r8, fp
   14afc:	add	r6, r6, r8
   14b00:	mov	r0, r5
   14b04:	bl	1b1c <Mat_uint16Swap>
   14b08:	strb	r0, [r4], #1
   14b0c:	add	r5, r5, #2
   14b10:	cmp	r4, r6
   14b14:	bne	14b00 <ReadUInt8Data+0xc90>
   14b18:	b	14ce0 <ReadUInt8Data+0xe70>
   14b1c:	ldr	r3, [sl]
   14b20:	mov	r2, r8
   14b24:	ldr	r1, [sp, #4]
   14b28:	add	r0, sp, #16
   14b2c:	bl	1588 <fread@plt>
   14b30:	mov	r9, r0
   14b34:	cmp	r8, #0
   14b38:	ble	14ce0 <ReadUInt8Data+0xe70>
   14b3c:	add	r5, sp, #16
   14b40:	mov	r4, r6
   14b44:	add	r6, r6, r8
   14b48:	mov	r0, r5
   14b4c:	bl	1b1c <Mat_uint16Swap>
   14b50:	strb	r0, [r4], #1
   14b54:	add	r5, r5, #2
   14b58:	cmp	r4, r6
   14b5c:	bne	14b48 <ReadUInt8Data+0xcd8>
   14b60:	b	14ce0 <ReadUInt8Data+0xe70>
   14b64:	cmp	r8, #256	; 0x100
   14b68:	ble	14c24 <ReadUInt8Data+0xdb4>
   14b6c:	sub	fp, r8, #256	; 0x100
   14b70:	cmp	fp, #0
   14b74:	movle	r5, r9
   14b78:	ble	14bcc <ReadUInt8Data+0xd5c>
   14b7c:	mov	r5, r9
   14b80:	add	r7, sp, #16
   14b84:	add	r4, r7, #508	; 0x1fc
   14b88:	add	r4, r4, #2
   14b8c:	ldr	r3, [sl]
   14b90:	mov	r2, #256	; 0x100
   14b94:	ldr	r1, [sp, #4]
   14b98:	mov	r0, r7
   14b9c:	bl	1588 <fread@plt>
   14ba0:	add	r9, r9, r0
   14ba4:	sub	r3, r7, #2
   14ba8:	sub	r2, r5, #1
   14bac:	add	r2, r6, r2
   14bb0:	ldrh	r1, [r3, #2]!
   14bb4:	strb	r1, [r2, #1]!
   14bb8:	cmp	r3, r4
   14bbc:	bne	14bb0 <ReadUInt8Data+0xd40>
   14bc0:	add	r5, r5, #256	; 0x100
   14bc4:	cmp	r5, fp
   14bc8:	blt	14b8c <ReadUInt8Data+0xd1c>
   14bcc:	cmp	r8, r5
   14bd0:	ble	14ce0 <ReadUInt8Data+0xe70>
   14bd4:	sub	r8, r8, r5
   14bd8:	ldr	r3, [sl]
   14bdc:	mov	r2, r8
   14be0:	ldr	r1, [sp, #4]
   14be4:	add	r0, sp, #16
   14be8:	bl	1588 <fread@plt>
   14bec:	add	r9, r9, r0
   14bf0:	cmp	r8, #0
   14bf4:	ble	14ce0 <ReadUInt8Data+0xe70>
   14bf8:	add	r1, sp, #16
   14bfc:	add	r3, sp, #14
   14c00:	sub	r5, r5, #1
   14c04:	add	r6, r6, r5
   14c08:	sub	r8, r8, #-2147483647	; 0x80000001
   14c0c:	add	r1, r1, r8, lsl #1
   14c10:	ldrh	r2, [r3, #2]!
   14c14:	strb	r2, [r6, #1]!
   14c18:	cmp	r3, r1
   14c1c:	bne	14c10 <ReadUInt8Data+0xda0>
   14c20:	b	14ce0 <ReadUInt8Data+0xe70>
   14c24:	ldr	r3, [sl]
   14c28:	mov	r2, r8
   14c2c:	ldr	r1, [sp, #4]
   14c30:	add	r0, sp, #16
   14c34:	bl	1588 <fread@plt>
   14c38:	mov	r9, r0
   14c3c:	cmp	r8, #0
   14c40:	ble	14ce0 <ReadUInt8Data+0xe70>
   14c44:	add	r1, sp, #16
   14c48:	add	r3, sp, #14
   14c4c:	sub	r6, r6, #1
   14c50:	sub	r8, r8, #-2147483647	; 0x80000001
   14c54:	add	r1, r1, r8, lsl #1
   14c58:	ldrh	r2, [r3, #2]!
   14c5c:	strb	r2, [r6, #1]!
   14c60:	cmp	r3, r1
   14c64:	bne	14c58 <ReadUInt8Data+0xde8>
   14c68:	b	14ce0 <ReadUInt8Data+0xe70>
   14c6c:	cmp	r8, #256	; 0x100
   14c70:	ble	14cf4 <ReadUInt8Data+0xe84>
   14c74:	sub	fp, r8, #256	; 0x100
   14c78:	cmp	fp, #0
   14c7c:	movle	r5, #0
   14c80:	movle	r9, r5
   14c84:	ble	14cd8 <ReadUInt8Data+0xe68>
   14c88:	mov	r5, #0
   14c8c:	mov	r9, r5
   14c90:	add	r7, sp, #16
   14c94:	add	r4, r7, #255	; 0xff
   14c98:	ldr	r3, [sl]
   14c9c:	mov	r2, #256	; 0x100
   14ca0:	ldr	r1, [sp, #4]
   14ca4:	mov	r0, r7
   14ca8:	bl	1588 <fread@plt>
   14cac:	add	r9, r9, r0
   14cb0:	sub	r3, r7, #1
   14cb4:	sub	r2, r5, #1
   14cb8:	add	r2, r6, r2
   14cbc:	ldrb	r1, [r3, #1]!
   14cc0:	strb	r1, [r2, #1]!
   14cc4:	cmp	r3, r4
   14cc8:	bne	14cbc <ReadUInt8Data+0xe4c>
   14ccc:	add	r5, r5, #256	; 0x100
   14cd0:	cmp	r5, fp
   14cd4:	blt	14c98 <ReadUInt8Data+0xe28>
   14cd8:	cmp	r8, r5
   14cdc:	bgt	14d3c <ReadUInt8Data+0xecc>
   14ce0:	ldr	r3, [sp, #4]
   14ce4:	mul	r0, r3, r9
   14ce8:	add	sp, sp, #2064	; 0x810
   14cec:	add	sp, sp, #4
   14cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cf4:	ldr	r3, [sl]
   14cf8:	mov	r2, r8
   14cfc:	ldr	r1, [sp, #4]
   14d00:	add	r0, sp, #16
   14d04:	bl	1588 <fread@plt>
   14d08:	mov	r9, r0
   14d0c:	cmp	r8, #0
   14d10:	ble	14ce0 <ReadUInt8Data+0xe70>
   14d14:	add	r1, sp, #16
   14d18:	add	r3, sp, #15
   14d1c:	sub	r6, r6, #1
   14d20:	sub	r8, r8, #1
   14d24:	add	r1, r1, r8
   14d28:	ldrb	r2, [r3, #1]!
   14d2c:	strb	r2, [r6, #1]!
   14d30:	cmp	r1, r3
   14d34:	bne	14d28 <ReadUInt8Data+0xeb8>
   14d38:	b	14ce0 <ReadUInt8Data+0xe70>
   14d3c:	sub	r8, r8, r5
   14d40:	ldr	r3, [sl]
   14d44:	mov	r2, r8
   14d48:	ldr	r1, [sp, #4]
   14d4c:	add	r0, sp, #16
   14d50:	bl	1588 <fread@plt>
   14d54:	add	r9, r9, r0
   14d58:	cmp	r8, #0
   14d5c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14d60:	add	r1, sp, #16
   14d64:	add	r3, sp, #15
   14d68:	sub	r5, r5, #1
   14d6c:	add	r6, r6, r5
   14d70:	sub	r8, r8, #1
   14d74:	add	r1, r1, r8
   14d78:	ldrb	r2, [r3, #1]!
   14d7c:	strb	r2, [r6, #1]!
   14d80:	cmp	r1, r3
   14d84:	bne	14d78 <ReadUInt8Data+0xf08>
   14d88:	b	14ce0 <ReadUInt8Data+0xe70>
   14d8c:	cmp	r8, #256	; 0x100
   14d90:	ble	14e50 <ReadUInt8Data+0xfe0>
   14d94:	sub	fp, r8, #256	; 0x100
   14d98:	cmp	fp, #0
   14d9c:	movle	r5, #0
   14da0:	movle	r9, r5
   14da4:	ble	14df8 <ReadUInt8Data+0xf88>
   14da8:	mov	r5, #0
   14dac:	mov	r9, r5
   14db0:	add	r7, sp, #16
   14db4:	add	r4, r7, #255	; 0xff
   14db8:	ldr	r3, [sl]
   14dbc:	mov	r2, #256	; 0x100
   14dc0:	ldr	r1, [sp, #4]
   14dc4:	mov	r0, r7
   14dc8:	bl	1588 <fread@plt>
   14dcc:	add	r9, r9, r0
   14dd0:	sub	r3, r7, #1
   14dd4:	sub	r2, r5, #1
   14dd8:	add	r2, r6, r2
   14ddc:	ldrb	r1, [r3, #1]!
   14de0:	strb	r1, [r2, #1]!
   14de4:	cmp	r4, r3
   14de8:	bne	14ddc <ReadUInt8Data+0xf6c>
   14dec:	add	r5, r5, #256	; 0x100
   14df0:	cmp	r5, fp
   14df4:	blt	14db8 <ReadUInt8Data+0xf48>
   14df8:	cmp	r8, r5
   14dfc:	ble	14ce0 <ReadUInt8Data+0xe70>
   14e00:	sub	r8, r8, r5
   14e04:	ldr	r3, [sl]
   14e08:	mov	r2, r8
   14e0c:	ldr	r1, [sp, #4]
   14e10:	add	r0, sp, #16
   14e14:	bl	1588 <fread@plt>
   14e18:	add	r9, r9, r0
   14e1c:	cmp	r8, #0
   14e20:	ble	14ce0 <ReadUInt8Data+0xe70>
   14e24:	add	r1, sp, #16
   14e28:	add	r3, sp, #15
   14e2c:	sub	r5, r5, #1
   14e30:	add	r6, r6, r5
   14e34:	sub	r8, r8, #1
   14e38:	add	r1, r1, r8
   14e3c:	ldrb	r2, [r3, #1]!
   14e40:	strb	r2, [r6, #1]!
   14e44:	cmp	r1, r3
   14e48:	bne	14e3c <ReadUInt8Data+0xfcc>
   14e4c:	b	14ce0 <ReadUInt8Data+0xe70>
   14e50:	ldr	r3, [sl]
   14e54:	mov	r2, r8
   14e58:	ldr	r1, [sp, #4]
   14e5c:	add	r0, sp, #16
   14e60:	bl	1588 <fread@plt>
   14e64:	mov	r9, r0
   14e68:	cmp	r8, #0
   14e6c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14e70:	add	r1, sp, #16
   14e74:	add	r3, sp, #15
   14e78:	sub	r6, r6, #1
   14e7c:	sub	r8, r8, #1
   14e80:	add	r1, r1, r8
   14e84:	ldrb	r2, [r3, #1]!
   14e88:	strb	r2, [r6, #1]!
   14e8c:	cmp	r3, r1
   14e90:	bne	14e84 <ReadUInt8Data+0x1014>
   14e94:	b	14ce0 <ReadUInt8Data+0xe70>
   14e98:	cmp	r4, #12
   14e9c:	beq	14f90 <ReadUInt8Data+0x1120>
   14ea0:	cmp	r4, #13
   14ea4:	movne	r9, #0
   14ea8:	bne	14ce0 <ReadUInt8Data+0xe70>
   14eac:	ldr	r9, [sl, #20]
   14eb0:	cmp	r9, #0
   14eb4:	beq	1520c <ReadUInt8Data+0x139c>
   14eb8:	cmp	r8, #256	; 0x100
   14ebc:	ble	151c4 <ReadUInt8Data+0x1354>
   14ec0:	sub	r3, r8, #256	; 0x100
   14ec4:	str	r3, [sp, #8]
   14ec8:	cmp	r3, #0
   14ecc:	movle	fp, #0
   14ed0:	movle	r9, fp
   14ed4:	ble	14f38 <ReadUInt8Data+0x10c8>
   14ed8:	mov	fp, #0
   14edc:	mov	r9, fp
   14ee0:	add	r3, sp, #16
   14ee4:	str	r3, [sp, #12]
   14ee8:	ldr	r3, [sl]
   14eec:	mov	r2, #256	; 0x100
   14ef0:	ldr	r1, [sp, #4]
   14ef4:	ldr	r4, [sp, #12]
   14ef8:	mov	r0, r4
   14efc:	bl	1588 <fread@plt>
   14f00:	add	r9, r9, r0
   14f04:	sub	r5, fp, #1
   14f08:	add	r5, r6, r5
   14f0c:	add	r7, sp, #2064	; 0x810
   14f10:	mov	r0, r4
   14f14:	bl	1984 <Mat_uint64Swap>
   14f18:	strb	r0, [r5, #1]!
   14f1c:	add	r4, r4, #8
   14f20:	cmp	r7, r4
   14f24:	bne	14f10 <ReadUInt8Data+0x10a0>
   14f28:	add	fp, fp, #256	; 0x100
   14f2c:	ldr	r3, [sp, #8]
   14f30:	cmp	fp, r3
   14f34:	blt	14ee8 <ReadUInt8Data+0x1078>
   14f38:	cmp	r8, fp
   14f3c:	ble	14ce0 <ReadUInt8Data+0xe70>
   14f40:	sub	r8, r8, fp
   14f44:	ldr	r3, [sl]
   14f48:	mov	r2, r8
   14f4c:	ldr	r1, [sp, #4]
   14f50:	add	r0, sp, #16
   14f54:	bl	1588 <fread@plt>
   14f58:	add	r9, r9, r0
   14f5c:	cmp	r8, #0
   14f60:	ble	14ce0 <ReadUInt8Data+0xe70>
   14f64:	add	r5, sp, #16
   14f68:	add	r4, r6, fp
   14f6c:	add	r8, r8, fp
   14f70:	add	r6, r6, r8
   14f74:	mov	r0, r5
   14f78:	bl	1984 <Mat_uint64Swap>
   14f7c:	strb	r0, [r4], #1
   14f80:	add	r5, r5, #8
   14f84:	cmp	r6, r4
   14f88:	bne	14f74 <ReadUInt8Data+0x1104>
   14f8c:	b	14ce0 <ReadUInt8Data+0xe70>
   14f90:	ldr	r9, [sl, #20]
   14f94:	cmp	r9, #0
   14f98:	beq	150bc <ReadUInt8Data+0x124c>
   14f9c:	cmp	r8, #256	; 0x100
   14fa0:	ble	15074 <ReadUInt8Data+0x1204>
   14fa4:	sub	r3, r8, #256	; 0x100
   14fa8:	str	r3, [sp, #8]
   14fac:	cmp	r3, #0
   14fb0:	movle	fp, #0
   14fb4:	movle	r9, fp
   14fb8:	ble	1501c <ReadUInt8Data+0x11ac>
   14fbc:	mov	fp, #0
   14fc0:	mov	r9, fp
   14fc4:	add	r3, sp, #16
   14fc8:	str	r3, [sp, #12]
   14fcc:	ldr	r3, [sl]
   14fd0:	mov	r2, #256	; 0x100
   14fd4:	ldr	r1, [sp, #4]
   14fd8:	ldr	r4, [sp, #12]
   14fdc:	mov	r0, r4
   14fe0:	bl	1588 <fread@plt>
   14fe4:	add	r9, r9, r0
   14fe8:	sub	r5, fp, #1
   14fec:	add	r5, r6, r5
   14ff0:	add	r7, sp, #2064	; 0x810
   14ff4:	mov	r0, r4
   14ff8:	bl	18bc <Mat_int64Swap>
   14ffc:	strb	r0, [r5, #1]!
   15000:	add	r4, r4, #8
   15004:	cmp	r4, r7
   15008:	bne	14ff4 <ReadUInt8Data+0x1184>
   1500c:	add	fp, fp, #256	; 0x100
   15010:	ldr	r3, [sp, #8]
   15014:	cmp	fp, r3
   15018:	blt	14fcc <ReadUInt8Data+0x115c>
   1501c:	cmp	r8, fp
   15020:	ble	14ce0 <ReadUInt8Data+0xe70>
   15024:	sub	r8, r8, fp
   15028:	ldr	r3, [sl]
   1502c:	mov	r2, r8
   15030:	ldr	r1, [sp, #4]
   15034:	add	r0, sp, #16
   15038:	bl	1588 <fread@plt>
   1503c:	add	r9, r9, r0
   15040:	cmp	r8, #0
   15044:	ble	14ce0 <ReadUInt8Data+0xe70>
   15048:	add	r5, sp, #16
   1504c:	add	r4, r6, fp
   15050:	add	r8, r8, fp
   15054:	add	r6, r6, r8
   15058:	mov	r0, r5
   1505c:	bl	18bc <Mat_int64Swap>
   15060:	strb	r0, [r4], #1
   15064:	add	r5, r5, #8
   15068:	cmp	r4, r6
   1506c:	bne	15058 <ReadUInt8Data+0x11e8>
   15070:	b	14ce0 <ReadUInt8Data+0xe70>
   15074:	ldr	r3, [sl]
   15078:	mov	r2, r8
   1507c:	ldr	r1, [sp, #4]
   15080:	add	r0, sp, #16
   15084:	bl	1588 <fread@plt>
   15088:	mov	r9, r0
   1508c:	cmp	r8, #0
   15090:	ble	14ce0 <ReadUInt8Data+0xe70>
   15094:	add	r5, sp, #16
   15098:	mov	r4, r6
   1509c:	add	r6, r6, r8
   150a0:	mov	r0, r5
   150a4:	bl	18bc <Mat_int64Swap>
   150a8:	strb	r0, [r4], #1
   150ac:	add	r5, r5, #8
   150b0:	cmp	r6, r4
   150b4:	bne	150a0 <ReadUInt8Data+0x1230>
   150b8:	b	14ce0 <ReadUInt8Data+0xe70>
   150bc:	cmp	r8, #256	; 0x100
   150c0:	ble	1517c <ReadUInt8Data+0x130c>
   150c4:	sub	fp, r8, #256	; 0x100
   150c8:	cmp	fp, #0
   150cc:	movle	r5, r9
   150d0:	ble	15124 <ReadUInt8Data+0x12b4>
   150d4:	mov	r5, r9
   150d8:	add	r7, sp, #16
   150dc:	add	r4, sp, #2048	; 0x800
   150e0:	add	r4, r4, #8
   150e4:	ldr	r3, [sl]
   150e8:	mov	r2, #256	; 0x100
   150ec:	ldr	r1, [sp, #4]
   150f0:	mov	r0, r7
   150f4:	bl	1588 <fread@plt>
   150f8:	add	r9, r9, r0
   150fc:	sub	r3, r7, #8
   15100:	sub	r2, r5, #1
   15104:	add	r2, r6, r2
   15108:	ldr	r1, [r3, #8]!
   1510c:	strb	r1, [r2, #1]!
   15110:	cmp	r3, r4
   15114:	bne	15108 <ReadUInt8Data+0x1298>
   15118:	add	r5, r5, #256	; 0x100
   1511c:	cmp	r5, fp
   15120:	blt	150e4 <ReadUInt8Data+0x1274>
   15124:	cmp	r8, r5
   15128:	ble	14ce0 <ReadUInt8Data+0xe70>
   1512c:	sub	r8, r8, r5
   15130:	ldr	r3, [sl]
   15134:	mov	r2, r8
   15138:	ldr	r1, [sp, #4]
   1513c:	add	r0, sp, #16
   15140:	bl	1588 <fread@plt>
   15144:	add	r9, r9, r0
   15148:	cmp	r8, #0
   1514c:	ble	14ce0 <ReadUInt8Data+0xe70>
   15150:	add	r2, sp, #16
   15154:	add	r3, sp, #8
   15158:	sub	r5, r5, #1
   1515c:	add	r6, r6, r5
   15160:	sub	r8, r8, #-536870911	; 0xe0000001
   15164:	add	r2, r2, r8, lsl #3
   15168:	ldr	r1, [r3, #8]!
   1516c:	strb	r1, [r6, #1]!
   15170:	cmp	r2, r3
   15174:	bne	15168 <ReadUInt8Data+0x12f8>
   15178:	b	14ce0 <ReadUInt8Data+0xe70>
   1517c:	ldr	r3, [sl]
   15180:	mov	r2, r8
   15184:	ldr	r1, [sp, #4]
   15188:	add	r0, sp, #16
   1518c:	bl	1588 <fread@plt>
   15190:	mov	r9, r0
   15194:	cmp	r8, #0
   15198:	ble	14ce0 <ReadUInt8Data+0xe70>
   1519c:	add	r1, sp, #16
   151a0:	add	r3, sp, #8
   151a4:	sub	r6, r6, #1
   151a8:	sub	r8, r8, #-536870911	; 0xe0000001
   151ac:	add	r1, r1, r8, lsl #3
   151b0:	ldr	r2, [r3, #8]!
   151b4:	strb	r2, [r6, #1]!
   151b8:	cmp	r1, r3
   151bc:	bne	151b0 <ReadUInt8Data+0x1340>
   151c0:	b	14ce0 <ReadUInt8Data+0xe70>
   151c4:	ldr	r3, [sl]
   151c8:	mov	r2, r8
   151cc:	ldr	r1, [sp, #4]
   151d0:	add	r0, sp, #16
   151d4:	bl	1588 <fread@plt>
   151d8:	mov	r9, r0
   151dc:	cmp	r8, #0
   151e0:	ble	14ce0 <ReadUInt8Data+0xe70>
   151e4:	add	r5, sp, #16
   151e8:	mov	r4, r6
   151ec:	add	r6, r6, r8
   151f0:	mov	r0, r5
   151f4:	bl	1984 <Mat_uint64Swap>
   151f8:	strb	r0, [r4], #1
   151fc:	add	r5, r5, #8
   15200:	cmp	r4, r6
   15204:	bne	151f0 <ReadUInt8Data+0x1380>
   15208:	b	14ce0 <ReadUInt8Data+0xe70>
   1520c:	cmp	r8, #256	; 0x100
   15210:	ble	152cc <ReadUInt8Data+0x145c>
   15214:	sub	fp, r8, #256	; 0x100
   15218:	cmp	fp, #0
   1521c:	movle	r5, r9
   15220:	ble	15274 <ReadUInt8Data+0x1404>
   15224:	mov	r5, r9
   15228:	add	r7, sp, #16
   1522c:	add	r4, sp, #2048	; 0x800
   15230:	add	r4, r4, #8
   15234:	ldr	r3, [sl]
   15238:	mov	r2, #256	; 0x100
   1523c:	ldr	r1, [sp, #4]
   15240:	mov	r0, r7
   15244:	bl	1588 <fread@plt>
   15248:	add	r9, r9, r0
   1524c:	sub	r3, r7, #8
   15250:	sub	r2, r5, #1
   15254:	add	r2, r6, r2
   15258:	ldr	r1, [r3, #8]!
   1525c:	strb	r1, [r2, #1]!
   15260:	cmp	r4, r3
   15264:	bne	15258 <ReadUInt8Data+0x13e8>
   15268:	add	r5, r5, #256	; 0x100
   1526c:	cmp	r5, fp
   15270:	blt	15234 <ReadUInt8Data+0x13c4>
   15274:	cmp	r8, r5
   15278:	ble	14ce0 <ReadUInt8Data+0xe70>
   1527c:	sub	r8, r8, r5
   15280:	ldr	r3, [sl]
   15284:	mov	r2, r8
   15288:	ldr	r1, [sp, #4]
   1528c:	add	r0, sp, #16
   15290:	bl	1588 <fread@plt>
   15294:	add	r9, r9, r0
   15298:	cmp	r8, #0
   1529c:	ble	14ce0 <ReadUInt8Data+0xe70>
   152a0:	add	r2, sp, #16
   152a4:	add	r3, sp, #8
   152a8:	sub	r5, r5, #1
   152ac:	add	r6, r6, r5
   152b0:	sub	r8, r8, #-536870911	; 0xe0000001
   152b4:	add	r2, r2, r8, lsl #3
   152b8:	ldr	r1, [r3, #8]!
   152bc:	strb	r1, [r6, #1]!
   152c0:	cmp	r3, r2
   152c4:	bne	152b8 <ReadUInt8Data+0x1448>
   152c8:	b	14ce0 <ReadUInt8Data+0xe70>
   152cc:	ldr	r3, [sl]
   152d0:	mov	r2, r8
   152d4:	ldr	r1, [sp, #4]
   152d8:	add	r0, sp, #16
   152dc:	bl	1588 <fread@plt>
   152e0:	mov	r9, r0
   152e4:	cmp	r8, #0
   152e8:	ble	14ce0 <ReadUInt8Data+0xe70>
   152ec:	add	r1, sp, #16
   152f0:	add	r3, sp, #8
   152f4:	sub	r6, r6, #1
   152f8:	sub	r8, r8, #-536870911	; 0xe0000001
   152fc:	add	r1, r1, r8, lsl #3
   15300:	ldr	r2, [r3, #8]!
   15304:	strb	r2, [r6, #1]!
   15308:	cmp	r3, r1
   1530c:	bne	15300 <ReadUInt8Data+0x1490>
   15310:	b	14ce0 <ReadUInt8Data+0xe70>
   15314:	mov	r0, #0
   15318:	bx	lr

0001531c <ReadCompressedUInt8Data>:
   1531c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15320:	sub	sp, sp, #8
   15324:	ldr	r9, [sp, #40]	; 0x28
   15328:	mov	r4, r2
   1532c:	cmp	r2, #0
   15330:	cmpne	r1, #0
   15334:	moveq	r2, #1
   15338:	movne	r2, #0
   1533c:	cmp	r0, #0
   15340:	orreq	r2, r2, #1
   15344:	cmp	r2, #0
   15348:	movne	r0, #0
   1534c:	bne	153d8 <ReadCompressedUInt8Data+0xbc>
   15350:	mov	r7, r1
   15354:	mov	r6, r0
   15358:	mov	r8, r3
   1535c:	mov	r0, r3
   15360:	bl	1600 <Mat_SizeOf@plt>
   15364:	mov	r5, r0
   15368:	sub	r3, r8, #1
   1536c:	cmp	r3, #8
   15370:	addls	pc, pc, r3, lsl #2
   15374:	b	1576c <ReadCompressedUInt8Data+0x450>
   15378:	b	153e0 <ReadCompressedUInt8Data+0xc4>
   1537c:	b	1539c <ReadCompressedUInt8Data+0x80>
   15380:	b	1565c <ReadCompressedUInt8Data+0x340>
   15384:	b	156e4 <ReadCompressedUInt8Data+0x3c8>
   15388:	b	1554c <ReadCompressedUInt8Data+0x230>
   1538c:	b	155d4 <ReadCompressedUInt8Data+0x2b8>
   15390:	b	154b4 <ReadCompressedUInt8Data+0x198>
   15394:	b	1576c <ReadCompressedUInt8Data+0x450>
   15398:	b	1541c <ReadCompressedUInt8Data+0x100>
   1539c:	cmp	r9, #0
   153a0:	movgt	r8, r4
   153a4:	addgt	r4, r4, r9
   153a8:	movgt	sl, sp
   153ac:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   153b0:	mov	r3, r5
   153b4:	mov	r2, sl
   153b8:	mov	r1, r7
   153bc:	mov	r0, r6
   153c0:	bl	3418 <InflateData>
   153c4:	ldrb	r3, [sp]
   153c8:	strb	r3, [r8], #1
   153cc:	cmp	r4, r8
   153d0:	bne	153b0 <ReadCompressedUInt8Data+0x94>
   153d4:	mul	r0, r5, r9
   153d8:	add	sp, sp, #8
   153dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153e0:	cmp	r9, #0
   153e4:	movgt	r8, r4
   153e8:	addgt	r4, r4, r9
   153ec:	movgt	sl, sp
   153f0:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   153f4:	mov	r3, r5
   153f8:	mov	r2, sl
   153fc:	mov	r1, r7
   15400:	mov	r0, r6
   15404:	bl	3418 <InflateData>
   15408:	ldrb	r3, [sp]
   1540c:	strb	r3, [r8], #1
   15410:	cmp	r4, r8
   15414:	bne	153f4 <ReadCompressedUInt8Data+0xd8>
   15418:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1541c:	ldr	r3, [r6, #20]
   15420:	cmp	r3, #0
   15424:	bne	1546c <ReadCompressedUInt8Data+0x150>
   15428:	cmp	r9, #0
   1542c:	movgt	r8, r4
   15430:	addgt	r4, r4, r9
   15434:	movgt	sl, sp
   15438:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   1543c:	mov	r3, r5
   15440:	mov	r2, sl
   15444:	mov	r1, r7
   15448:	mov	r0, r6
   1544c:	bl	3418 <InflateData>
   15450:	vldr	d7, [sp]
   15454:	vcvt.u32.f64	s15, d7
   15458:	vmov	r3, s15
   1545c:	strb	r3, [r8], #1
   15460:	cmp	r8, r4
   15464:	bne	1543c <ReadCompressedUInt8Data+0x120>
   15468:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1546c:	cmp	r9, #0
   15470:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   15474:	mov	r8, r4
   15478:	add	r4, r4, r9
   1547c:	mov	sl, sp
   15480:	mov	r3, r5
   15484:	mov	r2, sl
   15488:	mov	r1, r7
   1548c:	mov	r0, r6
   15490:	bl	3418 <InflateData>
   15494:	mov	r0, sl
   15498:	bl	1b94 <Mat_doubleSwap>
   1549c:	vcvt.u32.f64	s15, d0
   154a0:	vmov	r3, s15
   154a4:	strb	r3, [r8], #1
   154a8:	cmp	r8, r4
   154ac:	bne	15480 <ReadCompressedUInt8Data+0x164>
   154b0:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   154b4:	ldr	r3, [r6, #20]
   154b8:	cmp	r3, #0
   154bc:	bne	15504 <ReadCompressedUInt8Data+0x1e8>
   154c0:	cmp	r9, #0
   154c4:	movgt	r8, r4
   154c8:	addgt	r4, r4, r9
   154cc:	movgt	sl, sp
   154d0:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   154d4:	mov	r3, r5
   154d8:	mov	r2, sl
   154dc:	mov	r1, r7
   154e0:	mov	r0, r6
   154e4:	bl	3418 <InflateData>
   154e8:	vldr	s15, [sp]
   154ec:	vcvt.u32.f32	s15, s15
   154f0:	vmov	r3, s15
   154f4:	strb	r3, [r8], #1
   154f8:	cmp	r8, r4
   154fc:	bne	154d4 <ReadCompressedUInt8Data+0x1b8>
   15500:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   15504:	cmp	r9, #0
   15508:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   1550c:	mov	r8, r4
   15510:	add	r4, r4, r9
   15514:	mov	sl, sp
   15518:	mov	r3, r5
   1551c:	mov	r2, sl
   15520:	mov	r1, r7
   15524:	mov	r0, r6
   15528:	bl	3418 <InflateData>
   1552c:	mov	r0, sl
   15530:	bl	1b38 <Mat_floatSwap>
   15534:	vcvt.u32.f32	s15, s0
   15538:	vmov	r3, s15
   1553c:	strb	r3, [r8], #1
   15540:	cmp	r4, r8
   15544:	bne	15518 <ReadCompressedUInt8Data+0x1fc>
   15548:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1554c:	ldr	r3, [r6, #20]
   15550:	cmp	r3, #0
   15554:	bne	15594 <ReadCompressedUInt8Data+0x278>
   15558:	cmp	r9, #0
   1555c:	movgt	r8, r4
   15560:	addgt	r4, r4, r9
   15564:	movgt	sl, sp
   15568:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   1556c:	mov	r3, r5
   15570:	mov	r2, sl
   15574:	mov	r1, r7
   15578:	mov	r0, r6
   1557c:	bl	3418 <InflateData>
   15580:	ldr	r3, [sp]
   15584:	strb	r3, [r8], #1
   15588:	cmp	r4, r8
   1558c:	bne	1556c <ReadCompressedUInt8Data+0x250>
   15590:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   15594:	cmp	r9, #0
   15598:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   1559c:	mov	r8, r4
   155a0:	add	r4, r4, r9
   155a4:	mov	sl, sp
   155a8:	mov	r3, r5
   155ac:	mov	r2, sl
   155b0:	mov	r1, r7
   155b4:	mov	r0, r6
   155b8:	bl	3418 <InflateData>
   155bc:	mov	r0, sl
   155c0:	bl	1a20 <Mat_int32Swap>
   155c4:	strb	r0, [r8], #1
   155c8:	cmp	r4, r8
   155cc:	bne	155a8 <ReadCompressedUInt8Data+0x28c>
   155d0:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   155d4:	ldr	r3, [r6, #20]
   155d8:	cmp	r3, #0
   155dc:	bne	1561c <ReadCompressedUInt8Data+0x300>
   155e0:	cmp	r9, #0
   155e4:	movgt	r8, r4
   155e8:	addgt	r4, r4, r9
   155ec:	movgt	sl, sp
   155f0:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   155f4:	mov	r3, r5
   155f8:	mov	r2, sl
   155fc:	mov	r1, r7
   15600:	mov	r0, r6
   15604:	bl	3418 <InflateData>
   15608:	ldr	r3, [sp]
   1560c:	strb	r3, [r8], #1
   15610:	cmp	r8, r4
   15614:	bne	155f4 <ReadCompressedUInt8Data+0x2d8>
   15618:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1561c:	cmp	r9, #0
   15620:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   15624:	mov	r8, r4
   15628:	add	r4, r4, r9
   1562c:	mov	sl, sp
   15630:	mov	r3, r5
   15634:	mov	r2, sl
   15638:	mov	r1, r7
   1563c:	mov	r0, r6
   15640:	bl	3418 <InflateData>
   15644:	mov	r0, sl
   15648:	bl	1a88 <Mat_uint32Swap>
   1564c:	strb	r0, [r8], #1
   15650:	cmp	r4, r8
   15654:	bne	15630 <ReadCompressedUInt8Data+0x314>
   15658:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1565c:	ldr	r3, [r6, #20]
   15660:	cmp	r3, #0
   15664:	bne	156a4 <ReadCompressedUInt8Data+0x388>
   15668:	cmp	r9, #0
   1566c:	movgt	r8, r4
   15670:	addgt	r4, r4, r9
   15674:	movgt	sl, sp
   15678:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   1567c:	mov	r3, r5
   15680:	mov	r2, sl
   15684:	mov	r1, r7
   15688:	mov	r0, r6
   1568c:	bl	3418 <InflateData>
   15690:	ldrh	r3, [sp]
   15694:	strb	r3, [r8], #1
   15698:	cmp	r8, r4
   1569c:	bne	1567c <ReadCompressedUInt8Data+0x360>
   156a0:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   156a4:	cmp	r9, #0
   156a8:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   156ac:	mov	r8, r4
   156b0:	add	r4, r4, r9
   156b4:	mov	sl, sp
   156b8:	mov	r3, r5
   156bc:	mov	r2, sl
   156c0:	mov	r1, r7
   156c4:	mov	r0, r6
   156c8:	bl	3418 <InflateData>
   156cc:	mov	r0, sl
   156d0:	bl	1ae4 <Mat_int16Swap>
   156d4:	strb	r0, [r8], #1
   156d8:	cmp	r4, r8
   156dc:	bne	156b8 <ReadCompressedUInt8Data+0x39c>
   156e0:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   156e4:	ldr	r3, [r6, #20]
   156e8:	cmp	r3, #0
   156ec:	bne	1572c <ReadCompressedUInt8Data+0x410>
   156f0:	cmp	r9, #0
   156f4:	movgt	r8, r4
   156f8:	addgt	r4, r4, r9
   156fc:	movgt	sl, sp
   15700:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   15704:	mov	r3, r5
   15708:	mov	r2, sl
   1570c:	mov	r1, r7
   15710:	mov	r0, r6
   15714:	bl	3418 <InflateData>
   15718:	ldrh	r3, [sp]
   1571c:	strb	r3, [r8], #1
   15720:	cmp	r4, r8
   15724:	bne	15704 <ReadCompressedUInt8Data+0x3e8>
   15728:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1572c:	cmp	r9, #0
   15730:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   15734:	mov	r8, r4
   15738:	add	r4, r4, r9
   1573c:	mov	sl, sp
   15740:	mov	r3, r5
   15744:	mov	r2, sl
   15748:	mov	r1, r7
   1574c:	mov	r0, r6
   15750:	bl	3418 <InflateData>
   15754:	mov	r0, sl
   15758:	bl	1b1c <Mat_uint16Swap>
   1575c:	strb	r0, [r8], #1
   15760:	cmp	r8, r4
   15764:	bne	15740 <ReadCompressedUInt8Data+0x424>
   15768:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1576c:	cmp	r8, #12
   15770:	beq	157c4 <ReadCompressedUInt8Data+0x4a8>
   15774:	cmp	r8, #13
   15778:	bne	153d4 <ReadCompressedUInt8Data+0xb8>
   1577c:	ldr	r3, [r6, #20]
   15780:	cmp	r3, #0
   15784:	bne	1584c <ReadCompressedUInt8Data+0x530>
   15788:	cmp	r9, #0
   1578c:	movgt	r8, r4
   15790:	addgt	r4, r4, r9
   15794:	movgt	sl, sp
   15798:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   1579c:	mov	r3, r5
   157a0:	mov	r2, sl
   157a4:	mov	r1, r7
   157a8:	mov	r0, r6
   157ac:	bl	3418 <InflateData>
   157b0:	ldr	r3, [sp]
   157b4:	strb	r3, [r8], #1
   157b8:	cmp	r4, r8
   157bc:	bne	1579c <ReadCompressedUInt8Data+0x480>
   157c0:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   157c4:	ldr	r3, [r6, #20]
   157c8:	cmp	r3, #0
   157cc:	bne	1580c <ReadCompressedUInt8Data+0x4f0>
   157d0:	cmp	r9, #0
   157d4:	movgt	r8, r4
   157d8:	addgt	r4, r4, r9
   157dc:	movgt	sl, sp
   157e0:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   157e4:	mov	r3, r5
   157e8:	mov	r2, sl
   157ec:	mov	r1, r7
   157f0:	mov	r0, r6
   157f4:	bl	3418 <InflateData>
   157f8:	ldr	r3, [sp]
   157fc:	strb	r3, [r8], #1
   15800:	cmp	r8, r4
   15804:	bne	157e4 <ReadCompressedUInt8Data+0x4c8>
   15808:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1580c:	cmp	r9, #0
   15810:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   15814:	mov	r8, r4
   15818:	add	r4, r4, r9
   1581c:	mov	sl, sp
   15820:	mov	r3, r5
   15824:	mov	r2, sl
   15828:	mov	r1, r7
   1582c:	mov	r0, r6
   15830:	bl	3418 <InflateData>
   15834:	mov	r0, sl
   15838:	bl	18bc <Mat_int64Swap>
   1583c:	strb	r0, [r8], #1
   15840:	cmp	r8, r4
   15844:	bne	15820 <ReadCompressedUInt8Data+0x504>
   15848:	b	153d4 <ReadCompressedUInt8Data+0xb8>
   1584c:	cmp	r9, #0
   15850:	ble	153d4 <ReadCompressedUInt8Data+0xb8>
   15854:	mov	r8, r4
   15858:	add	r4, r4, r9
   1585c:	mov	sl, sp
   15860:	mov	r3, r5
   15864:	mov	r2, sl
   15868:	mov	r1, r7
   1586c:	mov	r0, r6
   15870:	bl	3418 <InflateData>
   15874:	mov	r0, sl
   15878:	bl	1984 <Mat_uint64Swap>
   1587c:	strb	r0, [r8], #1
   15880:	cmp	r8, r4
   15884:	bne	15860 <ReadCompressedUInt8Data+0x544>
   15888:	b	153d4 <ReadCompressedUInt8Data+0xb8>

0001588c <ReadCompressedCharData>:
   1588c:	cmp	r2, #0
   15890:	cmpne	r0, #0
   15894:	beq	1599c <ReadCompressedCharData+0x110>
   15898:	push	{r4, r5, r6, r7, r8, lr}
   1589c:	mov	r7, r0
   158a0:	mov	r4, r2
   158a4:	ldr	r2, [r0]
   158a8:	cmp	r2, #0
   158ac:	beq	159a4 <ReadCompressedCharData+0x118>
   158b0:	mov	r5, r3
   158b4:	mov	r8, r1
   158b8:	mov	r0, r3
   158bc:	bl	1600 <Mat_SizeOf@plt>
   158c0:	mov	r6, r0
   158c4:	sub	r3, r5, #2
   158c8:	cmp	r3, #15
   158cc:	addls	pc, pc, r3, lsl #2
   158d0:	b	15988 <ReadCompressedCharData+0xfc>
   158d4:	b	15914 <ReadCompressedCharData+0x88>
   158d8:	b	15988 <ReadCompressedCharData+0xfc>
   158dc:	b	15938 <ReadCompressedCharData+0xac>
   158e0:	b	15988 <ReadCompressedCharData+0xfc>
   158e4:	b	15988 <ReadCompressedCharData+0xfc>
   158e8:	b	15988 <ReadCompressedCharData+0xfc>
   158ec:	b	15988 <ReadCompressedCharData+0xfc>
   158f0:	b	15988 <ReadCompressedCharData+0xfc>
   158f4:	b	15988 <ReadCompressedCharData+0xfc>
   158f8:	b	15988 <ReadCompressedCharData+0xfc>
   158fc:	b	15988 <ReadCompressedCharData+0xfc>
   15900:	b	15988 <ReadCompressedCharData+0xfc>
   15904:	b	15988 <ReadCompressedCharData+0xfc>
   15908:	b	15988 <ReadCompressedCharData+0xfc>
   1590c:	b	15914 <ReadCompressedCharData+0x88>
   15910:	b	15938 <ReadCompressedCharData+0xac>
   15914:	ldr	r3, [sp, #24]
   15918:	mul	r3, r0, r3
   1591c:	mov	r2, r4
   15920:	mov	r1, r8
   15924:	mov	r0, r7
   15928:	bl	3418 <InflateData>
   1592c:	ldr	r3, [sp, #24]
   15930:	mul	r0, r6, r3
   15934:	pop	{r4, r5, r6, r7, r8, pc}
   15938:	ldr	r3, [sp, #24]
   1593c:	mul	r3, r3, r0
   15940:	mov	r2, r4
   15944:	mov	r1, r8
   15948:	mov	r0, r7
   1594c:	bl	3418 <InflateData>
   15950:	ldr	r3, [r7, #20]
   15954:	cmp	r3, #0
   15958:	beq	1592c <ReadCompressedCharData+0xa0>
   1595c:	ldr	r3, [sp, #24]
   15960:	cmp	r3, #0
   15964:	ble	1592c <ReadCompressedCharData+0xa0>
   15968:	mov	r5, r4
   1596c:	add	r4, r4, r3, lsl #1
   15970:	mov	r0, r5
   15974:	bl	1b1c <Mat_uint16Swap>
   15978:	add	r5, r5, #2
   1597c:	cmp	r5, r4
   15980:	bne	15970 <ReadCompressedCharData+0xe4>
   15984:	b	1592c <ReadCompressedCharData+0xa0>
   15988:	mov	r1, r5
   1598c:	ldr	r0, [pc, #24]	; 159ac <ReadCompressedCharData+0x120>
   15990:	add	r0, pc, r0
   15994:	bl	14ec <Mat_Warning@plt>
   15998:	b	1592c <ReadCompressedCharData+0xa0>
   1599c:	mov	r0, #0
   159a0:	bx	lr
   159a4:	mov	r0, #0
   159a8:	pop	{r4, r5, r6, r7, r8, pc}
   159ac:	.word	0x0003c828

000159b0 <ReadCharData>:
   159b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159b4:	sub	sp, sp, #12
   159b8:	cmp	r1, #0
   159bc:	cmpne	r0, #0
   159c0:	moveq	r4, #0
   159c4:	beq	15a5c <ReadCharData+0xac>
   159c8:	mov	r5, r0
   159cc:	mov	r7, r1
   159d0:	ldr	r1, [r0]
   159d4:	cmp	r1, #0
   159d8:	moveq	r4, #0
   159dc:	beq	15a5c <ReadCharData+0xac>
   159e0:	mov	r6, r3
   159e4:	mov	r4, r2
   159e8:	mov	r0, r2
   159ec:	bl	1600 <Mat_SizeOf@plt>
   159f0:	mov	r9, r0
   159f4:	sub	r3, r4, #2
   159f8:	cmp	r3, #15
   159fc:	addls	pc, pc, r3, lsl #2
   15a00:	b	15b0c <ReadCharData+0x15c>
   15a04:	b	15a44 <ReadCharData+0x94>
   15a08:	b	15b0c <ReadCharData+0x15c>
   15a0c:	b	15a68 <ReadCharData+0xb8>
   15a10:	b	15b0c <ReadCharData+0x15c>
   15a14:	b	15b0c <ReadCharData+0x15c>
   15a18:	b	15b0c <ReadCharData+0x15c>
   15a1c:	b	15b0c <ReadCharData+0x15c>
   15a20:	b	15b0c <ReadCharData+0x15c>
   15a24:	b	15b0c <ReadCharData+0x15c>
   15a28:	b	15b0c <ReadCharData+0x15c>
   15a2c:	b	15b0c <ReadCharData+0x15c>
   15a30:	b	15b0c <ReadCharData+0x15c>
   15a34:	b	15b0c <ReadCharData+0x15c>
   15a38:	b	15b0c <ReadCharData+0x15c>
   15a3c:	b	15a44 <ReadCharData+0x94>
   15a40:	b	15a68 <ReadCharData+0xb8>
   15a44:	ldr	r3, [r5]
   15a48:	mov	r2, r6
   15a4c:	mov	r1, r0
   15a50:	mov	r0, r7
   15a54:	bl	1588 <fread@plt>
   15a58:	mov	r4, r0
   15a5c:	mov	r0, r4
   15a60:	add	sp, sp, #12
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a68:	ldr	r4, [r5, #20]
   15a6c:	cmp	r4, #0
   15a70:	bne	15ab8 <ReadCharData+0x108>
   15a74:	cmp	r6, #0
   15a78:	movgt	r8, r7
   15a7c:	addgt	r6, r7, r6
   15a80:	addgt	sl, sp, #6
   15a84:	movgt	r7, #1
   15a88:	ble	15a5c <ReadCharData+0xac>
   15a8c:	ldr	r3, [r5]
   15a90:	mov	r2, r7
   15a94:	mov	r1, r9
   15a98:	mov	r0, sl
   15a9c:	bl	1588 <fread@plt>
   15aa0:	add	r4, r4, r0
   15aa4:	ldrh	r3, [sp, #6]
   15aa8:	strb	r3, [r8], #1
   15aac:	cmp	r6, r8
   15ab0:	bne	15a8c <ReadCharData+0xdc>
   15ab4:	b	15a5c <ReadCharData+0xac>
   15ab8:	cmp	r6, #0
   15abc:	ble	15b04 <ReadCharData+0x154>
   15ac0:	mov	r8, r7
   15ac4:	add	r6, r7, r6
   15ac8:	mov	r4, #0
   15acc:	add	sl, sp, #6
   15ad0:	mov	fp, #1
   15ad4:	ldr	r3, [r5]
   15ad8:	mov	r2, fp
   15adc:	mov	r1, r9
   15ae0:	mov	r0, sl
   15ae4:	bl	1588 <fread@plt>
   15ae8:	add	r4, r4, r0
   15aec:	mov	r0, sl
   15af0:	bl	1b1c <Mat_uint16Swap>
   15af4:	strb	r0, [r8], #1
   15af8:	cmp	r6, r8
   15afc:	bne	15ad4 <ReadCharData+0x124>
   15b00:	b	15a5c <ReadCharData+0xac>
   15b04:	mov	r4, #0
   15b08:	b	15a5c <ReadCharData+0xac>
   15b0c:	mov	r1, r4
   15b10:	ldr	r0, [pc, #12]	; 15b24 <ReadCharData+0x174>
   15b14:	add	r0, pc, r0
   15b18:	bl	14ec <Mat_Warning@plt>
   15b1c:	mov	r4, #0
   15b20:	b	15a5c <ReadCharData+0xac>
   15b24:	.word	0x0003c6f0

00015b28 <ReadDataSlabN>:
   15b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b2c:	sub	sp, sp, #156	; 0x9c
   15b30:	mov	r7, r0
   15b34:	str	r0, [sp, #12]
   15b38:	mov	r8, r1
   15b3c:	str	r1, [sp, #16]
   15b40:	mov	r5, r2
   15b44:	mov	r9, r3
   15b48:	str	r3, [sp, #8]
   15b4c:	ldr	r4, [sp, #204]	; 0xcc
   15b50:	mov	r6, #40	; 0x28
   15b54:	mov	r2, r6
   15b58:	mov	r1, #0
   15b5c:	add	r0, sp, #112	; 0x70
   15b60:	bl	166c <memset@plt>
   15b64:	mov	r2, r6
   15b68:	mov	r1, #0
   15b6c:	add	r0, sp, #72	; 0x48
   15b70:	bl	166c <memset@plt>
   15b74:	mov	r2, r6
   15b78:	mov	r1, #0
   15b7c:	add	r0, sp, #32
   15b80:	bl	166c <memset@plt>
   15b84:	cmp	r8, #0
   15b88:	cmpne	r7, #0
   15b8c:	beq	18c8c <ReadDataSlabN+0x3164>
   15b90:	ldr	r3, [r7]
   15b94:	cmp	r3, #0
   15b98:	beq	18c94 <ReadDataSlabN+0x316c>
   15b9c:	ldr	r3, [sp, #200]	; 0xc8
   15ba0:	cmp	r4, #0
   15ba4:	cmpne	r3, #0
   15ba8:	moveq	r3, #1
   15bac:	movne	r3, #0
   15bb0:	ldr	r2, [sp, #208]	; 0xd0
   15bb4:	cmp	r2, #0
   15bb8:	orreq	r3, r3, #1
   15bbc:	ldr	r2, [sp, #192]	; 0xc0
   15bc0:	cmp	r2, #10
   15bc4:	orrgt	r3, r3, #1
   15bc8:	cmp	r3, #0
   15bcc:	bne	18c9c <ReadDataSlabN+0x3174>
   15bd0:	mov	r0, r9
   15bd4:	bl	1600 <Mat_SizeOf@plt>
   15bd8:	str	r0, [sp, #4]
   15bdc:	sub	r5, r5, #6
   15be0:	cmp	r5, #9
   15be4:	addls	pc, pc, r5, lsl #2
   15be8:	b	18ca8 <ReadDataSlabN+0x3180>
   15bec:	b	15c14 <ReadDataSlabN+0xec>
   15bf0:	b	160ec <ReadDataSlabN+0x5c4>
   15bf4:	b	182d4 <ReadDataSlabN+0x27ac>
   15bf8:	b	187b0 <ReadDataSlabN+0x2c88>
   15bfc:	b	17924 <ReadDataSlabN+0x1dfc>
   15c00:	b	17dfc <ReadDataSlabN+0x22d4>
   15c04:	b	16f74 <ReadDataSlabN+0x144c>
   15c08:	b	1744c <ReadDataSlabN+0x1924>
   15c0c:	b	165c4 <ReadDataSlabN+0xa9c>
   15c10:	b	16a9c <ReadDataSlabN+0xf74>
   15c14:	ldr	r3, [r4]
   15c18:	sub	r3, r3, #1
   15c1c:	str	r3, [sp, #112]	; 0x70
   15c20:	ldr	r3, [sp, #196]	; 0xc4
   15c24:	ldr	r3, [r3]
   15c28:	str	r3, [sp, #32]
   15c2c:	ldr	r3, [sp, #208]	; 0xd0
   15c30:	ldr	r3, [r3]
   15c34:	str	r3, [sp, #20]
   15c38:	ldr	r3, [sp, #192]	; 0xc0
   15c3c:	cmp	r3, #1
   15c40:	ble	15c78 <ReadDataSlabN+0x150>
   15c44:	str	r4, [sp, #24]
   15c48:	add	r9, sp, #116	; 0x74
   15c4c:	ldr	lr, [sp, #196]	; 0xc4
   15c50:	add	fp, sp, #32
   15c54:	ldr	r3, [sp, #208]	; 0xd0
   15c58:	add	r8, r3, #4
   15c5c:	ldr	r3, [sp, #200]	; 0xc8
   15c60:	add	r6, r3, #4
   15c64:	mov	sl, lr
   15c68:	mov	r5, #2
   15c6c:	mov	r7, #0
   15c70:	str	r4, [sp, #204]	; 0xcc
   15c74:	b	18d30 <ReadDataSlabN+0x3208>
   15c78:	mov	r7, #0
   15c7c:	b	18db8 <ReadDataSlabN+0x3290>
   15c80:	ldr	r3, [sp, #20]
   15c84:	cmp	r3, #0
   15c88:	ble	18cb0 <ReadDataSlabN+0x3188>
   15c8c:	mov	r3, #0
   15c90:	str	r3, [sp, #24]
   15c94:	add	r8, sp, #72	; 0x48
   15c98:	add	fp, sp, #32
   15c9c:	b	15dd8 <ReadDataSlabN+0x2b0>
   15ca0:	mov	r2, #1
   15ca4:	ldr	r3, [sp, #4]
   15ca8:	mul	r1, r3, r1
   15cac:	ldr	r3, [sp, #12]
   15cb0:	ldr	r0, [r3]
   15cb4:	bl	1714 <fseek@plt>
   15cb8:	ldr	r3, [sp, #200]	; 0xc8
   15cbc:	ldr	r3, [r3]
   15cc0:	add	r7, r7, r3
   15cc4:	b	15de8 <ReadDataSlabN+0x2c0>
   15cc8:	sub	r5, r5, r1
   15ccc:	add	r3, fp, r4, lsl #2
   15cd0:	ldr	sl, [r3, #-4]
   15cd4:	ldr	r1, [r6]
   15cd8:	mla	r1, r1, sl, r5
   15cdc:	mov	r2, #1
   15ce0:	ldr	r3, [sp, #4]
   15ce4:	mul	r1, r3, r1
   15ce8:	ldr	r3, [sp, #12]
   15cec:	ldr	r0, [r3]
   15cf0:	bl	1714 <fseek@plt>
   15cf4:	ldr	r1, [r6]
   15cf8:	mla	r5, r1, sl, r5
   15cfc:	add	r7, r7, r5
   15d00:	add	r4, r4, #1
   15d04:	ldr	r3, [sp, #192]	; 0xc0
   15d08:	cmp	r3, r4
   15d0c:	beq	15db8 <ReadDataSlabN+0x290>
   15d10:	ldr	r0, [r8, r4, lsl #2]
   15d14:	add	r0, r0, #1
   15d18:	str	r0, [r8, r4, lsl #2]
   15d1c:	add	r6, r6, #4
   15d20:	ldr	r1, [r9, #4]!
   15d24:	bl	517e8 <__aeabi_idivmod>
   15d28:	cmp	r1, #0
   15d2c:	bne	15d90 <ReadDataSlabN+0x268>
   15d30:	mov	r3, #0
   15d34:	str	r3, [r8, r4, lsl #2]
   15d38:	ldr	r5, [fp, r4, lsl #2]
   15d3c:	mov	r1, r5
   15d40:	mov	r0, r7
   15d44:	bl	517e8 <__aeabi_idivmod>
   15d48:	cmp	r1, #0
   15d4c:	bne	15cc8 <ReadDataSlabN+0x1a0>
   15d50:	ldr	r1, [r6]
   15d54:	cmp	r1, #0
   15d58:	beq	15d00 <ReadDataSlabN+0x1d8>
   15d5c:	add	sl, fp, r4, lsl #2
   15d60:	ldr	r5, [sl, #-4]
   15d64:	mul	r1, r5, r1
   15d68:	mov	r2, #1
   15d6c:	ldr	r3, [sp, #4]
   15d70:	mul	r1, r3, r1
   15d74:	ldr	r3, [sp, #12]
   15d78:	ldr	r0, [r3]
   15d7c:	bl	1714 <fseek@plt>
   15d80:	ldr	r3, [r6]
   15d84:	mla	r7, r3, r5, r7
   15d88:	b	15d00 <ReadDataSlabN+0x1d8>
   15d8c:	ldr	r4, [sp, #28]
   15d90:	add	r3, sp, #152	; 0x98
   15d94:	add	r4, r3, r4, lsl #2
   15d98:	ldr	r1, [r4, #-40]	; 0xffffffd8
   15d9c:	add	r7, r7, r1
   15da0:	mov	r2, #1
   15da4:	ldr	r3, [sp, #4]
   15da8:	mul	r1, r3, r1
   15dac:	ldr	r3, [sp, #12]
   15db0:	ldr	r0, [r3]
   15db4:	bl	1714 <fseek@plt>
   15db8:	ldr	r3, [sp, #208]	; 0xd0
   15dbc:	ldr	r3, [r3]
   15dc0:	ldr	r2, [sp, #24]
   15dc4:	add	r3, r2, r3
   15dc8:	str	r3, [sp, #24]
   15dcc:	ldr	r2, [sp, #20]
   15dd0:	cmp	r3, r2
   15dd4:	bge	15e8c <ReadDataSlabN+0x364>
   15dd8:	ldr	r3, [sp, #200]	; 0xc8
   15ddc:	ldr	r1, [r3]
   15de0:	cmp	r1, #0
   15de4:	bne	15ca0 <ReadDataSlabN+0x178>
   15de8:	ldr	r3, [sp, #208]	; 0xd0
   15dec:	ldr	r3, [r3]
   15df0:	ldr	r2, [sp, #8]
   15df4:	ldr	r1, [sp, #16]
   15df8:	ldr	r0, [sp, #24]
   15dfc:	add	r1, r1, r0, lsl #3
   15e00:	ldr	r4, [sp, #12]
   15e04:	mov	r0, r4
   15e08:	bl	3aa0 <ReadDoubleData>
   15e0c:	ldr	r3, [sp, #196]	; 0xc4
   15e10:	ldr	r3, [r3]
   15e14:	ldr	r2, [sp, #200]	; 0xc8
   15e18:	ldr	r1, [r2]
   15e1c:	sub	r2, r3, r1
   15e20:	add	r7, r2, r7
   15e24:	ldr	r2, [sp, #208]	; 0xd0
   15e28:	ldr	r2, [r2]
   15e2c:	sub	r3, r3, r2
   15e30:	sub	r1, r3, r1
   15e34:	mov	r2, #1
   15e38:	ldr	r3, [sp, #4]
   15e3c:	mul	r1, r3, r1
   15e40:	ldr	r0, [r4]
   15e44:	bl	1714 <fseek@plt>
   15e48:	ldr	r3, [sp, #192]	; 0xc0
   15e4c:	cmp	r3, #1
   15e50:	ble	15db8 <ReadDataSlabN+0x290>
   15e54:	ldr	r0, [sp, #76]	; 0x4c
   15e58:	add	r0, r0, #1
   15e5c:	str	r0, [sp, #76]	; 0x4c
   15e60:	ldr	r3, [sp, #208]	; 0xd0
   15e64:	ldr	r1, [r3, #4]
   15e68:	bl	517e8 <__aeabi_idivmod>
   15e6c:	cmp	r1, #0
   15e70:	bne	15d8c <ReadDataSlabN+0x264>
   15e74:	ldr	r3, [sp, #208]	; 0xd0
   15e78:	add	r9, r3, #4
   15e7c:	ldr	r3, [sp, #200]	; 0xc8
   15e80:	add	r6, r3, #4
   15e84:	ldr	r4, [sp, #28]
   15e88:	b	15d30 <ReadDataSlabN+0x208>
   15e8c:	mov	r0, #0
   15e90:	b	18ca0 <ReadDataSlabN+0x3178>
   15e94:	mov	r2, #1
   15e98:	ldr	r3, [sp, #4]
   15e9c:	mul	r1, r3, r1
   15ea0:	ldr	r0, [fp]
   15ea4:	bl	1714 <fseek@plt>
   15ea8:	ldr	r3, [sp, #200]	; 0xc8
   15eac:	ldr	r3, [r3]
   15eb0:	add	r7, r7, r3
   15eb4:	b	15fe0 <ReadDataSlabN+0x4b8>
   15eb8:	sub	r4, r4, r1
   15ebc:	add	r3, r6, r5, lsl #2
   15ec0:	ldr	fp, [r3, #-4]
   15ec4:	ldr	r1, [r8]
   15ec8:	mla	r1, r1, fp, r4
   15ecc:	mov	r2, #1
   15ed0:	ldr	r3, [sp, #4]
   15ed4:	mul	r1, r3, r1
   15ed8:	ldr	r3, [sp, #12]
   15edc:	ldr	r0, [r3]
   15ee0:	bl	1714 <fseek@plt>
   15ee4:	ldr	r1, [r8]
   15ee8:	mla	r4, r1, fp, r4
   15eec:	add	r7, r7, r4
   15ef0:	add	r5, r5, #1
   15ef4:	ldr	r3, [sp, #192]	; 0xc0
   15ef8:	cmp	r3, r5
   15efc:	beq	160d8 <ReadDataSlabN+0x5b0>
   15f00:	ldr	r0, [r9, r5, lsl #2]
   15f04:	add	r0, r0, #1
   15f08:	str	r0, [r9, r5, lsl #2]
   15f0c:	add	r8, r8, #4
   15f10:	ldr	r1, [sl, #4]!
   15f14:	bl	517e8 <__aeabi_idivmod>
   15f18:	cmp	r1, #0
   15f1c:	bne	15f84 <ReadDataSlabN+0x45c>
   15f20:	mov	r3, #0
   15f24:	str	r3, [r9, r5, lsl #2]
   15f28:	ldr	r4, [r6, r5, lsl #2]
   15f2c:	mov	r1, r4
   15f30:	mov	r0, r7
   15f34:	bl	517e8 <__aeabi_idivmod>
   15f38:	cmp	r1, #0
   15f3c:	bne	15eb8 <ReadDataSlabN+0x390>
   15f40:	ldr	r1, [r8]
   15f44:	cmp	r1, #0
   15f48:	beq	15ef0 <ReadDataSlabN+0x3c8>
   15f4c:	add	fp, r6, r5, lsl #2
   15f50:	ldr	r4, [fp, #-4]
   15f54:	mul	r1, r4, r1
   15f58:	mov	r2, #1
   15f5c:	ldr	r3, [sp, #4]
   15f60:	mul	r1, r3, r1
   15f64:	ldr	r3, [sp, #12]
   15f68:	ldr	r0, [r3]
   15f6c:	bl	1714 <fseek@plt>
   15f70:	ldr	r3, [r8]
   15f74:	mla	r7, r3, r4, r7
   15f78:	b	15ef0 <ReadDataSlabN+0x3c8>
   15f7c:	mov	r5, #1
   15f80:	b	15f8c <ReadDataSlabN+0x464>
   15f84:	ldr	fp, [sp, #12]
   15f88:	ldr	r4, [sp, #204]	; 0xcc
   15f8c:	add	r3, sp, #152	; 0x98
   15f90:	add	r5, r3, r5, lsl #2
   15f94:	ldr	r1, [r5, #-40]	; 0xffffffd8
   15f98:	add	r7, r7, r1
   15f9c:	mov	r2, #1
   15fa0:	ldr	r3, [sp, #4]
   15fa4:	mul	r1, r3, r1
   15fa8:	ldr	r0, [fp]
   15fac:	bl	1714 <fseek@plt>
   15fb0:	ldr	r3, [sp, #208]	; 0xd0
   15fb4:	ldr	r3, [r3]
   15fb8:	ldr	r2, [sp, #24]
   15fbc:	add	r3, r2, r3
   15fc0:	str	r3, [sp, #24]
   15fc4:	ldr	r2, [sp, #20]
   15fc8:	cmp	r3, r2
   15fcc:	bge	160e4 <ReadDataSlabN+0x5bc>
   15fd0:	ldr	r3, [sp, #200]	; 0xc8
   15fd4:	ldr	r1, [r3]
   15fd8:	cmp	r1, #0
   15fdc:	bne	15e94 <ReadDataSlabN+0x36c>
   15fe0:	ldr	r3, [sp, #208]	; 0xd0
   15fe4:	ldr	r3, [r3]
   15fe8:	cmp	r3, #0
   15fec:	ble	16050 <ReadDataSlabN+0x528>
   15ff0:	ldr	r3, [sp, #16]
   15ff4:	ldr	r2, [sp, #24]
   15ff8:	add	r6, r3, r2, lsl #3
   15ffc:	mov	r5, #0
   16000:	ldr	r8, [sp, #4]
   16004:	ldr	sl, [sp, #208]	; 0xd0
   16008:	mov	r3, #1
   1600c:	ldr	r2, [sp, #8]
   16010:	mov	r1, r6
   16014:	mov	r0, fp
   16018:	bl	3aa0 <ReadDoubleData>
   1601c:	ldr	r1, [r4]
   16020:	sub	r1, r1, #1
   16024:	mov	r2, #1
   16028:	mul	r1, r8, r1
   1602c:	ldr	r0, [fp]
   16030:	bl	1714 <fseek@plt>
   16034:	ldr	r3, [r4]
   16038:	add	r7, r7, r3
   1603c:	add	r5, r5, #1
   16040:	ldr	r3, [sl]
   16044:	add	r6, r6, #8
   16048:	cmp	r3, r5
   1604c:	bgt	16008 <ReadDataSlabN+0x4e0>
   16050:	ldr	r1, [r4]
   16054:	mul	r3, r1, r3
   16058:	ldr	r2, [sp, #196]	; 0xc4
   1605c:	ldr	r1, [r2]
   16060:	sub	r1, r1, r3
   16064:	ldr	r3, [sp, #200]	; 0xc8
   16068:	ldr	r3, [r3]
   1606c:	sub	r1, r1, r3
   16070:	add	r7, r7, r1
   16074:	mov	r2, #1
   16078:	ldr	r3, [sp, #4]
   1607c:	mul	r1, r1, r3
   16080:	ldr	r0, [fp]
   16084:	bl	1714 <fseek@plt>
   16088:	ldr	r3, [sp, #192]	; 0xc0
   1608c:	cmp	r3, #1
   16090:	ble	15fb0 <ReadDataSlabN+0x488>
   16094:	ldr	r0, [sp, #76]	; 0x4c
   16098:	add	r0, r0, #1
   1609c:	str	r0, [sp, #76]	; 0x4c
   160a0:	ldr	r3, [sp, #208]	; 0xd0
   160a4:	ldr	r1, [r3, #4]
   160a8:	bl	517e8 <__aeabi_idivmod>
   160ac:	cmp	r1, #0
   160b0:	bne	15f7c <ReadDataSlabN+0x454>
   160b4:	ldr	r3, [sp, #208]	; 0xd0
   160b8:	add	sl, r3, #4
   160bc:	ldr	r3, [sp, #200]	; 0xc8
   160c0:	add	r8, r3, #4
   160c4:	mov	r5, #1
   160c8:	str	fp, [sp, #12]
   160cc:	str	r4, [sp, #204]	; 0xcc
   160d0:	ldr	r6, [sp, #28]
   160d4:	b	15f20 <ReadDataSlabN+0x3f8>
   160d8:	ldr	fp, [sp, #12]
   160dc:	ldr	r4, [sp, #204]	; 0xcc
   160e0:	b	15fb0 <ReadDataSlabN+0x488>
   160e4:	mov	r0, #0
   160e8:	b	18ca0 <ReadDataSlabN+0x3178>
   160ec:	ldr	r3, [r4]
   160f0:	sub	r3, r3, #1
   160f4:	str	r3, [sp, #112]	; 0x70
   160f8:	ldr	r3, [sp, #196]	; 0xc4
   160fc:	ldr	r3, [r3]
   16100:	str	r3, [sp, #32]
   16104:	ldr	r3, [sp, #208]	; 0xd0
   16108:	ldr	r3, [r3]
   1610c:	str	r3, [sp, #20]
   16110:	ldr	r3, [sp, #192]	; 0xc0
   16114:	cmp	r3, #1
   16118:	ble	16150 <ReadDataSlabN+0x628>
   1611c:	str	r4, [sp, #24]
   16120:	add	r9, sp, #116	; 0x74
   16124:	ldr	lr, [sp, #196]	; 0xc4
   16128:	add	fp, sp, #32
   1612c:	ldr	r3, [sp, #208]	; 0xd0
   16130:	add	r8, r3, #4
   16134:	ldr	r3, [sp, #200]	; 0xc8
   16138:	add	r6, r3, #4
   1613c:	mov	sl, lr
   16140:	mov	r5, #2
   16144:	mov	r7, #0
   16148:	str	r4, [sp, #204]	; 0xcc
   1614c:	b	18e3c <ReadDataSlabN+0x3314>
   16150:	mov	r7, #0
   16154:	b	18ec4 <ReadDataSlabN+0x339c>
   16158:	ldr	r3, [sp, #20]
   1615c:	cmp	r3, #0
   16160:	ble	18cb8 <ReadDataSlabN+0x3190>
   16164:	mov	r3, #0
   16168:	str	r3, [sp, #24]
   1616c:	add	r8, sp, #72	; 0x48
   16170:	add	fp, sp, #32
   16174:	b	162b0 <ReadDataSlabN+0x788>
   16178:	mov	r2, #1
   1617c:	ldr	r3, [sp, #4]
   16180:	mul	r1, r3, r1
   16184:	ldr	r3, [sp, #12]
   16188:	ldr	r0, [r3]
   1618c:	bl	1714 <fseek@plt>
   16190:	ldr	r3, [sp, #200]	; 0xc8
   16194:	ldr	r3, [r3]
   16198:	add	r7, r7, r3
   1619c:	b	162c0 <ReadDataSlabN+0x798>
   161a0:	sub	r5, r5, r1
   161a4:	add	r3, fp, r4, lsl #2
   161a8:	ldr	sl, [r3, #-4]
   161ac:	ldr	r1, [r6]
   161b0:	mla	r1, r1, sl, r5
   161b4:	mov	r2, #1
   161b8:	ldr	r3, [sp, #4]
   161bc:	mul	r1, r3, r1
   161c0:	ldr	r3, [sp, #12]
   161c4:	ldr	r0, [r3]
   161c8:	bl	1714 <fseek@plt>
   161cc:	ldr	r1, [r6]
   161d0:	mla	r5, r1, sl, r5
   161d4:	add	r7, r7, r5
   161d8:	add	r4, r4, #1
   161dc:	ldr	r3, [sp, #192]	; 0xc0
   161e0:	cmp	r3, r4
   161e4:	beq	16290 <ReadDataSlabN+0x768>
   161e8:	ldr	r0, [r8, r4, lsl #2]
   161ec:	add	r0, r0, #1
   161f0:	str	r0, [r8, r4, lsl #2]
   161f4:	add	r6, r6, #4
   161f8:	ldr	r1, [r9, #4]!
   161fc:	bl	517e8 <__aeabi_idivmod>
   16200:	cmp	r1, #0
   16204:	bne	16268 <ReadDataSlabN+0x740>
   16208:	mov	r3, #0
   1620c:	str	r3, [r8, r4, lsl #2]
   16210:	ldr	r5, [fp, r4, lsl #2]
   16214:	mov	r1, r5
   16218:	mov	r0, r7
   1621c:	bl	517e8 <__aeabi_idivmod>
   16220:	cmp	r1, #0
   16224:	bne	161a0 <ReadDataSlabN+0x678>
   16228:	ldr	r1, [r6]
   1622c:	cmp	r1, #0
   16230:	beq	161d8 <ReadDataSlabN+0x6b0>
   16234:	add	sl, fp, r4, lsl #2
   16238:	ldr	r5, [sl, #-4]
   1623c:	mul	r1, r5, r1
   16240:	mov	r2, #1
   16244:	ldr	r3, [sp, #4]
   16248:	mul	r1, r3, r1
   1624c:	ldr	r3, [sp, #12]
   16250:	ldr	r0, [r3]
   16254:	bl	1714 <fseek@plt>
   16258:	ldr	r3, [r6]
   1625c:	mla	r7, r3, r5, r7
   16260:	b	161d8 <ReadDataSlabN+0x6b0>
   16264:	ldr	r4, [sp, #28]
   16268:	add	r3, sp, #152	; 0x98
   1626c:	add	r4, r3, r4, lsl #2
   16270:	ldr	r1, [r4, #-40]	; 0xffffffd8
   16274:	add	r7, r7, r1
   16278:	mov	r2, #1
   1627c:	ldr	r3, [sp, #4]
   16280:	mul	r1, r3, r1
   16284:	ldr	r3, [sp, #12]
   16288:	ldr	r0, [r3]
   1628c:	bl	1714 <fseek@plt>
   16290:	ldr	r3, [sp, #208]	; 0xd0
   16294:	ldr	r3, [r3]
   16298:	ldr	r2, [sp, #24]
   1629c:	add	r3, r2, r3
   162a0:	str	r3, [sp, #24]
   162a4:	ldr	r2, [sp, #20]
   162a8:	cmp	r3, r2
   162ac:	bge	16364 <ReadDataSlabN+0x83c>
   162b0:	ldr	r3, [sp, #200]	; 0xc8
   162b4:	ldr	r1, [r3]
   162b8:	cmp	r1, #0
   162bc:	bne	16178 <ReadDataSlabN+0x650>
   162c0:	ldr	r3, [sp, #208]	; 0xd0
   162c4:	ldr	r3, [r3]
   162c8:	ldr	r2, [sp, #8]
   162cc:	ldr	r1, [sp, #16]
   162d0:	ldr	r0, [sp, #24]
   162d4:	add	r1, r1, r0, lsl #2
   162d8:	ldr	r4, [sp, #12]
   162dc:	mov	r0, r4
   162e0:	bl	61cc <ReadSingleData>
   162e4:	ldr	r3, [sp, #196]	; 0xc4
   162e8:	ldr	r3, [r3]
   162ec:	ldr	r2, [sp, #200]	; 0xc8
   162f0:	ldr	r1, [r2]
   162f4:	sub	r2, r3, r1
   162f8:	add	r7, r2, r7
   162fc:	ldr	r2, [sp, #208]	; 0xd0
   16300:	ldr	r2, [r2]
   16304:	sub	r3, r3, r2
   16308:	sub	r1, r3, r1
   1630c:	mov	r2, #1
   16310:	ldr	r3, [sp, #4]
   16314:	mul	r1, r3, r1
   16318:	ldr	r0, [r4]
   1631c:	bl	1714 <fseek@plt>
   16320:	ldr	r3, [sp, #192]	; 0xc0
   16324:	cmp	r3, #1
   16328:	ble	16290 <ReadDataSlabN+0x768>
   1632c:	ldr	r0, [sp, #76]	; 0x4c
   16330:	add	r0, r0, #1
   16334:	str	r0, [sp, #76]	; 0x4c
   16338:	ldr	r3, [sp, #208]	; 0xd0
   1633c:	ldr	r1, [r3, #4]
   16340:	bl	517e8 <__aeabi_idivmod>
   16344:	cmp	r1, #0
   16348:	bne	16264 <ReadDataSlabN+0x73c>
   1634c:	ldr	r3, [sp, #208]	; 0xd0
   16350:	add	r9, r3, #4
   16354:	ldr	r3, [sp, #200]	; 0xc8
   16358:	add	r6, r3, #4
   1635c:	ldr	r4, [sp, #28]
   16360:	b	16208 <ReadDataSlabN+0x6e0>
   16364:	mov	r0, #0
   16368:	b	18ca0 <ReadDataSlabN+0x3178>
   1636c:	mov	r2, #1
   16370:	ldr	r3, [sp, #4]
   16374:	mul	r1, r3, r1
   16378:	ldr	r0, [fp]
   1637c:	bl	1714 <fseek@plt>
   16380:	ldr	r3, [sp, #200]	; 0xc8
   16384:	ldr	r3, [r3]
   16388:	add	r7, r7, r3
   1638c:	b	164b8 <ReadDataSlabN+0x990>
   16390:	sub	r4, r4, r1
   16394:	add	r3, r6, r5, lsl #2
   16398:	ldr	fp, [r3, #-4]
   1639c:	ldr	r1, [r8]
   163a0:	mla	r1, r1, fp, r4
   163a4:	mov	r2, #1
   163a8:	ldr	r3, [sp, #4]
   163ac:	mul	r1, r3, r1
   163b0:	ldr	r3, [sp, #12]
   163b4:	ldr	r0, [r3]
   163b8:	bl	1714 <fseek@plt>
   163bc:	ldr	r1, [r8]
   163c0:	mla	r4, r1, fp, r4
   163c4:	add	r7, r7, r4
   163c8:	add	r5, r5, #1
   163cc:	ldr	r3, [sp, #192]	; 0xc0
   163d0:	cmp	r3, r5
   163d4:	beq	165b0 <ReadDataSlabN+0xa88>
   163d8:	ldr	r0, [r9, r5, lsl #2]
   163dc:	add	r0, r0, #1
   163e0:	str	r0, [r9, r5, lsl #2]
   163e4:	add	r8, r8, #4
   163e8:	ldr	r1, [sl, #4]!
   163ec:	bl	517e8 <__aeabi_idivmod>
   163f0:	cmp	r1, #0
   163f4:	bne	1645c <ReadDataSlabN+0x934>
   163f8:	mov	r3, #0
   163fc:	str	r3, [r9, r5, lsl #2]
   16400:	ldr	r4, [r6, r5, lsl #2]
   16404:	mov	r1, r4
   16408:	mov	r0, r7
   1640c:	bl	517e8 <__aeabi_idivmod>
   16410:	cmp	r1, #0
   16414:	bne	16390 <ReadDataSlabN+0x868>
   16418:	ldr	r1, [r8]
   1641c:	cmp	r1, #0
   16420:	beq	163c8 <ReadDataSlabN+0x8a0>
   16424:	add	fp, r6, r5, lsl #2
   16428:	ldr	r4, [fp, #-4]
   1642c:	mul	r1, r4, r1
   16430:	mov	r2, #1
   16434:	ldr	r3, [sp, #4]
   16438:	mul	r1, r3, r1
   1643c:	ldr	r3, [sp, #12]
   16440:	ldr	r0, [r3]
   16444:	bl	1714 <fseek@plt>
   16448:	ldr	r3, [r8]
   1644c:	mla	r7, r3, r4, r7
   16450:	b	163c8 <ReadDataSlabN+0x8a0>
   16454:	mov	r5, #1
   16458:	b	16464 <ReadDataSlabN+0x93c>
   1645c:	ldr	fp, [sp, #12]
   16460:	ldr	r4, [sp, #204]	; 0xcc
   16464:	add	r3, sp, #152	; 0x98
   16468:	add	r5, r3, r5, lsl #2
   1646c:	ldr	r1, [r5, #-40]	; 0xffffffd8
   16470:	add	r7, r7, r1
   16474:	mov	r2, #1
   16478:	ldr	r3, [sp, #4]
   1647c:	mul	r1, r3, r1
   16480:	ldr	r0, [fp]
   16484:	bl	1714 <fseek@plt>
   16488:	ldr	r3, [sp, #208]	; 0xd0
   1648c:	ldr	r3, [r3]
   16490:	ldr	r2, [sp, #24]
   16494:	add	r3, r2, r3
   16498:	str	r3, [sp, #24]
   1649c:	ldr	r2, [sp, #20]
   164a0:	cmp	r3, r2
   164a4:	bge	165bc <ReadDataSlabN+0xa94>
   164a8:	ldr	r3, [sp, #200]	; 0xc8
   164ac:	ldr	r1, [r3]
   164b0:	cmp	r1, #0
   164b4:	bne	1636c <ReadDataSlabN+0x844>
   164b8:	ldr	r3, [sp, #208]	; 0xd0
   164bc:	ldr	r3, [r3]
   164c0:	cmp	r3, #0
   164c4:	ble	16528 <ReadDataSlabN+0xa00>
   164c8:	ldr	r3, [sp, #16]
   164cc:	ldr	r2, [sp, #24]
   164d0:	add	r6, r3, r2, lsl #2
   164d4:	mov	r5, #0
   164d8:	ldr	r8, [sp, #4]
   164dc:	ldr	sl, [sp, #208]	; 0xd0
   164e0:	mov	r3, #1
   164e4:	ldr	r2, [sp, #8]
   164e8:	mov	r1, r6
   164ec:	mov	r0, fp
   164f0:	bl	61cc <ReadSingleData>
   164f4:	ldr	r1, [r4]
   164f8:	sub	r1, r1, #1
   164fc:	mov	r2, #1
   16500:	mul	r1, r8, r1
   16504:	ldr	r0, [fp]
   16508:	bl	1714 <fseek@plt>
   1650c:	ldr	r3, [r4]
   16510:	add	r7, r7, r3
   16514:	add	r5, r5, #1
   16518:	ldr	r3, [sl]
   1651c:	add	r6, r6, #4
   16520:	cmp	r3, r5
   16524:	bgt	164e0 <ReadDataSlabN+0x9b8>
   16528:	ldr	r1, [r4]
   1652c:	mul	r3, r1, r3
   16530:	ldr	r2, [sp, #196]	; 0xc4
   16534:	ldr	r1, [r2]
   16538:	sub	r1, r1, r3
   1653c:	ldr	r3, [sp, #200]	; 0xc8
   16540:	ldr	r3, [r3]
   16544:	sub	r1, r1, r3
   16548:	add	r7, r7, r1
   1654c:	mov	r2, #1
   16550:	ldr	r3, [sp, #4]
   16554:	mul	r1, r1, r3
   16558:	ldr	r0, [fp]
   1655c:	bl	1714 <fseek@plt>
   16560:	ldr	r3, [sp, #192]	; 0xc0
   16564:	cmp	r3, #1
   16568:	ble	16488 <ReadDataSlabN+0x960>
   1656c:	ldr	r0, [sp, #76]	; 0x4c
   16570:	add	r0, r0, #1
   16574:	str	r0, [sp, #76]	; 0x4c
   16578:	ldr	r3, [sp, #208]	; 0xd0
   1657c:	ldr	r1, [r3, #4]
   16580:	bl	517e8 <__aeabi_idivmod>
   16584:	cmp	r1, #0
   16588:	bne	16454 <ReadDataSlabN+0x92c>
   1658c:	ldr	r3, [sp, #208]	; 0xd0
   16590:	add	sl, r3, #4
   16594:	ldr	r3, [sp, #200]	; 0xc8
   16598:	add	r8, r3, #4
   1659c:	mov	r5, #1
   165a0:	str	fp, [sp, #12]
   165a4:	str	r4, [sp, #204]	; 0xcc
   165a8:	ldr	r6, [sp, #28]
   165ac:	b	163f8 <ReadDataSlabN+0x8d0>
   165b0:	ldr	fp, [sp, #12]
   165b4:	ldr	r4, [sp, #204]	; 0xcc
   165b8:	b	16488 <ReadDataSlabN+0x960>
   165bc:	mov	r0, #0
   165c0:	b	18ca0 <ReadDataSlabN+0x3178>
   165c4:	ldr	r3, [r4]
   165c8:	sub	r3, r3, #1
   165cc:	str	r3, [sp, #112]	; 0x70
   165d0:	ldr	r3, [sp, #196]	; 0xc4
   165d4:	ldr	r3, [r3]
   165d8:	str	r3, [sp, #32]
   165dc:	ldr	r3, [sp, #208]	; 0xd0
   165e0:	ldr	r3, [r3]
   165e4:	str	r3, [sp, #20]
   165e8:	ldr	r3, [sp, #192]	; 0xc0
   165ec:	cmp	r3, #1
   165f0:	ble	16628 <ReadDataSlabN+0xb00>
   165f4:	str	r4, [sp, #24]
   165f8:	add	r9, sp, #116	; 0x74
   165fc:	ldr	lr, [sp, #196]	; 0xc4
   16600:	add	fp, sp, #32
   16604:	ldr	r3, [sp, #208]	; 0xd0
   16608:	add	r8, r3, #4
   1660c:	ldr	r3, [sp, #200]	; 0xc8
   16610:	add	r6, r3, #4
   16614:	mov	sl, lr
   16618:	mov	r5, #2
   1661c:	mov	r7, #0
   16620:	str	r4, [sp, #204]	; 0xcc
   16624:	b	18f48 <ReadDataSlabN+0x3420>
   16628:	mov	r7, #0
   1662c:	b	18fd0 <ReadDataSlabN+0x34a8>
   16630:	ldr	r3, [sp, #20]
   16634:	cmp	r3, #0
   16638:	ble	18cc0 <ReadDataSlabN+0x3198>
   1663c:	mov	r3, #0
   16640:	str	r3, [sp, #24]
   16644:	add	r8, sp, #72	; 0x48
   16648:	add	fp, sp, #32
   1664c:	b	16788 <ReadDataSlabN+0xc60>
   16650:	mov	r2, #1
   16654:	ldr	r3, [sp, #4]
   16658:	mul	r1, r3, r1
   1665c:	ldr	r3, [sp, #12]
   16660:	ldr	r0, [r3]
   16664:	bl	1714 <fseek@plt>
   16668:	ldr	r3, [sp, #200]	; 0xc8
   1666c:	ldr	r3, [r3]
   16670:	add	r7, r7, r3
   16674:	b	16798 <ReadDataSlabN+0xc70>
   16678:	sub	r5, r5, r1
   1667c:	add	r3, fp, r4, lsl #2
   16680:	ldr	sl, [r3, #-4]
   16684:	ldr	r1, [r6]
   16688:	mla	r1, r1, sl, r5
   1668c:	mov	r2, #1
   16690:	ldr	r3, [sp, #4]
   16694:	mul	r1, r3, r1
   16698:	ldr	r3, [sp, #12]
   1669c:	ldr	r0, [r3]
   166a0:	bl	1714 <fseek@plt>
   166a4:	ldr	r1, [r6]
   166a8:	mla	r5, r1, sl, r5
   166ac:	add	r7, r7, r5
   166b0:	add	r4, r4, #1
   166b4:	ldr	r3, [sp, #192]	; 0xc0
   166b8:	cmp	r3, r4
   166bc:	beq	16768 <ReadDataSlabN+0xc40>
   166c0:	ldr	r0, [r8, r4, lsl #2]
   166c4:	add	r0, r0, #1
   166c8:	str	r0, [r8, r4, lsl #2]
   166cc:	add	r6, r6, #4
   166d0:	ldr	r1, [r9, #4]!
   166d4:	bl	517e8 <__aeabi_idivmod>
   166d8:	cmp	r1, #0
   166dc:	bne	16740 <ReadDataSlabN+0xc18>
   166e0:	mov	r3, #0
   166e4:	str	r3, [r8, r4, lsl #2]
   166e8:	ldr	r5, [fp, r4, lsl #2]
   166ec:	mov	r1, r5
   166f0:	mov	r0, r7
   166f4:	bl	517e8 <__aeabi_idivmod>
   166f8:	cmp	r1, #0
   166fc:	bne	16678 <ReadDataSlabN+0xb50>
   16700:	ldr	r1, [r6]
   16704:	cmp	r1, #0
   16708:	beq	166b0 <ReadDataSlabN+0xb88>
   1670c:	add	sl, fp, r4, lsl #2
   16710:	ldr	r5, [sl, #-4]
   16714:	mul	r1, r5, r1
   16718:	mov	r2, #1
   1671c:	ldr	r3, [sp, #4]
   16720:	mul	r1, r3, r1
   16724:	ldr	r3, [sp, #12]
   16728:	ldr	r0, [r3]
   1672c:	bl	1714 <fseek@plt>
   16730:	ldr	r3, [r6]
   16734:	mla	r7, r3, r5, r7
   16738:	b	166b0 <ReadDataSlabN+0xb88>
   1673c:	ldr	r4, [sp, #28]
   16740:	add	r3, sp, #152	; 0x98
   16744:	add	r4, r3, r4, lsl #2
   16748:	ldr	r1, [r4, #-40]	; 0xffffffd8
   1674c:	add	r7, r7, r1
   16750:	mov	r2, #1
   16754:	ldr	r3, [sp, #4]
   16758:	mul	r1, r3, r1
   1675c:	ldr	r3, [sp, #12]
   16760:	ldr	r0, [r3]
   16764:	bl	1714 <fseek@plt>
   16768:	ldr	r3, [sp, #208]	; 0xd0
   1676c:	ldr	r3, [r3]
   16770:	ldr	r2, [sp, #24]
   16774:	add	r3, r2, r3
   16778:	str	r3, [sp, #24]
   1677c:	ldr	r2, [sp, #20]
   16780:	cmp	r3, r2
   16784:	bge	1683c <ReadDataSlabN+0xd14>
   16788:	ldr	r3, [sp, #200]	; 0xc8
   1678c:	ldr	r1, [r3]
   16790:	cmp	r1, #0
   16794:	bne	16650 <ReadDataSlabN+0xb28>
   16798:	ldr	r3, [sp, #208]	; 0xd0
   1679c:	ldr	r3, [r3]
   167a0:	ldr	r2, [sp, #8]
   167a4:	ldr	r1, [sp, #16]
   167a8:	ldr	r0, [sp, #24]
   167ac:	add	r1, r1, r0, lsl #3
   167b0:	ldr	r4, [sp, #12]
   167b4:	mov	r0, r4
   167b8:	bl	7d94 <ReadInt64Data>
   167bc:	ldr	r3, [sp, #196]	; 0xc4
   167c0:	ldr	r3, [r3]
   167c4:	ldr	r2, [sp, #200]	; 0xc8
   167c8:	ldr	r1, [r2]
   167cc:	sub	r2, r3, r1
   167d0:	add	r7, r2, r7
   167d4:	ldr	r2, [sp, #208]	; 0xd0
   167d8:	ldr	r2, [r2]
   167dc:	sub	r3, r3, r2
   167e0:	sub	r1, r3, r1
   167e4:	mov	r2, #1
   167e8:	ldr	r3, [sp, #4]
   167ec:	mul	r1, r3, r1
   167f0:	ldr	r0, [r4]
   167f4:	bl	1714 <fseek@plt>
   167f8:	ldr	r3, [sp, #192]	; 0xc0
   167fc:	cmp	r3, #1
   16800:	ble	16768 <ReadDataSlabN+0xc40>
   16804:	ldr	r0, [sp, #76]	; 0x4c
   16808:	add	r0, r0, #1
   1680c:	str	r0, [sp, #76]	; 0x4c
   16810:	ldr	r3, [sp, #208]	; 0xd0
   16814:	ldr	r1, [r3, #4]
   16818:	bl	517e8 <__aeabi_idivmod>
   1681c:	cmp	r1, #0
   16820:	bne	1673c <ReadDataSlabN+0xc14>
   16824:	ldr	r3, [sp, #208]	; 0xd0
   16828:	add	r9, r3, #4
   1682c:	ldr	r3, [sp, #200]	; 0xc8
   16830:	add	r6, r3, #4
   16834:	ldr	r4, [sp, #28]
   16838:	b	166e0 <ReadDataSlabN+0xbb8>
   1683c:	mov	r0, #0
   16840:	b	18ca0 <ReadDataSlabN+0x3178>
   16844:	mov	r2, #1
   16848:	ldr	r3, [sp, #4]
   1684c:	mul	r1, r3, r1
   16850:	ldr	r0, [fp]
   16854:	bl	1714 <fseek@plt>
   16858:	ldr	r3, [sp, #200]	; 0xc8
   1685c:	ldr	r3, [r3]
   16860:	add	r7, r7, r3
   16864:	b	16990 <ReadDataSlabN+0xe68>
   16868:	sub	r4, r4, r1
   1686c:	add	r3, r6, r5, lsl #2
   16870:	ldr	fp, [r3, #-4]
   16874:	ldr	r1, [r8]
   16878:	mla	r1, r1, fp, r4
   1687c:	mov	r2, #1
   16880:	ldr	r3, [sp, #4]
   16884:	mul	r1, r3, r1
   16888:	ldr	r3, [sp, #12]
   1688c:	ldr	r0, [r3]
   16890:	bl	1714 <fseek@plt>
   16894:	ldr	r1, [r8]
   16898:	mla	r4, r1, fp, r4
   1689c:	add	r7, r7, r4
   168a0:	add	r5, r5, #1
   168a4:	ldr	r3, [sp, #192]	; 0xc0
   168a8:	cmp	r3, r5
   168ac:	beq	16a88 <ReadDataSlabN+0xf60>
   168b0:	ldr	r0, [r9, r5, lsl #2]
   168b4:	add	r0, r0, #1
   168b8:	str	r0, [r9, r5, lsl #2]
   168bc:	add	r8, r8, #4
   168c0:	ldr	r1, [sl, #4]!
   168c4:	bl	517e8 <__aeabi_idivmod>
   168c8:	cmp	r1, #0
   168cc:	bne	16934 <ReadDataSlabN+0xe0c>
   168d0:	mov	r3, #0
   168d4:	str	r3, [r9, r5, lsl #2]
   168d8:	ldr	r4, [r6, r5, lsl #2]
   168dc:	mov	r1, r4
   168e0:	mov	r0, r7
   168e4:	bl	517e8 <__aeabi_idivmod>
   168e8:	cmp	r1, #0
   168ec:	bne	16868 <ReadDataSlabN+0xd40>
   168f0:	ldr	r1, [r8]
   168f4:	cmp	r1, #0
   168f8:	beq	168a0 <ReadDataSlabN+0xd78>
   168fc:	add	fp, r6, r5, lsl #2
   16900:	ldr	r4, [fp, #-4]
   16904:	mul	r1, r4, r1
   16908:	mov	r2, #1
   1690c:	ldr	r3, [sp, #4]
   16910:	mul	r1, r3, r1
   16914:	ldr	r3, [sp, #12]
   16918:	ldr	r0, [r3]
   1691c:	bl	1714 <fseek@plt>
   16920:	ldr	r3, [r8]
   16924:	mla	r7, r3, r4, r7
   16928:	b	168a0 <ReadDataSlabN+0xd78>
   1692c:	mov	r5, #1
   16930:	b	1693c <ReadDataSlabN+0xe14>
   16934:	ldr	fp, [sp, #12]
   16938:	ldr	r4, [sp, #204]	; 0xcc
   1693c:	add	r3, sp, #152	; 0x98
   16940:	add	r5, r3, r5, lsl #2
   16944:	ldr	r1, [r5, #-40]	; 0xffffffd8
   16948:	add	r7, r7, r1
   1694c:	mov	r2, #1
   16950:	ldr	r3, [sp, #4]
   16954:	mul	r1, r3, r1
   16958:	ldr	r0, [fp]
   1695c:	bl	1714 <fseek@plt>
   16960:	ldr	r3, [sp, #208]	; 0xd0
   16964:	ldr	r3, [r3]
   16968:	ldr	r2, [sp, #24]
   1696c:	add	r3, r2, r3
   16970:	str	r3, [sp, #24]
   16974:	ldr	r2, [sp, #20]
   16978:	cmp	r3, r2
   1697c:	bge	16a94 <ReadDataSlabN+0xf6c>
   16980:	ldr	r3, [sp, #200]	; 0xc8
   16984:	ldr	r1, [r3]
   16988:	cmp	r1, #0
   1698c:	bne	16844 <ReadDataSlabN+0xd1c>
   16990:	ldr	r3, [sp, #208]	; 0xd0
   16994:	ldr	r3, [r3]
   16998:	cmp	r3, #0
   1699c:	ble	16a00 <ReadDataSlabN+0xed8>
   169a0:	ldr	r3, [sp, #16]
   169a4:	ldr	r2, [sp, #24]
   169a8:	add	r6, r3, r2, lsl #3
   169ac:	mov	r5, #0
   169b0:	ldr	r8, [sp, #4]
   169b4:	ldr	sl, [sp, #208]	; 0xd0
   169b8:	mov	r3, #1
   169bc:	ldr	r2, [sp, #8]
   169c0:	mov	r1, r6
   169c4:	mov	r0, fp
   169c8:	bl	7d94 <ReadInt64Data>
   169cc:	ldr	r1, [r4]
   169d0:	sub	r1, r1, #1
   169d4:	mov	r2, #1
   169d8:	mul	r1, r8, r1
   169dc:	ldr	r0, [fp]
   169e0:	bl	1714 <fseek@plt>
   169e4:	ldr	r3, [r4]
   169e8:	add	r7, r7, r3
   169ec:	add	r5, r5, #1
   169f0:	ldr	r3, [sl]
   169f4:	add	r6, r6, #8
   169f8:	cmp	r3, r5
   169fc:	bgt	169b8 <ReadDataSlabN+0xe90>
   16a00:	ldr	r1, [r4]
   16a04:	mul	r3, r1, r3
   16a08:	ldr	r2, [sp, #196]	; 0xc4
   16a0c:	ldr	r1, [r2]
   16a10:	sub	r1, r1, r3
   16a14:	ldr	r3, [sp, #200]	; 0xc8
   16a18:	ldr	r3, [r3]
   16a1c:	sub	r1, r1, r3
   16a20:	add	r7, r7, r1
   16a24:	mov	r2, #1
   16a28:	ldr	r3, [sp, #4]
   16a2c:	mul	r1, r1, r3
   16a30:	ldr	r0, [fp]
   16a34:	bl	1714 <fseek@plt>
   16a38:	ldr	r3, [sp, #192]	; 0xc0
   16a3c:	cmp	r3, #1
   16a40:	ble	16960 <ReadDataSlabN+0xe38>
   16a44:	ldr	r0, [sp, #76]	; 0x4c
   16a48:	add	r0, r0, #1
   16a4c:	str	r0, [sp, #76]	; 0x4c
   16a50:	ldr	r3, [sp, #208]	; 0xd0
   16a54:	ldr	r1, [r3, #4]
   16a58:	bl	517e8 <__aeabi_idivmod>
   16a5c:	cmp	r1, #0
   16a60:	bne	1692c <ReadDataSlabN+0xe04>
   16a64:	ldr	r3, [sp, #208]	; 0xd0
   16a68:	add	sl, r3, #4
   16a6c:	ldr	r3, [sp, #200]	; 0xc8
   16a70:	add	r8, r3, #4
   16a74:	mov	r5, #1
   16a78:	str	fp, [sp, #12]
   16a7c:	str	r4, [sp, #204]	; 0xcc
   16a80:	ldr	r6, [sp, #28]
   16a84:	b	168d0 <ReadDataSlabN+0xda8>
   16a88:	ldr	fp, [sp, #12]
   16a8c:	ldr	r4, [sp, #204]	; 0xcc
   16a90:	b	16960 <ReadDataSlabN+0xe38>
   16a94:	mov	r0, #0
   16a98:	b	18ca0 <ReadDataSlabN+0x3178>
   16a9c:	ldr	r3, [r4]
   16aa0:	sub	r3, r3, #1
   16aa4:	str	r3, [sp, #112]	; 0x70
   16aa8:	ldr	r3, [sp, #196]	; 0xc4
   16aac:	ldr	r3, [r3]
   16ab0:	str	r3, [sp, #32]
   16ab4:	ldr	r3, [sp, #208]	; 0xd0
   16ab8:	ldr	r3, [r3]
   16abc:	str	r3, [sp, #20]
   16ac0:	ldr	r3, [sp, #192]	; 0xc0
   16ac4:	cmp	r3, #1
   16ac8:	ble	16b00 <ReadDataSlabN+0xfd8>
   16acc:	str	r4, [sp, #24]
   16ad0:	add	r9, sp, #116	; 0x74
   16ad4:	ldr	lr, [sp, #196]	; 0xc4
   16ad8:	add	fp, sp, #32
   16adc:	ldr	r3, [sp, #208]	; 0xd0
   16ae0:	add	r8, r3, #4
   16ae4:	ldr	r3, [sp, #200]	; 0xc8
   16ae8:	add	r6, r3, #4
   16aec:	mov	sl, lr
   16af0:	mov	r5, #2
   16af4:	mov	r7, #0
   16af8:	str	r4, [sp, #204]	; 0xcc
   16afc:	b	19054 <ReadDataSlabN+0x352c>
   16b00:	mov	r7, #0
   16b04:	b	190dc <ReadDataSlabN+0x35b4>
   16b08:	ldr	r3, [sp, #20]
   16b0c:	cmp	r3, #0
   16b10:	ble	18cc8 <ReadDataSlabN+0x31a0>
   16b14:	mov	r3, #0
   16b18:	str	r3, [sp, #24]
   16b1c:	add	r8, sp, #72	; 0x48
   16b20:	add	fp, sp, #32
   16b24:	b	16c60 <ReadDataSlabN+0x1138>
   16b28:	mov	r2, #1
   16b2c:	ldr	r3, [sp, #4]
   16b30:	mul	r1, r3, r1
   16b34:	ldr	r3, [sp, #12]
   16b38:	ldr	r0, [r3]
   16b3c:	bl	1714 <fseek@plt>
   16b40:	ldr	r3, [sp, #200]	; 0xc8
   16b44:	ldr	r3, [r3]
   16b48:	add	r7, r7, r3
   16b4c:	b	16c70 <ReadDataSlabN+0x1148>
   16b50:	sub	r5, r5, r1
   16b54:	add	r3, fp, r4, lsl #2
   16b58:	ldr	sl, [r3, #-4]
   16b5c:	ldr	r1, [r6]
   16b60:	mla	r1, r1, sl, r5
   16b64:	mov	r2, #1
   16b68:	ldr	r3, [sp, #4]
   16b6c:	mul	r1, r3, r1
   16b70:	ldr	r3, [sp, #12]
   16b74:	ldr	r0, [r3]
   16b78:	bl	1714 <fseek@plt>
   16b7c:	ldr	r1, [r6]
   16b80:	mla	r5, r1, sl, r5
   16b84:	add	r7, r7, r5
   16b88:	add	r4, r4, #1
   16b8c:	ldr	r3, [sp, #192]	; 0xc0
   16b90:	cmp	r3, r4
   16b94:	beq	16c40 <ReadDataSlabN+0x1118>
   16b98:	ldr	r0, [r8, r4, lsl #2]
   16b9c:	add	r0, r0, #1
   16ba0:	str	r0, [r8, r4, lsl #2]
   16ba4:	add	r6, r6, #4
   16ba8:	ldr	r1, [r9, #4]!
   16bac:	bl	517e8 <__aeabi_idivmod>
   16bb0:	cmp	r1, #0
   16bb4:	bne	16c18 <ReadDataSlabN+0x10f0>
   16bb8:	mov	r3, #0
   16bbc:	str	r3, [r8, r4, lsl #2]
   16bc0:	ldr	r5, [fp, r4, lsl #2]
   16bc4:	mov	r1, r5
   16bc8:	mov	r0, r7
   16bcc:	bl	517e8 <__aeabi_idivmod>
   16bd0:	cmp	r1, #0
   16bd4:	bne	16b50 <ReadDataSlabN+0x1028>
   16bd8:	ldr	r1, [r6]
   16bdc:	cmp	r1, #0
   16be0:	beq	16b88 <ReadDataSlabN+0x1060>
   16be4:	add	sl, fp, r4, lsl #2
   16be8:	ldr	r5, [sl, #-4]
   16bec:	mul	r1, r5, r1
   16bf0:	mov	r2, #1
   16bf4:	ldr	r3, [sp, #4]
   16bf8:	mul	r1, r3, r1
   16bfc:	ldr	r3, [sp, #12]
   16c00:	ldr	r0, [r3]
   16c04:	bl	1714 <fseek@plt>
   16c08:	ldr	r3, [r6]
   16c0c:	mla	r7, r3, r5, r7
   16c10:	b	16b88 <ReadDataSlabN+0x1060>
   16c14:	ldr	r4, [sp, #28]
   16c18:	add	r3, sp, #152	; 0x98
   16c1c:	add	r4, r3, r4, lsl #2
   16c20:	ldr	r1, [r4, #-40]	; 0xffffffd8
   16c24:	add	r7, r7, r1
   16c28:	mov	r2, #1
   16c2c:	ldr	r3, [sp, #4]
   16c30:	mul	r1, r3, r1
   16c34:	ldr	r3, [sp, #12]
   16c38:	ldr	r0, [r3]
   16c3c:	bl	1714 <fseek@plt>
   16c40:	ldr	r3, [sp, #208]	; 0xd0
   16c44:	ldr	r3, [r3]
   16c48:	ldr	r2, [sp, #24]
   16c4c:	add	r3, r2, r3
   16c50:	str	r3, [sp, #24]
   16c54:	ldr	r2, [sp, #20]
   16c58:	cmp	r3, r2
   16c5c:	bge	16d14 <ReadDataSlabN+0x11ec>
   16c60:	ldr	r3, [sp, #200]	; 0xc8
   16c64:	ldr	r1, [r3]
   16c68:	cmp	r1, #0
   16c6c:	bne	16b28 <ReadDataSlabN+0x1000>
   16c70:	ldr	r3, [sp, #208]	; 0xd0
   16c74:	ldr	r3, [r3]
   16c78:	ldr	r2, [sp, #8]
   16c7c:	ldr	r1, [sp, #16]
   16c80:	ldr	r0, [sp, #24]
   16c84:	add	r1, r1, r0, lsl #3
   16c88:	ldr	r4, [sp, #12]
   16c8c:	mov	r0, r4
   16c90:	bl	9a2c <ReadUInt64Data>
   16c94:	ldr	r3, [sp, #196]	; 0xc4
   16c98:	ldr	r3, [r3]
   16c9c:	ldr	r2, [sp, #200]	; 0xc8
   16ca0:	ldr	r1, [r2]
   16ca4:	sub	r2, r3, r1
   16ca8:	add	r7, r2, r7
   16cac:	ldr	r2, [sp, #208]	; 0xd0
   16cb0:	ldr	r2, [r2]
   16cb4:	sub	r3, r3, r2
   16cb8:	sub	r1, r3, r1
   16cbc:	mov	r2, #1
   16cc0:	ldr	r3, [sp, #4]
   16cc4:	mul	r1, r3, r1
   16cc8:	ldr	r0, [r4]
   16ccc:	bl	1714 <fseek@plt>
   16cd0:	ldr	r3, [sp, #192]	; 0xc0
   16cd4:	cmp	r3, #1
   16cd8:	ble	16c40 <ReadDataSlabN+0x1118>
   16cdc:	ldr	r0, [sp, #76]	; 0x4c
   16ce0:	add	r0, r0, #1
   16ce4:	str	r0, [sp, #76]	; 0x4c
   16ce8:	ldr	r3, [sp, #208]	; 0xd0
   16cec:	ldr	r1, [r3, #4]
   16cf0:	bl	517e8 <__aeabi_idivmod>
   16cf4:	cmp	r1, #0
   16cf8:	bne	16c14 <ReadDataSlabN+0x10ec>
   16cfc:	ldr	r3, [sp, #208]	; 0xd0
   16d00:	add	r9, r3, #4
   16d04:	ldr	r3, [sp, #200]	; 0xc8
   16d08:	add	r6, r3, #4
   16d0c:	ldr	r4, [sp, #28]
   16d10:	b	16bb8 <ReadDataSlabN+0x1090>
   16d14:	mov	r0, #0
   16d18:	b	18ca0 <ReadDataSlabN+0x3178>
   16d1c:	mov	r2, #1
   16d20:	ldr	r3, [sp, #4]
   16d24:	mul	r1, r3, r1
   16d28:	ldr	r0, [fp]
   16d2c:	bl	1714 <fseek@plt>
   16d30:	ldr	r3, [sp, #200]	; 0xc8
   16d34:	ldr	r3, [r3]
   16d38:	add	r7, r7, r3
   16d3c:	b	16e68 <ReadDataSlabN+0x1340>
   16d40:	sub	r4, r4, r1
   16d44:	add	r3, r6, r5, lsl #2
   16d48:	ldr	fp, [r3, #-4]
   16d4c:	ldr	r1, [r8]
   16d50:	mla	r1, r1, fp, r4
   16d54:	mov	r2, #1
   16d58:	ldr	r3, [sp, #4]
   16d5c:	mul	r1, r3, r1
   16d60:	ldr	r3, [sp, #12]
   16d64:	ldr	r0, [r3]
   16d68:	bl	1714 <fseek@plt>
   16d6c:	ldr	r1, [r8]
   16d70:	mla	r4, r1, fp, r4
   16d74:	add	r7, r7, r4
   16d78:	add	r5, r5, #1
   16d7c:	ldr	r3, [sp, #192]	; 0xc0
   16d80:	cmp	r3, r5
   16d84:	beq	16f60 <ReadDataSlabN+0x1438>
   16d88:	ldr	r0, [r9, r5, lsl #2]
   16d8c:	add	r0, r0, #1
   16d90:	str	r0, [r9, r5, lsl #2]
   16d94:	add	r8, r8, #4
   16d98:	ldr	r1, [sl, #4]!
   16d9c:	bl	517e8 <__aeabi_idivmod>
   16da0:	cmp	r1, #0
   16da4:	bne	16e0c <ReadDataSlabN+0x12e4>
   16da8:	mov	r3, #0
   16dac:	str	r3, [r9, r5, lsl #2]
   16db0:	ldr	r4, [r6, r5, lsl #2]
   16db4:	mov	r1, r4
   16db8:	mov	r0, r7
   16dbc:	bl	517e8 <__aeabi_idivmod>
   16dc0:	cmp	r1, #0
   16dc4:	bne	16d40 <ReadDataSlabN+0x1218>
   16dc8:	ldr	r1, [r8]
   16dcc:	cmp	r1, #0
   16dd0:	beq	16d78 <ReadDataSlabN+0x1250>
   16dd4:	add	fp, r6, r5, lsl #2
   16dd8:	ldr	r4, [fp, #-4]
   16ddc:	mul	r1, r4, r1
   16de0:	mov	r2, #1
   16de4:	ldr	r3, [sp, #4]
   16de8:	mul	r1, r3, r1
   16dec:	ldr	r3, [sp, #12]
   16df0:	ldr	r0, [r3]
   16df4:	bl	1714 <fseek@plt>
   16df8:	ldr	r3, [r8]
   16dfc:	mla	r7, r3, r4, r7
   16e00:	b	16d78 <ReadDataSlabN+0x1250>
   16e04:	mov	r5, #1
   16e08:	b	16e14 <ReadDataSlabN+0x12ec>
   16e0c:	ldr	fp, [sp, #12]
   16e10:	ldr	r4, [sp, #204]	; 0xcc
   16e14:	add	r3, sp, #152	; 0x98
   16e18:	add	r5, r3, r5, lsl #2
   16e1c:	ldr	r1, [r5, #-40]	; 0xffffffd8
   16e20:	add	r7, r7, r1
   16e24:	mov	r2, #1
   16e28:	ldr	r3, [sp, #4]
   16e2c:	mul	r1, r3, r1
   16e30:	ldr	r0, [fp]
   16e34:	bl	1714 <fseek@plt>
   16e38:	ldr	r3, [sp, #208]	; 0xd0
   16e3c:	ldr	r3, [r3]
   16e40:	ldr	r2, [sp, #24]
   16e44:	add	r3, r2, r3
   16e48:	str	r3, [sp, #24]
   16e4c:	ldr	r2, [sp, #20]
   16e50:	cmp	r3, r2
   16e54:	bge	16f6c <ReadDataSlabN+0x1444>
   16e58:	ldr	r3, [sp, #200]	; 0xc8
   16e5c:	ldr	r1, [r3]
   16e60:	cmp	r1, #0
   16e64:	bne	16d1c <ReadDataSlabN+0x11f4>
   16e68:	ldr	r3, [sp, #208]	; 0xd0
   16e6c:	ldr	r3, [r3]
   16e70:	cmp	r3, #0
   16e74:	ble	16ed8 <ReadDataSlabN+0x13b0>
   16e78:	ldr	r3, [sp, #16]
   16e7c:	ldr	r2, [sp, #24]
   16e80:	add	r6, r3, r2, lsl #3
   16e84:	mov	r5, #0
   16e88:	ldr	r8, [sp, #4]
   16e8c:	ldr	sl, [sp, #208]	; 0xd0
   16e90:	mov	r3, #1
   16e94:	ldr	r2, [sp, #8]
   16e98:	mov	r1, r6
   16e9c:	mov	r0, fp
   16ea0:	bl	9a2c <ReadUInt64Data>
   16ea4:	ldr	r1, [r4]
   16ea8:	sub	r1, r1, #1
   16eac:	mov	r2, #1
   16eb0:	mul	r1, r8, r1
   16eb4:	ldr	r0, [fp]
   16eb8:	bl	1714 <fseek@plt>
   16ebc:	ldr	r3, [r4]
   16ec0:	add	r7, r7, r3
   16ec4:	add	r5, r5, #1
   16ec8:	ldr	r3, [sl]
   16ecc:	add	r6, r6, #8
   16ed0:	cmp	r3, r5
   16ed4:	bgt	16e90 <ReadDataSlabN+0x1368>
   16ed8:	ldr	r1, [r4]
   16edc:	mul	r3, r1, r3
   16ee0:	ldr	r2, [sp, #196]	; 0xc4
   16ee4:	ldr	r1, [r2]
   16ee8:	sub	r1, r1, r3
   16eec:	ldr	r3, [sp, #200]	; 0xc8
   16ef0:	ldr	r3, [r3]
   16ef4:	sub	r1, r1, r3
   16ef8:	add	r7, r7, r1
   16efc:	mov	r2, #1
   16f00:	ldr	r3, [sp, #4]
   16f04:	mul	r1, r1, r3
   16f08:	ldr	r0, [fp]
   16f0c:	bl	1714 <fseek@plt>
   16f10:	ldr	r3, [sp, #192]	; 0xc0
   16f14:	cmp	r3, #1
   16f18:	ble	16e38 <ReadDataSlabN+0x1310>
   16f1c:	ldr	r0, [sp, #76]	; 0x4c
   16f20:	add	r0, r0, #1
   16f24:	str	r0, [sp, #76]	; 0x4c
   16f28:	ldr	r3, [sp, #208]	; 0xd0
   16f2c:	ldr	r1, [r3, #4]
   16f30:	bl	517e8 <__aeabi_idivmod>
   16f34:	cmp	r1, #0
   16f38:	bne	16e04 <ReadDataSlabN+0x12dc>
   16f3c:	ldr	r3, [sp, #208]	; 0xd0
   16f40:	add	sl, r3, #4
   16f44:	ldr	r3, [sp, #200]	; 0xc8
   16f48:	add	r8, r3, #4
   16f4c:	mov	r5, #1
   16f50:	str	fp, [sp, #12]
   16f54:	str	r4, [sp, #204]	; 0xcc
   16f58:	ldr	r6, [sp, #28]
   16f5c:	b	16da8 <ReadDataSlabN+0x1280>
   16f60:	ldr	fp, [sp, #12]
   16f64:	ldr	r4, [sp, #204]	; 0xcc
   16f68:	b	16e38 <ReadDataSlabN+0x1310>
   16f6c:	mov	r0, #0
   16f70:	b	18ca0 <ReadDataSlabN+0x3178>
   16f74:	ldr	r3, [r4]
   16f78:	sub	r3, r3, #1
   16f7c:	str	r3, [sp, #112]	; 0x70
   16f80:	ldr	r3, [sp, #196]	; 0xc4
   16f84:	ldr	r3, [r3]
   16f88:	str	r3, [sp, #32]
   16f8c:	ldr	r3, [sp, #208]	; 0xd0
   16f90:	ldr	r3, [r3]
   16f94:	str	r3, [sp, #20]
   16f98:	ldr	r3, [sp, #192]	; 0xc0
   16f9c:	cmp	r3, #1
   16fa0:	ble	16fd8 <ReadDataSlabN+0x14b0>
   16fa4:	str	r4, [sp, #24]
   16fa8:	add	r9, sp, #116	; 0x74
   16fac:	ldr	lr, [sp, #196]	; 0xc4
   16fb0:	add	fp, sp, #32
   16fb4:	ldr	r3, [sp, #208]	; 0xd0
   16fb8:	add	r8, r3, #4
   16fbc:	ldr	r3, [sp, #200]	; 0xc8
   16fc0:	add	r6, r3, #4
   16fc4:	mov	sl, lr
   16fc8:	mov	r5, #2
   16fcc:	mov	r7, #0
   16fd0:	str	r4, [sp, #204]	; 0xcc
   16fd4:	b	19160 <ReadDataSlabN+0x3638>
   16fd8:	mov	r7, #0
   16fdc:	b	191e8 <ReadDataSlabN+0x36c0>
   16fe0:	ldr	r3, [sp, #20]
   16fe4:	cmp	r3, #0
   16fe8:	ble	18cd0 <ReadDataSlabN+0x31a8>
   16fec:	mov	r3, #0
   16ff0:	str	r3, [sp, #24]
   16ff4:	add	r8, sp, #72	; 0x48
   16ff8:	add	fp, sp, #32
   16ffc:	b	17138 <ReadDataSlabN+0x1610>
   17000:	mov	r2, #1
   17004:	ldr	r3, [sp, #4]
   17008:	mul	r1, r3, r1
   1700c:	ldr	r3, [sp, #12]
   17010:	ldr	r0, [r3]
   17014:	bl	1714 <fseek@plt>
   17018:	ldr	r3, [sp, #200]	; 0xc8
   1701c:	ldr	r3, [r3]
   17020:	add	r7, r7, r3
   17024:	b	17148 <ReadDataSlabN+0x1620>
   17028:	sub	r5, r5, r1
   1702c:	add	r3, fp, r4, lsl #2
   17030:	ldr	sl, [r3, #-4]
   17034:	ldr	r1, [r6]
   17038:	mla	r1, r1, sl, r5
   1703c:	mov	r2, #1
   17040:	ldr	r3, [sp, #4]
   17044:	mul	r1, r3, r1
   17048:	ldr	r3, [sp, #12]
   1704c:	ldr	r0, [r3]
   17050:	bl	1714 <fseek@plt>
   17054:	ldr	r1, [r6]
   17058:	mla	r5, r1, sl, r5
   1705c:	add	r7, r7, r5
   17060:	add	r4, r4, #1
   17064:	ldr	r3, [sp, #192]	; 0xc0
   17068:	cmp	r3, r4
   1706c:	beq	17118 <ReadDataSlabN+0x15f0>
   17070:	ldr	r0, [r8, r4, lsl #2]
   17074:	add	r0, r0, #1
   17078:	str	r0, [r8, r4, lsl #2]
   1707c:	add	r6, r6, #4
   17080:	ldr	r1, [r9, #4]!
   17084:	bl	517e8 <__aeabi_idivmod>
   17088:	cmp	r1, #0
   1708c:	bne	170f0 <ReadDataSlabN+0x15c8>
   17090:	mov	r3, #0
   17094:	str	r3, [r8, r4, lsl #2]
   17098:	ldr	r5, [fp, r4, lsl #2]
   1709c:	mov	r1, r5
   170a0:	mov	r0, r7
   170a4:	bl	517e8 <__aeabi_idivmod>
   170a8:	cmp	r1, #0
   170ac:	bne	17028 <ReadDataSlabN+0x1500>
   170b0:	ldr	r1, [r6]
   170b4:	cmp	r1, #0
   170b8:	beq	17060 <ReadDataSlabN+0x1538>
   170bc:	add	sl, fp, r4, lsl #2
   170c0:	ldr	r5, [sl, #-4]
   170c4:	mul	r1, r5, r1
   170c8:	mov	r2, #1
   170cc:	ldr	r3, [sp, #4]
   170d0:	mul	r1, r3, r1
   170d4:	ldr	r3, [sp, #12]
   170d8:	ldr	r0, [r3]
   170dc:	bl	1714 <fseek@plt>
   170e0:	ldr	r3, [r6]
   170e4:	mla	r7, r3, r5, r7
   170e8:	b	17060 <ReadDataSlabN+0x1538>
   170ec:	ldr	r4, [sp, #28]
   170f0:	add	r3, sp, #152	; 0x98
   170f4:	add	r4, r3, r4, lsl #2
   170f8:	ldr	r1, [r4, #-40]	; 0xffffffd8
   170fc:	add	r7, r7, r1
   17100:	mov	r2, #1
   17104:	ldr	r3, [sp, #4]
   17108:	mul	r1, r3, r1
   1710c:	ldr	r3, [sp, #12]
   17110:	ldr	r0, [r3]
   17114:	bl	1714 <fseek@plt>
   17118:	ldr	r3, [sp, #208]	; 0xd0
   1711c:	ldr	r3, [r3]
   17120:	ldr	r2, [sp, #24]
   17124:	add	r3, r2, r3
   17128:	str	r3, [sp, #24]
   1712c:	ldr	r2, [sp, #20]
   17130:	cmp	r3, r2
   17134:	bge	171ec <ReadDataSlabN+0x16c4>
   17138:	ldr	r3, [sp, #200]	; 0xc8
   1713c:	ldr	r1, [r3]
   17140:	cmp	r1, #0
   17144:	bne	17000 <ReadDataSlabN+0x14d8>
   17148:	ldr	r3, [sp, #208]	; 0xd0
   1714c:	ldr	r3, [r3]
   17150:	ldr	r2, [sp, #8]
   17154:	ldr	r1, [sp, #16]
   17158:	ldr	r0, [sp, #24]
   1715c:	add	r1, r1, r0, lsl #2
   17160:	ldr	r4, [sp, #12]
   17164:	mov	r0, r4
   17168:	bl	b6c4 <ReadInt32Data>
   1716c:	ldr	r3, [sp, #196]	; 0xc4
   17170:	ldr	r3, [r3]
   17174:	ldr	r2, [sp, #200]	; 0xc8
   17178:	ldr	r1, [r2]
   1717c:	sub	r2, r3, r1
   17180:	add	r7, r2, r7
   17184:	ldr	r2, [sp, #208]	; 0xd0
   17188:	ldr	r2, [r2]
   1718c:	sub	r3, r3, r2
   17190:	sub	r1, r3, r1
   17194:	mov	r2, #1
   17198:	ldr	r3, [sp, #4]
   1719c:	mul	r1, r3, r1
   171a0:	ldr	r0, [r4]
   171a4:	bl	1714 <fseek@plt>
   171a8:	ldr	r3, [sp, #192]	; 0xc0
   171ac:	cmp	r3, #1
   171b0:	ble	17118 <ReadDataSlabN+0x15f0>
   171b4:	ldr	r0, [sp, #76]	; 0x4c
   171b8:	add	r0, r0, #1
   171bc:	str	r0, [sp, #76]	; 0x4c
   171c0:	ldr	r3, [sp, #208]	; 0xd0
   171c4:	ldr	r1, [r3, #4]
   171c8:	bl	517e8 <__aeabi_idivmod>
   171cc:	cmp	r1, #0
   171d0:	bne	170ec <ReadDataSlabN+0x15c4>
   171d4:	ldr	r3, [sp, #208]	; 0xd0
   171d8:	add	r9, r3, #4
   171dc:	ldr	r3, [sp, #200]	; 0xc8
   171e0:	add	r6, r3, #4
   171e4:	ldr	r4, [sp, #28]
   171e8:	b	17090 <ReadDataSlabN+0x1568>
   171ec:	mov	r0, #0
   171f0:	b	18ca0 <ReadDataSlabN+0x3178>
   171f4:	mov	r2, #1
   171f8:	ldr	r3, [sp, #4]
   171fc:	mul	r1, r3, r1
   17200:	ldr	r0, [fp]
   17204:	bl	1714 <fseek@plt>
   17208:	ldr	r3, [sp, #200]	; 0xc8
   1720c:	ldr	r3, [r3]
   17210:	add	r7, r7, r3
   17214:	b	17340 <ReadDataSlabN+0x1818>
   17218:	sub	r4, r4, r1
   1721c:	add	r3, r6, r5, lsl #2
   17220:	ldr	fp, [r3, #-4]
   17224:	ldr	r1, [r8]
   17228:	mla	r1, r1, fp, r4
   1722c:	mov	r2, #1
   17230:	ldr	r3, [sp, #4]
   17234:	mul	r1, r3, r1
   17238:	ldr	r3, [sp, #12]
   1723c:	ldr	r0, [r3]
   17240:	bl	1714 <fseek@plt>
   17244:	ldr	r1, [r8]
   17248:	mla	r4, r1, fp, r4
   1724c:	add	r7, r7, r4
   17250:	add	r5, r5, #1
   17254:	ldr	r3, [sp, #192]	; 0xc0
   17258:	cmp	r3, r5
   1725c:	beq	17438 <ReadDataSlabN+0x1910>
   17260:	ldr	r0, [r9, r5, lsl #2]
   17264:	add	r0, r0, #1
   17268:	str	r0, [r9, r5, lsl #2]
   1726c:	add	r8, r8, #4
   17270:	ldr	r1, [sl, #4]!
   17274:	bl	517e8 <__aeabi_idivmod>
   17278:	cmp	r1, #0
   1727c:	bne	172e4 <ReadDataSlabN+0x17bc>
   17280:	mov	r3, #0
   17284:	str	r3, [r9, r5, lsl #2]
   17288:	ldr	r4, [r6, r5, lsl #2]
   1728c:	mov	r1, r4
   17290:	mov	r0, r7
   17294:	bl	517e8 <__aeabi_idivmod>
   17298:	cmp	r1, #0
   1729c:	bne	17218 <ReadDataSlabN+0x16f0>
   172a0:	ldr	r1, [r8]
   172a4:	cmp	r1, #0
   172a8:	beq	17250 <ReadDataSlabN+0x1728>
   172ac:	add	fp, r6, r5, lsl #2
   172b0:	ldr	r4, [fp, #-4]
   172b4:	mul	r1, r4, r1
   172b8:	mov	r2, #1
   172bc:	ldr	r3, [sp, #4]
   172c0:	mul	r1, r3, r1
   172c4:	ldr	r3, [sp, #12]
   172c8:	ldr	r0, [r3]
   172cc:	bl	1714 <fseek@plt>
   172d0:	ldr	r3, [r8]
   172d4:	mla	r7, r3, r4, r7
   172d8:	b	17250 <ReadDataSlabN+0x1728>
   172dc:	mov	r5, #1
   172e0:	b	172ec <ReadDataSlabN+0x17c4>
   172e4:	ldr	fp, [sp, #12]
   172e8:	ldr	r4, [sp, #204]	; 0xcc
   172ec:	add	r3, sp, #152	; 0x98
   172f0:	add	r5, r3, r5, lsl #2
   172f4:	ldr	r1, [r5, #-40]	; 0xffffffd8
   172f8:	add	r7, r7, r1
   172fc:	mov	r2, #1
   17300:	ldr	r3, [sp, #4]
   17304:	mul	r1, r3, r1
   17308:	ldr	r0, [fp]
   1730c:	bl	1714 <fseek@plt>
   17310:	ldr	r3, [sp, #208]	; 0xd0
   17314:	ldr	r3, [r3]
   17318:	ldr	r2, [sp, #24]
   1731c:	add	r3, r2, r3
   17320:	str	r3, [sp, #24]
   17324:	ldr	r2, [sp, #20]
   17328:	cmp	r3, r2
   1732c:	bge	17444 <ReadDataSlabN+0x191c>
   17330:	ldr	r3, [sp, #200]	; 0xc8
   17334:	ldr	r1, [r3]
   17338:	cmp	r1, #0
   1733c:	bne	171f4 <ReadDataSlabN+0x16cc>
   17340:	ldr	r3, [sp, #208]	; 0xd0
   17344:	ldr	r3, [r3]
   17348:	cmp	r3, #0
   1734c:	ble	173b0 <ReadDataSlabN+0x1888>
   17350:	ldr	r3, [sp, #16]
   17354:	ldr	r2, [sp, #24]
   17358:	add	r6, r3, r2, lsl #2
   1735c:	mov	r5, #0
   17360:	ldr	r8, [sp, #4]
   17364:	ldr	sl, [sp, #208]	; 0xd0
   17368:	mov	r3, #1
   1736c:	ldr	r2, [sp, #8]
   17370:	mov	r1, r6
   17374:	mov	r0, fp
   17378:	bl	b6c4 <ReadInt32Data>
   1737c:	ldr	r1, [r4]
   17380:	sub	r1, r1, #1
   17384:	mov	r2, #1
   17388:	mul	r1, r8, r1
   1738c:	ldr	r0, [fp]
   17390:	bl	1714 <fseek@plt>
   17394:	ldr	r3, [r4]
   17398:	add	r7, r7, r3
   1739c:	add	r5, r5, #1
   173a0:	ldr	r3, [sl]
   173a4:	add	r6, r6, #4
   173a8:	cmp	r3, r5
   173ac:	bgt	17368 <ReadDataSlabN+0x1840>
   173b0:	ldr	r1, [r4]
   173b4:	mul	r3, r1, r3
   173b8:	ldr	r2, [sp, #196]	; 0xc4
   173bc:	ldr	r1, [r2]
   173c0:	sub	r1, r1, r3
   173c4:	ldr	r3, [sp, #200]	; 0xc8
   173c8:	ldr	r3, [r3]
   173cc:	sub	r1, r1, r3
   173d0:	add	r7, r7, r1
   173d4:	mov	r2, #1
   173d8:	ldr	r3, [sp, #4]
   173dc:	mul	r1, r1, r3
   173e0:	ldr	r0, [fp]
   173e4:	bl	1714 <fseek@plt>
   173e8:	ldr	r3, [sp, #192]	; 0xc0
   173ec:	cmp	r3, #1
   173f0:	ble	17310 <ReadDataSlabN+0x17e8>
   173f4:	ldr	r0, [sp, #76]	; 0x4c
   173f8:	add	r0, r0, #1
   173fc:	str	r0, [sp, #76]	; 0x4c
   17400:	ldr	r3, [sp, #208]	; 0xd0
   17404:	ldr	r1, [r3, #4]
   17408:	bl	517e8 <__aeabi_idivmod>
   1740c:	cmp	r1, #0
   17410:	bne	172dc <ReadDataSlabN+0x17b4>
   17414:	ldr	r3, [sp, #208]	; 0xd0
   17418:	add	sl, r3, #4
   1741c:	ldr	r3, [sp, #200]	; 0xc8
   17420:	add	r8, r3, #4
   17424:	mov	r5, #1
   17428:	str	fp, [sp, #12]
   1742c:	str	r4, [sp, #204]	; 0xcc
   17430:	ldr	r6, [sp, #28]
   17434:	b	17280 <ReadDataSlabN+0x1758>
   17438:	ldr	fp, [sp, #12]
   1743c:	ldr	r4, [sp, #204]	; 0xcc
   17440:	b	17310 <ReadDataSlabN+0x17e8>
   17444:	mov	r0, #0
   17448:	b	18ca0 <ReadDataSlabN+0x3178>
   1744c:	ldr	r3, [r4]
   17450:	sub	r3, r3, #1
   17454:	str	r3, [sp, #112]	; 0x70
   17458:	ldr	r3, [sp, #196]	; 0xc4
   1745c:	ldr	r3, [r3]
   17460:	str	r3, [sp, #32]
   17464:	ldr	r3, [sp, #208]	; 0xd0
   17468:	ldr	r3, [r3]
   1746c:	str	r3, [sp, #20]
   17470:	ldr	r3, [sp, #192]	; 0xc0
   17474:	cmp	r3, #1
   17478:	ble	174b0 <ReadDataSlabN+0x1988>
   1747c:	str	r4, [sp, #24]
   17480:	add	r9, sp, #116	; 0x74
   17484:	ldr	lr, [sp, #196]	; 0xc4
   17488:	add	fp, sp, #32
   1748c:	ldr	r3, [sp, #208]	; 0xd0
   17490:	add	r8, r3, #4
   17494:	ldr	r3, [sp, #200]	; 0xc8
   17498:	add	r6, r3, #4
   1749c:	mov	sl, lr
   174a0:	mov	r5, #2
   174a4:	mov	r7, #0
   174a8:	str	r4, [sp, #204]	; 0xcc
   174ac:	b	1926c <ReadDataSlabN+0x3744>
   174b0:	mov	r7, #0
   174b4:	b	192f4 <ReadDataSlabN+0x37cc>
   174b8:	ldr	r3, [sp, #20]
   174bc:	cmp	r3, #0
   174c0:	ble	18cd8 <ReadDataSlabN+0x31b0>
   174c4:	mov	r3, #0
   174c8:	str	r3, [sp, #24]
   174cc:	add	r8, sp, #72	; 0x48
   174d0:	add	fp, sp, #32
   174d4:	b	17610 <ReadDataSlabN+0x1ae8>
   174d8:	mov	r2, #1
   174dc:	ldr	r3, [sp, #4]
   174e0:	mul	r1, r3, r1
   174e4:	ldr	r3, [sp, #12]
   174e8:	ldr	r0, [r3]
   174ec:	bl	1714 <fseek@plt>
   174f0:	ldr	r3, [sp, #200]	; 0xc8
   174f4:	ldr	r3, [r3]
   174f8:	add	r7, r7, r3
   174fc:	b	17620 <ReadDataSlabN+0x1af8>
   17500:	sub	r5, r5, r1
   17504:	add	r3, fp, r4, lsl #2
   17508:	ldr	sl, [r3, #-4]
   1750c:	ldr	r1, [r6]
   17510:	mla	r1, r1, sl, r5
   17514:	mov	r2, #1
   17518:	ldr	r3, [sp, #4]
   1751c:	mul	r1, r3, r1
   17520:	ldr	r3, [sp, #12]
   17524:	ldr	r0, [r3]
   17528:	bl	1714 <fseek@plt>
   1752c:	ldr	r1, [r6]
   17530:	mla	r5, r1, sl, r5
   17534:	add	r7, r7, r5
   17538:	add	r4, r4, #1
   1753c:	ldr	r3, [sp, #192]	; 0xc0
   17540:	cmp	r3, r4
   17544:	beq	175f0 <ReadDataSlabN+0x1ac8>
   17548:	ldr	r0, [r8, r4, lsl #2]
   1754c:	add	r0, r0, #1
   17550:	str	r0, [r8, r4, lsl #2]
   17554:	add	r6, r6, #4
   17558:	ldr	r1, [r9, #4]!
   1755c:	bl	517e8 <__aeabi_idivmod>
   17560:	cmp	r1, #0
   17564:	bne	175c8 <ReadDataSlabN+0x1aa0>
   17568:	mov	r3, #0
   1756c:	str	r3, [r8, r4, lsl #2]
   17570:	ldr	r5, [fp, r4, lsl #2]
   17574:	mov	r1, r5
   17578:	mov	r0, r7
   1757c:	bl	517e8 <__aeabi_idivmod>
   17580:	cmp	r1, #0
   17584:	bne	17500 <ReadDataSlabN+0x19d8>
   17588:	ldr	r1, [r6]
   1758c:	cmp	r1, #0
   17590:	beq	17538 <ReadDataSlabN+0x1a10>
   17594:	add	sl, fp, r4, lsl #2
   17598:	ldr	r5, [sl, #-4]
   1759c:	mul	r1, r5, r1
   175a0:	mov	r2, #1
   175a4:	ldr	r3, [sp, #4]
   175a8:	mul	r1, r3, r1
   175ac:	ldr	r3, [sp, #12]
   175b0:	ldr	r0, [r3]
   175b4:	bl	1714 <fseek@plt>
   175b8:	ldr	r3, [r6]
   175bc:	mla	r7, r3, r5, r7
   175c0:	b	17538 <ReadDataSlabN+0x1a10>
   175c4:	ldr	r4, [sp, #28]
   175c8:	add	r3, sp, #152	; 0x98
   175cc:	add	r4, r3, r4, lsl #2
   175d0:	ldr	r1, [r4, #-40]	; 0xffffffd8
   175d4:	add	r7, r7, r1
   175d8:	mov	r2, #1
   175dc:	ldr	r3, [sp, #4]
   175e0:	mul	r1, r3, r1
   175e4:	ldr	r3, [sp, #12]
   175e8:	ldr	r0, [r3]
   175ec:	bl	1714 <fseek@plt>
   175f0:	ldr	r3, [sp, #208]	; 0xd0
   175f4:	ldr	r3, [r3]
   175f8:	ldr	r2, [sp, #24]
   175fc:	add	r3, r2, r3
   17600:	str	r3, [sp, #24]
   17604:	ldr	r2, [sp, #20]
   17608:	cmp	r3, r2
   1760c:	bge	176c4 <ReadDataSlabN+0x1b9c>
   17610:	ldr	r3, [sp, #200]	; 0xc8
   17614:	ldr	r1, [r3]
   17618:	cmp	r1, #0
   1761c:	bne	174d8 <ReadDataSlabN+0x19b0>
   17620:	ldr	r3, [sp, #208]	; 0xd0
   17624:	ldr	r3, [r3]
   17628:	ldr	r2, [sp, #8]
   1762c:	ldr	r1, [sp, #16]
   17630:	ldr	r0, [sp, #24]
   17634:	add	r1, r1, r0, lsl #2
   17638:	ldr	r4, [sp, #12]
   1763c:	mov	r0, r4
   17640:	bl	d234 <ReadUInt32Data>
   17644:	ldr	r3, [sp, #196]	; 0xc4
   17648:	ldr	r3, [r3]
   1764c:	ldr	r2, [sp, #200]	; 0xc8
   17650:	ldr	r1, [r2]
   17654:	sub	r2, r3, r1
   17658:	add	r7, r2, r7
   1765c:	ldr	r2, [sp, #208]	; 0xd0
   17660:	ldr	r2, [r2]
   17664:	sub	r3, r3, r2
   17668:	sub	r1, r3, r1
   1766c:	mov	r2, #1
   17670:	ldr	r3, [sp, #4]
   17674:	mul	r1, r3, r1
   17678:	ldr	r0, [r4]
   1767c:	bl	1714 <fseek@plt>
   17680:	ldr	r3, [sp, #192]	; 0xc0
   17684:	cmp	r3, #1
   17688:	ble	175f0 <ReadDataSlabN+0x1ac8>
   1768c:	ldr	r0, [sp, #76]	; 0x4c
   17690:	add	r0, r0, #1
   17694:	str	r0, [sp, #76]	; 0x4c
   17698:	ldr	r3, [sp, #208]	; 0xd0
   1769c:	ldr	r1, [r3, #4]
   176a0:	bl	517e8 <__aeabi_idivmod>
   176a4:	cmp	r1, #0
   176a8:	bne	175c4 <ReadDataSlabN+0x1a9c>
   176ac:	ldr	r3, [sp, #208]	; 0xd0
   176b0:	add	r9, r3, #4
   176b4:	ldr	r3, [sp, #200]	; 0xc8
   176b8:	add	r6, r3, #4
   176bc:	ldr	r4, [sp, #28]
   176c0:	b	17568 <ReadDataSlabN+0x1a40>
   176c4:	mov	r0, #0
   176c8:	b	18ca0 <ReadDataSlabN+0x3178>
   176cc:	mov	r2, #1
   176d0:	ldr	r3, [sp, #4]
   176d4:	mul	r1, r3, r1
   176d8:	ldr	r0, [fp]
   176dc:	bl	1714 <fseek@plt>
   176e0:	ldr	r3, [sp, #200]	; 0xc8
   176e4:	ldr	r3, [r3]
   176e8:	add	r7, r7, r3
   176ec:	b	17818 <ReadDataSlabN+0x1cf0>
   176f0:	sub	r4, r4, r1
   176f4:	add	r3, r6, r5, lsl #2
   176f8:	ldr	fp, [r3, #-4]
   176fc:	ldr	r1, [r8]
   17700:	mla	r1, r1, fp, r4
   17704:	mov	r2, #1
   17708:	ldr	r3, [sp, #4]
   1770c:	mul	r1, r3, r1
   17710:	ldr	r3, [sp, #12]
   17714:	ldr	r0, [r3]
   17718:	bl	1714 <fseek@plt>
   1771c:	ldr	r1, [r8]
   17720:	mla	r4, r1, fp, r4
   17724:	add	r7, r7, r4
   17728:	add	r5, r5, #1
   1772c:	ldr	r3, [sp, #192]	; 0xc0
   17730:	cmp	r3, r5
   17734:	beq	17910 <ReadDataSlabN+0x1de8>
   17738:	ldr	r0, [r9, r5, lsl #2]
   1773c:	add	r0, r0, #1
   17740:	str	r0, [r9, r5, lsl #2]
   17744:	add	r8, r8, #4
   17748:	ldr	r1, [sl, #4]!
   1774c:	bl	517e8 <__aeabi_idivmod>
   17750:	cmp	r1, #0
   17754:	bne	177bc <ReadDataSlabN+0x1c94>
   17758:	mov	r3, #0
   1775c:	str	r3, [r9, r5, lsl #2]
   17760:	ldr	r4, [r6, r5, lsl #2]
   17764:	mov	r1, r4
   17768:	mov	r0, r7
   1776c:	bl	517e8 <__aeabi_idivmod>
   17770:	cmp	r1, #0
   17774:	bne	176f0 <ReadDataSlabN+0x1bc8>
   17778:	ldr	r1, [r8]
   1777c:	cmp	r1, #0
   17780:	beq	17728 <ReadDataSlabN+0x1c00>
   17784:	add	fp, r6, r5, lsl #2
   17788:	ldr	r4, [fp, #-4]
   1778c:	mul	r1, r4, r1
   17790:	mov	r2, #1
   17794:	ldr	r3, [sp, #4]
   17798:	mul	r1, r3, r1
   1779c:	ldr	r3, [sp, #12]
   177a0:	ldr	r0, [r3]
   177a4:	bl	1714 <fseek@plt>
   177a8:	ldr	r3, [r8]
   177ac:	mla	r7, r3, r4, r7
   177b0:	b	17728 <ReadDataSlabN+0x1c00>
   177b4:	mov	r5, #1
   177b8:	b	177c4 <ReadDataSlabN+0x1c9c>
   177bc:	ldr	fp, [sp, #12]
   177c0:	ldr	r4, [sp, #204]	; 0xcc
   177c4:	add	r3, sp, #152	; 0x98
   177c8:	add	r5, r3, r5, lsl #2
   177cc:	ldr	r1, [r5, #-40]	; 0xffffffd8
   177d0:	add	r7, r7, r1
   177d4:	mov	r2, #1
   177d8:	ldr	r3, [sp, #4]
   177dc:	mul	r1, r3, r1
   177e0:	ldr	r0, [fp]
   177e4:	bl	1714 <fseek@plt>
   177e8:	ldr	r3, [sp, #208]	; 0xd0
   177ec:	ldr	r3, [r3]
   177f0:	ldr	r2, [sp, #24]
   177f4:	add	r3, r2, r3
   177f8:	str	r3, [sp, #24]
   177fc:	ldr	r2, [sp, #20]
   17800:	cmp	r3, r2
   17804:	bge	1791c <ReadDataSlabN+0x1df4>
   17808:	ldr	r3, [sp, #200]	; 0xc8
   1780c:	ldr	r1, [r3]
   17810:	cmp	r1, #0
   17814:	bne	176cc <ReadDataSlabN+0x1ba4>
   17818:	ldr	r3, [sp, #208]	; 0xd0
   1781c:	ldr	r3, [r3]
   17820:	cmp	r3, #0
   17824:	ble	17888 <ReadDataSlabN+0x1d60>
   17828:	ldr	r3, [sp, #16]
   1782c:	ldr	r2, [sp, #24]
   17830:	add	r6, r3, r2, lsl #2
   17834:	mov	r5, #0
   17838:	ldr	r8, [sp, #4]
   1783c:	ldr	sl, [sp, #208]	; 0xd0
   17840:	mov	r3, #1
   17844:	ldr	r2, [sp, #8]
   17848:	mov	r1, r6
   1784c:	mov	r0, fp
   17850:	bl	d234 <ReadUInt32Data>
   17854:	ldr	r1, [r4]
   17858:	sub	r1, r1, #1
   1785c:	mov	r2, #1
   17860:	mul	r1, r8, r1
   17864:	ldr	r0, [fp]
   17868:	bl	1714 <fseek@plt>
   1786c:	ldr	r3, [r4]
   17870:	add	r7, r7, r3
   17874:	add	r5, r5, #1
   17878:	ldr	r3, [sl]
   1787c:	add	r6, r6, #4
   17880:	cmp	r3, r5
   17884:	bgt	17840 <ReadDataSlabN+0x1d18>
   17888:	ldr	r1, [r4]
   1788c:	mul	r3, r1, r3
   17890:	ldr	r2, [sp, #196]	; 0xc4
   17894:	ldr	r1, [r2]
   17898:	sub	r1, r1, r3
   1789c:	ldr	r3, [sp, #200]	; 0xc8
   178a0:	ldr	r3, [r3]
   178a4:	sub	r1, r1, r3
   178a8:	add	r7, r7, r1
   178ac:	mov	r2, #1
   178b0:	ldr	r3, [sp, #4]
   178b4:	mul	r1, r1, r3
   178b8:	ldr	r0, [fp]
   178bc:	bl	1714 <fseek@plt>
   178c0:	ldr	r3, [sp, #192]	; 0xc0
   178c4:	cmp	r3, #1
   178c8:	ble	177e8 <ReadDataSlabN+0x1cc0>
   178cc:	ldr	r0, [sp, #76]	; 0x4c
   178d0:	add	r0, r0, #1
   178d4:	str	r0, [sp, #76]	; 0x4c
   178d8:	ldr	r3, [sp, #208]	; 0xd0
   178dc:	ldr	r1, [r3, #4]
   178e0:	bl	517e8 <__aeabi_idivmod>
   178e4:	cmp	r1, #0
   178e8:	bne	177b4 <ReadDataSlabN+0x1c8c>
   178ec:	ldr	r3, [sp, #208]	; 0xd0
   178f0:	add	sl, r3, #4
   178f4:	ldr	r3, [sp, #200]	; 0xc8
   178f8:	add	r8, r3, #4
   178fc:	mov	r5, #1
   17900:	str	fp, [sp, #12]
   17904:	str	r4, [sp, #204]	; 0xcc
   17908:	ldr	r6, [sp, #28]
   1790c:	b	17758 <ReadDataSlabN+0x1c30>
   17910:	ldr	fp, [sp, #12]
   17914:	ldr	r4, [sp, #204]	; 0xcc
   17918:	b	177e8 <ReadDataSlabN+0x1cc0>
   1791c:	mov	r0, #0
   17920:	b	18ca0 <ReadDataSlabN+0x3178>
   17924:	ldr	r3, [r4]
   17928:	sub	r3, r3, #1
   1792c:	str	r3, [sp, #112]	; 0x70
   17930:	ldr	r3, [sp, #196]	; 0xc4
   17934:	ldr	r3, [r3]
   17938:	str	r3, [sp, #32]
   1793c:	ldr	r3, [sp, #208]	; 0xd0
   17940:	ldr	r3, [r3]
   17944:	str	r3, [sp, #20]
   17948:	ldr	r3, [sp, #192]	; 0xc0
   1794c:	cmp	r3, #1
   17950:	ble	17988 <ReadDataSlabN+0x1e60>
   17954:	str	r4, [sp, #24]
   17958:	add	r9, sp, #116	; 0x74
   1795c:	ldr	lr, [sp, #196]	; 0xc4
   17960:	add	fp, sp, #32
   17964:	ldr	r3, [sp, #208]	; 0xd0
   17968:	add	r8, r3, #4
   1796c:	ldr	r3, [sp, #200]	; 0xc8
   17970:	add	r6, r3, #4
   17974:	mov	sl, lr
   17978:	mov	r5, #2
   1797c:	mov	r7, #0
   17980:	str	r4, [sp, #204]	; 0xcc
   17984:	b	19378 <ReadDataSlabN+0x3850>
   17988:	mov	r7, #0
   1798c:	b	19400 <ReadDataSlabN+0x38d8>
   17990:	ldr	r3, [sp, #20]
   17994:	cmp	r3, #0
   17998:	ble	18ce0 <ReadDataSlabN+0x31b8>
   1799c:	mov	r3, #0
   179a0:	str	r3, [sp, #24]
   179a4:	add	r8, sp, #72	; 0x48
   179a8:	add	fp, sp, #32
   179ac:	b	17ae8 <ReadDataSlabN+0x1fc0>
   179b0:	mov	r2, #1
   179b4:	ldr	r3, [sp, #4]
   179b8:	mul	r1, r3, r1
   179bc:	ldr	r3, [sp, #12]
   179c0:	ldr	r0, [r3]
   179c4:	bl	1714 <fseek@plt>
   179c8:	ldr	r3, [sp, #200]	; 0xc8
   179cc:	ldr	r3, [r3]
   179d0:	add	r7, r7, r3
   179d4:	b	17af8 <ReadDataSlabN+0x1fd0>
   179d8:	sub	r5, r5, r1
   179dc:	add	r3, fp, r4, lsl #2
   179e0:	ldr	sl, [r3, #-4]
   179e4:	ldr	r1, [r6]
   179e8:	mla	r1, r1, sl, r5
   179ec:	mov	r2, #1
   179f0:	ldr	r3, [sp, #4]
   179f4:	mul	r1, r3, r1
   179f8:	ldr	r3, [sp, #12]
   179fc:	ldr	r0, [r3]
   17a00:	bl	1714 <fseek@plt>
   17a04:	ldr	r1, [r6]
   17a08:	mla	r5, r1, sl, r5
   17a0c:	add	r7, r7, r5
   17a10:	add	r4, r4, #1
   17a14:	ldr	r3, [sp, #192]	; 0xc0
   17a18:	cmp	r3, r4
   17a1c:	beq	17ac8 <ReadDataSlabN+0x1fa0>
   17a20:	ldr	r0, [r8, r4, lsl #2]
   17a24:	add	r0, r0, #1
   17a28:	str	r0, [r8, r4, lsl #2]
   17a2c:	add	r6, r6, #4
   17a30:	ldr	r1, [r9, #4]!
   17a34:	bl	517e8 <__aeabi_idivmod>
   17a38:	cmp	r1, #0
   17a3c:	bne	17aa0 <ReadDataSlabN+0x1f78>
   17a40:	mov	r3, #0
   17a44:	str	r3, [r8, r4, lsl #2]
   17a48:	ldr	r5, [fp, r4, lsl #2]
   17a4c:	mov	r1, r5
   17a50:	mov	r0, r7
   17a54:	bl	517e8 <__aeabi_idivmod>
   17a58:	cmp	r1, #0
   17a5c:	bne	179d8 <ReadDataSlabN+0x1eb0>
   17a60:	ldr	r1, [r6]
   17a64:	cmp	r1, #0
   17a68:	beq	17a10 <ReadDataSlabN+0x1ee8>
   17a6c:	add	sl, fp, r4, lsl #2
   17a70:	ldr	r5, [sl, #-4]
   17a74:	mul	r1, r5, r1
   17a78:	mov	r2, #1
   17a7c:	ldr	r3, [sp, #4]
   17a80:	mul	r1, r3, r1
   17a84:	ldr	r3, [sp, #12]
   17a88:	ldr	r0, [r3]
   17a8c:	bl	1714 <fseek@plt>
   17a90:	ldr	r3, [r6]
   17a94:	mla	r7, r3, r5, r7
   17a98:	b	17a10 <ReadDataSlabN+0x1ee8>
   17a9c:	ldr	r4, [sp, #28]
   17aa0:	add	r3, sp, #152	; 0x98
   17aa4:	add	r4, r3, r4, lsl #2
   17aa8:	ldr	r1, [r4, #-40]	; 0xffffffd8
   17aac:	add	r7, r7, r1
   17ab0:	mov	r2, #1
   17ab4:	ldr	r3, [sp, #4]
   17ab8:	mul	r1, r3, r1
   17abc:	ldr	r3, [sp, #12]
   17ac0:	ldr	r0, [r3]
   17ac4:	bl	1714 <fseek@plt>
   17ac8:	ldr	r3, [sp, #208]	; 0xd0
   17acc:	ldr	r3, [r3]
   17ad0:	ldr	r2, [sp, #24]
   17ad4:	add	r3, r2, r3
   17ad8:	str	r3, [sp, #24]
   17adc:	ldr	r2, [sp, #20]
   17ae0:	cmp	r3, r2
   17ae4:	bge	17b9c <ReadDataSlabN+0x2074>
   17ae8:	ldr	r3, [sp, #200]	; 0xc8
   17aec:	ldr	r1, [r3]
   17af0:	cmp	r1, #0
   17af4:	bne	179b0 <ReadDataSlabN+0x1e88>
   17af8:	ldr	r3, [sp, #208]	; 0xd0
   17afc:	ldr	r3, [r3]
   17b00:	ldr	r2, [sp, #8]
   17b04:	ldr	r1, [sp, #16]
   17b08:	ldr	r0, [sp, #24]
   17b0c:	add	r1, r1, r0, lsl #1
   17b10:	ldr	r4, [sp, #12]
   17b14:	mov	r0, r4
   17b18:	bl	eda4 <ReadInt16Data>
   17b1c:	ldr	r3, [sp, #196]	; 0xc4
   17b20:	ldr	r3, [r3]
   17b24:	ldr	r2, [sp, #200]	; 0xc8
   17b28:	ldr	r1, [r2]
   17b2c:	sub	r2, r3, r1
   17b30:	add	r7, r2, r7
   17b34:	ldr	r2, [sp, #208]	; 0xd0
   17b38:	ldr	r2, [r2]
   17b3c:	sub	r3, r3, r2
   17b40:	sub	r1, r3, r1
   17b44:	mov	r2, #1
   17b48:	ldr	r3, [sp, #4]
   17b4c:	mul	r1, r3, r1
   17b50:	ldr	r0, [r4]
   17b54:	bl	1714 <fseek@plt>
   17b58:	ldr	r3, [sp, #192]	; 0xc0
   17b5c:	cmp	r3, #1
   17b60:	ble	17ac8 <ReadDataSlabN+0x1fa0>
   17b64:	ldr	r0, [sp, #76]	; 0x4c
   17b68:	add	r0, r0, #1
   17b6c:	str	r0, [sp, #76]	; 0x4c
   17b70:	ldr	r3, [sp, #208]	; 0xd0
   17b74:	ldr	r1, [r3, #4]
   17b78:	bl	517e8 <__aeabi_idivmod>
   17b7c:	cmp	r1, #0
   17b80:	bne	17a9c <ReadDataSlabN+0x1f74>
   17b84:	ldr	r3, [sp, #208]	; 0xd0
   17b88:	add	r9, r3, #4
   17b8c:	ldr	r3, [sp, #200]	; 0xc8
   17b90:	add	r6, r3, #4
   17b94:	ldr	r4, [sp, #28]
   17b98:	b	17a40 <ReadDataSlabN+0x1f18>
   17b9c:	mov	r0, #0
   17ba0:	b	18ca0 <ReadDataSlabN+0x3178>
   17ba4:	mov	r2, #1
   17ba8:	ldr	r3, [sp, #4]
   17bac:	mul	r1, r3, r1
   17bb0:	ldr	r0, [fp]
   17bb4:	bl	1714 <fseek@plt>
   17bb8:	ldr	r3, [sp, #200]	; 0xc8
   17bbc:	ldr	r3, [r3]
   17bc0:	add	r7, r7, r3
   17bc4:	b	17cf0 <ReadDataSlabN+0x21c8>
   17bc8:	sub	r4, r4, r1
   17bcc:	add	r3, r6, r5, lsl #2
   17bd0:	ldr	fp, [r3, #-4]
   17bd4:	ldr	r1, [r8]
   17bd8:	mla	r1, r1, fp, r4
   17bdc:	mov	r2, #1
   17be0:	ldr	r3, [sp, #4]
   17be4:	mul	r1, r3, r1
   17be8:	ldr	r3, [sp, #12]
   17bec:	ldr	r0, [r3]
   17bf0:	bl	1714 <fseek@plt>
   17bf4:	ldr	r1, [r8]
   17bf8:	mla	r4, r1, fp, r4
   17bfc:	add	r7, r7, r4
   17c00:	add	r5, r5, #1
   17c04:	ldr	r3, [sp, #192]	; 0xc0
   17c08:	cmp	r3, r5
   17c0c:	beq	17de8 <ReadDataSlabN+0x22c0>
   17c10:	ldr	r0, [r9, r5, lsl #2]
   17c14:	add	r0, r0, #1
   17c18:	str	r0, [r9, r5, lsl #2]
   17c1c:	add	r8, r8, #4
   17c20:	ldr	r1, [sl, #4]!
   17c24:	bl	517e8 <__aeabi_idivmod>
   17c28:	cmp	r1, #0
   17c2c:	bne	17c94 <ReadDataSlabN+0x216c>
   17c30:	mov	r3, #0
   17c34:	str	r3, [r9, r5, lsl #2]
   17c38:	ldr	r4, [r6, r5, lsl #2]
   17c3c:	mov	r1, r4
   17c40:	mov	r0, r7
   17c44:	bl	517e8 <__aeabi_idivmod>
   17c48:	cmp	r1, #0
   17c4c:	bne	17bc8 <ReadDataSlabN+0x20a0>
   17c50:	ldr	r1, [r8]
   17c54:	cmp	r1, #0
   17c58:	beq	17c00 <ReadDataSlabN+0x20d8>
   17c5c:	add	fp, r6, r5, lsl #2
   17c60:	ldr	r4, [fp, #-4]
   17c64:	mul	r1, r4, r1
   17c68:	mov	r2, #1
   17c6c:	ldr	r3, [sp, #4]
   17c70:	mul	r1, r3, r1
   17c74:	ldr	r3, [sp, #12]
   17c78:	ldr	r0, [r3]
   17c7c:	bl	1714 <fseek@plt>
   17c80:	ldr	r3, [r8]
   17c84:	mla	r7, r3, r4, r7
   17c88:	b	17c00 <ReadDataSlabN+0x20d8>
   17c8c:	mov	r5, #1
   17c90:	b	17c9c <ReadDataSlabN+0x2174>
   17c94:	ldr	fp, [sp, #12]
   17c98:	ldr	r4, [sp, #204]	; 0xcc
   17c9c:	add	r3, sp, #152	; 0x98
   17ca0:	add	r5, r3, r5, lsl #2
   17ca4:	ldr	r1, [r5, #-40]	; 0xffffffd8
   17ca8:	add	r7, r7, r1
   17cac:	mov	r2, #1
   17cb0:	ldr	r3, [sp, #4]
   17cb4:	mul	r1, r3, r1
   17cb8:	ldr	r0, [fp]
   17cbc:	bl	1714 <fseek@plt>
   17cc0:	ldr	r3, [sp, #208]	; 0xd0
   17cc4:	ldr	r3, [r3]
   17cc8:	ldr	r2, [sp, #24]
   17ccc:	add	r3, r2, r3
   17cd0:	str	r3, [sp, #24]
   17cd4:	ldr	r2, [sp, #20]
   17cd8:	cmp	r3, r2
   17cdc:	bge	17df4 <ReadDataSlabN+0x22cc>
   17ce0:	ldr	r3, [sp, #200]	; 0xc8
   17ce4:	ldr	r1, [r3]
   17ce8:	cmp	r1, #0
   17cec:	bne	17ba4 <ReadDataSlabN+0x207c>
   17cf0:	ldr	r3, [sp, #208]	; 0xd0
   17cf4:	ldr	r3, [r3]
   17cf8:	cmp	r3, #0
   17cfc:	ble	17d60 <ReadDataSlabN+0x2238>
   17d00:	ldr	r3, [sp, #16]
   17d04:	ldr	r2, [sp, #24]
   17d08:	add	r6, r3, r2, lsl #1
   17d0c:	mov	r5, #0
   17d10:	ldr	r8, [sp, #4]
   17d14:	ldr	sl, [sp, #208]	; 0xd0
   17d18:	mov	r3, #1
   17d1c:	ldr	r2, [sp, #8]
   17d20:	mov	r1, r6
   17d24:	mov	r0, fp
   17d28:	bl	eda4 <ReadInt16Data>
   17d2c:	ldr	r1, [r4]
   17d30:	sub	r1, r1, #1
   17d34:	mov	r2, #1
   17d38:	mul	r1, r8, r1
   17d3c:	ldr	r0, [fp]
   17d40:	bl	1714 <fseek@plt>
   17d44:	ldr	r3, [r4]
   17d48:	add	r7, r7, r3
   17d4c:	add	r5, r5, #1
   17d50:	ldr	r3, [sl]
   17d54:	add	r6, r6, #2
   17d58:	cmp	r3, r5
   17d5c:	bgt	17d18 <ReadDataSlabN+0x21f0>
   17d60:	ldr	r1, [r4]
   17d64:	mul	r3, r1, r3
   17d68:	ldr	r2, [sp, #196]	; 0xc4
   17d6c:	ldr	r1, [r2]
   17d70:	sub	r1, r1, r3
   17d74:	ldr	r3, [sp, #200]	; 0xc8
   17d78:	ldr	r3, [r3]
   17d7c:	sub	r1, r1, r3
   17d80:	add	r7, r7, r1
   17d84:	mov	r2, #1
   17d88:	ldr	r3, [sp, #4]
   17d8c:	mul	r1, r1, r3
   17d90:	ldr	r0, [fp]
   17d94:	bl	1714 <fseek@plt>
   17d98:	ldr	r3, [sp, #192]	; 0xc0
   17d9c:	cmp	r3, #1
   17da0:	ble	17cc0 <ReadDataSlabN+0x2198>
   17da4:	ldr	r0, [sp, #76]	; 0x4c
   17da8:	add	r0, r0, #1
   17dac:	str	r0, [sp, #76]	; 0x4c
   17db0:	ldr	r3, [sp, #208]	; 0xd0
   17db4:	ldr	r1, [r3, #4]
   17db8:	bl	517e8 <__aeabi_idivmod>
   17dbc:	cmp	r1, #0
   17dc0:	bne	17c8c <ReadDataSlabN+0x2164>
   17dc4:	ldr	r3, [sp, #208]	; 0xd0
   17dc8:	add	sl, r3, #4
   17dcc:	ldr	r3, [sp, #200]	; 0xc8
   17dd0:	add	r8, r3, #4
   17dd4:	mov	r5, #1
   17dd8:	str	fp, [sp, #12]
   17ddc:	str	r4, [sp, #204]	; 0xcc
   17de0:	ldr	r6, [sp, #28]
   17de4:	b	17c30 <ReadDataSlabN+0x2108>
   17de8:	ldr	fp, [sp, #12]
   17dec:	ldr	r4, [sp, #204]	; 0xcc
   17df0:	b	17cc0 <ReadDataSlabN+0x2198>
   17df4:	mov	r0, #0
   17df8:	b	18ca0 <ReadDataSlabN+0x3178>
   17dfc:	ldr	r3, [r4]
   17e00:	sub	r3, r3, #1
   17e04:	str	r3, [sp, #112]	; 0x70
   17e08:	ldr	r3, [sp, #196]	; 0xc4
   17e0c:	ldr	r3, [r3]
   17e10:	str	r3, [sp, #32]
   17e14:	ldr	r3, [sp, #208]	; 0xd0
   17e18:	ldr	r3, [r3]
   17e1c:	str	r3, [sp, #20]
   17e20:	ldr	r3, [sp, #192]	; 0xc0
   17e24:	cmp	r3, #1
   17e28:	ble	17e60 <ReadDataSlabN+0x2338>
   17e2c:	str	r4, [sp, #24]
   17e30:	add	r9, sp, #116	; 0x74
   17e34:	ldr	lr, [sp, #196]	; 0xc4
   17e38:	add	fp, sp, #32
   17e3c:	ldr	r3, [sp, #208]	; 0xd0
   17e40:	add	r8, r3, #4
   17e44:	ldr	r3, [sp, #200]	; 0xc8
   17e48:	add	r6, r3, #4
   17e4c:	mov	sl, lr
   17e50:	mov	r5, #2
   17e54:	mov	r7, #0
   17e58:	str	r4, [sp, #204]	; 0xcc
   17e5c:	b	19484 <ReadDataSlabN+0x395c>
   17e60:	mov	r7, #0
   17e64:	b	1950c <ReadDataSlabN+0x39e4>
   17e68:	ldr	r3, [sp, #20]
   17e6c:	cmp	r3, #0
   17e70:	ble	18ce8 <ReadDataSlabN+0x31c0>
   17e74:	mov	r3, #0
   17e78:	str	r3, [sp, #24]
   17e7c:	add	r8, sp, #72	; 0x48
   17e80:	add	fp, sp, #32
   17e84:	b	17fc0 <ReadDataSlabN+0x2498>
   17e88:	mov	r2, #1
   17e8c:	ldr	r3, [sp, #4]
   17e90:	mul	r1, r3, r1
   17e94:	ldr	r3, [sp, #12]
   17e98:	ldr	r0, [r3]
   17e9c:	bl	1714 <fseek@plt>
   17ea0:	ldr	r3, [sp, #200]	; 0xc8
   17ea4:	ldr	r3, [r3]
   17ea8:	add	r7, r7, r3
   17eac:	b	17fd0 <ReadDataSlabN+0x24a8>
   17eb0:	sub	r5, r5, r1
   17eb4:	add	r3, fp, r4, lsl #2
   17eb8:	ldr	sl, [r3, #-4]
   17ebc:	ldr	r1, [r6]
   17ec0:	mla	r1, r1, sl, r5
   17ec4:	mov	r2, #1
   17ec8:	ldr	r3, [sp, #4]
   17ecc:	mul	r1, r3, r1
   17ed0:	ldr	r3, [sp, #12]
   17ed4:	ldr	r0, [r3]
   17ed8:	bl	1714 <fseek@plt>
   17edc:	ldr	r1, [r6]
   17ee0:	mla	r5, r1, sl, r5
   17ee4:	add	r7, r7, r5
   17ee8:	add	r4, r4, #1
   17eec:	ldr	r3, [sp, #192]	; 0xc0
   17ef0:	cmp	r3, r4
   17ef4:	beq	17fa0 <ReadDataSlabN+0x2478>
   17ef8:	ldr	r0, [r8, r4, lsl #2]
   17efc:	add	r0, r0, #1
   17f00:	str	r0, [r8, r4, lsl #2]
   17f04:	add	r6, r6, #4
   17f08:	ldr	r1, [r9, #4]!
   17f0c:	bl	517e8 <__aeabi_idivmod>
   17f10:	cmp	r1, #0
   17f14:	bne	17f78 <ReadDataSlabN+0x2450>
   17f18:	mov	r3, #0
   17f1c:	str	r3, [r8, r4, lsl #2]
   17f20:	ldr	r5, [fp, r4, lsl #2]
   17f24:	mov	r1, r5
   17f28:	mov	r0, r7
   17f2c:	bl	517e8 <__aeabi_idivmod>
   17f30:	cmp	r1, #0
   17f34:	bne	17eb0 <ReadDataSlabN+0x2388>
   17f38:	ldr	r1, [r6]
   17f3c:	cmp	r1, #0
   17f40:	beq	17ee8 <ReadDataSlabN+0x23c0>
   17f44:	add	sl, fp, r4, lsl #2
   17f48:	ldr	r5, [sl, #-4]
   17f4c:	mul	r1, r5, r1
   17f50:	mov	r2, #1
   17f54:	ldr	r3, [sp, #4]
   17f58:	mul	r1, r3, r1
   17f5c:	ldr	r3, [sp, #12]
   17f60:	ldr	r0, [r3]
   17f64:	bl	1714 <fseek@plt>
   17f68:	ldr	r3, [r6]
   17f6c:	mla	r7, r3, r5, r7
   17f70:	b	17ee8 <ReadDataSlabN+0x23c0>
   17f74:	ldr	r4, [sp, #28]
   17f78:	add	r3, sp, #152	; 0x98
   17f7c:	add	r4, r3, r4, lsl #2
   17f80:	ldr	r1, [r4, #-40]	; 0xffffffd8
   17f84:	add	r7, r7, r1
   17f88:	mov	r2, #1
   17f8c:	ldr	r3, [sp, #4]
   17f90:	mul	r1, r3, r1
   17f94:	ldr	r3, [sp, #12]
   17f98:	ldr	r0, [r3]
   17f9c:	bl	1714 <fseek@plt>
   17fa0:	ldr	r3, [sp, #208]	; 0xd0
   17fa4:	ldr	r3, [r3]
   17fa8:	ldr	r2, [sp, #24]
   17fac:	add	r3, r2, r3
   17fb0:	str	r3, [sp, #24]
   17fb4:	ldr	r2, [sp, #20]
   17fb8:	cmp	r3, r2
   17fbc:	bge	18074 <ReadDataSlabN+0x254c>
   17fc0:	ldr	r3, [sp, #200]	; 0xc8
   17fc4:	ldr	r1, [r3]
   17fc8:	cmp	r1, #0
   17fcc:	bne	17e88 <ReadDataSlabN+0x2360>
   17fd0:	ldr	r3, [sp, #208]	; 0xd0
   17fd4:	ldr	r3, [r3]
   17fd8:	ldr	r2, [sp, #8]
   17fdc:	ldr	r1, [sp, #16]
   17fe0:	ldr	r0, [sp, #24]
   17fe4:	add	r1, r1, r0, lsl #1
   17fe8:	ldr	r4, [sp, #12]
   17fec:	mov	r0, r4
   17ff0:	bl	108fc <ReadUInt16Data>
   17ff4:	ldr	r3, [sp, #196]	; 0xc4
   17ff8:	ldr	r3, [r3]
   17ffc:	ldr	r2, [sp, #200]	; 0xc8
   18000:	ldr	r1, [r2]
   18004:	sub	r2, r3, r1
   18008:	add	r7, r2, r7
   1800c:	ldr	r2, [sp, #208]	; 0xd0
   18010:	ldr	r2, [r2]
   18014:	sub	r3, r3, r2
   18018:	sub	r1, r3, r1
   1801c:	mov	r2, #1
   18020:	ldr	r3, [sp, #4]
   18024:	mul	r1, r3, r1
   18028:	ldr	r0, [r4]
   1802c:	bl	1714 <fseek@plt>
   18030:	ldr	r3, [sp, #192]	; 0xc0
   18034:	cmp	r3, #1
   18038:	ble	17fa0 <ReadDataSlabN+0x2478>
   1803c:	ldr	r0, [sp, #76]	; 0x4c
   18040:	add	r0, r0, #1
   18044:	str	r0, [sp, #76]	; 0x4c
   18048:	ldr	r3, [sp, #208]	; 0xd0
   1804c:	ldr	r1, [r3, #4]
   18050:	bl	517e8 <__aeabi_idivmod>
   18054:	cmp	r1, #0
   18058:	bne	17f74 <ReadDataSlabN+0x244c>
   1805c:	ldr	r3, [sp, #208]	; 0xd0
   18060:	add	r9, r3, #4
   18064:	ldr	r3, [sp, #200]	; 0xc8
   18068:	add	r6, r3, #4
   1806c:	ldr	r4, [sp, #28]
   18070:	b	17f18 <ReadDataSlabN+0x23f0>
   18074:	mov	r0, #0
   18078:	b	18ca0 <ReadDataSlabN+0x3178>
   1807c:	mov	r2, #1
   18080:	ldr	r3, [sp, #4]
   18084:	mul	r1, r3, r1
   18088:	ldr	r0, [fp]
   1808c:	bl	1714 <fseek@plt>
   18090:	ldr	r3, [sp, #200]	; 0xc8
   18094:	ldr	r3, [r3]
   18098:	add	r7, r7, r3
   1809c:	b	181c8 <ReadDataSlabN+0x26a0>
   180a0:	sub	r4, r4, r1
   180a4:	add	r3, r6, r5, lsl #2
   180a8:	ldr	fp, [r3, #-4]
   180ac:	ldr	r1, [r8]
   180b0:	mla	r1, r1, fp, r4
   180b4:	mov	r2, #1
   180b8:	ldr	r3, [sp, #4]
   180bc:	mul	r1, r3, r1
   180c0:	ldr	r3, [sp, #12]
   180c4:	ldr	r0, [r3]
   180c8:	bl	1714 <fseek@plt>
   180cc:	ldr	r1, [r8]
   180d0:	mla	r4, r1, fp, r4
   180d4:	add	r7, r7, r4
   180d8:	add	r5, r5, #1
   180dc:	ldr	r3, [sp, #192]	; 0xc0
   180e0:	cmp	r3, r5
   180e4:	beq	182c0 <ReadDataSlabN+0x2798>
   180e8:	ldr	r0, [r9, r5, lsl #2]
   180ec:	add	r0, r0, #1
   180f0:	str	r0, [r9, r5, lsl #2]
   180f4:	add	r8, r8, #4
   180f8:	ldr	r1, [sl, #4]!
   180fc:	bl	517e8 <__aeabi_idivmod>
   18100:	cmp	r1, #0
   18104:	bne	1816c <ReadDataSlabN+0x2644>
   18108:	mov	r3, #0
   1810c:	str	r3, [r9, r5, lsl #2]
   18110:	ldr	r4, [r6, r5, lsl #2]
   18114:	mov	r1, r4
   18118:	mov	r0, r7
   1811c:	bl	517e8 <__aeabi_idivmod>
   18120:	cmp	r1, #0
   18124:	bne	180a0 <ReadDataSlabN+0x2578>
   18128:	ldr	r1, [r8]
   1812c:	cmp	r1, #0
   18130:	beq	180d8 <ReadDataSlabN+0x25b0>
   18134:	add	fp, r6, r5, lsl #2
   18138:	ldr	r4, [fp, #-4]
   1813c:	mul	r1, r4, r1
   18140:	mov	r2, #1
   18144:	ldr	r3, [sp, #4]
   18148:	mul	r1, r3, r1
   1814c:	ldr	r3, [sp, #12]
   18150:	ldr	r0, [r3]
   18154:	bl	1714 <fseek@plt>
   18158:	ldr	r3, [r8]
   1815c:	mla	r7, r3, r4, r7
   18160:	b	180d8 <ReadDataSlabN+0x25b0>
   18164:	mov	r5, #1
   18168:	b	18174 <ReadDataSlabN+0x264c>
   1816c:	ldr	fp, [sp, #12]
   18170:	ldr	r4, [sp, #204]	; 0xcc
   18174:	add	r3, sp, #152	; 0x98
   18178:	add	r5, r3, r5, lsl #2
   1817c:	ldr	r1, [r5, #-40]	; 0xffffffd8
   18180:	add	r7, r7, r1
   18184:	mov	r2, #1
   18188:	ldr	r3, [sp, #4]
   1818c:	mul	r1, r3, r1
   18190:	ldr	r0, [fp]
   18194:	bl	1714 <fseek@plt>
   18198:	ldr	r3, [sp, #208]	; 0xd0
   1819c:	ldr	r3, [r3]
   181a0:	ldr	r2, [sp, #24]
   181a4:	add	r3, r2, r3
   181a8:	str	r3, [sp, #24]
   181ac:	ldr	r2, [sp, #20]
   181b0:	cmp	r3, r2
   181b4:	bge	182cc <ReadDataSlabN+0x27a4>
   181b8:	ldr	r3, [sp, #200]	; 0xc8
   181bc:	ldr	r1, [r3]
   181c0:	cmp	r1, #0
   181c4:	bne	1807c <ReadDataSlabN+0x2554>
   181c8:	ldr	r3, [sp, #208]	; 0xd0
   181cc:	ldr	r3, [r3]
   181d0:	cmp	r3, #0
   181d4:	ble	18238 <ReadDataSlabN+0x2710>
   181d8:	ldr	r3, [sp, #16]
   181dc:	ldr	r2, [sp, #24]
   181e0:	add	r6, r3, r2, lsl #1
   181e4:	mov	r5, #0
   181e8:	ldr	r8, [sp, #4]
   181ec:	ldr	sl, [sp, #208]	; 0xd0
   181f0:	mov	r3, #1
   181f4:	ldr	r2, [sp, #8]
   181f8:	mov	r1, r6
   181fc:	mov	r0, fp
   18200:	bl	108fc <ReadUInt16Data>
   18204:	ldr	r1, [r4]
   18208:	sub	r1, r1, #1
   1820c:	mov	r2, #1
   18210:	mul	r1, r8, r1
   18214:	ldr	r0, [fp]
   18218:	bl	1714 <fseek@plt>
   1821c:	ldr	r3, [r4]
   18220:	add	r7, r7, r3
   18224:	add	r5, r5, #1
   18228:	ldr	r3, [sl]
   1822c:	add	r6, r6, #2
   18230:	cmp	r3, r5
   18234:	bgt	181f0 <ReadDataSlabN+0x26c8>
   18238:	ldr	r1, [r4]
   1823c:	mul	r3, r1, r3
   18240:	ldr	r2, [sp, #196]	; 0xc4
   18244:	ldr	r1, [r2]
   18248:	sub	r1, r1, r3
   1824c:	ldr	r3, [sp, #200]	; 0xc8
   18250:	ldr	r3, [r3]
   18254:	sub	r1, r1, r3
   18258:	add	r7, r7, r1
   1825c:	mov	r2, #1
   18260:	ldr	r3, [sp, #4]
   18264:	mul	r1, r1, r3
   18268:	ldr	r0, [fp]
   1826c:	bl	1714 <fseek@plt>
   18270:	ldr	r3, [sp, #192]	; 0xc0
   18274:	cmp	r3, #1
   18278:	ble	18198 <ReadDataSlabN+0x2670>
   1827c:	ldr	r0, [sp, #76]	; 0x4c
   18280:	add	r0, r0, #1
   18284:	str	r0, [sp, #76]	; 0x4c
   18288:	ldr	r3, [sp, #208]	; 0xd0
   1828c:	ldr	r1, [r3, #4]
   18290:	bl	517e8 <__aeabi_idivmod>
   18294:	cmp	r1, #0
   18298:	bne	18164 <ReadDataSlabN+0x263c>
   1829c:	ldr	r3, [sp, #208]	; 0xd0
   182a0:	add	sl, r3, #4
   182a4:	ldr	r3, [sp, #200]	; 0xc8
   182a8:	add	r8, r3, #4
   182ac:	mov	r5, #1
   182b0:	str	fp, [sp, #12]
   182b4:	str	r4, [sp, #204]	; 0xcc
   182b8:	ldr	r6, [sp, #28]
   182bc:	b	18108 <ReadDataSlabN+0x25e0>
   182c0:	ldr	fp, [sp, #12]
   182c4:	ldr	r4, [sp, #204]	; 0xcc
   182c8:	b	18198 <ReadDataSlabN+0x2670>
   182cc:	mov	r0, #0
   182d0:	b	18ca0 <ReadDataSlabN+0x3178>
   182d4:	ldr	r3, [r4]
   182d8:	sub	r3, r3, #1
   182dc:	str	r3, [sp, #112]	; 0x70
   182e0:	ldr	r3, [sp, #196]	; 0xc4
   182e4:	ldr	r3, [r3]
   182e8:	str	r3, [sp, #32]
   182ec:	ldr	r3, [sp, #208]	; 0xd0
   182f0:	ldr	r3, [r3]
   182f4:	str	r3, [sp, #20]
   182f8:	ldr	r3, [sp, #192]	; 0xc0
   182fc:	cmp	r3, #1
   18300:	ble	18338 <ReadDataSlabN+0x2810>
   18304:	str	r4, [sp, #24]
   18308:	add	r9, sp, #116	; 0x74
   1830c:	ldr	lr, [sp, #196]	; 0xc4
   18310:	add	fp, sp, #32
   18314:	ldr	r3, [sp, #208]	; 0xd0
   18318:	add	r8, r3, #4
   1831c:	ldr	r3, [sp, #200]	; 0xc8
   18320:	add	r6, r3, #4
   18324:	mov	sl, lr
   18328:	mov	r5, #2
   1832c:	mov	r7, #0
   18330:	str	r4, [sp, #204]	; 0xcc
   18334:	b	19590 <ReadDataSlabN+0x3a68>
   18338:	mov	r7, #0
   1833c:	b	19618 <ReadDataSlabN+0x3af0>
   18340:	ldr	r3, [sp, #20]
   18344:	cmp	r3, #0
   18348:	ble	18cf0 <ReadDataSlabN+0x31c8>
   1834c:	mov	r3, #0
   18350:	str	r3, [sp, #24]
   18354:	add	r8, sp, #72	; 0x48
   18358:	add	fp, sp, #32
   1835c:	b	18498 <ReadDataSlabN+0x2970>
   18360:	mov	r2, #1
   18364:	ldr	r3, [sp, #4]
   18368:	mul	r1, r3, r1
   1836c:	ldr	r3, [sp, #12]
   18370:	ldr	r0, [r3]
   18374:	bl	1714 <fseek@plt>
   18378:	ldr	r3, [sp, #200]	; 0xc8
   1837c:	ldr	r3, [r3]
   18380:	add	r7, r7, r3
   18384:	b	184a8 <ReadDataSlabN+0x2980>
   18388:	sub	r5, r5, r1
   1838c:	add	r3, fp, r4, lsl #2
   18390:	ldr	sl, [r3, #-4]
   18394:	ldr	r1, [r6]
   18398:	mla	r1, r1, sl, r5
   1839c:	mov	r2, #1
   183a0:	ldr	r3, [sp, #4]
   183a4:	mul	r1, r3, r1
   183a8:	ldr	r3, [sp, #12]
   183ac:	ldr	r0, [r3]
   183b0:	bl	1714 <fseek@plt>
   183b4:	ldr	r1, [r6]
   183b8:	mla	r5, r1, sl, r5
   183bc:	add	r7, r7, r5
   183c0:	add	r4, r4, #1
   183c4:	ldr	r3, [sp, #192]	; 0xc0
   183c8:	cmp	r3, r4
   183cc:	beq	18478 <ReadDataSlabN+0x2950>
   183d0:	ldr	r0, [r8, r4, lsl #2]
   183d4:	add	r0, r0, #1
   183d8:	str	r0, [r8, r4, lsl #2]
   183dc:	add	r6, r6, #4
   183e0:	ldr	r1, [r9, #4]!
   183e4:	bl	517e8 <__aeabi_idivmod>
   183e8:	cmp	r1, #0
   183ec:	bne	18450 <ReadDataSlabN+0x2928>
   183f0:	mov	r3, #0
   183f4:	str	r3, [r8, r4, lsl #2]
   183f8:	ldr	r5, [fp, r4, lsl #2]
   183fc:	mov	r1, r5
   18400:	mov	r0, r7
   18404:	bl	517e8 <__aeabi_idivmod>
   18408:	cmp	r1, #0
   1840c:	bne	18388 <ReadDataSlabN+0x2860>
   18410:	ldr	r1, [r6]
   18414:	cmp	r1, #0
   18418:	beq	183c0 <ReadDataSlabN+0x2898>
   1841c:	add	sl, fp, r4, lsl #2
   18420:	ldr	r5, [sl, #-4]
   18424:	mul	r1, r5, r1
   18428:	mov	r2, #1
   1842c:	ldr	r3, [sp, #4]
   18430:	mul	r1, r3, r1
   18434:	ldr	r3, [sp, #12]
   18438:	ldr	r0, [r3]
   1843c:	bl	1714 <fseek@plt>
   18440:	ldr	r3, [r6]
   18444:	mla	r7, r3, r5, r7
   18448:	b	183c0 <ReadDataSlabN+0x2898>
   1844c:	ldr	r4, [sp, #28]
   18450:	add	r3, sp, #152	; 0x98
   18454:	add	r4, r3, r4, lsl #2
   18458:	ldr	r1, [r4, #-40]	; 0xffffffd8
   1845c:	add	r7, r7, r1
   18460:	mov	r2, #1
   18464:	ldr	r3, [sp, #4]
   18468:	mul	r1, r3, r1
   1846c:	ldr	r3, [sp, #12]
   18470:	ldr	r0, [r3]
   18474:	bl	1714 <fseek@plt>
   18478:	ldr	r3, [sp, #208]	; 0xd0
   1847c:	ldr	r3, [r3]
   18480:	ldr	r2, [sp, #24]
   18484:	add	r3, r2, r3
   18488:	str	r3, [sp, #24]
   1848c:	ldr	r2, [sp, #20]
   18490:	cmp	r3, r2
   18494:	bge	1854c <ReadDataSlabN+0x2a24>
   18498:	ldr	r3, [sp, #200]	; 0xc8
   1849c:	ldr	r1, [r3]
   184a0:	cmp	r1, #0
   184a4:	bne	18360 <ReadDataSlabN+0x2838>
   184a8:	ldr	r3, [sp, #208]	; 0xd0
   184ac:	ldr	r3, [r3]
   184b0:	ldr	r2, [sp, #8]
   184b4:	ldr	r1, [sp, #16]
   184b8:	ldr	r0, [sp, #24]
   184bc:	add	r1, r1, r0
   184c0:	ldr	r4, [sp, #12]
   184c4:	mov	r0, r4
   184c8:	bl	12454 <ReadInt8Data>
   184cc:	ldr	r3, [sp, #196]	; 0xc4
   184d0:	ldr	r3, [r3]
   184d4:	ldr	r2, [sp, #200]	; 0xc8
   184d8:	ldr	r1, [r2]
   184dc:	sub	r2, r3, r1
   184e0:	add	r7, r2, r7
   184e4:	ldr	r2, [sp, #208]	; 0xd0
   184e8:	ldr	r2, [r2]
   184ec:	sub	r3, r3, r2
   184f0:	sub	r1, r3, r1
   184f4:	mov	r2, #1
   184f8:	ldr	r3, [sp, #4]
   184fc:	mul	r1, r3, r1
   18500:	ldr	r0, [r4]
   18504:	bl	1714 <fseek@plt>
   18508:	ldr	r3, [sp, #192]	; 0xc0
   1850c:	cmp	r3, #1
   18510:	ble	18478 <ReadDataSlabN+0x2950>
   18514:	ldr	r0, [sp, #76]	; 0x4c
   18518:	add	r0, r0, #1
   1851c:	str	r0, [sp, #76]	; 0x4c
   18520:	ldr	r3, [sp, #208]	; 0xd0
   18524:	ldr	r1, [r3, #4]
   18528:	bl	517e8 <__aeabi_idivmod>
   1852c:	cmp	r1, #0
   18530:	bne	1844c <ReadDataSlabN+0x2924>
   18534:	ldr	r3, [sp, #208]	; 0xd0
   18538:	add	r9, r3, #4
   1853c:	ldr	r3, [sp, #200]	; 0xc8
   18540:	add	r6, r3, #4
   18544:	ldr	r4, [sp, #28]
   18548:	b	183f0 <ReadDataSlabN+0x28c8>
   1854c:	mov	r0, #0
   18550:	b	18ca0 <ReadDataSlabN+0x3178>
   18554:	mov	r2, #1
   18558:	ldr	r3, [sp, #4]
   1855c:	mul	r1, r3, r1
   18560:	ldr	r0, [fp]
   18564:	bl	1714 <fseek@plt>
   18568:	ldr	r3, [sp, #200]	; 0xc8
   1856c:	ldr	r3, [r3]
   18570:	add	r7, r7, r3
   18574:	b	186a0 <ReadDataSlabN+0x2b78>
   18578:	sub	r4, r4, r1
   1857c:	add	r3, r6, r5, lsl #2
   18580:	ldr	fp, [r3, #-4]
   18584:	ldr	r1, [r8]
   18588:	mla	r1, r1, fp, r4
   1858c:	mov	r2, #1
   18590:	ldr	r3, [sp, #4]
   18594:	mul	r1, r3, r1
   18598:	ldr	r3, [sp, #12]
   1859c:	ldr	r0, [r3]
   185a0:	bl	1714 <fseek@plt>
   185a4:	ldr	r1, [r8]
   185a8:	mla	r4, r1, fp, r4
   185ac:	add	r7, r7, r4
   185b0:	add	r5, r5, #1
   185b4:	ldr	r3, [sp, #192]	; 0xc0
   185b8:	cmp	r3, r5
   185bc:	beq	1879c <ReadDataSlabN+0x2c74>
   185c0:	ldr	r0, [r9, r5, lsl #2]
   185c4:	add	r0, r0, #1
   185c8:	str	r0, [r9, r5, lsl #2]
   185cc:	add	r8, r8, #4
   185d0:	ldr	r1, [sl, #4]!
   185d4:	bl	517e8 <__aeabi_idivmod>
   185d8:	cmp	r1, #0
   185dc:	bne	18644 <ReadDataSlabN+0x2b1c>
   185e0:	mov	r3, #0
   185e4:	str	r3, [r9, r5, lsl #2]
   185e8:	ldr	r4, [r6, r5, lsl #2]
   185ec:	mov	r1, r4
   185f0:	mov	r0, r7
   185f4:	bl	517e8 <__aeabi_idivmod>
   185f8:	cmp	r1, #0
   185fc:	bne	18578 <ReadDataSlabN+0x2a50>
   18600:	ldr	r1, [r8]
   18604:	cmp	r1, #0
   18608:	beq	185b0 <ReadDataSlabN+0x2a88>
   1860c:	add	fp, r6, r5, lsl #2
   18610:	ldr	r4, [fp, #-4]
   18614:	mul	r1, r4, r1
   18618:	mov	r2, #1
   1861c:	ldr	r3, [sp, #4]
   18620:	mul	r1, r3, r1
   18624:	ldr	r3, [sp, #12]
   18628:	ldr	r0, [r3]
   1862c:	bl	1714 <fseek@plt>
   18630:	ldr	r3, [r8]
   18634:	mla	r7, r3, r4, r7
   18638:	b	185b0 <ReadDataSlabN+0x2a88>
   1863c:	mov	r5, #1
   18640:	b	1864c <ReadDataSlabN+0x2b24>
   18644:	ldr	fp, [sp, #12]
   18648:	ldr	r4, [sp, #204]	; 0xcc
   1864c:	add	r3, sp, #152	; 0x98
   18650:	add	r5, r3, r5, lsl #2
   18654:	ldr	r1, [r5, #-40]	; 0xffffffd8
   18658:	add	r7, r7, r1
   1865c:	mov	r2, #1
   18660:	ldr	r3, [sp, #4]
   18664:	mul	r1, r3, r1
   18668:	ldr	r0, [fp]
   1866c:	bl	1714 <fseek@plt>
   18670:	ldr	r3, [sp, #208]	; 0xd0
   18674:	ldr	r3, [r3]
   18678:	ldr	r2, [sp, #24]
   1867c:	add	r3, r2, r3
   18680:	str	r3, [sp, #24]
   18684:	ldr	r2, [sp, #20]
   18688:	cmp	r3, r2
   1868c:	bge	187a8 <ReadDataSlabN+0x2c80>
   18690:	ldr	r3, [sp, #200]	; 0xc8
   18694:	ldr	r1, [r3]
   18698:	cmp	r1, #0
   1869c:	bne	18554 <ReadDataSlabN+0x2a2c>
   186a0:	ldr	r3, [sp, #208]	; 0xd0
   186a4:	ldr	r3, [r3]
   186a8:	cmp	r3, #0
   186ac:	ble	18714 <ReadDataSlabN+0x2bec>
   186b0:	mov	r5, #0
   186b4:	ldr	r6, [sp, #4]
   186b8:	ldr	r8, [sp, #24]
   186bc:	ldr	sl, [sp, #208]	; 0xd0
   186c0:	str	r9, [sp, #12]
   186c4:	ldr	r9, [sp, #16]
   186c8:	add	r1, r5, r8
   186cc:	mov	r3, #1
   186d0:	ldr	r2, [sp, #8]
   186d4:	add	r1, r9, r1
   186d8:	mov	r0, fp
   186dc:	bl	12454 <ReadInt8Data>
   186e0:	ldr	r1, [r4]
   186e4:	sub	r1, r1, #1
   186e8:	mov	r2, #1
   186ec:	mul	r1, r6, r1
   186f0:	ldr	r0, [fp]
   186f4:	bl	1714 <fseek@plt>
   186f8:	ldr	r3, [r4]
   186fc:	add	r7, r7, r3
   18700:	add	r5, r5, #1
   18704:	ldr	r3, [sl]
   18708:	cmp	r3, r5
   1870c:	bgt	186c8 <ReadDataSlabN+0x2ba0>
   18710:	ldr	r9, [sp, #12]
   18714:	ldr	r1, [r4]
   18718:	mul	r3, r1, r3
   1871c:	ldr	r2, [sp, #196]	; 0xc4
   18720:	ldr	r1, [r2]
   18724:	sub	r1, r1, r3
   18728:	ldr	r3, [sp, #200]	; 0xc8
   1872c:	ldr	r3, [r3]
   18730:	sub	r1, r1, r3
   18734:	add	r7, r7, r1
   18738:	mov	r2, #1
   1873c:	ldr	r3, [sp, #4]
   18740:	mul	r1, r1, r3
   18744:	ldr	r0, [fp]
   18748:	bl	1714 <fseek@plt>
   1874c:	ldr	r3, [sp, #192]	; 0xc0
   18750:	cmp	r3, #1
   18754:	ble	18670 <ReadDataSlabN+0x2b48>
   18758:	ldr	r0, [sp, #76]	; 0x4c
   1875c:	add	r0, r0, #1
   18760:	str	r0, [sp, #76]	; 0x4c
   18764:	ldr	r3, [sp, #208]	; 0xd0
   18768:	ldr	r1, [r3, #4]
   1876c:	bl	517e8 <__aeabi_idivmod>
   18770:	cmp	r1, #0
   18774:	bne	1863c <ReadDataSlabN+0x2b14>
   18778:	ldr	r3, [sp, #208]	; 0xd0
   1877c:	add	sl, r3, #4
   18780:	ldr	r3, [sp, #200]	; 0xc8
   18784:	add	r8, r3, #4
   18788:	mov	r5, #1
   1878c:	str	fp, [sp, #12]
   18790:	str	r4, [sp, #204]	; 0xcc
   18794:	ldr	r6, [sp, #28]
   18798:	b	185e0 <ReadDataSlabN+0x2ab8>
   1879c:	ldr	fp, [sp, #12]
   187a0:	ldr	r4, [sp, #204]	; 0xcc
   187a4:	b	18670 <ReadDataSlabN+0x2b48>
   187a8:	mov	r0, #0
   187ac:	b	18ca0 <ReadDataSlabN+0x3178>
   187b0:	ldr	r3, [r4]
   187b4:	sub	r3, r3, #1
   187b8:	str	r3, [sp, #112]	; 0x70
   187bc:	ldr	r3, [sp, #196]	; 0xc4
   187c0:	ldr	r3, [r3]
   187c4:	str	r3, [sp, #32]
   187c8:	ldr	r3, [sp, #208]	; 0xd0
   187cc:	ldr	r3, [r3]
   187d0:	str	r3, [sp, #20]
   187d4:	ldr	r3, [sp, #192]	; 0xc0
   187d8:	cmp	r3, #1
   187dc:	ble	18814 <ReadDataSlabN+0x2cec>
   187e0:	str	r4, [sp, #24]
   187e4:	add	r9, sp, #116	; 0x74
   187e8:	ldr	lr, [sp, #196]	; 0xc4
   187ec:	add	fp, sp, #32
   187f0:	ldr	r3, [sp, #208]	; 0xd0
   187f4:	add	r8, r3, #4
   187f8:	ldr	r3, [sp, #200]	; 0xc8
   187fc:	add	r6, r3, #4
   18800:	mov	sl, lr
   18804:	mov	r5, #2
   18808:	mov	r7, #0
   1880c:	str	r4, [sp, #204]	; 0xcc
   18810:	b	1969c <ReadDataSlabN+0x3b74>
   18814:	mov	r7, #0
   18818:	b	19724 <ReadDataSlabN+0x3bfc>
   1881c:	ldr	r3, [sp, #20]
   18820:	cmp	r3, #0
   18824:	ble	18cf8 <ReadDataSlabN+0x31d0>
   18828:	mov	r3, #0
   1882c:	str	r3, [sp, #24]
   18830:	add	r8, sp, #72	; 0x48
   18834:	add	fp, sp, #32
   18838:	b	18974 <ReadDataSlabN+0x2e4c>
   1883c:	mov	r2, #1
   18840:	ldr	r3, [sp, #4]
   18844:	mul	r1, r3, r1
   18848:	ldr	r3, [sp, #12]
   1884c:	ldr	r0, [r3]
   18850:	bl	1714 <fseek@plt>
   18854:	ldr	r3, [sp, #200]	; 0xc8
   18858:	ldr	r3, [r3]
   1885c:	add	r7, r7, r3
   18860:	b	18984 <ReadDataSlabN+0x2e5c>
   18864:	sub	r5, r5, r1
   18868:	add	r3, fp, r4, lsl #2
   1886c:	ldr	sl, [r3, #-4]
   18870:	ldr	r1, [r6]
   18874:	mla	r1, r1, sl, r5
   18878:	mov	r2, #1
   1887c:	ldr	r3, [sp, #4]
   18880:	mul	r1, r3, r1
   18884:	ldr	r3, [sp, #12]
   18888:	ldr	r0, [r3]
   1888c:	bl	1714 <fseek@plt>
   18890:	ldr	r1, [r6]
   18894:	mla	r5, r1, sl, r5
   18898:	add	r7, r7, r5
   1889c:	add	r4, r4, #1
   188a0:	ldr	r3, [sp, #192]	; 0xc0
   188a4:	cmp	r3, r4
   188a8:	beq	18954 <ReadDataSlabN+0x2e2c>
   188ac:	ldr	r0, [r8, r4, lsl #2]
   188b0:	add	r0, r0, #1
   188b4:	str	r0, [r8, r4, lsl #2]
   188b8:	add	r6, r6, #4
   188bc:	ldr	r1, [r9, #4]!
   188c0:	bl	517e8 <__aeabi_idivmod>
   188c4:	cmp	r1, #0
   188c8:	bne	1892c <ReadDataSlabN+0x2e04>
   188cc:	mov	r3, #0
   188d0:	str	r3, [r8, r4, lsl #2]
   188d4:	ldr	r5, [fp, r4, lsl #2]
   188d8:	mov	r1, r5
   188dc:	mov	r0, r7
   188e0:	bl	517e8 <__aeabi_idivmod>
   188e4:	cmp	r1, #0
   188e8:	bne	18864 <ReadDataSlabN+0x2d3c>
   188ec:	ldr	r1, [r6]
   188f0:	cmp	r1, #0
   188f4:	beq	1889c <ReadDataSlabN+0x2d74>
   188f8:	add	sl, fp, r4, lsl #2
   188fc:	ldr	r5, [sl, #-4]
   18900:	mul	r1, r5, r1
   18904:	mov	r2, #1
   18908:	ldr	r3, [sp, #4]
   1890c:	mul	r1, r3, r1
   18910:	ldr	r3, [sp, #12]
   18914:	ldr	r0, [r3]
   18918:	bl	1714 <fseek@plt>
   1891c:	ldr	r3, [r6]
   18920:	mla	r7, r3, r5, r7
   18924:	b	1889c <ReadDataSlabN+0x2d74>
   18928:	ldr	r4, [sp, #28]
   1892c:	add	r3, sp, #152	; 0x98
   18930:	add	r4, r3, r4, lsl #2
   18934:	ldr	r1, [r4, #-40]	; 0xffffffd8
   18938:	add	r7, r7, r1
   1893c:	mov	r2, #1
   18940:	ldr	r3, [sp, #4]
   18944:	mul	r1, r3, r1
   18948:	ldr	r3, [sp, #12]
   1894c:	ldr	r0, [r3]
   18950:	bl	1714 <fseek@plt>
   18954:	ldr	r3, [sp, #208]	; 0xd0
   18958:	ldr	r3, [r3]
   1895c:	ldr	r2, [sp, #24]
   18960:	add	r3, r2, r3
   18964:	str	r3, [sp, #24]
   18968:	ldr	r2, [sp, #20]
   1896c:	cmp	r3, r2
   18970:	bge	18a28 <ReadDataSlabN+0x2f00>
   18974:	ldr	r3, [sp, #200]	; 0xc8
   18978:	ldr	r1, [r3]
   1897c:	cmp	r1, #0
   18980:	bne	1883c <ReadDataSlabN+0x2d14>
   18984:	ldr	r3, [sp, #208]	; 0xd0
   18988:	ldr	r3, [r3]
   1898c:	ldr	r2, [sp, #8]
   18990:	ldr	r1, [sp, #16]
   18994:	ldr	r0, [sp, #24]
   18998:	add	r1, r1, r0
   1899c:	ldr	r4, [sp, #12]
   189a0:	mov	r0, r4
   189a4:	bl	13e70 <ReadUInt8Data>
   189a8:	ldr	r3, [sp, #196]	; 0xc4
   189ac:	ldr	r3, [r3]
   189b0:	ldr	r2, [sp, #200]	; 0xc8
   189b4:	ldr	r1, [r2]
   189b8:	sub	r2, r3, r1
   189bc:	add	r7, r2, r7
   189c0:	ldr	r2, [sp, #208]	; 0xd0
   189c4:	ldr	r2, [r2]
   189c8:	sub	r3, r3, r2
   189cc:	sub	r1, r3, r1
   189d0:	mov	r2, #1
   189d4:	ldr	r3, [sp, #4]
   189d8:	mul	r1, r3, r1
   189dc:	ldr	r0, [r4]
   189e0:	bl	1714 <fseek@plt>
   189e4:	ldr	r3, [sp, #192]	; 0xc0
   189e8:	cmp	r3, #1
   189ec:	ble	18954 <ReadDataSlabN+0x2e2c>
   189f0:	ldr	r0, [sp, #76]	; 0x4c
   189f4:	add	r0, r0, #1
   189f8:	str	r0, [sp, #76]	; 0x4c
   189fc:	ldr	r3, [sp, #208]	; 0xd0
   18a00:	ldr	r1, [r3, #4]
   18a04:	bl	517e8 <__aeabi_idivmod>
   18a08:	cmp	r1, #0
   18a0c:	bne	18928 <ReadDataSlabN+0x2e00>
   18a10:	ldr	r3, [sp, #208]	; 0xd0
   18a14:	add	r9, r3, #4
   18a18:	ldr	r3, [sp, #200]	; 0xc8
   18a1c:	add	r6, r3, #4
   18a20:	ldr	r4, [sp, #28]
   18a24:	b	188cc <ReadDataSlabN+0x2da4>
   18a28:	mov	r0, #0
   18a2c:	b	18ca0 <ReadDataSlabN+0x3178>
   18a30:	mov	r2, #1
   18a34:	ldr	r3, [sp, #4]
   18a38:	mul	r1, r3, r1
   18a3c:	ldr	r0, [fp]
   18a40:	bl	1714 <fseek@plt>
   18a44:	ldr	r3, [sp, #200]	; 0xc8
   18a48:	ldr	r3, [r3]
   18a4c:	add	r7, r7, r3
   18a50:	b	18b7c <ReadDataSlabN+0x3054>
   18a54:	sub	r4, r4, r1
   18a58:	add	r3, r6, r5, lsl #2
   18a5c:	ldr	fp, [r3, #-4]
   18a60:	ldr	r1, [r8]
   18a64:	mla	r1, r1, fp, r4
   18a68:	mov	r2, #1
   18a6c:	ldr	r3, [sp, #4]
   18a70:	mul	r1, r3, r1
   18a74:	ldr	r3, [sp, #12]
   18a78:	ldr	r0, [r3]
   18a7c:	bl	1714 <fseek@plt>
   18a80:	ldr	r1, [r8]
   18a84:	mla	r4, r1, fp, r4
   18a88:	add	r7, r7, r4
   18a8c:	add	r5, r5, #1
   18a90:	ldr	r3, [sp, #192]	; 0xc0
   18a94:	cmp	r3, r5
   18a98:	beq	18c78 <ReadDataSlabN+0x3150>
   18a9c:	ldr	r0, [r9, r5, lsl #2]
   18aa0:	add	r0, r0, #1
   18aa4:	str	r0, [r9, r5, lsl #2]
   18aa8:	add	r8, r8, #4
   18aac:	ldr	r1, [sl, #4]!
   18ab0:	bl	517e8 <__aeabi_idivmod>
   18ab4:	cmp	r1, #0
   18ab8:	bne	18b20 <ReadDataSlabN+0x2ff8>
   18abc:	mov	r3, #0
   18ac0:	str	r3, [r9, r5, lsl #2]
   18ac4:	ldr	r4, [r6, r5, lsl #2]
   18ac8:	mov	r1, r4
   18acc:	mov	r0, r7
   18ad0:	bl	517e8 <__aeabi_idivmod>
   18ad4:	cmp	r1, #0
   18ad8:	bne	18a54 <ReadDataSlabN+0x2f2c>
   18adc:	ldr	r1, [r8]
   18ae0:	cmp	r1, #0
   18ae4:	beq	18a8c <ReadDataSlabN+0x2f64>
   18ae8:	add	fp, r6, r5, lsl #2
   18aec:	ldr	r4, [fp, #-4]
   18af0:	mul	r1, r4, r1
   18af4:	mov	r2, #1
   18af8:	ldr	r3, [sp, #4]
   18afc:	mul	r1, r3, r1
   18b00:	ldr	r3, [sp, #12]
   18b04:	ldr	r0, [r3]
   18b08:	bl	1714 <fseek@plt>
   18b0c:	ldr	r3, [r8]
   18b10:	mla	r7, r3, r4, r7
   18b14:	b	18a8c <ReadDataSlabN+0x2f64>
   18b18:	mov	r5, #1
   18b1c:	b	18b28 <ReadDataSlabN+0x3000>
   18b20:	ldr	fp, [sp, #12]
   18b24:	ldr	r4, [sp, #204]	; 0xcc
   18b28:	add	r3, sp, #152	; 0x98
   18b2c:	add	r5, r3, r5, lsl #2
   18b30:	ldr	r1, [r5, #-40]	; 0xffffffd8
   18b34:	add	r7, r7, r1
   18b38:	mov	r2, #1
   18b3c:	ldr	r3, [sp, #4]
   18b40:	mul	r1, r3, r1
   18b44:	ldr	r0, [fp]
   18b48:	bl	1714 <fseek@plt>
   18b4c:	ldr	r3, [sp, #208]	; 0xd0
   18b50:	ldr	r3, [r3]
   18b54:	ldr	r2, [sp, #24]
   18b58:	add	r3, r2, r3
   18b5c:	str	r3, [sp, #24]
   18b60:	ldr	r2, [sp, #20]
   18b64:	cmp	r3, r2
   18b68:	bge	18c84 <ReadDataSlabN+0x315c>
   18b6c:	ldr	r3, [sp, #200]	; 0xc8
   18b70:	ldr	r1, [r3]
   18b74:	cmp	r1, #0
   18b78:	bne	18a30 <ReadDataSlabN+0x2f08>
   18b7c:	ldr	r3, [sp, #208]	; 0xd0
   18b80:	ldr	r3, [r3]
   18b84:	cmp	r3, #0
   18b88:	ble	18bf0 <ReadDataSlabN+0x30c8>
   18b8c:	mov	r5, #0
   18b90:	ldr	r6, [sp, #4]
   18b94:	ldr	r8, [sp, #24]
   18b98:	ldr	sl, [sp, #208]	; 0xd0
   18b9c:	str	r9, [sp, #12]
   18ba0:	ldr	r9, [sp, #16]
   18ba4:	add	r1, r8, r5
   18ba8:	mov	r3, #1
   18bac:	ldr	r2, [sp, #8]
   18bb0:	add	r1, r9, r1
   18bb4:	mov	r0, fp
   18bb8:	bl	13e70 <ReadUInt8Data>
   18bbc:	ldr	r1, [r4]
   18bc0:	sub	r1, r1, #1
   18bc4:	mov	r2, #1
   18bc8:	mul	r1, r6, r1
   18bcc:	ldr	r0, [fp]
   18bd0:	bl	1714 <fseek@plt>
   18bd4:	ldr	r3, [r4]
   18bd8:	add	r7, r7, r3
   18bdc:	add	r5, r5, #1
   18be0:	ldr	r3, [sl]
   18be4:	cmp	r3, r5
   18be8:	bgt	18ba4 <ReadDataSlabN+0x307c>
   18bec:	ldr	r9, [sp, #12]
   18bf0:	ldr	r1, [r4]
   18bf4:	mul	r3, r1, r3
   18bf8:	ldr	r2, [sp, #196]	; 0xc4
   18bfc:	ldr	r1, [r2]
   18c00:	sub	r1, r1, r3
   18c04:	ldr	r3, [sp, #200]	; 0xc8
   18c08:	ldr	r3, [r3]
   18c0c:	sub	r1, r1, r3
   18c10:	add	r7, r7, r1
   18c14:	mov	r2, #1
   18c18:	ldr	r3, [sp, #4]
   18c1c:	mul	r1, r1, r3
   18c20:	ldr	r0, [fp]
   18c24:	bl	1714 <fseek@plt>
   18c28:	ldr	r3, [sp, #192]	; 0xc0
   18c2c:	cmp	r3, #1
   18c30:	ble	18b4c <ReadDataSlabN+0x3024>
   18c34:	ldr	r0, [sp, #76]	; 0x4c
   18c38:	add	r0, r0, #1
   18c3c:	str	r0, [sp, #76]	; 0x4c
   18c40:	ldr	r3, [sp, #208]	; 0xd0
   18c44:	ldr	r1, [r3, #4]
   18c48:	bl	517e8 <__aeabi_idivmod>
   18c4c:	cmp	r1, #0
   18c50:	bne	18b18 <ReadDataSlabN+0x2ff0>
   18c54:	ldr	r3, [sp, #208]	; 0xd0
   18c58:	add	sl, r3, #4
   18c5c:	ldr	r3, [sp, #200]	; 0xc8
   18c60:	add	r8, r3, #4
   18c64:	mov	r5, #1
   18c68:	str	fp, [sp, #12]
   18c6c:	str	r4, [sp, #204]	; 0xcc
   18c70:	ldr	r6, [sp, #28]
   18c74:	b	18abc <ReadDataSlabN+0x2f94>
   18c78:	ldr	fp, [sp, #12]
   18c7c:	ldr	r4, [sp, #204]	; 0xcc
   18c80:	b	18b4c <ReadDataSlabN+0x3024>
   18c84:	mov	r0, #0
   18c88:	b	18ca0 <ReadDataSlabN+0x3178>
   18c8c:	mvn	r0, #0
   18c90:	b	18ca0 <ReadDataSlabN+0x3178>
   18c94:	mvn	r0, #0
   18c98:	b	18ca0 <ReadDataSlabN+0x3178>
   18c9c:	mvn	r0, #0
   18ca0:	add	sp, sp, #156	; 0x9c
   18ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ca8:	mov	r0, #0
   18cac:	b	18ca0 <ReadDataSlabN+0x3178>
   18cb0:	mov	r0, #0
   18cb4:	b	18ca0 <ReadDataSlabN+0x3178>
   18cb8:	mov	r0, #0
   18cbc:	b	18ca0 <ReadDataSlabN+0x3178>
   18cc0:	mov	r0, #0
   18cc4:	b	18ca0 <ReadDataSlabN+0x3178>
   18cc8:	mov	r0, #0
   18ccc:	b	18ca0 <ReadDataSlabN+0x3178>
   18cd0:	mov	r0, #0
   18cd4:	b	18ca0 <ReadDataSlabN+0x3178>
   18cd8:	mov	r0, #0
   18cdc:	b	18ca0 <ReadDataSlabN+0x3178>
   18ce0:	mov	r0, #0
   18ce4:	b	18ca0 <ReadDataSlabN+0x3178>
   18ce8:	mov	r0, #0
   18cec:	b	18ca0 <ReadDataSlabN+0x3178>
   18cf0:	mov	r0, #0
   18cf4:	b	18ca0 <ReadDataSlabN+0x3178>
   18cf8:	mov	r0, #0
   18cfc:	b	18ca0 <ReadDataSlabN+0x3178>
   18d00:	ldr	r3, [r8]
   18d04:	ldr	r2, [sp, #20]
   18d08:	mul	r3, r3, r2
   18d0c:	str	r3, [sp, #20]
   18d10:	ldr	r3, [fp]
   18d14:	ldr	r2, [r6]
   18d18:	mla	r7, r2, r3, r7
   18d1c:	add	r9, r9, #4
   18d20:	add	fp, fp, #4
   18d24:	add	r5, r5, #1
   18d28:	add	r8, r8, #4
   18d2c:	add	r6, r6, #4
   18d30:	ldr	r3, [sp, #24]
   18d34:	ldr	r2, [r3, #4]!
   18d38:	str	r3, [sp, #24]
   18d3c:	sub	r2, r2, #1
   18d40:	str	r9, [sp, #28]
   18d44:	str	r2, [r9]
   18d48:	ldr	r3, [sl], #4
   18d4c:	mov	r1, r3
   18d50:	mov	r4, fp
   18d54:	str	r3, [fp, #4]
   18d58:	cmp	r5, #1
   18d5c:	beq	18d00 <ReadDataSlabN+0x31d8>
   18d60:	mov	r3, sl
   18d64:	mov	r0, r3
   18d68:	ldr	ip, [r3, #-4]!
   18d6c:	mul	r2, ip, r2
   18d70:	ldr	r0, [r0]
   18d74:	mul	r1, r0, r1
   18d78:	cmp	lr, r3
   18d7c:	bne	18d64 <ReadDataSlabN+0x323c>
   18d80:	ldr	r3, [sp, #28]
   18d84:	str	r2, [r3]
   18d88:	str	r1, [r4, #4]
   18d8c:	ldr	r3, [r8]
   18d90:	ldr	r2, [sp, #20]
   18d94:	mul	r3, r3, r2
   18d98:	str	r3, [sp, #20]
   18d9c:	ldr	r3, [r4]
   18da0:	ldr	r2, [r6]
   18da4:	mla	r7, r2, r3, r7
   18da8:	ldr	r3, [sp, #192]	; 0xc0
   18dac:	cmp	r3, r5
   18db0:	bgt	18d1c <ReadDataSlabN+0x31f4>
   18db4:	ldr	r4, [sp, #204]	; 0xcc
   18db8:	mov	r2, #1
   18dbc:	ldr	r3, [sp, #4]
   18dc0:	mul	r1, r3, r7
   18dc4:	ldr	r3, [sp, #12]
   18dc8:	ldr	r0, [r3]
   18dcc:	bl	1714 <fseek@plt>
   18dd0:	ldr	r3, [r4]
   18dd4:	str	r3, [sp, #28]
   18dd8:	cmp	r3, #1
   18ddc:	beq	15c80 <ReadDataSlabN+0x158>
   18de0:	ldr	r3, [sp, #20]
   18de4:	cmp	r3, #0
   18de8:	movle	r0, #0
   18dec:	ble	18ca0 <ReadDataSlabN+0x3178>
   18df0:	mov	r3, #0
   18df4:	str	r3, [sp, #24]
   18df8:	add	r9, sp, #72	; 0x48
   18dfc:	add	r3, sp, #32
   18e00:	str	r3, [sp, #28]
   18e04:	ldr	fp, [sp, #12]
   18e08:	b	15fd0 <ReadDataSlabN+0x4a8>
   18e0c:	ldr	r3, [r8]
   18e10:	ldr	r2, [sp, #20]
   18e14:	mul	r3, r3, r2
   18e18:	str	r3, [sp, #20]
   18e1c:	ldr	r3, [r6]
   18e20:	ldr	r2, [fp]
   18e24:	mla	r7, r2, r3, r7
   18e28:	add	r9, r9, #4
   18e2c:	add	fp, fp, #4
   18e30:	add	r5, r5, #1
   18e34:	add	r8, r8, #4
   18e38:	add	r6, r6, #4
   18e3c:	ldr	r3, [sp, #24]
   18e40:	ldr	r2, [r3, #4]!
   18e44:	str	r3, [sp, #24]
   18e48:	sub	r2, r2, #1
   18e4c:	str	r9, [sp, #28]
   18e50:	str	r2, [r9]
   18e54:	ldr	r3, [sl], #4
   18e58:	mov	r1, r3
   18e5c:	mov	r4, fp
   18e60:	str	r3, [fp, #4]
   18e64:	cmp	r5, #1
   18e68:	beq	18e0c <ReadDataSlabN+0x32e4>
   18e6c:	mov	r3, sl
   18e70:	mov	r0, r3
   18e74:	ldr	ip, [r3, #-4]!
   18e78:	mul	r2, ip, r2
   18e7c:	ldr	r0, [r0]
   18e80:	mul	r1, r0, r1
   18e84:	cmp	lr, r3
   18e88:	bne	18e70 <ReadDataSlabN+0x3348>
   18e8c:	ldr	r3, [sp, #28]
   18e90:	str	r2, [r3]
   18e94:	str	r1, [r4, #4]
   18e98:	ldr	r3, [r8]
   18e9c:	ldr	r2, [sp, #20]
   18ea0:	mul	r3, r3, r2
   18ea4:	str	r3, [sp, #20]
   18ea8:	ldr	r3, [r4]
   18eac:	ldr	r2, [r6]
   18eb0:	mla	r7, r2, r3, r7
   18eb4:	ldr	r3, [sp, #192]	; 0xc0
   18eb8:	cmp	r3, r5
   18ebc:	bgt	18e28 <ReadDataSlabN+0x3300>
   18ec0:	ldr	r4, [sp, #204]	; 0xcc
   18ec4:	mov	r2, #1
   18ec8:	ldr	r3, [sp, #4]
   18ecc:	mul	r1, r3, r7
   18ed0:	ldr	r3, [sp, #12]
   18ed4:	ldr	r0, [r3]
   18ed8:	bl	1714 <fseek@plt>
   18edc:	ldr	r3, [r4]
   18ee0:	str	r3, [sp, #28]
   18ee4:	cmp	r3, #1
   18ee8:	beq	16158 <ReadDataSlabN+0x630>
   18eec:	ldr	r3, [sp, #20]
   18ef0:	cmp	r3, #0
   18ef4:	movle	r0, #0
   18ef8:	ble	18ca0 <ReadDataSlabN+0x3178>
   18efc:	mov	r3, #0
   18f00:	str	r3, [sp, #24]
   18f04:	add	r9, sp, #72	; 0x48
   18f08:	add	r3, sp, #32
   18f0c:	str	r3, [sp, #28]
   18f10:	ldr	fp, [sp, #12]
   18f14:	b	164a8 <ReadDataSlabN+0x980>
   18f18:	ldr	r3, [r8]
   18f1c:	ldr	r2, [sp, #20]
   18f20:	mul	r3, r3, r2
   18f24:	str	r3, [sp, #20]
   18f28:	ldr	r3, [fp]
   18f2c:	ldr	r2, [r6]
   18f30:	mla	r7, r2, r3, r7
   18f34:	add	r9, r9, #4
   18f38:	add	fp, fp, #4
   18f3c:	add	r5, r5, #1
   18f40:	add	r8, r8, #4
   18f44:	add	r6, r6, #4
   18f48:	ldr	r3, [sp, #24]
   18f4c:	ldr	r2, [r3, #4]!
   18f50:	str	r3, [sp, #24]
   18f54:	sub	r2, r2, #1
   18f58:	str	r9, [sp, #28]
   18f5c:	str	r2, [r9]
   18f60:	ldr	r3, [sl], #4
   18f64:	mov	r1, r3
   18f68:	mov	r4, fp
   18f6c:	str	r3, [fp, #4]
   18f70:	cmp	r5, #1
   18f74:	beq	18f18 <ReadDataSlabN+0x33f0>
   18f78:	mov	r3, sl
   18f7c:	mov	r0, r3
   18f80:	ldr	ip, [r3, #-4]!
   18f84:	mul	r2, ip, r2
   18f88:	ldr	r0, [r0]
   18f8c:	mul	r1, r0, r1
   18f90:	cmp	r3, lr
   18f94:	bne	18f7c <ReadDataSlabN+0x3454>
   18f98:	ldr	r3, [sp, #28]
   18f9c:	str	r2, [r3]
   18fa0:	str	r1, [r4, #4]
   18fa4:	ldr	r3, [r8]
   18fa8:	ldr	r2, [sp, #20]
   18fac:	mul	r3, r3, r2
   18fb0:	str	r3, [sp, #20]
   18fb4:	ldr	r3, [r4]
   18fb8:	ldr	r2, [r6]
   18fbc:	mla	r7, r2, r3, r7
   18fc0:	ldr	r3, [sp, #192]	; 0xc0
   18fc4:	cmp	r3, r5
   18fc8:	bgt	18f34 <ReadDataSlabN+0x340c>
   18fcc:	ldr	r4, [sp, #204]	; 0xcc
   18fd0:	mov	r2, #1
   18fd4:	ldr	r3, [sp, #4]
   18fd8:	mul	r1, r3, r7
   18fdc:	ldr	r3, [sp, #12]
   18fe0:	ldr	r0, [r3]
   18fe4:	bl	1714 <fseek@plt>
   18fe8:	ldr	r3, [r4]
   18fec:	str	r3, [sp, #28]
   18ff0:	cmp	r3, #1
   18ff4:	beq	16630 <ReadDataSlabN+0xb08>
   18ff8:	ldr	r3, [sp, #20]
   18ffc:	cmp	r3, #0
   19000:	movle	r0, #0
   19004:	ble	18ca0 <ReadDataSlabN+0x3178>
   19008:	mov	r3, #0
   1900c:	str	r3, [sp, #24]
   19010:	add	r9, sp, #72	; 0x48
   19014:	add	r3, sp, #32
   19018:	str	r3, [sp, #28]
   1901c:	ldr	fp, [sp, #12]
   19020:	b	16980 <ReadDataSlabN+0xe58>
   19024:	ldr	r3, [r8]
   19028:	ldr	r2, [sp, #20]
   1902c:	mul	r3, r3, r2
   19030:	str	r3, [sp, #20]
   19034:	ldr	r3, [fp]
   19038:	ldr	r2, [r6]
   1903c:	mla	r7, r2, r3, r7
   19040:	add	r9, r9, #4
   19044:	add	fp, fp, #4
   19048:	add	r5, r5, #1
   1904c:	add	r8, r8, #4
   19050:	add	r6, r6, #4
   19054:	ldr	r3, [sp, #24]
   19058:	ldr	r2, [r3, #4]!
   1905c:	str	r3, [sp, #24]
   19060:	sub	r2, r2, #1
   19064:	str	r9, [sp, #28]
   19068:	str	r2, [r9]
   1906c:	ldr	r3, [sl], #4
   19070:	mov	r1, r3
   19074:	mov	r4, fp
   19078:	str	r3, [fp, #4]
   1907c:	cmp	r5, #1
   19080:	beq	19024 <ReadDataSlabN+0x34fc>
   19084:	mov	r3, sl
   19088:	mov	r0, r3
   1908c:	ldr	ip, [r3, #-4]!
   19090:	mul	r2, ip, r2
   19094:	ldr	r0, [r0]
   19098:	mul	r1, r0, r1
   1909c:	cmp	r3, lr
   190a0:	bne	19088 <ReadDataSlabN+0x3560>
   190a4:	ldr	r3, [sp, #28]
   190a8:	str	r2, [r3]
   190ac:	str	r1, [r4, #4]
   190b0:	ldr	r3, [r8]
   190b4:	ldr	r2, [sp, #20]
   190b8:	mul	r3, r3, r2
   190bc:	str	r3, [sp, #20]
   190c0:	ldr	r3, [r4]
   190c4:	ldr	r2, [r6]
   190c8:	mla	r7, r2, r3, r7
   190cc:	ldr	r3, [sp, #192]	; 0xc0
   190d0:	cmp	r3, r5
   190d4:	bgt	19040 <ReadDataSlabN+0x3518>
   190d8:	ldr	r4, [sp, #204]	; 0xcc
   190dc:	mov	r2, #1
   190e0:	ldr	r3, [sp, #4]
   190e4:	mul	r1, r3, r7
   190e8:	ldr	r3, [sp, #12]
   190ec:	ldr	r0, [r3]
   190f0:	bl	1714 <fseek@plt>
   190f4:	ldr	r3, [r4]
   190f8:	str	r3, [sp, #28]
   190fc:	cmp	r3, #1
   19100:	beq	16b08 <ReadDataSlabN+0xfe0>
   19104:	ldr	r3, [sp, #20]
   19108:	cmp	r3, #0
   1910c:	movle	r0, #0
   19110:	ble	18ca0 <ReadDataSlabN+0x3178>
   19114:	mov	r3, #0
   19118:	str	r3, [sp, #24]
   1911c:	add	r9, sp, #72	; 0x48
   19120:	add	r3, sp, #32
   19124:	str	r3, [sp, #28]
   19128:	ldr	fp, [sp, #12]
   1912c:	b	16e58 <ReadDataSlabN+0x1330>
   19130:	ldr	r3, [r8]
   19134:	ldr	r2, [sp, #20]
   19138:	mul	r3, r3, r2
   1913c:	str	r3, [sp, #20]
   19140:	ldr	r3, [r6]
   19144:	ldr	r2, [fp]
   19148:	mla	r7, r2, r3, r7
   1914c:	add	r9, r9, #4
   19150:	add	fp, fp, #4
   19154:	add	r5, r5, #1
   19158:	add	r8, r8, #4
   1915c:	add	r6, r6, #4
   19160:	ldr	r3, [sp, #24]
   19164:	ldr	r2, [r3, #4]!
   19168:	str	r3, [sp, #24]
   1916c:	sub	r2, r2, #1
   19170:	str	r9, [sp, #28]
   19174:	str	r2, [r9]
   19178:	ldr	r3, [sl], #4
   1917c:	mov	r1, r3
   19180:	mov	r4, fp
   19184:	str	r3, [fp, #4]
   19188:	cmp	r5, #1
   1918c:	beq	19130 <ReadDataSlabN+0x3608>
   19190:	mov	r3, sl
   19194:	mov	r0, r3
   19198:	ldr	ip, [r3, #-4]!
   1919c:	mul	r2, ip, r2
   191a0:	ldr	r0, [r0]
   191a4:	mul	r1, r0, r1
   191a8:	cmp	r3, lr
   191ac:	bne	19194 <ReadDataSlabN+0x366c>
   191b0:	ldr	r3, [sp, #28]
   191b4:	str	r2, [r3]
   191b8:	str	r1, [r4, #4]
   191bc:	ldr	r3, [r8]
   191c0:	ldr	r2, [sp, #20]
   191c4:	mul	r3, r3, r2
   191c8:	str	r3, [sp, #20]
   191cc:	ldr	r3, [r4]
   191d0:	ldr	r2, [r6]
   191d4:	mla	r7, r2, r3, r7
   191d8:	ldr	r3, [sp, #192]	; 0xc0
   191dc:	cmp	r3, r5
   191e0:	bgt	1914c <ReadDataSlabN+0x3624>
   191e4:	ldr	r4, [sp, #204]	; 0xcc
   191e8:	mov	r2, #1
   191ec:	ldr	r3, [sp, #4]
   191f0:	mul	r1, r3, r7
   191f4:	ldr	r3, [sp, #12]
   191f8:	ldr	r0, [r3]
   191fc:	bl	1714 <fseek@plt>
   19200:	ldr	r3, [r4]
   19204:	str	r3, [sp, #28]
   19208:	cmp	r3, #1
   1920c:	beq	16fe0 <ReadDataSlabN+0x14b8>
   19210:	ldr	r3, [sp, #20]
   19214:	cmp	r3, #0
   19218:	movle	r0, #0
   1921c:	ble	18ca0 <ReadDataSlabN+0x3178>
   19220:	mov	r3, #0
   19224:	str	r3, [sp, #24]
   19228:	add	r9, sp, #72	; 0x48
   1922c:	add	r3, sp, #32
   19230:	str	r3, [sp, #28]
   19234:	ldr	fp, [sp, #12]
   19238:	b	17330 <ReadDataSlabN+0x1808>
   1923c:	ldr	r3, [r8]
   19240:	ldr	r2, [sp, #20]
   19244:	mul	r3, r3, r2
   19248:	str	r3, [sp, #20]
   1924c:	ldr	r3, [r6]
   19250:	ldr	r2, [fp]
   19254:	mla	r7, r2, r3, r7
   19258:	add	r9, r9, #4
   1925c:	add	fp, fp, #4
   19260:	add	r5, r5, #1
   19264:	add	r8, r8, #4
   19268:	add	r6, r6, #4
   1926c:	ldr	r3, [sp, #24]
   19270:	ldr	r2, [r3, #4]!
   19274:	str	r3, [sp, #24]
   19278:	sub	r2, r2, #1
   1927c:	str	r9, [sp, #28]
   19280:	str	r2, [r9]
   19284:	ldr	r3, [sl], #4
   19288:	mov	r1, r3
   1928c:	mov	r4, fp
   19290:	str	r3, [fp, #4]
   19294:	cmp	r5, #1
   19298:	beq	1923c <ReadDataSlabN+0x3714>
   1929c:	mov	r3, sl
   192a0:	mov	r0, r3
   192a4:	ldr	ip, [r3, #-4]!
   192a8:	mul	r2, ip, r2
   192ac:	ldr	r0, [r0]
   192b0:	mul	r1, r0, r1
   192b4:	cmp	r3, lr
   192b8:	bne	192a0 <ReadDataSlabN+0x3778>
   192bc:	ldr	r3, [sp, #28]
   192c0:	str	r2, [r3]
   192c4:	str	r1, [r4, #4]
   192c8:	ldr	r3, [r8]
   192cc:	ldr	r2, [sp, #20]
   192d0:	mul	r3, r3, r2
   192d4:	str	r3, [sp, #20]
   192d8:	ldr	r3, [r4]
   192dc:	ldr	r2, [r6]
   192e0:	mla	r7, r2, r3, r7
   192e4:	ldr	r3, [sp, #192]	; 0xc0
   192e8:	cmp	r3, r5
   192ec:	bgt	19258 <ReadDataSlabN+0x3730>
   192f0:	ldr	r4, [sp, #204]	; 0xcc
   192f4:	mov	r2, #1
   192f8:	ldr	r3, [sp, #4]
   192fc:	mul	r1, r3, r7
   19300:	ldr	r3, [sp, #12]
   19304:	ldr	r0, [r3]
   19308:	bl	1714 <fseek@plt>
   1930c:	ldr	r3, [r4]
   19310:	str	r3, [sp, #28]
   19314:	cmp	r3, #1
   19318:	beq	174b8 <ReadDataSlabN+0x1990>
   1931c:	ldr	r3, [sp, #20]
   19320:	cmp	r3, #0
   19324:	movle	r0, #0
   19328:	ble	18ca0 <ReadDataSlabN+0x3178>
   1932c:	mov	r3, #0
   19330:	str	r3, [sp, #24]
   19334:	add	r9, sp, #72	; 0x48
   19338:	add	r3, sp, #32
   1933c:	str	r3, [sp, #28]
   19340:	ldr	fp, [sp, #12]
   19344:	b	17808 <ReadDataSlabN+0x1ce0>
   19348:	ldr	r3, [r8]
   1934c:	ldr	r2, [sp, #20]
   19350:	mul	r3, r3, r2
   19354:	str	r3, [sp, #20]
   19358:	ldr	r3, [fp]
   1935c:	ldr	r2, [r6]
   19360:	mla	r7, r2, r3, r7
   19364:	add	r9, r9, #4
   19368:	add	fp, fp, #4
   1936c:	add	r5, r5, #1
   19370:	add	r8, r8, #4
   19374:	add	r6, r6, #4
   19378:	ldr	r3, [sp, #24]
   1937c:	ldr	r2, [r3, #4]!
   19380:	str	r3, [sp, #24]
   19384:	sub	r2, r2, #1
   19388:	str	r9, [sp, #28]
   1938c:	str	r2, [r9]
   19390:	ldr	r3, [sl], #4
   19394:	mov	r1, r3
   19398:	mov	r4, fp
   1939c:	str	r3, [fp, #4]
   193a0:	cmp	r5, #1
   193a4:	beq	19348 <ReadDataSlabN+0x3820>
   193a8:	mov	r3, sl
   193ac:	mov	r0, r3
   193b0:	ldr	ip, [r3, #-4]!
   193b4:	mul	r2, ip, r2
   193b8:	ldr	r0, [r0]
   193bc:	mul	r1, r0, r1
   193c0:	cmp	r3, lr
   193c4:	bne	193ac <ReadDataSlabN+0x3884>
   193c8:	ldr	r3, [sp, #28]
   193cc:	str	r2, [r3]
   193d0:	str	r1, [r4, #4]
   193d4:	ldr	r3, [r8]
   193d8:	ldr	r2, [sp, #20]
   193dc:	mul	r3, r3, r2
   193e0:	str	r3, [sp, #20]
   193e4:	ldr	r3, [r4]
   193e8:	ldr	r2, [r6]
   193ec:	mla	r7, r2, r3, r7
   193f0:	ldr	r3, [sp, #192]	; 0xc0
   193f4:	cmp	r3, r5
   193f8:	bgt	19364 <ReadDataSlabN+0x383c>
   193fc:	ldr	r4, [sp, #204]	; 0xcc
   19400:	mov	r2, #1
   19404:	ldr	r3, [sp, #4]
   19408:	mul	r1, r3, r7
   1940c:	ldr	r3, [sp, #12]
   19410:	ldr	r0, [r3]
   19414:	bl	1714 <fseek@plt>
   19418:	ldr	r3, [r4]
   1941c:	str	r3, [sp, #28]
   19420:	cmp	r3, #1
   19424:	beq	17990 <ReadDataSlabN+0x1e68>
   19428:	ldr	r3, [sp, #20]
   1942c:	cmp	r3, #0
   19430:	movle	r0, #0
   19434:	ble	18ca0 <ReadDataSlabN+0x3178>
   19438:	mov	r3, #0
   1943c:	str	r3, [sp, #24]
   19440:	add	r9, sp, #72	; 0x48
   19444:	add	r3, sp, #32
   19448:	str	r3, [sp, #28]
   1944c:	ldr	fp, [sp, #12]
   19450:	b	17ce0 <ReadDataSlabN+0x21b8>
   19454:	ldr	r3, [r8]
   19458:	ldr	r2, [sp, #20]
   1945c:	mul	r3, r3, r2
   19460:	str	r3, [sp, #20]
   19464:	ldr	r3, [r6]
   19468:	ldr	r2, [fp]
   1946c:	mla	r7, r2, r3, r7
   19470:	add	r9, r9, #4
   19474:	add	fp, fp, #4
   19478:	add	r5, r5, #1
   1947c:	add	r8, r8, #4
   19480:	add	r6, r6, #4
   19484:	ldr	r3, [sp, #24]
   19488:	ldr	r2, [r3, #4]!
   1948c:	str	r3, [sp, #24]
   19490:	sub	r2, r2, #1
   19494:	str	r9, [sp, #28]
   19498:	str	r2, [r9]
   1949c:	ldr	r3, [sl], #4
   194a0:	mov	r1, r3
   194a4:	mov	r4, fp
   194a8:	str	r3, [fp, #4]
   194ac:	cmp	r5, #1
   194b0:	beq	19454 <ReadDataSlabN+0x392c>
   194b4:	mov	r3, sl
   194b8:	mov	r0, r3
   194bc:	ldr	ip, [r3, #-4]!
   194c0:	mul	r2, ip, r2
   194c4:	ldr	r0, [r0]
   194c8:	mul	r1, r0, r1
   194cc:	cmp	r3, lr
   194d0:	bne	194b8 <ReadDataSlabN+0x3990>
   194d4:	ldr	r3, [sp, #28]
   194d8:	str	r2, [r3]
   194dc:	str	r1, [r4, #4]
   194e0:	ldr	r3, [r8]
   194e4:	ldr	r2, [sp, #20]
   194e8:	mul	r3, r3, r2
   194ec:	str	r3, [sp, #20]
   194f0:	ldr	r3, [r4]
   194f4:	ldr	r2, [r6]
   194f8:	mla	r7, r2, r3, r7
   194fc:	ldr	r3, [sp, #192]	; 0xc0
   19500:	cmp	r3, r5
   19504:	bgt	19470 <ReadDataSlabN+0x3948>
   19508:	ldr	r4, [sp, #204]	; 0xcc
   1950c:	mov	r2, #1
   19510:	ldr	r3, [sp, #4]
   19514:	mul	r1, r3, r7
   19518:	ldr	r3, [sp, #12]
   1951c:	ldr	r0, [r3]
   19520:	bl	1714 <fseek@plt>
   19524:	ldr	r3, [r4]
   19528:	str	r3, [sp, #28]
   1952c:	cmp	r3, #1
   19530:	beq	17e68 <ReadDataSlabN+0x2340>
   19534:	ldr	r3, [sp, #20]
   19538:	cmp	r3, #0
   1953c:	movle	r0, #0
   19540:	ble	18ca0 <ReadDataSlabN+0x3178>
   19544:	mov	r3, #0
   19548:	str	r3, [sp, #24]
   1954c:	add	r9, sp, #72	; 0x48
   19550:	add	r3, sp, #32
   19554:	str	r3, [sp, #28]
   19558:	ldr	fp, [sp, #12]
   1955c:	b	181b8 <ReadDataSlabN+0x2690>
   19560:	ldr	r3, [r8]
   19564:	ldr	r2, [sp, #20]
   19568:	mul	r3, r3, r2
   1956c:	str	r3, [sp, #20]
   19570:	ldr	r3, [r6]
   19574:	ldr	r2, [fp]
   19578:	mla	r7, r2, r3, r7
   1957c:	add	r9, r9, #4
   19580:	add	fp, fp, #4
   19584:	add	r5, r5, #1
   19588:	add	r8, r8, #4
   1958c:	add	r6, r6, #4
   19590:	ldr	r3, [sp, #24]
   19594:	ldr	r2, [r3, #4]!
   19598:	str	r3, [sp, #24]
   1959c:	sub	r2, r2, #1
   195a0:	str	r9, [sp, #28]
   195a4:	str	r2, [r9]
   195a8:	ldr	r3, [sl], #4
   195ac:	mov	r1, r3
   195b0:	mov	r4, fp
   195b4:	str	r3, [fp, #4]
   195b8:	cmp	r5, #1
   195bc:	beq	19560 <ReadDataSlabN+0x3a38>
   195c0:	mov	r3, sl
   195c4:	mov	r0, r3
   195c8:	ldr	ip, [r3, #-4]!
   195cc:	mul	r2, ip, r2
   195d0:	ldr	r0, [r0]
   195d4:	mul	r1, r0, r1
   195d8:	cmp	lr, r3
   195dc:	bne	195c4 <ReadDataSlabN+0x3a9c>
   195e0:	ldr	r3, [sp, #28]
   195e4:	str	r2, [r3]
   195e8:	str	r1, [r4, #4]
   195ec:	ldr	r3, [r8]
   195f0:	ldr	r2, [sp, #20]
   195f4:	mul	r3, r3, r2
   195f8:	str	r3, [sp, #20]
   195fc:	ldr	r3, [r4]
   19600:	ldr	r2, [r6]
   19604:	mla	r7, r2, r3, r7
   19608:	ldr	r3, [sp, #192]	; 0xc0
   1960c:	cmp	r3, r5
   19610:	bgt	1957c <ReadDataSlabN+0x3a54>
   19614:	ldr	r4, [sp, #204]	; 0xcc
   19618:	mov	r2, #1
   1961c:	ldr	r3, [sp, #4]
   19620:	mul	r1, r3, r7
   19624:	ldr	r3, [sp, #12]
   19628:	ldr	r0, [r3]
   1962c:	bl	1714 <fseek@plt>
   19630:	ldr	r3, [r4]
   19634:	str	r3, [sp, #28]
   19638:	cmp	r3, #1
   1963c:	beq	18340 <ReadDataSlabN+0x2818>
   19640:	ldr	r3, [sp, #20]
   19644:	cmp	r3, #0
   19648:	movle	r0, #0
   1964c:	ble	18ca0 <ReadDataSlabN+0x3178>
   19650:	mov	r3, #0
   19654:	str	r3, [sp, #24]
   19658:	add	r9, sp, #72	; 0x48
   1965c:	add	r3, sp, #32
   19660:	str	r3, [sp, #28]
   19664:	ldr	fp, [sp, #12]
   19668:	b	18690 <ReadDataSlabN+0x2b68>
   1966c:	ldr	r3, [r8]
   19670:	ldr	r2, [sp, #20]
   19674:	mul	r3, r3, r2
   19678:	str	r3, [sp, #20]
   1967c:	ldr	r3, [r6]
   19680:	ldr	r2, [fp]
   19684:	mla	r7, r2, r3, r7
   19688:	add	r9, r9, #4
   1968c:	add	fp, fp, #4
   19690:	add	r5, r5, #1
   19694:	add	r8, r8, #4
   19698:	add	r6, r6, #4
   1969c:	ldr	r3, [sp, #24]
   196a0:	ldr	r2, [r3, #4]!
   196a4:	str	r3, [sp, #24]
   196a8:	sub	r2, r2, #1
   196ac:	str	r9, [sp, #28]
   196b0:	str	r2, [r9]
   196b4:	ldr	r3, [sl], #4
   196b8:	mov	r1, r3
   196bc:	mov	r4, fp
   196c0:	str	r3, [fp, #4]
   196c4:	cmp	r5, #1
   196c8:	beq	1966c <ReadDataSlabN+0x3b44>
   196cc:	mov	r3, sl
   196d0:	mov	r0, r3
   196d4:	ldr	ip, [r3, #-4]!
   196d8:	mul	r2, ip, r2
   196dc:	ldr	r0, [r0]
   196e0:	mul	r1, r0, r1
   196e4:	cmp	r3, lr
   196e8:	bne	196d0 <ReadDataSlabN+0x3ba8>
   196ec:	ldr	r3, [sp, #28]
   196f0:	str	r2, [r3]
   196f4:	str	r1, [r4, #4]
   196f8:	ldr	r3, [r8]
   196fc:	ldr	r2, [sp, #20]
   19700:	mul	r3, r3, r2
   19704:	str	r3, [sp, #20]
   19708:	ldr	r3, [r4]
   1970c:	ldr	r2, [r6]
   19710:	mla	r7, r2, r3, r7
   19714:	ldr	r3, [sp, #192]	; 0xc0
   19718:	cmp	r3, r5
   1971c:	bgt	19688 <ReadDataSlabN+0x3b60>
   19720:	ldr	r4, [sp, #204]	; 0xcc
   19724:	mov	r2, #1
   19728:	ldr	r3, [sp, #4]
   1972c:	mul	r1, r3, r7
   19730:	ldr	r3, [sp, #12]
   19734:	ldr	r0, [r3]
   19738:	bl	1714 <fseek@plt>
   1973c:	ldr	r3, [r4]
   19740:	str	r3, [sp, #28]
   19744:	cmp	r3, #1
   19748:	beq	1881c <ReadDataSlabN+0x2cf4>
   1974c:	ldr	r3, [sp, #20]
   19750:	cmp	r3, #0
   19754:	movle	r0, #0
   19758:	ble	18ca0 <ReadDataSlabN+0x3178>
   1975c:	mov	r3, #0
   19760:	str	r3, [sp, #24]
   19764:	add	r9, sp, #72	; 0x48
   19768:	add	r3, sp, #32
   1976c:	str	r3, [sp, #28]
   19770:	ldr	fp, [sp, #12]
   19774:	b	18b6c <ReadDataSlabN+0x3044>

00019778 <ReadCompressedDataSlabN>:
   19778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1977c:	sub	sp, sp, #212	; 0xd4
   19780:	mov	r8, r0
   19784:	str	r0, [sp, #8]
   19788:	mov	r7, r1
   1978c:	mov	r9, r2
   19790:	str	r2, [sp, #12]
   19794:	mov	r6, r3
   19798:	ldr	r4, [sp, #264]	; 0x108
   1979c:	ldr	fp, [sp, #268]	; 0x10c
   197a0:	mov	r5, #40	; 0x28
   197a4:	mov	r2, r5
   197a8:	mov	r1, #0
   197ac:	add	r0, sp, #168	; 0xa8
   197b0:	bl	166c <memset@plt>
   197b4:	mov	r2, r5
   197b8:	mov	r1, #0
   197bc:	add	r0, sp, #128	; 0x80
   197c0:	bl	166c <memset@plt>
   197c4:	mov	r2, r5
   197c8:	mov	r1, #0
   197cc:	add	r0, sp, #88	; 0x58
   197d0:	bl	166c <memset@plt>
   197d4:	mov	r2, #56	; 0x38
   197d8:	mov	r1, #0
   197dc:	add	r0, sp, #32
   197e0:	bl	166c <memset@plt>
   197e4:	cmp	r9, #0
   197e8:	cmpne	r8, #0
   197ec:	moveq	r0, #1
   197f0:	beq	19834 <ReadCompressedDataSlabN+0xbc>
   197f4:	ldr	r3, [r8]
   197f8:	cmp	r3, #0
   197fc:	beq	1cad0 <ReadCompressedDataSlabN+0x3358>
   19800:	ldr	r3, [sp, #260]	; 0x104
   19804:	cmp	r4, #0
   19808:	cmpne	r3, #0
   1980c:	moveq	r3, #1
   19810:	movne	r3, #0
   19814:	cmp	fp, #0
   19818:	orreq	r3, r3, #1
   1981c:	ldr	r2, [sp, #252]	; 0xfc
   19820:	cmp	r2, #10
   19824:	orrgt	r3, r3, #1
   19828:	cmp	r3, #0
   1982c:	movne	r0, #1
   19830:	beq	1983c <ReadCompressedDataSlabN+0xc4>
   19834:	add	sp, sp, #212	; 0xd4
   19838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1983c:	mov	r1, r7
   19840:	add	r0, sp, #32
   19844:	bl	1624 <inflateCopy@plt>
   19848:	sub	r6, r6, #6
   1984c:	cmp	r6, #9
   19850:	addls	pc, pc, r6, lsl #2
   19854:	b	1cac0 <ReadCompressedDataSlabN+0x3348>
   19858:	b	19880 <ReadCompressedDataSlabN+0x108>
   1985c:	b	19d88 <ReadCompressedDataSlabN+0x610>
   19860:	b	1c0c0 <ReadCompressedDataSlabN+0x2948>
   19864:	b	1c5c0 <ReadCompressedDataSlabN+0x2e48>
   19868:	b	1b6b0 <ReadCompressedDataSlabN+0x1f38>
   1986c:	b	1bbb8 <ReadCompressedDataSlabN+0x2440>
   19870:	b	1aca0 <ReadCompressedDataSlabN+0x1528>
   19874:	b	1b1a8 <ReadCompressedDataSlabN+0x1a30>
   19878:	b	1a290 <ReadCompressedDataSlabN+0xb18>
   1987c:	b	1a798 <ReadCompressedDataSlabN+0x1020>
   19880:	ldr	r3, [r4]
   19884:	sub	r3, r3, #1
   19888:	str	r3, [sp, #168]	; 0xa8
   1988c:	ldr	r3, [sp, #256]	; 0x100
   19890:	ldr	r3, [r3]
   19894:	str	r3, [sp, #88]	; 0x58
   19898:	ldr	r3, [fp]
   1989c:	str	r3, [sp, #20]
   198a0:	ldr	r3, [sp, #252]	; 0xfc
   198a4:	cmp	r3, #1
   198a8:	ble	198e0 <ReadCompressedDataSlabN+0x168>
   198ac:	str	r4, [sp, #16]
   198b0:	add	sl, sp, #172	; 0xac
   198b4:	ldr	lr, [sp, #256]	; 0x100
   198b8:	add	r9, sp, #88	; 0x58
   198bc:	add	r8, fp, #4
   198c0:	ldr	r3, [sp, #260]	; 0x104
   198c4:	add	r6, r3, #4
   198c8:	mov	r5, #2
   198cc:	mov	r7, #0
   198d0:	str	r4, [sp, #264]	; 0x108
   198d4:	str	fp, [sp, #268]	; 0x10c
   198d8:	mov	fp, lr
   198dc:	b	1cb08 <ReadCompressedDataSlabN+0x3390>
   198e0:	mov	r7, #0
   198e4:	b	1cb94 <ReadCompressedDataSlabN+0x341c>
   198e8:	ldr	r3, [sp, #20]
   198ec:	cmp	r3, #0
   198f0:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   198f4:	mov	r3, #0
   198f8:	str	r3, [sp, #24]
   198fc:	add	r3, sp, #32
   19900:	str	r3, [sp, #16]
   19904:	add	r8, sp, #128	; 0x80
   19908:	add	r3, sp, #88	; 0x58
   1990c:	str	fp, [sp, #268]	; 0x10c
   19910:	mov	sl, r3
   19914:	b	19a24 <ReadCompressedDataSlabN+0x2ac>
   19918:	ldr	r2, [sp, #248]	; 0xf8
   1991c:	ldr	r1, [sp, #16]
   19920:	ldr	r0, [sp, #8]
   19924:	bl	263c <InflateSkipData>
   19928:	ldr	r3, [sp, #260]	; 0x104
   1992c:	ldr	r3, [r3]
   19930:	add	r7, r7, r3
   19934:	b	19a34 <ReadCompressedDataSlabN+0x2bc>
   19938:	sub	r5, r5, r1
   1993c:	add	r3, sl, r4, lsl #2
   19940:	ldr	fp, [r3, #-4]
   19944:	ldr	r3, [r6]
   19948:	mla	r3, r3, fp, r5
   1994c:	ldr	r2, [sp, #248]	; 0xf8
   19950:	ldr	r1, [sp, #16]
   19954:	ldr	r0, [sp, #8]
   19958:	bl	263c <InflateSkipData>
   1995c:	ldr	r1, [r6]
   19960:	mla	r5, r1, fp, r5
   19964:	add	r7, r7, r5
   19968:	add	r4, r4, #1
   1996c:	ldr	r3, [sp, #252]	; 0xfc
   19970:	cmp	r3, r4
   19974:	beq	19a04 <ReadCompressedDataSlabN+0x28c>
   19978:	ldr	r0, [r8, r4, lsl #2]
   1997c:	add	r0, r0, #1
   19980:	str	r0, [r8, r4, lsl #2]
   19984:	add	r6, r6, #4
   19988:	ldr	r1, [r9, #4]!
   1998c:	bl	517e8 <__aeabi_idivmod>
   19990:	cmp	r1, #0
   19994:	bne	199f0 <ReadCompressedDataSlabN+0x278>
   19998:	mov	r3, #0
   1999c:	str	r3, [r8, r4, lsl #2]
   199a0:	ldr	r5, [sl, r4, lsl #2]
   199a4:	mov	r1, r5
   199a8:	mov	r0, r7
   199ac:	bl	517e8 <__aeabi_idivmod>
   199b0:	cmp	r1, #0
   199b4:	bne	19938 <ReadCompressedDataSlabN+0x1c0>
   199b8:	ldr	r3, [r6]
   199bc:	cmp	r3, #0
   199c0:	beq	19968 <ReadCompressedDataSlabN+0x1f0>
   199c4:	add	fp, sl, r4, lsl #2
   199c8:	ldr	r5, [fp, #-4]
   199cc:	mul	r3, r5, r3
   199d0:	ldr	r2, [sp, #248]	; 0xf8
   199d4:	ldr	r1, [sp, #16]
   199d8:	ldr	r0, [sp, #8]
   199dc:	bl	263c <InflateSkipData>
   199e0:	ldr	r3, [r6]
   199e4:	mla	r7, r3, r5, r7
   199e8:	b	19968 <ReadCompressedDataSlabN+0x1f0>
   199ec:	ldr	r4, [sp, #28]
   199f0:	add	r3, sp, #208	; 0xd0
   199f4:	add	r4, r3, r4, lsl #2
   199f8:	ldr	r3, [r4, #-40]	; 0xffffffd8
   199fc:	cmp	r3, #0
   19a00:	bne	19af0 <ReadCompressedDataSlabN+0x378>
   19a04:	ldr	r3, [sp, #268]	; 0x10c
   19a08:	ldr	r3, [r3]
   19a0c:	ldr	r2, [sp, #24]
   19a10:	add	r3, r2, r3
   19a14:	str	r3, [sp, #24]
   19a18:	ldr	r2, [sp, #20]
   19a1c:	cmp	r3, r2
   19a20:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   19a24:	ldr	r3, [sp, #260]	; 0x104
   19a28:	ldr	r3, [r3]
   19a2c:	cmp	r3, #0
   19a30:	bne	19918 <ReadCompressedDataSlabN+0x1a0>
   19a34:	ldr	r3, [sp, #268]	; 0x10c
   19a38:	ldr	r3, [r3]
   19a3c:	str	r3, [sp]
   19a40:	ldr	r3, [sp, #248]	; 0xf8
   19a44:	ldr	r2, [sp, #12]
   19a48:	ldr	r1, [sp, #24]
   19a4c:	add	r2, r2, r1, lsl #3
   19a50:	ldr	r5, [sp, #16]
   19a54:	mov	r1, r5
   19a58:	ldr	r4, [sp, #8]
   19a5c:	mov	r0, r4
   19a60:	bl	4ef4 <ReadCompressedDoubleData>
   19a64:	ldr	r3, [sp, #256]	; 0x100
   19a68:	ldr	r3, [r3]
   19a6c:	ldr	r2, [sp, #260]	; 0x104
   19a70:	ldr	r2, [r2]
   19a74:	sub	r3, r3, r2
   19a78:	ldr	r2, [sp, #268]	; 0x10c
   19a7c:	ldr	r2, [r2]
   19a80:	sub	r3, r3, r2
   19a84:	ldr	r2, [sp, #248]	; 0xf8
   19a88:	mov	r1, r5
   19a8c:	mov	r0, r4
   19a90:	bl	263c <InflateSkipData>
   19a94:	ldr	r3, [sp, #256]	; 0x100
   19a98:	ldr	r3, [r3]
   19a9c:	ldr	r2, [sp, #260]	; 0x104
   19aa0:	ldr	r2, [r2]
   19aa4:	sub	r3, r3, r2
   19aa8:	add	r7, r3, r7
   19aac:	ldr	r3, [sp, #252]	; 0xfc
   19ab0:	cmp	r3, #1
   19ab4:	ble	19a04 <ReadCompressedDataSlabN+0x28c>
   19ab8:	ldr	r0, [sp, #132]	; 0x84
   19abc:	add	r0, r0, #1
   19ac0:	str	r0, [sp, #132]	; 0x84
   19ac4:	ldr	r3, [sp, #268]	; 0x10c
   19ac8:	ldr	r1, [r3, #4]
   19acc:	bl	517e8 <__aeabi_idivmod>
   19ad0:	cmp	r1, #0
   19ad4:	bne	199ec <ReadCompressedDataSlabN+0x274>
   19ad8:	ldr	r3, [sp, #268]	; 0x10c
   19adc:	add	r9, r3, #4
   19ae0:	ldr	r3, [sp, #260]	; 0x104
   19ae4:	add	r6, r3, #4
   19ae8:	ldr	r4, [sp, #28]
   19aec:	b	19998 <ReadCompressedDataSlabN+0x220>
   19af0:	add	r7, r7, r3
   19af4:	ldr	r2, [sp, #248]	; 0xf8
   19af8:	ldr	r1, [sp, #16]
   19afc:	ldr	r0, [sp, #8]
   19b00:	bl	263c <InflateSkipData>
   19b04:	b	19a04 <ReadCompressedDataSlabN+0x28c>
   19b08:	ldr	r2, [sp, #248]	; 0xf8
   19b0c:	ldr	r1, [sp, #16]
   19b10:	ldr	r0, [sp, #8]
   19b14:	bl	263c <InflateSkipData>
   19b18:	ldr	r3, [sp, #260]	; 0x104
   19b1c:	ldr	r3, [r3]
   19b20:	add	r7, r7, r3
   19b24:	b	19c54 <ReadCompressedDataSlabN+0x4dc>
   19b28:	mov	r5, #0
   19b2c:	b	19cd0 <ReadCompressedDataSlabN+0x558>
   19b30:	sub	r4, r4, r1
   19b34:	add	r3, r6, r5, lsl #2
   19b38:	ldr	fp, [r3, #-4]
   19b3c:	ldr	r3, [r8]
   19b40:	mla	r3, r3, fp, r4
   19b44:	ldr	r2, [sp, #248]	; 0xf8
   19b48:	ldr	r1, [sp, #16]
   19b4c:	ldr	r0, [sp, #8]
   19b50:	bl	263c <InflateSkipData>
   19b54:	ldr	r1, [r8]
   19b58:	mla	r4, r1, fp, r4
   19b5c:	add	r7, r7, r4
   19b60:	add	r5, r5, #1
   19b64:	ldr	r3, [sp, #252]	; 0xfc
   19b68:	cmp	r3, r5
   19b6c:	beq	19c20 <ReadCompressedDataSlabN+0x4a8>
   19b70:	ldr	r0, [r9, r5, lsl #2]
   19b74:	add	r0, r0, #1
   19b78:	str	r0, [r9, r5, lsl #2]
   19b7c:	add	r8, r8, #4
   19b80:	ldr	r1, [sl, #4]!
   19b84:	bl	517e8 <__aeabi_idivmod>
   19b88:	cmp	r1, #0
   19b8c:	bne	19bec <ReadCompressedDataSlabN+0x474>
   19b90:	mov	r3, #0
   19b94:	str	r3, [r9, r5, lsl #2]
   19b98:	ldr	r4, [r6, r5, lsl #2]
   19b9c:	mov	r1, r4
   19ba0:	mov	r0, r7
   19ba4:	bl	517e8 <__aeabi_idivmod>
   19ba8:	cmp	r1, #0
   19bac:	bne	19b30 <ReadCompressedDataSlabN+0x3b8>
   19bb0:	ldr	r3, [r8]
   19bb4:	cmp	r3, #0
   19bb8:	beq	19b60 <ReadCompressedDataSlabN+0x3e8>
   19bbc:	add	fp, r6, r5, lsl #2
   19bc0:	ldr	r4, [fp, #-4]
   19bc4:	mul	r3, r4, r3
   19bc8:	ldr	r2, [sp, #248]	; 0xf8
   19bcc:	ldr	r1, [sp, #16]
   19bd0:	ldr	r0, [sp, #8]
   19bd4:	bl	263c <InflateSkipData>
   19bd8:	ldr	r3, [r8]
   19bdc:	mla	r7, r3, r4, r7
   19be0:	b	19b60 <ReadCompressedDataSlabN+0x3e8>
   19be4:	mov	r5, #1
   19be8:	b	19bf4 <ReadCompressedDataSlabN+0x47c>
   19bec:	ldr	r4, [sp, #264]	; 0x108
   19bf0:	ldr	fp, [sp, #268]	; 0x10c
   19bf4:	add	r3, sp, #208	; 0xd0
   19bf8:	add	r5, r3, r5, lsl #2
   19bfc:	ldr	r3, [r5, #-40]	; 0xffffffd8
   19c00:	cmp	r3, #0
   19c04:	beq	19c28 <ReadCompressedDataSlabN+0x4b0>
   19c08:	add	r7, r7, r3
   19c0c:	ldr	r2, [sp, #248]	; 0xf8
   19c10:	ldr	r1, [sp, #16]
   19c14:	ldr	r0, [sp, #8]
   19c18:	bl	263c <InflateSkipData>
   19c1c:	b	19c28 <ReadCompressedDataSlabN+0x4b0>
   19c20:	ldr	r4, [sp, #264]	; 0x108
   19c24:	ldr	fp, [sp, #268]	; 0x10c
   19c28:	ldr	r3, [fp]
   19c2c:	ldr	r2, [sp, #24]
   19c30:	add	r3, r2, r3
   19c34:	str	r3, [sp, #24]
   19c38:	ldr	r2, [sp, #20]
   19c3c:	cmp	r3, r2
   19c40:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   19c44:	ldr	r3, [sp, #260]	; 0x104
   19c48:	ldr	r3, [r3]
   19c4c:	cmp	r3, #0
   19c50:	bne	19b08 <ReadCompressedDataSlabN+0x390>
   19c54:	ldr	r3, [fp]
   19c58:	sub	r3, r3, #1
   19c5c:	cmp	r3, #0
   19c60:	ble	19b28 <ReadCompressedDataSlabN+0x3b0>
   19c64:	ldr	r3, [sp, #12]
   19c68:	ldr	r2, [sp, #24]
   19c6c:	add	r6, r3, r2, lsl #3
   19c70:	mov	r5, #0
   19c74:	ldr	r8, [sp, #248]	; 0xf8
   19c78:	ldr	sl, [sp, #16]
   19c7c:	mov	r3, #1
   19c80:	str	r3, [sp]
   19c84:	mov	r3, r8
   19c88:	mov	r2, r6
   19c8c:	mov	r1, sl
   19c90:	ldr	r0, [sp, #8]
   19c94:	bl	4ef4 <ReadCompressedDoubleData>
   19c98:	ldr	r3, [r4]
   19c9c:	sub	r3, r3, #1
   19ca0:	mov	r2, r8
   19ca4:	mov	r1, sl
   19ca8:	ldr	r0, [sp, #8]
   19cac:	bl	263c <InflateSkipData>
   19cb0:	ldr	r3, [r4]
   19cb4:	add	r7, r7, r3
   19cb8:	add	r5, r5, #1
   19cbc:	add	r6, r6, #8
   19cc0:	ldr	r3, [fp]
   19cc4:	sub	r3, r3, #1
   19cc8:	cmp	r3, r5
   19ccc:	bgt	19c7c <ReadCompressedDataSlabN+0x504>
   19cd0:	ldr	r3, [sp, #24]
   19cd4:	add	r2, r3, r5
   19cd8:	mov	r3, #1
   19cdc:	str	r3, [sp]
   19ce0:	ldr	r3, [sp, #248]	; 0xf8
   19ce4:	ldr	r1, [sp, #12]
   19ce8:	add	r2, r1, r2, lsl #3
   19cec:	ldr	r6, [sp, #16]
   19cf0:	mov	r1, r6
   19cf4:	ldr	r5, [sp, #8]
   19cf8:	mov	r0, r5
   19cfc:	bl	4ef4 <ReadCompressedDoubleData>
   19d00:	ldr	r2, [fp]
   19d04:	sub	r2, r2, #1
   19d08:	ldr	r3, [r4]
   19d0c:	mul	r2, r3, r2
   19d10:	ldr	r3, [sp, #256]	; 0x100
   19d14:	ldr	r3, [r3]
   19d18:	sub	r3, r3, r2
   19d1c:	ldr	r2, [sp, #260]	; 0x104
   19d20:	ldr	r2, [r2]
   19d24:	sub	r3, r3, r2
   19d28:	add	r7, r7, r3
   19d2c:	sub	r3, r3, #1
   19d30:	ldr	r2, [sp, #248]	; 0xf8
   19d34:	mov	r1, r6
   19d38:	mov	r0, r5
   19d3c:	bl	263c <InflateSkipData>
   19d40:	ldr	r3, [sp, #252]	; 0xfc
   19d44:	cmp	r3, #1
   19d48:	ble	19c28 <ReadCompressedDataSlabN+0x4b0>
   19d4c:	ldr	r0, [sp, #132]	; 0x84
   19d50:	add	r0, r0, #1
   19d54:	str	r0, [sp, #132]	; 0x84
   19d58:	ldr	r1, [fp, #4]
   19d5c:	bl	517e8 <__aeabi_idivmod>
   19d60:	cmp	r1, #0
   19d64:	bne	19be4 <ReadCompressedDataSlabN+0x46c>
   19d68:	add	sl, fp, #4
   19d6c:	ldr	r3, [sp, #260]	; 0x104
   19d70:	add	r8, r3, #4
   19d74:	mov	r5, #1
   19d78:	str	r4, [sp, #264]	; 0x108
   19d7c:	str	fp, [sp, #268]	; 0x10c
   19d80:	ldr	r6, [sp, #28]
   19d84:	b	19b90 <ReadCompressedDataSlabN+0x418>
   19d88:	ldr	r3, [r4]
   19d8c:	sub	r3, r3, #1
   19d90:	str	r3, [sp, #168]	; 0xa8
   19d94:	ldr	r3, [sp, #256]	; 0x100
   19d98:	ldr	r3, [r3]
   19d9c:	str	r3, [sp, #88]	; 0x58
   19da0:	ldr	r3, [fp]
   19da4:	str	r3, [sp, #20]
   19da8:	ldr	r3, [sp, #252]	; 0xfc
   19dac:	cmp	r3, #1
   19db0:	ble	19de8 <ReadCompressedDataSlabN+0x670>
   19db4:	str	r4, [sp, #16]
   19db8:	add	sl, sp, #172	; 0xac
   19dbc:	ldr	lr, [sp, #256]	; 0x100
   19dc0:	add	r9, sp, #88	; 0x58
   19dc4:	add	r8, fp, #4
   19dc8:	ldr	r3, [sp, #260]	; 0x104
   19dcc:	add	r6, r3, #4
   19dd0:	mov	r5, #2
   19dd4:	mov	r7, #0
   19dd8:	str	r4, [sp, #264]	; 0x108
   19ddc:	str	fp, [sp, #268]	; 0x10c
   19de0:	mov	fp, lr
   19de4:	b	1cc14 <ReadCompressedDataSlabN+0x349c>
   19de8:	mov	r7, #0
   19dec:	b	1cca0 <ReadCompressedDataSlabN+0x3528>
   19df0:	ldr	r3, [sp, #20]
   19df4:	cmp	r3, #0
   19df8:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   19dfc:	mov	r3, #0
   19e00:	str	r3, [sp, #24]
   19e04:	add	r3, sp, #32
   19e08:	str	r3, [sp, #16]
   19e0c:	add	r8, sp, #128	; 0x80
   19e10:	add	r3, sp, #88	; 0x58
   19e14:	str	fp, [sp, #268]	; 0x10c
   19e18:	mov	sl, r3
   19e1c:	b	19f2c <ReadCompressedDataSlabN+0x7b4>
   19e20:	ldr	r2, [sp, #248]	; 0xf8
   19e24:	ldr	r1, [sp, #16]
   19e28:	ldr	r0, [sp, #8]
   19e2c:	bl	263c <InflateSkipData>
   19e30:	ldr	r3, [sp, #260]	; 0x104
   19e34:	ldr	r3, [r3]
   19e38:	add	r7, r7, r3
   19e3c:	b	19f3c <ReadCompressedDataSlabN+0x7c4>
   19e40:	sub	r5, r5, r1
   19e44:	add	r3, sl, r4, lsl #2
   19e48:	ldr	fp, [r3, #-4]
   19e4c:	ldr	r3, [r6]
   19e50:	mla	r3, r3, fp, r5
   19e54:	ldr	r2, [sp, #248]	; 0xf8
   19e58:	ldr	r1, [sp, #16]
   19e5c:	ldr	r0, [sp, #8]
   19e60:	bl	263c <InflateSkipData>
   19e64:	ldr	r1, [r6]
   19e68:	mla	r5, r1, fp, r5
   19e6c:	add	r7, r7, r5
   19e70:	add	r4, r4, #1
   19e74:	ldr	r3, [sp, #252]	; 0xfc
   19e78:	cmp	r3, r4
   19e7c:	beq	19f0c <ReadCompressedDataSlabN+0x794>
   19e80:	ldr	r0, [r8, r4, lsl #2]
   19e84:	add	r0, r0, #1
   19e88:	str	r0, [r8, r4, lsl #2]
   19e8c:	add	r6, r6, #4
   19e90:	ldr	r1, [r9, #4]!
   19e94:	bl	517e8 <__aeabi_idivmod>
   19e98:	cmp	r1, #0
   19e9c:	bne	19ef8 <ReadCompressedDataSlabN+0x780>
   19ea0:	mov	r3, #0
   19ea4:	str	r3, [r8, r4, lsl #2]
   19ea8:	ldr	r5, [sl, r4, lsl #2]
   19eac:	mov	r1, r5
   19eb0:	mov	r0, r7
   19eb4:	bl	517e8 <__aeabi_idivmod>
   19eb8:	cmp	r1, #0
   19ebc:	bne	19e40 <ReadCompressedDataSlabN+0x6c8>
   19ec0:	ldr	r3, [r6]
   19ec4:	cmp	r3, #0
   19ec8:	beq	19e70 <ReadCompressedDataSlabN+0x6f8>
   19ecc:	add	fp, sl, r4, lsl #2
   19ed0:	ldr	r5, [fp, #-4]
   19ed4:	mul	r3, r5, r3
   19ed8:	ldr	r2, [sp, #248]	; 0xf8
   19edc:	ldr	r1, [sp, #16]
   19ee0:	ldr	r0, [sp, #8]
   19ee4:	bl	263c <InflateSkipData>
   19ee8:	ldr	r3, [r6]
   19eec:	mla	r7, r3, r5, r7
   19ef0:	b	19e70 <ReadCompressedDataSlabN+0x6f8>
   19ef4:	ldr	r4, [sp, #28]
   19ef8:	add	r3, sp, #208	; 0xd0
   19efc:	add	r4, r3, r4, lsl #2
   19f00:	ldr	r3, [r4, #-40]	; 0xffffffd8
   19f04:	cmp	r3, #0
   19f08:	bne	19ff8 <ReadCompressedDataSlabN+0x880>
   19f0c:	ldr	r3, [sp, #268]	; 0x10c
   19f10:	ldr	r3, [r3]
   19f14:	ldr	r2, [sp, #24]
   19f18:	add	r3, r2, r3
   19f1c:	str	r3, [sp, #24]
   19f20:	ldr	r2, [sp, #20]
   19f24:	cmp	r3, r2
   19f28:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   19f2c:	ldr	r3, [sp, #260]	; 0x104
   19f30:	ldr	r3, [r3]
   19f34:	cmp	r3, #0
   19f38:	bne	19e20 <ReadCompressedDataSlabN+0x6a8>
   19f3c:	ldr	r3, [sp, #268]	; 0x10c
   19f40:	ldr	r3, [r3]
   19f44:	str	r3, [sp]
   19f48:	ldr	r3, [sp, #248]	; 0xf8
   19f4c:	ldr	r2, [sp, #12]
   19f50:	ldr	r1, [sp, #24]
   19f54:	add	r2, r2, r1, lsl #2
   19f58:	ldr	r5, [sp, #16]
   19f5c:	mov	r1, r5
   19f60:	ldr	r4, [sp, #8]
   19f64:	mov	r0, r4
   19f68:	bl	7804 <ReadCompressedSingleData>
   19f6c:	ldr	r3, [sp, #256]	; 0x100
   19f70:	ldr	r3, [r3]
   19f74:	ldr	r2, [sp, #260]	; 0x104
   19f78:	ldr	r2, [r2]
   19f7c:	sub	r3, r3, r2
   19f80:	ldr	r2, [sp, #268]	; 0x10c
   19f84:	ldr	r2, [r2]
   19f88:	sub	r3, r3, r2
   19f8c:	ldr	r2, [sp, #248]	; 0xf8
   19f90:	mov	r1, r5
   19f94:	mov	r0, r4
   19f98:	bl	263c <InflateSkipData>
   19f9c:	ldr	r3, [sp, #256]	; 0x100
   19fa0:	ldr	r3, [r3]
   19fa4:	ldr	r2, [sp, #260]	; 0x104
   19fa8:	ldr	r2, [r2]
   19fac:	sub	r3, r3, r2
   19fb0:	add	r7, r3, r7
   19fb4:	ldr	r3, [sp, #252]	; 0xfc
   19fb8:	cmp	r3, #1
   19fbc:	ble	19f0c <ReadCompressedDataSlabN+0x794>
   19fc0:	ldr	r0, [sp, #132]	; 0x84
   19fc4:	add	r0, r0, #1
   19fc8:	str	r0, [sp, #132]	; 0x84
   19fcc:	ldr	r3, [sp, #268]	; 0x10c
   19fd0:	ldr	r1, [r3, #4]
   19fd4:	bl	517e8 <__aeabi_idivmod>
   19fd8:	cmp	r1, #0
   19fdc:	bne	19ef4 <ReadCompressedDataSlabN+0x77c>
   19fe0:	ldr	r3, [sp, #268]	; 0x10c
   19fe4:	add	r9, r3, #4
   19fe8:	ldr	r3, [sp, #260]	; 0x104
   19fec:	add	r6, r3, #4
   19ff0:	ldr	r4, [sp, #28]
   19ff4:	b	19ea0 <ReadCompressedDataSlabN+0x728>
   19ff8:	add	r7, r7, r3
   19ffc:	ldr	r2, [sp, #248]	; 0xf8
   1a000:	ldr	r1, [sp, #16]
   1a004:	ldr	r0, [sp, #8]
   1a008:	bl	263c <InflateSkipData>
   1a00c:	b	19f0c <ReadCompressedDataSlabN+0x794>
   1a010:	ldr	r2, [sp, #248]	; 0xf8
   1a014:	ldr	r1, [sp, #16]
   1a018:	ldr	r0, [sp, #8]
   1a01c:	bl	263c <InflateSkipData>
   1a020:	ldr	r3, [sp, #260]	; 0x104
   1a024:	ldr	r3, [r3]
   1a028:	add	r7, r7, r3
   1a02c:	b	1a15c <ReadCompressedDataSlabN+0x9e4>
   1a030:	mov	r5, #0
   1a034:	b	1a1d8 <ReadCompressedDataSlabN+0xa60>
   1a038:	sub	r4, r4, r1
   1a03c:	add	r3, r6, r5, lsl #2
   1a040:	ldr	fp, [r3, #-4]
   1a044:	ldr	r3, [r8]
   1a048:	mla	r3, r3, fp, r4
   1a04c:	ldr	r2, [sp, #248]	; 0xf8
   1a050:	ldr	r1, [sp, #16]
   1a054:	ldr	r0, [sp, #8]
   1a058:	bl	263c <InflateSkipData>
   1a05c:	ldr	r1, [r8]
   1a060:	mla	r4, r1, fp, r4
   1a064:	add	r7, r7, r4
   1a068:	add	r5, r5, #1
   1a06c:	ldr	r3, [sp, #252]	; 0xfc
   1a070:	cmp	r3, r5
   1a074:	beq	1a128 <ReadCompressedDataSlabN+0x9b0>
   1a078:	ldr	r0, [r9, r5, lsl #2]
   1a07c:	add	r0, r0, #1
   1a080:	str	r0, [r9, r5, lsl #2]
   1a084:	add	r8, r8, #4
   1a088:	ldr	r1, [sl, #4]!
   1a08c:	bl	517e8 <__aeabi_idivmod>
   1a090:	cmp	r1, #0
   1a094:	bne	1a0f4 <ReadCompressedDataSlabN+0x97c>
   1a098:	mov	r3, #0
   1a09c:	str	r3, [r9, r5, lsl #2]
   1a0a0:	ldr	r4, [r6, r5, lsl #2]
   1a0a4:	mov	r1, r4
   1a0a8:	mov	r0, r7
   1a0ac:	bl	517e8 <__aeabi_idivmod>
   1a0b0:	cmp	r1, #0
   1a0b4:	bne	1a038 <ReadCompressedDataSlabN+0x8c0>
   1a0b8:	ldr	r3, [r8]
   1a0bc:	cmp	r3, #0
   1a0c0:	beq	1a068 <ReadCompressedDataSlabN+0x8f0>
   1a0c4:	add	fp, r6, r5, lsl #2
   1a0c8:	ldr	r4, [fp, #-4]
   1a0cc:	mul	r3, r4, r3
   1a0d0:	ldr	r2, [sp, #248]	; 0xf8
   1a0d4:	ldr	r1, [sp, #16]
   1a0d8:	ldr	r0, [sp, #8]
   1a0dc:	bl	263c <InflateSkipData>
   1a0e0:	ldr	r3, [r8]
   1a0e4:	mla	r7, r3, r4, r7
   1a0e8:	b	1a068 <ReadCompressedDataSlabN+0x8f0>
   1a0ec:	mov	r5, #1
   1a0f0:	b	1a0fc <ReadCompressedDataSlabN+0x984>
   1a0f4:	ldr	r4, [sp, #264]	; 0x108
   1a0f8:	ldr	fp, [sp, #268]	; 0x10c
   1a0fc:	add	r3, sp, #208	; 0xd0
   1a100:	add	r5, r3, r5, lsl #2
   1a104:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1a108:	cmp	r3, #0
   1a10c:	beq	1a130 <ReadCompressedDataSlabN+0x9b8>
   1a110:	add	r7, r7, r3
   1a114:	ldr	r2, [sp, #248]	; 0xf8
   1a118:	ldr	r1, [sp, #16]
   1a11c:	ldr	r0, [sp, #8]
   1a120:	bl	263c <InflateSkipData>
   1a124:	b	1a130 <ReadCompressedDataSlabN+0x9b8>
   1a128:	ldr	r4, [sp, #264]	; 0x108
   1a12c:	ldr	fp, [sp, #268]	; 0x10c
   1a130:	ldr	r3, [fp]
   1a134:	ldr	r2, [sp, #24]
   1a138:	add	r3, r2, r3
   1a13c:	str	r3, [sp, #24]
   1a140:	ldr	r2, [sp, #20]
   1a144:	cmp	r3, r2
   1a148:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1a14c:	ldr	r3, [sp, #260]	; 0x104
   1a150:	ldr	r3, [r3]
   1a154:	cmp	r3, #0
   1a158:	bne	1a010 <ReadCompressedDataSlabN+0x898>
   1a15c:	ldr	r3, [fp]
   1a160:	sub	r3, r3, #1
   1a164:	cmp	r3, #0
   1a168:	ble	1a030 <ReadCompressedDataSlabN+0x8b8>
   1a16c:	ldr	r3, [sp, #12]
   1a170:	ldr	r2, [sp, #24]
   1a174:	add	r6, r3, r2, lsl #2
   1a178:	mov	r5, #0
   1a17c:	ldr	r8, [sp, #248]	; 0xf8
   1a180:	ldr	sl, [sp, #16]
   1a184:	mov	r3, #1
   1a188:	str	r3, [sp]
   1a18c:	mov	r3, r8
   1a190:	mov	r2, r6
   1a194:	mov	r1, sl
   1a198:	ldr	r0, [sp, #8]
   1a19c:	bl	7804 <ReadCompressedSingleData>
   1a1a0:	ldr	r3, [r4]
   1a1a4:	sub	r3, r3, #1
   1a1a8:	mov	r2, r8
   1a1ac:	mov	r1, sl
   1a1b0:	ldr	r0, [sp, #8]
   1a1b4:	bl	263c <InflateSkipData>
   1a1b8:	ldr	r3, [r4]
   1a1bc:	add	r7, r7, r3
   1a1c0:	add	r5, r5, #1
   1a1c4:	add	r6, r6, #4
   1a1c8:	ldr	r3, [fp]
   1a1cc:	sub	r3, r3, #1
   1a1d0:	cmp	r3, r5
   1a1d4:	bgt	1a184 <ReadCompressedDataSlabN+0xa0c>
   1a1d8:	ldr	r3, [sp, #24]
   1a1dc:	add	r2, r3, r5
   1a1e0:	mov	r3, #1
   1a1e4:	str	r3, [sp]
   1a1e8:	ldr	r3, [sp, #248]	; 0xf8
   1a1ec:	ldr	r1, [sp, #12]
   1a1f0:	add	r2, r1, r2, lsl #2
   1a1f4:	ldr	r6, [sp, #16]
   1a1f8:	mov	r1, r6
   1a1fc:	ldr	r5, [sp, #8]
   1a200:	mov	r0, r5
   1a204:	bl	7804 <ReadCompressedSingleData>
   1a208:	ldr	r2, [fp]
   1a20c:	sub	r2, r2, #1
   1a210:	ldr	r3, [r4]
   1a214:	mul	r2, r3, r2
   1a218:	ldr	r3, [sp, #256]	; 0x100
   1a21c:	ldr	r3, [r3]
   1a220:	sub	r3, r3, r2
   1a224:	ldr	r2, [sp, #260]	; 0x104
   1a228:	ldr	r2, [r2]
   1a22c:	sub	r3, r3, r2
   1a230:	add	r7, r7, r3
   1a234:	sub	r3, r3, #1
   1a238:	ldr	r2, [sp, #248]	; 0xf8
   1a23c:	mov	r1, r6
   1a240:	mov	r0, r5
   1a244:	bl	263c <InflateSkipData>
   1a248:	ldr	r3, [sp, #252]	; 0xfc
   1a24c:	cmp	r3, #1
   1a250:	ble	1a130 <ReadCompressedDataSlabN+0x9b8>
   1a254:	ldr	r0, [sp, #132]	; 0x84
   1a258:	add	r0, r0, #1
   1a25c:	str	r0, [sp, #132]	; 0x84
   1a260:	ldr	r1, [fp, #4]
   1a264:	bl	517e8 <__aeabi_idivmod>
   1a268:	cmp	r1, #0
   1a26c:	bne	1a0ec <ReadCompressedDataSlabN+0x974>
   1a270:	add	sl, fp, #4
   1a274:	ldr	r3, [sp, #260]	; 0x104
   1a278:	add	r8, r3, #4
   1a27c:	mov	r5, #1
   1a280:	str	r4, [sp, #264]	; 0x108
   1a284:	str	fp, [sp, #268]	; 0x10c
   1a288:	ldr	r6, [sp, #28]
   1a28c:	b	1a098 <ReadCompressedDataSlabN+0x920>
   1a290:	ldr	r3, [r4]
   1a294:	sub	r3, r3, #1
   1a298:	str	r3, [sp, #168]	; 0xa8
   1a29c:	ldr	r3, [sp, #256]	; 0x100
   1a2a0:	ldr	r3, [r3]
   1a2a4:	str	r3, [sp, #88]	; 0x58
   1a2a8:	ldr	r3, [fp]
   1a2ac:	str	r3, [sp, #20]
   1a2b0:	ldr	r3, [sp, #252]	; 0xfc
   1a2b4:	cmp	r3, #1
   1a2b8:	ble	1a2f0 <ReadCompressedDataSlabN+0xb78>
   1a2bc:	str	r4, [sp, #16]
   1a2c0:	add	sl, sp, #172	; 0xac
   1a2c4:	ldr	lr, [sp, #256]	; 0x100
   1a2c8:	add	r9, sp, #88	; 0x58
   1a2cc:	add	r8, fp, #4
   1a2d0:	ldr	r3, [sp, #260]	; 0x104
   1a2d4:	add	r6, r3, #4
   1a2d8:	mov	r5, #2
   1a2dc:	mov	r7, #0
   1a2e0:	str	r4, [sp, #264]	; 0x108
   1a2e4:	str	fp, [sp, #268]	; 0x10c
   1a2e8:	mov	fp, lr
   1a2ec:	b	1cd20 <ReadCompressedDataSlabN+0x35a8>
   1a2f0:	mov	r7, #0
   1a2f4:	b	1cdac <ReadCompressedDataSlabN+0x3634>
   1a2f8:	ldr	r3, [sp, #20]
   1a2fc:	cmp	r3, #0
   1a300:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1a304:	mov	r3, #0
   1a308:	str	r3, [sp, #24]
   1a30c:	add	r3, sp, #32
   1a310:	str	r3, [sp, #16]
   1a314:	add	r8, sp, #128	; 0x80
   1a318:	add	r3, sp, #88	; 0x58
   1a31c:	str	fp, [sp, #268]	; 0x10c
   1a320:	mov	sl, r3
   1a324:	b	1a434 <ReadCompressedDataSlabN+0xcbc>
   1a328:	ldr	r2, [sp, #248]	; 0xf8
   1a32c:	ldr	r1, [sp, #16]
   1a330:	ldr	r0, [sp, #8]
   1a334:	bl	263c <InflateSkipData>
   1a338:	ldr	r3, [sp, #260]	; 0x104
   1a33c:	ldr	r3, [r3]
   1a340:	add	r7, r7, r3
   1a344:	b	1a444 <ReadCompressedDataSlabN+0xccc>
   1a348:	sub	r5, r5, r1
   1a34c:	add	r3, sl, r4, lsl #2
   1a350:	ldr	fp, [r3, #-4]
   1a354:	ldr	r3, [r6]
   1a358:	mla	r3, r3, fp, r5
   1a35c:	ldr	r2, [sp, #248]	; 0xf8
   1a360:	ldr	r1, [sp, #16]
   1a364:	ldr	r0, [sp, #8]
   1a368:	bl	263c <InflateSkipData>
   1a36c:	ldr	r1, [r6]
   1a370:	mla	r5, r1, fp, r5
   1a374:	add	r7, r7, r5
   1a378:	add	r4, r4, #1
   1a37c:	ldr	r3, [sp, #252]	; 0xfc
   1a380:	cmp	r3, r4
   1a384:	beq	1a414 <ReadCompressedDataSlabN+0xc9c>
   1a388:	ldr	r0, [r8, r4, lsl #2]
   1a38c:	add	r0, r0, #1
   1a390:	str	r0, [r8, r4, lsl #2]
   1a394:	add	r6, r6, #4
   1a398:	ldr	r1, [r9, #4]!
   1a39c:	bl	517e8 <__aeabi_idivmod>
   1a3a0:	cmp	r1, #0
   1a3a4:	bne	1a400 <ReadCompressedDataSlabN+0xc88>
   1a3a8:	mov	r3, #0
   1a3ac:	str	r3, [r8, r4, lsl #2]
   1a3b0:	ldr	r5, [sl, r4, lsl #2]
   1a3b4:	mov	r1, r5
   1a3b8:	mov	r0, r7
   1a3bc:	bl	517e8 <__aeabi_idivmod>
   1a3c0:	cmp	r1, #0
   1a3c4:	bne	1a348 <ReadCompressedDataSlabN+0xbd0>
   1a3c8:	ldr	r3, [r6]
   1a3cc:	cmp	r3, #0
   1a3d0:	beq	1a378 <ReadCompressedDataSlabN+0xc00>
   1a3d4:	add	fp, sl, r4, lsl #2
   1a3d8:	ldr	r5, [fp, #-4]
   1a3dc:	mul	r3, r5, r3
   1a3e0:	ldr	r2, [sp, #248]	; 0xf8
   1a3e4:	ldr	r1, [sp, #16]
   1a3e8:	ldr	r0, [sp, #8]
   1a3ec:	bl	263c <InflateSkipData>
   1a3f0:	ldr	r3, [r6]
   1a3f4:	mla	r7, r3, r5, r7
   1a3f8:	b	1a378 <ReadCompressedDataSlabN+0xc00>
   1a3fc:	ldr	r4, [sp, #28]
   1a400:	add	r3, sp, #208	; 0xd0
   1a404:	add	r4, r3, r4, lsl #2
   1a408:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1a40c:	cmp	r3, #0
   1a410:	bne	1a500 <ReadCompressedDataSlabN+0xd88>
   1a414:	ldr	r3, [sp, #268]	; 0x10c
   1a418:	ldr	r3, [r3]
   1a41c:	ldr	r2, [sp, #24]
   1a420:	add	r3, r2, r3
   1a424:	str	r3, [sp, #24]
   1a428:	ldr	r2, [sp, #20]
   1a42c:	cmp	r3, r2
   1a430:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1a434:	ldr	r3, [sp, #260]	; 0x104
   1a438:	ldr	r3, [r3]
   1a43c:	cmp	r3, #0
   1a440:	bne	1a328 <ReadCompressedDataSlabN+0xbb0>
   1a444:	ldr	r3, [sp, #268]	; 0x10c
   1a448:	ldr	r3, [r3]
   1a44c:	str	r3, [sp]
   1a450:	ldr	r3, [sp, #248]	; 0xf8
   1a454:	ldr	r2, [sp, #12]
   1a458:	ldr	r1, [sp, #24]
   1a45c:	add	r2, r2, r1, lsl #3
   1a460:	ldr	r5, [sp, #16]
   1a464:	mov	r1, r5
   1a468:	ldr	r4, [sp, #8]
   1a46c:	mov	r0, r4
   1a470:	bl	9464 <ReadCompressedInt64Data>
   1a474:	ldr	r3, [sp, #256]	; 0x100
   1a478:	ldr	r3, [r3]
   1a47c:	ldr	r2, [sp, #260]	; 0x104
   1a480:	ldr	r2, [r2]
   1a484:	sub	r3, r3, r2
   1a488:	ldr	r2, [sp, #268]	; 0x10c
   1a48c:	ldr	r2, [r2]
   1a490:	sub	r3, r3, r2
   1a494:	ldr	r2, [sp, #248]	; 0xf8
   1a498:	mov	r1, r5
   1a49c:	mov	r0, r4
   1a4a0:	bl	263c <InflateSkipData>
   1a4a4:	ldr	r3, [sp, #256]	; 0x100
   1a4a8:	ldr	r3, [r3]
   1a4ac:	ldr	r2, [sp, #260]	; 0x104
   1a4b0:	ldr	r2, [r2]
   1a4b4:	sub	r3, r3, r2
   1a4b8:	add	r7, r3, r7
   1a4bc:	ldr	r3, [sp, #252]	; 0xfc
   1a4c0:	cmp	r3, #1
   1a4c4:	ble	1a414 <ReadCompressedDataSlabN+0xc9c>
   1a4c8:	ldr	r0, [sp, #132]	; 0x84
   1a4cc:	add	r0, r0, #1
   1a4d0:	str	r0, [sp, #132]	; 0x84
   1a4d4:	ldr	r3, [sp, #268]	; 0x10c
   1a4d8:	ldr	r1, [r3, #4]
   1a4dc:	bl	517e8 <__aeabi_idivmod>
   1a4e0:	cmp	r1, #0
   1a4e4:	bne	1a3fc <ReadCompressedDataSlabN+0xc84>
   1a4e8:	ldr	r3, [sp, #268]	; 0x10c
   1a4ec:	add	r9, r3, #4
   1a4f0:	ldr	r3, [sp, #260]	; 0x104
   1a4f4:	add	r6, r3, #4
   1a4f8:	ldr	r4, [sp, #28]
   1a4fc:	b	1a3a8 <ReadCompressedDataSlabN+0xc30>
   1a500:	add	r7, r7, r3
   1a504:	ldr	r2, [sp, #248]	; 0xf8
   1a508:	ldr	r1, [sp, #16]
   1a50c:	ldr	r0, [sp, #8]
   1a510:	bl	263c <InflateSkipData>
   1a514:	b	1a414 <ReadCompressedDataSlabN+0xc9c>
   1a518:	ldr	r2, [sp, #248]	; 0xf8
   1a51c:	ldr	r1, [sp, #16]
   1a520:	ldr	r0, [sp, #8]
   1a524:	bl	263c <InflateSkipData>
   1a528:	ldr	r3, [sp, #260]	; 0x104
   1a52c:	ldr	r3, [r3]
   1a530:	add	r7, r7, r3
   1a534:	b	1a664 <ReadCompressedDataSlabN+0xeec>
   1a538:	mov	r5, #0
   1a53c:	b	1a6e0 <ReadCompressedDataSlabN+0xf68>
   1a540:	sub	r4, r4, r1
   1a544:	add	r3, r6, r5, lsl #2
   1a548:	ldr	fp, [r3, #-4]
   1a54c:	ldr	r3, [r8]
   1a550:	mla	r3, r3, fp, r4
   1a554:	ldr	r2, [sp, #248]	; 0xf8
   1a558:	ldr	r1, [sp, #16]
   1a55c:	ldr	r0, [sp, #8]
   1a560:	bl	263c <InflateSkipData>
   1a564:	ldr	r1, [r8]
   1a568:	mla	r4, r1, fp, r4
   1a56c:	add	r7, r7, r4
   1a570:	add	r5, r5, #1
   1a574:	ldr	r3, [sp, #252]	; 0xfc
   1a578:	cmp	r3, r5
   1a57c:	beq	1a630 <ReadCompressedDataSlabN+0xeb8>
   1a580:	ldr	r0, [r9, r5, lsl #2]
   1a584:	add	r0, r0, #1
   1a588:	str	r0, [r9, r5, lsl #2]
   1a58c:	add	r8, r8, #4
   1a590:	ldr	r1, [sl, #4]!
   1a594:	bl	517e8 <__aeabi_idivmod>
   1a598:	cmp	r1, #0
   1a59c:	bne	1a5fc <ReadCompressedDataSlabN+0xe84>
   1a5a0:	mov	r3, #0
   1a5a4:	str	r3, [r9, r5, lsl #2]
   1a5a8:	ldr	r4, [r6, r5, lsl #2]
   1a5ac:	mov	r1, r4
   1a5b0:	mov	r0, r7
   1a5b4:	bl	517e8 <__aeabi_idivmod>
   1a5b8:	cmp	r1, #0
   1a5bc:	bne	1a540 <ReadCompressedDataSlabN+0xdc8>
   1a5c0:	ldr	r3, [r8]
   1a5c4:	cmp	r3, #0
   1a5c8:	beq	1a570 <ReadCompressedDataSlabN+0xdf8>
   1a5cc:	add	fp, r6, r5, lsl #2
   1a5d0:	ldr	r4, [fp, #-4]
   1a5d4:	mul	r3, r4, r3
   1a5d8:	ldr	r2, [sp, #248]	; 0xf8
   1a5dc:	ldr	r1, [sp, #16]
   1a5e0:	ldr	r0, [sp, #8]
   1a5e4:	bl	263c <InflateSkipData>
   1a5e8:	ldr	r3, [r8]
   1a5ec:	mla	r7, r3, r4, r7
   1a5f0:	b	1a570 <ReadCompressedDataSlabN+0xdf8>
   1a5f4:	mov	r5, #1
   1a5f8:	b	1a604 <ReadCompressedDataSlabN+0xe8c>
   1a5fc:	ldr	r4, [sp, #264]	; 0x108
   1a600:	ldr	fp, [sp, #268]	; 0x10c
   1a604:	add	r3, sp, #208	; 0xd0
   1a608:	add	r5, r3, r5, lsl #2
   1a60c:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1a610:	cmp	r3, #0
   1a614:	beq	1a638 <ReadCompressedDataSlabN+0xec0>
   1a618:	add	r7, r7, r3
   1a61c:	ldr	r2, [sp, #248]	; 0xf8
   1a620:	ldr	r1, [sp, #16]
   1a624:	ldr	r0, [sp, #8]
   1a628:	bl	263c <InflateSkipData>
   1a62c:	b	1a638 <ReadCompressedDataSlabN+0xec0>
   1a630:	ldr	r4, [sp, #264]	; 0x108
   1a634:	ldr	fp, [sp, #268]	; 0x10c
   1a638:	ldr	r3, [fp]
   1a63c:	ldr	r2, [sp, #24]
   1a640:	add	r3, r2, r3
   1a644:	str	r3, [sp, #24]
   1a648:	ldr	r2, [sp, #20]
   1a64c:	cmp	r3, r2
   1a650:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1a654:	ldr	r3, [sp, #260]	; 0x104
   1a658:	ldr	r3, [r3]
   1a65c:	cmp	r3, #0
   1a660:	bne	1a518 <ReadCompressedDataSlabN+0xda0>
   1a664:	ldr	r3, [fp]
   1a668:	sub	r3, r3, #1
   1a66c:	cmp	r3, #0
   1a670:	ble	1a538 <ReadCompressedDataSlabN+0xdc0>
   1a674:	ldr	r3, [sp, #12]
   1a678:	ldr	r2, [sp, #24]
   1a67c:	add	r6, r3, r2, lsl #3
   1a680:	mov	r5, #0
   1a684:	ldr	r8, [sp, #248]	; 0xf8
   1a688:	ldr	sl, [sp, #16]
   1a68c:	mov	r3, #1
   1a690:	str	r3, [sp]
   1a694:	mov	r3, r8
   1a698:	mov	r2, r6
   1a69c:	mov	r1, sl
   1a6a0:	ldr	r0, [sp, #8]
   1a6a4:	bl	9464 <ReadCompressedInt64Data>
   1a6a8:	ldr	r3, [r4]
   1a6ac:	sub	r3, r3, #1
   1a6b0:	mov	r2, r8
   1a6b4:	mov	r1, sl
   1a6b8:	ldr	r0, [sp, #8]
   1a6bc:	bl	263c <InflateSkipData>
   1a6c0:	ldr	r3, [r4]
   1a6c4:	add	r7, r7, r3
   1a6c8:	add	r5, r5, #1
   1a6cc:	add	r6, r6, #8
   1a6d0:	ldr	r3, [fp]
   1a6d4:	sub	r3, r3, #1
   1a6d8:	cmp	r3, r5
   1a6dc:	bgt	1a68c <ReadCompressedDataSlabN+0xf14>
   1a6e0:	ldr	r3, [sp, #24]
   1a6e4:	add	r2, r3, r5
   1a6e8:	mov	r3, #1
   1a6ec:	str	r3, [sp]
   1a6f0:	ldr	r3, [sp, #248]	; 0xf8
   1a6f4:	ldr	r1, [sp, #12]
   1a6f8:	add	r2, r1, r2, lsl #3
   1a6fc:	ldr	r6, [sp, #16]
   1a700:	mov	r1, r6
   1a704:	ldr	r5, [sp, #8]
   1a708:	mov	r0, r5
   1a70c:	bl	9464 <ReadCompressedInt64Data>
   1a710:	ldr	r2, [fp]
   1a714:	sub	r2, r2, #1
   1a718:	ldr	r3, [r4]
   1a71c:	mul	r2, r3, r2
   1a720:	ldr	r3, [sp, #256]	; 0x100
   1a724:	ldr	r3, [r3]
   1a728:	sub	r3, r3, r2
   1a72c:	ldr	r2, [sp, #260]	; 0x104
   1a730:	ldr	r2, [r2]
   1a734:	sub	r3, r3, r2
   1a738:	add	r7, r7, r3
   1a73c:	sub	r3, r3, #1
   1a740:	ldr	r2, [sp, #248]	; 0xf8
   1a744:	mov	r1, r6
   1a748:	mov	r0, r5
   1a74c:	bl	263c <InflateSkipData>
   1a750:	ldr	r3, [sp, #252]	; 0xfc
   1a754:	cmp	r3, #1
   1a758:	ble	1a638 <ReadCompressedDataSlabN+0xec0>
   1a75c:	ldr	r0, [sp, #132]	; 0x84
   1a760:	add	r0, r0, #1
   1a764:	str	r0, [sp, #132]	; 0x84
   1a768:	ldr	r1, [fp, #4]
   1a76c:	bl	517e8 <__aeabi_idivmod>
   1a770:	cmp	r1, #0
   1a774:	bne	1a5f4 <ReadCompressedDataSlabN+0xe7c>
   1a778:	add	sl, fp, #4
   1a77c:	ldr	r3, [sp, #260]	; 0x104
   1a780:	add	r8, r3, #4
   1a784:	mov	r5, #1
   1a788:	str	r4, [sp, #264]	; 0x108
   1a78c:	str	fp, [sp, #268]	; 0x10c
   1a790:	ldr	r6, [sp, #28]
   1a794:	b	1a5a0 <ReadCompressedDataSlabN+0xe28>
   1a798:	ldr	r3, [r4]
   1a79c:	sub	r3, r3, #1
   1a7a0:	str	r3, [sp, #168]	; 0xa8
   1a7a4:	ldr	r3, [sp, #256]	; 0x100
   1a7a8:	ldr	r3, [r3]
   1a7ac:	str	r3, [sp, #88]	; 0x58
   1a7b0:	ldr	r3, [fp]
   1a7b4:	str	r3, [sp, #20]
   1a7b8:	ldr	r3, [sp, #252]	; 0xfc
   1a7bc:	cmp	r3, #1
   1a7c0:	ble	1a7f8 <ReadCompressedDataSlabN+0x1080>
   1a7c4:	str	r4, [sp, #16]
   1a7c8:	add	sl, sp, #172	; 0xac
   1a7cc:	ldr	lr, [sp, #256]	; 0x100
   1a7d0:	add	r9, sp, #88	; 0x58
   1a7d4:	add	r8, fp, #4
   1a7d8:	ldr	r3, [sp, #260]	; 0x104
   1a7dc:	add	r6, r3, #4
   1a7e0:	mov	r5, #2
   1a7e4:	mov	r7, #0
   1a7e8:	str	r4, [sp, #264]	; 0x108
   1a7ec:	str	fp, [sp, #268]	; 0x10c
   1a7f0:	mov	fp, lr
   1a7f4:	b	1ce2c <ReadCompressedDataSlabN+0x36b4>
   1a7f8:	mov	r7, #0
   1a7fc:	b	1ceb8 <ReadCompressedDataSlabN+0x3740>
   1a800:	ldr	r3, [sp, #20]
   1a804:	cmp	r3, #0
   1a808:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1a80c:	mov	r3, #0
   1a810:	str	r3, [sp, #24]
   1a814:	add	r3, sp, #32
   1a818:	str	r3, [sp, #16]
   1a81c:	add	r8, sp, #128	; 0x80
   1a820:	add	r3, sp, #88	; 0x58
   1a824:	str	fp, [sp, #268]	; 0x10c
   1a828:	mov	sl, r3
   1a82c:	b	1a93c <ReadCompressedDataSlabN+0x11c4>
   1a830:	ldr	r2, [sp, #248]	; 0xf8
   1a834:	ldr	r1, [sp, #16]
   1a838:	ldr	r0, [sp, #8]
   1a83c:	bl	263c <InflateSkipData>
   1a840:	ldr	r3, [sp, #260]	; 0x104
   1a844:	ldr	r3, [r3]
   1a848:	add	r7, r7, r3
   1a84c:	b	1a94c <ReadCompressedDataSlabN+0x11d4>
   1a850:	sub	r5, r5, r1
   1a854:	add	r3, sl, r4, lsl #2
   1a858:	ldr	fp, [r3, #-4]
   1a85c:	ldr	r3, [r6]
   1a860:	mla	r3, r3, fp, r5
   1a864:	ldr	r2, [sp, #248]	; 0xf8
   1a868:	ldr	r1, [sp, #16]
   1a86c:	ldr	r0, [sp, #8]
   1a870:	bl	263c <InflateSkipData>
   1a874:	ldr	r1, [r6]
   1a878:	mla	r5, r1, fp, r5
   1a87c:	add	r7, r7, r5
   1a880:	add	r4, r4, #1
   1a884:	ldr	r3, [sp, #252]	; 0xfc
   1a888:	cmp	r3, r4
   1a88c:	beq	1a91c <ReadCompressedDataSlabN+0x11a4>
   1a890:	ldr	r0, [r8, r4, lsl #2]
   1a894:	add	r0, r0, #1
   1a898:	str	r0, [r8, r4, lsl #2]
   1a89c:	add	r6, r6, #4
   1a8a0:	ldr	r1, [r9, #4]!
   1a8a4:	bl	517e8 <__aeabi_idivmod>
   1a8a8:	cmp	r1, #0
   1a8ac:	bne	1a908 <ReadCompressedDataSlabN+0x1190>
   1a8b0:	mov	r3, #0
   1a8b4:	str	r3, [r8, r4, lsl #2]
   1a8b8:	ldr	r5, [sl, r4, lsl #2]
   1a8bc:	mov	r1, r5
   1a8c0:	mov	r0, r7
   1a8c4:	bl	517e8 <__aeabi_idivmod>
   1a8c8:	cmp	r1, #0
   1a8cc:	bne	1a850 <ReadCompressedDataSlabN+0x10d8>
   1a8d0:	ldr	r3, [r6]
   1a8d4:	cmp	r3, #0
   1a8d8:	beq	1a880 <ReadCompressedDataSlabN+0x1108>
   1a8dc:	add	fp, sl, r4, lsl #2
   1a8e0:	ldr	r5, [fp, #-4]
   1a8e4:	mul	r3, r5, r3
   1a8e8:	ldr	r2, [sp, #248]	; 0xf8
   1a8ec:	ldr	r1, [sp, #16]
   1a8f0:	ldr	r0, [sp, #8]
   1a8f4:	bl	263c <InflateSkipData>
   1a8f8:	ldr	r3, [r6]
   1a8fc:	mla	r7, r3, r5, r7
   1a900:	b	1a880 <ReadCompressedDataSlabN+0x1108>
   1a904:	ldr	r4, [sp, #28]
   1a908:	add	r3, sp, #208	; 0xd0
   1a90c:	add	r4, r3, r4, lsl #2
   1a910:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1a914:	cmp	r3, #0
   1a918:	bne	1aa08 <ReadCompressedDataSlabN+0x1290>
   1a91c:	ldr	r3, [sp, #268]	; 0x10c
   1a920:	ldr	r3, [r3]
   1a924:	ldr	r2, [sp, #24]
   1a928:	add	r3, r2, r3
   1a92c:	str	r3, [sp, #24]
   1a930:	ldr	r2, [sp, #20]
   1a934:	cmp	r3, r2
   1a938:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1a93c:	ldr	r3, [sp, #260]	; 0x104
   1a940:	ldr	r3, [r3]
   1a944:	cmp	r3, #0
   1a948:	bne	1a830 <ReadCompressedDataSlabN+0x10b8>
   1a94c:	ldr	r3, [sp, #268]	; 0x10c
   1a950:	ldr	r3, [r3]
   1a954:	str	r3, [sp]
   1a958:	ldr	r3, [sp, #248]	; 0xf8
   1a95c:	ldr	r2, [sp, #12]
   1a960:	ldr	r1, [sp, #24]
   1a964:	add	r2, r2, r1, lsl #3
   1a968:	ldr	r5, [sp, #16]
   1a96c:	mov	r1, r5
   1a970:	ldr	r4, [sp, #8]
   1a974:	mov	r0, r4
   1a978:	bl	b0fc <ReadCompressedUInt64Data>
   1a97c:	ldr	r3, [sp, #256]	; 0x100
   1a980:	ldr	r3, [r3]
   1a984:	ldr	r2, [sp, #260]	; 0x104
   1a988:	ldr	r2, [r2]
   1a98c:	sub	r3, r3, r2
   1a990:	ldr	r2, [sp, #268]	; 0x10c
   1a994:	ldr	r2, [r2]
   1a998:	sub	r3, r3, r2
   1a99c:	ldr	r2, [sp, #248]	; 0xf8
   1a9a0:	mov	r1, r5
   1a9a4:	mov	r0, r4
   1a9a8:	bl	263c <InflateSkipData>
   1a9ac:	ldr	r3, [sp, #256]	; 0x100
   1a9b0:	ldr	r3, [r3]
   1a9b4:	ldr	r2, [sp, #260]	; 0x104
   1a9b8:	ldr	r2, [r2]
   1a9bc:	sub	r3, r3, r2
   1a9c0:	add	r7, r3, r7
   1a9c4:	ldr	r3, [sp, #252]	; 0xfc
   1a9c8:	cmp	r3, #1
   1a9cc:	ble	1a91c <ReadCompressedDataSlabN+0x11a4>
   1a9d0:	ldr	r0, [sp, #132]	; 0x84
   1a9d4:	add	r0, r0, #1
   1a9d8:	str	r0, [sp, #132]	; 0x84
   1a9dc:	ldr	r3, [sp, #268]	; 0x10c
   1a9e0:	ldr	r1, [r3, #4]
   1a9e4:	bl	517e8 <__aeabi_idivmod>
   1a9e8:	cmp	r1, #0
   1a9ec:	bne	1a904 <ReadCompressedDataSlabN+0x118c>
   1a9f0:	ldr	r3, [sp, #268]	; 0x10c
   1a9f4:	add	r9, r3, #4
   1a9f8:	ldr	r3, [sp, #260]	; 0x104
   1a9fc:	add	r6, r3, #4
   1aa00:	ldr	r4, [sp, #28]
   1aa04:	b	1a8b0 <ReadCompressedDataSlabN+0x1138>
   1aa08:	add	r7, r7, r3
   1aa0c:	ldr	r2, [sp, #248]	; 0xf8
   1aa10:	ldr	r1, [sp, #16]
   1aa14:	ldr	r0, [sp, #8]
   1aa18:	bl	263c <InflateSkipData>
   1aa1c:	b	1a91c <ReadCompressedDataSlabN+0x11a4>
   1aa20:	ldr	r2, [sp, #248]	; 0xf8
   1aa24:	ldr	r1, [sp, #16]
   1aa28:	ldr	r0, [sp, #8]
   1aa2c:	bl	263c <InflateSkipData>
   1aa30:	ldr	r3, [sp, #260]	; 0x104
   1aa34:	ldr	r3, [r3]
   1aa38:	add	r7, r7, r3
   1aa3c:	b	1ab6c <ReadCompressedDataSlabN+0x13f4>
   1aa40:	mov	r5, #0
   1aa44:	b	1abe8 <ReadCompressedDataSlabN+0x1470>
   1aa48:	sub	r4, r4, r1
   1aa4c:	add	r3, r6, r5, lsl #2
   1aa50:	ldr	fp, [r3, #-4]
   1aa54:	ldr	r3, [r8]
   1aa58:	mla	r3, r3, fp, r4
   1aa5c:	ldr	r2, [sp, #248]	; 0xf8
   1aa60:	ldr	r1, [sp, #16]
   1aa64:	ldr	r0, [sp, #8]
   1aa68:	bl	263c <InflateSkipData>
   1aa6c:	ldr	r1, [r8]
   1aa70:	mla	r4, r1, fp, r4
   1aa74:	add	r7, r7, r4
   1aa78:	add	r5, r5, #1
   1aa7c:	ldr	r3, [sp, #252]	; 0xfc
   1aa80:	cmp	r3, r5
   1aa84:	beq	1ab38 <ReadCompressedDataSlabN+0x13c0>
   1aa88:	ldr	r0, [r9, r5, lsl #2]
   1aa8c:	add	r0, r0, #1
   1aa90:	str	r0, [r9, r5, lsl #2]
   1aa94:	add	r8, r8, #4
   1aa98:	ldr	r1, [sl, #4]!
   1aa9c:	bl	517e8 <__aeabi_idivmod>
   1aaa0:	cmp	r1, #0
   1aaa4:	bne	1ab04 <ReadCompressedDataSlabN+0x138c>
   1aaa8:	mov	r3, #0
   1aaac:	str	r3, [r9, r5, lsl #2]
   1aab0:	ldr	r4, [r6, r5, lsl #2]
   1aab4:	mov	r1, r4
   1aab8:	mov	r0, r7
   1aabc:	bl	517e8 <__aeabi_idivmod>
   1aac0:	cmp	r1, #0
   1aac4:	bne	1aa48 <ReadCompressedDataSlabN+0x12d0>
   1aac8:	ldr	r3, [r8]
   1aacc:	cmp	r3, #0
   1aad0:	beq	1aa78 <ReadCompressedDataSlabN+0x1300>
   1aad4:	add	fp, r6, r5, lsl #2
   1aad8:	ldr	r4, [fp, #-4]
   1aadc:	mul	r3, r4, r3
   1aae0:	ldr	r2, [sp, #248]	; 0xf8
   1aae4:	ldr	r1, [sp, #16]
   1aae8:	ldr	r0, [sp, #8]
   1aaec:	bl	263c <InflateSkipData>
   1aaf0:	ldr	r3, [r8]
   1aaf4:	mla	r7, r3, r4, r7
   1aaf8:	b	1aa78 <ReadCompressedDataSlabN+0x1300>
   1aafc:	mov	r5, #1
   1ab00:	b	1ab0c <ReadCompressedDataSlabN+0x1394>
   1ab04:	ldr	r4, [sp, #264]	; 0x108
   1ab08:	ldr	fp, [sp, #268]	; 0x10c
   1ab0c:	add	r3, sp, #208	; 0xd0
   1ab10:	add	r5, r3, r5, lsl #2
   1ab14:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1ab18:	cmp	r3, #0
   1ab1c:	beq	1ab40 <ReadCompressedDataSlabN+0x13c8>
   1ab20:	add	r7, r7, r3
   1ab24:	ldr	r2, [sp, #248]	; 0xf8
   1ab28:	ldr	r1, [sp, #16]
   1ab2c:	ldr	r0, [sp, #8]
   1ab30:	bl	263c <InflateSkipData>
   1ab34:	b	1ab40 <ReadCompressedDataSlabN+0x13c8>
   1ab38:	ldr	r4, [sp, #264]	; 0x108
   1ab3c:	ldr	fp, [sp, #268]	; 0x10c
   1ab40:	ldr	r3, [fp]
   1ab44:	ldr	r2, [sp, #24]
   1ab48:	add	r3, r2, r3
   1ab4c:	str	r3, [sp, #24]
   1ab50:	ldr	r2, [sp, #20]
   1ab54:	cmp	r3, r2
   1ab58:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1ab5c:	ldr	r3, [sp, #260]	; 0x104
   1ab60:	ldr	r3, [r3]
   1ab64:	cmp	r3, #0
   1ab68:	bne	1aa20 <ReadCompressedDataSlabN+0x12a8>
   1ab6c:	ldr	r3, [fp]
   1ab70:	sub	r3, r3, #1
   1ab74:	cmp	r3, #0
   1ab78:	ble	1aa40 <ReadCompressedDataSlabN+0x12c8>
   1ab7c:	ldr	r3, [sp, #12]
   1ab80:	ldr	r2, [sp, #24]
   1ab84:	add	r6, r3, r2, lsl #3
   1ab88:	mov	r5, #0
   1ab8c:	ldr	r8, [sp, #248]	; 0xf8
   1ab90:	ldr	sl, [sp, #16]
   1ab94:	mov	r3, #1
   1ab98:	str	r3, [sp]
   1ab9c:	mov	r3, r8
   1aba0:	mov	r2, r6
   1aba4:	mov	r1, sl
   1aba8:	ldr	r0, [sp, #8]
   1abac:	bl	b0fc <ReadCompressedUInt64Data>
   1abb0:	ldr	r3, [r4]
   1abb4:	sub	r3, r3, #1
   1abb8:	mov	r2, r8
   1abbc:	mov	r1, sl
   1abc0:	ldr	r0, [sp, #8]
   1abc4:	bl	263c <InflateSkipData>
   1abc8:	ldr	r3, [r4]
   1abcc:	add	r7, r7, r3
   1abd0:	add	r5, r5, #1
   1abd4:	add	r6, r6, #8
   1abd8:	ldr	r3, [fp]
   1abdc:	sub	r3, r3, #1
   1abe0:	cmp	r3, r5
   1abe4:	bgt	1ab94 <ReadCompressedDataSlabN+0x141c>
   1abe8:	ldr	r3, [sp, #24]
   1abec:	add	r2, r3, r5
   1abf0:	mov	r3, #1
   1abf4:	str	r3, [sp]
   1abf8:	ldr	r3, [sp, #248]	; 0xf8
   1abfc:	ldr	r1, [sp, #12]
   1ac00:	add	r2, r1, r2, lsl #3
   1ac04:	ldr	r6, [sp, #16]
   1ac08:	mov	r1, r6
   1ac0c:	ldr	r5, [sp, #8]
   1ac10:	mov	r0, r5
   1ac14:	bl	b0fc <ReadCompressedUInt64Data>
   1ac18:	ldr	r2, [fp]
   1ac1c:	sub	r2, r2, #1
   1ac20:	ldr	r3, [r4]
   1ac24:	mul	r2, r3, r2
   1ac28:	ldr	r3, [sp, #256]	; 0x100
   1ac2c:	ldr	r3, [r3]
   1ac30:	sub	r3, r3, r2
   1ac34:	ldr	r2, [sp, #260]	; 0x104
   1ac38:	ldr	r2, [r2]
   1ac3c:	sub	r3, r3, r2
   1ac40:	add	r7, r7, r3
   1ac44:	sub	r3, r3, #1
   1ac48:	ldr	r2, [sp, #248]	; 0xf8
   1ac4c:	mov	r1, r6
   1ac50:	mov	r0, r5
   1ac54:	bl	263c <InflateSkipData>
   1ac58:	ldr	r3, [sp, #252]	; 0xfc
   1ac5c:	cmp	r3, #1
   1ac60:	ble	1ab40 <ReadCompressedDataSlabN+0x13c8>
   1ac64:	ldr	r0, [sp, #132]	; 0x84
   1ac68:	add	r0, r0, #1
   1ac6c:	str	r0, [sp, #132]	; 0x84
   1ac70:	ldr	r1, [fp, #4]
   1ac74:	bl	517e8 <__aeabi_idivmod>
   1ac78:	cmp	r1, #0
   1ac7c:	bne	1aafc <ReadCompressedDataSlabN+0x1384>
   1ac80:	add	sl, fp, #4
   1ac84:	ldr	r3, [sp, #260]	; 0x104
   1ac88:	add	r8, r3, #4
   1ac8c:	mov	r5, #1
   1ac90:	str	r4, [sp, #264]	; 0x108
   1ac94:	str	fp, [sp, #268]	; 0x10c
   1ac98:	ldr	r6, [sp, #28]
   1ac9c:	b	1aaa8 <ReadCompressedDataSlabN+0x1330>
   1aca0:	ldr	r3, [r4]
   1aca4:	sub	r3, r3, #1
   1aca8:	str	r3, [sp, #168]	; 0xa8
   1acac:	ldr	r3, [sp, #256]	; 0x100
   1acb0:	ldr	r3, [r3]
   1acb4:	str	r3, [sp, #88]	; 0x58
   1acb8:	ldr	r3, [fp]
   1acbc:	str	r3, [sp, #20]
   1acc0:	ldr	r3, [sp, #252]	; 0xfc
   1acc4:	cmp	r3, #1
   1acc8:	ble	1ad00 <ReadCompressedDataSlabN+0x1588>
   1accc:	str	r4, [sp, #16]
   1acd0:	add	sl, sp, #172	; 0xac
   1acd4:	ldr	lr, [sp, #256]	; 0x100
   1acd8:	add	r9, sp, #88	; 0x58
   1acdc:	add	r8, fp, #4
   1ace0:	ldr	r3, [sp, #260]	; 0x104
   1ace4:	add	r6, r3, #4
   1ace8:	mov	r5, #2
   1acec:	mov	r7, #0
   1acf0:	str	r4, [sp, #264]	; 0x108
   1acf4:	str	fp, [sp, #268]	; 0x10c
   1acf8:	mov	fp, lr
   1acfc:	b	1cf38 <ReadCompressedDataSlabN+0x37c0>
   1ad00:	mov	r7, #0
   1ad04:	b	1cfc4 <ReadCompressedDataSlabN+0x384c>
   1ad08:	ldr	r3, [sp, #20]
   1ad0c:	cmp	r3, #0
   1ad10:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1ad14:	mov	r3, #0
   1ad18:	str	r3, [sp, #24]
   1ad1c:	add	r3, sp, #32
   1ad20:	str	r3, [sp, #16]
   1ad24:	add	r8, sp, #128	; 0x80
   1ad28:	add	r3, sp, #88	; 0x58
   1ad2c:	str	fp, [sp, #268]	; 0x10c
   1ad30:	mov	sl, r3
   1ad34:	b	1ae44 <ReadCompressedDataSlabN+0x16cc>
   1ad38:	ldr	r2, [sp, #248]	; 0xf8
   1ad3c:	ldr	r1, [sp, #16]
   1ad40:	ldr	r0, [sp, #8]
   1ad44:	bl	263c <InflateSkipData>
   1ad48:	ldr	r3, [sp, #260]	; 0x104
   1ad4c:	ldr	r3, [r3]
   1ad50:	add	r7, r7, r3
   1ad54:	b	1ae54 <ReadCompressedDataSlabN+0x16dc>
   1ad58:	sub	r5, r5, r1
   1ad5c:	add	r3, sl, r4, lsl #2
   1ad60:	ldr	fp, [r3, #-4]
   1ad64:	ldr	r3, [r6]
   1ad68:	mla	r3, r3, fp, r5
   1ad6c:	ldr	r2, [sp, #248]	; 0xf8
   1ad70:	ldr	r1, [sp, #16]
   1ad74:	ldr	r0, [sp, #8]
   1ad78:	bl	263c <InflateSkipData>
   1ad7c:	ldr	r1, [r6]
   1ad80:	mla	r5, r1, fp, r5
   1ad84:	add	r7, r7, r5
   1ad88:	add	r4, r4, #1
   1ad8c:	ldr	r3, [sp, #252]	; 0xfc
   1ad90:	cmp	r3, r4
   1ad94:	beq	1ae24 <ReadCompressedDataSlabN+0x16ac>
   1ad98:	ldr	r0, [r8, r4, lsl #2]
   1ad9c:	add	r0, r0, #1
   1ada0:	str	r0, [r8, r4, lsl #2]
   1ada4:	add	r6, r6, #4
   1ada8:	ldr	r1, [r9, #4]!
   1adac:	bl	517e8 <__aeabi_idivmod>
   1adb0:	cmp	r1, #0
   1adb4:	bne	1ae10 <ReadCompressedDataSlabN+0x1698>
   1adb8:	mov	r3, #0
   1adbc:	str	r3, [r8, r4, lsl #2]
   1adc0:	ldr	r5, [sl, r4, lsl #2]
   1adc4:	mov	r1, r5
   1adc8:	mov	r0, r7
   1adcc:	bl	517e8 <__aeabi_idivmod>
   1add0:	cmp	r1, #0
   1add4:	bne	1ad58 <ReadCompressedDataSlabN+0x15e0>
   1add8:	ldr	r3, [r6]
   1addc:	cmp	r3, #0
   1ade0:	beq	1ad88 <ReadCompressedDataSlabN+0x1610>
   1ade4:	add	fp, sl, r4, lsl #2
   1ade8:	ldr	r5, [fp, #-4]
   1adec:	mul	r3, r5, r3
   1adf0:	ldr	r2, [sp, #248]	; 0xf8
   1adf4:	ldr	r1, [sp, #16]
   1adf8:	ldr	r0, [sp, #8]
   1adfc:	bl	263c <InflateSkipData>
   1ae00:	ldr	r3, [r6]
   1ae04:	mla	r7, r3, r5, r7
   1ae08:	b	1ad88 <ReadCompressedDataSlabN+0x1610>
   1ae0c:	ldr	r4, [sp, #28]
   1ae10:	add	r3, sp, #208	; 0xd0
   1ae14:	add	r4, r3, r4, lsl #2
   1ae18:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1ae1c:	cmp	r3, #0
   1ae20:	bne	1af10 <ReadCompressedDataSlabN+0x1798>
   1ae24:	ldr	r3, [sp, #268]	; 0x10c
   1ae28:	ldr	r3, [r3]
   1ae2c:	ldr	r2, [sp, #24]
   1ae30:	add	r3, r2, r3
   1ae34:	str	r3, [sp, #24]
   1ae38:	ldr	r2, [sp, #20]
   1ae3c:	cmp	r3, r2
   1ae40:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1ae44:	ldr	r3, [sp, #260]	; 0x104
   1ae48:	ldr	r3, [r3]
   1ae4c:	cmp	r3, #0
   1ae50:	bne	1ad38 <ReadCompressedDataSlabN+0x15c0>
   1ae54:	ldr	r3, [sp, #268]	; 0x10c
   1ae58:	ldr	r3, [r3]
   1ae5c:	str	r3, [sp]
   1ae60:	ldr	r3, [sp, #248]	; 0xf8
   1ae64:	ldr	r2, [sp, #12]
   1ae68:	ldr	r1, [sp, #24]
   1ae6c:	add	r2, r2, r1, lsl #2
   1ae70:	ldr	r5, [sp, #16]
   1ae74:	mov	r1, r5
   1ae78:	ldr	r4, [sp, #8]
   1ae7c:	mov	r0, r4
   1ae80:	bl	cc9c <ReadCompressedInt32Data>
   1ae84:	ldr	r3, [sp, #256]	; 0x100
   1ae88:	ldr	r3, [r3]
   1ae8c:	ldr	r2, [sp, #260]	; 0x104
   1ae90:	ldr	r2, [r2]
   1ae94:	sub	r3, r3, r2
   1ae98:	ldr	r2, [sp, #268]	; 0x10c
   1ae9c:	ldr	r2, [r2]
   1aea0:	sub	r3, r3, r2
   1aea4:	ldr	r2, [sp, #248]	; 0xf8
   1aea8:	mov	r1, r5
   1aeac:	mov	r0, r4
   1aeb0:	bl	263c <InflateSkipData>
   1aeb4:	ldr	r3, [sp, #256]	; 0x100
   1aeb8:	ldr	r3, [r3]
   1aebc:	ldr	r2, [sp, #260]	; 0x104
   1aec0:	ldr	r2, [r2]
   1aec4:	sub	r3, r3, r2
   1aec8:	add	r7, r3, r7
   1aecc:	ldr	r3, [sp, #252]	; 0xfc
   1aed0:	cmp	r3, #1
   1aed4:	ble	1ae24 <ReadCompressedDataSlabN+0x16ac>
   1aed8:	ldr	r0, [sp, #132]	; 0x84
   1aedc:	add	r0, r0, #1
   1aee0:	str	r0, [sp, #132]	; 0x84
   1aee4:	ldr	r3, [sp, #268]	; 0x10c
   1aee8:	ldr	r1, [r3, #4]
   1aeec:	bl	517e8 <__aeabi_idivmod>
   1aef0:	cmp	r1, #0
   1aef4:	bne	1ae0c <ReadCompressedDataSlabN+0x1694>
   1aef8:	ldr	r3, [sp, #268]	; 0x10c
   1aefc:	add	r9, r3, #4
   1af00:	ldr	r3, [sp, #260]	; 0x104
   1af04:	add	r6, r3, #4
   1af08:	ldr	r4, [sp, #28]
   1af0c:	b	1adb8 <ReadCompressedDataSlabN+0x1640>
   1af10:	add	r7, r7, r3
   1af14:	ldr	r2, [sp, #248]	; 0xf8
   1af18:	ldr	r1, [sp, #16]
   1af1c:	ldr	r0, [sp, #8]
   1af20:	bl	263c <InflateSkipData>
   1af24:	b	1ae24 <ReadCompressedDataSlabN+0x16ac>
   1af28:	ldr	r2, [sp, #248]	; 0xf8
   1af2c:	ldr	r1, [sp, #16]
   1af30:	ldr	r0, [sp, #8]
   1af34:	bl	263c <InflateSkipData>
   1af38:	ldr	r3, [sp, #260]	; 0x104
   1af3c:	ldr	r3, [r3]
   1af40:	add	r7, r7, r3
   1af44:	b	1b074 <ReadCompressedDataSlabN+0x18fc>
   1af48:	mov	r5, #0
   1af4c:	b	1b0f0 <ReadCompressedDataSlabN+0x1978>
   1af50:	sub	r4, r4, r1
   1af54:	add	r3, r6, r5, lsl #2
   1af58:	ldr	fp, [r3, #-4]
   1af5c:	ldr	r3, [r8]
   1af60:	mla	r3, r3, fp, r4
   1af64:	ldr	r2, [sp, #248]	; 0xf8
   1af68:	ldr	r1, [sp, #16]
   1af6c:	ldr	r0, [sp, #8]
   1af70:	bl	263c <InflateSkipData>
   1af74:	ldr	r1, [r8]
   1af78:	mla	r4, r1, fp, r4
   1af7c:	add	r7, r7, r4
   1af80:	add	r5, r5, #1
   1af84:	ldr	r3, [sp, #252]	; 0xfc
   1af88:	cmp	r3, r5
   1af8c:	beq	1b040 <ReadCompressedDataSlabN+0x18c8>
   1af90:	ldr	r0, [r9, r5, lsl #2]
   1af94:	add	r0, r0, #1
   1af98:	str	r0, [r9, r5, lsl #2]
   1af9c:	add	r8, r8, #4
   1afa0:	ldr	r1, [sl, #4]!
   1afa4:	bl	517e8 <__aeabi_idivmod>
   1afa8:	cmp	r1, #0
   1afac:	bne	1b00c <ReadCompressedDataSlabN+0x1894>
   1afb0:	mov	r3, #0
   1afb4:	str	r3, [r9, r5, lsl #2]
   1afb8:	ldr	r4, [r6, r5, lsl #2]
   1afbc:	mov	r1, r4
   1afc0:	mov	r0, r7
   1afc4:	bl	517e8 <__aeabi_idivmod>
   1afc8:	cmp	r1, #0
   1afcc:	bne	1af50 <ReadCompressedDataSlabN+0x17d8>
   1afd0:	ldr	r3, [r8]
   1afd4:	cmp	r3, #0
   1afd8:	beq	1af80 <ReadCompressedDataSlabN+0x1808>
   1afdc:	add	fp, r6, r5, lsl #2
   1afe0:	ldr	r4, [fp, #-4]
   1afe4:	mul	r3, r4, r3
   1afe8:	ldr	r2, [sp, #248]	; 0xf8
   1afec:	ldr	r1, [sp, #16]
   1aff0:	ldr	r0, [sp, #8]
   1aff4:	bl	263c <InflateSkipData>
   1aff8:	ldr	r3, [r8]
   1affc:	mla	r7, r3, r4, r7
   1b000:	b	1af80 <ReadCompressedDataSlabN+0x1808>
   1b004:	mov	r5, #1
   1b008:	b	1b014 <ReadCompressedDataSlabN+0x189c>
   1b00c:	ldr	r4, [sp, #264]	; 0x108
   1b010:	ldr	fp, [sp, #268]	; 0x10c
   1b014:	add	r3, sp, #208	; 0xd0
   1b018:	add	r5, r3, r5, lsl #2
   1b01c:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1b020:	cmp	r3, #0
   1b024:	beq	1b048 <ReadCompressedDataSlabN+0x18d0>
   1b028:	add	r7, r7, r3
   1b02c:	ldr	r2, [sp, #248]	; 0xf8
   1b030:	ldr	r1, [sp, #16]
   1b034:	ldr	r0, [sp, #8]
   1b038:	bl	263c <InflateSkipData>
   1b03c:	b	1b048 <ReadCompressedDataSlabN+0x18d0>
   1b040:	ldr	r4, [sp, #264]	; 0x108
   1b044:	ldr	fp, [sp, #268]	; 0x10c
   1b048:	ldr	r3, [fp]
   1b04c:	ldr	r2, [sp, #24]
   1b050:	add	r3, r2, r3
   1b054:	str	r3, [sp, #24]
   1b058:	ldr	r2, [sp, #20]
   1b05c:	cmp	r3, r2
   1b060:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1b064:	ldr	r3, [sp, #260]	; 0x104
   1b068:	ldr	r3, [r3]
   1b06c:	cmp	r3, #0
   1b070:	bne	1af28 <ReadCompressedDataSlabN+0x17b0>
   1b074:	ldr	r3, [fp]
   1b078:	sub	r3, r3, #1
   1b07c:	cmp	r3, #0
   1b080:	ble	1af48 <ReadCompressedDataSlabN+0x17d0>
   1b084:	ldr	r3, [sp, #12]
   1b088:	ldr	r2, [sp, #24]
   1b08c:	add	r6, r3, r2, lsl #2
   1b090:	mov	r5, #0
   1b094:	ldr	r8, [sp, #248]	; 0xf8
   1b098:	ldr	sl, [sp, #16]
   1b09c:	mov	r3, #1
   1b0a0:	str	r3, [sp]
   1b0a4:	mov	r3, r8
   1b0a8:	mov	r2, r6
   1b0ac:	mov	r1, sl
   1b0b0:	ldr	r0, [sp, #8]
   1b0b4:	bl	cc9c <ReadCompressedInt32Data>
   1b0b8:	ldr	r3, [r4]
   1b0bc:	sub	r3, r3, #1
   1b0c0:	mov	r2, r8
   1b0c4:	mov	r1, sl
   1b0c8:	ldr	r0, [sp, #8]
   1b0cc:	bl	263c <InflateSkipData>
   1b0d0:	ldr	r3, [r4]
   1b0d4:	add	r7, r7, r3
   1b0d8:	add	r5, r5, #1
   1b0dc:	add	r6, r6, #4
   1b0e0:	ldr	r3, [fp]
   1b0e4:	sub	r3, r3, #1
   1b0e8:	cmp	r3, r5
   1b0ec:	bgt	1b09c <ReadCompressedDataSlabN+0x1924>
   1b0f0:	ldr	r3, [sp, #24]
   1b0f4:	add	r2, r3, r5
   1b0f8:	mov	r3, #1
   1b0fc:	str	r3, [sp]
   1b100:	ldr	r3, [sp, #248]	; 0xf8
   1b104:	ldr	r1, [sp, #12]
   1b108:	add	r2, r1, r2, lsl #2
   1b10c:	ldr	r6, [sp, #16]
   1b110:	mov	r1, r6
   1b114:	ldr	r5, [sp, #8]
   1b118:	mov	r0, r5
   1b11c:	bl	cc9c <ReadCompressedInt32Data>
   1b120:	ldr	r2, [fp]
   1b124:	sub	r2, r2, #1
   1b128:	ldr	r3, [r4]
   1b12c:	mul	r2, r3, r2
   1b130:	ldr	r3, [sp, #256]	; 0x100
   1b134:	ldr	r3, [r3]
   1b138:	sub	r3, r3, r2
   1b13c:	ldr	r2, [sp, #260]	; 0x104
   1b140:	ldr	r2, [r2]
   1b144:	sub	r3, r3, r2
   1b148:	add	r7, r7, r3
   1b14c:	sub	r3, r3, #1
   1b150:	ldr	r2, [sp, #248]	; 0xf8
   1b154:	mov	r1, r6
   1b158:	mov	r0, r5
   1b15c:	bl	263c <InflateSkipData>
   1b160:	ldr	r3, [sp, #252]	; 0xfc
   1b164:	cmp	r3, #1
   1b168:	ble	1b048 <ReadCompressedDataSlabN+0x18d0>
   1b16c:	ldr	r0, [sp, #132]	; 0x84
   1b170:	add	r0, r0, #1
   1b174:	str	r0, [sp, #132]	; 0x84
   1b178:	ldr	r1, [fp, #4]
   1b17c:	bl	517e8 <__aeabi_idivmod>
   1b180:	cmp	r1, #0
   1b184:	bne	1b004 <ReadCompressedDataSlabN+0x188c>
   1b188:	add	sl, fp, #4
   1b18c:	ldr	r3, [sp, #260]	; 0x104
   1b190:	add	r8, r3, #4
   1b194:	mov	r5, #1
   1b198:	str	r4, [sp, #264]	; 0x108
   1b19c:	str	fp, [sp, #268]	; 0x10c
   1b1a0:	ldr	r6, [sp, #28]
   1b1a4:	b	1afb0 <ReadCompressedDataSlabN+0x1838>
   1b1a8:	ldr	r3, [r4]
   1b1ac:	sub	r3, r3, #1
   1b1b0:	str	r3, [sp, #168]	; 0xa8
   1b1b4:	ldr	r3, [sp, #256]	; 0x100
   1b1b8:	ldr	r3, [r3]
   1b1bc:	str	r3, [sp, #88]	; 0x58
   1b1c0:	ldr	r3, [fp]
   1b1c4:	str	r3, [sp, #20]
   1b1c8:	ldr	r3, [sp, #252]	; 0xfc
   1b1cc:	cmp	r3, #1
   1b1d0:	ble	1b208 <ReadCompressedDataSlabN+0x1a90>
   1b1d4:	str	r4, [sp, #16]
   1b1d8:	add	sl, sp, #172	; 0xac
   1b1dc:	ldr	lr, [sp, #256]	; 0x100
   1b1e0:	add	r9, sp, #88	; 0x58
   1b1e4:	add	r8, fp, #4
   1b1e8:	ldr	r3, [sp, #260]	; 0x104
   1b1ec:	add	r6, r3, #4
   1b1f0:	mov	r5, #2
   1b1f4:	mov	r7, #0
   1b1f8:	str	r4, [sp, #264]	; 0x108
   1b1fc:	str	fp, [sp, #268]	; 0x10c
   1b200:	mov	fp, lr
   1b204:	b	1d044 <ReadCompressedDataSlabN+0x38cc>
   1b208:	mov	r7, #0
   1b20c:	b	1d0d0 <ReadCompressedDataSlabN+0x3958>
   1b210:	ldr	r3, [sp, #20]
   1b214:	cmp	r3, #0
   1b218:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1b21c:	mov	r3, #0
   1b220:	str	r3, [sp, #24]
   1b224:	add	r3, sp, #32
   1b228:	str	r3, [sp, #16]
   1b22c:	add	r8, sp, #128	; 0x80
   1b230:	add	r3, sp, #88	; 0x58
   1b234:	str	fp, [sp, #268]	; 0x10c
   1b238:	mov	sl, r3
   1b23c:	b	1b34c <ReadCompressedDataSlabN+0x1bd4>
   1b240:	ldr	r2, [sp, #248]	; 0xf8
   1b244:	ldr	r1, [sp, #16]
   1b248:	ldr	r0, [sp, #8]
   1b24c:	bl	263c <InflateSkipData>
   1b250:	ldr	r3, [sp, #260]	; 0x104
   1b254:	ldr	r3, [r3]
   1b258:	add	r7, r7, r3
   1b25c:	b	1b35c <ReadCompressedDataSlabN+0x1be4>
   1b260:	sub	r5, r5, r1
   1b264:	add	r3, sl, r4, lsl #2
   1b268:	ldr	fp, [r3, #-4]
   1b26c:	ldr	r3, [r6]
   1b270:	mla	r3, r3, fp, r5
   1b274:	ldr	r2, [sp, #248]	; 0xf8
   1b278:	ldr	r1, [sp, #16]
   1b27c:	ldr	r0, [sp, #8]
   1b280:	bl	263c <InflateSkipData>
   1b284:	ldr	r1, [r6]
   1b288:	mla	r5, r1, fp, r5
   1b28c:	add	r7, r7, r5
   1b290:	add	r4, r4, #1
   1b294:	ldr	r3, [sp, #252]	; 0xfc
   1b298:	cmp	r3, r4
   1b29c:	beq	1b32c <ReadCompressedDataSlabN+0x1bb4>
   1b2a0:	ldr	r0, [r8, r4, lsl #2]
   1b2a4:	add	r0, r0, #1
   1b2a8:	str	r0, [r8, r4, lsl #2]
   1b2ac:	add	r6, r6, #4
   1b2b0:	ldr	r1, [r9, #4]!
   1b2b4:	bl	517e8 <__aeabi_idivmod>
   1b2b8:	cmp	r1, #0
   1b2bc:	bne	1b318 <ReadCompressedDataSlabN+0x1ba0>
   1b2c0:	mov	r3, #0
   1b2c4:	str	r3, [r8, r4, lsl #2]
   1b2c8:	ldr	r5, [sl, r4, lsl #2]
   1b2cc:	mov	r1, r5
   1b2d0:	mov	r0, r7
   1b2d4:	bl	517e8 <__aeabi_idivmod>
   1b2d8:	cmp	r1, #0
   1b2dc:	bne	1b260 <ReadCompressedDataSlabN+0x1ae8>
   1b2e0:	ldr	r3, [r6]
   1b2e4:	cmp	r3, #0
   1b2e8:	beq	1b290 <ReadCompressedDataSlabN+0x1b18>
   1b2ec:	add	fp, sl, r4, lsl #2
   1b2f0:	ldr	r5, [fp, #-4]
   1b2f4:	mul	r3, r5, r3
   1b2f8:	ldr	r2, [sp, #248]	; 0xf8
   1b2fc:	ldr	r1, [sp, #16]
   1b300:	ldr	r0, [sp, #8]
   1b304:	bl	263c <InflateSkipData>
   1b308:	ldr	r3, [r6]
   1b30c:	mla	r7, r3, r5, r7
   1b310:	b	1b290 <ReadCompressedDataSlabN+0x1b18>
   1b314:	ldr	r4, [sp, #28]
   1b318:	add	r3, sp, #208	; 0xd0
   1b31c:	add	r4, r3, r4, lsl #2
   1b320:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1b324:	cmp	r3, #0
   1b328:	bne	1b418 <ReadCompressedDataSlabN+0x1ca0>
   1b32c:	ldr	r3, [sp, #268]	; 0x10c
   1b330:	ldr	r3, [r3]
   1b334:	ldr	r2, [sp, #24]
   1b338:	add	r3, r2, r3
   1b33c:	str	r3, [sp, #24]
   1b340:	ldr	r2, [sp, #20]
   1b344:	cmp	r3, r2
   1b348:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1b34c:	ldr	r3, [sp, #260]	; 0x104
   1b350:	ldr	r3, [r3]
   1b354:	cmp	r3, #0
   1b358:	bne	1b240 <ReadCompressedDataSlabN+0x1ac8>
   1b35c:	ldr	r3, [sp, #268]	; 0x10c
   1b360:	ldr	r3, [r3]
   1b364:	str	r3, [sp]
   1b368:	ldr	r3, [sp, #248]	; 0xf8
   1b36c:	ldr	r2, [sp, #12]
   1b370:	ldr	r1, [sp, #24]
   1b374:	add	r2, r2, r1, lsl #2
   1b378:	ldr	r5, [sp, #16]
   1b37c:	mov	r1, r5
   1b380:	ldr	r4, [sp, #8]
   1b384:	mov	r0, r4
   1b388:	bl	e80c <ReadCompressedUInt32Data>
   1b38c:	ldr	r3, [sp, #256]	; 0x100
   1b390:	ldr	r3, [r3]
   1b394:	ldr	r2, [sp, #260]	; 0x104
   1b398:	ldr	r2, [r2]
   1b39c:	sub	r3, r3, r2
   1b3a0:	ldr	r2, [sp, #268]	; 0x10c
   1b3a4:	ldr	r2, [r2]
   1b3a8:	sub	r3, r3, r2
   1b3ac:	ldr	r2, [sp, #248]	; 0xf8
   1b3b0:	mov	r1, r5
   1b3b4:	mov	r0, r4
   1b3b8:	bl	263c <InflateSkipData>
   1b3bc:	ldr	r3, [sp, #256]	; 0x100
   1b3c0:	ldr	r3, [r3]
   1b3c4:	ldr	r2, [sp, #260]	; 0x104
   1b3c8:	ldr	r2, [r2]
   1b3cc:	sub	r3, r3, r2
   1b3d0:	add	r7, r3, r7
   1b3d4:	ldr	r3, [sp, #252]	; 0xfc
   1b3d8:	cmp	r3, #1
   1b3dc:	ble	1b32c <ReadCompressedDataSlabN+0x1bb4>
   1b3e0:	ldr	r0, [sp, #132]	; 0x84
   1b3e4:	add	r0, r0, #1
   1b3e8:	str	r0, [sp, #132]	; 0x84
   1b3ec:	ldr	r3, [sp, #268]	; 0x10c
   1b3f0:	ldr	r1, [r3, #4]
   1b3f4:	bl	517e8 <__aeabi_idivmod>
   1b3f8:	cmp	r1, #0
   1b3fc:	bne	1b314 <ReadCompressedDataSlabN+0x1b9c>
   1b400:	ldr	r3, [sp, #268]	; 0x10c
   1b404:	add	r9, r3, #4
   1b408:	ldr	r3, [sp, #260]	; 0x104
   1b40c:	add	r6, r3, #4
   1b410:	ldr	r4, [sp, #28]
   1b414:	b	1b2c0 <ReadCompressedDataSlabN+0x1b48>
   1b418:	add	r7, r7, r3
   1b41c:	ldr	r2, [sp, #248]	; 0xf8
   1b420:	ldr	r1, [sp, #16]
   1b424:	ldr	r0, [sp, #8]
   1b428:	bl	263c <InflateSkipData>
   1b42c:	b	1b32c <ReadCompressedDataSlabN+0x1bb4>
   1b430:	ldr	r2, [sp, #248]	; 0xf8
   1b434:	ldr	r1, [sp, #16]
   1b438:	ldr	r0, [sp, #8]
   1b43c:	bl	263c <InflateSkipData>
   1b440:	ldr	r3, [sp, #260]	; 0x104
   1b444:	ldr	r3, [r3]
   1b448:	add	r7, r7, r3
   1b44c:	b	1b57c <ReadCompressedDataSlabN+0x1e04>
   1b450:	mov	r5, #0
   1b454:	b	1b5f8 <ReadCompressedDataSlabN+0x1e80>
   1b458:	sub	r4, r4, r1
   1b45c:	add	r3, r6, r5, lsl #2
   1b460:	ldr	fp, [r3, #-4]
   1b464:	ldr	r3, [r8]
   1b468:	mla	r3, r3, fp, r4
   1b46c:	ldr	r2, [sp, #248]	; 0xf8
   1b470:	ldr	r1, [sp, #16]
   1b474:	ldr	r0, [sp, #8]
   1b478:	bl	263c <InflateSkipData>
   1b47c:	ldr	r1, [r8]
   1b480:	mla	r4, r1, fp, r4
   1b484:	add	r7, r7, r4
   1b488:	add	r5, r5, #1
   1b48c:	ldr	r3, [sp, #252]	; 0xfc
   1b490:	cmp	r3, r5
   1b494:	beq	1b548 <ReadCompressedDataSlabN+0x1dd0>
   1b498:	ldr	r0, [r9, r5, lsl #2]
   1b49c:	add	r0, r0, #1
   1b4a0:	str	r0, [r9, r5, lsl #2]
   1b4a4:	add	r8, r8, #4
   1b4a8:	ldr	r1, [sl, #4]!
   1b4ac:	bl	517e8 <__aeabi_idivmod>
   1b4b0:	cmp	r1, #0
   1b4b4:	bne	1b514 <ReadCompressedDataSlabN+0x1d9c>
   1b4b8:	mov	r3, #0
   1b4bc:	str	r3, [r9, r5, lsl #2]
   1b4c0:	ldr	r4, [r6, r5, lsl #2]
   1b4c4:	mov	r1, r4
   1b4c8:	mov	r0, r7
   1b4cc:	bl	517e8 <__aeabi_idivmod>
   1b4d0:	cmp	r1, #0
   1b4d4:	bne	1b458 <ReadCompressedDataSlabN+0x1ce0>
   1b4d8:	ldr	r3, [r8]
   1b4dc:	cmp	r3, #0
   1b4e0:	beq	1b488 <ReadCompressedDataSlabN+0x1d10>
   1b4e4:	add	fp, r6, r5, lsl #2
   1b4e8:	ldr	r4, [fp, #-4]
   1b4ec:	mul	r3, r4, r3
   1b4f0:	ldr	r2, [sp, #248]	; 0xf8
   1b4f4:	ldr	r1, [sp, #16]
   1b4f8:	ldr	r0, [sp, #8]
   1b4fc:	bl	263c <InflateSkipData>
   1b500:	ldr	r3, [r8]
   1b504:	mla	r7, r3, r4, r7
   1b508:	b	1b488 <ReadCompressedDataSlabN+0x1d10>
   1b50c:	mov	r5, #1
   1b510:	b	1b51c <ReadCompressedDataSlabN+0x1da4>
   1b514:	ldr	r4, [sp, #264]	; 0x108
   1b518:	ldr	fp, [sp, #268]	; 0x10c
   1b51c:	add	r3, sp, #208	; 0xd0
   1b520:	add	r5, r3, r5, lsl #2
   1b524:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1b528:	cmp	r3, #0
   1b52c:	beq	1b550 <ReadCompressedDataSlabN+0x1dd8>
   1b530:	add	r7, r7, r3
   1b534:	ldr	r2, [sp, #248]	; 0xf8
   1b538:	ldr	r1, [sp, #16]
   1b53c:	ldr	r0, [sp, #8]
   1b540:	bl	263c <InflateSkipData>
   1b544:	b	1b550 <ReadCompressedDataSlabN+0x1dd8>
   1b548:	ldr	r4, [sp, #264]	; 0x108
   1b54c:	ldr	fp, [sp, #268]	; 0x10c
   1b550:	ldr	r3, [fp]
   1b554:	ldr	r2, [sp, #24]
   1b558:	add	r3, r2, r3
   1b55c:	str	r3, [sp, #24]
   1b560:	ldr	r2, [sp, #20]
   1b564:	cmp	r3, r2
   1b568:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1b56c:	ldr	r3, [sp, #260]	; 0x104
   1b570:	ldr	r3, [r3]
   1b574:	cmp	r3, #0
   1b578:	bne	1b430 <ReadCompressedDataSlabN+0x1cb8>
   1b57c:	ldr	r3, [fp]
   1b580:	sub	r3, r3, #1
   1b584:	cmp	r3, #0
   1b588:	ble	1b450 <ReadCompressedDataSlabN+0x1cd8>
   1b58c:	ldr	r3, [sp, #12]
   1b590:	ldr	r2, [sp, #24]
   1b594:	add	r6, r3, r2, lsl #2
   1b598:	mov	r5, #0
   1b59c:	ldr	r8, [sp, #248]	; 0xf8
   1b5a0:	ldr	sl, [sp, #16]
   1b5a4:	mov	r3, #1
   1b5a8:	str	r3, [sp]
   1b5ac:	mov	r3, r8
   1b5b0:	mov	r2, r6
   1b5b4:	mov	r1, sl
   1b5b8:	ldr	r0, [sp, #8]
   1b5bc:	bl	e80c <ReadCompressedUInt32Data>
   1b5c0:	ldr	r3, [r4]
   1b5c4:	sub	r3, r3, #1
   1b5c8:	mov	r2, r8
   1b5cc:	mov	r1, sl
   1b5d0:	ldr	r0, [sp, #8]
   1b5d4:	bl	263c <InflateSkipData>
   1b5d8:	ldr	r3, [r4]
   1b5dc:	add	r7, r7, r3
   1b5e0:	add	r5, r5, #1
   1b5e4:	add	r6, r6, #4
   1b5e8:	ldr	r3, [fp]
   1b5ec:	sub	r3, r3, #1
   1b5f0:	cmp	r3, r5
   1b5f4:	bgt	1b5a4 <ReadCompressedDataSlabN+0x1e2c>
   1b5f8:	ldr	r3, [sp, #24]
   1b5fc:	add	r2, r3, r5
   1b600:	mov	r3, #1
   1b604:	str	r3, [sp]
   1b608:	ldr	r3, [sp, #248]	; 0xf8
   1b60c:	ldr	r1, [sp, #12]
   1b610:	add	r2, r1, r2, lsl #2
   1b614:	ldr	r6, [sp, #16]
   1b618:	mov	r1, r6
   1b61c:	ldr	r5, [sp, #8]
   1b620:	mov	r0, r5
   1b624:	bl	e80c <ReadCompressedUInt32Data>
   1b628:	ldr	r2, [fp]
   1b62c:	sub	r2, r2, #1
   1b630:	ldr	r3, [r4]
   1b634:	mul	r2, r3, r2
   1b638:	ldr	r3, [sp, #256]	; 0x100
   1b63c:	ldr	r3, [r3]
   1b640:	sub	r3, r3, r2
   1b644:	ldr	r2, [sp, #260]	; 0x104
   1b648:	ldr	r2, [r2]
   1b64c:	sub	r3, r3, r2
   1b650:	add	r7, r7, r3
   1b654:	sub	r3, r3, #1
   1b658:	ldr	r2, [sp, #248]	; 0xf8
   1b65c:	mov	r1, r6
   1b660:	mov	r0, r5
   1b664:	bl	263c <InflateSkipData>
   1b668:	ldr	r3, [sp, #252]	; 0xfc
   1b66c:	cmp	r3, #1
   1b670:	ble	1b550 <ReadCompressedDataSlabN+0x1dd8>
   1b674:	ldr	r0, [sp, #132]	; 0x84
   1b678:	add	r0, r0, #1
   1b67c:	str	r0, [sp, #132]	; 0x84
   1b680:	ldr	r1, [fp, #4]
   1b684:	bl	517e8 <__aeabi_idivmod>
   1b688:	cmp	r1, #0
   1b68c:	bne	1b50c <ReadCompressedDataSlabN+0x1d94>
   1b690:	add	sl, fp, #4
   1b694:	ldr	r3, [sp, #260]	; 0x104
   1b698:	add	r8, r3, #4
   1b69c:	mov	r5, #1
   1b6a0:	str	r4, [sp, #264]	; 0x108
   1b6a4:	str	fp, [sp, #268]	; 0x10c
   1b6a8:	ldr	r6, [sp, #28]
   1b6ac:	b	1b4b8 <ReadCompressedDataSlabN+0x1d40>
   1b6b0:	ldr	r3, [r4]
   1b6b4:	sub	r3, r3, #1
   1b6b8:	str	r3, [sp, #168]	; 0xa8
   1b6bc:	ldr	r3, [sp, #256]	; 0x100
   1b6c0:	ldr	r3, [r3]
   1b6c4:	str	r3, [sp, #88]	; 0x58
   1b6c8:	ldr	r3, [fp]
   1b6cc:	str	r3, [sp, #20]
   1b6d0:	ldr	r3, [sp, #252]	; 0xfc
   1b6d4:	cmp	r3, #1
   1b6d8:	ble	1b710 <ReadCompressedDataSlabN+0x1f98>
   1b6dc:	str	r4, [sp, #16]
   1b6e0:	add	sl, sp, #172	; 0xac
   1b6e4:	ldr	lr, [sp, #256]	; 0x100
   1b6e8:	add	r9, sp, #88	; 0x58
   1b6ec:	add	r8, fp, #4
   1b6f0:	ldr	r3, [sp, #260]	; 0x104
   1b6f4:	add	r6, r3, #4
   1b6f8:	mov	r5, #2
   1b6fc:	mov	r7, #0
   1b700:	str	r4, [sp, #264]	; 0x108
   1b704:	str	fp, [sp, #268]	; 0x10c
   1b708:	mov	fp, lr
   1b70c:	b	1d150 <ReadCompressedDataSlabN+0x39d8>
   1b710:	mov	r7, #0
   1b714:	b	1d1dc <ReadCompressedDataSlabN+0x3a64>
   1b718:	ldr	r3, [sp, #20]
   1b71c:	cmp	r3, #0
   1b720:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1b724:	mov	r3, #0
   1b728:	str	r3, [sp, #24]
   1b72c:	add	r3, sp, #32
   1b730:	str	r3, [sp, #16]
   1b734:	add	r8, sp, #128	; 0x80
   1b738:	add	r3, sp, #88	; 0x58
   1b73c:	str	fp, [sp, #268]	; 0x10c
   1b740:	mov	sl, r3
   1b744:	b	1b854 <ReadCompressedDataSlabN+0x20dc>
   1b748:	ldr	r2, [sp, #248]	; 0xf8
   1b74c:	ldr	r1, [sp, #16]
   1b750:	ldr	r0, [sp, #8]
   1b754:	bl	263c <InflateSkipData>
   1b758:	ldr	r3, [sp, #260]	; 0x104
   1b75c:	ldr	r3, [r3]
   1b760:	add	r7, r7, r3
   1b764:	b	1b864 <ReadCompressedDataSlabN+0x20ec>
   1b768:	sub	r5, r5, r1
   1b76c:	add	r3, sl, r4, lsl #2
   1b770:	ldr	fp, [r3, #-4]
   1b774:	ldr	r3, [r6]
   1b778:	mla	r3, r3, fp, r5
   1b77c:	ldr	r2, [sp, #248]	; 0xf8
   1b780:	ldr	r1, [sp, #16]
   1b784:	ldr	r0, [sp, #8]
   1b788:	bl	263c <InflateSkipData>
   1b78c:	ldr	r1, [r6]
   1b790:	mla	r5, r1, fp, r5
   1b794:	add	r7, r7, r5
   1b798:	add	r4, r4, #1
   1b79c:	ldr	r3, [sp, #252]	; 0xfc
   1b7a0:	cmp	r3, r4
   1b7a4:	beq	1b834 <ReadCompressedDataSlabN+0x20bc>
   1b7a8:	ldr	r0, [r8, r4, lsl #2]
   1b7ac:	add	r0, r0, #1
   1b7b0:	str	r0, [r8, r4, lsl #2]
   1b7b4:	add	r6, r6, #4
   1b7b8:	ldr	r1, [r9, #4]!
   1b7bc:	bl	517e8 <__aeabi_idivmod>
   1b7c0:	cmp	r1, #0
   1b7c4:	bne	1b820 <ReadCompressedDataSlabN+0x20a8>
   1b7c8:	mov	r3, #0
   1b7cc:	str	r3, [r8, r4, lsl #2]
   1b7d0:	ldr	r5, [sl, r4, lsl #2]
   1b7d4:	mov	r1, r5
   1b7d8:	mov	r0, r7
   1b7dc:	bl	517e8 <__aeabi_idivmod>
   1b7e0:	cmp	r1, #0
   1b7e4:	bne	1b768 <ReadCompressedDataSlabN+0x1ff0>
   1b7e8:	ldr	r3, [r6]
   1b7ec:	cmp	r3, #0
   1b7f0:	beq	1b798 <ReadCompressedDataSlabN+0x2020>
   1b7f4:	add	fp, sl, r4, lsl #2
   1b7f8:	ldr	r5, [fp, #-4]
   1b7fc:	mul	r3, r5, r3
   1b800:	ldr	r2, [sp, #248]	; 0xf8
   1b804:	ldr	r1, [sp, #16]
   1b808:	ldr	r0, [sp, #8]
   1b80c:	bl	263c <InflateSkipData>
   1b810:	ldr	r3, [r6]
   1b814:	mla	r7, r3, r5, r7
   1b818:	b	1b798 <ReadCompressedDataSlabN+0x2020>
   1b81c:	ldr	r4, [sp, #28]
   1b820:	add	r3, sp, #208	; 0xd0
   1b824:	add	r4, r3, r4, lsl #2
   1b828:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1b82c:	cmp	r3, #0
   1b830:	bne	1b920 <ReadCompressedDataSlabN+0x21a8>
   1b834:	ldr	r3, [sp, #268]	; 0x10c
   1b838:	ldr	r3, [r3]
   1b83c:	ldr	r2, [sp, #24]
   1b840:	add	r3, r2, r3
   1b844:	str	r3, [sp, #24]
   1b848:	ldr	r2, [sp, #20]
   1b84c:	cmp	r3, r2
   1b850:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1b854:	ldr	r3, [sp, #260]	; 0x104
   1b858:	ldr	r3, [r3]
   1b85c:	cmp	r3, #0
   1b860:	bne	1b748 <ReadCompressedDataSlabN+0x1fd0>
   1b864:	ldr	r3, [sp, #268]	; 0x10c
   1b868:	ldr	r3, [r3]
   1b86c:	str	r3, [sp]
   1b870:	ldr	r3, [sp, #248]	; 0xf8
   1b874:	ldr	r2, [sp, #12]
   1b878:	ldr	r1, [sp, #24]
   1b87c:	add	r2, r2, r1, lsl #1
   1b880:	ldr	r5, [sp, #16]
   1b884:	mov	r1, r5
   1b888:	ldr	r4, [sp, #8]
   1b88c:	mov	r0, r4
   1b890:	bl	1038c <ReadCompressedInt16Data>
   1b894:	ldr	r3, [sp, #256]	; 0x100
   1b898:	ldr	r3, [r3]
   1b89c:	ldr	r2, [sp, #260]	; 0x104
   1b8a0:	ldr	r2, [r2]
   1b8a4:	sub	r3, r3, r2
   1b8a8:	ldr	r2, [sp, #268]	; 0x10c
   1b8ac:	ldr	r2, [r2]
   1b8b0:	sub	r3, r3, r2
   1b8b4:	ldr	r2, [sp, #248]	; 0xf8
   1b8b8:	mov	r1, r5
   1b8bc:	mov	r0, r4
   1b8c0:	bl	263c <InflateSkipData>
   1b8c4:	ldr	r3, [sp, #256]	; 0x100
   1b8c8:	ldr	r3, [r3]
   1b8cc:	ldr	r2, [sp, #260]	; 0x104
   1b8d0:	ldr	r2, [r2]
   1b8d4:	sub	r3, r3, r2
   1b8d8:	add	r7, r3, r7
   1b8dc:	ldr	r3, [sp, #252]	; 0xfc
   1b8e0:	cmp	r3, #1
   1b8e4:	ble	1b834 <ReadCompressedDataSlabN+0x20bc>
   1b8e8:	ldr	r0, [sp, #132]	; 0x84
   1b8ec:	add	r0, r0, #1
   1b8f0:	str	r0, [sp, #132]	; 0x84
   1b8f4:	ldr	r3, [sp, #268]	; 0x10c
   1b8f8:	ldr	r1, [r3, #4]
   1b8fc:	bl	517e8 <__aeabi_idivmod>
   1b900:	cmp	r1, #0
   1b904:	bne	1b81c <ReadCompressedDataSlabN+0x20a4>
   1b908:	ldr	r3, [sp, #268]	; 0x10c
   1b90c:	add	r9, r3, #4
   1b910:	ldr	r3, [sp, #260]	; 0x104
   1b914:	add	r6, r3, #4
   1b918:	ldr	r4, [sp, #28]
   1b91c:	b	1b7c8 <ReadCompressedDataSlabN+0x2050>
   1b920:	add	r7, r7, r3
   1b924:	ldr	r2, [sp, #248]	; 0xf8
   1b928:	ldr	r1, [sp, #16]
   1b92c:	ldr	r0, [sp, #8]
   1b930:	bl	263c <InflateSkipData>
   1b934:	b	1b834 <ReadCompressedDataSlabN+0x20bc>
   1b938:	ldr	r2, [sp, #248]	; 0xf8
   1b93c:	ldr	r1, [sp, #16]
   1b940:	ldr	r0, [sp, #8]
   1b944:	bl	263c <InflateSkipData>
   1b948:	ldr	r3, [sp, #260]	; 0x104
   1b94c:	ldr	r3, [r3]
   1b950:	add	r7, r7, r3
   1b954:	b	1ba84 <ReadCompressedDataSlabN+0x230c>
   1b958:	mov	r5, #0
   1b95c:	b	1bb00 <ReadCompressedDataSlabN+0x2388>
   1b960:	sub	r4, r4, r1
   1b964:	add	r3, r6, r5, lsl #2
   1b968:	ldr	fp, [r3, #-4]
   1b96c:	ldr	r3, [r8]
   1b970:	mla	r3, r3, fp, r4
   1b974:	ldr	r2, [sp, #248]	; 0xf8
   1b978:	ldr	r1, [sp, #16]
   1b97c:	ldr	r0, [sp, #8]
   1b980:	bl	263c <InflateSkipData>
   1b984:	ldr	r1, [r8]
   1b988:	mla	r4, r1, fp, r4
   1b98c:	add	r7, r7, r4
   1b990:	add	r5, r5, #1
   1b994:	ldr	r3, [sp, #252]	; 0xfc
   1b998:	cmp	r3, r5
   1b99c:	beq	1ba50 <ReadCompressedDataSlabN+0x22d8>
   1b9a0:	ldr	r0, [r9, r5, lsl #2]
   1b9a4:	add	r0, r0, #1
   1b9a8:	str	r0, [r9, r5, lsl #2]
   1b9ac:	add	r8, r8, #4
   1b9b0:	ldr	r1, [sl, #4]!
   1b9b4:	bl	517e8 <__aeabi_idivmod>
   1b9b8:	cmp	r1, #0
   1b9bc:	bne	1ba1c <ReadCompressedDataSlabN+0x22a4>
   1b9c0:	mov	r3, #0
   1b9c4:	str	r3, [r9, r5, lsl #2]
   1b9c8:	ldr	r4, [r6, r5, lsl #2]
   1b9cc:	mov	r1, r4
   1b9d0:	mov	r0, r7
   1b9d4:	bl	517e8 <__aeabi_idivmod>
   1b9d8:	cmp	r1, #0
   1b9dc:	bne	1b960 <ReadCompressedDataSlabN+0x21e8>
   1b9e0:	ldr	r3, [r8]
   1b9e4:	cmp	r3, #0
   1b9e8:	beq	1b990 <ReadCompressedDataSlabN+0x2218>
   1b9ec:	add	fp, r6, r5, lsl #2
   1b9f0:	ldr	r4, [fp, #-4]
   1b9f4:	mul	r3, r4, r3
   1b9f8:	ldr	r2, [sp, #248]	; 0xf8
   1b9fc:	ldr	r1, [sp, #16]
   1ba00:	ldr	r0, [sp, #8]
   1ba04:	bl	263c <InflateSkipData>
   1ba08:	ldr	r3, [r8]
   1ba0c:	mla	r7, r3, r4, r7
   1ba10:	b	1b990 <ReadCompressedDataSlabN+0x2218>
   1ba14:	mov	r5, #1
   1ba18:	b	1ba24 <ReadCompressedDataSlabN+0x22ac>
   1ba1c:	ldr	r4, [sp, #264]	; 0x108
   1ba20:	ldr	fp, [sp, #268]	; 0x10c
   1ba24:	add	r3, sp, #208	; 0xd0
   1ba28:	add	r5, r3, r5, lsl #2
   1ba2c:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1ba30:	cmp	r3, #0
   1ba34:	beq	1ba58 <ReadCompressedDataSlabN+0x22e0>
   1ba38:	add	r7, r7, r3
   1ba3c:	ldr	r2, [sp, #248]	; 0xf8
   1ba40:	ldr	r1, [sp, #16]
   1ba44:	ldr	r0, [sp, #8]
   1ba48:	bl	263c <InflateSkipData>
   1ba4c:	b	1ba58 <ReadCompressedDataSlabN+0x22e0>
   1ba50:	ldr	r4, [sp, #264]	; 0x108
   1ba54:	ldr	fp, [sp, #268]	; 0x10c
   1ba58:	ldr	r3, [fp]
   1ba5c:	ldr	r2, [sp, #24]
   1ba60:	add	r3, r2, r3
   1ba64:	str	r3, [sp, #24]
   1ba68:	ldr	r2, [sp, #20]
   1ba6c:	cmp	r3, r2
   1ba70:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1ba74:	ldr	r3, [sp, #260]	; 0x104
   1ba78:	ldr	r3, [r3]
   1ba7c:	cmp	r3, #0
   1ba80:	bne	1b938 <ReadCompressedDataSlabN+0x21c0>
   1ba84:	ldr	r3, [fp]
   1ba88:	sub	r3, r3, #1
   1ba8c:	cmp	r3, #0
   1ba90:	ble	1b958 <ReadCompressedDataSlabN+0x21e0>
   1ba94:	ldr	r3, [sp, #12]
   1ba98:	ldr	r2, [sp, #24]
   1ba9c:	add	r6, r3, r2, lsl #1
   1baa0:	mov	r5, #0
   1baa4:	ldr	r8, [sp, #248]	; 0xf8
   1baa8:	ldr	sl, [sp, #16]
   1baac:	mov	r3, #1
   1bab0:	str	r3, [sp]
   1bab4:	mov	r3, r8
   1bab8:	mov	r2, r6
   1babc:	mov	r1, sl
   1bac0:	ldr	r0, [sp, #8]
   1bac4:	bl	1038c <ReadCompressedInt16Data>
   1bac8:	ldr	r3, [r4]
   1bacc:	sub	r3, r3, #1
   1bad0:	mov	r2, r8
   1bad4:	mov	r1, sl
   1bad8:	ldr	r0, [sp, #8]
   1badc:	bl	263c <InflateSkipData>
   1bae0:	ldr	r3, [r4]
   1bae4:	add	r7, r7, r3
   1bae8:	add	r5, r5, #1
   1baec:	add	r6, r6, #2
   1baf0:	ldr	r3, [fp]
   1baf4:	sub	r3, r3, #1
   1baf8:	cmp	r3, r5
   1bafc:	bgt	1baac <ReadCompressedDataSlabN+0x2334>
   1bb00:	ldr	r3, [sp, #24]
   1bb04:	add	r2, r3, r5
   1bb08:	mov	r3, #1
   1bb0c:	str	r3, [sp]
   1bb10:	ldr	r3, [sp, #248]	; 0xf8
   1bb14:	ldr	r1, [sp, #12]
   1bb18:	add	r2, r1, r2, lsl #1
   1bb1c:	ldr	r6, [sp, #16]
   1bb20:	mov	r1, r6
   1bb24:	ldr	r5, [sp, #8]
   1bb28:	mov	r0, r5
   1bb2c:	bl	1038c <ReadCompressedInt16Data>
   1bb30:	ldr	r2, [fp]
   1bb34:	sub	r2, r2, #1
   1bb38:	ldr	r3, [r4]
   1bb3c:	mul	r2, r3, r2
   1bb40:	ldr	r3, [sp, #256]	; 0x100
   1bb44:	ldr	r3, [r3]
   1bb48:	sub	r3, r3, r2
   1bb4c:	ldr	r2, [sp, #260]	; 0x104
   1bb50:	ldr	r2, [r2]
   1bb54:	sub	r3, r3, r2
   1bb58:	add	r7, r7, r3
   1bb5c:	sub	r3, r3, #1
   1bb60:	ldr	r2, [sp, #248]	; 0xf8
   1bb64:	mov	r1, r6
   1bb68:	mov	r0, r5
   1bb6c:	bl	263c <InflateSkipData>
   1bb70:	ldr	r3, [sp, #252]	; 0xfc
   1bb74:	cmp	r3, #1
   1bb78:	ble	1ba58 <ReadCompressedDataSlabN+0x22e0>
   1bb7c:	ldr	r0, [sp, #132]	; 0x84
   1bb80:	add	r0, r0, #1
   1bb84:	str	r0, [sp, #132]	; 0x84
   1bb88:	ldr	r1, [fp, #4]
   1bb8c:	bl	517e8 <__aeabi_idivmod>
   1bb90:	cmp	r1, #0
   1bb94:	bne	1ba14 <ReadCompressedDataSlabN+0x229c>
   1bb98:	add	sl, fp, #4
   1bb9c:	ldr	r3, [sp, #260]	; 0x104
   1bba0:	add	r8, r3, #4
   1bba4:	mov	r5, #1
   1bba8:	str	r4, [sp, #264]	; 0x108
   1bbac:	str	fp, [sp, #268]	; 0x10c
   1bbb0:	ldr	r6, [sp, #28]
   1bbb4:	b	1b9c0 <ReadCompressedDataSlabN+0x2248>
   1bbb8:	ldr	r3, [r4]
   1bbbc:	sub	r3, r3, #1
   1bbc0:	str	r3, [sp, #168]	; 0xa8
   1bbc4:	ldr	r3, [sp, #256]	; 0x100
   1bbc8:	ldr	r3, [r3]
   1bbcc:	str	r3, [sp, #88]	; 0x58
   1bbd0:	ldr	r3, [fp]
   1bbd4:	str	r3, [sp, #20]
   1bbd8:	ldr	r3, [sp, #252]	; 0xfc
   1bbdc:	cmp	r3, #1
   1bbe0:	ble	1bc18 <ReadCompressedDataSlabN+0x24a0>
   1bbe4:	str	r4, [sp, #16]
   1bbe8:	add	sl, sp, #172	; 0xac
   1bbec:	ldr	lr, [sp, #256]	; 0x100
   1bbf0:	add	r9, sp, #88	; 0x58
   1bbf4:	add	r8, fp, #4
   1bbf8:	ldr	r3, [sp, #260]	; 0x104
   1bbfc:	add	r6, r3, #4
   1bc00:	mov	r5, #2
   1bc04:	mov	r7, #0
   1bc08:	str	r4, [sp, #264]	; 0x108
   1bc0c:	str	fp, [sp, #268]	; 0x10c
   1bc10:	mov	fp, lr
   1bc14:	b	1d25c <ReadCompressedDataSlabN+0x3ae4>
   1bc18:	mov	r7, #0
   1bc1c:	b	1d2e8 <ReadCompressedDataSlabN+0x3b70>
   1bc20:	ldr	r3, [sp, #20]
   1bc24:	cmp	r3, #0
   1bc28:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1bc2c:	mov	r3, #0
   1bc30:	str	r3, [sp, #24]
   1bc34:	add	r3, sp, #32
   1bc38:	str	r3, [sp, #16]
   1bc3c:	add	r8, sp, #128	; 0x80
   1bc40:	add	r3, sp, #88	; 0x58
   1bc44:	str	fp, [sp, #268]	; 0x10c
   1bc48:	mov	sl, r3
   1bc4c:	b	1bd5c <ReadCompressedDataSlabN+0x25e4>
   1bc50:	ldr	r2, [sp, #248]	; 0xf8
   1bc54:	ldr	r1, [sp, #16]
   1bc58:	ldr	r0, [sp, #8]
   1bc5c:	bl	263c <InflateSkipData>
   1bc60:	ldr	r3, [sp, #260]	; 0x104
   1bc64:	ldr	r3, [r3]
   1bc68:	add	r7, r7, r3
   1bc6c:	b	1bd6c <ReadCompressedDataSlabN+0x25f4>
   1bc70:	sub	r5, r5, r1
   1bc74:	add	r3, sl, r4, lsl #2
   1bc78:	ldr	fp, [r3, #-4]
   1bc7c:	ldr	r3, [r6]
   1bc80:	mla	r3, r3, fp, r5
   1bc84:	ldr	r2, [sp, #248]	; 0xf8
   1bc88:	ldr	r1, [sp, #16]
   1bc8c:	ldr	r0, [sp, #8]
   1bc90:	bl	263c <InflateSkipData>
   1bc94:	ldr	r1, [r6]
   1bc98:	mla	r5, r1, fp, r5
   1bc9c:	add	r7, r7, r5
   1bca0:	add	r4, r4, #1
   1bca4:	ldr	r3, [sp, #252]	; 0xfc
   1bca8:	cmp	r3, r4
   1bcac:	beq	1bd3c <ReadCompressedDataSlabN+0x25c4>
   1bcb0:	ldr	r0, [r8, r4, lsl #2]
   1bcb4:	add	r0, r0, #1
   1bcb8:	str	r0, [r8, r4, lsl #2]
   1bcbc:	add	r6, r6, #4
   1bcc0:	ldr	r1, [r9, #4]!
   1bcc4:	bl	517e8 <__aeabi_idivmod>
   1bcc8:	cmp	r1, #0
   1bccc:	bne	1bd28 <ReadCompressedDataSlabN+0x25b0>
   1bcd0:	mov	r3, #0
   1bcd4:	str	r3, [r8, r4, lsl #2]
   1bcd8:	ldr	r5, [sl, r4, lsl #2]
   1bcdc:	mov	r1, r5
   1bce0:	mov	r0, r7
   1bce4:	bl	517e8 <__aeabi_idivmod>
   1bce8:	cmp	r1, #0
   1bcec:	bne	1bc70 <ReadCompressedDataSlabN+0x24f8>
   1bcf0:	ldr	r3, [r6]
   1bcf4:	cmp	r3, #0
   1bcf8:	beq	1bca0 <ReadCompressedDataSlabN+0x2528>
   1bcfc:	add	fp, sl, r4, lsl #2
   1bd00:	ldr	r5, [fp, #-4]
   1bd04:	mul	r3, r5, r3
   1bd08:	ldr	r2, [sp, #248]	; 0xf8
   1bd0c:	ldr	r1, [sp, #16]
   1bd10:	ldr	r0, [sp, #8]
   1bd14:	bl	263c <InflateSkipData>
   1bd18:	ldr	r3, [r6]
   1bd1c:	mla	r7, r3, r5, r7
   1bd20:	b	1bca0 <ReadCompressedDataSlabN+0x2528>
   1bd24:	ldr	r4, [sp, #28]
   1bd28:	add	r3, sp, #208	; 0xd0
   1bd2c:	add	r4, r3, r4, lsl #2
   1bd30:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1bd34:	cmp	r3, #0
   1bd38:	bne	1be28 <ReadCompressedDataSlabN+0x26b0>
   1bd3c:	ldr	r3, [sp, #268]	; 0x10c
   1bd40:	ldr	r3, [r3]
   1bd44:	ldr	r2, [sp, #24]
   1bd48:	add	r3, r2, r3
   1bd4c:	str	r3, [sp, #24]
   1bd50:	ldr	r2, [sp, #20]
   1bd54:	cmp	r3, r2
   1bd58:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1bd5c:	ldr	r3, [sp, #260]	; 0x104
   1bd60:	ldr	r3, [r3]
   1bd64:	cmp	r3, #0
   1bd68:	bne	1bc50 <ReadCompressedDataSlabN+0x24d8>
   1bd6c:	ldr	r3, [sp, #268]	; 0x10c
   1bd70:	ldr	r3, [r3]
   1bd74:	str	r3, [sp]
   1bd78:	ldr	r3, [sp, #248]	; 0xf8
   1bd7c:	ldr	r2, [sp, #12]
   1bd80:	ldr	r1, [sp, #24]
   1bd84:	add	r2, r2, r1, lsl #1
   1bd88:	ldr	r5, [sp, #16]
   1bd8c:	mov	r1, r5
   1bd90:	ldr	r4, [sp, #8]
   1bd94:	mov	r0, r4
   1bd98:	bl	11ee4 <ReadCompressedUInt16Data>
   1bd9c:	ldr	r3, [sp, #256]	; 0x100
   1bda0:	ldr	r3, [r3]
   1bda4:	ldr	r2, [sp, #260]	; 0x104
   1bda8:	ldr	r2, [r2]
   1bdac:	sub	r3, r3, r2
   1bdb0:	ldr	r2, [sp, #268]	; 0x10c
   1bdb4:	ldr	r2, [r2]
   1bdb8:	sub	r3, r3, r2
   1bdbc:	ldr	r2, [sp, #248]	; 0xf8
   1bdc0:	mov	r1, r5
   1bdc4:	mov	r0, r4
   1bdc8:	bl	263c <InflateSkipData>
   1bdcc:	ldr	r3, [sp, #256]	; 0x100
   1bdd0:	ldr	r3, [r3]
   1bdd4:	ldr	r2, [sp, #260]	; 0x104
   1bdd8:	ldr	r2, [r2]
   1bddc:	sub	r3, r3, r2
   1bde0:	add	r7, r3, r7
   1bde4:	ldr	r3, [sp, #252]	; 0xfc
   1bde8:	cmp	r3, #1
   1bdec:	ble	1bd3c <ReadCompressedDataSlabN+0x25c4>
   1bdf0:	ldr	r0, [sp, #132]	; 0x84
   1bdf4:	add	r0, r0, #1
   1bdf8:	str	r0, [sp, #132]	; 0x84
   1bdfc:	ldr	r3, [sp, #268]	; 0x10c
   1be00:	ldr	r1, [r3, #4]
   1be04:	bl	517e8 <__aeabi_idivmod>
   1be08:	cmp	r1, #0
   1be0c:	bne	1bd24 <ReadCompressedDataSlabN+0x25ac>
   1be10:	ldr	r3, [sp, #268]	; 0x10c
   1be14:	add	r9, r3, #4
   1be18:	ldr	r3, [sp, #260]	; 0x104
   1be1c:	add	r6, r3, #4
   1be20:	ldr	r4, [sp, #28]
   1be24:	b	1bcd0 <ReadCompressedDataSlabN+0x2558>
   1be28:	add	r7, r7, r3
   1be2c:	ldr	r2, [sp, #248]	; 0xf8
   1be30:	ldr	r1, [sp, #16]
   1be34:	ldr	r0, [sp, #8]
   1be38:	bl	263c <InflateSkipData>
   1be3c:	b	1bd3c <ReadCompressedDataSlabN+0x25c4>
   1be40:	ldr	r2, [sp, #248]	; 0xf8
   1be44:	ldr	r1, [sp, #16]
   1be48:	ldr	r0, [sp, #8]
   1be4c:	bl	263c <InflateSkipData>
   1be50:	ldr	r3, [sp, #260]	; 0x104
   1be54:	ldr	r3, [r3]
   1be58:	add	r7, r7, r3
   1be5c:	b	1bf8c <ReadCompressedDataSlabN+0x2814>
   1be60:	mov	r5, #0
   1be64:	b	1c008 <ReadCompressedDataSlabN+0x2890>
   1be68:	sub	r4, r4, r1
   1be6c:	add	r3, r6, r5, lsl #2
   1be70:	ldr	fp, [r3, #-4]
   1be74:	ldr	r3, [r8]
   1be78:	mla	r3, r3, fp, r4
   1be7c:	ldr	r2, [sp, #248]	; 0xf8
   1be80:	ldr	r1, [sp, #16]
   1be84:	ldr	r0, [sp, #8]
   1be88:	bl	263c <InflateSkipData>
   1be8c:	ldr	r1, [r8]
   1be90:	mla	r4, r1, fp, r4
   1be94:	add	r7, r7, r4
   1be98:	add	r5, r5, #1
   1be9c:	ldr	r3, [sp, #252]	; 0xfc
   1bea0:	cmp	r3, r5
   1bea4:	beq	1bf58 <ReadCompressedDataSlabN+0x27e0>
   1bea8:	ldr	r0, [r9, r5, lsl #2]
   1beac:	add	r0, r0, #1
   1beb0:	str	r0, [r9, r5, lsl #2]
   1beb4:	add	r8, r8, #4
   1beb8:	ldr	r1, [sl, #4]!
   1bebc:	bl	517e8 <__aeabi_idivmod>
   1bec0:	cmp	r1, #0
   1bec4:	bne	1bf24 <ReadCompressedDataSlabN+0x27ac>
   1bec8:	mov	r3, #0
   1becc:	str	r3, [r9, r5, lsl #2]
   1bed0:	ldr	r4, [r6, r5, lsl #2]
   1bed4:	mov	r1, r4
   1bed8:	mov	r0, r7
   1bedc:	bl	517e8 <__aeabi_idivmod>
   1bee0:	cmp	r1, #0
   1bee4:	bne	1be68 <ReadCompressedDataSlabN+0x26f0>
   1bee8:	ldr	r3, [r8]
   1beec:	cmp	r3, #0
   1bef0:	beq	1be98 <ReadCompressedDataSlabN+0x2720>
   1bef4:	add	fp, r6, r5, lsl #2
   1bef8:	ldr	r4, [fp, #-4]
   1befc:	mul	r3, r4, r3
   1bf00:	ldr	r2, [sp, #248]	; 0xf8
   1bf04:	ldr	r1, [sp, #16]
   1bf08:	ldr	r0, [sp, #8]
   1bf0c:	bl	263c <InflateSkipData>
   1bf10:	ldr	r3, [r8]
   1bf14:	mla	r7, r3, r4, r7
   1bf18:	b	1be98 <ReadCompressedDataSlabN+0x2720>
   1bf1c:	mov	r5, #1
   1bf20:	b	1bf2c <ReadCompressedDataSlabN+0x27b4>
   1bf24:	ldr	r4, [sp, #264]	; 0x108
   1bf28:	ldr	fp, [sp, #268]	; 0x10c
   1bf2c:	add	r3, sp, #208	; 0xd0
   1bf30:	add	r5, r3, r5, lsl #2
   1bf34:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1bf38:	cmp	r3, #0
   1bf3c:	beq	1bf60 <ReadCompressedDataSlabN+0x27e8>
   1bf40:	add	r7, r7, r3
   1bf44:	ldr	r2, [sp, #248]	; 0xf8
   1bf48:	ldr	r1, [sp, #16]
   1bf4c:	ldr	r0, [sp, #8]
   1bf50:	bl	263c <InflateSkipData>
   1bf54:	b	1bf60 <ReadCompressedDataSlabN+0x27e8>
   1bf58:	ldr	r4, [sp, #264]	; 0x108
   1bf5c:	ldr	fp, [sp, #268]	; 0x10c
   1bf60:	ldr	r3, [fp]
   1bf64:	ldr	r2, [sp, #24]
   1bf68:	add	r3, r2, r3
   1bf6c:	str	r3, [sp, #24]
   1bf70:	ldr	r2, [sp, #20]
   1bf74:	cmp	r3, r2
   1bf78:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1bf7c:	ldr	r3, [sp, #260]	; 0x104
   1bf80:	ldr	r3, [r3]
   1bf84:	cmp	r3, #0
   1bf88:	bne	1be40 <ReadCompressedDataSlabN+0x26c8>
   1bf8c:	ldr	r3, [fp]
   1bf90:	sub	r3, r3, #1
   1bf94:	cmp	r3, #0
   1bf98:	ble	1be60 <ReadCompressedDataSlabN+0x26e8>
   1bf9c:	ldr	r3, [sp, #12]
   1bfa0:	ldr	r2, [sp, #24]
   1bfa4:	add	r6, r3, r2, lsl #1
   1bfa8:	mov	r5, #0
   1bfac:	ldr	r8, [sp, #248]	; 0xf8
   1bfb0:	ldr	sl, [sp, #16]
   1bfb4:	mov	r3, #1
   1bfb8:	str	r3, [sp]
   1bfbc:	mov	r3, r8
   1bfc0:	mov	r2, r6
   1bfc4:	mov	r1, sl
   1bfc8:	ldr	r0, [sp, #8]
   1bfcc:	bl	11ee4 <ReadCompressedUInt16Data>
   1bfd0:	ldr	r3, [r4]
   1bfd4:	sub	r3, r3, #1
   1bfd8:	mov	r2, r8
   1bfdc:	mov	r1, sl
   1bfe0:	ldr	r0, [sp, #8]
   1bfe4:	bl	263c <InflateSkipData>
   1bfe8:	ldr	r3, [r4]
   1bfec:	add	r7, r7, r3
   1bff0:	add	r5, r5, #1
   1bff4:	add	r6, r6, #2
   1bff8:	ldr	r3, [fp]
   1bffc:	sub	r3, r3, #1
   1c000:	cmp	r3, r5
   1c004:	bgt	1bfb4 <ReadCompressedDataSlabN+0x283c>
   1c008:	ldr	r3, [sp, #24]
   1c00c:	add	r2, r3, r5
   1c010:	mov	r3, #1
   1c014:	str	r3, [sp]
   1c018:	ldr	r3, [sp, #248]	; 0xf8
   1c01c:	ldr	r1, [sp, #12]
   1c020:	add	r2, r1, r2, lsl #1
   1c024:	ldr	r6, [sp, #16]
   1c028:	mov	r1, r6
   1c02c:	ldr	r5, [sp, #8]
   1c030:	mov	r0, r5
   1c034:	bl	11ee4 <ReadCompressedUInt16Data>
   1c038:	ldr	r2, [fp]
   1c03c:	sub	r2, r2, #1
   1c040:	ldr	r3, [r4]
   1c044:	mul	r2, r3, r2
   1c048:	ldr	r3, [sp, #256]	; 0x100
   1c04c:	ldr	r3, [r3]
   1c050:	sub	r3, r3, r2
   1c054:	ldr	r2, [sp, #260]	; 0x104
   1c058:	ldr	r2, [r2]
   1c05c:	sub	r3, r3, r2
   1c060:	add	r7, r7, r3
   1c064:	sub	r3, r3, #1
   1c068:	ldr	r2, [sp, #248]	; 0xf8
   1c06c:	mov	r1, r6
   1c070:	mov	r0, r5
   1c074:	bl	263c <InflateSkipData>
   1c078:	ldr	r3, [sp, #252]	; 0xfc
   1c07c:	cmp	r3, #1
   1c080:	ble	1bf60 <ReadCompressedDataSlabN+0x27e8>
   1c084:	ldr	r0, [sp, #132]	; 0x84
   1c088:	add	r0, r0, #1
   1c08c:	str	r0, [sp, #132]	; 0x84
   1c090:	ldr	r1, [fp, #4]
   1c094:	bl	517e8 <__aeabi_idivmod>
   1c098:	cmp	r1, #0
   1c09c:	bne	1bf1c <ReadCompressedDataSlabN+0x27a4>
   1c0a0:	add	sl, fp, #4
   1c0a4:	ldr	r3, [sp, #260]	; 0x104
   1c0a8:	add	r8, r3, #4
   1c0ac:	mov	r5, #1
   1c0b0:	str	r4, [sp, #264]	; 0x108
   1c0b4:	str	fp, [sp, #268]	; 0x10c
   1c0b8:	ldr	r6, [sp, #28]
   1c0bc:	b	1bec8 <ReadCompressedDataSlabN+0x2750>
   1c0c0:	ldr	r3, [r4]
   1c0c4:	sub	r3, r3, #1
   1c0c8:	str	r3, [sp, #168]	; 0xa8
   1c0cc:	ldr	r3, [sp, #256]	; 0x100
   1c0d0:	ldr	r3, [r3]
   1c0d4:	str	r3, [sp, #88]	; 0x58
   1c0d8:	ldr	r3, [fp]
   1c0dc:	str	r3, [sp, #20]
   1c0e0:	ldr	r3, [sp, #252]	; 0xfc
   1c0e4:	cmp	r3, #1
   1c0e8:	ble	1c120 <ReadCompressedDataSlabN+0x29a8>
   1c0ec:	str	r4, [sp, #16]
   1c0f0:	add	sl, sp, #172	; 0xac
   1c0f4:	ldr	lr, [sp, #256]	; 0x100
   1c0f8:	add	r9, sp, #88	; 0x58
   1c0fc:	add	r8, fp, #4
   1c100:	ldr	r3, [sp, #260]	; 0x104
   1c104:	add	r6, r3, #4
   1c108:	mov	r5, #2
   1c10c:	mov	r7, #0
   1c110:	str	r4, [sp, #264]	; 0x108
   1c114:	str	fp, [sp, #268]	; 0x10c
   1c118:	mov	fp, lr
   1c11c:	b	1d368 <ReadCompressedDataSlabN+0x3bf0>
   1c120:	mov	r7, #0
   1c124:	b	1d3f4 <ReadCompressedDataSlabN+0x3c7c>
   1c128:	ldr	r3, [sp, #20]
   1c12c:	cmp	r3, #0
   1c130:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1c134:	mov	r3, #0
   1c138:	str	r3, [sp, #24]
   1c13c:	add	r3, sp, #32
   1c140:	str	r3, [sp, #16]
   1c144:	add	r8, sp, #128	; 0x80
   1c148:	add	r3, sp, #88	; 0x58
   1c14c:	str	fp, [sp, #268]	; 0x10c
   1c150:	mov	sl, r3
   1c154:	b	1c264 <ReadCompressedDataSlabN+0x2aec>
   1c158:	ldr	r2, [sp, #248]	; 0xf8
   1c15c:	ldr	r1, [sp, #16]
   1c160:	ldr	r0, [sp, #8]
   1c164:	bl	263c <InflateSkipData>
   1c168:	ldr	r3, [sp, #260]	; 0x104
   1c16c:	ldr	r3, [r3]
   1c170:	add	r7, r7, r3
   1c174:	b	1c274 <ReadCompressedDataSlabN+0x2afc>
   1c178:	sub	r5, r5, r1
   1c17c:	add	r3, sl, r4, lsl #2
   1c180:	ldr	fp, [r3, #-4]
   1c184:	ldr	r3, [r6]
   1c188:	mla	r3, r3, fp, r5
   1c18c:	ldr	r2, [sp, #248]	; 0xf8
   1c190:	ldr	r1, [sp, #16]
   1c194:	ldr	r0, [sp, #8]
   1c198:	bl	263c <InflateSkipData>
   1c19c:	ldr	r1, [r6]
   1c1a0:	mla	r5, r1, fp, r5
   1c1a4:	add	r7, r7, r5
   1c1a8:	add	r4, r4, #1
   1c1ac:	ldr	r3, [sp, #252]	; 0xfc
   1c1b0:	cmp	r3, r4
   1c1b4:	beq	1c244 <ReadCompressedDataSlabN+0x2acc>
   1c1b8:	ldr	r0, [r8, r4, lsl #2]
   1c1bc:	add	r0, r0, #1
   1c1c0:	str	r0, [r8, r4, lsl #2]
   1c1c4:	add	r6, r6, #4
   1c1c8:	ldr	r1, [r9, #4]!
   1c1cc:	bl	517e8 <__aeabi_idivmod>
   1c1d0:	cmp	r1, #0
   1c1d4:	bne	1c230 <ReadCompressedDataSlabN+0x2ab8>
   1c1d8:	mov	r3, #0
   1c1dc:	str	r3, [r8, r4, lsl #2]
   1c1e0:	ldr	r5, [sl, r4, lsl #2]
   1c1e4:	mov	r1, r5
   1c1e8:	mov	r0, r7
   1c1ec:	bl	517e8 <__aeabi_idivmod>
   1c1f0:	cmp	r1, #0
   1c1f4:	bne	1c178 <ReadCompressedDataSlabN+0x2a00>
   1c1f8:	ldr	r3, [r6]
   1c1fc:	cmp	r3, #0
   1c200:	beq	1c1a8 <ReadCompressedDataSlabN+0x2a30>
   1c204:	add	fp, sl, r4, lsl #2
   1c208:	ldr	r5, [fp, #-4]
   1c20c:	mul	r3, r5, r3
   1c210:	ldr	r2, [sp, #248]	; 0xf8
   1c214:	ldr	r1, [sp, #16]
   1c218:	ldr	r0, [sp, #8]
   1c21c:	bl	263c <InflateSkipData>
   1c220:	ldr	r3, [r6]
   1c224:	mla	r7, r3, r5, r7
   1c228:	b	1c1a8 <ReadCompressedDataSlabN+0x2a30>
   1c22c:	ldr	r4, [sp, #28]
   1c230:	add	r3, sp, #208	; 0xd0
   1c234:	add	r4, r3, r4, lsl #2
   1c238:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1c23c:	cmp	r3, #0
   1c240:	bne	1c330 <ReadCompressedDataSlabN+0x2bb8>
   1c244:	ldr	r3, [sp, #268]	; 0x10c
   1c248:	ldr	r3, [r3]
   1c24c:	ldr	r2, [sp, #24]
   1c250:	add	r3, r2, r3
   1c254:	str	r3, [sp, #24]
   1c258:	ldr	r2, [sp, #20]
   1c25c:	cmp	r3, r2
   1c260:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1c264:	ldr	r3, [sp, #260]	; 0x104
   1c268:	ldr	r3, [r3]
   1c26c:	cmp	r3, #0
   1c270:	bne	1c158 <ReadCompressedDataSlabN+0x29e0>
   1c274:	ldr	r3, [sp, #268]	; 0x10c
   1c278:	ldr	r3, [r3]
   1c27c:	str	r3, [sp]
   1c280:	ldr	r3, [sp, #248]	; 0xf8
   1c284:	ldr	r2, [sp, #12]
   1c288:	ldr	r1, [sp, #24]
   1c28c:	add	r2, r2, r1
   1c290:	ldr	r5, [sp, #16]
   1c294:	mov	r1, r5
   1c298:	ldr	r4, [sp, #8]
   1c29c:	mov	r0, r4
   1c2a0:	bl	13900 <ReadCompressedInt8Data>
   1c2a4:	ldr	r3, [sp, #256]	; 0x100
   1c2a8:	ldr	r3, [r3]
   1c2ac:	ldr	r2, [sp, #260]	; 0x104
   1c2b0:	ldr	r2, [r2]
   1c2b4:	sub	r3, r3, r2
   1c2b8:	ldr	r2, [sp, #268]	; 0x10c
   1c2bc:	ldr	r2, [r2]
   1c2c0:	sub	r3, r3, r2
   1c2c4:	ldr	r2, [sp, #248]	; 0xf8
   1c2c8:	mov	r1, r5
   1c2cc:	mov	r0, r4
   1c2d0:	bl	263c <InflateSkipData>
   1c2d4:	ldr	r3, [sp, #256]	; 0x100
   1c2d8:	ldr	r3, [r3]
   1c2dc:	ldr	r2, [sp, #260]	; 0x104
   1c2e0:	ldr	r2, [r2]
   1c2e4:	sub	r3, r3, r2
   1c2e8:	add	r7, r3, r7
   1c2ec:	ldr	r3, [sp, #252]	; 0xfc
   1c2f0:	cmp	r3, #1
   1c2f4:	ble	1c244 <ReadCompressedDataSlabN+0x2acc>
   1c2f8:	ldr	r0, [sp, #132]	; 0x84
   1c2fc:	add	r0, r0, #1
   1c300:	str	r0, [sp, #132]	; 0x84
   1c304:	ldr	r3, [sp, #268]	; 0x10c
   1c308:	ldr	r1, [r3, #4]
   1c30c:	bl	517e8 <__aeabi_idivmod>
   1c310:	cmp	r1, #0
   1c314:	bne	1c22c <ReadCompressedDataSlabN+0x2ab4>
   1c318:	ldr	r3, [sp, #268]	; 0x10c
   1c31c:	add	r9, r3, #4
   1c320:	ldr	r3, [sp, #260]	; 0x104
   1c324:	add	r6, r3, #4
   1c328:	ldr	r4, [sp, #28]
   1c32c:	b	1c1d8 <ReadCompressedDataSlabN+0x2a60>
   1c330:	add	r7, r7, r3
   1c334:	ldr	r2, [sp, #248]	; 0xf8
   1c338:	ldr	r1, [sp, #16]
   1c33c:	ldr	r0, [sp, #8]
   1c340:	bl	263c <InflateSkipData>
   1c344:	b	1c244 <ReadCompressedDataSlabN+0x2acc>
   1c348:	ldr	r2, [sp, #248]	; 0xf8
   1c34c:	ldr	r1, [sp, #16]
   1c350:	ldr	r0, [sp, #8]
   1c354:	bl	263c <InflateSkipData>
   1c358:	ldr	r3, [sp, #260]	; 0x104
   1c35c:	ldr	r3, [r3]
   1c360:	add	r7, r7, r3
   1c364:	b	1c494 <ReadCompressedDataSlabN+0x2d1c>
   1c368:	mov	r5, #0
   1c36c:	b	1c508 <ReadCompressedDataSlabN+0x2d90>
   1c370:	sub	r4, r4, r1
   1c374:	add	r3, r6, r5, lsl #2
   1c378:	ldr	fp, [r3, #-4]
   1c37c:	ldr	r3, [r8]
   1c380:	mla	r3, r3, fp, r4
   1c384:	ldr	r2, [sp, #248]	; 0xf8
   1c388:	ldr	r1, [sp, #16]
   1c38c:	ldr	r0, [sp, #8]
   1c390:	bl	263c <InflateSkipData>
   1c394:	ldr	r1, [r8]
   1c398:	mla	r4, r1, fp, r4
   1c39c:	add	r7, r7, r4
   1c3a0:	add	r5, r5, #1
   1c3a4:	ldr	r3, [sp, #252]	; 0xfc
   1c3a8:	cmp	r3, r5
   1c3ac:	beq	1c460 <ReadCompressedDataSlabN+0x2ce8>
   1c3b0:	ldr	r0, [r9, r5, lsl #2]
   1c3b4:	add	r0, r0, #1
   1c3b8:	str	r0, [r9, r5, lsl #2]
   1c3bc:	add	r8, r8, #4
   1c3c0:	ldr	r1, [sl, #4]!
   1c3c4:	bl	517e8 <__aeabi_idivmod>
   1c3c8:	cmp	r1, #0
   1c3cc:	bne	1c42c <ReadCompressedDataSlabN+0x2cb4>
   1c3d0:	mov	r3, #0
   1c3d4:	str	r3, [r9, r5, lsl #2]
   1c3d8:	ldr	r4, [r6, r5, lsl #2]
   1c3dc:	mov	r1, r4
   1c3e0:	mov	r0, r7
   1c3e4:	bl	517e8 <__aeabi_idivmod>
   1c3e8:	cmp	r1, #0
   1c3ec:	bne	1c370 <ReadCompressedDataSlabN+0x2bf8>
   1c3f0:	ldr	r3, [r8]
   1c3f4:	cmp	r3, #0
   1c3f8:	beq	1c3a0 <ReadCompressedDataSlabN+0x2c28>
   1c3fc:	add	fp, r6, r5, lsl #2
   1c400:	ldr	r4, [fp, #-4]
   1c404:	mul	r3, r4, r3
   1c408:	ldr	r2, [sp, #248]	; 0xf8
   1c40c:	ldr	r1, [sp, #16]
   1c410:	ldr	r0, [sp, #8]
   1c414:	bl	263c <InflateSkipData>
   1c418:	ldr	r3, [r8]
   1c41c:	mla	r7, r3, r4, r7
   1c420:	b	1c3a0 <ReadCompressedDataSlabN+0x2c28>
   1c424:	mov	r5, #1
   1c428:	b	1c434 <ReadCompressedDataSlabN+0x2cbc>
   1c42c:	ldr	r4, [sp, #264]	; 0x108
   1c430:	ldr	fp, [sp, #268]	; 0x10c
   1c434:	add	r3, sp, #208	; 0xd0
   1c438:	add	r5, r3, r5, lsl #2
   1c43c:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1c440:	cmp	r3, #0
   1c444:	beq	1c468 <ReadCompressedDataSlabN+0x2cf0>
   1c448:	add	r7, r7, r3
   1c44c:	ldr	r2, [sp, #248]	; 0xf8
   1c450:	ldr	r1, [sp, #16]
   1c454:	ldr	r0, [sp, #8]
   1c458:	bl	263c <InflateSkipData>
   1c45c:	b	1c468 <ReadCompressedDataSlabN+0x2cf0>
   1c460:	ldr	r4, [sp, #264]	; 0x108
   1c464:	ldr	fp, [sp, #268]	; 0x10c
   1c468:	ldr	r3, [fp]
   1c46c:	ldr	r2, [sp, #24]
   1c470:	add	r3, r2, r3
   1c474:	str	r3, [sp, #24]
   1c478:	ldr	r2, [sp, #20]
   1c47c:	cmp	r3, r2
   1c480:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1c484:	ldr	r3, [sp, #260]	; 0x104
   1c488:	ldr	r3, [r3]
   1c48c:	cmp	r3, #0
   1c490:	bne	1c348 <ReadCompressedDataSlabN+0x2bd0>
   1c494:	ldr	r3, [fp]
   1c498:	sub	r3, r3, #1
   1c49c:	cmp	r3, #0
   1c4a0:	ble	1c368 <ReadCompressedDataSlabN+0x2bf0>
   1c4a4:	mov	r5, #0
   1c4a8:	ldr	r8, [sp, #24]
   1c4ac:	ldr	sl, [sp, #12]
   1c4b0:	ldr	r6, [sp, #16]
   1c4b4:	add	r2, r5, r8
   1c4b8:	mov	r3, #1
   1c4bc:	str	r3, [sp]
   1c4c0:	ldr	r3, [sp, #248]	; 0xf8
   1c4c4:	add	r2, sl, r2
   1c4c8:	mov	r1, r6
   1c4cc:	ldr	r0, [sp, #8]
   1c4d0:	bl	13900 <ReadCompressedInt8Data>
   1c4d4:	ldr	r3, [r4]
   1c4d8:	sub	r3, r3, #1
   1c4dc:	ldr	r2, [sp, #248]	; 0xf8
   1c4e0:	mov	r1, r6
   1c4e4:	ldr	r0, [sp, #8]
   1c4e8:	bl	263c <InflateSkipData>
   1c4ec:	ldr	r3, [r4]
   1c4f0:	add	r7, r7, r3
   1c4f4:	add	r5, r5, #1
   1c4f8:	ldr	r3, [fp]
   1c4fc:	sub	r3, r3, #1
   1c500:	cmp	r3, r5
   1c504:	bgt	1c4b4 <ReadCompressedDataSlabN+0x2d3c>
   1c508:	ldr	r3, [sp, #24]
   1c50c:	add	r2, r3, r5
   1c510:	mov	r3, #1
   1c514:	str	r3, [sp]
   1c518:	ldr	r3, [sp, #248]	; 0xf8
   1c51c:	ldr	r1, [sp, #12]
   1c520:	add	r2, r1, r2
   1c524:	ldr	r6, [sp, #16]
   1c528:	mov	r1, r6
   1c52c:	ldr	r5, [sp, #8]
   1c530:	mov	r0, r5
   1c534:	bl	13900 <ReadCompressedInt8Data>
   1c538:	ldr	r2, [fp]
   1c53c:	sub	r2, r2, #1
   1c540:	ldr	r3, [r4]
   1c544:	mul	r2, r3, r2
   1c548:	ldr	r3, [sp, #256]	; 0x100
   1c54c:	ldr	r3, [r3]
   1c550:	sub	r3, r3, r2
   1c554:	ldr	r2, [sp, #260]	; 0x104
   1c558:	ldr	r2, [r2]
   1c55c:	sub	r3, r3, r2
   1c560:	add	r7, r7, r3
   1c564:	sub	r3, r3, #1
   1c568:	ldr	r2, [sp, #248]	; 0xf8
   1c56c:	mov	r1, r6
   1c570:	mov	r0, r5
   1c574:	bl	263c <InflateSkipData>
   1c578:	ldr	r3, [sp, #252]	; 0xfc
   1c57c:	cmp	r3, #1
   1c580:	ble	1c468 <ReadCompressedDataSlabN+0x2cf0>
   1c584:	ldr	r0, [sp, #132]	; 0x84
   1c588:	add	r0, r0, #1
   1c58c:	str	r0, [sp, #132]	; 0x84
   1c590:	ldr	r1, [fp, #4]
   1c594:	bl	517e8 <__aeabi_idivmod>
   1c598:	cmp	r1, #0
   1c59c:	bne	1c424 <ReadCompressedDataSlabN+0x2cac>
   1c5a0:	add	sl, fp, #4
   1c5a4:	ldr	r3, [sp, #260]	; 0x104
   1c5a8:	add	r8, r3, #4
   1c5ac:	mov	r5, #1
   1c5b0:	str	r4, [sp, #264]	; 0x108
   1c5b4:	str	fp, [sp, #268]	; 0x10c
   1c5b8:	ldr	r6, [sp, #28]
   1c5bc:	b	1c3d0 <ReadCompressedDataSlabN+0x2c58>
   1c5c0:	ldr	r3, [r4]
   1c5c4:	sub	r3, r3, #1
   1c5c8:	str	r3, [sp, #168]	; 0xa8
   1c5cc:	ldr	r3, [sp, #256]	; 0x100
   1c5d0:	ldr	r3, [r3]
   1c5d4:	str	r3, [sp, #88]	; 0x58
   1c5d8:	ldr	r3, [fp]
   1c5dc:	str	r3, [sp, #20]
   1c5e0:	ldr	r3, [sp, #252]	; 0xfc
   1c5e4:	cmp	r3, #1
   1c5e8:	ble	1c620 <ReadCompressedDataSlabN+0x2ea8>
   1c5ec:	str	r4, [sp, #16]
   1c5f0:	add	sl, sp, #172	; 0xac
   1c5f4:	ldr	lr, [sp, #256]	; 0x100
   1c5f8:	add	r9, sp, #88	; 0x58
   1c5fc:	add	r8, fp, #4
   1c600:	ldr	r3, [sp, #260]	; 0x104
   1c604:	add	r6, r3, #4
   1c608:	mov	r5, #2
   1c60c:	mov	r7, #0
   1c610:	str	r4, [sp, #264]	; 0x108
   1c614:	str	fp, [sp, #268]	; 0x10c
   1c618:	mov	fp, lr
   1c61c:	b	1d474 <ReadCompressedDataSlabN+0x3cfc>
   1c620:	mov	r7, #0
   1c624:	b	1d500 <ReadCompressedDataSlabN+0x3d88>
   1c628:	ldr	r3, [sp, #20]
   1c62c:	cmp	r3, #0
   1c630:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1c634:	mov	r3, #0
   1c638:	str	r3, [sp, #24]
   1c63c:	add	r3, sp, #32
   1c640:	str	r3, [sp, #16]
   1c644:	add	r8, sp, #128	; 0x80
   1c648:	add	r3, sp, #88	; 0x58
   1c64c:	str	fp, [sp, #268]	; 0x10c
   1c650:	mov	sl, r3
   1c654:	b	1c764 <ReadCompressedDataSlabN+0x2fec>
   1c658:	ldr	r2, [sp, #248]	; 0xf8
   1c65c:	ldr	r1, [sp, #16]
   1c660:	ldr	r0, [sp, #8]
   1c664:	bl	263c <InflateSkipData>
   1c668:	ldr	r3, [sp, #260]	; 0x104
   1c66c:	ldr	r3, [r3]
   1c670:	add	r7, r7, r3
   1c674:	b	1c774 <ReadCompressedDataSlabN+0x2ffc>
   1c678:	sub	r5, r5, r1
   1c67c:	add	r3, sl, r4, lsl #2
   1c680:	ldr	fp, [r3, #-4]
   1c684:	ldr	r3, [r6]
   1c688:	mla	r3, r3, fp, r5
   1c68c:	ldr	r2, [sp, #248]	; 0xf8
   1c690:	ldr	r1, [sp, #16]
   1c694:	ldr	r0, [sp, #8]
   1c698:	bl	263c <InflateSkipData>
   1c69c:	ldr	r1, [r6]
   1c6a0:	mla	r5, r1, fp, r5
   1c6a4:	add	r7, r7, r5
   1c6a8:	add	r4, r4, #1
   1c6ac:	ldr	r3, [sp, #252]	; 0xfc
   1c6b0:	cmp	r3, r4
   1c6b4:	beq	1c744 <ReadCompressedDataSlabN+0x2fcc>
   1c6b8:	ldr	r0, [r8, r4, lsl #2]
   1c6bc:	add	r0, r0, #1
   1c6c0:	str	r0, [r8, r4, lsl #2]
   1c6c4:	add	r6, r6, #4
   1c6c8:	ldr	r1, [r9, #4]!
   1c6cc:	bl	517e8 <__aeabi_idivmod>
   1c6d0:	cmp	r1, #0
   1c6d4:	bne	1c730 <ReadCompressedDataSlabN+0x2fb8>
   1c6d8:	mov	r3, #0
   1c6dc:	str	r3, [r8, r4, lsl #2]
   1c6e0:	ldr	r5, [sl, r4, lsl #2]
   1c6e4:	mov	r1, r5
   1c6e8:	mov	r0, r7
   1c6ec:	bl	517e8 <__aeabi_idivmod>
   1c6f0:	cmp	r1, #0
   1c6f4:	bne	1c678 <ReadCompressedDataSlabN+0x2f00>
   1c6f8:	ldr	r3, [r6]
   1c6fc:	cmp	r3, #0
   1c700:	beq	1c6a8 <ReadCompressedDataSlabN+0x2f30>
   1c704:	add	fp, sl, r4, lsl #2
   1c708:	ldr	r5, [fp, #-4]
   1c70c:	mul	r3, r5, r3
   1c710:	ldr	r2, [sp, #248]	; 0xf8
   1c714:	ldr	r1, [sp, #16]
   1c718:	ldr	r0, [sp, #8]
   1c71c:	bl	263c <InflateSkipData>
   1c720:	ldr	r3, [r6]
   1c724:	mla	r7, r3, r5, r7
   1c728:	b	1c6a8 <ReadCompressedDataSlabN+0x2f30>
   1c72c:	ldr	r4, [sp, #28]
   1c730:	add	r3, sp, #208	; 0xd0
   1c734:	add	r4, r3, r4, lsl #2
   1c738:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1c73c:	cmp	r3, #0
   1c740:	bne	1c830 <ReadCompressedDataSlabN+0x30b8>
   1c744:	ldr	r3, [sp, #268]	; 0x10c
   1c748:	ldr	r3, [r3]
   1c74c:	ldr	r2, [sp, #24]
   1c750:	add	r3, r2, r3
   1c754:	str	r3, [sp, #24]
   1c758:	ldr	r2, [sp, #20]
   1c75c:	cmp	r3, r2
   1c760:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1c764:	ldr	r3, [sp, #260]	; 0x104
   1c768:	ldr	r3, [r3]
   1c76c:	cmp	r3, #0
   1c770:	bne	1c658 <ReadCompressedDataSlabN+0x2ee0>
   1c774:	ldr	r3, [sp, #268]	; 0x10c
   1c778:	ldr	r3, [r3]
   1c77c:	str	r3, [sp]
   1c780:	ldr	r3, [sp, #248]	; 0xf8
   1c784:	ldr	r2, [sp, #12]
   1c788:	ldr	r1, [sp, #24]
   1c78c:	add	r2, r2, r1
   1c790:	ldr	r5, [sp, #16]
   1c794:	mov	r1, r5
   1c798:	ldr	r4, [sp, #8]
   1c79c:	mov	r0, r4
   1c7a0:	bl	1531c <ReadCompressedUInt8Data>
   1c7a4:	ldr	r3, [sp, #256]	; 0x100
   1c7a8:	ldr	r3, [r3]
   1c7ac:	ldr	r2, [sp, #260]	; 0x104
   1c7b0:	ldr	r2, [r2]
   1c7b4:	sub	r3, r3, r2
   1c7b8:	ldr	r2, [sp, #268]	; 0x10c
   1c7bc:	ldr	r2, [r2]
   1c7c0:	sub	r3, r3, r2
   1c7c4:	ldr	r2, [sp, #248]	; 0xf8
   1c7c8:	mov	r1, r5
   1c7cc:	mov	r0, r4
   1c7d0:	bl	263c <InflateSkipData>
   1c7d4:	ldr	r3, [sp, #256]	; 0x100
   1c7d8:	ldr	r3, [r3]
   1c7dc:	ldr	r2, [sp, #260]	; 0x104
   1c7e0:	ldr	r2, [r2]
   1c7e4:	sub	r3, r3, r2
   1c7e8:	add	r7, r3, r7
   1c7ec:	ldr	r3, [sp, #252]	; 0xfc
   1c7f0:	cmp	r3, #1
   1c7f4:	ble	1c744 <ReadCompressedDataSlabN+0x2fcc>
   1c7f8:	ldr	r0, [sp, #132]	; 0x84
   1c7fc:	add	r0, r0, #1
   1c800:	str	r0, [sp, #132]	; 0x84
   1c804:	ldr	r3, [sp, #268]	; 0x10c
   1c808:	ldr	r1, [r3, #4]
   1c80c:	bl	517e8 <__aeabi_idivmod>
   1c810:	cmp	r1, #0
   1c814:	bne	1c72c <ReadCompressedDataSlabN+0x2fb4>
   1c818:	ldr	r3, [sp, #268]	; 0x10c
   1c81c:	add	r9, r3, #4
   1c820:	ldr	r3, [sp, #260]	; 0x104
   1c824:	add	r6, r3, #4
   1c828:	ldr	r4, [sp, #28]
   1c82c:	b	1c6d8 <ReadCompressedDataSlabN+0x2f60>
   1c830:	add	r7, r7, r3
   1c834:	ldr	r2, [sp, #248]	; 0xf8
   1c838:	ldr	r1, [sp, #16]
   1c83c:	ldr	r0, [sp, #8]
   1c840:	bl	263c <InflateSkipData>
   1c844:	b	1c744 <ReadCompressedDataSlabN+0x2fcc>
   1c848:	ldr	r2, [sp, #248]	; 0xf8
   1c84c:	ldr	r1, [sp, #16]
   1c850:	ldr	r0, [sp, #8]
   1c854:	bl	263c <InflateSkipData>
   1c858:	ldr	r3, [sp, #260]	; 0x104
   1c85c:	ldr	r3, [r3]
   1c860:	add	r7, r7, r3
   1c864:	b	1c994 <ReadCompressedDataSlabN+0x321c>
   1c868:	mov	r5, #0
   1c86c:	b	1ca08 <ReadCompressedDataSlabN+0x3290>
   1c870:	sub	r4, r4, r1
   1c874:	add	r3, r6, r5, lsl #2
   1c878:	ldr	fp, [r3, #-4]
   1c87c:	ldr	r3, [r8]
   1c880:	mla	r3, r3, fp, r4
   1c884:	ldr	r2, [sp, #248]	; 0xf8
   1c888:	ldr	r1, [sp, #16]
   1c88c:	ldr	r0, [sp, #8]
   1c890:	bl	263c <InflateSkipData>
   1c894:	ldr	r1, [r8]
   1c898:	mla	r4, r1, fp, r4
   1c89c:	add	r7, r7, r4
   1c8a0:	add	r5, r5, #1
   1c8a4:	ldr	r3, [sp, #252]	; 0xfc
   1c8a8:	cmp	r3, r5
   1c8ac:	beq	1c960 <ReadCompressedDataSlabN+0x31e8>
   1c8b0:	ldr	r0, [r9, r5, lsl #2]
   1c8b4:	add	r0, r0, #1
   1c8b8:	str	r0, [r9, r5, lsl #2]
   1c8bc:	add	r8, r8, #4
   1c8c0:	ldr	r1, [sl, #4]!
   1c8c4:	bl	517e8 <__aeabi_idivmod>
   1c8c8:	cmp	r1, #0
   1c8cc:	bne	1c92c <ReadCompressedDataSlabN+0x31b4>
   1c8d0:	mov	r3, #0
   1c8d4:	str	r3, [r9, r5, lsl #2]
   1c8d8:	ldr	r4, [r6, r5, lsl #2]
   1c8dc:	mov	r1, r4
   1c8e0:	mov	r0, r7
   1c8e4:	bl	517e8 <__aeabi_idivmod>
   1c8e8:	cmp	r1, #0
   1c8ec:	bne	1c870 <ReadCompressedDataSlabN+0x30f8>
   1c8f0:	ldr	r3, [r8]
   1c8f4:	cmp	r3, #0
   1c8f8:	beq	1c8a0 <ReadCompressedDataSlabN+0x3128>
   1c8fc:	add	fp, r6, r5, lsl #2
   1c900:	ldr	r4, [fp, #-4]
   1c904:	mul	r3, r4, r3
   1c908:	ldr	r2, [sp, #248]	; 0xf8
   1c90c:	ldr	r1, [sp, #16]
   1c910:	ldr	r0, [sp, #8]
   1c914:	bl	263c <InflateSkipData>
   1c918:	ldr	r3, [r8]
   1c91c:	mla	r7, r3, r4, r7
   1c920:	b	1c8a0 <ReadCompressedDataSlabN+0x3128>
   1c924:	mov	r5, #1
   1c928:	b	1c934 <ReadCompressedDataSlabN+0x31bc>
   1c92c:	ldr	r4, [sp, #264]	; 0x108
   1c930:	ldr	fp, [sp, #268]	; 0x10c
   1c934:	add	r3, sp, #208	; 0xd0
   1c938:	add	r5, r3, r5, lsl #2
   1c93c:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1c940:	cmp	r3, #0
   1c944:	beq	1c968 <ReadCompressedDataSlabN+0x31f0>
   1c948:	add	r7, r7, r3
   1c94c:	ldr	r2, [sp, #248]	; 0xf8
   1c950:	ldr	r1, [sp, #16]
   1c954:	ldr	r0, [sp, #8]
   1c958:	bl	263c <InflateSkipData>
   1c95c:	b	1c968 <ReadCompressedDataSlabN+0x31f0>
   1c960:	ldr	r4, [sp, #264]	; 0x108
   1c964:	ldr	fp, [sp, #268]	; 0x10c
   1c968:	ldr	r3, [fp]
   1c96c:	ldr	r2, [sp, #24]
   1c970:	add	r3, r2, r3
   1c974:	str	r3, [sp, #24]
   1c978:	ldr	r2, [sp, #20]
   1c97c:	cmp	r3, r2
   1c980:	bge	1cac0 <ReadCompressedDataSlabN+0x3348>
   1c984:	ldr	r3, [sp, #260]	; 0x104
   1c988:	ldr	r3, [r3]
   1c98c:	cmp	r3, #0
   1c990:	bne	1c848 <ReadCompressedDataSlabN+0x30d0>
   1c994:	ldr	r3, [fp]
   1c998:	sub	r3, r3, #1
   1c99c:	cmp	r3, #0
   1c9a0:	ble	1c868 <ReadCompressedDataSlabN+0x30f0>
   1c9a4:	mov	r5, #0
   1c9a8:	ldr	r8, [sp, #24]
   1c9ac:	ldr	sl, [sp, #12]
   1c9b0:	ldr	r6, [sp, #16]
   1c9b4:	add	r2, r8, r5
   1c9b8:	mov	r3, #1
   1c9bc:	str	r3, [sp]
   1c9c0:	ldr	r3, [sp, #248]	; 0xf8
   1c9c4:	add	r2, sl, r2
   1c9c8:	mov	r1, r6
   1c9cc:	ldr	r0, [sp, #8]
   1c9d0:	bl	1531c <ReadCompressedUInt8Data>
   1c9d4:	ldr	r3, [r4]
   1c9d8:	sub	r3, r3, #1
   1c9dc:	ldr	r2, [sp, #248]	; 0xf8
   1c9e0:	mov	r1, r6
   1c9e4:	ldr	r0, [sp, #8]
   1c9e8:	bl	263c <InflateSkipData>
   1c9ec:	ldr	r3, [r4]
   1c9f0:	add	r7, r7, r3
   1c9f4:	add	r5, r5, #1
   1c9f8:	ldr	r3, [fp]
   1c9fc:	sub	r3, r3, #1
   1ca00:	cmp	r3, r5
   1ca04:	bgt	1c9b4 <ReadCompressedDataSlabN+0x323c>
   1ca08:	ldr	r3, [sp, #24]
   1ca0c:	add	r2, r3, r5
   1ca10:	mov	r3, #1
   1ca14:	str	r3, [sp]
   1ca18:	ldr	r3, [sp, #248]	; 0xf8
   1ca1c:	ldr	r1, [sp, #12]
   1ca20:	add	r2, r1, r2
   1ca24:	ldr	r6, [sp, #16]
   1ca28:	mov	r1, r6
   1ca2c:	ldr	r5, [sp, #8]
   1ca30:	mov	r0, r5
   1ca34:	bl	1531c <ReadCompressedUInt8Data>
   1ca38:	ldr	r2, [fp]
   1ca3c:	sub	r2, r2, #1
   1ca40:	ldr	r3, [r4]
   1ca44:	mul	r2, r3, r2
   1ca48:	ldr	r3, [sp, #256]	; 0x100
   1ca4c:	ldr	r3, [r3]
   1ca50:	sub	r3, r3, r2
   1ca54:	ldr	r2, [sp, #260]	; 0x104
   1ca58:	ldr	r2, [r2]
   1ca5c:	sub	r3, r3, r2
   1ca60:	add	r7, r7, r3
   1ca64:	sub	r3, r3, #1
   1ca68:	ldr	r2, [sp, #248]	; 0xf8
   1ca6c:	mov	r1, r6
   1ca70:	mov	r0, r5
   1ca74:	bl	263c <InflateSkipData>
   1ca78:	ldr	r3, [sp, #252]	; 0xfc
   1ca7c:	cmp	r3, #1
   1ca80:	ble	1c968 <ReadCompressedDataSlabN+0x31f0>
   1ca84:	ldr	r0, [sp, #132]	; 0x84
   1ca88:	add	r0, r0, #1
   1ca8c:	str	r0, [sp, #132]	; 0x84
   1ca90:	ldr	r1, [fp, #4]
   1ca94:	bl	517e8 <__aeabi_idivmod>
   1ca98:	cmp	r1, #0
   1ca9c:	bne	1c924 <ReadCompressedDataSlabN+0x31ac>
   1caa0:	add	sl, fp, #4
   1caa4:	ldr	r3, [sp, #260]	; 0x104
   1caa8:	add	r8, r3, #4
   1caac:	mov	r5, #1
   1cab0:	str	r4, [sp, #264]	; 0x108
   1cab4:	str	fp, [sp, #268]	; 0x10c
   1cab8:	ldr	r6, [sp, #28]
   1cabc:	b	1c8d0 <ReadCompressedDataSlabN+0x3158>
   1cac0:	add	r0, sp, #32
   1cac4:	bl	1618 <inflateEnd@plt>
   1cac8:	mov	r0, #0
   1cacc:	b	19834 <ReadCompressedDataSlabN+0xbc>
   1cad0:	mov	r0, #1
   1cad4:	b	19834 <ReadCompressedDataSlabN+0xbc>
   1cad8:	ldr	r3, [r8]
   1cadc:	ldr	r2, [sp, #20]
   1cae0:	mul	r3, r3, r2
   1cae4:	str	r3, [sp, #20]
   1cae8:	ldr	r3, [r9]
   1caec:	ldr	r2, [r6]
   1caf0:	mla	r7, r2, r3, r7
   1caf4:	add	sl, sl, #4
   1caf8:	add	r9, r9, #4
   1cafc:	add	r5, r5, #1
   1cb00:	add	r8, r8, #4
   1cb04:	add	r6, r6, #4
   1cb08:	ldr	r3, [sp, #16]
   1cb0c:	ldr	r2, [r3, #4]!
   1cb10:	str	r3, [sp, #16]
   1cb14:	sub	r2, r2, #1
   1cb18:	str	sl, [sp, #24]
   1cb1c:	str	r2, [sl]
   1cb20:	ldr	r3, [fp], #4
   1cb24:	mov	r1, r3
   1cb28:	mov	r4, r9
   1cb2c:	str	r3, [r9, #4]
   1cb30:	cmp	r5, #1
   1cb34:	beq	1cad8 <ReadCompressedDataSlabN+0x3360>
   1cb38:	mov	r3, fp
   1cb3c:	mov	r0, r3
   1cb40:	ldr	ip, [r3, #-4]!
   1cb44:	mul	r2, ip, r2
   1cb48:	ldr	r0, [r0]
   1cb4c:	mul	r1, r0, r1
   1cb50:	cmp	lr, r3
   1cb54:	bne	1cb3c <ReadCompressedDataSlabN+0x33c4>
   1cb58:	ldr	r3, [sp, #24]
   1cb5c:	str	r2, [r3]
   1cb60:	str	r1, [r4, #4]
   1cb64:	ldr	r3, [r8]
   1cb68:	ldr	r2, [sp, #20]
   1cb6c:	mul	r3, r3, r2
   1cb70:	str	r3, [sp, #20]
   1cb74:	ldr	r3, [r4]
   1cb78:	ldr	r2, [r6]
   1cb7c:	mla	r7, r2, r3, r7
   1cb80:	ldr	r3, [sp, #252]	; 0xfc
   1cb84:	cmp	r3, r5
   1cb88:	bgt	1caf4 <ReadCompressedDataSlabN+0x337c>
   1cb8c:	ldr	r4, [sp, #264]	; 0x108
   1cb90:	ldr	fp, [sp, #268]	; 0x10c
   1cb94:	mov	r3, r7
   1cb98:	ldr	r2, [sp, #248]	; 0xf8
   1cb9c:	add	r1, sp, #32
   1cba0:	ldr	r0, [sp, #8]
   1cba4:	bl	263c <InflateSkipData>
   1cba8:	ldr	r3, [r4]
   1cbac:	str	r3, [sp, #28]
   1cbb0:	cmp	r3, #1
   1cbb4:	beq	198e8 <ReadCompressedDataSlabN+0x170>
   1cbb8:	ldr	r3, [sp, #20]
   1cbbc:	cmp	r3, #0
   1cbc0:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1cbc4:	mov	r3, #0
   1cbc8:	str	r3, [sp, #24]
   1cbcc:	add	r3, sp, #32
   1cbd0:	str	r3, [sp, #16]
   1cbd4:	add	r9, sp, #128	; 0x80
   1cbd8:	add	r3, sp, #88	; 0x58
   1cbdc:	str	r3, [sp, #28]
   1cbe0:	b	19c44 <ReadCompressedDataSlabN+0x4cc>
   1cbe4:	ldr	r3, [r8]
   1cbe8:	ldr	r2, [sp, #20]
   1cbec:	mul	r3, r3, r2
   1cbf0:	str	r3, [sp, #20]
   1cbf4:	ldr	r3, [r6]
   1cbf8:	ldr	r2, [r9]
   1cbfc:	mla	r7, r2, r3, r7
   1cc00:	add	sl, sl, #4
   1cc04:	add	r9, r9, #4
   1cc08:	add	r5, r5, #1
   1cc0c:	add	r8, r8, #4
   1cc10:	add	r6, r6, #4
   1cc14:	ldr	r3, [sp, #16]
   1cc18:	ldr	r2, [r3, #4]!
   1cc1c:	str	r3, [sp, #16]
   1cc20:	sub	r2, r2, #1
   1cc24:	str	sl, [sp, #24]
   1cc28:	str	r2, [sl]
   1cc2c:	ldr	r3, [fp], #4
   1cc30:	mov	r1, r3
   1cc34:	mov	r4, r9
   1cc38:	str	r3, [r9, #4]
   1cc3c:	cmp	r5, #1
   1cc40:	beq	1cbe4 <ReadCompressedDataSlabN+0x346c>
   1cc44:	mov	r3, fp
   1cc48:	mov	r0, r3
   1cc4c:	ldr	ip, [r3, #-4]!
   1cc50:	mul	r2, ip, r2
   1cc54:	ldr	r0, [r0]
   1cc58:	mul	r1, r0, r1
   1cc5c:	cmp	lr, r3
   1cc60:	bne	1cc48 <ReadCompressedDataSlabN+0x34d0>
   1cc64:	ldr	r3, [sp, #24]
   1cc68:	str	r2, [r3]
   1cc6c:	str	r1, [r4, #4]
   1cc70:	ldr	r3, [r8]
   1cc74:	ldr	r2, [sp, #20]
   1cc78:	mul	r3, r3, r2
   1cc7c:	str	r3, [sp, #20]
   1cc80:	ldr	r3, [r4]
   1cc84:	ldr	r2, [r6]
   1cc88:	mla	r7, r2, r3, r7
   1cc8c:	ldr	r3, [sp, #252]	; 0xfc
   1cc90:	cmp	r3, r5
   1cc94:	bgt	1cc00 <ReadCompressedDataSlabN+0x3488>
   1cc98:	ldr	r4, [sp, #264]	; 0x108
   1cc9c:	ldr	fp, [sp, #268]	; 0x10c
   1cca0:	mov	r3, r7
   1cca4:	ldr	r2, [sp, #248]	; 0xf8
   1cca8:	add	r1, sp, #32
   1ccac:	ldr	r0, [sp, #8]
   1ccb0:	bl	263c <InflateSkipData>
   1ccb4:	ldr	r3, [r4]
   1ccb8:	str	r3, [sp, #28]
   1ccbc:	cmp	r3, #1
   1ccc0:	beq	19df0 <ReadCompressedDataSlabN+0x678>
   1ccc4:	ldr	r3, [sp, #20]
   1ccc8:	cmp	r3, #0
   1cccc:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1ccd0:	mov	r3, #0
   1ccd4:	str	r3, [sp, #24]
   1ccd8:	add	r3, sp, #32
   1ccdc:	str	r3, [sp, #16]
   1cce0:	add	r9, sp, #128	; 0x80
   1cce4:	add	r3, sp, #88	; 0x58
   1cce8:	str	r3, [sp, #28]
   1ccec:	b	1a14c <ReadCompressedDataSlabN+0x9d4>
   1ccf0:	ldr	r3, [r8]
   1ccf4:	ldr	r2, [sp, #20]
   1ccf8:	mul	r3, r3, r2
   1ccfc:	str	r3, [sp, #20]
   1cd00:	ldr	r3, [r9]
   1cd04:	ldr	r2, [r6]
   1cd08:	mla	r7, r2, r3, r7
   1cd0c:	add	sl, sl, #4
   1cd10:	add	r9, r9, #4
   1cd14:	add	r5, r5, #1
   1cd18:	add	r8, r8, #4
   1cd1c:	add	r6, r6, #4
   1cd20:	ldr	r3, [sp, #16]
   1cd24:	ldr	r2, [r3, #4]!
   1cd28:	str	r3, [sp, #16]
   1cd2c:	sub	r2, r2, #1
   1cd30:	str	sl, [sp, #24]
   1cd34:	str	r2, [sl]
   1cd38:	ldr	r3, [fp], #4
   1cd3c:	mov	r1, r3
   1cd40:	mov	r4, r9
   1cd44:	str	r3, [r9, #4]
   1cd48:	cmp	r5, #1
   1cd4c:	beq	1ccf0 <ReadCompressedDataSlabN+0x3578>
   1cd50:	mov	r3, fp
   1cd54:	mov	r0, r3
   1cd58:	ldr	ip, [r3, #-4]!
   1cd5c:	mul	r2, ip, r2
   1cd60:	ldr	r0, [r0]
   1cd64:	mul	r1, r0, r1
   1cd68:	cmp	r3, lr
   1cd6c:	bne	1cd54 <ReadCompressedDataSlabN+0x35dc>
   1cd70:	ldr	r3, [sp, #24]
   1cd74:	str	r2, [r3]
   1cd78:	str	r1, [r4, #4]
   1cd7c:	ldr	r3, [r8]
   1cd80:	ldr	r2, [sp, #20]
   1cd84:	mul	r3, r3, r2
   1cd88:	str	r3, [sp, #20]
   1cd8c:	ldr	r3, [r4]
   1cd90:	ldr	r2, [r6]
   1cd94:	mla	r7, r2, r3, r7
   1cd98:	ldr	r3, [sp, #252]	; 0xfc
   1cd9c:	cmp	r3, r5
   1cda0:	bgt	1cd0c <ReadCompressedDataSlabN+0x3594>
   1cda4:	ldr	r4, [sp, #264]	; 0x108
   1cda8:	ldr	fp, [sp, #268]	; 0x10c
   1cdac:	mov	r3, r7
   1cdb0:	ldr	r2, [sp, #248]	; 0xf8
   1cdb4:	add	r1, sp, #32
   1cdb8:	ldr	r0, [sp, #8]
   1cdbc:	bl	263c <InflateSkipData>
   1cdc0:	ldr	r3, [r4]
   1cdc4:	str	r3, [sp, #28]
   1cdc8:	cmp	r3, #1
   1cdcc:	beq	1a2f8 <ReadCompressedDataSlabN+0xb80>
   1cdd0:	ldr	r3, [sp, #20]
   1cdd4:	cmp	r3, #0
   1cdd8:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1cddc:	mov	r3, #0
   1cde0:	str	r3, [sp, #24]
   1cde4:	add	r3, sp, #32
   1cde8:	str	r3, [sp, #16]
   1cdec:	add	r9, sp, #128	; 0x80
   1cdf0:	add	r3, sp, #88	; 0x58
   1cdf4:	str	r3, [sp, #28]
   1cdf8:	b	1a654 <ReadCompressedDataSlabN+0xedc>
   1cdfc:	ldr	r3, [r8]
   1ce00:	ldr	r2, [sp, #20]
   1ce04:	mul	r3, r3, r2
   1ce08:	str	r3, [sp, #20]
   1ce0c:	ldr	r3, [r9]
   1ce10:	ldr	r2, [r6]
   1ce14:	mla	r7, r2, r3, r7
   1ce18:	add	sl, sl, #4
   1ce1c:	add	r9, r9, #4
   1ce20:	add	r5, r5, #1
   1ce24:	add	r8, r8, #4
   1ce28:	add	r6, r6, #4
   1ce2c:	ldr	r3, [sp, #16]
   1ce30:	ldr	r2, [r3, #4]!
   1ce34:	str	r3, [sp, #16]
   1ce38:	sub	r2, r2, #1
   1ce3c:	str	sl, [sp, #24]
   1ce40:	str	r2, [sl]
   1ce44:	ldr	r3, [fp], #4
   1ce48:	mov	r1, r3
   1ce4c:	mov	r4, r9
   1ce50:	str	r3, [r9, #4]
   1ce54:	cmp	r5, #1
   1ce58:	beq	1cdfc <ReadCompressedDataSlabN+0x3684>
   1ce5c:	mov	r3, fp
   1ce60:	mov	r0, r3
   1ce64:	ldr	ip, [r3, #-4]!
   1ce68:	mul	r2, ip, r2
   1ce6c:	ldr	r0, [r0]
   1ce70:	mul	r1, r0, r1
   1ce74:	cmp	r3, lr
   1ce78:	bne	1ce60 <ReadCompressedDataSlabN+0x36e8>
   1ce7c:	ldr	r3, [sp, #24]
   1ce80:	str	r2, [r3]
   1ce84:	str	r1, [r4, #4]
   1ce88:	ldr	r3, [r8]
   1ce8c:	ldr	r2, [sp, #20]
   1ce90:	mul	r3, r3, r2
   1ce94:	str	r3, [sp, #20]
   1ce98:	ldr	r3, [r4]
   1ce9c:	ldr	r2, [r6]
   1cea0:	mla	r7, r2, r3, r7
   1cea4:	ldr	r3, [sp, #252]	; 0xfc
   1cea8:	cmp	r3, r5
   1ceac:	bgt	1ce18 <ReadCompressedDataSlabN+0x36a0>
   1ceb0:	ldr	r4, [sp, #264]	; 0x108
   1ceb4:	ldr	fp, [sp, #268]	; 0x10c
   1ceb8:	mov	r3, r7
   1cebc:	ldr	r2, [sp, #248]	; 0xf8
   1cec0:	add	r1, sp, #32
   1cec4:	ldr	r0, [sp, #8]
   1cec8:	bl	263c <InflateSkipData>
   1cecc:	ldr	r3, [r4]
   1ced0:	str	r3, [sp, #28]
   1ced4:	cmp	r3, #1
   1ced8:	beq	1a800 <ReadCompressedDataSlabN+0x1088>
   1cedc:	ldr	r3, [sp, #20]
   1cee0:	cmp	r3, #0
   1cee4:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1cee8:	mov	r3, #0
   1ceec:	str	r3, [sp, #24]
   1cef0:	add	r3, sp, #32
   1cef4:	str	r3, [sp, #16]
   1cef8:	add	r9, sp, #128	; 0x80
   1cefc:	add	r3, sp, #88	; 0x58
   1cf00:	str	r3, [sp, #28]
   1cf04:	b	1ab5c <ReadCompressedDataSlabN+0x13e4>
   1cf08:	ldr	r3, [r8]
   1cf0c:	ldr	r2, [sp, #20]
   1cf10:	mul	r3, r3, r2
   1cf14:	str	r3, [sp, #20]
   1cf18:	ldr	r3, [r6]
   1cf1c:	ldr	r2, [r9]
   1cf20:	mla	r7, r2, r3, r7
   1cf24:	add	sl, sl, #4
   1cf28:	add	r9, r9, #4
   1cf2c:	add	r5, r5, #1
   1cf30:	add	r8, r8, #4
   1cf34:	add	r6, r6, #4
   1cf38:	ldr	r3, [sp, #16]
   1cf3c:	ldr	r2, [r3, #4]!
   1cf40:	str	r3, [sp, #16]
   1cf44:	sub	r2, r2, #1
   1cf48:	str	sl, [sp, #24]
   1cf4c:	str	r2, [sl]
   1cf50:	ldr	r3, [fp], #4
   1cf54:	mov	r1, r3
   1cf58:	mov	r4, r9
   1cf5c:	str	r3, [r9, #4]
   1cf60:	cmp	r5, #1
   1cf64:	beq	1cf08 <ReadCompressedDataSlabN+0x3790>
   1cf68:	mov	r3, fp
   1cf6c:	mov	r0, r3
   1cf70:	ldr	ip, [r3, #-4]!
   1cf74:	mul	r2, ip, r2
   1cf78:	ldr	r0, [r0]
   1cf7c:	mul	r1, r0, r1
   1cf80:	cmp	r3, lr
   1cf84:	bne	1cf6c <ReadCompressedDataSlabN+0x37f4>
   1cf88:	ldr	r3, [sp, #24]
   1cf8c:	str	r2, [r3]
   1cf90:	str	r1, [r4, #4]
   1cf94:	ldr	r3, [r8]
   1cf98:	ldr	r2, [sp, #20]
   1cf9c:	mul	r3, r3, r2
   1cfa0:	str	r3, [sp, #20]
   1cfa4:	ldr	r3, [r4]
   1cfa8:	ldr	r2, [r6]
   1cfac:	mla	r7, r2, r3, r7
   1cfb0:	ldr	r3, [sp, #252]	; 0xfc
   1cfb4:	cmp	r3, r5
   1cfb8:	bgt	1cf24 <ReadCompressedDataSlabN+0x37ac>
   1cfbc:	ldr	r4, [sp, #264]	; 0x108
   1cfc0:	ldr	fp, [sp, #268]	; 0x10c
   1cfc4:	mov	r3, r7
   1cfc8:	ldr	r2, [sp, #248]	; 0xf8
   1cfcc:	add	r1, sp, #32
   1cfd0:	ldr	r0, [sp, #8]
   1cfd4:	bl	263c <InflateSkipData>
   1cfd8:	ldr	r3, [r4]
   1cfdc:	str	r3, [sp, #28]
   1cfe0:	cmp	r3, #1
   1cfe4:	beq	1ad08 <ReadCompressedDataSlabN+0x1590>
   1cfe8:	ldr	r3, [sp, #20]
   1cfec:	cmp	r3, #0
   1cff0:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1cff4:	mov	r3, #0
   1cff8:	str	r3, [sp, #24]
   1cffc:	add	r3, sp, #32
   1d000:	str	r3, [sp, #16]
   1d004:	add	r9, sp, #128	; 0x80
   1d008:	add	r3, sp, #88	; 0x58
   1d00c:	str	r3, [sp, #28]
   1d010:	b	1b064 <ReadCompressedDataSlabN+0x18ec>
   1d014:	ldr	r3, [r8]
   1d018:	ldr	r2, [sp, #20]
   1d01c:	mul	r3, r3, r2
   1d020:	str	r3, [sp, #20]
   1d024:	ldr	r3, [r6]
   1d028:	ldr	r2, [r9]
   1d02c:	mla	r7, r2, r3, r7
   1d030:	add	sl, sl, #4
   1d034:	add	r9, r9, #4
   1d038:	add	r5, r5, #1
   1d03c:	add	r8, r8, #4
   1d040:	add	r6, r6, #4
   1d044:	ldr	r3, [sp, #16]
   1d048:	ldr	r2, [r3, #4]!
   1d04c:	str	r3, [sp, #16]
   1d050:	sub	r2, r2, #1
   1d054:	str	sl, [sp, #24]
   1d058:	str	r2, [sl]
   1d05c:	ldr	r3, [fp], #4
   1d060:	mov	r1, r3
   1d064:	mov	r4, r9
   1d068:	str	r3, [r9, #4]
   1d06c:	cmp	r5, #1
   1d070:	beq	1d014 <ReadCompressedDataSlabN+0x389c>
   1d074:	mov	r3, fp
   1d078:	mov	r0, r3
   1d07c:	ldr	ip, [r3, #-4]!
   1d080:	mul	r2, ip, r2
   1d084:	ldr	r0, [r0]
   1d088:	mul	r1, r0, r1
   1d08c:	cmp	r3, lr
   1d090:	bne	1d078 <ReadCompressedDataSlabN+0x3900>
   1d094:	ldr	r3, [sp, #24]
   1d098:	str	r2, [r3]
   1d09c:	str	r1, [r4, #4]
   1d0a0:	ldr	r3, [r8]
   1d0a4:	ldr	r2, [sp, #20]
   1d0a8:	mul	r3, r3, r2
   1d0ac:	str	r3, [sp, #20]
   1d0b0:	ldr	r3, [r4]
   1d0b4:	ldr	r2, [r6]
   1d0b8:	mla	r7, r2, r3, r7
   1d0bc:	ldr	r3, [sp, #252]	; 0xfc
   1d0c0:	cmp	r3, r5
   1d0c4:	bgt	1d030 <ReadCompressedDataSlabN+0x38b8>
   1d0c8:	ldr	r4, [sp, #264]	; 0x108
   1d0cc:	ldr	fp, [sp, #268]	; 0x10c
   1d0d0:	mov	r3, r7
   1d0d4:	ldr	r2, [sp, #248]	; 0xf8
   1d0d8:	add	r1, sp, #32
   1d0dc:	ldr	r0, [sp, #8]
   1d0e0:	bl	263c <InflateSkipData>
   1d0e4:	ldr	r3, [r4]
   1d0e8:	str	r3, [sp, #28]
   1d0ec:	cmp	r3, #1
   1d0f0:	beq	1b210 <ReadCompressedDataSlabN+0x1a98>
   1d0f4:	ldr	r3, [sp, #20]
   1d0f8:	cmp	r3, #0
   1d0fc:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1d100:	mov	r3, #0
   1d104:	str	r3, [sp, #24]
   1d108:	add	r3, sp, #32
   1d10c:	str	r3, [sp, #16]
   1d110:	add	r9, sp, #128	; 0x80
   1d114:	add	r3, sp, #88	; 0x58
   1d118:	str	r3, [sp, #28]
   1d11c:	b	1b56c <ReadCompressedDataSlabN+0x1df4>
   1d120:	ldr	r3, [r8]
   1d124:	ldr	r2, [sp, #20]
   1d128:	mul	r3, r3, r2
   1d12c:	str	r3, [sp, #20]
   1d130:	ldr	r3, [r9]
   1d134:	ldr	r2, [r6]
   1d138:	mla	r7, r2, r3, r7
   1d13c:	add	sl, sl, #4
   1d140:	add	r9, r9, #4
   1d144:	add	r5, r5, #1
   1d148:	add	r8, r8, #4
   1d14c:	add	r6, r6, #4
   1d150:	ldr	r3, [sp, #16]
   1d154:	ldr	r2, [r3, #4]!
   1d158:	str	r3, [sp, #16]
   1d15c:	sub	r2, r2, #1
   1d160:	str	sl, [sp, #24]
   1d164:	str	r2, [sl]
   1d168:	ldr	r3, [fp], #4
   1d16c:	mov	r1, r3
   1d170:	mov	r4, r9
   1d174:	str	r3, [r9, #4]
   1d178:	cmp	r5, #1
   1d17c:	beq	1d120 <ReadCompressedDataSlabN+0x39a8>
   1d180:	mov	r3, fp
   1d184:	mov	r0, r3
   1d188:	ldr	ip, [r3, #-4]!
   1d18c:	mul	r2, ip, r2
   1d190:	ldr	r0, [r0]
   1d194:	mul	r1, r0, r1
   1d198:	cmp	r3, lr
   1d19c:	bne	1d184 <ReadCompressedDataSlabN+0x3a0c>
   1d1a0:	ldr	r3, [sp, #24]
   1d1a4:	str	r2, [r3]
   1d1a8:	str	r1, [r4, #4]
   1d1ac:	ldr	r3, [r8]
   1d1b0:	ldr	r2, [sp, #20]
   1d1b4:	mul	r3, r3, r2
   1d1b8:	str	r3, [sp, #20]
   1d1bc:	ldr	r3, [r4]
   1d1c0:	ldr	r2, [r6]
   1d1c4:	mla	r7, r2, r3, r7
   1d1c8:	ldr	r3, [sp, #252]	; 0xfc
   1d1cc:	cmp	r3, r5
   1d1d0:	bgt	1d13c <ReadCompressedDataSlabN+0x39c4>
   1d1d4:	ldr	r4, [sp, #264]	; 0x108
   1d1d8:	ldr	fp, [sp, #268]	; 0x10c
   1d1dc:	mov	r3, r7
   1d1e0:	ldr	r2, [sp, #248]	; 0xf8
   1d1e4:	add	r1, sp, #32
   1d1e8:	ldr	r0, [sp, #8]
   1d1ec:	bl	263c <InflateSkipData>
   1d1f0:	ldr	r3, [r4]
   1d1f4:	str	r3, [sp, #28]
   1d1f8:	cmp	r3, #1
   1d1fc:	beq	1b718 <ReadCompressedDataSlabN+0x1fa0>
   1d200:	ldr	r3, [sp, #20]
   1d204:	cmp	r3, #0
   1d208:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1d20c:	mov	r3, #0
   1d210:	str	r3, [sp, #24]
   1d214:	add	r3, sp, #32
   1d218:	str	r3, [sp, #16]
   1d21c:	add	r9, sp, #128	; 0x80
   1d220:	add	r3, sp, #88	; 0x58
   1d224:	str	r3, [sp, #28]
   1d228:	b	1ba74 <ReadCompressedDataSlabN+0x22fc>
   1d22c:	ldr	r3, [r8]
   1d230:	ldr	r2, [sp, #20]
   1d234:	mul	r3, r3, r2
   1d238:	str	r3, [sp, #20]
   1d23c:	ldr	r3, [r6]
   1d240:	ldr	r2, [r9]
   1d244:	mla	r7, r2, r3, r7
   1d248:	add	sl, sl, #4
   1d24c:	add	r9, r9, #4
   1d250:	add	r5, r5, #1
   1d254:	add	r8, r8, #4
   1d258:	add	r6, r6, #4
   1d25c:	ldr	r3, [sp, #16]
   1d260:	ldr	r2, [r3, #4]!
   1d264:	str	r3, [sp, #16]
   1d268:	sub	r2, r2, #1
   1d26c:	str	sl, [sp, #24]
   1d270:	str	r2, [sl]
   1d274:	ldr	r3, [fp], #4
   1d278:	mov	r1, r3
   1d27c:	mov	r4, r9
   1d280:	str	r3, [r9, #4]
   1d284:	cmp	r5, #1
   1d288:	beq	1d22c <ReadCompressedDataSlabN+0x3ab4>
   1d28c:	mov	r3, fp
   1d290:	mov	r0, r3
   1d294:	ldr	ip, [r3, #-4]!
   1d298:	mul	r2, ip, r2
   1d29c:	ldr	r0, [r0]
   1d2a0:	mul	r1, r0, r1
   1d2a4:	cmp	r3, lr
   1d2a8:	bne	1d290 <ReadCompressedDataSlabN+0x3b18>
   1d2ac:	ldr	r3, [sp, #24]
   1d2b0:	str	r2, [r3]
   1d2b4:	str	r1, [r4, #4]
   1d2b8:	ldr	r3, [r8]
   1d2bc:	ldr	r2, [sp, #20]
   1d2c0:	mul	r3, r3, r2
   1d2c4:	str	r3, [sp, #20]
   1d2c8:	ldr	r3, [r4]
   1d2cc:	ldr	r2, [r6]
   1d2d0:	mla	r7, r2, r3, r7
   1d2d4:	ldr	r3, [sp, #252]	; 0xfc
   1d2d8:	cmp	r3, r5
   1d2dc:	bgt	1d248 <ReadCompressedDataSlabN+0x3ad0>
   1d2e0:	ldr	r4, [sp, #264]	; 0x108
   1d2e4:	ldr	fp, [sp, #268]	; 0x10c
   1d2e8:	mov	r3, r7
   1d2ec:	ldr	r2, [sp, #248]	; 0xf8
   1d2f0:	add	r1, sp, #32
   1d2f4:	ldr	r0, [sp, #8]
   1d2f8:	bl	263c <InflateSkipData>
   1d2fc:	ldr	r3, [r4]
   1d300:	str	r3, [sp, #28]
   1d304:	cmp	r3, #1
   1d308:	beq	1bc20 <ReadCompressedDataSlabN+0x24a8>
   1d30c:	ldr	r3, [sp, #20]
   1d310:	cmp	r3, #0
   1d314:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1d318:	mov	r3, #0
   1d31c:	str	r3, [sp, #24]
   1d320:	add	r3, sp, #32
   1d324:	str	r3, [sp, #16]
   1d328:	add	r9, sp, #128	; 0x80
   1d32c:	add	r3, sp, #88	; 0x58
   1d330:	str	r3, [sp, #28]
   1d334:	b	1bf7c <ReadCompressedDataSlabN+0x2804>
   1d338:	ldr	r3, [r8]
   1d33c:	ldr	r2, [sp, #20]
   1d340:	mul	r3, r3, r2
   1d344:	str	r3, [sp, #20]
   1d348:	ldr	r3, [r6]
   1d34c:	ldr	r2, [r9]
   1d350:	mla	r7, r2, r3, r7
   1d354:	add	sl, sl, #4
   1d358:	add	r9, r9, #4
   1d35c:	add	r5, r5, #1
   1d360:	add	r8, r8, #4
   1d364:	add	r6, r6, #4
   1d368:	ldr	r3, [sp, #16]
   1d36c:	ldr	r2, [r3, #4]!
   1d370:	str	r3, [sp, #16]
   1d374:	sub	r2, r2, #1
   1d378:	str	sl, [sp, #24]
   1d37c:	str	r2, [sl]
   1d380:	ldr	r3, [fp], #4
   1d384:	mov	r1, r3
   1d388:	mov	r4, r9
   1d38c:	str	r3, [r9, #4]
   1d390:	cmp	r5, #1
   1d394:	beq	1d338 <ReadCompressedDataSlabN+0x3bc0>
   1d398:	mov	r3, fp
   1d39c:	mov	r0, r3
   1d3a0:	ldr	ip, [r3, #-4]!
   1d3a4:	mul	r2, ip, r2
   1d3a8:	ldr	r0, [r0]
   1d3ac:	mul	r1, r0, r1
   1d3b0:	cmp	lr, r3
   1d3b4:	bne	1d39c <ReadCompressedDataSlabN+0x3c24>
   1d3b8:	ldr	r3, [sp, #24]
   1d3bc:	str	r2, [r3]
   1d3c0:	str	r1, [r4, #4]
   1d3c4:	ldr	r3, [r8]
   1d3c8:	ldr	r2, [sp, #20]
   1d3cc:	mul	r3, r3, r2
   1d3d0:	str	r3, [sp, #20]
   1d3d4:	ldr	r3, [r4]
   1d3d8:	ldr	r2, [r6]
   1d3dc:	mla	r7, r2, r3, r7
   1d3e0:	ldr	r3, [sp, #252]	; 0xfc
   1d3e4:	cmp	r3, r5
   1d3e8:	bgt	1d354 <ReadCompressedDataSlabN+0x3bdc>
   1d3ec:	ldr	r4, [sp, #264]	; 0x108
   1d3f0:	ldr	fp, [sp, #268]	; 0x10c
   1d3f4:	mov	r3, r7
   1d3f8:	ldr	r2, [sp, #248]	; 0xf8
   1d3fc:	add	r1, sp, #32
   1d400:	ldr	r0, [sp, #8]
   1d404:	bl	263c <InflateSkipData>
   1d408:	ldr	r3, [r4]
   1d40c:	str	r3, [sp, #28]
   1d410:	cmp	r3, #1
   1d414:	beq	1c128 <ReadCompressedDataSlabN+0x29b0>
   1d418:	ldr	r3, [sp, #20]
   1d41c:	cmp	r3, #0
   1d420:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1d424:	mov	r3, #0
   1d428:	str	r3, [sp, #24]
   1d42c:	add	r3, sp, #32
   1d430:	str	r3, [sp, #16]
   1d434:	add	r9, sp, #128	; 0x80
   1d438:	add	r3, sp, #88	; 0x58
   1d43c:	str	r3, [sp, #28]
   1d440:	b	1c484 <ReadCompressedDataSlabN+0x2d0c>
   1d444:	ldr	r3, [r8]
   1d448:	ldr	r2, [sp, #20]
   1d44c:	mul	r3, r3, r2
   1d450:	str	r3, [sp, #20]
   1d454:	ldr	r3, [r6]
   1d458:	ldr	r2, [r9]
   1d45c:	mla	r7, r2, r3, r7
   1d460:	add	sl, sl, #4
   1d464:	add	r9, r9, #4
   1d468:	add	r5, r5, #1
   1d46c:	add	r8, r8, #4
   1d470:	add	r6, r6, #4
   1d474:	ldr	r3, [sp, #16]
   1d478:	ldr	r2, [r3, #4]!
   1d47c:	str	r3, [sp, #16]
   1d480:	sub	r2, r2, #1
   1d484:	str	sl, [sp, #24]
   1d488:	str	r2, [sl]
   1d48c:	ldr	r3, [fp], #4
   1d490:	mov	r1, r3
   1d494:	mov	r4, r9
   1d498:	str	r3, [r9, #4]
   1d49c:	cmp	r5, #1
   1d4a0:	beq	1d444 <ReadCompressedDataSlabN+0x3ccc>
   1d4a4:	mov	r3, fp
   1d4a8:	mov	r0, r3
   1d4ac:	ldr	ip, [r3, #-4]!
   1d4b0:	mul	r2, ip, r2
   1d4b4:	ldr	r0, [r0]
   1d4b8:	mul	r1, r0, r1
   1d4bc:	cmp	r3, lr
   1d4c0:	bne	1d4a8 <ReadCompressedDataSlabN+0x3d30>
   1d4c4:	ldr	r3, [sp, #24]
   1d4c8:	str	r2, [r3]
   1d4cc:	str	r1, [r4, #4]
   1d4d0:	ldr	r3, [r8]
   1d4d4:	ldr	r2, [sp, #20]
   1d4d8:	mul	r3, r3, r2
   1d4dc:	str	r3, [sp, #20]
   1d4e0:	ldr	r3, [r4]
   1d4e4:	ldr	r2, [r6]
   1d4e8:	mla	r7, r2, r3, r7
   1d4ec:	ldr	r3, [sp, #252]	; 0xfc
   1d4f0:	cmp	r3, r5
   1d4f4:	bgt	1d460 <ReadCompressedDataSlabN+0x3ce8>
   1d4f8:	ldr	r4, [sp, #264]	; 0x108
   1d4fc:	ldr	fp, [sp, #268]	; 0x10c
   1d500:	mov	r3, r7
   1d504:	ldr	r2, [sp, #248]	; 0xf8
   1d508:	add	r1, sp, #32
   1d50c:	ldr	r0, [sp, #8]
   1d510:	bl	263c <InflateSkipData>
   1d514:	ldr	r3, [r4]
   1d518:	str	r3, [sp, #28]
   1d51c:	cmp	r3, #1
   1d520:	beq	1c628 <ReadCompressedDataSlabN+0x2eb0>
   1d524:	ldr	r3, [sp, #20]
   1d528:	cmp	r3, #0
   1d52c:	ble	1cac0 <ReadCompressedDataSlabN+0x3348>
   1d530:	mov	r3, #0
   1d534:	str	r3, [sp, #24]
   1d538:	add	r3, sp, #32
   1d53c:	str	r3, [sp, #16]
   1d540:	add	r9, sp, #128	; 0x80
   1d544:	add	r3, sp, #88	; 0x58
   1d548:	str	r3, [sp, #28]
   1d54c:	b	1c984 <ReadCompressedDataSlabN+0x320c>

0001d550 <ReadDataSlab1>:
   1d550:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d554:	mov	r6, r0
   1d558:	mov	r4, r1
   1d55c:	mov	r5, r2
   1d560:	mov	r8, r3
   1d564:	ldr	r9, [sp, #48]	; 0x30
   1d568:	mov	r0, r3
   1d56c:	bl	1600 <Mat_SizeOf@plt>
   1d570:	mov	r7, r0
   1d574:	mov	r2, #1
   1d578:	ldr	r1, [sp, #40]	; 0x28
   1d57c:	mul	r1, r0, r1
   1d580:	ldr	r0, [r6]
   1d584:	bl	1714 <fseek@plt>
   1d588:	ldr	r3, [sp, #44]	; 0x2c
   1d58c:	sub	r3, r3, #1
   1d590:	mul	r7, r7, r3
   1d594:	sub	r2, r5, #6
   1d598:	cmp	r2, #9
   1d59c:	addls	pc, pc, r2, lsl #2
   1d5a0:	b	1da80 <ReadDataSlab1+0x530>
   1d5a4:	b	1d5cc <ReadDataSlab1+0x7c>
   1d5a8:	b	1d648 <ReadDataSlab1+0xf8>
   1d5ac:	b	1d990 <ReadDataSlab1+0x440>
   1d5b0:	b	1da08 <ReadDataSlab1+0x4b8>
   1d5b4:	b	1d8a0 <ReadDataSlab1+0x350>
   1d5b8:	b	1d918 <ReadDataSlab1+0x3c8>
   1d5bc:	b	1d7b0 <ReadDataSlab1+0x260>
   1d5c0:	b	1d828 <ReadDataSlab1+0x2d8>
   1d5c4:	b	1d6c0 <ReadDataSlab1+0x170>
   1d5c8:	b	1d738 <ReadDataSlab1+0x1e8>
   1d5cc:	cmp	r7, #0
   1d5d0:	beq	1d62c <ReadDataSlab1+0xdc>
   1d5d4:	cmp	r9, #0
   1d5d8:	movle	r5, #0
   1d5dc:	ble	1d624 <ReadDataSlab1+0xd4>
   1d5e0:	mov	r5, #0
   1d5e4:	mov	sl, r5
   1d5e8:	mov	fp, #1
   1d5ec:	mov	r3, fp
   1d5f0:	mov	r2, r8
   1d5f4:	mov	r1, r4
   1d5f8:	mov	r0, r6
   1d5fc:	bl	3aa0 <ReadDoubleData>
   1d600:	add	r5, r5, r0
   1d604:	mov	r2, fp
   1d608:	mov	r1, r7
   1d60c:	ldr	r0, [r6]
   1d610:	bl	1714 <fseek@plt>
   1d614:	add	sl, sl, #1
   1d618:	add	r4, r4, #8
   1d61c:	cmp	r9, sl
   1d620:	bne	1d5ec <ReadDataSlab1+0x9c>
   1d624:	mov	r0, r5
   1d628:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d62c:	mov	r3, r9
   1d630:	mov	r2, r8
   1d634:	mov	r1, r4
   1d638:	mov	r0, r6
   1d63c:	bl	3aa0 <ReadDoubleData>
   1d640:	mov	r5, r0
   1d644:	b	1d624 <ReadDataSlab1+0xd4>
   1d648:	cmp	r7, #0
   1d64c:	beq	1d6a4 <ReadDataSlab1+0x154>
   1d650:	cmp	r9, #0
   1d654:	movle	r5, #0
   1d658:	ble	1d624 <ReadDataSlab1+0xd4>
   1d65c:	mov	r5, #0
   1d660:	mov	sl, r5
   1d664:	mov	fp, #1
   1d668:	mov	r3, fp
   1d66c:	mov	r2, r8
   1d670:	mov	r1, r4
   1d674:	mov	r0, r6
   1d678:	bl	61cc <ReadSingleData>
   1d67c:	add	r5, r5, r0
   1d680:	mov	r2, fp
   1d684:	mov	r1, r7
   1d688:	ldr	r0, [r6]
   1d68c:	bl	1714 <fseek@plt>
   1d690:	add	sl, sl, #1
   1d694:	add	r4, r4, #4
   1d698:	cmp	r9, sl
   1d69c:	bne	1d668 <ReadDataSlab1+0x118>
   1d6a0:	b	1d624 <ReadDataSlab1+0xd4>
   1d6a4:	mov	r3, r9
   1d6a8:	mov	r2, r8
   1d6ac:	mov	r1, r4
   1d6b0:	mov	r0, r6
   1d6b4:	bl	61cc <ReadSingleData>
   1d6b8:	mov	r5, r0
   1d6bc:	b	1d624 <ReadDataSlab1+0xd4>
   1d6c0:	cmp	r7, #0
   1d6c4:	beq	1d71c <ReadDataSlab1+0x1cc>
   1d6c8:	cmp	r9, #0
   1d6cc:	movle	r5, #0
   1d6d0:	ble	1d624 <ReadDataSlab1+0xd4>
   1d6d4:	mov	r5, #0
   1d6d8:	mov	sl, r5
   1d6dc:	mov	fp, #1
   1d6e0:	mov	r3, fp
   1d6e4:	mov	r2, r8
   1d6e8:	mov	r1, r4
   1d6ec:	mov	r0, r6
   1d6f0:	bl	7d94 <ReadInt64Data>
   1d6f4:	add	r5, r5, r0
   1d6f8:	mov	r2, fp
   1d6fc:	mov	r1, r7
   1d700:	ldr	r0, [r6]
   1d704:	bl	1714 <fseek@plt>
   1d708:	add	sl, sl, #1
   1d70c:	add	r4, r4, #8
   1d710:	cmp	r9, sl
   1d714:	bne	1d6e0 <ReadDataSlab1+0x190>
   1d718:	b	1d624 <ReadDataSlab1+0xd4>
   1d71c:	mov	r3, r9
   1d720:	mov	r2, r8
   1d724:	mov	r1, r4
   1d728:	mov	r0, r6
   1d72c:	bl	7d94 <ReadInt64Data>
   1d730:	mov	r5, r0
   1d734:	b	1d624 <ReadDataSlab1+0xd4>
   1d738:	cmp	r7, #0
   1d73c:	beq	1d794 <ReadDataSlab1+0x244>
   1d740:	cmp	r9, #0
   1d744:	movle	r5, #0
   1d748:	ble	1d624 <ReadDataSlab1+0xd4>
   1d74c:	mov	r5, #0
   1d750:	mov	sl, r5
   1d754:	mov	fp, #1
   1d758:	mov	r3, fp
   1d75c:	mov	r2, r8
   1d760:	mov	r1, r4
   1d764:	mov	r0, r6
   1d768:	bl	9a2c <ReadUInt64Data>
   1d76c:	add	r5, r5, r0
   1d770:	mov	r2, fp
   1d774:	mov	r1, r7
   1d778:	ldr	r0, [r6]
   1d77c:	bl	1714 <fseek@plt>
   1d780:	add	sl, sl, #1
   1d784:	add	r4, r4, #8
   1d788:	cmp	r9, sl
   1d78c:	bne	1d758 <ReadDataSlab1+0x208>
   1d790:	b	1d624 <ReadDataSlab1+0xd4>
   1d794:	mov	r3, r9
   1d798:	mov	r2, r8
   1d79c:	mov	r1, r4
   1d7a0:	mov	r0, r6
   1d7a4:	bl	9a2c <ReadUInt64Data>
   1d7a8:	mov	r5, r0
   1d7ac:	b	1d624 <ReadDataSlab1+0xd4>
   1d7b0:	cmp	r7, #0
   1d7b4:	beq	1d80c <ReadDataSlab1+0x2bc>
   1d7b8:	cmp	r9, #0
   1d7bc:	movle	r5, #0
   1d7c0:	ble	1d624 <ReadDataSlab1+0xd4>
   1d7c4:	mov	r5, #0
   1d7c8:	mov	sl, r5
   1d7cc:	mov	fp, #1
   1d7d0:	mov	r3, fp
   1d7d4:	mov	r2, r8
   1d7d8:	mov	r1, r4
   1d7dc:	mov	r0, r6
   1d7e0:	bl	b6c4 <ReadInt32Data>
   1d7e4:	add	r5, r5, r0
   1d7e8:	mov	r2, fp
   1d7ec:	mov	r1, r7
   1d7f0:	ldr	r0, [r6]
   1d7f4:	bl	1714 <fseek@plt>
   1d7f8:	add	sl, sl, #1
   1d7fc:	add	r4, r4, #4
   1d800:	cmp	r9, sl
   1d804:	bne	1d7d0 <ReadDataSlab1+0x280>
   1d808:	b	1d624 <ReadDataSlab1+0xd4>
   1d80c:	mov	r3, r9
   1d810:	mov	r2, r8
   1d814:	mov	r1, r4
   1d818:	mov	r0, r6
   1d81c:	bl	b6c4 <ReadInt32Data>
   1d820:	mov	r5, r0
   1d824:	b	1d624 <ReadDataSlab1+0xd4>
   1d828:	cmp	r7, #0
   1d82c:	beq	1d884 <ReadDataSlab1+0x334>
   1d830:	cmp	r9, #0
   1d834:	movle	r5, #0
   1d838:	ble	1d624 <ReadDataSlab1+0xd4>
   1d83c:	mov	r5, #0
   1d840:	mov	sl, r5
   1d844:	mov	fp, #1
   1d848:	mov	r3, fp
   1d84c:	mov	r2, r8
   1d850:	mov	r1, r4
   1d854:	mov	r0, r6
   1d858:	bl	d234 <ReadUInt32Data>
   1d85c:	add	r5, r5, r0
   1d860:	mov	r2, fp
   1d864:	mov	r1, r7
   1d868:	ldr	r0, [r6]
   1d86c:	bl	1714 <fseek@plt>
   1d870:	add	sl, sl, #1
   1d874:	add	r4, r4, #4
   1d878:	cmp	r9, sl
   1d87c:	bne	1d848 <ReadDataSlab1+0x2f8>
   1d880:	b	1d624 <ReadDataSlab1+0xd4>
   1d884:	mov	r3, r9
   1d888:	mov	r2, r8
   1d88c:	mov	r1, r4
   1d890:	mov	r0, r6
   1d894:	bl	d234 <ReadUInt32Data>
   1d898:	mov	r5, r0
   1d89c:	b	1d624 <ReadDataSlab1+0xd4>
   1d8a0:	cmp	r7, #0
   1d8a4:	beq	1d8fc <ReadDataSlab1+0x3ac>
   1d8a8:	cmp	r9, #0
   1d8ac:	movle	r5, #0
   1d8b0:	ble	1d624 <ReadDataSlab1+0xd4>
   1d8b4:	mov	sl, r4
   1d8b8:	add	r4, r4, r9, lsl #1
   1d8bc:	mov	r5, #0
   1d8c0:	mov	fp, #1
   1d8c4:	mov	r3, fp
   1d8c8:	mov	r2, r8
   1d8cc:	mov	r1, sl
   1d8d0:	mov	r0, r6
   1d8d4:	bl	eda4 <ReadInt16Data>
   1d8d8:	add	r5, r5, r0
   1d8dc:	mov	r2, fp
   1d8e0:	mov	r1, r7
   1d8e4:	ldr	r0, [r6]
   1d8e8:	bl	1714 <fseek@plt>
   1d8ec:	add	sl, sl, #2
   1d8f0:	cmp	sl, r4
   1d8f4:	bne	1d8c4 <ReadDataSlab1+0x374>
   1d8f8:	b	1d624 <ReadDataSlab1+0xd4>
   1d8fc:	mov	r3, r9
   1d900:	mov	r2, r8
   1d904:	mov	r1, r4
   1d908:	mov	r0, r6
   1d90c:	bl	eda4 <ReadInt16Data>
   1d910:	mov	r5, r0
   1d914:	b	1d624 <ReadDataSlab1+0xd4>
   1d918:	cmp	r7, #0
   1d91c:	beq	1d974 <ReadDataSlab1+0x424>
   1d920:	cmp	r9, #0
   1d924:	movle	r5, #0
   1d928:	ble	1d624 <ReadDataSlab1+0xd4>
   1d92c:	mov	sl, r4
   1d930:	add	r4, r4, r9, lsl #1
   1d934:	mov	r5, #0
   1d938:	mov	fp, #1
   1d93c:	mov	r3, fp
   1d940:	mov	r2, r8
   1d944:	mov	r1, sl
   1d948:	mov	r0, r6
   1d94c:	bl	108fc <ReadUInt16Data>
   1d950:	add	r5, r5, r0
   1d954:	mov	r2, fp
   1d958:	mov	r1, r7
   1d95c:	ldr	r0, [r6]
   1d960:	bl	1714 <fseek@plt>
   1d964:	add	sl, sl, #2
   1d968:	cmp	r4, sl
   1d96c:	bne	1d93c <ReadDataSlab1+0x3ec>
   1d970:	b	1d624 <ReadDataSlab1+0xd4>
   1d974:	mov	r3, r9
   1d978:	mov	r2, r8
   1d97c:	mov	r1, r4
   1d980:	mov	r0, r6
   1d984:	bl	108fc <ReadUInt16Data>
   1d988:	mov	r5, r0
   1d98c:	b	1d624 <ReadDataSlab1+0xd4>
   1d990:	cmp	r7, #0
   1d994:	beq	1d9ec <ReadDataSlab1+0x49c>
   1d998:	cmp	r9, #0
   1d99c:	movle	r5, #0
   1d9a0:	ble	1d624 <ReadDataSlab1+0xd4>
   1d9a4:	mov	sl, r4
   1d9a8:	add	r4, r4, r9
   1d9ac:	mov	r5, #0
   1d9b0:	mov	fp, #1
   1d9b4:	mov	r3, fp
   1d9b8:	mov	r2, r8
   1d9bc:	mov	r1, sl
   1d9c0:	mov	r0, r6
   1d9c4:	bl	12454 <ReadInt8Data>
   1d9c8:	add	r5, r5, r0
   1d9cc:	mov	r2, fp
   1d9d0:	mov	r1, r7
   1d9d4:	ldr	r0, [r6]
   1d9d8:	bl	1714 <fseek@plt>
   1d9dc:	add	sl, sl, #1
   1d9e0:	cmp	sl, r4
   1d9e4:	bne	1d9b4 <ReadDataSlab1+0x464>
   1d9e8:	b	1d624 <ReadDataSlab1+0xd4>
   1d9ec:	mov	r3, r9
   1d9f0:	mov	r2, r8
   1d9f4:	mov	r1, r4
   1d9f8:	mov	r0, r6
   1d9fc:	bl	12454 <ReadInt8Data>
   1da00:	mov	r5, r0
   1da04:	b	1d624 <ReadDataSlab1+0xd4>
   1da08:	cmp	r7, #0
   1da0c:	beq	1da64 <ReadDataSlab1+0x514>
   1da10:	cmp	r9, #0
   1da14:	movle	r5, #0
   1da18:	ble	1d624 <ReadDataSlab1+0xd4>
   1da1c:	mov	sl, r4
   1da20:	add	r4, r4, r9
   1da24:	mov	r5, #0
   1da28:	mov	r9, #1
   1da2c:	mov	r3, r9
   1da30:	mov	r2, r8
   1da34:	mov	r1, sl
   1da38:	mov	r0, r6
   1da3c:	bl	13e70 <ReadUInt8Data>
   1da40:	add	r5, r5, r0
   1da44:	mov	r2, r9
   1da48:	mov	r1, r7
   1da4c:	ldr	r0, [r6]
   1da50:	bl	1714 <fseek@plt>
   1da54:	add	sl, sl, #1
   1da58:	cmp	r4, sl
   1da5c:	bne	1da2c <ReadDataSlab1+0x4dc>
   1da60:	b	1d624 <ReadDataSlab1+0xd4>
   1da64:	mov	r3, r9
   1da68:	mov	r2, r8
   1da6c:	mov	r1, r4
   1da70:	mov	r0, r6
   1da74:	bl	13e70 <ReadUInt8Data>
   1da78:	mov	r5, r0
   1da7c:	b	1d624 <ReadDataSlab1+0xd4>
   1da80:	mov	r5, #0
   1da84:	b	1d624 <ReadDataSlab1+0xd4>

0001da88 <ReadDataSlab2>:
   1da88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da8c:	sub	sp, sp, #28
   1da90:	ldr	r7, [sp, #68]	; 0x44
   1da94:	ldr	r8, [sp, #72]	; 0x48
   1da98:	ldr	r6, [sp, #76]	; 0x4c
   1da9c:	cmp	r1, #0
   1daa0:	cmpne	r0, #0
   1daa4:	moveq	r0, #0
   1daa8:	beq	1ecf0 <ReadDataSlab2+0x1268>
   1daac:	mov	r5, r0
   1dab0:	mov	r4, r1
   1dab4:	ldr	r1, [r0]
   1dab8:	cmp	r1, #0
   1dabc:	beq	1ecec <ReadDataSlab2+0x1264>
   1dac0:	cmp	r8, #0
   1dac4:	cmpne	r7, #0
   1dac8:	moveq	r1, #1
   1dacc:	movne	r1, #0
   1dad0:	cmp	r6, #0
   1dad4:	orreq	r1, r1, #1
   1dad8:	cmp	r1, #0
   1dadc:	movne	r0, #0
   1dae0:	bne	1ecf0 <ReadDataSlab2+0x1268>
   1dae4:	str	r3, [sp, #4]
   1dae8:	mov	sl, r2
   1daec:	mov	r0, r3
   1daf0:	bl	1600 <Mat_SizeOf@plt>
   1daf4:	mov	r9, r0
   1daf8:	str	r0, [sp, #8]
   1dafc:	sub	sl, sl, #6
   1db00:	cmp	sl, #9
   1db04:	addls	pc, pc, sl, lsl #2
   1db08:	b	1ecf8 <ReadDataSlab2+0x1270>
   1db0c:	b	1db34 <ReadDataSlab2+0xac>
   1db10:	b	1dcf0 <ReadDataSlab2+0x268>
   1db14:	b	1e914 <ReadDataSlab2+0xe8c>
   1db18:	b	1eac4 <ReadDataSlab2+0x103c>
   1db1c:	b	1e59c <ReadDataSlab2+0xb14>
   1db20:	b	1e758 <ReadDataSlab2+0xcd0>
   1db24:	b	1e224 <ReadDataSlab2+0x79c>
   1db28:	b	1e3e0 <ReadDataSlab2+0x958>
   1db2c:	b	1deac <ReadDataSlab2+0x424>
   1db30:	b	1e068 <ReadDataSlab2+0x5e0>
   1db34:	ldr	r2, [r8]
   1db38:	cmp	r2, #1
   1db3c:	beq	1dbb0 <ReadDataSlab2+0x128>
   1db40:	sub	r2, r2, #1
   1db44:	mul	r3, r9, r2
   1db48:	str	r3, [sp, #12]
   1db4c:	ldr	r2, [r8, #4]
   1db50:	ldr	r3, [sp, #64]	; 0x40
   1db54:	ldr	r3, [r3]
   1db58:	mul	r3, r3, r2
   1db5c:	mul	r3, r9, r3
   1db60:	str	r3, [sp, #20]
   1db64:	ldr	r0, [r5]
   1db68:	bl	151c <ftell@plt>
   1db6c:	cmn	r0, #1
   1db70:	beq	1dbf0 <ReadDataSlab2+0x168>
   1db74:	ldr	r3, [r7, #4]
   1db78:	ldr	r2, [sp, #64]	; 0x40
   1db7c:	ldr	r1, [r2]
   1db80:	mul	r1, r1, r3
   1db84:	mov	r2, #1
   1db88:	mul	r1, r9, r1
   1db8c:	ldr	r0, [r5]
   1db90:	bl	1714 <fseek@plt>
   1db94:	ldr	r3, [r6, #4]
   1db98:	cmp	r3, #0
   1db9c:	ble	1ed00 <ReadDataSlab2+0x1278>
   1dba0:	mov	fp, #0
   1dba4:	mov	sl, #1
   1dba8:	mov	r9, r7
   1dbac:	b	1dc54 <ReadDataSlab2+0x1cc>
   1dbb0:	ldr	r3, [r6]
   1dbb4:	ldr	r1, [sp, #64]	; 0x40
   1dbb8:	ldr	r1, [r1]
   1dbbc:	cmp	r3, r1
   1dbc0:	bne	1db40 <ReadDataSlab2+0xb8>
   1dbc4:	ldr	r1, [r8, #4]
   1dbc8:	cmp	r1, #1
   1dbcc:	bne	1db40 <ReadDataSlab2+0xb8>
   1dbd0:	ldr	r2, [r6, #4]
   1dbd4:	mul	r3, r2, r3
   1dbd8:	ldr	r2, [sp, #4]
   1dbdc:	mov	r1, r4
   1dbe0:	mov	r0, r5
   1dbe4:	bl	3aa0 <ReadDoubleData>
   1dbe8:	mov	r0, #0
   1dbec:	b	1ecf0 <ReadDataSlab2+0x1268>
   1dbf0:	ldr	r0, [pc, #4012]	; 1eba4 <ReadDataSlab2+0x111c>
   1dbf4:	add	r0, pc, r0
   1dbf8:	bl	1690 <Mat_Critical@plt>
   1dbfc:	mvn	r0, #0
   1dc00:	b	1ecf0 <ReadDataSlab2+0x1268>
   1dc04:	ldr	r0, [pc, #3996]	; 1eba8 <ReadDataSlab2+0x1120>
   1dc08:	add	r0, pc, r0
   1dc0c:	bl	1690 <Mat_Critical@plt>
   1dc10:	mvn	r0, #0
   1dc14:	b	1ecf0 <ReadDataSlab2+0x1268>
   1dc18:	ldr	r0, [r5]
   1dc1c:	bl	151c <ftell@plt>
   1dc20:	cmn	r0, #1
   1dc24:	beq	1dcd4 <ReadDataSlab2+0x24c>
   1dc28:	ldr	r3, [sp, #20]
   1dc2c:	sub	r1, r3, r0
   1dc30:	mov	r2, sl
   1dc34:	ldr	r3, [sp, #16]
   1dc38:	add	r1, r1, r3
   1dc3c:	ldr	r0, [r5]
   1dc40:	bl	1714 <fseek@plt>
   1dc44:	add	fp, fp, #1
   1dc48:	ldr	r3, [r6, #4]
   1dc4c:	cmp	r3, fp
   1dc50:	ble	1dce8 <ReadDataSlab2+0x260>
   1dc54:	ldr	r0, [r5]
   1dc58:	bl	151c <ftell@plt>
   1dc5c:	str	r0, [sp, #16]
   1dc60:	cmn	r0, #1
   1dc64:	beq	1dc04 <ReadDataSlab2+0x17c>
   1dc68:	ldr	r1, [r9]
   1dc6c:	mov	r2, sl
   1dc70:	ldr	r3, [sp, #8]
   1dc74:	mul	r1, r1, r3
   1dc78:	ldr	r0, [r5]
   1dc7c:	bl	1714 <fseek@plt>
   1dc80:	ldr	r3, [r6]
   1dc84:	cmp	r3, #0
   1dc88:	ble	1dc18 <ReadDataSlab2+0x190>
   1dc8c:	mov	r7, #0
   1dc90:	mov	r1, r4
   1dc94:	add	r8, r1, #8
   1dc98:	mov	r3, sl
   1dc9c:	ldr	r2, [sp, #4]
   1dca0:	mov	r0, r5
   1dca4:	bl	3aa0 <ReadDoubleData>
   1dca8:	mov	r2, sl
   1dcac:	ldr	r1, [sp, #12]
   1dcb0:	ldr	r0, [r5]
   1dcb4:	bl	1714 <fseek@plt>
   1dcb8:	add	r7, r7, #1
   1dcbc:	mov	r1, r8
   1dcc0:	ldr	r3, [r6]
   1dcc4:	cmp	r3, r7
   1dcc8:	bgt	1dc94 <ReadDataSlab2+0x20c>
   1dccc:	mov	r4, r8
   1dcd0:	b	1dc18 <ReadDataSlab2+0x190>
   1dcd4:	ldr	r0, [pc, #3792]	; 1ebac <ReadDataSlab2+0x1124>
   1dcd8:	add	r0, pc, r0
   1dcdc:	bl	1690 <Mat_Critical@plt>
   1dce0:	mvn	r0, #0
   1dce4:	b	1ecf0 <ReadDataSlab2+0x1268>
   1dce8:	mov	r0, #0
   1dcec:	b	1ecf0 <ReadDataSlab2+0x1268>
   1dcf0:	ldr	r2, [r8]
   1dcf4:	cmp	r2, #1
   1dcf8:	beq	1dd6c <ReadDataSlab2+0x2e4>
   1dcfc:	sub	r2, r2, #1
   1dd00:	mul	r3, r9, r2
   1dd04:	str	r3, [sp, #12]
   1dd08:	ldr	r2, [r8, #4]
   1dd0c:	ldr	r3, [sp, #64]	; 0x40
   1dd10:	ldr	r3, [r3]
   1dd14:	mul	r3, r3, r2
   1dd18:	mul	r3, r9, r3
   1dd1c:	str	r3, [sp, #20]
   1dd20:	ldr	r0, [r5]
   1dd24:	bl	151c <ftell@plt>
   1dd28:	cmn	r0, #1
   1dd2c:	beq	1ddac <ReadDataSlab2+0x324>
   1dd30:	ldr	r3, [r7, #4]
   1dd34:	ldr	r2, [sp, #64]	; 0x40
   1dd38:	ldr	r1, [r2]
   1dd3c:	mul	r1, r1, r3
   1dd40:	mov	r2, #1
   1dd44:	mul	r1, r9, r1
   1dd48:	ldr	r0, [r5]
   1dd4c:	bl	1714 <fseek@plt>
   1dd50:	ldr	r3, [r6, #4]
   1dd54:	cmp	r3, #0
   1dd58:	ble	1ed08 <ReadDataSlab2+0x1280>
   1dd5c:	mov	fp, #0
   1dd60:	mov	sl, #1
   1dd64:	mov	r9, r7
   1dd68:	b	1de10 <ReadDataSlab2+0x388>
   1dd6c:	ldr	r3, [r6]
   1dd70:	ldr	r1, [sp, #64]	; 0x40
   1dd74:	ldr	r1, [r1]
   1dd78:	cmp	r3, r1
   1dd7c:	bne	1dcfc <ReadDataSlab2+0x274>
   1dd80:	ldr	r1, [r8, #4]
   1dd84:	cmp	r1, #1
   1dd88:	bne	1dcfc <ReadDataSlab2+0x274>
   1dd8c:	ldr	r2, [r6, #4]
   1dd90:	mul	r3, r2, r3
   1dd94:	ldr	r2, [sp, #4]
   1dd98:	mov	r1, r4
   1dd9c:	mov	r0, r5
   1dda0:	bl	61cc <ReadSingleData>
   1dda4:	mov	r0, #0
   1dda8:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ddac:	ldr	r0, [pc, #3580]	; 1ebb0 <ReadDataSlab2+0x1128>
   1ddb0:	add	r0, pc, r0
   1ddb4:	bl	1690 <Mat_Critical@plt>
   1ddb8:	mvn	r0, #0
   1ddbc:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ddc0:	ldr	r0, [pc, #3564]	; 1ebb4 <ReadDataSlab2+0x112c>
   1ddc4:	add	r0, pc, r0
   1ddc8:	bl	1690 <Mat_Critical@plt>
   1ddcc:	mvn	r0, #0
   1ddd0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ddd4:	ldr	r0, [r5]
   1ddd8:	bl	151c <ftell@plt>
   1dddc:	cmn	r0, #1
   1dde0:	beq	1de90 <ReadDataSlab2+0x408>
   1dde4:	ldr	r3, [sp, #20]
   1dde8:	sub	r1, r3, r0
   1ddec:	mov	r2, sl
   1ddf0:	ldr	r3, [sp, #16]
   1ddf4:	add	r1, r1, r3
   1ddf8:	ldr	r0, [r5]
   1ddfc:	bl	1714 <fseek@plt>
   1de00:	add	fp, fp, #1
   1de04:	ldr	r3, [r6, #4]
   1de08:	cmp	r3, fp
   1de0c:	ble	1dea4 <ReadDataSlab2+0x41c>
   1de10:	ldr	r0, [r5]
   1de14:	bl	151c <ftell@plt>
   1de18:	str	r0, [sp, #16]
   1de1c:	cmn	r0, #1
   1de20:	beq	1ddc0 <ReadDataSlab2+0x338>
   1de24:	ldr	r1, [r9]
   1de28:	mov	r2, sl
   1de2c:	ldr	r3, [sp, #8]
   1de30:	mul	r1, r1, r3
   1de34:	ldr	r0, [r5]
   1de38:	bl	1714 <fseek@plt>
   1de3c:	ldr	r3, [r6]
   1de40:	cmp	r3, #0
   1de44:	ble	1ddd4 <ReadDataSlab2+0x34c>
   1de48:	mov	r7, #0
   1de4c:	mov	r1, r4
   1de50:	add	r8, r1, #4
   1de54:	mov	r3, sl
   1de58:	ldr	r2, [sp, #4]
   1de5c:	mov	r0, r5
   1de60:	bl	61cc <ReadSingleData>
   1de64:	mov	r2, sl
   1de68:	ldr	r1, [sp, #12]
   1de6c:	ldr	r0, [r5]
   1de70:	bl	1714 <fseek@plt>
   1de74:	add	r7, r7, #1
   1de78:	mov	r1, r8
   1de7c:	ldr	r3, [r6]
   1de80:	cmp	r3, r7
   1de84:	bgt	1de50 <ReadDataSlab2+0x3c8>
   1de88:	mov	r4, r8
   1de8c:	b	1ddd4 <ReadDataSlab2+0x34c>
   1de90:	ldr	r0, [pc, #3360]	; 1ebb8 <ReadDataSlab2+0x1130>
   1de94:	add	r0, pc, r0
   1de98:	bl	1690 <Mat_Critical@plt>
   1de9c:	mvn	r0, #0
   1dea0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1dea4:	mov	r0, #0
   1dea8:	b	1ecf0 <ReadDataSlab2+0x1268>
   1deac:	ldr	r2, [r8]
   1deb0:	cmp	r2, #1
   1deb4:	beq	1df28 <ReadDataSlab2+0x4a0>
   1deb8:	sub	r2, r2, #1
   1debc:	mul	r3, r9, r2
   1dec0:	str	r3, [sp, #12]
   1dec4:	ldr	r2, [r8, #4]
   1dec8:	ldr	r3, [sp, #64]	; 0x40
   1decc:	ldr	r3, [r3]
   1ded0:	mul	r3, r3, r2
   1ded4:	mul	r3, r9, r3
   1ded8:	str	r3, [sp, #20]
   1dedc:	ldr	r0, [r5]
   1dee0:	bl	151c <ftell@plt>
   1dee4:	cmn	r0, #1
   1dee8:	beq	1df68 <ReadDataSlab2+0x4e0>
   1deec:	ldr	r3, [r7, #4]
   1def0:	ldr	r2, [sp, #64]	; 0x40
   1def4:	ldr	r1, [r2]
   1def8:	mul	r1, r1, r3
   1defc:	mov	r2, #1
   1df00:	mul	r1, r9, r1
   1df04:	ldr	r0, [r5]
   1df08:	bl	1714 <fseek@plt>
   1df0c:	ldr	r3, [r6, #4]
   1df10:	cmp	r3, #0
   1df14:	ble	1ed10 <ReadDataSlab2+0x1288>
   1df18:	mov	fp, #0
   1df1c:	mov	sl, #1
   1df20:	mov	r9, r7
   1df24:	b	1dfcc <ReadDataSlab2+0x544>
   1df28:	ldr	r3, [r6]
   1df2c:	ldr	r1, [sp, #64]	; 0x40
   1df30:	ldr	r1, [r1]
   1df34:	cmp	r3, r1
   1df38:	bne	1deb8 <ReadDataSlab2+0x430>
   1df3c:	ldr	r1, [r8, #4]
   1df40:	cmp	r1, #1
   1df44:	bne	1deb8 <ReadDataSlab2+0x430>
   1df48:	ldr	r2, [r6, #4]
   1df4c:	mul	r3, r2, r3
   1df50:	ldr	r2, [sp, #4]
   1df54:	mov	r1, r4
   1df58:	mov	r0, r5
   1df5c:	bl	7d94 <ReadInt64Data>
   1df60:	mov	r0, #0
   1df64:	b	1ecf0 <ReadDataSlab2+0x1268>
   1df68:	ldr	r0, [pc, #3148]	; 1ebbc <ReadDataSlab2+0x1134>
   1df6c:	add	r0, pc, r0
   1df70:	bl	1690 <Mat_Critical@plt>
   1df74:	mvn	r0, #0
   1df78:	b	1ecf0 <ReadDataSlab2+0x1268>
   1df7c:	ldr	r0, [pc, #3132]	; 1ebc0 <ReadDataSlab2+0x1138>
   1df80:	add	r0, pc, r0
   1df84:	bl	1690 <Mat_Critical@plt>
   1df88:	mvn	r0, #0
   1df8c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1df90:	ldr	r0, [r5]
   1df94:	bl	151c <ftell@plt>
   1df98:	cmn	r0, #1
   1df9c:	beq	1e04c <ReadDataSlab2+0x5c4>
   1dfa0:	ldr	r3, [sp, #20]
   1dfa4:	sub	r1, r3, r0
   1dfa8:	mov	r2, sl
   1dfac:	ldr	r3, [sp, #16]
   1dfb0:	add	r1, r1, r3
   1dfb4:	ldr	r0, [r5]
   1dfb8:	bl	1714 <fseek@plt>
   1dfbc:	add	fp, fp, #1
   1dfc0:	ldr	r3, [r6, #4]
   1dfc4:	cmp	r3, fp
   1dfc8:	ble	1e060 <ReadDataSlab2+0x5d8>
   1dfcc:	ldr	r0, [r5]
   1dfd0:	bl	151c <ftell@plt>
   1dfd4:	str	r0, [sp, #16]
   1dfd8:	cmn	r0, #1
   1dfdc:	beq	1df7c <ReadDataSlab2+0x4f4>
   1dfe0:	ldr	r1, [r9]
   1dfe4:	mov	r2, sl
   1dfe8:	ldr	r3, [sp, #8]
   1dfec:	mul	r1, r1, r3
   1dff0:	ldr	r0, [r5]
   1dff4:	bl	1714 <fseek@plt>
   1dff8:	ldr	r3, [r6]
   1dffc:	cmp	r3, #0
   1e000:	ble	1df90 <ReadDataSlab2+0x508>
   1e004:	mov	r7, #0
   1e008:	mov	r1, r4
   1e00c:	add	r8, r1, #8
   1e010:	mov	r3, sl
   1e014:	ldr	r2, [sp, #4]
   1e018:	mov	r0, r5
   1e01c:	bl	7d94 <ReadInt64Data>
   1e020:	mov	r2, sl
   1e024:	ldr	r1, [sp, #12]
   1e028:	ldr	r0, [r5]
   1e02c:	bl	1714 <fseek@plt>
   1e030:	add	r7, r7, #1
   1e034:	mov	r1, r8
   1e038:	ldr	r3, [r6]
   1e03c:	cmp	r3, r7
   1e040:	bgt	1e00c <ReadDataSlab2+0x584>
   1e044:	mov	r4, r8
   1e048:	b	1df90 <ReadDataSlab2+0x508>
   1e04c:	ldr	r0, [pc, #2928]	; 1ebc4 <ReadDataSlab2+0x113c>
   1e050:	add	r0, pc, r0
   1e054:	bl	1690 <Mat_Critical@plt>
   1e058:	mvn	r0, #0
   1e05c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e060:	mov	r0, #0
   1e064:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e068:	ldr	r2, [r8]
   1e06c:	cmp	r2, #1
   1e070:	beq	1e0e4 <ReadDataSlab2+0x65c>
   1e074:	sub	r2, r2, #1
   1e078:	mul	r3, r9, r2
   1e07c:	str	r3, [sp, #12]
   1e080:	ldr	r2, [r8, #4]
   1e084:	ldr	r3, [sp, #64]	; 0x40
   1e088:	ldr	r3, [r3]
   1e08c:	mul	r3, r3, r2
   1e090:	mul	r3, r9, r3
   1e094:	str	r3, [sp, #20]
   1e098:	ldr	r0, [r5]
   1e09c:	bl	151c <ftell@plt>
   1e0a0:	cmn	r0, #1
   1e0a4:	beq	1e124 <ReadDataSlab2+0x69c>
   1e0a8:	ldr	r3, [r7, #4]
   1e0ac:	ldr	r2, [sp, #64]	; 0x40
   1e0b0:	ldr	r1, [r2]
   1e0b4:	mul	r1, r1, r3
   1e0b8:	mov	r2, #1
   1e0bc:	mul	r1, r9, r1
   1e0c0:	ldr	r0, [r5]
   1e0c4:	bl	1714 <fseek@plt>
   1e0c8:	ldr	r3, [r6, #4]
   1e0cc:	cmp	r3, #0
   1e0d0:	ble	1ed18 <ReadDataSlab2+0x1290>
   1e0d4:	mov	fp, #0
   1e0d8:	mov	sl, #1
   1e0dc:	mov	r9, r7
   1e0e0:	b	1e188 <ReadDataSlab2+0x700>
   1e0e4:	ldr	r3, [r6]
   1e0e8:	ldr	r1, [sp, #64]	; 0x40
   1e0ec:	ldr	r1, [r1]
   1e0f0:	cmp	r3, r1
   1e0f4:	bne	1e074 <ReadDataSlab2+0x5ec>
   1e0f8:	ldr	r1, [r8, #4]
   1e0fc:	cmp	r1, #1
   1e100:	bne	1e074 <ReadDataSlab2+0x5ec>
   1e104:	ldr	r2, [r6, #4]
   1e108:	mul	r3, r2, r3
   1e10c:	ldr	r2, [sp, #4]
   1e110:	mov	r1, r4
   1e114:	mov	r0, r5
   1e118:	bl	9a2c <ReadUInt64Data>
   1e11c:	mov	r0, #0
   1e120:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e124:	ldr	r0, [pc, #2716]	; 1ebc8 <ReadDataSlab2+0x1140>
   1e128:	add	r0, pc, r0
   1e12c:	bl	1690 <Mat_Critical@plt>
   1e130:	mvn	r0, #0
   1e134:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e138:	ldr	r0, [pc, #2700]	; 1ebcc <ReadDataSlab2+0x1144>
   1e13c:	add	r0, pc, r0
   1e140:	bl	1690 <Mat_Critical@plt>
   1e144:	mvn	r0, #0
   1e148:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e14c:	ldr	r0, [r5]
   1e150:	bl	151c <ftell@plt>
   1e154:	cmn	r0, #1
   1e158:	beq	1e208 <ReadDataSlab2+0x780>
   1e15c:	ldr	r3, [sp, #20]
   1e160:	sub	r1, r3, r0
   1e164:	mov	r2, sl
   1e168:	ldr	r3, [sp, #16]
   1e16c:	add	r1, r1, r3
   1e170:	ldr	r0, [r5]
   1e174:	bl	1714 <fseek@plt>
   1e178:	add	fp, fp, #1
   1e17c:	ldr	r3, [r6, #4]
   1e180:	cmp	r3, fp
   1e184:	ble	1e21c <ReadDataSlab2+0x794>
   1e188:	ldr	r0, [r5]
   1e18c:	bl	151c <ftell@plt>
   1e190:	str	r0, [sp, #16]
   1e194:	cmn	r0, #1
   1e198:	beq	1e138 <ReadDataSlab2+0x6b0>
   1e19c:	ldr	r1, [r9]
   1e1a0:	mov	r2, sl
   1e1a4:	ldr	r3, [sp, #8]
   1e1a8:	mul	r1, r1, r3
   1e1ac:	ldr	r0, [r5]
   1e1b0:	bl	1714 <fseek@plt>
   1e1b4:	ldr	r3, [r6]
   1e1b8:	cmp	r3, #0
   1e1bc:	ble	1e14c <ReadDataSlab2+0x6c4>
   1e1c0:	mov	r7, #0
   1e1c4:	mov	r1, r4
   1e1c8:	add	r8, r1, #8
   1e1cc:	mov	r3, sl
   1e1d0:	ldr	r2, [sp, #4]
   1e1d4:	mov	r0, r5
   1e1d8:	bl	9a2c <ReadUInt64Data>
   1e1dc:	mov	r2, sl
   1e1e0:	ldr	r1, [sp, #12]
   1e1e4:	ldr	r0, [r5]
   1e1e8:	bl	1714 <fseek@plt>
   1e1ec:	add	r7, r7, #1
   1e1f0:	mov	r1, r8
   1e1f4:	ldr	r3, [r6]
   1e1f8:	cmp	r3, r7
   1e1fc:	bgt	1e1c8 <ReadDataSlab2+0x740>
   1e200:	mov	r4, r8
   1e204:	b	1e14c <ReadDataSlab2+0x6c4>
   1e208:	ldr	r0, [pc, #2496]	; 1ebd0 <ReadDataSlab2+0x1148>
   1e20c:	add	r0, pc, r0
   1e210:	bl	1690 <Mat_Critical@plt>
   1e214:	mvn	r0, #0
   1e218:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e21c:	mov	r0, #0
   1e220:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e224:	ldr	r2, [r8]
   1e228:	cmp	r2, #1
   1e22c:	beq	1e2a0 <ReadDataSlab2+0x818>
   1e230:	sub	r2, r2, #1
   1e234:	mul	r3, r9, r2
   1e238:	str	r3, [sp, #12]
   1e23c:	ldr	r2, [r8, #4]
   1e240:	ldr	r3, [sp, #64]	; 0x40
   1e244:	ldr	r3, [r3]
   1e248:	mul	r3, r3, r2
   1e24c:	mul	r3, r9, r3
   1e250:	str	r3, [sp, #20]
   1e254:	ldr	r0, [r5]
   1e258:	bl	151c <ftell@plt>
   1e25c:	cmn	r0, #1
   1e260:	beq	1e2e0 <ReadDataSlab2+0x858>
   1e264:	ldr	r3, [r7, #4]
   1e268:	ldr	r2, [sp, #64]	; 0x40
   1e26c:	ldr	r1, [r2]
   1e270:	mul	r1, r1, r3
   1e274:	mov	r2, #1
   1e278:	mul	r1, r9, r1
   1e27c:	ldr	r0, [r5]
   1e280:	bl	1714 <fseek@plt>
   1e284:	ldr	r3, [r6, #4]
   1e288:	cmp	r3, #0
   1e28c:	ble	1ed20 <ReadDataSlab2+0x1298>
   1e290:	mov	fp, #0
   1e294:	mov	sl, #1
   1e298:	mov	r9, r7
   1e29c:	b	1e344 <ReadDataSlab2+0x8bc>
   1e2a0:	ldr	r3, [r6]
   1e2a4:	ldr	r1, [sp, #64]	; 0x40
   1e2a8:	ldr	r1, [r1]
   1e2ac:	cmp	r3, r1
   1e2b0:	bne	1e230 <ReadDataSlab2+0x7a8>
   1e2b4:	ldr	r1, [r8, #4]
   1e2b8:	cmp	r1, #1
   1e2bc:	bne	1e230 <ReadDataSlab2+0x7a8>
   1e2c0:	ldr	r2, [r6, #4]
   1e2c4:	mul	r3, r2, r3
   1e2c8:	ldr	r2, [sp, #4]
   1e2cc:	mov	r1, r4
   1e2d0:	mov	r0, r5
   1e2d4:	bl	b6c4 <ReadInt32Data>
   1e2d8:	mov	r0, #0
   1e2dc:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e2e0:	ldr	r0, [pc, #2284]	; 1ebd4 <ReadDataSlab2+0x114c>
   1e2e4:	add	r0, pc, r0
   1e2e8:	bl	1690 <Mat_Critical@plt>
   1e2ec:	mvn	r0, #0
   1e2f0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e2f4:	ldr	r0, [pc, #2268]	; 1ebd8 <ReadDataSlab2+0x1150>
   1e2f8:	add	r0, pc, r0
   1e2fc:	bl	1690 <Mat_Critical@plt>
   1e300:	mvn	r0, #0
   1e304:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e308:	ldr	r0, [r5]
   1e30c:	bl	151c <ftell@plt>
   1e310:	cmn	r0, #1
   1e314:	beq	1e3c4 <ReadDataSlab2+0x93c>
   1e318:	ldr	r3, [sp, #20]
   1e31c:	sub	r1, r3, r0
   1e320:	mov	r2, sl
   1e324:	ldr	r3, [sp, #16]
   1e328:	add	r1, r1, r3
   1e32c:	ldr	r0, [r5]
   1e330:	bl	1714 <fseek@plt>
   1e334:	add	fp, fp, #1
   1e338:	ldr	r3, [r6, #4]
   1e33c:	cmp	r3, fp
   1e340:	ble	1e3d8 <ReadDataSlab2+0x950>
   1e344:	ldr	r0, [r5]
   1e348:	bl	151c <ftell@plt>
   1e34c:	str	r0, [sp, #16]
   1e350:	cmn	r0, #1
   1e354:	beq	1e2f4 <ReadDataSlab2+0x86c>
   1e358:	ldr	r1, [r9]
   1e35c:	mov	r2, sl
   1e360:	ldr	r3, [sp, #8]
   1e364:	mul	r1, r1, r3
   1e368:	ldr	r0, [r5]
   1e36c:	bl	1714 <fseek@plt>
   1e370:	ldr	r3, [r6]
   1e374:	cmp	r3, #0
   1e378:	ble	1e308 <ReadDataSlab2+0x880>
   1e37c:	mov	r7, #0
   1e380:	mov	r1, r4
   1e384:	add	r8, r1, #4
   1e388:	mov	r3, sl
   1e38c:	ldr	r2, [sp, #4]
   1e390:	mov	r0, r5
   1e394:	bl	b6c4 <ReadInt32Data>
   1e398:	mov	r2, sl
   1e39c:	ldr	r1, [sp, #12]
   1e3a0:	ldr	r0, [r5]
   1e3a4:	bl	1714 <fseek@plt>
   1e3a8:	add	r7, r7, #1
   1e3ac:	mov	r1, r8
   1e3b0:	ldr	r3, [r6]
   1e3b4:	cmp	r3, r7
   1e3b8:	bgt	1e384 <ReadDataSlab2+0x8fc>
   1e3bc:	mov	r4, r8
   1e3c0:	b	1e308 <ReadDataSlab2+0x880>
   1e3c4:	ldr	r0, [pc, #2064]	; 1ebdc <ReadDataSlab2+0x1154>
   1e3c8:	add	r0, pc, r0
   1e3cc:	bl	1690 <Mat_Critical@plt>
   1e3d0:	mvn	r0, #0
   1e3d4:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e3d8:	mov	r0, #0
   1e3dc:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e3e0:	ldr	r2, [r8]
   1e3e4:	cmp	r2, #1
   1e3e8:	beq	1e45c <ReadDataSlab2+0x9d4>
   1e3ec:	sub	r2, r2, #1
   1e3f0:	mul	r3, r9, r2
   1e3f4:	str	r3, [sp, #12]
   1e3f8:	ldr	r2, [r8, #4]
   1e3fc:	ldr	r3, [sp, #64]	; 0x40
   1e400:	ldr	r3, [r3]
   1e404:	mul	r3, r3, r2
   1e408:	mul	r3, r9, r3
   1e40c:	str	r3, [sp, #20]
   1e410:	ldr	r0, [r5]
   1e414:	bl	151c <ftell@plt>
   1e418:	cmn	r0, #1
   1e41c:	beq	1e49c <ReadDataSlab2+0xa14>
   1e420:	ldr	r3, [r7, #4]
   1e424:	ldr	r2, [sp, #64]	; 0x40
   1e428:	ldr	r1, [r2]
   1e42c:	mul	r1, r1, r3
   1e430:	mov	r2, #1
   1e434:	mul	r1, r9, r1
   1e438:	ldr	r0, [r5]
   1e43c:	bl	1714 <fseek@plt>
   1e440:	ldr	r3, [r6, #4]
   1e444:	cmp	r3, #0
   1e448:	ble	1ed28 <ReadDataSlab2+0x12a0>
   1e44c:	mov	fp, #0
   1e450:	mov	sl, #1
   1e454:	mov	r9, r7
   1e458:	b	1e500 <ReadDataSlab2+0xa78>
   1e45c:	ldr	r3, [r6]
   1e460:	ldr	r1, [sp, #64]	; 0x40
   1e464:	ldr	r1, [r1]
   1e468:	cmp	r3, r1
   1e46c:	bne	1e3ec <ReadDataSlab2+0x964>
   1e470:	ldr	r1, [r8, #4]
   1e474:	cmp	r1, #1
   1e478:	bne	1e3ec <ReadDataSlab2+0x964>
   1e47c:	ldr	r2, [r6, #4]
   1e480:	mul	r3, r2, r3
   1e484:	ldr	r2, [sp, #4]
   1e488:	mov	r1, r4
   1e48c:	mov	r0, r5
   1e490:	bl	d234 <ReadUInt32Data>
   1e494:	mov	r0, #0
   1e498:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e49c:	ldr	r0, [pc, #1852]	; 1ebe0 <ReadDataSlab2+0x1158>
   1e4a0:	add	r0, pc, r0
   1e4a4:	bl	1690 <Mat_Critical@plt>
   1e4a8:	mvn	r0, #0
   1e4ac:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e4b0:	ldr	r0, [pc, #1836]	; 1ebe4 <ReadDataSlab2+0x115c>
   1e4b4:	add	r0, pc, r0
   1e4b8:	bl	1690 <Mat_Critical@plt>
   1e4bc:	mvn	r0, #0
   1e4c0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e4c4:	ldr	r0, [r5]
   1e4c8:	bl	151c <ftell@plt>
   1e4cc:	cmn	r0, #1
   1e4d0:	beq	1e580 <ReadDataSlab2+0xaf8>
   1e4d4:	ldr	r3, [sp, #20]
   1e4d8:	sub	r1, r3, r0
   1e4dc:	mov	r2, sl
   1e4e0:	ldr	r3, [sp, #16]
   1e4e4:	add	r1, r1, r3
   1e4e8:	ldr	r0, [r5]
   1e4ec:	bl	1714 <fseek@plt>
   1e4f0:	add	fp, fp, #1
   1e4f4:	ldr	r3, [r6, #4]
   1e4f8:	cmp	r3, fp
   1e4fc:	ble	1e594 <ReadDataSlab2+0xb0c>
   1e500:	ldr	r0, [r5]
   1e504:	bl	151c <ftell@plt>
   1e508:	str	r0, [sp, #16]
   1e50c:	cmn	r0, #1
   1e510:	beq	1e4b0 <ReadDataSlab2+0xa28>
   1e514:	ldr	r1, [r9]
   1e518:	mov	r2, sl
   1e51c:	ldr	r3, [sp, #8]
   1e520:	mul	r1, r1, r3
   1e524:	ldr	r0, [r5]
   1e528:	bl	1714 <fseek@plt>
   1e52c:	ldr	r3, [r6]
   1e530:	cmp	r3, #0
   1e534:	ble	1e4c4 <ReadDataSlab2+0xa3c>
   1e538:	mov	r7, #0
   1e53c:	mov	r1, r4
   1e540:	add	r8, r1, #4
   1e544:	mov	r3, sl
   1e548:	ldr	r2, [sp, #4]
   1e54c:	mov	r0, r5
   1e550:	bl	d234 <ReadUInt32Data>
   1e554:	mov	r2, sl
   1e558:	ldr	r1, [sp, #12]
   1e55c:	ldr	r0, [r5]
   1e560:	bl	1714 <fseek@plt>
   1e564:	add	r7, r7, #1
   1e568:	mov	r1, r8
   1e56c:	ldr	r3, [r6]
   1e570:	cmp	r3, r7
   1e574:	bgt	1e540 <ReadDataSlab2+0xab8>
   1e578:	mov	r4, r8
   1e57c:	b	1e4c4 <ReadDataSlab2+0xa3c>
   1e580:	ldr	r0, [pc, #1632]	; 1ebe8 <ReadDataSlab2+0x1160>
   1e584:	add	r0, pc, r0
   1e588:	bl	1690 <Mat_Critical@plt>
   1e58c:	mvn	r0, #0
   1e590:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e594:	mov	r0, #0
   1e598:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e59c:	ldr	r2, [r8]
   1e5a0:	cmp	r2, #1
   1e5a4:	beq	1e618 <ReadDataSlab2+0xb90>
   1e5a8:	sub	r2, r2, #1
   1e5ac:	mul	r3, r9, r2
   1e5b0:	str	r3, [sp, #12]
   1e5b4:	ldr	r2, [r8, #4]
   1e5b8:	ldr	r3, [sp, #64]	; 0x40
   1e5bc:	ldr	r3, [r3]
   1e5c0:	mul	r3, r3, r2
   1e5c4:	mul	r3, r9, r3
   1e5c8:	str	r3, [sp, #20]
   1e5cc:	ldr	r0, [r5]
   1e5d0:	bl	151c <ftell@plt>
   1e5d4:	cmn	r0, #1
   1e5d8:	beq	1e658 <ReadDataSlab2+0xbd0>
   1e5dc:	ldr	r3, [r7, #4]
   1e5e0:	ldr	r2, [sp, #64]	; 0x40
   1e5e4:	ldr	r1, [r2]
   1e5e8:	mul	r1, r1, r3
   1e5ec:	mov	r2, #1
   1e5f0:	mul	r1, r9, r1
   1e5f4:	ldr	r0, [r5]
   1e5f8:	bl	1714 <fseek@plt>
   1e5fc:	ldr	r3, [r6, #4]
   1e600:	cmp	r3, #0
   1e604:	ble	1ed30 <ReadDataSlab2+0x12a8>
   1e608:	mov	fp, #0
   1e60c:	mov	sl, #1
   1e610:	mov	r9, r7
   1e614:	b	1e6bc <ReadDataSlab2+0xc34>
   1e618:	ldr	r3, [r6]
   1e61c:	ldr	r1, [sp, #64]	; 0x40
   1e620:	ldr	r1, [r1]
   1e624:	cmp	r3, r1
   1e628:	bne	1e5a8 <ReadDataSlab2+0xb20>
   1e62c:	ldr	r1, [r8, #4]
   1e630:	cmp	r1, #1
   1e634:	bne	1e5a8 <ReadDataSlab2+0xb20>
   1e638:	ldr	r2, [r6, #4]
   1e63c:	mul	r3, r2, r3
   1e640:	ldr	r2, [sp, #4]
   1e644:	mov	r1, r4
   1e648:	mov	r0, r5
   1e64c:	bl	eda4 <ReadInt16Data>
   1e650:	mov	r0, #0
   1e654:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e658:	ldr	r0, [pc, #1420]	; 1ebec <ReadDataSlab2+0x1164>
   1e65c:	add	r0, pc, r0
   1e660:	bl	1690 <Mat_Critical@plt>
   1e664:	mvn	r0, #0
   1e668:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e66c:	ldr	r0, [pc, #1404]	; 1ebf0 <ReadDataSlab2+0x1168>
   1e670:	add	r0, pc, r0
   1e674:	bl	1690 <Mat_Critical@plt>
   1e678:	mvn	r0, #0
   1e67c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e680:	ldr	r0, [r5]
   1e684:	bl	151c <ftell@plt>
   1e688:	cmn	r0, #1
   1e68c:	beq	1e73c <ReadDataSlab2+0xcb4>
   1e690:	ldr	r3, [sp, #20]
   1e694:	sub	r1, r3, r0
   1e698:	mov	r2, sl
   1e69c:	ldr	r3, [sp, #16]
   1e6a0:	add	r1, r1, r3
   1e6a4:	ldr	r0, [r5]
   1e6a8:	bl	1714 <fseek@plt>
   1e6ac:	add	fp, fp, #1
   1e6b0:	ldr	r3, [r6, #4]
   1e6b4:	cmp	r3, fp
   1e6b8:	ble	1e750 <ReadDataSlab2+0xcc8>
   1e6bc:	ldr	r0, [r5]
   1e6c0:	bl	151c <ftell@plt>
   1e6c4:	str	r0, [sp, #16]
   1e6c8:	cmn	r0, #1
   1e6cc:	beq	1e66c <ReadDataSlab2+0xbe4>
   1e6d0:	ldr	r1, [r9]
   1e6d4:	mov	r2, sl
   1e6d8:	ldr	r3, [sp, #8]
   1e6dc:	mul	r1, r1, r3
   1e6e0:	ldr	r0, [r5]
   1e6e4:	bl	1714 <fseek@plt>
   1e6e8:	ldr	r3, [r6]
   1e6ec:	cmp	r3, #0
   1e6f0:	ble	1e680 <ReadDataSlab2+0xbf8>
   1e6f4:	mov	r7, #0
   1e6f8:	mov	r1, r4
   1e6fc:	add	r8, r1, #2
   1e700:	mov	r3, sl
   1e704:	ldr	r2, [sp, #4]
   1e708:	mov	r0, r5
   1e70c:	bl	eda4 <ReadInt16Data>
   1e710:	mov	r2, sl
   1e714:	ldr	r1, [sp, #12]
   1e718:	ldr	r0, [r5]
   1e71c:	bl	1714 <fseek@plt>
   1e720:	add	r7, r7, #1
   1e724:	mov	r1, r8
   1e728:	ldr	r3, [r6]
   1e72c:	cmp	r3, r7
   1e730:	bgt	1e6fc <ReadDataSlab2+0xc74>
   1e734:	mov	r4, r8
   1e738:	b	1e680 <ReadDataSlab2+0xbf8>
   1e73c:	ldr	r0, [pc, #1200]	; 1ebf4 <ReadDataSlab2+0x116c>
   1e740:	add	r0, pc, r0
   1e744:	bl	1690 <Mat_Critical@plt>
   1e748:	mvn	r0, #0
   1e74c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e750:	mov	r0, #0
   1e754:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e758:	ldr	r2, [r8]
   1e75c:	cmp	r2, #1
   1e760:	beq	1e7d4 <ReadDataSlab2+0xd4c>
   1e764:	sub	r2, r2, #1
   1e768:	mul	r3, r9, r2
   1e76c:	str	r3, [sp, #12]
   1e770:	ldr	r2, [r8, #4]
   1e774:	ldr	r3, [sp, #64]	; 0x40
   1e778:	ldr	r3, [r3]
   1e77c:	mul	r3, r3, r2
   1e780:	mul	r3, r9, r3
   1e784:	str	r3, [sp, #20]
   1e788:	ldr	r0, [r5]
   1e78c:	bl	151c <ftell@plt>
   1e790:	cmn	r0, #1
   1e794:	beq	1e814 <ReadDataSlab2+0xd8c>
   1e798:	ldr	r3, [r7, #4]
   1e79c:	ldr	r2, [sp, #64]	; 0x40
   1e7a0:	ldr	r1, [r2]
   1e7a4:	mul	r1, r1, r3
   1e7a8:	mov	r2, #1
   1e7ac:	mul	r1, r9, r1
   1e7b0:	ldr	r0, [r5]
   1e7b4:	bl	1714 <fseek@plt>
   1e7b8:	ldr	r3, [r6, #4]
   1e7bc:	cmp	r3, #0
   1e7c0:	ble	1ed38 <ReadDataSlab2+0x12b0>
   1e7c4:	mov	fp, #0
   1e7c8:	mov	sl, #1
   1e7cc:	mov	r9, r7
   1e7d0:	b	1e878 <ReadDataSlab2+0xdf0>
   1e7d4:	ldr	r3, [r6]
   1e7d8:	ldr	r1, [sp, #64]	; 0x40
   1e7dc:	ldr	r1, [r1]
   1e7e0:	cmp	r3, r1
   1e7e4:	bne	1e764 <ReadDataSlab2+0xcdc>
   1e7e8:	ldr	r1, [r8, #4]
   1e7ec:	cmp	r1, #1
   1e7f0:	bne	1e764 <ReadDataSlab2+0xcdc>
   1e7f4:	ldr	r2, [r6, #4]
   1e7f8:	mul	r3, r2, r3
   1e7fc:	ldr	r2, [sp, #4]
   1e800:	mov	r1, r4
   1e804:	mov	r0, r5
   1e808:	bl	108fc <ReadUInt16Data>
   1e80c:	mov	r0, #0
   1e810:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e814:	ldr	r0, [pc, #988]	; 1ebf8 <ReadDataSlab2+0x1170>
   1e818:	add	r0, pc, r0
   1e81c:	bl	1690 <Mat_Critical@plt>
   1e820:	mvn	r0, #0
   1e824:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e828:	ldr	r0, [pc, #972]	; 1ebfc <ReadDataSlab2+0x1174>
   1e82c:	add	r0, pc, r0
   1e830:	bl	1690 <Mat_Critical@plt>
   1e834:	mvn	r0, #0
   1e838:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e83c:	ldr	r0, [r5]
   1e840:	bl	151c <ftell@plt>
   1e844:	cmn	r0, #1
   1e848:	beq	1e8f8 <ReadDataSlab2+0xe70>
   1e84c:	ldr	r3, [sp, #20]
   1e850:	sub	r1, r3, r0
   1e854:	mov	r2, sl
   1e858:	ldr	r3, [sp, #16]
   1e85c:	add	r1, r1, r3
   1e860:	ldr	r0, [r5]
   1e864:	bl	1714 <fseek@plt>
   1e868:	add	fp, fp, #1
   1e86c:	ldr	r3, [r6, #4]
   1e870:	cmp	r3, fp
   1e874:	ble	1e90c <ReadDataSlab2+0xe84>
   1e878:	ldr	r0, [r5]
   1e87c:	bl	151c <ftell@plt>
   1e880:	str	r0, [sp, #16]
   1e884:	cmn	r0, #1
   1e888:	beq	1e828 <ReadDataSlab2+0xda0>
   1e88c:	ldr	r1, [r9]
   1e890:	mov	r2, sl
   1e894:	ldr	r3, [sp, #8]
   1e898:	mul	r1, r1, r3
   1e89c:	ldr	r0, [r5]
   1e8a0:	bl	1714 <fseek@plt>
   1e8a4:	ldr	r3, [r6]
   1e8a8:	cmp	r3, #0
   1e8ac:	ble	1e83c <ReadDataSlab2+0xdb4>
   1e8b0:	mov	r7, #0
   1e8b4:	mov	r1, r4
   1e8b8:	add	r8, r1, #2
   1e8bc:	mov	r3, sl
   1e8c0:	ldr	r2, [sp, #4]
   1e8c4:	mov	r0, r5
   1e8c8:	bl	108fc <ReadUInt16Data>
   1e8cc:	mov	r2, sl
   1e8d0:	ldr	r1, [sp, #12]
   1e8d4:	ldr	r0, [r5]
   1e8d8:	bl	1714 <fseek@plt>
   1e8dc:	add	r7, r7, #1
   1e8e0:	mov	r1, r8
   1e8e4:	ldr	r3, [r6]
   1e8e8:	cmp	r3, r7
   1e8ec:	bgt	1e8b8 <ReadDataSlab2+0xe30>
   1e8f0:	mov	r4, r8
   1e8f4:	b	1e83c <ReadDataSlab2+0xdb4>
   1e8f8:	ldr	r0, [pc, #768]	; 1ec00 <ReadDataSlab2+0x1178>
   1e8fc:	add	r0, pc, r0
   1e900:	bl	1690 <Mat_Critical@plt>
   1e904:	mvn	r0, #0
   1e908:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e90c:	mov	r0, #0
   1e910:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e914:	ldr	r2, [r8]
   1e918:	cmp	r2, #1
   1e91c:	beq	1e98c <ReadDataSlab2+0xf04>
   1e920:	sub	r2, r2, #1
   1e924:	mul	r3, r9, r2
   1e928:	str	r3, [sp, #12]
   1e92c:	ldr	r2, [r8, #4]
   1e930:	ldr	r3, [sp, #64]	; 0x40
   1e934:	ldr	r3, [r3]
   1e938:	mul	r3, r3, r2
   1e93c:	mul	r3, r9, r3
   1e940:	str	r3, [sp, #16]
   1e944:	ldr	r0, [r5]
   1e948:	bl	151c <ftell@plt>
   1e94c:	cmn	r0, #1
   1e950:	beq	1e9cc <ReadDataSlab2+0xf44>
   1e954:	ldr	r3, [r7, #4]
   1e958:	ldr	r2, [sp, #64]	; 0x40
   1e95c:	ldr	r1, [r2]
   1e960:	mul	r1, r1, r3
   1e964:	mov	r2, #1
   1e968:	mul	r1, r9, r1
   1e96c:	ldr	r0, [r5]
   1e970:	bl	1714 <fseek@plt>
   1e974:	ldr	r3, [r6, #4]
   1e978:	cmp	r3, #0
   1e97c:	ble	1ed40 <ReadDataSlab2+0x12b8>
   1e980:	mov	sl, #0
   1e984:	mov	fp, #1
   1e988:	b	1ea2c <ReadDataSlab2+0xfa4>
   1e98c:	ldr	r3, [r6]
   1e990:	ldr	r1, [sp, #64]	; 0x40
   1e994:	ldr	r1, [r1]
   1e998:	cmp	r3, r1
   1e99c:	bne	1e920 <ReadDataSlab2+0xe98>
   1e9a0:	ldr	r1, [r8, #4]
   1e9a4:	cmp	r1, #1
   1e9a8:	bne	1e920 <ReadDataSlab2+0xe98>
   1e9ac:	ldr	r2, [r6, #4]
   1e9b0:	mul	r3, r2, r3
   1e9b4:	ldr	r2, [sp, #4]
   1e9b8:	mov	r1, r4
   1e9bc:	mov	r0, r5
   1e9c0:	bl	12454 <ReadInt8Data>
   1e9c4:	mov	r0, #0
   1e9c8:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e9cc:	ldr	r0, [pc, #560]	; 1ec04 <ReadDataSlab2+0x117c>
   1e9d0:	add	r0, pc, r0
   1e9d4:	bl	1690 <Mat_Critical@plt>
   1e9d8:	mvn	r0, #0
   1e9dc:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e9e0:	ldr	r0, [pc, #544]	; 1ec08 <ReadDataSlab2+0x1180>
   1e9e4:	add	r0, pc, r0
   1e9e8:	bl	1690 <Mat_Critical@plt>
   1e9ec:	mvn	r0, #0
   1e9f0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1e9f4:	ldr	r0, [r5]
   1e9f8:	bl	151c <ftell@plt>
   1e9fc:	cmn	r0, #1
   1ea00:	beq	1eaa8 <ReadDataSlab2+0x1020>
   1ea04:	ldr	r3, [sp, #16]
   1ea08:	sub	r1, r3, r0
   1ea0c:	mov	r2, fp
   1ea10:	add	r1, r1, r9
   1ea14:	ldr	r0, [r5]
   1ea18:	bl	1714 <fseek@plt>
   1ea1c:	add	sl, sl, #1
   1ea20:	ldr	r3, [r6, #4]
   1ea24:	cmp	r3, sl
   1ea28:	ble	1eabc <ReadDataSlab2+0x1034>
   1ea2c:	ldr	r0, [r5]
   1ea30:	bl	151c <ftell@plt>
   1ea34:	mov	r9, r0
   1ea38:	cmn	r0, #1
   1ea3c:	beq	1e9e0 <ReadDataSlab2+0xf58>
   1ea40:	ldr	r1, [r7]
   1ea44:	mov	r2, fp
   1ea48:	ldr	r3, [sp, #8]
   1ea4c:	mul	r1, r1, r3
   1ea50:	ldr	r0, [r5]
   1ea54:	bl	1714 <fseek@plt>
   1ea58:	ldr	r3, [r6]
   1ea5c:	cmp	r3, #0
   1ea60:	ble	1e9f4 <ReadDataSlab2+0xf6c>
   1ea64:	mov	r1, r4
   1ea68:	add	r8, r1, #1
   1ea6c:	mov	r3, fp
   1ea70:	ldr	r2, [sp, #4]
   1ea74:	mov	r0, r5
   1ea78:	bl	12454 <ReadInt8Data>
   1ea7c:	mov	r2, fp
   1ea80:	ldr	r1, [sp, #12]
   1ea84:	ldr	r0, [r5]
   1ea88:	bl	1714 <fseek@plt>
   1ea8c:	mov	r1, r8
   1ea90:	sub	r2, r8, r4
   1ea94:	ldr	r3, [r6]
   1ea98:	cmp	r2, r3
   1ea9c:	blt	1ea68 <ReadDataSlab2+0xfe0>
   1eaa0:	mov	r4, r8
   1eaa4:	b	1e9f4 <ReadDataSlab2+0xf6c>
   1eaa8:	ldr	r0, [pc, #348]	; 1ec0c <ReadDataSlab2+0x1184>
   1eaac:	add	r0, pc, r0
   1eab0:	bl	1690 <Mat_Critical@plt>
   1eab4:	mvn	r0, #0
   1eab8:	b	1ecf0 <ReadDataSlab2+0x1268>
   1eabc:	mov	r0, #0
   1eac0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1eac4:	ldr	r2, [r8]
   1eac8:	cmp	r2, #1
   1eacc:	beq	1eb3c <ReadDataSlab2+0x10b4>
   1ead0:	sub	r2, r2, #1
   1ead4:	mul	r3, r9, r2
   1ead8:	str	r3, [sp, #12]
   1eadc:	ldr	r2, [r8, #4]
   1eae0:	ldr	r3, [sp, #64]	; 0x40
   1eae4:	ldr	r3, [r3]
   1eae8:	mul	r3, r3, r2
   1eaec:	mul	r3, r9, r3
   1eaf0:	str	r3, [sp, #16]
   1eaf4:	ldr	r0, [r5]
   1eaf8:	bl	151c <ftell@plt>
   1eafc:	cmn	r0, #1
   1eb00:	beq	1eb7c <ReadDataSlab2+0x10f4>
   1eb04:	ldr	r3, [r7, #4]
   1eb08:	ldr	r2, [sp, #64]	; 0x40
   1eb0c:	ldr	r1, [r2]
   1eb10:	mul	r1, r1, r3
   1eb14:	mov	r2, #1
   1eb18:	mul	r1, r9, r1
   1eb1c:	ldr	r0, [r5]
   1eb20:	bl	1714 <fseek@plt>
   1eb24:	ldr	r3, [r6, #4]
   1eb28:	cmp	r3, #0
   1eb2c:	ble	1ed48 <ReadDataSlab2+0x12c0>
   1eb30:	mov	sl, #0
   1eb34:	mov	fp, #1
   1eb38:	b	1ec54 <ReadDataSlab2+0x11cc>
   1eb3c:	ldr	r3, [r6]
   1eb40:	ldr	r1, [sp, #64]	; 0x40
   1eb44:	ldr	r1, [r1]
   1eb48:	cmp	r3, r1
   1eb4c:	bne	1ead0 <ReadDataSlab2+0x1048>
   1eb50:	ldr	r1, [r8, #4]
   1eb54:	cmp	r1, #1
   1eb58:	bne	1ead0 <ReadDataSlab2+0x1048>
   1eb5c:	ldr	r2, [r6, #4]
   1eb60:	mul	r3, r2, r3
   1eb64:	ldr	r2, [sp, #4]
   1eb68:	mov	r1, r4
   1eb6c:	mov	r0, r5
   1eb70:	bl	13e70 <ReadUInt8Data>
   1eb74:	mov	r0, #0
   1eb78:	b	1ecf0 <ReadDataSlab2+0x1268>
   1eb7c:	ldr	r0, [pc, #140]	; 1ec10 <ReadDataSlab2+0x1188>
   1eb80:	add	r0, pc, r0
   1eb84:	bl	1690 <Mat_Critical@plt>
   1eb88:	mvn	r0, #0
   1eb8c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1eb90:	ldr	r0, [pc, #124]	; 1ec14 <ReadDataSlab2+0x118c>
   1eb94:	add	r0, pc, r0
   1eb98:	bl	1690 <Mat_Critical@plt>
   1eb9c:	mvn	r0, #0
   1eba0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1eba4:	.word	0x00034654
   1eba8:	.word	0x00034640
   1ebac:	.word	0x00034570
   1ebb0:	.word	0x00034498
   1ebb4:	.word	0x00034484
   1ebb8:	.word	0x000343b4
   1ebbc:	.word	0x000342dc
   1ebc0:	.word	0x000342c8
   1ebc4:	.word	0x000341f8
   1ebc8:	.word	0x00034120
   1ebcc:	.word	0x0003410c
   1ebd0:	.word	0x0003403c
   1ebd4:	.word	0x00033f64
   1ebd8:	.word	0x00033f50
   1ebdc:	.word	0x00033e80
   1ebe0:	.word	0x00033da8
   1ebe4:	.word	0x00033d94
   1ebe8:	.word	0x00033cc4
   1ebec:	.word	0x00033bec
   1ebf0:	.word	0x00033bd8
   1ebf4:	.word	0x00033b08
   1ebf8:	.word	0x00033a30
   1ebfc:	.word	0x00033a1c
   1ec00:	.word	0x0003394c
   1ec04:	.word	0x00033878
   1ec08:	.word	0x00033864
   1ec0c:	.word	0x0003379c
   1ec10:	.word	0x000336c8
   1ec14:	.word	0x000336b4
   1ec18:	.word	0x00033574
   1ec1c:	ldr	r0, [r5]
   1ec20:	bl	151c <ftell@plt>
   1ec24:	cmn	r0, #1
   1ec28:	beq	1ecd0 <ReadDataSlab2+0x1248>
   1ec2c:	ldr	r3, [sp, #16]
   1ec30:	sub	r1, r3, r0
   1ec34:	mov	r2, fp
   1ec38:	add	r1, r1, r9
   1ec3c:	ldr	r0, [r5]
   1ec40:	bl	1714 <fseek@plt>
   1ec44:	add	sl, sl, #1
   1ec48:	ldr	r3, [r6, #4]
   1ec4c:	cmp	r3, sl
   1ec50:	ble	1ece4 <ReadDataSlab2+0x125c>
   1ec54:	ldr	r0, [r5]
   1ec58:	bl	151c <ftell@plt>
   1ec5c:	mov	r9, r0
   1ec60:	cmn	r0, #1
   1ec64:	beq	1eb90 <ReadDataSlab2+0x1108>
   1ec68:	ldr	r1, [r7]
   1ec6c:	mov	r2, fp
   1ec70:	ldr	r3, [sp, #8]
   1ec74:	mul	r1, r1, r3
   1ec78:	ldr	r0, [r5]
   1ec7c:	bl	1714 <fseek@plt>
   1ec80:	ldr	r3, [r6]
   1ec84:	cmp	r3, #0
   1ec88:	ble	1ec1c <ReadDataSlab2+0x1194>
   1ec8c:	mov	r1, r4
   1ec90:	add	r8, r1, #1
   1ec94:	mov	r3, fp
   1ec98:	ldr	r2, [sp, #4]
   1ec9c:	mov	r0, r5
   1eca0:	bl	13e70 <ReadUInt8Data>
   1eca4:	mov	r2, fp
   1eca8:	ldr	r1, [sp, #12]
   1ecac:	ldr	r0, [r5]
   1ecb0:	bl	1714 <fseek@plt>
   1ecb4:	mov	r1, r8
   1ecb8:	sub	r2, r8, r4
   1ecbc:	ldr	r3, [r6]
   1ecc0:	cmp	r2, r3
   1ecc4:	blt	1ec90 <ReadDataSlab2+0x1208>
   1ecc8:	mov	r4, r8
   1eccc:	b	1ec1c <ReadDataSlab2+0x1194>
   1ecd0:	ldr	r0, [pc, #-192]	; 1ec18 <ReadDataSlab2+0x1190>
   1ecd4:	add	r0, pc, r0
   1ecd8:	bl	1690 <Mat_Critical@plt>
   1ecdc:	mvn	r0, #0
   1ece0:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ece4:	mov	r0, #0
   1ece8:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ecec:	mov	r0, #0
   1ecf0:	add	sp, sp, #28
   1ecf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ecf8:	mov	r0, #0
   1ecfc:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed00:	mov	r0, #0
   1ed04:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed08:	mov	r0, #0
   1ed0c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed10:	mov	r0, #0
   1ed14:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed18:	mov	r0, #0
   1ed1c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed20:	mov	r0, #0
   1ed24:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed28:	mov	r0, #0
   1ed2c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed30:	mov	r0, #0
   1ed34:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed38:	mov	r0, #0
   1ed3c:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed40:	mov	r0, #0
   1ed44:	b	1ecf0 <ReadDataSlab2+0x1268>
   1ed48:	mov	r0, #0
   1ed4c:	b	1ecf0 <ReadDataSlab2+0x1268>

0001ed50 <ReadCompressedDataSlab1>:
   1ed50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed54:	sub	sp, sp, #68	; 0x44
   1ed58:	mov	r6, r0
   1ed5c:	mov	r9, r1
   1ed60:	mov	r4, r2
   1ed64:	mov	r5, r3
   1ed68:	ldr	r8, [sp, #116]	; 0x74
   1ed6c:	mov	r2, #56	; 0x38
   1ed70:	mov	r1, #0
   1ed74:	add	r0, sp, #8
   1ed78:	bl	166c <memset@plt>
   1ed7c:	cmp	r4, #0
   1ed80:	cmpne	r6, #0
   1ed84:	moveq	r5, #0
   1ed88:	beq	1ee6c <ReadCompressedDataSlab1+0x11c>
   1ed8c:	ldr	r3, [r6]
   1ed90:	cmp	r3, #0
   1ed94:	moveq	r5, #0
   1ed98:	beq	1ee6c <ReadCompressedDataSlab1+0x11c>
   1ed9c:	ldr	r7, [sp, #112]	; 0x70
   1eda0:	sub	r7, r7, #1
   1eda4:	mov	r1, r9
   1eda8:	add	r9, sp, #8
   1edac:	mov	r0, r9
   1edb0:	bl	1624 <inflateCopy@plt>
   1edb4:	ldr	r3, [sp, #108]	; 0x6c
   1edb8:	ldr	r2, [sp, #104]	; 0x68
   1edbc:	mov	r1, r9
   1edc0:	mov	r0, r6
   1edc4:	bl	263c <InflateSkipData>
   1edc8:	sub	r5, r5, #6
   1edcc:	cmp	r5, #9
   1edd0:	addls	pc, pc, r5, lsl #2
   1edd4:	b	1f360 <ReadCompressedDataSlab1+0x610>
   1edd8:	b	1ee00 <ReadCompressedDataSlab1+0xb0>
   1eddc:	b	1ee98 <ReadCompressedDataSlab1+0x148>
   1ede0:	b	1f250 <ReadCompressedDataSlab1+0x500>
   1ede4:	b	1f2d8 <ReadCompressedDataSlab1+0x588>
   1ede8:	b	1f140 <ReadCompressedDataSlab1+0x3f0>
   1edec:	b	1f1c8 <ReadCompressedDataSlab1+0x478>
   1edf0:	b	1f030 <ReadCompressedDataSlab1+0x2e0>
   1edf4:	b	1f0b8 <ReadCompressedDataSlab1+0x368>
   1edf8:	b	1ef20 <ReadCompressedDataSlab1+0x1d0>
   1edfc:	b	1efa8 <ReadCompressedDataSlab1+0x258>
   1ee00:	cmp	r7, #0
   1ee04:	beq	1ee78 <ReadCompressedDataSlab1+0x128>
   1ee08:	cmp	r8, #0
   1ee0c:	movle	r5, #0
   1ee10:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1ee14:	mov	r9, #0
   1ee18:	mov	r5, r9
   1ee1c:	add	sl, sp, #8
   1ee20:	mov	fp, #1
   1ee24:	str	fp, [sp]
   1ee28:	ldr	r3, [sp, #104]	; 0x68
   1ee2c:	mov	r2, r4
   1ee30:	mov	r1, sl
   1ee34:	mov	r0, r6
   1ee38:	bl	4ef4 <ReadCompressedDoubleData>
   1ee3c:	add	r5, r5, r0
   1ee40:	mov	r3, r7
   1ee44:	ldr	r2, [sp, #104]	; 0x68
   1ee48:	mov	r1, sl
   1ee4c:	mov	r0, r6
   1ee50:	bl	263c <InflateSkipData>
   1ee54:	add	r9, r9, #1
   1ee58:	add	r4, r4, #8
   1ee5c:	cmp	r8, r9
   1ee60:	bne	1ee24 <ReadCompressedDataSlab1+0xd4>
   1ee64:	add	r0, sp, #8
   1ee68:	bl	1618 <inflateEnd@plt>
   1ee6c:	mov	r0, r5
   1ee70:	add	sp, sp, #68	; 0x44
   1ee74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee78:	str	r8, [sp]
   1ee7c:	ldr	r3, [sp, #104]	; 0x68
   1ee80:	mov	r2, r4
   1ee84:	add	r1, sp, #8
   1ee88:	mov	r0, r6
   1ee8c:	bl	4ef4 <ReadCompressedDoubleData>
   1ee90:	mov	r5, r0
   1ee94:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1ee98:	cmp	r7, #0
   1ee9c:	beq	1ef00 <ReadCompressedDataSlab1+0x1b0>
   1eea0:	cmp	r8, #0
   1eea4:	movle	r5, #0
   1eea8:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1eeac:	mov	r9, #0
   1eeb0:	mov	r5, r9
   1eeb4:	add	sl, sp, #8
   1eeb8:	mov	fp, #1
   1eebc:	str	fp, [sp]
   1eec0:	ldr	r3, [sp, #104]	; 0x68
   1eec4:	mov	r2, r4
   1eec8:	mov	r1, sl
   1eecc:	mov	r0, r6
   1eed0:	bl	7804 <ReadCompressedSingleData>
   1eed4:	add	r5, r5, r0
   1eed8:	mov	r3, r7
   1eedc:	ldr	r2, [sp, #104]	; 0x68
   1eee0:	mov	r1, sl
   1eee4:	mov	r0, r6
   1eee8:	bl	263c <InflateSkipData>
   1eeec:	add	r9, r9, #1
   1eef0:	add	r4, r4, #4
   1eef4:	cmp	r8, r9
   1eef8:	bne	1eebc <ReadCompressedDataSlab1+0x16c>
   1eefc:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1ef00:	str	r8, [sp]
   1ef04:	ldr	r3, [sp, #104]	; 0x68
   1ef08:	mov	r2, r4
   1ef0c:	add	r1, sp, #8
   1ef10:	mov	r0, r6
   1ef14:	bl	7804 <ReadCompressedSingleData>
   1ef18:	mov	r5, r0
   1ef1c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1ef20:	cmp	r7, #0
   1ef24:	beq	1ef88 <ReadCompressedDataSlab1+0x238>
   1ef28:	cmp	r8, #0
   1ef2c:	movle	r5, #0
   1ef30:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1ef34:	mov	r9, #0
   1ef38:	mov	r5, r9
   1ef3c:	add	sl, sp, #8
   1ef40:	mov	fp, #1
   1ef44:	str	fp, [sp]
   1ef48:	ldr	r3, [sp, #104]	; 0x68
   1ef4c:	mov	r2, r4
   1ef50:	mov	r1, sl
   1ef54:	mov	r0, r6
   1ef58:	bl	9464 <ReadCompressedInt64Data>
   1ef5c:	add	r5, r5, r0
   1ef60:	mov	r3, r7
   1ef64:	ldr	r2, [sp, #104]	; 0x68
   1ef68:	mov	r1, sl
   1ef6c:	mov	r0, r6
   1ef70:	bl	263c <InflateSkipData>
   1ef74:	add	r9, r9, #1
   1ef78:	add	r4, r4, #8
   1ef7c:	cmp	r8, r9
   1ef80:	bne	1ef44 <ReadCompressedDataSlab1+0x1f4>
   1ef84:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1ef88:	str	r8, [sp]
   1ef8c:	ldr	r3, [sp, #104]	; 0x68
   1ef90:	mov	r2, r4
   1ef94:	add	r1, sp, #8
   1ef98:	mov	r0, r6
   1ef9c:	bl	9464 <ReadCompressedInt64Data>
   1efa0:	mov	r5, r0
   1efa4:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1efa8:	cmp	r7, #0
   1efac:	beq	1f010 <ReadCompressedDataSlab1+0x2c0>
   1efb0:	cmp	r8, #0
   1efb4:	movle	r5, #0
   1efb8:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1efbc:	mov	r9, #0
   1efc0:	mov	r5, r9
   1efc4:	add	sl, sp, #8
   1efc8:	mov	fp, #1
   1efcc:	str	fp, [sp]
   1efd0:	ldr	r3, [sp, #104]	; 0x68
   1efd4:	mov	r2, r4
   1efd8:	mov	r1, sl
   1efdc:	mov	r0, r6
   1efe0:	bl	b0fc <ReadCompressedUInt64Data>
   1efe4:	add	r5, r5, r0
   1efe8:	mov	r3, r7
   1efec:	ldr	r2, [sp, #104]	; 0x68
   1eff0:	mov	r1, sl
   1eff4:	mov	r0, r6
   1eff8:	bl	263c <InflateSkipData>
   1effc:	add	r9, r9, #1
   1f000:	add	r4, r4, #8
   1f004:	cmp	r8, r9
   1f008:	bne	1efcc <ReadCompressedDataSlab1+0x27c>
   1f00c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f010:	str	r8, [sp]
   1f014:	ldr	r3, [sp, #104]	; 0x68
   1f018:	mov	r2, r4
   1f01c:	add	r1, sp, #8
   1f020:	mov	r0, r6
   1f024:	bl	b0fc <ReadCompressedUInt64Data>
   1f028:	mov	r5, r0
   1f02c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f030:	cmp	r7, #0
   1f034:	beq	1f098 <ReadCompressedDataSlab1+0x348>
   1f038:	cmp	r8, #0
   1f03c:	movle	r5, #0
   1f040:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1f044:	mov	r9, #0
   1f048:	mov	r5, r9
   1f04c:	add	sl, sp, #8
   1f050:	mov	fp, #1
   1f054:	str	fp, [sp]
   1f058:	ldr	r3, [sp, #104]	; 0x68
   1f05c:	mov	r2, r4
   1f060:	mov	r1, sl
   1f064:	mov	r0, r6
   1f068:	bl	cc9c <ReadCompressedInt32Data>
   1f06c:	add	r5, r5, r0
   1f070:	mov	r3, r7
   1f074:	ldr	r2, [sp, #104]	; 0x68
   1f078:	mov	r1, sl
   1f07c:	mov	r0, r6
   1f080:	bl	263c <InflateSkipData>
   1f084:	add	r9, r9, #1
   1f088:	add	r4, r4, #4
   1f08c:	cmp	r8, r9
   1f090:	bne	1f054 <ReadCompressedDataSlab1+0x304>
   1f094:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f098:	str	r8, [sp]
   1f09c:	ldr	r3, [sp, #104]	; 0x68
   1f0a0:	mov	r2, r4
   1f0a4:	add	r1, sp, #8
   1f0a8:	mov	r0, r6
   1f0ac:	bl	cc9c <ReadCompressedInt32Data>
   1f0b0:	mov	r5, r0
   1f0b4:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f0b8:	cmp	r7, #0
   1f0bc:	beq	1f120 <ReadCompressedDataSlab1+0x3d0>
   1f0c0:	cmp	r8, #0
   1f0c4:	movle	r5, #0
   1f0c8:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1f0cc:	mov	r9, #0
   1f0d0:	mov	r5, r9
   1f0d4:	add	sl, sp, #8
   1f0d8:	mov	fp, #1
   1f0dc:	str	fp, [sp]
   1f0e0:	ldr	r3, [sp, #104]	; 0x68
   1f0e4:	mov	r2, r4
   1f0e8:	mov	r1, sl
   1f0ec:	mov	r0, r6
   1f0f0:	bl	e80c <ReadCompressedUInt32Data>
   1f0f4:	add	r5, r5, r0
   1f0f8:	mov	r3, r7
   1f0fc:	ldr	r2, [sp, #104]	; 0x68
   1f100:	mov	r1, sl
   1f104:	mov	r0, r6
   1f108:	bl	263c <InflateSkipData>
   1f10c:	add	r9, r9, #1
   1f110:	add	r4, r4, #4
   1f114:	cmp	r8, r9
   1f118:	bne	1f0dc <ReadCompressedDataSlab1+0x38c>
   1f11c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f120:	str	r8, [sp]
   1f124:	ldr	r3, [sp, #104]	; 0x68
   1f128:	mov	r2, r4
   1f12c:	add	r1, sp, #8
   1f130:	mov	r0, r6
   1f134:	bl	e80c <ReadCompressedUInt32Data>
   1f138:	mov	r5, r0
   1f13c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f140:	cmp	r7, #0
   1f144:	beq	1f1a8 <ReadCompressedDataSlab1+0x458>
   1f148:	cmp	r8, #0
   1f14c:	movle	r5, #0
   1f150:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1f154:	mov	r9, r4
   1f158:	add	r4, r4, r8, lsl #1
   1f15c:	mov	r5, #0
   1f160:	add	sl, sp, #8
   1f164:	mov	fp, #1
   1f168:	str	fp, [sp]
   1f16c:	ldr	r3, [sp, #104]	; 0x68
   1f170:	mov	r2, r9
   1f174:	mov	r1, sl
   1f178:	mov	r0, r6
   1f17c:	bl	1038c <ReadCompressedInt16Data>
   1f180:	add	r5, r5, r0
   1f184:	mov	r3, r7
   1f188:	ldr	r2, [sp, #104]	; 0x68
   1f18c:	mov	r1, sl
   1f190:	mov	r0, r6
   1f194:	bl	263c <InflateSkipData>
   1f198:	add	r9, r9, #2
   1f19c:	cmp	r4, r9
   1f1a0:	bne	1f168 <ReadCompressedDataSlab1+0x418>
   1f1a4:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f1a8:	str	r8, [sp]
   1f1ac:	ldr	r3, [sp, #104]	; 0x68
   1f1b0:	mov	r2, r4
   1f1b4:	add	r1, sp, #8
   1f1b8:	mov	r0, r6
   1f1bc:	bl	1038c <ReadCompressedInt16Data>
   1f1c0:	mov	r5, r0
   1f1c4:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f1c8:	cmp	r7, #0
   1f1cc:	beq	1f230 <ReadCompressedDataSlab1+0x4e0>
   1f1d0:	cmp	r8, #0
   1f1d4:	movle	r5, #0
   1f1d8:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1f1dc:	mov	r9, r4
   1f1e0:	add	r4, r4, r8, lsl #1
   1f1e4:	mov	r5, #0
   1f1e8:	add	sl, sp, #8
   1f1ec:	mov	fp, #1
   1f1f0:	str	fp, [sp]
   1f1f4:	ldr	r3, [sp, #104]	; 0x68
   1f1f8:	mov	r2, r9
   1f1fc:	mov	r1, sl
   1f200:	mov	r0, r6
   1f204:	bl	11ee4 <ReadCompressedUInt16Data>
   1f208:	add	r5, r5, r0
   1f20c:	mov	r3, r7
   1f210:	ldr	r2, [sp, #104]	; 0x68
   1f214:	mov	r1, sl
   1f218:	mov	r0, r6
   1f21c:	bl	263c <InflateSkipData>
   1f220:	add	r9, r9, #2
   1f224:	cmp	r4, r9
   1f228:	bne	1f1f0 <ReadCompressedDataSlab1+0x4a0>
   1f22c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f230:	str	r8, [sp]
   1f234:	ldr	r3, [sp, #104]	; 0x68
   1f238:	mov	r2, r4
   1f23c:	add	r1, sp, #8
   1f240:	mov	r0, r6
   1f244:	bl	11ee4 <ReadCompressedUInt16Data>
   1f248:	mov	r5, r0
   1f24c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f250:	cmp	r7, #0
   1f254:	beq	1f2b8 <ReadCompressedDataSlab1+0x568>
   1f258:	cmp	r8, #0
   1f25c:	movle	r5, #0
   1f260:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1f264:	mov	r9, r4
   1f268:	add	r4, r4, r8
   1f26c:	mov	r5, #0
   1f270:	add	sl, sp, #8
   1f274:	mov	fp, #1
   1f278:	str	fp, [sp]
   1f27c:	ldr	r3, [sp, #104]	; 0x68
   1f280:	mov	r2, r9
   1f284:	mov	r1, sl
   1f288:	mov	r0, r6
   1f28c:	bl	13900 <ReadCompressedInt8Data>
   1f290:	add	r5, r5, r0
   1f294:	mov	r3, r7
   1f298:	ldr	r2, [sp, #104]	; 0x68
   1f29c:	mov	r1, sl
   1f2a0:	mov	r0, r6
   1f2a4:	bl	263c <InflateSkipData>
   1f2a8:	add	r9, r9, #1
   1f2ac:	cmp	r4, r9
   1f2b0:	bne	1f278 <ReadCompressedDataSlab1+0x528>
   1f2b4:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f2b8:	str	r8, [sp]
   1f2bc:	ldr	r3, [sp, #104]	; 0x68
   1f2c0:	mov	r2, r4
   1f2c4:	add	r1, sp, #8
   1f2c8:	mov	r0, r6
   1f2cc:	bl	13900 <ReadCompressedInt8Data>
   1f2d0:	mov	r5, r0
   1f2d4:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f2d8:	cmp	r7, #0
   1f2dc:	beq	1f340 <ReadCompressedDataSlab1+0x5f0>
   1f2e0:	cmp	r8, #0
   1f2e4:	movle	r5, #0
   1f2e8:	ble	1ee64 <ReadCompressedDataSlab1+0x114>
   1f2ec:	mov	r9, r4
   1f2f0:	add	r4, r4, r8
   1f2f4:	mov	r5, #0
   1f2f8:	add	r8, sp, #8
   1f2fc:	mov	sl, #1
   1f300:	str	sl, [sp]
   1f304:	ldr	r3, [sp, #104]	; 0x68
   1f308:	mov	r2, r9
   1f30c:	mov	r1, r8
   1f310:	mov	r0, r6
   1f314:	bl	1531c <ReadCompressedUInt8Data>
   1f318:	add	r5, r5, r0
   1f31c:	mov	r3, r7
   1f320:	ldr	r2, [sp, #104]	; 0x68
   1f324:	mov	r1, r8
   1f328:	mov	r0, r6
   1f32c:	bl	263c <InflateSkipData>
   1f330:	add	r9, r9, #1
   1f334:	cmp	r9, r4
   1f338:	bne	1f300 <ReadCompressedDataSlab1+0x5b0>
   1f33c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f340:	str	r8, [sp]
   1f344:	ldr	r3, [sp, #104]	; 0x68
   1f348:	mov	r2, r4
   1f34c:	add	r1, sp, #8
   1f350:	mov	r0, r6
   1f354:	bl	1531c <ReadCompressedUInt8Data>
   1f358:	mov	r5, r0
   1f35c:	b	1ee64 <ReadCompressedDataSlab1+0x114>
   1f360:	mov	r5, #0
   1f364:	b	1ee64 <ReadCompressedDataSlab1+0x114>

0001f368 <ReadCompressedDataSlab2>:
   1f368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f36c:	sub	sp, sp, #84	; 0x54
   1f370:	mov	r5, r0
   1f374:	mov	sl, r1
   1f378:	mov	r4, r2
   1f37c:	mov	r9, r3
   1f380:	ldr	r8, [sp, #128]	; 0x80
   1f384:	ldr	r6, [sp, #132]	; 0x84
   1f388:	ldr	r7, [sp, #136]	; 0x88
   1f38c:	mov	r2, #56	; 0x38
   1f390:	mov	r1, #0
   1f394:	add	r0, sp, #24
   1f398:	bl	166c <memset@plt>
   1f39c:	cmp	r4, #0
   1f3a0:	cmpne	r5, #0
   1f3a4:	beq	1f578 <ReadCompressedDataSlab2+0x210>
   1f3a8:	ldr	r3, [r5]
   1f3ac:	cmp	r3, #0
   1f3b0:	beq	1f578 <ReadCompressedDataSlab2+0x210>
   1f3b4:	cmp	r6, #0
   1f3b8:	cmpne	r8, #0
   1f3bc:	moveq	r3, #1
   1f3c0:	movne	r3, #0
   1f3c4:	cmp	r7, #0
   1f3c8:	orreq	r3, r3, #1
   1f3cc:	cmp	r3, #0
   1f3d0:	bne	1f578 <ReadCompressedDataSlab2+0x210>
   1f3d4:	mov	r1, sl
   1f3d8:	add	r0, sp, #24
   1f3dc:	bl	1624 <inflateCopy@plt>
   1f3e0:	sub	r9, r9, #6
   1f3e4:	cmp	r9, #9
   1f3e8:	addls	pc, pc, r9, lsl #2
   1f3ec:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1f3f0:	b	1f418 <ReadCompressedDataSlab2+0xb0>
   1f3f4:	b	1f670 <ReadCompressedDataSlab2+0x308>
   1f3f8:	b	20668 <ReadCompressedDataSlab2+0x1300>
   1f3fc:	b	208a4 <ReadCompressedDataSlab2+0x153c>
   1f400:	b	201d8 <ReadCompressedDataSlab2+0xe70>
   1f404:	b	20420 <ReadCompressedDataSlab2+0x10b8>
   1f408:	b	1fd48 <ReadCompressedDataSlab2+0x9e0>
   1f40c:	b	1ff90 <ReadCompressedDataSlab2+0xc28>
   1f410:	b	1f8b8 <ReadCompressedDataSlab2+0x550>
   1f414:	b	1fb00 <ReadCompressedDataSlab2+0x798>
   1f418:	ldr	r9, [r6]
   1f41c:	ldr	r3, [sp, #124]	; 0x7c
   1f420:	ldr	r3, [r3]
   1f424:	ldr	r2, [r6, #4]
   1f428:	sub	r2, r2, #1
   1f42c:	mul	r2, r3, r2
   1f430:	str	r2, [sp, #20]
   1f434:	ldr	r2, [r8, #4]
   1f438:	mul	r3, r2, r3
   1f43c:	ldr	r2, [sp, #120]	; 0x78
   1f440:	add	r1, sp, #24
   1f444:	mov	r0, r5
   1f448:	bl	263c <InflateSkipData>
   1f44c:	ldr	r3, [r6]
   1f450:	cmp	r3, #1
   1f454:	beq	1f584 <ReadCompressedDataSlab2+0x21c>
   1f458:	ldr	r3, [r7, #4]
   1f45c:	cmp	r3, #0
   1f460:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1f464:	mov	r3, #0
   1f468:	add	r2, sp, #24
   1f46c:	str	r2, [sp, #16]
   1f470:	mov	fp, #1
   1f474:	sub	r2, r9, #1
   1f478:	str	r2, [sp, #12]
   1f47c:	mov	sl, r3
   1f480:	str	r6, [sp, #132]	; 0x84
   1f484:	ldr	r3, [r8]
   1f488:	ldr	r2, [sp, #120]	; 0x78
   1f48c:	ldr	r9, [sp, #16]
   1f490:	mov	r1, r9
   1f494:	mov	r0, r5
   1f498:	bl	263c <InflateSkipData>
   1f49c:	ldr	r3, [r7]
   1f4a0:	sub	r3, r3, #1
   1f4a4:	cmp	r3, #0
   1f4a8:	ble	1f668 <ReadCompressedDataSlab2+0x300>
   1f4ac:	mov	r6, #0
   1f4b0:	mov	r2, r4
   1f4b4:	mov	r4, r9
   1f4b8:	add	r9, r2, #8
   1f4bc:	str	fp, [sp]
   1f4c0:	ldr	r3, [sp, #120]	; 0x78
   1f4c4:	mov	r1, r4
   1f4c8:	mov	r0, r5
   1f4cc:	bl	4ef4 <ReadCompressedDoubleData>
   1f4d0:	ldr	r3, [sp, #12]
   1f4d4:	ldr	r2, [sp, #120]	; 0x78
   1f4d8:	mov	r1, r4
   1f4dc:	mov	r0, r5
   1f4e0:	bl	263c <InflateSkipData>
   1f4e4:	add	r6, r6, #1
   1f4e8:	mov	r2, r9
   1f4ec:	ldr	r3, [r7]
   1f4f0:	sub	r3, r3, #1
   1f4f4:	cmp	r3, r6
   1f4f8:	bgt	1f4b8 <ReadCompressedDataSlab2+0x150>
   1f4fc:	add	r4, r9, #8
   1f500:	str	fp, [sp]
   1f504:	ldr	r3, [sp, #120]	; 0x78
   1f508:	mov	r2, r9
   1f50c:	ldr	r6, [sp, #16]
   1f510:	mov	r1, r6
   1f514:	mov	r0, r5
   1f518:	bl	4ef4 <ReadCompressedDoubleData>
   1f51c:	ldr	r3, [sp, #124]	; 0x7c
   1f520:	ldr	r3, [r3]
   1f524:	sub	r3, r3, #1
   1f528:	ldr	r2, [sp, #20]
   1f52c:	add	r3, r3, r2
   1f530:	ldr	r2, [r7]
   1f534:	sub	r1, r2, #1
   1f538:	ldr	r2, [sp, #132]	; 0x84
   1f53c:	ldr	r2, [r2]
   1f540:	mul	r2, r2, r1
   1f544:	sub	r3, r3, r2
   1f548:	ldr	r2, [r8]
   1f54c:	sub	r3, r3, r2
   1f550:	ldr	r2, [sp, #120]	; 0x78
   1f554:	mov	r1, r6
   1f558:	mov	r0, r5
   1f55c:	bl	263c <InflateSkipData>
   1f560:	add	sl, sl, #1
   1f564:	ldr	r3, [r7, #4]
   1f568:	cmp	r3, sl
   1f56c:	bgt	1f484 <ReadCompressedDataSlab2+0x11c>
   1f570:	add	r0, sp, #24
   1f574:	bl	1618 <inflateEnd@plt>
   1f578:	mov	r0, #0
   1f57c:	add	sp, sp, #84	; 0x54
   1f580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f584:	ldr	r3, [r7]
   1f588:	ldr	r2, [sp, #124]	; 0x7c
   1f58c:	ldr	r2, [r2]
   1f590:	cmp	r3, r2
   1f594:	beq	1f638 <ReadCompressedDataSlab2+0x2d0>
   1f598:	ldr	r3, [r7, #4]
   1f59c:	cmp	r3, #0
   1f5a0:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1f5a4:	mov	r9, #0
   1f5a8:	add	sl, sp, #24
   1f5ac:	str	r5, [sp, #12]
   1f5b0:	ldr	r5, [sp, #20]
   1f5b4:	ldr	fp, [sp, #124]	; 0x7c
   1f5b8:	ldr	r3, [r8]
   1f5bc:	ldr	r2, [sp, #120]	; 0x78
   1f5c0:	mov	r1, sl
   1f5c4:	ldr	r0, [sp, #12]
   1f5c8:	bl	263c <InflateSkipData>
   1f5cc:	ldr	r3, [r7]
   1f5d0:	str	r3, [sp]
   1f5d4:	ldr	r3, [sp, #120]	; 0x78
   1f5d8:	mov	r2, r4
   1f5dc:	mov	r1, sl
   1f5e0:	ldr	r0, [sp, #12]
   1f5e4:	bl	4ef4 <ReadCompressedDoubleData>
   1f5e8:	ldr	r2, [r7]
   1f5ec:	add	r4, r4, r2, lsl #3
   1f5f0:	ldr	r3, [fp]
   1f5f4:	sub	r3, r3, #1
   1f5f8:	add	r3, r3, r5
   1f5fc:	sub	r2, r2, #1
   1f600:	ldr	r1, [r6]
   1f604:	mul	r2, r1, r2
   1f608:	sub	r3, r3, r2
   1f60c:	ldr	r2, [r8]
   1f610:	sub	r3, r3, r2
   1f614:	ldr	r2, [sp, #120]	; 0x78
   1f618:	mov	r1, sl
   1f61c:	ldr	r0, [sp, #12]
   1f620:	bl	263c <InflateSkipData>
   1f624:	add	r9, r9, #1
   1f628:	ldr	r3, [r7, #4]
   1f62c:	cmp	r3, r9
   1f630:	bgt	1f5b8 <ReadCompressedDataSlab2+0x250>
   1f634:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1f638:	ldr	r2, [r6, #4]
   1f63c:	cmp	r2, #1
   1f640:	bne	1f598 <ReadCompressedDataSlab2+0x230>
   1f644:	ldr	r2, [r7, #4]
   1f648:	mul	r3, r2, r3
   1f64c:	str	r3, [sp]
   1f650:	ldr	r3, [sp, #120]	; 0x78
   1f654:	mov	r2, r4
   1f658:	add	r1, sp, #24
   1f65c:	mov	r0, r5
   1f660:	bl	4ef4 <ReadCompressedDoubleData>
   1f664:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1f668:	mov	r9, r4
   1f66c:	b	1f4fc <ReadCompressedDataSlab2+0x194>
   1f670:	ldr	r9, [r6]
   1f674:	ldr	r3, [sp, #124]	; 0x7c
   1f678:	ldr	r3, [r3]
   1f67c:	ldr	r2, [r6, #4]
   1f680:	sub	r2, r2, #1
   1f684:	mul	r2, r3, r2
   1f688:	str	r2, [sp, #20]
   1f68c:	ldr	r2, [r8, #4]
   1f690:	mul	r3, r2, r3
   1f694:	ldr	r2, [sp, #120]	; 0x78
   1f698:	add	r1, sp, #24
   1f69c:	mov	r0, r5
   1f6a0:	bl	263c <InflateSkipData>
   1f6a4:	ldr	r3, [r6]
   1f6a8:	cmp	r3, #1
   1f6ac:	beq	1f7cc <ReadCompressedDataSlab2+0x464>
   1f6b0:	ldr	r3, [r7, #4]
   1f6b4:	cmp	r3, #0
   1f6b8:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1f6bc:	mov	r3, #0
   1f6c0:	add	r2, sp, #24
   1f6c4:	str	r2, [sp, #16]
   1f6c8:	mov	fp, #1
   1f6cc:	sub	r2, r9, #1
   1f6d0:	str	r2, [sp, #12]
   1f6d4:	mov	sl, r3
   1f6d8:	str	r6, [sp, #132]	; 0x84
   1f6dc:	ldr	r3, [r8]
   1f6e0:	ldr	r2, [sp, #120]	; 0x78
   1f6e4:	ldr	r9, [sp, #16]
   1f6e8:	mov	r1, r9
   1f6ec:	mov	r0, r5
   1f6f0:	bl	263c <InflateSkipData>
   1f6f4:	ldr	r3, [r7]
   1f6f8:	sub	r3, r3, #1
   1f6fc:	cmp	r3, #0
   1f700:	ble	1f8b0 <ReadCompressedDataSlab2+0x548>
   1f704:	mov	r6, #0
   1f708:	mov	r2, r4
   1f70c:	mov	r4, r9
   1f710:	add	r9, r2, #4
   1f714:	str	fp, [sp]
   1f718:	ldr	r3, [sp, #120]	; 0x78
   1f71c:	mov	r1, r4
   1f720:	mov	r0, r5
   1f724:	bl	7804 <ReadCompressedSingleData>
   1f728:	ldr	r3, [sp, #12]
   1f72c:	ldr	r2, [sp, #120]	; 0x78
   1f730:	mov	r1, r4
   1f734:	mov	r0, r5
   1f738:	bl	263c <InflateSkipData>
   1f73c:	add	r6, r6, #1
   1f740:	mov	r2, r9
   1f744:	ldr	r3, [r7]
   1f748:	sub	r3, r3, #1
   1f74c:	cmp	r3, r6
   1f750:	bgt	1f710 <ReadCompressedDataSlab2+0x3a8>
   1f754:	add	r4, r9, #4
   1f758:	str	fp, [sp]
   1f75c:	ldr	r3, [sp, #120]	; 0x78
   1f760:	mov	r2, r9
   1f764:	ldr	r6, [sp, #16]
   1f768:	mov	r1, r6
   1f76c:	mov	r0, r5
   1f770:	bl	7804 <ReadCompressedSingleData>
   1f774:	ldr	r3, [sp, #124]	; 0x7c
   1f778:	ldr	r3, [r3]
   1f77c:	sub	r3, r3, #1
   1f780:	ldr	r2, [sp, #20]
   1f784:	add	r3, r3, r2
   1f788:	ldr	r2, [r7]
   1f78c:	sub	r1, r2, #1
   1f790:	ldr	r2, [sp, #132]	; 0x84
   1f794:	ldr	r2, [r2]
   1f798:	mul	r2, r2, r1
   1f79c:	sub	r3, r3, r2
   1f7a0:	ldr	r2, [r8]
   1f7a4:	sub	r3, r3, r2
   1f7a8:	ldr	r2, [sp, #120]	; 0x78
   1f7ac:	mov	r1, r6
   1f7b0:	mov	r0, r5
   1f7b4:	bl	263c <InflateSkipData>
   1f7b8:	add	sl, sl, #1
   1f7bc:	ldr	r3, [r7, #4]
   1f7c0:	cmp	r3, sl
   1f7c4:	bgt	1f6dc <ReadCompressedDataSlab2+0x374>
   1f7c8:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1f7cc:	ldr	r3, [r7]
   1f7d0:	ldr	r2, [sp, #124]	; 0x7c
   1f7d4:	ldr	r2, [r2]
   1f7d8:	cmp	r3, r2
   1f7dc:	beq	1f880 <ReadCompressedDataSlab2+0x518>
   1f7e0:	ldr	r3, [r7, #4]
   1f7e4:	cmp	r3, #0
   1f7e8:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1f7ec:	mov	r9, #0
   1f7f0:	add	sl, sp, #24
   1f7f4:	str	r5, [sp, #12]
   1f7f8:	ldr	r5, [sp, #20]
   1f7fc:	ldr	fp, [sp, #124]	; 0x7c
   1f800:	ldr	r3, [r8]
   1f804:	ldr	r2, [sp, #120]	; 0x78
   1f808:	mov	r1, sl
   1f80c:	ldr	r0, [sp, #12]
   1f810:	bl	263c <InflateSkipData>
   1f814:	ldr	r3, [r7]
   1f818:	str	r3, [sp]
   1f81c:	ldr	r3, [sp, #120]	; 0x78
   1f820:	mov	r2, r4
   1f824:	mov	r1, sl
   1f828:	ldr	r0, [sp, #12]
   1f82c:	bl	7804 <ReadCompressedSingleData>
   1f830:	ldr	r2, [r7]
   1f834:	add	r4, r4, r2, lsl #2
   1f838:	ldr	r3, [fp]
   1f83c:	sub	r3, r3, #1
   1f840:	add	r3, r3, r5
   1f844:	sub	r2, r2, #1
   1f848:	ldr	r1, [r6]
   1f84c:	mul	r2, r1, r2
   1f850:	sub	r3, r3, r2
   1f854:	ldr	r2, [r8]
   1f858:	sub	r3, r3, r2
   1f85c:	ldr	r2, [sp, #120]	; 0x78
   1f860:	mov	r1, sl
   1f864:	ldr	r0, [sp, #12]
   1f868:	bl	263c <InflateSkipData>
   1f86c:	add	r9, r9, #1
   1f870:	ldr	r3, [r7, #4]
   1f874:	cmp	r3, r9
   1f878:	bgt	1f800 <ReadCompressedDataSlab2+0x498>
   1f87c:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1f880:	ldr	r2, [r6, #4]
   1f884:	cmp	r2, #1
   1f888:	bne	1f7e0 <ReadCompressedDataSlab2+0x478>
   1f88c:	ldr	r2, [r7, #4]
   1f890:	mul	r3, r2, r3
   1f894:	str	r3, [sp]
   1f898:	ldr	r3, [sp, #120]	; 0x78
   1f89c:	mov	r2, r4
   1f8a0:	add	r1, sp, #24
   1f8a4:	mov	r0, r5
   1f8a8:	bl	7804 <ReadCompressedSingleData>
   1f8ac:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1f8b0:	mov	r9, r4
   1f8b4:	b	1f754 <ReadCompressedDataSlab2+0x3ec>
   1f8b8:	ldr	r9, [r6]
   1f8bc:	ldr	r3, [sp, #124]	; 0x7c
   1f8c0:	ldr	r3, [r3]
   1f8c4:	ldr	r2, [r6, #4]
   1f8c8:	sub	r2, r2, #1
   1f8cc:	mul	r2, r3, r2
   1f8d0:	str	r2, [sp, #20]
   1f8d4:	ldr	r2, [r8, #4]
   1f8d8:	mul	r3, r2, r3
   1f8dc:	ldr	r2, [sp, #120]	; 0x78
   1f8e0:	add	r1, sp, #24
   1f8e4:	mov	r0, r5
   1f8e8:	bl	263c <InflateSkipData>
   1f8ec:	ldr	r3, [r6]
   1f8f0:	cmp	r3, #1
   1f8f4:	beq	1fa14 <ReadCompressedDataSlab2+0x6ac>
   1f8f8:	ldr	r3, [r7, #4]
   1f8fc:	cmp	r3, #0
   1f900:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1f904:	mov	r3, #0
   1f908:	add	r2, sp, #24
   1f90c:	str	r2, [sp, #16]
   1f910:	mov	fp, #1
   1f914:	sub	r2, r9, #1
   1f918:	str	r2, [sp, #12]
   1f91c:	mov	sl, r3
   1f920:	str	r6, [sp, #132]	; 0x84
   1f924:	ldr	r3, [r8]
   1f928:	ldr	r2, [sp, #120]	; 0x78
   1f92c:	ldr	r9, [sp, #16]
   1f930:	mov	r1, r9
   1f934:	mov	r0, r5
   1f938:	bl	263c <InflateSkipData>
   1f93c:	ldr	r3, [r7]
   1f940:	sub	r3, r3, #1
   1f944:	cmp	r3, #0
   1f948:	ble	1faf8 <ReadCompressedDataSlab2+0x790>
   1f94c:	mov	r6, #0
   1f950:	mov	r2, r4
   1f954:	mov	r4, r9
   1f958:	add	r9, r2, #8
   1f95c:	str	fp, [sp]
   1f960:	ldr	r3, [sp, #120]	; 0x78
   1f964:	mov	r1, r4
   1f968:	mov	r0, r5
   1f96c:	bl	9464 <ReadCompressedInt64Data>
   1f970:	ldr	r3, [sp, #12]
   1f974:	ldr	r2, [sp, #120]	; 0x78
   1f978:	mov	r1, r4
   1f97c:	mov	r0, r5
   1f980:	bl	263c <InflateSkipData>
   1f984:	add	r6, r6, #1
   1f988:	mov	r2, r9
   1f98c:	ldr	r3, [r7]
   1f990:	sub	r3, r3, #1
   1f994:	cmp	r3, r6
   1f998:	bgt	1f958 <ReadCompressedDataSlab2+0x5f0>
   1f99c:	add	r4, r9, #8
   1f9a0:	str	fp, [sp]
   1f9a4:	ldr	r3, [sp, #120]	; 0x78
   1f9a8:	mov	r2, r9
   1f9ac:	ldr	r6, [sp, #16]
   1f9b0:	mov	r1, r6
   1f9b4:	mov	r0, r5
   1f9b8:	bl	9464 <ReadCompressedInt64Data>
   1f9bc:	ldr	r3, [sp, #124]	; 0x7c
   1f9c0:	ldr	r3, [r3]
   1f9c4:	sub	r3, r3, #1
   1f9c8:	ldr	r2, [sp, #20]
   1f9cc:	add	r3, r3, r2
   1f9d0:	ldr	r2, [r7]
   1f9d4:	sub	r1, r2, #1
   1f9d8:	ldr	r2, [sp, #132]	; 0x84
   1f9dc:	ldr	r2, [r2]
   1f9e0:	mul	r2, r2, r1
   1f9e4:	sub	r3, r3, r2
   1f9e8:	ldr	r2, [r8]
   1f9ec:	sub	r3, r3, r2
   1f9f0:	ldr	r2, [sp, #120]	; 0x78
   1f9f4:	mov	r1, r6
   1f9f8:	mov	r0, r5
   1f9fc:	bl	263c <InflateSkipData>
   1fa00:	add	sl, sl, #1
   1fa04:	ldr	r3, [r7, #4]
   1fa08:	cmp	r3, sl
   1fa0c:	bgt	1f924 <ReadCompressedDataSlab2+0x5bc>
   1fa10:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1fa14:	ldr	r3, [r7]
   1fa18:	ldr	r2, [sp, #124]	; 0x7c
   1fa1c:	ldr	r2, [r2]
   1fa20:	cmp	r3, r2
   1fa24:	beq	1fac8 <ReadCompressedDataSlab2+0x760>
   1fa28:	ldr	r3, [r7, #4]
   1fa2c:	cmp	r3, #0
   1fa30:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1fa34:	mov	r9, #0
   1fa38:	add	sl, sp, #24
   1fa3c:	str	r5, [sp, #12]
   1fa40:	ldr	r5, [sp, #20]
   1fa44:	ldr	fp, [sp, #124]	; 0x7c
   1fa48:	ldr	r3, [r8]
   1fa4c:	ldr	r2, [sp, #120]	; 0x78
   1fa50:	mov	r1, sl
   1fa54:	ldr	r0, [sp, #12]
   1fa58:	bl	263c <InflateSkipData>
   1fa5c:	ldr	r3, [r7]
   1fa60:	str	r3, [sp]
   1fa64:	ldr	r3, [sp, #120]	; 0x78
   1fa68:	mov	r2, r4
   1fa6c:	mov	r1, sl
   1fa70:	ldr	r0, [sp, #12]
   1fa74:	bl	9464 <ReadCompressedInt64Data>
   1fa78:	ldr	r2, [r7]
   1fa7c:	add	r4, r4, r2, lsl #3
   1fa80:	ldr	r3, [fp]
   1fa84:	sub	r3, r3, #1
   1fa88:	add	r3, r3, r5
   1fa8c:	sub	r2, r2, #1
   1fa90:	ldr	r1, [r6]
   1fa94:	mul	r2, r1, r2
   1fa98:	sub	r3, r3, r2
   1fa9c:	ldr	r2, [r8]
   1faa0:	sub	r3, r3, r2
   1faa4:	ldr	r2, [sp, #120]	; 0x78
   1faa8:	mov	r1, sl
   1faac:	ldr	r0, [sp, #12]
   1fab0:	bl	263c <InflateSkipData>
   1fab4:	add	r9, r9, #1
   1fab8:	ldr	r3, [r7, #4]
   1fabc:	cmp	r3, r9
   1fac0:	bgt	1fa48 <ReadCompressedDataSlab2+0x6e0>
   1fac4:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1fac8:	ldr	r2, [r6, #4]
   1facc:	cmp	r2, #1
   1fad0:	bne	1fa28 <ReadCompressedDataSlab2+0x6c0>
   1fad4:	ldr	r2, [r7, #4]
   1fad8:	mul	r3, r2, r3
   1fadc:	str	r3, [sp]
   1fae0:	ldr	r3, [sp, #120]	; 0x78
   1fae4:	mov	r2, r4
   1fae8:	add	r1, sp, #24
   1faec:	mov	r0, r5
   1faf0:	bl	9464 <ReadCompressedInt64Data>
   1faf4:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1faf8:	mov	r9, r4
   1fafc:	b	1f99c <ReadCompressedDataSlab2+0x634>
   1fb00:	ldr	r9, [r6]
   1fb04:	ldr	r3, [sp, #124]	; 0x7c
   1fb08:	ldr	r3, [r3]
   1fb0c:	ldr	r2, [r6, #4]
   1fb10:	sub	r2, r2, #1
   1fb14:	mul	r2, r3, r2
   1fb18:	str	r2, [sp, #20]
   1fb1c:	ldr	r2, [r8, #4]
   1fb20:	mul	r3, r2, r3
   1fb24:	ldr	r2, [sp, #120]	; 0x78
   1fb28:	add	r1, sp, #24
   1fb2c:	mov	r0, r5
   1fb30:	bl	263c <InflateSkipData>
   1fb34:	ldr	r3, [r6]
   1fb38:	cmp	r3, #1
   1fb3c:	beq	1fc5c <ReadCompressedDataSlab2+0x8f4>
   1fb40:	ldr	r3, [r7, #4]
   1fb44:	cmp	r3, #0
   1fb48:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1fb4c:	mov	r3, #0
   1fb50:	add	r2, sp, #24
   1fb54:	str	r2, [sp, #16]
   1fb58:	mov	fp, #1
   1fb5c:	sub	r2, r9, #1
   1fb60:	str	r2, [sp, #12]
   1fb64:	mov	sl, r3
   1fb68:	str	r6, [sp, #132]	; 0x84
   1fb6c:	ldr	r3, [r8]
   1fb70:	ldr	r2, [sp, #120]	; 0x78
   1fb74:	ldr	r9, [sp, #16]
   1fb78:	mov	r1, r9
   1fb7c:	mov	r0, r5
   1fb80:	bl	263c <InflateSkipData>
   1fb84:	ldr	r3, [r7]
   1fb88:	sub	r3, r3, #1
   1fb8c:	cmp	r3, #0
   1fb90:	ble	1fd40 <ReadCompressedDataSlab2+0x9d8>
   1fb94:	mov	r6, #0
   1fb98:	mov	r2, r4
   1fb9c:	mov	r4, r9
   1fba0:	add	r9, r2, #8
   1fba4:	str	fp, [sp]
   1fba8:	ldr	r3, [sp, #120]	; 0x78
   1fbac:	mov	r1, r4
   1fbb0:	mov	r0, r5
   1fbb4:	bl	b0fc <ReadCompressedUInt64Data>
   1fbb8:	ldr	r3, [sp, #12]
   1fbbc:	ldr	r2, [sp, #120]	; 0x78
   1fbc0:	mov	r1, r4
   1fbc4:	mov	r0, r5
   1fbc8:	bl	263c <InflateSkipData>
   1fbcc:	add	r6, r6, #1
   1fbd0:	mov	r2, r9
   1fbd4:	ldr	r3, [r7]
   1fbd8:	sub	r3, r3, #1
   1fbdc:	cmp	r3, r6
   1fbe0:	bgt	1fba0 <ReadCompressedDataSlab2+0x838>
   1fbe4:	add	r4, r9, #8
   1fbe8:	str	fp, [sp]
   1fbec:	ldr	r3, [sp, #120]	; 0x78
   1fbf0:	mov	r2, r9
   1fbf4:	ldr	r6, [sp, #16]
   1fbf8:	mov	r1, r6
   1fbfc:	mov	r0, r5
   1fc00:	bl	b0fc <ReadCompressedUInt64Data>
   1fc04:	ldr	r3, [sp, #124]	; 0x7c
   1fc08:	ldr	r3, [r3]
   1fc0c:	sub	r3, r3, #1
   1fc10:	ldr	r2, [sp, #20]
   1fc14:	add	r3, r3, r2
   1fc18:	ldr	r2, [r7]
   1fc1c:	sub	r1, r2, #1
   1fc20:	ldr	r2, [sp, #132]	; 0x84
   1fc24:	ldr	r2, [r2]
   1fc28:	mul	r2, r2, r1
   1fc2c:	sub	r3, r3, r2
   1fc30:	ldr	r2, [r8]
   1fc34:	sub	r3, r3, r2
   1fc38:	ldr	r2, [sp, #120]	; 0x78
   1fc3c:	mov	r1, r6
   1fc40:	mov	r0, r5
   1fc44:	bl	263c <InflateSkipData>
   1fc48:	add	sl, sl, #1
   1fc4c:	ldr	r3, [r7, #4]
   1fc50:	cmp	r3, sl
   1fc54:	bgt	1fb6c <ReadCompressedDataSlab2+0x804>
   1fc58:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1fc5c:	ldr	r3, [r7]
   1fc60:	ldr	r2, [sp, #124]	; 0x7c
   1fc64:	ldr	r2, [r2]
   1fc68:	cmp	r3, r2
   1fc6c:	beq	1fd10 <ReadCompressedDataSlab2+0x9a8>
   1fc70:	ldr	r3, [r7, #4]
   1fc74:	cmp	r3, #0
   1fc78:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1fc7c:	mov	r9, #0
   1fc80:	add	sl, sp, #24
   1fc84:	str	r5, [sp, #12]
   1fc88:	ldr	r5, [sp, #20]
   1fc8c:	ldr	fp, [sp, #124]	; 0x7c
   1fc90:	ldr	r3, [r8]
   1fc94:	ldr	r2, [sp, #120]	; 0x78
   1fc98:	mov	r1, sl
   1fc9c:	ldr	r0, [sp, #12]
   1fca0:	bl	263c <InflateSkipData>
   1fca4:	ldr	r3, [r7]
   1fca8:	str	r3, [sp]
   1fcac:	ldr	r3, [sp, #120]	; 0x78
   1fcb0:	mov	r2, r4
   1fcb4:	mov	r1, sl
   1fcb8:	ldr	r0, [sp, #12]
   1fcbc:	bl	b0fc <ReadCompressedUInt64Data>
   1fcc0:	ldr	r2, [r7]
   1fcc4:	add	r4, r4, r2, lsl #3
   1fcc8:	ldr	r3, [fp]
   1fccc:	sub	r3, r3, #1
   1fcd0:	add	r3, r3, r5
   1fcd4:	sub	r2, r2, #1
   1fcd8:	ldr	r1, [r6]
   1fcdc:	mul	r2, r1, r2
   1fce0:	sub	r3, r3, r2
   1fce4:	ldr	r2, [r8]
   1fce8:	sub	r3, r3, r2
   1fcec:	ldr	r2, [sp, #120]	; 0x78
   1fcf0:	mov	r1, sl
   1fcf4:	ldr	r0, [sp, #12]
   1fcf8:	bl	263c <InflateSkipData>
   1fcfc:	add	r9, r9, #1
   1fd00:	ldr	r3, [r7, #4]
   1fd04:	cmp	r3, r9
   1fd08:	bgt	1fc90 <ReadCompressedDataSlab2+0x928>
   1fd0c:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1fd10:	ldr	r2, [r6, #4]
   1fd14:	cmp	r2, #1
   1fd18:	bne	1fc70 <ReadCompressedDataSlab2+0x908>
   1fd1c:	ldr	r2, [r7, #4]
   1fd20:	mul	r3, r2, r3
   1fd24:	str	r3, [sp]
   1fd28:	ldr	r3, [sp, #120]	; 0x78
   1fd2c:	mov	r2, r4
   1fd30:	add	r1, sp, #24
   1fd34:	mov	r0, r5
   1fd38:	bl	b0fc <ReadCompressedUInt64Data>
   1fd3c:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1fd40:	mov	r9, r4
   1fd44:	b	1fbe4 <ReadCompressedDataSlab2+0x87c>
   1fd48:	ldr	r9, [r6]
   1fd4c:	ldr	r3, [sp, #124]	; 0x7c
   1fd50:	ldr	r3, [r3]
   1fd54:	ldr	r2, [r6, #4]
   1fd58:	sub	r2, r2, #1
   1fd5c:	mul	r2, r3, r2
   1fd60:	str	r2, [sp, #20]
   1fd64:	ldr	r2, [r8, #4]
   1fd68:	mul	r3, r2, r3
   1fd6c:	ldr	r2, [sp, #120]	; 0x78
   1fd70:	add	r1, sp, #24
   1fd74:	mov	r0, r5
   1fd78:	bl	263c <InflateSkipData>
   1fd7c:	ldr	r3, [r6]
   1fd80:	cmp	r3, #1
   1fd84:	beq	1fea4 <ReadCompressedDataSlab2+0xb3c>
   1fd88:	ldr	r3, [r7, #4]
   1fd8c:	cmp	r3, #0
   1fd90:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1fd94:	mov	r3, #0
   1fd98:	add	r2, sp, #24
   1fd9c:	str	r2, [sp, #16]
   1fda0:	mov	fp, #1
   1fda4:	sub	r2, r9, #1
   1fda8:	str	r2, [sp, #12]
   1fdac:	mov	sl, r3
   1fdb0:	str	r6, [sp, #132]	; 0x84
   1fdb4:	ldr	r3, [r8]
   1fdb8:	ldr	r2, [sp, #120]	; 0x78
   1fdbc:	ldr	r9, [sp, #16]
   1fdc0:	mov	r1, r9
   1fdc4:	mov	r0, r5
   1fdc8:	bl	263c <InflateSkipData>
   1fdcc:	ldr	r3, [r7]
   1fdd0:	sub	r3, r3, #1
   1fdd4:	cmp	r3, #0
   1fdd8:	ble	1ff88 <ReadCompressedDataSlab2+0xc20>
   1fddc:	mov	r6, #0
   1fde0:	mov	r2, r4
   1fde4:	mov	r4, r9
   1fde8:	add	r9, r2, #4
   1fdec:	str	fp, [sp]
   1fdf0:	ldr	r3, [sp, #120]	; 0x78
   1fdf4:	mov	r1, r4
   1fdf8:	mov	r0, r5
   1fdfc:	bl	cc9c <ReadCompressedInt32Data>
   1fe00:	ldr	r3, [sp, #12]
   1fe04:	ldr	r2, [sp, #120]	; 0x78
   1fe08:	mov	r1, r4
   1fe0c:	mov	r0, r5
   1fe10:	bl	263c <InflateSkipData>
   1fe14:	add	r6, r6, #1
   1fe18:	mov	r2, r9
   1fe1c:	ldr	r3, [r7]
   1fe20:	sub	r3, r3, #1
   1fe24:	cmp	r3, r6
   1fe28:	bgt	1fde8 <ReadCompressedDataSlab2+0xa80>
   1fe2c:	add	r4, r9, #4
   1fe30:	str	fp, [sp]
   1fe34:	ldr	r3, [sp, #120]	; 0x78
   1fe38:	mov	r2, r9
   1fe3c:	ldr	r6, [sp, #16]
   1fe40:	mov	r1, r6
   1fe44:	mov	r0, r5
   1fe48:	bl	cc9c <ReadCompressedInt32Data>
   1fe4c:	ldr	r3, [sp, #124]	; 0x7c
   1fe50:	ldr	r3, [r3]
   1fe54:	sub	r3, r3, #1
   1fe58:	ldr	r2, [sp, #20]
   1fe5c:	add	r3, r3, r2
   1fe60:	ldr	r2, [r7]
   1fe64:	sub	r1, r2, #1
   1fe68:	ldr	r2, [sp, #132]	; 0x84
   1fe6c:	ldr	r2, [r2]
   1fe70:	mul	r2, r2, r1
   1fe74:	sub	r3, r3, r2
   1fe78:	ldr	r2, [r8]
   1fe7c:	sub	r3, r3, r2
   1fe80:	ldr	r2, [sp, #120]	; 0x78
   1fe84:	mov	r1, r6
   1fe88:	mov	r0, r5
   1fe8c:	bl	263c <InflateSkipData>
   1fe90:	add	sl, sl, #1
   1fe94:	ldr	r3, [r7, #4]
   1fe98:	cmp	r3, sl
   1fe9c:	bgt	1fdb4 <ReadCompressedDataSlab2+0xa4c>
   1fea0:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1fea4:	ldr	r3, [r7]
   1fea8:	ldr	r2, [sp, #124]	; 0x7c
   1feac:	ldr	r2, [r2]
   1feb0:	cmp	r3, r2
   1feb4:	beq	1ff58 <ReadCompressedDataSlab2+0xbf0>
   1feb8:	ldr	r3, [r7, #4]
   1febc:	cmp	r3, #0
   1fec0:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1fec4:	mov	r9, #0
   1fec8:	add	sl, sp, #24
   1fecc:	str	r5, [sp, #12]
   1fed0:	ldr	r5, [sp, #20]
   1fed4:	ldr	fp, [sp, #124]	; 0x7c
   1fed8:	ldr	r3, [r8]
   1fedc:	ldr	r2, [sp, #120]	; 0x78
   1fee0:	mov	r1, sl
   1fee4:	ldr	r0, [sp, #12]
   1fee8:	bl	263c <InflateSkipData>
   1feec:	ldr	r3, [r7]
   1fef0:	str	r3, [sp]
   1fef4:	ldr	r3, [sp, #120]	; 0x78
   1fef8:	mov	r2, r4
   1fefc:	mov	r1, sl
   1ff00:	ldr	r0, [sp, #12]
   1ff04:	bl	cc9c <ReadCompressedInt32Data>
   1ff08:	ldr	r2, [r7]
   1ff0c:	add	r4, r4, r2, lsl #2
   1ff10:	ldr	r3, [fp]
   1ff14:	sub	r3, r3, #1
   1ff18:	add	r3, r3, r5
   1ff1c:	sub	r2, r2, #1
   1ff20:	ldr	r1, [r6]
   1ff24:	mul	r2, r1, r2
   1ff28:	sub	r3, r3, r2
   1ff2c:	ldr	r2, [r8]
   1ff30:	sub	r3, r3, r2
   1ff34:	ldr	r2, [sp, #120]	; 0x78
   1ff38:	mov	r1, sl
   1ff3c:	ldr	r0, [sp, #12]
   1ff40:	bl	263c <InflateSkipData>
   1ff44:	add	r9, r9, #1
   1ff48:	ldr	r3, [r7, #4]
   1ff4c:	cmp	r3, r9
   1ff50:	bgt	1fed8 <ReadCompressedDataSlab2+0xb70>
   1ff54:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1ff58:	ldr	r2, [r6, #4]
   1ff5c:	cmp	r2, #1
   1ff60:	bne	1feb8 <ReadCompressedDataSlab2+0xb50>
   1ff64:	ldr	r2, [r7, #4]
   1ff68:	mul	r3, r2, r3
   1ff6c:	str	r3, [sp]
   1ff70:	ldr	r3, [sp, #120]	; 0x78
   1ff74:	mov	r2, r4
   1ff78:	add	r1, sp, #24
   1ff7c:	mov	r0, r5
   1ff80:	bl	cc9c <ReadCompressedInt32Data>
   1ff84:	b	1f570 <ReadCompressedDataSlab2+0x208>
   1ff88:	mov	r9, r4
   1ff8c:	b	1fe2c <ReadCompressedDataSlab2+0xac4>
   1ff90:	ldr	r9, [r6]
   1ff94:	ldr	r3, [sp, #124]	; 0x7c
   1ff98:	ldr	r3, [r3]
   1ff9c:	ldr	r2, [r6, #4]
   1ffa0:	sub	r2, r2, #1
   1ffa4:	mul	r2, r3, r2
   1ffa8:	str	r2, [sp, #20]
   1ffac:	ldr	r2, [r8, #4]
   1ffb0:	mul	r3, r2, r3
   1ffb4:	ldr	r2, [sp, #120]	; 0x78
   1ffb8:	add	r1, sp, #24
   1ffbc:	mov	r0, r5
   1ffc0:	bl	263c <InflateSkipData>
   1ffc4:	ldr	r3, [r6]
   1ffc8:	cmp	r3, #1
   1ffcc:	beq	200ec <ReadCompressedDataSlab2+0xd84>
   1ffd0:	ldr	r3, [r7, #4]
   1ffd4:	cmp	r3, #0
   1ffd8:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   1ffdc:	mov	r3, #0
   1ffe0:	add	r2, sp, #24
   1ffe4:	str	r2, [sp, #16]
   1ffe8:	mov	fp, #1
   1ffec:	sub	r2, r9, #1
   1fff0:	str	r2, [sp, #12]
   1fff4:	mov	sl, r3
   1fff8:	str	r6, [sp, #132]	; 0x84
   1fffc:	ldr	r3, [r8]
   20000:	ldr	r2, [sp, #120]	; 0x78
   20004:	ldr	r9, [sp, #16]
   20008:	mov	r1, r9
   2000c:	mov	r0, r5
   20010:	bl	263c <InflateSkipData>
   20014:	ldr	r3, [r7]
   20018:	sub	r3, r3, #1
   2001c:	cmp	r3, #0
   20020:	ble	201d0 <ReadCompressedDataSlab2+0xe68>
   20024:	mov	r6, #0
   20028:	mov	r2, r4
   2002c:	mov	r4, r9
   20030:	add	r9, r2, #4
   20034:	str	fp, [sp]
   20038:	ldr	r3, [sp, #120]	; 0x78
   2003c:	mov	r1, r4
   20040:	mov	r0, r5
   20044:	bl	e80c <ReadCompressedUInt32Data>
   20048:	ldr	r3, [sp, #12]
   2004c:	ldr	r2, [sp, #120]	; 0x78
   20050:	mov	r1, r4
   20054:	mov	r0, r5
   20058:	bl	263c <InflateSkipData>
   2005c:	add	r6, r6, #1
   20060:	mov	r2, r9
   20064:	ldr	r3, [r7]
   20068:	sub	r3, r3, #1
   2006c:	cmp	r3, r6
   20070:	bgt	20030 <ReadCompressedDataSlab2+0xcc8>
   20074:	add	r4, r9, #4
   20078:	str	fp, [sp]
   2007c:	ldr	r3, [sp, #120]	; 0x78
   20080:	mov	r2, r9
   20084:	ldr	r6, [sp, #16]
   20088:	mov	r1, r6
   2008c:	mov	r0, r5
   20090:	bl	e80c <ReadCompressedUInt32Data>
   20094:	ldr	r3, [sp, #124]	; 0x7c
   20098:	ldr	r3, [r3]
   2009c:	sub	r3, r3, #1
   200a0:	ldr	r2, [sp, #20]
   200a4:	add	r3, r3, r2
   200a8:	ldr	r2, [r7]
   200ac:	sub	r1, r2, #1
   200b0:	ldr	r2, [sp, #132]	; 0x84
   200b4:	ldr	r2, [r2]
   200b8:	mul	r2, r2, r1
   200bc:	sub	r3, r3, r2
   200c0:	ldr	r2, [r8]
   200c4:	sub	r3, r3, r2
   200c8:	ldr	r2, [sp, #120]	; 0x78
   200cc:	mov	r1, r6
   200d0:	mov	r0, r5
   200d4:	bl	263c <InflateSkipData>
   200d8:	add	sl, sl, #1
   200dc:	ldr	r3, [r7, #4]
   200e0:	cmp	r3, sl
   200e4:	bgt	1fffc <ReadCompressedDataSlab2+0xc94>
   200e8:	b	1f570 <ReadCompressedDataSlab2+0x208>
   200ec:	ldr	r3, [r7]
   200f0:	ldr	r2, [sp, #124]	; 0x7c
   200f4:	ldr	r2, [r2]
   200f8:	cmp	r3, r2
   200fc:	beq	201a0 <ReadCompressedDataSlab2+0xe38>
   20100:	ldr	r3, [r7, #4]
   20104:	cmp	r3, #0
   20108:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   2010c:	mov	r9, #0
   20110:	add	sl, sp, #24
   20114:	str	r5, [sp, #12]
   20118:	ldr	r5, [sp, #20]
   2011c:	ldr	fp, [sp, #124]	; 0x7c
   20120:	ldr	r3, [r8]
   20124:	ldr	r2, [sp, #120]	; 0x78
   20128:	mov	r1, sl
   2012c:	ldr	r0, [sp, #12]
   20130:	bl	263c <InflateSkipData>
   20134:	ldr	r3, [r7]
   20138:	str	r3, [sp]
   2013c:	ldr	r3, [sp, #120]	; 0x78
   20140:	mov	r2, r4
   20144:	mov	r1, sl
   20148:	ldr	r0, [sp, #12]
   2014c:	bl	e80c <ReadCompressedUInt32Data>
   20150:	ldr	r2, [r7]
   20154:	add	r4, r4, r2, lsl #2
   20158:	ldr	r3, [fp]
   2015c:	sub	r3, r3, #1
   20160:	add	r3, r3, r5
   20164:	sub	r2, r2, #1
   20168:	ldr	r1, [r6]
   2016c:	mul	r2, r1, r2
   20170:	sub	r3, r3, r2
   20174:	ldr	r2, [r8]
   20178:	sub	r3, r3, r2
   2017c:	ldr	r2, [sp, #120]	; 0x78
   20180:	mov	r1, sl
   20184:	ldr	r0, [sp, #12]
   20188:	bl	263c <InflateSkipData>
   2018c:	add	r9, r9, #1
   20190:	ldr	r3, [r7, #4]
   20194:	cmp	r3, r9
   20198:	bgt	20120 <ReadCompressedDataSlab2+0xdb8>
   2019c:	b	1f570 <ReadCompressedDataSlab2+0x208>
   201a0:	ldr	r2, [r6, #4]
   201a4:	cmp	r2, #1
   201a8:	bne	20100 <ReadCompressedDataSlab2+0xd98>
   201ac:	ldr	r2, [r7, #4]
   201b0:	mul	r3, r2, r3
   201b4:	str	r3, [sp]
   201b8:	ldr	r3, [sp, #120]	; 0x78
   201bc:	mov	r2, r4
   201c0:	add	r1, sp, #24
   201c4:	mov	r0, r5
   201c8:	bl	e80c <ReadCompressedUInt32Data>
   201cc:	b	1f570 <ReadCompressedDataSlab2+0x208>
   201d0:	mov	r9, r4
   201d4:	b	20074 <ReadCompressedDataSlab2+0xd0c>
   201d8:	ldr	r9, [r6]
   201dc:	ldr	r3, [sp, #124]	; 0x7c
   201e0:	ldr	r3, [r3]
   201e4:	ldr	r2, [r6, #4]
   201e8:	sub	r2, r2, #1
   201ec:	mul	r2, r3, r2
   201f0:	str	r2, [sp, #20]
   201f4:	ldr	r2, [r8, #4]
   201f8:	mul	r3, r2, r3
   201fc:	ldr	r2, [sp, #120]	; 0x78
   20200:	add	r1, sp, #24
   20204:	mov	r0, r5
   20208:	bl	263c <InflateSkipData>
   2020c:	ldr	r3, [r6]
   20210:	cmp	r3, #1
   20214:	beq	20334 <ReadCompressedDataSlab2+0xfcc>
   20218:	ldr	r3, [r7, #4]
   2021c:	cmp	r3, #0
   20220:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   20224:	mov	r3, #0
   20228:	add	r2, sp, #24
   2022c:	str	r2, [sp, #16]
   20230:	mov	fp, #1
   20234:	sub	r2, r9, #1
   20238:	str	r2, [sp, #12]
   2023c:	mov	sl, r3
   20240:	str	r6, [sp, #132]	; 0x84
   20244:	ldr	r3, [r8]
   20248:	ldr	r2, [sp, #120]	; 0x78
   2024c:	ldr	r9, [sp, #16]
   20250:	mov	r1, r9
   20254:	mov	r0, r5
   20258:	bl	263c <InflateSkipData>
   2025c:	ldr	r3, [r7]
   20260:	sub	r3, r3, #1
   20264:	cmp	r3, #0
   20268:	ble	20418 <ReadCompressedDataSlab2+0x10b0>
   2026c:	mov	r6, #0
   20270:	mov	r2, r4
   20274:	mov	r4, r9
   20278:	add	r9, r2, #2
   2027c:	str	fp, [sp]
   20280:	ldr	r3, [sp, #120]	; 0x78
   20284:	mov	r1, r4
   20288:	mov	r0, r5
   2028c:	bl	1038c <ReadCompressedInt16Data>
   20290:	ldr	r3, [sp, #12]
   20294:	ldr	r2, [sp, #120]	; 0x78
   20298:	mov	r1, r4
   2029c:	mov	r0, r5
   202a0:	bl	263c <InflateSkipData>
   202a4:	add	r6, r6, #1
   202a8:	mov	r2, r9
   202ac:	ldr	r3, [r7]
   202b0:	sub	r3, r3, #1
   202b4:	cmp	r3, r6
   202b8:	bgt	20278 <ReadCompressedDataSlab2+0xf10>
   202bc:	add	r4, r9, #2
   202c0:	str	fp, [sp]
   202c4:	ldr	r3, [sp, #120]	; 0x78
   202c8:	mov	r2, r9
   202cc:	ldr	r6, [sp, #16]
   202d0:	mov	r1, r6
   202d4:	mov	r0, r5
   202d8:	bl	1038c <ReadCompressedInt16Data>
   202dc:	ldr	r3, [sp, #124]	; 0x7c
   202e0:	ldr	r3, [r3]
   202e4:	sub	r3, r3, #1
   202e8:	ldr	r2, [sp, #20]
   202ec:	add	r3, r3, r2
   202f0:	ldr	r2, [r7]
   202f4:	sub	r1, r2, #1
   202f8:	ldr	r2, [sp, #132]	; 0x84
   202fc:	ldr	r2, [r2]
   20300:	mul	r2, r2, r1
   20304:	sub	r3, r3, r2
   20308:	ldr	r2, [r8]
   2030c:	sub	r3, r3, r2
   20310:	ldr	r2, [sp, #120]	; 0x78
   20314:	mov	r1, r6
   20318:	mov	r0, r5
   2031c:	bl	263c <InflateSkipData>
   20320:	add	sl, sl, #1
   20324:	ldr	r3, [r7, #4]
   20328:	cmp	r3, sl
   2032c:	bgt	20244 <ReadCompressedDataSlab2+0xedc>
   20330:	b	1f570 <ReadCompressedDataSlab2+0x208>
   20334:	ldr	r3, [r7]
   20338:	ldr	r2, [sp, #124]	; 0x7c
   2033c:	ldr	r2, [r2]
   20340:	cmp	r3, r2
   20344:	beq	203e8 <ReadCompressedDataSlab2+0x1080>
   20348:	ldr	r3, [r7, #4]
   2034c:	cmp	r3, #0
   20350:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   20354:	mov	r9, #0
   20358:	add	sl, sp, #24
   2035c:	str	r5, [sp, #12]
   20360:	ldr	r5, [sp, #20]
   20364:	ldr	fp, [sp, #124]	; 0x7c
   20368:	ldr	r3, [r8]
   2036c:	ldr	r2, [sp, #120]	; 0x78
   20370:	mov	r1, sl
   20374:	ldr	r0, [sp, #12]
   20378:	bl	263c <InflateSkipData>
   2037c:	ldr	r3, [r7]
   20380:	str	r3, [sp]
   20384:	ldr	r3, [sp, #120]	; 0x78
   20388:	mov	r2, r4
   2038c:	mov	r1, sl
   20390:	ldr	r0, [sp, #12]
   20394:	bl	1038c <ReadCompressedInt16Data>
   20398:	ldr	r2, [r7]
   2039c:	add	r4, r4, r2, lsl #1
   203a0:	ldr	r3, [fp]
   203a4:	sub	r3, r3, #1
   203a8:	add	r3, r3, r5
   203ac:	sub	r2, r2, #1
   203b0:	ldr	r1, [r6]
   203b4:	mul	r2, r1, r2
   203b8:	sub	r3, r3, r2
   203bc:	ldr	r2, [r8]
   203c0:	sub	r3, r3, r2
   203c4:	ldr	r2, [sp, #120]	; 0x78
   203c8:	mov	r1, sl
   203cc:	ldr	r0, [sp, #12]
   203d0:	bl	263c <InflateSkipData>
   203d4:	add	r9, r9, #1
   203d8:	ldr	r3, [r7, #4]
   203dc:	cmp	r3, r9
   203e0:	bgt	20368 <ReadCompressedDataSlab2+0x1000>
   203e4:	b	1f570 <ReadCompressedDataSlab2+0x208>
   203e8:	ldr	r2, [r6, #4]
   203ec:	cmp	r2, #1
   203f0:	bne	20348 <ReadCompressedDataSlab2+0xfe0>
   203f4:	ldr	r2, [r7, #4]
   203f8:	mul	r3, r2, r3
   203fc:	str	r3, [sp]
   20400:	ldr	r3, [sp, #120]	; 0x78
   20404:	mov	r2, r4
   20408:	add	r1, sp, #24
   2040c:	mov	r0, r5
   20410:	bl	1038c <ReadCompressedInt16Data>
   20414:	b	1f570 <ReadCompressedDataSlab2+0x208>
   20418:	mov	r9, r4
   2041c:	b	202bc <ReadCompressedDataSlab2+0xf54>
   20420:	ldr	r9, [r6]
   20424:	ldr	r3, [sp, #124]	; 0x7c
   20428:	ldr	r3, [r3]
   2042c:	ldr	r2, [r6, #4]
   20430:	sub	r2, r2, #1
   20434:	mul	r2, r3, r2
   20438:	str	r2, [sp, #20]
   2043c:	ldr	r2, [r8, #4]
   20440:	mul	r3, r2, r3
   20444:	ldr	r2, [sp, #120]	; 0x78
   20448:	add	r1, sp, #24
   2044c:	mov	r0, r5
   20450:	bl	263c <InflateSkipData>
   20454:	ldr	r3, [r6]
   20458:	cmp	r3, #1
   2045c:	beq	2057c <ReadCompressedDataSlab2+0x1214>
   20460:	ldr	r3, [r7, #4]
   20464:	cmp	r3, #0
   20468:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   2046c:	mov	r3, #0
   20470:	add	r2, sp, #24
   20474:	str	r2, [sp, #16]
   20478:	mov	fp, #1
   2047c:	sub	r2, r9, #1
   20480:	str	r2, [sp, #12]
   20484:	mov	sl, r3
   20488:	str	r6, [sp, #132]	; 0x84
   2048c:	ldr	r3, [r8]
   20490:	ldr	r2, [sp, #120]	; 0x78
   20494:	ldr	r9, [sp, #16]
   20498:	mov	r1, r9
   2049c:	mov	r0, r5
   204a0:	bl	263c <InflateSkipData>
   204a4:	ldr	r3, [r7]
   204a8:	sub	r3, r3, #1
   204ac:	cmp	r3, #0
   204b0:	ble	20660 <ReadCompressedDataSlab2+0x12f8>
   204b4:	mov	r6, #0
   204b8:	mov	r2, r4
   204bc:	mov	r4, r9
   204c0:	add	r9, r2, #2
   204c4:	str	fp, [sp]
   204c8:	ldr	r3, [sp, #120]	; 0x78
   204cc:	mov	r1, r4
   204d0:	mov	r0, r5
   204d4:	bl	11ee4 <ReadCompressedUInt16Data>
   204d8:	ldr	r3, [sp, #12]
   204dc:	ldr	r2, [sp, #120]	; 0x78
   204e0:	mov	r1, r4
   204e4:	mov	r0, r5
   204e8:	bl	263c <InflateSkipData>
   204ec:	add	r6, r6, #1
   204f0:	mov	r2, r9
   204f4:	ldr	r3, [r7]
   204f8:	sub	r3, r3, #1
   204fc:	cmp	r3, r6
   20500:	bgt	204c0 <ReadCompressedDataSlab2+0x1158>
   20504:	add	r4, r9, #2
   20508:	str	fp, [sp]
   2050c:	ldr	r3, [sp, #120]	; 0x78
   20510:	mov	r2, r9
   20514:	ldr	r6, [sp, #16]
   20518:	mov	r1, r6
   2051c:	mov	r0, r5
   20520:	bl	11ee4 <ReadCompressedUInt16Data>
   20524:	ldr	r3, [sp, #124]	; 0x7c
   20528:	ldr	r3, [r3]
   2052c:	sub	r3, r3, #1
   20530:	ldr	r2, [sp, #20]
   20534:	add	r3, r3, r2
   20538:	ldr	r2, [r7]
   2053c:	sub	r1, r2, #1
   20540:	ldr	r2, [sp, #132]	; 0x84
   20544:	ldr	r2, [r2]
   20548:	mul	r2, r2, r1
   2054c:	sub	r3, r3, r2
   20550:	ldr	r2, [r8]
   20554:	sub	r3, r3, r2
   20558:	ldr	r2, [sp, #120]	; 0x78
   2055c:	mov	r1, r6
   20560:	mov	r0, r5
   20564:	bl	263c <InflateSkipData>
   20568:	add	sl, sl, #1
   2056c:	ldr	r3, [r7, #4]
   20570:	cmp	r3, sl
   20574:	bgt	2048c <ReadCompressedDataSlab2+0x1124>
   20578:	b	1f570 <ReadCompressedDataSlab2+0x208>
   2057c:	ldr	r3, [r7]
   20580:	ldr	r2, [sp, #124]	; 0x7c
   20584:	ldr	r2, [r2]
   20588:	cmp	r3, r2
   2058c:	beq	20630 <ReadCompressedDataSlab2+0x12c8>
   20590:	ldr	r3, [r7, #4]
   20594:	cmp	r3, #0
   20598:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   2059c:	mov	r9, #0
   205a0:	add	sl, sp, #24
   205a4:	str	r5, [sp, #12]
   205a8:	ldr	r5, [sp, #20]
   205ac:	ldr	fp, [sp, #124]	; 0x7c
   205b0:	ldr	r3, [r8]
   205b4:	ldr	r2, [sp, #120]	; 0x78
   205b8:	mov	r1, sl
   205bc:	ldr	r0, [sp, #12]
   205c0:	bl	263c <InflateSkipData>
   205c4:	ldr	r3, [r7]
   205c8:	str	r3, [sp]
   205cc:	ldr	r3, [sp, #120]	; 0x78
   205d0:	mov	r2, r4
   205d4:	mov	r1, sl
   205d8:	ldr	r0, [sp, #12]
   205dc:	bl	11ee4 <ReadCompressedUInt16Data>
   205e0:	ldr	r2, [r7]
   205e4:	add	r4, r4, r2, lsl #1
   205e8:	ldr	r3, [fp]
   205ec:	sub	r3, r3, #1
   205f0:	add	r3, r3, r5
   205f4:	sub	r2, r2, #1
   205f8:	ldr	r1, [r6]
   205fc:	mul	r2, r1, r2
   20600:	sub	r3, r3, r2
   20604:	ldr	r2, [r8]
   20608:	sub	r3, r3, r2
   2060c:	ldr	r2, [sp, #120]	; 0x78
   20610:	mov	r1, sl
   20614:	ldr	r0, [sp, #12]
   20618:	bl	263c <InflateSkipData>
   2061c:	add	r9, r9, #1
   20620:	ldr	r3, [r7, #4]
   20624:	cmp	r3, r9
   20628:	bgt	205b0 <ReadCompressedDataSlab2+0x1248>
   2062c:	b	1f570 <ReadCompressedDataSlab2+0x208>
   20630:	ldr	r2, [r6, #4]
   20634:	cmp	r2, #1
   20638:	bne	20590 <ReadCompressedDataSlab2+0x1228>
   2063c:	ldr	r2, [r7, #4]
   20640:	mul	r3, r2, r3
   20644:	str	r3, [sp]
   20648:	ldr	r3, [sp, #120]	; 0x78
   2064c:	mov	r2, r4
   20650:	add	r1, sp, #24
   20654:	mov	r0, r5
   20658:	bl	11ee4 <ReadCompressedUInt16Data>
   2065c:	b	1f570 <ReadCompressedDataSlab2+0x208>
   20660:	mov	r9, r4
   20664:	b	20504 <ReadCompressedDataSlab2+0x119c>
   20668:	ldr	r9, [r6]
   2066c:	ldr	r3, [sp, #124]	; 0x7c
   20670:	ldr	r3, [r3]
   20674:	ldr	r2, [r6, #4]
   20678:	sub	r2, r2, #1
   2067c:	mul	r2, r3, r2
   20680:	str	r2, [sp, #20]
   20684:	ldr	r2, [r8, #4]
   20688:	mul	r3, r2, r3
   2068c:	ldr	r2, [sp, #120]	; 0x78
   20690:	add	r1, sp, #24
   20694:	mov	r0, r5
   20698:	bl	263c <InflateSkipData>
   2069c:	ldr	r3, [r6]
   206a0:	cmp	r3, #1
   206a4:	beq	207b8 <ReadCompressedDataSlab2+0x1450>
   206a8:	ldr	r3, [r7, #4]
   206ac:	cmp	r3, #0
   206b0:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   206b4:	mov	fp, #0
   206b8:	add	r3, sp, #24
   206bc:	str	r3, [sp, #12]
   206c0:	mov	sl, #1
   206c4:	sub	r3, r9, #1
   206c8:	str	r3, [sp, #16]
   206cc:	str	r6, [sp, #132]	; 0x84
   206d0:	ldr	r6, [sp, #120]	; 0x78
   206d4:	ldr	r3, [r8]
   206d8:	mov	r2, r6
   206dc:	ldr	r1, [sp, #12]
   206e0:	mov	r0, r5
   206e4:	bl	263c <InflateSkipData>
   206e8:	ldr	r3, [r7]
   206ec:	sub	r3, r3, #1
   206f0:	cmp	r3, #0
   206f4:	ble	2089c <ReadCompressedDataSlab2+0x1534>
   206f8:	mov	r2, r4
   206fc:	add	r9, r2, #1
   20700:	str	sl, [sp]
   20704:	mov	r3, r6
   20708:	ldr	r1, [sp, #12]
   2070c:	mov	r0, r5
   20710:	bl	13900 <ReadCompressedInt8Data>
   20714:	ldr	r3, [sp, #16]
   20718:	mov	r2, r6
   2071c:	ldr	r1, [sp, #12]
   20720:	mov	r0, r5
   20724:	bl	263c <InflateSkipData>
   20728:	mov	r2, r9
   2072c:	sub	r1, r9, r4
   20730:	ldr	r3, [r7]
   20734:	sub	r3, r3, #1
   20738:	cmp	r1, r3
   2073c:	blt	206fc <ReadCompressedDataSlab2+0x1394>
   20740:	add	r4, r9, #1
   20744:	str	sl, [sp]
   20748:	mov	r3, r6
   2074c:	mov	r2, r9
   20750:	ldr	r9, [sp, #12]
   20754:	mov	r1, r9
   20758:	mov	r0, r5
   2075c:	bl	13900 <ReadCompressedInt8Data>
   20760:	ldr	r3, [sp, #124]	; 0x7c
   20764:	ldr	r3, [r3]
   20768:	sub	r3, r3, #1
   2076c:	ldr	r2, [sp, #20]
   20770:	add	r3, r3, r2
   20774:	ldr	r2, [r7]
   20778:	sub	r1, r2, #1
   2077c:	ldr	r2, [sp, #132]	; 0x84
   20780:	ldr	r2, [r2]
   20784:	mul	r2, r2, r1
   20788:	sub	r3, r3, r2
   2078c:	ldr	r2, [r8]
   20790:	sub	r3, r3, r2
   20794:	mov	r2, r6
   20798:	mov	r1, r9
   2079c:	mov	r0, r5
   207a0:	bl	263c <InflateSkipData>
   207a4:	add	fp, fp, #1
   207a8:	ldr	r3, [r7, #4]
   207ac:	cmp	r3, fp
   207b0:	bgt	206d4 <ReadCompressedDataSlab2+0x136c>
   207b4:	b	1f570 <ReadCompressedDataSlab2+0x208>
   207b8:	ldr	r3, [r7]
   207bc:	ldr	r2, [sp, #124]	; 0x7c
   207c0:	ldr	r2, [r2]
   207c4:	cmp	r3, r2
   207c8:	beq	2086c <ReadCompressedDataSlab2+0x1504>
   207cc:	ldr	r3, [r7, #4]
   207d0:	cmp	r3, #0
   207d4:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   207d8:	mov	r9, #0
   207dc:	add	sl, sp, #24
   207e0:	str	r5, [sp, #12]
   207e4:	ldr	r5, [sp, #20]
   207e8:	ldr	fp, [sp, #124]	; 0x7c
   207ec:	ldr	r3, [r8]
   207f0:	ldr	r2, [sp, #120]	; 0x78
   207f4:	mov	r1, sl
   207f8:	ldr	r0, [sp, #12]
   207fc:	bl	263c <InflateSkipData>
   20800:	ldr	r3, [r7]
   20804:	str	r3, [sp]
   20808:	ldr	r3, [sp, #120]	; 0x78
   2080c:	mov	r2, r4
   20810:	mov	r1, sl
   20814:	ldr	r0, [sp, #12]
   20818:	bl	13900 <ReadCompressedInt8Data>
   2081c:	ldr	r2, [r7]
   20820:	add	r4, r4, r2
   20824:	ldr	r3, [fp]
   20828:	sub	r3, r3, #1
   2082c:	add	r3, r3, r5
   20830:	sub	r2, r2, #1
   20834:	ldr	r1, [r6]
   20838:	mul	r2, r1, r2
   2083c:	sub	r3, r3, r2
   20840:	ldr	r2, [r8]
   20844:	sub	r3, r3, r2
   20848:	ldr	r2, [sp, #120]	; 0x78
   2084c:	mov	r1, sl
   20850:	ldr	r0, [sp, #12]
   20854:	bl	263c <InflateSkipData>
   20858:	add	r9, r9, #1
   2085c:	ldr	r3, [r7, #4]
   20860:	cmp	r3, r9
   20864:	bgt	207ec <ReadCompressedDataSlab2+0x1484>
   20868:	b	1f570 <ReadCompressedDataSlab2+0x208>
   2086c:	ldr	r2, [r6, #4]
   20870:	cmp	r2, #1
   20874:	bne	207cc <ReadCompressedDataSlab2+0x1464>
   20878:	ldr	r2, [r7, #4]
   2087c:	mul	r3, r2, r3
   20880:	str	r3, [sp]
   20884:	ldr	r3, [sp, #120]	; 0x78
   20888:	mov	r2, r4
   2088c:	add	r1, sp, #24
   20890:	mov	r0, r5
   20894:	bl	13900 <ReadCompressedInt8Data>
   20898:	b	1f570 <ReadCompressedDataSlab2+0x208>
   2089c:	mov	r9, r4
   208a0:	b	20740 <ReadCompressedDataSlab2+0x13d8>
   208a4:	ldr	r9, [r6]
   208a8:	ldr	r3, [sp, #124]	; 0x7c
   208ac:	ldr	r3, [r3]
   208b0:	ldr	r2, [r6, #4]
   208b4:	sub	r2, r2, #1
   208b8:	mul	r2, r3, r2
   208bc:	str	r2, [sp, #20]
   208c0:	ldr	r2, [r8, #4]
   208c4:	mul	r3, r2, r3
   208c8:	ldr	r2, [sp, #120]	; 0x78
   208cc:	add	r1, sp, #24
   208d0:	mov	r0, r5
   208d4:	bl	263c <InflateSkipData>
   208d8:	ldr	r3, [r6]
   208dc:	cmp	r3, #1
   208e0:	beq	209f4 <ReadCompressedDataSlab2+0x168c>
   208e4:	ldr	r3, [r7, #4]
   208e8:	cmp	r3, #0
   208ec:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   208f0:	mov	fp, #0
   208f4:	add	r3, sp, #24
   208f8:	str	r3, [sp, #12]
   208fc:	mov	sl, #1
   20900:	sub	r3, r9, #1
   20904:	str	r3, [sp, #16]
   20908:	str	r6, [sp, #132]	; 0x84
   2090c:	ldr	r6, [sp, #120]	; 0x78
   20910:	ldr	r3, [r8]
   20914:	mov	r2, r6
   20918:	ldr	r1, [sp, #12]
   2091c:	mov	r0, r5
   20920:	bl	263c <InflateSkipData>
   20924:	ldr	r3, [r7]
   20928:	sub	r3, r3, #1
   2092c:	cmp	r3, #0
   20930:	ble	20ad8 <ReadCompressedDataSlab2+0x1770>
   20934:	mov	r2, r4
   20938:	add	r9, r2, #1
   2093c:	str	sl, [sp]
   20940:	mov	r3, r6
   20944:	ldr	r1, [sp, #12]
   20948:	mov	r0, r5
   2094c:	bl	1531c <ReadCompressedUInt8Data>
   20950:	ldr	r3, [sp, #16]
   20954:	mov	r2, r6
   20958:	ldr	r1, [sp, #12]
   2095c:	mov	r0, r5
   20960:	bl	263c <InflateSkipData>
   20964:	mov	r2, r9
   20968:	ldr	r3, [r7]
   2096c:	sub	r3, r3, #1
   20970:	sub	r1, r9, r4
   20974:	cmp	r3, r1
   20978:	bgt	20938 <ReadCompressedDataSlab2+0x15d0>
   2097c:	add	r4, r9, #1
   20980:	str	sl, [sp]
   20984:	mov	r3, r6
   20988:	mov	r2, r9
   2098c:	ldr	r9, [sp, #12]
   20990:	mov	r1, r9
   20994:	mov	r0, r5
   20998:	bl	1531c <ReadCompressedUInt8Data>
   2099c:	ldr	r3, [sp, #124]	; 0x7c
   209a0:	ldr	r3, [r3]
   209a4:	sub	r3, r3, #1
   209a8:	ldr	r2, [sp, #20]
   209ac:	add	r3, r3, r2
   209b0:	ldr	r2, [r7]
   209b4:	sub	r1, r2, #1
   209b8:	ldr	r2, [sp, #132]	; 0x84
   209bc:	ldr	r2, [r2]
   209c0:	mul	r2, r2, r1
   209c4:	sub	r3, r3, r2
   209c8:	ldr	r2, [r8]
   209cc:	sub	r3, r3, r2
   209d0:	mov	r2, r6
   209d4:	mov	r1, r9
   209d8:	mov	r0, r5
   209dc:	bl	263c <InflateSkipData>
   209e0:	add	fp, fp, #1
   209e4:	ldr	r3, [r7, #4]
   209e8:	cmp	r3, fp
   209ec:	bgt	20910 <ReadCompressedDataSlab2+0x15a8>
   209f0:	b	1f570 <ReadCompressedDataSlab2+0x208>
   209f4:	ldr	r3, [r7]
   209f8:	ldr	r2, [sp, #124]	; 0x7c
   209fc:	ldr	r2, [r2]
   20a00:	cmp	r3, r2
   20a04:	beq	20aa8 <ReadCompressedDataSlab2+0x1740>
   20a08:	ldr	r3, [r7, #4]
   20a0c:	cmp	r3, #0
   20a10:	ble	1f570 <ReadCompressedDataSlab2+0x208>
   20a14:	mov	r9, #0
   20a18:	add	sl, sp, #24
   20a1c:	str	r5, [sp, #12]
   20a20:	ldr	r5, [sp, #20]
   20a24:	ldr	fp, [sp, #124]	; 0x7c
   20a28:	ldr	r3, [r8]
   20a2c:	ldr	r2, [sp, #120]	; 0x78
   20a30:	mov	r1, sl
   20a34:	ldr	r0, [sp, #12]
   20a38:	bl	263c <InflateSkipData>
   20a3c:	ldr	r3, [r7]
   20a40:	str	r3, [sp]
   20a44:	ldr	r3, [sp, #120]	; 0x78
   20a48:	mov	r2, r4
   20a4c:	mov	r1, sl
   20a50:	ldr	r0, [sp, #12]
   20a54:	bl	1531c <ReadCompressedUInt8Data>
   20a58:	ldr	r2, [r7]
   20a5c:	add	r4, r4, r2
   20a60:	ldr	r3, [fp]
   20a64:	sub	r3, r3, #1
   20a68:	add	r3, r3, r5
   20a6c:	sub	r2, r2, #1
   20a70:	ldr	r1, [r6]
   20a74:	mul	r2, r1, r2
   20a78:	sub	r3, r3, r2
   20a7c:	ldr	r2, [r8]
   20a80:	sub	r3, r3, r2
   20a84:	ldr	r2, [sp, #120]	; 0x78
   20a88:	mov	r1, sl
   20a8c:	ldr	r0, [sp, #12]
   20a90:	bl	263c <InflateSkipData>
   20a94:	add	r9, r9, #1
   20a98:	ldr	r3, [r7, #4]
   20a9c:	cmp	r3, r9
   20aa0:	bgt	20a28 <ReadCompressedDataSlab2+0x16c0>
   20aa4:	b	1f570 <ReadCompressedDataSlab2+0x208>
   20aa8:	ldr	r2, [r6, #4]
   20aac:	cmp	r2, #1
   20ab0:	bne	20a08 <ReadCompressedDataSlab2+0x16a0>
   20ab4:	ldr	r2, [r7, #4]
   20ab8:	mul	r3, r2, r3
   20abc:	str	r3, [sp]
   20ac0:	ldr	r3, [sp, #120]	; 0x78
   20ac4:	mov	r2, r4
   20ac8:	add	r1, sp, #24
   20acc:	mov	r0, r5
   20ad0:	bl	1531c <ReadCompressedUInt8Data>
   20ad4:	b	1f570 <ReadCompressedDataSlab2+0x208>
   20ad8:	mov	r9, r4
   20adc:	b	2097c <ReadCompressedDataSlab2+0x1614>

00020ae0 <WriteData>:
   20ae0:	push	{r4, r5, r6, r7, lr}
   20ae4:	sub	sp, sp, #20
   20ae8:	str	r3, [sp, #4]
   20aec:	mov	r3, #0
   20af0:	str	r3, [sp, #12]
   20af4:	subs	r4, r0, #0
   20af8:	beq	20b80 <WriteData+0xa0>
   20afc:	ldr	r3, [r4]
   20b00:	cmp	r3, #0
   20b04:	moveq	r0, #0
   20b08:	beq	20b60 <WriteData+0x80>
   20b0c:	mov	r5, r2
   20b10:	mov	r6, r1
   20b14:	ldr	r0, [sp, #4]
   20b18:	bl	1600 <Mat_SizeOf@plt>
   20b1c:	mov	r7, r0
   20b20:	mul	r3, r5, r0
   20b24:	str	r3, [sp, #12]
   20b28:	ldr	r3, [r4]
   20b2c:	mov	r2, #1
   20b30:	mov	r1, #4
   20b34:	add	r0, sp, r1
   20b38:	bl	157c <fwrite@plt>
   20b3c:	ldr	r3, [r4]
   20b40:	mov	r2, #1
   20b44:	mov	r1, #4
   20b48:	add	r0, sp, #12
   20b4c:	bl	157c <fwrite@plt>
   20b50:	cmp	r6, #0
   20b54:	cmpne	r5, #0
   20b58:	bgt	20b68 <WriteData+0x88>
   20b5c:	ldr	r0, [sp, #12]
   20b60:	add	sp, sp, #20
   20b64:	pop	{r4, r5, r6, r7, pc}
   20b68:	ldr	r3, [r4]
   20b6c:	mov	r2, r5
   20b70:	mov	r1, r7
   20b74:	mov	r0, r6
   20b78:	bl	157c <fwrite@plt>
   20b7c:	b	20b5c <WriteData+0x7c>
   20b80:	mov	r0, #0
   20b84:	b	20b60 <WriteData+0x80>

00020b88 <Mat_VarReadNumeric5>:
   20b88:	push	{r4, r5, r6, r7, r8, r9, lr}
   20b8c:	sub	sp, sp, #20
   20b90:	mov	r5, r0
   20b94:	mov	r4, r1
   20b98:	mov	r7, r2
   20b9c:	mov	r8, r3
   20ba0:	ldr	r3, [r1, #48]	; 0x30
   20ba4:	cmp	r3, #1
   20ba8:	beq	20c48 <Mat_VarReadNumeric5+0xc0>
   20bac:	ldr	r3, [r0]
   20bb0:	mov	r2, #1
   20bb4:	mov	r1, #4
   20bb8:	add	r0, sp, #8
   20bbc:	bl	1588 <fread@plt>
   20bc0:	ldr	r3, [r5, #20]
   20bc4:	cmp	r3, #0
   20bc8:	bne	20ce0 <Mat_VarReadNumeric5+0x158>
   20bcc:	ldr	r0, [sp, #8]
   20bd0:	uxtb	r2, r0
   20bd4:	cmp	r2, #24
   20bd8:	movls	r6, r2
   20bdc:	movhi	r6, #0
   20be0:	lsrs	r3, r0, #16
   20be4:	beq	20cec <Mat_VarReadNumeric5+0x164>
   20be8:	lsr	r0, r0, #16
   20bec:	mov	r9, #1
   20bf0:	cmp	r0, #0
   20bf4:	moveq	r3, #0
   20bf8:	streq	r3, [r4]
   20bfc:	beq	20e50 <Mat_VarReadNumeric5+0x2c8>
   20c00:	ldr	r3, [r4, #48]	; 0x30
   20c04:	cmp	r3, #0
   20c08:	bne	20e48 <Mat_VarReadNumeric5+0x2c0>
   20c0c:	ldr	r3, [r4, #16]
   20c10:	sub	r3, r3, #6
   20c14:	cmp	r3, #9
   20c18:	addls	pc, pc, r3, lsl #2
   20c1c:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20c20:	b	20d24 <Mat_VarReadNumeric5+0x19c>
   20c24:	b	20d70 <Mat_VarReadNumeric5+0x1e8>
   20c28:	b	20e18 <Mat_VarReadNumeric5+0x290>
   20c2c:	b	20e30 <Mat_VarReadNumeric5+0x2a8>
   20c30:	b	20de8 <Mat_VarReadNumeric5+0x260>
   20c34:	b	20e00 <Mat_VarReadNumeric5+0x278>
   20c38:	b	20db8 <Mat_VarReadNumeric5+0x230>
   20c3c:	b	20dd0 <Mat_VarReadNumeric5+0x248>
   20c40:	b	20d88 <Mat_VarReadNumeric5+0x200>
   20c44:	b	20da0 <Mat_VarReadNumeric5+0x218>
   20c48:	ldr	r3, [r1, #52]	; 0x34
   20c4c:	ldr	r3, [r3, #12]
   20c50:	mov	r2, #0
   20c54:	str	r2, [r3, #4]
   20c58:	ldr	r3, [r1, #52]	; 0x34
   20c5c:	add	r2, sp, #8
   20c60:	ldr	r1, [r3, #12]
   20c64:	bl	32c0 <InflateDataType>
   20c68:	ldr	r3, [r5, #20]
   20c6c:	cmp	r3, #0
   20c70:	bne	20c9c <Mat_VarReadNumeric5+0x114>
   20c74:	ldr	r0, [sp, #8]
   20c78:	uxtb	r2, r0
   20c7c:	cmp	r2, #24
   20c80:	movls	r6, r2
   20c84:	movhi	r6, #0
   20c88:	lsrs	r3, r0, #16
   20c8c:	beq	20ca8 <Mat_VarReadNumeric5+0x120>
   20c90:	lsr	r0, r0, #16
   20c94:	mov	r9, #1
   20c98:	b	20bf0 <Mat_VarReadNumeric5+0x68>
   20c9c:	add	r0, sp, #8
   20ca0:	bl	1a88 <Mat_uint32Swap>
   20ca4:	b	20c74 <Mat_VarReadNumeric5+0xec>
   20ca8:	ldr	r3, [r4, #52]	; 0x34
   20cac:	add	r2, sp, #12
   20cb0:	ldr	r1, [r3, #12]
   20cb4:	mov	r0, r5
   20cb8:	bl	32c0 <InflateDataType>
   20cbc:	ldr	r3, [r5, #20]
   20cc0:	cmp	r3, #0
   20cc4:	bne	20cd4 <Mat_VarReadNumeric5+0x14c>
   20cc8:	ldr	r0, [sp, #12]
   20ccc:	mov	r9, #0
   20cd0:	b	20bf0 <Mat_VarReadNumeric5+0x68>
   20cd4:	add	r0, sp, #12
   20cd8:	bl	1a88 <Mat_uint32Swap>
   20cdc:	b	20cc8 <Mat_VarReadNumeric5+0x140>
   20ce0:	add	r0, sp, #8
   20ce4:	bl	1a88 <Mat_uint32Swap>
   20ce8:	b	20bcc <Mat_VarReadNumeric5+0x44>
   20cec:	ldr	r3, [r5]
   20cf0:	mov	r2, #1
   20cf4:	mov	r1, #4
   20cf8:	add	r0, sp, #12
   20cfc:	bl	1588 <fread@plt>
   20d00:	ldr	r3, [r5, #20]
   20d04:	cmp	r3, #0
   20d08:	bne	20d18 <Mat_VarReadNumeric5+0x190>
   20d0c:	ldr	r0, [sp, #12]
   20d10:	mov	r9, #0
   20d14:	b	20bf0 <Mat_VarReadNumeric5+0x68>
   20d18:	add	r0, sp, #12
   20d1c:	bl	1a88 <Mat_uint32Swap>
   20d20:	b	20d0c <Mat_VarReadNumeric5+0x184>
   20d24:	mov	r3, r8
   20d28:	mov	r2, r6
   20d2c:	mov	r1, r7
   20d30:	mov	r0, r5
   20d34:	bl	3aa0 <ReadDoubleData>
   20d38:	cmp	r9, #0
   20d3c:	addne	r0, r0, #4
   20d40:	tst	r0, #7
   20d44:	beq	20e50 <Mat_VarReadNumeric5+0x2c8>
   20d48:	asr	r1, r0, #31
   20d4c:	lsr	r3, r1, #29
   20d50:	add	r1, r0, r3
   20d54:	and	r1, r1, #7
   20d58:	sub	r1, r1, r3
   20d5c:	mov	r2, #1
   20d60:	rsb	r1, r1, #8
   20d64:	ldr	r0, [r5]
   20d68:	bl	1714 <fseek@plt>
   20d6c:	b	20e50 <Mat_VarReadNumeric5+0x2c8>
   20d70:	mov	r3, r8
   20d74:	mov	r2, r6
   20d78:	mov	r1, r7
   20d7c:	mov	r0, r5
   20d80:	bl	61cc <ReadSingleData>
   20d84:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20d88:	mov	r3, r8
   20d8c:	mov	r2, r6
   20d90:	mov	r1, r7
   20d94:	mov	r0, r5
   20d98:	bl	7d94 <ReadInt64Data>
   20d9c:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20da0:	mov	r3, r8
   20da4:	mov	r2, r6
   20da8:	mov	r1, r7
   20dac:	mov	r0, r5
   20db0:	bl	9a2c <ReadUInt64Data>
   20db4:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20db8:	mov	r3, r8
   20dbc:	mov	r2, r6
   20dc0:	mov	r1, r7
   20dc4:	mov	r0, r5
   20dc8:	bl	b6c4 <ReadInt32Data>
   20dcc:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20dd0:	mov	r3, r8
   20dd4:	mov	r2, r6
   20dd8:	mov	r1, r7
   20ddc:	mov	r0, r5
   20de0:	bl	d234 <ReadUInt32Data>
   20de4:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20de8:	mov	r3, r8
   20dec:	mov	r2, r6
   20df0:	mov	r1, r7
   20df4:	mov	r0, r5
   20df8:	bl	eda4 <ReadInt16Data>
   20dfc:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20e00:	mov	r3, r8
   20e04:	mov	r2, r6
   20e08:	mov	r1, r7
   20e0c:	mov	r0, r5
   20e10:	bl	108fc <ReadUInt16Data>
   20e14:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20e18:	mov	r3, r8
   20e1c:	mov	r2, r6
   20e20:	mov	r1, r7
   20e24:	mov	r0, r5
   20e28:	bl	12454 <ReadInt8Data>
   20e2c:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20e30:	mov	r3, r8
   20e34:	mov	r2, r6
   20e38:	mov	r1, r7
   20e3c:	mov	r0, r5
   20e40:	bl	13e70 <ReadUInt8Data>
   20e44:	b	20d38 <Mat_VarReadNumeric5+0x1b0>
   20e48:	cmp	r3, #1
   20e4c:	beq	20e58 <Mat_VarReadNumeric5+0x2d0>
   20e50:	add	sp, sp, #20
   20e54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20e58:	ldr	r3, [r4, #16]
   20e5c:	sub	r3, r3, #6
   20e60:	cmp	r3, #9
   20e64:	addls	pc, pc, r3, lsl #2
   20e68:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20e6c:	b	20e94 <Mat_VarReadNumeric5+0x30c>
   20e70:	b	20eec <Mat_VarReadNumeric5+0x364>
   20e74:	b	20fcc <Mat_VarReadNumeric5+0x444>
   20e78:	b	20fec <Mat_VarReadNumeric5+0x464>
   20e7c:	b	20f8c <Mat_VarReadNumeric5+0x404>
   20e80:	b	20fac <Mat_VarReadNumeric5+0x424>
   20e84:	b	20f4c <Mat_VarReadNumeric5+0x3c4>
   20e88:	b	20f6c <Mat_VarReadNumeric5+0x3e4>
   20e8c:	b	20f0c <Mat_VarReadNumeric5+0x384>
   20e90:	b	20f2c <Mat_VarReadNumeric5+0x3a4>
   20e94:	ldr	r3, [r4, #52]	; 0x34
   20e98:	ldr	r1, [r3, #12]
   20e9c:	str	r8, [sp]
   20ea0:	mov	r3, r6
   20ea4:	mov	r2, r7
   20ea8:	mov	r0, r5
   20eac:	bl	4ef4 <ReadCompressedDoubleData>
   20eb0:	cmp	r9, #0
   20eb4:	addne	r0, r0, #4
   20eb8:	tst	r0, #7
   20ebc:	beq	20e50 <Mat_VarReadNumeric5+0x2c8>
   20ec0:	asr	r2, r0, #31
   20ec4:	lsr	r3, r2, #29
   20ec8:	add	r2, r0, r3
   20ecc:	and	r2, r2, #7
   20ed0:	sub	r2, r2, r3
   20ed4:	ldr	r3, [r4, #52]	; 0x34
   20ed8:	rsb	r2, r2, #8
   20edc:	ldr	r1, [r3, #12]
   20ee0:	mov	r0, r5
   20ee4:	bl	227c <InflateSkip>
   20ee8:	b	20e50 <Mat_VarReadNumeric5+0x2c8>
   20eec:	ldr	r3, [r4, #52]	; 0x34
   20ef0:	ldr	r1, [r3, #12]
   20ef4:	str	r8, [sp]
   20ef8:	mov	r3, r6
   20efc:	mov	r2, r7
   20f00:	mov	r0, r5
   20f04:	bl	7804 <ReadCompressedSingleData>
   20f08:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20f0c:	ldr	r3, [r4, #52]	; 0x34
   20f10:	ldr	r1, [r3, #12]
   20f14:	str	r8, [sp]
   20f18:	mov	r3, r6
   20f1c:	mov	r2, r7
   20f20:	mov	r0, r5
   20f24:	bl	9464 <ReadCompressedInt64Data>
   20f28:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20f2c:	ldr	r3, [r4, #52]	; 0x34
   20f30:	ldr	r1, [r3, #12]
   20f34:	str	r8, [sp]
   20f38:	mov	r3, r6
   20f3c:	mov	r2, r7
   20f40:	mov	r0, r5
   20f44:	bl	b0fc <ReadCompressedUInt64Data>
   20f48:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20f4c:	ldr	r3, [r4, #52]	; 0x34
   20f50:	ldr	r1, [r3, #12]
   20f54:	str	r8, [sp]
   20f58:	mov	r3, r6
   20f5c:	mov	r2, r7
   20f60:	mov	r0, r5
   20f64:	bl	cc9c <ReadCompressedInt32Data>
   20f68:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20f6c:	ldr	r3, [r4, #52]	; 0x34
   20f70:	ldr	r1, [r3, #12]
   20f74:	str	r8, [sp]
   20f78:	mov	r3, r6
   20f7c:	mov	r2, r7
   20f80:	mov	r0, r5
   20f84:	bl	e80c <ReadCompressedUInt32Data>
   20f88:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20f8c:	ldr	r3, [r4, #52]	; 0x34
   20f90:	ldr	r1, [r3, #12]
   20f94:	str	r8, [sp]
   20f98:	mov	r3, r6
   20f9c:	mov	r2, r7
   20fa0:	mov	r0, r5
   20fa4:	bl	1038c <ReadCompressedInt16Data>
   20fa8:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20fac:	ldr	r3, [r4, #52]	; 0x34
   20fb0:	ldr	r1, [r3, #12]
   20fb4:	str	r8, [sp]
   20fb8:	mov	r3, r6
   20fbc:	mov	r2, r7
   20fc0:	mov	r0, r5
   20fc4:	bl	11ee4 <ReadCompressedUInt16Data>
   20fc8:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20fcc:	ldr	r3, [r4, #52]	; 0x34
   20fd0:	ldr	r1, [r3, #12]
   20fd4:	str	r8, [sp]
   20fd8:	mov	r3, r6
   20fdc:	mov	r2, r7
   20fe0:	mov	r0, r5
   20fe4:	bl	13900 <ReadCompressedInt8Data>
   20fe8:	b	20eb0 <Mat_VarReadNumeric5+0x328>
   20fec:	ldr	r3, [r4, #52]	; 0x34
   20ff0:	ldr	r1, [r3, #12]
   20ff4:	str	r8, [sp]
   20ff8:	mov	r3, r6
   20ffc:	mov	r2, r7
   21000:	mov	r0, r5
   21004:	bl	1531c <ReadCompressedUInt8Data>
   21008:	b	20eb0 <Mat_VarReadNumeric5+0x328>

0002100c <GetDataSlab>:
   2100c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21010:	sub	sp, sp, #156	; 0x9c
   21014:	str	r0, [sp, #8]
   21018:	str	r1, [sp, #4]
   2101c:	mov	r6, r2
   21020:	mov	r4, r3
   21024:	ldr	r8, [sp, #200]	; 0xc8
   21028:	cmp	r2, #6
   2102c:	cmpeq	r3, #9
   21030:	moveq	r5, #1
   21034:	beq	210c8 <GetDataSlab+0xbc>
   21038:	cmp	r2, #7
   2103c:	cmpeq	r3, #7
   21040:	moveq	r5, #1
   21044:	beq	210c8 <GetDataSlab+0xbc>
   21048:	cmp	r2, #10
   2104c:	cmpeq	r3, #3
   21050:	moveq	r5, #1
   21054:	beq	210c8 <GetDataSlab+0xbc>
   21058:	cmp	r2, #12
   2105c:	cmpeq	r3, #5
   21060:	moveq	r5, #1
   21064:	beq	210c8 <GetDataSlab+0xbc>
   21068:	cmp	r2, #14
   2106c:	cmpeq	r3, #12
   21070:	moveq	r5, #1
   21074:	beq	210c8 <GetDataSlab+0xbc>
   21078:	cmp	r2, #8
   2107c:	cmpeq	r3, #1
   21080:	moveq	r5, #1
   21084:	beq	210c8 <GetDataSlab+0xbc>
   21088:	cmp	r2, #11
   2108c:	cmpeq	r3, #4
   21090:	moveq	r5, #1
   21094:	beq	210c8 <GetDataSlab+0xbc>
   21098:	cmp	r2, #13
   2109c:	cmpeq	r3, #6
   210a0:	moveq	r5, #1
   210a4:	beq	210c8 <GetDataSlab+0xbc>
   210a8:	cmp	r2, #15
   210ac:	cmpeq	r3, #13
   210b0:	moveq	r5, #1
   210b4:	beq	210c8 <GetDataSlab+0xbc>
   210b8:	cmp	r2, #9
   210bc:	cmpeq	r3, #2
   210c0:	moveq	r5, #1
   210c4:	movne	r5, #0
   210c8:	ldr	r3, [sp, #208]	; 0xd0
   210cc:	cmp	r3, #2
   210d0:	beq	21140 <GetDataSlab+0x134>
   210d4:	mov	r5, #40	; 0x28
   210d8:	mov	r2, r5
   210dc:	mov	r1, #0
   210e0:	add	r0, sp, #32
   210e4:	bl	166c <memset@plt>
   210e8:	mov	r2, r5
   210ec:	mov	r1, #0
   210f0:	add	r0, sp, #72	; 0x48
   210f4:	bl	166c <memset@plt>
   210f8:	mov	r2, r5
   210fc:	mov	r1, #0
   21100:	add	r0, sp, #112	; 0x70
   21104:	bl	166c <memset@plt>
   21108:	sub	r3, r6, #6
   2110c:	cmp	r3, #9
   21110:	addls	pc, pc, r3, lsl #2
   21114:	b	3d380 <GetDataSlab+0x1c374>
   21118:	b	24b98 <GetDataSlab+0x3b8c>
   2111c:	b	27308 <GetDataSlab+0x62fc>
   21120:	b	38550 <GetDataSlab+0x17544>
   21124:	b	3ac68 <GetDataSlab+0x19c5c>
   21128:	b	33720 <GetDataSlab+0x12714>
   2112c:	b	35e38 <GetDataSlab+0x14e2c>
   21130:	b	2e910 <GetDataSlab+0xd904>
   21134:	b	31018 <GetDataSlab+0x1000c>
   21138:	b	29a70 <GetDataSlab+0x8a64>
   2113c:	b	2c1c0 <GetDataSlab+0xb1b4>
   21140:	ldr	r7, [r8]
   21144:	ldr	r3, [sp, #204]	; 0xcc
   21148:	ldr	r9, [r3]
   2114c:	ldr	r3, [sp, #196]	; 0xc4
   21150:	ldr	r0, [r3]
   21154:	ldr	r3, [sp, #192]	; 0xc0
   21158:	ldr	r1, [r3]
   2115c:	sub	r2, r9, #1
   21160:	add	r3, r0, #1
   21164:	mla	r3, r7, r2, r3
   21168:	cmp	r3, r1
   2116c:	movhi	r3, #1
   21170:	bhi	24fa8 <GetDataSlab+0x3f9c>
   21174:	ldr	sl, [r8, #4]
   21178:	ldr	r3, [sp, #204]	; 0xcc
   2117c:	ldr	lr, [r3, #4]
   21180:	ldr	r3, [sp, #196]	; 0xc4
   21184:	ldr	r2, [r3, #4]
   21188:	sub	ip, lr, #1
   2118c:	add	r3, r2, #1
   21190:	mla	r3, sl, ip, r3
   21194:	ldr	ip, [sp, #192]	; 0xc0
   21198:	ldr	ip, [ip, #4]
   2119c:	cmp	r3, ip
   211a0:	movhi	r3, #1
   211a4:	bhi	24fa8 <GetDataSlab+0x3f9c>
   211a8:	cmp	r7, #1
   211ac:	beq	211e8 <GetDataSlab+0x1dc>
   211b0:	sub	r3, r6, #6
   211b4:	cmp	r3, #9
   211b8:	addls	pc, pc, r3, lsl #2
   211bc:	b	3d658 <GetDataSlab+0x1c64c>
   211c0:	b	21218 <GetDataSlab+0x20c>
   211c4:	b	217fc <GetDataSlab+0x7f0>
   211c8:	b	24038 <GetDataSlab+0x302c>
   211cc:	b	245e8 <GetDataSlab+0x35dc>
   211d0:	b	234d8 <GetDataSlab+0x24cc>
   211d4:	b	23a88 <GetDataSlab+0x2a7c>
   211d8:	b	22988 <GetDataSlab+0x197c>
   211dc:	b	22f30 <GetDataSlab+0x1f24>
   211e0:	b	21de0 <GetDataSlab+0xdd4>
   211e4:	b	223b4 <GetDataSlab+0x13a8>
   211e8:	cmp	r9, r1
   211ec:	cmpeq	sl, #1
   211f0:	moveq	r3, #1
   211f4:	movne	r3, #0
   211f8:	tst	r5, r3
   211fc:	beq	211b0 <GetDataSlab+0x1a4>
   21200:	ldr	r2, [sp, #212]	; 0xd4
   21204:	ldr	r1, [sp, #8]
   21208:	ldr	r0, [sp, #4]
   2120c:	bl	14f8 <memcpy@plt>
   21210:	mov	r3, #0
   21214:	b	24fa8 <GetDataSlab+0x3f9c>
   21218:	sub	r3, r4, #1
   2121c:	cmp	r3, #8
   21220:	addls	pc, pc, r3, lsl #2
   21224:	b	216c8 <GetDataSlab+0x6bc>
   21228:	b	215b0 <GetDataSlab+0x5a4>
   2122c:	b	2163c <GetDataSlab+0x630>
   21230:	b	21488 <GetDataSlab+0x47c>
   21234:	b	2151c <GetDataSlab+0x510>
   21238:	b	21368 <GetDataSlab+0x35c>
   2123c:	b	213f8 <GetDataSlab+0x3ec>
   21240:	b	212d8 <GetDataSlab+0x2cc>
   21244:	b	216c8 <GetDataSlab+0x6bc>
   21248:	b	2124c <GetDataSlab+0x240>
   2124c:	mla	r3, r2, r1, r0
   21250:	ldr	r2, [sp, #8]
   21254:	add	ip, r2, r3, lsl #3
   21258:	cmp	lr, #0
   2125c:	movle	r3, #0
   21260:	ble	24fa8 <GetDataSlab+0x3f9c>
   21264:	ldr	r2, [sp, #4]
   21268:	mov	lr, #0
   2126c:	b	212c0 <GetDataSlab+0x2b4>
   21270:	ldr	r1, [r8]
   21274:	mul	r1, r1, r3
   21278:	add	r1, ip, r1, lsl #3
   2127c:	ldrd	r0, [r1]
   21280:	strd	r0, [r2], #8
   21284:	add	r3, r3, #1
   21288:	ldr	r1, [sp, #204]	; 0xcc
   2128c:	ldr	r1, [r1]
   21290:	cmp	r1, r3
   21294:	bgt	21270 <GetDataSlab+0x264>
   21298:	ldr	r3, [sp, #192]	; 0xc0
   2129c:	ldr	r3, [r3]
   212a0:	lsl	r3, r3, #3
   212a4:	ldr	r1, [r8, #4]
   212a8:	mla	ip, r1, r3, ip
   212ac:	add	lr, lr, #1
   212b0:	ldr	r3, [sp, #204]	; 0xcc
   212b4:	ldr	r3, [r3, #4]
   212b8:	cmp	r3, lr
   212bc:	ble	3d660 <GetDataSlab+0x1c654>
   212c0:	ldr	r3, [sp, #204]	; 0xcc
   212c4:	ldr	r3, [r3]
   212c8:	cmp	r3, #0
   212cc:	movgt	r3, #0
   212d0:	bgt	21270 <GetDataSlab+0x264>
   212d4:	b	21298 <GetDataSlab+0x28c>
   212d8:	mla	r3, r2, r1, r0
   212dc:	ldr	r2, [sp, #8]
   212e0:	add	r0, r2, r3, lsl #2
   212e4:	cmp	lr, #0
   212e8:	movle	r3, #0
   212ec:	ble	24fa8 <GetDataSlab+0x3f9c>
   212f0:	ldr	r2, [sp, #4]
   212f4:	mov	ip, #0
   212f8:	b	21350 <GetDataSlab+0x344>
   212fc:	ldr	r1, [r8]
   21300:	mul	r1, r1, r3
   21304:	add	r1, r0, r1, lsl #2
   21308:	vldr	s15, [r1]
   2130c:	vcvt.f64.f32	d7, s15
   21310:	vstmia	r2!, {d7}
   21314:	add	r3, r3, #1
   21318:	ldr	r1, [sp, #204]	; 0xcc
   2131c:	ldr	r1, [r1]
   21320:	cmp	r1, r3
   21324:	bgt	212fc <GetDataSlab+0x2f0>
   21328:	ldr	r3, [sp, #192]	; 0xc0
   2132c:	ldr	r3, [r3]
   21330:	lsl	r3, r3, #2
   21334:	ldr	r1, [r8, #4]
   21338:	mla	r0, r1, r3, r0
   2133c:	add	ip, ip, #1
   21340:	ldr	r3, [sp, #204]	; 0xcc
   21344:	ldr	r3, [r3, #4]
   21348:	cmp	r3, ip
   2134c:	ble	3d668 <GetDataSlab+0x1c65c>
   21350:	ldr	r3, [sp, #204]	; 0xcc
   21354:	ldr	r3, [r3]
   21358:	cmp	r3, #0
   2135c:	movgt	r3, #0
   21360:	bgt	212fc <GetDataSlab+0x2f0>
   21364:	b	21328 <GetDataSlab+0x31c>
   21368:	mla	r3, r2, r1, r0
   2136c:	ldr	r2, [sp, #8]
   21370:	add	r0, r2, r3, lsl #2
   21374:	cmp	lr, #0
   21378:	movle	r3, #0
   2137c:	ble	24fa8 <GetDataSlab+0x3f9c>
   21380:	ldr	r2, [sp, #4]
   21384:	mov	ip, #0
   21388:	b	213e0 <GetDataSlab+0x3d4>
   2138c:	ldr	r1, [r8]
   21390:	mul	r1, r1, r3
   21394:	ldr	r1, [r0, r1, lsl #2]
   21398:	vmov	s15, r1
   2139c:	vcvt.f64.s32	d7, s15
   213a0:	vstmia	r2!, {d7}
   213a4:	add	r3, r3, #1
   213a8:	ldr	r1, [sp, #204]	; 0xcc
   213ac:	ldr	r1, [r1]
   213b0:	cmp	r1, r3
   213b4:	bgt	2138c <GetDataSlab+0x380>
   213b8:	ldr	r3, [sp, #192]	; 0xc0
   213bc:	ldr	r3, [r3]
   213c0:	lsl	r3, r3, #2
   213c4:	ldr	r1, [r8, #4]
   213c8:	mla	r0, r1, r3, r0
   213cc:	add	ip, ip, #1
   213d0:	ldr	r3, [sp, #204]	; 0xcc
   213d4:	ldr	r3, [r3, #4]
   213d8:	cmp	r3, ip
   213dc:	ble	3d670 <GetDataSlab+0x1c664>
   213e0:	ldr	r3, [sp, #204]	; 0xcc
   213e4:	ldr	r3, [r3]
   213e8:	cmp	r3, #0
   213ec:	movgt	r3, #0
   213f0:	bgt	2138c <GetDataSlab+0x380>
   213f4:	b	213b8 <GetDataSlab+0x3ac>
   213f8:	mla	r3, r2, r1, r0
   213fc:	ldr	r2, [sp, #8]
   21400:	add	r0, r2, r3, lsl #2
   21404:	cmp	lr, #0
   21408:	movle	r3, #0
   2140c:	ble	24fa8 <GetDataSlab+0x3f9c>
   21410:	ldr	r2, [sp, #4]
   21414:	mov	ip, #0
   21418:	b	21470 <GetDataSlab+0x464>
   2141c:	ldr	r1, [r8]
   21420:	mul	r1, r1, r3
   21424:	ldr	r1, [r0, r1, lsl #2]
   21428:	vmov	s15, r1
   2142c:	vcvt.f64.u32	d7, s15
   21430:	vstmia	r2!, {d7}
   21434:	add	r3, r3, #1
   21438:	ldr	r1, [sp, #204]	; 0xcc
   2143c:	ldr	r1, [r1]
   21440:	cmp	r1, r3
   21444:	bgt	2141c <GetDataSlab+0x410>
   21448:	ldr	r3, [sp, #192]	; 0xc0
   2144c:	ldr	r3, [r3]
   21450:	lsl	r3, r3, #2
   21454:	ldr	r1, [r8, #4]
   21458:	mla	r0, r1, r3, r0
   2145c:	add	ip, ip, #1
   21460:	ldr	r3, [sp, #204]	; 0xcc
   21464:	ldr	r3, [r3, #4]
   21468:	cmp	r3, ip
   2146c:	ble	3d678 <GetDataSlab+0x1c66c>
   21470:	ldr	r3, [sp, #204]	; 0xcc
   21474:	ldr	r3, [r3]
   21478:	cmp	r3, #0
   2147c:	movgt	r3, #0
   21480:	bgt	2141c <GetDataSlab+0x410>
   21484:	b	21448 <GetDataSlab+0x43c>
   21488:	mla	r3, r2, r1, r0
   2148c:	ldr	r2, [sp, #8]
   21490:	add	r0, r2, r3, lsl #1
   21494:	cmp	lr, #0
   21498:	movle	r3, #0
   2149c:	ble	24fa8 <GetDataSlab+0x3f9c>
   214a0:	ldr	r2, [sp, #4]
   214a4:	mov	ip, #0
   214a8:	b	21504 <GetDataSlab+0x4f8>
   214ac:	ldr	r1, [r8]
   214b0:	mul	r1, r1, r3
   214b4:	lsl	r1, r1, #1
   214b8:	ldrsh	r1, [r0, r1]
   214bc:	vmov	s15, r1
   214c0:	vcvt.f64.s32	d7, s15
   214c4:	vstmia	r2!, {d7}
   214c8:	add	r3, r3, #1
   214cc:	ldr	r1, [sp, #204]	; 0xcc
   214d0:	ldr	r1, [r1]
   214d4:	cmp	r1, r3
   214d8:	bgt	214ac <GetDataSlab+0x4a0>
   214dc:	ldr	r3, [sp, #192]	; 0xc0
   214e0:	ldr	r3, [r3]
   214e4:	lsl	r3, r3, #1
   214e8:	ldr	r1, [r8, #4]
   214ec:	mla	r0, r1, r3, r0
   214f0:	add	ip, ip, #1
   214f4:	ldr	r3, [sp, #204]	; 0xcc
   214f8:	ldr	r3, [r3, #4]
   214fc:	cmp	r3, ip
   21500:	ble	3d680 <GetDataSlab+0x1c674>
   21504:	ldr	r3, [sp, #204]	; 0xcc
   21508:	ldr	r3, [r3]
   2150c:	cmp	r3, #0
   21510:	movgt	r3, #0
   21514:	bgt	214ac <GetDataSlab+0x4a0>
   21518:	b	214dc <GetDataSlab+0x4d0>
   2151c:	mla	r3, r2, r1, r0
   21520:	ldr	r2, [sp, #8]
   21524:	add	r0, r2, r3, lsl #1
   21528:	cmp	lr, #0
   2152c:	movle	r3, #0
   21530:	ble	24fa8 <GetDataSlab+0x3f9c>
   21534:	ldr	r2, [sp, #4]
   21538:	mov	ip, #0
   2153c:	b	21598 <GetDataSlab+0x58c>
   21540:	ldr	r1, [r8]
   21544:	mul	r1, r1, r3
   21548:	lsl	r1, r1, #1
   2154c:	ldrh	r1, [r0, r1]
   21550:	vmov	s15, r1
   21554:	vcvt.f64.u32	d7, s15
   21558:	vstmia	r2!, {d7}
   2155c:	add	r3, r3, #1
   21560:	ldr	r1, [sp, #204]	; 0xcc
   21564:	ldr	r1, [r1]
   21568:	cmp	r1, r3
   2156c:	bgt	21540 <GetDataSlab+0x534>
   21570:	ldr	r3, [sp, #192]	; 0xc0
   21574:	ldr	r3, [r3]
   21578:	lsl	r3, r3, #1
   2157c:	ldr	r1, [r8, #4]
   21580:	mla	r0, r1, r3, r0
   21584:	add	ip, ip, #1
   21588:	ldr	r3, [sp, #204]	; 0xcc
   2158c:	ldr	r3, [r3, #4]
   21590:	cmp	r3, ip
   21594:	ble	3d688 <GetDataSlab+0x1c67c>
   21598:	ldr	r3, [sp, #204]	; 0xcc
   2159c:	ldr	r3, [r3]
   215a0:	cmp	r3, #0
   215a4:	movgt	r3, #0
   215a8:	bgt	21540 <GetDataSlab+0x534>
   215ac:	b	21570 <GetDataSlab+0x564>
   215b0:	mla	r3, r2, r1, r0
   215b4:	ldr	r2, [sp, #8]
   215b8:	add	r0, r2, r3
   215bc:	cmp	lr, #0
   215c0:	movle	r3, #0
   215c4:	ble	24fa8 <GetDataSlab+0x3f9c>
   215c8:	ldr	r2, [sp, #4]
   215cc:	mov	ip, #0
   215d0:	b	21624 <GetDataSlab+0x618>
   215d4:	ldr	r1, [r8]
   215d8:	mul	r1, r1, r3
   215dc:	ldrsb	r1, [r0, r1]
   215e0:	vmov	s15, r1
   215e4:	vcvt.f64.s32	d7, s15
   215e8:	vstmia	r2!, {d7}
   215ec:	add	r3, r3, #1
   215f0:	ldr	r1, [sp, #204]	; 0xcc
   215f4:	ldr	r1, [r1]
   215f8:	cmp	r1, r3
   215fc:	bgt	215d4 <GetDataSlab+0x5c8>
   21600:	ldr	r3, [r8, #4]
   21604:	ldr	r1, [sp, #192]	; 0xc0
   21608:	ldr	r1, [r1]
   2160c:	mla	r0, r1, r3, r0
   21610:	add	ip, ip, #1
   21614:	ldr	r3, [sp, #204]	; 0xcc
   21618:	ldr	r3, [r3, #4]
   2161c:	cmp	r3, ip
   21620:	ble	3d690 <GetDataSlab+0x1c684>
   21624:	ldr	r3, [sp, #204]	; 0xcc
   21628:	ldr	r3, [r3]
   2162c:	cmp	r3, #0
   21630:	movgt	r3, #0
   21634:	bgt	215d4 <GetDataSlab+0x5c8>
   21638:	b	21600 <GetDataSlab+0x5f4>
   2163c:	mla	r3, r2, r1, r0
   21640:	ldr	r2, [sp, #8]
   21644:	add	r0, r2, r3
   21648:	cmp	lr, #0
   2164c:	movle	r3, #0
   21650:	ble	24fa8 <GetDataSlab+0x3f9c>
   21654:	ldr	r2, [sp, #4]
   21658:	mov	ip, #0
   2165c:	b	216b0 <GetDataSlab+0x6a4>
   21660:	ldr	r1, [r8]
   21664:	mul	r1, r1, r3
   21668:	ldrb	r1, [r0, r1]
   2166c:	vmov	s15, r1
   21670:	vcvt.f64.u32	d7, s15
   21674:	vstmia	r2!, {d7}
   21678:	add	r3, r3, #1
   2167c:	ldr	r1, [sp, #204]	; 0xcc
   21680:	ldr	r1, [r1]
   21684:	cmp	r1, r3
   21688:	bgt	21660 <GetDataSlab+0x654>
   2168c:	ldr	r3, [r8, #4]
   21690:	ldr	r1, [sp, #192]	; 0xc0
   21694:	ldr	r1, [r1]
   21698:	mla	r0, r1, r3, r0
   2169c:	add	ip, ip, #1
   216a0:	ldr	r3, [sp, #204]	; 0xcc
   216a4:	ldr	r3, [r3, #4]
   216a8:	cmp	r3, ip
   216ac:	ble	3d698 <GetDataSlab+0x1c68c>
   216b0:	ldr	r3, [sp, #204]	; 0xcc
   216b4:	ldr	r3, [r3]
   216b8:	cmp	r3, #0
   216bc:	movgt	r3, #0
   216c0:	bgt	21660 <GetDataSlab+0x654>
   216c4:	b	2168c <GetDataSlab+0x680>
   216c8:	cmp	r4, #12
   216cc:	beq	21700 <GetDataSlab+0x6f4>
   216d0:	cmp	r4, #13
   216d4:	movne	r3, #1
   216d8:	bne	24fa8 <GetDataSlab+0x3f9c>
   216dc:	mla	r3, r2, r1, r0
   216e0:	ldr	r2, [sp, #8]
   216e4:	add	r6, r2, r3, lsl #3
   216e8:	cmp	lr, #0
   216ec:	movle	r3, #0
   216f0:	ble	24fa8 <GetDataSlab+0x3f9c>
   216f4:	ldr	r5, [sp, #4]
   216f8:	mov	r7, #0
   216fc:	b	217e4 <GetDataSlab+0x7d8>
   21700:	mla	r3, r2, r1, r0
   21704:	ldr	r2, [sp, #8]
   21708:	add	r6, r2, r3, lsl #3
   2170c:	cmp	lr, #0
   21710:	ldrgt	r5, [sp, #4]
   21714:	movgt	r7, #0
   21718:	bgt	21778 <GetDataSlab+0x76c>
   2171c:	mov	r3, #0
   21720:	b	24fa8 <GetDataSlab+0x3f9c>
   21724:	ldr	r3, [r8]
   21728:	mul	r3, r3, r4
   2172c:	lsl	r3, r3, #3
   21730:	ldrd	r0, [r6, r3]
   21734:	bl	51b60 <__aeabi_l2d>
   21738:	strd	r0, [r5], #8
   2173c:	add	r4, r4, #1
   21740:	ldr	r3, [sp, #204]	; 0xcc
   21744:	ldr	r3, [r3]
   21748:	cmp	r3, r4
   2174c:	bgt	21724 <GetDataSlab+0x718>
   21750:	ldr	r3, [sp, #192]	; 0xc0
   21754:	ldr	r3, [r3]
   21758:	lsl	r3, r3, #3
   2175c:	ldr	r2, [r8, #4]
   21760:	mla	r6, r2, r3, r6
   21764:	add	r7, r7, #1
   21768:	ldr	r3, [sp, #204]	; 0xcc
   2176c:	ldr	r3, [r3, #4]
   21770:	cmp	r3, r7
   21774:	ble	2171c <GetDataSlab+0x710>
   21778:	ldr	r3, [sp, #204]	; 0xcc
   2177c:	ldr	r3, [r3]
   21780:	cmp	r3, #0
   21784:	movgt	r4, #0
   21788:	bgt	21724 <GetDataSlab+0x718>
   2178c:	b	21750 <GetDataSlab+0x744>
   21790:	ldr	r3, [r8]
   21794:	mul	r3, r3, r4
   21798:	lsl	r3, r3, #3
   2179c:	ldrd	r0, [r6, r3]
   217a0:	bl	51b4c <__aeabi_ul2d>
   217a4:	strd	r0, [r5], #8
   217a8:	add	r4, r4, #1
   217ac:	ldr	r3, [sp, #204]	; 0xcc
   217b0:	ldr	r3, [r3]
   217b4:	cmp	r3, r4
   217b8:	bgt	21790 <GetDataSlab+0x784>
   217bc:	ldr	r3, [sp, #192]	; 0xc0
   217c0:	ldr	r3, [r3]
   217c4:	lsl	r3, r3, #3
   217c8:	ldr	r2, [r8, #4]
   217cc:	mla	r6, r2, r3, r6
   217d0:	add	r7, r7, #1
   217d4:	ldr	r3, [sp, #204]	; 0xcc
   217d8:	ldr	r3, [r3, #4]
   217dc:	cmp	r3, r7
   217e0:	ble	3d6a0 <GetDataSlab+0x1c694>
   217e4:	ldr	r3, [sp, #204]	; 0xcc
   217e8:	ldr	r3, [r3]
   217ec:	cmp	r3, #0
   217f0:	movgt	r4, #0
   217f4:	bgt	21790 <GetDataSlab+0x784>
   217f8:	b	217bc <GetDataSlab+0x7b0>
   217fc:	sub	r3, r4, #1
   21800:	cmp	r3, #8
   21804:	addls	pc, pc, r3, lsl #2
   21808:	b	21cac <GetDataSlab+0xca0>
   2180c:	b	21b94 <GetDataSlab+0xb88>
   21810:	b	21c20 <GetDataSlab+0xc14>
   21814:	b	21a6c <GetDataSlab+0xa60>
   21818:	b	21b00 <GetDataSlab+0xaf4>
   2181c:	b	2194c <GetDataSlab+0x940>
   21820:	b	219dc <GetDataSlab+0x9d0>
   21824:	b	218c0 <GetDataSlab+0x8b4>
   21828:	b	21cac <GetDataSlab+0xca0>
   2182c:	b	21830 <GetDataSlab+0x824>
   21830:	mla	r3, r2, r1, r0
   21834:	ldr	r2, [sp, #8]
   21838:	add	r0, r2, r3, lsl #3
   2183c:	cmp	lr, #0
   21840:	movle	r3, #0
   21844:	ble	24fa8 <GetDataSlab+0x3f9c>
   21848:	ldr	r2, [sp, #4]
   2184c:	mov	ip, #0
   21850:	b	218a8 <GetDataSlab+0x89c>
   21854:	ldr	r1, [r8]
   21858:	mul	r1, r1, r3
   2185c:	add	r1, r0, r1, lsl #3
   21860:	vldr	d7, [r1]
   21864:	vcvt.f32.f64	s15, d7
   21868:	vstmia	r2!, {s15}
   2186c:	add	r3, r3, #1
   21870:	ldr	r1, [sp, #204]	; 0xcc
   21874:	ldr	r1, [r1]
   21878:	cmp	r1, r3
   2187c:	bgt	21854 <GetDataSlab+0x848>
   21880:	ldr	r3, [sp, #192]	; 0xc0
   21884:	ldr	r3, [r3]
   21888:	lsl	r3, r3, #3
   2188c:	ldr	r1, [r8, #4]
   21890:	mla	r0, r1, r3, r0
   21894:	add	ip, ip, #1
   21898:	ldr	r3, [sp, #204]	; 0xcc
   2189c:	ldr	r3, [r3, #4]
   218a0:	cmp	r3, ip
   218a4:	ble	3d6a8 <GetDataSlab+0x1c69c>
   218a8:	ldr	r3, [sp, #204]	; 0xcc
   218ac:	ldr	r3, [r3]
   218b0:	cmp	r3, #0
   218b4:	movgt	r3, #0
   218b8:	bgt	21854 <GetDataSlab+0x848>
   218bc:	b	21880 <GetDataSlab+0x874>
   218c0:	mla	r3, r2, r1, r0
   218c4:	ldr	r2, [sp, #8]
   218c8:	add	r0, r2, r3, lsl #2
   218cc:	cmp	lr, #0
   218d0:	movle	r3, #0
   218d4:	ble	24fa8 <GetDataSlab+0x3f9c>
   218d8:	ldr	r2, [sp, #4]
   218dc:	mov	ip, #0
   218e0:	b	21934 <GetDataSlab+0x928>
   218e4:	ldr	r1, [r8]
   218e8:	mul	r1, r1, r3
   218ec:	add	r1, r0, r1, lsl #2
   218f0:	ldr	r1, [r1]
   218f4:	str	r1, [r2], #4
   218f8:	add	r3, r3, #1
   218fc:	ldr	r1, [sp, #204]	; 0xcc
   21900:	ldr	r1, [r1]
   21904:	cmp	r1, r3
   21908:	bgt	218e4 <GetDataSlab+0x8d8>
   2190c:	ldr	r3, [sp, #192]	; 0xc0
   21910:	ldr	r3, [r3]
   21914:	lsl	r3, r3, #2
   21918:	ldr	r1, [r8, #4]
   2191c:	mla	r0, r1, r3, r0
   21920:	add	ip, ip, #1
   21924:	ldr	r3, [sp, #204]	; 0xcc
   21928:	ldr	r3, [r3, #4]
   2192c:	cmp	r3, ip
   21930:	ble	3d6b0 <GetDataSlab+0x1c6a4>
   21934:	ldr	r3, [sp, #204]	; 0xcc
   21938:	ldr	r3, [r3]
   2193c:	cmp	r3, #0
   21940:	movgt	r3, #0
   21944:	bgt	218e4 <GetDataSlab+0x8d8>
   21948:	b	2190c <GetDataSlab+0x900>
   2194c:	mla	r3, r2, r1, r0
   21950:	ldr	r2, [sp, #8]
   21954:	add	r0, r2, r3, lsl #2
   21958:	cmp	lr, #0
   2195c:	movle	r3, #0
   21960:	ble	24fa8 <GetDataSlab+0x3f9c>
   21964:	ldr	r2, [sp, #4]
   21968:	mov	ip, #0
   2196c:	b	219c4 <GetDataSlab+0x9b8>
   21970:	ldr	r1, [r8]
   21974:	mul	r1, r1, r3
   21978:	ldr	r1, [r0, r1, lsl #2]
   2197c:	vmov	s15, r1
   21980:	vcvt.f32.s32	s15, s15
   21984:	vstmia	r2!, {s15}
   21988:	add	r3, r3, #1
   2198c:	ldr	r1, [sp, #204]	; 0xcc
   21990:	ldr	r1, [r1]
   21994:	cmp	r1, r3
   21998:	bgt	21970 <GetDataSlab+0x964>
   2199c:	ldr	r3, [sp, #192]	; 0xc0
   219a0:	ldr	r3, [r3]
   219a4:	lsl	r3, r3, #2
   219a8:	ldr	r1, [r8, #4]
   219ac:	mla	r0, r1, r3, r0
   219b0:	add	ip, ip, #1
   219b4:	ldr	r3, [sp, #204]	; 0xcc
   219b8:	ldr	r3, [r3, #4]
   219bc:	cmp	r3, ip
   219c0:	ble	3d6b8 <GetDataSlab+0x1c6ac>
   219c4:	ldr	r3, [sp, #204]	; 0xcc
   219c8:	ldr	r3, [r3]
   219cc:	cmp	r3, #0
   219d0:	movgt	r3, #0
   219d4:	bgt	21970 <GetDataSlab+0x964>
   219d8:	b	2199c <GetDataSlab+0x990>
   219dc:	mla	r3, r2, r1, r0
   219e0:	ldr	r2, [sp, #8]
   219e4:	add	r0, r2, r3, lsl #2
   219e8:	cmp	lr, #0
   219ec:	movle	r3, #0
   219f0:	ble	24fa8 <GetDataSlab+0x3f9c>
   219f4:	ldr	r2, [sp, #4]
   219f8:	mov	ip, #0
   219fc:	b	21a54 <GetDataSlab+0xa48>
   21a00:	ldr	r1, [r8]
   21a04:	mul	r1, r1, r3
   21a08:	ldr	r1, [r0, r1, lsl #2]
   21a0c:	vmov	s15, r1
   21a10:	vcvt.f32.u32	s15, s15
   21a14:	vstmia	r2!, {s15}
   21a18:	add	r3, r3, #1
   21a1c:	ldr	r1, [sp, #204]	; 0xcc
   21a20:	ldr	r1, [r1]
   21a24:	cmp	r1, r3
   21a28:	bgt	21a00 <GetDataSlab+0x9f4>
   21a2c:	ldr	r3, [sp, #192]	; 0xc0
   21a30:	ldr	r3, [r3]
   21a34:	lsl	r3, r3, #2
   21a38:	ldr	r1, [r8, #4]
   21a3c:	mla	r0, r1, r3, r0
   21a40:	add	ip, ip, #1
   21a44:	ldr	r3, [sp, #204]	; 0xcc
   21a48:	ldr	r3, [r3, #4]
   21a4c:	cmp	r3, ip
   21a50:	ble	3d6c0 <GetDataSlab+0x1c6b4>
   21a54:	ldr	r3, [sp, #204]	; 0xcc
   21a58:	ldr	r3, [r3]
   21a5c:	cmp	r3, #0
   21a60:	movgt	r3, #0
   21a64:	bgt	21a00 <GetDataSlab+0x9f4>
   21a68:	b	21a2c <GetDataSlab+0xa20>
   21a6c:	mla	r3, r2, r1, r0
   21a70:	ldr	r2, [sp, #8]
   21a74:	add	r0, r2, r3, lsl #1
   21a78:	cmp	lr, #0
   21a7c:	movle	r3, #0
   21a80:	ble	24fa8 <GetDataSlab+0x3f9c>
   21a84:	ldr	r2, [sp, #4]
   21a88:	mov	ip, #0
   21a8c:	b	21ae8 <GetDataSlab+0xadc>
   21a90:	ldr	r1, [r8]
   21a94:	mul	r1, r1, r3
   21a98:	lsl	r1, r1, #1
   21a9c:	ldrsh	r1, [r0, r1]
   21aa0:	vmov	s15, r1
   21aa4:	vcvt.f32.s32	s15, s15
   21aa8:	vstmia	r2!, {s15}
   21aac:	add	r3, r3, #1
   21ab0:	ldr	r1, [sp, #204]	; 0xcc
   21ab4:	ldr	r1, [r1]
   21ab8:	cmp	r1, r3
   21abc:	bgt	21a90 <GetDataSlab+0xa84>
   21ac0:	ldr	r3, [sp, #192]	; 0xc0
   21ac4:	ldr	r3, [r3]
   21ac8:	lsl	r3, r3, #1
   21acc:	ldr	r1, [r8, #4]
   21ad0:	mla	r0, r1, r3, r0
   21ad4:	add	ip, ip, #1
   21ad8:	ldr	r3, [sp, #204]	; 0xcc
   21adc:	ldr	r3, [r3, #4]
   21ae0:	cmp	r3, ip
   21ae4:	ble	3d6c8 <GetDataSlab+0x1c6bc>
   21ae8:	ldr	r3, [sp, #204]	; 0xcc
   21aec:	ldr	r3, [r3]
   21af0:	cmp	r3, #0
   21af4:	movgt	r3, #0
   21af8:	bgt	21a90 <GetDataSlab+0xa84>
   21afc:	b	21ac0 <GetDataSlab+0xab4>
   21b00:	mla	r3, r2, r1, r0
   21b04:	ldr	r2, [sp, #8]
   21b08:	add	r0, r2, r3, lsl #1
   21b0c:	cmp	lr, #0
   21b10:	movle	r3, #0
   21b14:	ble	24fa8 <GetDataSlab+0x3f9c>
   21b18:	ldr	r2, [sp, #4]
   21b1c:	mov	ip, #0
   21b20:	b	21b7c <GetDataSlab+0xb70>
   21b24:	ldr	r1, [r8]
   21b28:	mul	r1, r1, r3
   21b2c:	lsl	r1, r1, #1
   21b30:	ldrh	r1, [r0, r1]
   21b34:	vmov	s15, r1
   21b38:	vcvt.f32.u32	s15, s15
   21b3c:	vstmia	r2!, {s15}
   21b40:	add	r3, r3, #1
   21b44:	ldr	r1, [sp, #204]	; 0xcc
   21b48:	ldr	r1, [r1]
   21b4c:	cmp	r1, r3
   21b50:	bgt	21b24 <GetDataSlab+0xb18>
   21b54:	ldr	r3, [sp, #192]	; 0xc0
   21b58:	ldr	r3, [r3]
   21b5c:	lsl	r3, r3, #1
   21b60:	ldr	r1, [r8, #4]
   21b64:	mla	r0, r1, r3, r0
   21b68:	add	ip, ip, #1
   21b6c:	ldr	r3, [sp, #204]	; 0xcc
   21b70:	ldr	r3, [r3, #4]
   21b74:	cmp	r3, ip
   21b78:	ble	3d6d0 <GetDataSlab+0x1c6c4>
   21b7c:	ldr	r3, [sp, #204]	; 0xcc
   21b80:	ldr	r3, [r3]
   21b84:	cmp	r3, #0
   21b88:	movgt	r3, #0
   21b8c:	bgt	21b24 <GetDataSlab+0xb18>
   21b90:	b	21b54 <GetDataSlab+0xb48>
   21b94:	mla	r3, r2, r1, r0
   21b98:	ldr	r2, [sp, #8]
   21b9c:	add	r0, r2, r3
   21ba0:	cmp	lr, #0
   21ba4:	movle	r3, #0
   21ba8:	ble	24fa8 <GetDataSlab+0x3f9c>
   21bac:	ldr	r2, [sp, #4]
   21bb0:	mov	ip, #0
   21bb4:	b	21c08 <GetDataSlab+0xbfc>
   21bb8:	ldr	r1, [r8]
   21bbc:	mul	r1, r1, r3
   21bc0:	ldrsb	r1, [r0, r1]
   21bc4:	vmov	s15, r1
   21bc8:	vcvt.f32.s32	s15, s15
   21bcc:	vstmia	r2!, {s15}
   21bd0:	add	r3, r3, #1
   21bd4:	ldr	r1, [sp, #204]	; 0xcc
   21bd8:	ldr	r1, [r1]
   21bdc:	cmp	r1, r3
   21be0:	bgt	21bb8 <GetDataSlab+0xbac>
   21be4:	ldr	r3, [r8, #4]
   21be8:	ldr	r1, [sp, #192]	; 0xc0
   21bec:	ldr	r1, [r1]
   21bf0:	mla	r0, r1, r3, r0
   21bf4:	add	ip, ip, #1
   21bf8:	ldr	r3, [sp, #204]	; 0xcc
   21bfc:	ldr	r3, [r3, #4]
   21c00:	cmp	r3, ip
   21c04:	ble	3d6d8 <GetDataSlab+0x1c6cc>
   21c08:	ldr	r3, [sp, #204]	; 0xcc
   21c0c:	ldr	r3, [r3]
   21c10:	cmp	r3, #0
   21c14:	movgt	r3, #0
   21c18:	bgt	21bb8 <GetDataSlab+0xbac>
   21c1c:	b	21be4 <GetDataSlab+0xbd8>
   21c20:	mla	r3, r2, r1, r0
   21c24:	ldr	r2, [sp, #8]
   21c28:	add	r0, r2, r3
   21c2c:	cmp	lr, #0
   21c30:	movle	r3, #0
   21c34:	ble	24fa8 <GetDataSlab+0x3f9c>
   21c38:	ldr	r2, [sp, #4]
   21c3c:	mov	ip, #0
   21c40:	b	21c94 <GetDataSlab+0xc88>
   21c44:	ldr	r1, [r8]
   21c48:	mul	r1, r1, r3
   21c4c:	ldrb	r1, [r0, r1]
   21c50:	vmov	s15, r1
   21c54:	vcvt.f32.u32	s15, s15
   21c58:	vstmia	r2!, {s15}
   21c5c:	add	r3, r3, #1
   21c60:	ldr	r1, [sp, #204]	; 0xcc
   21c64:	ldr	r1, [r1]
   21c68:	cmp	r1, r3
   21c6c:	bgt	21c44 <GetDataSlab+0xc38>
   21c70:	ldr	r3, [r8, #4]
   21c74:	ldr	r1, [sp, #192]	; 0xc0
   21c78:	ldr	r1, [r1]
   21c7c:	mla	r0, r1, r3, r0
   21c80:	add	ip, ip, #1
   21c84:	ldr	r3, [sp, #204]	; 0xcc
   21c88:	ldr	r3, [r3, #4]
   21c8c:	cmp	r3, ip
   21c90:	ble	3d6e0 <GetDataSlab+0x1c6d4>
   21c94:	ldr	r3, [sp, #204]	; 0xcc
   21c98:	ldr	r3, [r3]
   21c9c:	cmp	r3, #0
   21ca0:	movgt	r3, #0
   21ca4:	bgt	21c44 <GetDataSlab+0xc38>
   21ca8:	b	21c70 <GetDataSlab+0xc64>
   21cac:	cmp	r4, #12
   21cb0:	beq	21ce4 <GetDataSlab+0xcd8>
   21cb4:	cmp	r4, #13
   21cb8:	movne	r3, #1
   21cbc:	bne	24fa8 <GetDataSlab+0x3f9c>
   21cc0:	mla	r3, r2, r1, r0
   21cc4:	ldr	r2, [sp, #8]
   21cc8:	add	r6, r2, r3, lsl #3
   21ccc:	cmp	lr, #0
   21cd0:	movle	r3, #0
   21cd4:	ble	24fa8 <GetDataSlab+0x3f9c>
   21cd8:	ldr	r5, [sp, #4]
   21cdc:	mov	r7, #0
   21ce0:	b	21dc8 <GetDataSlab+0xdbc>
   21ce4:	mla	r3, r2, r1, r0
   21ce8:	ldr	r2, [sp, #8]
   21cec:	add	r6, r2, r3, lsl #3
   21cf0:	cmp	lr, #0
   21cf4:	ldrgt	r5, [sp, #4]
   21cf8:	movgt	r7, #0
   21cfc:	bgt	21d5c <GetDataSlab+0xd50>
   21d00:	mov	r3, #0
   21d04:	b	24fa8 <GetDataSlab+0x3f9c>
   21d08:	ldr	r3, [r8]
   21d0c:	mul	r3, r3, r4
   21d10:	lsl	r3, r3, #3
   21d14:	ldrd	r0, [r6, r3]
   21d18:	bl	51d94 <__aeabi_l2f>
   21d1c:	str	r0, [r5], #4
   21d20:	add	r4, r4, #1
   21d24:	ldr	r3, [sp, #204]	; 0xcc
   21d28:	ldr	r3, [r3]
   21d2c:	cmp	r3, r4
   21d30:	bgt	21d08 <GetDataSlab+0xcfc>
   21d34:	ldr	r3, [sp, #192]	; 0xc0
   21d38:	ldr	r3, [r3]
   21d3c:	lsl	r3, r3, #3
   21d40:	ldr	r2, [r8, #4]
   21d44:	mla	r6, r2, r3, r6
   21d48:	add	r7, r7, #1
   21d4c:	ldr	r3, [sp, #204]	; 0xcc
   21d50:	ldr	r3, [r3, #4]
   21d54:	cmp	r3, r7
   21d58:	ble	21d00 <GetDataSlab+0xcf4>
   21d5c:	ldr	r3, [sp, #204]	; 0xcc
   21d60:	ldr	r3, [r3]
   21d64:	cmp	r3, #0
   21d68:	movgt	r4, #0
   21d6c:	bgt	21d08 <GetDataSlab+0xcfc>
   21d70:	b	21d34 <GetDataSlab+0xd28>
   21d74:	ldr	r3, [r8]
   21d78:	mul	r3, r3, r4
   21d7c:	lsl	r3, r3, #3
   21d80:	ldrd	r0, [r6, r3]
   21d84:	bl	51d84 <__aeabi_ul2f>
   21d88:	str	r0, [r5], #4
   21d8c:	add	r4, r4, #1
   21d90:	ldr	r3, [sp, #204]	; 0xcc
   21d94:	ldr	r3, [r3]
   21d98:	cmp	r3, r4
   21d9c:	bgt	21d74 <GetDataSlab+0xd68>
   21da0:	ldr	r3, [sp, #192]	; 0xc0
   21da4:	ldr	r3, [r3]
   21da8:	lsl	r3, r3, #3
   21dac:	ldr	r2, [r8, #4]
   21db0:	mla	r6, r2, r3, r6
   21db4:	add	r7, r7, #1
   21db8:	ldr	r3, [sp, #204]	; 0xcc
   21dbc:	ldr	r3, [r3, #4]
   21dc0:	cmp	r3, r7
   21dc4:	ble	3d6e8 <GetDataSlab+0x1c6dc>
   21dc8:	ldr	r3, [sp, #204]	; 0xcc
   21dcc:	ldr	r3, [r3]
   21dd0:	cmp	r3, #0
   21dd4:	movgt	r4, #0
   21dd8:	bgt	21d74 <GetDataSlab+0xd68>
   21ddc:	b	21da0 <GetDataSlab+0xd94>
   21de0:	sub	r3, r4, #1
   21de4:	cmp	r3, #8
   21de8:	addls	pc, pc, r3, lsl #2
   21dec:	b	22288 <GetDataSlab+0x127c>
   21df0:	b	22178 <GetDataSlab+0x116c>
   21df4:	b	22200 <GetDataSlab+0x11f4>
   21df8:	b	22058 <GetDataSlab+0x104c>
   21dfc:	b	220e8 <GetDataSlab+0x10dc>
   21e00:	b	21f34 <GetDataSlab+0xf28>
   21e04:	b	21fc4 <GetDataSlab+0xfb8>
   21e08:	b	21ea4 <GetDataSlab+0xe98>
   21e0c:	b	22288 <GetDataSlab+0x127c>
   21e10:	b	21e14 <GetDataSlab+0xe08>
   21e14:	mla	r3, r2, r1, r0
   21e18:	ldr	r2, [sp, #8]
   21e1c:	add	r6, r2, r3, lsl #3
   21e20:	cmp	lr, #0
   21e24:	movle	r3, #0
   21e28:	ble	24fa8 <GetDataSlab+0x3f9c>
   21e2c:	ldr	r5, [sp, #4]
   21e30:	mov	r7, #0
   21e34:	b	21e8c <GetDataSlab+0xe80>
   21e38:	ldr	r3, [r8]
   21e3c:	mul	r3, r3, r4
   21e40:	add	r3, r6, r3, lsl #3
   21e44:	ldrd	r0, [r3]
   21e48:	bl	51e4c <__aeabi_d2lz>
   21e4c:	strd	r0, [r5], #8
   21e50:	add	r4, r4, #1
   21e54:	ldr	r3, [sp, #204]	; 0xcc
   21e58:	ldr	r3, [r3]
   21e5c:	cmp	r3, r4
   21e60:	bgt	21e38 <GetDataSlab+0xe2c>
   21e64:	ldr	r3, [sp, #192]	; 0xc0
   21e68:	ldr	r3, [r3]
   21e6c:	lsl	r3, r3, #3
   21e70:	ldr	r2, [r8, #4]
   21e74:	mla	r6, r2, r3, r6
   21e78:	add	r7, r7, #1
   21e7c:	ldr	r3, [sp, #204]	; 0xcc
   21e80:	ldr	r3, [r3, #4]
   21e84:	cmp	r3, r7
   21e88:	ble	3d6f0 <GetDataSlab+0x1c6e4>
   21e8c:	ldr	r3, [sp, #204]	; 0xcc
   21e90:	ldr	r3, [r3]
   21e94:	cmp	r3, #0
   21e98:	movgt	r4, #0
   21e9c:	bgt	21e38 <GetDataSlab+0xe2c>
   21ea0:	b	21e64 <GetDataSlab+0xe58>
   21ea4:	mla	r3, r2, r1, r0
   21ea8:	ldr	r2, [sp, #8]
   21eac:	add	r6, r2, r3, lsl #2
   21eb0:	cmp	lr, #0
   21eb4:	movle	r3, #0
   21eb8:	ble	24fa8 <GetDataSlab+0x3f9c>
   21ebc:	ldr	r5, [sp, #4]
   21ec0:	mov	r7, #0
   21ec4:	b	21f1c <GetDataSlab+0xf10>
   21ec8:	ldr	r3, [r8]
   21ecc:	mul	r3, r3, r4
   21ed0:	add	r3, r6, r3, lsl #2
   21ed4:	ldr	r0, [r3]
   21ed8:	bl	51e20 <__aeabi_f2lz>
   21edc:	strd	r0, [r5], #8
   21ee0:	add	r4, r4, #1
   21ee4:	ldr	r3, [sp, #204]	; 0xcc
   21ee8:	ldr	r3, [r3]
   21eec:	cmp	r3, r4
   21ef0:	bgt	21ec8 <GetDataSlab+0xebc>
   21ef4:	ldr	r3, [sp, #192]	; 0xc0
   21ef8:	ldr	r3, [r3]
   21efc:	lsl	r3, r3, #2
   21f00:	ldr	r2, [r8, #4]
   21f04:	mla	r6, r2, r3, r6
   21f08:	add	r7, r7, #1
   21f0c:	ldr	r3, [sp, #204]	; 0xcc
   21f10:	ldr	r3, [r3, #4]
   21f14:	cmp	r3, r7
   21f18:	ble	3d6f8 <GetDataSlab+0x1c6ec>
   21f1c:	ldr	r3, [sp, #204]	; 0xcc
   21f20:	ldr	r3, [r3]
   21f24:	cmp	r3, #0
   21f28:	movgt	r4, #0
   21f2c:	bgt	21ec8 <GetDataSlab+0xebc>
   21f30:	b	21ef4 <GetDataSlab+0xee8>
   21f34:	mla	r3, r2, r1, r0
   21f38:	ldr	r2, [sp, #8]
   21f3c:	add	ip, r2, r3, lsl #2
   21f40:	cmp	lr, #0
   21f44:	movle	r3, #0
   21f48:	ble	24fa8 <GetDataSlab+0x3f9c>
   21f4c:	ldr	r2, [sp, #4]
   21f50:	mov	lr, #0
   21f54:	b	21fac <GetDataSlab+0xfa0>
   21f58:	ldr	r1, [r8]
   21f5c:	mul	r1, r1, r3
   21f60:	ldr	r1, [ip, r1, lsl #2]
   21f64:	mov	r0, r1
   21f68:	asr	r1, r1, #31
   21f6c:	strd	r0, [r2], #8
   21f70:	add	r3, r3, #1
   21f74:	ldr	r1, [sp, #204]	; 0xcc
   21f78:	ldr	r1, [r1]
   21f7c:	cmp	r1, r3
   21f80:	bgt	21f58 <GetDataSlab+0xf4c>
   21f84:	ldr	r3, [sp, #192]	; 0xc0
   21f88:	ldr	r3, [r3]
   21f8c:	lsl	r3, r3, #2
   21f90:	ldr	r1, [r8, #4]
   21f94:	mla	ip, r1, r3, ip
   21f98:	add	lr, lr, #1
   21f9c:	ldr	r3, [sp, #204]	; 0xcc
   21fa0:	ldr	r3, [r3, #4]
   21fa4:	cmp	r3, lr
   21fa8:	ble	3d700 <GetDataSlab+0x1c6f4>
   21fac:	ldr	r3, [sp, #204]	; 0xcc
   21fb0:	ldr	r3, [r3]
   21fb4:	cmp	r3, #0
   21fb8:	movgt	r3, #0
   21fbc:	bgt	21f58 <GetDataSlab+0xf4c>
   21fc0:	b	21f84 <GetDataSlab+0xf78>
   21fc4:	mla	r3, r2, r1, r0
   21fc8:	ldr	r2, [sp, #8]
   21fcc:	add	r1, r2, r3, lsl #2
   21fd0:	cmp	lr, #0
   21fd4:	movle	r3, #0
   21fd8:	ble	24fa8 <GetDataSlab+0x3f9c>
   21fdc:	ldr	r2, [sp, #4]
   21fe0:	mov	lr, #0
   21fe4:	mov	ip, lr
   21fe8:	b	22040 <GetDataSlab+0x1034>
   21fec:	ldr	r0, [r8]
   21ff0:	mul	r0, r0, r3
   21ff4:	ldr	r0, [r1, r0, lsl #2]
   21ff8:	str	r0, [r2]
   21ffc:	str	ip, [r2, #4]
   22000:	add	r2, r2, #8
   22004:	add	r3, r3, #1
   22008:	ldr	r0, [sp, #204]	; 0xcc
   2200c:	ldr	r0, [r0]
   22010:	cmp	r0, r3
   22014:	bgt	21fec <GetDataSlab+0xfe0>
   22018:	ldr	r3, [sp, #192]	; 0xc0
   2201c:	ldr	r3, [r3]
   22020:	lsl	r3, r3, #2
   22024:	ldr	r0, [r8, #4]
   22028:	mla	r1, r0, r3, r1
   2202c:	add	lr, lr, #1
   22030:	ldr	r3, [sp, #204]	; 0xcc
   22034:	ldr	r3, [r3, #4]
   22038:	cmp	r3, lr
   2203c:	ble	3d708 <GetDataSlab+0x1c6fc>
   22040:	ldr	r3, [sp, #204]	; 0xcc
   22044:	ldr	r3, [r3]
   22048:	cmp	r3, #0
   2204c:	movgt	r3, #0
   22050:	bgt	21fec <GetDataSlab+0xfe0>
   22054:	b	22018 <GetDataSlab+0x100c>
   22058:	mla	r3, r2, r1, r0
   2205c:	ldr	r2, [sp, #8]
   22060:	add	ip, r2, r3, lsl #1
   22064:	cmp	lr, #0
   22068:	movle	r3, #0
   2206c:	ble	24fa8 <GetDataSlab+0x3f9c>
   22070:	ldr	r2, [sp, #4]
   22074:	mov	lr, #0
   22078:	b	220d0 <GetDataSlab+0x10c4>
   2207c:	ldr	r1, [r8]
   22080:	mul	r1, r1, r3
   22084:	lsl	r1, r1, #1
   22088:	ldrsh	r0, [ip, r1]
   2208c:	asr	r1, r0, #31
   22090:	strd	r0, [r2], #8
   22094:	add	r3, r3, #1
   22098:	ldr	r1, [sp, #204]	; 0xcc
   2209c:	ldr	r1, [r1]
   220a0:	cmp	r1, r3
   220a4:	bgt	2207c <GetDataSlab+0x1070>
   220a8:	ldr	r3, [sp, #192]	; 0xc0
   220ac:	ldr	r3, [r3]
   220b0:	lsl	r3, r3, #1
   220b4:	ldr	r1, [r8, #4]
   220b8:	mla	ip, r1, r3, ip
   220bc:	add	lr, lr, #1
   220c0:	ldr	r3, [sp, #204]	; 0xcc
   220c4:	ldr	r3, [r3, #4]
   220c8:	cmp	r3, lr
   220cc:	ble	3d710 <GetDataSlab+0x1c704>
   220d0:	ldr	r3, [sp, #204]	; 0xcc
   220d4:	ldr	r3, [r3]
   220d8:	cmp	r3, #0
   220dc:	movgt	r3, #0
   220e0:	bgt	2207c <GetDataSlab+0x1070>
   220e4:	b	220a8 <GetDataSlab+0x109c>
   220e8:	mla	r3, r2, r1, r0
   220ec:	ldr	r2, [sp, #8]
   220f0:	add	ip, r2, r3, lsl #1
   220f4:	cmp	lr, #0
   220f8:	movle	r3, #0
   220fc:	ble	24fa8 <GetDataSlab+0x3f9c>
   22100:	ldr	r2, [sp, #4]
   22104:	mov	lr, #0
   22108:	b	22160 <GetDataSlab+0x1154>
   2210c:	ldr	r1, [r8]
   22110:	mul	r1, r1, r3
   22114:	lsl	r1, r1, #1
   22118:	ldrh	r0, [ip, r1]
   2211c:	mov	r1, #0
   22120:	strd	r0, [r2], #8
   22124:	add	r3, r3, #1
   22128:	ldr	r1, [sp, #204]	; 0xcc
   2212c:	ldr	r1, [r1]
   22130:	cmp	r1, r3
   22134:	bgt	2210c <GetDataSlab+0x1100>
   22138:	ldr	r3, [sp, #192]	; 0xc0
   2213c:	ldr	r3, [r3]
   22140:	lsl	r3, r3, #1
   22144:	ldr	r1, [r8, #4]
   22148:	mla	ip, r1, r3, ip
   2214c:	add	lr, lr, #1
   22150:	ldr	r3, [sp, #204]	; 0xcc
   22154:	ldr	r3, [r3, #4]
   22158:	cmp	r3, lr
   2215c:	ble	3d718 <GetDataSlab+0x1c70c>
   22160:	ldr	r3, [sp, #204]	; 0xcc
   22164:	ldr	r3, [r3]
   22168:	cmp	r3, #0
   2216c:	movgt	r3, #0
   22170:	bgt	2210c <GetDataSlab+0x1100>
   22174:	b	22138 <GetDataSlab+0x112c>
   22178:	mla	r3, r2, r1, r0
   2217c:	ldr	r2, [sp, #8]
   22180:	add	ip, r2, r3
   22184:	cmp	lr, #0
   22188:	movle	r3, #0
   2218c:	ble	24fa8 <GetDataSlab+0x3f9c>
   22190:	ldr	r2, [sp, #4]
   22194:	mov	lr, #0
   22198:	b	221e8 <GetDataSlab+0x11dc>
   2219c:	ldr	r1, [r8]
   221a0:	mul	r1, r1, r3
   221a4:	ldrsb	r0, [ip, r1]
   221a8:	asr	r1, r0, #31
   221ac:	strd	r0, [r2], #8
   221b0:	add	r3, r3, #1
   221b4:	ldr	r1, [sp, #204]	; 0xcc
   221b8:	ldr	r1, [r1]
   221bc:	cmp	r1, r3
   221c0:	bgt	2219c <GetDataSlab+0x1190>
   221c4:	ldr	r3, [r8, #4]
   221c8:	ldr	r1, [sp, #192]	; 0xc0
   221cc:	ldr	r1, [r1]
   221d0:	mla	ip, r1, r3, ip
   221d4:	add	lr, lr, #1
   221d8:	ldr	r3, [sp, #204]	; 0xcc
   221dc:	ldr	r3, [r3, #4]
   221e0:	cmp	r3, lr
   221e4:	ble	3d720 <GetDataSlab+0x1c714>
   221e8:	ldr	r3, [sp, #204]	; 0xcc
   221ec:	ldr	r3, [r3]
   221f0:	cmp	r3, #0
   221f4:	movgt	r3, #0
   221f8:	bgt	2219c <GetDataSlab+0x1190>
   221fc:	b	221c4 <GetDataSlab+0x11b8>
   22200:	mla	r3, r2, r1, r0
   22204:	ldr	r2, [sp, #8]
   22208:	add	ip, r2, r3
   2220c:	cmp	lr, #0
   22210:	movle	r3, #0
   22214:	ble	24fa8 <GetDataSlab+0x3f9c>
   22218:	ldr	r2, [sp, #4]
   2221c:	mov	lr, #0
   22220:	b	22270 <GetDataSlab+0x1264>
   22224:	ldr	r1, [r8]
   22228:	mul	r1, r1, r3
   2222c:	ldrb	r0, [ip, r1]
   22230:	mov	r1, #0
   22234:	strd	r0, [r2], #8
   22238:	add	r3, r3, #1
   2223c:	ldr	r1, [sp, #204]	; 0xcc
   22240:	ldr	r1, [r1]
   22244:	cmp	r1, r3
   22248:	bgt	22224 <GetDataSlab+0x1218>
   2224c:	ldr	r3, [r8, #4]
   22250:	ldr	r1, [sp, #192]	; 0xc0
   22254:	ldr	r1, [r1]
   22258:	mla	ip, r1, r3, ip
   2225c:	add	lr, lr, #1
   22260:	ldr	r3, [sp, #204]	; 0xcc
   22264:	ldr	r3, [r3, #4]
   22268:	cmp	r3, lr
   2226c:	ble	3d728 <GetDataSlab+0x1c71c>
   22270:	ldr	r3, [sp, #204]	; 0xcc
   22274:	ldr	r3, [r3]
   22278:	cmp	r3, #0
   2227c:	movgt	r3, #0
   22280:	bgt	22224 <GetDataSlab+0x1218>
   22284:	b	2224c <GetDataSlab+0x1240>
   22288:	cmp	r4, #12
   2228c:	beq	222c0 <GetDataSlab+0x12b4>
   22290:	cmp	r4, #13
   22294:	movne	r3, #1
   22298:	bne	24fa8 <GetDataSlab+0x3f9c>
   2229c:	mla	r3, r2, r1, r0
   222a0:	ldr	r2, [sp, #8]
   222a4:	add	ip, r2, r3, lsl #3
   222a8:	cmp	lr, #0
   222ac:	movle	r3, #0
   222b0:	ble	24fa8 <GetDataSlab+0x3f9c>
   222b4:	ldr	r2, [sp, #4]
   222b8:	mov	lr, #0
   222bc:	b	2239c <GetDataSlab+0x1390>
   222c0:	mla	r3, r2, r1, r0
   222c4:	ldr	r2, [sp, #8]
   222c8:	add	ip, r2, r3, lsl #3
   222cc:	cmp	lr, #0
   222d0:	ldrgt	r2, [sp, #4]
   222d4:	movgt	lr, #0
   222d8:	bgt	22334 <GetDataSlab+0x1328>
   222dc:	mov	r3, #0
   222e0:	b	24fa8 <GetDataSlab+0x3f9c>
   222e4:	ldr	r1, [r8]
   222e8:	mul	r1, r1, r3
   222ec:	lsl	r1, r1, #3
   222f0:	ldrd	r0, [r1, ip]
   222f4:	strd	r0, [r2], #8
   222f8:	add	r3, r3, #1
   222fc:	ldr	r1, [sp, #204]	; 0xcc
   22300:	ldr	r1, [r1]
   22304:	cmp	r1, r3
   22308:	bgt	222e4 <GetDataSlab+0x12d8>
   2230c:	ldr	r3, [sp, #192]	; 0xc0
   22310:	ldr	r3, [r3]
   22314:	lsl	r3, r3, #3
   22318:	ldr	r1, [r8, #4]
   2231c:	mla	ip, r1, r3, ip
   22320:	add	lr, lr, #1
   22324:	ldr	r3, [sp, #204]	; 0xcc
   22328:	ldr	r3, [r3, #4]
   2232c:	cmp	r3, lr
   22330:	ble	222dc <GetDataSlab+0x12d0>
   22334:	ldr	r3, [sp, #204]	; 0xcc
   22338:	ldr	r3, [r3]
   2233c:	cmp	r3, #0
   22340:	movgt	r3, #0
   22344:	bgt	222e4 <GetDataSlab+0x12d8>
   22348:	b	2230c <GetDataSlab+0x1300>
   2234c:	ldr	r1, [r8]
   22350:	mul	r1, r1, r3
   22354:	lsl	r1, r1, #3
   22358:	ldrd	r0, [r1, ip]
   2235c:	strd	r0, [r2], #8
   22360:	add	r3, r3, #1
   22364:	ldr	r1, [sp, #204]	; 0xcc
   22368:	ldr	r1, [r1]
   2236c:	cmp	r1, r3
   22370:	bgt	2234c <GetDataSlab+0x1340>
   22374:	ldr	r3, [sp, #192]	; 0xc0
   22378:	ldr	r3, [r3]
   2237c:	lsl	r3, r3, #3
   22380:	ldr	r1, [r8, #4]
   22384:	mla	ip, r1, r3, ip
   22388:	add	lr, lr, #1
   2238c:	ldr	r3, [sp, #204]	; 0xcc
   22390:	ldr	r3, [r3, #4]
   22394:	cmp	r3, lr
   22398:	ble	3d730 <GetDataSlab+0x1c724>
   2239c:	ldr	r3, [sp, #204]	; 0xcc
   223a0:	ldr	r3, [r3]
   223a4:	cmp	r3, #0
   223a8:	movgt	r3, #0
   223ac:	bgt	2234c <GetDataSlab+0x1340>
   223b0:	b	22374 <GetDataSlab+0x1368>
   223b4:	sub	r3, r4, #1
   223b8:	cmp	r3, #8
   223bc:	addls	pc, pc, r3, lsl #2
   223c0:	b	2285c <GetDataSlab+0x1850>
   223c4:	b	2274c <GetDataSlab+0x1740>
   223c8:	b	227d4 <GetDataSlab+0x17c8>
   223cc:	b	2262c <GetDataSlab+0x1620>
   223d0:	b	226bc <GetDataSlab+0x16b0>
   223d4:	b	22508 <GetDataSlab+0x14fc>
   223d8:	b	22598 <GetDataSlab+0x158c>
   223dc:	b	22478 <GetDataSlab+0x146c>
   223e0:	b	2285c <GetDataSlab+0x1850>
   223e4:	b	223e8 <GetDataSlab+0x13dc>
   223e8:	mla	r3, r2, r1, r0
   223ec:	ldr	r2, [sp, #8]
   223f0:	add	r6, r2, r3, lsl #3
   223f4:	cmp	lr, #0
   223f8:	movle	r3, #0
   223fc:	ble	24fa8 <GetDataSlab+0x3f9c>
   22400:	ldr	r5, [sp, #4]
   22404:	mov	r7, #0
   22408:	b	22460 <GetDataSlab+0x1454>
   2240c:	ldr	r3, [r8]
   22410:	mul	r3, r3, r4
   22414:	add	r3, r6, r3, lsl #3
   22418:	ldrd	r0, [r3]
   2241c:	bl	51ec0 <__aeabi_d2ulz>
   22420:	strd	r0, [r5], #8
   22424:	add	r4, r4, #1
   22428:	ldr	r3, [sp, #204]	; 0xcc
   2242c:	ldr	r3, [r3]
   22430:	cmp	r3, r4
   22434:	bgt	2240c <GetDataSlab+0x1400>
   22438:	ldr	r3, [sp, #192]	; 0xc0
   2243c:	ldr	r3, [r3]
   22440:	lsl	r3, r3, #3
   22444:	ldr	r2, [r8, #4]
   22448:	mla	r6, r2, r3, r6
   2244c:	add	r7, r7, #1
   22450:	ldr	r3, [sp, #204]	; 0xcc
   22454:	ldr	r3, [r3, #4]
   22458:	cmp	r3, r7
   2245c:	ble	3d738 <GetDataSlab+0x1c72c>
   22460:	ldr	r3, [sp, #204]	; 0xcc
   22464:	ldr	r3, [r3]
   22468:	cmp	r3, #0
   2246c:	movgt	r4, #0
   22470:	bgt	2240c <GetDataSlab+0x1400>
   22474:	b	22438 <GetDataSlab+0x142c>
   22478:	mla	r3, r2, r1, r0
   2247c:	ldr	r2, [sp, #8]
   22480:	add	r6, r2, r3, lsl #2
   22484:	cmp	lr, #0
   22488:	movle	r3, #0
   2248c:	ble	24fa8 <GetDataSlab+0x3f9c>
   22490:	ldr	r5, [sp, #4]
   22494:	mov	r7, #0
   22498:	b	224f0 <GetDataSlab+0x14e4>
   2249c:	ldr	r3, [r8]
   224a0:	mul	r3, r3, r4
   224a4:	add	r3, r6, r3, lsl #2
   224a8:	ldr	r0, [r3]
   224ac:	bl	51e78 <__aeabi_f2ulz>
   224b0:	strd	r0, [r5], #8
   224b4:	add	r4, r4, #1
   224b8:	ldr	r3, [sp, #204]	; 0xcc
   224bc:	ldr	r3, [r3]
   224c0:	cmp	r3, r4
   224c4:	bgt	2249c <GetDataSlab+0x1490>
   224c8:	ldr	r3, [sp, #192]	; 0xc0
   224cc:	ldr	r3, [r3]
   224d0:	lsl	r3, r3, #2
   224d4:	ldr	r2, [r8, #4]
   224d8:	mla	r6, r2, r3, r6
   224dc:	add	r7, r7, #1
   224e0:	ldr	r3, [sp, #204]	; 0xcc
   224e4:	ldr	r3, [r3, #4]
   224e8:	cmp	r3, r7
   224ec:	ble	3d740 <GetDataSlab+0x1c734>
   224f0:	ldr	r3, [sp, #204]	; 0xcc
   224f4:	ldr	r3, [r3]
   224f8:	cmp	r3, #0
   224fc:	movgt	r4, #0
   22500:	bgt	2249c <GetDataSlab+0x1490>
   22504:	b	224c8 <GetDataSlab+0x14bc>
   22508:	mla	r3, r2, r1, r0
   2250c:	ldr	r2, [sp, #8]
   22510:	add	ip, r2, r3, lsl #2
   22514:	cmp	lr, #0
   22518:	movle	r3, #0
   2251c:	ble	24fa8 <GetDataSlab+0x3f9c>
   22520:	ldr	r2, [sp, #4]
   22524:	mov	lr, #0
   22528:	b	22580 <GetDataSlab+0x1574>
   2252c:	ldr	r1, [r8]
   22530:	mul	r1, r1, r3
   22534:	ldr	r1, [ip, r1, lsl #2]
   22538:	mov	r0, r1
   2253c:	asr	r1, r1, #31
   22540:	strd	r0, [r2], #8
   22544:	add	r3, r3, #1
   22548:	ldr	r1, [sp, #204]	; 0xcc
   2254c:	ldr	r1, [r1]
   22550:	cmp	r1, r3
   22554:	bgt	2252c <GetDataSlab+0x1520>
   22558:	ldr	r3, [sp, #192]	; 0xc0
   2255c:	ldr	r3, [r3]
   22560:	lsl	r3, r3, #2
   22564:	ldr	r1, [r8, #4]
   22568:	mla	ip, r1, r3, ip
   2256c:	add	lr, lr, #1
   22570:	ldr	r3, [sp, #204]	; 0xcc
   22574:	ldr	r3, [r3, #4]
   22578:	cmp	r3, lr
   2257c:	ble	3d748 <GetDataSlab+0x1c73c>
   22580:	ldr	r3, [sp, #204]	; 0xcc
   22584:	ldr	r3, [r3]
   22588:	cmp	r3, #0
   2258c:	movgt	r3, #0
   22590:	bgt	2252c <GetDataSlab+0x1520>
   22594:	b	22558 <GetDataSlab+0x154c>
   22598:	mla	r3, r2, r1, r0
   2259c:	ldr	r2, [sp, #8]
   225a0:	add	r1, r2, r3, lsl #2
   225a4:	cmp	lr, #0
   225a8:	movle	r3, #0
   225ac:	ble	24fa8 <GetDataSlab+0x3f9c>
   225b0:	ldr	r2, [sp, #4]
   225b4:	mov	lr, #0
   225b8:	mov	ip, lr
   225bc:	b	22614 <GetDataSlab+0x1608>
   225c0:	ldr	r0, [r8]
   225c4:	mul	r0, r0, r3
   225c8:	ldr	r0, [r1, r0, lsl #2]
   225cc:	str	r0, [r2]
   225d0:	str	ip, [r2, #4]
   225d4:	add	r2, r2, #8
   225d8:	add	r3, r3, #1
   225dc:	ldr	r0, [sp, #204]	; 0xcc
   225e0:	ldr	r0, [r0]
   225e4:	cmp	r0, r3
   225e8:	bgt	225c0 <GetDataSlab+0x15b4>
   225ec:	ldr	r3, [sp, #192]	; 0xc0
   225f0:	ldr	r3, [r3]
   225f4:	lsl	r3, r3, #2
   225f8:	ldr	r0, [r8, #4]
   225fc:	mla	r1, r0, r3, r1
   22600:	add	lr, lr, #1
   22604:	ldr	r3, [sp, #204]	; 0xcc
   22608:	ldr	r3, [r3, #4]
   2260c:	cmp	r3, lr
   22610:	ble	3d750 <GetDataSlab+0x1c744>
   22614:	ldr	r3, [sp, #204]	; 0xcc
   22618:	ldr	r3, [r3]
   2261c:	cmp	r3, #0
   22620:	movgt	r3, #0
   22624:	bgt	225c0 <GetDataSlab+0x15b4>
   22628:	b	225ec <GetDataSlab+0x15e0>
   2262c:	mla	r3, r2, r1, r0
   22630:	ldr	r2, [sp, #8]
   22634:	add	ip, r2, r3, lsl #1
   22638:	cmp	lr, #0
   2263c:	movle	r3, #0
   22640:	ble	24fa8 <GetDataSlab+0x3f9c>
   22644:	ldr	r2, [sp, #4]
   22648:	mov	lr, #0
   2264c:	b	226a4 <GetDataSlab+0x1698>
   22650:	ldr	r1, [r8]
   22654:	mul	r1, r1, r3
   22658:	lsl	r1, r1, #1
   2265c:	ldrsh	r0, [ip, r1]
   22660:	asr	r1, r0, #31
   22664:	strd	r0, [r2], #8
   22668:	add	r3, r3, #1
   2266c:	ldr	r1, [sp, #204]	; 0xcc
   22670:	ldr	r1, [r1]
   22674:	cmp	r1, r3
   22678:	bgt	22650 <GetDataSlab+0x1644>
   2267c:	ldr	r3, [sp, #192]	; 0xc0
   22680:	ldr	r3, [r3]
   22684:	lsl	r3, r3, #1
   22688:	ldr	r1, [r8, #4]
   2268c:	mla	ip, r1, r3, ip
   22690:	add	lr, lr, #1
   22694:	ldr	r3, [sp, #204]	; 0xcc
   22698:	ldr	r3, [r3, #4]
   2269c:	cmp	r3, lr
   226a0:	ble	3d758 <GetDataSlab+0x1c74c>
   226a4:	ldr	r3, [sp, #204]	; 0xcc
   226a8:	ldr	r3, [r3]
   226ac:	cmp	r3, #0
   226b0:	movgt	r3, #0
   226b4:	bgt	22650 <GetDataSlab+0x1644>
   226b8:	b	2267c <GetDataSlab+0x1670>
   226bc:	mla	r3, r2, r1, r0
   226c0:	ldr	r2, [sp, #8]
   226c4:	add	ip, r2, r3, lsl #1
   226c8:	cmp	lr, #0
   226cc:	movle	r3, #0
   226d0:	ble	24fa8 <GetDataSlab+0x3f9c>
   226d4:	ldr	r2, [sp, #4]
   226d8:	mov	lr, #0
   226dc:	b	22734 <GetDataSlab+0x1728>
   226e0:	ldr	r1, [r8]
   226e4:	mul	r1, r1, r3
   226e8:	lsl	r1, r1, #1
   226ec:	ldrh	r0, [ip, r1]
   226f0:	mov	r1, #0
   226f4:	strd	r0, [r2], #8
   226f8:	add	r3, r3, #1
   226fc:	ldr	r1, [sp, #204]	; 0xcc
   22700:	ldr	r1, [r1]
   22704:	cmp	r1, r3
   22708:	bgt	226e0 <GetDataSlab+0x16d4>
   2270c:	ldr	r3, [sp, #192]	; 0xc0
   22710:	ldr	r3, [r3]
   22714:	lsl	r3, r3, #1
   22718:	ldr	r1, [r8, #4]
   2271c:	mla	ip, r1, r3, ip
   22720:	add	lr, lr, #1
   22724:	ldr	r3, [sp, #204]	; 0xcc
   22728:	ldr	r3, [r3, #4]
   2272c:	cmp	r3, lr
   22730:	ble	3d760 <GetDataSlab+0x1c754>
   22734:	ldr	r3, [sp, #204]	; 0xcc
   22738:	ldr	r3, [r3]
   2273c:	cmp	r3, #0
   22740:	movgt	r3, #0
   22744:	bgt	226e0 <GetDataSlab+0x16d4>
   22748:	b	2270c <GetDataSlab+0x1700>
   2274c:	mla	r3, r2, r1, r0
   22750:	ldr	r2, [sp, #8]
   22754:	add	ip, r2, r3
   22758:	cmp	lr, #0
   2275c:	movle	r3, #0
   22760:	ble	24fa8 <GetDataSlab+0x3f9c>
   22764:	ldr	r2, [sp, #4]
   22768:	mov	lr, #0
   2276c:	b	227bc <GetDataSlab+0x17b0>
   22770:	ldr	r1, [r8]
   22774:	mul	r1, r1, r3
   22778:	ldrsb	r0, [ip, r1]
   2277c:	asr	r1, r0, #31
   22780:	strd	r0, [r2], #8
   22784:	add	r3, r3, #1
   22788:	ldr	r1, [sp, #204]	; 0xcc
   2278c:	ldr	r1, [r1]
   22790:	cmp	r1, r3
   22794:	bgt	22770 <GetDataSlab+0x1764>
   22798:	ldr	r3, [r8, #4]
   2279c:	ldr	r1, [sp, #192]	; 0xc0
   227a0:	ldr	r1, [r1]
   227a4:	mla	ip, r1, r3, ip
   227a8:	add	lr, lr, #1
   227ac:	ldr	r3, [sp, #204]	; 0xcc
   227b0:	ldr	r3, [r3, #4]
   227b4:	cmp	r3, lr
   227b8:	ble	3d768 <GetDataSlab+0x1c75c>
   227bc:	ldr	r3, [sp, #204]	; 0xcc
   227c0:	ldr	r3, [r3]
   227c4:	cmp	r3, #0
   227c8:	movgt	r3, #0
   227cc:	bgt	22770 <GetDataSlab+0x1764>
   227d0:	b	22798 <GetDataSlab+0x178c>
   227d4:	mla	r3, r2, r1, r0
   227d8:	ldr	r2, [sp, #8]
   227dc:	add	ip, r2, r3
   227e0:	cmp	lr, #0
   227e4:	movle	r3, #0
   227e8:	ble	24fa8 <GetDataSlab+0x3f9c>
   227ec:	ldr	r2, [sp, #4]
   227f0:	mov	lr, #0
   227f4:	b	22844 <GetDataSlab+0x1838>
   227f8:	ldr	r1, [r8]
   227fc:	mul	r1, r1, r3
   22800:	ldrb	r0, [ip, r1]
   22804:	mov	r1, #0
   22808:	strd	r0, [r2], #8
   2280c:	add	r3, r3, #1
   22810:	ldr	r1, [sp, #204]	; 0xcc
   22814:	ldr	r1, [r1]
   22818:	cmp	r1, r3
   2281c:	bgt	227f8 <GetDataSlab+0x17ec>
   22820:	ldr	r3, [r8, #4]
   22824:	ldr	r1, [sp, #192]	; 0xc0
   22828:	ldr	r1, [r1]
   2282c:	mla	ip, r1, r3, ip
   22830:	add	lr, lr, #1
   22834:	ldr	r3, [sp, #204]	; 0xcc
   22838:	ldr	r3, [r3, #4]
   2283c:	cmp	r3, lr
   22840:	ble	3d770 <GetDataSlab+0x1c764>
   22844:	ldr	r3, [sp, #204]	; 0xcc
   22848:	ldr	r3, [r3]
   2284c:	cmp	r3, #0
   22850:	movgt	r3, #0
   22854:	bgt	227f8 <GetDataSlab+0x17ec>
   22858:	b	22820 <GetDataSlab+0x1814>
   2285c:	cmp	r4, #12
   22860:	beq	22894 <GetDataSlab+0x1888>
   22864:	cmp	r4, #13
   22868:	movne	r3, #1
   2286c:	bne	24fa8 <GetDataSlab+0x3f9c>
   22870:	mla	r3, r2, r1, r0
   22874:	ldr	r2, [sp, #8]
   22878:	add	ip, r2, r3, lsl #3
   2287c:	cmp	lr, #0
   22880:	movle	r3, #0
   22884:	ble	24fa8 <GetDataSlab+0x3f9c>
   22888:	ldr	r2, [sp, #4]
   2288c:	mov	lr, #0
   22890:	b	22970 <GetDataSlab+0x1964>
   22894:	mla	r3, r2, r1, r0
   22898:	ldr	r2, [sp, #8]
   2289c:	add	ip, r2, r3, lsl #3
   228a0:	cmp	lr, #0
   228a4:	ldrgt	r2, [sp, #4]
   228a8:	movgt	lr, #0
   228ac:	bgt	22908 <GetDataSlab+0x18fc>
   228b0:	mov	r3, #0
   228b4:	b	24fa8 <GetDataSlab+0x3f9c>
   228b8:	ldr	r1, [r8]
   228bc:	mul	r1, r1, r3
   228c0:	lsl	r1, r1, #3
   228c4:	ldrd	r0, [r1, ip]
   228c8:	strd	r0, [r2], #8
   228cc:	add	r3, r3, #1
   228d0:	ldr	r1, [sp, #204]	; 0xcc
   228d4:	ldr	r1, [r1]
   228d8:	cmp	r1, r3
   228dc:	bgt	228b8 <GetDataSlab+0x18ac>
   228e0:	ldr	r3, [sp, #192]	; 0xc0
   228e4:	ldr	r3, [r3]
   228e8:	lsl	r3, r3, #3
   228ec:	ldr	r1, [r8, #4]
   228f0:	mla	ip, r1, r3, ip
   228f4:	add	lr, lr, #1
   228f8:	ldr	r3, [sp, #204]	; 0xcc
   228fc:	ldr	r3, [r3, #4]
   22900:	cmp	r3, lr
   22904:	ble	228b0 <GetDataSlab+0x18a4>
   22908:	ldr	r3, [sp, #204]	; 0xcc
   2290c:	ldr	r3, [r3]
   22910:	cmp	r3, #0
   22914:	movgt	r3, #0
   22918:	bgt	228b8 <GetDataSlab+0x18ac>
   2291c:	b	228e0 <GetDataSlab+0x18d4>
   22920:	ldr	r1, [r8]
   22924:	mul	r1, r1, r3
   22928:	lsl	r1, r1, #3
   2292c:	ldrd	r0, [r1, ip]
   22930:	strd	r0, [r2], #8
   22934:	add	r3, r3, #1
   22938:	ldr	r1, [sp, #204]	; 0xcc
   2293c:	ldr	r1, [r1]
   22940:	cmp	r1, r3
   22944:	bgt	22920 <GetDataSlab+0x1914>
   22948:	ldr	r3, [sp, #192]	; 0xc0
   2294c:	ldr	r3, [r3]
   22950:	lsl	r3, r3, #3
   22954:	ldr	r1, [r8, #4]
   22958:	mla	ip, r1, r3, ip
   2295c:	add	lr, lr, #1
   22960:	ldr	r3, [sp, #204]	; 0xcc
   22964:	ldr	r3, [r3, #4]
   22968:	cmp	r3, lr
   2296c:	ble	3d778 <GetDataSlab+0x1c76c>
   22970:	ldr	r3, [sp, #204]	; 0xcc
   22974:	ldr	r3, [r3]
   22978:	cmp	r3, #0
   2297c:	movgt	r3, #0
   22980:	bgt	22920 <GetDataSlab+0x1914>
   22984:	b	22948 <GetDataSlab+0x193c>
   22988:	sub	r3, r4, #1
   2298c:	cmp	r3, #8
   22990:	addls	pc, pc, r3, lsl #2
   22994:	b	22e0c <GetDataSlab+0x1e00>
   22998:	b	22d04 <GetDataSlab+0x1cf8>
   2299c:	b	22d88 <GetDataSlab+0x1d7c>
   229a0:	b	22bec <GetDataSlab+0x1be0>
   229a4:	b	22c78 <GetDataSlab+0x1c6c>
   229a8:	b	22adc <GetDataSlab+0x1ad0>
   229ac:	b	22b64 <GetDataSlab+0x1b58>
   229b0:	b	22a4c <GetDataSlab+0x1a40>
   229b4:	b	22e0c <GetDataSlab+0x1e00>
   229b8:	b	229bc <GetDataSlab+0x19b0>
   229bc:	mla	r3, r2, r1, r0
   229c0:	ldr	r2, [sp, #8]
   229c4:	add	r0, r2, r3, lsl #3
   229c8:	cmp	lr, #0
   229cc:	movle	r3, #0
   229d0:	ble	24fa8 <GetDataSlab+0x3f9c>
   229d4:	ldr	r2, [sp, #4]
   229d8:	mov	ip, #0
   229dc:	b	22a34 <GetDataSlab+0x1a28>
   229e0:	ldr	r1, [r8]
   229e4:	mul	r1, r1, r3
   229e8:	add	r1, r0, r1, lsl #3
   229ec:	vldr	d7, [r1]
   229f0:	vcvt.s32.f64	s15, d7
   229f4:	vstmia	r2!, {s15}
   229f8:	add	r3, r3, #1
   229fc:	ldr	r1, [sp, #204]	; 0xcc
   22a00:	ldr	r1, [r1]
   22a04:	cmp	r1, r3
   22a08:	bgt	229e0 <GetDataSlab+0x19d4>
   22a0c:	ldr	r3, [sp, #192]	; 0xc0
   22a10:	ldr	r3, [r3]
   22a14:	lsl	r3, r3, #3
   22a18:	ldr	r1, [r8, #4]
   22a1c:	mla	r0, r1, r3, r0
   22a20:	add	ip, ip, #1
   22a24:	ldr	r3, [sp, #204]	; 0xcc
   22a28:	ldr	r3, [r3, #4]
   22a2c:	cmp	r3, ip
   22a30:	ble	3d780 <GetDataSlab+0x1c774>
   22a34:	ldr	r3, [sp, #204]	; 0xcc
   22a38:	ldr	r3, [r3]
   22a3c:	cmp	r3, #0
   22a40:	movgt	r3, #0
   22a44:	bgt	229e0 <GetDataSlab+0x19d4>
   22a48:	b	22a0c <GetDataSlab+0x1a00>
   22a4c:	mla	r3, r2, r1, r0
   22a50:	ldr	r2, [sp, #8]
   22a54:	add	r0, r2, r3, lsl #2
   22a58:	cmp	lr, #0
   22a5c:	movle	r3, #0
   22a60:	ble	24fa8 <GetDataSlab+0x3f9c>
   22a64:	ldr	r2, [sp, #4]
   22a68:	mov	ip, #0
   22a6c:	b	22ac4 <GetDataSlab+0x1ab8>
   22a70:	ldr	r1, [r8]
   22a74:	mul	r1, r1, r3
   22a78:	add	r1, r0, r1, lsl #2
   22a7c:	vldr	s15, [r1]
   22a80:	vcvt.s32.f32	s15, s15
   22a84:	vstmia	r2!, {s15}
   22a88:	add	r3, r3, #1
   22a8c:	ldr	r1, [sp, #204]	; 0xcc
   22a90:	ldr	r1, [r1]
   22a94:	cmp	r1, r3
   22a98:	bgt	22a70 <GetDataSlab+0x1a64>
   22a9c:	ldr	r3, [sp, #192]	; 0xc0
   22aa0:	ldr	r3, [r3]
   22aa4:	lsl	r3, r3, #2
   22aa8:	ldr	r1, [r8, #4]
   22aac:	mla	r0, r1, r3, r0
   22ab0:	add	ip, ip, #1
   22ab4:	ldr	r3, [sp, #204]	; 0xcc
   22ab8:	ldr	r3, [r3, #4]
   22abc:	cmp	r3, ip
   22ac0:	ble	3d788 <GetDataSlab+0x1c77c>
   22ac4:	ldr	r3, [sp, #204]	; 0xcc
   22ac8:	ldr	r3, [r3]
   22acc:	cmp	r3, #0
   22ad0:	movgt	r3, #0
   22ad4:	bgt	22a70 <GetDataSlab+0x1a64>
   22ad8:	b	22a9c <GetDataSlab+0x1a90>
   22adc:	mla	r3, r2, r1, r0
   22ae0:	ldr	r2, [sp, #8]
   22ae4:	add	r0, r2, r3, lsl #2
   22ae8:	cmp	lr, #0
   22aec:	movle	r3, #0
   22af0:	ble	24fa8 <GetDataSlab+0x3f9c>
   22af4:	ldr	r2, [sp, #4]
   22af8:	mov	ip, #0
   22afc:	b	22b4c <GetDataSlab+0x1b40>
   22b00:	ldr	r1, [r8]
   22b04:	mul	r1, r1, r3
   22b08:	ldr	r1, [r0, r1, lsl #2]
   22b0c:	str	r1, [r2], #4
   22b10:	add	r3, r3, #1
   22b14:	ldr	r1, [sp, #204]	; 0xcc
   22b18:	ldr	r1, [r1]
   22b1c:	cmp	r1, r3
   22b20:	bgt	22b00 <GetDataSlab+0x1af4>
   22b24:	ldr	r3, [sp, #192]	; 0xc0
   22b28:	ldr	r3, [r3]
   22b2c:	lsl	r3, r3, #2
   22b30:	ldr	r1, [r8, #4]
   22b34:	mla	r0, r1, r3, r0
   22b38:	add	ip, ip, #1
   22b3c:	ldr	r3, [sp, #204]	; 0xcc
   22b40:	ldr	r3, [r3, #4]
   22b44:	cmp	r3, ip
   22b48:	ble	3d790 <GetDataSlab+0x1c784>
   22b4c:	ldr	r3, [sp, #204]	; 0xcc
   22b50:	ldr	r3, [r3]
   22b54:	cmp	r3, #0
   22b58:	movgt	r3, #0
   22b5c:	bgt	22b00 <GetDataSlab+0x1af4>
   22b60:	b	22b24 <GetDataSlab+0x1b18>
   22b64:	mla	r3, r2, r1, r0
   22b68:	ldr	r2, [sp, #8]
   22b6c:	add	r0, r2, r3, lsl #2
   22b70:	cmp	lr, #0
   22b74:	movle	r3, #0
   22b78:	ble	24fa8 <GetDataSlab+0x3f9c>
   22b7c:	ldr	r2, [sp, #4]
   22b80:	mov	ip, #0
   22b84:	b	22bd4 <GetDataSlab+0x1bc8>
   22b88:	ldr	r1, [r8]
   22b8c:	mul	r1, r1, r3
   22b90:	ldr	r1, [r0, r1, lsl #2]
   22b94:	str	r1, [r2], #4
   22b98:	add	r3, r3, #1
   22b9c:	ldr	r1, [sp, #204]	; 0xcc
   22ba0:	ldr	r1, [r1]
   22ba4:	cmp	r1, r3
   22ba8:	bgt	22b88 <GetDataSlab+0x1b7c>
   22bac:	ldr	r3, [sp, #192]	; 0xc0
   22bb0:	ldr	r3, [r3]
   22bb4:	lsl	r3, r3, #2
   22bb8:	ldr	r1, [r8, #4]
   22bbc:	mla	r0, r1, r3, r0
   22bc0:	add	ip, ip, #1
   22bc4:	ldr	r3, [sp, #204]	; 0xcc
   22bc8:	ldr	r3, [r3, #4]
   22bcc:	cmp	r3, ip
   22bd0:	ble	3d798 <GetDataSlab+0x1c78c>
   22bd4:	ldr	r3, [sp, #204]	; 0xcc
   22bd8:	ldr	r3, [r3]
   22bdc:	cmp	r3, #0
   22be0:	movgt	r3, #0
   22be4:	bgt	22b88 <GetDataSlab+0x1b7c>
   22be8:	b	22bac <GetDataSlab+0x1ba0>
   22bec:	mla	r3, r2, r1, r0
   22bf0:	ldr	r2, [sp, #8]
   22bf4:	add	r0, r2, r3, lsl #1
   22bf8:	cmp	lr, #0
   22bfc:	movle	r3, #0
   22c00:	ble	24fa8 <GetDataSlab+0x3f9c>
   22c04:	ldr	r2, [sp, #4]
   22c08:	mov	ip, #0
   22c0c:	b	22c60 <GetDataSlab+0x1c54>
   22c10:	ldr	r1, [r8]
   22c14:	mul	r1, r1, r3
   22c18:	lsl	r1, r1, #1
   22c1c:	ldrsh	r1, [r0, r1]
   22c20:	str	r1, [r2], #4
   22c24:	add	r3, r3, #1
   22c28:	ldr	r1, [sp, #204]	; 0xcc
   22c2c:	ldr	r1, [r1]
   22c30:	cmp	r1, r3
   22c34:	bgt	22c10 <GetDataSlab+0x1c04>
   22c38:	ldr	r3, [sp, #192]	; 0xc0
   22c3c:	ldr	r3, [r3]
   22c40:	lsl	r3, r3, #1
   22c44:	ldr	r1, [r8, #4]
   22c48:	mla	r0, r1, r3, r0
   22c4c:	add	ip, ip, #1
   22c50:	ldr	r3, [sp, #204]	; 0xcc
   22c54:	ldr	r3, [r3, #4]
   22c58:	cmp	r3, ip
   22c5c:	ble	3d7a0 <GetDataSlab+0x1c794>
   22c60:	ldr	r3, [sp, #204]	; 0xcc
   22c64:	ldr	r3, [r3]
   22c68:	cmp	r3, #0
   22c6c:	movgt	r3, #0
   22c70:	bgt	22c10 <GetDataSlab+0x1c04>
   22c74:	b	22c38 <GetDataSlab+0x1c2c>
   22c78:	mla	r3, r2, r1, r0
   22c7c:	ldr	r2, [sp, #8]
   22c80:	add	r0, r2, r3, lsl #1
   22c84:	cmp	lr, #0
   22c88:	movle	r3, #0
   22c8c:	ble	24fa8 <GetDataSlab+0x3f9c>
   22c90:	ldr	r2, [sp, #4]
   22c94:	mov	ip, #0
   22c98:	b	22cec <GetDataSlab+0x1ce0>
   22c9c:	ldr	r1, [r8]
   22ca0:	mul	r1, r1, r3
   22ca4:	lsl	r1, r1, #1
   22ca8:	ldrh	r1, [r0, r1]
   22cac:	str	r1, [r2], #4
   22cb0:	add	r3, r3, #1
   22cb4:	ldr	r1, [sp, #204]	; 0xcc
   22cb8:	ldr	r1, [r1]
   22cbc:	cmp	r1, r3
   22cc0:	bgt	22c9c <GetDataSlab+0x1c90>
   22cc4:	ldr	r3, [sp, #192]	; 0xc0
   22cc8:	ldr	r3, [r3]
   22ccc:	lsl	r3, r3, #1
   22cd0:	ldr	r1, [r8, #4]
   22cd4:	mla	r0, r1, r3, r0
   22cd8:	add	ip, ip, #1
   22cdc:	ldr	r3, [sp, #204]	; 0xcc
   22ce0:	ldr	r3, [r3, #4]
   22ce4:	cmp	r3, ip
   22ce8:	ble	3d7a8 <GetDataSlab+0x1c79c>
   22cec:	ldr	r3, [sp, #204]	; 0xcc
   22cf0:	ldr	r3, [r3]
   22cf4:	cmp	r3, #0
   22cf8:	movgt	r3, #0
   22cfc:	bgt	22c9c <GetDataSlab+0x1c90>
   22d00:	b	22cc4 <GetDataSlab+0x1cb8>
   22d04:	mla	r3, r2, r1, r0
   22d08:	ldr	r2, [sp, #8]
   22d0c:	add	r0, r2, r3
   22d10:	cmp	lr, #0
   22d14:	movle	r3, #0
   22d18:	ble	24fa8 <GetDataSlab+0x3f9c>
   22d1c:	ldr	r2, [sp, #4]
   22d20:	mov	ip, #0
   22d24:	b	22d70 <GetDataSlab+0x1d64>
   22d28:	ldr	r1, [r8]
   22d2c:	mul	r1, r1, r3
   22d30:	ldrsb	r1, [r0, r1]
   22d34:	str	r1, [r2], #4
   22d38:	add	r3, r3, #1
   22d3c:	ldr	r1, [sp, #204]	; 0xcc
   22d40:	ldr	r1, [r1]
   22d44:	cmp	r1, r3
   22d48:	bgt	22d28 <GetDataSlab+0x1d1c>
   22d4c:	ldr	r3, [r8, #4]
   22d50:	ldr	r1, [sp, #192]	; 0xc0
   22d54:	ldr	r1, [r1]
   22d58:	mla	r0, r1, r3, r0
   22d5c:	add	ip, ip, #1
   22d60:	ldr	r3, [sp, #204]	; 0xcc
   22d64:	ldr	r3, [r3, #4]
   22d68:	cmp	r3, ip
   22d6c:	ble	3d7b0 <GetDataSlab+0x1c7a4>
   22d70:	ldr	r3, [sp, #204]	; 0xcc
   22d74:	ldr	r3, [r3]
   22d78:	cmp	r3, #0
   22d7c:	movgt	r3, #0
   22d80:	bgt	22d28 <GetDataSlab+0x1d1c>
   22d84:	b	22d4c <GetDataSlab+0x1d40>
   22d88:	mla	r3, r2, r1, r0
   22d8c:	ldr	r2, [sp, #8]
   22d90:	add	r0, r2, r3
   22d94:	cmp	lr, #0
   22d98:	movle	r3, #0
   22d9c:	ble	24fa8 <GetDataSlab+0x3f9c>
   22da0:	ldr	r2, [sp, #4]
   22da4:	mov	ip, #0
   22da8:	b	22df4 <GetDataSlab+0x1de8>
   22dac:	ldr	r1, [r8]
   22db0:	mul	r1, r1, r3
   22db4:	ldrb	r1, [r0, r1]
   22db8:	str	r1, [r2], #4
   22dbc:	add	r3, r3, #1
   22dc0:	ldr	r1, [sp, #204]	; 0xcc
   22dc4:	ldr	r1, [r1]
   22dc8:	cmp	r1, r3
   22dcc:	bgt	22dac <GetDataSlab+0x1da0>
   22dd0:	ldr	r3, [r8, #4]
   22dd4:	ldr	r1, [sp, #192]	; 0xc0
   22dd8:	ldr	r1, [r1]
   22ddc:	mla	r0, r1, r3, r0
   22de0:	add	ip, ip, #1
   22de4:	ldr	r3, [sp, #204]	; 0xcc
   22de8:	ldr	r3, [r3, #4]
   22dec:	cmp	r3, ip
   22df0:	ble	3d7b8 <GetDataSlab+0x1c7ac>
   22df4:	ldr	r3, [sp, #204]	; 0xcc
   22df8:	ldr	r3, [r3]
   22dfc:	cmp	r3, #0
   22e00:	movgt	r3, #0
   22e04:	bgt	22dac <GetDataSlab+0x1da0>
   22e08:	b	22dd0 <GetDataSlab+0x1dc4>
   22e0c:	cmp	r4, #12
   22e10:	beq	22e44 <GetDataSlab+0x1e38>
   22e14:	cmp	r4, #13
   22e18:	movne	r3, #1
   22e1c:	bne	24fa8 <GetDataSlab+0x3f9c>
   22e20:	mla	r3, r2, r1, r0
   22e24:	ldr	r2, [sp, #8]
   22e28:	add	r0, r2, r3, lsl #3
   22e2c:	cmp	lr, #0
   22e30:	movle	r3, #0
   22e34:	ble	24fa8 <GetDataSlab+0x3f9c>
   22e38:	ldr	r2, [sp, #4]
   22e3c:	mov	ip, #0
   22e40:	b	22f18 <GetDataSlab+0x1f0c>
   22e44:	mla	r3, r2, r1, r0
   22e48:	ldr	r2, [sp, #8]
   22e4c:	add	r0, r2, r3, lsl #3
   22e50:	cmp	lr, #0
   22e54:	ldrgt	r2, [sp, #4]
   22e58:	movgt	ip, #0
   22e5c:	bgt	22eb4 <GetDataSlab+0x1ea8>
   22e60:	mov	r3, #0
   22e64:	b	24fa8 <GetDataSlab+0x3f9c>
   22e68:	ldr	r1, [r8]
   22e6c:	mul	r1, r1, r3
   22e70:	ldr	r1, [r0, r1, lsl #3]
   22e74:	str	r1, [r2], #4
   22e78:	add	r3, r3, #1
   22e7c:	ldr	r1, [sp, #204]	; 0xcc
   22e80:	ldr	r1, [r1]
   22e84:	cmp	r1, r3
   22e88:	bgt	22e68 <GetDataSlab+0x1e5c>
   22e8c:	ldr	r3, [sp, #192]	; 0xc0
   22e90:	ldr	r3, [r3]
   22e94:	lsl	r3, r3, #3
   22e98:	ldr	r1, [r8, #4]
   22e9c:	mla	r0, r1, r3, r0
   22ea0:	add	ip, ip, #1
   22ea4:	ldr	r3, [sp, #204]	; 0xcc
   22ea8:	ldr	r3, [r3, #4]
   22eac:	cmp	r3, ip
   22eb0:	ble	22e60 <GetDataSlab+0x1e54>
   22eb4:	ldr	r3, [sp, #204]	; 0xcc
   22eb8:	ldr	r3, [r3]
   22ebc:	cmp	r3, #0
   22ec0:	movgt	r3, #0
   22ec4:	bgt	22e68 <GetDataSlab+0x1e5c>
   22ec8:	b	22e8c <GetDataSlab+0x1e80>
   22ecc:	ldr	r1, [r8]
   22ed0:	mul	r1, r1, r3
   22ed4:	ldr	r1, [r0, r1, lsl #3]
   22ed8:	str	r1, [r2], #4
   22edc:	add	r3, r3, #1
   22ee0:	ldr	r1, [sp, #204]	; 0xcc
   22ee4:	ldr	r1, [r1]
   22ee8:	cmp	r1, r3
   22eec:	bgt	22ecc <GetDataSlab+0x1ec0>
   22ef0:	ldr	r3, [sp, #192]	; 0xc0
   22ef4:	ldr	r3, [r3]
   22ef8:	lsl	r3, r3, #3
   22efc:	ldr	r1, [r8, #4]
   22f00:	mla	r0, r1, r3, r0
   22f04:	add	ip, ip, #1
   22f08:	ldr	r3, [sp, #204]	; 0xcc
   22f0c:	ldr	r3, [r3, #4]
   22f10:	cmp	r3, ip
   22f14:	ble	3d7c0 <GetDataSlab+0x1c7b4>
   22f18:	ldr	r3, [sp, #204]	; 0xcc
   22f1c:	ldr	r3, [r3]
   22f20:	cmp	r3, #0
   22f24:	movgt	r3, #0
   22f28:	bgt	22ecc <GetDataSlab+0x1ec0>
   22f2c:	b	22ef0 <GetDataSlab+0x1ee4>
   22f30:	sub	r3, r4, #1
   22f34:	cmp	r3, #8
   22f38:	addls	pc, pc, r3, lsl #2
   22f3c:	b	233b4 <GetDataSlab+0x23a8>
   22f40:	b	232ac <GetDataSlab+0x22a0>
   22f44:	b	23330 <GetDataSlab+0x2324>
   22f48:	b	23194 <GetDataSlab+0x2188>
   22f4c:	b	23220 <GetDataSlab+0x2214>
   22f50:	b	23084 <GetDataSlab+0x2078>
   22f54:	b	2310c <GetDataSlab+0x2100>
   22f58:	b	22ff4 <GetDataSlab+0x1fe8>
   22f5c:	b	233b4 <GetDataSlab+0x23a8>
   22f60:	b	22f64 <GetDataSlab+0x1f58>
   22f64:	mla	r3, r2, r1, r0
   22f68:	ldr	r2, [sp, #8]
   22f6c:	add	r0, r2, r3, lsl #3
   22f70:	cmp	lr, #0
   22f74:	movle	r3, #0
   22f78:	ble	24fa8 <GetDataSlab+0x3f9c>
   22f7c:	ldr	r2, [sp, #4]
   22f80:	mov	ip, #0
   22f84:	b	22fdc <GetDataSlab+0x1fd0>
   22f88:	ldr	r1, [r8]
   22f8c:	mul	r1, r1, r3
   22f90:	add	r1, r0, r1, lsl #3
   22f94:	vldr	d7, [r1]
   22f98:	vcvt.u32.f64	s15, d7
   22f9c:	vstmia	r2!, {s15}
   22fa0:	add	r3, r3, #1
   22fa4:	ldr	r1, [sp, #204]	; 0xcc
   22fa8:	ldr	r1, [r1]
   22fac:	cmp	r1, r3
   22fb0:	bgt	22f88 <GetDataSlab+0x1f7c>
   22fb4:	ldr	r3, [sp, #192]	; 0xc0
   22fb8:	ldr	r3, [r3]
   22fbc:	lsl	r3, r3, #3
   22fc0:	ldr	r1, [r8, #4]
   22fc4:	mla	r0, r1, r3, r0
   22fc8:	add	ip, ip, #1
   22fcc:	ldr	r3, [sp, #204]	; 0xcc
   22fd0:	ldr	r3, [r3, #4]
   22fd4:	cmp	r3, ip
   22fd8:	ble	3d7c8 <GetDataSlab+0x1c7bc>
   22fdc:	ldr	r3, [sp, #204]	; 0xcc
   22fe0:	ldr	r3, [r3]
   22fe4:	cmp	r3, #0
   22fe8:	movgt	r3, #0
   22fec:	bgt	22f88 <GetDataSlab+0x1f7c>
   22ff0:	b	22fb4 <GetDataSlab+0x1fa8>
   22ff4:	mla	r3, r2, r1, r0
   22ff8:	ldr	r2, [sp, #8]
   22ffc:	add	r0, r2, r3, lsl #2
   23000:	cmp	lr, #0
   23004:	movle	r3, #0
   23008:	ble	24fa8 <GetDataSlab+0x3f9c>
   2300c:	ldr	r2, [sp, #4]
   23010:	mov	ip, #0
   23014:	b	2306c <GetDataSlab+0x2060>
   23018:	ldr	r1, [r8]
   2301c:	mul	r1, r1, r3
   23020:	add	r1, r0, r1, lsl #2
   23024:	vldr	s15, [r1]
   23028:	vcvt.u32.f32	s15, s15
   2302c:	vstmia	r2!, {s15}
   23030:	add	r3, r3, #1
   23034:	ldr	r1, [sp, #204]	; 0xcc
   23038:	ldr	r1, [r1]
   2303c:	cmp	r1, r3
   23040:	bgt	23018 <GetDataSlab+0x200c>
   23044:	ldr	r3, [sp, #192]	; 0xc0
   23048:	ldr	r3, [r3]
   2304c:	lsl	r3, r3, #2
   23050:	ldr	r1, [r8, #4]
   23054:	mla	r0, r1, r3, r0
   23058:	add	ip, ip, #1
   2305c:	ldr	r3, [sp, #204]	; 0xcc
   23060:	ldr	r3, [r3, #4]
   23064:	cmp	r3, ip
   23068:	ble	3d7d0 <GetDataSlab+0x1c7c4>
   2306c:	ldr	r3, [sp, #204]	; 0xcc
   23070:	ldr	r3, [r3]
   23074:	cmp	r3, #0
   23078:	movgt	r3, #0
   2307c:	bgt	23018 <GetDataSlab+0x200c>
   23080:	b	23044 <GetDataSlab+0x2038>
   23084:	mla	r3, r2, r1, r0
   23088:	ldr	r2, [sp, #8]
   2308c:	add	r0, r2, r3, lsl #2
   23090:	cmp	lr, #0
   23094:	movle	r3, #0
   23098:	ble	24fa8 <GetDataSlab+0x3f9c>
   2309c:	ldr	r2, [sp, #4]
   230a0:	mov	ip, #0
   230a4:	b	230f4 <GetDataSlab+0x20e8>
   230a8:	ldr	r1, [r8]
   230ac:	mul	r1, r1, r3
   230b0:	ldr	r1, [r0, r1, lsl #2]
   230b4:	str	r1, [r2], #4
   230b8:	add	r3, r3, #1
   230bc:	ldr	r1, [sp, #204]	; 0xcc
   230c0:	ldr	r1, [r1]
   230c4:	cmp	r1, r3
   230c8:	bgt	230a8 <GetDataSlab+0x209c>
   230cc:	ldr	r3, [sp, #192]	; 0xc0
   230d0:	ldr	r3, [r3]
   230d4:	lsl	r3, r3, #2
   230d8:	ldr	r1, [r8, #4]
   230dc:	mla	r0, r1, r3, r0
   230e0:	add	ip, ip, #1
   230e4:	ldr	r3, [sp, #204]	; 0xcc
   230e8:	ldr	r3, [r3, #4]
   230ec:	cmp	r3, ip
   230f0:	ble	3d7d8 <GetDataSlab+0x1c7cc>
   230f4:	ldr	r3, [sp, #204]	; 0xcc
   230f8:	ldr	r3, [r3]
   230fc:	cmp	r3, #0
   23100:	movgt	r3, #0
   23104:	bgt	230a8 <GetDataSlab+0x209c>
   23108:	b	230cc <GetDataSlab+0x20c0>
   2310c:	mla	r3, r2, r1, r0
   23110:	ldr	r2, [sp, #8]
   23114:	add	r0, r2, r3, lsl #2
   23118:	cmp	lr, #0
   2311c:	movle	r3, #0
   23120:	ble	24fa8 <GetDataSlab+0x3f9c>
   23124:	ldr	r2, [sp, #4]
   23128:	mov	ip, #0
   2312c:	b	2317c <GetDataSlab+0x2170>
   23130:	ldr	r1, [r8]
   23134:	mul	r1, r1, r3
   23138:	ldr	r1, [r0, r1, lsl #2]
   2313c:	str	r1, [r2], #4
   23140:	add	r3, r3, #1
   23144:	ldr	r1, [sp, #204]	; 0xcc
   23148:	ldr	r1, [r1]
   2314c:	cmp	r1, r3
   23150:	bgt	23130 <GetDataSlab+0x2124>
   23154:	ldr	r3, [sp, #192]	; 0xc0
   23158:	ldr	r3, [r3]
   2315c:	lsl	r3, r3, #2
   23160:	ldr	r1, [r8, #4]
   23164:	mla	r0, r1, r3, r0
   23168:	add	ip, ip, #1
   2316c:	ldr	r3, [sp, #204]	; 0xcc
   23170:	ldr	r3, [r3, #4]
   23174:	cmp	r3, ip
   23178:	ble	3d7e0 <GetDataSlab+0x1c7d4>
   2317c:	ldr	r3, [sp, #204]	; 0xcc
   23180:	ldr	r3, [r3]
   23184:	cmp	r3, #0
   23188:	movgt	r3, #0
   2318c:	bgt	23130 <GetDataSlab+0x2124>
   23190:	b	23154 <GetDataSlab+0x2148>
   23194:	mla	r3, r2, r1, r0
   23198:	ldr	r2, [sp, #8]
   2319c:	add	r0, r2, r3, lsl #1
   231a0:	cmp	lr, #0
   231a4:	movle	r3, #0
   231a8:	ble	24fa8 <GetDataSlab+0x3f9c>
   231ac:	ldr	r2, [sp, #4]
   231b0:	mov	ip, #0
   231b4:	b	23208 <GetDataSlab+0x21fc>
   231b8:	ldr	r1, [r8]
   231bc:	mul	r1, r1, r3
   231c0:	lsl	r1, r1, #1
   231c4:	ldrsh	r1, [r0, r1]
   231c8:	str	r1, [r2], #4
   231cc:	add	r3, r3, #1
   231d0:	ldr	r1, [sp, #204]	; 0xcc
   231d4:	ldr	r1, [r1]
   231d8:	cmp	r1, r3
   231dc:	bgt	231b8 <GetDataSlab+0x21ac>
   231e0:	ldr	r3, [sp, #192]	; 0xc0
   231e4:	ldr	r3, [r3]
   231e8:	lsl	r3, r3, #1
   231ec:	ldr	r1, [r8, #4]
   231f0:	mla	r0, r1, r3, r0
   231f4:	add	ip, ip, #1
   231f8:	ldr	r3, [sp, #204]	; 0xcc
   231fc:	ldr	r3, [r3, #4]
   23200:	cmp	r3, ip
   23204:	ble	3d7e8 <GetDataSlab+0x1c7dc>
   23208:	ldr	r3, [sp, #204]	; 0xcc
   2320c:	ldr	r3, [r3]
   23210:	cmp	r3, #0
   23214:	movgt	r3, #0
   23218:	bgt	231b8 <GetDataSlab+0x21ac>
   2321c:	b	231e0 <GetDataSlab+0x21d4>
   23220:	mla	r3, r2, r1, r0
   23224:	ldr	r2, [sp, #8]
   23228:	add	r0, r2, r3, lsl #1
   2322c:	cmp	lr, #0
   23230:	movle	r3, #0
   23234:	ble	24fa8 <GetDataSlab+0x3f9c>
   23238:	ldr	r2, [sp, #4]
   2323c:	mov	ip, #0
   23240:	b	23294 <GetDataSlab+0x2288>
   23244:	ldr	r1, [r8]
   23248:	mul	r1, r1, r3
   2324c:	lsl	r1, r1, #1
   23250:	ldrh	r1, [r0, r1]
   23254:	str	r1, [r2], #4
   23258:	add	r3, r3, #1
   2325c:	ldr	r1, [sp, #204]	; 0xcc
   23260:	ldr	r1, [r1]
   23264:	cmp	r1, r3
   23268:	bgt	23244 <GetDataSlab+0x2238>
   2326c:	ldr	r3, [sp, #192]	; 0xc0
   23270:	ldr	r3, [r3]
   23274:	lsl	r3, r3, #1
   23278:	ldr	r1, [r8, #4]
   2327c:	mla	r0, r1, r3, r0
   23280:	add	ip, ip, #1
   23284:	ldr	r3, [sp, #204]	; 0xcc
   23288:	ldr	r3, [r3, #4]
   2328c:	cmp	r3, ip
   23290:	ble	3d7f0 <GetDataSlab+0x1c7e4>
   23294:	ldr	r3, [sp, #204]	; 0xcc
   23298:	ldr	r3, [r3]
   2329c:	cmp	r3, #0
   232a0:	movgt	r3, #0
   232a4:	bgt	23244 <GetDataSlab+0x2238>
   232a8:	b	2326c <GetDataSlab+0x2260>
   232ac:	mla	r3, r2, r1, r0
   232b0:	ldr	r2, [sp, #8]
   232b4:	add	r0, r2, r3
   232b8:	cmp	lr, #0
   232bc:	movle	r3, #0
   232c0:	ble	24fa8 <GetDataSlab+0x3f9c>
   232c4:	ldr	r2, [sp, #4]
   232c8:	mov	ip, #0
   232cc:	b	23318 <GetDataSlab+0x230c>
   232d0:	ldr	r1, [r8]
   232d4:	mul	r1, r1, r3
   232d8:	ldrsb	r1, [r0, r1]
   232dc:	str	r1, [r2], #4
   232e0:	add	r3, r3, #1
   232e4:	ldr	r1, [sp, #204]	; 0xcc
   232e8:	ldr	r1, [r1]
   232ec:	cmp	r1, r3
   232f0:	bgt	232d0 <GetDataSlab+0x22c4>
   232f4:	ldr	r3, [r8, #4]
   232f8:	ldr	r1, [sp, #192]	; 0xc0
   232fc:	ldr	r1, [r1]
   23300:	mla	r0, r1, r3, r0
   23304:	add	ip, ip, #1
   23308:	ldr	r3, [sp, #204]	; 0xcc
   2330c:	ldr	r3, [r3, #4]
   23310:	cmp	r3, ip
   23314:	ble	3d7f8 <GetDataSlab+0x1c7ec>
   23318:	ldr	r3, [sp, #204]	; 0xcc
   2331c:	ldr	r3, [r3]
   23320:	cmp	r3, #0
   23324:	movgt	r3, #0
   23328:	bgt	232d0 <GetDataSlab+0x22c4>
   2332c:	b	232f4 <GetDataSlab+0x22e8>
   23330:	mla	r3, r2, r1, r0
   23334:	ldr	r2, [sp, #8]
   23338:	add	r0, r2, r3
   2333c:	cmp	lr, #0
   23340:	movle	r3, #0
   23344:	ble	24fa8 <GetDataSlab+0x3f9c>
   23348:	ldr	r2, [sp, #4]
   2334c:	mov	ip, #0
   23350:	b	2339c <GetDataSlab+0x2390>
   23354:	ldr	r1, [r8]
   23358:	mul	r1, r1, r3
   2335c:	ldrb	r1, [r0, r1]
   23360:	str	r1, [r2], #4
   23364:	add	r3, r3, #1
   23368:	ldr	r1, [sp, #204]	; 0xcc
   2336c:	ldr	r1, [r1]
   23370:	cmp	r1, r3
   23374:	bgt	23354 <GetDataSlab+0x2348>
   23378:	ldr	r3, [r8, #4]
   2337c:	ldr	r1, [sp, #192]	; 0xc0
   23380:	ldr	r1, [r1]
   23384:	mla	r0, r1, r3, r0
   23388:	add	ip, ip, #1
   2338c:	ldr	r3, [sp, #204]	; 0xcc
   23390:	ldr	r3, [r3, #4]
   23394:	cmp	r3, ip
   23398:	ble	3d800 <GetDataSlab+0x1c7f4>
   2339c:	ldr	r3, [sp, #204]	; 0xcc
   233a0:	ldr	r3, [r3]
   233a4:	cmp	r3, #0
   233a8:	movgt	r3, #0
   233ac:	bgt	23354 <GetDataSlab+0x2348>
   233b0:	b	23378 <GetDataSlab+0x236c>
   233b4:	cmp	r4, #12
   233b8:	beq	233ec <GetDataSlab+0x23e0>
   233bc:	cmp	r4, #13
   233c0:	movne	r3, #1
   233c4:	bne	24fa8 <GetDataSlab+0x3f9c>
   233c8:	mla	r3, r2, r1, r0
   233cc:	ldr	r2, [sp, #8]
   233d0:	add	r0, r2, r3, lsl #3
   233d4:	cmp	lr, #0
   233d8:	movle	r3, #0
   233dc:	ble	24fa8 <GetDataSlab+0x3f9c>
   233e0:	ldr	r2, [sp, #4]
   233e4:	mov	ip, #0
   233e8:	b	234c0 <GetDataSlab+0x24b4>
   233ec:	mla	r3, r2, r1, r0
   233f0:	ldr	r2, [sp, #8]
   233f4:	add	r0, r2, r3, lsl #3
   233f8:	cmp	lr, #0
   233fc:	ldrgt	r2, [sp, #4]
   23400:	movgt	ip, #0
   23404:	bgt	2345c <GetDataSlab+0x2450>
   23408:	mov	r3, #0
   2340c:	b	24fa8 <GetDataSlab+0x3f9c>
   23410:	ldr	r1, [r8]
   23414:	mul	r1, r1, r3
   23418:	ldr	r1, [r0, r1, lsl #3]
   2341c:	str	r1, [r2], #4
   23420:	add	r3, r3, #1
   23424:	ldr	r1, [sp, #204]	; 0xcc
   23428:	ldr	r1, [r1]
   2342c:	cmp	r1, r3
   23430:	bgt	23410 <GetDataSlab+0x2404>
   23434:	ldr	r3, [sp, #192]	; 0xc0
   23438:	ldr	r3, [r3]
   2343c:	lsl	r3, r3, #3
   23440:	ldr	r1, [r8, #4]
   23444:	mla	r0, r1, r3, r0
   23448:	add	ip, ip, #1
   2344c:	ldr	r3, [sp, #204]	; 0xcc
   23450:	ldr	r3, [r3, #4]
   23454:	cmp	r3, ip
   23458:	ble	23408 <GetDataSlab+0x23fc>
   2345c:	ldr	r3, [sp, #204]	; 0xcc
   23460:	ldr	r3, [r3]
   23464:	cmp	r3, #0
   23468:	movgt	r3, #0
   2346c:	bgt	23410 <GetDataSlab+0x2404>
   23470:	b	23434 <GetDataSlab+0x2428>
   23474:	ldr	r1, [r8]
   23478:	mul	r1, r1, r3
   2347c:	ldr	r1, [r0, r1, lsl #3]
   23480:	str	r1, [r2], #4
   23484:	add	r3, r3, #1
   23488:	ldr	r1, [sp, #204]	; 0xcc
   2348c:	ldr	r1, [r1]
   23490:	cmp	r1, r3
   23494:	bgt	23474 <GetDataSlab+0x2468>
   23498:	ldr	r3, [sp, #192]	; 0xc0
   2349c:	ldr	r3, [r3]
   234a0:	lsl	r3, r3, #3
   234a4:	ldr	r1, [r8, #4]
   234a8:	mla	r0, r1, r3, r0
   234ac:	add	ip, ip, #1
   234b0:	ldr	r3, [sp, #204]	; 0xcc
   234b4:	ldr	r3, [r3, #4]
   234b8:	cmp	r3, ip
   234bc:	ble	3d808 <GetDataSlab+0x1c7fc>
   234c0:	ldr	r3, [sp, #204]	; 0xcc
   234c4:	ldr	r3, [r3]
   234c8:	cmp	r3, #0
   234cc:	movgt	r3, #0
   234d0:	bgt	23474 <GetDataSlab+0x2468>
   234d4:	b	23498 <GetDataSlab+0x248c>
   234d8:	sub	r3, r4, #1
   234dc:	cmp	r3, #8
   234e0:	addls	pc, pc, r3, lsl #2
   234e4:	b	23964 <GetDataSlab+0x2958>
   234e8:	b	2385c <GetDataSlab+0x2850>
   234ec:	b	238e0 <GetDataSlab+0x28d4>
   234f0:	b	23744 <GetDataSlab+0x2738>
   234f4:	b	237d0 <GetDataSlab+0x27c4>
   234f8:	b	23634 <GetDataSlab+0x2628>
   234fc:	b	236bc <GetDataSlab+0x26b0>
   23500:	b	235a0 <GetDataSlab+0x2594>
   23504:	b	23964 <GetDataSlab+0x2958>
   23508:	b	2350c <GetDataSlab+0x2500>
   2350c:	mla	r3, r2, r1, r0
   23510:	ldr	r2, [sp, #8]
   23514:	add	r0, r2, r3, lsl #3
   23518:	cmp	lr, #0
   2351c:	movle	r3, #0
   23520:	ble	24fa8 <GetDataSlab+0x3f9c>
   23524:	ldr	r2, [sp, #4]
   23528:	mov	ip, #0
   2352c:	b	23588 <GetDataSlab+0x257c>
   23530:	ldr	r1, [r8]
   23534:	mul	r1, r1, r3
   23538:	add	r1, r0, r1, lsl #3
   2353c:	vldr	d7, [r1]
   23540:	vcvt.s32.f64	s15, d7
   23544:	vmov	r1, s15
   23548:	strh	r1, [r2], #2
   2354c:	add	r3, r3, #1
   23550:	ldr	r1, [sp, #204]	; 0xcc
   23554:	ldr	r1, [r1]
   23558:	cmp	r1, r3
   2355c:	bgt	23530 <GetDataSlab+0x2524>
   23560:	ldr	r3, [sp, #192]	; 0xc0
   23564:	ldr	r3, [r3]
   23568:	lsl	r3, r3, #3
   2356c:	ldr	r1, [r8, #4]
   23570:	mla	r0, r1, r3, r0
   23574:	add	ip, ip, #1
   23578:	ldr	r3, [sp, #204]	; 0xcc
   2357c:	ldr	r3, [r3, #4]
   23580:	cmp	r3, ip
   23584:	ble	3d810 <GetDataSlab+0x1c804>
   23588:	ldr	r3, [sp, #204]	; 0xcc
   2358c:	ldr	r3, [r3]
   23590:	cmp	r3, #0
   23594:	movgt	r3, #0
   23598:	bgt	23530 <GetDataSlab+0x2524>
   2359c:	b	23560 <GetDataSlab+0x2554>
   235a0:	mla	r3, r2, r1, r0
   235a4:	ldr	r2, [sp, #8]
   235a8:	add	r0, r2, r3, lsl #2
   235ac:	cmp	lr, #0
   235b0:	movle	r3, #0
   235b4:	ble	24fa8 <GetDataSlab+0x3f9c>
   235b8:	ldr	r2, [sp, #4]
   235bc:	mov	ip, #0
   235c0:	b	2361c <GetDataSlab+0x2610>
   235c4:	ldr	r1, [r8]
   235c8:	mul	r1, r1, r3
   235cc:	add	r1, r0, r1, lsl #2
   235d0:	vldr	s15, [r1]
   235d4:	vcvt.s32.f32	s15, s15
   235d8:	vmov	r1, s15
   235dc:	strh	r1, [r2], #2
   235e0:	add	r3, r3, #1
   235e4:	ldr	r1, [sp, #204]	; 0xcc
   235e8:	ldr	r1, [r1]
   235ec:	cmp	r1, r3
   235f0:	bgt	235c4 <GetDataSlab+0x25b8>
   235f4:	ldr	r3, [sp, #192]	; 0xc0
   235f8:	ldr	r3, [r3]
   235fc:	lsl	r3, r3, #2
   23600:	ldr	r1, [r8, #4]
   23604:	mla	r0, r1, r3, r0
   23608:	add	ip, ip, #1
   2360c:	ldr	r3, [sp, #204]	; 0xcc
   23610:	ldr	r3, [r3, #4]
   23614:	cmp	r3, ip
   23618:	ble	3d818 <GetDataSlab+0x1c80c>
   2361c:	ldr	r3, [sp, #204]	; 0xcc
   23620:	ldr	r3, [r3]
   23624:	cmp	r3, #0
   23628:	movgt	r3, #0
   2362c:	bgt	235c4 <GetDataSlab+0x25b8>
   23630:	b	235f4 <GetDataSlab+0x25e8>
   23634:	mla	r3, r2, r1, r0
   23638:	ldr	r2, [sp, #8]
   2363c:	add	r0, r2, r3, lsl #2
   23640:	cmp	lr, #0
   23644:	movle	r3, #0
   23648:	ble	24fa8 <GetDataSlab+0x3f9c>
   2364c:	ldr	r2, [sp, #4]
   23650:	mov	ip, #0
   23654:	b	236a4 <GetDataSlab+0x2698>
   23658:	ldr	r1, [r8]
   2365c:	mul	r1, r1, r3
   23660:	ldr	r1, [r0, r1, lsl #2]
   23664:	strh	r1, [r2], #2
   23668:	add	r3, r3, #1
   2366c:	ldr	r1, [sp, #204]	; 0xcc
   23670:	ldr	r1, [r1]
   23674:	cmp	r1, r3
   23678:	bgt	23658 <GetDataSlab+0x264c>
   2367c:	ldr	r3, [sp, #192]	; 0xc0
   23680:	ldr	r3, [r3]
   23684:	lsl	r3, r3, #2
   23688:	ldr	r1, [r8, #4]
   2368c:	mla	r0, r1, r3, r0
   23690:	add	ip, ip, #1
   23694:	ldr	r3, [sp, #204]	; 0xcc
   23698:	ldr	r3, [r3, #4]
   2369c:	cmp	r3, ip
   236a0:	ble	3d820 <GetDataSlab+0x1c814>
   236a4:	ldr	r3, [sp, #204]	; 0xcc
   236a8:	ldr	r3, [r3]
   236ac:	cmp	r3, #0
   236b0:	movgt	r3, #0
   236b4:	bgt	23658 <GetDataSlab+0x264c>
   236b8:	b	2367c <GetDataSlab+0x2670>
   236bc:	mla	r3, r2, r1, r0
   236c0:	ldr	r2, [sp, #8]
   236c4:	add	r0, r2, r3, lsl #2
   236c8:	cmp	lr, #0
   236cc:	movle	r3, #0
   236d0:	ble	24fa8 <GetDataSlab+0x3f9c>
   236d4:	ldr	r2, [sp, #4]
   236d8:	mov	ip, #0
   236dc:	b	2372c <GetDataSlab+0x2720>
   236e0:	ldr	r1, [r8]
   236e4:	mul	r1, r1, r3
   236e8:	ldr	r1, [r0, r1, lsl #2]
   236ec:	strh	r1, [r2], #2
   236f0:	add	r3, r3, #1
   236f4:	ldr	r1, [sp, #204]	; 0xcc
   236f8:	ldr	r1, [r1]
   236fc:	cmp	r1, r3
   23700:	bgt	236e0 <GetDataSlab+0x26d4>
   23704:	ldr	r3, [sp, #192]	; 0xc0
   23708:	ldr	r3, [r3]
   2370c:	lsl	r3, r3, #2
   23710:	ldr	r1, [r8, #4]
   23714:	mla	r0, r1, r3, r0
   23718:	add	ip, ip, #1
   2371c:	ldr	r3, [sp, #204]	; 0xcc
   23720:	ldr	r3, [r3, #4]
   23724:	cmp	r3, ip
   23728:	ble	3d828 <GetDataSlab+0x1c81c>
   2372c:	ldr	r3, [sp, #204]	; 0xcc
   23730:	ldr	r3, [r3]
   23734:	cmp	r3, #0
   23738:	movgt	r3, #0
   2373c:	bgt	236e0 <GetDataSlab+0x26d4>
   23740:	b	23704 <GetDataSlab+0x26f8>
   23744:	mla	r3, r2, r1, r0
   23748:	ldr	r2, [sp, #8]
   2374c:	add	r0, r2, r3, lsl #1
   23750:	cmp	lr, #0
   23754:	movle	r3, #0
   23758:	ble	24fa8 <GetDataSlab+0x3f9c>
   2375c:	ldr	r2, [sp, #4]
   23760:	mov	ip, #0
   23764:	b	237b8 <GetDataSlab+0x27ac>
   23768:	ldr	r1, [r8]
   2376c:	mul	r1, r1, r3
   23770:	lsl	r1, r1, #1
   23774:	ldrsh	r1, [r0, r1]
   23778:	strh	r1, [r2], #2
   2377c:	add	r3, r3, #1
   23780:	ldr	r1, [sp, #204]	; 0xcc
   23784:	ldr	r1, [r1]
   23788:	cmp	r1, r3
   2378c:	bgt	23768 <GetDataSlab+0x275c>
   23790:	ldr	r3, [sp, #192]	; 0xc0
   23794:	ldr	r3, [r3]
   23798:	lsl	r3, r3, #1
   2379c:	ldr	r1, [r8, #4]
   237a0:	mla	r0, r1, r3, r0
   237a4:	add	ip, ip, #1
   237a8:	ldr	r3, [sp, #204]	; 0xcc
   237ac:	ldr	r3, [r3, #4]
   237b0:	cmp	r3, ip
   237b4:	ble	3d830 <GetDataSlab+0x1c824>
   237b8:	ldr	r3, [sp, #204]	; 0xcc
   237bc:	ldr	r3, [r3]
   237c0:	cmp	r3, #0
   237c4:	movgt	r3, #0
   237c8:	bgt	23768 <GetDataSlab+0x275c>
   237cc:	b	23790 <GetDataSlab+0x2784>
   237d0:	mla	r3, r2, r1, r0
   237d4:	ldr	r2, [sp, #8]
   237d8:	add	r0, r2, r3, lsl #1
   237dc:	cmp	lr, #0
   237e0:	movle	r3, #0
   237e4:	ble	24fa8 <GetDataSlab+0x3f9c>
   237e8:	ldr	r2, [sp, #4]
   237ec:	mov	ip, #0
   237f0:	b	23844 <GetDataSlab+0x2838>
   237f4:	ldr	r1, [r8]
   237f8:	mul	r1, r1, r3
   237fc:	lsl	r1, r1, #1
   23800:	ldrh	r1, [r0, r1]
   23804:	strh	r1, [r2], #2
   23808:	add	r3, r3, #1
   2380c:	ldr	r1, [sp, #204]	; 0xcc
   23810:	ldr	r1, [r1]
   23814:	cmp	r1, r3
   23818:	bgt	237f4 <GetDataSlab+0x27e8>
   2381c:	ldr	r3, [sp, #192]	; 0xc0
   23820:	ldr	r3, [r3]
   23824:	lsl	r3, r3, #1
   23828:	ldr	r1, [r8, #4]
   2382c:	mla	r0, r1, r3, r0
   23830:	add	ip, ip, #1
   23834:	ldr	r3, [sp, #204]	; 0xcc
   23838:	ldr	r3, [r3, #4]
   2383c:	cmp	r3, ip
   23840:	ble	3d838 <GetDataSlab+0x1c82c>
   23844:	ldr	r3, [sp, #204]	; 0xcc
   23848:	ldr	r3, [r3]
   2384c:	cmp	r3, #0
   23850:	movgt	r3, #0
   23854:	bgt	237f4 <GetDataSlab+0x27e8>
   23858:	b	2381c <GetDataSlab+0x2810>
   2385c:	mla	r3, r2, r1, r0
   23860:	ldr	r2, [sp, #8]
   23864:	add	r0, r2, r3
   23868:	cmp	lr, #0
   2386c:	movle	r3, #0
   23870:	ble	24fa8 <GetDataSlab+0x3f9c>
   23874:	ldr	r2, [sp, #4]
   23878:	mov	ip, #0
   2387c:	b	238c8 <GetDataSlab+0x28bc>
   23880:	ldr	r1, [r8]
   23884:	mul	r1, r1, r3
   23888:	ldrsb	r1, [r0, r1]
   2388c:	strh	r1, [r2], #2
   23890:	add	r3, r3, #1
   23894:	ldr	r1, [sp, #204]	; 0xcc
   23898:	ldr	r1, [r1]
   2389c:	cmp	r1, r3
   238a0:	bgt	23880 <GetDataSlab+0x2874>
   238a4:	ldr	r3, [r8, #4]
   238a8:	ldr	r1, [sp, #192]	; 0xc0
   238ac:	ldr	r1, [r1]
   238b0:	mla	r0, r1, r3, r0
   238b4:	add	ip, ip, #1
   238b8:	ldr	r3, [sp, #204]	; 0xcc
   238bc:	ldr	r3, [r3, #4]
   238c0:	cmp	r3, ip
   238c4:	ble	3d840 <GetDataSlab+0x1c834>
   238c8:	ldr	r3, [sp, #204]	; 0xcc
   238cc:	ldr	r3, [r3]
   238d0:	cmp	r3, #0
   238d4:	movgt	r3, #0
   238d8:	bgt	23880 <GetDataSlab+0x2874>
   238dc:	b	238a4 <GetDataSlab+0x2898>
   238e0:	mla	r3, r2, r1, r0
   238e4:	ldr	r2, [sp, #8]
   238e8:	add	r0, r2, r3
   238ec:	cmp	lr, #0
   238f0:	movle	r3, #0
   238f4:	ble	24fa8 <GetDataSlab+0x3f9c>
   238f8:	ldr	r2, [sp, #4]
   238fc:	mov	ip, #0
   23900:	b	2394c <GetDataSlab+0x2940>
   23904:	ldr	r1, [r8]
   23908:	mul	r1, r1, r3
   2390c:	ldrb	r1, [r0, r1]
   23910:	strh	r1, [r2], #2
   23914:	add	r3, r3, #1
   23918:	ldr	r1, [sp, #204]	; 0xcc
   2391c:	ldr	r1, [r1]
   23920:	cmp	r1, r3
   23924:	bgt	23904 <GetDataSlab+0x28f8>
   23928:	ldr	r3, [r8, #4]
   2392c:	ldr	r1, [sp, #192]	; 0xc0
   23930:	ldr	r1, [r1]
   23934:	mla	r0, r1, r3, r0
   23938:	add	ip, ip, #1
   2393c:	ldr	r3, [sp, #204]	; 0xcc
   23940:	ldr	r3, [r3, #4]
   23944:	cmp	r3, ip
   23948:	ble	3d848 <GetDataSlab+0x1c83c>
   2394c:	ldr	r3, [sp, #204]	; 0xcc
   23950:	ldr	r3, [r3]
   23954:	cmp	r3, #0
   23958:	movgt	r3, #0
   2395c:	bgt	23904 <GetDataSlab+0x28f8>
   23960:	b	23928 <GetDataSlab+0x291c>
   23964:	cmp	r4, #12
   23968:	beq	2399c <GetDataSlab+0x2990>
   2396c:	cmp	r4, #13
   23970:	movne	r3, #1
   23974:	bne	24fa8 <GetDataSlab+0x3f9c>
   23978:	mla	r3, r2, r1, r0
   2397c:	ldr	r2, [sp, #8]
   23980:	add	r0, r2, r3, lsl #3
   23984:	cmp	lr, #0
   23988:	movle	r3, #0
   2398c:	ble	24fa8 <GetDataSlab+0x3f9c>
   23990:	ldr	r2, [sp, #4]
   23994:	mov	ip, #0
   23998:	b	23a70 <GetDataSlab+0x2a64>
   2399c:	mla	r3, r2, r1, r0
   239a0:	ldr	r2, [sp, #8]
   239a4:	add	r0, r2, r3, lsl #3
   239a8:	cmp	lr, #0
   239ac:	ldrgt	r2, [sp, #4]
   239b0:	movgt	ip, #0
   239b4:	bgt	23a0c <GetDataSlab+0x2a00>
   239b8:	mov	r3, #0
   239bc:	b	24fa8 <GetDataSlab+0x3f9c>
   239c0:	ldr	r1, [r8]
   239c4:	mul	r1, r1, r3
   239c8:	ldr	r1, [r0, r1, lsl #3]
   239cc:	strh	r1, [r2], #2
   239d0:	add	r3, r3, #1
   239d4:	ldr	r1, [sp, #204]	; 0xcc
   239d8:	ldr	r1, [r1]
   239dc:	cmp	r1, r3
   239e0:	bgt	239c0 <GetDataSlab+0x29b4>
   239e4:	ldr	r3, [sp, #192]	; 0xc0
   239e8:	ldr	r3, [r3]
   239ec:	lsl	r3, r3, #3
   239f0:	ldr	r1, [r8, #4]
   239f4:	mla	r0, r1, r3, r0
   239f8:	add	ip, ip, #1
   239fc:	ldr	r3, [sp, #204]	; 0xcc
   23a00:	ldr	r3, [r3, #4]
   23a04:	cmp	r3, ip
   23a08:	ble	239b8 <GetDataSlab+0x29ac>
   23a0c:	ldr	r3, [sp, #204]	; 0xcc
   23a10:	ldr	r3, [r3]
   23a14:	cmp	r3, #0
   23a18:	movgt	r3, #0
   23a1c:	bgt	239c0 <GetDataSlab+0x29b4>
   23a20:	b	239e4 <GetDataSlab+0x29d8>
   23a24:	ldr	r1, [r8]
   23a28:	mul	r1, r1, r3
   23a2c:	ldr	r1, [r0, r1, lsl #3]
   23a30:	strh	r1, [r2], #2
   23a34:	add	r3, r3, #1
   23a38:	ldr	r1, [sp, #204]	; 0xcc
   23a3c:	ldr	r1, [r1]
   23a40:	cmp	r1, r3
   23a44:	bgt	23a24 <GetDataSlab+0x2a18>
   23a48:	ldr	r3, [sp, #192]	; 0xc0
   23a4c:	ldr	r3, [r3]
   23a50:	lsl	r3, r3, #3
   23a54:	ldr	r1, [r8, #4]
   23a58:	mla	r0, r1, r3, r0
   23a5c:	add	ip, ip, #1
   23a60:	ldr	r3, [sp, #204]	; 0xcc
   23a64:	ldr	r3, [r3, #4]
   23a68:	cmp	r3, ip
   23a6c:	ble	3d850 <GetDataSlab+0x1c844>
   23a70:	ldr	r3, [sp, #204]	; 0xcc
   23a74:	ldr	r3, [r3]
   23a78:	cmp	r3, #0
   23a7c:	movgt	r3, #0
   23a80:	bgt	23a24 <GetDataSlab+0x2a18>
   23a84:	b	23a48 <GetDataSlab+0x2a3c>
   23a88:	sub	r3, r4, #1
   23a8c:	cmp	r3, #8
   23a90:	addls	pc, pc, r3, lsl #2
   23a94:	b	23f14 <GetDataSlab+0x2f08>
   23a98:	b	23e0c <GetDataSlab+0x2e00>
   23a9c:	b	23e90 <GetDataSlab+0x2e84>
   23aa0:	b	23cf4 <GetDataSlab+0x2ce8>
   23aa4:	b	23d80 <GetDataSlab+0x2d74>
   23aa8:	b	23be4 <GetDataSlab+0x2bd8>
   23aac:	b	23c6c <GetDataSlab+0x2c60>
   23ab0:	b	23b50 <GetDataSlab+0x2b44>
   23ab4:	b	23f14 <GetDataSlab+0x2f08>
   23ab8:	b	23abc <GetDataSlab+0x2ab0>
   23abc:	mla	r3, r2, r1, r0
   23ac0:	ldr	r2, [sp, #8]
   23ac4:	add	r0, r2, r3, lsl #3
   23ac8:	cmp	lr, #0
   23acc:	movle	r3, #0
   23ad0:	ble	24fa8 <GetDataSlab+0x3f9c>
   23ad4:	ldr	r2, [sp, #4]
   23ad8:	mov	ip, #0
   23adc:	b	23b38 <GetDataSlab+0x2b2c>
   23ae0:	ldr	r1, [r8]
   23ae4:	mul	r1, r1, r3
   23ae8:	add	r1, r0, r1, lsl #3
   23aec:	vldr	d7, [r1]
   23af0:	vcvt.u32.f64	s15, d7
   23af4:	vmov	r1, s15
   23af8:	strh	r1, [r2], #2
   23afc:	add	r3, r3, #1
   23b00:	ldr	r1, [sp, #204]	; 0xcc
   23b04:	ldr	r1, [r1]
   23b08:	cmp	r1, r3
   23b0c:	bgt	23ae0 <GetDataSlab+0x2ad4>
   23b10:	ldr	r3, [sp, #192]	; 0xc0
   23b14:	ldr	r3, [r3]
   23b18:	lsl	r3, r3, #3
   23b1c:	ldr	r1, [r8, #4]
   23b20:	mla	r0, r1, r3, r0
   23b24:	add	ip, ip, #1
   23b28:	ldr	r3, [sp, #204]	; 0xcc
   23b2c:	ldr	r3, [r3, #4]
   23b30:	cmp	r3, ip
   23b34:	ble	3d858 <GetDataSlab+0x1c84c>
   23b38:	ldr	r3, [sp, #204]	; 0xcc
   23b3c:	ldr	r3, [r3]
   23b40:	cmp	r3, #0
   23b44:	movgt	r3, #0
   23b48:	bgt	23ae0 <GetDataSlab+0x2ad4>
   23b4c:	b	23b10 <GetDataSlab+0x2b04>
   23b50:	mla	r3, r2, r1, r0
   23b54:	ldr	r2, [sp, #8]
   23b58:	add	r0, r2, r3, lsl #2
   23b5c:	cmp	lr, #0
   23b60:	movle	r3, #0
   23b64:	ble	24fa8 <GetDataSlab+0x3f9c>
   23b68:	ldr	r2, [sp, #4]
   23b6c:	mov	ip, #0
   23b70:	b	23bcc <GetDataSlab+0x2bc0>
   23b74:	ldr	r1, [r8]
   23b78:	mul	r1, r1, r3
   23b7c:	add	r1, r0, r1, lsl #2
   23b80:	vldr	s15, [r1]
   23b84:	vcvt.u32.f32	s15, s15
   23b88:	vmov	r1, s15
   23b8c:	strh	r1, [r2], #2
   23b90:	add	r3, r3, #1
   23b94:	ldr	r1, [sp, #204]	; 0xcc
   23b98:	ldr	r1, [r1]
   23b9c:	cmp	r1, r3
   23ba0:	bgt	23b74 <GetDataSlab+0x2b68>
   23ba4:	ldr	r3, [sp, #192]	; 0xc0
   23ba8:	ldr	r3, [r3]
   23bac:	lsl	r3, r3, #2
   23bb0:	ldr	r1, [r8, #4]
   23bb4:	mla	r0, r1, r3, r0
   23bb8:	add	ip, ip, #1
   23bbc:	ldr	r3, [sp, #204]	; 0xcc
   23bc0:	ldr	r3, [r3, #4]
   23bc4:	cmp	r3, ip
   23bc8:	ble	3d860 <GetDataSlab+0x1c854>
   23bcc:	ldr	r3, [sp, #204]	; 0xcc
   23bd0:	ldr	r3, [r3]
   23bd4:	cmp	r3, #0
   23bd8:	movgt	r3, #0
   23bdc:	bgt	23b74 <GetDataSlab+0x2b68>
   23be0:	b	23ba4 <GetDataSlab+0x2b98>
   23be4:	mla	r3, r2, r1, r0
   23be8:	ldr	r2, [sp, #8]
   23bec:	add	r0, r2, r3, lsl #2
   23bf0:	cmp	lr, #0
   23bf4:	movle	r3, #0
   23bf8:	ble	24fa8 <GetDataSlab+0x3f9c>
   23bfc:	ldr	r2, [sp, #4]
   23c00:	mov	ip, #0
   23c04:	b	23c54 <GetDataSlab+0x2c48>
   23c08:	ldr	r1, [r8]
   23c0c:	mul	r1, r1, r3
   23c10:	ldr	r1, [r0, r1, lsl #2]
   23c14:	strh	r1, [r2], #2
   23c18:	add	r3, r3, #1
   23c1c:	ldr	r1, [sp, #204]	; 0xcc
   23c20:	ldr	r1, [r1]
   23c24:	cmp	r1, r3
   23c28:	bgt	23c08 <GetDataSlab+0x2bfc>
   23c2c:	ldr	r3, [sp, #192]	; 0xc0
   23c30:	ldr	r3, [r3]
   23c34:	lsl	r3, r3, #2
   23c38:	ldr	r1, [r8, #4]
   23c3c:	mla	r0, r1, r3, r0
   23c40:	add	ip, ip, #1
   23c44:	ldr	r3, [sp, #204]	; 0xcc
   23c48:	ldr	r3, [r3, #4]
   23c4c:	cmp	r3, ip
   23c50:	ble	3d868 <GetDataSlab+0x1c85c>
   23c54:	ldr	r3, [sp, #204]	; 0xcc
   23c58:	ldr	r3, [r3]
   23c5c:	cmp	r3, #0
   23c60:	movgt	r3, #0
   23c64:	bgt	23c08 <GetDataSlab+0x2bfc>
   23c68:	b	23c2c <GetDataSlab+0x2c20>
   23c6c:	mla	r3, r2, r1, r0
   23c70:	ldr	r2, [sp, #8]
   23c74:	add	r0, r2, r3, lsl #2
   23c78:	cmp	lr, #0
   23c7c:	movle	r3, #0
   23c80:	ble	24fa8 <GetDataSlab+0x3f9c>
   23c84:	ldr	r2, [sp, #4]
   23c88:	mov	ip, #0
   23c8c:	b	23cdc <GetDataSlab+0x2cd0>
   23c90:	ldr	r1, [r8]
   23c94:	mul	r1, r1, r3
   23c98:	ldr	r1, [r0, r1, lsl #2]
   23c9c:	strh	r1, [r2], #2
   23ca0:	add	r3, r3, #1
   23ca4:	ldr	r1, [sp, #204]	; 0xcc
   23ca8:	ldr	r1, [r1]
   23cac:	cmp	r1, r3
   23cb0:	bgt	23c90 <GetDataSlab+0x2c84>
   23cb4:	ldr	r3, [sp, #192]	; 0xc0
   23cb8:	ldr	r3, [r3]
   23cbc:	lsl	r3, r3, #2
   23cc0:	ldr	r1, [r8, #4]
   23cc4:	mla	r0, r1, r3, r0
   23cc8:	add	ip, ip, #1
   23ccc:	ldr	r3, [sp, #204]	; 0xcc
   23cd0:	ldr	r3, [r3, #4]
   23cd4:	cmp	r3, ip
   23cd8:	ble	3d870 <GetDataSlab+0x1c864>
   23cdc:	ldr	r3, [sp, #204]	; 0xcc
   23ce0:	ldr	r3, [r3]
   23ce4:	cmp	r3, #0
   23ce8:	movgt	r3, #0
   23cec:	bgt	23c90 <GetDataSlab+0x2c84>
   23cf0:	b	23cb4 <GetDataSlab+0x2ca8>
   23cf4:	mla	r3, r2, r1, r0
   23cf8:	ldr	r2, [sp, #8]
   23cfc:	add	r0, r2, r3, lsl #1
   23d00:	cmp	lr, #0
   23d04:	movle	r3, #0
   23d08:	ble	24fa8 <GetDataSlab+0x3f9c>
   23d0c:	ldr	r2, [sp, #4]
   23d10:	mov	ip, #0
   23d14:	b	23d68 <GetDataSlab+0x2d5c>
   23d18:	ldr	r1, [r8]
   23d1c:	mul	r1, r1, r3
   23d20:	lsl	r1, r1, #1
   23d24:	ldrh	r1, [r0, r1]
   23d28:	strh	r1, [r2], #2
   23d2c:	add	r3, r3, #1
   23d30:	ldr	r1, [sp, #204]	; 0xcc
   23d34:	ldr	r1, [r1]
   23d38:	cmp	r1, r3
   23d3c:	bgt	23d18 <GetDataSlab+0x2d0c>
   23d40:	ldr	r3, [sp, #192]	; 0xc0
   23d44:	ldr	r3, [r3]
   23d48:	lsl	r3, r3, #1
   23d4c:	ldr	r1, [r8, #4]
   23d50:	mla	r0, r1, r3, r0
   23d54:	add	ip, ip, #1
   23d58:	ldr	r3, [sp, #204]	; 0xcc
   23d5c:	ldr	r3, [r3, #4]
   23d60:	cmp	r3, ip
   23d64:	ble	3d878 <GetDataSlab+0x1c86c>
   23d68:	ldr	r3, [sp, #204]	; 0xcc
   23d6c:	ldr	r3, [r3]
   23d70:	cmp	r3, #0
   23d74:	movgt	r3, #0
   23d78:	bgt	23d18 <GetDataSlab+0x2d0c>
   23d7c:	b	23d40 <GetDataSlab+0x2d34>
   23d80:	mla	r3, r2, r1, r0
   23d84:	ldr	r2, [sp, #8]
   23d88:	add	r0, r2, r3, lsl #1
   23d8c:	cmp	lr, #0
   23d90:	movle	r3, #0
   23d94:	ble	24fa8 <GetDataSlab+0x3f9c>
   23d98:	ldr	r2, [sp, #4]
   23d9c:	mov	ip, #0
   23da0:	b	23df4 <GetDataSlab+0x2de8>
   23da4:	ldr	r1, [r8]
   23da8:	mul	r1, r1, r3
   23dac:	lsl	r1, r1, #1
   23db0:	ldrh	r1, [r0, r1]
   23db4:	strh	r1, [r2], #2
   23db8:	add	r3, r3, #1
   23dbc:	ldr	r1, [sp, #204]	; 0xcc
   23dc0:	ldr	r1, [r1]
   23dc4:	cmp	r1, r3
   23dc8:	bgt	23da4 <GetDataSlab+0x2d98>
   23dcc:	ldr	r3, [sp, #192]	; 0xc0
   23dd0:	ldr	r3, [r3]
   23dd4:	lsl	r3, r3, #1
   23dd8:	ldr	r1, [r8, #4]
   23ddc:	mla	r0, r1, r3, r0
   23de0:	add	ip, ip, #1
   23de4:	ldr	r3, [sp, #204]	; 0xcc
   23de8:	ldr	r3, [r3, #4]
   23dec:	cmp	r3, ip
   23df0:	ble	3d880 <GetDataSlab+0x1c874>
   23df4:	ldr	r3, [sp, #204]	; 0xcc
   23df8:	ldr	r3, [r3]
   23dfc:	cmp	r3, #0
   23e00:	movgt	r3, #0
   23e04:	bgt	23da4 <GetDataSlab+0x2d98>
   23e08:	b	23dcc <GetDataSlab+0x2dc0>
   23e0c:	mla	r3, r2, r1, r0
   23e10:	ldr	r2, [sp, #8]
   23e14:	add	r0, r2, r3
   23e18:	cmp	lr, #0
   23e1c:	movle	r3, #0
   23e20:	ble	24fa8 <GetDataSlab+0x3f9c>
   23e24:	ldr	r2, [sp, #4]
   23e28:	mov	ip, #0
   23e2c:	b	23e78 <GetDataSlab+0x2e6c>
   23e30:	ldr	r1, [r8]
   23e34:	mul	r1, r1, r3
   23e38:	ldrsb	r1, [r0, r1]
   23e3c:	strh	r1, [r2], #2
   23e40:	add	r3, r3, #1
   23e44:	ldr	r1, [sp, #204]	; 0xcc
   23e48:	ldr	r1, [r1]
   23e4c:	cmp	r1, r3
   23e50:	bgt	23e30 <GetDataSlab+0x2e24>
   23e54:	ldr	r3, [r8, #4]
   23e58:	ldr	r1, [sp, #192]	; 0xc0
   23e5c:	ldr	r1, [r1]
   23e60:	mla	r0, r1, r3, r0
   23e64:	add	ip, ip, #1
   23e68:	ldr	r3, [sp, #204]	; 0xcc
   23e6c:	ldr	r3, [r3, #4]
   23e70:	cmp	r3, ip
   23e74:	ble	3d888 <GetDataSlab+0x1c87c>
   23e78:	ldr	r3, [sp, #204]	; 0xcc
   23e7c:	ldr	r3, [r3]
   23e80:	cmp	r3, #0
   23e84:	movgt	r3, #0
   23e88:	bgt	23e30 <GetDataSlab+0x2e24>
   23e8c:	b	23e54 <GetDataSlab+0x2e48>
   23e90:	mla	r3, r2, r1, r0
   23e94:	ldr	r2, [sp, #8]
   23e98:	add	r0, r2, r3
   23e9c:	cmp	lr, #0
   23ea0:	movle	r3, #0
   23ea4:	ble	24fa8 <GetDataSlab+0x3f9c>
   23ea8:	ldr	r2, [sp, #4]
   23eac:	mov	ip, #0
   23eb0:	b	23efc <GetDataSlab+0x2ef0>
   23eb4:	ldr	r1, [r8]
   23eb8:	mul	r1, r1, r3
   23ebc:	ldrb	r1, [r0, r1]
   23ec0:	strh	r1, [r2], #2
   23ec4:	add	r3, r3, #1
   23ec8:	ldr	r1, [sp, #204]	; 0xcc
   23ecc:	ldr	r1, [r1]
   23ed0:	cmp	r1, r3
   23ed4:	bgt	23eb4 <GetDataSlab+0x2ea8>
   23ed8:	ldr	r3, [r8, #4]
   23edc:	ldr	r1, [sp, #192]	; 0xc0
   23ee0:	ldr	r1, [r1]
   23ee4:	mla	r0, r1, r3, r0
   23ee8:	add	ip, ip, #1
   23eec:	ldr	r3, [sp, #204]	; 0xcc
   23ef0:	ldr	r3, [r3, #4]
   23ef4:	cmp	r3, ip
   23ef8:	ble	3d890 <GetDataSlab+0x1c884>
   23efc:	ldr	r3, [sp, #204]	; 0xcc
   23f00:	ldr	r3, [r3]
   23f04:	cmp	r3, #0
   23f08:	movgt	r3, #0
   23f0c:	bgt	23eb4 <GetDataSlab+0x2ea8>
   23f10:	b	23ed8 <GetDataSlab+0x2ecc>
   23f14:	cmp	r4, #12
   23f18:	beq	23f4c <GetDataSlab+0x2f40>
   23f1c:	cmp	r4, #13
   23f20:	movne	r3, #1
   23f24:	bne	24fa8 <GetDataSlab+0x3f9c>
   23f28:	mla	r3, r2, r1, r0
   23f2c:	ldr	r2, [sp, #8]
   23f30:	add	r0, r2, r3, lsl #3
   23f34:	cmp	lr, #0
   23f38:	movle	r3, #0
   23f3c:	ble	24fa8 <GetDataSlab+0x3f9c>
   23f40:	ldr	r2, [sp, #4]
   23f44:	mov	ip, #0
   23f48:	b	24020 <GetDataSlab+0x3014>
   23f4c:	mla	r3, r2, r1, r0
   23f50:	ldr	r2, [sp, #8]
   23f54:	add	r0, r2, r3, lsl #3
   23f58:	cmp	lr, #0
   23f5c:	ldrgt	r2, [sp, #4]
   23f60:	movgt	ip, #0
   23f64:	bgt	23fbc <GetDataSlab+0x2fb0>
   23f68:	mov	r3, #0
   23f6c:	b	24fa8 <GetDataSlab+0x3f9c>
   23f70:	ldr	r1, [r8]
   23f74:	mul	r1, r1, r3
   23f78:	ldr	r1, [r0, r1, lsl #3]
   23f7c:	strh	r1, [r2], #2
   23f80:	add	r3, r3, #1
   23f84:	ldr	r1, [sp, #204]	; 0xcc
   23f88:	ldr	r1, [r1]
   23f8c:	cmp	r1, r3
   23f90:	bgt	23f70 <GetDataSlab+0x2f64>
   23f94:	ldr	r3, [sp, #192]	; 0xc0
   23f98:	ldr	r3, [r3]
   23f9c:	lsl	r3, r3, #3
   23fa0:	ldr	r1, [r8, #4]
   23fa4:	mla	r0, r1, r3, r0
   23fa8:	add	ip, ip, #1
   23fac:	ldr	r3, [sp, #204]	; 0xcc
   23fb0:	ldr	r3, [r3, #4]
   23fb4:	cmp	r3, ip
   23fb8:	ble	23f68 <GetDataSlab+0x2f5c>
   23fbc:	ldr	r3, [sp, #204]	; 0xcc
   23fc0:	ldr	r3, [r3]
   23fc4:	cmp	r3, #0
   23fc8:	movgt	r3, #0
   23fcc:	bgt	23f70 <GetDataSlab+0x2f64>
   23fd0:	b	23f94 <GetDataSlab+0x2f88>
   23fd4:	ldr	r1, [r8]
   23fd8:	mul	r1, r1, r3
   23fdc:	ldr	r1, [r0, r1, lsl #3]
   23fe0:	strh	r1, [r2], #2
   23fe4:	add	r3, r3, #1
   23fe8:	ldr	r1, [sp, #204]	; 0xcc
   23fec:	ldr	r1, [r1]
   23ff0:	cmp	r1, r3
   23ff4:	bgt	23fd4 <GetDataSlab+0x2fc8>
   23ff8:	ldr	r3, [sp, #192]	; 0xc0
   23ffc:	ldr	r3, [r3]
   24000:	lsl	r3, r3, #3
   24004:	ldr	r1, [r8, #4]
   24008:	mla	r0, r1, r3, r0
   2400c:	add	ip, ip, #1
   24010:	ldr	r3, [sp, #204]	; 0xcc
   24014:	ldr	r3, [r3, #4]
   24018:	cmp	r3, ip
   2401c:	ble	3d898 <GetDataSlab+0x1c88c>
   24020:	ldr	r3, [sp, #204]	; 0xcc
   24024:	ldr	r3, [r3]
   24028:	cmp	r3, #0
   2402c:	movgt	r3, #0
   24030:	bgt	23fd4 <GetDataSlab+0x2fc8>
   24034:	b	23ff8 <GetDataSlab+0x2fec>
   24038:	sub	r3, r4, #1
   2403c:	cmp	r3, #8
   24040:	addls	pc, pc, r3, lsl #2
   24044:	b	244c4 <GetDataSlab+0x34b8>
   24048:	b	243bc <GetDataSlab+0x33b0>
   2404c:	b	24440 <GetDataSlab+0x3434>
   24050:	b	242a4 <GetDataSlab+0x3298>
   24054:	b	24330 <GetDataSlab+0x3324>
   24058:	b	24194 <GetDataSlab+0x3188>
   2405c:	b	2421c <GetDataSlab+0x3210>
   24060:	b	24100 <GetDataSlab+0x30f4>
   24064:	b	244c4 <GetDataSlab+0x34b8>
   24068:	b	2406c <GetDataSlab+0x3060>
   2406c:	mla	r3, r2, r1, r0
   24070:	ldr	r2, [sp, #8]
   24074:	add	r0, r2, r3, lsl #3
   24078:	cmp	lr, #0
   2407c:	movle	r3, #0
   24080:	ble	24fa8 <GetDataSlab+0x3f9c>
   24084:	ldr	r2, [sp, #4]
   24088:	mov	ip, #0
   2408c:	b	240e8 <GetDataSlab+0x30dc>
   24090:	ldr	r1, [r8]
   24094:	mul	r1, r1, r3
   24098:	add	r1, r0, r1, lsl #3
   2409c:	vldr	d7, [r1]
   240a0:	vcvt.s32.f64	s15, d7
   240a4:	vmov	r1, s15
   240a8:	strb	r1, [r2], #1
   240ac:	add	r3, r3, #1
   240b0:	ldr	r1, [sp, #204]	; 0xcc
   240b4:	ldr	r1, [r1]
   240b8:	cmp	r1, r3
   240bc:	bgt	24090 <GetDataSlab+0x3084>
   240c0:	ldr	r3, [sp, #192]	; 0xc0
   240c4:	ldr	r3, [r3]
   240c8:	lsl	r3, r3, #3
   240cc:	ldr	r1, [r8, #4]
   240d0:	mla	r0, r1, r3, r0
   240d4:	add	ip, ip, #1
   240d8:	ldr	r3, [sp, #204]	; 0xcc
   240dc:	ldr	r3, [r3, #4]
   240e0:	cmp	r3, ip
   240e4:	ble	3d8a0 <GetDataSlab+0x1c894>
   240e8:	ldr	r3, [sp, #204]	; 0xcc
   240ec:	ldr	r3, [r3]
   240f0:	cmp	r3, #0
   240f4:	movgt	r3, #0
   240f8:	bgt	24090 <GetDataSlab+0x3084>
   240fc:	b	240c0 <GetDataSlab+0x30b4>
   24100:	mla	r3, r2, r1, r0
   24104:	ldr	r2, [sp, #8]
   24108:	add	r0, r2, r3, lsl #2
   2410c:	cmp	lr, #0
   24110:	movle	r3, #0
   24114:	ble	24fa8 <GetDataSlab+0x3f9c>
   24118:	ldr	r2, [sp, #4]
   2411c:	mov	ip, #0
   24120:	b	2417c <GetDataSlab+0x3170>
   24124:	ldr	r1, [r8]
   24128:	mul	r1, r1, r3
   2412c:	add	r1, r0, r1, lsl #2
   24130:	vldr	s15, [r1]
   24134:	vcvt.s32.f32	s15, s15
   24138:	vmov	r1, s15
   2413c:	strb	r1, [r2], #1
   24140:	add	r3, r3, #1
   24144:	ldr	r1, [sp, #204]	; 0xcc
   24148:	ldr	r1, [r1]
   2414c:	cmp	r1, r3
   24150:	bgt	24124 <GetDataSlab+0x3118>
   24154:	ldr	r3, [sp, #192]	; 0xc0
   24158:	ldr	r3, [r3]
   2415c:	lsl	r3, r3, #2
   24160:	ldr	r1, [r8, #4]
   24164:	mla	r0, r1, r3, r0
   24168:	add	ip, ip, #1
   2416c:	ldr	r3, [sp, #204]	; 0xcc
   24170:	ldr	r3, [r3, #4]
   24174:	cmp	r3, ip
   24178:	ble	3d8a8 <GetDataSlab+0x1c89c>
   2417c:	ldr	r3, [sp, #204]	; 0xcc
   24180:	ldr	r3, [r3]
   24184:	cmp	r3, #0
   24188:	movgt	r3, #0
   2418c:	bgt	24124 <GetDataSlab+0x3118>
   24190:	b	24154 <GetDataSlab+0x3148>
   24194:	mla	r3, r2, r1, r0
   24198:	ldr	r2, [sp, #8]
   2419c:	add	r0, r2, r3, lsl #2
   241a0:	cmp	lr, #0
   241a4:	movle	r3, #0
   241a8:	ble	24fa8 <GetDataSlab+0x3f9c>
   241ac:	ldr	r2, [sp, #4]
   241b0:	mov	ip, #0
   241b4:	b	24204 <GetDataSlab+0x31f8>
   241b8:	ldr	r1, [r8]
   241bc:	mul	r1, r1, r3
   241c0:	ldr	r1, [r0, r1, lsl #2]
   241c4:	strb	r1, [r2], #1
   241c8:	add	r3, r3, #1
   241cc:	ldr	r1, [sp, #204]	; 0xcc
   241d0:	ldr	r1, [r1]
   241d4:	cmp	r1, r3
   241d8:	bgt	241b8 <GetDataSlab+0x31ac>
   241dc:	ldr	r3, [sp, #192]	; 0xc0
   241e0:	ldr	r3, [r3]
   241e4:	lsl	r3, r3, #2
   241e8:	ldr	r1, [r8, #4]
   241ec:	mla	r0, r1, r3, r0
   241f0:	add	ip, ip, #1
   241f4:	ldr	r3, [sp, #204]	; 0xcc
   241f8:	ldr	r3, [r3, #4]
   241fc:	cmp	r3, ip
   24200:	ble	3d8b0 <GetDataSlab+0x1c8a4>
   24204:	ldr	r3, [sp, #204]	; 0xcc
   24208:	ldr	r3, [r3]
   2420c:	cmp	r3, #0
   24210:	movgt	r3, #0
   24214:	bgt	241b8 <GetDataSlab+0x31ac>
   24218:	b	241dc <GetDataSlab+0x31d0>
   2421c:	mla	r3, r2, r1, r0
   24220:	ldr	r2, [sp, #8]
   24224:	add	r0, r2, r3, lsl #2
   24228:	cmp	lr, #0
   2422c:	movle	r3, #0
   24230:	ble	24fa8 <GetDataSlab+0x3f9c>
   24234:	ldr	r2, [sp, #4]
   24238:	mov	ip, #0
   2423c:	b	2428c <GetDataSlab+0x3280>
   24240:	ldr	r1, [r8]
   24244:	mul	r1, r1, r3
   24248:	ldr	r1, [r0, r1, lsl #2]
   2424c:	strb	r1, [r2], #1
   24250:	add	r3, r3, #1
   24254:	ldr	r1, [sp, #204]	; 0xcc
   24258:	ldr	r1, [r1]
   2425c:	cmp	r1, r3
   24260:	bgt	24240 <GetDataSlab+0x3234>
   24264:	ldr	r3, [sp, #192]	; 0xc0
   24268:	ldr	r3, [r3]
   2426c:	lsl	r3, r3, #2
   24270:	ldr	r1, [r8, #4]
   24274:	mla	r0, r1, r3, r0
   24278:	add	ip, ip, #1
   2427c:	ldr	r3, [sp, #204]	; 0xcc
   24280:	ldr	r3, [r3, #4]
   24284:	cmp	r3, ip
   24288:	ble	3d8b8 <GetDataSlab+0x1c8ac>
   2428c:	ldr	r3, [sp, #204]	; 0xcc
   24290:	ldr	r3, [r3]
   24294:	cmp	r3, #0
   24298:	movgt	r3, #0
   2429c:	bgt	24240 <GetDataSlab+0x3234>
   242a0:	b	24264 <GetDataSlab+0x3258>
   242a4:	mla	r3, r2, r1, r0
   242a8:	ldr	r2, [sp, #8]
   242ac:	add	r0, r2, r3, lsl #1
   242b0:	cmp	lr, #0
   242b4:	movle	r3, #0
   242b8:	ble	24fa8 <GetDataSlab+0x3f9c>
   242bc:	ldr	r2, [sp, #4]
   242c0:	mov	ip, #0
   242c4:	b	24318 <GetDataSlab+0x330c>
   242c8:	ldr	r1, [r8]
   242cc:	mul	r1, r1, r3
   242d0:	lsl	r1, r1, #1
   242d4:	ldrh	r1, [r0, r1]
   242d8:	strb	r1, [r2], #1
   242dc:	add	r3, r3, #1
   242e0:	ldr	r1, [sp, #204]	; 0xcc
   242e4:	ldr	r1, [r1]
   242e8:	cmp	r1, r3
   242ec:	bgt	242c8 <GetDataSlab+0x32bc>
   242f0:	ldr	r3, [sp, #192]	; 0xc0
   242f4:	ldr	r3, [r3]
   242f8:	lsl	r3, r3, #1
   242fc:	ldr	r1, [r8, #4]
   24300:	mla	r0, r1, r3, r0
   24304:	add	ip, ip, #1
   24308:	ldr	r3, [sp, #204]	; 0xcc
   2430c:	ldr	r3, [r3, #4]
   24310:	cmp	r3, ip
   24314:	ble	3d8c0 <GetDataSlab+0x1c8b4>
   24318:	ldr	r3, [sp, #204]	; 0xcc
   2431c:	ldr	r3, [r3]
   24320:	cmp	r3, #0
   24324:	movgt	r3, #0
   24328:	bgt	242c8 <GetDataSlab+0x32bc>
   2432c:	b	242f0 <GetDataSlab+0x32e4>
   24330:	mla	r3, r2, r1, r0
   24334:	ldr	r2, [sp, #8]
   24338:	add	r0, r2, r3, lsl #1
   2433c:	cmp	lr, #0
   24340:	movle	r3, #0
   24344:	ble	24fa8 <GetDataSlab+0x3f9c>
   24348:	ldr	r2, [sp, #4]
   2434c:	mov	ip, #0
   24350:	b	243a4 <GetDataSlab+0x3398>
   24354:	ldr	r1, [r8]
   24358:	mul	r1, r1, r3
   2435c:	lsl	r1, r1, #1
   24360:	ldrh	r1, [r0, r1]
   24364:	strb	r1, [r2], #1
   24368:	add	r3, r3, #1
   2436c:	ldr	r1, [sp, #204]	; 0xcc
   24370:	ldr	r1, [r1]
   24374:	cmp	r1, r3
   24378:	bgt	24354 <GetDataSlab+0x3348>
   2437c:	ldr	r3, [sp, #192]	; 0xc0
   24380:	ldr	r3, [r3]
   24384:	lsl	r3, r3, #1
   24388:	ldr	r1, [r8, #4]
   2438c:	mla	r0, r1, r3, r0
   24390:	add	ip, ip, #1
   24394:	ldr	r3, [sp, #204]	; 0xcc
   24398:	ldr	r3, [r3, #4]
   2439c:	cmp	r3, ip
   243a0:	ble	3d8c8 <GetDataSlab+0x1c8bc>
   243a4:	ldr	r3, [sp, #204]	; 0xcc
   243a8:	ldr	r3, [r3]
   243ac:	cmp	r3, #0
   243b0:	movgt	r3, #0
   243b4:	bgt	24354 <GetDataSlab+0x3348>
   243b8:	b	2437c <GetDataSlab+0x3370>
   243bc:	mla	r3, r2, r1, r0
   243c0:	ldr	r2, [sp, #8]
   243c4:	add	r0, r2, r3
   243c8:	cmp	lr, #0
   243cc:	movle	r3, #0
   243d0:	ble	24fa8 <GetDataSlab+0x3f9c>
   243d4:	ldr	r2, [sp, #4]
   243d8:	mov	ip, #0
   243dc:	b	24428 <GetDataSlab+0x341c>
   243e0:	ldr	r1, [r8]
   243e4:	mul	r1, r1, r3
   243e8:	ldrsb	r1, [r0, r1]
   243ec:	strb	r1, [r2], #1
   243f0:	add	r3, r3, #1
   243f4:	ldr	r1, [sp, #204]	; 0xcc
   243f8:	ldr	r1, [r1]
   243fc:	cmp	r1, r3
   24400:	bgt	243e0 <GetDataSlab+0x33d4>
   24404:	ldr	r3, [r8, #4]
   24408:	ldr	r1, [sp, #192]	; 0xc0
   2440c:	ldr	r1, [r1]
   24410:	mla	r0, r1, r3, r0
   24414:	add	ip, ip, #1
   24418:	ldr	r3, [sp, #204]	; 0xcc
   2441c:	ldr	r3, [r3, #4]
   24420:	cmp	r3, ip
   24424:	ble	3d8d0 <GetDataSlab+0x1c8c4>
   24428:	ldr	r3, [sp, #204]	; 0xcc
   2442c:	ldr	r3, [r3]
   24430:	cmp	r3, #0
   24434:	movgt	r3, #0
   24438:	bgt	243e0 <GetDataSlab+0x33d4>
   2443c:	b	24404 <GetDataSlab+0x33f8>
   24440:	mla	r3, r2, r1, r0
   24444:	ldr	r2, [sp, #8]
   24448:	add	r0, r2, r3
   2444c:	cmp	lr, #0
   24450:	movle	r3, #0
   24454:	ble	24fa8 <GetDataSlab+0x3f9c>
   24458:	ldr	r2, [sp, #4]
   2445c:	mov	ip, #0
   24460:	b	244ac <GetDataSlab+0x34a0>
   24464:	ldr	r1, [r8]
   24468:	mul	r1, r1, r3
   2446c:	ldrb	r1, [r0, r1]
   24470:	strb	r1, [r2], #1
   24474:	add	r3, r3, #1
   24478:	ldr	r1, [sp, #204]	; 0xcc
   2447c:	ldr	r1, [r1]
   24480:	cmp	r1, r3
   24484:	bgt	24464 <GetDataSlab+0x3458>
   24488:	ldr	r3, [r8, #4]
   2448c:	ldr	r1, [sp, #192]	; 0xc0
   24490:	ldr	r1, [r1]
   24494:	mla	r0, r1, r3, r0
   24498:	add	ip, ip, #1
   2449c:	ldr	r3, [sp, #204]	; 0xcc
   244a0:	ldr	r3, [r3, #4]
   244a4:	cmp	r3, ip
   244a8:	ble	3d8d8 <GetDataSlab+0x1c8cc>
   244ac:	ldr	r3, [sp, #204]	; 0xcc
   244b0:	ldr	r3, [r3]
   244b4:	cmp	r3, #0
   244b8:	movgt	r3, #0
   244bc:	bgt	24464 <GetDataSlab+0x3458>
   244c0:	b	24488 <GetDataSlab+0x347c>
   244c4:	cmp	r4, #12
   244c8:	beq	244fc <GetDataSlab+0x34f0>
   244cc:	cmp	r4, #13
   244d0:	movne	r3, #1
   244d4:	bne	24fa8 <GetDataSlab+0x3f9c>
   244d8:	mla	r3, r2, r1, r0
   244dc:	ldr	r2, [sp, #8]
   244e0:	add	r0, r2, r3, lsl #3
   244e4:	cmp	lr, #0
   244e8:	movle	r3, #0
   244ec:	ble	24fa8 <GetDataSlab+0x3f9c>
   244f0:	ldr	r2, [sp, #4]
   244f4:	mov	ip, #0
   244f8:	b	245d0 <GetDataSlab+0x35c4>
   244fc:	mla	r3, r2, r1, r0
   24500:	ldr	r2, [sp, #8]
   24504:	add	r0, r2, r3, lsl #3
   24508:	cmp	lr, #0
   2450c:	ldrgt	r2, [sp, #4]
   24510:	movgt	ip, #0
   24514:	bgt	2456c <GetDataSlab+0x3560>
   24518:	mov	r3, #0
   2451c:	b	24fa8 <GetDataSlab+0x3f9c>
   24520:	ldr	r1, [r8]
   24524:	mul	r1, r1, r3
   24528:	ldr	r1, [r0, r1, lsl #3]
   2452c:	strb	r1, [r2], #1
   24530:	add	r3, r3, #1
   24534:	ldr	r1, [sp, #204]	; 0xcc
   24538:	ldr	r1, [r1]
   2453c:	cmp	r1, r3
   24540:	bgt	24520 <GetDataSlab+0x3514>
   24544:	ldr	r3, [sp, #192]	; 0xc0
   24548:	ldr	r3, [r3]
   2454c:	lsl	r3, r3, #3
   24550:	ldr	r1, [r8, #4]
   24554:	mla	r0, r1, r3, r0
   24558:	add	ip, ip, #1
   2455c:	ldr	r3, [sp, #204]	; 0xcc
   24560:	ldr	r3, [r3, #4]
   24564:	cmp	r3, ip
   24568:	ble	24518 <GetDataSlab+0x350c>
   2456c:	ldr	r3, [sp, #204]	; 0xcc
   24570:	ldr	r3, [r3]
   24574:	cmp	r3, #0
   24578:	movgt	r3, #0
   2457c:	bgt	24520 <GetDataSlab+0x3514>
   24580:	b	24544 <GetDataSlab+0x3538>
   24584:	ldr	r1, [r8]
   24588:	mul	r1, r1, r3
   2458c:	ldr	r1, [r0, r1, lsl #3]
   24590:	strb	r1, [r2], #1
   24594:	add	r3, r3, #1
   24598:	ldr	r1, [sp, #204]	; 0xcc
   2459c:	ldr	r1, [r1]
   245a0:	cmp	r1, r3
   245a4:	bgt	24584 <GetDataSlab+0x3578>
   245a8:	ldr	r3, [sp, #192]	; 0xc0
   245ac:	ldr	r3, [r3]
   245b0:	lsl	r3, r3, #3
   245b4:	ldr	r1, [r8, #4]
   245b8:	mla	r0, r1, r3, r0
   245bc:	add	ip, ip, #1
   245c0:	ldr	r3, [sp, #204]	; 0xcc
   245c4:	ldr	r3, [r3, #4]
   245c8:	cmp	r3, ip
   245cc:	ble	3d8e0 <GetDataSlab+0x1c8d4>
   245d0:	ldr	r3, [sp, #204]	; 0xcc
   245d4:	ldr	r3, [r3]
   245d8:	cmp	r3, #0
   245dc:	movgt	r3, #0
   245e0:	bgt	24584 <GetDataSlab+0x3578>
   245e4:	b	245a8 <GetDataSlab+0x359c>
   245e8:	sub	r3, r4, #1
   245ec:	cmp	r3, #8
   245f0:	addls	pc, pc, r3, lsl #2
   245f4:	b	24a74 <GetDataSlab+0x3a68>
   245f8:	b	2496c <GetDataSlab+0x3960>
   245fc:	b	249f0 <GetDataSlab+0x39e4>
   24600:	b	24854 <GetDataSlab+0x3848>
   24604:	b	248e0 <GetDataSlab+0x38d4>
   24608:	b	24744 <GetDataSlab+0x3738>
   2460c:	b	247cc <GetDataSlab+0x37c0>
   24610:	b	246b0 <GetDataSlab+0x36a4>
   24614:	b	24a74 <GetDataSlab+0x3a68>
   24618:	b	2461c <GetDataSlab+0x3610>
   2461c:	mla	r3, r2, r1, r0
   24620:	ldr	r2, [sp, #8]
   24624:	add	r0, r2, r3, lsl #3
   24628:	cmp	lr, #0
   2462c:	movle	r3, #0
   24630:	ble	24fa8 <GetDataSlab+0x3f9c>
   24634:	ldr	r2, [sp, #4]
   24638:	mov	ip, #0
   2463c:	b	24698 <GetDataSlab+0x368c>
   24640:	ldr	r1, [r8]
   24644:	mul	r1, r1, r3
   24648:	add	r1, r0, r1, lsl #3
   2464c:	vldr	d7, [r1]
   24650:	vcvt.u32.f64	s15, d7
   24654:	vmov	r1, s15
   24658:	strb	r1, [r2], #1
   2465c:	add	r3, r3, #1
   24660:	ldr	r1, [sp, #204]	; 0xcc
   24664:	ldr	r1, [r1]
   24668:	cmp	r1, r3
   2466c:	bgt	24640 <GetDataSlab+0x3634>
   24670:	ldr	r3, [sp, #192]	; 0xc0
   24674:	ldr	r3, [r3]
   24678:	lsl	r3, r3, #3
   2467c:	ldr	r1, [r8, #4]
   24680:	mla	r0, r1, r3, r0
   24684:	add	ip, ip, #1
   24688:	ldr	r3, [sp, #204]	; 0xcc
   2468c:	ldr	r3, [r3, #4]
   24690:	cmp	r3, ip
   24694:	ble	3d8e8 <GetDataSlab+0x1c8dc>
   24698:	ldr	r3, [sp, #204]	; 0xcc
   2469c:	ldr	r3, [r3]
   246a0:	cmp	r3, #0
   246a4:	movgt	r3, #0
   246a8:	bgt	24640 <GetDataSlab+0x3634>
   246ac:	b	24670 <GetDataSlab+0x3664>
   246b0:	mla	r3, r2, r1, r0
   246b4:	ldr	r2, [sp, #8]
   246b8:	add	r0, r2, r3, lsl #2
   246bc:	cmp	lr, #0
   246c0:	movle	r3, #0
   246c4:	ble	24fa8 <GetDataSlab+0x3f9c>
   246c8:	ldr	r2, [sp, #4]
   246cc:	mov	ip, #0
   246d0:	b	2472c <GetDataSlab+0x3720>
   246d4:	ldr	r1, [r8]
   246d8:	mul	r1, r1, r3
   246dc:	add	r1, r0, r1, lsl #2
   246e0:	vldr	s15, [r1]
   246e4:	vcvt.u32.f32	s15, s15
   246e8:	vmov	r1, s15
   246ec:	strb	r1, [r2], #1
   246f0:	add	r3, r3, #1
   246f4:	ldr	r1, [sp, #204]	; 0xcc
   246f8:	ldr	r1, [r1]
   246fc:	cmp	r1, r3
   24700:	bgt	246d4 <GetDataSlab+0x36c8>
   24704:	ldr	r3, [sp, #192]	; 0xc0
   24708:	ldr	r3, [r3]
   2470c:	lsl	r3, r3, #2
   24710:	ldr	r1, [r8, #4]
   24714:	mla	r0, r1, r3, r0
   24718:	add	ip, ip, #1
   2471c:	ldr	r3, [sp, #204]	; 0xcc
   24720:	ldr	r3, [r3, #4]
   24724:	cmp	r3, ip
   24728:	ble	3d8f0 <GetDataSlab+0x1c8e4>
   2472c:	ldr	r3, [sp, #204]	; 0xcc
   24730:	ldr	r3, [r3]
   24734:	cmp	r3, #0
   24738:	movgt	r3, #0
   2473c:	bgt	246d4 <GetDataSlab+0x36c8>
   24740:	b	24704 <GetDataSlab+0x36f8>
   24744:	mla	r3, r2, r1, r0
   24748:	ldr	r2, [sp, #8]
   2474c:	add	r0, r2, r3, lsl #2
   24750:	cmp	lr, #0
   24754:	movle	r3, #0
   24758:	ble	24fa8 <GetDataSlab+0x3f9c>
   2475c:	ldr	r2, [sp, #4]
   24760:	mov	ip, #0
   24764:	b	247b4 <GetDataSlab+0x37a8>
   24768:	ldr	r1, [r8]
   2476c:	mul	r1, r1, r3
   24770:	ldr	r1, [r0, r1, lsl #2]
   24774:	strb	r1, [r2], #1
   24778:	add	r3, r3, #1
   2477c:	ldr	r1, [sp, #204]	; 0xcc
   24780:	ldr	r1, [r1]
   24784:	cmp	r1, r3
   24788:	bgt	24768 <GetDataSlab+0x375c>
   2478c:	ldr	r3, [sp, #192]	; 0xc0
   24790:	ldr	r3, [r3]
   24794:	lsl	r3, r3, #2
   24798:	ldr	r1, [r8, #4]
   2479c:	mla	r0, r1, r3, r0
   247a0:	add	ip, ip, #1
   247a4:	ldr	r3, [sp, #204]	; 0xcc
   247a8:	ldr	r3, [r3, #4]
   247ac:	cmp	r3, ip
   247b0:	ble	3d8f8 <GetDataSlab+0x1c8ec>
   247b4:	ldr	r3, [sp, #204]	; 0xcc
   247b8:	ldr	r3, [r3]
   247bc:	cmp	r3, #0
   247c0:	movgt	r3, #0
   247c4:	bgt	24768 <GetDataSlab+0x375c>
   247c8:	b	2478c <GetDataSlab+0x3780>
   247cc:	mla	r3, r2, r1, r0
   247d0:	ldr	r2, [sp, #8]
   247d4:	add	r0, r2, r3, lsl #2
   247d8:	cmp	lr, #0
   247dc:	movle	r3, #0
   247e0:	ble	24fa8 <GetDataSlab+0x3f9c>
   247e4:	ldr	r2, [sp, #4]
   247e8:	mov	ip, #0
   247ec:	b	2483c <GetDataSlab+0x3830>
   247f0:	ldr	r1, [r8]
   247f4:	mul	r1, r1, r3
   247f8:	ldr	r1, [r0, r1, lsl #2]
   247fc:	strb	r1, [r2], #1
   24800:	add	r3, r3, #1
   24804:	ldr	r1, [sp, #204]	; 0xcc
   24808:	ldr	r1, [r1]
   2480c:	cmp	r1, r3
   24810:	bgt	247f0 <GetDataSlab+0x37e4>
   24814:	ldr	r3, [sp, #192]	; 0xc0
   24818:	ldr	r3, [r3]
   2481c:	lsl	r3, r3, #2
   24820:	ldr	r1, [r8, #4]
   24824:	mla	r0, r1, r3, r0
   24828:	add	ip, ip, #1
   2482c:	ldr	r3, [sp, #204]	; 0xcc
   24830:	ldr	r3, [r3, #4]
   24834:	cmp	r3, ip
   24838:	ble	3d900 <GetDataSlab+0x1c8f4>
   2483c:	ldr	r3, [sp, #204]	; 0xcc
   24840:	ldr	r3, [r3]
   24844:	cmp	r3, #0
   24848:	movgt	r3, #0
   2484c:	bgt	247f0 <GetDataSlab+0x37e4>
   24850:	b	24814 <GetDataSlab+0x3808>
   24854:	mla	r3, r2, r1, r0
   24858:	ldr	r2, [sp, #8]
   2485c:	add	r0, r2, r3, lsl #1
   24860:	cmp	lr, #0
   24864:	movle	r3, #0
   24868:	ble	24fa8 <GetDataSlab+0x3f9c>
   2486c:	ldr	r2, [sp, #4]
   24870:	mov	ip, #0
   24874:	b	248c8 <GetDataSlab+0x38bc>
   24878:	ldr	r1, [r8]
   2487c:	mul	r1, r1, r3
   24880:	lsl	r1, r1, #1
   24884:	ldrh	r1, [r0, r1]
   24888:	strb	r1, [r2], #1
   2488c:	add	r3, r3, #1
   24890:	ldr	r1, [sp, #204]	; 0xcc
   24894:	ldr	r1, [r1]
   24898:	cmp	r1, r3
   2489c:	bgt	24878 <GetDataSlab+0x386c>
   248a0:	ldr	r3, [sp, #192]	; 0xc0
   248a4:	ldr	r3, [r3]
   248a8:	lsl	r3, r3, #1
   248ac:	ldr	r1, [r8, #4]
   248b0:	mla	r0, r1, r3, r0
   248b4:	add	ip, ip, #1
   248b8:	ldr	r3, [sp, #204]	; 0xcc
   248bc:	ldr	r3, [r3, #4]
   248c0:	cmp	r3, ip
   248c4:	ble	3d908 <GetDataSlab+0x1c8fc>
   248c8:	ldr	r3, [sp, #204]	; 0xcc
   248cc:	ldr	r3, [r3]
   248d0:	cmp	r3, #0
   248d4:	movgt	r3, #0
   248d8:	bgt	24878 <GetDataSlab+0x386c>
   248dc:	b	248a0 <GetDataSlab+0x3894>
   248e0:	mla	r3, r2, r1, r0
   248e4:	ldr	r2, [sp, #8]
   248e8:	add	r0, r2, r3, lsl #1
   248ec:	cmp	lr, #0
   248f0:	movle	r3, #0
   248f4:	ble	24fa8 <GetDataSlab+0x3f9c>
   248f8:	ldr	r2, [sp, #4]
   248fc:	mov	ip, #0
   24900:	b	24954 <GetDataSlab+0x3948>
   24904:	ldr	r1, [r8]
   24908:	mul	r1, r1, r3
   2490c:	lsl	r1, r1, #1
   24910:	ldrh	r1, [r0, r1]
   24914:	strb	r1, [r2], #1
   24918:	add	r3, r3, #1
   2491c:	ldr	r1, [sp, #204]	; 0xcc
   24920:	ldr	r1, [r1]
   24924:	cmp	r1, r3
   24928:	bgt	24904 <GetDataSlab+0x38f8>
   2492c:	ldr	r3, [sp, #192]	; 0xc0
   24930:	ldr	r3, [r3]
   24934:	lsl	r3, r3, #1
   24938:	ldr	r1, [r8, #4]
   2493c:	mla	r0, r1, r3, r0
   24940:	add	ip, ip, #1
   24944:	ldr	r3, [sp, #204]	; 0xcc
   24948:	ldr	r3, [r3, #4]
   2494c:	cmp	r3, ip
   24950:	ble	3d910 <GetDataSlab+0x1c904>
   24954:	ldr	r3, [sp, #204]	; 0xcc
   24958:	ldr	r3, [r3]
   2495c:	cmp	r3, #0
   24960:	movgt	r3, #0
   24964:	bgt	24904 <GetDataSlab+0x38f8>
   24968:	b	2492c <GetDataSlab+0x3920>
   2496c:	mla	r3, r2, r1, r0
   24970:	ldr	r2, [sp, #8]
   24974:	add	r0, r2, r3
   24978:	cmp	lr, #0
   2497c:	movle	r3, #0
   24980:	ble	24fa8 <GetDataSlab+0x3f9c>
   24984:	ldr	r2, [sp, #4]
   24988:	mov	ip, #0
   2498c:	b	249d8 <GetDataSlab+0x39cc>
   24990:	ldr	r1, [r8]
   24994:	mul	r1, r1, r3
   24998:	ldrb	r1, [r0, r1]
   2499c:	strb	r1, [r2], #1
   249a0:	add	r3, r3, #1
   249a4:	ldr	r1, [sp, #204]	; 0xcc
   249a8:	ldr	r1, [r1]
   249ac:	cmp	r1, r3
   249b0:	bgt	24990 <GetDataSlab+0x3984>
   249b4:	ldr	r3, [r8, #4]
   249b8:	ldr	r1, [sp, #192]	; 0xc0
   249bc:	ldr	r1, [r1]
   249c0:	mla	r0, r1, r3, r0
   249c4:	add	ip, ip, #1
   249c8:	ldr	r3, [sp, #204]	; 0xcc
   249cc:	ldr	r3, [r3, #4]
   249d0:	cmp	r3, ip
   249d4:	ble	3d918 <GetDataSlab+0x1c90c>
   249d8:	ldr	r3, [sp, #204]	; 0xcc
   249dc:	ldr	r3, [r3]
   249e0:	cmp	r3, #0
   249e4:	movgt	r3, #0
   249e8:	bgt	24990 <GetDataSlab+0x3984>
   249ec:	b	249b4 <GetDataSlab+0x39a8>
   249f0:	mla	r3, r2, r1, r0
   249f4:	ldr	r2, [sp, #8]
   249f8:	add	r0, r2, r3
   249fc:	cmp	lr, #0
   24a00:	movle	r3, #0
   24a04:	ble	24fa8 <GetDataSlab+0x3f9c>
   24a08:	ldr	r2, [sp, #4]
   24a0c:	mov	ip, #0
   24a10:	b	24a5c <GetDataSlab+0x3a50>
   24a14:	ldr	r1, [r8]
   24a18:	mul	r1, r1, r3
   24a1c:	ldrb	r1, [r0, r1]
   24a20:	strb	r1, [r2], #1
   24a24:	add	r3, r3, #1
   24a28:	ldr	r1, [sp, #204]	; 0xcc
   24a2c:	ldr	r1, [r1]
   24a30:	cmp	r1, r3
   24a34:	bgt	24a14 <GetDataSlab+0x3a08>
   24a38:	ldr	r3, [r8, #4]
   24a3c:	ldr	r1, [sp, #192]	; 0xc0
   24a40:	ldr	r1, [r1]
   24a44:	mla	r0, r1, r3, r0
   24a48:	add	ip, ip, #1
   24a4c:	ldr	r3, [sp, #204]	; 0xcc
   24a50:	ldr	r3, [r3, #4]
   24a54:	cmp	r3, ip
   24a58:	ble	3d920 <GetDataSlab+0x1c914>
   24a5c:	ldr	r3, [sp, #204]	; 0xcc
   24a60:	ldr	r3, [r3]
   24a64:	cmp	r3, #0
   24a68:	movgt	r3, #0
   24a6c:	bgt	24a14 <GetDataSlab+0x3a08>
   24a70:	b	24a38 <GetDataSlab+0x3a2c>
   24a74:	cmp	r4, #12
   24a78:	beq	24aac <GetDataSlab+0x3aa0>
   24a7c:	cmp	r4, #13
   24a80:	movne	r3, #1
   24a84:	bne	24fa8 <GetDataSlab+0x3f9c>
   24a88:	mla	r3, r2, r1, r0
   24a8c:	ldr	r2, [sp, #8]
   24a90:	add	r0, r2, r3, lsl #3
   24a94:	cmp	lr, #0
   24a98:	movle	r3, #0
   24a9c:	ble	24fa8 <GetDataSlab+0x3f9c>
   24aa0:	ldr	r2, [sp, #4]
   24aa4:	mov	ip, #0
   24aa8:	b	24b80 <GetDataSlab+0x3b74>
   24aac:	mla	r3, r2, r1, r0
   24ab0:	ldr	r2, [sp, #8]
   24ab4:	add	r0, r2, r3, lsl #3
   24ab8:	cmp	lr, #0
   24abc:	ldrgt	r2, [sp, #4]
   24ac0:	movgt	ip, #0
   24ac4:	bgt	24b1c <GetDataSlab+0x3b10>
   24ac8:	mov	r3, #0
   24acc:	b	24fa8 <GetDataSlab+0x3f9c>
   24ad0:	ldr	r1, [r8]
   24ad4:	mul	r1, r1, r3
   24ad8:	ldr	r1, [r0, r1, lsl #3]
   24adc:	strb	r1, [r2], #1
   24ae0:	add	r3, r3, #1
   24ae4:	ldr	r1, [sp, #204]	; 0xcc
   24ae8:	ldr	r1, [r1]
   24aec:	cmp	r1, r3
   24af0:	bgt	24ad0 <GetDataSlab+0x3ac4>
   24af4:	ldr	r3, [sp, #192]	; 0xc0
   24af8:	ldr	r3, [r3]
   24afc:	lsl	r3, r3, #3
   24b00:	ldr	r1, [r8, #4]
   24b04:	mla	r0, r1, r3, r0
   24b08:	add	ip, ip, #1
   24b0c:	ldr	r3, [sp, #204]	; 0xcc
   24b10:	ldr	r3, [r3, #4]
   24b14:	cmp	r3, ip
   24b18:	ble	24ac8 <GetDataSlab+0x3abc>
   24b1c:	ldr	r3, [sp, #204]	; 0xcc
   24b20:	ldr	r3, [r3]
   24b24:	cmp	r3, #0
   24b28:	movgt	r3, #0
   24b2c:	bgt	24ad0 <GetDataSlab+0x3ac4>
   24b30:	b	24af4 <GetDataSlab+0x3ae8>
   24b34:	ldr	r1, [r8]
   24b38:	mul	r1, r1, r3
   24b3c:	ldr	r1, [r0, r1, lsl #3]
   24b40:	strb	r1, [r2], #1
   24b44:	add	r3, r3, #1
   24b48:	ldr	r1, [sp, #204]	; 0xcc
   24b4c:	ldr	r1, [r1]
   24b50:	cmp	r1, r3
   24b54:	bgt	24b34 <GetDataSlab+0x3b28>
   24b58:	ldr	r3, [sp, #192]	; 0xc0
   24b5c:	ldr	r3, [r3]
   24b60:	lsl	r3, r3, #3
   24b64:	ldr	r1, [r8, #4]
   24b68:	mla	r0, r1, r3, r0
   24b6c:	add	ip, ip, #1
   24b70:	ldr	r3, [sp, #204]	; 0xcc
   24b74:	ldr	r3, [r3, #4]
   24b78:	cmp	r3, ip
   24b7c:	ble	3d928 <GetDataSlab+0x1c91c>
   24b80:	ldr	r3, [sp, #204]	; 0xcc
   24b84:	ldr	r3, [r3]
   24b88:	cmp	r3, #0
   24b8c:	movgt	r3, #0
   24b90:	bgt	24b34 <GetDataSlab+0x3b28>
   24b94:	b	24b58 <GetDataSlab+0x3b4c>
   24b98:	sub	r3, r4, #1
   24b9c:	cmp	r3, #8
   24ba0:	addls	pc, pc, r3, lsl #2
   24ba4:	b	26b34 <GetDataSlab+0x5b28>
   24ba8:	b	26354 <GetDataSlab+0x5348>
   24bac:	b	26744 <GetDataSlab+0x5738>
   24bb0:	b	25b74 <GetDataSlab+0x4b68>
   24bb4:	b	25f64 <GetDataSlab+0x4f58>
   24bb8:	b	2539c <GetDataSlab+0x4390>
   24bbc:	b	25788 <GetDataSlab+0x477c>
   24bc0:	b	24fb4 <GetDataSlab+0x3fa8>
   24bc4:	b	26b34 <GetDataSlab+0x5b28>
   24bc8:	b	24bcc <GetDataSlab+0x3bc0>
   24bcc:	ldr	r3, [r8]
   24bd0:	str	r3, [sp, #28]
   24bd4:	sub	r3, r3, #1
   24bd8:	str	r3, [sp, #32]
   24bdc:	ldr	r3, [sp, #192]	; 0xc0
   24be0:	ldr	r3, [r3]
   24be4:	str	r3, [sp, #112]	; 0x70
   24be8:	ldr	r3, [sp, #204]	; 0xcc
   24bec:	ldr	r3, [r3]
   24bf0:	str	r3, [sp, #20]
   24bf4:	ldr	r3, [sp, #208]	; 0xd0
   24bf8:	cmp	r3, #1
   24bfc:	ble	24c30 <GetDataSlab+0x3c24>
   24c00:	str	r8, [sp, #16]
   24c04:	add	sl, sp, #36	; 0x24
   24c08:	ldr	lr, [sp, #192]	; 0xc0
   24c0c:	add	r9, sp, #112	; 0x70
   24c10:	ldr	r3, [sp, #204]	; 0xcc
   24c14:	add	r5, r3, #4
   24c18:	ldr	r3, [sp, #196]	; 0xc4
   24c1c:	add	r4, r3, #4
   24c20:	str	lr, [sp, #12]
   24c24:	mov	r6, #2
   24c28:	mov	fp, #0
   24c2c:	b	3d960 <GetDataSlab+0x1c954>
   24c30:	mov	fp, #0
   24c34:	b	3d9ec <GetDataSlab+0x1c9e0>
   24c38:	ldr	r3, [sp, #20]
   24c3c:	cmp	r3, #0
   24c40:	ble	3d388 <GetDataSlab+0x1c37c>
   24c44:	mov	r3, #0
   24c48:	str	r3, [sp, #16]
   24c4c:	b	24d20 <GetDataSlab+0x3d14>
   24c50:	ldr	r2, [r8]
   24c54:	cmp	r2, #0
   24c58:	beq	24c70 <GetDataSlab+0x3c64>
   24c5c:	ldr	r3, [sp, #12]
   24c60:	ldr	r3, [r3, #-4]
   24c64:	mul	r3, r3, r2
   24c68:	add	r5, r5, r3, lsl #3
   24c6c:	add	fp, fp, r3
   24c70:	add	r9, r9, #1
   24c74:	ldr	r3, [sp, #208]	; 0xd0
   24c78:	cmp	r3, r9
   24c7c:	beq	24d08 <GetDataSlab+0x3cfc>
   24c80:	ldr	r3, [r6]
   24c84:	add	r3, r3, #1
   24c88:	str	r3, [r6]
   24c8c:	add	r8, r8, #4
   24c90:	ldr	r2, [sp, #8]
   24c94:	ldr	r1, [r2, #4]!
   24c98:	str	r2, [sp, #8]
   24c9c:	mov	r0, r3
   24ca0:	bl	517e8 <__aeabi_idivmod>
   24ca4:	cmp	r1, #0
   24ca8:	bne	24cf4 <GetDataSlab+0x3ce8>
   24cac:	mov	r3, #0
   24cb0:	str	r3, [r6], #4
   24cb4:	add	r7, r7, #4
   24cb8:	str	r7, [sp, #12]
   24cbc:	ldr	r4, [r7]
   24cc0:	mov	r1, r4
   24cc4:	mov	r0, fp
   24cc8:	bl	517e8 <__aeabi_idivmod>
   24ccc:	subs	r3, r1, #0
   24cd0:	beq	24c50 <GetDataSlab+0x3c44>
   24cd4:	ldr	r2, [r7, #-4]
   24cd8:	ldr	r1, [r8]
   24cdc:	sub	r3, r4, r3
   24ce0:	mla	r3, r1, r2, r3
   24ce4:	add	r5, r5, r3, lsl #3
   24ce8:	add	fp, fp, r3
   24cec:	b	24c70 <GetDataSlab+0x3c64>
   24cf0:	ldr	r9, [sp, #28]
   24cf4:	add	r3, sp, #152	; 0x98
   24cf8:	add	r3, r3, r9, lsl #2
   24cfc:	ldr	r3, [r3, #-120]	; 0xffffff88
   24d00:	add	fp, fp, r3
   24d04:	add	r5, r5, r3, lsl #3
   24d08:	ldr	r3, [sp, #16]
   24d0c:	add	r3, r3, sl
   24d10:	str	r3, [sp, #16]
   24d14:	ldr	r2, [sp, #20]
   24d18:	cmp	r3, r2
   24d1c:	bge	24de4 <GetDataSlab+0x3dd8>
   24d20:	ldr	r3, [sp, #196]	; 0xc4
   24d24:	ldr	r3, [r3]
   24d28:	cmp	r3, #0
   24d2c:	addne	r5, r5, r3, lsl #3
   24d30:	addne	fp, fp, r3
   24d34:	ldr	r3, [sp, #204]	; 0xcc
   24d38:	ldr	sl, [r3]
   24d3c:	cmp	sl, #0
   24d40:	ble	24d74 <GetDataSlab+0x3d68>
   24d44:	mov	ip, r5
   24d48:	ldr	r3, [sp, #4]
   24d4c:	ldr	r2, [sp, #16]
   24d50:	add	r0, r3, r2, lsl #3
   24d54:	mov	r1, #0
   24d58:	ldrd	r2, [ip], #8
   24d5c:	strd	r2, [r0], #8
   24d60:	add	r1, r1, #1
   24d64:	ldr	r3, [sp, #204]	; 0xcc
   24d68:	ldr	sl, [r3]
   24d6c:	cmp	sl, r1
   24d70:	bgt	24d58 <GetDataSlab+0x3d4c>
   24d74:	ldr	r3, [sp, #192]	; 0xc0
   24d78:	ldr	r2, [r3]
   24d7c:	ldr	r3, [sp, #196]	; 0xc4
   24d80:	ldr	r3, [r3]
   24d84:	sub	r3, r2, r3
   24d88:	add	fp, fp, r3
   24d8c:	add	r5, r5, r3, lsl #3
   24d90:	ldr	r3, [sp, #208]	; 0xd0
   24d94:	cmp	r3, #1
   24d98:	ble	24d08 <GetDataSlab+0x3cfc>
   24d9c:	ldr	r3, [sp, #76]	; 0x4c
   24da0:	add	r3, r3, #1
   24da4:	str	r3, [sp, #76]	; 0x4c
   24da8:	ldr	r2, [sp, #204]	; 0xcc
   24dac:	ldr	r1, [r2, #4]
   24db0:	mov	r0, r3
   24db4:	bl	517e8 <__aeabi_idivmod>
   24db8:	cmp	r1, #0
   24dbc:	bne	24cf0 <GetDataSlab+0x3ce4>
   24dc0:	add	r6, sp, #76	; 0x4c
   24dc4:	ldr	r3, [sp, #204]	; 0xcc
   24dc8:	add	r3, r3, #4
   24dcc:	str	r3, [sp, #8]
   24dd0:	ldr	r3, [sp, #196]	; 0xc4
   24dd4:	add	r8, r3, #4
   24dd8:	add	r7, sp, #112	; 0x70
   24ddc:	ldr	r9, [sp, #28]
   24de0:	b	24cac <GetDataSlab+0x3ca0>
   24de4:	mov	r3, #0
   24de8:	b	24fa8 <GetDataSlab+0x3f9c>
   24dec:	ldr	r2, [r9]
   24df0:	cmp	r2, #0
   24df4:	beq	24e0c <GetDataSlab+0x3e00>
   24df8:	ldr	r3, [sp, #16]
   24dfc:	ldr	r3, [r3, #-4]
   24e00:	mul	r3, r3, r2
   24e04:	add	r5, r5, r3, lsl #3
   24e08:	add	fp, fp, r3
   24e0c:	add	sl, sl, #1
   24e10:	ldr	r3, [sp, #208]	; 0xd0
   24e14:	cmp	r3, sl
   24e18:	beq	24ea4 <GetDataSlab+0x3e98>
   24e1c:	ldr	r3, [r6]
   24e20:	add	r3, r3, #1
   24e24:	str	r3, [r6]
   24e28:	add	r9, r9, #4
   24e2c:	ldr	r2, [sp, #12]
   24e30:	ldr	r1, [r2, #4]!
   24e34:	str	r2, [sp, #12]
   24e38:	mov	r0, r3
   24e3c:	bl	517e8 <__aeabi_idivmod>
   24e40:	cmp	r1, #0
   24e44:	bne	24e90 <GetDataSlab+0x3e84>
   24e48:	mov	r3, #0
   24e4c:	str	r3, [r6], #4
   24e50:	add	r7, r7, #4
   24e54:	str	r7, [sp, #16]
   24e58:	ldr	r4, [r7]
   24e5c:	mov	r1, r4
   24e60:	mov	r0, fp
   24e64:	bl	517e8 <__aeabi_idivmod>
   24e68:	subs	r3, r1, #0
   24e6c:	beq	24dec <GetDataSlab+0x3de0>
   24e70:	ldr	r2, [r7, #-4]
   24e74:	ldr	r1, [r9]
   24e78:	sub	r3, r4, r3
   24e7c:	mla	r3, r1, r2, r3
   24e80:	add	r5, r5, r3, lsl #3
   24e84:	add	fp, fp, r3
   24e88:	b	24e0c <GetDataSlab+0x3e00>
   24e8c:	mov	sl, #1
   24e90:	add	r3, sp, #152	; 0x98
   24e94:	add	r3, r3, sl, lsl #2
   24e98:	ldr	r3, [r3, #-120]	; 0xffffff88
   24e9c:	add	fp, fp, r3
   24ea0:	add	r5, r5, r3, lsl #3
   24ea4:	ldr	r3, [sp, #24]
   24ea8:	ldr	r2, [sp, #8]
   24eac:	add	r3, r3, r2
   24eb0:	str	r3, [sp, #24]
   24eb4:	ldr	r2, [sp, #20]
   24eb8:	cmp	r3, r2
   24ebc:	bge	24fa4 <GetDataSlab+0x3f98>
   24ec0:	ldr	r3, [sp, #196]	; 0xc4
   24ec4:	ldr	r3, [r3]
   24ec8:	cmp	r3, #0
   24ecc:	addne	r5, r5, r3, lsl #3
   24ed0:	addne	fp, fp, r3
   24ed4:	ldr	r3, [sp, #204]	; 0xcc
   24ed8:	ldr	r3, [r3]
   24edc:	str	r3, [sp, #8]
   24ee0:	cmp	r3, #0
   24ee4:	ble	24f24 <GetDataSlab+0x3f18>
   24ee8:	ldr	r3, [sp, #4]
   24eec:	ldr	r2, [sp, #24]
   24ef0:	add	r2, r3, r2, lsl #3
   24ef4:	mov	r3, #0
   24ef8:	ldrd	r0, [r5]
   24efc:	strd	r0, [r2], #8
   24f00:	ldr	r1, [r8]
   24f04:	add	r5, r5, r1, lsl #3
   24f08:	add	fp, fp, r1
   24f0c:	add	r3, r3, #1
   24f10:	ldr	r1, [sp, #204]	; 0xcc
   24f14:	ldr	r1, [r1]
   24f18:	str	r1, [sp, #8]
   24f1c:	cmp	r1, r3
   24f20:	bgt	24ef8 <GetDataSlab+0x3eec>
   24f24:	ldr	r3, [r8]
   24f28:	ldr	r2, [sp, #8]
   24f2c:	mul	r3, r3, r2
   24f30:	ldr	r2, [sp, #192]	; 0xc0
   24f34:	ldr	r2, [r2]
   24f38:	sub	r3, r2, r3
   24f3c:	ldr	r2, [sp, #196]	; 0xc4
   24f40:	ldr	r2, [r2]
   24f44:	sub	r3, r3, r2
   24f48:	add	fp, fp, r3
   24f4c:	add	r5, r5, r3, lsl #3
   24f50:	ldr	r3, [sp, #208]	; 0xd0
   24f54:	cmp	r3, #1
   24f58:	ble	24ea4 <GetDataSlab+0x3e98>
   24f5c:	ldr	r3, [sp, #76]	; 0x4c
   24f60:	add	r3, r3, #1
   24f64:	str	r3, [sp, #76]	; 0x4c
   24f68:	ldr	r2, [sp, #204]	; 0xcc
   24f6c:	ldr	r1, [r2, #4]
   24f70:	mov	r0, r3
   24f74:	bl	517e8 <__aeabi_idivmod>
   24f78:	cmp	r1, #0
   24f7c:	bne	24e8c <GetDataSlab+0x3e80>
   24f80:	add	r6, sp, #76	; 0x4c
   24f84:	ldr	r3, [sp, #204]	; 0xcc
   24f88:	add	r3, r3, #4
   24f8c:	str	r3, [sp, #12]
   24f90:	ldr	r3, [sp, #196]	; 0xc4
   24f94:	add	r9, r3, #4
   24f98:	add	r7, sp, #112	; 0x70
   24f9c:	mov	sl, #1
   24fa0:	b	24e48 <GetDataSlab+0x3e3c>
   24fa4:	mov	r3, #0
   24fa8:	mov	r0, r3
   24fac:	add	sp, sp, #156	; 0x9c
   24fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fb4:	ldr	r3, [r8]
   24fb8:	str	r3, [sp, #28]
   24fbc:	sub	r3, r3, #1
   24fc0:	str	r3, [sp, #32]
   24fc4:	ldr	r3, [sp, #192]	; 0xc0
   24fc8:	ldr	r3, [r3]
   24fcc:	str	r3, [sp, #112]	; 0x70
   24fd0:	ldr	r3, [sp, #204]	; 0xcc
   24fd4:	ldr	r3, [r3]
   24fd8:	str	r3, [sp, #20]
   24fdc:	ldr	r3, [sp, #208]	; 0xd0
   24fe0:	cmp	r3, #1
   24fe4:	ble	25018 <GetDataSlab+0x400c>
   24fe8:	str	r8, [sp, #16]
   24fec:	add	sl, sp, #36	; 0x24
   24ff0:	ldr	lr, [sp, #192]	; 0xc0
   24ff4:	add	r9, sp, #112	; 0x70
   24ff8:	ldr	r3, [sp, #204]	; 0xcc
   24ffc:	add	r5, r3, #4
   25000:	ldr	r3, [sp, #196]	; 0xc4
   25004:	add	r4, r3, #4
   25008:	str	lr, [sp, #12]
   2500c:	mov	r6, #2
   25010:	mov	fp, #0
   25014:	b	3da4c <GetDataSlab+0x1ca40>
   25018:	mov	fp, #0
   2501c:	b	3dad8 <GetDataSlab+0x1cacc>
   25020:	ldr	r3, [sp, #20]
   25024:	cmp	r3, #0
   25028:	ble	3d390 <GetDataSlab+0x1c384>
   2502c:	mov	r3, #0
   25030:	str	r3, [sp, #16]
   25034:	b	25108 <GetDataSlab+0x40fc>
   25038:	ldr	r2, [r8]
   2503c:	cmp	r2, #0
   25040:	beq	25058 <GetDataSlab+0x404c>
   25044:	ldr	r3, [sp, #12]
   25048:	ldr	r3, [r3, #-4]
   2504c:	mul	r3, r3, r2
   25050:	add	r5, r5, r3, lsl #2
   25054:	add	fp, fp, r3
   25058:	add	r9, r9, #1
   2505c:	ldr	r3, [sp, #208]	; 0xd0
   25060:	cmp	r3, r9
   25064:	beq	250f0 <GetDataSlab+0x40e4>
   25068:	ldr	r3, [r6]
   2506c:	add	r3, r3, #1
   25070:	str	r3, [r6]
   25074:	add	r8, r8, #4
   25078:	ldr	r2, [sp, #8]
   2507c:	ldr	r1, [r2, #4]!
   25080:	str	r2, [sp, #8]
   25084:	mov	r0, r3
   25088:	bl	517e8 <__aeabi_idivmod>
   2508c:	cmp	r1, #0
   25090:	bne	250dc <GetDataSlab+0x40d0>
   25094:	mov	r3, #0
   25098:	str	r3, [r6], #4
   2509c:	add	r7, r7, #4
   250a0:	str	r7, [sp, #12]
   250a4:	ldr	r4, [r7]
   250a8:	mov	r1, r4
   250ac:	mov	r0, fp
   250b0:	bl	517e8 <__aeabi_idivmod>
   250b4:	subs	r3, r1, #0
   250b8:	beq	25038 <GetDataSlab+0x402c>
   250bc:	ldr	r2, [r7, #-4]
   250c0:	ldr	r1, [r8]
   250c4:	sub	r3, r4, r3
   250c8:	mla	r3, r1, r2, r3
   250cc:	add	r5, r5, r3, lsl #2
   250d0:	add	fp, fp, r3
   250d4:	b	25058 <GetDataSlab+0x404c>
   250d8:	ldr	r9, [sp, #28]
   250dc:	add	r3, sp, #152	; 0x98
   250e0:	add	r3, r3, r9, lsl #2
   250e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   250e8:	add	fp, fp, r3
   250ec:	add	r5, r5, r3, lsl #2
   250f0:	ldr	r3, [sp, #16]
   250f4:	add	r3, r3, sl
   250f8:	str	r3, [sp, #16]
   250fc:	ldr	r2, [sp, #20]
   25100:	cmp	r3, r2
   25104:	bge	251d0 <GetDataSlab+0x41c4>
   25108:	ldr	r3, [sp, #196]	; 0xc4
   2510c:	ldr	r3, [r3]
   25110:	cmp	r3, #0
   25114:	addne	r5, r5, r3, lsl #2
   25118:	addne	fp, fp, r3
   2511c:	ldr	r3, [sp, #204]	; 0xcc
   25120:	ldr	sl, [r3]
   25124:	cmp	sl, #0
   25128:	ble	25160 <GetDataSlab+0x4154>
   2512c:	mov	r1, r5
   25130:	ldr	r3, [sp, #4]
   25134:	ldr	r2, [sp, #16]
   25138:	add	r2, r3, r2, lsl #3
   2513c:	mov	r3, #0
   25140:	vldmia	r1!, {s15}
   25144:	vcvt.f64.f32	d7, s15
   25148:	vstmia	r2!, {d7}
   2514c:	add	r3, r3, #1
   25150:	ldr	r0, [sp, #204]	; 0xcc
   25154:	ldr	sl, [r0]
   25158:	cmp	sl, r3
   2515c:	bgt	25140 <GetDataSlab+0x4134>
   25160:	ldr	r3, [sp, #192]	; 0xc0
   25164:	ldr	r2, [r3]
   25168:	ldr	r3, [sp, #196]	; 0xc4
   2516c:	ldr	r3, [r3]
   25170:	sub	r3, r2, r3
   25174:	add	fp, fp, r3
   25178:	add	r5, r5, r3, lsl #2
   2517c:	ldr	r3, [sp, #208]	; 0xd0
   25180:	cmp	r3, #1
   25184:	ble	250f0 <GetDataSlab+0x40e4>
   25188:	ldr	r3, [sp, #76]	; 0x4c
   2518c:	add	r3, r3, #1
   25190:	str	r3, [sp, #76]	; 0x4c
   25194:	ldr	r2, [sp, #204]	; 0xcc
   25198:	ldr	r1, [r2, #4]
   2519c:	mov	r0, r3
   251a0:	bl	517e8 <__aeabi_idivmod>
   251a4:	cmp	r1, #0
   251a8:	bne	250d8 <GetDataSlab+0x40cc>
   251ac:	add	r6, sp, #76	; 0x4c
   251b0:	ldr	r3, [sp, #204]	; 0xcc
   251b4:	add	r3, r3, #4
   251b8:	str	r3, [sp, #8]
   251bc:	ldr	r3, [sp, #196]	; 0xc4
   251c0:	add	r8, r3, #4
   251c4:	add	r7, sp, #112	; 0x70
   251c8:	ldr	r9, [sp, #28]
   251cc:	b	25094 <GetDataSlab+0x4088>
   251d0:	mov	r3, #0
   251d4:	b	24fa8 <GetDataSlab+0x3f9c>
   251d8:	ldr	r2, [r9]
   251dc:	cmp	r2, #0
   251e0:	beq	251f8 <GetDataSlab+0x41ec>
   251e4:	ldr	r3, [sp, #16]
   251e8:	ldr	r3, [r3, #-4]
   251ec:	mul	r3, r3, r2
   251f0:	add	r5, r5, r3, lsl #2
   251f4:	add	fp, fp, r3
   251f8:	add	sl, sl, #1
   251fc:	ldr	r3, [sp, #208]	; 0xd0
   25200:	cmp	r3, sl
   25204:	beq	25290 <GetDataSlab+0x4284>
   25208:	ldr	r3, [r6]
   2520c:	add	r3, r3, #1
   25210:	str	r3, [r6]
   25214:	add	r9, r9, #4
   25218:	ldr	r2, [sp, #12]
   2521c:	ldr	r1, [r2, #4]!
   25220:	str	r2, [sp, #12]
   25224:	mov	r0, r3
   25228:	bl	517e8 <__aeabi_idivmod>
   2522c:	cmp	r1, #0
   25230:	bne	2527c <GetDataSlab+0x4270>
   25234:	mov	r3, #0
   25238:	str	r3, [r6], #4
   2523c:	add	r7, r7, #4
   25240:	str	r7, [sp, #16]
   25244:	ldr	r4, [r7]
   25248:	mov	r1, r4
   2524c:	mov	r0, fp
   25250:	bl	517e8 <__aeabi_idivmod>
   25254:	subs	r3, r1, #0
   25258:	beq	251d8 <GetDataSlab+0x41cc>
   2525c:	ldr	r2, [r7, #-4]
   25260:	ldr	r1, [r9]
   25264:	sub	r3, r4, r3
   25268:	mla	r3, r1, r2, r3
   2526c:	add	r5, r5, r3, lsl #2
   25270:	add	fp, fp, r3
   25274:	b	251f8 <GetDataSlab+0x41ec>
   25278:	mov	sl, #1
   2527c:	add	r3, sp, #152	; 0x98
   25280:	add	r3, r3, sl, lsl #2
   25284:	ldr	r3, [r3, #-120]	; 0xffffff88
   25288:	add	fp, fp, r3
   2528c:	add	r5, r5, r3, lsl #2
   25290:	ldr	r3, [sp, #24]
   25294:	ldr	r2, [sp, #8]
   25298:	add	r3, r3, r2
   2529c:	str	r3, [sp, #24]
   252a0:	ldr	r2, [sp, #20]
   252a4:	cmp	r3, r2
   252a8:	bge	25394 <GetDataSlab+0x4388>
   252ac:	ldr	r3, [sp, #196]	; 0xc4
   252b0:	ldr	r3, [r3]
   252b4:	cmp	r3, #0
   252b8:	addne	r5, r5, r3, lsl #2
   252bc:	addne	fp, fp, r3
   252c0:	ldr	r3, [sp, #204]	; 0xcc
   252c4:	ldr	r3, [r3]
   252c8:	str	r3, [sp, #8]
   252cc:	cmp	r3, #0
   252d0:	ble	25314 <GetDataSlab+0x4308>
   252d4:	ldr	r3, [sp, #4]
   252d8:	ldr	r2, [sp, #24]
   252dc:	add	r2, r3, r2, lsl #3
   252e0:	mov	r3, #0
   252e4:	vldr	s15, [r5]
   252e8:	vcvt.f64.f32	d7, s15
   252ec:	vstmia	r2!, {d7}
   252f0:	ldr	r1, [r8]
   252f4:	add	r5, r5, r1, lsl #2
   252f8:	add	fp, fp, r1
   252fc:	add	r3, r3, #1
   25300:	ldr	r1, [sp, #204]	; 0xcc
   25304:	ldr	r1, [r1]
   25308:	str	r1, [sp, #8]
   2530c:	cmp	r1, r3
   25310:	bgt	252e4 <GetDataSlab+0x42d8>
   25314:	ldr	r3, [r8]
   25318:	ldr	r2, [sp, #8]
   2531c:	mul	r3, r3, r2
   25320:	ldr	r2, [sp, #192]	; 0xc0
   25324:	ldr	r2, [r2]
   25328:	sub	r3, r2, r3
   2532c:	ldr	r2, [sp, #196]	; 0xc4
   25330:	ldr	r2, [r2]
   25334:	sub	r3, r3, r2
   25338:	add	fp, fp, r3
   2533c:	add	r5, r5, r3, lsl #2
   25340:	ldr	r3, [sp, #208]	; 0xd0
   25344:	cmp	r3, #1
   25348:	ble	25290 <GetDataSlab+0x4284>
   2534c:	ldr	r3, [sp, #76]	; 0x4c
   25350:	add	r3, r3, #1
   25354:	str	r3, [sp, #76]	; 0x4c
   25358:	ldr	r2, [sp, #204]	; 0xcc
   2535c:	ldr	r1, [r2, #4]
   25360:	mov	r0, r3
   25364:	bl	517e8 <__aeabi_idivmod>
   25368:	cmp	r1, #0
   2536c:	bne	25278 <GetDataSlab+0x426c>
   25370:	add	r6, sp, #76	; 0x4c
   25374:	ldr	r3, [sp, #204]	; 0xcc
   25378:	add	r3, r3, #4
   2537c:	str	r3, [sp, #12]
   25380:	ldr	r3, [sp, #196]	; 0xc4
   25384:	add	r9, r3, #4
   25388:	add	r7, sp, #112	; 0x70
   2538c:	mov	sl, #1
   25390:	b	25234 <GetDataSlab+0x4228>
   25394:	mov	r3, #0
   25398:	b	24fa8 <GetDataSlab+0x3f9c>
   2539c:	ldr	r3, [r8]
   253a0:	str	r3, [sp, #28]
   253a4:	sub	r3, r3, #1
   253a8:	str	r3, [sp, #32]
   253ac:	ldr	r3, [sp, #192]	; 0xc0
   253b0:	ldr	r3, [r3]
   253b4:	str	r3, [sp, #112]	; 0x70
   253b8:	ldr	r3, [sp, #204]	; 0xcc
   253bc:	ldr	r3, [r3]
   253c0:	str	r3, [sp, #20]
   253c4:	ldr	r3, [sp, #208]	; 0xd0
   253c8:	cmp	r3, #1
   253cc:	ble	25400 <GetDataSlab+0x43f4>
   253d0:	str	r8, [sp, #16]
   253d4:	add	sl, sp, #36	; 0x24
   253d8:	ldr	lr, [sp, #192]	; 0xc0
   253dc:	add	r9, sp, #112	; 0x70
   253e0:	ldr	r3, [sp, #204]	; 0xcc
   253e4:	add	r5, r3, #4
   253e8:	ldr	r3, [sp, #196]	; 0xc4
   253ec:	add	r4, r3, #4
   253f0:	str	lr, [sp, #12]
   253f4:	mov	r6, #2
   253f8:	mov	fp, #0
   253fc:	b	3db38 <GetDataSlab+0x1cb2c>
   25400:	mov	fp, #0
   25404:	b	3dbc4 <GetDataSlab+0x1cbb8>
   25408:	ldr	r3, [sp, #20]
   2540c:	cmp	r3, #0
   25410:	ble	3d398 <GetDataSlab+0x1c38c>
   25414:	mov	r3, #0
   25418:	str	r3, [sp, #16]
   2541c:	b	254f0 <GetDataSlab+0x44e4>
   25420:	ldr	r2, [r8]
   25424:	cmp	r2, #0
   25428:	beq	25440 <GetDataSlab+0x4434>
   2542c:	ldr	r3, [sp, #12]
   25430:	ldr	r3, [r3, #-4]
   25434:	mul	r3, r3, r2
   25438:	add	r5, r5, r3, lsl #2
   2543c:	add	fp, fp, r3
   25440:	add	r9, r9, #1
   25444:	ldr	r3, [sp, #208]	; 0xd0
   25448:	cmp	r3, r9
   2544c:	beq	254d8 <GetDataSlab+0x44cc>
   25450:	ldr	r3, [r6]
   25454:	add	r3, r3, #1
   25458:	str	r3, [r6]
   2545c:	add	r8, r8, #4
   25460:	ldr	r2, [sp, #8]
   25464:	ldr	r1, [r2, #4]!
   25468:	str	r2, [sp, #8]
   2546c:	mov	r0, r3
   25470:	bl	517e8 <__aeabi_idivmod>
   25474:	cmp	r1, #0
   25478:	bne	254c4 <GetDataSlab+0x44b8>
   2547c:	mov	r3, #0
   25480:	str	r3, [r6], #4
   25484:	add	r7, r7, #4
   25488:	str	r7, [sp, #12]
   2548c:	ldr	r4, [r7]
   25490:	mov	r1, r4
   25494:	mov	r0, fp
   25498:	bl	517e8 <__aeabi_idivmod>
   2549c:	subs	r3, r1, #0
   254a0:	beq	25420 <GetDataSlab+0x4414>
   254a4:	ldr	r2, [r7, #-4]
   254a8:	ldr	r1, [r8]
   254ac:	sub	r3, r4, r3
   254b0:	mla	r3, r1, r2, r3
   254b4:	add	r5, r5, r3, lsl #2
   254b8:	add	fp, fp, r3
   254bc:	b	25440 <GetDataSlab+0x4434>
   254c0:	ldr	r9, [sp, #28]
   254c4:	add	r3, sp, #152	; 0x98
   254c8:	add	r3, r3, r9, lsl #2
   254cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   254d0:	add	fp, fp, r3
   254d4:	add	r5, r5, r3, lsl #2
   254d8:	ldr	r3, [sp, #16]
   254dc:	add	r3, r3, sl
   254e0:	str	r3, [sp, #16]
   254e4:	ldr	r2, [sp, #20]
   254e8:	cmp	r3, r2
   254ec:	bge	255bc <GetDataSlab+0x45b0>
   254f0:	ldr	r3, [sp, #196]	; 0xc4
   254f4:	ldr	r3, [r3]
   254f8:	cmp	r3, #0
   254fc:	addne	r5, r5, r3, lsl #2
   25500:	addne	fp, fp, r3
   25504:	ldr	r3, [sp, #204]	; 0xcc
   25508:	ldr	sl, [r3]
   2550c:	cmp	sl, #0
   25510:	ble	2554c <GetDataSlab+0x4540>
   25514:	sub	r1, r5, #4
   25518:	ldr	r3, [sp, #4]
   2551c:	ldr	r2, [sp, #16]
   25520:	add	r2, r3, r2, lsl #3
   25524:	mov	r3, #0
   25528:	ldr	r0, [r1, #4]!
   2552c:	vmov	s15, r0
   25530:	vcvt.f64.s32	d7, s15
   25534:	vstmia	r2!, {d7}
   25538:	add	r3, r3, #1
   2553c:	ldr	r0, [sp, #204]	; 0xcc
   25540:	ldr	sl, [r0]
   25544:	cmp	sl, r3
   25548:	bgt	25528 <GetDataSlab+0x451c>
   2554c:	ldr	r3, [sp, #192]	; 0xc0
   25550:	ldr	r2, [r3]
   25554:	ldr	r3, [sp, #196]	; 0xc4
   25558:	ldr	r3, [r3]
   2555c:	sub	r3, r2, r3
   25560:	add	fp, fp, r3
   25564:	add	r5, r5, r3, lsl #2
   25568:	ldr	r3, [sp, #208]	; 0xd0
   2556c:	cmp	r3, #1
   25570:	ble	254d8 <GetDataSlab+0x44cc>
   25574:	ldr	r3, [sp, #76]	; 0x4c
   25578:	add	r3, r3, #1
   2557c:	str	r3, [sp, #76]	; 0x4c
   25580:	ldr	r2, [sp, #204]	; 0xcc
   25584:	ldr	r1, [r2, #4]
   25588:	mov	r0, r3
   2558c:	bl	517e8 <__aeabi_idivmod>
   25590:	cmp	r1, #0
   25594:	bne	254c0 <GetDataSlab+0x44b4>
   25598:	add	r6, sp, #76	; 0x4c
   2559c:	ldr	r3, [sp, #204]	; 0xcc
   255a0:	add	r3, r3, #4
   255a4:	str	r3, [sp, #8]
   255a8:	ldr	r3, [sp, #196]	; 0xc4
   255ac:	add	r8, r3, #4
   255b0:	add	r7, sp, #112	; 0x70
   255b4:	ldr	r9, [sp, #28]
   255b8:	b	2547c <GetDataSlab+0x4470>
   255bc:	mov	r3, #0
   255c0:	b	24fa8 <GetDataSlab+0x3f9c>
   255c4:	ldr	r2, [r9]
   255c8:	cmp	r2, #0
   255cc:	beq	255e4 <GetDataSlab+0x45d8>
   255d0:	ldr	r3, [sp, #16]
   255d4:	ldr	r3, [r3, #-4]
   255d8:	mul	r3, r3, r2
   255dc:	add	r5, r5, r3, lsl #2
   255e0:	add	fp, fp, r3
   255e4:	add	sl, sl, #1
   255e8:	ldr	r3, [sp, #208]	; 0xd0
   255ec:	cmp	r3, sl
   255f0:	beq	2567c <GetDataSlab+0x4670>
   255f4:	ldr	r3, [r6]
   255f8:	add	r3, r3, #1
   255fc:	str	r3, [r6]
   25600:	add	r9, r9, #4
   25604:	ldr	r2, [sp, #12]
   25608:	ldr	r1, [r2, #4]!
   2560c:	str	r2, [sp, #12]
   25610:	mov	r0, r3
   25614:	bl	517e8 <__aeabi_idivmod>
   25618:	cmp	r1, #0
   2561c:	bne	25668 <GetDataSlab+0x465c>
   25620:	mov	r3, #0
   25624:	str	r3, [r6], #4
   25628:	add	r7, r7, #4
   2562c:	str	r7, [sp, #16]
   25630:	ldr	r4, [r7]
   25634:	mov	r1, r4
   25638:	mov	r0, fp
   2563c:	bl	517e8 <__aeabi_idivmod>
   25640:	subs	r3, r1, #0
   25644:	beq	255c4 <GetDataSlab+0x45b8>
   25648:	ldr	r2, [r7, #-4]
   2564c:	ldr	r1, [r9]
   25650:	sub	r3, r4, r3
   25654:	mla	r3, r1, r2, r3
   25658:	add	r5, r5, r3, lsl #2
   2565c:	add	fp, fp, r3
   25660:	b	255e4 <GetDataSlab+0x45d8>
   25664:	mov	sl, #1
   25668:	add	r3, sp, #152	; 0x98
   2566c:	add	r3, r3, sl, lsl #2
   25670:	ldr	r3, [r3, #-120]	; 0xffffff88
   25674:	add	fp, fp, r3
   25678:	add	r5, r5, r3, lsl #2
   2567c:	ldr	r3, [sp, #24]
   25680:	ldr	r2, [sp, #8]
   25684:	add	r3, r3, r2
   25688:	str	r3, [sp, #24]
   2568c:	ldr	r2, [sp, #20]
   25690:	cmp	r3, r2
   25694:	bge	25780 <GetDataSlab+0x4774>
   25698:	ldr	r3, [sp, #196]	; 0xc4
   2569c:	ldr	r3, [r3]
   256a0:	cmp	r3, #0
   256a4:	addne	r5, r5, r3, lsl #2
   256a8:	addne	fp, fp, r3
   256ac:	ldr	r3, [sp, #204]	; 0xcc
   256b0:	ldr	r3, [r3]
   256b4:	str	r3, [sp, #8]
   256b8:	cmp	r3, #0
   256bc:	ble	25700 <GetDataSlab+0x46f4>
   256c0:	ldr	r3, [sp, #4]
   256c4:	ldr	r2, [sp, #24]
   256c8:	add	r2, r3, r2, lsl #3
   256cc:	mov	r3, #0
   256d0:	vldr	s15, [r5]
   256d4:	vcvt.f64.s32	d7, s15
   256d8:	vstmia	r2!, {d7}
   256dc:	ldr	r1, [r8]
   256e0:	add	r5, r5, r1, lsl #2
   256e4:	add	fp, fp, r1
   256e8:	add	r3, r3, #1
   256ec:	ldr	r1, [sp, #204]	; 0xcc
   256f0:	ldr	r1, [r1]
   256f4:	str	r1, [sp, #8]
   256f8:	cmp	r1, r3
   256fc:	bgt	256d0 <GetDataSlab+0x46c4>
   25700:	ldr	r3, [r8]
   25704:	ldr	r2, [sp, #8]
   25708:	mul	r3, r3, r2
   2570c:	ldr	r2, [sp, #192]	; 0xc0
   25710:	ldr	r2, [r2]
   25714:	sub	r3, r2, r3
   25718:	ldr	r2, [sp, #196]	; 0xc4
   2571c:	ldr	r2, [r2]
   25720:	sub	r3, r3, r2
   25724:	add	fp, fp, r3
   25728:	add	r5, r5, r3, lsl #2
   2572c:	ldr	r3, [sp, #208]	; 0xd0
   25730:	cmp	r3, #1
   25734:	ble	2567c <GetDataSlab+0x4670>
   25738:	ldr	r3, [sp, #76]	; 0x4c
   2573c:	add	r3, r3, #1
   25740:	str	r3, [sp, #76]	; 0x4c
   25744:	ldr	r2, [sp, #204]	; 0xcc
   25748:	ldr	r1, [r2, #4]
   2574c:	mov	r0, r3
   25750:	bl	517e8 <__aeabi_idivmod>
   25754:	cmp	r1, #0
   25758:	bne	25664 <GetDataSlab+0x4658>
   2575c:	add	r6, sp, #76	; 0x4c
   25760:	ldr	r3, [sp, #204]	; 0xcc
   25764:	add	r3, r3, #4
   25768:	str	r3, [sp, #12]
   2576c:	ldr	r3, [sp, #196]	; 0xc4
   25770:	add	r9, r3, #4
   25774:	add	r7, sp, #112	; 0x70
   25778:	mov	sl, #1
   2577c:	b	25620 <GetDataSlab+0x4614>
   25780:	mov	r3, #0
   25784:	b	24fa8 <GetDataSlab+0x3f9c>
   25788:	ldr	r3, [r8]
   2578c:	str	r3, [sp, #28]
   25790:	sub	r3, r3, #1
   25794:	str	r3, [sp, #32]
   25798:	ldr	r3, [sp, #192]	; 0xc0
   2579c:	ldr	r3, [r3]
   257a0:	str	r3, [sp, #112]	; 0x70
   257a4:	ldr	r3, [sp, #204]	; 0xcc
   257a8:	ldr	r3, [r3]
   257ac:	str	r3, [sp, #20]
   257b0:	ldr	r3, [sp, #208]	; 0xd0
   257b4:	cmp	r3, #1
   257b8:	ble	257ec <GetDataSlab+0x47e0>
   257bc:	str	r8, [sp, #16]
   257c0:	add	sl, sp, #36	; 0x24
   257c4:	ldr	lr, [sp, #192]	; 0xc0
   257c8:	add	r9, sp, #112	; 0x70
   257cc:	ldr	r3, [sp, #204]	; 0xcc
   257d0:	add	r5, r3, #4
   257d4:	ldr	r3, [sp, #196]	; 0xc4
   257d8:	add	r4, r3, #4
   257dc:	str	lr, [sp, #12]
   257e0:	mov	r6, #2
   257e4:	mov	fp, #0
   257e8:	b	3dc24 <GetDataSlab+0x1cc18>
   257ec:	mov	fp, #0
   257f0:	b	3dcb0 <GetDataSlab+0x1cca4>
   257f4:	ldr	r3, [sp, #20]
   257f8:	cmp	r3, #0
   257fc:	ble	3d3a0 <GetDataSlab+0x1c394>
   25800:	mov	r3, #0
   25804:	str	r3, [sp, #16]
   25808:	b	258dc <GetDataSlab+0x48d0>
   2580c:	ldr	r2, [r8]
   25810:	cmp	r2, #0
   25814:	beq	2582c <GetDataSlab+0x4820>
   25818:	ldr	r3, [sp, #12]
   2581c:	ldr	r3, [r3, #-4]
   25820:	mul	r3, r3, r2
   25824:	add	r5, r5, r3, lsl #2
   25828:	add	fp, fp, r3
   2582c:	add	r9, r9, #1
   25830:	ldr	r3, [sp, #208]	; 0xd0
   25834:	cmp	r3, r9
   25838:	beq	258c4 <GetDataSlab+0x48b8>
   2583c:	ldr	r3, [r6]
   25840:	add	r3, r3, #1
   25844:	str	r3, [r6]
   25848:	add	r8, r8, #4
   2584c:	ldr	r2, [sp, #8]
   25850:	ldr	r1, [r2, #4]!
   25854:	str	r2, [sp, #8]
   25858:	mov	r0, r3
   2585c:	bl	517e8 <__aeabi_idivmod>
   25860:	cmp	r1, #0
   25864:	bne	258b0 <GetDataSlab+0x48a4>
   25868:	mov	r3, #0
   2586c:	str	r3, [r6], #4
   25870:	add	r7, r7, #4
   25874:	str	r7, [sp, #12]
   25878:	ldr	r4, [r7]
   2587c:	mov	r1, r4
   25880:	mov	r0, fp
   25884:	bl	517e8 <__aeabi_idivmod>
   25888:	subs	r3, r1, #0
   2588c:	beq	2580c <GetDataSlab+0x4800>
   25890:	ldr	r2, [r7, #-4]
   25894:	ldr	r1, [r8]
   25898:	sub	r3, r4, r3
   2589c:	mla	r3, r1, r2, r3
   258a0:	add	r5, r5, r3, lsl #2
   258a4:	add	fp, fp, r3
   258a8:	b	2582c <GetDataSlab+0x4820>
   258ac:	ldr	r9, [sp, #28]
   258b0:	add	r3, sp, #152	; 0x98
   258b4:	add	r3, r3, r9, lsl #2
   258b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   258bc:	add	fp, fp, r3
   258c0:	add	r5, r5, r3, lsl #2
   258c4:	ldr	r3, [sp, #16]
   258c8:	add	r3, r3, sl
   258cc:	str	r3, [sp, #16]
   258d0:	ldr	r2, [sp, #20]
   258d4:	cmp	r3, r2
   258d8:	bge	259a8 <GetDataSlab+0x499c>
   258dc:	ldr	r3, [sp, #196]	; 0xc4
   258e0:	ldr	r3, [r3]
   258e4:	cmp	r3, #0
   258e8:	addne	r5, r5, r3, lsl #2
   258ec:	addne	fp, fp, r3
   258f0:	ldr	r3, [sp, #204]	; 0xcc
   258f4:	ldr	sl, [r3]
   258f8:	cmp	sl, #0
   258fc:	ble	25938 <GetDataSlab+0x492c>
   25900:	sub	r1, r5, #4
   25904:	ldr	r3, [sp, #4]
   25908:	ldr	r2, [sp, #16]
   2590c:	add	r2, r3, r2, lsl #3
   25910:	mov	r3, #0
   25914:	ldr	r0, [r1, #4]!
   25918:	vmov	s15, r0
   2591c:	vcvt.f64.u32	d7, s15
   25920:	vstmia	r2!, {d7}
   25924:	add	r3, r3, #1
   25928:	ldr	r0, [sp, #204]	; 0xcc
   2592c:	ldr	sl, [r0]
   25930:	cmp	sl, r3
   25934:	bgt	25914 <GetDataSlab+0x4908>
   25938:	ldr	r3, [sp, #192]	; 0xc0
   2593c:	ldr	r2, [r3]
   25940:	ldr	r3, [sp, #196]	; 0xc4
   25944:	ldr	r3, [r3]
   25948:	sub	r3, r2, r3
   2594c:	add	fp, fp, r3
   25950:	add	r5, r5, r3, lsl #2
   25954:	ldr	r3, [sp, #208]	; 0xd0
   25958:	cmp	r3, #1
   2595c:	ble	258c4 <GetDataSlab+0x48b8>
   25960:	ldr	r3, [sp, #76]	; 0x4c
   25964:	add	r3, r3, #1
   25968:	str	r3, [sp, #76]	; 0x4c
   2596c:	ldr	r2, [sp, #204]	; 0xcc
   25970:	ldr	r1, [r2, #4]
   25974:	mov	r0, r3
   25978:	bl	517e8 <__aeabi_idivmod>
   2597c:	cmp	r1, #0
   25980:	bne	258ac <GetDataSlab+0x48a0>
   25984:	add	r6, sp, #76	; 0x4c
   25988:	ldr	r3, [sp, #204]	; 0xcc
   2598c:	add	r3, r3, #4
   25990:	str	r3, [sp, #8]
   25994:	ldr	r3, [sp, #196]	; 0xc4
   25998:	add	r8, r3, #4
   2599c:	add	r7, sp, #112	; 0x70
   259a0:	ldr	r9, [sp, #28]
   259a4:	b	25868 <GetDataSlab+0x485c>
   259a8:	mov	r3, #0
   259ac:	b	24fa8 <GetDataSlab+0x3f9c>
   259b0:	ldr	r2, [r9]
   259b4:	cmp	r2, #0
   259b8:	beq	259d0 <GetDataSlab+0x49c4>
   259bc:	ldr	r3, [sp, #16]
   259c0:	ldr	r3, [r3, #-4]
   259c4:	mul	r3, r3, r2
   259c8:	add	r5, r5, r3, lsl #2
   259cc:	add	fp, fp, r3
   259d0:	add	sl, sl, #1
   259d4:	ldr	r3, [sp, #208]	; 0xd0
   259d8:	cmp	r3, sl
   259dc:	beq	25a68 <GetDataSlab+0x4a5c>
   259e0:	ldr	r3, [r6]
   259e4:	add	r3, r3, #1
   259e8:	str	r3, [r6]
   259ec:	add	r9, r9, #4
   259f0:	ldr	r2, [sp, #12]
   259f4:	ldr	r1, [r2, #4]!
   259f8:	str	r2, [sp, #12]
   259fc:	mov	r0, r3
   25a00:	bl	517e8 <__aeabi_idivmod>
   25a04:	cmp	r1, #0
   25a08:	bne	25a54 <GetDataSlab+0x4a48>
   25a0c:	mov	r3, #0
   25a10:	str	r3, [r6], #4
   25a14:	add	r7, r7, #4
   25a18:	str	r7, [sp, #16]
   25a1c:	ldr	r4, [r7]
   25a20:	mov	r1, r4
   25a24:	mov	r0, fp
   25a28:	bl	517e8 <__aeabi_idivmod>
   25a2c:	subs	r3, r1, #0
   25a30:	beq	259b0 <GetDataSlab+0x49a4>
   25a34:	ldr	r2, [r7, #-4]
   25a38:	ldr	r1, [r9]
   25a3c:	sub	r3, r4, r3
   25a40:	mla	r3, r1, r2, r3
   25a44:	add	r5, r5, r3, lsl #2
   25a48:	add	fp, fp, r3
   25a4c:	b	259d0 <GetDataSlab+0x49c4>
   25a50:	mov	sl, #1
   25a54:	add	r3, sp, #152	; 0x98
   25a58:	add	r3, r3, sl, lsl #2
   25a5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   25a60:	add	fp, fp, r3
   25a64:	add	r5, r5, r3, lsl #2
   25a68:	ldr	r3, [sp, #24]
   25a6c:	ldr	r2, [sp, #8]
   25a70:	add	r3, r3, r2
   25a74:	str	r3, [sp, #24]
   25a78:	ldr	r2, [sp, #20]
   25a7c:	cmp	r3, r2
   25a80:	bge	25b6c <GetDataSlab+0x4b60>
   25a84:	ldr	r3, [sp, #196]	; 0xc4
   25a88:	ldr	r3, [r3]
   25a8c:	cmp	r3, #0
   25a90:	addne	r5, r5, r3, lsl #2
   25a94:	addne	fp, fp, r3
   25a98:	ldr	r3, [sp, #204]	; 0xcc
   25a9c:	ldr	r3, [r3]
   25aa0:	str	r3, [sp, #8]
   25aa4:	cmp	r3, #0
   25aa8:	ble	25aec <GetDataSlab+0x4ae0>
   25aac:	ldr	r3, [sp, #4]
   25ab0:	ldr	r2, [sp, #24]
   25ab4:	add	r2, r3, r2, lsl #3
   25ab8:	mov	r3, #0
   25abc:	vldr	s15, [r5]
   25ac0:	vcvt.f64.u32	d7, s15
   25ac4:	vstmia	r2!, {d7}
   25ac8:	ldr	r1, [r8]
   25acc:	add	r5, r5, r1, lsl #2
   25ad0:	add	fp, fp, r1
   25ad4:	add	r3, r3, #1
   25ad8:	ldr	r1, [sp, #204]	; 0xcc
   25adc:	ldr	r1, [r1]
   25ae0:	str	r1, [sp, #8]
   25ae4:	cmp	r1, r3
   25ae8:	bgt	25abc <GetDataSlab+0x4ab0>
   25aec:	ldr	r3, [r8]
   25af0:	ldr	r2, [sp, #8]
   25af4:	mul	r3, r3, r2
   25af8:	ldr	r2, [sp, #192]	; 0xc0
   25afc:	ldr	r2, [r2]
   25b00:	sub	r3, r2, r3
   25b04:	ldr	r2, [sp, #196]	; 0xc4
   25b08:	ldr	r2, [r2]
   25b0c:	sub	r3, r3, r2
   25b10:	add	fp, fp, r3
   25b14:	add	r5, r5, r3, lsl #2
   25b18:	ldr	r3, [sp, #208]	; 0xd0
   25b1c:	cmp	r3, #1
   25b20:	ble	25a68 <GetDataSlab+0x4a5c>
   25b24:	ldr	r3, [sp, #76]	; 0x4c
   25b28:	add	r3, r3, #1
   25b2c:	str	r3, [sp, #76]	; 0x4c
   25b30:	ldr	r2, [sp, #204]	; 0xcc
   25b34:	ldr	r1, [r2, #4]
   25b38:	mov	r0, r3
   25b3c:	bl	517e8 <__aeabi_idivmod>
   25b40:	cmp	r1, #0
   25b44:	bne	25a50 <GetDataSlab+0x4a44>
   25b48:	add	r6, sp, #76	; 0x4c
   25b4c:	ldr	r3, [sp, #204]	; 0xcc
   25b50:	add	r3, r3, #4
   25b54:	str	r3, [sp, #12]
   25b58:	ldr	r3, [sp, #196]	; 0xc4
   25b5c:	add	r9, r3, #4
   25b60:	add	r7, sp, #112	; 0x70
   25b64:	mov	sl, #1
   25b68:	b	25a0c <GetDataSlab+0x4a00>
   25b6c:	mov	r3, #0
   25b70:	b	24fa8 <GetDataSlab+0x3f9c>
   25b74:	ldr	r3, [r8]
   25b78:	str	r3, [sp, #28]
   25b7c:	sub	r3, r3, #1
   25b80:	str	r3, [sp, #32]
   25b84:	ldr	r3, [sp, #192]	; 0xc0
   25b88:	ldr	r3, [r3]
   25b8c:	str	r3, [sp, #112]	; 0x70
   25b90:	ldr	r3, [sp, #204]	; 0xcc
   25b94:	ldr	r3, [r3]
   25b98:	str	r3, [sp, #20]
   25b9c:	ldr	r3, [sp, #208]	; 0xd0
   25ba0:	cmp	r3, #1
   25ba4:	ble	25bd8 <GetDataSlab+0x4bcc>
   25ba8:	str	r8, [sp, #16]
   25bac:	add	sl, sp, #36	; 0x24
   25bb0:	ldr	lr, [sp, #192]	; 0xc0
   25bb4:	add	r9, sp, #112	; 0x70
   25bb8:	ldr	r3, [sp, #204]	; 0xcc
   25bbc:	add	r5, r3, #4
   25bc0:	ldr	r3, [sp, #196]	; 0xc4
   25bc4:	add	r4, r3, #4
   25bc8:	str	lr, [sp, #12]
   25bcc:	mov	r6, #2
   25bd0:	mov	fp, #0
   25bd4:	b	3dd10 <GetDataSlab+0x1cd04>
   25bd8:	mov	fp, #0
   25bdc:	b	3dd9c <GetDataSlab+0x1cd90>
   25be0:	ldr	r3, [sp, #20]
   25be4:	cmp	r3, #0
   25be8:	ble	3d3a8 <GetDataSlab+0x1c39c>
   25bec:	mov	r3, #0
   25bf0:	str	r3, [sp, #16]
   25bf4:	b	25cc8 <GetDataSlab+0x4cbc>
   25bf8:	ldr	r2, [r8]
   25bfc:	cmp	r2, #0
   25c00:	beq	25c18 <GetDataSlab+0x4c0c>
   25c04:	ldr	r3, [sp, #12]
   25c08:	ldr	r3, [r3, #-4]
   25c0c:	mul	r3, r3, r2
   25c10:	add	r6, r6, r3, lsl #1
   25c14:	add	fp, fp, r3
   25c18:	add	r9, r9, #1
   25c1c:	ldr	r3, [sp, #208]	; 0xd0
   25c20:	cmp	r3, r9
   25c24:	beq	25cb0 <GetDataSlab+0x4ca4>
   25c28:	ldr	r3, [r5]
   25c2c:	add	r3, r3, #1
   25c30:	str	r3, [r5]
   25c34:	add	r8, r8, #4
   25c38:	ldr	r2, [sp, #8]
   25c3c:	ldr	r1, [r2, #4]!
   25c40:	str	r2, [sp, #8]
   25c44:	mov	r0, r3
   25c48:	bl	517e8 <__aeabi_idivmod>
   25c4c:	cmp	r1, #0
   25c50:	bne	25c9c <GetDataSlab+0x4c90>
   25c54:	mov	r3, #0
   25c58:	str	r3, [r5], #4
   25c5c:	add	r7, r7, #4
   25c60:	str	r7, [sp, #12]
   25c64:	ldr	r4, [r7]
   25c68:	mov	r1, r4
   25c6c:	mov	r0, fp
   25c70:	bl	517e8 <__aeabi_idivmod>
   25c74:	subs	r3, r1, #0
   25c78:	beq	25bf8 <GetDataSlab+0x4bec>
   25c7c:	ldr	r2, [r7, #-4]
   25c80:	ldr	r1, [r8]
   25c84:	sub	r3, r4, r3
   25c88:	mla	r3, r1, r2, r3
   25c8c:	add	r6, r6, r3, lsl #1
   25c90:	add	fp, fp, r3
   25c94:	b	25c18 <GetDataSlab+0x4c0c>
   25c98:	ldr	r9, [sp, #28]
   25c9c:	add	r3, sp, #152	; 0x98
   25ca0:	add	r3, r3, r9, lsl #2
   25ca4:	ldr	r3, [r3, #-120]	; 0xffffff88
   25ca8:	add	fp, fp, r3
   25cac:	add	r6, r6, r3, lsl #1
   25cb0:	ldr	r3, [sp, #16]
   25cb4:	add	r3, r3, sl
   25cb8:	str	r3, [sp, #16]
   25cbc:	ldr	r2, [sp, #20]
   25cc0:	cmp	r3, r2
   25cc4:	bge	25d94 <GetDataSlab+0x4d88>
   25cc8:	ldr	r3, [sp, #196]	; 0xc4
   25ccc:	ldr	r3, [r3]
   25cd0:	cmp	r3, #0
   25cd4:	addne	r6, r6, r3, lsl #1
   25cd8:	addne	fp, fp, r3
   25cdc:	ldr	r3, [sp, #204]	; 0xcc
   25ce0:	ldr	sl, [r3]
   25ce4:	cmp	sl, #0
   25ce8:	ble	25d24 <GetDataSlab+0x4d18>
   25cec:	sub	r1, r6, #2
   25cf0:	ldr	r3, [sp, #4]
   25cf4:	ldr	r2, [sp, #16]
   25cf8:	add	r2, r3, r2, lsl #3
   25cfc:	mov	r3, #0
   25d00:	ldrsh	r0, [r1, #2]!
   25d04:	vmov	s15, r0
   25d08:	vcvt.f64.s32	d7, s15
   25d0c:	vstmia	r2!, {d7}
   25d10:	add	r3, r3, #1
   25d14:	ldr	r0, [sp, #204]	; 0xcc
   25d18:	ldr	sl, [r0]
   25d1c:	cmp	sl, r3
   25d20:	bgt	25d00 <GetDataSlab+0x4cf4>
   25d24:	ldr	r3, [sp, #192]	; 0xc0
   25d28:	ldr	r2, [r3]
   25d2c:	ldr	r3, [sp, #196]	; 0xc4
   25d30:	ldr	r3, [r3]
   25d34:	sub	r3, r2, r3
   25d38:	add	fp, fp, r3
   25d3c:	add	r6, r6, r3, lsl #1
   25d40:	ldr	r3, [sp, #208]	; 0xd0
   25d44:	cmp	r3, #1
   25d48:	ble	25cb0 <GetDataSlab+0x4ca4>
   25d4c:	ldr	r3, [sp, #76]	; 0x4c
   25d50:	add	r3, r3, #1
   25d54:	str	r3, [sp, #76]	; 0x4c
   25d58:	ldr	r2, [sp, #204]	; 0xcc
   25d5c:	ldr	r1, [r2, #4]
   25d60:	mov	r0, r3
   25d64:	bl	517e8 <__aeabi_idivmod>
   25d68:	cmp	r1, #0
   25d6c:	bne	25c98 <GetDataSlab+0x4c8c>
   25d70:	add	r5, sp, #76	; 0x4c
   25d74:	ldr	r3, [sp, #204]	; 0xcc
   25d78:	add	r3, r3, #4
   25d7c:	str	r3, [sp, #8]
   25d80:	ldr	r3, [sp, #196]	; 0xc4
   25d84:	add	r8, r3, #4
   25d88:	add	r7, sp, #112	; 0x70
   25d8c:	ldr	r9, [sp, #28]
   25d90:	b	25c54 <GetDataSlab+0x4c48>
   25d94:	mov	r3, #0
   25d98:	b	24fa8 <GetDataSlab+0x3f9c>
   25d9c:	ldr	r2, [r9]
   25da0:	cmp	r2, #0
   25da4:	beq	25dbc <GetDataSlab+0x4db0>
   25da8:	ldr	r3, [sp, #16]
   25dac:	ldr	r3, [r3, #-4]
   25db0:	mul	r3, r3, r2
   25db4:	add	r6, r6, r3, lsl #1
   25db8:	add	fp, fp, r3
   25dbc:	add	sl, sl, #1
   25dc0:	ldr	r3, [sp, #208]	; 0xd0
   25dc4:	cmp	r3, sl
   25dc8:	beq	25e54 <GetDataSlab+0x4e48>
   25dcc:	ldr	r3, [r5]
   25dd0:	add	r3, r3, #1
   25dd4:	str	r3, [r5]
   25dd8:	add	r9, r9, #4
   25ddc:	ldr	r2, [sp, #12]
   25de0:	ldr	r1, [r2, #4]!
   25de4:	str	r2, [sp, #12]
   25de8:	mov	r0, r3
   25dec:	bl	517e8 <__aeabi_idivmod>
   25df0:	cmp	r1, #0
   25df4:	bne	25e40 <GetDataSlab+0x4e34>
   25df8:	mov	r3, #0
   25dfc:	str	r3, [r5], #4
   25e00:	add	r7, r7, #4
   25e04:	str	r7, [sp, #16]
   25e08:	ldr	r4, [r7]
   25e0c:	mov	r1, r4
   25e10:	mov	r0, fp
   25e14:	bl	517e8 <__aeabi_idivmod>
   25e18:	subs	r3, r1, #0
   25e1c:	beq	25d9c <GetDataSlab+0x4d90>
   25e20:	ldr	r2, [r7, #-4]
   25e24:	ldr	r1, [r9]
   25e28:	sub	r3, r4, r3
   25e2c:	mla	r3, r1, r2, r3
   25e30:	add	r6, r6, r3, lsl #1
   25e34:	add	fp, fp, r3
   25e38:	b	25dbc <GetDataSlab+0x4db0>
   25e3c:	mov	sl, #1
   25e40:	add	r3, sp, #152	; 0x98
   25e44:	add	r3, r3, sl, lsl #2
   25e48:	ldr	r3, [r3, #-120]	; 0xffffff88
   25e4c:	add	fp, fp, r3
   25e50:	add	r6, r6, r3, lsl #1
   25e54:	ldr	r3, [sp, #24]
   25e58:	ldr	r2, [sp, #8]
   25e5c:	add	r3, r3, r2
   25e60:	str	r3, [sp, #24]
   25e64:	ldr	r2, [sp, #20]
   25e68:	cmp	r3, r2
   25e6c:	bge	25f5c <GetDataSlab+0x4f50>
   25e70:	ldr	r3, [sp, #196]	; 0xc4
   25e74:	ldr	r3, [r3]
   25e78:	cmp	r3, #0
   25e7c:	addne	r6, r6, r3, lsl #1
   25e80:	addne	fp, fp, r3
   25e84:	ldr	r3, [sp, #204]	; 0xcc
   25e88:	ldr	r3, [r3]
   25e8c:	str	r3, [sp, #8]
   25e90:	cmp	r3, #0
   25e94:	ble	25edc <GetDataSlab+0x4ed0>
   25e98:	ldr	r3, [sp, #4]
   25e9c:	ldr	r2, [sp, #24]
   25ea0:	add	r2, r3, r2, lsl #3
   25ea4:	mov	r3, #0
   25ea8:	ldrsh	r1, [r6]
   25eac:	vmov	s15, r1
   25eb0:	vcvt.f64.s32	d7, s15
   25eb4:	vstmia	r2!, {d7}
   25eb8:	ldr	r1, [r8]
   25ebc:	add	r6, r6, r1, lsl #1
   25ec0:	add	fp, fp, r1
   25ec4:	add	r3, r3, #1
   25ec8:	ldr	r1, [sp, #204]	; 0xcc
   25ecc:	ldr	r1, [r1]
   25ed0:	str	r1, [sp, #8]
   25ed4:	cmp	r1, r3
   25ed8:	bgt	25ea8 <GetDataSlab+0x4e9c>
   25edc:	ldr	r3, [r8]
   25ee0:	ldr	r2, [sp, #8]
   25ee4:	mul	r3, r3, r2
   25ee8:	ldr	r2, [sp, #192]	; 0xc0
   25eec:	ldr	r2, [r2]
   25ef0:	sub	r3, r2, r3
   25ef4:	ldr	r2, [sp, #196]	; 0xc4
   25ef8:	ldr	r2, [r2]
   25efc:	sub	r3, r3, r2
   25f00:	add	fp, fp, r3
   25f04:	add	r6, r6, r3, lsl #1
   25f08:	ldr	r3, [sp, #208]	; 0xd0
   25f0c:	cmp	r3, #1
   25f10:	ble	25e54 <GetDataSlab+0x4e48>
   25f14:	ldr	r3, [sp, #76]	; 0x4c
   25f18:	add	r3, r3, #1
   25f1c:	str	r3, [sp, #76]	; 0x4c
   25f20:	ldr	r2, [sp, #204]	; 0xcc
   25f24:	ldr	r1, [r2, #4]
   25f28:	mov	r0, r3
   25f2c:	bl	517e8 <__aeabi_idivmod>
   25f30:	cmp	r1, #0
   25f34:	bne	25e3c <GetDataSlab+0x4e30>
   25f38:	add	r5, sp, #76	; 0x4c
   25f3c:	ldr	r3, [sp, #204]	; 0xcc
   25f40:	add	r3, r3, #4
   25f44:	str	r3, [sp, #12]
   25f48:	ldr	r3, [sp, #196]	; 0xc4
   25f4c:	add	r9, r3, #4
   25f50:	add	r7, sp, #112	; 0x70
   25f54:	mov	sl, #1
   25f58:	b	25df8 <GetDataSlab+0x4dec>
   25f5c:	mov	r3, #0
   25f60:	b	24fa8 <GetDataSlab+0x3f9c>
   25f64:	ldr	r3, [r8]
   25f68:	str	r3, [sp, #28]
   25f6c:	sub	r3, r3, #1
   25f70:	str	r3, [sp, #32]
   25f74:	ldr	r3, [sp, #192]	; 0xc0
   25f78:	ldr	r3, [r3]
   25f7c:	str	r3, [sp, #112]	; 0x70
   25f80:	ldr	r3, [sp, #204]	; 0xcc
   25f84:	ldr	r3, [r3]
   25f88:	str	r3, [sp, #20]
   25f8c:	ldr	r3, [sp, #208]	; 0xd0
   25f90:	cmp	r3, #1
   25f94:	ble	25fc8 <GetDataSlab+0x4fbc>
   25f98:	str	r8, [sp, #16]
   25f9c:	add	sl, sp, #36	; 0x24
   25fa0:	ldr	lr, [sp, #192]	; 0xc0
   25fa4:	add	r9, sp, #112	; 0x70
   25fa8:	ldr	r3, [sp, #204]	; 0xcc
   25fac:	add	r5, r3, #4
   25fb0:	ldr	r3, [sp, #196]	; 0xc4
   25fb4:	add	r4, r3, #4
   25fb8:	str	lr, [sp, #12]
   25fbc:	mov	r6, #2
   25fc0:	mov	fp, #0
   25fc4:	b	3ddfc <GetDataSlab+0x1cdf0>
   25fc8:	mov	fp, #0
   25fcc:	b	3de88 <GetDataSlab+0x1ce7c>
   25fd0:	ldr	r3, [sp, #20]
   25fd4:	cmp	r3, #0
   25fd8:	ble	3d3b0 <GetDataSlab+0x1c3a4>
   25fdc:	mov	r3, #0
   25fe0:	str	r3, [sp, #16]
   25fe4:	b	260b8 <GetDataSlab+0x50ac>
   25fe8:	ldr	r2, [r8]
   25fec:	cmp	r2, #0
   25ff0:	beq	26008 <GetDataSlab+0x4ffc>
   25ff4:	ldr	r3, [sp, #12]
   25ff8:	ldr	r3, [r3, #-4]
   25ffc:	mul	r3, r3, r2
   26000:	add	r6, r6, r3, lsl #1
   26004:	add	fp, fp, r3
   26008:	add	r9, r9, #1
   2600c:	ldr	r3, [sp, #208]	; 0xd0
   26010:	cmp	r3, r9
   26014:	beq	260a0 <GetDataSlab+0x5094>
   26018:	ldr	r3, [r5]
   2601c:	add	r3, r3, #1
   26020:	str	r3, [r5]
   26024:	add	r8, r8, #4
   26028:	ldr	r2, [sp, #8]
   2602c:	ldr	r1, [r2, #4]!
   26030:	str	r2, [sp, #8]
   26034:	mov	r0, r3
   26038:	bl	517e8 <__aeabi_idivmod>
   2603c:	cmp	r1, #0
   26040:	bne	2608c <GetDataSlab+0x5080>
   26044:	mov	r3, #0
   26048:	str	r3, [r5], #4
   2604c:	add	r7, r7, #4
   26050:	str	r7, [sp, #12]
   26054:	ldr	r4, [r7]
   26058:	mov	r1, r4
   2605c:	mov	r0, fp
   26060:	bl	517e8 <__aeabi_idivmod>
   26064:	subs	r3, r1, #0
   26068:	beq	25fe8 <GetDataSlab+0x4fdc>
   2606c:	ldr	r2, [r7, #-4]
   26070:	ldr	r1, [r8]
   26074:	sub	r3, r4, r3
   26078:	mla	r3, r1, r2, r3
   2607c:	add	r6, r6, r3, lsl #1
   26080:	add	fp, fp, r3
   26084:	b	26008 <GetDataSlab+0x4ffc>
   26088:	ldr	r9, [sp, #28]
   2608c:	add	r3, sp, #152	; 0x98
   26090:	add	r3, r3, r9, lsl #2
   26094:	ldr	r3, [r3, #-120]	; 0xffffff88
   26098:	add	fp, fp, r3
   2609c:	add	r6, r6, r3, lsl #1
   260a0:	ldr	r3, [sp, #16]
   260a4:	add	r3, r3, sl
   260a8:	str	r3, [sp, #16]
   260ac:	ldr	r2, [sp, #20]
   260b0:	cmp	r3, r2
   260b4:	bge	26184 <GetDataSlab+0x5178>
   260b8:	ldr	r3, [sp, #196]	; 0xc4
   260bc:	ldr	r3, [r3]
   260c0:	cmp	r3, #0
   260c4:	addne	r6, r6, r3, lsl #1
   260c8:	addne	fp, fp, r3
   260cc:	ldr	r3, [sp, #204]	; 0xcc
   260d0:	ldr	sl, [r3]
   260d4:	cmp	sl, #0
   260d8:	ble	26114 <GetDataSlab+0x5108>
   260dc:	sub	r1, r6, #2
   260e0:	ldr	r3, [sp, #4]
   260e4:	ldr	r2, [sp, #16]
   260e8:	add	r2, r3, r2, lsl #3
   260ec:	mov	r3, #0
   260f0:	ldrh	r0, [r1, #2]!
   260f4:	vmov	s15, r0
   260f8:	vcvt.f64.u32	d7, s15
   260fc:	vstmia	r2!, {d7}
   26100:	add	r3, r3, #1
   26104:	ldr	r0, [sp, #204]	; 0xcc
   26108:	ldr	sl, [r0]
   2610c:	cmp	sl, r3
   26110:	bgt	260f0 <GetDataSlab+0x50e4>
   26114:	ldr	r3, [sp, #192]	; 0xc0
   26118:	ldr	r2, [r3]
   2611c:	ldr	r3, [sp, #196]	; 0xc4
   26120:	ldr	r3, [r3]
   26124:	sub	r3, r2, r3
   26128:	add	fp, fp, r3
   2612c:	add	r6, r6, r3, lsl #1
   26130:	ldr	r3, [sp, #208]	; 0xd0
   26134:	cmp	r3, #1
   26138:	ble	260a0 <GetDataSlab+0x5094>
   2613c:	ldr	r3, [sp, #76]	; 0x4c
   26140:	add	r3, r3, #1
   26144:	str	r3, [sp, #76]	; 0x4c
   26148:	ldr	r2, [sp, #204]	; 0xcc
   2614c:	ldr	r1, [r2, #4]
   26150:	mov	r0, r3
   26154:	bl	517e8 <__aeabi_idivmod>
   26158:	cmp	r1, #0
   2615c:	bne	26088 <GetDataSlab+0x507c>
   26160:	add	r5, sp, #76	; 0x4c
   26164:	ldr	r3, [sp, #204]	; 0xcc
   26168:	add	r3, r3, #4
   2616c:	str	r3, [sp, #8]
   26170:	ldr	r3, [sp, #196]	; 0xc4
   26174:	add	r8, r3, #4
   26178:	add	r7, sp, #112	; 0x70
   2617c:	ldr	r9, [sp, #28]
   26180:	b	26044 <GetDataSlab+0x5038>
   26184:	mov	r3, #0
   26188:	b	24fa8 <GetDataSlab+0x3f9c>
   2618c:	ldr	r2, [r9]
   26190:	cmp	r2, #0
   26194:	beq	261ac <GetDataSlab+0x51a0>
   26198:	ldr	r3, [sp, #16]
   2619c:	ldr	r3, [r3, #-4]
   261a0:	mul	r3, r3, r2
   261a4:	add	r6, r6, r3, lsl #1
   261a8:	add	fp, fp, r3
   261ac:	add	sl, sl, #1
   261b0:	ldr	r3, [sp, #208]	; 0xd0
   261b4:	cmp	r3, sl
   261b8:	beq	26244 <GetDataSlab+0x5238>
   261bc:	ldr	r3, [r5]
   261c0:	add	r3, r3, #1
   261c4:	str	r3, [r5]
   261c8:	add	r9, r9, #4
   261cc:	ldr	r2, [sp, #12]
   261d0:	ldr	r1, [r2, #4]!
   261d4:	str	r2, [sp, #12]
   261d8:	mov	r0, r3
   261dc:	bl	517e8 <__aeabi_idivmod>
   261e0:	cmp	r1, #0
   261e4:	bne	26230 <GetDataSlab+0x5224>
   261e8:	mov	r3, #0
   261ec:	str	r3, [r5], #4
   261f0:	add	r7, r7, #4
   261f4:	str	r7, [sp, #16]
   261f8:	ldr	r4, [r7]
   261fc:	mov	r1, r4
   26200:	mov	r0, fp
   26204:	bl	517e8 <__aeabi_idivmod>
   26208:	subs	r3, r1, #0
   2620c:	beq	2618c <GetDataSlab+0x5180>
   26210:	ldr	r2, [r7, #-4]
   26214:	ldr	r1, [r9]
   26218:	sub	r3, r4, r3
   2621c:	mla	r3, r1, r2, r3
   26220:	add	r6, r6, r3, lsl #1
   26224:	add	fp, fp, r3
   26228:	b	261ac <GetDataSlab+0x51a0>
   2622c:	mov	sl, #1
   26230:	add	r3, sp, #152	; 0x98
   26234:	add	r3, r3, sl, lsl #2
   26238:	ldr	r3, [r3, #-120]	; 0xffffff88
   2623c:	add	fp, fp, r3
   26240:	add	r6, r6, r3, lsl #1
   26244:	ldr	r3, [sp, #24]
   26248:	ldr	r2, [sp, #8]
   2624c:	add	r3, r3, r2
   26250:	str	r3, [sp, #24]
   26254:	ldr	r2, [sp, #20]
   26258:	cmp	r3, r2
   2625c:	bge	2634c <GetDataSlab+0x5340>
   26260:	ldr	r3, [sp, #196]	; 0xc4
   26264:	ldr	r3, [r3]
   26268:	cmp	r3, #0
   2626c:	addne	r6, r6, r3, lsl #1
   26270:	addne	fp, fp, r3
   26274:	ldr	r3, [sp, #204]	; 0xcc
   26278:	ldr	r3, [r3]
   2627c:	str	r3, [sp, #8]
   26280:	cmp	r3, #0
   26284:	ble	262cc <GetDataSlab+0x52c0>
   26288:	ldr	r3, [sp, #4]
   2628c:	ldr	r2, [sp, #24]
   26290:	add	r2, r3, r2, lsl #3
   26294:	mov	r3, #0
   26298:	ldrh	r1, [r6]
   2629c:	vmov	s15, r1
   262a0:	vcvt.f64.u32	d7, s15
   262a4:	vstmia	r2!, {d7}
   262a8:	ldr	r1, [r8]
   262ac:	add	r6, r6, r1, lsl #1
   262b0:	add	fp, fp, r1
   262b4:	add	r3, r3, #1
   262b8:	ldr	r1, [sp, #204]	; 0xcc
   262bc:	ldr	r1, [r1]
   262c0:	str	r1, [sp, #8]
   262c4:	cmp	r1, r3
   262c8:	bgt	26298 <GetDataSlab+0x528c>
   262cc:	ldr	r3, [r8]
   262d0:	ldr	r2, [sp, #8]
   262d4:	mul	r3, r3, r2
   262d8:	ldr	r2, [sp, #192]	; 0xc0
   262dc:	ldr	r2, [r2]
   262e0:	sub	r3, r2, r3
   262e4:	ldr	r2, [sp, #196]	; 0xc4
   262e8:	ldr	r2, [r2]
   262ec:	sub	r3, r3, r2
   262f0:	add	fp, fp, r3
   262f4:	add	r6, r6, r3, lsl #1
   262f8:	ldr	r3, [sp, #208]	; 0xd0
   262fc:	cmp	r3, #1
   26300:	ble	26244 <GetDataSlab+0x5238>
   26304:	ldr	r3, [sp, #76]	; 0x4c
   26308:	add	r3, r3, #1
   2630c:	str	r3, [sp, #76]	; 0x4c
   26310:	ldr	r2, [sp, #204]	; 0xcc
   26314:	ldr	r1, [r2, #4]
   26318:	mov	r0, r3
   2631c:	bl	517e8 <__aeabi_idivmod>
   26320:	cmp	r1, #0
   26324:	bne	2622c <GetDataSlab+0x5220>
   26328:	add	r5, sp, #76	; 0x4c
   2632c:	ldr	r3, [sp, #204]	; 0xcc
   26330:	add	r3, r3, #4
   26334:	str	r3, [sp, #12]
   26338:	ldr	r3, [sp, #196]	; 0xc4
   2633c:	add	r9, r3, #4
   26340:	add	r7, sp, #112	; 0x70
   26344:	mov	sl, #1
   26348:	b	261e8 <GetDataSlab+0x51dc>
   2634c:	mov	r3, #0
   26350:	b	24fa8 <GetDataSlab+0x3f9c>
   26354:	ldr	r3, [r8]
   26358:	str	r3, [sp, #28]
   2635c:	sub	r3, r3, #1
   26360:	str	r3, [sp, #32]
   26364:	ldr	r3, [sp, #192]	; 0xc0
   26368:	ldr	r3, [r3]
   2636c:	str	r3, [sp, #112]	; 0x70
   26370:	ldr	r3, [sp, #204]	; 0xcc
   26374:	ldr	r3, [r3]
   26378:	str	r3, [sp, #20]
   2637c:	ldr	r3, [sp, #208]	; 0xd0
   26380:	cmp	r3, #1
   26384:	ble	263b8 <GetDataSlab+0x53ac>
   26388:	str	r8, [sp, #16]
   2638c:	add	sl, sp, #36	; 0x24
   26390:	ldr	lr, [sp, #192]	; 0xc0
   26394:	add	r9, sp, #112	; 0x70
   26398:	ldr	r3, [sp, #204]	; 0xcc
   2639c:	add	r5, r3, #4
   263a0:	ldr	r3, [sp, #196]	; 0xc4
   263a4:	add	r4, r3, #4
   263a8:	str	lr, [sp, #12]
   263ac:	mov	r6, #2
   263b0:	mov	fp, #0
   263b4:	b	3dee8 <GetDataSlab+0x1cedc>
   263b8:	mov	fp, #0
   263bc:	b	3df74 <GetDataSlab+0x1cf68>
   263c0:	ldr	r3, [sp, #20]
   263c4:	cmp	r3, #0
   263c8:	ble	3d3b8 <GetDataSlab+0x1c3ac>
   263cc:	mov	r3, #0
   263d0:	str	r3, [sp, #16]
   263d4:	b	264a8 <GetDataSlab+0x549c>
   263d8:	ldr	r2, [r8]
   263dc:	cmp	r2, #0
   263e0:	beq	263f8 <GetDataSlab+0x53ec>
   263e4:	ldr	r3, [sp, #12]
   263e8:	ldr	r3, [r3, #-4]
   263ec:	mul	r3, r3, r2
   263f0:	add	r6, r6, r3
   263f4:	add	fp, fp, r3
   263f8:	add	r9, r9, #1
   263fc:	ldr	r3, [sp, #208]	; 0xd0
   26400:	cmp	r3, r9
   26404:	beq	26490 <GetDataSlab+0x5484>
   26408:	ldr	r3, [r5]
   2640c:	add	r3, r3, #1
   26410:	str	r3, [r5]
   26414:	add	r8, r8, #4
   26418:	ldr	r2, [sp, #8]
   2641c:	ldr	r1, [r2, #4]!
   26420:	str	r2, [sp, #8]
   26424:	mov	r0, r3
   26428:	bl	517e8 <__aeabi_idivmod>
   2642c:	cmp	r1, #0
   26430:	bne	2647c <GetDataSlab+0x5470>
   26434:	mov	r3, #0
   26438:	str	r3, [r5], #4
   2643c:	add	r7, r7, #4
   26440:	str	r7, [sp, #12]
   26444:	ldr	r4, [r7]
   26448:	mov	r1, r4
   2644c:	mov	r0, fp
   26450:	bl	517e8 <__aeabi_idivmod>
   26454:	subs	r3, r1, #0
   26458:	beq	263d8 <GetDataSlab+0x53cc>
   2645c:	ldr	r2, [r7, #-4]
   26460:	ldr	r1, [r8]
   26464:	sub	r3, r4, r3
   26468:	mla	r3, r1, r2, r3
   2646c:	add	r6, r6, r3
   26470:	add	fp, fp, r3
   26474:	b	263f8 <GetDataSlab+0x53ec>
   26478:	ldr	r9, [sp, #28]
   2647c:	add	r3, sp, #152	; 0x98
   26480:	add	r3, r3, r9, lsl #2
   26484:	ldr	r3, [r3, #-120]	; 0xffffff88
   26488:	add	fp, fp, r3
   2648c:	add	r6, r6, r3
   26490:	ldr	r3, [sp, #16]
   26494:	add	r3, r3, sl
   26498:	str	r3, [sp, #16]
   2649c:	ldr	r2, [sp, #20]
   264a0:	cmp	r3, r2
   264a4:	bge	26574 <GetDataSlab+0x5568>
   264a8:	ldr	r3, [sp, #196]	; 0xc4
   264ac:	ldr	r3, [r3]
   264b0:	cmp	r3, #0
   264b4:	addne	r6, r6, r3
   264b8:	addne	fp, fp, r3
   264bc:	ldr	r3, [sp, #204]	; 0xcc
   264c0:	ldr	sl, [r3]
   264c4:	cmp	sl, #0
   264c8:	ble	26504 <GetDataSlab+0x54f8>
   264cc:	sub	r1, r6, #1
   264d0:	ldr	r3, [sp, #4]
   264d4:	ldr	r2, [sp, #16]
   264d8:	add	r2, r3, r2, lsl #3
   264dc:	mov	r3, #0
   264e0:	ldrsb	r0, [r1, #1]!
   264e4:	vmov	s15, r0
   264e8:	vcvt.f64.s32	d7, s15
   264ec:	vstmia	r2!, {d7}
   264f0:	add	r3, r3, #1
   264f4:	ldr	r0, [sp, #204]	; 0xcc
   264f8:	ldr	sl, [r0]
   264fc:	cmp	sl, r3
   26500:	bgt	264e0 <GetDataSlab+0x54d4>
   26504:	ldr	r3, [sp, #192]	; 0xc0
   26508:	ldr	r2, [r3]
   2650c:	ldr	r3, [sp, #196]	; 0xc4
   26510:	ldr	r3, [r3]
   26514:	sub	r3, r2, r3
   26518:	add	fp, fp, r3
   2651c:	add	r6, r6, r3
   26520:	ldr	r3, [sp, #208]	; 0xd0
   26524:	cmp	r3, #1
   26528:	ble	26490 <GetDataSlab+0x5484>
   2652c:	ldr	r3, [sp, #76]	; 0x4c
   26530:	add	r3, r3, #1
   26534:	str	r3, [sp, #76]	; 0x4c
   26538:	ldr	r2, [sp, #204]	; 0xcc
   2653c:	ldr	r1, [r2, #4]
   26540:	mov	r0, r3
   26544:	bl	517e8 <__aeabi_idivmod>
   26548:	cmp	r1, #0
   2654c:	bne	26478 <GetDataSlab+0x546c>
   26550:	add	r5, sp, #76	; 0x4c
   26554:	ldr	r3, [sp, #204]	; 0xcc
   26558:	add	r3, r3, #4
   2655c:	str	r3, [sp, #8]
   26560:	ldr	r3, [sp, #196]	; 0xc4
   26564:	add	r8, r3, #4
   26568:	add	r7, sp, #112	; 0x70
   2656c:	ldr	r9, [sp, #28]
   26570:	b	26434 <GetDataSlab+0x5428>
   26574:	mov	r3, #0
   26578:	b	24fa8 <GetDataSlab+0x3f9c>
   2657c:	ldr	r2, [r9]
   26580:	cmp	r2, #0
   26584:	beq	2659c <GetDataSlab+0x5590>
   26588:	ldr	r3, [sp, #16]
   2658c:	ldr	r3, [r3, #-4]
   26590:	mul	r3, r3, r2
   26594:	add	r6, r6, r3
   26598:	add	fp, fp, r3
   2659c:	add	sl, sl, #1
   265a0:	ldr	r3, [sp, #208]	; 0xd0
   265a4:	cmp	r3, sl
   265a8:	beq	26634 <GetDataSlab+0x5628>
   265ac:	ldr	r3, [r5]
   265b0:	add	r3, r3, #1
   265b4:	str	r3, [r5]
   265b8:	add	r9, r9, #4
   265bc:	ldr	r2, [sp, #12]
   265c0:	ldr	r1, [r2, #4]!
   265c4:	str	r2, [sp, #12]
   265c8:	mov	r0, r3
   265cc:	bl	517e8 <__aeabi_idivmod>
   265d0:	cmp	r1, #0
   265d4:	bne	26620 <GetDataSlab+0x5614>
   265d8:	mov	r3, #0
   265dc:	str	r3, [r5], #4
   265e0:	add	r7, r7, #4
   265e4:	str	r7, [sp, #16]
   265e8:	ldr	r4, [r7]
   265ec:	mov	r1, r4
   265f0:	mov	r0, fp
   265f4:	bl	517e8 <__aeabi_idivmod>
   265f8:	subs	r3, r1, #0
   265fc:	beq	2657c <GetDataSlab+0x5570>
   26600:	ldr	r2, [r7, #-4]
   26604:	ldr	r1, [r9]
   26608:	sub	r3, r4, r3
   2660c:	mla	r3, r1, r2, r3
   26610:	add	r6, r6, r3
   26614:	add	fp, fp, r3
   26618:	b	2659c <GetDataSlab+0x5590>
   2661c:	mov	sl, #1
   26620:	add	r3, sp, #152	; 0x98
   26624:	add	r3, r3, sl, lsl #2
   26628:	ldr	r3, [r3, #-120]	; 0xffffff88
   2662c:	add	fp, fp, r3
   26630:	add	r6, r6, r3
   26634:	ldr	r3, [sp, #24]
   26638:	ldr	r2, [sp, #8]
   2663c:	add	r3, r3, r2
   26640:	str	r3, [sp, #24]
   26644:	ldr	r2, [sp, #20]
   26648:	cmp	r3, r2
   2664c:	bge	2673c <GetDataSlab+0x5730>
   26650:	ldr	r3, [sp, #196]	; 0xc4
   26654:	ldr	r3, [r3]
   26658:	cmp	r3, #0
   2665c:	addne	r6, r6, r3
   26660:	addne	fp, fp, r3
   26664:	ldr	r3, [sp, #204]	; 0xcc
   26668:	ldr	r3, [r3]
   2666c:	str	r3, [sp, #8]
   26670:	cmp	r3, #0
   26674:	ble	266bc <GetDataSlab+0x56b0>
   26678:	ldr	r3, [sp, #4]
   2667c:	ldr	r2, [sp, #24]
   26680:	add	r2, r3, r2, lsl #3
   26684:	mov	r3, #0
   26688:	ldrsb	r1, [r6]
   2668c:	vmov	s15, r1
   26690:	vcvt.f64.s32	d7, s15
   26694:	vstmia	r2!, {d7}
   26698:	ldr	r1, [r8]
   2669c:	add	r6, r6, r1
   266a0:	add	fp, fp, r1
   266a4:	add	r3, r3, #1
   266a8:	ldr	r1, [sp, #204]	; 0xcc
   266ac:	ldr	r1, [r1]
   266b0:	str	r1, [sp, #8]
   266b4:	cmp	r1, r3
   266b8:	bgt	26688 <GetDataSlab+0x567c>
   266bc:	ldr	r3, [r8]
   266c0:	ldr	r2, [sp, #8]
   266c4:	mul	r3, r3, r2
   266c8:	ldr	r2, [sp, #192]	; 0xc0
   266cc:	ldr	r2, [r2]
   266d0:	sub	r3, r2, r3
   266d4:	ldr	r2, [sp, #196]	; 0xc4
   266d8:	ldr	r2, [r2]
   266dc:	sub	r3, r3, r2
   266e0:	add	fp, fp, r3
   266e4:	add	r6, r6, r3
   266e8:	ldr	r3, [sp, #208]	; 0xd0
   266ec:	cmp	r3, #1
   266f0:	ble	26634 <GetDataSlab+0x5628>
   266f4:	ldr	r3, [sp, #76]	; 0x4c
   266f8:	add	r3, r3, #1
   266fc:	str	r3, [sp, #76]	; 0x4c
   26700:	ldr	r2, [sp, #204]	; 0xcc
   26704:	ldr	r1, [r2, #4]
   26708:	mov	r0, r3
   2670c:	bl	517e8 <__aeabi_idivmod>
   26710:	cmp	r1, #0
   26714:	bne	2661c <GetDataSlab+0x5610>
   26718:	add	r5, sp, #76	; 0x4c
   2671c:	ldr	r3, [sp, #204]	; 0xcc
   26720:	add	r3, r3, #4
   26724:	str	r3, [sp, #12]
   26728:	ldr	r3, [sp, #196]	; 0xc4
   2672c:	add	r9, r3, #4
   26730:	add	r7, sp, #112	; 0x70
   26734:	mov	sl, #1
   26738:	b	265d8 <GetDataSlab+0x55cc>
   2673c:	mov	r3, #0
   26740:	b	24fa8 <GetDataSlab+0x3f9c>
   26744:	ldr	r3, [r8]
   26748:	str	r3, [sp, #28]
   2674c:	sub	r3, r3, #1
   26750:	str	r3, [sp, #32]
   26754:	ldr	r3, [sp, #192]	; 0xc0
   26758:	ldr	r3, [r3]
   2675c:	str	r3, [sp, #112]	; 0x70
   26760:	ldr	r3, [sp, #204]	; 0xcc
   26764:	ldr	r3, [r3]
   26768:	str	r3, [sp, #20]
   2676c:	ldr	r3, [sp, #208]	; 0xd0
   26770:	cmp	r3, #1
   26774:	ble	267a8 <GetDataSlab+0x579c>
   26778:	str	r8, [sp, #16]
   2677c:	add	sl, sp, #36	; 0x24
   26780:	ldr	lr, [sp, #192]	; 0xc0
   26784:	add	r9, sp, #112	; 0x70
   26788:	ldr	r3, [sp, #204]	; 0xcc
   2678c:	add	r5, r3, #4
   26790:	ldr	r3, [sp, #196]	; 0xc4
   26794:	add	r4, r3, #4
   26798:	str	lr, [sp, #12]
   2679c:	mov	r6, #2
   267a0:	mov	fp, #0
   267a4:	b	3dfd4 <GetDataSlab+0x1cfc8>
   267a8:	mov	fp, #0
   267ac:	b	3e060 <GetDataSlab+0x1d054>
   267b0:	ldr	r3, [sp, #20]
   267b4:	cmp	r3, #0
   267b8:	ble	3d3c0 <GetDataSlab+0x1c3b4>
   267bc:	mov	r3, #0
   267c0:	str	r3, [sp, #16]
   267c4:	b	26898 <GetDataSlab+0x588c>
   267c8:	ldr	r2, [r8]
   267cc:	cmp	r2, #0
   267d0:	beq	267e8 <GetDataSlab+0x57dc>
   267d4:	ldr	r3, [sp, #12]
   267d8:	ldr	r3, [r3, #-4]
   267dc:	mul	r3, r3, r2
   267e0:	add	r6, r6, r3
   267e4:	add	fp, fp, r3
   267e8:	add	r9, r9, #1
   267ec:	ldr	r3, [sp, #208]	; 0xd0
   267f0:	cmp	r3, r9
   267f4:	beq	26880 <GetDataSlab+0x5874>
   267f8:	ldr	r3, [r5]
   267fc:	add	r3, r3, #1
   26800:	str	r3, [r5]
   26804:	add	r8, r8, #4
   26808:	ldr	r2, [sp, #8]
   2680c:	ldr	r1, [r2, #4]!
   26810:	str	r2, [sp, #8]
   26814:	mov	r0, r3
   26818:	bl	517e8 <__aeabi_idivmod>
   2681c:	cmp	r1, #0
   26820:	bne	2686c <GetDataSlab+0x5860>
   26824:	mov	r3, #0
   26828:	str	r3, [r5], #4
   2682c:	add	r7, r7, #4
   26830:	str	r7, [sp, #12]
   26834:	ldr	r4, [r7]
   26838:	mov	r1, r4
   2683c:	mov	r0, fp
   26840:	bl	517e8 <__aeabi_idivmod>
   26844:	subs	r3, r1, #0
   26848:	beq	267c8 <GetDataSlab+0x57bc>
   2684c:	ldr	r2, [r7, #-4]
   26850:	ldr	r1, [r8]
   26854:	sub	r3, r4, r3
   26858:	mla	r3, r1, r2, r3
   2685c:	add	r6, r6, r3
   26860:	add	fp, fp, r3
   26864:	b	267e8 <GetDataSlab+0x57dc>
   26868:	ldr	r9, [sp, #28]
   2686c:	add	r3, sp, #152	; 0x98
   26870:	add	r3, r3, r9, lsl #2
   26874:	ldr	r3, [r3, #-120]	; 0xffffff88
   26878:	add	fp, fp, r3
   2687c:	add	r6, r6, r3
   26880:	ldr	r3, [sp, #16]
   26884:	add	r3, r3, sl
   26888:	str	r3, [sp, #16]
   2688c:	ldr	r2, [sp, #20]
   26890:	cmp	r3, r2
   26894:	bge	26964 <GetDataSlab+0x5958>
   26898:	ldr	r3, [sp, #196]	; 0xc4
   2689c:	ldr	r3, [r3]
   268a0:	cmp	r3, #0
   268a4:	addne	r6, r6, r3
   268a8:	addne	fp, fp, r3
   268ac:	ldr	r3, [sp, #204]	; 0xcc
   268b0:	ldr	sl, [r3]
   268b4:	cmp	sl, #0
   268b8:	ble	268f4 <GetDataSlab+0x58e8>
   268bc:	sub	r1, r6, #1
   268c0:	ldr	r3, [sp, #4]
   268c4:	ldr	r2, [sp, #16]
   268c8:	add	r2, r3, r2, lsl #3
   268cc:	mov	r3, #0
   268d0:	ldrb	r0, [r1, #1]!
   268d4:	vmov	s15, r0
   268d8:	vcvt.f64.u32	d7, s15
   268dc:	vstmia	r2!, {d7}
   268e0:	add	r3, r3, #1
   268e4:	ldr	r0, [sp, #204]	; 0xcc
   268e8:	ldr	sl, [r0]
   268ec:	cmp	sl, r3
   268f0:	bgt	268d0 <GetDataSlab+0x58c4>
   268f4:	ldr	r3, [sp, #192]	; 0xc0
   268f8:	ldr	r2, [r3]
   268fc:	ldr	r3, [sp, #196]	; 0xc4
   26900:	ldr	r3, [r3]
   26904:	sub	r3, r2, r3
   26908:	add	fp, fp, r3
   2690c:	add	r6, r6, r3
   26910:	ldr	r3, [sp, #208]	; 0xd0
   26914:	cmp	r3, #1
   26918:	ble	26880 <GetDataSlab+0x5874>
   2691c:	ldr	r3, [sp, #76]	; 0x4c
   26920:	add	r3, r3, #1
   26924:	str	r3, [sp, #76]	; 0x4c
   26928:	ldr	r2, [sp, #204]	; 0xcc
   2692c:	ldr	r1, [r2, #4]
   26930:	mov	r0, r3
   26934:	bl	517e8 <__aeabi_idivmod>
   26938:	cmp	r1, #0
   2693c:	bne	26868 <GetDataSlab+0x585c>
   26940:	add	r5, sp, #76	; 0x4c
   26944:	ldr	r3, [sp, #204]	; 0xcc
   26948:	add	r3, r3, #4
   2694c:	str	r3, [sp, #8]
   26950:	ldr	r3, [sp, #196]	; 0xc4
   26954:	add	r8, r3, #4
   26958:	add	r7, sp, #112	; 0x70
   2695c:	ldr	r9, [sp, #28]
   26960:	b	26824 <GetDataSlab+0x5818>
   26964:	mov	r3, #0
   26968:	b	24fa8 <GetDataSlab+0x3f9c>
   2696c:	ldr	r2, [r9]
   26970:	cmp	r2, #0
   26974:	beq	2698c <GetDataSlab+0x5980>
   26978:	ldr	r3, [sp, #16]
   2697c:	ldr	r3, [r3, #-4]
   26980:	mul	r3, r3, r2
   26984:	add	r6, r6, r3
   26988:	add	fp, fp, r3
   2698c:	add	sl, sl, #1
   26990:	ldr	r3, [sp, #208]	; 0xd0
   26994:	cmp	r3, sl
   26998:	beq	26a24 <GetDataSlab+0x5a18>
   2699c:	ldr	r3, [r5]
   269a0:	add	r3, r3, #1
   269a4:	str	r3, [r5]
   269a8:	add	r9, r9, #4
   269ac:	ldr	r2, [sp, #12]
   269b0:	ldr	r1, [r2, #4]!
   269b4:	str	r2, [sp, #12]
   269b8:	mov	r0, r3
   269bc:	bl	517e8 <__aeabi_idivmod>
   269c0:	cmp	r1, #0
   269c4:	bne	26a10 <GetDataSlab+0x5a04>
   269c8:	mov	r3, #0
   269cc:	str	r3, [r5], #4
   269d0:	add	r7, r7, #4
   269d4:	str	r7, [sp, #16]
   269d8:	ldr	r4, [r7]
   269dc:	mov	r1, r4
   269e0:	mov	r0, fp
   269e4:	bl	517e8 <__aeabi_idivmod>
   269e8:	subs	r3, r1, #0
   269ec:	beq	2696c <GetDataSlab+0x5960>
   269f0:	ldr	r2, [r7, #-4]
   269f4:	ldr	r1, [r9]
   269f8:	sub	r3, r4, r3
   269fc:	mla	r3, r1, r2, r3
   26a00:	add	r6, r6, r3
   26a04:	add	fp, fp, r3
   26a08:	b	2698c <GetDataSlab+0x5980>
   26a0c:	mov	sl, #1
   26a10:	add	r3, sp, #152	; 0x98
   26a14:	add	r3, r3, sl, lsl #2
   26a18:	ldr	r3, [r3, #-120]	; 0xffffff88
   26a1c:	add	fp, fp, r3
   26a20:	add	r6, r6, r3
   26a24:	ldr	r3, [sp, #24]
   26a28:	ldr	r2, [sp, #8]
   26a2c:	add	r3, r3, r2
   26a30:	str	r3, [sp, #24]
   26a34:	ldr	r2, [sp, #20]
   26a38:	cmp	r3, r2
   26a3c:	bge	26b2c <GetDataSlab+0x5b20>
   26a40:	ldr	r3, [sp, #196]	; 0xc4
   26a44:	ldr	r3, [r3]
   26a48:	cmp	r3, #0
   26a4c:	addne	r6, r6, r3
   26a50:	addne	fp, fp, r3
   26a54:	ldr	r3, [sp, #204]	; 0xcc
   26a58:	ldr	r3, [r3]
   26a5c:	str	r3, [sp, #8]
   26a60:	cmp	r3, #0
   26a64:	ble	26aac <GetDataSlab+0x5aa0>
   26a68:	ldr	r3, [sp, #4]
   26a6c:	ldr	r2, [sp, #24]
   26a70:	add	r2, r3, r2, lsl #3
   26a74:	mov	r3, #0
   26a78:	ldrb	r1, [r6]
   26a7c:	vmov	s15, r1
   26a80:	vcvt.f64.u32	d7, s15
   26a84:	vstmia	r2!, {d7}
   26a88:	ldr	r1, [r8]
   26a8c:	add	r6, r6, r1
   26a90:	add	fp, fp, r1
   26a94:	add	r3, r3, #1
   26a98:	ldr	r1, [sp, #204]	; 0xcc
   26a9c:	ldr	r1, [r1]
   26aa0:	str	r1, [sp, #8]
   26aa4:	cmp	r1, r3
   26aa8:	bgt	26a78 <GetDataSlab+0x5a6c>
   26aac:	ldr	r3, [r8]
   26ab0:	ldr	r2, [sp, #8]
   26ab4:	mul	r3, r3, r2
   26ab8:	ldr	r2, [sp, #192]	; 0xc0
   26abc:	ldr	r2, [r2]
   26ac0:	sub	r3, r2, r3
   26ac4:	ldr	r2, [sp, #196]	; 0xc4
   26ac8:	ldr	r2, [r2]
   26acc:	sub	r3, r3, r2
   26ad0:	add	fp, fp, r3
   26ad4:	add	r6, r6, r3
   26ad8:	ldr	r3, [sp, #208]	; 0xd0
   26adc:	cmp	r3, #1
   26ae0:	ble	26a24 <GetDataSlab+0x5a18>
   26ae4:	ldr	r3, [sp, #76]	; 0x4c
   26ae8:	add	r3, r3, #1
   26aec:	str	r3, [sp, #76]	; 0x4c
   26af0:	ldr	r2, [sp, #204]	; 0xcc
   26af4:	ldr	r1, [r2, #4]
   26af8:	mov	r0, r3
   26afc:	bl	517e8 <__aeabi_idivmod>
   26b00:	cmp	r1, #0
   26b04:	bne	26a0c <GetDataSlab+0x5a00>
   26b08:	add	r5, sp, #76	; 0x4c
   26b0c:	ldr	r3, [sp, #204]	; 0xcc
   26b10:	add	r3, r3, #4
   26b14:	str	r3, [sp, #12]
   26b18:	ldr	r3, [sp, #196]	; 0xc4
   26b1c:	add	r9, r3, #4
   26b20:	add	r7, sp, #112	; 0x70
   26b24:	mov	sl, #1
   26b28:	b	269c8 <GetDataSlab+0x59bc>
   26b2c:	mov	r3, #0
   26b30:	b	24fa8 <GetDataSlab+0x3f9c>
   26b34:	cmp	r4, #12
   26b38:	beq	26bac <GetDataSlab+0x5ba0>
   26b3c:	cmp	r4, #13
   26b40:	movne	r3, #1
   26b44:	bne	24fa8 <GetDataSlab+0x3f9c>
   26b48:	ldr	r3, [r8]
   26b4c:	str	r3, [sp, #28]
   26b50:	sub	r3, r3, #1
   26b54:	str	r3, [sp, #32]
   26b58:	ldr	r3, [sp, #192]	; 0xc0
   26b5c:	ldr	r3, [r3]
   26b60:	str	r3, [sp, #112]	; 0x70
   26b64:	ldr	r3, [sp, #204]	; 0xcc
   26b68:	ldr	r3, [r3]
   26b6c:	str	r3, [sp, #20]
   26b70:	ldr	r3, [sp, #208]	; 0xd0
   26b74:	cmp	r3, #1
   26b78:	ble	26f84 <GetDataSlab+0x5f78>
   26b7c:	str	r8, [sp, #16]
   26b80:	add	sl, sp, #36	; 0x24
   26b84:	ldr	lr, [sp, #192]	; 0xc0
   26b88:	add	r9, sp, #112	; 0x70
   26b8c:	ldr	r3, [sp, #204]	; 0xcc
   26b90:	add	r6, r3, #4
   26b94:	ldr	r3, [sp, #196]	; 0xc4
   26b98:	add	r4, r3, #4
   26b9c:	str	lr, [sp, #12]
   26ba0:	mov	r5, #2
   26ba4:	mov	fp, #0
   26ba8:	b	3e1ac <GetDataSlab+0x1d1a0>
   26bac:	ldr	r3, [r8]
   26bb0:	str	r3, [sp, #28]
   26bb4:	sub	r3, r3, #1
   26bb8:	str	r3, [sp, #32]
   26bbc:	ldr	r3, [sp, #192]	; 0xc0
   26bc0:	ldr	r3, [r3]
   26bc4:	str	r3, [sp, #112]	; 0x70
   26bc8:	ldr	r3, [sp, #204]	; 0xcc
   26bcc:	ldr	r3, [r3]
   26bd0:	str	r3, [sp, #20]
   26bd4:	ldr	r3, [sp, #208]	; 0xd0
   26bd8:	cmp	r3, #1
   26bdc:	ble	26c10 <GetDataSlab+0x5c04>
   26be0:	str	r8, [sp, #16]
   26be4:	add	sl, sp, #36	; 0x24
   26be8:	ldr	lr, [sp, #192]	; 0xc0
   26bec:	add	r9, sp, #112	; 0x70
   26bf0:	ldr	r3, [sp, #204]	; 0xcc
   26bf4:	add	r6, r3, #4
   26bf8:	ldr	r3, [sp, #196]	; 0xc4
   26bfc:	add	r4, r3, #4
   26c00:	str	lr, [sp, #12]
   26c04:	mov	r5, #2
   26c08:	mov	fp, #0
   26c0c:	b	3e0c0 <GetDataSlab+0x1d0b4>
   26c10:	mov	fp, #0
   26c14:	b	3e14c <GetDataSlab+0x1d140>
   26c18:	ldr	r3, [sp, #20]
   26c1c:	cmp	r3, #0
   26c20:	ble	3e174 <GetDataSlab+0x1d168>
   26c24:	mov	r3, #0
   26c28:	str	r3, [sp, #16]
   26c2c:	b	26d00 <GetDataSlab+0x5cf4>
   26c30:	ldr	r2, [r8]
   26c34:	cmp	r2, #0
   26c38:	beq	26c50 <GetDataSlab+0x5c44>
   26c3c:	ldr	r3, [sp, #12]
   26c40:	ldr	r3, [r3, #-4]
   26c44:	mul	r3, r3, r2
   26c48:	add	r7, r7, r3, lsl #3
   26c4c:	add	fp, fp, r3
   26c50:	add	r9, r9, #1
   26c54:	ldr	r3, [sp, #208]	; 0xd0
   26c58:	cmp	r3, r9
   26c5c:	beq	26ce8 <GetDataSlab+0x5cdc>
   26c60:	ldr	r3, [r5]
   26c64:	add	r3, r3, #1
   26c68:	str	r3, [r5]
   26c6c:	add	r8, r8, #4
   26c70:	ldr	r2, [sp, #8]
   26c74:	ldr	r1, [r2, #4]!
   26c78:	str	r2, [sp, #8]
   26c7c:	mov	r0, r3
   26c80:	bl	517e8 <__aeabi_idivmod>
   26c84:	cmp	r1, #0
   26c88:	bne	26cd4 <GetDataSlab+0x5cc8>
   26c8c:	mov	r3, #0
   26c90:	str	r3, [r5], #4
   26c94:	add	r6, r6, #4
   26c98:	str	r6, [sp, #12]
   26c9c:	ldr	r4, [r6]
   26ca0:	mov	r1, r4
   26ca4:	mov	r0, fp
   26ca8:	bl	517e8 <__aeabi_idivmod>
   26cac:	subs	r3, r1, #0
   26cb0:	beq	26c30 <GetDataSlab+0x5c24>
   26cb4:	ldr	r2, [r6, #-4]
   26cb8:	ldr	r1, [r8]
   26cbc:	sub	r3, r4, r3
   26cc0:	mla	r3, r1, r2, r3
   26cc4:	add	r7, r7, r3, lsl #3
   26cc8:	add	fp, fp, r3
   26ccc:	b	26c50 <GetDataSlab+0x5c44>
   26cd0:	ldr	r9, [sp, #28]
   26cd4:	add	r3, sp, #152	; 0x98
   26cd8:	add	r3, r3, r9, lsl #2
   26cdc:	ldr	r3, [r3, #-120]	; 0xffffff88
   26ce0:	add	fp, fp, r3
   26ce4:	add	r7, r7, r3, lsl #3
   26ce8:	ldr	r3, [sp, #16]
   26cec:	add	r3, r3, sl
   26cf0:	str	r3, [sp, #16]
   26cf4:	ldr	r2, [sp, #20]
   26cf8:	cmp	r3, r2
   26cfc:	bge	3e174 <GetDataSlab+0x1d168>
   26d00:	ldr	r3, [sp, #196]	; 0xc4
   26d04:	ldr	r3, [r3]
   26d08:	cmp	r3, #0
   26d0c:	addne	r7, r7, r3, lsl #3
   26d10:	addne	fp, fp, r3
   26d14:	ldr	r3, [sp, #204]	; 0xcc
   26d18:	ldr	sl, [r3]
   26d1c:	cmp	sl, #0
   26d20:	ble	26d58 <GetDataSlab+0x5d4c>
   26d24:	sub	r6, r7, #8
   26d28:	ldr	r3, [sp, #4]
   26d2c:	ldr	r2, [sp, #16]
   26d30:	add	r5, r3, r2, lsl #3
   26d34:	mov	r4, #0
   26d38:	ldrd	r0, [r6, #8]!
   26d3c:	bl	51b60 <__aeabi_l2d>
   26d40:	strd	r0, [r5], #8
   26d44:	add	r4, r4, #1
   26d48:	ldr	r3, [sp, #204]	; 0xcc
   26d4c:	ldr	sl, [r3]
   26d50:	cmp	sl, r4
   26d54:	bgt	26d38 <GetDataSlab+0x5d2c>
   26d58:	ldr	r3, [sp, #192]	; 0xc0
   26d5c:	ldr	r2, [r3]
   26d60:	ldr	r3, [sp, #196]	; 0xc4
   26d64:	ldr	r3, [r3]
   26d68:	sub	r3, r2, r3
   26d6c:	add	fp, fp, r3
   26d70:	add	r7, r7, r3, lsl #3
   26d74:	ldr	r3, [sp, #208]	; 0xd0
   26d78:	cmp	r3, #1
   26d7c:	ble	26ce8 <GetDataSlab+0x5cdc>
   26d80:	ldr	r3, [sp, #76]	; 0x4c
   26d84:	add	r3, r3, #1
   26d88:	str	r3, [sp, #76]	; 0x4c
   26d8c:	ldr	r2, [sp, #204]	; 0xcc
   26d90:	ldr	r1, [r2, #4]
   26d94:	mov	r0, r3
   26d98:	bl	517e8 <__aeabi_idivmod>
   26d9c:	cmp	r1, #0
   26da0:	bne	26cd0 <GetDataSlab+0x5cc4>
   26da4:	add	r5, sp, #76	; 0x4c
   26da8:	ldr	r3, [sp, #204]	; 0xcc
   26dac:	add	r3, r3, #4
   26db0:	str	r3, [sp, #8]
   26db4:	ldr	r3, [sp, #196]	; 0xc4
   26db8:	add	r8, r3, #4
   26dbc:	add	r6, sp, #112	; 0x70
   26dc0:	ldr	r9, [sp, #28]
   26dc4:	b	26c8c <GetDataSlab+0x5c80>
   26dc8:	ldr	r2, [r9]
   26dcc:	cmp	r2, #0
   26dd0:	beq	26de8 <GetDataSlab+0x5ddc>
   26dd4:	ldr	r3, [sp, #16]
   26dd8:	ldr	r3, [r3, #-4]
   26ddc:	mul	r3, r3, r2
   26de0:	add	r7, r7, r3, lsl #3
   26de4:	add	fp, fp, r3
   26de8:	add	sl, sl, #1
   26dec:	ldr	r3, [sp, #208]	; 0xd0
   26df0:	cmp	r3, sl
   26df4:	beq	26e80 <GetDataSlab+0x5e74>
   26df8:	ldr	r3, [r5]
   26dfc:	add	r3, r3, #1
   26e00:	str	r3, [r5]
   26e04:	add	r9, r9, #4
   26e08:	ldr	r2, [sp, #12]
   26e0c:	ldr	r1, [r2, #4]!
   26e10:	str	r2, [sp, #12]
   26e14:	mov	r0, r3
   26e18:	bl	517e8 <__aeabi_idivmod>
   26e1c:	cmp	r1, #0
   26e20:	bne	26e6c <GetDataSlab+0x5e60>
   26e24:	mov	r3, #0
   26e28:	str	r3, [r5], #4
   26e2c:	add	r6, r6, #4
   26e30:	str	r6, [sp, #16]
   26e34:	ldr	r4, [r6]
   26e38:	mov	r1, r4
   26e3c:	mov	r0, fp
   26e40:	bl	517e8 <__aeabi_idivmod>
   26e44:	subs	r3, r1, #0
   26e48:	beq	26dc8 <GetDataSlab+0x5dbc>
   26e4c:	ldr	r2, [r6, #-4]
   26e50:	ldr	r1, [r9]
   26e54:	sub	r3, r4, r3
   26e58:	mla	r3, r1, r2, r3
   26e5c:	add	r7, r7, r3, lsl #3
   26e60:	add	fp, fp, r3
   26e64:	b	26de8 <GetDataSlab+0x5ddc>
   26e68:	mov	sl, #1
   26e6c:	add	r3, sp, #152	; 0x98
   26e70:	add	r3, r3, sl, lsl #2
   26e74:	ldr	r3, [r3, #-120]	; 0xffffff88
   26e78:	add	fp, fp, r3
   26e7c:	add	r7, r7, r3, lsl #3
   26e80:	ldr	r3, [sp, #24]
   26e84:	ldr	r2, [sp, #8]
   26e88:	add	r3, r3, r2
   26e8c:	str	r3, [sp, #24]
   26e90:	ldr	r2, [sp, #20]
   26e94:	cmp	r3, r2
   26e98:	bge	3e174 <GetDataSlab+0x1d168>
   26e9c:	ldr	r3, [sp, #196]	; 0xc4
   26ea0:	ldr	r3, [r3]
   26ea4:	cmp	r3, #0
   26ea8:	addne	r7, r7, r3, lsl #3
   26eac:	addne	fp, fp, r3
   26eb0:	ldr	r3, [sp, #204]	; 0xcc
   26eb4:	ldr	r3, [r3]
   26eb8:	str	r3, [sp, #8]
   26ebc:	cmp	r3, #0
   26ec0:	ble	26f04 <GetDataSlab+0x5ef8>
   26ec4:	ldr	r3, [sp, #4]
   26ec8:	ldr	r2, [sp, #24]
   26ecc:	add	r5, r3, r2, lsl #3
   26ed0:	mov	r4, #0
   26ed4:	ldrd	r0, [r7]
   26ed8:	bl	51b60 <__aeabi_l2d>
   26edc:	strd	r0, [r5], #8
   26ee0:	ldr	r3, [r8]
   26ee4:	add	r7, r7, r3, lsl #3
   26ee8:	add	fp, fp, r3
   26eec:	add	r4, r4, #1
   26ef0:	ldr	r3, [sp, #204]	; 0xcc
   26ef4:	ldr	r3, [r3]
   26ef8:	str	r3, [sp, #8]
   26efc:	cmp	r3, r4
   26f00:	bgt	26ed4 <GetDataSlab+0x5ec8>
   26f04:	ldr	r3, [r8]
   26f08:	ldr	r2, [sp, #8]
   26f0c:	mul	r3, r3, r2
   26f10:	ldr	r2, [sp, #192]	; 0xc0
   26f14:	ldr	r2, [r2]
   26f18:	sub	r3, r2, r3
   26f1c:	ldr	r2, [sp, #196]	; 0xc4
   26f20:	ldr	r2, [r2]
   26f24:	sub	r3, r3, r2
   26f28:	add	fp, fp, r3
   26f2c:	add	r7, r7, r3, lsl #3
   26f30:	ldr	r3, [sp, #208]	; 0xd0
   26f34:	cmp	r3, #1
   26f38:	ble	26e80 <GetDataSlab+0x5e74>
   26f3c:	ldr	r3, [sp, #76]	; 0x4c
   26f40:	add	r3, r3, #1
   26f44:	str	r3, [sp, #76]	; 0x4c
   26f48:	ldr	r2, [sp, #204]	; 0xcc
   26f4c:	ldr	r1, [r2, #4]
   26f50:	mov	r0, r3
   26f54:	bl	517e8 <__aeabi_idivmod>
   26f58:	cmp	r1, #0
   26f5c:	bne	26e68 <GetDataSlab+0x5e5c>
   26f60:	add	r5, sp, #76	; 0x4c
   26f64:	ldr	r3, [sp, #204]	; 0xcc
   26f68:	add	r3, r3, #4
   26f6c:	str	r3, [sp, #12]
   26f70:	ldr	r3, [sp, #196]	; 0xc4
   26f74:	add	r9, r3, #4
   26f78:	add	r6, sp, #112	; 0x70
   26f7c:	mov	sl, #1
   26f80:	b	26e24 <GetDataSlab+0x5e18>
   26f84:	mov	fp, #0
   26f88:	b	3e238 <GetDataSlab+0x1d22c>
   26f8c:	ldr	r3, [sp, #20]
   26f90:	cmp	r3, #0
   26f94:	ble	3d3c8 <GetDataSlab+0x1c3bc>
   26f98:	mov	r3, #0
   26f9c:	str	r3, [sp, #16]
   26fa0:	b	27074 <GetDataSlab+0x6068>
   26fa4:	ldr	r2, [r8]
   26fa8:	cmp	r2, #0
   26fac:	beq	26fc4 <GetDataSlab+0x5fb8>
   26fb0:	ldr	r3, [sp, #12]
   26fb4:	ldr	r3, [r3, #-4]
   26fb8:	mul	r3, r3, r2
   26fbc:	add	r7, r7, r3, lsl #3
   26fc0:	add	fp, fp, r3
   26fc4:	add	r9, r9, #1
   26fc8:	ldr	r3, [sp, #208]	; 0xd0
   26fcc:	cmp	r3, r9
   26fd0:	beq	2705c <GetDataSlab+0x6050>
   26fd4:	ldr	r3, [r5]
   26fd8:	add	r3, r3, #1
   26fdc:	str	r3, [r5]
   26fe0:	add	r8, r8, #4
   26fe4:	ldr	r2, [sp, #8]
   26fe8:	ldr	r1, [r2, #4]!
   26fec:	str	r2, [sp, #8]
   26ff0:	mov	r0, r3
   26ff4:	bl	517e8 <__aeabi_idivmod>
   26ff8:	cmp	r1, #0
   26ffc:	bne	27048 <GetDataSlab+0x603c>
   27000:	mov	r3, #0
   27004:	str	r3, [r5], #4
   27008:	add	r6, r6, #4
   2700c:	str	r6, [sp, #12]
   27010:	ldr	r4, [r6]
   27014:	mov	r1, r4
   27018:	mov	r0, fp
   2701c:	bl	517e8 <__aeabi_idivmod>
   27020:	subs	r3, r1, #0
   27024:	beq	26fa4 <GetDataSlab+0x5f98>
   27028:	ldr	r2, [r6, #-4]
   2702c:	ldr	r1, [r8]
   27030:	sub	r3, r4, r3
   27034:	mla	r3, r1, r2, r3
   27038:	add	r7, r7, r3, lsl #3
   2703c:	add	fp, fp, r3
   27040:	b	26fc4 <GetDataSlab+0x5fb8>
   27044:	ldr	r9, [sp, #28]
   27048:	add	r3, sp, #152	; 0x98
   2704c:	add	r3, r3, r9, lsl #2
   27050:	ldr	r3, [r3, #-120]	; 0xffffff88
   27054:	add	fp, fp, r3
   27058:	add	r7, r7, r3, lsl #3
   2705c:	ldr	r3, [sp, #16]
   27060:	add	r3, r3, sl
   27064:	str	r3, [sp, #16]
   27068:	ldr	r2, [sp, #20]
   2706c:	cmp	r3, r2
   27070:	bge	2713c <GetDataSlab+0x6130>
   27074:	ldr	r3, [sp, #196]	; 0xc4
   27078:	ldr	r3, [r3]
   2707c:	cmp	r3, #0
   27080:	addne	r7, r7, r3, lsl #3
   27084:	addne	fp, fp, r3
   27088:	ldr	r3, [sp, #204]	; 0xcc
   2708c:	ldr	sl, [r3]
   27090:	cmp	sl, #0
   27094:	ble	270cc <GetDataSlab+0x60c0>
   27098:	sub	r6, r7, #8
   2709c:	ldr	r3, [sp, #4]
   270a0:	ldr	r2, [sp, #16]
   270a4:	add	r5, r3, r2, lsl #3
   270a8:	mov	r4, #0
   270ac:	ldrd	r0, [r6, #8]!
   270b0:	bl	51b4c <__aeabi_ul2d>
   270b4:	strd	r0, [r5], #8
   270b8:	add	r4, r4, #1
   270bc:	ldr	r3, [sp, #204]	; 0xcc
   270c0:	ldr	sl, [r3]
   270c4:	cmp	sl, r4
   270c8:	bgt	270ac <GetDataSlab+0x60a0>
   270cc:	ldr	r3, [sp, #192]	; 0xc0
   270d0:	ldr	r2, [r3]
   270d4:	ldr	r3, [sp, #196]	; 0xc4
   270d8:	ldr	r3, [r3]
   270dc:	sub	r3, r2, r3
   270e0:	add	fp, fp, r3
   270e4:	add	r7, r7, r3, lsl #3
   270e8:	ldr	r3, [sp, #208]	; 0xd0
   270ec:	cmp	r3, #1
   270f0:	ble	2705c <GetDataSlab+0x6050>
   270f4:	ldr	r3, [sp, #76]	; 0x4c
   270f8:	add	r3, r3, #1
   270fc:	str	r3, [sp, #76]	; 0x4c
   27100:	ldr	r2, [sp, #204]	; 0xcc
   27104:	ldr	r1, [r2, #4]
   27108:	mov	r0, r3
   2710c:	bl	517e8 <__aeabi_idivmod>
   27110:	cmp	r1, #0
   27114:	bne	27044 <GetDataSlab+0x6038>
   27118:	add	r5, sp, #76	; 0x4c
   2711c:	ldr	r3, [sp, #204]	; 0xcc
   27120:	add	r3, r3, #4
   27124:	str	r3, [sp, #8]
   27128:	ldr	r3, [sp, #196]	; 0xc4
   2712c:	add	r8, r3, #4
   27130:	add	r6, sp, #112	; 0x70
   27134:	ldr	r9, [sp, #28]
   27138:	b	27000 <GetDataSlab+0x5ff4>
   2713c:	mov	r3, #0
   27140:	b	24fa8 <GetDataSlab+0x3f9c>
   27144:	ldr	r2, [r9]
   27148:	cmp	r2, #0
   2714c:	beq	27164 <GetDataSlab+0x6158>
   27150:	ldr	r3, [sp, #16]
   27154:	ldr	r3, [r3, #-4]
   27158:	mul	r3, r3, r2
   2715c:	add	r7, r7, r3, lsl #3
   27160:	add	fp, fp, r3
   27164:	add	sl, sl, #1
   27168:	ldr	r3, [sp, #208]	; 0xd0
   2716c:	cmp	r3, sl
   27170:	beq	271fc <GetDataSlab+0x61f0>
   27174:	ldr	r3, [r5]
   27178:	add	r3, r3, #1
   2717c:	str	r3, [r5]
   27180:	add	r9, r9, #4
   27184:	ldr	r2, [sp, #12]
   27188:	ldr	r1, [r2, #4]!
   2718c:	str	r2, [sp, #12]
   27190:	mov	r0, r3
   27194:	bl	517e8 <__aeabi_idivmod>
   27198:	cmp	r1, #0
   2719c:	bne	271e8 <GetDataSlab+0x61dc>
   271a0:	mov	r3, #0
   271a4:	str	r3, [r5], #4
   271a8:	add	r6, r6, #4
   271ac:	str	r6, [sp, #16]
   271b0:	ldr	r4, [r6]
   271b4:	mov	r1, r4
   271b8:	mov	r0, fp
   271bc:	bl	517e8 <__aeabi_idivmod>
   271c0:	subs	r3, r1, #0
   271c4:	beq	27144 <GetDataSlab+0x6138>
   271c8:	ldr	r2, [r6, #-4]
   271cc:	ldr	r1, [r9]
   271d0:	sub	r3, r4, r3
   271d4:	mla	r3, r1, r2, r3
   271d8:	add	r7, r7, r3, lsl #3
   271dc:	add	fp, fp, r3
   271e0:	b	27164 <GetDataSlab+0x6158>
   271e4:	mov	sl, #1
   271e8:	add	r3, sp, #152	; 0x98
   271ec:	add	r3, r3, sl, lsl #2
   271f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   271f4:	add	fp, fp, r3
   271f8:	add	r7, r7, r3, lsl #3
   271fc:	ldr	r3, [sp, #24]
   27200:	ldr	r2, [sp, #8]
   27204:	add	r3, r3, r2
   27208:	str	r3, [sp, #24]
   2720c:	ldr	r2, [sp, #20]
   27210:	cmp	r3, r2
   27214:	bge	27300 <GetDataSlab+0x62f4>
   27218:	ldr	r3, [sp, #196]	; 0xc4
   2721c:	ldr	r3, [r3]
   27220:	cmp	r3, #0
   27224:	addne	r7, r7, r3, lsl #3
   27228:	addne	fp, fp, r3
   2722c:	ldr	r3, [sp, #204]	; 0xcc
   27230:	ldr	r3, [r3]
   27234:	str	r3, [sp, #8]
   27238:	cmp	r3, #0
   2723c:	ble	27280 <GetDataSlab+0x6274>
   27240:	ldr	r3, [sp, #4]
   27244:	ldr	r2, [sp, #24]
   27248:	add	r5, r3, r2, lsl #3
   2724c:	mov	r4, #0
   27250:	ldrd	r0, [r7]
   27254:	bl	51b4c <__aeabi_ul2d>
   27258:	strd	r0, [r5], #8
   2725c:	ldr	r3, [r8]
   27260:	add	r7, r7, r3, lsl #3
   27264:	add	fp, fp, r3
   27268:	add	r4, r4, #1
   2726c:	ldr	r3, [sp, #204]	; 0xcc
   27270:	ldr	r3, [r3]
   27274:	str	r3, [sp, #8]
   27278:	cmp	r3, r4
   2727c:	bgt	27250 <GetDataSlab+0x6244>
   27280:	ldr	r3, [r8]
   27284:	ldr	r2, [sp, #8]
   27288:	mul	r3, r3, r2
   2728c:	ldr	r2, [sp, #192]	; 0xc0
   27290:	ldr	r2, [r2]
   27294:	sub	r3, r2, r3
   27298:	ldr	r2, [sp, #196]	; 0xc4
   2729c:	ldr	r2, [r2]
   272a0:	sub	r3, r3, r2
   272a4:	add	fp, fp, r3
   272a8:	add	r7, r7, r3, lsl #3
   272ac:	ldr	r3, [sp, #208]	; 0xd0
   272b0:	cmp	r3, #1
   272b4:	ble	271fc <GetDataSlab+0x61f0>
   272b8:	ldr	r3, [sp, #76]	; 0x4c
   272bc:	add	r3, r3, #1
   272c0:	str	r3, [sp, #76]	; 0x4c
   272c4:	ldr	r2, [sp, #204]	; 0xcc
   272c8:	ldr	r1, [r2, #4]
   272cc:	mov	r0, r3
   272d0:	bl	517e8 <__aeabi_idivmod>
   272d4:	cmp	r1, #0
   272d8:	bne	271e4 <GetDataSlab+0x61d8>
   272dc:	add	r5, sp, #76	; 0x4c
   272e0:	ldr	r3, [sp, #204]	; 0xcc
   272e4:	add	r3, r3, #4
   272e8:	str	r3, [sp, #12]
   272ec:	ldr	r3, [sp, #196]	; 0xc4
   272f0:	add	r9, r3, #4
   272f4:	add	r6, sp, #112	; 0x70
   272f8:	mov	sl, #1
   272fc:	b	271a0 <GetDataSlab+0x6194>
   27300:	mov	r3, #0
   27304:	b	24fa8 <GetDataSlab+0x3f9c>
   27308:	sub	r3, r4, #1
   2730c:	cmp	r3, #8
   27310:	addls	pc, pc, r3, lsl #2
   27314:	b	2929c <GetDataSlab+0x8290>
   27318:	b	28abc <GetDataSlab+0x7ab0>
   2731c:	b	28eac <GetDataSlab+0x7ea0>
   27320:	b	282dc <GetDataSlab+0x72d0>
   27324:	b	286cc <GetDataSlab+0x76c0>
   27328:	b	27b04 <GetDataSlab+0x6af8>
   2732c:	b	27ef0 <GetDataSlab+0x6ee4>
   27330:	b	27724 <GetDataSlab+0x6718>
   27334:	b	2929c <GetDataSlab+0x8290>
   27338:	b	2733c <GetDataSlab+0x6330>
   2733c:	ldr	r3, [r8]
   27340:	str	r3, [sp, #28]
   27344:	sub	r3, r3, #1
   27348:	str	r3, [sp, #32]
   2734c:	ldr	r3, [sp, #192]	; 0xc0
   27350:	ldr	r3, [r3]
   27354:	str	r3, [sp, #112]	; 0x70
   27358:	ldr	r3, [sp, #204]	; 0xcc
   2735c:	ldr	r3, [r3]
   27360:	str	r3, [sp, #20]
   27364:	ldr	r3, [sp, #208]	; 0xd0
   27368:	cmp	r3, #1
   2736c:	ble	273a0 <GetDataSlab+0x6394>
   27370:	str	r8, [sp, #16]
   27374:	add	sl, sp, #36	; 0x24
   27378:	ldr	lr, [sp, #192]	; 0xc0
   2737c:	add	r9, sp, #112	; 0x70
   27380:	ldr	r3, [sp, #204]	; 0xcc
   27384:	add	r5, r3, #4
   27388:	ldr	r3, [sp, #196]	; 0xc4
   2738c:	add	r4, r3, #4
   27390:	str	lr, [sp, #12]
   27394:	mov	r6, #2
   27398:	mov	fp, #0
   2739c:	b	3e298 <GetDataSlab+0x1d28c>
   273a0:	mov	fp, #0
   273a4:	b	3e324 <GetDataSlab+0x1d318>
   273a8:	ldr	r3, [sp, #20]
   273ac:	cmp	r3, #0
   273b0:	ble	3d3d0 <GetDataSlab+0x1c3c4>
   273b4:	mov	r3, #0
   273b8:	str	r3, [sp, #16]
   273bc:	b	27490 <GetDataSlab+0x6484>
   273c0:	ldr	r2, [r8]
   273c4:	cmp	r2, #0
   273c8:	beq	273e0 <GetDataSlab+0x63d4>
   273cc:	ldr	r3, [sp, #12]
   273d0:	ldr	r3, [r3, #-4]
   273d4:	mul	r3, r3, r2
   273d8:	add	r5, r5, r3, lsl #3
   273dc:	add	fp, fp, r3
   273e0:	add	r9, r9, #1
   273e4:	ldr	r3, [sp, #208]	; 0xd0
   273e8:	cmp	r3, r9
   273ec:	beq	27478 <GetDataSlab+0x646c>
   273f0:	ldr	r3, [r6]
   273f4:	add	r3, r3, #1
   273f8:	str	r3, [r6]
   273fc:	add	r8, r8, #4
   27400:	ldr	r2, [sp, #8]
   27404:	ldr	r1, [r2, #4]!
   27408:	str	r2, [sp, #8]
   2740c:	mov	r0, r3
   27410:	bl	517e8 <__aeabi_idivmod>
   27414:	cmp	r1, #0
   27418:	bne	27464 <GetDataSlab+0x6458>
   2741c:	mov	r3, #0
   27420:	str	r3, [r6], #4
   27424:	add	r7, r7, #4
   27428:	str	r7, [sp, #12]
   2742c:	ldr	r4, [r7]
   27430:	mov	r1, r4
   27434:	mov	r0, fp
   27438:	bl	517e8 <__aeabi_idivmod>
   2743c:	subs	r3, r1, #0
   27440:	beq	273c0 <GetDataSlab+0x63b4>
   27444:	ldr	r2, [r7, #-4]
   27448:	ldr	r1, [r8]
   2744c:	sub	r3, r4, r3
   27450:	mla	r3, r1, r2, r3
   27454:	add	r5, r5, r3, lsl #3
   27458:	add	fp, fp, r3
   2745c:	b	273e0 <GetDataSlab+0x63d4>
   27460:	ldr	r9, [sp, #28]
   27464:	add	r3, sp, #152	; 0x98
   27468:	add	r3, r3, r9, lsl #2
   2746c:	ldr	r3, [r3, #-120]	; 0xffffff88
   27470:	add	fp, fp, r3
   27474:	add	r5, r5, r3, lsl #3
   27478:	ldr	r3, [sp, #16]
   2747c:	add	r3, r3, sl
   27480:	str	r3, [sp, #16]
   27484:	ldr	r2, [sp, #20]
   27488:	cmp	r3, r2
   2748c:	bge	27558 <GetDataSlab+0x654c>
   27490:	ldr	r3, [sp, #196]	; 0xc4
   27494:	ldr	r3, [r3]
   27498:	cmp	r3, #0
   2749c:	addne	r5, r5, r3, lsl #3
   274a0:	addne	fp, fp, r3
   274a4:	ldr	r3, [sp, #204]	; 0xcc
   274a8:	ldr	sl, [r3]
   274ac:	cmp	sl, #0
   274b0:	ble	274e8 <GetDataSlab+0x64dc>
   274b4:	mov	r1, r5
   274b8:	ldr	r3, [sp, #4]
   274bc:	ldr	r2, [sp, #16]
   274c0:	add	r2, r3, r2, lsl #2
   274c4:	mov	r3, #0
   274c8:	vldmia	r1!, {d7}
   274cc:	vcvt.f32.f64	s15, d7
   274d0:	vstmia	r2!, {s15}
   274d4:	add	r3, r3, #1
   274d8:	ldr	r0, [sp, #204]	; 0xcc
   274dc:	ldr	sl, [r0]
   274e0:	cmp	sl, r3
   274e4:	bgt	274c8 <GetDataSlab+0x64bc>
   274e8:	ldr	r3, [sp, #192]	; 0xc0
   274ec:	ldr	r2, [r3]
   274f0:	ldr	r3, [sp, #196]	; 0xc4
   274f4:	ldr	r3, [r3]
   274f8:	sub	r3, r2, r3
   274fc:	add	fp, fp, r3
   27500:	add	r5, r5, r3, lsl #3
   27504:	ldr	r3, [sp, #208]	; 0xd0
   27508:	cmp	r3, #1
   2750c:	ble	27478 <GetDataSlab+0x646c>
   27510:	ldr	r3, [sp, #76]	; 0x4c
   27514:	add	r3, r3, #1
   27518:	str	r3, [sp, #76]	; 0x4c
   2751c:	ldr	r2, [sp, #204]	; 0xcc
   27520:	ldr	r1, [r2, #4]
   27524:	mov	r0, r3
   27528:	bl	517e8 <__aeabi_idivmod>
   2752c:	cmp	r1, #0
   27530:	bne	27460 <GetDataSlab+0x6454>
   27534:	add	r6, sp, #76	; 0x4c
   27538:	ldr	r3, [sp, #204]	; 0xcc
   2753c:	add	r3, r3, #4
   27540:	str	r3, [sp, #8]
   27544:	ldr	r3, [sp, #196]	; 0xc4
   27548:	add	r8, r3, #4
   2754c:	add	r7, sp, #112	; 0x70
   27550:	ldr	r9, [sp, #28]
   27554:	b	2741c <GetDataSlab+0x6410>
   27558:	mov	r3, #0
   2755c:	b	24fa8 <GetDataSlab+0x3f9c>
   27560:	ldr	r2, [r9]
   27564:	cmp	r2, #0
   27568:	beq	27580 <GetDataSlab+0x6574>
   2756c:	ldr	r3, [sp, #16]
   27570:	ldr	r3, [r3, #-4]
   27574:	mul	r3, r3, r2
   27578:	add	r5, r5, r3, lsl #3
   2757c:	add	fp, fp, r3
   27580:	add	sl, sl, #1
   27584:	ldr	r3, [sp, #208]	; 0xd0
   27588:	cmp	r3, sl
   2758c:	beq	27618 <GetDataSlab+0x660c>
   27590:	ldr	r3, [r6]
   27594:	add	r3, r3, #1
   27598:	str	r3, [r6]
   2759c:	add	r9, r9, #4
   275a0:	ldr	r2, [sp, #12]
   275a4:	ldr	r1, [r2, #4]!
   275a8:	str	r2, [sp, #12]
   275ac:	mov	r0, r3
   275b0:	bl	517e8 <__aeabi_idivmod>
   275b4:	cmp	r1, #0
   275b8:	bne	27604 <GetDataSlab+0x65f8>
   275bc:	mov	r3, #0
   275c0:	str	r3, [r6], #4
   275c4:	add	r7, r7, #4
   275c8:	str	r7, [sp, #16]
   275cc:	ldr	r4, [r7]
   275d0:	mov	r1, r4
   275d4:	mov	r0, fp
   275d8:	bl	517e8 <__aeabi_idivmod>
   275dc:	subs	r3, r1, #0
   275e0:	beq	27560 <GetDataSlab+0x6554>
   275e4:	ldr	r2, [r7, #-4]
   275e8:	ldr	r1, [r9]
   275ec:	sub	r3, r4, r3
   275f0:	mla	r3, r1, r2, r3
   275f4:	add	r5, r5, r3, lsl #3
   275f8:	add	fp, fp, r3
   275fc:	b	27580 <GetDataSlab+0x6574>
   27600:	mov	sl, #1
   27604:	add	r3, sp, #152	; 0x98
   27608:	add	r3, r3, sl, lsl #2
   2760c:	ldr	r3, [r3, #-120]	; 0xffffff88
   27610:	add	fp, fp, r3
   27614:	add	r5, r5, r3, lsl #3
   27618:	ldr	r3, [sp, #24]
   2761c:	ldr	r2, [sp, #8]
   27620:	add	r3, r3, r2
   27624:	str	r3, [sp, #24]
   27628:	ldr	r2, [sp, #20]
   2762c:	cmp	r3, r2
   27630:	bge	2771c <GetDataSlab+0x6710>
   27634:	ldr	r3, [sp, #196]	; 0xc4
   27638:	ldr	r3, [r3]
   2763c:	cmp	r3, #0
   27640:	addne	r5, r5, r3, lsl #3
   27644:	addne	fp, fp, r3
   27648:	ldr	r3, [sp, #204]	; 0xcc
   2764c:	ldr	r3, [r3]
   27650:	str	r3, [sp, #8]
   27654:	cmp	r3, #0
   27658:	ble	2769c <GetDataSlab+0x6690>
   2765c:	ldr	r3, [sp, #4]
   27660:	ldr	r2, [sp, #24]
   27664:	add	r2, r3, r2, lsl #2
   27668:	mov	r3, #0
   2766c:	vldr	d7, [r5]
   27670:	vcvt.f32.f64	s15, d7
   27674:	vstmia	r2!, {s15}
   27678:	ldr	r1, [r8]
   2767c:	add	r5, r5, r1, lsl #3
   27680:	add	fp, fp, r1
   27684:	add	r3, r3, #1
   27688:	ldr	r1, [sp, #204]	; 0xcc
   2768c:	ldr	r1, [r1]
   27690:	str	r1, [sp, #8]
   27694:	cmp	r1, r3
   27698:	bgt	2766c <GetDataSlab+0x6660>
   2769c:	ldr	r3, [r8]
   276a0:	ldr	r2, [sp, #8]
   276a4:	mul	r3, r3, r2
   276a8:	ldr	r2, [sp, #192]	; 0xc0
   276ac:	ldr	r2, [r2]
   276b0:	sub	r3, r2, r3
   276b4:	ldr	r2, [sp, #196]	; 0xc4
   276b8:	ldr	r2, [r2]
   276bc:	sub	r3, r3, r2
   276c0:	add	fp, fp, r3
   276c4:	add	r5, r5, r3, lsl #3
   276c8:	ldr	r3, [sp, #208]	; 0xd0
   276cc:	cmp	r3, #1
   276d0:	ble	27618 <GetDataSlab+0x660c>
   276d4:	ldr	r3, [sp, #76]	; 0x4c
   276d8:	add	r3, r3, #1
   276dc:	str	r3, [sp, #76]	; 0x4c
   276e0:	ldr	r2, [sp, #204]	; 0xcc
   276e4:	ldr	r1, [r2, #4]
   276e8:	mov	r0, r3
   276ec:	bl	517e8 <__aeabi_idivmod>
   276f0:	cmp	r1, #0
   276f4:	bne	27600 <GetDataSlab+0x65f4>
   276f8:	add	r6, sp, #76	; 0x4c
   276fc:	ldr	r3, [sp, #204]	; 0xcc
   27700:	add	r3, r3, #4
   27704:	str	r3, [sp, #12]
   27708:	ldr	r3, [sp, #196]	; 0xc4
   2770c:	add	r9, r3, #4
   27710:	add	r7, sp, #112	; 0x70
   27714:	mov	sl, #1
   27718:	b	275bc <GetDataSlab+0x65b0>
   2771c:	mov	r3, #0
   27720:	b	24fa8 <GetDataSlab+0x3f9c>
   27724:	ldr	r3, [r8]
   27728:	str	r3, [sp, #28]
   2772c:	sub	r3, r3, #1
   27730:	str	r3, [sp, #32]
   27734:	ldr	r3, [sp, #192]	; 0xc0
   27738:	ldr	r3, [r3]
   2773c:	str	r3, [sp, #112]	; 0x70
   27740:	ldr	r3, [sp, #204]	; 0xcc
   27744:	ldr	r3, [r3]
   27748:	str	r3, [sp, #20]
   2774c:	ldr	r3, [sp, #208]	; 0xd0
   27750:	cmp	r3, #1
   27754:	ble	27788 <GetDataSlab+0x677c>
   27758:	str	r8, [sp, #16]
   2775c:	add	sl, sp, #36	; 0x24
   27760:	ldr	lr, [sp, #192]	; 0xc0
   27764:	add	r9, sp, #112	; 0x70
   27768:	ldr	r3, [sp, #204]	; 0xcc
   2776c:	add	r5, r3, #4
   27770:	ldr	r3, [sp, #196]	; 0xc4
   27774:	add	r4, r3, #4
   27778:	str	lr, [sp, #12]
   2777c:	mov	r6, #2
   27780:	mov	fp, #0
   27784:	b	3e384 <GetDataSlab+0x1d378>
   27788:	mov	fp, #0
   2778c:	b	3e410 <GetDataSlab+0x1d404>
   27790:	ldr	r3, [sp, #20]
   27794:	cmp	r3, #0
   27798:	ble	3d3d8 <GetDataSlab+0x1c3cc>
   2779c:	mov	r3, #0
   277a0:	str	r3, [sp, #16]
   277a4:	b	27878 <GetDataSlab+0x686c>
   277a8:	ldr	r2, [r8]
   277ac:	cmp	r2, #0
   277b0:	beq	277c8 <GetDataSlab+0x67bc>
   277b4:	ldr	r3, [sp, #12]
   277b8:	ldr	r3, [r3, #-4]
   277bc:	mul	r3, r3, r2
   277c0:	add	r5, r5, r3, lsl #2
   277c4:	add	fp, fp, r3
   277c8:	add	r9, r9, #1
   277cc:	ldr	r3, [sp, #208]	; 0xd0
   277d0:	cmp	r3, r9
   277d4:	beq	27860 <GetDataSlab+0x6854>
   277d8:	ldr	r3, [r6]
   277dc:	add	r3, r3, #1
   277e0:	str	r3, [r6]
   277e4:	add	r8, r8, #4
   277e8:	ldr	r2, [sp, #8]
   277ec:	ldr	r1, [r2, #4]!
   277f0:	str	r2, [sp, #8]
   277f4:	mov	r0, r3
   277f8:	bl	517e8 <__aeabi_idivmod>
   277fc:	cmp	r1, #0
   27800:	bne	2784c <GetDataSlab+0x6840>
   27804:	mov	r3, #0
   27808:	str	r3, [r6], #4
   2780c:	add	r7, r7, #4
   27810:	str	r7, [sp, #12]
   27814:	ldr	r4, [r7]
   27818:	mov	r1, r4
   2781c:	mov	r0, fp
   27820:	bl	517e8 <__aeabi_idivmod>
   27824:	subs	r3, r1, #0
   27828:	beq	277a8 <GetDataSlab+0x679c>
   2782c:	ldr	r2, [r7, #-4]
   27830:	ldr	r1, [r8]
   27834:	sub	r3, r4, r3
   27838:	mla	r3, r1, r2, r3
   2783c:	add	r5, r5, r3, lsl #2
   27840:	add	fp, fp, r3
   27844:	b	277c8 <GetDataSlab+0x67bc>
   27848:	ldr	r9, [sp, #28]
   2784c:	add	r3, sp, #152	; 0x98
   27850:	add	r3, r3, r9, lsl #2
   27854:	ldr	r3, [r3, #-120]	; 0xffffff88
   27858:	add	fp, fp, r3
   2785c:	add	r5, r5, r3, lsl #2
   27860:	ldr	r3, [sp, #16]
   27864:	add	r3, r3, sl
   27868:	str	r3, [sp, #16]
   2786c:	ldr	r2, [sp, #20]
   27870:	cmp	r3, r2
   27874:	bge	2793c <GetDataSlab+0x6930>
   27878:	ldr	r3, [sp, #196]	; 0xc4
   2787c:	ldr	r3, [r3]
   27880:	cmp	r3, #0
   27884:	addne	r5, r5, r3, lsl #2
   27888:	addne	fp, fp, r3
   2788c:	ldr	r3, [sp, #204]	; 0xcc
   27890:	ldr	sl, [r3]
   27894:	cmp	sl, #0
   27898:	ble	278cc <GetDataSlab+0x68c0>
   2789c:	mov	r0, r5
   278a0:	ldr	r3, [sp, #4]
   278a4:	ldr	r2, [sp, #16]
   278a8:	add	r1, r3, r2, lsl #2
   278ac:	mov	r2, #0
   278b0:	ldr	r3, [r0], #4
   278b4:	str	r3, [r1], #4
   278b8:	add	r2, r2, #1
   278bc:	ldr	r3, [sp, #204]	; 0xcc
   278c0:	ldr	sl, [r3]
   278c4:	cmp	sl, r2
   278c8:	bgt	278b0 <GetDataSlab+0x68a4>
   278cc:	ldr	r3, [sp, #192]	; 0xc0
   278d0:	ldr	r2, [r3]
   278d4:	ldr	r3, [sp, #196]	; 0xc4
   278d8:	ldr	r3, [r3]
   278dc:	sub	r3, r2, r3
   278e0:	add	fp, fp, r3
   278e4:	add	r5, r5, r3, lsl #2
   278e8:	ldr	r3, [sp, #208]	; 0xd0
   278ec:	cmp	r3, #1
   278f0:	ble	27860 <GetDataSlab+0x6854>
   278f4:	ldr	r3, [sp, #76]	; 0x4c
   278f8:	add	r3, r3, #1
   278fc:	str	r3, [sp, #76]	; 0x4c
   27900:	ldr	r2, [sp, #204]	; 0xcc
   27904:	ldr	r1, [r2, #4]
   27908:	mov	r0, r3
   2790c:	bl	517e8 <__aeabi_idivmod>
   27910:	cmp	r1, #0
   27914:	bne	27848 <GetDataSlab+0x683c>
   27918:	add	r6, sp, #76	; 0x4c
   2791c:	ldr	r3, [sp, #204]	; 0xcc
   27920:	add	r3, r3, #4
   27924:	str	r3, [sp, #8]
   27928:	ldr	r3, [sp, #196]	; 0xc4
   2792c:	add	r8, r3, #4
   27930:	add	r7, sp, #112	; 0x70
   27934:	ldr	r9, [sp, #28]
   27938:	b	27804 <GetDataSlab+0x67f8>
   2793c:	mov	r3, #0
   27940:	b	24fa8 <GetDataSlab+0x3f9c>
   27944:	ldr	r2, [r9]
   27948:	cmp	r2, #0
   2794c:	beq	27964 <GetDataSlab+0x6958>
   27950:	ldr	r3, [sp, #16]
   27954:	ldr	r3, [r3, #-4]
   27958:	mul	r3, r3, r2
   2795c:	add	r5, r5, r3, lsl #2
   27960:	add	fp, fp, r3
   27964:	add	sl, sl, #1
   27968:	ldr	r3, [sp, #208]	; 0xd0
   2796c:	cmp	r3, sl
   27970:	beq	279fc <GetDataSlab+0x69f0>
   27974:	ldr	r3, [r6]
   27978:	add	r3, r3, #1
   2797c:	str	r3, [r6]
   27980:	add	r9, r9, #4
   27984:	ldr	r2, [sp, #12]
   27988:	ldr	r1, [r2, #4]!
   2798c:	str	r2, [sp, #12]
   27990:	mov	r0, r3
   27994:	bl	517e8 <__aeabi_idivmod>
   27998:	cmp	r1, #0
   2799c:	bne	279e8 <GetDataSlab+0x69dc>
   279a0:	mov	r3, #0
   279a4:	str	r3, [r6], #4
   279a8:	add	r7, r7, #4
   279ac:	str	r7, [sp, #16]
   279b0:	ldr	r4, [r7]
   279b4:	mov	r1, r4
   279b8:	mov	r0, fp
   279bc:	bl	517e8 <__aeabi_idivmod>
   279c0:	subs	r3, r1, #0
   279c4:	beq	27944 <GetDataSlab+0x6938>
   279c8:	ldr	r2, [r7, #-4]
   279cc:	ldr	r1, [r9]
   279d0:	sub	r3, r4, r3
   279d4:	mla	r3, r1, r2, r3
   279d8:	add	r5, r5, r3, lsl #2
   279dc:	add	fp, fp, r3
   279e0:	b	27964 <GetDataSlab+0x6958>
   279e4:	mov	sl, #1
   279e8:	add	r3, sp, #152	; 0x98
   279ec:	add	r3, r3, sl, lsl #2
   279f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   279f4:	add	fp, fp, r3
   279f8:	add	r5, r5, r3, lsl #2
   279fc:	ldr	r3, [sp, #24]
   27a00:	ldr	r2, [sp, #8]
   27a04:	add	r3, r3, r2
   27a08:	str	r3, [sp, #24]
   27a0c:	ldr	r2, [sp, #20]
   27a10:	cmp	r3, r2
   27a14:	bge	27afc <GetDataSlab+0x6af0>
   27a18:	ldr	r3, [sp, #196]	; 0xc4
   27a1c:	ldr	r3, [r3]
   27a20:	cmp	r3, #0
   27a24:	addne	r5, r5, r3, lsl #2
   27a28:	addne	fp, fp, r3
   27a2c:	ldr	r3, [sp, #204]	; 0xcc
   27a30:	ldr	r3, [r3]
   27a34:	str	r3, [sp, #8]
   27a38:	cmp	r3, #0
   27a3c:	ble	27a7c <GetDataSlab+0x6a70>
   27a40:	ldr	r3, [sp, #4]
   27a44:	ldr	r2, [sp, #24]
   27a48:	add	r2, r3, r2, lsl #2
   27a4c:	mov	r3, #0
   27a50:	ldr	r1, [r5]
   27a54:	str	r1, [r2], #4
   27a58:	ldr	r1, [r8]
   27a5c:	add	r5, r5, r1, lsl #2
   27a60:	add	fp, fp, r1
   27a64:	add	r3, r3, #1
   27a68:	ldr	r1, [sp, #204]	; 0xcc
   27a6c:	ldr	r1, [r1]
   27a70:	str	r1, [sp, #8]
   27a74:	cmp	r1, r3
   27a78:	bgt	27a50 <GetDataSlab+0x6a44>
   27a7c:	ldr	r3, [r8]
   27a80:	ldr	r2, [sp, #8]
   27a84:	mul	r3, r3, r2
   27a88:	ldr	r2, [sp, #192]	; 0xc0
   27a8c:	ldr	r2, [r2]
   27a90:	sub	r3, r2, r3
   27a94:	ldr	r2, [sp, #196]	; 0xc4
   27a98:	ldr	r2, [r2]
   27a9c:	sub	r3, r3, r2
   27aa0:	add	fp, fp, r3
   27aa4:	add	r5, r5, r3, lsl #2
   27aa8:	ldr	r3, [sp, #208]	; 0xd0
   27aac:	cmp	r3, #1
   27ab0:	ble	279fc <GetDataSlab+0x69f0>
   27ab4:	ldr	r3, [sp, #76]	; 0x4c
   27ab8:	add	r3, r3, #1
   27abc:	str	r3, [sp, #76]	; 0x4c
   27ac0:	ldr	r2, [sp, #204]	; 0xcc
   27ac4:	ldr	r1, [r2, #4]
   27ac8:	mov	r0, r3
   27acc:	bl	517e8 <__aeabi_idivmod>
   27ad0:	cmp	r1, #0
   27ad4:	bne	279e4 <GetDataSlab+0x69d8>
   27ad8:	add	r6, sp, #76	; 0x4c
   27adc:	ldr	r3, [sp, #204]	; 0xcc
   27ae0:	add	r3, r3, #4
   27ae4:	str	r3, [sp, #12]
   27ae8:	ldr	r3, [sp, #196]	; 0xc4
   27aec:	add	r9, r3, #4
   27af0:	add	r7, sp, #112	; 0x70
   27af4:	mov	sl, #1
   27af8:	b	279a0 <GetDataSlab+0x6994>
   27afc:	mov	r3, #0
   27b00:	b	24fa8 <GetDataSlab+0x3f9c>
   27b04:	ldr	r3, [r8]
   27b08:	str	r3, [sp, #28]
   27b0c:	sub	r3, r3, #1
   27b10:	str	r3, [sp, #32]
   27b14:	ldr	r3, [sp, #192]	; 0xc0
   27b18:	ldr	r3, [r3]
   27b1c:	str	r3, [sp, #112]	; 0x70
   27b20:	ldr	r3, [sp, #204]	; 0xcc
   27b24:	ldr	r3, [r3]
   27b28:	str	r3, [sp, #20]
   27b2c:	ldr	r3, [sp, #208]	; 0xd0
   27b30:	cmp	r3, #1
   27b34:	ble	27b68 <GetDataSlab+0x6b5c>
   27b38:	str	r8, [sp, #16]
   27b3c:	add	sl, sp, #36	; 0x24
   27b40:	ldr	lr, [sp, #192]	; 0xc0
   27b44:	add	r9, sp, #112	; 0x70
   27b48:	ldr	r3, [sp, #204]	; 0xcc
   27b4c:	add	r5, r3, #4
   27b50:	ldr	r3, [sp, #196]	; 0xc4
   27b54:	add	r4, r3, #4
   27b58:	str	lr, [sp, #12]
   27b5c:	mov	r6, #2
   27b60:	mov	fp, #0
   27b64:	b	3e470 <GetDataSlab+0x1d464>
   27b68:	mov	fp, #0
   27b6c:	b	3e4fc <GetDataSlab+0x1d4f0>
   27b70:	ldr	r3, [sp, #20]
   27b74:	cmp	r3, #0
   27b78:	ble	3d3e0 <GetDataSlab+0x1c3d4>
   27b7c:	mov	r3, #0
   27b80:	str	r3, [sp, #16]
   27b84:	b	27c58 <GetDataSlab+0x6c4c>
   27b88:	ldr	r2, [r8]
   27b8c:	cmp	r2, #0
   27b90:	beq	27ba8 <GetDataSlab+0x6b9c>
   27b94:	ldr	r3, [sp, #12]
   27b98:	ldr	r3, [r3, #-4]
   27b9c:	mul	r3, r3, r2
   27ba0:	add	r5, r5, r3, lsl #2
   27ba4:	add	fp, fp, r3
   27ba8:	add	r9, r9, #1
   27bac:	ldr	r3, [sp, #208]	; 0xd0
   27bb0:	cmp	r3, r9
   27bb4:	beq	27c40 <GetDataSlab+0x6c34>
   27bb8:	ldr	r3, [r6]
   27bbc:	add	r3, r3, #1
   27bc0:	str	r3, [r6]
   27bc4:	add	r8, r8, #4
   27bc8:	ldr	r2, [sp, #8]
   27bcc:	ldr	r1, [r2, #4]!
   27bd0:	str	r2, [sp, #8]
   27bd4:	mov	r0, r3
   27bd8:	bl	517e8 <__aeabi_idivmod>
   27bdc:	cmp	r1, #0
   27be0:	bne	27c2c <GetDataSlab+0x6c20>
   27be4:	mov	r3, #0
   27be8:	str	r3, [r6], #4
   27bec:	add	r7, r7, #4
   27bf0:	str	r7, [sp, #12]
   27bf4:	ldr	r4, [r7]
   27bf8:	mov	r1, r4
   27bfc:	mov	r0, fp
   27c00:	bl	517e8 <__aeabi_idivmod>
   27c04:	subs	r3, r1, #0
   27c08:	beq	27b88 <GetDataSlab+0x6b7c>
   27c0c:	ldr	r2, [r7, #-4]
   27c10:	ldr	r1, [r8]
   27c14:	sub	r3, r4, r3
   27c18:	mla	r3, r1, r2, r3
   27c1c:	add	r5, r5, r3, lsl #2
   27c20:	add	fp, fp, r3
   27c24:	b	27ba8 <GetDataSlab+0x6b9c>
   27c28:	ldr	r9, [sp, #28]
   27c2c:	add	r3, sp, #152	; 0x98
   27c30:	add	r3, r3, r9, lsl #2
   27c34:	ldr	r3, [r3, #-120]	; 0xffffff88
   27c38:	add	fp, fp, r3
   27c3c:	add	r5, r5, r3, lsl #2
   27c40:	ldr	r3, [sp, #16]
   27c44:	add	r3, r3, sl
   27c48:	str	r3, [sp, #16]
   27c4c:	ldr	r2, [sp, #20]
   27c50:	cmp	r3, r2
   27c54:	bge	27d24 <GetDataSlab+0x6d18>
   27c58:	ldr	r3, [sp, #196]	; 0xc4
   27c5c:	ldr	r3, [r3]
   27c60:	cmp	r3, #0
   27c64:	addne	r5, r5, r3, lsl #2
   27c68:	addne	fp, fp, r3
   27c6c:	ldr	r3, [sp, #204]	; 0xcc
   27c70:	ldr	sl, [r3]
   27c74:	cmp	sl, #0
   27c78:	ble	27cb4 <GetDataSlab+0x6ca8>
   27c7c:	sub	r1, r5, #4
   27c80:	ldr	r3, [sp, #4]
   27c84:	ldr	r2, [sp, #16]
   27c88:	add	r2, r3, r2, lsl #2
   27c8c:	mov	r3, #0
   27c90:	ldr	r0, [r1, #4]!
   27c94:	vmov	s15, r0
   27c98:	vcvt.f32.s32	s15, s15
   27c9c:	vstmia	r2!, {s15}
   27ca0:	add	r3, r3, #1
   27ca4:	ldr	r0, [sp, #204]	; 0xcc
   27ca8:	ldr	sl, [r0]
   27cac:	cmp	sl, r3
   27cb0:	bgt	27c90 <GetDataSlab+0x6c84>
   27cb4:	ldr	r3, [sp, #192]	; 0xc0
   27cb8:	ldr	r2, [r3]
   27cbc:	ldr	r3, [sp, #196]	; 0xc4
   27cc0:	ldr	r3, [r3]
   27cc4:	sub	r3, r2, r3
   27cc8:	add	fp, fp, r3
   27ccc:	add	r5, r5, r3, lsl #2
   27cd0:	ldr	r3, [sp, #208]	; 0xd0
   27cd4:	cmp	r3, #1
   27cd8:	ble	27c40 <GetDataSlab+0x6c34>
   27cdc:	ldr	r3, [sp, #76]	; 0x4c
   27ce0:	add	r3, r3, #1
   27ce4:	str	r3, [sp, #76]	; 0x4c
   27ce8:	ldr	r2, [sp, #204]	; 0xcc
   27cec:	ldr	r1, [r2, #4]
   27cf0:	mov	r0, r3
   27cf4:	bl	517e8 <__aeabi_idivmod>
   27cf8:	cmp	r1, #0
   27cfc:	bne	27c28 <GetDataSlab+0x6c1c>
   27d00:	add	r6, sp, #76	; 0x4c
   27d04:	ldr	r3, [sp, #204]	; 0xcc
   27d08:	add	r3, r3, #4
   27d0c:	str	r3, [sp, #8]
   27d10:	ldr	r3, [sp, #196]	; 0xc4
   27d14:	add	r8, r3, #4
   27d18:	add	r7, sp, #112	; 0x70
   27d1c:	ldr	r9, [sp, #28]
   27d20:	b	27be4 <GetDataSlab+0x6bd8>
   27d24:	mov	r3, #0
   27d28:	b	24fa8 <GetDataSlab+0x3f9c>
   27d2c:	ldr	r2, [r9]
   27d30:	cmp	r2, #0
   27d34:	beq	27d4c <GetDataSlab+0x6d40>
   27d38:	ldr	r3, [sp, #16]
   27d3c:	ldr	r3, [r3, #-4]
   27d40:	mul	r3, r3, r2
   27d44:	add	r5, r5, r3, lsl #2
   27d48:	add	fp, fp, r3
   27d4c:	add	sl, sl, #1
   27d50:	ldr	r3, [sp, #208]	; 0xd0
   27d54:	cmp	r3, sl
   27d58:	beq	27de4 <GetDataSlab+0x6dd8>
   27d5c:	ldr	r3, [r6]
   27d60:	add	r3, r3, #1
   27d64:	str	r3, [r6]
   27d68:	add	r9, r9, #4
   27d6c:	ldr	r2, [sp, #12]
   27d70:	ldr	r1, [r2, #4]!
   27d74:	str	r2, [sp, #12]
   27d78:	mov	r0, r3
   27d7c:	bl	517e8 <__aeabi_idivmod>
   27d80:	cmp	r1, #0
   27d84:	bne	27dd0 <GetDataSlab+0x6dc4>
   27d88:	mov	r3, #0
   27d8c:	str	r3, [r6], #4
   27d90:	add	r7, r7, #4
   27d94:	str	r7, [sp, #16]
   27d98:	ldr	r4, [r7]
   27d9c:	mov	r1, r4
   27da0:	mov	r0, fp
   27da4:	bl	517e8 <__aeabi_idivmod>
   27da8:	subs	r3, r1, #0
   27dac:	beq	27d2c <GetDataSlab+0x6d20>
   27db0:	ldr	r2, [r7, #-4]
   27db4:	ldr	r1, [r9]
   27db8:	sub	r3, r4, r3
   27dbc:	mla	r3, r1, r2, r3
   27dc0:	add	r5, r5, r3, lsl #2
   27dc4:	add	fp, fp, r3
   27dc8:	b	27d4c <GetDataSlab+0x6d40>
   27dcc:	mov	sl, #1
   27dd0:	add	r3, sp, #152	; 0x98
   27dd4:	add	r3, r3, sl, lsl #2
   27dd8:	ldr	r3, [r3, #-120]	; 0xffffff88
   27ddc:	add	fp, fp, r3
   27de0:	add	r5, r5, r3, lsl #2
   27de4:	ldr	r3, [sp, #24]
   27de8:	ldr	r2, [sp, #8]
   27dec:	add	r3, r3, r2
   27df0:	str	r3, [sp, #24]
   27df4:	ldr	r2, [sp, #20]
   27df8:	cmp	r3, r2
   27dfc:	bge	27ee8 <GetDataSlab+0x6edc>
   27e00:	ldr	r3, [sp, #196]	; 0xc4
   27e04:	ldr	r3, [r3]
   27e08:	cmp	r3, #0
   27e0c:	addne	r5, r5, r3, lsl #2
   27e10:	addne	fp, fp, r3
   27e14:	ldr	r3, [sp, #204]	; 0xcc
   27e18:	ldr	r3, [r3]
   27e1c:	str	r3, [sp, #8]
   27e20:	cmp	r3, #0
   27e24:	ble	27e68 <GetDataSlab+0x6e5c>
   27e28:	ldr	r3, [sp, #4]
   27e2c:	ldr	r2, [sp, #24]
   27e30:	add	r2, r3, r2, lsl #2
   27e34:	mov	r3, #0
   27e38:	vldr	s15, [r5]
   27e3c:	vcvt.f32.s32	s15, s15
   27e40:	vstmia	r2!, {s15}
   27e44:	ldr	r1, [r8]
   27e48:	add	r5, r5, r1, lsl #2
   27e4c:	add	fp, fp, r1
   27e50:	add	r3, r3, #1
   27e54:	ldr	r1, [sp, #204]	; 0xcc
   27e58:	ldr	r1, [r1]
   27e5c:	str	r1, [sp, #8]
   27e60:	cmp	r1, r3
   27e64:	bgt	27e38 <GetDataSlab+0x6e2c>
   27e68:	ldr	r3, [r8]
   27e6c:	ldr	r2, [sp, #8]
   27e70:	mul	r3, r3, r2
   27e74:	ldr	r2, [sp, #192]	; 0xc0
   27e78:	ldr	r2, [r2]
   27e7c:	sub	r3, r2, r3
   27e80:	ldr	r2, [sp, #196]	; 0xc4
   27e84:	ldr	r2, [r2]
   27e88:	sub	r3, r3, r2
   27e8c:	add	fp, fp, r3
   27e90:	add	r5, r5, r3, lsl #2
   27e94:	ldr	r3, [sp, #208]	; 0xd0
   27e98:	cmp	r3, #1
   27e9c:	ble	27de4 <GetDataSlab+0x6dd8>
   27ea0:	ldr	r3, [sp, #76]	; 0x4c
   27ea4:	add	r3, r3, #1
   27ea8:	str	r3, [sp, #76]	; 0x4c
   27eac:	ldr	r2, [sp, #204]	; 0xcc
   27eb0:	ldr	r1, [r2, #4]
   27eb4:	mov	r0, r3
   27eb8:	bl	517e8 <__aeabi_idivmod>
   27ebc:	cmp	r1, #0
   27ec0:	bne	27dcc <GetDataSlab+0x6dc0>
   27ec4:	add	r6, sp, #76	; 0x4c
   27ec8:	ldr	r3, [sp, #204]	; 0xcc
   27ecc:	add	r3, r3, #4
   27ed0:	str	r3, [sp, #12]
   27ed4:	ldr	r3, [sp, #196]	; 0xc4
   27ed8:	add	r9, r3, #4
   27edc:	add	r7, sp, #112	; 0x70
   27ee0:	mov	sl, #1
   27ee4:	b	27d88 <GetDataSlab+0x6d7c>
   27ee8:	mov	r3, #0
   27eec:	b	24fa8 <GetDataSlab+0x3f9c>
   27ef0:	ldr	r3, [r8]
   27ef4:	str	r3, [sp, #28]
   27ef8:	sub	r3, r3, #1
   27efc:	str	r3, [sp, #32]
   27f00:	ldr	r3, [sp, #192]	; 0xc0
   27f04:	ldr	r3, [r3]
   27f08:	str	r3, [sp, #112]	; 0x70
   27f0c:	ldr	r3, [sp, #204]	; 0xcc
   27f10:	ldr	r3, [r3]
   27f14:	str	r3, [sp, #20]
   27f18:	ldr	r3, [sp, #208]	; 0xd0
   27f1c:	cmp	r3, #1
   27f20:	ble	27f54 <GetDataSlab+0x6f48>
   27f24:	str	r8, [sp, #16]
   27f28:	add	sl, sp, #36	; 0x24
   27f2c:	ldr	lr, [sp, #192]	; 0xc0
   27f30:	add	r9, sp, #112	; 0x70
   27f34:	ldr	r3, [sp, #204]	; 0xcc
   27f38:	add	r5, r3, #4
   27f3c:	ldr	r3, [sp, #196]	; 0xc4
   27f40:	add	r4, r3, #4
   27f44:	str	lr, [sp, #12]
   27f48:	mov	r6, #2
   27f4c:	mov	fp, #0
   27f50:	b	3e55c <GetDataSlab+0x1d550>
   27f54:	mov	fp, #0
   27f58:	b	3e5e8 <GetDataSlab+0x1d5dc>
   27f5c:	ldr	r3, [sp, #20]
   27f60:	cmp	r3, #0
   27f64:	ble	3d3e8 <GetDataSlab+0x1c3dc>
   27f68:	mov	r3, #0
   27f6c:	str	r3, [sp, #16]
   27f70:	b	28044 <GetDataSlab+0x7038>
   27f74:	ldr	r2, [r8]
   27f78:	cmp	r2, #0
   27f7c:	beq	27f94 <GetDataSlab+0x6f88>
   27f80:	ldr	r3, [sp, #12]
   27f84:	ldr	r3, [r3, #-4]
   27f88:	mul	r3, r3, r2
   27f8c:	add	r5, r5, r3, lsl #2
   27f90:	add	fp, fp, r3
   27f94:	add	r9, r9, #1
   27f98:	ldr	r3, [sp, #208]	; 0xd0
   27f9c:	cmp	r3, r9
   27fa0:	beq	2802c <GetDataSlab+0x7020>
   27fa4:	ldr	r3, [r6]
   27fa8:	add	r3, r3, #1
   27fac:	str	r3, [r6]
   27fb0:	add	r8, r8, #4
   27fb4:	ldr	r2, [sp, #8]
   27fb8:	ldr	r1, [r2, #4]!
   27fbc:	str	r2, [sp, #8]
   27fc0:	mov	r0, r3
   27fc4:	bl	517e8 <__aeabi_idivmod>
   27fc8:	cmp	r1, #0
   27fcc:	bne	28018 <GetDataSlab+0x700c>
   27fd0:	mov	r3, #0
   27fd4:	str	r3, [r6], #4
   27fd8:	add	r7, r7, #4
   27fdc:	str	r7, [sp, #12]
   27fe0:	ldr	r4, [r7]
   27fe4:	mov	r1, r4
   27fe8:	mov	r0, fp
   27fec:	bl	517e8 <__aeabi_idivmod>
   27ff0:	subs	r3, r1, #0
   27ff4:	beq	27f74 <GetDataSlab+0x6f68>
   27ff8:	ldr	r2, [r7, #-4]
   27ffc:	ldr	r1, [r8]
   28000:	sub	r3, r4, r3
   28004:	mla	r3, r1, r2, r3
   28008:	add	r5, r5, r3, lsl #2
   2800c:	add	fp, fp, r3
   28010:	b	27f94 <GetDataSlab+0x6f88>
   28014:	ldr	r9, [sp, #28]
   28018:	add	r3, sp, #152	; 0x98
   2801c:	add	r3, r3, r9, lsl #2
   28020:	ldr	r3, [r3, #-120]	; 0xffffff88
   28024:	add	fp, fp, r3
   28028:	add	r5, r5, r3, lsl #2
   2802c:	ldr	r3, [sp, #16]
   28030:	add	r3, r3, sl
   28034:	str	r3, [sp, #16]
   28038:	ldr	r2, [sp, #20]
   2803c:	cmp	r3, r2
   28040:	bge	28110 <GetDataSlab+0x7104>
   28044:	ldr	r3, [sp, #196]	; 0xc4
   28048:	ldr	r3, [r3]
   2804c:	cmp	r3, #0
   28050:	addne	r5, r5, r3, lsl #2
   28054:	addne	fp, fp, r3
   28058:	ldr	r3, [sp, #204]	; 0xcc
   2805c:	ldr	sl, [r3]
   28060:	cmp	sl, #0
   28064:	ble	280a0 <GetDataSlab+0x7094>
   28068:	sub	r1, r5, #4
   2806c:	ldr	r3, [sp, #4]
   28070:	ldr	r2, [sp, #16]
   28074:	add	r2, r3, r2, lsl #2
   28078:	mov	r3, #0
   2807c:	ldr	r0, [r1, #4]!
   28080:	vmov	s15, r0
   28084:	vcvt.f32.u32	s15, s15
   28088:	vstmia	r2!, {s15}
   2808c:	add	r3, r3, #1
   28090:	ldr	r0, [sp, #204]	; 0xcc
   28094:	ldr	sl, [r0]
   28098:	cmp	sl, r3
   2809c:	bgt	2807c <GetDataSlab+0x7070>
   280a0:	ldr	r3, [sp, #192]	; 0xc0
   280a4:	ldr	r2, [r3]
   280a8:	ldr	r3, [sp, #196]	; 0xc4
   280ac:	ldr	r3, [r3]
   280b0:	sub	r3, r2, r3
   280b4:	add	fp, fp, r3
   280b8:	add	r5, r5, r3, lsl #2
   280bc:	ldr	r3, [sp, #208]	; 0xd0
   280c0:	cmp	r3, #1
   280c4:	ble	2802c <GetDataSlab+0x7020>
   280c8:	ldr	r3, [sp, #76]	; 0x4c
   280cc:	add	r3, r3, #1
   280d0:	str	r3, [sp, #76]	; 0x4c
   280d4:	ldr	r2, [sp, #204]	; 0xcc
   280d8:	ldr	r1, [r2, #4]
   280dc:	mov	r0, r3
   280e0:	bl	517e8 <__aeabi_idivmod>
   280e4:	cmp	r1, #0
   280e8:	bne	28014 <GetDataSlab+0x7008>
   280ec:	add	r6, sp, #76	; 0x4c
   280f0:	ldr	r3, [sp, #204]	; 0xcc
   280f4:	add	r3, r3, #4
   280f8:	str	r3, [sp, #8]
   280fc:	ldr	r3, [sp, #196]	; 0xc4
   28100:	add	r8, r3, #4
   28104:	add	r7, sp, #112	; 0x70
   28108:	ldr	r9, [sp, #28]
   2810c:	b	27fd0 <GetDataSlab+0x6fc4>
   28110:	mov	r3, #0
   28114:	b	24fa8 <GetDataSlab+0x3f9c>
   28118:	ldr	r2, [r9]
   2811c:	cmp	r2, #0
   28120:	beq	28138 <GetDataSlab+0x712c>
   28124:	ldr	r3, [sp, #16]
   28128:	ldr	r3, [r3, #-4]
   2812c:	mul	r3, r3, r2
   28130:	add	r5, r5, r3, lsl #2
   28134:	add	fp, fp, r3
   28138:	add	sl, sl, #1
   2813c:	ldr	r3, [sp, #208]	; 0xd0
   28140:	cmp	r3, sl
   28144:	beq	281d0 <GetDataSlab+0x71c4>
   28148:	ldr	r3, [r6]
   2814c:	add	r3, r3, #1
   28150:	str	r3, [r6]
   28154:	add	r9, r9, #4
   28158:	ldr	r2, [sp, #12]
   2815c:	ldr	r1, [r2, #4]!
   28160:	str	r2, [sp, #12]
   28164:	mov	r0, r3
   28168:	bl	517e8 <__aeabi_idivmod>
   2816c:	cmp	r1, #0
   28170:	bne	281bc <GetDataSlab+0x71b0>
   28174:	mov	r3, #0
   28178:	str	r3, [r6], #4
   2817c:	add	r7, r7, #4
   28180:	str	r7, [sp, #16]
   28184:	ldr	r4, [r7]
   28188:	mov	r1, r4
   2818c:	mov	r0, fp
   28190:	bl	517e8 <__aeabi_idivmod>
   28194:	subs	r3, r1, #0
   28198:	beq	28118 <GetDataSlab+0x710c>
   2819c:	ldr	r2, [r7, #-4]
   281a0:	ldr	r1, [r9]
   281a4:	sub	r3, r4, r3
   281a8:	mla	r3, r1, r2, r3
   281ac:	add	r5, r5, r3, lsl #2
   281b0:	add	fp, fp, r3
   281b4:	b	28138 <GetDataSlab+0x712c>
   281b8:	mov	sl, #1
   281bc:	add	r3, sp, #152	; 0x98
   281c0:	add	r3, r3, sl, lsl #2
   281c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   281c8:	add	fp, fp, r3
   281cc:	add	r5, r5, r3, lsl #2
   281d0:	ldr	r3, [sp, #24]
   281d4:	ldr	r2, [sp, #8]
   281d8:	add	r3, r3, r2
   281dc:	str	r3, [sp, #24]
   281e0:	ldr	r2, [sp, #20]
   281e4:	cmp	r3, r2
   281e8:	bge	282d4 <GetDataSlab+0x72c8>
   281ec:	ldr	r3, [sp, #196]	; 0xc4
   281f0:	ldr	r3, [r3]
   281f4:	cmp	r3, #0
   281f8:	addne	r5, r5, r3, lsl #2
   281fc:	addne	fp, fp, r3
   28200:	ldr	r3, [sp, #204]	; 0xcc
   28204:	ldr	r3, [r3]
   28208:	str	r3, [sp, #8]
   2820c:	cmp	r3, #0
   28210:	ble	28254 <GetDataSlab+0x7248>
   28214:	ldr	r3, [sp, #4]
   28218:	ldr	r2, [sp, #24]
   2821c:	add	r2, r3, r2, lsl #2
   28220:	mov	r3, #0
   28224:	vldr	s15, [r5]
   28228:	vcvt.f32.u32	s15, s15
   2822c:	vstmia	r2!, {s15}
   28230:	ldr	r1, [r8]
   28234:	add	r5, r5, r1, lsl #2
   28238:	add	fp, fp, r1
   2823c:	add	r3, r3, #1
   28240:	ldr	r1, [sp, #204]	; 0xcc
   28244:	ldr	r1, [r1]
   28248:	str	r1, [sp, #8]
   2824c:	cmp	r1, r3
   28250:	bgt	28224 <GetDataSlab+0x7218>
   28254:	ldr	r3, [r8]
   28258:	ldr	r2, [sp, #8]
   2825c:	mul	r3, r3, r2
   28260:	ldr	r2, [sp, #192]	; 0xc0
   28264:	ldr	r2, [r2]
   28268:	sub	r3, r2, r3
   2826c:	ldr	r2, [sp, #196]	; 0xc4
   28270:	ldr	r2, [r2]
   28274:	sub	r3, r3, r2
   28278:	add	fp, fp, r3
   2827c:	add	r5, r5, r3, lsl #2
   28280:	ldr	r3, [sp, #208]	; 0xd0
   28284:	cmp	r3, #1
   28288:	ble	281d0 <GetDataSlab+0x71c4>
   2828c:	ldr	r3, [sp, #76]	; 0x4c
   28290:	add	r3, r3, #1
   28294:	str	r3, [sp, #76]	; 0x4c
   28298:	ldr	r2, [sp, #204]	; 0xcc
   2829c:	ldr	r1, [r2, #4]
   282a0:	mov	r0, r3
   282a4:	bl	517e8 <__aeabi_idivmod>
   282a8:	cmp	r1, #0
   282ac:	bne	281b8 <GetDataSlab+0x71ac>
   282b0:	add	r6, sp, #76	; 0x4c
   282b4:	ldr	r3, [sp, #204]	; 0xcc
   282b8:	add	r3, r3, #4
   282bc:	str	r3, [sp, #12]
   282c0:	ldr	r3, [sp, #196]	; 0xc4
   282c4:	add	r9, r3, #4
   282c8:	add	r7, sp, #112	; 0x70
   282cc:	mov	sl, #1
   282d0:	b	28174 <GetDataSlab+0x7168>
   282d4:	mov	r3, #0
   282d8:	b	24fa8 <GetDataSlab+0x3f9c>
   282dc:	ldr	r3, [r8]
   282e0:	str	r3, [sp, #28]
   282e4:	sub	r3, r3, #1
   282e8:	str	r3, [sp, #32]
   282ec:	ldr	r3, [sp, #192]	; 0xc0
   282f0:	ldr	r3, [r3]
   282f4:	str	r3, [sp, #112]	; 0x70
   282f8:	ldr	r3, [sp, #204]	; 0xcc
   282fc:	ldr	r3, [r3]
   28300:	str	r3, [sp, #20]
   28304:	ldr	r3, [sp, #208]	; 0xd0
   28308:	cmp	r3, #1
   2830c:	ble	28340 <GetDataSlab+0x7334>
   28310:	str	r8, [sp, #16]
   28314:	add	sl, sp, #36	; 0x24
   28318:	ldr	lr, [sp, #192]	; 0xc0
   2831c:	add	r9, sp, #112	; 0x70
   28320:	ldr	r3, [sp, #204]	; 0xcc
   28324:	add	r5, r3, #4
   28328:	ldr	r3, [sp, #196]	; 0xc4
   2832c:	add	r4, r3, #4
   28330:	str	lr, [sp, #12]
   28334:	mov	r6, #2
   28338:	mov	fp, #0
   2833c:	b	3e648 <GetDataSlab+0x1d63c>
   28340:	mov	fp, #0
   28344:	b	3e6d4 <GetDataSlab+0x1d6c8>
   28348:	ldr	r3, [sp, #20]
   2834c:	cmp	r3, #0
   28350:	ble	3d3f0 <GetDataSlab+0x1c3e4>
   28354:	mov	r3, #0
   28358:	str	r3, [sp, #16]
   2835c:	b	28430 <GetDataSlab+0x7424>
   28360:	ldr	r2, [r8]
   28364:	cmp	r2, #0
   28368:	beq	28380 <GetDataSlab+0x7374>
   2836c:	ldr	r3, [sp, #12]
   28370:	ldr	r3, [r3, #-4]
   28374:	mul	r3, r3, r2
   28378:	add	r6, r6, r3, lsl #1
   2837c:	add	fp, fp, r3
   28380:	add	r9, r9, #1
   28384:	ldr	r3, [sp, #208]	; 0xd0
   28388:	cmp	r3, r9
   2838c:	beq	28418 <GetDataSlab+0x740c>
   28390:	ldr	r3, [r5]
   28394:	add	r3, r3, #1
   28398:	str	r3, [r5]
   2839c:	add	r8, r8, #4
   283a0:	ldr	r2, [sp, #8]
   283a4:	ldr	r1, [r2, #4]!
   283a8:	str	r2, [sp, #8]
   283ac:	mov	r0, r3
   283b0:	bl	517e8 <__aeabi_idivmod>
   283b4:	cmp	r1, #0
   283b8:	bne	28404 <GetDataSlab+0x73f8>
   283bc:	mov	r3, #0
   283c0:	str	r3, [r5], #4
   283c4:	add	r7, r7, #4
   283c8:	str	r7, [sp, #12]
   283cc:	ldr	r4, [r7]
   283d0:	mov	r1, r4
   283d4:	mov	r0, fp
   283d8:	bl	517e8 <__aeabi_idivmod>
   283dc:	subs	r3, r1, #0
   283e0:	beq	28360 <GetDataSlab+0x7354>
   283e4:	ldr	r2, [r7, #-4]
   283e8:	ldr	r1, [r8]
   283ec:	sub	r3, r4, r3
   283f0:	mla	r3, r1, r2, r3
   283f4:	add	r6, r6, r3, lsl #1
   283f8:	add	fp, fp, r3
   283fc:	b	28380 <GetDataSlab+0x7374>
   28400:	ldr	r9, [sp, #28]
   28404:	add	r3, sp, #152	; 0x98
   28408:	add	r3, r3, r9, lsl #2
   2840c:	ldr	r3, [r3, #-120]	; 0xffffff88
   28410:	add	fp, fp, r3
   28414:	add	r6, r6, r3, lsl #1
   28418:	ldr	r3, [sp, #16]
   2841c:	add	r3, r3, sl
   28420:	str	r3, [sp, #16]
   28424:	ldr	r2, [sp, #20]
   28428:	cmp	r3, r2
   2842c:	bge	284fc <GetDataSlab+0x74f0>
   28430:	ldr	r3, [sp, #196]	; 0xc4
   28434:	ldr	r3, [r3]
   28438:	cmp	r3, #0
   2843c:	addne	r6, r6, r3, lsl #1
   28440:	addne	fp, fp, r3
   28444:	ldr	r3, [sp, #204]	; 0xcc
   28448:	ldr	sl, [r3]
   2844c:	cmp	sl, #0
   28450:	ble	2848c <GetDataSlab+0x7480>
   28454:	sub	r1, r6, #2
   28458:	ldr	r3, [sp, #4]
   2845c:	ldr	r2, [sp, #16]
   28460:	add	r2, r3, r2, lsl #2
   28464:	mov	r3, #0
   28468:	ldrsh	r0, [r1, #2]!
   2846c:	vmov	s15, r0
   28470:	vcvt.f32.s32	s15, s15
   28474:	vstmia	r2!, {s15}
   28478:	add	r3, r3, #1
   2847c:	ldr	r0, [sp, #204]	; 0xcc
   28480:	ldr	sl, [r0]
   28484:	cmp	sl, r3
   28488:	bgt	28468 <GetDataSlab+0x745c>
   2848c:	ldr	r3, [sp, #192]	; 0xc0
   28490:	ldr	r2, [r3]
   28494:	ldr	r3, [sp, #196]	; 0xc4
   28498:	ldr	r3, [r3]
   2849c:	sub	r3, r2, r3
   284a0:	add	fp, fp, r3
   284a4:	add	r6, r6, r3, lsl #1
   284a8:	ldr	r3, [sp, #208]	; 0xd0
   284ac:	cmp	r3, #1
   284b0:	ble	28418 <GetDataSlab+0x740c>
   284b4:	ldr	r3, [sp, #76]	; 0x4c
   284b8:	add	r3, r3, #1
   284bc:	str	r3, [sp, #76]	; 0x4c
   284c0:	ldr	r2, [sp, #204]	; 0xcc
   284c4:	ldr	r1, [r2, #4]
   284c8:	mov	r0, r3
   284cc:	bl	517e8 <__aeabi_idivmod>
   284d0:	cmp	r1, #0
   284d4:	bne	28400 <GetDataSlab+0x73f4>
   284d8:	add	r5, sp, #76	; 0x4c
   284dc:	ldr	r3, [sp, #204]	; 0xcc
   284e0:	add	r3, r3, #4
   284e4:	str	r3, [sp, #8]
   284e8:	ldr	r3, [sp, #196]	; 0xc4
   284ec:	add	r8, r3, #4
   284f0:	add	r7, sp, #112	; 0x70
   284f4:	ldr	r9, [sp, #28]
   284f8:	b	283bc <GetDataSlab+0x73b0>
   284fc:	mov	r3, #0
   28500:	b	24fa8 <GetDataSlab+0x3f9c>
   28504:	ldr	r2, [r9]
   28508:	cmp	r2, #0
   2850c:	beq	28524 <GetDataSlab+0x7518>
   28510:	ldr	r3, [sp, #16]
   28514:	ldr	r3, [r3, #-4]
   28518:	mul	r3, r3, r2
   2851c:	add	r6, r6, r3, lsl #1
   28520:	add	fp, fp, r3
   28524:	add	sl, sl, #1
   28528:	ldr	r3, [sp, #208]	; 0xd0
   2852c:	cmp	r3, sl
   28530:	beq	285bc <GetDataSlab+0x75b0>
   28534:	ldr	r3, [r5]
   28538:	add	r3, r3, #1
   2853c:	str	r3, [r5]
   28540:	add	r9, r9, #4
   28544:	ldr	r2, [sp, #12]
   28548:	ldr	r1, [r2, #4]!
   2854c:	str	r2, [sp, #12]
   28550:	mov	r0, r3
   28554:	bl	517e8 <__aeabi_idivmod>
   28558:	cmp	r1, #0
   2855c:	bne	285a8 <GetDataSlab+0x759c>
   28560:	mov	r3, #0
   28564:	str	r3, [r5], #4
   28568:	add	r7, r7, #4
   2856c:	str	r7, [sp, #16]
   28570:	ldr	r4, [r7]
   28574:	mov	r1, r4
   28578:	mov	r0, fp
   2857c:	bl	517e8 <__aeabi_idivmod>
   28580:	subs	r3, r1, #0
   28584:	beq	28504 <GetDataSlab+0x74f8>
   28588:	ldr	r2, [r7, #-4]
   2858c:	ldr	r1, [r9]
   28590:	sub	r3, r4, r3
   28594:	mla	r3, r1, r2, r3
   28598:	add	r6, r6, r3, lsl #1
   2859c:	add	fp, fp, r3
   285a0:	b	28524 <GetDataSlab+0x7518>
   285a4:	mov	sl, #1
   285a8:	add	r3, sp, #152	; 0x98
   285ac:	add	r3, r3, sl, lsl #2
   285b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   285b4:	add	fp, fp, r3
   285b8:	add	r6, r6, r3, lsl #1
   285bc:	ldr	r3, [sp, #24]
   285c0:	ldr	r2, [sp, #8]
   285c4:	add	r3, r3, r2
   285c8:	str	r3, [sp, #24]
   285cc:	ldr	r2, [sp, #20]
   285d0:	cmp	r3, r2
   285d4:	bge	286c4 <GetDataSlab+0x76b8>
   285d8:	ldr	r3, [sp, #196]	; 0xc4
   285dc:	ldr	r3, [r3]
   285e0:	cmp	r3, #0
   285e4:	addne	r6, r6, r3, lsl #1
   285e8:	addne	fp, fp, r3
   285ec:	ldr	r3, [sp, #204]	; 0xcc
   285f0:	ldr	r3, [r3]
   285f4:	str	r3, [sp, #8]
   285f8:	cmp	r3, #0
   285fc:	ble	28644 <GetDataSlab+0x7638>
   28600:	ldr	r3, [sp, #4]
   28604:	ldr	r2, [sp, #24]
   28608:	add	r2, r3, r2, lsl #2
   2860c:	mov	r3, #0
   28610:	ldrsh	r1, [r6]
   28614:	vmov	s15, r1
   28618:	vcvt.f32.s32	s15, s15
   2861c:	vstmia	r2!, {s15}
   28620:	ldr	r1, [r8]
   28624:	add	r6, r6, r1, lsl #1
   28628:	add	fp, fp, r1
   2862c:	add	r3, r3, #1
   28630:	ldr	r1, [sp, #204]	; 0xcc
   28634:	ldr	r1, [r1]
   28638:	str	r1, [sp, #8]
   2863c:	cmp	r1, r3
   28640:	bgt	28610 <GetDataSlab+0x7604>
   28644:	ldr	r3, [r8]
   28648:	ldr	r2, [sp, #8]
   2864c:	mul	r3, r3, r2
   28650:	ldr	r2, [sp, #192]	; 0xc0
   28654:	ldr	r2, [r2]
   28658:	sub	r3, r2, r3
   2865c:	ldr	r2, [sp, #196]	; 0xc4
   28660:	ldr	r2, [r2]
   28664:	sub	r3, r3, r2
   28668:	add	fp, fp, r3
   2866c:	add	r6, r6, r3, lsl #1
   28670:	ldr	r3, [sp, #208]	; 0xd0
   28674:	cmp	r3, #1
   28678:	ble	285bc <GetDataSlab+0x75b0>
   2867c:	ldr	r3, [sp, #76]	; 0x4c
   28680:	add	r3, r3, #1
   28684:	str	r3, [sp, #76]	; 0x4c
   28688:	ldr	r2, [sp, #204]	; 0xcc
   2868c:	ldr	r1, [r2, #4]
   28690:	mov	r0, r3
   28694:	bl	517e8 <__aeabi_idivmod>
   28698:	cmp	r1, #0
   2869c:	bne	285a4 <GetDataSlab+0x7598>
   286a0:	add	r5, sp, #76	; 0x4c
   286a4:	ldr	r3, [sp, #204]	; 0xcc
   286a8:	add	r3, r3, #4
   286ac:	str	r3, [sp, #12]
   286b0:	ldr	r3, [sp, #196]	; 0xc4
   286b4:	add	r9, r3, #4
   286b8:	add	r7, sp, #112	; 0x70
   286bc:	mov	sl, #1
   286c0:	b	28560 <GetDataSlab+0x7554>
   286c4:	mov	r3, #0
   286c8:	b	24fa8 <GetDataSlab+0x3f9c>
   286cc:	ldr	r3, [r8]
   286d0:	str	r3, [sp, #28]
   286d4:	sub	r3, r3, #1
   286d8:	str	r3, [sp, #32]
   286dc:	ldr	r3, [sp, #192]	; 0xc0
   286e0:	ldr	r3, [r3]
   286e4:	str	r3, [sp, #112]	; 0x70
   286e8:	ldr	r3, [sp, #204]	; 0xcc
   286ec:	ldr	r3, [r3]
   286f0:	str	r3, [sp, #20]
   286f4:	ldr	r3, [sp, #208]	; 0xd0
   286f8:	cmp	r3, #1
   286fc:	ble	28730 <GetDataSlab+0x7724>
   28700:	str	r8, [sp, #16]
   28704:	add	sl, sp, #36	; 0x24
   28708:	ldr	lr, [sp, #192]	; 0xc0
   2870c:	add	r9, sp, #112	; 0x70
   28710:	ldr	r3, [sp, #204]	; 0xcc
   28714:	add	r5, r3, #4
   28718:	ldr	r3, [sp, #196]	; 0xc4
   2871c:	add	r4, r3, #4
   28720:	str	lr, [sp, #12]
   28724:	mov	r6, #2
   28728:	mov	fp, #0
   2872c:	b	3e734 <GetDataSlab+0x1d728>
   28730:	mov	fp, #0
   28734:	b	3e7c0 <GetDataSlab+0x1d7b4>
   28738:	ldr	r3, [sp, #20]
   2873c:	cmp	r3, #0
   28740:	ble	3d3f8 <GetDataSlab+0x1c3ec>
   28744:	mov	r3, #0
   28748:	str	r3, [sp, #16]
   2874c:	b	28820 <GetDataSlab+0x7814>
   28750:	ldr	r2, [r8]
   28754:	cmp	r2, #0
   28758:	beq	28770 <GetDataSlab+0x7764>
   2875c:	ldr	r3, [sp, #12]
   28760:	ldr	r3, [r3, #-4]
   28764:	mul	r3, r3, r2
   28768:	add	r6, r6, r3, lsl #1
   2876c:	add	fp, fp, r3
   28770:	add	r9, r9, #1
   28774:	ldr	r3, [sp, #208]	; 0xd0
   28778:	cmp	r3, r9
   2877c:	beq	28808 <GetDataSlab+0x77fc>
   28780:	ldr	r3, [r5]
   28784:	add	r3, r3, #1
   28788:	str	r3, [r5]
   2878c:	add	r8, r8, #4
   28790:	ldr	r2, [sp, #8]
   28794:	ldr	r1, [r2, #4]!
   28798:	str	r2, [sp, #8]
   2879c:	mov	r0, r3
   287a0:	bl	517e8 <__aeabi_idivmod>
   287a4:	cmp	r1, #0
   287a8:	bne	287f4 <GetDataSlab+0x77e8>
   287ac:	mov	r3, #0
   287b0:	str	r3, [r5], #4
   287b4:	add	r7, r7, #4
   287b8:	str	r7, [sp, #12]
   287bc:	ldr	r4, [r7]
   287c0:	mov	r1, r4
   287c4:	mov	r0, fp
   287c8:	bl	517e8 <__aeabi_idivmod>
   287cc:	subs	r3, r1, #0
   287d0:	beq	28750 <GetDataSlab+0x7744>
   287d4:	ldr	r2, [r7, #-4]
   287d8:	ldr	r1, [r8]
   287dc:	sub	r3, r4, r3
   287e0:	mla	r3, r1, r2, r3
   287e4:	add	r6, r6, r3, lsl #1
   287e8:	add	fp, fp, r3
   287ec:	b	28770 <GetDataSlab+0x7764>
   287f0:	ldr	r9, [sp, #28]
   287f4:	add	r3, sp, #152	; 0x98
   287f8:	add	r3, r3, r9, lsl #2
   287fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   28800:	add	fp, fp, r3
   28804:	add	r6, r6, r3, lsl #1
   28808:	ldr	r3, [sp, #16]
   2880c:	add	r3, r3, sl
   28810:	str	r3, [sp, #16]
   28814:	ldr	r2, [sp, #20]
   28818:	cmp	r3, r2
   2881c:	bge	288ec <GetDataSlab+0x78e0>
   28820:	ldr	r3, [sp, #196]	; 0xc4
   28824:	ldr	r3, [r3]
   28828:	cmp	r3, #0
   2882c:	addne	r6, r6, r3, lsl #1
   28830:	addne	fp, fp, r3
   28834:	ldr	r3, [sp, #204]	; 0xcc
   28838:	ldr	sl, [r3]
   2883c:	cmp	sl, #0
   28840:	ble	2887c <GetDataSlab+0x7870>
   28844:	sub	r1, r6, #2
   28848:	ldr	r3, [sp, #4]
   2884c:	ldr	r2, [sp, #16]
   28850:	add	r2, r3, r2, lsl #2
   28854:	mov	r3, #0
   28858:	ldrh	r0, [r1, #2]!
   2885c:	vmov	s15, r0
   28860:	vcvt.f32.u32	s15, s15
   28864:	vstmia	r2!, {s15}
   28868:	add	r3, r3, #1
   2886c:	ldr	r0, [sp, #204]	; 0xcc
   28870:	ldr	sl, [r0]
   28874:	cmp	sl, r3
   28878:	bgt	28858 <GetDataSlab+0x784c>
   2887c:	ldr	r3, [sp, #192]	; 0xc0
   28880:	ldr	r2, [r3]
   28884:	ldr	r3, [sp, #196]	; 0xc4
   28888:	ldr	r3, [r3]
   2888c:	sub	r3, r2, r3
   28890:	add	fp, fp, r3
   28894:	add	r6, r6, r3, lsl #1
   28898:	ldr	r3, [sp, #208]	; 0xd0
   2889c:	cmp	r3, #1
   288a0:	ble	28808 <GetDataSlab+0x77fc>
   288a4:	ldr	r3, [sp, #76]	; 0x4c
   288a8:	add	r3, r3, #1
   288ac:	str	r3, [sp, #76]	; 0x4c
   288b0:	ldr	r2, [sp, #204]	; 0xcc
   288b4:	ldr	r1, [r2, #4]
   288b8:	mov	r0, r3
   288bc:	bl	517e8 <__aeabi_idivmod>
   288c0:	cmp	r1, #0
   288c4:	bne	287f0 <GetDataSlab+0x77e4>
   288c8:	add	r5, sp, #76	; 0x4c
   288cc:	ldr	r3, [sp, #204]	; 0xcc
   288d0:	add	r3, r3, #4
   288d4:	str	r3, [sp, #8]
   288d8:	ldr	r3, [sp, #196]	; 0xc4
   288dc:	add	r8, r3, #4
   288e0:	add	r7, sp, #112	; 0x70
   288e4:	ldr	r9, [sp, #28]
   288e8:	b	287ac <GetDataSlab+0x77a0>
   288ec:	mov	r3, #0
   288f0:	b	24fa8 <GetDataSlab+0x3f9c>
   288f4:	ldr	r2, [r9]
   288f8:	cmp	r2, #0
   288fc:	beq	28914 <GetDataSlab+0x7908>
   28900:	ldr	r3, [sp, #16]
   28904:	ldr	r3, [r3, #-4]
   28908:	mul	r3, r3, r2
   2890c:	add	r6, r6, r3, lsl #1
   28910:	add	fp, fp, r3
   28914:	add	sl, sl, #1
   28918:	ldr	r3, [sp, #208]	; 0xd0
   2891c:	cmp	r3, sl
   28920:	beq	289ac <GetDataSlab+0x79a0>
   28924:	ldr	r3, [r5]
   28928:	add	r3, r3, #1
   2892c:	str	r3, [r5]
   28930:	add	r9, r9, #4
   28934:	ldr	r2, [sp, #12]
   28938:	ldr	r1, [r2, #4]!
   2893c:	str	r2, [sp, #12]
   28940:	mov	r0, r3
   28944:	bl	517e8 <__aeabi_idivmod>
   28948:	cmp	r1, #0
   2894c:	bne	28998 <GetDataSlab+0x798c>
   28950:	mov	r3, #0
   28954:	str	r3, [r5], #4
   28958:	add	r7, r7, #4
   2895c:	str	r7, [sp, #16]
   28960:	ldr	r4, [r7]
   28964:	mov	r1, r4
   28968:	mov	r0, fp
   2896c:	bl	517e8 <__aeabi_idivmod>
   28970:	subs	r3, r1, #0
   28974:	beq	288f4 <GetDataSlab+0x78e8>
   28978:	ldr	r2, [r7, #-4]
   2897c:	ldr	r1, [r9]
   28980:	sub	r3, r4, r3
   28984:	mla	r3, r1, r2, r3
   28988:	add	r6, r6, r3, lsl #1
   2898c:	add	fp, fp, r3
   28990:	b	28914 <GetDataSlab+0x7908>
   28994:	mov	sl, #1
   28998:	add	r3, sp, #152	; 0x98
   2899c:	add	r3, r3, sl, lsl #2
   289a0:	ldr	r3, [r3, #-120]	; 0xffffff88
   289a4:	add	fp, fp, r3
   289a8:	add	r6, r6, r3, lsl #1
   289ac:	ldr	r3, [sp, #24]
   289b0:	ldr	r2, [sp, #8]
   289b4:	add	r3, r3, r2
   289b8:	str	r3, [sp, #24]
   289bc:	ldr	r2, [sp, #20]
   289c0:	cmp	r3, r2
   289c4:	bge	28ab4 <GetDataSlab+0x7aa8>
   289c8:	ldr	r3, [sp, #196]	; 0xc4
   289cc:	ldr	r3, [r3]
   289d0:	cmp	r3, #0
   289d4:	addne	r6, r6, r3, lsl #1
   289d8:	addne	fp, fp, r3
   289dc:	ldr	r3, [sp, #204]	; 0xcc
   289e0:	ldr	r3, [r3]
   289e4:	str	r3, [sp, #8]
   289e8:	cmp	r3, #0
   289ec:	ble	28a34 <GetDataSlab+0x7a28>
   289f0:	ldr	r3, [sp, #4]
   289f4:	ldr	r2, [sp, #24]
   289f8:	add	r2, r3, r2, lsl #2
   289fc:	mov	r3, #0
   28a00:	ldrh	r1, [r6]
   28a04:	vmov	s15, r1
   28a08:	vcvt.f32.u32	s15, s15
   28a0c:	vstmia	r2!, {s15}
   28a10:	ldr	r1, [r8]
   28a14:	add	r6, r6, r1, lsl #1
   28a18:	add	fp, fp, r1
   28a1c:	add	r3, r3, #1
   28a20:	ldr	r1, [sp, #204]	; 0xcc
   28a24:	ldr	r1, [r1]
   28a28:	str	r1, [sp, #8]
   28a2c:	cmp	r1, r3
   28a30:	bgt	28a00 <GetDataSlab+0x79f4>
   28a34:	ldr	r3, [r8]
   28a38:	ldr	r2, [sp, #8]
   28a3c:	mul	r3, r3, r2
   28a40:	ldr	r2, [sp, #192]	; 0xc0
   28a44:	ldr	r2, [r2]
   28a48:	sub	r3, r2, r3
   28a4c:	ldr	r2, [sp, #196]	; 0xc4
   28a50:	ldr	r2, [r2]
   28a54:	sub	r3, r3, r2
   28a58:	add	fp, fp, r3
   28a5c:	add	r6, r6, r3, lsl #1
   28a60:	ldr	r3, [sp, #208]	; 0xd0
   28a64:	cmp	r3, #1
   28a68:	ble	289ac <GetDataSlab+0x79a0>
   28a6c:	ldr	r3, [sp, #76]	; 0x4c
   28a70:	add	r3, r3, #1
   28a74:	str	r3, [sp, #76]	; 0x4c
   28a78:	ldr	r2, [sp, #204]	; 0xcc
   28a7c:	ldr	r1, [r2, #4]
   28a80:	mov	r0, r3
   28a84:	bl	517e8 <__aeabi_idivmod>
   28a88:	cmp	r1, #0
   28a8c:	bne	28994 <GetDataSlab+0x7988>
   28a90:	add	r5, sp, #76	; 0x4c
   28a94:	ldr	r3, [sp, #204]	; 0xcc
   28a98:	add	r3, r3, #4
   28a9c:	str	r3, [sp, #12]
   28aa0:	ldr	r3, [sp, #196]	; 0xc4
   28aa4:	add	r9, r3, #4
   28aa8:	add	r7, sp, #112	; 0x70
   28aac:	mov	sl, #1
   28ab0:	b	28950 <GetDataSlab+0x7944>
   28ab4:	mov	r3, #0
   28ab8:	b	24fa8 <GetDataSlab+0x3f9c>
   28abc:	ldr	r3, [r8]
   28ac0:	str	r3, [sp, #28]
   28ac4:	sub	r3, r3, #1
   28ac8:	str	r3, [sp, #32]
   28acc:	ldr	r3, [sp, #192]	; 0xc0
   28ad0:	ldr	r3, [r3]
   28ad4:	str	r3, [sp, #112]	; 0x70
   28ad8:	ldr	r3, [sp, #204]	; 0xcc
   28adc:	ldr	r3, [r3]
   28ae0:	str	r3, [sp, #20]
   28ae4:	ldr	r3, [sp, #208]	; 0xd0
   28ae8:	cmp	r3, #1
   28aec:	ble	28b20 <GetDataSlab+0x7b14>
   28af0:	str	r8, [sp, #16]
   28af4:	add	sl, sp, #36	; 0x24
   28af8:	ldr	lr, [sp, #192]	; 0xc0
   28afc:	add	r9, sp, #112	; 0x70
   28b00:	ldr	r3, [sp, #204]	; 0xcc
   28b04:	add	r5, r3, #4
   28b08:	ldr	r3, [sp, #196]	; 0xc4
   28b0c:	add	r4, r3, #4
   28b10:	str	lr, [sp, #12]
   28b14:	mov	r6, #2
   28b18:	mov	fp, #0
   28b1c:	b	3e820 <GetDataSlab+0x1d814>
   28b20:	mov	fp, #0
   28b24:	b	3e8ac <GetDataSlab+0x1d8a0>
   28b28:	ldr	r3, [sp, #20]
   28b2c:	cmp	r3, #0
   28b30:	ble	3d400 <GetDataSlab+0x1c3f4>
   28b34:	mov	r3, #0
   28b38:	str	r3, [sp, #16]
   28b3c:	b	28c10 <GetDataSlab+0x7c04>
   28b40:	ldr	r2, [r8]
   28b44:	cmp	r2, #0
   28b48:	beq	28b60 <GetDataSlab+0x7b54>
   28b4c:	ldr	r3, [sp, #12]
   28b50:	ldr	r3, [r3, #-4]
   28b54:	mul	r3, r3, r2
   28b58:	add	r6, r6, r3
   28b5c:	add	fp, fp, r3
   28b60:	add	r9, r9, #1
   28b64:	ldr	r3, [sp, #208]	; 0xd0
   28b68:	cmp	r3, r9
   28b6c:	beq	28bf8 <GetDataSlab+0x7bec>
   28b70:	ldr	r3, [r5]
   28b74:	add	r3, r3, #1
   28b78:	str	r3, [r5]
   28b7c:	add	r8, r8, #4
   28b80:	ldr	r2, [sp, #8]
   28b84:	ldr	r1, [r2, #4]!
   28b88:	str	r2, [sp, #8]
   28b8c:	mov	r0, r3
   28b90:	bl	517e8 <__aeabi_idivmod>
   28b94:	cmp	r1, #0
   28b98:	bne	28be4 <GetDataSlab+0x7bd8>
   28b9c:	mov	r3, #0
   28ba0:	str	r3, [r5], #4
   28ba4:	add	r7, r7, #4
   28ba8:	str	r7, [sp, #12]
   28bac:	ldr	r4, [r7]
   28bb0:	mov	r1, r4
   28bb4:	mov	r0, fp
   28bb8:	bl	517e8 <__aeabi_idivmod>
   28bbc:	subs	r3, r1, #0
   28bc0:	beq	28b40 <GetDataSlab+0x7b34>
   28bc4:	ldr	r2, [r7, #-4]
   28bc8:	ldr	r1, [r8]
   28bcc:	sub	r3, r4, r3
   28bd0:	mla	r3, r1, r2, r3
   28bd4:	add	r6, r6, r3
   28bd8:	add	fp, fp, r3
   28bdc:	b	28b60 <GetDataSlab+0x7b54>
   28be0:	ldr	r9, [sp, #28]
   28be4:	add	r3, sp, #152	; 0x98
   28be8:	add	r3, r3, r9, lsl #2
   28bec:	ldr	r3, [r3, #-120]	; 0xffffff88
   28bf0:	add	fp, fp, r3
   28bf4:	add	r6, r6, r3
   28bf8:	ldr	r3, [sp, #16]
   28bfc:	add	r3, r3, sl
   28c00:	str	r3, [sp, #16]
   28c04:	ldr	r2, [sp, #20]
   28c08:	cmp	r3, r2
   28c0c:	bge	28cdc <GetDataSlab+0x7cd0>
   28c10:	ldr	r3, [sp, #196]	; 0xc4
   28c14:	ldr	r3, [r3]
   28c18:	cmp	r3, #0
   28c1c:	addne	r6, r6, r3
   28c20:	addne	fp, fp, r3
   28c24:	ldr	r3, [sp, #204]	; 0xcc
   28c28:	ldr	sl, [r3]
   28c2c:	cmp	sl, #0
   28c30:	ble	28c6c <GetDataSlab+0x7c60>
   28c34:	sub	r1, r6, #1
   28c38:	ldr	r3, [sp, #4]
   28c3c:	ldr	r2, [sp, #16]
   28c40:	add	r2, r3, r2, lsl #2
   28c44:	mov	r3, #0
   28c48:	ldrsb	r0, [r1, #1]!
   28c4c:	vmov	s15, r0
   28c50:	vcvt.f32.s32	s15, s15
   28c54:	vstmia	r2!, {s15}
   28c58:	add	r3, r3, #1
   28c5c:	ldr	r0, [sp, #204]	; 0xcc
   28c60:	ldr	sl, [r0]
   28c64:	cmp	sl, r3
   28c68:	bgt	28c48 <GetDataSlab+0x7c3c>
   28c6c:	ldr	r3, [sp, #192]	; 0xc0
   28c70:	ldr	r2, [r3]
   28c74:	ldr	r3, [sp, #196]	; 0xc4
   28c78:	ldr	r3, [r3]
   28c7c:	sub	r3, r2, r3
   28c80:	add	fp, fp, r3
   28c84:	add	r6, r6, r3
   28c88:	ldr	r3, [sp, #208]	; 0xd0
   28c8c:	cmp	r3, #1
   28c90:	ble	28bf8 <GetDataSlab+0x7bec>
   28c94:	ldr	r3, [sp, #76]	; 0x4c
   28c98:	add	r3, r3, #1
   28c9c:	str	r3, [sp, #76]	; 0x4c
   28ca0:	ldr	r2, [sp, #204]	; 0xcc
   28ca4:	ldr	r1, [r2, #4]
   28ca8:	mov	r0, r3
   28cac:	bl	517e8 <__aeabi_idivmod>
   28cb0:	cmp	r1, #0
   28cb4:	bne	28be0 <GetDataSlab+0x7bd4>
   28cb8:	add	r5, sp, #76	; 0x4c
   28cbc:	ldr	r3, [sp, #204]	; 0xcc
   28cc0:	add	r3, r3, #4
   28cc4:	str	r3, [sp, #8]
   28cc8:	ldr	r3, [sp, #196]	; 0xc4
   28ccc:	add	r8, r3, #4
   28cd0:	add	r7, sp, #112	; 0x70
   28cd4:	ldr	r9, [sp, #28]
   28cd8:	b	28b9c <GetDataSlab+0x7b90>
   28cdc:	mov	r3, #0
   28ce0:	b	24fa8 <GetDataSlab+0x3f9c>
   28ce4:	ldr	r2, [r9]
   28ce8:	cmp	r2, #0
   28cec:	beq	28d04 <GetDataSlab+0x7cf8>
   28cf0:	ldr	r3, [sp, #16]
   28cf4:	ldr	r3, [r3, #-4]
   28cf8:	mul	r3, r3, r2
   28cfc:	add	r6, r6, r3
   28d00:	add	fp, fp, r3
   28d04:	add	sl, sl, #1
   28d08:	ldr	r3, [sp, #208]	; 0xd0
   28d0c:	cmp	r3, sl
   28d10:	beq	28d9c <GetDataSlab+0x7d90>
   28d14:	ldr	r3, [r5]
   28d18:	add	r3, r3, #1
   28d1c:	str	r3, [r5]
   28d20:	add	r9, r9, #4
   28d24:	ldr	r2, [sp, #12]
   28d28:	ldr	r1, [r2, #4]!
   28d2c:	str	r2, [sp, #12]
   28d30:	mov	r0, r3
   28d34:	bl	517e8 <__aeabi_idivmod>
   28d38:	cmp	r1, #0
   28d3c:	bne	28d88 <GetDataSlab+0x7d7c>
   28d40:	mov	r3, #0
   28d44:	str	r3, [r5], #4
   28d48:	add	r7, r7, #4
   28d4c:	str	r7, [sp, #16]
   28d50:	ldr	r4, [r7]
   28d54:	mov	r1, r4
   28d58:	mov	r0, fp
   28d5c:	bl	517e8 <__aeabi_idivmod>
   28d60:	subs	r3, r1, #0
   28d64:	beq	28ce4 <GetDataSlab+0x7cd8>
   28d68:	ldr	r2, [r7, #-4]
   28d6c:	ldr	r1, [r9]
   28d70:	sub	r3, r4, r3
   28d74:	mla	r3, r1, r2, r3
   28d78:	add	r6, r6, r3
   28d7c:	add	fp, fp, r3
   28d80:	b	28d04 <GetDataSlab+0x7cf8>
   28d84:	mov	sl, #1
   28d88:	add	r3, sp, #152	; 0x98
   28d8c:	add	r3, r3, sl, lsl #2
   28d90:	ldr	r3, [r3, #-120]	; 0xffffff88
   28d94:	add	fp, fp, r3
   28d98:	add	r6, r6, r3
   28d9c:	ldr	r3, [sp, #24]
   28da0:	ldr	r2, [sp, #8]
   28da4:	add	r3, r3, r2
   28da8:	str	r3, [sp, #24]
   28dac:	ldr	r2, [sp, #20]
   28db0:	cmp	r3, r2
   28db4:	bge	28ea4 <GetDataSlab+0x7e98>
   28db8:	ldr	r3, [sp, #196]	; 0xc4
   28dbc:	ldr	r3, [r3]
   28dc0:	cmp	r3, #0
   28dc4:	addne	r6, r6, r3
   28dc8:	addne	fp, fp, r3
   28dcc:	ldr	r3, [sp, #204]	; 0xcc
   28dd0:	ldr	r3, [r3]
   28dd4:	str	r3, [sp, #8]
   28dd8:	cmp	r3, #0
   28ddc:	ble	28e24 <GetDataSlab+0x7e18>
   28de0:	ldr	r3, [sp, #4]
   28de4:	ldr	r2, [sp, #24]
   28de8:	add	r2, r3, r2, lsl #2
   28dec:	mov	r3, #0
   28df0:	ldrsb	r1, [r6]
   28df4:	vmov	s15, r1
   28df8:	vcvt.f32.s32	s15, s15
   28dfc:	vstmia	r2!, {s15}
   28e00:	ldr	r1, [r8]
   28e04:	add	r6, r6, r1
   28e08:	add	fp, fp, r1
   28e0c:	add	r3, r3, #1
   28e10:	ldr	r1, [sp, #204]	; 0xcc
   28e14:	ldr	r1, [r1]
   28e18:	str	r1, [sp, #8]
   28e1c:	cmp	r1, r3
   28e20:	bgt	28df0 <GetDataSlab+0x7de4>
   28e24:	ldr	r3, [r8]
   28e28:	ldr	r2, [sp, #8]
   28e2c:	mul	r3, r3, r2
   28e30:	ldr	r2, [sp, #192]	; 0xc0
   28e34:	ldr	r2, [r2]
   28e38:	sub	r3, r2, r3
   28e3c:	ldr	r2, [sp, #196]	; 0xc4
   28e40:	ldr	r2, [r2]
   28e44:	sub	r3, r3, r2
   28e48:	add	fp, fp, r3
   28e4c:	add	r6, r6, r3
   28e50:	ldr	r3, [sp, #208]	; 0xd0
   28e54:	cmp	r3, #1
   28e58:	ble	28d9c <GetDataSlab+0x7d90>
   28e5c:	ldr	r3, [sp, #76]	; 0x4c
   28e60:	add	r3, r3, #1
   28e64:	str	r3, [sp, #76]	; 0x4c
   28e68:	ldr	r2, [sp, #204]	; 0xcc
   28e6c:	ldr	r1, [r2, #4]
   28e70:	mov	r0, r3
   28e74:	bl	517e8 <__aeabi_idivmod>
   28e78:	cmp	r1, #0
   28e7c:	bne	28d84 <GetDataSlab+0x7d78>
   28e80:	add	r5, sp, #76	; 0x4c
   28e84:	ldr	r3, [sp, #204]	; 0xcc
   28e88:	add	r3, r3, #4
   28e8c:	str	r3, [sp, #12]
   28e90:	ldr	r3, [sp, #196]	; 0xc4
   28e94:	add	r9, r3, #4
   28e98:	add	r7, sp, #112	; 0x70
   28e9c:	mov	sl, #1
   28ea0:	b	28d40 <GetDataSlab+0x7d34>
   28ea4:	mov	r3, #0
   28ea8:	b	24fa8 <GetDataSlab+0x3f9c>
   28eac:	ldr	r3, [r8]
   28eb0:	str	r3, [sp, #28]
   28eb4:	sub	r3, r3, #1
   28eb8:	str	r3, [sp, #32]
   28ebc:	ldr	r3, [sp, #192]	; 0xc0
   28ec0:	ldr	r3, [r3]
   28ec4:	str	r3, [sp, #112]	; 0x70
   28ec8:	ldr	r3, [sp, #204]	; 0xcc
   28ecc:	ldr	r3, [r3]
   28ed0:	str	r3, [sp, #20]
   28ed4:	ldr	r3, [sp, #208]	; 0xd0
   28ed8:	cmp	r3, #1
   28edc:	ble	28f10 <GetDataSlab+0x7f04>
   28ee0:	str	r8, [sp, #16]
   28ee4:	add	sl, sp, #36	; 0x24
   28ee8:	ldr	lr, [sp, #192]	; 0xc0
   28eec:	add	r9, sp, #112	; 0x70
   28ef0:	ldr	r3, [sp, #204]	; 0xcc
   28ef4:	add	r5, r3, #4
   28ef8:	ldr	r3, [sp, #196]	; 0xc4
   28efc:	add	r4, r3, #4
   28f00:	str	lr, [sp, #12]
   28f04:	mov	r6, #2
   28f08:	mov	fp, #0
   28f0c:	b	3e90c <GetDataSlab+0x1d900>
   28f10:	mov	fp, #0
   28f14:	b	3e998 <GetDataSlab+0x1d98c>
   28f18:	ldr	r3, [sp, #20]
   28f1c:	cmp	r3, #0
   28f20:	ble	3d408 <GetDataSlab+0x1c3fc>
   28f24:	mov	r3, #0
   28f28:	str	r3, [sp, #16]
   28f2c:	b	29000 <GetDataSlab+0x7ff4>
   28f30:	ldr	r2, [r8]
   28f34:	cmp	r2, #0
   28f38:	beq	28f50 <GetDataSlab+0x7f44>
   28f3c:	ldr	r3, [sp, #12]
   28f40:	ldr	r3, [r3, #-4]
   28f44:	mul	r3, r3, r2
   28f48:	add	r6, r6, r3
   28f4c:	add	fp, fp, r3
   28f50:	add	r9, r9, #1
   28f54:	ldr	r3, [sp, #208]	; 0xd0
   28f58:	cmp	r3, r9
   28f5c:	beq	28fe8 <GetDataSlab+0x7fdc>
   28f60:	ldr	r3, [r5]
   28f64:	add	r3, r3, #1
   28f68:	str	r3, [r5]
   28f6c:	add	r8, r8, #4
   28f70:	ldr	r2, [sp, #8]
   28f74:	ldr	r1, [r2, #4]!
   28f78:	str	r2, [sp, #8]
   28f7c:	mov	r0, r3
   28f80:	bl	517e8 <__aeabi_idivmod>
   28f84:	cmp	r1, #0
   28f88:	bne	28fd4 <GetDataSlab+0x7fc8>
   28f8c:	mov	r3, #0
   28f90:	str	r3, [r5], #4
   28f94:	add	r7, r7, #4
   28f98:	str	r7, [sp, #12]
   28f9c:	ldr	r4, [r7]
   28fa0:	mov	r1, r4
   28fa4:	mov	r0, fp
   28fa8:	bl	517e8 <__aeabi_idivmod>
   28fac:	subs	r3, r1, #0
   28fb0:	beq	28f30 <GetDataSlab+0x7f24>
   28fb4:	ldr	r2, [r7, #-4]
   28fb8:	ldr	r1, [r8]
   28fbc:	sub	r3, r4, r3
   28fc0:	mla	r3, r1, r2, r3
   28fc4:	add	r6, r6, r3
   28fc8:	add	fp, fp, r3
   28fcc:	b	28f50 <GetDataSlab+0x7f44>
   28fd0:	ldr	r9, [sp, #28]
   28fd4:	add	r3, sp, #152	; 0x98
   28fd8:	add	r3, r3, r9, lsl #2
   28fdc:	ldr	r3, [r3, #-120]	; 0xffffff88
   28fe0:	add	fp, fp, r3
   28fe4:	add	r6, r6, r3
   28fe8:	ldr	r3, [sp, #16]
   28fec:	add	r3, r3, sl
   28ff0:	str	r3, [sp, #16]
   28ff4:	ldr	r2, [sp, #20]
   28ff8:	cmp	r3, r2
   28ffc:	bge	290cc <GetDataSlab+0x80c0>
   29000:	ldr	r3, [sp, #196]	; 0xc4
   29004:	ldr	r3, [r3]
   29008:	cmp	r3, #0
   2900c:	addne	r6, r6, r3
   29010:	addne	fp, fp, r3
   29014:	ldr	r3, [sp, #204]	; 0xcc
   29018:	ldr	sl, [r3]
   2901c:	cmp	sl, #0
   29020:	ble	2905c <GetDataSlab+0x8050>
   29024:	sub	r1, r6, #1
   29028:	ldr	r3, [sp, #4]
   2902c:	ldr	r2, [sp, #16]
   29030:	add	r2, r3, r2, lsl #2
   29034:	mov	r3, #0
   29038:	ldrb	r0, [r1, #1]!
   2903c:	vmov	s15, r0
   29040:	vcvt.f32.u32	s15, s15
   29044:	vstmia	r2!, {s15}
   29048:	add	r3, r3, #1
   2904c:	ldr	r0, [sp, #204]	; 0xcc
   29050:	ldr	sl, [r0]
   29054:	cmp	sl, r3
   29058:	bgt	29038 <GetDataSlab+0x802c>
   2905c:	ldr	r3, [sp, #192]	; 0xc0
   29060:	ldr	r2, [r3]
   29064:	ldr	r3, [sp, #196]	; 0xc4
   29068:	ldr	r3, [r3]
   2906c:	sub	r3, r2, r3
   29070:	add	fp, fp, r3
   29074:	add	r6, r6, r3
   29078:	ldr	r3, [sp, #208]	; 0xd0
   2907c:	cmp	r3, #1
   29080:	ble	28fe8 <GetDataSlab+0x7fdc>
   29084:	ldr	r3, [sp, #76]	; 0x4c
   29088:	add	r3, r3, #1
   2908c:	str	r3, [sp, #76]	; 0x4c
   29090:	ldr	r2, [sp, #204]	; 0xcc
   29094:	ldr	r1, [r2, #4]
   29098:	mov	r0, r3
   2909c:	bl	517e8 <__aeabi_idivmod>
   290a0:	cmp	r1, #0
   290a4:	bne	28fd0 <GetDataSlab+0x7fc4>
   290a8:	add	r5, sp, #76	; 0x4c
   290ac:	ldr	r3, [sp, #204]	; 0xcc
   290b0:	add	r3, r3, #4
   290b4:	str	r3, [sp, #8]
   290b8:	ldr	r3, [sp, #196]	; 0xc4
   290bc:	add	r8, r3, #4
   290c0:	add	r7, sp, #112	; 0x70
   290c4:	ldr	r9, [sp, #28]
   290c8:	b	28f8c <GetDataSlab+0x7f80>
   290cc:	mov	r3, #0
   290d0:	b	24fa8 <GetDataSlab+0x3f9c>
   290d4:	ldr	r2, [r9]
   290d8:	cmp	r2, #0
   290dc:	beq	290f4 <GetDataSlab+0x80e8>
   290e0:	ldr	r3, [sp, #16]
   290e4:	ldr	r3, [r3, #-4]
   290e8:	mul	r3, r3, r2
   290ec:	add	r6, r6, r3
   290f0:	add	fp, fp, r3
   290f4:	add	sl, sl, #1
   290f8:	ldr	r3, [sp, #208]	; 0xd0
   290fc:	cmp	r3, sl
   29100:	beq	2918c <GetDataSlab+0x8180>
   29104:	ldr	r3, [r5]
   29108:	add	r3, r3, #1
   2910c:	str	r3, [r5]
   29110:	add	r9, r9, #4
   29114:	ldr	r2, [sp, #12]
   29118:	ldr	r1, [r2, #4]!
   2911c:	str	r2, [sp, #12]
   29120:	mov	r0, r3
   29124:	bl	517e8 <__aeabi_idivmod>
   29128:	cmp	r1, #0
   2912c:	bne	29178 <GetDataSlab+0x816c>
   29130:	mov	r3, #0
   29134:	str	r3, [r5], #4
   29138:	add	r7, r7, #4
   2913c:	str	r7, [sp, #16]
   29140:	ldr	r4, [r7]
   29144:	mov	r1, r4
   29148:	mov	r0, fp
   2914c:	bl	517e8 <__aeabi_idivmod>
   29150:	subs	r3, r1, #0
   29154:	beq	290d4 <GetDataSlab+0x80c8>
   29158:	ldr	r2, [r7, #-4]
   2915c:	ldr	r1, [r9]
   29160:	sub	r3, r4, r3
   29164:	mla	r3, r1, r2, r3
   29168:	add	r6, r6, r3
   2916c:	add	fp, fp, r3
   29170:	b	290f4 <GetDataSlab+0x80e8>
   29174:	mov	sl, #1
   29178:	add	r3, sp, #152	; 0x98
   2917c:	add	r3, r3, sl, lsl #2
   29180:	ldr	r3, [r3, #-120]	; 0xffffff88
   29184:	add	fp, fp, r3
   29188:	add	r6, r6, r3
   2918c:	ldr	r3, [sp, #24]
   29190:	ldr	r2, [sp, #8]
   29194:	add	r3, r3, r2
   29198:	str	r3, [sp, #24]
   2919c:	ldr	r2, [sp, #20]
   291a0:	cmp	r3, r2
   291a4:	bge	29294 <GetDataSlab+0x8288>
   291a8:	ldr	r3, [sp, #196]	; 0xc4
   291ac:	ldr	r3, [r3]
   291b0:	cmp	r3, #0
   291b4:	addne	r6, r6, r3
   291b8:	addne	fp, fp, r3
   291bc:	ldr	r3, [sp, #204]	; 0xcc
   291c0:	ldr	r3, [r3]
   291c4:	str	r3, [sp, #8]
   291c8:	cmp	r3, #0
   291cc:	ble	29214 <GetDataSlab+0x8208>
   291d0:	ldr	r3, [sp, #4]
   291d4:	ldr	r2, [sp, #24]
   291d8:	add	r2, r3, r2, lsl #2
   291dc:	mov	r3, #0
   291e0:	ldrb	r1, [r6]
   291e4:	vmov	s15, r1
   291e8:	vcvt.f32.u32	s15, s15
   291ec:	vstmia	r2!, {s15}
   291f0:	ldr	r1, [r8]
   291f4:	add	r6, r6, r1
   291f8:	add	fp, fp, r1
   291fc:	add	r3, r3, #1
   29200:	ldr	r1, [sp, #204]	; 0xcc
   29204:	ldr	r1, [r1]
   29208:	str	r1, [sp, #8]
   2920c:	cmp	r1, r3
   29210:	bgt	291e0 <GetDataSlab+0x81d4>
   29214:	ldr	r3, [r8]
   29218:	ldr	r2, [sp, #8]
   2921c:	mul	r3, r3, r2
   29220:	ldr	r2, [sp, #192]	; 0xc0
   29224:	ldr	r2, [r2]
   29228:	sub	r3, r2, r3
   2922c:	ldr	r2, [sp, #196]	; 0xc4
   29230:	ldr	r2, [r2]
   29234:	sub	r3, r3, r2
   29238:	add	fp, fp, r3
   2923c:	add	r6, r6, r3
   29240:	ldr	r3, [sp, #208]	; 0xd0
   29244:	cmp	r3, #1
   29248:	ble	2918c <GetDataSlab+0x8180>
   2924c:	ldr	r3, [sp, #76]	; 0x4c
   29250:	add	r3, r3, #1
   29254:	str	r3, [sp, #76]	; 0x4c
   29258:	ldr	r2, [sp, #204]	; 0xcc
   2925c:	ldr	r1, [r2, #4]
   29260:	mov	r0, r3
   29264:	bl	517e8 <__aeabi_idivmod>
   29268:	cmp	r1, #0
   2926c:	bne	29174 <GetDataSlab+0x8168>
   29270:	add	r5, sp, #76	; 0x4c
   29274:	ldr	r3, [sp, #204]	; 0xcc
   29278:	add	r3, r3, #4
   2927c:	str	r3, [sp, #12]
   29280:	ldr	r3, [sp, #196]	; 0xc4
   29284:	add	r9, r3, #4
   29288:	add	r7, sp, #112	; 0x70
   2928c:	mov	sl, #1
   29290:	b	29130 <GetDataSlab+0x8124>
   29294:	mov	r3, #0
   29298:	b	24fa8 <GetDataSlab+0x3f9c>
   2929c:	cmp	r4, #12
   292a0:	beq	29314 <GetDataSlab+0x8308>
   292a4:	cmp	r4, #13
   292a8:	movne	r3, #1
   292ac:	bne	24fa8 <GetDataSlab+0x3f9c>
   292b0:	ldr	r3, [r8]
   292b4:	str	r3, [sp, #28]
   292b8:	sub	r3, r3, #1
   292bc:	str	r3, [sp, #32]
   292c0:	ldr	r3, [sp, #192]	; 0xc0
   292c4:	ldr	r3, [r3]
   292c8:	str	r3, [sp, #112]	; 0x70
   292cc:	ldr	r3, [sp, #204]	; 0xcc
   292d0:	ldr	r3, [r3]
   292d4:	str	r3, [sp, #20]
   292d8:	ldr	r3, [sp, #208]	; 0xd0
   292dc:	cmp	r3, #1
   292e0:	ble	296ec <GetDataSlab+0x86e0>
   292e4:	str	r8, [sp, #16]
   292e8:	add	sl, sp, #36	; 0x24
   292ec:	ldr	lr, [sp, #192]	; 0xc0
   292f0:	add	r9, sp, #112	; 0x70
   292f4:	ldr	r3, [sp, #204]	; 0xcc
   292f8:	add	r6, r3, #4
   292fc:	ldr	r3, [sp, #196]	; 0xc4
   29300:	add	r4, r3, #4
   29304:	str	lr, [sp, #12]
   29308:	mov	r5, #2
   2930c:	mov	fp, #0
   29310:	b	3eae4 <GetDataSlab+0x1dad8>
   29314:	ldr	r3, [r8]
   29318:	str	r3, [sp, #28]
   2931c:	sub	r3, r3, #1
   29320:	str	r3, [sp, #32]
   29324:	ldr	r3, [sp, #192]	; 0xc0
   29328:	ldr	r3, [r3]
   2932c:	str	r3, [sp, #112]	; 0x70
   29330:	ldr	r3, [sp, #204]	; 0xcc
   29334:	ldr	r3, [r3]
   29338:	str	r3, [sp, #20]
   2933c:	ldr	r3, [sp, #208]	; 0xd0
   29340:	cmp	r3, #1
   29344:	ble	29378 <GetDataSlab+0x836c>
   29348:	str	r8, [sp, #16]
   2934c:	add	sl, sp, #36	; 0x24
   29350:	ldr	lr, [sp, #192]	; 0xc0
   29354:	add	r9, sp, #112	; 0x70
   29358:	ldr	r3, [sp, #204]	; 0xcc
   2935c:	add	r6, r3, #4
   29360:	ldr	r3, [sp, #196]	; 0xc4
   29364:	add	r4, r3, #4
   29368:	str	lr, [sp, #12]
   2936c:	mov	r5, #2
   29370:	mov	fp, #0
   29374:	b	3e9f8 <GetDataSlab+0x1d9ec>
   29378:	mov	fp, #0
   2937c:	b	3ea84 <GetDataSlab+0x1da78>
   29380:	ldr	r3, [sp, #20]
   29384:	cmp	r3, #0
   29388:	ble	3eaac <GetDataSlab+0x1daa0>
   2938c:	mov	r3, #0
   29390:	str	r3, [sp, #16]
   29394:	b	29468 <GetDataSlab+0x845c>
   29398:	ldr	r2, [r8]
   2939c:	cmp	r2, #0
   293a0:	beq	293b8 <GetDataSlab+0x83ac>
   293a4:	ldr	r3, [sp, #12]
   293a8:	ldr	r3, [r3, #-4]
   293ac:	mul	r3, r3, r2
   293b0:	add	r7, r7, r3, lsl #3
   293b4:	add	fp, fp, r3
   293b8:	add	r9, r9, #1
   293bc:	ldr	r3, [sp, #208]	; 0xd0
   293c0:	cmp	r3, r9
   293c4:	beq	29450 <GetDataSlab+0x8444>
   293c8:	ldr	r3, [r5]
   293cc:	add	r3, r3, #1
   293d0:	str	r3, [r5]
   293d4:	add	r8, r8, #4
   293d8:	ldr	r2, [sp, #8]
   293dc:	ldr	r1, [r2, #4]!
   293e0:	str	r2, [sp, #8]
   293e4:	mov	r0, r3
   293e8:	bl	517e8 <__aeabi_idivmod>
   293ec:	cmp	r1, #0
   293f0:	bne	2943c <GetDataSlab+0x8430>
   293f4:	mov	r3, #0
   293f8:	str	r3, [r5], #4
   293fc:	add	r6, r6, #4
   29400:	str	r6, [sp, #12]
   29404:	ldr	r4, [r6]
   29408:	mov	r1, r4
   2940c:	mov	r0, fp
   29410:	bl	517e8 <__aeabi_idivmod>
   29414:	subs	r3, r1, #0
   29418:	beq	29398 <GetDataSlab+0x838c>
   2941c:	ldr	r2, [r6, #-4]
   29420:	ldr	r1, [r8]
   29424:	sub	r3, r4, r3
   29428:	mla	r3, r1, r2, r3
   2942c:	add	r7, r7, r3, lsl #3
   29430:	add	fp, fp, r3
   29434:	b	293b8 <GetDataSlab+0x83ac>
   29438:	ldr	r9, [sp, #28]
   2943c:	add	r3, sp, #152	; 0x98
   29440:	add	r3, r3, r9, lsl #2
   29444:	ldr	r3, [r3, #-120]	; 0xffffff88
   29448:	add	fp, fp, r3
   2944c:	add	r7, r7, r3, lsl #3
   29450:	ldr	r3, [sp, #16]
   29454:	add	r3, r3, sl
   29458:	str	r3, [sp, #16]
   2945c:	ldr	r2, [sp, #20]
   29460:	cmp	r3, r2
   29464:	bge	3eaac <GetDataSlab+0x1daa0>
   29468:	ldr	r3, [sp, #196]	; 0xc4
   2946c:	ldr	r3, [r3]
   29470:	cmp	r3, #0
   29474:	addne	r7, r7, r3, lsl #3
   29478:	addne	fp, fp, r3
   2947c:	ldr	r3, [sp, #204]	; 0xcc
   29480:	ldr	sl, [r3]
   29484:	cmp	sl, #0
   29488:	ble	294c0 <GetDataSlab+0x84b4>
   2948c:	sub	r6, r7, #8
   29490:	ldr	r3, [sp, #4]
   29494:	ldr	r2, [sp, #16]
   29498:	add	r5, r3, r2, lsl #2
   2949c:	mov	r4, #0
   294a0:	ldrd	r0, [r6, #8]!
   294a4:	bl	51d94 <__aeabi_l2f>
   294a8:	str	r0, [r5], #4
   294ac:	add	r4, r4, #1
   294b0:	ldr	r3, [sp, #204]	; 0xcc
   294b4:	ldr	sl, [r3]
   294b8:	cmp	sl, r4
   294bc:	bgt	294a0 <GetDataSlab+0x8494>
   294c0:	ldr	r3, [sp, #192]	; 0xc0
   294c4:	ldr	r2, [r3]
   294c8:	ldr	r3, [sp, #196]	; 0xc4
   294cc:	ldr	r3, [r3]
   294d0:	sub	r3, r2, r3
   294d4:	add	fp, fp, r3
   294d8:	add	r7, r7, r3, lsl #3
   294dc:	ldr	r3, [sp, #208]	; 0xd0
   294e0:	cmp	r3, #1
   294e4:	ble	29450 <GetDataSlab+0x8444>
   294e8:	ldr	r3, [sp, #76]	; 0x4c
   294ec:	add	r3, r3, #1
   294f0:	str	r3, [sp, #76]	; 0x4c
   294f4:	ldr	r2, [sp, #204]	; 0xcc
   294f8:	ldr	r1, [r2, #4]
   294fc:	mov	r0, r3
   29500:	bl	517e8 <__aeabi_idivmod>
   29504:	cmp	r1, #0
   29508:	bne	29438 <GetDataSlab+0x842c>
   2950c:	add	r5, sp, #76	; 0x4c
   29510:	ldr	r3, [sp, #204]	; 0xcc
   29514:	add	r3, r3, #4
   29518:	str	r3, [sp, #8]
   2951c:	ldr	r3, [sp, #196]	; 0xc4
   29520:	add	r8, r3, #4
   29524:	add	r6, sp, #112	; 0x70
   29528:	ldr	r9, [sp, #28]
   2952c:	b	293f4 <GetDataSlab+0x83e8>
   29530:	ldr	r2, [r9]
   29534:	cmp	r2, #0
   29538:	beq	29550 <GetDataSlab+0x8544>
   2953c:	ldr	r3, [sp, #16]
   29540:	ldr	r3, [r3, #-4]
   29544:	mul	r3, r3, r2
   29548:	add	r7, r7, r3, lsl #3
   2954c:	add	fp, fp, r3
   29550:	add	sl, sl, #1
   29554:	ldr	r3, [sp, #208]	; 0xd0
   29558:	cmp	r3, sl
   2955c:	beq	295e8 <GetDataSlab+0x85dc>
   29560:	ldr	r3, [r5]
   29564:	add	r3, r3, #1
   29568:	str	r3, [r5]
   2956c:	add	r9, r9, #4
   29570:	ldr	r2, [sp, #12]
   29574:	ldr	r1, [r2, #4]!
   29578:	str	r2, [sp, #12]
   2957c:	mov	r0, r3
   29580:	bl	517e8 <__aeabi_idivmod>
   29584:	cmp	r1, #0
   29588:	bne	295d4 <GetDataSlab+0x85c8>
   2958c:	mov	r3, #0
   29590:	str	r3, [r5], #4
   29594:	add	r6, r6, #4
   29598:	str	r6, [sp, #16]
   2959c:	ldr	r4, [r6]
   295a0:	mov	r1, r4
   295a4:	mov	r0, fp
   295a8:	bl	517e8 <__aeabi_idivmod>
   295ac:	subs	r3, r1, #0
   295b0:	beq	29530 <GetDataSlab+0x8524>
   295b4:	ldr	r2, [r6, #-4]
   295b8:	ldr	r1, [r9]
   295bc:	sub	r3, r4, r3
   295c0:	mla	r3, r1, r2, r3
   295c4:	add	r7, r7, r3, lsl #3
   295c8:	add	fp, fp, r3
   295cc:	b	29550 <GetDataSlab+0x8544>
   295d0:	mov	sl, #1
   295d4:	add	r3, sp, #152	; 0x98
   295d8:	add	r3, r3, sl, lsl #2
   295dc:	ldr	r3, [r3, #-120]	; 0xffffff88
   295e0:	add	fp, fp, r3
   295e4:	add	r7, r7, r3, lsl #3
   295e8:	ldr	r3, [sp, #24]
   295ec:	ldr	r2, [sp, #8]
   295f0:	add	r3, r3, r2
   295f4:	str	r3, [sp, #24]
   295f8:	ldr	r2, [sp, #20]
   295fc:	cmp	r3, r2
   29600:	bge	3eaac <GetDataSlab+0x1daa0>
   29604:	ldr	r3, [sp, #196]	; 0xc4
   29608:	ldr	r3, [r3]
   2960c:	cmp	r3, #0
   29610:	addne	r7, r7, r3, lsl #3
   29614:	addne	fp, fp, r3
   29618:	ldr	r3, [sp, #204]	; 0xcc
   2961c:	ldr	r3, [r3]
   29620:	str	r3, [sp, #8]
   29624:	cmp	r3, #0
   29628:	ble	2966c <GetDataSlab+0x8660>
   2962c:	ldr	r3, [sp, #4]
   29630:	ldr	r2, [sp, #24]
   29634:	add	r5, r3, r2, lsl #2
   29638:	mov	r4, #0
   2963c:	ldrd	r0, [r7]
   29640:	bl	51d94 <__aeabi_l2f>
   29644:	str	r0, [r5], #4
   29648:	ldr	r3, [r8]
   2964c:	add	r7, r7, r3, lsl #3
   29650:	add	fp, fp, r3
   29654:	add	r4, r4, #1
   29658:	ldr	r3, [sp, #204]	; 0xcc
   2965c:	ldr	r3, [r3]
   29660:	str	r3, [sp, #8]
   29664:	cmp	r3, r4
   29668:	bgt	2963c <GetDataSlab+0x8630>
   2966c:	ldr	r3, [r8]
   29670:	ldr	r2, [sp, #8]
   29674:	mul	r3, r3, r2
   29678:	ldr	r2, [sp, #192]	; 0xc0
   2967c:	ldr	r2, [r2]
   29680:	sub	r3, r2, r3
   29684:	ldr	r2, [sp, #196]	; 0xc4
   29688:	ldr	r2, [r2]
   2968c:	sub	r3, r3, r2
   29690:	add	fp, fp, r3
   29694:	add	r7, r7, r3, lsl #3
   29698:	ldr	r3, [sp, #208]	; 0xd0
   2969c:	cmp	r3, #1
   296a0:	ble	295e8 <GetDataSlab+0x85dc>
   296a4:	ldr	r3, [sp, #76]	; 0x4c
   296a8:	add	r3, r3, #1
   296ac:	str	r3, [sp, #76]	; 0x4c
   296b0:	ldr	r2, [sp, #204]	; 0xcc
   296b4:	ldr	r1, [r2, #4]
   296b8:	mov	r0, r3
   296bc:	bl	517e8 <__aeabi_idivmod>
   296c0:	cmp	r1, #0
   296c4:	bne	295d0 <GetDataSlab+0x85c4>
   296c8:	add	r5, sp, #76	; 0x4c
   296cc:	ldr	r3, [sp, #204]	; 0xcc
   296d0:	add	r3, r3, #4
   296d4:	str	r3, [sp, #12]
   296d8:	ldr	r3, [sp, #196]	; 0xc4
   296dc:	add	r9, r3, #4
   296e0:	add	r6, sp, #112	; 0x70
   296e4:	mov	sl, #1
   296e8:	b	2958c <GetDataSlab+0x8580>
   296ec:	mov	fp, #0
   296f0:	b	3eb70 <GetDataSlab+0x1db64>
   296f4:	ldr	r3, [sp, #20]
   296f8:	cmp	r3, #0
   296fc:	ble	3d410 <GetDataSlab+0x1c404>
   29700:	mov	r3, #0
   29704:	str	r3, [sp, #16]
   29708:	b	297dc <GetDataSlab+0x87d0>
   2970c:	ldr	r2, [r8]
   29710:	cmp	r2, #0
   29714:	beq	2972c <GetDataSlab+0x8720>
   29718:	ldr	r3, [sp, #12]
   2971c:	ldr	r3, [r3, #-4]
   29720:	mul	r3, r3, r2
   29724:	add	r7, r7, r3, lsl #3
   29728:	add	fp, fp, r3
   2972c:	add	r9, r9, #1
   29730:	ldr	r3, [sp, #208]	; 0xd0
   29734:	cmp	r3, r9
   29738:	beq	297c4 <GetDataSlab+0x87b8>
   2973c:	ldr	r3, [r5]
   29740:	add	r3, r3, #1
   29744:	str	r3, [r5]
   29748:	add	r8, r8, #4
   2974c:	ldr	r2, [sp, #8]
   29750:	ldr	r1, [r2, #4]!
   29754:	str	r2, [sp, #8]
   29758:	mov	r0, r3
   2975c:	bl	517e8 <__aeabi_idivmod>
   29760:	cmp	r1, #0
   29764:	bne	297b0 <GetDataSlab+0x87a4>
   29768:	mov	r3, #0
   2976c:	str	r3, [r5], #4
   29770:	add	r6, r6, #4
   29774:	str	r6, [sp, #12]
   29778:	ldr	r4, [r6]
   2977c:	mov	r1, r4
   29780:	mov	r0, fp
   29784:	bl	517e8 <__aeabi_idivmod>
   29788:	subs	r3, r1, #0
   2978c:	beq	2970c <GetDataSlab+0x8700>
   29790:	ldr	r2, [r6, #-4]
   29794:	ldr	r1, [r8]
   29798:	sub	r3, r4, r3
   2979c:	mla	r3, r1, r2, r3
   297a0:	add	r7, r7, r3, lsl #3
   297a4:	add	fp, fp, r3
   297a8:	b	2972c <GetDataSlab+0x8720>
   297ac:	ldr	r9, [sp, #28]
   297b0:	add	r3, sp, #152	; 0x98
   297b4:	add	r3, r3, r9, lsl #2
   297b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   297bc:	add	fp, fp, r3
   297c0:	add	r7, r7, r3, lsl #3
   297c4:	ldr	r3, [sp, #16]
   297c8:	add	r3, r3, sl
   297cc:	str	r3, [sp, #16]
   297d0:	ldr	r2, [sp, #20]
   297d4:	cmp	r3, r2
   297d8:	bge	298a4 <GetDataSlab+0x8898>
   297dc:	ldr	r3, [sp, #196]	; 0xc4
   297e0:	ldr	r3, [r3]
   297e4:	cmp	r3, #0
   297e8:	addne	r7, r7, r3, lsl #3
   297ec:	addne	fp, fp, r3
   297f0:	ldr	r3, [sp, #204]	; 0xcc
   297f4:	ldr	sl, [r3]
   297f8:	cmp	sl, #0
   297fc:	ble	29834 <GetDataSlab+0x8828>
   29800:	sub	r6, r7, #8
   29804:	ldr	r3, [sp, #4]
   29808:	ldr	r2, [sp, #16]
   2980c:	add	r5, r3, r2, lsl #2
   29810:	mov	r4, #0
   29814:	ldrd	r0, [r6, #8]!
   29818:	bl	51d84 <__aeabi_ul2f>
   2981c:	str	r0, [r5], #4
   29820:	add	r4, r4, #1
   29824:	ldr	r3, [sp, #204]	; 0xcc
   29828:	ldr	sl, [r3]
   2982c:	cmp	sl, r4
   29830:	bgt	29814 <GetDataSlab+0x8808>
   29834:	ldr	r3, [sp, #192]	; 0xc0
   29838:	ldr	r2, [r3]
   2983c:	ldr	r3, [sp, #196]	; 0xc4
   29840:	ldr	r3, [r3]
   29844:	sub	r3, r2, r3
   29848:	add	fp, fp, r3
   2984c:	add	r7, r7, r3, lsl #3
   29850:	ldr	r3, [sp, #208]	; 0xd0
   29854:	cmp	r3, #1
   29858:	ble	297c4 <GetDataSlab+0x87b8>
   2985c:	ldr	r3, [sp, #76]	; 0x4c
   29860:	add	r3, r3, #1
   29864:	str	r3, [sp, #76]	; 0x4c
   29868:	ldr	r2, [sp, #204]	; 0xcc
   2986c:	ldr	r1, [r2, #4]
   29870:	mov	r0, r3
   29874:	bl	517e8 <__aeabi_idivmod>
   29878:	cmp	r1, #0
   2987c:	bne	297ac <GetDataSlab+0x87a0>
   29880:	add	r5, sp, #76	; 0x4c
   29884:	ldr	r3, [sp, #204]	; 0xcc
   29888:	add	r3, r3, #4
   2988c:	str	r3, [sp, #8]
   29890:	ldr	r3, [sp, #196]	; 0xc4
   29894:	add	r8, r3, #4
   29898:	add	r6, sp, #112	; 0x70
   2989c:	ldr	r9, [sp, #28]
   298a0:	b	29768 <GetDataSlab+0x875c>
   298a4:	mov	r3, #0
   298a8:	b	24fa8 <GetDataSlab+0x3f9c>
   298ac:	ldr	r2, [r9]
   298b0:	cmp	r2, #0
   298b4:	beq	298cc <GetDataSlab+0x88c0>
   298b8:	ldr	r3, [sp, #16]
   298bc:	ldr	r3, [r3, #-4]
   298c0:	mul	r3, r3, r2
   298c4:	add	r7, r7, r3, lsl #3
   298c8:	add	fp, fp, r3
   298cc:	add	sl, sl, #1
   298d0:	ldr	r3, [sp, #208]	; 0xd0
   298d4:	cmp	r3, sl
   298d8:	beq	29964 <GetDataSlab+0x8958>
   298dc:	ldr	r3, [r5]
   298e0:	add	r3, r3, #1
   298e4:	str	r3, [r5]
   298e8:	add	r9, r9, #4
   298ec:	ldr	r2, [sp, #12]
   298f0:	ldr	r1, [r2, #4]!
   298f4:	str	r2, [sp, #12]
   298f8:	mov	r0, r3
   298fc:	bl	517e8 <__aeabi_idivmod>
   29900:	cmp	r1, #0
   29904:	bne	29950 <GetDataSlab+0x8944>
   29908:	mov	r3, #0
   2990c:	str	r3, [r5], #4
   29910:	add	r6, r6, #4
   29914:	str	r6, [sp, #16]
   29918:	ldr	r4, [r6]
   2991c:	mov	r1, r4
   29920:	mov	r0, fp
   29924:	bl	517e8 <__aeabi_idivmod>
   29928:	subs	r3, r1, #0
   2992c:	beq	298ac <GetDataSlab+0x88a0>
   29930:	ldr	r2, [r6, #-4]
   29934:	ldr	r1, [r9]
   29938:	sub	r3, r4, r3
   2993c:	mla	r3, r1, r2, r3
   29940:	add	r7, r7, r3, lsl #3
   29944:	add	fp, fp, r3
   29948:	b	298cc <GetDataSlab+0x88c0>
   2994c:	mov	sl, #1
   29950:	add	r3, sp, #152	; 0x98
   29954:	add	r3, r3, sl, lsl #2
   29958:	ldr	r3, [r3, #-120]	; 0xffffff88
   2995c:	add	fp, fp, r3
   29960:	add	r7, r7, r3, lsl #3
   29964:	ldr	r3, [sp, #24]
   29968:	ldr	r2, [sp, #8]
   2996c:	add	r3, r3, r2
   29970:	str	r3, [sp, #24]
   29974:	ldr	r2, [sp, #20]
   29978:	cmp	r3, r2
   2997c:	bge	29a68 <GetDataSlab+0x8a5c>
   29980:	ldr	r3, [sp, #196]	; 0xc4
   29984:	ldr	r3, [r3]
   29988:	cmp	r3, #0
   2998c:	addne	r7, r7, r3, lsl #3
   29990:	addne	fp, fp, r3
   29994:	ldr	r3, [sp, #204]	; 0xcc
   29998:	ldr	r3, [r3]
   2999c:	str	r3, [sp, #8]
   299a0:	cmp	r3, #0
   299a4:	ble	299e8 <GetDataSlab+0x89dc>
   299a8:	ldr	r3, [sp, #4]
   299ac:	ldr	r2, [sp, #24]
   299b0:	add	r5, r3, r2, lsl #2
   299b4:	mov	r4, #0
   299b8:	ldrd	r0, [r7]
   299bc:	bl	51d84 <__aeabi_ul2f>
   299c0:	str	r0, [r5], #4
   299c4:	ldr	r3, [r8]
   299c8:	add	r7, r7, r3, lsl #3
   299cc:	add	fp, fp, r3
   299d0:	add	r4, r4, #1
   299d4:	ldr	r3, [sp, #204]	; 0xcc
   299d8:	ldr	r3, [r3]
   299dc:	str	r3, [sp, #8]
   299e0:	cmp	r3, r4
   299e4:	bgt	299b8 <GetDataSlab+0x89ac>
   299e8:	ldr	r3, [r8]
   299ec:	ldr	r2, [sp, #8]
   299f0:	mul	r3, r3, r2
   299f4:	ldr	r2, [sp, #192]	; 0xc0
   299f8:	ldr	r2, [r2]
   299fc:	sub	r3, r2, r3
   29a00:	ldr	r2, [sp, #196]	; 0xc4
   29a04:	ldr	r2, [r2]
   29a08:	sub	r3, r3, r2
   29a0c:	add	fp, fp, r3
   29a10:	add	r7, r7, r3, lsl #3
   29a14:	ldr	r3, [sp, #208]	; 0xd0
   29a18:	cmp	r3, #1
   29a1c:	ble	29964 <GetDataSlab+0x8958>
   29a20:	ldr	r3, [sp, #76]	; 0x4c
   29a24:	add	r3, r3, #1
   29a28:	str	r3, [sp, #76]	; 0x4c
   29a2c:	ldr	r2, [sp, #204]	; 0xcc
   29a30:	ldr	r1, [r2, #4]
   29a34:	mov	r0, r3
   29a38:	bl	517e8 <__aeabi_idivmod>
   29a3c:	cmp	r1, #0
   29a40:	bne	2994c <GetDataSlab+0x8940>
   29a44:	add	r5, sp, #76	; 0x4c
   29a48:	ldr	r3, [sp, #204]	; 0xcc
   29a4c:	add	r3, r3, #4
   29a50:	str	r3, [sp, #12]
   29a54:	ldr	r3, [sp, #196]	; 0xc4
   29a58:	add	r9, r3, #4
   29a5c:	add	r6, sp, #112	; 0x70
   29a60:	mov	sl, #1
   29a64:	b	29908 <GetDataSlab+0x88fc>
   29a68:	mov	r3, #0
   29a6c:	b	24fa8 <GetDataSlab+0x3f9c>
   29a70:	sub	r3, r4, #1
   29a74:	cmp	r3, #8
   29a78:	addls	pc, pc, r3, lsl #2
   29a7c:	b	2b9fc <GetDataSlab+0xa9f0>
   29a80:	b	2b22c <GetDataSlab+0xa220>
   29a84:	b	2b614 <GetDataSlab+0xa608>
   29a88:	b	2aa5c <GetDataSlab+0x9a50>
   29a8c:	b	2ae44 <GetDataSlab+0x9e38>
   29a90:	b	2a274 <GetDataSlab+0x9268>
   29a94:	b	2a664 <GetDataSlab+0x9658>
   29a98:	b	29e8c <GetDataSlab+0x8e80>
   29a9c:	b	2b9fc <GetDataSlab+0xa9f0>
   29aa0:	b	29aa4 <GetDataSlab+0x8a98>
   29aa4:	ldr	r3, [r8]
   29aa8:	str	r3, [sp, #28]
   29aac:	sub	r3, r3, #1
   29ab0:	str	r3, [sp, #32]
   29ab4:	ldr	r3, [sp, #192]	; 0xc0
   29ab8:	ldr	r3, [r3]
   29abc:	str	r3, [sp, #112]	; 0x70
   29ac0:	ldr	r3, [sp, #204]	; 0xcc
   29ac4:	ldr	r3, [r3]
   29ac8:	str	r3, [sp, #20]
   29acc:	ldr	r3, [sp, #208]	; 0xd0
   29ad0:	cmp	r3, #1
   29ad4:	ble	29b08 <GetDataSlab+0x8afc>
   29ad8:	str	r8, [sp, #16]
   29adc:	add	sl, sp, #36	; 0x24
   29ae0:	ldr	lr, [sp, #192]	; 0xc0
   29ae4:	add	r9, sp, #112	; 0x70
   29ae8:	ldr	r3, [sp, #204]	; 0xcc
   29aec:	add	r5, r3, #4
   29af0:	ldr	r3, [sp, #196]	; 0xc4
   29af4:	add	r4, r3, #4
   29af8:	str	lr, [sp, #12]
   29afc:	mov	r6, #2
   29b00:	mov	fp, #0
   29b04:	b	3ebd0 <GetDataSlab+0x1dbc4>
   29b08:	mov	fp, #0
   29b0c:	b	3ec5c <GetDataSlab+0x1dc50>
   29b10:	ldr	r3, [sp, #20]
   29b14:	cmp	r3, #0
   29b18:	ble	3d418 <GetDataSlab+0x1c40c>
   29b1c:	mov	r3, #0
   29b20:	str	r3, [sp, #16]
   29b24:	b	29bf8 <GetDataSlab+0x8bec>
   29b28:	ldr	r2, [r8]
   29b2c:	cmp	r2, #0
   29b30:	beq	29b48 <GetDataSlab+0x8b3c>
   29b34:	ldr	r3, [sp, #12]
   29b38:	ldr	r3, [r3, #-4]
   29b3c:	mul	r3, r3, r2
   29b40:	add	r7, r7, r3, lsl #3
   29b44:	add	fp, fp, r3
   29b48:	add	r9, r9, #1
   29b4c:	ldr	r3, [sp, #208]	; 0xd0
   29b50:	cmp	r3, r9
   29b54:	beq	29be0 <GetDataSlab+0x8bd4>
   29b58:	ldr	r3, [r5]
   29b5c:	add	r3, r3, #1
   29b60:	str	r3, [r5]
   29b64:	add	r8, r8, #4
   29b68:	ldr	r2, [sp, #8]
   29b6c:	ldr	r1, [r2, #4]!
   29b70:	str	r2, [sp, #8]
   29b74:	mov	r0, r3
   29b78:	bl	517e8 <__aeabi_idivmod>
   29b7c:	cmp	r1, #0
   29b80:	bne	29bcc <GetDataSlab+0x8bc0>
   29b84:	mov	r3, #0
   29b88:	str	r3, [r5], #4
   29b8c:	add	r6, r6, #4
   29b90:	str	r6, [sp, #12]
   29b94:	ldr	r4, [r6]
   29b98:	mov	r1, r4
   29b9c:	mov	r0, fp
   29ba0:	bl	517e8 <__aeabi_idivmod>
   29ba4:	subs	r3, r1, #0
   29ba8:	beq	29b28 <GetDataSlab+0x8b1c>
   29bac:	ldr	r2, [r6, #-4]
   29bb0:	ldr	r1, [r8]
   29bb4:	sub	r3, r4, r3
   29bb8:	mla	r3, r1, r2, r3
   29bbc:	add	r7, r7, r3, lsl #3
   29bc0:	add	fp, fp, r3
   29bc4:	b	29b48 <GetDataSlab+0x8b3c>
   29bc8:	ldr	r9, [sp, #28]
   29bcc:	add	r3, sp, #152	; 0x98
   29bd0:	add	r3, r3, r9, lsl #2
   29bd4:	ldr	r3, [r3, #-120]	; 0xffffff88
   29bd8:	add	fp, fp, r3
   29bdc:	add	r7, r7, r3, lsl #3
   29be0:	ldr	r3, [sp, #16]
   29be4:	add	r3, r3, sl
   29be8:	str	r3, [sp, #16]
   29bec:	ldr	r2, [sp, #20]
   29bf0:	cmp	r3, r2
   29bf4:	bge	29cc0 <GetDataSlab+0x8cb4>
   29bf8:	ldr	r3, [sp, #196]	; 0xc4
   29bfc:	ldr	r3, [r3]
   29c00:	cmp	r3, #0
   29c04:	addne	r7, r7, r3, lsl #3
   29c08:	addne	fp, fp, r3
   29c0c:	ldr	r3, [sp, #204]	; 0xcc
   29c10:	ldr	sl, [r3]
   29c14:	cmp	sl, #0
   29c18:	ble	29c50 <GetDataSlab+0x8c44>
   29c1c:	mov	r6, r7
   29c20:	ldr	r3, [sp, #4]
   29c24:	ldr	r2, [sp, #16]
   29c28:	add	r5, r3, r2, lsl #3
   29c2c:	mov	r4, #0
   29c30:	ldrd	r0, [r6], #8
   29c34:	bl	51e4c <__aeabi_d2lz>
   29c38:	strd	r0, [r5], #8
   29c3c:	add	r4, r4, #1
   29c40:	ldr	r3, [sp, #204]	; 0xcc
   29c44:	ldr	sl, [r3]
   29c48:	cmp	sl, r4
   29c4c:	bgt	29c30 <GetDataSlab+0x8c24>
   29c50:	ldr	r3, [sp, #192]	; 0xc0
   29c54:	ldr	r2, [r3]
   29c58:	ldr	r3, [sp, #196]	; 0xc4
   29c5c:	ldr	r3, [r3]
   29c60:	sub	r3, r2, r3
   29c64:	add	fp, fp, r3
   29c68:	add	r7, r7, r3, lsl #3
   29c6c:	ldr	r3, [sp, #208]	; 0xd0
   29c70:	cmp	r3, #1
   29c74:	ble	29be0 <GetDataSlab+0x8bd4>
   29c78:	ldr	r3, [sp, #76]	; 0x4c
   29c7c:	add	r3, r3, #1
   29c80:	str	r3, [sp, #76]	; 0x4c
   29c84:	ldr	r2, [sp, #204]	; 0xcc
   29c88:	ldr	r1, [r2, #4]
   29c8c:	mov	r0, r3
   29c90:	bl	517e8 <__aeabi_idivmod>
   29c94:	cmp	r1, #0
   29c98:	bne	29bc8 <GetDataSlab+0x8bbc>
   29c9c:	add	r5, sp, #76	; 0x4c
   29ca0:	ldr	r3, [sp, #204]	; 0xcc
   29ca4:	add	r3, r3, #4
   29ca8:	str	r3, [sp, #8]
   29cac:	ldr	r3, [sp, #196]	; 0xc4
   29cb0:	add	r8, r3, #4
   29cb4:	add	r6, sp, #112	; 0x70
   29cb8:	ldr	r9, [sp, #28]
   29cbc:	b	29b84 <GetDataSlab+0x8b78>
   29cc0:	mov	r3, #0
   29cc4:	b	24fa8 <GetDataSlab+0x3f9c>
   29cc8:	ldr	r2, [r9]
   29ccc:	cmp	r2, #0
   29cd0:	beq	29ce8 <GetDataSlab+0x8cdc>
   29cd4:	ldr	r3, [sp, #16]
   29cd8:	ldr	r3, [r3, #-4]
   29cdc:	mul	r3, r3, r2
   29ce0:	add	r7, r7, r3, lsl #3
   29ce4:	add	fp, fp, r3
   29ce8:	add	sl, sl, #1
   29cec:	ldr	r3, [sp, #208]	; 0xd0
   29cf0:	cmp	r3, sl
   29cf4:	beq	29d80 <GetDataSlab+0x8d74>
   29cf8:	ldr	r3, [r5]
   29cfc:	add	r3, r3, #1
   29d00:	str	r3, [r5]
   29d04:	add	r9, r9, #4
   29d08:	ldr	r2, [sp, #12]
   29d0c:	ldr	r1, [r2, #4]!
   29d10:	str	r2, [sp, #12]
   29d14:	mov	r0, r3
   29d18:	bl	517e8 <__aeabi_idivmod>
   29d1c:	cmp	r1, #0
   29d20:	bne	29d6c <GetDataSlab+0x8d60>
   29d24:	mov	r3, #0
   29d28:	str	r3, [r5], #4
   29d2c:	add	r6, r6, #4
   29d30:	str	r6, [sp, #16]
   29d34:	ldr	r4, [r6]
   29d38:	mov	r1, r4
   29d3c:	mov	r0, fp
   29d40:	bl	517e8 <__aeabi_idivmod>
   29d44:	subs	r3, r1, #0
   29d48:	beq	29cc8 <GetDataSlab+0x8cbc>
   29d4c:	ldr	r2, [r6, #-4]
   29d50:	ldr	r1, [r9]
   29d54:	sub	r3, r4, r3
   29d58:	mla	r3, r1, r2, r3
   29d5c:	add	r7, r7, r3, lsl #3
   29d60:	add	fp, fp, r3
   29d64:	b	29ce8 <GetDataSlab+0x8cdc>
   29d68:	mov	sl, #1
   29d6c:	add	r3, sp, #152	; 0x98
   29d70:	add	r3, r3, sl, lsl #2
   29d74:	ldr	r3, [r3, #-120]	; 0xffffff88
   29d78:	add	fp, fp, r3
   29d7c:	add	r7, r7, r3, lsl #3
   29d80:	ldr	r3, [sp, #24]
   29d84:	ldr	r2, [sp, #8]
   29d88:	add	r3, r3, r2
   29d8c:	str	r3, [sp, #24]
   29d90:	ldr	r2, [sp, #20]
   29d94:	cmp	r3, r2
   29d98:	bge	29e84 <GetDataSlab+0x8e78>
   29d9c:	ldr	r3, [sp, #196]	; 0xc4
   29da0:	ldr	r3, [r3]
   29da4:	cmp	r3, #0
   29da8:	addne	r7, r7, r3, lsl #3
   29dac:	addne	fp, fp, r3
   29db0:	ldr	r3, [sp, #204]	; 0xcc
   29db4:	ldr	r3, [r3]
   29db8:	str	r3, [sp, #8]
   29dbc:	cmp	r3, #0
   29dc0:	ble	29e04 <GetDataSlab+0x8df8>
   29dc4:	ldr	r3, [sp, #4]
   29dc8:	ldr	r2, [sp, #24]
   29dcc:	add	r5, r3, r2, lsl #3
   29dd0:	mov	r4, #0
   29dd4:	ldrd	r0, [r7]
   29dd8:	bl	51e4c <__aeabi_d2lz>
   29ddc:	strd	r0, [r5], #8
   29de0:	ldr	r3, [r8]
   29de4:	add	r7, r7, r3, lsl #3
   29de8:	add	fp, fp, r3
   29dec:	add	r4, r4, #1
   29df0:	ldr	r3, [sp, #204]	; 0xcc
   29df4:	ldr	r3, [r3]
   29df8:	str	r3, [sp, #8]
   29dfc:	cmp	r3, r4
   29e00:	bgt	29dd4 <GetDataSlab+0x8dc8>
   29e04:	ldr	r3, [r8]
   29e08:	ldr	r2, [sp, #8]
   29e0c:	mul	r3, r3, r2
   29e10:	ldr	r2, [sp, #192]	; 0xc0
   29e14:	ldr	r2, [r2]
   29e18:	sub	r3, r2, r3
   29e1c:	ldr	r2, [sp, #196]	; 0xc4
   29e20:	ldr	r2, [r2]
   29e24:	sub	r3, r3, r2
   29e28:	add	fp, fp, r3
   29e2c:	add	r7, r7, r3, lsl #3
   29e30:	ldr	r3, [sp, #208]	; 0xd0
   29e34:	cmp	r3, #1
   29e38:	ble	29d80 <GetDataSlab+0x8d74>
   29e3c:	ldr	r3, [sp, #76]	; 0x4c
   29e40:	add	r3, r3, #1
   29e44:	str	r3, [sp, #76]	; 0x4c
   29e48:	ldr	r2, [sp, #204]	; 0xcc
   29e4c:	ldr	r1, [r2, #4]
   29e50:	mov	r0, r3
   29e54:	bl	517e8 <__aeabi_idivmod>
   29e58:	cmp	r1, #0
   29e5c:	bne	29d68 <GetDataSlab+0x8d5c>
   29e60:	add	r5, sp, #76	; 0x4c
   29e64:	ldr	r3, [sp, #204]	; 0xcc
   29e68:	add	r3, r3, #4
   29e6c:	str	r3, [sp, #12]
   29e70:	ldr	r3, [sp, #196]	; 0xc4
   29e74:	add	r9, r3, #4
   29e78:	add	r6, sp, #112	; 0x70
   29e7c:	mov	sl, #1
   29e80:	b	29d24 <GetDataSlab+0x8d18>
   29e84:	mov	r3, #0
   29e88:	b	24fa8 <GetDataSlab+0x3f9c>
   29e8c:	ldr	r3, [r8]
   29e90:	str	r3, [sp, #28]
   29e94:	sub	r3, r3, #1
   29e98:	str	r3, [sp, #32]
   29e9c:	ldr	r3, [sp, #192]	; 0xc0
   29ea0:	ldr	r3, [r3]
   29ea4:	str	r3, [sp, #112]	; 0x70
   29ea8:	ldr	r3, [sp, #204]	; 0xcc
   29eac:	ldr	r3, [r3]
   29eb0:	str	r3, [sp, #20]
   29eb4:	ldr	r3, [sp, #208]	; 0xd0
   29eb8:	cmp	r3, #1
   29ebc:	ble	29ef0 <GetDataSlab+0x8ee4>
   29ec0:	str	r8, [sp, #16]
   29ec4:	add	sl, sp, #36	; 0x24
   29ec8:	ldr	lr, [sp, #192]	; 0xc0
   29ecc:	add	r9, sp, #112	; 0x70
   29ed0:	ldr	r3, [sp, #204]	; 0xcc
   29ed4:	add	r5, r3, #4
   29ed8:	ldr	r3, [sp, #196]	; 0xc4
   29edc:	add	r4, r3, #4
   29ee0:	str	lr, [sp, #12]
   29ee4:	mov	r6, #2
   29ee8:	mov	fp, #0
   29eec:	b	3ecbc <GetDataSlab+0x1dcb0>
   29ef0:	mov	fp, #0
   29ef4:	b	3ed48 <GetDataSlab+0x1dd3c>
   29ef8:	ldr	r3, [sp, #20]
   29efc:	cmp	r3, #0
   29f00:	ble	3d420 <GetDataSlab+0x1c414>
   29f04:	mov	r3, #0
   29f08:	str	r3, [sp, #16]
   29f0c:	b	29fe0 <GetDataSlab+0x8fd4>
   29f10:	ldr	r2, [r8]
   29f14:	cmp	r2, #0
   29f18:	beq	29f30 <GetDataSlab+0x8f24>
   29f1c:	ldr	r3, [sp, #12]
   29f20:	ldr	r3, [r3, #-4]
   29f24:	mul	r3, r3, r2
   29f28:	add	r7, r7, r3, lsl #2
   29f2c:	add	fp, fp, r3
   29f30:	add	r9, r9, #1
   29f34:	ldr	r3, [sp, #208]	; 0xd0
   29f38:	cmp	r3, r9
   29f3c:	beq	29fc8 <GetDataSlab+0x8fbc>
   29f40:	ldr	r3, [r5]
   29f44:	add	r3, r3, #1
   29f48:	str	r3, [r5]
   29f4c:	add	r8, r8, #4
   29f50:	ldr	r2, [sp, #8]
   29f54:	ldr	r1, [r2, #4]!
   29f58:	str	r2, [sp, #8]
   29f5c:	mov	r0, r3
   29f60:	bl	517e8 <__aeabi_idivmod>
   29f64:	cmp	r1, #0
   29f68:	bne	29fb4 <GetDataSlab+0x8fa8>
   29f6c:	mov	r3, #0
   29f70:	str	r3, [r5], #4
   29f74:	add	r6, r6, #4
   29f78:	str	r6, [sp, #12]
   29f7c:	ldr	r4, [r6]
   29f80:	mov	r1, r4
   29f84:	mov	r0, fp
   29f88:	bl	517e8 <__aeabi_idivmod>
   29f8c:	subs	r3, r1, #0
   29f90:	beq	29f10 <GetDataSlab+0x8f04>
   29f94:	ldr	r2, [r6, #-4]
   29f98:	ldr	r1, [r8]
   29f9c:	sub	r3, r4, r3
   29fa0:	mla	r3, r1, r2, r3
   29fa4:	add	r7, r7, r3, lsl #2
   29fa8:	add	fp, fp, r3
   29fac:	b	29f30 <GetDataSlab+0x8f24>
   29fb0:	ldr	r9, [sp, #28]
   29fb4:	add	r3, sp, #152	; 0x98
   29fb8:	add	r3, r3, r9, lsl #2
   29fbc:	ldr	r3, [r3, #-120]	; 0xffffff88
   29fc0:	add	fp, fp, r3
   29fc4:	add	r7, r7, r3, lsl #2
   29fc8:	ldr	r3, [sp, #16]
   29fcc:	add	r3, r3, sl
   29fd0:	str	r3, [sp, #16]
   29fd4:	ldr	r2, [sp, #20]
   29fd8:	cmp	r3, r2
   29fdc:	bge	2a0a8 <GetDataSlab+0x909c>
   29fe0:	ldr	r3, [sp, #196]	; 0xc4
   29fe4:	ldr	r3, [r3]
   29fe8:	cmp	r3, #0
   29fec:	addne	r7, r7, r3, lsl #2
   29ff0:	addne	fp, fp, r3
   29ff4:	ldr	r3, [sp, #204]	; 0xcc
   29ff8:	ldr	sl, [r3]
   29ffc:	cmp	sl, #0
   2a000:	ble	2a038 <GetDataSlab+0x902c>
   2a004:	mov	r6, r7
   2a008:	ldr	r3, [sp, #4]
   2a00c:	ldr	r2, [sp, #16]
   2a010:	add	r5, r3, r2, lsl #3
   2a014:	mov	r4, #0
   2a018:	ldr	r0, [r6], #4
   2a01c:	bl	51e20 <__aeabi_f2lz>
   2a020:	strd	r0, [r5], #8
   2a024:	add	r4, r4, #1
   2a028:	ldr	r3, [sp, #204]	; 0xcc
   2a02c:	ldr	sl, [r3]
   2a030:	cmp	sl, r4
   2a034:	bgt	2a018 <GetDataSlab+0x900c>
   2a038:	ldr	r3, [sp, #192]	; 0xc0
   2a03c:	ldr	r2, [r3]
   2a040:	ldr	r3, [sp, #196]	; 0xc4
   2a044:	ldr	r3, [r3]
   2a048:	sub	r3, r2, r3
   2a04c:	add	fp, fp, r3
   2a050:	add	r7, r7, r3, lsl #2
   2a054:	ldr	r3, [sp, #208]	; 0xd0
   2a058:	cmp	r3, #1
   2a05c:	ble	29fc8 <GetDataSlab+0x8fbc>
   2a060:	ldr	r3, [sp, #76]	; 0x4c
   2a064:	add	r3, r3, #1
   2a068:	str	r3, [sp, #76]	; 0x4c
   2a06c:	ldr	r2, [sp, #204]	; 0xcc
   2a070:	ldr	r1, [r2, #4]
   2a074:	mov	r0, r3
   2a078:	bl	517e8 <__aeabi_idivmod>
   2a07c:	cmp	r1, #0
   2a080:	bne	29fb0 <GetDataSlab+0x8fa4>
   2a084:	add	r5, sp, #76	; 0x4c
   2a088:	ldr	r3, [sp, #204]	; 0xcc
   2a08c:	add	r3, r3, #4
   2a090:	str	r3, [sp, #8]
   2a094:	ldr	r3, [sp, #196]	; 0xc4
   2a098:	add	r8, r3, #4
   2a09c:	add	r6, sp, #112	; 0x70
   2a0a0:	ldr	r9, [sp, #28]
   2a0a4:	b	29f6c <GetDataSlab+0x8f60>
   2a0a8:	mov	r3, #0
   2a0ac:	b	24fa8 <GetDataSlab+0x3f9c>
   2a0b0:	ldr	r2, [r9]
   2a0b4:	cmp	r2, #0
   2a0b8:	beq	2a0d0 <GetDataSlab+0x90c4>
   2a0bc:	ldr	r3, [sp, #16]
   2a0c0:	ldr	r3, [r3, #-4]
   2a0c4:	mul	r3, r3, r2
   2a0c8:	add	r7, r7, r3, lsl #2
   2a0cc:	add	fp, fp, r3
   2a0d0:	add	sl, sl, #1
   2a0d4:	ldr	r3, [sp, #208]	; 0xd0
   2a0d8:	cmp	r3, sl
   2a0dc:	beq	2a168 <GetDataSlab+0x915c>
   2a0e0:	ldr	r3, [r5]
   2a0e4:	add	r3, r3, #1
   2a0e8:	str	r3, [r5]
   2a0ec:	add	r9, r9, #4
   2a0f0:	ldr	r2, [sp, #12]
   2a0f4:	ldr	r1, [r2, #4]!
   2a0f8:	str	r2, [sp, #12]
   2a0fc:	mov	r0, r3
   2a100:	bl	517e8 <__aeabi_idivmod>
   2a104:	cmp	r1, #0
   2a108:	bne	2a154 <GetDataSlab+0x9148>
   2a10c:	mov	r3, #0
   2a110:	str	r3, [r5], #4
   2a114:	add	r6, r6, #4
   2a118:	str	r6, [sp, #16]
   2a11c:	ldr	r4, [r6]
   2a120:	mov	r1, r4
   2a124:	mov	r0, fp
   2a128:	bl	517e8 <__aeabi_idivmod>
   2a12c:	subs	r3, r1, #0
   2a130:	beq	2a0b0 <GetDataSlab+0x90a4>
   2a134:	ldr	r2, [r6, #-4]
   2a138:	ldr	r1, [r9]
   2a13c:	sub	r3, r4, r3
   2a140:	mla	r3, r1, r2, r3
   2a144:	add	r7, r7, r3, lsl #2
   2a148:	add	fp, fp, r3
   2a14c:	b	2a0d0 <GetDataSlab+0x90c4>
   2a150:	mov	sl, #1
   2a154:	add	r3, sp, #152	; 0x98
   2a158:	add	r3, r3, sl, lsl #2
   2a15c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a160:	add	fp, fp, r3
   2a164:	add	r7, r7, r3, lsl #2
   2a168:	ldr	r3, [sp, #24]
   2a16c:	ldr	r2, [sp, #8]
   2a170:	add	r3, r3, r2
   2a174:	str	r3, [sp, #24]
   2a178:	ldr	r2, [sp, #20]
   2a17c:	cmp	r3, r2
   2a180:	bge	2a26c <GetDataSlab+0x9260>
   2a184:	ldr	r3, [sp, #196]	; 0xc4
   2a188:	ldr	r3, [r3]
   2a18c:	cmp	r3, #0
   2a190:	addne	r7, r7, r3, lsl #2
   2a194:	addne	fp, fp, r3
   2a198:	ldr	r3, [sp, #204]	; 0xcc
   2a19c:	ldr	r3, [r3]
   2a1a0:	str	r3, [sp, #8]
   2a1a4:	cmp	r3, #0
   2a1a8:	ble	2a1ec <GetDataSlab+0x91e0>
   2a1ac:	ldr	r3, [sp, #4]
   2a1b0:	ldr	r2, [sp, #24]
   2a1b4:	add	r5, r3, r2, lsl #3
   2a1b8:	mov	r4, #0
   2a1bc:	ldr	r0, [r7]
   2a1c0:	bl	51e20 <__aeabi_f2lz>
   2a1c4:	strd	r0, [r5], #8
   2a1c8:	ldr	r3, [r8]
   2a1cc:	add	r7, r7, r3, lsl #2
   2a1d0:	add	fp, fp, r3
   2a1d4:	add	r4, r4, #1
   2a1d8:	ldr	r3, [sp, #204]	; 0xcc
   2a1dc:	ldr	r3, [r3]
   2a1e0:	str	r3, [sp, #8]
   2a1e4:	cmp	r3, r4
   2a1e8:	bgt	2a1bc <GetDataSlab+0x91b0>
   2a1ec:	ldr	r3, [r8]
   2a1f0:	ldr	r2, [sp, #8]
   2a1f4:	mul	r3, r3, r2
   2a1f8:	ldr	r2, [sp, #192]	; 0xc0
   2a1fc:	ldr	r2, [r2]
   2a200:	sub	r3, r2, r3
   2a204:	ldr	r2, [sp, #196]	; 0xc4
   2a208:	ldr	r2, [r2]
   2a20c:	sub	r3, r3, r2
   2a210:	add	fp, fp, r3
   2a214:	add	r7, r7, r3, lsl #2
   2a218:	ldr	r3, [sp, #208]	; 0xd0
   2a21c:	cmp	r3, #1
   2a220:	ble	2a168 <GetDataSlab+0x915c>
   2a224:	ldr	r3, [sp, #76]	; 0x4c
   2a228:	add	r3, r3, #1
   2a22c:	str	r3, [sp, #76]	; 0x4c
   2a230:	ldr	r2, [sp, #204]	; 0xcc
   2a234:	ldr	r1, [r2, #4]
   2a238:	mov	r0, r3
   2a23c:	bl	517e8 <__aeabi_idivmod>
   2a240:	cmp	r1, #0
   2a244:	bne	2a150 <GetDataSlab+0x9144>
   2a248:	add	r5, sp, #76	; 0x4c
   2a24c:	ldr	r3, [sp, #204]	; 0xcc
   2a250:	add	r3, r3, #4
   2a254:	str	r3, [sp, #12]
   2a258:	ldr	r3, [sp, #196]	; 0xc4
   2a25c:	add	r9, r3, #4
   2a260:	add	r6, sp, #112	; 0x70
   2a264:	mov	sl, #1
   2a268:	b	2a10c <GetDataSlab+0x9100>
   2a26c:	mov	r3, #0
   2a270:	b	24fa8 <GetDataSlab+0x3f9c>
   2a274:	ldr	r3, [r8]
   2a278:	str	r3, [sp, #28]
   2a27c:	sub	r3, r3, #1
   2a280:	str	r3, [sp, #32]
   2a284:	ldr	r3, [sp, #192]	; 0xc0
   2a288:	ldr	r3, [r3]
   2a28c:	str	r3, [sp, #112]	; 0x70
   2a290:	ldr	r3, [sp, #204]	; 0xcc
   2a294:	ldr	r3, [r3]
   2a298:	str	r3, [sp, #20]
   2a29c:	ldr	r3, [sp, #208]	; 0xd0
   2a2a0:	cmp	r3, #1
   2a2a4:	ble	2a2d8 <GetDataSlab+0x92cc>
   2a2a8:	str	r8, [sp, #16]
   2a2ac:	add	sl, sp, #36	; 0x24
   2a2b0:	ldr	lr, [sp, #192]	; 0xc0
   2a2b4:	add	r9, sp, #112	; 0x70
   2a2b8:	ldr	r3, [sp, #204]	; 0xcc
   2a2bc:	add	r5, r3, #4
   2a2c0:	ldr	r3, [sp, #196]	; 0xc4
   2a2c4:	add	r4, r3, #4
   2a2c8:	str	lr, [sp, #12]
   2a2cc:	mov	r6, #2
   2a2d0:	mov	fp, #0
   2a2d4:	b	3eda8 <GetDataSlab+0x1dd9c>
   2a2d8:	mov	fp, #0
   2a2dc:	b	3ee34 <GetDataSlab+0x1de28>
   2a2e0:	ldr	r3, [sp, #20]
   2a2e4:	cmp	r3, #0
   2a2e8:	ble	3d428 <GetDataSlab+0x1c41c>
   2a2ec:	mov	r3, #0
   2a2f0:	str	r3, [sp, #16]
   2a2f4:	b	2a3c8 <GetDataSlab+0x93bc>
   2a2f8:	ldr	r2, [r8]
   2a2fc:	cmp	r2, #0
   2a300:	beq	2a318 <GetDataSlab+0x930c>
   2a304:	ldr	r3, [sp, #12]
   2a308:	ldr	r3, [r3, #-4]
   2a30c:	mul	r3, r3, r2
   2a310:	add	r5, r5, r3, lsl #2
   2a314:	add	fp, fp, r3
   2a318:	add	r9, r9, #1
   2a31c:	ldr	r3, [sp, #208]	; 0xd0
   2a320:	cmp	r3, r9
   2a324:	beq	2a3b0 <GetDataSlab+0x93a4>
   2a328:	ldr	r3, [r6]
   2a32c:	add	r3, r3, #1
   2a330:	str	r3, [r6]
   2a334:	add	r8, r8, #4
   2a338:	ldr	r2, [sp, #8]
   2a33c:	ldr	r1, [r2, #4]!
   2a340:	str	r2, [sp, #8]
   2a344:	mov	r0, r3
   2a348:	bl	517e8 <__aeabi_idivmod>
   2a34c:	cmp	r1, #0
   2a350:	bne	2a39c <GetDataSlab+0x9390>
   2a354:	mov	r3, #0
   2a358:	str	r3, [r6], #4
   2a35c:	add	r7, r7, #4
   2a360:	str	r7, [sp, #12]
   2a364:	ldr	r4, [r7]
   2a368:	mov	r1, r4
   2a36c:	mov	r0, fp
   2a370:	bl	517e8 <__aeabi_idivmod>
   2a374:	subs	r3, r1, #0
   2a378:	beq	2a2f8 <GetDataSlab+0x92ec>
   2a37c:	ldr	r2, [r7, #-4]
   2a380:	ldr	r1, [r8]
   2a384:	sub	r3, r4, r3
   2a388:	mla	r3, r1, r2, r3
   2a38c:	add	r5, r5, r3, lsl #2
   2a390:	add	fp, fp, r3
   2a394:	b	2a318 <GetDataSlab+0x930c>
   2a398:	ldr	r9, [sp, #28]
   2a39c:	add	r3, sp, #152	; 0x98
   2a3a0:	add	r3, r3, r9, lsl #2
   2a3a4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a3a8:	add	fp, fp, r3
   2a3ac:	add	r5, r5, r3, lsl #2
   2a3b0:	ldr	r3, [sp, #16]
   2a3b4:	add	r3, r3, sl
   2a3b8:	str	r3, [sp, #16]
   2a3bc:	ldr	r2, [sp, #20]
   2a3c0:	cmp	r3, r2
   2a3c4:	bge	2a494 <GetDataSlab+0x9488>
   2a3c8:	ldr	r3, [sp, #196]	; 0xc4
   2a3cc:	ldr	r3, [r3]
   2a3d0:	cmp	r3, #0
   2a3d4:	addne	r5, r5, r3, lsl #2
   2a3d8:	addne	fp, fp, r3
   2a3dc:	ldr	r3, [sp, #204]	; 0xcc
   2a3e0:	ldr	sl, [r3]
   2a3e4:	cmp	sl, #0
   2a3e8:	ble	2a424 <GetDataSlab+0x9418>
   2a3ec:	sub	ip, r5, #4
   2a3f0:	ldr	r3, [sp, #4]
   2a3f4:	ldr	r2, [sp, #16]
   2a3f8:	add	r0, r3, r2, lsl #3
   2a3fc:	mov	r1, #0
   2a400:	ldr	r3, [ip, #4]!
   2a404:	mov	r2, r3
   2a408:	asr	r3, r3, #31
   2a40c:	strd	r2, [r0], #8
   2a410:	add	r1, r1, #1
   2a414:	ldr	r3, [sp, #204]	; 0xcc
   2a418:	ldr	sl, [r3]
   2a41c:	cmp	sl, r1
   2a420:	bgt	2a400 <GetDataSlab+0x93f4>
   2a424:	ldr	r3, [sp, #192]	; 0xc0
   2a428:	ldr	r2, [r3]
   2a42c:	ldr	r3, [sp, #196]	; 0xc4
   2a430:	ldr	r3, [r3]
   2a434:	sub	r3, r2, r3
   2a438:	add	fp, fp, r3
   2a43c:	add	r5, r5, r3, lsl #2
   2a440:	ldr	r3, [sp, #208]	; 0xd0
   2a444:	cmp	r3, #1
   2a448:	ble	2a3b0 <GetDataSlab+0x93a4>
   2a44c:	ldr	r3, [sp, #76]	; 0x4c
   2a450:	add	r3, r3, #1
   2a454:	str	r3, [sp, #76]	; 0x4c
   2a458:	ldr	r2, [sp, #204]	; 0xcc
   2a45c:	ldr	r1, [r2, #4]
   2a460:	mov	r0, r3
   2a464:	bl	517e8 <__aeabi_idivmod>
   2a468:	cmp	r1, #0
   2a46c:	bne	2a398 <GetDataSlab+0x938c>
   2a470:	add	r6, sp, #76	; 0x4c
   2a474:	ldr	r3, [sp, #204]	; 0xcc
   2a478:	add	r3, r3, #4
   2a47c:	str	r3, [sp, #8]
   2a480:	ldr	r3, [sp, #196]	; 0xc4
   2a484:	add	r8, r3, #4
   2a488:	add	r7, sp, #112	; 0x70
   2a48c:	ldr	r9, [sp, #28]
   2a490:	b	2a354 <GetDataSlab+0x9348>
   2a494:	mov	r3, #0
   2a498:	b	24fa8 <GetDataSlab+0x3f9c>
   2a49c:	ldr	r2, [r9]
   2a4a0:	cmp	r2, #0
   2a4a4:	beq	2a4bc <GetDataSlab+0x94b0>
   2a4a8:	ldr	r3, [sp, #16]
   2a4ac:	ldr	r3, [r3, #-4]
   2a4b0:	mul	r3, r3, r2
   2a4b4:	add	r5, r5, r3, lsl #2
   2a4b8:	add	fp, fp, r3
   2a4bc:	add	sl, sl, #1
   2a4c0:	ldr	r3, [sp, #208]	; 0xd0
   2a4c4:	cmp	r3, sl
   2a4c8:	beq	2a554 <GetDataSlab+0x9548>
   2a4cc:	ldr	r3, [r6]
   2a4d0:	add	r3, r3, #1
   2a4d4:	str	r3, [r6]
   2a4d8:	add	r9, r9, #4
   2a4dc:	ldr	r2, [sp, #12]
   2a4e0:	ldr	r1, [r2, #4]!
   2a4e4:	str	r2, [sp, #12]
   2a4e8:	mov	r0, r3
   2a4ec:	bl	517e8 <__aeabi_idivmod>
   2a4f0:	cmp	r1, #0
   2a4f4:	bne	2a540 <GetDataSlab+0x9534>
   2a4f8:	mov	r3, #0
   2a4fc:	str	r3, [r6], #4
   2a500:	add	r7, r7, #4
   2a504:	str	r7, [sp, #16]
   2a508:	ldr	r4, [r7]
   2a50c:	mov	r1, r4
   2a510:	mov	r0, fp
   2a514:	bl	517e8 <__aeabi_idivmod>
   2a518:	subs	r3, r1, #0
   2a51c:	beq	2a49c <GetDataSlab+0x9490>
   2a520:	ldr	r2, [r7, #-4]
   2a524:	ldr	r1, [r9]
   2a528:	sub	r3, r4, r3
   2a52c:	mla	r3, r1, r2, r3
   2a530:	add	r5, r5, r3, lsl #2
   2a534:	add	fp, fp, r3
   2a538:	b	2a4bc <GetDataSlab+0x94b0>
   2a53c:	mov	sl, #1
   2a540:	add	r3, sp, #152	; 0x98
   2a544:	add	r3, r3, sl, lsl #2
   2a548:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a54c:	add	fp, fp, r3
   2a550:	add	r5, r5, r3, lsl #2
   2a554:	ldr	r3, [sp, #24]
   2a558:	ldr	r2, [sp, #8]
   2a55c:	add	r3, r3, r2
   2a560:	str	r3, [sp, #24]
   2a564:	ldr	r2, [sp, #20]
   2a568:	cmp	r3, r2
   2a56c:	bge	2a65c <GetDataSlab+0x9650>
   2a570:	ldr	r3, [sp, #196]	; 0xc4
   2a574:	ldr	r3, [r3]
   2a578:	cmp	r3, #0
   2a57c:	addne	r5, r5, r3, lsl #2
   2a580:	addne	fp, fp, r3
   2a584:	ldr	r3, [sp, #204]	; 0xcc
   2a588:	ldr	r3, [r3]
   2a58c:	str	r3, [sp, #8]
   2a590:	cmp	r3, #0
   2a594:	ble	2a5dc <GetDataSlab+0x95d0>
   2a598:	ldr	r3, [sp, #4]
   2a59c:	ldr	r2, [sp, #24]
   2a5a0:	add	r2, r3, r2, lsl #3
   2a5a4:	mov	r3, #0
   2a5a8:	ldr	r1, [r5]
   2a5ac:	mov	r0, r1
   2a5b0:	asr	r1, r1, #31
   2a5b4:	strd	r0, [r2], #8
   2a5b8:	ldr	r1, [r8]
   2a5bc:	add	r5, r5, r1, lsl #2
   2a5c0:	add	fp, fp, r1
   2a5c4:	add	r3, r3, #1
   2a5c8:	ldr	r1, [sp, #204]	; 0xcc
   2a5cc:	ldr	r1, [r1]
   2a5d0:	str	r1, [sp, #8]
   2a5d4:	cmp	r1, r3
   2a5d8:	bgt	2a5a8 <GetDataSlab+0x959c>
   2a5dc:	ldr	r3, [r8]
   2a5e0:	ldr	r2, [sp, #8]
   2a5e4:	mul	r3, r3, r2
   2a5e8:	ldr	r2, [sp, #192]	; 0xc0
   2a5ec:	ldr	r2, [r2]
   2a5f0:	sub	r3, r2, r3
   2a5f4:	ldr	r2, [sp, #196]	; 0xc4
   2a5f8:	ldr	r2, [r2]
   2a5fc:	sub	r3, r3, r2
   2a600:	add	fp, fp, r3
   2a604:	add	r5, r5, r3, lsl #2
   2a608:	ldr	r3, [sp, #208]	; 0xd0
   2a60c:	cmp	r3, #1
   2a610:	ble	2a554 <GetDataSlab+0x9548>
   2a614:	ldr	r3, [sp, #76]	; 0x4c
   2a618:	add	r3, r3, #1
   2a61c:	str	r3, [sp, #76]	; 0x4c
   2a620:	ldr	r2, [sp, #204]	; 0xcc
   2a624:	ldr	r1, [r2, #4]
   2a628:	mov	r0, r3
   2a62c:	bl	517e8 <__aeabi_idivmod>
   2a630:	cmp	r1, #0
   2a634:	bne	2a53c <GetDataSlab+0x9530>
   2a638:	add	r6, sp, #76	; 0x4c
   2a63c:	ldr	r3, [sp, #204]	; 0xcc
   2a640:	add	r3, r3, #4
   2a644:	str	r3, [sp, #12]
   2a648:	ldr	r3, [sp, #196]	; 0xc4
   2a64c:	add	r9, r3, #4
   2a650:	add	r7, sp, #112	; 0x70
   2a654:	mov	sl, #1
   2a658:	b	2a4f8 <GetDataSlab+0x94ec>
   2a65c:	mov	r3, #0
   2a660:	b	24fa8 <GetDataSlab+0x3f9c>
   2a664:	ldr	r3, [r8]
   2a668:	str	r3, [sp, #28]
   2a66c:	sub	r3, r3, #1
   2a670:	str	r3, [sp, #32]
   2a674:	ldr	r3, [sp, #192]	; 0xc0
   2a678:	ldr	r3, [r3]
   2a67c:	str	r3, [sp, #112]	; 0x70
   2a680:	ldr	r3, [sp, #204]	; 0xcc
   2a684:	ldr	r3, [r3]
   2a688:	str	r3, [sp, #20]
   2a68c:	ldr	r3, [sp, #208]	; 0xd0
   2a690:	cmp	r3, #1
   2a694:	ble	2a6c8 <GetDataSlab+0x96bc>
   2a698:	str	r8, [sp, #16]
   2a69c:	add	sl, sp, #36	; 0x24
   2a6a0:	ldr	lr, [sp, #192]	; 0xc0
   2a6a4:	add	r9, sp, #112	; 0x70
   2a6a8:	ldr	r3, [sp, #204]	; 0xcc
   2a6ac:	add	r5, r3, #4
   2a6b0:	ldr	r3, [sp, #196]	; 0xc4
   2a6b4:	add	r4, r3, #4
   2a6b8:	str	lr, [sp, #12]
   2a6bc:	mov	r6, #2
   2a6c0:	mov	fp, #0
   2a6c4:	b	3ee94 <GetDataSlab+0x1de88>
   2a6c8:	mov	fp, #0
   2a6cc:	b	3ef20 <GetDataSlab+0x1df14>
   2a6d0:	ldr	r3, [sp, #20]
   2a6d4:	cmp	r3, #0
   2a6d8:	ble	3d430 <GetDataSlab+0x1c424>
   2a6dc:	mov	r3, #0
   2a6e0:	str	r3, [sp, #16]
   2a6e4:	b	2a7b8 <GetDataSlab+0x97ac>
   2a6e8:	ldr	r2, [r8]
   2a6ec:	cmp	r2, #0
   2a6f0:	beq	2a708 <GetDataSlab+0x96fc>
   2a6f4:	ldr	r3, [sp, #12]
   2a6f8:	ldr	r3, [r3, #-4]
   2a6fc:	mul	r3, r3, r2
   2a700:	add	r5, r5, r3, lsl #2
   2a704:	add	fp, fp, r3
   2a708:	add	r9, r9, #1
   2a70c:	ldr	r3, [sp, #208]	; 0xd0
   2a710:	cmp	r3, r9
   2a714:	beq	2a7a0 <GetDataSlab+0x9794>
   2a718:	ldr	r3, [r6]
   2a71c:	add	r3, r3, #1
   2a720:	str	r3, [r6]
   2a724:	add	r8, r8, #4
   2a728:	ldr	r2, [sp, #8]
   2a72c:	ldr	r1, [r2, #4]!
   2a730:	str	r2, [sp, #8]
   2a734:	mov	r0, r3
   2a738:	bl	517e8 <__aeabi_idivmod>
   2a73c:	cmp	r1, #0
   2a740:	bne	2a78c <GetDataSlab+0x9780>
   2a744:	mov	r3, #0
   2a748:	str	r3, [r6], #4
   2a74c:	add	r7, r7, #4
   2a750:	str	r7, [sp, #12]
   2a754:	ldr	r4, [r7]
   2a758:	mov	r1, r4
   2a75c:	mov	r0, fp
   2a760:	bl	517e8 <__aeabi_idivmod>
   2a764:	subs	r3, r1, #0
   2a768:	beq	2a6e8 <GetDataSlab+0x96dc>
   2a76c:	ldr	r2, [r7, #-4]
   2a770:	ldr	r1, [r8]
   2a774:	sub	r3, r4, r3
   2a778:	mla	r3, r1, r2, r3
   2a77c:	add	r5, r5, r3, lsl #2
   2a780:	add	fp, fp, r3
   2a784:	b	2a708 <GetDataSlab+0x96fc>
   2a788:	ldr	r9, [sp, #28]
   2a78c:	add	r3, sp, #152	; 0x98
   2a790:	add	r3, r3, r9, lsl #2
   2a794:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a798:	add	fp, fp, r3
   2a79c:	add	r5, r5, r3, lsl #2
   2a7a0:	ldr	r3, [sp, #16]
   2a7a4:	add	r3, r3, sl
   2a7a8:	str	r3, [sp, #16]
   2a7ac:	ldr	r2, [sp, #20]
   2a7b0:	cmp	r3, r2
   2a7b4:	bge	2a888 <GetDataSlab+0x987c>
   2a7b8:	ldr	r3, [sp, #196]	; 0xc4
   2a7bc:	ldr	r3, [r3]
   2a7c0:	cmp	r3, #0
   2a7c4:	addne	r5, r5, r3, lsl #2
   2a7c8:	addne	fp, fp, r3
   2a7cc:	ldr	r3, [sp, #204]	; 0xcc
   2a7d0:	ldr	sl, [r3]
   2a7d4:	cmp	sl, #0
   2a7d8:	ble	2a818 <GetDataSlab+0x980c>
   2a7dc:	sub	r0, r5, #4
   2a7e0:	ldr	r3, [sp, #4]
   2a7e4:	ldr	r2, [sp, #16]
   2a7e8:	add	r2, r3, r2, lsl #3
   2a7ec:	mov	r1, #0
   2a7f0:	ldr	r3, [r0, #4]!
   2a7f4:	str	r3, [r2]
   2a7f8:	mov	r3, #0
   2a7fc:	str	r3, [r2, #4]
   2a800:	add	r2, r2, #8
   2a804:	add	r1, r1, #1
   2a808:	ldr	r3, [sp, #204]	; 0xcc
   2a80c:	ldr	sl, [r3]
   2a810:	cmp	sl, r1
   2a814:	bgt	2a7f0 <GetDataSlab+0x97e4>
   2a818:	ldr	r3, [sp, #192]	; 0xc0
   2a81c:	ldr	r2, [r3]
   2a820:	ldr	r3, [sp, #196]	; 0xc4
   2a824:	ldr	r3, [r3]
   2a828:	sub	r3, r2, r3
   2a82c:	add	fp, fp, r3
   2a830:	add	r5, r5, r3, lsl #2
   2a834:	ldr	r3, [sp, #208]	; 0xd0
   2a838:	cmp	r3, #1
   2a83c:	ble	2a7a0 <GetDataSlab+0x9794>
   2a840:	ldr	r3, [sp, #76]	; 0x4c
   2a844:	add	r3, r3, #1
   2a848:	str	r3, [sp, #76]	; 0x4c
   2a84c:	ldr	r2, [sp, #204]	; 0xcc
   2a850:	ldr	r1, [r2, #4]
   2a854:	mov	r0, r3
   2a858:	bl	517e8 <__aeabi_idivmod>
   2a85c:	cmp	r1, #0
   2a860:	bne	2a788 <GetDataSlab+0x977c>
   2a864:	add	r6, sp, #76	; 0x4c
   2a868:	ldr	r3, [sp, #204]	; 0xcc
   2a86c:	add	r3, r3, #4
   2a870:	str	r3, [sp, #8]
   2a874:	ldr	r3, [sp, #196]	; 0xc4
   2a878:	add	r8, r3, #4
   2a87c:	add	r7, sp, #112	; 0x70
   2a880:	ldr	r9, [sp, #28]
   2a884:	b	2a744 <GetDataSlab+0x9738>
   2a888:	mov	r3, #0
   2a88c:	b	24fa8 <GetDataSlab+0x3f9c>
   2a890:	ldr	r2, [r9]
   2a894:	cmp	r2, #0
   2a898:	beq	2a8b0 <GetDataSlab+0x98a4>
   2a89c:	ldr	r3, [sp, #16]
   2a8a0:	ldr	r3, [r3, #-4]
   2a8a4:	mul	r3, r3, r2
   2a8a8:	add	r5, r5, r3, lsl #2
   2a8ac:	add	fp, fp, r3
   2a8b0:	add	sl, sl, #1
   2a8b4:	ldr	r3, [sp, #208]	; 0xd0
   2a8b8:	cmp	r3, sl
   2a8bc:	beq	2a948 <GetDataSlab+0x993c>
   2a8c0:	ldr	r3, [r6]
   2a8c4:	add	r3, r3, #1
   2a8c8:	str	r3, [r6]
   2a8cc:	add	r9, r9, #4
   2a8d0:	ldr	r2, [sp, #12]
   2a8d4:	ldr	r1, [r2, #4]!
   2a8d8:	str	r2, [sp, #12]
   2a8dc:	mov	r0, r3
   2a8e0:	bl	517e8 <__aeabi_idivmod>
   2a8e4:	cmp	r1, #0
   2a8e8:	bne	2a934 <GetDataSlab+0x9928>
   2a8ec:	mov	r3, #0
   2a8f0:	str	r3, [r6], #4
   2a8f4:	add	r7, r7, #4
   2a8f8:	str	r7, [sp, #16]
   2a8fc:	ldr	r4, [r7]
   2a900:	mov	r1, r4
   2a904:	mov	r0, fp
   2a908:	bl	517e8 <__aeabi_idivmod>
   2a90c:	subs	r3, r1, #0
   2a910:	beq	2a890 <GetDataSlab+0x9884>
   2a914:	ldr	r2, [r7, #-4]
   2a918:	ldr	r1, [r9]
   2a91c:	sub	r3, r4, r3
   2a920:	mla	r3, r1, r2, r3
   2a924:	add	r5, r5, r3, lsl #2
   2a928:	add	fp, fp, r3
   2a92c:	b	2a8b0 <GetDataSlab+0x98a4>
   2a930:	mov	sl, #1
   2a934:	add	r3, sp, #152	; 0x98
   2a938:	add	r3, r3, sl, lsl #2
   2a93c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a940:	add	fp, fp, r3
   2a944:	add	r5, r5, r3, lsl #2
   2a948:	ldr	r3, [sp, #24]
   2a94c:	ldr	r2, [sp, #8]
   2a950:	add	r3, r3, r2
   2a954:	str	r3, [sp, #24]
   2a958:	ldr	r2, [sp, #20]
   2a95c:	cmp	r3, r2
   2a960:	bge	2aa54 <GetDataSlab+0x9a48>
   2a964:	ldr	r3, [sp, #196]	; 0xc4
   2a968:	ldr	r3, [r3]
   2a96c:	cmp	r3, #0
   2a970:	addne	r5, r5, r3, lsl #2
   2a974:	addne	fp, fp, r3
   2a978:	ldr	r3, [sp, #204]	; 0xcc
   2a97c:	ldr	r3, [r3]
   2a980:	str	r3, [sp, #8]
   2a984:	cmp	r3, #0
   2a988:	ble	2a9d4 <GetDataSlab+0x99c8>
   2a98c:	ldr	r3, [sp, #4]
   2a990:	ldr	r2, [sp, #24]
   2a994:	add	r3, r3, r2, lsl #3
   2a998:	mov	r2, #0
   2a99c:	ldr	r1, [r5]
   2a9a0:	str	r1, [r3]
   2a9a4:	mov	r1, #0
   2a9a8:	str	r1, [r3, #4]
   2a9ac:	add	r3, r3, #8
   2a9b0:	ldr	r1, [r8]
   2a9b4:	add	r5, r5, r1, lsl #2
   2a9b8:	add	fp, fp, r1
   2a9bc:	add	r2, r2, #1
   2a9c0:	ldr	r1, [sp, #204]	; 0xcc
   2a9c4:	ldr	r1, [r1]
   2a9c8:	str	r1, [sp, #8]
   2a9cc:	cmp	r1, r2
   2a9d0:	bgt	2a99c <GetDataSlab+0x9990>
   2a9d4:	ldr	r3, [r8]
   2a9d8:	ldr	r2, [sp, #8]
   2a9dc:	mul	r3, r3, r2
   2a9e0:	ldr	r2, [sp, #192]	; 0xc0
   2a9e4:	ldr	r2, [r2]
   2a9e8:	sub	r3, r2, r3
   2a9ec:	ldr	r2, [sp, #196]	; 0xc4
   2a9f0:	ldr	r2, [r2]
   2a9f4:	sub	r3, r3, r2
   2a9f8:	add	fp, fp, r3
   2a9fc:	add	r5, r5, r3, lsl #2
   2aa00:	ldr	r3, [sp, #208]	; 0xd0
   2aa04:	cmp	r3, #1
   2aa08:	ble	2a948 <GetDataSlab+0x993c>
   2aa0c:	ldr	r3, [sp, #76]	; 0x4c
   2aa10:	add	r3, r3, #1
   2aa14:	str	r3, [sp, #76]	; 0x4c
   2aa18:	ldr	r2, [sp, #204]	; 0xcc
   2aa1c:	ldr	r1, [r2, #4]
   2aa20:	mov	r0, r3
   2aa24:	bl	517e8 <__aeabi_idivmod>
   2aa28:	cmp	r1, #0
   2aa2c:	bne	2a930 <GetDataSlab+0x9924>
   2aa30:	add	r6, sp, #76	; 0x4c
   2aa34:	ldr	r3, [sp, #204]	; 0xcc
   2aa38:	add	r3, r3, #4
   2aa3c:	str	r3, [sp, #12]
   2aa40:	ldr	r3, [sp, #196]	; 0xc4
   2aa44:	add	r9, r3, #4
   2aa48:	add	r7, sp, #112	; 0x70
   2aa4c:	mov	sl, #1
   2aa50:	b	2a8ec <GetDataSlab+0x98e0>
   2aa54:	mov	r3, #0
   2aa58:	b	24fa8 <GetDataSlab+0x3f9c>
   2aa5c:	ldr	r3, [r8]
   2aa60:	str	r3, [sp, #28]
   2aa64:	sub	r3, r3, #1
   2aa68:	str	r3, [sp, #32]
   2aa6c:	ldr	r3, [sp, #192]	; 0xc0
   2aa70:	ldr	r3, [r3]
   2aa74:	str	r3, [sp, #112]	; 0x70
   2aa78:	ldr	r3, [sp, #204]	; 0xcc
   2aa7c:	ldr	r3, [r3]
   2aa80:	str	r3, [sp, #20]
   2aa84:	ldr	r3, [sp, #208]	; 0xd0
   2aa88:	cmp	r3, #1
   2aa8c:	ble	2aac0 <GetDataSlab+0x9ab4>
   2aa90:	str	r8, [sp, #16]
   2aa94:	add	sl, sp, #36	; 0x24
   2aa98:	ldr	lr, [sp, #192]	; 0xc0
   2aa9c:	add	r9, sp, #112	; 0x70
   2aaa0:	ldr	r3, [sp, #204]	; 0xcc
   2aaa4:	add	r5, r3, #4
   2aaa8:	ldr	r3, [sp, #196]	; 0xc4
   2aaac:	add	r4, r3, #4
   2aab0:	str	lr, [sp, #12]
   2aab4:	mov	r6, #2
   2aab8:	mov	fp, #0
   2aabc:	b	3ef80 <GetDataSlab+0x1df74>
   2aac0:	mov	fp, #0
   2aac4:	b	3f00c <GetDataSlab+0x1e000>
   2aac8:	ldr	r3, [sp, #20]
   2aacc:	cmp	r3, #0
   2aad0:	ble	3d438 <GetDataSlab+0x1c42c>
   2aad4:	mov	r3, #0
   2aad8:	str	r3, [sp, #16]
   2aadc:	b	2abb0 <GetDataSlab+0x9ba4>
   2aae0:	ldr	r2, [r8]
   2aae4:	cmp	r2, #0
   2aae8:	beq	2ab00 <GetDataSlab+0x9af4>
   2aaec:	ldr	r3, [sp, #12]
   2aaf0:	ldr	r3, [r3, #-4]
   2aaf4:	mul	r3, r3, r2
   2aaf8:	add	r6, r6, r3, lsl #1
   2aafc:	add	fp, fp, r3
   2ab00:	add	r9, r9, #1
   2ab04:	ldr	r3, [sp, #208]	; 0xd0
   2ab08:	cmp	r3, r9
   2ab0c:	beq	2ab98 <GetDataSlab+0x9b8c>
   2ab10:	ldr	r3, [r5]
   2ab14:	add	r3, r3, #1
   2ab18:	str	r3, [r5]
   2ab1c:	add	r8, r8, #4
   2ab20:	ldr	r2, [sp, #8]
   2ab24:	ldr	r1, [r2, #4]!
   2ab28:	str	r2, [sp, #8]
   2ab2c:	mov	r0, r3
   2ab30:	bl	517e8 <__aeabi_idivmod>
   2ab34:	cmp	r1, #0
   2ab38:	bne	2ab84 <GetDataSlab+0x9b78>
   2ab3c:	mov	r3, #0
   2ab40:	str	r3, [r5], #4
   2ab44:	add	r7, r7, #4
   2ab48:	str	r7, [sp, #12]
   2ab4c:	ldr	r4, [r7]
   2ab50:	mov	r1, r4
   2ab54:	mov	r0, fp
   2ab58:	bl	517e8 <__aeabi_idivmod>
   2ab5c:	subs	r3, r1, #0
   2ab60:	beq	2aae0 <GetDataSlab+0x9ad4>
   2ab64:	ldr	r2, [r7, #-4]
   2ab68:	ldr	r1, [r8]
   2ab6c:	sub	r3, r4, r3
   2ab70:	mla	r3, r1, r2, r3
   2ab74:	add	r6, r6, r3, lsl #1
   2ab78:	add	fp, fp, r3
   2ab7c:	b	2ab00 <GetDataSlab+0x9af4>
   2ab80:	ldr	r9, [sp, #28]
   2ab84:	add	r3, sp, #152	; 0x98
   2ab88:	add	r3, r3, r9, lsl #2
   2ab8c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ab90:	add	fp, fp, r3
   2ab94:	add	r6, r6, r3, lsl #1
   2ab98:	ldr	r3, [sp, #16]
   2ab9c:	add	r3, r3, sl
   2aba0:	str	r3, [sp, #16]
   2aba4:	ldr	r2, [sp, #20]
   2aba8:	cmp	r3, r2
   2abac:	bge	2ac78 <GetDataSlab+0x9c6c>
   2abb0:	ldr	r3, [sp, #196]	; 0xc4
   2abb4:	ldr	r3, [r3]
   2abb8:	cmp	r3, #0
   2abbc:	addne	r6, r6, r3, lsl #1
   2abc0:	addne	fp, fp, r3
   2abc4:	ldr	r3, [sp, #204]	; 0xcc
   2abc8:	ldr	sl, [r3]
   2abcc:	cmp	sl, #0
   2abd0:	ble	2ac08 <GetDataSlab+0x9bfc>
   2abd4:	sub	ip, r6, #2
   2abd8:	ldr	r3, [sp, #4]
   2abdc:	ldr	r2, [sp, #16]
   2abe0:	add	r0, r3, r2, lsl #3
   2abe4:	mov	r1, #0
   2abe8:	ldrsh	r2, [ip, #2]!
   2abec:	asr	r3, r2, #31
   2abf0:	strd	r2, [r0], #8
   2abf4:	add	r1, r1, #1
   2abf8:	ldr	r3, [sp, #204]	; 0xcc
   2abfc:	ldr	sl, [r3]
   2ac00:	cmp	sl, r1
   2ac04:	bgt	2abe8 <GetDataSlab+0x9bdc>
   2ac08:	ldr	r3, [sp, #192]	; 0xc0
   2ac0c:	ldr	r2, [r3]
   2ac10:	ldr	r3, [sp, #196]	; 0xc4
   2ac14:	ldr	r3, [r3]
   2ac18:	sub	r3, r2, r3
   2ac1c:	add	fp, fp, r3
   2ac20:	add	r6, r6, r3, lsl #1
   2ac24:	ldr	r3, [sp, #208]	; 0xd0
   2ac28:	cmp	r3, #1
   2ac2c:	ble	2ab98 <GetDataSlab+0x9b8c>
   2ac30:	ldr	r3, [sp, #76]	; 0x4c
   2ac34:	add	r3, r3, #1
   2ac38:	str	r3, [sp, #76]	; 0x4c
   2ac3c:	ldr	r2, [sp, #204]	; 0xcc
   2ac40:	ldr	r1, [r2, #4]
   2ac44:	mov	r0, r3
   2ac48:	bl	517e8 <__aeabi_idivmod>
   2ac4c:	cmp	r1, #0
   2ac50:	bne	2ab80 <GetDataSlab+0x9b74>
   2ac54:	add	r5, sp, #76	; 0x4c
   2ac58:	ldr	r3, [sp, #204]	; 0xcc
   2ac5c:	add	r3, r3, #4
   2ac60:	str	r3, [sp, #8]
   2ac64:	ldr	r3, [sp, #196]	; 0xc4
   2ac68:	add	r8, r3, #4
   2ac6c:	add	r7, sp, #112	; 0x70
   2ac70:	ldr	r9, [sp, #28]
   2ac74:	b	2ab3c <GetDataSlab+0x9b30>
   2ac78:	mov	r3, #0
   2ac7c:	b	24fa8 <GetDataSlab+0x3f9c>
   2ac80:	ldr	r2, [r9]
   2ac84:	cmp	r2, #0
   2ac88:	beq	2aca0 <GetDataSlab+0x9c94>
   2ac8c:	ldr	r3, [sp, #16]
   2ac90:	ldr	r3, [r3, #-4]
   2ac94:	mul	r3, r3, r2
   2ac98:	add	r6, r6, r3, lsl #1
   2ac9c:	add	fp, fp, r3
   2aca0:	add	sl, sl, #1
   2aca4:	ldr	r3, [sp, #208]	; 0xd0
   2aca8:	cmp	r3, sl
   2acac:	beq	2ad38 <GetDataSlab+0x9d2c>
   2acb0:	ldr	r3, [r5]
   2acb4:	add	r3, r3, #1
   2acb8:	str	r3, [r5]
   2acbc:	add	r9, r9, #4
   2acc0:	ldr	r2, [sp, #12]
   2acc4:	ldr	r1, [r2, #4]!
   2acc8:	str	r2, [sp, #12]
   2accc:	mov	r0, r3
   2acd0:	bl	517e8 <__aeabi_idivmod>
   2acd4:	cmp	r1, #0
   2acd8:	bne	2ad24 <GetDataSlab+0x9d18>
   2acdc:	mov	r3, #0
   2ace0:	str	r3, [r5], #4
   2ace4:	add	r7, r7, #4
   2ace8:	str	r7, [sp, #16]
   2acec:	ldr	r4, [r7]
   2acf0:	mov	r1, r4
   2acf4:	mov	r0, fp
   2acf8:	bl	517e8 <__aeabi_idivmod>
   2acfc:	subs	r3, r1, #0
   2ad00:	beq	2ac80 <GetDataSlab+0x9c74>
   2ad04:	ldr	r2, [r7, #-4]
   2ad08:	ldr	r1, [r9]
   2ad0c:	sub	r3, r4, r3
   2ad10:	mla	r3, r1, r2, r3
   2ad14:	add	r6, r6, r3, lsl #1
   2ad18:	add	fp, fp, r3
   2ad1c:	b	2aca0 <GetDataSlab+0x9c94>
   2ad20:	mov	sl, #1
   2ad24:	add	r3, sp, #152	; 0x98
   2ad28:	add	r3, r3, sl, lsl #2
   2ad2c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ad30:	add	fp, fp, r3
   2ad34:	add	r6, r6, r3, lsl #1
   2ad38:	ldr	r3, [sp, #24]
   2ad3c:	ldr	r2, [sp, #8]
   2ad40:	add	r3, r3, r2
   2ad44:	str	r3, [sp, #24]
   2ad48:	ldr	r2, [sp, #20]
   2ad4c:	cmp	r3, r2
   2ad50:	bge	2ae3c <GetDataSlab+0x9e30>
   2ad54:	ldr	r3, [sp, #196]	; 0xc4
   2ad58:	ldr	r3, [r3]
   2ad5c:	cmp	r3, #0
   2ad60:	addne	r6, r6, r3, lsl #1
   2ad64:	addne	fp, fp, r3
   2ad68:	ldr	r3, [sp, #204]	; 0xcc
   2ad6c:	ldr	r3, [r3]
   2ad70:	str	r3, [sp, #8]
   2ad74:	cmp	r3, #0
   2ad78:	ble	2adbc <GetDataSlab+0x9db0>
   2ad7c:	ldr	r3, [sp, #4]
   2ad80:	ldr	r2, [sp, #24]
   2ad84:	add	r2, r3, r2, lsl #3
   2ad88:	mov	r3, #0
   2ad8c:	ldrsh	r0, [r6]
   2ad90:	asr	r1, r0, #31
   2ad94:	strd	r0, [r2], #8
   2ad98:	ldr	r1, [r8]
   2ad9c:	add	r6, r6, r1, lsl #1
   2ada0:	add	fp, fp, r1
   2ada4:	add	r3, r3, #1
   2ada8:	ldr	r1, [sp, #204]	; 0xcc
   2adac:	ldr	r1, [r1]
   2adb0:	str	r1, [sp, #8]
   2adb4:	cmp	r1, r3
   2adb8:	bgt	2ad8c <GetDataSlab+0x9d80>
   2adbc:	ldr	r3, [r8]
   2adc0:	ldr	r2, [sp, #8]
   2adc4:	mul	r3, r3, r2
   2adc8:	ldr	r2, [sp, #192]	; 0xc0
   2adcc:	ldr	r2, [r2]
   2add0:	sub	r3, r2, r3
   2add4:	ldr	r2, [sp, #196]	; 0xc4
   2add8:	ldr	r2, [r2]
   2addc:	sub	r3, r3, r2
   2ade0:	add	fp, fp, r3
   2ade4:	add	r6, r6, r3, lsl #1
   2ade8:	ldr	r3, [sp, #208]	; 0xd0
   2adec:	cmp	r3, #1
   2adf0:	ble	2ad38 <GetDataSlab+0x9d2c>
   2adf4:	ldr	r3, [sp, #76]	; 0x4c
   2adf8:	add	r3, r3, #1
   2adfc:	str	r3, [sp, #76]	; 0x4c
   2ae00:	ldr	r2, [sp, #204]	; 0xcc
   2ae04:	ldr	r1, [r2, #4]
   2ae08:	mov	r0, r3
   2ae0c:	bl	517e8 <__aeabi_idivmod>
   2ae10:	cmp	r1, #0
   2ae14:	bne	2ad20 <GetDataSlab+0x9d14>
   2ae18:	add	r5, sp, #76	; 0x4c
   2ae1c:	ldr	r3, [sp, #204]	; 0xcc
   2ae20:	add	r3, r3, #4
   2ae24:	str	r3, [sp, #12]
   2ae28:	ldr	r3, [sp, #196]	; 0xc4
   2ae2c:	add	r9, r3, #4
   2ae30:	add	r7, sp, #112	; 0x70
   2ae34:	mov	sl, #1
   2ae38:	b	2acdc <GetDataSlab+0x9cd0>
   2ae3c:	mov	r3, #0
   2ae40:	b	24fa8 <GetDataSlab+0x3f9c>
   2ae44:	ldr	r3, [r8]
   2ae48:	str	r3, [sp, #28]
   2ae4c:	sub	r3, r3, #1
   2ae50:	str	r3, [sp, #32]
   2ae54:	ldr	r3, [sp, #192]	; 0xc0
   2ae58:	ldr	r3, [r3]
   2ae5c:	str	r3, [sp, #112]	; 0x70
   2ae60:	ldr	r3, [sp, #204]	; 0xcc
   2ae64:	ldr	r3, [r3]
   2ae68:	str	r3, [sp, #20]
   2ae6c:	ldr	r3, [sp, #208]	; 0xd0
   2ae70:	cmp	r3, #1
   2ae74:	ble	2aea8 <GetDataSlab+0x9e9c>
   2ae78:	str	r8, [sp, #16]
   2ae7c:	add	sl, sp, #36	; 0x24
   2ae80:	ldr	lr, [sp, #192]	; 0xc0
   2ae84:	add	r9, sp, #112	; 0x70
   2ae88:	ldr	r3, [sp, #204]	; 0xcc
   2ae8c:	add	r5, r3, #4
   2ae90:	ldr	r3, [sp, #196]	; 0xc4
   2ae94:	add	r4, r3, #4
   2ae98:	str	lr, [sp, #12]
   2ae9c:	mov	r6, #2
   2aea0:	mov	fp, #0
   2aea4:	b	3f06c <GetDataSlab+0x1e060>
   2aea8:	mov	fp, #0
   2aeac:	b	3f0f8 <GetDataSlab+0x1e0ec>
   2aeb0:	ldr	r3, [sp, #20]
   2aeb4:	cmp	r3, #0
   2aeb8:	ble	3d440 <GetDataSlab+0x1c434>
   2aebc:	mov	r3, #0
   2aec0:	str	r3, [sp, #16]
   2aec4:	b	2af98 <GetDataSlab+0x9f8c>
   2aec8:	ldr	r2, [r8]
   2aecc:	cmp	r2, #0
   2aed0:	beq	2aee8 <GetDataSlab+0x9edc>
   2aed4:	ldr	r3, [sp, #12]
   2aed8:	ldr	r3, [r3, #-4]
   2aedc:	mul	r3, r3, r2
   2aee0:	add	r6, r6, r3, lsl #1
   2aee4:	add	fp, fp, r3
   2aee8:	add	r9, r9, #1
   2aeec:	ldr	r3, [sp, #208]	; 0xd0
   2aef0:	cmp	r3, r9
   2aef4:	beq	2af80 <GetDataSlab+0x9f74>
   2aef8:	ldr	r3, [r5]
   2aefc:	add	r3, r3, #1
   2af00:	str	r3, [r5]
   2af04:	add	r8, r8, #4
   2af08:	ldr	r2, [sp, #8]
   2af0c:	ldr	r1, [r2, #4]!
   2af10:	str	r2, [sp, #8]
   2af14:	mov	r0, r3
   2af18:	bl	517e8 <__aeabi_idivmod>
   2af1c:	cmp	r1, #0
   2af20:	bne	2af6c <GetDataSlab+0x9f60>
   2af24:	mov	r3, #0
   2af28:	str	r3, [r5], #4
   2af2c:	add	r7, r7, #4
   2af30:	str	r7, [sp, #12]
   2af34:	ldr	r4, [r7]
   2af38:	mov	r1, r4
   2af3c:	mov	r0, fp
   2af40:	bl	517e8 <__aeabi_idivmod>
   2af44:	subs	r3, r1, #0
   2af48:	beq	2aec8 <GetDataSlab+0x9ebc>
   2af4c:	ldr	r2, [r7, #-4]
   2af50:	ldr	r1, [r8]
   2af54:	sub	r3, r4, r3
   2af58:	mla	r3, r1, r2, r3
   2af5c:	add	r6, r6, r3, lsl #1
   2af60:	add	fp, fp, r3
   2af64:	b	2aee8 <GetDataSlab+0x9edc>
   2af68:	ldr	r9, [sp, #28]
   2af6c:	add	r3, sp, #152	; 0x98
   2af70:	add	r3, r3, r9, lsl #2
   2af74:	ldr	r3, [r3, #-120]	; 0xffffff88
   2af78:	add	fp, fp, r3
   2af7c:	add	r6, r6, r3, lsl #1
   2af80:	ldr	r3, [sp, #16]
   2af84:	add	r3, r3, sl
   2af88:	str	r3, [sp, #16]
   2af8c:	ldr	r2, [sp, #20]
   2af90:	cmp	r3, r2
   2af94:	bge	2b060 <GetDataSlab+0xa054>
   2af98:	ldr	r3, [sp, #196]	; 0xc4
   2af9c:	ldr	r3, [r3]
   2afa0:	cmp	r3, #0
   2afa4:	addne	r6, r6, r3, lsl #1
   2afa8:	addne	fp, fp, r3
   2afac:	ldr	r3, [sp, #204]	; 0xcc
   2afb0:	ldr	sl, [r3]
   2afb4:	cmp	sl, #0
   2afb8:	ble	2aff0 <GetDataSlab+0x9fe4>
   2afbc:	sub	ip, r6, #2
   2afc0:	ldr	r3, [sp, #4]
   2afc4:	ldr	r2, [sp, #16]
   2afc8:	add	r0, r3, r2, lsl #3
   2afcc:	mov	r1, #0
   2afd0:	ldrh	r2, [ip, #2]!
   2afd4:	mov	r3, #0
   2afd8:	strd	r2, [r0], #8
   2afdc:	add	r1, r1, #1
   2afe0:	ldr	r3, [sp, #204]	; 0xcc
   2afe4:	ldr	sl, [r3]
   2afe8:	cmp	sl, r1
   2afec:	bgt	2afd0 <GetDataSlab+0x9fc4>
   2aff0:	ldr	r3, [sp, #192]	; 0xc0
   2aff4:	ldr	r2, [r3]
   2aff8:	ldr	r3, [sp, #196]	; 0xc4
   2affc:	ldr	r3, [r3]
   2b000:	sub	r3, r2, r3
   2b004:	add	fp, fp, r3
   2b008:	add	r6, r6, r3, lsl #1
   2b00c:	ldr	r3, [sp, #208]	; 0xd0
   2b010:	cmp	r3, #1
   2b014:	ble	2af80 <GetDataSlab+0x9f74>
   2b018:	ldr	r3, [sp, #76]	; 0x4c
   2b01c:	add	r3, r3, #1
   2b020:	str	r3, [sp, #76]	; 0x4c
   2b024:	ldr	r2, [sp, #204]	; 0xcc
   2b028:	ldr	r1, [r2, #4]
   2b02c:	mov	r0, r3
   2b030:	bl	517e8 <__aeabi_idivmod>
   2b034:	cmp	r1, #0
   2b038:	bne	2af68 <GetDataSlab+0x9f5c>
   2b03c:	add	r5, sp, #76	; 0x4c
   2b040:	ldr	r3, [sp, #204]	; 0xcc
   2b044:	add	r3, r3, #4
   2b048:	str	r3, [sp, #8]
   2b04c:	ldr	r3, [sp, #196]	; 0xc4
   2b050:	add	r8, r3, #4
   2b054:	add	r7, sp, #112	; 0x70
   2b058:	ldr	r9, [sp, #28]
   2b05c:	b	2af24 <GetDataSlab+0x9f18>
   2b060:	mov	r3, #0
   2b064:	b	24fa8 <GetDataSlab+0x3f9c>
   2b068:	ldr	r2, [r9]
   2b06c:	cmp	r2, #0
   2b070:	beq	2b088 <GetDataSlab+0xa07c>
   2b074:	ldr	r3, [sp, #16]
   2b078:	ldr	r3, [r3, #-4]
   2b07c:	mul	r3, r3, r2
   2b080:	add	r6, r6, r3, lsl #1
   2b084:	add	fp, fp, r3
   2b088:	add	sl, sl, #1
   2b08c:	ldr	r3, [sp, #208]	; 0xd0
   2b090:	cmp	r3, sl
   2b094:	beq	2b120 <GetDataSlab+0xa114>
   2b098:	ldr	r3, [r5]
   2b09c:	add	r3, r3, #1
   2b0a0:	str	r3, [r5]
   2b0a4:	add	r9, r9, #4
   2b0a8:	ldr	r2, [sp, #12]
   2b0ac:	ldr	r1, [r2, #4]!
   2b0b0:	str	r2, [sp, #12]
   2b0b4:	mov	r0, r3
   2b0b8:	bl	517e8 <__aeabi_idivmod>
   2b0bc:	cmp	r1, #0
   2b0c0:	bne	2b10c <GetDataSlab+0xa100>
   2b0c4:	mov	r3, #0
   2b0c8:	str	r3, [r5], #4
   2b0cc:	add	r7, r7, #4
   2b0d0:	str	r7, [sp, #16]
   2b0d4:	ldr	r4, [r7]
   2b0d8:	mov	r1, r4
   2b0dc:	mov	r0, fp
   2b0e0:	bl	517e8 <__aeabi_idivmod>
   2b0e4:	subs	r3, r1, #0
   2b0e8:	beq	2b068 <GetDataSlab+0xa05c>
   2b0ec:	ldr	r2, [r7, #-4]
   2b0f0:	ldr	r1, [r9]
   2b0f4:	sub	r3, r4, r3
   2b0f8:	mla	r3, r1, r2, r3
   2b0fc:	add	r6, r6, r3, lsl #1
   2b100:	add	fp, fp, r3
   2b104:	b	2b088 <GetDataSlab+0xa07c>
   2b108:	mov	sl, #1
   2b10c:	add	r3, sp, #152	; 0x98
   2b110:	add	r3, r3, sl, lsl #2
   2b114:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b118:	add	fp, fp, r3
   2b11c:	add	r6, r6, r3, lsl #1
   2b120:	ldr	r3, [sp, #24]
   2b124:	ldr	r2, [sp, #8]
   2b128:	add	r3, r3, r2
   2b12c:	str	r3, [sp, #24]
   2b130:	ldr	r2, [sp, #20]
   2b134:	cmp	r3, r2
   2b138:	bge	2b224 <GetDataSlab+0xa218>
   2b13c:	ldr	r3, [sp, #196]	; 0xc4
   2b140:	ldr	r3, [r3]
   2b144:	cmp	r3, #0
   2b148:	addne	r6, r6, r3, lsl #1
   2b14c:	addne	fp, fp, r3
   2b150:	ldr	r3, [sp, #204]	; 0xcc
   2b154:	ldr	r3, [r3]
   2b158:	str	r3, [sp, #8]
   2b15c:	cmp	r3, #0
   2b160:	ble	2b1a4 <GetDataSlab+0xa198>
   2b164:	ldr	r3, [sp, #4]
   2b168:	ldr	r2, [sp, #24]
   2b16c:	add	r2, r3, r2, lsl #3
   2b170:	mov	r3, #0
   2b174:	ldrh	r0, [r6]
   2b178:	mov	r1, #0
   2b17c:	strd	r0, [r2], #8
   2b180:	ldr	r1, [r8]
   2b184:	add	r6, r6, r1, lsl #1
   2b188:	add	fp, fp, r1
   2b18c:	add	r3, r3, #1
   2b190:	ldr	r1, [sp, #204]	; 0xcc
   2b194:	ldr	r1, [r1]
   2b198:	str	r1, [sp, #8]
   2b19c:	cmp	r1, r3
   2b1a0:	bgt	2b174 <GetDataSlab+0xa168>
   2b1a4:	ldr	r3, [r8]
   2b1a8:	ldr	r2, [sp, #8]
   2b1ac:	mul	r3, r3, r2
   2b1b0:	ldr	r2, [sp, #192]	; 0xc0
   2b1b4:	ldr	r2, [r2]
   2b1b8:	sub	r3, r2, r3
   2b1bc:	ldr	r2, [sp, #196]	; 0xc4
   2b1c0:	ldr	r2, [r2]
   2b1c4:	sub	r3, r3, r2
   2b1c8:	add	fp, fp, r3
   2b1cc:	add	r6, r6, r3, lsl #1
   2b1d0:	ldr	r3, [sp, #208]	; 0xd0
   2b1d4:	cmp	r3, #1
   2b1d8:	ble	2b120 <GetDataSlab+0xa114>
   2b1dc:	ldr	r3, [sp, #76]	; 0x4c
   2b1e0:	add	r3, r3, #1
   2b1e4:	str	r3, [sp, #76]	; 0x4c
   2b1e8:	ldr	r2, [sp, #204]	; 0xcc
   2b1ec:	ldr	r1, [r2, #4]
   2b1f0:	mov	r0, r3
   2b1f4:	bl	517e8 <__aeabi_idivmod>
   2b1f8:	cmp	r1, #0
   2b1fc:	bne	2b108 <GetDataSlab+0xa0fc>
   2b200:	add	r5, sp, #76	; 0x4c
   2b204:	ldr	r3, [sp, #204]	; 0xcc
   2b208:	add	r3, r3, #4
   2b20c:	str	r3, [sp, #12]
   2b210:	ldr	r3, [sp, #196]	; 0xc4
   2b214:	add	r9, r3, #4
   2b218:	add	r7, sp, #112	; 0x70
   2b21c:	mov	sl, #1
   2b220:	b	2b0c4 <GetDataSlab+0xa0b8>
   2b224:	mov	r3, #0
   2b228:	b	24fa8 <GetDataSlab+0x3f9c>
   2b22c:	ldr	r3, [r8]
   2b230:	str	r3, [sp, #28]
   2b234:	sub	r3, r3, #1
   2b238:	str	r3, [sp, #32]
   2b23c:	ldr	r3, [sp, #192]	; 0xc0
   2b240:	ldr	r3, [r3]
   2b244:	str	r3, [sp, #112]	; 0x70
   2b248:	ldr	r3, [sp, #204]	; 0xcc
   2b24c:	ldr	r3, [r3]
   2b250:	str	r3, [sp, #20]
   2b254:	ldr	r3, [sp, #208]	; 0xd0
   2b258:	cmp	r3, #1
   2b25c:	ble	2b290 <GetDataSlab+0xa284>
   2b260:	str	r8, [sp, #16]
   2b264:	add	sl, sp, #36	; 0x24
   2b268:	ldr	lr, [sp, #192]	; 0xc0
   2b26c:	add	r9, sp, #112	; 0x70
   2b270:	ldr	r3, [sp, #204]	; 0xcc
   2b274:	add	r5, r3, #4
   2b278:	ldr	r3, [sp, #196]	; 0xc4
   2b27c:	add	r4, r3, #4
   2b280:	str	lr, [sp, #12]
   2b284:	mov	r6, #2
   2b288:	mov	fp, #0
   2b28c:	b	3f158 <GetDataSlab+0x1e14c>
   2b290:	mov	fp, #0
   2b294:	b	3f1e4 <GetDataSlab+0x1e1d8>
   2b298:	ldr	r3, [sp, #20]
   2b29c:	cmp	r3, #0
   2b2a0:	ble	3d448 <GetDataSlab+0x1c43c>
   2b2a4:	mov	r3, #0
   2b2a8:	str	r3, [sp, #16]
   2b2ac:	b	2b380 <GetDataSlab+0xa374>
   2b2b0:	ldr	r2, [r8]
   2b2b4:	cmp	r2, #0
   2b2b8:	beq	2b2d0 <GetDataSlab+0xa2c4>
   2b2bc:	ldr	r3, [sp, #12]
   2b2c0:	ldr	r3, [r3, #-4]
   2b2c4:	mul	r3, r3, r2
   2b2c8:	add	r6, r6, r3
   2b2cc:	add	fp, fp, r3
   2b2d0:	add	r9, r9, #1
   2b2d4:	ldr	r3, [sp, #208]	; 0xd0
   2b2d8:	cmp	r3, r9
   2b2dc:	beq	2b368 <GetDataSlab+0xa35c>
   2b2e0:	ldr	r3, [r5]
   2b2e4:	add	r3, r3, #1
   2b2e8:	str	r3, [r5]
   2b2ec:	add	r8, r8, #4
   2b2f0:	ldr	r2, [sp, #8]
   2b2f4:	ldr	r1, [r2, #4]!
   2b2f8:	str	r2, [sp, #8]
   2b2fc:	mov	r0, r3
   2b300:	bl	517e8 <__aeabi_idivmod>
   2b304:	cmp	r1, #0
   2b308:	bne	2b354 <GetDataSlab+0xa348>
   2b30c:	mov	r3, #0
   2b310:	str	r3, [r5], #4
   2b314:	add	r7, r7, #4
   2b318:	str	r7, [sp, #12]
   2b31c:	ldr	r4, [r7]
   2b320:	mov	r1, r4
   2b324:	mov	r0, fp
   2b328:	bl	517e8 <__aeabi_idivmod>
   2b32c:	subs	r3, r1, #0
   2b330:	beq	2b2b0 <GetDataSlab+0xa2a4>
   2b334:	ldr	r2, [r7, #-4]
   2b338:	ldr	r1, [r8]
   2b33c:	sub	r3, r4, r3
   2b340:	mla	r3, r1, r2, r3
   2b344:	add	r6, r6, r3
   2b348:	add	fp, fp, r3
   2b34c:	b	2b2d0 <GetDataSlab+0xa2c4>
   2b350:	ldr	r9, [sp, #28]
   2b354:	add	r3, sp, #152	; 0x98
   2b358:	add	r3, r3, r9, lsl #2
   2b35c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b360:	add	fp, fp, r3
   2b364:	add	r6, r6, r3
   2b368:	ldr	r3, [sp, #16]
   2b36c:	add	r3, r3, sl
   2b370:	str	r3, [sp, #16]
   2b374:	ldr	r2, [sp, #20]
   2b378:	cmp	r3, r2
   2b37c:	bge	2b448 <GetDataSlab+0xa43c>
   2b380:	ldr	r3, [sp, #196]	; 0xc4
   2b384:	ldr	r3, [r3]
   2b388:	cmp	r3, #0
   2b38c:	addne	r6, r6, r3
   2b390:	addne	fp, fp, r3
   2b394:	ldr	r3, [sp, #204]	; 0xcc
   2b398:	ldr	sl, [r3]
   2b39c:	cmp	sl, #0
   2b3a0:	ble	2b3d8 <GetDataSlab+0xa3cc>
   2b3a4:	sub	ip, r6, #1
   2b3a8:	ldr	r3, [sp, #4]
   2b3ac:	ldr	r2, [sp, #16]
   2b3b0:	add	r0, r3, r2, lsl #3
   2b3b4:	mov	r1, #0
   2b3b8:	ldrsb	r2, [ip, #1]!
   2b3bc:	asr	r3, r2, #31
   2b3c0:	strd	r2, [r0], #8
   2b3c4:	add	r1, r1, #1
   2b3c8:	ldr	r3, [sp, #204]	; 0xcc
   2b3cc:	ldr	sl, [r3]
   2b3d0:	cmp	sl, r1
   2b3d4:	bgt	2b3b8 <GetDataSlab+0xa3ac>
   2b3d8:	ldr	r3, [sp, #192]	; 0xc0
   2b3dc:	ldr	r2, [r3]
   2b3e0:	ldr	r3, [sp, #196]	; 0xc4
   2b3e4:	ldr	r3, [r3]
   2b3e8:	sub	r3, r2, r3
   2b3ec:	add	fp, fp, r3
   2b3f0:	add	r6, r6, r3
   2b3f4:	ldr	r3, [sp, #208]	; 0xd0
   2b3f8:	cmp	r3, #1
   2b3fc:	ble	2b368 <GetDataSlab+0xa35c>
   2b400:	ldr	r3, [sp, #76]	; 0x4c
   2b404:	add	r3, r3, #1
   2b408:	str	r3, [sp, #76]	; 0x4c
   2b40c:	ldr	r2, [sp, #204]	; 0xcc
   2b410:	ldr	r1, [r2, #4]
   2b414:	mov	r0, r3
   2b418:	bl	517e8 <__aeabi_idivmod>
   2b41c:	cmp	r1, #0
   2b420:	bne	2b350 <GetDataSlab+0xa344>
   2b424:	add	r5, sp, #76	; 0x4c
   2b428:	ldr	r3, [sp, #204]	; 0xcc
   2b42c:	add	r3, r3, #4
   2b430:	str	r3, [sp, #8]
   2b434:	ldr	r3, [sp, #196]	; 0xc4
   2b438:	add	r8, r3, #4
   2b43c:	add	r7, sp, #112	; 0x70
   2b440:	ldr	r9, [sp, #28]
   2b444:	b	2b30c <GetDataSlab+0xa300>
   2b448:	mov	r3, #0
   2b44c:	b	24fa8 <GetDataSlab+0x3f9c>
   2b450:	ldr	r2, [r9]
   2b454:	cmp	r2, #0
   2b458:	beq	2b470 <GetDataSlab+0xa464>
   2b45c:	ldr	r3, [sp, #16]
   2b460:	ldr	r3, [r3, #-4]
   2b464:	mul	r3, r3, r2
   2b468:	add	r6, r6, r3
   2b46c:	add	fp, fp, r3
   2b470:	add	sl, sl, #1
   2b474:	ldr	r3, [sp, #208]	; 0xd0
   2b478:	cmp	r3, sl
   2b47c:	beq	2b508 <GetDataSlab+0xa4fc>
   2b480:	ldr	r3, [r5]
   2b484:	add	r3, r3, #1
   2b488:	str	r3, [r5]
   2b48c:	add	r9, r9, #4
   2b490:	ldr	r2, [sp, #12]
   2b494:	ldr	r1, [r2, #4]!
   2b498:	str	r2, [sp, #12]
   2b49c:	mov	r0, r3
   2b4a0:	bl	517e8 <__aeabi_idivmod>
   2b4a4:	cmp	r1, #0
   2b4a8:	bne	2b4f4 <GetDataSlab+0xa4e8>
   2b4ac:	mov	r3, #0
   2b4b0:	str	r3, [r5], #4
   2b4b4:	add	r7, r7, #4
   2b4b8:	str	r7, [sp, #16]
   2b4bc:	ldr	r4, [r7]
   2b4c0:	mov	r1, r4
   2b4c4:	mov	r0, fp
   2b4c8:	bl	517e8 <__aeabi_idivmod>
   2b4cc:	subs	r3, r1, #0
   2b4d0:	beq	2b450 <GetDataSlab+0xa444>
   2b4d4:	ldr	r2, [r7, #-4]
   2b4d8:	ldr	r1, [r9]
   2b4dc:	sub	r3, r4, r3
   2b4e0:	mla	r3, r1, r2, r3
   2b4e4:	add	r6, r6, r3
   2b4e8:	add	fp, fp, r3
   2b4ec:	b	2b470 <GetDataSlab+0xa464>
   2b4f0:	mov	sl, #1
   2b4f4:	add	r3, sp, #152	; 0x98
   2b4f8:	add	r3, r3, sl, lsl #2
   2b4fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b500:	add	fp, fp, r3
   2b504:	add	r6, r6, r3
   2b508:	ldr	r3, [sp, #24]
   2b50c:	ldr	r2, [sp, #8]
   2b510:	add	r3, r3, r2
   2b514:	str	r3, [sp, #24]
   2b518:	ldr	r2, [sp, #20]
   2b51c:	cmp	r3, r2
   2b520:	bge	2b60c <GetDataSlab+0xa600>
   2b524:	ldr	r3, [sp, #196]	; 0xc4
   2b528:	ldr	r3, [r3]
   2b52c:	cmp	r3, #0
   2b530:	addne	r6, r6, r3
   2b534:	addne	fp, fp, r3
   2b538:	ldr	r3, [sp, #204]	; 0xcc
   2b53c:	ldr	r3, [r3]
   2b540:	str	r3, [sp, #8]
   2b544:	cmp	r3, #0
   2b548:	ble	2b58c <GetDataSlab+0xa580>
   2b54c:	ldr	r3, [sp, #4]
   2b550:	ldr	r2, [sp, #24]
   2b554:	add	r2, r3, r2, lsl #3
   2b558:	mov	r3, #0
   2b55c:	ldrsb	r0, [r6]
   2b560:	asr	r1, r0, #31
   2b564:	strd	r0, [r2], #8
   2b568:	ldr	r1, [r8]
   2b56c:	add	r6, r6, r1
   2b570:	add	fp, fp, r1
   2b574:	add	r3, r3, #1
   2b578:	ldr	r1, [sp, #204]	; 0xcc
   2b57c:	ldr	r1, [r1]
   2b580:	str	r1, [sp, #8]
   2b584:	cmp	r1, r3
   2b588:	bgt	2b55c <GetDataSlab+0xa550>
   2b58c:	ldr	r3, [r8]
   2b590:	ldr	r2, [sp, #8]
   2b594:	mul	r3, r3, r2
   2b598:	ldr	r2, [sp, #192]	; 0xc0
   2b59c:	ldr	r2, [r2]
   2b5a0:	sub	r3, r2, r3
   2b5a4:	ldr	r2, [sp, #196]	; 0xc4
   2b5a8:	ldr	r2, [r2]
   2b5ac:	sub	r3, r3, r2
   2b5b0:	add	fp, fp, r3
   2b5b4:	add	r6, r6, r3
   2b5b8:	ldr	r3, [sp, #208]	; 0xd0
   2b5bc:	cmp	r3, #1
   2b5c0:	ble	2b508 <GetDataSlab+0xa4fc>
   2b5c4:	ldr	r3, [sp, #76]	; 0x4c
   2b5c8:	add	r3, r3, #1
   2b5cc:	str	r3, [sp, #76]	; 0x4c
   2b5d0:	ldr	r2, [sp, #204]	; 0xcc
   2b5d4:	ldr	r1, [r2, #4]
   2b5d8:	mov	r0, r3
   2b5dc:	bl	517e8 <__aeabi_idivmod>
   2b5e0:	cmp	r1, #0
   2b5e4:	bne	2b4f0 <GetDataSlab+0xa4e4>
   2b5e8:	add	r5, sp, #76	; 0x4c
   2b5ec:	ldr	r3, [sp, #204]	; 0xcc
   2b5f0:	add	r3, r3, #4
   2b5f4:	str	r3, [sp, #12]
   2b5f8:	ldr	r3, [sp, #196]	; 0xc4
   2b5fc:	add	r9, r3, #4
   2b600:	add	r7, sp, #112	; 0x70
   2b604:	mov	sl, #1
   2b608:	b	2b4ac <GetDataSlab+0xa4a0>
   2b60c:	mov	r3, #0
   2b610:	b	24fa8 <GetDataSlab+0x3f9c>
   2b614:	ldr	r3, [r8]
   2b618:	str	r3, [sp, #28]
   2b61c:	sub	r3, r3, #1
   2b620:	str	r3, [sp, #32]
   2b624:	ldr	r3, [sp, #192]	; 0xc0
   2b628:	ldr	r3, [r3]
   2b62c:	str	r3, [sp, #112]	; 0x70
   2b630:	ldr	r3, [sp, #204]	; 0xcc
   2b634:	ldr	r3, [r3]
   2b638:	str	r3, [sp, #20]
   2b63c:	ldr	r3, [sp, #208]	; 0xd0
   2b640:	cmp	r3, #1
   2b644:	ble	2b678 <GetDataSlab+0xa66c>
   2b648:	str	r8, [sp, #16]
   2b64c:	add	sl, sp, #36	; 0x24
   2b650:	ldr	lr, [sp, #192]	; 0xc0
   2b654:	add	r9, sp, #112	; 0x70
   2b658:	ldr	r3, [sp, #204]	; 0xcc
   2b65c:	add	r5, r3, #4
   2b660:	ldr	r3, [sp, #196]	; 0xc4
   2b664:	add	r4, r3, #4
   2b668:	str	lr, [sp, #12]
   2b66c:	mov	r6, #2
   2b670:	mov	fp, #0
   2b674:	b	3f244 <GetDataSlab+0x1e238>
   2b678:	mov	fp, #0
   2b67c:	b	3f2d0 <GetDataSlab+0x1e2c4>
   2b680:	ldr	r3, [sp, #20]
   2b684:	cmp	r3, #0
   2b688:	ble	3d450 <GetDataSlab+0x1c444>
   2b68c:	mov	r3, #0
   2b690:	str	r3, [sp, #16]
   2b694:	b	2b768 <GetDataSlab+0xa75c>
   2b698:	ldr	r2, [r8]
   2b69c:	cmp	r2, #0
   2b6a0:	beq	2b6b8 <GetDataSlab+0xa6ac>
   2b6a4:	ldr	r3, [sp, #12]
   2b6a8:	ldr	r3, [r3, #-4]
   2b6ac:	mul	r3, r3, r2
   2b6b0:	add	r6, r6, r3
   2b6b4:	add	fp, fp, r3
   2b6b8:	add	r9, r9, #1
   2b6bc:	ldr	r3, [sp, #208]	; 0xd0
   2b6c0:	cmp	r3, r9
   2b6c4:	beq	2b750 <GetDataSlab+0xa744>
   2b6c8:	ldr	r3, [r5]
   2b6cc:	add	r3, r3, #1
   2b6d0:	str	r3, [r5]
   2b6d4:	add	r8, r8, #4
   2b6d8:	ldr	r2, [sp, #8]
   2b6dc:	ldr	r1, [r2, #4]!
   2b6e0:	str	r2, [sp, #8]
   2b6e4:	mov	r0, r3
   2b6e8:	bl	517e8 <__aeabi_idivmod>
   2b6ec:	cmp	r1, #0
   2b6f0:	bne	2b73c <GetDataSlab+0xa730>
   2b6f4:	mov	r3, #0
   2b6f8:	str	r3, [r5], #4
   2b6fc:	add	r7, r7, #4
   2b700:	str	r7, [sp, #12]
   2b704:	ldr	r4, [r7]
   2b708:	mov	r1, r4
   2b70c:	mov	r0, fp
   2b710:	bl	517e8 <__aeabi_idivmod>
   2b714:	subs	r3, r1, #0
   2b718:	beq	2b698 <GetDataSlab+0xa68c>
   2b71c:	ldr	r2, [r7, #-4]
   2b720:	ldr	r1, [r8]
   2b724:	sub	r3, r4, r3
   2b728:	mla	r3, r1, r2, r3
   2b72c:	add	r6, r6, r3
   2b730:	add	fp, fp, r3
   2b734:	b	2b6b8 <GetDataSlab+0xa6ac>
   2b738:	ldr	r9, [sp, #28]
   2b73c:	add	r3, sp, #152	; 0x98
   2b740:	add	r3, r3, r9, lsl #2
   2b744:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b748:	add	fp, fp, r3
   2b74c:	add	r6, r6, r3
   2b750:	ldr	r3, [sp, #16]
   2b754:	add	r3, r3, sl
   2b758:	str	r3, [sp, #16]
   2b75c:	ldr	r2, [sp, #20]
   2b760:	cmp	r3, r2
   2b764:	bge	2b830 <GetDataSlab+0xa824>
   2b768:	ldr	r3, [sp, #196]	; 0xc4
   2b76c:	ldr	r3, [r3]
   2b770:	cmp	r3, #0
   2b774:	addne	r6, r6, r3
   2b778:	addne	fp, fp, r3
   2b77c:	ldr	r3, [sp, #204]	; 0xcc
   2b780:	ldr	sl, [r3]
   2b784:	cmp	sl, #0
   2b788:	ble	2b7c0 <GetDataSlab+0xa7b4>
   2b78c:	sub	ip, r6, #1
   2b790:	ldr	r3, [sp, #4]
   2b794:	ldr	r2, [sp, #16]
   2b798:	add	r0, r3, r2, lsl #3
   2b79c:	mov	r1, #0
   2b7a0:	ldrb	r2, [ip, #1]!
   2b7a4:	mov	r3, #0
   2b7a8:	strd	r2, [r0], #8
   2b7ac:	add	r1, r1, #1
   2b7b0:	ldr	r3, [sp, #204]	; 0xcc
   2b7b4:	ldr	sl, [r3]
   2b7b8:	cmp	sl, r1
   2b7bc:	bgt	2b7a0 <GetDataSlab+0xa794>
   2b7c0:	ldr	r3, [sp, #192]	; 0xc0
   2b7c4:	ldr	r2, [r3]
   2b7c8:	ldr	r3, [sp, #196]	; 0xc4
   2b7cc:	ldr	r3, [r3]
   2b7d0:	sub	r3, r2, r3
   2b7d4:	add	fp, fp, r3
   2b7d8:	add	r6, r6, r3
   2b7dc:	ldr	r3, [sp, #208]	; 0xd0
   2b7e0:	cmp	r3, #1
   2b7e4:	ble	2b750 <GetDataSlab+0xa744>
   2b7e8:	ldr	r3, [sp, #76]	; 0x4c
   2b7ec:	add	r3, r3, #1
   2b7f0:	str	r3, [sp, #76]	; 0x4c
   2b7f4:	ldr	r2, [sp, #204]	; 0xcc
   2b7f8:	ldr	r1, [r2, #4]
   2b7fc:	mov	r0, r3
   2b800:	bl	517e8 <__aeabi_idivmod>
   2b804:	cmp	r1, #0
   2b808:	bne	2b738 <GetDataSlab+0xa72c>
   2b80c:	add	r5, sp, #76	; 0x4c
   2b810:	ldr	r3, [sp, #204]	; 0xcc
   2b814:	add	r3, r3, #4
   2b818:	str	r3, [sp, #8]
   2b81c:	ldr	r3, [sp, #196]	; 0xc4
   2b820:	add	r8, r3, #4
   2b824:	add	r7, sp, #112	; 0x70
   2b828:	ldr	r9, [sp, #28]
   2b82c:	b	2b6f4 <GetDataSlab+0xa6e8>
   2b830:	mov	r3, #0
   2b834:	b	24fa8 <GetDataSlab+0x3f9c>
   2b838:	ldr	r2, [r9]
   2b83c:	cmp	r2, #0
   2b840:	beq	2b858 <GetDataSlab+0xa84c>
   2b844:	ldr	r3, [sp, #16]
   2b848:	ldr	r3, [r3, #-4]
   2b84c:	mul	r3, r3, r2
   2b850:	add	r6, r6, r3
   2b854:	add	fp, fp, r3
   2b858:	add	sl, sl, #1
   2b85c:	ldr	r3, [sp, #208]	; 0xd0
   2b860:	cmp	r3, sl
   2b864:	beq	2b8f0 <GetDataSlab+0xa8e4>
   2b868:	ldr	r3, [r5]
   2b86c:	add	r3, r3, #1
   2b870:	str	r3, [r5]
   2b874:	add	r9, r9, #4
   2b878:	ldr	r2, [sp, #12]
   2b87c:	ldr	r1, [r2, #4]!
   2b880:	str	r2, [sp, #12]
   2b884:	mov	r0, r3
   2b888:	bl	517e8 <__aeabi_idivmod>
   2b88c:	cmp	r1, #0
   2b890:	bne	2b8dc <GetDataSlab+0xa8d0>
   2b894:	mov	r3, #0
   2b898:	str	r3, [r5], #4
   2b89c:	add	r7, r7, #4
   2b8a0:	str	r7, [sp, #16]
   2b8a4:	ldr	r4, [r7]
   2b8a8:	mov	r1, r4
   2b8ac:	mov	r0, fp
   2b8b0:	bl	517e8 <__aeabi_idivmod>
   2b8b4:	subs	r3, r1, #0
   2b8b8:	beq	2b838 <GetDataSlab+0xa82c>
   2b8bc:	ldr	r2, [r7, #-4]
   2b8c0:	ldr	r1, [r9]
   2b8c4:	sub	r3, r4, r3
   2b8c8:	mla	r3, r1, r2, r3
   2b8cc:	add	r6, r6, r3
   2b8d0:	add	fp, fp, r3
   2b8d4:	b	2b858 <GetDataSlab+0xa84c>
   2b8d8:	mov	sl, #1
   2b8dc:	add	r3, sp, #152	; 0x98
   2b8e0:	add	r3, r3, sl, lsl #2
   2b8e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b8e8:	add	fp, fp, r3
   2b8ec:	add	r6, r6, r3
   2b8f0:	ldr	r3, [sp, #24]
   2b8f4:	ldr	r2, [sp, #8]
   2b8f8:	add	r3, r3, r2
   2b8fc:	str	r3, [sp, #24]
   2b900:	ldr	r2, [sp, #20]
   2b904:	cmp	r3, r2
   2b908:	bge	2b9f4 <GetDataSlab+0xa9e8>
   2b90c:	ldr	r3, [sp, #196]	; 0xc4
   2b910:	ldr	r3, [r3]
   2b914:	cmp	r3, #0
   2b918:	addne	r6, r6, r3
   2b91c:	addne	fp, fp, r3
   2b920:	ldr	r3, [sp, #204]	; 0xcc
   2b924:	ldr	r3, [r3]
   2b928:	str	r3, [sp, #8]
   2b92c:	cmp	r3, #0
   2b930:	ble	2b974 <GetDataSlab+0xa968>
   2b934:	ldr	r3, [sp, #4]
   2b938:	ldr	r2, [sp, #24]
   2b93c:	add	r2, r3, r2, lsl #3
   2b940:	mov	r3, #0
   2b944:	ldrb	r0, [r6]
   2b948:	mov	r1, #0
   2b94c:	strd	r0, [r2], #8
   2b950:	ldr	r1, [r8]
   2b954:	add	r6, r6, r1
   2b958:	add	fp, fp, r1
   2b95c:	add	r3, r3, #1
   2b960:	ldr	r1, [sp, #204]	; 0xcc
   2b964:	ldr	r1, [r1]
   2b968:	str	r1, [sp, #8]
   2b96c:	cmp	r1, r3
   2b970:	bgt	2b944 <GetDataSlab+0xa938>
   2b974:	ldr	r3, [r8]
   2b978:	ldr	r2, [sp, #8]
   2b97c:	mul	r3, r3, r2
   2b980:	ldr	r2, [sp, #192]	; 0xc0
   2b984:	ldr	r2, [r2]
   2b988:	sub	r3, r2, r3
   2b98c:	ldr	r2, [sp, #196]	; 0xc4
   2b990:	ldr	r2, [r2]
   2b994:	sub	r3, r3, r2
   2b998:	add	fp, fp, r3
   2b99c:	add	r6, r6, r3
   2b9a0:	ldr	r3, [sp, #208]	; 0xd0
   2b9a4:	cmp	r3, #1
   2b9a8:	ble	2b8f0 <GetDataSlab+0xa8e4>
   2b9ac:	ldr	r3, [sp, #76]	; 0x4c
   2b9b0:	add	r3, r3, #1
   2b9b4:	str	r3, [sp, #76]	; 0x4c
   2b9b8:	ldr	r2, [sp, #204]	; 0xcc
   2b9bc:	ldr	r1, [r2, #4]
   2b9c0:	mov	r0, r3
   2b9c4:	bl	517e8 <__aeabi_idivmod>
   2b9c8:	cmp	r1, #0
   2b9cc:	bne	2b8d8 <GetDataSlab+0xa8cc>
   2b9d0:	add	r5, sp, #76	; 0x4c
   2b9d4:	ldr	r3, [sp, #204]	; 0xcc
   2b9d8:	add	r3, r3, #4
   2b9dc:	str	r3, [sp, #12]
   2b9e0:	ldr	r3, [sp, #196]	; 0xc4
   2b9e4:	add	r9, r3, #4
   2b9e8:	add	r7, sp, #112	; 0x70
   2b9ec:	mov	sl, #1
   2b9f0:	b	2b894 <GetDataSlab+0xa888>
   2b9f4:	mov	r3, #0
   2b9f8:	b	24fa8 <GetDataSlab+0x3f9c>
   2b9fc:	cmp	r4, #12
   2ba00:	beq	2ba74 <GetDataSlab+0xaa68>
   2ba04:	cmp	r4, #13
   2ba08:	movne	r3, #1
   2ba0c:	bne	24fa8 <GetDataSlab+0x3f9c>
   2ba10:	ldr	r3, [r8]
   2ba14:	str	r3, [sp, #28]
   2ba18:	sub	r3, r3, #1
   2ba1c:	str	r3, [sp, #32]
   2ba20:	ldr	r3, [sp, #192]	; 0xc0
   2ba24:	ldr	r3, [r3]
   2ba28:	str	r3, [sp, #112]	; 0x70
   2ba2c:	ldr	r3, [sp, #204]	; 0xcc
   2ba30:	ldr	r3, [r3]
   2ba34:	str	r3, [sp, #20]
   2ba38:	ldr	r3, [sp, #208]	; 0xd0
   2ba3c:	cmp	r3, #1
   2ba40:	ble	2be44 <GetDataSlab+0xae38>
   2ba44:	str	r8, [sp, #16]
   2ba48:	add	sl, sp, #36	; 0x24
   2ba4c:	ldr	lr, [sp, #192]	; 0xc0
   2ba50:	add	r9, sp, #112	; 0x70
   2ba54:	ldr	r3, [sp, #204]	; 0xcc
   2ba58:	add	r6, r3, #4
   2ba5c:	ldr	r3, [sp, #196]	; 0xc4
   2ba60:	add	r4, r3, #4
   2ba64:	str	lr, [sp, #12]
   2ba68:	mov	r5, #2
   2ba6c:	mov	fp, #0
   2ba70:	b	3f41c <GetDataSlab+0x1e410>
   2ba74:	ldr	r3, [r8]
   2ba78:	str	r3, [sp, #28]
   2ba7c:	sub	r3, r3, #1
   2ba80:	str	r3, [sp, #32]
   2ba84:	ldr	r3, [sp, #192]	; 0xc0
   2ba88:	ldr	r3, [r3]
   2ba8c:	str	r3, [sp, #112]	; 0x70
   2ba90:	ldr	r3, [sp, #204]	; 0xcc
   2ba94:	ldr	r3, [r3]
   2ba98:	str	r3, [sp, #20]
   2ba9c:	ldr	r3, [sp, #208]	; 0xd0
   2baa0:	cmp	r3, #1
   2baa4:	ble	2bad8 <GetDataSlab+0xaacc>
   2baa8:	str	r8, [sp, #16]
   2baac:	add	sl, sp, #36	; 0x24
   2bab0:	ldr	lr, [sp, #192]	; 0xc0
   2bab4:	add	r9, sp, #112	; 0x70
   2bab8:	ldr	r3, [sp, #204]	; 0xcc
   2babc:	add	r6, r3, #4
   2bac0:	ldr	r3, [sp, #196]	; 0xc4
   2bac4:	add	r4, r3, #4
   2bac8:	str	lr, [sp, #12]
   2bacc:	mov	r5, #2
   2bad0:	mov	fp, #0
   2bad4:	b	3f330 <GetDataSlab+0x1e324>
   2bad8:	mov	fp, #0
   2badc:	b	3f3bc <GetDataSlab+0x1e3b0>
   2bae0:	ldr	r3, [sp, #20]
   2bae4:	cmp	r3, #0
   2bae8:	ble	3f3e4 <GetDataSlab+0x1e3d8>
   2baec:	mov	r3, #0
   2baf0:	str	r3, [sp, #16]
   2baf4:	b	2bbc8 <GetDataSlab+0xabbc>
   2baf8:	ldr	r2, [r8]
   2bafc:	cmp	r2, #0
   2bb00:	beq	2bb18 <GetDataSlab+0xab0c>
   2bb04:	ldr	r3, [sp, #12]
   2bb08:	ldr	r3, [r3, #-4]
   2bb0c:	mul	r3, r3, r2
   2bb10:	add	r5, r5, r3, lsl #3
   2bb14:	add	fp, fp, r3
   2bb18:	add	r9, r9, #1
   2bb1c:	ldr	r3, [sp, #208]	; 0xd0
   2bb20:	cmp	r3, r9
   2bb24:	beq	2bbb0 <GetDataSlab+0xaba4>
   2bb28:	ldr	r3, [r6]
   2bb2c:	add	r3, r3, #1
   2bb30:	str	r3, [r6]
   2bb34:	add	r8, r8, #4
   2bb38:	ldr	r2, [sp, #8]
   2bb3c:	ldr	r1, [r2, #4]!
   2bb40:	str	r2, [sp, #8]
   2bb44:	mov	r0, r3
   2bb48:	bl	517e8 <__aeabi_idivmod>
   2bb4c:	cmp	r1, #0
   2bb50:	bne	2bb9c <GetDataSlab+0xab90>
   2bb54:	mov	r3, #0
   2bb58:	str	r3, [r6], #4
   2bb5c:	add	r7, r7, #4
   2bb60:	str	r7, [sp, #12]
   2bb64:	ldr	r4, [r7]
   2bb68:	mov	r1, r4
   2bb6c:	mov	r0, fp
   2bb70:	bl	517e8 <__aeabi_idivmod>
   2bb74:	subs	r3, r1, #0
   2bb78:	beq	2baf8 <GetDataSlab+0xaaec>
   2bb7c:	ldr	r2, [r7, #-4]
   2bb80:	ldr	r1, [r8]
   2bb84:	sub	r3, r4, r3
   2bb88:	mla	r3, r1, r2, r3
   2bb8c:	add	r5, r5, r3, lsl #3
   2bb90:	add	fp, fp, r3
   2bb94:	b	2bb18 <GetDataSlab+0xab0c>
   2bb98:	ldr	r9, [sp, #28]
   2bb9c:	add	r3, sp, #152	; 0x98
   2bba0:	add	r3, r3, r9, lsl #2
   2bba4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bba8:	add	fp, fp, r3
   2bbac:	add	r5, r5, r3, lsl #3
   2bbb0:	ldr	r3, [sp, #16]
   2bbb4:	add	r3, r3, sl
   2bbb8:	str	r3, [sp, #16]
   2bbbc:	ldr	r2, [sp, #20]
   2bbc0:	cmp	r3, r2
   2bbc4:	bge	3f3e4 <GetDataSlab+0x1e3d8>
   2bbc8:	ldr	r3, [sp, #196]	; 0xc4
   2bbcc:	ldr	r3, [r3]
   2bbd0:	cmp	r3, #0
   2bbd4:	addne	r5, r5, r3, lsl #3
   2bbd8:	addne	fp, fp, r3
   2bbdc:	ldr	r3, [sp, #204]	; 0xcc
   2bbe0:	ldr	sl, [r3]
   2bbe4:	cmp	sl, #0
   2bbe8:	ble	2bc1c <GetDataSlab+0xac10>
   2bbec:	sub	ip, r5, #8
   2bbf0:	ldr	r3, [sp, #4]
   2bbf4:	ldr	r2, [sp, #16]
   2bbf8:	add	r0, r3, r2, lsl #3
   2bbfc:	mov	r1, #0
   2bc00:	ldrd	r2, [ip, #8]!
   2bc04:	strd	r2, [r0], #8
   2bc08:	add	r1, r1, #1
   2bc0c:	ldr	r3, [sp, #204]	; 0xcc
   2bc10:	ldr	sl, [r3]
   2bc14:	cmp	sl, r1
   2bc18:	bgt	2bc00 <GetDataSlab+0xabf4>
   2bc1c:	ldr	r3, [sp, #192]	; 0xc0
   2bc20:	ldr	r2, [r3]
   2bc24:	ldr	r3, [sp, #196]	; 0xc4
   2bc28:	ldr	r3, [r3]
   2bc2c:	sub	r3, r2, r3
   2bc30:	add	fp, fp, r3
   2bc34:	add	r5, r5, r3, lsl #3
   2bc38:	ldr	r3, [sp, #208]	; 0xd0
   2bc3c:	cmp	r3, #1
   2bc40:	ble	2bbb0 <GetDataSlab+0xaba4>
   2bc44:	ldr	r3, [sp, #76]	; 0x4c
   2bc48:	add	r3, r3, #1
   2bc4c:	str	r3, [sp, #76]	; 0x4c
   2bc50:	ldr	r2, [sp, #204]	; 0xcc
   2bc54:	ldr	r1, [r2, #4]
   2bc58:	mov	r0, r3
   2bc5c:	bl	517e8 <__aeabi_idivmod>
   2bc60:	cmp	r1, #0
   2bc64:	bne	2bb98 <GetDataSlab+0xab8c>
   2bc68:	add	r6, sp, #76	; 0x4c
   2bc6c:	ldr	r3, [sp, #204]	; 0xcc
   2bc70:	add	r3, r3, #4
   2bc74:	str	r3, [sp, #8]
   2bc78:	ldr	r3, [sp, #196]	; 0xc4
   2bc7c:	add	r8, r3, #4
   2bc80:	add	r7, sp, #112	; 0x70
   2bc84:	ldr	r9, [sp, #28]
   2bc88:	b	2bb54 <GetDataSlab+0xab48>
   2bc8c:	ldr	r2, [r9]
   2bc90:	cmp	r2, #0
   2bc94:	beq	2bcac <GetDataSlab+0xaca0>
   2bc98:	ldr	r3, [sp, #16]
   2bc9c:	ldr	r3, [r3, #-4]
   2bca0:	mul	r3, r3, r2
   2bca4:	add	r5, r5, r3, lsl #3
   2bca8:	add	fp, fp, r3
   2bcac:	add	sl, sl, #1
   2bcb0:	ldr	r3, [sp, #208]	; 0xd0
   2bcb4:	cmp	r3, sl
   2bcb8:	beq	2bd44 <GetDataSlab+0xad38>
   2bcbc:	ldr	r3, [r6]
   2bcc0:	add	r3, r3, #1
   2bcc4:	str	r3, [r6]
   2bcc8:	add	r9, r9, #4
   2bccc:	ldr	r2, [sp, #12]
   2bcd0:	ldr	r1, [r2, #4]!
   2bcd4:	str	r2, [sp, #12]
   2bcd8:	mov	r0, r3
   2bcdc:	bl	517e8 <__aeabi_idivmod>
   2bce0:	cmp	r1, #0
   2bce4:	bne	2bd30 <GetDataSlab+0xad24>
   2bce8:	mov	r3, #0
   2bcec:	str	r3, [r6], #4
   2bcf0:	add	r7, r7, #4
   2bcf4:	str	r7, [sp, #16]
   2bcf8:	ldr	r4, [r7]
   2bcfc:	mov	r1, r4
   2bd00:	mov	r0, fp
   2bd04:	bl	517e8 <__aeabi_idivmod>
   2bd08:	subs	r3, r1, #0
   2bd0c:	beq	2bc8c <GetDataSlab+0xac80>
   2bd10:	ldr	r2, [r7, #-4]
   2bd14:	ldr	r1, [r9]
   2bd18:	sub	r3, r4, r3
   2bd1c:	mla	r3, r1, r2, r3
   2bd20:	add	r5, r5, r3, lsl #3
   2bd24:	add	fp, fp, r3
   2bd28:	b	2bcac <GetDataSlab+0xaca0>
   2bd2c:	mov	sl, #1
   2bd30:	add	r3, sp, #152	; 0x98
   2bd34:	add	r3, r3, sl, lsl #2
   2bd38:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bd3c:	add	fp, fp, r3
   2bd40:	add	r5, r5, r3, lsl #3
   2bd44:	ldr	r3, [sp, #24]
   2bd48:	ldr	r2, [sp, #8]
   2bd4c:	add	r3, r3, r2
   2bd50:	str	r3, [sp, #24]
   2bd54:	ldr	r2, [sp, #20]
   2bd58:	cmp	r3, r2
   2bd5c:	bge	3f3e4 <GetDataSlab+0x1e3d8>
   2bd60:	ldr	r3, [sp, #196]	; 0xc4
   2bd64:	ldr	r3, [r3]
   2bd68:	cmp	r3, #0
   2bd6c:	addne	r5, r5, r3, lsl #3
   2bd70:	addne	fp, fp, r3
   2bd74:	ldr	r3, [sp, #204]	; 0xcc
   2bd78:	ldr	r3, [r3]
   2bd7c:	str	r3, [sp, #8]
   2bd80:	cmp	r3, #0
   2bd84:	ble	2bdc4 <GetDataSlab+0xadb8>
   2bd88:	ldr	r3, [sp, #4]
   2bd8c:	ldr	r2, [sp, #24]
   2bd90:	add	r2, r3, r2, lsl #3
   2bd94:	mov	r3, #0
   2bd98:	ldrd	r0, [r5]
   2bd9c:	strd	r0, [r2], #8
   2bda0:	ldr	r1, [r8]
   2bda4:	add	r5, r5, r1, lsl #3
   2bda8:	add	fp, fp, r1
   2bdac:	add	r3, r3, #1
   2bdb0:	ldr	r1, [sp, #204]	; 0xcc
   2bdb4:	ldr	r1, [r1]
   2bdb8:	str	r1, [sp, #8]
   2bdbc:	cmp	r1, r3
   2bdc0:	bgt	2bd98 <GetDataSlab+0xad8c>
   2bdc4:	ldr	r3, [r8]
   2bdc8:	ldr	r2, [sp, #8]
   2bdcc:	mul	r3, r3, r2
   2bdd0:	ldr	r2, [sp, #192]	; 0xc0
   2bdd4:	ldr	r2, [r2]
   2bdd8:	sub	r3, r2, r3
   2bddc:	ldr	r2, [sp, #196]	; 0xc4
   2bde0:	ldr	r2, [r2]
   2bde4:	sub	r3, r3, r2
   2bde8:	add	fp, fp, r3
   2bdec:	add	r5, r5, r3, lsl #3
   2bdf0:	ldr	r3, [sp, #208]	; 0xd0
   2bdf4:	cmp	r3, #1
   2bdf8:	ble	2bd44 <GetDataSlab+0xad38>
   2bdfc:	ldr	r3, [sp, #76]	; 0x4c
   2be00:	add	r3, r3, #1
   2be04:	str	r3, [sp, #76]	; 0x4c
   2be08:	ldr	r2, [sp, #204]	; 0xcc
   2be0c:	ldr	r1, [r2, #4]
   2be10:	mov	r0, r3
   2be14:	bl	517e8 <__aeabi_idivmod>
   2be18:	cmp	r1, #0
   2be1c:	bne	2bd2c <GetDataSlab+0xad20>
   2be20:	add	r6, sp, #76	; 0x4c
   2be24:	ldr	r3, [sp, #204]	; 0xcc
   2be28:	add	r3, r3, #4
   2be2c:	str	r3, [sp, #12]
   2be30:	ldr	r3, [sp, #196]	; 0xc4
   2be34:	add	r9, r3, #4
   2be38:	add	r7, sp, #112	; 0x70
   2be3c:	mov	sl, #1
   2be40:	b	2bce8 <GetDataSlab+0xacdc>
   2be44:	mov	fp, #0
   2be48:	b	3f4a8 <GetDataSlab+0x1e49c>
   2be4c:	ldr	r3, [sp, #20]
   2be50:	cmp	r3, #0
   2be54:	ble	3d458 <GetDataSlab+0x1c44c>
   2be58:	mov	r3, #0
   2be5c:	str	r3, [sp, #16]
   2be60:	b	2bf34 <GetDataSlab+0xaf28>
   2be64:	ldr	r2, [r8]
   2be68:	cmp	r2, #0
   2be6c:	beq	2be84 <GetDataSlab+0xae78>
   2be70:	ldr	r3, [sp, #12]
   2be74:	ldr	r3, [r3, #-4]
   2be78:	mul	r3, r3, r2
   2be7c:	add	r5, r5, r3, lsl #3
   2be80:	add	fp, fp, r3
   2be84:	add	r9, r9, #1
   2be88:	ldr	r3, [sp, #208]	; 0xd0
   2be8c:	cmp	r3, r9
   2be90:	beq	2bf1c <GetDataSlab+0xaf10>
   2be94:	ldr	r3, [r6]
   2be98:	add	r3, r3, #1
   2be9c:	str	r3, [r6]
   2bea0:	add	r8, r8, #4
   2bea4:	ldr	r2, [sp, #8]
   2bea8:	ldr	r1, [r2, #4]!
   2beac:	str	r2, [sp, #8]
   2beb0:	mov	r0, r3
   2beb4:	bl	517e8 <__aeabi_idivmod>
   2beb8:	cmp	r1, #0
   2bebc:	bne	2bf08 <GetDataSlab+0xaefc>
   2bec0:	mov	r3, #0
   2bec4:	str	r3, [r6], #4
   2bec8:	add	r7, r7, #4
   2becc:	str	r7, [sp, #12]
   2bed0:	ldr	r4, [r7]
   2bed4:	mov	r1, r4
   2bed8:	mov	r0, fp
   2bedc:	bl	517e8 <__aeabi_idivmod>
   2bee0:	subs	r3, r1, #0
   2bee4:	beq	2be64 <GetDataSlab+0xae58>
   2bee8:	ldr	r2, [r7, #-4]
   2beec:	ldr	r1, [r8]
   2bef0:	sub	r3, r4, r3
   2bef4:	mla	r3, r1, r2, r3
   2bef8:	add	r5, r5, r3, lsl #3
   2befc:	add	fp, fp, r3
   2bf00:	b	2be84 <GetDataSlab+0xae78>
   2bf04:	ldr	r9, [sp, #28]
   2bf08:	add	r3, sp, #152	; 0x98
   2bf0c:	add	r3, r3, r9, lsl #2
   2bf10:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bf14:	add	fp, fp, r3
   2bf18:	add	r5, r5, r3, lsl #3
   2bf1c:	ldr	r3, [sp, #16]
   2bf20:	add	r3, r3, sl
   2bf24:	str	r3, [sp, #16]
   2bf28:	ldr	r2, [sp, #20]
   2bf2c:	cmp	r3, r2
   2bf30:	bge	2bff8 <GetDataSlab+0xafec>
   2bf34:	ldr	r3, [sp, #196]	; 0xc4
   2bf38:	ldr	r3, [r3]
   2bf3c:	cmp	r3, #0
   2bf40:	addne	r5, r5, r3, lsl #3
   2bf44:	addne	fp, fp, r3
   2bf48:	ldr	r3, [sp, #204]	; 0xcc
   2bf4c:	ldr	sl, [r3]
   2bf50:	cmp	sl, #0
   2bf54:	ble	2bf88 <GetDataSlab+0xaf7c>
   2bf58:	sub	ip, r5, #8
   2bf5c:	ldr	r3, [sp, #4]
   2bf60:	ldr	r2, [sp, #16]
   2bf64:	add	r0, r3, r2, lsl #3
   2bf68:	mov	r1, #0
   2bf6c:	ldrd	r2, [ip, #8]!
   2bf70:	strd	r2, [r0], #8
   2bf74:	add	r1, r1, #1
   2bf78:	ldr	r3, [sp, #204]	; 0xcc
   2bf7c:	ldr	sl, [r3]
   2bf80:	cmp	sl, r1
   2bf84:	bgt	2bf6c <GetDataSlab+0xaf60>
   2bf88:	ldr	r3, [sp, #192]	; 0xc0
   2bf8c:	ldr	r2, [r3]
   2bf90:	ldr	r3, [sp, #196]	; 0xc4
   2bf94:	ldr	r3, [r3]
   2bf98:	sub	r3, r2, r3
   2bf9c:	add	fp, fp, r3
   2bfa0:	add	r5, r5, r3, lsl #3
   2bfa4:	ldr	r3, [sp, #208]	; 0xd0
   2bfa8:	cmp	r3, #1
   2bfac:	ble	2bf1c <GetDataSlab+0xaf10>
   2bfb0:	ldr	r3, [sp, #76]	; 0x4c
   2bfb4:	add	r3, r3, #1
   2bfb8:	str	r3, [sp, #76]	; 0x4c
   2bfbc:	ldr	r2, [sp, #204]	; 0xcc
   2bfc0:	ldr	r1, [r2, #4]
   2bfc4:	mov	r0, r3
   2bfc8:	bl	517e8 <__aeabi_idivmod>
   2bfcc:	cmp	r1, #0
   2bfd0:	bne	2bf04 <GetDataSlab+0xaef8>
   2bfd4:	add	r6, sp, #76	; 0x4c
   2bfd8:	ldr	r3, [sp, #204]	; 0xcc
   2bfdc:	add	r3, r3, #4
   2bfe0:	str	r3, [sp, #8]
   2bfe4:	ldr	r3, [sp, #196]	; 0xc4
   2bfe8:	add	r8, r3, #4
   2bfec:	add	r7, sp, #112	; 0x70
   2bff0:	ldr	r9, [sp, #28]
   2bff4:	b	2bec0 <GetDataSlab+0xaeb4>
   2bff8:	mov	r3, #0
   2bffc:	b	24fa8 <GetDataSlab+0x3f9c>
   2c000:	ldr	r2, [r9]
   2c004:	cmp	r2, #0
   2c008:	beq	2c020 <GetDataSlab+0xb014>
   2c00c:	ldr	r3, [sp, #16]
   2c010:	ldr	r3, [r3, #-4]
   2c014:	mul	r3, r3, r2
   2c018:	add	r5, r5, r3, lsl #3
   2c01c:	add	fp, fp, r3
   2c020:	add	sl, sl, #1
   2c024:	ldr	r3, [sp, #208]	; 0xd0
   2c028:	cmp	r3, sl
   2c02c:	beq	2c0b8 <GetDataSlab+0xb0ac>
   2c030:	ldr	r3, [r6]
   2c034:	add	r3, r3, #1
   2c038:	str	r3, [r6]
   2c03c:	add	r9, r9, #4
   2c040:	ldr	r2, [sp, #12]
   2c044:	ldr	r1, [r2, #4]!
   2c048:	str	r2, [sp, #12]
   2c04c:	mov	r0, r3
   2c050:	bl	517e8 <__aeabi_idivmod>
   2c054:	cmp	r1, #0
   2c058:	bne	2c0a4 <GetDataSlab+0xb098>
   2c05c:	mov	r3, #0
   2c060:	str	r3, [r6], #4
   2c064:	add	r7, r7, #4
   2c068:	str	r7, [sp, #16]
   2c06c:	ldr	r4, [r7]
   2c070:	mov	r1, r4
   2c074:	mov	r0, fp
   2c078:	bl	517e8 <__aeabi_idivmod>
   2c07c:	subs	r3, r1, #0
   2c080:	beq	2c000 <GetDataSlab+0xaff4>
   2c084:	ldr	r2, [r7, #-4]
   2c088:	ldr	r1, [r9]
   2c08c:	sub	r3, r4, r3
   2c090:	mla	r3, r1, r2, r3
   2c094:	add	r5, r5, r3, lsl #3
   2c098:	add	fp, fp, r3
   2c09c:	b	2c020 <GetDataSlab+0xb014>
   2c0a0:	mov	sl, #1
   2c0a4:	add	r3, sp, #152	; 0x98
   2c0a8:	add	r3, r3, sl, lsl #2
   2c0ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c0b0:	add	fp, fp, r3
   2c0b4:	add	r5, r5, r3, lsl #3
   2c0b8:	ldr	r3, [sp, #24]
   2c0bc:	ldr	r2, [sp, #8]
   2c0c0:	add	r3, r3, r2
   2c0c4:	str	r3, [sp, #24]
   2c0c8:	ldr	r2, [sp, #20]
   2c0cc:	cmp	r3, r2
   2c0d0:	bge	2c1b8 <GetDataSlab+0xb1ac>
   2c0d4:	ldr	r3, [sp, #196]	; 0xc4
   2c0d8:	ldr	r3, [r3]
   2c0dc:	cmp	r3, #0
   2c0e0:	addne	r5, r5, r3, lsl #3
   2c0e4:	addne	fp, fp, r3
   2c0e8:	ldr	r3, [sp, #204]	; 0xcc
   2c0ec:	ldr	r3, [r3]
   2c0f0:	str	r3, [sp, #8]
   2c0f4:	cmp	r3, #0
   2c0f8:	ble	2c138 <GetDataSlab+0xb12c>
   2c0fc:	ldr	r3, [sp, #4]
   2c100:	ldr	r2, [sp, #24]
   2c104:	add	r2, r3, r2, lsl #3
   2c108:	mov	r3, #0
   2c10c:	ldrd	r0, [r5]
   2c110:	strd	r0, [r2], #8
   2c114:	ldr	r1, [r8]
   2c118:	add	r5, r5, r1, lsl #3
   2c11c:	add	fp, fp, r1
   2c120:	add	r3, r3, #1
   2c124:	ldr	r1, [sp, #204]	; 0xcc
   2c128:	ldr	r1, [r1]
   2c12c:	str	r1, [sp, #8]
   2c130:	cmp	r1, r3
   2c134:	bgt	2c10c <GetDataSlab+0xb100>
   2c138:	ldr	r3, [r8]
   2c13c:	ldr	r2, [sp, #8]
   2c140:	mul	r3, r3, r2
   2c144:	ldr	r2, [sp, #192]	; 0xc0
   2c148:	ldr	r2, [r2]
   2c14c:	sub	r3, r2, r3
   2c150:	ldr	r2, [sp, #196]	; 0xc4
   2c154:	ldr	r2, [r2]
   2c158:	sub	r3, r3, r2
   2c15c:	add	fp, fp, r3
   2c160:	add	r5, r5, r3, lsl #3
   2c164:	ldr	r3, [sp, #208]	; 0xd0
   2c168:	cmp	r3, #1
   2c16c:	ble	2c0b8 <GetDataSlab+0xb0ac>
   2c170:	ldr	r3, [sp, #76]	; 0x4c
   2c174:	add	r3, r3, #1
   2c178:	str	r3, [sp, #76]	; 0x4c
   2c17c:	ldr	r2, [sp, #204]	; 0xcc
   2c180:	ldr	r1, [r2, #4]
   2c184:	mov	r0, r3
   2c188:	bl	517e8 <__aeabi_idivmod>
   2c18c:	cmp	r1, #0
   2c190:	bne	2c0a0 <GetDataSlab+0xb094>
   2c194:	add	r6, sp, #76	; 0x4c
   2c198:	ldr	r3, [sp, #204]	; 0xcc
   2c19c:	add	r3, r3, #4
   2c1a0:	str	r3, [sp, #12]
   2c1a4:	ldr	r3, [sp, #196]	; 0xc4
   2c1a8:	add	r9, r3, #4
   2c1ac:	add	r7, sp, #112	; 0x70
   2c1b0:	mov	sl, #1
   2c1b4:	b	2c05c <GetDataSlab+0xb050>
   2c1b8:	mov	r3, #0
   2c1bc:	b	24fa8 <GetDataSlab+0x3f9c>
   2c1c0:	sub	r3, r4, #1
   2c1c4:	cmp	r3, #8
   2c1c8:	addls	pc, pc, r3, lsl #2
   2c1cc:	b	2e14c <GetDataSlab+0xd140>
   2c1d0:	b	2d97c <GetDataSlab+0xc970>
   2c1d4:	b	2dd64 <GetDataSlab+0xcd58>
   2c1d8:	b	2d1ac <GetDataSlab+0xc1a0>
   2c1dc:	b	2d594 <GetDataSlab+0xc588>
   2c1e0:	b	2c9c4 <GetDataSlab+0xb9b8>
   2c1e4:	b	2cdb4 <GetDataSlab+0xbda8>
   2c1e8:	b	2c5dc <GetDataSlab+0xb5d0>
   2c1ec:	b	2e14c <GetDataSlab+0xd140>
   2c1f0:	b	2c1f4 <GetDataSlab+0xb1e8>
   2c1f4:	ldr	r3, [r8]
   2c1f8:	str	r3, [sp, #28]
   2c1fc:	sub	r3, r3, #1
   2c200:	str	r3, [sp, #32]
   2c204:	ldr	r3, [sp, #192]	; 0xc0
   2c208:	ldr	r3, [r3]
   2c20c:	str	r3, [sp, #112]	; 0x70
   2c210:	ldr	r3, [sp, #204]	; 0xcc
   2c214:	ldr	r3, [r3]
   2c218:	str	r3, [sp, #20]
   2c21c:	ldr	r3, [sp, #208]	; 0xd0
   2c220:	cmp	r3, #1
   2c224:	ble	2c258 <GetDataSlab+0xb24c>
   2c228:	str	r8, [sp, #16]
   2c22c:	add	sl, sp, #36	; 0x24
   2c230:	ldr	lr, [sp, #192]	; 0xc0
   2c234:	add	r9, sp, #112	; 0x70
   2c238:	ldr	r3, [sp, #204]	; 0xcc
   2c23c:	add	r5, r3, #4
   2c240:	ldr	r3, [sp, #196]	; 0xc4
   2c244:	add	r4, r3, #4
   2c248:	str	lr, [sp, #12]
   2c24c:	mov	r6, #2
   2c250:	mov	fp, #0
   2c254:	b	3f508 <GetDataSlab+0x1e4fc>
   2c258:	mov	fp, #0
   2c25c:	b	3f594 <GetDataSlab+0x1e588>
   2c260:	ldr	r3, [sp, #20]
   2c264:	cmp	r3, #0
   2c268:	ble	3d460 <GetDataSlab+0x1c454>
   2c26c:	mov	r3, #0
   2c270:	str	r3, [sp, #16]
   2c274:	b	2c348 <GetDataSlab+0xb33c>
   2c278:	ldr	r2, [r8]
   2c27c:	cmp	r2, #0
   2c280:	beq	2c298 <GetDataSlab+0xb28c>
   2c284:	ldr	r3, [sp, #12]
   2c288:	ldr	r3, [r3, #-4]
   2c28c:	mul	r3, r3, r2
   2c290:	add	r7, r7, r3, lsl #3
   2c294:	add	fp, fp, r3
   2c298:	add	r9, r9, #1
   2c29c:	ldr	r3, [sp, #208]	; 0xd0
   2c2a0:	cmp	r3, r9
   2c2a4:	beq	2c330 <GetDataSlab+0xb324>
   2c2a8:	ldr	r3, [r5]
   2c2ac:	add	r3, r3, #1
   2c2b0:	str	r3, [r5]
   2c2b4:	add	r8, r8, #4
   2c2b8:	ldr	r2, [sp, #8]
   2c2bc:	ldr	r1, [r2, #4]!
   2c2c0:	str	r2, [sp, #8]
   2c2c4:	mov	r0, r3
   2c2c8:	bl	517e8 <__aeabi_idivmod>
   2c2cc:	cmp	r1, #0
   2c2d0:	bne	2c31c <GetDataSlab+0xb310>
   2c2d4:	mov	r3, #0
   2c2d8:	str	r3, [r5], #4
   2c2dc:	add	r6, r6, #4
   2c2e0:	str	r6, [sp, #12]
   2c2e4:	ldr	r4, [r6]
   2c2e8:	mov	r1, r4
   2c2ec:	mov	r0, fp
   2c2f0:	bl	517e8 <__aeabi_idivmod>
   2c2f4:	subs	r3, r1, #0
   2c2f8:	beq	2c278 <GetDataSlab+0xb26c>
   2c2fc:	ldr	r2, [r6, #-4]
   2c300:	ldr	r1, [r8]
   2c304:	sub	r3, r4, r3
   2c308:	mla	r3, r1, r2, r3
   2c30c:	add	r7, r7, r3, lsl #3
   2c310:	add	fp, fp, r3
   2c314:	b	2c298 <GetDataSlab+0xb28c>
   2c318:	ldr	r9, [sp, #28]
   2c31c:	add	r3, sp, #152	; 0x98
   2c320:	add	r3, r3, r9, lsl #2
   2c324:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c328:	add	fp, fp, r3
   2c32c:	add	r7, r7, r3, lsl #3
   2c330:	ldr	r3, [sp, #16]
   2c334:	add	r3, r3, sl
   2c338:	str	r3, [sp, #16]
   2c33c:	ldr	r2, [sp, #20]
   2c340:	cmp	r3, r2
   2c344:	bge	2c410 <GetDataSlab+0xb404>
   2c348:	ldr	r3, [sp, #196]	; 0xc4
   2c34c:	ldr	r3, [r3]
   2c350:	cmp	r3, #0
   2c354:	addne	r7, r7, r3, lsl #3
   2c358:	addne	fp, fp, r3
   2c35c:	ldr	r3, [sp, #204]	; 0xcc
   2c360:	ldr	sl, [r3]
   2c364:	cmp	sl, #0
   2c368:	ble	2c3a0 <GetDataSlab+0xb394>
   2c36c:	mov	r6, r7
   2c370:	ldr	r3, [sp, #4]
   2c374:	ldr	r2, [sp, #16]
   2c378:	add	r5, r3, r2, lsl #3
   2c37c:	mov	r4, #0
   2c380:	ldrd	r0, [r6], #8
   2c384:	bl	51ec0 <__aeabi_d2ulz>
   2c388:	strd	r0, [r5], #8
   2c38c:	add	r4, r4, #1
   2c390:	ldr	r3, [sp, #204]	; 0xcc
   2c394:	ldr	sl, [r3]
   2c398:	cmp	sl, r4
   2c39c:	bgt	2c380 <GetDataSlab+0xb374>
   2c3a0:	ldr	r3, [sp, #192]	; 0xc0
   2c3a4:	ldr	r2, [r3]
   2c3a8:	ldr	r3, [sp, #196]	; 0xc4
   2c3ac:	ldr	r3, [r3]
   2c3b0:	sub	r3, r2, r3
   2c3b4:	add	fp, fp, r3
   2c3b8:	add	r7, r7, r3, lsl #3
   2c3bc:	ldr	r3, [sp, #208]	; 0xd0
   2c3c0:	cmp	r3, #1
   2c3c4:	ble	2c330 <GetDataSlab+0xb324>
   2c3c8:	ldr	r3, [sp, #76]	; 0x4c
   2c3cc:	add	r3, r3, #1
   2c3d0:	str	r3, [sp, #76]	; 0x4c
   2c3d4:	ldr	r2, [sp, #204]	; 0xcc
   2c3d8:	ldr	r1, [r2, #4]
   2c3dc:	mov	r0, r3
   2c3e0:	bl	517e8 <__aeabi_idivmod>
   2c3e4:	cmp	r1, #0
   2c3e8:	bne	2c318 <GetDataSlab+0xb30c>
   2c3ec:	add	r5, sp, #76	; 0x4c
   2c3f0:	ldr	r3, [sp, #204]	; 0xcc
   2c3f4:	add	r3, r3, #4
   2c3f8:	str	r3, [sp, #8]
   2c3fc:	ldr	r3, [sp, #196]	; 0xc4
   2c400:	add	r8, r3, #4
   2c404:	add	r6, sp, #112	; 0x70
   2c408:	ldr	r9, [sp, #28]
   2c40c:	b	2c2d4 <GetDataSlab+0xb2c8>
   2c410:	mov	r3, #0
   2c414:	b	24fa8 <GetDataSlab+0x3f9c>
   2c418:	ldr	r2, [r9]
   2c41c:	cmp	r2, #0
   2c420:	beq	2c438 <GetDataSlab+0xb42c>
   2c424:	ldr	r3, [sp, #16]
   2c428:	ldr	r3, [r3, #-4]
   2c42c:	mul	r3, r3, r2
   2c430:	add	r7, r7, r3, lsl #3
   2c434:	add	fp, fp, r3
   2c438:	add	sl, sl, #1
   2c43c:	ldr	r3, [sp, #208]	; 0xd0
   2c440:	cmp	r3, sl
   2c444:	beq	2c4d0 <GetDataSlab+0xb4c4>
   2c448:	ldr	r3, [r5]
   2c44c:	add	r3, r3, #1
   2c450:	str	r3, [r5]
   2c454:	add	r9, r9, #4
   2c458:	ldr	r2, [sp, #12]
   2c45c:	ldr	r1, [r2, #4]!
   2c460:	str	r2, [sp, #12]
   2c464:	mov	r0, r3
   2c468:	bl	517e8 <__aeabi_idivmod>
   2c46c:	cmp	r1, #0
   2c470:	bne	2c4bc <GetDataSlab+0xb4b0>
   2c474:	mov	r3, #0
   2c478:	str	r3, [r5], #4
   2c47c:	add	r6, r6, #4
   2c480:	str	r6, [sp, #16]
   2c484:	ldr	r4, [r6]
   2c488:	mov	r1, r4
   2c48c:	mov	r0, fp
   2c490:	bl	517e8 <__aeabi_idivmod>
   2c494:	subs	r3, r1, #0
   2c498:	beq	2c418 <GetDataSlab+0xb40c>
   2c49c:	ldr	r2, [r6, #-4]
   2c4a0:	ldr	r1, [r9]
   2c4a4:	sub	r3, r4, r3
   2c4a8:	mla	r3, r1, r2, r3
   2c4ac:	add	r7, r7, r3, lsl #3
   2c4b0:	add	fp, fp, r3
   2c4b4:	b	2c438 <GetDataSlab+0xb42c>
   2c4b8:	mov	sl, #1
   2c4bc:	add	r3, sp, #152	; 0x98
   2c4c0:	add	r3, r3, sl, lsl #2
   2c4c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c4c8:	add	fp, fp, r3
   2c4cc:	add	r7, r7, r3, lsl #3
   2c4d0:	ldr	r3, [sp, #24]
   2c4d4:	ldr	r2, [sp, #8]
   2c4d8:	add	r3, r3, r2
   2c4dc:	str	r3, [sp, #24]
   2c4e0:	ldr	r2, [sp, #20]
   2c4e4:	cmp	r3, r2
   2c4e8:	bge	2c5d4 <GetDataSlab+0xb5c8>
   2c4ec:	ldr	r3, [sp, #196]	; 0xc4
   2c4f0:	ldr	r3, [r3]
   2c4f4:	cmp	r3, #0
   2c4f8:	addne	r7, r7, r3, lsl #3
   2c4fc:	addne	fp, fp, r3
   2c500:	ldr	r3, [sp, #204]	; 0xcc
   2c504:	ldr	r3, [r3]
   2c508:	str	r3, [sp, #8]
   2c50c:	cmp	r3, #0
   2c510:	ble	2c554 <GetDataSlab+0xb548>
   2c514:	ldr	r3, [sp, #4]
   2c518:	ldr	r2, [sp, #24]
   2c51c:	add	r5, r3, r2, lsl #3
   2c520:	mov	r4, #0
   2c524:	ldrd	r0, [r7]
   2c528:	bl	51ec0 <__aeabi_d2ulz>
   2c52c:	strd	r0, [r5], #8
   2c530:	ldr	r3, [r8]
   2c534:	add	r7, r7, r3, lsl #3
   2c538:	add	fp, fp, r3
   2c53c:	add	r4, r4, #1
   2c540:	ldr	r3, [sp, #204]	; 0xcc
   2c544:	ldr	r3, [r3]
   2c548:	str	r3, [sp, #8]
   2c54c:	cmp	r3, r4
   2c550:	bgt	2c524 <GetDataSlab+0xb518>
   2c554:	ldr	r3, [r8]
   2c558:	ldr	r2, [sp, #8]
   2c55c:	mul	r3, r3, r2
   2c560:	ldr	r2, [sp, #192]	; 0xc0
   2c564:	ldr	r2, [r2]
   2c568:	sub	r3, r2, r3
   2c56c:	ldr	r2, [sp, #196]	; 0xc4
   2c570:	ldr	r2, [r2]
   2c574:	sub	r3, r3, r2
   2c578:	add	fp, fp, r3
   2c57c:	add	r7, r7, r3, lsl #3
   2c580:	ldr	r3, [sp, #208]	; 0xd0
   2c584:	cmp	r3, #1
   2c588:	ble	2c4d0 <GetDataSlab+0xb4c4>
   2c58c:	ldr	r3, [sp, #76]	; 0x4c
   2c590:	add	r3, r3, #1
   2c594:	str	r3, [sp, #76]	; 0x4c
   2c598:	ldr	r2, [sp, #204]	; 0xcc
   2c59c:	ldr	r1, [r2, #4]
   2c5a0:	mov	r0, r3
   2c5a4:	bl	517e8 <__aeabi_idivmod>
   2c5a8:	cmp	r1, #0
   2c5ac:	bne	2c4b8 <GetDataSlab+0xb4ac>
   2c5b0:	add	r5, sp, #76	; 0x4c
   2c5b4:	ldr	r3, [sp, #204]	; 0xcc
   2c5b8:	add	r3, r3, #4
   2c5bc:	str	r3, [sp, #12]
   2c5c0:	ldr	r3, [sp, #196]	; 0xc4
   2c5c4:	add	r9, r3, #4
   2c5c8:	add	r6, sp, #112	; 0x70
   2c5cc:	mov	sl, #1
   2c5d0:	b	2c474 <GetDataSlab+0xb468>
   2c5d4:	mov	r3, #0
   2c5d8:	b	24fa8 <GetDataSlab+0x3f9c>
   2c5dc:	ldr	r3, [r8]
   2c5e0:	str	r3, [sp, #28]
   2c5e4:	sub	r3, r3, #1
   2c5e8:	str	r3, [sp, #32]
   2c5ec:	ldr	r3, [sp, #192]	; 0xc0
   2c5f0:	ldr	r3, [r3]
   2c5f4:	str	r3, [sp, #112]	; 0x70
   2c5f8:	ldr	r3, [sp, #204]	; 0xcc
   2c5fc:	ldr	r3, [r3]
   2c600:	str	r3, [sp, #20]
   2c604:	ldr	r3, [sp, #208]	; 0xd0
   2c608:	cmp	r3, #1
   2c60c:	ble	2c640 <GetDataSlab+0xb634>
   2c610:	str	r8, [sp, #16]
   2c614:	add	sl, sp, #36	; 0x24
   2c618:	ldr	lr, [sp, #192]	; 0xc0
   2c61c:	add	r9, sp, #112	; 0x70
   2c620:	ldr	r3, [sp, #204]	; 0xcc
   2c624:	add	r5, r3, #4
   2c628:	ldr	r3, [sp, #196]	; 0xc4
   2c62c:	add	r4, r3, #4
   2c630:	str	lr, [sp, #12]
   2c634:	mov	r6, #2
   2c638:	mov	fp, #0
   2c63c:	b	3f5f4 <GetDataSlab+0x1e5e8>
   2c640:	mov	fp, #0
   2c644:	b	3f680 <GetDataSlab+0x1e674>
   2c648:	ldr	r3, [sp, #20]
   2c64c:	cmp	r3, #0
   2c650:	ble	3d468 <GetDataSlab+0x1c45c>
   2c654:	mov	r3, #0
   2c658:	str	r3, [sp, #16]
   2c65c:	b	2c730 <GetDataSlab+0xb724>
   2c660:	ldr	r2, [r8]
   2c664:	cmp	r2, #0
   2c668:	beq	2c680 <GetDataSlab+0xb674>
   2c66c:	ldr	r3, [sp, #12]
   2c670:	ldr	r3, [r3, #-4]
   2c674:	mul	r3, r3, r2
   2c678:	add	r7, r7, r3, lsl #2
   2c67c:	add	fp, fp, r3
   2c680:	add	r9, r9, #1
   2c684:	ldr	r3, [sp, #208]	; 0xd0
   2c688:	cmp	r3, r9
   2c68c:	beq	2c718 <GetDataSlab+0xb70c>
   2c690:	ldr	r3, [r5]
   2c694:	add	r3, r3, #1
   2c698:	str	r3, [r5]
   2c69c:	add	r8, r8, #4
   2c6a0:	ldr	r2, [sp, #8]
   2c6a4:	ldr	r1, [r2, #4]!
   2c6a8:	str	r2, [sp, #8]
   2c6ac:	mov	r0, r3
   2c6b0:	bl	517e8 <__aeabi_idivmod>
   2c6b4:	cmp	r1, #0
   2c6b8:	bne	2c704 <GetDataSlab+0xb6f8>
   2c6bc:	mov	r3, #0
   2c6c0:	str	r3, [r5], #4
   2c6c4:	add	r6, r6, #4
   2c6c8:	str	r6, [sp, #12]
   2c6cc:	ldr	r4, [r6]
   2c6d0:	mov	r1, r4
   2c6d4:	mov	r0, fp
   2c6d8:	bl	517e8 <__aeabi_idivmod>
   2c6dc:	subs	r3, r1, #0
   2c6e0:	beq	2c660 <GetDataSlab+0xb654>
   2c6e4:	ldr	r2, [r6, #-4]
   2c6e8:	ldr	r1, [r8]
   2c6ec:	sub	r3, r4, r3
   2c6f0:	mla	r3, r1, r2, r3
   2c6f4:	add	r7, r7, r3, lsl #2
   2c6f8:	add	fp, fp, r3
   2c6fc:	b	2c680 <GetDataSlab+0xb674>
   2c700:	ldr	r9, [sp, #28]
   2c704:	add	r3, sp, #152	; 0x98
   2c708:	add	r3, r3, r9, lsl #2
   2c70c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c710:	add	fp, fp, r3
   2c714:	add	r7, r7, r3, lsl #2
   2c718:	ldr	r3, [sp, #16]
   2c71c:	add	r3, r3, sl
   2c720:	str	r3, [sp, #16]
   2c724:	ldr	r2, [sp, #20]
   2c728:	cmp	r3, r2
   2c72c:	bge	2c7f8 <GetDataSlab+0xb7ec>
   2c730:	ldr	r3, [sp, #196]	; 0xc4
   2c734:	ldr	r3, [r3]
   2c738:	cmp	r3, #0
   2c73c:	addne	r7, r7, r3, lsl #2
   2c740:	addne	fp, fp, r3
   2c744:	ldr	r3, [sp, #204]	; 0xcc
   2c748:	ldr	sl, [r3]
   2c74c:	cmp	sl, #0
   2c750:	ble	2c788 <GetDataSlab+0xb77c>
   2c754:	mov	r6, r7
   2c758:	ldr	r3, [sp, #4]
   2c75c:	ldr	r2, [sp, #16]
   2c760:	add	r5, r3, r2, lsl #3
   2c764:	mov	r4, #0
   2c768:	ldr	r0, [r6], #4
   2c76c:	bl	51e78 <__aeabi_f2ulz>
   2c770:	strd	r0, [r5], #8
   2c774:	add	r4, r4, #1
   2c778:	ldr	r3, [sp, #204]	; 0xcc
   2c77c:	ldr	sl, [r3]
   2c780:	cmp	sl, r4
   2c784:	bgt	2c768 <GetDataSlab+0xb75c>
   2c788:	ldr	r3, [sp, #192]	; 0xc0
   2c78c:	ldr	r2, [r3]
   2c790:	ldr	r3, [sp, #196]	; 0xc4
   2c794:	ldr	r3, [r3]
   2c798:	sub	r3, r2, r3
   2c79c:	add	fp, fp, r3
   2c7a0:	add	r7, r7, r3, lsl #2
   2c7a4:	ldr	r3, [sp, #208]	; 0xd0
   2c7a8:	cmp	r3, #1
   2c7ac:	ble	2c718 <GetDataSlab+0xb70c>
   2c7b0:	ldr	r3, [sp, #76]	; 0x4c
   2c7b4:	add	r3, r3, #1
   2c7b8:	str	r3, [sp, #76]	; 0x4c
   2c7bc:	ldr	r2, [sp, #204]	; 0xcc
   2c7c0:	ldr	r1, [r2, #4]
   2c7c4:	mov	r0, r3
   2c7c8:	bl	517e8 <__aeabi_idivmod>
   2c7cc:	cmp	r1, #0
   2c7d0:	bne	2c700 <GetDataSlab+0xb6f4>
   2c7d4:	add	r5, sp, #76	; 0x4c
   2c7d8:	ldr	r3, [sp, #204]	; 0xcc
   2c7dc:	add	r3, r3, #4
   2c7e0:	str	r3, [sp, #8]
   2c7e4:	ldr	r3, [sp, #196]	; 0xc4
   2c7e8:	add	r8, r3, #4
   2c7ec:	add	r6, sp, #112	; 0x70
   2c7f0:	ldr	r9, [sp, #28]
   2c7f4:	b	2c6bc <GetDataSlab+0xb6b0>
   2c7f8:	mov	r3, #0
   2c7fc:	b	24fa8 <GetDataSlab+0x3f9c>
   2c800:	ldr	r2, [r9]
   2c804:	cmp	r2, #0
   2c808:	beq	2c820 <GetDataSlab+0xb814>
   2c80c:	ldr	r3, [sp, #16]
   2c810:	ldr	r3, [r3, #-4]
   2c814:	mul	r3, r3, r2
   2c818:	add	r7, r7, r3, lsl #2
   2c81c:	add	fp, fp, r3
   2c820:	add	sl, sl, #1
   2c824:	ldr	r3, [sp, #208]	; 0xd0
   2c828:	cmp	r3, sl
   2c82c:	beq	2c8b8 <GetDataSlab+0xb8ac>
   2c830:	ldr	r3, [r5]
   2c834:	add	r3, r3, #1
   2c838:	str	r3, [r5]
   2c83c:	add	r9, r9, #4
   2c840:	ldr	r2, [sp, #12]
   2c844:	ldr	r1, [r2, #4]!
   2c848:	str	r2, [sp, #12]
   2c84c:	mov	r0, r3
   2c850:	bl	517e8 <__aeabi_idivmod>
   2c854:	cmp	r1, #0
   2c858:	bne	2c8a4 <GetDataSlab+0xb898>
   2c85c:	mov	r3, #0
   2c860:	str	r3, [r5], #4
   2c864:	add	r6, r6, #4
   2c868:	str	r6, [sp, #16]
   2c86c:	ldr	r4, [r6]
   2c870:	mov	r1, r4
   2c874:	mov	r0, fp
   2c878:	bl	517e8 <__aeabi_idivmod>
   2c87c:	subs	r3, r1, #0
   2c880:	beq	2c800 <GetDataSlab+0xb7f4>
   2c884:	ldr	r2, [r6, #-4]
   2c888:	ldr	r1, [r9]
   2c88c:	sub	r3, r4, r3
   2c890:	mla	r3, r1, r2, r3
   2c894:	add	r7, r7, r3, lsl #2
   2c898:	add	fp, fp, r3
   2c89c:	b	2c820 <GetDataSlab+0xb814>
   2c8a0:	mov	sl, #1
   2c8a4:	add	r3, sp, #152	; 0x98
   2c8a8:	add	r3, r3, sl, lsl #2
   2c8ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c8b0:	add	fp, fp, r3
   2c8b4:	add	r7, r7, r3, lsl #2
   2c8b8:	ldr	r3, [sp, #24]
   2c8bc:	ldr	r2, [sp, #8]
   2c8c0:	add	r3, r3, r2
   2c8c4:	str	r3, [sp, #24]
   2c8c8:	ldr	r2, [sp, #20]
   2c8cc:	cmp	r3, r2
   2c8d0:	bge	2c9bc <GetDataSlab+0xb9b0>
   2c8d4:	ldr	r3, [sp, #196]	; 0xc4
   2c8d8:	ldr	r3, [r3]
   2c8dc:	cmp	r3, #0
   2c8e0:	addne	r7, r7, r3, lsl #2
   2c8e4:	addne	fp, fp, r3
   2c8e8:	ldr	r3, [sp, #204]	; 0xcc
   2c8ec:	ldr	r3, [r3]
   2c8f0:	str	r3, [sp, #8]
   2c8f4:	cmp	r3, #0
   2c8f8:	ble	2c93c <GetDataSlab+0xb930>
   2c8fc:	ldr	r3, [sp, #4]
   2c900:	ldr	r2, [sp, #24]
   2c904:	add	r5, r3, r2, lsl #3
   2c908:	mov	r4, #0
   2c90c:	ldr	r0, [r7]
   2c910:	bl	51e78 <__aeabi_f2ulz>
   2c914:	strd	r0, [r5], #8
   2c918:	ldr	r3, [r8]
   2c91c:	add	r7, r7, r3, lsl #2
   2c920:	add	fp, fp, r3
   2c924:	add	r4, r4, #1
   2c928:	ldr	r3, [sp, #204]	; 0xcc
   2c92c:	ldr	r3, [r3]
   2c930:	str	r3, [sp, #8]
   2c934:	cmp	r3, r4
   2c938:	bgt	2c90c <GetDataSlab+0xb900>
   2c93c:	ldr	r3, [r8]
   2c940:	ldr	r2, [sp, #8]
   2c944:	mul	r3, r3, r2
   2c948:	ldr	r2, [sp, #192]	; 0xc0
   2c94c:	ldr	r2, [r2]
   2c950:	sub	r3, r2, r3
   2c954:	ldr	r2, [sp, #196]	; 0xc4
   2c958:	ldr	r2, [r2]
   2c95c:	sub	r3, r3, r2
   2c960:	add	fp, fp, r3
   2c964:	add	r7, r7, r3, lsl #2
   2c968:	ldr	r3, [sp, #208]	; 0xd0
   2c96c:	cmp	r3, #1
   2c970:	ble	2c8b8 <GetDataSlab+0xb8ac>
   2c974:	ldr	r3, [sp, #76]	; 0x4c
   2c978:	add	r3, r3, #1
   2c97c:	str	r3, [sp, #76]	; 0x4c
   2c980:	ldr	r2, [sp, #204]	; 0xcc
   2c984:	ldr	r1, [r2, #4]
   2c988:	mov	r0, r3
   2c98c:	bl	517e8 <__aeabi_idivmod>
   2c990:	cmp	r1, #0
   2c994:	bne	2c8a0 <GetDataSlab+0xb894>
   2c998:	add	r5, sp, #76	; 0x4c
   2c99c:	ldr	r3, [sp, #204]	; 0xcc
   2c9a0:	add	r3, r3, #4
   2c9a4:	str	r3, [sp, #12]
   2c9a8:	ldr	r3, [sp, #196]	; 0xc4
   2c9ac:	add	r9, r3, #4
   2c9b0:	add	r6, sp, #112	; 0x70
   2c9b4:	mov	sl, #1
   2c9b8:	b	2c85c <GetDataSlab+0xb850>
   2c9bc:	mov	r3, #0
   2c9c0:	b	24fa8 <GetDataSlab+0x3f9c>
   2c9c4:	ldr	r3, [r8]
   2c9c8:	str	r3, [sp, #28]
   2c9cc:	sub	r3, r3, #1
   2c9d0:	str	r3, [sp, #32]
   2c9d4:	ldr	r3, [sp, #192]	; 0xc0
   2c9d8:	ldr	r3, [r3]
   2c9dc:	str	r3, [sp, #112]	; 0x70
   2c9e0:	ldr	r3, [sp, #204]	; 0xcc
   2c9e4:	ldr	r3, [r3]
   2c9e8:	str	r3, [sp, #20]
   2c9ec:	ldr	r3, [sp, #208]	; 0xd0
   2c9f0:	cmp	r3, #1
   2c9f4:	ble	2ca28 <GetDataSlab+0xba1c>
   2c9f8:	str	r8, [sp, #16]
   2c9fc:	add	sl, sp, #36	; 0x24
   2ca00:	ldr	lr, [sp, #192]	; 0xc0
   2ca04:	add	r9, sp, #112	; 0x70
   2ca08:	ldr	r3, [sp, #204]	; 0xcc
   2ca0c:	add	r5, r3, #4
   2ca10:	ldr	r3, [sp, #196]	; 0xc4
   2ca14:	add	r4, r3, #4
   2ca18:	str	lr, [sp, #12]
   2ca1c:	mov	r6, #2
   2ca20:	mov	fp, #0
   2ca24:	b	3f6e0 <GetDataSlab+0x1e6d4>
   2ca28:	mov	fp, #0
   2ca2c:	b	3f76c <GetDataSlab+0x1e760>
   2ca30:	ldr	r3, [sp, #20]
   2ca34:	cmp	r3, #0
   2ca38:	ble	3d470 <GetDataSlab+0x1c464>
   2ca3c:	mov	r3, #0
   2ca40:	str	r3, [sp, #16]
   2ca44:	b	2cb18 <GetDataSlab+0xbb0c>
   2ca48:	ldr	r2, [r8]
   2ca4c:	cmp	r2, #0
   2ca50:	beq	2ca68 <GetDataSlab+0xba5c>
   2ca54:	ldr	r3, [sp, #12]
   2ca58:	ldr	r3, [r3, #-4]
   2ca5c:	mul	r3, r3, r2
   2ca60:	add	r5, r5, r3, lsl #2
   2ca64:	add	fp, fp, r3
   2ca68:	add	r9, r9, #1
   2ca6c:	ldr	r3, [sp, #208]	; 0xd0
   2ca70:	cmp	r3, r9
   2ca74:	beq	2cb00 <GetDataSlab+0xbaf4>
   2ca78:	ldr	r3, [r6]
   2ca7c:	add	r3, r3, #1
   2ca80:	str	r3, [r6]
   2ca84:	add	r8, r8, #4
   2ca88:	ldr	r2, [sp, #8]
   2ca8c:	ldr	r1, [r2, #4]!
   2ca90:	str	r2, [sp, #8]
   2ca94:	mov	r0, r3
   2ca98:	bl	517e8 <__aeabi_idivmod>
   2ca9c:	cmp	r1, #0
   2caa0:	bne	2caec <GetDataSlab+0xbae0>
   2caa4:	mov	r3, #0
   2caa8:	str	r3, [r6], #4
   2caac:	add	r7, r7, #4
   2cab0:	str	r7, [sp, #12]
   2cab4:	ldr	r4, [r7]
   2cab8:	mov	r1, r4
   2cabc:	mov	r0, fp
   2cac0:	bl	517e8 <__aeabi_idivmod>
   2cac4:	subs	r3, r1, #0
   2cac8:	beq	2ca48 <GetDataSlab+0xba3c>
   2cacc:	ldr	r2, [r7, #-4]
   2cad0:	ldr	r1, [r8]
   2cad4:	sub	r3, r4, r3
   2cad8:	mla	r3, r1, r2, r3
   2cadc:	add	r5, r5, r3, lsl #2
   2cae0:	add	fp, fp, r3
   2cae4:	b	2ca68 <GetDataSlab+0xba5c>
   2cae8:	ldr	r9, [sp, #28]
   2caec:	add	r3, sp, #152	; 0x98
   2caf0:	add	r3, r3, r9, lsl #2
   2caf4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2caf8:	add	fp, fp, r3
   2cafc:	add	r5, r5, r3, lsl #2
   2cb00:	ldr	r3, [sp, #16]
   2cb04:	add	r3, r3, sl
   2cb08:	str	r3, [sp, #16]
   2cb0c:	ldr	r2, [sp, #20]
   2cb10:	cmp	r3, r2
   2cb14:	bge	2cbe4 <GetDataSlab+0xbbd8>
   2cb18:	ldr	r3, [sp, #196]	; 0xc4
   2cb1c:	ldr	r3, [r3]
   2cb20:	cmp	r3, #0
   2cb24:	addne	r5, r5, r3, lsl #2
   2cb28:	addne	fp, fp, r3
   2cb2c:	ldr	r3, [sp, #204]	; 0xcc
   2cb30:	ldr	sl, [r3]
   2cb34:	cmp	sl, #0
   2cb38:	ble	2cb74 <GetDataSlab+0xbb68>
   2cb3c:	sub	ip, r5, #4
   2cb40:	ldr	r3, [sp, #4]
   2cb44:	ldr	r2, [sp, #16]
   2cb48:	add	r0, r3, r2, lsl #3
   2cb4c:	mov	r1, #0
   2cb50:	ldr	r3, [ip, #4]!
   2cb54:	mov	r2, r3
   2cb58:	asr	r3, r3, #31
   2cb5c:	strd	r2, [r0], #8
   2cb60:	add	r1, r1, #1
   2cb64:	ldr	r3, [sp, #204]	; 0xcc
   2cb68:	ldr	sl, [r3]
   2cb6c:	cmp	sl, r1
   2cb70:	bgt	2cb50 <GetDataSlab+0xbb44>
   2cb74:	ldr	r3, [sp, #192]	; 0xc0
   2cb78:	ldr	r2, [r3]
   2cb7c:	ldr	r3, [sp, #196]	; 0xc4
   2cb80:	ldr	r3, [r3]
   2cb84:	sub	r3, r2, r3
   2cb88:	add	fp, fp, r3
   2cb8c:	add	r5, r5, r3, lsl #2
   2cb90:	ldr	r3, [sp, #208]	; 0xd0
   2cb94:	cmp	r3, #1
   2cb98:	ble	2cb00 <GetDataSlab+0xbaf4>
   2cb9c:	ldr	r3, [sp, #76]	; 0x4c
   2cba0:	add	r3, r3, #1
   2cba4:	str	r3, [sp, #76]	; 0x4c
   2cba8:	ldr	r2, [sp, #204]	; 0xcc
   2cbac:	ldr	r1, [r2, #4]
   2cbb0:	mov	r0, r3
   2cbb4:	bl	517e8 <__aeabi_idivmod>
   2cbb8:	cmp	r1, #0
   2cbbc:	bne	2cae8 <GetDataSlab+0xbadc>
   2cbc0:	add	r6, sp, #76	; 0x4c
   2cbc4:	ldr	r3, [sp, #204]	; 0xcc
   2cbc8:	add	r3, r3, #4
   2cbcc:	str	r3, [sp, #8]
   2cbd0:	ldr	r3, [sp, #196]	; 0xc4
   2cbd4:	add	r8, r3, #4
   2cbd8:	add	r7, sp, #112	; 0x70
   2cbdc:	ldr	r9, [sp, #28]
   2cbe0:	b	2caa4 <GetDataSlab+0xba98>
   2cbe4:	mov	r3, #0
   2cbe8:	b	24fa8 <GetDataSlab+0x3f9c>
   2cbec:	ldr	r2, [r9]
   2cbf0:	cmp	r2, #0
   2cbf4:	beq	2cc0c <GetDataSlab+0xbc00>
   2cbf8:	ldr	r3, [sp, #16]
   2cbfc:	ldr	r3, [r3, #-4]
   2cc00:	mul	r3, r3, r2
   2cc04:	add	r5, r5, r3, lsl #2
   2cc08:	add	fp, fp, r3
   2cc0c:	add	sl, sl, #1
   2cc10:	ldr	r3, [sp, #208]	; 0xd0
   2cc14:	cmp	r3, sl
   2cc18:	beq	2cca4 <GetDataSlab+0xbc98>
   2cc1c:	ldr	r3, [r6]
   2cc20:	add	r3, r3, #1
   2cc24:	str	r3, [r6]
   2cc28:	add	r9, r9, #4
   2cc2c:	ldr	r2, [sp, #12]
   2cc30:	ldr	r1, [r2, #4]!
   2cc34:	str	r2, [sp, #12]
   2cc38:	mov	r0, r3
   2cc3c:	bl	517e8 <__aeabi_idivmod>
   2cc40:	cmp	r1, #0
   2cc44:	bne	2cc90 <GetDataSlab+0xbc84>
   2cc48:	mov	r3, #0
   2cc4c:	str	r3, [r6], #4
   2cc50:	add	r7, r7, #4
   2cc54:	str	r7, [sp, #16]
   2cc58:	ldr	r4, [r7]
   2cc5c:	mov	r1, r4
   2cc60:	mov	r0, fp
   2cc64:	bl	517e8 <__aeabi_idivmod>
   2cc68:	subs	r3, r1, #0
   2cc6c:	beq	2cbec <GetDataSlab+0xbbe0>
   2cc70:	ldr	r2, [r7, #-4]
   2cc74:	ldr	r1, [r9]
   2cc78:	sub	r3, r4, r3
   2cc7c:	mla	r3, r1, r2, r3
   2cc80:	add	r5, r5, r3, lsl #2
   2cc84:	add	fp, fp, r3
   2cc88:	b	2cc0c <GetDataSlab+0xbc00>
   2cc8c:	mov	sl, #1
   2cc90:	add	r3, sp, #152	; 0x98
   2cc94:	add	r3, r3, sl, lsl #2
   2cc98:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cc9c:	add	fp, fp, r3
   2cca0:	add	r5, r5, r3, lsl #2
   2cca4:	ldr	r3, [sp, #24]
   2cca8:	ldr	r2, [sp, #8]
   2ccac:	add	r3, r3, r2
   2ccb0:	str	r3, [sp, #24]
   2ccb4:	ldr	r2, [sp, #20]
   2ccb8:	cmp	r3, r2
   2ccbc:	bge	2cdac <GetDataSlab+0xbda0>
   2ccc0:	ldr	r3, [sp, #196]	; 0xc4
   2ccc4:	ldr	r3, [r3]
   2ccc8:	cmp	r3, #0
   2cccc:	addne	r5, r5, r3, lsl #2
   2ccd0:	addne	fp, fp, r3
   2ccd4:	ldr	r3, [sp, #204]	; 0xcc
   2ccd8:	ldr	r3, [r3]
   2ccdc:	str	r3, [sp, #8]
   2cce0:	cmp	r3, #0
   2cce4:	ble	2cd2c <GetDataSlab+0xbd20>
   2cce8:	ldr	r3, [sp, #4]
   2ccec:	ldr	r2, [sp, #24]
   2ccf0:	add	r2, r3, r2, lsl #3
   2ccf4:	mov	r3, #0
   2ccf8:	ldr	r1, [r5]
   2ccfc:	mov	r0, r1
   2cd00:	asr	r1, r1, #31
   2cd04:	strd	r0, [r2], #8
   2cd08:	ldr	r1, [r8]
   2cd0c:	add	r5, r5, r1, lsl #2
   2cd10:	add	fp, fp, r1
   2cd14:	add	r3, r3, #1
   2cd18:	ldr	r1, [sp, #204]	; 0xcc
   2cd1c:	ldr	r1, [r1]
   2cd20:	str	r1, [sp, #8]
   2cd24:	cmp	r1, r3
   2cd28:	bgt	2ccf8 <GetDataSlab+0xbcec>
   2cd2c:	ldr	r3, [r8]
   2cd30:	ldr	r2, [sp, #8]
   2cd34:	mul	r3, r3, r2
   2cd38:	ldr	r2, [sp, #192]	; 0xc0
   2cd3c:	ldr	r2, [r2]
   2cd40:	sub	r3, r2, r3
   2cd44:	ldr	r2, [sp, #196]	; 0xc4
   2cd48:	ldr	r2, [r2]
   2cd4c:	sub	r3, r3, r2
   2cd50:	add	fp, fp, r3
   2cd54:	add	r5, r5, r3, lsl #2
   2cd58:	ldr	r3, [sp, #208]	; 0xd0
   2cd5c:	cmp	r3, #1
   2cd60:	ble	2cca4 <GetDataSlab+0xbc98>
   2cd64:	ldr	r3, [sp, #76]	; 0x4c
   2cd68:	add	r3, r3, #1
   2cd6c:	str	r3, [sp, #76]	; 0x4c
   2cd70:	ldr	r2, [sp, #204]	; 0xcc
   2cd74:	ldr	r1, [r2, #4]
   2cd78:	mov	r0, r3
   2cd7c:	bl	517e8 <__aeabi_idivmod>
   2cd80:	cmp	r1, #0
   2cd84:	bne	2cc8c <GetDataSlab+0xbc80>
   2cd88:	add	r6, sp, #76	; 0x4c
   2cd8c:	ldr	r3, [sp, #204]	; 0xcc
   2cd90:	add	r3, r3, #4
   2cd94:	str	r3, [sp, #12]
   2cd98:	ldr	r3, [sp, #196]	; 0xc4
   2cd9c:	add	r9, r3, #4
   2cda0:	add	r7, sp, #112	; 0x70
   2cda4:	mov	sl, #1
   2cda8:	b	2cc48 <GetDataSlab+0xbc3c>
   2cdac:	mov	r3, #0
   2cdb0:	b	24fa8 <GetDataSlab+0x3f9c>
   2cdb4:	ldr	r3, [r8]
   2cdb8:	str	r3, [sp, #28]
   2cdbc:	sub	r3, r3, #1
   2cdc0:	str	r3, [sp, #32]
   2cdc4:	ldr	r3, [sp, #192]	; 0xc0
   2cdc8:	ldr	r3, [r3]
   2cdcc:	str	r3, [sp, #112]	; 0x70
   2cdd0:	ldr	r3, [sp, #204]	; 0xcc
   2cdd4:	ldr	r3, [r3]
   2cdd8:	str	r3, [sp, #20]
   2cddc:	ldr	r3, [sp, #208]	; 0xd0
   2cde0:	cmp	r3, #1
   2cde4:	ble	2ce18 <GetDataSlab+0xbe0c>
   2cde8:	str	r8, [sp, #16]
   2cdec:	add	sl, sp, #36	; 0x24
   2cdf0:	ldr	lr, [sp, #192]	; 0xc0
   2cdf4:	add	r9, sp, #112	; 0x70
   2cdf8:	ldr	r3, [sp, #204]	; 0xcc
   2cdfc:	add	r5, r3, #4
   2ce00:	ldr	r3, [sp, #196]	; 0xc4
   2ce04:	add	r4, r3, #4
   2ce08:	str	lr, [sp, #12]
   2ce0c:	mov	r6, #2
   2ce10:	mov	fp, #0
   2ce14:	b	3f7cc <GetDataSlab+0x1e7c0>
   2ce18:	mov	fp, #0
   2ce1c:	b	3f858 <GetDataSlab+0x1e84c>
   2ce20:	ldr	r3, [sp, #20]
   2ce24:	cmp	r3, #0
   2ce28:	ble	3d478 <GetDataSlab+0x1c46c>
   2ce2c:	mov	r3, #0
   2ce30:	str	r3, [sp, #16]
   2ce34:	b	2cf08 <GetDataSlab+0xbefc>
   2ce38:	ldr	r2, [r8]
   2ce3c:	cmp	r2, #0
   2ce40:	beq	2ce58 <GetDataSlab+0xbe4c>
   2ce44:	ldr	r3, [sp, #12]
   2ce48:	ldr	r3, [r3, #-4]
   2ce4c:	mul	r3, r3, r2
   2ce50:	add	r5, r5, r3, lsl #2
   2ce54:	add	fp, fp, r3
   2ce58:	add	r9, r9, #1
   2ce5c:	ldr	r3, [sp, #208]	; 0xd0
   2ce60:	cmp	r3, r9
   2ce64:	beq	2cef0 <GetDataSlab+0xbee4>
   2ce68:	ldr	r3, [r6]
   2ce6c:	add	r3, r3, #1
   2ce70:	str	r3, [r6]
   2ce74:	add	r8, r8, #4
   2ce78:	ldr	r2, [sp, #8]
   2ce7c:	ldr	r1, [r2, #4]!
   2ce80:	str	r2, [sp, #8]
   2ce84:	mov	r0, r3
   2ce88:	bl	517e8 <__aeabi_idivmod>
   2ce8c:	cmp	r1, #0
   2ce90:	bne	2cedc <GetDataSlab+0xbed0>
   2ce94:	mov	r3, #0
   2ce98:	str	r3, [r6], #4
   2ce9c:	add	r7, r7, #4
   2cea0:	str	r7, [sp, #12]
   2cea4:	ldr	r4, [r7]
   2cea8:	mov	r1, r4
   2ceac:	mov	r0, fp
   2ceb0:	bl	517e8 <__aeabi_idivmod>
   2ceb4:	subs	r3, r1, #0
   2ceb8:	beq	2ce38 <GetDataSlab+0xbe2c>
   2cebc:	ldr	r2, [r7, #-4]
   2cec0:	ldr	r1, [r8]
   2cec4:	sub	r3, r4, r3
   2cec8:	mla	r3, r1, r2, r3
   2cecc:	add	r5, r5, r3, lsl #2
   2ced0:	add	fp, fp, r3
   2ced4:	b	2ce58 <GetDataSlab+0xbe4c>
   2ced8:	ldr	r9, [sp, #28]
   2cedc:	add	r3, sp, #152	; 0x98
   2cee0:	add	r3, r3, r9, lsl #2
   2cee4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cee8:	add	fp, fp, r3
   2ceec:	add	r5, r5, r3, lsl #2
   2cef0:	ldr	r3, [sp, #16]
   2cef4:	add	r3, r3, sl
   2cef8:	str	r3, [sp, #16]
   2cefc:	ldr	r2, [sp, #20]
   2cf00:	cmp	r3, r2
   2cf04:	bge	2cfd8 <GetDataSlab+0xbfcc>
   2cf08:	ldr	r3, [sp, #196]	; 0xc4
   2cf0c:	ldr	r3, [r3]
   2cf10:	cmp	r3, #0
   2cf14:	addne	r5, r5, r3, lsl #2
   2cf18:	addne	fp, fp, r3
   2cf1c:	ldr	r3, [sp, #204]	; 0xcc
   2cf20:	ldr	sl, [r3]
   2cf24:	cmp	sl, #0
   2cf28:	ble	2cf68 <GetDataSlab+0xbf5c>
   2cf2c:	sub	r0, r5, #4
   2cf30:	ldr	r3, [sp, #4]
   2cf34:	ldr	r2, [sp, #16]
   2cf38:	add	r2, r3, r2, lsl #3
   2cf3c:	mov	r1, #0
   2cf40:	ldr	r3, [r0, #4]!
   2cf44:	str	r3, [r2]
   2cf48:	mov	r3, #0
   2cf4c:	str	r3, [r2, #4]
   2cf50:	add	r2, r2, #8
   2cf54:	add	r1, r1, #1
   2cf58:	ldr	r3, [sp, #204]	; 0xcc
   2cf5c:	ldr	sl, [r3]
   2cf60:	cmp	sl, r1
   2cf64:	bgt	2cf40 <GetDataSlab+0xbf34>
   2cf68:	ldr	r3, [sp, #192]	; 0xc0
   2cf6c:	ldr	r2, [r3]
   2cf70:	ldr	r3, [sp, #196]	; 0xc4
   2cf74:	ldr	r3, [r3]
   2cf78:	sub	r3, r2, r3
   2cf7c:	add	fp, fp, r3
   2cf80:	add	r5, r5, r3, lsl #2
   2cf84:	ldr	r3, [sp, #208]	; 0xd0
   2cf88:	cmp	r3, #1
   2cf8c:	ble	2cef0 <GetDataSlab+0xbee4>
   2cf90:	ldr	r3, [sp, #76]	; 0x4c
   2cf94:	add	r3, r3, #1
   2cf98:	str	r3, [sp, #76]	; 0x4c
   2cf9c:	ldr	r2, [sp, #204]	; 0xcc
   2cfa0:	ldr	r1, [r2, #4]
   2cfa4:	mov	r0, r3
   2cfa8:	bl	517e8 <__aeabi_idivmod>
   2cfac:	cmp	r1, #0
   2cfb0:	bne	2ced8 <GetDataSlab+0xbecc>
   2cfb4:	add	r6, sp, #76	; 0x4c
   2cfb8:	ldr	r3, [sp, #204]	; 0xcc
   2cfbc:	add	r3, r3, #4
   2cfc0:	str	r3, [sp, #8]
   2cfc4:	ldr	r3, [sp, #196]	; 0xc4
   2cfc8:	add	r8, r3, #4
   2cfcc:	add	r7, sp, #112	; 0x70
   2cfd0:	ldr	r9, [sp, #28]
   2cfd4:	b	2ce94 <GetDataSlab+0xbe88>
   2cfd8:	mov	r3, #0
   2cfdc:	b	24fa8 <GetDataSlab+0x3f9c>
   2cfe0:	ldr	r2, [r9]
   2cfe4:	cmp	r2, #0
   2cfe8:	beq	2d000 <GetDataSlab+0xbff4>
   2cfec:	ldr	r3, [sp, #16]
   2cff0:	ldr	r3, [r3, #-4]
   2cff4:	mul	r3, r3, r2
   2cff8:	add	r5, r5, r3, lsl #2
   2cffc:	add	fp, fp, r3
   2d000:	add	sl, sl, #1
   2d004:	ldr	r3, [sp, #208]	; 0xd0
   2d008:	cmp	r3, sl
   2d00c:	beq	2d098 <GetDataSlab+0xc08c>
   2d010:	ldr	r3, [r6]
   2d014:	add	r3, r3, #1
   2d018:	str	r3, [r6]
   2d01c:	add	r9, r9, #4
   2d020:	ldr	r2, [sp, #12]
   2d024:	ldr	r1, [r2, #4]!
   2d028:	str	r2, [sp, #12]
   2d02c:	mov	r0, r3
   2d030:	bl	517e8 <__aeabi_idivmod>
   2d034:	cmp	r1, #0
   2d038:	bne	2d084 <GetDataSlab+0xc078>
   2d03c:	mov	r3, #0
   2d040:	str	r3, [r6], #4
   2d044:	add	r7, r7, #4
   2d048:	str	r7, [sp, #16]
   2d04c:	ldr	r4, [r7]
   2d050:	mov	r1, r4
   2d054:	mov	r0, fp
   2d058:	bl	517e8 <__aeabi_idivmod>
   2d05c:	subs	r3, r1, #0
   2d060:	beq	2cfe0 <GetDataSlab+0xbfd4>
   2d064:	ldr	r2, [r7, #-4]
   2d068:	ldr	r1, [r9]
   2d06c:	sub	r3, r4, r3
   2d070:	mla	r3, r1, r2, r3
   2d074:	add	r5, r5, r3, lsl #2
   2d078:	add	fp, fp, r3
   2d07c:	b	2d000 <GetDataSlab+0xbff4>
   2d080:	mov	sl, #1
   2d084:	add	r3, sp, #152	; 0x98
   2d088:	add	r3, r3, sl, lsl #2
   2d08c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d090:	add	fp, fp, r3
   2d094:	add	r5, r5, r3, lsl #2
   2d098:	ldr	r3, [sp, #24]
   2d09c:	ldr	r2, [sp, #8]
   2d0a0:	add	r3, r3, r2
   2d0a4:	str	r3, [sp, #24]
   2d0a8:	ldr	r2, [sp, #20]
   2d0ac:	cmp	r3, r2
   2d0b0:	bge	2d1a4 <GetDataSlab+0xc198>
   2d0b4:	ldr	r3, [sp, #196]	; 0xc4
   2d0b8:	ldr	r3, [r3]
   2d0bc:	cmp	r3, #0
   2d0c0:	addne	r5, r5, r3, lsl #2
   2d0c4:	addne	fp, fp, r3
   2d0c8:	ldr	r3, [sp, #204]	; 0xcc
   2d0cc:	ldr	r3, [r3]
   2d0d0:	str	r3, [sp, #8]
   2d0d4:	cmp	r3, #0
   2d0d8:	ble	2d124 <GetDataSlab+0xc118>
   2d0dc:	ldr	r3, [sp, #4]
   2d0e0:	ldr	r2, [sp, #24]
   2d0e4:	add	r3, r3, r2, lsl #3
   2d0e8:	mov	r2, #0
   2d0ec:	ldr	r1, [r5]
   2d0f0:	str	r1, [r3]
   2d0f4:	mov	r1, #0
   2d0f8:	str	r1, [r3, #4]
   2d0fc:	add	r3, r3, #8
   2d100:	ldr	r1, [r8]
   2d104:	add	r5, r5, r1, lsl #2
   2d108:	add	fp, fp, r1
   2d10c:	add	r2, r2, #1
   2d110:	ldr	r1, [sp, #204]	; 0xcc
   2d114:	ldr	r1, [r1]
   2d118:	str	r1, [sp, #8]
   2d11c:	cmp	r1, r2
   2d120:	bgt	2d0ec <GetDataSlab+0xc0e0>
   2d124:	ldr	r3, [r8]
   2d128:	ldr	r2, [sp, #8]
   2d12c:	mul	r3, r3, r2
   2d130:	ldr	r2, [sp, #192]	; 0xc0
   2d134:	ldr	r2, [r2]
   2d138:	sub	r3, r2, r3
   2d13c:	ldr	r2, [sp, #196]	; 0xc4
   2d140:	ldr	r2, [r2]
   2d144:	sub	r3, r3, r2
   2d148:	add	fp, fp, r3
   2d14c:	add	r5, r5, r3, lsl #2
   2d150:	ldr	r3, [sp, #208]	; 0xd0
   2d154:	cmp	r3, #1
   2d158:	ble	2d098 <GetDataSlab+0xc08c>
   2d15c:	ldr	r3, [sp, #76]	; 0x4c
   2d160:	add	r3, r3, #1
   2d164:	str	r3, [sp, #76]	; 0x4c
   2d168:	ldr	r2, [sp, #204]	; 0xcc
   2d16c:	ldr	r1, [r2, #4]
   2d170:	mov	r0, r3
   2d174:	bl	517e8 <__aeabi_idivmod>
   2d178:	cmp	r1, #0
   2d17c:	bne	2d080 <GetDataSlab+0xc074>
   2d180:	add	r6, sp, #76	; 0x4c
   2d184:	ldr	r3, [sp, #204]	; 0xcc
   2d188:	add	r3, r3, #4
   2d18c:	str	r3, [sp, #12]
   2d190:	ldr	r3, [sp, #196]	; 0xc4
   2d194:	add	r9, r3, #4
   2d198:	add	r7, sp, #112	; 0x70
   2d19c:	mov	sl, #1
   2d1a0:	b	2d03c <GetDataSlab+0xc030>
   2d1a4:	mov	r3, #0
   2d1a8:	b	24fa8 <GetDataSlab+0x3f9c>
   2d1ac:	ldr	r3, [r8]
   2d1b0:	str	r3, [sp, #28]
   2d1b4:	sub	r3, r3, #1
   2d1b8:	str	r3, [sp, #32]
   2d1bc:	ldr	r3, [sp, #192]	; 0xc0
   2d1c0:	ldr	r3, [r3]
   2d1c4:	str	r3, [sp, #112]	; 0x70
   2d1c8:	ldr	r3, [sp, #204]	; 0xcc
   2d1cc:	ldr	r3, [r3]
   2d1d0:	str	r3, [sp, #20]
   2d1d4:	ldr	r3, [sp, #208]	; 0xd0
   2d1d8:	cmp	r3, #1
   2d1dc:	ble	2d210 <GetDataSlab+0xc204>
   2d1e0:	str	r8, [sp, #16]
   2d1e4:	add	sl, sp, #36	; 0x24
   2d1e8:	ldr	lr, [sp, #192]	; 0xc0
   2d1ec:	add	r9, sp, #112	; 0x70
   2d1f0:	ldr	r3, [sp, #204]	; 0xcc
   2d1f4:	add	r5, r3, #4
   2d1f8:	ldr	r3, [sp, #196]	; 0xc4
   2d1fc:	add	r4, r3, #4
   2d200:	str	lr, [sp, #12]
   2d204:	mov	r6, #2
   2d208:	mov	fp, #0
   2d20c:	b	3f8b8 <GetDataSlab+0x1e8ac>
   2d210:	mov	fp, #0
   2d214:	b	3f944 <GetDataSlab+0x1e938>
   2d218:	ldr	r3, [sp, #20]
   2d21c:	cmp	r3, #0
   2d220:	ble	3d480 <GetDataSlab+0x1c474>
   2d224:	mov	r3, #0
   2d228:	str	r3, [sp, #16]
   2d22c:	b	2d300 <GetDataSlab+0xc2f4>
   2d230:	ldr	r2, [r8]
   2d234:	cmp	r2, #0
   2d238:	beq	2d250 <GetDataSlab+0xc244>
   2d23c:	ldr	r3, [sp, #12]
   2d240:	ldr	r3, [r3, #-4]
   2d244:	mul	r3, r3, r2
   2d248:	add	r6, r6, r3, lsl #1
   2d24c:	add	fp, fp, r3
   2d250:	add	r9, r9, #1
   2d254:	ldr	r3, [sp, #208]	; 0xd0
   2d258:	cmp	r3, r9
   2d25c:	beq	2d2e8 <GetDataSlab+0xc2dc>
   2d260:	ldr	r3, [r5]
   2d264:	add	r3, r3, #1
   2d268:	str	r3, [r5]
   2d26c:	add	r8, r8, #4
   2d270:	ldr	r2, [sp, #8]
   2d274:	ldr	r1, [r2, #4]!
   2d278:	str	r2, [sp, #8]
   2d27c:	mov	r0, r3
   2d280:	bl	517e8 <__aeabi_idivmod>
   2d284:	cmp	r1, #0
   2d288:	bne	2d2d4 <GetDataSlab+0xc2c8>
   2d28c:	mov	r3, #0
   2d290:	str	r3, [r5], #4
   2d294:	add	r7, r7, #4
   2d298:	str	r7, [sp, #12]
   2d29c:	ldr	r4, [r7]
   2d2a0:	mov	r1, r4
   2d2a4:	mov	r0, fp
   2d2a8:	bl	517e8 <__aeabi_idivmod>
   2d2ac:	subs	r3, r1, #0
   2d2b0:	beq	2d230 <GetDataSlab+0xc224>
   2d2b4:	ldr	r2, [r7, #-4]
   2d2b8:	ldr	r1, [r8]
   2d2bc:	sub	r3, r4, r3
   2d2c0:	mla	r3, r1, r2, r3
   2d2c4:	add	r6, r6, r3, lsl #1
   2d2c8:	add	fp, fp, r3
   2d2cc:	b	2d250 <GetDataSlab+0xc244>
   2d2d0:	ldr	r9, [sp, #28]
   2d2d4:	add	r3, sp, #152	; 0x98
   2d2d8:	add	r3, r3, r9, lsl #2
   2d2dc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d2e0:	add	fp, fp, r3
   2d2e4:	add	r6, r6, r3, lsl #1
   2d2e8:	ldr	r3, [sp, #16]
   2d2ec:	add	r3, r3, sl
   2d2f0:	str	r3, [sp, #16]
   2d2f4:	ldr	r2, [sp, #20]
   2d2f8:	cmp	r3, r2
   2d2fc:	bge	2d3c8 <GetDataSlab+0xc3bc>
   2d300:	ldr	r3, [sp, #196]	; 0xc4
   2d304:	ldr	r3, [r3]
   2d308:	cmp	r3, #0
   2d30c:	addne	r6, r6, r3, lsl #1
   2d310:	addne	fp, fp, r3
   2d314:	ldr	r3, [sp, #204]	; 0xcc
   2d318:	ldr	sl, [r3]
   2d31c:	cmp	sl, #0
   2d320:	ble	2d358 <GetDataSlab+0xc34c>
   2d324:	sub	ip, r6, #2
   2d328:	ldr	r3, [sp, #4]
   2d32c:	ldr	r2, [sp, #16]
   2d330:	add	r0, r3, r2, lsl #3
   2d334:	mov	r1, #0
   2d338:	ldrsh	r2, [ip, #2]!
   2d33c:	asr	r3, r2, #31
   2d340:	strd	r2, [r0], #8
   2d344:	add	r1, r1, #1
   2d348:	ldr	r3, [sp, #204]	; 0xcc
   2d34c:	ldr	sl, [r3]
   2d350:	cmp	sl, r1
   2d354:	bgt	2d338 <GetDataSlab+0xc32c>
   2d358:	ldr	r3, [sp, #192]	; 0xc0
   2d35c:	ldr	r2, [r3]
   2d360:	ldr	r3, [sp, #196]	; 0xc4
   2d364:	ldr	r3, [r3]
   2d368:	sub	r3, r2, r3
   2d36c:	add	fp, fp, r3
   2d370:	add	r6, r6, r3, lsl #1
   2d374:	ldr	r3, [sp, #208]	; 0xd0
   2d378:	cmp	r3, #1
   2d37c:	ble	2d2e8 <GetDataSlab+0xc2dc>
   2d380:	ldr	r3, [sp, #76]	; 0x4c
   2d384:	add	r3, r3, #1
   2d388:	str	r3, [sp, #76]	; 0x4c
   2d38c:	ldr	r2, [sp, #204]	; 0xcc
   2d390:	ldr	r1, [r2, #4]
   2d394:	mov	r0, r3
   2d398:	bl	517e8 <__aeabi_idivmod>
   2d39c:	cmp	r1, #0
   2d3a0:	bne	2d2d0 <GetDataSlab+0xc2c4>
   2d3a4:	add	r5, sp, #76	; 0x4c
   2d3a8:	ldr	r3, [sp, #204]	; 0xcc
   2d3ac:	add	r3, r3, #4
   2d3b0:	str	r3, [sp, #8]
   2d3b4:	ldr	r3, [sp, #196]	; 0xc4
   2d3b8:	add	r8, r3, #4
   2d3bc:	add	r7, sp, #112	; 0x70
   2d3c0:	ldr	r9, [sp, #28]
   2d3c4:	b	2d28c <GetDataSlab+0xc280>
   2d3c8:	mov	r3, #0
   2d3cc:	b	24fa8 <GetDataSlab+0x3f9c>
   2d3d0:	ldr	r2, [r9]
   2d3d4:	cmp	r2, #0
   2d3d8:	beq	2d3f0 <GetDataSlab+0xc3e4>
   2d3dc:	ldr	r3, [sp, #16]
   2d3e0:	ldr	r3, [r3, #-4]
   2d3e4:	mul	r3, r3, r2
   2d3e8:	add	r6, r6, r3, lsl #1
   2d3ec:	add	fp, fp, r3
   2d3f0:	add	sl, sl, #1
   2d3f4:	ldr	r3, [sp, #208]	; 0xd0
   2d3f8:	cmp	r3, sl
   2d3fc:	beq	2d488 <GetDataSlab+0xc47c>
   2d400:	ldr	r3, [r5]
   2d404:	add	r3, r3, #1
   2d408:	str	r3, [r5]
   2d40c:	add	r9, r9, #4
   2d410:	ldr	r2, [sp, #12]
   2d414:	ldr	r1, [r2, #4]!
   2d418:	str	r2, [sp, #12]
   2d41c:	mov	r0, r3
   2d420:	bl	517e8 <__aeabi_idivmod>
   2d424:	cmp	r1, #0
   2d428:	bne	2d474 <GetDataSlab+0xc468>
   2d42c:	mov	r3, #0
   2d430:	str	r3, [r5], #4
   2d434:	add	r7, r7, #4
   2d438:	str	r7, [sp, #16]
   2d43c:	ldr	r4, [r7]
   2d440:	mov	r1, r4
   2d444:	mov	r0, fp
   2d448:	bl	517e8 <__aeabi_idivmod>
   2d44c:	subs	r3, r1, #0
   2d450:	beq	2d3d0 <GetDataSlab+0xc3c4>
   2d454:	ldr	r2, [r7, #-4]
   2d458:	ldr	r1, [r9]
   2d45c:	sub	r3, r4, r3
   2d460:	mla	r3, r1, r2, r3
   2d464:	add	r6, r6, r3, lsl #1
   2d468:	add	fp, fp, r3
   2d46c:	b	2d3f0 <GetDataSlab+0xc3e4>
   2d470:	mov	sl, #1
   2d474:	add	r3, sp, #152	; 0x98
   2d478:	add	r3, r3, sl, lsl #2
   2d47c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d480:	add	fp, fp, r3
   2d484:	add	r6, r6, r3, lsl #1
   2d488:	ldr	r3, [sp, #24]
   2d48c:	ldr	r2, [sp, #8]
   2d490:	add	r3, r3, r2
   2d494:	str	r3, [sp, #24]
   2d498:	ldr	r2, [sp, #20]
   2d49c:	cmp	r3, r2
   2d4a0:	bge	2d58c <GetDataSlab+0xc580>
   2d4a4:	ldr	r3, [sp, #196]	; 0xc4
   2d4a8:	ldr	r3, [r3]
   2d4ac:	cmp	r3, #0
   2d4b0:	addne	r6, r6, r3, lsl #1
   2d4b4:	addne	fp, fp, r3
   2d4b8:	ldr	r3, [sp, #204]	; 0xcc
   2d4bc:	ldr	r3, [r3]
   2d4c0:	str	r3, [sp, #8]
   2d4c4:	cmp	r3, #0
   2d4c8:	ble	2d50c <GetDataSlab+0xc500>
   2d4cc:	ldr	r3, [sp, #4]
   2d4d0:	ldr	r2, [sp, #24]
   2d4d4:	add	r2, r3, r2, lsl #3
   2d4d8:	mov	r3, #0
   2d4dc:	ldrsh	r0, [r6]
   2d4e0:	asr	r1, r0, #31
   2d4e4:	strd	r0, [r2], #8
   2d4e8:	ldr	r1, [r8]
   2d4ec:	add	r6, r6, r1, lsl #1
   2d4f0:	add	fp, fp, r1
   2d4f4:	add	r3, r3, #1
   2d4f8:	ldr	r1, [sp, #204]	; 0xcc
   2d4fc:	ldr	r1, [r1]
   2d500:	str	r1, [sp, #8]
   2d504:	cmp	r1, r3
   2d508:	bgt	2d4dc <GetDataSlab+0xc4d0>
   2d50c:	ldr	r3, [r8]
   2d510:	ldr	r2, [sp, #8]
   2d514:	mul	r3, r3, r2
   2d518:	ldr	r2, [sp, #192]	; 0xc0
   2d51c:	ldr	r2, [r2]
   2d520:	sub	r3, r2, r3
   2d524:	ldr	r2, [sp, #196]	; 0xc4
   2d528:	ldr	r2, [r2]
   2d52c:	sub	r3, r3, r2
   2d530:	add	fp, fp, r3
   2d534:	add	r6, r6, r3, lsl #1
   2d538:	ldr	r3, [sp, #208]	; 0xd0
   2d53c:	cmp	r3, #1
   2d540:	ble	2d488 <GetDataSlab+0xc47c>
   2d544:	ldr	r3, [sp, #76]	; 0x4c
   2d548:	add	r3, r3, #1
   2d54c:	str	r3, [sp, #76]	; 0x4c
   2d550:	ldr	r2, [sp, #204]	; 0xcc
   2d554:	ldr	r1, [r2, #4]
   2d558:	mov	r0, r3
   2d55c:	bl	517e8 <__aeabi_idivmod>
   2d560:	cmp	r1, #0
   2d564:	bne	2d470 <GetDataSlab+0xc464>
   2d568:	add	r5, sp, #76	; 0x4c
   2d56c:	ldr	r3, [sp, #204]	; 0xcc
   2d570:	add	r3, r3, #4
   2d574:	str	r3, [sp, #12]
   2d578:	ldr	r3, [sp, #196]	; 0xc4
   2d57c:	add	r9, r3, #4
   2d580:	add	r7, sp, #112	; 0x70
   2d584:	mov	sl, #1
   2d588:	b	2d42c <GetDataSlab+0xc420>
   2d58c:	mov	r3, #0
   2d590:	b	24fa8 <GetDataSlab+0x3f9c>
   2d594:	ldr	r3, [r8]
   2d598:	str	r3, [sp, #28]
   2d59c:	sub	r3, r3, #1
   2d5a0:	str	r3, [sp, #32]
   2d5a4:	ldr	r3, [sp, #192]	; 0xc0
   2d5a8:	ldr	r3, [r3]
   2d5ac:	str	r3, [sp, #112]	; 0x70
   2d5b0:	ldr	r3, [sp, #204]	; 0xcc
   2d5b4:	ldr	r3, [r3]
   2d5b8:	str	r3, [sp, #20]
   2d5bc:	ldr	r3, [sp, #208]	; 0xd0
   2d5c0:	cmp	r3, #1
   2d5c4:	ble	2d5f8 <GetDataSlab+0xc5ec>
   2d5c8:	str	r8, [sp, #16]
   2d5cc:	add	sl, sp, #36	; 0x24
   2d5d0:	ldr	lr, [sp, #192]	; 0xc0
   2d5d4:	add	r9, sp, #112	; 0x70
   2d5d8:	ldr	r3, [sp, #204]	; 0xcc
   2d5dc:	add	r5, r3, #4
   2d5e0:	ldr	r3, [sp, #196]	; 0xc4
   2d5e4:	add	r4, r3, #4
   2d5e8:	str	lr, [sp, #12]
   2d5ec:	mov	r6, #2
   2d5f0:	mov	fp, #0
   2d5f4:	b	3f9a4 <GetDataSlab+0x1e998>
   2d5f8:	mov	fp, #0
   2d5fc:	b	3fa30 <GetDataSlab+0x1ea24>
   2d600:	ldr	r3, [sp, #20]
   2d604:	cmp	r3, #0
   2d608:	ble	3d488 <GetDataSlab+0x1c47c>
   2d60c:	mov	r3, #0
   2d610:	str	r3, [sp, #16]
   2d614:	b	2d6e8 <GetDataSlab+0xc6dc>
   2d618:	ldr	r2, [r8]
   2d61c:	cmp	r2, #0
   2d620:	beq	2d638 <GetDataSlab+0xc62c>
   2d624:	ldr	r3, [sp, #12]
   2d628:	ldr	r3, [r3, #-4]
   2d62c:	mul	r3, r3, r2
   2d630:	add	r6, r6, r3, lsl #1
   2d634:	add	fp, fp, r3
   2d638:	add	r9, r9, #1
   2d63c:	ldr	r3, [sp, #208]	; 0xd0
   2d640:	cmp	r3, r9
   2d644:	beq	2d6d0 <GetDataSlab+0xc6c4>
   2d648:	ldr	r3, [r5]
   2d64c:	add	r3, r3, #1
   2d650:	str	r3, [r5]
   2d654:	add	r8, r8, #4
   2d658:	ldr	r2, [sp, #8]
   2d65c:	ldr	r1, [r2, #4]!
   2d660:	str	r2, [sp, #8]
   2d664:	mov	r0, r3
   2d668:	bl	517e8 <__aeabi_idivmod>
   2d66c:	cmp	r1, #0
   2d670:	bne	2d6bc <GetDataSlab+0xc6b0>
   2d674:	mov	r3, #0
   2d678:	str	r3, [r5], #4
   2d67c:	add	r7, r7, #4
   2d680:	str	r7, [sp, #12]
   2d684:	ldr	r4, [r7]
   2d688:	mov	r1, r4
   2d68c:	mov	r0, fp
   2d690:	bl	517e8 <__aeabi_idivmod>
   2d694:	subs	r3, r1, #0
   2d698:	beq	2d618 <GetDataSlab+0xc60c>
   2d69c:	ldr	r2, [r7, #-4]
   2d6a0:	ldr	r1, [r8]
   2d6a4:	sub	r3, r4, r3
   2d6a8:	mla	r3, r1, r2, r3
   2d6ac:	add	r6, r6, r3, lsl #1
   2d6b0:	add	fp, fp, r3
   2d6b4:	b	2d638 <GetDataSlab+0xc62c>
   2d6b8:	ldr	r9, [sp, #28]
   2d6bc:	add	r3, sp, #152	; 0x98
   2d6c0:	add	r3, r3, r9, lsl #2
   2d6c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d6c8:	add	fp, fp, r3
   2d6cc:	add	r6, r6, r3, lsl #1
   2d6d0:	ldr	r3, [sp, #16]
   2d6d4:	add	r3, r3, sl
   2d6d8:	str	r3, [sp, #16]
   2d6dc:	ldr	r2, [sp, #20]
   2d6e0:	cmp	r3, r2
   2d6e4:	bge	2d7b0 <GetDataSlab+0xc7a4>
   2d6e8:	ldr	r3, [sp, #196]	; 0xc4
   2d6ec:	ldr	r3, [r3]
   2d6f0:	cmp	r3, #0
   2d6f4:	addne	r6, r6, r3, lsl #1
   2d6f8:	addne	fp, fp, r3
   2d6fc:	ldr	r3, [sp, #204]	; 0xcc
   2d700:	ldr	sl, [r3]
   2d704:	cmp	sl, #0
   2d708:	ble	2d740 <GetDataSlab+0xc734>
   2d70c:	sub	ip, r6, #2
   2d710:	ldr	r3, [sp, #4]
   2d714:	ldr	r2, [sp, #16]
   2d718:	add	r0, r3, r2, lsl #3
   2d71c:	mov	r1, #0
   2d720:	ldrh	r2, [ip, #2]!
   2d724:	mov	r3, #0
   2d728:	strd	r2, [r0], #8
   2d72c:	add	r1, r1, #1
   2d730:	ldr	r3, [sp, #204]	; 0xcc
   2d734:	ldr	sl, [r3]
   2d738:	cmp	sl, r1
   2d73c:	bgt	2d720 <GetDataSlab+0xc714>
   2d740:	ldr	r3, [sp, #192]	; 0xc0
   2d744:	ldr	r2, [r3]
   2d748:	ldr	r3, [sp, #196]	; 0xc4
   2d74c:	ldr	r3, [r3]
   2d750:	sub	r3, r2, r3
   2d754:	add	fp, fp, r3
   2d758:	add	r6, r6, r3, lsl #1
   2d75c:	ldr	r3, [sp, #208]	; 0xd0
   2d760:	cmp	r3, #1
   2d764:	ble	2d6d0 <GetDataSlab+0xc6c4>
   2d768:	ldr	r3, [sp, #76]	; 0x4c
   2d76c:	add	r3, r3, #1
   2d770:	str	r3, [sp, #76]	; 0x4c
   2d774:	ldr	r2, [sp, #204]	; 0xcc
   2d778:	ldr	r1, [r2, #4]
   2d77c:	mov	r0, r3
   2d780:	bl	517e8 <__aeabi_idivmod>
   2d784:	cmp	r1, #0
   2d788:	bne	2d6b8 <GetDataSlab+0xc6ac>
   2d78c:	add	r5, sp, #76	; 0x4c
   2d790:	ldr	r3, [sp, #204]	; 0xcc
   2d794:	add	r3, r3, #4
   2d798:	str	r3, [sp, #8]
   2d79c:	ldr	r3, [sp, #196]	; 0xc4
   2d7a0:	add	r8, r3, #4
   2d7a4:	add	r7, sp, #112	; 0x70
   2d7a8:	ldr	r9, [sp, #28]
   2d7ac:	b	2d674 <GetDataSlab+0xc668>
   2d7b0:	mov	r3, #0
   2d7b4:	b	24fa8 <GetDataSlab+0x3f9c>
   2d7b8:	ldr	r2, [r9]
   2d7bc:	cmp	r2, #0
   2d7c0:	beq	2d7d8 <GetDataSlab+0xc7cc>
   2d7c4:	ldr	r3, [sp, #16]
   2d7c8:	ldr	r3, [r3, #-4]
   2d7cc:	mul	r3, r3, r2
   2d7d0:	add	r6, r6, r3, lsl #1
   2d7d4:	add	fp, fp, r3
   2d7d8:	add	sl, sl, #1
   2d7dc:	ldr	r3, [sp, #208]	; 0xd0
   2d7e0:	cmp	r3, sl
   2d7e4:	beq	2d870 <GetDataSlab+0xc864>
   2d7e8:	ldr	r3, [r5]
   2d7ec:	add	r3, r3, #1
   2d7f0:	str	r3, [r5]
   2d7f4:	add	r9, r9, #4
   2d7f8:	ldr	r2, [sp, #12]
   2d7fc:	ldr	r1, [r2, #4]!
   2d800:	str	r2, [sp, #12]
   2d804:	mov	r0, r3
   2d808:	bl	517e8 <__aeabi_idivmod>
   2d80c:	cmp	r1, #0
   2d810:	bne	2d85c <GetDataSlab+0xc850>
   2d814:	mov	r3, #0
   2d818:	str	r3, [r5], #4
   2d81c:	add	r7, r7, #4
   2d820:	str	r7, [sp, #16]
   2d824:	ldr	r4, [r7]
   2d828:	mov	r1, r4
   2d82c:	mov	r0, fp
   2d830:	bl	517e8 <__aeabi_idivmod>
   2d834:	subs	r3, r1, #0
   2d838:	beq	2d7b8 <GetDataSlab+0xc7ac>
   2d83c:	ldr	r2, [r7, #-4]
   2d840:	ldr	r1, [r9]
   2d844:	sub	r3, r4, r3
   2d848:	mla	r3, r1, r2, r3
   2d84c:	add	r6, r6, r3, lsl #1
   2d850:	add	fp, fp, r3
   2d854:	b	2d7d8 <GetDataSlab+0xc7cc>
   2d858:	mov	sl, #1
   2d85c:	add	r3, sp, #152	; 0x98
   2d860:	add	r3, r3, sl, lsl #2
   2d864:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d868:	add	fp, fp, r3
   2d86c:	add	r6, r6, r3, lsl #1
   2d870:	ldr	r3, [sp, #24]
   2d874:	ldr	r2, [sp, #8]
   2d878:	add	r3, r3, r2
   2d87c:	str	r3, [sp, #24]
   2d880:	ldr	r2, [sp, #20]
   2d884:	cmp	r3, r2
   2d888:	bge	2d974 <GetDataSlab+0xc968>
   2d88c:	ldr	r3, [sp, #196]	; 0xc4
   2d890:	ldr	r3, [r3]
   2d894:	cmp	r3, #0
   2d898:	addne	r6, r6, r3, lsl #1
   2d89c:	addne	fp, fp, r3
   2d8a0:	ldr	r3, [sp, #204]	; 0xcc
   2d8a4:	ldr	r3, [r3]
   2d8a8:	str	r3, [sp, #8]
   2d8ac:	cmp	r3, #0
   2d8b0:	ble	2d8f4 <GetDataSlab+0xc8e8>
   2d8b4:	ldr	r3, [sp, #4]
   2d8b8:	ldr	r2, [sp, #24]
   2d8bc:	add	r2, r3, r2, lsl #3
   2d8c0:	mov	r3, #0
   2d8c4:	ldrh	r0, [r6]
   2d8c8:	mov	r1, #0
   2d8cc:	strd	r0, [r2], #8
   2d8d0:	ldr	r1, [r8]
   2d8d4:	add	r6, r6, r1, lsl #1
   2d8d8:	add	fp, fp, r1
   2d8dc:	add	r3, r3, #1
   2d8e0:	ldr	r1, [sp, #204]	; 0xcc
   2d8e4:	ldr	r1, [r1]
   2d8e8:	str	r1, [sp, #8]
   2d8ec:	cmp	r1, r3
   2d8f0:	bgt	2d8c4 <GetDataSlab+0xc8b8>
   2d8f4:	ldr	r3, [r8]
   2d8f8:	ldr	r2, [sp, #8]
   2d8fc:	mul	r3, r3, r2
   2d900:	ldr	r2, [sp, #192]	; 0xc0
   2d904:	ldr	r2, [r2]
   2d908:	sub	r3, r2, r3
   2d90c:	ldr	r2, [sp, #196]	; 0xc4
   2d910:	ldr	r2, [r2]
   2d914:	sub	r3, r3, r2
   2d918:	add	fp, fp, r3
   2d91c:	add	r6, r6, r3, lsl #1
   2d920:	ldr	r3, [sp, #208]	; 0xd0
   2d924:	cmp	r3, #1
   2d928:	ble	2d870 <GetDataSlab+0xc864>
   2d92c:	ldr	r3, [sp, #76]	; 0x4c
   2d930:	add	r3, r3, #1
   2d934:	str	r3, [sp, #76]	; 0x4c
   2d938:	ldr	r2, [sp, #204]	; 0xcc
   2d93c:	ldr	r1, [r2, #4]
   2d940:	mov	r0, r3
   2d944:	bl	517e8 <__aeabi_idivmod>
   2d948:	cmp	r1, #0
   2d94c:	bne	2d858 <GetDataSlab+0xc84c>
   2d950:	add	r5, sp, #76	; 0x4c
   2d954:	ldr	r3, [sp, #204]	; 0xcc
   2d958:	add	r3, r3, #4
   2d95c:	str	r3, [sp, #12]
   2d960:	ldr	r3, [sp, #196]	; 0xc4
   2d964:	add	r9, r3, #4
   2d968:	add	r7, sp, #112	; 0x70
   2d96c:	mov	sl, #1
   2d970:	b	2d814 <GetDataSlab+0xc808>
   2d974:	mov	r3, #0
   2d978:	b	24fa8 <GetDataSlab+0x3f9c>
   2d97c:	ldr	r3, [r8]
   2d980:	str	r3, [sp, #28]
   2d984:	sub	r3, r3, #1
   2d988:	str	r3, [sp, #32]
   2d98c:	ldr	r3, [sp, #192]	; 0xc0
   2d990:	ldr	r3, [r3]
   2d994:	str	r3, [sp, #112]	; 0x70
   2d998:	ldr	r3, [sp, #204]	; 0xcc
   2d99c:	ldr	r3, [r3]
   2d9a0:	str	r3, [sp, #20]
   2d9a4:	ldr	r3, [sp, #208]	; 0xd0
   2d9a8:	cmp	r3, #1
   2d9ac:	ble	2d9e0 <GetDataSlab+0xc9d4>
   2d9b0:	str	r8, [sp, #16]
   2d9b4:	add	sl, sp, #36	; 0x24
   2d9b8:	ldr	lr, [sp, #192]	; 0xc0
   2d9bc:	add	r9, sp, #112	; 0x70
   2d9c0:	ldr	r3, [sp, #204]	; 0xcc
   2d9c4:	add	r5, r3, #4
   2d9c8:	ldr	r3, [sp, #196]	; 0xc4
   2d9cc:	add	r4, r3, #4
   2d9d0:	str	lr, [sp, #12]
   2d9d4:	mov	r6, #2
   2d9d8:	mov	fp, #0
   2d9dc:	b	3fa90 <GetDataSlab+0x1ea84>
   2d9e0:	mov	fp, #0
   2d9e4:	b	3fb1c <GetDataSlab+0x1eb10>
   2d9e8:	ldr	r3, [sp, #20]
   2d9ec:	cmp	r3, #0
   2d9f0:	ble	3d490 <GetDataSlab+0x1c484>
   2d9f4:	mov	r3, #0
   2d9f8:	str	r3, [sp, #16]
   2d9fc:	b	2dad0 <GetDataSlab+0xcac4>
   2da00:	ldr	r2, [r8]
   2da04:	cmp	r2, #0
   2da08:	beq	2da20 <GetDataSlab+0xca14>
   2da0c:	ldr	r3, [sp, #12]
   2da10:	ldr	r3, [r3, #-4]
   2da14:	mul	r3, r3, r2
   2da18:	add	r6, r6, r3
   2da1c:	add	fp, fp, r3
   2da20:	add	r9, r9, #1
   2da24:	ldr	r3, [sp, #208]	; 0xd0
   2da28:	cmp	r3, r9
   2da2c:	beq	2dab8 <GetDataSlab+0xcaac>
   2da30:	ldr	r3, [r5]
   2da34:	add	r3, r3, #1
   2da38:	str	r3, [r5]
   2da3c:	add	r8, r8, #4
   2da40:	ldr	r2, [sp, #8]
   2da44:	ldr	r1, [r2, #4]!
   2da48:	str	r2, [sp, #8]
   2da4c:	mov	r0, r3
   2da50:	bl	517e8 <__aeabi_idivmod>
   2da54:	cmp	r1, #0
   2da58:	bne	2daa4 <GetDataSlab+0xca98>
   2da5c:	mov	r3, #0
   2da60:	str	r3, [r5], #4
   2da64:	add	r7, r7, #4
   2da68:	str	r7, [sp, #12]
   2da6c:	ldr	r4, [r7]
   2da70:	mov	r1, r4
   2da74:	mov	r0, fp
   2da78:	bl	517e8 <__aeabi_idivmod>
   2da7c:	subs	r3, r1, #0
   2da80:	beq	2da00 <GetDataSlab+0xc9f4>
   2da84:	ldr	r2, [r7, #-4]
   2da88:	ldr	r1, [r8]
   2da8c:	sub	r3, r4, r3
   2da90:	mla	r3, r1, r2, r3
   2da94:	add	r6, r6, r3
   2da98:	add	fp, fp, r3
   2da9c:	b	2da20 <GetDataSlab+0xca14>
   2daa0:	ldr	r9, [sp, #28]
   2daa4:	add	r3, sp, #152	; 0x98
   2daa8:	add	r3, r3, r9, lsl #2
   2daac:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dab0:	add	fp, fp, r3
   2dab4:	add	r6, r6, r3
   2dab8:	ldr	r3, [sp, #16]
   2dabc:	add	r3, r3, sl
   2dac0:	str	r3, [sp, #16]
   2dac4:	ldr	r2, [sp, #20]
   2dac8:	cmp	r3, r2
   2dacc:	bge	2db98 <GetDataSlab+0xcb8c>
   2dad0:	ldr	r3, [sp, #196]	; 0xc4
   2dad4:	ldr	r3, [r3]
   2dad8:	cmp	r3, #0
   2dadc:	addne	r6, r6, r3
   2dae0:	addne	fp, fp, r3
   2dae4:	ldr	r3, [sp, #204]	; 0xcc
   2dae8:	ldr	sl, [r3]
   2daec:	cmp	sl, #0
   2daf0:	ble	2db28 <GetDataSlab+0xcb1c>
   2daf4:	sub	ip, r6, #1
   2daf8:	ldr	r3, [sp, #4]
   2dafc:	ldr	r2, [sp, #16]
   2db00:	add	r0, r3, r2, lsl #3
   2db04:	mov	r1, #0
   2db08:	ldrsb	r2, [ip, #1]!
   2db0c:	asr	r3, r2, #31
   2db10:	strd	r2, [r0], #8
   2db14:	add	r1, r1, #1
   2db18:	ldr	r3, [sp, #204]	; 0xcc
   2db1c:	ldr	sl, [r3]
   2db20:	cmp	sl, r1
   2db24:	bgt	2db08 <GetDataSlab+0xcafc>
   2db28:	ldr	r3, [sp, #192]	; 0xc0
   2db2c:	ldr	r2, [r3]
   2db30:	ldr	r3, [sp, #196]	; 0xc4
   2db34:	ldr	r3, [r3]
   2db38:	sub	r3, r2, r3
   2db3c:	add	fp, fp, r3
   2db40:	add	r6, r6, r3
   2db44:	ldr	r3, [sp, #208]	; 0xd0
   2db48:	cmp	r3, #1
   2db4c:	ble	2dab8 <GetDataSlab+0xcaac>
   2db50:	ldr	r3, [sp, #76]	; 0x4c
   2db54:	add	r3, r3, #1
   2db58:	str	r3, [sp, #76]	; 0x4c
   2db5c:	ldr	r2, [sp, #204]	; 0xcc
   2db60:	ldr	r1, [r2, #4]
   2db64:	mov	r0, r3
   2db68:	bl	517e8 <__aeabi_idivmod>
   2db6c:	cmp	r1, #0
   2db70:	bne	2daa0 <GetDataSlab+0xca94>
   2db74:	add	r5, sp, #76	; 0x4c
   2db78:	ldr	r3, [sp, #204]	; 0xcc
   2db7c:	add	r3, r3, #4
   2db80:	str	r3, [sp, #8]
   2db84:	ldr	r3, [sp, #196]	; 0xc4
   2db88:	add	r8, r3, #4
   2db8c:	add	r7, sp, #112	; 0x70
   2db90:	ldr	r9, [sp, #28]
   2db94:	b	2da5c <GetDataSlab+0xca50>
   2db98:	mov	r3, #0
   2db9c:	b	24fa8 <GetDataSlab+0x3f9c>
   2dba0:	ldr	r2, [r9]
   2dba4:	cmp	r2, #0
   2dba8:	beq	2dbc0 <GetDataSlab+0xcbb4>
   2dbac:	ldr	r3, [sp, #16]
   2dbb0:	ldr	r3, [r3, #-4]
   2dbb4:	mul	r3, r3, r2
   2dbb8:	add	r6, r6, r3
   2dbbc:	add	fp, fp, r3
   2dbc0:	add	sl, sl, #1
   2dbc4:	ldr	r3, [sp, #208]	; 0xd0
   2dbc8:	cmp	r3, sl
   2dbcc:	beq	2dc58 <GetDataSlab+0xcc4c>
   2dbd0:	ldr	r3, [r5]
   2dbd4:	add	r3, r3, #1
   2dbd8:	str	r3, [r5]
   2dbdc:	add	r9, r9, #4
   2dbe0:	ldr	r2, [sp, #12]
   2dbe4:	ldr	r1, [r2, #4]!
   2dbe8:	str	r2, [sp, #12]
   2dbec:	mov	r0, r3
   2dbf0:	bl	517e8 <__aeabi_idivmod>
   2dbf4:	cmp	r1, #0
   2dbf8:	bne	2dc44 <GetDataSlab+0xcc38>
   2dbfc:	mov	r3, #0
   2dc00:	str	r3, [r5], #4
   2dc04:	add	r7, r7, #4
   2dc08:	str	r7, [sp, #16]
   2dc0c:	ldr	r4, [r7]
   2dc10:	mov	r1, r4
   2dc14:	mov	r0, fp
   2dc18:	bl	517e8 <__aeabi_idivmod>
   2dc1c:	subs	r3, r1, #0
   2dc20:	beq	2dba0 <GetDataSlab+0xcb94>
   2dc24:	ldr	r2, [r7, #-4]
   2dc28:	ldr	r1, [r9]
   2dc2c:	sub	r3, r4, r3
   2dc30:	mla	r3, r1, r2, r3
   2dc34:	add	r6, r6, r3
   2dc38:	add	fp, fp, r3
   2dc3c:	b	2dbc0 <GetDataSlab+0xcbb4>
   2dc40:	mov	sl, #1
   2dc44:	add	r3, sp, #152	; 0x98
   2dc48:	add	r3, r3, sl, lsl #2
   2dc4c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dc50:	add	fp, fp, r3
   2dc54:	add	r6, r6, r3
   2dc58:	ldr	r3, [sp, #24]
   2dc5c:	ldr	r2, [sp, #8]
   2dc60:	add	r3, r3, r2
   2dc64:	str	r3, [sp, #24]
   2dc68:	ldr	r2, [sp, #20]
   2dc6c:	cmp	r3, r2
   2dc70:	bge	2dd5c <GetDataSlab+0xcd50>
   2dc74:	ldr	r3, [sp, #196]	; 0xc4
   2dc78:	ldr	r3, [r3]
   2dc7c:	cmp	r3, #0
   2dc80:	addne	r6, r6, r3
   2dc84:	addne	fp, fp, r3
   2dc88:	ldr	r3, [sp, #204]	; 0xcc
   2dc8c:	ldr	r3, [r3]
   2dc90:	str	r3, [sp, #8]
   2dc94:	cmp	r3, #0
   2dc98:	ble	2dcdc <GetDataSlab+0xccd0>
   2dc9c:	ldr	r3, [sp, #4]
   2dca0:	ldr	r2, [sp, #24]
   2dca4:	add	r2, r3, r2, lsl #3
   2dca8:	mov	r3, #0
   2dcac:	ldrsb	r0, [r6]
   2dcb0:	asr	r1, r0, #31
   2dcb4:	strd	r0, [r2], #8
   2dcb8:	ldr	r1, [r8]
   2dcbc:	add	r6, r6, r1
   2dcc0:	add	fp, fp, r1
   2dcc4:	add	r3, r3, #1
   2dcc8:	ldr	r1, [sp, #204]	; 0xcc
   2dccc:	ldr	r1, [r1]
   2dcd0:	str	r1, [sp, #8]
   2dcd4:	cmp	r1, r3
   2dcd8:	bgt	2dcac <GetDataSlab+0xcca0>
   2dcdc:	ldr	r3, [r8]
   2dce0:	ldr	r2, [sp, #8]
   2dce4:	mul	r3, r3, r2
   2dce8:	ldr	r2, [sp, #192]	; 0xc0
   2dcec:	ldr	r2, [r2]
   2dcf0:	sub	r3, r2, r3
   2dcf4:	ldr	r2, [sp, #196]	; 0xc4
   2dcf8:	ldr	r2, [r2]
   2dcfc:	sub	r3, r3, r2
   2dd00:	add	fp, fp, r3
   2dd04:	add	r6, r6, r3
   2dd08:	ldr	r3, [sp, #208]	; 0xd0
   2dd0c:	cmp	r3, #1
   2dd10:	ble	2dc58 <GetDataSlab+0xcc4c>
   2dd14:	ldr	r3, [sp, #76]	; 0x4c
   2dd18:	add	r3, r3, #1
   2dd1c:	str	r3, [sp, #76]	; 0x4c
   2dd20:	ldr	r2, [sp, #204]	; 0xcc
   2dd24:	ldr	r1, [r2, #4]
   2dd28:	mov	r0, r3
   2dd2c:	bl	517e8 <__aeabi_idivmod>
   2dd30:	cmp	r1, #0
   2dd34:	bne	2dc40 <GetDataSlab+0xcc34>
   2dd38:	add	r5, sp, #76	; 0x4c
   2dd3c:	ldr	r3, [sp, #204]	; 0xcc
   2dd40:	add	r3, r3, #4
   2dd44:	str	r3, [sp, #12]
   2dd48:	ldr	r3, [sp, #196]	; 0xc4
   2dd4c:	add	r9, r3, #4
   2dd50:	add	r7, sp, #112	; 0x70
   2dd54:	mov	sl, #1
   2dd58:	b	2dbfc <GetDataSlab+0xcbf0>
   2dd5c:	mov	r3, #0
   2dd60:	b	24fa8 <GetDataSlab+0x3f9c>
   2dd64:	ldr	r3, [r8]
   2dd68:	str	r3, [sp, #28]
   2dd6c:	sub	r3, r3, #1
   2dd70:	str	r3, [sp, #32]
   2dd74:	ldr	r3, [sp, #192]	; 0xc0
   2dd78:	ldr	r3, [r3]
   2dd7c:	str	r3, [sp, #112]	; 0x70
   2dd80:	ldr	r3, [sp, #204]	; 0xcc
   2dd84:	ldr	r3, [r3]
   2dd88:	str	r3, [sp, #20]
   2dd8c:	ldr	r3, [sp, #208]	; 0xd0
   2dd90:	cmp	r3, #1
   2dd94:	ble	2ddc8 <GetDataSlab+0xcdbc>
   2dd98:	str	r8, [sp, #16]
   2dd9c:	add	sl, sp, #36	; 0x24
   2dda0:	ldr	lr, [sp, #192]	; 0xc0
   2dda4:	add	r9, sp, #112	; 0x70
   2dda8:	ldr	r3, [sp, #204]	; 0xcc
   2ddac:	add	r5, r3, #4
   2ddb0:	ldr	r3, [sp, #196]	; 0xc4
   2ddb4:	add	r4, r3, #4
   2ddb8:	str	lr, [sp, #12]
   2ddbc:	mov	r6, #2
   2ddc0:	mov	fp, #0
   2ddc4:	b	3fb7c <GetDataSlab+0x1eb70>
   2ddc8:	mov	fp, #0
   2ddcc:	b	3fc08 <GetDataSlab+0x1ebfc>
   2ddd0:	ldr	r3, [sp, #20]
   2ddd4:	cmp	r3, #0
   2ddd8:	ble	3d498 <GetDataSlab+0x1c48c>
   2dddc:	mov	r3, #0
   2dde0:	str	r3, [sp, #16]
   2dde4:	b	2deb8 <GetDataSlab+0xceac>
   2dde8:	ldr	r2, [r8]
   2ddec:	cmp	r2, #0
   2ddf0:	beq	2de08 <GetDataSlab+0xcdfc>
   2ddf4:	ldr	r3, [sp, #12]
   2ddf8:	ldr	r3, [r3, #-4]
   2ddfc:	mul	r3, r3, r2
   2de00:	add	r6, r6, r3
   2de04:	add	fp, fp, r3
   2de08:	add	r9, r9, #1
   2de0c:	ldr	r3, [sp, #208]	; 0xd0
   2de10:	cmp	r3, r9
   2de14:	beq	2dea0 <GetDataSlab+0xce94>
   2de18:	ldr	r3, [r5]
   2de1c:	add	r3, r3, #1
   2de20:	str	r3, [r5]
   2de24:	add	r8, r8, #4
   2de28:	ldr	r2, [sp, #8]
   2de2c:	ldr	r1, [r2, #4]!
   2de30:	str	r2, [sp, #8]
   2de34:	mov	r0, r3
   2de38:	bl	517e8 <__aeabi_idivmod>
   2de3c:	cmp	r1, #0
   2de40:	bne	2de8c <GetDataSlab+0xce80>
   2de44:	mov	r3, #0
   2de48:	str	r3, [r5], #4
   2de4c:	add	r7, r7, #4
   2de50:	str	r7, [sp, #12]
   2de54:	ldr	r4, [r7]
   2de58:	mov	r1, r4
   2de5c:	mov	r0, fp
   2de60:	bl	517e8 <__aeabi_idivmod>
   2de64:	subs	r3, r1, #0
   2de68:	beq	2dde8 <GetDataSlab+0xcddc>
   2de6c:	ldr	r2, [r7, #-4]
   2de70:	ldr	r1, [r8]
   2de74:	sub	r3, r4, r3
   2de78:	mla	r3, r1, r2, r3
   2de7c:	add	r6, r6, r3
   2de80:	add	fp, fp, r3
   2de84:	b	2de08 <GetDataSlab+0xcdfc>
   2de88:	ldr	r9, [sp, #28]
   2de8c:	add	r3, sp, #152	; 0x98
   2de90:	add	r3, r3, r9, lsl #2
   2de94:	ldr	r3, [r3, #-120]	; 0xffffff88
   2de98:	add	fp, fp, r3
   2de9c:	add	r6, r6, r3
   2dea0:	ldr	r3, [sp, #16]
   2dea4:	add	r3, r3, sl
   2dea8:	str	r3, [sp, #16]
   2deac:	ldr	r2, [sp, #20]
   2deb0:	cmp	r3, r2
   2deb4:	bge	2df80 <GetDataSlab+0xcf74>
   2deb8:	ldr	r3, [sp, #196]	; 0xc4
   2debc:	ldr	r3, [r3]
   2dec0:	cmp	r3, #0
   2dec4:	addne	r6, r6, r3
   2dec8:	addne	fp, fp, r3
   2decc:	ldr	r3, [sp, #204]	; 0xcc
   2ded0:	ldr	sl, [r3]
   2ded4:	cmp	sl, #0
   2ded8:	ble	2df10 <GetDataSlab+0xcf04>
   2dedc:	sub	ip, r6, #1
   2dee0:	ldr	r3, [sp, #4]
   2dee4:	ldr	r2, [sp, #16]
   2dee8:	add	r0, r3, r2, lsl #3
   2deec:	mov	r1, #0
   2def0:	ldrb	r2, [ip, #1]!
   2def4:	mov	r3, #0
   2def8:	strd	r2, [r0], #8
   2defc:	add	r1, r1, #1
   2df00:	ldr	r3, [sp, #204]	; 0xcc
   2df04:	ldr	sl, [r3]
   2df08:	cmp	sl, r1
   2df0c:	bgt	2def0 <GetDataSlab+0xcee4>
   2df10:	ldr	r3, [sp, #192]	; 0xc0
   2df14:	ldr	r2, [r3]
   2df18:	ldr	r3, [sp, #196]	; 0xc4
   2df1c:	ldr	r3, [r3]
   2df20:	sub	r3, r2, r3
   2df24:	add	fp, fp, r3
   2df28:	add	r6, r6, r3
   2df2c:	ldr	r3, [sp, #208]	; 0xd0
   2df30:	cmp	r3, #1
   2df34:	ble	2dea0 <GetDataSlab+0xce94>
   2df38:	ldr	r3, [sp, #76]	; 0x4c
   2df3c:	add	r3, r3, #1
   2df40:	str	r3, [sp, #76]	; 0x4c
   2df44:	ldr	r2, [sp, #204]	; 0xcc
   2df48:	ldr	r1, [r2, #4]
   2df4c:	mov	r0, r3
   2df50:	bl	517e8 <__aeabi_idivmod>
   2df54:	cmp	r1, #0
   2df58:	bne	2de88 <GetDataSlab+0xce7c>
   2df5c:	add	r5, sp, #76	; 0x4c
   2df60:	ldr	r3, [sp, #204]	; 0xcc
   2df64:	add	r3, r3, #4
   2df68:	str	r3, [sp, #8]
   2df6c:	ldr	r3, [sp, #196]	; 0xc4
   2df70:	add	r8, r3, #4
   2df74:	add	r7, sp, #112	; 0x70
   2df78:	ldr	r9, [sp, #28]
   2df7c:	b	2de44 <GetDataSlab+0xce38>
   2df80:	mov	r3, #0
   2df84:	b	24fa8 <GetDataSlab+0x3f9c>
   2df88:	ldr	r2, [r9]
   2df8c:	cmp	r2, #0
   2df90:	beq	2dfa8 <GetDataSlab+0xcf9c>
   2df94:	ldr	r3, [sp, #16]
   2df98:	ldr	r3, [r3, #-4]
   2df9c:	mul	r3, r3, r2
   2dfa0:	add	r6, r6, r3
   2dfa4:	add	fp, fp, r3
   2dfa8:	add	sl, sl, #1
   2dfac:	ldr	r3, [sp, #208]	; 0xd0
   2dfb0:	cmp	r3, sl
   2dfb4:	beq	2e040 <GetDataSlab+0xd034>
   2dfb8:	ldr	r3, [r5]
   2dfbc:	add	r3, r3, #1
   2dfc0:	str	r3, [r5]
   2dfc4:	add	r9, r9, #4
   2dfc8:	ldr	r2, [sp, #12]
   2dfcc:	ldr	r1, [r2, #4]!
   2dfd0:	str	r2, [sp, #12]
   2dfd4:	mov	r0, r3
   2dfd8:	bl	517e8 <__aeabi_idivmod>
   2dfdc:	cmp	r1, #0
   2dfe0:	bne	2e02c <GetDataSlab+0xd020>
   2dfe4:	mov	r3, #0
   2dfe8:	str	r3, [r5], #4
   2dfec:	add	r7, r7, #4
   2dff0:	str	r7, [sp, #16]
   2dff4:	ldr	r4, [r7]
   2dff8:	mov	r1, r4
   2dffc:	mov	r0, fp
   2e000:	bl	517e8 <__aeabi_idivmod>
   2e004:	subs	r3, r1, #0
   2e008:	beq	2df88 <GetDataSlab+0xcf7c>
   2e00c:	ldr	r2, [r7, #-4]
   2e010:	ldr	r1, [r9]
   2e014:	sub	r3, r4, r3
   2e018:	mla	r3, r1, r2, r3
   2e01c:	add	r6, r6, r3
   2e020:	add	fp, fp, r3
   2e024:	b	2dfa8 <GetDataSlab+0xcf9c>
   2e028:	mov	sl, #1
   2e02c:	add	r3, sp, #152	; 0x98
   2e030:	add	r3, r3, sl, lsl #2
   2e034:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e038:	add	fp, fp, r3
   2e03c:	add	r6, r6, r3
   2e040:	ldr	r3, [sp, #24]
   2e044:	ldr	r2, [sp, #8]
   2e048:	add	r3, r3, r2
   2e04c:	str	r3, [sp, #24]
   2e050:	ldr	r2, [sp, #20]
   2e054:	cmp	r3, r2
   2e058:	bge	2e144 <GetDataSlab+0xd138>
   2e05c:	ldr	r3, [sp, #196]	; 0xc4
   2e060:	ldr	r3, [r3]
   2e064:	cmp	r3, #0
   2e068:	addne	r6, r6, r3
   2e06c:	addne	fp, fp, r3
   2e070:	ldr	r3, [sp, #204]	; 0xcc
   2e074:	ldr	r3, [r3]
   2e078:	str	r3, [sp, #8]
   2e07c:	cmp	r3, #0
   2e080:	ble	2e0c4 <GetDataSlab+0xd0b8>
   2e084:	ldr	r3, [sp, #4]
   2e088:	ldr	r2, [sp, #24]
   2e08c:	add	r2, r3, r2, lsl #3
   2e090:	mov	r3, #0
   2e094:	ldrb	r0, [r6]
   2e098:	mov	r1, #0
   2e09c:	strd	r0, [r2], #8
   2e0a0:	ldr	r1, [r8]
   2e0a4:	add	r6, r6, r1
   2e0a8:	add	fp, fp, r1
   2e0ac:	add	r3, r3, #1
   2e0b0:	ldr	r1, [sp, #204]	; 0xcc
   2e0b4:	ldr	r1, [r1]
   2e0b8:	str	r1, [sp, #8]
   2e0bc:	cmp	r1, r3
   2e0c0:	bgt	2e094 <GetDataSlab+0xd088>
   2e0c4:	ldr	r3, [r8]
   2e0c8:	ldr	r2, [sp, #8]
   2e0cc:	mul	r3, r3, r2
   2e0d0:	ldr	r2, [sp, #192]	; 0xc0
   2e0d4:	ldr	r2, [r2]
   2e0d8:	sub	r3, r2, r3
   2e0dc:	ldr	r2, [sp, #196]	; 0xc4
   2e0e0:	ldr	r2, [r2]
   2e0e4:	sub	r3, r3, r2
   2e0e8:	add	fp, fp, r3
   2e0ec:	add	r6, r6, r3
   2e0f0:	ldr	r3, [sp, #208]	; 0xd0
   2e0f4:	cmp	r3, #1
   2e0f8:	ble	2e040 <GetDataSlab+0xd034>
   2e0fc:	ldr	r3, [sp, #76]	; 0x4c
   2e100:	add	r3, r3, #1
   2e104:	str	r3, [sp, #76]	; 0x4c
   2e108:	ldr	r2, [sp, #204]	; 0xcc
   2e10c:	ldr	r1, [r2, #4]
   2e110:	mov	r0, r3
   2e114:	bl	517e8 <__aeabi_idivmod>
   2e118:	cmp	r1, #0
   2e11c:	bne	2e028 <GetDataSlab+0xd01c>
   2e120:	add	r5, sp, #76	; 0x4c
   2e124:	ldr	r3, [sp, #204]	; 0xcc
   2e128:	add	r3, r3, #4
   2e12c:	str	r3, [sp, #12]
   2e130:	ldr	r3, [sp, #196]	; 0xc4
   2e134:	add	r9, r3, #4
   2e138:	add	r7, sp, #112	; 0x70
   2e13c:	mov	sl, #1
   2e140:	b	2dfe4 <GetDataSlab+0xcfd8>
   2e144:	mov	r3, #0
   2e148:	b	24fa8 <GetDataSlab+0x3f9c>
   2e14c:	cmp	r4, #12
   2e150:	beq	2e1c4 <GetDataSlab+0xd1b8>
   2e154:	cmp	r4, #13
   2e158:	movne	r3, #1
   2e15c:	bne	24fa8 <GetDataSlab+0x3f9c>
   2e160:	ldr	r3, [r8]
   2e164:	str	r3, [sp, #28]
   2e168:	sub	r3, r3, #1
   2e16c:	str	r3, [sp, #32]
   2e170:	ldr	r3, [sp, #192]	; 0xc0
   2e174:	ldr	r3, [r3]
   2e178:	str	r3, [sp, #112]	; 0x70
   2e17c:	ldr	r3, [sp, #204]	; 0xcc
   2e180:	ldr	r3, [r3]
   2e184:	str	r3, [sp, #20]
   2e188:	ldr	r3, [sp, #208]	; 0xd0
   2e18c:	cmp	r3, #1
   2e190:	ble	2e594 <GetDataSlab+0xd588>
   2e194:	str	r8, [sp, #16]
   2e198:	add	sl, sp, #36	; 0x24
   2e19c:	ldr	lr, [sp, #192]	; 0xc0
   2e1a0:	add	r9, sp, #112	; 0x70
   2e1a4:	ldr	r3, [sp, #204]	; 0xcc
   2e1a8:	add	r6, r3, #4
   2e1ac:	ldr	r3, [sp, #196]	; 0xc4
   2e1b0:	add	r4, r3, #4
   2e1b4:	str	lr, [sp, #12]
   2e1b8:	mov	r5, #2
   2e1bc:	mov	fp, #0
   2e1c0:	b	3fd54 <GetDataSlab+0x1ed48>
   2e1c4:	ldr	r3, [r8]
   2e1c8:	str	r3, [sp, #28]
   2e1cc:	sub	r3, r3, #1
   2e1d0:	str	r3, [sp, #32]
   2e1d4:	ldr	r3, [sp, #192]	; 0xc0
   2e1d8:	ldr	r3, [r3]
   2e1dc:	str	r3, [sp, #112]	; 0x70
   2e1e0:	ldr	r3, [sp, #204]	; 0xcc
   2e1e4:	ldr	r3, [r3]
   2e1e8:	str	r3, [sp, #20]
   2e1ec:	ldr	r3, [sp, #208]	; 0xd0
   2e1f0:	cmp	r3, #1
   2e1f4:	ble	2e228 <GetDataSlab+0xd21c>
   2e1f8:	str	r8, [sp, #16]
   2e1fc:	add	sl, sp, #36	; 0x24
   2e200:	ldr	lr, [sp, #192]	; 0xc0
   2e204:	add	r9, sp, #112	; 0x70
   2e208:	ldr	r3, [sp, #204]	; 0xcc
   2e20c:	add	r6, r3, #4
   2e210:	ldr	r3, [sp, #196]	; 0xc4
   2e214:	add	r4, r3, #4
   2e218:	str	lr, [sp, #12]
   2e21c:	mov	r5, #2
   2e220:	mov	fp, #0
   2e224:	b	3fc68 <GetDataSlab+0x1ec5c>
   2e228:	mov	fp, #0
   2e22c:	b	3fcf4 <GetDataSlab+0x1ece8>
   2e230:	ldr	r3, [sp, #20]
   2e234:	cmp	r3, #0
   2e238:	ble	3fd1c <GetDataSlab+0x1ed10>
   2e23c:	mov	r3, #0
   2e240:	str	r3, [sp, #16]
   2e244:	b	2e318 <GetDataSlab+0xd30c>
   2e248:	ldr	r2, [r8]
   2e24c:	cmp	r2, #0
   2e250:	beq	2e268 <GetDataSlab+0xd25c>
   2e254:	ldr	r3, [sp, #12]
   2e258:	ldr	r3, [r3, #-4]
   2e25c:	mul	r3, r3, r2
   2e260:	add	r5, r5, r3, lsl #3
   2e264:	add	fp, fp, r3
   2e268:	add	r9, r9, #1
   2e26c:	ldr	r3, [sp, #208]	; 0xd0
   2e270:	cmp	r3, r9
   2e274:	beq	2e300 <GetDataSlab+0xd2f4>
   2e278:	ldr	r3, [r6]
   2e27c:	add	r3, r3, #1
   2e280:	str	r3, [r6]
   2e284:	add	r8, r8, #4
   2e288:	ldr	r2, [sp, #8]
   2e28c:	ldr	r1, [r2, #4]!
   2e290:	str	r2, [sp, #8]
   2e294:	mov	r0, r3
   2e298:	bl	517e8 <__aeabi_idivmod>
   2e29c:	cmp	r1, #0
   2e2a0:	bne	2e2ec <GetDataSlab+0xd2e0>
   2e2a4:	mov	r3, #0
   2e2a8:	str	r3, [r6], #4
   2e2ac:	add	r7, r7, #4
   2e2b0:	str	r7, [sp, #12]
   2e2b4:	ldr	r4, [r7]
   2e2b8:	mov	r1, r4
   2e2bc:	mov	r0, fp
   2e2c0:	bl	517e8 <__aeabi_idivmod>
   2e2c4:	subs	r3, r1, #0
   2e2c8:	beq	2e248 <GetDataSlab+0xd23c>
   2e2cc:	ldr	r2, [r7, #-4]
   2e2d0:	ldr	r1, [r8]
   2e2d4:	sub	r3, r4, r3
   2e2d8:	mla	r3, r1, r2, r3
   2e2dc:	add	r5, r5, r3, lsl #3
   2e2e0:	add	fp, fp, r3
   2e2e4:	b	2e268 <GetDataSlab+0xd25c>
   2e2e8:	ldr	r9, [sp, #28]
   2e2ec:	add	r3, sp, #152	; 0x98
   2e2f0:	add	r3, r3, r9, lsl #2
   2e2f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e2f8:	add	fp, fp, r3
   2e2fc:	add	r5, r5, r3, lsl #3
   2e300:	ldr	r3, [sp, #16]
   2e304:	add	r3, r3, sl
   2e308:	str	r3, [sp, #16]
   2e30c:	ldr	r2, [sp, #20]
   2e310:	cmp	r3, r2
   2e314:	bge	3fd1c <GetDataSlab+0x1ed10>
   2e318:	ldr	r3, [sp, #196]	; 0xc4
   2e31c:	ldr	r3, [r3]
   2e320:	cmp	r3, #0
   2e324:	addne	r5, r5, r3, lsl #3
   2e328:	addne	fp, fp, r3
   2e32c:	ldr	r3, [sp, #204]	; 0xcc
   2e330:	ldr	sl, [r3]
   2e334:	cmp	sl, #0
   2e338:	ble	2e36c <GetDataSlab+0xd360>
   2e33c:	sub	ip, r5, #8
   2e340:	ldr	r3, [sp, #4]
   2e344:	ldr	r2, [sp, #16]
   2e348:	add	r0, r3, r2, lsl #3
   2e34c:	mov	r1, #0
   2e350:	ldrd	r2, [ip, #8]!
   2e354:	strd	r2, [r0], #8
   2e358:	add	r1, r1, #1
   2e35c:	ldr	r3, [sp, #204]	; 0xcc
   2e360:	ldr	sl, [r3]
   2e364:	cmp	sl, r1
   2e368:	bgt	2e350 <GetDataSlab+0xd344>
   2e36c:	ldr	r3, [sp, #192]	; 0xc0
   2e370:	ldr	r2, [r3]
   2e374:	ldr	r3, [sp, #196]	; 0xc4
   2e378:	ldr	r3, [r3]
   2e37c:	sub	r3, r2, r3
   2e380:	add	fp, fp, r3
   2e384:	add	r5, r5, r3, lsl #3
   2e388:	ldr	r3, [sp, #208]	; 0xd0
   2e38c:	cmp	r3, #1
   2e390:	ble	2e300 <GetDataSlab+0xd2f4>
   2e394:	ldr	r3, [sp, #76]	; 0x4c
   2e398:	add	r3, r3, #1
   2e39c:	str	r3, [sp, #76]	; 0x4c
   2e3a0:	ldr	r2, [sp, #204]	; 0xcc
   2e3a4:	ldr	r1, [r2, #4]
   2e3a8:	mov	r0, r3
   2e3ac:	bl	517e8 <__aeabi_idivmod>
   2e3b0:	cmp	r1, #0
   2e3b4:	bne	2e2e8 <GetDataSlab+0xd2dc>
   2e3b8:	add	r6, sp, #76	; 0x4c
   2e3bc:	ldr	r3, [sp, #204]	; 0xcc
   2e3c0:	add	r3, r3, #4
   2e3c4:	str	r3, [sp, #8]
   2e3c8:	ldr	r3, [sp, #196]	; 0xc4
   2e3cc:	add	r8, r3, #4
   2e3d0:	add	r7, sp, #112	; 0x70
   2e3d4:	ldr	r9, [sp, #28]
   2e3d8:	b	2e2a4 <GetDataSlab+0xd298>
   2e3dc:	ldr	r2, [r9]
   2e3e0:	cmp	r2, #0
   2e3e4:	beq	2e3fc <GetDataSlab+0xd3f0>
   2e3e8:	ldr	r3, [sp, #16]
   2e3ec:	ldr	r3, [r3, #-4]
   2e3f0:	mul	r3, r3, r2
   2e3f4:	add	r5, r5, r3, lsl #3
   2e3f8:	add	fp, fp, r3
   2e3fc:	add	sl, sl, #1
   2e400:	ldr	r3, [sp, #208]	; 0xd0
   2e404:	cmp	r3, sl
   2e408:	beq	2e494 <GetDataSlab+0xd488>
   2e40c:	ldr	r3, [r6]
   2e410:	add	r3, r3, #1
   2e414:	str	r3, [r6]
   2e418:	add	r9, r9, #4
   2e41c:	ldr	r2, [sp, #12]
   2e420:	ldr	r1, [r2, #4]!
   2e424:	str	r2, [sp, #12]
   2e428:	mov	r0, r3
   2e42c:	bl	517e8 <__aeabi_idivmod>
   2e430:	cmp	r1, #0
   2e434:	bne	2e480 <GetDataSlab+0xd474>
   2e438:	mov	r3, #0
   2e43c:	str	r3, [r6], #4
   2e440:	add	r7, r7, #4
   2e444:	str	r7, [sp, #16]
   2e448:	ldr	r4, [r7]
   2e44c:	mov	r1, r4
   2e450:	mov	r0, fp
   2e454:	bl	517e8 <__aeabi_idivmod>
   2e458:	subs	r3, r1, #0
   2e45c:	beq	2e3dc <GetDataSlab+0xd3d0>
   2e460:	ldr	r2, [r7, #-4]
   2e464:	ldr	r1, [r9]
   2e468:	sub	r3, r4, r3
   2e46c:	mla	r3, r1, r2, r3
   2e470:	add	r5, r5, r3, lsl #3
   2e474:	add	fp, fp, r3
   2e478:	b	2e3fc <GetDataSlab+0xd3f0>
   2e47c:	mov	sl, #1
   2e480:	add	r3, sp, #152	; 0x98
   2e484:	add	r3, r3, sl, lsl #2
   2e488:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e48c:	add	fp, fp, r3
   2e490:	add	r5, r5, r3, lsl #3
   2e494:	ldr	r3, [sp, #24]
   2e498:	ldr	r2, [sp, #8]
   2e49c:	add	r3, r3, r2
   2e4a0:	str	r3, [sp, #24]
   2e4a4:	ldr	r2, [sp, #20]
   2e4a8:	cmp	r3, r2
   2e4ac:	bge	3fd1c <GetDataSlab+0x1ed10>
   2e4b0:	ldr	r3, [sp, #196]	; 0xc4
   2e4b4:	ldr	r3, [r3]
   2e4b8:	cmp	r3, #0
   2e4bc:	addne	r5, r5, r3, lsl #3
   2e4c0:	addne	fp, fp, r3
   2e4c4:	ldr	r3, [sp, #204]	; 0xcc
   2e4c8:	ldr	r3, [r3]
   2e4cc:	str	r3, [sp, #8]
   2e4d0:	cmp	r3, #0
   2e4d4:	ble	2e514 <GetDataSlab+0xd508>
   2e4d8:	ldr	r3, [sp, #4]
   2e4dc:	ldr	r2, [sp, #24]
   2e4e0:	add	r2, r3, r2, lsl #3
   2e4e4:	mov	r3, #0
   2e4e8:	ldrd	r0, [r5]
   2e4ec:	strd	r0, [r2], #8
   2e4f0:	ldr	r1, [r8]
   2e4f4:	add	r5, r5, r1, lsl #3
   2e4f8:	add	fp, fp, r1
   2e4fc:	add	r3, r3, #1
   2e500:	ldr	r1, [sp, #204]	; 0xcc
   2e504:	ldr	r1, [r1]
   2e508:	str	r1, [sp, #8]
   2e50c:	cmp	r1, r3
   2e510:	bgt	2e4e8 <GetDataSlab+0xd4dc>
   2e514:	ldr	r3, [r8]
   2e518:	ldr	r2, [sp, #8]
   2e51c:	mul	r3, r3, r2
   2e520:	ldr	r2, [sp, #192]	; 0xc0
   2e524:	ldr	r2, [r2]
   2e528:	sub	r3, r2, r3
   2e52c:	ldr	r2, [sp, #196]	; 0xc4
   2e530:	ldr	r2, [r2]
   2e534:	sub	r3, r3, r2
   2e538:	add	fp, fp, r3
   2e53c:	add	r5, r5, r3, lsl #3
   2e540:	ldr	r3, [sp, #208]	; 0xd0
   2e544:	cmp	r3, #1
   2e548:	ble	2e494 <GetDataSlab+0xd488>
   2e54c:	ldr	r3, [sp, #76]	; 0x4c
   2e550:	add	r3, r3, #1
   2e554:	str	r3, [sp, #76]	; 0x4c
   2e558:	ldr	r2, [sp, #204]	; 0xcc
   2e55c:	ldr	r1, [r2, #4]
   2e560:	mov	r0, r3
   2e564:	bl	517e8 <__aeabi_idivmod>
   2e568:	cmp	r1, #0
   2e56c:	bne	2e47c <GetDataSlab+0xd470>
   2e570:	add	r6, sp, #76	; 0x4c
   2e574:	ldr	r3, [sp, #204]	; 0xcc
   2e578:	add	r3, r3, #4
   2e57c:	str	r3, [sp, #12]
   2e580:	ldr	r3, [sp, #196]	; 0xc4
   2e584:	add	r9, r3, #4
   2e588:	add	r7, sp, #112	; 0x70
   2e58c:	mov	sl, #1
   2e590:	b	2e438 <GetDataSlab+0xd42c>
   2e594:	mov	fp, #0
   2e598:	b	3fde0 <GetDataSlab+0x1edd4>
   2e59c:	ldr	r3, [sp, #20]
   2e5a0:	cmp	r3, #0
   2e5a4:	ble	3d4a0 <GetDataSlab+0x1c494>
   2e5a8:	mov	r3, #0
   2e5ac:	str	r3, [sp, #16]
   2e5b0:	b	2e684 <GetDataSlab+0xd678>
   2e5b4:	ldr	r2, [r8]
   2e5b8:	cmp	r2, #0
   2e5bc:	beq	2e5d4 <GetDataSlab+0xd5c8>
   2e5c0:	ldr	r3, [sp, #12]
   2e5c4:	ldr	r3, [r3, #-4]
   2e5c8:	mul	r3, r3, r2
   2e5cc:	add	r5, r5, r3, lsl #3
   2e5d0:	add	fp, fp, r3
   2e5d4:	add	r9, r9, #1
   2e5d8:	ldr	r3, [sp, #208]	; 0xd0
   2e5dc:	cmp	r3, r9
   2e5e0:	beq	2e66c <GetDataSlab+0xd660>
   2e5e4:	ldr	r3, [r6]
   2e5e8:	add	r3, r3, #1
   2e5ec:	str	r3, [r6]
   2e5f0:	add	r8, r8, #4
   2e5f4:	ldr	r2, [sp, #8]
   2e5f8:	ldr	r1, [r2, #4]!
   2e5fc:	str	r2, [sp, #8]
   2e600:	mov	r0, r3
   2e604:	bl	517e8 <__aeabi_idivmod>
   2e608:	cmp	r1, #0
   2e60c:	bne	2e658 <GetDataSlab+0xd64c>
   2e610:	mov	r3, #0
   2e614:	str	r3, [r6], #4
   2e618:	add	r7, r7, #4
   2e61c:	str	r7, [sp, #12]
   2e620:	ldr	r4, [r7]
   2e624:	mov	r1, r4
   2e628:	mov	r0, fp
   2e62c:	bl	517e8 <__aeabi_idivmod>
   2e630:	subs	r3, r1, #0
   2e634:	beq	2e5b4 <GetDataSlab+0xd5a8>
   2e638:	ldr	r2, [r7, #-4]
   2e63c:	ldr	r1, [r8]
   2e640:	sub	r3, r4, r3
   2e644:	mla	r3, r1, r2, r3
   2e648:	add	r5, r5, r3, lsl #3
   2e64c:	add	fp, fp, r3
   2e650:	b	2e5d4 <GetDataSlab+0xd5c8>
   2e654:	ldr	r9, [sp, #28]
   2e658:	add	r3, sp, #152	; 0x98
   2e65c:	add	r3, r3, r9, lsl #2
   2e660:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e664:	add	fp, fp, r3
   2e668:	add	r5, r5, r3, lsl #3
   2e66c:	ldr	r3, [sp, #16]
   2e670:	add	r3, r3, sl
   2e674:	str	r3, [sp, #16]
   2e678:	ldr	r2, [sp, #20]
   2e67c:	cmp	r3, r2
   2e680:	bge	2e748 <GetDataSlab+0xd73c>
   2e684:	ldr	r3, [sp, #196]	; 0xc4
   2e688:	ldr	r3, [r3]
   2e68c:	cmp	r3, #0
   2e690:	addne	r5, r5, r3, lsl #3
   2e694:	addne	fp, fp, r3
   2e698:	ldr	r3, [sp, #204]	; 0xcc
   2e69c:	ldr	sl, [r3]
   2e6a0:	cmp	sl, #0
   2e6a4:	ble	2e6d8 <GetDataSlab+0xd6cc>
   2e6a8:	sub	ip, r5, #8
   2e6ac:	ldr	r3, [sp, #4]
   2e6b0:	ldr	r2, [sp, #16]
   2e6b4:	add	r0, r3, r2, lsl #3
   2e6b8:	mov	r1, #0
   2e6bc:	ldrd	r2, [ip, #8]!
   2e6c0:	strd	r2, [r0], #8
   2e6c4:	add	r1, r1, #1
   2e6c8:	ldr	r3, [sp, #204]	; 0xcc
   2e6cc:	ldr	sl, [r3]
   2e6d0:	cmp	sl, r1
   2e6d4:	bgt	2e6bc <GetDataSlab+0xd6b0>
   2e6d8:	ldr	r3, [sp, #192]	; 0xc0
   2e6dc:	ldr	r2, [r3]
   2e6e0:	ldr	r3, [sp, #196]	; 0xc4
   2e6e4:	ldr	r3, [r3]
   2e6e8:	sub	r3, r2, r3
   2e6ec:	add	fp, fp, r3
   2e6f0:	add	r5, r5, r3, lsl #3
   2e6f4:	ldr	r3, [sp, #208]	; 0xd0
   2e6f8:	cmp	r3, #1
   2e6fc:	ble	2e66c <GetDataSlab+0xd660>
   2e700:	ldr	r3, [sp, #76]	; 0x4c
   2e704:	add	r3, r3, #1
   2e708:	str	r3, [sp, #76]	; 0x4c
   2e70c:	ldr	r2, [sp, #204]	; 0xcc
   2e710:	ldr	r1, [r2, #4]
   2e714:	mov	r0, r3
   2e718:	bl	517e8 <__aeabi_idivmod>
   2e71c:	cmp	r1, #0
   2e720:	bne	2e654 <GetDataSlab+0xd648>
   2e724:	add	r6, sp, #76	; 0x4c
   2e728:	ldr	r3, [sp, #204]	; 0xcc
   2e72c:	add	r3, r3, #4
   2e730:	str	r3, [sp, #8]
   2e734:	ldr	r3, [sp, #196]	; 0xc4
   2e738:	add	r8, r3, #4
   2e73c:	add	r7, sp, #112	; 0x70
   2e740:	ldr	r9, [sp, #28]
   2e744:	b	2e610 <GetDataSlab+0xd604>
   2e748:	mov	r3, #0
   2e74c:	b	24fa8 <GetDataSlab+0x3f9c>
   2e750:	ldr	r2, [r9]
   2e754:	cmp	r2, #0
   2e758:	beq	2e770 <GetDataSlab+0xd764>
   2e75c:	ldr	r3, [sp, #16]
   2e760:	ldr	r3, [r3, #-4]
   2e764:	mul	r3, r3, r2
   2e768:	add	r5, r5, r3, lsl #3
   2e76c:	add	fp, fp, r3
   2e770:	add	sl, sl, #1
   2e774:	ldr	r3, [sp, #208]	; 0xd0
   2e778:	cmp	r3, sl
   2e77c:	beq	2e808 <GetDataSlab+0xd7fc>
   2e780:	ldr	r3, [r6]
   2e784:	add	r3, r3, #1
   2e788:	str	r3, [r6]
   2e78c:	add	r9, r9, #4
   2e790:	ldr	r2, [sp, #12]
   2e794:	ldr	r1, [r2, #4]!
   2e798:	str	r2, [sp, #12]
   2e79c:	mov	r0, r3
   2e7a0:	bl	517e8 <__aeabi_idivmod>
   2e7a4:	cmp	r1, #0
   2e7a8:	bne	2e7f4 <GetDataSlab+0xd7e8>
   2e7ac:	mov	r3, #0
   2e7b0:	str	r3, [r6], #4
   2e7b4:	add	r7, r7, #4
   2e7b8:	str	r7, [sp, #16]
   2e7bc:	ldr	r4, [r7]
   2e7c0:	mov	r1, r4
   2e7c4:	mov	r0, fp
   2e7c8:	bl	517e8 <__aeabi_idivmod>
   2e7cc:	subs	r3, r1, #0
   2e7d0:	beq	2e750 <GetDataSlab+0xd744>
   2e7d4:	ldr	r2, [r7, #-4]
   2e7d8:	ldr	r1, [r9]
   2e7dc:	sub	r3, r4, r3
   2e7e0:	mla	r3, r1, r2, r3
   2e7e4:	add	r5, r5, r3, lsl #3
   2e7e8:	add	fp, fp, r3
   2e7ec:	b	2e770 <GetDataSlab+0xd764>
   2e7f0:	mov	sl, #1
   2e7f4:	add	r3, sp, #152	; 0x98
   2e7f8:	add	r3, r3, sl, lsl #2
   2e7fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e800:	add	fp, fp, r3
   2e804:	add	r5, r5, r3, lsl #3
   2e808:	ldr	r3, [sp, #24]
   2e80c:	ldr	r2, [sp, #8]
   2e810:	add	r3, r3, r2
   2e814:	str	r3, [sp, #24]
   2e818:	ldr	r2, [sp, #20]
   2e81c:	cmp	r3, r2
   2e820:	bge	2e908 <GetDataSlab+0xd8fc>
   2e824:	ldr	r3, [sp, #196]	; 0xc4
   2e828:	ldr	r3, [r3]
   2e82c:	cmp	r3, #0
   2e830:	addne	r5, r5, r3, lsl #3
   2e834:	addne	fp, fp, r3
   2e838:	ldr	r3, [sp, #204]	; 0xcc
   2e83c:	ldr	r3, [r3]
   2e840:	str	r3, [sp, #8]
   2e844:	cmp	r3, #0
   2e848:	ble	2e888 <GetDataSlab+0xd87c>
   2e84c:	ldr	r3, [sp, #4]
   2e850:	ldr	r2, [sp, #24]
   2e854:	add	r2, r3, r2, lsl #3
   2e858:	mov	r3, #0
   2e85c:	ldrd	r0, [r5]
   2e860:	strd	r0, [r2], #8
   2e864:	ldr	r1, [r8]
   2e868:	add	r5, r5, r1, lsl #3
   2e86c:	add	fp, fp, r1
   2e870:	add	r3, r3, #1
   2e874:	ldr	r1, [sp, #204]	; 0xcc
   2e878:	ldr	r1, [r1]
   2e87c:	str	r1, [sp, #8]
   2e880:	cmp	r1, r3
   2e884:	bgt	2e85c <GetDataSlab+0xd850>
   2e888:	ldr	r3, [r8]
   2e88c:	ldr	r2, [sp, #8]
   2e890:	mul	r3, r3, r2
   2e894:	ldr	r2, [sp, #192]	; 0xc0
   2e898:	ldr	r2, [r2]
   2e89c:	sub	r3, r2, r3
   2e8a0:	ldr	r2, [sp, #196]	; 0xc4
   2e8a4:	ldr	r2, [r2]
   2e8a8:	sub	r3, r3, r2
   2e8ac:	add	fp, fp, r3
   2e8b0:	add	r5, r5, r3, lsl #3
   2e8b4:	ldr	r3, [sp, #208]	; 0xd0
   2e8b8:	cmp	r3, #1
   2e8bc:	ble	2e808 <GetDataSlab+0xd7fc>
   2e8c0:	ldr	r3, [sp, #76]	; 0x4c
   2e8c4:	add	r3, r3, #1
   2e8c8:	str	r3, [sp, #76]	; 0x4c
   2e8cc:	ldr	r2, [sp, #204]	; 0xcc
   2e8d0:	ldr	r1, [r2, #4]
   2e8d4:	mov	r0, r3
   2e8d8:	bl	517e8 <__aeabi_idivmod>
   2e8dc:	cmp	r1, #0
   2e8e0:	bne	2e7f0 <GetDataSlab+0xd7e4>
   2e8e4:	add	r6, sp, #76	; 0x4c
   2e8e8:	ldr	r3, [sp, #204]	; 0xcc
   2e8ec:	add	r3, r3, #4
   2e8f0:	str	r3, [sp, #12]
   2e8f4:	ldr	r3, [sp, #196]	; 0xc4
   2e8f8:	add	r9, r3, #4
   2e8fc:	add	r7, sp, #112	; 0x70
   2e900:	mov	sl, #1
   2e904:	b	2e7ac <GetDataSlab+0xd7a0>
   2e908:	mov	r3, #0
   2e90c:	b	24fa8 <GetDataSlab+0x3f9c>
   2e910:	sub	r3, r4, #1
   2e914:	cmp	r3, #8
   2e918:	addls	pc, pc, r3, lsl #2
   2e91c:	b	30854 <GetDataSlab+0xf848>
   2e920:	b	30094 <GetDataSlab+0xf088>
   2e924:	b	30474 <GetDataSlab+0xf468>
   2e928:	b	2f8d4 <GetDataSlab+0xe8c8>
   2e92c:	b	2fcb4 <GetDataSlab+0xeca8>
   2e930:	b	2f114 <GetDataSlab+0xe108>
   2e934:	b	2f4f4 <GetDataSlab+0xe4e8>
   2e938:	b	2ed2c <GetDataSlab+0xdd20>
   2e93c:	b	30854 <GetDataSlab+0xf848>
   2e940:	b	2e944 <GetDataSlab+0xd938>
   2e944:	ldr	r3, [r8]
   2e948:	str	r3, [sp, #28]
   2e94c:	sub	r3, r3, #1
   2e950:	str	r3, [sp, #32]
   2e954:	ldr	r3, [sp, #192]	; 0xc0
   2e958:	ldr	r3, [r3]
   2e95c:	str	r3, [sp, #112]	; 0x70
   2e960:	ldr	r3, [sp, #204]	; 0xcc
   2e964:	ldr	r3, [r3]
   2e968:	str	r3, [sp, #20]
   2e96c:	ldr	r3, [sp, #208]	; 0xd0
   2e970:	cmp	r3, #1
   2e974:	ble	2e9a8 <GetDataSlab+0xd99c>
   2e978:	str	r8, [sp, #16]
   2e97c:	add	sl, sp, #36	; 0x24
   2e980:	ldr	lr, [sp, #192]	; 0xc0
   2e984:	add	r9, sp, #112	; 0x70
   2e988:	ldr	r3, [sp, #204]	; 0xcc
   2e98c:	add	r5, r3, #4
   2e990:	ldr	r3, [sp, #196]	; 0xc4
   2e994:	add	r4, r3, #4
   2e998:	str	lr, [sp, #12]
   2e99c:	mov	r6, #2
   2e9a0:	mov	fp, #0
   2e9a4:	b	3fe40 <GetDataSlab+0x1ee34>
   2e9a8:	mov	fp, #0
   2e9ac:	b	3fecc <GetDataSlab+0x1eec0>
   2e9b0:	ldr	r3, [sp, #20]
   2e9b4:	cmp	r3, #0
   2e9b8:	ble	3d4a8 <GetDataSlab+0x1c49c>
   2e9bc:	mov	r3, #0
   2e9c0:	str	r3, [sp, #16]
   2e9c4:	b	2ea98 <GetDataSlab+0xda8c>
   2e9c8:	ldr	r2, [r8]
   2e9cc:	cmp	r2, #0
   2e9d0:	beq	2e9e8 <GetDataSlab+0xd9dc>
   2e9d4:	ldr	r3, [sp, #12]
   2e9d8:	ldr	r3, [r3, #-4]
   2e9dc:	mul	r3, r3, r2
   2e9e0:	add	r5, r5, r3, lsl #3
   2e9e4:	add	fp, fp, r3
   2e9e8:	add	r9, r9, #1
   2e9ec:	ldr	r3, [sp, #208]	; 0xd0
   2e9f0:	cmp	r3, r9
   2e9f4:	beq	2ea80 <GetDataSlab+0xda74>
   2e9f8:	ldr	r3, [r6]
   2e9fc:	add	r3, r3, #1
   2ea00:	str	r3, [r6]
   2ea04:	add	r8, r8, #4
   2ea08:	ldr	r2, [sp, #8]
   2ea0c:	ldr	r1, [r2, #4]!
   2ea10:	str	r2, [sp, #8]
   2ea14:	mov	r0, r3
   2ea18:	bl	517e8 <__aeabi_idivmod>
   2ea1c:	cmp	r1, #0
   2ea20:	bne	2ea6c <GetDataSlab+0xda60>
   2ea24:	mov	r3, #0
   2ea28:	str	r3, [r6], #4
   2ea2c:	add	r7, r7, #4
   2ea30:	str	r7, [sp, #12]
   2ea34:	ldr	r4, [r7]
   2ea38:	mov	r1, r4
   2ea3c:	mov	r0, fp
   2ea40:	bl	517e8 <__aeabi_idivmod>
   2ea44:	subs	r3, r1, #0
   2ea48:	beq	2e9c8 <GetDataSlab+0xd9bc>
   2ea4c:	ldr	r2, [r7, #-4]
   2ea50:	ldr	r1, [r8]
   2ea54:	sub	r3, r4, r3
   2ea58:	mla	r3, r1, r2, r3
   2ea5c:	add	r5, r5, r3, lsl #3
   2ea60:	add	fp, fp, r3
   2ea64:	b	2e9e8 <GetDataSlab+0xd9dc>
   2ea68:	ldr	r9, [sp, #28]
   2ea6c:	add	r3, sp, #152	; 0x98
   2ea70:	add	r3, r3, r9, lsl #2
   2ea74:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ea78:	add	fp, fp, r3
   2ea7c:	add	r5, r5, r3, lsl #3
   2ea80:	ldr	r3, [sp, #16]
   2ea84:	add	r3, r3, sl
   2ea88:	str	r3, [sp, #16]
   2ea8c:	ldr	r2, [sp, #20]
   2ea90:	cmp	r3, r2
   2ea94:	bge	2eb60 <GetDataSlab+0xdb54>
   2ea98:	ldr	r3, [sp, #196]	; 0xc4
   2ea9c:	ldr	r3, [r3]
   2eaa0:	cmp	r3, #0
   2eaa4:	addne	r5, r5, r3, lsl #3
   2eaa8:	addne	fp, fp, r3
   2eaac:	ldr	r3, [sp, #204]	; 0xcc
   2eab0:	ldr	sl, [r3]
   2eab4:	cmp	sl, #0
   2eab8:	ble	2eaf0 <GetDataSlab+0xdae4>
   2eabc:	mov	r1, r5
   2eac0:	ldr	r3, [sp, #4]
   2eac4:	ldr	r2, [sp, #16]
   2eac8:	add	r2, r3, r2, lsl #2
   2eacc:	mov	r3, #0
   2ead0:	vldmia	r1!, {d7}
   2ead4:	vcvt.s32.f64	s15, d7
   2ead8:	vstmia	r2!, {s15}
   2eadc:	add	r3, r3, #1
   2eae0:	ldr	r0, [sp, #204]	; 0xcc
   2eae4:	ldr	sl, [r0]
   2eae8:	cmp	sl, r3
   2eaec:	bgt	2ead0 <GetDataSlab+0xdac4>
   2eaf0:	ldr	r3, [sp, #192]	; 0xc0
   2eaf4:	ldr	r2, [r3]
   2eaf8:	ldr	r3, [sp, #196]	; 0xc4
   2eafc:	ldr	r3, [r3]
   2eb00:	sub	r3, r2, r3
   2eb04:	add	fp, fp, r3
   2eb08:	add	r5, r5, r3, lsl #3
   2eb0c:	ldr	r3, [sp, #208]	; 0xd0
   2eb10:	cmp	r3, #1
   2eb14:	ble	2ea80 <GetDataSlab+0xda74>
   2eb18:	ldr	r3, [sp, #76]	; 0x4c
   2eb1c:	add	r3, r3, #1
   2eb20:	str	r3, [sp, #76]	; 0x4c
   2eb24:	ldr	r2, [sp, #204]	; 0xcc
   2eb28:	ldr	r1, [r2, #4]
   2eb2c:	mov	r0, r3
   2eb30:	bl	517e8 <__aeabi_idivmod>
   2eb34:	cmp	r1, #0
   2eb38:	bne	2ea68 <GetDataSlab+0xda5c>
   2eb3c:	add	r6, sp, #76	; 0x4c
   2eb40:	ldr	r3, [sp, #204]	; 0xcc
   2eb44:	add	r3, r3, #4
   2eb48:	str	r3, [sp, #8]
   2eb4c:	ldr	r3, [sp, #196]	; 0xc4
   2eb50:	add	r8, r3, #4
   2eb54:	add	r7, sp, #112	; 0x70
   2eb58:	ldr	r9, [sp, #28]
   2eb5c:	b	2ea24 <GetDataSlab+0xda18>
   2eb60:	mov	r3, #0
   2eb64:	b	24fa8 <GetDataSlab+0x3f9c>
   2eb68:	ldr	r2, [r9]
   2eb6c:	cmp	r2, #0
   2eb70:	beq	2eb88 <GetDataSlab+0xdb7c>
   2eb74:	ldr	r3, [sp, #16]
   2eb78:	ldr	r3, [r3, #-4]
   2eb7c:	mul	r3, r3, r2
   2eb80:	add	r5, r5, r3, lsl #3
   2eb84:	add	fp, fp, r3
   2eb88:	add	sl, sl, #1
   2eb8c:	ldr	r3, [sp, #208]	; 0xd0
   2eb90:	cmp	r3, sl
   2eb94:	beq	2ec20 <GetDataSlab+0xdc14>
   2eb98:	ldr	r3, [r6]
   2eb9c:	add	r3, r3, #1
   2eba0:	str	r3, [r6]
   2eba4:	add	r9, r9, #4
   2eba8:	ldr	r2, [sp, #12]
   2ebac:	ldr	r1, [r2, #4]!
   2ebb0:	str	r2, [sp, #12]
   2ebb4:	mov	r0, r3
   2ebb8:	bl	517e8 <__aeabi_idivmod>
   2ebbc:	cmp	r1, #0
   2ebc0:	bne	2ec0c <GetDataSlab+0xdc00>
   2ebc4:	mov	r3, #0
   2ebc8:	str	r3, [r6], #4
   2ebcc:	add	r7, r7, #4
   2ebd0:	str	r7, [sp, #16]
   2ebd4:	ldr	r4, [r7]
   2ebd8:	mov	r1, r4
   2ebdc:	mov	r0, fp
   2ebe0:	bl	517e8 <__aeabi_idivmod>
   2ebe4:	subs	r3, r1, #0
   2ebe8:	beq	2eb68 <GetDataSlab+0xdb5c>
   2ebec:	ldr	r2, [r7, #-4]
   2ebf0:	ldr	r1, [r9]
   2ebf4:	sub	r3, r4, r3
   2ebf8:	mla	r3, r1, r2, r3
   2ebfc:	add	r5, r5, r3, lsl #3
   2ec00:	add	fp, fp, r3
   2ec04:	b	2eb88 <GetDataSlab+0xdb7c>
   2ec08:	mov	sl, #1
   2ec0c:	add	r3, sp, #152	; 0x98
   2ec10:	add	r3, r3, sl, lsl #2
   2ec14:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ec18:	add	fp, fp, r3
   2ec1c:	add	r5, r5, r3, lsl #3
   2ec20:	ldr	r3, [sp, #24]
   2ec24:	ldr	r2, [sp, #8]
   2ec28:	add	r3, r3, r2
   2ec2c:	str	r3, [sp, #24]
   2ec30:	ldr	r2, [sp, #20]
   2ec34:	cmp	r3, r2
   2ec38:	bge	2ed24 <GetDataSlab+0xdd18>
   2ec3c:	ldr	r3, [sp, #196]	; 0xc4
   2ec40:	ldr	r3, [r3]
   2ec44:	cmp	r3, #0
   2ec48:	addne	r5, r5, r3, lsl #3
   2ec4c:	addne	fp, fp, r3
   2ec50:	ldr	r3, [sp, #204]	; 0xcc
   2ec54:	ldr	r3, [r3]
   2ec58:	str	r3, [sp, #8]
   2ec5c:	cmp	r3, #0
   2ec60:	ble	2eca4 <GetDataSlab+0xdc98>
   2ec64:	ldr	r3, [sp, #4]
   2ec68:	ldr	r2, [sp, #24]
   2ec6c:	add	r2, r3, r2, lsl #2
   2ec70:	mov	r3, #0
   2ec74:	vldr	d7, [r5]
   2ec78:	vcvt.s32.f64	s15, d7
   2ec7c:	vstmia	r2!, {s15}
   2ec80:	ldr	r1, [r8]
   2ec84:	add	r5, r5, r1, lsl #3
   2ec88:	add	fp, fp, r1
   2ec8c:	add	r3, r3, #1
   2ec90:	ldr	r1, [sp, #204]	; 0xcc
   2ec94:	ldr	r1, [r1]
   2ec98:	str	r1, [sp, #8]
   2ec9c:	cmp	r1, r3
   2eca0:	bgt	2ec74 <GetDataSlab+0xdc68>
   2eca4:	ldr	r3, [r8]
   2eca8:	ldr	r2, [sp, #8]
   2ecac:	mul	r3, r3, r2
   2ecb0:	ldr	r2, [sp, #192]	; 0xc0
   2ecb4:	ldr	r2, [r2]
   2ecb8:	sub	r3, r2, r3
   2ecbc:	ldr	r2, [sp, #196]	; 0xc4
   2ecc0:	ldr	r2, [r2]
   2ecc4:	sub	r3, r3, r2
   2ecc8:	add	fp, fp, r3
   2eccc:	add	r5, r5, r3, lsl #3
   2ecd0:	ldr	r3, [sp, #208]	; 0xd0
   2ecd4:	cmp	r3, #1
   2ecd8:	ble	2ec20 <GetDataSlab+0xdc14>
   2ecdc:	ldr	r3, [sp, #76]	; 0x4c
   2ece0:	add	r3, r3, #1
   2ece4:	str	r3, [sp, #76]	; 0x4c
   2ece8:	ldr	r2, [sp, #204]	; 0xcc
   2ecec:	ldr	r1, [r2, #4]
   2ecf0:	mov	r0, r3
   2ecf4:	bl	517e8 <__aeabi_idivmod>
   2ecf8:	cmp	r1, #0
   2ecfc:	bne	2ec08 <GetDataSlab+0xdbfc>
   2ed00:	add	r6, sp, #76	; 0x4c
   2ed04:	ldr	r3, [sp, #204]	; 0xcc
   2ed08:	add	r3, r3, #4
   2ed0c:	str	r3, [sp, #12]
   2ed10:	ldr	r3, [sp, #196]	; 0xc4
   2ed14:	add	r9, r3, #4
   2ed18:	add	r7, sp, #112	; 0x70
   2ed1c:	mov	sl, #1
   2ed20:	b	2ebc4 <GetDataSlab+0xdbb8>
   2ed24:	mov	r3, #0
   2ed28:	b	24fa8 <GetDataSlab+0x3f9c>
   2ed2c:	ldr	r3, [r8]
   2ed30:	str	r3, [sp, #28]
   2ed34:	sub	r3, r3, #1
   2ed38:	str	r3, [sp, #32]
   2ed3c:	ldr	r3, [sp, #192]	; 0xc0
   2ed40:	ldr	r3, [r3]
   2ed44:	str	r3, [sp, #112]	; 0x70
   2ed48:	ldr	r3, [sp, #204]	; 0xcc
   2ed4c:	ldr	r3, [r3]
   2ed50:	str	r3, [sp, #20]
   2ed54:	ldr	r3, [sp, #208]	; 0xd0
   2ed58:	cmp	r3, #1
   2ed5c:	ble	2ed90 <GetDataSlab+0xdd84>
   2ed60:	str	r8, [sp, #16]
   2ed64:	add	sl, sp, #36	; 0x24
   2ed68:	ldr	lr, [sp, #192]	; 0xc0
   2ed6c:	add	r9, sp, #112	; 0x70
   2ed70:	ldr	r3, [sp, #204]	; 0xcc
   2ed74:	add	r5, r3, #4
   2ed78:	ldr	r3, [sp, #196]	; 0xc4
   2ed7c:	add	r4, r3, #4
   2ed80:	str	lr, [sp, #12]
   2ed84:	mov	r6, #2
   2ed88:	mov	fp, #0
   2ed8c:	b	3ff2c <GetDataSlab+0x1ef20>
   2ed90:	mov	fp, #0
   2ed94:	b	3ffb8 <GetDataSlab+0x1efac>
   2ed98:	ldr	r3, [sp, #20]
   2ed9c:	cmp	r3, #0
   2eda0:	ble	3d4b0 <GetDataSlab+0x1c4a4>
   2eda4:	mov	r3, #0
   2eda8:	str	r3, [sp, #16]
   2edac:	b	2ee80 <GetDataSlab+0xde74>
   2edb0:	ldr	r2, [r8]
   2edb4:	cmp	r2, #0
   2edb8:	beq	2edd0 <GetDataSlab+0xddc4>
   2edbc:	ldr	r3, [sp, #12]
   2edc0:	ldr	r3, [r3, #-4]
   2edc4:	mul	r3, r3, r2
   2edc8:	add	r5, r5, r3, lsl #2
   2edcc:	add	fp, fp, r3
   2edd0:	add	r9, r9, #1
   2edd4:	ldr	r3, [sp, #208]	; 0xd0
   2edd8:	cmp	r3, r9
   2eddc:	beq	2ee68 <GetDataSlab+0xde5c>
   2ede0:	ldr	r3, [r6]
   2ede4:	add	r3, r3, #1
   2ede8:	str	r3, [r6]
   2edec:	add	r8, r8, #4
   2edf0:	ldr	r2, [sp, #8]
   2edf4:	ldr	r1, [r2, #4]!
   2edf8:	str	r2, [sp, #8]
   2edfc:	mov	r0, r3
   2ee00:	bl	517e8 <__aeabi_idivmod>
   2ee04:	cmp	r1, #0
   2ee08:	bne	2ee54 <GetDataSlab+0xde48>
   2ee0c:	mov	r3, #0
   2ee10:	str	r3, [r6], #4
   2ee14:	add	r7, r7, #4
   2ee18:	str	r7, [sp, #12]
   2ee1c:	ldr	r4, [r7]
   2ee20:	mov	r1, r4
   2ee24:	mov	r0, fp
   2ee28:	bl	517e8 <__aeabi_idivmod>
   2ee2c:	subs	r3, r1, #0
   2ee30:	beq	2edb0 <GetDataSlab+0xdda4>
   2ee34:	ldr	r2, [r7, #-4]
   2ee38:	ldr	r1, [r8]
   2ee3c:	sub	r3, r4, r3
   2ee40:	mla	r3, r1, r2, r3
   2ee44:	add	r5, r5, r3, lsl #2
   2ee48:	add	fp, fp, r3
   2ee4c:	b	2edd0 <GetDataSlab+0xddc4>
   2ee50:	ldr	r9, [sp, #28]
   2ee54:	add	r3, sp, #152	; 0x98
   2ee58:	add	r3, r3, r9, lsl #2
   2ee5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ee60:	add	fp, fp, r3
   2ee64:	add	r5, r5, r3, lsl #2
   2ee68:	ldr	r3, [sp, #16]
   2ee6c:	add	r3, r3, sl
   2ee70:	str	r3, [sp, #16]
   2ee74:	ldr	r2, [sp, #20]
   2ee78:	cmp	r3, r2
   2ee7c:	bge	2ef48 <GetDataSlab+0xdf3c>
   2ee80:	ldr	r3, [sp, #196]	; 0xc4
   2ee84:	ldr	r3, [r3]
   2ee88:	cmp	r3, #0
   2ee8c:	addne	r5, r5, r3, lsl #2
   2ee90:	addne	fp, fp, r3
   2ee94:	ldr	r3, [sp, #204]	; 0xcc
   2ee98:	ldr	sl, [r3]
   2ee9c:	cmp	sl, #0
   2eea0:	ble	2eed8 <GetDataSlab+0xdecc>
   2eea4:	mov	r1, r5
   2eea8:	ldr	r3, [sp, #4]
   2eeac:	ldr	r2, [sp, #16]
   2eeb0:	add	r2, r3, r2, lsl #2
   2eeb4:	mov	r3, #0
   2eeb8:	vldmia	r1!, {s15}
   2eebc:	vcvt.s32.f32	s15, s15
   2eec0:	vstmia	r2!, {s15}
   2eec4:	add	r3, r3, #1
   2eec8:	ldr	r0, [sp, #204]	; 0xcc
   2eecc:	ldr	sl, [r0]
   2eed0:	cmp	sl, r3
   2eed4:	bgt	2eeb8 <GetDataSlab+0xdeac>
   2eed8:	ldr	r3, [sp, #192]	; 0xc0
   2eedc:	ldr	r2, [r3]
   2eee0:	ldr	r3, [sp, #196]	; 0xc4
   2eee4:	ldr	r3, [r3]
   2eee8:	sub	r3, r2, r3
   2eeec:	add	fp, fp, r3
   2eef0:	add	r5, r5, r3, lsl #2
   2eef4:	ldr	r3, [sp, #208]	; 0xd0
   2eef8:	cmp	r3, #1
   2eefc:	ble	2ee68 <GetDataSlab+0xde5c>
   2ef00:	ldr	r3, [sp, #76]	; 0x4c
   2ef04:	add	r3, r3, #1
   2ef08:	str	r3, [sp, #76]	; 0x4c
   2ef0c:	ldr	r2, [sp, #204]	; 0xcc
   2ef10:	ldr	r1, [r2, #4]
   2ef14:	mov	r0, r3
   2ef18:	bl	517e8 <__aeabi_idivmod>
   2ef1c:	cmp	r1, #0
   2ef20:	bne	2ee50 <GetDataSlab+0xde44>
   2ef24:	add	r6, sp, #76	; 0x4c
   2ef28:	ldr	r3, [sp, #204]	; 0xcc
   2ef2c:	add	r3, r3, #4
   2ef30:	str	r3, [sp, #8]
   2ef34:	ldr	r3, [sp, #196]	; 0xc4
   2ef38:	add	r8, r3, #4
   2ef3c:	add	r7, sp, #112	; 0x70
   2ef40:	ldr	r9, [sp, #28]
   2ef44:	b	2ee0c <GetDataSlab+0xde00>
   2ef48:	mov	r3, #0
   2ef4c:	b	24fa8 <GetDataSlab+0x3f9c>
   2ef50:	ldr	r2, [r9]
   2ef54:	cmp	r2, #0
   2ef58:	beq	2ef70 <GetDataSlab+0xdf64>
   2ef5c:	ldr	r3, [sp, #16]
   2ef60:	ldr	r3, [r3, #-4]
   2ef64:	mul	r3, r3, r2
   2ef68:	add	r5, r5, r3, lsl #2
   2ef6c:	add	fp, fp, r3
   2ef70:	add	sl, sl, #1
   2ef74:	ldr	r3, [sp, #208]	; 0xd0
   2ef78:	cmp	r3, sl
   2ef7c:	beq	2f008 <GetDataSlab+0xdffc>
   2ef80:	ldr	r3, [r6]
   2ef84:	add	r3, r3, #1
   2ef88:	str	r3, [r6]
   2ef8c:	add	r9, r9, #4
   2ef90:	ldr	r2, [sp, #12]
   2ef94:	ldr	r1, [r2, #4]!
   2ef98:	str	r2, [sp, #12]
   2ef9c:	mov	r0, r3
   2efa0:	bl	517e8 <__aeabi_idivmod>
   2efa4:	cmp	r1, #0
   2efa8:	bne	2eff4 <GetDataSlab+0xdfe8>
   2efac:	mov	r3, #0
   2efb0:	str	r3, [r6], #4
   2efb4:	add	r7, r7, #4
   2efb8:	str	r7, [sp, #16]
   2efbc:	ldr	r4, [r7]
   2efc0:	mov	r1, r4
   2efc4:	mov	r0, fp
   2efc8:	bl	517e8 <__aeabi_idivmod>
   2efcc:	subs	r3, r1, #0
   2efd0:	beq	2ef50 <GetDataSlab+0xdf44>
   2efd4:	ldr	r2, [r7, #-4]
   2efd8:	ldr	r1, [r9]
   2efdc:	sub	r3, r4, r3
   2efe0:	mla	r3, r1, r2, r3
   2efe4:	add	r5, r5, r3, lsl #2
   2efe8:	add	fp, fp, r3
   2efec:	b	2ef70 <GetDataSlab+0xdf64>
   2eff0:	mov	sl, #1
   2eff4:	add	r3, sp, #152	; 0x98
   2eff8:	add	r3, r3, sl, lsl #2
   2effc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f000:	add	fp, fp, r3
   2f004:	add	r5, r5, r3, lsl #2
   2f008:	ldr	r3, [sp, #24]
   2f00c:	ldr	r2, [sp, #8]
   2f010:	add	r3, r3, r2
   2f014:	str	r3, [sp, #24]
   2f018:	ldr	r2, [sp, #20]
   2f01c:	cmp	r3, r2
   2f020:	bge	2f10c <GetDataSlab+0xe100>
   2f024:	ldr	r3, [sp, #196]	; 0xc4
   2f028:	ldr	r3, [r3]
   2f02c:	cmp	r3, #0
   2f030:	addne	r5, r5, r3, lsl #2
   2f034:	addne	fp, fp, r3
   2f038:	ldr	r3, [sp, #204]	; 0xcc
   2f03c:	ldr	r3, [r3]
   2f040:	str	r3, [sp, #8]
   2f044:	cmp	r3, #0
   2f048:	ble	2f08c <GetDataSlab+0xe080>
   2f04c:	ldr	r3, [sp, #4]
   2f050:	ldr	r2, [sp, #24]
   2f054:	add	r2, r3, r2, lsl #2
   2f058:	mov	r3, #0
   2f05c:	vldr	s15, [r5]
   2f060:	vcvt.s32.f32	s15, s15
   2f064:	vstmia	r2!, {s15}
   2f068:	ldr	r1, [r8]
   2f06c:	add	r5, r5, r1, lsl #2
   2f070:	add	fp, fp, r1
   2f074:	add	r3, r3, #1
   2f078:	ldr	r1, [sp, #204]	; 0xcc
   2f07c:	ldr	r1, [r1]
   2f080:	str	r1, [sp, #8]
   2f084:	cmp	r1, r3
   2f088:	bgt	2f05c <GetDataSlab+0xe050>
   2f08c:	ldr	r3, [r8]
   2f090:	ldr	r2, [sp, #8]
   2f094:	mul	r3, r3, r2
   2f098:	ldr	r2, [sp, #192]	; 0xc0
   2f09c:	ldr	r2, [r2]
   2f0a0:	sub	r3, r2, r3
   2f0a4:	ldr	r2, [sp, #196]	; 0xc4
   2f0a8:	ldr	r2, [r2]
   2f0ac:	sub	r3, r3, r2
   2f0b0:	add	fp, fp, r3
   2f0b4:	add	r5, r5, r3, lsl #2
   2f0b8:	ldr	r3, [sp, #208]	; 0xd0
   2f0bc:	cmp	r3, #1
   2f0c0:	ble	2f008 <GetDataSlab+0xdffc>
   2f0c4:	ldr	r3, [sp, #76]	; 0x4c
   2f0c8:	add	r3, r3, #1
   2f0cc:	str	r3, [sp, #76]	; 0x4c
   2f0d0:	ldr	r2, [sp, #204]	; 0xcc
   2f0d4:	ldr	r1, [r2, #4]
   2f0d8:	mov	r0, r3
   2f0dc:	bl	517e8 <__aeabi_idivmod>
   2f0e0:	cmp	r1, #0
   2f0e4:	bne	2eff0 <GetDataSlab+0xdfe4>
   2f0e8:	add	r6, sp, #76	; 0x4c
   2f0ec:	ldr	r3, [sp, #204]	; 0xcc
   2f0f0:	add	r3, r3, #4
   2f0f4:	str	r3, [sp, #12]
   2f0f8:	ldr	r3, [sp, #196]	; 0xc4
   2f0fc:	add	r9, r3, #4
   2f100:	add	r7, sp, #112	; 0x70
   2f104:	mov	sl, #1
   2f108:	b	2efac <GetDataSlab+0xdfa0>
   2f10c:	mov	r3, #0
   2f110:	b	24fa8 <GetDataSlab+0x3f9c>
   2f114:	ldr	r3, [r8]
   2f118:	str	r3, [sp, #28]
   2f11c:	sub	r3, r3, #1
   2f120:	str	r3, [sp, #32]
   2f124:	ldr	r3, [sp, #192]	; 0xc0
   2f128:	ldr	r3, [r3]
   2f12c:	str	r3, [sp, #112]	; 0x70
   2f130:	ldr	r3, [sp, #204]	; 0xcc
   2f134:	ldr	r3, [r3]
   2f138:	str	r3, [sp, #20]
   2f13c:	ldr	r3, [sp, #208]	; 0xd0
   2f140:	cmp	r3, #1
   2f144:	ble	2f178 <GetDataSlab+0xe16c>
   2f148:	str	r8, [sp, #16]
   2f14c:	add	sl, sp, #36	; 0x24
   2f150:	ldr	lr, [sp, #192]	; 0xc0
   2f154:	add	r9, sp, #112	; 0x70
   2f158:	ldr	r3, [sp, #204]	; 0xcc
   2f15c:	add	r5, r3, #4
   2f160:	ldr	r3, [sp, #196]	; 0xc4
   2f164:	add	r4, r3, #4
   2f168:	str	lr, [sp, #12]
   2f16c:	mov	r6, #2
   2f170:	mov	fp, #0
   2f174:	b	40018 <GetDataSlab+0x1f00c>
   2f178:	mov	fp, #0
   2f17c:	b	400a4 <GetDataSlab+0x1f098>
   2f180:	ldr	r3, [sp, #20]
   2f184:	cmp	r3, #0
   2f188:	ble	3d4b8 <GetDataSlab+0x1c4ac>
   2f18c:	mov	r3, #0
   2f190:	str	r3, [sp, #16]
   2f194:	b	2f268 <GetDataSlab+0xe25c>
   2f198:	ldr	r2, [r8]
   2f19c:	cmp	r2, #0
   2f1a0:	beq	2f1b8 <GetDataSlab+0xe1ac>
   2f1a4:	ldr	r3, [sp, #12]
   2f1a8:	ldr	r3, [r3, #-4]
   2f1ac:	mul	r3, r3, r2
   2f1b0:	add	r5, r5, r3, lsl #2
   2f1b4:	add	fp, fp, r3
   2f1b8:	add	r9, r9, #1
   2f1bc:	ldr	r3, [sp, #208]	; 0xd0
   2f1c0:	cmp	r3, r9
   2f1c4:	beq	2f250 <GetDataSlab+0xe244>
   2f1c8:	ldr	r3, [r6]
   2f1cc:	add	r3, r3, #1
   2f1d0:	str	r3, [r6]
   2f1d4:	add	r8, r8, #4
   2f1d8:	ldr	r2, [sp, #8]
   2f1dc:	ldr	r1, [r2, #4]!
   2f1e0:	str	r2, [sp, #8]
   2f1e4:	mov	r0, r3
   2f1e8:	bl	517e8 <__aeabi_idivmod>
   2f1ec:	cmp	r1, #0
   2f1f0:	bne	2f23c <GetDataSlab+0xe230>
   2f1f4:	mov	r3, #0
   2f1f8:	str	r3, [r6], #4
   2f1fc:	add	r7, r7, #4
   2f200:	str	r7, [sp, #12]
   2f204:	ldr	r4, [r7]
   2f208:	mov	r1, r4
   2f20c:	mov	r0, fp
   2f210:	bl	517e8 <__aeabi_idivmod>
   2f214:	subs	r3, r1, #0
   2f218:	beq	2f198 <GetDataSlab+0xe18c>
   2f21c:	ldr	r2, [r7, #-4]
   2f220:	ldr	r1, [r8]
   2f224:	sub	r3, r4, r3
   2f228:	mla	r3, r1, r2, r3
   2f22c:	add	r5, r5, r3, lsl #2
   2f230:	add	fp, fp, r3
   2f234:	b	2f1b8 <GetDataSlab+0xe1ac>
   2f238:	ldr	r9, [sp, #28]
   2f23c:	add	r3, sp, #152	; 0x98
   2f240:	add	r3, r3, r9, lsl #2
   2f244:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f248:	add	fp, fp, r3
   2f24c:	add	r5, r5, r3, lsl #2
   2f250:	ldr	r3, [sp, #16]
   2f254:	add	r3, r3, sl
   2f258:	str	r3, [sp, #16]
   2f25c:	ldr	r2, [sp, #20]
   2f260:	cmp	r3, r2
   2f264:	bge	2f32c <GetDataSlab+0xe320>
   2f268:	ldr	r3, [sp, #196]	; 0xc4
   2f26c:	ldr	r3, [r3]
   2f270:	cmp	r3, #0
   2f274:	addne	r5, r5, r3, lsl #2
   2f278:	addne	fp, fp, r3
   2f27c:	ldr	r3, [sp, #204]	; 0xcc
   2f280:	ldr	sl, [r3]
   2f284:	cmp	sl, #0
   2f288:	ble	2f2bc <GetDataSlab+0xe2b0>
   2f28c:	sub	r0, r5, #4
   2f290:	ldr	r3, [sp, #4]
   2f294:	ldr	r2, [sp, #16]
   2f298:	add	r1, r3, r2, lsl #2
   2f29c:	mov	r2, #0
   2f2a0:	ldr	r3, [r0, #4]!
   2f2a4:	str	r3, [r1], #4
   2f2a8:	add	r2, r2, #1
   2f2ac:	ldr	r3, [sp, #204]	; 0xcc
   2f2b0:	ldr	sl, [r3]
   2f2b4:	cmp	sl, r2
   2f2b8:	bgt	2f2a0 <GetDataSlab+0xe294>
   2f2bc:	ldr	r3, [sp, #192]	; 0xc0
   2f2c0:	ldr	r2, [r3]
   2f2c4:	ldr	r3, [sp, #196]	; 0xc4
   2f2c8:	ldr	r3, [r3]
   2f2cc:	sub	r3, r2, r3
   2f2d0:	add	fp, fp, r3
   2f2d4:	add	r5, r5, r3, lsl #2
   2f2d8:	ldr	r3, [sp, #208]	; 0xd0
   2f2dc:	cmp	r3, #1
   2f2e0:	ble	2f250 <GetDataSlab+0xe244>
   2f2e4:	ldr	r3, [sp, #76]	; 0x4c
   2f2e8:	add	r3, r3, #1
   2f2ec:	str	r3, [sp, #76]	; 0x4c
   2f2f0:	ldr	r2, [sp, #204]	; 0xcc
   2f2f4:	ldr	r1, [r2, #4]
   2f2f8:	mov	r0, r3
   2f2fc:	bl	517e8 <__aeabi_idivmod>
   2f300:	cmp	r1, #0
   2f304:	bne	2f238 <GetDataSlab+0xe22c>
   2f308:	add	r6, sp, #76	; 0x4c
   2f30c:	ldr	r3, [sp, #204]	; 0xcc
   2f310:	add	r3, r3, #4
   2f314:	str	r3, [sp, #8]
   2f318:	ldr	r3, [sp, #196]	; 0xc4
   2f31c:	add	r8, r3, #4
   2f320:	add	r7, sp, #112	; 0x70
   2f324:	ldr	r9, [sp, #28]
   2f328:	b	2f1f4 <GetDataSlab+0xe1e8>
   2f32c:	mov	r3, #0
   2f330:	b	24fa8 <GetDataSlab+0x3f9c>
   2f334:	ldr	r2, [r9]
   2f338:	cmp	r2, #0
   2f33c:	beq	2f354 <GetDataSlab+0xe348>
   2f340:	ldr	r3, [sp, #16]
   2f344:	ldr	r3, [r3, #-4]
   2f348:	mul	r3, r3, r2
   2f34c:	add	r5, r5, r3, lsl #2
   2f350:	add	fp, fp, r3
   2f354:	add	sl, sl, #1
   2f358:	ldr	r3, [sp, #208]	; 0xd0
   2f35c:	cmp	r3, sl
   2f360:	beq	2f3ec <GetDataSlab+0xe3e0>
   2f364:	ldr	r3, [r6]
   2f368:	add	r3, r3, #1
   2f36c:	str	r3, [r6]
   2f370:	add	r9, r9, #4
   2f374:	ldr	r2, [sp, #12]
   2f378:	ldr	r1, [r2, #4]!
   2f37c:	str	r2, [sp, #12]
   2f380:	mov	r0, r3
   2f384:	bl	517e8 <__aeabi_idivmod>
   2f388:	cmp	r1, #0
   2f38c:	bne	2f3d8 <GetDataSlab+0xe3cc>
   2f390:	mov	r3, #0
   2f394:	str	r3, [r6], #4
   2f398:	add	r7, r7, #4
   2f39c:	str	r7, [sp, #16]
   2f3a0:	ldr	r4, [r7]
   2f3a4:	mov	r1, r4
   2f3a8:	mov	r0, fp
   2f3ac:	bl	517e8 <__aeabi_idivmod>
   2f3b0:	subs	r3, r1, #0
   2f3b4:	beq	2f334 <GetDataSlab+0xe328>
   2f3b8:	ldr	r2, [r7, #-4]
   2f3bc:	ldr	r1, [r9]
   2f3c0:	sub	r3, r4, r3
   2f3c4:	mla	r3, r1, r2, r3
   2f3c8:	add	r5, r5, r3, lsl #2
   2f3cc:	add	fp, fp, r3
   2f3d0:	b	2f354 <GetDataSlab+0xe348>
   2f3d4:	mov	sl, #1
   2f3d8:	add	r3, sp, #152	; 0x98
   2f3dc:	add	r3, r3, sl, lsl #2
   2f3e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f3e4:	add	fp, fp, r3
   2f3e8:	add	r5, r5, r3, lsl #2
   2f3ec:	ldr	r3, [sp, #24]
   2f3f0:	ldr	r2, [sp, #8]
   2f3f4:	add	r3, r3, r2
   2f3f8:	str	r3, [sp, #24]
   2f3fc:	ldr	r2, [sp, #20]
   2f400:	cmp	r3, r2
   2f404:	bge	2f4ec <GetDataSlab+0xe4e0>
   2f408:	ldr	r3, [sp, #196]	; 0xc4
   2f40c:	ldr	r3, [r3]
   2f410:	cmp	r3, #0
   2f414:	addne	r5, r5, r3, lsl #2
   2f418:	addne	fp, fp, r3
   2f41c:	ldr	r3, [sp, #204]	; 0xcc
   2f420:	ldr	r3, [r3]
   2f424:	str	r3, [sp, #8]
   2f428:	cmp	r3, #0
   2f42c:	ble	2f46c <GetDataSlab+0xe460>
   2f430:	ldr	r3, [sp, #4]
   2f434:	ldr	r2, [sp, #24]
   2f438:	add	r2, r3, r2, lsl #2
   2f43c:	mov	r3, #0
   2f440:	ldr	r1, [r5]
   2f444:	str	r1, [r2], #4
   2f448:	ldr	r1, [r8]
   2f44c:	add	r5, r5, r1, lsl #2
   2f450:	add	fp, fp, r1
   2f454:	add	r3, r3, #1
   2f458:	ldr	r1, [sp, #204]	; 0xcc
   2f45c:	ldr	r1, [r1]
   2f460:	str	r1, [sp, #8]
   2f464:	cmp	r1, r3
   2f468:	bgt	2f440 <GetDataSlab+0xe434>
   2f46c:	ldr	r3, [r8]
   2f470:	ldr	r2, [sp, #8]
   2f474:	mul	r3, r3, r2
   2f478:	ldr	r2, [sp, #192]	; 0xc0
   2f47c:	ldr	r2, [r2]
   2f480:	sub	r3, r2, r3
   2f484:	ldr	r2, [sp, #196]	; 0xc4
   2f488:	ldr	r2, [r2]
   2f48c:	sub	r3, r3, r2
   2f490:	add	fp, fp, r3
   2f494:	add	r5, r5, r3, lsl #2
   2f498:	ldr	r3, [sp, #208]	; 0xd0
   2f49c:	cmp	r3, #1
   2f4a0:	ble	2f3ec <GetDataSlab+0xe3e0>
   2f4a4:	ldr	r3, [sp, #76]	; 0x4c
   2f4a8:	add	r3, r3, #1
   2f4ac:	str	r3, [sp, #76]	; 0x4c
   2f4b0:	ldr	r2, [sp, #204]	; 0xcc
   2f4b4:	ldr	r1, [r2, #4]
   2f4b8:	mov	r0, r3
   2f4bc:	bl	517e8 <__aeabi_idivmod>
   2f4c0:	cmp	r1, #0
   2f4c4:	bne	2f3d4 <GetDataSlab+0xe3c8>
   2f4c8:	add	r6, sp, #76	; 0x4c
   2f4cc:	ldr	r3, [sp, #204]	; 0xcc
   2f4d0:	add	r3, r3, #4
   2f4d4:	str	r3, [sp, #12]
   2f4d8:	ldr	r3, [sp, #196]	; 0xc4
   2f4dc:	add	r9, r3, #4
   2f4e0:	add	r7, sp, #112	; 0x70
   2f4e4:	mov	sl, #1
   2f4e8:	b	2f390 <GetDataSlab+0xe384>
   2f4ec:	mov	r3, #0
   2f4f0:	b	24fa8 <GetDataSlab+0x3f9c>
   2f4f4:	ldr	r3, [r8]
   2f4f8:	str	r3, [sp, #28]
   2f4fc:	sub	r3, r3, #1
   2f500:	str	r3, [sp, #32]
   2f504:	ldr	r3, [sp, #192]	; 0xc0
   2f508:	ldr	r3, [r3]
   2f50c:	str	r3, [sp, #112]	; 0x70
   2f510:	ldr	r3, [sp, #204]	; 0xcc
   2f514:	ldr	r3, [r3]
   2f518:	str	r3, [sp, #20]
   2f51c:	ldr	r3, [sp, #208]	; 0xd0
   2f520:	cmp	r3, #1
   2f524:	ble	2f558 <GetDataSlab+0xe54c>
   2f528:	str	r8, [sp, #16]
   2f52c:	add	sl, sp, #36	; 0x24
   2f530:	ldr	lr, [sp, #192]	; 0xc0
   2f534:	add	r9, sp, #112	; 0x70
   2f538:	ldr	r3, [sp, #204]	; 0xcc
   2f53c:	add	r5, r3, #4
   2f540:	ldr	r3, [sp, #196]	; 0xc4
   2f544:	add	r4, r3, #4
   2f548:	str	lr, [sp, #12]
   2f54c:	mov	r6, #2
   2f550:	mov	fp, #0
   2f554:	b	40104 <GetDataSlab+0x1f0f8>
   2f558:	mov	fp, #0
   2f55c:	b	40190 <GetDataSlab+0x1f184>
   2f560:	ldr	r3, [sp, #20]
   2f564:	cmp	r3, #0
   2f568:	ble	3d4c0 <GetDataSlab+0x1c4b4>
   2f56c:	mov	r3, #0
   2f570:	str	r3, [sp, #16]
   2f574:	b	2f648 <GetDataSlab+0xe63c>
   2f578:	ldr	r2, [r8]
   2f57c:	cmp	r2, #0
   2f580:	beq	2f598 <GetDataSlab+0xe58c>
   2f584:	ldr	r3, [sp, #12]
   2f588:	ldr	r3, [r3, #-4]
   2f58c:	mul	r3, r3, r2
   2f590:	add	r5, r5, r3, lsl #2
   2f594:	add	fp, fp, r3
   2f598:	add	r9, r9, #1
   2f59c:	ldr	r3, [sp, #208]	; 0xd0
   2f5a0:	cmp	r3, r9
   2f5a4:	beq	2f630 <GetDataSlab+0xe624>
   2f5a8:	ldr	r3, [r6]
   2f5ac:	add	r3, r3, #1
   2f5b0:	str	r3, [r6]
   2f5b4:	add	r8, r8, #4
   2f5b8:	ldr	r2, [sp, #8]
   2f5bc:	ldr	r1, [r2, #4]!
   2f5c0:	str	r2, [sp, #8]
   2f5c4:	mov	r0, r3
   2f5c8:	bl	517e8 <__aeabi_idivmod>
   2f5cc:	cmp	r1, #0
   2f5d0:	bne	2f61c <GetDataSlab+0xe610>
   2f5d4:	mov	r3, #0
   2f5d8:	str	r3, [r6], #4
   2f5dc:	add	r7, r7, #4
   2f5e0:	str	r7, [sp, #12]
   2f5e4:	ldr	r4, [r7]
   2f5e8:	mov	r1, r4
   2f5ec:	mov	r0, fp
   2f5f0:	bl	517e8 <__aeabi_idivmod>
   2f5f4:	subs	r3, r1, #0
   2f5f8:	beq	2f578 <GetDataSlab+0xe56c>
   2f5fc:	ldr	r2, [r7, #-4]
   2f600:	ldr	r1, [r8]
   2f604:	sub	r3, r4, r3
   2f608:	mla	r3, r1, r2, r3
   2f60c:	add	r5, r5, r3, lsl #2
   2f610:	add	fp, fp, r3
   2f614:	b	2f598 <GetDataSlab+0xe58c>
   2f618:	ldr	r9, [sp, #28]
   2f61c:	add	r3, sp, #152	; 0x98
   2f620:	add	r3, r3, r9, lsl #2
   2f624:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f628:	add	fp, fp, r3
   2f62c:	add	r5, r5, r3, lsl #2
   2f630:	ldr	r3, [sp, #16]
   2f634:	add	r3, r3, sl
   2f638:	str	r3, [sp, #16]
   2f63c:	ldr	r2, [sp, #20]
   2f640:	cmp	r3, r2
   2f644:	bge	2f70c <GetDataSlab+0xe700>
   2f648:	ldr	r3, [sp, #196]	; 0xc4
   2f64c:	ldr	r3, [r3]
   2f650:	cmp	r3, #0
   2f654:	addne	r5, r5, r3, lsl #2
   2f658:	addne	fp, fp, r3
   2f65c:	ldr	r3, [sp, #204]	; 0xcc
   2f660:	ldr	sl, [r3]
   2f664:	cmp	sl, #0
   2f668:	ble	2f69c <GetDataSlab+0xe690>
   2f66c:	sub	r0, r5, #4
   2f670:	ldr	r3, [sp, #4]
   2f674:	ldr	r2, [sp, #16]
   2f678:	add	r1, r3, r2, lsl #2
   2f67c:	mov	r2, #0
   2f680:	ldr	r3, [r0, #4]!
   2f684:	str	r3, [r1], #4
   2f688:	add	r2, r2, #1
   2f68c:	ldr	r3, [sp, #204]	; 0xcc
   2f690:	ldr	sl, [r3]
   2f694:	cmp	sl, r2
   2f698:	bgt	2f680 <GetDataSlab+0xe674>
   2f69c:	ldr	r3, [sp, #192]	; 0xc0
   2f6a0:	ldr	r2, [r3]
   2f6a4:	ldr	r3, [sp, #196]	; 0xc4
   2f6a8:	ldr	r3, [r3]
   2f6ac:	sub	r3, r2, r3
   2f6b0:	add	fp, fp, r3
   2f6b4:	add	r5, r5, r3, lsl #2
   2f6b8:	ldr	r3, [sp, #208]	; 0xd0
   2f6bc:	cmp	r3, #1
   2f6c0:	ble	2f630 <GetDataSlab+0xe624>
   2f6c4:	ldr	r3, [sp, #76]	; 0x4c
   2f6c8:	add	r3, r3, #1
   2f6cc:	str	r3, [sp, #76]	; 0x4c
   2f6d0:	ldr	r2, [sp, #204]	; 0xcc
   2f6d4:	ldr	r1, [r2, #4]
   2f6d8:	mov	r0, r3
   2f6dc:	bl	517e8 <__aeabi_idivmod>
   2f6e0:	cmp	r1, #0
   2f6e4:	bne	2f618 <GetDataSlab+0xe60c>
   2f6e8:	add	r6, sp, #76	; 0x4c
   2f6ec:	ldr	r3, [sp, #204]	; 0xcc
   2f6f0:	add	r3, r3, #4
   2f6f4:	str	r3, [sp, #8]
   2f6f8:	ldr	r3, [sp, #196]	; 0xc4
   2f6fc:	add	r8, r3, #4
   2f700:	add	r7, sp, #112	; 0x70
   2f704:	ldr	r9, [sp, #28]
   2f708:	b	2f5d4 <GetDataSlab+0xe5c8>
   2f70c:	mov	r3, #0
   2f710:	b	24fa8 <GetDataSlab+0x3f9c>
   2f714:	ldr	r2, [r9]
   2f718:	cmp	r2, #0
   2f71c:	beq	2f734 <GetDataSlab+0xe728>
   2f720:	ldr	r3, [sp, #16]
   2f724:	ldr	r3, [r3, #-4]
   2f728:	mul	r3, r3, r2
   2f72c:	add	r5, r5, r3, lsl #2
   2f730:	add	fp, fp, r3
   2f734:	add	sl, sl, #1
   2f738:	ldr	r3, [sp, #208]	; 0xd0
   2f73c:	cmp	r3, sl
   2f740:	beq	2f7cc <GetDataSlab+0xe7c0>
   2f744:	ldr	r3, [r6]
   2f748:	add	r3, r3, #1
   2f74c:	str	r3, [r6]
   2f750:	add	r9, r9, #4
   2f754:	ldr	r2, [sp, #12]
   2f758:	ldr	r1, [r2, #4]!
   2f75c:	str	r2, [sp, #12]
   2f760:	mov	r0, r3
   2f764:	bl	517e8 <__aeabi_idivmod>
   2f768:	cmp	r1, #0
   2f76c:	bne	2f7b8 <GetDataSlab+0xe7ac>
   2f770:	mov	r3, #0
   2f774:	str	r3, [r6], #4
   2f778:	add	r7, r7, #4
   2f77c:	str	r7, [sp, #16]
   2f780:	ldr	r4, [r7]
   2f784:	mov	r1, r4
   2f788:	mov	r0, fp
   2f78c:	bl	517e8 <__aeabi_idivmod>
   2f790:	subs	r3, r1, #0
   2f794:	beq	2f714 <GetDataSlab+0xe708>
   2f798:	ldr	r2, [r7, #-4]
   2f79c:	ldr	r1, [r9]
   2f7a0:	sub	r3, r4, r3
   2f7a4:	mla	r3, r1, r2, r3
   2f7a8:	add	r5, r5, r3, lsl #2
   2f7ac:	add	fp, fp, r3
   2f7b0:	b	2f734 <GetDataSlab+0xe728>
   2f7b4:	mov	sl, #1
   2f7b8:	add	r3, sp, #152	; 0x98
   2f7bc:	add	r3, r3, sl, lsl #2
   2f7c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f7c4:	add	fp, fp, r3
   2f7c8:	add	r5, r5, r3, lsl #2
   2f7cc:	ldr	r3, [sp, #24]
   2f7d0:	ldr	r2, [sp, #8]
   2f7d4:	add	r3, r3, r2
   2f7d8:	str	r3, [sp, #24]
   2f7dc:	ldr	r2, [sp, #20]
   2f7e0:	cmp	r3, r2
   2f7e4:	bge	2f8cc <GetDataSlab+0xe8c0>
   2f7e8:	ldr	r3, [sp, #196]	; 0xc4
   2f7ec:	ldr	r3, [r3]
   2f7f0:	cmp	r3, #0
   2f7f4:	addne	r5, r5, r3, lsl #2
   2f7f8:	addne	fp, fp, r3
   2f7fc:	ldr	r3, [sp, #204]	; 0xcc
   2f800:	ldr	r3, [r3]
   2f804:	str	r3, [sp, #8]
   2f808:	cmp	r3, #0
   2f80c:	ble	2f84c <GetDataSlab+0xe840>
   2f810:	ldr	r3, [sp, #4]
   2f814:	ldr	r2, [sp, #24]
   2f818:	add	r2, r3, r2, lsl #2
   2f81c:	mov	r3, #0
   2f820:	ldr	r1, [r5]
   2f824:	str	r1, [r2], #4
   2f828:	ldr	r1, [r8]
   2f82c:	add	r5, r5, r1, lsl #2
   2f830:	add	fp, fp, r1
   2f834:	add	r3, r3, #1
   2f838:	ldr	r1, [sp, #204]	; 0xcc
   2f83c:	ldr	r1, [r1]
   2f840:	str	r1, [sp, #8]
   2f844:	cmp	r1, r3
   2f848:	bgt	2f820 <GetDataSlab+0xe814>
   2f84c:	ldr	r3, [r8]
   2f850:	ldr	r2, [sp, #8]
   2f854:	mul	r3, r3, r2
   2f858:	ldr	r2, [sp, #192]	; 0xc0
   2f85c:	ldr	r2, [r2]
   2f860:	sub	r3, r2, r3
   2f864:	ldr	r2, [sp, #196]	; 0xc4
   2f868:	ldr	r2, [r2]
   2f86c:	sub	r3, r3, r2
   2f870:	add	fp, fp, r3
   2f874:	add	r5, r5, r3, lsl #2
   2f878:	ldr	r3, [sp, #208]	; 0xd0
   2f87c:	cmp	r3, #1
   2f880:	ble	2f7cc <GetDataSlab+0xe7c0>
   2f884:	ldr	r3, [sp, #76]	; 0x4c
   2f888:	add	r3, r3, #1
   2f88c:	str	r3, [sp, #76]	; 0x4c
   2f890:	ldr	r2, [sp, #204]	; 0xcc
   2f894:	ldr	r1, [r2, #4]
   2f898:	mov	r0, r3
   2f89c:	bl	517e8 <__aeabi_idivmod>
   2f8a0:	cmp	r1, #0
   2f8a4:	bne	2f7b4 <GetDataSlab+0xe7a8>
   2f8a8:	add	r6, sp, #76	; 0x4c
   2f8ac:	ldr	r3, [sp, #204]	; 0xcc
   2f8b0:	add	r3, r3, #4
   2f8b4:	str	r3, [sp, #12]
   2f8b8:	ldr	r3, [sp, #196]	; 0xc4
   2f8bc:	add	r9, r3, #4
   2f8c0:	add	r7, sp, #112	; 0x70
   2f8c4:	mov	sl, #1
   2f8c8:	b	2f770 <GetDataSlab+0xe764>
   2f8cc:	mov	r3, #0
   2f8d0:	b	24fa8 <GetDataSlab+0x3f9c>
   2f8d4:	ldr	r3, [r8]
   2f8d8:	str	r3, [sp, #28]
   2f8dc:	sub	r3, r3, #1
   2f8e0:	str	r3, [sp, #32]
   2f8e4:	ldr	r3, [sp, #192]	; 0xc0
   2f8e8:	ldr	r3, [r3]
   2f8ec:	str	r3, [sp, #112]	; 0x70
   2f8f0:	ldr	r3, [sp, #204]	; 0xcc
   2f8f4:	ldr	r3, [r3]
   2f8f8:	str	r3, [sp, #20]
   2f8fc:	ldr	r3, [sp, #208]	; 0xd0
   2f900:	cmp	r3, #1
   2f904:	ble	2f938 <GetDataSlab+0xe92c>
   2f908:	str	r8, [sp, #16]
   2f90c:	add	sl, sp, #36	; 0x24
   2f910:	ldr	lr, [sp, #192]	; 0xc0
   2f914:	add	r9, sp, #112	; 0x70
   2f918:	ldr	r3, [sp, #204]	; 0xcc
   2f91c:	add	r5, r3, #4
   2f920:	ldr	r3, [sp, #196]	; 0xc4
   2f924:	add	r4, r3, #4
   2f928:	str	lr, [sp, #12]
   2f92c:	mov	r6, #2
   2f930:	mov	fp, #0
   2f934:	b	401f0 <GetDataSlab+0x1f1e4>
   2f938:	mov	fp, #0
   2f93c:	b	4027c <GetDataSlab+0x1f270>
   2f940:	ldr	r3, [sp, #20]
   2f944:	cmp	r3, #0
   2f948:	ble	3d4c8 <GetDataSlab+0x1c4bc>
   2f94c:	mov	r3, #0
   2f950:	str	r3, [sp, #16]
   2f954:	b	2fa28 <GetDataSlab+0xea1c>
   2f958:	ldr	r2, [r8]
   2f95c:	cmp	r2, #0
   2f960:	beq	2f978 <GetDataSlab+0xe96c>
   2f964:	ldr	r3, [sp, #12]
   2f968:	ldr	r3, [r3, #-4]
   2f96c:	mul	r3, r3, r2
   2f970:	add	r6, r6, r3, lsl #1
   2f974:	add	fp, fp, r3
   2f978:	add	r9, r9, #1
   2f97c:	ldr	r3, [sp, #208]	; 0xd0
   2f980:	cmp	r3, r9
   2f984:	beq	2fa10 <GetDataSlab+0xea04>
   2f988:	ldr	r3, [r5]
   2f98c:	add	r3, r3, #1
   2f990:	str	r3, [r5]
   2f994:	add	r8, r8, #4
   2f998:	ldr	r2, [sp, #8]
   2f99c:	ldr	r1, [r2, #4]!
   2f9a0:	str	r2, [sp, #8]
   2f9a4:	mov	r0, r3
   2f9a8:	bl	517e8 <__aeabi_idivmod>
   2f9ac:	cmp	r1, #0
   2f9b0:	bne	2f9fc <GetDataSlab+0xe9f0>
   2f9b4:	mov	r3, #0
   2f9b8:	str	r3, [r5], #4
   2f9bc:	add	r7, r7, #4
   2f9c0:	str	r7, [sp, #12]
   2f9c4:	ldr	r4, [r7]
   2f9c8:	mov	r1, r4
   2f9cc:	mov	r0, fp
   2f9d0:	bl	517e8 <__aeabi_idivmod>
   2f9d4:	subs	r3, r1, #0
   2f9d8:	beq	2f958 <GetDataSlab+0xe94c>
   2f9dc:	ldr	r2, [r7, #-4]
   2f9e0:	ldr	r1, [r8]
   2f9e4:	sub	r3, r4, r3
   2f9e8:	mla	r3, r1, r2, r3
   2f9ec:	add	r6, r6, r3, lsl #1
   2f9f0:	add	fp, fp, r3
   2f9f4:	b	2f978 <GetDataSlab+0xe96c>
   2f9f8:	ldr	r9, [sp, #28]
   2f9fc:	add	r3, sp, #152	; 0x98
   2fa00:	add	r3, r3, r9, lsl #2
   2fa04:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fa08:	add	fp, fp, r3
   2fa0c:	add	r6, r6, r3, lsl #1
   2fa10:	ldr	r3, [sp, #16]
   2fa14:	add	r3, r3, sl
   2fa18:	str	r3, [sp, #16]
   2fa1c:	ldr	r2, [sp, #20]
   2fa20:	cmp	r3, r2
   2fa24:	bge	2faec <GetDataSlab+0xeae0>
   2fa28:	ldr	r3, [sp, #196]	; 0xc4
   2fa2c:	ldr	r3, [r3]
   2fa30:	cmp	r3, #0
   2fa34:	addne	r6, r6, r3, lsl #1
   2fa38:	addne	fp, fp, r3
   2fa3c:	ldr	r3, [sp, #204]	; 0xcc
   2fa40:	ldr	sl, [r3]
   2fa44:	cmp	sl, #0
   2fa48:	ble	2fa7c <GetDataSlab+0xea70>
   2fa4c:	sub	r0, r6, #2
   2fa50:	ldr	r3, [sp, #4]
   2fa54:	ldr	r2, [sp, #16]
   2fa58:	add	r1, r3, r2, lsl #2
   2fa5c:	mov	r2, #0
   2fa60:	ldrsh	r3, [r0, #2]!
   2fa64:	str	r3, [r1], #4
   2fa68:	add	r2, r2, #1
   2fa6c:	ldr	r3, [sp, #204]	; 0xcc
   2fa70:	ldr	sl, [r3]
   2fa74:	cmp	sl, r2
   2fa78:	bgt	2fa60 <GetDataSlab+0xea54>
   2fa7c:	ldr	r3, [sp, #192]	; 0xc0
   2fa80:	ldr	r2, [r3]
   2fa84:	ldr	r3, [sp, #196]	; 0xc4
   2fa88:	ldr	r3, [r3]
   2fa8c:	sub	r3, r2, r3
   2fa90:	add	fp, fp, r3
   2fa94:	add	r6, r6, r3, lsl #1
   2fa98:	ldr	r3, [sp, #208]	; 0xd0
   2fa9c:	cmp	r3, #1
   2faa0:	ble	2fa10 <GetDataSlab+0xea04>
   2faa4:	ldr	r3, [sp, #76]	; 0x4c
   2faa8:	add	r3, r3, #1
   2faac:	str	r3, [sp, #76]	; 0x4c
   2fab0:	ldr	r2, [sp, #204]	; 0xcc
   2fab4:	ldr	r1, [r2, #4]
   2fab8:	mov	r0, r3
   2fabc:	bl	517e8 <__aeabi_idivmod>
   2fac0:	cmp	r1, #0
   2fac4:	bne	2f9f8 <GetDataSlab+0xe9ec>
   2fac8:	add	r5, sp, #76	; 0x4c
   2facc:	ldr	r3, [sp, #204]	; 0xcc
   2fad0:	add	r3, r3, #4
   2fad4:	str	r3, [sp, #8]
   2fad8:	ldr	r3, [sp, #196]	; 0xc4
   2fadc:	add	r8, r3, #4
   2fae0:	add	r7, sp, #112	; 0x70
   2fae4:	ldr	r9, [sp, #28]
   2fae8:	b	2f9b4 <GetDataSlab+0xe9a8>
   2faec:	mov	r3, #0
   2faf0:	b	24fa8 <GetDataSlab+0x3f9c>
   2faf4:	ldr	r2, [r9]
   2faf8:	cmp	r2, #0
   2fafc:	beq	2fb14 <GetDataSlab+0xeb08>
   2fb00:	ldr	r3, [sp, #16]
   2fb04:	ldr	r3, [r3, #-4]
   2fb08:	mul	r3, r3, r2
   2fb0c:	add	r6, r6, r3, lsl #1
   2fb10:	add	fp, fp, r3
   2fb14:	add	sl, sl, #1
   2fb18:	ldr	r3, [sp, #208]	; 0xd0
   2fb1c:	cmp	r3, sl
   2fb20:	beq	2fbac <GetDataSlab+0xeba0>
   2fb24:	ldr	r3, [r5]
   2fb28:	add	r3, r3, #1
   2fb2c:	str	r3, [r5]
   2fb30:	add	r9, r9, #4
   2fb34:	ldr	r2, [sp, #12]
   2fb38:	ldr	r1, [r2, #4]!
   2fb3c:	str	r2, [sp, #12]
   2fb40:	mov	r0, r3
   2fb44:	bl	517e8 <__aeabi_idivmod>
   2fb48:	cmp	r1, #0
   2fb4c:	bne	2fb98 <GetDataSlab+0xeb8c>
   2fb50:	mov	r3, #0
   2fb54:	str	r3, [r5], #4
   2fb58:	add	r7, r7, #4
   2fb5c:	str	r7, [sp, #16]
   2fb60:	ldr	r4, [r7]
   2fb64:	mov	r1, r4
   2fb68:	mov	r0, fp
   2fb6c:	bl	517e8 <__aeabi_idivmod>
   2fb70:	subs	r3, r1, #0
   2fb74:	beq	2faf4 <GetDataSlab+0xeae8>
   2fb78:	ldr	r2, [r7, #-4]
   2fb7c:	ldr	r1, [r9]
   2fb80:	sub	r3, r4, r3
   2fb84:	mla	r3, r1, r2, r3
   2fb88:	add	r6, r6, r3, lsl #1
   2fb8c:	add	fp, fp, r3
   2fb90:	b	2fb14 <GetDataSlab+0xeb08>
   2fb94:	mov	sl, #1
   2fb98:	add	r3, sp, #152	; 0x98
   2fb9c:	add	r3, r3, sl, lsl #2
   2fba0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fba4:	add	fp, fp, r3
   2fba8:	add	r6, r6, r3, lsl #1
   2fbac:	ldr	r3, [sp, #24]
   2fbb0:	ldr	r2, [sp, #8]
   2fbb4:	add	r3, r3, r2
   2fbb8:	str	r3, [sp, #24]
   2fbbc:	ldr	r2, [sp, #20]
   2fbc0:	cmp	r3, r2
   2fbc4:	bge	2fcac <GetDataSlab+0xeca0>
   2fbc8:	ldr	r3, [sp, #196]	; 0xc4
   2fbcc:	ldr	r3, [r3]
   2fbd0:	cmp	r3, #0
   2fbd4:	addne	r6, r6, r3, lsl #1
   2fbd8:	addne	fp, fp, r3
   2fbdc:	ldr	r3, [sp, #204]	; 0xcc
   2fbe0:	ldr	r3, [r3]
   2fbe4:	str	r3, [sp, #8]
   2fbe8:	cmp	r3, #0
   2fbec:	ble	2fc2c <GetDataSlab+0xec20>
   2fbf0:	ldr	r3, [sp, #4]
   2fbf4:	ldr	r2, [sp, #24]
   2fbf8:	add	r2, r3, r2, lsl #2
   2fbfc:	mov	r3, #0
   2fc00:	ldrsh	r1, [r6]
   2fc04:	str	r1, [r2], #4
   2fc08:	ldr	r1, [r8]
   2fc0c:	add	r6, r6, r1, lsl #1
   2fc10:	add	fp, fp, r1
   2fc14:	add	r3, r3, #1
   2fc18:	ldr	r1, [sp, #204]	; 0xcc
   2fc1c:	ldr	r1, [r1]
   2fc20:	str	r1, [sp, #8]
   2fc24:	cmp	r1, r3
   2fc28:	bgt	2fc00 <GetDataSlab+0xebf4>
   2fc2c:	ldr	r3, [r8]
   2fc30:	ldr	r2, [sp, #8]
   2fc34:	mul	r3, r3, r2
   2fc38:	ldr	r2, [sp, #192]	; 0xc0
   2fc3c:	ldr	r2, [r2]
   2fc40:	sub	r3, r2, r3
   2fc44:	ldr	r2, [sp, #196]	; 0xc4
   2fc48:	ldr	r2, [r2]
   2fc4c:	sub	r3, r3, r2
   2fc50:	add	fp, fp, r3
   2fc54:	add	r6, r6, r3, lsl #1
   2fc58:	ldr	r3, [sp, #208]	; 0xd0
   2fc5c:	cmp	r3, #1
   2fc60:	ble	2fbac <GetDataSlab+0xeba0>
   2fc64:	ldr	r3, [sp, #76]	; 0x4c
   2fc68:	add	r3, r3, #1
   2fc6c:	str	r3, [sp, #76]	; 0x4c
   2fc70:	ldr	r2, [sp, #204]	; 0xcc
   2fc74:	ldr	r1, [r2, #4]
   2fc78:	mov	r0, r3
   2fc7c:	bl	517e8 <__aeabi_idivmod>
   2fc80:	cmp	r1, #0
   2fc84:	bne	2fb94 <GetDataSlab+0xeb88>
   2fc88:	add	r5, sp, #76	; 0x4c
   2fc8c:	ldr	r3, [sp, #204]	; 0xcc
   2fc90:	add	r3, r3, #4
   2fc94:	str	r3, [sp, #12]
   2fc98:	ldr	r3, [sp, #196]	; 0xc4
   2fc9c:	add	r9, r3, #4
   2fca0:	add	r7, sp, #112	; 0x70
   2fca4:	mov	sl, #1
   2fca8:	b	2fb50 <GetDataSlab+0xeb44>
   2fcac:	mov	r3, #0
   2fcb0:	b	24fa8 <GetDataSlab+0x3f9c>
   2fcb4:	ldr	r3, [r8]
   2fcb8:	str	r3, [sp, #28]
   2fcbc:	sub	r3, r3, #1
   2fcc0:	str	r3, [sp, #32]
   2fcc4:	ldr	r3, [sp, #192]	; 0xc0
   2fcc8:	ldr	r3, [r3]
   2fccc:	str	r3, [sp, #112]	; 0x70
   2fcd0:	ldr	r3, [sp, #204]	; 0xcc
   2fcd4:	ldr	r3, [r3]
   2fcd8:	str	r3, [sp, #20]
   2fcdc:	ldr	r3, [sp, #208]	; 0xd0
   2fce0:	cmp	r3, #1
   2fce4:	ble	2fd18 <GetDataSlab+0xed0c>
   2fce8:	str	r8, [sp, #16]
   2fcec:	add	sl, sp, #36	; 0x24
   2fcf0:	ldr	lr, [sp, #192]	; 0xc0
   2fcf4:	add	r9, sp, #112	; 0x70
   2fcf8:	ldr	r3, [sp, #204]	; 0xcc
   2fcfc:	add	r5, r3, #4
   2fd00:	ldr	r3, [sp, #196]	; 0xc4
   2fd04:	add	r4, r3, #4
   2fd08:	str	lr, [sp, #12]
   2fd0c:	mov	r6, #2
   2fd10:	mov	fp, #0
   2fd14:	b	402dc <GetDataSlab+0x1f2d0>
   2fd18:	mov	fp, #0
   2fd1c:	b	40368 <GetDataSlab+0x1f35c>
   2fd20:	ldr	r3, [sp, #20]
   2fd24:	cmp	r3, #0
   2fd28:	ble	3d4d0 <GetDataSlab+0x1c4c4>
   2fd2c:	mov	r3, #0
   2fd30:	str	r3, [sp, #16]
   2fd34:	b	2fe08 <GetDataSlab+0xedfc>
   2fd38:	ldr	r2, [r8]
   2fd3c:	cmp	r2, #0
   2fd40:	beq	2fd58 <GetDataSlab+0xed4c>
   2fd44:	ldr	r3, [sp, #12]
   2fd48:	ldr	r3, [r3, #-4]
   2fd4c:	mul	r3, r3, r2
   2fd50:	add	r6, r6, r3, lsl #1
   2fd54:	add	fp, fp, r3
   2fd58:	add	r9, r9, #1
   2fd5c:	ldr	r3, [sp, #208]	; 0xd0
   2fd60:	cmp	r3, r9
   2fd64:	beq	2fdf0 <GetDataSlab+0xede4>
   2fd68:	ldr	r3, [r5]
   2fd6c:	add	r3, r3, #1
   2fd70:	str	r3, [r5]
   2fd74:	add	r8, r8, #4
   2fd78:	ldr	r2, [sp, #8]
   2fd7c:	ldr	r1, [r2, #4]!
   2fd80:	str	r2, [sp, #8]
   2fd84:	mov	r0, r3
   2fd88:	bl	517e8 <__aeabi_idivmod>
   2fd8c:	cmp	r1, #0
   2fd90:	bne	2fddc <GetDataSlab+0xedd0>
   2fd94:	mov	r3, #0
   2fd98:	str	r3, [r5], #4
   2fd9c:	add	r7, r7, #4
   2fda0:	str	r7, [sp, #12]
   2fda4:	ldr	r4, [r7]
   2fda8:	mov	r1, r4
   2fdac:	mov	r0, fp
   2fdb0:	bl	517e8 <__aeabi_idivmod>
   2fdb4:	subs	r3, r1, #0
   2fdb8:	beq	2fd38 <GetDataSlab+0xed2c>
   2fdbc:	ldr	r2, [r7, #-4]
   2fdc0:	ldr	r1, [r8]
   2fdc4:	sub	r3, r4, r3
   2fdc8:	mla	r3, r1, r2, r3
   2fdcc:	add	r6, r6, r3, lsl #1
   2fdd0:	add	fp, fp, r3
   2fdd4:	b	2fd58 <GetDataSlab+0xed4c>
   2fdd8:	ldr	r9, [sp, #28]
   2fddc:	add	r3, sp, #152	; 0x98
   2fde0:	add	r3, r3, r9, lsl #2
   2fde4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fde8:	add	fp, fp, r3
   2fdec:	add	r6, r6, r3, lsl #1
   2fdf0:	ldr	r3, [sp, #16]
   2fdf4:	add	r3, r3, sl
   2fdf8:	str	r3, [sp, #16]
   2fdfc:	ldr	r2, [sp, #20]
   2fe00:	cmp	r3, r2
   2fe04:	bge	2fecc <GetDataSlab+0xeec0>
   2fe08:	ldr	r3, [sp, #196]	; 0xc4
   2fe0c:	ldr	r3, [r3]
   2fe10:	cmp	r3, #0
   2fe14:	addne	r6, r6, r3, lsl #1
   2fe18:	addne	fp, fp, r3
   2fe1c:	ldr	r3, [sp, #204]	; 0xcc
   2fe20:	ldr	sl, [r3]
   2fe24:	cmp	sl, #0
   2fe28:	ble	2fe5c <GetDataSlab+0xee50>
   2fe2c:	sub	r0, r6, #2
   2fe30:	ldr	r3, [sp, #4]
   2fe34:	ldr	r2, [sp, #16]
   2fe38:	add	r1, r3, r2, lsl #2
   2fe3c:	mov	r2, #0
   2fe40:	ldrh	r3, [r0, #2]!
   2fe44:	str	r3, [r1], #4
   2fe48:	add	r2, r2, #1
   2fe4c:	ldr	r3, [sp, #204]	; 0xcc
   2fe50:	ldr	sl, [r3]
   2fe54:	cmp	sl, r2
   2fe58:	bgt	2fe40 <GetDataSlab+0xee34>
   2fe5c:	ldr	r3, [sp, #192]	; 0xc0
   2fe60:	ldr	r2, [r3]
   2fe64:	ldr	r3, [sp, #196]	; 0xc4
   2fe68:	ldr	r3, [r3]
   2fe6c:	sub	r3, r2, r3
   2fe70:	add	fp, fp, r3
   2fe74:	add	r6, r6, r3, lsl #1
   2fe78:	ldr	r3, [sp, #208]	; 0xd0
   2fe7c:	cmp	r3, #1
   2fe80:	ble	2fdf0 <GetDataSlab+0xede4>
   2fe84:	ldr	r3, [sp, #76]	; 0x4c
   2fe88:	add	r3, r3, #1
   2fe8c:	str	r3, [sp, #76]	; 0x4c
   2fe90:	ldr	r2, [sp, #204]	; 0xcc
   2fe94:	ldr	r1, [r2, #4]
   2fe98:	mov	r0, r3
   2fe9c:	bl	517e8 <__aeabi_idivmod>
   2fea0:	cmp	r1, #0
   2fea4:	bne	2fdd8 <GetDataSlab+0xedcc>
   2fea8:	add	r5, sp, #76	; 0x4c
   2feac:	ldr	r3, [sp, #204]	; 0xcc
   2feb0:	add	r3, r3, #4
   2feb4:	str	r3, [sp, #8]
   2feb8:	ldr	r3, [sp, #196]	; 0xc4
   2febc:	add	r8, r3, #4
   2fec0:	add	r7, sp, #112	; 0x70
   2fec4:	ldr	r9, [sp, #28]
   2fec8:	b	2fd94 <GetDataSlab+0xed88>
   2fecc:	mov	r3, #0
   2fed0:	b	24fa8 <GetDataSlab+0x3f9c>
   2fed4:	ldr	r2, [r9]
   2fed8:	cmp	r2, #0
   2fedc:	beq	2fef4 <GetDataSlab+0xeee8>
   2fee0:	ldr	r3, [sp, #16]
   2fee4:	ldr	r3, [r3, #-4]
   2fee8:	mul	r3, r3, r2
   2feec:	add	r6, r6, r3, lsl #1
   2fef0:	add	fp, fp, r3
   2fef4:	add	sl, sl, #1
   2fef8:	ldr	r3, [sp, #208]	; 0xd0
   2fefc:	cmp	r3, sl
   2ff00:	beq	2ff8c <GetDataSlab+0xef80>
   2ff04:	ldr	r3, [r5]
   2ff08:	add	r3, r3, #1
   2ff0c:	str	r3, [r5]
   2ff10:	add	r9, r9, #4
   2ff14:	ldr	r2, [sp, #12]
   2ff18:	ldr	r1, [r2, #4]!
   2ff1c:	str	r2, [sp, #12]
   2ff20:	mov	r0, r3
   2ff24:	bl	517e8 <__aeabi_idivmod>
   2ff28:	cmp	r1, #0
   2ff2c:	bne	2ff78 <GetDataSlab+0xef6c>
   2ff30:	mov	r3, #0
   2ff34:	str	r3, [r5], #4
   2ff38:	add	r7, r7, #4
   2ff3c:	str	r7, [sp, #16]
   2ff40:	ldr	r4, [r7]
   2ff44:	mov	r1, r4
   2ff48:	mov	r0, fp
   2ff4c:	bl	517e8 <__aeabi_idivmod>
   2ff50:	subs	r3, r1, #0
   2ff54:	beq	2fed4 <GetDataSlab+0xeec8>
   2ff58:	ldr	r2, [r7, #-4]
   2ff5c:	ldr	r1, [r9]
   2ff60:	sub	r3, r4, r3
   2ff64:	mla	r3, r1, r2, r3
   2ff68:	add	r6, r6, r3, lsl #1
   2ff6c:	add	fp, fp, r3
   2ff70:	b	2fef4 <GetDataSlab+0xeee8>
   2ff74:	mov	sl, #1
   2ff78:	add	r3, sp, #152	; 0x98
   2ff7c:	add	r3, r3, sl, lsl #2
   2ff80:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ff84:	add	fp, fp, r3
   2ff88:	add	r6, r6, r3, lsl #1
   2ff8c:	ldr	r3, [sp, #24]
   2ff90:	ldr	r2, [sp, #8]
   2ff94:	add	r3, r3, r2
   2ff98:	str	r3, [sp, #24]
   2ff9c:	ldr	r2, [sp, #20]
   2ffa0:	cmp	r3, r2
   2ffa4:	bge	3008c <GetDataSlab+0xf080>
   2ffa8:	ldr	r3, [sp, #196]	; 0xc4
   2ffac:	ldr	r3, [r3]
   2ffb0:	cmp	r3, #0
   2ffb4:	addne	r6, r6, r3, lsl #1
   2ffb8:	addne	fp, fp, r3
   2ffbc:	ldr	r3, [sp, #204]	; 0xcc
   2ffc0:	ldr	r3, [r3]
   2ffc4:	str	r3, [sp, #8]
   2ffc8:	cmp	r3, #0
   2ffcc:	ble	3000c <GetDataSlab+0xf000>
   2ffd0:	ldr	r3, [sp, #4]
   2ffd4:	ldr	r2, [sp, #24]
   2ffd8:	add	r2, r3, r2, lsl #2
   2ffdc:	mov	r3, #0
   2ffe0:	ldrh	r1, [r6]
   2ffe4:	str	r1, [r2], #4
   2ffe8:	ldr	r1, [r8]
   2ffec:	add	r6, r6, r1, lsl #1
   2fff0:	add	fp, fp, r1
   2fff4:	add	r3, r3, #1
   2fff8:	ldr	r1, [sp, #204]	; 0xcc
   2fffc:	ldr	r1, [r1]
   30000:	str	r1, [sp, #8]
   30004:	cmp	r1, r3
   30008:	bgt	2ffe0 <GetDataSlab+0xefd4>
   3000c:	ldr	r3, [r8]
   30010:	ldr	r2, [sp, #8]
   30014:	mul	r3, r3, r2
   30018:	ldr	r2, [sp, #192]	; 0xc0
   3001c:	ldr	r2, [r2]
   30020:	sub	r3, r2, r3
   30024:	ldr	r2, [sp, #196]	; 0xc4
   30028:	ldr	r2, [r2]
   3002c:	sub	r3, r3, r2
   30030:	add	fp, fp, r3
   30034:	add	r6, r6, r3, lsl #1
   30038:	ldr	r3, [sp, #208]	; 0xd0
   3003c:	cmp	r3, #1
   30040:	ble	2ff8c <GetDataSlab+0xef80>
   30044:	ldr	r3, [sp, #76]	; 0x4c
   30048:	add	r3, r3, #1
   3004c:	str	r3, [sp, #76]	; 0x4c
   30050:	ldr	r2, [sp, #204]	; 0xcc
   30054:	ldr	r1, [r2, #4]
   30058:	mov	r0, r3
   3005c:	bl	517e8 <__aeabi_idivmod>
   30060:	cmp	r1, #0
   30064:	bne	2ff74 <GetDataSlab+0xef68>
   30068:	add	r5, sp, #76	; 0x4c
   3006c:	ldr	r3, [sp, #204]	; 0xcc
   30070:	add	r3, r3, #4
   30074:	str	r3, [sp, #12]
   30078:	ldr	r3, [sp, #196]	; 0xc4
   3007c:	add	r9, r3, #4
   30080:	add	r7, sp, #112	; 0x70
   30084:	mov	sl, #1
   30088:	b	2ff30 <GetDataSlab+0xef24>
   3008c:	mov	r3, #0
   30090:	b	24fa8 <GetDataSlab+0x3f9c>
   30094:	ldr	r3, [r8]
   30098:	str	r3, [sp, #28]
   3009c:	sub	r3, r3, #1
   300a0:	str	r3, [sp, #32]
   300a4:	ldr	r3, [sp, #192]	; 0xc0
   300a8:	ldr	r3, [r3]
   300ac:	str	r3, [sp, #112]	; 0x70
   300b0:	ldr	r3, [sp, #204]	; 0xcc
   300b4:	ldr	r3, [r3]
   300b8:	str	r3, [sp, #20]
   300bc:	ldr	r3, [sp, #208]	; 0xd0
   300c0:	cmp	r3, #1
   300c4:	ble	300f8 <GetDataSlab+0xf0ec>
   300c8:	str	r8, [sp, #16]
   300cc:	add	sl, sp, #36	; 0x24
   300d0:	ldr	lr, [sp, #192]	; 0xc0
   300d4:	add	r9, sp, #112	; 0x70
   300d8:	ldr	r3, [sp, #204]	; 0xcc
   300dc:	add	r5, r3, #4
   300e0:	ldr	r3, [sp, #196]	; 0xc4
   300e4:	add	r4, r3, #4
   300e8:	str	lr, [sp, #12]
   300ec:	mov	r6, #2
   300f0:	mov	fp, #0
   300f4:	b	403c8 <GetDataSlab+0x1f3bc>
   300f8:	mov	fp, #0
   300fc:	b	40454 <GetDataSlab+0x1f448>
   30100:	ldr	r3, [sp, #20]
   30104:	cmp	r3, #0
   30108:	ble	3d4d8 <GetDataSlab+0x1c4cc>
   3010c:	mov	r3, #0
   30110:	str	r3, [sp, #16]
   30114:	b	301e8 <GetDataSlab+0xf1dc>
   30118:	ldr	r2, [r8]
   3011c:	cmp	r2, #0
   30120:	beq	30138 <GetDataSlab+0xf12c>
   30124:	ldr	r3, [sp, #12]
   30128:	ldr	r3, [r3, #-4]
   3012c:	mul	r3, r3, r2
   30130:	add	r6, r6, r3
   30134:	add	fp, fp, r3
   30138:	add	r9, r9, #1
   3013c:	ldr	r3, [sp, #208]	; 0xd0
   30140:	cmp	r3, r9
   30144:	beq	301d0 <GetDataSlab+0xf1c4>
   30148:	ldr	r3, [r5]
   3014c:	add	r3, r3, #1
   30150:	str	r3, [r5]
   30154:	add	r8, r8, #4
   30158:	ldr	r2, [sp, #8]
   3015c:	ldr	r1, [r2, #4]!
   30160:	str	r2, [sp, #8]
   30164:	mov	r0, r3
   30168:	bl	517e8 <__aeabi_idivmod>
   3016c:	cmp	r1, #0
   30170:	bne	301bc <GetDataSlab+0xf1b0>
   30174:	mov	r3, #0
   30178:	str	r3, [r5], #4
   3017c:	add	r7, r7, #4
   30180:	str	r7, [sp, #12]
   30184:	ldr	r4, [r7]
   30188:	mov	r1, r4
   3018c:	mov	r0, fp
   30190:	bl	517e8 <__aeabi_idivmod>
   30194:	subs	r3, r1, #0
   30198:	beq	30118 <GetDataSlab+0xf10c>
   3019c:	ldr	r2, [r7, #-4]
   301a0:	ldr	r1, [r8]
   301a4:	sub	r3, r4, r3
   301a8:	mla	r3, r1, r2, r3
   301ac:	add	r6, r6, r3
   301b0:	add	fp, fp, r3
   301b4:	b	30138 <GetDataSlab+0xf12c>
   301b8:	ldr	r9, [sp, #28]
   301bc:	add	r3, sp, #152	; 0x98
   301c0:	add	r3, r3, r9, lsl #2
   301c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   301c8:	add	fp, fp, r3
   301cc:	add	r6, r6, r3
   301d0:	ldr	r3, [sp, #16]
   301d4:	add	r3, r3, sl
   301d8:	str	r3, [sp, #16]
   301dc:	ldr	r2, [sp, #20]
   301e0:	cmp	r3, r2
   301e4:	bge	302ac <GetDataSlab+0xf2a0>
   301e8:	ldr	r3, [sp, #196]	; 0xc4
   301ec:	ldr	r3, [r3]
   301f0:	cmp	r3, #0
   301f4:	addne	r6, r6, r3
   301f8:	addne	fp, fp, r3
   301fc:	ldr	r3, [sp, #204]	; 0xcc
   30200:	ldr	sl, [r3]
   30204:	cmp	sl, #0
   30208:	ble	3023c <GetDataSlab+0xf230>
   3020c:	sub	r0, r6, #1
   30210:	ldr	r3, [sp, #4]
   30214:	ldr	r2, [sp, #16]
   30218:	add	r1, r3, r2, lsl #2
   3021c:	mov	r2, #0
   30220:	ldrsb	r3, [r0, #1]!
   30224:	str	r3, [r1], #4
   30228:	add	r2, r2, #1
   3022c:	ldr	r3, [sp, #204]	; 0xcc
   30230:	ldr	sl, [r3]
   30234:	cmp	sl, r2
   30238:	bgt	30220 <GetDataSlab+0xf214>
   3023c:	ldr	r3, [sp, #192]	; 0xc0
   30240:	ldr	r2, [r3]
   30244:	ldr	r3, [sp, #196]	; 0xc4
   30248:	ldr	r3, [r3]
   3024c:	sub	r3, r2, r3
   30250:	add	fp, fp, r3
   30254:	add	r6, r6, r3
   30258:	ldr	r3, [sp, #208]	; 0xd0
   3025c:	cmp	r3, #1
   30260:	ble	301d0 <GetDataSlab+0xf1c4>
   30264:	ldr	r3, [sp, #76]	; 0x4c
   30268:	add	r3, r3, #1
   3026c:	str	r3, [sp, #76]	; 0x4c
   30270:	ldr	r2, [sp, #204]	; 0xcc
   30274:	ldr	r1, [r2, #4]
   30278:	mov	r0, r3
   3027c:	bl	517e8 <__aeabi_idivmod>
   30280:	cmp	r1, #0
   30284:	bne	301b8 <GetDataSlab+0xf1ac>
   30288:	add	r5, sp, #76	; 0x4c
   3028c:	ldr	r3, [sp, #204]	; 0xcc
   30290:	add	r3, r3, #4
   30294:	str	r3, [sp, #8]
   30298:	ldr	r3, [sp, #196]	; 0xc4
   3029c:	add	r8, r3, #4
   302a0:	add	r7, sp, #112	; 0x70
   302a4:	ldr	r9, [sp, #28]
   302a8:	b	30174 <GetDataSlab+0xf168>
   302ac:	mov	r3, #0
   302b0:	b	24fa8 <GetDataSlab+0x3f9c>
   302b4:	ldr	r2, [r9]
   302b8:	cmp	r2, #0
   302bc:	beq	302d4 <GetDataSlab+0xf2c8>
   302c0:	ldr	r3, [sp, #16]
   302c4:	ldr	r3, [r3, #-4]
   302c8:	mul	r3, r3, r2
   302cc:	add	r6, r6, r3
   302d0:	add	fp, fp, r3
   302d4:	add	sl, sl, #1
   302d8:	ldr	r3, [sp, #208]	; 0xd0
   302dc:	cmp	r3, sl
   302e0:	beq	3036c <GetDataSlab+0xf360>
   302e4:	ldr	r3, [r5]
   302e8:	add	r3, r3, #1
   302ec:	str	r3, [r5]
   302f0:	add	r9, r9, #4
   302f4:	ldr	r2, [sp, #12]
   302f8:	ldr	r1, [r2, #4]!
   302fc:	str	r2, [sp, #12]
   30300:	mov	r0, r3
   30304:	bl	517e8 <__aeabi_idivmod>
   30308:	cmp	r1, #0
   3030c:	bne	30358 <GetDataSlab+0xf34c>
   30310:	mov	r3, #0
   30314:	str	r3, [r5], #4
   30318:	add	r7, r7, #4
   3031c:	str	r7, [sp, #16]
   30320:	ldr	r4, [r7]
   30324:	mov	r1, r4
   30328:	mov	r0, fp
   3032c:	bl	517e8 <__aeabi_idivmod>
   30330:	subs	r3, r1, #0
   30334:	beq	302b4 <GetDataSlab+0xf2a8>
   30338:	ldr	r2, [r7, #-4]
   3033c:	ldr	r1, [r9]
   30340:	sub	r3, r4, r3
   30344:	mla	r3, r1, r2, r3
   30348:	add	r6, r6, r3
   3034c:	add	fp, fp, r3
   30350:	b	302d4 <GetDataSlab+0xf2c8>
   30354:	mov	sl, #1
   30358:	add	r3, sp, #152	; 0x98
   3035c:	add	r3, r3, sl, lsl #2
   30360:	ldr	r3, [r3, #-120]	; 0xffffff88
   30364:	add	fp, fp, r3
   30368:	add	r6, r6, r3
   3036c:	ldr	r3, [sp, #24]
   30370:	ldr	r2, [sp, #8]
   30374:	add	r3, r3, r2
   30378:	str	r3, [sp, #24]
   3037c:	ldr	r2, [sp, #20]
   30380:	cmp	r3, r2
   30384:	bge	3046c <GetDataSlab+0xf460>
   30388:	ldr	r3, [sp, #196]	; 0xc4
   3038c:	ldr	r3, [r3]
   30390:	cmp	r3, #0
   30394:	addne	r6, r6, r3
   30398:	addne	fp, fp, r3
   3039c:	ldr	r3, [sp, #204]	; 0xcc
   303a0:	ldr	r3, [r3]
   303a4:	str	r3, [sp, #8]
   303a8:	cmp	r3, #0
   303ac:	ble	303ec <GetDataSlab+0xf3e0>
   303b0:	ldr	r3, [sp, #4]
   303b4:	ldr	r2, [sp, #24]
   303b8:	add	r2, r3, r2, lsl #2
   303bc:	mov	r3, #0
   303c0:	ldrsb	r1, [r6]
   303c4:	str	r1, [r2], #4
   303c8:	ldr	r1, [r8]
   303cc:	add	r6, r6, r1
   303d0:	add	fp, fp, r1
   303d4:	add	r3, r3, #1
   303d8:	ldr	r1, [sp, #204]	; 0xcc
   303dc:	ldr	r1, [r1]
   303e0:	str	r1, [sp, #8]
   303e4:	cmp	r1, r3
   303e8:	bgt	303c0 <GetDataSlab+0xf3b4>
   303ec:	ldr	r3, [r8]
   303f0:	ldr	r2, [sp, #8]
   303f4:	mul	r3, r3, r2
   303f8:	ldr	r2, [sp, #192]	; 0xc0
   303fc:	ldr	r2, [r2]
   30400:	sub	r3, r2, r3
   30404:	ldr	r2, [sp, #196]	; 0xc4
   30408:	ldr	r2, [r2]
   3040c:	sub	r3, r3, r2
   30410:	add	fp, fp, r3
   30414:	add	r6, r6, r3
   30418:	ldr	r3, [sp, #208]	; 0xd0
   3041c:	cmp	r3, #1
   30420:	ble	3036c <GetDataSlab+0xf360>
   30424:	ldr	r3, [sp, #76]	; 0x4c
   30428:	add	r3, r3, #1
   3042c:	str	r3, [sp, #76]	; 0x4c
   30430:	ldr	r2, [sp, #204]	; 0xcc
   30434:	ldr	r1, [r2, #4]
   30438:	mov	r0, r3
   3043c:	bl	517e8 <__aeabi_idivmod>
   30440:	cmp	r1, #0
   30444:	bne	30354 <GetDataSlab+0xf348>
   30448:	add	r5, sp, #76	; 0x4c
   3044c:	ldr	r3, [sp, #204]	; 0xcc
   30450:	add	r3, r3, #4
   30454:	str	r3, [sp, #12]
   30458:	ldr	r3, [sp, #196]	; 0xc4
   3045c:	add	r9, r3, #4
   30460:	add	r7, sp, #112	; 0x70
   30464:	mov	sl, #1
   30468:	b	30310 <GetDataSlab+0xf304>
   3046c:	mov	r3, #0
   30470:	b	24fa8 <GetDataSlab+0x3f9c>
   30474:	ldr	r3, [r8]
   30478:	str	r3, [sp, #28]
   3047c:	sub	r3, r3, #1
   30480:	str	r3, [sp, #32]
   30484:	ldr	r3, [sp, #192]	; 0xc0
   30488:	ldr	r3, [r3]
   3048c:	str	r3, [sp, #112]	; 0x70
   30490:	ldr	r3, [sp, #204]	; 0xcc
   30494:	ldr	r3, [r3]
   30498:	str	r3, [sp, #20]
   3049c:	ldr	r3, [sp, #208]	; 0xd0
   304a0:	cmp	r3, #1
   304a4:	ble	304d8 <GetDataSlab+0xf4cc>
   304a8:	str	r8, [sp, #16]
   304ac:	add	sl, sp, #36	; 0x24
   304b0:	ldr	lr, [sp, #192]	; 0xc0
   304b4:	add	r9, sp, #112	; 0x70
   304b8:	ldr	r3, [sp, #204]	; 0xcc
   304bc:	add	r5, r3, #4
   304c0:	ldr	r3, [sp, #196]	; 0xc4
   304c4:	add	r4, r3, #4
   304c8:	str	lr, [sp, #12]
   304cc:	mov	r6, #2
   304d0:	mov	fp, #0
   304d4:	b	404b4 <GetDataSlab+0x1f4a8>
   304d8:	mov	fp, #0
   304dc:	b	40540 <GetDataSlab+0x1f534>
   304e0:	ldr	r3, [sp, #20]
   304e4:	cmp	r3, #0
   304e8:	ble	3d4e0 <GetDataSlab+0x1c4d4>
   304ec:	mov	r3, #0
   304f0:	str	r3, [sp, #16]
   304f4:	b	305c8 <GetDataSlab+0xf5bc>
   304f8:	ldr	r2, [r8]
   304fc:	cmp	r2, #0
   30500:	beq	30518 <GetDataSlab+0xf50c>
   30504:	ldr	r3, [sp, #12]
   30508:	ldr	r3, [r3, #-4]
   3050c:	mul	r3, r3, r2
   30510:	add	r6, r6, r3
   30514:	add	fp, fp, r3
   30518:	add	r9, r9, #1
   3051c:	ldr	r3, [sp, #208]	; 0xd0
   30520:	cmp	r3, r9
   30524:	beq	305b0 <GetDataSlab+0xf5a4>
   30528:	ldr	r3, [r5]
   3052c:	add	r3, r3, #1
   30530:	str	r3, [r5]
   30534:	add	r8, r8, #4
   30538:	ldr	r2, [sp, #8]
   3053c:	ldr	r1, [r2, #4]!
   30540:	str	r2, [sp, #8]
   30544:	mov	r0, r3
   30548:	bl	517e8 <__aeabi_idivmod>
   3054c:	cmp	r1, #0
   30550:	bne	3059c <GetDataSlab+0xf590>
   30554:	mov	r3, #0
   30558:	str	r3, [r5], #4
   3055c:	add	r7, r7, #4
   30560:	str	r7, [sp, #12]
   30564:	ldr	r4, [r7]
   30568:	mov	r1, r4
   3056c:	mov	r0, fp
   30570:	bl	517e8 <__aeabi_idivmod>
   30574:	subs	r3, r1, #0
   30578:	beq	304f8 <GetDataSlab+0xf4ec>
   3057c:	ldr	r2, [r7, #-4]
   30580:	ldr	r1, [r8]
   30584:	sub	r3, r4, r3
   30588:	mla	r3, r1, r2, r3
   3058c:	add	r6, r6, r3
   30590:	add	fp, fp, r3
   30594:	b	30518 <GetDataSlab+0xf50c>
   30598:	ldr	r9, [sp, #28]
   3059c:	add	r3, sp, #152	; 0x98
   305a0:	add	r3, r3, r9, lsl #2
   305a4:	ldr	r3, [r3, #-120]	; 0xffffff88
   305a8:	add	fp, fp, r3
   305ac:	add	r6, r6, r3
   305b0:	ldr	r3, [sp, #16]
   305b4:	add	r3, r3, sl
   305b8:	str	r3, [sp, #16]
   305bc:	ldr	r2, [sp, #20]
   305c0:	cmp	r3, r2
   305c4:	bge	3068c <GetDataSlab+0xf680>
   305c8:	ldr	r3, [sp, #196]	; 0xc4
   305cc:	ldr	r3, [r3]
   305d0:	cmp	r3, #0
   305d4:	addne	r6, r6, r3
   305d8:	addne	fp, fp, r3
   305dc:	ldr	r3, [sp, #204]	; 0xcc
   305e0:	ldr	sl, [r3]
   305e4:	cmp	sl, #0
   305e8:	ble	3061c <GetDataSlab+0xf610>
   305ec:	sub	r0, r6, #1
   305f0:	ldr	r3, [sp, #4]
   305f4:	ldr	r2, [sp, #16]
   305f8:	add	r1, r3, r2, lsl #2
   305fc:	mov	r2, #0
   30600:	ldrb	r3, [r0, #1]!
   30604:	str	r3, [r1], #4
   30608:	add	r2, r2, #1
   3060c:	ldr	r3, [sp, #204]	; 0xcc
   30610:	ldr	sl, [r3]
   30614:	cmp	sl, r2
   30618:	bgt	30600 <GetDataSlab+0xf5f4>
   3061c:	ldr	r3, [sp, #192]	; 0xc0
   30620:	ldr	r2, [r3]
   30624:	ldr	r3, [sp, #196]	; 0xc4
   30628:	ldr	r3, [r3]
   3062c:	sub	r3, r2, r3
   30630:	add	fp, fp, r3
   30634:	add	r6, r6, r3
   30638:	ldr	r3, [sp, #208]	; 0xd0
   3063c:	cmp	r3, #1
   30640:	ble	305b0 <GetDataSlab+0xf5a4>
   30644:	ldr	r3, [sp, #76]	; 0x4c
   30648:	add	r3, r3, #1
   3064c:	str	r3, [sp, #76]	; 0x4c
   30650:	ldr	r2, [sp, #204]	; 0xcc
   30654:	ldr	r1, [r2, #4]
   30658:	mov	r0, r3
   3065c:	bl	517e8 <__aeabi_idivmod>
   30660:	cmp	r1, #0
   30664:	bne	30598 <GetDataSlab+0xf58c>
   30668:	add	r5, sp, #76	; 0x4c
   3066c:	ldr	r3, [sp, #204]	; 0xcc
   30670:	add	r3, r3, #4
   30674:	str	r3, [sp, #8]
   30678:	ldr	r3, [sp, #196]	; 0xc4
   3067c:	add	r8, r3, #4
   30680:	add	r7, sp, #112	; 0x70
   30684:	ldr	r9, [sp, #28]
   30688:	b	30554 <GetDataSlab+0xf548>
   3068c:	mov	r3, #0
   30690:	b	24fa8 <GetDataSlab+0x3f9c>
   30694:	ldr	r2, [r9]
   30698:	cmp	r2, #0
   3069c:	beq	306b4 <GetDataSlab+0xf6a8>
   306a0:	ldr	r3, [sp, #16]
   306a4:	ldr	r3, [r3, #-4]
   306a8:	mul	r3, r3, r2
   306ac:	add	r6, r6, r3
   306b0:	add	fp, fp, r3
   306b4:	add	sl, sl, #1
   306b8:	ldr	r3, [sp, #208]	; 0xd0
   306bc:	cmp	r3, sl
   306c0:	beq	3074c <GetDataSlab+0xf740>
   306c4:	ldr	r3, [r5]
   306c8:	add	r3, r3, #1
   306cc:	str	r3, [r5]
   306d0:	add	r9, r9, #4
   306d4:	ldr	r2, [sp, #12]
   306d8:	ldr	r1, [r2, #4]!
   306dc:	str	r2, [sp, #12]
   306e0:	mov	r0, r3
   306e4:	bl	517e8 <__aeabi_idivmod>
   306e8:	cmp	r1, #0
   306ec:	bne	30738 <GetDataSlab+0xf72c>
   306f0:	mov	r3, #0
   306f4:	str	r3, [r5], #4
   306f8:	add	r7, r7, #4
   306fc:	str	r7, [sp, #16]
   30700:	ldr	r4, [r7]
   30704:	mov	r1, r4
   30708:	mov	r0, fp
   3070c:	bl	517e8 <__aeabi_idivmod>
   30710:	subs	r3, r1, #0
   30714:	beq	30694 <GetDataSlab+0xf688>
   30718:	ldr	r2, [r7, #-4]
   3071c:	ldr	r1, [r9]
   30720:	sub	r3, r4, r3
   30724:	mla	r3, r1, r2, r3
   30728:	add	r6, r6, r3
   3072c:	add	fp, fp, r3
   30730:	b	306b4 <GetDataSlab+0xf6a8>
   30734:	mov	sl, #1
   30738:	add	r3, sp, #152	; 0x98
   3073c:	add	r3, r3, sl, lsl #2
   30740:	ldr	r3, [r3, #-120]	; 0xffffff88
   30744:	add	fp, fp, r3
   30748:	add	r6, r6, r3
   3074c:	ldr	r3, [sp, #24]
   30750:	ldr	r2, [sp, #8]
   30754:	add	r3, r3, r2
   30758:	str	r3, [sp, #24]
   3075c:	ldr	r2, [sp, #20]
   30760:	cmp	r3, r2
   30764:	bge	3084c <GetDataSlab+0xf840>
   30768:	ldr	r3, [sp, #196]	; 0xc4
   3076c:	ldr	r3, [r3]
   30770:	cmp	r3, #0
   30774:	addne	r6, r6, r3
   30778:	addne	fp, fp, r3
   3077c:	ldr	r3, [sp, #204]	; 0xcc
   30780:	ldr	r3, [r3]
   30784:	str	r3, [sp, #8]
   30788:	cmp	r3, #0
   3078c:	ble	307cc <GetDataSlab+0xf7c0>
   30790:	ldr	r3, [sp, #4]
   30794:	ldr	r2, [sp, #24]
   30798:	add	r2, r3, r2, lsl #2
   3079c:	mov	r3, #0
   307a0:	ldrb	r1, [r6]
   307a4:	str	r1, [r2], #4
   307a8:	ldr	r1, [r8]
   307ac:	add	r6, r6, r1
   307b0:	add	fp, fp, r1
   307b4:	add	r3, r3, #1
   307b8:	ldr	r1, [sp, #204]	; 0xcc
   307bc:	ldr	r1, [r1]
   307c0:	str	r1, [sp, #8]
   307c4:	cmp	r1, r3
   307c8:	bgt	307a0 <GetDataSlab+0xf794>
   307cc:	ldr	r3, [r8]
   307d0:	ldr	r2, [sp, #8]
   307d4:	mul	r3, r3, r2
   307d8:	ldr	r2, [sp, #192]	; 0xc0
   307dc:	ldr	r2, [r2]
   307e0:	sub	r3, r2, r3
   307e4:	ldr	r2, [sp, #196]	; 0xc4
   307e8:	ldr	r2, [r2]
   307ec:	sub	r3, r3, r2
   307f0:	add	fp, fp, r3
   307f4:	add	r6, r6, r3
   307f8:	ldr	r3, [sp, #208]	; 0xd0
   307fc:	cmp	r3, #1
   30800:	ble	3074c <GetDataSlab+0xf740>
   30804:	ldr	r3, [sp, #76]	; 0x4c
   30808:	add	r3, r3, #1
   3080c:	str	r3, [sp, #76]	; 0x4c
   30810:	ldr	r2, [sp, #204]	; 0xcc
   30814:	ldr	r1, [r2, #4]
   30818:	mov	r0, r3
   3081c:	bl	517e8 <__aeabi_idivmod>
   30820:	cmp	r1, #0
   30824:	bne	30734 <GetDataSlab+0xf728>
   30828:	add	r5, sp, #76	; 0x4c
   3082c:	ldr	r3, [sp, #204]	; 0xcc
   30830:	add	r3, r3, #4
   30834:	str	r3, [sp, #12]
   30838:	ldr	r3, [sp, #196]	; 0xc4
   3083c:	add	r9, r3, #4
   30840:	add	r7, sp, #112	; 0x70
   30844:	mov	sl, #1
   30848:	b	306f0 <GetDataSlab+0xf6e4>
   3084c:	mov	r3, #0
   30850:	b	24fa8 <GetDataSlab+0x3f9c>
   30854:	cmp	r4, #12
   30858:	beq	308cc <GetDataSlab+0xf8c0>
   3085c:	cmp	r4, #13
   30860:	movne	r3, #1
   30864:	bne	24fa8 <GetDataSlab+0x3f9c>
   30868:	ldr	r3, [r8]
   3086c:	str	r3, [sp, #28]
   30870:	sub	r3, r3, #1
   30874:	str	r3, [sp, #32]
   30878:	ldr	r3, [sp, #192]	; 0xc0
   3087c:	ldr	r3, [r3]
   30880:	str	r3, [sp, #112]	; 0x70
   30884:	ldr	r3, [sp, #204]	; 0xcc
   30888:	ldr	r3, [r3]
   3088c:	str	r3, [sp, #20]
   30890:	ldr	r3, [sp, #208]	; 0xd0
   30894:	cmp	r3, #1
   30898:	ble	30c9c <GetDataSlab+0xfc90>
   3089c:	str	r8, [sp, #16]
   308a0:	add	sl, sp, #36	; 0x24
   308a4:	ldr	lr, [sp, #192]	; 0xc0
   308a8:	add	r9, sp, #112	; 0x70
   308ac:	ldr	r3, [sp, #204]	; 0xcc
   308b0:	add	r6, r3, #4
   308b4:	ldr	r3, [sp, #196]	; 0xc4
   308b8:	add	r4, r3, #4
   308bc:	str	lr, [sp, #12]
   308c0:	mov	r5, #2
   308c4:	mov	fp, #0
   308c8:	b	4068c <GetDataSlab+0x1f680>
   308cc:	ldr	r3, [r8]
   308d0:	str	r3, [sp, #28]
   308d4:	sub	r3, r3, #1
   308d8:	str	r3, [sp, #32]
   308dc:	ldr	r3, [sp, #192]	; 0xc0
   308e0:	ldr	r3, [r3]
   308e4:	str	r3, [sp, #112]	; 0x70
   308e8:	ldr	r3, [sp, #204]	; 0xcc
   308ec:	ldr	r3, [r3]
   308f0:	str	r3, [sp, #20]
   308f4:	ldr	r3, [sp, #208]	; 0xd0
   308f8:	cmp	r3, #1
   308fc:	ble	30930 <GetDataSlab+0xf924>
   30900:	str	r8, [sp, #16]
   30904:	add	sl, sp, #36	; 0x24
   30908:	ldr	lr, [sp, #192]	; 0xc0
   3090c:	add	r9, sp, #112	; 0x70
   30910:	ldr	r3, [sp, #204]	; 0xcc
   30914:	add	r6, r3, #4
   30918:	ldr	r3, [sp, #196]	; 0xc4
   3091c:	add	r4, r3, #4
   30920:	str	lr, [sp, #12]
   30924:	mov	r5, #2
   30928:	mov	fp, #0
   3092c:	b	405a0 <GetDataSlab+0x1f594>
   30930:	mov	fp, #0
   30934:	b	4062c <GetDataSlab+0x1f620>
   30938:	ldr	r3, [sp, #20]
   3093c:	cmp	r3, #0
   30940:	ble	40654 <GetDataSlab+0x1f648>
   30944:	mov	r3, #0
   30948:	str	r3, [sp, #16]
   3094c:	b	30a20 <GetDataSlab+0xfa14>
   30950:	ldr	r2, [r8]
   30954:	cmp	r2, #0
   30958:	beq	30970 <GetDataSlab+0xf964>
   3095c:	ldr	r3, [sp, #12]
   30960:	ldr	r3, [r3, #-4]
   30964:	mul	r3, r3, r2
   30968:	add	r5, r5, r3, lsl #3
   3096c:	add	fp, fp, r3
   30970:	add	r9, r9, #1
   30974:	ldr	r3, [sp, #208]	; 0xd0
   30978:	cmp	r3, r9
   3097c:	beq	30a08 <GetDataSlab+0xf9fc>
   30980:	ldr	r3, [r6]
   30984:	add	r3, r3, #1
   30988:	str	r3, [r6]
   3098c:	add	r8, r8, #4
   30990:	ldr	r2, [sp, #8]
   30994:	ldr	r1, [r2, #4]!
   30998:	str	r2, [sp, #8]
   3099c:	mov	r0, r3
   309a0:	bl	517e8 <__aeabi_idivmod>
   309a4:	cmp	r1, #0
   309a8:	bne	309f4 <GetDataSlab+0xf9e8>
   309ac:	mov	r3, #0
   309b0:	str	r3, [r6], #4
   309b4:	add	r7, r7, #4
   309b8:	str	r7, [sp, #12]
   309bc:	ldr	r4, [r7]
   309c0:	mov	r1, r4
   309c4:	mov	r0, fp
   309c8:	bl	517e8 <__aeabi_idivmod>
   309cc:	subs	r3, r1, #0
   309d0:	beq	30950 <GetDataSlab+0xf944>
   309d4:	ldr	r2, [r7, #-4]
   309d8:	ldr	r1, [r8]
   309dc:	sub	r3, r4, r3
   309e0:	mla	r3, r1, r2, r3
   309e4:	add	r5, r5, r3, lsl #3
   309e8:	add	fp, fp, r3
   309ec:	b	30970 <GetDataSlab+0xf964>
   309f0:	ldr	r9, [sp, #28]
   309f4:	add	r3, sp, #152	; 0x98
   309f8:	add	r3, r3, r9, lsl #2
   309fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   30a00:	add	fp, fp, r3
   30a04:	add	r5, r5, r3, lsl #3
   30a08:	ldr	r3, [sp, #16]
   30a0c:	add	r3, r3, sl
   30a10:	str	r3, [sp, #16]
   30a14:	ldr	r2, [sp, #20]
   30a18:	cmp	r3, r2
   30a1c:	bge	40654 <GetDataSlab+0x1f648>
   30a20:	ldr	r3, [sp, #196]	; 0xc4
   30a24:	ldr	r3, [r3]
   30a28:	cmp	r3, #0
   30a2c:	addne	r5, r5, r3, lsl #3
   30a30:	addne	fp, fp, r3
   30a34:	ldr	r3, [sp, #204]	; 0xcc
   30a38:	ldr	sl, [r3]
   30a3c:	cmp	sl, #0
   30a40:	ble	30a74 <GetDataSlab+0xfa68>
   30a44:	sub	r0, r5, #8
   30a48:	ldr	r3, [sp, #4]
   30a4c:	ldr	r2, [sp, #16]
   30a50:	add	r1, r3, r2, lsl #2
   30a54:	mov	r2, #0
   30a58:	ldr	r3, [r0, #8]!
   30a5c:	str	r3, [r1], #4
   30a60:	add	r2, r2, #1
   30a64:	ldr	r3, [sp, #204]	; 0xcc
   30a68:	ldr	sl, [r3]
   30a6c:	cmp	sl, r2
   30a70:	bgt	30a58 <GetDataSlab+0xfa4c>
   30a74:	ldr	r3, [sp, #192]	; 0xc0
   30a78:	ldr	r2, [r3]
   30a7c:	ldr	r3, [sp, #196]	; 0xc4
   30a80:	ldr	r3, [r3]
   30a84:	sub	r3, r2, r3
   30a88:	add	fp, fp, r3
   30a8c:	add	r5, r5, r3, lsl #3
   30a90:	ldr	r3, [sp, #208]	; 0xd0
   30a94:	cmp	r3, #1
   30a98:	ble	30a08 <GetDataSlab+0xf9fc>
   30a9c:	ldr	r3, [sp, #76]	; 0x4c
   30aa0:	add	r3, r3, #1
   30aa4:	str	r3, [sp, #76]	; 0x4c
   30aa8:	ldr	r2, [sp, #204]	; 0xcc
   30aac:	ldr	r1, [r2, #4]
   30ab0:	mov	r0, r3
   30ab4:	bl	517e8 <__aeabi_idivmod>
   30ab8:	cmp	r1, #0
   30abc:	bne	309f0 <GetDataSlab+0xf9e4>
   30ac0:	add	r6, sp, #76	; 0x4c
   30ac4:	ldr	r3, [sp, #204]	; 0xcc
   30ac8:	add	r3, r3, #4
   30acc:	str	r3, [sp, #8]
   30ad0:	ldr	r3, [sp, #196]	; 0xc4
   30ad4:	add	r8, r3, #4
   30ad8:	add	r7, sp, #112	; 0x70
   30adc:	ldr	r9, [sp, #28]
   30ae0:	b	309ac <GetDataSlab+0xf9a0>
   30ae4:	ldr	r2, [r9]
   30ae8:	cmp	r2, #0
   30aec:	beq	30b04 <GetDataSlab+0xfaf8>
   30af0:	ldr	r3, [sp, #16]
   30af4:	ldr	r3, [r3, #-4]
   30af8:	mul	r3, r3, r2
   30afc:	add	r5, r5, r3, lsl #3
   30b00:	add	fp, fp, r3
   30b04:	add	sl, sl, #1
   30b08:	ldr	r3, [sp, #208]	; 0xd0
   30b0c:	cmp	r3, sl
   30b10:	beq	30b9c <GetDataSlab+0xfb90>
   30b14:	ldr	r3, [r6]
   30b18:	add	r3, r3, #1
   30b1c:	str	r3, [r6]
   30b20:	add	r9, r9, #4
   30b24:	ldr	r2, [sp, #12]
   30b28:	ldr	r1, [r2, #4]!
   30b2c:	str	r2, [sp, #12]
   30b30:	mov	r0, r3
   30b34:	bl	517e8 <__aeabi_idivmod>
   30b38:	cmp	r1, #0
   30b3c:	bne	30b88 <GetDataSlab+0xfb7c>
   30b40:	mov	r3, #0
   30b44:	str	r3, [r6], #4
   30b48:	add	r7, r7, #4
   30b4c:	str	r7, [sp, #16]
   30b50:	ldr	r4, [r7]
   30b54:	mov	r1, r4
   30b58:	mov	r0, fp
   30b5c:	bl	517e8 <__aeabi_idivmod>
   30b60:	subs	r3, r1, #0
   30b64:	beq	30ae4 <GetDataSlab+0xfad8>
   30b68:	ldr	r2, [r7, #-4]
   30b6c:	ldr	r1, [r9]
   30b70:	sub	r3, r4, r3
   30b74:	mla	r3, r1, r2, r3
   30b78:	add	r5, r5, r3, lsl #3
   30b7c:	add	fp, fp, r3
   30b80:	b	30b04 <GetDataSlab+0xfaf8>
   30b84:	mov	sl, #1
   30b88:	add	r3, sp, #152	; 0x98
   30b8c:	add	r3, r3, sl, lsl #2
   30b90:	ldr	r3, [r3, #-120]	; 0xffffff88
   30b94:	add	fp, fp, r3
   30b98:	add	r5, r5, r3, lsl #3
   30b9c:	ldr	r3, [sp, #24]
   30ba0:	ldr	r2, [sp, #8]
   30ba4:	add	r3, r3, r2
   30ba8:	str	r3, [sp, #24]
   30bac:	ldr	r2, [sp, #20]
   30bb0:	cmp	r3, r2
   30bb4:	bge	40654 <GetDataSlab+0x1f648>
   30bb8:	ldr	r3, [sp, #196]	; 0xc4
   30bbc:	ldr	r3, [r3]
   30bc0:	cmp	r3, #0
   30bc4:	addne	r5, r5, r3, lsl #3
   30bc8:	addne	fp, fp, r3
   30bcc:	ldr	r3, [sp, #204]	; 0xcc
   30bd0:	ldr	r3, [r3]
   30bd4:	str	r3, [sp, #8]
   30bd8:	cmp	r3, #0
   30bdc:	ble	30c1c <GetDataSlab+0xfc10>
   30be0:	ldr	r3, [sp, #4]
   30be4:	ldr	r2, [sp, #24]
   30be8:	add	r2, r3, r2, lsl #2
   30bec:	mov	r3, #0
   30bf0:	ldr	r1, [r5]
   30bf4:	str	r1, [r2], #4
   30bf8:	ldr	r1, [r8]
   30bfc:	add	r5, r5, r1, lsl #3
   30c00:	add	fp, fp, r1
   30c04:	add	r3, r3, #1
   30c08:	ldr	r1, [sp, #204]	; 0xcc
   30c0c:	ldr	r1, [r1]
   30c10:	str	r1, [sp, #8]
   30c14:	cmp	r1, r3
   30c18:	bgt	30bf0 <GetDataSlab+0xfbe4>
   30c1c:	ldr	r3, [r8]
   30c20:	ldr	r2, [sp, #8]
   30c24:	mul	r3, r3, r2
   30c28:	ldr	r2, [sp, #192]	; 0xc0
   30c2c:	ldr	r2, [r2]
   30c30:	sub	r3, r2, r3
   30c34:	ldr	r2, [sp, #196]	; 0xc4
   30c38:	ldr	r2, [r2]
   30c3c:	sub	r3, r3, r2
   30c40:	add	fp, fp, r3
   30c44:	add	r5, r5, r3, lsl #3
   30c48:	ldr	r3, [sp, #208]	; 0xd0
   30c4c:	cmp	r3, #1
   30c50:	ble	30b9c <GetDataSlab+0xfb90>
   30c54:	ldr	r3, [sp, #76]	; 0x4c
   30c58:	add	r3, r3, #1
   30c5c:	str	r3, [sp, #76]	; 0x4c
   30c60:	ldr	r2, [sp, #204]	; 0xcc
   30c64:	ldr	r1, [r2, #4]
   30c68:	mov	r0, r3
   30c6c:	bl	517e8 <__aeabi_idivmod>
   30c70:	cmp	r1, #0
   30c74:	bne	30b84 <GetDataSlab+0xfb78>
   30c78:	add	r6, sp, #76	; 0x4c
   30c7c:	ldr	r3, [sp, #204]	; 0xcc
   30c80:	add	r3, r3, #4
   30c84:	str	r3, [sp, #12]
   30c88:	ldr	r3, [sp, #196]	; 0xc4
   30c8c:	add	r9, r3, #4
   30c90:	add	r7, sp, #112	; 0x70
   30c94:	mov	sl, #1
   30c98:	b	30b40 <GetDataSlab+0xfb34>
   30c9c:	mov	fp, #0
   30ca0:	b	40718 <GetDataSlab+0x1f70c>
   30ca4:	ldr	r3, [sp, #20]
   30ca8:	cmp	r3, #0
   30cac:	ble	3d4e8 <GetDataSlab+0x1c4dc>
   30cb0:	mov	r3, #0
   30cb4:	str	r3, [sp, #16]
   30cb8:	b	30d8c <GetDataSlab+0xfd80>
   30cbc:	ldr	r2, [r8]
   30cc0:	cmp	r2, #0
   30cc4:	beq	30cdc <GetDataSlab+0xfcd0>
   30cc8:	ldr	r3, [sp, #12]
   30ccc:	ldr	r3, [r3, #-4]
   30cd0:	mul	r3, r3, r2
   30cd4:	add	r5, r5, r3, lsl #3
   30cd8:	add	fp, fp, r3
   30cdc:	add	r9, r9, #1
   30ce0:	ldr	r3, [sp, #208]	; 0xd0
   30ce4:	cmp	r3, r9
   30ce8:	beq	30d74 <GetDataSlab+0xfd68>
   30cec:	ldr	r3, [r6]
   30cf0:	add	r3, r3, #1
   30cf4:	str	r3, [r6]
   30cf8:	add	r8, r8, #4
   30cfc:	ldr	r2, [sp, #8]
   30d00:	ldr	r1, [r2, #4]!
   30d04:	str	r2, [sp, #8]
   30d08:	mov	r0, r3
   30d0c:	bl	517e8 <__aeabi_idivmod>
   30d10:	cmp	r1, #0
   30d14:	bne	30d60 <GetDataSlab+0xfd54>
   30d18:	mov	r3, #0
   30d1c:	str	r3, [r6], #4
   30d20:	add	r7, r7, #4
   30d24:	str	r7, [sp, #12]
   30d28:	ldr	r4, [r7]
   30d2c:	mov	r1, r4
   30d30:	mov	r0, fp
   30d34:	bl	517e8 <__aeabi_idivmod>
   30d38:	subs	r3, r1, #0
   30d3c:	beq	30cbc <GetDataSlab+0xfcb0>
   30d40:	ldr	r2, [r7, #-4]
   30d44:	ldr	r1, [r8]
   30d48:	sub	r3, r4, r3
   30d4c:	mla	r3, r1, r2, r3
   30d50:	add	r5, r5, r3, lsl #3
   30d54:	add	fp, fp, r3
   30d58:	b	30cdc <GetDataSlab+0xfcd0>
   30d5c:	ldr	r9, [sp, #28]
   30d60:	add	r3, sp, #152	; 0x98
   30d64:	add	r3, r3, r9, lsl #2
   30d68:	ldr	r3, [r3, #-120]	; 0xffffff88
   30d6c:	add	fp, fp, r3
   30d70:	add	r5, r5, r3, lsl #3
   30d74:	ldr	r3, [sp, #16]
   30d78:	add	r3, r3, sl
   30d7c:	str	r3, [sp, #16]
   30d80:	ldr	r2, [sp, #20]
   30d84:	cmp	r3, r2
   30d88:	bge	30e50 <GetDataSlab+0xfe44>
   30d8c:	ldr	r3, [sp, #196]	; 0xc4
   30d90:	ldr	r3, [r3]
   30d94:	cmp	r3, #0
   30d98:	addne	r5, r5, r3, lsl #3
   30d9c:	addne	fp, fp, r3
   30da0:	ldr	r3, [sp, #204]	; 0xcc
   30da4:	ldr	sl, [r3]
   30da8:	cmp	sl, #0
   30dac:	ble	30de0 <GetDataSlab+0xfdd4>
   30db0:	sub	r0, r5, #8
   30db4:	ldr	r3, [sp, #4]
   30db8:	ldr	r2, [sp, #16]
   30dbc:	add	r1, r3, r2, lsl #2
   30dc0:	mov	r2, #0
   30dc4:	ldr	r3, [r0, #8]!
   30dc8:	str	r3, [r1], #4
   30dcc:	add	r2, r2, #1
   30dd0:	ldr	r3, [sp, #204]	; 0xcc
   30dd4:	ldr	sl, [r3]
   30dd8:	cmp	sl, r2
   30ddc:	bgt	30dc4 <GetDataSlab+0xfdb8>
   30de0:	ldr	r3, [sp, #192]	; 0xc0
   30de4:	ldr	r2, [r3]
   30de8:	ldr	r3, [sp, #196]	; 0xc4
   30dec:	ldr	r3, [r3]
   30df0:	sub	r3, r2, r3
   30df4:	add	fp, fp, r3
   30df8:	add	r5, r5, r3, lsl #3
   30dfc:	ldr	r3, [sp, #208]	; 0xd0
   30e00:	cmp	r3, #1
   30e04:	ble	30d74 <GetDataSlab+0xfd68>
   30e08:	ldr	r3, [sp, #76]	; 0x4c
   30e0c:	add	r3, r3, #1
   30e10:	str	r3, [sp, #76]	; 0x4c
   30e14:	ldr	r2, [sp, #204]	; 0xcc
   30e18:	ldr	r1, [r2, #4]
   30e1c:	mov	r0, r3
   30e20:	bl	517e8 <__aeabi_idivmod>
   30e24:	cmp	r1, #0
   30e28:	bne	30d5c <GetDataSlab+0xfd50>
   30e2c:	add	r6, sp, #76	; 0x4c
   30e30:	ldr	r3, [sp, #204]	; 0xcc
   30e34:	add	r3, r3, #4
   30e38:	str	r3, [sp, #8]
   30e3c:	ldr	r3, [sp, #196]	; 0xc4
   30e40:	add	r8, r3, #4
   30e44:	add	r7, sp, #112	; 0x70
   30e48:	ldr	r9, [sp, #28]
   30e4c:	b	30d18 <GetDataSlab+0xfd0c>
   30e50:	mov	r3, #0
   30e54:	b	24fa8 <GetDataSlab+0x3f9c>
   30e58:	ldr	r2, [r9]
   30e5c:	cmp	r2, #0
   30e60:	beq	30e78 <GetDataSlab+0xfe6c>
   30e64:	ldr	r3, [sp, #16]
   30e68:	ldr	r3, [r3, #-4]
   30e6c:	mul	r3, r3, r2
   30e70:	add	r5, r5, r3, lsl #3
   30e74:	add	fp, fp, r3
   30e78:	add	sl, sl, #1
   30e7c:	ldr	r3, [sp, #208]	; 0xd0
   30e80:	cmp	r3, sl
   30e84:	beq	30f10 <GetDataSlab+0xff04>
   30e88:	ldr	r3, [r6]
   30e8c:	add	r3, r3, #1
   30e90:	str	r3, [r6]
   30e94:	add	r9, r9, #4
   30e98:	ldr	r2, [sp, #12]
   30e9c:	ldr	r1, [r2, #4]!
   30ea0:	str	r2, [sp, #12]
   30ea4:	mov	r0, r3
   30ea8:	bl	517e8 <__aeabi_idivmod>
   30eac:	cmp	r1, #0
   30eb0:	bne	30efc <GetDataSlab+0xfef0>
   30eb4:	mov	r3, #0
   30eb8:	str	r3, [r6], #4
   30ebc:	add	r7, r7, #4
   30ec0:	str	r7, [sp, #16]
   30ec4:	ldr	r4, [r7]
   30ec8:	mov	r1, r4
   30ecc:	mov	r0, fp
   30ed0:	bl	517e8 <__aeabi_idivmod>
   30ed4:	subs	r3, r1, #0
   30ed8:	beq	30e58 <GetDataSlab+0xfe4c>
   30edc:	ldr	r2, [r7, #-4]
   30ee0:	ldr	r1, [r9]
   30ee4:	sub	r3, r4, r3
   30ee8:	mla	r3, r1, r2, r3
   30eec:	add	r5, r5, r3, lsl #3
   30ef0:	add	fp, fp, r3
   30ef4:	b	30e78 <GetDataSlab+0xfe6c>
   30ef8:	mov	sl, #1
   30efc:	add	r3, sp, #152	; 0x98
   30f00:	add	r3, r3, sl, lsl #2
   30f04:	ldr	r3, [r3, #-120]	; 0xffffff88
   30f08:	add	fp, fp, r3
   30f0c:	add	r5, r5, r3, lsl #3
   30f10:	ldr	r3, [sp, #24]
   30f14:	ldr	r2, [sp, #8]
   30f18:	add	r3, r3, r2
   30f1c:	str	r3, [sp, #24]
   30f20:	ldr	r2, [sp, #20]
   30f24:	cmp	r3, r2
   30f28:	bge	31010 <GetDataSlab+0x10004>
   30f2c:	ldr	r3, [sp, #196]	; 0xc4
   30f30:	ldr	r3, [r3]
   30f34:	cmp	r3, #0
   30f38:	addne	r5, r5, r3, lsl #3
   30f3c:	addne	fp, fp, r3
   30f40:	ldr	r3, [sp, #204]	; 0xcc
   30f44:	ldr	r3, [r3]
   30f48:	str	r3, [sp, #8]
   30f4c:	cmp	r3, #0
   30f50:	ble	30f90 <GetDataSlab+0xff84>
   30f54:	ldr	r3, [sp, #4]
   30f58:	ldr	r2, [sp, #24]
   30f5c:	add	r2, r3, r2, lsl #2
   30f60:	mov	r3, #0
   30f64:	ldr	r1, [r5]
   30f68:	str	r1, [r2], #4
   30f6c:	ldr	r1, [r8]
   30f70:	add	r5, r5, r1, lsl #3
   30f74:	add	fp, fp, r1
   30f78:	add	r3, r3, #1
   30f7c:	ldr	r1, [sp, #204]	; 0xcc
   30f80:	ldr	r1, [r1]
   30f84:	str	r1, [sp, #8]
   30f88:	cmp	r1, r3
   30f8c:	bgt	30f64 <GetDataSlab+0xff58>
   30f90:	ldr	r3, [r8]
   30f94:	ldr	r2, [sp, #8]
   30f98:	mul	r3, r3, r2
   30f9c:	ldr	r2, [sp, #192]	; 0xc0
   30fa0:	ldr	r2, [r2]
   30fa4:	sub	r3, r2, r3
   30fa8:	ldr	r2, [sp, #196]	; 0xc4
   30fac:	ldr	r2, [r2]
   30fb0:	sub	r3, r3, r2
   30fb4:	add	fp, fp, r3
   30fb8:	add	r5, r5, r3, lsl #3
   30fbc:	ldr	r3, [sp, #208]	; 0xd0
   30fc0:	cmp	r3, #1
   30fc4:	ble	30f10 <GetDataSlab+0xff04>
   30fc8:	ldr	r3, [sp, #76]	; 0x4c
   30fcc:	add	r3, r3, #1
   30fd0:	str	r3, [sp, #76]	; 0x4c
   30fd4:	ldr	r2, [sp, #204]	; 0xcc
   30fd8:	ldr	r1, [r2, #4]
   30fdc:	mov	r0, r3
   30fe0:	bl	517e8 <__aeabi_idivmod>
   30fe4:	cmp	r1, #0
   30fe8:	bne	30ef8 <GetDataSlab+0xfeec>
   30fec:	add	r6, sp, #76	; 0x4c
   30ff0:	ldr	r3, [sp, #204]	; 0xcc
   30ff4:	add	r3, r3, #4
   30ff8:	str	r3, [sp, #12]
   30ffc:	ldr	r3, [sp, #196]	; 0xc4
   31000:	add	r9, r3, #4
   31004:	add	r7, sp, #112	; 0x70
   31008:	mov	sl, #1
   3100c:	b	30eb4 <GetDataSlab+0xfea8>
   31010:	mov	r3, #0
   31014:	b	24fa8 <GetDataSlab+0x3f9c>
   31018:	sub	r3, r4, #1
   3101c:	cmp	r3, #8
   31020:	addls	pc, pc, r3, lsl #2
   31024:	b	32f5c <GetDataSlab+0x11f50>
   31028:	b	3279c <GetDataSlab+0x11790>
   3102c:	b	32b7c <GetDataSlab+0x11b70>
   31030:	b	31fdc <GetDataSlab+0x10fd0>
   31034:	b	323bc <GetDataSlab+0x113b0>
   31038:	b	3181c <GetDataSlab+0x10810>
   3103c:	b	31bfc <GetDataSlab+0x10bf0>
   31040:	b	31434 <GetDataSlab+0x10428>
   31044:	b	32f5c <GetDataSlab+0x11f50>
   31048:	b	3104c <GetDataSlab+0x10040>
   3104c:	ldr	r3, [r8]
   31050:	str	r3, [sp, #28]
   31054:	sub	r3, r3, #1
   31058:	str	r3, [sp, #32]
   3105c:	ldr	r3, [sp, #192]	; 0xc0
   31060:	ldr	r3, [r3]
   31064:	str	r3, [sp, #112]	; 0x70
   31068:	ldr	r3, [sp, #204]	; 0xcc
   3106c:	ldr	r3, [r3]
   31070:	str	r3, [sp, #20]
   31074:	ldr	r3, [sp, #208]	; 0xd0
   31078:	cmp	r3, #1
   3107c:	ble	310b0 <GetDataSlab+0x100a4>
   31080:	str	r8, [sp, #16]
   31084:	add	sl, sp, #36	; 0x24
   31088:	ldr	lr, [sp, #192]	; 0xc0
   3108c:	add	r9, sp, #112	; 0x70
   31090:	ldr	r3, [sp, #204]	; 0xcc
   31094:	add	r5, r3, #4
   31098:	ldr	r3, [sp, #196]	; 0xc4
   3109c:	add	r4, r3, #4
   310a0:	str	lr, [sp, #12]
   310a4:	mov	r6, #2
   310a8:	mov	fp, #0
   310ac:	b	40778 <GetDataSlab+0x1f76c>
   310b0:	mov	fp, #0
   310b4:	b	40804 <GetDataSlab+0x1f7f8>
   310b8:	ldr	r3, [sp, #20]
   310bc:	cmp	r3, #0
   310c0:	ble	3d4f0 <GetDataSlab+0x1c4e4>
   310c4:	mov	r3, #0
   310c8:	str	r3, [sp, #16]
   310cc:	b	311a0 <GetDataSlab+0x10194>
   310d0:	ldr	r2, [r8]
   310d4:	cmp	r2, #0
   310d8:	beq	310f0 <GetDataSlab+0x100e4>
   310dc:	ldr	r3, [sp, #12]
   310e0:	ldr	r3, [r3, #-4]
   310e4:	mul	r3, r3, r2
   310e8:	add	r5, r5, r3, lsl #3
   310ec:	add	fp, fp, r3
   310f0:	add	r9, r9, #1
   310f4:	ldr	r3, [sp, #208]	; 0xd0
   310f8:	cmp	r3, r9
   310fc:	beq	31188 <GetDataSlab+0x1017c>
   31100:	ldr	r3, [r6]
   31104:	add	r3, r3, #1
   31108:	str	r3, [r6]
   3110c:	add	r8, r8, #4
   31110:	ldr	r2, [sp, #8]
   31114:	ldr	r1, [r2, #4]!
   31118:	str	r2, [sp, #8]
   3111c:	mov	r0, r3
   31120:	bl	517e8 <__aeabi_idivmod>
   31124:	cmp	r1, #0
   31128:	bne	31174 <GetDataSlab+0x10168>
   3112c:	mov	r3, #0
   31130:	str	r3, [r6], #4
   31134:	add	r7, r7, #4
   31138:	str	r7, [sp, #12]
   3113c:	ldr	r4, [r7]
   31140:	mov	r1, r4
   31144:	mov	r0, fp
   31148:	bl	517e8 <__aeabi_idivmod>
   3114c:	subs	r3, r1, #0
   31150:	beq	310d0 <GetDataSlab+0x100c4>
   31154:	ldr	r2, [r7, #-4]
   31158:	ldr	r1, [r8]
   3115c:	sub	r3, r4, r3
   31160:	mla	r3, r1, r2, r3
   31164:	add	r5, r5, r3, lsl #3
   31168:	add	fp, fp, r3
   3116c:	b	310f0 <GetDataSlab+0x100e4>
   31170:	ldr	r9, [sp, #28]
   31174:	add	r3, sp, #152	; 0x98
   31178:	add	r3, r3, r9, lsl #2
   3117c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31180:	add	fp, fp, r3
   31184:	add	r5, r5, r3, lsl #3
   31188:	ldr	r3, [sp, #16]
   3118c:	add	r3, r3, sl
   31190:	str	r3, [sp, #16]
   31194:	ldr	r2, [sp, #20]
   31198:	cmp	r3, r2
   3119c:	bge	31268 <GetDataSlab+0x1025c>
   311a0:	ldr	r3, [sp, #196]	; 0xc4
   311a4:	ldr	r3, [r3]
   311a8:	cmp	r3, #0
   311ac:	addne	r5, r5, r3, lsl #3
   311b0:	addne	fp, fp, r3
   311b4:	ldr	r3, [sp, #204]	; 0xcc
   311b8:	ldr	sl, [r3]
   311bc:	cmp	sl, #0
   311c0:	ble	311f8 <GetDataSlab+0x101ec>
   311c4:	mov	r1, r5
   311c8:	ldr	r3, [sp, #4]
   311cc:	ldr	r2, [sp, #16]
   311d0:	add	r2, r3, r2, lsl #2
   311d4:	mov	r3, #0
   311d8:	vldmia	r1!, {d7}
   311dc:	vcvt.u32.f64	s15, d7
   311e0:	vstmia	r2!, {s15}
   311e4:	add	r3, r3, #1
   311e8:	ldr	r0, [sp, #204]	; 0xcc
   311ec:	ldr	sl, [r0]
   311f0:	cmp	sl, r3
   311f4:	bgt	311d8 <GetDataSlab+0x101cc>
   311f8:	ldr	r3, [sp, #192]	; 0xc0
   311fc:	ldr	r2, [r3]
   31200:	ldr	r3, [sp, #196]	; 0xc4
   31204:	ldr	r3, [r3]
   31208:	sub	r3, r2, r3
   3120c:	add	fp, fp, r3
   31210:	add	r5, r5, r3, lsl #3
   31214:	ldr	r3, [sp, #208]	; 0xd0
   31218:	cmp	r3, #1
   3121c:	ble	31188 <GetDataSlab+0x1017c>
   31220:	ldr	r3, [sp, #76]	; 0x4c
   31224:	add	r3, r3, #1
   31228:	str	r3, [sp, #76]	; 0x4c
   3122c:	ldr	r2, [sp, #204]	; 0xcc
   31230:	ldr	r1, [r2, #4]
   31234:	mov	r0, r3
   31238:	bl	517e8 <__aeabi_idivmod>
   3123c:	cmp	r1, #0
   31240:	bne	31170 <GetDataSlab+0x10164>
   31244:	add	r6, sp, #76	; 0x4c
   31248:	ldr	r3, [sp, #204]	; 0xcc
   3124c:	add	r3, r3, #4
   31250:	str	r3, [sp, #8]
   31254:	ldr	r3, [sp, #196]	; 0xc4
   31258:	add	r8, r3, #4
   3125c:	add	r7, sp, #112	; 0x70
   31260:	ldr	r9, [sp, #28]
   31264:	b	3112c <GetDataSlab+0x10120>
   31268:	mov	r3, #0
   3126c:	b	24fa8 <GetDataSlab+0x3f9c>
   31270:	ldr	r2, [r9]
   31274:	cmp	r2, #0
   31278:	beq	31290 <GetDataSlab+0x10284>
   3127c:	ldr	r3, [sp, #16]
   31280:	ldr	r3, [r3, #-4]
   31284:	mul	r3, r3, r2
   31288:	add	r5, r5, r3, lsl #3
   3128c:	add	fp, fp, r3
   31290:	add	sl, sl, #1
   31294:	ldr	r3, [sp, #208]	; 0xd0
   31298:	cmp	r3, sl
   3129c:	beq	31328 <GetDataSlab+0x1031c>
   312a0:	ldr	r3, [r6]
   312a4:	add	r3, r3, #1
   312a8:	str	r3, [r6]
   312ac:	add	r9, r9, #4
   312b0:	ldr	r2, [sp, #12]
   312b4:	ldr	r1, [r2, #4]!
   312b8:	str	r2, [sp, #12]
   312bc:	mov	r0, r3
   312c0:	bl	517e8 <__aeabi_idivmod>
   312c4:	cmp	r1, #0
   312c8:	bne	31314 <GetDataSlab+0x10308>
   312cc:	mov	r3, #0
   312d0:	str	r3, [r6], #4
   312d4:	add	r7, r7, #4
   312d8:	str	r7, [sp, #16]
   312dc:	ldr	r4, [r7]
   312e0:	mov	r1, r4
   312e4:	mov	r0, fp
   312e8:	bl	517e8 <__aeabi_idivmod>
   312ec:	subs	r3, r1, #0
   312f0:	beq	31270 <GetDataSlab+0x10264>
   312f4:	ldr	r2, [r7, #-4]
   312f8:	ldr	r1, [r9]
   312fc:	sub	r3, r4, r3
   31300:	mla	r3, r1, r2, r3
   31304:	add	r5, r5, r3, lsl #3
   31308:	add	fp, fp, r3
   3130c:	b	31290 <GetDataSlab+0x10284>
   31310:	mov	sl, #1
   31314:	add	r3, sp, #152	; 0x98
   31318:	add	r3, r3, sl, lsl #2
   3131c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31320:	add	fp, fp, r3
   31324:	add	r5, r5, r3, lsl #3
   31328:	ldr	r3, [sp, #24]
   3132c:	ldr	r2, [sp, #8]
   31330:	add	r3, r3, r2
   31334:	str	r3, [sp, #24]
   31338:	ldr	r2, [sp, #20]
   3133c:	cmp	r3, r2
   31340:	bge	3142c <GetDataSlab+0x10420>
   31344:	ldr	r3, [sp, #196]	; 0xc4
   31348:	ldr	r3, [r3]
   3134c:	cmp	r3, #0
   31350:	addne	r5, r5, r3, lsl #3
   31354:	addne	fp, fp, r3
   31358:	ldr	r3, [sp, #204]	; 0xcc
   3135c:	ldr	r3, [r3]
   31360:	str	r3, [sp, #8]
   31364:	cmp	r3, #0
   31368:	ble	313ac <GetDataSlab+0x103a0>
   3136c:	ldr	r3, [sp, #4]
   31370:	ldr	r2, [sp, #24]
   31374:	add	r2, r3, r2, lsl #2
   31378:	mov	r3, #0
   3137c:	vldr	d7, [r5]
   31380:	vcvt.u32.f64	s15, d7
   31384:	vstmia	r2!, {s15}
   31388:	ldr	r1, [r8]
   3138c:	add	r5, r5, r1, lsl #3
   31390:	add	fp, fp, r1
   31394:	add	r3, r3, #1
   31398:	ldr	r1, [sp, #204]	; 0xcc
   3139c:	ldr	r1, [r1]
   313a0:	str	r1, [sp, #8]
   313a4:	cmp	r1, r3
   313a8:	bgt	3137c <GetDataSlab+0x10370>
   313ac:	ldr	r3, [r8]
   313b0:	ldr	r2, [sp, #8]
   313b4:	mul	r3, r3, r2
   313b8:	ldr	r2, [sp, #192]	; 0xc0
   313bc:	ldr	r2, [r2]
   313c0:	sub	r3, r2, r3
   313c4:	ldr	r2, [sp, #196]	; 0xc4
   313c8:	ldr	r2, [r2]
   313cc:	sub	r3, r3, r2
   313d0:	add	fp, fp, r3
   313d4:	add	r5, r5, r3, lsl #3
   313d8:	ldr	r3, [sp, #208]	; 0xd0
   313dc:	cmp	r3, #1
   313e0:	ble	31328 <GetDataSlab+0x1031c>
   313e4:	ldr	r3, [sp, #76]	; 0x4c
   313e8:	add	r3, r3, #1
   313ec:	str	r3, [sp, #76]	; 0x4c
   313f0:	ldr	r2, [sp, #204]	; 0xcc
   313f4:	ldr	r1, [r2, #4]
   313f8:	mov	r0, r3
   313fc:	bl	517e8 <__aeabi_idivmod>
   31400:	cmp	r1, #0
   31404:	bne	31310 <GetDataSlab+0x10304>
   31408:	add	r6, sp, #76	; 0x4c
   3140c:	ldr	r3, [sp, #204]	; 0xcc
   31410:	add	r3, r3, #4
   31414:	str	r3, [sp, #12]
   31418:	ldr	r3, [sp, #196]	; 0xc4
   3141c:	add	r9, r3, #4
   31420:	add	r7, sp, #112	; 0x70
   31424:	mov	sl, #1
   31428:	b	312cc <GetDataSlab+0x102c0>
   3142c:	mov	r3, #0
   31430:	b	24fa8 <GetDataSlab+0x3f9c>
   31434:	ldr	r3, [r8]
   31438:	str	r3, [sp, #28]
   3143c:	sub	r3, r3, #1
   31440:	str	r3, [sp, #32]
   31444:	ldr	r3, [sp, #192]	; 0xc0
   31448:	ldr	r3, [r3]
   3144c:	str	r3, [sp, #112]	; 0x70
   31450:	ldr	r3, [sp, #204]	; 0xcc
   31454:	ldr	r3, [r3]
   31458:	str	r3, [sp, #20]
   3145c:	ldr	r3, [sp, #208]	; 0xd0
   31460:	cmp	r3, #1
   31464:	ble	31498 <GetDataSlab+0x1048c>
   31468:	str	r8, [sp, #16]
   3146c:	add	sl, sp, #36	; 0x24
   31470:	ldr	lr, [sp, #192]	; 0xc0
   31474:	add	r9, sp, #112	; 0x70
   31478:	ldr	r3, [sp, #204]	; 0xcc
   3147c:	add	r5, r3, #4
   31480:	ldr	r3, [sp, #196]	; 0xc4
   31484:	add	r4, r3, #4
   31488:	str	lr, [sp, #12]
   3148c:	mov	r6, #2
   31490:	mov	fp, #0
   31494:	b	40864 <GetDataSlab+0x1f858>
   31498:	mov	fp, #0
   3149c:	b	408f0 <GetDataSlab+0x1f8e4>
   314a0:	ldr	r3, [sp, #20]
   314a4:	cmp	r3, #0
   314a8:	ble	3d4f8 <GetDataSlab+0x1c4ec>
   314ac:	mov	r3, #0
   314b0:	str	r3, [sp, #16]
   314b4:	b	31588 <GetDataSlab+0x1057c>
   314b8:	ldr	r2, [r8]
   314bc:	cmp	r2, #0
   314c0:	beq	314d8 <GetDataSlab+0x104cc>
   314c4:	ldr	r3, [sp, #12]
   314c8:	ldr	r3, [r3, #-4]
   314cc:	mul	r3, r3, r2
   314d0:	add	r5, r5, r3, lsl #2
   314d4:	add	fp, fp, r3
   314d8:	add	r9, r9, #1
   314dc:	ldr	r3, [sp, #208]	; 0xd0
   314e0:	cmp	r3, r9
   314e4:	beq	31570 <GetDataSlab+0x10564>
   314e8:	ldr	r3, [r6]
   314ec:	add	r3, r3, #1
   314f0:	str	r3, [r6]
   314f4:	add	r8, r8, #4
   314f8:	ldr	r2, [sp, #8]
   314fc:	ldr	r1, [r2, #4]!
   31500:	str	r2, [sp, #8]
   31504:	mov	r0, r3
   31508:	bl	517e8 <__aeabi_idivmod>
   3150c:	cmp	r1, #0
   31510:	bne	3155c <GetDataSlab+0x10550>
   31514:	mov	r3, #0
   31518:	str	r3, [r6], #4
   3151c:	add	r7, r7, #4
   31520:	str	r7, [sp, #12]
   31524:	ldr	r4, [r7]
   31528:	mov	r1, r4
   3152c:	mov	r0, fp
   31530:	bl	517e8 <__aeabi_idivmod>
   31534:	subs	r3, r1, #0
   31538:	beq	314b8 <GetDataSlab+0x104ac>
   3153c:	ldr	r2, [r7, #-4]
   31540:	ldr	r1, [r8]
   31544:	sub	r3, r4, r3
   31548:	mla	r3, r1, r2, r3
   3154c:	add	r5, r5, r3, lsl #2
   31550:	add	fp, fp, r3
   31554:	b	314d8 <GetDataSlab+0x104cc>
   31558:	ldr	r9, [sp, #28]
   3155c:	add	r3, sp, #152	; 0x98
   31560:	add	r3, r3, r9, lsl #2
   31564:	ldr	r3, [r3, #-120]	; 0xffffff88
   31568:	add	fp, fp, r3
   3156c:	add	r5, r5, r3, lsl #2
   31570:	ldr	r3, [sp, #16]
   31574:	add	r3, r3, sl
   31578:	str	r3, [sp, #16]
   3157c:	ldr	r2, [sp, #20]
   31580:	cmp	r3, r2
   31584:	bge	31650 <GetDataSlab+0x10644>
   31588:	ldr	r3, [sp, #196]	; 0xc4
   3158c:	ldr	r3, [r3]
   31590:	cmp	r3, #0
   31594:	addne	r5, r5, r3, lsl #2
   31598:	addne	fp, fp, r3
   3159c:	ldr	r3, [sp, #204]	; 0xcc
   315a0:	ldr	sl, [r3]
   315a4:	cmp	sl, #0
   315a8:	ble	315e0 <GetDataSlab+0x105d4>
   315ac:	mov	r1, r5
   315b0:	ldr	r3, [sp, #4]
   315b4:	ldr	r2, [sp, #16]
   315b8:	add	r2, r3, r2, lsl #2
   315bc:	mov	r3, #0
   315c0:	vldmia	r1!, {s15}
   315c4:	vcvt.u32.f32	s15, s15
   315c8:	vstmia	r2!, {s15}
   315cc:	add	r3, r3, #1
   315d0:	ldr	r0, [sp, #204]	; 0xcc
   315d4:	ldr	sl, [r0]
   315d8:	cmp	sl, r3
   315dc:	bgt	315c0 <GetDataSlab+0x105b4>
   315e0:	ldr	r3, [sp, #192]	; 0xc0
   315e4:	ldr	r2, [r3]
   315e8:	ldr	r3, [sp, #196]	; 0xc4
   315ec:	ldr	r3, [r3]
   315f0:	sub	r3, r2, r3
   315f4:	add	fp, fp, r3
   315f8:	add	r5, r5, r3, lsl #2
   315fc:	ldr	r3, [sp, #208]	; 0xd0
   31600:	cmp	r3, #1
   31604:	ble	31570 <GetDataSlab+0x10564>
   31608:	ldr	r3, [sp, #76]	; 0x4c
   3160c:	add	r3, r3, #1
   31610:	str	r3, [sp, #76]	; 0x4c
   31614:	ldr	r2, [sp, #204]	; 0xcc
   31618:	ldr	r1, [r2, #4]
   3161c:	mov	r0, r3
   31620:	bl	517e8 <__aeabi_idivmod>
   31624:	cmp	r1, #0
   31628:	bne	31558 <GetDataSlab+0x1054c>
   3162c:	add	r6, sp, #76	; 0x4c
   31630:	ldr	r3, [sp, #204]	; 0xcc
   31634:	add	r3, r3, #4
   31638:	str	r3, [sp, #8]
   3163c:	ldr	r3, [sp, #196]	; 0xc4
   31640:	add	r8, r3, #4
   31644:	add	r7, sp, #112	; 0x70
   31648:	ldr	r9, [sp, #28]
   3164c:	b	31514 <GetDataSlab+0x10508>
   31650:	mov	r3, #0
   31654:	b	24fa8 <GetDataSlab+0x3f9c>
   31658:	ldr	r2, [r9]
   3165c:	cmp	r2, #0
   31660:	beq	31678 <GetDataSlab+0x1066c>
   31664:	ldr	r3, [sp, #16]
   31668:	ldr	r3, [r3, #-4]
   3166c:	mul	r3, r3, r2
   31670:	add	r5, r5, r3, lsl #2
   31674:	add	fp, fp, r3
   31678:	add	sl, sl, #1
   3167c:	ldr	r3, [sp, #208]	; 0xd0
   31680:	cmp	r3, sl
   31684:	beq	31710 <GetDataSlab+0x10704>
   31688:	ldr	r3, [r6]
   3168c:	add	r3, r3, #1
   31690:	str	r3, [r6]
   31694:	add	r9, r9, #4
   31698:	ldr	r2, [sp, #12]
   3169c:	ldr	r1, [r2, #4]!
   316a0:	str	r2, [sp, #12]
   316a4:	mov	r0, r3
   316a8:	bl	517e8 <__aeabi_idivmod>
   316ac:	cmp	r1, #0
   316b0:	bne	316fc <GetDataSlab+0x106f0>
   316b4:	mov	r3, #0
   316b8:	str	r3, [r6], #4
   316bc:	add	r7, r7, #4
   316c0:	str	r7, [sp, #16]
   316c4:	ldr	r4, [r7]
   316c8:	mov	r1, r4
   316cc:	mov	r0, fp
   316d0:	bl	517e8 <__aeabi_idivmod>
   316d4:	subs	r3, r1, #0
   316d8:	beq	31658 <GetDataSlab+0x1064c>
   316dc:	ldr	r2, [r7, #-4]
   316e0:	ldr	r1, [r9]
   316e4:	sub	r3, r4, r3
   316e8:	mla	r3, r1, r2, r3
   316ec:	add	r5, r5, r3, lsl #2
   316f0:	add	fp, fp, r3
   316f4:	b	31678 <GetDataSlab+0x1066c>
   316f8:	mov	sl, #1
   316fc:	add	r3, sp, #152	; 0x98
   31700:	add	r3, r3, sl, lsl #2
   31704:	ldr	r3, [r3, #-120]	; 0xffffff88
   31708:	add	fp, fp, r3
   3170c:	add	r5, r5, r3, lsl #2
   31710:	ldr	r3, [sp, #24]
   31714:	ldr	r2, [sp, #8]
   31718:	add	r3, r3, r2
   3171c:	str	r3, [sp, #24]
   31720:	ldr	r2, [sp, #20]
   31724:	cmp	r3, r2
   31728:	bge	31814 <GetDataSlab+0x10808>
   3172c:	ldr	r3, [sp, #196]	; 0xc4
   31730:	ldr	r3, [r3]
   31734:	cmp	r3, #0
   31738:	addne	r5, r5, r3, lsl #2
   3173c:	addne	fp, fp, r3
   31740:	ldr	r3, [sp, #204]	; 0xcc
   31744:	ldr	r3, [r3]
   31748:	str	r3, [sp, #8]
   3174c:	cmp	r3, #0
   31750:	ble	31794 <GetDataSlab+0x10788>
   31754:	ldr	r3, [sp, #4]
   31758:	ldr	r2, [sp, #24]
   3175c:	add	r2, r3, r2, lsl #2
   31760:	mov	r3, #0
   31764:	vldr	s15, [r5]
   31768:	vcvt.u32.f32	s15, s15
   3176c:	vstmia	r2!, {s15}
   31770:	ldr	r1, [r8]
   31774:	add	r5, r5, r1, lsl #2
   31778:	add	fp, fp, r1
   3177c:	add	r3, r3, #1
   31780:	ldr	r1, [sp, #204]	; 0xcc
   31784:	ldr	r1, [r1]
   31788:	str	r1, [sp, #8]
   3178c:	cmp	r1, r3
   31790:	bgt	31764 <GetDataSlab+0x10758>
   31794:	ldr	r3, [r8]
   31798:	ldr	r2, [sp, #8]
   3179c:	mul	r3, r3, r2
   317a0:	ldr	r2, [sp, #192]	; 0xc0
   317a4:	ldr	r2, [r2]
   317a8:	sub	r3, r2, r3
   317ac:	ldr	r2, [sp, #196]	; 0xc4
   317b0:	ldr	r2, [r2]
   317b4:	sub	r3, r3, r2
   317b8:	add	fp, fp, r3
   317bc:	add	r5, r5, r3, lsl #2
   317c0:	ldr	r3, [sp, #208]	; 0xd0
   317c4:	cmp	r3, #1
   317c8:	ble	31710 <GetDataSlab+0x10704>
   317cc:	ldr	r3, [sp, #76]	; 0x4c
   317d0:	add	r3, r3, #1
   317d4:	str	r3, [sp, #76]	; 0x4c
   317d8:	ldr	r2, [sp, #204]	; 0xcc
   317dc:	ldr	r1, [r2, #4]
   317e0:	mov	r0, r3
   317e4:	bl	517e8 <__aeabi_idivmod>
   317e8:	cmp	r1, #0
   317ec:	bne	316f8 <GetDataSlab+0x106ec>
   317f0:	add	r6, sp, #76	; 0x4c
   317f4:	ldr	r3, [sp, #204]	; 0xcc
   317f8:	add	r3, r3, #4
   317fc:	str	r3, [sp, #12]
   31800:	ldr	r3, [sp, #196]	; 0xc4
   31804:	add	r9, r3, #4
   31808:	add	r7, sp, #112	; 0x70
   3180c:	mov	sl, #1
   31810:	b	316b4 <GetDataSlab+0x106a8>
   31814:	mov	r3, #0
   31818:	b	24fa8 <GetDataSlab+0x3f9c>
   3181c:	ldr	r3, [r8]
   31820:	str	r3, [sp, #28]
   31824:	sub	r3, r3, #1
   31828:	str	r3, [sp, #32]
   3182c:	ldr	r3, [sp, #192]	; 0xc0
   31830:	ldr	r3, [r3]
   31834:	str	r3, [sp, #112]	; 0x70
   31838:	ldr	r3, [sp, #204]	; 0xcc
   3183c:	ldr	r3, [r3]
   31840:	str	r3, [sp, #20]
   31844:	ldr	r3, [sp, #208]	; 0xd0
   31848:	cmp	r3, #1
   3184c:	ble	31880 <GetDataSlab+0x10874>
   31850:	str	r8, [sp, #16]
   31854:	add	sl, sp, #36	; 0x24
   31858:	ldr	lr, [sp, #192]	; 0xc0
   3185c:	add	r9, sp, #112	; 0x70
   31860:	ldr	r3, [sp, #204]	; 0xcc
   31864:	add	r5, r3, #4
   31868:	ldr	r3, [sp, #196]	; 0xc4
   3186c:	add	r4, r3, #4
   31870:	str	lr, [sp, #12]
   31874:	mov	r6, #2
   31878:	mov	fp, #0
   3187c:	b	40950 <GetDataSlab+0x1f944>
   31880:	mov	fp, #0
   31884:	b	409dc <GetDataSlab+0x1f9d0>
   31888:	ldr	r3, [sp, #20]
   3188c:	cmp	r3, #0
   31890:	ble	3d500 <GetDataSlab+0x1c4f4>
   31894:	mov	r3, #0
   31898:	str	r3, [sp, #16]
   3189c:	b	31970 <GetDataSlab+0x10964>
   318a0:	ldr	r2, [r8]
   318a4:	cmp	r2, #0
   318a8:	beq	318c0 <GetDataSlab+0x108b4>
   318ac:	ldr	r3, [sp, #12]
   318b0:	ldr	r3, [r3, #-4]
   318b4:	mul	r3, r3, r2
   318b8:	add	r5, r5, r3, lsl #2
   318bc:	add	fp, fp, r3
   318c0:	add	r9, r9, #1
   318c4:	ldr	r3, [sp, #208]	; 0xd0
   318c8:	cmp	r3, r9
   318cc:	beq	31958 <GetDataSlab+0x1094c>
   318d0:	ldr	r3, [r6]
   318d4:	add	r3, r3, #1
   318d8:	str	r3, [r6]
   318dc:	add	r8, r8, #4
   318e0:	ldr	r2, [sp, #8]
   318e4:	ldr	r1, [r2, #4]!
   318e8:	str	r2, [sp, #8]
   318ec:	mov	r0, r3
   318f0:	bl	517e8 <__aeabi_idivmod>
   318f4:	cmp	r1, #0
   318f8:	bne	31944 <GetDataSlab+0x10938>
   318fc:	mov	r3, #0
   31900:	str	r3, [r6], #4
   31904:	add	r7, r7, #4
   31908:	str	r7, [sp, #12]
   3190c:	ldr	r4, [r7]
   31910:	mov	r1, r4
   31914:	mov	r0, fp
   31918:	bl	517e8 <__aeabi_idivmod>
   3191c:	subs	r3, r1, #0
   31920:	beq	318a0 <GetDataSlab+0x10894>
   31924:	ldr	r2, [r7, #-4]
   31928:	ldr	r1, [r8]
   3192c:	sub	r3, r4, r3
   31930:	mla	r3, r1, r2, r3
   31934:	add	r5, r5, r3, lsl #2
   31938:	add	fp, fp, r3
   3193c:	b	318c0 <GetDataSlab+0x108b4>
   31940:	ldr	r9, [sp, #28]
   31944:	add	r3, sp, #152	; 0x98
   31948:	add	r3, r3, r9, lsl #2
   3194c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31950:	add	fp, fp, r3
   31954:	add	r5, r5, r3, lsl #2
   31958:	ldr	r3, [sp, #16]
   3195c:	add	r3, r3, sl
   31960:	str	r3, [sp, #16]
   31964:	ldr	r2, [sp, #20]
   31968:	cmp	r3, r2
   3196c:	bge	31a34 <GetDataSlab+0x10a28>
   31970:	ldr	r3, [sp, #196]	; 0xc4
   31974:	ldr	r3, [r3]
   31978:	cmp	r3, #0
   3197c:	addne	r5, r5, r3, lsl #2
   31980:	addne	fp, fp, r3
   31984:	ldr	r3, [sp, #204]	; 0xcc
   31988:	ldr	sl, [r3]
   3198c:	cmp	sl, #0
   31990:	ble	319c4 <GetDataSlab+0x109b8>
   31994:	sub	r0, r5, #4
   31998:	ldr	r3, [sp, #4]
   3199c:	ldr	r2, [sp, #16]
   319a0:	add	r1, r3, r2, lsl #2
   319a4:	mov	r2, #0
   319a8:	ldr	r3, [r0, #4]!
   319ac:	str	r3, [r1], #4
   319b0:	add	r2, r2, #1
   319b4:	ldr	r3, [sp, #204]	; 0xcc
   319b8:	ldr	sl, [r3]
   319bc:	cmp	sl, r2
   319c0:	bgt	319a8 <GetDataSlab+0x1099c>
   319c4:	ldr	r3, [sp, #192]	; 0xc0
   319c8:	ldr	r2, [r3]
   319cc:	ldr	r3, [sp, #196]	; 0xc4
   319d0:	ldr	r3, [r3]
   319d4:	sub	r3, r2, r3
   319d8:	add	fp, fp, r3
   319dc:	add	r5, r5, r3, lsl #2
   319e0:	ldr	r3, [sp, #208]	; 0xd0
   319e4:	cmp	r3, #1
   319e8:	ble	31958 <GetDataSlab+0x1094c>
   319ec:	ldr	r3, [sp, #76]	; 0x4c
   319f0:	add	r3, r3, #1
   319f4:	str	r3, [sp, #76]	; 0x4c
   319f8:	ldr	r2, [sp, #204]	; 0xcc
   319fc:	ldr	r1, [r2, #4]
   31a00:	mov	r0, r3
   31a04:	bl	517e8 <__aeabi_idivmod>
   31a08:	cmp	r1, #0
   31a0c:	bne	31940 <GetDataSlab+0x10934>
   31a10:	add	r6, sp, #76	; 0x4c
   31a14:	ldr	r3, [sp, #204]	; 0xcc
   31a18:	add	r3, r3, #4
   31a1c:	str	r3, [sp, #8]
   31a20:	ldr	r3, [sp, #196]	; 0xc4
   31a24:	add	r8, r3, #4
   31a28:	add	r7, sp, #112	; 0x70
   31a2c:	ldr	r9, [sp, #28]
   31a30:	b	318fc <GetDataSlab+0x108f0>
   31a34:	mov	r3, #0
   31a38:	b	24fa8 <GetDataSlab+0x3f9c>
   31a3c:	ldr	r2, [r9]
   31a40:	cmp	r2, #0
   31a44:	beq	31a5c <GetDataSlab+0x10a50>
   31a48:	ldr	r3, [sp, #16]
   31a4c:	ldr	r3, [r3, #-4]
   31a50:	mul	r3, r3, r2
   31a54:	add	r5, r5, r3, lsl #2
   31a58:	add	fp, fp, r3
   31a5c:	add	sl, sl, #1
   31a60:	ldr	r3, [sp, #208]	; 0xd0
   31a64:	cmp	r3, sl
   31a68:	beq	31af4 <GetDataSlab+0x10ae8>
   31a6c:	ldr	r3, [r6]
   31a70:	add	r3, r3, #1
   31a74:	str	r3, [r6]
   31a78:	add	r9, r9, #4
   31a7c:	ldr	r2, [sp, #12]
   31a80:	ldr	r1, [r2, #4]!
   31a84:	str	r2, [sp, #12]
   31a88:	mov	r0, r3
   31a8c:	bl	517e8 <__aeabi_idivmod>
   31a90:	cmp	r1, #0
   31a94:	bne	31ae0 <GetDataSlab+0x10ad4>
   31a98:	mov	r3, #0
   31a9c:	str	r3, [r6], #4
   31aa0:	add	r7, r7, #4
   31aa4:	str	r7, [sp, #16]
   31aa8:	ldr	r4, [r7]
   31aac:	mov	r1, r4
   31ab0:	mov	r0, fp
   31ab4:	bl	517e8 <__aeabi_idivmod>
   31ab8:	subs	r3, r1, #0
   31abc:	beq	31a3c <GetDataSlab+0x10a30>
   31ac0:	ldr	r2, [r7, #-4]
   31ac4:	ldr	r1, [r9]
   31ac8:	sub	r3, r4, r3
   31acc:	mla	r3, r1, r2, r3
   31ad0:	add	r5, r5, r3, lsl #2
   31ad4:	add	fp, fp, r3
   31ad8:	b	31a5c <GetDataSlab+0x10a50>
   31adc:	mov	sl, #1
   31ae0:	add	r3, sp, #152	; 0x98
   31ae4:	add	r3, r3, sl, lsl #2
   31ae8:	ldr	r3, [r3, #-120]	; 0xffffff88
   31aec:	add	fp, fp, r3
   31af0:	add	r5, r5, r3, lsl #2
   31af4:	ldr	r3, [sp, #24]
   31af8:	ldr	r2, [sp, #8]
   31afc:	add	r3, r3, r2
   31b00:	str	r3, [sp, #24]
   31b04:	ldr	r2, [sp, #20]
   31b08:	cmp	r3, r2
   31b0c:	bge	31bf4 <GetDataSlab+0x10be8>
   31b10:	ldr	r3, [sp, #196]	; 0xc4
   31b14:	ldr	r3, [r3]
   31b18:	cmp	r3, #0
   31b1c:	addne	r5, r5, r3, lsl #2
   31b20:	addne	fp, fp, r3
   31b24:	ldr	r3, [sp, #204]	; 0xcc
   31b28:	ldr	r3, [r3]
   31b2c:	str	r3, [sp, #8]
   31b30:	cmp	r3, #0
   31b34:	ble	31b74 <GetDataSlab+0x10b68>
   31b38:	ldr	r3, [sp, #4]
   31b3c:	ldr	r2, [sp, #24]
   31b40:	add	r2, r3, r2, lsl #2
   31b44:	mov	r3, #0
   31b48:	ldr	r1, [r5]
   31b4c:	str	r1, [r2], #4
   31b50:	ldr	r1, [r8]
   31b54:	add	r5, r5, r1, lsl #2
   31b58:	add	fp, fp, r1
   31b5c:	add	r3, r3, #1
   31b60:	ldr	r1, [sp, #204]	; 0xcc
   31b64:	ldr	r1, [r1]
   31b68:	str	r1, [sp, #8]
   31b6c:	cmp	r1, r3
   31b70:	bgt	31b48 <GetDataSlab+0x10b3c>
   31b74:	ldr	r3, [r8]
   31b78:	ldr	r2, [sp, #8]
   31b7c:	mul	r3, r3, r2
   31b80:	ldr	r2, [sp, #192]	; 0xc0
   31b84:	ldr	r2, [r2]
   31b88:	sub	r3, r2, r3
   31b8c:	ldr	r2, [sp, #196]	; 0xc4
   31b90:	ldr	r2, [r2]
   31b94:	sub	r3, r3, r2
   31b98:	add	fp, fp, r3
   31b9c:	add	r5, r5, r3, lsl #2
   31ba0:	ldr	r3, [sp, #208]	; 0xd0
   31ba4:	cmp	r3, #1
   31ba8:	ble	31af4 <GetDataSlab+0x10ae8>
   31bac:	ldr	r3, [sp, #76]	; 0x4c
   31bb0:	add	r3, r3, #1
   31bb4:	str	r3, [sp, #76]	; 0x4c
   31bb8:	ldr	r2, [sp, #204]	; 0xcc
   31bbc:	ldr	r1, [r2, #4]
   31bc0:	mov	r0, r3
   31bc4:	bl	517e8 <__aeabi_idivmod>
   31bc8:	cmp	r1, #0
   31bcc:	bne	31adc <GetDataSlab+0x10ad0>
   31bd0:	add	r6, sp, #76	; 0x4c
   31bd4:	ldr	r3, [sp, #204]	; 0xcc
   31bd8:	add	r3, r3, #4
   31bdc:	str	r3, [sp, #12]
   31be0:	ldr	r3, [sp, #196]	; 0xc4
   31be4:	add	r9, r3, #4
   31be8:	add	r7, sp, #112	; 0x70
   31bec:	mov	sl, #1
   31bf0:	b	31a98 <GetDataSlab+0x10a8c>
   31bf4:	mov	r3, #0
   31bf8:	b	24fa8 <GetDataSlab+0x3f9c>
   31bfc:	ldr	r3, [r8]
   31c00:	str	r3, [sp, #28]
   31c04:	sub	r3, r3, #1
   31c08:	str	r3, [sp, #32]
   31c0c:	ldr	r3, [sp, #192]	; 0xc0
   31c10:	ldr	r3, [r3]
   31c14:	str	r3, [sp, #112]	; 0x70
   31c18:	ldr	r3, [sp, #204]	; 0xcc
   31c1c:	ldr	r3, [r3]
   31c20:	str	r3, [sp, #20]
   31c24:	ldr	r3, [sp, #208]	; 0xd0
   31c28:	cmp	r3, #1
   31c2c:	ble	31c60 <GetDataSlab+0x10c54>
   31c30:	str	r8, [sp, #16]
   31c34:	add	sl, sp, #36	; 0x24
   31c38:	ldr	lr, [sp, #192]	; 0xc0
   31c3c:	add	r9, sp, #112	; 0x70
   31c40:	ldr	r3, [sp, #204]	; 0xcc
   31c44:	add	r5, r3, #4
   31c48:	ldr	r3, [sp, #196]	; 0xc4
   31c4c:	add	r4, r3, #4
   31c50:	str	lr, [sp, #12]
   31c54:	mov	r6, #2
   31c58:	mov	fp, #0
   31c5c:	b	40a3c <GetDataSlab+0x1fa30>
   31c60:	mov	fp, #0
   31c64:	b	40ac8 <GetDataSlab+0x1fabc>
   31c68:	ldr	r3, [sp, #20]
   31c6c:	cmp	r3, #0
   31c70:	ble	3d508 <GetDataSlab+0x1c4fc>
   31c74:	mov	r3, #0
   31c78:	str	r3, [sp, #16]
   31c7c:	b	31d50 <GetDataSlab+0x10d44>
   31c80:	ldr	r2, [r8]
   31c84:	cmp	r2, #0
   31c88:	beq	31ca0 <GetDataSlab+0x10c94>
   31c8c:	ldr	r3, [sp, #12]
   31c90:	ldr	r3, [r3, #-4]
   31c94:	mul	r3, r3, r2
   31c98:	add	r5, r5, r3, lsl #2
   31c9c:	add	fp, fp, r3
   31ca0:	add	r9, r9, #1
   31ca4:	ldr	r3, [sp, #208]	; 0xd0
   31ca8:	cmp	r3, r9
   31cac:	beq	31d38 <GetDataSlab+0x10d2c>
   31cb0:	ldr	r3, [r6]
   31cb4:	add	r3, r3, #1
   31cb8:	str	r3, [r6]
   31cbc:	add	r8, r8, #4
   31cc0:	ldr	r2, [sp, #8]
   31cc4:	ldr	r1, [r2, #4]!
   31cc8:	str	r2, [sp, #8]
   31ccc:	mov	r0, r3
   31cd0:	bl	517e8 <__aeabi_idivmod>
   31cd4:	cmp	r1, #0
   31cd8:	bne	31d24 <GetDataSlab+0x10d18>
   31cdc:	mov	r3, #0
   31ce0:	str	r3, [r6], #4
   31ce4:	add	r7, r7, #4
   31ce8:	str	r7, [sp, #12]
   31cec:	ldr	r4, [r7]
   31cf0:	mov	r1, r4
   31cf4:	mov	r0, fp
   31cf8:	bl	517e8 <__aeabi_idivmod>
   31cfc:	subs	r3, r1, #0
   31d00:	beq	31c80 <GetDataSlab+0x10c74>
   31d04:	ldr	r2, [r7, #-4]
   31d08:	ldr	r1, [r8]
   31d0c:	sub	r3, r4, r3
   31d10:	mla	r3, r1, r2, r3
   31d14:	add	r5, r5, r3, lsl #2
   31d18:	add	fp, fp, r3
   31d1c:	b	31ca0 <GetDataSlab+0x10c94>
   31d20:	ldr	r9, [sp, #28]
   31d24:	add	r3, sp, #152	; 0x98
   31d28:	add	r3, r3, r9, lsl #2
   31d2c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31d30:	add	fp, fp, r3
   31d34:	add	r5, r5, r3, lsl #2
   31d38:	ldr	r3, [sp, #16]
   31d3c:	add	r3, r3, sl
   31d40:	str	r3, [sp, #16]
   31d44:	ldr	r2, [sp, #20]
   31d48:	cmp	r3, r2
   31d4c:	bge	31e14 <GetDataSlab+0x10e08>
   31d50:	ldr	r3, [sp, #196]	; 0xc4
   31d54:	ldr	r3, [r3]
   31d58:	cmp	r3, #0
   31d5c:	addne	r5, r5, r3, lsl #2
   31d60:	addne	fp, fp, r3
   31d64:	ldr	r3, [sp, #204]	; 0xcc
   31d68:	ldr	sl, [r3]
   31d6c:	cmp	sl, #0
   31d70:	ble	31da4 <GetDataSlab+0x10d98>
   31d74:	sub	r0, r5, #4
   31d78:	ldr	r3, [sp, #4]
   31d7c:	ldr	r2, [sp, #16]
   31d80:	add	r1, r3, r2, lsl #2
   31d84:	mov	r2, #0
   31d88:	ldr	r3, [r0, #4]!
   31d8c:	str	r3, [r1], #4
   31d90:	add	r2, r2, #1
   31d94:	ldr	r3, [sp, #204]	; 0xcc
   31d98:	ldr	sl, [r3]
   31d9c:	cmp	sl, r2
   31da0:	bgt	31d88 <GetDataSlab+0x10d7c>
   31da4:	ldr	r3, [sp, #192]	; 0xc0
   31da8:	ldr	r2, [r3]
   31dac:	ldr	r3, [sp, #196]	; 0xc4
   31db0:	ldr	r3, [r3]
   31db4:	sub	r3, r2, r3
   31db8:	add	fp, fp, r3
   31dbc:	add	r5, r5, r3, lsl #2
   31dc0:	ldr	r3, [sp, #208]	; 0xd0
   31dc4:	cmp	r3, #1
   31dc8:	ble	31d38 <GetDataSlab+0x10d2c>
   31dcc:	ldr	r3, [sp, #76]	; 0x4c
   31dd0:	add	r3, r3, #1
   31dd4:	str	r3, [sp, #76]	; 0x4c
   31dd8:	ldr	r2, [sp, #204]	; 0xcc
   31ddc:	ldr	r1, [r2, #4]
   31de0:	mov	r0, r3
   31de4:	bl	517e8 <__aeabi_idivmod>
   31de8:	cmp	r1, #0
   31dec:	bne	31d20 <GetDataSlab+0x10d14>
   31df0:	add	r6, sp, #76	; 0x4c
   31df4:	ldr	r3, [sp, #204]	; 0xcc
   31df8:	add	r3, r3, #4
   31dfc:	str	r3, [sp, #8]
   31e00:	ldr	r3, [sp, #196]	; 0xc4
   31e04:	add	r8, r3, #4
   31e08:	add	r7, sp, #112	; 0x70
   31e0c:	ldr	r9, [sp, #28]
   31e10:	b	31cdc <GetDataSlab+0x10cd0>
   31e14:	mov	r3, #0
   31e18:	b	24fa8 <GetDataSlab+0x3f9c>
   31e1c:	ldr	r2, [r9]
   31e20:	cmp	r2, #0
   31e24:	beq	31e3c <GetDataSlab+0x10e30>
   31e28:	ldr	r3, [sp, #16]
   31e2c:	ldr	r3, [r3, #-4]
   31e30:	mul	r3, r3, r2
   31e34:	add	r5, r5, r3, lsl #2
   31e38:	add	fp, fp, r3
   31e3c:	add	sl, sl, #1
   31e40:	ldr	r3, [sp, #208]	; 0xd0
   31e44:	cmp	r3, sl
   31e48:	beq	31ed4 <GetDataSlab+0x10ec8>
   31e4c:	ldr	r3, [r6]
   31e50:	add	r3, r3, #1
   31e54:	str	r3, [r6]
   31e58:	add	r9, r9, #4
   31e5c:	ldr	r2, [sp, #12]
   31e60:	ldr	r1, [r2, #4]!
   31e64:	str	r2, [sp, #12]
   31e68:	mov	r0, r3
   31e6c:	bl	517e8 <__aeabi_idivmod>
   31e70:	cmp	r1, #0
   31e74:	bne	31ec0 <GetDataSlab+0x10eb4>
   31e78:	mov	r3, #0
   31e7c:	str	r3, [r6], #4
   31e80:	add	r7, r7, #4
   31e84:	str	r7, [sp, #16]
   31e88:	ldr	r4, [r7]
   31e8c:	mov	r1, r4
   31e90:	mov	r0, fp
   31e94:	bl	517e8 <__aeabi_idivmod>
   31e98:	subs	r3, r1, #0
   31e9c:	beq	31e1c <GetDataSlab+0x10e10>
   31ea0:	ldr	r2, [r7, #-4]
   31ea4:	ldr	r1, [r9]
   31ea8:	sub	r3, r4, r3
   31eac:	mla	r3, r1, r2, r3
   31eb0:	add	r5, r5, r3, lsl #2
   31eb4:	add	fp, fp, r3
   31eb8:	b	31e3c <GetDataSlab+0x10e30>
   31ebc:	mov	sl, #1
   31ec0:	add	r3, sp, #152	; 0x98
   31ec4:	add	r3, r3, sl, lsl #2
   31ec8:	ldr	r3, [r3, #-120]	; 0xffffff88
   31ecc:	add	fp, fp, r3
   31ed0:	add	r5, r5, r3, lsl #2
   31ed4:	ldr	r3, [sp, #24]
   31ed8:	ldr	r2, [sp, #8]
   31edc:	add	r3, r3, r2
   31ee0:	str	r3, [sp, #24]
   31ee4:	ldr	r2, [sp, #20]
   31ee8:	cmp	r3, r2
   31eec:	bge	31fd4 <GetDataSlab+0x10fc8>
   31ef0:	ldr	r3, [sp, #196]	; 0xc4
   31ef4:	ldr	r3, [r3]
   31ef8:	cmp	r3, #0
   31efc:	addne	r5, r5, r3, lsl #2
   31f00:	addne	fp, fp, r3
   31f04:	ldr	r3, [sp, #204]	; 0xcc
   31f08:	ldr	r3, [r3]
   31f0c:	str	r3, [sp, #8]
   31f10:	cmp	r3, #0
   31f14:	ble	31f54 <GetDataSlab+0x10f48>
   31f18:	ldr	r3, [sp, #4]
   31f1c:	ldr	r2, [sp, #24]
   31f20:	add	r2, r3, r2, lsl #2
   31f24:	mov	r3, #0
   31f28:	ldr	r1, [r5]
   31f2c:	str	r1, [r2], #4
   31f30:	ldr	r1, [r8]
   31f34:	add	r5, r5, r1, lsl #2
   31f38:	add	fp, fp, r1
   31f3c:	add	r3, r3, #1
   31f40:	ldr	r1, [sp, #204]	; 0xcc
   31f44:	ldr	r1, [r1]
   31f48:	str	r1, [sp, #8]
   31f4c:	cmp	r1, r3
   31f50:	bgt	31f28 <GetDataSlab+0x10f1c>
   31f54:	ldr	r3, [r8]
   31f58:	ldr	r2, [sp, #8]
   31f5c:	mul	r3, r3, r2
   31f60:	ldr	r2, [sp, #192]	; 0xc0
   31f64:	ldr	r2, [r2]
   31f68:	sub	r3, r2, r3
   31f6c:	ldr	r2, [sp, #196]	; 0xc4
   31f70:	ldr	r2, [r2]
   31f74:	sub	r3, r3, r2
   31f78:	add	fp, fp, r3
   31f7c:	add	r5, r5, r3, lsl #2
   31f80:	ldr	r3, [sp, #208]	; 0xd0
   31f84:	cmp	r3, #1
   31f88:	ble	31ed4 <GetDataSlab+0x10ec8>
   31f8c:	ldr	r3, [sp, #76]	; 0x4c
   31f90:	add	r3, r3, #1
   31f94:	str	r3, [sp, #76]	; 0x4c
   31f98:	ldr	r2, [sp, #204]	; 0xcc
   31f9c:	ldr	r1, [r2, #4]
   31fa0:	mov	r0, r3
   31fa4:	bl	517e8 <__aeabi_idivmod>
   31fa8:	cmp	r1, #0
   31fac:	bne	31ebc <GetDataSlab+0x10eb0>
   31fb0:	add	r6, sp, #76	; 0x4c
   31fb4:	ldr	r3, [sp, #204]	; 0xcc
   31fb8:	add	r3, r3, #4
   31fbc:	str	r3, [sp, #12]
   31fc0:	ldr	r3, [sp, #196]	; 0xc4
   31fc4:	add	r9, r3, #4
   31fc8:	add	r7, sp, #112	; 0x70
   31fcc:	mov	sl, #1
   31fd0:	b	31e78 <GetDataSlab+0x10e6c>
   31fd4:	mov	r3, #0
   31fd8:	b	24fa8 <GetDataSlab+0x3f9c>
   31fdc:	ldr	r3, [r8]
   31fe0:	str	r3, [sp, #28]
   31fe4:	sub	r3, r3, #1
   31fe8:	str	r3, [sp, #32]
   31fec:	ldr	r3, [sp, #192]	; 0xc0
   31ff0:	ldr	r3, [r3]
   31ff4:	str	r3, [sp, #112]	; 0x70
   31ff8:	ldr	r3, [sp, #204]	; 0xcc
   31ffc:	ldr	r3, [r3]
   32000:	str	r3, [sp, #20]
   32004:	ldr	r3, [sp, #208]	; 0xd0
   32008:	cmp	r3, #1
   3200c:	ble	32040 <GetDataSlab+0x11034>
   32010:	str	r8, [sp, #16]
   32014:	add	sl, sp, #36	; 0x24
   32018:	ldr	lr, [sp, #192]	; 0xc0
   3201c:	add	r9, sp, #112	; 0x70
   32020:	ldr	r3, [sp, #204]	; 0xcc
   32024:	add	r5, r3, #4
   32028:	ldr	r3, [sp, #196]	; 0xc4
   3202c:	add	r4, r3, #4
   32030:	str	lr, [sp, #12]
   32034:	mov	r6, #2
   32038:	mov	fp, #0
   3203c:	b	40b28 <GetDataSlab+0x1fb1c>
   32040:	mov	fp, #0
   32044:	b	40bb4 <GetDataSlab+0x1fba8>
   32048:	ldr	r3, [sp, #20]
   3204c:	cmp	r3, #0
   32050:	ble	3d510 <GetDataSlab+0x1c504>
   32054:	mov	r3, #0
   32058:	str	r3, [sp, #16]
   3205c:	b	32130 <GetDataSlab+0x11124>
   32060:	ldr	r2, [r8]
   32064:	cmp	r2, #0
   32068:	beq	32080 <GetDataSlab+0x11074>
   3206c:	ldr	r3, [sp, #12]
   32070:	ldr	r3, [r3, #-4]
   32074:	mul	r3, r3, r2
   32078:	add	r6, r6, r3, lsl #1
   3207c:	add	fp, fp, r3
   32080:	add	r9, r9, #1
   32084:	ldr	r3, [sp, #208]	; 0xd0
   32088:	cmp	r3, r9
   3208c:	beq	32118 <GetDataSlab+0x1110c>
   32090:	ldr	r3, [r5]
   32094:	add	r3, r3, #1
   32098:	str	r3, [r5]
   3209c:	add	r8, r8, #4
   320a0:	ldr	r2, [sp, #8]
   320a4:	ldr	r1, [r2, #4]!
   320a8:	str	r2, [sp, #8]
   320ac:	mov	r0, r3
   320b0:	bl	517e8 <__aeabi_idivmod>
   320b4:	cmp	r1, #0
   320b8:	bne	32104 <GetDataSlab+0x110f8>
   320bc:	mov	r3, #0
   320c0:	str	r3, [r5], #4
   320c4:	add	r7, r7, #4
   320c8:	str	r7, [sp, #12]
   320cc:	ldr	r4, [r7]
   320d0:	mov	r1, r4
   320d4:	mov	r0, fp
   320d8:	bl	517e8 <__aeabi_idivmod>
   320dc:	subs	r3, r1, #0
   320e0:	beq	32060 <GetDataSlab+0x11054>
   320e4:	ldr	r2, [r7, #-4]
   320e8:	ldr	r1, [r8]
   320ec:	sub	r3, r4, r3
   320f0:	mla	r3, r1, r2, r3
   320f4:	add	r6, r6, r3, lsl #1
   320f8:	add	fp, fp, r3
   320fc:	b	32080 <GetDataSlab+0x11074>
   32100:	ldr	r9, [sp, #28]
   32104:	add	r3, sp, #152	; 0x98
   32108:	add	r3, r3, r9, lsl #2
   3210c:	ldr	r3, [r3, #-120]	; 0xffffff88
   32110:	add	fp, fp, r3
   32114:	add	r6, r6, r3, lsl #1
   32118:	ldr	r3, [sp, #16]
   3211c:	add	r3, r3, sl
   32120:	str	r3, [sp, #16]
   32124:	ldr	r2, [sp, #20]
   32128:	cmp	r3, r2
   3212c:	bge	321f4 <GetDataSlab+0x111e8>
   32130:	ldr	r3, [sp, #196]	; 0xc4
   32134:	ldr	r3, [r3]
   32138:	cmp	r3, #0
   3213c:	addne	r6, r6, r3, lsl #1
   32140:	addne	fp, fp, r3
   32144:	ldr	r3, [sp, #204]	; 0xcc
   32148:	ldr	sl, [r3]
   3214c:	cmp	sl, #0
   32150:	ble	32184 <GetDataSlab+0x11178>
   32154:	sub	r0, r6, #2
   32158:	ldr	r3, [sp, #4]
   3215c:	ldr	r2, [sp, #16]
   32160:	add	r1, r3, r2, lsl #2
   32164:	mov	r2, #0
   32168:	ldrsh	r3, [r0, #2]!
   3216c:	str	r3, [r1], #4
   32170:	add	r2, r2, #1
   32174:	ldr	r3, [sp, #204]	; 0xcc
   32178:	ldr	sl, [r3]
   3217c:	cmp	sl, r2
   32180:	bgt	32168 <GetDataSlab+0x1115c>
   32184:	ldr	r3, [sp, #192]	; 0xc0
   32188:	ldr	r2, [r3]
   3218c:	ldr	r3, [sp, #196]	; 0xc4
   32190:	ldr	r3, [r3]
   32194:	sub	r3, r2, r3
   32198:	add	fp, fp, r3
   3219c:	add	r6, r6, r3, lsl #1
   321a0:	ldr	r3, [sp, #208]	; 0xd0
   321a4:	cmp	r3, #1
   321a8:	ble	32118 <GetDataSlab+0x1110c>
   321ac:	ldr	r3, [sp, #76]	; 0x4c
   321b0:	add	r3, r3, #1
   321b4:	str	r3, [sp, #76]	; 0x4c
   321b8:	ldr	r2, [sp, #204]	; 0xcc
   321bc:	ldr	r1, [r2, #4]
   321c0:	mov	r0, r3
   321c4:	bl	517e8 <__aeabi_idivmod>
   321c8:	cmp	r1, #0
   321cc:	bne	32100 <GetDataSlab+0x110f4>
   321d0:	add	r5, sp, #76	; 0x4c
   321d4:	ldr	r3, [sp, #204]	; 0xcc
   321d8:	add	r3, r3, #4
   321dc:	str	r3, [sp, #8]
   321e0:	ldr	r3, [sp, #196]	; 0xc4
   321e4:	add	r8, r3, #4
   321e8:	add	r7, sp, #112	; 0x70
   321ec:	ldr	r9, [sp, #28]
   321f0:	b	320bc <GetDataSlab+0x110b0>
   321f4:	mov	r3, #0
   321f8:	b	24fa8 <GetDataSlab+0x3f9c>
   321fc:	ldr	r2, [r9]
   32200:	cmp	r2, #0
   32204:	beq	3221c <GetDataSlab+0x11210>
   32208:	ldr	r3, [sp, #16]
   3220c:	ldr	r3, [r3, #-4]
   32210:	mul	r3, r3, r2
   32214:	add	r6, r6, r3, lsl #1
   32218:	add	fp, fp, r3
   3221c:	add	sl, sl, #1
   32220:	ldr	r3, [sp, #208]	; 0xd0
   32224:	cmp	r3, sl
   32228:	beq	322b4 <GetDataSlab+0x112a8>
   3222c:	ldr	r3, [r5]
   32230:	add	r3, r3, #1
   32234:	str	r3, [r5]
   32238:	add	r9, r9, #4
   3223c:	ldr	r2, [sp, #12]
   32240:	ldr	r1, [r2, #4]!
   32244:	str	r2, [sp, #12]
   32248:	mov	r0, r3
   3224c:	bl	517e8 <__aeabi_idivmod>
   32250:	cmp	r1, #0
   32254:	bne	322a0 <GetDataSlab+0x11294>
   32258:	mov	r3, #0
   3225c:	str	r3, [r5], #4
   32260:	add	r7, r7, #4
   32264:	str	r7, [sp, #16]
   32268:	ldr	r4, [r7]
   3226c:	mov	r1, r4
   32270:	mov	r0, fp
   32274:	bl	517e8 <__aeabi_idivmod>
   32278:	subs	r3, r1, #0
   3227c:	beq	321fc <GetDataSlab+0x111f0>
   32280:	ldr	r2, [r7, #-4]
   32284:	ldr	r1, [r9]
   32288:	sub	r3, r4, r3
   3228c:	mla	r3, r1, r2, r3
   32290:	add	r6, r6, r3, lsl #1
   32294:	add	fp, fp, r3
   32298:	b	3221c <GetDataSlab+0x11210>
   3229c:	mov	sl, #1
   322a0:	add	r3, sp, #152	; 0x98
   322a4:	add	r3, r3, sl, lsl #2
   322a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   322ac:	add	fp, fp, r3
   322b0:	add	r6, r6, r3, lsl #1
   322b4:	ldr	r3, [sp, #24]
   322b8:	ldr	r2, [sp, #8]
   322bc:	add	r3, r3, r2
   322c0:	str	r3, [sp, #24]
   322c4:	ldr	r2, [sp, #20]
   322c8:	cmp	r3, r2
   322cc:	bge	323b4 <GetDataSlab+0x113a8>
   322d0:	ldr	r3, [sp, #196]	; 0xc4
   322d4:	ldr	r3, [r3]
   322d8:	cmp	r3, #0
   322dc:	addne	r6, r6, r3, lsl #1
   322e0:	addne	fp, fp, r3
   322e4:	ldr	r3, [sp, #204]	; 0xcc
   322e8:	ldr	r3, [r3]
   322ec:	str	r3, [sp, #8]
   322f0:	cmp	r3, #0
   322f4:	ble	32334 <GetDataSlab+0x11328>
   322f8:	ldr	r3, [sp, #4]
   322fc:	ldr	r2, [sp, #24]
   32300:	add	r2, r3, r2, lsl #2
   32304:	mov	r3, #0
   32308:	ldrsh	r1, [r6]
   3230c:	str	r1, [r2], #4
   32310:	ldr	r1, [r8]
   32314:	add	r6, r6, r1, lsl #1
   32318:	add	fp, fp, r1
   3231c:	add	r3, r3, #1
   32320:	ldr	r1, [sp, #204]	; 0xcc
   32324:	ldr	r1, [r1]
   32328:	str	r1, [sp, #8]
   3232c:	cmp	r1, r3
   32330:	bgt	32308 <GetDataSlab+0x112fc>
   32334:	ldr	r3, [r8]
   32338:	ldr	r2, [sp, #8]
   3233c:	mul	r3, r3, r2
   32340:	ldr	r2, [sp, #192]	; 0xc0
   32344:	ldr	r2, [r2]
   32348:	sub	r3, r2, r3
   3234c:	ldr	r2, [sp, #196]	; 0xc4
   32350:	ldr	r2, [r2]
   32354:	sub	r3, r3, r2
   32358:	add	fp, fp, r3
   3235c:	add	r6, r6, r3, lsl #1
   32360:	ldr	r3, [sp, #208]	; 0xd0
   32364:	cmp	r3, #1
   32368:	ble	322b4 <GetDataSlab+0x112a8>
   3236c:	ldr	r3, [sp, #76]	; 0x4c
   32370:	add	r3, r3, #1
   32374:	str	r3, [sp, #76]	; 0x4c
   32378:	ldr	r2, [sp, #204]	; 0xcc
   3237c:	ldr	r1, [r2, #4]
   32380:	mov	r0, r3
   32384:	bl	517e8 <__aeabi_idivmod>
   32388:	cmp	r1, #0
   3238c:	bne	3229c <GetDataSlab+0x11290>
   32390:	add	r5, sp, #76	; 0x4c
   32394:	ldr	r3, [sp, #204]	; 0xcc
   32398:	add	r3, r3, #4
   3239c:	str	r3, [sp, #12]
   323a0:	ldr	r3, [sp, #196]	; 0xc4
   323a4:	add	r9, r3, #4
   323a8:	add	r7, sp, #112	; 0x70
   323ac:	mov	sl, #1
   323b0:	b	32258 <GetDataSlab+0x1124c>
   323b4:	mov	r3, #0
   323b8:	b	24fa8 <GetDataSlab+0x3f9c>
   323bc:	ldr	r3, [r8]
   323c0:	str	r3, [sp, #28]
   323c4:	sub	r3, r3, #1
   323c8:	str	r3, [sp, #32]
   323cc:	ldr	r3, [sp, #192]	; 0xc0
   323d0:	ldr	r3, [r3]
   323d4:	str	r3, [sp, #112]	; 0x70
   323d8:	ldr	r3, [sp, #204]	; 0xcc
   323dc:	ldr	r3, [r3]
   323e0:	str	r3, [sp, #20]
   323e4:	ldr	r3, [sp, #208]	; 0xd0
   323e8:	cmp	r3, #1
   323ec:	ble	32420 <GetDataSlab+0x11414>
   323f0:	str	r8, [sp, #16]
   323f4:	add	sl, sp, #36	; 0x24
   323f8:	ldr	lr, [sp, #192]	; 0xc0
   323fc:	add	r9, sp, #112	; 0x70
   32400:	ldr	r3, [sp, #204]	; 0xcc
   32404:	add	r5, r3, #4
   32408:	ldr	r3, [sp, #196]	; 0xc4
   3240c:	add	r4, r3, #4
   32410:	str	lr, [sp, #12]
   32414:	mov	r6, #2
   32418:	mov	fp, #0
   3241c:	b	40c14 <GetDataSlab+0x1fc08>
   32420:	mov	fp, #0
   32424:	b	40ca0 <GetDataSlab+0x1fc94>
   32428:	ldr	r3, [sp, #20]
   3242c:	cmp	r3, #0
   32430:	ble	3d518 <GetDataSlab+0x1c50c>
   32434:	mov	r3, #0
   32438:	str	r3, [sp, #16]
   3243c:	b	32510 <GetDataSlab+0x11504>
   32440:	ldr	r2, [r8]
   32444:	cmp	r2, #0
   32448:	beq	32460 <GetDataSlab+0x11454>
   3244c:	ldr	r3, [sp, #12]
   32450:	ldr	r3, [r3, #-4]
   32454:	mul	r3, r3, r2
   32458:	add	r6, r6, r3, lsl #1
   3245c:	add	fp, fp, r3
   32460:	add	r9, r9, #1
   32464:	ldr	r3, [sp, #208]	; 0xd0
   32468:	cmp	r3, r9
   3246c:	beq	324f8 <GetDataSlab+0x114ec>
   32470:	ldr	r3, [r5]
   32474:	add	r3, r3, #1
   32478:	str	r3, [r5]
   3247c:	add	r8, r8, #4
   32480:	ldr	r2, [sp, #8]
   32484:	ldr	r1, [r2, #4]!
   32488:	str	r2, [sp, #8]
   3248c:	mov	r0, r3
   32490:	bl	517e8 <__aeabi_idivmod>
   32494:	cmp	r1, #0
   32498:	bne	324e4 <GetDataSlab+0x114d8>
   3249c:	mov	r3, #0
   324a0:	str	r3, [r5], #4
   324a4:	add	r7, r7, #4
   324a8:	str	r7, [sp, #12]
   324ac:	ldr	r4, [r7]
   324b0:	mov	r1, r4
   324b4:	mov	r0, fp
   324b8:	bl	517e8 <__aeabi_idivmod>
   324bc:	subs	r3, r1, #0
   324c0:	beq	32440 <GetDataSlab+0x11434>
   324c4:	ldr	r2, [r7, #-4]
   324c8:	ldr	r1, [r8]
   324cc:	sub	r3, r4, r3
   324d0:	mla	r3, r1, r2, r3
   324d4:	add	r6, r6, r3, lsl #1
   324d8:	add	fp, fp, r3
   324dc:	b	32460 <GetDataSlab+0x11454>
   324e0:	ldr	r9, [sp, #28]
   324e4:	add	r3, sp, #152	; 0x98
   324e8:	add	r3, r3, r9, lsl #2
   324ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   324f0:	add	fp, fp, r3
   324f4:	add	r6, r6, r3, lsl #1
   324f8:	ldr	r3, [sp, #16]
   324fc:	add	r3, r3, sl
   32500:	str	r3, [sp, #16]
   32504:	ldr	r2, [sp, #20]
   32508:	cmp	r3, r2
   3250c:	bge	325d4 <GetDataSlab+0x115c8>
   32510:	ldr	r3, [sp, #196]	; 0xc4
   32514:	ldr	r3, [r3]
   32518:	cmp	r3, #0
   3251c:	addne	r6, r6, r3, lsl #1
   32520:	addne	fp, fp, r3
   32524:	ldr	r3, [sp, #204]	; 0xcc
   32528:	ldr	sl, [r3]
   3252c:	cmp	sl, #0
   32530:	ble	32564 <GetDataSlab+0x11558>
   32534:	sub	r0, r6, #2
   32538:	ldr	r3, [sp, #4]
   3253c:	ldr	r2, [sp, #16]
   32540:	add	r1, r3, r2, lsl #2
   32544:	mov	r2, #0
   32548:	ldrh	r3, [r0, #2]!
   3254c:	str	r3, [r1], #4
   32550:	add	r2, r2, #1
   32554:	ldr	r3, [sp, #204]	; 0xcc
   32558:	ldr	sl, [r3]
   3255c:	cmp	sl, r2
   32560:	bgt	32548 <GetDataSlab+0x1153c>
   32564:	ldr	r3, [sp, #192]	; 0xc0
   32568:	ldr	r2, [r3]
   3256c:	ldr	r3, [sp, #196]	; 0xc4
   32570:	ldr	r3, [r3]
   32574:	sub	r3, r2, r3
   32578:	add	fp, fp, r3
   3257c:	add	r6, r6, r3, lsl #1
   32580:	ldr	r3, [sp, #208]	; 0xd0
   32584:	cmp	r3, #1
   32588:	ble	324f8 <GetDataSlab+0x114ec>
   3258c:	ldr	r3, [sp, #76]	; 0x4c
   32590:	add	r3, r3, #1
   32594:	str	r3, [sp, #76]	; 0x4c
   32598:	ldr	r2, [sp, #204]	; 0xcc
   3259c:	ldr	r1, [r2, #4]
   325a0:	mov	r0, r3
   325a4:	bl	517e8 <__aeabi_idivmod>
   325a8:	cmp	r1, #0
   325ac:	bne	324e0 <GetDataSlab+0x114d4>
   325b0:	add	r5, sp, #76	; 0x4c
   325b4:	ldr	r3, [sp, #204]	; 0xcc
   325b8:	add	r3, r3, #4
   325bc:	str	r3, [sp, #8]
   325c0:	ldr	r3, [sp, #196]	; 0xc4
   325c4:	add	r8, r3, #4
   325c8:	add	r7, sp, #112	; 0x70
   325cc:	ldr	r9, [sp, #28]
   325d0:	b	3249c <GetDataSlab+0x11490>
   325d4:	mov	r3, #0
   325d8:	b	24fa8 <GetDataSlab+0x3f9c>
   325dc:	ldr	r2, [r9]
   325e0:	cmp	r2, #0
   325e4:	beq	325fc <GetDataSlab+0x115f0>
   325e8:	ldr	r3, [sp, #16]
   325ec:	ldr	r3, [r3, #-4]
   325f0:	mul	r3, r3, r2
   325f4:	add	r6, r6, r3, lsl #1
   325f8:	add	fp, fp, r3
   325fc:	add	sl, sl, #1
   32600:	ldr	r3, [sp, #208]	; 0xd0
   32604:	cmp	r3, sl
   32608:	beq	32694 <GetDataSlab+0x11688>
   3260c:	ldr	r3, [r5]
   32610:	add	r3, r3, #1
   32614:	str	r3, [r5]
   32618:	add	r9, r9, #4
   3261c:	ldr	r2, [sp, #12]
   32620:	ldr	r1, [r2, #4]!
   32624:	str	r2, [sp, #12]
   32628:	mov	r0, r3
   3262c:	bl	517e8 <__aeabi_idivmod>
   32630:	cmp	r1, #0
   32634:	bne	32680 <GetDataSlab+0x11674>
   32638:	mov	r3, #0
   3263c:	str	r3, [r5], #4
   32640:	add	r7, r7, #4
   32644:	str	r7, [sp, #16]
   32648:	ldr	r4, [r7]
   3264c:	mov	r1, r4
   32650:	mov	r0, fp
   32654:	bl	517e8 <__aeabi_idivmod>
   32658:	subs	r3, r1, #0
   3265c:	beq	325dc <GetDataSlab+0x115d0>
   32660:	ldr	r2, [r7, #-4]
   32664:	ldr	r1, [r9]
   32668:	sub	r3, r4, r3
   3266c:	mla	r3, r1, r2, r3
   32670:	add	r6, r6, r3, lsl #1
   32674:	add	fp, fp, r3
   32678:	b	325fc <GetDataSlab+0x115f0>
   3267c:	mov	sl, #1
   32680:	add	r3, sp, #152	; 0x98
   32684:	add	r3, r3, sl, lsl #2
   32688:	ldr	r3, [r3, #-120]	; 0xffffff88
   3268c:	add	fp, fp, r3
   32690:	add	r6, r6, r3, lsl #1
   32694:	ldr	r3, [sp, #24]
   32698:	ldr	r2, [sp, #8]
   3269c:	add	r3, r3, r2
   326a0:	str	r3, [sp, #24]
   326a4:	ldr	r2, [sp, #20]
   326a8:	cmp	r3, r2
   326ac:	bge	32794 <GetDataSlab+0x11788>
   326b0:	ldr	r3, [sp, #196]	; 0xc4
   326b4:	ldr	r3, [r3]
   326b8:	cmp	r3, #0
   326bc:	addne	r6, r6, r3, lsl #1
   326c0:	addne	fp, fp, r3
   326c4:	ldr	r3, [sp, #204]	; 0xcc
   326c8:	ldr	r3, [r3]
   326cc:	str	r3, [sp, #8]
   326d0:	cmp	r3, #0
   326d4:	ble	32714 <GetDataSlab+0x11708>
   326d8:	ldr	r3, [sp, #4]
   326dc:	ldr	r2, [sp, #24]
   326e0:	add	r2, r3, r2, lsl #2
   326e4:	mov	r3, #0
   326e8:	ldrh	r1, [r6]
   326ec:	str	r1, [r2], #4
   326f0:	ldr	r1, [r8]
   326f4:	add	r6, r6, r1, lsl #1
   326f8:	add	fp, fp, r1
   326fc:	add	r3, r3, #1
   32700:	ldr	r1, [sp, #204]	; 0xcc
   32704:	ldr	r1, [r1]
   32708:	str	r1, [sp, #8]
   3270c:	cmp	r1, r3
   32710:	bgt	326e8 <GetDataSlab+0x116dc>
   32714:	ldr	r3, [r8]
   32718:	ldr	r2, [sp, #8]
   3271c:	mul	r3, r3, r2
   32720:	ldr	r2, [sp, #192]	; 0xc0
   32724:	ldr	r2, [r2]
   32728:	sub	r3, r2, r3
   3272c:	ldr	r2, [sp, #196]	; 0xc4
   32730:	ldr	r2, [r2]
   32734:	sub	r3, r3, r2
   32738:	add	fp, fp, r3
   3273c:	add	r6, r6, r3, lsl #1
   32740:	ldr	r3, [sp, #208]	; 0xd0
   32744:	cmp	r3, #1
   32748:	ble	32694 <GetDataSlab+0x11688>
   3274c:	ldr	r3, [sp, #76]	; 0x4c
   32750:	add	r3, r3, #1
   32754:	str	r3, [sp, #76]	; 0x4c
   32758:	ldr	r2, [sp, #204]	; 0xcc
   3275c:	ldr	r1, [r2, #4]
   32760:	mov	r0, r3
   32764:	bl	517e8 <__aeabi_idivmod>
   32768:	cmp	r1, #0
   3276c:	bne	3267c <GetDataSlab+0x11670>
   32770:	add	r5, sp, #76	; 0x4c
   32774:	ldr	r3, [sp, #204]	; 0xcc
   32778:	add	r3, r3, #4
   3277c:	str	r3, [sp, #12]
   32780:	ldr	r3, [sp, #196]	; 0xc4
   32784:	add	r9, r3, #4
   32788:	add	r7, sp, #112	; 0x70
   3278c:	mov	sl, #1
   32790:	b	32638 <GetDataSlab+0x1162c>
   32794:	mov	r3, #0
   32798:	b	24fa8 <GetDataSlab+0x3f9c>
   3279c:	ldr	r3, [r8]
   327a0:	str	r3, [sp, #28]
   327a4:	sub	r3, r3, #1
   327a8:	str	r3, [sp, #32]
   327ac:	ldr	r3, [sp, #192]	; 0xc0
   327b0:	ldr	r3, [r3]
   327b4:	str	r3, [sp, #112]	; 0x70
   327b8:	ldr	r3, [sp, #204]	; 0xcc
   327bc:	ldr	r3, [r3]
   327c0:	str	r3, [sp, #20]
   327c4:	ldr	r3, [sp, #208]	; 0xd0
   327c8:	cmp	r3, #1
   327cc:	ble	32800 <GetDataSlab+0x117f4>
   327d0:	str	r8, [sp, #16]
   327d4:	add	sl, sp, #36	; 0x24
   327d8:	ldr	lr, [sp, #192]	; 0xc0
   327dc:	add	r9, sp, #112	; 0x70
   327e0:	ldr	r3, [sp, #204]	; 0xcc
   327e4:	add	r5, r3, #4
   327e8:	ldr	r3, [sp, #196]	; 0xc4
   327ec:	add	r4, r3, #4
   327f0:	str	lr, [sp, #12]
   327f4:	mov	r6, #2
   327f8:	mov	fp, #0
   327fc:	b	40d00 <GetDataSlab+0x1fcf4>
   32800:	mov	fp, #0
   32804:	b	40d8c <GetDataSlab+0x1fd80>
   32808:	ldr	r3, [sp, #20]
   3280c:	cmp	r3, #0
   32810:	ble	3d520 <GetDataSlab+0x1c514>
   32814:	mov	r3, #0
   32818:	str	r3, [sp, #16]
   3281c:	b	328f0 <GetDataSlab+0x118e4>
   32820:	ldr	r2, [r8]
   32824:	cmp	r2, #0
   32828:	beq	32840 <GetDataSlab+0x11834>
   3282c:	ldr	r3, [sp, #12]
   32830:	ldr	r3, [r3, #-4]
   32834:	mul	r3, r3, r2
   32838:	add	r6, r6, r3
   3283c:	add	fp, fp, r3
   32840:	add	r9, r9, #1
   32844:	ldr	r3, [sp, #208]	; 0xd0
   32848:	cmp	r3, r9
   3284c:	beq	328d8 <GetDataSlab+0x118cc>
   32850:	ldr	r3, [r5]
   32854:	add	r3, r3, #1
   32858:	str	r3, [r5]
   3285c:	add	r8, r8, #4
   32860:	ldr	r2, [sp, #8]
   32864:	ldr	r1, [r2, #4]!
   32868:	str	r2, [sp, #8]
   3286c:	mov	r0, r3
   32870:	bl	517e8 <__aeabi_idivmod>
   32874:	cmp	r1, #0
   32878:	bne	328c4 <GetDataSlab+0x118b8>
   3287c:	mov	r3, #0
   32880:	str	r3, [r5], #4
   32884:	add	r7, r7, #4
   32888:	str	r7, [sp, #12]
   3288c:	ldr	r4, [r7]
   32890:	mov	r1, r4
   32894:	mov	r0, fp
   32898:	bl	517e8 <__aeabi_idivmod>
   3289c:	subs	r3, r1, #0
   328a0:	beq	32820 <GetDataSlab+0x11814>
   328a4:	ldr	r2, [r7, #-4]
   328a8:	ldr	r1, [r8]
   328ac:	sub	r3, r4, r3
   328b0:	mla	r3, r1, r2, r3
   328b4:	add	r6, r6, r3
   328b8:	add	fp, fp, r3
   328bc:	b	32840 <GetDataSlab+0x11834>
   328c0:	ldr	r9, [sp, #28]
   328c4:	add	r3, sp, #152	; 0x98
   328c8:	add	r3, r3, r9, lsl #2
   328cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   328d0:	add	fp, fp, r3
   328d4:	add	r6, r6, r3
   328d8:	ldr	r3, [sp, #16]
   328dc:	add	r3, r3, sl
   328e0:	str	r3, [sp, #16]
   328e4:	ldr	r2, [sp, #20]
   328e8:	cmp	r3, r2
   328ec:	bge	329b4 <GetDataSlab+0x119a8>
   328f0:	ldr	r3, [sp, #196]	; 0xc4
   328f4:	ldr	r3, [r3]
   328f8:	cmp	r3, #0
   328fc:	addne	r6, r6, r3
   32900:	addne	fp, fp, r3
   32904:	ldr	r3, [sp, #204]	; 0xcc
   32908:	ldr	sl, [r3]
   3290c:	cmp	sl, #0
   32910:	ble	32944 <GetDataSlab+0x11938>
   32914:	sub	r0, r6, #1
   32918:	ldr	r3, [sp, #4]
   3291c:	ldr	r2, [sp, #16]
   32920:	add	r1, r3, r2, lsl #2
   32924:	mov	r2, #0
   32928:	ldrsb	r3, [r0, #1]!
   3292c:	str	r3, [r1], #4
   32930:	add	r2, r2, #1
   32934:	ldr	r3, [sp, #204]	; 0xcc
   32938:	ldr	sl, [r3]
   3293c:	cmp	sl, r2
   32940:	bgt	32928 <GetDataSlab+0x1191c>
   32944:	ldr	r3, [sp, #192]	; 0xc0
   32948:	ldr	r2, [r3]
   3294c:	ldr	r3, [sp, #196]	; 0xc4
   32950:	ldr	r3, [r3]
   32954:	sub	r3, r2, r3
   32958:	add	fp, fp, r3
   3295c:	add	r6, r6, r3
   32960:	ldr	r3, [sp, #208]	; 0xd0
   32964:	cmp	r3, #1
   32968:	ble	328d8 <GetDataSlab+0x118cc>
   3296c:	ldr	r3, [sp, #76]	; 0x4c
   32970:	add	r3, r3, #1
   32974:	str	r3, [sp, #76]	; 0x4c
   32978:	ldr	r2, [sp, #204]	; 0xcc
   3297c:	ldr	r1, [r2, #4]
   32980:	mov	r0, r3
   32984:	bl	517e8 <__aeabi_idivmod>
   32988:	cmp	r1, #0
   3298c:	bne	328c0 <GetDataSlab+0x118b4>
   32990:	add	r5, sp, #76	; 0x4c
   32994:	ldr	r3, [sp, #204]	; 0xcc
   32998:	add	r3, r3, #4
   3299c:	str	r3, [sp, #8]
   329a0:	ldr	r3, [sp, #196]	; 0xc4
   329a4:	add	r8, r3, #4
   329a8:	add	r7, sp, #112	; 0x70
   329ac:	ldr	r9, [sp, #28]
   329b0:	b	3287c <GetDataSlab+0x11870>
   329b4:	mov	r3, #0
   329b8:	b	24fa8 <GetDataSlab+0x3f9c>
   329bc:	ldr	r2, [r9]
   329c0:	cmp	r2, #0
   329c4:	beq	329dc <GetDataSlab+0x119d0>
   329c8:	ldr	r3, [sp, #16]
   329cc:	ldr	r3, [r3, #-4]
   329d0:	mul	r3, r3, r2
   329d4:	add	r6, r6, r3
   329d8:	add	fp, fp, r3
   329dc:	add	sl, sl, #1
   329e0:	ldr	r3, [sp, #208]	; 0xd0
   329e4:	cmp	r3, sl
   329e8:	beq	32a74 <GetDataSlab+0x11a68>
   329ec:	ldr	r3, [r5]
   329f0:	add	r3, r3, #1
   329f4:	str	r3, [r5]
   329f8:	add	r9, r9, #4
   329fc:	ldr	r2, [sp, #12]
   32a00:	ldr	r1, [r2, #4]!
   32a04:	str	r2, [sp, #12]
   32a08:	mov	r0, r3
   32a0c:	bl	517e8 <__aeabi_idivmod>
   32a10:	cmp	r1, #0
   32a14:	bne	32a60 <GetDataSlab+0x11a54>
   32a18:	mov	r3, #0
   32a1c:	str	r3, [r5], #4
   32a20:	add	r7, r7, #4
   32a24:	str	r7, [sp, #16]
   32a28:	ldr	r4, [r7]
   32a2c:	mov	r1, r4
   32a30:	mov	r0, fp
   32a34:	bl	517e8 <__aeabi_idivmod>
   32a38:	subs	r3, r1, #0
   32a3c:	beq	329bc <GetDataSlab+0x119b0>
   32a40:	ldr	r2, [r7, #-4]
   32a44:	ldr	r1, [r9]
   32a48:	sub	r3, r4, r3
   32a4c:	mla	r3, r1, r2, r3
   32a50:	add	r6, r6, r3
   32a54:	add	fp, fp, r3
   32a58:	b	329dc <GetDataSlab+0x119d0>
   32a5c:	mov	sl, #1
   32a60:	add	r3, sp, #152	; 0x98
   32a64:	add	r3, r3, sl, lsl #2
   32a68:	ldr	r3, [r3, #-120]	; 0xffffff88
   32a6c:	add	fp, fp, r3
   32a70:	add	r6, r6, r3
   32a74:	ldr	r3, [sp, #24]
   32a78:	ldr	r2, [sp, #8]
   32a7c:	add	r3, r3, r2
   32a80:	str	r3, [sp, #24]
   32a84:	ldr	r2, [sp, #20]
   32a88:	cmp	r3, r2
   32a8c:	bge	32b74 <GetDataSlab+0x11b68>
   32a90:	ldr	r3, [sp, #196]	; 0xc4
   32a94:	ldr	r3, [r3]
   32a98:	cmp	r3, #0
   32a9c:	addne	r6, r6, r3
   32aa0:	addne	fp, fp, r3
   32aa4:	ldr	r3, [sp, #204]	; 0xcc
   32aa8:	ldr	r3, [r3]
   32aac:	str	r3, [sp, #8]
   32ab0:	cmp	r3, #0
   32ab4:	ble	32af4 <GetDataSlab+0x11ae8>
   32ab8:	ldr	r3, [sp, #4]
   32abc:	ldr	r2, [sp, #24]
   32ac0:	add	r2, r3, r2, lsl #2
   32ac4:	mov	r3, #0
   32ac8:	ldrsb	r1, [r6]
   32acc:	str	r1, [r2], #4
   32ad0:	ldr	r1, [r8]
   32ad4:	add	r6, r6, r1
   32ad8:	add	fp, fp, r1
   32adc:	add	r3, r3, #1
   32ae0:	ldr	r1, [sp, #204]	; 0xcc
   32ae4:	ldr	r1, [r1]
   32ae8:	str	r1, [sp, #8]
   32aec:	cmp	r1, r3
   32af0:	bgt	32ac8 <GetDataSlab+0x11abc>
   32af4:	ldr	r3, [r8]
   32af8:	ldr	r2, [sp, #8]
   32afc:	mul	r3, r3, r2
   32b00:	ldr	r2, [sp, #192]	; 0xc0
   32b04:	ldr	r2, [r2]
   32b08:	sub	r3, r2, r3
   32b0c:	ldr	r2, [sp, #196]	; 0xc4
   32b10:	ldr	r2, [r2]
   32b14:	sub	r3, r3, r2
   32b18:	add	fp, fp, r3
   32b1c:	add	r6, r6, r3
   32b20:	ldr	r3, [sp, #208]	; 0xd0
   32b24:	cmp	r3, #1
   32b28:	ble	32a74 <GetDataSlab+0x11a68>
   32b2c:	ldr	r3, [sp, #76]	; 0x4c
   32b30:	add	r3, r3, #1
   32b34:	str	r3, [sp, #76]	; 0x4c
   32b38:	ldr	r2, [sp, #204]	; 0xcc
   32b3c:	ldr	r1, [r2, #4]
   32b40:	mov	r0, r3
   32b44:	bl	517e8 <__aeabi_idivmod>
   32b48:	cmp	r1, #0
   32b4c:	bne	32a5c <GetDataSlab+0x11a50>
   32b50:	add	r5, sp, #76	; 0x4c
   32b54:	ldr	r3, [sp, #204]	; 0xcc
   32b58:	add	r3, r3, #4
   32b5c:	str	r3, [sp, #12]
   32b60:	ldr	r3, [sp, #196]	; 0xc4
   32b64:	add	r9, r3, #4
   32b68:	add	r7, sp, #112	; 0x70
   32b6c:	mov	sl, #1
   32b70:	b	32a18 <GetDataSlab+0x11a0c>
   32b74:	mov	r3, #0
   32b78:	b	24fa8 <GetDataSlab+0x3f9c>
   32b7c:	ldr	r3, [r8]
   32b80:	str	r3, [sp, #28]
   32b84:	sub	r3, r3, #1
   32b88:	str	r3, [sp, #32]
   32b8c:	ldr	r3, [sp, #192]	; 0xc0
   32b90:	ldr	r3, [r3]
   32b94:	str	r3, [sp, #112]	; 0x70
   32b98:	ldr	r3, [sp, #204]	; 0xcc
   32b9c:	ldr	r3, [r3]
   32ba0:	str	r3, [sp, #20]
   32ba4:	ldr	r3, [sp, #208]	; 0xd0
   32ba8:	cmp	r3, #1
   32bac:	ble	32be0 <GetDataSlab+0x11bd4>
   32bb0:	str	r8, [sp, #16]
   32bb4:	add	sl, sp, #36	; 0x24
   32bb8:	ldr	lr, [sp, #192]	; 0xc0
   32bbc:	add	r9, sp, #112	; 0x70
   32bc0:	ldr	r3, [sp, #204]	; 0xcc
   32bc4:	add	r5, r3, #4
   32bc8:	ldr	r3, [sp, #196]	; 0xc4
   32bcc:	add	r4, r3, #4
   32bd0:	str	lr, [sp, #12]
   32bd4:	mov	r6, #2
   32bd8:	mov	fp, #0
   32bdc:	b	40dec <GetDataSlab+0x1fde0>
   32be0:	mov	fp, #0
   32be4:	b	40e78 <GetDataSlab+0x1fe6c>
   32be8:	ldr	r3, [sp, #20]
   32bec:	cmp	r3, #0
   32bf0:	ble	3d528 <GetDataSlab+0x1c51c>
   32bf4:	mov	r3, #0
   32bf8:	str	r3, [sp, #16]
   32bfc:	b	32cd0 <GetDataSlab+0x11cc4>
   32c00:	ldr	r2, [r8]
   32c04:	cmp	r2, #0
   32c08:	beq	32c20 <GetDataSlab+0x11c14>
   32c0c:	ldr	r3, [sp, #12]
   32c10:	ldr	r3, [r3, #-4]
   32c14:	mul	r3, r3, r2
   32c18:	add	r6, r6, r3
   32c1c:	add	fp, fp, r3
   32c20:	add	r9, r9, #1
   32c24:	ldr	r3, [sp, #208]	; 0xd0
   32c28:	cmp	r3, r9
   32c2c:	beq	32cb8 <GetDataSlab+0x11cac>
   32c30:	ldr	r3, [r5]
   32c34:	add	r3, r3, #1
   32c38:	str	r3, [r5]
   32c3c:	add	r8, r8, #4
   32c40:	ldr	r2, [sp, #8]
   32c44:	ldr	r1, [r2, #4]!
   32c48:	str	r2, [sp, #8]
   32c4c:	mov	r0, r3
   32c50:	bl	517e8 <__aeabi_idivmod>
   32c54:	cmp	r1, #0
   32c58:	bne	32ca4 <GetDataSlab+0x11c98>
   32c5c:	mov	r3, #0
   32c60:	str	r3, [r5], #4
   32c64:	add	r7, r7, #4
   32c68:	str	r7, [sp, #12]
   32c6c:	ldr	r4, [r7]
   32c70:	mov	r1, r4
   32c74:	mov	r0, fp
   32c78:	bl	517e8 <__aeabi_idivmod>
   32c7c:	subs	r3, r1, #0
   32c80:	beq	32c00 <GetDataSlab+0x11bf4>
   32c84:	ldr	r2, [r7, #-4]
   32c88:	ldr	r1, [r8]
   32c8c:	sub	r3, r4, r3
   32c90:	mla	r3, r1, r2, r3
   32c94:	add	r6, r6, r3
   32c98:	add	fp, fp, r3
   32c9c:	b	32c20 <GetDataSlab+0x11c14>
   32ca0:	ldr	r9, [sp, #28]
   32ca4:	add	r3, sp, #152	; 0x98
   32ca8:	add	r3, r3, r9, lsl #2
   32cac:	ldr	r3, [r3, #-120]	; 0xffffff88
   32cb0:	add	fp, fp, r3
   32cb4:	add	r6, r6, r3
   32cb8:	ldr	r3, [sp, #16]
   32cbc:	add	r3, r3, sl
   32cc0:	str	r3, [sp, #16]
   32cc4:	ldr	r2, [sp, #20]
   32cc8:	cmp	r3, r2
   32ccc:	bge	32d94 <GetDataSlab+0x11d88>
   32cd0:	ldr	r3, [sp, #196]	; 0xc4
   32cd4:	ldr	r3, [r3]
   32cd8:	cmp	r3, #0
   32cdc:	addne	r6, r6, r3
   32ce0:	addne	fp, fp, r3
   32ce4:	ldr	r3, [sp, #204]	; 0xcc
   32ce8:	ldr	sl, [r3]
   32cec:	cmp	sl, #0
   32cf0:	ble	32d24 <GetDataSlab+0x11d18>
   32cf4:	sub	r0, r6, #1
   32cf8:	ldr	r3, [sp, #4]
   32cfc:	ldr	r2, [sp, #16]
   32d00:	add	r1, r3, r2, lsl #2
   32d04:	mov	r2, #0
   32d08:	ldrb	r3, [r0, #1]!
   32d0c:	str	r3, [r1], #4
   32d10:	add	r2, r2, #1
   32d14:	ldr	r3, [sp, #204]	; 0xcc
   32d18:	ldr	sl, [r3]
   32d1c:	cmp	sl, r2
   32d20:	bgt	32d08 <GetDataSlab+0x11cfc>
   32d24:	ldr	r3, [sp, #192]	; 0xc0
   32d28:	ldr	r2, [r3]
   32d2c:	ldr	r3, [sp, #196]	; 0xc4
   32d30:	ldr	r3, [r3]
   32d34:	sub	r3, r2, r3
   32d38:	add	fp, fp, r3
   32d3c:	add	r6, r6, r3
   32d40:	ldr	r3, [sp, #208]	; 0xd0
   32d44:	cmp	r3, #1
   32d48:	ble	32cb8 <GetDataSlab+0x11cac>
   32d4c:	ldr	r3, [sp, #76]	; 0x4c
   32d50:	add	r3, r3, #1
   32d54:	str	r3, [sp, #76]	; 0x4c
   32d58:	ldr	r2, [sp, #204]	; 0xcc
   32d5c:	ldr	r1, [r2, #4]
   32d60:	mov	r0, r3
   32d64:	bl	517e8 <__aeabi_idivmod>
   32d68:	cmp	r1, #0
   32d6c:	bne	32ca0 <GetDataSlab+0x11c94>
   32d70:	add	r5, sp, #76	; 0x4c
   32d74:	ldr	r3, [sp, #204]	; 0xcc
   32d78:	add	r3, r3, #4
   32d7c:	str	r3, [sp, #8]
   32d80:	ldr	r3, [sp, #196]	; 0xc4
   32d84:	add	r8, r3, #4
   32d88:	add	r7, sp, #112	; 0x70
   32d8c:	ldr	r9, [sp, #28]
   32d90:	b	32c5c <GetDataSlab+0x11c50>
   32d94:	mov	r3, #0
   32d98:	b	24fa8 <GetDataSlab+0x3f9c>
   32d9c:	ldr	r2, [r9]
   32da0:	cmp	r2, #0
   32da4:	beq	32dbc <GetDataSlab+0x11db0>
   32da8:	ldr	r3, [sp, #16]
   32dac:	ldr	r3, [r3, #-4]
   32db0:	mul	r3, r3, r2
   32db4:	add	r6, r6, r3
   32db8:	add	fp, fp, r3
   32dbc:	add	sl, sl, #1
   32dc0:	ldr	r3, [sp, #208]	; 0xd0
   32dc4:	cmp	r3, sl
   32dc8:	beq	32e54 <GetDataSlab+0x11e48>
   32dcc:	ldr	r3, [r5]
   32dd0:	add	r3, r3, #1
   32dd4:	str	r3, [r5]
   32dd8:	add	r9, r9, #4
   32ddc:	ldr	r2, [sp, #12]
   32de0:	ldr	r1, [r2, #4]!
   32de4:	str	r2, [sp, #12]
   32de8:	mov	r0, r3
   32dec:	bl	517e8 <__aeabi_idivmod>
   32df0:	cmp	r1, #0
   32df4:	bne	32e40 <GetDataSlab+0x11e34>
   32df8:	mov	r3, #0
   32dfc:	str	r3, [r5], #4
   32e00:	add	r7, r7, #4
   32e04:	str	r7, [sp, #16]
   32e08:	ldr	r4, [r7]
   32e0c:	mov	r1, r4
   32e10:	mov	r0, fp
   32e14:	bl	517e8 <__aeabi_idivmod>
   32e18:	subs	r3, r1, #0
   32e1c:	beq	32d9c <GetDataSlab+0x11d90>
   32e20:	ldr	r2, [r7, #-4]
   32e24:	ldr	r1, [r9]
   32e28:	sub	r3, r4, r3
   32e2c:	mla	r3, r1, r2, r3
   32e30:	add	r6, r6, r3
   32e34:	add	fp, fp, r3
   32e38:	b	32dbc <GetDataSlab+0x11db0>
   32e3c:	mov	sl, #1
   32e40:	add	r3, sp, #152	; 0x98
   32e44:	add	r3, r3, sl, lsl #2
   32e48:	ldr	r3, [r3, #-120]	; 0xffffff88
   32e4c:	add	fp, fp, r3
   32e50:	add	r6, r6, r3
   32e54:	ldr	r3, [sp, #24]
   32e58:	ldr	r2, [sp, #8]
   32e5c:	add	r3, r3, r2
   32e60:	str	r3, [sp, #24]
   32e64:	ldr	r2, [sp, #20]
   32e68:	cmp	r3, r2
   32e6c:	bge	32f54 <GetDataSlab+0x11f48>
   32e70:	ldr	r3, [sp, #196]	; 0xc4
   32e74:	ldr	r3, [r3]
   32e78:	cmp	r3, #0
   32e7c:	addne	r6, r6, r3
   32e80:	addne	fp, fp, r3
   32e84:	ldr	r3, [sp, #204]	; 0xcc
   32e88:	ldr	r3, [r3]
   32e8c:	str	r3, [sp, #8]
   32e90:	cmp	r3, #0
   32e94:	ble	32ed4 <GetDataSlab+0x11ec8>
   32e98:	ldr	r3, [sp, #4]
   32e9c:	ldr	r2, [sp, #24]
   32ea0:	add	r2, r3, r2, lsl #2
   32ea4:	mov	r3, #0
   32ea8:	ldrb	r1, [r6]
   32eac:	str	r1, [r2], #4
   32eb0:	ldr	r1, [r8]
   32eb4:	add	r6, r6, r1
   32eb8:	add	fp, fp, r1
   32ebc:	add	r3, r3, #1
   32ec0:	ldr	r1, [sp, #204]	; 0xcc
   32ec4:	ldr	r1, [r1]
   32ec8:	str	r1, [sp, #8]
   32ecc:	cmp	r1, r3
   32ed0:	bgt	32ea8 <GetDataSlab+0x11e9c>
   32ed4:	ldr	r3, [r8]
   32ed8:	ldr	r2, [sp, #8]
   32edc:	mul	r3, r3, r2
   32ee0:	ldr	r2, [sp, #192]	; 0xc0
   32ee4:	ldr	r2, [r2]
   32ee8:	sub	r3, r2, r3
   32eec:	ldr	r2, [sp, #196]	; 0xc4
   32ef0:	ldr	r2, [r2]
   32ef4:	sub	r3, r3, r2
   32ef8:	add	fp, fp, r3
   32efc:	add	r6, r6, r3
   32f00:	ldr	r3, [sp, #208]	; 0xd0
   32f04:	cmp	r3, #1
   32f08:	ble	32e54 <GetDataSlab+0x11e48>
   32f0c:	ldr	r3, [sp, #76]	; 0x4c
   32f10:	add	r3, r3, #1
   32f14:	str	r3, [sp, #76]	; 0x4c
   32f18:	ldr	r2, [sp, #204]	; 0xcc
   32f1c:	ldr	r1, [r2, #4]
   32f20:	mov	r0, r3
   32f24:	bl	517e8 <__aeabi_idivmod>
   32f28:	cmp	r1, #0
   32f2c:	bne	32e3c <GetDataSlab+0x11e30>
   32f30:	add	r5, sp, #76	; 0x4c
   32f34:	ldr	r3, [sp, #204]	; 0xcc
   32f38:	add	r3, r3, #4
   32f3c:	str	r3, [sp, #12]
   32f40:	ldr	r3, [sp, #196]	; 0xc4
   32f44:	add	r9, r3, #4
   32f48:	add	r7, sp, #112	; 0x70
   32f4c:	mov	sl, #1
   32f50:	b	32df8 <GetDataSlab+0x11dec>
   32f54:	mov	r3, #0
   32f58:	b	24fa8 <GetDataSlab+0x3f9c>
   32f5c:	cmp	r4, #12
   32f60:	beq	32fd4 <GetDataSlab+0x11fc8>
   32f64:	cmp	r4, #13
   32f68:	movne	r3, #1
   32f6c:	bne	24fa8 <GetDataSlab+0x3f9c>
   32f70:	ldr	r3, [r8]
   32f74:	str	r3, [sp, #28]
   32f78:	sub	r3, r3, #1
   32f7c:	str	r3, [sp, #32]
   32f80:	ldr	r3, [sp, #192]	; 0xc0
   32f84:	ldr	r3, [r3]
   32f88:	str	r3, [sp, #112]	; 0x70
   32f8c:	ldr	r3, [sp, #204]	; 0xcc
   32f90:	ldr	r3, [r3]
   32f94:	str	r3, [sp, #20]
   32f98:	ldr	r3, [sp, #208]	; 0xd0
   32f9c:	cmp	r3, #1
   32fa0:	ble	333a4 <GetDataSlab+0x12398>
   32fa4:	str	r8, [sp, #16]
   32fa8:	add	sl, sp, #36	; 0x24
   32fac:	ldr	lr, [sp, #192]	; 0xc0
   32fb0:	add	r9, sp, #112	; 0x70
   32fb4:	ldr	r3, [sp, #204]	; 0xcc
   32fb8:	add	r6, r3, #4
   32fbc:	ldr	r3, [sp, #196]	; 0xc4
   32fc0:	add	r4, r3, #4
   32fc4:	str	lr, [sp, #12]
   32fc8:	mov	r5, #2
   32fcc:	mov	fp, #0
   32fd0:	b	40fc4 <GetDataSlab+0x1ffb8>
   32fd4:	ldr	r3, [r8]
   32fd8:	str	r3, [sp, #28]
   32fdc:	sub	r3, r3, #1
   32fe0:	str	r3, [sp, #32]
   32fe4:	ldr	r3, [sp, #192]	; 0xc0
   32fe8:	ldr	r3, [r3]
   32fec:	str	r3, [sp, #112]	; 0x70
   32ff0:	ldr	r3, [sp, #204]	; 0xcc
   32ff4:	ldr	r3, [r3]
   32ff8:	str	r3, [sp, #20]
   32ffc:	ldr	r3, [sp, #208]	; 0xd0
   33000:	cmp	r3, #1
   33004:	ble	33038 <GetDataSlab+0x1202c>
   33008:	str	r8, [sp, #16]
   3300c:	add	sl, sp, #36	; 0x24
   33010:	ldr	lr, [sp, #192]	; 0xc0
   33014:	add	r9, sp, #112	; 0x70
   33018:	ldr	r3, [sp, #204]	; 0xcc
   3301c:	add	r6, r3, #4
   33020:	ldr	r3, [sp, #196]	; 0xc4
   33024:	add	r4, r3, #4
   33028:	str	lr, [sp, #12]
   3302c:	mov	r5, #2
   33030:	mov	fp, #0
   33034:	b	40ed8 <GetDataSlab+0x1fecc>
   33038:	mov	fp, #0
   3303c:	b	40f64 <GetDataSlab+0x1ff58>
   33040:	ldr	r3, [sp, #20]
   33044:	cmp	r3, #0
   33048:	ble	40f8c <GetDataSlab+0x1ff80>
   3304c:	mov	r3, #0
   33050:	str	r3, [sp, #16]
   33054:	b	33128 <GetDataSlab+0x1211c>
   33058:	ldr	r2, [r8]
   3305c:	cmp	r2, #0
   33060:	beq	33078 <GetDataSlab+0x1206c>
   33064:	ldr	r3, [sp, #12]
   33068:	ldr	r3, [r3, #-4]
   3306c:	mul	r3, r3, r2
   33070:	add	r5, r5, r3, lsl #3
   33074:	add	fp, fp, r3
   33078:	add	r9, r9, #1
   3307c:	ldr	r3, [sp, #208]	; 0xd0
   33080:	cmp	r3, r9
   33084:	beq	33110 <GetDataSlab+0x12104>
   33088:	ldr	r3, [r6]
   3308c:	add	r3, r3, #1
   33090:	str	r3, [r6]
   33094:	add	r8, r8, #4
   33098:	ldr	r2, [sp, #8]
   3309c:	ldr	r1, [r2, #4]!
   330a0:	str	r2, [sp, #8]
   330a4:	mov	r0, r3
   330a8:	bl	517e8 <__aeabi_idivmod>
   330ac:	cmp	r1, #0
   330b0:	bne	330fc <GetDataSlab+0x120f0>
   330b4:	mov	r3, #0
   330b8:	str	r3, [r6], #4
   330bc:	add	r7, r7, #4
   330c0:	str	r7, [sp, #12]
   330c4:	ldr	r4, [r7]
   330c8:	mov	r1, r4
   330cc:	mov	r0, fp
   330d0:	bl	517e8 <__aeabi_idivmod>
   330d4:	subs	r3, r1, #0
   330d8:	beq	33058 <GetDataSlab+0x1204c>
   330dc:	ldr	r2, [r7, #-4]
   330e0:	ldr	r1, [r8]
   330e4:	sub	r3, r4, r3
   330e8:	mla	r3, r1, r2, r3
   330ec:	add	r5, r5, r3, lsl #3
   330f0:	add	fp, fp, r3
   330f4:	b	33078 <GetDataSlab+0x1206c>
   330f8:	ldr	r9, [sp, #28]
   330fc:	add	r3, sp, #152	; 0x98
   33100:	add	r3, r3, r9, lsl #2
   33104:	ldr	r3, [r3, #-120]	; 0xffffff88
   33108:	add	fp, fp, r3
   3310c:	add	r5, r5, r3, lsl #3
   33110:	ldr	r3, [sp, #16]
   33114:	add	r3, r3, sl
   33118:	str	r3, [sp, #16]
   3311c:	ldr	r2, [sp, #20]
   33120:	cmp	r3, r2
   33124:	bge	40f8c <GetDataSlab+0x1ff80>
   33128:	ldr	r3, [sp, #196]	; 0xc4
   3312c:	ldr	r3, [r3]
   33130:	cmp	r3, #0
   33134:	addne	r5, r5, r3, lsl #3
   33138:	addne	fp, fp, r3
   3313c:	ldr	r3, [sp, #204]	; 0xcc
   33140:	ldr	sl, [r3]
   33144:	cmp	sl, #0
   33148:	ble	3317c <GetDataSlab+0x12170>
   3314c:	sub	r0, r5, #8
   33150:	ldr	r3, [sp, #4]
   33154:	ldr	r2, [sp, #16]
   33158:	add	r1, r3, r2, lsl #2
   3315c:	mov	r2, #0
   33160:	ldr	r3, [r0, #8]!
   33164:	str	r3, [r1], #4
   33168:	add	r2, r2, #1
   3316c:	ldr	r3, [sp, #204]	; 0xcc
   33170:	ldr	sl, [r3]
   33174:	cmp	sl, r2
   33178:	bgt	33160 <GetDataSlab+0x12154>
   3317c:	ldr	r3, [sp, #192]	; 0xc0
   33180:	ldr	r2, [r3]
   33184:	ldr	r3, [sp, #196]	; 0xc4
   33188:	ldr	r3, [r3]
   3318c:	sub	r3, r2, r3
   33190:	add	fp, fp, r3
   33194:	add	r5, r5, r3, lsl #3
   33198:	ldr	r3, [sp, #208]	; 0xd0
   3319c:	cmp	r3, #1
   331a0:	ble	33110 <GetDataSlab+0x12104>
   331a4:	ldr	r3, [sp, #76]	; 0x4c
   331a8:	add	r3, r3, #1
   331ac:	str	r3, [sp, #76]	; 0x4c
   331b0:	ldr	r2, [sp, #204]	; 0xcc
   331b4:	ldr	r1, [r2, #4]
   331b8:	mov	r0, r3
   331bc:	bl	517e8 <__aeabi_idivmod>
   331c0:	cmp	r1, #0
   331c4:	bne	330f8 <GetDataSlab+0x120ec>
   331c8:	add	r6, sp, #76	; 0x4c
   331cc:	ldr	r3, [sp, #204]	; 0xcc
   331d0:	add	r3, r3, #4
   331d4:	str	r3, [sp, #8]
   331d8:	ldr	r3, [sp, #196]	; 0xc4
   331dc:	add	r8, r3, #4
   331e0:	add	r7, sp, #112	; 0x70
   331e4:	ldr	r9, [sp, #28]
   331e8:	b	330b4 <GetDataSlab+0x120a8>
   331ec:	ldr	r2, [r9]
   331f0:	cmp	r2, #0
   331f4:	beq	3320c <GetDataSlab+0x12200>
   331f8:	ldr	r3, [sp, #16]
   331fc:	ldr	r3, [r3, #-4]
   33200:	mul	r3, r3, r2
   33204:	add	r5, r5, r3, lsl #3
   33208:	add	fp, fp, r3
   3320c:	add	sl, sl, #1
   33210:	ldr	r3, [sp, #208]	; 0xd0
   33214:	cmp	r3, sl
   33218:	beq	332a4 <GetDataSlab+0x12298>
   3321c:	ldr	r3, [r6]
   33220:	add	r3, r3, #1
   33224:	str	r3, [r6]
   33228:	add	r9, r9, #4
   3322c:	ldr	r2, [sp, #12]
   33230:	ldr	r1, [r2, #4]!
   33234:	str	r2, [sp, #12]
   33238:	mov	r0, r3
   3323c:	bl	517e8 <__aeabi_idivmod>
   33240:	cmp	r1, #0
   33244:	bne	33290 <GetDataSlab+0x12284>
   33248:	mov	r3, #0
   3324c:	str	r3, [r6], #4
   33250:	add	r7, r7, #4
   33254:	str	r7, [sp, #16]
   33258:	ldr	r4, [r7]
   3325c:	mov	r1, r4
   33260:	mov	r0, fp
   33264:	bl	517e8 <__aeabi_idivmod>
   33268:	subs	r3, r1, #0
   3326c:	beq	331ec <GetDataSlab+0x121e0>
   33270:	ldr	r2, [r7, #-4]
   33274:	ldr	r1, [r9]
   33278:	sub	r3, r4, r3
   3327c:	mla	r3, r1, r2, r3
   33280:	add	r5, r5, r3, lsl #3
   33284:	add	fp, fp, r3
   33288:	b	3320c <GetDataSlab+0x12200>
   3328c:	mov	sl, #1
   33290:	add	r3, sp, #152	; 0x98
   33294:	add	r3, r3, sl, lsl #2
   33298:	ldr	r3, [r3, #-120]	; 0xffffff88
   3329c:	add	fp, fp, r3
   332a0:	add	r5, r5, r3, lsl #3
   332a4:	ldr	r3, [sp, #24]
   332a8:	ldr	r2, [sp, #8]
   332ac:	add	r3, r3, r2
   332b0:	str	r3, [sp, #24]
   332b4:	ldr	r2, [sp, #20]
   332b8:	cmp	r3, r2
   332bc:	bge	40f8c <GetDataSlab+0x1ff80>
   332c0:	ldr	r3, [sp, #196]	; 0xc4
   332c4:	ldr	r3, [r3]
   332c8:	cmp	r3, #0
   332cc:	addne	r5, r5, r3, lsl #3
   332d0:	addne	fp, fp, r3
   332d4:	ldr	r3, [sp, #204]	; 0xcc
   332d8:	ldr	r3, [r3]
   332dc:	str	r3, [sp, #8]
   332e0:	cmp	r3, #0
   332e4:	ble	33324 <GetDataSlab+0x12318>
   332e8:	ldr	r3, [sp, #4]
   332ec:	ldr	r2, [sp, #24]
   332f0:	add	r2, r3, r2, lsl #2
   332f4:	mov	r3, #0
   332f8:	ldr	r1, [r5]
   332fc:	str	r1, [r2], #4
   33300:	ldr	r1, [r8]
   33304:	add	r5, r5, r1, lsl #3
   33308:	add	fp, fp, r1
   3330c:	add	r3, r3, #1
   33310:	ldr	r1, [sp, #204]	; 0xcc
   33314:	ldr	r1, [r1]
   33318:	str	r1, [sp, #8]
   3331c:	cmp	r1, r3
   33320:	bgt	332f8 <GetDataSlab+0x122ec>
   33324:	ldr	r3, [r8]
   33328:	ldr	r2, [sp, #8]
   3332c:	mul	r3, r3, r2
   33330:	ldr	r2, [sp, #192]	; 0xc0
   33334:	ldr	r2, [r2]
   33338:	sub	r3, r2, r3
   3333c:	ldr	r2, [sp, #196]	; 0xc4
   33340:	ldr	r2, [r2]
   33344:	sub	r3, r3, r2
   33348:	add	fp, fp, r3
   3334c:	add	r5, r5, r3, lsl #3
   33350:	ldr	r3, [sp, #208]	; 0xd0
   33354:	cmp	r3, #1
   33358:	ble	332a4 <GetDataSlab+0x12298>
   3335c:	ldr	r3, [sp, #76]	; 0x4c
   33360:	add	r3, r3, #1
   33364:	str	r3, [sp, #76]	; 0x4c
   33368:	ldr	r2, [sp, #204]	; 0xcc
   3336c:	ldr	r1, [r2, #4]
   33370:	mov	r0, r3
   33374:	bl	517e8 <__aeabi_idivmod>
   33378:	cmp	r1, #0
   3337c:	bne	3328c <GetDataSlab+0x12280>
   33380:	add	r6, sp, #76	; 0x4c
   33384:	ldr	r3, [sp, #204]	; 0xcc
   33388:	add	r3, r3, #4
   3338c:	str	r3, [sp, #12]
   33390:	ldr	r3, [sp, #196]	; 0xc4
   33394:	add	r9, r3, #4
   33398:	add	r7, sp, #112	; 0x70
   3339c:	mov	sl, #1
   333a0:	b	33248 <GetDataSlab+0x1223c>
   333a4:	mov	fp, #0
   333a8:	b	41050 <GetDataSlab+0x20044>
   333ac:	ldr	r3, [sp, #20]
   333b0:	cmp	r3, #0
   333b4:	ble	3d530 <GetDataSlab+0x1c524>
   333b8:	mov	r3, #0
   333bc:	str	r3, [sp, #16]
   333c0:	b	33494 <GetDataSlab+0x12488>
   333c4:	ldr	r2, [r8]
   333c8:	cmp	r2, #0
   333cc:	beq	333e4 <GetDataSlab+0x123d8>
   333d0:	ldr	r3, [sp, #12]
   333d4:	ldr	r3, [r3, #-4]
   333d8:	mul	r3, r3, r2
   333dc:	add	r5, r5, r3, lsl #3
   333e0:	add	fp, fp, r3
   333e4:	add	r9, r9, #1
   333e8:	ldr	r3, [sp, #208]	; 0xd0
   333ec:	cmp	r3, r9
   333f0:	beq	3347c <GetDataSlab+0x12470>
   333f4:	ldr	r3, [r6]
   333f8:	add	r3, r3, #1
   333fc:	str	r3, [r6]
   33400:	add	r8, r8, #4
   33404:	ldr	r2, [sp, #8]
   33408:	ldr	r1, [r2, #4]!
   3340c:	str	r2, [sp, #8]
   33410:	mov	r0, r3
   33414:	bl	517e8 <__aeabi_idivmod>
   33418:	cmp	r1, #0
   3341c:	bne	33468 <GetDataSlab+0x1245c>
   33420:	mov	r3, #0
   33424:	str	r3, [r6], #4
   33428:	add	r7, r7, #4
   3342c:	str	r7, [sp, #12]
   33430:	ldr	r4, [r7]
   33434:	mov	r1, r4
   33438:	mov	r0, fp
   3343c:	bl	517e8 <__aeabi_idivmod>
   33440:	subs	r3, r1, #0
   33444:	beq	333c4 <GetDataSlab+0x123b8>
   33448:	ldr	r2, [r7, #-4]
   3344c:	ldr	r1, [r8]
   33450:	sub	r3, r4, r3
   33454:	mla	r3, r1, r2, r3
   33458:	add	r5, r5, r3, lsl #3
   3345c:	add	fp, fp, r3
   33460:	b	333e4 <GetDataSlab+0x123d8>
   33464:	ldr	r9, [sp, #28]
   33468:	add	r3, sp, #152	; 0x98
   3346c:	add	r3, r3, r9, lsl #2
   33470:	ldr	r3, [r3, #-120]	; 0xffffff88
   33474:	add	fp, fp, r3
   33478:	add	r5, r5, r3, lsl #3
   3347c:	ldr	r3, [sp, #16]
   33480:	add	r3, r3, sl
   33484:	str	r3, [sp, #16]
   33488:	ldr	r2, [sp, #20]
   3348c:	cmp	r3, r2
   33490:	bge	33558 <GetDataSlab+0x1254c>
   33494:	ldr	r3, [sp, #196]	; 0xc4
   33498:	ldr	r3, [r3]
   3349c:	cmp	r3, #0
   334a0:	addne	r5, r5, r3, lsl #3
   334a4:	addne	fp, fp, r3
   334a8:	ldr	r3, [sp, #204]	; 0xcc
   334ac:	ldr	sl, [r3]
   334b0:	cmp	sl, #0
   334b4:	ble	334e8 <GetDataSlab+0x124dc>
   334b8:	sub	r0, r5, #8
   334bc:	ldr	r3, [sp, #4]
   334c0:	ldr	r2, [sp, #16]
   334c4:	add	r1, r3, r2, lsl #2
   334c8:	mov	r2, #0
   334cc:	ldr	r3, [r0, #8]!
   334d0:	str	r3, [r1], #4
   334d4:	add	r2, r2, #1
   334d8:	ldr	r3, [sp, #204]	; 0xcc
   334dc:	ldr	sl, [r3]
   334e0:	cmp	sl, r2
   334e4:	bgt	334cc <GetDataSlab+0x124c0>
   334e8:	ldr	r3, [sp, #192]	; 0xc0
   334ec:	ldr	r2, [r3]
   334f0:	ldr	r3, [sp, #196]	; 0xc4
   334f4:	ldr	r3, [r3]
   334f8:	sub	r3, r2, r3
   334fc:	add	fp, fp, r3
   33500:	add	r5, r5, r3, lsl #3
   33504:	ldr	r3, [sp, #208]	; 0xd0
   33508:	cmp	r3, #1
   3350c:	ble	3347c <GetDataSlab+0x12470>
   33510:	ldr	r3, [sp, #76]	; 0x4c
   33514:	add	r3, r3, #1
   33518:	str	r3, [sp, #76]	; 0x4c
   3351c:	ldr	r2, [sp, #204]	; 0xcc
   33520:	ldr	r1, [r2, #4]
   33524:	mov	r0, r3
   33528:	bl	517e8 <__aeabi_idivmod>
   3352c:	cmp	r1, #0
   33530:	bne	33464 <GetDataSlab+0x12458>
   33534:	add	r6, sp, #76	; 0x4c
   33538:	ldr	r3, [sp, #204]	; 0xcc
   3353c:	add	r3, r3, #4
   33540:	str	r3, [sp, #8]
   33544:	ldr	r3, [sp, #196]	; 0xc4
   33548:	add	r8, r3, #4
   3354c:	add	r7, sp, #112	; 0x70
   33550:	ldr	r9, [sp, #28]
   33554:	b	33420 <GetDataSlab+0x12414>
   33558:	mov	r3, #0
   3355c:	b	24fa8 <GetDataSlab+0x3f9c>
   33560:	ldr	r2, [r9]
   33564:	cmp	r2, #0
   33568:	beq	33580 <GetDataSlab+0x12574>
   3356c:	ldr	r3, [sp, #16]
   33570:	ldr	r3, [r3, #-4]
   33574:	mul	r3, r3, r2
   33578:	add	r5, r5, r3, lsl #3
   3357c:	add	fp, fp, r3
   33580:	add	sl, sl, #1
   33584:	ldr	r3, [sp, #208]	; 0xd0
   33588:	cmp	r3, sl
   3358c:	beq	33618 <GetDataSlab+0x1260c>
   33590:	ldr	r3, [r6]
   33594:	add	r3, r3, #1
   33598:	str	r3, [r6]
   3359c:	add	r9, r9, #4
   335a0:	ldr	r2, [sp, #12]
   335a4:	ldr	r1, [r2, #4]!
   335a8:	str	r2, [sp, #12]
   335ac:	mov	r0, r3
   335b0:	bl	517e8 <__aeabi_idivmod>
   335b4:	cmp	r1, #0
   335b8:	bne	33604 <GetDataSlab+0x125f8>
   335bc:	mov	r3, #0
   335c0:	str	r3, [r6], #4
   335c4:	add	r7, r7, #4
   335c8:	str	r7, [sp, #16]
   335cc:	ldr	r4, [r7]
   335d0:	mov	r1, r4
   335d4:	mov	r0, fp
   335d8:	bl	517e8 <__aeabi_idivmod>
   335dc:	subs	r3, r1, #0
   335e0:	beq	33560 <GetDataSlab+0x12554>
   335e4:	ldr	r2, [r7, #-4]
   335e8:	ldr	r1, [r9]
   335ec:	sub	r3, r4, r3
   335f0:	mla	r3, r1, r2, r3
   335f4:	add	r5, r5, r3, lsl #3
   335f8:	add	fp, fp, r3
   335fc:	b	33580 <GetDataSlab+0x12574>
   33600:	mov	sl, #1
   33604:	add	r3, sp, #152	; 0x98
   33608:	add	r3, r3, sl, lsl #2
   3360c:	ldr	r3, [r3, #-120]	; 0xffffff88
   33610:	add	fp, fp, r3
   33614:	add	r5, r5, r3, lsl #3
   33618:	ldr	r3, [sp, #24]
   3361c:	ldr	r2, [sp, #8]
   33620:	add	r3, r3, r2
   33624:	str	r3, [sp, #24]
   33628:	ldr	r2, [sp, #20]
   3362c:	cmp	r3, r2
   33630:	bge	33718 <GetDataSlab+0x1270c>
   33634:	ldr	r3, [sp, #196]	; 0xc4
   33638:	ldr	r3, [r3]
   3363c:	cmp	r3, #0
   33640:	addne	r5, r5, r3, lsl #3
   33644:	addne	fp, fp, r3
   33648:	ldr	r3, [sp, #204]	; 0xcc
   3364c:	ldr	r3, [r3]
   33650:	str	r3, [sp, #8]
   33654:	cmp	r3, #0
   33658:	ble	33698 <GetDataSlab+0x1268c>
   3365c:	ldr	r3, [sp, #4]
   33660:	ldr	r2, [sp, #24]
   33664:	add	r2, r3, r2, lsl #2
   33668:	mov	r3, #0
   3366c:	ldr	r1, [r5]
   33670:	str	r1, [r2], #4
   33674:	ldr	r1, [r8]
   33678:	add	r5, r5, r1, lsl #3
   3367c:	add	fp, fp, r1
   33680:	add	r3, r3, #1
   33684:	ldr	r1, [sp, #204]	; 0xcc
   33688:	ldr	r1, [r1]
   3368c:	str	r1, [sp, #8]
   33690:	cmp	r1, r3
   33694:	bgt	3366c <GetDataSlab+0x12660>
   33698:	ldr	r3, [r8]
   3369c:	ldr	r2, [sp, #8]
   336a0:	mul	r3, r3, r2
   336a4:	ldr	r2, [sp, #192]	; 0xc0
   336a8:	ldr	r2, [r2]
   336ac:	sub	r3, r2, r3
   336b0:	ldr	r2, [sp, #196]	; 0xc4
   336b4:	ldr	r2, [r2]
   336b8:	sub	r3, r3, r2
   336bc:	add	fp, fp, r3
   336c0:	add	r5, r5, r3, lsl #3
   336c4:	ldr	r3, [sp, #208]	; 0xd0
   336c8:	cmp	r3, #1
   336cc:	ble	33618 <GetDataSlab+0x1260c>
   336d0:	ldr	r3, [sp, #76]	; 0x4c
   336d4:	add	r3, r3, #1
   336d8:	str	r3, [sp, #76]	; 0x4c
   336dc:	ldr	r2, [sp, #204]	; 0xcc
   336e0:	ldr	r1, [r2, #4]
   336e4:	mov	r0, r3
   336e8:	bl	517e8 <__aeabi_idivmod>
   336ec:	cmp	r1, #0
   336f0:	bne	33600 <GetDataSlab+0x125f4>
   336f4:	add	r6, sp, #76	; 0x4c
   336f8:	ldr	r3, [sp, #204]	; 0xcc
   336fc:	add	r3, r3, #4
   33700:	str	r3, [sp, #12]
   33704:	ldr	r3, [sp, #196]	; 0xc4
   33708:	add	r9, r3, #4
   3370c:	add	r7, sp, #112	; 0x70
   33710:	mov	sl, #1
   33714:	b	335bc <GetDataSlab+0x125b0>
   33718:	mov	r3, #0
   3371c:	b	24fa8 <GetDataSlab+0x3f9c>
   33720:	sub	r3, r4, #1
   33724:	cmp	r3, #8
   33728:	addls	pc, pc, r3, lsl #2
   3372c:	b	35674 <GetDataSlab+0x14668>
   33730:	b	34eb4 <GetDataSlab+0x13ea8>
   33734:	b	35294 <GetDataSlab+0x14288>
   33738:	b	346f4 <GetDataSlab+0x136e8>
   3373c:	b	34ad4 <GetDataSlab+0x13ac8>
   33740:	b	33f34 <GetDataSlab+0x12f28>
   33744:	b	34314 <GetDataSlab+0x13308>
   33748:	b	33b44 <GetDataSlab+0x12b38>
   3374c:	b	35674 <GetDataSlab+0x14668>
   33750:	b	33754 <GetDataSlab+0x12748>
   33754:	ldr	r3, [r8]
   33758:	str	r3, [sp, #28]
   3375c:	sub	r3, r3, #1
   33760:	str	r3, [sp, #32]
   33764:	ldr	r3, [sp, #192]	; 0xc0
   33768:	ldr	r3, [r3]
   3376c:	str	r3, [sp, #112]	; 0x70
   33770:	ldr	r3, [sp, #204]	; 0xcc
   33774:	ldr	r3, [r3]
   33778:	str	r3, [sp, #20]
   3377c:	ldr	r3, [sp, #208]	; 0xd0
   33780:	cmp	r3, #1
   33784:	ble	337b8 <GetDataSlab+0x127ac>
   33788:	str	r8, [sp, #16]
   3378c:	add	sl, sp, #36	; 0x24
   33790:	ldr	lr, [sp, #192]	; 0xc0
   33794:	add	r9, sp, #112	; 0x70
   33798:	ldr	r3, [sp, #204]	; 0xcc
   3379c:	add	r5, r3, #4
   337a0:	ldr	r3, [sp, #196]	; 0xc4
   337a4:	add	r4, r3, #4
   337a8:	str	lr, [sp, #12]
   337ac:	mov	r6, #2
   337b0:	mov	fp, #0
   337b4:	b	410b0 <GetDataSlab+0x200a4>
   337b8:	mov	fp, #0
   337bc:	b	4113c <GetDataSlab+0x20130>
   337c0:	ldr	r3, [sp, #20]
   337c4:	cmp	r3, #0
   337c8:	ble	3d538 <GetDataSlab+0x1c52c>
   337cc:	mov	r3, #0
   337d0:	str	r3, [sp, #16]
   337d4:	b	338a8 <GetDataSlab+0x1289c>
   337d8:	ldr	r2, [r8]
   337dc:	cmp	r2, #0
   337e0:	beq	337f8 <GetDataSlab+0x127ec>
   337e4:	ldr	r3, [sp, #12]
   337e8:	ldr	r3, [r3, #-4]
   337ec:	mul	r3, r3, r2
   337f0:	add	r5, r5, r3, lsl #3
   337f4:	add	fp, fp, r3
   337f8:	add	r9, r9, #1
   337fc:	ldr	r3, [sp, #208]	; 0xd0
   33800:	cmp	r3, r9
   33804:	beq	33890 <GetDataSlab+0x12884>
   33808:	ldr	r3, [r6]
   3380c:	add	r3, r3, #1
   33810:	str	r3, [r6]
   33814:	add	r8, r8, #4
   33818:	ldr	r2, [sp, #8]
   3381c:	ldr	r1, [r2, #4]!
   33820:	str	r2, [sp, #8]
   33824:	mov	r0, r3
   33828:	bl	517e8 <__aeabi_idivmod>
   3382c:	cmp	r1, #0
   33830:	bne	3387c <GetDataSlab+0x12870>
   33834:	mov	r3, #0
   33838:	str	r3, [r6], #4
   3383c:	add	r7, r7, #4
   33840:	str	r7, [sp, #12]
   33844:	ldr	r4, [r7]
   33848:	mov	r1, r4
   3384c:	mov	r0, fp
   33850:	bl	517e8 <__aeabi_idivmod>
   33854:	subs	r3, r1, #0
   33858:	beq	337d8 <GetDataSlab+0x127cc>
   3385c:	ldr	r2, [r7, #-4]
   33860:	ldr	r1, [r8]
   33864:	sub	r3, r4, r3
   33868:	mla	r3, r1, r2, r3
   3386c:	add	r5, r5, r3, lsl #3
   33870:	add	fp, fp, r3
   33874:	b	337f8 <GetDataSlab+0x127ec>
   33878:	ldr	r9, [sp, #28]
   3387c:	add	r3, sp, #152	; 0x98
   33880:	add	r3, r3, r9, lsl #2
   33884:	ldr	r3, [r3, #-120]	; 0xffffff88
   33888:	add	fp, fp, r3
   3388c:	add	r5, r5, r3, lsl #3
   33890:	ldr	r3, [sp, #16]
   33894:	add	r3, r3, sl
   33898:	str	r3, [sp, #16]
   3389c:	ldr	r2, [sp, #20]
   338a0:	cmp	r3, r2
   338a4:	bge	33974 <GetDataSlab+0x12968>
   338a8:	ldr	r3, [sp, #196]	; 0xc4
   338ac:	ldr	r3, [r3]
   338b0:	cmp	r3, #0
   338b4:	addne	r5, r5, r3, lsl #3
   338b8:	addne	fp, fp, r3
   338bc:	ldr	r3, [sp, #204]	; 0xcc
   338c0:	ldr	sl, [r3]
   338c4:	cmp	sl, #0
   338c8:	ble	33904 <GetDataSlab+0x128f8>
   338cc:	mov	r1, r5
   338d0:	ldr	r3, [sp, #4]
   338d4:	ldr	r2, [sp, #16]
   338d8:	add	r2, r3, r2, lsl #1
   338dc:	mov	r3, #0
   338e0:	vldmia	r1!, {d7}
   338e4:	vcvt.s32.f64	s15, d7
   338e8:	vmov	r0, s15
   338ec:	strh	r0, [r2], #2
   338f0:	add	r3, r3, #1
   338f4:	ldr	r0, [sp, #204]	; 0xcc
   338f8:	ldr	sl, [r0]
   338fc:	cmp	sl, r3
   33900:	bgt	338e0 <GetDataSlab+0x128d4>
   33904:	ldr	r3, [sp, #192]	; 0xc0
   33908:	ldr	r2, [r3]
   3390c:	ldr	r3, [sp, #196]	; 0xc4
   33910:	ldr	r3, [r3]
   33914:	sub	r3, r2, r3
   33918:	add	fp, fp, r3
   3391c:	add	r5, r5, r3, lsl #3
   33920:	ldr	r3, [sp, #208]	; 0xd0
   33924:	cmp	r3, #1
   33928:	ble	33890 <GetDataSlab+0x12884>
   3392c:	ldr	r3, [sp, #76]	; 0x4c
   33930:	add	r3, r3, #1
   33934:	str	r3, [sp, #76]	; 0x4c
   33938:	ldr	r2, [sp, #204]	; 0xcc
   3393c:	ldr	r1, [r2, #4]
   33940:	mov	r0, r3
   33944:	bl	517e8 <__aeabi_idivmod>
   33948:	cmp	r1, #0
   3394c:	bne	33878 <GetDataSlab+0x1286c>
   33950:	add	r6, sp, #76	; 0x4c
   33954:	ldr	r3, [sp, #204]	; 0xcc
   33958:	add	r3, r3, #4
   3395c:	str	r3, [sp, #8]
   33960:	ldr	r3, [sp, #196]	; 0xc4
   33964:	add	r8, r3, #4
   33968:	add	r7, sp, #112	; 0x70
   3396c:	ldr	r9, [sp, #28]
   33970:	b	33834 <GetDataSlab+0x12828>
   33974:	mov	r3, #0
   33978:	b	24fa8 <GetDataSlab+0x3f9c>
   3397c:	ldr	r2, [r9]
   33980:	cmp	r2, #0
   33984:	beq	3399c <GetDataSlab+0x12990>
   33988:	ldr	r3, [sp, #16]
   3398c:	ldr	r3, [r3, #-4]
   33990:	mul	r3, r3, r2
   33994:	add	r5, r5, r3, lsl #3
   33998:	add	fp, fp, r3
   3399c:	add	sl, sl, #1
   339a0:	ldr	r3, [sp, #208]	; 0xd0
   339a4:	cmp	r3, sl
   339a8:	beq	33a34 <GetDataSlab+0x12a28>
   339ac:	ldr	r3, [r6]
   339b0:	add	r3, r3, #1
   339b4:	str	r3, [r6]
   339b8:	add	r9, r9, #4
   339bc:	ldr	r2, [sp, #12]
   339c0:	ldr	r1, [r2, #4]!
   339c4:	str	r2, [sp, #12]
   339c8:	mov	r0, r3
   339cc:	bl	517e8 <__aeabi_idivmod>
   339d0:	cmp	r1, #0
   339d4:	bne	33a20 <GetDataSlab+0x12a14>
   339d8:	mov	r3, #0
   339dc:	str	r3, [r6], #4
   339e0:	add	r7, r7, #4
   339e4:	str	r7, [sp, #16]
   339e8:	ldr	r4, [r7]
   339ec:	mov	r1, r4
   339f0:	mov	r0, fp
   339f4:	bl	517e8 <__aeabi_idivmod>
   339f8:	subs	r3, r1, #0
   339fc:	beq	3397c <GetDataSlab+0x12970>
   33a00:	ldr	r2, [r7, #-4]
   33a04:	ldr	r1, [r9]
   33a08:	sub	r3, r4, r3
   33a0c:	mla	r3, r1, r2, r3
   33a10:	add	r5, r5, r3, lsl #3
   33a14:	add	fp, fp, r3
   33a18:	b	3399c <GetDataSlab+0x12990>
   33a1c:	mov	sl, #1
   33a20:	add	r3, sp, #152	; 0x98
   33a24:	add	r3, r3, sl, lsl #2
   33a28:	ldr	r3, [r3, #-120]	; 0xffffff88
   33a2c:	add	fp, fp, r3
   33a30:	add	r5, r5, r3, lsl #3
   33a34:	ldr	r3, [sp, #24]
   33a38:	ldr	r2, [sp, #8]
   33a3c:	add	r3, r3, r2
   33a40:	str	r3, [sp, #24]
   33a44:	ldr	r2, [sp, #20]
   33a48:	cmp	r3, r2
   33a4c:	bge	33b3c <GetDataSlab+0x12b30>
   33a50:	ldr	r3, [sp, #196]	; 0xc4
   33a54:	ldr	r3, [r3]
   33a58:	cmp	r3, #0
   33a5c:	addne	r5, r5, r3, lsl #3
   33a60:	addne	fp, fp, r3
   33a64:	ldr	r3, [sp, #204]	; 0xcc
   33a68:	ldr	r3, [r3]
   33a6c:	str	r3, [sp, #8]
   33a70:	cmp	r3, #0
   33a74:	ble	33abc <GetDataSlab+0x12ab0>
   33a78:	ldr	r3, [sp, #4]
   33a7c:	ldr	r2, [sp, #24]
   33a80:	add	r2, r3, r2, lsl #1
   33a84:	mov	r3, #0
   33a88:	vldr	d7, [r5]
   33a8c:	vcvt.s32.f64	s15, d7
   33a90:	vmov	r1, s15
   33a94:	strh	r1, [r2], #2
   33a98:	ldr	r1, [r8]
   33a9c:	add	r5, r5, r1, lsl #3
   33aa0:	add	fp, fp, r1
   33aa4:	add	r3, r3, #1
   33aa8:	ldr	r1, [sp, #204]	; 0xcc
   33aac:	ldr	r1, [r1]
   33ab0:	str	r1, [sp, #8]
   33ab4:	cmp	r1, r3
   33ab8:	bgt	33a88 <GetDataSlab+0x12a7c>
   33abc:	ldr	r3, [r8]
   33ac0:	ldr	r2, [sp, #8]
   33ac4:	mul	r3, r3, r2
   33ac8:	ldr	r2, [sp, #192]	; 0xc0
   33acc:	ldr	r2, [r2]
   33ad0:	sub	r3, r2, r3
   33ad4:	ldr	r2, [sp, #196]	; 0xc4
   33ad8:	ldr	r2, [r2]
   33adc:	sub	r3, r3, r2
   33ae0:	add	fp, fp, r3
   33ae4:	add	r5, r5, r3, lsl #3
   33ae8:	ldr	r3, [sp, #208]	; 0xd0
   33aec:	cmp	r3, #1
   33af0:	ble	33a34 <GetDataSlab+0x12a28>
   33af4:	ldr	r3, [sp, #76]	; 0x4c
   33af8:	add	r3, r3, #1
   33afc:	str	r3, [sp, #76]	; 0x4c
   33b00:	ldr	r2, [sp, #204]	; 0xcc
   33b04:	ldr	r1, [r2, #4]
   33b08:	mov	r0, r3
   33b0c:	bl	517e8 <__aeabi_idivmod>
   33b10:	cmp	r1, #0
   33b14:	bne	33a1c <GetDataSlab+0x12a10>
   33b18:	add	r6, sp, #76	; 0x4c
   33b1c:	ldr	r3, [sp, #204]	; 0xcc
   33b20:	add	r3, r3, #4
   33b24:	str	r3, [sp, #12]
   33b28:	ldr	r3, [sp, #196]	; 0xc4
   33b2c:	add	r9, r3, #4
   33b30:	add	r7, sp, #112	; 0x70
   33b34:	mov	sl, #1
   33b38:	b	339d8 <GetDataSlab+0x129cc>
   33b3c:	mov	r3, #0
   33b40:	b	24fa8 <GetDataSlab+0x3f9c>
   33b44:	ldr	r3, [r8]
   33b48:	str	r3, [sp, #28]
   33b4c:	sub	r3, r3, #1
   33b50:	str	r3, [sp, #32]
   33b54:	ldr	r3, [sp, #192]	; 0xc0
   33b58:	ldr	r3, [r3]
   33b5c:	str	r3, [sp, #112]	; 0x70
   33b60:	ldr	r3, [sp, #204]	; 0xcc
   33b64:	ldr	r3, [r3]
   33b68:	str	r3, [sp, #20]
   33b6c:	ldr	r3, [sp, #208]	; 0xd0
   33b70:	cmp	r3, #1
   33b74:	ble	33ba8 <GetDataSlab+0x12b9c>
   33b78:	str	r8, [sp, #16]
   33b7c:	add	sl, sp, #36	; 0x24
   33b80:	ldr	lr, [sp, #192]	; 0xc0
   33b84:	add	r9, sp, #112	; 0x70
   33b88:	ldr	r3, [sp, #204]	; 0xcc
   33b8c:	add	r5, r3, #4
   33b90:	ldr	r3, [sp, #196]	; 0xc4
   33b94:	add	r4, r3, #4
   33b98:	str	lr, [sp, #12]
   33b9c:	mov	r6, #2
   33ba0:	mov	fp, #0
   33ba4:	b	4119c <GetDataSlab+0x20190>
   33ba8:	mov	fp, #0
   33bac:	b	41228 <GetDataSlab+0x2021c>
   33bb0:	ldr	r3, [sp, #20]
   33bb4:	cmp	r3, #0
   33bb8:	ble	3d540 <GetDataSlab+0x1c534>
   33bbc:	mov	r3, #0
   33bc0:	str	r3, [sp, #16]
   33bc4:	b	33c98 <GetDataSlab+0x12c8c>
   33bc8:	ldr	r2, [r8]
   33bcc:	cmp	r2, #0
   33bd0:	beq	33be8 <GetDataSlab+0x12bdc>
   33bd4:	ldr	r3, [sp, #12]
   33bd8:	ldr	r3, [r3, #-4]
   33bdc:	mul	r3, r3, r2
   33be0:	add	r5, r5, r3, lsl #2
   33be4:	add	fp, fp, r3
   33be8:	add	r9, r9, #1
   33bec:	ldr	r3, [sp, #208]	; 0xd0
   33bf0:	cmp	r3, r9
   33bf4:	beq	33c80 <GetDataSlab+0x12c74>
   33bf8:	ldr	r3, [r6]
   33bfc:	add	r3, r3, #1
   33c00:	str	r3, [r6]
   33c04:	add	r8, r8, #4
   33c08:	ldr	r2, [sp, #8]
   33c0c:	ldr	r1, [r2, #4]!
   33c10:	str	r2, [sp, #8]
   33c14:	mov	r0, r3
   33c18:	bl	517e8 <__aeabi_idivmod>
   33c1c:	cmp	r1, #0
   33c20:	bne	33c6c <GetDataSlab+0x12c60>
   33c24:	mov	r3, #0
   33c28:	str	r3, [r6], #4
   33c2c:	add	r7, r7, #4
   33c30:	str	r7, [sp, #12]
   33c34:	ldr	r4, [r7]
   33c38:	mov	r1, r4
   33c3c:	mov	r0, fp
   33c40:	bl	517e8 <__aeabi_idivmod>
   33c44:	subs	r3, r1, #0
   33c48:	beq	33bc8 <GetDataSlab+0x12bbc>
   33c4c:	ldr	r2, [r7, #-4]
   33c50:	ldr	r1, [r8]
   33c54:	sub	r3, r4, r3
   33c58:	mla	r3, r1, r2, r3
   33c5c:	add	r5, r5, r3, lsl #2
   33c60:	add	fp, fp, r3
   33c64:	b	33be8 <GetDataSlab+0x12bdc>
   33c68:	ldr	r9, [sp, #28]
   33c6c:	add	r3, sp, #152	; 0x98
   33c70:	add	r3, r3, r9, lsl #2
   33c74:	ldr	r3, [r3, #-120]	; 0xffffff88
   33c78:	add	fp, fp, r3
   33c7c:	add	r5, r5, r3, lsl #2
   33c80:	ldr	r3, [sp, #16]
   33c84:	add	r3, r3, sl
   33c88:	str	r3, [sp, #16]
   33c8c:	ldr	r2, [sp, #20]
   33c90:	cmp	r3, r2
   33c94:	bge	33d64 <GetDataSlab+0x12d58>
   33c98:	ldr	r3, [sp, #196]	; 0xc4
   33c9c:	ldr	r3, [r3]
   33ca0:	cmp	r3, #0
   33ca4:	addne	r5, r5, r3, lsl #2
   33ca8:	addne	fp, fp, r3
   33cac:	ldr	r3, [sp, #204]	; 0xcc
   33cb0:	ldr	sl, [r3]
   33cb4:	cmp	sl, #0
   33cb8:	ble	33cf4 <GetDataSlab+0x12ce8>
   33cbc:	mov	r1, r5
   33cc0:	ldr	r3, [sp, #4]
   33cc4:	ldr	r2, [sp, #16]
   33cc8:	add	r2, r3, r2, lsl #1
   33ccc:	mov	r3, #0
   33cd0:	vldmia	r1!, {s15}
   33cd4:	vcvt.s32.f32	s15, s15
   33cd8:	vmov	r0, s15
   33cdc:	strh	r0, [r2], #2
   33ce0:	add	r3, r3, #1
   33ce4:	ldr	r0, [sp, #204]	; 0xcc
   33ce8:	ldr	sl, [r0]
   33cec:	cmp	sl, r3
   33cf0:	bgt	33cd0 <GetDataSlab+0x12cc4>
   33cf4:	ldr	r3, [sp, #192]	; 0xc0
   33cf8:	ldr	r2, [r3]
   33cfc:	ldr	r3, [sp, #196]	; 0xc4
   33d00:	ldr	r3, [r3]
   33d04:	sub	r3, r2, r3
   33d08:	add	fp, fp, r3
   33d0c:	add	r5, r5, r3, lsl #2
   33d10:	ldr	r3, [sp, #208]	; 0xd0
   33d14:	cmp	r3, #1
   33d18:	ble	33c80 <GetDataSlab+0x12c74>
   33d1c:	ldr	r3, [sp, #76]	; 0x4c
   33d20:	add	r3, r3, #1
   33d24:	str	r3, [sp, #76]	; 0x4c
   33d28:	ldr	r2, [sp, #204]	; 0xcc
   33d2c:	ldr	r1, [r2, #4]
   33d30:	mov	r0, r3
   33d34:	bl	517e8 <__aeabi_idivmod>
   33d38:	cmp	r1, #0
   33d3c:	bne	33c68 <GetDataSlab+0x12c5c>
   33d40:	add	r6, sp, #76	; 0x4c
   33d44:	ldr	r3, [sp, #204]	; 0xcc
   33d48:	add	r3, r3, #4
   33d4c:	str	r3, [sp, #8]
   33d50:	ldr	r3, [sp, #196]	; 0xc4
   33d54:	add	r8, r3, #4
   33d58:	add	r7, sp, #112	; 0x70
   33d5c:	ldr	r9, [sp, #28]
   33d60:	b	33c24 <GetDataSlab+0x12c18>
   33d64:	mov	r3, #0
   33d68:	b	24fa8 <GetDataSlab+0x3f9c>
   33d6c:	ldr	r2, [r9]
   33d70:	cmp	r2, #0
   33d74:	beq	33d8c <GetDataSlab+0x12d80>
   33d78:	ldr	r3, [sp, #16]
   33d7c:	ldr	r3, [r3, #-4]
   33d80:	mul	r3, r3, r2
   33d84:	add	r5, r5, r3, lsl #2
   33d88:	add	fp, fp, r3
   33d8c:	add	sl, sl, #1
   33d90:	ldr	r3, [sp, #208]	; 0xd0
   33d94:	cmp	r3, sl
   33d98:	beq	33e24 <GetDataSlab+0x12e18>
   33d9c:	ldr	r3, [r6]
   33da0:	add	r3, r3, #1
   33da4:	str	r3, [r6]
   33da8:	add	r9, r9, #4
   33dac:	ldr	r2, [sp, #12]
   33db0:	ldr	r1, [r2, #4]!
   33db4:	str	r2, [sp, #12]
   33db8:	mov	r0, r3
   33dbc:	bl	517e8 <__aeabi_idivmod>
   33dc0:	cmp	r1, #0
   33dc4:	bne	33e10 <GetDataSlab+0x12e04>
   33dc8:	mov	r3, #0
   33dcc:	str	r3, [r6], #4
   33dd0:	add	r7, r7, #4
   33dd4:	str	r7, [sp, #16]
   33dd8:	ldr	r4, [r7]
   33ddc:	mov	r1, r4
   33de0:	mov	r0, fp
   33de4:	bl	517e8 <__aeabi_idivmod>
   33de8:	subs	r3, r1, #0
   33dec:	beq	33d6c <GetDataSlab+0x12d60>
   33df0:	ldr	r2, [r7, #-4]
   33df4:	ldr	r1, [r9]
   33df8:	sub	r3, r4, r3
   33dfc:	mla	r3, r1, r2, r3
   33e00:	add	r5, r5, r3, lsl #2
   33e04:	add	fp, fp, r3
   33e08:	b	33d8c <GetDataSlab+0x12d80>
   33e0c:	mov	sl, #1
   33e10:	add	r3, sp, #152	; 0x98
   33e14:	add	r3, r3, sl, lsl #2
   33e18:	ldr	r3, [r3, #-120]	; 0xffffff88
   33e1c:	add	fp, fp, r3
   33e20:	add	r5, r5, r3, lsl #2
   33e24:	ldr	r3, [sp, #24]
   33e28:	ldr	r2, [sp, #8]
   33e2c:	add	r3, r3, r2
   33e30:	str	r3, [sp, #24]
   33e34:	ldr	r2, [sp, #20]
   33e38:	cmp	r3, r2
   33e3c:	bge	33f2c <GetDataSlab+0x12f20>
   33e40:	ldr	r3, [sp, #196]	; 0xc4
   33e44:	ldr	r3, [r3]
   33e48:	cmp	r3, #0
   33e4c:	addne	r5, r5, r3, lsl #2
   33e50:	addne	fp, fp, r3
   33e54:	ldr	r3, [sp, #204]	; 0xcc
   33e58:	ldr	r3, [r3]
   33e5c:	str	r3, [sp, #8]
   33e60:	cmp	r3, #0
   33e64:	ble	33eac <GetDataSlab+0x12ea0>
   33e68:	ldr	r3, [sp, #4]
   33e6c:	ldr	r2, [sp, #24]
   33e70:	add	r2, r3, r2, lsl #1
   33e74:	mov	r3, #0
   33e78:	vldr	s15, [r5]
   33e7c:	vcvt.s32.f32	s15, s15
   33e80:	vmov	r1, s15
   33e84:	strh	r1, [r2], #2
   33e88:	ldr	r1, [r8]
   33e8c:	add	r5, r5, r1, lsl #2
   33e90:	add	fp, fp, r1
   33e94:	add	r3, r3, #1
   33e98:	ldr	r1, [sp, #204]	; 0xcc
   33e9c:	ldr	r1, [r1]
   33ea0:	str	r1, [sp, #8]
   33ea4:	cmp	r1, r3
   33ea8:	bgt	33e78 <GetDataSlab+0x12e6c>
   33eac:	ldr	r3, [r8]
   33eb0:	ldr	r2, [sp, #8]
   33eb4:	mul	r3, r3, r2
   33eb8:	ldr	r2, [sp, #192]	; 0xc0
   33ebc:	ldr	r2, [r2]
   33ec0:	sub	r3, r2, r3
   33ec4:	ldr	r2, [sp, #196]	; 0xc4
   33ec8:	ldr	r2, [r2]
   33ecc:	sub	r3, r3, r2
   33ed0:	add	fp, fp, r3
   33ed4:	add	r5, r5, r3, lsl #2
   33ed8:	ldr	r3, [sp, #208]	; 0xd0
   33edc:	cmp	r3, #1
   33ee0:	ble	33e24 <GetDataSlab+0x12e18>
   33ee4:	ldr	r3, [sp, #76]	; 0x4c
   33ee8:	add	r3, r3, #1
   33eec:	str	r3, [sp, #76]	; 0x4c
   33ef0:	ldr	r2, [sp, #204]	; 0xcc
   33ef4:	ldr	r1, [r2, #4]
   33ef8:	mov	r0, r3
   33efc:	bl	517e8 <__aeabi_idivmod>
   33f00:	cmp	r1, #0
   33f04:	bne	33e0c <GetDataSlab+0x12e00>
   33f08:	add	r6, sp, #76	; 0x4c
   33f0c:	ldr	r3, [sp, #204]	; 0xcc
   33f10:	add	r3, r3, #4
   33f14:	str	r3, [sp, #12]
   33f18:	ldr	r3, [sp, #196]	; 0xc4
   33f1c:	add	r9, r3, #4
   33f20:	add	r7, sp, #112	; 0x70
   33f24:	mov	sl, #1
   33f28:	b	33dc8 <GetDataSlab+0x12dbc>
   33f2c:	mov	r3, #0
   33f30:	b	24fa8 <GetDataSlab+0x3f9c>
   33f34:	ldr	r3, [r8]
   33f38:	str	r3, [sp, #28]
   33f3c:	sub	r3, r3, #1
   33f40:	str	r3, [sp, #32]
   33f44:	ldr	r3, [sp, #192]	; 0xc0
   33f48:	ldr	r3, [r3]
   33f4c:	str	r3, [sp, #112]	; 0x70
   33f50:	ldr	r3, [sp, #204]	; 0xcc
   33f54:	ldr	r3, [r3]
   33f58:	str	r3, [sp, #20]
   33f5c:	ldr	r3, [sp, #208]	; 0xd0
   33f60:	cmp	r3, #1
   33f64:	ble	33f98 <GetDataSlab+0x12f8c>
   33f68:	str	r8, [sp, #16]
   33f6c:	add	sl, sp, #36	; 0x24
   33f70:	ldr	lr, [sp, #192]	; 0xc0
   33f74:	add	r9, sp, #112	; 0x70
   33f78:	ldr	r3, [sp, #204]	; 0xcc
   33f7c:	add	r5, r3, #4
   33f80:	ldr	r3, [sp, #196]	; 0xc4
   33f84:	add	r4, r3, #4
   33f88:	str	lr, [sp, #12]
   33f8c:	mov	r6, #2
   33f90:	mov	fp, #0
   33f94:	b	41288 <GetDataSlab+0x2027c>
   33f98:	mov	fp, #0
   33f9c:	b	41314 <GetDataSlab+0x20308>
   33fa0:	ldr	r3, [sp, #20]
   33fa4:	cmp	r3, #0
   33fa8:	ble	3d548 <GetDataSlab+0x1c53c>
   33fac:	mov	r3, #0
   33fb0:	str	r3, [sp, #16]
   33fb4:	b	34088 <GetDataSlab+0x1307c>
   33fb8:	ldr	r2, [r8]
   33fbc:	cmp	r2, #0
   33fc0:	beq	33fd8 <GetDataSlab+0x12fcc>
   33fc4:	ldr	r3, [sp, #12]
   33fc8:	ldr	r3, [r3, #-4]
   33fcc:	mul	r3, r3, r2
   33fd0:	add	r5, r5, r3, lsl #2
   33fd4:	add	fp, fp, r3
   33fd8:	add	r9, r9, #1
   33fdc:	ldr	r3, [sp, #208]	; 0xd0
   33fe0:	cmp	r3, r9
   33fe4:	beq	34070 <GetDataSlab+0x13064>
   33fe8:	ldr	r3, [r6]
   33fec:	add	r3, r3, #1
   33ff0:	str	r3, [r6]
   33ff4:	add	r8, r8, #4
   33ff8:	ldr	r2, [sp, #8]
   33ffc:	ldr	r1, [r2, #4]!
   34000:	str	r2, [sp, #8]
   34004:	mov	r0, r3
   34008:	bl	517e8 <__aeabi_idivmod>
   3400c:	cmp	r1, #0
   34010:	bne	3405c <GetDataSlab+0x13050>
   34014:	mov	r3, #0
   34018:	str	r3, [r6], #4
   3401c:	add	r7, r7, #4
   34020:	str	r7, [sp, #12]
   34024:	ldr	r4, [r7]
   34028:	mov	r1, r4
   3402c:	mov	r0, fp
   34030:	bl	517e8 <__aeabi_idivmod>
   34034:	subs	r3, r1, #0
   34038:	beq	33fb8 <GetDataSlab+0x12fac>
   3403c:	ldr	r2, [r7, #-4]
   34040:	ldr	r1, [r8]
   34044:	sub	r3, r4, r3
   34048:	mla	r3, r1, r2, r3
   3404c:	add	r5, r5, r3, lsl #2
   34050:	add	fp, fp, r3
   34054:	b	33fd8 <GetDataSlab+0x12fcc>
   34058:	ldr	r9, [sp, #28]
   3405c:	add	r3, sp, #152	; 0x98
   34060:	add	r3, r3, r9, lsl #2
   34064:	ldr	r3, [r3, #-120]	; 0xffffff88
   34068:	add	fp, fp, r3
   3406c:	add	r5, r5, r3, lsl #2
   34070:	ldr	r3, [sp, #16]
   34074:	add	r3, r3, sl
   34078:	str	r3, [sp, #16]
   3407c:	ldr	r2, [sp, #20]
   34080:	cmp	r3, r2
   34084:	bge	3414c <GetDataSlab+0x13140>
   34088:	ldr	r3, [sp, #196]	; 0xc4
   3408c:	ldr	r3, [r3]
   34090:	cmp	r3, #0
   34094:	addne	r5, r5, r3, lsl #2
   34098:	addne	fp, fp, r3
   3409c:	ldr	r3, [sp, #204]	; 0xcc
   340a0:	ldr	sl, [r3]
   340a4:	cmp	sl, #0
   340a8:	ble	340dc <GetDataSlab+0x130d0>
   340ac:	sub	r0, r5, #4
   340b0:	ldr	r3, [sp, #4]
   340b4:	ldr	r2, [sp, #16]
   340b8:	add	r1, r3, r2, lsl #1
   340bc:	mov	r2, #0
   340c0:	ldr	r3, [r0, #4]!
   340c4:	strh	r3, [r1], #2
   340c8:	add	r2, r2, #1
   340cc:	ldr	r3, [sp, #204]	; 0xcc
   340d0:	ldr	sl, [r3]
   340d4:	cmp	sl, r2
   340d8:	bgt	340c0 <GetDataSlab+0x130b4>
   340dc:	ldr	r3, [sp, #192]	; 0xc0
   340e0:	ldr	r2, [r3]
   340e4:	ldr	r3, [sp, #196]	; 0xc4
   340e8:	ldr	r3, [r3]
   340ec:	sub	r3, r2, r3
   340f0:	add	fp, fp, r3
   340f4:	add	r5, r5, r3, lsl #2
   340f8:	ldr	r3, [sp, #208]	; 0xd0
   340fc:	cmp	r3, #1
   34100:	ble	34070 <GetDataSlab+0x13064>
   34104:	ldr	r3, [sp, #76]	; 0x4c
   34108:	add	r3, r3, #1
   3410c:	str	r3, [sp, #76]	; 0x4c
   34110:	ldr	r2, [sp, #204]	; 0xcc
   34114:	ldr	r1, [r2, #4]
   34118:	mov	r0, r3
   3411c:	bl	517e8 <__aeabi_idivmod>
   34120:	cmp	r1, #0
   34124:	bne	34058 <GetDataSlab+0x1304c>
   34128:	add	r6, sp, #76	; 0x4c
   3412c:	ldr	r3, [sp, #204]	; 0xcc
   34130:	add	r3, r3, #4
   34134:	str	r3, [sp, #8]
   34138:	ldr	r3, [sp, #196]	; 0xc4
   3413c:	add	r8, r3, #4
   34140:	add	r7, sp, #112	; 0x70
   34144:	ldr	r9, [sp, #28]
   34148:	b	34014 <GetDataSlab+0x13008>
   3414c:	mov	r3, #0
   34150:	b	24fa8 <GetDataSlab+0x3f9c>
   34154:	ldr	r2, [r9]
   34158:	cmp	r2, #0
   3415c:	beq	34174 <GetDataSlab+0x13168>
   34160:	ldr	r3, [sp, #16]
   34164:	ldr	r3, [r3, #-4]
   34168:	mul	r3, r3, r2
   3416c:	add	r5, r5, r3, lsl #2
   34170:	add	fp, fp, r3
   34174:	add	sl, sl, #1
   34178:	ldr	r3, [sp, #208]	; 0xd0
   3417c:	cmp	r3, sl
   34180:	beq	3420c <GetDataSlab+0x13200>
   34184:	ldr	r3, [r6]
   34188:	add	r3, r3, #1
   3418c:	str	r3, [r6]
   34190:	add	r9, r9, #4
   34194:	ldr	r2, [sp, #12]
   34198:	ldr	r1, [r2, #4]!
   3419c:	str	r2, [sp, #12]
   341a0:	mov	r0, r3
   341a4:	bl	517e8 <__aeabi_idivmod>
   341a8:	cmp	r1, #0
   341ac:	bne	341f8 <GetDataSlab+0x131ec>
   341b0:	mov	r3, #0
   341b4:	str	r3, [r6], #4
   341b8:	add	r7, r7, #4
   341bc:	str	r7, [sp, #16]
   341c0:	ldr	r4, [r7]
   341c4:	mov	r1, r4
   341c8:	mov	r0, fp
   341cc:	bl	517e8 <__aeabi_idivmod>
   341d0:	subs	r3, r1, #0
   341d4:	beq	34154 <GetDataSlab+0x13148>
   341d8:	ldr	r2, [r7, #-4]
   341dc:	ldr	r1, [r9]
   341e0:	sub	r3, r4, r3
   341e4:	mla	r3, r1, r2, r3
   341e8:	add	r5, r5, r3, lsl #2
   341ec:	add	fp, fp, r3
   341f0:	b	34174 <GetDataSlab+0x13168>
   341f4:	mov	sl, #1
   341f8:	add	r3, sp, #152	; 0x98
   341fc:	add	r3, r3, sl, lsl #2
   34200:	ldr	r3, [r3, #-120]	; 0xffffff88
   34204:	add	fp, fp, r3
   34208:	add	r5, r5, r3, lsl #2
   3420c:	ldr	r3, [sp, #24]
   34210:	ldr	r2, [sp, #8]
   34214:	add	r3, r3, r2
   34218:	str	r3, [sp, #24]
   3421c:	ldr	r2, [sp, #20]
   34220:	cmp	r3, r2
   34224:	bge	3430c <GetDataSlab+0x13300>
   34228:	ldr	r3, [sp, #196]	; 0xc4
   3422c:	ldr	r3, [r3]
   34230:	cmp	r3, #0
   34234:	addne	r5, r5, r3, lsl #2
   34238:	addne	fp, fp, r3
   3423c:	ldr	r3, [sp, #204]	; 0xcc
   34240:	ldr	r3, [r3]
   34244:	str	r3, [sp, #8]
   34248:	cmp	r3, #0
   3424c:	ble	3428c <GetDataSlab+0x13280>
   34250:	ldr	r3, [sp, #4]
   34254:	ldr	r2, [sp, #24]
   34258:	add	r2, r3, r2, lsl #1
   3425c:	mov	r3, #0
   34260:	ldr	r1, [r5]
   34264:	strh	r1, [r2], #2
   34268:	ldr	r1, [r8]
   3426c:	add	r5, r5, r1, lsl #2
   34270:	add	fp, fp, r1
   34274:	add	r3, r3, #1
   34278:	ldr	r1, [sp, #204]	; 0xcc
   3427c:	ldr	r1, [r1]
   34280:	str	r1, [sp, #8]
   34284:	cmp	r1, r3
   34288:	bgt	34260 <GetDataSlab+0x13254>
   3428c:	ldr	r3, [r8]
   34290:	ldr	r2, [sp, #8]
   34294:	mul	r3, r3, r2
   34298:	ldr	r2, [sp, #192]	; 0xc0
   3429c:	ldr	r2, [r2]
   342a0:	sub	r3, r2, r3
   342a4:	ldr	r2, [sp, #196]	; 0xc4
   342a8:	ldr	r2, [r2]
   342ac:	sub	r3, r3, r2
   342b0:	add	fp, fp, r3
   342b4:	add	r5, r5, r3, lsl #2
   342b8:	ldr	r3, [sp, #208]	; 0xd0
   342bc:	cmp	r3, #1
   342c0:	ble	3420c <GetDataSlab+0x13200>
   342c4:	ldr	r3, [sp, #76]	; 0x4c
   342c8:	add	r3, r3, #1
   342cc:	str	r3, [sp, #76]	; 0x4c
   342d0:	ldr	r2, [sp, #204]	; 0xcc
   342d4:	ldr	r1, [r2, #4]
   342d8:	mov	r0, r3
   342dc:	bl	517e8 <__aeabi_idivmod>
   342e0:	cmp	r1, #0
   342e4:	bne	341f4 <GetDataSlab+0x131e8>
   342e8:	add	r6, sp, #76	; 0x4c
   342ec:	ldr	r3, [sp, #204]	; 0xcc
   342f0:	add	r3, r3, #4
   342f4:	str	r3, [sp, #12]
   342f8:	ldr	r3, [sp, #196]	; 0xc4
   342fc:	add	r9, r3, #4
   34300:	add	r7, sp, #112	; 0x70
   34304:	mov	sl, #1
   34308:	b	341b0 <GetDataSlab+0x131a4>
   3430c:	mov	r3, #0
   34310:	b	24fa8 <GetDataSlab+0x3f9c>
   34314:	ldr	r3, [r8]
   34318:	str	r3, [sp, #28]
   3431c:	sub	r3, r3, #1
   34320:	str	r3, [sp, #32]
   34324:	ldr	r3, [sp, #192]	; 0xc0
   34328:	ldr	r3, [r3]
   3432c:	str	r3, [sp, #112]	; 0x70
   34330:	ldr	r3, [sp, #204]	; 0xcc
   34334:	ldr	r3, [r3]
   34338:	str	r3, [sp, #20]
   3433c:	ldr	r3, [sp, #208]	; 0xd0
   34340:	cmp	r3, #1
   34344:	ble	34378 <GetDataSlab+0x1336c>
   34348:	str	r8, [sp, #16]
   3434c:	add	sl, sp, #36	; 0x24
   34350:	ldr	lr, [sp, #192]	; 0xc0
   34354:	add	r9, sp, #112	; 0x70
   34358:	ldr	r3, [sp, #204]	; 0xcc
   3435c:	add	r5, r3, #4
   34360:	ldr	r3, [sp, #196]	; 0xc4
   34364:	add	r4, r3, #4
   34368:	str	lr, [sp, #12]
   3436c:	mov	r6, #2
   34370:	mov	fp, #0
   34374:	b	41374 <GetDataSlab+0x20368>
   34378:	mov	fp, #0
   3437c:	b	41400 <GetDataSlab+0x203f4>
   34380:	ldr	r3, [sp, #20]
   34384:	cmp	r3, #0
   34388:	ble	3d550 <GetDataSlab+0x1c544>
   3438c:	mov	r3, #0
   34390:	str	r3, [sp, #16]
   34394:	b	34468 <GetDataSlab+0x1345c>
   34398:	ldr	r2, [r8]
   3439c:	cmp	r2, #0
   343a0:	beq	343b8 <GetDataSlab+0x133ac>
   343a4:	ldr	r3, [sp, #12]
   343a8:	ldr	r3, [r3, #-4]
   343ac:	mul	r3, r3, r2
   343b0:	add	r5, r5, r3, lsl #2
   343b4:	add	fp, fp, r3
   343b8:	add	r9, r9, #1
   343bc:	ldr	r3, [sp, #208]	; 0xd0
   343c0:	cmp	r3, r9
   343c4:	beq	34450 <GetDataSlab+0x13444>
   343c8:	ldr	r3, [r6]
   343cc:	add	r3, r3, #1
   343d0:	str	r3, [r6]
   343d4:	add	r8, r8, #4
   343d8:	ldr	r2, [sp, #8]
   343dc:	ldr	r1, [r2, #4]!
   343e0:	str	r2, [sp, #8]
   343e4:	mov	r0, r3
   343e8:	bl	517e8 <__aeabi_idivmod>
   343ec:	cmp	r1, #0
   343f0:	bne	3443c <GetDataSlab+0x13430>
   343f4:	mov	r3, #0
   343f8:	str	r3, [r6], #4
   343fc:	add	r7, r7, #4
   34400:	str	r7, [sp, #12]
   34404:	ldr	r4, [r7]
   34408:	mov	r1, r4
   3440c:	mov	r0, fp
   34410:	bl	517e8 <__aeabi_idivmod>
   34414:	subs	r3, r1, #0
   34418:	beq	34398 <GetDataSlab+0x1338c>
   3441c:	ldr	r2, [r7, #-4]
   34420:	ldr	r1, [r8]
   34424:	sub	r3, r4, r3
   34428:	mla	r3, r1, r2, r3
   3442c:	add	r5, r5, r3, lsl #2
   34430:	add	fp, fp, r3
   34434:	b	343b8 <GetDataSlab+0x133ac>
   34438:	ldr	r9, [sp, #28]
   3443c:	add	r3, sp, #152	; 0x98
   34440:	add	r3, r3, r9, lsl #2
   34444:	ldr	r3, [r3, #-120]	; 0xffffff88
   34448:	add	fp, fp, r3
   3444c:	add	r5, r5, r3, lsl #2
   34450:	ldr	r3, [sp, #16]
   34454:	add	r3, r3, sl
   34458:	str	r3, [sp, #16]
   3445c:	ldr	r2, [sp, #20]
   34460:	cmp	r3, r2
   34464:	bge	3452c <GetDataSlab+0x13520>
   34468:	ldr	r3, [sp, #196]	; 0xc4
   3446c:	ldr	r3, [r3]
   34470:	cmp	r3, #0
   34474:	addne	r5, r5, r3, lsl #2
   34478:	addne	fp, fp, r3
   3447c:	ldr	r3, [sp, #204]	; 0xcc
   34480:	ldr	sl, [r3]
   34484:	cmp	sl, #0
   34488:	ble	344bc <GetDataSlab+0x134b0>
   3448c:	sub	r0, r5, #4
   34490:	ldr	r3, [sp, #4]
   34494:	ldr	r2, [sp, #16]
   34498:	add	r1, r3, r2, lsl #1
   3449c:	mov	r2, #0
   344a0:	ldr	r3, [r0, #4]!
   344a4:	strh	r3, [r1], #2
   344a8:	add	r2, r2, #1
   344ac:	ldr	r3, [sp, #204]	; 0xcc
   344b0:	ldr	sl, [r3]
   344b4:	cmp	sl, r2
   344b8:	bgt	344a0 <GetDataSlab+0x13494>
   344bc:	ldr	r3, [sp, #192]	; 0xc0
   344c0:	ldr	r2, [r3]
   344c4:	ldr	r3, [sp, #196]	; 0xc4
   344c8:	ldr	r3, [r3]
   344cc:	sub	r3, r2, r3
   344d0:	add	fp, fp, r3
   344d4:	add	r5, r5, r3, lsl #2
   344d8:	ldr	r3, [sp, #208]	; 0xd0
   344dc:	cmp	r3, #1
   344e0:	ble	34450 <GetDataSlab+0x13444>
   344e4:	ldr	r3, [sp, #76]	; 0x4c
   344e8:	add	r3, r3, #1
   344ec:	str	r3, [sp, #76]	; 0x4c
   344f0:	ldr	r2, [sp, #204]	; 0xcc
   344f4:	ldr	r1, [r2, #4]
   344f8:	mov	r0, r3
   344fc:	bl	517e8 <__aeabi_idivmod>
   34500:	cmp	r1, #0
   34504:	bne	34438 <GetDataSlab+0x1342c>
   34508:	add	r6, sp, #76	; 0x4c
   3450c:	ldr	r3, [sp, #204]	; 0xcc
   34510:	add	r3, r3, #4
   34514:	str	r3, [sp, #8]
   34518:	ldr	r3, [sp, #196]	; 0xc4
   3451c:	add	r8, r3, #4
   34520:	add	r7, sp, #112	; 0x70
   34524:	ldr	r9, [sp, #28]
   34528:	b	343f4 <GetDataSlab+0x133e8>
   3452c:	mov	r3, #0
   34530:	b	24fa8 <GetDataSlab+0x3f9c>
   34534:	ldr	r2, [r9]
   34538:	cmp	r2, #0
   3453c:	beq	34554 <GetDataSlab+0x13548>
   34540:	ldr	r3, [sp, #16]
   34544:	ldr	r3, [r3, #-4]
   34548:	mul	r3, r3, r2
   3454c:	add	r5, r5, r3, lsl #2
   34550:	add	fp, fp, r3
   34554:	add	sl, sl, #1
   34558:	ldr	r3, [sp, #208]	; 0xd0
   3455c:	cmp	r3, sl
   34560:	beq	345ec <GetDataSlab+0x135e0>
   34564:	ldr	r3, [r6]
   34568:	add	r3, r3, #1
   3456c:	str	r3, [r6]
   34570:	add	r9, r9, #4
   34574:	ldr	r2, [sp, #12]
   34578:	ldr	r1, [r2, #4]!
   3457c:	str	r2, [sp, #12]
   34580:	mov	r0, r3
   34584:	bl	517e8 <__aeabi_idivmod>
   34588:	cmp	r1, #0
   3458c:	bne	345d8 <GetDataSlab+0x135cc>
   34590:	mov	r3, #0
   34594:	str	r3, [r6], #4
   34598:	add	r7, r7, #4
   3459c:	str	r7, [sp, #16]
   345a0:	ldr	r4, [r7]
   345a4:	mov	r1, r4
   345a8:	mov	r0, fp
   345ac:	bl	517e8 <__aeabi_idivmod>
   345b0:	subs	r3, r1, #0
   345b4:	beq	34534 <GetDataSlab+0x13528>
   345b8:	ldr	r2, [r7, #-4]
   345bc:	ldr	r1, [r9]
   345c0:	sub	r3, r4, r3
   345c4:	mla	r3, r1, r2, r3
   345c8:	add	r5, r5, r3, lsl #2
   345cc:	add	fp, fp, r3
   345d0:	b	34554 <GetDataSlab+0x13548>
   345d4:	mov	sl, #1
   345d8:	add	r3, sp, #152	; 0x98
   345dc:	add	r3, r3, sl, lsl #2
   345e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   345e4:	add	fp, fp, r3
   345e8:	add	r5, r5, r3, lsl #2
   345ec:	ldr	r3, [sp, #24]
   345f0:	ldr	r2, [sp, #8]
   345f4:	add	r3, r3, r2
   345f8:	str	r3, [sp, #24]
   345fc:	ldr	r2, [sp, #20]
   34600:	cmp	r3, r2
   34604:	bge	346ec <GetDataSlab+0x136e0>
   34608:	ldr	r3, [sp, #196]	; 0xc4
   3460c:	ldr	r3, [r3]
   34610:	cmp	r3, #0
   34614:	addne	r5, r5, r3, lsl #2
   34618:	addne	fp, fp, r3
   3461c:	ldr	r3, [sp, #204]	; 0xcc
   34620:	ldr	r3, [r3]
   34624:	str	r3, [sp, #8]
   34628:	cmp	r3, #0
   3462c:	ble	3466c <GetDataSlab+0x13660>
   34630:	ldr	r3, [sp, #4]
   34634:	ldr	r2, [sp, #24]
   34638:	add	r2, r3, r2, lsl #1
   3463c:	mov	r3, #0
   34640:	ldr	r1, [r5]
   34644:	strh	r1, [r2], #2
   34648:	ldr	r1, [r8]
   3464c:	add	r5, r5, r1, lsl #2
   34650:	add	fp, fp, r1
   34654:	add	r3, r3, #1
   34658:	ldr	r1, [sp, #204]	; 0xcc
   3465c:	ldr	r1, [r1]
   34660:	str	r1, [sp, #8]
   34664:	cmp	r1, r3
   34668:	bgt	34640 <GetDataSlab+0x13634>
   3466c:	ldr	r3, [r8]
   34670:	ldr	r2, [sp, #8]
   34674:	mul	r3, r3, r2
   34678:	ldr	r2, [sp, #192]	; 0xc0
   3467c:	ldr	r2, [r2]
   34680:	sub	r3, r2, r3
   34684:	ldr	r2, [sp, #196]	; 0xc4
   34688:	ldr	r2, [r2]
   3468c:	sub	r3, r3, r2
   34690:	add	fp, fp, r3
   34694:	add	r5, r5, r3, lsl #2
   34698:	ldr	r3, [sp, #208]	; 0xd0
   3469c:	cmp	r3, #1
   346a0:	ble	345ec <GetDataSlab+0x135e0>
   346a4:	ldr	r3, [sp, #76]	; 0x4c
   346a8:	add	r3, r3, #1
   346ac:	str	r3, [sp, #76]	; 0x4c
   346b0:	ldr	r2, [sp, #204]	; 0xcc
   346b4:	ldr	r1, [r2, #4]
   346b8:	mov	r0, r3
   346bc:	bl	517e8 <__aeabi_idivmod>
   346c0:	cmp	r1, #0
   346c4:	bne	345d4 <GetDataSlab+0x135c8>
   346c8:	add	r6, sp, #76	; 0x4c
   346cc:	ldr	r3, [sp, #204]	; 0xcc
   346d0:	add	r3, r3, #4
   346d4:	str	r3, [sp, #12]
   346d8:	ldr	r3, [sp, #196]	; 0xc4
   346dc:	add	r9, r3, #4
   346e0:	add	r7, sp, #112	; 0x70
   346e4:	mov	sl, #1
   346e8:	b	34590 <GetDataSlab+0x13584>
   346ec:	mov	r3, #0
   346f0:	b	24fa8 <GetDataSlab+0x3f9c>
   346f4:	ldr	r3, [r8]
   346f8:	str	r3, [sp, #28]
   346fc:	sub	r3, r3, #1
   34700:	str	r3, [sp, #32]
   34704:	ldr	r3, [sp, #192]	; 0xc0
   34708:	ldr	r3, [r3]
   3470c:	str	r3, [sp, #112]	; 0x70
   34710:	ldr	r3, [sp, #204]	; 0xcc
   34714:	ldr	r3, [r3]
   34718:	str	r3, [sp, #20]
   3471c:	ldr	r3, [sp, #208]	; 0xd0
   34720:	cmp	r3, #1
   34724:	ble	34758 <GetDataSlab+0x1374c>
   34728:	str	r8, [sp, #16]
   3472c:	add	sl, sp, #36	; 0x24
   34730:	ldr	lr, [sp, #192]	; 0xc0
   34734:	add	r9, sp, #112	; 0x70
   34738:	ldr	r3, [sp, #204]	; 0xcc
   3473c:	add	r5, r3, #4
   34740:	ldr	r3, [sp, #196]	; 0xc4
   34744:	add	r4, r3, #4
   34748:	str	lr, [sp, #12]
   3474c:	mov	r6, #2
   34750:	mov	fp, #0
   34754:	b	41460 <GetDataSlab+0x20454>
   34758:	mov	fp, #0
   3475c:	b	414ec <GetDataSlab+0x204e0>
   34760:	ldr	r3, [sp, #20]
   34764:	cmp	r3, #0
   34768:	ble	3d558 <GetDataSlab+0x1c54c>
   3476c:	mov	r3, #0
   34770:	str	r3, [sp, #16]
   34774:	b	34848 <GetDataSlab+0x1383c>
   34778:	ldr	r2, [r8]
   3477c:	cmp	r2, #0
   34780:	beq	34798 <GetDataSlab+0x1378c>
   34784:	ldr	r3, [sp, #12]
   34788:	ldr	r3, [r3, #-4]
   3478c:	mul	r3, r3, r2
   34790:	add	r6, r6, r3, lsl #1
   34794:	add	fp, fp, r3
   34798:	add	r9, r9, #1
   3479c:	ldr	r3, [sp, #208]	; 0xd0
   347a0:	cmp	r3, r9
   347a4:	beq	34830 <GetDataSlab+0x13824>
   347a8:	ldr	r3, [r5]
   347ac:	add	r3, r3, #1
   347b0:	str	r3, [r5]
   347b4:	add	r8, r8, #4
   347b8:	ldr	r2, [sp, #8]
   347bc:	ldr	r1, [r2, #4]!
   347c0:	str	r2, [sp, #8]
   347c4:	mov	r0, r3
   347c8:	bl	517e8 <__aeabi_idivmod>
   347cc:	cmp	r1, #0
   347d0:	bne	3481c <GetDataSlab+0x13810>
   347d4:	mov	r3, #0
   347d8:	str	r3, [r5], #4
   347dc:	add	r7, r7, #4
   347e0:	str	r7, [sp, #12]
   347e4:	ldr	r4, [r7]
   347e8:	mov	r1, r4
   347ec:	mov	r0, fp
   347f0:	bl	517e8 <__aeabi_idivmod>
   347f4:	subs	r3, r1, #0
   347f8:	beq	34778 <GetDataSlab+0x1376c>
   347fc:	ldr	r2, [r7, #-4]
   34800:	ldr	r1, [r8]
   34804:	sub	r3, r4, r3
   34808:	mla	r3, r1, r2, r3
   3480c:	add	r6, r6, r3, lsl #1
   34810:	add	fp, fp, r3
   34814:	b	34798 <GetDataSlab+0x1378c>
   34818:	ldr	r9, [sp, #28]
   3481c:	add	r3, sp, #152	; 0x98
   34820:	add	r3, r3, r9, lsl #2
   34824:	ldr	r3, [r3, #-120]	; 0xffffff88
   34828:	add	fp, fp, r3
   3482c:	add	r6, r6, r3, lsl #1
   34830:	ldr	r3, [sp, #16]
   34834:	add	r3, r3, sl
   34838:	str	r3, [sp, #16]
   3483c:	ldr	r2, [sp, #20]
   34840:	cmp	r3, r2
   34844:	bge	3490c <GetDataSlab+0x13900>
   34848:	ldr	r3, [sp, #196]	; 0xc4
   3484c:	ldr	r3, [r3]
   34850:	cmp	r3, #0
   34854:	addne	r6, r6, r3, lsl #1
   34858:	addne	fp, fp, r3
   3485c:	ldr	r3, [sp, #204]	; 0xcc
   34860:	ldr	sl, [r3]
   34864:	cmp	sl, #0
   34868:	ble	3489c <GetDataSlab+0x13890>
   3486c:	sub	r0, r6, #2
   34870:	ldr	r3, [sp, #4]
   34874:	ldr	r2, [sp, #16]
   34878:	add	r1, r3, r2, lsl #1
   3487c:	mov	r2, #0
   34880:	ldrsh	r3, [r0, #2]!
   34884:	strh	r3, [r1], #2
   34888:	add	r2, r2, #1
   3488c:	ldr	r3, [sp, #204]	; 0xcc
   34890:	ldr	sl, [r3]
   34894:	cmp	sl, r2
   34898:	bgt	34880 <GetDataSlab+0x13874>
   3489c:	ldr	r3, [sp, #192]	; 0xc0
   348a0:	ldr	r2, [r3]
   348a4:	ldr	r3, [sp, #196]	; 0xc4
   348a8:	ldr	r3, [r3]
   348ac:	sub	r3, r2, r3
   348b0:	add	fp, fp, r3
   348b4:	add	r6, r6, r3, lsl #1
   348b8:	ldr	r3, [sp, #208]	; 0xd0
   348bc:	cmp	r3, #1
   348c0:	ble	34830 <GetDataSlab+0x13824>
   348c4:	ldr	r3, [sp, #76]	; 0x4c
   348c8:	add	r3, r3, #1
   348cc:	str	r3, [sp, #76]	; 0x4c
   348d0:	ldr	r2, [sp, #204]	; 0xcc
   348d4:	ldr	r1, [r2, #4]
   348d8:	mov	r0, r3
   348dc:	bl	517e8 <__aeabi_idivmod>
   348e0:	cmp	r1, #0
   348e4:	bne	34818 <GetDataSlab+0x1380c>
   348e8:	add	r5, sp, #76	; 0x4c
   348ec:	ldr	r3, [sp, #204]	; 0xcc
   348f0:	add	r3, r3, #4
   348f4:	str	r3, [sp, #8]
   348f8:	ldr	r3, [sp, #196]	; 0xc4
   348fc:	add	r8, r3, #4
   34900:	add	r7, sp, #112	; 0x70
   34904:	ldr	r9, [sp, #28]
   34908:	b	347d4 <GetDataSlab+0x137c8>
   3490c:	mov	r3, #0
   34910:	b	24fa8 <GetDataSlab+0x3f9c>
   34914:	ldr	r2, [r9]
   34918:	cmp	r2, #0
   3491c:	beq	34934 <GetDataSlab+0x13928>
   34920:	ldr	r3, [sp, #16]
   34924:	ldr	r3, [r3, #-4]
   34928:	mul	r3, r3, r2
   3492c:	add	r6, r6, r3, lsl #1
   34930:	add	fp, fp, r3
   34934:	add	sl, sl, #1
   34938:	ldr	r3, [sp, #208]	; 0xd0
   3493c:	cmp	r3, sl
   34940:	beq	349cc <GetDataSlab+0x139c0>
   34944:	ldr	r3, [r5]
   34948:	add	r3, r3, #1
   3494c:	str	r3, [r5]
   34950:	add	r9, r9, #4
   34954:	ldr	r2, [sp, #12]
   34958:	ldr	r1, [r2, #4]!
   3495c:	str	r2, [sp, #12]
   34960:	mov	r0, r3
   34964:	bl	517e8 <__aeabi_idivmod>
   34968:	cmp	r1, #0
   3496c:	bne	349b8 <GetDataSlab+0x139ac>
   34970:	mov	r3, #0
   34974:	str	r3, [r5], #4
   34978:	add	r7, r7, #4
   3497c:	str	r7, [sp, #16]
   34980:	ldr	r4, [r7]
   34984:	mov	r1, r4
   34988:	mov	r0, fp
   3498c:	bl	517e8 <__aeabi_idivmod>
   34990:	subs	r3, r1, #0
   34994:	beq	34914 <GetDataSlab+0x13908>
   34998:	ldr	r2, [r7, #-4]
   3499c:	ldr	r1, [r9]
   349a0:	sub	r3, r4, r3
   349a4:	mla	r3, r1, r2, r3
   349a8:	add	r6, r6, r3, lsl #1
   349ac:	add	fp, fp, r3
   349b0:	b	34934 <GetDataSlab+0x13928>
   349b4:	mov	sl, #1
   349b8:	add	r3, sp, #152	; 0x98
   349bc:	add	r3, r3, sl, lsl #2
   349c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   349c4:	add	fp, fp, r3
   349c8:	add	r6, r6, r3, lsl #1
   349cc:	ldr	r3, [sp, #24]
   349d0:	ldr	r2, [sp, #8]
   349d4:	add	r3, r3, r2
   349d8:	str	r3, [sp, #24]
   349dc:	ldr	r2, [sp, #20]
   349e0:	cmp	r3, r2
   349e4:	bge	34acc <GetDataSlab+0x13ac0>
   349e8:	ldr	r3, [sp, #196]	; 0xc4
   349ec:	ldr	r3, [r3]
   349f0:	cmp	r3, #0
   349f4:	addne	r6, r6, r3, lsl #1
   349f8:	addne	fp, fp, r3
   349fc:	ldr	r3, [sp, #204]	; 0xcc
   34a00:	ldr	r3, [r3]
   34a04:	str	r3, [sp, #8]
   34a08:	cmp	r3, #0
   34a0c:	ble	34a4c <GetDataSlab+0x13a40>
   34a10:	ldr	r3, [sp, #4]
   34a14:	ldr	r2, [sp, #24]
   34a18:	add	r2, r3, r2, lsl #1
   34a1c:	mov	r3, #0
   34a20:	ldrsh	r1, [r6]
   34a24:	strh	r1, [r2], #2
   34a28:	ldr	r1, [r8]
   34a2c:	add	r6, r6, r1, lsl #1
   34a30:	add	fp, fp, r1
   34a34:	add	r3, r3, #1
   34a38:	ldr	r1, [sp, #204]	; 0xcc
   34a3c:	ldr	r1, [r1]
   34a40:	str	r1, [sp, #8]
   34a44:	cmp	r1, r3
   34a48:	bgt	34a20 <GetDataSlab+0x13a14>
   34a4c:	ldr	r3, [r8]
   34a50:	ldr	r2, [sp, #8]
   34a54:	mul	r3, r3, r2
   34a58:	ldr	r2, [sp, #192]	; 0xc0
   34a5c:	ldr	r2, [r2]
   34a60:	sub	r3, r2, r3
   34a64:	ldr	r2, [sp, #196]	; 0xc4
   34a68:	ldr	r2, [r2]
   34a6c:	sub	r3, r3, r2
   34a70:	add	fp, fp, r3
   34a74:	add	r6, r6, r3, lsl #1
   34a78:	ldr	r3, [sp, #208]	; 0xd0
   34a7c:	cmp	r3, #1
   34a80:	ble	349cc <GetDataSlab+0x139c0>
   34a84:	ldr	r3, [sp, #76]	; 0x4c
   34a88:	add	r3, r3, #1
   34a8c:	str	r3, [sp, #76]	; 0x4c
   34a90:	ldr	r2, [sp, #204]	; 0xcc
   34a94:	ldr	r1, [r2, #4]
   34a98:	mov	r0, r3
   34a9c:	bl	517e8 <__aeabi_idivmod>
   34aa0:	cmp	r1, #0
   34aa4:	bne	349b4 <GetDataSlab+0x139a8>
   34aa8:	add	r5, sp, #76	; 0x4c
   34aac:	ldr	r3, [sp, #204]	; 0xcc
   34ab0:	add	r3, r3, #4
   34ab4:	str	r3, [sp, #12]
   34ab8:	ldr	r3, [sp, #196]	; 0xc4
   34abc:	add	r9, r3, #4
   34ac0:	add	r7, sp, #112	; 0x70
   34ac4:	mov	sl, #1
   34ac8:	b	34970 <GetDataSlab+0x13964>
   34acc:	mov	r3, #0
   34ad0:	b	24fa8 <GetDataSlab+0x3f9c>
   34ad4:	ldr	r3, [r8]
   34ad8:	str	r3, [sp, #28]
   34adc:	sub	r3, r3, #1
   34ae0:	str	r3, [sp, #32]
   34ae4:	ldr	r3, [sp, #192]	; 0xc0
   34ae8:	ldr	r3, [r3]
   34aec:	str	r3, [sp, #112]	; 0x70
   34af0:	ldr	r3, [sp, #204]	; 0xcc
   34af4:	ldr	r3, [r3]
   34af8:	str	r3, [sp, #20]
   34afc:	ldr	r3, [sp, #208]	; 0xd0
   34b00:	cmp	r3, #1
   34b04:	ble	34b38 <GetDataSlab+0x13b2c>
   34b08:	str	r8, [sp, #16]
   34b0c:	add	sl, sp, #36	; 0x24
   34b10:	ldr	lr, [sp, #192]	; 0xc0
   34b14:	add	r9, sp, #112	; 0x70
   34b18:	ldr	r3, [sp, #204]	; 0xcc
   34b1c:	add	r5, r3, #4
   34b20:	ldr	r3, [sp, #196]	; 0xc4
   34b24:	add	r4, r3, #4
   34b28:	str	lr, [sp, #12]
   34b2c:	mov	r6, #2
   34b30:	mov	fp, #0
   34b34:	b	4154c <GetDataSlab+0x20540>
   34b38:	mov	fp, #0
   34b3c:	b	415d8 <GetDataSlab+0x205cc>
   34b40:	ldr	r3, [sp, #20]
   34b44:	cmp	r3, #0
   34b48:	ble	3d560 <GetDataSlab+0x1c554>
   34b4c:	mov	r3, #0
   34b50:	str	r3, [sp, #16]
   34b54:	b	34c28 <GetDataSlab+0x13c1c>
   34b58:	ldr	r2, [r8]
   34b5c:	cmp	r2, #0
   34b60:	beq	34b78 <GetDataSlab+0x13b6c>
   34b64:	ldr	r3, [sp, #12]
   34b68:	ldr	r3, [r3, #-4]
   34b6c:	mul	r3, r3, r2
   34b70:	add	r6, r6, r3, lsl #1
   34b74:	add	fp, fp, r3
   34b78:	add	r9, r9, #1
   34b7c:	ldr	r3, [sp, #208]	; 0xd0
   34b80:	cmp	r3, r9
   34b84:	beq	34c10 <GetDataSlab+0x13c04>
   34b88:	ldr	r3, [r5]
   34b8c:	add	r3, r3, #1
   34b90:	str	r3, [r5]
   34b94:	add	r8, r8, #4
   34b98:	ldr	r2, [sp, #8]
   34b9c:	ldr	r1, [r2, #4]!
   34ba0:	str	r2, [sp, #8]
   34ba4:	mov	r0, r3
   34ba8:	bl	517e8 <__aeabi_idivmod>
   34bac:	cmp	r1, #0
   34bb0:	bne	34bfc <GetDataSlab+0x13bf0>
   34bb4:	mov	r3, #0
   34bb8:	str	r3, [r5], #4
   34bbc:	add	r7, r7, #4
   34bc0:	str	r7, [sp, #12]
   34bc4:	ldr	r4, [r7]
   34bc8:	mov	r1, r4
   34bcc:	mov	r0, fp
   34bd0:	bl	517e8 <__aeabi_idivmod>
   34bd4:	subs	r3, r1, #0
   34bd8:	beq	34b58 <GetDataSlab+0x13b4c>
   34bdc:	ldr	r2, [r7, #-4]
   34be0:	ldr	r1, [r8]
   34be4:	sub	r3, r4, r3
   34be8:	mla	r3, r1, r2, r3
   34bec:	add	r6, r6, r3, lsl #1
   34bf0:	add	fp, fp, r3
   34bf4:	b	34b78 <GetDataSlab+0x13b6c>
   34bf8:	ldr	r9, [sp, #28]
   34bfc:	add	r3, sp, #152	; 0x98
   34c00:	add	r3, r3, r9, lsl #2
   34c04:	ldr	r3, [r3, #-120]	; 0xffffff88
   34c08:	add	fp, fp, r3
   34c0c:	add	r6, r6, r3, lsl #1
   34c10:	ldr	r3, [sp, #16]
   34c14:	add	r3, r3, sl
   34c18:	str	r3, [sp, #16]
   34c1c:	ldr	r2, [sp, #20]
   34c20:	cmp	r3, r2
   34c24:	bge	34cec <GetDataSlab+0x13ce0>
   34c28:	ldr	r3, [sp, #196]	; 0xc4
   34c2c:	ldr	r3, [r3]
   34c30:	cmp	r3, #0
   34c34:	addne	r6, r6, r3, lsl #1
   34c38:	addne	fp, fp, r3
   34c3c:	ldr	r3, [sp, #204]	; 0xcc
   34c40:	ldr	sl, [r3]
   34c44:	cmp	sl, #0
   34c48:	ble	34c7c <GetDataSlab+0x13c70>
   34c4c:	sub	r0, r6, #2
   34c50:	ldr	r3, [sp, #4]
   34c54:	ldr	r2, [sp, #16]
   34c58:	add	r1, r3, r2, lsl #1
   34c5c:	mov	r2, #0
   34c60:	ldrh	r3, [r0, #2]!
   34c64:	strh	r3, [r1], #2
   34c68:	add	r2, r2, #1
   34c6c:	ldr	r3, [sp, #204]	; 0xcc
   34c70:	ldr	sl, [r3]
   34c74:	cmp	sl, r2
   34c78:	bgt	34c60 <GetDataSlab+0x13c54>
   34c7c:	ldr	r3, [sp, #192]	; 0xc0
   34c80:	ldr	r2, [r3]
   34c84:	ldr	r3, [sp, #196]	; 0xc4
   34c88:	ldr	r3, [r3]
   34c8c:	sub	r3, r2, r3
   34c90:	add	fp, fp, r3
   34c94:	add	r6, r6, r3, lsl #1
   34c98:	ldr	r3, [sp, #208]	; 0xd0
   34c9c:	cmp	r3, #1
   34ca0:	ble	34c10 <GetDataSlab+0x13c04>
   34ca4:	ldr	r3, [sp, #76]	; 0x4c
   34ca8:	add	r3, r3, #1
   34cac:	str	r3, [sp, #76]	; 0x4c
   34cb0:	ldr	r2, [sp, #204]	; 0xcc
   34cb4:	ldr	r1, [r2, #4]
   34cb8:	mov	r0, r3
   34cbc:	bl	517e8 <__aeabi_idivmod>
   34cc0:	cmp	r1, #0
   34cc4:	bne	34bf8 <GetDataSlab+0x13bec>
   34cc8:	add	r5, sp, #76	; 0x4c
   34ccc:	ldr	r3, [sp, #204]	; 0xcc
   34cd0:	add	r3, r3, #4
   34cd4:	str	r3, [sp, #8]
   34cd8:	ldr	r3, [sp, #196]	; 0xc4
   34cdc:	add	r8, r3, #4
   34ce0:	add	r7, sp, #112	; 0x70
   34ce4:	ldr	r9, [sp, #28]
   34ce8:	b	34bb4 <GetDataSlab+0x13ba8>
   34cec:	mov	r3, #0
   34cf0:	b	24fa8 <GetDataSlab+0x3f9c>
   34cf4:	ldr	r2, [r9]
   34cf8:	cmp	r2, #0
   34cfc:	beq	34d14 <GetDataSlab+0x13d08>
   34d00:	ldr	r3, [sp, #16]
   34d04:	ldr	r3, [r3, #-4]
   34d08:	mul	r3, r3, r2
   34d0c:	add	r6, r6, r3, lsl #1
   34d10:	add	fp, fp, r3
   34d14:	add	sl, sl, #1
   34d18:	ldr	r3, [sp, #208]	; 0xd0
   34d1c:	cmp	r3, sl
   34d20:	beq	34dac <GetDataSlab+0x13da0>
   34d24:	ldr	r3, [r5]
   34d28:	add	r3, r3, #1
   34d2c:	str	r3, [r5]
   34d30:	add	r9, r9, #4
   34d34:	ldr	r2, [sp, #12]
   34d38:	ldr	r1, [r2, #4]!
   34d3c:	str	r2, [sp, #12]
   34d40:	mov	r0, r3
   34d44:	bl	517e8 <__aeabi_idivmod>
   34d48:	cmp	r1, #0
   34d4c:	bne	34d98 <GetDataSlab+0x13d8c>
   34d50:	mov	r3, #0
   34d54:	str	r3, [r5], #4
   34d58:	add	r7, r7, #4
   34d5c:	str	r7, [sp, #16]
   34d60:	ldr	r4, [r7]
   34d64:	mov	r1, r4
   34d68:	mov	r0, fp
   34d6c:	bl	517e8 <__aeabi_idivmod>
   34d70:	subs	r3, r1, #0
   34d74:	beq	34cf4 <GetDataSlab+0x13ce8>
   34d78:	ldr	r2, [r7, #-4]
   34d7c:	ldr	r1, [r9]
   34d80:	sub	r3, r4, r3
   34d84:	mla	r3, r1, r2, r3
   34d88:	add	r6, r6, r3, lsl #1
   34d8c:	add	fp, fp, r3
   34d90:	b	34d14 <GetDataSlab+0x13d08>
   34d94:	mov	sl, #1
   34d98:	add	r3, sp, #152	; 0x98
   34d9c:	add	r3, r3, sl, lsl #2
   34da0:	ldr	r3, [r3, #-120]	; 0xffffff88
   34da4:	add	fp, fp, r3
   34da8:	add	r6, r6, r3, lsl #1
   34dac:	ldr	r3, [sp, #24]
   34db0:	ldr	r2, [sp, #8]
   34db4:	add	r3, r3, r2
   34db8:	str	r3, [sp, #24]
   34dbc:	ldr	r2, [sp, #20]
   34dc0:	cmp	r3, r2
   34dc4:	bge	34eac <GetDataSlab+0x13ea0>
   34dc8:	ldr	r3, [sp, #196]	; 0xc4
   34dcc:	ldr	r3, [r3]
   34dd0:	cmp	r3, #0
   34dd4:	addne	r6, r6, r3, lsl #1
   34dd8:	addne	fp, fp, r3
   34ddc:	ldr	r3, [sp, #204]	; 0xcc
   34de0:	ldr	r3, [r3]
   34de4:	str	r3, [sp, #8]
   34de8:	cmp	r3, #0
   34dec:	ble	34e2c <GetDataSlab+0x13e20>
   34df0:	ldr	r3, [sp, #4]
   34df4:	ldr	r2, [sp, #24]
   34df8:	add	r2, r3, r2, lsl #1
   34dfc:	mov	r3, #0
   34e00:	ldrh	r1, [r6]
   34e04:	strh	r1, [r2], #2
   34e08:	ldr	r1, [r8]
   34e0c:	add	r6, r6, r1, lsl #1
   34e10:	add	fp, fp, r1
   34e14:	add	r3, r3, #1
   34e18:	ldr	r1, [sp, #204]	; 0xcc
   34e1c:	ldr	r1, [r1]
   34e20:	str	r1, [sp, #8]
   34e24:	cmp	r1, r3
   34e28:	bgt	34e00 <GetDataSlab+0x13df4>
   34e2c:	ldr	r3, [r8]
   34e30:	ldr	r2, [sp, #8]
   34e34:	mul	r3, r3, r2
   34e38:	ldr	r2, [sp, #192]	; 0xc0
   34e3c:	ldr	r2, [r2]
   34e40:	sub	r3, r2, r3
   34e44:	ldr	r2, [sp, #196]	; 0xc4
   34e48:	ldr	r2, [r2]
   34e4c:	sub	r3, r3, r2
   34e50:	add	fp, fp, r3
   34e54:	add	r6, r6, r3, lsl #1
   34e58:	ldr	r3, [sp, #208]	; 0xd0
   34e5c:	cmp	r3, #1
   34e60:	ble	34dac <GetDataSlab+0x13da0>
   34e64:	ldr	r3, [sp, #76]	; 0x4c
   34e68:	add	r3, r3, #1
   34e6c:	str	r3, [sp, #76]	; 0x4c
   34e70:	ldr	r2, [sp, #204]	; 0xcc
   34e74:	ldr	r1, [r2, #4]
   34e78:	mov	r0, r3
   34e7c:	bl	517e8 <__aeabi_idivmod>
   34e80:	cmp	r1, #0
   34e84:	bne	34d94 <GetDataSlab+0x13d88>
   34e88:	add	r5, sp, #76	; 0x4c
   34e8c:	ldr	r3, [sp, #204]	; 0xcc
   34e90:	add	r3, r3, #4
   34e94:	str	r3, [sp, #12]
   34e98:	ldr	r3, [sp, #196]	; 0xc4
   34e9c:	add	r9, r3, #4
   34ea0:	add	r7, sp, #112	; 0x70
   34ea4:	mov	sl, #1
   34ea8:	b	34d50 <GetDataSlab+0x13d44>
   34eac:	mov	r3, #0
   34eb0:	b	24fa8 <GetDataSlab+0x3f9c>
   34eb4:	ldr	r3, [r8]
   34eb8:	str	r3, [sp, #28]
   34ebc:	sub	r3, r3, #1
   34ec0:	str	r3, [sp, #32]
   34ec4:	ldr	r3, [sp, #192]	; 0xc0
   34ec8:	ldr	r3, [r3]
   34ecc:	str	r3, [sp, #112]	; 0x70
   34ed0:	ldr	r3, [sp, #204]	; 0xcc
   34ed4:	ldr	r3, [r3]
   34ed8:	str	r3, [sp, #20]
   34edc:	ldr	r3, [sp, #208]	; 0xd0
   34ee0:	cmp	r3, #1
   34ee4:	ble	34f18 <GetDataSlab+0x13f0c>
   34ee8:	str	r8, [sp, #16]
   34eec:	add	sl, sp, #36	; 0x24
   34ef0:	ldr	lr, [sp, #192]	; 0xc0
   34ef4:	add	r9, sp, #112	; 0x70
   34ef8:	ldr	r3, [sp, #204]	; 0xcc
   34efc:	add	r5, r3, #4
   34f00:	ldr	r3, [sp, #196]	; 0xc4
   34f04:	add	r4, r3, #4
   34f08:	str	lr, [sp, #12]
   34f0c:	mov	r6, #2
   34f10:	mov	fp, #0
   34f14:	b	41638 <GetDataSlab+0x2062c>
   34f18:	mov	fp, #0
   34f1c:	b	416c4 <GetDataSlab+0x206b8>
   34f20:	ldr	r3, [sp, #20]
   34f24:	cmp	r3, #0
   34f28:	ble	3d568 <GetDataSlab+0x1c55c>
   34f2c:	mov	r3, #0
   34f30:	str	r3, [sp, #16]
   34f34:	b	35008 <GetDataSlab+0x13ffc>
   34f38:	ldr	r2, [r8]
   34f3c:	cmp	r2, #0
   34f40:	beq	34f58 <GetDataSlab+0x13f4c>
   34f44:	ldr	r3, [sp, #12]
   34f48:	ldr	r3, [r3, #-4]
   34f4c:	mul	r3, r3, r2
   34f50:	add	r6, r6, r3
   34f54:	add	fp, fp, r3
   34f58:	add	r9, r9, #1
   34f5c:	ldr	r3, [sp, #208]	; 0xd0
   34f60:	cmp	r3, r9
   34f64:	beq	34ff0 <GetDataSlab+0x13fe4>
   34f68:	ldr	r3, [r5]
   34f6c:	add	r3, r3, #1
   34f70:	str	r3, [r5]
   34f74:	add	r8, r8, #4
   34f78:	ldr	r2, [sp, #8]
   34f7c:	ldr	r1, [r2, #4]!
   34f80:	str	r2, [sp, #8]
   34f84:	mov	r0, r3
   34f88:	bl	517e8 <__aeabi_idivmod>
   34f8c:	cmp	r1, #0
   34f90:	bne	34fdc <GetDataSlab+0x13fd0>
   34f94:	mov	r3, #0
   34f98:	str	r3, [r5], #4
   34f9c:	add	r7, r7, #4
   34fa0:	str	r7, [sp, #12]
   34fa4:	ldr	r4, [r7]
   34fa8:	mov	r1, r4
   34fac:	mov	r0, fp
   34fb0:	bl	517e8 <__aeabi_idivmod>
   34fb4:	subs	r3, r1, #0
   34fb8:	beq	34f38 <GetDataSlab+0x13f2c>
   34fbc:	ldr	r2, [r7, #-4]
   34fc0:	ldr	r1, [r8]
   34fc4:	sub	r3, r4, r3
   34fc8:	mla	r3, r1, r2, r3
   34fcc:	add	r6, r6, r3
   34fd0:	add	fp, fp, r3
   34fd4:	b	34f58 <GetDataSlab+0x13f4c>
   34fd8:	ldr	r9, [sp, #28]
   34fdc:	add	r3, sp, #152	; 0x98
   34fe0:	add	r3, r3, r9, lsl #2
   34fe4:	ldr	r3, [r3, #-120]	; 0xffffff88
   34fe8:	add	fp, fp, r3
   34fec:	add	r6, r6, r3
   34ff0:	ldr	r3, [sp, #16]
   34ff4:	add	r3, r3, sl
   34ff8:	str	r3, [sp, #16]
   34ffc:	ldr	r2, [sp, #20]
   35000:	cmp	r3, r2
   35004:	bge	350cc <GetDataSlab+0x140c0>
   35008:	ldr	r3, [sp, #196]	; 0xc4
   3500c:	ldr	r3, [r3]
   35010:	cmp	r3, #0
   35014:	addne	r6, r6, r3
   35018:	addne	fp, fp, r3
   3501c:	ldr	r3, [sp, #204]	; 0xcc
   35020:	ldr	sl, [r3]
   35024:	cmp	sl, #0
   35028:	ble	3505c <GetDataSlab+0x14050>
   3502c:	sub	r0, r6, #1
   35030:	ldr	r3, [sp, #4]
   35034:	ldr	r2, [sp, #16]
   35038:	add	r1, r3, r2, lsl #1
   3503c:	mov	r2, #0
   35040:	ldrsb	r3, [r0, #1]!
   35044:	strh	r3, [r1], #2
   35048:	add	r2, r2, #1
   3504c:	ldr	r3, [sp, #204]	; 0xcc
   35050:	ldr	sl, [r3]
   35054:	cmp	sl, r2
   35058:	bgt	35040 <GetDataSlab+0x14034>
   3505c:	ldr	r3, [sp, #192]	; 0xc0
   35060:	ldr	r2, [r3]
   35064:	ldr	r3, [sp, #196]	; 0xc4
   35068:	ldr	r3, [r3]
   3506c:	sub	r3, r2, r3
   35070:	add	fp, fp, r3
   35074:	add	r6, r6, r3
   35078:	ldr	r3, [sp, #208]	; 0xd0
   3507c:	cmp	r3, #1
   35080:	ble	34ff0 <GetDataSlab+0x13fe4>
   35084:	ldr	r3, [sp, #76]	; 0x4c
   35088:	add	r3, r3, #1
   3508c:	str	r3, [sp, #76]	; 0x4c
   35090:	ldr	r2, [sp, #204]	; 0xcc
   35094:	ldr	r1, [r2, #4]
   35098:	mov	r0, r3
   3509c:	bl	517e8 <__aeabi_idivmod>
   350a0:	cmp	r1, #0
   350a4:	bne	34fd8 <GetDataSlab+0x13fcc>
   350a8:	add	r5, sp, #76	; 0x4c
   350ac:	ldr	r3, [sp, #204]	; 0xcc
   350b0:	add	r3, r3, #4
   350b4:	str	r3, [sp, #8]
   350b8:	ldr	r3, [sp, #196]	; 0xc4
   350bc:	add	r8, r3, #4
   350c0:	add	r7, sp, #112	; 0x70
   350c4:	ldr	r9, [sp, #28]
   350c8:	b	34f94 <GetDataSlab+0x13f88>
   350cc:	mov	r3, #0
   350d0:	b	24fa8 <GetDataSlab+0x3f9c>
   350d4:	ldr	r2, [r9]
   350d8:	cmp	r2, #0
   350dc:	beq	350f4 <GetDataSlab+0x140e8>
   350e0:	ldr	r3, [sp, #16]
   350e4:	ldr	r3, [r3, #-4]
   350e8:	mul	r3, r3, r2
   350ec:	add	r6, r6, r3
   350f0:	add	fp, fp, r3
   350f4:	add	sl, sl, #1
   350f8:	ldr	r3, [sp, #208]	; 0xd0
   350fc:	cmp	r3, sl
   35100:	beq	3518c <GetDataSlab+0x14180>
   35104:	ldr	r3, [r5]
   35108:	add	r3, r3, #1
   3510c:	str	r3, [r5]
   35110:	add	r9, r9, #4
   35114:	ldr	r2, [sp, #12]
   35118:	ldr	r1, [r2, #4]!
   3511c:	str	r2, [sp, #12]
   35120:	mov	r0, r3
   35124:	bl	517e8 <__aeabi_idivmod>
   35128:	cmp	r1, #0
   3512c:	bne	35178 <GetDataSlab+0x1416c>
   35130:	mov	r3, #0
   35134:	str	r3, [r5], #4
   35138:	add	r7, r7, #4
   3513c:	str	r7, [sp, #16]
   35140:	ldr	r4, [r7]
   35144:	mov	r1, r4
   35148:	mov	r0, fp
   3514c:	bl	517e8 <__aeabi_idivmod>
   35150:	subs	r3, r1, #0
   35154:	beq	350d4 <GetDataSlab+0x140c8>
   35158:	ldr	r2, [r7, #-4]
   3515c:	ldr	r1, [r9]
   35160:	sub	r3, r4, r3
   35164:	mla	r3, r1, r2, r3
   35168:	add	r6, r6, r3
   3516c:	add	fp, fp, r3
   35170:	b	350f4 <GetDataSlab+0x140e8>
   35174:	mov	sl, #1
   35178:	add	r3, sp, #152	; 0x98
   3517c:	add	r3, r3, sl, lsl #2
   35180:	ldr	r3, [r3, #-120]	; 0xffffff88
   35184:	add	fp, fp, r3
   35188:	add	r6, r6, r3
   3518c:	ldr	r3, [sp, #24]
   35190:	ldr	r2, [sp, #8]
   35194:	add	r3, r3, r2
   35198:	str	r3, [sp, #24]
   3519c:	ldr	r2, [sp, #20]
   351a0:	cmp	r3, r2
   351a4:	bge	3528c <GetDataSlab+0x14280>
   351a8:	ldr	r3, [sp, #196]	; 0xc4
   351ac:	ldr	r3, [r3]
   351b0:	cmp	r3, #0
   351b4:	addne	r6, r6, r3
   351b8:	addne	fp, fp, r3
   351bc:	ldr	r3, [sp, #204]	; 0xcc
   351c0:	ldr	r3, [r3]
   351c4:	str	r3, [sp, #8]
   351c8:	cmp	r3, #0
   351cc:	ble	3520c <GetDataSlab+0x14200>
   351d0:	ldr	r3, [sp, #4]
   351d4:	ldr	r2, [sp, #24]
   351d8:	add	r2, r3, r2, lsl #1
   351dc:	mov	r3, #0
   351e0:	ldrsb	r1, [r6]
   351e4:	strh	r1, [r2], #2
   351e8:	ldr	r1, [r8]
   351ec:	add	r6, r6, r1
   351f0:	add	fp, fp, r1
   351f4:	add	r3, r3, #1
   351f8:	ldr	r1, [sp, #204]	; 0xcc
   351fc:	ldr	r1, [r1]
   35200:	str	r1, [sp, #8]
   35204:	cmp	r1, r3
   35208:	bgt	351e0 <GetDataSlab+0x141d4>
   3520c:	ldr	r3, [r8]
   35210:	ldr	r2, [sp, #8]
   35214:	mul	r3, r3, r2
   35218:	ldr	r2, [sp, #192]	; 0xc0
   3521c:	ldr	r2, [r2]
   35220:	sub	r3, r2, r3
   35224:	ldr	r2, [sp, #196]	; 0xc4
   35228:	ldr	r2, [r2]
   3522c:	sub	r3, r3, r2
   35230:	add	fp, fp, r3
   35234:	add	r6, r6, r3
   35238:	ldr	r3, [sp, #208]	; 0xd0
   3523c:	cmp	r3, #1
   35240:	ble	3518c <GetDataSlab+0x14180>
   35244:	ldr	r3, [sp, #76]	; 0x4c
   35248:	add	r3, r3, #1
   3524c:	str	r3, [sp, #76]	; 0x4c
   35250:	ldr	r2, [sp, #204]	; 0xcc
   35254:	ldr	r1, [r2, #4]
   35258:	mov	r0, r3
   3525c:	bl	517e8 <__aeabi_idivmod>
   35260:	cmp	r1, #0
   35264:	bne	35174 <GetDataSlab+0x14168>
   35268:	add	r5, sp, #76	; 0x4c
   3526c:	ldr	r3, [sp, #204]	; 0xcc
   35270:	add	r3, r3, #4
   35274:	str	r3, [sp, #12]
   35278:	ldr	r3, [sp, #196]	; 0xc4
   3527c:	add	r9, r3, #4
   35280:	add	r7, sp, #112	; 0x70
   35284:	mov	sl, #1
   35288:	b	35130 <GetDataSlab+0x14124>
   3528c:	mov	r3, #0
   35290:	b	24fa8 <GetDataSlab+0x3f9c>
   35294:	ldr	r3, [r8]
   35298:	str	r3, [sp, #28]
   3529c:	sub	r3, r3, #1
   352a0:	str	r3, [sp, #32]
   352a4:	ldr	r3, [sp, #192]	; 0xc0
   352a8:	ldr	r3, [r3]
   352ac:	str	r3, [sp, #112]	; 0x70
   352b0:	ldr	r3, [sp, #204]	; 0xcc
   352b4:	ldr	r3, [r3]
   352b8:	str	r3, [sp, #20]
   352bc:	ldr	r3, [sp, #208]	; 0xd0
   352c0:	cmp	r3, #1
   352c4:	ble	352f8 <GetDataSlab+0x142ec>
   352c8:	str	r8, [sp, #16]
   352cc:	add	sl, sp, #36	; 0x24
   352d0:	ldr	lr, [sp, #192]	; 0xc0
   352d4:	add	r9, sp, #112	; 0x70
   352d8:	ldr	r3, [sp, #204]	; 0xcc
   352dc:	add	r5, r3, #4
   352e0:	ldr	r3, [sp, #196]	; 0xc4
   352e4:	add	r4, r3, #4
   352e8:	str	lr, [sp, #12]
   352ec:	mov	r6, #2
   352f0:	mov	fp, #0
   352f4:	b	41724 <GetDataSlab+0x20718>
   352f8:	mov	fp, #0
   352fc:	b	417b0 <GetDataSlab+0x207a4>
   35300:	ldr	r3, [sp, #20]
   35304:	cmp	r3, #0
   35308:	ble	3d570 <GetDataSlab+0x1c564>
   3530c:	mov	r3, #0
   35310:	str	r3, [sp, #16]
   35314:	b	353e8 <GetDataSlab+0x143dc>
   35318:	ldr	r2, [r8]
   3531c:	cmp	r2, #0
   35320:	beq	35338 <GetDataSlab+0x1432c>
   35324:	ldr	r3, [sp, #12]
   35328:	ldr	r3, [r3, #-4]
   3532c:	mul	r3, r3, r2
   35330:	add	r6, r6, r3
   35334:	add	fp, fp, r3
   35338:	add	r9, r9, #1
   3533c:	ldr	r3, [sp, #208]	; 0xd0
   35340:	cmp	r3, r9
   35344:	beq	353d0 <GetDataSlab+0x143c4>
   35348:	ldr	r3, [r5]
   3534c:	add	r3, r3, #1
   35350:	str	r3, [r5]
   35354:	add	r8, r8, #4
   35358:	ldr	r2, [sp, #8]
   3535c:	ldr	r1, [r2, #4]!
   35360:	str	r2, [sp, #8]
   35364:	mov	r0, r3
   35368:	bl	517e8 <__aeabi_idivmod>
   3536c:	cmp	r1, #0
   35370:	bne	353bc <GetDataSlab+0x143b0>
   35374:	mov	r3, #0
   35378:	str	r3, [r5], #4
   3537c:	add	r7, r7, #4
   35380:	str	r7, [sp, #12]
   35384:	ldr	r4, [r7]
   35388:	mov	r1, r4
   3538c:	mov	r0, fp
   35390:	bl	517e8 <__aeabi_idivmod>
   35394:	subs	r3, r1, #0
   35398:	beq	35318 <GetDataSlab+0x1430c>
   3539c:	ldr	r2, [r7, #-4]
   353a0:	ldr	r1, [r8]
   353a4:	sub	r3, r4, r3
   353a8:	mla	r3, r1, r2, r3
   353ac:	add	r6, r6, r3
   353b0:	add	fp, fp, r3
   353b4:	b	35338 <GetDataSlab+0x1432c>
   353b8:	ldr	r9, [sp, #28]
   353bc:	add	r3, sp, #152	; 0x98
   353c0:	add	r3, r3, r9, lsl #2
   353c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   353c8:	add	fp, fp, r3
   353cc:	add	r6, r6, r3
   353d0:	ldr	r3, [sp, #16]
   353d4:	add	r3, r3, sl
   353d8:	str	r3, [sp, #16]
   353dc:	ldr	r2, [sp, #20]
   353e0:	cmp	r3, r2
   353e4:	bge	354ac <GetDataSlab+0x144a0>
   353e8:	ldr	r3, [sp, #196]	; 0xc4
   353ec:	ldr	r3, [r3]
   353f0:	cmp	r3, #0
   353f4:	addne	r6, r6, r3
   353f8:	addne	fp, fp, r3
   353fc:	ldr	r3, [sp, #204]	; 0xcc
   35400:	ldr	sl, [r3]
   35404:	cmp	sl, #0
   35408:	ble	3543c <GetDataSlab+0x14430>
   3540c:	sub	r0, r6, #1
   35410:	ldr	r3, [sp, #4]
   35414:	ldr	r2, [sp, #16]
   35418:	add	r1, r3, r2, lsl #1
   3541c:	mov	r2, #0
   35420:	ldrb	r3, [r0, #1]!
   35424:	strh	r3, [r1], #2
   35428:	add	r2, r2, #1
   3542c:	ldr	r3, [sp, #204]	; 0xcc
   35430:	ldr	sl, [r3]
   35434:	cmp	sl, r2
   35438:	bgt	35420 <GetDataSlab+0x14414>
   3543c:	ldr	r3, [sp, #192]	; 0xc0
   35440:	ldr	r2, [r3]
   35444:	ldr	r3, [sp, #196]	; 0xc4
   35448:	ldr	r3, [r3]
   3544c:	sub	r3, r2, r3
   35450:	add	fp, fp, r3
   35454:	add	r6, r6, r3
   35458:	ldr	r3, [sp, #208]	; 0xd0
   3545c:	cmp	r3, #1
   35460:	ble	353d0 <GetDataSlab+0x143c4>
   35464:	ldr	r3, [sp, #76]	; 0x4c
   35468:	add	r3, r3, #1
   3546c:	str	r3, [sp, #76]	; 0x4c
   35470:	ldr	r2, [sp, #204]	; 0xcc
   35474:	ldr	r1, [r2, #4]
   35478:	mov	r0, r3
   3547c:	bl	517e8 <__aeabi_idivmod>
   35480:	cmp	r1, #0
   35484:	bne	353b8 <GetDataSlab+0x143ac>
   35488:	add	r5, sp, #76	; 0x4c
   3548c:	ldr	r3, [sp, #204]	; 0xcc
   35490:	add	r3, r3, #4
   35494:	str	r3, [sp, #8]
   35498:	ldr	r3, [sp, #196]	; 0xc4
   3549c:	add	r8, r3, #4
   354a0:	add	r7, sp, #112	; 0x70
   354a4:	ldr	r9, [sp, #28]
   354a8:	b	35374 <GetDataSlab+0x14368>
   354ac:	mov	r3, #0
   354b0:	b	24fa8 <GetDataSlab+0x3f9c>
   354b4:	ldr	r2, [r9]
   354b8:	cmp	r2, #0
   354bc:	beq	354d4 <GetDataSlab+0x144c8>
   354c0:	ldr	r3, [sp, #16]
   354c4:	ldr	r3, [r3, #-4]
   354c8:	mul	r3, r3, r2
   354cc:	add	r6, r6, r3
   354d0:	add	fp, fp, r3
   354d4:	add	sl, sl, #1
   354d8:	ldr	r3, [sp, #208]	; 0xd0
   354dc:	cmp	r3, sl
   354e0:	beq	3556c <GetDataSlab+0x14560>
   354e4:	ldr	r3, [r5]
   354e8:	add	r3, r3, #1
   354ec:	str	r3, [r5]
   354f0:	add	r9, r9, #4
   354f4:	ldr	r2, [sp, #12]
   354f8:	ldr	r1, [r2, #4]!
   354fc:	str	r2, [sp, #12]
   35500:	mov	r0, r3
   35504:	bl	517e8 <__aeabi_idivmod>
   35508:	cmp	r1, #0
   3550c:	bne	35558 <GetDataSlab+0x1454c>
   35510:	mov	r3, #0
   35514:	str	r3, [r5], #4
   35518:	add	r7, r7, #4
   3551c:	str	r7, [sp, #16]
   35520:	ldr	r4, [r7]
   35524:	mov	r1, r4
   35528:	mov	r0, fp
   3552c:	bl	517e8 <__aeabi_idivmod>
   35530:	subs	r3, r1, #0
   35534:	beq	354b4 <GetDataSlab+0x144a8>
   35538:	ldr	r2, [r7, #-4]
   3553c:	ldr	r1, [r9]
   35540:	sub	r3, r4, r3
   35544:	mla	r3, r1, r2, r3
   35548:	add	r6, r6, r3
   3554c:	add	fp, fp, r3
   35550:	b	354d4 <GetDataSlab+0x144c8>
   35554:	mov	sl, #1
   35558:	add	r3, sp, #152	; 0x98
   3555c:	add	r3, r3, sl, lsl #2
   35560:	ldr	r3, [r3, #-120]	; 0xffffff88
   35564:	add	fp, fp, r3
   35568:	add	r6, r6, r3
   3556c:	ldr	r3, [sp, #24]
   35570:	ldr	r2, [sp, #8]
   35574:	add	r3, r3, r2
   35578:	str	r3, [sp, #24]
   3557c:	ldr	r2, [sp, #20]
   35580:	cmp	r3, r2
   35584:	bge	3566c <GetDataSlab+0x14660>
   35588:	ldr	r3, [sp, #196]	; 0xc4
   3558c:	ldr	r3, [r3]
   35590:	cmp	r3, #0
   35594:	addne	r6, r6, r3
   35598:	addne	fp, fp, r3
   3559c:	ldr	r3, [sp, #204]	; 0xcc
   355a0:	ldr	r3, [r3]
   355a4:	str	r3, [sp, #8]
   355a8:	cmp	r3, #0
   355ac:	ble	355ec <GetDataSlab+0x145e0>
   355b0:	ldr	r3, [sp, #4]
   355b4:	ldr	r2, [sp, #24]
   355b8:	add	r2, r3, r2, lsl #1
   355bc:	mov	r3, #0
   355c0:	ldrb	r1, [r6]
   355c4:	strh	r1, [r2], #2
   355c8:	ldr	r1, [r8]
   355cc:	add	r6, r6, r1
   355d0:	add	fp, fp, r1
   355d4:	add	r3, r3, #1
   355d8:	ldr	r1, [sp, #204]	; 0xcc
   355dc:	ldr	r1, [r1]
   355e0:	str	r1, [sp, #8]
   355e4:	cmp	r1, r3
   355e8:	bgt	355c0 <GetDataSlab+0x145b4>
   355ec:	ldr	r3, [r8]
   355f0:	ldr	r2, [sp, #8]
   355f4:	mul	r3, r3, r2
   355f8:	ldr	r2, [sp, #192]	; 0xc0
   355fc:	ldr	r2, [r2]
   35600:	sub	r3, r2, r3
   35604:	ldr	r2, [sp, #196]	; 0xc4
   35608:	ldr	r2, [r2]
   3560c:	sub	r3, r3, r2
   35610:	add	fp, fp, r3
   35614:	add	r6, r6, r3
   35618:	ldr	r3, [sp, #208]	; 0xd0
   3561c:	cmp	r3, #1
   35620:	ble	3556c <GetDataSlab+0x14560>
   35624:	ldr	r3, [sp, #76]	; 0x4c
   35628:	add	r3, r3, #1
   3562c:	str	r3, [sp, #76]	; 0x4c
   35630:	ldr	r2, [sp, #204]	; 0xcc
   35634:	ldr	r1, [r2, #4]
   35638:	mov	r0, r3
   3563c:	bl	517e8 <__aeabi_idivmod>
   35640:	cmp	r1, #0
   35644:	bne	35554 <GetDataSlab+0x14548>
   35648:	add	r5, sp, #76	; 0x4c
   3564c:	ldr	r3, [sp, #204]	; 0xcc
   35650:	add	r3, r3, #4
   35654:	str	r3, [sp, #12]
   35658:	ldr	r3, [sp, #196]	; 0xc4
   3565c:	add	r9, r3, #4
   35660:	add	r7, sp, #112	; 0x70
   35664:	mov	sl, #1
   35668:	b	35510 <GetDataSlab+0x14504>
   3566c:	mov	r3, #0
   35670:	b	24fa8 <GetDataSlab+0x3f9c>
   35674:	cmp	r4, #12
   35678:	beq	356ec <GetDataSlab+0x146e0>
   3567c:	cmp	r4, #13
   35680:	movne	r3, #1
   35684:	bne	24fa8 <GetDataSlab+0x3f9c>
   35688:	ldr	r3, [r8]
   3568c:	str	r3, [sp, #28]
   35690:	sub	r3, r3, #1
   35694:	str	r3, [sp, #32]
   35698:	ldr	r3, [sp, #192]	; 0xc0
   3569c:	ldr	r3, [r3]
   356a0:	str	r3, [sp, #112]	; 0x70
   356a4:	ldr	r3, [sp, #204]	; 0xcc
   356a8:	ldr	r3, [r3]
   356ac:	str	r3, [sp, #20]
   356b0:	ldr	r3, [sp, #208]	; 0xd0
   356b4:	cmp	r3, #1
   356b8:	ble	35abc <GetDataSlab+0x14ab0>
   356bc:	str	r8, [sp, #16]
   356c0:	add	sl, sp, #36	; 0x24
   356c4:	ldr	lr, [sp, #192]	; 0xc0
   356c8:	add	r9, sp, #112	; 0x70
   356cc:	ldr	r3, [sp, #204]	; 0xcc
   356d0:	add	r6, r3, #4
   356d4:	ldr	r3, [sp, #196]	; 0xc4
   356d8:	add	r4, r3, #4
   356dc:	str	lr, [sp, #12]
   356e0:	mov	r5, #2
   356e4:	mov	fp, #0
   356e8:	b	418fc <GetDataSlab+0x208f0>
   356ec:	ldr	r3, [r8]
   356f0:	str	r3, [sp, #28]
   356f4:	sub	r3, r3, #1
   356f8:	str	r3, [sp, #32]
   356fc:	ldr	r3, [sp, #192]	; 0xc0
   35700:	ldr	r3, [r3]
   35704:	str	r3, [sp, #112]	; 0x70
   35708:	ldr	r3, [sp, #204]	; 0xcc
   3570c:	ldr	r3, [r3]
   35710:	str	r3, [sp, #20]
   35714:	ldr	r3, [sp, #208]	; 0xd0
   35718:	cmp	r3, #1
   3571c:	ble	35750 <GetDataSlab+0x14744>
   35720:	str	r8, [sp, #16]
   35724:	add	sl, sp, #36	; 0x24
   35728:	ldr	lr, [sp, #192]	; 0xc0
   3572c:	add	r9, sp, #112	; 0x70
   35730:	ldr	r3, [sp, #204]	; 0xcc
   35734:	add	r6, r3, #4
   35738:	ldr	r3, [sp, #196]	; 0xc4
   3573c:	add	r4, r3, #4
   35740:	str	lr, [sp, #12]
   35744:	mov	r5, #2
   35748:	mov	fp, #0
   3574c:	b	41810 <GetDataSlab+0x20804>
   35750:	mov	fp, #0
   35754:	b	4189c <GetDataSlab+0x20890>
   35758:	ldr	r3, [sp, #20]
   3575c:	cmp	r3, #0
   35760:	ble	418c4 <GetDataSlab+0x208b8>
   35764:	mov	r3, #0
   35768:	str	r3, [sp, #16]
   3576c:	b	35840 <GetDataSlab+0x14834>
   35770:	ldr	r2, [r8]
   35774:	cmp	r2, #0
   35778:	beq	35790 <GetDataSlab+0x14784>
   3577c:	ldr	r3, [sp, #12]
   35780:	ldr	r3, [r3, #-4]
   35784:	mul	r3, r3, r2
   35788:	add	r5, r5, r3, lsl #3
   3578c:	add	fp, fp, r3
   35790:	add	r9, r9, #1
   35794:	ldr	r3, [sp, #208]	; 0xd0
   35798:	cmp	r3, r9
   3579c:	beq	35828 <GetDataSlab+0x1481c>
   357a0:	ldr	r3, [r6]
   357a4:	add	r3, r3, #1
   357a8:	str	r3, [r6]
   357ac:	add	r8, r8, #4
   357b0:	ldr	r2, [sp, #8]
   357b4:	ldr	r1, [r2, #4]!
   357b8:	str	r2, [sp, #8]
   357bc:	mov	r0, r3
   357c0:	bl	517e8 <__aeabi_idivmod>
   357c4:	cmp	r1, #0
   357c8:	bne	35814 <GetDataSlab+0x14808>
   357cc:	mov	r3, #0
   357d0:	str	r3, [r6], #4
   357d4:	add	r7, r7, #4
   357d8:	str	r7, [sp, #12]
   357dc:	ldr	r4, [r7]
   357e0:	mov	r1, r4
   357e4:	mov	r0, fp
   357e8:	bl	517e8 <__aeabi_idivmod>
   357ec:	subs	r3, r1, #0
   357f0:	beq	35770 <GetDataSlab+0x14764>
   357f4:	ldr	r2, [r7, #-4]
   357f8:	ldr	r1, [r8]
   357fc:	sub	r3, r4, r3
   35800:	mla	r3, r1, r2, r3
   35804:	add	r5, r5, r3, lsl #3
   35808:	add	fp, fp, r3
   3580c:	b	35790 <GetDataSlab+0x14784>
   35810:	ldr	r9, [sp, #28]
   35814:	add	r3, sp, #152	; 0x98
   35818:	add	r3, r3, r9, lsl #2
   3581c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35820:	add	fp, fp, r3
   35824:	add	r5, r5, r3, lsl #3
   35828:	ldr	r3, [sp, #16]
   3582c:	add	r3, r3, sl
   35830:	str	r3, [sp, #16]
   35834:	ldr	r2, [sp, #20]
   35838:	cmp	r3, r2
   3583c:	bge	418c4 <GetDataSlab+0x208b8>
   35840:	ldr	r3, [sp, #196]	; 0xc4
   35844:	ldr	r3, [r3]
   35848:	cmp	r3, #0
   3584c:	addne	r5, r5, r3, lsl #3
   35850:	addne	fp, fp, r3
   35854:	ldr	r3, [sp, #204]	; 0xcc
   35858:	ldr	sl, [r3]
   3585c:	cmp	sl, #0
   35860:	ble	35894 <GetDataSlab+0x14888>
   35864:	sub	r0, r5, #8
   35868:	ldr	r3, [sp, #4]
   3586c:	ldr	r2, [sp, #16]
   35870:	add	r1, r3, r2, lsl #1
   35874:	mov	r2, #0
   35878:	ldr	r3, [r0, #8]!
   3587c:	strh	r3, [r1], #2
   35880:	add	r2, r2, #1
   35884:	ldr	r3, [sp, #204]	; 0xcc
   35888:	ldr	sl, [r3]
   3588c:	cmp	sl, r2
   35890:	bgt	35878 <GetDataSlab+0x1486c>
   35894:	ldr	r3, [sp, #192]	; 0xc0
   35898:	ldr	r2, [r3]
   3589c:	ldr	r3, [sp, #196]	; 0xc4
   358a0:	ldr	r3, [r3]
   358a4:	sub	r3, r2, r3
   358a8:	add	fp, fp, r3
   358ac:	add	r5, r5, r3, lsl #3
   358b0:	ldr	r3, [sp, #208]	; 0xd0
   358b4:	cmp	r3, #1
   358b8:	ble	35828 <GetDataSlab+0x1481c>
   358bc:	ldr	r3, [sp, #76]	; 0x4c
   358c0:	add	r3, r3, #1
   358c4:	str	r3, [sp, #76]	; 0x4c
   358c8:	ldr	r2, [sp, #204]	; 0xcc
   358cc:	ldr	r1, [r2, #4]
   358d0:	mov	r0, r3
   358d4:	bl	517e8 <__aeabi_idivmod>
   358d8:	cmp	r1, #0
   358dc:	bne	35810 <GetDataSlab+0x14804>
   358e0:	add	r6, sp, #76	; 0x4c
   358e4:	ldr	r3, [sp, #204]	; 0xcc
   358e8:	add	r3, r3, #4
   358ec:	str	r3, [sp, #8]
   358f0:	ldr	r3, [sp, #196]	; 0xc4
   358f4:	add	r8, r3, #4
   358f8:	add	r7, sp, #112	; 0x70
   358fc:	ldr	r9, [sp, #28]
   35900:	b	357cc <GetDataSlab+0x147c0>
   35904:	ldr	r2, [r9]
   35908:	cmp	r2, #0
   3590c:	beq	35924 <GetDataSlab+0x14918>
   35910:	ldr	r3, [sp, #16]
   35914:	ldr	r3, [r3, #-4]
   35918:	mul	r3, r3, r2
   3591c:	add	r5, r5, r3, lsl #3
   35920:	add	fp, fp, r3
   35924:	add	sl, sl, #1
   35928:	ldr	r3, [sp, #208]	; 0xd0
   3592c:	cmp	r3, sl
   35930:	beq	359bc <GetDataSlab+0x149b0>
   35934:	ldr	r3, [r6]
   35938:	add	r3, r3, #1
   3593c:	str	r3, [r6]
   35940:	add	r9, r9, #4
   35944:	ldr	r2, [sp, #12]
   35948:	ldr	r1, [r2, #4]!
   3594c:	str	r2, [sp, #12]
   35950:	mov	r0, r3
   35954:	bl	517e8 <__aeabi_idivmod>
   35958:	cmp	r1, #0
   3595c:	bne	359a8 <GetDataSlab+0x1499c>
   35960:	mov	r3, #0
   35964:	str	r3, [r6], #4
   35968:	add	r7, r7, #4
   3596c:	str	r7, [sp, #16]
   35970:	ldr	r4, [r7]
   35974:	mov	r1, r4
   35978:	mov	r0, fp
   3597c:	bl	517e8 <__aeabi_idivmod>
   35980:	subs	r3, r1, #0
   35984:	beq	35904 <GetDataSlab+0x148f8>
   35988:	ldr	r2, [r7, #-4]
   3598c:	ldr	r1, [r9]
   35990:	sub	r3, r4, r3
   35994:	mla	r3, r1, r2, r3
   35998:	add	r5, r5, r3, lsl #3
   3599c:	add	fp, fp, r3
   359a0:	b	35924 <GetDataSlab+0x14918>
   359a4:	mov	sl, #1
   359a8:	add	r3, sp, #152	; 0x98
   359ac:	add	r3, r3, sl, lsl #2
   359b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   359b4:	add	fp, fp, r3
   359b8:	add	r5, r5, r3, lsl #3
   359bc:	ldr	r3, [sp, #24]
   359c0:	ldr	r2, [sp, #8]
   359c4:	add	r3, r3, r2
   359c8:	str	r3, [sp, #24]
   359cc:	ldr	r2, [sp, #20]
   359d0:	cmp	r3, r2
   359d4:	bge	418c4 <GetDataSlab+0x208b8>
   359d8:	ldr	r3, [sp, #196]	; 0xc4
   359dc:	ldr	r3, [r3]
   359e0:	cmp	r3, #0
   359e4:	addne	r5, r5, r3, lsl #3
   359e8:	addne	fp, fp, r3
   359ec:	ldr	r3, [sp, #204]	; 0xcc
   359f0:	ldr	r3, [r3]
   359f4:	str	r3, [sp, #8]
   359f8:	cmp	r3, #0
   359fc:	ble	35a3c <GetDataSlab+0x14a30>
   35a00:	ldr	r3, [sp, #4]
   35a04:	ldr	r2, [sp, #24]
   35a08:	add	r2, r3, r2, lsl #1
   35a0c:	mov	r3, #0
   35a10:	ldr	r1, [r5]
   35a14:	strh	r1, [r2], #2
   35a18:	ldr	r1, [r8]
   35a1c:	add	r5, r5, r1, lsl #3
   35a20:	add	fp, fp, r1
   35a24:	add	r3, r3, #1
   35a28:	ldr	r1, [sp, #204]	; 0xcc
   35a2c:	ldr	r1, [r1]
   35a30:	str	r1, [sp, #8]
   35a34:	cmp	r1, r3
   35a38:	bgt	35a10 <GetDataSlab+0x14a04>
   35a3c:	ldr	r3, [r8]
   35a40:	ldr	r2, [sp, #8]
   35a44:	mul	r3, r3, r2
   35a48:	ldr	r2, [sp, #192]	; 0xc0
   35a4c:	ldr	r2, [r2]
   35a50:	sub	r3, r2, r3
   35a54:	ldr	r2, [sp, #196]	; 0xc4
   35a58:	ldr	r2, [r2]
   35a5c:	sub	r3, r3, r2
   35a60:	add	fp, fp, r3
   35a64:	add	r5, r5, r3, lsl #3
   35a68:	ldr	r3, [sp, #208]	; 0xd0
   35a6c:	cmp	r3, #1
   35a70:	ble	359bc <GetDataSlab+0x149b0>
   35a74:	ldr	r3, [sp, #76]	; 0x4c
   35a78:	add	r3, r3, #1
   35a7c:	str	r3, [sp, #76]	; 0x4c
   35a80:	ldr	r2, [sp, #204]	; 0xcc
   35a84:	ldr	r1, [r2, #4]
   35a88:	mov	r0, r3
   35a8c:	bl	517e8 <__aeabi_idivmod>
   35a90:	cmp	r1, #0
   35a94:	bne	359a4 <GetDataSlab+0x14998>
   35a98:	add	r6, sp, #76	; 0x4c
   35a9c:	ldr	r3, [sp, #204]	; 0xcc
   35aa0:	add	r3, r3, #4
   35aa4:	str	r3, [sp, #12]
   35aa8:	ldr	r3, [sp, #196]	; 0xc4
   35aac:	add	r9, r3, #4
   35ab0:	add	r7, sp, #112	; 0x70
   35ab4:	mov	sl, #1
   35ab8:	b	35960 <GetDataSlab+0x14954>
   35abc:	mov	fp, #0
   35ac0:	b	41988 <GetDataSlab+0x2097c>
   35ac4:	ldr	r3, [sp, #20]
   35ac8:	cmp	r3, #0
   35acc:	ble	3d578 <GetDataSlab+0x1c56c>
   35ad0:	mov	r3, #0
   35ad4:	str	r3, [sp, #16]
   35ad8:	b	35bac <GetDataSlab+0x14ba0>
   35adc:	ldr	r2, [r8]
   35ae0:	cmp	r2, #0
   35ae4:	beq	35afc <GetDataSlab+0x14af0>
   35ae8:	ldr	r3, [sp, #12]
   35aec:	ldr	r3, [r3, #-4]
   35af0:	mul	r3, r3, r2
   35af4:	add	r5, r5, r3, lsl #3
   35af8:	add	fp, fp, r3
   35afc:	add	r9, r9, #1
   35b00:	ldr	r3, [sp, #208]	; 0xd0
   35b04:	cmp	r3, r9
   35b08:	beq	35b94 <GetDataSlab+0x14b88>
   35b0c:	ldr	r3, [r6]
   35b10:	add	r3, r3, #1
   35b14:	str	r3, [r6]
   35b18:	add	r8, r8, #4
   35b1c:	ldr	r2, [sp, #8]
   35b20:	ldr	r1, [r2, #4]!
   35b24:	str	r2, [sp, #8]
   35b28:	mov	r0, r3
   35b2c:	bl	517e8 <__aeabi_idivmod>
   35b30:	cmp	r1, #0
   35b34:	bne	35b80 <GetDataSlab+0x14b74>
   35b38:	mov	r3, #0
   35b3c:	str	r3, [r6], #4
   35b40:	add	r7, r7, #4
   35b44:	str	r7, [sp, #12]
   35b48:	ldr	r4, [r7]
   35b4c:	mov	r1, r4
   35b50:	mov	r0, fp
   35b54:	bl	517e8 <__aeabi_idivmod>
   35b58:	subs	r3, r1, #0
   35b5c:	beq	35adc <GetDataSlab+0x14ad0>
   35b60:	ldr	r2, [r7, #-4]
   35b64:	ldr	r1, [r8]
   35b68:	sub	r3, r4, r3
   35b6c:	mla	r3, r1, r2, r3
   35b70:	add	r5, r5, r3, lsl #3
   35b74:	add	fp, fp, r3
   35b78:	b	35afc <GetDataSlab+0x14af0>
   35b7c:	ldr	r9, [sp, #28]
   35b80:	add	r3, sp, #152	; 0x98
   35b84:	add	r3, r3, r9, lsl #2
   35b88:	ldr	r3, [r3, #-120]	; 0xffffff88
   35b8c:	add	fp, fp, r3
   35b90:	add	r5, r5, r3, lsl #3
   35b94:	ldr	r3, [sp, #16]
   35b98:	add	r3, r3, sl
   35b9c:	str	r3, [sp, #16]
   35ba0:	ldr	r2, [sp, #20]
   35ba4:	cmp	r3, r2
   35ba8:	bge	35c70 <GetDataSlab+0x14c64>
   35bac:	ldr	r3, [sp, #196]	; 0xc4
   35bb0:	ldr	r3, [r3]
   35bb4:	cmp	r3, #0
   35bb8:	addne	r5, r5, r3, lsl #3
   35bbc:	addne	fp, fp, r3
   35bc0:	ldr	r3, [sp, #204]	; 0xcc
   35bc4:	ldr	sl, [r3]
   35bc8:	cmp	sl, #0
   35bcc:	ble	35c00 <GetDataSlab+0x14bf4>
   35bd0:	sub	r0, r5, #8
   35bd4:	ldr	r3, [sp, #4]
   35bd8:	ldr	r2, [sp, #16]
   35bdc:	add	r1, r3, r2, lsl #1
   35be0:	mov	r2, #0
   35be4:	ldr	r3, [r0, #8]!
   35be8:	strh	r3, [r1], #2
   35bec:	add	r2, r2, #1
   35bf0:	ldr	r3, [sp, #204]	; 0xcc
   35bf4:	ldr	sl, [r3]
   35bf8:	cmp	sl, r2
   35bfc:	bgt	35be4 <GetDataSlab+0x14bd8>
   35c00:	ldr	r3, [sp, #192]	; 0xc0
   35c04:	ldr	r2, [r3]
   35c08:	ldr	r3, [sp, #196]	; 0xc4
   35c0c:	ldr	r3, [r3]
   35c10:	sub	r3, r2, r3
   35c14:	add	fp, fp, r3
   35c18:	add	r5, r5, r3, lsl #3
   35c1c:	ldr	r3, [sp, #208]	; 0xd0
   35c20:	cmp	r3, #1
   35c24:	ble	35b94 <GetDataSlab+0x14b88>
   35c28:	ldr	r3, [sp, #76]	; 0x4c
   35c2c:	add	r3, r3, #1
   35c30:	str	r3, [sp, #76]	; 0x4c
   35c34:	ldr	r2, [sp, #204]	; 0xcc
   35c38:	ldr	r1, [r2, #4]
   35c3c:	mov	r0, r3
   35c40:	bl	517e8 <__aeabi_idivmod>
   35c44:	cmp	r1, #0
   35c48:	bne	35b7c <GetDataSlab+0x14b70>
   35c4c:	add	r6, sp, #76	; 0x4c
   35c50:	ldr	r3, [sp, #204]	; 0xcc
   35c54:	add	r3, r3, #4
   35c58:	str	r3, [sp, #8]
   35c5c:	ldr	r3, [sp, #196]	; 0xc4
   35c60:	add	r8, r3, #4
   35c64:	add	r7, sp, #112	; 0x70
   35c68:	ldr	r9, [sp, #28]
   35c6c:	b	35b38 <GetDataSlab+0x14b2c>
   35c70:	mov	r3, #0
   35c74:	b	24fa8 <GetDataSlab+0x3f9c>
   35c78:	ldr	r2, [r9]
   35c7c:	cmp	r2, #0
   35c80:	beq	35c98 <GetDataSlab+0x14c8c>
   35c84:	ldr	r3, [sp, #16]
   35c88:	ldr	r3, [r3, #-4]
   35c8c:	mul	r3, r3, r2
   35c90:	add	r5, r5, r3, lsl #3
   35c94:	add	fp, fp, r3
   35c98:	add	sl, sl, #1
   35c9c:	ldr	r3, [sp, #208]	; 0xd0
   35ca0:	cmp	r3, sl
   35ca4:	beq	35d30 <GetDataSlab+0x14d24>
   35ca8:	ldr	r3, [r6]
   35cac:	add	r3, r3, #1
   35cb0:	str	r3, [r6]
   35cb4:	add	r9, r9, #4
   35cb8:	ldr	r2, [sp, #12]
   35cbc:	ldr	r1, [r2, #4]!
   35cc0:	str	r2, [sp, #12]
   35cc4:	mov	r0, r3
   35cc8:	bl	517e8 <__aeabi_idivmod>
   35ccc:	cmp	r1, #0
   35cd0:	bne	35d1c <GetDataSlab+0x14d10>
   35cd4:	mov	r3, #0
   35cd8:	str	r3, [r6], #4
   35cdc:	add	r7, r7, #4
   35ce0:	str	r7, [sp, #16]
   35ce4:	ldr	r4, [r7]
   35ce8:	mov	r1, r4
   35cec:	mov	r0, fp
   35cf0:	bl	517e8 <__aeabi_idivmod>
   35cf4:	subs	r3, r1, #0
   35cf8:	beq	35c78 <GetDataSlab+0x14c6c>
   35cfc:	ldr	r2, [r7, #-4]
   35d00:	ldr	r1, [r9]
   35d04:	sub	r3, r4, r3
   35d08:	mla	r3, r1, r2, r3
   35d0c:	add	r5, r5, r3, lsl #3
   35d10:	add	fp, fp, r3
   35d14:	b	35c98 <GetDataSlab+0x14c8c>
   35d18:	mov	sl, #1
   35d1c:	add	r3, sp, #152	; 0x98
   35d20:	add	r3, r3, sl, lsl #2
   35d24:	ldr	r3, [r3, #-120]	; 0xffffff88
   35d28:	add	fp, fp, r3
   35d2c:	add	r5, r5, r3, lsl #3
   35d30:	ldr	r3, [sp, #24]
   35d34:	ldr	r2, [sp, #8]
   35d38:	add	r3, r3, r2
   35d3c:	str	r3, [sp, #24]
   35d40:	ldr	r2, [sp, #20]
   35d44:	cmp	r3, r2
   35d48:	bge	35e30 <GetDataSlab+0x14e24>
   35d4c:	ldr	r3, [sp, #196]	; 0xc4
   35d50:	ldr	r3, [r3]
   35d54:	cmp	r3, #0
   35d58:	addne	r5, r5, r3, lsl #3
   35d5c:	addne	fp, fp, r3
   35d60:	ldr	r3, [sp, #204]	; 0xcc
   35d64:	ldr	r3, [r3]
   35d68:	str	r3, [sp, #8]
   35d6c:	cmp	r3, #0
   35d70:	ble	35db0 <GetDataSlab+0x14da4>
   35d74:	ldr	r3, [sp, #4]
   35d78:	ldr	r2, [sp, #24]
   35d7c:	add	r2, r3, r2, lsl #1
   35d80:	mov	r3, #0
   35d84:	ldr	r1, [r5]
   35d88:	strh	r1, [r2], #2
   35d8c:	ldr	r1, [r8]
   35d90:	add	r5, r5, r1, lsl #3
   35d94:	add	fp, fp, r1
   35d98:	add	r3, r3, #1
   35d9c:	ldr	r1, [sp, #204]	; 0xcc
   35da0:	ldr	r1, [r1]
   35da4:	str	r1, [sp, #8]
   35da8:	cmp	r1, r3
   35dac:	bgt	35d84 <GetDataSlab+0x14d78>
   35db0:	ldr	r3, [r8]
   35db4:	ldr	r2, [sp, #8]
   35db8:	mul	r3, r3, r2
   35dbc:	ldr	r2, [sp, #192]	; 0xc0
   35dc0:	ldr	r2, [r2]
   35dc4:	sub	r3, r2, r3
   35dc8:	ldr	r2, [sp, #196]	; 0xc4
   35dcc:	ldr	r2, [r2]
   35dd0:	sub	r3, r3, r2
   35dd4:	add	fp, fp, r3
   35dd8:	add	r5, r5, r3, lsl #3
   35ddc:	ldr	r3, [sp, #208]	; 0xd0
   35de0:	cmp	r3, #1
   35de4:	ble	35d30 <GetDataSlab+0x14d24>
   35de8:	ldr	r3, [sp, #76]	; 0x4c
   35dec:	add	r3, r3, #1
   35df0:	str	r3, [sp, #76]	; 0x4c
   35df4:	ldr	r2, [sp, #204]	; 0xcc
   35df8:	ldr	r1, [r2, #4]
   35dfc:	mov	r0, r3
   35e00:	bl	517e8 <__aeabi_idivmod>
   35e04:	cmp	r1, #0
   35e08:	bne	35d18 <GetDataSlab+0x14d0c>
   35e0c:	add	r6, sp, #76	; 0x4c
   35e10:	ldr	r3, [sp, #204]	; 0xcc
   35e14:	add	r3, r3, #4
   35e18:	str	r3, [sp, #12]
   35e1c:	ldr	r3, [sp, #196]	; 0xc4
   35e20:	add	r9, r3, #4
   35e24:	add	r7, sp, #112	; 0x70
   35e28:	mov	sl, #1
   35e2c:	b	35cd4 <GetDataSlab+0x14cc8>
   35e30:	mov	r3, #0
   35e34:	b	24fa8 <GetDataSlab+0x3f9c>
   35e38:	sub	r3, r4, #1
   35e3c:	cmp	r3, #8
   35e40:	addls	pc, pc, r3, lsl #2
   35e44:	b	37d8c <GetDataSlab+0x16d80>
   35e48:	b	375cc <GetDataSlab+0x165c0>
   35e4c:	b	379ac <GetDataSlab+0x169a0>
   35e50:	b	36e0c <GetDataSlab+0x15e00>
   35e54:	b	371ec <GetDataSlab+0x161e0>
   35e58:	b	3664c <GetDataSlab+0x15640>
   35e5c:	b	36a2c <GetDataSlab+0x15a20>
   35e60:	b	3625c <GetDataSlab+0x15250>
   35e64:	b	37d8c <GetDataSlab+0x16d80>
   35e68:	b	35e6c <GetDataSlab+0x14e60>
   35e6c:	ldr	r3, [r8]
   35e70:	str	r3, [sp, #28]
   35e74:	sub	r3, r3, #1
   35e78:	str	r3, [sp, #32]
   35e7c:	ldr	r3, [sp, #192]	; 0xc0
   35e80:	ldr	r3, [r3]
   35e84:	str	r3, [sp, #112]	; 0x70
   35e88:	ldr	r3, [sp, #204]	; 0xcc
   35e8c:	ldr	r3, [r3]
   35e90:	str	r3, [sp, #20]
   35e94:	ldr	r3, [sp, #208]	; 0xd0
   35e98:	cmp	r3, #1
   35e9c:	ble	35ed0 <GetDataSlab+0x14ec4>
   35ea0:	str	r8, [sp, #16]
   35ea4:	add	sl, sp, #36	; 0x24
   35ea8:	ldr	lr, [sp, #192]	; 0xc0
   35eac:	add	r9, sp, #112	; 0x70
   35eb0:	ldr	r3, [sp, #204]	; 0xcc
   35eb4:	add	r5, r3, #4
   35eb8:	ldr	r3, [sp, #196]	; 0xc4
   35ebc:	add	r4, r3, #4
   35ec0:	str	lr, [sp, #12]
   35ec4:	mov	r6, #2
   35ec8:	mov	fp, #0
   35ecc:	b	419e8 <GetDataSlab+0x209dc>
   35ed0:	mov	fp, #0
   35ed4:	b	41a74 <GetDataSlab+0x20a68>
   35ed8:	ldr	r3, [sp, #20]
   35edc:	cmp	r3, #0
   35ee0:	ble	3d580 <GetDataSlab+0x1c574>
   35ee4:	mov	r3, #0
   35ee8:	str	r3, [sp, #16]
   35eec:	b	35fc0 <GetDataSlab+0x14fb4>
   35ef0:	ldr	r2, [r8]
   35ef4:	cmp	r2, #0
   35ef8:	beq	35f10 <GetDataSlab+0x14f04>
   35efc:	ldr	r3, [sp, #12]
   35f00:	ldr	r3, [r3, #-4]
   35f04:	mul	r3, r3, r2
   35f08:	add	r5, r5, r3, lsl #3
   35f0c:	add	fp, fp, r3
   35f10:	add	r9, r9, #1
   35f14:	ldr	r3, [sp, #208]	; 0xd0
   35f18:	cmp	r3, r9
   35f1c:	beq	35fa8 <GetDataSlab+0x14f9c>
   35f20:	ldr	r3, [r6]
   35f24:	add	r3, r3, #1
   35f28:	str	r3, [r6]
   35f2c:	add	r8, r8, #4
   35f30:	ldr	r2, [sp, #8]
   35f34:	ldr	r1, [r2, #4]!
   35f38:	str	r2, [sp, #8]
   35f3c:	mov	r0, r3
   35f40:	bl	517e8 <__aeabi_idivmod>
   35f44:	cmp	r1, #0
   35f48:	bne	35f94 <GetDataSlab+0x14f88>
   35f4c:	mov	r3, #0
   35f50:	str	r3, [r6], #4
   35f54:	add	r7, r7, #4
   35f58:	str	r7, [sp, #12]
   35f5c:	ldr	r4, [r7]
   35f60:	mov	r1, r4
   35f64:	mov	r0, fp
   35f68:	bl	517e8 <__aeabi_idivmod>
   35f6c:	subs	r3, r1, #0
   35f70:	beq	35ef0 <GetDataSlab+0x14ee4>
   35f74:	ldr	r2, [r7, #-4]
   35f78:	ldr	r1, [r8]
   35f7c:	sub	r3, r4, r3
   35f80:	mla	r3, r1, r2, r3
   35f84:	add	r5, r5, r3, lsl #3
   35f88:	add	fp, fp, r3
   35f8c:	b	35f10 <GetDataSlab+0x14f04>
   35f90:	ldr	r9, [sp, #28]
   35f94:	add	r3, sp, #152	; 0x98
   35f98:	add	r3, r3, r9, lsl #2
   35f9c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35fa0:	add	fp, fp, r3
   35fa4:	add	r5, r5, r3, lsl #3
   35fa8:	ldr	r3, [sp, #16]
   35fac:	add	r3, r3, sl
   35fb0:	str	r3, [sp, #16]
   35fb4:	ldr	r2, [sp, #20]
   35fb8:	cmp	r3, r2
   35fbc:	bge	3608c <GetDataSlab+0x15080>
   35fc0:	ldr	r3, [sp, #196]	; 0xc4
   35fc4:	ldr	r3, [r3]
   35fc8:	cmp	r3, #0
   35fcc:	addne	r5, r5, r3, lsl #3
   35fd0:	addne	fp, fp, r3
   35fd4:	ldr	r3, [sp, #204]	; 0xcc
   35fd8:	ldr	sl, [r3]
   35fdc:	cmp	sl, #0
   35fe0:	ble	3601c <GetDataSlab+0x15010>
   35fe4:	mov	r1, r5
   35fe8:	ldr	r3, [sp, #4]
   35fec:	ldr	r2, [sp, #16]
   35ff0:	add	r2, r3, r2, lsl #1
   35ff4:	mov	r3, #0
   35ff8:	vldmia	r1!, {d7}
   35ffc:	vcvt.u32.f64	s15, d7
   36000:	vmov	r0, s15
   36004:	strh	r0, [r2], #2
   36008:	add	r3, r3, #1
   3600c:	ldr	r0, [sp, #204]	; 0xcc
   36010:	ldr	sl, [r0]
   36014:	cmp	sl, r3
   36018:	bgt	35ff8 <GetDataSlab+0x14fec>
   3601c:	ldr	r3, [sp, #192]	; 0xc0
   36020:	ldr	r2, [r3]
   36024:	ldr	r3, [sp, #196]	; 0xc4
   36028:	ldr	r3, [r3]
   3602c:	sub	r3, r2, r3
   36030:	add	fp, fp, r3
   36034:	add	r5, r5, r3, lsl #3
   36038:	ldr	r3, [sp, #208]	; 0xd0
   3603c:	cmp	r3, #1
   36040:	ble	35fa8 <GetDataSlab+0x14f9c>
   36044:	ldr	r3, [sp, #76]	; 0x4c
   36048:	add	r3, r3, #1
   3604c:	str	r3, [sp, #76]	; 0x4c
   36050:	ldr	r2, [sp, #204]	; 0xcc
   36054:	ldr	r1, [r2, #4]
   36058:	mov	r0, r3
   3605c:	bl	517e8 <__aeabi_idivmod>
   36060:	cmp	r1, #0
   36064:	bne	35f90 <GetDataSlab+0x14f84>
   36068:	add	r6, sp, #76	; 0x4c
   3606c:	ldr	r3, [sp, #204]	; 0xcc
   36070:	add	r3, r3, #4
   36074:	str	r3, [sp, #8]
   36078:	ldr	r3, [sp, #196]	; 0xc4
   3607c:	add	r8, r3, #4
   36080:	add	r7, sp, #112	; 0x70
   36084:	ldr	r9, [sp, #28]
   36088:	b	35f4c <GetDataSlab+0x14f40>
   3608c:	mov	r3, #0
   36090:	b	24fa8 <GetDataSlab+0x3f9c>
   36094:	ldr	r2, [r9]
   36098:	cmp	r2, #0
   3609c:	beq	360b4 <GetDataSlab+0x150a8>
   360a0:	ldr	r3, [sp, #16]
   360a4:	ldr	r3, [r3, #-4]
   360a8:	mul	r3, r3, r2
   360ac:	add	r5, r5, r3, lsl #3
   360b0:	add	fp, fp, r3
   360b4:	add	sl, sl, #1
   360b8:	ldr	r3, [sp, #208]	; 0xd0
   360bc:	cmp	r3, sl
   360c0:	beq	3614c <GetDataSlab+0x15140>
   360c4:	ldr	r3, [r6]
   360c8:	add	r3, r3, #1
   360cc:	str	r3, [r6]
   360d0:	add	r9, r9, #4
   360d4:	ldr	r2, [sp, #12]
   360d8:	ldr	r1, [r2, #4]!
   360dc:	str	r2, [sp, #12]
   360e0:	mov	r0, r3
   360e4:	bl	517e8 <__aeabi_idivmod>
   360e8:	cmp	r1, #0
   360ec:	bne	36138 <GetDataSlab+0x1512c>
   360f0:	mov	r3, #0
   360f4:	str	r3, [r6], #4
   360f8:	add	r7, r7, #4
   360fc:	str	r7, [sp, #16]
   36100:	ldr	r4, [r7]
   36104:	mov	r1, r4
   36108:	mov	r0, fp
   3610c:	bl	517e8 <__aeabi_idivmod>
   36110:	subs	r3, r1, #0
   36114:	beq	36094 <GetDataSlab+0x15088>
   36118:	ldr	r2, [r7, #-4]
   3611c:	ldr	r1, [r9]
   36120:	sub	r3, r4, r3
   36124:	mla	r3, r1, r2, r3
   36128:	add	r5, r5, r3, lsl #3
   3612c:	add	fp, fp, r3
   36130:	b	360b4 <GetDataSlab+0x150a8>
   36134:	mov	sl, #1
   36138:	add	r3, sp, #152	; 0x98
   3613c:	add	r3, r3, sl, lsl #2
   36140:	ldr	r3, [r3, #-120]	; 0xffffff88
   36144:	add	fp, fp, r3
   36148:	add	r5, r5, r3, lsl #3
   3614c:	ldr	r3, [sp, #24]
   36150:	ldr	r2, [sp, #8]
   36154:	add	r3, r3, r2
   36158:	str	r3, [sp, #24]
   3615c:	ldr	r2, [sp, #20]
   36160:	cmp	r3, r2
   36164:	bge	36254 <GetDataSlab+0x15248>
   36168:	ldr	r3, [sp, #196]	; 0xc4
   3616c:	ldr	r3, [r3]
   36170:	cmp	r3, #0
   36174:	addne	r5, r5, r3, lsl #3
   36178:	addne	fp, fp, r3
   3617c:	ldr	r3, [sp, #204]	; 0xcc
   36180:	ldr	r3, [r3]
   36184:	str	r3, [sp, #8]
   36188:	cmp	r3, #0
   3618c:	ble	361d4 <GetDataSlab+0x151c8>
   36190:	ldr	r3, [sp, #4]
   36194:	ldr	r2, [sp, #24]
   36198:	add	r2, r3, r2, lsl #1
   3619c:	mov	r3, #0
   361a0:	vldr	d7, [r5]
   361a4:	vcvt.u32.f64	s15, d7
   361a8:	vmov	r1, s15
   361ac:	strh	r1, [r2], #2
   361b0:	ldr	r1, [r8]
   361b4:	add	r5, r5, r1, lsl #3
   361b8:	add	fp, fp, r1
   361bc:	add	r3, r3, #1
   361c0:	ldr	r1, [sp, #204]	; 0xcc
   361c4:	ldr	r1, [r1]
   361c8:	str	r1, [sp, #8]
   361cc:	cmp	r1, r3
   361d0:	bgt	361a0 <GetDataSlab+0x15194>
   361d4:	ldr	r3, [r8]
   361d8:	ldr	r2, [sp, #8]
   361dc:	mul	r3, r3, r2
   361e0:	ldr	r2, [sp, #192]	; 0xc0
   361e4:	ldr	r2, [r2]
   361e8:	sub	r3, r2, r3
   361ec:	ldr	r2, [sp, #196]	; 0xc4
   361f0:	ldr	r2, [r2]
   361f4:	sub	r3, r3, r2
   361f8:	add	fp, fp, r3
   361fc:	add	r5, r5, r3, lsl #3
   36200:	ldr	r3, [sp, #208]	; 0xd0
   36204:	cmp	r3, #1
   36208:	ble	3614c <GetDataSlab+0x15140>
   3620c:	ldr	r3, [sp, #76]	; 0x4c
   36210:	add	r3, r3, #1
   36214:	str	r3, [sp, #76]	; 0x4c
   36218:	ldr	r2, [sp, #204]	; 0xcc
   3621c:	ldr	r1, [r2, #4]
   36220:	mov	r0, r3
   36224:	bl	517e8 <__aeabi_idivmod>
   36228:	cmp	r1, #0
   3622c:	bne	36134 <GetDataSlab+0x15128>
   36230:	add	r6, sp, #76	; 0x4c
   36234:	ldr	r3, [sp, #204]	; 0xcc
   36238:	add	r3, r3, #4
   3623c:	str	r3, [sp, #12]
   36240:	ldr	r3, [sp, #196]	; 0xc4
   36244:	add	r9, r3, #4
   36248:	add	r7, sp, #112	; 0x70
   3624c:	mov	sl, #1
   36250:	b	360f0 <GetDataSlab+0x150e4>
   36254:	mov	r3, #0
   36258:	b	24fa8 <GetDataSlab+0x3f9c>
   3625c:	ldr	r3, [r8]
   36260:	str	r3, [sp, #28]
   36264:	sub	r3, r3, #1
   36268:	str	r3, [sp, #32]
   3626c:	ldr	r3, [sp, #192]	; 0xc0
   36270:	ldr	r3, [r3]
   36274:	str	r3, [sp, #112]	; 0x70
   36278:	ldr	r3, [sp, #204]	; 0xcc
   3627c:	ldr	r3, [r3]
   36280:	str	r3, [sp, #20]
   36284:	ldr	r3, [sp, #208]	; 0xd0
   36288:	cmp	r3, #1
   3628c:	ble	362c0 <GetDataSlab+0x152b4>
   36290:	str	r8, [sp, #16]
   36294:	add	sl, sp, #36	; 0x24
   36298:	ldr	lr, [sp, #192]	; 0xc0
   3629c:	add	r9, sp, #112	; 0x70
   362a0:	ldr	r3, [sp, #204]	; 0xcc
   362a4:	add	r5, r3, #4
   362a8:	ldr	r3, [sp, #196]	; 0xc4
   362ac:	add	r4, r3, #4
   362b0:	str	lr, [sp, #12]
   362b4:	mov	r6, #2
   362b8:	mov	fp, #0
   362bc:	b	41ad4 <GetDataSlab+0x20ac8>
   362c0:	mov	fp, #0
   362c4:	b	41b60 <GetDataSlab+0x20b54>
   362c8:	ldr	r3, [sp, #20]
   362cc:	cmp	r3, #0
   362d0:	ble	3d588 <GetDataSlab+0x1c57c>
   362d4:	mov	r3, #0
   362d8:	str	r3, [sp, #16]
   362dc:	b	363b0 <GetDataSlab+0x153a4>
   362e0:	ldr	r2, [r8]
   362e4:	cmp	r2, #0
   362e8:	beq	36300 <GetDataSlab+0x152f4>
   362ec:	ldr	r3, [sp, #12]
   362f0:	ldr	r3, [r3, #-4]
   362f4:	mul	r3, r3, r2
   362f8:	add	r5, r5, r3, lsl #2
   362fc:	add	fp, fp, r3
   36300:	add	r9, r9, #1
   36304:	ldr	r3, [sp, #208]	; 0xd0
   36308:	cmp	r3, r9
   3630c:	beq	36398 <GetDataSlab+0x1538c>
   36310:	ldr	r3, [r6]
   36314:	add	r3, r3, #1
   36318:	str	r3, [r6]
   3631c:	add	r8, r8, #4
   36320:	ldr	r2, [sp, #8]
   36324:	ldr	r1, [r2, #4]!
   36328:	str	r2, [sp, #8]
   3632c:	mov	r0, r3
   36330:	bl	517e8 <__aeabi_idivmod>
   36334:	cmp	r1, #0
   36338:	bne	36384 <GetDataSlab+0x15378>
   3633c:	mov	r3, #0
   36340:	str	r3, [r6], #4
   36344:	add	r7, r7, #4
   36348:	str	r7, [sp, #12]
   3634c:	ldr	r4, [r7]
   36350:	mov	r1, r4
   36354:	mov	r0, fp
   36358:	bl	517e8 <__aeabi_idivmod>
   3635c:	subs	r3, r1, #0
   36360:	beq	362e0 <GetDataSlab+0x152d4>
   36364:	ldr	r2, [r7, #-4]
   36368:	ldr	r1, [r8]
   3636c:	sub	r3, r4, r3
   36370:	mla	r3, r1, r2, r3
   36374:	add	r5, r5, r3, lsl #2
   36378:	add	fp, fp, r3
   3637c:	b	36300 <GetDataSlab+0x152f4>
   36380:	ldr	r9, [sp, #28]
   36384:	add	r3, sp, #152	; 0x98
   36388:	add	r3, r3, r9, lsl #2
   3638c:	ldr	r3, [r3, #-120]	; 0xffffff88
   36390:	add	fp, fp, r3
   36394:	add	r5, r5, r3, lsl #2
   36398:	ldr	r3, [sp, #16]
   3639c:	add	r3, r3, sl
   363a0:	str	r3, [sp, #16]
   363a4:	ldr	r2, [sp, #20]
   363a8:	cmp	r3, r2
   363ac:	bge	3647c <GetDataSlab+0x15470>
   363b0:	ldr	r3, [sp, #196]	; 0xc4
   363b4:	ldr	r3, [r3]
   363b8:	cmp	r3, #0
   363bc:	addne	r5, r5, r3, lsl #2
   363c0:	addne	fp, fp, r3
   363c4:	ldr	r3, [sp, #204]	; 0xcc
   363c8:	ldr	sl, [r3]
   363cc:	cmp	sl, #0
   363d0:	ble	3640c <GetDataSlab+0x15400>
   363d4:	mov	r1, r5
   363d8:	ldr	r3, [sp, #4]
   363dc:	ldr	r2, [sp, #16]
   363e0:	add	r2, r3, r2, lsl #1
   363e4:	mov	r3, #0
   363e8:	vldmia	r1!, {s15}
   363ec:	vcvt.u32.f32	s15, s15
   363f0:	vmov	r0, s15
   363f4:	strh	r0, [r2], #2
   363f8:	add	r3, r3, #1
   363fc:	ldr	r0, [sp, #204]	; 0xcc
   36400:	ldr	sl, [r0]
   36404:	cmp	sl, r3
   36408:	bgt	363e8 <GetDataSlab+0x153dc>
   3640c:	ldr	r3, [sp, #192]	; 0xc0
   36410:	ldr	r2, [r3]
   36414:	ldr	r3, [sp, #196]	; 0xc4
   36418:	ldr	r3, [r3]
   3641c:	sub	r3, r2, r3
   36420:	add	fp, fp, r3
   36424:	add	r5, r5, r3, lsl #2
   36428:	ldr	r3, [sp, #208]	; 0xd0
   3642c:	cmp	r3, #1
   36430:	ble	36398 <GetDataSlab+0x1538c>
   36434:	ldr	r3, [sp, #76]	; 0x4c
   36438:	add	r3, r3, #1
   3643c:	str	r3, [sp, #76]	; 0x4c
   36440:	ldr	r2, [sp, #204]	; 0xcc
   36444:	ldr	r1, [r2, #4]
   36448:	mov	r0, r3
   3644c:	bl	517e8 <__aeabi_idivmod>
   36450:	cmp	r1, #0
   36454:	bne	36380 <GetDataSlab+0x15374>
   36458:	add	r6, sp, #76	; 0x4c
   3645c:	ldr	r3, [sp, #204]	; 0xcc
   36460:	add	r3, r3, #4
   36464:	str	r3, [sp, #8]
   36468:	ldr	r3, [sp, #196]	; 0xc4
   3646c:	add	r8, r3, #4
   36470:	add	r7, sp, #112	; 0x70
   36474:	ldr	r9, [sp, #28]
   36478:	b	3633c <GetDataSlab+0x15330>
   3647c:	mov	r3, #0
   36480:	b	24fa8 <GetDataSlab+0x3f9c>
   36484:	ldr	r2, [r9]
   36488:	cmp	r2, #0
   3648c:	beq	364a4 <GetDataSlab+0x15498>
   36490:	ldr	r3, [sp, #16]
   36494:	ldr	r3, [r3, #-4]
   36498:	mul	r3, r3, r2
   3649c:	add	r5, r5, r3, lsl #2
   364a0:	add	fp, fp, r3
   364a4:	add	sl, sl, #1
   364a8:	ldr	r3, [sp, #208]	; 0xd0
   364ac:	cmp	r3, sl
   364b0:	beq	3653c <GetDataSlab+0x15530>
   364b4:	ldr	r3, [r6]
   364b8:	add	r3, r3, #1
   364bc:	str	r3, [r6]
   364c0:	add	r9, r9, #4
   364c4:	ldr	r2, [sp, #12]
   364c8:	ldr	r1, [r2, #4]!
   364cc:	str	r2, [sp, #12]
   364d0:	mov	r0, r3
   364d4:	bl	517e8 <__aeabi_idivmod>
   364d8:	cmp	r1, #0
   364dc:	bne	36528 <GetDataSlab+0x1551c>
   364e0:	mov	r3, #0
   364e4:	str	r3, [r6], #4
   364e8:	add	r7, r7, #4
   364ec:	str	r7, [sp, #16]
   364f0:	ldr	r4, [r7]
   364f4:	mov	r1, r4
   364f8:	mov	r0, fp
   364fc:	bl	517e8 <__aeabi_idivmod>
   36500:	subs	r3, r1, #0
   36504:	beq	36484 <GetDataSlab+0x15478>
   36508:	ldr	r2, [r7, #-4]
   3650c:	ldr	r1, [r9]
   36510:	sub	r3, r4, r3
   36514:	mla	r3, r1, r2, r3
   36518:	add	r5, r5, r3, lsl #2
   3651c:	add	fp, fp, r3
   36520:	b	364a4 <GetDataSlab+0x15498>
   36524:	mov	sl, #1
   36528:	add	r3, sp, #152	; 0x98
   3652c:	add	r3, r3, sl, lsl #2
   36530:	ldr	r3, [r3, #-120]	; 0xffffff88
   36534:	add	fp, fp, r3
   36538:	add	r5, r5, r3, lsl #2
   3653c:	ldr	r3, [sp, #24]
   36540:	ldr	r2, [sp, #8]
   36544:	add	r3, r3, r2
   36548:	str	r3, [sp, #24]
   3654c:	ldr	r2, [sp, #20]
   36550:	cmp	r3, r2
   36554:	bge	36644 <GetDataSlab+0x15638>
   36558:	ldr	r3, [sp, #196]	; 0xc4
   3655c:	ldr	r3, [r3]
   36560:	cmp	r3, #0
   36564:	addne	r5, r5, r3, lsl #2
   36568:	addne	fp, fp, r3
   3656c:	ldr	r3, [sp, #204]	; 0xcc
   36570:	ldr	r3, [r3]
   36574:	str	r3, [sp, #8]
   36578:	cmp	r3, #0
   3657c:	ble	365c4 <GetDataSlab+0x155b8>
   36580:	ldr	r3, [sp, #4]
   36584:	ldr	r2, [sp, #24]
   36588:	add	r2, r3, r2, lsl #1
   3658c:	mov	r3, #0
   36590:	vldr	s15, [r5]
   36594:	vcvt.u32.f32	s15, s15
   36598:	vmov	r1, s15
   3659c:	strh	r1, [r2], #2
   365a0:	ldr	r1, [r8]
   365a4:	add	r5, r5, r1, lsl #2
   365a8:	add	fp, fp, r1
   365ac:	add	r3, r3, #1
   365b0:	ldr	r1, [sp, #204]	; 0xcc
   365b4:	ldr	r1, [r1]
   365b8:	str	r1, [sp, #8]
   365bc:	cmp	r1, r3
   365c0:	bgt	36590 <GetDataSlab+0x15584>
   365c4:	ldr	r3, [r8]
   365c8:	ldr	r2, [sp, #8]
   365cc:	mul	r3, r3, r2
   365d0:	ldr	r2, [sp, #192]	; 0xc0
   365d4:	ldr	r2, [r2]
   365d8:	sub	r3, r2, r3
   365dc:	ldr	r2, [sp, #196]	; 0xc4
   365e0:	ldr	r2, [r2]
   365e4:	sub	r3, r3, r2
   365e8:	add	fp, fp, r3
   365ec:	add	r5, r5, r3, lsl #2
   365f0:	ldr	r3, [sp, #208]	; 0xd0
   365f4:	cmp	r3, #1
   365f8:	ble	3653c <GetDataSlab+0x15530>
   365fc:	ldr	r3, [sp, #76]	; 0x4c
   36600:	add	r3, r3, #1
   36604:	str	r3, [sp, #76]	; 0x4c
   36608:	ldr	r2, [sp, #204]	; 0xcc
   3660c:	ldr	r1, [r2, #4]
   36610:	mov	r0, r3
   36614:	bl	517e8 <__aeabi_idivmod>
   36618:	cmp	r1, #0
   3661c:	bne	36524 <GetDataSlab+0x15518>
   36620:	add	r6, sp, #76	; 0x4c
   36624:	ldr	r3, [sp, #204]	; 0xcc
   36628:	add	r3, r3, #4
   3662c:	str	r3, [sp, #12]
   36630:	ldr	r3, [sp, #196]	; 0xc4
   36634:	add	r9, r3, #4
   36638:	add	r7, sp, #112	; 0x70
   3663c:	mov	sl, #1
   36640:	b	364e0 <GetDataSlab+0x154d4>
   36644:	mov	r3, #0
   36648:	b	24fa8 <GetDataSlab+0x3f9c>
   3664c:	ldr	r3, [r8]
   36650:	str	r3, [sp, #28]
   36654:	sub	r3, r3, #1
   36658:	str	r3, [sp, #32]
   3665c:	ldr	r3, [sp, #192]	; 0xc0
   36660:	ldr	r3, [r3]
   36664:	str	r3, [sp, #112]	; 0x70
   36668:	ldr	r3, [sp, #204]	; 0xcc
   3666c:	ldr	r3, [r3]
   36670:	str	r3, [sp, #20]
   36674:	ldr	r3, [sp, #208]	; 0xd0
   36678:	cmp	r3, #1
   3667c:	ble	366b0 <GetDataSlab+0x156a4>
   36680:	str	r8, [sp, #16]
   36684:	add	sl, sp, #36	; 0x24
   36688:	ldr	lr, [sp, #192]	; 0xc0
   3668c:	add	r9, sp, #112	; 0x70
   36690:	ldr	r3, [sp, #204]	; 0xcc
   36694:	add	r5, r3, #4
   36698:	ldr	r3, [sp, #196]	; 0xc4
   3669c:	add	r4, r3, #4
   366a0:	str	lr, [sp, #12]
   366a4:	mov	r6, #2
   366a8:	mov	fp, #0
   366ac:	b	41bc0 <GetDataSlab+0x20bb4>
   366b0:	mov	fp, #0
   366b4:	b	41c4c <GetDataSlab+0x20c40>
   366b8:	ldr	r3, [sp, #20]
   366bc:	cmp	r3, #0
   366c0:	ble	3d590 <GetDataSlab+0x1c584>
   366c4:	mov	r3, #0
   366c8:	str	r3, [sp, #16]
   366cc:	b	367a0 <GetDataSlab+0x15794>
   366d0:	ldr	r2, [r8]
   366d4:	cmp	r2, #0
   366d8:	beq	366f0 <GetDataSlab+0x156e4>
   366dc:	ldr	r3, [sp, #12]
   366e0:	ldr	r3, [r3, #-4]
   366e4:	mul	r3, r3, r2
   366e8:	add	r5, r5, r3, lsl #2
   366ec:	add	fp, fp, r3
   366f0:	add	r9, r9, #1
   366f4:	ldr	r3, [sp, #208]	; 0xd0
   366f8:	cmp	r3, r9
   366fc:	beq	36788 <GetDataSlab+0x1577c>
   36700:	ldr	r3, [r6]
   36704:	add	r3, r3, #1
   36708:	str	r3, [r6]
   3670c:	add	r8, r8, #4
   36710:	ldr	r2, [sp, #8]
   36714:	ldr	r1, [r2, #4]!
   36718:	str	r2, [sp, #8]
   3671c:	mov	r0, r3
   36720:	bl	517e8 <__aeabi_idivmod>
   36724:	cmp	r1, #0
   36728:	bne	36774 <GetDataSlab+0x15768>
   3672c:	mov	r3, #0
   36730:	str	r3, [r6], #4
   36734:	add	r7, r7, #4
   36738:	str	r7, [sp, #12]
   3673c:	ldr	r4, [r7]
   36740:	mov	r1, r4
   36744:	mov	r0, fp
   36748:	bl	517e8 <__aeabi_idivmod>
   3674c:	subs	r3, r1, #0
   36750:	beq	366d0 <GetDataSlab+0x156c4>
   36754:	ldr	r2, [r7, #-4]
   36758:	ldr	r1, [r8]
   3675c:	sub	r3, r4, r3
   36760:	mla	r3, r1, r2, r3
   36764:	add	r5, r5, r3, lsl #2
   36768:	add	fp, fp, r3
   3676c:	b	366f0 <GetDataSlab+0x156e4>
   36770:	ldr	r9, [sp, #28]
   36774:	add	r3, sp, #152	; 0x98
   36778:	add	r3, r3, r9, lsl #2
   3677c:	ldr	r3, [r3, #-120]	; 0xffffff88
   36780:	add	fp, fp, r3
   36784:	add	r5, r5, r3, lsl #2
   36788:	ldr	r3, [sp, #16]
   3678c:	add	r3, r3, sl
   36790:	str	r3, [sp, #16]
   36794:	ldr	r2, [sp, #20]
   36798:	cmp	r3, r2
   3679c:	bge	36864 <GetDataSlab+0x15858>
   367a0:	ldr	r3, [sp, #196]	; 0xc4
   367a4:	ldr	r3, [r3]
   367a8:	cmp	r3, #0
   367ac:	addne	r5, r5, r3, lsl #2
   367b0:	addne	fp, fp, r3
   367b4:	ldr	r3, [sp, #204]	; 0xcc
   367b8:	ldr	sl, [r3]
   367bc:	cmp	sl, #0
   367c0:	ble	367f4 <GetDataSlab+0x157e8>
   367c4:	sub	r0, r5, #4
   367c8:	ldr	r3, [sp, #4]
   367cc:	ldr	r2, [sp, #16]
   367d0:	add	r1, r3, r2, lsl #1
   367d4:	mov	r2, #0
   367d8:	ldr	r3, [r0, #4]!
   367dc:	strh	r3, [r1], #2
   367e0:	add	r2, r2, #1
   367e4:	ldr	r3, [sp, #204]	; 0xcc
   367e8:	ldr	sl, [r3]
   367ec:	cmp	sl, r2
   367f0:	bgt	367d8 <GetDataSlab+0x157cc>
   367f4:	ldr	r3, [sp, #192]	; 0xc0
   367f8:	ldr	r2, [r3]
   367fc:	ldr	r3, [sp, #196]	; 0xc4
   36800:	ldr	r3, [r3]
   36804:	sub	r3, r2, r3
   36808:	add	fp, fp, r3
   3680c:	add	r5, r5, r3, lsl #2
   36810:	ldr	r3, [sp, #208]	; 0xd0
   36814:	cmp	r3, #1
   36818:	ble	36788 <GetDataSlab+0x1577c>
   3681c:	ldr	r3, [sp, #76]	; 0x4c
   36820:	add	r3, r3, #1
   36824:	str	r3, [sp, #76]	; 0x4c
   36828:	ldr	r2, [sp, #204]	; 0xcc
   3682c:	ldr	r1, [r2, #4]
   36830:	mov	r0, r3
   36834:	bl	517e8 <__aeabi_idivmod>
   36838:	cmp	r1, #0
   3683c:	bne	36770 <GetDataSlab+0x15764>
   36840:	add	r6, sp, #76	; 0x4c
   36844:	ldr	r3, [sp, #204]	; 0xcc
   36848:	add	r3, r3, #4
   3684c:	str	r3, [sp, #8]
   36850:	ldr	r3, [sp, #196]	; 0xc4
   36854:	add	r8, r3, #4
   36858:	add	r7, sp, #112	; 0x70
   3685c:	ldr	r9, [sp, #28]
   36860:	b	3672c <GetDataSlab+0x15720>
   36864:	mov	r3, #0
   36868:	b	24fa8 <GetDataSlab+0x3f9c>
   3686c:	ldr	r2, [r9]
   36870:	cmp	r2, #0
   36874:	beq	3688c <GetDataSlab+0x15880>
   36878:	ldr	r3, [sp, #16]
   3687c:	ldr	r3, [r3, #-4]
   36880:	mul	r3, r3, r2
   36884:	add	r5, r5, r3, lsl #2
   36888:	add	fp, fp, r3
   3688c:	add	sl, sl, #1
   36890:	ldr	r3, [sp, #208]	; 0xd0
   36894:	cmp	r3, sl
   36898:	beq	36924 <GetDataSlab+0x15918>
   3689c:	ldr	r3, [r6]
   368a0:	add	r3, r3, #1
   368a4:	str	r3, [r6]
   368a8:	add	r9, r9, #4
   368ac:	ldr	r2, [sp, #12]
   368b0:	ldr	r1, [r2, #4]!
   368b4:	str	r2, [sp, #12]
   368b8:	mov	r0, r3
   368bc:	bl	517e8 <__aeabi_idivmod>
   368c0:	cmp	r1, #0
   368c4:	bne	36910 <GetDataSlab+0x15904>
   368c8:	mov	r3, #0
   368cc:	str	r3, [r6], #4
   368d0:	add	r7, r7, #4
   368d4:	str	r7, [sp, #16]
   368d8:	ldr	r4, [r7]
   368dc:	mov	r1, r4
   368e0:	mov	r0, fp
   368e4:	bl	517e8 <__aeabi_idivmod>
   368e8:	subs	r3, r1, #0
   368ec:	beq	3686c <GetDataSlab+0x15860>
   368f0:	ldr	r2, [r7, #-4]
   368f4:	ldr	r1, [r9]
   368f8:	sub	r3, r4, r3
   368fc:	mla	r3, r1, r2, r3
   36900:	add	r5, r5, r3, lsl #2
   36904:	add	fp, fp, r3
   36908:	b	3688c <GetDataSlab+0x15880>
   3690c:	mov	sl, #1
   36910:	add	r3, sp, #152	; 0x98
   36914:	add	r3, r3, sl, lsl #2
   36918:	ldr	r3, [r3, #-120]	; 0xffffff88
   3691c:	add	fp, fp, r3
   36920:	add	r5, r5, r3, lsl #2
   36924:	ldr	r3, [sp, #24]
   36928:	ldr	r2, [sp, #8]
   3692c:	add	r3, r3, r2
   36930:	str	r3, [sp, #24]
   36934:	ldr	r2, [sp, #20]
   36938:	cmp	r3, r2
   3693c:	bge	36a24 <GetDataSlab+0x15a18>
   36940:	ldr	r3, [sp, #196]	; 0xc4
   36944:	ldr	r3, [r3]
   36948:	cmp	r3, #0
   3694c:	addne	r5, r5, r3, lsl #2
   36950:	addne	fp, fp, r3
   36954:	ldr	r3, [sp, #204]	; 0xcc
   36958:	ldr	r3, [r3]
   3695c:	str	r3, [sp, #8]
   36960:	cmp	r3, #0
   36964:	ble	369a4 <GetDataSlab+0x15998>
   36968:	ldr	r3, [sp, #4]
   3696c:	ldr	r2, [sp, #24]
   36970:	add	r2, r3, r2, lsl #1
   36974:	mov	r3, #0
   36978:	ldr	r1, [r5]
   3697c:	strh	r1, [r2], #2
   36980:	ldr	r1, [r8]
   36984:	add	r5, r5, r1, lsl #2
   36988:	add	fp, fp, r1
   3698c:	add	r3, r3, #1
   36990:	ldr	r1, [sp, #204]	; 0xcc
   36994:	ldr	r1, [r1]
   36998:	str	r1, [sp, #8]
   3699c:	cmp	r1, r3
   369a0:	bgt	36978 <GetDataSlab+0x1596c>
   369a4:	ldr	r3, [r8]
   369a8:	ldr	r2, [sp, #8]
   369ac:	mul	r3, r3, r2
   369b0:	ldr	r2, [sp, #192]	; 0xc0
   369b4:	ldr	r2, [r2]
   369b8:	sub	r3, r2, r3
   369bc:	ldr	r2, [sp, #196]	; 0xc4
   369c0:	ldr	r2, [r2]
   369c4:	sub	r3, r3, r2
   369c8:	add	fp, fp, r3
   369cc:	add	r5, r5, r3, lsl #2
   369d0:	ldr	r3, [sp, #208]	; 0xd0
   369d4:	cmp	r3, #1
   369d8:	ble	36924 <GetDataSlab+0x15918>
   369dc:	ldr	r3, [sp, #76]	; 0x4c
   369e0:	add	r3, r3, #1
   369e4:	str	r3, [sp, #76]	; 0x4c
   369e8:	ldr	r2, [sp, #204]	; 0xcc
   369ec:	ldr	r1, [r2, #4]
   369f0:	mov	r0, r3
   369f4:	bl	517e8 <__aeabi_idivmod>
   369f8:	cmp	r1, #0
   369fc:	bne	3690c <GetDataSlab+0x15900>
   36a00:	add	r6, sp, #76	; 0x4c
   36a04:	ldr	r3, [sp, #204]	; 0xcc
   36a08:	add	r3, r3, #4
   36a0c:	str	r3, [sp, #12]
   36a10:	ldr	r3, [sp, #196]	; 0xc4
   36a14:	add	r9, r3, #4
   36a18:	add	r7, sp, #112	; 0x70
   36a1c:	mov	sl, #1
   36a20:	b	368c8 <GetDataSlab+0x158bc>
   36a24:	mov	r3, #0
   36a28:	b	24fa8 <GetDataSlab+0x3f9c>
   36a2c:	ldr	r3, [r8]
   36a30:	str	r3, [sp, #28]
   36a34:	sub	r3, r3, #1
   36a38:	str	r3, [sp, #32]
   36a3c:	ldr	r3, [sp, #192]	; 0xc0
   36a40:	ldr	r3, [r3]
   36a44:	str	r3, [sp, #112]	; 0x70
   36a48:	ldr	r3, [sp, #204]	; 0xcc
   36a4c:	ldr	r3, [r3]
   36a50:	str	r3, [sp, #20]
   36a54:	ldr	r3, [sp, #208]	; 0xd0
   36a58:	cmp	r3, #1
   36a5c:	ble	36a90 <GetDataSlab+0x15a84>
   36a60:	str	r8, [sp, #16]
   36a64:	add	sl, sp, #36	; 0x24
   36a68:	ldr	lr, [sp, #192]	; 0xc0
   36a6c:	add	r9, sp, #112	; 0x70
   36a70:	ldr	r3, [sp, #204]	; 0xcc
   36a74:	add	r5, r3, #4
   36a78:	ldr	r3, [sp, #196]	; 0xc4
   36a7c:	add	r4, r3, #4
   36a80:	str	lr, [sp, #12]
   36a84:	mov	r6, #2
   36a88:	mov	fp, #0
   36a8c:	b	41cac <GetDataSlab+0x20ca0>
   36a90:	mov	fp, #0
   36a94:	b	41d38 <GetDataSlab+0x20d2c>
   36a98:	ldr	r3, [sp, #20]
   36a9c:	cmp	r3, #0
   36aa0:	ble	3d598 <GetDataSlab+0x1c58c>
   36aa4:	mov	r3, #0
   36aa8:	str	r3, [sp, #16]
   36aac:	b	36b80 <GetDataSlab+0x15b74>
   36ab0:	ldr	r2, [r8]
   36ab4:	cmp	r2, #0
   36ab8:	beq	36ad0 <GetDataSlab+0x15ac4>
   36abc:	ldr	r3, [sp, #12]
   36ac0:	ldr	r3, [r3, #-4]
   36ac4:	mul	r3, r3, r2
   36ac8:	add	r5, r5, r3, lsl #2
   36acc:	add	fp, fp, r3
   36ad0:	add	r9, r9, #1
   36ad4:	ldr	r3, [sp, #208]	; 0xd0
   36ad8:	cmp	r3, r9
   36adc:	beq	36b68 <GetDataSlab+0x15b5c>
   36ae0:	ldr	r3, [r6]
   36ae4:	add	r3, r3, #1
   36ae8:	str	r3, [r6]
   36aec:	add	r8, r8, #4
   36af0:	ldr	r2, [sp, #8]
   36af4:	ldr	r1, [r2, #4]!
   36af8:	str	r2, [sp, #8]
   36afc:	mov	r0, r3
   36b00:	bl	517e8 <__aeabi_idivmod>
   36b04:	cmp	r1, #0
   36b08:	bne	36b54 <GetDataSlab+0x15b48>
   36b0c:	mov	r3, #0
   36b10:	str	r3, [r6], #4
   36b14:	add	r7, r7, #4
   36b18:	str	r7, [sp, #12]
   36b1c:	ldr	r4, [r7]
   36b20:	mov	r1, r4
   36b24:	mov	r0, fp
   36b28:	bl	517e8 <__aeabi_idivmod>
   36b2c:	subs	r3, r1, #0
   36b30:	beq	36ab0 <GetDataSlab+0x15aa4>
   36b34:	ldr	r2, [r7, #-4]
   36b38:	ldr	r1, [r8]
   36b3c:	sub	r3, r4, r3
   36b40:	mla	r3, r1, r2, r3
   36b44:	add	r5, r5, r3, lsl #2
   36b48:	add	fp, fp, r3
   36b4c:	b	36ad0 <GetDataSlab+0x15ac4>
   36b50:	ldr	r9, [sp, #28]
   36b54:	add	r3, sp, #152	; 0x98
   36b58:	add	r3, r3, r9, lsl #2
   36b5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   36b60:	add	fp, fp, r3
   36b64:	add	r5, r5, r3, lsl #2
   36b68:	ldr	r3, [sp, #16]
   36b6c:	add	r3, r3, sl
   36b70:	str	r3, [sp, #16]
   36b74:	ldr	r2, [sp, #20]
   36b78:	cmp	r3, r2
   36b7c:	bge	36c44 <GetDataSlab+0x15c38>
   36b80:	ldr	r3, [sp, #196]	; 0xc4
   36b84:	ldr	r3, [r3]
   36b88:	cmp	r3, #0
   36b8c:	addne	r5, r5, r3, lsl #2
   36b90:	addne	fp, fp, r3
   36b94:	ldr	r3, [sp, #204]	; 0xcc
   36b98:	ldr	sl, [r3]
   36b9c:	cmp	sl, #0
   36ba0:	ble	36bd4 <GetDataSlab+0x15bc8>
   36ba4:	sub	r0, r5, #4
   36ba8:	ldr	r3, [sp, #4]
   36bac:	ldr	r2, [sp, #16]
   36bb0:	add	r1, r3, r2, lsl #1
   36bb4:	mov	r2, #0
   36bb8:	ldr	r3, [r0, #4]!
   36bbc:	strh	r3, [r1], #2
   36bc0:	add	r2, r2, #1
   36bc4:	ldr	r3, [sp, #204]	; 0xcc
   36bc8:	ldr	sl, [r3]
   36bcc:	cmp	sl, r2
   36bd0:	bgt	36bb8 <GetDataSlab+0x15bac>
   36bd4:	ldr	r3, [sp, #192]	; 0xc0
   36bd8:	ldr	r2, [r3]
   36bdc:	ldr	r3, [sp, #196]	; 0xc4
   36be0:	ldr	r3, [r3]
   36be4:	sub	r3, r2, r3
   36be8:	add	fp, fp, r3
   36bec:	add	r5, r5, r3, lsl #2
   36bf0:	ldr	r3, [sp, #208]	; 0xd0
   36bf4:	cmp	r3, #1
   36bf8:	ble	36b68 <GetDataSlab+0x15b5c>
   36bfc:	ldr	r3, [sp, #76]	; 0x4c
   36c00:	add	r3, r3, #1
   36c04:	str	r3, [sp, #76]	; 0x4c
   36c08:	ldr	r2, [sp, #204]	; 0xcc
   36c0c:	ldr	r1, [r2, #4]
   36c10:	mov	r0, r3
   36c14:	bl	517e8 <__aeabi_idivmod>
   36c18:	cmp	r1, #0
   36c1c:	bne	36b50 <GetDataSlab+0x15b44>
   36c20:	add	r6, sp, #76	; 0x4c
   36c24:	ldr	r3, [sp, #204]	; 0xcc
   36c28:	add	r3, r3, #4
   36c2c:	str	r3, [sp, #8]
   36c30:	ldr	r3, [sp, #196]	; 0xc4
   36c34:	add	r8, r3, #4
   36c38:	add	r7, sp, #112	; 0x70
   36c3c:	ldr	r9, [sp, #28]
   36c40:	b	36b0c <GetDataSlab+0x15b00>
   36c44:	mov	r3, #0
   36c48:	b	24fa8 <GetDataSlab+0x3f9c>
   36c4c:	ldr	r2, [r9]
   36c50:	cmp	r2, #0
   36c54:	beq	36c6c <GetDataSlab+0x15c60>
   36c58:	ldr	r3, [sp, #16]
   36c5c:	ldr	r3, [r3, #-4]
   36c60:	mul	r3, r3, r2
   36c64:	add	r5, r5, r3, lsl #2
   36c68:	add	fp, fp, r3
   36c6c:	add	sl, sl, #1
   36c70:	ldr	r3, [sp, #208]	; 0xd0
   36c74:	cmp	r3, sl
   36c78:	beq	36d04 <GetDataSlab+0x15cf8>
   36c7c:	ldr	r3, [r6]
   36c80:	add	r3, r3, #1
   36c84:	str	r3, [r6]
   36c88:	add	r9, r9, #4
   36c8c:	ldr	r2, [sp, #12]
   36c90:	ldr	r1, [r2, #4]!
   36c94:	str	r2, [sp, #12]
   36c98:	mov	r0, r3
   36c9c:	bl	517e8 <__aeabi_idivmod>
   36ca0:	cmp	r1, #0
   36ca4:	bne	36cf0 <GetDataSlab+0x15ce4>
   36ca8:	mov	r3, #0
   36cac:	str	r3, [r6], #4
   36cb0:	add	r7, r7, #4
   36cb4:	str	r7, [sp, #16]
   36cb8:	ldr	r4, [r7]
   36cbc:	mov	r1, r4
   36cc0:	mov	r0, fp
   36cc4:	bl	517e8 <__aeabi_idivmod>
   36cc8:	subs	r3, r1, #0
   36ccc:	beq	36c4c <GetDataSlab+0x15c40>
   36cd0:	ldr	r2, [r7, #-4]
   36cd4:	ldr	r1, [r9]
   36cd8:	sub	r3, r4, r3
   36cdc:	mla	r3, r1, r2, r3
   36ce0:	add	r5, r5, r3, lsl #2
   36ce4:	add	fp, fp, r3
   36ce8:	b	36c6c <GetDataSlab+0x15c60>
   36cec:	mov	sl, #1
   36cf0:	add	r3, sp, #152	; 0x98
   36cf4:	add	r3, r3, sl, lsl #2
   36cf8:	ldr	r3, [r3, #-120]	; 0xffffff88
   36cfc:	add	fp, fp, r3
   36d00:	add	r5, r5, r3, lsl #2
   36d04:	ldr	r3, [sp, #24]
   36d08:	ldr	r2, [sp, #8]
   36d0c:	add	r3, r3, r2
   36d10:	str	r3, [sp, #24]
   36d14:	ldr	r2, [sp, #20]
   36d18:	cmp	r3, r2
   36d1c:	bge	36e04 <GetDataSlab+0x15df8>
   36d20:	ldr	r3, [sp, #196]	; 0xc4
   36d24:	ldr	r3, [r3]
   36d28:	cmp	r3, #0
   36d2c:	addne	r5, r5, r3, lsl #2
   36d30:	addne	fp, fp, r3
   36d34:	ldr	r3, [sp, #204]	; 0xcc
   36d38:	ldr	r3, [r3]
   36d3c:	str	r3, [sp, #8]
   36d40:	cmp	r3, #0
   36d44:	ble	36d84 <GetDataSlab+0x15d78>
   36d48:	ldr	r3, [sp, #4]
   36d4c:	ldr	r2, [sp, #24]
   36d50:	add	r2, r3, r2, lsl #1
   36d54:	mov	r3, #0
   36d58:	ldr	r1, [r5]
   36d5c:	strh	r1, [r2], #2
   36d60:	ldr	r1, [r8]
   36d64:	add	r5, r5, r1, lsl #2
   36d68:	add	fp, fp, r1
   36d6c:	add	r3, r3, #1
   36d70:	ldr	r1, [sp, #204]	; 0xcc
   36d74:	ldr	r1, [r1]
   36d78:	str	r1, [sp, #8]
   36d7c:	cmp	r1, r3
   36d80:	bgt	36d58 <GetDataSlab+0x15d4c>
   36d84:	ldr	r3, [r8]
   36d88:	ldr	r2, [sp, #8]
   36d8c:	mul	r3, r3, r2
   36d90:	ldr	r2, [sp, #192]	; 0xc0
   36d94:	ldr	r2, [r2]
   36d98:	sub	r3, r2, r3
   36d9c:	ldr	r2, [sp, #196]	; 0xc4
   36da0:	ldr	r2, [r2]
   36da4:	sub	r3, r3, r2
   36da8:	add	fp, fp, r3
   36dac:	add	r5, r5, r3, lsl #2
   36db0:	ldr	r3, [sp, #208]	; 0xd0
   36db4:	cmp	r3, #1
   36db8:	ble	36d04 <GetDataSlab+0x15cf8>
   36dbc:	ldr	r3, [sp, #76]	; 0x4c
   36dc0:	add	r3, r3, #1
   36dc4:	str	r3, [sp, #76]	; 0x4c
   36dc8:	ldr	r2, [sp, #204]	; 0xcc
   36dcc:	ldr	r1, [r2, #4]
   36dd0:	mov	r0, r3
   36dd4:	bl	517e8 <__aeabi_idivmod>
   36dd8:	cmp	r1, #0
   36ddc:	bne	36cec <GetDataSlab+0x15ce0>
   36de0:	add	r6, sp, #76	; 0x4c
   36de4:	ldr	r3, [sp, #204]	; 0xcc
   36de8:	add	r3, r3, #4
   36dec:	str	r3, [sp, #12]
   36df0:	ldr	r3, [sp, #196]	; 0xc4
   36df4:	add	r9, r3, #4
   36df8:	add	r7, sp, #112	; 0x70
   36dfc:	mov	sl, #1
   36e00:	b	36ca8 <GetDataSlab+0x15c9c>
   36e04:	mov	r3, #0
   36e08:	b	24fa8 <GetDataSlab+0x3f9c>
   36e0c:	ldr	r3, [r8]
   36e10:	str	r3, [sp, #28]
   36e14:	sub	r3, r3, #1
   36e18:	str	r3, [sp, #32]
   36e1c:	ldr	r3, [sp, #192]	; 0xc0
   36e20:	ldr	r3, [r3]
   36e24:	str	r3, [sp, #112]	; 0x70
   36e28:	ldr	r3, [sp, #204]	; 0xcc
   36e2c:	ldr	r3, [r3]
   36e30:	str	r3, [sp, #20]
   36e34:	ldr	r3, [sp, #208]	; 0xd0
   36e38:	cmp	r3, #1
   36e3c:	ble	36e70 <GetDataSlab+0x15e64>
   36e40:	str	r8, [sp, #16]
   36e44:	add	sl, sp, #36	; 0x24
   36e48:	ldr	lr, [sp, #192]	; 0xc0
   36e4c:	add	r9, sp, #112	; 0x70
   36e50:	ldr	r3, [sp, #204]	; 0xcc
   36e54:	add	r5, r3, #4
   36e58:	ldr	r3, [sp, #196]	; 0xc4
   36e5c:	add	r4, r3, #4
   36e60:	str	lr, [sp, #12]
   36e64:	mov	r6, #2
   36e68:	mov	fp, #0
   36e6c:	b	41d98 <GetDataSlab+0x20d8c>
   36e70:	mov	fp, #0
   36e74:	b	41e24 <GetDataSlab+0x20e18>
   36e78:	ldr	r3, [sp, #20]
   36e7c:	cmp	r3, #0
   36e80:	ble	3d5a0 <GetDataSlab+0x1c594>
   36e84:	mov	r3, #0
   36e88:	str	r3, [sp, #16]
   36e8c:	b	36f60 <GetDataSlab+0x15f54>
   36e90:	ldr	r2, [r8]
   36e94:	cmp	r2, #0
   36e98:	beq	36eb0 <GetDataSlab+0x15ea4>
   36e9c:	ldr	r3, [sp, #12]
   36ea0:	ldr	r3, [r3, #-4]
   36ea4:	mul	r3, r3, r2
   36ea8:	add	r6, r6, r3, lsl #1
   36eac:	add	fp, fp, r3
   36eb0:	add	r9, r9, #1
   36eb4:	ldr	r3, [sp, #208]	; 0xd0
   36eb8:	cmp	r3, r9
   36ebc:	beq	36f48 <GetDataSlab+0x15f3c>
   36ec0:	ldr	r3, [r5]
   36ec4:	add	r3, r3, #1
   36ec8:	str	r3, [r5]
   36ecc:	add	r8, r8, #4
   36ed0:	ldr	r2, [sp, #8]
   36ed4:	ldr	r1, [r2, #4]!
   36ed8:	str	r2, [sp, #8]
   36edc:	mov	r0, r3
   36ee0:	bl	517e8 <__aeabi_idivmod>
   36ee4:	cmp	r1, #0
   36ee8:	bne	36f34 <GetDataSlab+0x15f28>
   36eec:	mov	r3, #0
   36ef0:	str	r3, [r5], #4
   36ef4:	add	r7, r7, #4
   36ef8:	str	r7, [sp, #12]
   36efc:	ldr	r4, [r7]
   36f00:	mov	r1, r4
   36f04:	mov	r0, fp
   36f08:	bl	517e8 <__aeabi_idivmod>
   36f0c:	subs	r3, r1, #0
   36f10:	beq	36e90 <GetDataSlab+0x15e84>
   36f14:	ldr	r2, [r7, #-4]
   36f18:	ldr	r1, [r8]
   36f1c:	sub	r3, r4, r3
   36f20:	mla	r3, r1, r2, r3
   36f24:	add	r6, r6, r3, lsl #1
   36f28:	add	fp, fp, r3
   36f2c:	b	36eb0 <GetDataSlab+0x15ea4>
   36f30:	ldr	r9, [sp, #28]
   36f34:	add	r3, sp, #152	; 0x98
   36f38:	add	r3, r3, r9, lsl #2
   36f3c:	ldr	r3, [r3, #-120]	; 0xffffff88
   36f40:	add	fp, fp, r3
   36f44:	add	r6, r6, r3, lsl #1
   36f48:	ldr	r3, [sp, #16]
   36f4c:	add	r3, r3, sl
   36f50:	str	r3, [sp, #16]
   36f54:	ldr	r2, [sp, #20]
   36f58:	cmp	r3, r2
   36f5c:	bge	37024 <GetDataSlab+0x16018>
   36f60:	ldr	r3, [sp, #196]	; 0xc4
   36f64:	ldr	r3, [r3]
   36f68:	cmp	r3, #0
   36f6c:	addne	r6, r6, r3, lsl #1
   36f70:	addne	fp, fp, r3
   36f74:	ldr	r3, [sp, #204]	; 0xcc
   36f78:	ldr	sl, [r3]
   36f7c:	cmp	sl, #0
   36f80:	ble	36fb4 <GetDataSlab+0x15fa8>
   36f84:	sub	r0, r6, #2
   36f88:	ldr	r3, [sp, #4]
   36f8c:	ldr	r2, [sp, #16]
   36f90:	add	r1, r3, r2, lsl #1
   36f94:	mov	r2, #0
   36f98:	ldrh	r3, [r0, #2]!
   36f9c:	strh	r3, [r1], #2
   36fa0:	add	r2, r2, #1
   36fa4:	ldr	r3, [sp, #204]	; 0xcc
   36fa8:	ldr	sl, [r3]
   36fac:	cmp	sl, r2
   36fb0:	bgt	36f98 <GetDataSlab+0x15f8c>
   36fb4:	ldr	r3, [sp, #192]	; 0xc0
   36fb8:	ldr	r2, [r3]
   36fbc:	ldr	r3, [sp, #196]	; 0xc4
   36fc0:	ldr	r3, [r3]
   36fc4:	sub	r3, r2, r3
   36fc8:	add	fp, fp, r3
   36fcc:	add	r6, r6, r3, lsl #1
   36fd0:	ldr	r3, [sp, #208]	; 0xd0
   36fd4:	cmp	r3, #1
   36fd8:	ble	36f48 <GetDataSlab+0x15f3c>
   36fdc:	ldr	r3, [sp, #76]	; 0x4c
   36fe0:	add	r3, r3, #1
   36fe4:	str	r3, [sp, #76]	; 0x4c
   36fe8:	ldr	r2, [sp, #204]	; 0xcc
   36fec:	ldr	r1, [r2, #4]
   36ff0:	mov	r0, r3
   36ff4:	bl	517e8 <__aeabi_idivmod>
   36ff8:	cmp	r1, #0
   36ffc:	bne	36f30 <GetDataSlab+0x15f24>
   37000:	add	r5, sp, #76	; 0x4c
   37004:	ldr	r3, [sp, #204]	; 0xcc
   37008:	add	r3, r3, #4
   3700c:	str	r3, [sp, #8]
   37010:	ldr	r3, [sp, #196]	; 0xc4
   37014:	add	r8, r3, #4
   37018:	add	r7, sp, #112	; 0x70
   3701c:	ldr	r9, [sp, #28]
   37020:	b	36eec <GetDataSlab+0x15ee0>
   37024:	mov	r3, #0
   37028:	b	24fa8 <GetDataSlab+0x3f9c>
   3702c:	ldr	r2, [r9]
   37030:	cmp	r2, #0
   37034:	beq	3704c <GetDataSlab+0x16040>
   37038:	ldr	r3, [sp, #16]
   3703c:	ldr	r3, [r3, #-4]
   37040:	mul	r3, r3, r2
   37044:	add	r6, r6, r3, lsl #1
   37048:	add	fp, fp, r3
   3704c:	add	sl, sl, #1
   37050:	ldr	r3, [sp, #208]	; 0xd0
   37054:	cmp	r3, sl
   37058:	beq	370e4 <GetDataSlab+0x160d8>
   3705c:	ldr	r3, [r5]
   37060:	add	r3, r3, #1
   37064:	str	r3, [r5]
   37068:	add	r9, r9, #4
   3706c:	ldr	r2, [sp, #12]
   37070:	ldr	r1, [r2, #4]!
   37074:	str	r2, [sp, #12]
   37078:	mov	r0, r3
   3707c:	bl	517e8 <__aeabi_idivmod>
   37080:	cmp	r1, #0
   37084:	bne	370d0 <GetDataSlab+0x160c4>
   37088:	mov	r3, #0
   3708c:	str	r3, [r5], #4
   37090:	add	r7, r7, #4
   37094:	str	r7, [sp, #16]
   37098:	ldr	r4, [r7]
   3709c:	mov	r1, r4
   370a0:	mov	r0, fp
   370a4:	bl	517e8 <__aeabi_idivmod>
   370a8:	subs	r3, r1, #0
   370ac:	beq	3702c <GetDataSlab+0x16020>
   370b0:	ldr	r2, [r7, #-4]
   370b4:	ldr	r1, [r9]
   370b8:	sub	r3, r4, r3
   370bc:	mla	r3, r1, r2, r3
   370c0:	add	r6, r6, r3, lsl #1
   370c4:	add	fp, fp, r3
   370c8:	b	3704c <GetDataSlab+0x16040>
   370cc:	mov	sl, #1
   370d0:	add	r3, sp, #152	; 0x98
   370d4:	add	r3, r3, sl, lsl #2
   370d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   370dc:	add	fp, fp, r3
   370e0:	add	r6, r6, r3, lsl #1
   370e4:	ldr	r3, [sp, #24]
   370e8:	ldr	r2, [sp, #8]
   370ec:	add	r3, r3, r2
   370f0:	str	r3, [sp, #24]
   370f4:	ldr	r2, [sp, #20]
   370f8:	cmp	r3, r2
   370fc:	bge	371e4 <GetDataSlab+0x161d8>
   37100:	ldr	r3, [sp, #196]	; 0xc4
   37104:	ldr	r3, [r3]
   37108:	cmp	r3, #0
   3710c:	addne	r6, r6, r3, lsl #1
   37110:	addne	fp, fp, r3
   37114:	ldr	r3, [sp, #204]	; 0xcc
   37118:	ldr	r3, [r3]
   3711c:	str	r3, [sp, #8]
   37120:	cmp	r3, #0
   37124:	ble	37164 <GetDataSlab+0x16158>
   37128:	ldr	r3, [sp, #4]
   3712c:	ldr	r2, [sp, #24]
   37130:	add	r2, r3, r2, lsl #1
   37134:	mov	r3, #0
   37138:	ldrh	r1, [r6]
   3713c:	strh	r1, [r2], #2
   37140:	ldr	r1, [r8]
   37144:	add	r6, r6, r1, lsl #1
   37148:	add	fp, fp, r1
   3714c:	add	r3, r3, #1
   37150:	ldr	r1, [sp, #204]	; 0xcc
   37154:	ldr	r1, [r1]
   37158:	str	r1, [sp, #8]
   3715c:	cmp	r1, r3
   37160:	bgt	37138 <GetDataSlab+0x1612c>
   37164:	ldr	r3, [r8]
   37168:	ldr	r2, [sp, #8]
   3716c:	mul	r3, r3, r2
   37170:	ldr	r2, [sp, #192]	; 0xc0
   37174:	ldr	r2, [r2]
   37178:	sub	r3, r2, r3
   3717c:	ldr	r2, [sp, #196]	; 0xc4
   37180:	ldr	r2, [r2]
   37184:	sub	r3, r3, r2
   37188:	add	fp, fp, r3
   3718c:	add	r6, r6, r3, lsl #1
   37190:	ldr	r3, [sp, #208]	; 0xd0
   37194:	cmp	r3, #1
   37198:	ble	370e4 <GetDataSlab+0x160d8>
   3719c:	ldr	r3, [sp, #76]	; 0x4c
   371a0:	add	r3, r3, #1
   371a4:	str	r3, [sp, #76]	; 0x4c
   371a8:	ldr	r2, [sp, #204]	; 0xcc
   371ac:	ldr	r1, [r2, #4]
   371b0:	mov	r0, r3
   371b4:	bl	517e8 <__aeabi_idivmod>
   371b8:	cmp	r1, #0
   371bc:	bne	370cc <GetDataSlab+0x160c0>
   371c0:	add	r5, sp, #76	; 0x4c
   371c4:	ldr	r3, [sp, #204]	; 0xcc
   371c8:	add	r3, r3, #4
   371cc:	str	r3, [sp, #12]
   371d0:	ldr	r3, [sp, #196]	; 0xc4
   371d4:	add	r9, r3, #4
   371d8:	add	r7, sp, #112	; 0x70
   371dc:	mov	sl, #1
   371e0:	b	37088 <GetDataSlab+0x1607c>
   371e4:	mov	r3, #0
   371e8:	b	24fa8 <GetDataSlab+0x3f9c>
   371ec:	ldr	r3, [r8]
   371f0:	str	r3, [sp, #28]
   371f4:	sub	r3, r3, #1
   371f8:	str	r3, [sp, #32]
   371fc:	ldr	r3, [sp, #192]	; 0xc0
   37200:	ldr	r3, [r3]
   37204:	str	r3, [sp, #112]	; 0x70
   37208:	ldr	r3, [sp, #204]	; 0xcc
   3720c:	ldr	r3, [r3]
   37210:	str	r3, [sp, #20]
   37214:	ldr	r3, [sp, #208]	; 0xd0
   37218:	cmp	r3, #1
   3721c:	ble	37250 <GetDataSlab+0x16244>
   37220:	str	r8, [sp, #16]
   37224:	add	sl, sp, #36	; 0x24
   37228:	ldr	lr, [sp, #192]	; 0xc0
   3722c:	add	r9, sp, #112	; 0x70
   37230:	ldr	r3, [sp, #204]	; 0xcc
   37234:	add	r5, r3, #4
   37238:	ldr	r3, [sp, #196]	; 0xc4
   3723c:	add	r4, r3, #4
   37240:	str	lr, [sp, #12]
   37244:	mov	r6, #2
   37248:	mov	fp, #0
   3724c:	b	41e84 <GetDataSlab+0x20e78>
   37250:	mov	fp, #0
   37254:	b	41f10 <GetDataSlab+0x20f04>
   37258:	ldr	r3, [sp, #20]
   3725c:	cmp	r3, #0
   37260:	ble	3d5a8 <GetDataSlab+0x1c59c>
   37264:	mov	r3, #0
   37268:	str	r3, [sp, #16]
   3726c:	b	37340 <GetDataSlab+0x16334>
   37270:	ldr	r2, [r8]
   37274:	cmp	r2, #0
   37278:	beq	37290 <GetDataSlab+0x16284>
   3727c:	ldr	r3, [sp, #12]
   37280:	ldr	r3, [r3, #-4]
   37284:	mul	r3, r3, r2
   37288:	add	r6, r6, r3, lsl #1
   3728c:	add	fp, fp, r3
   37290:	add	r9, r9, #1
   37294:	ldr	r3, [sp, #208]	; 0xd0
   37298:	cmp	r3, r9
   3729c:	beq	37328 <GetDataSlab+0x1631c>
   372a0:	ldr	r3, [r5]
   372a4:	add	r3, r3, #1
   372a8:	str	r3, [r5]
   372ac:	add	r8, r8, #4
   372b0:	ldr	r2, [sp, #8]
   372b4:	ldr	r1, [r2, #4]!
   372b8:	str	r2, [sp, #8]
   372bc:	mov	r0, r3
   372c0:	bl	517e8 <__aeabi_idivmod>
   372c4:	cmp	r1, #0
   372c8:	bne	37314 <GetDataSlab+0x16308>
   372cc:	mov	r3, #0
   372d0:	str	r3, [r5], #4
   372d4:	add	r7, r7, #4
   372d8:	str	r7, [sp, #12]
   372dc:	ldr	r4, [r7]
   372e0:	mov	r1, r4
   372e4:	mov	r0, fp
   372e8:	bl	517e8 <__aeabi_idivmod>
   372ec:	subs	r3, r1, #0
   372f0:	beq	37270 <GetDataSlab+0x16264>
   372f4:	ldr	r2, [r7, #-4]
   372f8:	ldr	r1, [r8]
   372fc:	sub	r3, r4, r3
   37300:	mla	r3, r1, r2, r3
   37304:	add	r6, r6, r3, lsl #1
   37308:	add	fp, fp, r3
   3730c:	b	37290 <GetDataSlab+0x16284>
   37310:	ldr	r9, [sp, #28]
   37314:	add	r3, sp, #152	; 0x98
   37318:	add	r3, r3, r9, lsl #2
   3731c:	ldr	r3, [r3, #-120]	; 0xffffff88
   37320:	add	fp, fp, r3
   37324:	add	r6, r6, r3, lsl #1
   37328:	ldr	r3, [sp, #16]
   3732c:	add	r3, r3, sl
   37330:	str	r3, [sp, #16]
   37334:	ldr	r2, [sp, #20]
   37338:	cmp	r3, r2
   3733c:	bge	37404 <GetDataSlab+0x163f8>
   37340:	ldr	r3, [sp, #196]	; 0xc4
   37344:	ldr	r3, [r3]
   37348:	cmp	r3, #0
   3734c:	addne	r6, r6, r3, lsl #1
   37350:	addne	fp, fp, r3
   37354:	ldr	r3, [sp, #204]	; 0xcc
   37358:	ldr	sl, [r3]
   3735c:	cmp	sl, #0
   37360:	ble	37394 <GetDataSlab+0x16388>
   37364:	sub	r0, r6, #2
   37368:	ldr	r3, [sp, #4]
   3736c:	ldr	r2, [sp, #16]
   37370:	add	r1, r3, r2, lsl #1
   37374:	mov	r2, #0
   37378:	ldrh	r3, [r0, #2]!
   3737c:	strh	r3, [r1], #2
   37380:	add	r2, r2, #1
   37384:	ldr	r3, [sp, #204]	; 0xcc
   37388:	ldr	sl, [r3]
   3738c:	cmp	sl, r2
   37390:	bgt	37378 <GetDataSlab+0x1636c>
   37394:	ldr	r3, [sp, #192]	; 0xc0
   37398:	ldr	r2, [r3]
   3739c:	ldr	r3, [sp, #196]	; 0xc4
   373a0:	ldr	r3, [r3]
   373a4:	sub	r3, r2, r3
   373a8:	add	fp, fp, r3
   373ac:	add	r6, r6, r3, lsl #1
   373b0:	ldr	r3, [sp, #208]	; 0xd0
   373b4:	cmp	r3, #1
   373b8:	ble	37328 <GetDataSlab+0x1631c>
   373bc:	ldr	r3, [sp, #76]	; 0x4c
   373c0:	add	r3, r3, #1
   373c4:	str	r3, [sp, #76]	; 0x4c
   373c8:	ldr	r2, [sp, #204]	; 0xcc
   373cc:	ldr	r1, [r2, #4]
   373d0:	mov	r0, r3
   373d4:	bl	517e8 <__aeabi_idivmod>
   373d8:	cmp	r1, #0
   373dc:	bne	37310 <GetDataSlab+0x16304>
   373e0:	add	r5, sp, #76	; 0x4c
   373e4:	ldr	r3, [sp, #204]	; 0xcc
   373e8:	add	r3, r3, #4
   373ec:	str	r3, [sp, #8]
   373f0:	ldr	r3, [sp, #196]	; 0xc4
   373f4:	add	r8, r3, #4
   373f8:	add	r7, sp, #112	; 0x70
   373fc:	ldr	r9, [sp, #28]
   37400:	b	372cc <GetDataSlab+0x162c0>
   37404:	mov	r3, #0
   37408:	b	24fa8 <GetDataSlab+0x3f9c>
   3740c:	ldr	r2, [r9]
   37410:	cmp	r2, #0
   37414:	beq	3742c <GetDataSlab+0x16420>
   37418:	ldr	r3, [sp, #16]
   3741c:	ldr	r3, [r3, #-4]
   37420:	mul	r3, r3, r2
   37424:	add	r6, r6, r3, lsl #1
   37428:	add	fp, fp, r3
   3742c:	add	sl, sl, #1
   37430:	ldr	r3, [sp, #208]	; 0xd0
   37434:	cmp	r3, sl
   37438:	beq	374c4 <GetDataSlab+0x164b8>
   3743c:	ldr	r3, [r5]
   37440:	add	r3, r3, #1
   37444:	str	r3, [r5]
   37448:	add	r9, r9, #4
   3744c:	ldr	r2, [sp, #12]
   37450:	ldr	r1, [r2, #4]!
   37454:	str	r2, [sp, #12]
   37458:	mov	r0, r3
   3745c:	bl	517e8 <__aeabi_idivmod>
   37460:	cmp	r1, #0
   37464:	bne	374b0 <GetDataSlab+0x164a4>
   37468:	mov	r3, #0
   3746c:	str	r3, [r5], #4
   37470:	add	r7, r7, #4
   37474:	str	r7, [sp, #16]
   37478:	ldr	r4, [r7]
   3747c:	mov	r1, r4
   37480:	mov	r0, fp
   37484:	bl	517e8 <__aeabi_idivmod>
   37488:	subs	r3, r1, #0
   3748c:	beq	3740c <GetDataSlab+0x16400>
   37490:	ldr	r2, [r7, #-4]
   37494:	ldr	r1, [r9]
   37498:	sub	r3, r4, r3
   3749c:	mla	r3, r1, r2, r3
   374a0:	add	r6, r6, r3, lsl #1
   374a4:	add	fp, fp, r3
   374a8:	b	3742c <GetDataSlab+0x16420>
   374ac:	mov	sl, #1
   374b0:	add	r3, sp, #152	; 0x98
   374b4:	add	r3, r3, sl, lsl #2
   374b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   374bc:	add	fp, fp, r3
   374c0:	add	r6, r6, r3, lsl #1
   374c4:	ldr	r3, [sp, #24]
   374c8:	ldr	r2, [sp, #8]
   374cc:	add	r3, r3, r2
   374d0:	str	r3, [sp, #24]
   374d4:	ldr	r2, [sp, #20]
   374d8:	cmp	r3, r2
   374dc:	bge	375c4 <GetDataSlab+0x165b8>
   374e0:	ldr	r3, [sp, #196]	; 0xc4
   374e4:	ldr	r3, [r3]
   374e8:	cmp	r3, #0
   374ec:	addne	r6, r6, r3, lsl #1
   374f0:	addne	fp, fp, r3
   374f4:	ldr	r3, [sp, #204]	; 0xcc
   374f8:	ldr	r3, [r3]
   374fc:	str	r3, [sp, #8]
   37500:	cmp	r3, #0
   37504:	ble	37544 <GetDataSlab+0x16538>
   37508:	ldr	r3, [sp, #4]
   3750c:	ldr	r2, [sp, #24]
   37510:	add	r2, r3, r2, lsl #1
   37514:	mov	r3, #0
   37518:	ldrh	r1, [r6]
   3751c:	strh	r1, [r2], #2
   37520:	ldr	r1, [r8]
   37524:	add	r6, r6, r1, lsl #1
   37528:	add	fp, fp, r1
   3752c:	add	r3, r3, #1
   37530:	ldr	r1, [sp, #204]	; 0xcc
   37534:	ldr	r1, [r1]
   37538:	str	r1, [sp, #8]
   3753c:	cmp	r1, r3
   37540:	bgt	37518 <GetDataSlab+0x1650c>
   37544:	ldr	r3, [r8]
   37548:	ldr	r2, [sp, #8]
   3754c:	mul	r3, r3, r2
   37550:	ldr	r2, [sp, #192]	; 0xc0
   37554:	ldr	r2, [r2]
   37558:	sub	r3, r2, r3
   3755c:	ldr	r2, [sp, #196]	; 0xc4
   37560:	ldr	r2, [r2]
   37564:	sub	r3, r3, r2
   37568:	add	fp, fp, r3
   3756c:	add	r6, r6, r3, lsl #1
   37570:	ldr	r3, [sp, #208]	; 0xd0
   37574:	cmp	r3, #1
   37578:	ble	374c4 <GetDataSlab+0x164b8>
   3757c:	ldr	r3, [sp, #76]	; 0x4c
   37580:	add	r3, r3, #1
   37584:	str	r3, [sp, #76]	; 0x4c
   37588:	ldr	r2, [sp, #204]	; 0xcc
   3758c:	ldr	r1, [r2, #4]
   37590:	mov	r0, r3
   37594:	bl	517e8 <__aeabi_idivmod>
   37598:	cmp	r1, #0
   3759c:	bne	374ac <GetDataSlab+0x164a0>
   375a0:	add	r5, sp, #76	; 0x4c
   375a4:	ldr	r3, [sp, #204]	; 0xcc
   375a8:	add	r3, r3, #4
   375ac:	str	r3, [sp, #12]
   375b0:	ldr	r3, [sp, #196]	; 0xc4
   375b4:	add	r9, r3, #4
   375b8:	add	r7, sp, #112	; 0x70
   375bc:	mov	sl, #1
   375c0:	b	37468 <GetDataSlab+0x1645c>
   375c4:	mov	r3, #0
   375c8:	b	24fa8 <GetDataSlab+0x3f9c>
   375cc:	ldr	r3, [r8]
   375d0:	str	r3, [sp, #28]
   375d4:	sub	r3, r3, #1
   375d8:	str	r3, [sp, #32]
   375dc:	ldr	r3, [sp, #192]	; 0xc0
   375e0:	ldr	r3, [r3]
   375e4:	str	r3, [sp, #112]	; 0x70
   375e8:	ldr	r3, [sp, #204]	; 0xcc
   375ec:	ldr	r3, [r3]
   375f0:	str	r3, [sp, #20]
   375f4:	ldr	r3, [sp, #208]	; 0xd0
   375f8:	cmp	r3, #1
   375fc:	ble	37630 <GetDataSlab+0x16624>
   37600:	str	r8, [sp, #16]
   37604:	add	sl, sp, #36	; 0x24
   37608:	ldr	lr, [sp, #192]	; 0xc0
   3760c:	add	r9, sp, #112	; 0x70
   37610:	ldr	r3, [sp, #204]	; 0xcc
   37614:	add	r5, r3, #4
   37618:	ldr	r3, [sp, #196]	; 0xc4
   3761c:	add	r4, r3, #4
   37620:	str	lr, [sp, #12]
   37624:	mov	r6, #2
   37628:	mov	fp, #0
   3762c:	b	41f70 <GetDataSlab+0x20f64>
   37630:	mov	fp, #0
   37634:	b	41ffc <GetDataSlab+0x20ff0>
   37638:	ldr	r3, [sp, #20]
   3763c:	cmp	r3, #0
   37640:	ble	3d5b0 <GetDataSlab+0x1c5a4>
   37644:	mov	r3, #0
   37648:	str	r3, [sp, #16]
   3764c:	b	37720 <GetDataSlab+0x16714>
   37650:	ldr	r2, [r8]
   37654:	cmp	r2, #0
   37658:	beq	37670 <GetDataSlab+0x16664>
   3765c:	ldr	r3, [sp, #12]
   37660:	ldr	r3, [r3, #-4]
   37664:	mul	r3, r3, r2
   37668:	add	r6, r6, r3
   3766c:	add	fp, fp, r3
   37670:	add	r9, r9, #1
   37674:	ldr	r3, [sp, #208]	; 0xd0
   37678:	cmp	r3, r9
   3767c:	beq	37708 <GetDataSlab+0x166fc>
   37680:	ldr	r3, [r5]
   37684:	add	r3, r3, #1
   37688:	str	r3, [r5]
   3768c:	add	r8, r8, #4
   37690:	ldr	r2, [sp, #8]
   37694:	ldr	r1, [r2, #4]!
   37698:	str	r2, [sp, #8]
   3769c:	mov	r0, r3
   376a0:	bl	517e8 <__aeabi_idivmod>
   376a4:	cmp	r1, #0
   376a8:	bne	376f4 <GetDataSlab+0x166e8>
   376ac:	mov	r3, #0
   376b0:	str	r3, [r5], #4
   376b4:	add	r7, r7, #4
   376b8:	str	r7, [sp, #12]
   376bc:	ldr	r4, [r7]
   376c0:	mov	r1, r4
   376c4:	mov	r0, fp
   376c8:	bl	517e8 <__aeabi_idivmod>
   376cc:	subs	r3, r1, #0
   376d0:	beq	37650 <GetDataSlab+0x16644>
   376d4:	ldr	r2, [r7, #-4]
   376d8:	ldr	r1, [r8]
   376dc:	sub	r3, r4, r3
   376e0:	mla	r3, r1, r2, r3
   376e4:	add	r6, r6, r3
   376e8:	add	fp, fp, r3
   376ec:	b	37670 <GetDataSlab+0x16664>
   376f0:	ldr	r9, [sp, #28]
   376f4:	add	r3, sp, #152	; 0x98
   376f8:	add	r3, r3, r9, lsl #2
   376fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   37700:	add	fp, fp, r3
   37704:	add	r6, r6, r3
   37708:	ldr	r3, [sp, #16]
   3770c:	add	r3, r3, sl
   37710:	str	r3, [sp, #16]
   37714:	ldr	r2, [sp, #20]
   37718:	cmp	r3, r2
   3771c:	bge	377e4 <GetDataSlab+0x167d8>
   37720:	ldr	r3, [sp, #196]	; 0xc4
   37724:	ldr	r3, [r3]
   37728:	cmp	r3, #0
   3772c:	addne	r6, r6, r3
   37730:	addne	fp, fp, r3
   37734:	ldr	r3, [sp, #204]	; 0xcc
   37738:	ldr	sl, [r3]
   3773c:	cmp	sl, #0
   37740:	ble	37774 <GetDataSlab+0x16768>
   37744:	sub	r0, r6, #1
   37748:	ldr	r3, [sp, #4]
   3774c:	ldr	r2, [sp, #16]
   37750:	add	r1, r3, r2, lsl #1
   37754:	mov	r2, #0
   37758:	ldrsb	r3, [r0, #1]!
   3775c:	strh	r3, [r1], #2
   37760:	add	r2, r2, #1
   37764:	ldr	r3, [sp, #204]	; 0xcc
   37768:	ldr	sl, [r3]
   3776c:	cmp	sl, r2
   37770:	bgt	37758 <GetDataSlab+0x1674c>
   37774:	ldr	r3, [sp, #192]	; 0xc0
   37778:	ldr	r2, [r3]
   3777c:	ldr	r3, [sp, #196]	; 0xc4
   37780:	ldr	r3, [r3]
   37784:	sub	r3, r2, r3
   37788:	add	fp, fp, r3
   3778c:	add	r6, r6, r3
   37790:	ldr	r3, [sp, #208]	; 0xd0
   37794:	cmp	r3, #1
   37798:	ble	37708 <GetDataSlab+0x166fc>
   3779c:	ldr	r3, [sp, #76]	; 0x4c
   377a0:	add	r3, r3, #1
   377a4:	str	r3, [sp, #76]	; 0x4c
   377a8:	ldr	r2, [sp, #204]	; 0xcc
   377ac:	ldr	r1, [r2, #4]
   377b0:	mov	r0, r3
   377b4:	bl	517e8 <__aeabi_idivmod>
   377b8:	cmp	r1, #0
   377bc:	bne	376f0 <GetDataSlab+0x166e4>
   377c0:	add	r5, sp, #76	; 0x4c
   377c4:	ldr	r3, [sp, #204]	; 0xcc
   377c8:	add	r3, r3, #4
   377cc:	str	r3, [sp, #8]
   377d0:	ldr	r3, [sp, #196]	; 0xc4
   377d4:	add	r8, r3, #4
   377d8:	add	r7, sp, #112	; 0x70
   377dc:	ldr	r9, [sp, #28]
   377e0:	b	376ac <GetDataSlab+0x166a0>
   377e4:	mov	r3, #0
   377e8:	b	24fa8 <GetDataSlab+0x3f9c>
   377ec:	ldr	r2, [r9]
   377f0:	cmp	r2, #0
   377f4:	beq	3780c <GetDataSlab+0x16800>
   377f8:	ldr	r3, [sp, #16]
   377fc:	ldr	r3, [r3, #-4]
   37800:	mul	r3, r3, r2
   37804:	add	r6, r6, r3
   37808:	add	fp, fp, r3
   3780c:	add	sl, sl, #1
   37810:	ldr	r3, [sp, #208]	; 0xd0
   37814:	cmp	r3, sl
   37818:	beq	378a4 <GetDataSlab+0x16898>
   3781c:	ldr	r3, [r5]
   37820:	add	r3, r3, #1
   37824:	str	r3, [r5]
   37828:	add	r9, r9, #4
   3782c:	ldr	r2, [sp, #12]
   37830:	ldr	r1, [r2, #4]!
   37834:	str	r2, [sp, #12]
   37838:	mov	r0, r3
   3783c:	bl	517e8 <__aeabi_idivmod>
   37840:	cmp	r1, #0
   37844:	bne	37890 <GetDataSlab+0x16884>
   37848:	mov	r3, #0
   3784c:	str	r3, [r5], #4
   37850:	add	r7, r7, #4
   37854:	str	r7, [sp, #16]
   37858:	ldr	r4, [r7]
   3785c:	mov	r1, r4
   37860:	mov	r0, fp
   37864:	bl	517e8 <__aeabi_idivmod>
   37868:	subs	r3, r1, #0
   3786c:	beq	377ec <GetDataSlab+0x167e0>
   37870:	ldr	r2, [r7, #-4]
   37874:	ldr	r1, [r9]
   37878:	sub	r3, r4, r3
   3787c:	mla	r3, r1, r2, r3
   37880:	add	r6, r6, r3
   37884:	add	fp, fp, r3
   37888:	b	3780c <GetDataSlab+0x16800>
   3788c:	mov	sl, #1
   37890:	add	r3, sp, #152	; 0x98
   37894:	add	r3, r3, sl, lsl #2
   37898:	ldr	r3, [r3, #-120]	; 0xffffff88
   3789c:	add	fp, fp, r3
   378a0:	add	r6, r6, r3
   378a4:	ldr	r3, [sp, #24]
   378a8:	ldr	r2, [sp, #8]
   378ac:	add	r3, r3, r2
   378b0:	str	r3, [sp, #24]
   378b4:	ldr	r2, [sp, #20]
   378b8:	cmp	r3, r2
   378bc:	bge	379a4 <GetDataSlab+0x16998>
   378c0:	ldr	r3, [sp, #196]	; 0xc4
   378c4:	ldr	r3, [r3]
   378c8:	cmp	r3, #0
   378cc:	addne	r6, r6, r3
   378d0:	addne	fp, fp, r3
   378d4:	ldr	r3, [sp, #204]	; 0xcc
   378d8:	ldr	r3, [r3]
   378dc:	str	r3, [sp, #8]
   378e0:	cmp	r3, #0
   378e4:	ble	37924 <GetDataSlab+0x16918>
   378e8:	ldr	r3, [sp, #4]
   378ec:	ldr	r2, [sp, #24]
   378f0:	add	r2, r3, r2, lsl #1
   378f4:	mov	r3, #0
   378f8:	ldrsb	r1, [r6]
   378fc:	strh	r1, [r2], #2
   37900:	ldr	r1, [r8]
   37904:	add	r6, r6, r1
   37908:	add	fp, fp, r1
   3790c:	add	r3, r3, #1
   37910:	ldr	r1, [sp, #204]	; 0xcc
   37914:	ldr	r1, [r1]
   37918:	str	r1, [sp, #8]
   3791c:	cmp	r1, r3
   37920:	bgt	378f8 <GetDataSlab+0x168ec>
   37924:	ldr	r3, [r8]
   37928:	ldr	r2, [sp, #8]
   3792c:	mul	r3, r3, r2
   37930:	ldr	r2, [sp, #192]	; 0xc0
   37934:	ldr	r2, [r2]
   37938:	sub	r3, r2, r3
   3793c:	ldr	r2, [sp, #196]	; 0xc4
   37940:	ldr	r2, [r2]
   37944:	sub	r3, r3, r2
   37948:	add	fp, fp, r3
   3794c:	add	r6, r6, r3
   37950:	ldr	r3, [sp, #208]	; 0xd0
   37954:	cmp	r3, #1
   37958:	ble	378a4 <GetDataSlab+0x16898>
   3795c:	ldr	r3, [sp, #76]	; 0x4c
   37960:	add	r3, r3, #1
   37964:	str	r3, [sp, #76]	; 0x4c
   37968:	ldr	r2, [sp, #204]	; 0xcc
   3796c:	ldr	r1, [r2, #4]
   37970:	mov	r0, r3
   37974:	bl	517e8 <__aeabi_idivmod>
   37978:	cmp	r1, #0
   3797c:	bne	3788c <GetDataSlab+0x16880>
   37980:	add	r5, sp, #76	; 0x4c
   37984:	ldr	r3, [sp, #204]	; 0xcc
   37988:	add	r3, r3, #4
   3798c:	str	r3, [sp, #12]
   37990:	ldr	r3, [sp, #196]	; 0xc4
   37994:	add	r9, r3, #4
   37998:	add	r7, sp, #112	; 0x70
   3799c:	mov	sl, #1
   379a0:	b	37848 <GetDataSlab+0x1683c>
   379a4:	mov	r3, #0
   379a8:	b	24fa8 <GetDataSlab+0x3f9c>
   379ac:	ldr	r3, [r8]
   379b0:	str	r3, [sp, #28]
   379b4:	sub	r3, r3, #1
   379b8:	str	r3, [sp, #32]
   379bc:	ldr	r3, [sp, #192]	; 0xc0
   379c0:	ldr	r3, [r3]
   379c4:	str	r3, [sp, #112]	; 0x70
   379c8:	ldr	r3, [sp, #204]	; 0xcc
   379cc:	ldr	r3, [r3]
   379d0:	str	r3, [sp, #20]
   379d4:	ldr	r3, [sp, #208]	; 0xd0
   379d8:	cmp	r3, #1
   379dc:	ble	37a10 <GetDataSlab+0x16a04>
   379e0:	str	r8, [sp, #16]
   379e4:	add	sl, sp, #36	; 0x24
   379e8:	ldr	lr, [sp, #192]	; 0xc0
   379ec:	add	r9, sp, #112	; 0x70
   379f0:	ldr	r3, [sp, #204]	; 0xcc
   379f4:	add	r5, r3, #4
   379f8:	ldr	r3, [sp, #196]	; 0xc4
   379fc:	add	r4, r3, #4
   37a00:	str	lr, [sp, #12]
   37a04:	mov	r6, #2
   37a08:	mov	fp, #0
   37a0c:	b	4205c <GetDataSlab+0x21050>
   37a10:	mov	fp, #0
   37a14:	b	420e8 <GetDataSlab+0x210dc>
   37a18:	ldr	r3, [sp, #20]
   37a1c:	cmp	r3, #0
   37a20:	ble	3d5b8 <GetDataSlab+0x1c5ac>
   37a24:	mov	r3, #0
   37a28:	str	r3, [sp, #16]
   37a2c:	b	37b00 <GetDataSlab+0x16af4>
   37a30:	ldr	r2, [r8]
   37a34:	cmp	r2, #0
   37a38:	beq	37a50 <GetDataSlab+0x16a44>
   37a3c:	ldr	r3, [sp, #12]
   37a40:	ldr	r3, [r3, #-4]
   37a44:	mul	r3, r3, r2
   37a48:	add	r6, r6, r3
   37a4c:	add	fp, fp, r3
   37a50:	add	r9, r9, #1
   37a54:	ldr	r3, [sp, #208]	; 0xd0
   37a58:	cmp	r3, r9
   37a5c:	beq	37ae8 <GetDataSlab+0x16adc>
   37a60:	ldr	r3, [r5]
   37a64:	add	r3, r3, #1
   37a68:	str	r3, [r5]
   37a6c:	add	r8, r8, #4
   37a70:	ldr	r2, [sp, #8]
   37a74:	ldr	r1, [r2, #4]!
   37a78:	str	r2, [sp, #8]
   37a7c:	mov	r0, r3
   37a80:	bl	517e8 <__aeabi_idivmod>
   37a84:	cmp	r1, #0
   37a88:	bne	37ad4 <GetDataSlab+0x16ac8>
   37a8c:	mov	r3, #0
   37a90:	str	r3, [r5], #4
   37a94:	add	r7, r7, #4
   37a98:	str	r7, [sp, #12]
   37a9c:	ldr	r4, [r7]
   37aa0:	mov	r1, r4
   37aa4:	mov	r0, fp
   37aa8:	bl	517e8 <__aeabi_idivmod>
   37aac:	subs	r3, r1, #0
   37ab0:	beq	37a30 <GetDataSlab+0x16a24>
   37ab4:	ldr	r2, [r7, #-4]
   37ab8:	ldr	r1, [r8]
   37abc:	sub	r3, r4, r3
   37ac0:	mla	r3, r1, r2, r3
   37ac4:	add	r6, r6, r3
   37ac8:	add	fp, fp, r3
   37acc:	b	37a50 <GetDataSlab+0x16a44>
   37ad0:	ldr	r9, [sp, #28]
   37ad4:	add	r3, sp, #152	; 0x98
   37ad8:	add	r3, r3, r9, lsl #2
   37adc:	ldr	r3, [r3, #-120]	; 0xffffff88
   37ae0:	add	fp, fp, r3
   37ae4:	add	r6, r6, r3
   37ae8:	ldr	r3, [sp, #16]
   37aec:	add	r3, r3, sl
   37af0:	str	r3, [sp, #16]
   37af4:	ldr	r2, [sp, #20]
   37af8:	cmp	r3, r2
   37afc:	bge	37bc4 <GetDataSlab+0x16bb8>
   37b00:	ldr	r3, [sp, #196]	; 0xc4
   37b04:	ldr	r3, [r3]
   37b08:	cmp	r3, #0
   37b0c:	addne	r6, r6, r3
   37b10:	addne	fp, fp, r3
   37b14:	ldr	r3, [sp, #204]	; 0xcc
   37b18:	ldr	sl, [r3]
   37b1c:	cmp	sl, #0
   37b20:	ble	37b54 <GetDataSlab+0x16b48>
   37b24:	sub	r0, r6, #1
   37b28:	ldr	r3, [sp, #4]
   37b2c:	ldr	r2, [sp, #16]
   37b30:	add	r1, r3, r2, lsl #1
   37b34:	mov	r2, #0
   37b38:	ldrb	r3, [r0, #1]!
   37b3c:	strh	r3, [r1], #2
   37b40:	add	r2, r2, #1
   37b44:	ldr	r3, [sp, #204]	; 0xcc
   37b48:	ldr	sl, [r3]
   37b4c:	cmp	sl, r2
   37b50:	bgt	37b38 <GetDataSlab+0x16b2c>
   37b54:	ldr	r3, [sp, #192]	; 0xc0
   37b58:	ldr	r2, [r3]
   37b5c:	ldr	r3, [sp, #196]	; 0xc4
   37b60:	ldr	r3, [r3]
   37b64:	sub	r3, r2, r3
   37b68:	add	fp, fp, r3
   37b6c:	add	r6, r6, r3
   37b70:	ldr	r3, [sp, #208]	; 0xd0
   37b74:	cmp	r3, #1
   37b78:	ble	37ae8 <GetDataSlab+0x16adc>
   37b7c:	ldr	r3, [sp, #76]	; 0x4c
   37b80:	add	r3, r3, #1
   37b84:	str	r3, [sp, #76]	; 0x4c
   37b88:	ldr	r2, [sp, #204]	; 0xcc
   37b8c:	ldr	r1, [r2, #4]
   37b90:	mov	r0, r3
   37b94:	bl	517e8 <__aeabi_idivmod>
   37b98:	cmp	r1, #0
   37b9c:	bne	37ad0 <GetDataSlab+0x16ac4>
   37ba0:	add	r5, sp, #76	; 0x4c
   37ba4:	ldr	r3, [sp, #204]	; 0xcc
   37ba8:	add	r3, r3, #4
   37bac:	str	r3, [sp, #8]
   37bb0:	ldr	r3, [sp, #196]	; 0xc4
   37bb4:	add	r8, r3, #4
   37bb8:	add	r7, sp, #112	; 0x70
   37bbc:	ldr	r9, [sp, #28]
   37bc0:	b	37a8c <GetDataSlab+0x16a80>
   37bc4:	mov	r3, #0
   37bc8:	b	24fa8 <GetDataSlab+0x3f9c>
   37bcc:	ldr	r2, [r9]
   37bd0:	cmp	r2, #0
   37bd4:	beq	37bec <GetDataSlab+0x16be0>
   37bd8:	ldr	r3, [sp, #16]
   37bdc:	ldr	r3, [r3, #-4]
   37be0:	mul	r3, r3, r2
   37be4:	add	r6, r6, r3
   37be8:	add	fp, fp, r3
   37bec:	add	sl, sl, #1
   37bf0:	ldr	r3, [sp, #208]	; 0xd0
   37bf4:	cmp	r3, sl
   37bf8:	beq	37c84 <GetDataSlab+0x16c78>
   37bfc:	ldr	r3, [r5]
   37c00:	add	r3, r3, #1
   37c04:	str	r3, [r5]
   37c08:	add	r9, r9, #4
   37c0c:	ldr	r2, [sp, #12]
   37c10:	ldr	r1, [r2, #4]!
   37c14:	str	r2, [sp, #12]
   37c18:	mov	r0, r3
   37c1c:	bl	517e8 <__aeabi_idivmod>
   37c20:	cmp	r1, #0
   37c24:	bne	37c70 <GetDataSlab+0x16c64>
   37c28:	mov	r3, #0
   37c2c:	str	r3, [r5], #4
   37c30:	add	r7, r7, #4
   37c34:	str	r7, [sp, #16]
   37c38:	ldr	r4, [r7]
   37c3c:	mov	r1, r4
   37c40:	mov	r0, fp
   37c44:	bl	517e8 <__aeabi_idivmod>
   37c48:	subs	r3, r1, #0
   37c4c:	beq	37bcc <GetDataSlab+0x16bc0>
   37c50:	ldr	r2, [r7, #-4]
   37c54:	ldr	r1, [r9]
   37c58:	sub	r3, r4, r3
   37c5c:	mla	r3, r1, r2, r3
   37c60:	add	r6, r6, r3
   37c64:	add	fp, fp, r3
   37c68:	b	37bec <GetDataSlab+0x16be0>
   37c6c:	mov	sl, #1
   37c70:	add	r3, sp, #152	; 0x98
   37c74:	add	r3, r3, sl, lsl #2
   37c78:	ldr	r3, [r3, #-120]	; 0xffffff88
   37c7c:	add	fp, fp, r3
   37c80:	add	r6, r6, r3
   37c84:	ldr	r3, [sp, #24]
   37c88:	ldr	r2, [sp, #8]
   37c8c:	add	r3, r3, r2
   37c90:	str	r3, [sp, #24]
   37c94:	ldr	r2, [sp, #20]
   37c98:	cmp	r3, r2
   37c9c:	bge	37d84 <GetDataSlab+0x16d78>
   37ca0:	ldr	r3, [sp, #196]	; 0xc4
   37ca4:	ldr	r3, [r3]
   37ca8:	cmp	r3, #0
   37cac:	addne	r6, r6, r3
   37cb0:	addne	fp, fp, r3
   37cb4:	ldr	r3, [sp, #204]	; 0xcc
   37cb8:	ldr	r3, [r3]
   37cbc:	str	r3, [sp, #8]
   37cc0:	cmp	r3, #0
   37cc4:	ble	37d04 <GetDataSlab+0x16cf8>
   37cc8:	ldr	r3, [sp, #4]
   37ccc:	ldr	r2, [sp, #24]
   37cd0:	add	r2, r3, r2, lsl #1
   37cd4:	mov	r3, #0
   37cd8:	ldrb	r1, [r6]
   37cdc:	strh	r1, [r2], #2
   37ce0:	ldr	r1, [r8]
   37ce4:	add	r6, r6, r1
   37ce8:	add	fp, fp, r1
   37cec:	add	r3, r3, #1
   37cf0:	ldr	r1, [sp, #204]	; 0xcc
   37cf4:	ldr	r1, [r1]
   37cf8:	str	r1, [sp, #8]
   37cfc:	cmp	r1, r3
   37d00:	bgt	37cd8 <GetDataSlab+0x16ccc>
   37d04:	ldr	r3, [r8]
   37d08:	ldr	r2, [sp, #8]
   37d0c:	mul	r3, r3, r2
   37d10:	ldr	r2, [sp, #192]	; 0xc0
   37d14:	ldr	r2, [r2]
   37d18:	sub	r3, r2, r3
   37d1c:	ldr	r2, [sp, #196]	; 0xc4
   37d20:	ldr	r2, [r2]
   37d24:	sub	r3, r3, r2
   37d28:	add	fp, fp, r3
   37d2c:	add	r6, r6, r3
   37d30:	ldr	r3, [sp, #208]	; 0xd0
   37d34:	cmp	r3, #1
   37d38:	ble	37c84 <GetDataSlab+0x16c78>
   37d3c:	ldr	r3, [sp, #76]	; 0x4c
   37d40:	add	r3, r3, #1
   37d44:	str	r3, [sp, #76]	; 0x4c
   37d48:	ldr	r2, [sp, #204]	; 0xcc
   37d4c:	ldr	r1, [r2, #4]
   37d50:	mov	r0, r3
   37d54:	bl	517e8 <__aeabi_idivmod>
   37d58:	cmp	r1, #0
   37d5c:	bne	37c6c <GetDataSlab+0x16c60>
   37d60:	add	r5, sp, #76	; 0x4c
   37d64:	ldr	r3, [sp, #204]	; 0xcc
   37d68:	add	r3, r3, #4
   37d6c:	str	r3, [sp, #12]
   37d70:	ldr	r3, [sp, #196]	; 0xc4
   37d74:	add	r9, r3, #4
   37d78:	add	r7, sp, #112	; 0x70
   37d7c:	mov	sl, #1
   37d80:	b	37c28 <GetDataSlab+0x16c1c>
   37d84:	mov	r3, #0
   37d88:	b	24fa8 <GetDataSlab+0x3f9c>
   37d8c:	cmp	r4, #12
   37d90:	beq	37e04 <GetDataSlab+0x16df8>
   37d94:	cmp	r4, #13
   37d98:	movne	r3, #1
   37d9c:	bne	24fa8 <GetDataSlab+0x3f9c>
   37da0:	ldr	r3, [r8]
   37da4:	str	r3, [sp, #28]
   37da8:	sub	r3, r3, #1
   37dac:	str	r3, [sp, #32]
   37db0:	ldr	r3, [sp, #192]	; 0xc0
   37db4:	ldr	r3, [r3]
   37db8:	str	r3, [sp, #112]	; 0x70
   37dbc:	ldr	r3, [sp, #204]	; 0xcc
   37dc0:	ldr	r3, [r3]
   37dc4:	str	r3, [sp, #20]
   37dc8:	ldr	r3, [sp, #208]	; 0xd0
   37dcc:	cmp	r3, #1
   37dd0:	ble	381d4 <GetDataSlab+0x171c8>
   37dd4:	str	r8, [sp, #16]
   37dd8:	add	sl, sp, #36	; 0x24
   37ddc:	ldr	lr, [sp, #192]	; 0xc0
   37de0:	add	r9, sp, #112	; 0x70
   37de4:	ldr	r3, [sp, #204]	; 0xcc
   37de8:	add	r6, r3, #4
   37dec:	ldr	r3, [sp, #196]	; 0xc4
   37df0:	add	r4, r3, #4
   37df4:	str	lr, [sp, #12]
   37df8:	mov	r5, #2
   37dfc:	mov	fp, #0
   37e00:	b	42234 <GetDataSlab+0x21228>
   37e04:	ldr	r3, [r8]
   37e08:	str	r3, [sp, #28]
   37e0c:	sub	r3, r3, #1
   37e10:	str	r3, [sp, #32]
   37e14:	ldr	r3, [sp, #192]	; 0xc0
   37e18:	ldr	r3, [r3]
   37e1c:	str	r3, [sp, #112]	; 0x70
   37e20:	ldr	r3, [sp, #204]	; 0xcc
   37e24:	ldr	r3, [r3]
   37e28:	str	r3, [sp, #20]
   37e2c:	ldr	r3, [sp, #208]	; 0xd0
   37e30:	cmp	r3, #1
   37e34:	ble	37e68 <GetDataSlab+0x16e5c>
   37e38:	str	r8, [sp, #16]
   37e3c:	add	sl, sp, #36	; 0x24
   37e40:	ldr	lr, [sp, #192]	; 0xc0
   37e44:	add	r9, sp, #112	; 0x70
   37e48:	ldr	r3, [sp, #204]	; 0xcc
   37e4c:	add	r6, r3, #4
   37e50:	ldr	r3, [sp, #196]	; 0xc4
   37e54:	add	r4, r3, #4
   37e58:	str	lr, [sp, #12]
   37e5c:	mov	r5, #2
   37e60:	mov	fp, #0
   37e64:	b	42148 <GetDataSlab+0x2113c>
   37e68:	mov	fp, #0
   37e6c:	b	421d4 <GetDataSlab+0x211c8>
   37e70:	ldr	r3, [sp, #20]
   37e74:	cmp	r3, #0
   37e78:	ble	421fc <GetDataSlab+0x211f0>
   37e7c:	mov	r3, #0
   37e80:	str	r3, [sp, #16]
   37e84:	b	37f58 <GetDataSlab+0x16f4c>
   37e88:	ldr	r2, [r8]
   37e8c:	cmp	r2, #0
   37e90:	beq	37ea8 <GetDataSlab+0x16e9c>
   37e94:	ldr	r3, [sp, #12]
   37e98:	ldr	r3, [r3, #-4]
   37e9c:	mul	r3, r3, r2
   37ea0:	add	r5, r5, r3, lsl #3
   37ea4:	add	fp, fp, r3
   37ea8:	add	r9, r9, #1
   37eac:	ldr	r3, [sp, #208]	; 0xd0
   37eb0:	cmp	r3, r9
   37eb4:	beq	37f40 <GetDataSlab+0x16f34>
   37eb8:	ldr	r3, [r6]
   37ebc:	add	r3, r3, #1
   37ec0:	str	r3, [r6]
   37ec4:	add	r8, r8, #4
   37ec8:	ldr	r2, [sp, #8]
   37ecc:	ldr	r1, [r2, #4]!
   37ed0:	str	r2, [sp, #8]
   37ed4:	mov	r0, r3
   37ed8:	bl	517e8 <__aeabi_idivmod>
   37edc:	cmp	r1, #0
   37ee0:	bne	37f2c <GetDataSlab+0x16f20>
   37ee4:	mov	r3, #0
   37ee8:	str	r3, [r6], #4
   37eec:	add	r7, r7, #4
   37ef0:	str	r7, [sp, #12]
   37ef4:	ldr	r4, [r7]
   37ef8:	mov	r1, r4
   37efc:	mov	r0, fp
   37f00:	bl	517e8 <__aeabi_idivmod>
   37f04:	subs	r3, r1, #0
   37f08:	beq	37e88 <GetDataSlab+0x16e7c>
   37f0c:	ldr	r2, [r7, #-4]
   37f10:	ldr	r1, [r8]
   37f14:	sub	r3, r4, r3
   37f18:	mla	r3, r1, r2, r3
   37f1c:	add	r5, r5, r3, lsl #3
   37f20:	add	fp, fp, r3
   37f24:	b	37ea8 <GetDataSlab+0x16e9c>
   37f28:	ldr	r9, [sp, #28]
   37f2c:	add	r3, sp, #152	; 0x98
   37f30:	add	r3, r3, r9, lsl #2
   37f34:	ldr	r3, [r3, #-120]	; 0xffffff88
   37f38:	add	fp, fp, r3
   37f3c:	add	r5, r5, r3, lsl #3
   37f40:	ldr	r3, [sp, #16]
   37f44:	add	r3, r3, sl
   37f48:	str	r3, [sp, #16]
   37f4c:	ldr	r2, [sp, #20]
   37f50:	cmp	r3, r2
   37f54:	bge	421fc <GetDataSlab+0x211f0>
   37f58:	ldr	r3, [sp, #196]	; 0xc4
   37f5c:	ldr	r3, [r3]
   37f60:	cmp	r3, #0
   37f64:	addne	r5, r5, r3, lsl #3
   37f68:	addne	fp, fp, r3
   37f6c:	ldr	r3, [sp, #204]	; 0xcc
   37f70:	ldr	sl, [r3]
   37f74:	cmp	sl, #0
   37f78:	ble	37fac <GetDataSlab+0x16fa0>
   37f7c:	sub	r0, r5, #8
   37f80:	ldr	r3, [sp, #4]
   37f84:	ldr	r2, [sp, #16]
   37f88:	add	r1, r3, r2, lsl #1
   37f8c:	mov	r2, #0
   37f90:	ldr	r3, [r0, #8]!
   37f94:	strh	r3, [r1], #2
   37f98:	add	r2, r2, #1
   37f9c:	ldr	r3, [sp, #204]	; 0xcc
   37fa0:	ldr	sl, [r3]
   37fa4:	cmp	sl, r2
   37fa8:	bgt	37f90 <GetDataSlab+0x16f84>
   37fac:	ldr	r3, [sp, #192]	; 0xc0
   37fb0:	ldr	r2, [r3]
   37fb4:	ldr	r3, [sp, #196]	; 0xc4
   37fb8:	ldr	r3, [r3]
   37fbc:	sub	r3, r2, r3
   37fc0:	add	fp, fp, r3
   37fc4:	add	r5, r5, r3, lsl #3
   37fc8:	ldr	r3, [sp, #208]	; 0xd0
   37fcc:	cmp	r3, #1
   37fd0:	ble	37f40 <GetDataSlab+0x16f34>
   37fd4:	ldr	r3, [sp, #76]	; 0x4c
   37fd8:	add	r3, r3, #1
   37fdc:	str	r3, [sp, #76]	; 0x4c
   37fe0:	ldr	r2, [sp, #204]	; 0xcc
   37fe4:	ldr	r1, [r2, #4]
   37fe8:	mov	r0, r3
   37fec:	bl	517e8 <__aeabi_idivmod>
   37ff0:	cmp	r1, #0
   37ff4:	bne	37f28 <GetDataSlab+0x16f1c>
   37ff8:	add	r6, sp, #76	; 0x4c
   37ffc:	ldr	r3, [sp, #204]	; 0xcc
   38000:	add	r3, r3, #4
   38004:	str	r3, [sp, #8]
   38008:	ldr	r3, [sp, #196]	; 0xc4
   3800c:	add	r8, r3, #4
   38010:	add	r7, sp, #112	; 0x70
   38014:	ldr	r9, [sp, #28]
   38018:	b	37ee4 <GetDataSlab+0x16ed8>
   3801c:	ldr	r2, [r9]
   38020:	cmp	r2, #0
   38024:	beq	3803c <GetDataSlab+0x17030>
   38028:	ldr	r3, [sp, #16]
   3802c:	ldr	r3, [r3, #-4]
   38030:	mul	r3, r3, r2
   38034:	add	r5, r5, r3, lsl #3
   38038:	add	fp, fp, r3
   3803c:	add	sl, sl, #1
   38040:	ldr	r3, [sp, #208]	; 0xd0
   38044:	cmp	r3, sl
   38048:	beq	380d4 <GetDataSlab+0x170c8>
   3804c:	ldr	r3, [r6]
   38050:	add	r3, r3, #1
   38054:	str	r3, [r6]
   38058:	add	r9, r9, #4
   3805c:	ldr	r2, [sp, #12]
   38060:	ldr	r1, [r2, #4]!
   38064:	str	r2, [sp, #12]
   38068:	mov	r0, r3
   3806c:	bl	517e8 <__aeabi_idivmod>
   38070:	cmp	r1, #0
   38074:	bne	380c0 <GetDataSlab+0x170b4>
   38078:	mov	r3, #0
   3807c:	str	r3, [r6], #4
   38080:	add	r7, r7, #4
   38084:	str	r7, [sp, #16]
   38088:	ldr	r4, [r7]
   3808c:	mov	r1, r4
   38090:	mov	r0, fp
   38094:	bl	517e8 <__aeabi_idivmod>
   38098:	subs	r3, r1, #0
   3809c:	beq	3801c <GetDataSlab+0x17010>
   380a0:	ldr	r2, [r7, #-4]
   380a4:	ldr	r1, [r9]
   380a8:	sub	r3, r4, r3
   380ac:	mla	r3, r1, r2, r3
   380b0:	add	r5, r5, r3, lsl #3
   380b4:	add	fp, fp, r3
   380b8:	b	3803c <GetDataSlab+0x17030>
   380bc:	mov	sl, #1
   380c0:	add	r3, sp, #152	; 0x98
   380c4:	add	r3, r3, sl, lsl #2
   380c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   380cc:	add	fp, fp, r3
   380d0:	add	r5, r5, r3, lsl #3
   380d4:	ldr	r3, [sp, #24]
   380d8:	ldr	r2, [sp, #8]
   380dc:	add	r3, r3, r2
   380e0:	str	r3, [sp, #24]
   380e4:	ldr	r2, [sp, #20]
   380e8:	cmp	r3, r2
   380ec:	bge	421fc <GetDataSlab+0x211f0>
   380f0:	ldr	r3, [sp, #196]	; 0xc4
   380f4:	ldr	r3, [r3]
   380f8:	cmp	r3, #0
   380fc:	addne	r5, r5, r3, lsl #3
   38100:	addne	fp, fp, r3
   38104:	ldr	r3, [sp, #204]	; 0xcc
   38108:	ldr	r3, [r3]
   3810c:	str	r3, [sp, #8]
   38110:	cmp	r3, #0
   38114:	ble	38154 <GetDataSlab+0x17148>
   38118:	ldr	r3, [sp, #4]
   3811c:	ldr	r2, [sp, #24]
   38120:	add	r2, r3, r2, lsl #1
   38124:	mov	r3, #0
   38128:	ldr	r1, [r5]
   3812c:	strh	r1, [r2], #2
   38130:	ldr	r1, [r8]
   38134:	add	r5, r5, r1, lsl #3
   38138:	add	fp, fp, r1
   3813c:	add	r3, r3, #1
   38140:	ldr	r1, [sp, #204]	; 0xcc
   38144:	ldr	r1, [r1]
   38148:	str	r1, [sp, #8]
   3814c:	cmp	r1, r3
   38150:	bgt	38128 <GetDataSlab+0x1711c>
   38154:	ldr	r3, [r8]
   38158:	ldr	r2, [sp, #8]
   3815c:	mul	r3, r3, r2
   38160:	ldr	r2, [sp, #192]	; 0xc0
   38164:	ldr	r2, [r2]
   38168:	sub	r3, r2, r3
   3816c:	ldr	r2, [sp, #196]	; 0xc4
   38170:	ldr	r2, [r2]
   38174:	sub	r3, r3, r2
   38178:	add	fp, fp, r3
   3817c:	add	r5, r5, r3, lsl #3
   38180:	ldr	r3, [sp, #208]	; 0xd0
   38184:	cmp	r3, #1
   38188:	ble	380d4 <GetDataSlab+0x170c8>
   3818c:	ldr	r3, [sp, #76]	; 0x4c
   38190:	add	r3, r3, #1
   38194:	str	r3, [sp, #76]	; 0x4c
   38198:	ldr	r2, [sp, #204]	; 0xcc
   3819c:	ldr	r1, [r2, #4]
   381a0:	mov	r0, r3
   381a4:	bl	517e8 <__aeabi_idivmod>
   381a8:	cmp	r1, #0
   381ac:	bne	380bc <GetDataSlab+0x170b0>
   381b0:	add	r6, sp, #76	; 0x4c
   381b4:	ldr	r3, [sp, #204]	; 0xcc
   381b8:	add	r3, r3, #4
   381bc:	str	r3, [sp, #12]
   381c0:	ldr	r3, [sp, #196]	; 0xc4
   381c4:	add	r9, r3, #4
   381c8:	add	r7, sp, #112	; 0x70
   381cc:	mov	sl, #1
   381d0:	b	38078 <GetDataSlab+0x1706c>
   381d4:	mov	fp, #0
   381d8:	b	422c0 <GetDataSlab+0x212b4>
   381dc:	ldr	r3, [sp, #20]
   381e0:	cmp	r3, #0
   381e4:	ble	3d5c0 <GetDataSlab+0x1c5b4>
   381e8:	mov	r3, #0
   381ec:	str	r3, [sp, #16]
   381f0:	b	382c4 <GetDataSlab+0x172b8>
   381f4:	ldr	r2, [r8]
   381f8:	cmp	r2, #0
   381fc:	beq	38214 <GetDataSlab+0x17208>
   38200:	ldr	r3, [sp, #12]
   38204:	ldr	r3, [r3, #-4]
   38208:	mul	r3, r3, r2
   3820c:	add	r5, r5, r3, lsl #3
   38210:	add	fp, fp, r3
   38214:	add	r9, r9, #1
   38218:	ldr	r3, [sp, #208]	; 0xd0
   3821c:	cmp	r3, r9
   38220:	beq	382ac <GetDataSlab+0x172a0>
   38224:	ldr	r3, [r6]
   38228:	add	r3, r3, #1
   3822c:	str	r3, [r6]
   38230:	add	r8, r8, #4
   38234:	ldr	r2, [sp, #8]
   38238:	ldr	r1, [r2, #4]!
   3823c:	str	r2, [sp, #8]
   38240:	mov	r0, r3
   38244:	bl	517e8 <__aeabi_idivmod>
   38248:	cmp	r1, #0
   3824c:	bne	38298 <GetDataSlab+0x1728c>
   38250:	mov	r3, #0
   38254:	str	r3, [r6], #4
   38258:	add	r7, r7, #4
   3825c:	str	r7, [sp, #12]
   38260:	ldr	r4, [r7]
   38264:	mov	r1, r4
   38268:	mov	r0, fp
   3826c:	bl	517e8 <__aeabi_idivmod>
   38270:	subs	r3, r1, #0
   38274:	beq	381f4 <GetDataSlab+0x171e8>
   38278:	ldr	r2, [r7, #-4]
   3827c:	ldr	r1, [r8]
   38280:	sub	r3, r4, r3
   38284:	mla	r3, r1, r2, r3
   38288:	add	r5, r5, r3, lsl #3
   3828c:	add	fp, fp, r3
   38290:	b	38214 <GetDataSlab+0x17208>
   38294:	ldr	r9, [sp, #28]
   38298:	add	r3, sp, #152	; 0x98
   3829c:	add	r3, r3, r9, lsl #2
   382a0:	ldr	r3, [r3, #-120]	; 0xffffff88
   382a4:	add	fp, fp, r3
   382a8:	add	r5, r5, r3, lsl #3
   382ac:	ldr	r3, [sp, #16]
   382b0:	add	r3, r3, sl
   382b4:	str	r3, [sp, #16]
   382b8:	ldr	r2, [sp, #20]
   382bc:	cmp	r3, r2
   382c0:	bge	38388 <GetDataSlab+0x1737c>
   382c4:	ldr	r3, [sp, #196]	; 0xc4
   382c8:	ldr	r3, [r3]
   382cc:	cmp	r3, #0
   382d0:	addne	r5, r5, r3, lsl #3
   382d4:	addne	fp, fp, r3
   382d8:	ldr	r3, [sp, #204]	; 0xcc
   382dc:	ldr	sl, [r3]
   382e0:	cmp	sl, #0
   382e4:	ble	38318 <GetDataSlab+0x1730c>
   382e8:	sub	r0, r5, #8
   382ec:	ldr	r3, [sp, #4]
   382f0:	ldr	r2, [sp, #16]
   382f4:	add	r1, r3, r2, lsl #1
   382f8:	mov	r2, #0
   382fc:	ldr	r3, [r0, #8]!
   38300:	strh	r3, [r1], #2
   38304:	add	r2, r2, #1
   38308:	ldr	r3, [sp, #204]	; 0xcc
   3830c:	ldr	sl, [r3]
   38310:	cmp	sl, r2
   38314:	bgt	382fc <GetDataSlab+0x172f0>
   38318:	ldr	r3, [sp, #192]	; 0xc0
   3831c:	ldr	r2, [r3]
   38320:	ldr	r3, [sp, #196]	; 0xc4
   38324:	ldr	r3, [r3]
   38328:	sub	r3, r2, r3
   3832c:	add	fp, fp, r3
   38330:	add	r5, r5, r3, lsl #3
   38334:	ldr	r3, [sp, #208]	; 0xd0
   38338:	cmp	r3, #1
   3833c:	ble	382ac <GetDataSlab+0x172a0>
   38340:	ldr	r3, [sp, #76]	; 0x4c
   38344:	add	r3, r3, #1
   38348:	str	r3, [sp, #76]	; 0x4c
   3834c:	ldr	r2, [sp, #204]	; 0xcc
   38350:	ldr	r1, [r2, #4]
   38354:	mov	r0, r3
   38358:	bl	517e8 <__aeabi_idivmod>
   3835c:	cmp	r1, #0
   38360:	bne	38294 <GetDataSlab+0x17288>
   38364:	add	r6, sp, #76	; 0x4c
   38368:	ldr	r3, [sp, #204]	; 0xcc
   3836c:	add	r3, r3, #4
   38370:	str	r3, [sp, #8]
   38374:	ldr	r3, [sp, #196]	; 0xc4
   38378:	add	r8, r3, #4
   3837c:	add	r7, sp, #112	; 0x70
   38380:	ldr	r9, [sp, #28]
   38384:	b	38250 <GetDataSlab+0x17244>
   38388:	mov	r3, #0
   3838c:	b	24fa8 <GetDataSlab+0x3f9c>
   38390:	ldr	r2, [r9]
   38394:	cmp	r2, #0
   38398:	beq	383b0 <GetDataSlab+0x173a4>
   3839c:	ldr	r3, [sp, #16]
   383a0:	ldr	r3, [r3, #-4]
   383a4:	mul	r3, r3, r2
   383a8:	add	r5, r5, r3, lsl #3
   383ac:	add	fp, fp, r3
   383b0:	add	sl, sl, #1
   383b4:	ldr	r3, [sp, #208]	; 0xd0
   383b8:	cmp	r3, sl
   383bc:	beq	38448 <GetDataSlab+0x1743c>
   383c0:	ldr	r3, [r6]
   383c4:	add	r3, r3, #1
   383c8:	str	r3, [r6]
   383cc:	add	r9, r9, #4
   383d0:	ldr	r2, [sp, #12]
   383d4:	ldr	r1, [r2, #4]!
   383d8:	str	r2, [sp, #12]
   383dc:	mov	r0, r3
   383e0:	bl	517e8 <__aeabi_idivmod>
   383e4:	cmp	r1, #0
   383e8:	bne	38434 <GetDataSlab+0x17428>
   383ec:	mov	r3, #0
   383f0:	str	r3, [r6], #4
   383f4:	add	r7, r7, #4
   383f8:	str	r7, [sp, #16]
   383fc:	ldr	r4, [r7]
   38400:	mov	r1, r4
   38404:	mov	r0, fp
   38408:	bl	517e8 <__aeabi_idivmod>
   3840c:	subs	r3, r1, #0
   38410:	beq	38390 <GetDataSlab+0x17384>
   38414:	ldr	r2, [r7, #-4]
   38418:	ldr	r1, [r9]
   3841c:	sub	r3, r4, r3
   38420:	mla	r3, r1, r2, r3
   38424:	add	r5, r5, r3, lsl #3
   38428:	add	fp, fp, r3
   3842c:	b	383b0 <GetDataSlab+0x173a4>
   38430:	mov	sl, #1
   38434:	add	r3, sp, #152	; 0x98
   38438:	add	r3, r3, sl, lsl #2
   3843c:	ldr	r3, [r3, #-120]	; 0xffffff88
   38440:	add	fp, fp, r3
   38444:	add	r5, r5, r3, lsl #3
   38448:	ldr	r3, [sp, #24]
   3844c:	ldr	r2, [sp, #8]
   38450:	add	r3, r3, r2
   38454:	str	r3, [sp, #24]
   38458:	ldr	r2, [sp, #20]
   3845c:	cmp	r3, r2
   38460:	bge	38548 <GetDataSlab+0x1753c>
   38464:	ldr	r3, [sp, #196]	; 0xc4
   38468:	ldr	r3, [r3]
   3846c:	cmp	r3, #0
   38470:	addne	r5, r5, r3, lsl #3
   38474:	addne	fp, fp, r3
   38478:	ldr	r3, [sp, #204]	; 0xcc
   3847c:	ldr	r3, [r3]
   38480:	str	r3, [sp, #8]
   38484:	cmp	r3, #0
   38488:	ble	384c8 <GetDataSlab+0x174bc>
   3848c:	ldr	r3, [sp, #4]
   38490:	ldr	r2, [sp, #24]
   38494:	add	r2, r3, r2, lsl #1
   38498:	mov	r3, #0
   3849c:	ldr	r1, [r5]
   384a0:	strh	r1, [r2], #2
   384a4:	ldr	r1, [r8]
   384a8:	add	r5, r5, r1, lsl #3
   384ac:	add	fp, fp, r1
   384b0:	add	r3, r3, #1
   384b4:	ldr	r1, [sp, #204]	; 0xcc
   384b8:	ldr	r1, [r1]
   384bc:	str	r1, [sp, #8]
   384c0:	cmp	r1, r3
   384c4:	bgt	3849c <GetDataSlab+0x17490>
   384c8:	ldr	r3, [r8]
   384cc:	ldr	r2, [sp, #8]
   384d0:	mul	r3, r3, r2
   384d4:	ldr	r2, [sp, #192]	; 0xc0
   384d8:	ldr	r2, [r2]
   384dc:	sub	r3, r2, r3
   384e0:	ldr	r2, [sp, #196]	; 0xc4
   384e4:	ldr	r2, [r2]
   384e8:	sub	r3, r3, r2
   384ec:	add	fp, fp, r3
   384f0:	add	r5, r5, r3, lsl #3
   384f4:	ldr	r3, [sp, #208]	; 0xd0
   384f8:	cmp	r3, #1
   384fc:	ble	38448 <GetDataSlab+0x1743c>
   38500:	ldr	r3, [sp, #76]	; 0x4c
   38504:	add	r3, r3, #1
   38508:	str	r3, [sp, #76]	; 0x4c
   3850c:	ldr	r2, [sp, #204]	; 0xcc
   38510:	ldr	r1, [r2, #4]
   38514:	mov	r0, r3
   38518:	bl	517e8 <__aeabi_idivmod>
   3851c:	cmp	r1, #0
   38520:	bne	38430 <GetDataSlab+0x17424>
   38524:	add	r6, sp, #76	; 0x4c
   38528:	ldr	r3, [sp, #204]	; 0xcc
   3852c:	add	r3, r3, #4
   38530:	str	r3, [sp, #12]
   38534:	ldr	r3, [sp, #196]	; 0xc4
   38538:	add	r9, r3, #4
   3853c:	add	r7, sp, #112	; 0x70
   38540:	mov	sl, #1
   38544:	b	383ec <GetDataSlab+0x173e0>
   38548:	mov	r3, #0
   3854c:	b	24fa8 <GetDataSlab+0x3f9c>
   38550:	sub	r3, r4, #1
   38554:	cmp	r3, #8
   38558:	addls	pc, pc, r3, lsl #2
   3855c:	b	3a4a4 <GetDataSlab+0x19498>
   38560:	b	39ce4 <GetDataSlab+0x18cd8>
   38564:	b	3a0c4 <GetDataSlab+0x190b8>
   38568:	b	39524 <GetDataSlab+0x18518>
   3856c:	b	39904 <GetDataSlab+0x188f8>
   38570:	b	38d64 <GetDataSlab+0x17d58>
   38574:	b	39144 <GetDataSlab+0x18138>
   38578:	b	38974 <GetDataSlab+0x17968>
   3857c:	b	3a4a4 <GetDataSlab+0x19498>
   38580:	b	38584 <GetDataSlab+0x17578>
   38584:	ldr	r3, [r8]
   38588:	str	r3, [sp, #28]
   3858c:	sub	r3, r3, #1
   38590:	str	r3, [sp, #32]
   38594:	ldr	r3, [sp, #192]	; 0xc0
   38598:	ldr	r3, [r3]
   3859c:	str	r3, [sp, #112]	; 0x70
   385a0:	ldr	r3, [sp, #204]	; 0xcc
   385a4:	ldr	r3, [r3]
   385a8:	str	r3, [sp, #20]
   385ac:	ldr	r3, [sp, #208]	; 0xd0
   385b0:	cmp	r3, #1
   385b4:	ble	385e8 <GetDataSlab+0x175dc>
   385b8:	str	r8, [sp, #16]
   385bc:	add	sl, sp, #36	; 0x24
   385c0:	ldr	lr, [sp, #192]	; 0xc0
   385c4:	add	r9, sp, #112	; 0x70
   385c8:	ldr	r3, [sp, #204]	; 0xcc
   385cc:	add	r5, r3, #4
   385d0:	ldr	r3, [sp, #196]	; 0xc4
   385d4:	add	r4, r3, #4
   385d8:	str	lr, [sp, #12]
   385dc:	mov	r6, #2
   385e0:	mov	fp, #0
   385e4:	b	42320 <GetDataSlab+0x21314>
   385e8:	mov	fp, #0
   385ec:	b	423ac <GetDataSlab+0x213a0>
   385f0:	ldr	r3, [sp, #20]
   385f4:	cmp	r3, #0
   385f8:	ble	3d5c8 <GetDataSlab+0x1c5bc>
   385fc:	mov	r3, #0
   38600:	str	r3, [sp, #16]
   38604:	b	386d8 <GetDataSlab+0x176cc>
   38608:	ldr	r2, [r8]
   3860c:	cmp	r2, #0
   38610:	beq	38628 <GetDataSlab+0x1761c>
   38614:	ldr	r3, [sp, #12]
   38618:	ldr	r3, [r3, #-4]
   3861c:	mul	r3, r3, r2
   38620:	add	r5, r5, r3, lsl #3
   38624:	add	fp, fp, r3
   38628:	add	r9, r9, #1
   3862c:	ldr	r3, [sp, #208]	; 0xd0
   38630:	cmp	r3, r9
   38634:	beq	386c0 <GetDataSlab+0x176b4>
   38638:	ldr	r3, [r6]
   3863c:	add	r3, r3, #1
   38640:	str	r3, [r6]
   38644:	add	r8, r8, #4
   38648:	ldr	r2, [sp, #8]
   3864c:	ldr	r1, [r2, #4]!
   38650:	str	r2, [sp, #8]
   38654:	mov	r0, r3
   38658:	bl	517e8 <__aeabi_idivmod>
   3865c:	cmp	r1, #0
   38660:	bne	386ac <GetDataSlab+0x176a0>
   38664:	mov	r3, #0
   38668:	str	r3, [r6], #4
   3866c:	add	r7, r7, #4
   38670:	str	r7, [sp, #12]
   38674:	ldr	r4, [r7]
   38678:	mov	r1, r4
   3867c:	mov	r0, fp
   38680:	bl	517e8 <__aeabi_idivmod>
   38684:	subs	r3, r1, #0
   38688:	beq	38608 <GetDataSlab+0x175fc>
   3868c:	ldr	r2, [r7, #-4]
   38690:	ldr	r1, [r8]
   38694:	sub	r3, r4, r3
   38698:	mla	r3, r1, r2, r3
   3869c:	add	r5, r5, r3, lsl #3
   386a0:	add	fp, fp, r3
   386a4:	b	38628 <GetDataSlab+0x1761c>
   386a8:	ldr	r9, [sp, #28]
   386ac:	add	r3, sp, #152	; 0x98
   386b0:	add	r3, r3, r9, lsl #2
   386b4:	ldr	r3, [r3, #-120]	; 0xffffff88
   386b8:	add	fp, fp, r3
   386bc:	add	r5, r5, r3, lsl #3
   386c0:	ldr	r3, [sp, #16]
   386c4:	add	r3, r3, sl
   386c8:	str	r3, [sp, #16]
   386cc:	ldr	r2, [sp, #20]
   386d0:	cmp	r3, r2
   386d4:	bge	387a4 <GetDataSlab+0x17798>
   386d8:	ldr	r3, [sp, #196]	; 0xc4
   386dc:	ldr	r3, [r3]
   386e0:	cmp	r3, #0
   386e4:	addne	r5, r5, r3, lsl #3
   386e8:	addne	fp, fp, r3
   386ec:	ldr	r3, [sp, #204]	; 0xcc
   386f0:	ldr	sl, [r3]
   386f4:	cmp	sl, #0
   386f8:	ble	38734 <GetDataSlab+0x17728>
   386fc:	mov	r1, r5
   38700:	ldr	r3, [sp, #4]
   38704:	ldr	r2, [sp, #16]
   38708:	add	r2, r3, r2
   3870c:	mov	r3, #0
   38710:	vldmia	r1!, {d7}
   38714:	vcvt.s32.f64	s15, d7
   38718:	vmov	r0, s15
   3871c:	strb	r0, [r2], #1
   38720:	add	r3, r3, #1
   38724:	ldr	r0, [sp, #204]	; 0xcc
   38728:	ldr	sl, [r0]
   3872c:	cmp	sl, r3
   38730:	bgt	38710 <GetDataSlab+0x17704>
   38734:	ldr	r3, [sp, #192]	; 0xc0
   38738:	ldr	r2, [r3]
   3873c:	ldr	r3, [sp, #196]	; 0xc4
   38740:	ldr	r3, [r3]
   38744:	sub	r3, r2, r3
   38748:	add	fp, fp, r3
   3874c:	add	r5, r5, r3, lsl #3
   38750:	ldr	r3, [sp, #208]	; 0xd0
   38754:	cmp	r3, #1
   38758:	ble	386c0 <GetDataSlab+0x176b4>
   3875c:	ldr	r3, [sp, #76]	; 0x4c
   38760:	add	r3, r3, #1
   38764:	str	r3, [sp, #76]	; 0x4c
   38768:	ldr	r2, [sp, #204]	; 0xcc
   3876c:	ldr	r1, [r2, #4]
   38770:	mov	r0, r3
   38774:	bl	517e8 <__aeabi_idivmod>
   38778:	cmp	r1, #0
   3877c:	bne	386a8 <GetDataSlab+0x1769c>
   38780:	add	r6, sp, #76	; 0x4c
   38784:	ldr	r3, [sp, #204]	; 0xcc
   38788:	add	r3, r3, #4
   3878c:	str	r3, [sp, #8]
   38790:	ldr	r3, [sp, #196]	; 0xc4
   38794:	add	r8, r3, #4
   38798:	add	r7, sp, #112	; 0x70
   3879c:	ldr	r9, [sp, #28]
   387a0:	b	38664 <GetDataSlab+0x17658>
   387a4:	mov	r3, #0
   387a8:	b	24fa8 <GetDataSlab+0x3f9c>
   387ac:	ldr	r2, [r9]
   387b0:	cmp	r2, #0
   387b4:	beq	387cc <GetDataSlab+0x177c0>
   387b8:	ldr	r3, [sp, #16]
   387bc:	ldr	r3, [r3, #-4]
   387c0:	mul	r3, r3, r2
   387c4:	add	r5, r5, r3, lsl #3
   387c8:	add	fp, fp, r3
   387cc:	add	sl, sl, #1
   387d0:	ldr	r3, [sp, #208]	; 0xd0
   387d4:	cmp	r3, sl
   387d8:	beq	38864 <GetDataSlab+0x17858>
   387dc:	ldr	r3, [r6]
   387e0:	add	r3, r3, #1
   387e4:	str	r3, [r6]
   387e8:	add	r9, r9, #4
   387ec:	ldr	r2, [sp, #12]
   387f0:	ldr	r1, [r2, #4]!
   387f4:	str	r2, [sp, #12]
   387f8:	mov	r0, r3
   387fc:	bl	517e8 <__aeabi_idivmod>
   38800:	cmp	r1, #0
   38804:	bne	38850 <GetDataSlab+0x17844>
   38808:	mov	r3, #0
   3880c:	str	r3, [r6], #4
   38810:	add	r7, r7, #4
   38814:	str	r7, [sp, #16]
   38818:	ldr	r4, [r7]
   3881c:	mov	r1, r4
   38820:	mov	r0, fp
   38824:	bl	517e8 <__aeabi_idivmod>
   38828:	subs	r3, r1, #0
   3882c:	beq	387ac <GetDataSlab+0x177a0>
   38830:	ldr	r2, [r7, #-4]
   38834:	ldr	r1, [r9]
   38838:	sub	r3, r4, r3
   3883c:	mla	r3, r1, r2, r3
   38840:	add	r5, r5, r3, lsl #3
   38844:	add	fp, fp, r3
   38848:	b	387cc <GetDataSlab+0x177c0>
   3884c:	mov	sl, #1
   38850:	add	r3, sp, #152	; 0x98
   38854:	add	r3, r3, sl, lsl #2
   38858:	ldr	r3, [r3, #-120]	; 0xffffff88
   3885c:	add	fp, fp, r3
   38860:	add	r5, r5, r3, lsl #3
   38864:	ldr	r3, [sp, #24]
   38868:	ldr	r2, [sp, #8]
   3886c:	add	r3, r3, r2
   38870:	str	r3, [sp, #24]
   38874:	ldr	r2, [sp, #20]
   38878:	cmp	r3, r2
   3887c:	bge	3896c <GetDataSlab+0x17960>
   38880:	ldr	r3, [sp, #196]	; 0xc4
   38884:	ldr	r3, [r3]
   38888:	cmp	r3, #0
   3888c:	addne	r5, r5, r3, lsl #3
   38890:	addne	fp, fp, r3
   38894:	ldr	r3, [sp, #204]	; 0xcc
   38898:	ldr	r3, [r3]
   3889c:	str	r3, [sp, #8]
   388a0:	cmp	r3, #0
   388a4:	ble	388ec <GetDataSlab+0x178e0>
   388a8:	ldr	r3, [sp, #4]
   388ac:	ldr	r2, [sp, #24]
   388b0:	add	r2, r3, r2
   388b4:	mov	r3, #0
   388b8:	vldr	d7, [r5]
   388bc:	vcvt.s32.f64	s15, d7
   388c0:	vmov	r1, s15
   388c4:	strb	r1, [r2], #1
   388c8:	ldr	r1, [r8]
   388cc:	add	r5, r5, r1, lsl #3
   388d0:	add	fp, fp, r1
   388d4:	add	r3, r3, #1
   388d8:	ldr	r1, [sp, #204]	; 0xcc
   388dc:	ldr	r1, [r1]
   388e0:	str	r1, [sp, #8]
   388e4:	cmp	r1, r3
   388e8:	bgt	388b8 <GetDataSlab+0x178ac>
   388ec:	ldr	r3, [r8]
   388f0:	ldr	r2, [sp, #8]
   388f4:	mul	r3, r3, r2
   388f8:	ldr	r2, [sp, #192]	; 0xc0
   388fc:	ldr	r2, [r2]
   38900:	sub	r3, r2, r3
   38904:	ldr	r2, [sp, #196]	; 0xc4
   38908:	ldr	r2, [r2]
   3890c:	sub	r3, r3, r2
   38910:	add	fp, fp, r3
   38914:	add	r5, r5, r3, lsl #3
   38918:	ldr	r3, [sp, #208]	; 0xd0
   3891c:	cmp	r3, #1
   38920:	ble	38864 <GetDataSlab+0x17858>
   38924:	ldr	r3, [sp, #76]	; 0x4c
   38928:	add	r3, r3, #1
   3892c:	str	r3, [sp, #76]	; 0x4c
   38930:	ldr	r2, [sp, #204]	; 0xcc
   38934:	ldr	r1, [r2, #4]
   38938:	mov	r0, r3
   3893c:	bl	517e8 <__aeabi_idivmod>
   38940:	cmp	r1, #0
   38944:	bne	3884c <GetDataSlab+0x17840>
   38948:	add	r6, sp, #76	; 0x4c
   3894c:	ldr	r3, [sp, #204]	; 0xcc
   38950:	add	r3, r3, #4
   38954:	str	r3, [sp, #12]
   38958:	ldr	r3, [sp, #196]	; 0xc4
   3895c:	add	r9, r3, #4
   38960:	add	r7, sp, #112	; 0x70
   38964:	mov	sl, #1
   38968:	b	38808 <GetDataSlab+0x177fc>
   3896c:	mov	r3, #0
   38970:	b	24fa8 <GetDataSlab+0x3f9c>
   38974:	ldr	r3, [r8]
   38978:	str	r3, [sp, #28]
   3897c:	sub	r3, r3, #1
   38980:	str	r3, [sp, #32]
   38984:	ldr	r3, [sp, #192]	; 0xc0
   38988:	ldr	r3, [r3]
   3898c:	str	r3, [sp, #112]	; 0x70
   38990:	ldr	r3, [sp, #204]	; 0xcc
   38994:	ldr	r3, [r3]
   38998:	str	r3, [sp, #20]
   3899c:	ldr	r3, [sp, #208]	; 0xd0
   389a0:	cmp	r3, #1
   389a4:	ble	389d8 <GetDataSlab+0x179cc>
   389a8:	str	r8, [sp, #16]
   389ac:	add	sl, sp, #36	; 0x24
   389b0:	ldr	lr, [sp, #192]	; 0xc0
   389b4:	add	r9, sp, #112	; 0x70
   389b8:	ldr	r3, [sp, #204]	; 0xcc
   389bc:	add	r5, r3, #4
   389c0:	ldr	r3, [sp, #196]	; 0xc4
   389c4:	add	r4, r3, #4
   389c8:	str	lr, [sp, #12]
   389cc:	mov	r6, #2
   389d0:	mov	fp, #0
   389d4:	b	4240c <GetDataSlab+0x21400>
   389d8:	mov	fp, #0
   389dc:	b	42498 <GetDataSlab+0x2148c>
   389e0:	ldr	r3, [sp, #20]
   389e4:	cmp	r3, #0
   389e8:	ble	3d5d0 <GetDataSlab+0x1c5c4>
   389ec:	mov	r3, #0
   389f0:	str	r3, [sp, #16]
   389f4:	b	38ac8 <GetDataSlab+0x17abc>
   389f8:	ldr	r2, [r8]
   389fc:	cmp	r2, #0
   38a00:	beq	38a18 <GetDataSlab+0x17a0c>
   38a04:	ldr	r3, [sp, #12]
   38a08:	ldr	r3, [r3, #-4]
   38a0c:	mul	r3, r3, r2
   38a10:	add	r5, r5, r3, lsl #2
   38a14:	add	fp, fp, r3
   38a18:	add	r9, r9, #1
   38a1c:	ldr	r3, [sp, #208]	; 0xd0
   38a20:	cmp	r3, r9
   38a24:	beq	38ab0 <GetDataSlab+0x17aa4>
   38a28:	ldr	r3, [r6]
   38a2c:	add	r3, r3, #1
   38a30:	str	r3, [r6]
   38a34:	add	r8, r8, #4
   38a38:	ldr	r2, [sp, #8]
   38a3c:	ldr	r1, [r2, #4]!
   38a40:	str	r2, [sp, #8]
   38a44:	mov	r0, r3
   38a48:	bl	517e8 <__aeabi_idivmod>
   38a4c:	cmp	r1, #0
   38a50:	bne	38a9c <GetDataSlab+0x17a90>
   38a54:	mov	r3, #0
   38a58:	str	r3, [r6], #4
   38a5c:	add	r7, r7, #4
   38a60:	str	r7, [sp, #12]
   38a64:	ldr	r4, [r7]
   38a68:	mov	r1, r4
   38a6c:	mov	r0, fp
   38a70:	bl	517e8 <__aeabi_idivmod>
   38a74:	subs	r3, r1, #0
   38a78:	beq	389f8 <GetDataSlab+0x179ec>
   38a7c:	ldr	r2, [r7, #-4]
   38a80:	ldr	r1, [r8]
   38a84:	sub	r3, r4, r3
   38a88:	mla	r3, r1, r2, r3
   38a8c:	add	r5, r5, r3, lsl #2
   38a90:	add	fp, fp, r3
   38a94:	b	38a18 <GetDataSlab+0x17a0c>
   38a98:	ldr	r9, [sp, #28]
   38a9c:	add	r3, sp, #152	; 0x98
   38aa0:	add	r3, r3, r9, lsl #2
   38aa4:	ldr	r3, [r3, #-120]	; 0xffffff88
   38aa8:	add	fp, fp, r3
   38aac:	add	r5, r5, r3, lsl #2
   38ab0:	ldr	r3, [sp, #16]
   38ab4:	add	r3, r3, sl
   38ab8:	str	r3, [sp, #16]
   38abc:	ldr	r2, [sp, #20]
   38ac0:	cmp	r3, r2
   38ac4:	bge	38b94 <GetDataSlab+0x17b88>
   38ac8:	ldr	r3, [sp, #196]	; 0xc4
   38acc:	ldr	r3, [r3]
   38ad0:	cmp	r3, #0
   38ad4:	addne	r5, r5, r3, lsl #2
   38ad8:	addne	fp, fp, r3
   38adc:	ldr	r3, [sp, #204]	; 0xcc
   38ae0:	ldr	sl, [r3]
   38ae4:	cmp	sl, #0
   38ae8:	ble	38b24 <GetDataSlab+0x17b18>
   38aec:	mov	r1, r5
   38af0:	ldr	r3, [sp, #4]
   38af4:	ldr	r2, [sp, #16]
   38af8:	add	r2, r3, r2
   38afc:	mov	r3, #0
   38b00:	vldmia	r1!, {s15}
   38b04:	vcvt.s32.f32	s15, s15
   38b08:	vmov	r0, s15
   38b0c:	strb	r0, [r2], #1
   38b10:	add	r3, r3, #1
   38b14:	ldr	r0, [sp, #204]	; 0xcc
   38b18:	ldr	sl, [r0]
   38b1c:	cmp	sl, r3
   38b20:	bgt	38b00 <GetDataSlab+0x17af4>
   38b24:	ldr	r3, [sp, #192]	; 0xc0
   38b28:	ldr	r2, [r3]
   38b2c:	ldr	r3, [sp, #196]	; 0xc4
   38b30:	ldr	r3, [r3]
   38b34:	sub	r3, r2, r3
   38b38:	add	fp, fp, r3
   38b3c:	add	r5, r5, r3, lsl #2
   38b40:	ldr	r3, [sp, #208]	; 0xd0
   38b44:	cmp	r3, #1
   38b48:	ble	38ab0 <GetDataSlab+0x17aa4>
   38b4c:	ldr	r3, [sp, #76]	; 0x4c
   38b50:	add	r3, r3, #1
   38b54:	str	r3, [sp, #76]	; 0x4c
   38b58:	ldr	r2, [sp, #204]	; 0xcc
   38b5c:	ldr	r1, [r2, #4]
   38b60:	mov	r0, r3
   38b64:	bl	517e8 <__aeabi_idivmod>
   38b68:	cmp	r1, #0
   38b6c:	bne	38a98 <GetDataSlab+0x17a8c>
   38b70:	add	r6, sp, #76	; 0x4c
   38b74:	ldr	r3, [sp, #204]	; 0xcc
   38b78:	add	r3, r3, #4
   38b7c:	str	r3, [sp, #8]
   38b80:	ldr	r3, [sp, #196]	; 0xc4
   38b84:	add	r8, r3, #4
   38b88:	add	r7, sp, #112	; 0x70
   38b8c:	ldr	r9, [sp, #28]
   38b90:	b	38a54 <GetDataSlab+0x17a48>
   38b94:	mov	r3, #0
   38b98:	b	24fa8 <GetDataSlab+0x3f9c>
   38b9c:	ldr	r2, [r9]
   38ba0:	cmp	r2, #0
   38ba4:	beq	38bbc <GetDataSlab+0x17bb0>
   38ba8:	ldr	r3, [sp, #16]
   38bac:	ldr	r3, [r3, #-4]
   38bb0:	mul	r3, r3, r2
   38bb4:	add	r5, r5, r3, lsl #2
   38bb8:	add	fp, fp, r3
   38bbc:	add	sl, sl, #1
   38bc0:	ldr	r3, [sp, #208]	; 0xd0
   38bc4:	cmp	r3, sl
   38bc8:	beq	38c54 <GetDataSlab+0x17c48>
   38bcc:	ldr	r3, [r6]
   38bd0:	add	r3, r3, #1
   38bd4:	str	r3, [r6]
   38bd8:	add	r9, r9, #4
   38bdc:	ldr	r2, [sp, #12]
   38be0:	ldr	r1, [r2, #4]!
   38be4:	str	r2, [sp, #12]
   38be8:	mov	r0, r3
   38bec:	bl	517e8 <__aeabi_idivmod>
   38bf0:	cmp	r1, #0
   38bf4:	bne	38c40 <GetDataSlab+0x17c34>
   38bf8:	mov	r3, #0
   38bfc:	str	r3, [r6], #4
   38c00:	add	r7, r7, #4
   38c04:	str	r7, [sp, #16]
   38c08:	ldr	r4, [r7]
   38c0c:	mov	r1, r4
   38c10:	mov	r0, fp
   38c14:	bl	517e8 <__aeabi_idivmod>
   38c18:	subs	r3, r1, #0
   38c1c:	beq	38b9c <GetDataSlab+0x17b90>
   38c20:	ldr	r2, [r7, #-4]
   38c24:	ldr	r1, [r9]
   38c28:	sub	r3, r4, r3
   38c2c:	mla	r3, r1, r2, r3
   38c30:	add	r5, r5, r3, lsl #2
   38c34:	add	fp, fp, r3
   38c38:	b	38bbc <GetDataSlab+0x17bb0>
   38c3c:	mov	sl, #1
   38c40:	add	r3, sp, #152	; 0x98
   38c44:	add	r3, r3, sl, lsl #2
   38c48:	ldr	r3, [r3, #-120]	; 0xffffff88
   38c4c:	add	fp, fp, r3
   38c50:	add	r5, r5, r3, lsl #2
   38c54:	ldr	r3, [sp, #24]
   38c58:	ldr	r2, [sp, #8]
   38c5c:	add	r3, r3, r2
   38c60:	str	r3, [sp, #24]
   38c64:	ldr	r2, [sp, #20]
   38c68:	cmp	r3, r2
   38c6c:	bge	38d5c <GetDataSlab+0x17d50>
   38c70:	ldr	r3, [sp, #196]	; 0xc4
   38c74:	ldr	r3, [r3]
   38c78:	cmp	r3, #0
   38c7c:	addne	r5, r5, r3, lsl #2
   38c80:	addne	fp, fp, r3
   38c84:	ldr	r3, [sp, #204]	; 0xcc
   38c88:	ldr	r3, [r3]
   38c8c:	str	r3, [sp, #8]
   38c90:	cmp	r3, #0
   38c94:	ble	38cdc <GetDataSlab+0x17cd0>
   38c98:	ldr	r3, [sp, #4]
   38c9c:	ldr	r2, [sp, #24]
   38ca0:	add	r2, r3, r2
   38ca4:	mov	r3, #0
   38ca8:	vldr	s15, [r5]
   38cac:	vcvt.s32.f32	s15, s15
   38cb0:	vmov	r1, s15
   38cb4:	strb	r1, [r2], #1
   38cb8:	ldr	r1, [r8]
   38cbc:	add	r5, r5, r1, lsl #2
   38cc0:	add	fp, fp, r1
   38cc4:	add	r3, r3, #1
   38cc8:	ldr	r1, [sp, #204]	; 0xcc
   38ccc:	ldr	r1, [r1]
   38cd0:	str	r1, [sp, #8]
   38cd4:	cmp	r1, r3
   38cd8:	bgt	38ca8 <GetDataSlab+0x17c9c>
   38cdc:	ldr	r3, [r8]
   38ce0:	ldr	r2, [sp, #8]
   38ce4:	mul	r3, r3, r2
   38ce8:	ldr	r2, [sp, #192]	; 0xc0
   38cec:	ldr	r2, [r2]
   38cf0:	sub	r3, r2, r3
   38cf4:	ldr	r2, [sp, #196]	; 0xc4
   38cf8:	ldr	r2, [r2]
   38cfc:	sub	r3, r3, r2
   38d00:	add	fp, fp, r3
   38d04:	add	r5, r5, r3, lsl #2
   38d08:	ldr	r3, [sp, #208]	; 0xd0
   38d0c:	cmp	r3, #1
   38d10:	ble	38c54 <GetDataSlab+0x17c48>
   38d14:	ldr	r3, [sp, #76]	; 0x4c
   38d18:	add	r3, r3, #1
   38d1c:	str	r3, [sp, #76]	; 0x4c
   38d20:	ldr	r2, [sp, #204]	; 0xcc
   38d24:	ldr	r1, [r2, #4]
   38d28:	mov	r0, r3
   38d2c:	bl	517e8 <__aeabi_idivmod>
   38d30:	cmp	r1, #0
   38d34:	bne	38c3c <GetDataSlab+0x17c30>
   38d38:	add	r6, sp, #76	; 0x4c
   38d3c:	ldr	r3, [sp, #204]	; 0xcc
   38d40:	add	r3, r3, #4
   38d44:	str	r3, [sp, #12]
   38d48:	ldr	r3, [sp, #196]	; 0xc4
   38d4c:	add	r9, r3, #4
   38d50:	add	r7, sp, #112	; 0x70
   38d54:	mov	sl, #1
   38d58:	b	38bf8 <GetDataSlab+0x17bec>
   38d5c:	mov	r3, #0
   38d60:	b	24fa8 <GetDataSlab+0x3f9c>
   38d64:	ldr	r3, [r8]
   38d68:	str	r3, [sp, #28]
   38d6c:	sub	r3, r3, #1
   38d70:	str	r3, [sp, #32]
   38d74:	ldr	r3, [sp, #192]	; 0xc0
   38d78:	ldr	r3, [r3]
   38d7c:	str	r3, [sp, #112]	; 0x70
   38d80:	ldr	r3, [sp, #204]	; 0xcc
   38d84:	ldr	r3, [r3]
   38d88:	str	r3, [sp, #20]
   38d8c:	ldr	r3, [sp, #208]	; 0xd0
   38d90:	cmp	r3, #1
   38d94:	ble	38dc8 <GetDataSlab+0x17dbc>
   38d98:	str	r8, [sp, #16]
   38d9c:	add	sl, sp, #36	; 0x24
   38da0:	ldr	lr, [sp, #192]	; 0xc0
   38da4:	add	r9, sp, #112	; 0x70
   38da8:	ldr	r3, [sp, #204]	; 0xcc
   38dac:	add	r5, r3, #4
   38db0:	ldr	r3, [sp, #196]	; 0xc4
   38db4:	add	r4, r3, #4
   38db8:	str	lr, [sp, #12]
   38dbc:	mov	r6, #2
   38dc0:	mov	fp, #0
   38dc4:	b	424f8 <GetDataSlab+0x214ec>
   38dc8:	mov	fp, #0
   38dcc:	b	42584 <GetDataSlab+0x21578>
   38dd0:	ldr	r3, [sp, #20]
   38dd4:	cmp	r3, #0
   38dd8:	ble	3d5d8 <GetDataSlab+0x1c5cc>
   38ddc:	mov	r3, #0
   38de0:	str	r3, [sp, #16]
   38de4:	b	38eb8 <GetDataSlab+0x17eac>
   38de8:	ldr	r2, [r8]
   38dec:	cmp	r2, #0
   38df0:	beq	38e08 <GetDataSlab+0x17dfc>
   38df4:	ldr	r3, [sp, #12]
   38df8:	ldr	r3, [r3, #-4]
   38dfc:	mul	r3, r3, r2
   38e00:	add	r5, r5, r3, lsl #2
   38e04:	add	fp, fp, r3
   38e08:	add	r9, r9, #1
   38e0c:	ldr	r3, [sp, #208]	; 0xd0
   38e10:	cmp	r3, r9
   38e14:	beq	38ea0 <GetDataSlab+0x17e94>
   38e18:	ldr	r3, [r6]
   38e1c:	add	r3, r3, #1
   38e20:	str	r3, [r6]
   38e24:	add	r8, r8, #4
   38e28:	ldr	r2, [sp, #8]
   38e2c:	ldr	r1, [r2, #4]!
   38e30:	str	r2, [sp, #8]
   38e34:	mov	r0, r3
   38e38:	bl	517e8 <__aeabi_idivmod>
   38e3c:	cmp	r1, #0
   38e40:	bne	38e8c <GetDataSlab+0x17e80>
   38e44:	mov	r3, #0
   38e48:	str	r3, [r6], #4
   38e4c:	add	r7, r7, #4
   38e50:	str	r7, [sp, #12]
   38e54:	ldr	r4, [r7]
   38e58:	mov	r1, r4
   38e5c:	mov	r0, fp
   38e60:	bl	517e8 <__aeabi_idivmod>
   38e64:	subs	r3, r1, #0
   38e68:	beq	38de8 <GetDataSlab+0x17ddc>
   38e6c:	ldr	r2, [r7, #-4]
   38e70:	ldr	r1, [r8]
   38e74:	sub	r3, r4, r3
   38e78:	mla	r3, r1, r2, r3
   38e7c:	add	r5, r5, r3, lsl #2
   38e80:	add	fp, fp, r3
   38e84:	b	38e08 <GetDataSlab+0x17dfc>
   38e88:	ldr	r9, [sp, #28]
   38e8c:	add	r3, sp, #152	; 0x98
   38e90:	add	r3, r3, r9, lsl #2
   38e94:	ldr	r3, [r3, #-120]	; 0xffffff88
   38e98:	add	fp, fp, r3
   38e9c:	add	r5, r5, r3, lsl #2
   38ea0:	ldr	r3, [sp, #16]
   38ea4:	add	r3, r3, sl
   38ea8:	str	r3, [sp, #16]
   38eac:	ldr	r2, [sp, #20]
   38eb0:	cmp	r3, r2
   38eb4:	bge	38f7c <GetDataSlab+0x17f70>
   38eb8:	ldr	r3, [sp, #196]	; 0xc4
   38ebc:	ldr	r3, [r3]
   38ec0:	cmp	r3, #0
   38ec4:	addne	r5, r5, r3, lsl #2
   38ec8:	addne	fp, fp, r3
   38ecc:	ldr	r3, [sp, #204]	; 0xcc
   38ed0:	ldr	sl, [r3]
   38ed4:	cmp	sl, #0
   38ed8:	ble	38f0c <GetDataSlab+0x17f00>
   38edc:	sub	r0, r5, #4
   38ee0:	ldr	r3, [sp, #4]
   38ee4:	ldr	r2, [sp, #16]
   38ee8:	add	r1, r3, r2
   38eec:	mov	r2, #0
   38ef0:	ldr	r3, [r0, #4]!
   38ef4:	strb	r3, [r1], #1
   38ef8:	add	r2, r2, #1
   38efc:	ldr	r3, [sp, #204]	; 0xcc
   38f00:	ldr	sl, [r3]
   38f04:	cmp	sl, r2
   38f08:	bgt	38ef0 <GetDataSlab+0x17ee4>
   38f0c:	ldr	r3, [sp, #192]	; 0xc0
   38f10:	ldr	r2, [r3]
   38f14:	ldr	r3, [sp, #196]	; 0xc4
   38f18:	ldr	r3, [r3]
   38f1c:	sub	r3, r2, r3
   38f20:	add	fp, fp, r3
   38f24:	add	r5, r5, r3, lsl #2
   38f28:	ldr	r3, [sp, #208]	; 0xd0
   38f2c:	cmp	r3, #1
   38f30:	ble	38ea0 <GetDataSlab+0x17e94>
   38f34:	ldr	r3, [sp, #76]	; 0x4c
   38f38:	add	r3, r3, #1
   38f3c:	str	r3, [sp, #76]	; 0x4c
   38f40:	ldr	r2, [sp, #204]	; 0xcc
   38f44:	ldr	r1, [r2, #4]
   38f48:	mov	r0, r3
   38f4c:	bl	517e8 <__aeabi_idivmod>
   38f50:	cmp	r1, #0
   38f54:	bne	38e88 <GetDataSlab+0x17e7c>
   38f58:	add	r6, sp, #76	; 0x4c
   38f5c:	ldr	r3, [sp, #204]	; 0xcc
   38f60:	add	r3, r3, #4
   38f64:	str	r3, [sp, #8]
   38f68:	ldr	r3, [sp, #196]	; 0xc4
   38f6c:	add	r8, r3, #4
   38f70:	add	r7, sp, #112	; 0x70
   38f74:	ldr	r9, [sp, #28]
   38f78:	b	38e44 <GetDataSlab+0x17e38>
   38f7c:	mov	r3, #0
   38f80:	b	24fa8 <GetDataSlab+0x3f9c>
   38f84:	ldr	r2, [r9]
   38f88:	cmp	r2, #0
   38f8c:	beq	38fa4 <GetDataSlab+0x17f98>
   38f90:	ldr	r3, [sp, #16]
   38f94:	ldr	r3, [r3, #-4]
   38f98:	mul	r3, r3, r2
   38f9c:	add	r5, r5, r3, lsl #2
   38fa0:	add	fp, fp, r3
   38fa4:	add	sl, sl, #1
   38fa8:	ldr	r3, [sp, #208]	; 0xd0
   38fac:	cmp	r3, sl
   38fb0:	beq	3903c <GetDataSlab+0x18030>
   38fb4:	ldr	r3, [r6]
   38fb8:	add	r3, r3, #1
   38fbc:	str	r3, [r6]
   38fc0:	add	r9, r9, #4
   38fc4:	ldr	r2, [sp, #12]
   38fc8:	ldr	r1, [r2, #4]!
   38fcc:	str	r2, [sp, #12]
   38fd0:	mov	r0, r3
   38fd4:	bl	517e8 <__aeabi_idivmod>
   38fd8:	cmp	r1, #0
   38fdc:	bne	39028 <GetDataSlab+0x1801c>
   38fe0:	mov	r3, #0
   38fe4:	str	r3, [r6], #4
   38fe8:	add	r7, r7, #4
   38fec:	str	r7, [sp, #16]
   38ff0:	ldr	r4, [r7]
   38ff4:	mov	r1, r4
   38ff8:	mov	r0, fp
   38ffc:	bl	517e8 <__aeabi_idivmod>
   39000:	subs	r3, r1, #0
   39004:	beq	38f84 <GetDataSlab+0x17f78>
   39008:	ldr	r2, [r7, #-4]
   3900c:	ldr	r1, [r9]
   39010:	sub	r3, r4, r3
   39014:	mla	r3, r1, r2, r3
   39018:	add	r5, r5, r3, lsl #2
   3901c:	add	fp, fp, r3
   39020:	b	38fa4 <GetDataSlab+0x17f98>
   39024:	mov	sl, #1
   39028:	add	r3, sp, #152	; 0x98
   3902c:	add	r3, r3, sl, lsl #2
   39030:	ldr	r3, [r3, #-120]	; 0xffffff88
   39034:	add	fp, fp, r3
   39038:	add	r5, r5, r3, lsl #2
   3903c:	ldr	r3, [sp, #24]
   39040:	ldr	r2, [sp, #8]
   39044:	add	r3, r3, r2
   39048:	str	r3, [sp, #24]
   3904c:	ldr	r2, [sp, #20]
   39050:	cmp	r3, r2
   39054:	bge	3913c <GetDataSlab+0x18130>
   39058:	ldr	r3, [sp, #196]	; 0xc4
   3905c:	ldr	r3, [r3]
   39060:	cmp	r3, #0
   39064:	addne	r5, r5, r3, lsl #2
   39068:	addne	fp, fp, r3
   3906c:	ldr	r3, [sp, #204]	; 0xcc
   39070:	ldr	r3, [r3]
   39074:	str	r3, [sp, #8]
   39078:	cmp	r3, #0
   3907c:	ble	390bc <GetDataSlab+0x180b0>
   39080:	ldr	r3, [sp, #4]
   39084:	ldr	r2, [sp, #24]
   39088:	add	r2, r3, r2
   3908c:	mov	r3, #0
   39090:	ldr	r1, [r5]
   39094:	strb	r1, [r2], #1
   39098:	ldr	r1, [r8]
   3909c:	add	r5, r5, r1, lsl #2
   390a0:	add	fp, fp, r1
   390a4:	add	r3, r3, #1
   390a8:	ldr	r1, [sp, #204]	; 0xcc
   390ac:	ldr	r1, [r1]
   390b0:	str	r1, [sp, #8]
   390b4:	cmp	r1, r3
   390b8:	bgt	39090 <GetDataSlab+0x18084>
   390bc:	ldr	r3, [r8]
   390c0:	ldr	r2, [sp, #8]
   390c4:	mul	r3, r3, r2
   390c8:	ldr	r2, [sp, #192]	; 0xc0
   390cc:	ldr	r2, [r2]
   390d0:	sub	r3, r2, r3
   390d4:	ldr	r2, [sp, #196]	; 0xc4
   390d8:	ldr	r2, [r2]
   390dc:	sub	r3, r3, r2
   390e0:	add	fp, fp, r3
   390e4:	add	r5, r5, r3, lsl #2
   390e8:	ldr	r3, [sp, #208]	; 0xd0
   390ec:	cmp	r3, #1
   390f0:	ble	3903c <GetDataSlab+0x18030>
   390f4:	ldr	r3, [sp, #76]	; 0x4c
   390f8:	add	r3, r3, #1
   390fc:	str	r3, [sp, #76]	; 0x4c
   39100:	ldr	r2, [sp, #204]	; 0xcc
   39104:	ldr	r1, [r2, #4]
   39108:	mov	r0, r3
   3910c:	bl	517e8 <__aeabi_idivmod>
   39110:	cmp	r1, #0
   39114:	bne	39024 <GetDataSlab+0x18018>
   39118:	add	r6, sp, #76	; 0x4c
   3911c:	ldr	r3, [sp, #204]	; 0xcc
   39120:	add	r3, r3, #4
   39124:	str	r3, [sp, #12]
   39128:	ldr	r3, [sp, #196]	; 0xc4
   3912c:	add	r9, r3, #4
   39130:	add	r7, sp, #112	; 0x70
   39134:	mov	sl, #1
   39138:	b	38fe0 <GetDataSlab+0x17fd4>
   3913c:	mov	r3, #0
   39140:	b	24fa8 <GetDataSlab+0x3f9c>
   39144:	ldr	r3, [r8]
   39148:	str	r3, [sp, #28]
   3914c:	sub	r3, r3, #1
   39150:	str	r3, [sp, #32]
   39154:	ldr	r3, [sp, #192]	; 0xc0
   39158:	ldr	r3, [r3]
   3915c:	str	r3, [sp, #112]	; 0x70
   39160:	ldr	r3, [sp, #204]	; 0xcc
   39164:	ldr	r3, [r3]
   39168:	str	r3, [sp, #20]
   3916c:	ldr	r3, [sp, #208]	; 0xd0
   39170:	cmp	r3, #1
   39174:	ble	391a8 <GetDataSlab+0x1819c>
   39178:	str	r8, [sp, #16]
   3917c:	add	sl, sp, #36	; 0x24
   39180:	ldr	lr, [sp, #192]	; 0xc0
   39184:	add	r9, sp, #112	; 0x70
   39188:	ldr	r3, [sp, #204]	; 0xcc
   3918c:	add	r5, r3, #4
   39190:	ldr	r3, [sp, #196]	; 0xc4
   39194:	add	r4, r3, #4
   39198:	str	lr, [sp, #12]
   3919c:	mov	r6, #2
   391a0:	mov	fp, #0
   391a4:	b	425e4 <GetDataSlab+0x215d8>
   391a8:	mov	fp, #0
   391ac:	b	42670 <GetDataSlab+0x21664>
   391b0:	ldr	r3, [sp, #20]
   391b4:	cmp	r3, #0
   391b8:	ble	3d5e0 <GetDataSlab+0x1c5d4>
   391bc:	mov	r3, #0
   391c0:	str	r3, [sp, #16]
   391c4:	b	39298 <GetDataSlab+0x1828c>
   391c8:	ldr	r2, [r8]
   391cc:	cmp	r2, #0
   391d0:	beq	391e8 <GetDataSlab+0x181dc>
   391d4:	ldr	r3, [sp, #12]
   391d8:	ldr	r3, [r3, #-4]
   391dc:	mul	r3, r3, r2
   391e0:	add	r5, r5, r3, lsl #2
   391e4:	add	fp, fp, r3
   391e8:	add	r9, r9, #1
   391ec:	ldr	r3, [sp, #208]	; 0xd0
   391f0:	cmp	r3, r9
   391f4:	beq	39280 <GetDataSlab+0x18274>
   391f8:	ldr	r3, [r6]
   391fc:	add	r3, r3, #1
   39200:	str	r3, [r6]
   39204:	add	r8, r8, #4
   39208:	ldr	r2, [sp, #8]
   3920c:	ldr	r1, [r2, #4]!
   39210:	str	r2, [sp, #8]
   39214:	mov	r0, r3
   39218:	bl	517e8 <__aeabi_idivmod>
   3921c:	cmp	r1, #0
   39220:	bne	3926c <GetDataSlab+0x18260>
   39224:	mov	r3, #0
   39228:	str	r3, [r6], #4
   3922c:	add	r7, r7, #4
   39230:	str	r7, [sp, #12]
   39234:	ldr	r4, [r7]
   39238:	mov	r1, r4
   3923c:	mov	r0, fp
   39240:	bl	517e8 <__aeabi_idivmod>
   39244:	subs	r3, r1, #0
   39248:	beq	391c8 <GetDataSlab+0x181bc>
   3924c:	ldr	r2, [r7, #-4]
   39250:	ldr	r1, [r8]
   39254:	sub	r3, r4, r3
   39258:	mla	r3, r1, r2, r3
   3925c:	add	r5, r5, r3, lsl #2
   39260:	add	fp, fp, r3
   39264:	b	391e8 <GetDataSlab+0x181dc>
   39268:	ldr	r9, [sp, #28]
   3926c:	add	r3, sp, #152	; 0x98
   39270:	add	r3, r3, r9, lsl #2
   39274:	ldr	r3, [r3, #-120]	; 0xffffff88
   39278:	add	fp, fp, r3
   3927c:	add	r5, r5, r3, lsl #2
   39280:	ldr	r3, [sp, #16]
   39284:	add	r3, r3, sl
   39288:	str	r3, [sp, #16]
   3928c:	ldr	r2, [sp, #20]
   39290:	cmp	r3, r2
   39294:	bge	3935c <GetDataSlab+0x18350>
   39298:	ldr	r3, [sp, #196]	; 0xc4
   3929c:	ldr	r3, [r3]
   392a0:	cmp	r3, #0
   392a4:	addne	r5, r5, r3, lsl #2
   392a8:	addne	fp, fp, r3
   392ac:	ldr	r3, [sp, #204]	; 0xcc
   392b0:	ldr	sl, [r3]
   392b4:	cmp	sl, #0
   392b8:	ble	392ec <GetDataSlab+0x182e0>
   392bc:	sub	r0, r5, #4
   392c0:	ldr	r3, [sp, #4]
   392c4:	ldr	r2, [sp, #16]
   392c8:	add	r1, r3, r2
   392cc:	mov	r2, #0
   392d0:	ldr	r3, [r0, #4]!
   392d4:	strb	r3, [r1], #1
   392d8:	add	r2, r2, #1
   392dc:	ldr	r3, [sp, #204]	; 0xcc
   392e0:	ldr	sl, [r3]
   392e4:	cmp	sl, r2
   392e8:	bgt	392d0 <GetDataSlab+0x182c4>
   392ec:	ldr	r3, [sp, #192]	; 0xc0
   392f0:	ldr	r2, [r3]
   392f4:	ldr	r3, [sp, #196]	; 0xc4
   392f8:	ldr	r3, [r3]
   392fc:	sub	r3, r2, r3
   39300:	add	fp, fp, r3
   39304:	add	r5, r5, r3, lsl #2
   39308:	ldr	r3, [sp, #208]	; 0xd0
   3930c:	cmp	r3, #1
   39310:	ble	39280 <GetDataSlab+0x18274>
   39314:	ldr	r3, [sp, #76]	; 0x4c
   39318:	add	r3, r3, #1
   3931c:	str	r3, [sp, #76]	; 0x4c
   39320:	ldr	r2, [sp, #204]	; 0xcc
   39324:	ldr	r1, [r2, #4]
   39328:	mov	r0, r3
   3932c:	bl	517e8 <__aeabi_idivmod>
   39330:	cmp	r1, #0
   39334:	bne	39268 <GetDataSlab+0x1825c>
   39338:	add	r6, sp, #76	; 0x4c
   3933c:	ldr	r3, [sp, #204]	; 0xcc
   39340:	add	r3, r3, #4
   39344:	str	r3, [sp, #8]
   39348:	ldr	r3, [sp, #196]	; 0xc4
   3934c:	add	r8, r3, #4
   39350:	add	r7, sp, #112	; 0x70
   39354:	ldr	r9, [sp, #28]
   39358:	b	39224 <GetDataSlab+0x18218>
   3935c:	mov	r3, #0
   39360:	b	24fa8 <GetDataSlab+0x3f9c>
   39364:	ldr	r2, [r9]
   39368:	cmp	r2, #0
   3936c:	beq	39384 <GetDataSlab+0x18378>
   39370:	ldr	r3, [sp, #16]
   39374:	ldr	r3, [r3, #-4]
   39378:	mul	r3, r3, r2
   3937c:	add	r5, r5, r3, lsl #2
   39380:	add	fp, fp, r3
   39384:	add	sl, sl, #1
   39388:	ldr	r3, [sp, #208]	; 0xd0
   3938c:	cmp	r3, sl
   39390:	beq	3941c <GetDataSlab+0x18410>
   39394:	ldr	r3, [r6]
   39398:	add	r3, r3, #1
   3939c:	str	r3, [r6]
   393a0:	add	r9, r9, #4
   393a4:	ldr	r2, [sp, #12]
   393a8:	ldr	r1, [r2, #4]!
   393ac:	str	r2, [sp, #12]
   393b0:	mov	r0, r3
   393b4:	bl	517e8 <__aeabi_idivmod>
   393b8:	cmp	r1, #0
   393bc:	bne	39408 <GetDataSlab+0x183fc>
   393c0:	mov	r3, #0
   393c4:	str	r3, [r6], #4
   393c8:	add	r7, r7, #4
   393cc:	str	r7, [sp, #16]
   393d0:	ldr	r4, [r7]
   393d4:	mov	r1, r4
   393d8:	mov	r0, fp
   393dc:	bl	517e8 <__aeabi_idivmod>
   393e0:	subs	r3, r1, #0
   393e4:	beq	39364 <GetDataSlab+0x18358>
   393e8:	ldr	r2, [r7, #-4]
   393ec:	ldr	r1, [r9]
   393f0:	sub	r3, r4, r3
   393f4:	mla	r3, r1, r2, r3
   393f8:	add	r5, r5, r3, lsl #2
   393fc:	add	fp, fp, r3
   39400:	b	39384 <GetDataSlab+0x18378>
   39404:	mov	sl, #1
   39408:	add	r3, sp, #152	; 0x98
   3940c:	add	r3, r3, sl, lsl #2
   39410:	ldr	r3, [r3, #-120]	; 0xffffff88
   39414:	add	fp, fp, r3
   39418:	add	r5, r5, r3, lsl #2
   3941c:	ldr	r3, [sp, #24]
   39420:	ldr	r2, [sp, #8]
   39424:	add	r3, r3, r2
   39428:	str	r3, [sp, #24]
   3942c:	ldr	r2, [sp, #20]
   39430:	cmp	r3, r2
   39434:	bge	3951c <GetDataSlab+0x18510>
   39438:	ldr	r3, [sp, #196]	; 0xc4
   3943c:	ldr	r3, [r3]
   39440:	cmp	r3, #0
   39444:	addne	r5, r5, r3, lsl #2
   39448:	addne	fp, fp, r3
   3944c:	ldr	r3, [sp, #204]	; 0xcc
   39450:	ldr	r3, [r3]
   39454:	str	r3, [sp, #8]
   39458:	cmp	r3, #0
   3945c:	ble	3949c <GetDataSlab+0x18490>
   39460:	ldr	r3, [sp, #4]
   39464:	ldr	r2, [sp, #24]
   39468:	add	r2, r3, r2
   3946c:	mov	r3, #0
   39470:	ldr	r1, [r5]
   39474:	strb	r1, [r2], #1
   39478:	ldr	r1, [r8]
   3947c:	add	r5, r5, r1, lsl #2
   39480:	add	fp, fp, r1
   39484:	add	r3, r3, #1
   39488:	ldr	r1, [sp, #204]	; 0xcc
   3948c:	ldr	r1, [r1]
   39490:	str	r1, [sp, #8]
   39494:	cmp	r1, r3
   39498:	bgt	39470 <GetDataSlab+0x18464>
   3949c:	ldr	r3, [r8]
   394a0:	ldr	r2, [sp, #8]
   394a4:	mul	r3, r3, r2
   394a8:	ldr	r2, [sp, #192]	; 0xc0
   394ac:	ldr	r2, [r2]
   394b0:	sub	r3, r2, r3
   394b4:	ldr	r2, [sp, #196]	; 0xc4
   394b8:	ldr	r2, [r2]
   394bc:	sub	r3, r3, r2
   394c0:	add	fp, fp, r3
   394c4:	add	r5, r5, r3, lsl #2
   394c8:	ldr	r3, [sp, #208]	; 0xd0
   394cc:	cmp	r3, #1
   394d0:	ble	3941c <GetDataSlab+0x18410>
   394d4:	ldr	r3, [sp, #76]	; 0x4c
   394d8:	add	r3, r3, #1
   394dc:	str	r3, [sp, #76]	; 0x4c
   394e0:	ldr	r2, [sp, #204]	; 0xcc
   394e4:	ldr	r1, [r2, #4]
   394e8:	mov	r0, r3
   394ec:	bl	517e8 <__aeabi_idivmod>
   394f0:	cmp	r1, #0
   394f4:	bne	39404 <GetDataSlab+0x183f8>
   394f8:	add	r6, sp, #76	; 0x4c
   394fc:	ldr	r3, [sp, #204]	; 0xcc
   39500:	add	r3, r3, #4
   39504:	str	r3, [sp, #12]
   39508:	ldr	r3, [sp, #196]	; 0xc4
   3950c:	add	r9, r3, #4
   39510:	add	r7, sp, #112	; 0x70
   39514:	mov	sl, #1
   39518:	b	393c0 <GetDataSlab+0x183b4>
   3951c:	mov	r3, #0
   39520:	b	24fa8 <GetDataSlab+0x3f9c>
   39524:	ldr	r3, [r8]
   39528:	str	r3, [sp, #28]
   3952c:	sub	r3, r3, #1
   39530:	str	r3, [sp, #32]
   39534:	ldr	r3, [sp, #192]	; 0xc0
   39538:	ldr	r3, [r3]
   3953c:	str	r3, [sp, #112]	; 0x70
   39540:	ldr	r3, [sp, #204]	; 0xcc
   39544:	ldr	r3, [r3]
   39548:	str	r3, [sp, #20]
   3954c:	ldr	r3, [sp, #208]	; 0xd0
   39550:	cmp	r3, #1
   39554:	ble	39588 <GetDataSlab+0x1857c>
   39558:	str	r8, [sp, #16]
   3955c:	add	sl, sp, #36	; 0x24
   39560:	ldr	lr, [sp, #192]	; 0xc0
   39564:	add	r9, sp, #112	; 0x70
   39568:	ldr	r3, [sp, #204]	; 0xcc
   3956c:	add	r5, r3, #4
   39570:	ldr	r3, [sp, #196]	; 0xc4
   39574:	add	r4, r3, #4
   39578:	str	lr, [sp, #12]
   3957c:	mov	r6, #2
   39580:	mov	fp, #0
   39584:	b	426d0 <GetDataSlab+0x216c4>
   39588:	mov	fp, #0
   3958c:	b	4275c <GetDataSlab+0x21750>
   39590:	ldr	r3, [sp, #20]
   39594:	cmp	r3, #0
   39598:	ble	3d5e8 <GetDataSlab+0x1c5dc>
   3959c:	mov	r3, #0
   395a0:	str	r3, [sp, #16]
   395a4:	b	39678 <GetDataSlab+0x1866c>
   395a8:	ldr	r2, [r8]
   395ac:	cmp	r2, #0
   395b0:	beq	395c8 <GetDataSlab+0x185bc>
   395b4:	ldr	r3, [sp, #12]
   395b8:	ldr	r3, [r3, #-4]
   395bc:	mul	r3, r3, r2
   395c0:	add	r6, r6, r3, lsl #1
   395c4:	add	fp, fp, r3
   395c8:	add	r9, r9, #1
   395cc:	ldr	r3, [sp, #208]	; 0xd0
   395d0:	cmp	r3, r9
   395d4:	beq	39660 <GetDataSlab+0x18654>
   395d8:	ldr	r3, [r5]
   395dc:	add	r3, r3, #1
   395e0:	str	r3, [r5]
   395e4:	add	r8, r8, #4
   395e8:	ldr	r2, [sp, #8]
   395ec:	ldr	r1, [r2, #4]!
   395f0:	str	r2, [sp, #8]
   395f4:	mov	r0, r3
   395f8:	bl	517e8 <__aeabi_idivmod>
   395fc:	cmp	r1, #0
   39600:	bne	3964c <GetDataSlab+0x18640>
   39604:	mov	r3, #0
   39608:	str	r3, [r5], #4
   3960c:	add	r7, r7, #4
   39610:	str	r7, [sp, #12]
   39614:	ldr	r4, [r7]
   39618:	mov	r1, r4
   3961c:	mov	r0, fp
   39620:	bl	517e8 <__aeabi_idivmod>
   39624:	subs	r3, r1, #0
   39628:	beq	395a8 <GetDataSlab+0x1859c>
   3962c:	ldr	r2, [r7, #-4]
   39630:	ldr	r1, [r8]
   39634:	sub	r3, r4, r3
   39638:	mla	r3, r1, r2, r3
   3963c:	add	r6, r6, r3, lsl #1
   39640:	add	fp, fp, r3
   39644:	b	395c8 <GetDataSlab+0x185bc>
   39648:	ldr	r9, [sp, #28]
   3964c:	add	r3, sp, #152	; 0x98
   39650:	add	r3, r3, r9, lsl #2
   39654:	ldr	r3, [r3, #-120]	; 0xffffff88
   39658:	add	fp, fp, r3
   3965c:	add	r6, r6, r3, lsl #1
   39660:	ldr	r3, [sp, #16]
   39664:	add	r3, r3, sl
   39668:	str	r3, [sp, #16]
   3966c:	ldr	r2, [sp, #20]
   39670:	cmp	r3, r2
   39674:	bge	3973c <GetDataSlab+0x18730>
   39678:	ldr	r3, [sp, #196]	; 0xc4
   3967c:	ldr	r3, [r3]
   39680:	cmp	r3, #0
   39684:	addne	r6, r6, r3, lsl #1
   39688:	addne	fp, fp, r3
   3968c:	ldr	r3, [sp, #204]	; 0xcc
   39690:	ldr	sl, [r3]
   39694:	cmp	sl, #0
   39698:	ble	396cc <GetDataSlab+0x186c0>
   3969c:	sub	r0, r6, #2
   396a0:	ldr	r3, [sp, #4]
   396a4:	ldr	r2, [sp, #16]
   396a8:	add	r1, r3, r2
   396ac:	mov	r2, #0
   396b0:	ldrh	r3, [r0, #2]!
   396b4:	strb	r3, [r1], #1
   396b8:	add	r2, r2, #1
   396bc:	ldr	r3, [sp, #204]	; 0xcc
   396c0:	ldr	sl, [r3]
   396c4:	cmp	sl, r2
   396c8:	bgt	396b0 <GetDataSlab+0x186a4>
   396cc:	ldr	r3, [sp, #192]	; 0xc0
   396d0:	ldr	r2, [r3]
   396d4:	ldr	r3, [sp, #196]	; 0xc4
   396d8:	ldr	r3, [r3]
   396dc:	sub	r3, r2, r3
   396e0:	add	fp, fp, r3
   396e4:	add	r6, r6, r3, lsl #1
   396e8:	ldr	r3, [sp, #208]	; 0xd0
   396ec:	cmp	r3, #1
   396f0:	ble	39660 <GetDataSlab+0x18654>
   396f4:	ldr	r3, [sp, #76]	; 0x4c
   396f8:	add	r3, r3, #1
   396fc:	str	r3, [sp, #76]	; 0x4c
   39700:	ldr	r2, [sp, #204]	; 0xcc
   39704:	ldr	r1, [r2, #4]
   39708:	mov	r0, r3
   3970c:	bl	517e8 <__aeabi_idivmod>
   39710:	cmp	r1, #0
   39714:	bne	39648 <GetDataSlab+0x1863c>
   39718:	add	r5, sp, #76	; 0x4c
   3971c:	ldr	r3, [sp, #204]	; 0xcc
   39720:	add	r3, r3, #4
   39724:	str	r3, [sp, #8]
   39728:	ldr	r3, [sp, #196]	; 0xc4
   3972c:	add	r8, r3, #4
   39730:	add	r7, sp, #112	; 0x70
   39734:	ldr	r9, [sp, #28]
   39738:	b	39604 <GetDataSlab+0x185f8>
   3973c:	mov	r3, #0
   39740:	b	24fa8 <GetDataSlab+0x3f9c>
   39744:	ldr	r2, [r9]
   39748:	cmp	r2, #0
   3974c:	beq	39764 <GetDataSlab+0x18758>
   39750:	ldr	r3, [sp, #16]
   39754:	ldr	r3, [r3, #-4]
   39758:	mul	r3, r3, r2
   3975c:	add	r6, r6, r3, lsl #1
   39760:	add	fp, fp, r3
   39764:	add	sl, sl, #1
   39768:	ldr	r3, [sp, #208]	; 0xd0
   3976c:	cmp	r3, sl
   39770:	beq	397fc <GetDataSlab+0x187f0>
   39774:	ldr	r3, [r5]
   39778:	add	r3, r3, #1
   3977c:	str	r3, [r5]
   39780:	add	r9, r9, #4
   39784:	ldr	r2, [sp, #12]
   39788:	ldr	r1, [r2, #4]!
   3978c:	str	r2, [sp, #12]
   39790:	mov	r0, r3
   39794:	bl	517e8 <__aeabi_idivmod>
   39798:	cmp	r1, #0
   3979c:	bne	397e8 <GetDataSlab+0x187dc>
   397a0:	mov	r3, #0
   397a4:	str	r3, [r5], #4
   397a8:	add	r7, r7, #4
   397ac:	str	r7, [sp, #16]
   397b0:	ldr	r4, [r7]
   397b4:	mov	r1, r4
   397b8:	mov	r0, fp
   397bc:	bl	517e8 <__aeabi_idivmod>
   397c0:	subs	r3, r1, #0
   397c4:	beq	39744 <GetDataSlab+0x18738>
   397c8:	ldr	r2, [r7, #-4]
   397cc:	ldr	r1, [r9]
   397d0:	sub	r3, r4, r3
   397d4:	mla	r3, r1, r2, r3
   397d8:	add	r6, r6, r3, lsl #1
   397dc:	add	fp, fp, r3
   397e0:	b	39764 <GetDataSlab+0x18758>
   397e4:	mov	sl, #1
   397e8:	add	r3, sp, #152	; 0x98
   397ec:	add	r3, r3, sl, lsl #2
   397f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   397f4:	add	fp, fp, r3
   397f8:	add	r6, r6, r3, lsl #1
   397fc:	ldr	r3, [sp, #24]
   39800:	ldr	r2, [sp, #8]
   39804:	add	r3, r3, r2
   39808:	str	r3, [sp, #24]
   3980c:	ldr	r2, [sp, #20]
   39810:	cmp	r3, r2
   39814:	bge	398fc <GetDataSlab+0x188f0>
   39818:	ldr	r3, [sp, #196]	; 0xc4
   3981c:	ldr	r3, [r3]
   39820:	cmp	r3, #0
   39824:	addne	r6, r6, r3, lsl #1
   39828:	addne	fp, fp, r3
   3982c:	ldr	r3, [sp, #204]	; 0xcc
   39830:	ldr	r3, [r3]
   39834:	str	r3, [sp, #8]
   39838:	cmp	r3, #0
   3983c:	ble	3987c <GetDataSlab+0x18870>
   39840:	ldr	r3, [sp, #4]
   39844:	ldr	r2, [sp, #24]
   39848:	add	r2, r3, r2
   3984c:	mov	r3, #0
   39850:	ldrh	r1, [r6]
   39854:	strb	r1, [r2], #1
   39858:	ldr	r1, [r8]
   3985c:	add	r6, r6, r1, lsl #1
   39860:	add	fp, fp, r1
   39864:	add	r3, r3, #1
   39868:	ldr	r1, [sp, #204]	; 0xcc
   3986c:	ldr	r1, [r1]
   39870:	str	r1, [sp, #8]
   39874:	cmp	r1, r3
   39878:	bgt	39850 <GetDataSlab+0x18844>
   3987c:	ldr	r3, [r8]
   39880:	ldr	r2, [sp, #8]
   39884:	mul	r3, r3, r2
   39888:	ldr	r2, [sp, #192]	; 0xc0
   3988c:	ldr	r2, [r2]
   39890:	sub	r3, r2, r3
   39894:	ldr	r2, [sp, #196]	; 0xc4
   39898:	ldr	r2, [r2]
   3989c:	sub	r3, r3, r2
   398a0:	add	fp, fp, r3
   398a4:	add	r6, r6, r3, lsl #1
   398a8:	ldr	r3, [sp, #208]	; 0xd0
   398ac:	cmp	r3, #1
   398b0:	ble	397fc <GetDataSlab+0x187f0>
   398b4:	ldr	r3, [sp, #76]	; 0x4c
   398b8:	add	r3, r3, #1
   398bc:	str	r3, [sp, #76]	; 0x4c
   398c0:	ldr	r2, [sp, #204]	; 0xcc
   398c4:	ldr	r1, [r2, #4]
   398c8:	mov	r0, r3
   398cc:	bl	517e8 <__aeabi_idivmod>
   398d0:	cmp	r1, #0
   398d4:	bne	397e4 <GetDataSlab+0x187d8>
   398d8:	add	r5, sp, #76	; 0x4c
   398dc:	ldr	r3, [sp, #204]	; 0xcc
   398e0:	add	r3, r3, #4
   398e4:	str	r3, [sp, #12]
   398e8:	ldr	r3, [sp, #196]	; 0xc4
   398ec:	add	r9, r3, #4
   398f0:	add	r7, sp, #112	; 0x70
   398f4:	mov	sl, #1
   398f8:	b	397a0 <GetDataSlab+0x18794>
   398fc:	mov	r3, #0
   39900:	b	24fa8 <GetDataSlab+0x3f9c>
   39904:	ldr	r3, [r8]
   39908:	str	r3, [sp, #28]
   3990c:	sub	r3, r3, #1
   39910:	str	r3, [sp, #32]
   39914:	ldr	r3, [sp, #192]	; 0xc0
   39918:	ldr	r3, [r3]
   3991c:	str	r3, [sp, #112]	; 0x70
   39920:	ldr	r3, [sp, #204]	; 0xcc
   39924:	ldr	r3, [r3]
   39928:	str	r3, [sp, #20]
   3992c:	ldr	r3, [sp, #208]	; 0xd0
   39930:	cmp	r3, #1
   39934:	ble	39968 <GetDataSlab+0x1895c>
   39938:	str	r8, [sp, #16]
   3993c:	add	sl, sp, #36	; 0x24
   39940:	ldr	lr, [sp, #192]	; 0xc0
   39944:	add	r9, sp, #112	; 0x70
   39948:	ldr	r3, [sp, #204]	; 0xcc
   3994c:	add	r5, r3, #4
   39950:	ldr	r3, [sp, #196]	; 0xc4
   39954:	add	r4, r3, #4
   39958:	str	lr, [sp, #12]
   3995c:	mov	r6, #2
   39960:	mov	fp, #0
   39964:	b	427bc <GetDataSlab+0x217b0>
   39968:	mov	fp, #0
   3996c:	b	42848 <GetDataSlab+0x2183c>
   39970:	ldr	r3, [sp, #20]
   39974:	cmp	r3, #0
   39978:	ble	3d5f0 <GetDataSlab+0x1c5e4>
   3997c:	mov	r3, #0
   39980:	str	r3, [sp, #16]
   39984:	b	39a58 <GetDataSlab+0x18a4c>
   39988:	ldr	r2, [r8]
   3998c:	cmp	r2, #0
   39990:	beq	399a8 <GetDataSlab+0x1899c>
   39994:	ldr	r3, [sp, #12]
   39998:	ldr	r3, [r3, #-4]
   3999c:	mul	r3, r3, r2
   399a0:	add	r6, r6, r3, lsl #1
   399a4:	add	fp, fp, r3
   399a8:	add	r9, r9, #1
   399ac:	ldr	r3, [sp, #208]	; 0xd0
   399b0:	cmp	r3, r9
   399b4:	beq	39a40 <GetDataSlab+0x18a34>
   399b8:	ldr	r3, [r5]
   399bc:	add	r3, r3, #1
   399c0:	str	r3, [r5]
   399c4:	add	r8, r8, #4
   399c8:	ldr	r2, [sp, #8]
   399cc:	ldr	r1, [r2, #4]!
   399d0:	str	r2, [sp, #8]
   399d4:	mov	r0, r3
   399d8:	bl	517e8 <__aeabi_idivmod>
   399dc:	cmp	r1, #0
   399e0:	bne	39a2c <GetDataSlab+0x18a20>
   399e4:	mov	r3, #0
   399e8:	str	r3, [r5], #4
   399ec:	add	r7, r7, #4
   399f0:	str	r7, [sp, #12]
   399f4:	ldr	r4, [r7]
   399f8:	mov	r1, r4
   399fc:	mov	r0, fp
   39a00:	bl	517e8 <__aeabi_idivmod>
   39a04:	subs	r3, r1, #0
   39a08:	beq	39988 <GetDataSlab+0x1897c>
   39a0c:	ldr	r2, [r7, #-4]
   39a10:	ldr	r1, [r8]
   39a14:	sub	r3, r4, r3
   39a18:	mla	r3, r1, r2, r3
   39a1c:	add	r6, r6, r3, lsl #1
   39a20:	add	fp, fp, r3
   39a24:	b	399a8 <GetDataSlab+0x1899c>
   39a28:	ldr	r9, [sp, #28]
   39a2c:	add	r3, sp, #152	; 0x98
   39a30:	add	r3, r3, r9, lsl #2
   39a34:	ldr	r3, [r3, #-120]	; 0xffffff88
   39a38:	add	fp, fp, r3
   39a3c:	add	r6, r6, r3, lsl #1
   39a40:	ldr	r3, [sp, #16]
   39a44:	add	r3, r3, sl
   39a48:	str	r3, [sp, #16]
   39a4c:	ldr	r2, [sp, #20]
   39a50:	cmp	r3, r2
   39a54:	bge	39b1c <GetDataSlab+0x18b10>
   39a58:	ldr	r3, [sp, #196]	; 0xc4
   39a5c:	ldr	r3, [r3]
   39a60:	cmp	r3, #0
   39a64:	addne	r6, r6, r3, lsl #1
   39a68:	addne	fp, fp, r3
   39a6c:	ldr	r3, [sp, #204]	; 0xcc
   39a70:	ldr	sl, [r3]
   39a74:	cmp	sl, #0
   39a78:	ble	39aac <GetDataSlab+0x18aa0>
   39a7c:	sub	r0, r6, #2
   39a80:	ldr	r3, [sp, #4]
   39a84:	ldr	r2, [sp, #16]
   39a88:	add	r1, r3, r2
   39a8c:	mov	r2, #0
   39a90:	ldrh	r3, [r0, #2]!
   39a94:	strb	r3, [r1], #1
   39a98:	add	r2, r2, #1
   39a9c:	ldr	r3, [sp, #204]	; 0xcc
   39aa0:	ldr	sl, [r3]
   39aa4:	cmp	sl, r2
   39aa8:	bgt	39a90 <GetDataSlab+0x18a84>
   39aac:	ldr	r3, [sp, #192]	; 0xc0
   39ab0:	ldr	r2, [r3]
   39ab4:	ldr	r3, [sp, #196]	; 0xc4
   39ab8:	ldr	r3, [r3]
   39abc:	sub	r3, r2, r3
   39ac0:	add	fp, fp, r3
   39ac4:	add	r6, r6, r3, lsl #1
   39ac8:	ldr	r3, [sp, #208]	; 0xd0
   39acc:	cmp	r3, #1
   39ad0:	ble	39a40 <GetDataSlab+0x18a34>
   39ad4:	ldr	r3, [sp, #76]	; 0x4c
   39ad8:	add	r3, r3, #1
   39adc:	str	r3, [sp, #76]	; 0x4c
   39ae0:	ldr	r2, [sp, #204]	; 0xcc
   39ae4:	ldr	r1, [r2, #4]
   39ae8:	mov	r0, r3
   39aec:	bl	517e8 <__aeabi_idivmod>
   39af0:	cmp	r1, #0
   39af4:	bne	39a28 <GetDataSlab+0x18a1c>
   39af8:	add	r5, sp, #76	; 0x4c
   39afc:	ldr	r3, [sp, #204]	; 0xcc
   39b00:	add	r3, r3, #4
   39b04:	str	r3, [sp, #8]
   39b08:	ldr	r3, [sp, #196]	; 0xc4
   39b0c:	add	r8, r3, #4
   39b10:	add	r7, sp, #112	; 0x70
   39b14:	ldr	r9, [sp, #28]
   39b18:	b	399e4 <GetDataSlab+0x189d8>
   39b1c:	mov	r3, #0
   39b20:	b	24fa8 <GetDataSlab+0x3f9c>
   39b24:	ldr	r2, [r9]
   39b28:	cmp	r2, #0
   39b2c:	beq	39b44 <GetDataSlab+0x18b38>
   39b30:	ldr	r3, [sp, #16]
   39b34:	ldr	r3, [r3, #-4]
   39b38:	mul	r3, r3, r2
   39b3c:	add	r6, r6, r3, lsl #1
   39b40:	add	fp, fp, r3
   39b44:	add	sl, sl, #1
   39b48:	ldr	r3, [sp, #208]	; 0xd0
   39b4c:	cmp	r3, sl
   39b50:	beq	39bdc <GetDataSlab+0x18bd0>
   39b54:	ldr	r3, [r5]
   39b58:	add	r3, r3, #1
   39b5c:	str	r3, [r5]
   39b60:	add	r9, r9, #4
   39b64:	ldr	r2, [sp, #12]
   39b68:	ldr	r1, [r2, #4]!
   39b6c:	str	r2, [sp, #12]
   39b70:	mov	r0, r3
   39b74:	bl	517e8 <__aeabi_idivmod>
   39b78:	cmp	r1, #0
   39b7c:	bne	39bc8 <GetDataSlab+0x18bbc>
   39b80:	mov	r3, #0
   39b84:	str	r3, [r5], #4
   39b88:	add	r7, r7, #4
   39b8c:	str	r7, [sp, #16]
   39b90:	ldr	r4, [r7]
   39b94:	mov	r1, r4
   39b98:	mov	r0, fp
   39b9c:	bl	517e8 <__aeabi_idivmod>
   39ba0:	subs	r3, r1, #0
   39ba4:	beq	39b24 <GetDataSlab+0x18b18>
   39ba8:	ldr	r2, [r7, #-4]
   39bac:	ldr	r1, [r9]
   39bb0:	sub	r3, r4, r3
   39bb4:	mla	r3, r1, r2, r3
   39bb8:	add	r6, r6, r3, lsl #1
   39bbc:	add	fp, fp, r3
   39bc0:	b	39b44 <GetDataSlab+0x18b38>
   39bc4:	mov	sl, #1
   39bc8:	add	r3, sp, #152	; 0x98
   39bcc:	add	r3, r3, sl, lsl #2
   39bd0:	ldr	r3, [r3, #-120]	; 0xffffff88
   39bd4:	add	fp, fp, r3
   39bd8:	add	r6, r6, r3, lsl #1
   39bdc:	ldr	r3, [sp, #24]
   39be0:	ldr	r2, [sp, #8]
   39be4:	add	r3, r3, r2
   39be8:	str	r3, [sp, #24]
   39bec:	ldr	r2, [sp, #20]
   39bf0:	cmp	r3, r2
   39bf4:	bge	39cdc <GetDataSlab+0x18cd0>
   39bf8:	ldr	r3, [sp, #196]	; 0xc4
   39bfc:	ldr	r3, [r3]
   39c00:	cmp	r3, #0
   39c04:	addne	r6, r6, r3, lsl #1
   39c08:	addne	fp, fp, r3
   39c0c:	ldr	r3, [sp, #204]	; 0xcc
   39c10:	ldr	r3, [r3]
   39c14:	str	r3, [sp, #8]
   39c18:	cmp	r3, #0
   39c1c:	ble	39c5c <GetDataSlab+0x18c50>
   39c20:	ldr	r3, [sp, #4]
   39c24:	ldr	r2, [sp, #24]
   39c28:	add	r2, r3, r2
   39c2c:	mov	r3, #0
   39c30:	ldrh	r1, [r6]
   39c34:	strb	r1, [r2], #1
   39c38:	ldr	r1, [r8]
   39c3c:	add	r6, r6, r1, lsl #1
   39c40:	add	fp, fp, r1
   39c44:	add	r3, r3, #1
   39c48:	ldr	r1, [sp, #204]	; 0xcc
   39c4c:	ldr	r1, [r1]
   39c50:	str	r1, [sp, #8]
   39c54:	cmp	r1, r3
   39c58:	bgt	39c30 <GetDataSlab+0x18c24>
   39c5c:	ldr	r3, [r8]
   39c60:	ldr	r2, [sp, #8]
   39c64:	mul	r3, r3, r2
   39c68:	ldr	r2, [sp, #192]	; 0xc0
   39c6c:	ldr	r2, [r2]
   39c70:	sub	r3, r2, r3
   39c74:	ldr	r2, [sp, #196]	; 0xc4
   39c78:	ldr	r2, [r2]
   39c7c:	sub	r3, r3, r2
   39c80:	add	fp, fp, r3
   39c84:	add	r6, r6, r3, lsl #1
   39c88:	ldr	r3, [sp, #208]	; 0xd0
   39c8c:	cmp	r3, #1
   39c90:	ble	39bdc <GetDataSlab+0x18bd0>
   39c94:	ldr	r3, [sp, #76]	; 0x4c
   39c98:	add	r3, r3, #1
   39c9c:	str	r3, [sp, #76]	; 0x4c
   39ca0:	ldr	r2, [sp, #204]	; 0xcc
   39ca4:	ldr	r1, [r2, #4]
   39ca8:	mov	r0, r3
   39cac:	bl	517e8 <__aeabi_idivmod>
   39cb0:	cmp	r1, #0
   39cb4:	bne	39bc4 <GetDataSlab+0x18bb8>
   39cb8:	add	r5, sp, #76	; 0x4c
   39cbc:	ldr	r3, [sp, #204]	; 0xcc
   39cc0:	add	r3, r3, #4
   39cc4:	str	r3, [sp, #12]
   39cc8:	ldr	r3, [sp, #196]	; 0xc4
   39ccc:	add	r9, r3, #4
   39cd0:	add	r7, sp, #112	; 0x70
   39cd4:	mov	sl, #1
   39cd8:	b	39b80 <GetDataSlab+0x18b74>
   39cdc:	mov	r3, #0
   39ce0:	b	24fa8 <GetDataSlab+0x3f9c>
   39ce4:	ldr	r3, [r8]
   39ce8:	str	r3, [sp, #28]
   39cec:	sub	r3, r3, #1
   39cf0:	str	r3, [sp, #32]
   39cf4:	ldr	r3, [sp, #192]	; 0xc0
   39cf8:	ldr	r3, [r3]
   39cfc:	str	r3, [sp, #112]	; 0x70
   39d00:	ldr	r3, [sp, #204]	; 0xcc
   39d04:	ldr	r3, [r3]
   39d08:	str	r3, [sp, #20]
   39d0c:	ldr	r3, [sp, #208]	; 0xd0
   39d10:	cmp	r3, #1
   39d14:	ble	39d48 <GetDataSlab+0x18d3c>
   39d18:	str	r8, [sp, #16]
   39d1c:	add	sl, sp, #36	; 0x24
   39d20:	ldr	lr, [sp, #192]	; 0xc0
   39d24:	add	r9, sp, #112	; 0x70
   39d28:	ldr	r3, [sp, #204]	; 0xcc
   39d2c:	add	r5, r3, #4
   39d30:	ldr	r3, [sp, #196]	; 0xc4
   39d34:	add	r4, r3, #4
   39d38:	str	lr, [sp, #12]
   39d3c:	mov	r6, #2
   39d40:	mov	fp, #0
   39d44:	b	428a8 <GetDataSlab+0x2189c>
   39d48:	mov	fp, #0
   39d4c:	b	42934 <GetDataSlab+0x21928>
   39d50:	ldr	r3, [sp, #20]
   39d54:	cmp	r3, #0
   39d58:	ble	3d5f8 <GetDataSlab+0x1c5ec>
   39d5c:	mov	r3, #0
   39d60:	str	r3, [sp, #16]
   39d64:	b	39e38 <GetDataSlab+0x18e2c>
   39d68:	ldr	r2, [r8]
   39d6c:	cmp	r2, #0
   39d70:	beq	39d88 <GetDataSlab+0x18d7c>
   39d74:	ldr	r3, [sp, #12]
   39d78:	ldr	r3, [r3, #-4]
   39d7c:	mul	r3, r3, r2
   39d80:	add	r6, r6, r3
   39d84:	add	fp, fp, r3
   39d88:	add	r9, r9, #1
   39d8c:	ldr	r3, [sp, #208]	; 0xd0
   39d90:	cmp	r3, r9
   39d94:	beq	39e20 <GetDataSlab+0x18e14>
   39d98:	ldr	r3, [r5]
   39d9c:	add	r3, r3, #1
   39da0:	str	r3, [r5]
   39da4:	add	r8, r8, #4
   39da8:	ldr	r2, [sp, #8]
   39dac:	ldr	r1, [r2, #4]!
   39db0:	str	r2, [sp, #8]
   39db4:	mov	r0, r3
   39db8:	bl	517e8 <__aeabi_idivmod>
   39dbc:	cmp	r1, #0
   39dc0:	bne	39e0c <GetDataSlab+0x18e00>
   39dc4:	mov	r3, #0
   39dc8:	str	r3, [r5], #4
   39dcc:	add	r7, r7, #4
   39dd0:	str	r7, [sp, #12]
   39dd4:	ldr	r4, [r7]
   39dd8:	mov	r1, r4
   39ddc:	mov	r0, fp
   39de0:	bl	517e8 <__aeabi_idivmod>
   39de4:	subs	r3, r1, #0
   39de8:	beq	39d68 <GetDataSlab+0x18d5c>
   39dec:	ldr	r2, [r7, #-4]
   39df0:	ldr	r1, [r8]
   39df4:	sub	r3, r4, r3
   39df8:	mla	r3, r1, r2, r3
   39dfc:	add	r6, r6, r3
   39e00:	add	fp, fp, r3
   39e04:	b	39d88 <GetDataSlab+0x18d7c>
   39e08:	ldr	r9, [sp, #28]
   39e0c:	add	r3, sp, #152	; 0x98
   39e10:	add	r3, r3, r9, lsl #2
   39e14:	ldr	r3, [r3, #-120]	; 0xffffff88
   39e18:	add	fp, fp, r3
   39e1c:	add	r6, r6, r3
   39e20:	ldr	r3, [sp, #16]
   39e24:	add	r3, r3, sl
   39e28:	str	r3, [sp, #16]
   39e2c:	ldr	r2, [sp, #20]
   39e30:	cmp	r3, r2
   39e34:	bge	39efc <GetDataSlab+0x18ef0>
   39e38:	ldr	r3, [sp, #196]	; 0xc4
   39e3c:	ldr	r3, [r3]
   39e40:	cmp	r3, #0
   39e44:	addne	r6, r6, r3
   39e48:	addne	fp, fp, r3
   39e4c:	ldr	r3, [sp, #204]	; 0xcc
   39e50:	ldr	sl, [r3]
   39e54:	cmp	sl, #0
   39e58:	ble	39e8c <GetDataSlab+0x18e80>
   39e5c:	sub	r0, r6, #1
   39e60:	ldr	r3, [sp, #4]
   39e64:	ldr	r2, [sp, #16]
   39e68:	add	r1, r3, r2
   39e6c:	mov	r2, #0
   39e70:	ldrsb	r3, [r0, #1]!
   39e74:	strb	r3, [r1], #1
   39e78:	add	r2, r2, #1
   39e7c:	ldr	r3, [sp, #204]	; 0xcc
   39e80:	ldr	sl, [r3]
   39e84:	cmp	sl, r2
   39e88:	bgt	39e70 <GetDataSlab+0x18e64>
   39e8c:	ldr	r3, [sp, #192]	; 0xc0
   39e90:	ldr	r2, [r3]
   39e94:	ldr	r3, [sp, #196]	; 0xc4
   39e98:	ldr	r3, [r3]
   39e9c:	sub	r3, r2, r3
   39ea0:	add	fp, fp, r3
   39ea4:	add	r6, r6, r3
   39ea8:	ldr	r3, [sp, #208]	; 0xd0
   39eac:	cmp	r3, #1
   39eb0:	ble	39e20 <GetDataSlab+0x18e14>
   39eb4:	ldr	r3, [sp, #76]	; 0x4c
   39eb8:	add	r3, r3, #1
   39ebc:	str	r3, [sp, #76]	; 0x4c
   39ec0:	ldr	r2, [sp, #204]	; 0xcc
   39ec4:	ldr	r1, [r2, #4]
   39ec8:	mov	r0, r3
   39ecc:	bl	517e8 <__aeabi_idivmod>
   39ed0:	cmp	r1, #0
   39ed4:	bne	39e08 <GetDataSlab+0x18dfc>
   39ed8:	add	r5, sp, #76	; 0x4c
   39edc:	ldr	r3, [sp, #204]	; 0xcc
   39ee0:	add	r3, r3, #4
   39ee4:	str	r3, [sp, #8]
   39ee8:	ldr	r3, [sp, #196]	; 0xc4
   39eec:	add	r8, r3, #4
   39ef0:	add	r7, sp, #112	; 0x70
   39ef4:	ldr	r9, [sp, #28]
   39ef8:	b	39dc4 <GetDataSlab+0x18db8>
   39efc:	mov	r3, #0
   39f00:	b	24fa8 <GetDataSlab+0x3f9c>
   39f04:	ldr	r2, [r9]
   39f08:	cmp	r2, #0
   39f0c:	beq	39f24 <GetDataSlab+0x18f18>
   39f10:	ldr	r3, [sp, #16]
   39f14:	ldr	r3, [r3, #-4]
   39f18:	mul	r3, r3, r2
   39f1c:	add	r6, r6, r3
   39f20:	add	fp, fp, r3
   39f24:	add	sl, sl, #1
   39f28:	ldr	r3, [sp, #208]	; 0xd0
   39f2c:	cmp	r3, sl
   39f30:	beq	39fbc <GetDataSlab+0x18fb0>
   39f34:	ldr	r3, [r5]
   39f38:	add	r3, r3, #1
   39f3c:	str	r3, [r5]
   39f40:	add	r9, r9, #4
   39f44:	ldr	r2, [sp, #12]
   39f48:	ldr	r1, [r2, #4]!
   39f4c:	str	r2, [sp, #12]
   39f50:	mov	r0, r3
   39f54:	bl	517e8 <__aeabi_idivmod>
   39f58:	cmp	r1, #0
   39f5c:	bne	39fa8 <GetDataSlab+0x18f9c>
   39f60:	mov	r3, #0
   39f64:	str	r3, [r5], #4
   39f68:	add	r7, r7, #4
   39f6c:	str	r7, [sp, #16]
   39f70:	ldr	r4, [r7]
   39f74:	mov	r1, r4
   39f78:	mov	r0, fp
   39f7c:	bl	517e8 <__aeabi_idivmod>
   39f80:	subs	r3, r1, #0
   39f84:	beq	39f04 <GetDataSlab+0x18ef8>
   39f88:	ldr	r2, [r7, #-4]
   39f8c:	ldr	r1, [r9]
   39f90:	sub	r3, r4, r3
   39f94:	mla	r3, r1, r2, r3
   39f98:	add	r6, r6, r3
   39f9c:	add	fp, fp, r3
   39fa0:	b	39f24 <GetDataSlab+0x18f18>
   39fa4:	mov	sl, #1
   39fa8:	add	r3, sp, #152	; 0x98
   39fac:	add	r3, r3, sl, lsl #2
   39fb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   39fb4:	add	fp, fp, r3
   39fb8:	add	r6, r6, r3
   39fbc:	ldr	r3, [sp, #24]
   39fc0:	ldr	r2, [sp, #8]
   39fc4:	add	r3, r3, r2
   39fc8:	str	r3, [sp, #24]
   39fcc:	ldr	r2, [sp, #20]
   39fd0:	cmp	r3, r2
   39fd4:	bge	3a0bc <GetDataSlab+0x190b0>
   39fd8:	ldr	r3, [sp, #196]	; 0xc4
   39fdc:	ldr	r3, [r3]
   39fe0:	cmp	r3, #0
   39fe4:	addne	r6, r6, r3
   39fe8:	addne	fp, fp, r3
   39fec:	ldr	r3, [sp, #204]	; 0xcc
   39ff0:	ldr	r3, [r3]
   39ff4:	str	r3, [sp, #8]
   39ff8:	cmp	r3, #0
   39ffc:	ble	3a03c <GetDataSlab+0x19030>
   3a000:	ldr	r3, [sp, #4]
   3a004:	ldr	r2, [sp, #24]
   3a008:	add	r2, r3, r2
   3a00c:	mov	r3, #0
   3a010:	ldrsb	r1, [r6]
   3a014:	strb	r1, [r2], #1
   3a018:	ldr	r1, [r8]
   3a01c:	add	r6, r6, r1
   3a020:	add	fp, fp, r1
   3a024:	add	r3, r3, #1
   3a028:	ldr	r1, [sp, #204]	; 0xcc
   3a02c:	ldr	r1, [r1]
   3a030:	str	r1, [sp, #8]
   3a034:	cmp	r1, r3
   3a038:	bgt	3a010 <GetDataSlab+0x19004>
   3a03c:	ldr	r3, [r8]
   3a040:	ldr	r2, [sp, #8]
   3a044:	mul	r3, r3, r2
   3a048:	ldr	r2, [sp, #192]	; 0xc0
   3a04c:	ldr	r2, [r2]
   3a050:	sub	r3, r2, r3
   3a054:	ldr	r2, [sp, #196]	; 0xc4
   3a058:	ldr	r2, [r2]
   3a05c:	sub	r3, r3, r2
   3a060:	add	fp, fp, r3
   3a064:	add	r6, r6, r3
   3a068:	ldr	r3, [sp, #208]	; 0xd0
   3a06c:	cmp	r3, #1
   3a070:	ble	39fbc <GetDataSlab+0x18fb0>
   3a074:	ldr	r3, [sp, #76]	; 0x4c
   3a078:	add	r3, r3, #1
   3a07c:	str	r3, [sp, #76]	; 0x4c
   3a080:	ldr	r2, [sp, #204]	; 0xcc
   3a084:	ldr	r1, [r2, #4]
   3a088:	mov	r0, r3
   3a08c:	bl	517e8 <__aeabi_idivmod>
   3a090:	cmp	r1, #0
   3a094:	bne	39fa4 <GetDataSlab+0x18f98>
   3a098:	add	r5, sp, #76	; 0x4c
   3a09c:	ldr	r3, [sp, #204]	; 0xcc
   3a0a0:	add	r3, r3, #4
   3a0a4:	str	r3, [sp, #12]
   3a0a8:	ldr	r3, [sp, #196]	; 0xc4
   3a0ac:	add	r9, r3, #4
   3a0b0:	add	r7, sp, #112	; 0x70
   3a0b4:	mov	sl, #1
   3a0b8:	b	39f60 <GetDataSlab+0x18f54>
   3a0bc:	mov	r3, #0
   3a0c0:	b	24fa8 <GetDataSlab+0x3f9c>
   3a0c4:	ldr	r3, [r8]
   3a0c8:	str	r3, [sp, #28]
   3a0cc:	sub	r3, r3, #1
   3a0d0:	str	r3, [sp, #32]
   3a0d4:	ldr	r3, [sp, #192]	; 0xc0
   3a0d8:	ldr	r3, [r3]
   3a0dc:	str	r3, [sp, #112]	; 0x70
   3a0e0:	ldr	r3, [sp, #204]	; 0xcc
   3a0e4:	ldr	r3, [r3]
   3a0e8:	str	r3, [sp, #20]
   3a0ec:	ldr	r3, [sp, #208]	; 0xd0
   3a0f0:	cmp	r3, #1
   3a0f4:	ble	3a128 <GetDataSlab+0x1911c>
   3a0f8:	str	r8, [sp, #16]
   3a0fc:	add	sl, sp, #36	; 0x24
   3a100:	ldr	lr, [sp, #192]	; 0xc0
   3a104:	add	r9, sp, #112	; 0x70
   3a108:	ldr	r3, [sp, #204]	; 0xcc
   3a10c:	add	r5, r3, #4
   3a110:	ldr	r3, [sp, #196]	; 0xc4
   3a114:	add	r4, r3, #4
   3a118:	str	lr, [sp, #12]
   3a11c:	mov	r6, #2
   3a120:	mov	fp, #0
   3a124:	b	42994 <GetDataSlab+0x21988>
   3a128:	mov	fp, #0
   3a12c:	b	42a20 <GetDataSlab+0x21a14>
   3a130:	ldr	r3, [sp, #20]
   3a134:	cmp	r3, #0
   3a138:	ble	3d600 <GetDataSlab+0x1c5f4>
   3a13c:	mov	r3, #0
   3a140:	str	r3, [sp, #16]
   3a144:	b	3a218 <GetDataSlab+0x1920c>
   3a148:	ldr	r2, [r8]
   3a14c:	cmp	r2, #0
   3a150:	beq	3a168 <GetDataSlab+0x1915c>
   3a154:	ldr	r3, [sp, #12]
   3a158:	ldr	r3, [r3, #-4]
   3a15c:	mul	r3, r3, r2
   3a160:	add	r6, r6, r3
   3a164:	add	fp, fp, r3
   3a168:	add	r9, r9, #1
   3a16c:	ldr	r3, [sp, #208]	; 0xd0
   3a170:	cmp	r3, r9
   3a174:	beq	3a200 <GetDataSlab+0x191f4>
   3a178:	ldr	r3, [r5]
   3a17c:	add	r3, r3, #1
   3a180:	str	r3, [r5]
   3a184:	add	r8, r8, #4
   3a188:	ldr	r2, [sp, #8]
   3a18c:	ldr	r1, [r2, #4]!
   3a190:	str	r2, [sp, #8]
   3a194:	mov	r0, r3
   3a198:	bl	517e8 <__aeabi_idivmod>
   3a19c:	cmp	r1, #0
   3a1a0:	bne	3a1ec <GetDataSlab+0x191e0>
   3a1a4:	mov	r3, #0
   3a1a8:	str	r3, [r5], #4
   3a1ac:	add	r7, r7, #4
   3a1b0:	str	r7, [sp, #12]
   3a1b4:	ldr	r4, [r7]
   3a1b8:	mov	r1, r4
   3a1bc:	mov	r0, fp
   3a1c0:	bl	517e8 <__aeabi_idivmod>
   3a1c4:	subs	r3, r1, #0
   3a1c8:	beq	3a148 <GetDataSlab+0x1913c>
   3a1cc:	ldr	r2, [r7, #-4]
   3a1d0:	ldr	r1, [r8]
   3a1d4:	sub	r3, r4, r3
   3a1d8:	mla	r3, r1, r2, r3
   3a1dc:	add	r6, r6, r3
   3a1e0:	add	fp, fp, r3
   3a1e4:	b	3a168 <GetDataSlab+0x1915c>
   3a1e8:	ldr	r9, [sp, #28]
   3a1ec:	add	r3, sp, #152	; 0x98
   3a1f0:	add	r3, r3, r9, lsl #2
   3a1f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a1f8:	add	fp, fp, r3
   3a1fc:	add	r6, r6, r3
   3a200:	ldr	r3, [sp, #16]
   3a204:	add	r3, r3, sl
   3a208:	str	r3, [sp, #16]
   3a20c:	ldr	r2, [sp, #20]
   3a210:	cmp	r3, r2
   3a214:	bge	3a2dc <GetDataSlab+0x192d0>
   3a218:	ldr	r3, [sp, #196]	; 0xc4
   3a21c:	ldr	r3, [r3]
   3a220:	cmp	r3, #0
   3a224:	addne	r6, r6, r3
   3a228:	addne	fp, fp, r3
   3a22c:	ldr	r3, [sp, #204]	; 0xcc
   3a230:	ldr	sl, [r3]
   3a234:	cmp	sl, #0
   3a238:	ble	3a26c <GetDataSlab+0x19260>
   3a23c:	sub	r0, r6, #1
   3a240:	ldr	r3, [sp, #4]
   3a244:	ldr	r2, [sp, #16]
   3a248:	add	r1, r3, r2
   3a24c:	mov	r2, #0
   3a250:	ldrb	r3, [r0, #1]!
   3a254:	strb	r3, [r1], #1
   3a258:	add	r2, r2, #1
   3a25c:	ldr	r3, [sp, #204]	; 0xcc
   3a260:	ldr	sl, [r3]
   3a264:	cmp	sl, r2
   3a268:	bgt	3a250 <GetDataSlab+0x19244>
   3a26c:	ldr	r3, [sp, #192]	; 0xc0
   3a270:	ldr	r2, [r3]
   3a274:	ldr	r3, [sp, #196]	; 0xc4
   3a278:	ldr	r3, [r3]
   3a27c:	sub	r3, r2, r3
   3a280:	add	fp, fp, r3
   3a284:	add	r6, r6, r3
   3a288:	ldr	r3, [sp, #208]	; 0xd0
   3a28c:	cmp	r3, #1
   3a290:	ble	3a200 <GetDataSlab+0x191f4>
   3a294:	ldr	r3, [sp, #76]	; 0x4c
   3a298:	add	r3, r3, #1
   3a29c:	str	r3, [sp, #76]	; 0x4c
   3a2a0:	ldr	r2, [sp, #204]	; 0xcc
   3a2a4:	ldr	r1, [r2, #4]
   3a2a8:	mov	r0, r3
   3a2ac:	bl	517e8 <__aeabi_idivmod>
   3a2b0:	cmp	r1, #0
   3a2b4:	bne	3a1e8 <GetDataSlab+0x191dc>
   3a2b8:	add	r5, sp, #76	; 0x4c
   3a2bc:	ldr	r3, [sp, #204]	; 0xcc
   3a2c0:	add	r3, r3, #4
   3a2c4:	str	r3, [sp, #8]
   3a2c8:	ldr	r3, [sp, #196]	; 0xc4
   3a2cc:	add	r8, r3, #4
   3a2d0:	add	r7, sp, #112	; 0x70
   3a2d4:	ldr	r9, [sp, #28]
   3a2d8:	b	3a1a4 <GetDataSlab+0x19198>
   3a2dc:	mov	r3, #0
   3a2e0:	b	24fa8 <GetDataSlab+0x3f9c>
   3a2e4:	ldr	r2, [r9]
   3a2e8:	cmp	r2, #0
   3a2ec:	beq	3a304 <GetDataSlab+0x192f8>
   3a2f0:	ldr	r3, [sp, #16]
   3a2f4:	ldr	r3, [r3, #-4]
   3a2f8:	mul	r3, r3, r2
   3a2fc:	add	r6, r6, r3
   3a300:	add	fp, fp, r3
   3a304:	add	sl, sl, #1
   3a308:	ldr	r3, [sp, #208]	; 0xd0
   3a30c:	cmp	r3, sl
   3a310:	beq	3a39c <GetDataSlab+0x19390>
   3a314:	ldr	r3, [r5]
   3a318:	add	r3, r3, #1
   3a31c:	str	r3, [r5]
   3a320:	add	r9, r9, #4
   3a324:	ldr	r2, [sp, #12]
   3a328:	ldr	r1, [r2, #4]!
   3a32c:	str	r2, [sp, #12]
   3a330:	mov	r0, r3
   3a334:	bl	517e8 <__aeabi_idivmod>
   3a338:	cmp	r1, #0
   3a33c:	bne	3a388 <GetDataSlab+0x1937c>
   3a340:	mov	r3, #0
   3a344:	str	r3, [r5], #4
   3a348:	add	r7, r7, #4
   3a34c:	str	r7, [sp, #16]
   3a350:	ldr	r4, [r7]
   3a354:	mov	r1, r4
   3a358:	mov	r0, fp
   3a35c:	bl	517e8 <__aeabi_idivmod>
   3a360:	subs	r3, r1, #0
   3a364:	beq	3a2e4 <GetDataSlab+0x192d8>
   3a368:	ldr	r2, [r7, #-4]
   3a36c:	ldr	r1, [r9]
   3a370:	sub	r3, r4, r3
   3a374:	mla	r3, r1, r2, r3
   3a378:	add	r6, r6, r3
   3a37c:	add	fp, fp, r3
   3a380:	b	3a304 <GetDataSlab+0x192f8>
   3a384:	mov	sl, #1
   3a388:	add	r3, sp, #152	; 0x98
   3a38c:	add	r3, r3, sl, lsl #2
   3a390:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a394:	add	fp, fp, r3
   3a398:	add	r6, r6, r3
   3a39c:	ldr	r3, [sp, #24]
   3a3a0:	ldr	r2, [sp, #8]
   3a3a4:	add	r3, r3, r2
   3a3a8:	str	r3, [sp, #24]
   3a3ac:	ldr	r2, [sp, #20]
   3a3b0:	cmp	r3, r2
   3a3b4:	bge	3a49c <GetDataSlab+0x19490>
   3a3b8:	ldr	r3, [sp, #196]	; 0xc4
   3a3bc:	ldr	r3, [r3]
   3a3c0:	cmp	r3, #0
   3a3c4:	addne	r6, r6, r3
   3a3c8:	addne	fp, fp, r3
   3a3cc:	ldr	r3, [sp, #204]	; 0xcc
   3a3d0:	ldr	r3, [r3]
   3a3d4:	str	r3, [sp, #8]
   3a3d8:	cmp	r3, #0
   3a3dc:	ble	3a41c <GetDataSlab+0x19410>
   3a3e0:	ldr	r3, [sp, #4]
   3a3e4:	ldr	r2, [sp, #24]
   3a3e8:	add	r2, r3, r2
   3a3ec:	mov	r3, #0
   3a3f0:	ldrb	r1, [r6]
   3a3f4:	strb	r1, [r2], #1
   3a3f8:	ldr	r1, [r8]
   3a3fc:	add	r6, r6, r1
   3a400:	add	fp, fp, r1
   3a404:	add	r3, r3, #1
   3a408:	ldr	r1, [sp, #204]	; 0xcc
   3a40c:	ldr	r1, [r1]
   3a410:	str	r1, [sp, #8]
   3a414:	cmp	r1, r3
   3a418:	bgt	3a3f0 <GetDataSlab+0x193e4>
   3a41c:	ldr	r3, [r8]
   3a420:	ldr	r2, [sp, #8]
   3a424:	mul	r3, r3, r2
   3a428:	ldr	r2, [sp, #192]	; 0xc0
   3a42c:	ldr	r2, [r2]
   3a430:	sub	r3, r2, r3
   3a434:	ldr	r2, [sp, #196]	; 0xc4
   3a438:	ldr	r2, [r2]
   3a43c:	sub	r3, r3, r2
   3a440:	add	fp, fp, r3
   3a444:	add	r6, r6, r3
   3a448:	ldr	r3, [sp, #208]	; 0xd0
   3a44c:	cmp	r3, #1
   3a450:	ble	3a39c <GetDataSlab+0x19390>
   3a454:	ldr	r3, [sp, #76]	; 0x4c
   3a458:	add	r3, r3, #1
   3a45c:	str	r3, [sp, #76]	; 0x4c
   3a460:	ldr	r2, [sp, #204]	; 0xcc
   3a464:	ldr	r1, [r2, #4]
   3a468:	mov	r0, r3
   3a46c:	bl	517e8 <__aeabi_idivmod>
   3a470:	cmp	r1, #0
   3a474:	bne	3a384 <GetDataSlab+0x19378>
   3a478:	add	r5, sp, #76	; 0x4c
   3a47c:	ldr	r3, [sp, #204]	; 0xcc
   3a480:	add	r3, r3, #4
   3a484:	str	r3, [sp, #12]
   3a488:	ldr	r3, [sp, #196]	; 0xc4
   3a48c:	add	r9, r3, #4
   3a490:	add	r7, sp, #112	; 0x70
   3a494:	mov	sl, #1
   3a498:	b	3a340 <GetDataSlab+0x19334>
   3a49c:	mov	r3, #0
   3a4a0:	b	24fa8 <GetDataSlab+0x3f9c>
   3a4a4:	cmp	r4, #12
   3a4a8:	beq	3a51c <GetDataSlab+0x19510>
   3a4ac:	cmp	r4, #13
   3a4b0:	movne	r3, #1
   3a4b4:	bne	24fa8 <GetDataSlab+0x3f9c>
   3a4b8:	ldr	r3, [r8]
   3a4bc:	str	r3, [sp, #28]
   3a4c0:	sub	r3, r3, #1
   3a4c4:	str	r3, [sp, #32]
   3a4c8:	ldr	r3, [sp, #192]	; 0xc0
   3a4cc:	ldr	r3, [r3]
   3a4d0:	str	r3, [sp, #112]	; 0x70
   3a4d4:	ldr	r3, [sp, #204]	; 0xcc
   3a4d8:	ldr	r3, [r3]
   3a4dc:	str	r3, [sp, #20]
   3a4e0:	ldr	r3, [sp, #208]	; 0xd0
   3a4e4:	cmp	r3, #1
   3a4e8:	ble	3a8ec <GetDataSlab+0x198e0>
   3a4ec:	str	r8, [sp, #16]
   3a4f0:	add	sl, sp, #36	; 0x24
   3a4f4:	ldr	lr, [sp, #192]	; 0xc0
   3a4f8:	add	r9, sp, #112	; 0x70
   3a4fc:	ldr	r3, [sp, #204]	; 0xcc
   3a500:	add	r6, r3, #4
   3a504:	ldr	r3, [sp, #196]	; 0xc4
   3a508:	add	r4, r3, #4
   3a50c:	str	lr, [sp, #12]
   3a510:	mov	r5, #2
   3a514:	mov	fp, #0
   3a518:	b	42b6c <GetDataSlab+0x21b60>
   3a51c:	ldr	r3, [r8]
   3a520:	str	r3, [sp, #28]
   3a524:	sub	r3, r3, #1
   3a528:	str	r3, [sp, #32]
   3a52c:	ldr	r3, [sp, #192]	; 0xc0
   3a530:	ldr	r3, [r3]
   3a534:	str	r3, [sp, #112]	; 0x70
   3a538:	ldr	r3, [sp, #204]	; 0xcc
   3a53c:	ldr	r3, [r3]
   3a540:	str	r3, [sp, #20]
   3a544:	ldr	r3, [sp, #208]	; 0xd0
   3a548:	cmp	r3, #1
   3a54c:	ble	3a580 <GetDataSlab+0x19574>
   3a550:	str	r8, [sp, #16]
   3a554:	add	sl, sp, #36	; 0x24
   3a558:	ldr	lr, [sp, #192]	; 0xc0
   3a55c:	add	r9, sp, #112	; 0x70
   3a560:	ldr	r3, [sp, #204]	; 0xcc
   3a564:	add	r6, r3, #4
   3a568:	ldr	r3, [sp, #196]	; 0xc4
   3a56c:	add	r4, r3, #4
   3a570:	str	lr, [sp, #12]
   3a574:	mov	r5, #2
   3a578:	mov	fp, #0
   3a57c:	b	42a80 <GetDataSlab+0x21a74>
   3a580:	mov	fp, #0
   3a584:	b	42b0c <GetDataSlab+0x21b00>
   3a588:	ldr	r3, [sp, #20]
   3a58c:	cmp	r3, #0
   3a590:	ble	42b34 <GetDataSlab+0x21b28>
   3a594:	mov	r3, #0
   3a598:	str	r3, [sp, #16]
   3a59c:	b	3a670 <GetDataSlab+0x19664>
   3a5a0:	ldr	r2, [r8]
   3a5a4:	cmp	r2, #0
   3a5a8:	beq	3a5c0 <GetDataSlab+0x195b4>
   3a5ac:	ldr	r3, [sp, #12]
   3a5b0:	ldr	r3, [r3, #-4]
   3a5b4:	mul	r3, r3, r2
   3a5b8:	add	r5, r5, r3, lsl #3
   3a5bc:	add	fp, fp, r3
   3a5c0:	add	r9, r9, #1
   3a5c4:	ldr	r3, [sp, #208]	; 0xd0
   3a5c8:	cmp	r3, r9
   3a5cc:	beq	3a658 <GetDataSlab+0x1964c>
   3a5d0:	ldr	r3, [r6]
   3a5d4:	add	r3, r3, #1
   3a5d8:	str	r3, [r6]
   3a5dc:	add	r8, r8, #4
   3a5e0:	ldr	r2, [sp, #8]
   3a5e4:	ldr	r1, [r2, #4]!
   3a5e8:	str	r2, [sp, #8]
   3a5ec:	mov	r0, r3
   3a5f0:	bl	517e8 <__aeabi_idivmod>
   3a5f4:	cmp	r1, #0
   3a5f8:	bne	3a644 <GetDataSlab+0x19638>
   3a5fc:	mov	r3, #0
   3a600:	str	r3, [r6], #4
   3a604:	add	r7, r7, #4
   3a608:	str	r7, [sp, #12]
   3a60c:	ldr	r4, [r7]
   3a610:	mov	r1, r4
   3a614:	mov	r0, fp
   3a618:	bl	517e8 <__aeabi_idivmod>
   3a61c:	subs	r3, r1, #0
   3a620:	beq	3a5a0 <GetDataSlab+0x19594>
   3a624:	ldr	r2, [r7, #-4]
   3a628:	ldr	r1, [r8]
   3a62c:	sub	r3, r4, r3
   3a630:	mla	r3, r1, r2, r3
   3a634:	add	r5, r5, r3, lsl #3
   3a638:	add	fp, fp, r3
   3a63c:	b	3a5c0 <GetDataSlab+0x195b4>
   3a640:	ldr	r9, [sp, #28]
   3a644:	add	r3, sp, #152	; 0x98
   3a648:	add	r3, r3, r9, lsl #2
   3a64c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a650:	add	fp, fp, r3
   3a654:	add	r5, r5, r3, lsl #3
   3a658:	ldr	r3, [sp, #16]
   3a65c:	add	r3, r3, sl
   3a660:	str	r3, [sp, #16]
   3a664:	ldr	r2, [sp, #20]
   3a668:	cmp	r3, r2
   3a66c:	bge	42b34 <GetDataSlab+0x21b28>
   3a670:	ldr	r3, [sp, #196]	; 0xc4
   3a674:	ldr	r3, [r3]
   3a678:	cmp	r3, #0
   3a67c:	addne	r5, r5, r3, lsl #3
   3a680:	addne	fp, fp, r3
   3a684:	ldr	r3, [sp, #204]	; 0xcc
   3a688:	ldr	sl, [r3]
   3a68c:	cmp	sl, #0
   3a690:	ble	3a6c4 <GetDataSlab+0x196b8>
   3a694:	sub	r0, r5, #8
   3a698:	ldr	r3, [sp, #4]
   3a69c:	ldr	r2, [sp, #16]
   3a6a0:	add	r1, r3, r2
   3a6a4:	mov	r2, #0
   3a6a8:	ldr	r3, [r0, #8]!
   3a6ac:	strb	r3, [r1], #1
   3a6b0:	add	r2, r2, #1
   3a6b4:	ldr	r3, [sp, #204]	; 0xcc
   3a6b8:	ldr	sl, [r3]
   3a6bc:	cmp	sl, r2
   3a6c0:	bgt	3a6a8 <GetDataSlab+0x1969c>
   3a6c4:	ldr	r3, [sp, #192]	; 0xc0
   3a6c8:	ldr	r2, [r3]
   3a6cc:	ldr	r3, [sp, #196]	; 0xc4
   3a6d0:	ldr	r3, [r3]
   3a6d4:	sub	r3, r2, r3
   3a6d8:	add	fp, fp, r3
   3a6dc:	add	r5, r5, r3, lsl #3
   3a6e0:	ldr	r3, [sp, #208]	; 0xd0
   3a6e4:	cmp	r3, #1
   3a6e8:	ble	3a658 <GetDataSlab+0x1964c>
   3a6ec:	ldr	r3, [sp, #76]	; 0x4c
   3a6f0:	add	r3, r3, #1
   3a6f4:	str	r3, [sp, #76]	; 0x4c
   3a6f8:	ldr	r2, [sp, #204]	; 0xcc
   3a6fc:	ldr	r1, [r2, #4]
   3a700:	mov	r0, r3
   3a704:	bl	517e8 <__aeabi_idivmod>
   3a708:	cmp	r1, #0
   3a70c:	bne	3a640 <GetDataSlab+0x19634>
   3a710:	add	r6, sp, #76	; 0x4c
   3a714:	ldr	r3, [sp, #204]	; 0xcc
   3a718:	add	r3, r3, #4
   3a71c:	str	r3, [sp, #8]
   3a720:	ldr	r3, [sp, #196]	; 0xc4
   3a724:	add	r8, r3, #4
   3a728:	add	r7, sp, #112	; 0x70
   3a72c:	ldr	r9, [sp, #28]
   3a730:	b	3a5fc <GetDataSlab+0x195f0>
   3a734:	ldr	r2, [r9]
   3a738:	cmp	r2, #0
   3a73c:	beq	3a754 <GetDataSlab+0x19748>
   3a740:	ldr	r3, [sp, #16]
   3a744:	ldr	r3, [r3, #-4]
   3a748:	mul	r3, r3, r2
   3a74c:	add	r5, r5, r3, lsl #3
   3a750:	add	fp, fp, r3
   3a754:	add	sl, sl, #1
   3a758:	ldr	r3, [sp, #208]	; 0xd0
   3a75c:	cmp	r3, sl
   3a760:	beq	3a7ec <GetDataSlab+0x197e0>
   3a764:	ldr	r3, [r6]
   3a768:	add	r3, r3, #1
   3a76c:	str	r3, [r6]
   3a770:	add	r9, r9, #4
   3a774:	ldr	r2, [sp, #12]
   3a778:	ldr	r1, [r2, #4]!
   3a77c:	str	r2, [sp, #12]
   3a780:	mov	r0, r3
   3a784:	bl	517e8 <__aeabi_idivmod>
   3a788:	cmp	r1, #0
   3a78c:	bne	3a7d8 <GetDataSlab+0x197cc>
   3a790:	mov	r3, #0
   3a794:	str	r3, [r6], #4
   3a798:	add	r7, r7, #4
   3a79c:	str	r7, [sp, #16]
   3a7a0:	ldr	r4, [r7]
   3a7a4:	mov	r1, r4
   3a7a8:	mov	r0, fp
   3a7ac:	bl	517e8 <__aeabi_idivmod>
   3a7b0:	subs	r3, r1, #0
   3a7b4:	beq	3a734 <GetDataSlab+0x19728>
   3a7b8:	ldr	r2, [r7, #-4]
   3a7bc:	ldr	r1, [r9]
   3a7c0:	sub	r3, r4, r3
   3a7c4:	mla	r3, r1, r2, r3
   3a7c8:	add	r5, r5, r3, lsl #3
   3a7cc:	add	fp, fp, r3
   3a7d0:	b	3a754 <GetDataSlab+0x19748>
   3a7d4:	mov	sl, #1
   3a7d8:	add	r3, sp, #152	; 0x98
   3a7dc:	add	r3, r3, sl, lsl #2
   3a7e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a7e4:	add	fp, fp, r3
   3a7e8:	add	r5, r5, r3, lsl #3
   3a7ec:	ldr	r3, [sp, #24]
   3a7f0:	ldr	r2, [sp, #8]
   3a7f4:	add	r3, r3, r2
   3a7f8:	str	r3, [sp, #24]
   3a7fc:	ldr	r2, [sp, #20]
   3a800:	cmp	r3, r2
   3a804:	bge	42b34 <GetDataSlab+0x21b28>
   3a808:	ldr	r3, [sp, #196]	; 0xc4
   3a80c:	ldr	r3, [r3]
   3a810:	cmp	r3, #0
   3a814:	addne	r5, r5, r3, lsl #3
   3a818:	addne	fp, fp, r3
   3a81c:	ldr	r3, [sp, #204]	; 0xcc
   3a820:	ldr	r3, [r3]
   3a824:	str	r3, [sp, #8]
   3a828:	cmp	r3, #0
   3a82c:	ble	3a86c <GetDataSlab+0x19860>
   3a830:	ldr	r3, [sp, #4]
   3a834:	ldr	r2, [sp, #24]
   3a838:	add	r2, r3, r2
   3a83c:	mov	r3, #0
   3a840:	ldr	r1, [r5]
   3a844:	strb	r1, [r2], #1
   3a848:	ldr	r1, [r8]
   3a84c:	add	r5, r5, r1, lsl #3
   3a850:	add	fp, fp, r1
   3a854:	add	r3, r3, #1
   3a858:	ldr	r1, [sp, #204]	; 0xcc
   3a85c:	ldr	r1, [r1]
   3a860:	str	r1, [sp, #8]
   3a864:	cmp	r1, r3
   3a868:	bgt	3a840 <GetDataSlab+0x19834>
   3a86c:	ldr	r3, [r8]
   3a870:	ldr	r2, [sp, #8]
   3a874:	mul	r3, r3, r2
   3a878:	ldr	r2, [sp, #192]	; 0xc0
   3a87c:	ldr	r2, [r2]
   3a880:	sub	r3, r2, r3
   3a884:	ldr	r2, [sp, #196]	; 0xc4
   3a888:	ldr	r2, [r2]
   3a88c:	sub	r3, r3, r2
   3a890:	add	fp, fp, r3
   3a894:	add	r5, r5, r3, lsl #3
   3a898:	ldr	r3, [sp, #208]	; 0xd0
   3a89c:	cmp	r3, #1
   3a8a0:	ble	3a7ec <GetDataSlab+0x197e0>
   3a8a4:	ldr	r3, [sp, #76]	; 0x4c
   3a8a8:	add	r3, r3, #1
   3a8ac:	str	r3, [sp, #76]	; 0x4c
   3a8b0:	ldr	r2, [sp, #204]	; 0xcc
   3a8b4:	ldr	r1, [r2, #4]
   3a8b8:	mov	r0, r3
   3a8bc:	bl	517e8 <__aeabi_idivmod>
   3a8c0:	cmp	r1, #0
   3a8c4:	bne	3a7d4 <GetDataSlab+0x197c8>
   3a8c8:	add	r6, sp, #76	; 0x4c
   3a8cc:	ldr	r3, [sp, #204]	; 0xcc
   3a8d0:	add	r3, r3, #4
   3a8d4:	str	r3, [sp, #12]
   3a8d8:	ldr	r3, [sp, #196]	; 0xc4
   3a8dc:	add	r9, r3, #4
   3a8e0:	add	r7, sp, #112	; 0x70
   3a8e4:	mov	sl, #1
   3a8e8:	b	3a790 <GetDataSlab+0x19784>
   3a8ec:	mov	fp, #0
   3a8f0:	b	42bf8 <GetDataSlab+0x21bec>
   3a8f4:	ldr	r3, [sp, #20]
   3a8f8:	cmp	r3, #0
   3a8fc:	ble	3d608 <GetDataSlab+0x1c5fc>
   3a900:	mov	r3, #0
   3a904:	str	r3, [sp, #16]
   3a908:	b	3a9dc <GetDataSlab+0x199d0>
   3a90c:	ldr	r2, [r8]
   3a910:	cmp	r2, #0
   3a914:	beq	3a92c <GetDataSlab+0x19920>
   3a918:	ldr	r3, [sp, #12]
   3a91c:	ldr	r3, [r3, #-4]
   3a920:	mul	r3, r3, r2
   3a924:	add	r5, r5, r3, lsl #3
   3a928:	add	fp, fp, r3
   3a92c:	add	r9, r9, #1
   3a930:	ldr	r3, [sp, #208]	; 0xd0
   3a934:	cmp	r3, r9
   3a938:	beq	3a9c4 <GetDataSlab+0x199b8>
   3a93c:	ldr	r3, [r6]
   3a940:	add	r3, r3, #1
   3a944:	str	r3, [r6]
   3a948:	add	r8, r8, #4
   3a94c:	ldr	r2, [sp, #8]
   3a950:	ldr	r1, [r2, #4]!
   3a954:	str	r2, [sp, #8]
   3a958:	mov	r0, r3
   3a95c:	bl	517e8 <__aeabi_idivmod>
   3a960:	cmp	r1, #0
   3a964:	bne	3a9b0 <GetDataSlab+0x199a4>
   3a968:	mov	r3, #0
   3a96c:	str	r3, [r6], #4
   3a970:	add	r7, r7, #4
   3a974:	str	r7, [sp, #12]
   3a978:	ldr	r4, [r7]
   3a97c:	mov	r1, r4
   3a980:	mov	r0, fp
   3a984:	bl	517e8 <__aeabi_idivmod>
   3a988:	subs	r3, r1, #0
   3a98c:	beq	3a90c <GetDataSlab+0x19900>
   3a990:	ldr	r2, [r7, #-4]
   3a994:	ldr	r1, [r8]
   3a998:	sub	r3, r4, r3
   3a99c:	mla	r3, r1, r2, r3
   3a9a0:	add	r5, r5, r3, lsl #3
   3a9a4:	add	fp, fp, r3
   3a9a8:	b	3a92c <GetDataSlab+0x19920>
   3a9ac:	ldr	r9, [sp, #28]
   3a9b0:	add	r3, sp, #152	; 0x98
   3a9b4:	add	r3, r3, r9, lsl #2
   3a9b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a9bc:	add	fp, fp, r3
   3a9c0:	add	r5, r5, r3, lsl #3
   3a9c4:	ldr	r3, [sp, #16]
   3a9c8:	add	r3, r3, sl
   3a9cc:	str	r3, [sp, #16]
   3a9d0:	ldr	r2, [sp, #20]
   3a9d4:	cmp	r3, r2
   3a9d8:	bge	3aaa0 <GetDataSlab+0x19a94>
   3a9dc:	ldr	r3, [sp, #196]	; 0xc4
   3a9e0:	ldr	r3, [r3]
   3a9e4:	cmp	r3, #0
   3a9e8:	addne	r5, r5, r3, lsl #3
   3a9ec:	addne	fp, fp, r3
   3a9f0:	ldr	r3, [sp, #204]	; 0xcc
   3a9f4:	ldr	sl, [r3]
   3a9f8:	cmp	sl, #0
   3a9fc:	ble	3aa30 <GetDataSlab+0x19a24>
   3aa00:	sub	r0, r5, #8
   3aa04:	ldr	r3, [sp, #4]
   3aa08:	ldr	r2, [sp, #16]
   3aa0c:	add	r1, r3, r2
   3aa10:	mov	r2, #0
   3aa14:	ldr	r3, [r0, #8]!
   3aa18:	strb	r3, [r1], #1
   3aa1c:	add	r2, r2, #1
   3aa20:	ldr	r3, [sp, #204]	; 0xcc
   3aa24:	ldr	sl, [r3]
   3aa28:	cmp	sl, r2
   3aa2c:	bgt	3aa14 <GetDataSlab+0x19a08>
   3aa30:	ldr	r3, [sp, #192]	; 0xc0
   3aa34:	ldr	r2, [r3]
   3aa38:	ldr	r3, [sp, #196]	; 0xc4
   3aa3c:	ldr	r3, [r3]
   3aa40:	sub	r3, r2, r3
   3aa44:	add	fp, fp, r3
   3aa48:	add	r5, r5, r3, lsl #3
   3aa4c:	ldr	r3, [sp, #208]	; 0xd0
   3aa50:	cmp	r3, #1
   3aa54:	ble	3a9c4 <GetDataSlab+0x199b8>
   3aa58:	ldr	r3, [sp, #76]	; 0x4c
   3aa5c:	add	r3, r3, #1
   3aa60:	str	r3, [sp, #76]	; 0x4c
   3aa64:	ldr	r2, [sp, #204]	; 0xcc
   3aa68:	ldr	r1, [r2, #4]
   3aa6c:	mov	r0, r3
   3aa70:	bl	517e8 <__aeabi_idivmod>
   3aa74:	cmp	r1, #0
   3aa78:	bne	3a9ac <GetDataSlab+0x199a0>
   3aa7c:	add	r6, sp, #76	; 0x4c
   3aa80:	ldr	r3, [sp, #204]	; 0xcc
   3aa84:	add	r3, r3, #4
   3aa88:	str	r3, [sp, #8]
   3aa8c:	ldr	r3, [sp, #196]	; 0xc4
   3aa90:	add	r8, r3, #4
   3aa94:	add	r7, sp, #112	; 0x70
   3aa98:	ldr	r9, [sp, #28]
   3aa9c:	b	3a968 <GetDataSlab+0x1995c>
   3aaa0:	mov	r3, #0
   3aaa4:	b	24fa8 <GetDataSlab+0x3f9c>
   3aaa8:	ldr	r2, [r9]
   3aaac:	cmp	r2, #0
   3aab0:	beq	3aac8 <GetDataSlab+0x19abc>
   3aab4:	ldr	r3, [sp, #16]
   3aab8:	ldr	r3, [r3, #-4]
   3aabc:	mul	r3, r3, r2
   3aac0:	add	r5, r5, r3, lsl #3
   3aac4:	add	fp, fp, r3
   3aac8:	add	sl, sl, #1
   3aacc:	ldr	r3, [sp, #208]	; 0xd0
   3aad0:	cmp	r3, sl
   3aad4:	beq	3ab60 <GetDataSlab+0x19b54>
   3aad8:	ldr	r3, [r6]
   3aadc:	add	r3, r3, #1
   3aae0:	str	r3, [r6]
   3aae4:	add	r9, r9, #4
   3aae8:	ldr	r2, [sp, #12]
   3aaec:	ldr	r1, [r2, #4]!
   3aaf0:	str	r2, [sp, #12]
   3aaf4:	mov	r0, r3
   3aaf8:	bl	517e8 <__aeabi_idivmod>
   3aafc:	cmp	r1, #0
   3ab00:	bne	3ab4c <GetDataSlab+0x19b40>
   3ab04:	mov	r3, #0
   3ab08:	str	r3, [r6], #4
   3ab0c:	add	r7, r7, #4
   3ab10:	str	r7, [sp, #16]
   3ab14:	ldr	r4, [r7]
   3ab18:	mov	r1, r4
   3ab1c:	mov	r0, fp
   3ab20:	bl	517e8 <__aeabi_idivmod>
   3ab24:	subs	r3, r1, #0
   3ab28:	beq	3aaa8 <GetDataSlab+0x19a9c>
   3ab2c:	ldr	r2, [r7, #-4]
   3ab30:	ldr	r1, [r9]
   3ab34:	sub	r3, r4, r3
   3ab38:	mla	r3, r1, r2, r3
   3ab3c:	add	r5, r5, r3, lsl #3
   3ab40:	add	fp, fp, r3
   3ab44:	b	3aac8 <GetDataSlab+0x19abc>
   3ab48:	mov	sl, #1
   3ab4c:	add	r3, sp, #152	; 0x98
   3ab50:	add	r3, r3, sl, lsl #2
   3ab54:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ab58:	add	fp, fp, r3
   3ab5c:	add	r5, r5, r3, lsl #3
   3ab60:	ldr	r3, [sp, #24]
   3ab64:	ldr	r2, [sp, #8]
   3ab68:	add	r3, r3, r2
   3ab6c:	str	r3, [sp, #24]
   3ab70:	ldr	r2, [sp, #20]
   3ab74:	cmp	r3, r2
   3ab78:	bge	3ac60 <GetDataSlab+0x19c54>
   3ab7c:	ldr	r3, [sp, #196]	; 0xc4
   3ab80:	ldr	r3, [r3]
   3ab84:	cmp	r3, #0
   3ab88:	addne	r5, r5, r3, lsl #3
   3ab8c:	addne	fp, fp, r3
   3ab90:	ldr	r3, [sp, #204]	; 0xcc
   3ab94:	ldr	r3, [r3]
   3ab98:	str	r3, [sp, #8]
   3ab9c:	cmp	r3, #0
   3aba0:	ble	3abe0 <GetDataSlab+0x19bd4>
   3aba4:	ldr	r3, [sp, #4]
   3aba8:	ldr	r2, [sp, #24]
   3abac:	add	r2, r3, r2
   3abb0:	mov	r3, #0
   3abb4:	ldr	r1, [r5]
   3abb8:	strb	r1, [r2], #1
   3abbc:	ldr	r1, [r8]
   3abc0:	add	r5, r5, r1, lsl #3
   3abc4:	add	fp, fp, r1
   3abc8:	add	r3, r3, #1
   3abcc:	ldr	r1, [sp, #204]	; 0xcc
   3abd0:	ldr	r1, [r1]
   3abd4:	str	r1, [sp, #8]
   3abd8:	cmp	r1, r3
   3abdc:	bgt	3abb4 <GetDataSlab+0x19ba8>
   3abe0:	ldr	r3, [r8]
   3abe4:	ldr	r2, [sp, #8]
   3abe8:	mul	r3, r3, r2
   3abec:	ldr	r2, [sp, #192]	; 0xc0
   3abf0:	ldr	r2, [r2]
   3abf4:	sub	r3, r2, r3
   3abf8:	ldr	r2, [sp, #196]	; 0xc4
   3abfc:	ldr	r2, [r2]
   3ac00:	sub	r3, r3, r2
   3ac04:	add	fp, fp, r3
   3ac08:	add	r5, r5, r3, lsl #3
   3ac0c:	ldr	r3, [sp, #208]	; 0xd0
   3ac10:	cmp	r3, #1
   3ac14:	ble	3ab60 <GetDataSlab+0x19b54>
   3ac18:	ldr	r3, [sp, #76]	; 0x4c
   3ac1c:	add	r3, r3, #1
   3ac20:	str	r3, [sp, #76]	; 0x4c
   3ac24:	ldr	r2, [sp, #204]	; 0xcc
   3ac28:	ldr	r1, [r2, #4]
   3ac2c:	mov	r0, r3
   3ac30:	bl	517e8 <__aeabi_idivmod>
   3ac34:	cmp	r1, #0
   3ac38:	bne	3ab48 <GetDataSlab+0x19b3c>
   3ac3c:	add	r6, sp, #76	; 0x4c
   3ac40:	ldr	r3, [sp, #204]	; 0xcc
   3ac44:	add	r3, r3, #4
   3ac48:	str	r3, [sp, #12]
   3ac4c:	ldr	r3, [sp, #196]	; 0xc4
   3ac50:	add	r9, r3, #4
   3ac54:	add	r7, sp, #112	; 0x70
   3ac58:	mov	sl, #1
   3ac5c:	b	3ab04 <GetDataSlab+0x19af8>
   3ac60:	mov	r3, #0
   3ac64:	b	24fa8 <GetDataSlab+0x3f9c>
   3ac68:	sub	r3, r4, #1
   3ac6c:	cmp	r3, #8
   3ac70:	addls	pc, pc, r3, lsl #2
   3ac74:	b	3cbbc <GetDataSlab+0x1bbb0>
   3ac78:	b	3c3fc <GetDataSlab+0x1b3f0>
   3ac7c:	b	3c7dc <GetDataSlab+0x1b7d0>
   3ac80:	b	3bc3c <GetDataSlab+0x1ac30>
   3ac84:	b	3c01c <GetDataSlab+0x1b010>
   3ac88:	b	3b47c <GetDataSlab+0x1a470>
   3ac8c:	b	3b85c <GetDataSlab+0x1a850>
   3ac90:	b	3b08c <GetDataSlab+0x1a080>
   3ac94:	b	3cbbc <GetDataSlab+0x1bbb0>
   3ac98:	b	3ac9c <GetDataSlab+0x19c90>
   3ac9c:	ldr	r3, [r8]
   3aca0:	str	r3, [sp, #28]
   3aca4:	sub	r3, r3, #1
   3aca8:	str	r3, [sp, #32]
   3acac:	ldr	r3, [sp, #192]	; 0xc0
   3acb0:	ldr	r3, [r3]
   3acb4:	str	r3, [sp, #112]	; 0x70
   3acb8:	ldr	r3, [sp, #204]	; 0xcc
   3acbc:	ldr	r3, [r3]
   3acc0:	str	r3, [sp, #20]
   3acc4:	ldr	r3, [sp, #208]	; 0xd0
   3acc8:	cmp	r3, #1
   3accc:	ble	3ad00 <GetDataSlab+0x19cf4>
   3acd0:	str	r8, [sp, #16]
   3acd4:	add	sl, sp, #36	; 0x24
   3acd8:	ldr	lr, [sp, #192]	; 0xc0
   3acdc:	add	r9, sp, #112	; 0x70
   3ace0:	ldr	r3, [sp, #204]	; 0xcc
   3ace4:	add	r5, r3, #4
   3ace8:	ldr	r3, [sp, #196]	; 0xc4
   3acec:	add	r4, r3, #4
   3acf0:	str	lr, [sp, #12]
   3acf4:	mov	r6, #2
   3acf8:	mov	fp, #0
   3acfc:	b	42c58 <GetDataSlab+0x21c4c>
   3ad00:	mov	fp, #0
   3ad04:	b	42ce4 <GetDataSlab+0x21cd8>
   3ad08:	ldr	r3, [sp, #20]
   3ad0c:	cmp	r3, #0
   3ad10:	ble	3d610 <GetDataSlab+0x1c604>
   3ad14:	mov	r3, #0
   3ad18:	str	r3, [sp, #16]
   3ad1c:	b	3adf0 <GetDataSlab+0x19de4>
   3ad20:	ldr	r2, [r8]
   3ad24:	cmp	r2, #0
   3ad28:	beq	3ad40 <GetDataSlab+0x19d34>
   3ad2c:	ldr	r3, [sp, #12]
   3ad30:	ldr	r3, [r3, #-4]
   3ad34:	mul	r3, r3, r2
   3ad38:	add	r5, r5, r3, lsl #3
   3ad3c:	add	fp, fp, r3
   3ad40:	add	r9, r9, #1
   3ad44:	ldr	r3, [sp, #208]	; 0xd0
   3ad48:	cmp	r3, r9
   3ad4c:	beq	3add8 <GetDataSlab+0x19dcc>
   3ad50:	ldr	r3, [r6]
   3ad54:	add	r3, r3, #1
   3ad58:	str	r3, [r6]
   3ad5c:	add	r8, r8, #4
   3ad60:	ldr	r2, [sp, #8]
   3ad64:	ldr	r1, [r2, #4]!
   3ad68:	str	r2, [sp, #8]
   3ad6c:	mov	r0, r3
   3ad70:	bl	517e8 <__aeabi_idivmod>
   3ad74:	cmp	r1, #0
   3ad78:	bne	3adc4 <GetDataSlab+0x19db8>
   3ad7c:	mov	r3, #0
   3ad80:	str	r3, [r6], #4
   3ad84:	add	r7, r7, #4
   3ad88:	str	r7, [sp, #12]
   3ad8c:	ldr	r4, [r7]
   3ad90:	mov	r1, r4
   3ad94:	mov	r0, fp
   3ad98:	bl	517e8 <__aeabi_idivmod>
   3ad9c:	subs	r3, r1, #0
   3ada0:	beq	3ad20 <GetDataSlab+0x19d14>
   3ada4:	ldr	r2, [r7, #-4]
   3ada8:	ldr	r1, [r8]
   3adac:	sub	r3, r4, r3
   3adb0:	mla	r3, r1, r2, r3
   3adb4:	add	r5, r5, r3, lsl #3
   3adb8:	add	fp, fp, r3
   3adbc:	b	3ad40 <GetDataSlab+0x19d34>
   3adc0:	ldr	r9, [sp, #28]
   3adc4:	add	r3, sp, #152	; 0x98
   3adc8:	add	r3, r3, r9, lsl #2
   3adcc:	ldr	r3, [r3, #-120]	; 0xffffff88
   3add0:	add	fp, fp, r3
   3add4:	add	r5, r5, r3, lsl #3
   3add8:	ldr	r3, [sp, #16]
   3addc:	add	r3, r3, sl
   3ade0:	str	r3, [sp, #16]
   3ade4:	ldr	r2, [sp, #20]
   3ade8:	cmp	r3, r2
   3adec:	bge	3aebc <GetDataSlab+0x19eb0>
   3adf0:	ldr	r3, [sp, #196]	; 0xc4
   3adf4:	ldr	r3, [r3]
   3adf8:	cmp	r3, #0
   3adfc:	addne	r5, r5, r3, lsl #3
   3ae00:	addne	fp, fp, r3
   3ae04:	ldr	r3, [sp, #204]	; 0xcc
   3ae08:	ldr	sl, [r3]
   3ae0c:	cmp	sl, #0
   3ae10:	ble	3ae4c <GetDataSlab+0x19e40>
   3ae14:	mov	r1, r5
   3ae18:	ldr	r3, [sp, #4]
   3ae1c:	ldr	r2, [sp, #16]
   3ae20:	add	r2, r3, r2
   3ae24:	mov	r3, #0
   3ae28:	vldmia	r1!, {d7}
   3ae2c:	vcvt.u32.f64	s15, d7
   3ae30:	vmov	r0, s15
   3ae34:	strb	r0, [r2], #1
   3ae38:	add	r3, r3, #1
   3ae3c:	ldr	r0, [sp, #204]	; 0xcc
   3ae40:	ldr	sl, [r0]
   3ae44:	cmp	sl, r3
   3ae48:	bgt	3ae28 <GetDataSlab+0x19e1c>
   3ae4c:	ldr	r3, [sp, #192]	; 0xc0
   3ae50:	ldr	r2, [r3]
   3ae54:	ldr	r3, [sp, #196]	; 0xc4
   3ae58:	ldr	r3, [r3]
   3ae5c:	sub	r3, r2, r3
   3ae60:	add	fp, fp, r3
   3ae64:	add	r5, r5, r3, lsl #3
   3ae68:	ldr	r3, [sp, #208]	; 0xd0
   3ae6c:	cmp	r3, #1
   3ae70:	ble	3add8 <GetDataSlab+0x19dcc>
   3ae74:	ldr	r3, [sp, #76]	; 0x4c
   3ae78:	add	r3, r3, #1
   3ae7c:	str	r3, [sp, #76]	; 0x4c
   3ae80:	ldr	r2, [sp, #204]	; 0xcc
   3ae84:	ldr	r1, [r2, #4]
   3ae88:	mov	r0, r3
   3ae8c:	bl	517e8 <__aeabi_idivmod>
   3ae90:	cmp	r1, #0
   3ae94:	bne	3adc0 <GetDataSlab+0x19db4>
   3ae98:	add	r6, sp, #76	; 0x4c
   3ae9c:	ldr	r3, [sp, #204]	; 0xcc
   3aea0:	add	r3, r3, #4
   3aea4:	str	r3, [sp, #8]
   3aea8:	ldr	r3, [sp, #196]	; 0xc4
   3aeac:	add	r8, r3, #4
   3aeb0:	add	r7, sp, #112	; 0x70
   3aeb4:	ldr	r9, [sp, #28]
   3aeb8:	b	3ad7c <GetDataSlab+0x19d70>
   3aebc:	mov	r3, #0
   3aec0:	b	24fa8 <GetDataSlab+0x3f9c>
   3aec4:	ldr	r2, [r9]
   3aec8:	cmp	r2, #0
   3aecc:	beq	3aee4 <GetDataSlab+0x19ed8>
   3aed0:	ldr	r3, [sp, #16]
   3aed4:	ldr	r3, [r3, #-4]
   3aed8:	mul	r3, r3, r2
   3aedc:	add	r5, r5, r3, lsl #3
   3aee0:	add	fp, fp, r3
   3aee4:	add	sl, sl, #1
   3aee8:	ldr	r3, [sp, #208]	; 0xd0
   3aeec:	cmp	r3, sl
   3aef0:	beq	3af7c <GetDataSlab+0x19f70>
   3aef4:	ldr	r3, [r6]
   3aef8:	add	r3, r3, #1
   3aefc:	str	r3, [r6]
   3af00:	add	r9, r9, #4
   3af04:	ldr	r2, [sp, #12]
   3af08:	ldr	r1, [r2, #4]!
   3af0c:	str	r2, [sp, #12]
   3af10:	mov	r0, r3
   3af14:	bl	517e8 <__aeabi_idivmod>
   3af18:	cmp	r1, #0
   3af1c:	bne	3af68 <GetDataSlab+0x19f5c>
   3af20:	mov	r3, #0
   3af24:	str	r3, [r6], #4
   3af28:	add	r7, r7, #4
   3af2c:	str	r7, [sp, #16]
   3af30:	ldr	r4, [r7]
   3af34:	mov	r1, r4
   3af38:	mov	r0, fp
   3af3c:	bl	517e8 <__aeabi_idivmod>
   3af40:	subs	r3, r1, #0
   3af44:	beq	3aec4 <GetDataSlab+0x19eb8>
   3af48:	ldr	r2, [r7, #-4]
   3af4c:	ldr	r1, [r9]
   3af50:	sub	r3, r4, r3
   3af54:	mla	r3, r1, r2, r3
   3af58:	add	r5, r5, r3, lsl #3
   3af5c:	add	fp, fp, r3
   3af60:	b	3aee4 <GetDataSlab+0x19ed8>
   3af64:	mov	sl, #1
   3af68:	add	r3, sp, #152	; 0x98
   3af6c:	add	r3, r3, sl, lsl #2
   3af70:	ldr	r3, [r3, #-120]	; 0xffffff88
   3af74:	add	fp, fp, r3
   3af78:	add	r5, r5, r3, lsl #3
   3af7c:	ldr	r3, [sp, #24]
   3af80:	ldr	r2, [sp, #8]
   3af84:	add	r3, r3, r2
   3af88:	str	r3, [sp, #24]
   3af8c:	ldr	r2, [sp, #20]
   3af90:	cmp	r3, r2
   3af94:	bge	3b084 <GetDataSlab+0x1a078>
   3af98:	ldr	r3, [sp, #196]	; 0xc4
   3af9c:	ldr	r3, [r3]
   3afa0:	cmp	r3, #0
   3afa4:	addne	r5, r5, r3, lsl #3
   3afa8:	addne	fp, fp, r3
   3afac:	ldr	r3, [sp, #204]	; 0xcc
   3afb0:	ldr	r3, [r3]
   3afb4:	str	r3, [sp, #8]
   3afb8:	cmp	r3, #0
   3afbc:	ble	3b004 <GetDataSlab+0x19ff8>
   3afc0:	ldr	r3, [sp, #4]
   3afc4:	ldr	r2, [sp, #24]
   3afc8:	add	r2, r3, r2
   3afcc:	mov	r3, #0
   3afd0:	vldr	d7, [r5]
   3afd4:	vcvt.u32.f64	s15, d7
   3afd8:	vmov	r1, s15
   3afdc:	strb	r1, [r2], #1
   3afe0:	ldr	r1, [r8]
   3afe4:	add	r5, r5, r1, lsl #3
   3afe8:	add	fp, fp, r1
   3afec:	add	r3, r3, #1
   3aff0:	ldr	r1, [sp, #204]	; 0xcc
   3aff4:	ldr	r1, [r1]
   3aff8:	str	r1, [sp, #8]
   3affc:	cmp	r1, r3
   3b000:	bgt	3afd0 <GetDataSlab+0x19fc4>
   3b004:	ldr	r3, [r8]
   3b008:	ldr	r2, [sp, #8]
   3b00c:	mul	r3, r3, r2
   3b010:	ldr	r2, [sp, #192]	; 0xc0
   3b014:	ldr	r2, [r2]
   3b018:	sub	r3, r2, r3
   3b01c:	ldr	r2, [sp, #196]	; 0xc4
   3b020:	ldr	r2, [r2]
   3b024:	sub	r3, r3, r2
   3b028:	add	fp, fp, r3
   3b02c:	add	r5, r5, r3, lsl #3
   3b030:	ldr	r3, [sp, #208]	; 0xd0
   3b034:	cmp	r3, #1
   3b038:	ble	3af7c <GetDataSlab+0x19f70>
   3b03c:	ldr	r3, [sp, #76]	; 0x4c
   3b040:	add	r3, r3, #1
   3b044:	str	r3, [sp, #76]	; 0x4c
   3b048:	ldr	r2, [sp, #204]	; 0xcc
   3b04c:	ldr	r1, [r2, #4]
   3b050:	mov	r0, r3
   3b054:	bl	517e8 <__aeabi_idivmod>
   3b058:	cmp	r1, #0
   3b05c:	bne	3af64 <GetDataSlab+0x19f58>
   3b060:	add	r6, sp, #76	; 0x4c
   3b064:	ldr	r3, [sp, #204]	; 0xcc
   3b068:	add	r3, r3, #4
   3b06c:	str	r3, [sp, #12]
   3b070:	ldr	r3, [sp, #196]	; 0xc4
   3b074:	add	r9, r3, #4
   3b078:	add	r7, sp, #112	; 0x70
   3b07c:	mov	sl, #1
   3b080:	b	3af20 <GetDataSlab+0x19f14>
   3b084:	mov	r3, #0
   3b088:	b	24fa8 <GetDataSlab+0x3f9c>
   3b08c:	ldr	r3, [r8]
   3b090:	str	r3, [sp, #28]
   3b094:	sub	r3, r3, #1
   3b098:	str	r3, [sp, #32]
   3b09c:	ldr	r3, [sp, #192]	; 0xc0
   3b0a0:	ldr	r3, [r3]
   3b0a4:	str	r3, [sp, #112]	; 0x70
   3b0a8:	ldr	r3, [sp, #204]	; 0xcc
   3b0ac:	ldr	r3, [r3]
   3b0b0:	str	r3, [sp, #20]
   3b0b4:	ldr	r3, [sp, #208]	; 0xd0
   3b0b8:	cmp	r3, #1
   3b0bc:	ble	3b0f0 <GetDataSlab+0x1a0e4>
   3b0c0:	str	r8, [sp, #16]
   3b0c4:	add	sl, sp, #36	; 0x24
   3b0c8:	ldr	lr, [sp, #192]	; 0xc0
   3b0cc:	add	r9, sp, #112	; 0x70
   3b0d0:	ldr	r3, [sp, #204]	; 0xcc
   3b0d4:	add	r5, r3, #4
   3b0d8:	ldr	r3, [sp, #196]	; 0xc4
   3b0dc:	add	r4, r3, #4
   3b0e0:	str	lr, [sp, #12]
   3b0e4:	mov	r6, #2
   3b0e8:	mov	fp, #0
   3b0ec:	b	42d44 <GetDataSlab+0x21d38>
   3b0f0:	mov	fp, #0
   3b0f4:	b	42dd0 <GetDataSlab+0x21dc4>
   3b0f8:	ldr	r3, [sp, #20]
   3b0fc:	cmp	r3, #0
   3b100:	ble	3d618 <GetDataSlab+0x1c60c>
   3b104:	mov	r3, #0
   3b108:	str	r3, [sp, #16]
   3b10c:	b	3b1e0 <GetDataSlab+0x1a1d4>
   3b110:	ldr	r2, [r8]
   3b114:	cmp	r2, #0
   3b118:	beq	3b130 <GetDataSlab+0x1a124>
   3b11c:	ldr	r3, [sp, #12]
   3b120:	ldr	r3, [r3, #-4]
   3b124:	mul	r3, r3, r2
   3b128:	add	r5, r5, r3, lsl #2
   3b12c:	add	fp, fp, r3
   3b130:	add	r9, r9, #1
   3b134:	ldr	r3, [sp, #208]	; 0xd0
   3b138:	cmp	r3, r9
   3b13c:	beq	3b1c8 <GetDataSlab+0x1a1bc>
   3b140:	ldr	r3, [r6]
   3b144:	add	r3, r3, #1
   3b148:	str	r3, [r6]
   3b14c:	add	r8, r8, #4
   3b150:	ldr	r2, [sp, #8]
   3b154:	ldr	r1, [r2, #4]!
   3b158:	str	r2, [sp, #8]
   3b15c:	mov	r0, r3
   3b160:	bl	517e8 <__aeabi_idivmod>
   3b164:	cmp	r1, #0
   3b168:	bne	3b1b4 <GetDataSlab+0x1a1a8>
   3b16c:	mov	r3, #0
   3b170:	str	r3, [r6], #4
   3b174:	add	r7, r7, #4
   3b178:	str	r7, [sp, #12]
   3b17c:	ldr	r4, [r7]
   3b180:	mov	r1, r4
   3b184:	mov	r0, fp
   3b188:	bl	517e8 <__aeabi_idivmod>
   3b18c:	subs	r3, r1, #0
   3b190:	beq	3b110 <GetDataSlab+0x1a104>
   3b194:	ldr	r2, [r7, #-4]
   3b198:	ldr	r1, [r8]
   3b19c:	sub	r3, r4, r3
   3b1a0:	mla	r3, r1, r2, r3
   3b1a4:	add	r5, r5, r3, lsl #2
   3b1a8:	add	fp, fp, r3
   3b1ac:	b	3b130 <GetDataSlab+0x1a124>
   3b1b0:	ldr	r9, [sp, #28]
   3b1b4:	add	r3, sp, #152	; 0x98
   3b1b8:	add	r3, r3, r9, lsl #2
   3b1bc:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b1c0:	add	fp, fp, r3
   3b1c4:	add	r5, r5, r3, lsl #2
   3b1c8:	ldr	r3, [sp, #16]
   3b1cc:	add	r3, r3, sl
   3b1d0:	str	r3, [sp, #16]
   3b1d4:	ldr	r2, [sp, #20]
   3b1d8:	cmp	r3, r2
   3b1dc:	bge	3b2ac <GetDataSlab+0x1a2a0>
   3b1e0:	ldr	r3, [sp, #196]	; 0xc4
   3b1e4:	ldr	r3, [r3]
   3b1e8:	cmp	r3, #0
   3b1ec:	addne	r5, r5, r3, lsl #2
   3b1f0:	addne	fp, fp, r3
   3b1f4:	ldr	r3, [sp, #204]	; 0xcc
   3b1f8:	ldr	sl, [r3]
   3b1fc:	cmp	sl, #0
   3b200:	ble	3b23c <GetDataSlab+0x1a230>
   3b204:	mov	r1, r5
   3b208:	ldr	r3, [sp, #4]
   3b20c:	ldr	r2, [sp, #16]
   3b210:	add	r2, r3, r2
   3b214:	mov	r3, #0
   3b218:	vldmia	r1!, {s15}
   3b21c:	vcvt.u32.f32	s15, s15
   3b220:	vmov	r0, s15
   3b224:	strb	r0, [r2], #1
   3b228:	add	r3, r3, #1
   3b22c:	ldr	r0, [sp, #204]	; 0xcc
   3b230:	ldr	sl, [r0]
   3b234:	cmp	sl, r3
   3b238:	bgt	3b218 <GetDataSlab+0x1a20c>
   3b23c:	ldr	r3, [sp, #192]	; 0xc0
   3b240:	ldr	r2, [r3]
   3b244:	ldr	r3, [sp, #196]	; 0xc4
   3b248:	ldr	r3, [r3]
   3b24c:	sub	r3, r2, r3
   3b250:	add	fp, fp, r3
   3b254:	add	r5, r5, r3, lsl #2
   3b258:	ldr	r3, [sp, #208]	; 0xd0
   3b25c:	cmp	r3, #1
   3b260:	ble	3b1c8 <GetDataSlab+0x1a1bc>
   3b264:	ldr	r3, [sp, #76]	; 0x4c
   3b268:	add	r3, r3, #1
   3b26c:	str	r3, [sp, #76]	; 0x4c
   3b270:	ldr	r2, [sp, #204]	; 0xcc
   3b274:	ldr	r1, [r2, #4]
   3b278:	mov	r0, r3
   3b27c:	bl	517e8 <__aeabi_idivmod>
   3b280:	cmp	r1, #0
   3b284:	bne	3b1b0 <GetDataSlab+0x1a1a4>
   3b288:	add	r6, sp, #76	; 0x4c
   3b28c:	ldr	r3, [sp, #204]	; 0xcc
   3b290:	add	r3, r3, #4
   3b294:	str	r3, [sp, #8]
   3b298:	ldr	r3, [sp, #196]	; 0xc4
   3b29c:	add	r8, r3, #4
   3b2a0:	add	r7, sp, #112	; 0x70
   3b2a4:	ldr	r9, [sp, #28]
   3b2a8:	b	3b16c <GetDataSlab+0x1a160>
   3b2ac:	mov	r3, #0
   3b2b0:	b	24fa8 <GetDataSlab+0x3f9c>
   3b2b4:	ldr	r2, [r9]
   3b2b8:	cmp	r2, #0
   3b2bc:	beq	3b2d4 <GetDataSlab+0x1a2c8>
   3b2c0:	ldr	r3, [sp, #16]
   3b2c4:	ldr	r3, [r3, #-4]
   3b2c8:	mul	r3, r3, r2
   3b2cc:	add	r5, r5, r3, lsl #2
   3b2d0:	add	fp, fp, r3
   3b2d4:	add	sl, sl, #1
   3b2d8:	ldr	r3, [sp, #208]	; 0xd0
   3b2dc:	cmp	r3, sl
   3b2e0:	beq	3b36c <GetDataSlab+0x1a360>
   3b2e4:	ldr	r3, [r6]
   3b2e8:	add	r3, r3, #1
   3b2ec:	str	r3, [r6]
   3b2f0:	add	r9, r9, #4
   3b2f4:	ldr	r2, [sp, #12]
   3b2f8:	ldr	r1, [r2, #4]!
   3b2fc:	str	r2, [sp, #12]
   3b300:	mov	r0, r3
   3b304:	bl	517e8 <__aeabi_idivmod>
   3b308:	cmp	r1, #0
   3b30c:	bne	3b358 <GetDataSlab+0x1a34c>
   3b310:	mov	r3, #0
   3b314:	str	r3, [r6], #4
   3b318:	add	r7, r7, #4
   3b31c:	str	r7, [sp, #16]
   3b320:	ldr	r4, [r7]
   3b324:	mov	r1, r4
   3b328:	mov	r0, fp
   3b32c:	bl	517e8 <__aeabi_idivmod>
   3b330:	subs	r3, r1, #0
   3b334:	beq	3b2b4 <GetDataSlab+0x1a2a8>
   3b338:	ldr	r2, [r7, #-4]
   3b33c:	ldr	r1, [r9]
   3b340:	sub	r3, r4, r3
   3b344:	mla	r3, r1, r2, r3
   3b348:	add	r5, r5, r3, lsl #2
   3b34c:	add	fp, fp, r3
   3b350:	b	3b2d4 <GetDataSlab+0x1a2c8>
   3b354:	mov	sl, #1
   3b358:	add	r3, sp, #152	; 0x98
   3b35c:	add	r3, r3, sl, lsl #2
   3b360:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b364:	add	fp, fp, r3
   3b368:	add	r5, r5, r3, lsl #2
   3b36c:	ldr	r3, [sp, #24]
   3b370:	ldr	r2, [sp, #8]
   3b374:	add	r3, r3, r2
   3b378:	str	r3, [sp, #24]
   3b37c:	ldr	r2, [sp, #20]
   3b380:	cmp	r3, r2
   3b384:	bge	3b474 <GetDataSlab+0x1a468>
   3b388:	ldr	r3, [sp, #196]	; 0xc4
   3b38c:	ldr	r3, [r3]
   3b390:	cmp	r3, #0
   3b394:	addne	r5, r5, r3, lsl #2
   3b398:	addne	fp, fp, r3
   3b39c:	ldr	r3, [sp, #204]	; 0xcc
   3b3a0:	ldr	r3, [r3]
   3b3a4:	str	r3, [sp, #8]
   3b3a8:	cmp	r3, #0
   3b3ac:	ble	3b3f4 <GetDataSlab+0x1a3e8>
   3b3b0:	ldr	r3, [sp, #4]
   3b3b4:	ldr	r2, [sp, #24]
   3b3b8:	add	r2, r3, r2
   3b3bc:	mov	r3, #0
   3b3c0:	vldr	s15, [r5]
   3b3c4:	vcvt.u32.f32	s15, s15
   3b3c8:	vmov	r1, s15
   3b3cc:	strb	r1, [r2], #1
   3b3d0:	ldr	r1, [r8]
   3b3d4:	add	r5, r5, r1, lsl #2
   3b3d8:	add	fp, fp, r1
   3b3dc:	add	r3, r3, #1
   3b3e0:	ldr	r1, [sp, #204]	; 0xcc
   3b3e4:	ldr	r1, [r1]
   3b3e8:	str	r1, [sp, #8]
   3b3ec:	cmp	r1, r3
   3b3f0:	bgt	3b3c0 <GetDataSlab+0x1a3b4>
   3b3f4:	ldr	r3, [r8]
   3b3f8:	ldr	r2, [sp, #8]
   3b3fc:	mul	r3, r3, r2
   3b400:	ldr	r2, [sp, #192]	; 0xc0
   3b404:	ldr	r2, [r2]
   3b408:	sub	r3, r2, r3
   3b40c:	ldr	r2, [sp, #196]	; 0xc4
   3b410:	ldr	r2, [r2]
   3b414:	sub	r3, r3, r2
   3b418:	add	fp, fp, r3
   3b41c:	add	r5, r5, r3, lsl #2
   3b420:	ldr	r3, [sp, #208]	; 0xd0
   3b424:	cmp	r3, #1
   3b428:	ble	3b36c <GetDataSlab+0x1a360>
   3b42c:	ldr	r3, [sp, #76]	; 0x4c
   3b430:	add	r3, r3, #1
   3b434:	str	r3, [sp, #76]	; 0x4c
   3b438:	ldr	r2, [sp, #204]	; 0xcc
   3b43c:	ldr	r1, [r2, #4]
   3b440:	mov	r0, r3
   3b444:	bl	517e8 <__aeabi_idivmod>
   3b448:	cmp	r1, #0
   3b44c:	bne	3b354 <GetDataSlab+0x1a348>
   3b450:	add	r6, sp, #76	; 0x4c
   3b454:	ldr	r3, [sp, #204]	; 0xcc
   3b458:	add	r3, r3, #4
   3b45c:	str	r3, [sp, #12]
   3b460:	ldr	r3, [sp, #196]	; 0xc4
   3b464:	add	r9, r3, #4
   3b468:	add	r7, sp, #112	; 0x70
   3b46c:	mov	sl, #1
   3b470:	b	3b310 <GetDataSlab+0x1a304>
   3b474:	mov	r3, #0
   3b478:	b	24fa8 <GetDataSlab+0x3f9c>
   3b47c:	ldr	r3, [r8]
   3b480:	str	r3, [sp, #28]
   3b484:	sub	r3, r3, #1
   3b488:	str	r3, [sp, #32]
   3b48c:	ldr	r3, [sp, #192]	; 0xc0
   3b490:	ldr	r3, [r3]
   3b494:	str	r3, [sp, #112]	; 0x70
   3b498:	ldr	r3, [sp, #204]	; 0xcc
   3b49c:	ldr	r3, [r3]
   3b4a0:	str	r3, [sp, #20]
   3b4a4:	ldr	r3, [sp, #208]	; 0xd0
   3b4a8:	cmp	r3, #1
   3b4ac:	ble	3b4e0 <GetDataSlab+0x1a4d4>
   3b4b0:	str	r8, [sp, #16]
   3b4b4:	add	sl, sp, #36	; 0x24
   3b4b8:	ldr	lr, [sp, #192]	; 0xc0
   3b4bc:	add	r9, sp, #112	; 0x70
   3b4c0:	ldr	r3, [sp, #204]	; 0xcc
   3b4c4:	add	r5, r3, #4
   3b4c8:	ldr	r3, [sp, #196]	; 0xc4
   3b4cc:	add	r4, r3, #4
   3b4d0:	str	lr, [sp, #12]
   3b4d4:	mov	r6, #2
   3b4d8:	mov	fp, #0
   3b4dc:	b	42e30 <GetDataSlab+0x21e24>
   3b4e0:	mov	fp, #0
   3b4e4:	b	42ebc <GetDataSlab+0x21eb0>
   3b4e8:	ldr	r3, [sp, #20]
   3b4ec:	cmp	r3, #0
   3b4f0:	ble	3d620 <GetDataSlab+0x1c614>
   3b4f4:	mov	r3, #0
   3b4f8:	str	r3, [sp, #16]
   3b4fc:	b	3b5d0 <GetDataSlab+0x1a5c4>
   3b500:	ldr	r2, [r8]
   3b504:	cmp	r2, #0
   3b508:	beq	3b520 <GetDataSlab+0x1a514>
   3b50c:	ldr	r3, [sp, #12]
   3b510:	ldr	r3, [r3, #-4]
   3b514:	mul	r3, r3, r2
   3b518:	add	r5, r5, r3, lsl #2
   3b51c:	add	fp, fp, r3
   3b520:	add	r9, r9, #1
   3b524:	ldr	r3, [sp, #208]	; 0xd0
   3b528:	cmp	r3, r9
   3b52c:	beq	3b5b8 <GetDataSlab+0x1a5ac>
   3b530:	ldr	r3, [r6]
   3b534:	add	r3, r3, #1
   3b538:	str	r3, [r6]
   3b53c:	add	r8, r8, #4
   3b540:	ldr	r2, [sp, #8]
   3b544:	ldr	r1, [r2, #4]!
   3b548:	str	r2, [sp, #8]
   3b54c:	mov	r0, r3
   3b550:	bl	517e8 <__aeabi_idivmod>
   3b554:	cmp	r1, #0
   3b558:	bne	3b5a4 <GetDataSlab+0x1a598>
   3b55c:	mov	r3, #0
   3b560:	str	r3, [r6], #4
   3b564:	add	r7, r7, #4
   3b568:	str	r7, [sp, #12]
   3b56c:	ldr	r4, [r7]
   3b570:	mov	r1, r4
   3b574:	mov	r0, fp
   3b578:	bl	517e8 <__aeabi_idivmod>
   3b57c:	subs	r3, r1, #0
   3b580:	beq	3b500 <GetDataSlab+0x1a4f4>
   3b584:	ldr	r2, [r7, #-4]
   3b588:	ldr	r1, [r8]
   3b58c:	sub	r3, r4, r3
   3b590:	mla	r3, r1, r2, r3
   3b594:	add	r5, r5, r3, lsl #2
   3b598:	add	fp, fp, r3
   3b59c:	b	3b520 <GetDataSlab+0x1a514>
   3b5a0:	ldr	r9, [sp, #28]
   3b5a4:	add	r3, sp, #152	; 0x98
   3b5a8:	add	r3, r3, r9, lsl #2
   3b5ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b5b0:	add	fp, fp, r3
   3b5b4:	add	r5, r5, r3, lsl #2
   3b5b8:	ldr	r3, [sp, #16]
   3b5bc:	add	r3, r3, sl
   3b5c0:	str	r3, [sp, #16]
   3b5c4:	ldr	r2, [sp, #20]
   3b5c8:	cmp	r3, r2
   3b5cc:	bge	3b694 <GetDataSlab+0x1a688>
   3b5d0:	ldr	r3, [sp, #196]	; 0xc4
   3b5d4:	ldr	r3, [r3]
   3b5d8:	cmp	r3, #0
   3b5dc:	addne	r5, r5, r3, lsl #2
   3b5e0:	addne	fp, fp, r3
   3b5e4:	ldr	r3, [sp, #204]	; 0xcc
   3b5e8:	ldr	sl, [r3]
   3b5ec:	cmp	sl, #0
   3b5f0:	ble	3b624 <GetDataSlab+0x1a618>
   3b5f4:	sub	r0, r5, #4
   3b5f8:	ldr	r3, [sp, #4]
   3b5fc:	ldr	r2, [sp, #16]
   3b600:	add	r1, r3, r2
   3b604:	mov	r2, #0
   3b608:	ldr	r3, [r0, #4]!
   3b60c:	strb	r3, [r1], #1
   3b610:	add	r2, r2, #1
   3b614:	ldr	r3, [sp, #204]	; 0xcc
   3b618:	ldr	sl, [r3]
   3b61c:	cmp	sl, r2
   3b620:	bgt	3b608 <GetDataSlab+0x1a5fc>
   3b624:	ldr	r3, [sp, #192]	; 0xc0
   3b628:	ldr	r2, [r3]
   3b62c:	ldr	r3, [sp, #196]	; 0xc4
   3b630:	ldr	r3, [r3]
   3b634:	sub	r3, r2, r3
   3b638:	add	fp, fp, r3
   3b63c:	add	r5, r5, r3, lsl #2
   3b640:	ldr	r3, [sp, #208]	; 0xd0
   3b644:	cmp	r3, #1
   3b648:	ble	3b5b8 <GetDataSlab+0x1a5ac>
   3b64c:	ldr	r3, [sp, #76]	; 0x4c
   3b650:	add	r3, r3, #1
   3b654:	str	r3, [sp, #76]	; 0x4c
   3b658:	ldr	r2, [sp, #204]	; 0xcc
   3b65c:	ldr	r1, [r2, #4]
   3b660:	mov	r0, r3
   3b664:	bl	517e8 <__aeabi_idivmod>
   3b668:	cmp	r1, #0
   3b66c:	bne	3b5a0 <GetDataSlab+0x1a594>
   3b670:	add	r6, sp, #76	; 0x4c
   3b674:	ldr	r3, [sp, #204]	; 0xcc
   3b678:	add	r3, r3, #4
   3b67c:	str	r3, [sp, #8]
   3b680:	ldr	r3, [sp, #196]	; 0xc4
   3b684:	add	r8, r3, #4
   3b688:	add	r7, sp, #112	; 0x70
   3b68c:	ldr	r9, [sp, #28]
   3b690:	b	3b55c <GetDataSlab+0x1a550>
   3b694:	mov	r3, #0
   3b698:	b	24fa8 <GetDataSlab+0x3f9c>
   3b69c:	ldr	r2, [r9]
   3b6a0:	cmp	r2, #0
   3b6a4:	beq	3b6bc <GetDataSlab+0x1a6b0>
   3b6a8:	ldr	r3, [sp, #16]
   3b6ac:	ldr	r3, [r3, #-4]
   3b6b0:	mul	r3, r3, r2
   3b6b4:	add	r5, r5, r3, lsl #2
   3b6b8:	add	fp, fp, r3
   3b6bc:	add	sl, sl, #1
   3b6c0:	ldr	r3, [sp, #208]	; 0xd0
   3b6c4:	cmp	r3, sl
   3b6c8:	beq	3b754 <GetDataSlab+0x1a748>
   3b6cc:	ldr	r3, [r6]
   3b6d0:	add	r3, r3, #1
   3b6d4:	str	r3, [r6]
   3b6d8:	add	r9, r9, #4
   3b6dc:	ldr	r2, [sp, #12]
   3b6e0:	ldr	r1, [r2, #4]!
   3b6e4:	str	r2, [sp, #12]
   3b6e8:	mov	r0, r3
   3b6ec:	bl	517e8 <__aeabi_idivmod>
   3b6f0:	cmp	r1, #0
   3b6f4:	bne	3b740 <GetDataSlab+0x1a734>
   3b6f8:	mov	r3, #0
   3b6fc:	str	r3, [r6], #4
   3b700:	add	r7, r7, #4
   3b704:	str	r7, [sp, #16]
   3b708:	ldr	r4, [r7]
   3b70c:	mov	r1, r4
   3b710:	mov	r0, fp
   3b714:	bl	517e8 <__aeabi_idivmod>
   3b718:	subs	r3, r1, #0
   3b71c:	beq	3b69c <GetDataSlab+0x1a690>
   3b720:	ldr	r2, [r7, #-4]
   3b724:	ldr	r1, [r9]
   3b728:	sub	r3, r4, r3
   3b72c:	mla	r3, r1, r2, r3
   3b730:	add	r5, r5, r3, lsl #2
   3b734:	add	fp, fp, r3
   3b738:	b	3b6bc <GetDataSlab+0x1a6b0>
   3b73c:	mov	sl, #1
   3b740:	add	r3, sp, #152	; 0x98
   3b744:	add	r3, r3, sl, lsl #2
   3b748:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b74c:	add	fp, fp, r3
   3b750:	add	r5, r5, r3, lsl #2
   3b754:	ldr	r3, [sp, #24]
   3b758:	ldr	r2, [sp, #8]
   3b75c:	add	r3, r3, r2
   3b760:	str	r3, [sp, #24]
   3b764:	ldr	r2, [sp, #20]
   3b768:	cmp	r3, r2
   3b76c:	bge	3b854 <GetDataSlab+0x1a848>
   3b770:	ldr	r3, [sp, #196]	; 0xc4
   3b774:	ldr	r3, [r3]
   3b778:	cmp	r3, #0
   3b77c:	addne	r5, r5, r3, lsl #2
   3b780:	addne	fp, fp, r3
   3b784:	ldr	r3, [sp, #204]	; 0xcc
   3b788:	ldr	r3, [r3]
   3b78c:	str	r3, [sp, #8]
   3b790:	cmp	r3, #0
   3b794:	ble	3b7d4 <GetDataSlab+0x1a7c8>
   3b798:	ldr	r3, [sp, #4]
   3b79c:	ldr	r2, [sp, #24]
   3b7a0:	add	r2, r3, r2
   3b7a4:	mov	r3, #0
   3b7a8:	ldr	r1, [r5]
   3b7ac:	strb	r1, [r2], #1
   3b7b0:	ldr	r1, [r8]
   3b7b4:	add	r5, r5, r1, lsl #2
   3b7b8:	add	fp, fp, r1
   3b7bc:	add	r3, r3, #1
   3b7c0:	ldr	r1, [sp, #204]	; 0xcc
   3b7c4:	ldr	r1, [r1]
   3b7c8:	str	r1, [sp, #8]
   3b7cc:	cmp	r1, r3
   3b7d0:	bgt	3b7a8 <GetDataSlab+0x1a79c>
   3b7d4:	ldr	r3, [r8]
   3b7d8:	ldr	r2, [sp, #8]
   3b7dc:	mul	r3, r3, r2
   3b7e0:	ldr	r2, [sp, #192]	; 0xc0
   3b7e4:	ldr	r2, [r2]
   3b7e8:	sub	r3, r2, r3
   3b7ec:	ldr	r2, [sp, #196]	; 0xc4
   3b7f0:	ldr	r2, [r2]
   3b7f4:	sub	r3, r3, r2
   3b7f8:	add	fp, fp, r3
   3b7fc:	add	r5, r5, r3, lsl #2
   3b800:	ldr	r3, [sp, #208]	; 0xd0
   3b804:	cmp	r3, #1
   3b808:	ble	3b754 <GetDataSlab+0x1a748>
   3b80c:	ldr	r3, [sp, #76]	; 0x4c
   3b810:	add	r3, r3, #1
   3b814:	str	r3, [sp, #76]	; 0x4c
   3b818:	ldr	r2, [sp, #204]	; 0xcc
   3b81c:	ldr	r1, [r2, #4]
   3b820:	mov	r0, r3
   3b824:	bl	517e8 <__aeabi_idivmod>
   3b828:	cmp	r1, #0
   3b82c:	bne	3b73c <GetDataSlab+0x1a730>
   3b830:	add	r6, sp, #76	; 0x4c
   3b834:	ldr	r3, [sp, #204]	; 0xcc
   3b838:	add	r3, r3, #4
   3b83c:	str	r3, [sp, #12]
   3b840:	ldr	r3, [sp, #196]	; 0xc4
   3b844:	add	r9, r3, #4
   3b848:	add	r7, sp, #112	; 0x70
   3b84c:	mov	sl, #1
   3b850:	b	3b6f8 <GetDataSlab+0x1a6ec>
   3b854:	mov	r3, #0
   3b858:	b	24fa8 <GetDataSlab+0x3f9c>
   3b85c:	ldr	r3, [r8]
   3b860:	str	r3, [sp, #28]
   3b864:	sub	r3, r3, #1
   3b868:	str	r3, [sp, #32]
   3b86c:	ldr	r3, [sp, #192]	; 0xc0
   3b870:	ldr	r3, [r3]
   3b874:	str	r3, [sp, #112]	; 0x70
   3b878:	ldr	r3, [sp, #204]	; 0xcc
   3b87c:	ldr	r3, [r3]
   3b880:	str	r3, [sp, #20]
   3b884:	ldr	r3, [sp, #208]	; 0xd0
   3b888:	cmp	r3, #1
   3b88c:	ble	3b8c0 <GetDataSlab+0x1a8b4>
   3b890:	str	r8, [sp, #16]
   3b894:	add	sl, sp, #36	; 0x24
   3b898:	ldr	lr, [sp, #192]	; 0xc0
   3b89c:	add	r9, sp, #112	; 0x70
   3b8a0:	ldr	r3, [sp, #204]	; 0xcc
   3b8a4:	add	r5, r3, #4
   3b8a8:	ldr	r3, [sp, #196]	; 0xc4
   3b8ac:	add	r4, r3, #4
   3b8b0:	str	lr, [sp, #12]
   3b8b4:	mov	r6, #2
   3b8b8:	mov	fp, #0
   3b8bc:	b	42f1c <GetDataSlab+0x21f10>
   3b8c0:	mov	fp, #0
   3b8c4:	b	42fa8 <GetDataSlab+0x21f9c>
   3b8c8:	ldr	r3, [sp, #20]
   3b8cc:	cmp	r3, #0
   3b8d0:	ble	3d628 <GetDataSlab+0x1c61c>
   3b8d4:	mov	r3, #0
   3b8d8:	str	r3, [sp, #16]
   3b8dc:	b	3b9b0 <GetDataSlab+0x1a9a4>
   3b8e0:	ldr	r2, [r8]
   3b8e4:	cmp	r2, #0
   3b8e8:	beq	3b900 <GetDataSlab+0x1a8f4>
   3b8ec:	ldr	r3, [sp, #12]
   3b8f0:	ldr	r3, [r3, #-4]
   3b8f4:	mul	r3, r3, r2
   3b8f8:	add	r5, r5, r3, lsl #2
   3b8fc:	add	fp, fp, r3
   3b900:	add	r9, r9, #1
   3b904:	ldr	r3, [sp, #208]	; 0xd0
   3b908:	cmp	r3, r9
   3b90c:	beq	3b998 <GetDataSlab+0x1a98c>
   3b910:	ldr	r3, [r6]
   3b914:	add	r3, r3, #1
   3b918:	str	r3, [r6]
   3b91c:	add	r8, r8, #4
   3b920:	ldr	r2, [sp, #8]
   3b924:	ldr	r1, [r2, #4]!
   3b928:	str	r2, [sp, #8]
   3b92c:	mov	r0, r3
   3b930:	bl	517e8 <__aeabi_idivmod>
   3b934:	cmp	r1, #0
   3b938:	bne	3b984 <GetDataSlab+0x1a978>
   3b93c:	mov	r3, #0
   3b940:	str	r3, [r6], #4
   3b944:	add	r7, r7, #4
   3b948:	str	r7, [sp, #12]
   3b94c:	ldr	r4, [r7]
   3b950:	mov	r1, r4
   3b954:	mov	r0, fp
   3b958:	bl	517e8 <__aeabi_idivmod>
   3b95c:	subs	r3, r1, #0
   3b960:	beq	3b8e0 <GetDataSlab+0x1a8d4>
   3b964:	ldr	r2, [r7, #-4]
   3b968:	ldr	r1, [r8]
   3b96c:	sub	r3, r4, r3
   3b970:	mla	r3, r1, r2, r3
   3b974:	add	r5, r5, r3, lsl #2
   3b978:	add	fp, fp, r3
   3b97c:	b	3b900 <GetDataSlab+0x1a8f4>
   3b980:	ldr	r9, [sp, #28]
   3b984:	add	r3, sp, #152	; 0x98
   3b988:	add	r3, r3, r9, lsl #2
   3b98c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b990:	add	fp, fp, r3
   3b994:	add	r5, r5, r3, lsl #2
   3b998:	ldr	r3, [sp, #16]
   3b99c:	add	r3, r3, sl
   3b9a0:	str	r3, [sp, #16]
   3b9a4:	ldr	r2, [sp, #20]
   3b9a8:	cmp	r3, r2
   3b9ac:	bge	3ba74 <GetDataSlab+0x1aa68>
   3b9b0:	ldr	r3, [sp, #196]	; 0xc4
   3b9b4:	ldr	r3, [r3]
   3b9b8:	cmp	r3, #0
   3b9bc:	addne	r5, r5, r3, lsl #2
   3b9c0:	addne	fp, fp, r3
   3b9c4:	ldr	r3, [sp, #204]	; 0xcc
   3b9c8:	ldr	sl, [r3]
   3b9cc:	cmp	sl, #0
   3b9d0:	ble	3ba04 <GetDataSlab+0x1a9f8>
   3b9d4:	sub	r0, r5, #4
   3b9d8:	ldr	r3, [sp, #4]
   3b9dc:	ldr	r2, [sp, #16]
   3b9e0:	add	r1, r3, r2
   3b9e4:	mov	r2, #0
   3b9e8:	ldr	r3, [r0, #4]!
   3b9ec:	strb	r3, [r1], #1
   3b9f0:	add	r2, r2, #1
   3b9f4:	ldr	r3, [sp, #204]	; 0xcc
   3b9f8:	ldr	sl, [r3]
   3b9fc:	cmp	sl, r2
   3ba00:	bgt	3b9e8 <GetDataSlab+0x1a9dc>
   3ba04:	ldr	r3, [sp, #192]	; 0xc0
   3ba08:	ldr	r2, [r3]
   3ba0c:	ldr	r3, [sp, #196]	; 0xc4
   3ba10:	ldr	r3, [r3]
   3ba14:	sub	r3, r2, r3
   3ba18:	add	fp, fp, r3
   3ba1c:	add	r5, r5, r3, lsl #2
   3ba20:	ldr	r3, [sp, #208]	; 0xd0
   3ba24:	cmp	r3, #1
   3ba28:	ble	3b998 <GetDataSlab+0x1a98c>
   3ba2c:	ldr	r3, [sp, #76]	; 0x4c
   3ba30:	add	r3, r3, #1
   3ba34:	str	r3, [sp, #76]	; 0x4c
   3ba38:	ldr	r2, [sp, #204]	; 0xcc
   3ba3c:	ldr	r1, [r2, #4]
   3ba40:	mov	r0, r3
   3ba44:	bl	517e8 <__aeabi_idivmod>
   3ba48:	cmp	r1, #0
   3ba4c:	bne	3b980 <GetDataSlab+0x1a974>
   3ba50:	add	r6, sp, #76	; 0x4c
   3ba54:	ldr	r3, [sp, #204]	; 0xcc
   3ba58:	add	r3, r3, #4
   3ba5c:	str	r3, [sp, #8]
   3ba60:	ldr	r3, [sp, #196]	; 0xc4
   3ba64:	add	r8, r3, #4
   3ba68:	add	r7, sp, #112	; 0x70
   3ba6c:	ldr	r9, [sp, #28]
   3ba70:	b	3b93c <GetDataSlab+0x1a930>
   3ba74:	mov	r3, #0
   3ba78:	b	24fa8 <GetDataSlab+0x3f9c>
   3ba7c:	ldr	r2, [r9]
   3ba80:	cmp	r2, #0
   3ba84:	beq	3ba9c <GetDataSlab+0x1aa90>
   3ba88:	ldr	r3, [sp, #16]
   3ba8c:	ldr	r3, [r3, #-4]
   3ba90:	mul	r3, r3, r2
   3ba94:	add	r5, r5, r3, lsl #2
   3ba98:	add	fp, fp, r3
   3ba9c:	add	sl, sl, #1
   3baa0:	ldr	r3, [sp, #208]	; 0xd0
   3baa4:	cmp	r3, sl
   3baa8:	beq	3bb34 <GetDataSlab+0x1ab28>
   3baac:	ldr	r3, [r6]
   3bab0:	add	r3, r3, #1
   3bab4:	str	r3, [r6]
   3bab8:	add	r9, r9, #4
   3babc:	ldr	r2, [sp, #12]
   3bac0:	ldr	r1, [r2, #4]!
   3bac4:	str	r2, [sp, #12]
   3bac8:	mov	r0, r3
   3bacc:	bl	517e8 <__aeabi_idivmod>
   3bad0:	cmp	r1, #0
   3bad4:	bne	3bb20 <GetDataSlab+0x1ab14>
   3bad8:	mov	r3, #0
   3badc:	str	r3, [r6], #4
   3bae0:	add	r7, r7, #4
   3bae4:	str	r7, [sp, #16]
   3bae8:	ldr	r4, [r7]
   3baec:	mov	r1, r4
   3baf0:	mov	r0, fp
   3baf4:	bl	517e8 <__aeabi_idivmod>
   3baf8:	subs	r3, r1, #0
   3bafc:	beq	3ba7c <GetDataSlab+0x1aa70>
   3bb00:	ldr	r2, [r7, #-4]
   3bb04:	ldr	r1, [r9]
   3bb08:	sub	r3, r4, r3
   3bb0c:	mla	r3, r1, r2, r3
   3bb10:	add	r5, r5, r3, lsl #2
   3bb14:	add	fp, fp, r3
   3bb18:	b	3ba9c <GetDataSlab+0x1aa90>
   3bb1c:	mov	sl, #1
   3bb20:	add	r3, sp, #152	; 0x98
   3bb24:	add	r3, r3, sl, lsl #2
   3bb28:	ldr	r3, [r3, #-120]	; 0xffffff88
   3bb2c:	add	fp, fp, r3
   3bb30:	add	r5, r5, r3, lsl #2
   3bb34:	ldr	r3, [sp, #24]
   3bb38:	ldr	r2, [sp, #8]
   3bb3c:	add	r3, r3, r2
   3bb40:	str	r3, [sp, #24]
   3bb44:	ldr	r2, [sp, #20]
   3bb48:	cmp	r3, r2
   3bb4c:	bge	3bc34 <GetDataSlab+0x1ac28>
   3bb50:	ldr	r3, [sp, #196]	; 0xc4
   3bb54:	ldr	r3, [r3]
   3bb58:	cmp	r3, #0
   3bb5c:	addne	r5, r5, r3, lsl #2
   3bb60:	addne	fp, fp, r3
   3bb64:	ldr	r3, [sp, #204]	; 0xcc
   3bb68:	ldr	r3, [r3]
   3bb6c:	str	r3, [sp, #8]
   3bb70:	cmp	r3, #0
   3bb74:	ble	3bbb4 <GetDataSlab+0x1aba8>
   3bb78:	ldr	r3, [sp, #4]
   3bb7c:	ldr	r2, [sp, #24]
   3bb80:	add	r2, r3, r2
   3bb84:	mov	r3, #0
   3bb88:	ldr	r1, [r5]
   3bb8c:	strb	r1, [r2], #1
   3bb90:	ldr	r1, [r8]
   3bb94:	add	r5, r5, r1, lsl #2
   3bb98:	add	fp, fp, r1
   3bb9c:	add	r3, r3, #1
   3bba0:	ldr	r1, [sp, #204]	; 0xcc
   3bba4:	ldr	r1, [r1]
   3bba8:	str	r1, [sp, #8]
   3bbac:	cmp	r1, r3
   3bbb0:	bgt	3bb88 <GetDataSlab+0x1ab7c>
   3bbb4:	ldr	r3, [r8]
   3bbb8:	ldr	r2, [sp, #8]
   3bbbc:	mul	r3, r3, r2
   3bbc0:	ldr	r2, [sp, #192]	; 0xc0
   3bbc4:	ldr	r2, [r2]
   3bbc8:	sub	r3, r2, r3
   3bbcc:	ldr	r2, [sp, #196]	; 0xc4
   3bbd0:	ldr	r2, [r2]
   3bbd4:	sub	r3, r3, r2
   3bbd8:	add	fp, fp, r3
   3bbdc:	add	r5, r5, r3, lsl #2
   3bbe0:	ldr	r3, [sp, #208]	; 0xd0
   3bbe4:	cmp	r3, #1
   3bbe8:	ble	3bb34 <GetDataSlab+0x1ab28>
   3bbec:	ldr	r3, [sp, #76]	; 0x4c
   3bbf0:	add	r3, r3, #1
   3bbf4:	str	r3, [sp, #76]	; 0x4c
   3bbf8:	ldr	r2, [sp, #204]	; 0xcc
   3bbfc:	ldr	r1, [r2, #4]
   3bc00:	mov	r0, r3
   3bc04:	bl	517e8 <__aeabi_idivmod>
   3bc08:	cmp	r1, #0
   3bc0c:	bne	3bb1c <GetDataSlab+0x1ab10>
   3bc10:	add	r6, sp, #76	; 0x4c
   3bc14:	ldr	r3, [sp, #204]	; 0xcc
   3bc18:	add	r3, r3, #4
   3bc1c:	str	r3, [sp, #12]
   3bc20:	ldr	r3, [sp, #196]	; 0xc4
   3bc24:	add	r9, r3, #4
   3bc28:	add	r7, sp, #112	; 0x70
   3bc2c:	mov	sl, #1
   3bc30:	b	3bad8 <GetDataSlab+0x1aacc>
   3bc34:	mov	r3, #0
   3bc38:	b	24fa8 <GetDataSlab+0x3f9c>
   3bc3c:	ldr	r3, [r8]
   3bc40:	str	r3, [sp, #28]
   3bc44:	sub	r3, r3, #1
   3bc48:	str	r3, [sp, #32]
   3bc4c:	ldr	r3, [sp, #192]	; 0xc0
   3bc50:	ldr	r3, [r3]
   3bc54:	str	r3, [sp, #112]	; 0x70
   3bc58:	ldr	r3, [sp, #204]	; 0xcc
   3bc5c:	ldr	r3, [r3]
   3bc60:	str	r3, [sp, #20]
   3bc64:	ldr	r3, [sp, #208]	; 0xd0
   3bc68:	cmp	r3, #1
   3bc6c:	ble	3bca0 <GetDataSlab+0x1ac94>
   3bc70:	str	r8, [sp, #16]
   3bc74:	add	sl, sp, #36	; 0x24
   3bc78:	ldr	lr, [sp, #192]	; 0xc0
   3bc7c:	add	r9, sp, #112	; 0x70
   3bc80:	ldr	r3, [sp, #204]	; 0xcc
   3bc84:	add	r5, r3, #4
   3bc88:	ldr	r3, [sp, #196]	; 0xc4
   3bc8c:	add	r4, r3, #4
   3bc90:	str	lr, [sp, #12]
   3bc94:	mov	r6, #2
   3bc98:	mov	fp, #0
   3bc9c:	b	43008 <GetDataSlab+0x21ffc>
   3bca0:	mov	fp, #0
   3bca4:	b	43094 <GetDataSlab+0x22088>
   3bca8:	ldr	r3, [sp, #20]
   3bcac:	cmp	r3, #0
   3bcb0:	ble	3d630 <GetDataSlab+0x1c624>
   3bcb4:	mov	r3, #0
   3bcb8:	str	r3, [sp, #16]
   3bcbc:	b	3bd90 <GetDataSlab+0x1ad84>
   3bcc0:	ldr	r2, [r8]
   3bcc4:	cmp	r2, #0
   3bcc8:	beq	3bce0 <GetDataSlab+0x1acd4>
   3bccc:	ldr	r3, [sp, #12]
   3bcd0:	ldr	r3, [r3, #-4]
   3bcd4:	mul	r3, r3, r2
   3bcd8:	add	r6, r6, r3, lsl #1
   3bcdc:	add	fp, fp, r3
   3bce0:	add	r9, r9, #1
   3bce4:	ldr	r3, [sp, #208]	; 0xd0
   3bce8:	cmp	r3, r9
   3bcec:	beq	3bd78 <GetDataSlab+0x1ad6c>
   3bcf0:	ldr	r3, [r5]
   3bcf4:	add	r3, r3, #1
   3bcf8:	str	r3, [r5]
   3bcfc:	add	r8, r8, #4
   3bd00:	ldr	r2, [sp, #8]
   3bd04:	ldr	r1, [r2, #4]!
   3bd08:	str	r2, [sp, #8]
   3bd0c:	mov	r0, r3
   3bd10:	bl	517e8 <__aeabi_idivmod>
   3bd14:	cmp	r1, #0
   3bd18:	bne	3bd64 <GetDataSlab+0x1ad58>
   3bd1c:	mov	r3, #0
   3bd20:	str	r3, [r5], #4
   3bd24:	add	r7, r7, #4
   3bd28:	str	r7, [sp, #12]
   3bd2c:	ldr	r4, [r7]
   3bd30:	mov	r1, r4
   3bd34:	mov	r0, fp
   3bd38:	bl	517e8 <__aeabi_idivmod>
   3bd3c:	subs	r3, r1, #0
   3bd40:	beq	3bcc0 <GetDataSlab+0x1acb4>
   3bd44:	ldr	r2, [r7, #-4]
   3bd48:	ldr	r1, [r8]
   3bd4c:	sub	r3, r4, r3
   3bd50:	mla	r3, r1, r2, r3
   3bd54:	add	r6, r6, r3, lsl #1
   3bd58:	add	fp, fp, r3
   3bd5c:	b	3bce0 <GetDataSlab+0x1acd4>
   3bd60:	ldr	r9, [sp, #28]
   3bd64:	add	r3, sp, #152	; 0x98
   3bd68:	add	r3, r3, r9, lsl #2
   3bd6c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3bd70:	add	fp, fp, r3
   3bd74:	add	r6, r6, r3, lsl #1
   3bd78:	ldr	r3, [sp, #16]
   3bd7c:	add	r3, r3, sl
   3bd80:	str	r3, [sp, #16]
   3bd84:	ldr	r2, [sp, #20]
   3bd88:	cmp	r3, r2
   3bd8c:	bge	3be54 <GetDataSlab+0x1ae48>
   3bd90:	ldr	r3, [sp, #196]	; 0xc4
   3bd94:	ldr	r3, [r3]
   3bd98:	cmp	r3, #0
   3bd9c:	addne	r6, r6, r3, lsl #1
   3bda0:	addne	fp, fp, r3
   3bda4:	ldr	r3, [sp, #204]	; 0xcc
   3bda8:	ldr	sl, [r3]
   3bdac:	cmp	sl, #0
   3bdb0:	ble	3bde4 <GetDataSlab+0x1add8>
   3bdb4:	sub	r0, r6, #2
   3bdb8:	ldr	r3, [sp, #4]
   3bdbc:	ldr	r2, [sp, #16]
   3bdc0:	add	r1, r3, r2
   3bdc4:	mov	r2, #0
   3bdc8:	ldrh	r3, [r0, #2]!
   3bdcc:	strb	r3, [r1], #1
   3bdd0:	add	r2, r2, #1
   3bdd4:	ldr	r3, [sp, #204]	; 0xcc
   3bdd8:	ldr	sl, [r3]
   3bddc:	cmp	sl, r2
   3bde0:	bgt	3bdc8 <GetDataSlab+0x1adbc>
   3bde4:	ldr	r3, [sp, #192]	; 0xc0
   3bde8:	ldr	r2, [r3]
   3bdec:	ldr	r3, [sp, #196]	; 0xc4
   3bdf0:	ldr	r3, [r3]
   3bdf4:	sub	r3, r2, r3
   3bdf8:	add	fp, fp, r3
   3bdfc:	add	r6, r6, r3, lsl #1
   3be00:	ldr	r3, [sp, #208]	; 0xd0
   3be04:	cmp	r3, #1
   3be08:	ble	3bd78 <GetDataSlab+0x1ad6c>
   3be0c:	ldr	r3, [sp, #76]	; 0x4c
   3be10:	add	r3, r3, #1
   3be14:	str	r3, [sp, #76]	; 0x4c
   3be18:	ldr	r2, [sp, #204]	; 0xcc
   3be1c:	ldr	r1, [r2, #4]
   3be20:	mov	r0, r3
   3be24:	bl	517e8 <__aeabi_idivmod>
   3be28:	cmp	r1, #0
   3be2c:	bne	3bd60 <GetDataSlab+0x1ad54>
   3be30:	add	r5, sp, #76	; 0x4c
   3be34:	ldr	r3, [sp, #204]	; 0xcc
   3be38:	add	r3, r3, #4
   3be3c:	str	r3, [sp, #8]
   3be40:	ldr	r3, [sp, #196]	; 0xc4
   3be44:	add	r8, r3, #4
   3be48:	add	r7, sp, #112	; 0x70
   3be4c:	ldr	r9, [sp, #28]
   3be50:	b	3bd1c <GetDataSlab+0x1ad10>
   3be54:	mov	r3, #0
   3be58:	b	24fa8 <GetDataSlab+0x3f9c>
   3be5c:	ldr	r2, [r9]
   3be60:	cmp	r2, #0
   3be64:	beq	3be7c <GetDataSlab+0x1ae70>
   3be68:	ldr	r3, [sp, #16]
   3be6c:	ldr	r3, [r3, #-4]
   3be70:	mul	r3, r3, r2
   3be74:	add	r6, r6, r3, lsl #1
   3be78:	add	fp, fp, r3
   3be7c:	add	sl, sl, #1
   3be80:	ldr	r3, [sp, #208]	; 0xd0
   3be84:	cmp	r3, sl
   3be88:	beq	3bf14 <GetDataSlab+0x1af08>
   3be8c:	ldr	r3, [r5]
   3be90:	add	r3, r3, #1
   3be94:	str	r3, [r5]
   3be98:	add	r9, r9, #4
   3be9c:	ldr	r2, [sp, #12]
   3bea0:	ldr	r1, [r2, #4]!
   3bea4:	str	r2, [sp, #12]
   3bea8:	mov	r0, r3
   3beac:	bl	517e8 <__aeabi_idivmod>
   3beb0:	cmp	r1, #0
   3beb4:	bne	3bf00 <GetDataSlab+0x1aef4>
   3beb8:	mov	r3, #0
   3bebc:	str	r3, [r5], #4
   3bec0:	add	r7, r7, #4
   3bec4:	str	r7, [sp, #16]
   3bec8:	ldr	r4, [r7]
   3becc:	mov	r1, r4
   3bed0:	mov	r0, fp
   3bed4:	bl	517e8 <__aeabi_idivmod>
   3bed8:	subs	r3, r1, #0
   3bedc:	beq	3be5c <GetDataSlab+0x1ae50>
   3bee0:	ldr	r2, [r7, #-4]
   3bee4:	ldr	r1, [r9]
   3bee8:	sub	r3, r4, r3
   3beec:	mla	r3, r1, r2, r3
   3bef0:	add	r6, r6, r3, lsl #1
   3bef4:	add	fp, fp, r3
   3bef8:	b	3be7c <GetDataSlab+0x1ae70>
   3befc:	mov	sl, #1
   3bf00:	add	r3, sp, #152	; 0x98
   3bf04:	add	r3, r3, sl, lsl #2
   3bf08:	ldr	r3, [r3, #-120]	; 0xffffff88
   3bf0c:	add	fp, fp, r3
   3bf10:	add	r6, r6, r3, lsl #1
   3bf14:	ldr	r3, [sp, #24]
   3bf18:	ldr	r2, [sp, #8]
   3bf1c:	add	r3, r3, r2
   3bf20:	str	r3, [sp, #24]
   3bf24:	ldr	r2, [sp, #20]
   3bf28:	cmp	r3, r2
   3bf2c:	bge	3c014 <GetDataSlab+0x1b008>
   3bf30:	ldr	r3, [sp, #196]	; 0xc4
   3bf34:	ldr	r3, [r3]
   3bf38:	cmp	r3, #0
   3bf3c:	addne	r6, r6, r3, lsl #1
   3bf40:	addne	fp, fp, r3
   3bf44:	ldr	r3, [sp, #204]	; 0xcc
   3bf48:	ldr	r3, [r3]
   3bf4c:	str	r3, [sp, #8]
   3bf50:	cmp	r3, #0
   3bf54:	ble	3bf94 <GetDataSlab+0x1af88>
   3bf58:	ldr	r3, [sp, #4]
   3bf5c:	ldr	r2, [sp, #24]
   3bf60:	add	r2, r3, r2
   3bf64:	mov	r3, #0
   3bf68:	ldrh	r1, [r6]
   3bf6c:	strb	r1, [r2], #1
   3bf70:	ldr	r1, [r8]
   3bf74:	add	r6, r6, r1, lsl #1
   3bf78:	add	fp, fp, r1
   3bf7c:	add	r3, r3, #1
   3bf80:	ldr	r1, [sp, #204]	; 0xcc
   3bf84:	ldr	r1, [r1]
   3bf88:	str	r1, [sp, #8]
   3bf8c:	cmp	r1, r3
   3bf90:	bgt	3bf68 <GetDataSlab+0x1af5c>
   3bf94:	ldr	r3, [r8]
   3bf98:	ldr	r2, [sp, #8]
   3bf9c:	mul	r3, r3, r2
   3bfa0:	ldr	r2, [sp, #192]	; 0xc0
   3bfa4:	ldr	r2, [r2]
   3bfa8:	sub	r3, r2, r3
   3bfac:	ldr	r2, [sp, #196]	; 0xc4
   3bfb0:	ldr	r2, [r2]
   3bfb4:	sub	r3, r3, r2
   3bfb8:	add	fp, fp, r3
   3bfbc:	add	r6, r6, r3, lsl #1
   3bfc0:	ldr	r3, [sp, #208]	; 0xd0
   3bfc4:	cmp	r3, #1
   3bfc8:	ble	3bf14 <GetDataSlab+0x1af08>
   3bfcc:	ldr	r3, [sp, #76]	; 0x4c
   3bfd0:	add	r3, r3, #1
   3bfd4:	str	r3, [sp, #76]	; 0x4c
   3bfd8:	ldr	r2, [sp, #204]	; 0xcc
   3bfdc:	ldr	r1, [r2, #4]
   3bfe0:	mov	r0, r3
   3bfe4:	bl	517e8 <__aeabi_idivmod>
   3bfe8:	cmp	r1, #0
   3bfec:	bne	3befc <GetDataSlab+0x1aef0>
   3bff0:	add	r5, sp, #76	; 0x4c
   3bff4:	ldr	r3, [sp, #204]	; 0xcc
   3bff8:	add	r3, r3, #4
   3bffc:	str	r3, [sp, #12]
   3c000:	ldr	r3, [sp, #196]	; 0xc4
   3c004:	add	r9, r3, #4
   3c008:	add	r7, sp, #112	; 0x70
   3c00c:	mov	sl, #1
   3c010:	b	3beb8 <GetDataSlab+0x1aeac>
   3c014:	mov	r3, #0
   3c018:	b	24fa8 <GetDataSlab+0x3f9c>
   3c01c:	ldr	r3, [r8]
   3c020:	str	r3, [sp, #28]
   3c024:	sub	r3, r3, #1
   3c028:	str	r3, [sp, #32]
   3c02c:	ldr	r3, [sp, #192]	; 0xc0
   3c030:	ldr	r3, [r3]
   3c034:	str	r3, [sp, #112]	; 0x70
   3c038:	ldr	r3, [sp, #204]	; 0xcc
   3c03c:	ldr	r3, [r3]
   3c040:	str	r3, [sp, #20]
   3c044:	ldr	r3, [sp, #208]	; 0xd0
   3c048:	cmp	r3, #1
   3c04c:	ble	3c080 <GetDataSlab+0x1b074>
   3c050:	str	r8, [sp, #16]
   3c054:	add	sl, sp, #36	; 0x24
   3c058:	ldr	lr, [sp, #192]	; 0xc0
   3c05c:	add	r9, sp, #112	; 0x70
   3c060:	ldr	r3, [sp, #204]	; 0xcc
   3c064:	add	r5, r3, #4
   3c068:	ldr	r3, [sp, #196]	; 0xc4
   3c06c:	add	r4, r3, #4
   3c070:	str	lr, [sp, #12]
   3c074:	mov	r6, #2
   3c078:	mov	fp, #0
   3c07c:	b	430f4 <GetDataSlab+0x220e8>
   3c080:	mov	fp, #0
   3c084:	b	43180 <GetDataSlab+0x22174>
   3c088:	ldr	r3, [sp, #20]
   3c08c:	cmp	r3, #0
   3c090:	ble	3d638 <GetDataSlab+0x1c62c>
   3c094:	mov	r3, #0
   3c098:	str	r3, [sp, #16]
   3c09c:	b	3c170 <GetDataSlab+0x1b164>
   3c0a0:	ldr	r2, [r8]
   3c0a4:	cmp	r2, #0
   3c0a8:	beq	3c0c0 <GetDataSlab+0x1b0b4>
   3c0ac:	ldr	r3, [sp, #12]
   3c0b0:	ldr	r3, [r3, #-4]
   3c0b4:	mul	r3, r3, r2
   3c0b8:	add	r6, r6, r3, lsl #1
   3c0bc:	add	fp, fp, r3
   3c0c0:	add	r9, r9, #1
   3c0c4:	ldr	r3, [sp, #208]	; 0xd0
   3c0c8:	cmp	r3, r9
   3c0cc:	beq	3c158 <GetDataSlab+0x1b14c>
   3c0d0:	ldr	r3, [r5]
   3c0d4:	add	r3, r3, #1
   3c0d8:	str	r3, [r5]
   3c0dc:	add	r8, r8, #4
   3c0e0:	ldr	r2, [sp, #8]
   3c0e4:	ldr	r1, [r2, #4]!
   3c0e8:	str	r2, [sp, #8]
   3c0ec:	mov	r0, r3
   3c0f0:	bl	517e8 <__aeabi_idivmod>
   3c0f4:	cmp	r1, #0
   3c0f8:	bne	3c144 <GetDataSlab+0x1b138>
   3c0fc:	mov	r3, #0
   3c100:	str	r3, [r5], #4
   3c104:	add	r7, r7, #4
   3c108:	str	r7, [sp, #12]
   3c10c:	ldr	r4, [r7]
   3c110:	mov	r1, r4
   3c114:	mov	r0, fp
   3c118:	bl	517e8 <__aeabi_idivmod>
   3c11c:	subs	r3, r1, #0
   3c120:	beq	3c0a0 <GetDataSlab+0x1b094>
   3c124:	ldr	r2, [r7, #-4]
   3c128:	ldr	r1, [r8]
   3c12c:	sub	r3, r4, r3
   3c130:	mla	r3, r1, r2, r3
   3c134:	add	r6, r6, r3, lsl #1
   3c138:	add	fp, fp, r3
   3c13c:	b	3c0c0 <GetDataSlab+0x1b0b4>
   3c140:	ldr	r9, [sp, #28]
   3c144:	add	r3, sp, #152	; 0x98
   3c148:	add	r3, r3, r9, lsl #2
   3c14c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c150:	add	fp, fp, r3
   3c154:	add	r6, r6, r3, lsl #1
   3c158:	ldr	r3, [sp, #16]
   3c15c:	add	r3, r3, sl
   3c160:	str	r3, [sp, #16]
   3c164:	ldr	r2, [sp, #20]
   3c168:	cmp	r3, r2
   3c16c:	bge	3c234 <GetDataSlab+0x1b228>
   3c170:	ldr	r3, [sp, #196]	; 0xc4
   3c174:	ldr	r3, [r3]
   3c178:	cmp	r3, #0
   3c17c:	addne	r6, r6, r3, lsl #1
   3c180:	addne	fp, fp, r3
   3c184:	ldr	r3, [sp, #204]	; 0xcc
   3c188:	ldr	sl, [r3]
   3c18c:	cmp	sl, #0
   3c190:	ble	3c1c4 <GetDataSlab+0x1b1b8>
   3c194:	sub	r0, r6, #2
   3c198:	ldr	r3, [sp, #4]
   3c19c:	ldr	r2, [sp, #16]
   3c1a0:	add	r1, r3, r2
   3c1a4:	mov	r2, #0
   3c1a8:	ldrh	r3, [r0, #2]!
   3c1ac:	strb	r3, [r1], #1
   3c1b0:	add	r2, r2, #1
   3c1b4:	ldr	r3, [sp, #204]	; 0xcc
   3c1b8:	ldr	sl, [r3]
   3c1bc:	cmp	sl, r2
   3c1c0:	bgt	3c1a8 <GetDataSlab+0x1b19c>
   3c1c4:	ldr	r3, [sp, #192]	; 0xc0
   3c1c8:	ldr	r2, [r3]
   3c1cc:	ldr	r3, [sp, #196]	; 0xc4
   3c1d0:	ldr	r3, [r3]
   3c1d4:	sub	r3, r2, r3
   3c1d8:	add	fp, fp, r3
   3c1dc:	add	r6, r6, r3, lsl #1
   3c1e0:	ldr	r3, [sp, #208]	; 0xd0
   3c1e4:	cmp	r3, #1
   3c1e8:	ble	3c158 <GetDataSlab+0x1b14c>
   3c1ec:	ldr	r3, [sp, #76]	; 0x4c
   3c1f0:	add	r3, r3, #1
   3c1f4:	str	r3, [sp, #76]	; 0x4c
   3c1f8:	ldr	r2, [sp, #204]	; 0xcc
   3c1fc:	ldr	r1, [r2, #4]
   3c200:	mov	r0, r3
   3c204:	bl	517e8 <__aeabi_idivmod>
   3c208:	cmp	r1, #0
   3c20c:	bne	3c140 <GetDataSlab+0x1b134>
   3c210:	add	r5, sp, #76	; 0x4c
   3c214:	ldr	r3, [sp, #204]	; 0xcc
   3c218:	add	r3, r3, #4
   3c21c:	str	r3, [sp, #8]
   3c220:	ldr	r3, [sp, #196]	; 0xc4
   3c224:	add	r8, r3, #4
   3c228:	add	r7, sp, #112	; 0x70
   3c22c:	ldr	r9, [sp, #28]
   3c230:	b	3c0fc <GetDataSlab+0x1b0f0>
   3c234:	mov	r3, #0
   3c238:	b	24fa8 <GetDataSlab+0x3f9c>
   3c23c:	ldr	r2, [r9]
   3c240:	cmp	r2, #0
   3c244:	beq	3c25c <GetDataSlab+0x1b250>
   3c248:	ldr	r3, [sp, #16]
   3c24c:	ldr	r3, [r3, #-4]
   3c250:	mul	r3, r3, r2
   3c254:	add	r6, r6, r3, lsl #1
   3c258:	add	fp, fp, r3
   3c25c:	add	sl, sl, #1
   3c260:	ldr	r3, [sp, #208]	; 0xd0
   3c264:	cmp	r3, sl
   3c268:	beq	3c2f4 <GetDataSlab+0x1b2e8>
   3c26c:	ldr	r3, [r5]
   3c270:	add	r3, r3, #1
   3c274:	str	r3, [r5]
   3c278:	add	r9, r9, #4
   3c27c:	ldr	r2, [sp, #12]
   3c280:	ldr	r1, [r2, #4]!
   3c284:	str	r2, [sp, #12]
   3c288:	mov	r0, r3
   3c28c:	bl	517e8 <__aeabi_idivmod>
   3c290:	cmp	r1, #0
   3c294:	bne	3c2e0 <GetDataSlab+0x1b2d4>
   3c298:	mov	r3, #0
   3c29c:	str	r3, [r5], #4
   3c2a0:	add	r7, r7, #4
   3c2a4:	str	r7, [sp, #16]
   3c2a8:	ldr	r4, [r7]
   3c2ac:	mov	r1, r4
   3c2b0:	mov	r0, fp
   3c2b4:	bl	517e8 <__aeabi_idivmod>
   3c2b8:	subs	r3, r1, #0
   3c2bc:	beq	3c23c <GetDataSlab+0x1b230>
   3c2c0:	ldr	r2, [r7, #-4]
   3c2c4:	ldr	r1, [r9]
   3c2c8:	sub	r3, r4, r3
   3c2cc:	mla	r3, r1, r2, r3
   3c2d0:	add	r6, r6, r3, lsl #1
   3c2d4:	add	fp, fp, r3
   3c2d8:	b	3c25c <GetDataSlab+0x1b250>
   3c2dc:	mov	sl, #1
   3c2e0:	add	r3, sp, #152	; 0x98
   3c2e4:	add	r3, r3, sl, lsl #2
   3c2e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c2ec:	add	fp, fp, r3
   3c2f0:	add	r6, r6, r3, lsl #1
   3c2f4:	ldr	r3, [sp, #24]
   3c2f8:	ldr	r2, [sp, #8]
   3c2fc:	add	r3, r3, r2
   3c300:	str	r3, [sp, #24]
   3c304:	ldr	r2, [sp, #20]
   3c308:	cmp	r3, r2
   3c30c:	bge	3c3f4 <GetDataSlab+0x1b3e8>
   3c310:	ldr	r3, [sp, #196]	; 0xc4
   3c314:	ldr	r3, [r3]
   3c318:	cmp	r3, #0
   3c31c:	addne	r6, r6, r3, lsl #1
   3c320:	addne	fp, fp, r3
   3c324:	ldr	r3, [sp, #204]	; 0xcc
   3c328:	ldr	r3, [r3]
   3c32c:	str	r3, [sp, #8]
   3c330:	cmp	r3, #0
   3c334:	ble	3c374 <GetDataSlab+0x1b368>
   3c338:	ldr	r3, [sp, #4]
   3c33c:	ldr	r2, [sp, #24]
   3c340:	add	r2, r3, r2
   3c344:	mov	r3, #0
   3c348:	ldrh	r1, [r6]
   3c34c:	strb	r1, [r2], #1
   3c350:	ldr	r1, [r8]
   3c354:	add	r6, r6, r1, lsl #1
   3c358:	add	fp, fp, r1
   3c35c:	add	r3, r3, #1
   3c360:	ldr	r1, [sp, #204]	; 0xcc
   3c364:	ldr	r1, [r1]
   3c368:	str	r1, [sp, #8]
   3c36c:	cmp	r1, r3
   3c370:	bgt	3c348 <GetDataSlab+0x1b33c>
   3c374:	ldr	r3, [r8]
   3c378:	ldr	r2, [sp, #8]
   3c37c:	mul	r3, r3, r2
   3c380:	ldr	r2, [sp, #192]	; 0xc0
   3c384:	ldr	r2, [r2]
   3c388:	sub	r3, r2, r3
   3c38c:	ldr	r2, [sp, #196]	; 0xc4
   3c390:	ldr	r2, [r2]
   3c394:	sub	r3, r3, r2
   3c398:	add	fp, fp, r3
   3c39c:	add	r6, r6, r3, lsl #1
   3c3a0:	ldr	r3, [sp, #208]	; 0xd0
   3c3a4:	cmp	r3, #1
   3c3a8:	ble	3c2f4 <GetDataSlab+0x1b2e8>
   3c3ac:	ldr	r3, [sp, #76]	; 0x4c
   3c3b0:	add	r3, r3, #1
   3c3b4:	str	r3, [sp, #76]	; 0x4c
   3c3b8:	ldr	r2, [sp, #204]	; 0xcc
   3c3bc:	ldr	r1, [r2, #4]
   3c3c0:	mov	r0, r3
   3c3c4:	bl	517e8 <__aeabi_idivmod>
   3c3c8:	cmp	r1, #0
   3c3cc:	bne	3c2dc <GetDataSlab+0x1b2d0>
   3c3d0:	add	r5, sp, #76	; 0x4c
   3c3d4:	ldr	r3, [sp, #204]	; 0xcc
   3c3d8:	add	r3, r3, #4
   3c3dc:	str	r3, [sp, #12]
   3c3e0:	ldr	r3, [sp, #196]	; 0xc4
   3c3e4:	add	r9, r3, #4
   3c3e8:	add	r7, sp, #112	; 0x70
   3c3ec:	mov	sl, #1
   3c3f0:	b	3c298 <GetDataSlab+0x1b28c>
   3c3f4:	mov	r3, #0
   3c3f8:	b	24fa8 <GetDataSlab+0x3f9c>
   3c3fc:	ldr	r3, [r8]
   3c400:	str	r3, [sp, #28]
   3c404:	sub	r3, r3, #1
   3c408:	str	r3, [sp, #32]
   3c40c:	ldr	r3, [sp, #192]	; 0xc0
   3c410:	ldr	r3, [r3]
   3c414:	str	r3, [sp, #112]	; 0x70
   3c418:	ldr	r3, [sp, #204]	; 0xcc
   3c41c:	ldr	r3, [r3]
   3c420:	str	r3, [sp, #20]
   3c424:	ldr	r3, [sp, #208]	; 0xd0
   3c428:	cmp	r3, #1
   3c42c:	ble	3c460 <GetDataSlab+0x1b454>
   3c430:	str	r8, [sp, #16]
   3c434:	add	sl, sp, #36	; 0x24
   3c438:	ldr	lr, [sp, #192]	; 0xc0
   3c43c:	add	r9, sp, #112	; 0x70
   3c440:	ldr	r3, [sp, #204]	; 0xcc
   3c444:	add	r5, r3, #4
   3c448:	ldr	r3, [sp, #196]	; 0xc4
   3c44c:	add	r4, r3, #4
   3c450:	str	lr, [sp, #12]
   3c454:	mov	r6, #2
   3c458:	mov	fp, #0
   3c45c:	b	431e0 <GetDataSlab+0x221d4>
   3c460:	mov	fp, #0
   3c464:	b	4326c <GetDataSlab+0x22260>
   3c468:	ldr	r3, [sp, #20]
   3c46c:	cmp	r3, #0
   3c470:	ble	3d640 <GetDataSlab+0x1c634>
   3c474:	mov	r3, #0
   3c478:	str	r3, [sp, #16]
   3c47c:	b	3c550 <GetDataSlab+0x1b544>
   3c480:	ldr	r2, [r8]
   3c484:	cmp	r2, #0
   3c488:	beq	3c4a0 <GetDataSlab+0x1b494>
   3c48c:	ldr	r3, [sp, #12]
   3c490:	ldr	r3, [r3, #-4]
   3c494:	mul	r3, r3, r2
   3c498:	add	r6, r6, r3
   3c49c:	add	fp, fp, r3
   3c4a0:	add	r9, r9, #1
   3c4a4:	ldr	r3, [sp, #208]	; 0xd0
   3c4a8:	cmp	r3, r9
   3c4ac:	beq	3c538 <GetDataSlab+0x1b52c>
   3c4b0:	ldr	r3, [r5]
   3c4b4:	add	r3, r3, #1
   3c4b8:	str	r3, [r5]
   3c4bc:	add	r8, r8, #4
   3c4c0:	ldr	r2, [sp, #8]
   3c4c4:	ldr	r1, [r2, #4]!
   3c4c8:	str	r2, [sp, #8]
   3c4cc:	mov	r0, r3
   3c4d0:	bl	517e8 <__aeabi_idivmod>
   3c4d4:	cmp	r1, #0
   3c4d8:	bne	3c524 <GetDataSlab+0x1b518>
   3c4dc:	mov	r3, #0
   3c4e0:	str	r3, [r5], #4
   3c4e4:	add	r7, r7, #4
   3c4e8:	str	r7, [sp, #12]
   3c4ec:	ldr	r4, [r7]
   3c4f0:	mov	r1, r4
   3c4f4:	mov	r0, fp
   3c4f8:	bl	517e8 <__aeabi_idivmod>
   3c4fc:	subs	r3, r1, #0
   3c500:	beq	3c480 <GetDataSlab+0x1b474>
   3c504:	ldr	r2, [r7, #-4]
   3c508:	ldr	r1, [r8]
   3c50c:	sub	r3, r4, r3
   3c510:	mla	r3, r1, r2, r3
   3c514:	add	r6, r6, r3
   3c518:	add	fp, fp, r3
   3c51c:	b	3c4a0 <GetDataSlab+0x1b494>
   3c520:	ldr	r9, [sp, #28]
   3c524:	add	r3, sp, #152	; 0x98
   3c528:	add	r3, r3, r9, lsl #2
   3c52c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c530:	add	fp, fp, r3
   3c534:	add	r6, r6, r3
   3c538:	ldr	r3, [sp, #16]
   3c53c:	add	r3, r3, sl
   3c540:	str	r3, [sp, #16]
   3c544:	ldr	r2, [sp, #20]
   3c548:	cmp	r3, r2
   3c54c:	bge	3c614 <GetDataSlab+0x1b608>
   3c550:	ldr	r3, [sp, #196]	; 0xc4
   3c554:	ldr	r3, [r3]
   3c558:	cmp	r3, #0
   3c55c:	addne	r6, r6, r3
   3c560:	addne	fp, fp, r3
   3c564:	ldr	r3, [sp, #204]	; 0xcc
   3c568:	ldr	sl, [r3]
   3c56c:	cmp	sl, #0
   3c570:	ble	3c5a4 <GetDataSlab+0x1b598>
   3c574:	sub	r0, r6, #1
   3c578:	ldr	r3, [sp, #4]
   3c57c:	ldr	r2, [sp, #16]
   3c580:	add	r1, r3, r2
   3c584:	mov	r2, #0
   3c588:	ldrb	r3, [r0, #1]!
   3c58c:	strb	r3, [r1], #1
   3c590:	add	r2, r2, #1
   3c594:	ldr	r3, [sp, #204]	; 0xcc
   3c598:	ldr	sl, [r3]
   3c59c:	cmp	sl, r2
   3c5a0:	bgt	3c588 <GetDataSlab+0x1b57c>
   3c5a4:	ldr	r3, [sp, #192]	; 0xc0
   3c5a8:	ldr	r2, [r3]
   3c5ac:	ldr	r3, [sp, #196]	; 0xc4
   3c5b0:	ldr	r3, [r3]
   3c5b4:	sub	r3, r2, r3
   3c5b8:	add	fp, fp, r3
   3c5bc:	add	r6, r6, r3
   3c5c0:	ldr	r3, [sp, #208]	; 0xd0
   3c5c4:	cmp	r3, #1
   3c5c8:	ble	3c538 <GetDataSlab+0x1b52c>
   3c5cc:	ldr	r3, [sp, #76]	; 0x4c
   3c5d0:	add	r3, r3, #1
   3c5d4:	str	r3, [sp, #76]	; 0x4c
   3c5d8:	ldr	r2, [sp, #204]	; 0xcc
   3c5dc:	ldr	r1, [r2, #4]
   3c5e0:	mov	r0, r3
   3c5e4:	bl	517e8 <__aeabi_idivmod>
   3c5e8:	cmp	r1, #0
   3c5ec:	bne	3c520 <GetDataSlab+0x1b514>
   3c5f0:	add	r5, sp, #76	; 0x4c
   3c5f4:	ldr	r3, [sp, #204]	; 0xcc
   3c5f8:	add	r3, r3, #4
   3c5fc:	str	r3, [sp, #8]
   3c600:	ldr	r3, [sp, #196]	; 0xc4
   3c604:	add	r8, r3, #4
   3c608:	add	r7, sp, #112	; 0x70
   3c60c:	ldr	r9, [sp, #28]
   3c610:	b	3c4dc <GetDataSlab+0x1b4d0>
   3c614:	mov	r3, #0
   3c618:	b	24fa8 <GetDataSlab+0x3f9c>
   3c61c:	ldr	r2, [r9]
   3c620:	cmp	r2, #0
   3c624:	beq	3c63c <GetDataSlab+0x1b630>
   3c628:	ldr	r3, [sp, #16]
   3c62c:	ldr	r3, [r3, #-4]
   3c630:	mul	r3, r3, r2
   3c634:	add	r6, r6, r3
   3c638:	add	fp, fp, r3
   3c63c:	add	sl, sl, #1
   3c640:	ldr	r3, [sp, #208]	; 0xd0
   3c644:	cmp	r3, sl
   3c648:	beq	3c6d4 <GetDataSlab+0x1b6c8>
   3c64c:	ldr	r3, [r5]
   3c650:	add	r3, r3, #1
   3c654:	str	r3, [r5]
   3c658:	add	r9, r9, #4
   3c65c:	ldr	r2, [sp, #12]
   3c660:	ldr	r1, [r2, #4]!
   3c664:	str	r2, [sp, #12]
   3c668:	mov	r0, r3
   3c66c:	bl	517e8 <__aeabi_idivmod>
   3c670:	cmp	r1, #0
   3c674:	bne	3c6c0 <GetDataSlab+0x1b6b4>
   3c678:	mov	r3, #0
   3c67c:	str	r3, [r5], #4
   3c680:	add	r7, r7, #4
   3c684:	str	r7, [sp, #16]
   3c688:	ldr	r4, [r7]
   3c68c:	mov	r1, r4
   3c690:	mov	r0, fp
   3c694:	bl	517e8 <__aeabi_idivmod>
   3c698:	subs	r3, r1, #0
   3c69c:	beq	3c61c <GetDataSlab+0x1b610>
   3c6a0:	ldr	r2, [r7, #-4]
   3c6a4:	ldr	r1, [r9]
   3c6a8:	sub	r3, r4, r3
   3c6ac:	mla	r3, r1, r2, r3
   3c6b0:	add	r6, r6, r3
   3c6b4:	add	fp, fp, r3
   3c6b8:	b	3c63c <GetDataSlab+0x1b630>
   3c6bc:	mov	sl, #1
   3c6c0:	add	r3, sp, #152	; 0x98
   3c6c4:	add	r3, r3, sl, lsl #2
   3c6c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c6cc:	add	fp, fp, r3
   3c6d0:	add	r6, r6, r3
   3c6d4:	ldr	r3, [sp, #24]
   3c6d8:	ldr	r2, [sp, #8]
   3c6dc:	add	r3, r3, r2
   3c6e0:	str	r3, [sp, #24]
   3c6e4:	ldr	r2, [sp, #20]
   3c6e8:	cmp	r3, r2
   3c6ec:	bge	3c7d4 <GetDataSlab+0x1b7c8>
   3c6f0:	ldr	r3, [sp, #196]	; 0xc4
   3c6f4:	ldr	r3, [r3]
   3c6f8:	cmp	r3, #0
   3c6fc:	addne	r6, r6, r3
   3c700:	addne	fp, fp, r3
   3c704:	ldr	r3, [sp, #204]	; 0xcc
   3c708:	ldr	r3, [r3]
   3c70c:	str	r3, [sp, #8]
   3c710:	cmp	r3, #0
   3c714:	ble	3c754 <GetDataSlab+0x1b748>
   3c718:	ldr	r3, [sp, #4]
   3c71c:	ldr	r2, [sp, #24]
   3c720:	add	r2, r3, r2
   3c724:	mov	r3, #0
   3c728:	ldrb	r1, [r6]
   3c72c:	strb	r1, [r2], #1
   3c730:	ldr	r1, [r8]
   3c734:	add	r6, r6, r1
   3c738:	add	fp, fp, r1
   3c73c:	add	r3, r3, #1
   3c740:	ldr	r1, [sp, #204]	; 0xcc
   3c744:	ldr	r1, [r1]
   3c748:	str	r1, [sp, #8]
   3c74c:	cmp	r1, r3
   3c750:	bgt	3c728 <GetDataSlab+0x1b71c>
   3c754:	ldr	r3, [r8]
   3c758:	ldr	r2, [sp, #8]
   3c75c:	mul	r3, r3, r2
   3c760:	ldr	r2, [sp, #192]	; 0xc0
   3c764:	ldr	r2, [r2]
   3c768:	sub	r3, r2, r3
   3c76c:	ldr	r2, [sp, #196]	; 0xc4
   3c770:	ldr	r2, [r2]
   3c774:	sub	r3, r3, r2
   3c778:	add	fp, fp, r3
   3c77c:	add	r6, r6, r3
   3c780:	ldr	r3, [sp, #208]	; 0xd0
   3c784:	cmp	r3, #1
   3c788:	ble	3c6d4 <GetDataSlab+0x1b6c8>
   3c78c:	ldr	r3, [sp, #76]	; 0x4c
   3c790:	add	r3, r3, #1
   3c794:	str	r3, [sp, #76]	; 0x4c
   3c798:	ldr	r2, [sp, #204]	; 0xcc
   3c79c:	ldr	r1, [r2, #4]
   3c7a0:	mov	r0, r3
   3c7a4:	bl	517e8 <__aeabi_idivmod>
   3c7a8:	cmp	r1, #0
   3c7ac:	bne	3c6bc <GetDataSlab+0x1b6b0>
   3c7b0:	add	r5, sp, #76	; 0x4c
   3c7b4:	ldr	r3, [sp, #204]	; 0xcc
   3c7b8:	add	r3, r3, #4
   3c7bc:	str	r3, [sp, #12]
   3c7c0:	ldr	r3, [sp, #196]	; 0xc4
   3c7c4:	add	r9, r3, #4
   3c7c8:	add	r7, sp, #112	; 0x70
   3c7cc:	mov	sl, #1
   3c7d0:	b	3c678 <GetDataSlab+0x1b66c>
   3c7d4:	mov	r3, #0
   3c7d8:	b	24fa8 <GetDataSlab+0x3f9c>
   3c7dc:	ldr	r3, [r8]
   3c7e0:	str	r3, [sp, #28]
   3c7e4:	sub	r3, r3, #1
   3c7e8:	str	r3, [sp, #32]
   3c7ec:	ldr	r3, [sp, #192]	; 0xc0
   3c7f0:	ldr	r3, [r3]
   3c7f4:	str	r3, [sp, #112]	; 0x70
   3c7f8:	ldr	r3, [sp, #204]	; 0xcc
   3c7fc:	ldr	r3, [r3]
   3c800:	str	r3, [sp, #20]
   3c804:	ldr	r3, [sp, #208]	; 0xd0
   3c808:	cmp	r3, #1
   3c80c:	ble	3c840 <GetDataSlab+0x1b834>
   3c810:	str	r8, [sp, #16]
   3c814:	add	sl, sp, #36	; 0x24
   3c818:	ldr	lr, [sp, #192]	; 0xc0
   3c81c:	add	r9, sp, #112	; 0x70
   3c820:	ldr	r3, [sp, #204]	; 0xcc
   3c824:	add	r5, r3, #4
   3c828:	ldr	r3, [sp, #196]	; 0xc4
   3c82c:	add	r4, r3, #4
   3c830:	str	lr, [sp, #12]
   3c834:	mov	r6, #2
   3c838:	mov	fp, #0
   3c83c:	b	432cc <GetDataSlab+0x222c0>
   3c840:	mov	fp, #0
   3c844:	b	43358 <GetDataSlab+0x2234c>
   3c848:	ldr	r3, [sp, #20]
   3c84c:	cmp	r3, #0
   3c850:	ble	3d648 <GetDataSlab+0x1c63c>
   3c854:	mov	r3, #0
   3c858:	str	r3, [sp, #16]
   3c85c:	b	3c930 <GetDataSlab+0x1b924>
   3c860:	ldr	r2, [r8]
   3c864:	cmp	r2, #0
   3c868:	beq	3c880 <GetDataSlab+0x1b874>
   3c86c:	ldr	r3, [sp, #12]
   3c870:	ldr	r3, [r3, #-4]
   3c874:	mul	r3, r3, r2
   3c878:	add	r6, r6, r3
   3c87c:	add	fp, fp, r3
   3c880:	add	r9, r9, #1
   3c884:	ldr	r3, [sp, #208]	; 0xd0
   3c888:	cmp	r3, r9
   3c88c:	beq	3c918 <GetDataSlab+0x1b90c>
   3c890:	ldr	r3, [r5]
   3c894:	add	r3, r3, #1
   3c898:	str	r3, [r5]
   3c89c:	add	r8, r8, #4
   3c8a0:	ldr	r2, [sp, #8]
   3c8a4:	ldr	r1, [r2, #4]!
   3c8a8:	str	r2, [sp, #8]
   3c8ac:	mov	r0, r3
   3c8b0:	bl	517e8 <__aeabi_idivmod>
   3c8b4:	cmp	r1, #0
   3c8b8:	bne	3c904 <GetDataSlab+0x1b8f8>
   3c8bc:	mov	r3, #0
   3c8c0:	str	r3, [r5], #4
   3c8c4:	add	r7, r7, #4
   3c8c8:	str	r7, [sp, #12]
   3c8cc:	ldr	r4, [r7]
   3c8d0:	mov	r1, r4
   3c8d4:	mov	r0, fp
   3c8d8:	bl	517e8 <__aeabi_idivmod>
   3c8dc:	subs	r3, r1, #0
   3c8e0:	beq	3c860 <GetDataSlab+0x1b854>
   3c8e4:	ldr	r2, [r7, #-4]
   3c8e8:	ldr	r1, [r8]
   3c8ec:	sub	r3, r4, r3
   3c8f0:	mla	r3, r1, r2, r3
   3c8f4:	add	r6, r6, r3
   3c8f8:	add	fp, fp, r3
   3c8fc:	b	3c880 <GetDataSlab+0x1b874>
   3c900:	ldr	r9, [sp, #28]
   3c904:	add	r3, sp, #152	; 0x98
   3c908:	add	r3, r3, r9, lsl #2
   3c90c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c910:	add	fp, fp, r3
   3c914:	add	r6, r6, r3
   3c918:	ldr	r3, [sp, #16]
   3c91c:	add	r3, r3, sl
   3c920:	str	r3, [sp, #16]
   3c924:	ldr	r2, [sp, #20]
   3c928:	cmp	r3, r2
   3c92c:	bge	3c9f4 <GetDataSlab+0x1b9e8>
   3c930:	ldr	r3, [sp, #196]	; 0xc4
   3c934:	ldr	r3, [r3]
   3c938:	cmp	r3, #0
   3c93c:	addne	r6, r6, r3
   3c940:	addne	fp, fp, r3
   3c944:	ldr	r3, [sp, #204]	; 0xcc
   3c948:	ldr	sl, [r3]
   3c94c:	cmp	sl, #0
   3c950:	ble	3c984 <GetDataSlab+0x1b978>
   3c954:	sub	r0, r6, #1
   3c958:	ldr	r3, [sp, #4]
   3c95c:	ldr	r2, [sp, #16]
   3c960:	add	r1, r3, r2
   3c964:	mov	r2, #0
   3c968:	ldrb	r3, [r0, #1]!
   3c96c:	strb	r3, [r1], #1
   3c970:	add	r2, r2, #1
   3c974:	ldr	r3, [sp, #204]	; 0xcc
   3c978:	ldr	sl, [r3]
   3c97c:	cmp	sl, r2
   3c980:	bgt	3c968 <GetDataSlab+0x1b95c>
   3c984:	ldr	r3, [sp, #192]	; 0xc0
   3c988:	ldr	r2, [r3]
   3c98c:	ldr	r3, [sp, #196]	; 0xc4
   3c990:	ldr	r3, [r3]
   3c994:	sub	r3, r2, r3
   3c998:	add	fp, fp, r3
   3c99c:	add	r6, r6, r3
   3c9a0:	ldr	r3, [sp, #208]	; 0xd0
   3c9a4:	cmp	r3, #1
   3c9a8:	ble	3c918 <GetDataSlab+0x1b90c>
   3c9ac:	ldr	r3, [sp, #76]	; 0x4c
   3c9b0:	add	r3, r3, #1
   3c9b4:	str	r3, [sp, #76]	; 0x4c
   3c9b8:	ldr	r2, [sp, #204]	; 0xcc
   3c9bc:	ldr	r1, [r2, #4]
   3c9c0:	mov	r0, r3
   3c9c4:	bl	517e8 <__aeabi_idivmod>
   3c9c8:	cmp	r1, #0
   3c9cc:	bne	3c900 <GetDataSlab+0x1b8f4>
   3c9d0:	add	r5, sp, #76	; 0x4c
   3c9d4:	ldr	r3, [sp, #204]	; 0xcc
   3c9d8:	add	r3, r3, #4
   3c9dc:	str	r3, [sp, #8]
   3c9e0:	ldr	r3, [sp, #196]	; 0xc4
   3c9e4:	add	r8, r3, #4
   3c9e8:	add	r7, sp, #112	; 0x70
   3c9ec:	ldr	r9, [sp, #28]
   3c9f0:	b	3c8bc <GetDataSlab+0x1b8b0>
   3c9f4:	mov	r3, #0
   3c9f8:	b	24fa8 <GetDataSlab+0x3f9c>
   3c9fc:	ldr	r2, [r9]
   3ca00:	cmp	r2, #0
   3ca04:	beq	3ca1c <GetDataSlab+0x1ba10>
   3ca08:	ldr	r3, [sp, #16]
   3ca0c:	ldr	r3, [r3, #-4]
   3ca10:	mul	r3, r3, r2
   3ca14:	add	r6, r6, r3
   3ca18:	add	fp, fp, r3
   3ca1c:	add	sl, sl, #1
   3ca20:	ldr	r3, [sp, #208]	; 0xd0
   3ca24:	cmp	r3, sl
   3ca28:	beq	3cab4 <GetDataSlab+0x1baa8>
   3ca2c:	ldr	r3, [r5]
   3ca30:	add	r3, r3, #1
   3ca34:	str	r3, [r5]
   3ca38:	add	r9, r9, #4
   3ca3c:	ldr	r2, [sp, #12]
   3ca40:	ldr	r1, [r2, #4]!
   3ca44:	str	r2, [sp, #12]
   3ca48:	mov	r0, r3
   3ca4c:	bl	517e8 <__aeabi_idivmod>
   3ca50:	cmp	r1, #0
   3ca54:	bne	3caa0 <GetDataSlab+0x1ba94>
   3ca58:	mov	r3, #0
   3ca5c:	str	r3, [r5], #4
   3ca60:	add	r7, r7, #4
   3ca64:	str	r7, [sp, #16]
   3ca68:	ldr	r4, [r7]
   3ca6c:	mov	r1, r4
   3ca70:	mov	r0, fp
   3ca74:	bl	517e8 <__aeabi_idivmod>
   3ca78:	subs	r3, r1, #0
   3ca7c:	beq	3c9fc <GetDataSlab+0x1b9f0>
   3ca80:	ldr	r2, [r7, #-4]
   3ca84:	ldr	r1, [r9]
   3ca88:	sub	r3, r4, r3
   3ca8c:	mla	r3, r1, r2, r3
   3ca90:	add	r6, r6, r3
   3ca94:	add	fp, fp, r3
   3ca98:	b	3ca1c <GetDataSlab+0x1ba10>
   3ca9c:	mov	sl, #1
   3caa0:	add	r3, sp, #152	; 0x98
   3caa4:	add	r3, r3, sl, lsl #2
   3caa8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3caac:	add	fp, fp, r3
   3cab0:	add	r6, r6, r3
   3cab4:	ldr	r3, [sp, #24]
   3cab8:	ldr	r2, [sp, #8]
   3cabc:	add	r3, r3, r2
   3cac0:	str	r3, [sp, #24]
   3cac4:	ldr	r2, [sp, #20]
   3cac8:	cmp	r3, r2
   3cacc:	bge	3cbb4 <GetDataSlab+0x1bba8>
   3cad0:	ldr	r3, [sp, #196]	; 0xc4
   3cad4:	ldr	r3, [r3]
   3cad8:	cmp	r3, #0
   3cadc:	addne	r6, r6, r3
   3cae0:	addne	fp, fp, r3
   3cae4:	ldr	r3, [sp, #204]	; 0xcc
   3cae8:	ldr	r3, [r3]
   3caec:	str	r3, [sp, #8]
   3caf0:	cmp	r3, #0
   3caf4:	ble	3cb34 <GetDataSlab+0x1bb28>
   3caf8:	ldr	r3, [sp, #4]
   3cafc:	ldr	r2, [sp, #24]
   3cb00:	add	r2, r3, r2
   3cb04:	mov	r3, #0
   3cb08:	ldrb	r1, [r6]
   3cb0c:	strb	r1, [r2], #1
   3cb10:	ldr	r1, [r8]
   3cb14:	add	r6, r6, r1
   3cb18:	add	fp, fp, r1
   3cb1c:	add	r3, r3, #1
   3cb20:	ldr	r1, [sp, #204]	; 0xcc
   3cb24:	ldr	r1, [r1]
   3cb28:	str	r1, [sp, #8]
   3cb2c:	cmp	r1, r3
   3cb30:	bgt	3cb08 <GetDataSlab+0x1bafc>
   3cb34:	ldr	r3, [r8]
   3cb38:	ldr	r2, [sp, #8]
   3cb3c:	mul	r3, r3, r2
   3cb40:	ldr	r2, [sp, #192]	; 0xc0
   3cb44:	ldr	r2, [r2]
   3cb48:	sub	r3, r2, r3
   3cb4c:	ldr	r2, [sp, #196]	; 0xc4
   3cb50:	ldr	r2, [r2]
   3cb54:	sub	r3, r3, r2
   3cb58:	add	fp, fp, r3
   3cb5c:	add	r6, r6, r3
   3cb60:	ldr	r3, [sp, #208]	; 0xd0
   3cb64:	cmp	r3, #1
   3cb68:	ble	3cab4 <GetDataSlab+0x1baa8>
   3cb6c:	ldr	r3, [sp, #76]	; 0x4c
   3cb70:	add	r3, r3, #1
   3cb74:	str	r3, [sp, #76]	; 0x4c
   3cb78:	ldr	r2, [sp, #204]	; 0xcc
   3cb7c:	ldr	r1, [r2, #4]
   3cb80:	mov	r0, r3
   3cb84:	bl	517e8 <__aeabi_idivmod>
   3cb88:	cmp	r1, #0
   3cb8c:	bne	3ca9c <GetDataSlab+0x1ba90>
   3cb90:	add	r5, sp, #76	; 0x4c
   3cb94:	ldr	r3, [sp, #204]	; 0xcc
   3cb98:	add	r3, r3, #4
   3cb9c:	str	r3, [sp, #12]
   3cba0:	ldr	r3, [sp, #196]	; 0xc4
   3cba4:	add	r9, r3, #4
   3cba8:	add	r7, sp, #112	; 0x70
   3cbac:	mov	sl, #1
   3cbb0:	b	3ca58 <GetDataSlab+0x1ba4c>
   3cbb4:	mov	r3, #0
   3cbb8:	b	24fa8 <GetDataSlab+0x3f9c>
   3cbbc:	cmp	r4, #12
   3cbc0:	beq	3cc34 <GetDataSlab+0x1bc28>
   3cbc4:	cmp	r4, #13
   3cbc8:	movne	r3, #1
   3cbcc:	bne	24fa8 <GetDataSlab+0x3f9c>
   3cbd0:	ldr	r3, [r8]
   3cbd4:	str	r3, [sp, #28]
   3cbd8:	sub	r3, r3, #1
   3cbdc:	str	r3, [sp, #32]
   3cbe0:	ldr	r3, [sp, #192]	; 0xc0
   3cbe4:	ldr	r3, [r3]
   3cbe8:	str	r3, [sp, #112]	; 0x70
   3cbec:	ldr	r3, [sp, #204]	; 0xcc
   3cbf0:	ldr	r3, [r3]
   3cbf4:	str	r3, [sp, #20]
   3cbf8:	ldr	r3, [sp, #208]	; 0xd0
   3cbfc:	cmp	r3, #1
   3cc00:	ble	3d004 <GetDataSlab+0x1bff8>
   3cc04:	str	r8, [sp, #16]
   3cc08:	add	sl, sp, #36	; 0x24
   3cc0c:	ldr	lr, [sp, #192]	; 0xc0
   3cc10:	add	r9, sp, #112	; 0x70
   3cc14:	ldr	r3, [sp, #204]	; 0xcc
   3cc18:	add	r6, r3, #4
   3cc1c:	ldr	r3, [sp, #196]	; 0xc4
   3cc20:	add	r4, r3, #4
   3cc24:	str	lr, [sp, #12]
   3cc28:	mov	r5, #2
   3cc2c:	mov	fp, #0
   3cc30:	b	434a4 <GetDataSlab+0x22498>
   3cc34:	ldr	r3, [r8]
   3cc38:	str	r3, [sp, #28]
   3cc3c:	sub	r3, r3, #1
   3cc40:	str	r3, [sp, #32]
   3cc44:	ldr	r3, [sp, #192]	; 0xc0
   3cc48:	ldr	r3, [r3]
   3cc4c:	str	r3, [sp, #112]	; 0x70
   3cc50:	ldr	r3, [sp, #204]	; 0xcc
   3cc54:	ldr	r3, [r3]
   3cc58:	str	r3, [sp, #20]
   3cc5c:	ldr	r3, [sp, #208]	; 0xd0
   3cc60:	cmp	r3, #1
   3cc64:	ble	3cc98 <GetDataSlab+0x1bc8c>
   3cc68:	str	r8, [sp, #16]
   3cc6c:	add	sl, sp, #36	; 0x24
   3cc70:	ldr	lr, [sp, #192]	; 0xc0
   3cc74:	add	r9, sp, #112	; 0x70
   3cc78:	ldr	r3, [sp, #204]	; 0xcc
   3cc7c:	add	r6, r3, #4
   3cc80:	ldr	r3, [sp, #196]	; 0xc4
   3cc84:	add	r4, r3, #4
   3cc88:	str	lr, [sp, #12]
   3cc8c:	mov	r5, #2
   3cc90:	mov	fp, #0
   3cc94:	b	433b8 <GetDataSlab+0x223ac>
   3cc98:	mov	fp, #0
   3cc9c:	b	43444 <GetDataSlab+0x22438>
   3cca0:	ldr	r3, [sp, #20]
   3cca4:	cmp	r3, #0
   3cca8:	ble	4346c <GetDataSlab+0x22460>
   3ccac:	mov	r3, #0
   3ccb0:	str	r3, [sp, #16]
   3ccb4:	b	3cd88 <GetDataSlab+0x1bd7c>
   3ccb8:	ldr	r2, [r8]
   3ccbc:	cmp	r2, #0
   3ccc0:	beq	3ccd8 <GetDataSlab+0x1bccc>
   3ccc4:	ldr	r3, [sp, #12]
   3ccc8:	ldr	r3, [r3, #-4]
   3cccc:	mul	r3, r3, r2
   3ccd0:	add	r5, r5, r3, lsl #3
   3ccd4:	add	fp, fp, r3
   3ccd8:	add	r9, r9, #1
   3ccdc:	ldr	r3, [sp, #208]	; 0xd0
   3cce0:	cmp	r3, r9
   3cce4:	beq	3cd70 <GetDataSlab+0x1bd64>
   3cce8:	ldr	r3, [r6]
   3ccec:	add	r3, r3, #1
   3ccf0:	str	r3, [r6]
   3ccf4:	add	r8, r8, #4
   3ccf8:	ldr	r2, [sp, #8]
   3ccfc:	ldr	r1, [r2, #4]!
   3cd00:	str	r2, [sp, #8]
   3cd04:	mov	r0, r3
   3cd08:	bl	517e8 <__aeabi_idivmod>
   3cd0c:	cmp	r1, #0
   3cd10:	bne	3cd5c <GetDataSlab+0x1bd50>
   3cd14:	mov	r3, #0
   3cd18:	str	r3, [r6], #4
   3cd1c:	add	r7, r7, #4
   3cd20:	str	r7, [sp, #12]
   3cd24:	ldr	r4, [r7]
   3cd28:	mov	r1, r4
   3cd2c:	mov	r0, fp
   3cd30:	bl	517e8 <__aeabi_idivmod>
   3cd34:	subs	r3, r1, #0
   3cd38:	beq	3ccb8 <GetDataSlab+0x1bcac>
   3cd3c:	ldr	r2, [r7, #-4]
   3cd40:	ldr	r1, [r8]
   3cd44:	sub	r3, r4, r3
   3cd48:	mla	r3, r1, r2, r3
   3cd4c:	add	r5, r5, r3, lsl #3
   3cd50:	add	fp, fp, r3
   3cd54:	b	3ccd8 <GetDataSlab+0x1bccc>
   3cd58:	ldr	r9, [sp, #28]
   3cd5c:	add	r3, sp, #152	; 0x98
   3cd60:	add	r3, r3, r9, lsl #2
   3cd64:	ldr	r3, [r3, #-120]	; 0xffffff88
   3cd68:	add	fp, fp, r3
   3cd6c:	add	r5, r5, r3, lsl #3
   3cd70:	ldr	r3, [sp, #16]
   3cd74:	add	r3, r3, sl
   3cd78:	str	r3, [sp, #16]
   3cd7c:	ldr	r2, [sp, #20]
   3cd80:	cmp	r3, r2
   3cd84:	bge	4346c <GetDataSlab+0x22460>
   3cd88:	ldr	r3, [sp, #196]	; 0xc4
   3cd8c:	ldr	r3, [r3]
   3cd90:	cmp	r3, #0
   3cd94:	addne	r5, r5, r3, lsl #3
   3cd98:	addne	fp, fp, r3
   3cd9c:	ldr	r3, [sp, #204]	; 0xcc
   3cda0:	ldr	sl, [r3]
   3cda4:	cmp	sl, #0
   3cda8:	ble	3cddc <GetDataSlab+0x1bdd0>
   3cdac:	sub	r0, r5, #8
   3cdb0:	ldr	r3, [sp, #4]
   3cdb4:	ldr	r2, [sp, #16]
   3cdb8:	add	r1, r3, r2
   3cdbc:	mov	r2, #0
   3cdc0:	ldr	r3, [r0, #8]!
   3cdc4:	strb	r3, [r1], #1
   3cdc8:	add	r2, r2, #1
   3cdcc:	ldr	r3, [sp, #204]	; 0xcc
   3cdd0:	ldr	sl, [r3]
   3cdd4:	cmp	sl, r2
   3cdd8:	bgt	3cdc0 <GetDataSlab+0x1bdb4>
   3cddc:	ldr	r3, [sp, #192]	; 0xc0
   3cde0:	ldr	r2, [r3]
   3cde4:	ldr	r3, [sp, #196]	; 0xc4
   3cde8:	ldr	r3, [r3]
   3cdec:	sub	r3, r2, r3
   3cdf0:	add	fp, fp, r3
   3cdf4:	add	r5, r5, r3, lsl #3
   3cdf8:	ldr	r3, [sp, #208]	; 0xd0
   3cdfc:	cmp	r3, #1
   3ce00:	ble	3cd70 <GetDataSlab+0x1bd64>
   3ce04:	ldr	r3, [sp, #76]	; 0x4c
   3ce08:	add	r3, r3, #1
   3ce0c:	str	r3, [sp, #76]	; 0x4c
   3ce10:	ldr	r2, [sp, #204]	; 0xcc
   3ce14:	ldr	r1, [r2, #4]
   3ce18:	mov	r0, r3
   3ce1c:	bl	517e8 <__aeabi_idivmod>
   3ce20:	cmp	r1, #0
   3ce24:	bne	3cd58 <GetDataSlab+0x1bd4c>
   3ce28:	add	r6, sp, #76	; 0x4c
   3ce2c:	ldr	r3, [sp, #204]	; 0xcc
   3ce30:	add	r3, r3, #4
   3ce34:	str	r3, [sp, #8]
   3ce38:	ldr	r3, [sp, #196]	; 0xc4
   3ce3c:	add	r8, r3, #4
   3ce40:	add	r7, sp, #112	; 0x70
   3ce44:	ldr	r9, [sp, #28]
   3ce48:	b	3cd14 <GetDataSlab+0x1bd08>
   3ce4c:	ldr	r2, [r9]
   3ce50:	cmp	r2, #0
   3ce54:	beq	3ce6c <GetDataSlab+0x1be60>
   3ce58:	ldr	r3, [sp, #16]
   3ce5c:	ldr	r3, [r3, #-4]
   3ce60:	mul	r3, r3, r2
   3ce64:	add	r5, r5, r3, lsl #3
   3ce68:	add	fp, fp, r3
   3ce6c:	add	sl, sl, #1
   3ce70:	ldr	r3, [sp, #208]	; 0xd0
   3ce74:	cmp	r3, sl
   3ce78:	beq	3cf04 <GetDataSlab+0x1bef8>
   3ce7c:	ldr	r3, [r6]
   3ce80:	add	r3, r3, #1
   3ce84:	str	r3, [r6]
   3ce88:	add	r9, r9, #4
   3ce8c:	ldr	r2, [sp, #12]
   3ce90:	ldr	r1, [r2, #4]!
   3ce94:	str	r2, [sp, #12]
   3ce98:	mov	r0, r3
   3ce9c:	bl	517e8 <__aeabi_idivmod>
   3cea0:	cmp	r1, #0
   3cea4:	bne	3cef0 <GetDataSlab+0x1bee4>
   3cea8:	mov	r3, #0
   3ceac:	str	r3, [r6], #4
   3ceb0:	add	r7, r7, #4
   3ceb4:	str	r7, [sp, #16]
   3ceb8:	ldr	r4, [r7]
   3cebc:	mov	r1, r4
   3cec0:	mov	r0, fp
   3cec4:	bl	517e8 <__aeabi_idivmod>
   3cec8:	subs	r3, r1, #0
   3cecc:	beq	3ce4c <GetDataSlab+0x1be40>
   3ced0:	ldr	r2, [r7, #-4]
   3ced4:	ldr	r1, [r9]
   3ced8:	sub	r3, r4, r3
   3cedc:	mla	r3, r1, r2, r3
   3cee0:	add	r5, r5, r3, lsl #3
   3cee4:	add	fp, fp, r3
   3cee8:	b	3ce6c <GetDataSlab+0x1be60>
   3ceec:	mov	sl, #1
   3cef0:	add	r3, sp, #152	; 0x98
   3cef4:	add	r3, r3, sl, lsl #2
   3cef8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3cefc:	add	fp, fp, r3
   3cf00:	add	r5, r5, r3, lsl #3
   3cf04:	ldr	r3, [sp, #24]
   3cf08:	ldr	r2, [sp, #8]
   3cf0c:	add	r3, r3, r2
   3cf10:	str	r3, [sp, #24]
   3cf14:	ldr	r2, [sp, #20]
   3cf18:	cmp	r3, r2
   3cf1c:	bge	4346c <GetDataSlab+0x22460>
   3cf20:	ldr	r3, [sp, #196]	; 0xc4
   3cf24:	ldr	r3, [r3]
   3cf28:	cmp	r3, #0
   3cf2c:	addne	r5, r5, r3, lsl #3
   3cf30:	addne	fp, fp, r3
   3cf34:	ldr	r3, [sp, #204]	; 0xcc
   3cf38:	ldr	r3, [r3]
   3cf3c:	str	r3, [sp, #8]
   3cf40:	cmp	r3, #0
   3cf44:	ble	3cf84 <GetDataSlab+0x1bf78>
   3cf48:	ldr	r3, [sp, #4]
   3cf4c:	ldr	r2, [sp, #24]
   3cf50:	add	r2, r3, r2
   3cf54:	mov	r3, #0
   3cf58:	ldr	r1, [r5]
   3cf5c:	strb	r1, [r2], #1
   3cf60:	ldr	r1, [r8]
   3cf64:	add	r5, r5, r1, lsl #3
   3cf68:	add	fp, fp, r1
   3cf6c:	add	r3, r3, #1
   3cf70:	ldr	r1, [sp, #204]	; 0xcc
   3cf74:	ldr	r1, [r1]
   3cf78:	str	r1, [sp, #8]
   3cf7c:	cmp	r1, r3
   3cf80:	bgt	3cf58 <GetDataSlab+0x1bf4c>
   3cf84:	ldr	r3, [r8]
   3cf88:	ldr	r2, [sp, #8]
   3cf8c:	mul	r3, r3, r2
   3cf90:	ldr	r2, [sp, #192]	; 0xc0
   3cf94:	ldr	r2, [r2]
   3cf98:	sub	r3, r2, r3
   3cf9c:	ldr	r2, [sp, #196]	; 0xc4
   3cfa0:	ldr	r2, [r2]
   3cfa4:	sub	r3, r3, r2
   3cfa8:	add	fp, fp, r3
   3cfac:	add	r5, r5, r3, lsl #3
   3cfb0:	ldr	r3, [sp, #208]	; 0xd0
   3cfb4:	cmp	r3, #1
   3cfb8:	ble	3cf04 <GetDataSlab+0x1bef8>
   3cfbc:	ldr	r3, [sp, #76]	; 0x4c
   3cfc0:	add	r3, r3, #1
   3cfc4:	str	r3, [sp, #76]	; 0x4c
   3cfc8:	ldr	r2, [sp, #204]	; 0xcc
   3cfcc:	ldr	r1, [r2, #4]
   3cfd0:	mov	r0, r3
   3cfd4:	bl	517e8 <__aeabi_idivmod>
   3cfd8:	cmp	r1, #0
   3cfdc:	bne	3ceec <GetDataSlab+0x1bee0>
   3cfe0:	add	r6, sp, #76	; 0x4c
   3cfe4:	ldr	r3, [sp, #204]	; 0xcc
   3cfe8:	add	r3, r3, #4
   3cfec:	str	r3, [sp, #12]
   3cff0:	ldr	r3, [sp, #196]	; 0xc4
   3cff4:	add	r9, r3, #4
   3cff8:	add	r7, sp, #112	; 0x70
   3cffc:	mov	sl, #1
   3d000:	b	3cea8 <GetDataSlab+0x1be9c>
   3d004:	mov	fp, #0
   3d008:	b	43530 <GetDataSlab+0x22524>
   3d00c:	ldr	r3, [sp, #20]
   3d010:	cmp	r3, #0
   3d014:	ble	3d650 <GetDataSlab+0x1c644>
   3d018:	mov	r3, #0
   3d01c:	str	r3, [sp, #16]
   3d020:	b	3d0f4 <GetDataSlab+0x1c0e8>
   3d024:	ldr	r2, [r8]
   3d028:	cmp	r2, #0
   3d02c:	beq	3d044 <GetDataSlab+0x1c038>
   3d030:	ldr	r3, [sp, #12]
   3d034:	ldr	r3, [r3, #-4]
   3d038:	mul	r3, r3, r2
   3d03c:	add	r5, r5, r3, lsl #3
   3d040:	add	fp, fp, r3
   3d044:	add	r9, r9, #1
   3d048:	ldr	r3, [sp, #208]	; 0xd0
   3d04c:	cmp	r3, r9
   3d050:	beq	3d0dc <GetDataSlab+0x1c0d0>
   3d054:	ldr	r3, [r6]
   3d058:	add	r3, r3, #1
   3d05c:	str	r3, [r6]
   3d060:	add	r8, r8, #4
   3d064:	ldr	r2, [sp, #8]
   3d068:	ldr	r1, [r2, #4]!
   3d06c:	str	r2, [sp, #8]
   3d070:	mov	r0, r3
   3d074:	bl	517e8 <__aeabi_idivmod>
   3d078:	cmp	r1, #0
   3d07c:	bne	3d0c8 <GetDataSlab+0x1c0bc>
   3d080:	mov	r3, #0
   3d084:	str	r3, [r6], #4
   3d088:	add	r7, r7, #4
   3d08c:	str	r7, [sp, #12]
   3d090:	ldr	r4, [r7]
   3d094:	mov	r1, r4
   3d098:	mov	r0, fp
   3d09c:	bl	517e8 <__aeabi_idivmod>
   3d0a0:	subs	r3, r1, #0
   3d0a4:	beq	3d024 <GetDataSlab+0x1c018>
   3d0a8:	ldr	r2, [r7, #-4]
   3d0ac:	ldr	r1, [r8]
   3d0b0:	sub	r3, r4, r3
   3d0b4:	mla	r3, r1, r2, r3
   3d0b8:	add	r5, r5, r3, lsl #3
   3d0bc:	add	fp, fp, r3
   3d0c0:	b	3d044 <GetDataSlab+0x1c038>
   3d0c4:	ldr	r9, [sp, #28]
   3d0c8:	add	r3, sp, #152	; 0x98
   3d0cc:	add	r3, r3, r9, lsl #2
   3d0d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d0d4:	add	fp, fp, r3
   3d0d8:	add	r5, r5, r3, lsl #3
   3d0dc:	ldr	r3, [sp, #16]
   3d0e0:	add	r3, r3, sl
   3d0e4:	str	r3, [sp, #16]
   3d0e8:	ldr	r2, [sp, #20]
   3d0ec:	cmp	r3, r2
   3d0f0:	bge	3d1b8 <GetDataSlab+0x1c1ac>
   3d0f4:	ldr	r3, [sp, #196]	; 0xc4
   3d0f8:	ldr	r3, [r3]
   3d0fc:	cmp	r3, #0
   3d100:	addne	r5, r5, r3, lsl #3
   3d104:	addne	fp, fp, r3
   3d108:	ldr	r3, [sp, #204]	; 0xcc
   3d10c:	ldr	sl, [r3]
   3d110:	cmp	sl, #0
   3d114:	ble	3d148 <GetDataSlab+0x1c13c>
   3d118:	sub	r0, r5, #8
   3d11c:	ldr	r3, [sp, #4]
   3d120:	ldr	r2, [sp, #16]
   3d124:	add	r1, r3, r2
   3d128:	mov	r2, #0
   3d12c:	ldr	r3, [r0, #8]!
   3d130:	strb	r3, [r1], #1
   3d134:	add	r2, r2, #1
   3d138:	ldr	r3, [sp, #204]	; 0xcc
   3d13c:	ldr	sl, [r3]
   3d140:	cmp	sl, r2
   3d144:	bgt	3d12c <GetDataSlab+0x1c120>
   3d148:	ldr	r3, [sp, #192]	; 0xc0
   3d14c:	ldr	r2, [r3]
   3d150:	ldr	r3, [sp, #196]	; 0xc4
   3d154:	ldr	r3, [r3]
   3d158:	sub	r3, r2, r3
   3d15c:	add	fp, fp, r3
   3d160:	add	r5, r5, r3, lsl #3
   3d164:	ldr	r3, [sp, #208]	; 0xd0
   3d168:	cmp	r3, #1
   3d16c:	ble	3d0dc <GetDataSlab+0x1c0d0>
   3d170:	ldr	r3, [sp, #76]	; 0x4c
   3d174:	add	r3, r3, #1
   3d178:	str	r3, [sp, #76]	; 0x4c
   3d17c:	ldr	r2, [sp, #204]	; 0xcc
   3d180:	ldr	r1, [r2, #4]
   3d184:	mov	r0, r3
   3d188:	bl	517e8 <__aeabi_idivmod>
   3d18c:	cmp	r1, #0
   3d190:	bne	3d0c4 <GetDataSlab+0x1c0b8>
   3d194:	add	r6, sp, #76	; 0x4c
   3d198:	ldr	r3, [sp, #204]	; 0xcc
   3d19c:	add	r3, r3, #4
   3d1a0:	str	r3, [sp, #8]
   3d1a4:	ldr	r3, [sp, #196]	; 0xc4
   3d1a8:	add	r8, r3, #4
   3d1ac:	add	r7, sp, #112	; 0x70
   3d1b0:	ldr	r9, [sp, #28]
   3d1b4:	b	3d080 <GetDataSlab+0x1c074>
   3d1b8:	mov	r3, #0
   3d1bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d1c0:	ldr	r2, [r9]
   3d1c4:	cmp	r2, #0
   3d1c8:	beq	3d1e0 <GetDataSlab+0x1c1d4>
   3d1cc:	ldr	r3, [sp, #16]
   3d1d0:	ldr	r3, [r3, #-4]
   3d1d4:	mul	r3, r3, r2
   3d1d8:	add	r5, r5, r3, lsl #3
   3d1dc:	add	fp, fp, r3
   3d1e0:	add	sl, sl, #1
   3d1e4:	ldr	r3, [sp, #208]	; 0xd0
   3d1e8:	cmp	r3, sl
   3d1ec:	beq	3d278 <GetDataSlab+0x1c26c>
   3d1f0:	ldr	r3, [r6]
   3d1f4:	add	r3, r3, #1
   3d1f8:	str	r3, [r6]
   3d1fc:	add	r9, r9, #4
   3d200:	ldr	r2, [sp, #12]
   3d204:	ldr	r1, [r2, #4]!
   3d208:	str	r2, [sp, #12]
   3d20c:	mov	r0, r3
   3d210:	bl	517e8 <__aeabi_idivmod>
   3d214:	cmp	r1, #0
   3d218:	bne	3d264 <GetDataSlab+0x1c258>
   3d21c:	mov	r3, #0
   3d220:	str	r3, [r6], #4
   3d224:	add	r7, r7, #4
   3d228:	str	r7, [sp, #16]
   3d22c:	ldr	r4, [r7]
   3d230:	mov	r1, r4
   3d234:	mov	r0, fp
   3d238:	bl	517e8 <__aeabi_idivmod>
   3d23c:	subs	r3, r1, #0
   3d240:	beq	3d1c0 <GetDataSlab+0x1c1b4>
   3d244:	ldr	r2, [r7, #-4]
   3d248:	ldr	r1, [r9]
   3d24c:	sub	r3, r4, r3
   3d250:	mla	r3, r1, r2, r3
   3d254:	add	r5, r5, r3, lsl #3
   3d258:	add	fp, fp, r3
   3d25c:	b	3d1e0 <GetDataSlab+0x1c1d4>
   3d260:	mov	sl, #1
   3d264:	add	r3, sp, #152	; 0x98
   3d268:	add	r3, r3, sl, lsl #2
   3d26c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d270:	add	fp, fp, r3
   3d274:	add	r5, r5, r3, lsl #3
   3d278:	ldr	r3, [sp, #24]
   3d27c:	ldr	r2, [sp, #8]
   3d280:	add	r3, r3, r2
   3d284:	str	r3, [sp, #24]
   3d288:	ldr	r2, [sp, #20]
   3d28c:	cmp	r3, r2
   3d290:	bge	3d378 <GetDataSlab+0x1c36c>
   3d294:	ldr	r3, [sp, #196]	; 0xc4
   3d298:	ldr	r3, [r3]
   3d29c:	cmp	r3, #0
   3d2a0:	addne	r5, r5, r3, lsl #3
   3d2a4:	addne	fp, fp, r3
   3d2a8:	ldr	r3, [sp, #204]	; 0xcc
   3d2ac:	ldr	r3, [r3]
   3d2b0:	str	r3, [sp, #8]
   3d2b4:	cmp	r3, #0
   3d2b8:	ble	3d2f8 <GetDataSlab+0x1c2ec>
   3d2bc:	ldr	r3, [sp, #4]
   3d2c0:	ldr	r2, [sp, #24]
   3d2c4:	add	r2, r3, r2
   3d2c8:	mov	r3, #0
   3d2cc:	ldr	r1, [r5]
   3d2d0:	strb	r1, [r2], #1
   3d2d4:	ldr	r1, [r8]
   3d2d8:	add	r5, r5, r1, lsl #3
   3d2dc:	add	fp, fp, r1
   3d2e0:	add	r3, r3, #1
   3d2e4:	ldr	r1, [sp, #204]	; 0xcc
   3d2e8:	ldr	r1, [r1]
   3d2ec:	str	r1, [sp, #8]
   3d2f0:	cmp	r1, r3
   3d2f4:	bgt	3d2cc <GetDataSlab+0x1c2c0>
   3d2f8:	ldr	r3, [r8]
   3d2fc:	ldr	r2, [sp, #8]
   3d300:	mul	r3, r3, r2
   3d304:	ldr	r2, [sp, #192]	; 0xc0
   3d308:	ldr	r2, [r2]
   3d30c:	sub	r3, r2, r3
   3d310:	ldr	r2, [sp, #196]	; 0xc4
   3d314:	ldr	r2, [r2]
   3d318:	sub	r3, r3, r2
   3d31c:	add	fp, fp, r3
   3d320:	add	r5, r5, r3, lsl #3
   3d324:	ldr	r3, [sp, #208]	; 0xd0
   3d328:	cmp	r3, #1
   3d32c:	ble	3d278 <GetDataSlab+0x1c26c>
   3d330:	ldr	r3, [sp, #76]	; 0x4c
   3d334:	add	r3, r3, #1
   3d338:	str	r3, [sp, #76]	; 0x4c
   3d33c:	ldr	r2, [sp, #204]	; 0xcc
   3d340:	ldr	r1, [r2, #4]
   3d344:	mov	r0, r3
   3d348:	bl	517e8 <__aeabi_idivmod>
   3d34c:	cmp	r1, #0
   3d350:	bne	3d260 <GetDataSlab+0x1c254>
   3d354:	add	r6, sp, #76	; 0x4c
   3d358:	ldr	r3, [sp, #204]	; 0xcc
   3d35c:	add	r3, r3, #4
   3d360:	str	r3, [sp, #12]
   3d364:	ldr	r3, [sp, #196]	; 0xc4
   3d368:	add	r9, r3, #4
   3d36c:	add	r7, sp, #112	; 0x70
   3d370:	mov	sl, #1
   3d374:	b	3d21c <GetDataSlab+0x1c210>
   3d378:	mov	r3, #0
   3d37c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d380:	mov	r3, #1
   3d384:	b	24fa8 <GetDataSlab+0x3f9c>
   3d388:	mov	r3, #0
   3d38c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d390:	mov	r3, #0
   3d394:	b	24fa8 <GetDataSlab+0x3f9c>
   3d398:	mov	r3, #0
   3d39c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3a0:	mov	r3, #0
   3d3a4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3a8:	mov	r3, #0
   3d3ac:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3b0:	mov	r3, #0
   3d3b4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3b8:	mov	r3, #0
   3d3bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3c0:	mov	r3, #0
   3d3c4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3c8:	mov	r3, #0
   3d3cc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3d0:	mov	r3, #0
   3d3d4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3d8:	mov	r3, #0
   3d3dc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3e0:	mov	r3, #0
   3d3e4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3e8:	mov	r3, #0
   3d3ec:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3f0:	mov	r3, #0
   3d3f4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d3f8:	mov	r3, #0
   3d3fc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d400:	mov	r3, #0
   3d404:	b	24fa8 <GetDataSlab+0x3f9c>
   3d408:	mov	r3, #0
   3d40c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d410:	mov	r3, #0
   3d414:	b	24fa8 <GetDataSlab+0x3f9c>
   3d418:	mov	r3, #0
   3d41c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d420:	mov	r3, #0
   3d424:	b	24fa8 <GetDataSlab+0x3f9c>
   3d428:	mov	r3, #0
   3d42c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d430:	mov	r3, #0
   3d434:	b	24fa8 <GetDataSlab+0x3f9c>
   3d438:	mov	r3, #0
   3d43c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d440:	mov	r3, #0
   3d444:	b	24fa8 <GetDataSlab+0x3f9c>
   3d448:	mov	r3, #0
   3d44c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d450:	mov	r3, #0
   3d454:	b	24fa8 <GetDataSlab+0x3f9c>
   3d458:	mov	r3, #0
   3d45c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d460:	mov	r3, #0
   3d464:	b	24fa8 <GetDataSlab+0x3f9c>
   3d468:	mov	r3, #0
   3d46c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d470:	mov	r3, #0
   3d474:	b	24fa8 <GetDataSlab+0x3f9c>
   3d478:	mov	r3, #0
   3d47c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d480:	mov	r3, #0
   3d484:	b	24fa8 <GetDataSlab+0x3f9c>
   3d488:	mov	r3, #0
   3d48c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d490:	mov	r3, #0
   3d494:	b	24fa8 <GetDataSlab+0x3f9c>
   3d498:	mov	r3, #0
   3d49c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4a0:	mov	r3, #0
   3d4a4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4a8:	mov	r3, #0
   3d4ac:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4b0:	mov	r3, #0
   3d4b4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4b8:	mov	r3, #0
   3d4bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4c0:	mov	r3, #0
   3d4c4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4c8:	mov	r3, #0
   3d4cc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4d0:	mov	r3, #0
   3d4d4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4d8:	mov	r3, #0
   3d4dc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4e0:	mov	r3, #0
   3d4e4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4e8:	mov	r3, #0
   3d4ec:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4f0:	mov	r3, #0
   3d4f4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d4f8:	mov	r3, #0
   3d4fc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d500:	mov	r3, #0
   3d504:	b	24fa8 <GetDataSlab+0x3f9c>
   3d508:	mov	r3, #0
   3d50c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d510:	mov	r3, #0
   3d514:	b	24fa8 <GetDataSlab+0x3f9c>
   3d518:	mov	r3, #0
   3d51c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d520:	mov	r3, #0
   3d524:	b	24fa8 <GetDataSlab+0x3f9c>
   3d528:	mov	r3, #0
   3d52c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d530:	mov	r3, #0
   3d534:	b	24fa8 <GetDataSlab+0x3f9c>
   3d538:	mov	r3, #0
   3d53c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d540:	mov	r3, #0
   3d544:	b	24fa8 <GetDataSlab+0x3f9c>
   3d548:	mov	r3, #0
   3d54c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d550:	mov	r3, #0
   3d554:	b	24fa8 <GetDataSlab+0x3f9c>
   3d558:	mov	r3, #0
   3d55c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d560:	mov	r3, #0
   3d564:	b	24fa8 <GetDataSlab+0x3f9c>
   3d568:	mov	r3, #0
   3d56c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d570:	mov	r3, #0
   3d574:	b	24fa8 <GetDataSlab+0x3f9c>
   3d578:	mov	r3, #0
   3d57c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d580:	mov	r3, #0
   3d584:	b	24fa8 <GetDataSlab+0x3f9c>
   3d588:	mov	r3, #0
   3d58c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d590:	mov	r3, #0
   3d594:	b	24fa8 <GetDataSlab+0x3f9c>
   3d598:	mov	r3, #0
   3d59c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5a0:	mov	r3, #0
   3d5a4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5a8:	mov	r3, #0
   3d5ac:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5b0:	mov	r3, #0
   3d5b4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5b8:	mov	r3, #0
   3d5bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5c0:	mov	r3, #0
   3d5c4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5c8:	mov	r3, #0
   3d5cc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5d0:	mov	r3, #0
   3d5d4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5d8:	mov	r3, #0
   3d5dc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5e0:	mov	r3, #0
   3d5e4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5e8:	mov	r3, #0
   3d5ec:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5f0:	mov	r3, #0
   3d5f4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d5f8:	mov	r3, #0
   3d5fc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d600:	mov	r3, #0
   3d604:	b	24fa8 <GetDataSlab+0x3f9c>
   3d608:	mov	r3, #0
   3d60c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d610:	mov	r3, #0
   3d614:	b	24fa8 <GetDataSlab+0x3f9c>
   3d618:	mov	r3, #0
   3d61c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d620:	mov	r3, #0
   3d624:	b	24fa8 <GetDataSlab+0x3f9c>
   3d628:	mov	r3, #0
   3d62c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d630:	mov	r3, #0
   3d634:	b	24fa8 <GetDataSlab+0x3f9c>
   3d638:	mov	r3, #0
   3d63c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d640:	mov	r3, #0
   3d644:	b	24fa8 <GetDataSlab+0x3f9c>
   3d648:	mov	r3, #0
   3d64c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d650:	mov	r3, #0
   3d654:	b	24fa8 <GetDataSlab+0x3f9c>
   3d658:	mov	r3, #1
   3d65c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d660:	mov	r3, #0
   3d664:	b	24fa8 <GetDataSlab+0x3f9c>
   3d668:	mov	r3, #0
   3d66c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d670:	mov	r3, #0
   3d674:	b	24fa8 <GetDataSlab+0x3f9c>
   3d678:	mov	r3, #0
   3d67c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d680:	mov	r3, #0
   3d684:	b	24fa8 <GetDataSlab+0x3f9c>
   3d688:	mov	r3, #0
   3d68c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d690:	mov	r3, #0
   3d694:	b	24fa8 <GetDataSlab+0x3f9c>
   3d698:	mov	r3, #0
   3d69c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6a0:	mov	r3, #0
   3d6a4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6a8:	mov	r3, #0
   3d6ac:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6b0:	mov	r3, #0
   3d6b4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6b8:	mov	r3, #0
   3d6bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6c0:	mov	r3, #0
   3d6c4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6c8:	mov	r3, #0
   3d6cc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6d0:	mov	r3, #0
   3d6d4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6d8:	mov	r3, #0
   3d6dc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6e0:	mov	r3, #0
   3d6e4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6e8:	mov	r3, #0
   3d6ec:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6f0:	mov	r3, #0
   3d6f4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d6f8:	mov	r3, #0
   3d6fc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d700:	mov	r3, #0
   3d704:	b	24fa8 <GetDataSlab+0x3f9c>
   3d708:	mov	r3, #0
   3d70c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d710:	mov	r3, #0
   3d714:	b	24fa8 <GetDataSlab+0x3f9c>
   3d718:	mov	r3, #0
   3d71c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d720:	mov	r3, #0
   3d724:	b	24fa8 <GetDataSlab+0x3f9c>
   3d728:	mov	r3, #0
   3d72c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d730:	mov	r3, #0
   3d734:	b	24fa8 <GetDataSlab+0x3f9c>
   3d738:	mov	r3, #0
   3d73c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d740:	mov	r3, #0
   3d744:	b	24fa8 <GetDataSlab+0x3f9c>
   3d748:	mov	r3, #0
   3d74c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d750:	mov	r3, #0
   3d754:	b	24fa8 <GetDataSlab+0x3f9c>
   3d758:	mov	r3, #0
   3d75c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d760:	mov	r3, #0
   3d764:	b	24fa8 <GetDataSlab+0x3f9c>
   3d768:	mov	r3, #0
   3d76c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d770:	mov	r3, #0
   3d774:	b	24fa8 <GetDataSlab+0x3f9c>
   3d778:	mov	r3, #0
   3d77c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d780:	mov	r3, #0
   3d784:	b	24fa8 <GetDataSlab+0x3f9c>
   3d788:	mov	r3, #0
   3d78c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d790:	mov	r3, #0
   3d794:	b	24fa8 <GetDataSlab+0x3f9c>
   3d798:	mov	r3, #0
   3d79c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7a0:	mov	r3, #0
   3d7a4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7a8:	mov	r3, #0
   3d7ac:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7b0:	mov	r3, #0
   3d7b4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7b8:	mov	r3, #0
   3d7bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7c0:	mov	r3, #0
   3d7c4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7c8:	mov	r3, #0
   3d7cc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7d0:	mov	r3, #0
   3d7d4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7d8:	mov	r3, #0
   3d7dc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7e0:	mov	r3, #0
   3d7e4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7e8:	mov	r3, #0
   3d7ec:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7f0:	mov	r3, #0
   3d7f4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d7f8:	mov	r3, #0
   3d7fc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d800:	mov	r3, #0
   3d804:	b	24fa8 <GetDataSlab+0x3f9c>
   3d808:	mov	r3, #0
   3d80c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d810:	mov	r3, #0
   3d814:	b	24fa8 <GetDataSlab+0x3f9c>
   3d818:	mov	r3, #0
   3d81c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d820:	mov	r3, #0
   3d824:	b	24fa8 <GetDataSlab+0x3f9c>
   3d828:	mov	r3, #0
   3d82c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d830:	mov	r3, #0
   3d834:	b	24fa8 <GetDataSlab+0x3f9c>
   3d838:	mov	r3, #0
   3d83c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d840:	mov	r3, #0
   3d844:	b	24fa8 <GetDataSlab+0x3f9c>
   3d848:	mov	r3, #0
   3d84c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d850:	mov	r3, #0
   3d854:	b	24fa8 <GetDataSlab+0x3f9c>
   3d858:	mov	r3, #0
   3d85c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d860:	mov	r3, #0
   3d864:	b	24fa8 <GetDataSlab+0x3f9c>
   3d868:	mov	r3, #0
   3d86c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d870:	mov	r3, #0
   3d874:	b	24fa8 <GetDataSlab+0x3f9c>
   3d878:	mov	r3, #0
   3d87c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d880:	mov	r3, #0
   3d884:	b	24fa8 <GetDataSlab+0x3f9c>
   3d888:	mov	r3, #0
   3d88c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d890:	mov	r3, #0
   3d894:	b	24fa8 <GetDataSlab+0x3f9c>
   3d898:	mov	r3, #0
   3d89c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8a0:	mov	r3, #0
   3d8a4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8a8:	mov	r3, #0
   3d8ac:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8b0:	mov	r3, #0
   3d8b4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8b8:	mov	r3, #0
   3d8bc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8c0:	mov	r3, #0
   3d8c4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8c8:	mov	r3, #0
   3d8cc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8d0:	mov	r3, #0
   3d8d4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8d8:	mov	r3, #0
   3d8dc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8e0:	mov	r3, #0
   3d8e4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8e8:	mov	r3, #0
   3d8ec:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8f0:	mov	r3, #0
   3d8f4:	b	24fa8 <GetDataSlab+0x3f9c>
   3d8f8:	mov	r3, #0
   3d8fc:	b	24fa8 <GetDataSlab+0x3f9c>
   3d900:	mov	r3, #0
   3d904:	b	24fa8 <GetDataSlab+0x3f9c>
   3d908:	mov	r3, #0
   3d90c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d910:	mov	r3, #0
   3d914:	b	24fa8 <GetDataSlab+0x3f9c>
   3d918:	mov	r3, #0
   3d91c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d920:	mov	r3, #0
   3d924:	b	24fa8 <GetDataSlab+0x3f9c>
   3d928:	mov	r3, #0
   3d92c:	b	24fa8 <GetDataSlab+0x3f9c>
   3d930:	ldr	r3, [r5]
   3d934:	ldr	r2, [sp, #20]
   3d938:	mul	r3, r3, r2
   3d93c:	str	r3, [sp, #20]
   3d940:	ldr	r3, [r4]
   3d944:	ldr	r2, [r9]
   3d948:	mla	fp, r2, r3, fp
   3d94c:	add	sl, sl, #4
   3d950:	add	r9, r9, #4
   3d954:	add	r6, r6, #1
   3d958:	add	r5, r5, #4
   3d95c:	add	r4, r4, #4
   3d960:	ldr	r2, [sp, #16]
   3d964:	ldr	r3, [r2, #4]!
   3d968:	str	r2, [sp, #16]
   3d96c:	sub	ip, r3, #1
   3d970:	str	sl, [sp, #24]
   3d974:	str	ip, [sl]
   3d978:	ldr	r2, [sp, #12]
   3d97c:	ldr	r3, [r2], #4
   3d980:	str	r2, [sp, #12]
   3d984:	mov	r0, r3
   3d988:	mov	r7, r9
   3d98c:	str	r3, [r9, #4]
   3d990:	cmp	r6, #1
   3d994:	beq	3d930 <GetDataSlab+0x1c924>
   3d998:	mov	r1, r2
   3d99c:	mov	r2, r1
   3d9a0:	ldr	r3, [r1, #-4]!
   3d9a4:	mul	ip, r3, ip
   3d9a8:	ldr	r3, [r2]
   3d9ac:	mul	r0, r3, r0
   3d9b0:	cmp	r1, lr
   3d9b4:	bne	3d99c <GetDataSlab+0x1c990>
   3d9b8:	ldr	r3, [sp, #24]
   3d9bc:	str	ip, [r3]
   3d9c0:	str	r0, [r7, #4]
   3d9c4:	ldr	r3, [r5]
   3d9c8:	ldr	r2, [sp, #20]
   3d9cc:	mul	r3, r3, r2
   3d9d0:	str	r3, [sp, #20]
   3d9d4:	ldr	r3, [r7]
   3d9d8:	ldr	r2, [r4]
   3d9dc:	mla	fp, r2, r3, fp
   3d9e0:	ldr	r3, [sp, #208]	; 0xd0
   3d9e4:	cmp	r3, r6
   3d9e8:	bgt	3d94c <GetDataSlab+0x1c940>
   3d9ec:	ldr	r3, [sp, #8]
   3d9f0:	add	r5, r3, fp, lsl #3
   3d9f4:	ldr	r3, [sp, #28]
   3d9f8:	cmp	r3, #1
   3d9fc:	beq	24c38 <GetDataSlab+0x3c2c>
   3da00:	ldr	r3, [sp, #20]
   3da04:	cmp	r3, #0
   3da08:	movle	r3, #0
   3da0c:	ble	24fa8 <GetDataSlab+0x3f9c>
   3da10:	mov	r3, #0
   3da14:	str	r3, [sp, #24]
   3da18:	b	24ec0 <GetDataSlab+0x3eb4>
   3da1c:	ldr	r3, [r5]
   3da20:	ldr	r2, [sp, #20]
   3da24:	mul	r3, r3, r2
   3da28:	str	r3, [sp, #20]
   3da2c:	ldr	r3, [r4]
   3da30:	ldr	r2, [r9]
   3da34:	mla	fp, r2, r3, fp
   3da38:	add	sl, sl, #4
   3da3c:	add	r9, r9, #4
   3da40:	add	r6, r6, #1
   3da44:	add	r5, r5, #4
   3da48:	add	r4, r4, #4
   3da4c:	ldr	r2, [sp, #16]
   3da50:	ldr	r3, [r2, #4]!
   3da54:	str	r2, [sp, #16]
   3da58:	sub	ip, r3, #1
   3da5c:	str	sl, [sp, #24]
   3da60:	str	ip, [sl]
   3da64:	ldr	r2, [sp, #12]
   3da68:	ldr	r3, [r2], #4
   3da6c:	str	r2, [sp, #12]
   3da70:	mov	r0, r3
   3da74:	mov	r7, r9
   3da78:	str	r3, [r9, #4]
   3da7c:	cmp	r6, #1
   3da80:	beq	3da1c <GetDataSlab+0x1ca10>
   3da84:	mov	r1, r2
   3da88:	mov	r2, r1
   3da8c:	ldr	r3, [r1, #-4]!
   3da90:	mul	ip, r3, ip
   3da94:	ldr	r3, [r2]
   3da98:	mul	r0, r3, r0
   3da9c:	cmp	lr, r1
   3daa0:	bne	3da88 <GetDataSlab+0x1ca7c>
   3daa4:	ldr	r3, [sp, #24]
   3daa8:	str	ip, [r3]
   3daac:	str	r0, [r7, #4]
   3dab0:	ldr	r3, [r5]
   3dab4:	ldr	r2, [sp, #20]
   3dab8:	mul	r3, r3, r2
   3dabc:	str	r3, [sp, #20]
   3dac0:	ldr	r3, [r7]
   3dac4:	ldr	r2, [r4]
   3dac8:	mla	fp, r2, r3, fp
   3dacc:	ldr	r3, [sp, #208]	; 0xd0
   3dad0:	cmp	r3, r6
   3dad4:	bgt	3da38 <GetDataSlab+0x1ca2c>
   3dad8:	ldr	r3, [sp, #8]
   3dadc:	add	r5, r3, fp, lsl #2
   3dae0:	ldr	r3, [sp, #28]
   3dae4:	cmp	r3, #1
   3dae8:	beq	25020 <GetDataSlab+0x4014>
   3daec:	ldr	r3, [sp, #20]
   3daf0:	cmp	r3, #0
   3daf4:	movle	r3, #0
   3daf8:	ble	24fa8 <GetDataSlab+0x3f9c>
   3dafc:	mov	r3, #0
   3db00:	str	r3, [sp, #24]
   3db04:	b	252ac <GetDataSlab+0x42a0>
   3db08:	ldr	r3, [r5]
   3db0c:	ldr	r2, [sp, #20]
   3db10:	mul	r3, r3, r2
   3db14:	str	r3, [sp, #20]
   3db18:	ldr	r3, [r9]
   3db1c:	ldr	r2, [r4]
   3db20:	mla	fp, r2, r3, fp
   3db24:	add	sl, sl, #4
   3db28:	add	r9, r9, #4
   3db2c:	add	r6, r6, #1
   3db30:	add	r5, r5, #4
   3db34:	add	r4, r4, #4
   3db38:	ldr	r2, [sp, #16]
   3db3c:	ldr	r3, [r2, #4]!
   3db40:	str	r2, [sp, #16]
   3db44:	sub	ip, r3, #1
   3db48:	str	sl, [sp, #24]
   3db4c:	str	ip, [sl]
   3db50:	ldr	r2, [sp, #12]
   3db54:	ldr	r3, [r2], #4
   3db58:	str	r2, [sp, #12]
   3db5c:	mov	r0, r3
   3db60:	mov	r7, r9
   3db64:	str	r3, [r9, #4]
   3db68:	cmp	r6, #1
   3db6c:	beq	3db08 <GetDataSlab+0x1cafc>
   3db70:	mov	r1, r2
   3db74:	mov	r2, r1
   3db78:	ldr	r3, [r1, #-4]!
   3db7c:	mul	ip, r3, ip
   3db80:	ldr	r3, [r2]
   3db84:	mul	r0, r3, r0
   3db88:	cmp	r1, lr
   3db8c:	bne	3db74 <GetDataSlab+0x1cb68>
   3db90:	ldr	r3, [sp, #24]
   3db94:	str	ip, [r3]
   3db98:	str	r0, [r7, #4]
   3db9c:	ldr	r3, [r5]
   3dba0:	ldr	r2, [sp, #20]
   3dba4:	mul	r3, r3, r2
   3dba8:	str	r3, [sp, #20]
   3dbac:	ldr	r3, [r7]
   3dbb0:	ldr	r2, [r4]
   3dbb4:	mla	fp, r2, r3, fp
   3dbb8:	ldr	r3, [sp, #208]	; 0xd0
   3dbbc:	cmp	r3, r6
   3dbc0:	bgt	3db24 <GetDataSlab+0x1cb18>
   3dbc4:	ldr	r3, [sp, #8]
   3dbc8:	add	r5, r3, fp, lsl #2
   3dbcc:	ldr	r3, [sp, #28]
   3dbd0:	cmp	r3, #1
   3dbd4:	beq	25408 <GetDataSlab+0x43fc>
   3dbd8:	ldr	r3, [sp, #20]
   3dbdc:	cmp	r3, #0
   3dbe0:	movle	r3, #0
   3dbe4:	ble	24fa8 <GetDataSlab+0x3f9c>
   3dbe8:	mov	r3, #0
   3dbec:	str	r3, [sp, #24]
   3dbf0:	b	25698 <GetDataSlab+0x468c>
   3dbf4:	ldr	r3, [r5]
   3dbf8:	ldr	r2, [sp, #20]
   3dbfc:	mul	r3, r3, r2
   3dc00:	str	r3, [sp, #20]
   3dc04:	ldr	r3, [r4]
   3dc08:	ldr	r2, [r9]
   3dc0c:	mla	fp, r2, r3, fp
   3dc10:	add	sl, sl, #4
   3dc14:	add	r9, r9, #4
   3dc18:	add	r6, r6, #1
   3dc1c:	add	r5, r5, #4
   3dc20:	add	r4, r4, #4
   3dc24:	ldr	r2, [sp, #16]
   3dc28:	ldr	r3, [r2, #4]!
   3dc2c:	str	r2, [sp, #16]
   3dc30:	sub	ip, r3, #1
   3dc34:	str	sl, [sp, #24]
   3dc38:	str	ip, [sl]
   3dc3c:	ldr	r2, [sp, #12]
   3dc40:	ldr	r3, [r2], #4
   3dc44:	str	r2, [sp, #12]
   3dc48:	mov	r0, r3
   3dc4c:	mov	r7, r9
   3dc50:	str	r3, [r9, #4]
   3dc54:	cmp	r6, #1
   3dc58:	beq	3dbf4 <GetDataSlab+0x1cbe8>
   3dc5c:	mov	r1, r2
   3dc60:	mov	r2, r1
   3dc64:	ldr	r3, [r1, #-4]!
   3dc68:	mul	ip, r3, ip
   3dc6c:	ldr	r3, [r2]
   3dc70:	mul	r0, r3, r0
   3dc74:	cmp	lr, r1
   3dc78:	bne	3dc60 <GetDataSlab+0x1cc54>
   3dc7c:	ldr	r3, [sp, #24]
   3dc80:	str	ip, [r3]
   3dc84:	str	r0, [r7, #4]
   3dc88:	ldr	r3, [r5]
   3dc8c:	ldr	r2, [sp, #20]
   3dc90:	mul	r3, r3, r2
   3dc94:	str	r3, [sp, #20]
   3dc98:	ldr	r3, [r7]
   3dc9c:	ldr	r2, [r4]
   3dca0:	mla	fp, r2, r3, fp
   3dca4:	ldr	r3, [sp, #208]	; 0xd0
   3dca8:	cmp	r3, r6
   3dcac:	bgt	3dc10 <GetDataSlab+0x1cc04>
   3dcb0:	ldr	r3, [sp, #8]
   3dcb4:	add	r5, r3, fp, lsl #2
   3dcb8:	ldr	r3, [sp, #28]
   3dcbc:	cmp	r3, #1
   3dcc0:	beq	257f4 <GetDataSlab+0x47e8>
   3dcc4:	ldr	r3, [sp, #20]
   3dcc8:	cmp	r3, #0
   3dccc:	movle	r3, #0
   3dcd0:	ble	24fa8 <GetDataSlab+0x3f9c>
   3dcd4:	mov	r3, #0
   3dcd8:	str	r3, [sp, #24]
   3dcdc:	b	25a84 <GetDataSlab+0x4a78>
   3dce0:	ldr	r3, [r5]
   3dce4:	ldr	r2, [sp, #20]
   3dce8:	mul	r3, r3, r2
   3dcec:	str	r3, [sp, #20]
   3dcf0:	ldr	r3, [r9]
   3dcf4:	ldr	r2, [r4]
   3dcf8:	mla	fp, r2, r3, fp
   3dcfc:	add	sl, sl, #4
   3dd00:	add	r9, r9, #4
   3dd04:	add	r6, r6, #1
   3dd08:	add	r5, r5, #4
   3dd0c:	add	r4, r4, #4
   3dd10:	ldr	r2, [sp, #16]
   3dd14:	ldr	r3, [r2, #4]!
   3dd18:	str	r2, [sp, #16]
   3dd1c:	sub	ip, r3, #1
   3dd20:	str	sl, [sp, #24]
   3dd24:	str	ip, [sl]
   3dd28:	ldr	r2, [sp, #12]
   3dd2c:	ldr	r3, [r2], #4
   3dd30:	str	r2, [sp, #12]
   3dd34:	mov	r0, r3
   3dd38:	mov	r7, r9
   3dd3c:	str	r3, [r9, #4]
   3dd40:	cmp	r6, #1
   3dd44:	beq	3dce0 <GetDataSlab+0x1ccd4>
   3dd48:	mov	r1, r2
   3dd4c:	mov	r2, r1
   3dd50:	ldr	r3, [r1, #-4]!
   3dd54:	mul	ip, r3, ip
   3dd58:	ldr	r3, [r2]
   3dd5c:	mul	r0, r3, r0
   3dd60:	cmp	lr, r1
   3dd64:	bne	3dd4c <GetDataSlab+0x1cd40>
   3dd68:	ldr	r3, [sp, #24]
   3dd6c:	str	ip, [r3]
   3dd70:	str	r0, [r7, #4]
   3dd74:	ldr	r3, [r5]
   3dd78:	ldr	r2, [sp, #20]
   3dd7c:	mul	r3, r3, r2
   3dd80:	str	r3, [sp, #20]
   3dd84:	ldr	r3, [r7]
   3dd88:	ldr	r2, [r4]
   3dd8c:	mla	fp, r2, r3, fp
   3dd90:	ldr	r3, [sp, #208]	; 0xd0
   3dd94:	cmp	r3, r6
   3dd98:	bgt	3dcfc <GetDataSlab+0x1ccf0>
   3dd9c:	ldr	r3, [sp, #8]
   3dda0:	add	r6, r3, fp, lsl #1
   3dda4:	ldr	r3, [sp, #28]
   3dda8:	cmp	r3, #1
   3ddac:	beq	25be0 <GetDataSlab+0x4bd4>
   3ddb0:	ldr	r3, [sp, #20]
   3ddb4:	cmp	r3, #0
   3ddb8:	movle	r3, #0
   3ddbc:	ble	24fa8 <GetDataSlab+0x3f9c>
   3ddc0:	mov	r3, #0
   3ddc4:	str	r3, [sp, #24]
   3ddc8:	b	25e70 <GetDataSlab+0x4e64>
   3ddcc:	ldr	r3, [r5]
   3ddd0:	ldr	r2, [sp, #20]
   3ddd4:	mul	r3, r3, r2
   3ddd8:	str	r3, [sp, #20]
   3dddc:	ldr	r3, [r4]
   3dde0:	ldr	r2, [r9]
   3dde4:	mla	fp, r2, r3, fp
   3dde8:	add	sl, sl, #4
   3ddec:	add	r9, r9, #4
   3ddf0:	add	r6, r6, #1
   3ddf4:	add	r5, r5, #4
   3ddf8:	add	r4, r4, #4
   3ddfc:	ldr	r2, [sp, #16]
   3de00:	ldr	r3, [r2, #4]!
   3de04:	str	r2, [sp, #16]
   3de08:	sub	ip, r3, #1
   3de0c:	str	sl, [sp, #24]
   3de10:	str	ip, [sl]
   3de14:	ldr	r2, [sp, #12]
   3de18:	ldr	r3, [r2], #4
   3de1c:	str	r2, [sp, #12]
   3de20:	mov	r0, r3
   3de24:	mov	r7, r9
   3de28:	str	r3, [r9, #4]
   3de2c:	cmp	r6, #1
   3de30:	beq	3ddcc <GetDataSlab+0x1cdc0>
   3de34:	mov	r1, r2
   3de38:	mov	r2, r1
   3de3c:	ldr	r3, [r1, #-4]!
   3de40:	mul	ip, r3, ip
   3de44:	ldr	r3, [r2]
   3de48:	mul	r0, r3, r0
   3de4c:	cmp	lr, r1
   3de50:	bne	3de38 <GetDataSlab+0x1ce2c>
   3de54:	ldr	r3, [sp, #24]
   3de58:	str	ip, [r3]
   3de5c:	str	r0, [r7, #4]
   3de60:	ldr	r3, [r5]
   3de64:	ldr	r2, [sp, #20]
   3de68:	mul	r3, r3, r2
   3de6c:	str	r3, [sp, #20]
   3de70:	ldr	r3, [r7]
   3de74:	ldr	r2, [r4]
   3de78:	mla	fp, r2, r3, fp
   3de7c:	ldr	r3, [sp, #208]	; 0xd0
   3de80:	cmp	r3, r6
   3de84:	bgt	3dde8 <GetDataSlab+0x1cddc>
   3de88:	ldr	r3, [sp, #8]
   3de8c:	add	r6, r3, fp, lsl #1
   3de90:	ldr	r3, [sp, #28]
   3de94:	cmp	r3, #1
   3de98:	beq	25fd0 <GetDataSlab+0x4fc4>
   3de9c:	ldr	r3, [sp, #20]
   3dea0:	cmp	r3, #0
   3dea4:	movle	r3, #0
   3dea8:	ble	24fa8 <GetDataSlab+0x3f9c>
   3deac:	mov	r3, #0
   3deb0:	str	r3, [sp, #24]
   3deb4:	b	26260 <GetDataSlab+0x5254>
   3deb8:	ldr	r3, [r5]
   3debc:	ldr	r2, [sp, #20]
   3dec0:	mul	r3, r3, r2
   3dec4:	str	r3, [sp, #20]
   3dec8:	ldr	r3, [r4]
   3decc:	ldr	r2, [r9]
   3ded0:	mla	fp, r2, r3, fp
   3ded4:	add	sl, sl, #4
   3ded8:	add	r9, r9, #4
   3dedc:	add	r6, r6, #1
   3dee0:	add	r5, r5, #4
   3dee4:	add	r4, r4, #4
   3dee8:	ldr	r2, [sp, #16]
   3deec:	ldr	r3, [r2, #4]!
   3def0:	str	r2, [sp, #16]
   3def4:	sub	ip, r3, #1
   3def8:	str	sl, [sp, #24]
   3defc:	str	ip, [sl]
   3df00:	ldr	r2, [sp, #12]
   3df04:	ldr	r3, [r2], #4
   3df08:	str	r2, [sp, #12]
   3df0c:	mov	r0, r3
   3df10:	mov	r7, r9
   3df14:	str	r3, [r9, #4]
   3df18:	cmp	r6, #1
   3df1c:	beq	3deb8 <GetDataSlab+0x1ceac>
   3df20:	mov	r1, r2
   3df24:	mov	r2, r1
   3df28:	ldr	r3, [r1, #-4]!
   3df2c:	mul	ip, r3, ip
   3df30:	ldr	r3, [r2]
   3df34:	mul	r0, r3, r0
   3df38:	cmp	r1, lr
   3df3c:	bne	3df24 <GetDataSlab+0x1cf18>
   3df40:	ldr	r3, [sp, #24]
   3df44:	str	ip, [r3]
   3df48:	str	r0, [r7, #4]
   3df4c:	ldr	r3, [r5]
   3df50:	ldr	r2, [sp, #20]
   3df54:	mul	r3, r3, r2
   3df58:	str	r3, [sp, #20]
   3df5c:	ldr	r3, [r7]
   3df60:	ldr	r2, [r4]
   3df64:	mla	fp, r2, r3, fp
   3df68:	ldr	r3, [sp, #208]	; 0xd0
   3df6c:	cmp	r3, r6
   3df70:	bgt	3ded4 <GetDataSlab+0x1cec8>
   3df74:	ldr	r3, [sp, #8]
   3df78:	add	r6, r3, fp
   3df7c:	ldr	r3, [sp, #28]
   3df80:	cmp	r3, #1
   3df84:	beq	263c0 <GetDataSlab+0x53b4>
   3df88:	ldr	r3, [sp, #20]
   3df8c:	cmp	r3, #0
   3df90:	movle	r3, #0
   3df94:	ble	24fa8 <GetDataSlab+0x3f9c>
   3df98:	mov	r3, #0
   3df9c:	str	r3, [sp, #24]
   3dfa0:	b	26650 <GetDataSlab+0x5644>
   3dfa4:	ldr	r3, [r5]
   3dfa8:	ldr	r2, [sp, #20]
   3dfac:	mul	r3, r3, r2
   3dfb0:	str	r3, [sp, #20]
   3dfb4:	ldr	r3, [r9]
   3dfb8:	ldr	r2, [r4]
   3dfbc:	mla	fp, r2, r3, fp
   3dfc0:	add	sl, sl, #4
   3dfc4:	add	r9, r9, #4
   3dfc8:	add	r6, r6, #1
   3dfcc:	add	r5, r5, #4
   3dfd0:	add	r4, r4, #4
   3dfd4:	ldr	r2, [sp, #16]
   3dfd8:	ldr	r3, [r2, #4]!
   3dfdc:	str	r2, [sp, #16]
   3dfe0:	sub	ip, r3, #1
   3dfe4:	str	sl, [sp, #24]
   3dfe8:	str	ip, [sl]
   3dfec:	ldr	r2, [sp, #12]
   3dff0:	ldr	r3, [r2], #4
   3dff4:	str	r2, [sp, #12]
   3dff8:	mov	r0, r3
   3dffc:	mov	r7, r9
   3e000:	str	r3, [r9, #4]
   3e004:	cmp	r6, #1
   3e008:	beq	3dfa4 <GetDataSlab+0x1cf98>
   3e00c:	mov	r1, r2
   3e010:	mov	r2, r1
   3e014:	ldr	r3, [r1, #-4]!
   3e018:	mul	ip, r3, ip
   3e01c:	ldr	r3, [r2]
   3e020:	mul	r0, r3, r0
   3e024:	cmp	r1, lr
   3e028:	bne	3e010 <GetDataSlab+0x1d004>
   3e02c:	ldr	r3, [sp, #24]
   3e030:	str	ip, [r3]
   3e034:	str	r0, [r7, #4]
   3e038:	ldr	r3, [r5]
   3e03c:	ldr	r2, [sp, #20]
   3e040:	mul	r3, r3, r2
   3e044:	str	r3, [sp, #20]
   3e048:	ldr	r3, [r7]
   3e04c:	ldr	r2, [r4]
   3e050:	mla	fp, r2, r3, fp
   3e054:	ldr	r3, [sp, #208]	; 0xd0
   3e058:	cmp	r3, r6
   3e05c:	bgt	3dfc0 <GetDataSlab+0x1cfb4>
   3e060:	ldr	r3, [sp, #8]
   3e064:	add	r6, r3, fp
   3e068:	ldr	r3, [sp, #28]
   3e06c:	cmp	r3, #1
   3e070:	beq	267b0 <GetDataSlab+0x57a4>
   3e074:	ldr	r3, [sp, #20]
   3e078:	cmp	r3, #0
   3e07c:	movle	r3, #0
   3e080:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e084:	mov	r3, #0
   3e088:	str	r3, [sp, #24]
   3e08c:	b	26a40 <GetDataSlab+0x5a34>
   3e090:	ldr	r3, [r6]
   3e094:	ldr	r2, [sp, #20]
   3e098:	mul	r3, r3, r2
   3e09c:	str	r3, [sp, #20]
   3e0a0:	ldr	r3, [r4]
   3e0a4:	ldr	r2, [r9]
   3e0a8:	mla	fp, r2, r3, fp
   3e0ac:	add	sl, sl, #4
   3e0b0:	add	r9, r9, #4
   3e0b4:	add	r5, r5, #1
   3e0b8:	add	r6, r6, #4
   3e0bc:	add	r4, r4, #4
   3e0c0:	ldr	r2, [sp, #16]
   3e0c4:	ldr	r3, [r2, #4]!
   3e0c8:	str	r2, [sp, #16]
   3e0cc:	sub	ip, r3, #1
   3e0d0:	str	sl, [sp, #24]
   3e0d4:	str	ip, [sl]
   3e0d8:	ldr	r2, [sp, #12]
   3e0dc:	ldr	r3, [r2], #4
   3e0e0:	str	r2, [sp, #12]
   3e0e4:	mov	r0, r3
   3e0e8:	mov	r7, r9
   3e0ec:	str	r3, [r9, #4]
   3e0f0:	cmp	r5, #1
   3e0f4:	beq	3e090 <GetDataSlab+0x1d084>
   3e0f8:	mov	r1, r2
   3e0fc:	mov	r2, r1
   3e100:	ldr	r3, [r1, #-4]!
   3e104:	mul	ip, r3, ip
   3e108:	ldr	r3, [r2]
   3e10c:	mul	r0, r3, r0
   3e110:	cmp	lr, r1
   3e114:	bne	3e0fc <GetDataSlab+0x1d0f0>
   3e118:	ldr	r3, [sp, #24]
   3e11c:	str	ip, [r3]
   3e120:	str	r0, [r7, #4]
   3e124:	ldr	r3, [r6]
   3e128:	ldr	r2, [sp, #20]
   3e12c:	mul	r3, r3, r2
   3e130:	str	r3, [sp, #20]
   3e134:	ldr	r3, [r7]
   3e138:	ldr	r2, [r4]
   3e13c:	mla	fp, r2, r3, fp
   3e140:	ldr	r3, [sp, #208]	; 0xd0
   3e144:	cmp	r3, r5
   3e148:	bgt	3e0ac <GetDataSlab+0x1d0a0>
   3e14c:	ldr	r3, [sp, #8]
   3e150:	add	r7, r3, fp, lsl #3
   3e154:	ldr	r3, [sp, #28]
   3e158:	cmp	r3, #1
   3e15c:	beq	26c18 <GetDataSlab+0x5c0c>
   3e160:	ldr	r3, [sp, #20]
   3e164:	cmp	r3, #0
   3e168:	movgt	r3, #0
   3e16c:	strgt	r3, [sp, #24]
   3e170:	bgt	26e9c <GetDataSlab+0x5e90>
   3e174:	mov	r3, #0
   3e178:	b	24fa8 <GetDataSlab+0x3f9c>
   3e17c:	ldr	r3, [r6]
   3e180:	ldr	r2, [sp, #20]
   3e184:	mul	r3, r3, r2
   3e188:	str	r3, [sp, #20]
   3e18c:	ldr	r3, [r4]
   3e190:	ldr	r2, [r9]
   3e194:	mla	fp, r2, r3, fp
   3e198:	add	sl, sl, #4
   3e19c:	add	r9, r9, #4
   3e1a0:	add	r5, r5, #1
   3e1a4:	add	r6, r6, #4
   3e1a8:	add	r4, r4, #4
   3e1ac:	ldr	r2, [sp, #16]
   3e1b0:	ldr	r3, [r2, #4]!
   3e1b4:	str	r2, [sp, #16]
   3e1b8:	sub	ip, r3, #1
   3e1bc:	str	sl, [sp, #24]
   3e1c0:	str	ip, [sl]
   3e1c4:	ldr	r2, [sp, #12]
   3e1c8:	ldr	r3, [r2], #4
   3e1cc:	str	r2, [sp, #12]
   3e1d0:	mov	r0, r3
   3e1d4:	mov	r7, r9
   3e1d8:	str	r3, [r9, #4]
   3e1dc:	cmp	r5, #1
   3e1e0:	beq	3e17c <GetDataSlab+0x1d170>
   3e1e4:	mov	r1, r2
   3e1e8:	mov	r2, r1
   3e1ec:	ldr	r3, [r1, #-4]!
   3e1f0:	mul	ip, r3, ip
   3e1f4:	ldr	r3, [r2]
   3e1f8:	mul	r0, r3, r0
   3e1fc:	cmp	r1, lr
   3e200:	bne	3e1e8 <GetDataSlab+0x1d1dc>
   3e204:	ldr	r3, [sp, #24]
   3e208:	str	ip, [r3]
   3e20c:	str	r0, [r7, #4]
   3e210:	ldr	r3, [r6]
   3e214:	ldr	r2, [sp, #20]
   3e218:	mul	r3, r3, r2
   3e21c:	str	r3, [sp, #20]
   3e220:	ldr	r3, [r7]
   3e224:	ldr	r2, [r4]
   3e228:	mla	fp, r2, r3, fp
   3e22c:	ldr	r3, [sp, #208]	; 0xd0
   3e230:	cmp	r3, r5
   3e234:	bgt	3e198 <GetDataSlab+0x1d18c>
   3e238:	ldr	r3, [sp, #8]
   3e23c:	add	r7, r3, fp, lsl #3
   3e240:	ldr	r3, [sp, #28]
   3e244:	cmp	r3, #1
   3e248:	beq	26f8c <GetDataSlab+0x5f80>
   3e24c:	ldr	r3, [sp, #20]
   3e250:	cmp	r3, #0
   3e254:	movle	r3, #0
   3e258:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e25c:	mov	r3, #0
   3e260:	str	r3, [sp, #24]
   3e264:	b	27218 <GetDataSlab+0x620c>
   3e268:	ldr	r3, [r5]
   3e26c:	ldr	r2, [sp, #20]
   3e270:	mul	r3, r3, r2
   3e274:	str	r3, [sp, #20]
   3e278:	ldr	r3, [r4]
   3e27c:	ldr	r2, [r9]
   3e280:	mla	fp, r2, r3, fp
   3e284:	add	sl, sl, #4
   3e288:	add	r9, r9, #4
   3e28c:	add	r6, r6, #1
   3e290:	add	r5, r5, #4
   3e294:	add	r4, r4, #4
   3e298:	ldr	r2, [sp, #16]
   3e29c:	ldr	r3, [r2, #4]!
   3e2a0:	str	r2, [sp, #16]
   3e2a4:	sub	ip, r3, #1
   3e2a8:	str	sl, [sp, #24]
   3e2ac:	str	ip, [sl]
   3e2b0:	ldr	r2, [sp, #12]
   3e2b4:	ldr	r3, [r2], #4
   3e2b8:	str	r2, [sp, #12]
   3e2bc:	mov	r0, r3
   3e2c0:	mov	r7, r9
   3e2c4:	str	r3, [r9, #4]
   3e2c8:	cmp	r6, #1
   3e2cc:	beq	3e268 <GetDataSlab+0x1d25c>
   3e2d0:	mov	r1, r2
   3e2d4:	mov	r2, r1
   3e2d8:	ldr	r3, [r1, #-4]!
   3e2dc:	mul	ip, r3, ip
   3e2e0:	ldr	r3, [r2]
   3e2e4:	mul	r0, r3, r0
   3e2e8:	cmp	lr, r1
   3e2ec:	bne	3e2d4 <GetDataSlab+0x1d2c8>
   3e2f0:	ldr	r3, [sp, #24]
   3e2f4:	str	ip, [r3]
   3e2f8:	str	r0, [r7, #4]
   3e2fc:	ldr	r3, [r5]
   3e300:	ldr	r2, [sp, #20]
   3e304:	mul	r3, r3, r2
   3e308:	str	r3, [sp, #20]
   3e30c:	ldr	r3, [r7]
   3e310:	ldr	r2, [r4]
   3e314:	mla	fp, r2, r3, fp
   3e318:	ldr	r3, [sp, #208]	; 0xd0
   3e31c:	cmp	r3, r6
   3e320:	bgt	3e284 <GetDataSlab+0x1d278>
   3e324:	ldr	r3, [sp, #8]
   3e328:	add	r5, r3, fp, lsl #3
   3e32c:	ldr	r3, [sp, #28]
   3e330:	cmp	r3, #1
   3e334:	beq	273a8 <GetDataSlab+0x639c>
   3e338:	ldr	r3, [sp, #20]
   3e33c:	cmp	r3, #0
   3e340:	movle	r3, #0
   3e344:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e348:	mov	r3, #0
   3e34c:	str	r3, [sp, #24]
   3e350:	b	27634 <GetDataSlab+0x6628>
   3e354:	ldr	r3, [r5]
   3e358:	ldr	r2, [sp, #20]
   3e35c:	mul	r3, r3, r2
   3e360:	str	r3, [sp, #20]
   3e364:	ldr	r3, [r4]
   3e368:	ldr	r2, [r9]
   3e36c:	mla	fp, r2, r3, fp
   3e370:	add	sl, sl, #4
   3e374:	add	r9, r9, #4
   3e378:	add	r6, r6, #1
   3e37c:	add	r5, r5, #4
   3e380:	add	r4, r4, #4
   3e384:	ldr	r2, [sp, #16]
   3e388:	ldr	r3, [r2, #4]!
   3e38c:	str	r2, [sp, #16]
   3e390:	sub	ip, r3, #1
   3e394:	str	sl, [sp, #24]
   3e398:	str	ip, [sl]
   3e39c:	ldr	r2, [sp, #12]
   3e3a0:	ldr	r3, [r2], #4
   3e3a4:	str	r2, [sp, #12]
   3e3a8:	mov	r0, r3
   3e3ac:	mov	r7, r9
   3e3b0:	str	r3, [r9, #4]
   3e3b4:	cmp	r6, #1
   3e3b8:	beq	3e354 <GetDataSlab+0x1d348>
   3e3bc:	mov	r1, r2
   3e3c0:	mov	r2, r1
   3e3c4:	ldr	r3, [r1, #-4]!
   3e3c8:	mul	ip, r3, ip
   3e3cc:	ldr	r3, [r2]
   3e3d0:	mul	r0, r3, r0
   3e3d4:	cmp	r1, lr
   3e3d8:	bne	3e3c0 <GetDataSlab+0x1d3b4>
   3e3dc:	ldr	r3, [sp, #24]
   3e3e0:	str	ip, [r3]
   3e3e4:	str	r0, [r7, #4]
   3e3e8:	ldr	r3, [r5]
   3e3ec:	ldr	r2, [sp, #20]
   3e3f0:	mul	r3, r3, r2
   3e3f4:	str	r3, [sp, #20]
   3e3f8:	ldr	r3, [r7]
   3e3fc:	ldr	r2, [r4]
   3e400:	mla	fp, r2, r3, fp
   3e404:	ldr	r3, [sp, #208]	; 0xd0
   3e408:	cmp	r3, r6
   3e40c:	bgt	3e370 <GetDataSlab+0x1d364>
   3e410:	ldr	r3, [sp, #8]
   3e414:	add	r5, r3, fp, lsl #2
   3e418:	ldr	r3, [sp, #28]
   3e41c:	cmp	r3, #1
   3e420:	beq	27790 <GetDataSlab+0x6784>
   3e424:	ldr	r3, [sp, #20]
   3e428:	cmp	r3, #0
   3e42c:	movle	r3, #0
   3e430:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e434:	mov	r3, #0
   3e438:	str	r3, [sp, #24]
   3e43c:	b	27a18 <GetDataSlab+0x6a0c>
   3e440:	ldr	r3, [r5]
   3e444:	ldr	r2, [sp, #20]
   3e448:	mul	r3, r3, r2
   3e44c:	str	r3, [sp, #20]
   3e450:	ldr	r3, [r9]
   3e454:	ldr	r2, [r4]
   3e458:	mla	fp, r2, r3, fp
   3e45c:	add	sl, sl, #4
   3e460:	add	r9, r9, #4
   3e464:	add	r6, r6, #1
   3e468:	add	r5, r5, #4
   3e46c:	add	r4, r4, #4
   3e470:	ldr	r2, [sp, #16]
   3e474:	ldr	r3, [r2, #4]!
   3e478:	str	r2, [sp, #16]
   3e47c:	sub	ip, r3, #1
   3e480:	str	sl, [sp, #24]
   3e484:	str	ip, [sl]
   3e488:	ldr	r2, [sp, #12]
   3e48c:	ldr	r3, [r2], #4
   3e490:	str	r2, [sp, #12]
   3e494:	mov	r0, r3
   3e498:	mov	r7, r9
   3e49c:	str	r3, [r9, #4]
   3e4a0:	cmp	r6, #1
   3e4a4:	beq	3e440 <GetDataSlab+0x1d434>
   3e4a8:	mov	r1, r2
   3e4ac:	mov	r2, r1
   3e4b0:	ldr	r3, [r1, #-4]!
   3e4b4:	mul	ip, r3, ip
   3e4b8:	ldr	r3, [r2]
   3e4bc:	mul	r0, r3, r0
   3e4c0:	cmp	r1, lr
   3e4c4:	bne	3e4ac <GetDataSlab+0x1d4a0>
   3e4c8:	ldr	r3, [sp, #24]
   3e4cc:	str	ip, [r3]
   3e4d0:	str	r0, [r7, #4]
   3e4d4:	ldr	r3, [r5]
   3e4d8:	ldr	r2, [sp, #20]
   3e4dc:	mul	r3, r3, r2
   3e4e0:	str	r3, [sp, #20]
   3e4e4:	ldr	r3, [r7]
   3e4e8:	ldr	r2, [r4]
   3e4ec:	mla	fp, r2, r3, fp
   3e4f0:	ldr	r3, [sp, #208]	; 0xd0
   3e4f4:	cmp	r3, r6
   3e4f8:	bgt	3e45c <GetDataSlab+0x1d450>
   3e4fc:	ldr	r3, [sp, #8]
   3e500:	add	r5, r3, fp, lsl #2
   3e504:	ldr	r3, [sp, #28]
   3e508:	cmp	r3, #1
   3e50c:	beq	27b70 <GetDataSlab+0x6b64>
   3e510:	ldr	r3, [sp, #20]
   3e514:	cmp	r3, #0
   3e518:	movle	r3, #0
   3e51c:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e520:	mov	r3, #0
   3e524:	str	r3, [sp, #24]
   3e528:	b	27e00 <GetDataSlab+0x6df4>
   3e52c:	ldr	r3, [r5]
   3e530:	ldr	r2, [sp, #20]
   3e534:	mul	r3, r3, r2
   3e538:	str	r3, [sp, #20]
   3e53c:	ldr	r3, [r4]
   3e540:	ldr	r2, [r9]
   3e544:	mla	fp, r2, r3, fp
   3e548:	add	sl, sl, #4
   3e54c:	add	r9, r9, #4
   3e550:	add	r6, r6, #1
   3e554:	add	r5, r5, #4
   3e558:	add	r4, r4, #4
   3e55c:	ldr	r2, [sp, #16]
   3e560:	ldr	r3, [r2, #4]!
   3e564:	str	r2, [sp, #16]
   3e568:	sub	ip, r3, #1
   3e56c:	str	sl, [sp, #24]
   3e570:	str	ip, [sl]
   3e574:	ldr	r2, [sp, #12]
   3e578:	ldr	r3, [r2], #4
   3e57c:	str	r2, [sp, #12]
   3e580:	mov	r0, r3
   3e584:	mov	r7, r9
   3e588:	str	r3, [r9, #4]
   3e58c:	cmp	r6, #1
   3e590:	beq	3e52c <GetDataSlab+0x1d520>
   3e594:	mov	r1, r2
   3e598:	mov	r2, r1
   3e59c:	ldr	r3, [r1, #-4]!
   3e5a0:	mul	ip, r3, ip
   3e5a4:	ldr	r3, [r2]
   3e5a8:	mul	r0, r3, r0
   3e5ac:	cmp	r1, lr
   3e5b0:	bne	3e598 <GetDataSlab+0x1d58c>
   3e5b4:	ldr	r3, [sp, #24]
   3e5b8:	str	ip, [r3]
   3e5bc:	str	r0, [r7, #4]
   3e5c0:	ldr	r3, [r5]
   3e5c4:	ldr	r2, [sp, #20]
   3e5c8:	mul	r3, r3, r2
   3e5cc:	str	r3, [sp, #20]
   3e5d0:	ldr	r3, [r7]
   3e5d4:	ldr	r2, [r4]
   3e5d8:	mla	fp, r2, r3, fp
   3e5dc:	ldr	r3, [sp, #208]	; 0xd0
   3e5e0:	cmp	r3, r6
   3e5e4:	bgt	3e548 <GetDataSlab+0x1d53c>
   3e5e8:	ldr	r3, [sp, #8]
   3e5ec:	add	r5, r3, fp, lsl #2
   3e5f0:	ldr	r3, [sp, #28]
   3e5f4:	cmp	r3, #1
   3e5f8:	beq	27f5c <GetDataSlab+0x6f50>
   3e5fc:	ldr	r3, [sp, #20]
   3e600:	cmp	r3, #0
   3e604:	movle	r3, #0
   3e608:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e60c:	mov	r3, #0
   3e610:	str	r3, [sp, #24]
   3e614:	b	281ec <GetDataSlab+0x71e0>
   3e618:	ldr	r3, [r5]
   3e61c:	ldr	r2, [sp, #20]
   3e620:	mul	r3, r3, r2
   3e624:	str	r3, [sp, #20]
   3e628:	ldr	r3, [r9]
   3e62c:	ldr	r2, [r4]
   3e630:	mla	fp, r2, r3, fp
   3e634:	add	sl, sl, #4
   3e638:	add	r9, r9, #4
   3e63c:	add	r6, r6, #1
   3e640:	add	r5, r5, #4
   3e644:	add	r4, r4, #4
   3e648:	ldr	r2, [sp, #16]
   3e64c:	ldr	r3, [r2, #4]!
   3e650:	str	r2, [sp, #16]
   3e654:	sub	ip, r3, #1
   3e658:	str	sl, [sp, #24]
   3e65c:	str	ip, [sl]
   3e660:	ldr	r2, [sp, #12]
   3e664:	ldr	r3, [r2], #4
   3e668:	str	r2, [sp, #12]
   3e66c:	mov	r0, r3
   3e670:	mov	r7, r9
   3e674:	str	r3, [r9, #4]
   3e678:	cmp	r6, #1
   3e67c:	beq	3e618 <GetDataSlab+0x1d60c>
   3e680:	mov	r1, r2
   3e684:	mov	r2, r1
   3e688:	ldr	r3, [r1, #-4]!
   3e68c:	mul	ip, r3, ip
   3e690:	ldr	r3, [r2]
   3e694:	mul	r0, r3, r0
   3e698:	cmp	lr, r1
   3e69c:	bne	3e684 <GetDataSlab+0x1d678>
   3e6a0:	ldr	r3, [sp, #24]
   3e6a4:	str	ip, [r3]
   3e6a8:	str	r0, [r7, #4]
   3e6ac:	ldr	r3, [r5]
   3e6b0:	ldr	r2, [sp, #20]
   3e6b4:	mul	r3, r3, r2
   3e6b8:	str	r3, [sp, #20]
   3e6bc:	ldr	r3, [r7]
   3e6c0:	ldr	r2, [r4]
   3e6c4:	mla	fp, r2, r3, fp
   3e6c8:	ldr	r3, [sp, #208]	; 0xd0
   3e6cc:	cmp	r3, r6
   3e6d0:	bgt	3e634 <GetDataSlab+0x1d628>
   3e6d4:	ldr	r3, [sp, #8]
   3e6d8:	add	r6, r3, fp, lsl #1
   3e6dc:	ldr	r3, [sp, #28]
   3e6e0:	cmp	r3, #1
   3e6e4:	beq	28348 <GetDataSlab+0x733c>
   3e6e8:	ldr	r3, [sp, #20]
   3e6ec:	cmp	r3, #0
   3e6f0:	movle	r3, #0
   3e6f4:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e6f8:	mov	r3, #0
   3e6fc:	str	r3, [sp, #24]
   3e700:	b	285d8 <GetDataSlab+0x75cc>
   3e704:	ldr	r3, [r5]
   3e708:	ldr	r2, [sp, #20]
   3e70c:	mul	r3, r3, r2
   3e710:	str	r3, [sp, #20]
   3e714:	ldr	r3, [r4]
   3e718:	ldr	r2, [r9]
   3e71c:	mla	fp, r2, r3, fp
   3e720:	add	sl, sl, #4
   3e724:	add	r9, r9, #4
   3e728:	add	r6, r6, #1
   3e72c:	add	r5, r5, #4
   3e730:	add	r4, r4, #4
   3e734:	ldr	r2, [sp, #16]
   3e738:	ldr	r3, [r2, #4]!
   3e73c:	str	r2, [sp, #16]
   3e740:	sub	ip, r3, #1
   3e744:	str	sl, [sp, #24]
   3e748:	str	ip, [sl]
   3e74c:	ldr	r2, [sp, #12]
   3e750:	ldr	r3, [r2], #4
   3e754:	str	r2, [sp, #12]
   3e758:	mov	r0, r3
   3e75c:	mov	r7, r9
   3e760:	str	r3, [r9, #4]
   3e764:	cmp	r6, #1
   3e768:	beq	3e704 <GetDataSlab+0x1d6f8>
   3e76c:	mov	r1, r2
   3e770:	mov	r2, r1
   3e774:	ldr	r3, [r1, #-4]!
   3e778:	mul	ip, r3, ip
   3e77c:	ldr	r3, [r2]
   3e780:	mul	r0, r3, r0
   3e784:	cmp	r1, lr
   3e788:	bne	3e770 <GetDataSlab+0x1d764>
   3e78c:	ldr	r3, [sp, #24]
   3e790:	str	ip, [r3]
   3e794:	str	r0, [r7, #4]
   3e798:	ldr	r3, [r5]
   3e79c:	ldr	r2, [sp, #20]
   3e7a0:	mul	r3, r3, r2
   3e7a4:	str	r3, [sp, #20]
   3e7a8:	ldr	r3, [r7]
   3e7ac:	ldr	r2, [r4]
   3e7b0:	mla	fp, r2, r3, fp
   3e7b4:	ldr	r3, [sp, #208]	; 0xd0
   3e7b8:	cmp	r3, r6
   3e7bc:	bgt	3e720 <GetDataSlab+0x1d714>
   3e7c0:	ldr	r3, [sp, #8]
   3e7c4:	add	r6, r3, fp, lsl #1
   3e7c8:	ldr	r3, [sp, #28]
   3e7cc:	cmp	r3, #1
   3e7d0:	beq	28738 <GetDataSlab+0x772c>
   3e7d4:	ldr	r3, [sp, #20]
   3e7d8:	cmp	r3, #0
   3e7dc:	movle	r3, #0
   3e7e0:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e7e4:	mov	r3, #0
   3e7e8:	str	r3, [sp, #24]
   3e7ec:	b	289c8 <GetDataSlab+0x79bc>
   3e7f0:	ldr	r3, [r5]
   3e7f4:	ldr	r2, [sp, #20]
   3e7f8:	mul	r3, r3, r2
   3e7fc:	str	r3, [sp, #20]
   3e800:	ldr	r3, [r4]
   3e804:	ldr	r2, [r9]
   3e808:	mla	fp, r2, r3, fp
   3e80c:	add	sl, sl, #4
   3e810:	add	r9, r9, #4
   3e814:	add	r6, r6, #1
   3e818:	add	r5, r5, #4
   3e81c:	add	r4, r4, #4
   3e820:	ldr	r2, [sp, #16]
   3e824:	ldr	r3, [r2, #4]!
   3e828:	str	r2, [sp, #16]
   3e82c:	sub	ip, r3, #1
   3e830:	str	sl, [sp, #24]
   3e834:	str	ip, [sl]
   3e838:	ldr	r2, [sp, #12]
   3e83c:	ldr	r3, [r2], #4
   3e840:	str	r2, [sp, #12]
   3e844:	mov	r0, r3
   3e848:	mov	r7, r9
   3e84c:	str	r3, [r9, #4]
   3e850:	cmp	r6, #1
   3e854:	beq	3e7f0 <GetDataSlab+0x1d7e4>
   3e858:	mov	r1, r2
   3e85c:	mov	r2, r1
   3e860:	ldr	r3, [r1, #-4]!
   3e864:	mul	ip, r3, ip
   3e868:	ldr	r3, [r2]
   3e86c:	mul	r0, r3, r0
   3e870:	cmp	lr, r1
   3e874:	bne	3e85c <GetDataSlab+0x1d850>
   3e878:	ldr	r3, [sp, #24]
   3e87c:	str	ip, [r3]
   3e880:	str	r0, [r7, #4]
   3e884:	ldr	r3, [r5]
   3e888:	ldr	r2, [sp, #20]
   3e88c:	mul	r3, r3, r2
   3e890:	str	r3, [sp, #20]
   3e894:	ldr	r3, [r7]
   3e898:	ldr	r2, [r4]
   3e89c:	mla	fp, r2, r3, fp
   3e8a0:	ldr	r3, [sp, #208]	; 0xd0
   3e8a4:	cmp	r3, r6
   3e8a8:	bgt	3e80c <GetDataSlab+0x1d800>
   3e8ac:	ldr	r3, [sp, #8]
   3e8b0:	add	r6, r3, fp
   3e8b4:	ldr	r3, [sp, #28]
   3e8b8:	cmp	r3, #1
   3e8bc:	beq	28b28 <GetDataSlab+0x7b1c>
   3e8c0:	ldr	r3, [sp, #20]
   3e8c4:	cmp	r3, #0
   3e8c8:	movle	r3, #0
   3e8cc:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e8d0:	mov	r3, #0
   3e8d4:	str	r3, [sp, #24]
   3e8d8:	b	28db8 <GetDataSlab+0x7dac>
   3e8dc:	ldr	r3, [r5]
   3e8e0:	ldr	r2, [sp, #20]
   3e8e4:	mul	r3, r3, r2
   3e8e8:	str	r3, [sp, #20]
   3e8ec:	ldr	r3, [r9]
   3e8f0:	ldr	r2, [r4]
   3e8f4:	mla	fp, r2, r3, fp
   3e8f8:	add	sl, sl, #4
   3e8fc:	add	r9, r9, #4
   3e900:	add	r6, r6, #1
   3e904:	add	r5, r5, #4
   3e908:	add	r4, r4, #4
   3e90c:	ldr	r2, [sp, #16]
   3e910:	ldr	r3, [r2, #4]!
   3e914:	str	r2, [sp, #16]
   3e918:	sub	ip, r3, #1
   3e91c:	str	sl, [sp, #24]
   3e920:	str	ip, [sl]
   3e924:	ldr	r2, [sp, #12]
   3e928:	ldr	r3, [r2], #4
   3e92c:	str	r2, [sp, #12]
   3e930:	mov	r0, r3
   3e934:	mov	r7, r9
   3e938:	str	r3, [r9, #4]
   3e93c:	cmp	r6, #1
   3e940:	beq	3e8dc <GetDataSlab+0x1d8d0>
   3e944:	mov	r1, r2
   3e948:	mov	r2, r1
   3e94c:	ldr	r3, [r1, #-4]!
   3e950:	mul	ip, r3, ip
   3e954:	ldr	r3, [r2]
   3e958:	mul	r0, r3, r0
   3e95c:	cmp	r1, lr
   3e960:	bne	3e948 <GetDataSlab+0x1d93c>
   3e964:	ldr	r3, [sp, #24]
   3e968:	str	ip, [r3]
   3e96c:	str	r0, [r7, #4]
   3e970:	ldr	r3, [r5]
   3e974:	ldr	r2, [sp, #20]
   3e978:	mul	r3, r3, r2
   3e97c:	str	r3, [sp, #20]
   3e980:	ldr	r3, [r7]
   3e984:	ldr	r2, [r4]
   3e988:	mla	fp, r2, r3, fp
   3e98c:	ldr	r3, [sp, #208]	; 0xd0
   3e990:	cmp	r3, r6
   3e994:	bgt	3e8f8 <GetDataSlab+0x1d8ec>
   3e998:	ldr	r3, [sp, #8]
   3e99c:	add	r6, r3, fp
   3e9a0:	ldr	r3, [sp, #28]
   3e9a4:	cmp	r3, #1
   3e9a8:	beq	28f18 <GetDataSlab+0x7f0c>
   3e9ac:	ldr	r3, [sp, #20]
   3e9b0:	cmp	r3, #0
   3e9b4:	movle	r3, #0
   3e9b8:	ble	24fa8 <GetDataSlab+0x3f9c>
   3e9bc:	mov	r3, #0
   3e9c0:	str	r3, [sp, #24]
   3e9c4:	b	291a8 <GetDataSlab+0x819c>
   3e9c8:	ldr	r3, [r6]
   3e9cc:	ldr	r2, [sp, #20]
   3e9d0:	mul	r3, r3, r2
   3e9d4:	str	r3, [sp, #20]
   3e9d8:	ldr	r3, [r4]
   3e9dc:	ldr	r2, [r9]
   3e9e0:	mla	fp, r2, r3, fp
   3e9e4:	add	sl, sl, #4
   3e9e8:	add	r9, r9, #4
   3e9ec:	add	r5, r5, #1
   3e9f0:	add	r6, r6, #4
   3e9f4:	add	r4, r4, #4
   3e9f8:	ldr	r2, [sp, #16]
   3e9fc:	ldr	r3, [r2, #4]!
   3ea00:	str	r2, [sp, #16]
   3ea04:	sub	ip, r3, #1
   3ea08:	str	sl, [sp, #24]
   3ea0c:	str	ip, [sl]
   3ea10:	ldr	r2, [sp, #12]
   3ea14:	ldr	r3, [r2], #4
   3ea18:	str	r2, [sp, #12]
   3ea1c:	mov	r0, r3
   3ea20:	mov	r7, r9
   3ea24:	str	r3, [r9, #4]
   3ea28:	cmp	r5, #1
   3ea2c:	beq	3e9c8 <GetDataSlab+0x1d9bc>
   3ea30:	mov	r1, r2
   3ea34:	mov	r2, r1
   3ea38:	ldr	r3, [r1, #-4]!
   3ea3c:	mul	ip, r3, ip
   3ea40:	ldr	r3, [r2]
   3ea44:	mul	r0, r3, r0
   3ea48:	cmp	r1, lr
   3ea4c:	bne	3ea34 <GetDataSlab+0x1da28>
   3ea50:	ldr	r3, [sp, #24]
   3ea54:	str	ip, [r3]
   3ea58:	str	r0, [r7, #4]
   3ea5c:	ldr	r3, [r6]
   3ea60:	ldr	r2, [sp, #20]
   3ea64:	mul	r3, r3, r2
   3ea68:	str	r3, [sp, #20]
   3ea6c:	ldr	r3, [r7]
   3ea70:	ldr	r2, [r4]
   3ea74:	mla	fp, r2, r3, fp
   3ea78:	ldr	r3, [sp, #208]	; 0xd0
   3ea7c:	cmp	r3, r5
   3ea80:	bgt	3e9e4 <GetDataSlab+0x1d9d8>
   3ea84:	ldr	r3, [sp, #8]
   3ea88:	add	r7, r3, fp, lsl #3
   3ea8c:	ldr	r3, [sp, #28]
   3ea90:	cmp	r3, #1
   3ea94:	beq	29380 <GetDataSlab+0x8374>
   3ea98:	ldr	r3, [sp, #20]
   3ea9c:	cmp	r3, #0
   3eaa0:	movgt	r3, #0
   3eaa4:	strgt	r3, [sp, #24]
   3eaa8:	bgt	29604 <GetDataSlab+0x85f8>
   3eaac:	mov	r3, #0
   3eab0:	b	24fa8 <GetDataSlab+0x3f9c>
   3eab4:	ldr	r3, [r6]
   3eab8:	ldr	r2, [sp, #20]
   3eabc:	mul	r3, r3, r2
   3eac0:	str	r3, [sp, #20]
   3eac4:	ldr	r3, [r4]
   3eac8:	ldr	r2, [r9]
   3eacc:	mla	fp, r2, r3, fp
   3ead0:	add	sl, sl, #4
   3ead4:	add	r9, r9, #4
   3ead8:	add	r5, r5, #1
   3eadc:	add	r6, r6, #4
   3eae0:	add	r4, r4, #4
   3eae4:	ldr	r2, [sp, #16]
   3eae8:	ldr	r3, [r2, #4]!
   3eaec:	str	r2, [sp, #16]
   3eaf0:	sub	ip, r3, #1
   3eaf4:	str	sl, [sp, #24]
   3eaf8:	str	ip, [sl]
   3eafc:	ldr	r2, [sp, #12]
   3eb00:	ldr	r3, [r2], #4
   3eb04:	str	r2, [sp, #12]
   3eb08:	mov	r0, r3
   3eb0c:	mov	r7, r9
   3eb10:	str	r3, [r9, #4]
   3eb14:	cmp	r5, #1
   3eb18:	beq	3eab4 <GetDataSlab+0x1daa8>
   3eb1c:	mov	r1, r2
   3eb20:	mov	r2, r1
   3eb24:	ldr	r3, [r1, #-4]!
   3eb28:	mul	ip, r3, ip
   3eb2c:	ldr	r3, [r2]
   3eb30:	mul	r0, r3, r0
   3eb34:	cmp	lr, r1
   3eb38:	bne	3eb20 <GetDataSlab+0x1db14>
   3eb3c:	ldr	r3, [sp, #24]
   3eb40:	str	ip, [r3]
   3eb44:	str	r0, [r7, #4]
   3eb48:	ldr	r3, [r6]
   3eb4c:	ldr	r2, [sp, #20]
   3eb50:	mul	r3, r3, r2
   3eb54:	str	r3, [sp, #20]
   3eb58:	ldr	r3, [r7]
   3eb5c:	ldr	r2, [r4]
   3eb60:	mla	fp, r2, r3, fp
   3eb64:	ldr	r3, [sp, #208]	; 0xd0
   3eb68:	cmp	r3, r5
   3eb6c:	bgt	3ead0 <GetDataSlab+0x1dac4>
   3eb70:	ldr	r3, [sp, #8]
   3eb74:	add	r7, r3, fp, lsl #3
   3eb78:	ldr	r3, [sp, #28]
   3eb7c:	cmp	r3, #1
   3eb80:	beq	296f4 <GetDataSlab+0x86e8>
   3eb84:	ldr	r3, [sp, #20]
   3eb88:	cmp	r3, #0
   3eb8c:	movle	r3, #0
   3eb90:	ble	24fa8 <GetDataSlab+0x3f9c>
   3eb94:	mov	r3, #0
   3eb98:	str	r3, [sp, #24]
   3eb9c:	b	29980 <GetDataSlab+0x8974>
   3eba0:	ldr	r3, [r5]
   3eba4:	ldr	r2, [sp, #20]
   3eba8:	mul	r3, r3, r2
   3ebac:	str	r3, [sp, #20]
   3ebb0:	ldr	r3, [r4]
   3ebb4:	ldr	r2, [r9]
   3ebb8:	mla	fp, r2, r3, fp
   3ebbc:	add	sl, sl, #4
   3ebc0:	add	r9, r9, #4
   3ebc4:	add	r6, r6, #1
   3ebc8:	add	r5, r5, #4
   3ebcc:	add	r4, r4, #4
   3ebd0:	ldr	r2, [sp, #16]
   3ebd4:	ldr	r3, [r2, #4]!
   3ebd8:	str	r2, [sp, #16]
   3ebdc:	sub	ip, r3, #1
   3ebe0:	str	sl, [sp, #24]
   3ebe4:	str	ip, [sl]
   3ebe8:	ldr	r2, [sp, #12]
   3ebec:	ldr	r3, [r2], #4
   3ebf0:	str	r2, [sp, #12]
   3ebf4:	mov	r0, r3
   3ebf8:	mov	r7, r9
   3ebfc:	str	r3, [r9, #4]
   3ec00:	cmp	r6, #1
   3ec04:	beq	3eba0 <GetDataSlab+0x1db94>
   3ec08:	mov	r1, r2
   3ec0c:	mov	r2, r1
   3ec10:	ldr	r3, [r1, #-4]!
   3ec14:	mul	ip, r3, ip
   3ec18:	ldr	r3, [r2]
   3ec1c:	mul	r0, r3, r0
   3ec20:	cmp	r1, lr
   3ec24:	bne	3ec0c <GetDataSlab+0x1dc00>
   3ec28:	ldr	r3, [sp, #24]
   3ec2c:	str	ip, [r3]
   3ec30:	str	r0, [r7, #4]
   3ec34:	ldr	r3, [r5]
   3ec38:	ldr	r2, [sp, #20]
   3ec3c:	mul	r3, r3, r2
   3ec40:	str	r3, [sp, #20]
   3ec44:	ldr	r3, [r7]
   3ec48:	ldr	r2, [r4]
   3ec4c:	mla	fp, r2, r3, fp
   3ec50:	ldr	r3, [sp, #208]	; 0xd0
   3ec54:	cmp	r3, r6
   3ec58:	bgt	3ebbc <GetDataSlab+0x1dbb0>
   3ec5c:	ldr	r3, [sp, #8]
   3ec60:	add	r7, r3, fp, lsl #3
   3ec64:	ldr	r3, [sp, #28]
   3ec68:	cmp	r3, #1
   3ec6c:	beq	29b10 <GetDataSlab+0x8b04>
   3ec70:	ldr	r3, [sp, #20]
   3ec74:	cmp	r3, #0
   3ec78:	movle	r3, #0
   3ec7c:	ble	24fa8 <GetDataSlab+0x3f9c>
   3ec80:	mov	r3, #0
   3ec84:	str	r3, [sp, #24]
   3ec88:	b	29d9c <GetDataSlab+0x8d90>
   3ec8c:	ldr	r3, [r5]
   3ec90:	ldr	r2, [sp, #20]
   3ec94:	mul	r3, r3, r2
   3ec98:	str	r3, [sp, #20]
   3ec9c:	ldr	r3, [r4]
   3eca0:	ldr	r2, [r9]
   3eca4:	mla	fp, r2, r3, fp
   3eca8:	add	sl, sl, #4
   3ecac:	add	r9, r9, #4
   3ecb0:	add	r6, r6, #1
   3ecb4:	add	r5, r5, #4
   3ecb8:	add	r4, r4, #4
   3ecbc:	ldr	r2, [sp, #16]
   3ecc0:	ldr	r3, [r2, #4]!
   3ecc4:	str	r2, [sp, #16]
   3ecc8:	sub	ip, r3, #1
   3eccc:	str	sl, [sp, #24]
   3ecd0:	str	ip, [sl]
   3ecd4:	ldr	r2, [sp, #12]
   3ecd8:	ldr	r3, [r2], #4
   3ecdc:	str	r2, [sp, #12]
   3ece0:	mov	r0, r3
   3ece4:	mov	r7, r9
   3ece8:	str	r3, [r9, #4]
   3ecec:	cmp	r6, #1
   3ecf0:	beq	3ec8c <GetDataSlab+0x1dc80>
   3ecf4:	mov	r1, r2
   3ecf8:	mov	r2, r1
   3ecfc:	ldr	r3, [r1, #-4]!
   3ed00:	mul	ip, r3, ip
   3ed04:	ldr	r3, [r2]
   3ed08:	mul	r0, r3, r0
   3ed0c:	cmp	r1, lr
   3ed10:	bne	3ecf8 <GetDataSlab+0x1dcec>
   3ed14:	ldr	r3, [sp, #24]
   3ed18:	str	ip, [r3]
   3ed1c:	str	r0, [r7, #4]
   3ed20:	ldr	r3, [r5]
   3ed24:	ldr	r2, [sp, #20]
   3ed28:	mul	r3, r3, r2
   3ed2c:	str	r3, [sp, #20]
   3ed30:	ldr	r3, [r7]
   3ed34:	ldr	r2, [r4]
   3ed38:	mla	fp, r2, r3, fp
   3ed3c:	ldr	r3, [sp, #208]	; 0xd0
   3ed40:	cmp	r3, r6
   3ed44:	bgt	3eca8 <GetDataSlab+0x1dc9c>
   3ed48:	ldr	r3, [sp, #8]
   3ed4c:	add	r7, r3, fp, lsl #2
   3ed50:	ldr	r3, [sp, #28]
   3ed54:	cmp	r3, #1
   3ed58:	beq	29ef8 <GetDataSlab+0x8eec>
   3ed5c:	ldr	r3, [sp, #20]
   3ed60:	cmp	r3, #0
   3ed64:	movle	r3, #0
   3ed68:	ble	24fa8 <GetDataSlab+0x3f9c>
   3ed6c:	mov	r3, #0
   3ed70:	str	r3, [sp, #24]
   3ed74:	b	2a184 <GetDataSlab+0x9178>
   3ed78:	ldr	r3, [r5]
   3ed7c:	ldr	r2, [sp, #20]
   3ed80:	mul	r3, r3, r2
   3ed84:	str	r3, [sp, #20]
   3ed88:	ldr	r3, [r9]
   3ed8c:	ldr	r2, [r4]
   3ed90:	mla	fp, r2, r3, fp
   3ed94:	add	sl, sl, #4
   3ed98:	add	r9, r9, #4
   3ed9c:	add	r6, r6, #1
   3eda0:	add	r5, r5, #4
   3eda4:	add	r4, r4, #4
   3eda8:	ldr	r2, [sp, #16]
   3edac:	ldr	r3, [r2, #4]!
   3edb0:	str	r2, [sp, #16]
   3edb4:	sub	ip, r3, #1
   3edb8:	str	sl, [sp, #24]
   3edbc:	str	ip, [sl]
   3edc0:	ldr	r2, [sp, #12]
   3edc4:	ldr	r3, [r2], #4
   3edc8:	str	r2, [sp, #12]
   3edcc:	mov	r0, r3
   3edd0:	mov	r7, r9
   3edd4:	str	r3, [r9, #4]
   3edd8:	cmp	r6, #1
   3eddc:	beq	3ed78 <GetDataSlab+0x1dd6c>
   3ede0:	mov	r1, r2
   3ede4:	mov	r2, r1
   3ede8:	ldr	r3, [r1, #-4]!
   3edec:	mul	ip, r3, ip
   3edf0:	ldr	r3, [r2]
   3edf4:	mul	r0, r3, r0
   3edf8:	cmp	r1, lr
   3edfc:	bne	3ede4 <GetDataSlab+0x1ddd8>
   3ee00:	ldr	r3, [sp, #24]
   3ee04:	str	ip, [r3]
   3ee08:	str	r0, [r7, #4]
   3ee0c:	ldr	r3, [r5]
   3ee10:	ldr	r2, [sp, #20]
   3ee14:	mul	r3, r3, r2
   3ee18:	str	r3, [sp, #20]
   3ee1c:	ldr	r3, [r7]
   3ee20:	ldr	r2, [r4]
   3ee24:	mla	fp, r2, r3, fp
   3ee28:	ldr	r3, [sp, #208]	; 0xd0
   3ee2c:	cmp	r3, r6
   3ee30:	bgt	3ed94 <GetDataSlab+0x1dd88>
   3ee34:	ldr	r3, [sp, #8]
   3ee38:	add	r5, r3, fp, lsl #2
   3ee3c:	ldr	r3, [sp, #28]
   3ee40:	cmp	r3, #1
   3ee44:	beq	2a2e0 <GetDataSlab+0x92d4>
   3ee48:	ldr	r3, [sp, #20]
   3ee4c:	cmp	r3, #0
   3ee50:	movle	r3, #0
   3ee54:	ble	24fa8 <GetDataSlab+0x3f9c>
   3ee58:	mov	r3, #0
   3ee5c:	str	r3, [sp, #24]
   3ee60:	b	2a570 <GetDataSlab+0x9564>
   3ee64:	ldr	r3, [r5]
   3ee68:	ldr	r2, [sp, #20]
   3ee6c:	mul	r3, r3, r2
   3ee70:	str	r3, [sp, #20]
   3ee74:	ldr	r3, [r4]
   3ee78:	ldr	r2, [r9]
   3ee7c:	mla	fp, r2, r3, fp
   3ee80:	add	sl, sl, #4
   3ee84:	add	r9, r9, #4
   3ee88:	add	r6, r6, #1
   3ee8c:	add	r5, r5, #4
   3ee90:	add	r4, r4, #4
   3ee94:	ldr	r2, [sp, #16]
   3ee98:	ldr	r3, [r2, #4]!
   3ee9c:	str	r2, [sp, #16]
   3eea0:	sub	ip, r3, #1
   3eea4:	str	sl, [sp, #24]
   3eea8:	str	ip, [sl]
   3eeac:	ldr	r2, [sp, #12]
   3eeb0:	ldr	r3, [r2], #4
   3eeb4:	str	r2, [sp, #12]
   3eeb8:	mov	r0, r3
   3eebc:	mov	r7, r9
   3eec0:	str	r3, [r9, #4]
   3eec4:	cmp	r6, #1
   3eec8:	beq	3ee64 <GetDataSlab+0x1de58>
   3eecc:	mov	r1, r2
   3eed0:	mov	r2, r1
   3eed4:	ldr	r3, [r1, #-4]!
   3eed8:	mul	ip, r3, ip
   3eedc:	ldr	r3, [r2]
   3eee0:	mul	r0, r3, r0
   3eee4:	cmp	r1, lr
   3eee8:	bne	3eed0 <GetDataSlab+0x1dec4>
   3eeec:	ldr	r3, [sp, #24]
   3eef0:	str	ip, [r3]
   3eef4:	str	r0, [r7, #4]
   3eef8:	ldr	r3, [r5]
   3eefc:	ldr	r2, [sp, #20]
   3ef00:	mul	r3, r3, r2
   3ef04:	str	r3, [sp, #20]
   3ef08:	ldr	r3, [r7]
   3ef0c:	ldr	r2, [r4]
   3ef10:	mla	fp, r2, r3, fp
   3ef14:	ldr	r3, [sp, #208]	; 0xd0
   3ef18:	cmp	r3, r6
   3ef1c:	bgt	3ee80 <GetDataSlab+0x1de74>
   3ef20:	ldr	r3, [sp, #8]
   3ef24:	add	r5, r3, fp, lsl #2
   3ef28:	ldr	r3, [sp, #28]
   3ef2c:	cmp	r3, #1
   3ef30:	beq	2a6d0 <GetDataSlab+0x96c4>
   3ef34:	ldr	r3, [sp, #20]
   3ef38:	cmp	r3, #0
   3ef3c:	movle	r3, #0
   3ef40:	ble	24fa8 <GetDataSlab+0x3f9c>
   3ef44:	mov	r3, #0
   3ef48:	str	r3, [sp, #24]
   3ef4c:	b	2a964 <GetDataSlab+0x9958>
   3ef50:	ldr	r3, [r5]
   3ef54:	ldr	r2, [sp, #20]
   3ef58:	mul	r3, r3, r2
   3ef5c:	str	r3, [sp, #20]
   3ef60:	ldr	r3, [r9]
   3ef64:	ldr	r2, [r4]
   3ef68:	mla	fp, r2, r3, fp
   3ef6c:	add	sl, sl, #4
   3ef70:	add	r9, r9, #4
   3ef74:	add	r6, r6, #1
   3ef78:	add	r5, r5, #4
   3ef7c:	add	r4, r4, #4
   3ef80:	ldr	r2, [sp, #16]
   3ef84:	ldr	r3, [r2, #4]!
   3ef88:	str	r2, [sp, #16]
   3ef8c:	sub	ip, r3, #1
   3ef90:	str	sl, [sp, #24]
   3ef94:	str	ip, [sl]
   3ef98:	ldr	r2, [sp, #12]
   3ef9c:	ldr	r3, [r2], #4
   3efa0:	str	r2, [sp, #12]
   3efa4:	mov	r0, r3
   3efa8:	mov	r7, r9
   3efac:	str	r3, [r9, #4]
   3efb0:	cmp	r6, #1
   3efb4:	beq	3ef50 <GetDataSlab+0x1df44>
   3efb8:	mov	r1, r2
   3efbc:	mov	r2, r1
   3efc0:	ldr	r3, [r1, #-4]!
   3efc4:	mul	ip, r3, ip
   3efc8:	ldr	r3, [r2]
   3efcc:	mul	r0, r3, r0
   3efd0:	cmp	r1, lr
   3efd4:	bne	3efbc <GetDataSlab+0x1dfb0>
   3efd8:	ldr	r3, [sp, #24]
   3efdc:	str	ip, [r3]
   3efe0:	str	r0, [r7, #4]
   3efe4:	ldr	r3, [r5]
   3efe8:	ldr	r2, [sp, #20]
   3efec:	mul	r3, r3, r2
   3eff0:	str	r3, [sp, #20]
   3eff4:	ldr	r3, [r7]
   3eff8:	ldr	r2, [r4]
   3effc:	mla	fp, r2, r3, fp
   3f000:	ldr	r3, [sp, #208]	; 0xd0
   3f004:	cmp	r3, r6
   3f008:	bgt	3ef6c <GetDataSlab+0x1df60>
   3f00c:	ldr	r3, [sp, #8]
   3f010:	add	r6, r3, fp, lsl #1
   3f014:	ldr	r3, [sp, #28]
   3f018:	cmp	r3, #1
   3f01c:	beq	2aac8 <GetDataSlab+0x9abc>
   3f020:	ldr	r3, [sp, #20]
   3f024:	cmp	r3, #0
   3f028:	movle	r3, #0
   3f02c:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f030:	mov	r3, #0
   3f034:	str	r3, [sp, #24]
   3f038:	b	2ad54 <GetDataSlab+0x9d48>
   3f03c:	ldr	r3, [r5]
   3f040:	ldr	r2, [sp, #20]
   3f044:	mul	r3, r3, r2
   3f048:	str	r3, [sp, #20]
   3f04c:	ldr	r3, [r4]
   3f050:	ldr	r2, [r9]
   3f054:	mla	fp, r2, r3, fp
   3f058:	add	sl, sl, #4
   3f05c:	add	r9, r9, #4
   3f060:	add	r6, r6, #1
   3f064:	add	r5, r5, #4
   3f068:	add	r4, r4, #4
   3f06c:	ldr	r2, [sp, #16]
   3f070:	ldr	r3, [r2, #4]!
   3f074:	str	r2, [sp, #16]
   3f078:	sub	ip, r3, #1
   3f07c:	str	sl, [sp, #24]
   3f080:	str	ip, [sl]
   3f084:	ldr	r2, [sp, #12]
   3f088:	ldr	r3, [r2], #4
   3f08c:	str	r2, [sp, #12]
   3f090:	mov	r0, r3
   3f094:	mov	r7, r9
   3f098:	str	r3, [r9, #4]
   3f09c:	cmp	r6, #1
   3f0a0:	beq	3f03c <GetDataSlab+0x1e030>
   3f0a4:	mov	r1, r2
   3f0a8:	mov	r2, r1
   3f0ac:	ldr	r3, [r1, #-4]!
   3f0b0:	mul	ip, r3, ip
   3f0b4:	ldr	r3, [r2]
   3f0b8:	mul	r0, r3, r0
   3f0bc:	cmp	r1, lr
   3f0c0:	bne	3f0a8 <GetDataSlab+0x1e09c>
   3f0c4:	ldr	r3, [sp, #24]
   3f0c8:	str	ip, [r3]
   3f0cc:	str	r0, [r7, #4]
   3f0d0:	ldr	r3, [r5]
   3f0d4:	ldr	r2, [sp, #20]
   3f0d8:	mul	r3, r3, r2
   3f0dc:	str	r3, [sp, #20]
   3f0e0:	ldr	r3, [r7]
   3f0e4:	ldr	r2, [r4]
   3f0e8:	mla	fp, r2, r3, fp
   3f0ec:	ldr	r3, [sp, #208]	; 0xd0
   3f0f0:	cmp	r3, r6
   3f0f4:	bgt	3f058 <GetDataSlab+0x1e04c>
   3f0f8:	ldr	r3, [sp, #8]
   3f0fc:	add	r6, r3, fp, lsl #1
   3f100:	ldr	r3, [sp, #28]
   3f104:	cmp	r3, #1
   3f108:	beq	2aeb0 <GetDataSlab+0x9ea4>
   3f10c:	ldr	r3, [sp, #20]
   3f110:	cmp	r3, #0
   3f114:	movle	r3, #0
   3f118:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f11c:	mov	r3, #0
   3f120:	str	r3, [sp, #24]
   3f124:	b	2b13c <GetDataSlab+0xa130>
   3f128:	ldr	r3, [r5]
   3f12c:	ldr	r2, [sp, #20]
   3f130:	mul	r3, r3, r2
   3f134:	str	r3, [sp, #20]
   3f138:	ldr	r3, [r4]
   3f13c:	ldr	r2, [r9]
   3f140:	mla	fp, r2, r3, fp
   3f144:	add	sl, sl, #4
   3f148:	add	r9, r9, #4
   3f14c:	add	r6, r6, #1
   3f150:	add	r5, r5, #4
   3f154:	add	r4, r4, #4
   3f158:	ldr	r2, [sp, #16]
   3f15c:	ldr	r3, [r2, #4]!
   3f160:	str	r2, [sp, #16]
   3f164:	sub	ip, r3, #1
   3f168:	str	sl, [sp, #24]
   3f16c:	str	ip, [sl]
   3f170:	ldr	r2, [sp, #12]
   3f174:	ldr	r3, [r2], #4
   3f178:	str	r2, [sp, #12]
   3f17c:	mov	r0, r3
   3f180:	mov	r7, r9
   3f184:	str	r3, [r9, #4]
   3f188:	cmp	r6, #1
   3f18c:	beq	3f128 <GetDataSlab+0x1e11c>
   3f190:	mov	r1, r2
   3f194:	mov	r2, r1
   3f198:	ldr	r3, [r1, #-4]!
   3f19c:	mul	ip, r3, ip
   3f1a0:	ldr	r3, [r2]
   3f1a4:	mul	r0, r3, r0
   3f1a8:	cmp	r1, lr
   3f1ac:	bne	3f194 <GetDataSlab+0x1e188>
   3f1b0:	ldr	r3, [sp, #24]
   3f1b4:	str	ip, [r3]
   3f1b8:	str	r0, [r7, #4]
   3f1bc:	ldr	r3, [r5]
   3f1c0:	ldr	r2, [sp, #20]
   3f1c4:	mul	r3, r3, r2
   3f1c8:	str	r3, [sp, #20]
   3f1cc:	ldr	r3, [r7]
   3f1d0:	ldr	r2, [r4]
   3f1d4:	mla	fp, r2, r3, fp
   3f1d8:	ldr	r3, [sp, #208]	; 0xd0
   3f1dc:	cmp	r3, r6
   3f1e0:	bgt	3f144 <GetDataSlab+0x1e138>
   3f1e4:	ldr	r3, [sp, #8]
   3f1e8:	add	r6, r3, fp
   3f1ec:	ldr	r3, [sp, #28]
   3f1f0:	cmp	r3, #1
   3f1f4:	beq	2b298 <GetDataSlab+0xa28c>
   3f1f8:	ldr	r3, [sp, #20]
   3f1fc:	cmp	r3, #0
   3f200:	movle	r3, #0
   3f204:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f208:	mov	r3, #0
   3f20c:	str	r3, [sp, #24]
   3f210:	b	2b524 <GetDataSlab+0xa518>
   3f214:	ldr	r3, [r5]
   3f218:	ldr	r2, [sp, #20]
   3f21c:	mul	r3, r3, r2
   3f220:	str	r3, [sp, #20]
   3f224:	ldr	r3, [r9]
   3f228:	ldr	r2, [r4]
   3f22c:	mla	fp, r2, r3, fp
   3f230:	add	sl, sl, #4
   3f234:	add	r9, r9, #4
   3f238:	add	r6, r6, #1
   3f23c:	add	r5, r5, #4
   3f240:	add	r4, r4, #4
   3f244:	ldr	r2, [sp, #16]
   3f248:	ldr	r3, [r2, #4]!
   3f24c:	str	r2, [sp, #16]
   3f250:	sub	ip, r3, #1
   3f254:	str	sl, [sp, #24]
   3f258:	str	ip, [sl]
   3f25c:	ldr	r2, [sp, #12]
   3f260:	ldr	r3, [r2], #4
   3f264:	str	r2, [sp, #12]
   3f268:	mov	r0, r3
   3f26c:	mov	r7, r9
   3f270:	str	r3, [r9, #4]
   3f274:	cmp	r6, #1
   3f278:	beq	3f214 <GetDataSlab+0x1e208>
   3f27c:	mov	r1, r2
   3f280:	mov	r2, r1
   3f284:	ldr	r3, [r1, #-4]!
   3f288:	mul	ip, r3, ip
   3f28c:	ldr	r3, [r2]
   3f290:	mul	r0, r3, r0
   3f294:	cmp	r1, lr
   3f298:	bne	3f280 <GetDataSlab+0x1e274>
   3f29c:	ldr	r3, [sp, #24]
   3f2a0:	str	ip, [r3]
   3f2a4:	str	r0, [r7, #4]
   3f2a8:	ldr	r3, [r5]
   3f2ac:	ldr	r2, [sp, #20]
   3f2b0:	mul	r3, r3, r2
   3f2b4:	str	r3, [sp, #20]
   3f2b8:	ldr	r3, [r7]
   3f2bc:	ldr	r2, [r4]
   3f2c0:	mla	fp, r2, r3, fp
   3f2c4:	ldr	r3, [sp, #208]	; 0xd0
   3f2c8:	cmp	r3, r6
   3f2cc:	bgt	3f230 <GetDataSlab+0x1e224>
   3f2d0:	ldr	r3, [sp, #8]
   3f2d4:	add	r6, r3, fp
   3f2d8:	ldr	r3, [sp, #28]
   3f2dc:	cmp	r3, #1
   3f2e0:	beq	2b680 <GetDataSlab+0xa674>
   3f2e4:	ldr	r3, [sp, #20]
   3f2e8:	cmp	r3, #0
   3f2ec:	movle	r3, #0
   3f2f0:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f2f4:	mov	r3, #0
   3f2f8:	str	r3, [sp, #24]
   3f2fc:	b	2b90c <GetDataSlab+0xa900>
   3f300:	ldr	r3, [r6]
   3f304:	ldr	r2, [sp, #20]
   3f308:	mul	r3, r3, r2
   3f30c:	str	r3, [sp, #20]
   3f310:	ldr	r3, [r4]
   3f314:	ldr	r2, [r9]
   3f318:	mla	fp, r2, r3, fp
   3f31c:	add	sl, sl, #4
   3f320:	add	r9, r9, #4
   3f324:	add	r5, r5, #1
   3f328:	add	r6, r6, #4
   3f32c:	add	r4, r4, #4
   3f330:	ldr	r2, [sp, #16]
   3f334:	ldr	r3, [r2, #4]!
   3f338:	str	r2, [sp, #16]
   3f33c:	sub	ip, r3, #1
   3f340:	str	sl, [sp, #24]
   3f344:	str	ip, [sl]
   3f348:	ldr	r2, [sp, #12]
   3f34c:	ldr	r3, [r2], #4
   3f350:	str	r2, [sp, #12]
   3f354:	mov	r0, r3
   3f358:	mov	r7, r9
   3f35c:	str	r3, [r9, #4]
   3f360:	cmp	r5, #1
   3f364:	beq	3f300 <GetDataSlab+0x1e2f4>
   3f368:	mov	r1, r2
   3f36c:	mov	r2, r1
   3f370:	ldr	r3, [r1, #-4]!
   3f374:	mul	ip, r3, ip
   3f378:	ldr	r3, [r2]
   3f37c:	mul	r0, r3, r0
   3f380:	cmp	r1, lr
   3f384:	bne	3f36c <GetDataSlab+0x1e360>
   3f388:	ldr	r3, [sp, #24]
   3f38c:	str	ip, [r3]
   3f390:	str	r0, [r7, #4]
   3f394:	ldr	r3, [r6]
   3f398:	ldr	r2, [sp, #20]
   3f39c:	mul	r3, r3, r2
   3f3a0:	str	r3, [sp, #20]
   3f3a4:	ldr	r3, [r7]
   3f3a8:	ldr	r2, [r4]
   3f3ac:	mla	fp, r2, r3, fp
   3f3b0:	ldr	r3, [sp, #208]	; 0xd0
   3f3b4:	cmp	r3, r5
   3f3b8:	bgt	3f31c <GetDataSlab+0x1e310>
   3f3bc:	ldr	r3, [sp, #8]
   3f3c0:	add	r5, r3, fp, lsl #3
   3f3c4:	ldr	r3, [sp, #28]
   3f3c8:	cmp	r3, #1
   3f3cc:	beq	2bae0 <GetDataSlab+0xaad4>
   3f3d0:	ldr	r3, [sp, #20]
   3f3d4:	cmp	r3, #0
   3f3d8:	movgt	r3, #0
   3f3dc:	strgt	r3, [sp, #24]
   3f3e0:	bgt	2bd60 <GetDataSlab+0xad54>
   3f3e4:	mov	r3, #0
   3f3e8:	b	24fa8 <GetDataSlab+0x3f9c>
   3f3ec:	ldr	r3, [r6]
   3f3f0:	ldr	r2, [sp, #20]
   3f3f4:	mul	r3, r3, r2
   3f3f8:	str	r3, [sp, #20]
   3f3fc:	ldr	r3, [r4]
   3f400:	ldr	r2, [r9]
   3f404:	mla	fp, r2, r3, fp
   3f408:	add	sl, sl, #4
   3f40c:	add	r9, r9, #4
   3f410:	add	r5, r5, #1
   3f414:	add	r6, r6, #4
   3f418:	add	r4, r4, #4
   3f41c:	ldr	r2, [sp, #16]
   3f420:	ldr	r3, [r2, #4]!
   3f424:	str	r2, [sp, #16]
   3f428:	sub	ip, r3, #1
   3f42c:	str	sl, [sp, #24]
   3f430:	str	ip, [sl]
   3f434:	ldr	r2, [sp, #12]
   3f438:	ldr	r3, [r2], #4
   3f43c:	str	r2, [sp, #12]
   3f440:	mov	r0, r3
   3f444:	mov	r7, r9
   3f448:	str	r3, [r9, #4]
   3f44c:	cmp	r5, #1
   3f450:	beq	3f3ec <GetDataSlab+0x1e3e0>
   3f454:	mov	r1, r2
   3f458:	mov	r2, r1
   3f45c:	ldr	r3, [r1, #-4]!
   3f460:	mul	ip, r3, ip
   3f464:	ldr	r3, [r2]
   3f468:	mul	r0, r3, r0
   3f46c:	cmp	r1, lr
   3f470:	bne	3f458 <GetDataSlab+0x1e44c>
   3f474:	ldr	r3, [sp, #24]
   3f478:	str	ip, [r3]
   3f47c:	str	r0, [r7, #4]
   3f480:	ldr	r3, [r6]
   3f484:	ldr	r2, [sp, #20]
   3f488:	mul	r3, r3, r2
   3f48c:	str	r3, [sp, #20]
   3f490:	ldr	r3, [r7]
   3f494:	ldr	r2, [r4]
   3f498:	mla	fp, r2, r3, fp
   3f49c:	ldr	r3, [sp, #208]	; 0xd0
   3f4a0:	cmp	r3, r5
   3f4a4:	bgt	3f408 <GetDataSlab+0x1e3fc>
   3f4a8:	ldr	r3, [sp, #8]
   3f4ac:	add	r5, r3, fp, lsl #3
   3f4b0:	ldr	r3, [sp, #28]
   3f4b4:	cmp	r3, #1
   3f4b8:	beq	2be4c <GetDataSlab+0xae40>
   3f4bc:	ldr	r3, [sp, #20]
   3f4c0:	cmp	r3, #0
   3f4c4:	movle	r3, #0
   3f4c8:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f4cc:	mov	r3, #0
   3f4d0:	str	r3, [sp, #24]
   3f4d4:	b	2c0d4 <GetDataSlab+0xb0c8>
   3f4d8:	ldr	r3, [r5]
   3f4dc:	ldr	r2, [sp, #20]
   3f4e0:	mul	r3, r3, r2
   3f4e4:	str	r3, [sp, #20]
   3f4e8:	ldr	r3, [r4]
   3f4ec:	ldr	r2, [r9]
   3f4f0:	mla	fp, r2, r3, fp
   3f4f4:	add	sl, sl, #4
   3f4f8:	add	r9, r9, #4
   3f4fc:	add	r6, r6, #1
   3f500:	add	r5, r5, #4
   3f504:	add	r4, r4, #4
   3f508:	ldr	r2, [sp, #16]
   3f50c:	ldr	r3, [r2, #4]!
   3f510:	str	r2, [sp, #16]
   3f514:	sub	ip, r3, #1
   3f518:	str	sl, [sp, #24]
   3f51c:	str	ip, [sl]
   3f520:	ldr	r2, [sp, #12]
   3f524:	ldr	r3, [r2], #4
   3f528:	str	r2, [sp, #12]
   3f52c:	mov	r0, r3
   3f530:	mov	r7, r9
   3f534:	str	r3, [r9, #4]
   3f538:	cmp	r6, #1
   3f53c:	beq	3f4d8 <GetDataSlab+0x1e4cc>
   3f540:	mov	r1, r2
   3f544:	mov	r2, r1
   3f548:	ldr	r3, [r1, #-4]!
   3f54c:	mul	ip, r3, ip
   3f550:	ldr	r3, [r2]
   3f554:	mul	r0, r3, r0
   3f558:	cmp	r1, lr
   3f55c:	bne	3f544 <GetDataSlab+0x1e538>
   3f560:	ldr	r3, [sp, #24]
   3f564:	str	ip, [r3]
   3f568:	str	r0, [r7, #4]
   3f56c:	ldr	r3, [r5]
   3f570:	ldr	r2, [sp, #20]
   3f574:	mul	r3, r3, r2
   3f578:	str	r3, [sp, #20]
   3f57c:	ldr	r3, [r7]
   3f580:	ldr	r2, [r4]
   3f584:	mla	fp, r2, r3, fp
   3f588:	ldr	r3, [sp, #208]	; 0xd0
   3f58c:	cmp	r3, r6
   3f590:	bgt	3f4f4 <GetDataSlab+0x1e4e8>
   3f594:	ldr	r3, [sp, #8]
   3f598:	add	r7, r3, fp, lsl #3
   3f59c:	ldr	r3, [sp, #28]
   3f5a0:	cmp	r3, #1
   3f5a4:	beq	2c260 <GetDataSlab+0xb254>
   3f5a8:	ldr	r3, [sp, #20]
   3f5ac:	cmp	r3, #0
   3f5b0:	movle	r3, #0
   3f5b4:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f5b8:	mov	r3, #0
   3f5bc:	str	r3, [sp, #24]
   3f5c0:	b	2c4ec <GetDataSlab+0xb4e0>
   3f5c4:	ldr	r3, [r5]
   3f5c8:	ldr	r2, [sp, #20]
   3f5cc:	mul	r3, r3, r2
   3f5d0:	str	r3, [sp, #20]
   3f5d4:	ldr	r3, [r4]
   3f5d8:	ldr	r2, [r9]
   3f5dc:	mla	fp, r2, r3, fp
   3f5e0:	add	sl, sl, #4
   3f5e4:	add	r9, r9, #4
   3f5e8:	add	r6, r6, #1
   3f5ec:	add	r5, r5, #4
   3f5f0:	add	r4, r4, #4
   3f5f4:	ldr	r2, [sp, #16]
   3f5f8:	ldr	r3, [r2, #4]!
   3f5fc:	str	r2, [sp, #16]
   3f600:	sub	ip, r3, #1
   3f604:	str	sl, [sp, #24]
   3f608:	str	ip, [sl]
   3f60c:	ldr	r2, [sp, #12]
   3f610:	ldr	r3, [r2], #4
   3f614:	str	r2, [sp, #12]
   3f618:	mov	r0, r3
   3f61c:	mov	r7, r9
   3f620:	str	r3, [r9, #4]
   3f624:	cmp	r6, #1
   3f628:	beq	3f5c4 <GetDataSlab+0x1e5b8>
   3f62c:	mov	r1, r2
   3f630:	mov	r2, r1
   3f634:	ldr	r3, [r1, #-4]!
   3f638:	mul	ip, r3, ip
   3f63c:	ldr	r3, [r2]
   3f640:	mul	r0, r3, r0
   3f644:	cmp	r1, lr
   3f648:	bne	3f630 <GetDataSlab+0x1e624>
   3f64c:	ldr	r3, [sp, #24]
   3f650:	str	ip, [r3]
   3f654:	str	r0, [r7, #4]
   3f658:	ldr	r3, [r5]
   3f65c:	ldr	r2, [sp, #20]
   3f660:	mul	r3, r3, r2
   3f664:	str	r3, [sp, #20]
   3f668:	ldr	r3, [r7]
   3f66c:	ldr	r2, [r4]
   3f670:	mla	fp, r2, r3, fp
   3f674:	ldr	r3, [sp, #208]	; 0xd0
   3f678:	cmp	r3, r6
   3f67c:	bgt	3f5e0 <GetDataSlab+0x1e5d4>
   3f680:	ldr	r3, [sp, #8]
   3f684:	add	r7, r3, fp, lsl #2
   3f688:	ldr	r3, [sp, #28]
   3f68c:	cmp	r3, #1
   3f690:	beq	2c648 <GetDataSlab+0xb63c>
   3f694:	ldr	r3, [sp, #20]
   3f698:	cmp	r3, #0
   3f69c:	movle	r3, #0
   3f6a0:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f6a4:	mov	r3, #0
   3f6a8:	str	r3, [sp, #24]
   3f6ac:	b	2c8d4 <GetDataSlab+0xb8c8>
   3f6b0:	ldr	r3, [r5]
   3f6b4:	ldr	r2, [sp, #20]
   3f6b8:	mul	r3, r3, r2
   3f6bc:	str	r3, [sp, #20]
   3f6c0:	ldr	r3, [r9]
   3f6c4:	ldr	r2, [r4]
   3f6c8:	mla	fp, r2, r3, fp
   3f6cc:	add	sl, sl, #4
   3f6d0:	add	r9, r9, #4
   3f6d4:	add	r6, r6, #1
   3f6d8:	add	r5, r5, #4
   3f6dc:	add	r4, r4, #4
   3f6e0:	ldr	r2, [sp, #16]
   3f6e4:	ldr	r3, [r2, #4]!
   3f6e8:	str	r2, [sp, #16]
   3f6ec:	sub	ip, r3, #1
   3f6f0:	str	sl, [sp, #24]
   3f6f4:	str	ip, [sl]
   3f6f8:	ldr	r2, [sp, #12]
   3f6fc:	ldr	r3, [r2], #4
   3f700:	str	r2, [sp, #12]
   3f704:	mov	r0, r3
   3f708:	mov	r7, r9
   3f70c:	str	r3, [r9, #4]
   3f710:	cmp	r6, #1
   3f714:	beq	3f6b0 <GetDataSlab+0x1e6a4>
   3f718:	mov	r1, r2
   3f71c:	mov	r2, r1
   3f720:	ldr	r3, [r1, #-4]!
   3f724:	mul	ip, r3, ip
   3f728:	ldr	r3, [r2]
   3f72c:	mul	r0, r3, r0
   3f730:	cmp	r1, lr
   3f734:	bne	3f71c <GetDataSlab+0x1e710>
   3f738:	ldr	r3, [sp, #24]
   3f73c:	str	ip, [r3]
   3f740:	str	r0, [r7, #4]
   3f744:	ldr	r3, [r5]
   3f748:	ldr	r2, [sp, #20]
   3f74c:	mul	r3, r3, r2
   3f750:	str	r3, [sp, #20]
   3f754:	ldr	r3, [r7]
   3f758:	ldr	r2, [r4]
   3f75c:	mla	fp, r2, r3, fp
   3f760:	ldr	r3, [sp, #208]	; 0xd0
   3f764:	cmp	r3, r6
   3f768:	bgt	3f6cc <GetDataSlab+0x1e6c0>
   3f76c:	ldr	r3, [sp, #8]
   3f770:	add	r5, r3, fp, lsl #2
   3f774:	ldr	r3, [sp, #28]
   3f778:	cmp	r3, #1
   3f77c:	beq	2ca30 <GetDataSlab+0xba24>
   3f780:	ldr	r3, [sp, #20]
   3f784:	cmp	r3, #0
   3f788:	movle	r3, #0
   3f78c:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f790:	mov	r3, #0
   3f794:	str	r3, [sp, #24]
   3f798:	b	2ccc0 <GetDataSlab+0xbcb4>
   3f79c:	ldr	r3, [r5]
   3f7a0:	ldr	r2, [sp, #20]
   3f7a4:	mul	r3, r3, r2
   3f7a8:	str	r3, [sp, #20]
   3f7ac:	ldr	r3, [r4]
   3f7b0:	ldr	r2, [r9]
   3f7b4:	mla	fp, r2, r3, fp
   3f7b8:	add	sl, sl, #4
   3f7bc:	add	r9, r9, #4
   3f7c0:	add	r6, r6, #1
   3f7c4:	add	r5, r5, #4
   3f7c8:	add	r4, r4, #4
   3f7cc:	ldr	r2, [sp, #16]
   3f7d0:	ldr	r3, [r2, #4]!
   3f7d4:	str	r2, [sp, #16]
   3f7d8:	sub	ip, r3, #1
   3f7dc:	str	sl, [sp, #24]
   3f7e0:	str	ip, [sl]
   3f7e4:	ldr	r2, [sp, #12]
   3f7e8:	ldr	r3, [r2], #4
   3f7ec:	str	r2, [sp, #12]
   3f7f0:	mov	r0, r3
   3f7f4:	mov	r7, r9
   3f7f8:	str	r3, [r9, #4]
   3f7fc:	cmp	r6, #1
   3f800:	beq	3f79c <GetDataSlab+0x1e790>
   3f804:	mov	r1, r2
   3f808:	mov	r2, r1
   3f80c:	ldr	r3, [r1, #-4]!
   3f810:	mul	ip, r3, ip
   3f814:	ldr	r3, [r2]
   3f818:	mul	r0, r3, r0
   3f81c:	cmp	r1, lr
   3f820:	bne	3f808 <GetDataSlab+0x1e7fc>
   3f824:	ldr	r3, [sp, #24]
   3f828:	str	ip, [r3]
   3f82c:	str	r0, [r7, #4]
   3f830:	ldr	r3, [r5]
   3f834:	ldr	r2, [sp, #20]
   3f838:	mul	r3, r3, r2
   3f83c:	str	r3, [sp, #20]
   3f840:	ldr	r3, [r7]
   3f844:	ldr	r2, [r4]
   3f848:	mla	fp, r2, r3, fp
   3f84c:	ldr	r3, [sp, #208]	; 0xd0
   3f850:	cmp	r3, r6
   3f854:	bgt	3f7b8 <GetDataSlab+0x1e7ac>
   3f858:	ldr	r3, [sp, #8]
   3f85c:	add	r5, r3, fp, lsl #2
   3f860:	ldr	r3, [sp, #28]
   3f864:	cmp	r3, #1
   3f868:	beq	2ce20 <GetDataSlab+0xbe14>
   3f86c:	ldr	r3, [sp, #20]
   3f870:	cmp	r3, #0
   3f874:	movle	r3, #0
   3f878:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f87c:	mov	r3, #0
   3f880:	str	r3, [sp, #24]
   3f884:	b	2d0b4 <GetDataSlab+0xc0a8>
   3f888:	ldr	r3, [r5]
   3f88c:	ldr	r2, [sp, #20]
   3f890:	mul	r3, r3, r2
   3f894:	str	r3, [sp, #20]
   3f898:	ldr	r3, [r9]
   3f89c:	ldr	r2, [r4]
   3f8a0:	mla	fp, r2, r3, fp
   3f8a4:	add	sl, sl, #4
   3f8a8:	add	r9, r9, #4
   3f8ac:	add	r6, r6, #1
   3f8b0:	add	r5, r5, #4
   3f8b4:	add	r4, r4, #4
   3f8b8:	ldr	r2, [sp, #16]
   3f8bc:	ldr	r3, [r2, #4]!
   3f8c0:	str	r2, [sp, #16]
   3f8c4:	sub	ip, r3, #1
   3f8c8:	str	sl, [sp, #24]
   3f8cc:	str	ip, [sl]
   3f8d0:	ldr	r2, [sp, #12]
   3f8d4:	ldr	r3, [r2], #4
   3f8d8:	str	r2, [sp, #12]
   3f8dc:	mov	r0, r3
   3f8e0:	mov	r7, r9
   3f8e4:	str	r3, [r9, #4]
   3f8e8:	cmp	r6, #1
   3f8ec:	beq	3f888 <GetDataSlab+0x1e87c>
   3f8f0:	mov	r1, r2
   3f8f4:	mov	r2, r1
   3f8f8:	ldr	r3, [r1, #-4]!
   3f8fc:	mul	ip, r3, ip
   3f900:	ldr	r3, [r2]
   3f904:	mul	r0, r3, r0
   3f908:	cmp	r1, lr
   3f90c:	bne	3f8f4 <GetDataSlab+0x1e8e8>
   3f910:	ldr	r3, [sp, #24]
   3f914:	str	ip, [r3]
   3f918:	str	r0, [r7, #4]
   3f91c:	ldr	r3, [r5]
   3f920:	ldr	r2, [sp, #20]
   3f924:	mul	r3, r3, r2
   3f928:	str	r3, [sp, #20]
   3f92c:	ldr	r3, [r7]
   3f930:	ldr	r2, [r4]
   3f934:	mla	fp, r2, r3, fp
   3f938:	ldr	r3, [sp, #208]	; 0xd0
   3f93c:	cmp	r3, r6
   3f940:	bgt	3f8a4 <GetDataSlab+0x1e898>
   3f944:	ldr	r3, [sp, #8]
   3f948:	add	r6, r3, fp, lsl #1
   3f94c:	ldr	r3, [sp, #28]
   3f950:	cmp	r3, #1
   3f954:	beq	2d218 <GetDataSlab+0xc20c>
   3f958:	ldr	r3, [sp, #20]
   3f95c:	cmp	r3, #0
   3f960:	movle	r3, #0
   3f964:	ble	24fa8 <GetDataSlab+0x3f9c>
   3f968:	mov	r3, #0
   3f96c:	str	r3, [sp, #24]
   3f970:	b	2d4a4 <GetDataSlab+0xc498>
   3f974:	ldr	r3, [r5]
   3f978:	ldr	r2, [sp, #20]
   3f97c:	mul	r3, r3, r2
   3f980:	str	r3, [sp, #20]
   3f984:	ldr	r3, [r4]
   3f988:	ldr	r2, [r9]
   3f98c:	mla	fp, r2, r3, fp
   3f990:	add	sl, sl, #4
   3f994:	add	r9, r9, #4
   3f998:	add	r6, r6, #1
   3f99c:	add	r5, r5, #4
   3f9a0:	add	r4, r4, #4
   3f9a4:	ldr	r2, [sp, #16]
   3f9a8:	ldr	r3, [r2, #4]!
   3f9ac:	str	r2, [sp, #16]
   3f9b0:	sub	ip, r3, #1
   3f9b4:	str	sl, [sp, #24]
   3f9b8:	str	ip, [sl]
   3f9bc:	ldr	r2, [sp, #12]
   3f9c0:	ldr	r3, [r2], #4
   3f9c4:	str	r2, [sp, #12]
   3f9c8:	mov	r0, r3
   3f9cc:	mov	r7, r9
   3f9d0:	str	r3, [r9, #4]
   3f9d4:	cmp	r6, #1
   3f9d8:	beq	3f974 <GetDataSlab+0x1e968>
   3f9dc:	mov	r1, r2
   3f9e0:	mov	r2, r1
   3f9e4:	ldr	r3, [r1, #-4]!
   3f9e8:	mul	ip, r3, ip
   3f9ec:	ldr	r3, [r2]
   3f9f0:	mul	r0, r3, r0
   3f9f4:	cmp	r1, lr
   3f9f8:	bne	3f9e0 <GetDataSlab+0x1e9d4>
   3f9fc:	ldr	r3, [sp, #24]
   3fa00:	str	ip, [r3]
   3fa04:	str	r0, [r7, #4]
   3fa08:	ldr	r3, [r5]
   3fa0c:	ldr	r2, [sp, #20]
   3fa10:	mul	r3, r3, r2
   3fa14:	str	r3, [sp, #20]
   3fa18:	ldr	r3, [r7]
   3fa1c:	ldr	r2, [r4]
   3fa20:	mla	fp, r2, r3, fp
   3fa24:	ldr	r3, [sp, #208]	; 0xd0
   3fa28:	cmp	r3, r6
   3fa2c:	bgt	3f990 <GetDataSlab+0x1e984>
   3fa30:	ldr	r3, [sp, #8]
   3fa34:	add	r6, r3, fp, lsl #1
   3fa38:	ldr	r3, [sp, #28]
   3fa3c:	cmp	r3, #1
   3fa40:	beq	2d600 <GetDataSlab+0xc5f4>
   3fa44:	ldr	r3, [sp, #20]
   3fa48:	cmp	r3, #0
   3fa4c:	movle	r3, #0
   3fa50:	ble	24fa8 <GetDataSlab+0x3f9c>
   3fa54:	mov	r3, #0
   3fa58:	str	r3, [sp, #24]
   3fa5c:	b	2d88c <GetDataSlab+0xc880>
   3fa60:	ldr	r3, [r5]
   3fa64:	ldr	r2, [sp, #20]
   3fa68:	mul	r3, r3, r2
   3fa6c:	str	r3, [sp, #20]
   3fa70:	ldr	r3, [r4]
   3fa74:	ldr	r2, [r9]
   3fa78:	mla	fp, r2, r3, fp
   3fa7c:	add	sl, sl, #4
   3fa80:	add	r9, r9, #4
   3fa84:	add	r6, r6, #1
   3fa88:	add	r5, r5, #4
   3fa8c:	add	r4, r4, #4
   3fa90:	ldr	r2, [sp, #16]
   3fa94:	ldr	r3, [r2, #4]!
   3fa98:	str	r2, [sp, #16]
   3fa9c:	sub	ip, r3, #1
   3faa0:	str	sl, [sp, #24]
   3faa4:	str	ip, [sl]
   3faa8:	ldr	r2, [sp, #12]
   3faac:	ldr	r3, [r2], #4
   3fab0:	str	r2, [sp, #12]
   3fab4:	mov	r0, r3
   3fab8:	mov	r7, r9
   3fabc:	str	r3, [r9, #4]
   3fac0:	cmp	r6, #1
   3fac4:	beq	3fa60 <GetDataSlab+0x1ea54>
   3fac8:	mov	r1, r2
   3facc:	mov	r2, r1
   3fad0:	ldr	r3, [r1, #-4]!
   3fad4:	mul	ip, r3, ip
   3fad8:	ldr	r3, [r2]
   3fadc:	mul	r0, r3, r0
   3fae0:	cmp	r1, lr
   3fae4:	bne	3facc <GetDataSlab+0x1eac0>
   3fae8:	ldr	r3, [sp, #24]
   3faec:	str	ip, [r3]
   3faf0:	str	r0, [r7, #4]
   3faf4:	ldr	r3, [r5]
   3faf8:	ldr	r2, [sp, #20]
   3fafc:	mul	r3, r3, r2
   3fb00:	str	r3, [sp, #20]
   3fb04:	ldr	r3, [r7]
   3fb08:	ldr	r2, [r4]
   3fb0c:	mla	fp, r2, r3, fp
   3fb10:	ldr	r3, [sp, #208]	; 0xd0
   3fb14:	cmp	r3, r6
   3fb18:	bgt	3fa7c <GetDataSlab+0x1ea70>
   3fb1c:	ldr	r3, [sp, #8]
   3fb20:	add	r6, r3, fp
   3fb24:	ldr	r3, [sp, #28]
   3fb28:	cmp	r3, #1
   3fb2c:	beq	2d9e8 <GetDataSlab+0xc9dc>
   3fb30:	ldr	r3, [sp, #20]
   3fb34:	cmp	r3, #0
   3fb38:	movle	r3, #0
   3fb3c:	ble	24fa8 <GetDataSlab+0x3f9c>
   3fb40:	mov	r3, #0
   3fb44:	str	r3, [sp, #24]
   3fb48:	b	2dc74 <GetDataSlab+0xcc68>
   3fb4c:	ldr	r3, [r5]
   3fb50:	ldr	r2, [sp, #20]
   3fb54:	mul	r3, r3, r2
   3fb58:	str	r3, [sp, #20]
   3fb5c:	ldr	r3, [r9]
   3fb60:	ldr	r2, [r4]
   3fb64:	mla	fp, r2, r3, fp
   3fb68:	add	sl, sl, #4
   3fb6c:	add	r9, r9, #4
   3fb70:	add	r6, r6, #1
   3fb74:	add	r5, r5, #4
   3fb78:	add	r4, r4, #4
   3fb7c:	ldr	r2, [sp, #16]
   3fb80:	ldr	r3, [r2, #4]!
   3fb84:	str	r2, [sp, #16]
   3fb88:	sub	ip, r3, #1
   3fb8c:	str	sl, [sp, #24]
   3fb90:	str	ip, [sl]
   3fb94:	ldr	r2, [sp, #12]
   3fb98:	ldr	r3, [r2], #4
   3fb9c:	str	r2, [sp, #12]
   3fba0:	mov	r0, r3
   3fba4:	mov	r7, r9
   3fba8:	str	r3, [r9, #4]
   3fbac:	cmp	r6, #1
   3fbb0:	beq	3fb4c <GetDataSlab+0x1eb40>
   3fbb4:	mov	r1, r2
   3fbb8:	mov	r2, r1
   3fbbc:	ldr	r3, [r1, #-4]!
   3fbc0:	mul	ip, r3, ip
   3fbc4:	ldr	r3, [r2]
   3fbc8:	mul	r0, r3, r0
   3fbcc:	cmp	r1, lr
   3fbd0:	bne	3fbb8 <GetDataSlab+0x1ebac>
   3fbd4:	ldr	r3, [sp, #24]
   3fbd8:	str	ip, [r3]
   3fbdc:	str	r0, [r7, #4]
   3fbe0:	ldr	r3, [r5]
   3fbe4:	ldr	r2, [sp, #20]
   3fbe8:	mul	r3, r3, r2
   3fbec:	str	r3, [sp, #20]
   3fbf0:	ldr	r3, [r7]
   3fbf4:	ldr	r2, [r4]
   3fbf8:	mla	fp, r2, r3, fp
   3fbfc:	ldr	r3, [sp, #208]	; 0xd0
   3fc00:	cmp	r3, r6
   3fc04:	bgt	3fb68 <GetDataSlab+0x1eb5c>
   3fc08:	ldr	r3, [sp, #8]
   3fc0c:	add	r6, r3, fp
   3fc10:	ldr	r3, [sp, #28]
   3fc14:	cmp	r3, #1
   3fc18:	beq	2ddd0 <GetDataSlab+0xcdc4>
   3fc1c:	ldr	r3, [sp, #20]
   3fc20:	cmp	r3, #0
   3fc24:	movle	r3, #0
   3fc28:	ble	24fa8 <GetDataSlab+0x3f9c>
   3fc2c:	mov	r3, #0
   3fc30:	str	r3, [sp, #24]
   3fc34:	b	2e05c <GetDataSlab+0xd050>
   3fc38:	ldr	r3, [r6]
   3fc3c:	ldr	r2, [sp, #20]
   3fc40:	mul	r3, r3, r2
   3fc44:	str	r3, [sp, #20]
   3fc48:	ldr	r3, [r4]
   3fc4c:	ldr	r2, [r9]
   3fc50:	mla	fp, r2, r3, fp
   3fc54:	add	sl, sl, #4
   3fc58:	add	r9, r9, #4
   3fc5c:	add	r5, r5, #1
   3fc60:	add	r6, r6, #4
   3fc64:	add	r4, r4, #4
   3fc68:	ldr	r2, [sp, #16]
   3fc6c:	ldr	r3, [r2, #4]!
   3fc70:	str	r2, [sp, #16]
   3fc74:	sub	ip, r3, #1
   3fc78:	str	sl, [sp, #24]
   3fc7c:	str	ip, [sl]
   3fc80:	ldr	r2, [sp, #12]
   3fc84:	ldr	r3, [r2], #4
   3fc88:	str	r2, [sp, #12]
   3fc8c:	mov	r0, r3
   3fc90:	mov	r7, r9
   3fc94:	str	r3, [r9, #4]
   3fc98:	cmp	r5, #1
   3fc9c:	beq	3fc38 <GetDataSlab+0x1ec2c>
   3fca0:	mov	r1, r2
   3fca4:	mov	r2, r1
   3fca8:	ldr	r3, [r1, #-4]!
   3fcac:	mul	ip, r3, ip
   3fcb0:	ldr	r3, [r2]
   3fcb4:	mul	r0, r3, r0
   3fcb8:	cmp	r1, lr
   3fcbc:	bne	3fca4 <GetDataSlab+0x1ec98>
   3fcc0:	ldr	r3, [sp, #24]
   3fcc4:	str	ip, [r3]
   3fcc8:	str	r0, [r7, #4]
   3fccc:	ldr	r3, [r6]
   3fcd0:	ldr	r2, [sp, #20]
   3fcd4:	mul	r3, r3, r2
   3fcd8:	str	r3, [sp, #20]
   3fcdc:	ldr	r3, [r7]
   3fce0:	ldr	r2, [r4]
   3fce4:	mla	fp, r2, r3, fp
   3fce8:	ldr	r3, [sp, #208]	; 0xd0
   3fcec:	cmp	r3, r5
   3fcf0:	bgt	3fc54 <GetDataSlab+0x1ec48>
   3fcf4:	ldr	r3, [sp, #8]
   3fcf8:	add	r5, r3, fp, lsl #3
   3fcfc:	ldr	r3, [sp, #28]
   3fd00:	cmp	r3, #1
   3fd04:	beq	2e230 <GetDataSlab+0xd224>
   3fd08:	ldr	r3, [sp, #20]
   3fd0c:	cmp	r3, #0
   3fd10:	movgt	r3, #0
   3fd14:	strgt	r3, [sp, #24]
   3fd18:	bgt	2e4b0 <GetDataSlab+0xd4a4>
   3fd1c:	mov	r3, #0
   3fd20:	b	24fa8 <GetDataSlab+0x3f9c>
   3fd24:	ldr	r3, [r6]
   3fd28:	ldr	r2, [sp, #20]
   3fd2c:	mul	r3, r3, r2
   3fd30:	str	r3, [sp, #20]
   3fd34:	ldr	r3, [r4]
   3fd38:	ldr	r2, [r9]
   3fd3c:	mla	fp, r2, r3, fp
   3fd40:	add	sl, sl, #4
   3fd44:	add	r9, r9, #4
   3fd48:	add	r5, r5, #1
   3fd4c:	add	r6, r6, #4
   3fd50:	add	r4, r4, #4
   3fd54:	ldr	r2, [sp, #16]
   3fd58:	ldr	r3, [r2, #4]!
   3fd5c:	str	r2, [sp, #16]
   3fd60:	sub	ip, r3, #1
   3fd64:	str	sl, [sp, #24]
   3fd68:	str	ip, [sl]
   3fd6c:	ldr	r2, [sp, #12]
   3fd70:	ldr	r3, [r2], #4
   3fd74:	str	r2, [sp, #12]
   3fd78:	mov	r0, r3
   3fd7c:	mov	r7, r9
   3fd80:	str	r3, [r9, #4]
   3fd84:	cmp	r5, #1
   3fd88:	beq	3fd24 <GetDataSlab+0x1ed18>
   3fd8c:	mov	r1, r2
   3fd90:	mov	r2, r1
   3fd94:	ldr	r3, [r1, #-4]!
   3fd98:	mul	ip, r3, ip
   3fd9c:	ldr	r3, [r2]
   3fda0:	mul	r0, r3, r0
   3fda4:	cmp	r1, lr
   3fda8:	bne	3fd90 <GetDataSlab+0x1ed84>
   3fdac:	ldr	r3, [sp, #24]
   3fdb0:	str	ip, [r3]
   3fdb4:	str	r0, [r7, #4]
   3fdb8:	ldr	r3, [r6]
   3fdbc:	ldr	r2, [sp, #20]
   3fdc0:	mul	r3, r3, r2
   3fdc4:	str	r3, [sp, #20]
   3fdc8:	ldr	r3, [r7]
   3fdcc:	ldr	r2, [r4]
   3fdd0:	mla	fp, r2, r3, fp
   3fdd4:	ldr	r3, [sp, #208]	; 0xd0
   3fdd8:	cmp	r3, r5
   3fddc:	bgt	3fd40 <GetDataSlab+0x1ed34>
   3fde0:	ldr	r3, [sp, #8]
   3fde4:	add	r5, r3, fp, lsl #3
   3fde8:	ldr	r3, [sp, #28]
   3fdec:	cmp	r3, #1
   3fdf0:	beq	2e59c <GetDataSlab+0xd590>
   3fdf4:	ldr	r3, [sp, #20]
   3fdf8:	cmp	r3, #0
   3fdfc:	movle	r3, #0
   3fe00:	ble	24fa8 <GetDataSlab+0x3f9c>
   3fe04:	mov	r3, #0
   3fe08:	str	r3, [sp, #24]
   3fe0c:	b	2e824 <GetDataSlab+0xd818>
   3fe10:	ldr	r3, [r5]
   3fe14:	ldr	r2, [sp, #20]
   3fe18:	mul	r3, r3, r2
   3fe1c:	str	r3, [sp, #20]
   3fe20:	ldr	r3, [r4]
   3fe24:	ldr	r2, [r9]
   3fe28:	mla	fp, r2, r3, fp
   3fe2c:	add	sl, sl, #4
   3fe30:	add	r9, r9, #4
   3fe34:	add	r6, r6, #1
   3fe38:	add	r5, r5, #4
   3fe3c:	add	r4, r4, #4
   3fe40:	ldr	r2, [sp, #16]
   3fe44:	ldr	r3, [r2, #4]!
   3fe48:	str	r2, [sp, #16]
   3fe4c:	sub	ip, r3, #1
   3fe50:	str	sl, [sp, #24]
   3fe54:	str	ip, [sl]
   3fe58:	ldr	r2, [sp, #12]
   3fe5c:	ldr	r3, [r2], #4
   3fe60:	str	r2, [sp, #12]
   3fe64:	mov	r0, r3
   3fe68:	mov	r7, r9
   3fe6c:	str	r3, [r9, #4]
   3fe70:	cmp	r6, #1
   3fe74:	beq	3fe10 <GetDataSlab+0x1ee04>
   3fe78:	mov	r1, r2
   3fe7c:	mov	r2, r1
   3fe80:	ldr	r3, [r1, #-4]!
   3fe84:	mul	ip, r3, ip
   3fe88:	ldr	r3, [r2]
   3fe8c:	mul	r0, r3, r0
   3fe90:	cmp	r1, lr
   3fe94:	bne	3fe7c <GetDataSlab+0x1ee70>
   3fe98:	ldr	r3, [sp, #24]
   3fe9c:	str	ip, [r3]
   3fea0:	str	r0, [r7, #4]
   3fea4:	ldr	r3, [r5]
   3fea8:	ldr	r2, [sp, #20]
   3feac:	mul	r3, r3, r2
   3feb0:	str	r3, [sp, #20]
   3feb4:	ldr	r3, [r7]
   3feb8:	ldr	r2, [r4]
   3febc:	mla	fp, r2, r3, fp
   3fec0:	ldr	r3, [sp, #208]	; 0xd0
   3fec4:	cmp	r3, r6
   3fec8:	bgt	3fe2c <GetDataSlab+0x1ee20>
   3fecc:	ldr	r3, [sp, #8]
   3fed0:	add	r5, r3, fp, lsl #3
   3fed4:	ldr	r3, [sp, #28]
   3fed8:	cmp	r3, #1
   3fedc:	beq	2e9b0 <GetDataSlab+0xd9a4>
   3fee0:	ldr	r3, [sp, #20]
   3fee4:	cmp	r3, #0
   3fee8:	movle	r3, #0
   3feec:	ble	24fa8 <GetDataSlab+0x3f9c>
   3fef0:	mov	r3, #0
   3fef4:	str	r3, [sp, #24]
   3fef8:	b	2ec3c <GetDataSlab+0xdc30>
   3fefc:	ldr	r3, [r5]
   3ff00:	ldr	r2, [sp, #20]
   3ff04:	mul	r3, r3, r2
   3ff08:	str	r3, [sp, #20]
   3ff0c:	ldr	r3, [r4]
   3ff10:	ldr	r2, [r9]
   3ff14:	mla	fp, r2, r3, fp
   3ff18:	add	sl, sl, #4
   3ff1c:	add	r9, r9, #4
   3ff20:	add	r6, r6, #1
   3ff24:	add	r5, r5, #4
   3ff28:	add	r4, r4, #4
   3ff2c:	ldr	r2, [sp, #16]
   3ff30:	ldr	r3, [r2, #4]!
   3ff34:	str	r2, [sp, #16]
   3ff38:	sub	ip, r3, #1
   3ff3c:	str	sl, [sp, #24]
   3ff40:	str	ip, [sl]
   3ff44:	ldr	r2, [sp, #12]
   3ff48:	ldr	r3, [r2], #4
   3ff4c:	str	r2, [sp, #12]
   3ff50:	mov	r0, r3
   3ff54:	mov	r7, r9
   3ff58:	str	r3, [r9, #4]
   3ff5c:	cmp	r6, #1
   3ff60:	beq	3fefc <GetDataSlab+0x1eef0>
   3ff64:	mov	r1, r2
   3ff68:	mov	r2, r1
   3ff6c:	ldr	r3, [r1, #-4]!
   3ff70:	mul	ip, r3, ip
   3ff74:	ldr	r3, [r2]
   3ff78:	mul	r0, r3, r0
   3ff7c:	cmp	r1, lr
   3ff80:	bne	3ff68 <GetDataSlab+0x1ef5c>
   3ff84:	ldr	r3, [sp, #24]
   3ff88:	str	ip, [r3]
   3ff8c:	str	r0, [r7, #4]
   3ff90:	ldr	r3, [r5]
   3ff94:	ldr	r2, [sp, #20]
   3ff98:	mul	r3, r3, r2
   3ff9c:	str	r3, [sp, #20]
   3ffa0:	ldr	r3, [r7]
   3ffa4:	ldr	r2, [r4]
   3ffa8:	mla	fp, r2, r3, fp
   3ffac:	ldr	r3, [sp, #208]	; 0xd0
   3ffb0:	cmp	r3, r6
   3ffb4:	bgt	3ff18 <GetDataSlab+0x1ef0c>
   3ffb8:	ldr	r3, [sp, #8]
   3ffbc:	add	r5, r3, fp, lsl #2
   3ffc0:	ldr	r3, [sp, #28]
   3ffc4:	cmp	r3, #1
   3ffc8:	beq	2ed98 <GetDataSlab+0xdd8c>
   3ffcc:	ldr	r3, [sp, #20]
   3ffd0:	cmp	r3, #0
   3ffd4:	movle	r3, #0
   3ffd8:	ble	24fa8 <GetDataSlab+0x3f9c>
   3ffdc:	mov	r3, #0
   3ffe0:	str	r3, [sp, #24]
   3ffe4:	b	2f024 <GetDataSlab+0xe018>
   3ffe8:	ldr	r3, [r5]
   3ffec:	ldr	r2, [sp, #20]
   3fff0:	mul	r3, r3, r2
   3fff4:	str	r3, [sp, #20]
   3fff8:	ldr	r3, [r9]
   3fffc:	ldr	r2, [r4]
   40000:	mla	fp, r2, r3, fp
   40004:	add	sl, sl, #4
   40008:	add	r9, r9, #4
   4000c:	add	r6, r6, #1
   40010:	add	r5, r5, #4
   40014:	add	r4, r4, #4
   40018:	ldr	r2, [sp, #16]
   4001c:	ldr	r3, [r2, #4]!
   40020:	str	r2, [sp, #16]
   40024:	sub	ip, r3, #1
   40028:	str	sl, [sp, #24]
   4002c:	str	ip, [sl]
   40030:	ldr	r2, [sp, #12]
   40034:	ldr	r3, [r2], #4
   40038:	str	r2, [sp, #12]
   4003c:	mov	r0, r3
   40040:	mov	r7, r9
   40044:	str	r3, [r9, #4]
   40048:	cmp	r6, #1
   4004c:	beq	3ffe8 <GetDataSlab+0x1efdc>
   40050:	mov	r1, r2
   40054:	mov	r2, r1
   40058:	ldr	r3, [r1, #-4]!
   4005c:	mul	ip, r3, ip
   40060:	ldr	r3, [r2]
   40064:	mul	r0, r3, r0
   40068:	cmp	r1, lr
   4006c:	bne	40054 <GetDataSlab+0x1f048>
   40070:	ldr	r3, [sp, #24]
   40074:	str	ip, [r3]
   40078:	str	r0, [r7, #4]
   4007c:	ldr	r3, [r5]
   40080:	ldr	r2, [sp, #20]
   40084:	mul	r3, r3, r2
   40088:	str	r3, [sp, #20]
   4008c:	ldr	r3, [r7]
   40090:	ldr	r2, [r4]
   40094:	mla	fp, r2, r3, fp
   40098:	ldr	r3, [sp, #208]	; 0xd0
   4009c:	cmp	r3, r6
   400a0:	bgt	40004 <GetDataSlab+0x1eff8>
   400a4:	ldr	r3, [sp, #8]
   400a8:	add	r5, r3, fp, lsl #2
   400ac:	ldr	r3, [sp, #28]
   400b0:	cmp	r3, #1
   400b4:	beq	2f180 <GetDataSlab+0xe174>
   400b8:	ldr	r3, [sp, #20]
   400bc:	cmp	r3, #0
   400c0:	movle	r3, #0
   400c4:	ble	24fa8 <GetDataSlab+0x3f9c>
   400c8:	mov	r3, #0
   400cc:	str	r3, [sp, #24]
   400d0:	b	2f408 <GetDataSlab+0xe3fc>
   400d4:	ldr	r3, [r5]
   400d8:	ldr	r2, [sp, #20]
   400dc:	mul	r3, r3, r2
   400e0:	str	r3, [sp, #20]
   400e4:	ldr	r3, [r4]
   400e8:	ldr	r2, [r9]
   400ec:	mla	fp, r2, r3, fp
   400f0:	add	sl, sl, #4
   400f4:	add	r9, r9, #4
   400f8:	add	r6, r6, #1
   400fc:	add	r5, r5, #4
   40100:	add	r4, r4, #4
   40104:	ldr	r2, [sp, #16]
   40108:	ldr	r3, [r2, #4]!
   4010c:	str	r2, [sp, #16]
   40110:	sub	ip, r3, #1
   40114:	str	sl, [sp, #24]
   40118:	str	ip, [sl]
   4011c:	ldr	r2, [sp, #12]
   40120:	ldr	r3, [r2], #4
   40124:	str	r2, [sp, #12]
   40128:	mov	r0, r3
   4012c:	mov	r7, r9
   40130:	str	r3, [r9, #4]
   40134:	cmp	r6, #1
   40138:	beq	400d4 <GetDataSlab+0x1f0c8>
   4013c:	mov	r1, r2
   40140:	mov	r2, r1
   40144:	ldr	r3, [r1, #-4]!
   40148:	mul	ip, r3, ip
   4014c:	ldr	r3, [r2]
   40150:	mul	r0, r3, r0
   40154:	cmp	r1, lr
   40158:	bne	40140 <GetDataSlab+0x1f134>
   4015c:	ldr	r3, [sp, #24]
   40160:	str	ip, [r3]
   40164:	str	r0, [r7, #4]
   40168:	ldr	r3, [r5]
   4016c:	ldr	r2, [sp, #20]
   40170:	mul	r3, r3, r2
   40174:	str	r3, [sp, #20]
   40178:	ldr	r3, [r7]
   4017c:	ldr	r2, [r4]
   40180:	mla	fp, r2, r3, fp
   40184:	ldr	r3, [sp, #208]	; 0xd0
   40188:	cmp	r3, r6
   4018c:	bgt	400f0 <GetDataSlab+0x1f0e4>
   40190:	ldr	r3, [sp, #8]
   40194:	add	r5, r3, fp, lsl #2
   40198:	ldr	r3, [sp, #28]
   4019c:	cmp	r3, #1
   401a0:	beq	2f560 <GetDataSlab+0xe554>
   401a4:	ldr	r3, [sp, #20]
   401a8:	cmp	r3, #0
   401ac:	movle	r3, #0
   401b0:	ble	24fa8 <GetDataSlab+0x3f9c>
   401b4:	mov	r3, #0
   401b8:	str	r3, [sp, #24]
   401bc:	b	2f7e8 <GetDataSlab+0xe7dc>
   401c0:	ldr	r3, [r5]
   401c4:	ldr	r2, [sp, #20]
   401c8:	mul	r3, r3, r2
   401cc:	str	r3, [sp, #20]
   401d0:	ldr	r3, [r9]
   401d4:	ldr	r2, [r4]
   401d8:	mla	fp, r2, r3, fp
   401dc:	add	sl, sl, #4
   401e0:	add	r9, r9, #4
   401e4:	add	r6, r6, #1
   401e8:	add	r5, r5, #4
   401ec:	add	r4, r4, #4
   401f0:	ldr	r2, [sp, #16]
   401f4:	ldr	r3, [r2, #4]!
   401f8:	str	r2, [sp, #16]
   401fc:	sub	ip, r3, #1
   40200:	str	sl, [sp, #24]
   40204:	str	ip, [sl]
   40208:	ldr	r2, [sp, #12]
   4020c:	ldr	r3, [r2], #4
   40210:	str	r2, [sp, #12]
   40214:	mov	r0, r3
   40218:	mov	r7, r9
   4021c:	str	r3, [r9, #4]
   40220:	cmp	r6, #1
   40224:	beq	401c0 <GetDataSlab+0x1f1b4>
   40228:	mov	r1, r2
   4022c:	mov	r2, r1
   40230:	ldr	r3, [r1, #-4]!
   40234:	mul	ip, r3, ip
   40238:	ldr	r3, [r2]
   4023c:	mul	r0, r3, r0
   40240:	cmp	r1, lr
   40244:	bne	4022c <GetDataSlab+0x1f220>
   40248:	ldr	r3, [sp, #24]
   4024c:	str	ip, [r3]
   40250:	str	r0, [r7, #4]
   40254:	ldr	r3, [r5]
   40258:	ldr	r2, [sp, #20]
   4025c:	mul	r3, r3, r2
   40260:	str	r3, [sp, #20]
   40264:	ldr	r3, [r7]
   40268:	ldr	r2, [r4]
   4026c:	mla	fp, r2, r3, fp
   40270:	ldr	r3, [sp, #208]	; 0xd0
   40274:	cmp	r3, r6
   40278:	bgt	401dc <GetDataSlab+0x1f1d0>
   4027c:	ldr	r3, [sp, #8]
   40280:	add	r6, r3, fp, lsl #1
   40284:	ldr	r3, [sp, #28]
   40288:	cmp	r3, #1
   4028c:	beq	2f940 <GetDataSlab+0xe934>
   40290:	ldr	r3, [sp, #20]
   40294:	cmp	r3, #0
   40298:	movle	r3, #0
   4029c:	ble	24fa8 <GetDataSlab+0x3f9c>
   402a0:	mov	r3, #0
   402a4:	str	r3, [sp, #24]
   402a8:	b	2fbc8 <GetDataSlab+0xebbc>
   402ac:	ldr	r3, [r5]
   402b0:	ldr	r2, [sp, #20]
   402b4:	mul	r3, r3, r2
   402b8:	str	r3, [sp, #20]
   402bc:	ldr	r3, [r4]
   402c0:	ldr	r2, [r9]
   402c4:	mla	fp, r2, r3, fp
   402c8:	add	sl, sl, #4
   402cc:	add	r9, r9, #4
   402d0:	add	r6, r6, #1
   402d4:	add	r5, r5, #4
   402d8:	add	r4, r4, #4
   402dc:	ldr	r2, [sp, #16]
   402e0:	ldr	r3, [r2, #4]!
   402e4:	str	r2, [sp, #16]
   402e8:	sub	ip, r3, #1
   402ec:	str	sl, [sp, #24]
   402f0:	str	ip, [sl]
   402f4:	ldr	r2, [sp, #12]
   402f8:	ldr	r3, [r2], #4
   402fc:	str	r2, [sp, #12]
   40300:	mov	r0, r3
   40304:	mov	r7, r9
   40308:	str	r3, [r9, #4]
   4030c:	cmp	r6, #1
   40310:	beq	402ac <GetDataSlab+0x1f2a0>
   40314:	mov	r1, r2
   40318:	mov	r2, r1
   4031c:	ldr	r3, [r1, #-4]!
   40320:	mul	ip, r3, ip
   40324:	ldr	r3, [r2]
   40328:	mul	r0, r3, r0
   4032c:	cmp	r1, lr
   40330:	bne	40318 <GetDataSlab+0x1f30c>
   40334:	ldr	r3, [sp, #24]
   40338:	str	ip, [r3]
   4033c:	str	r0, [r7, #4]
   40340:	ldr	r3, [r5]
   40344:	ldr	r2, [sp, #20]
   40348:	mul	r3, r3, r2
   4034c:	str	r3, [sp, #20]
   40350:	ldr	r3, [r7]
   40354:	ldr	r2, [r4]
   40358:	mla	fp, r2, r3, fp
   4035c:	ldr	r3, [sp, #208]	; 0xd0
   40360:	cmp	r3, r6
   40364:	bgt	402c8 <GetDataSlab+0x1f2bc>
   40368:	ldr	r3, [sp, #8]
   4036c:	add	r6, r3, fp, lsl #1
   40370:	ldr	r3, [sp, #28]
   40374:	cmp	r3, #1
   40378:	beq	2fd20 <GetDataSlab+0xed14>
   4037c:	ldr	r3, [sp, #20]
   40380:	cmp	r3, #0
   40384:	movle	r3, #0
   40388:	ble	24fa8 <GetDataSlab+0x3f9c>
   4038c:	mov	r3, #0
   40390:	str	r3, [sp, #24]
   40394:	b	2ffa8 <GetDataSlab+0xef9c>
   40398:	ldr	r3, [r5]
   4039c:	ldr	r2, [sp, #20]
   403a0:	mul	r3, r3, r2
   403a4:	str	r3, [sp, #20]
   403a8:	ldr	r3, [r4]
   403ac:	ldr	r2, [r9]
   403b0:	mla	fp, r2, r3, fp
   403b4:	add	sl, sl, #4
   403b8:	add	r9, r9, #4
   403bc:	add	r6, r6, #1
   403c0:	add	r5, r5, #4
   403c4:	add	r4, r4, #4
   403c8:	ldr	r2, [sp, #16]
   403cc:	ldr	r3, [r2, #4]!
   403d0:	str	r2, [sp, #16]
   403d4:	sub	ip, r3, #1
   403d8:	str	sl, [sp, #24]
   403dc:	str	ip, [sl]
   403e0:	ldr	r2, [sp, #12]
   403e4:	ldr	r3, [r2], #4
   403e8:	str	r2, [sp, #12]
   403ec:	mov	r0, r3
   403f0:	mov	r7, r9
   403f4:	str	r3, [r9, #4]
   403f8:	cmp	r6, #1
   403fc:	beq	40398 <GetDataSlab+0x1f38c>
   40400:	mov	r1, r2
   40404:	mov	r2, r1
   40408:	ldr	r3, [r1, #-4]!
   4040c:	mul	ip, r3, ip
   40410:	ldr	r3, [r2]
   40414:	mul	r0, r3, r0
   40418:	cmp	r1, lr
   4041c:	bne	40404 <GetDataSlab+0x1f3f8>
   40420:	ldr	r3, [sp, #24]
   40424:	str	ip, [r3]
   40428:	str	r0, [r7, #4]
   4042c:	ldr	r3, [r5]
   40430:	ldr	r2, [sp, #20]
   40434:	mul	r3, r3, r2
   40438:	str	r3, [sp, #20]
   4043c:	ldr	r3, [r7]
   40440:	ldr	r2, [r4]
   40444:	mla	fp, r2, r3, fp
   40448:	ldr	r3, [sp, #208]	; 0xd0
   4044c:	cmp	r3, r6
   40450:	bgt	403b4 <GetDataSlab+0x1f3a8>
   40454:	ldr	r3, [sp, #8]
   40458:	add	r6, r3, fp
   4045c:	ldr	r3, [sp, #28]
   40460:	cmp	r3, #1
   40464:	beq	30100 <GetDataSlab+0xf0f4>
   40468:	ldr	r3, [sp, #20]
   4046c:	cmp	r3, #0
   40470:	movle	r3, #0
   40474:	ble	24fa8 <GetDataSlab+0x3f9c>
   40478:	mov	r3, #0
   4047c:	str	r3, [sp, #24]
   40480:	b	30388 <GetDataSlab+0xf37c>
   40484:	ldr	r3, [r5]
   40488:	ldr	r2, [sp, #20]
   4048c:	mul	r3, r3, r2
   40490:	str	r3, [sp, #20]
   40494:	ldr	r3, [r9]
   40498:	ldr	r2, [r4]
   4049c:	mla	fp, r2, r3, fp
   404a0:	add	sl, sl, #4
   404a4:	add	r9, r9, #4
   404a8:	add	r6, r6, #1
   404ac:	add	r5, r5, #4
   404b0:	add	r4, r4, #4
   404b4:	ldr	r2, [sp, #16]
   404b8:	ldr	r3, [r2, #4]!
   404bc:	str	r2, [sp, #16]
   404c0:	sub	ip, r3, #1
   404c4:	str	sl, [sp, #24]
   404c8:	str	ip, [sl]
   404cc:	ldr	r2, [sp, #12]
   404d0:	ldr	r3, [r2], #4
   404d4:	str	r2, [sp, #12]
   404d8:	mov	r0, r3
   404dc:	mov	r7, r9
   404e0:	str	r3, [r9, #4]
   404e4:	cmp	r6, #1
   404e8:	beq	40484 <GetDataSlab+0x1f478>
   404ec:	mov	r1, r2
   404f0:	mov	r2, r1
   404f4:	ldr	r3, [r1, #-4]!
   404f8:	mul	ip, r3, ip
   404fc:	ldr	r3, [r2]
   40500:	mul	r0, r3, r0
   40504:	cmp	r1, lr
   40508:	bne	404f0 <GetDataSlab+0x1f4e4>
   4050c:	ldr	r3, [sp, #24]
   40510:	str	ip, [r3]
   40514:	str	r0, [r7, #4]
   40518:	ldr	r3, [r5]
   4051c:	ldr	r2, [sp, #20]
   40520:	mul	r3, r3, r2
   40524:	str	r3, [sp, #20]
   40528:	ldr	r3, [r7]
   4052c:	ldr	r2, [r4]
   40530:	mla	fp, r2, r3, fp
   40534:	ldr	r3, [sp, #208]	; 0xd0
   40538:	cmp	r3, r6
   4053c:	bgt	404a0 <GetDataSlab+0x1f494>
   40540:	ldr	r3, [sp, #8]
   40544:	add	r6, r3, fp
   40548:	ldr	r3, [sp, #28]
   4054c:	cmp	r3, #1
   40550:	beq	304e0 <GetDataSlab+0xf4d4>
   40554:	ldr	r3, [sp, #20]
   40558:	cmp	r3, #0
   4055c:	movle	r3, #0
   40560:	ble	24fa8 <GetDataSlab+0x3f9c>
   40564:	mov	r3, #0
   40568:	str	r3, [sp, #24]
   4056c:	b	30768 <GetDataSlab+0xf75c>
   40570:	ldr	r3, [r6]
   40574:	ldr	r2, [sp, #20]
   40578:	mul	r3, r3, r2
   4057c:	str	r3, [sp, #20]
   40580:	ldr	r3, [r4]
   40584:	ldr	r2, [r9]
   40588:	mla	fp, r2, r3, fp
   4058c:	add	sl, sl, #4
   40590:	add	r9, r9, #4
   40594:	add	r5, r5, #1
   40598:	add	r6, r6, #4
   4059c:	add	r4, r4, #4
   405a0:	ldr	r2, [sp, #16]
   405a4:	ldr	r3, [r2, #4]!
   405a8:	str	r2, [sp, #16]
   405ac:	sub	ip, r3, #1
   405b0:	str	sl, [sp, #24]
   405b4:	str	ip, [sl]
   405b8:	ldr	r2, [sp, #12]
   405bc:	ldr	r3, [r2], #4
   405c0:	str	r2, [sp, #12]
   405c4:	mov	r0, r3
   405c8:	mov	r7, r9
   405cc:	str	r3, [r9, #4]
   405d0:	cmp	r5, #1
   405d4:	beq	40570 <GetDataSlab+0x1f564>
   405d8:	mov	r1, r2
   405dc:	mov	r2, r1
   405e0:	ldr	r3, [r1, #-4]!
   405e4:	mul	ip, r3, ip
   405e8:	ldr	r3, [r2]
   405ec:	mul	r0, r3, r0
   405f0:	cmp	r1, lr
   405f4:	bne	405dc <GetDataSlab+0x1f5d0>
   405f8:	ldr	r3, [sp, #24]
   405fc:	str	ip, [r3]
   40600:	str	r0, [r7, #4]
   40604:	ldr	r3, [r6]
   40608:	ldr	r2, [sp, #20]
   4060c:	mul	r3, r3, r2
   40610:	str	r3, [sp, #20]
   40614:	ldr	r3, [r7]
   40618:	ldr	r2, [r4]
   4061c:	mla	fp, r2, r3, fp
   40620:	ldr	r3, [sp, #208]	; 0xd0
   40624:	cmp	r3, r5
   40628:	bgt	4058c <GetDataSlab+0x1f580>
   4062c:	ldr	r3, [sp, #8]
   40630:	add	r5, r3, fp, lsl #3
   40634:	ldr	r3, [sp, #28]
   40638:	cmp	r3, #1
   4063c:	beq	30938 <GetDataSlab+0xf92c>
   40640:	ldr	r3, [sp, #20]
   40644:	cmp	r3, #0
   40648:	movgt	r3, #0
   4064c:	strgt	r3, [sp, #24]
   40650:	bgt	30bb8 <GetDataSlab+0xfbac>
   40654:	mov	r3, #0
   40658:	b	24fa8 <GetDataSlab+0x3f9c>
   4065c:	ldr	r3, [r6]
   40660:	ldr	r2, [sp, #20]
   40664:	mul	r3, r3, r2
   40668:	str	r3, [sp, #20]
   4066c:	ldr	r3, [r4]
   40670:	ldr	r2, [r9]
   40674:	mla	fp, r2, r3, fp
   40678:	add	sl, sl, #4
   4067c:	add	r9, r9, #4
   40680:	add	r5, r5, #1
   40684:	add	r6, r6, #4
   40688:	add	r4, r4, #4
   4068c:	ldr	r2, [sp, #16]
   40690:	ldr	r3, [r2, #4]!
   40694:	str	r2, [sp, #16]
   40698:	sub	ip, r3, #1
   4069c:	str	sl, [sp, #24]
   406a0:	str	ip, [sl]
   406a4:	ldr	r2, [sp, #12]
   406a8:	ldr	r3, [r2], #4
   406ac:	str	r2, [sp, #12]
   406b0:	mov	r0, r3
   406b4:	mov	r7, r9
   406b8:	str	r3, [r9, #4]
   406bc:	cmp	r5, #1
   406c0:	beq	4065c <GetDataSlab+0x1f650>
   406c4:	mov	r1, r2
   406c8:	mov	r2, r1
   406cc:	ldr	r3, [r1, #-4]!
   406d0:	mul	ip, r3, ip
   406d4:	ldr	r3, [r2]
   406d8:	mul	r0, r3, r0
   406dc:	cmp	r1, lr
   406e0:	bne	406c8 <GetDataSlab+0x1f6bc>
   406e4:	ldr	r3, [sp, #24]
   406e8:	str	ip, [r3]
   406ec:	str	r0, [r7, #4]
   406f0:	ldr	r3, [r6]
   406f4:	ldr	r2, [sp, #20]
   406f8:	mul	r3, r3, r2
   406fc:	str	r3, [sp, #20]
   40700:	ldr	r3, [r7]
   40704:	ldr	r2, [r4]
   40708:	mla	fp, r2, r3, fp
   4070c:	ldr	r3, [sp, #208]	; 0xd0
   40710:	cmp	r3, r5
   40714:	bgt	40678 <GetDataSlab+0x1f66c>
   40718:	ldr	r3, [sp, #8]
   4071c:	add	r5, r3, fp, lsl #3
   40720:	ldr	r3, [sp, #28]
   40724:	cmp	r3, #1
   40728:	beq	30ca4 <GetDataSlab+0xfc98>
   4072c:	ldr	r3, [sp, #20]
   40730:	cmp	r3, #0
   40734:	movle	r3, #0
   40738:	ble	24fa8 <GetDataSlab+0x3f9c>
   4073c:	mov	r3, #0
   40740:	str	r3, [sp, #24]
   40744:	b	30f2c <GetDataSlab+0xff20>
   40748:	ldr	r3, [r5]
   4074c:	ldr	r2, [sp, #20]
   40750:	mul	r3, r3, r2
   40754:	str	r3, [sp, #20]
   40758:	ldr	r3, [r4]
   4075c:	ldr	r2, [r9]
   40760:	mla	fp, r2, r3, fp
   40764:	add	sl, sl, #4
   40768:	add	r9, r9, #4
   4076c:	add	r6, r6, #1
   40770:	add	r5, r5, #4
   40774:	add	r4, r4, #4
   40778:	ldr	r2, [sp, #16]
   4077c:	ldr	r3, [r2, #4]!
   40780:	str	r2, [sp, #16]
   40784:	sub	ip, r3, #1
   40788:	str	sl, [sp, #24]
   4078c:	str	ip, [sl]
   40790:	ldr	r2, [sp, #12]
   40794:	ldr	r3, [r2], #4
   40798:	str	r2, [sp, #12]
   4079c:	mov	r0, r3
   407a0:	mov	r7, r9
   407a4:	str	r3, [r9, #4]
   407a8:	cmp	r6, #1
   407ac:	beq	40748 <GetDataSlab+0x1f73c>
   407b0:	mov	r1, r2
   407b4:	mov	r2, r1
   407b8:	ldr	r3, [r1, #-4]!
   407bc:	mul	ip, r3, ip
   407c0:	ldr	r3, [r2]
   407c4:	mul	r0, r3, r0
   407c8:	cmp	r1, lr
   407cc:	bne	407b4 <GetDataSlab+0x1f7a8>
   407d0:	ldr	r3, [sp, #24]
   407d4:	str	ip, [r3]
   407d8:	str	r0, [r7, #4]
   407dc:	ldr	r3, [r5]
   407e0:	ldr	r2, [sp, #20]
   407e4:	mul	r3, r3, r2
   407e8:	str	r3, [sp, #20]
   407ec:	ldr	r3, [r7]
   407f0:	ldr	r2, [r4]
   407f4:	mla	fp, r2, r3, fp
   407f8:	ldr	r3, [sp, #208]	; 0xd0
   407fc:	cmp	r3, r6
   40800:	bgt	40764 <GetDataSlab+0x1f758>
   40804:	ldr	r3, [sp, #8]
   40808:	add	r5, r3, fp, lsl #3
   4080c:	ldr	r3, [sp, #28]
   40810:	cmp	r3, #1
   40814:	beq	310b8 <GetDataSlab+0x100ac>
   40818:	ldr	r3, [sp, #20]
   4081c:	cmp	r3, #0
   40820:	movle	r3, #0
   40824:	ble	24fa8 <GetDataSlab+0x3f9c>
   40828:	mov	r3, #0
   4082c:	str	r3, [sp, #24]
   40830:	b	31344 <GetDataSlab+0x10338>
   40834:	ldr	r3, [r5]
   40838:	ldr	r2, [sp, #20]
   4083c:	mul	r3, r3, r2
   40840:	str	r3, [sp, #20]
   40844:	ldr	r3, [r4]
   40848:	ldr	r2, [r9]
   4084c:	mla	fp, r2, r3, fp
   40850:	add	sl, sl, #4
   40854:	add	r9, r9, #4
   40858:	add	r6, r6, #1
   4085c:	add	r5, r5, #4
   40860:	add	r4, r4, #4
   40864:	ldr	r2, [sp, #16]
   40868:	ldr	r3, [r2, #4]!
   4086c:	str	r2, [sp, #16]
   40870:	sub	ip, r3, #1
   40874:	str	sl, [sp, #24]
   40878:	str	ip, [sl]
   4087c:	ldr	r2, [sp, #12]
   40880:	ldr	r3, [r2], #4
   40884:	str	r2, [sp, #12]
   40888:	mov	r0, r3
   4088c:	mov	r7, r9
   40890:	str	r3, [r9, #4]
   40894:	cmp	r6, #1
   40898:	beq	40834 <GetDataSlab+0x1f828>
   4089c:	mov	r1, r2
   408a0:	mov	r2, r1
   408a4:	ldr	r3, [r1, #-4]!
   408a8:	mul	ip, r3, ip
   408ac:	ldr	r3, [r2]
   408b0:	mul	r0, r3, r0
   408b4:	cmp	r1, lr
   408b8:	bne	408a0 <GetDataSlab+0x1f894>
   408bc:	ldr	r3, [sp, #24]
   408c0:	str	ip, [r3]
   408c4:	str	r0, [r7, #4]
   408c8:	ldr	r3, [r5]
   408cc:	ldr	r2, [sp, #20]
   408d0:	mul	r3, r3, r2
   408d4:	str	r3, [sp, #20]
   408d8:	ldr	r3, [r7]
   408dc:	ldr	r2, [r4]
   408e0:	mla	fp, r2, r3, fp
   408e4:	ldr	r3, [sp, #208]	; 0xd0
   408e8:	cmp	r3, r6
   408ec:	bgt	40850 <GetDataSlab+0x1f844>
   408f0:	ldr	r3, [sp, #8]
   408f4:	add	r5, r3, fp, lsl #2
   408f8:	ldr	r3, [sp, #28]
   408fc:	cmp	r3, #1
   40900:	beq	314a0 <GetDataSlab+0x10494>
   40904:	ldr	r3, [sp, #20]
   40908:	cmp	r3, #0
   4090c:	movle	r3, #0
   40910:	ble	24fa8 <GetDataSlab+0x3f9c>
   40914:	mov	r3, #0
   40918:	str	r3, [sp, #24]
   4091c:	b	3172c <GetDataSlab+0x10720>
   40920:	ldr	r3, [r5]
   40924:	ldr	r2, [sp, #20]
   40928:	mul	r3, r3, r2
   4092c:	str	r3, [sp, #20]
   40930:	ldr	r3, [r9]
   40934:	ldr	r2, [r4]
   40938:	mla	fp, r2, r3, fp
   4093c:	add	sl, sl, #4
   40940:	add	r9, r9, #4
   40944:	add	r6, r6, #1
   40948:	add	r5, r5, #4
   4094c:	add	r4, r4, #4
   40950:	ldr	r2, [sp, #16]
   40954:	ldr	r3, [r2, #4]!
   40958:	str	r2, [sp, #16]
   4095c:	sub	ip, r3, #1
   40960:	str	sl, [sp, #24]
   40964:	str	ip, [sl]
   40968:	ldr	r2, [sp, #12]
   4096c:	ldr	r3, [r2], #4
   40970:	str	r2, [sp, #12]
   40974:	mov	r0, r3
   40978:	mov	r7, r9
   4097c:	str	r3, [r9, #4]
   40980:	cmp	r6, #1
   40984:	beq	40920 <GetDataSlab+0x1f914>
   40988:	mov	r1, r2
   4098c:	mov	r2, r1
   40990:	ldr	r3, [r1, #-4]!
   40994:	mul	ip, r3, ip
   40998:	ldr	r3, [r2]
   4099c:	mul	r0, r3, r0
   409a0:	cmp	r1, lr
   409a4:	bne	4098c <GetDataSlab+0x1f980>
   409a8:	ldr	r3, [sp, #24]
   409ac:	str	ip, [r3]
   409b0:	str	r0, [r7, #4]
   409b4:	ldr	r3, [r5]
   409b8:	ldr	r2, [sp, #20]
   409bc:	mul	r3, r3, r2
   409c0:	str	r3, [sp, #20]
   409c4:	ldr	r3, [r7]
   409c8:	ldr	r2, [r4]
   409cc:	mla	fp, r2, r3, fp
   409d0:	ldr	r3, [sp, #208]	; 0xd0
   409d4:	cmp	r3, r6
   409d8:	bgt	4093c <GetDataSlab+0x1f930>
   409dc:	ldr	r3, [sp, #8]
   409e0:	add	r5, r3, fp, lsl #2
   409e4:	ldr	r3, [sp, #28]
   409e8:	cmp	r3, #1
   409ec:	beq	31888 <GetDataSlab+0x1087c>
   409f0:	ldr	r3, [sp, #20]
   409f4:	cmp	r3, #0
   409f8:	movle	r3, #0
   409fc:	ble	24fa8 <GetDataSlab+0x3f9c>
   40a00:	mov	r3, #0
   40a04:	str	r3, [sp, #24]
   40a08:	b	31b10 <GetDataSlab+0x10b04>
   40a0c:	ldr	r3, [r5]
   40a10:	ldr	r2, [sp, #20]
   40a14:	mul	r3, r3, r2
   40a18:	str	r3, [sp, #20]
   40a1c:	ldr	r3, [r4]
   40a20:	ldr	r2, [r9]
   40a24:	mla	fp, r2, r3, fp
   40a28:	add	sl, sl, #4
   40a2c:	add	r9, r9, #4
   40a30:	add	r6, r6, #1
   40a34:	add	r5, r5, #4
   40a38:	add	r4, r4, #4
   40a3c:	ldr	r2, [sp, #16]
   40a40:	ldr	r3, [r2, #4]!
   40a44:	str	r2, [sp, #16]
   40a48:	sub	ip, r3, #1
   40a4c:	str	sl, [sp, #24]
   40a50:	str	ip, [sl]
   40a54:	ldr	r2, [sp, #12]
   40a58:	ldr	r3, [r2], #4
   40a5c:	str	r2, [sp, #12]
   40a60:	mov	r0, r3
   40a64:	mov	r7, r9
   40a68:	str	r3, [r9, #4]
   40a6c:	cmp	r6, #1
   40a70:	beq	40a0c <GetDataSlab+0x1fa00>
   40a74:	mov	r1, r2
   40a78:	mov	r2, r1
   40a7c:	ldr	r3, [r1, #-4]!
   40a80:	mul	ip, r3, ip
   40a84:	ldr	r3, [r2]
   40a88:	mul	r0, r3, r0
   40a8c:	cmp	r1, lr
   40a90:	bne	40a78 <GetDataSlab+0x1fa6c>
   40a94:	ldr	r3, [sp, #24]
   40a98:	str	ip, [r3]
   40a9c:	str	r0, [r7, #4]
   40aa0:	ldr	r3, [r5]
   40aa4:	ldr	r2, [sp, #20]
   40aa8:	mul	r3, r3, r2
   40aac:	str	r3, [sp, #20]
   40ab0:	ldr	r3, [r7]
   40ab4:	ldr	r2, [r4]
   40ab8:	mla	fp, r2, r3, fp
   40abc:	ldr	r3, [sp, #208]	; 0xd0
   40ac0:	cmp	r3, r6
   40ac4:	bgt	40a28 <GetDataSlab+0x1fa1c>
   40ac8:	ldr	r3, [sp, #8]
   40acc:	add	r5, r3, fp, lsl #2
   40ad0:	ldr	r3, [sp, #28]
   40ad4:	cmp	r3, #1
   40ad8:	beq	31c68 <GetDataSlab+0x10c5c>
   40adc:	ldr	r3, [sp, #20]
   40ae0:	cmp	r3, #0
   40ae4:	movle	r3, #0
   40ae8:	ble	24fa8 <GetDataSlab+0x3f9c>
   40aec:	mov	r3, #0
   40af0:	str	r3, [sp, #24]
   40af4:	b	31ef0 <GetDataSlab+0x10ee4>
   40af8:	ldr	r3, [r5]
   40afc:	ldr	r2, [sp, #20]
   40b00:	mul	r3, r3, r2
   40b04:	str	r3, [sp, #20]
   40b08:	ldr	r3, [r9]
   40b0c:	ldr	r2, [r4]
   40b10:	mla	fp, r2, r3, fp
   40b14:	add	sl, sl, #4
   40b18:	add	r9, r9, #4
   40b1c:	add	r6, r6, #1
   40b20:	add	r5, r5, #4
   40b24:	add	r4, r4, #4
   40b28:	ldr	r2, [sp, #16]
   40b2c:	ldr	r3, [r2, #4]!
   40b30:	str	r2, [sp, #16]
   40b34:	sub	ip, r3, #1
   40b38:	str	sl, [sp, #24]
   40b3c:	str	ip, [sl]
   40b40:	ldr	r2, [sp, #12]
   40b44:	ldr	r3, [r2], #4
   40b48:	str	r2, [sp, #12]
   40b4c:	mov	r0, r3
   40b50:	mov	r7, r9
   40b54:	str	r3, [r9, #4]
   40b58:	cmp	r6, #1
   40b5c:	beq	40af8 <GetDataSlab+0x1faec>
   40b60:	mov	r1, r2
   40b64:	mov	r2, r1
   40b68:	ldr	r3, [r1, #-4]!
   40b6c:	mul	ip, r3, ip
   40b70:	ldr	r3, [r2]
   40b74:	mul	r0, r3, r0
   40b78:	cmp	r1, lr
   40b7c:	bne	40b64 <GetDataSlab+0x1fb58>
   40b80:	ldr	r3, [sp, #24]
   40b84:	str	ip, [r3]
   40b88:	str	r0, [r7, #4]
   40b8c:	ldr	r3, [r5]
   40b90:	ldr	r2, [sp, #20]
   40b94:	mul	r3, r3, r2
   40b98:	str	r3, [sp, #20]
   40b9c:	ldr	r3, [r7]
   40ba0:	ldr	r2, [r4]
   40ba4:	mla	fp, r2, r3, fp
   40ba8:	ldr	r3, [sp, #208]	; 0xd0
   40bac:	cmp	r3, r6
   40bb0:	bgt	40b14 <GetDataSlab+0x1fb08>
   40bb4:	ldr	r3, [sp, #8]
   40bb8:	add	r6, r3, fp, lsl #1
   40bbc:	ldr	r3, [sp, #28]
   40bc0:	cmp	r3, #1
   40bc4:	beq	32048 <GetDataSlab+0x1103c>
   40bc8:	ldr	r3, [sp, #20]
   40bcc:	cmp	r3, #0
   40bd0:	movle	r3, #0
   40bd4:	ble	24fa8 <GetDataSlab+0x3f9c>
   40bd8:	mov	r3, #0
   40bdc:	str	r3, [sp, #24]
   40be0:	b	322d0 <GetDataSlab+0x112c4>
   40be4:	ldr	r3, [r5]
   40be8:	ldr	r2, [sp, #20]
   40bec:	mul	r3, r3, r2
   40bf0:	str	r3, [sp, #20]
   40bf4:	ldr	r3, [r4]
   40bf8:	ldr	r2, [r9]
   40bfc:	mla	fp, r2, r3, fp
   40c00:	add	sl, sl, #4
   40c04:	add	r9, r9, #4
   40c08:	add	r6, r6, #1
   40c0c:	add	r5, r5, #4
   40c10:	add	r4, r4, #4
   40c14:	ldr	r2, [sp, #16]
   40c18:	ldr	r3, [r2, #4]!
   40c1c:	str	r2, [sp, #16]
   40c20:	sub	ip, r3, #1
   40c24:	str	sl, [sp, #24]
   40c28:	str	ip, [sl]
   40c2c:	ldr	r2, [sp, #12]
   40c30:	ldr	r3, [r2], #4
   40c34:	str	r2, [sp, #12]
   40c38:	mov	r0, r3
   40c3c:	mov	r7, r9
   40c40:	str	r3, [r9, #4]
   40c44:	cmp	r6, #1
   40c48:	beq	40be4 <GetDataSlab+0x1fbd8>
   40c4c:	mov	r1, r2
   40c50:	mov	r2, r1
   40c54:	ldr	r3, [r1, #-4]!
   40c58:	mul	ip, r3, ip
   40c5c:	ldr	r3, [r2]
   40c60:	mul	r0, r3, r0
   40c64:	cmp	r1, lr
   40c68:	bne	40c50 <GetDataSlab+0x1fc44>
   40c6c:	ldr	r3, [sp, #24]
   40c70:	str	ip, [r3]
   40c74:	str	r0, [r7, #4]
   40c78:	ldr	r3, [r5]
   40c7c:	ldr	r2, [sp, #20]
   40c80:	mul	r3, r3, r2
   40c84:	str	r3, [sp, #20]
   40c88:	ldr	r3, [r7]
   40c8c:	ldr	r2, [r4]
   40c90:	mla	fp, r2, r3, fp
   40c94:	ldr	r3, [sp, #208]	; 0xd0
   40c98:	cmp	r3, r6
   40c9c:	bgt	40c00 <GetDataSlab+0x1fbf4>
   40ca0:	ldr	r3, [sp, #8]
   40ca4:	add	r6, r3, fp, lsl #1
   40ca8:	ldr	r3, [sp, #28]
   40cac:	cmp	r3, #1
   40cb0:	beq	32428 <GetDataSlab+0x1141c>
   40cb4:	ldr	r3, [sp, #20]
   40cb8:	cmp	r3, #0
   40cbc:	movle	r3, #0
   40cc0:	ble	24fa8 <GetDataSlab+0x3f9c>
   40cc4:	mov	r3, #0
   40cc8:	str	r3, [sp, #24]
   40ccc:	b	326b0 <GetDataSlab+0x116a4>
   40cd0:	ldr	r3, [r5]
   40cd4:	ldr	r2, [sp, #20]
   40cd8:	mul	r3, r3, r2
   40cdc:	str	r3, [sp, #20]
   40ce0:	ldr	r3, [r4]
   40ce4:	ldr	r2, [r9]
   40ce8:	mla	fp, r2, r3, fp
   40cec:	add	sl, sl, #4
   40cf0:	add	r9, r9, #4
   40cf4:	add	r6, r6, #1
   40cf8:	add	r5, r5, #4
   40cfc:	add	r4, r4, #4
   40d00:	ldr	r2, [sp, #16]
   40d04:	ldr	r3, [r2, #4]!
   40d08:	str	r2, [sp, #16]
   40d0c:	sub	ip, r3, #1
   40d10:	str	sl, [sp, #24]
   40d14:	str	ip, [sl]
   40d18:	ldr	r2, [sp, #12]
   40d1c:	ldr	r3, [r2], #4
   40d20:	str	r2, [sp, #12]
   40d24:	mov	r0, r3
   40d28:	mov	r7, r9
   40d2c:	str	r3, [r9, #4]
   40d30:	cmp	r6, #1
   40d34:	beq	40cd0 <GetDataSlab+0x1fcc4>
   40d38:	mov	r1, r2
   40d3c:	mov	r2, r1
   40d40:	ldr	r3, [r1, #-4]!
   40d44:	mul	ip, r3, ip
   40d48:	ldr	r3, [r2]
   40d4c:	mul	r0, r3, r0
   40d50:	cmp	r1, lr
   40d54:	bne	40d3c <GetDataSlab+0x1fd30>
   40d58:	ldr	r3, [sp, #24]
   40d5c:	str	ip, [r3]
   40d60:	str	r0, [r7, #4]
   40d64:	ldr	r3, [r5]
   40d68:	ldr	r2, [sp, #20]
   40d6c:	mul	r3, r3, r2
   40d70:	str	r3, [sp, #20]
   40d74:	ldr	r3, [r7]
   40d78:	ldr	r2, [r4]
   40d7c:	mla	fp, r2, r3, fp
   40d80:	ldr	r3, [sp, #208]	; 0xd0
   40d84:	cmp	r3, r6
   40d88:	bgt	40cec <GetDataSlab+0x1fce0>
   40d8c:	ldr	r3, [sp, #8]
   40d90:	add	r6, r3, fp
   40d94:	ldr	r3, [sp, #28]
   40d98:	cmp	r3, #1
   40d9c:	beq	32808 <GetDataSlab+0x117fc>
   40da0:	ldr	r3, [sp, #20]
   40da4:	cmp	r3, #0
   40da8:	movle	r3, #0
   40dac:	ble	24fa8 <GetDataSlab+0x3f9c>
   40db0:	mov	r3, #0
   40db4:	str	r3, [sp, #24]
   40db8:	b	32a90 <GetDataSlab+0x11a84>
   40dbc:	ldr	r3, [r5]
   40dc0:	ldr	r2, [sp, #20]
   40dc4:	mul	r3, r3, r2
   40dc8:	str	r3, [sp, #20]
   40dcc:	ldr	r3, [r9]
   40dd0:	ldr	r2, [r4]
   40dd4:	mla	fp, r2, r3, fp
   40dd8:	add	sl, sl, #4
   40ddc:	add	r9, r9, #4
   40de0:	add	r6, r6, #1
   40de4:	add	r5, r5, #4
   40de8:	add	r4, r4, #4
   40dec:	ldr	r2, [sp, #16]
   40df0:	ldr	r3, [r2, #4]!
   40df4:	str	r2, [sp, #16]
   40df8:	sub	ip, r3, #1
   40dfc:	str	sl, [sp, #24]
   40e00:	str	ip, [sl]
   40e04:	ldr	r2, [sp, #12]
   40e08:	ldr	r3, [r2], #4
   40e0c:	str	r2, [sp, #12]
   40e10:	mov	r0, r3
   40e14:	mov	r7, r9
   40e18:	str	r3, [r9, #4]
   40e1c:	cmp	r6, #1
   40e20:	beq	40dbc <GetDataSlab+0x1fdb0>
   40e24:	mov	r1, r2
   40e28:	mov	r2, r1
   40e2c:	ldr	r3, [r1, #-4]!
   40e30:	mul	ip, r3, ip
   40e34:	ldr	r3, [r2]
   40e38:	mul	r0, r3, r0
   40e3c:	cmp	r1, lr
   40e40:	bne	40e28 <GetDataSlab+0x1fe1c>
   40e44:	ldr	r3, [sp, #24]
   40e48:	str	ip, [r3]
   40e4c:	str	r0, [r7, #4]
   40e50:	ldr	r3, [r5]
   40e54:	ldr	r2, [sp, #20]
   40e58:	mul	r3, r3, r2
   40e5c:	str	r3, [sp, #20]
   40e60:	ldr	r3, [r7]
   40e64:	ldr	r2, [r4]
   40e68:	mla	fp, r2, r3, fp
   40e6c:	ldr	r3, [sp, #208]	; 0xd0
   40e70:	cmp	r3, r6
   40e74:	bgt	40dd8 <GetDataSlab+0x1fdcc>
   40e78:	ldr	r3, [sp, #8]
   40e7c:	add	r6, r3, fp
   40e80:	ldr	r3, [sp, #28]
   40e84:	cmp	r3, #1
   40e88:	beq	32be8 <GetDataSlab+0x11bdc>
   40e8c:	ldr	r3, [sp, #20]
   40e90:	cmp	r3, #0
   40e94:	movle	r3, #0
   40e98:	ble	24fa8 <GetDataSlab+0x3f9c>
   40e9c:	mov	r3, #0
   40ea0:	str	r3, [sp, #24]
   40ea4:	b	32e70 <GetDataSlab+0x11e64>
   40ea8:	ldr	r3, [r6]
   40eac:	ldr	r2, [sp, #20]
   40eb0:	mul	r3, r3, r2
   40eb4:	str	r3, [sp, #20]
   40eb8:	ldr	r3, [r4]
   40ebc:	ldr	r2, [r9]
   40ec0:	mla	fp, r2, r3, fp
   40ec4:	add	sl, sl, #4
   40ec8:	add	r9, r9, #4
   40ecc:	add	r5, r5, #1
   40ed0:	add	r6, r6, #4
   40ed4:	add	r4, r4, #4
   40ed8:	ldr	r2, [sp, #16]
   40edc:	ldr	r3, [r2, #4]!
   40ee0:	str	r2, [sp, #16]
   40ee4:	sub	ip, r3, #1
   40ee8:	str	sl, [sp, #24]
   40eec:	str	ip, [sl]
   40ef0:	ldr	r2, [sp, #12]
   40ef4:	ldr	r3, [r2], #4
   40ef8:	str	r2, [sp, #12]
   40efc:	mov	r0, r3
   40f00:	mov	r7, r9
   40f04:	str	r3, [r9, #4]
   40f08:	cmp	r5, #1
   40f0c:	beq	40ea8 <GetDataSlab+0x1fe9c>
   40f10:	mov	r1, r2
   40f14:	mov	r2, r1
   40f18:	ldr	r3, [r1, #-4]!
   40f1c:	mul	ip, r3, ip
   40f20:	ldr	r3, [r2]
   40f24:	mul	r0, r3, r0
   40f28:	cmp	r1, lr
   40f2c:	bne	40f14 <GetDataSlab+0x1ff08>
   40f30:	ldr	r3, [sp, #24]
   40f34:	str	ip, [r3]
   40f38:	str	r0, [r7, #4]
   40f3c:	ldr	r3, [r6]
   40f40:	ldr	r2, [sp, #20]
   40f44:	mul	r3, r3, r2
   40f48:	str	r3, [sp, #20]
   40f4c:	ldr	r3, [r7]
   40f50:	ldr	r2, [r4]
   40f54:	mla	fp, r2, r3, fp
   40f58:	ldr	r3, [sp, #208]	; 0xd0
   40f5c:	cmp	r3, r5
   40f60:	bgt	40ec4 <GetDataSlab+0x1feb8>
   40f64:	ldr	r3, [sp, #8]
   40f68:	add	r5, r3, fp, lsl #3
   40f6c:	ldr	r3, [sp, #28]
   40f70:	cmp	r3, #1
   40f74:	beq	33040 <GetDataSlab+0x12034>
   40f78:	ldr	r3, [sp, #20]
   40f7c:	cmp	r3, #0
   40f80:	movgt	r3, #0
   40f84:	strgt	r3, [sp, #24]
   40f88:	bgt	332c0 <GetDataSlab+0x122b4>
   40f8c:	mov	r3, #0
   40f90:	b	24fa8 <GetDataSlab+0x3f9c>
   40f94:	ldr	r3, [r6]
   40f98:	ldr	r2, [sp, #20]
   40f9c:	mul	r3, r3, r2
   40fa0:	str	r3, [sp, #20]
   40fa4:	ldr	r3, [r4]
   40fa8:	ldr	r2, [r9]
   40fac:	mla	fp, r2, r3, fp
   40fb0:	add	sl, sl, #4
   40fb4:	add	r9, r9, #4
   40fb8:	add	r5, r5, #1
   40fbc:	add	r6, r6, #4
   40fc0:	add	r4, r4, #4
   40fc4:	ldr	r2, [sp, #16]
   40fc8:	ldr	r3, [r2, #4]!
   40fcc:	str	r2, [sp, #16]
   40fd0:	sub	ip, r3, #1
   40fd4:	str	sl, [sp, #24]
   40fd8:	str	ip, [sl]
   40fdc:	ldr	r2, [sp, #12]
   40fe0:	ldr	r3, [r2], #4
   40fe4:	str	r2, [sp, #12]
   40fe8:	mov	r0, r3
   40fec:	mov	r7, r9
   40ff0:	str	r3, [r9, #4]
   40ff4:	cmp	r5, #1
   40ff8:	beq	40f94 <GetDataSlab+0x1ff88>
   40ffc:	mov	r1, r2
   41000:	mov	r2, r1
   41004:	ldr	r3, [r1, #-4]!
   41008:	mul	ip, r3, ip
   4100c:	ldr	r3, [r2]
   41010:	mul	r0, r3, r0
   41014:	cmp	r1, lr
   41018:	bne	41000 <GetDataSlab+0x1fff4>
   4101c:	ldr	r3, [sp, #24]
   41020:	str	ip, [r3]
   41024:	str	r0, [r7, #4]
   41028:	ldr	r3, [r6]
   4102c:	ldr	r2, [sp, #20]
   41030:	mul	r3, r3, r2
   41034:	str	r3, [sp, #20]
   41038:	ldr	r3, [r7]
   4103c:	ldr	r2, [r4]
   41040:	mla	fp, r2, r3, fp
   41044:	ldr	r3, [sp, #208]	; 0xd0
   41048:	cmp	r3, r5
   4104c:	bgt	40fb0 <GetDataSlab+0x1ffa4>
   41050:	ldr	r3, [sp, #8]
   41054:	add	r5, r3, fp, lsl #3
   41058:	ldr	r3, [sp, #28]
   4105c:	cmp	r3, #1
   41060:	beq	333ac <GetDataSlab+0x123a0>
   41064:	ldr	r3, [sp, #20]
   41068:	cmp	r3, #0
   4106c:	movle	r3, #0
   41070:	ble	24fa8 <GetDataSlab+0x3f9c>
   41074:	mov	r3, #0
   41078:	str	r3, [sp, #24]
   4107c:	b	33634 <GetDataSlab+0x12628>
   41080:	ldr	r3, [r5]
   41084:	ldr	r2, [sp, #20]
   41088:	mul	r3, r3, r2
   4108c:	str	r3, [sp, #20]
   41090:	ldr	r3, [r4]
   41094:	ldr	r2, [r9]
   41098:	mla	fp, r2, r3, fp
   4109c:	add	sl, sl, #4
   410a0:	add	r9, r9, #4
   410a4:	add	r6, r6, #1
   410a8:	add	r5, r5, #4
   410ac:	add	r4, r4, #4
   410b0:	ldr	r2, [sp, #16]
   410b4:	ldr	r3, [r2, #4]!
   410b8:	str	r2, [sp, #16]
   410bc:	sub	ip, r3, #1
   410c0:	str	sl, [sp, #24]
   410c4:	str	ip, [sl]
   410c8:	ldr	r2, [sp, #12]
   410cc:	ldr	r3, [r2], #4
   410d0:	str	r2, [sp, #12]
   410d4:	mov	r0, r3
   410d8:	mov	r7, r9
   410dc:	str	r3, [r9, #4]
   410e0:	cmp	r6, #1
   410e4:	beq	41080 <GetDataSlab+0x20074>
   410e8:	mov	r1, r2
   410ec:	mov	r2, r1
   410f0:	ldr	r3, [r1, #-4]!
   410f4:	mul	ip, r3, ip
   410f8:	ldr	r3, [r2]
   410fc:	mul	r0, r3, r0
   41100:	cmp	r1, lr
   41104:	bne	410ec <GetDataSlab+0x200e0>
   41108:	ldr	r3, [sp, #24]
   4110c:	str	ip, [r3]
   41110:	str	r0, [r7, #4]
   41114:	ldr	r3, [r5]
   41118:	ldr	r2, [sp, #20]
   4111c:	mul	r3, r3, r2
   41120:	str	r3, [sp, #20]
   41124:	ldr	r3, [r7]
   41128:	ldr	r2, [r4]
   4112c:	mla	fp, r2, r3, fp
   41130:	ldr	r3, [sp, #208]	; 0xd0
   41134:	cmp	r3, r6
   41138:	bgt	4109c <GetDataSlab+0x20090>
   4113c:	ldr	r3, [sp, #8]
   41140:	add	r5, r3, fp, lsl #3
   41144:	ldr	r3, [sp, #28]
   41148:	cmp	r3, #1
   4114c:	beq	337c0 <GetDataSlab+0x127b4>
   41150:	ldr	r3, [sp, #20]
   41154:	cmp	r3, #0
   41158:	movle	r3, #0
   4115c:	ble	24fa8 <GetDataSlab+0x3f9c>
   41160:	mov	r3, #0
   41164:	str	r3, [sp, #24]
   41168:	b	33a50 <GetDataSlab+0x12a44>
   4116c:	ldr	r3, [r5]
   41170:	ldr	r2, [sp, #20]
   41174:	mul	r3, r3, r2
   41178:	str	r3, [sp, #20]
   4117c:	ldr	r3, [r4]
   41180:	ldr	r2, [r9]
   41184:	mla	fp, r2, r3, fp
   41188:	add	sl, sl, #4
   4118c:	add	r9, r9, #4
   41190:	add	r6, r6, #1
   41194:	add	r5, r5, #4
   41198:	add	r4, r4, #4
   4119c:	ldr	r2, [sp, #16]
   411a0:	ldr	r3, [r2, #4]!
   411a4:	str	r2, [sp, #16]
   411a8:	sub	ip, r3, #1
   411ac:	str	sl, [sp, #24]
   411b0:	str	ip, [sl]
   411b4:	ldr	r2, [sp, #12]
   411b8:	ldr	r3, [r2], #4
   411bc:	str	r2, [sp, #12]
   411c0:	mov	r0, r3
   411c4:	mov	r7, r9
   411c8:	str	r3, [r9, #4]
   411cc:	cmp	r6, #1
   411d0:	beq	4116c <GetDataSlab+0x20160>
   411d4:	mov	r1, r2
   411d8:	mov	r2, r1
   411dc:	ldr	r3, [r1, #-4]!
   411e0:	mul	ip, r3, ip
   411e4:	ldr	r3, [r2]
   411e8:	mul	r0, r3, r0
   411ec:	cmp	r1, lr
   411f0:	bne	411d8 <GetDataSlab+0x201cc>
   411f4:	ldr	r3, [sp, #24]
   411f8:	str	ip, [r3]
   411fc:	str	r0, [r7, #4]
   41200:	ldr	r3, [r5]
   41204:	ldr	r2, [sp, #20]
   41208:	mul	r3, r3, r2
   4120c:	str	r3, [sp, #20]
   41210:	ldr	r3, [r7]
   41214:	ldr	r2, [r4]
   41218:	mla	fp, r2, r3, fp
   4121c:	ldr	r3, [sp, #208]	; 0xd0
   41220:	cmp	r3, r6
   41224:	bgt	41188 <GetDataSlab+0x2017c>
   41228:	ldr	r3, [sp, #8]
   4122c:	add	r5, r3, fp, lsl #2
   41230:	ldr	r3, [sp, #28]
   41234:	cmp	r3, #1
   41238:	beq	33bb0 <GetDataSlab+0x12ba4>
   4123c:	ldr	r3, [sp, #20]
   41240:	cmp	r3, #0
   41244:	movle	r3, #0
   41248:	ble	24fa8 <GetDataSlab+0x3f9c>
   4124c:	mov	r3, #0
   41250:	str	r3, [sp, #24]
   41254:	b	33e40 <GetDataSlab+0x12e34>
   41258:	ldr	r3, [r5]
   4125c:	ldr	r2, [sp, #20]
   41260:	mul	r3, r3, r2
   41264:	str	r3, [sp, #20]
   41268:	ldr	r3, [r9]
   4126c:	ldr	r2, [r4]
   41270:	mla	fp, r2, r3, fp
   41274:	add	sl, sl, #4
   41278:	add	r9, r9, #4
   4127c:	add	r6, r6, #1
   41280:	add	r5, r5, #4
   41284:	add	r4, r4, #4
   41288:	ldr	r2, [sp, #16]
   4128c:	ldr	r3, [r2, #4]!
   41290:	str	r2, [sp, #16]
   41294:	sub	ip, r3, #1
   41298:	str	sl, [sp, #24]
   4129c:	str	ip, [sl]
   412a0:	ldr	r2, [sp, #12]
   412a4:	ldr	r3, [r2], #4
   412a8:	str	r2, [sp, #12]
   412ac:	mov	r0, r3
   412b0:	mov	r7, r9
   412b4:	str	r3, [r9, #4]
   412b8:	cmp	r6, #1
   412bc:	beq	41258 <GetDataSlab+0x2024c>
   412c0:	mov	r1, r2
   412c4:	mov	r2, r1
   412c8:	ldr	r3, [r1, #-4]!
   412cc:	mul	ip, r3, ip
   412d0:	ldr	r3, [r2]
   412d4:	mul	r0, r3, r0
   412d8:	cmp	r1, lr
   412dc:	bne	412c4 <GetDataSlab+0x202b8>
   412e0:	ldr	r3, [sp, #24]
   412e4:	str	ip, [r3]
   412e8:	str	r0, [r7, #4]
   412ec:	ldr	r3, [r5]
   412f0:	ldr	r2, [sp, #20]
   412f4:	mul	r3, r3, r2
   412f8:	str	r3, [sp, #20]
   412fc:	ldr	r3, [r7]
   41300:	ldr	r2, [r4]
   41304:	mla	fp, r2, r3, fp
   41308:	ldr	r3, [sp, #208]	; 0xd0
   4130c:	cmp	r3, r6
   41310:	bgt	41274 <GetDataSlab+0x20268>
   41314:	ldr	r3, [sp, #8]
   41318:	add	r5, r3, fp, lsl #2
   4131c:	ldr	r3, [sp, #28]
   41320:	cmp	r3, #1
   41324:	beq	33fa0 <GetDataSlab+0x12f94>
   41328:	ldr	r3, [sp, #20]
   4132c:	cmp	r3, #0
   41330:	movle	r3, #0
   41334:	ble	24fa8 <GetDataSlab+0x3f9c>
   41338:	mov	r3, #0
   4133c:	str	r3, [sp, #24]
   41340:	b	34228 <GetDataSlab+0x1321c>
   41344:	ldr	r3, [r5]
   41348:	ldr	r2, [sp, #20]
   4134c:	mul	r3, r3, r2
   41350:	str	r3, [sp, #20]
   41354:	ldr	r3, [r4]
   41358:	ldr	r2, [r9]
   4135c:	mla	fp, r2, r3, fp
   41360:	add	sl, sl, #4
   41364:	add	r9, r9, #4
   41368:	add	r6, r6, #1
   4136c:	add	r5, r5, #4
   41370:	add	r4, r4, #4
   41374:	ldr	r2, [sp, #16]
   41378:	ldr	r3, [r2, #4]!
   4137c:	str	r2, [sp, #16]
   41380:	sub	ip, r3, #1
   41384:	str	sl, [sp, #24]
   41388:	str	ip, [sl]
   4138c:	ldr	r2, [sp, #12]
   41390:	ldr	r3, [r2], #4
   41394:	str	r2, [sp, #12]
   41398:	mov	r0, r3
   4139c:	mov	r7, r9
   413a0:	str	r3, [r9, #4]
   413a4:	cmp	r6, #1
   413a8:	beq	41344 <GetDataSlab+0x20338>
   413ac:	mov	r1, r2
   413b0:	mov	r2, r1
   413b4:	ldr	r3, [r1, #-4]!
   413b8:	mul	ip, r3, ip
   413bc:	ldr	r3, [r2]
   413c0:	mul	r0, r3, r0
   413c4:	cmp	r1, lr
   413c8:	bne	413b0 <GetDataSlab+0x203a4>
   413cc:	ldr	r3, [sp, #24]
   413d0:	str	ip, [r3]
   413d4:	str	r0, [r7, #4]
   413d8:	ldr	r3, [r5]
   413dc:	ldr	r2, [sp, #20]
   413e0:	mul	r3, r3, r2
   413e4:	str	r3, [sp, #20]
   413e8:	ldr	r3, [r7]
   413ec:	ldr	r2, [r4]
   413f0:	mla	fp, r2, r3, fp
   413f4:	ldr	r3, [sp, #208]	; 0xd0
   413f8:	cmp	r3, r6
   413fc:	bgt	41360 <GetDataSlab+0x20354>
   41400:	ldr	r3, [sp, #8]
   41404:	add	r5, r3, fp, lsl #2
   41408:	ldr	r3, [sp, #28]
   4140c:	cmp	r3, #1
   41410:	beq	34380 <GetDataSlab+0x13374>
   41414:	ldr	r3, [sp, #20]
   41418:	cmp	r3, #0
   4141c:	movle	r3, #0
   41420:	ble	24fa8 <GetDataSlab+0x3f9c>
   41424:	mov	r3, #0
   41428:	str	r3, [sp, #24]
   4142c:	b	34608 <GetDataSlab+0x135fc>
   41430:	ldr	r3, [r5]
   41434:	ldr	r2, [sp, #20]
   41438:	mul	r3, r3, r2
   4143c:	str	r3, [sp, #20]
   41440:	ldr	r3, [r9]
   41444:	ldr	r2, [r4]
   41448:	mla	fp, r2, r3, fp
   4144c:	add	sl, sl, #4
   41450:	add	r9, r9, #4
   41454:	add	r6, r6, #1
   41458:	add	r5, r5, #4
   4145c:	add	r4, r4, #4
   41460:	ldr	r2, [sp, #16]
   41464:	ldr	r3, [r2, #4]!
   41468:	str	r2, [sp, #16]
   4146c:	sub	ip, r3, #1
   41470:	str	sl, [sp, #24]
   41474:	str	ip, [sl]
   41478:	ldr	r2, [sp, #12]
   4147c:	ldr	r3, [r2], #4
   41480:	str	r2, [sp, #12]
   41484:	mov	r0, r3
   41488:	mov	r7, r9
   4148c:	str	r3, [r9, #4]
   41490:	cmp	r6, #1
   41494:	beq	41430 <GetDataSlab+0x20424>
   41498:	mov	r1, r2
   4149c:	mov	r2, r1
   414a0:	ldr	r3, [r1, #-4]!
   414a4:	mul	ip, r3, ip
   414a8:	ldr	r3, [r2]
   414ac:	mul	r0, r3, r0
   414b0:	cmp	lr, r1
   414b4:	bne	4149c <GetDataSlab+0x20490>
   414b8:	ldr	r3, [sp, #24]
   414bc:	str	ip, [r3]
   414c0:	str	r0, [r7, #4]
   414c4:	ldr	r3, [r5]
   414c8:	ldr	r2, [sp, #20]
   414cc:	mul	r3, r3, r2
   414d0:	str	r3, [sp, #20]
   414d4:	ldr	r3, [r7]
   414d8:	ldr	r2, [r4]
   414dc:	mla	fp, r2, r3, fp
   414e0:	ldr	r3, [sp, #208]	; 0xd0
   414e4:	cmp	r3, r6
   414e8:	bgt	4144c <GetDataSlab+0x20440>
   414ec:	ldr	r3, [sp, #8]
   414f0:	add	r6, r3, fp, lsl #1
   414f4:	ldr	r3, [sp, #28]
   414f8:	cmp	r3, #1
   414fc:	beq	34760 <GetDataSlab+0x13754>
   41500:	ldr	r3, [sp, #20]
   41504:	cmp	r3, #0
   41508:	movle	r3, #0
   4150c:	ble	24fa8 <GetDataSlab+0x3f9c>
   41510:	mov	r3, #0
   41514:	str	r3, [sp, #24]
   41518:	b	349e8 <GetDataSlab+0x139dc>
   4151c:	ldr	r3, [r5]
   41520:	ldr	r2, [sp, #20]
   41524:	mul	r3, r3, r2
   41528:	str	r3, [sp, #20]
   4152c:	ldr	r3, [r4]
   41530:	ldr	r2, [r9]
   41534:	mla	fp, r2, r3, fp
   41538:	add	sl, sl, #4
   4153c:	add	r9, r9, #4
   41540:	add	r6, r6, #1
   41544:	add	r5, r5, #4
   41548:	add	r4, r4, #4
   4154c:	ldr	r2, [sp, #16]
   41550:	ldr	r3, [r2, #4]!
   41554:	str	r2, [sp, #16]
   41558:	sub	ip, r3, #1
   4155c:	str	sl, [sp, #24]
   41560:	str	ip, [sl]
   41564:	ldr	r2, [sp, #12]
   41568:	ldr	r3, [r2], #4
   4156c:	str	r2, [sp, #12]
   41570:	mov	r0, r3
   41574:	mov	r7, r9
   41578:	str	r3, [r9, #4]
   4157c:	cmp	r6, #1
   41580:	beq	4151c <GetDataSlab+0x20510>
   41584:	mov	r1, r2
   41588:	mov	r2, r1
   4158c:	ldr	r3, [r1, #-4]!
   41590:	mul	ip, r3, ip
   41594:	ldr	r3, [r2]
   41598:	mul	r0, r3, r0
   4159c:	cmp	lr, r1
   415a0:	bne	41588 <GetDataSlab+0x2057c>
   415a4:	ldr	r3, [sp, #24]
   415a8:	str	ip, [r3]
   415ac:	str	r0, [r7, #4]
   415b0:	ldr	r3, [r5]
   415b4:	ldr	r2, [sp, #20]
   415b8:	mul	r3, r3, r2
   415bc:	str	r3, [sp, #20]
   415c0:	ldr	r3, [r7]
   415c4:	ldr	r2, [r4]
   415c8:	mla	fp, r2, r3, fp
   415cc:	ldr	r3, [sp, #208]	; 0xd0
   415d0:	cmp	r3, r6
   415d4:	bgt	41538 <GetDataSlab+0x2052c>
   415d8:	ldr	r3, [sp, #8]
   415dc:	add	r6, r3, fp, lsl #1
   415e0:	ldr	r3, [sp, #28]
   415e4:	cmp	r3, #1
   415e8:	beq	34b40 <GetDataSlab+0x13b34>
   415ec:	ldr	r3, [sp, #20]
   415f0:	cmp	r3, #0
   415f4:	movle	r3, #0
   415f8:	ble	24fa8 <GetDataSlab+0x3f9c>
   415fc:	mov	r3, #0
   41600:	str	r3, [sp, #24]
   41604:	b	34dc8 <GetDataSlab+0x13dbc>
   41608:	ldr	r3, [r5]
   4160c:	ldr	r2, [sp, #20]
   41610:	mul	r3, r3, r2
   41614:	str	r3, [sp, #20]
   41618:	ldr	r3, [r4]
   4161c:	ldr	r2, [r9]
   41620:	mla	fp, r2, r3, fp
   41624:	add	sl, sl, #4
   41628:	add	r9, r9, #4
   4162c:	add	r6, r6, #1
   41630:	add	r5, r5, #4
   41634:	add	r4, r4, #4
   41638:	ldr	r2, [sp, #16]
   4163c:	ldr	r3, [r2, #4]!
   41640:	str	r2, [sp, #16]
   41644:	sub	ip, r3, #1
   41648:	str	sl, [sp, #24]
   4164c:	str	ip, [sl]
   41650:	ldr	r2, [sp, #12]
   41654:	ldr	r3, [r2], #4
   41658:	str	r2, [sp, #12]
   4165c:	mov	r0, r3
   41660:	mov	r7, r9
   41664:	str	r3, [r9, #4]
   41668:	cmp	r6, #1
   4166c:	beq	41608 <GetDataSlab+0x205fc>
   41670:	mov	r1, r2
   41674:	mov	r2, r1
   41678:	ldr	r3, [r1, #-4]!
   4167c:	mul	ip, r3, ip
   41680:	ldr	r3, [r2]
   41684:	mul	r0, r3, r0
   41688:	cmp	lr, r1
   4168c:	bne	41674 <GetDataSlab+0x20668>
   41690:	ldr	r3, [sp, #24]
   41694:	str	ip, [r3]
   41698:	str	r0, [r7, #4]
   4169c:	ldr	r3, [r5]
   416a0:	ldr	r2, [sp, #20]
   416a4:	mul	r3, r3, r2
   416a8:	str	r3, [sp, #20]
   416ac:	ldr	r3, [r7]
   416b0:	ldr	r2, [r4]
   416b4:	mla	fp, r2, r3, fp
   416b8:	ldr	r3, [sp, #208]	; 0xd0
   416bc:	cmp	r3, r6
   416c0:	bgt	41624 <GetDataSlab+0x20618>
   416c4:	ldr	r3, [sp, #8]
   416c8:	add	r6, r3, fp
   416cc:	ldr	r3, [sp, #28]
   416d0:	cmp	r3, #1
   416d4:	beq	34f20 <GetDataSlab+0x13f14>
   416d8:	ldr	r3, [sp, #20]
   416dc:	cmp	r3, #0
   416e0:	movle	r3, #0
   416e4:	ble	24fa8 <GetDataSlab+0x3f9c>
   416e8:	mov	r3, #0
   416ec:	str	r3, [sp, #24]
   416f0:	b	351a8 <GetDataSlab+0x1419c>
   416f4:	ldr	r3, [r5]
   416f8:	ldr	r2, [sp, #20]
   416fc:	mul	r3, r3, r2
   41700:	str	r3, [sp, #20]
   41704:	ldr	r3, [r9]
   41708:	ldr	r2, [r4]
   4170c:	mla	fp, r2, r3, fp
   41710:	add	sl, sl, #4
   41714:	add	r9, r9, #4
   41718:	add	r6, r6, #1
   4171c:	add	r5, r5, #4
   41720:	add	r4, r4, #4
   41724:	ldr	r2, [sp, #16]
   41728:	ldr	r3, [r2, #4]!
   4172c:	str	r2, [sp, #16]
   41730:	sub	ip, r3, #1
   41734:	str	sl, [sp, #24]
   41738:	str	ip, [sl]
   4173c:	ldr	r2, [sp, #12]
   41740:	ldr	r3, [r2], #4
   41744:	str	r2, [sp, #12]
   41748:	mov	r0, r3
   4174c:	mov	r7, r9
   41750:	str	r3, [r9, #4]
   41754:	cmp	r6, #1
   41758:	beq	416f4 <GetDataSlab+0x206e8>
   4175c:	mov	r1, r2
   41760:	mov	r2, r1
   41764:	ldr	r3, [r1, #-4]!
   41768:	mul	ip, r3, ip
   4176c:	ldr	r3, [r2]
   41770:	mul	r0, r3, r0
   41774:	cmp	lr, r1
   41778:	bne	41760 <GetDataSlab+0x20754>
   4177c:	ldr	r3, [sp, #24]
   41780:	str	ip, [r3]
   41784:	str	r0, [r7, #4]
   41788:	ldr	r3, [r5]
   4178c:	ldr	r2, [sp, #20]
   41790:	mul	r3, r3, r2
   41794:	str	r3, [sp, #20]
   41798:	ldr	r3, [r7]
   4179c:	ldr	r2, [r4]
   417a0:	mla	fp, r2, r3, fp
   417a4:	ldr	r3, [sp, #208]	; 0xd0
   417a8:	cmp	r3, r6
   417ac:	bgt	41710 <GetDataSlab+0x20704>
   417b0:	ldr	r3, [sp, #8]
   417b4:	add	r6, r3, fp
   417b8:	ldr	r3, [sp, #28]
   417bc:	cmp	r3, #1
   417c0:	beq	35300 <GetDataSlab+0x142f4>
   417c4:	ldr	r3, [sp, #20]
   417c8:	cmp	r3, #0
   417cc:	movle	r3, #0
   417d0:	ble	24fa8 <GetDataSlab+0x3f9c>
   417d4:	mov	r3, #0
   417d8:	str	r3, [sp, #24]
   417dc:	b	35588 <GetDataSlab+0x1457c>
   417e0:	ldr	r3, [r6]
   417e4:	ldr	r2, [sp, #20]
   417e8:	mul	r3, r3, r2
   417ec:	str	r3, [sp, #20]
   417f0:	ldr	r3, [r4]
   417f4:	ldr	r2, [r9]
   417f8:	mla	fp, r2, r3, fp
   417fc:	add	sl, sl, #4
   41800:	add	r9, r9, #4
   41804:	add	r5, r5, #1
   41808:	add	r6, r6, #4
   4180c:	add	r4, r4, #4
   41810:	ldr	r2, [sp, #16]
   41814:	ldr	r3, [r2, #4]!
   41818:	str	r2, [sp, #16]
   4181c:	sub	ip, r3, #1
   41820:	str	sl, [sp, #24]
   41824:	str	ip, [sl]
   41828:	ldr	r2, [sp, #12]
   4182c:	ldr	r3, [r2], #4
   41830:	str	r2, [sp, #12]
   41834:	mov	r0, r3
   41838:	mov	r7, r9
   4183c:	str	r3, [r9, #4]
   41840:	cmp	r5, #1
   41844:	beq	417e0 <GetDataSlab+0x207d4>
   41848:	mov	r1, r2
   4184c:	mov	r2, r1
   41850:	ldr	r3, [r1, #-4]!
   41854:	mul	ip, r3, ip
   41858:	ldr	r3, [r2]
   4185c:	mul	r0, r3, r0
   41860:	cmp	r1, lr
   41864:	bne	4184c <GetDataSlab+0x20840>
   41868:	ldr	r3, [sp, #24]
   4186c:	str	ip, [r3]
   41870:	str	r0, [r7, #4]
   41874:	ldr	r3, [r6]
   41878:	ldr	r2, [sp, #20]
   4187c:	mul	r3, r3, r2
   41880:	str	r3, [sp, #20]
   41884:	ldr	r3, [r7]
   41888:	ldr	r2, [r4]
   4188c:	mla	fp, r2, r3, fp
   41890:	ldr	r3, [sp, #208]	; 0xd0
   41894:	cmp	r3, r5
   41898:	bgt	417fc <GetDataSlab+0x207f0>
   4189c:	ldr	r3, [sp, #8]
   418a0:	add	r5, r3, fp, lsl #3
   418a4:	ldr	r3, [sp, #28]
   418a8:	cmp	r3, #1
   418ac:	beq	35758 <GetDataSlab+0x1474c>
   418b0:	ldr	r3, [sp, #20]
   418b4:	cmp	r3, #0
   418b8:	movgt	r3, #0
   418bc:	strgt	r3, [sp, #24]
   418c0:	bgt	359d8 <GetDataSlab+0x149cc>
   418c4:	mov	r3, #0
   418c8:	b	24fa8 <GetDataSlab+0x3f9c>
   418cc:	ldr	r3, [r6]
   418d0:	ldr	r2, [sp, #20]
   418d4:	mul	r3, r3, r2
   418d8:	str	r3, [sp, #20]
   418dc:	ldr	r3, [r4]
   418e0:	ldr	r2, [r9]
   418e4:	mla	fp, r2, r3, fp
   418e8:	add	sl, sl, #4
   418ec:	add	r9, r9, #4
   418f0:	add	r5, r5, #1
   418f4:	add	r6, r6, #4
   418f8:	add	r4, r4, #4
   418fc:	ldr	r2, [sp, #16]
   41900:	ldr	r3, [r2, #4]!
   41904:	str	r2, [sp, #16]
   41908:	sub	ip, r3, #1
   4190c:	str	sl, [sp, #24]
   41910:	str	ip, [sl]
   41914:	ldr	r2, [sp, #12]
   41918:	ldr	r3, [r2], #4
   4191c:	str	r2, [sp, #12]
   41920:	mov	r0, r3
   41924:	mov	r7, r9
   41928:	str	r3, [r9, #4]
   4192c:	cmp	r5, #1
   41930:	beq	418cc <GetDataSlab+0x208c0>
   41934:	mov	r1, r2
   41938:	mov	r2, r1
   4193c:	ldr	r3, [r1, #-4]!
   41940:	mul	ip, r3, ip
   41944:	ldr	r3, [r2]
   41948:	mul	r0, r3, r0
   4194c:	cmp	r1, lr
   41950:	bne	41938 <GetDataSlab+0x2092c>
   41954:	ldr	r3, [sp, #24]
   41958:	str	ip, [r3]
   4195c:	str	r0, [r7, #4]
   41960:	ldr	r3, [r6]
   41964:	ldr	r2, [sp, #20]
   41968:	mul	r3, r3, r2
   4196c:	str	r3, [sp, #20]
   41970:	ldr	r3, [r7]
   41974:	ldr	r2, [r4]
   41978:	mla	fp, r2, r3, fp
   4197c:	ldr	r3, [sp, #208]	; 0xd0
   41980:	cmp	r3, r5
   41984:	bgt	418e8 <GetDataSlab+0x208dc>
   41988:	ldr	r3, [sp, #8]
   4198c:	add	r5, r3, fp, lsl #3
   41990:	ldr	r3, [sp, #28]
   41994:	cmp	r3, #1
   41998:	beq	35ac4 <GetDataSlab+0x14ab8>
   4199c:	ldr	r3, [sp, #20]
   419a0:	cmp	r3, #0
   419a4:	movle	r3, #0
   419a8:	ble	24fa8 <GetDataSlab+0x3f9c>
   419ac:	mov	r3, #0
   419b0:	str	r3, [sp, #24]
   419b4:	b	35d4c <GetDataSlab+0x14d40>
   419b8:	ldr	r3, [r5]
   419bc:	ldr	r2, [sp, #20]
   419c0:	mul	r3, r3, r2
   419c4:	str	r3, [sp, #20]
   419c8:	ldr	r3, [r4]
   419cc:	ldr	r2, [r9]
   419d0:	mla	fp, r2, r3, fp
   419d4:	add	sl, sl, #4
   419d8:	add	r9, r9, #4
   419dc:	add	r6, r6, #1
   419e0:	add	r5, r5, #4
   419e4:	add	r4, r4, #4
   419e8:	ldr	r2, [sp, #16]
   419ec:	ldr	r3, [r2, #4]!
   419f0:	str	r2, [sp, #16]
   419f4:	sub	ip, r3, #1
   419f8:	str	sl, [sp, #24]
   419fc:	str	ip, [sl]
   41a00:	ldr	r2, [sp, #12]
   41a04:	ldr	r3, [r2], #4
   41a08:	str	r2, [sp, #12]
   41a0c:	mov	r0, r3
   41a10:	mov	r7, r9
   41a14:	str	r3, [r9, #4]
   41a18:	cmp	r6, #1
   41a1c:	beq	419b8 <GetDataSlab+0x209ac>
   41a20:	mov	r1, r2
   41a24:	mov	r2, r1
   41a28:	ldr	r3, [r1, #-4]!
   41a2c:	mul	ip, r3, ip
   41a30:	ldr	r3, [r2]
   41a34:	mul	r0, r3, r0
   41a38:	cmp	r1, lr
   41a3c:	bne	41a24 <GetDataSlab+0x20a18>
   41a40:	ldr	r3, [sp, #24]
   41a44:	str	ip, [r3]
   41a48:	str	r0, [r7, #4]
   41a4c:	ldr	r3, [r5]
   41a50:	ldr	r2, [sp, #20]
   41a54:	mul	r3, r3, r2
   41a58:	str	r3, [sp, #20]
   41a5c:	ldr	r3, [r7]
   41a60:	ldr	r2, [r4]
   41a64:	mla	fp, r2, r3, fp
   41a68:	ldr	r3, [sp, #208]	; 0xd0
   41a6c:	cmp	r3, r6
   41a70:	bgt	419d4 <GetDataSlab+0x209c8>
   41a74:	ldr	r3, [sp, #8]
   41a78:	add	r5, r3, fp, lsl #3
   41a7c:	ldr	r3, [sp, #28]
   41a80:	cmp	r3, #1
   41a84:	beq	35ed8 <GetDataSlab+0x14ecc>
   41a88:	ldr	r3, [sp, #20]
   41a8c:	cmp	r3, #0
   41a90:	movle	r3, #0
   41a94:	ble	24fa8 <GetDataSlab+0x3f9c>
   41a98:	mov	r3, #0
   41a9c:	str	r3, [sp, #24]
   41aa0:	b	36168 <GetDataSlab+0x1515c>
   41aa4:	ldr	r3, [r5]
   41aa8:	ldr	r2, [sp, #20]
   41aac:	mul	r3, r3, r2
   41ab0:	str	r3, [sp, #20]
   41ab4:	ldr	r3, [r4]
   41ab8:	ldr	r2, [r9]
   41abc:	mla	fp, r2, r3, fp
   41ac0:	add	sl, sl, #4
   41ac4:	add	r9, r9, #4
   41ac8:	add	r6, r6, #1
   41acc:	add	r5, r5, #4
   41ad0:	add	r4, r4, #4
   41ad4:	ldr	r2, [sp, #16]
   41ad8:	ldr	r3, [r2, #4]!
   41adc:	str	r2, [sp, #16]
   41ae0:	sub	ip, r3, #1
   41ae4:	str	sl, [sp, #24]
   41ae8:	str	ip, [sl]
   41aec:	ldr	r2, [sp, #12]
   41af0:	ldr	r3, [r2], #4
   41af4:	str	r2, [sp, #12]
   41af8:	mov	r0, r3
   41afc:	mov	r7, r9
   41b00:	str	r3, [r9, #4]
   41b04:	cmp	r6, #1
   41b08:	beq	41aa4 <GetDataSlab+0x20a98>
   41b0c:	mov	r1, r2
   41b10:	mov	r2, r1
   41b14:	ldr	r3, [r1, #-4]!
   41b18:	mul	ip, r3, ip
   41b1c:	ldr	r3, [r2]
   41b20:	mul	r0, r3, r0
   41b24:	cmp	r1, lr
   41b28:	bne	41b10 <GetDataSlab+0x20b04>
   41b2c:	ldr	r3, [sp, #24]
   41b30:	str	ip, [r3]
   41b34:	str	r0, [r7, #4]
   41b38:	ldr	r3, [r5]
   41b3c:	ldr	r2, [sp, #20]
   41b40:	mul	r3, r3, r2
   41b44:	str	r3, [sp, #20]
   41b48:	ldr	r3, [r7]
   41b4c:	ldr	r2, [r4]
   41b50:	mla	fp, r2, r3, fp
   41b54:	ldr	r3, [sp, #208]	; 0xd0
   41b58:	cmp	r3, r6
   41b5c:	bgt	41ac0 <GetDataSlab+0x20ab4>
   41b60:	ldr	r3, [sp, #8]
   41b64:	add	r5, r3, fp, lsl #2
   41b68:	ldr	r3, [sp, #28]
   41b6c:	cmp	r3, #1
   41b70:	beq	362c8 <GetDataSlab+0x152bc>
   41b74:	ldr	r3, [sp, #20]
   41b78:	cmp	r3, #0
   41b7c:	movle	r3, #0
   41b80:	ble	24fa8 <GetDataSlab+0x3f9c>
   41b84:	mov	r3, #0
   41b88:	str	r3, [sp, #24]
   41b8c:	b	36558 <GetDataSlab+0x1554c>
   41b90:	ldr	r3, [r5]
   41b94:	ldr	r2, [sp, #20]
   41b98:	mul	r3, r3, r2
   41b9c:	str	r3, [sp, #20]
   41ba0:	ldr	r3, [r9]
   41ba4:	ldr	r2, [r4]
   41ba8:	mla	fp, r2, r3, fp
   41bac:	add	sl, sl, #4
   41bb0:	add	r9, r9, #4
   41bb4:	add	r6, r6, #1
   41bb8:	add	r5, r5, #4
   41bbc:	add	r4, r4, #4
   41bc0:	ldr	r2, [sp, #16]
   41bc4:	ldr	r3, [r2, #4]!
   41bc8:	str	r2, [sp, #16]
   41bcc:	sub	ip, r3, #1
   41bd0:	str	sl, [sp, #24]
   41bd4:	str	ip, [sl]
   41bd8:	ldr	r2, [sp, #12]
   41bdc:	ldr	r3, [r2], #4
   41be0:	str	r2, [sp, #12]
   41be4:	mov	r0, r3
   41be8:	mov	r7, r9
   41bec:	str	r3, [r9, #4]
   41bf0:	cmp	r6, #1
   41bf4:	beq	41b90 <GetDataSlab+0x20b84>
   41bf8:	mov	r1, r2
   41bfc:	mov	r2, r1
   41c00:	ldr	r3, [r1, #-4]!
   41c04:	mul	ip, r3, ip
   41c08:	ldr	r3, [r2]
   41c0c:	mul	r0, r3, r0
   41c10:	cmp	r1, lr
   41c14:	bne	41bfc <GetDataSlab+0x20bf0>
   41c18:	ldr	r3, [sp, #24]
   41c1c:	str	ip, [r3]
   41c20:	str	r0, [r7, #4]
   41c24:	ldr	r3, [r5]
   41c28:	ldr	r2, [sp, #20]
   41c2c:	mul	r3, r3, r2
   41c30:	str	r3, [sp, #20]
   41c34:	ldr	r3, [r7]
   41c38:	ldr	r2, [r4]
   41c3c:	mla	fp, r2, r3, fp
   41c40:	ldr	r3, [sp, #208]	; 0xd0
   41c44:	cmp	r3, r6
   41c48:	bgt	41bac <GetDataSlab+0x20ba0>
   41c4c:	ldr	r3, [sp, #8]
   41c50:	add	r5, r3, fp, lsl #2
   41c54:	ldr	r3, [sp, #28]
   41c58:	cmp	r3, #1
   41c5c:	beq	366b8 <GetDataSlab+0x156ac>
   41c60:	ldr	r3, [sp, #20]
   41c64:	cmp	r3, #0
   41c68:	movle	r3, #0
   41c6c:	ble	24fa8 <GetDataSlab+0x3f9c>
   41c70:	mov	r3, #0
   41c74:	str	r3, [sp, #24]
   41c78:	b	36940 <GetDataSlab+0x15934>
   41c7c:	ldr	r3, [r5]
   41c80:	ldr	r2, [sp, #20]
   41c84:	mul	r3, r3, r2
   41c88:	str	r3, [sp, #20]
   41c8c:	ldr	r3, [r4]
   41c90:	ldr	r2, [r9]
   41c94:	mla	fp, r2, r3, fp
   41c98:	add	sl, sl, #4
   41c9c:	add	r9, r9, #4
   41ca0:	add	r6, r6, #1
   41ca4:	add	r5, r5, #4
   41ca8:	add	r4, r4, #4
   41cac:	ldr	r2, [sp, #16]
   41cb0:	ldr	r3, [r2, #4]!
   41cb4:	str	r2, [sp, #16]
   41cb8:	sub	ip, r3, #1
   41cbc:	str	sl, [sp, #24]
   41cc0:	str	ip, [sl]
   41cc4:	ldr	r2, [sp, #12]
   41cc8:	ldr	r3, [r2], #4
   41ccc:	str	r2, [sp, #12]
   41cd0:	mov	r0, r3
   41cd4:	mov	r7, r9
   41cd8:	str	r3, [r9, #4]
   41cdc:	cmp	r6, #1
   41ce0:	beq	41c7c <GetDataSlab+0x20c70>
   41ce4:	mov	r1, r2
   41ce8:	mov	r2, r1
   41cec:	ldr	r3, [r1, #-4]!
   41cf0:	mul	ip, r3, ip
   41cf4:	ldr	r3, [r2]
   41cf8:	mul	r0, r3, r0
   41cfc:	cmp	r1, lr
   41d00:	bne	41ce8 <GetDataSlab+0x20cdc>
   41d04:	ldr	r3, [sp, #24]
   41d08:	str	ip, [r3]
   41d0c:	str	r0, [r7, #4]
   41d10:	ldr	r3, [r5]
   41d14:	ldr	r2, [sp, #20]
   41d18:	mul	r3, r3, r2
   41d1c:	str	r3, [sp, #20]
   41d20:	ldr	r3, [r7]
   41d24:	ldr	r2, [r4]
   41d28:	mla	fp, r2, r3, fp
   41d2c:	ldr	r3, [sp, #208]	; 0xd0
   41d30:	cmp	r3, r6
   41d34:	bgt	41c98 <GetDataSlab+0x20c8c>
   41d38:	ldr	r3, [sp, #8]
   41d3c:	add	r5, r3, fp, lsl #2
   41d40:	ldr	r3, [sp, #28]
   41d44:	cmp	r3, #1
   41d48:	beq	36a98 <GetDataSlab+0x15a8c>
   41d4c:	ldr	r3, [sp, #20]
   41d50:	cmp	r3, #0
   41d54:	movle	r3, #0
   41d58:	ble	24fa8 <GetDataSlab+0x3f9c>
   41d5c:	mov	r3, #0
   41d60:	str	r3, [sp, #24]
   41d64:	b	36d20 <GetDataSlab+0x15d14>
   41d68:	ldr	r3, [r5]
   41d6c:	ldr	r2, [sp, #20]
   41d70:	mul	r3, r3, r2
   41d74:	str	r3, [sp, #20]
   41d78:	ldr	r3, [r9]
   41d7c:	ldr	r2, [r4]
   41d80:	mla	fp, r2, r3, fp
   41d84:	add	sl, sl, #4
   41d88:	add	r9, r9, #4
   41d8c:	add	r6, r6, #1
   41d90:	add	r5, r5, #4
   41d94:	add	r4, r4, #4
   41d98:	ldr	r2, [sp, #16]
   41d9c:	ldr	r3, [r2, #4]!
   41da0:	str	r2, [sp, #16]
   41da4:	sub	ip, r3, #1
   41da8:	str	sl, [sp, #24]
   41dac:	str	ip, [sl]
   41db0:	ldr	r2, [sp, #12]
   41db4:	ldr	r3, [r2], #4
   41db8:	str	r2, [sp, #12]
   41dbc:	mov	r0, r3
   41dc0:	mov	r7, r9
   41dc4:	str	r3, [r9, #4]
   41dc8:	cmp	r6, #1
   41dcc:	beq	41d68 <GetDataSlab+0x20d5c>
   41dd0:	mov	r1, r2
   41dd4:	mov	r2, r1
   41dd8:	ldr	r3, [r1, #-4]!
   41ddc:	mul	ip, r3, ip
   41de0:	ldr	r3, [r2]
   41de4:	mul	r0, r3, r0
   41de8:	cmp	r1, lr
   41dec:	bne	41dd4 <GetDataSlab+0x20dc8>
   41df0:	ldr	r3, [sp, #24]
   41df4:	str	ip, [r3]
   41df8:	str	r0, [r7, #4]
   41dfc:	ldr	r3, [r5]
   41e00:	ldr	r2, [sp, #20]
   41e04:	mul	r3, r3, r2
   41e08:	str	r3, [sp, #20]
   41e0c:	ldr	r3, [r7]
   41e10:	ldr	r2, [r4]
   41e14:	mla	fp, r2, r3, fp
   41e18:	ldr	r3, [sp, #208]	; 0xd0
   41e1c:	cmp	r3, r6
   41e20:	bgt	41d84 <GetDataSlab+0x20d78>
   41e24:	ldr	r3, [sp, #8]
   41e28:	add	r6, r3, fp, lsl #1
   41e2c:	ldr	r3, [sp, #28]
   41e30:	cmp	r3, #1
   41e34:	beq	36e78 <GetDataSlab+0x15e6c>
   41e38:	ldr	r3, [sp, #20]
   41e3c:	cmp	r3, #0
   41e40:	movle	r3, #0
   41e44:	ble	24fa8 <GetDataSlab+0x3f9c>
   41e48:	mov	r3, #0
   41e4c:	str	r3, [sp, #24]
   41e50:	b	37100 <GetDataSlab+0x160f4>
   41e54:	ldr	r3, [r5]
   41e58:	ldr	r2, [sp, #20]
   41e5c:	mul	r3, r3, r2
   41e60:	str	r3, [sp, #20]
   41e64:	ldr	r3, [r4]
   41e68:	ldr	r2, [r9]
   41e6c:	mla	fp, r2, r3, fp
   41e70:	add	sl, sl, #4
   41e74:	add	r9, r9, #4
   41e78:	add	r6, r6, #1
   41e7c:	add	r5, r5, #4
   41e80:	add	r4, r4, #4
   41e84:	ldr	r2, [sp, #16]
   41e88:	ldr	r3, [r2, #4]!
   41e8c:	str	r2, [sp, #16]
   41e90:	sub	ip, r3, #1
   41e94:	str	sl, [sp, #24]
   41e98:	str	ip, [sl]
   41e9c:	ldr	r2, [sp, #12]
   41ea0:	ldr	r3, [r2], #4
   41ea4:	str	r2, [sp, #12]
   41ea8:	mov	r0, r3
   41eac:	mov	r7, r9
   41eb0:	str	r3, [r9, #4]
   41eb4:	cmp	r6, #1
   41eb8:	beq	41e54 <GetDataSlab+0x20e48>
   41ebc:	mov	r1, r2
   41ec0:	mov	r2, r1
   41ec4:	ldr	r3, [r1, #-4]!
   41ec8:	mul	ip, r3, ip
   41ecc:	ldr	r3, [r2]
   41ed0:	mul	r0, r3, r0
   41ed4:	cmp	r1, lr
   41ed8:	bne	41ec0 <GetDataSlab+0x20eb4>
   41edc:	ldr	r3, [sp, #24]
   41ee0:	str	ip, [r3]
   41ee4:	str	r0, [r7, #4]
   41ee8:	ldr	r3, [r5]
   41eec:	ldr	r2, [sp, #20]
   41ef0:	mul	r3, r3, r2
   41ef4:	str	r3, [sp, #20]
   41ef8:	ldr	r3, [r7]
   41efc:	ldr	r2, [r4]
   41f00:	mla	fp, r2, r3, fp
   41f04:	ldr	r3, [sp, #208]	; 0xd0
   41f08:	cmp	r3, r6
   41f0c:	bgt	41e70 <GetDataSlab+0x20e64>
   41f10:	ldr	r3, [sp, #8]
   41f14:	add	r6, r3, fp, lsl #1
   41f18:	ldr	r3, [sp, #28]
   41f1c:	cmp	r3, #1
   41f20:	beq	37258 <GetDataSlab+0x1624c>
   41f24:	ldr	r3, [sp, #20]
   41f28:	cmp	r3, #0
   41f2c:	movle	r3, #0
   41f30:	ble	24fa8 <GetDataSlab+0x3f9c>
   41f34:	mov	r3, #0
   41f38:	str	r3, [sp, #24]
   41f3c:	b	374e0 <GetDataSlab+0x164d4>
   41f40:	ldr	r3, [r5]
   41f44:	ldr	r2, [sp, #20]
   41f48:	mul	r3, r3, r2
   41f4c:	str	r3, [sp, #20]
   41f50:	ldr	r3, [r4]
   41f54:	ldr	r2, [r9]
   41f58:	mla	fp, r2, r3, fp
   41f5c:	add	sl, sl, #4
   41f60:	add	r9, r9, #4
   41f64:	add	r6, r6, #1
   41f68:	add	r5, r5, #4
   41f6c:	add	r4, r4, #4
   41f70:	ldr	r2, [sp, #16]
   41f74:	ldr	r3, [r2, #4]!
   41f78:	str	r2, [sp, #16]
   41f7c:	sub	ip, r3, #1
   41f80:	str	sl, [sp, #24]
   41f84:	str	ip, [sl]
   41f88:	ldr	r2, [sp, #12]
   41f8c:	ldr	r3, [r2], #4
   41f90:	str	r2, [sp, #12]
   41f94:	mov	r0, r3
   41f98:	mov	r7, r9
   41f9c:	str	r3, [r9, #4]
   41fa0:	cmp	r6, #1
   41fa4:	beq	41f40 <GetDataSlab+0x20f34>
   41fa8:	mov	r1, r2
   41fac:	mov	r2, r1
   41fb0:	ldr	r3, [r1, #-4]!
   41fb4:	mul	ip, r3, ip
   41fb8:	ldr	r3, [r2]
   41fbc:	mul	r0, r3, r0
   41fc0:	cmp	r1, lr
   41fc4:	bne	41fac <GetDataSlab+0x20fa0>
   41fc8:	ldr	r3, [sp, #24]
   41fcc:	str	ip, [r3]
   41fd0:	str	r0, [r7, #4]
   41fd4:	ldr	r3, [r5]
   41fd8:	ldr	r2, [sp, #20]
   41fdc:	mul	r3, r3, r2
   41fe0:	str	r3, [sp, #20]
   41fe4:	ldr	r3, [r7]
   41fe8:	ldr	r2, [r4]
   41fec:	mla	fp, r2, r3, fp
   41ff0:	ldr	r3, [sp, #208]	; 0xd0
   41ff4:	cmp	r3, r6
   41ff8:	bgt	41f5c <GetDataSlab+0x20f50>
   41ffc:	ldr	r3, [sp, #8]
   42000:	add	r6, r3, fp
   42004:	ldr	r3, [sp, #28]
   42008:	cmp	r3, #1
   4200c:	beq	37638 <GetDataSlab+0x1662c>
   42010:	ldr	r3, [sp, #20]
   42014:	cmp	r3, #0
   42018:	movle	r3, #0
   4201c:	ble	24fa8 <GetDataSlab+0x3f9c>
   42020:	mov	r3, #0
   42024:	str	r3, [sp, #24]
   42028:	b	378c0 <GetDataSlab+0x168b4>
   4202c:	ldr	r3, [r5]
   42030:	ldr	r2, [sp, #20]
   42034:	mul	r3, r3, r2
   42038:	str	r3, [sp, #20]
   4203c:	ldr	r3, [r9]
   42040:	ldr	r2, [r4]
   42044:	mla	fp, r2, r3, fp
   42048:	add	sl, sl, #4
   4204c:	add	r9, r9, #4
   42050:	add	r6, r6, #1
   42054:	add	r5, r5, #4
   42058:	add	r4, r4, #4
   4205c:	ldr	r2, [sp, #16]
   42060:	ldr	r3, [r2, #4]!
   42064:	str	r2, [sp, #16]
   42068:	sub	ip, r3, #1
   4206c:	str	sl, [sp, #24]
   42070:	str	ip, [sl]
   42074:	ldr	r2, [sp, #12]
   42078:	ldr	r3, [r2], #4
   4207c:	str	r2, [sp, #12]
   42080:	mov	r0, r3
   42084:	mov	r7, r9
   42088:	str	r3, [r9, #4]
   4208c:	cmp	r6, #1
   42090:	beq	4202c <GetDataSlab+0x21020>
   42094:	mov	r1, r2
   42098:	mov	r2, r1
   4209c:	ldr	r3, [r1, #-4]!
   420a0:	mul	ip, r3, ip
   420a4:	ldr	r3, [r2]
   420a8:	mul	r0, r3, r0
   420ac:	cmp	r1, lr
   420b0:	bne	42098 <GetDataSlab+0x2108c>
   420b4:	ldr	r3, [sp, #24]
   420b8:	str	ip, [r3]
   420bc:	str	r0, [r7, #4]
   420c0:	ldr	r3, [r5]
   420c4:	ldr	r2, [sp, #20]
   420c8:	mul	r3, r3, r2
   420cc:	str	r3, [sp, #20]
   420d0:	ldr	r3, [r7]
   420d4:	ldr	r2, [r4]
   420d8:	mla	fp, r2, r3, fp
   420dc:	ldr	r3, [sp, #208]	; 0xd0
   420e0:	cmp	r3, r6
   420e4:	bgt	42048 <GetDataSlab+0x2103c>
   420e8:	ldr	r3, [sp, #8]
   420ec:	add	r6, r3, fp
   420f0:	ldr	r3, [sp, #28]
   420f4:	cmp	r3, #1
   420f8:	beq	37a18 <GetDataSlab+0x16a0c>
   420fc:	ldr	r3, [sp, #20]
   42100:	cmp	r3, #0
   42104:	movle	r3, #0
   42108:	ble	24fa8 <GetDataSlab+0x3f9c>
   4210c:	mov	r3, #0
   42110:	str	r3, [sp, #24]
   42114:	b	37ca0 <GetDataSlab+0x16c94>
   42118:	ldr	r3, [r6]
   4211c:	ldr	r2, [sp, #20]
   42120:	mul	r3, r3, r2
   42124:	str	r3, [sp, #20]
   42128:	ldr	r3, [r4]
   4212c:	ldr	r2, [r9]
   42130:	mla	fp, r2, r3, fp
   42134:	add	sl, sl, #4
   42138:	add	r9, r9, #4
   4213c:	add	r5, r5, #1
   42140:	add	r6, r6, #4
   42144:	add	r4, r4, #4
   42148:	ldr	r2, [sp, #16]
   4214c:	ldr	r3, [r2, #4]!
   42150:	str	r2, [sp, #16]
   42154:	sub	ip, r3, #1
   42158:	str	sl, [sp, #24]
   4215c:	str	ip, [sl]
   42160:	ldr	r2, [sp, #12]
   42164:	ldr	r3, [r2], #4
   42168:	str	r2, [sp, #12]
   4216c:	mov	r0, r3
   42170:	mov	r7, r9
   42174:	str	r3, [r9, #4]
   42178:	cmp	r5, #1
   4217c:	beq	42118 <GetDataSlab+0x2110c>
   42180:	mov	r1, r2
   42184:	mov	r2, r1
   42188:	ldr	r3, [r1, #-4]!
   4218c:	mul	ip, r3, ip
   42190:	ldr	r3, [r2]
   42194:	mul	r0, r3, r0
   42198:	cmp	r1, lr
   4219c:	bne	42184 <GetDataSlab+0x21178>
   421a0:	ldr	r3, [sp, #24]
   421a4:	str	ip, [r3]
   421a8:	str	r0, [r7, #4]
   421ac:	ldr	r3, [r6]
   421b0:	ldr	r2, [sp, #20]
   421b4:	mul	r3, r3, r2
   421b8:	str	r3, [sp, #20]
   421bc:	ldr	r3, [r7]
   421c0:	ldr	r2, [r4]
   421c4:	mla	fp, r2, r3, fp
   421c8:	ldr	r3, [sp, #208]	; 0xd0
   421cc:	cmp	r3, r5
   421d0:	bgt	42134 <GetDataSlab+0x21128>
   421d4:	ldr	r3, [sp, #8]
   421d8:	add	r5, r3, fp, lsl #3
   421dc:	ldr	r3, [sp, #28]
   421e0:	cmp	r3, #1
   421e4:	beq	37e70 <GetDataSlab+0x16e64>
   421e8:	ldr	r3, [sp, #20]
   421ec:	cmp	r3, #0
   421f0:	movgt	r3, #0
   421f4:	strgt	r3, [sp, #24]
   421f8:	bgt	380f0 <GetDataSlab+0x170e4>
   421fc:	mov	r3, #0
   42200:	b	24fa8 <GetDataSlab+0x3f9c>
   42204:	ldr	r3, [r6]
   42208:	ldr	r2, [sp, #20]
   4220c:	mul	r3, r3, r2
   42210:	str	r3, [sp, #20]
   42214:	ldr	r3, [r4]
   42218:	ldr	r2, [r9]
   4221c:	mla	fp, r2, r3, fp
   42220:	add	sl, sl, #4
   42224:	add	r9, r9, #4
   42228:	add	r5, r5, #1
   4222c:	add	r6, r6, #4
   42230:	add	r4, r4, #4
   42234:	ldr	r2, [sp, #16]
   42238:	ldr	r3, [r2, #4]!
   4223c:	str	r2, [sp, #16]
   42240:	sub	ip, r3, #1
   42244:	str	sl, [sp, #24]
   42248:	str	ip, [sl]
   4224c:	ldr	r2, [sp, #12]
   42250:	ldr	r3, [r2], #4
   42254:	str	r2, [sp, #12]
   42258:	mov	r0, r3
   4225c:	mov	r7, r9
   42260:	str	r3, [r9, #4]
   42264:	cmp	r5, #1
   42268:	beq	42204 <GetDataSlab+0x211f8>
   4226c:	mov	r1, r2
   42270:	mov	r2, r1
   42274:	ldr	r3, [r1, #-4]!
   42278:	mul	ip, r3, ip
   4227c:	ldr	r3, [r2]
   42280:	mul	r0, r3, r0
   42284:	cmp	r1, lr
   42288:	bne	42270 <GetDataSlab+0x21264>
   4228c:	ldr	r3, [sp, #24]
   42290:	str	ip, [r3]
   42294:	str	r0, [r7, #4]
   42298:	ldr	r3, [r6]
   4229c:	ldr	r2, [sp, #20]
   422a0:	mul	r3, r3, r2
   422a4:	str	r3, [sp, #20]
   422a8:	ldr	r3, [r7]
   422ac:	ldr	r2, [r4]
   422b0:	mla	fp, r2, r3, fp
   422b4:	ldr	r3, [sp, #208]	; 0xd0
   422b8:	cmp	r3, r5
   422bc:	bgt	42220 <GetDataSlab+0x21214>
   422c0:	ldr	r3, [sp, #8]
   422c4:	add	r5, r3, fp, lsl #3
   422c8:	ldr	r3, [sp, #28]
   422cc:	cmp	r3, #1
   422d0:	beq	381dc <GetDataSlab+0x171d0>
   422d4:	ldr	r3, [sp, #20]
   422d8:	cmp	r3, #0
   422dc:	movle	r3, #0
   422e0:	ble	24fa8 <GetDataSlab+0x3f9c>
   422e4:	mov	r3, #0
   422e8:	str	r3, [sp, #24]
   422ec:	b	38464 <GetDataSlab+0x17458>
   422f0:	ldr	r3, [r5]
   422f4:	ldr	r2, [sp, #20]
   422f8:	mul	r3, r3, r2
   422fc:	str	r3, [sp, #20]
   42300:	ldr	r3, [r4]
   42304:	ldr	r2, [r9]
   42308:	mla	fp, r2, r3, fp
   4230c:	add	sl, sl, #4
   42310:	add	r9, r9, #4
   42314:	add	r6, r6, #1
   42318:	add	r5, r5, #4
   4231c:	add	r4, r4, #4
   42320:	ldr	r2, [sp, #16]
   42324:	ldr	r3, [r2, #4]!
   42328:	str	r2, [sp, #16]
   4232c:	sub	ip, r3, #1
   42330:	str	sl, [sp, #24]
   42334:	str	ip, [sl]
   42338:	ldr	r2, [sp, #12]
   4233c:	ldr	r3, [r2], #4
   42340:	str	r2, [sp, #12]
   42344:	mov	r0, r3
   42348:	mov	r7, r9
   4234c:	str	r3, [r9, #4]
   42350:	cmp	r6, #1
   42354:	beq	422f0 <GetDataSlab+0x212e4>
   42358:	mov	r1, r2
   4235c:	mov	r2, r1
   42360:	ldr	r3, [r1, #-4]!
   42364:	mul	ip, r3, ip
   42368:	ldr	r3, [r2]
   4236c:	mul	r0, r3, r0
   42370:	cmp	lr, r1
   42374:	bne	4235c <GetDataSlab+0x21350>
   42378:	ldr	r3, [sp, #24]
   4237c:	str	ip, [r3]
   42380:	str	r0, [r7, #4]
   42384:	ldr	r3, [r5]
   42388:	ldr	r2, [sp, #20]
   4238c:	mul	r3, r3, r2
   42390:	str	r3, [sp, #20]
   42394:	ldr	r3, [r7]
   42398:	ldr	r2, [r4]
   4239c:	mla	fp, r2, r3, fp
   423a0:	ldr	r3, [sp, #208]	; 0xd0
   423a4:	cmp	r3, r6
   423a8:	bgt	4230c <GetDataSlab+0x21300>
   423ac:	ldr	r3, [sp, #8]
   423b0:	add	r5, r3, fp, lsl #3
   423b4:	ldr	r3, [sp, #28]
   423b8:	cmp	r3, #1
   423bc:	beq	385f0 <GetDataSlab+0x175e4>
   423c0:	ldr	r3, [sp, #20]
   423c4:	cmp	r3, #0
   423c8:	movle	r3, #0
   423cc:	ble	24fa8 <GetDataSlab+0x3f9c>
   423d0:	mov	r3, #0
   423d4:	str	r3, [sp, #24]
   423d8:	b	38880 <GetDataSlab+0x17874>
   423dc:	ldr	r3, [r5]
   423e0:	ldr	r2, [sp, #20]
   423e4:	mul	r3, r3, r2
   423e8:	str	r3, [sp, #20]
   423ec:	ldr	r3, [r4]
   423f0:	ldr	r2, [r9]
   423f4:	mla	fp, r2, r3, fp
   423f8:	add	sl, sl, #4
   423fc:	add	r9, r9, #4
   42400:	add	r6, r6, #1
   42404:	add	r5, r5, #4
   42408:	add	r4, r4, #4
   4240c:	ldr	r2, [sp, #16]
   42410:	ldr	r3, [r2, #4]!
   42414:	str	r2, [sp, #16]
   42418:	sub	ip, r3, #1
   4241c:	str	sl, [sp, #24]
   42420:	str	ip, [sl]
   42424:	ldr	r2, [sp, #12]
   42428:	ldr	r3, [r2], #4
   4242c:	str	r2, [sp, #12]
   42430:	mov	r0, r3
   42434:	mov	r7, r9
   42438:	str	r3, [r9, #4]
   4243c:	cmp	r6, #1
   42440:	beq	423dc <GetDataSlab+0x213d0>
   42444:	mov	r1, r2
   42448:	mov	r2, r1
   4244c:	ldr	r3, [r1, #-4]!
   42450:	mul	ip, r3, ip
   42454:	ldr	r3, [r2]
   42458:	mul	r0, r3, r0
   4245c:	cmp	r1, lr
   42460:	bne	42448 <GetDataSlab+0x2143c>
   42464:	ldr	r3, [sp, #24]
   42468:	str	ip, [r3]
   4246c:	str	r0, [r7, #4]
   42470:	ldr	r3, [r5]
   42474:	ldr	r2, [sp, #20]
   42478:	mul	r3, r3, r2
   4247c:	str	r3, [sp, #20]
   42480:	ldr	r3, [r7]
   42484:	ldr	r2, [r4]
   42488:	mla	fp, r2, r3, fp
   4248c:	ldr	r3, [sp, #208]	; 0xd0
   42490:	cmp	r3, r6
   42494:	bgt	423f8 <GetDataSlab+0x213ec>
   42498:	ldr	r3, [sp, #8]
   4249c:	add	r5, r3, fp, lsl #2
   424a0:	ldr	r3, [sp, #28]
   424a4:	cmp	r3, #1
   424a8:	beq	389e0 <GetDataSlab+0x179d4>
   424ac:	ldr	r3, [sp, #20]
   424b0:	cmp	r3, #0
   424b4:	movle	r3, #0
   424b8:	ble	24fa8 <GetDataSlab+0x3f9c>
   424bc:	mov	r3, #0
   424c0:	str	r3, [sp, #24]
   424c4:	b	38c70 <GetDataSlab+0x17c64>
   424c8:	ldr	r3, [r5]
   424cc:	ldr	r2, [sp, #20]
   424d0:	mul	r3, r3, r2
   424d4:	str	r3, [sp, #20]
   424d8:	ldr	r3, [r9]
   424dc:	ldr	r2, [r4]
   424e0:	mla	fp, r2, r3, fp
   424e4:	add	sl, sl, #4
   424e8:	add	r9, r9, #4
   424ec:	add	r6, r6, #1
   424f0:	add	r5, r5, #4
   424f4:	add	r4, r4, #4
   424f8:	ldr	r2, [sp, #16]
   424fc:	ldr	r3, [r2, #4]!
   42500:	str	r2, [sp, #16]
   42504:	sub	ip, r3, #1
   42508:	str	sl, [sp, #24]
   4250c:	str	ip, [sl]
   42510:	ldr	r2, [sp, #12]
   42514:	ldr	r3, [r2], #4
   42518:	str	r2, [sp, #12]
   4251c:	mov	r0, r3
   42520:	mov	r7, r9
   42524:	str	r3, [r9, #4]
   42528:	cmp	r6, #1
   4252c:	beq	424c8 <GetDataSlab+0x214bc>
   42530:	mov	r1, r2
   42534:	mov	r2, r1
   42538:	ldr	r3, [r1, #-4]!
   4253c:	mul	ip, r3, ip
   42540:	ldr	r3, [r2]
   42544:	mul	r0, r3, r0
   42548:	cmp	r1, lr
   4254c:	bne	42534 <GetDataSlab+0x21528>
   42550:	ldr	r3, [sp, #24]
   42554:	str	ip, [r3]
   42558:	str	r0, [r7, #4]
   4255c:	ldr	r3, [r5]
   42560:	ldr	r2, [sp, #20]
   42564:	mul	r3, r3, r2
   42568:	str	r3, [sp, #20]
   4256c:	ldr	r3, [r7]
   42570:	ldr	r2, [r4]
   42574:	mla	fp, r2, r3, fp
   42578:	ldr	r3, [sp, #208]	; 0xd0
   4257c:	cmp	r3, r6
   42580:	bgt	424e4 <GetDataSlab+0x214d8>
   42584:	ldr	r3, [sp, #8]
   42588:	add	r5, r3, fp, lsl #2
   4258c:	ldr	r3, [sp, #28]
   42590:	cmp	r3, #1
   42594:	beq	38dd0 <GetDataSlab+0x17dc4>
   42598:	ldr	r3, [sp, #20]
   4259c:	cmp	r3, #0
   425a0:	movle	r3, #0
   425a4:	ble	24fa8 <GetDataSlab+0x3f9c>
   425a8:	mov	r3, #0
   425ac:	str	r3, [sp, #24]
   425b0:	b	39058 <GetDataSlab+0x1804c>
   425b4:	ldr	r3, [r5]
   425b8:	ldr	r2, [sp, #20]
   425bc:	mul	r3, r3, r2
   425c0:	str	r3, [sp, #20]
   425c4:	ldr	r3, [r4]
   425c8:	ldr	r2, [r9]
   425cc:	mla	fp, r2, r3, fp
   425d0:	add	sl, sl, #4
   425d4:	add	r9, r9, #4
   425d8:	add	r6, r6, #1
   425dc:	add	r5, r5, #4
   425e0:	add	r4, r4, #4
   425e4:	ldr	r2, [sp, #16]
   425e8:	ldr	r3, [r2, #4]!
   425ec:	str	r2, [sp, #16]
   425f0:	sub	ip, r3, #1
   425f4:	str	sl, [sp, #24]
   425f8:	str	ip, [sl]
   425fc:	ldr	r2, [sp, #12]
   42600:	ldr	r3, [r2], #4
   42604:	str	r2, [sp, #12]
   42608:	mov	r0, r3
   4260c:	mov	r7, r9
   42610:	str	r3, [r9, #4]
   42614:	cmp	r6, #1
   42618:	beq	425b4 <GetDataSlab+0x215a8>
   4261c:	mov	r1, r2
   42620:	mov	r2, r1
   42624:	ldr	r3, [r1, #-4]!
   42628:	mul	ip, r3, ip
   4262c:	ldr	r3, [r2]
   42630:	mul	r0, r3, r0
   42634:	cmp	lr, r1
   42638:	bne	42620 <GetDataSlab+0x21614>
   4263c:	ldr	r3, [sp, #24]
   42640:	str	ip, [r3]
   42644:	str	r0, [r7, #4]
   42648:	ldr	r3, [r5]
   4264c:	ldr	r2, [sp, #20]
   42650:	mul	r3, r3, r2
   42654:	str	r3, [sp, #20]
   42658:	ldr	r3, [r7]
   4265c:	ldr	r2, [r4]
   42660:	mla	fp, r2, r3, fp
   42664:	ldr	r3, [sp, #208]	; 0xd0
   42668:	cmp	r3, r6
   4266c:	bgt	425d0 <GetDataSlab+0x215c4>
   42670:	ldr	r3, [sp, #8]
   42674:	add	r5, r3, fp, lsl #2
   42678:	ldr	r3, [sp, #28]
   4267c:	cmp	r3, #1
   42680:	beq	391b0 <GetDataSlab+0x181a4>
   42684:	ldr	r3, [sp, #20]
   42688:	cmp	r3, #0
   4268c:	movle	r3, #0
   42690:	ble	24fa8 <GetDataSlab+0x3f9c>
   42694:	mov	r3, #0
   42698:	str	r3, [sp, #24]
   4269c:	b	39438 <GetDataSlab+0x1842c>
   426a0:	ldr	r3, [r5]
   426a4:	ldr	r2, [sp, #20]
   426a8:	mul	r3, r3, r2
   426ac:	str	r3, [sp, #20]
   426b0:	ldr	r3, [r9]
   426b4:	ldr	r2, [r4]
   426b8:	mla	fp, r2, r3, fp
   426bc:	add	sl, sl, #4
   426c0:	add	r9, r9, #4
   426c4:	add	r6, r6, #1
   426c8:	add	r5, r5, #4
   426cc:	add	r4, r4, #4
   426d0:	ldr	r2, [sp, #16]
   426d4:	ldr	r3, [r2, #4]!
   426d8:	str	r2, [sp, #16]
   426dc:	sub	ip, r3, #1
   426e0:	str	sl, [sp, #24]
   426e4:	str	ip, [sl]
   426e8:	ldr	r2, [sp, #12]
   426ec:	ldr	r3, [r2], #4
   426f0:	str	r2, [sp, #12]
   426f4:	mov	r0, r3
   426f8:	mov	r7, r9
   426fc:	str	r3, [r9, #4]
   42700:	cmp	r6, #1
   42704:	beq	426a0 <GetDataSlab+0x21694>
   42708:	mov	r1, r2
   4270c:	mov	r2, r1
   42710:	ldr	r3, [r1, #-4]!
   42714:	mul	ip, r3, ip
   42718:	ldr	r3, [r2]
   4271c:	mul	r0, r3, r0
   42720:	cmp	r1, lr
   42724:	bne	4270c <GetDataSlab+0x21700>
   42728:	ldr	r3, [sp, #24]
   4272c:	str	ip, [r3]
   42730:	str	r0, [r7, #4]
   42734:	ldr	r3, [r5]
   42738:	ldr	r2, [sp, #20]
   4273c:	mul	r3, r3, r2
   42740:	str	r3, [sp, #20]
   42744:	ldr	r3, [r7]
   42748:	ldr	r2, [r4]
   4274c:	mla	fp, r2, r3, fp
   42750:	ldr	r3, [sp, #208]	; 0xd0
   42754:	cmp	r3, r6
   42758:	bgt	426bc <GetDataSlab+0x216b0>
   4275c:	ldr	r3, [sp, #8]
   42760:	add	r6, r3, fp, lsl #1
   42764:	ldr	r3, [sp, #28]
   42768:	cmp	r3, #1
   4276c:	beq	39590 <GetDataSlab+0x18584>
   42770:	ldr	r3, [sp, #20]
   42774:	cmp	r3, #0
   42778:	movle	r3, #0
   4277c:	ble	24fa8 <GetDataSlab+0x3f9c>
   42780:	mov	r3, #0
   42784:	str	r3, [sp, #24]
   42788:	b	39818 <GetDataSlab+0x1880c>
   4278c:	ldr	r3, [r5]
   42790:	ldr	r2, [sp, #20]
   42794:	mul	r3, r3, r2
   42798:	str	r3, [sp, #20]
   4279c:	ldr	r3, [r4]
   427a0:	ldr	r2, [r9]
   427a4:	mla	fp, r2, r3, fp
   427a8:	add	sl, sl, #4
   427ac:	add	r9, r9, #4
   427b0:	add	r6, r6, #1
   427b4:	add	r5, r5, #4
   427b8:	add	r4, r4, #4
   427bc:	ldr	r2, [sp, #16]
   427c0:	ldr	r3, [r2, #4]!
   427c4:	str	r2, [sp, #16]
   427c8:	sub	ip, r3, #1
   427cc:	str	sl, [sp, #24]
   427d0:	str	ip, [sl]
   427d4:	ldr	r2, [sp, #12]
   427d8:	ldr	r3, [r2], #4
   427dc:	str	r2, [sp, #12]
   427e0:	mov	r0, r3
   427e4:	mov	r7, r9
   427e8:	str	r3, [r9, #4]
   427ec:	cmp	r6, #1
   427f0:	beq	4278c <GetDataSlab+0x21780>
   427f4:	mov	r1, r2
   427f8:	mov	r2, r1
   427fc:	ldr	r3, [r1, #-4]!
   42800:	mul	ip, r3, ip
   42804:	ldr	r3, [r2]
   42808:	mul	r0, r3, r0
   4280c:	cmp	lr, r1
   42810:	bne	427f8 <GetDataSlab+0x217ec>
   42814:	ldr	r3, [sp, #24]
   42818:	str	ip, [r3]
   4281c:	str	r0, [r7, #4]
   42820:	ldr	r3, [r5]
   42824:	ldr	r2, [sp, #20]
   42828:	mul	r3, r3, r2
   4282c:	str	r3, [sp, #20]
   42830:	ldr	r3, [r7]
   42834:	ldr	r2, [r4]
   42838:	mla	fp, r2, r3, fp
   4283c:	ldr	r3, [sp, #208]	; 0xd0
   42840:	cmp	r3, r6
   42844:	bgt	427a8 <GetDataSlab+0x2179c>
   42848:	ldr	r3, [sp, #8]
   4284c:	add	r6, r3, fp, lsl #1
   42850:	ldr	r3, [sp, #28]
   42854:	cmp	r3, #1
   42858:	beq	39970 <GetDataSlab+0x18964>
   4285c:	ldr	r3, [sp, #20]
   42860:	cmp	r3, #0
   42864:	movle	r3, #0
   42868:	ble	24fa8 <GetDataSlab+0x3f9c>
   4286c:	mov	r3, #0
   42870:	str	r3, [sp, #24]
   42874:	b	39bf8 <GetDataSlab+0x18bec>
   42878:	ldr	r3, [r5]
   4287c:	ldr	r2, [sp, #20]
   42880:	mul	r3, r3, r2
   42884:	str	r3, [sp, #20]
   42888:	ldr	r3, [r4]
   4288c:	ldr	r2, [r9]
   42890:	mla	fp, r2, r3, fp
   42894:	add	sl, sl, #4
   42898:	add	r9, r9, #4
   4289c:	add	r6, r6, #1
   428a0:	add	r5, r5, #4
   428a4:	add	r4, r4, #4
   428a8:	ldr	r2, [sp, #16]
   428ac:	ldr	r3, [r2, #4]!
   428b0:	str	r2, [sp, #16]
   428b4:	sub	ip, r3, #1
   428b8:	str	sl, [sp, #24]
   428bc:	str	ip, [sl]
   428c0:	ldr	r2, [sp, #12]
   428c4:	ldr	r3, [r2], #4
   428c8:	str	r2, [sp, #12]
   428cc:	mov	r0, r3
   428d0:	mov	r7, r9
   428d4:	str	r3, [r9, #4]
   428d8:	cmp	r6, #1
   428dc:	beq	42878 <GetDataSlab+0x2186c>
   428e0:	mov	r1, r2
   428e4:	mov	r2, r1
   428e8:	ldr	r3, [r1, #-4]!
   428ec:	mul	ip, r3, ip
   428f0:	ldr	r3, [r2]
   428f4:	mul	r0, r3, r0
   428f8:	cmp	lr, r1
   428fc:	bne	428e4 <GetDataSlab+0x218d8>
   42900:	ldr	r3, [sp, #24]
   42904:	str	ip, [r3]
   42908:	str	r0, [r7, #4]
   4290c:	ldr	r3, [r5]
   42910:	ldr	r2, [sp, #20]
   42914:	mul	r3, r3, r2
   42918:	str	r3, [sp, #20]
   4291c:	ldr	r3, [r7]
   42920:	ldr	r2, [r4]
   42924:	mla	fp, r2, r3, fp
   42928:	ldr	r3, [sp, #208]	; 0xd0
   4292c:	cmp	r3, r6
   42930:	bgt	42894 <GetDataSlab+0x21888>
   42934:	ldr	r3, [sp, #8]
   42938:	add	r6, r3, fp
   4293c:	ldr	r3, [sp, #28]
   42940:	cmp	r3, #1
   42944:	beq	39d50 <GetDataSlab+0x18d44>
   42948:	ldr	r3, [sp, #20]
   4294c:	cmp	r3, #0
   42950:	movle	r3, #0
   42954:	ble	24fa8 <GetDataSlab+0x3f9c>
   42958:	mov	r3, #0
   4295c:	str	r3, [sp, #24]
   42960:	b	39fd8 <GetDataSlab+0x18fcc>
   42964:	ldr	r3, [r5]
   42968:	ldr	r2, [sp, #20]
   4296c:	mul	r3, r3, r2
   42970:	str	r3, [sp, #20]
   42974:	ldr	r3, [r9]
   42978:	ldr	r2, [r4]
   4297c:	mla	fp, r2, r3, fp
   42980:	add	sl, sl, #4
   42984:	add	r9, r9, #4
   42988:	add	r6, r6, #1
   4298c:	add	r5, r5, #4
   42990:	add	r4, r4, #4
   42994:	ldr	r2, [sp, #16]
   42998:	ldr	r3, [r2, #4]!
   4299c:	str	r2, [sp, #16]
   429a0:	sub	ip, r3, #1
   429a4:	str	sl, [sp, #24]
   429a8:	str	ip, [sl]
   429ac:	ldr	r2, [sp, #12]
   429b0:	ldr	r3, [r2], #4
   429b4:	str	r2, [sp, #12]
   429b8:	mov	r0, r3
   429bc:	mov	r7, r9
   429c0:	str	r3, [r9, #4]
   429c4:	cmp	r6, #1
   429c8:	beq	42964 <GetDataSlab+0x21958>
   429cc:	mov	r1, r2
   429d0:	mov	r2, r1
   429d4:	ldr	r3, [r1, #-4]!
   429d8:	mul	ip, r3, ip
   429dc:	ldr	r3, [r2]
   429e0:	mul	r0, r3, r0
   429e4:	cmp	r1, lr
   429e8:	bne	429d0 <GetDataSlab+0x219c4>
   429ec:	ldr	r3, [sp, #24]
   429f0:	str	ip, [r3]
   429f4:	str	r0, [r7, #4]
   429f8:	ldr	r3, [r5]
   429fc:	ldr	r2, [sp, #20]
   42a00:	mul	r3, r3, r2
   42a04:	str	r3, [sp, #20]
   42a08:	ldr	r3, [r7]
   42a0c:	ldr	r2, [r4]
   42a10:	mla	fp, r2, r3, fp
   42a14:	ldr	r3, [sp, #208]	; 0xd0
   42a18:	cmp	r3, r6
   42a1c:	bgt	42980 <GetDataSlab+0x21974>
   42a20:	ldr	r3, [sp, #8]
   42a24:	add	r6, r3, fp
   42a28:	ldr	r3, [sp, #28]
   42a2c:	cmp	r3, #1
   42a30:	beq	3a130 <GetDataSlab+0x19124>
   42a34:	ldr	r3, [sp, #20]
   42a38:	cmp	r3, #0
   42a3c:	movle	r3, #0
   42a40:	ble	24fa8 <GetDataSlab+0x3f9c>
   42a44:	mov	r3, #0
   42a48:	str	r3, [sp, #24]
   42a4c:	b	3a3b8 <GetDataSlab+0x193ac>
   42a50:	ldr	r3, [r6]
   42a54:	ldr	r2, [sp, #20]
   42a58:	mul	r3, r3, r2
   42a5c:	str	r3, [sp, #20]
   42a60:	ldr	r3, [r4]
   42a64:	ldr	r2, [r9]
   42a68:	mla	fp, r2, r3, fp
   42a6c:	add	sl, sl, #4
   42a70:	add	r9, r9, #4
   42a74:	add	r5, r5, #1
   42a78:	add	r6, r6, #4
   42a7c:	add	r4, r4, #4
   42a80:	ldr	r2, [sp, #16]
   42a84:	ldr	r3, [r2, #4]!
   42a88:	str	r2, [sp, #16]
   42a8c:	sub	ip, r3, #1
   42a90:	str	sl, [sp, #24]
   42a94:	str	ip, [sl]
   42a98:	ldr	r2, [sp, #12]
   42a9c:	ldr	r3, [r2], #4
   42aa0:	str	r2, [sp, #12]
   42aa4:	mov	r0, r3
   42aa8:	mov	r7, r9
   42aac:	str	r3, [r9, #4]
   42ab0:	cmp	r5, #1
   42ab4:	beq	42a50 <GetDataSlab+0x21a44>
   42ab8:	mov	r1, r2
   42abc:	mov	r2, r1
   42ac0:	ldr	r3, [r1, #-4]!
   42ac4:	mul	ip, r3, ip
   42ac8:	ldr	r3, [r2]
   42acc:	mul	r0, r3, r0
   42ad0:	cmp	lr, r1
   42ad4:	bne	42abc <GetDataSlab+0x21ab0>
   42ad8:	ldr	r3, [sp, #24]
   42adc:	str	ip, [r3]
   42ae0:	str	r0, [r7, #4]
   42ae4:	ldr	r3, [r6]
   42ae8:	ldr	r2, [sp, #20]
   42aec:	mul	r3, r3, r2
   42af0:	str	r3, [sp, #20]
   42af4:	ldr	r3, [r7]
   42af8:	ldr	r2, [r4]
   42afc:	mla	fp, r2, r3, fp
   42b00:	ldr	r3, [sp, #208]	; 0xd0
   42b04:	cmp	r3, r5
   42b08:	bgt	42a6c <GetDataSlab+0x21a60>
   42b0c:	ldr	r3, [sp, #8]
   42b10:	add	r5, r3, fp, lsl #3
   42b14:	ldr	r3, [sp, #28]
   42b18:	cmp	r3, #1
   42b1c:	beq	3a588 <GetDataSlab+0x1957c>
   42b20:	ldr	r3, [sp, #20]
   42b24:	cmp	r3, #0
   42b28:	movgt	r3, #0
   42b2c:	strgt	r3, [sp, #24]
   42b30:	bgt	3a808 <GetDataSlab+0x197fc>
   42b34:	mov	r3, #0
   42b38:	b	24fa8 <GetDataSlab+0x3f9c>
   42b3c:	ldr	r3, [r6]
   42b40:	ldr	r2, [sp, #20]
   42b44:	mul	r3, r3, r2
   42b48:	str	r3, [sp, #20]
   42b4c:	ldr	r3, [r4]
   42b50:	ldr	r2, [r9]
   42b54:	mla	fp, r2, r3, fp
   42b58:	add	sl, sl, #4
   42b5c:	add	r9, r9, #4
   42b60:	add	r5, r5, #1
   42b64:	add	r6, r6, #4
   42b68:	add	r4, r4, #4
   42b6c:	ldr	r2, [sp, #16]
   42b70:	ldr	r3, [r2, #4]!
   42b74:	str	r2, [sp, #16]
   42b78:	sub	ip, r3, #1
   42b7c:	str	sl, [sp, #24]
   42b80:	str	ip, [sl]
   42b84:	ldr	r2, [sp, #12]
   42b88:	ldr	r3, [r2], #4
   42b8c:	str	r2, [sp, #12]
   42b90:	mov	r0, r3
   42b94:	mov	r7, r9
   42b98:	str	r3, [r9, #4]
   42b9c:	cmp	r5, #1
   42ba0:	beq	42b3c <GetDataSlab+0x21b30>
   42ba4:	mov	r1, r2
   42ba8:	mov	r2, r1
   42bac:	ldr	r3, [r1, #-4]!
   42bb0:	mul	ip, r3, ip
   42bb4:	ldr	r3, [r2]
   42bb8:	mul	r0, r3, r0
   42bbc:	cmp	lr, r1
   42bc0:	bne	42ba8 <GetDataSlab+0x21b9c>
   42bc4:	ldr	r3, [sp, #24]
   42bc8:	str	ip, [r3]
   42bcc:	str	r0, [r7, #4]
   42bd0:	ldr	r3, [r6]
   42bd4:	ldr	r2, [sp, #20]
   42bd8:	mul	r3, r3, r2
   42bdc:	str	r3, [sp, #20]
   42be0:	ldr	r3, [r7]
   42be4:	ldr	r2, [r4]
   42be8:	mla	fp, r2, r3, fp
   42bec:	ldr	r3, [sp, #208]	; 0xd0
   42bf0:	cmp	r3, r5
   42bf4:	bgt	42b58 <GetDataSlab+0x21b4c>
   42bf8:	ldr	r3, [sp, #8]
   42bfc:	add	r5, r3, fp, lsl #3
   42c00:	ldr	r3, [sp, #28]
   42c04:	cmp	r3, #1
   42c08:	beq	3a8f4 <GetDataSlab+0x198e8>
   42c0c:	ldr	r3, [sp, #20]
   42c10:	cmp	r3, #0
   42c14:	movle	r3, #0
   42c18:	ble	24fa8 <GetDataSlab+0x3f9c>
   42c1c:	mov	r3, #0
   42c20:	str	r3, [sp, #24]
   42c24:	b	3ab7c <GetDataSlab+0x19b70>
   42c28:	ldr	r3, [r5]
   42c2c:	ldr	r2, [sp, #20]
   42c30:	mul	r3, r3, r2
   42c34:	str	r3, [sp, #20]
   42c38:	ldr	r3, [r4]
   42c3c:	ldr	r2, [r9]
   42c40:	mla	fp, r2, r3, fp
   42c44:	add	sl, sl, #4
   42c48:	add	r9, r9, #4
   42c4c:	add	r6, r6, #1
   42c50:	add	r5, r5, #4
   42c54:	add	r4, r4, #4
   42c58:	ldr	r2, [sp, #16]
   42c5c:	ldr	r3, [r2, #4]!
   42c60:	str	r2, [sp, #16]
   42c64:	sub	ip, r3, #1
   42c68:	str	sl, [sp, #24]
   42c6c:	str	ip, [sl]
   42c70:	ldr	r2, [sp, #12]
   42c74:	ldr	r3, [r2], #4
   42c78:	str	r2, [sp, #12]
   42c7c:	mov	r0, r3
   42c80:	mov	r7, r9
   42c84:	str	r3, [r9, #4]
   42c88:	cmp	r6, #1
   42c8c:	beq	42c28 <GetDataSlab+0x21c1c>
   42c90:	mov	r1, r2
   42c94:	mov	r2, r1
   42c98:	ldr	r3, [r1, #-4]!
   42c9c:	mul	ip, r3, ip
   42ca0:	ldr	r3, [r2]
   42ca4:	mul	r0, r3, r0
   42ca8:	cmp	r1, lr
   42cac:	bne	42c94 <GetDataSlab+0x21c88>
   42cb0:	ldr	r3, [sp, #24]
   42cb4:	str	ip, [r3]
   42cb8:	str	r0, [r7, #4]
   42cbc:	ldr	r3, [r5]
   42cc0:	ldr	r2, [sp, #20]
   42cc4:	mul	r3, r3, r2
   42cc8:	str	r3, [sp, #20]
   42ccc:	ldr	r3, [r7]
   42cd0:	ldr	r2, [r4]
   42cd4:	mla	fp, r2, r3, fp
   42cd8:	ldr	r3, [sp, #208]	; 0xd0
   42cdc:	cmp	r3, r6
   42ce0:	bgt	42c44 <GetDataSlab+0x21c38>
   42ce4:	ldr	r3, [sp, #8]
   42ce8:	add	r5, r3, fp, lsl #3
   42cec:	ldr	r3, [sp, #28]
   42cf0:	cmp	r3, #1
   42cf4:	beq	3ad08 <GetDataSlab+0x19cfc>
   42cf8:	ldr	r3, [sp, #20]
   42cfc:	cmp	r3, #0
   42d00:	movle	r3, #0
   42d04:	ble	24fa8 <GetDataSlab+0x3f9c>
   42d08:	mov	r3, #0
   42d0c:	str	r3, [sp, #24]
   42d10:	b	3af98 <GetDataSlab+0x19f8c>
   42d14:	ldr	r3, [r5]
   42d18:	ldr	r2, [sp, #20]
   42d1c:	mul	r3, r3, r2
   42d20:	str	r3, [sp, #20]
   42d24:	ldr	r3, [r4]
   42d28:	ldr	r2, [r9]
   42d2c:	mla	fp, r2, r3, fp
   42d30:	add	sl, sl, #4
   42d34:	add	r9, r9, #4
   42d38:	add	r6, r6, #1
   42d3c:	add	r5, r5, #4
   42d40:	add	r4, r4, #4
   42d44:	ldr	r2, [sp, #16]
   42d48:	ldr	r3, [r2, #4]!
   42d4c:	str	r2, [sp, #16]
   42d50:	sub	ip, r3, #1
   42d54:	str	sl, [sp, #24]
   42d58:	str	ip, [sl]
   42d5c:	ldr	r2, [sp, #12]
   42d60:	ldr	r3, [r2], #4
   42d64:	str	r2, [sp, #12]
   42d68:	mov	r0, r3
   42d6c:	mov	r7, r9
   42d70:	str	r3, [r9, #4]
   42d74:	cmp	r6, #1
   42d78:	beq	42d14 <GetDataSlab+0x21d08>
   42d7c:	mov	r1, r2
   42d80:	mov	r2, r1
   42d84:	ldr	r3, [r1, #-4]!
   42d88:	mul	ip, r3, ip
   42d8c:	ldr	r3, [r2]
   42d90:	mul	r0, r3, r0
   42d94:	cmp	r1, lr
   42d98:	bne	42d80 <GetDataSlab+0x21d74>
   42d9c:	ldr	r3, [sp, #24]
   42da0:	str	ip, [r3]
   42da4:	str	r0, [r7, #4]
   42da8:	ldr	r3, [r5]
   42dac:	ldr	r2, [sp, #20]
   42db0:	mul	r3, r3, r2
   42db4:	str	r3, [sp, #20]
   42db8:	ldr	r3, [r7]
   42dbc:	ldr	r2, [r4]
   42dc0:	mla	fp, r2, r3, fp
   42dc4:	ldr	r3, [sp, #208]	; 0xd0
   42dc8:	cmp	r3, r6
   42dcc:	bgt	42d30 <GetDataSlab+0x21d24>
   42dd0:	ldr	r3, [sp, #8]
   42dd4:	add	r5, r3, fp, lsl #2
   42dd8:	ldr	r3, [sp, #28]
   42ddc:	cmp	r3, #1
   42de0:	beq	3b0f8 <GetDataSlab+0x1a0ec>
   42de4:	ldr	r3, [sp, #20]
   42de8:	cmp	r3, #0
   42dec:	movle	r3, #0
   42df0:	ble	24fa8 <GetDataSlab+0x3f9c>
   42df4:	mov	r3, #0
   42df8:	str	r3, [sp, #24]
   42dfc:	b	3b388 <GetDataSlab+0x1a37c>
   42e00:	ldr	r3, [r5]
   42e04:	ldr	r2, [sp, #20]
   42e08:	mul	r3, r3, r2
   42e0c:	str	r3, [sp, #20]
   42e10:	ldr	r3, [r9]
   42e14:	ldr	r2, [r4]
   42e18:	mla	fp, r2, r3, fp
   42e1c:	add	sl, sl, #4
   42e20:	add	r9, r9, #4
   42e24:	add	r6, r6, #1
   42e28:	add	r5, r5, #4
   42e2c:	add	r4, r4, #4
   42e30:	ldr	r2, [sp, #16]
   42e34:	ldr	r3, [r2, #4]!
   42e38:	str	r2, [sp, #16]
   42e3c:	sub	ip, r3, #1
   42e40:	str	sl, [sp, #24]
   42e44:	str	ip, [sl]
   42e48:	ldr	r2, [sp, #12]
   42e4c:	ldr	r3, [r2], #4
   42e50:	str	r2, [sp, #12]
   42e54:	mov	r0, r3
   42e58:	mov	r7, r9
   42e5c:	str	r3, [r9, #4]
   42e60:	cmp	r6, #1
   42e64:	beq	42e00 <GetDataSlab+0x21df4>
   42e68:	mov	r1, r2
   42e6c:	mov	r2, r1
   42e70:	ldr	r3, [r1, #-4]!
   42e74:	mul	ip, r3, ip
   42e78:	ldr	r3, [r2]
   42e7c:	mul	r0, r3, r0
   42e80:	cmp	lr, r1
   42e84:	bne	42e6c <GetDataSlab+0x21e60>
   42e88:	ldr	r3, [sp, #24]
   42e8c:	str	ip, [r3]
   42e90:	str	r0, [r7, #4]
   42e94:	ldr	r3, [r5]
   42e98:	ldr	r2, [sp, #20]
   42e9c:	mul	r3, r3, r2
   42ea0:	str	r3, [sp, #20]
   42ea4:	ldr	r3, [r7]
   42ea8:	ldr	r2, [r4]
   42eac:	mla	fp, r2, r3, fp
   42eb0:	ldr	r3, [sp, #208]	; 0xd0
   42eb4:	cmp	r3, r6
   42eb8:	bgt	42e1c <GetDataSlab+0x21e10>
   42ebc:	ldr	r3, [sp, #8]
   42ec0:	add	r5, r3, fp, lsl #2
   42ec4:	ldr	r3, [sp, #28]
   42ec8:	cmp	r3, #1
   42ecc:	beq	3b4e8 <GetDataSlab+0x1a4dc>
   42ed0:	ldr	r3, [sp, #20]
   42ed4:	cmp	r3, #0
   42ed8:	movle	r3, #0
   42edc:	ble	24fa8 <GetDataSlab+0x3f9c>
   42ee0:	mov	r3, #0
   42ee4:	str	r3, [sp, #24]
   42ee8:	b	3b770 <GetDataSlab+0x1a764>
   42eec:	ldr	r3, [r5]
   42ef0:	ldr	r2, [sp, #20]
   42ef4:	mul	r3, r3, r2
   42ef8:	str	r3, [sp, #20]
   42efc:	ldr	r3, [r4]
   42f00:	ldr	r2, [r9]
   42f04:	mla	fp, r2, r3, fp
   42f08:	add	sl, sl, #4
   42f0c:	add	r9, r9, #4
   42f10:	add	r6, r6, #1
   42f14:	add	r5, r5, #4
   42f18:	add	r4, r4, #4
   42f1c:	ldr	r2, [sp, #16]
   42f20:	ldr	r3, [r2, #4]!
   42f24:	str	r2, [sp, #16]
   42f28:	sub	ip, r3, #1
   42f2c:	str	sl, [sp, #24]
   42f30:	str	ip, [sl]
   42f34:	ldr	r2, [sp, #12]
   42f38:	ldr	r3, [r2], #4
   42f3c:	str	r2, [sp, #12]
   42f40:	mov	r0, r3
   42f44:	mov	r7, r9
   42f48:	str	r3, [r9, #4]
   42f4c:	cmp	r6, #1
   42f50:	beq	42eec <GetDataSlab+0x21ee0>
   42f54:	mov	r1, r2
   42f58:	mov	r2, r1
   42f5c:	ldr	r3, [r1, #-4]!
   42f60:	mul	ip, r3, ip
   42f64:	ldr	r3, [r2]
   42f68:	mul	r0, r3, r0
   42f6c:	cmp	lr, r1
   42f70:	bne	42f58 <GetDataSlab+0x21f4c>
   42f74:	ldr	r3, [sp, #24]
   42f78:	str	ip, [r3]
   42f7c:	str	r0, [r7, #4]
   42f80:	ldr	r3, [r5]
   42f84:	ldr	r2, [sp, #20]
   42f88:	mul	r3, r3, r2
   42f8c:	str	r3, [sp, #20]
   42f90:	ldr	r3, [r7]
   42f94:	ldr	r2, [r4]
   42f98:	mla	fp, r2, r3, fp
   42f9c:	ldr	r3, [sp, #208]	; 0xd0
   42fa0:	cmp	r3, r6
   42fa4:	bgt	42f08 <GetDataSlab+0x21efc>
   42fa8:	ldr	r3, [sp, #8]
   42fac:	add	r5, r3, fp, lsl #2
   42fb0:	ldr	r3, [sp, #28]
   42fb4:	cmp	r3, #1
   42fb8:	beq	3b8c8 <GetDataSlab+0x1a8bc>
   42fbc:	ldr	r3, [sp, #20]
   42fc0:	cmp	r3, #0
   42fc4:	movle	r3, #0
   42fc8:	ble	24fa8 <GetDataSlab+0x3f9c>
   42fcc:	mov	r3, #0
   42fd0:	str	r3, [sp, #24]
   42fd4:	b	3bb50 <GetDataSlab+0x1ab44>
   42fd8:	ldr	r3, [r5]
   42fdc:	ldr	r2, [sp, #20]
   42fe0:	mul	r3, r3, r2
   42fe4:	str	r3, [sp, #20]
   42fe8:	ldr	r3, [r9]
   42fec:	ldr	r2, [r4]
   42ff0:	mla	fp, r2, r3, fp
   42ff4:	add	sl, sl, #4
   42ff8:	add	r9, r9, #4
   42ffc:	add	r6, r6, #1
   43000:	add	r5, r5, #4
   43004:	add	r4, r4, #4
   43008:	ldr	r2, [sp, #16]
   4300c:	ldr	r3, [r2, #4]!
   43010:	str	r2, [sp, #16]
   43014:	sub	ip, r3, #1
   43018:	str	sl, [sp, #24]
   4301c:	str	ip, [sl]
   43020:	ldr	r2, [sp, #12]
   43024:	ldr	r3, [r2], #4
   43028:	str	r2, [sp, #12]
   4302c:	mov	r0, r3
   43030:	mov	r7, r9
   43034:	str	r3, [r9, #4]
   43038:	cmp	r6, #1
   4303c:	beq	42fd8 <GetDataSlab+0x21fcc>
   43040:	mov	r1, r2
   43044:	mov	r2, r1
   43048:	ldr	r3, [r1, #-4]!
   4304c:	mul	ip, r3, ip
   43050:	ldr	r3, [r2]
   43054:	mul	r0, r3, r0
   43058:	cmp	r1, lr
   4305c:	bne	43044 <GetDataSlab+0x22038>
   43060:	ldr	r3, [sp, #24]
   43064:	str	ip, [r3]
   43068:	str	r0, [r7, #4]
   4306c:	ldr	r3, [r5]
   43070:	ldr	r2, [sp, #20]
   43074:	mul	r3, r3, r2
   43078:	str	r3, [sp, #20]
   4307c:	ldr	r3, [r7]
   43080:	ldr	r2, [r4]
   43084:	mla	fp, r2, r3, fp
   43088:	ldr	r3, [sp, #208]	; 0xd0
   4308c:	cmp	r3, r6
   43090:	bgt	42ff4 <GetDataSlab+0x21fe8>
   43094:	ldr	r3, [sp, #8]
   43098:	add	r6, r3, fp, lsl #1
   4309c:	ldr	r3, [sp, #28]
   430a0:	cmp	r3, #1
   430a4:	beq	3bca8 <GetDataSlab+0x1ac9c>
   430a8:	ldr	r3, [sp, #20]
   430ac:	cmp	r3, #0
   430b0:	movle	r3, #0
   430b4:	ble	24fa8 <GetDataSlab+0x3f9c>
   430b8:	mov	r3, #0
   430bc:	str	r3, [sp, #24]
   430c0:	b	3bf30 <GetDataSlab+0x1af24>
   430c4:	ldr	r3, [r5]
   430c8:	ldr	r2, [sp, #20]
   430cc:	mul	r3, r3, r2
   430d0:	str	r3, [sp, #20]
   430d4:	ldr	r3, [r4]
   430d8:	ldr	r2, [r9]
   430dc:	mla	fp, r2, r3, fp
   430e0:	add	sl, sl, #4
   430e4:	add	r9, r9, #4
   430e8:	add	r6, r6, #1
   430ec:	add	r5, r5, #4
   430f0:	add	r4, r4, #4
   430f4:	ldr	r2, [sp, #16]
   430f8:	ldr	r3, [r2, #4]!
   430fc:	str	r2, [sp, #16]
   43100:	sub	ip, r3, #1
   43104:	str	sl, [sp, #24]
   43108:	str	ip, [sl]
   4310c:	ldr	r2, [sp, #12]
   43110:	ldr	r3, [r2], #4
   43114:	str	r2, [sp, #12]
   43118:	mov	r0, r3
   4311c:	mov	r7, r9
   43120:	str	r3, [r9, #4]
   43124:	cmp	r6, #1
   43128:	beq	430c4 <GetDataSlab+0x220b8>
   4312c:	mov	r1, r2
   43130:	mov	r2, r1
   43134:	ldr	r3, [r1, #-4]!
   43138:	mul	ip, r3, ip
   4313c:	ldr	r3, [r2]
   43140:	mul	r0, r3, r0
   43144:	cmp	lr, r1
   43148:	bne	43130 <GetDataSlab+0x22124>
   4314c:	ldr	r3, [sp, #24]
   43150:	str	ip, [r3]
   43154:	str	r0, [r7, #4]
   43158:	ldr	r3, [r5]
   4315c:	ldr	r2, [sp, #20]
   43160:	mul	r3, r3, r2
   43164:	str	r3, [sp, #20]
   43168:	ldr	r3, [r7]
   4316c:	ldr	r2, [r4]
   43170:	mla	fp, r2, r3, fp
   43174:	ldr	r3, [sp, #208]	; 0xd0
   43178:	cmp	r3, r6
   4317c:	bgt	430e0 <GetDataSlab+0x220d4>
   43180:	ldr	r3, [sp, #8]
   43184:	add	r6, r3, fp, lsl #1
   43188:	ldr	r3, [sp, #28]
   4318c:	cmp	r3, #1
   43190:	beq	3c088 <GetDataSlab+0x1b07c>
   43194:	ldr	r3, [sp, #20]
   43198:	cmp	r3, #0
   4319c:	movle	r3, #0
   431a0:	ble	24fa8 <GetDataSlab+0x3f9c>
   431a4:	mov	r3, #0
   431a8:	str	r3, [sp, #24]
   431ac:	b	3c310 <GetDataSlab+0x1b304>
   431b0:	ldr	r3, [r5]
   431b4:	ldr	r2, [sp, #20]
   431b8:	mul	r3, r3, r2
   431bc:	str	r3, [sp, #20]
   431c0:	ldr	r3, [r4]
   431c4:	ldr	r2, [r9]
   431c8:	mla	fp, r2, r3, fp
   431cc:	add	sl, sl, #4
   431d0:	add	r9, r9, #4
   431d4:	add	r6, r6, #1
   431d8:	add	r5, r5, #4
   431dc:	add	r4, r4, #4
   431e0:	ldr	r2, [sp, #16]
   431e4:	ldr	r3, [r2, #4]!
   431e8:	str	r2, [sp, #16]
   431ec:	sub	ip, r3, #1
   431f0:	str	sl, [sp, #24]
   431f4:	str	ip, [sl]
   431f8:	ldr	r2, [sp, #12]
   431fc:	ldr	r3, [r2], #4
   43200:	str	r2, [sp, #12]
   43204:	mov	r0, r3
   43208:	mov	r7, r9
   4320c:	str	r3, [r9, #4]
   43210:	cmp	r6, #1
   43214:	beq	431b0 <GetDataSlab+0x221a4>
   43218:	mov	r1, r2
   4321c:	mov	r2, r1
   43220:	ldr	r3, [r1, #-4]!
   43224:	mul	ip, r3, ip
   43228:	ldr	r3, [r2]
   4322c:	mul	r0, r3, r0
   43230:	cmp	r1, lr
   43234:	bne	4321c <GetDataSlab+0x22210>
   43238:	ldr	r3, [sp, #24]
   4323c:	str	ip, [r3]
   43240:	str	r0, [r7, #4]
   43244:	ldr	r3, [r5]
   43248:	ldr	r2, [sp, #20]
   4324c:	mul	r3, r3, r2
   43250:	str	r3, [sp, #20]
   43254:	ldr	r3, [r7]
   43258:	ldr	r2, [r4]
   4325c:	mla	fp, r2, r3, fp
   43260:	ldr	r3, [sp, #208]	; 0xd0
   43264:	cmp	r3, r6
   43268:	bgt	431cc <GetDataSlab+0x221c0>
   4326c:	ldr	r3, [sp, #8]
   43270:	add	r6, r3, fp
   43274:	ldr	r3, [sp, #28]
   43278:	cmp	r3, #1
   4327c:	beq	3c468 <GetDataSlab+0x1b45c>
   43280:	ldr	r3, [sp, #20]
   43284:	cmp	r3, #0
   43288:	movle	r3, #0
   4328c:	ble	24fa8 <GetDataSlab+0x3f9c>
   43290:	mov	r3, #0
   43294:	str	r3, [sp, #24]
   43298:	b	3c6f0 <GetDataSlab+0x1b6e4>
   4329c:	ldr	r3, [r5]
   432a0:	ldr	r2, [sp, #20]
   432a4:	mul	r3, r3, r2
   432a8:	str	r3, [sp, #20]
   432ac:	ldr	r3, [r9]
   432b0:	ldr	r2, [r4]
   432b4:	mla	fp, r2, r3, fp
   432b8:	add	sl, sl, #4
   432bc:	add	r9, r9, #4
   432c0:	add	r6, r6, #1
   432c4:	add	r5, r5, #4
   432c8:	add	r4, r4, #4
   432cc:	ldr	r2, [sp, #16]
   432d0:	ldr	r3, [r2, #4]!
   432d4:	str	r2, [sp, #16]
   432d8:	sub	ip, r3, #1
   432dc:	str	sl, [sp, #24]
   432e0:	str	ip, [sl]
   432e4:	ldr	r2, [sp, #12]
   432e8:	ldr	r3, [r2], #4
   432ec:	str	r2, [sp, #12]
   432f0:	mov	r0, r3
   432f4:	mov	r7, r9
   432f8:	str	r3, [r9, #4]
   432fc:	cmp	r6, #1
   43300:	beq	4329c <GetDataSlab+0x22290>
   43304:	mov	r1, r2
   43308:	mov	r2, r1
   4330c:	ldr	r3, [r1, #-4]!
   43310:	mul	ip, r3, ip
   43314:	ldr	r3, [r2]
   43318:	mul	r0, r3, r0
   4331c:	cmp	r1, lr
   43320:	bne	43308 <GetDataSlab+0x222fc>
   43324:	ldr	r3, [sp, #24]
   43328:	str	ip, [r3]
   4332c:	str	r0, [r7, #4]
   43330:	ldr	r3, [r5]
   43334:	ldr	r2, [sp, #20]
   43338:	mul	r3, r3, r2
   4333c:	str	r3, [sp, #20]
   43340:	ldr	r3, [r7]
   43344:	ldr	r2, [r4]
   43348:	mla	fp, r2, r3, fp
   4334c:	ldr	r3, [sp, #208]	; 0xd0
   43350:	cmp	r3, r6
   43354:	bgt	432b8 <GetDataSlab+0x222ac>
   43358:	ldr	r3, [sp, #8]
   4335c:	add	r6, r3, fp
   43360:	ldr	r3, [sp, #28]
   43364:	cmp	r3, #1
   43368:	beq	3c848 <GetDataSlab+0x1b83c>
   4336c:	ldr	r3, [sp, #20]
   43370:	cmp	r3, #0
   43374:	movle	r3, #0
   43378:	ble	24fa8 <GetDataSlab+0x3f9c>
   4337c:	mov	r3, #0
   43380:	str	r3, [sp, #24]
   43384:	b	3cad0 <GetDataSlab+0x1bac4>
   43388:	ldr	r3, [r6]
   4338c:	ldr	r2, [sp, #20]
   43390:	mul	r3, r3, r2
   43394:	str	r3, [sp, #20]
   43398:	ldr	r3, [r4]
   4339c:	ldr	r2, [r9]
   433a0:	mla	fp, r2, r3, fp
   433a4:	add	sl, sl, #4
   433a8:	add	r9, r9, #4
   433ac:	add	r5, r5, #1
   433b0:	add	r6, r6, #4
   433b4:	add	r4, r4, #4
   433b8:	ldr	r2, [sp, #16]
   433bc:	ldr	r3, [r2, #4]!
   433c0:	str	r2, [sp, #16]
   433c4:	sub	ip, r3, #1
   433c8:	str	sl, [sp, #24]
   433cc:	str	ip, [sl]
   433d0:	ldr	r2, [sp, #12]
   433d4:	ldr	r3, [r2], #4
   433d8:	str	r2, [sp, #12]
   433dc:	mov	r0, r3
   433e0:	mov	r7, r9
   433e4:	str	r3, [r9, #4]
   433e8:	cmp	r5, #1
   433ec:	beq	43388 <GetDataSlab+0x2237c>
   433f0:	mov	r1, r2
   433f4:	mov	r2, r1
   433f8:	ldr	r3, [r1, #-4]!
   433fc:	mul	ip, r3, ip
   43400:	ldr	r3, [r2]
   43404:	mul	r0, r3, r0
   43408:	cmp	r1, lr
   4340c:	bne	433f4 <GetDataSlab+0x223e8>
   43410:	ldr	r3, [sp, #24]
   43414:	str	ip, [r3]
   43418:	str	r0, [r7, #4]
   4341c:	ldr	r3, [r6]
   43420:	ldr	r2, [sp, #20]
   43424:	mul	r3, r3, r2
   43428:	str	r3, [sp, #20]
   4342c:	ldr	r3, [r7]
   43430:	ldr	r2, [r4]
   43434:	mla	fp, r2, r3, fp
   43438:	ldr	r3, [sp, #208]	; 0xd0
   4343c:	cmp	r3, r5
   43440:	bgt	433a4 <GetDataSlab+0x22398>
   43444:	ldr	r3, [sp, #8]
   43448:	add	r5, r3, fp, lsl #3
   4344c:	ldr	r3, [sp, #28]
   43450:	cmp	r3, #1
   43454:	beq	3cca0 <GetDataSlab+0x1bc94>
   43458:	ldr	r3, [sp, #20]
   4345c:	cmp	r3, #0
   43460:	movgt	r3, #0
   43464:	strgt	r3, [sp, #24]
   43468:	bgt	3cf20 <GetDataSlab+0x1bf14>
   4346c:	mov	r3, #0
   43470:	b	24fa8 <GetDataSlab+0x3f9c>
   43474:	ldr	r3, [r6]
   43478:	ldr	r2, [sp, #20]
   4347c:	mul	r3, r3, r2
   43480:	str	r3, [sp, #20]
   43484:	ldr	r3, [r4]
   43488:	ldr	r2, [r9]
   4348c:	mla	fp, r2, r3, fp
   43490:	add	sl, sl, #4
   43494:	add	r9, r9, #4
   43498:	add	r5, r5, #1
   4349c:	add	r6, r6, #4
   434a0:	add	r4, r4, #4
   434a4:	ldr	r2, [sp, #16]
   434a8:	ldr	r3, [r2, #4]!
   434ac:	str	r2, [sp, #16]
   434b0:	sub	ip, r3, #1
   434b4:	str	sl, [sp, #24]
   434b8:	str	ip, [sl]
   434bc:	ldr	r2, [sp, #12]
   434c0:	ldr	r3, [r2], #4
   434c4:	str	r2, [sp, #12]
   434c8:	mov	r0, r3
   434cc:	mov	r7, r9
   434d0:	str	r3, [r9, #4]
   434d4:	cmp	r5, #1
   434d8:	beq	43474 <GetDataSlab+0x22468>
   434dc:	mov	r1, r2
   434e0:	mov	r2, r1
   434e4:	ldr	r3, [r1, #-4]!
   434e8:	mul	ip, r3, ip
   434ec:	ldr	r3, [r2]
   434f0:	mul	r0, r3, r0
   434f4:	cmp	lr, r1
   434f8:	bne	434e0 <GetDataSlab+0x224d4>
   434fc:	ldr	r3, [sp, #24]
   43500:	str	ip, [r3]
   43504:	str	r0, [r7, #4]
   43508:	ldr	r3, [r6]
   4350c:	ldr	r2, [sp, #20]
   43510:	mul	r3, r3, r2
   43514:	str	r3, [sp, #20]
   43518:	ldr	r3, [r7]
   4351c:	ldr	r2, [r4]
   43520:	mla	fp, r2, r3, fp
   43524:	ldr	r3, [sp, #208]	; 0xd0
   43528:	cmp	r3, r5
   4352c:	bgt	43490 <GetDataSlab+0x22484>
   43530:	ldr	r3, [sp, #8]
   43534:	add	r5, r3, fp, lsl #3
   43538:	ldr	r3, [sp, #28]
   4353c:	cmp	r3, #1
   43540:	beq	3d00c <GetDataSlab+0x1c000>
   43544:	ldr	r3, [sp, #20]
   43548:	cmp	r3, #0
   4354c:	movle	r3, #0
   43550:	ble	24fa8 <GetDataSlab+0x3f9c>
   43554:	mov	r3, #0
   43558:	str	r3, [sp, #24]
   4355c:	b	3d294 <GetDataSlab+0x1c288>

00043560 <GetDataLinear>:
   43560:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   43564:	mov	r4, r0
   43568:	mov	r5, r1
   4356c:	mov	r9, r2
   43570:	ldr	r8, [sp, #36]	; 0x24
   43574:	ldr	r6, [sp, #40]	; 0x28
   43578:	mov	r0, r3
   4357c:	bl	1600 <Mat_SizeOf@plt>
   43580:	mov	r7, r0
   43584:	sub	r2, r9, #6
   43588:	cmp	r2, #9
   4358c:	addls	pc, pc, r2, lsl #2
   43590:	b	43a04 <GetDataLinear+0x4a4>
   43594:	b	435bc <GetDataLinear+0x5c>
   43598:	b	4362c <GetDataLinear+0xcc>
   4359c:	b	43934 <GetDataLinear+0x3d4>
   435a0:	b	4399c <GetDataLinear+0x43c>
   435a4:	b	4385c <GetDataLinear+0x2fc>
   435a8:	b	438c8 <GetDataLinear+0x368>
   435ac:	b	4377c <GetDataLinear+0x21c>
   435b0:	b	437ec <GetDataLinear+0x28c>
   435b4:	b	4369c <GetDataLinear+0x13c>
   435b8:	b	4370c <GetDataLinear+0x1ac>
   435bc:	ldr	r3, [sp, #32]
   435c0:	add	r4, r4, r3, lsl #3
   435c4:	cmp	r8, #0
   435c8:	beq	43614 <GetDataLinear+0xb4>
   435cc:	cmp	r6, #0
   435d0:	lslgt	r8, r8, #3
   435d4:	movgt	r0, r5
   435d8:	movgt	r9, #0
   435dc:	ble	4360c <GetDataLinear+0xac>
   435e0:	add	r5, r0, #8
   435e4:	mov	r2, r7
   435e8:	mov	r1, r4
   435ec:	bl	14f8 <memcpy@plt>
   435f0:	add	r9, r9, #1
   435f4:	add	r4, r4, r8
   435f8:	mov	r0, r5
   435fc:	cmp	r6, r9
   43600:	bne	435e0 <GetDataLinear+0x80>
   43604:	mov	r0, #0
   43608:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4360c:	mov	r0, #0
   43610:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43614:	mul	r2, r0, r6
   43618:	mov	r1, r4
   4361c:	mov	r0, r5
   43620:	bl	14f8 <memcpy@plt>
   43624:	mov	r0, r8
   43628:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4362c:	ldr	r3, [sp, #32]
   43630:	add	r4, r4, r3, lsl #2
   43634:	cmp	r8, #0
   43638:	beq	43684 <GetDataLinear+0x124>
   4363c:	cmp	r6, #0
   43640:	lslgt	r8, r8, #2
   43644:	movgt	r0, r5
   43648:	movgt	r9, #0
   4364c:	ble	4367c <GetDataLinear+0x11c>
   43650:	add	r5, r0, #4
   43654:	mov	r2, r7
   43658:	mov	r1, r4
   4365c:	bl	14f8 <memcpy@plt>
   43660:	add	r9, r9, #1
   43664:	add	r4, r4, r8
   43668:	mov	r0, r5
   4366c:	cmp	r6, r9
   43670:	bne	43650 <GetDataLinear+0xf0>
   43674:	mov	r0, #0
   43678:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4367c:	mov	r0, #0
   43680:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43684:	mul	r2, r0, r6
   43688:	mov	r1, r4
   4368c:	mov	r0, r5
   43690:	bl	14f8 <memcpy@plt>
   43694:	mov	r0, r8
   43698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4369c:	ldr	r3, [sp, #32]
   436a0:	add	r4, r4, r3, lsl #3
   436a4:	cmp	r8, #0
   436a8:	beq	436f4 <GetDataLinear+0x194>
   436ac:	cmp	r6, #0
   436b0:	lslgt	r8, r8, #3
   436b4:	movgt	r0, r5
   436b8:	movgt	r9, #0
   436bc:	ble	436ec <GetDataLinear+0x18c>
   436c0:	add	r5, r0, #8
   436c4:	mov	r2, r7
   436c8:	mov	r1, r4
   436cc:	bl	14f8 <memcpy@plt>
   436d0:	add	r9, r9, #1
   436d4:	add	r4, r4, r8
   436d8:	mov	r0, r5
   436dc:	cmp	r6, r9
   436e0:	bne	436c0 <GetDataLinear+0x160>
   436e4:	mov	r0, #0
   436e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   436ec:	mov	r0, #0
   436f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   436f4:	mul	r2, r0, r6
   436f8:	mov	r1, r4
   436fc:	mov	r0, r5
   43700:	bl	14f8 <memcpy@plt>
   43704:	mov	r0, r8
   43708:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4370c:	ldr	r3, [sp, #32]
   43710:	add	r4, r4, r3, lsl #3
   43714:	cmp	r8, #0
   43718:	beq	43764 <GetDataLinear+0x204>
   4371c:	cmp	r6, #0
   43720:	lslgt	r8, r8, #3
   43724:	movgt	r0, r5
   43728:	movgt	r9, #0
   4372c:	ble	4375c <GetDataLinear+0x1fc>
   43730:	add	r5, r0, #8
   43734:	mov	r2, r7
   43738:	mov	r1, r4
   4373c:	bl	14f8 <memcpy@plt>
   43740:	add	r9, r9, #1
   43744:	add	r4, r4, r8
   43748:	mov	r0, r5
   4374c:	cmp	r6, r9
   43750:	bne	43730 <GetDataLinear+0x1d0>
   43754:	mov	r0, #0
   43758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4375c:	mov	r0, #0
   43760:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43764:	mul	r2, r0, r6
   43768:	mov	r1, r4
   4376c:	mov	r0, r5
   43770:	bl	14f8 <memcpy@plt>
   43774:	mov	r0, r8
   43778:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4377c:	ldr	r3, [sp, #32]
   43780:	add	r4, r4, r3, lsl #2
   43784:	cmp	r8, #0
   43788:	beq	437d4 <GetDataLinear+0x274>
   4378c:	cmp	r6, #0
   43790:	lslgt	r8, r8, #2
   43794:	movgt	r0, r5
   43798:	movgt	r9, #0
   4379c:	ble	437cc <GetDataLinear+0x26c>
   437a0:	add	r5, r0, #4
   437a4:	mov	r2, r7
   437a8:	mov	r1, r4
   437ac:	bl	14f8 <memcpy@plt>
   437b0:	add	r9, r9, #1
   437b4:	add	r4, r4, r8
   437b8:	mov	r0, r5
   437bc:	cmp	r6, r9
   437c0:	bne	437a0 <GetDataLinear+0x240>
   437c4:	mov	r0, #0
   437c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   437cc:	mov	r0, #0
   437d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   437d4:	mul	r2, r0, r6
   437d8:	mov	r1, r4
   437dc:	mov	r0, r5
   437e0:	bl	14f8 <memcpy@plt>
   437e4:	mov	r0, r8
   437e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   437ec:	ldr	r3, [sp, #32]
   437f0:	add	r4, r4, r3, lsl #2
   437f4:	cmp	r8, #0
   437f8:	beq	43844 <GetDataLinear+0x2e4>
   437fc:	cmp	r6, #0
   43800:	lslgt	r8, r8, #2
   43804:	movgt	r0, r5
   43808:	movgt	r9, #0
   4380c:	ble	4383c <GetDataLinear+0x2dc>
   43810:	add	r5, r0, #4
   43814:	mov	r2, r7
   43818:	mov	r1, r4
   4381c:	bl	14f8 <memcpy@plt>
   43820:	add	r9, r9, #1
   43824:	add	r4, r4, r8
   43828:	mov	r0, r5
   4382c:	cmp	r6, r9
   43830:	bne	43810 <GetDataLinear+0x2b0>
   43834:	mov	r0, #0
   43838:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4383c:	mov	r0, #0
   43840:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43844:	mul	r2, r0, r6
   43848:	mov	r1, r4
   4384c:	mov	r0, r5
   43850:	bl	14f8 <memcpy@plt>
   43854:	mov	r0, r8
   43858:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4385c:	ldr	r3, [sp, #32]
   43860:	add	r4, r4, r3, lsl #1
   43864:	cmp	r8, #0
   43868:	beq	438b0 <GetDataLinear+0x350>
   4386c:	cmp	r6, #0
   43870:	lslgt	r8, r8, #1
   43874:	addgt	r6, r5, r6, lsl #1
   43878:	movgt	r0, r5
   4387c:	ble	438a8 <GetDataLinear+0x348>
   43880:	add	r5, r0, #2
   43884:	mov	r2, r7
   43888:	mov	r1, r4
   4388c:	bl	14f8 <memcpy@plt>
   43890:	add	r4, r4, r8
   43894:	mov	r0, r5
   43898:	cmp	r6, r5
   4389c:	bne	43880 <GetDataLinear+0x320>
   438a0:	mov	r0, #0
   438a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   438a8:	mov	r0, #0
   438ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   438b0:	mul	r2, r0, r6
   438b4:	mov	r1, r4
   438b8:	mov	r0, r5
   438bc:	bl	14f8 <memcpy@plt>
   438c0:	mov	r0, r8
   438c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   438c8:	ldr	r3, [sp, #32]
   438cc:	add	r4, r4, r3, lsl #1
   438d0:	cmp	r8, #0
   438d4:	beq	4391c <GetDataLinear+0x3bc>
   438d8:	cmp	r6, #0
   438dc:	lslgt	r8, r8, #1
   438e0:	addgt	r6, r5, r6, lsl #1
   438e4:	movgt	r0, r5
   438e8:	ble	43914 <GetDataLinear+0x3b4>
   438ec:	add	r5, r0, #2
   438f0:	mov	r2, r7
   438f4:	mov	r1, r4
   438f8:	bl	14f8 <memcpy@plt>
   438fc:	add	r4, r4, r8
   43900:	mov	r0, r5
   43904:	cmp	r5, r6
   43908:	bne	438ec <GetDataLinear+0x38c>
   4390c:	mov	r0, #0
   43910:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43914:	mov	r0, #0
   43918:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4391c:	mul	r2, r0, r6
   43920:	mov	r1, r4
   43924:	mov	r0, r5
   43928:	bl	14f8 <memcpy@plt>
   4392c:	mov	r0, r8
   43930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43934:	ldr	r3, [sp, #32]
   43938:	add	r4, r4, r3
   4393c:	cmp	r8, #0
   43940:	beq	43984 <GetDataLinear+0x424>
   43944:	cmp	r6, #0
   43948:	addgt	r6, r5, r6
   4394c:	movgt	r0, r5
   43950:	ble	4397c <GetDataLinear+0x41c>
   43954:	add	r5, r0, #1
   43958:	mov	r2, r7
   4395c:	mov	r1, r4
   43960:	bl	14f8 <memcpy@plt>
   43964:	add	r4, r4, r8
   43968:	mov	r0, r5
   4396c:	cmp	r6, r5
   43970:	bne	43954 <GetDataLinear+0x3f4>
   43974:	mov	r0, #0
   43978:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4397c:	mov	r0, #0
   43980:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43984:	mul	r2, r0, r6
   43988:	mov	r1, r4
   4398c:	mov	r0, r5
   43990:	bl	14f8 <memcpy@plt>
   43994:	mov	r0, r8
   43998:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4399c:	ldr	r3, [sp, #32]
   439a0:	add	r4, r4, r3
   439a4:	cmp	r8, #0
   439a8:	beq	439ec <GetDataLinear+0x48c>
   439ac:	cmp	r6, #0
   439b0:	addgt	r6, r5, r6
   439b4:	movgt	r0, r5
   439b8:	ble	439e4 <GetDataLinear+0x484>
   439bc:	add	r5, r0, #1
   439c0:	mov	r2, r7
   439c4:	mov	r1, r4
   439c8:	bl	14f8 <memcpy@plt>
   439cc:	add	r4, r4, r8
   439d0:	mov	r0, r5
   439d4:	cmp	r5, r6
   439d8:	bne	439bc <GetDataLinear+0x45c>
   439dc:	mov	r0, #0
   439e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   439e4:	mov	r0, #0
   439e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   439ec:	mul	r2, r0, r6
   439f0:	mov	r1, r4
   439f4:	mov	r0, r5
   439f8:	bl	14f8 <memcpy@plt>
   439fc:	mov	r0, r8
   43a00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   43a04:	mov	r0, #1
   43a08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00043a0c <ReadRankDims>:
   43a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43a10:	sub	sp, sp, #12
   43a14:	cmp	r2, #5
   43a18:	movne	r7, #0
   43a1c:	beq	43a2c <ReadRankDims+0x20>
   43a20:	mov	r0, r7
   43a24:	add	sp, sp, #12
   43a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43a2c:	mov	r6, r1
   43a30:	mov	r8, r0
   43a34:	lsr	r9, r3, #2
   43a38:	str	r9, [r1, #4]
   43a3c:	bic	r0, r3, #3
   43a40:	bl	15ac <malloc@plt>
   43a44:	str	r0, [r6, #32]
   43a48:	cmp	r0, #0
   43a4c:	beq	43b30 <ReadRankDims+0x124>
   43a50:	cmp	r9, #0
   43a54:	ble	43af4 <ReadRankDims+0xe8>
   43a58:	mov	r4, #0
   43a5c:	mov	r5, r4
   43a60:	add	sl, sp, #4
   43a64:	mov	fp, #1
   43a68:	b	43a90 <ReadRankDims+0x84>
   43a6c:	ldr	r9, [r6, #32]
   43a70:	mov	r0, sl
   43a74:	bl	1a88 <Mat_uint32Swap>
   43a78:	str	r0, [r9, r4]
   43a7c:	add	r5, r5, #1
   43a80:	ldr	r9, [r6, #4]
   43a84:	mov	r4, r7
   43a88:	cmp	r9, r5
   43a8c:	ble	43af8 <ReadRankDims+0xec>
   43a90:	ldr	r3, [r8]
   43a94:	mov	r2, fp
   43a98:	mov	r1, #4
   43a9c:	mov	r0, sl
   43aa0:	bl	1588 <fread@plt>
   43aa4:	cmp	r0, #1
   43aa8:	bne	43acc <ReadRankDims+0xc0>
   43aac:	add	r7, r4, #4
   43ab0:	ldr	r3, [r8, #20]
   43ab4:	cmp	r3, #0
   43ab8:	bne	43a6c <ReadRankDims+0x60>
   43abc:	ldr	r3, [r6, #32]
   43ac0:	ldr	r2, [sp, #4]
   43ac4:	str	r2, [r3, r4]
   43ac8:	b	43a7c <ReadRankDims+0x70>
   43acc:	ldr	r0, [r6, #32]
   43ad0:	bl	14e0 <free@plt>
   43ad4:	mov	r3, #0
   43ad8:	str	r3, [r6, #32]
   43adc:	str	r3, [r6, #4]
   43ae0:	ldr	r0, [pc, #96]	; 43b48 <ReadRankDims+0x13c>
   43ae4:	add	r0, pc, r0
   43ae8:	bl	1690 <Mat_Critical@plt>
   43aec:	mov	r7, r4
   43af0:	b	43a20 <ReadRankDims+0x14>
   43af4:	mov	r7, #0
   43af8:	tst	r9, #1
   43afc:	beq	43a20 <ReadRankDims+0x14>
   43b00:	ldr	r3, [r8]
   43b04:	mov	r2, #1
   43b08:	mov	r1, #4
   43b0c:	add	r0, sp, r1
   43b10:	bl	1588 <fread@plt>
   43b14:	cmp	r0, #1
   43b18:	addeq	r7, r7, #4
   43b1c:	beq	43a20 <ReadRankDims+0x14>
   43b20:	ldr	r0, [pc, #36]	; 43b4c <ReadRankDims+0x140>
   43b24:	add	r0, pc, r0
   43b28:	bl	1690 <Mat_Critical@plt>
   43b2c:	b	43a20 <ReadRankDims+0x14>
   43b30:	mov	r7, #0
   43b34:	str	r7, [r6, #4]
   43b38:	ldr	r0, [pc, #16]	; 43b50 <ReadRankDims+0x144>
   43b3c:	add	r0, pc, r0
   43b40:	bl	1690 <Mat_Critical@plt>
   43b44:	b	43a20 <ReadRankDims+0x14>
   43b48:	.word	0x0000e788
   43b4c:	.word	0x0000e748
   43b50:	.word	0x0000e514

00043b54 <WriteCompressedData>:
   43b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43b58:	sub	sp, sp, #1040	; 0x410
   43b5c:	sub	sp, sp, #4
   43b60:	mov	ip, #0
   43b64:	str	ip, [sp]
   43b68:	str	ip, [sp, #4]
   43b6c:	subs	r6, r0, #0
   43b70:	beq	43cec <WriteCompressedData+0x198>
   43b74:	ldr	r0, [r6]
   43b78:	cmp	r0, ip
   43b7c:	moveq	r0, #0
   43b80:	beq	43ce0 <WriteCompressedData+0x18c>
   43b84:	mov	sl, r3
   43b88:	mov	fp, r2
   43b8c:	mov	r4, r1
   43b90:	ldr	r0, [sp, #1080]	; 0x438
   43b94:	bl	1600 <Mat_SizeOf@plt>
   43b98:	ldr	r3, [sp, #1080]	; 0x438
   43b9c:	str	r3, [sp, #1032]	; 0x408
   43ba0:	mul	r9, sl, r0
   43ba4:	str	r9, [sp, #1036]	; 0x40c
   43ba8:	add	r3, sp, #1024	; 0x400
   43bac:	add	r3, r3, #8
   43bb0:	str	r3, [r4]
   43bb4:	mov	r3, #8
   43bb8:	str	r3, [r4, #4]
   43bbc:	mov	r5, #0
   43bc0:	add	r7, sp, #8
   43bc4:	mov	r8, #1024	; 0x400
   43bc8:	str	r7, [r4, #12]
   43bcc:	str	r8, [r4, #16]
   43bd0:	mov	r1, #0
   43bd4:	mov	r0, r4
   43bd8:	bl	1564 <deflate@plt>
   43bdc:	ldr	r2, [r4, #16]
   43be0:	ldr	r3, [r6]
   43be4:	rsb	r2, r2, #1024	; 0x400
   43be8:	mov	r1, #1
   43bec:	mov	r0, r7
   43bf0:	bl	157c <fwrite@plt>
   43bf4:	add	r5, r5, r0
   43bf8:	mov	r0, r5
   43bfc:	ldr	r3, [r4, #16]
   43c00:	cmp	r3, #0
   43c04:	beq	43bc8 <WriteCompressedData+0x74>
   43c08:	cmp	fp, #0
   43c0c:	cmpne	sl, #0
   43c10:	ble	43ce0 <WriteCompressedData+0x18c>
   43c14:	str	fp, [r4]
   43c18:	str	r9, [r4, #4]
   43c1c:	add	r7, sp, #8
   43c20:	mov	fp, #1024	; 0x400
   43c24:	mov	sl, #0
   43c28:	mov	r8, #1
   43c2c:	str	r7, [r4, #12]
   43c30:	str	fp, [r4, #16]
   43c34:	mov	r1, sl
   43c38:	mov	r0, r4
   43c3c:	bl	1564 <deflate@plt>
   43c40:	ldr	r2, [r4, #16]
   43c44:	ldr	r3, [r6]
   43c48:	rsb	r2, r2, #1024	; 0x400
   43c4c:	mov	r1, r8
   43c50:	mov	r0, r7
   43c54:	bl	157c <fwrite@plt>
   43c58:	add	r5, r5, r0
   43c5c:	ldr	r3, [r4, #16]
   43c60:	cmp	r3, #0
   43c64:	beq	43c2c <WriteCompressedData+0xd8>
   43c68:	tst	r9, #7
   43c6c:	beq	43cdc <WriteCompressedData+0x188>
   43c70:	str	sp, [r4]
   43c74:	asr	r3, r9, #31
   43c78:	lsr	r2, r3, #29
   43c7c:	add	r3, r9, r2
   43c80:	and	r3, r3, #7
   43c84:	sub	r3, r3, r2
   43c88:	rsb	r3, r3, #8
   43c8c:	str	r3, [r4, #4]
   43c90:	add	r7, sp, #8
   43c94:	mov	sl, #1024	; 0x400
   43c98:	mov	r9, #0
   43c9c:	mov	r8, #1
   43ca0:	str	r7, [r4, #12]
   43ca4:	str	sl, [r4, #16]
   43ca8:	mov	r1, r9
   43cac:	mov	r0, r4
   43cb0:	bl	1564 <deflate@plt>
   43cb4:	ldr	r2, [r4, #16]
   43cb8:	ldr	r3, [r6]
   43cbc:	rsb	r2, r2, #1024	; 0x400
   43cc0:	mov	r1, r8
   43cc4:	mov	r0, r7
   43cc8:	bl	157c <fwrite@plt>
   43ccc:	add	r5, r5, r0
   43cd0:	ldr	r3, [r4, #16]
   43cd4:	cmp	r3, #0
   43cd8:	beq	43ca0 <WriteCompressedData+0x14c>
   43cdc:	mov	r0, r5
   43ce0:	add	sp, sp, #1040	; 0x410
   43ce4:	add	sp, sp, #4
   43ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43cec:	mov	r0, #0
   43cf0:	b	43ce0 <WriteCompressedData+0x18c>

00043cf4 <WriteType>:
   43cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43cf8:	sub	sp, sp, #124	; 0x7c
   43cfc:	mov	r4, r0
   43d00:	mov	r5, r1
   43d04:	mov	r3, #1
   43d08:	strh	r3, [sp, #118]	; 0x76
   43d0c:	mov	r2, #0
   43d10:	strb	r2, [sp, #117]	; 0x75
   43d14:	add	r1, sp, #120	; 0x78
   43d18:	str	r3, [r1, #-12]!
   43d1c:	mov	r0, r5
   43d20:	bl	4d06c <SafeMulDims>
   43d24:	ldr	r3, [r5, #16]
   43d28:	sub	r3, r3, #1
   43d2c:	cmp	r3, #14
   43d30:	addls	pc, pc, r3, lsl #2
   43d34:	b	43e54 <WriteType+0x160>
   43d38:	b	44198 <WriteType+0x4a4>
   43d3c:	b	445f4 <WriteType+0x900>
   43d40:	b	43e54 <WriteType+0x160>
   43d44:	b	43ed4 <WriteType+0x1e0>
   43d48:	b	44d10 <WriteType+0x101c>
   43d4c:	b	43d74 <WriteType+0x80>
   43d50:	b	43d74 <WriteType+0x80>
   43d54:	b	43d74 <WriteType+0x80>
   43d58:	b	43d74 <WriteType+0x80>
   43d5c:	b	43d74 <WriteType+0x80>
   43d60:	b	43d74 <WriteType+0x80>
   43d64:	b	43d74 <WriteType+0x80>
   43d68:	b	43d74 <WriteType+0x80>
   43d6c:	b	43d74 <WriteType+0x80>
   43d70:	b	43d74 <WriteType+0x80>
   43d74:	ldr	r3, [r5, #20]
   43d78:	cmp	r3, #0
   43d7c:	beq	43e6c <WriteType+0x178>
   43d80:	ldr	r8, [r5, #40]	; 0x28
   43d84:	cmp	r8, #0
   43d88:	beq	43e60 <WriteType+0x16c>
   43d8c:	ldr	r3, [r5, #8]
   43d90:	ldr	r2, [sp, #108]	; 0x6c
   43d94:	ldr	r1, [r8]
   43d98:	mov	r0, r4
   43d9c:	bl	20ae0 <WriteData>
   43da0:	str	r0, [sp, #112]	; 0x70
   43da4:	tst	r0, #7
   43da8:	beq	43df0 <WriteType+0xfc>
   43dac:	asr	r3, r0, #31
   43db0:	lsr	r3, r3, #29
   43db4:	add	r6, r0, r3
   43db8:	and	r6, r6, #7
   43dbc:	sub	r6, r6, r3
   43dc0:	cmp	r6, #7
   43dc4:	bgt	43df0 <WriteType+0xfc>
   43dc8:	add	r9, sp, #117	; 0x75
   43dcc:	mov	r7, #1
   43dd0:	ldr	r3, [r4]
   43dd4:	mov	r2, r7
   43dd8:	mov	r1, r7
   43ddc:	mov	r0, r9
   43de0:	bl	157c <fwrite@plt>
   43de4:	add	r6, r6, #1
   43de8:	cmp	r6, #8
   43dec:	bne	43dd0 <WriteType+0xdc>
   43df0:	ldr	r3, [r5, #8]
   43df4:	ldr	r2, [sp, #108]	; 0x6c
   43df8:	ldr	r1, [r8, #4]
   43dfc:	mov	r0, r4
   43e00:	bl	20ae0 <WriteData>
   43e04:	str	r0, [sp, #112]	; 0x70
   43e08:	tst	r0, #7
   43e0c:	beq	43e54 <WriteType+0x160>
   43e10:	asr	r5, r0, #31
   43e14:	lsr	r3, r5, #29
   43e18:	add	r5, r0, r3
   43e1c:	and	r5, r5, #7
   43e20:	sub	r5, r5, r3
   43e24:	cmp	r5, #7
   43e28:	bgt	43e54 <WriteType+0x160>
   43e2c:	add	r7, sp, #117	; 0x75
   43e30:	mov	r6, #1
   43e34:	ldr	r3, [r4]
   43e38:	mov	r2, r6
   43e3c:	mov	r1, r6
   43e40:	mov	r0, r7
   43e44:	bl	157c <fwrite@plt>
   43e48:	add	r5, r5, #1
   43e4c:	cmp	r5, #8
   43e50:	bne	43e34 <WriteType+0x140>
   43e54:	mov	r0, #0
   43e58:	add	sp, sp, #124	; 0x7c
   43e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43e60:	ldr	r8, [pc, #3732]	; 44cfc <WriteType+0x1008>
   43e64:	add	r8, pc, r8
   43e68:	b	43d8c <WriteType+0x98>
   43e6c:	ldr	r3, [r5, #8]
   43e70:	ldr	r2, [sp, #108]	; 0x6c
   43e74:	ldr	r1, [r5, #40]	; 0x28
   43e78:	mov	r0, r4
   43e7c:	bl	20ae0 <WriteData>
   43e80:	str	r0, [sp, #112]	; 0x70
   43e84:	tst	r0, #7
   43e88:	beq	43e54 <WriteType+0x160>
   43e8c:	asr	r3, r0, #31
   43e90:	lsr	r3, r3, #29
   43e94:	add	r5, r0, r3
   43e98:	and	r5, r5, #7
   43e9c:	sub	r5, r5, r3
   43ea0:	cmp	r5, #7
   43ea4:	bgt	43e54 <WriteType+0x160>
   43ea8:	add	r7, sp, #117	; 0x75
   43eac:	mov	r6, #1
   43eb0:	ldr	r3, [r4]
   43eb4:	mov	r2, r6
   43eb8:	mov	r1, r6
   43ebc:	mov	r0, r7
   43ec0:	bl	157c <fwrite@plt>
   43ec4:	add	r5, r5, #1
   43ec8:	cmp	r5, #8
   43ecc:	bne	43eb0 <WriteType+0x1bc>
   43ed0:	b	43e54 <WriteType+0x160>
   43ed4:	ldr	r6, [r5, #40]	; 0x28
   43ed8:	ldr	r7, [sp, #108]	; 0x6c
   43edc:	ldr	r3, [r5, #8]
   43ee0:	str	r3, [sp, #96]	; 0x60
   43ee4:	mov	r2, #0
   43ee8:	strb	r2, [sp, #88]	; 0x58
   43eec:	cmp	r3, #16
   43ef0:	addls	pc, pc, r3, lsl #2
   43ef4:	b	43e54 <WriteType+0x160>
   43ef8:	b	4415c <WriteType+0x468>
   43efc:	b	43fe4 <WriteType+0x2f0>
   43f00:	b	43fe4 <WriteType+0x2f0>
   43f04:	b	43e54 <WriteType+0x160>
   43f08:	b	43f3c <WriteType+0x248>
   43f0c:	b	43e54 <WriteType+0x160>
   43f10:	b	43e54 <WriteType+0x160>
   43f14:	b	43e54 <WriteType+0x160>
   43f18:	b	43e54 <WriteType+0x160>
   43f1c:	b	43e54 <WriteType+0x160>
   43f20:	b	43e54 <WriteType+0x160>
   43f24:	b	43e54 <WriteType+0x160>
   43f28:	b	43e54 <WriteType+0x160>
   43f2c:	b	43e54 <WriteType+0x160>
   43f30:	b	43e54 <WriteType+0x160>
   43f34:	b	43e54 <WriteType+0x160>
   43f38:	b	440b8 <WriteType+0x3c4>
   43f3c:	lsl	r3, r7, #1
   43f40:	str	r3, [sp, #100]	; 0x64
   43f44:	ldr	r3, [r4]
   43f48:	mov	r2, #1
   43f4c:	mov	r1, #4
   43f50:	add	r0, sp, #96	; 0x60
   43f54:	bl	157c <fwrite@plt>
   43f58:	ldr	r3, [r4]
   43f5c:	mov	r2, #1
   43f60:	mov	r1, #4
   43f64:	add	r0, sp, #100	; 0x64
   43f68:	bl	157c <fwrite@plt>
   43f6c:	cmp	r6, #0
   43f70:	cmpne	r7, #0
   43f74:	bgt	43fcc <WriteType+0x2d8>
   43f78:	ldr	r3, [sp, #100]	; 0x64
   43f7c:	tst	r3, #7
   43f80:	beq	43e54 <WriteType+0x160>
   43f84:	asr	r2, r3, #31
   43f88:	lsr	r2, r2, #29
   43f8c:	add	r5, r3, r2
   43f90:	and	r5, r5, #7
   43f94:	sub	r5, r5, r2
   43f98:	cmp	r5, #7
   43f9c:	bgt	43e54 <WriteType+0x160>
   43fa0:	add	r7, sp, #88	; 0x58
   43fa4:	mov	r6, #1
   43fa8:	ldr	r3, [r4]
   43fac:	mov	r2, r6
   43fb0:	mov	r1, r6
   43fb4:	mov	r0, r7
   43fb8:	bl	157c <fwrite@plt>
   43fbc:	add	r5, r5, #1
   43fc0:	cmp	r5, #8
   43fc4:	bne	43fa8 <WriteType+0x2b4>
   43fc8:	b	43e54 <WriteType+0x160>
   43fcc:	ldr	r3, [r4]
   43fd0:	mov	r2, r7
   43fd4:	mov	r1, #2
   43fd8:	mov	r0, r6
   43fdc:	bl	157c <fwrite@plt>
   43fe0:	b	43f78 <WriteType+0x284>
   43fe4:	lsl	r3, r7, #1
   43fe8:	str	r3, [sp, #100]	; 0x64
   43fec:	mov	r5, #4
   43ff0:	add	r0, sp, #120	; 0x78
   43ff4:	str	r5, [r0, #-24]!	; 0xffffffe8
   43ff8:	ldr	r3, [r4]
   43ffc:	mov	r2, #1
   44000:	mov	r1, r5
   44004:	bl	157c <fwrite@plt>
   44008:	ldr	r3, [r4]
   4400c:	mov	r2, #1
   44010:	mov	r1, r5
   44014:	add	r0, sp, #100	; 0x64
   44018:	bl	157c <fwrite@plt>
   4401c:	cmp	r6, #0
   44020:	beq	43e54 <WriteType+0x160>
   44024:	cmp	r7, #0
   44028:	ble	44064 <WriteType+0x370>
   4402c:	add	r7, r6, r7
   44030:	mov	r5, r6
   44034:	add	r9, sp, #92	; 0x5c
   44038:	mov	r8, #1
   4403c:	mov	r6, #2
   44040:	ldrb	r3, [r5], #1
   44044:	strh	r3, [sp, #92]	; 0x5c
   44048:	ldr	r3, [r4]
   4404c:	mov	r2, r8
   44050:	mov	r1, r6
   44054:	mov	r0, r9
   44058:	bl	157c <fwrite@plt>
   4405c:	cmp	r5, r7
   44060:	bne	44040 <WriteType+0x34c>
   44064:	ldr	r3, [sp, #100]	; 0x64
   44068:	tst	r3, #7
   4406c:	beq	43e54 <WriteType+0x160>
   44070:	asr	r2, r3, #31
   44074:	lsr	r2, r2, #29
   44078:	add	r5, r3, r2
   4407c:	and	r5, r5, #7
   44080:	sub	r5, r5, r2
   44084:	cmp	r5, #7
   44088:	bgt	43e54 <WriteType+0x160>
   4408c:	add	r7, sp, #88	; 0x58
   44090:	mov	r6, #1
   44094:	ldr	r3, [r4]
   44098:	mov	r2, r6
   4409c:	mov	r1, r6
   440a0:	mov	r0, r7
   440a4:	bl	157c <fwrite@plt>
   440a8:	add	r5, r5, #1
   440ac:	cmp	r5, #8
   440b0:	bne	44094 <WriteType+0x3a0>
   440b4:	b	43e54 <WriteType+0x160>
   440b8:	str	r7, [sp, #100]	; 0x64
   440bc:	ldr	r3, [r4]
   440c0:	mov	r2, #1
   440c4:	mov	r1, #4
   440c8:	add	r0, sp, #96	; 0x60
   440cc:	bl	157c <fwrite@plt>
   440d0:	ldr	r3, [r4]
   440d4:	mov	r2, #1
   440d8:	mov	r1, #4
   440dc:	add	r0, sp, #100	; 0x64
   440e0:	bl	157c <fwrite@plt>
   440e4:	cmp	r6, #0
   440e8:	beq	44108 <WriteType+0x414>
   440ec:	ldr	r2, [sp, #100]	; 0x64
   440f0:	cmp	r2, #0
   440f4:	ble	44108 <WriteType+0x414>
   440f8:	ldr	r3, [r4]
   440fc:	mov	r1, #1
   44100:	mov	r0, r6
   44104:	bl	157c <fwrite@plt>
   44108:	ldr	r3, [sp, #100]	; 0x64
   4410c:	tst	r3, #7
   44110:	beq	43e54 <WriteType+0x160>
   44114:	asr	r2, r3, #31
   44118:	lsr	r2, r2, #29
   4411c:	add	r5, r3, r2
   44120:	and	r5, r5, #7
   44124:	sub	r5, r5, r2
   44128:	cmp	r5, #7
   4412c:	bgt	43e54 <WriteType+0x160>
   44130:	add	r7, sp, #88	; 0x58
   44134:	mov	r6, #1
   44138:	ldr	r3, [r4]
   4413c:	mov	r2, r6
   44140:	mov	r1, r6
   44144:	mov	r0, r7
   44148:	bl	157c <fwrite@plt>
   4414c:	add	r5, r5, #1
   44150:	cmp	r5, #8
   44154:	bne	44138 <WriteType+0x444>
   44158:	b	43e54 <WriteType+0x160>
   4415c:	lsl	r7, r7, #1
   44160:	str	r7, [sp, #100]	; 0x64
   44164:	mov	r5, #4
   44168:	add	r0, sp, #120	; 0x78
   4416c:	str	r5, [r0, #-24]!	; 0xffffffe8
   44170:	ldr	r3, [r4]
   44174:	mov	r2, #1
   44178:	mov	r1, r5
   4417c:	bl	157c <fwrite@plt>
   44180:	ldr	r3, [r4]
   44184:	mov	r2, #1
   44188:	mov	r1, r5
   4418c:	add	r0, sp, #100	; 0x64
   44190:	bl	157c <fwrite@plt>
   44194:	b	43e54 <WriteType+0x160>
   44198:	ldr	r0, [r5]
   4419c:	cmp	r0, #0
   441a0:	beq	43e54 <WriteType+0x160>
   441a4:	ldr	sl, [r5, #40]	; 0x28
   441a8:	ldr	r1, [r5, #12]
   441ac:	cmp	r1, #0
   441b0:	cmpne	sl, #0
   441b4:	beq	43e54 <WriteType+0x160>
   441b8:	bl	513bc <__udivsi3>
   441bc:	str	r0, [sp, #108]	; 0x6c
   441c0:	cmp	r0, #0
   441c4:	beq	43e54 <WriteType+0x160>
   441c8:	sub	sl, sl, #4
   441cc:	mov	r8, #0
   441d0:	mov	r9, #1
   441d4:	mov	fp, #5
   441d8:	mov	r7, r8
   441dc:	ldr	r3, [pc, #2844]	; 44d00 <WriteType+0x100c>
   441e0:	add	r3, pc, r3
   441e4:	str	r3, [sp, #8]
   441e8:	b	442cc <WriteType+0x5d8>
   441ec:	add	r0, sp, #68	; 0x44
   441f0:	bl	1a20 <Mat_int32Swap>
   441f4:	str	r0, [sp, #68]	; 0x44
   441f8:	b	443a8 <WriteType+0x6b4>
   441fc:	ldr	r3, [r4]
   44200:	mov	r2, r9
   44204:	mov	r1, #4
   44208:	add	r0, sp, #84	; 0x54
   4420c:	bl	157c <fwrite@plt>
   44210:	b	4447c <WriteType+0x788>
   44214:	ldr	r3, [r4]
   44218:	mov	r2, r9
   4421c:	mov	r1, #2
   44220:	add	r0, sp, #64	; 0x40
   44224:	bl	157c <fwrite@plt>
   44228:	ldr	r3, [r4]
   4422c:	mov	r2, r9
   44230:	mov	r1, r9
   44234:	add	r6, sp, #60	; 0x3c
   44238:	mov	r0, r6
   4423c:	bl	157c <fwrite@plt>
   44240:	ldr	r3, [r4]
   44244:	mov	r2, r9
   44248:	mov	r1, r9
   4424c:	mov	r0, r6
   44250:	bl	157c <fwrite@plt>
   44254:	ldr	r3, [r4]
   44258:	mov	r2, r9
   4425c:	mov	r1, #4
   44260:	add	r0, sp, #84	; 0x54
   44264:	bl	157c <fwrite@plt>
   44268:	b	4428c <WriteType+0x598>
   4426c:	ldr	r3, [r4]
   44270:	mov	r2, r9
   44274:	mov	r1, r9
   44278:	ldr	r0, [sp]
   4427c:	bl	157c <fwrite@plt>
   44280:	add	r6, r6, #1
   44284:	cmp	r6, #4
   44288:	bne	4426c <WriteType+0x578>
   4428c:	mov	r1, r5
   44290:	mov	r0, r4
   44294:	bl	43cf4 <WriteType>
   44298:	ldr	r0, [r4]
   4429c:	bl	151c <ftell@plt>
   442a0:	mov	r5, r0
   442a4:	ldr	r3, [sp, #4]
   442a8:	cmn	r0, #1
   442ac:	cmnne	r3, #1
   442b0:	bne	445ac <WriteType+0x8b8>
   442b4:	ldr	r0, [sp, #8]
   442b8:	bl	1690 <Mat_Critical@plt>
   442bc:	add	r8, r8, #1
   442c0:	ldr	r3, [sp, #108]	; 0x6c
   442c4:	cmp	r3, r8
   442c8:	bls	43e54 <WriteType+0x160>
   442cc:	ldr	r5, [sl, #4]!
   442d0:	strh	r9, [sp, #64]	; 0x40
   442d4:	mov	r3, #6
   442d8:	str	r3, [sp, #72]	; 0x48
   442dc:	str	fp, [sp, #76]	; 0x4c
   442e0:	mov	r3, #8
   442e4:	str	r3, [sp, #80]	; 0x50
   442e8:	str	r7, [sp, #84]	; 0x54
   442ec:	mov	r3, #14
   442f0:	str	r3, [sp, #88]	; 0x58
   442f4:	strb	r7, [sp, #60]	; 0x3c
   442f8:	str	r7, [sp, #96]	; 0x60
   442fc:	cmp	r4, #0
   44300:	cmpne	r5, #0
   44304:	beq	442bc <WriteType+0x5c8>
   44308:	ldr	r3, [r4]
   4430c:	mov	r2, r9
   44310:	mov	r1, #4
   44314:	add	r0, sp, #88	; 0x58
   44318:	bl	157c <fwrite@plt>
   4431c:	ldr	r3, [r4]
   44320:	mov	r2, r9
   44324:	mov	r1, #4
   44328:	add	r0, sp, #84	; 0x54
   4432c:	bl	157c <fwrite@plt>
   44330:	ldr	r3, [r5, #16]
   44334:	cmp	r3, #0
   44338:	beq	442bc <WriteType+0x5c8>
   4433c:	ldr	r0, [r4]
   44340:	bl	151c <ftell@plt>
   44344:	str	r0, [sp, #4]
   44348:	ldr	r2, [r5, #16]
   4434c:	uxtb	r3, r2
   44350:	str	r3, [sp, #68]	; 0x44
   44354:	ldr	r1, [r5, #20]
   44358:	cmp	r1, #0
   4435c:	orrne	r3, r3, #2048	; 0x800
   44360:	strne	r3, [sp, #68]	; 0x44
   44364:	ldr	r3, [r5, #24]
   44368:	cmp	r3, #0
   4436c:	ldrne	r3, [sp, #68]	; 0x44
   44370:	orrne	r3, r3, #1024	; 0x400
   44374:	strne	r3, [sp, #68]	; 0x44
   44378:	ldr	r3, [r5, #28]
   4437c:	cmp	r3, #0
   44380:	ldrne	r3, [sp, #68]	; 0x44
   44384:	orrne	r3, r3, #512	; 0x200
   44388:	strne	r3, [sp, #68]	; 0x44
   4438c:	cmp	r2, #5
   44390:	ldreq	r3, [r5, #40]	; 0x28
   44394:	ldreq	r3, [r3]
   44398:	streq	r3, [sp, #96]	; 0x60
   4439c:	ldr	r3, [r4, #20]
   443a0:	cmp	r3, #0
   443a4:	bne	441ec <WriteType+0x4f8>
   443a8:	ldr	r3, [r4]
   443ac:	mov	r2, r9
   443b0:	mov	r1, #4
   443b4:	add	r0, sp, #72	; 0x48
   443b8:	bl	157c <fwrite@plt>
   443bc:	ldr	r3, [r4]
   443c0:	mov	r2, r9
   443c4:	mov	r1, #4
   443c8:	add	r0, sp, #80	; 0x50
   443cc:	bl	157c <fwrite@plt>
   443d0:	ldr	r3, [r4]
   443d4:	mov	r2, r9
   443d8:	mov	r1, #4
   443dc:	add	r0, sp, #68	; 0x44
   443e0:	bl	157c <fwrite@plt>
   443e4:	ldr	r3, [r4]
   443e8:	mov	r2, r9
   443ec:	mov	r1, #4
   443f0:	add	r0, sp, #96	; 0x60
   443f4:	bl	157c <fwrite@plt>
   443f8:	ldr	r3, [r5, #4]
   443fc:	lsl	r3, r3, #2
   44400:	str	r3, [sp, #92]	; 0x5c
   44404:	ldr	r3, [r4]
   44408:	mov	r2, r9
   4440c:	mov	r1, #4
   44410:	add	r0, sp, #76	; 0x4c
   44414:	bl	157c <fwrite@plt>
   44418:	ldr	r3, [r4]
   4441c:	mov	r2, r9
   44420:	mov	r1, #4
   44424:	add	r0, sp, #92	; 0x5c
   44428:	bl	157c <fwrite@plt>
   4442c:	ldr	r3, [r5, #4]
   44430:	cmp	r3, #0
   44434:	ble	44474 <WriteType+0x780>
   44438:	mov	r6, #0
   4443c:	add	r3, sp, #100	; 0x64
   44440:	str	r3, [sp]
   44444:	ldr	r3, [r5, #32]
   44448:	ldr	r3, [r3, r6, lsl #2]
   4444c:	str	r3, [sp, #100]	; 0x64
   44450:	ldr	r3, [r4]
   44454:	mov	r2, r9
   44458:	mov	r1, #4
   4445c:	ldr	r0, [sp]
   44460:	bl	157c <fwrite@plt>
   44464:	add	r6, r6, #1
   44468:	ldr	r3, [r5, #4]
   4446c:	cmp	r6, r3
   44470:	blt	44444 <WriteType+0x750>
   44474:	tst	r3, #1
   44478:	bne	441fc <WriteType+0x508>
   4447c:	ldr	r0, [r5, #36]	; 0x24
   44480:	cmp	r0, #0
   44484:	beq	44214 <WriteType+0x520>
   44488:	bl	1630 <strlen@plt>
   4448c:	cmp	r0, #4
   44490:	bhi	444ec <WriteType+0x7f8>
   44494:	strh	r0, [sp, #100]	; 0x64
   44498:	ldr	r3, [r4]
   4449c:	mov	r2, r9
   444a0:	mov	r1, #2
   444a4:	add	r0, sp, #64	; 0x40
   444a8:	bl	157c <fwrite@plt>
   444ac:	ldr	r3, [r4]
   444b0:	mov	r2, r9
   444b4:	mov	r1, #2
   444b8:	add	r0, sp, #100	; 0x64
   444bc:	bl	157c <fwrite@plt>
   444c0:	ldr	r3, [r4]
   444c4:	ldrsh	r2, [sp, #100]	; 0x64
   444c8:	mov	r1, r9
   444cc:	ldr	r0, [r5, #36]	; 0x24
   444d0:	bl	157c <fwrite@plt>
   444d4:	ldrsh	r6, [sp, #100]	; 0x64
   444d8:	cmp	r6, #3
   444dc:	bgt	4428c <WriteType+0x598>
   444e0:	add	r3, sp, #60	; 0x3c
   444e4:	str	r3, [sp]
   444e8:	b	4426c <WriteType+0x578>
   444ec:	str	r0, [sp, #100]	; 0x64
   444f0:	ldr	r3, [r4]
   444f4:	mov	r2, r9
   444f8:	mov	r1, #2
   444fc:	add	r0, sp, #64	; 0x40
   44500:	bl	157c <fwrite@plt>
   44504:	ldr	r3, [r4]
   44508:	mov	r2, r9
   4450c:	mov	r1, r9
   44510:	add	r6, sp, #60	; 0x3c
   44514:	mov	r0, r6
   44518:	bl	157c <fwrite@plt>
   4451c:	ldr	r3, [r4]
   44520:	mov	r2, r9
   44524:	mov	r1, r9
   44528:	mov	r0, r6
   4452c:	bl	157c <fwrite@plt>
   44530:	ldr	r3, [r4]
   44534:	mov	r2, r9
   44538:	mov	r1, #4
   4453c:	add	r0, sp, #100	; 0x64
   44540:	bl	157c <fwrite@plt>
   44544:	ldr	r3, [r4]
   44548:	ldr	r2, [sp, #100]	; 0x64
   4454c:	mov	r1, r9
   44550:	ldr	r0, [r5, #36]	; 0x24
   44554:	bl	157c <fwrite@plt>
   44558:	ldr	r3, [sp, #100]	; 0x64
   4455c:	tst	r3, #7
   44560:	beq	4428c <WriteType+0x598>
   44564:	asr	r2, r3, #31
   44568:	lsr	r2, r2, #29
   4456c:	add	r6, r3, r2
   44570:	and	r6, r6, #7
   44574:	sub	r6, r6, r2
   44578:	cmp	r6, #7
   4457c:	bgt	4428c <WriteType+0x598>
   44580:	add	r3, sp, #60	; 0x3c
   44584:	str	r3, [sp]
   44588:	ldr	r3, [r4]
   4458c:	mov	r2, r9
   44590:	mov	r1, r9
   44594:	ldr	r0, [sp]
   44598:	bl	157c <fwrite@plt>
   4459c:	add	r6, r6, #1
   445a0:	cmp	r6, #8
   445a4:	bne	44588 <WriteType+0x894>
   445a8:	b	4428c <WriteType+0x598>
   445ac:	sub	r3, r0, r3
   445b0:	add	r6, sp, #120	; 0x78
   445b4:	str	r3, [r6, #-28]!	; 0xffffffe4
   445b8:	mov	r2, r9
   445bc:	mvn	r1, #3
   445c0:	sub	r1, r1, r3
   445c4:	ldr	r0, [r4]
   445c8:	bl	1714 <fseek@plt>
   445cc:	ldr	r3, [r4]
   445d0:	mov	r2, r9
   445d4:	mov	r1, #4
   445d8:	mov	r0, r6
   445dc:	bl	157c <fwrite@plt>
   445e0:	mov	r2, r7
   445e4:	mov	r1, r5
   445e8:	ldr	r0, [r4]
   445ec:	bl	1714 <fseek@plt>
   445f0:	b	442bc <WriteType+0x5c8>
   445f4:	ldr	r3, [r5, #52]	; 0x34
   445f8:	ldr	r9, [r3, #4]
   445fc:	cmp	r9, #0
   44600:	beq	447b0 <WriteType+0xabc>
   44604:	ldr	r7, [r3, #8]
   44608:	add	r8, r7, r9, lsl #2
   4460c:	mov	r6, #0
   44610:	ldr	r0, [r7], #4
   44614:	bl	1630 <strlen@plt>
   44618:	cmp	r6, r0
   4461c:	movcc	r6, r0
   44620:	cmp	r8, r7
   44624:	bne	44610 <WriteType+0x91c>
   44628:	ldr	sl, [r5, #40]	; 0x28
   4462c:	add	r3, r6, #1
   44630:	str	r3, [sp, #24]
   44634:	mul	r3, r3, r9
   44638:	tst	r3, #7
   4463c:	beq	44664 <WriteType+0x970>
   44640:	add	r6, r6, #2
   44644:	add	r3, r3, r9
   44648:	mov	r1, r6
   4464c:	and	r2, r3, #7
   44650:	add	r6, r6, #1
   44654:	add	r3, r3, r9
   44658:	cmp	r2, #0
   4465c:	bne	44648 <WriteType+0x954>
   44660:	str	r1, [sp, #24]
   44664:	add	r0, sp, #120	; 0x78
   44668:	ldr	r3, [pc, #1684]	; 44d04 <WriteType+0x1010>
   4466c:	str	r3, [r0, #-88]!	; 0xffffffa8
   44670:	ldr	r3, [r4]
   44674:	mov	r2, #1
   44678:	mov	r1, #4
   4467c:	bl	157c <fwrite@plt>
   44680:	ldr	r3, [r4]
   44684:	mov	r2, #1
   44688:	mov	r1, #4
   4468c:	add	r0, sp, #24
   44690:	bl	157c <fwrite@plt>
   44694:	ldr	r3, [r4]
   44698:	mov	r2, #1
   4469c:	mov	r1, #2
   446a0:	add	r0, sp, #118	; 0x76
   446a4:	bl	157c <fwrite@plt>
   446a8:	ldr	r3, [r4]
   446ac:	mov	r2, #1
   446b0:	mov	r1, r2
   446b4:	add	r6, sp, #117	; 0x75
   446b8:	mov	r0, r6
   446bc:	bl	157c <fwrite@plt>
   446c0:	ldr	r3, [r4]
   446c4:	mov	r2, #1
   446c8:	mov	r1, r2
   446cc:	mov	r0, r6
   446d0:	bl	157c <fwrite@plt>
   446d4:	ldr	r3, [sp, #24]
   446d8:	mul	r3, r9, r3
   446dc:	add	r0, sp, #120	; 0x78
   446e0:	str	r3, [r0, #-8]!
   446e4:	ldr	r3, [r4]
   446e8:	mov	r2, #1
   446ec:	mov	r1, #4
   446f0:	bl	157c <fwrite@plt>
   446f4:	mov	r1, #1
   446f8:	ldr	r0, [sp, #24]
   446fc:	bl	1468 <calloc@plt>
   44700:	str	r0, [sp]
   44704:	mov	r6, #0
   44708:	mov	fp, #1
   4470c:	ldr	r3, [r5, #52]	; 0x34
   44710:	ldr	r3, [r3, #8]
   44714:	ldr	r8, [r3, r6, lsl #2]
   44718:	mov	r0, r8
   4471c:	bl	1630 <strlen@plt>
   44720:	mov	r7, r0
   44724:	ldr	r3, [r4]
   44728:	mov	r2, r0
   4472c:	mov	r1, fp
   44730:	mov	r0, r8
   44734:	bl	157c <fwrite@plt>
   44738:	ldr	r3, [r4]
   4473c:	ldr	r2, [sp, #24]
   44740:	sub	r2, r2, r7
   44744:	mov	r1, fp
   44748:	ldr	r0, [sp]
   4474c:	bl	157c <fwrite@plt>
   44750:	add	r6, r6, #1
   44754:	cmp	r9, r6
   44758:	bne	4470c <WriteType+0xa18>
   4475c:	ldr	r0, [sp]
   44760:	bl	14e0 <free@plt>
   44764:	mov	r2, r6
   44768:	ldr	r1, [sp, #108]	; 0x6c
   4476c:	add	r0, sp, #28
   44770:	bl	4d0c8 <SafeMul>
   44774:	ldr	r3, [sp, #28]
   44778:	cmp	r3, #0
   4477c:	beq	43e54 <WriteType+0x160>
   44780:	sub	sl, sl, #4
   44784:	mov	r9, #0
   44788:	mov	fp, #1
   4478c:	mov	r8, #6
   44790:	mov	r7, #8
   44794:	ldr	r3, [pc, #1388]	; 44d08 <WriteType+0x1014>
   44798:	add	r3, pc, r3
   4479c:	str	r3, [sp, #8]
   447a0:	ldr	r3, [pc, #1380]	; 44d0c <WriteType+0x1018>
   447a4:	add	r3, pc, r3
   447a8:	str	r3, [sp, #12]
   447ac:	b	44af0 <WriteType+0xdfc>
   447b0:	add	r0, sp, #120	; 0x78
   447b4:	ldr	r3, [pc, #1352]	; 44d04 <WriteType+0x1010>
   447b8:	str	r3, [r0, #-88]!	; 0xffffffa8
   447bc:	ldr	r3, [r4]
   447c0:	mov	r2, #1
   447c4:	mov	r1, #4
   447c8:	bl	157c <fwrite@plt>
   447cc:	mov	r5, #1
   447d0:	add	r0, sp, #120	; 0x78
   447d4:	str	r5, [r0, #-96]!	; 0xffffffa0
   447d8:	ldr	r3, [r4]
   447dc:	mov	r2, r5
   447e0:	mov	r1, #4
   447e4:	bl	157c <fwrite@plt>
   447e8:	ldr	r3, [r4]
   447ec:	mov	r2, r5
   447f0:	mov	r1, #2
   447f4:	add	r0, sp, #118	; 0x76
   447f8:	bl	157c <fwrite@plt>
   447fc:	ldr	r3, [r4]
   44800:	mov	r2, r5
   44804:	mov	r1, r5
   44808:	add	r6, sp, #117	; 0x75
   4480c:	mov	r0, r6
   44810:	bl	157c <fwrite@plt>
   44814:	ldr	r3, [r4]
   44818:	mov	r2, r5
   4481c:	mov	r1, r5
   44820:	mov	r0, r6
   44824:	bl	157c <fwrite@plt>
   44828:	add	r0, sp, #120	; 0x78
   4482c:	mov	r3, #0
   44830:	str	r3, [r0, #-8]!
   44834:	ldr	r3, [r4]
   44838:	mov	r2, r5
   4483c:	mov	r1, #4
   44840:	bl	157c <fwrite@plt>
   44844:	b	43e54 <WriteType+0x160>
   44848:	str	r3, [sp, #100]	; 0x64
   4484c:	str	r3, [sp, #104]	; 0x68
   44850:	str	fp, [sp, #68]	; 0x44
   44854:	str	r2, [sp, #72]	; 0x48
   44858:	str	r8, [sp, #76]	; 0x4c
   4485c:	mov	r2, #5
   44860:	str	r2, [sp, #80]	; 0x50
   44864:	str	r7, [sp, #84]	; 0x54
   44868:	str	r3, [sp, #88]	; 0x58
   4486c:	strb	r3, [sp, #23]
   44870:	ldr	r3, [r4]
   44874:	mov	r2, fp
   44878:	mov	r1, #4
   4487c:	add	r0, sp, #72	; 0x48
   44880:	bl	157c <fwrite@plt>
   44884:	ldr	r3, [r4]
   44888:	mov	r2, fp
   4488c:	mov	r1, #4
   44890:	add	r0, sp, #88	; 0x58
   44894:	bl	157c <fwrite@plt>
   44898:	ldr	r0, [r4]
   4489c:	bl	151c <ftell@plt>
   448a0:	str	r0, [sp]
   448a4:	str	r8, [sp, #64]	; 0x40
   448a8:	ldr	r3, [r4, #20]
   448ac:	cmp	r3, #0
   448b0:	bne	44a1c <WriteType+0xd28>
   448b4:	ldr	r3, [r4]
   448b8:	mov	r2, fp
   448bc:	mov	r1, #4
   448c0:	add	r0, sp, #76	; 0x4c
   448c4:	bl	157c <fwrite@plt>
   448c8:	ldr	r3, [r4]
   448cc:	mov	r2, fp
   448d0:	mov	r1, #4
   448d4:	add	r0, sp, #84	; 0x54
   448d8:	bl	157c <fwrite@plt>
   448dc:	ldr	r3, [r4]
   448e0:	mov	r2, fp
   448e4:	mov	r1, #4
   448e8:	add	r0, sp, #64	; 0x40
   448ec:	bl	157c <fwrite@plt>
   448f0:	ldr	r3, [r4]
   448f4:	mov	r2, fp
   448f8:	mov	r1, #4
   448fc:	add	r0, sp, #88	; 0x58
   44900:	str	r0, [sp, #4]
   44904:	bl	157c <fwrite@plt>
   44908:	str	r7, [sp, #92]	; 0x5c
   4490c:	ldr	r3, [r4]
   44910:	mov	r2, fp
   44914:	mov	r1, #4
   44918:	add	r0, sp, #80	; 0x50
   4491c:	bl	157c <fwrite@plt>
   44920:	ldr	r3, [r4]
   44924:	mov	r2, fp
   44928:	mov	r1, #4
   4492c:	add	r0, sp, #92	; 0x5c
   44930:	bl	157c <fwrite@plt>
   44934:	mov	r5, #0
   44938:	add	r6, sp, #120	; 0x78
   4493c:	str	r5, [r6, #-24]!	; 0xffffffe8
   44940:	ldr	r3, [r4]
   44944:	mov	r2, fp
   44948:	mov	r1, #4
   4494c:	mov	r0, r6
   44950:	bl	157c <fwrite@plt>
   44954:	str	r5, [sp, #96]	; 0x60
   44958:	ldr	r3, [r4]
   4495c:	mov	r2, fp
   44960:	mov	r1, #4
   44964:	mov	r0, r6
   44968:	bl	157c <fwrite@plt>
   4496c:	ldr	r3, [r4]
   44970:	mov	r2, fp
   44974:	mov	r1, #4
   44978:	add	r0, sp, #68	; 0x44
   4497c:	bl	157c <fwrite@plt>
   44980:	ldr	r3, [r4]
   44984:	mov	r2, fp
   44988:	mov	r1, #4
   4498c:	ldr	r0, [sp, #4]
   44990:	bl	157c <fwrite@plt>
   44994:	mov	r3, #9
   44998:	mov	r2, r5
   4499c:	mov	r1, r5
   449a0:	mov	r0, r4
   449a4:	bl	20ae0 <WriteData>
   449a8:	str	r0, [sp, #92]	; 0x5c
   449ac:	tst	r0, #7
   449b0:	beq	449f4 <WriteType+0xd00>
   449b4:	asr	r3, r0, #31
   449b8:	lsr	r3, r3, #29
   449bc:	add	r5, r0, r3
   449c0:	and	r5, r5, #7
   449c4:	sub	r5, r5, r3
   449c8:	cmp	r5, #7
   449cc:	bgt	449f4 <WriteType+0xd00>
   449d0:	add	r6, sp, #23
   449d4:	ldr	r3, [r4]
   449d8:	mov	r2, fp
   449dc:	mov	r1, fp
   449e0:	mov	r0, r6
   449e4:	bl	157c <fwrite@plt>
   449e8:	add	r5, r5, #1
   449ec:	cmp	r5, #8
   449f0:	bne	449d4 <WriteType+0xce0>
   449f4:	ldr	r0, [r4]
   449f8:	bl	151c <ftell@plt>
   449fc:	mov	r5, r0
   44a00:	ldr	r3, [sp]
   44a04:	cmn	r0, #1
   44a08:	cmnne	r3, #1
   44a0c:	bne	44a2c <WriteType+0xd38>
   44a10:	ldr	r0, [sp, #12]
   44a14:	bl	1690 <Mat_Critical@plt>
   44a18:	b	44ae0 <WriteType+0xdec>
   44a1c:	add	r0, sp, #64	; 0x40
   44a20:	bl	1a20 <Mat_int32Swap>
   44a24:	str	r0, [sp, #64]	; 0x40
   44a28:	b	448b4 <WriteType+0xbc0>
   44a2c:	sub	r3, r0, r3
   44a30:	add	r6, sp, #120	; 0x78
   44a34:	str	r3, [r6, #-28]!	; 0xffffffe4
   44a38:	mov	r2, fp
   44a3c:	mvn	r1, #3
   44a40:	sub	r1, r1, r3
   44a44:	ldr	r0, [r4]
   44a48:	bl	1714 <fseek@plt>
   44a4c:	ldr	r3, [r4]
   44a50:	mov	r2, fp
   44a54:	mov	r1, #4
   44a58:	mov	r0, r6
   44a5c:	bl	157c <fwrite@plt>
   44a60:	mov	r2, #0
   44a64:	mov	r1, r5
   44a68:	ldr	r0, [r4]
   44a6c:	bl	1714 <fseek@plt>
   44a70:	b	44ae0 <WriteType+0xdec>
   44a74:	add	r0, sp, #92	; 0x5c
   44a78:	bl	1a20 <Mat_int32Swap>
   44a7c:	str	r0, [sp, #92]	; 0x5c
   44a80:	b	44bcc <WriteType+0xed8>
   44a84:	ldr	r3, [r4]
   44a88:	mov	r2, fp
   44a8c:	mov	r1, #4
   44a90:	add	r0, sp, #52	; 0x34
   44a94:	bl	157c <fwrite@plt>
   44a98:	b	44ca0 <WriteType+0xfac>
   44a9c:	sub	r3, r0, r3
   44aa0:	add	r6, sp, #120	; 0x78
   44aa4:	str	r3, [r6, #-24]!	; 0xffffffe8
   44aa8:	mov	r2, fp
   44aac:	mvn	r1, #3
   44ab0:	sub	r1, r1, r3
   44ab4:	ldr	r0, [r4]
   44ab8:	bl	1714 <fseek@plt>
   44abc:	ldr	r3, [r4]
   44ac0:	mov	r2, fp
   44ac4:	mov	r1, #4
   44ac8:	mov	r0, r6
   44acc:	bl	157c <fwrite@plt>
   44ad0:	mov	r2, #0
   44ad4:	mov	r1, r5
   44ad8:	ldr	r0, [r4]
   44adc:	bl	1714 <fseek@plt>
   44ae0:	add	r9, r9, #1
   44ae4:	ldr	r3, [sp, #28]
   44ae8:	cmp	r3, r9
   44aec:	bls	43e54 <WriteType+0x160>
   44af0:	ldr	r6, [sl, #4]!
   44af4:	str	fp, [sp, #36]	; 0x24
   44af8:	str	r8, [sp, #40]	; 0x28
   44afc:	mov	r3, #5
   44b00:	str	r3, [sp, #44]	; 0x2c
   44b04:	str	r7, [sp, #48]	; 0x30
   44b08:	mov	r3, #0
   44b0c:	str	r3, [sp, #52]	; 0x34
   44b10:	mov	r2, #14
   44b14:	str	r2, [sp, #56]	; 0x38
   44b18:	str	r3, [sp, #60]	; 0x3c
   44b1c:	cmp	r4, r3
   44b20:	beq	44ae0 <WriteType+0xdec>
   44b24:	cmp	r6, r3
   44b28:	beq	44848 <WriteType+0xb54>
   44b2c:	ldr	r3, [r4]
   44b30:	mov	r2, fp
   44b34:	mov	r1, #4
   44b38:	add	r0, sp, #56	; 0x38
   44b3c:	bl	157c <fwrite@plt>
   44b40:	ldr	r3, [r4]
   44b44:	mov	r2, fp
   44b48:	mov	r1, #4
   44b4c:	add	r0, sp, #52	; 0x34
   44b50:	bl	157c <fwrite@plt>
   44b54:	ldr	r3, [r6, #16]
   44b58:	cmp	r3, #0
   44b5c:	beq	44ae0 <WriteType+0xdec>
   44b60:	ldr	r0, [r4]
   44b64:	bl	151c <ftell@plt>
   44b68:	str	r0, [sp, #4]
   44b6c:	ldr	r2, [r6, #16]
   44b70:	uxtb	r3, r2
   44b74:	str	r3, [sp, #92]	; 0x5c
   44b78:	ldr	r1, [r6, #20]
   44b7c:	cmp	r1, #0
   44b80:	orrne	r3, r3, #2048	; 0x800
   44b84:	strne	r3, [sp, #92]	; 0x5c
   44b88:	ldr	r3, [r6, #24]
   44b8c:	cmp	r3, #0
   44b90:	ldrne	r3, [sp, #92]	; 0x5c
   44b94:	orrne	r3, r3, #1024	; 0x400
   44b98:	strne	r3, [sp, #92]	; 0x5c
   44b9c:	ldr	r3, [r6, #28]
   44ba0:	cmp	r3, #0
   44ba4:	ldrne	r3, [sp, #92]	; 0x5c
   44ba8:	orrne	r3, r3, #512	; 0x200
   44bac:	strne	r3, [sp, #92]	; 0x5c
   44bb0:	cmp	r2, #5
   44bb4:	ldreq	r3, [r6, #40]	; 0x28
   44bb8:	ldreq	r3, [r3]
   44bbc:	streq	r3, [sp, #60]	; 0x3c
   44bc0:	ldr	r3, [r4, #20]
   44bc4:	cmp	r3, #0
   44bc8:	bne	44a74 <WriteType+0xd80>
   44bcc:	ldr	r3, [r4]
   44bd0:	mov	r2, fp
   44bd4:	mov	r1, #4
   44bd8:	add	r0, sp, #40	; 0x28
   44bdc:	bl	157c <fwrite@plt>
   44be0:	ldr	r3, [r4]
   44be4:	mov	r2, fp
   44be8:	mov	r1, #4
   44bec:	add	r0, sp, #48	; 0x30
   44bf0:	bl	157c <fwrite@plt>
   44bf4:	ldr	r3, [r4]
   44bf8:	mov	r2, fp
   44bfc:	mov	r1, #4
   44c00:	add	r0, sp, #92	; 0x5c
   44c04:	bl	157c <fwrite@plt>
   44c08:	ldr	r3, [r4]
   44c0c:	mov	r2, fp
   44c10:	mov	r1, #4
   44c14:	add	r0, sp, #60	; 0x3c
   44c18:	bl	157c <fwrite@plt>
   44c1c:	ldr	r3, [r6, #4]
   44c20:	lsl	r3, r3, #2
   44c24:	str	r3, [sp, #96]	; 0x60
   44c28:	ldr	r3, [r4]
   44c2c:	mov	r2, fp
   44c30:	mov	r1, #4
   44c34:	add	r0, sp, #44	; 0x2c
   44c38:	bl	157c <fwrite@plt>
   44c3c:	ldr	r3, [r4]
   44c40:	mov	r2, fp
   44c44:	mov	r1, #4
   44c48:	add	r0, sp, #96	; 0x60
   44c4c:	bl	157c <fwrite@plt>
   44c50:	ldr	r3, [r6, #4]
   44c54:	cmp	r3, #0
   44c58:	ble	44c98 <WriteType+0xfa4>
   44c5c:	mov	r5, #0
   44c60:	add	r3, sp, #100	; 0x64
   44c64:	str	r3, [sp]
   44c68:	ldr	r3, [r6, #32]
   44c6c:	ldr	r3, [r3, r5, lsl #2]
   44c70:	str	r3, [sp, #100]	; 0x64
   44c74:	ldr	r3, [r4]
   44c78:	mov	r2, fp
   44c7c:	mov	r1, #4
   44c80:	ldr	r0, [sp]
   44c84:	bl	157c <fwrite@plt>
   44c88:	add	r5, r5, #1
   44c8c:	ldr	r3, [r6, #4]
   44c90:	cmp	r5, r3
   44c94:	blt	44c68 <WriteType+0xf74>
   44c98:	tst	r3, #1
   44c9c:	bne	44a84 <WriteType+0xd90>
   44ca0:	ldr	r3, [r4]
   44ca4:	mov	r2, fp
   44ca8:	mov	r1, #4
   44cac:	add	r0, sp, #36	; 0x24
   44cb0:	bl	157c <fwrite@plt>
   44cb4:	ldr	r3, [r4]
   44cb8:	mov	r2, fp
   44cbc:	mov	r1, #4
   44cc0:	add	r0, sp, #52	; 0x34
   44cc4:	bl	157c <fwrite@plt>
   44cc8:	mov	r1, r6
   44ccc:	mov	r0, r4
   44cd0:	bl	43cf4 <WriteType>
   44cd4:	ldr	r0, [r4]
   44cd8:	bl	151c <ftell@plt>
   44cdc:	mov	r5, r0
   44ce0:	ldr	r3, [sp, #4]
   44ce4:	cmn	r0, #1
   44ce8:	cmnne	r3, #1
   44cec:	bne	44a9c <WriteType+0xda8>
   44cf0:	ldr	r0, [sp, #8]
   44cf4:	bl	1690 <Mat_Critical@plt>
   44cf8:	b	44ae0 <WriteType+0xdec>
   44cfc:	.word	0x00020378
   44d00:	.word	0x0000e068
   44d04:	.word	0x00040005
   44d08:	.word	0x0000dab0
   44d0c:	.word	0x0000daa4
   44d10:	ldr	r7, [r5, #40]	; 0x28
   44d14:	mov	r3, #5
   44d18:	ldr	r2, [r7, #8]
   44d1c:	ldr	r1, [r7, #4]
   44d20:	mov	r0, r4
   44d24:	bl	20ae0 <WriteData>
   44d28:	str	r0, [sp, #112]	; 0x70
   44d2c:	tst	r0, #7
   44d30:	beq	44d78 <WriteType+0x1084>
   44d34:	asr	r6, r0, #31
   44d38:	lsr	r3, r6, #29
   44d3c:	add	r6, r0, r3
   44d40:	and	r6, r6, #7
   44d44:	sub	r6, r6, r3
   44d48:	cmp	r6, #7
   44d4c:	bgt	44d78 <WriteType+0x1084>
   44d50:	add	r9, sp, #117	; 0x75
   44d54:	mov	r8, #1
   44d58:	ldr	r3, [r4]
   44d5c:	mov	r2, r8
   44d60:	mov	r1, r8
   44d64:	mov	r0, r9
   44d68:	bl	157c <fwrite@plt>
   44d6c:	add	r6, r6, #1
   44d70:	cmp	r6, #8
   44d74:	bne	44d58 <WriteType+0x1064>
   44d78:	mov	r3, #5
   44d7c:	ldr	r2, [r7, #16]
   44d80:	ldr	r1, [r7, #12]
   44d84:	mov	r0, r4
   44d88:	bl	20ae0 <WriteData>
   44d8c:	str	r0, [sp, #112]	; 0x70
   44d90:	tst	r0, #7
   44d94:	beq	44ddc <WriteType+0x10e8>
   44d98:	asr	r6, r0, #31
   44d9c:	lsr	r3, r6, #29
   44da0:	add	r6, r0, r3
   44da4:	and	r6, r6, #7
   44da8:	sub	r6, r6, r3
   44dac:	cmp	r6, #7
   44db0:	bgt	44ddc <WriteType+0x10e8>
   44db4:	add	r9, sp, #117	; 0x75
   44db8:	mov	r8, #1
   44dbc:	ldr	r3, [r4]
   44dc0:	mov	r2, r8
   44dc4:	mov	r1, r8
   44dc8:	mov	r0, r9
   44dcc:	bl	157c <fwrite@plt>
   44dd0:	add	r6, r6, #1
   44dd4:	cmp	r6, #8
   44dd8:	bne	44dbc <WriteType+0x10c8>
   44ddc:	ldr	r3, [r5, #20]
   44de0:	cmp	r3, #0
   44de4:	beq	44eb8 <WriteType+0x11c4>
   44de8:	ldr	r8, [r7, #24]
   44dec:	ldr	r3, [r5, #8]
   44df0:	ldr	r2, [r7, #20]
   44df4:	ldr	r1, [r8]
   44df8:	mov	r0, r4
   44dfc:	bl	20ae0 <WriteData>
   44e00:	str	r0, [sp, #112]	; 0x70
   44e04:	tst	r0, #7
   44e08:	beq	44e50 <WriteType+0x115c>
   44e0c:	asr	r3, r0, #31
   44e10:	lsr	r3, r3, #29
   44e14:	add	r6, r0, r3
   44e18:	and	r6, r6, #7
   44e1c:	sub	r6, r6, r3
   44e20:	cmp	r6, #7
   44e24:	bgt	44e50 <WriteType+0x115c>
   44e28:	add	sl, sp, #117	; 0x75
   44e2c:	mov	r9, #1
   44e30:	ldr	r3, [r4]
   44e34:	mov	r2, r9
   44e38:	mov	r1, r9
   44e3c:	mov	r0, sl
   44e40:	bl	157c <fwrite@plt>
   44e44:	add	r6, r6, #1
   44e48:	cmp	r6, #8
   44e4c:	bne	44e30 <WriteType+0x113c>
   44e50:	ldr	r3, [r5, #8]
   44e54:	ldr	r2, [r7, #20]
   44e58:	ldr	r1, [r8, #4]
   44e5c:	mov	r0, r4
   44e60:	bl	20ae0 <WriteData>
   44e64:	str	r0, [sp, #112]	; 0x70
   44e68:	tst	r0, #7
   44e6c:	beq	43e54 <WriteType+0x160>
   44e70:	asr	r3, r0, #31
   44e74:	lsr	r3, r3, #29
   44e78:	add	r5, r0, r3
   44e7c:	and	r5, r5, #7
   44e80:	sub	r5, r5, r3
   44e84:	cmp	r5, #7
   44e88:	bgt	43e54 <WriteType+0x160>
   44e8c:	add	r7, sp, #117	; 0x75
   44e90:	mov	r6, #1
   44e94:	ldr	r3, [r4]
   44e98:	mov	r2, r6
   44e9c:	mov	r1, r6
   44ea0:	mov	r0, r7
   44ea4:	bl	157c <fwrite@plt>
   44ea8:	add	r5, r5, #1
   44eac:	cmp	r5, #8
   44eb0:	bne	44e94 <WriteType+0x11a0>
   44eb4:	b	43e54 <WriteType+0x160>
   44eb8:	ldr	r3, [r5, #8]
   44ebc:	ldr	r2, [r7, #20]
   44ec0:	ldr	r1, [r7, #24]
   44ec4:	mov	r0, r4
   44ec8:	bl	20ae0 <WriteData>
   44ecc:	str	r0, [sp, #112]	; 0x70
   44ed0:	tst	r0, #7
   44ed4:	beq	43e54 <WriteType+0x160>
   44ed8:	asr	r3, r0, #31
   44edc:	lsr	r3, r3, #29
   44ee0:	add	r5, r0, r3
   44ee4:	and	r5, r5, #7
   44ee8:	sub	r5, r5, r3
   44eec:	cmp	r5, #7
   44ef0:	bgt	43e54 <WriteType+0x160>
   44ef4:	add	r7, sp, #117	; 0x75
   44ef8:	mov	r6, #1
   44efc:	ldr	r3, [r4]
   44f00:	mov	r2, r6
   44f04:	mov	r1, r6
   44f08:	mov	r0, r7
   44f0c:	bl	157c <fwrite@plt>
   44f10:	add	r5, r5, #1
   44f14:	cmp	r5, #8
   44f18:	bne	44efc <WriteType+0x1208>
   44f1c:	b	43e54 <WriteType+0x160>

00044f20 <GetStructFieldBufSize>:
   44f20:	cmp	r0, #0
   44f24:	beq	44f38 <GetStructFieldBufSize+0x18>
   44f28:	push	{r4, lr}
   44f2c:	bl	44f40 <GetTypeBufSize>
   44f30:	add	r0, r0, #24
   44f34:	pop	{r4, pc}
   44f38:	mov	r0, #48	; 0x30
   44f3c:	bx	lr

00044f40 <GetTypeBufSize>:
   44f40:	push	{r4, r5, r6, r7, r8, r9, lr}
   44f44:	sub	sp, sp, #20
   44f48:	mov	r4, r0
   44f4c:	add	r1, sp, #16
   44f50:	mov	r3, #1
   44f54:	str	r3, [r1, #-8]!
   44f58:	bl	4d06c <SafeMulDims>
   44f5c:	ldr	r5, [r4, #4]
   44f60:	tst	r5, #1
   44f64:	lsl	r5, r5, #2
   44f68:	addne	r5, r5, #12
   44f6c:	addeq	r5, r5, #8
   44f70:	ldr	r3, [r4, #16]
   44f74:	sub	r3, r3, #1
   44f78:	cmp	r3, #4
   44f7c:	addls	pc, pc, r3, lsl #2
   44f80:	b	451f0 <GetTypeBufSize+0x2b0>
   44f84:	b	45068 <GetTypeBufSize+0x128>
   44f88:	b	44f98 <GetTypeBufSize+0x58>
   44f8c:	b	451f0 <GetTypeBufSize+0x2b0>
   44f90:	b	45198 <GetTypeBufSize+0x258>
   44f94:	b	450e0 <GetTypeBufSize+0x1a0>
   44f98:	ldr	r7, [r4, #40]	; 0x28
   44f9c:	ldr	r3, [r4, #52]	; 0x34
   44fa0:	ldr	r8, [r3, #4]
   44fa4:	cmp	r8, #0
   44fa8:	beq	4523c <GetTypeBufSize+0x2fc>
   44fac:	ldr	r6, [r3, #8]
   44fb0:	add	r9, r6, r8, lsl #2
   44fb4:	mov	r4, #0
   44fb8:	b	44fc4 <GetTypeBufSize+0x84>
   44fbc:	cmp	r6, r9
   44fc0:	beq	44fe0 <GetTypeBufSize+0xa0>
   44fc4:	ldr	r0, [r6], #4
   44fc8:	cmp	r0, #0
   44fcc:	beq	44fbc <GetTypeBufSize+0x7c>
   44fd0:	bl	1630 <strlen@plt>
   44fd4:	cmp	r4, r0
   44fd8:	movcc	r4, r0
   44fdc:	b	44fbc <GetTypeBufSize+0x7c>
   44fe0:	mla	r3, r4, r8, r8
   44fe4:	tst	r3, #7
   44fe8:	beq	45004 <GetTypeBufSize+0xc4>
   44fec:	add	r3, r3, r8
   44ff0:	b	44ff8 <GetTypeBufSize+0xb8>
   44ff4:	mov	r3, r2
   44ff8:	add	r2, r8, r3
   44ffc:	tst	r3, #7
   45000:	bne	44ff4 <GetTypeBufSize+0xb4>
   45004:	add	r5, r5, #16
   45008:	add	r5, r5, r3
   4500c:	cmp	r7, #0
   45010:	cmpne	r8, #0
   45014:	beq	4518c <GetTypeBufSize+0x24c>
   45018:	mov	r3, #1
   4501c:	str	r3, [sp, #4]
   45020:	mov	r2, r8
   45024:	ldr	r1, [sp, #8]
   45028:	add	r0, sp, #4
   4502c:	bl	4d0c8 <SafeMul>
   45030:	ldr	r3, [sp, #4]
   45034:	cmp	r3, #0
   45038:	beq	4518c <GetTypeBufSize+0x24c>
   4503c:	sub	r7, r7, #4
   45040:	mov	r4, #0
   45044:	ldr	r0, [r7, #4]!
   45048:	bl	44f20 <GetStructFieldBufSize>
   4504c:	add	r0, r0, #8
   45050:	add	r5, r5, r0
   45054:	add	r4, r4, #1
   45058:	ldr	r3, [sp, #4]
   4505c:	cmp	r3, r4
   45060:	bhi	45044 <GetTypeBufSize+0x104>
   45064:	b	4518c <GetTypeBufSize+0x24c>
   45068:	ldr	r0, [r4]
   4506c:	cmp	r0, #0
   45070:	beq	4518c <GetTypeBufSize+0x24c>
   45074:	ldr	r1, [r4, #12]
   45078:	cmp	r1, #0
   4507c:	beq	4518c <GetTypeBufSize+0x24c>
   45080:	ldr	r6, [r4, #40]	; 0x28
   45084:	bl	513bc <__udivsi3>
   45088:	str	r0, [sp, #8]
   4508c:	cmp	r6, #0
   45090:	beq	4518c <GetTypeBufSize+0x24c>
   45094:	cmp	r0, #0
   45098:	beq	4518c <GetTypeBufSize+0x24c>
   4509c:	sub	r6, r6, #4
   450a0:	mov	r4, #0
   450a4:	mov	r7, r4
   450a8:	b	450c4 <GetTypeBufSize+0x184>
   450ac:	add	r0, r0, #8
   450b0:	add	r5, r5, r0
   450b4:	add	r4, r4, #1
   450b8:	ldr	r3, [sp, #8]
   450bc:	cmp	r3, r4
   450c0:	bls	4518c <GetTypeBufSize+0x24c>
   450c4:	ldr	r0, [r6, #4]!
   450c8:	cmp	r0, #0
   450cc:	moveq	r0, r7
   450d0:	beq	450ac <GetTypeBufSize+0x16c>
   450d4:	bl	44f40 <GetTypeBufSize>
   450d8:	add	r0, r0, #24
   450dc:	b	450ac <GetTypeBufSize+0x16c>
   450e0:	ldr	r7, [r4, #40]	; 0x28
   450e4:	mov	r2, #4
   450e8:	ldr	r1, [r7, #8]
   450ec:	add	r0, sp, #12
   450f0:	bl	4d0c8 <SafeMul>
   450f4:	ldr	r3, [sp, #12]
   450f8:	tst	r3, #7
   450fc:	bicne	r3, r3, #7
   45100:	addne	r3, r3, #8
   45104:	strne	r3, [sp, #12]
   45108:	add	r0, sp, #16
   4510c:	ldr	r6, [r0, #-4]!
   45110:	mov	r2, #4
   45114:	ldr	r1, [r7, #16]
   45118:	bl	4d0c8 <SafeMul>
   4511c:	ldr	r3, [sp, #12]
   45120:	tst	r3, #7
   45124:	bicne	r3, r3, #7
   45128:	addne	r3, r3, #8
   4512c:	strne	r3, [sp, #12]
   45130:	add	r8, sp, #16
   45134:	ldr	r3, [r8, #-4]!
   45138:	add	r6, r6, r3
   4513c:	add	r6, r6, #16
   45140:	ldr	r7, [r7, #20]
   45144:	ldr	r0, [r4, #8]
   45148:	bl	1600 <Mat_SizeOf@plt>
   4514c:	mov	r2, r0
   45150:	mov	r1, r7
   45154:	mov	r0, r8
   45158:	bl	4d0c8 <SafeMul>
   4515c:	ldr	r3, [sp, #12]
   45160:	tst	r3, #7
   45164:	bicne	r3, r3, #7
   45168:	addne	r3, r3, #8
   4516c:	strne	r3, [sp, #12]
   45170:	ldr	r3, [sp, #12]
   45174:	add	r3, r3, #8
   45178:	add	r6, r6, r3
   4517c:	add	r5, r5, r6
   45180:	ldr	r2, [r4, #20]
   45184:	cmp	r2, #0
   45188:	addne	r5, r5, r3
   4518c:	mov	r0, r5
   45190:	add	sp, sp, #20
   45194:	pop	{r4, r5, r6, r7, r8, r9, pc}
   45198:	ldr	r0, [r4, #8]
   4519c:	sub	r3, r0, #1
   451a0:	cmp	r3, #1
   451a4:	ldr	r6, [sp, #8]
   451a8:	movls	r0, #4
   451ac:	bl	1600 <Mat_SizeOf@plt>
   451b0:	mov	r2, r0
   451b4:	mov	r1, r6
   451b8:	add	r0, sp, #12
   451bc:	bl	4d0c8 <SafeMul>
   451c0:	ldr	r3, [sp, #12]
   451c4:	tst	r3, #7
   451c8:	bicne	r3, r3, #7
   451cc:	addne	r3, r3, #8
   451d0:	strne	r3, [sp, #12]
   451d4:	ldr	r3, [sp, #12]
   451d8:	add	r3, r3, #8
   451dc:	add	r5, r5, r3
   451e0:	ldr	r2, [r4, #20]
   451e4:	cmp	r2, #0
   451e8:	addne	r5, r5, r3
   451ec:	b	4518c <GetTypeBufSize+0x24c>
   451f0:	ldr	r6, [sp, #8]
   451f4:	ldr	r0, [r4, #8]
   451f8:	bl	1600 <Mat_SizeOf@plt>
   451fc:	mov	r2, r0
   45200:	mov	r1, r6
   45204:	add	r0, sp, #12
   45208:	bl	4d0c8 <SafeMul>
   4520c:	ldr	r3, [sp, #12]
   45210:	tst	r3, #7
   45214:	bicne	r3, r3, #7
   45218:	addne	r3, r3, #8
   4521c:	strne	r3, [sp, #12]
   45220:	ldr	r3, [sp, #12]
   45224:	add	r3, r3, #8
   45228:	add	r5, r5, r3
   4522c:	ldr	r2, [r4, #20]
   45230:	cmp	r2, #0
   45234:	addne	r5, r5, r3
   45238:	b	4518c <GetTypeBufSize+0x24c>
   4523c:	add	r5, r5, #16
   45240:	b	4518c <GetTypeBufSize+0x24c>

00045244 <WriteCompressedType>:
   45244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45248:	sub	sp, sp, #10240	; 0x2800
   4524c:	sub	sp, sp, #44	; 0x2c
   45250:	mov	r9, r0
   45254:	mov	r7, r1
   45258:	mov	r4, r2
   4525c:	mov	r2, #2048	; 0x800
   45260:	mov	r1, #0
   45264:	add	r5, sp, #6144	; 0x1800
   45268:	add	r5, r5, #40	; 0x28
   4526c:	mov	r0, r5
   45270:	bl	166c <memset@plt>
   45274:	mov	r3, #1
   45278:	str	r3, [r5, #-4]
   4527c:	ldr	r3, [r7, #16]
   45280:	cmp	r3, #0
   45284:	moveq	sl, #0
   45288:	bne	4529c <WriteCompressedType+0x58>
   4528c:	mov	r0, sl
   45290:	add	sp, sp, #10240	; 0x2800
   45294:	add	sp, sp, #44	; 0x2c
   45298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4529c:	add	r1, sp, #6144	; 0x1800
   452a0:	add	r1, r1, #40	; 0x28
   452a4:	sub	r1, r1, #4
   452a8:	mov	r0, r7
   452ac:	bl	4d06c <SafeMulDims>
   452b0:	ldr	r3, [r7, #16]
   452b4:	sub	r3, r3, #1
   452b8:	cmp	r3, #14
   452bc:	addls	pc, pc, r3, lsl #2
   452c0:	b	45d88 <WriteCompressedType+0xb44>
   452c4:	b	45638 <WriteCompressedType+0x3f4>
   452c8:	b	45784 <WriteCompressedType+0x540>
   452cc:	b	45d88 <WriteCompressedType+0xb44>
   452d0:	b	4539c <WriteCompressedType+0x158>
   452d4:	b	45ccc <WriteCompressedType+0xa88>
   452d8:	b	45300 <WriteCompressedType+0xbc>
   452dc:	b	45300 <WriteCompressedType+0xbc>
   452e0:	b	45300 <WriteCompressedType+0xbc>
   452e4:	b	45300 <WriteCompressedType+0xbc>
   452e8:	b	45300 <WriteCompressedType+0xbc>
   452ec:	b	45300 <WriteCompressedType+0xbc>
   452f0:	b	45300 <WriteCompressedType+0xbc>
   452f4:	b	45300 <WriteCompressedType+0xbc>
   452f8:	b	45300 <WriteCompressedType+0xbc>
   452fc:	b	45300 <WriteCompressedType+0xbc>
   45300:	ldr	r3, [r7, #20]
   45304:	cmp	r3, #0
   45308:	beq	45370 <WriteCompressedType+0x12c>
   4530c:	ldr	r6, [r7, #40]	; 0x28
   45310:	cmp	r6, #0
   45314:	beq	45364 <WriteCompressedType+0x120>
   45318:	add	r5, sp, #6144	; 0x1800
   4531c:	add	r5, r5, #40	; 0x28
   45320:	ldr	r2, [r6]
   45324:	ldr	r3, [r7, #8]
   45328:	str	r3, [sp]
   4532c:	ldr	r3, [r5, #-4]
   45330:	mov	r1, r4
   45334:	mov	r0, r9
   45338:	bl	43b54 <WriteCompressedData>
   4533c:	mov	sl, r0
   45340:	ldr	r3, [r5, #-4]
   45344:	ldr	r2, [r6, #4]
   45348:	ldr	r1, [r7, #8]
   4534c:	str	r1, [sp]
   45350:	mov	r1, r4
   45354:	mov	r0, r9
   45358:	bl	43b54 <WriteCompressedData>
   4535c:	add	sl, sl, r0
   45360:	b	4528c <WriteCompressedType+0x48>
   45364:	ldr	r6, [pc, #2604]	; 45d98 <WriteCompressedType+0xb54>
   45368:	add	r6, pc, r6
   4536c:	b	45318 <WriteCompressedType+0xd4>
   45370:	add	r3, sp, #6144	; 0x1800
   45374:	add	r3, r3, #40	; 0x28
   45378:	ldr	r3, [r3, #-4]
   4537c:	ldr	r2, [r7, #40]	; 0x28
   45380:	ldr	r1, [r7, #8]
   45384:	str	r1, [sp]
   45388:	mov	r1, r4
   4538c:	mov	r0, r9
   45390:	bl	43b54 <WriteCompressedData>
   45394:	mov	sl, r0
   45398:	b	4528c <WriteCompressedType+0x48>
   4539c:	ldr	fp, [r7, #40]	; 0x28
   453a0:	add	r3, sp, #6144	; 0x1800
   453a4:	add	r3, r3, #40	; 0x28
   453a8:	ldr	r8, [r3, #-4]
   453ac:	ldr	r5, [r7, #8]
   453b0:	add	r2, sp, #2080	; 0x820
   453b4:	add	r2, r2, #8
   453b8:	sub	r1, r2, #4
   453bc:	mov	r3, #0
   453c0:	str	r3, [r2, #-4]
   453c4:	str	r3, [r1, #4]
   453c8:	cmp	r9, r3
   453cc:	beq	45628 <WriteCompressedType+0x3e4>
   453d0:	ldr	r3, [r9]
   453d4:	cmp	r3, #0
   453d8:	beq	45630 <WriteCompressedType+0x3ec>
   453dc:	cmp	r5, #17
   453e0:	addls	pc, pc, r5, lsl #2
   453e4:	b	45620 <WriteCompressedType+0x3dc>
   453e8:	b	455a0 <WriteCompressedType+0x35c>
   453ec:	b	45620 <WriteCompressedType+0x3dc>
   453f0:	b	45430 <WriteCompressedType+0x1ec>
   453f4:	b	45620 <WriteCompressedType+0x3dc>
   453f8:	b	45430 <WriteCompressedType+0x1ec>
   453fc:	b	45620 <WriteCompressedType+0x3dc>
   45400:	b	45620 <WriteCompressedType+0x3dc>
   45404:	b	45620 <WriteCompressedType+0x3dc>
   45408:	b	45620 <WriteCompressedType+0x3dc>
   4540c:	b	45620 <WriteCompressedType+0x3dc>
   45410:	b	45620 <WriteCompressedType+0x3dc>
   45414:	b	45620 <WriteCompressedType+0x3dc>
   45418:	b	45620 <WriteCompressedType+0x3dc>
   4541c:	b	45620 <WriteCompressedType+0x3dc>
   45420:	b	45620 <WriteCompressedType+0x3dc>
   45424:	b	45620 <WriteCompressedType+0x3dc>
   45428:	b	45430 <WriteCompressedType+0x1ec>
   4542c:	b	45430 <WriteCompressedType+0x1ec>
   45430:	mov	r0, r5
   45434:	bl	1600 <Mat_SizeOf@plt>
   45438:	cmp	r5, #2
   4543c:	moveq	r5, #16
   45440:	str	r5, [sp, #36]	; 0x24
   45444:	mul	sl, r0, r8
   45448:	str	sl, [sp, #40]	; 0x28
   4544c:	add	r3, sp, #36	; 0x24
   45450:	str	r3, [r4]
   45454:	mov	r3, #8
   45458:	str	r3, [r4, #4]
   4545c:	mov	r5, #0
   45460:	add	r6, sp, #4096	; 0x1000
   45464:	add	r6, r6, #40	; 0x28
   45468:	sub	r6, r6, #4
   4546c:	mov	r7, #1024	; 0x400
   45470:	str	r6, [r4, #12]
   45474:	str	r7, [r4, #16]
   45478:	mov	r1, #0
   4547c:	mov	r0, r4
   45480:	bl	1564 <deflate@plt>
   45484:	ldr	r2, [r4, #16]
   45488:	ldr	r3, [r9]
   4548c:	rsb	r2, r2, #1024	; 0x400
   45490:	mov	r1, #1
   45494:	mov	r0, r6
   45498:	bl	157c <fwrite@plt>
   4549c:	add	r5, r5, r0
   454a0:	ldr	r3, [r4, #16]
   454a4:	cmp	r3, #0
   454a8:	beq	45470 <WriteCompressedType+0x22c>
   454ac:	cmp	fp, #0
   454b0:	cmpne	r8, #0
   454b4:	ble	45618 <WriteCompressedType+0x3d4>
   454b8:	str	fp, [r4]
   454bc:	str	sl, [r4, #4]
   454c0:	add	r6, sp, #4096	; 0x1000
   454c4:	add	r6, r6, #40	; 0x28
   454c8:	sub	r6, r6, #4
   454cc:	mov	fp, #1024	; 0x400
   454d0:	mov	r8, #0
   454d4:	mov	r7, #1
   454d8:	str	r6, [r4, #12]
   454dc:	str	fp, [r4, #16]
   454e0:	mov	r1, r8
   454e4:	mov	r0, r4
   454e8:	bl	1564 <deflate@plt>
   454ec:	ldr	r2, [r4, #16]
   454f0:	ldr	r3, [r9]
   454f4:	rsb	r2, r2, #1024	; 0x400
   454f8:	mov	r1, r7
   454fc:	mov	r0, r6
   45500:	bl	157c <fwrite@plt>
   45504:	add	r5, r5, r0
   45508:	ldr	r3, [r4, #16]
   4550c:	cmp	r3, #0
   45510:	beq	454d8 <WriteCompressedType+0x294>
   45514:	tst	sl, #7
   45518:	beq	45618 <WriteCompressedType+0x3d4>
   4551c:	add	r3, sp, #2080	; 0x820
   45520:	add	r3, r3, #8
   45524:	sub	r3, r3, #4
   45528:	str	r3, [r4]
   4552c:	asr	r3, sl, #31
   45530:	lsr	r2, r3, #29
   45534:	add	r3, sl, r2
   45538:	and	r3, r3, #7
   4553c:	sub	r3, r3, r2
   45540:	rsb	r3, r3, #8
   45544:	str	r3, [r4, #4]
   45548:	add	r6, sp, #4096	; 0x1000
   4554c:	add	r6, r6, #40	; 0x28
   45550:	sub	r6, r6, #4
   45554:	mov	sl, #1024	; 0x400
   45558:	mov	r8, #0
   4555c:	mov	r7, #1
   45560:	str	r6, [r4, #12]
   45564:	str	sl, [r4, #16]
   45568:	mov	r1, r8
   4556c:	mov	r0, r4
   45570:	bl	1564 <deflate@plt>
   45574:	ldr	r2, [r4, #16]
   45578:	ldr	r3, [r9]
   4557c:	rsb	r2, r2, #1024	; 0x400
   45580:	mov	r1, r7
   45584:	mov	r0, r6
   45588:	bl	157c <fwrite@plt>
   4558c:	add	r5, r5, r0
   45590:	ldr	r3, [r4, #16]
   45594:	cmp	r3, #0
   45598:	beq	45560 <WriteCompressedType+0x31c>
   4559c:	b	45618 <WriteCompressedType+0x3d4>
   455a0:	mov	r2, #4
   455a4:	str	r2, [sp, #36]	; 0x24
   455a8:	lsl	r8, r8, #1
   455ac:	str	r8, [sp, #40]	; 0x28
   455b0:	add	r3, sp, #36	; 0x24
   455b4:	str	r3, [r4]
   455b8:	mov	r3, #8
   455bc:	str	r3, [r4, #4]
   455c0:	mov	r5, #0
   455c4:	add	r6, sp, #4096	; 0x1000
   455c8:	add	r6, r6, #40	; 0x28
   455cc:	sub	r6, r6, #4
   455d0:	mov	sl, #1024	; 0x400
   455d4:	mov	r8, r5
   455d8:	mov	r7, #1
   455dc:	str	r6, [r4, #12]
   455e0:	str	sl, [r4, #16]
   455e4:	mov	r1, r8
   455e8:	mov	r0, r4
   455ec:	bl	1564 <deflate@plt>
   455f0:	ldr	r2, [r4, #16]
   455f4:	ldr	r3, [r9]
   455f8:	rsb	r2, r2, #1024	; 0x400
   455fc:	mov	r1, r7
   45600:	mov	r0, r6
   45604:	bl	157c <fwrite@plt>
   45608:	add	r5, r5, r0
   4560c:	ldr	r3, [r4, #16]
   45610:	cmp	r3, #0
   45614:	beq	455dc <WriteCompressedType+0x398>
   45618:	mov	sl, r5
   4561c:	b	4528c <WriteCompressedType+0x48>
   45620:	mov	r5, #0
   45624:	b	45618 <WriteCompressedType+0x3d4>
   45628:	mov	sl, #0
   4562c:	b	4528c <WriteCompressedType+0x48>
   45630:	mov	sl, #0
   45634:	b	4528c <WriteCompressedType+0x48>
   45638:	ldr	sl, [r7]
   4563c:	cmp	sl, #0
   45640:	beq	4528c <WriteCompressedType+0x48>
   45644:	ldr	r5, [r7, #40]	; 0x28
   45648:	ldr	r1, [r7, #12]
   4564c:	cmp	r1, #0
   45650:	cmpne	r5, #0
   45654:	beq	45d90 <WriteCompressedType+0xb4c>
   45658:	mov	r0, sl
   4565c:	bl	513bc <__udivsi3>
   45660:	mov	sl, r0
   45664:	add	r3, sp, #6144	; 0x1800
   45668:	add	r3, r3, #40	; 0x28
   4566c:	str	r0, [r3, #-4]
   45670:	cmp	r0, #0
   45674:	beq	4528c <WriteCompressedType+0x48>
   45678:	sub	sl, r5, #4
   4567c:	mov	r7, #0
   45680:	add	r3, sp, #4096	; 0x1000
   45684:	add	r3, r3, #40	; 0x28
   45688:	sub	r3, r3, #4
   4568c:	str	r3, [sp, #12]
   45690:	mov	r6, #2048	; 0x800
   45694:	add	fp, sp, #6144	; 0x1800
   45698:	add	fp, fp, #40	; 0x28
   4569c:	add	r5, sp, #2080	; 0x820
   456a0:	add	r5, r5, #8
   456a4:	sub	r5, r5, #4
   456a8:	b	45718 <WriteCompressedType+0x4d4>
   456ac:	str	r0, [fp, #-2048]	; 0xfffff800
   456b0:	ldr	r3, [sp, #12]
   456b4:	str	r3, [r4]
   456b8:	mov	r3, #8
   456bc:	str	r3, [r4, #4]
   456c0:	str	r5, [r4, #12]
   456c4:	str	r6, [r4, #16]
   456c8:	mov	r1, #0
   456cc:	mov	r0, r4
   456d0:	bl	1564 <deflate@plt>
   456d4:	ldr	r2, [r4, #16]
   456d8:	ldr	r3, [r9]
   456dc:	rsb	r2, r2, #2048	; 0x800
   456e0:	mov	r1, #1
   456e4:	mov	r0, r5
   456e8:	bl	157c <fwrite@plt>
   456ec:	ldr	r3, [r4, #16]
   456f0:	cmp	r3, #0
   456f4:	beq	456c0 <WriteCompressedType+0x47c>
   456f8:	mov	r2, r4
   456fc:	mov	r1, r8
   45700:	mov	r0, r9
   45704:	bl	45da0 <WriteCompressedTypeArrayFlags>
   45708:	add	r7, r7, #1
   4570c:	ldr	r3, [fp, #-4]
   45710:	cmp	r3, r7
   45714:	bls	4577c <WriteCompressedType+0x538>
   45718:	ldr	r8, [sl, #4]!
   4571c:	mov	r2, r6
   45720:	mov	r1, #0
   45724:	ldr	r0, [sp, #12]
   45728:	bl	166c <memset@plt>
   4572c:	cmp	r4, #0
   45730:	cmpne	r9, #0
   45734:	moveq	r3, #1
   45738:	movne	r3, #0
   4573c:	cmp	r8, #0
   45740:	orreq	r3, r3, #1
   45744:	cmp	r3, #0
   45748:	bne	45708 <WriteCompressedType+0x4c4>
   4574c:	mov	r3, #14
   45750:	str	r3, [fp, #-2052]	; 0xfffff7fc
   45754:	ldr	r3, [r8, #16]
   45758:	cmp	r3, #0
   4575c:	beq	456b0 <WriteCompressedType+0x46c>
   45760:	cmp	r8, #0
   45764:	moveq	r0, #0
   45768:	beq	456ac <WriteCompressedType+0x468>
   4576c:	mov	r0, r8
   45770:	bl	44f40 <GetTypeBufSize>
   45774:	add	r0, r0, #24
   45778:	b	456ac <WriteCompressedType+0x468>
   4577c:	mov	sl, #0
   45780:	b	4528c <WriteCompressedType+0x48>
   45784:	ldr	r3, [r7, #52]	; 0x34
   45788:	ldr	sl, [r3, #4]
   4578c:	cmp	sl, #0
   45790:	bne	45830 <WriteCompressedType+0x5ec>
   45794:	ldr	r2, [pc, #1536]	; 45d9c <WriteCompressedType+0xb58>
   45798:	add	r3, sp, #6144	; 0x1800
   4579c:	add	r3, r3, #40	; 0x28
   457a0:	str	r2, [r3]
   457a4:	mov	r2, #1
   457a8:	add	r1, sp, #6144	; 0x1800
   457ac:	add	r1, r1, #44	; 0x2c
   457b0:	str	r2, [r1]
   457b4:	add	r1, sp, #6144	; 0x1800
   457b8:	add	r1, r1, #48	; 0x30
   457bc:	str	r2, [r1]
   457c0:	mov	r2, #0
   457c4:	add	r1, sp, #6144	; 0x1800
   457c8:	add	r1, r1, #52	; 0x34
   457cc:	str	r2, [r1]
   457d0:	str	r3, [r4]
   457d4:	mov	r3, #16
   457d8:	str	r3, [r4, #4]
   457dc:	add	r5, sp, #8192	; 0x2000
   457e0:	add	r5, r5, #40	; 0x28
   457e4:	mov	r8, #2048	; 0x800
   457e8:	mov	r7, r2
   457ec:	mov	r6, #1
   457f0:	str	r5, [r4, #12]
   457f4:	str	r8, [r4, #16]
   457f8:	mov	r1, r7
   457fc:	mov	r0, r4
   45800:	bl	1564 <deflate@plt>
   45804:	ldr	r2, [r4, #16]
   45808:	ldr	r3, [r9]
   4580c:	rsb	r2, r2, #2048	; 0x800
   45810:	mov	r1, r6
   45814:	mov	r0, r5
   45818:	bl	157c <fwrite@plt>
   4581c:	add	sl, sl, r0
   45820:	ldr	r3, [r4, #16]
   45824:	cmp	r3, #0
   45828:	beq	457f0 <WriteCompressedType+0x5ac>
   4582c:	b	4528c <WriteCompressedType+0x48>
   45830:	ldr	r6, [r3, #8]
   45834:	add	r8, r6, sl, lsl #2
   45838:	mov	r5, #0
   4583c:	ldr	r0, [r6], #4
   45840:	bl	1630 <strlen@plt>
   45844:	cmp	r5, r0
   45848:	movcc	r5, r0
   4584c:	cmp	r8, r6
   45850:	bne	4583c <WriteCompressedType+0x5f8>
   45854:	add	r3, r5, #1
   45858:	str	r3, [sp, #12]
   4585c:	mov	r2, r3
   45860:	mul	r3, r3, sl
   45864:	tst	r3, #7
   45868:	beq	4588c <WriteCompressedType+0x648>
   4586c:	add	r3, r3, sl
   45870:	b	45878 <WriteCompressedType+0x634>
   45874:	mov	r3, r1
   45878:	add	r2, r2, #1
   4587c:	add	r1, r3, sl
   45880:	tst	r3, #7
   45884:	bne	45874 <WriteCompressedType+0x630>
   45888:	str	r2, [sp, #12]
   4588c:	ldr	r2, [r7, #40]	; 0x28
   45890:	str	r2, [sp, #28]
   45894:	ldr	r2, [pc, #1280]	; 45d9c <WriteCompressedType+0xb58>
   45898:	add	r5, sp, #6144	; 0x1800
   4589c:	add	r5, r5, #40	; 0x28
   458a0:	str	r2, [r5]
   458a4:	add	r1, sp, #6144	; 0x1800
   458a8:	add	r1, r1, #44	; 0x2c
   458ac:	ldr	r2, [sp, #12]
   458b0:	str	r2, [r1]
   458b4:	mov	r1, #1
   458b8:	add	r0, sp, #6144	; 0x1800
   458bc:	add	r0, r0, #48	; 0x30
   458c0:	str	r1, [r0]
   458c4:	add	r0, sp, #6144	; 0x1800
   458c8:	add	r0, r0, #52	; 0x34
   458cc:	str	r3, [r0]
   458d0:	mov	r0, r2
   458d4:	bl	1468 <calloc@plt>
   458d8:	str	r0, [sp, #16]
   458dc:	str	r5, [r4]
   458e0:	mov	r3, #16
   458e4:	str	r3, [r4, #4]
   458e8:	mov	r5, #0
   458ec:	add	r6, sp, #8192	; 0x2000
   458f0:	add	r6, r6, #40	; 0x28
   458f4:	mov	r8, #2048	; 0x800
   458f8:	mov	fp, #1
   458fc:	str	r6, [r4, #12]
   45900:	str	r8, [r4, #16]
   45904:	mov	r1, #0
   45908:	mov	r0, r4
   4590c:	bl	1564 <deflate@plt>
   45910:	ldr	r2, [r4, #16]
   45914:	ldr	r3, [r9]
   45918:	rsb	r2, r2, #2048	; 0x800
   4591c:	mov	r1, fp
   45920:	mov	r0, r6
   45924:	bl	157c <fwrite@plt>
   45928:	add	r5, r5, r0
   4592c:	ldr	r3, [r4, #16]
   45930:	cmp	r3, #0
   45934:	beq	458fc <WriteCompressedType+0x6b8>
   45938:	mov	fp, #0
   4593c:	add	r6, sp, #8192	; 0x2000
   45940:	add	r6, r6, #40	; 0x28
   45944:	mov	r8, #2048	; 0x800
   45948:	str	r7, [sp, #24]
   4594c:	ldr	r3, [sp, #24]
   45950:	ldr	r7, [r3, #52]	; 0x34
   45954:	ldr	r3, [r7, #8]
   45958:	ldr	r0, [r3, fp, lsl #2]
   4595c:	bl	1630 <strlen@plt>
   45960:	str	r0, [sp, #20]
   45964:	ldr	r2, [sp, #12]
   45968:	mov	r1, #0
   4596c:	ldr	r0, [sp, #16]
   45970:	bl	166c <memset@plt>
   45974:	ldr	r3, [r7, #8]
   45978:	ldr	r2, [sp, #20]
   4597c:	ldr	r1, [r3, fp, lsl #2]
   45980:	ldr	r7, [sp, #16]
   45984:	mov	r0, r7
   45988:	bl	14f8 <memcpy@plt>
   4598c:	str	r7, [r4]
   45990:	ldr	r3, [sp, #12]
   45994:	str	r3, [r4, #4]
   45998:	str	r6, [r4, #12]
   4599c:	str	r8, [r4, #16]
   459a0:	mov	r1, #0
   459a4:	mov	r0, r4
   459a8:	bl	1564 <deflate@plt>
   459ac:	ldr	r2, [r4, #16]
   459b0:	ldr	r3, [r9]
   459b4:	rsb	r2, r2, #2048	; 0x800
   459b8:	mov	r1, #1
   459bc:	mov	r0, r6
   459c0:	bl	157c <fwrite@plt>
   459c4:	add	r5, r5, r0
   459c8:	ldr	r3, [r4, #16]
   459cc:	cmp	r3, #0
   459d0:	beq	45998 <WriteCompressedType+0x754>
   459d4:	add	fp, fp, #1
   459d8:	cmp	sl, fp
   459dc:	bne	4594c <WriteCompressedType+0x708>
   459e0:	ldr	r0, [sp, #16]
   459e4:	bl	14e0 <free@plt>
   459e8:	mov	r2, fp
   459ec:	add	r3, sp, #6144	; 0x1800
   459f0:	add	r3, r3, #40	; 0x28
   459f4:	ldr	r1, [r3, #-4]
   459f8:	add	r0, sp, #32
   459fc:	bl	4d0c8 <SafeMul>
   45a00:	ldr	r3, [sp, #32]
   45a04:	cmp	r3, #0
   45a08:	beq	45cc4 <WriteCompressedType+0xa80>
   45a0c:	ldr	r3, [sp, #28]
   45a10:	sub	r3, r3, #4
   45a14:	str	r3, [sp, #16]
   45a18:	mov	fp, #0
   45a1c:	add	r3, sp, #36	; 0x24
   45a20:	str	r3, [sp, #20]
   45a24:	mov	r7, #2048	; 0x800
   45a28:	add	r8, sp, #2080	; 0x820
   45a2c:	add	r8, r8, #8
   45a30:	add	r6, sp, #4096	; 0x1000
   45a34:	add	r6, r6, #40	; 0x28
   45a38:	sub	r6, r6, #4
   45a3c:	sub	r3, r8, #4
   45a40:	str	r3, [sp, #24]
   45a44:	str	r5, [sp, #12]
   45a48:	b	45c64 <WriteCompressedType+0xa20>
   45a4c:	mov	r2, r7
   45a50:	mov	r1, #0
   45a54:	mov	r0, r6
   45a58:	bl	166c <memset@plt>
   45a5c:	mov	r2, #14
   45a60:	add	r3, sp, #6144	; 0x1800
   45a64:	add	r3, r3, #40	; 0x28
   45a68:	str	r2, [r3, #-2052]	; 0xfffff7fc
   45a6c:	mov	r2, #48	; 0x30
   45a70:	str	r2, [r3, #-2048]	; 0xfffff800
   45a74:	str	r6, [r4]
   45a78:	mov	r3, #8
   45a7c:	str	r3, [r4, #4]
   45a80:	mov	r5, #0
   45a84:	mov	sl, r5
   45a88:	str	fp, [sp, #28]
   45a8c:	ldr	fp, [sp, #24]
   45a90:	str	fp, [r4, #12]
   45a94:	str	r7, [r4, #16]
   45a98:	mov	r1, sl
   45a9c:	mov	r0, r4
   45aa0:	bl	1564 <deflate@plt>
   45aa4:	ldr	r2, [r4, #16]
   45aa8:	ldr	r3, [r9]
   45aac:	rsb	r2, r2, #2048	; 0x800
   45ab0:	mov	r1, #1
   45ab4:	mov	r0, fp
   45ab8:	bl	157c <fwrite@plt>
   45abc:	add	r5, r5, r0
   45ac0:	ldr	r3, [r4, #16]
   45ac4:	cmp	r3, #0
   45ac8:	beq	45a90 <WriteCompressedType+0x84c>
   45acc:	mov	r2, #6
   45ad0:	add	r3, sp, #6144	; 0x1800
   45ad4:	add	r3, r3, #40	; 0x28
   45ad8:	str	r2, [r3, #-2052]	; 0xfffff7fc
   45adc:	mov	r1, #8
   45ae0:	str	r1, [r3, #-2048]	; 0xfffff800
   45ae4:	str	r2, [r3, #-2044]	; 0xfffff804
   45ae8:	mov	r2, #0
   45aec:	str	r2, [r3, #-2040]	; 0xfffff808
   45af0:	mov	r0, #5
   45af4:	str	r0, [r3, #-2036]	; 0xfffff80c
   45af8:	str	r1, [r3, #-2032]	; 0xfffff810
   45afc:	str	r2, [r3, #-2028]	; 0xfffff814
   45b00:	str	r2, [r3, #-2024]	; 0xfffff818
   45b04:	str	r6, [r4]
   45b08:	mov	r3, #32
   45b0c:	str	r3, [r4, #4]
   45b10:	mov	sl, r2
   45b14:	ldr	fp, [sp, #24]
   45b18:	str	fp, [r4, #12]
   45b1c:	str	r7, [r4, #16]
   45b20:	mov	r1, sl
   45b24:	mov	r0, r4
   45b28:	bl	1564 <deflate@plt>
   45b2c:	ldr	r2, [r4, #16]
   45b30:	ldr	r3, [r9]
   45b34:	rsb	r2, r2, #2048	; 0x800
   45b38:	mov	r1, #1
   45b3c:	mov	r0, fp
   45b40:	bl	157c <fwrite@plt>
   45b44:	add	r5, r5, r0
   45b48:	ldr	r3, [r4, #16]
   45b4c:	cmp	r3, #0
   45b50:	beq	45b18 <WriteCompressedType+0x8d4>
   45b54:	mov	r2, #1
   45b58:	add	r3, sp, #6144	; 0x1800
   45b5c:	add	r3, r3, #40	; 0x28
   45b60:	str	r2, [r3, #-2052]	; 0xfffff7fc
   45b64:	mov	r2, #0
   45b68:	str	r2, [r3, #-2048]	; 0xfffff800
   45b6c:	str	r6, [r4]
   45b70:	mov	r3, #8
   45b74:	str	r3, [r4, #4]
   45b78:	mov	sl, r2
   45b7c:	ldr	fp, [sp, #24]
   45b80:	str	fp, [r4, #12]
   45b84:	str	r7, [r4, #16]
   45b88:	mov	r1, sl
   45b8c:	mov	r0, r4
   45b90:	bl	1564 <deflate@plt>
   45b94:	ldr	r2, [r4, #16]
   45b98:	ldr	r3, [r9]
   45b9c:	rsb	r2, r2, #2048	; 0x800
   45ba0:	mov	r1, #1
   45ba4:	mov	r0, fp
   45ba8:	bl	157c <fwrite@plt>
   45bac:	add	r5, r5, r0
   45bb0:	ldr	r3, [r4, #16]
   45bb4:	cmp	r3, #0
   45bb8:	beq	45b80 <WriteCompressedType+0x93c>
   45bbc:	ldr	fp, [sp, #28]
   45bc0:	mov	r3, #9
   45bc4:	str	r3, [sp]
   45bc8:	mov	r3, #0
   45bcc:	mov	r2, r3
   45bd0:	mov	r1, r4
   45bd4:	mov	r0, r9
   45bd8:	bl	43b54 <WriteCompressedData>
   45bdc:	add	r0, r5, r0
   45be0:	b	45c48 <WriteCompressedType+0xa04>
   45be4:	ldr	r3, [sp, #20]
   45be8:	str	r3, [r4]
   45bec:	mov	r3, #8
   45bf0:	str	r3, [r4, #4]
   45bf4:	mov	r5, #0
   45bf8:	str	r6, [r4, #12]
   45bfc:	str	r7, [r4, #16]
   45c00:	mov	r1, #0
   45c04:	mov	r0, r4
   45c08:	bl	1564 <deflate@plt>
   45c0c:	ldr	r2, [r4, #16]
   45c10:	ldr	r3, [r9]
   45c14:	rsb	r2, r2, #2048	; 0x800
   45c18:	mov	r1, #1
   45c1c:	mov	r0, r6
   45c20:	bl	157c <fwrite@plt>
   45c24:	add	r5, r5, r0
   45c28:	ldr	r3, [r4, #16]
   45c2c:	cmp	r3, #0
   45c30:	beq	45bf8 <WriteCompressedType+0x9b4>
   45c34:	mov	r2, r4
   45c38:	mov	r1, sl
   45c3c:	mov	r0, r9
   45c40:	bl	45da0 <WriteCompressedTypeArrayFlags>
   45c44:	add	r0, r5, r0
   45c48:	ldr	r3, [sp, #12]
   45c4c:	add	r3, r3, r0
   45c50:	str	r3, [sp, #12]
   45c54:	add	fp, fp, #1
   45c58:	ldr	r3, [r8, #-2056]	; 0xfffff7f8
   45c5c:	cmp	r3, fp
   45c60:	bls	45cbc <WriteCompressedType+0xa78>
   45c64:	ldr	r3, [sp, #16]
   45c68:	ldr	sl, [r3, #4]!
   45c6c:	str	r3, [sp, #16]
   45c70:	mov	r2, r7
   45c74:	mov	r1, #0
   45c78:	ldr	r0, [sp, #20]
   45c7c:	bl	166c <memset@plt>
   45c80:	cmp	r4, #0
   45c84:	cmpne	r9, #0
   45c88:	moveq	r0, #0
   45c8c:	beq	45c48 <WriteCompressedType+0xa04>
   45c90:	cmp	sl, #0
   45c94:	beq	45a4c <WriteCompressedType+0x808>
   45c98:	mov	r3, #14
   45c9c:	str	r3, [r8, #-2052]	; 0xfffff7fc
   45ca0:	ldr	r3, [sl, #16]
   45ca4:	cmp	r3, #0
   45ca8:	beq	45be4 <WriteCompressedType+0x9a0>
   45cac:	mov	r0, sl
   45cb0:	bl	44f20 <GetStructFieldBufSize>
   45cb4:	str	r0, [r8, #-2048]	; 0xfffff800
   45cb8:	b	45be4 <WriteCompressedType+0x9a0>
   45cbc:	ldr	sl, [sp, #12]
   45cc0:	b	4528c <WriteCompressedType+0x48>
   45cc4:	mov	sl, r5
   45cc8:	b	4528c <WriteCompressedType+0x48>
   45ccc:	ldr	r5, [r7, #40]	; 0x28
   45cd0:	ldr	r3, [r5, #8]
   45cd4:	ldr	r2, [r5, #4]
   45cd8:	mov	r8, #5
   45cdc:	str	r8, [sp]
   45ce0:	mov	r1, r4
   45ce4:	mov	r0, r9
   45ce8:	bl	43b54 <WriteCompressedData>
   45cec:	mov	r6, r0
   45cf0:	ldr	r3, [r5, #16]
   45cf4:	ldr	r2, [r5, #12]
   45cf8:	str	r8, [sp]
   45cfc:	mov	r1, r4
   45d00:	mov	r0, r9
   45d04:	bl	43b54 <WriteCompressedData>
   45d08:	add	r6, r6, r0
   45d0c:	ldr	r3, [r7, #20]
   45d10:	cmp	r3, #0
   45d14:	bne	45d3c <WriteCompressedType+0xaf8>
   45d18:	ldr	r3, [r5, #20]
   45d1c:	ldr	r2, [r5, #24]
   45d20:	ldr	r1, [r7, #8]
   45d24:	str	r1, [sp]
   45d28:	mov	r1, r4
   45d2c:	mov	r0, r9
   45d30:	bl	43b54 <WriteCompressedData>
   45d34:	add	sl, r6, r0
   45d38:	b	4528c <WriteCompressedType+0x48>
   45d3c:	ldr	sl, [r5, #24]
   45d40:	ldr	r3, [r5, #20]
   45d44:	ldr	r2, [sl]
   45d48:	ldr	r1, [r7, #8]
   45d4c:	str	r1, [sp]
   45d50:	mov	r1, r4
   45d54:	mov	r0, r9
   45d58:	bl	43b54 <WriteCompressedData>
   45d5c:	mov	r8, r0
   45d60:	ldr	r3, [r5, #20]
   45d64:	ldr	r2, [sl, #4]
   45d68:	ldr	r1, [r7, #8]
   45d6c:	str	r1, [sp]
   45d70:	mov	r1, r4
   45d74:	mov	r0, r9
   45d78:	bl	43b54 <WriteCompressedData>
   45d7c:	add	r0, r8, r0
   45d80:	add	sl, r0, r6
   45d84:	b	4528c <WriteCompressedType+0x48>
   45d88:	mov	sl, #0
   45d8c:	b	4528c <WriteCompressedType+0x48>
   45d90:	mov	sl, #0
   45d94:	b	4528c <WriteCompressedType+0x48>
   45d98:	.word	0x0001ee74
   45d9c:	.word	0x00040005

00045da0 <WriteCompressedTypeArrayFlags>:
   45da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45da4:	sub	sp, sp, #4096	; 0x1000
   45da8:	sub	sp, sp, #4
   45dac:	mov	r5, r0
   45db0:	mov	r6, r1
   45db4:	mov	r4, r2
   45db8:	mov	r2, #2048	; 0x800
   45dbc:	mov	r1, #0
   45dc0:	mov	r0, sp
   45dc4:	bl	166c <memset@plt>
   45dc8:	ldr	r3, [r6, #16]
   45dcc:	cmp	r3, #0
   45dd0:	moveq	r0, #0
   45dd4:	beq	45f80 <WriteCompressedTypeArrayFlags+0x1e0>
   45dd8:	uxtb	r2, r3
   45ddc:	ldr	r1, [r6, #20]
   45de0:	cmp	r1, #0
   45de4:	orrne	r2, r2, #2048	; 0x800
   45de8:	ldr	r1, [r6, #24]
   45dec:	cmp	r1, #0
   45df0:	orrne	r2, r2, #1024	; 0x400
   45df4:	ldr	r1, [r6, #28]
   45df8:	cmp	r1, #0
   45dfc:	orrne	r2, r2, #512	; 0x200
   45e00:	cmp	r3, #5
   45e04:	ldreq	r3, [r6, #40]	; 0x28
   45e08:	ldreq	r0, [r3]
   45e0c:	movne	r0, #0
   45e10:	mov	r1, #6
   45e14:	str	r1, [sp]
   45e18:	mov	r1, #8
   45e1c:	str	r1, [sp, #4]
   45e20:	str	r2, [sp, #8]
   45e24:	str	r0, [sp, #12]
   45e28:	ldr	ip, [r6, #4]
   45e2c:	mov	r2, #5
   45e30:	str	r2, [sp, #16]
   45e34:	lsl	r1, ip, #2
   45e38:	str	r1, [sp, #20]
   45e3c:	cmp	ip, #0
   45e40:	ble	45f8c <WriteCompressedTypeArrayFlags+0x1ec>
   45e44:	ldr	r2, [r6, #32]
   45e48:	sub	r2, r2, #4
   45e4c:	add	r3, sp, #20
   45e50:	add	r1, r1, #20
   45e54:	add	r0, sp, r1
   45e58:	ldr	r1, [r2, #4]!
   45e5c:	str	r1, [r3, #4]!
   45e60:	cmp	r3, r0
   45e64:	bne	45e58 <WriteCompressedTypeArrayFlags+0xb8>
   45e68:	mov	r3, ip
   45e6c:	tst	ip, #1
   45e70:	addne	r1, r3, #6
   45e74:	movne	r0, #0
   45e78:	movne	r2, sp
   45e7c:	strne	r0, [r2, r1, lsl #2]
   45e80:	addne	r3, r3, #1
   45e84:	str	sp, [r4]
   45e88:	add	r3, r3, #6
   45e8c:	lsl	r3, r3, #2
   45e90:	str	r3, [r4, #4]
   45e94:	mov	r7, #0
   45e98:	add	r8, sp, #2048	; 0x800
   45e9c:	mov	fp, #2048	; 0x800
   45ea0:	mov	sl, r7
   45ea4:	mov	r9, #1
   45ea8:	str	r8, [r4, #12]
   45eac:	str	fp, [r4, #16]
   45eb0:	mov	r1, sl
   45eb4:	mov	r0, r4
   45eb8:	bl	1564 <deflate@plt>
   45ebc:	ldr	r2, [r4, #16]
   45ec0:	ldr	r3, [r5]
   45ec4:	rsb	r2, r2, #2048	; 0x800
   45ec8:	mov	r1, r9
   45ecc:	mov	r0, r8
   45ed0:	bl	157c <fwrite@plt>
   45ed4:	add	r7, r7, r0
   45ed8:	ldr	r3, [r4, #16]
   45edc:	cmp	r3, #0
   45ee0:	beq	45ea8 <WriteCompressedTypeArrayFlags+0x108>
   45ee4:	mov	r2, #1
   45ee8:	str	r2, [sp]
   45eec:	mov	r2, #0
   45ef0:	str	r2, [sp, #4]
   45ef4:	str	sp, [r4]
   45ef8:	mov	r3, #8
   45efc:	str	r3, [r4, #4]
   45f00:	add	r8, sp, #2048	; 0x800
   45f04:	mov	fp, #2048	; 0x800
   45f08:	mov	sl, r2
   45f0c:	mov	r9, #1
   45f10:	str	r8, [r4, #12]
   45f14:	str	fp, [r4, #16]
   45f18:	mov	r1, sl
   45f1c:	mov	r0, r4
   45f20:	bl	1564 <deflate@plt>
   45f24:	ldr	r2, [r4, #16]
   45f28:	ldr	r3, [r5]
   45f2c:	rsb	r2, r2, #2048	; 0x800
   45f30:	mov	r1, r9
   45f34:	mov	r0, r8
   45f38:	bl	157c <fwrite@plt>
   45f3c:	add	r7, r7, r0
   45f40:	ldr	r3, [r4, #16]
   45f44:	cmp	r3, #0
   45f48:	beq	45f10 <WriteCompressedTypeArrayFlags+0x170>
   45f4c:	ldr	r8, [r6, #52]	; 0x34
   45f50:	ldr	r0, [r5]
   45f54:	bl	151c <ftell@plt>
   45f58:	str	r0, [r8]
   45f5c:	ldr	r3, [r6, #52]	; 0x34
   45f60:	ldr	r3, [r3]
   45f64:	cmn	r3, #1
   45f68:	beq	45f94 <WriteCompressedTypeArrayFlags+0x1f4>
   45f6c:	mov	r2, r4
   45f70:	mov	r1, r6
   45f74:	mov	r0, r5
   45f78:	bl	45244 <WriteCompressedType>
   45f7c:	add	r0, r7, r0
   45f80:	add	sp, sp, #4096	; 0x1000
   45f84:	add	sp, sp, #4
   45f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45f8c:	mov	r3, #0
   45f90:	b	45e6c <WriteCompressedTypeArrayFlags+0xcc>
   45f94:	ldr	r0, [pc, #8]	; 45fa4 <WriteCompressedTypeArrayFlags+0x204>
   45f98:	add	r0, pc, r0
   45f9c:	bl	1690 <Mat_Critical@plt>
   45fa0:	b	45f6c <WriteCompressedTypeArrayFlags+0x1cc>
   45fa4:	.word	0x0000c2b0

00045fa8 <Mat_Create5>:
   45fa8:	push	{r4, r5, r6, r7, r8, r9, lr}
   45fac:	sub	sp, sp, #28
   45fb0:	mov	r9, r0
   45fb4:	mov	r7, r1
   45fb8:	mov	r3, #0
   45fbc:	strh	r3, [sp, #22]
   45fc0:	ldr	r1, [pc, #440]	; 46180 <Mat_Create5+0x1d8>
   45fc4:	add	r1, pc, r1
   45fc8:	bl	14bc <fopen@plt>
   45fcc:	subs	r8, r0, #0
   45fd0:	beq	46178 <Mat_Create5+0x1d0>
   45fd4:	mov	r0, #44	; 0x2c
   45fd8:	bl	15ac <malloc@plt>
   45fdc:	subs	r4, r0, #0
   45fe0:	beq	46128 <Mat_Create5+0x180>
   45fe4:	mov	r5, #0
   45fe8:	str	r5, [r4]
   45fec:	str	r5, [r4, #4]
   45ff0:	str	r5, [r4, #8]
   45ff4:	str	r5, [r4, #12]
   45ff8:	str	r5, [r4, #16]
   45ffc:	str	r5, [r4, #20]
   46000:	str	r5, [r4, #24]
   46004:	mov	r6, #128	; 0x80
   46008:	str	r6, [r4, #28]
   4600c:	str	r5, [r4, #32]
   46010:	str	r5, [r4, #36]	; 0x24
   46014:	str	r5, [r4, #40]	; 0x28
   46018:	mov	r0, r5
   4601c:	bl	1510 <time@plt>
   46020:	str	r0, [sp, #16]
   46024:	str	r8, [r4]
   46028:	mov	r1, r9
   4602c:	ldr	r0, [pc, #336]	; 46184 <Mat_Create5+0x1dc>
   46030:	add	r0, pc, r0
   46034:	bl	1f2c <strdup_printf>
   46038:	str	r0, [r4, #12]
   4603c:	mov	r3, #1
   46040:	str	r3, [r4, #24]
   46044:	str	r5, [r4, #20]
   46048:	mov	r0, r6
   4604c:	bl	15ac <malloc@plt>
   46050:	mov	r5, r0
   46054:	str	r0, [r4, #4]
   46058:	mov	r0, #8
   4605c:	bl	15ac <malloc@plt>
   46060:	str	r0, [r4, #8]
   46064:	mov	r2, r6
   46068:	mov	r1, #32
   4606c:	mov	r0, r5
   46070:	bl	166c <memset@plt>
   46074:	cmp	r7, #0
   46078:	beq	46134 <Mat_Create5+0x18c>
   4607c:	mov	r3, r7
   46080:	ldr	r2, [pc, #256]	; 46188 <Mat_Create5+0x1e0>
   46084:	add	r2, pc, r2
   46088:	mov	r1, #116	; 0x74
   4608c:	mov	r0, r5
   46090:	bl	1654 <snprintf@plt>
   46094:	cmp	r0, #115	; 0x73
   46098:	ldrhi	r3, [r4, #4]
   4609c:	movhi	r2, #0
   460a0:	strbhi	r2, [r3, #115]	; 0x73
   460a4:	ldr	r3, [r4, #8]
   460a8:	ldr	r2, [pc, #220]	; 4618c <Mat_Create5+0x1e4>
   460ac:	str	r2, [r3]
   460b0:	str	r2, [r3, #4]
   460b4:	mov	r3, #256	; 0x100
   460b8:	str	r3, [r4, #16]
   460bc:	ldr	r2, [pc, #204]	; 46190 <Mat_Create5+0x1e8>
   460c0:	strh	r2, [sp, #22]
   460c4:	add	r5, sp, #24
   460c8:	strh	r3, [r5, #-4]!
   460cc:	ldr	r3, [r4]
   460d0:	mov	r2, #116	; 0x74
   460d4:	mov	r1, #1
   460d8:	ldr	r0, [r4, #4]
   460dc:	bl	157c <fwrite@plt>
   460e0:	ldr	r3, [r4]
   460e4:	mov	r2, #8
   460e8:	mov	r1, #1
   460ec:	ldr	r0, [r4, #8]
   460f0:	bl	157c <fwrite@plt>
   460f4:	ldr	r3, [r4]
   460f8:	mov	r2, #1
   460fc:	mov	r1, #2
   46100:	mov	r0, r5
   46104:	bl	157c <fwrite@plt>
   46108:	ldr	r3, [r4]
   4610c:	mov	r2, #1
   46110:	mov	r1, #2
   46114:	add	r0, sp, #22
   46118:	bl	157c <fwrite@plt>
   4611c:	mov	r0, r4
   46120:	add	sp, sp, #28
   46124:	pop	{r4, r5, r6, r7, r8, r9, pc}
   46128:	mov	r0, r8
   4612c:	bl	16a8 <fclose@plt>
   46130:	b	4611c <Mat_Create5+0x174>
   46134:	add	r0, sp, #16
   46138:	bl	1528 <ctime@plt>
   4613c:	str	r0, [sp, #12]
   46140:	mov	r3, #15
   46144:	str	r3, [sp, #8]
   46148:	mov	r3, #5
   4614c:	str	r3, [sp, #4]
   46150:	mov	r3, #1
   46154:	str	r3, [sp]
   46158:	ldr	r3, [pc, #52]	; 46194 <Mat_Create5+0x1ec>
   4615c:	add	r3, pc, r3
   46160:	ldr	r2, [pc, #48]	; 46198 <Mat_Create5+0x1f0>
   46164:	add	r2, pc, r2
   46168:	mov	r1, #116	; 0x74
   4616c:	mov	r0, r5
   46170:	bl	1654 <snprintf@plt>
   46174:	b	46094 <Mat_Create5+0xec>
   46178:	mov	r4, #0
   4617c:	b	4611c <Mat_Create5+0x174>
   46180:	.word	0x0000c2d4
   46184:	.word	0x0000c9e4
   46188:	.word	0x0000c990
   4618c:	.word	0x20202020
   46190:	.word	0x00004d49
   46194:	.word	0x0000c140
   46198:	.word	0x0000c158

0004619c <Mat_VarRead5>:
   4619c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   461a0:	sub	sp, sp, #36	; 0x24
   461a4:	mov	r3, #1
   461a8:	str	r3, [sp, #28]
   461ac:	cmp	r1, #0
   461b0:	beq	461dc <Mat_VarRead5+0x40>
   461b4:	ldr	r3, [r1, #4]
   461b8:	cmp	r3, #0
   461bc:	beq	461dc <Mat_VarRead5+0x40>
   461c0:	ldr	r3, [r1, #52]	; 0x34
   461c4:	ldr	r2, [r3, #16]
   461c8:	cmp	r2, #0
   461cc:	beq	461e4 <Mat_VarRead5+0x48>
   461d0:	str	r2, [r1, #40]	; 0x28
   461d4:	mov	r2, #0
   461d8:	str	r2, [r3, #16]
   461dc:	add	sp, sp, #36	; 0x24
   461e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   461e4:	mov	r4, r1
   461e8:	mov	r5, r0
   461ec:	ldr	r0, [r0]
   461f0:	bl	151c <ftell@plt>
   461f4:	mov	r6, r0
   461f8:	cmn	r0, #1
   461fc:	beq	4626c <Mat_VarRead5+0xd0>
   46200:	add	r1, sp, #28
   46204:	mov	r0, r4
   46208:	bl	4d06c <SafeMulDims>
   4620c:	subs	r8, r0, #0
   46210:	bne	4627c <Mat_VarRead5+0xe0>
   46214:	ldr	sl, [r5, #20]
   46218:	ldr	r1, [r4, #16]
   4621c:	cmp	r1, #16
   46220:	addls	pc, pc, r1, lsl #2
   46224:	b	47c10 <Mat_VarRead5+0x1a74>
   46228:	b	4628c <Mat_VarRead5+0xf0>
   4622c:	b	46834 <Mat_VarRead5+0x698>
   46230:	b	467b0 <Mat_VarRead5+0x614>
   46234:	b	47c10 <Mat_VarRead5+0x1a74>
   46238:	b	464a0 <Mat_VarRead5+0x304>
   4623c:	b	4689c <Mat_VarRead5+0x700>
   46240:	b	462c0 <Mat_VarRead5+0x124>
   46244:	b	4633c <Mat_VarRead5+0x1a0>
   46248:	b	46454 <Mat_VarRead5+0x2b8>
   4624c:	b	46478 <Mat_VarRead5+0x2dc>
   46250:	b	46404 <Mat_VarRead5+0x268>
   46254:	b	4642c <Mat_VarRead5+0x290>
   46258:	b	463b4 <Mat_VarRead5+0x218>
   4625c:	b	463dc <Mat_VarRead5+0x240>
   46260:	b	46364 <Mat_VarRead5+0x1c8>
   46264:	b	4638c <Mat_VarRead5+0x1f0>
   46268:	b	47bb0 <Mat_VarRead5+0x1a14>
   4626c:	ldr	r0, [pc, #4084]	; 47268 <Mat_VarRead5+0x10cc>
   46270:	add	r0, pc, r0
   46274:	bl	1690 <Mat_Critical@plt>
   46278:	b	461dc <Mat_VarRead5+0x40>
   4627c:	ldr	r0, [pc, #4072]	; 4726c <Mat_VarRead5+0x10d0>
   46280:	add	r0, pc, r0
   46284:	bl	1690 <Mat_Critical@plt>
   46288:	b	461dc <Mat_VarRead5+0x40>
   4628c:	mov	r7, #0
   46290:	str	r7, [r4]
   46294:	mov	r0, #8
   46298:	str	r0, [r4, #12]
   4629c:	mov	r3, #9
   462a0:	str	r3, [r4, #8]
   462a4:	mov	r3, #2
   462a8:	str	r3, [r4, #4]
   462ac:	bl	15ac <malloc@plt>
   462b0:	str	r0, [r4, #32]
   462b4:	str	r7, [r0]
   462b8:	str	r7, [r0, #4]
   462bc:	b	46588 <Mat_VarRead5+0x3ec>
   462c0:	ldr	r3, [r4, #52]	; 0x34
   462c4:	mov	r2, #0
   462c8:	ldr	r1, [r3]
   462cc:	ldr	r0, [r5]
   462d0:	bl	1714 <fseek@plt>
   462d4:	mov	r3, #8
   462d8:	str	r3, [r4, #12]
   462dc:	mov	r3, #9
   462e0:	str	r3, [r4, #8]
   462e4:	ldr	r3, [r4, #16]
   462e8:	sub	r3, r3, #6
   462ec:	cmp	r3, #9
   462f0:	bhi	46588 <Mat_VarRead5+0x3ec>
   462f4:	ldr	r3, [r4, #20]
   462f8:	cmp	r3, #0
   462fc:	bne	4653c <Mat_VarRead5+0x3a0>
   46300:	ldr	r2, [r4, #12]
   46304:	ldr	r1, [sp, #28]
   46308:	mov	r0, r4
   4630c:	bl	4d0c8 <SafeMul>
   46310:	ldr	r0, [r4]
   46314:	bl	15ac <malloc@plt>
   46318:	str	r0, [r4, #40]	; 0x28
   4631c:	cmp	r0, #0
   46320:	beq	47c30 <Mat_VarRead5+0x1a94>
   46324:	ldr	r3, [sp, #28]
   46328:	mov	r2, r0
   4632c:	mov	r1, r4
   46330:	mov	r0, r5
   46334:	bl	20b88 <Mat_VarReadNumeric5>
   46338:	b	46588 <Mat_VarRead5+0x3ec>
   4633c:	ldr	r3, [r4, #52]	; 0x34
   46340:	mov	r2, #0
   46344:	ldr	r1, [r3]
   46348:	ldr	r0, [r5]
   4634c:	bl	1714 <fseek@plt>
   46350:	mov	r3, #4
   46354:	str	r3, [r4, #12]
   46358:	mov	r3, #7
   4635c:	str	r3, [r4, #8]
   46360:	b	462e4 <Mat_VarRead5+0x148>
   46364:	ldr	r3, [r4, #52]	; 0x34
   46368:	mov	r2, #0
   4636c:	ldr	r1, [r3]
   46370:	ldr	r0, [r5]
   46374:	bl	1714 <fseek@plt>
   46378:	mov	r3, #8
   4637c:	str	r3, [r4, #12]
   46380:	mov	r3, #12
   46384:	str	r3, [r4, #8]
   46388:	b	462e4 <Mat_VarRead5+0x148>
   4638c:	ldr	r3, [r4, #52]	; 0x34
   46390:	mov	r2, #0
   46394:	ldr	r1, [r3]
   46398:	ldr	r0, [r5]
   4639c:	bl	1714 <fseek@plt>
   463a0:	mov	r3, #8
   463a4:	str	r3, [r4, #12]
   463a8:	mov	r3, #13
   463ac:	str	r3, [r4, #8]
   463b0:	b	462e4 <Mat_VarRead5+0x148>
   463b4:	ldr	r3, [r4, #52]	; 0x34
   463b8:	mov	r2, #0
   463bc:	ldr	r1, [r3]
   463c0:	ldr	r0, [r5]
   463c4:	bl	1714 <fseek@plt>
   463c8:	mov	r3, #4
   463cc:	str	r3, [r4, #12]
   463d0:	mov	r3, #5
   463d4:	str	r3, [r4, #8]
   463d8:	b	462e4 <Mat_VarRead5+0x148>
   463dc:	ldr	r3, [r4, #52]	; 0x34
   463e0:	mov	r2, #0
   463e4:	ldr	r1, [r3]
   463e8:	ldr	r0, [r5]
   463ec:	bl	1714 <fseek@plt>
   463f0:	mov	r3, #4
   463f4:	str	r3, [r4, #12]
   463f8:	mov	r3, #6
   463fc:	str	r3, [r4, #8]
   46400:	b	462e4 <Mat_VarRead5+0x148>
   46404:	ldr	r3, [r4, #52]	; 0x34
   46408:	mov	r2, #0
   4640c:	ldr	r1, [r3]
   46410:	ldr	r0, [r5]
   46414:	bl	1714 <fseek@plt>
   46418:	mov	r3, #2
   4641c:	str	r3, [r4, #12]
   46420:	mov	r3, #3
   46424:	str	r3, [r4, #8]
   46428:	b	462e4 <Mat_VarRead5+0x148>
   4642c:	ldr	r3, [r4, #52]	; 0x34
   46430:	mov	r2, #0
   46434:	ldr	r1, [r3]
   46438:	ldr	r0, [r5]
   4643c:	bl	1714 <fseek@plt>
   46440:	mov	r3, #2
   46444:	str	r3, [r4, #12]
   46448:	mov	r3, #4
   4644c:	str	r3, [r4, #8]
   46450:	b	462e4 <Mat_VarRead5+0x148>
   46454:	ldr	r3, [r4, #52]	; 0x34
   46458:	mov	r2, #0
   4645c:	ldr	r1, [r3]
   46460:	ldr	r0, [r5]
   46464:	bl	1714 <fseek@plt>
   46468:	mov	r3, #1
   4646c:	str	r3, [r4, #12]
   46470:	str	r3, [r4, #8]
   46474:	b	462e4 <Mat_VarRead5+0x148>
   46478:	ldr	r3, [r4, #52]	; 0x34
   4647c:	mov	r2, #0
   46480:	ldr	r1, [r3]
   46484:	ldr	r0, [r5]
   46488:	bl	1714 <fseek@plt>
   4648c:	mov	r3, #1
   46490:	str	r3, [r4, #12]
   46494:	mov	r3, #2
   46498:	str	r3, [r4, #8]
   4649c:	b	462e4 <Mat_VarRead5+0x148>
   464a0:	ldr	r3, [r4, #52]	; 0x34
   464a4:	mov	r2, #0
   464a8:	ldr	r1, [r3]
   464ac:	ldr	r0, [r5]
   464b0:	bl	1714 <fseek@plt>
   464b4:	ldr	r3, [r4, #48]	; 0x30
   464b8:	cmp	r3, #1
   464bc:	beq	4659c <Mat_VarRead5+0x400>
   464c0:	ldr	r3, [r5]
   464c4:	mov	r2, #1
   464c8:	mov	r1, #4
   464cc:	add	r0, sp, #20
   464d0:	bl	1588 <fread@plt>
   464d4:	cmp	sl, #0
   464d8:	bne	46644 <Mat_VarRead5+0x4a8>
   464dc:	ldr	r3, [sp, #20]
   464e0:	uxtb	r7, r3
   464e4:	cmp	r7, #24
   464e8:	movhi	r7, #0
   464ec:	lsrs	r3, r3, #16
   464f0:	movne	sl, #1
   464f4:	beq	46650 <Mat_VarRead5+0x4b4>
   464f8:	mov	r0, #2
   464fc:	str	r0, [r4, #8]
   46500:	bl	1600 <Mat_SizeOf@plt>
   46504:	mov	r2, r0
   46508:	str	r0, [r4, #12]
   4650c:	ldr	r1, [sp, #28]
   46510:	mov	r0, r4
   46514:	bl	4d0c8 <SafeMul>
   46518:	cmp	r0, #0
   4651c:	bne	4667c <Mat_VarRead5+0x4e0>
   46520:	ldr	r3, [r4, #20]
   46524:	cmp	r3, #0
   46528:	beq	4668c <Mat_VarRead5+0x4f0>
   4652c:	ldr	r3, [r4, #16]
   46530:	sub	r3, r3, #6
   46534:	cmp	r3, #9
   46538:	bhi	46588 <Mat_VarRead5+0x3ec>
   4653c:	ldr	r2, [r4, #12]
   46540:	ldr	r1, [sp, #28]
   46544:	mov	r0, r4
   46548:	bl	4d0c8 <SafeMul>
   4654c:	ldr	r0, [r4]
   46550:	bl	4cf3c <ComplexMalloc>
   46554:	subs	r7, r0, #0
   46558:	beq	47c20 <Mat_VarRead5+0x1a84>
   4655c:	ldr	r3, [sp, #28]
   46560:	ldr	r2, [r7]
   46564:	mov	r1, r4
   46568:	mov	r0, r5
   4656c:	bl	20b88 <Mat_VarReadNumeric5>
   46570:	ldr	r3, [sp, #28]
   46574:	ldr	r2, [r7, #4]
   46578:	mov	r1, r4
   4657c:	mov	r0, r5
   46580:	bl	20b88 <Mat_VarReadNumeric5>
   46584:	str	r7, [r4, #40]	; 0x28
   46588:	mov	r2, #0
   4658c:	mov	r1, r6
   46590:	ldr	r0, [r5]
   46594:	bl	1714 <fseek@plt>
   46598:	b	461dc <Mat_VarRead5+0x40>
   4659c:	ldr	r3, [r4, #52]	; 0x34
   465a0:	ldr	r3, [r3, #12]
   465a4:	mov	r2, #0
   465a8:	str	r2, [r3, #4]
   465ac:	ldr	r3, [r4, #52]	; 0x34
   465b0:	add	r2, sp, #20
   465b4:	ldr	r1, [r3, #12]
   465b8:	mov	r0, r5
   465bc:	bl	32c0 <InflateDataType>
   465c0:	cmp	sl, #0
   465c4:	bne	4660c <Mat_VarRead5+0x470>
   465c8:	ldr	r3, [sp, #20]
   465cc:	uxtb	r7, r3
   465d0:	cmp	r7, #24
   465d4:	movhi	r7, #0
   465d8:	lsr	r2, r3, #16
   465dc:	lsl	r2, r2, #16
   465e0:	cmp	r2, #0
   465e4:	beq	46618 <Mat_VarRead5+0x47c>
   465e8:	lsr	r9, r3, #16
   465ec:	mov	r8, #1
   465f0:	str	r7, [r4, #8]
   465f4:	mov	r0, r7
   465f8:	bl	1600 <Mat_SizeOf@plt>
   465fc:	str	r0, [r4, #12]
   46600:	str	r9, [r4]
   46604:	mov	sl, r8
   46608:	b	46520 <Mat_VarRead5+0x384>
   4660c:	add	r0, sp, #20
   46610:	bl	1a88 <Mat_uint32Swap>
   46614:	b	465c8 <Mat_VarRead5+0x42c>
   46618:	ldr	r3, [r4, #52]	; 0x34
   4661c:	add	r2, sp, #24
   46620:	ldr	r1, [r3, #12]
   46624:	mov	r0, r5
   46628:	bl	32c0 <InflateDataType>
   4662c:	cmp	sl, #0
   46630:	beq	4663c <Mat_VarRead5+0x4a0>
   46634:	add	r0, sp, #24
   46638:	bl	1a88 <Mat_uint32Swap>
   4663c:	ldr	r9, [sp, #24]
   46640:	b	465f0 <Mat_VarRead5+0x454>
   46644:	add	r0, sp, #20
   46648:	bl	1a88 <Mat_uint32Swap>
   4664c:	b	464dc <Mat_VarRead5+0x340>
   46650:	ldr	r3, [r5]
   46654:	mov	r2, #1
   46658:	mov	r1, #4
   4665c:	add	r0, sp, #24
   46660:	bl	1588 <fread@plt>
   46664:	cmp	sl, #0
   46668:	beq	464f8 <Mat_VarRead5+0x35c>
   4666c:	add	r0, sp, #24
   46670:	bl	1a88 <Mat_uint32Swap>
   46674:	mov	sl, r8
   46678:	b	464f8 <Mat_VarRead5+0x35c>
   4667c:	ldr	r0, [pc, #3052]	; 47270 <Mat_VarRead5+0x10d4>
   46680:	add	r0, pc, r0
   46684:	bl	1690 <Mat_Critical@plt>
   46688:	b	462e4 <Mat_VarRead5+0x148>
   4668c:	ldr	r8, [r4]
   46690:	mov	r1, #1
   46694:	add	r0, r8, r1
   46698:	bl	1468 <calloc@plt>
   4669c:	str	r0, [r4, #40]	; 0x28
   466a0:	cmp	r0, #0
   466a4:	beq	466c4 <Mat_VarRead5+0x528>
   466a8:	cmp	r8, #0
   466ac:	bne	466d4 <Mat_VarRead5+0x538>
   466b0:	ldr	r3, [r4, #16]
   466b4:	sub	r3, r3, #6
   466b8:	cmp	r3, #9
   466bc:	bls	46300 <Mat_VarRead5+0x164>
   466c0:	b	46588 <Mat_VarRead5+0x3ec>
   466c4:	ldr	r0, [pc, #2984]	; 47274 <Mat_VarRead5+0x10d8>
   466c8:	add	r0, pc, r0
   466cc:	bl	1690 <Mat_Critical@plt>
   466d0:	b	462e4 <Mat_VarRead5+0x148>
   466d4:	ldr	r2, [r4, #12]
   466d8:	ldr	r1, [sp, #28]
   466dc:	add	r0, sp, #16
   466e0:	bl	4d0c8 <SafeMul>
   466e4:	cmp	r0, #0
   466e8:	bne	462e4 <Mat_VarRead5+0x148>
   466ec:	ldr	r2, [r4]
   466f0:	ldr	r3, [sp, #16]
   466f4:	cmp	r2, r3
   466f8:	bcc	462e4 <Mat_VarRead5+0x148>
   466fc:	ldr	r3, [r4, #48]	; 0x30
   46700:	cmp	r3, #0
   46704:	bne	46750 <Mat_VarRead5+0x5b4>
   46708:	ldr	r3, [sp, #28]
   4670c:	mov	r2, r7
   46710:	ldr	r1, [r4, #40]	; 0x28
   46714:	mov	r0, r5
   46718:	bl	159b0 <ReadCharData>
   4671c:	cmp	sl, #0
   46720:	addne	r0, r0, #4
   46724:	tst	r0, #7
   46728:	beq	462e4 <Mat_VarRead5+0x148>
   4672c:	rsbs	r3, r0, #0
   46730:	and	r1, r0, #7
   46734:	and	r3, r3, #7
   46738:	rsbpl	r1, r3, #0
   4673c:	mov	r2, #1
   46740:	rsb	r1, r1, #8
   46744:	ldr	r0, [r5]
   46748:	bl	1714 <fseek@plt>
   4674c:	b	462e4 <Mat_VarRead5+0x148>
   46750:	cmp	r3, #1
   46754:	bne	462e4 <Mat_VarRead5+0x148>
   46758:	ldr	r1, [r4, #52]	; 0x34
   4675c:	ldr	r3, [sp, #28]
   46760:	str	r3, [sp]
   46764:	mov	r3, r7
   46768:	ldr	r2, [r4, #40]	; 0x28
   4676c:	ldr	r1, [r1, #12]
   46770:	mov	r0, r5
   46774:	bl	1588c <ReadCompressedCharData>
   46778:	cmp	sl, #0
   4677c:	addne	r0, r0, #4
   46780:	tst	r0, #7
   46784:	beq	462e4 <Mat_VarRead5+0x148>
   46788:	rsbs	r3, r0, #0
   4678c:	and	r2, r0, #7
   46790:	and	r3, r3, #7
   46794:	rsbpl	r2, r3, #0
   46798:	ldr	r3, [r4, #52]	; 0x34
   4679c:	rsb	r2, r2, #8
   467a0:	ldr	r1, [r3, #12]
   467a4:	mov	r0, r5
   467a8:	bl	227c <InflateSkip>
   467ac:	b	462e4 <Mat_VarRead5+0x148>
   467b0:	mov	r3, #22
   467b4:	str	r3, [r4, #8]
   467b8:	ldr	r3, [r4]
   467bc:	cmp	r3, #0
   467c0:	beq	462e4 <Mat_VarRead5+0x148>
   467c4:	ldr	r3, [r4, #12]
   467c8:	cmp	r3, #0
   467cc:	beq	462e4 <Mat_VarRead5+0x148>
   467d0:	ldr	r3, [r4, #40]	; 0x28
   467d4:	cmp	r3, #0
   467d8:	beq	462e4 <Mat_VarRead5+0x148>
   467dc:	ldr	r3, [r4, #52]	; 0x34
   467e0:	ldr	r2, [r3, #4]
   467e4:	ldr	r1, [sp, #28]
   467e8:	add	r0, sp, #16
   467ec:	bl	4d0c8 <SafeMul>
   467f0:	ldr	r8, [r4, #40]	; 0x28
   467f4:	ldr	r3, [sp, #16]
   467f8:	cmp	r3, #0
   467fc:	beq	462e4 <Mat_VarRead5+0x148>
   46800:	sub	r8, r8, #4
   46804:	mov	r7, #0
   46808:	b	4681c <Mat_VarRead5+0x680>
   4680c:	add	r7, r7, #1
   46810:	ldr	r3, [sp, #16]
   46814:	cmp	r3, r7
   46818:	bls	462e4 <Mat_VarRead5+0x148>
   4681c:	ldr	r1, [r8, #4]!
   46820:	cmp	r1, #0
   46824:	beq	4680c <Mat_VarRead5+0x670>
   46828:	mov	r0, r5
   4682c:	bl	4619c <Mat_VarRead5>
   46830:	b	4680c <Mat_VarRead5+0x670>
   46834:	ldr	r8, [r4, #40]	; 0x28
   46838:	cmp	r8, #0
   4683c:	beq	46860 <Mat_VarRead5+0x6c4>
   46840:	ldr	r3, [sp, #28]
   46844:	cmp	r3, #0
   46848:	subne	r8, r8, #4
   4684c:	movne	r7, #0
   46850:	bne	46884 <Mat_VarRead5+0x6e8>
   46854:	mov	r3, #21
   46858:	str	r3, [r4, #8]
   4685c:	b	462e4 <Mat_VarRead5+0x148>
   46860:	ldr	r1, [r4, #36]	; 0x24
   46864:	ldr	r0, [pc, #2572]	; 47278 <Mat_VarRead5+0x10dc>
   46868:	add	r0, pc, r0
   4686c:	bl	1690 <Mat_Critical@plt>
   46870:	b	462e4 <Mat_VarRead5+0x148>
   46874:	add	r7, r7, #1
   46878:	ldr	r3, [sp, #28]
   4687c:	cmp	r3, r7
   46880:	bls	46854 <Mat_VarRead5+0x6b8>
   46884:	ldr	r1, [r8, #4]!
   46888:	cmp	r1, #0
   4688c:	beq	46874 <Mat_VarRead5+0x6d8>
   46890:	mov	r0, r5
   46894:	bl	4619c <Mat_VarRead5>
   46898:	b	46874 <Mat_VarRead5+0x6d8>
   4689c:	mov	r3, #0
   468a0:	str	r3, [sp, #16]
   468a4:	mov	r0, #28
   468a8:	str	r0, [r4, #12]
   468ac:	bl	15ac <malloc@plt>
   468b0:	mov	r9, r0
   468b4:	str	r0, [r4, #40]	; 0x28
   468b8:	cmp	r0, #0
   468bc:	beq	46b14 <Mat_VarRead5+0x978>
   468c0:	ldr	r3, [r4]
   468c4:	str	r3, [r0]
   468c8:	ldr	r3, [r4, #52]	; 0x34
   468cc:	mov	r2, #0
   468d0:	ldr	r1, [r3]
   468d4:	ldr	r0, [r5]
   468d8:	bl	1714 <fseek@plt>
   468dc:	ldr	r3, [r4, #48]	; 0x30
   468e0:	cmp	r3, #1
   468e4:	beq	46b24 <Mat_VarRead5+0x988>
   468e8:	ldr	r3, [r5]
   468ec:	mov	r2, #1
   468f0:	mov	r1, #4
   468f4:	add	r0, sp, #20
   468f8:	bl	1588 <fread@plt>
   468fc:	ldr	r3, [r5, #20]
   46900:	cmp	r3, #0
   46904:	bne	46bbc <Mat_VarRead5+0xa20>
   46908:	ldr	r3, [sp, #20]
   4690c:	uxtb	r2, r3
   46910:	cmp	r2, #24
   46914:	movhi	r2, #0
   46918:	str	r2, [sp, #8]
   4691c:	lsrs	r2, r3, #16
   46920:	beq	46bc8 <Mat_VarRead5+0xa2c>
   46924:	lsr	r3, r3, #16
   46928:	str	r3, [sp, #16]
   4692c:	mov	fp, #1
   46930:	ldr	r7, [sp, #16]
   46934:	add	r3, r7, #3
   46938:	cmp	r7, #0
   4693c:	movlt	r7, r3
   46940:	asr	r7, r7, #2
   46944:	str	r7, [r9, #8]
   46948:	lsl	r0, r7, #2
   4694c:	bl	15ac <malloc@plt>
   46950:	mov	r1, r0
   46954:	str	r0, [r9, #4]
   46958:	cmp	r0, #0
   4695c:	beq	46d08 <Mat_VarRead5+0xb6c>
   46960:	ldr	r3, [r4, #48]	; 0x30
   46964:	cmp	r3, #0
   46968:	beq	46bf8 <Mat_VarRead5+0xa5c>
   4696c:	cmp	r3, #1
   46970:	movne	r7, r8
   46974:	beq	46cb0 <Mat_VarRead5+0xb14>
   46978:	ldr	r3, [r5]
   4697c:	mov	r2, #1
   46980:	mov	r1, #4
   46984:	add	r0, sp, #20
   46988:	bl	1588 <fread@plt>
   4698c:	ldr	r3, [r5, #20]
   46990:	cmp	r3, #0
   46994:	bne	46d4c <Mat_VarRead5+0xbb0>
   46998:	ldr	r3, [sp, #20]
   4699c:	uxtb	r2, r3
   469a0:	cmp	r2, #24
   469a4:	movhi	r2, #0
   469a8:	str	r2, [sp, #8]
   469ac:	lsrs	r2, r3, #16
   469b0:	beq	46d58 <Mat_VarRead5+0xbbc>
   469b4:	lsr	r3, r3, #16
   469b8:	str	r3, [sp, #16]
   469bc:	mov	fp, #1
   469c0:	ldr	r3, [sp, #16]
   469c4:	add	r2, r3, #3
   469c8:	cmp	r3, #0
   469cc:	movlt	r3, r2
   469d0:	asr	r3, r3, #2
   469d4:	str	r3, [sp, #12]
   469d8:	str	r3, [r9, #16]
   469dc:	lsl	r0, r3, #2
   469e0:	bl	15ac <malloc@plt>
   469e4:	mov	r1, r0
   469e8:	str	r0, [r9, #12]
   469ec:	cmp	r0, #0
   469f0:	beq	46ea0 <Mat_VarRead5+0xd04>
   469f4:	ldr	r3, [r4, #48]	; 0x30
   469f8:	cmp	r3, #0
   469fc:	beq	46d88 <Mat_VarRead5+0xbec>
   46a00:	cmp	r3, #1
   46a04:	beq	46e44 <Mat_VarRead5+0xca8>
   46a08:	ldr	r3, [r5]
   46a0c:	mov	r2, #1
   46a10:	mov	r1, #4
   46a14:	add	r0, sp, #20
   46a18:	bl	1588 <fread@plt>
   46a1c:	ldr	r3, [r5, #20]
   46a20:	cmp	r3, #0
   46a24:	bne	46ee4 <Mat_VarRead5+0xd48>
   46a28:	ldr	r3, [sp, #20]
   46a2c:	uxtb	r2, r3
   46a30:	cmp	r2, #24
   46a34:	movhi	r2, #0
   46a38:	str	r2, [sp, #8]
   46a3c:	lsrs	r2, r3, #16
   46a40:	beq	46ef0 <Mat_VarRead5+0xd54>
   46a44:	lsr	r3, r3, #16
   46a48:	str	r3, [sp, #16]
   46a4c:	mov	r3, #1
   46a50:	str	r3, [sp, #12]
   46a54:	ldr	r3, [r4, #28]
   46a58:	ldr	r2, [sp, #8]
   46a5c:	adds	r3, r3, #0
   46a60:	movne	r3, #1
   46a64:	cmp	r2, #9
   46a68:	movne	r3, #0
   46a6c:	cmp	r3, #0
   46a70:	movne	r2, #2
   46a74:	str	r2, [sp, #8]
   46a78:	str	r2, [r4, #8]
   46a7c:	mov	r0, r2
   46a80:	bl	1600 <Mat_SizeOf@plt>
   46a84:	subs	r1, r0, #0
   46a88:	beq	462e4 <Mat_VarRead5+0x148>
   46a8c:	ldr	r0, [sp, #16]
   46a90:	bl	513bc <__udivsi3>
   46a94:	mov	fp, r0
   46a98:	str	r0, [r9, #20]
   46a9c:	ldr	r3, [r4, #20]
   46aa0:	cmp	r3, #0
   46aa4:	beq	477f0 <Mat_VarRead5+0x1654>
   46aa8:	ldr	r0, [r4, #8]
   46aac:	bl	1600 <Mat_SizeOf@plt>
   46ab0:	mul	r0, r0, fp
   46ab4:	bl	4cf3c <ComplexMalloc>
   46ab8:	subs	fp, r0, #0
   46abc:	beq	46f24 <Mat_VarRead5+0xd88>
   46ac0:	ldr	r3, [r4, #48]	; 0x30
   46ac4:	cmp	r3, #0
   46ac8:	bne	4730c <Mat_VarRead5+0x1170>
   46acc:	ldr	r3, [r4, #8]
   46ad0:	sub	r3, r3, #1
   46ad4:	cmp	r3, #12
   46ad8:	addls	pc, pc, r3, lsl #2
   46adc:	b	46f4c <Mat_VarRead5+0xdb0>
   46ae0:	b	470d0 <Mat_VarRead5+0xf34>
   46ae4:	b	470ec <Mat_VarRead5+0xf50>
   46ae8:	b	47098 <Mat_VarRead5+0xefc>
   46aec:	b	470b4 <Mat_VarRead5+0xf18>
   46af0:	b	47060 <Mat_VarRead5+0xec4>
   46af4:	b	4707c <Mat_VarRead5+0xee0>
   46af8:	b	4700c <Mat_VarRead5+0xe70>
   46afc:	b	46f4c <Mat_VarRead5+0xdb0>
   46b00:	b	46f34 <Mat_VarRead5+0xd98>
   46b04:	b	46f4c <Mat_VarRead5+0xdb0>
   46b08:	b	46f4c <Mat_VarRead5+0xdb0>
   46b0c:	b	47028 <Mat_VarRead5+0xe8c>
   46b10:	b	47044 <Mat_VarRead5+0xea8>
   46b14:	ldr	r0, [pc, #1888]	; 4727c <Mat_VarRead5+0x10e0>
   46b18:	add	r0, pc, r0
   46b1c:	bl	1690 <Mat_Critical@plt>
   46b20:	b	462e4 <Mat_VarRead5+0x148>
   46b24:	ldr	r3, [r4, #52]	; 0x34
   46b28:	ldr	r3, [r3, #12]
   46b2c:	mov	r2, #0
   46b30:	str	r2, [r3, #4]
   46b34:	ldr	r3, [r4, #52]	; 0x34
   46b38:	add	r2, sp, #20
   46b3c:	ldr	r1, [r3, #12]
   46b40:	mov	r0, r5
   46b44:	bl	32c0 <InflateDataType>
   46b48:	ldr	r3, [r5, #20]
   46b4c:	cmp	r3, #0
   46b50:	bne	46b88 <Mat_VarRead5+0x9ec>
   46b54:	ldr	r3, [sp, #20]
   46b58:	uxtb	r2, r3
   46b5c:	cmp	r2, #24
   46b60:	movhi	r2, #0
   46b64:	str	r2, [sp, #8]
   46b68:	lsr	r2, r3, #16
   46b6c:	lsl	r2, r2, #16
   46b70:	cmp	r2, #0
   46b74:	beq	46b94 <Mat_VarRead5+0x9f8>
   46b78:	lsr	r3, r3, #16
   46b7c:	str	r3, [sp, #16]
   46b80:	mov	fp, #1
   46b84:	b	46930 <Mat_VarRead5+0x794>
   46b88:	add	r0, sp, #20
   46b8c:	bl	1a88 <Mat_uint32Swap>
   46b90:	b	46b54 <Mat_VarRead5+0x9b8>
   46b94:	ldr	r1, [r4, #52]	; 0x34
   46b98:	mov	r3, #1
   46b9c:	str	r3, [sp]
   46ba0:	mov	r3, #5
   46ba4:	add	r2, sp, #16
   46ba8:	ldr	r1, [r1, #12]
   46bac:	mov	r0, r5
   46bb0:	bl	cc9c <ReadCompressedInt32Data>
   46bb4:	mov	fp, r8
   46bb8:	b	46930 <Mat_VarRead5+0x794>
   46bbc:	add	r0, sp, #20
   46bc0:	bl	1a88 <Mat_uint32Swap>
   46bc4:	b	46908 <Mat_VarRead5+0x76c>
   46bc8:	ldr	r3, [r5]
   46bcc:	mov	r2, #1
   46bd0:	mov	r1, #4
   46bd4:	add	r0, sp, #16
   46bd8:	bl	1588 <fread@plt>
   46bdc:	ldr	fp, [r5, #20]
   46be0:	cmp	fp, #0
   46be4:	beq	46930 <Mat_VarRead5+0x794>
   46be8:	add	r0, sp, #16
   46bec:	bl	1a20 <Mat_int32Swap>
   46bf0:	mov	fp, r8
   46bf4:	b	46930 <Mat_VarRead5+0x794>
   46bf8:	mov	r3, r7
   46bfc:	ldr	r2, [sp, #8]
   46c00:	mov	r0, r5
   46c04:	bl	b6c4 <ReadInt32Data>
   46c08:	mov	r7, r0
   46c0c:	cmp	fp, #0
   46c10:	addne	r7, r0, #4
   46c14:	tst	r7, #7
   46c18:	bne	46c8c <Mat_VarRead5+0xaf0>
   46c1c:	ldr	r3, [r4, #48]	; 0x30
   46c20:	cmp	r3, #1
   46c24:	bne	46978 <Mat_VarRead5+0x7dc>
   46c28:	ldr	r3, [r4, #52]	; 0x34
   46c2c:	ldr	r3, [r3, #12]
   46c30:	mov	r2, #0
   46c34:	str	r2, [r3, #4]
   46c38:	ldr	r3, [r4, #52]	; 0x34
   46c3c:	add	r2, sp, #20
   46c40:	ldr	r1, [r3, #12]
   46c44:	mov	r0, r5
   46c48:	bl	32c0 <InflateDataType>
   46c4c:	ldr	r3, [r5, #20]
   46c50:	cmp	r3, #0
   46c54:	bne	46d18 <Mat_VarRead5+0xb7c>
   46c58:	ldr	r3, [sp, #20]
   46c5c:	uxtb	r2, r3
   46c60:	cmp	r2, #24
   46c64:	movhi	r2, #0
   46c68:	str	r2, [sp, #8]
   46c6c:	lsr	r2, r3, #16
   46c70:	lsl	r2, r2, #16
   46c74:	cmp	r2, #0
   46c78:	beq	46d24 <Mat_VarRead5+0xb88>
   46c7c:	lsr	r3, r3, #16
   46c80:	str	r3, [sp, #16]
   46c84:	mov	fp, #1
   46c88:	b	469c0 <Mat_VarRead5+0x824>
   46c8c:	rsbs	r3, r7, #0
   46c90:	and	r1, r7, #7
   46c94:	and	r3, r3, #7
   46c98:	rsbpl	r1, r3, #0
   46c9c:	mov	r2, #1
   46ca0:	rsb	r1, r1, #8
   46ca4:	ldr	r0, [r5]
   46ca8:	bl	1714 <fseek@plt>
   46cac:	b	46c1c <Mat_VarRead5+0xa80>
   46cb0:	ldr	r0, [r4, #52]	; 0x34
   46cb4:	str	r7, [sp]
   46cb8:	ldr	r3, [sp, #8]
   46cbc:	mov	r2, r1
   46cc0:	ldr	r1, [r0, #12]
   46cc4:	mov	r0, r5
   46cc8:	bl	cc9c <ReadCompressedInt32Data>
   46ccc:	mov	r7, r0
   46cd0:	cmp	fp, #0
   46cd4:	addne	r7, r0, #4
   46cd8:	tst	r7, #7
   46cdc:	beq	46c1c <Mat_VarRead5+0xa80>
   46ce0:	rsbs	r3, r7, #0
   46ce4:	and	r2, r7, #7
   46ce8:	and	r3, r3, #7
   46cec:	rsbpl	r2, r3, #0
   46cf0:	ldr	r3, [r4, #52]	; 0x34
   46cf4:	rsb	r2, r2, #8
   46cf8:	ldr	r1, [r3, #12]
   46cfc:	mov	r0, r5
   46d00:	bl	227c <InflateSkip>
   46d04:	b	46c1c <Mat_VarRead5+0xa80>
   46d08:	ldr	r0, [pc, #1392]	; 47280 <Mat_VarRead5+0x10e4>
   46d0c:	add	r0, pc, r0
   46d10:	bl	1690 <Mat_Critical@plt>
   46d14:	b	462e4 <Mat_VarRead5+0x148>
   46d18:	add	r0, sp, #20
   46d1c:	bl	1a88 <Mat_uint32Swap>
   46d20:	b	46c58 <Mat_VarRead5+0xabc>
   46d24:	ldr	r1, [r4, #52]	; 0x34
   46d28:	mov	r3, #1
   46d2c:	str	r3, [sp]
   46d30:	mov	r3, #5
   46d34:	add	r2, sp, #16
   46d38:	ldr	r1, [r1, #12]
   46d3c:	mov	r0, r5
   46d40:	bl	cc9c <ReadCompressedInt32Data>
   46d44:	mov	fp, r8
   46d48:	b	469c0 <Mat_VarRead5+0x824>
   46d4c:	add	r0, sp, #20
   46d50:	bl	1a88 <Mat_uint32Swap>
   46d54:	b	46998 <Mat_VarRead5+0x7fc>
   46d58:	ldr	r3, [r5]
   46d5c:	mov	r2, #1
   46d60:	mov	r1, #4
   46d64:	add	r0, sp, #16
   46d68:	bl	1588 <fread@plt>
   46d6c:	ldr	fp, [r5, #20]
   46d70:	cmp	fp, #0
   46d74:	beq	469c0 <Mat_VarRead5+0x824>
   46d78:	add	r0, sp, #16
   46d7c:	bl	1a20 <Mat_int32Swap>
   46d80:	mov	fp, r8
   46d84:	b	469c0 <Mat_VarRead5+0x824>
   46d88:	ldr	r3, [sp, #12]
   46d8c:	ldr	r2, [sp, #8]
   46d90:	mov	r0, r5
   46d94:	bl	b6c4 <ReadInt32Data>
   46d98:	mov	r7, r0
   46d9c:	cmp	fp, #0
   46da0:	addne	r7, r0, #4
   46da4:	tst	r7, #7
   46da8:	bne	46e20 <Mat_VarRead5+0xc84>
   46dac:	ldr	r3, [r4, #48]	; 0x30
   46db0:	cmp	r3, #1
   46db4:	bne	46a08 <Mat_VarRead5+0x86c>
   46db8:	ldr	r3, [r4, #52]	; 0x34
   46dbc:	ldr	r3, [r3, #12]
   46dc0:	mov	r2, #0
   46dc4:	str	r2, [r3, #4]
   46dc8:	ldr	r3, [r4, #52]	; 0x34
   46dcc:	add	r2, sp, #20
   46dd0:	ldr	r1, [r3, #12]
   46dd4:	mov	r0, r5
   46dd8:	bl	32c0 <InflateDataType>
   46ddc:	ldr	r3, [r5, #20]
   46de0:	cmp	r3, #0
   46de4:	bne	46eb0 <Mat_VarRead5+0xd14>
   46de8:	ldr	r3, [sp, #20]
   46dec:	uxtb	r2, r3
   46df0:	cmp	r2, #24
   46df4:	movhi	r2, #0
   46df8:	str	r2, [sp, #8]
   46dfc:	lsr	r2, r3, #16
   46e00:	lsl	r2, r2, #16
   46e04:	cmp	r2, #0
   46e08:	beq	46ebc <Mat_VarRead5+0xd20>
   46e0c:	lsr	r3, r3, #16
   46e10:	str	r3, [sp, #16]
   46e14:	mov	r3, #1
   46e18:	str	r3, [sp, #12]
   46e1c:	b	46a54 <Mat_VarRead5+0x8b8>
   46e20:	rsbs	r3, r7, #0
   46e24:	and	r1, r7, #7
   46e28:	and	r3, r3, #7
   46e2c:	rsbpl	r1, r3, #0
   46e30:	mov	r2, #1
   46e34:	rsb	r1, r1, #8
   46e38:	ldr	r0, [r5]
   46e3c:	bl	1714 <fseek@plt>
   46e40:	b	46dac <Mat_VarRead5+0xc10>
   46e44:	ldr	r0, [r4, #52]	; 0x34
   46e48:	ldr	r3, [sp, #12]
   46e4c:	str	r3, [sp]
   46e50:	ldr	r3, [sp, #8]
   46e54:	mov	r2, r1
   46e58:	ldr	r1, [r0, #12]
   46e5c:	mov	r0, r5
   46e60:	bl	cc9c <ReadCompressedInt32Data>
   46e64:	mov	r7, r0
   46e68:	cmp	fp, #0
   46e6c:	addne	r7, r0, #4
   46e70:	tst	r7, #7
   46e74:	beq	46dac <Mat_VarRead5+0xc10>
   46e78:	rsbs	r3, r7, #0
   46e7c:	and	r2, r7, #7
   46e80:	and	r3, r3, #7
   46e84:	rsbpl	r2, r3, #0
   46e88:	ldr	r3, [r4, #52]	; 0x34
   46e8c:	rsb	r2, r2, #8
   46e90:	ldr	r1, [r3, #12]
   46e94:	mov	r0, r5
   46e98:	bl	227c <InflateSkip>
   46e9c:	b	46dac <Mat_VarRead5+0xc10>
   46ea0:	ldr	r0, [pc, #988]	; 47284 <Mat_VarRead5+0x10e8>
   46ea4:	add	r0, pc, r0
   46ea8:	bl	1690 <Mat_Critical@plt>
   46eac:	b	462e4 <Mat_VarRead5+0x148>
   46eb0:	add	r0, sp, #20
   46eb4:	bl	1a88 <Mat_uint32Swap>
   46eb8:	b	46de8 <Mat_VarRead5+0xc4c>
   46ebc:	ldr	r1, [r4, #52]	; 0x34
   46ec0:	mov	r3, #1
   46ec4:	str	r3, [sp]
   46ec8:	mov	r3, #5
   46ecc:	add	r2, sp, #16
   46ed0:	ldr	r1, [r1, #12]
   46ed4:	mov	r0, r5
   46ed8:	bl	cc9c <ReadCompressedInt32Data>
   46edc:	str	r8, [sp, #12]
   46ee0:	b	46a54 <Mat_VarRead5+0x8b8>
   46ee4:	add	r0, sp, #20
   46ee8:	bl	1a88 <Mat_uint32Swap>
   46eec:	b	46a28 <Mat_VarRead5+0x88c>
   46ef0:	ldr	r3, [r5]
   46ef4:	mov	r2, #1
   46ef8:	mov	r1, #4
   46efc:	add	r0, sp, #16
   46f00:	bl	1588 <fread@plt>
   46f04:	ldr	r3, [r5, #20]
   46f08:	str	r3, [sp, #12]
   46f0c:	cmp	r3, #0
   46f10:	beq	46a54 <Mat_VarRead5+0x8b8>
   46f14:	add	r0, sp, #16
   46f18:	bl	1a20 <Mat_int32Swap>
   46f1c:	str	r8, [sp, #12]
   46f20:	b	46a54 <Mat_VarRead5+0x8b8>
   46f24:	ldr	r0, [pc, #860]	; 47288 <Mat_VarRead5+0x10ec>
   46f28:	add	r0, pc, r0
   46f2c:	bl	1690 <Mat_Critical@plt>
   46f30:	b	462e4 <Mat_VarRead5+0x148>
   46f34:	ldr	r3, [r9, #20]
   46f38:	ldr	r2, [sp, #8]
   46f3c:	ldr	r1, [fp]
   46f40:	mov	r0, r5
   46f44:	bl	3aa0 <ReadDoubleData>
   46f48:	mov	r7, r0
   46f4c:	ldr	r3, [sp, #12]
   46f50:	cmp	r3, #0
   46f54:	addne	r7, r7, #4
   46f58:	tst	r7, #7
   46f5c:	beq	46f80 <Mat_VarRead5+0xde4>
   46f60:	rsbs	r3, r7, #0
   46f64:	and	r1, r7, #7
   46f68:	and	r3, r3, #7
   46f6c:	rsbpl	r1, r3, #0
   46f70:	mov	r2, #1
   46f74:	rsb	r1, r1, #8
   46f78:	ldr	r0, [r5]
   46f7c:	bl	1714 <fseek@plt>
   46f80:	ldr	r3, [r5]
   46f84:	mov	r2, #1
   46f88:	mov	r1, #4
   46f8c:	add	r0, sp, #20
   46f90:	bl	1588 <fread@plt>
   46f94:	cmp	sl, #0
   46f98:	beq	46fa4 <Mat_VarRead5+0xe08>
   46f9c:	add	r0, sp, #20
   46fa0:	bl	1a88 <Mat_uint32Swap>
   46fa4:	ldr	r0, [sp, #20]
   46fa8:	uxtb	r7, r0
   46fac:	cmp	r7, #24
   46fb0:	movhi	r7, #0
   46fb4:	lsr	r3, r0, #16
   46fb8:	lsl	r3, r3, #16
   46fbc:	cmp	r3, #0
   46fc0:	beq	47110 <Mat_VarRead5+0xf74>
   46fc4:	ldr	r3, [r4, #8]
   46fc8:	sub	r3, r3, #1
   46fcc:	cmp	r3, #12
   46fd0:	addls	pc, pc, r3, lsl #2
   46fd4:	b	47108 <Mat_VarRead5+0xf6c>
   46fd8:	b	472d4 <Mat_VarRead5+0x1138>
   46fdc:	b	472f0 <Mat_VarRead5+0x1154>
   46fe0:	b	4729c <Mat_VarRead5+0x1100>
   46fe4:	b	472b8 <Mat_VarRead5+0x111c>
   46fe8:	b	47230 <Mat_VarRead5+0x1094>
   46fec:	b	4724c <Mat_VarRead5+0x10b0>
   46ff0:	b	471dc <Mat_VarRead5+0x1040>
   46ff4:	b	47108 <Mat_VarRead5+0xf6c>
   46ff8:	b	47188 <Mat_VarRead5+0xfec>
   46ffc:	b	47108 <Mat_VarRead5+0xf6c>
   47000:	b	47108 <Mat_VarRead5+0xf6c>
   47004:	b	471f8 <Mat_VarRead5+0x105c>
   47008:	b	47214 <Mat_VarRead5+0x1078>
   4700c:	ldr	r3, [r9, #20]
   47010:	ldr	r2, [sp, #8]
   47014:	ldr	r1, [fp]
   47018:	mov	r0, r5
   4701c:	bl	61cc <ReadSingleData>
   47020:	mov	r7, r0
   47024:	b	46f4c <Mat_VarRead5+0xdb0>
   47028:	ldr	r3, [r9, #20]
   4702c:	ldr	r2, [sp, #8]
   47030:	ldr	r1, [fp]
   47034:	mov	r0, r5
   47038:	bl	7d94 <ReadInt64Data>
   4703c:	mov	r7, r0
   47040:	b	46f4c <Mat_VarRead5+0xdb0>
   47044:	ldr	r3, [r9, #20]
   47048:	ldr	r2, [sp, #8]
   4704c:	ldr	r1, [fp]
   47050:	mov	r0, r5
   47054:	bl	9a2c <ReadUInt64Data>
   47058:	mov	r7, r0
   4705c:	b	46f4c <Mat_VarRead5+0xdb0>
   47060:	ldr	r3, [r9, #20]
   47064:	ldr	r2, [sp, #8]
   47068:	ldr	r1, [fp]
   4706c:	mov	r0, r5
   47070:	bl	b6c4 <ReadInt32Data>
   47074:	mov	r7, r0
   47078:	b	46f4c <Mat_VarRead5+0xdb0>
   4707c:	ldr	r3, [r9, #20]
   47080:	ldr	r2, [sp, #8]
   47084:	ldr	r1, [fp]
   47088:	mov	r0, r5
   4708c:	bl	d234 <ReadUInt32Data>
   47090:	mov	r7, r0
   47094:	b	46f4c <Mat_VarRead5+0xdb0>
   47098:	ldr	r3, [r9, #20]
   4709c:	ldr	r2, [sp, #8]
   470a0:	ldr	r1, [fp]
   470a4:	mov	r0, r5
   470a8:	bl	eda4 <ReadInt16Data>
   470ac:	mov	r7, r0
   470b0:	b	46f4c <Mat_VarRead5+0xdb0>
   470b4:	ldr	r3, [r9, #20]
   470b8:	ldr	r2, [sp, #8]
   470bc:	ldr	r1, [fp]
   470c0:	mov	r0, r5
   470c4:	bl	108fc <ReadUInt16Data>
   470c8:	mov	r7, r0
   470cc:	b	46f4c <Mat_VarRead5+0xdb0>
   470d0:	ldr	r3, [r9, #20]
   470d4:	ldr	r2, [sp, #8]
   470d8:	ldr	r1, [fp]
   470dc:	mov	r0, r5
   470e0:	bl	12454 <ReadInt8Data>
   470e4:	mov	r7, r0
   470e8:	b	46f4c <Mat_VarRead5+0xdb0>
   470ec:	ldr	r3, [r9, #20]
   470f0:	ldr	r2, [sp, #8]
   470f4:	ldr	r1, [fp]
   470f8:	mov	r0, r5
   470fc:	bl	13e70 <ReadUInt8Data>
   47100:	mov	r7, r0
   47104:	b	46f4c <Mat_VarRead5+0xdb0>
   47108:	lsr	r0, r0, #16
   4710c:	b	471a8 <Mat_VarRead5+0x100c>
   47110:	ldr	r3, [r5]
   47114:	mov	r2, #1
   47118:	mov	r1, #4
   4711c:	add	r0, sp, #24
   47120:	bl	1588 <fread@plt>
   47124:	cmp	sl, #0
   47128:	bne	47174 <Mat_VarRead5+0xfd8>
   4712c:	ldr	r3, [r4, #8]
   47130:	sub	r3, r3, #1
   47134:	cmp	r3, #12
   47138:	addls	pc, pc, r3, lsl #2
   4713c:	b	47180 <Mat_VarRead5+0xfe4>
   47140:	b	472d8 <Mat_VarRead5+0x113c>
   47144:	b	472f4 <Mat_VarRead5+0x1158>
   47148:	b	472a0 <Mat_VarRead5+0x1104>
   4714c:	b	472bc <Mat_VarRead5+0x1120>
   47150:	b	47234 <Mat_VarRead5+0x1098>
   47154:	b	47250 <Mat_VarRead5+0x10b4>
   47158:	b	471e0 <Mat_VarRead5+0x1044>
   4715c:	b	47180 <Mat_VarRead5+0xfe4>
   47160:	b	4718c <Mat_VarRead5+0xff0>
   47164:	b	47180 <Mat_VarRead5+0xfe4>
   47168:	b	47180 <Mat_VarRead5+0xfe4>
   4716c:	b	471fc <Mat_VarRead5+0x1060>
   47170:	b	47218 <Mat_VarRead5+0x107c>
   47174:	add	r0, sp, #24
   47178:	bl	1a88 <Mat_uint32Swap>
   4717c:	b	4712c <Mat_VarRead5+0xf90>
   47180:	ldr	r0, [sp, #24]
   47184:	b	471ac <Mat_VarRead5+0x1010>
   47188:	mov	r8, #1
   4718c:	ldr	r3, [r9, #20]
   47190:	mov	r2, r7
   47194:	ldr	r1, [fp, #4]
   47198:	mov	r0, r5
   4719c:	bl	3aa0 <ReadDoubleData>
   471a0:	cmp	r8, #0
   471a4:	beq	471ac <Mat_VarRead5+0x1010>
   471a8:	add	r0, r0, #4
   471ac:	tst	r0, #7
   471b0:	beq	471d4 <Mat_VarRead5+0x1038>
   471b4:	rsbs	r3, r0, #0
   471b8:	and	r1, r0, #7
   471bc:	and	r3, r3, #7
   471c0:	rsbpl	r1, r3, #0
   471c4:	mov	r2, #1
   471c8:	rsb	r1, r1, #8
   471cc:	ldr	r0, [r5]
   471d0:	bl	1714 <fseek@plt>
   471d4:	str	fp, [r9, #24]
   471d8:	b	462e4 <Mat_VarRead5+0x148>
   471dc:	mov	r8, #1
   471e0:	ldr	r3, [r9, #20]
   471e4:	mov	r2, r7
   471e8:	ldr	r1, [fp, #4]
   471ec:	mov	r0, r5
   471f0:	bl	61cc <ReadSingleData>
   471f4:	b	471a0 <Mat_VarRead5+0x1004>
   471f8:	mov	r8, #1
   471fc:	ldr	r3, [r9, #20]
   47200:	mov	r2, r7
   47204:	ldr	r1, [fp, #4]
   47208:	mov	r0, r5
   4720c:	bl	7d94 <ReadInt64Data>
   47210:	b	471a0 <Mat_VarRead5+0x1004>
   47214:	mov	r8, #1
   47218:	ldr	r3, [r9, #20]
   4721c:	mov	r2, r7
   47220:	ldr	r1, [fp, #4]
   47224:	mov	r0, r5
   47228:	bl	9a2c <ReadUInt64Data>
   4722c:	b	471a0 <Mat_VarRead5+0x1004>
   47230:	mov	r8, #1
   47234:	ldr	r3, [r9, #20]
   47238:	mov	r2, r7
   4723c:	ldr	r1, [fp, #4]
   47240:	mov	r0, r5
   47244:	bl	b6c4 <ReadInt32Data>
   47248:	b	471a0 <Mat_VarRead5+0x1004>
   4724c:	mov	r8, #1
   47250:	ldr	r3, [r9, #20]
   47254:	mov	r2, r7
   47258:	ldr	r1, [fp, #4]
   4725c:	mov	r0, r5
   47260:	bl	d234 <ReadUInt32Data>
   47264:	b	471a0 <Mat_VarRead5+0x1004>
   47268:	.word	0x0000bfd8
   4726c:	.word	0x0000c084
   47270:	.word	0x0000bc84
   47274:	.word	0x0000bc5c
   47278:	.word	0x0000bae4
   4727c:	.word	0x0000b854
   47280:	.word	0x0000b690
   47284:	.word	0x0000b528
   47288:	.word	0x0000b4d4
   4728c:	.word	0x0000abcc
   47290:	.word	0x0000a850
   47294:	.word	0x0000a86c
   47298:	.word	0x0000a6f0
   4729c:	mov	r8, #1
   472a0:	ldr	r3, [r9, #20]
   472a4:	mov	r2, r7
   472a8:	ldr	r1, [fp, #4]
   472ac:	mov	r0, r5
   472b0:	bl	eda4 <ReadInt16Data>
   472b4:	b	471a0 <Mat_VarRead5+0x1004>
   472b8:	mov	r8, #1
   472bc:	ldr	r3, [r9, #20]
   472c0:	mov	r2, r7
   472c4:	ldr	r1, [fp, #4]
   472c8:	mov	r0, r5
   472cc:	bl	108fc <ReadUInt16Data>
   472d0:	b	471a0 <Mat_VarRead5+0x1004>
   472d4:	mov	r8, #1
   472d8:	ldr	r3, [r9, #20]
   472dc:	mov	r2, r7
   472e0:	ldr	r1, [fp, #4]
   472e4:	mov	r0, r5
   472e8:	bl	12454 <ReadInt8Data>
   472ec:	b	471a0 <Mat_VarRead5+0x1004>
   472f0:	mov	r8, #1
   472f4:	ldr	r3, [r9, #20]
   472f8:	mov	r2, r7
   472fc:	ldr	r1, [fp, #4]
   47300:	mov	r0, r5
   47304:	bl	13e70 <ReadUInt8Data>
   47308:	b	471a0 <Mat_VarRead5+0x1004>
   4730c:	cmp	r3, #1
   47310:	bne	471d4 <Mat_VarRead5+0x1038>
   47314:	ldr	r3, [r4, #8]
   47318:	sub	r3, r3, #1
   4731c:	cmp	r3, #12
   47320:	addls	pc, pc, r3, lsl #2
   47324:	b	47380 <Mat_VarRead5+0x11e4>
   47328:	b	47534 <Mat_VarRead5+0x1398>
   4732c:	b	4755c <Mat_VarRead5+0x13c0>
   47330:	b	474e4 <Mat_VarRead5+0x1348>
   47334:	b	4750c <Mat_VarRead5+0x1370>
   47338:	b	47494 <Mat_VarRead5+0x12f8>
   4733c:	b	474bc <Mat_VarRead5+0x1320>
   47340:	b	4741c <Mat_VarRead5+0x1280>
   47344:	b	47380 <Mat_VarRead5+0x11e4>
   47348:	b	4735c <Mat_VarRead5+0x11c0>
   4734c:	b	47380 <Mat_VarRead5+0x11e4>
   47350:	b	47380 <Mat_VarRead5+0x11e4>
   47354:	b	47444 <Mat_VarRead5+0x12a8>
   47358:	b	4746c <Mat_VarRead5+0x12d0>
   4735c:	ldr	r1, [r4, #52]	; 0x34
   47360:	ldr	r3, [r9, #20]
   47364:	str	r3, [sp]
   47368:	ldr	r3, [sp, #8]
   4736c:	ldr	r2, [fp]
   47370:	ldr	r1, [r1, #12]
   47374:	mov	r0, r5
   47378:	bl	4ef4 <ReadCompressedDoubleData>
   4737c:	mov	r7, r0
   47380:	ldr	r3, [sp, #12]
   47384:	cmp	r3, #0
   47388:	addne	r7, r7, #4
   4738c:	tst	r7, #7
   47390:	bne	47584 <Mat_VarRead5+0x13e8>
   47394:	ldr	r3, [r4, #52]	; 0x34
   47398:	add	r2, sp, #20
   4739c:	ldr	r1, [r3, #12]
   473a0:	mov	r0, r5
   473a4:	bl	32c0 <InflateDataType>
   473a8:	cmp	sl, #0
   473ac:	bne	475ac <Mat_VarRead5+0x1410>
   473b0:	ldr	r0, [sp, #20]
   473b4:	uxtb	r7, r0
   473b8:	cmp	r7, #24
   473bc:	movhi	r7, #0
   473c0:	lsr	r3, r0, #16
   473c4:	lsl	r3, r3, #16
   473c8:	cmp	r3, #0
   473cc:	beq	475b8 <Mat_VarRead5+0x141c>
   473d0:	lsr	r0, r0, #16
   473d4:	ldr	r3, [r4, #8]
   473d8:	sub	r3, r3, #1
   473dc:	cmp	r3, #12
   473e0:	addls	pc, pc, r3, lsl #2
   473e4:	b	47654 <Mat_VarRead5+0x14b8>
   473e8:	b	477a0 <Mat_VarRead5+0x1604>
   473ec:	b	477c8 <Mat_VarRead5+0x162c>
   473f0:	b	47750 <Mat_VarRead5+0x15b4>
   473f4:	b	47778 <Mat_VarRead5+0x15dc>
   473f8:	b	47700 <Mat_VarRead5+0x1564>
   473fc:	b	47728 <Mat_VarRead5+0x158c>
   47400:	b	47688 <Mat_VarRead5+0x14ec>
   47404:	b	47654 <Mat_VarRead5+0x14b8>
   47408:	b	47628 <Mat_VarRead5+0x148c>
   4740c:	b	47654 <Mat_VarRead5+0x14b8>
   47410:	b	47654 <Mat_VarRead5+0x14b8>
   47414:	b	476b0 <Mat_VarRead5+0x1514>
   47418:	b	476d8 <Mat_VarRead5+0x153c>
   4741c:	ldr	r1, [r4, #52]	; 0x34
   47420:	ldr	r3, [r9, #20]
   47424:	str	r3, [sp]
   47428:	ldr	r3, [sp, #8]
   4742c:	ldr	r2, [fp]
   47430:	ldr	r1, [r1, #12]
   47434:	mov	r0, r5
   47438:	bl	7804 <ReadCompressedSingleData>
   4743c:	mov	r7, r0
   47440:	b	47380 <Mat_VarRead5+0x11e4>
   47444:	ldr	r1, [r4, #52]	; 0x34
   47448:	ldr	r3, [r9, #20]
   4744c:	str	r3, [sp]
   47450:	ldr	r3, [sp, #8]
   47454:	ldr	r2, [fp]
   47458:	ldr	r1, [r1, #12]
   4745c:	mov	r0, r5
   47460:	bl	9464 <ReadCompressedInt64Data>
   47464:	mov	r7, r0
   47468:	b	47380 <Mat_VarRead5+0x11e4>
   4746c:	ldr	r1, [r4, #52]	; 0x34
   47470:	ldr	r3, [r9, #20]
   47474:	str	r3, [sp]
   47478:	ldr	r3, [sp, #8]
   4747c:	ldr	r2, [fp]
   47480:	ldr	r1, [r1, #12]
   47484:	mov	r0, r5
   47488:	bl	b0fc <ReadCompressedUInt64Data>
   4748c:	mov	r7, r0
   47490:	b	47380 <Mat_VarRead5+0x11e4>
   47494:	ldr	r1, [r4, #52]	; 0x34
   47498:	ldr	r3, [r9, #20]
   4749c:	str	r3, [sp]
   474a0:	ldr	r3, [sp, #8]
   474a4:	ldr	r2, [fp]
   474a8:	ldr	r1, [r1, #12]
   474ac:	mov	r0, r5
   474b0:	bl	cc9c <ReadCompressedInt32Data>
   474b4:	mov	r7, r0
   474b8:	b	47380 <Mat_VarRead5+0x11e4>
   474bc:	ldr	r1, [r4, #52]	; 0x34
   474c0:	ldr	r3, [r9, #20]
   474c4:	str	r3, [sp]
   474c8:	ldr	r3, [sp, #8]
   474cc:	ldr	r2, [fp]
   474d0:	ldr	r1, [r1, #12]
   474d4:	mov	r0, r5
   474d8:	bl	e80c <ReadCompressedUInt32Data>
   474dc:	mov	r7, r0
   474e0:	b	47380 <Mat_VarRead5+0x11e4>
   474e4:	ldr	r1, [r4, #52]	; 0x34
   474e8:	ldr	r3, [r9, #20]
   474ec:	str	r3, [sp]
   474f0:	ldr	r3, [sp, #8]
   474f4:	ldr	r2, [fp]
   474f8:	ldr	r1, [r1, #12]
   474fc:	mov	r0, r5
   47500:	bl	1038c <ReadCompressedInt16Data>
   47504:	mov	r7, r0
   47508:	b	47380 <Mat_VarRead5+0x11e4>
   4750c:	ldr	r1, [r4, #52]	; 0x34
   47510:	ldr	r3, [r9, #20]
   47514:	str	r3, [sp]
   47518:	ldr	r3, [sp, #8]
   4751c:	ldr	r2, [fp]
   47520:	ldr	r1, [r1, #12]
   47524:	mov	r0, r5
   47528:	bl	11ee4 <ReadCompressedUInt16Data>
   4752c:	mov	r7, r0
   47530:	b	47380 <Mat_VarRead5+0x11e4>
   47534:	ldr	r1, [r4, #52]	; 0x34
   47538:	ldr	r3, [r9, #20]
   4753c:	str	r3, [sp]
   47540:	ldr	r3, [sp, #8]
   47544:	ldr	r2, [fp]
   47548:	ldr	r1, [r1, #12]
   4754c:	mov	r0, r5
   47550:	bl	13900 <ReadCompressedInt8Data>
   47554:	mov	r7, r0
   47558:	b	47380 <Mat_VarRead5+0x11e4>
   4755c:	ldr	r1, [r4, #52]	; 0x34
   47560:	ldr	r3, [r9, #20]
   47564:	str	r3, [sp]
   47568:	ldr	r3, [sp, #8]
   4756c:	ldr	r2, [fp]
   47570:	ldr	r1, [r1, #12]
   47574:	mov	r0, r5
   47578:	bl	1531c <ReadCompressedUInt8Data>
   4757c:	mov	r7, r0
   47580:	b	47380 <Mat_VarRead5+0x11e4>
   47584:	rsbs	r3, r7, #0
   47588:	and	r2, r7, #7
   4758c:	and	r3, r3, #7
   47590:	rsbpl	r2, r3, #0
   47594:	ldr	r3, [r4, #52]	; 0x34
   47598:	rsb	r2, r2, #8
   4759c:	ldr	r1, [r3, #12]
   475a0:	mov	r0, r5
   475a4:	bl	227c <InflateSkip>
   475a8:	b	47394 <Mat_VarRead5+0x11f8>
   475ac:	add	r0, sp, #20
   475b0:	bl	1a88 <Mat_uint32Swap>
   475b4:	b	473b0 <Mat_VarRead5+0x1214>
   475b8:	ldr	r3, [r4, #52]	; 0x34
   475bc:	add	r2, sp, #24
   475c0:	ldr	r1, [r3, #12]
   475c4:	mov	r0, r5
   475c8:	bl	32c0 <InflateDataType>
   475cc:	cmp	sl, #0
   475d0:	beq	475dc <Mat_VarRead5+0x1440>
   475d4:	add	r0, sp, #24
   475d8:	bl	1a88 <Mat_uint32Swap>
   475dc:	ldr	r0, [sp, #24]
   475e0:	ldr	r3, [r4, #8]
   475e4:	sub	r3, r3, #1
   475e8:	cmp	r3, #12
   475ec:	addls	pc, pc, r3, lsl #2
   475f0:	b	47658 <Mat_VarRead5+0x14bc>
   475f4:	b	477a4 <Mat_VarRead5+0x1608>
   475f8:	b	477cc <Mat_VarRead5+0x1630>
   475fc:	b	47754 <Mat_VarRead5+0x15b8>
   47600:	b	4777c <Mat_VarRead5+0x15e0>
   47604:	b	47704 <Mat_VarRead5+0x1568>
   47608:	b	4772c <Mat_VarRead5+0x1590>
   4760c:	b	4768c <Mat_VarRead5+0x14f0>
   47610:	b	47658 <Mat_VarRead5+0x14bc>
   47614:	b	4762c <Mat_VarRead5+0x1490>
   47618:	b	47658 <Mat_VarRead5+0x14bc>
   4761c:	b	47658 <Mat_VarRead5+0x14bc>
   47620:	b	476b4 <Mat_VarRead5+0x1518>
   47624:	b	476dc <Mat_VarRead5+0x1540>
   47628:	mov	r8, #1
   4762c:	ldr	r1, [r4, #52]	; 0x34
   47630:	ldr	r3, [r9, #20]
   47634:	str	r3, [sp]
   47638:	mov	r3, r7
   4763c:	ldr	r2, [fp, #4]
   47640:	ldr	r1, [r1, #12]
   47644:	mov	r0, r5
   47648:	bl	4ef4 <ReadCompressedDoubleData>
   4764c:	cmp	r8, #0
   47650:	beq	47658 <Mat_VarRead5+0x14bc>
   47654:	add	r0, r0, #4
   47658:	tst	r0, #7
   4765c:	beq	471d4 <Mat_VarRead5+0x1038>
   47660:	rsbs	r3, r0, #0
   47664:	and	r2, r0, #7
   47668:	and	r3, r3, #7
   4766c:	rsbpl	r2, r3, #0
   47670:	ldr	r3, [r4, #52]	; 0x34
   47674:	rsb	r2, r2, #8
   47678:	ldr	r1, [r3, #12]
   4767c:	mov	r0, r5
   47680:	bl	227c <InflateSkip>
   47684:	b	471d4 <Mat_VarRead5+0x1038>
   47688:	mov	r8, #1
   4768c:	ldr	r1, [r4, #52]	; 0x34
   47690:	ldr	r3, [r9, #20]
   47694:	str	r3, [sp]
   47698:	mov	r3, r7
   4769c:	ldr	r2, [fp, #4]
   476a0:	ldr	r1, [r1, #12]
   476a4:	mov	r0, r5
   476a8:	bl	7804 <ReadCompressedSingleData>
   476ac:	b	4764c <Mat_VarRead5+0x14b0>
   476b0:	mov	r8, #1
   476b4:	ldr	r1, [r4, #52]	; 0x34
   476b8:	ldr	r3, [r9, #20]
   476bc:	str	r3, [sp]
   476c0:	mov	r3, r7
   476c4:	ldr	r2, [fp, #4]
   476c8:	ldr	r1, [r1, #12]
   476cc:	mov	r0, r5
   476d0:	bl	9464 <ReadCompressedInt64Data>
   476d4:	b	4764c <Mat_VarRead5+0x14b0>
   476d8:	mov	r8, #1
   476dc:	ldr	r1, [r4, #52]	; 0x34
   476e0:	ldr	r3, [r9, #20]
   476e4:	str	r3, [sp]
   476e8:	mov	r3, r7
   476ec:	ldr	r2, [fp, #4]
   476f0:	ldr	r1, [r1, #12]
   476f4:	mov	r0, r5
   476f8:	bl	b0fc <ReadCompressedUInt64Data>
   476fc:	b	4764c <Mat_VarRead5+0x14b0>
   47700:	mov	r8, #1
   47704:	ldr	r1, [r4, #52]	; 0x34
   47708:	ldr	r3, [r9, #20]
   4770c:	str	r3, [sp]
   47710:	mov	r3, r7
   47714:	ldr	r2, [fp, #4]
   47718:	ldr	r1, [r1, #12]
   4771c:	mov	r0, r5
   47720:	bl	cc9c <ReadCompressedInt32Data>
   47724:	b	4764c <Mat_VarRead5+0x14b0>
   47728:	mov	r8, #1
   4772c:	ldr	r1, [r4, #52]	; 0x34
   47730:	ldr	r3, [r9, #20]
   47734:	str	r3, [sp]
   47738:	mov	r3, r7
   4773c:	ldr	r2, [fp, #4]
   47740:	ldr	r1, [r1, #12]
   47744:	mov	r0, r5
   47748:	bl	e80c <ReadCompressedUInt32Data>
   4774c:	b	4764c <Mat_VarRead5+0x14b0>
   47750:	mov	r8, #1
   47754:	ldr	r1, [r4, #52]	; 0x34
   47758:	ldr	r3, [r9, #20]
   4775c:	str	r3, [sp]
   47760:	mov	r3, r7
   47764:	ldr	r2, [fp, #4]
   47768:	ldr	r1, [r1, #12]
   4776c:	mov	r0, r5
   47770:	bl	1038c <ReadCompressedInt16Data>
   47774:	b	4764c <Mat_VarRead5+0x14b0>
   47778:	mov	r8, #1
   4777c:	ldr	r1, [r4, #52]	; 0x34
   47780:	ldr	r3, [r9, #20]
   47784:	str	r3, [sp]
   47788:	mov	r3, r7
   4778c:	ldr	r2, [fp, #4]
   47790:	ldr	r1, [r1, #12]
   47794:	mov	r0, r5
   47798:	bl	11ee4 <ReadCompressedUInt16Data>
   4779c:	b	4764c <Mat_VarRead5+0x14b0>
   477a0:	mov	r8, #1
   477a4:	ldr	r1, [r4, #52]	; 0x34
   477a8:	ldr	r3, [r9, #20]
   477ac:	str	r3, [sp]
   477b0:	mov	r3, r7
   477b4:	ldr	r2, [fp, #4]
   477b8:	ldr	r1, [r1, #12]
   477bc:	mov	r0, r5
   477c0:	bl	13900 <ReadCompressedInt8Data>
   477c4:	b	4764c <Mat_VarRead5+0x14b0>
   477c8:	mov	r8, #1
   477cc:	ldr	r1, [r4, #52]	; 0x34
   477d0:	ldr	r3, [r9, #20]
   477d4:	str	r3, [sp]
   477d8:	mov	r3, r7
   477dc:	ldr	r2, [fp, #4]
   477e0:	ldr	r1, [r1, #12]
   477e4:	mov	r0, r5
   477e8:	bl	1531c <ReadCompressedUInt8Data>
   477ec:	b	4764c <Mat_VarRead5+0x14b0>
   477f0:	ldr	r0, [r4, #8]
   477f4:	bl	1600 <Mat_SizeOf@plt>
   477f8:	mul	r0, r0, fp
   477fc:	bl	15ac <malloc@plt>
   47800:	mov	r1, r0
   47804:	str	r0, [r9, #24]
   47808:	cmp	r0, #0
   4780c:	beq	47864 <Mat_VarRead5+0x16c8>
   47810:	ldr	r3, [r4, #48]	; 0x30
   47814:	cmp	r3, #0
   47818:	bne	47998 <Mat_VarRead5+0x17fc>
   4781c:	ldr	r3, [r4, #8]
   47820:	sub	r3, r3, #1
   47824:	cmp	r3, #12
   47828:	addls	pc, pc, r3, lsl #2
   4782c:	b	47888 <Mat_VarRead5+0x16ec>
   47830:	b	47968 <Mat_VarRead5+0x17cc>
   47834:	b	47980 <Mat_VarRead5+0x17e4>
   47838:	b	47938 <Mat_VarRead5+0x179c>
   4783c:	b	47950 <Mat_VarRead5+0x17b4>
   47840:	b	47908 <Mat_VarRead5+0x176c>
   47844:	b	47920 <Mat_VarRead5+0x1784>
   47848:	b	478c0 <Mat_VarRead5+0x1724>
   4784c:	b	47888 <Mat_VarRead5+0x16ec>
   47850:	b	47874 <Mat_VarRead5+0x16d8>
   47854:	b	47888 <Mat_VarRead5+0x16ec>
   47858:	b	47888 <Mat_VarRead5+0x16ec>
   4785c:	b	478d8 <Mat_VarRead5+0x173c>
   47860:	b	478f0 <Mat_VarRead5+0x1754>
   47864:	ldr	r0, [pc, #-1504]	; 4728c <Mat_VarRead5+0x10f0>
   47868:	add	r0, pc, r0
   4786c:	bl	1690 <Mat_Critical@plt>
   47870:	b	462e4 <Mat_VarRead5+0x148>
   47874:	ldr	r3, [r9, #20]
   47878:	ldr	r2, [sp, #8]
   4787c:	mov	r0, r5
   47880:	bl	3aa0 <ReadDoubleData>
   47884:	mov	r7, r0
   47888:	ldr	r3, [sp, #12]
   4788c:	cmp	r3, #0
   47890:	addne	r7, r7, #4
   47894:	tst	r7, #7
   47898:	beq	462e4 <Mat_VarRead5+0x148>
   4789c:	rsbs	r3, r7, #0
   478a0:	and	r1, r7, #7
   478a4:	and	r3, r3, #7
   478a8:	rsbpl	r1, r3, #0
   478ac:	mov	r2, #1
   478b0:	rsb	r1, r1, #8
   478b4:	ldr	r0, [r5]
   478b8:	bl	1714 <fseek@plt>
   478bc:	b	462e4 <Mat_VarRead5+0x148>
   478c0:	ldr	r3, [r9, #20]
   478c4:	ldr	r2, [sp, #8]
   478c8:	mov	r0, r5
   478cc:	bl	61cc <ReadSingleData>
   478d0:	mov	r7, r0
   478d4:	b	47888 <Mat_VarRead5+0x16ec>
   478d8:	ldr	r3, [r9, #20]
   478dc:	ldr	r2, [sp, #8]
   478e0:	mov	r0, r5
   478e4:	bl	7d94 <ReadInt64Data>
   478e8:	mov	r7, r0
   478ec:	b	47888 <Mat_VarRead5+0x16ec>
   478f0:	ldr	r3, [r9, #20]
   478f4:	ldr	r2, [sp, #8]
   478f8:	mov	r0, r5
   478fc:	bl	9a2c <ReadUInt64Data>
   47900:	mov	r7, r0
   47904:	b	47888 <Mat_VarRead5+0x16ec>
   47908:	ldr	r3, [r9, #20]
   4790c:	ldr	r2, [sp, #8]
   47910:	mov	r0, r5
   47914:	bl	b6c4 <ReadInt32Data>
   47918:	mov	r7, r0
   4791c:	b	47888 <Mat_VarRead5+0x16ec>
   47920:	ldr	r3, [r9, #20]
   47924:	ldr	r2, [sp, #8]
   47928:	mov	r0, r5
   4792c:	bl	d234 <ReadUInt32Data>
   47930:	mov	r7, r0
   47934:	b	47888 <Mat_VarRead5+0x16ec>
   47938:	ldr	r3, [r9, #20]
   4793c:	ldr	r2, [sp, #8]
   47940:	mov	r0, r5
   47944:	bl	eda4 <ReadInt16Data>
   47948:	mov	r7, r0
   4794c:	b	47888 <Mat_VarRead5+0x16ec>
   47950:	ldr	r3, [r9, #20]
   47954:	ldr	r2, [sp, #8]
   47958:	mov	r0, r5
   4795c:	bl	108fc <ReadUInt16Data>
   47960:	mov	r7, r0
   47964:	b	47888 <Mat_VarRead5+0x16ec>
   47968:	ldr	r3, [r9, #20]
   4796c:	ldr	r2, [sp, #8]
   47970:	mov	r0, r5
   47974:	bl	12454 <ReadInt8Data>
   47978:	mov	r7, r0
   4797c:	b	47888 <Mat_VarRead5+0x16ec>
   47980:	ldr	r3, [r9, #20]
   47984:	ldr	r2, [sp, #8]
   47988:	mov	r0, r5
   4798c:	bl	13e70 <ReadUInt8Data>
   47990:	mov	r7, r0
   47994:	b	47888 <Mat_VarRead5+0x16ec>
   47998:	cmp	r3, #1
   4799c:	bne	462e4 <Mat_VarRead5+0x148>
   479a0:	ldr	r3, [r4, #8]
   479a4:	sub	r3, r3, #1
   479a8:	cmp	r3, #12
   479ac:	addls	pc, pc, r3, lsl #2
   479b0:	b	47a0c <Mat_VarRead5+0x1870>
   479b4:	b	47b60 <Mat_VarRead5+0x19c4>
   479b8:	b	47b88 <Mat_VarRead5+0x19ec>
   479bc:	b	47b10 <Mat_VarRead5+0x1974>
   479c0:	b	47b38 <Mat_VarRead5+0x199c>
   479c4:	b	47ac0 <Mat_VarRead5+0x1924>
   479c8:	b	47ae8 <Mat_VarRead5+0x194c>
   479cc:	b	47a48 <Mat_VarRead5+0x18ac>
   479d0:	b	47a0c <Mat_VarRead5+0x1870>
   479d4:	b	479e8 <Mat_VarRead5+0x184c>
   479d8:	b	47a0c <Mat_VarRead5+0x1870>
   479dc:	b	47a0c <Mat_VarRead5+0x1870>
   479e0:	b	47a70 <Mat_VarRead5+0x18d4>
   479e4:	b	47a98 <Mat_VarRead5+0x18fc>
   479e8:	ldr	r0, [r4, #52]	; 0x34
   479ec:	ldr	r3, [r9, #20]
   479f0:	str	r3, [sp]
   479f4:	ldr	r3, [sp, #8]
   479f8:	mov	r2, r1
   479fc:	ldr	r1, [r0, #12]
   47a00:	mov	r0, r5
   47a04:	bl	4ef4 <ReadCompressedDoubleData>
   47a08:	mov	r7, r0
   47a0c:	ldr	r3, [sp, #12]
   47a10:	cmp	r3, #0
   47a14:	addne	r7, r7, #4
   47a18:	tst	r7, #7
   47a1c:	beq	462e4 <Mat_VarRead5+0x148>
   47a20:	rsbs	r3, r7, #0
   47a24:	and	r2, r7, #7
   47a28:	and	r3, r3, #7
   47a2c:	rsbpl	r2, r3, #0
   47a30:	ldr	r3, [r4, #52]	; 0x34
   47a34:	rsb	r2, r2, #8
   47a38:	ldr	r1, [r3, #12]
   47a3c:	mov	r0, r5
   47a40:	bl	227c <InflateSkip>
   47a44:	b	462e4 <Mat_VarRead5+0x148>
   47a48:	ldr	r0, [r4, #52]	; 0x34
   47a4c:	ldr	r3, [r9, #20]
   47a50:	str	r3, [sp]
   47a54:	ldr	r3, [sp, #8]
   47a58:	mov	r2, r1
   47a5c:	ldr	r1, [r0, #12]
   47a60:	mov	r0, r5
   47a64:	bl	7804 <ReadCompressedSingleData>
   47a68:	mov	r7, r0
   47a6c:	b	47a0c <Mat_VarRead5+0x1870>
   47a70:	ldr	r0, [r4, #52]	; 0x34
   47a74:	ldr	r3, [r9, #20]
   47a78:	str	r3, [sp]
   47a7c:	ldr	r3, [sp, #8]
   47a80:	mov	r2, r1
   47a84:	ldr	r1, [r0, #12]
   47a88:	mov	r0, r5
   47a8c:	bl	9464 <ReadCompressedInt64Data>
   47a90:	mov	r7, r0
   47a94:	b	47a0c <Mat_VarRead5+0x1870>
   47a98:	ldr	r0, [r4, #52]	; 0x34
   47a9c:	ldr	r3, [r9, #20]
   47aa0:	str	r3, [sp]
   47aa4:	ldr	r3, [sp, #8]
   47aa8:	mov	r2, r1
   47aac:	ldr	r1, [r0, #12]
   47ab0:	mov	r0, r5
   47ab4:	bl	b0fc <ReadCompressedUInt64Data>
   47ab8:	mov	r7, r0
   47abc:	b	47a0c <Mat_VarRead5+0x1870>
   47ac0:	ldr	r0, [r4, #52]	; 0x34
   47ac4:	ldr	r3, [r9, #20]
   47ac8:	str	r3, [sp]
   47acc:	ldr	r3, [sp, #8]
   47ad0:	mov	r2, r1
   47ad4:	ldr	r1, [r0, #12]
   47ad8:	mov	r0, r5
   47adc:	bl	cc9c <ReadCompressedInt32Data>
   47ae0:	mov	r7, r0
   47ae4:	b	47a0c <Mat_VarRead5+0x1870>
   47ae8:	ldr	r0, [r4, #52]	; 0x34
   47aec:	ldr	r3, [r9, #20]
   47af0:	str	r3, [sp]
   47af4:	ldr	r3, [sp, #8]
   47af8:	mov	r2, r1
   47afc:	ldr	r1, [r0, #12]
   47b00:	mov	r0, r5
   47b04:	bl	e80c <ReadCompressedUInt32Data>
   47b08:	mov	r7, r0
   47b0c:	b	47a0c <Mat_VarRead5+0x1870>
   47b10:	ldr	r0, [r4, #52]	; 0x34
   47b14:	ldr	r3, [r9, #20]
   47b18:	str	r3, [sp]
   47b1c:	ldr	r3, [sp, #8]
   47b20:	mov	r2, r1
   47b24:	ldr	r1, [r0, #12]
   47b28:	mov	r0, r5
   47b2c:	bl	1038c <ReadCompressedInt16Data>
   47b30:	mov	r7, r0
   47b34:	b	47a0c <Mat_VarRead5+0x1870>
   47b38:	ldr	r0, [r4, #52]	; 0x34
   47b3c:	ldr	r3, [r9, #20]
   47b40:	str	r3, [sp]
   47b44:	ldr	r3, [sp, #8]
   47b48:	mov	r2, r1
   47b4c:	ldr	r1, [r0, #12]
   47b50:	mov	r0, r5
   47b54:	bl	11ee4 <ReadCompressedUInt16Data>
   47b58:	mov	r7, r0
   47b5c:	b	47a0c <Mat_VarRead5+0x1870>
   47b60:	ldr	r0, [r4, #52]	; 0x34
   47b64:	ldr	r3, [r9, #20]
   47b68:	str	r3, [sp]
   47b6c:	ldr	r3, [sp, #8]
   47b70:	mov	r2, r1
   47b74:	ldr	r1, [r0, #12]
   47b78:	mov	r0, r5
   47b7c:	bl	13900 <ReadCompressedInt8Data>
   47b80:	mov	r7, r0
   47b84:	b	47a0c <Mat_VarRead5+0x1870>
   47b88:	ldr	r0, [r4, #52]	; 0x34
   47b8c:	ldr	r3, [r9, #20]
   47b90:	str	r3, [sp]
   47b94:	ldr	r3, [sp, #8]
   47b98:	mov	r2, r1
   47b9c:	ldr	r1, [r0, #12]
   47ba0:	mov	r0, r5
   47ba4:	bl	1531c <ReadCompressedUInt8Data>
   47ba8:	mov	r7, r0
   47bac:	b	47a0c <Mat_VarRead5+0x1870>
   47bb0:	ldr	r0, [r4]
   47bb4:	cmp	r0, #0
   47bb8:	beq	46588 <Mat_VarRead5+0x3ec>
   47bbc:	ldr	r1, [r4, #12]
   47bc0:	cmp	r1, #0
   47bc4:	beq	46588 <Mat_VarRead5+0x3ec>
   47bc8:	bl	513bc <__udivsi3>
   47bcc:	mov	r9, r0
   47bd0:	ldr	r8, [r4, #40]	; 0x28
   47bd4:	cmp	r8, #0
   47bd8:	beq	47c04 <Mat_VarRead5+0x1a68>
   47bdc:	cmp	r0, #0
   47be0:	beq	47c04 <Mat_VarRead5+0x1a68>
   47be4:	sub	r8, r8, #4
   47be8:	mov	r7, #0
   47bec:	ldr	r1, [r8, #4]!
   47bf0:	mov	r0, r5
   47bf4:	bl	4619c <Mat_VarRead5>
   47bf8:	add	r7, r7, #1
   47bfc:	cmp	r9, r7
   47c00:	bne	47bec <Mat_VarRead5+0x1a50>
   47c04:	mov	r3, #24
   47c08:	str	r3, [r4, #8]
   47c0c:	b	462e4 <Mat_VarRead5+0x148>
   47c10:	ldr	r0, [pc, #-2440]	; 47290 <Mat_VarRead5+0x10f4>
   47c14:	add	r0, pc, r0
   47c18:	bl	1690 <Mat_Critical@plt>
   47c1c:	b	462e4 <Mat_VarRead5+0x148>
   47c20:	ldr	r0, [pc, #-2452]	; 47294 <Mat_VarRead5+0x10f8>
   47c24:	add	r0, pc, r0
   47c28:	bl	1690 <Mat_Critical@plt>
   47c2c:	b	46588 <Mat_VarRead5+0x3ec>
   47c30:	ldr	r0, [pc, #-2464]	; 47298 <Mat_VarRead5+0x10fc>
   47c34:	add	r0, pc, r0
   47c38:	bl	1690 <Mat_Critical@plt>
   47c3c:	b	46588 <Mat_VarRead5+0x3ec>

00047c40 <ReadNextStructField>:
   47c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47c44:	sub	sp, sp, #132	; 0x84
   47c48:	mov	fp, r0
   47c4c:	mov	sl, r1
   47c50:	add	r1, sp, #128	; 0x80
   47c54:	mov	r3, #1
   47c58:	str	r3, [r1, #-4]!
   47c5c:	mov	r0, sl
   47c60:	bl	4d06c <SafeMulDims>
   47c64:	cmp	r0, #0
   47c68:	bne	47cc0 <ReadNextStructField+0x80>
   47c6c:	ldr	r3, [sl, #48]	; 0x30
   47c70:	cmp	r3, #1
   47c74:	beq	47cd4 <ReadNextStructField+0x94>
   47c78:	ldr	r3, [fp]
   47c7c:	mov	r2, #2
   47c80:	mov	r1, #4
   47c84:	add	r0, sp, #56	; 0x38
   47c88:	bl	1588 <fread@plt>
   47c8c:	mov	r5, r0
   47c90:	ldr	r3, [fp, #20]
   47c94:	cmp	r3, #0
   47c98:	bne	48504 <ReadNextStructField+0x8c4>
   47c9c:	ldrh	r3, [sp, #56]	; 0x38
   47ca0:	cmp	r3, #5
   47ca4:	beq	48518 <ReadNextStructField+0x8d8>
   47ca8:	ldr	r0, [pc, #3416]	; 48a08 <ReadNextStructField+0xdc8>
   47cac:	add	r0, pc, r0
   47cb0:	bl	1690 <Mat_Critical@plt>
   47cb4:	mov	r0, r5
   47cb8:	add	sp, sp, #132	; 0x84
   47cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47cc0:	ldr	r0, [pc, #3396]	; 48a0c <ReadNextStructField+0xdcc>
   47cc4:	add	r0, pc, r0
   47cc8:	bl	1690 <Mat_Critical@plt>
   47ccc:	mov	r5, #0
   47cd0:	b	47cb4 <ReadNextStructField+0x74>
   47cd4:	mov	r2, #64	; 0x40
   47cd8:	mov	r1, #0
   47cdc:	add	r4, sp, #56	; 0x38
   47ce0:	mov	r0, r4
   47ce4:	bl	166c <memset@plt>
   47ce8:	mov	r2, r4
   47cec:	mov	r1, sl
   47cf0:	mov	r0, fp
   47cf4:	bl	35cc <InflateFieldNameLength>
   47cf8:	mov	r5, r0
   47cfc:	ldr	r3, [fp, #20]
   47d00:	cmp	r3, #0
   47d04:	bne	47d24 <ReadNextStructField+0xe4>
   47d08:	ldrh	r3, [sp, #56]	; 0x38
   47d0c:	cmp	r3, #5
   47d10:	beq	47d38 <ReadNextStructField+0xf8>
   47d14:	ldr	r0, [pc, #3316]	; 48a10 <ReadNextStructField+0xdd0>
   47d18:	add	r0, pc, r0
   47d1c:	bl	1690 <Mat_Critical@plt>
   47d20:	b	47cb4 <ReadNextStructField+0x74>
   47d24:	add	r0, sp, #56	; 0x38
   47d28:	bl	1a88 <Mat_uint32Swap>
   47d2c:	add	r0, sp, #60	; 0x3c
   47d30:	bl	1a88 <Mat_uint32Swap>
   47d34:	b	47d08 <ReadNextStructField+0xc8>
   47d38:	ldr	r7, [sp, #60]	; 0x3c
   47d3c:	add	r2, sp, #56	; 0x38
   47d40:	mov	r1, sl
   47d44:	mov	r0, fp
   47d48:	bl	3764 <InflateFieldNamesTag>
   47d4c:	add	r5, r5, r0
   47d50:	ldr	r3, [fp, #20]
   47d54:	cmp	r3, #0
   47d58:	bne	47dc4 <ReadNextStructField+0x184>
   47d5c:	mov	r1, r7
   47d60:	ldr	r0, [sp, #60]	; 0x3c
   47d64:	bl	513bc <__udivsi3>
   47d68:	mov	r6, r0
   47d6c:	mov	r3, #4
   47d70:	str	r3, [sl, #12]
   47d74:	mul	r0, r0, r7
   47d78:	ands	r4, r0, #7
   47d7c:	rsbne	r4, r4, #8
   47d80:	cmp	r6, #0
   47d84:	bne	47dd8 <ReadNextStructField+0x198>
   47d88:	ldr	r2, [sl, #52]	; 0x34
   47d8c:	mov	r3, #0
   47d90:	str	r3, [r2, #4]
   47d94:	ldr	r2, [sl, #52]	; 0x34
   47d98:	str	r3, [r2, #8]
   47d9c:	mov	r2, r6
   47da0:	ldr	r1, [sp, #124]	; 0x7c
   47da4:	add	r0, sp, #120	; 0x78
   47da8:	bl	4d0c8 <SafeMul>
   47dac:	cmp	r0, #0
   47db0:	beq	47eb0 <ReadNextStructField+0x270>
   47db4:	ldr	r0, [pc, #3160]	; 48a14 <ReadNextStructField+0xdd4>
   47db8:	add	r0, pc, r0
   47dbc:	bl	1690 <Mat_Critical@plt>
   47dc0:	b	47cb4 <ReadNextStructField+0x74>
   47dc4:	add	r0, sp, #56	; 0x38
   47dc8:	bl	1a88 <Mat_uint32Swap>
   47dcc:	add	r0, sp, #60	; 0x3c
   47dd0:	bl	1a88 <Mat_uint32Swap>
   47dd4:	b	47d5c <ReadNextStructField+0x11c>
   47dd8:	add	r0, r4, r0
   47ddc:	bl	15ac <malloc@plt>
   47de0:	subs	r3, r0, #0
   47de4:	mov	r8, r3
   47de8:	str	r3, [sp, #12]
   47dec:	beq	47d9c <ReadNextStructField+0x15c>
   47df0:	str	r4, [sp, #4]
   47df4:	str	r7, [sp]
   47df8:	mov	r3, r6
   47dfc:	mov	r2, r8
   47e00:	mov	r1, sl
   47e04:	mov	r0, fp
   47e08:	bl	38fc <InflateFieldNames>
   47e0c:	add	r5, r5, r0
   47e10:	ldr	r3, [sl, #52]	; 0x34
   47e14:	str	r6, [r3, #4]
   47e18:	ldr	r4, [sl, #52]	; 0x34
   47e1c:	mov	r1, #4
   47e20:	mov	r0, r6
   47e24:	bl	1468 <calloc@plt>
   47e28:	str	r0, [r4, #8]
   47e2c:	ldr	r3, [sl, #52]	; 0x34
   47e30:	ldr	r3, [r3, #8]
   47e34:	cmp	r3, #0
   47e38:	beq	47ea4 <ReadNextStructField+0x264>
   47e3c:	mov	r4, #0
   47e40:	b	47e78 <ReadNextStructField+0x238>
   47e44:	mov	r2, r7
   47e48:	mov	r1, r8
   47e4c:	bl	14f8 <memcpy@plt>
   47e50:	ldr	r3, [sl, #52]	; 0x34
   47e54:	ldr	r3, [r3, #8]
   47e58:	ldr	r3, [r3, r4, lsl #2]
   47e5c:	add	r3, r3, r7
   47e60:	mov	r2, #0
   47e64:	strb	r2, [r3, #-1]
   47e68:	add	r4, r4, #1
   47e6c:	add	r8, r8, r7
   47e70:	cmp	r6, r4
   47e74:	beq	47ea4 <ReadNextStructField+0x264>
   47e78:	ldr	r3, [sl, #52]	; 0x34
   47e7c:	ldr	r9, [r3, #8]
   47e80:	mov	r0, r7
   47e84:	bl	15ac <malloc@plt>
   47e88:	str	r0, [r9, r4, lsl #2]
   47e8c:	ldr	r3, [sl, #52]	; 0x34
   47e90:	ldr	r3, [r3, #8]
   47e94:	ldr	r0, [r3, r4, lsl #2]
   47e98:	cmp	r0, #0
   47e9c:	bne	47e44 <ReadNextStructField+0x204>
   47ea0:	b	47e68 <ReadNextStructField+0x228>
   47ea4:	ldr	r0, [sp, #12]
   47ea8:	bl	14e0 <free@plt>
   47eac:	b	47d9c <ReadNextStructField+0x15c>
   47eb0:	ldr	r2, [sl, #12]
   47eb4:	ldr	r1, [sp, #120]	; 0x78
   47eb8:	mov	r0, sl
   47ebc:	bl	4d0c8 <SafeMul>
   47ec0:	subs	r3, r0, #0
   47ec4:	str	r3, [sp, #20]
   47ec8:	bne	47f18 <ReadNextStructField+0x2d8>
   47ecc:	ldr	r3, [sl]
   47ed0:	cmp	r3, #0
   47ed4:	beq	47cb4 <ReadNextStructField+0x74>
   47ed8:	ldr	r1, [sl, #12]
   47edc:	ldr	r0, [sp, #120]	; 0x78
   47ee0:	bl	1468 <calloc@plt>
   47ee4:	str	r0, [sp, #12]
   47ee8:	mov	r8, r0
   47eec:	str	r0, [sl, #40]	; 0x28
   47ef0:	cmp	r0, #0
   47ef4:	beq	47f28 <ReadNextStructField+0x2e8>
   47ef8:	ldr	r3, [sp, #124]	; 0x7c
   47efc:	cmp	r3, #0
   47f00:	beq	48008 <ReadNextStructField+0x3c8>
   47f04:	lsl	r3, r6, #2
   47f08:	mov	r7, #0
   47f0c:	mov	r9, r3
   47f10:	str	r5, [sp, #16]
   47f14:	b	47f60 <ReadNextStructField+0x320>
   47f18:	ldr	r0, [pc, #2808]	; 48a18 <ReadNextStructField+0xdd8>
   47f1c:	add	r0, pc, r0
   47f20:	bl	1690 <Mat_Critical@plt>
   47f24:	b	47cb4 <ReadNextStructField+0x74>
   47f28:	ldr	r0, [pc, #2796]	; 48a1c <ReadNextStructField+0xddc>
   47f2c:	add	r0, pc, r0
   47f30:	bl	1690 <Mat_Critical@plt>
   47f34:	b	47cb4 <ReadNextStructField+0x74>
   47f38:	bl	1570 <Mat_VarCalloc@plt>
   47f3c:	str	r0, [r5], #4
   47f40:	add	r4, r4, #1
   47f44:	cmp	r6, r4
   47f48:	bne	47f38 <ReadNextStructField+0x2f8>
   47f4c:	add	r7, r7, #1
   47f50:	ldr	r3, [sp, #124]	; 0x7c
   47f54:	add	r8, r8, r9
   47f58:	cmp	r3, r7
   47f5c:	bls	47f74 <ReadNextStructField+0x334>
   47f60:	cmp	r6, #0
   47f64:	movne	r5, r8
   47f68:	movne	r4, #0
   47f6c:	bne	47f38 <ReadNextStructField+0x2f8>
   47f70:	b	47f4c <ReadNextStructField+0x30c>
   47f74:	mov	r9, r3
   47f78:	ldr	r5, [sp, #16]
   47f7c:	ldr	r3, [sl, #52]	; 0x34
   47f80:	ldr	r3, [r3, #8]
   47f84:	cmp	r3, #0
   47f88:	beq	48008 <ReadNextStructField+0x3c8>
   47f8c:	cmp	r9, #0
   47f90:	beq	48008 <ReadNextStructField+0x3c8>
   47f94:	lsl	r3, r6, #2
   47f98:	ldr	r8, [sp, #12]
   47f9c:	mov	r2, #0
   47fa0:	mov	r7, r2
   47fa4:	str	fp, [sp, #24]
   47fa8:	mov	fp, r3
   47fac:	b	47ff0 <ReadNextStructField+0x3b0>
   47fb0:	add	r4, r4, #1
   47fb4:	cmp	r6, r4
   47fb8:	beq	47fe0 <ReadNextStructField+0x3a0>
   47fbc:	ldr	r3, [sl, #52]	; 0x34
   47fc0:	ldr	r3, [r3, #8]
   47fc4:	ldr	r0, [r3, r4, lsl #2]
   47fc8:	cmp	r0, #0
   47fcc:	beq	47fb0 <ReadNextStructField+0x370>
   47fd0:	ldr	r5, [r8, r4, lsl #2]
   47fd4:	bl	1534 <strdup@plt>
   47fd8:	str	r0, [r5, #36]	; 0x24
   47fdc:	b	47fb0 <ReadNextStructField+0x370>
   47fe0:	add	r7, r7, #1
   47fe4:	add	r8, r8, fp
   47fe8:	cmp	r9, r7
   47fec:	beq	48000 <ReadNextStructField+0x3c0>
   47ff0:	cmp	r6, #0
   47ff4:	movne	r4, #0
   47ff8:	bne	47fbc <ReadNextStructField+0x37c>
   47ffc:	b	47fe0 <ReadNextStructField+0x3a0>
   48000:	ldr	r5, [sp, #16]
   48004:	ldr	fp, [sp, #24]
   48008:	ldr	r3, [sp, #120]	; 0x78
   4800c:	cmp	r3, #0
   48010:	beq	47cb4 <ReadNextStructField+0x74>
   48014:	ldr	r9, [sp, #12]
   48018:	mov	r8, #0
   4801c:	add	r3, sp, #56	; 0x38
   48020:	str	r3, [sp, #12]
   48024:	ldr	r3, [pc, #2548]	; 48a20 <ReadNextStructField+0xde0>
   48028:	add	r3, pc, r3
   4802c:	str	r3, [sp, #36]	; 0x24
   48030:	ldr	r3, [pc, #2540]	; 48a24 <ReadNextStructField+0xde4>
   48034:	add	r3, pc, r3
   48038:	str	r3, [sp, #32]
   4803c:	ldr	r3, [pc, #2532]	; 48a28 <ReadNextStructField+0xde8>
   48040:	add	r3, pc, r3
   48044:	str	r3, [sp, #40]	; 0x28
   48048:	ldr	r3, [pc, #2524]	; 48a2c <ReadNextStructField+0xdec>
   4804c:	add	r3, pc, r3
   48050:	str	r3, [sp, #28]
   48054:	ldr	r3, [pc, #2516]	; 48a30 <ReadNextStructField+0xdf0>
   48058:	add	r3, pc, r3
   4805c:	str	r3, [sp, #16]
   48060:	mov	r7, r5
   48064:	b	480b4 <ReadNextStructField+0x474>
   48068:	ldr	r0, [sp, #12]
   4806c:	bl	1a88 <Mat_uint32Swap>
   48070:	add	r0, sp, #60	; 0x3c
   48074:	bl	1a88 <Mat_uint32Swap>
   48078:	b	480d4 <ReadNextStructField+0x494>
   4807c:	ldr	r6, [sp, #60]	; 0x3c
   48080:	cmp	r6, #0
   48084:	bne	48100 <ReadNextStructField+0x4c0>
   48088:	ldr	r3, [r9]
   4808c:	ldr	r0, [r3, #52]	; 0x34
   48090:	bl	14e0 <free@plt>
   48094:	ldr	r3, [r9]
   48098:	mov	r2, #0
   4809c:	str	r2, [r3, #52]	; 0x34
   480a0:	add	r8, r8, #1
   480a4:	add	r9, r9, #4
   480a8:	ldr	r3, [sp, #120]	; 0x78
   480ac:	cmp	r3, r8
   480b0:	bls	484fc <ReadNextStructField+0x8bc>
   480b4:	ldr	r2, [sp, #12]
   480b8:	mov	r1, sl
   480bc:	mov	r0, fp
   480c0:	bl	2704 <InflateVarTag>
   480c4:	add	r7, r7, r0
   480c8:	ldr	r3, [fp, #20]
   480cc:	cmp	r3, #0
   480d0:	bne	48068 <ReadNextStructField+0x428>
   480d4:	ldr	r3, [sp, #56]	; 0x38
   480d8:	cmp	r3, #14
   480dc:	beq	4807c <ReadNextStructField+0x43c>
   480e0:	ldr	r0, [r9]
   480e4:	bl	15f4 <Mat_VarFree@plt>
   480e8:	mov	r3, #0
   480ec:	str	r3, [r9]
   480f0:	mov	r1, r8
   480f4:	ldr	r0, [sp, #16]
   480f8:	bl	1690 <Mat_Critical@plt>
   480fc:	b	480a0 <ReadNextStructField+0x460>
   48100:	mov	r4, r9
   48104:	ldr	r3, [r9]
   48108:	mov	r2, #1
   4810c:	str	r2, [r3, #48]	; 0x30
   48110:	ldr	r2, [sp, #12]
   48114:	mov	r1, sl
   48118:	mov	r0, fp
   4811c:	bl	289c <InflateArrayFlags>
   48120:	add	r7, r7, r0
   48124:	sub	r5, r6, #16
   48128:	ldr	r3, [fp, #20]
   4812c:	cmp	r3, #0
   48130:	bne	482e8 <ReadNextStructField+0x6a8>
   48134:	ldr	r1, [sp, #56]	; 0x38
   48138:	cmp	r1, #6
   4813c:	beq	4830c <ReadNextStructField+0x6cc>
   48140:	ldr	r0, [sp, #28]
   48144:	bl	1690 <Mat_Critical@plt>
   48148:	ldr	r3, [sl, #52]	; 0x34
   4814c:	mov	r2, r5
   48150:	ldr	r1, [r3, #12]
   48154:	mov	r0, fp
   48158:	bl	227c <InflateSkip>
   4815c:	add	r7, r7, r0
   48160:	ldr	r3, [r4]
   48164:	ldr	r3, [r3, #16]
   48168:	cmp	r3, #17
   4816c:	beq	484d4 <ReadNextStructField+0x894>
   48170:	add	r3, sp, #128	; 0x80
   48174:	mov	r2, #0
   48178:	str	r2, [r3, #-76]!	; 0xffffffb4
   4817c:	str	r3, [sp]
   48180:	mov	r3, #64	; 0x40
   48184:	ldr	r2, [sp, #12]
   48188:	mov	r1, sl
   4818c:	mov	r0, fp
   48190:	bl	2a34 <InflateRankDims>
   48194:	add	r7, r7, r0
   48198:	ldr	r3, [sp, #52]	; 0x34
   4819c:	cmp	r3, #0
   481a0:	addeq	r3, sp, #64	; 0x40
   481a4:	streq	r3, [sp, #52]	; 0x34
   481a8:	ldreq	r3, [sp, #20]
   481ac:	movne	r3, #1
   481b0:	str	r3, [sp, #24]
   481b4:	sub	r5, r6, #24
   481b8:	ldr	r3, [fp, #20]
   481bc:	cmp	r3, #0
   481c0:	bne	48360 <ReadNextStructField+0x720>
   481c4:	ldr	r3, [sp, #56]	; 0x38
   481c8:	cmp	r3, #5
   481cc:	beq	48374 <ReadNextStructField+0x734>
   481d0:	ldr	r3, [sp, #24]
   481d4:	cmp	r3, #0
   481d8:	bne	48450 <ReadNextStructField+0x810>
   481dc:	ldr	r2, [sp, #12]
   481e0:	mov	r1, sl
   481e4:	mov	r0, fp
   481e8:	bl	2dd0 <InflateVarNameTag>
   481ec:	add	r7, r7, r0
   481f0:	sub	r5, r5, #8
   481f4:	ldr	r3, [r4]
   481f8:	ldr	r6, [r3, #52]	; 0x34
   481fc:	mov	r1, #56	; 0x38
   48200:	mov	r0, #1
   48204:	bl	1468 <calloc@plt>
   48208:	str	r0, [r6, #12]
   4820c:	ldr	r3, [r4]
   48210:	ldr	r3, [r3, #52]	; 0x34
   48214:	ldr	r0, [r3, #12]
   48218:	cmp	r0, #0
   4821c:	beq	484f0 <ReadNextStructField+0x8b0>
   48220:	ldr	r3, [sl, #52]	; 0x34
   48224:	ldr	r1, [r3, #12]
   48228:	bl	1624 <inflateCopy@plt>
   4822c:	cmp	r0, #0
   48230:	bne	484c4 <ReadNextStructField+0x884>
   48234:	ldr	r3, [r4]
   48238:	ldr	r6, [r3, #52]	; 0x34
   4823c:	ldr	r0, [fp]
   48240:	bl	151c <ftell@plt>
   48244:	str	r0, [r6]
   48248:	ldr	r3, [r4]
   4824c:	ldr	r2, [r3, #52]	; 0x34
   48250:	ldr	r3, [r2]
   48254:	cmn	r3, #1
   48258:	beq	484a4 <ReadNextStructField+0x864>
   4825c:	ldr	r1, [sl, #52]	; 0x34
   48260:	ldr	r1, [r1, #12]
   48264:	ldr	r1, [r1, #4]
   48268:	sub	r3, r3, r1
   4826c:	str	r3, [r2]
   48270:	ldr	r1, [r4]
   48274:	ldr	r3, [r1, #16]
   48278:	cmp	r3, #2
   4827c:	beq	4845c <ReadNextStructField+0x81c>
   48280:	cmp	r3, #1
   48284:	beq	4846c <ReadNextStructField+0x82c>
   48288:	cmp	r5, #32768	; 0x8000
   4828c:	ble	4847c <ReadNextStructField+0x83c>
   48290:	ldr	r3, [r4]
   48294:	ldr	r3, [r3, #52]	; 0x34
   48298:	mov	r2, #0
   4829c:	ldr	r1, [r3]
   482a0:	ldr	r0, [fp]
   482a4:	bl	1714 <fseek@plt>
   482a8:	ldr	r2, [r4]
   482ac:	ldr	r3, [r2, #52]	; 0x34
   482b0:	ldr	r1, [r3, #16]
   482b4:	cmp	r1, #0
   482b8:	beq	484b0 <ReadNextStructField+0x870>
   482bc:	ldr	r0, [r3, #12]
   482c0:	bl	1618 <inflateEnd@plt>
   482c4:	ldr	r3, [r4]
   482c8:	ldr	r3, [r3, #52]	; 0x34
   482cc:	ldr	r0, [r3, #12]
   482d0:	bl	14e0 <free@plt>
   482d4:	ldr	r3, [r4]
   482d8:	ldr	r3, [r3, #52]	; 0x34
   482dc:	mov	r2, #0
   482e0:	str	r2, [r3, #12]
   482e4:	b	484d4 <ReadNextStructField+0x894>
   482e8:	ldr	r0, [sp, #12]
   482ec:	bl	1a88 <Mat_uint32Swap>
   482f0:	add	r0, sp, #60	; 0x3c
   482f4:	bl	1a88 <Mat_uint32Swap>
   482f8:	add	r0, sp, #64	; 0x40
   482fc:	bl	1a88 <Mat_uint32Swap>
   48300:	add	r0, sp, #68	; 0x44
   48304:	bl	1a88 <Mat_uint32Swap>
   48308:	b	48134 <ReadNextStructField+0x4f4>
   4830c:	ldr	r3, [sp, #64]	; 0x40
   48310:	ldr	r1, [r4]
   48314:	uxtb	r2, r3
   48318:	cmp	r2, #17
   4831c:	movhi	r2, #0
   48320:	str	r2, [r1, #16]
   48324:	ldr	r2, [r4]
   48328:	and	r1, r3, #2048	; 0x800
   4832c:	str	r1, [r2, #20]
   48330:	ldr	r2, [r4]
   48334:	and	r1, r3, #1024	; 0x400
   48338:	str	r1, [r2, #24]
   4833c:	ldr	r2, [r4]
   48340:	and	r3, r3, #512	; 0x200
   48344:	str	r3, [r2, #28]
   48348:	ldr	r3, [r4]
   4834c:	ldr	r2, [r3, #16]
   48350:	cmp	r2, #5
   48354:	ldreq	r2, [sp, #68]	; 0x44
   48358:	streq	r2, [r3]
   4835c:	b	48160 <ReadNextStructField+0x520>
   48360:	ldr	r0, [sp, #12]
   48364:	bl	1a88 <Mat_uint32Swap>
   48368:	add	r0, sp, #60	; 0x3c
   4836c:	bl	1a88 <Mat_uint32Swap>
   48370:	b	481c4 <ReadNextStructField+0x584>
   48374:	ldr	r3, [r4]
   48378:	ldr	r2, [sp, #60]	; 0x3c
   4837c:	str	r2, [r3, #4]
   48380:	ldr	r2, [r4]
   48384:	ldr	r3, [r2, #4]
   48388:	sub	r5, r5, r3
   4838c:	add	r1, r3, #3
   48390:	cmp	r3, #0
   48394:	movlt	r3, r1
   48398:	asr	r3, r3, #2
   4839c:	str	r3, [r2, #4]
   483a0:	ldr	r6, [r4]
   483a4:	ldr	r0, [r6, #4]
   483a8:	lsl	r0, r0, #2
   483ac:	bl	15ac <malloc@plt>
   483b0:	str	r0, [r6, #32]
   483b4:	ldr	r3, [fp, #20]
   483b8:	cmp	r3, #0
   483bc:	bne	483f8 <ReadNextStructField+0x7b8>
   483c0:	ldr	r2, [r4]
   483c4:	ldr	r1, [r2, #4]
   483c8:	cmp	r1, #0
   483cc:	ble	4843c <ReadNextStructField+0x7fc>
   483d0:	ldr	r1, [sp, #52]	; 0x34
   483d4:	ldr	r1, [r1, r3, lsl #2]
   483d8:	ldr	r2, [r2, #32]
   483dc:	str	r1, [r2, r3, lsl #2]
   483e0:	add	r3, r3, #1
   483e4:	ldr	r2, [r4]
   483e8:	ldr	r1, [r2, #4]
   483ec:	cmp	r1, r3
   483f0:	bgt	483d0 <ReadNextStructField+0x790>
   483f4:	b	4843c <ReadNextStructField+0x7fc>
   483f8:	ldr	r3, [r4]
   483fc:	ldr	r2, [r3, #4]
   48400:	cmp	r2, #0
   48404:	ble	4843c <ReadNextStructField+0x7fc>
   48408:	ldr	r6, [sp, #20]
   4840c:	str	r5, [sp, #44]	; 0x2c
   48410:	ldr	r5, [r3, #32]
   48414:	ldr	r0, [sp, #52]	; 0x34
   48418:	add	r0, r0, r6, lsl #2
   4841c:	bl	1a88 <Mat_uint32Swap>
   48420:	str	r0, [r5, r6, lsl #2]
   48424:	add	r6, r6, #1
   48428:	ldr	r3, [r4]
   4842c:	ldr	r2, [r3, #4]
   48430:	cmp	r2, r6
   48434:	bgt	48410 <ReadNextStructField+0x7d0>
   48438:	ldr	r5, [sp, #44]	; 0x2c
   4843c:	ldr	r3, [r4]
   48440:	ldr	r3, [r3, #4]
   48444:	tst	r3, #1
   48448:	subne	r5, r5, #4
   4844c:	b	481d0 <ReadNextStructField+0x590>
   48450:	ldr	r0, [sp, #52]	; 0x34
   48454:	bl	14e0 <free@plt>
   48458:	b	481dc <ReadNextStructField+0x59c>
   4845c:	mov	r0, fp
   48460:	bl	47c40 <ReadNextStructField>
   48464:	add	r7, r7, r0
   48468:	b	48290 <ReadNextStructField+0x650>
   4846c:	mov	r0, fp
   48470:	bl	48a44 <ReadNextCell>
   48474:	add	r7, r7, r0
   48478:	b	48290 <ReadNextStructField+0x650>
   4847c:	mov	r0, fp
   48480:	bl	4619c <Mat_VarRead5>
   48484:	ldr	r3, [r4]
   48488:	ldr	r2, [r3, #52]	; 0x34
   4848c:	ldr	r3, [r3, #40]	; 0x28
   48490:	str	r3, [r2, #16]
   48494:	ldr	r3, [r4]
   48498:	mov	r2, #0
   4849c:	str	r2, [r3, #40]	; 0x28
   484a0:	b	48290 <ReadNextStructField+0x650>
   484a4:	ldr	r0, [sp, #40]	; 0x28
   484a8:	bl	1690 <Mat_Critical@plt>
   484ac:	b	482a8 <ReadNextStructField+0x668>
   484b0:	ldr	r2, [r2, #16]
   484b4:	sub	r2, r2, #1
   484b8:	cmp	r2, #1
   484bc:	bhi	484d4 <ReadNextStructField+0x894>
   484c0:	b	482bc <ReadNextStructField+0x67c>
   484c4:	bl	1558 <zError@plt>
   484c8:	mov	r1, r0
   484cc:	ldr	r0, [sp, #32]
   484d0:	bl	1690 <Mat_Critical@plt>
   484d4:	ldr	r3, [sl, #52]	; 0x34
   484d8:	mov	r2, r5
   484dc:	ldr	r1, [r3, #12]
   484e0:	mov	r0, fp
   484e4:	bl	227c <InflateSkip>
   484e8:	add	r7, r7, r0
   484ec:	b	480a0 <ReadNextStructField+0x460>
   484f0:	ldr	r0, [sp, #36]	; 0x24
   484f4:	bl	1690 <Mat_Critical@plt>
   484f8:	b	484d4 <ReadNextStructField+0x894>
   484fc:	mov	r5, r7
   48500:	b	47cb4 <ReadNextStructField+0x74>
   48504:	add	r0, sp, #56	; 0x38
   48508:	bl	1a88 <Mat_uint32Swap>
   4850c:	add	r0, sp, #60	; 0x3c
   48510:	bl	1a88 <Mat_uint32Swap>
   48514:	b	47c9c <ReadNextStructField+0x5c>
   48518:	ldr	r7, [sp, #60]	; 0x3c
   4851c:	ldr	r3, [fp]
   48520:	mov	r2, #2
   48524:	mov	r1, #4
   48528:	add	r0, sp, #56	; 0x38
   4852c:	bl	1588 <fread@plt>
   48530:	add	r5, r5, r0
   48534:	ldr	r3, [fp, #20]
   48538:	cmp	r3, #0
   4853c:	bne	48598 <ReadNextStructField+0x958>
   48540:	mov	r1, r7
   48544:	ldr	r0, [sp, #60]	; 0x3c
   48548:	bl	513bc <__udivsi3>
   4854c:	mov	r3, #4
   48550:	str	r3, [sl, #12]
   48554:	subs	r6, r0, #0
   48558:	bne	485ac <ReadNextStructField+0x96c>
   4855c:	ldr	r2, [sl, #52]	; 0x34
   48560:	mov	r3, #0
   48564:	str	r3, [r2, #4]
   48568:	ldr	r2, [sl, #52]	; 0x34
   4856c:	str	r3, [r2, #8]
   48570:	mov	r2, r6
   48574:	ldr	r1, [sp, #124]	; 0x7c
   48578:	add	r0, sp, #120	; 0x78
   4857c:	bl	4d0c8 <SafeMul>
   48580:	cmp	r0, #0
   48584:	beq	4866c <ReadNextStructField+0xa2c>
   48588:	ldr	r0, [pc, #1188]	; 48a34 <ReadNextStructField+0xdf4>
   4858c:	add	r0, pc, r0
   48590:	bl	1690 <Mat_Critical@plt>
   48594:	b	47cb4 <ReadNextStructField+0x74>
   48598:	add	r0, sp, #56	; 0x38
   4859c:	bl	1a88 <Mat_uint32Swap>
   485a0:	add	r0, sp, #60	; 0x3c
   485a4:	bl	1a88 <Mat_uint32Swap>
   485a8:	b	48540 <ReadNextStructField+0x900>
   485ac:	ldr	r3, [sl, #52]	; 0x34
   485b0:	str	r6, [r3, #4]
   485b4:	ldr	r4, [sl, #52]	; 0x34
   485b8:	mov	r1, #4
   485bc:	mov	r0, r6
   485c0:	bl	1468 <calloc@plt>
   485c4:	str	r0, [r4, #8]
   485c8:	ldr	r3, [sl, #52]	; 0x34
   485cc:	ldr	r3, [r3, #8]
   485d0:	cmp	r3, #0
   485d4:	beq	48644 <ReadNextStructField+0xa04>
   485d8:	mov	r4, #0
   485dc:	mov	r9, r4
   485e0:	b	485f0 <ReadNextStructField+0x9b0>
   485e4:	add	r4, r4, #1
   485e8:	cmp	r6, r4
   485ec:	beq	48644 <ReadNextStructField+0xa04>
   485f0:	ldr	r3, [sl, #52]	; 0x34
   485f4:	ldr	r8, [r3, #8]
   485f8:	mov	r0, r7
   485fc:	bl	15ac <malloc@plt>
   48600:	str	r0, [r8, r4, lsl #2]
   48604:	ldr	r3, [sl, #52]	; 0x34
   48608:	ldr	r3, [r3, #8]
   4860c:	ldr	r0, [r3, r4, lsl #2]
   48610:	cmp	r0, #0
   48614:	beq	485e4 <ReadNextStructField+0x9a4>
   48618:	ldr	r3, [fp]
   4861c:	mov	r2, r7
   48620:	mov	r1, #1
   48624:	bl	1588 <fread@plt>
   48628:	add	r5, r5, r0
   4862c:	ldr	r3, [sl, #52]	; 0x34
   48630:	ldr	r3, [r3, #8]
   48634:	ldr	r3, [r3, r4, lsl #2]
   48638:	add	r3, r3, r7
   4863c:	strb	r9, [r3, #-1]
   48640:	b	485e4 <ReadNextStructField+0x9a4>
   48644:	mul	r7, r6, r7
   48648:	ands	r7, r7, #7
   4864c:	beq	48570 <ReadNextStructField+0x930>
   48650:	rsb	r7, r7, #8
   48654:	mov	r2, #1
   48658:	mov	r1, r7
   4865c:	ldr	r0, [fp]
   48660:	bl	1714 <fseek@plt>
   48664:	add	r5, r5, r7
   48668:	b	48570 <ReadNextStructField+0x930>
   4866c:	ldr	r2, [sl, #12]
   48670:	ldr	r1, [sp, #120]	; 0x78
   48674:	mov	r0, sl
   48678:	bl	4d0c8 <SafeMul>
   4867c:	cmp	r0, #0
   48680:	bne	486c8 <ReadNextStructField+0xa88>
   48684:	ldr	r0, [sl]
   48688:	cmp	r0, #0
   4868c:	beq	47cb4 <ReadNextStructField+0x74>
   48690:	bl	15ac <malloc@plt>
   48694:	str	r0, [sp, #16]
   48698:	mov	r8, r0
   4869c:	str	r0, [sl, #40]	; 0x28
   486a0:	cmp	r0, #0
   486a4:	beq	47cb4 <ReadNextStructField+0x74>
   486a8:	ldr	r3, [sp, #124]	; 0x7c
   486ac:	cmp	r3, #0
   486b0:	beq	487a8 <ReadNextStructField+0xb68>
   486b4:	lsl	r3, r6, #2
   486b8:	mov	r7, #0
   486bc:	mov	r9, r3
   486c0:	str	r5, [sp, #12]
   486c4:	b	48700 <ReadNextStructField+0xac0>
   486c8:	ldr	r0, [pc, #872]	; 48a38 <ReadNextStructField+0xdf8>
   486cc:	add	r0, pc, r0
   486d0:	bl	1690 <Mat_Critical@plt>
   486d4:	b	47cb4 <ReadNextStructField+0x74>
   486d8:	bl	1570 <Mat_VarCalloc@plt>
   486dc:	str	r0, [r5], #4
   486e0:	add	r4, r4, #1
   486e4:	cmp	r6, r4
   486e8:	bne	486d8 <ReadNextStructField+0xa98>
   486ec:	add	r7, r7, #1
   486f0:	ldr	r3, [sp, #124]	; 0x7c
   486f4:	add	r8, r8, r9
   486f8:	cmp	r3, r7
   486fc:	bls	48714 <ReadNextStructField+0xad4>
   48700:	cmp	r6, #0
   48704:	movne	r5, r8
   48708:	movne	r4, #0
   4870c:	bne	486d8 <ReadNextStructField+0xa98>
   48710:	b	486ec <ReadNextStructField+0xaac>
   48714:	mov	r9, r3
   48718:	ldr	r5, [sp, #12]
   4871c:	ldr	r3, [sl, #52]	; 0x34
   48720:	ldr	r3, [r3, #8]
   48724:	cmp	r3, #0
   48728:	beq	487a8 <ReadNextStructField+0xb68>
   4872c:	cmp	r9, #0
   48730:	beq	487a8 <ReadNextStructField+0xb68>
   48734:	lsl	r3, r6, #2
   48738:	ldr	r8, [sp, #16]
   4873c:	mov	r2, #0
   48740:	mov	r7, r2
   48744:	str	fp, [sp, #20]
   48748:	mov	fp, r3
   4874c:	b	48790 <ReadNextStructField+0xb50>
   48750:	add	r4, r4, #1
   48754:	cmp	r6, r4
   48758:	beq	48780 <ReadNextStructField+0xb40>
   4875c:	ldr	r3, [sl, #52]	; 0x34
   48760:	ldr	r3, [r3, #8]
   48764:	ldr	r0, [r3, r4, lsl #2]
   48768:	cmp	r0, #0
   4876c:	beq	48750 <ReadNextStructField+0xb10>
   48770:	ldr	r5, [r8, r4, lsl #2]
   48774:	bl	1534 <strdup@plt>
   48778:	str	r0, [r5, #36]	; 0x24
   4877c:	b	48750 <ReadNextStructField+0xb10>
   48780:	add	r7, r7, #1
   48784:	add	r8, r8, fp
   48788:	cmp	r9, r7
   4878c:	beq	487a0 <ReadNextStructField+0xb60>
   48790:	cmp	r6, #0
   48794:	movne	r4, #0
   48798:	bne	4875c <ReadNextStructField+0xb1c>
   4879c:	b	48780 <ReadNextStructField+0xb40>
   487a0:	ldr	r5, [sp, #12]
   487a4:	ldr	fp, [sp, #20]
   487a8:	ldr	r3, [sp, #120]	; 0x78
   487ac:	cmp	r3, #0
   487b0:	beq	47cb4 <ReadNextStructField+0x74>
   487b4:	ldr	r6, [sp, #16]
   487b8:	mov	r7, #0
   487bc:	add	sl, sp, #56	; 0x38
   487c0:	add	r3, sp, #60	; 0x3c
   487c4:	str	r3, [sp, #12]
   487c8:	ldr	r3, [pc, #620]	; 48a3c <ReadNextStructField+0xdfc>
   487cc:	add	r3, pc, r3
   487d0:	str	r3, [sp, #20]
   487d4:	b	488fc <ReadNextStructField+0xcbc>
   487d8:	mov	r0, sl
   487dc:	bl	1a88 <Mat_uint32Swap>
   487e0:	ldr	r0, [sp, #12]
   487e4:	bl	1a88 <Mat_uint32Swap>
   487e8:	b	48920 <ReadNextStructField+0xce0>
   487ec:	ldr	r4, [sp, #16]
   487f0:	ldr	r0, [r4, r7, lsl #2]
   487f4:	bl	15f4 <Mat_VarFree@plt>
   487f8:	mov	r3, #0
   487fc:	str	r3, [r4, r7, lsl #2]
   48800:	ldr	r0, [fp]
   48804:	bl	151c <ftell@plt>
   48808:	mov	r2, r0
   4880c:	mov	r1, r7
   48810:	ldr	r0, [pc, #552]	; 48a40 <ReadNextStructField+0xe00>
   48814:	add	r0, pc, r0
   48818:	bl	1690 <Mat_Critical@plt>
   4881c:	b	47cb4 <ReadNextStructField+0x74>
   48820:	ldr	r3, [fp]
   48824:	mov	r2, #6
   48828:	mov	r1, #4
   4882c:	mov	r0, sl
   48830:	bl	1588 <fread@plt>
   48834:	add	r5, r5, r0
   48838:	ldr	r3, [fp, #20]
   4883c:	cmp	r3, #0
   48840:	bne	48954 <ReadNextStructField+0xd14>
   48844:	sub	r4, r4, #24
   48848:	ldr	r3, [sp, #56]	; 0x38
   4884c:	cmp	r3, #6
   48850:	beq	48988 <ReadNextStructField+0xd48>
   48854:	mov	r8, r6
   48858:	ldr	r3, [sp, #76]	; 0x4c
   4885c:	ldr	r2, [sp, #72]	; 0x48
   48860:	ldr	r1, [r6]
   48864:	mov	r0, fp
   48868:	bl	43a0c <ReadRankDims>
   4886c:	add	r5, r5, r0
   48870:	sub	r4, r4, r0
   48874:	ldr	r3, [fp]
   48878:	mov	r2, #8
   4887c:	mov	r1, #1
   48880:	mov	r0, sl
   48884:	bl	1588 <fread@plt>
   48888:	add	r5, r5, r0
   4888c:	sub	r4, r4, #8
   48890:	ldr	r3, [r6]
   48894:	ldr	r9, [r3, #52]	; 0x34
   48898:	ldr	r0, [fp]
   4889c:	bl	151c <ftell@plt>
   488a0:	str	r0, [r9]
   488a4:	ldr	r1, [r6]
   488a8:	ldr	r3, [r1, #52]	; 0x34
   488ac:	ldr	r3, [r3]
   488b0:	cmn	r3, #1
   488b4:	beq	489fc <ReadNextStructField+0xdbc>
   488b8:	ldr	r3, [r1, #16]
   488bc:	cmp	r3, #2
   488c0:	beq	489dc <ReadNextStructField+0xd9c>
   488c4:	cmp	r3, #1
   488c8:	beq	489ec <ReadNextStructField+0xdac>
   488cc:	ldr	r3, [r8]
   488d0:	ldr	r3, [r3, #52]	; 0x34
   488d4:	ldr	r1, [r3]
   488d8:	mov	r2, #0
   488dc:	add	r1, r4, r1
   488e0:	ldr	r0, [fp]
   488e4:	bl	1714 <fseek@plt>
   488e8:	add	r7, r7, #1
   488ec:	add	r6, r6, #4
   488f0:	ldr	r3, [sp, #120]	; 0x78
   488f4:	cmp	r3, r7
   488f8:	bls	47cb4 <ReadNextStructField+0x74>
   488fc:	ldr	r3, [fp]
   48900:	mov	r2, #2
   48904:	mov	r1, #4
   48908:	mov	r0, sl
   4890c:	bl	1588 <fread@plt>
   48910:	add	r5, r5, r0
   48914:	ldr	r3, [fp, #20]
   48918:	cmp	r3, #0
   4891c:	bne	487d8 <ReadNextStructField+0xb98>
   48920:	ldr	r4, [sp, #60]	; 0x3c
   48924:	ldr	r3, [sp, #56]	; 0x38
   48928:	cmp	r3, #14
   4892c:	bne	487ec <ReadNextStructField+0xbac>
   48930:	cmp	r4, #0
   48934:	bne	48820 <ReadNextStructField+0xbe0>
   48938:	ldr	r3, [r6]
   4893c:	ldr	r0, [r3, #52]	; 0x34
   48940:	bl	14e0 <free@plt>
   48944:	ldr	r3, [r6]
   48948:	mov	r2, #0
   4894c:	str	r2, [r3, #52]	; 0x34
   48950:	b	488e8 <ReadNextStructField+0xca8>
   48954:	mov	r0, sl
   48958:	bl	1a88 <Mat_uint32Swap>
   4895c:	ldr	r0, [sp, #12]
   48960:	bl	1a88 <Mat_uint32Swap>
   48964:	add	r0, sp, #64	; 0x40
   48968:	bl	1a88 <Mat_uint32Swap>
   4896c:	add	r0, sp, #68	; 0x44
   48970:	bl	1a88 <Mat_uint32Swap>
   48974:	add	r0, sp, #72	; 0x48
   48978:	bl	1a88 <Mat_uint32Swap>
   4897c:	add	r0, sp, #76	; 0x4c
   48980:	bl	1a88 <Mat_uint32Swap>
   48984:	b	48844 <ReadNextStructField+0xc04>
   48988:	ldr	r3, [sp, #64]	; 0x40
   4898c:	ldr	r1, [r6]
   48990:	uxtb	r2, r3
   48994:	cmp	r2, #17
   48998:	movhi	r2, #0
   4899c:	str	r2, [r1, #16]
   489a0:	ldr	r2, [r6]
   489a4:	and	r1, r3, #2048	; 0x800
   489a8:	str	r1, [r2, #20]
   489ac:	ldr	r2, [r6]
   489b0:	and	r1, r3, #1024	; 0x400
   489b4:	str	r1, [r2, #24]
   489b8:	ldr	r2, [r6]
   489bc:	and	r3, r3, #512	; 0x200
   489c0:	str	r3, [r2, #28]
   489c4:	ldr	r3, [r6]
   489c8:	ldr	r2, [r3, #16]
   489cc:	cmp	r2, #5
   489d0:	ldreq	r2, [sp, #68]	; 0x44
   489d4:	streq	r2, [r3]
   489d8:	b	48854 <ReadNextStructField+0xc14>
   489dc:	mov	r0, fp
   489e0:	bl	47c40 <ReadNextStructField>
   489e4:	add	r5, r5, r0
   489e8:	b	488cc <ReadNextStructField+0xc8c>
   489ec:	mov	r0, fp
   489f0:	bl	48a44 <ReadNextCell>
   489f4:	add	r5, r5, r0
   489f8:	b	488cc <ReadNextStructField+0xc8c>
   489fc:	ldr	r0, [sp, #20]
   48a00:	bl	1690 <Mat_Critical@plt>
   48a04:	b	488e8 <ReadNextStructField+0xca8>
   48a08:	.word	0x0000a814
   48a0c:	.word	0x0000a640
   48a10:	.word	0x0000a7a8
   48a14:	.word	0x0000a54c
   48a18:	.word	0x0000a3e8
   48a1c:	.word	0x0000a3f8
   48a20:	.word	0x0000a538
   48a24:	.word	0x0000a50c
   48a28:	.word	0x0000a208
   48a2c:	.word	0x0000a4c4
   48a30:	.word	0x0000a488
   48a34:	.word	0x00009d78
   48a38:	.word	0x00009c38
   48a3c:	.word	0x00009a7c
   48a40:	.word	0x00009d68

00048a44 <ReadNextCell>:
   48a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48a48:	sub	sp, sp, #124	; 0x7c
   48a4c:	mov	r6, r0
   48a50:	mov	r7, r1
   48a54:	add	r1, sp, #120	; 0x78
   48a58:	mov	r3, #1
   48a5c:	str	r3, [r1, #-4]!
   48a60:	mov	r0, r7
   48a64:	bl	4d06c <SafeMulDims>
   48a68:	cmp	r0, #0
   48a6c:	bne	48aec <ReadNextCell+0xa8>
   48a70:	mov	r2, #4
   48a74:	str	r2, [r7, #12]
   48a78:	ldr	r1, [sp, #116]	; 0x74
   48a7c:	mov	r0, r7
   48a80:	bl	4d0c8 <SafeMul>
   48a84:	subs	r3, r0, #0
   48a88:	str	r3, [sp, #20]
   48a8c:	bne	48b08 <ReadNextCell+0xc4>
   48a90:	ldr	r5, [sp, #116]	; 0x74
   48a94:	ldr	r1, [r7, #12]
   48a98:	mov	r0, r5
   48a9c:	bl	1468 <calloc@plt>
   48aa0:	mov	r4, r0
   48aa4:	str	r0, [r7, #40]	; 0x28
   48aa8:	cmp	r0, #0
   48aac:	beq	48b1c <ReadNextCell+0xd8>
   48ab0:	ldr	r3, [r7, #48]	; 0x30
   48ab4:	cmp	r3, #1
   48ab8:	beq	48b40 <ReadNextCell+0xfc>
   48abc:	cmp	r5, #0
   48ac0:	beq	48afc <ReadNextCell+0xb8>
   48ac4:	mov	r8, #0
   48ac8:	mov	r5, r8
   48acc:	add	sl, sp, #52	; 0x34
   48ad0:	ldr	r3, [pc, #2408]	; 49440 <ReadNextCell+0x9fc>
   48ad4:	add	r3, pc, r3
   48ad8:	str	r3, [sp, #16]
   48adc:	ldr	r3, [pc, #2400]	; 49444 <ReadNextCell+0xa00>
   48ae0:	add	r3, pc, r3
   48ae4:	str	r3, [sp, #12]
   48ae8:	b	492f4 <ReadNextCell+0x8b0>
   48aec:	ldr	r0, [pc, #2388]	; 49448 <ReadNextCell+0xa04>
   48af0:	add	r0, pc, r0
   48af4:	bl	1690 <Mat_Critical@plt>
   48af8:	mov	r5, #0
   48afc:	mov	r0, r5
   48b00:	add	sp, sp, #124	; 0x7c
   48b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48b08:	ldr	r0, [pc, #2364]	; 4944c <ReadNextCell+0xa08>
   48b0c:	add	r0, pc, r0
   48b10:	bl	1690 <Mat_Critical@plt>
   48b14:	mov	r5, #0
   48b18:	b	48afc <ReadNextCell+0xb8>
   48b1c:	ldr	r1, [r7, #36]	; 0x24
   48b20:	cmp	r1, #0
   48b24:	moveq	r5, #0
   48b28:	beq	48afc <ReadNextCell+0xb8>
   48b2c:	ldr	r0, [pc, #2332]	; 49450 <ReadNextCell+0xa0c>
   48b30:	add	r0, pc, r0
   48b34:	bl	1690 <Mat_Critical@plt>
   48b38:	mov	r5, #0
   48b3c:	b	48afc <ReadNextCell+0xb8>
   48b40:	mov	r2, #64	; 0x40
   48b44:	mov	r1, #0
   48b48:	add	r0, sp, #52	; 0x34
   48b4c:	bl	166c <memset@plt>
   48b50:	cmp	r5, #0
   48b54:	beq	48afc <ReadNextCell+0xb8>
   48b58:	mov	r9, r4
   48b5c:	mov	fp, #0
   48b60:	mov	r5, fp
   48b64:	mov	sl, fp
   48b68:	ldr	r3, [pc, #2276]	; 49454 <ReadNextCell+0xa10>
   48b6c:	add	r3, pc, r3
   48b70:	str	r3, [sp, #36]	; 0x24
   48b74:	ldr	r3, [pc, #2268]	; 49458 <ReadNextCell+0xa14>
   48b78:	add	r3, pc, r3
   48b7c:	str	r3, [sp, #32]
   48b80:	ldr	r3, [pc, #2260]	; 4945c <ReadNextCell+0xa18>
   48b84:	add	r3, pc, r3
   48b88:	str	r3, [sp, #40]	; 0x28
   48b8c:	ldr	r3, [pc, #2252]	; 49460 <ReadNextCell+0xa1c>
   48b90:	add	r3, pc, r3
   48b94:	str	r3, [sp, #24]
   48b98:	ldr	r3, [pc, #2244]	; 49464 <ReadNextCell+0xa20>
   48b9c:	add	r3, pc, r3
   48ba0:	str	r3, [sp, #28]
   48ba4:	b	48ef0 <ReadNextCell+0x4ac>
   48ba8:	mov	r1, fp
   48bac:	ldr	r0, [sp, #28]
   48bb0:	bl	1690 <Mat_Critical@plt>
   48bb4:	b	48edc <ReadNextCell+0x498>
   48bb8:	add	r0, sp, #52	; 0x34
   48bbc:	bl	1a88 <Mat_uint32Swap>
   48bc0:	add	r0, sp, #56	; 0x38
   48bc4:	bl	1a88 <Mat_uint32Swap>
   48bc8:	b	48f2c <ReadNextCell+0x4e8>
   48bcc:	ldr	r3, [r4]
   48bd0:	ldr	r0, [r3, #52]	; 0x34
   48bd4:	bl	14e0 <free@plt>
   48bd8:	ldr	r3, [r4]
   48bdc:	str	sl, [r3, #52]	; 0x34
   48be0:	b	48edc <ReadNextCell+0x498>
   48be4:	ldr	r0, [r4]
   48be8:	bl	15f4 <Mat_VarFree@plt>
   48bec:	mov	r3, #0
   48bf0:	str	r3, [r4]
   48bf4:	mov	r1, fp
   48bf8:	ldr	r0, [pc, #2152]	; 49468 <ReadNextCell+0xa24>
   48bfc:	add	r0, pc, r0
   48c00:	bl	1690 <Mat_Critical@plt>
   48c04:	b	48afc <ReadNextCell+0xb8>
   48c08:	add	r0, sp, #52	; 0x34
   48c0c:	bl	1a88 <Mat_uint32Swap>
   48c10:	add	r0, sp, #56	; 0x38
   48c14:	bl	1a88 <Mat_uint32Swap>
   48c18:	add	r0, sp, #60	; 0x3c
   48c1c:	bl	1a88 <Mat_uint32Swap>
   48c20:	add	r0, sp, #64	; 0x40
   48c24:	bl	1a88 <Mat_uint32Swap>
   48c28:	b	48f78 <ReadNextCell+0x534>
   48c2c:	ldr	r3, [sp, #60]	; 0x3c
   48c30:	ldr	r1, [r4]
   48c34:	uxtb	r2, r3
   48c38:	cmp	r2, #17
   48c3c:	movhi	r2, #0
   48c40:	str	r2, [r1, #16]
   48c44:	ldr	r2, [r4]
   48c48:	and	r1, r3, #2048	; 0x800
   48c4c:	str	r1, [r2, #20]
   48c50:	ldr	r2, [r4]
   48c54:	and	r1, r3, #1024	; 0x400
   48c58:	str	r1, [r2, #24]
   48c5c:	ldr	r2, [r4]
   48c60:	and	r3, r3, #512	; 0x200
   48c64:	str	r3, [r2, #28]
   48c68:	ldr	r3, [r4]
   48c6c:	ldr	r2, [r3, #16]
   48c70:	cmp	r2, #5
   48c74:	ldreq	r2, [sp, #64]	; 0x40
   48c78:	streq	r2, [r3]
   48c7c:	b	48fa4 <ReadNextCell+0x560>
   48c80:	add	r0, sp, #52	; 0x34
   48c84:	bl	1a88 <Mat_uint32Swap>
   48c88:	add	r0, sp, #56	; 0x38
   48c8c:	bl	1a88 <Mat_uint32Swap>
   48c90:	b	49008 <ReadNextCell+0x5c4>
   48c94:	ldr	r3, [r4]
   48c98:	ldr	r2, [sp, #56]	; 0x38
   48c9c:	str	r2, [r3, #4]
   48ca0:	ldr	r2, [r4]
   48ca4:	ldr	r3, [r2, #4]
   48ca8:	sub	r8, r8, r3
   48cac:	add	r1, r3, #3
   48cb0:	cmp	r3, #0
   48cb4:	movlt	r3, r1
   48cb8:	asr	r3, r3, #2
   48cbc:	str	r3, [r2, #4]
   48cc0:	ldr	r5, [r4]
   48cc4:	ldr	r0, [r5, #4]
   48cc8:	lsl	r0, r0, #2
   48ccc:	bl	15ac <malloc@plt>
   48cd0:	str	r0, [r5, #32]
   48cd4:	ldr	r3, [r6, #20]
   48cd8:	cmp	r3, #0
   48cdc:	bne	48d18 <ReadNextCell+0x2d4>
   48ce0:	ldr	r2, [r4]
   48ce4:	ldr	r1, [r2, #4]
   48ce8:	cmp	r1, #0
   48cec:	ble	48d5c <ReadNextCell+0x318>
   48cf0:	ldr	r1, [sp, #48]	; 0x30
   48cf4:	ldr	r1, [r1, r3, lsl #2]
   48cf8:	ldr	r2, [r2, #32]
   48cfc:	str	r1, [r2, r3, lsl #2]
   48d00:	add	r3, r3, #1
   48d04:	ldr	r2, [r4]
   48d08:	ldr	r1, [r2, #4]
   48d0c:	cmp	r1, r3
   48d10:	bgt	48cf0 <ReadNextCell+0x2ac>
   48d14:	b	48d5c <ReadNextCell+0x318>
   48d18:	ldr	r3, [r4]
   48d1c:	ldr	r2, [r3, #4]
   48d20:	cmp	r2, #0
   48d24:	ble	48d5c <ReadNextCell+0x318>
   48d28:	ldr	r5, [sp, #20]
   48d2c:	str	r8, [sp, #44]	; 0x2c
   48d30:	ldr	r8, [r3, #32]
   48d34:	ldr	r0, [sp, #48]	; 0x30
   48d38:	add	r0, r0, r5, lsl #2
   48d3c:	bl	1a88 <Mat_uint32Swap>
   48d40:	str	r0, [r8, r5, lsl #2]
   48d44:	add	r5, r5, #1
   48d48:	ldr	r3, [r4]
   48d4c:	ldr	r2, [r3, #4]
   48d50:	cmp	r2, r5
   48d54:	bgt	48d30 <ReadNextCell+0x2ec>
   48d58:	ldr	r8, [sp, #44]	; 0x2c
   48d5c:	ldr	r3, [r4]
   48d60:	ldr	r3, [r3, #4]
   48d64:	tst	r3, #1
   48d68:	subne	r8, r8, #4
   48d6c:	b	49014 <ReadNextCell+0x5d0>
   48d70:	ldr	r0, [sp, #48]	; 0x30
   48d74:	bl	14e0 <free@plt>
   48d78:	b	49020 <ReadNextCell+0x5dc>
   48d7c:	add	r0, sp, #52	; 0x34
   48d80:	bl	1a88 <Mat_uint32Swap>
   48d84:	add	r0, sp, #56	; 0x38
   48d88:	bl	1a88 <Mat_uint32Swap>
   48d8c:	b	4904c <ReadNextCell+0x608>
   48d90:	tst	r8, #7
   48d94:	bicne	r3, r8, #7
   48d98:	addne	r8, r3, #8
   48d9c:	ldr	r3, [r4]
   48da0:	str	r3, [sp, #16]
   48da4:	add	r0, r8, #1
   48da8:	bl	15ac <malloc@plt>
   48dac:	ldr	r3, [sp, #16]
   48db0:	str	r0, [r3, #36]	; 0x24
   48db4:	ldr	r3, [sp, #12]
   48db8:	sub	r3, r3, r8
   48dbc:	str	r3, [sp, #12]
   48dc0:	ldr	r3, [r4]
   48dc4:	ldr	r2, [r3, #36]	; 0x24
   48dc8:	cmp	r2, #0
   48dcc:	beq	49074 <ReadNextCell+0x630>
   48dd0:	mov	r3, r8
   48dd4:	mov	r1, r7
   48dd8:	mov	r0, r6
   48ddc:	bl	2f68 <InflateVarName>
   48de0:	add	r5, r5, r0
   48de4:	ldr	r3, [r4]
   48de8:	ldr	r3, [r3, #36]	; 0x24
   48dec:	strb	sl, [r3, r8]
   48df0:	b	49074 <ReadNextCell+0x630>
   48df4:	ldr	r3, [sp, #16]
   48df8:	lsr	r3, r3, #16
   48dfc:	str	r3, [sp, #44]	; 0x2c
   48e00:	sub	r3, r3, #1
   48e04:	cmp	r3, #3
   48e08:	bhi	49074 <ReadNextCell+0x630>
   48e0c:	ldr	r8, [r4]
   48e10:	ldr	r3, [sp, #44]	; 0x2c
   48e14:	add	r0, r3, #1
   48e18:	bl	15ac <malloc@plt>
   48e1c:	str	r0, [r8, #36]	; 0x24
   48e20:	ldr	r3, [r4]
   48e24:	ldr	r0, [r3, #36]	; 0x24
   48e28:	cmp	r0, #0
   48e2c:	beq	49074 <ReadNextCell+0x630>
   48e30:	ldr	r2, [sp, #44]	; 0x2c
   48e34:	add	r1, sp, #56	; 0x38
   48e38:	bl	14f8 <memcpy@plt>
   48e3c:	ldr	r3, [r4]
   48e40:	ldr	r3, [r3, #36]	; 0x24
   48e44:	ldr	r2, [sp, #16]
   48e48:	strb	sl, [r3, r2, lsr #16]
   48e4c:	b	49074 <ReadNextCell+0x630>
   48e50:	mov	r0, r6
   48e54:	bl	47c40 <ReadNextStructField>
   48e58:	add	r5, r5, r0
   48e5c:	b	49114 <ReadNextCell+0x6d0>
   48e60:	mov	r0, r6
   48e64:	bl	48a44 <ReadNextCell>
   48e68:	add	r5, r5, r0
   48e6c:	b	49114 <ReadNextCell+0x6d0>
   48e70:	mov	r0, r6
   48e74:	bl	4619c <Mat_VarRead5>
   48e78:	ldr	r3, [r4]
   48e7c:	ldr	r2, [r3, #52]	; 0x34
   48e80:	ldr	r3, [r3, #40]	; 0x28
   48e84:	str	r3, [r2, #16]
   48e88:	ldr	r3, [r4]
   48e8c:	str	sl, [r3, #40]	; 0x28
   48e90:	b	49114 <ReadNextCell+0x6d0>
   48e94:	ldr	r0, [sp, #40]	; 0x28
   48e98:	bl	1690 <Mat_Critical@plt>
   48e9c:	b	4912c <ReadNextCell+0x6e8>
   48ea0:	ldr	r2, [r2, #16]
   48ea4:	sub	r2, r2, #1
   48ea8:	cmp	r2, #1
   48eac:	bhi	48ec4 <ReadNextCell+0x480>
   48eb0:	b	49140 <ReadNextCell+0x6fc>
   48eb4:	bl	1558 <zError@plt>
   48eb8:	mov	r1, r0
   48ebc:	ldr	r0, [sp, #32]
   48ec0:	bl	1690 <Mat_Critical@plt>
   48ec4:	ldr	r3, [r7, #52]	; 0x34
   48ec8:	ldr	r2, [sp, #12]
   48ecc:	ldr	r1, [r3, #12]
   48ed0:	mov	r0, r6
   48ed4:	bl	227c <InflateSkip>
   48ed8:	add	r5, r5, r0
   48edc:	add	fp, fp, #1
   48ee0:	add	r9, r9, #4
   48ee4:	ldr	r3, [sp, #116]	; 0x74
   48ee8:	cmp	r3, fp
   48eec:	bls	48afc <ReadNextCell+0xb8>
   48ef0:	mov	r4, r9
   48ef4:	bl	1570 <Mat_VarCalloc@plt>
   48ef8:	str	r0, [r9]
   48efc:	cmp	r0, #0
   48f00:	beq	48ba8 <ReadNextCell+0x164>
   48f04:	str	sl, [sp, #52]	; 0x34
   48f08:	str	sl, [sp, #56]	; 0x38
   48f0c:	add	r2, sp, #52	; 0x34
   48f10:	mov	r1, r7
   48f14:	mov	r0, r6
   48f18:	bl	2704 <InflateVarTag>
   48f1c:	add	r5, r5, r0
   48f20:	ldr	r3, [r6, #20]
   48f24:	cmp	r3, #0
   48f28:	bne	48bb8 <ReadNextCell+0x174>
   48f2c:	ldr	r8, [sp, #56]	; 0x38
   48f30:	cmp	r8, #0
   48f34:	beq	48bcc <ReadNextCell+0x188>
   48f38:	ldr	r3, [sp, #52]	; 0x34
   48f3c:	cmp	r3, #14
   48f40:	bne	48be4 <ReadNextCell+0x1a0>
   48f44:	ldr	r3, [r4]
   48f48:	mov	r2, #1
   48f4c:	str	r2, [r3, #48]	; 0x30
   48f50:	add	r2, sp, #52	; 0x34
   48f54:	mov	r1, r7
   48f58:	mov	r0, r6
   48f5c:	bl	289c <InflateArrayFlags>
   48f60:	add	r5, r5, r0
   48f64:	sub	r3, r8, #16
   48f68:	str	r3, [sp, #12]
   48f6c:	ldr	r3, [r6, #20]
   48f70:	cmp	r3, #0
   48f74:	bne	48c08 <ReadNextCell+0x1c4>
   48f78:	ldr	r1, [sp, #52]	; 0x34
   48f7c:	cmp	r1, #6
   48f80:	beq	48c2c <ReadNextCell+0x1e8>
   48f84:	ldr	r0, [sp, #24]
   48f88:	bl	1690 <Mat_Critical@plt>
   48f8c:	ldr	r3, [r7, #52]	; 0x34
   48f90:	ldr	r2, [sp, #12]
   48f94:	ldr	r1, [r3, #12]
   48f98:	mov	r0, r6
   48f9c:	bl	227c <InflateSkip>
   48fa0:	add	r5, r5, r0
   48fa4:	ldr	r3, [r4]
   48fa8:	ldr	r3, [r3, #16]
   48fac:	cmp	r3, #17
   48fb0:	beq	48ec4 <ReadNextCell+0x480>
   48fb4:	str	sl, [sp, #48]	; 0x30
   48fb8:	add	r3, sp, #48	; 0x30
   48fbc:	str	r3, [sp]
   48fc0:	mov	r3, #64	; 0x40
   48fc4:	add	r2, sp, #52	; 0x34
   48fc8:	mov	r1, r7
   48fcc:	mov	r0, r6
   48fd0:	bl	2a34 <InflateRankDims>
   48fd4:	add	r3, r5, r0
   48fd8:	str	r3, [sp, #16]
   48fdc:	ldr	r3, [sp, #48]	; 0x30
   48fe0:	cmp	r3, #0
   48fe4:	addeq	r3, sp, #60	; 0x3c
   48fe8:	streq	r3, [sp, #48]	; 0x30
   48fec:	ldreq	r3, [sp, #20]
   48ff0:	movne	r3, #1
   48ff4:	str	r3, [sp, #12]
   48ff8:	sub	r8, r8, #24
   48ffc:	ldr	r3, [r6, #20]
   49000:	cmp	r3, #0
   49004:	bne	48c80 <ReadNextCell+0x23c>
   49008:	ldr	r3, [sp, #52]	; 0x34
   4900c:	cmp	r3, #5
   49010:	beq	48c94 <ReadNextCell+0x250>
   49014:	ldr	r3, [sp, #12]
   49018:	cmp	r3, #0
   4901c:	bne	48d70 <ReadNextCell+0x32c>
   49020:	add	r2, sp, #52	; 0x34
   49024:	mov	r1, r7
   49028:	mov	r0, r6
   4902c:	bl	2dd0 <InflateVarNameTag>
   49030:	ldr	r3, [sp, #16]
   49034:	add	r5, r3, r0
   49038:	sub	r3, r8, #8
   4903c:	str	r3, [sp, #12]
   49040:	ldr	r3, [r6, #20]
   49044:	cmp	r3, #0
   49048:	bne	48d7c <ReadNextCell+0x338>
   4904c:	ldr	r8, [sp, #56]	; 0x38
   49050:	cmp	r8, #0
   49054:	beq	49074 <ReadNextCell+0x630>
   49058:	ldr	r3, [sp, #52]	; 0x34
   4905c:	str	r3, [sp, #16]
   49060:	cmp	r3, #1
   49064:	beq	48d90 <ReadNextCell+0x34c>
   49068:	ldrh	r3, [sp, #16]
   4906c:	cmp	r3, #1
   49070:	beq	48df4 <ReadNextCell+0x3b0>
   49074:	ldr	r3, [r4]
   49078:	ldr	r8, [r3, #52]	; 0x34
   4907c:	mov	r1, #56	; 0x38
   49080:	mov	r0, #1
   49084:	bl	1468 <calloc@plt>
   49088:	str	r0, [r8, #12]
   4908c:	ldr	r3, [r4]
   49090:	ldr	r3, [r3, #52]	; 0x34
   49094:	ldr	r0, [r3, #12]
   49098:	cmp	r0, #0
   4909c:	beq	49168 <ReadNextCell+0x724>
   490a0:	ldr	r3, [r7, #52]	; 0x34
   490a4:	ldr	r1, [r3, #12]
   490a8:	bl	1624 <inflateCopy@plt>
   490ac:	cmp	r0, #0
   490b0:	bne	48eb4 <ReadNextCell+0x470>
   490b4:	ldr	r3, [r4]
   490b8:	ldr	r8, [r3, #52]	; 0x34
   490bc:	ldr	r0, [r6]
   490c0:	bl	151c <ftell@plt>
   490c4:	str	r0, [r8]
   490c8:	ldr	r3, [r4]
   490cc:	ldr	r2, [r3, #52]	; 0x34
   490d0:	ldr	r3, [r2]
   490d4:	cmn	r3, #1
   490d8:	beq	48e94 <ReadNextCell+0x450>
   490dc:	ldr	r1, [r7, #52]	; 0x34
   490e0:	ldr	r1, [r1, #12]
   490e4:	ldr	r1, [r1, #4]
   490e8:	sub	r3, r3, r1
   490ec:	str	r3, [r2]
   490f0:	ldr	r1, [r4]
   490f4:	ldr	r3, [r1, #16]
   490f8:	cmp	r3, #2
   490fc:	beq	48e50 <ReadNextCell+0x40c>
   49100:	cmp	r3, #1
   49104:	beq	48e60 <ReadNextCell+0x41c>
   49108:	ldr	r3, [sp, #12]
   4910c:	cmp	r3, #32768	; 0x8000
   49110:	ble	48e70 <ReadNextCell+0x42c>
   49114:	ldr	r3, [r4]
   49118:	ldr	r3, [r3, #52]	; 0x34
   4911c:	mov	r2, sl
   49120:	ldr	r1, [r3]
   49124:	ldr	r0, [r6]
   49128:	bl	1714 <fseek@plt>
   4912c:	ldr	r2, [r4]
   49130:	ldr	r3, [r2, #52]	; 0x34
   49134:	ldr	r1, [r3, #16]
   49138:	cmp	r1, #0
   4913c:	beq	48ea0 <ReadNextCell+0x45c>
   49140:	ldr	r0, [r3, #12]
   49144:	bl	1618 <inflateEnd@plt>
   49148:	ldr	r3, [r4]
   4914c:	ldr	r3, [r3, #52]	; 0x34
   49150:	ldr	r0, [r3, #12]
   49154:	bl	14e0 <free@plt>
   49158:	ldr	r3, [r4]
   4915c:	ldr	r3, [r3, #52]	; 0x34
   49160:	str	sl, [r3, #12]
   49164:	b	48ec4 <ReadNextCell+0x480>
   49168:	ldr	r0, [sp, #36]	; 0x24
   4916c:	bl	1690 <Mat_Critical@plt>
   49170:	b	48ec4 <ReadNextCell+0x480>
   49174:	mov	r1, r8
   49178:	ldr	r0, [sp, #12]
   4917c:	bl	1690 <Mat_Critical@plt>
   49180:	b	492e0 <ReadNextCell+0x89c>
   49184:	mov	r0, sl
   49188:	bl	1a88 <Mat_uint32Swap>
   4918c:	add	r0, sp, #56	; 0x38
   49190:	bl	1a88 <Mat_uint32Swap>
   49194:	b	49334 <ReadNextCell+0x8f0>
   49198:	ldr	r3, [r9]
   4919c:	ldr	r0, [r3, #52]	; 0x34
   491a0:	bl	14e0 <free@plt>
   491a4:	ldr	r3, [r9]
   491a8:	mov	r2, #0
   491ac:	str	r2, [r3, #52]	; 0x34
   491b0:	b	492e0 <ReadNextCell+0x89c>
   491b4:	ldr	r0, [r9]
   491b8:	bl	15f4 <Mat_VarFree@plt>
   491bc:	mov	r3, #0
   491c0:	str	r3, [r9]
   491c4:	ldr	r0, [r6]
   491c8:	bl	151c <ftell@plt>
   491cc:	mov	r2, r0
   491d0:	mov	r1, r8
   491d4:	ldr	r0, [pc, #656]	; 4946c <ReadNextCell+0xa28>
   491d8:	add	r0, pc, r0
   491dc:	bl	1690 <Mat_Critical@plt>
   491e0:	b	48afc <ReadNextCell+0xb8>
   491e4:	mov	r0, sl
   491e8:	bl	1a88 <Mat_uint32Swap>
   491ec:	add	r0, sp, #56	; 0x38
   491f0:	bl	1a88 <Mat_uint32Swap>
   491f4:	add	r0, sp, #60	; 0x3c
   491f8:	bl	1a88 <Mat_uint32Swap>
   491fc:	add	r0, sp, #64	; 0x40
   49200:	bl	1a88 <Mat_uint32Swap>
   49204:	add	r0, sp, #68	; 0x44
   49208:	bl	1a88 <Mat_uint32Swap>
   4920c:	add	r0, sp, #72	; 0x48
   49210:	bl	1a88 <Mat_uint32Swap>
   49214:	b	49370 <ReadNextCell+0x92c>
   49218:	ldr	r3, [sp, #60]	; 0x3c
   4921c:	ldr	r1, [r9]
   49220:	uxtb	r2, r3
   49224:	cmp	r2, #17
   49228:	movhi	r2, #0
   4922c:	str	r2, [r1, #16]
   49230:	ldr	r2, [r9]
   49234:	and	r1, r3, #2048	; 0x800
   49238:	str	r1, [r2, #20]
   4923c:	ldr	r2, [r9]
   49240:	and	r1, r3, #1024	; 0x400
   49244:	str	r1, [r2, #24]
   49248:	ldr	r2, [r9]
   4924c:	and	r3, r3, #512	; 0x200
   49250:	str	r3, [r2, #28]
   49254:	ldr	r3, [r9]
   49258:	ldr	r2, [r3, #16]
   4925c:	cmp	r2, #5
   49260:	ldreq	r2, [sp, #64]	; 0x40
   49264:	streq	r2, [r3]
   49268:	b	49380 <ReadNextCell+0x93c>
   4926c:	mov	r0, sl
   49270:	bl	1a88 <Mat_uint32Swap>
   49274:	add	r0, sp, #56	; 0x38
   49278:	bl	1a88 <Mat_uint32Swap>
   4927c:	b	493c4 <ReadNextCell+0x980>
   49280:	ldr	r3, [r9]
   49284:	ldr	fp, [r3, #52]	; 0x34
   49288:	ldr	r0, [r6]
   4928c:	bl	151c <ftell@plt>
   49290:	str	r0, [fp]
   49294:	ldr	r1, [r9]
   49298:	ldr	r3, [r1, #52]	; 0x34
   4929c:	ldr	r3, [r3]
   492a0:	cmn	r3, #1
   492a4:	beq	49434 <ReadNextCell+0x9f0>
   492a8:	ldr	r3, [r1, #16]
   492ac:	cmp	r3, #2
   492b0:	beq	49414 <ReadNextCell+0x9d0>
   492b4:	ldr	r1, [r9]
   492b8:	ldr	r3, [r1, #16]
   492bc:	cmp	r3, #1
   492c0:	beq	49424 <ReadNextCell+0x9e0>
   492c4:	ldr	r3, [r9]
   492c8:	ldr	r3, [r3, #52]	; 0x34
   492cc:	ldr	r1, [r3]
   492d0:	mov	r2, #0
   492d4:	add	r1, r7, r1
   492d8:	ldr	r0, [r6]
   492dc:	bl	1714 <fseek@plt>
   492e0:	add	r8, r8, #1
   492e4:	add	r4, r4, #4
   492e8:	ldr	r3, [sp, #116]	; 0x74
   492ec:	cmp	r3, r8
   492f0:	bls	48afc <ReadNextCell+0xb8>
   492f4:	mov	r9, r4
   492f8:	bl	1570 <Mat_VarCalloc@plt>
   492fc:	str	r0, [r4]
   49300:	cmp	r0, #0
   49304:	beq	49174 <ReadNextCell+0x730>
   49308:	ldr	r3, [r6]
   4930c:	mov	r2, #2
   49310:	mov	r1, #4
   49314:	mov	r0, sl
   49318:	bl	1588 <fread@plt>
   4931c:	cmp	r0, #0
   49320:	beq	492e0 <ReadNextCell+0x89c>
   49324:	add	r5, r5, r0
   49328:	ldr	r3, [r6, #20]
   4932c:	cmp	r3, #0
   49330:	bne	49184 <ReadNextCell+0x740>
   49334:	ldr	r7, [sp, #56]	; 0x38
   49338:	cmp	r7, #0
   4933c:	beq	49198 <ReadNextCell+0x754>
   49340:	ldr	r3, [sp, #52]	; 0x34
   49344:	cmp	r3, #14
   49348:	bne	491b4 <ReadNextCell+0x770>
   4934c:	ldr	r3, [r6]
   49350:	mov	r2, #6
   49354:	mov	r1, #4
   49358:	mov	r0, sl
   4935c:	bl	1588 <fread@plt>
   49360:	add	r5, r5, r0
   49364:	ldr	r3, [r6, #20]
   49368:	cmp	r3, #0
   4936c:	bne	491e4 <ReadNextCell+0x7a0>
   49370:	sub	r7, r7, #24
   49374:	ldr	r3, [sp, #52]	; 0x34
   49378:	cmp	r3, #6
   4937c:	beq	49218 <ReadNextCell+0x7d4>
   49380:	ldr	r3, [sp, #72]	; 0x48
   49384:	ldr	r2, [sp, #68]	; 0x44
   49388:	ldr	r1, [r9]
   4938c:	mov	r0, r6
   49390:	bl	43a0c <ReadRankDims>
   49394:	add	r5, r5, r0
   49398:	sub	r7, r7, r0
   4939c:	ldr	r3, [r6]
   493a0:	mov	r2, #8
   493a4:	mov	r1, #1
   493a8:	mov	r0, sl
   493ac:	bl	1588 <fread@plt>
   493b0:	add	r5, r5, r0
   493b4:	sub	r7, r7, #8
   493b8:	ldr	r3, [r6, #20]
   493bc:	cmp	r3, #0
   493c0:	bne	4926c <ReadNextCell+0x828>
   493c4:	ldr	r3, [sp, #56]	; 0x38
   493c8:	cmp	r3, #0
   493cc:	beq	49280 <ReadNextCell+0x83c>
   493d0:	ldr	r2, [sp, #52]	; 0x34
   493d4:	cmp	r2, #1
   493d8:	bne	49280 <ReadNextCell+0x83c>
   493dc:	mov	r1, r3
   493e0:	asr	r2, r3, #31
   493e4:	lsr	r0, r2, #29
   493e8:	add	r2, r3, r0
   493ec:	and	r2, r2, #7
   493f0:	sub	r2, r2, r0
   493f4:	cmp	r2, #0
   493f8:	rsbgt	r2, r2, #8
   493fc:	addgt	r1, r3, r2
   49400:	sub	r7, r7, r1
   49404:	mov	r2, #1
   49408:	ldr	r0, [r6]
   4940c:	bl	1714 <fseek@plt>
   49410:	b	49280 <ReadNextCell+0x83c>
   49414:	mov	r0, r6
   49418:	bl	47c40 <ReadNextStructField>
   4941c:	add	r5, r5, r0
   49420:	b	492b4 <ReadNextCell+0x870>
   49424:	mov	r0, r6
   49428:	bl	48a44 <ReadNextCell>
   4942c:	add	r5, r5, r0
   49430:	b	492c4 <ReadNextCell+0x880>
   49434:	ldr	r0, [sp, #16]
   49438:	bl	1690 <Mat_Critical@plt>
   4943c:	b	492e0 <ReadNextCell+0x89c>
   49440:	.word	0x00009774
   49444:	.word	0x00009af0
   49448:	.word	0x00009814
   4944c:	.word	0x000097f8
   49450:	.word	0x00009a78
   49454:	.word	0x000099f4
   49458:	.word	0x000099c8
   4945c:	.word	0x000096c4
   49460:	.word	0x00009980
   49464:	.word	0x00009a34
   49468:	.word	0x000099fc
   4946c:	.word	0x00009450

00049470 <Mat_VarReadData5>:
   49470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49474:	sub	sp, sp, #92	; 0x5c
   49478:	mov	r5, r0
   4947c:	mov	r4, r1
   49480:	mov	sl, r2
   49484:	mov	r7, r3
   49488:	ldr	r8, [sp, #128]	; 0x80
   4948c:	ldr	r9, [sp, #132]	; 0x84
   49490:	ldr	r3, [r1, #52]	; 0x34
   49494:	mov	r2, #0
   49498:	ldr	r1, [r3]
   4949c:	ldr	r0, [r0]
   494a0:	bl	1714 <fseek@plt>
   494a4:	ldr	r3, [r4, #48]	; 0x30
   494a8:	cmp	r3, #0
   494ac:	beq	49594 <Mat_VarReadData5+0x124>
   494b0:	cmp	r3, #1
   494b4:	movne	r6, #0
   494b8:	beq	49630 <Mat_VarReadData5+0x1c0>
   494bc:	ldr	r3, [r4, #4]
   494c0:	cmp	r3, #2
   494c4:	beq	497c4 <Mat_VarReadData5+0x354>
   494c8:	ldr	r2, [r4, #48]	; 0x30
   494cc:	cmp	r2, #0
   494d0:	bne	49af0 <Mat_VarReadData5+0x680>
   494d4:	ldr	r2, [r4, #20]
   494d8:	cmp	r2, #0
   494dc:	beq	49ac0 <Mat_VarReadData5+0x650>
   494e0:	str	r9, [sp, #16]
   494e4:	str	r8, [sp, #12]
   494e8:	str	r7, [sp, #8]
   494ec:	ldr	r2, [r4, #32]
   494f0:	str	r2, [sp, #4]
   494f4:	str	r3, [sp]
   494f8:	ldr	r3, [r4, #8]
   494fc:	ldr	r2, [r4, #16]
   49500:	ldr	r1, [sl]
   49504:	mov	r0, r5
   49508:	bl	15b28 <ReadDataSlabN>
   4950c:	ldr	r3, [r4, #52]	; 0x34
   49510:	ldr	r1, [r3]
   49514:	mov	r2, #0
   49518:	add	r1, r6, r1
   4951c:	ldr	r0, [r5]
   49520:	bl	1714 <fseek@plt>
   49524:	ldr	r3, [r5]
   49528:	mov	r2, #2
   4952c:	mov	r1, #4
   49530:	add	r0, sp, #80	; 0x50
   49534:	bl	1588 <fread@plt>
   49538:	ldr	r3, [r5, #20]
   4953c:	cmp	r3, #0
   49540:	bne	49a98 <Mat_VarReadData5+0x628>
   49544:	ldr	r3, [sp, #80]	; 0x50
   49548:	uxtb	r2, r3
   4954c:	cmp	r2, #24
   49550:	movgt	r2, #0
   49554:	str	r2, [r4, #8]
   49558:	lsrs	r3, r3, #16
   4955c:	bne	49aac <Mat_VarReadData5+0x63c>
   49560:	ldr	r1, [sl, #4]
   49564:	str	r9, [sp, #16]
   49568:	str	r8, [sp, #12]
   4956c:	str	r7, [sp, #8]
   49570:	ldr	r3, [r4, #32]
   49574:	str	r3, [sp, #4]
   49578:	ldr	r3, [r4, #4]
   4957c:	str	r3, [sp]
   49580:	ldr	r3, [r4, #8]
   49584:	ldr	r2, [r4, #16]
   49588:	mov	r0, r5
   4958c:	bl	15b28 <ReadDataSlabN>
   49590:	b	49af8 <Mat_VarReadData5+0x688>
   49594:	ldr	r3, [r5]
   49598:	mov	r2, #2
   4959c:	mov	r1, #4
   495a0:	add	r0, sp, #80	; 0x50
   495a4:	bl	1588 <fread@plt>
   495a8:	ldr	r3, [r5, #20]
   495ac:	cmp	r3, #0
   495b0:	bne	49600 <Mat_VarReadData5+0x190>
   495b4:	ldr	r3, [sp, #80]	; 0x50
   495b8:	uxtb	r2, r3
   495bc:	cmp	r2, #24
   495c0:	movgt	r2, #0
   495c4:	str	r2, [r4, #8]
   495c8:	lsrs	r3, r3, #16
   495cc:	bne	49614 <Mat_VarReadData5+0x1a4>
   495d0:	ldr	r6, [sp, #84]	; 0x54
   495d4:	add	r6, r6, #8
   495d8:	tst	r6, #7
   495dc:	beq	494bc <Mat_VarReadData5+0x4c>
   495e0:	asr	r3, r6, #31
   495e4:	lsr	r2, r3, #29
   495e8:	add	r3, r6, r2
   495ec:	and	r3, r3, #7
   495f0:	sub	r3, r3, r2
   495f4:	rsb	r3, r3, #8
   495f8:	add	r6, r6, r3
   495fc:	b	494bc <Mat_VarReadData5+0x4c>
   49600:	add	r0, sp, #80	; 0x50
   49604:	bl	1a20 <Mat_int32Swap>
   49608:	add	r0, sp, #84	; 0x54
   4960c:	bl	1a20 <Mat_int32Swap>
   49610:	b	495b4 <Mat_VarReadData5+0x144>
   49614:	mov	r2, #1
   49618:	mvn	r1, #3
   4961c:	ldr	r0, [r5]
   49620:	bl	1714 <fseek@plt>
   49624:	ldrsh	r6, [sp, #82]	; 0x52
   49628:	add	r6, r6, #4
   4962c:	b	495d8 <Mat_VarReadData5+0x168>
   49630:	ldr	r3, [r4, #52]	; 0x34
   49634:	ldr	r6, [r3, #16]
   49638:	cmp	r6, #0
   4963c:	beq	4970c <Mat_VarReadData5+0x29c>
   49640:	ldr	r3, [r4, #20]
   49644:	cmp	r3, #0
   49648:	beq	496cc <Mat_VarReadData5+0x25c>
   4964c:	ldr	r0, [r6]
   49650:	ldr	r3, [r4]
   49654:	str	r3, [sp, #20]
   49658:	ldr	r3, [r4, #4]
   4965c:	str	r3, [sp, #16]
   49660:	str	r9, [sp, #12]
   49664:	str	r8, [sp, #8]
   49668:	str	r7, [sp, #4]
   4966c:	ldr	r3, [r4, #32]
   49670:	str	r3, [sp]
   49674:	ldr	r3, [r4, #8]
   49678:	ldr	r2, [r4, #16]
   4967c:	ldr	r1, [sl]
   49680:	bl	2100c <GetDataSlab>
   49684:	subs	fp, r0, #0
   49688:	bne	49b14 <Mat_VarReadData5+0x6a4>
   4968c:	ldr	r3, [r4, #8]
   49690:	ldr	r2, [r4, #16]
   49694:	ldr	r1, [sl, #4]
   49698:	ldr	r0, [r6, #4]
   4969c:	ldr	ip, [r4]
   496a0:	str	ip, [sp, #20]
   496a4:	ldr	ip, [r4, #4]
   496a8:	str	ip, [sp, #16]
   496ac:	str	r9, [sp, #12]
   496b0:	str	r8, [sp, #8]
   496b4:	str	r7, [sp, #4]
   496b8:	ldr	ip, [r4, #32]
   496bc:	str	ip, [sp]
   496c0:	bl	2100c <GetDataSlab>
   496c4:	mov	fp, r0
   496c8:	b	49b14 <Mat_VarReadData5+0x6a4>
   496cc:	ldr	r3, [r4, #8]
   496d0:	ldr	r2, [r4, #16]
   496d4:	ldr	r1, [r4]
   496d8:	str	r1, [sp, #20]
   496dc:	ldr	r1, [r4, #4]
   496e0:	str	r1, [sp, #16]
   496e4:	str	r9, [sp, #12]
   496e8:	str	r8, [sp, #8]
   496ec:	str	r7, [sp, #4]
   496f0:	ldr	r1, [r4, #32]
   496f4:	str	r1, [sp]
   496f8:	mov	r1, sl
   496fc:	mov	r0, r6
   49700:	bl	2100c <GetDataSlab>
   49704:	mov	fp, r0
   49708:	b	49b14 <Mat_VarReadData5+0x6a4>
   4970c:	ldr	r1, [r3, #12]
   49710:	add	r0, sp, #24
   49714:	bl	1624 <inflateCopy@plt>
   49718:	cmp	r0, #0
   4971c:	bne	49790 <Mat_VarReadData5+0x320>
   49720:	mov	r3, #0
   49724:	str	r3, [sp, #28]
   49728:	add	r2, sp, #80	; 0x50
   4972c:	add	r1, sp, #24
   49730:	mov	r0, r5
   49734:	bl	32c0 <InflateDataType>
   49738:	ldr	r3, [r5, #20]
   4973c:	cmp	r3, #0
   49740:	bne	497ac <Mat_VarReadData5+0x33c>
   49744:	ldr	r3, [sp, #80]	; 0x50
   49748:	uxtb	r2, r3
   4974c:	cmp	r2, #24
   49750:	movgt	r2, #0
   49754:	str	r2, [r4, #8]
   49758:	lsrs	r2, r3, #16
   4975c:	asrne	r3, r3, #16
   49760:	addne	r6, r3, #4
   49764:	bne	495d8 <Mat_VarReadData5+0x168>
   49768:	add	r2, sp, #84	; 0x54
   4976c:	add	r1, sp, #24
   49770:	mov	r0, r5
   49774:	bl	32c0 <InflateDataType>
   49778:	ldr	r3, [r5, #20]
   4977c:	cmp	r3, #0
   49780:	bne	497b8 <Mat_VarReadData5+0x348>
   49784:	ldr	r6, [sp, #84]	; 0x54
   49788:	add	r6, r6, #8
   4978c:	b	495d8 <Mat_VarReadData5+0x168>
   49790:	bl	1558 <zError@plt>
   49794:	mov	r1, r0
   49798:	ldr	r0, [pc, #1292]	; 49cac <Mat_VarReadData5+0x83c>
   4979c:	add	r0, pc, r0
   497a0:	bl	1690 <Mat_Critical@plt>
   497a4:	mvn	fp, #0
   497a8:	b	49b14 <Mat_VarReadData5+0x6a4>
   497ac:	add	r0, sp, #80	; 0x50
   497b0:	bl	1a20 <Mat_int32Swap>
   497b4:	b	49744 <Mat_VarReadData5+0x2d4>
   497b8:	add	r0, sp, #84	; 0x54
   497bc:	bl	1a20 <Mat_int32Swap>
   497c0:	b	49784 <Mat_VarReadData5+0x314>
   497c4:	ldr	r2, [r4, #32]
   497c8:	ldr	r3, [r9]
   497cc:	sub	r3, r3, #1
   497d0:	ldr	r0, [r8]
   497d4:	ldr	r1, [r7]
   497d8:	mla	r3, r0, r3, r1
   497dc:	add	r3, r3, #1
   497e0:	ldr	r1, [r2]
   497e4:	cmp	r3, r1
   497e8:	movhi	fp, #1
   497ec:	bhi	49b14 <Mat_VarReadData5+0x6a4>
   497f0:	ldr	r3, [r9, #4]
   497f4:	sub	r3, r3, #1
   497f8:	ldr	r0, [r8, #4]
   497fc:	ldr	r1, [r7, #4]
   49800:	mla	r3, r0, r3, r1
   49804:	add	r3, r3, #1
   49808:	ldr	r1, [r2, #4]
   4980c:	cmp	r3, r1
   49810:	movhi	fp, #1
   49814:	bhi	49b14 <Mat_VarReadData5+0x6a4>
   49818:	ldr	r3, [r4, #48]	; 0x30
   4981c:	cmp	r3, #0
   49820:	bne	49924 <Mat_VarReadData5+0x4b4>
   49824:	ldr	r3, [r4, #20]
   49828:	cmp	r3, #0
   4982c:	beq	498fc <Mat_VarReadData5+0x48c>
   49830:	str	r9, [sp, #12]
   49834:	str	r8, [sp, #8]
   49838:	str	r7, [sp, #4]
   4983c:	str	r2, [sp]
   49840:	ldr	r3, [r4, #8]
   49844:	ldr	r2, [r4, #16]
   49848:	ldr	r1, [sl]
   4984c:	mov	r0, r5
   49850:	bl	1da88 <ReadDataSlab2>
   49854:	ldr	r3, [r4, #52]	; 0x34
   49858:	ldr	r1, [r3]
   4985c:	mov	r2, #0
   49860:	add	r1, r6, r1
   49864:	ldr	r0, [r5]
   49868:	bl	1714 <fseek@plt>
   4986c:	ldr	r3, [r5]
   49870:	mov	r2, #2
   49874:	mov	r1, #4
   49878:	add	r0, sp, #80	; 0x50
   4987c:	bl	1588 <fread@plt>
   49880:	ldr	r3, [r5, #20]
   49884:	cmp	r3, #0
   49888:	bne	498d4 <Mat_VarReadData5+0x464>
   4988c:	ldr	r3, [sp, #80]	; 0x50
   49890:	uxtb	r2, r3
   49894:	cmp	r2, #24
   49898:	movgt	r2, #0
   4989c:	str	r2, [r4, #8]
   498a0:	lsrs	r3, r3, #16
   498a4:	bne	498e8 <Mat_VarReadData5+0x478>
   498a8:	ldr	r1, [sl, #4]
   498ac:	str	r9, [sp, #12]
   498b0:	str	r8, [sp, #8]
   498b4:	str	r7, [sp, #4]
   498b8:	ldr	r3, [r4, #32]
   498bc:	str	r3, [sp]
   498c0:	ldr	r3, [r4, #8]
   498c4:	ldr	r2, [r4, #16]
   498c8:	mov	r0, r5
   498cc:	bl	1da88 <ReadDataSlab2>
   498d0:	b	49af8 <Mat_VarReadData5+0x688>
   498d4:	add	r0, sp, #80	; 0x50
   498d8:	bl	1a20 <Mat_int32Swap>
   498dc:	add	r0, sp, #84	; 0x54
   498e0:	bl	1a20 <Mat_int32Swap>
   498e4:	b	4988c <Mat_VarReadData5+0x41c>
   498e8:	mov	r2, #1
   498ec:	mvn	r1, #3
   498f0:	ldr	r0, [r5]
   498f4:	bl	1714 <fseek@plt>
   498f8:	b	498a8 <Mat_VarReadData5+0x438>
   498fc:	str	r9, [sp, #12]
   49900:	str	r8, [sp, #8]
   49904:	str	r7, [sp, #4]
   49908:	str	r2, [sp]
   4990c:	ldr	r3, [r4, #8]
   49910:	ldr	r2, [r4, #16]
   49914:	mov	r1, sl
   49918:	mov	r0, r5
   4991c:	bl	1da88 <ReadDataSlab2>
   49920:	b	49af8 <Mat_VarReadData5+0x688>
   49924:	cmp	r3, #1
   49928:	bne	49af8 <Mat_VarReadData5+0x688>
   4992c:	ldr	fp, [r4, #20]
   49930:	cmp	fp, #0
   49934:	beq	49a68 <Mat_VarReadData5+0x5f8>
   49938:	str	r9, [sp, #16]
   4993c:	str	r8, [sp, #12]
   49940:	str	r7, [sp, #8]
   49944:	str	r2, [sp, #4]
   49948:	ldr	r3, [r4, #8]
   4994c:	str	r3, [sp]
   49950:	ldr	r3, [r4, #16]
   49954:	ldr	r2, [sl]
   49958:	add	fp, sp, #24
   4995c:	mov	r1, fp
   49960:	mov	r0, r5
   49964:	bl	1f368 <ReadCompressedDataSlab2>
   49968:	ldr	r3, [r4, #52]	; 0x34
   4996c:	mov	r2, #0
   49970:	ldr	r1, [r3]
   49974:	ldr	r0, [r5]
   49978:	bl	1714 <fseek@plt>
   4997c:	mov	r0, fp
   49980:	bl	1618 <inflateEnd@plt>
   49984:	ldr	r3, [r4, #52]	; 0x34
   49988:	ldr	r1, [r3, #12]
   4998c:	mov	r0, fp
   49990:	bl	1624 <inflateCopy@plt>
   49994:	subs	fp, r0, #0
   49998:	bne	49a2c <Mat_VarReadData5+0x5bc>
   4999c:	mov	r2, r6
   499a0:	add	r6, sp, #24
   499a4:	mov	r1, r6
   499a8:	mov	r0, r5
   499ac:	bl	227c <InflateSkip>
   499b0:	mov	r3, #0
   499b4:	str	r3, [sp, #28]
   499b8:	add	r2, sp, #80	; 0x50
   499bc:	mov	r1, r6
   499c0:	mov	r0, r5
   499c4:	bl	32c0 <InflateDataType>
   499c8:	ldr	r3, [r5, #20]
   499cc:	cmp	r3, #0
   499d0:	bne	49a48 <Mat_VarReadData5+0x5d8>
   499d4:	ldr	r3, [sp, #80]	; 0x50
   499d8:	uxtb	r2, r3
   499dc:	cmp	r2, #24
   499e0:	movgt	r2, #0
   499e4:	str	r2, [r4, #8]
   499e8:	lsrs	r3, r3, #16
   499ec:	beq	49a54 <Mat_VarReadData5+0x5e4>
   499f0:	ldr	r2, [sl, #4]
   499f4:	str	r9, [sp, #16]
   499f8:	str	r8, [sp, #12]
   499fc:	str	r7, [sp, #8]
   49a00:	ldr	r3, [r4, #32]
   49a04:	str	r3, [sp, #4]
   49a08:	ldr	r3, [r4, #8]
   49a0c:	str	r3, [sp]
   49a10:	ldr	r3, [r4, #16]
   49a14:	add	r1, sp, #24
   49a18:	mov	r0, r5
   49a1c:	bl	1f368 <ReadCompressedDataSlab2>
   49a20:	add	r0, sp, #24
   49a24:	bl	1618 <inflateEnd@plt>
   49a28:	b	49c2c <Mat_VarReadData5+0x7bc>
   49a2c:	mov	r0, fp
   49a30:	bl	1558 <zError@plt>
   49a34:	mov	r1, r0
   49a38:	ldr	r0, [pc, #624]	; 49cb0 <Mat_VarReadData5+0x840>
   49a3c:	add	r0, pc, r0
   49a40:	bl	1690 <Mat_Critical@plt>
   49a44:	b	4999c <Mat_VarReadData5+0x52c>
   49a48:	add	r0, sp, #80	; 0x50
   49a4c:	bl	1a20 <Mat_int32Swap>
   49a50:	b	499d4 <Mat_VarReadData5+0x564>
   49a54:	mov	r2, #4
   49a58:	add	r1, sp, #24
   49a5c:	mov	r0, r5
   49a60:	bl	227c <InflateSkip>
   49a64:	b	499f0 <Mat_VarReadData5+0x580>
   49a68:	str	r9, [sp, #16]
   49a6c:	str	r8, [sp, #12]
   49a70:	str	r7, [sp, #8]
   49a74:	str	r2, [sp, #4]
   49a78:	ldr	r3, [r4, #8]
   49a7c:	str	r3, [sp]
   49a80:	ldr	r3, [r4, #16]
   49a84:	mov	r2, sl
   49a88:	add	r1, sp, #24
   49a8c:	mov	r0, r5
   49a90:	bl	1f368 <ReadCompressedDataSlab2>
   49a94:	b	49a20 <Mat_VarReadData5+0x5b0>
   49a98:	add	r0, sp, #80	; 0x50
   49a9c:	bl	1a20 <Mat_int32Swap>
   49aa0:	add	r0, sp, #84	; 0x54
   49aa4:	bl	1a20 <Mat_int32Swap>
   49aa8:	b	49544 <Mat_VarReadData5+0xd4>
   49aac:	mov	r2, #1
   49ab0:	mvn	r1, #3
   49ab4:	ldr	r0, [r5]
   49ab8:	bl	1714 <fseek@plt>
   49abc:	b	49560 <Mat_VarReadData5+0xf0>
   49ac0:	str	r9, [sp, #16]
   49ac4:	str	r8, [sp, #12]
   49ac8:	str	r7, [sp, #8]
   49acc:	ldr	r2, [r4, #32]
   49ad0:	str	r2, [sp, #4]
   49ad4:	str	r3, [sp]
   49ad8:	ldr	r3, [r4, #8]
   49adc:	ldr	r2, [r4, #16]
   49ae0:	mov	r1, sl
   49ae4:	mov	r0, r5
   49ae8:	bl	15b28 <ReadDataSlabN>
   49aec:	b	49af8 <Mat_VarReadData5+0x688>
   49af0:	cmp	r2, #1
   49af4:	beq	49b20 <Mat_VarReadData5+0x6b0>
   49af8:	ldr	r0, [r4, #16]
   49afc:	bl	4cfb0 <ClassType2DataType>
   49b00:	str	r0, [r4, #8]
   49b04:	ldr	r0, [r4, #16]
   49b08:	bl	16f0 <Mat_SizeOfClass@plt>
   49b0c:	str	r0, [r4, #12]
   49b10:	mov	fp, #0
   49b14:	mov	r0, fp
   49b18:	add	sp, sp, #92	; 0x5c
   49b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49b20:	ldr	fp, [r4, #20]
   49b24:	cmp	fp, #0
   49b28:	beq	49c74 <Mat_VarReadData5+0x804>
   49b2c:	str	r9, [sp, #20]
   49b30:	str	r8, [sp, #16]
   49b34:	str	r7, [sp, #12]
   49b38:	ldr	r2, [r4, #32]
   49b3c:	str	r2, [sp, #8]
   49b40:	str	r3, [sp, #4]
   49b44:	ldr	r3, [r4, #8]
   49b48:	str	r3, [sp]
   49b4c:	ldr	r3, [r4, #16]
   49b50:	ldr	r2, [sl]
   49b54:	add	fp, sp, #24
   49b58:	mov	r1, fp
   49b5c:	mov	r0, r5
   49b60:	bl	19778 <ReadCompressedDataSlabN>
   49b64:	ldr	r3, [r4, #52]	; 0x34
   49b68:	mov	r2, #0
   49b6c:	ldr	r1, [r3]
   49b70:	ldr	r0, [r5]
   49b74:	bl	1714 <fseek@plt>
   49b78:	mov	r0, fp
   49b7c:	bl	1618 <inflateEnd@plt>
   49b80:	ldr	r3, [r4, #52]	; 0x34
   49b84:	ldr	r1, [r3, #12]
   49b88:	mov	r0, fp
   49b8c:	bl	1624 <inflateCopy@plt>
   49b90:	subs	fp, r0, #0
   49b94:	bne	49c38 <Mat_VarReadData5+0x7c8>
   49b98:	mov	r2, r6
   49b9c:	add	r6, sp, #24
   49ba0:	mov	r1, r6
   49ba4:	mov	r0, r5
   49ba8:	bl	227c <InflateSkip>
   49bac:	mov	r3, #0
   49bb0:	str	r3, [sp, #28]
   49bb4:	add	r2, sp, #80	; 0x50
   49bb8:	mov	r1, r6
   49bbc:	mov	r0, r5
   49bc0:	bl	32c0 <InflateDataType>
   49bc4:	ldr	r3, [r5, #20]
   49bc8:	cmp	r3, #0
   49bcc:	bne	49c54 <Mat_VarReadData5+0x7e4>
   49bd0:	ldr	r3, [sp, #80]	; 0x50
   49bd4:	uxtb	r2, r3
   49bd8:	cmp	r2, #24
   49bdc:	movgt	r2, #0
   49be0:	str	r2, [r4, #8]
   49be4:	lsrs	r3, r3, #16
   49be8:	beq	49c60 <Mat_VarReadData5+0x7f0>
   49bec:	ldr	r2, [sl, #4]
   49bf0:	str	r9, [sp, #20]
   49bf4:	str	r8, [sp, #16]
   49bf8:	str	r7, [sp, #12]
   49bfc:	ldr	r3, [r4, #32]
   49c00:	str	r3, [sp, #8]
   49c04:	ldr	r3, [r4, #4]
   49c08:	str	r3, [sp, #4]
   49c0c:	ldr	r3, [r4, #8]
   49c10:	str	r3, [sp]
   49c14:	ldr	r3, [r4, #16]
   49c18:	add	r1, sp, #24
   49c1c:	mov	r0, r5
   49c20:	bl	19778 <ReadCompressedDataSlabN>
   49c24:	add	r0, sp, #24
   49c28:	bl	1618 <inflateEnd@plt>
   49c2c:	cmp	fp, #0
   49c30:	bne	49b14 <Mat_VarReadData5+0x6a4>
   49c34:	b	49af8 <Mat_VarReadData5+0x688>
   49c38:	mov	r0, fp
   49c3c:	bl	1558 <zError@plt>
   49c40:	mov	r1, r0
   49c44:	ldr	r0, [pc, #104]	; 49cb4 <Mat_VarReadData5+0x844>
   49c48:	add	r0, pc, r0
   49c4c:	bl	1690 <Mat_Critical@plt>
   49c50:	b	49b98 <Mat_VarReadData5+0x728>
   49c54:	add	r0, sp, #80	; 0x50
   49c58:	bl	1a20 <Mat_int32Swap>
   49c5c:	b	49bd0 <Mat_VarReadData5+0x760>
   49c60:	mov	r2, #4
   49c64:	add	r1, sp, #24
   49c68:	mov	r0, r5
   49c6c:	bl	227c <InflateSkip>
   49c70:	b	49bec <Mat_VarReadData5+0x77c>
   49c74:	str	r9, [sp, #20]
   49c78:	str	r8, [sp, #16]
   49c7c:	str	r7, [sp, #12]
   49c80:	ldr	r2, [r4, #32]
   49c84:	str	r2, [sp, #8]
   49c88:	str	r3, [sp, #4]
   49c8c:	ldr	r3, [r4, #8]
   49c90:	str	r3, [sp]
   49c94:	ldr	r3, [r4, #16]
   49c98:	mov	r2, sl
   49c9c:	add	r1, sp, #24
   49ca0:	mov	r0, r5
   49ca4:	bl	19778 <ReadCompressedDataSlabN>
   49ca8:	b	49c24 <Mat_VarReadData5+0x7b4>
   49cac:	.word	0x00008da4
   49cb0:	.word	0x00008b04
   49cb4:	.word	0x000088f8

00049cb8 <Mat_VarReadDataLinear5>:
   49cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49cbc:	sub	sp, sp, #92	; 0x5c
   49cc0:	ldr	sl, [sp, #128]	; 0x80
   49cc4:	ldr	fp, [sp, #132]	; 0x84
   49cc8:	mov	ip, #1
   49ccc:	str	ip, [sp, #20]
   49cd0:	ldr	ip, [r0, #16]
   49cd4:	cmp	ip, #16
   49cd8:	beq	4a1b4 <Mat_VarReadDataLinear5+0x4fc>
   49cdc:	mov	r6, r3
   49ce0:	mov	r7, r2
   49ce4:	mov	r4, r1
   49ce8:	mov	r5, r0
   49cec:	ldr	r3, [r1, #52]	; 0x34
   49cf0:	mov	r2, #0
   49cf4:	ldr	r1, [r3]
   49cf8:	ldr	r0, [r0]
   49cfc:	bl	1714 <fseek@plt>
   49d00:	ldr	r3, [r4, #48]	; 0x30
   49d04:	cmp	r3, #0
   49d08:	beq	49df0 <Mat_VarReadDataLinear5+0x138>
   49d0c:	cmp	r3, #1
   49d10:	movne	r8, #0
   49d14:	beq	49e84 <Mat_VarReadDataLinear5+0x1cc>
   49d18:	add	r1, sp, #20
   49d1c:	mov	r0, r4
   49d20:	bl	4d06c <SafeMulDims>
   49d24:	subs	r9, r0, #0
   49d28:	bne	49fd8 <Mat_VarReadDataLinear5+0x320>
   49d2c:	sub	r3, fp, #1
   49d30:	mla	r3, sl, r3, r6
   49d34:	add	r3, r3, #1
   49d38:	ldr	r2, [sp, #20]
   49d3c:	cmp	r3, r2
   49d40:	movhi	r9, #1
   49d44:	bhi	4a03c <Mat_VarReadDataLinear5+0x384>
   49d48:	ldr	r3, [r4, #48]	; 0x30
   49d4c:	cmp	r3, #0
   49d50:	bne	4a034 <Mat_VarReadDataLinear5+0x37c>
   49d54:	ldr	r3, [r4, #20]
   49d58:	cmp	r3, #0
   49d5c:	beq	4a010 <Mat_VarReadDataLinear5+0x358>
   49d60:	str	fp, [sp, #8]
   49d64:	str	sl, [sp, #4]
   49d68:	str	r6, [sp]
   49d6c:	ldr	r3, [r4, #8]
   49d70:	ldr	r2, [r4, #16]
   49d74:	ldr	r1, [r7]
   49d78:	mov	r0, r5
   49d7c:	bl	1d550 <ReadDataSlab1>
   49d80:	ldr	r3, [r4, #52]	; 0x34
   49d84:	ldr	r1, [r3]
   49d88:	mov	r2, #0
   49d8c:	add	r1, r8, r1
   49d90:	ldr	r0, [r5]
   49d94:	bl	1714 <fseek@plt>
   49d98:	ldr	r3, [r5]
   49d9c:	mov	r2, #2
   49da0:	mov	r1, #4
   49da4:	add	r0, sp, #80	; 0x50
   49da8:	bl	1588 <fread@plt>
   49dac:	ldr	r3, [r5, #20]
   49db0:	cmp	r3, #0
   49db4:	bne	49fe8 <Mat_VarReadDataLinear5+0x330>
   49db8:	ldr	r3, [sp, #80]	; 0x50
   49dbc:	uxtb	r2, r3
   49dc0:	str	r2, [r4, #8]
   49dc4:	lsrs	r3, r3, #16
   49dc8:	bne	49ffc <Mat_VarReadDataLinear5+0x344>
   49dcc:	ldr	r1, [r7, #4]
   49dd0:	str	fp, [sp, #8]
   49dd4:	str	sl, [sp, #4]
   49dd8:	str	r6, [sp]
   49ddc:	ldr	r3, [r4, #8]
   49de0:	ldr	r2, [r4, #16]
   49de4:	mov	r0, r5
   49de8:	bl	1d550 <ReadDataSlab1>
   49dec:	b	4a03c <Mat_VarReadDataLinear5+0x384>
   49df0:	ldr	r3, [r5]
   49df4:	mov	r2, #2
   49df8:	mov	r1, #4
   49dfc:	add	r0, sp, #80	; 0x50
   49e00:	bl	1588 <fread@plt>
   49e04:	ldr	r3, [r5, #20]
   49e08:	cmp	r3, #0
   49e0c:	bne	49e54 <Mat_VarReadDataLinear5+0x19c>
   49e10:	ldr	r3, [sp, #80]	; 0x50
   49e14:	uxtb	r2, r3
   49e18:	str	r2, [r4, #8]
   49e1c:	lsrs	r3, r3, #16
   49e20:	bne	49e68 <Mat_VarReadDataLinear5+0x1b0>
   49e24:	ldr	r8, [sp, #84]	; 0x54
   49e28:	add	r8, r8, #8
   49e2c:	tst	r8, #7
   49e30:	beq	49d18 <Mat_VarReadDataLinear5+0x60>
   49e34:	asr	r3, r8, #31
   49e38:	lsr	r2, r3, #29
   49e3c:	add	r3, r8, r2
   49e40:	and	r3, r3, #7
   49e44:	sub	r3, r3, r2
   49e48:	rsb	r3, r3, #8
   49e4c:	add	r8, r8, r3
   49e50:	b	49d18 <Mat_VarReadDataLinear5+0x60>
   49e54:	add	r0, sp, #80	; 0x50
   49e58:	bl	1a20 <Mat_int32Swap>
   49e5c:	add	r0, sp, #84	; 0x54
   49e60:	bl	1a20 <Mat_int32Swap>
   49e64:	b	49e10 <Mat_VarReadDataLinear5+0x158>
   49e68:	mov	r2, #1
   49e6c:	mvn	r1, #3
   49e70:	ldr	r0, [r5]
   49e74:	bl	1714 <fseek@plt>
   49e78:	ldrsh	r8, [sp, #82]	; 0x52
   49e7c:	add	r8, r8, #4
   49e80:	b	49e2c <Mat_VarReadDataLinear5+0x174>
   49e84:	ldr	r3, [r4, #52]	; 0x34
   49e88:	ldr	r8, [r3, #16]
   49e8c:	cmp	r8, #0
   49e90:	beq	49f18 <Mat_VarReadDataLinear5+0x260>
   49e94:	ldr	r3, [r4, #20]
   49e98:	cmp	r3, #0
   49e9c:	beq	49ef0 <Mat_VarReadDataLinear5+0x238>
   49ea0:	ldr	r0, [r8]
   49ea4:	str	fp, [sp, #8]
   49ea8:	str	sl, [sp, #4]
   49eac:	str	r6, [sp]
   49eb0:	ldr	r3, [r4, #8]
   49eb4:	ldr	r2, [r4, #16]
   49eb8:	ldr	r1, [r7]
   49ebc:	bl	43560 <GetDataLinear>
   49ec0:	subs	r9, r0, #0
   49ec4:	bne	4a054 <Mat_VarReadDataLinear5+0x39c>
   49ec8:	ldr	r3, [r4, #8]
   49ecc:	ldr	r2, [r4, #16]
   49ed0:	ldr	r1, [r7, #4]
   49ed4:	ldr	r0, [r8, #4]
   49ed8:	str	fp, [sp, #8]
   49edc:	str	sl, [sp, #4]
   49ee0:	str	r6, [sp]
   49ee4:	bl	43560 <GetDataLinear>
   49ee8:	mov	r9, r0
   49eec:	b	4a054 <Mat_VarReadDataLinear5+0x39c>
   49ef0:	ldr	r3, [r4, #8]
   49ef4:	ldr	r2, [r4, #16]
   49ef8:	str	fp, [sp, #8]
   49efc:	str	sl, [sp, #4]
   49f00:	str	r6, [sp]
   49f04:	mov	r1, r7
   49f08:	mov	r0, r8
   49f0c:	bl	43560 <GetDataLinear>
   49f10:	mov	r9, r0
   49f14:	b	4a054 <Mat_VarReadDataLinear5+0x39c>
   49f18:	ldr	r3, [r3, #12]
   49f1c:	mov	r2, #0
   49f20:	str	r2, [r3, #4]
   49f24:	ldr	r3, [r4, #52]	; 0x34
   49f28:	ldr	r1, [r3, #12]
   49f2c:	add	r0, sp, #24
   49f30:	bl	1624 <inflateCopy@plt>
   49f34:	cmp	r0, #0
   49f38:	bne	49f9c <Mat_VarReadDataLinear5+0x2e4>
   49f3c:	add	r2, sp, #80	; 0x50
   49f40:	add	r1, sp, #24
   49f44:	mov	r0, r5
   49f48:	bl	32c0 <InflateDataType>
   49f4c:	ldr	r3, [r5, #20]
   49f50:	cmp	r3, #0
   49f54:	bne	49fb8 <Mat_VarReadDataLinear5+0x300>
   49f58:	ldr	r3, [sp, #80]	; 0x50
   49f5c:	uxtb	r2, r3
   49f60:	str	r2, [r4, #8]
   49f64:	lsrs	r2, r3, #16
   49f68:	asrne	r3, r3, #16
   49f6c:	addne	r8, r3, #4
   49f70:	bne	49e2c <Mat_VarReadDataLinear5+0x174>
   49f74:	add	r2, sp, #84	; 0x54
   49f78:	add	r1, sp, #24
   49f7c:	mov	r0, r5
   49f80:	bl	32c0 <InflateDataType>
   49f84:	ldr	r3, [r5, #20]
   49f88:	cmp	r3, #0
   49f8c:	bne	49fcc <Mat_VarReadDataLinear5+0x314>
   49f90:	ldr	r8, [sp, #84]	; 0x54
   49f94:	add	r8, r8, #8
   49f98:	b	49e2c <Mat_VarReadDataLinear5+0x174>
   49f9c:	bl	1558 <zError@plt>
   49fa0:	mov	r1, r0
   49fa4:	ldr	r0, [pc, #528]	; 4a1bc <Mat_VarReadDataLinear5+0x504>
   49fa8:	add	r0, pc, r0
   49fac:	bl	1690 <Mat_Critical@plt>
   49fb0:	mvn	r9, #0
   49fb4:	b	4a054 <Mat_VarReadDataLinear5+0x39c>
   49fb8:	add	r0, sp, #80	; 0x50
   49fbc:	bl	1a20 <Mat_int32Swap>
   49fc0:	add	r0, sp, #84	; 0x54
   49fc4:	bl	1a20 <Mat_int32Swap>
   49fc8:	b	49f58 <Mat_VarReadDataLinear5+0x2a0>
   49fcc:	add	r0, sp, #84	; 0x54
   49fd0:	bl	1a20 <Mat_int32Swap>
   49fd4:	b	49f90 <Mat_VarReadDataLinear5+0x2d8>
   49fd8:	ldr	r0, [pc, #480]	; 4a1c0 <Mat_VarReadDataLinear5+0x508>
   49fdc:	add	r0, pc, r0
   49fe0:	bl	1690 <Mat_Critical@plt>
   49fe4:	b	49d2c <Mat_VarReadDataLinear5+0x74>
   49fe8:	add	r0, sp, #80	; 0x50
   49fec:	bl	1a20 <Mat_int32Swap>
   49ff0:	add	r0, sp, #84	; 0x54
   49ff4:	bl	1a20 <Mat_int32Swap>
   49ff8:	b	49db8 <Mat_VarReadDataLinear5+0x100>
   49ffc:	mov	r2, #1
   4a000:	mvn	r1, #3
   4a004:	ldr	r0, [r5]
   4a008:	bl	1714 <fseek@plt>
   4a00c:	b	49dcc <Mat_VarReadDataLinear5+0x114>
   4a010:	str	fp, [sp, #8]
   4a014:	str	sl, [sp, #4]
   4a018:	str	r6, [sp]
   4a01c:	ldr	r3, [r4, #8]
   4a020:	ldr	r2, [r4, #16]
   4a024:	mov	r1, r7
   4a028:	mov	r0, r5
   4a02c:	bl	1d550 <ReadDataSlab1>
   4a030:	b	4a03c <Mat_VarReadDataLinear5+0x384>
   4a034:	cmp	r3, #1
   4a038:	beq	4a060 <Mat_VarReadDataLinear5+0x3a8>
   4a03c:	ldr	r0, [r4, #16]
   4a040:	bl	4cfb0 <ClassType2DataType>
   4a044:	str	r0, [r4, #8]
   4a048:	ldr	r0, [r4, #16]
   4a04c:	bl	16f0 <Mat_SizeOfClass@plt>
   4a050:	str	r0, [r4, #12]
   4a054:	mov	r0, r9
   4a058:	add	sp, sp, #92	; 0x5c
   4a05c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a060:	ldr	r3, [r4, #20]
   4a064:	cmp	r3, #0
   4a068:	beq	4a188 <Mat_VarReadDataLinear5+0x4d0>
   4a06c:	str	fp, [sp, #12]
   4a070:	str	sl, [sp, #8]
   4a074:	str	r6, [sp, #4]
   4a078:	ldr	r3, [r4, #8]
   4a07c:	str	r3, [sp]
   4a080:	ldr	r3, [r4, #16]
   4a084:	ldr	r2, [r7]
   4a088:	add	r9, sp, #24
   4a08c:	mov	r1, r9
   4a090:	mov	r0, r5
   4a094:	bl	1ed50 <ReadCompressedDataSlab1>
   4a098:	ldr	r3, [r4, #52]	; 0x34
   4a09c:	mov	r2, #0
   4a0a0:	ldr	r1, [r3]
   4a0a4:	ldr	r0, [r5]
   4a0a8:	bl	1714 <fseek@plt>
   4a0ac:	mov	r0, r9
   4a0b0:	bl	1618 <inflateEnd@plt>
   4a0b4:	ldr	r3, [r4, #52]	; 0x34
   4a0b8:	ldr	r1, [r3, #12]
   4a0bc:	mov	r0, r9
   4a0c0:	bl	1624 <inflateCopy@plt>
   4a0c4:	subs	r9, r0, #0
   4a0c8:	bne	4a14c <Mat_VarReadDataLinear5+0x494>
   4a0cc:	mov	r2, r8
   4a0d0:	add	r8, sp, #24
   4a0d4:	mov	r1, r8
   4a0d8:	mov	r0, r5
   4a0dc:	bl	227c <InflateSkip>
   4a0e0:	mov	r3, #0
   4a0e4:	str	r3, [sp, #28]
   4a0e8:	add	r2, sp, #80	; 0x50
   4a0ec:	mov	r1, r8
   4a0f0:	mov	r0, r5
   4a0f4:	bl	32c0 <InflateDataType>
   4a0f8:	ldr	r3, [r5, #20]
   4a0fc:	cmp	r3, #0
   4a100:	bne	4a168 <Mat_VarReadDataLinear5+0x4b0>
   4a104:	ldr	r3, [sp, #80]	; 0x50
   4a108:	uxtb	r2, r3
   4a10c:	str	r2, [r4, #8]
   4a110:	lsrs	r3, r3, #16
   4a114:	beq	4a174 <Mat_VarReadDataLinear5+0x4bc>
   4a118:	ldr	r2, [r7, #4]
   4a11c:	str	fp, [sp, #12]
   4a120:	str	sl, [sp, #8]
   4a124:	str	r6, [sp, #4]
   4a128:	ldr	r3, [r4, #8]
   4a12c:	str	r3, [sp]
   4a130:	ldr	r3, [r4, #16]
   4a134:	add	r1, sp, #24
   4a138:	mov	r0, r5
   4a13c:	bl	1ed50 <ReadCompressedDataSlab1>
   4a140:	add	r0, sp, #24
   4a144:	bl	1618 <inflateEnd@plt>
   4a148:	b	4a03c <Mat_VarReadDataLinear5+0x384>
   4a14c:	mov	r0, r9
   4a150:	bl	1558 <zError@plt>
   4a154:	mov	r1, r0
   4a158:	ldr	r0, [pc, #100]	; 4a1c4 <Mat_VarReadDataLinear5+0x50c>
   4a15c:	add	r0, pc, r0
   4a160:	bl	1690 <Mat_Critical@plt>
   4a164:	b	4a0cc <Mat_VarReadDataLinear5+0x414>
   4a168:	add	r0, sp, #80	; 0x50
   4a16c:	bl	1a20 <Mat_int32Swap>
   4a170:	b	4a104 <Mat_VarReadDataLinear5+0x44c>
   4a174:	mov	r2, #4
   4a178:	add	r1, sp, #24
   4a17c:	mov	r0, r5
   4a180:	bl	227c <InflateSkip>
   4a184:	b	4a118 <Mat_VarReadDataLinear5+0x460>
   4a188:	str	fp, [sp, #12]
   4a18c:	str	sl, [sp, #8]
   4a190:	str	r6, [sp, #4]
   4a194:	ldr	r3, [r4, #8]
   4a198:	str	r3, [sp]
   4a19c:	ldr	r3, [r4, #16]
   4a1a0:	mov	r2, r7
   4a1a4:	add	r1, sp, #24
   4a1a8:	mov	r0, r5
   4a1ac:	bl	1ed50 <ReadCompressedDataSlab1>
   4a1b0:	b	4a140 <Mat_VarReadDataLinear5+0x488>
   4a1b4:	mvn	r9, #0
   4a1b8:	b	4a054 <Mat_VarReadDataLinear5+0x39c>
   4a1bc:	.word	0x00008598
   4a1c0:	.word	0x00008328
   4a1c4:	.word	0x000083e4

0004a1c8 <Mat_VarWrite5>:
   4a1c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a1cc:	sub	sp, sp, #4096	; 0x1000
   4a1d0:	sub	sp, sp, #44	; 0x2c
   4a1d4:	mov	r6, r1
   4a1d8:	mov	r4, r2
   4a1dc:	mov	r3, #6
   4a1e0:	add	r2, sp, #4096	; 0x1000
   4a1e4:	add	r2, r2, #32
   4a1e8:	str	r3, [r2]
   4a1ec:	mov	r3, #5
   4a1f0:	add	r2, sp, #4096	; 0x1000
   4a1f4:	add	r2, r2, #28
   4a1f8:	str	r3, [r2]
   4a1fc:	mov	r3, #8
   4a200:	add	r2, sp, #4096	; 0x1000
   4a204:	add	r2, r2, #24
   4a208:	str	r3, [r2]
   4a20c:	mov	r3, #0
   4a210:	add	r2, sp, #4096	; 0x1000
   4a214:	add	r2, r2, #20
   4a218:	str	r3, [r2]
   4a21c:	mov	r2, #14
   4a220:	add	r1, sp, #4096	; 0x1000
   4a224:	add	r1, r1, #16
   4a228:	str	r2, [r1]
   4a22c:	add	r2, sp, #4096	; 0x1000
   4a230:	add	r2, r2, #8
   4a234:	str	r3, [r2]
   4a238:	subs	r5, r0, #0
   4a23c:	beq	4abac <Mat_VarWrite5+0x9e4>
   4a240:	mov	r2, #2
   4a244:	mov	r1, r3
   4a248:	ldr	r0, [r5]
   4a24c:	bl	1714 <fseek@plt>
   4a250:	cmp	r6, #0
   4a254:	beq	4abb4 <Mat_VarWrite5+0x9ec>
   4a258:	ldr	r3, [r6, #36]	; 0x24
   4a25c:	cmp	r3, #0
   4a260:	beq	4abbc <Mat_VarWrite5+0x9f4>
   4a264:	cmp	r4, #0
   4a268:	beq	4a2ac <Mat_VarWrite5+0xe4>
   4a26c:	cmp	r4, #1
   4a270:	movne	r7, #0
   4a274:	beq	4a630 <Mat_VarWrite5+0x468>
   4a278:	ldr	r0, [r5]
   4a27c:	bl	151c <ftell@plt>
   4a280:	mov	r4, r0
   4a284:	cmn	r0, #1
   4a288:	cmnne	r7, #1
   4a28c:	bne	4ab5c <Mat_VarWrite5+0x994>
   4a290:	ldr	r0, [pc, #2348]	; 4abc4 <Mat_VarWrite5+0x9fc>
   4a294:	add	r0, pc, r0
   4a298:	bl	1690 <Mat_Critical@plt>
   4a29c:	mov	r0, #0
   4a2a0:	add	sp, sp, #4096	; 0x1000
   4a2a4:	add	sp, sp, #44	; 0x2c
   4a2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a2ac:	ldr	r3, [r5]
   4a2b0:	mov	r2, #1
   4a2b4:	mov	r1, #4
   4a2b8:	add	r0, sp, #4096	; 0x1000
   4a2bc:	add	r0, r0, #16
   4a2c0:	bl	157c <fwrite@plt>
   4a2c4:	ldr	r3, [r5]
   4a2c8:	mov	r2, #1
   4a2cc:	mov	r1, #4
   4a2d0:	add	r0, sp, #4096	; 0x1000
   4a2d4:	add	r0, r0, #20
   4a2d8:	bl	157c <fwrite@plt>
   4a2dc:	ldr	r0, [r5]
   4a2e0:	bl	151c <ftell@plt>
   4a2e4:	mov	r7, r0
   4a2e8:	ldr	r2, [r6, #16]
   4a2ec:	uxtb	r3, r2
   4a2f0:	add	r1, sp, #4096	; 0x1000
   4a2f4:	add	r1, r1, #36	; 0x24
   4a2f8:	str	r3, [r1]
   4a2fc:	ldr	r1, [r6, #20]
   4a300:	cmp	r1, #0
   4a304:	orrne	r3, r3, #2048	; 0x800
   4a308:	addne	r1, sp, #4096	; 0x1000
   4a30c:	addne	r1, r1, #36	; 0x24
   4a310:	strne	r3, [r1]
   4a314:	ldr	r3, [r6, #24]
   4a318:	cmp	r3, #0
   4a31c:	beq	4a33c <Mat_VarWrite5+0x174>
   4a320:	add	r3, sp, #4096	; 0x1000
   4a324:	add	r3, r3, #36	; 0x24
   4a328:	ldr	r3, [r3]
   4a32c:	orr	r3, r3, #1024	; 0x400
   4a330:	add	r1, sp, #4096	; 0x1000
   4a334:	add	r1, r1, #36	; 0x24
   4a338:	str	r3, [r1]
   4a33c:	ldr	r3, [r6, #28]
   4a340:	cmp	r3, #0
   4a344:	beq	4a364 <Mat_VarWrite5+0x19c>
   4a348:	add	r3, sp, #4096	; 0x1000
   4a34c:	add	r3, r3, #36	; 0x24
   4a350:	ldr	r3, [r3]
   4a354:	orr	r3, r3, #512	; 0x200
   4a358:	add	r1, sp, #4096	; 0x1000
   4a35c:	add	r1, r1, #36	; 0x24
   4a360:	str	r3, [r1]
   4a364:	cmp	r2, #5
   4a368:	ldreq	r3, [r6, #40]	; 0x28
   4a36c:	ldreq	r3, [r3]
   4a370:	addeq	r2, sp, #4096	; 0x1000
   4a374:	addeq	r2, r2, #8
   4a378:	streq	r3, [r2]
   4a37c:	ldr	r3, [r5]
   4a380:	mov	r2, #1
   4a384:	mov	r1, #4
   4a388:	add	r0, sp, #4096	; 0x1000
   4a38c:	add	r0, r0, #32
   4a390:	bl	157c <fwrite@plt>
   4a394:	ldr	r3, [r5]
   4a398:	mov	r2, #1
   4a39c:	mov	r1, #4
   4a3a0:	add	r0, sp, #4096	; 0x1000
   4a3a4:	add	r0, r0, #24
   4a3a8:	bl	157c <fwrite@plt>
   4a3ac:	ldr	r3, [r5]
   4a3b0:	mov	r2, #1
   4a3b4:	mov	r1, #4
   4a3b8:	add	r0, sp, #4096	; 0x1000
   4a3bc:	add	r0, r0, #36	; 0x24
   4a3c0:	bl	157c <fwrite@plt>
   4a3c4:	ldr	r3, [r5]
   4a3c8:	mov	r2, #1
   4a3cc:	mov	r1, #4
   4a3d0:	add	r0, sp, #4096	; 0x1000
   4a3d4:	add	r0, r0, #8
   4a3d8:	bl	157c <fwrite@plt>
   4a3dc:	ldr	r3, [r6, #4]
   4a3e0:	lsl	r3, r3, #2
   4a3e4:	add	r2, sp, #4096	; 0x1000
   4a3e8:	add	r2, r2, #12
   4a3ec:	str	r3, [r2]
   4a3f0:	ldr	r3, [r5]
   4a3f4:	mov	r2, #1
   4a3f8:	mov	r1, #4
   4a3fc:	add	r0, sp, #4096	; 0x1000
   4a400:	add	r0, r0, #28
   4a404:	bl	157c <fwrite@plt>
   4a408:	ldr	r3, [r5]
   4a40c:	mov	r2, #1
   4a410:	mov	r1, #4
   4a414:	add	r0, sp, #4096	; 0x1000
   4a418:	add	r0, r0, #12
   4a41c:	bl	157c <fwrite@plt>
   4a420:	ldr	r3, [r6, #4]
   4a424:	cmp	r3, #0
   4a428:	ble	4a46c <Mat_VarWrite5+0x2a4>
   4a42c:	add	sl, sp, #2048	; 0x800
   4a430:	add	sl, sl, #8
   4a434:	mov	r9, #1
   4a438:	mov	r8, #4
   4a43c:	ldr	r3, [r6, #32]
   4a440:	ldr	r3, [r3, r4, lsl #2]
   4a444:	str	r3, [sp, #2056]	; 0x808
   4a448:	ldr	r3, [r5]
   4a44c:	mov	r2, r9
   4a450:	mov	r1, r8
   4a454:	mov	r0, sl
   4a458:	bl	157c <fwrite@plt>
   4a45c:	add	r4, r4, #1
   4a460:	ldr	r3, [r6, #4]
   4a464:	cmp	r3, r4
   4a468:	bgt	4a43c <Mat_VarWrite5+0x274>
   4a46c:	tst	r3, #1
   4a470:	bne	4a544 <Mat_VarWrite5+0x37c>
   4a474:	ldr	r4, [r6, #36]	; 0x24
   4a478:	mov	r0, r4
   4a47c:	bl	1630 <strlen@plt>
   4a480:	cmp	r0, #4
   4a484:	bhi	4a560 <Mat_VarWrite5+0x398>
   4a488:	mov	r9, #1
   4a48c:	str	r9, [sp, #2056]	; 0x808
   4a490:	mov	r0, r4
   4a494:	bl	1630 <strlen@plt>
   4a498:	mov	r8, r0
   4a49c:	mov	r4, r0
   4a4a0:	mov	r2, #0
   4a4a4:	strb	r2, [sp, #8]
   4a4a8:	lsl	r3, r0, #16
   4a4ac:	orr	r3, r3, r9
   4a4b0:	add	r0, sp, #4096	; 0x1000
   4a4b4:	add	r0, r0, #40	; 0x28
   4a4b8:	str	r3, [r0, #-2080]!	; 0xfffff7e0
   4a4bc:	ldr	r3, [r5]
   4a4c0:	mov	r2, r9
   4a4c4:	mov	r1, #4
   4a4c8:	bl	157c <fwrite@plt>
   4a4cc:	ldr	r3, [r5]
   4a4d0:	mov	r2, r8
   4a4d4:	mov	r1, r9
   4a4d8:	ldr	r0, [r6, #36]	; 0x24
   4a4dc:	bl	157c <fwrite@plt>
   4a4e0:	cmp	r8, #3
   4a4e4:	bgt	4a50c <Mat_VarWrite5+0x344>
   4a4e8:	add	r8, sp, #8
   4a4ec:	ldr	r3, [r5]
   4a4f0:	mov	r2, r9
   4a4f4:	mov	r1, r9
   4a4f8:	mov	r0, r8
   4a4fc:	bl	157c <fwrite@plt>
   4a500:	add	r4, r4, #1
   4a504:	cmp	r4, #4
   4a508:	bne	4a4ec <Mat_VarWrite5+0x324>
   4a50c:	ldr	r4, [r6, #52]	; 0x34
   4a510:	cmp	r4, #0
   4a514:	beq	4a624 <Mat_VarWrite5+0x45c>
   4a518:	ldr	r0, [r5]
   4a51c:	bl	151c <ftell@plt>
   4a520:	str	r0, [r4]
   4a524:	ldr	r3, [r6, #52]	; 0x34
   4a528:	ldr	r3, [r3]
   4a52c:	cmn	r3, #1
   4a530:	beq	4a614 <Mat_VarWrite5+0x44c>
   4a534:	mov	r1, r6
   4a538:	mov	r0, r5
   4a53c:	bl	43cf4 <WriteType>
   4a540:	b	4a278 <Mat_VarWrite5+0xb0>
   4a544:	ldr	r3, [r5]
   4a548:	mov	r2, #1
   4a54c:	mov	r1, #4
   4a550:	add	r0, sp, #4096	; 0x1000
   4a554:	add	r0, r0, #20
   4a558:	bl	157c <fwrite@plt>
   4a55c:	b	4a474 <Mat_VarWrite5+0x2ac>
   4a560:	mov	r9, #1
   4a564:	add	r8, sp, #40	; 0x28
   4a568:	str	r9, [sp, #8]
   4a56c:	mov	r0, r4
   4a570:	bl	1630 <strlen@plt>
   4a574:	add	r4, sp, #4096	; 0x1000
   4a578:	add	r4, r4, #40	; 0x28
   4a57c:	str	r0, [r4, #-2080]!	; 0xfffff7e0
   4a580:	mov	r3, #0
   4a584:	strb	r3, [r8, #-33]	; 0xffffffdf
   4a588:	ldr	r3, [r5]
   4a58c:	mov	r2, r9
   4a590:	mov	r1, #4
   4a594:	sub	r0, r8, #32
   4a598:	bl	157c <fwrite@plt>
   4a59c:	ldr	r3, [r5]
   4a5a0:	mov	r2, r9
   4a5a4:	mov	r1, #4
   4a5a8:	mov	r0, r4
   4a5ac:	bl	157c <fwrite@plt>
   4a5b0:	ldr	r3, [r5]
   4a5b4:	ldr	r2, [sp, #2056]	; 0x808
   4a5b8:	mov	r1, r9
   4a5bc:	ldr	r0, [r6, #36]	; 0x24
   4a5c0:	bl	157c <fwrite@plt>
   4a5c4:	ldr	r3, [sp, #2056]	; 0x808
   4a5c8:	tst	r3, #7
   4a5cc:	beq	4a50c <Mat_VarWrite5+0x344>
   4a5d0:	asr	r2, r3, #31
   4a5d4:	lsr	r2, r2, #29
   4a5d8:	add	r4, r3, r2
   4a5dc:	and	r4, r4, #7
   4a5e0:	sub	r4, r4, r2
   4a5e4:	cmp	r4, #7
   4a5e8:	bgt	4a50c <Mat_VarWrite5+0x344>
   4a5ec:	add	r8, sp, #7
   4a5f0:	ldr	r3, [r5]
   4a5f4:	mov	r2, r9
   4a5f8:	mov	r1, r9
   4a5fc:	mov	r0, r8
   4a600:	bl	157c <fwrite@plt>
   4a604:	add	r4, r4, #1
   4a608:	cmp	r4, #8
   4a60c:	bne	4a5f0 <Mat_VarWrite5+0x428>
   4a610:	b	4a50c <Mat_VarWrite5+0x344>
   4a614:	ldr	r0, [pc, #1452]	; 4abc8 <Mat_VarWrite5+0xa00>
   4a618:	add	r0, pc, r0
   4a61c:	bl	1690 <Mat_Critical@plt>
   4a620:	b	4a534 <Mat_VarWrite5+0x36c>
   4a624:	mov	r3, #0
   4a628:	str	r3, [r6, #16]
   4a62c:	b	4a534 <Mat_VarWrite5+0x36c>
   4a630:	mov	r2, #2048	; 0x800
   4a634:	mov	r1, #0
   4a638:	add	r0, sp, #2048	; 0x800
   4a63c:	add	r0, r0, #8
   4a640:	bl	166c <memset@plt>
   4a644:	mov	r1, #56	; 0x38
   4a648:	mov	r0, #1
   4a64c:	bl	1468 <calloc@plt>
   4a650:	subs	r4, r0, #0
   4a654:	beq	4aa7c <Mat_VarWrite5+0x8b4>
   4a658:	mov	r3, #56	; 0x38
   4a65c:	ldr	r2, [pc, #1384]	; 4abcc <Mat_VarWrite5+0xa04>
   4a660:	add	r2, pc, r2
   4a664:	mvn	r1, #0
   4a668:	mov	r0, r4
   4a66c:	bl	15b8 <deflateInit_@plt>
   4a670:	subs	fp, r0, #0
   4a674:	bne	4aa5c <Mat_VarWrite5+0x894>
   4a678:	add	r0, sp, #4096	; 0x1000
   4a67c:	add	r0, r0, #40	; 0x28
   4a680:	mov	r3, #15
   4a684:	str	r3, [r0, #-24]!	; 0xffffffe8
   4a688:	ldr	r3, [r5]
   4a68c:	mov	r2, #1
   4a690:	mov	r1, #4
   4a694:	bl	157c <fwrite@plt>
   4a698:	ldr	r3, [r5]
   4a69c:	mov	r2, #1
   4a6a0:	mov	r1, #4
   4a6a4:	add	r0, sp, #4096	; 0x1000
   4a6a8:	add	r0, r0, #20
   4a6ac:	bl	157c <fwrite@plt>
   4a6b0:	ldr	r0, [r5]
   4a6b4:	bl	151c <ftell@plt>
   4a6b8:	mov	r7, r0
   4a6bc:	ldr	r2, [r6, #16]
   4a6c0:	uxtb	r3, r2
   4a6c4:	add	r1, sp, #4096	; 0x1000
   4a6c8:	add	r1, r1, #36	; 0x24
   4a6cc:	str	r3, [r1]
   4a6d0:	ldr	r1, [r6, #20]
   4a6d4:	cmp	r1, #0
   4a6d8:	orrne	r3, r3, #2048	; 0x800
   4a6dc:	addne	r1, sp, #4096	; 0x1000
   4a6e0:	addne	r1, r1, #36	; 0x24
   4a6e4:	strne	r3, [r1]
   4a6e8:	ldr	r3, [r6, #24]
   4a6ec:	cmp	r3, #0
   4a6f0:	beq	4a710 <Mat_VarWrite5+0x548>
   4a6f4:	add	r3, sp, #4096	; 0x1000
   4a6f8:	add	r3, r3, #36	; 0x24
   4a6fc:	ldr	r3, [r3]
   4a700:	orr	r3, r3, #1024	; 0x400
   4a704:	add	r1, sp, #4096	; 0x1000
   4a708:	add	r1, r1, #36	; 0x24
   4a70c:	str	r3, [r1]
   4a710:	ldr	r3, [r6, #28]
   4a714:	cmp	r3, #0
   4a718:	beq	4a738 <Mat_VarWrite5+0x570>
   4a71c:	add	r3, sp, #4096	; 0x1000
   4a720:	add	r3, r3, #36	; 0x24
   4a724:	ldr	r3, [r3]
   4a728:	orr	r3, r3, #512	; 0x200
   4a72c:	add	r1, sp, #4096	; 0x1000
   4a730:	add	r1, r1, #36	; 0x24
   4a734:	str	r3, [r1]
   4a738:	cmp	r2, #5
   4a73c:	ldreq	r3, [r6, #40]	; 0x28
   4a740:	ldreq	r3, [r3]
   4a744:	addeq	r2, sp, #4096	; 0x1000
   4a748:	addeq	r2, r2, #8
   4a74c:	streq	r3, [r2]
   4a750:	mov	r3, #14
   4a754:	str	r3, [sp, #2056]	; 0x808
   4a758:	ldr	r0, [r6, #36]	; 0x24
   4a75c:	cmp	r0, #0
   4a760:	moveq	r8, #24
   4a764:	beq	4a788 <Mat_VarWrite5+0x5c0>
   4a768:	bl	1630 <strlen@plt>
   4a76c:	cmp	r0, #4
   4a770:	movls	r8, #24
   4a774:	bls	4a788 <Mat_VarWrite5+0x5c0>
   4a778:	tst	r0, #7
   4a77c:	bicne	r0, r0, #7
   4a780:	addne	r0, r0, #8
   4a784:	add	r8, r0, #24
   4a788:	mov	r0, r6
   4a78c:	bl	44f40 <GetTypeBufSize>
   4a790:	add	r0, r0, r8
   4a794:	str	r0, [sp, #2060]	; 0x80c
   4a798:	add	r3, sp, #2048	; 0x800
   4a79c:	add	r3, r3, #8
   4a7a0:	str	r3, [r4]
   4a7a4:	mov	r3, #8
   4a7a8:	str	r3, [r4, #4]
   4a7ac:	add	r8, sp, #8
   4a7b0:	mov	sl, #2048	; 0x800
   4a7b4:	mov	r9, #0
   4a7b8:	str	r8, [r4, #12]
   4a7bc:	str	sl, [r4, #16]
   4a7c0:	mov	r1, r9
   4a7c4:	mov	r0, r4
   4a7c8:	bl	1564 <deflate@plt>
   4a7cc:	ldr	r2, [r4, #16]
   4a7d0:	ldr	r3, [r5]
   4a7d4:	rsb	r2, r2, #2048	; 0x800
   4a7d8:	mov	r1, #1
   4a7dc:	mov	r0, r8
   4a7e0:	bl	157c <fwrite@plt>
   4a7e4:	ldr	r3, [r4, #16]
   4a7e8:	cmp	r3, #0
   4a7ec:	beq	4a7b8 <Mat_VarWrite5+0x5f0>
   4a7f0:	add	r3, sp, #4096	; 0x1000
   4a7f4:	add	r3, r3, #32
   4a7f8:	ldr	r3, [r3]
   4a7fc:	str	r3, [sp, #2056]	; 0x808
   4a800:	add	r3, sp, #4096	; 0x1000
   4a804:	add	r3, r3, #24
   4a808:	ldr	r3, [r3]
   4a80c:	str	r3, [sp, #2060]	; 0x80c
   4a810:	add	r3, sp, #4096	; 0x1000
   4a814:	add	r3, r3, #36	; 0x24
   4a818:	ldr	r3, [r3]
   4a81c:	str	r3, [sp, #2064]	; 0x810
   4a820:	add	r3, sp, #4096	; 0x1000
   4a824:	add	r3, r3, #8
   4a828:	ldr	r3, [r3]
   4a82c:	str	r3, [sp, #2068]	; 0x814
   4a830:	ldr	ip, [r6, #4]
   4a834:	lsl	r1, ip, #2
   4a838:	add	r3, sp, #4096	; 0x1000
   4a83c:	add	r3, r3, #12
   4a840:	str	r1, [r3]
   4a844:	add	r3, sp, #4096	; 0x1000
   4a848:	add	r3, r3, #28
   4a84c:	ldr	r3, [r3]
   4a850:	str	r3, [sp, #2072]	; 0x818
   4a854:	str	r1, [sp, #2076]	; 0x81c
   4a858:	cmp	ip, #0
   4a85c:	ble	4a890 <Mat_VarWrite5+0x6c8>
   4a860:	ldr	r2, [r6, #32]
   4a864:	sub	r2, r2, #4
   4a868:	add	r0, sp, #2048	; 0x800
   4a86c:	add	r0, r0, #8
   4a870:	add	r3, r0, #20
   4a874:	add	r1, r1, #20
   4a878:	add	r0, r0, r1
   4a87c:	ldr	r1, [r2, #4]!
   4a880:	str	r1, [r3, #4]!
   4a884:	cmp	r3, r0
   4a888:	bne	4a87c <Mat_VarWrite5+0x6b4>
   4a88c:	mov	fp, ip
   4a890:	tst	ip, #1
   4a894:	beq	4a8b8 <Mat_VarWrite5+0x6f0>
   4a898:	add	r3, sp, #4096	; 0x1000
   4a89c:	add	r3, r3, #40	; 0x28
   4a8a0:	add	r3, r3, fp, lsl #2
   4a8a4:	add	r2, sp, #4096	; 0x1000
   4a8a8:	add	r2, r2, #20
   4a8ac:	ldr	r2, [r2]
   4a8b0:	str	r2, [r3, #-2056]	; 0xfffff7f8
   4a8b4:	add	fp, fp, #1
   4a8b8:	add	r3, sp, #2048	; 0x800
   4a8bc:	add	r3, r3, #8
   4a8c0:	str	r3, [r4]
   4a8c4:	add	r3, fp, #6
   4a8c8:	lsl	r3, r3, #2
   4a8cc:	str	r3, [r4, #4]
   4a8d0:	add	r8, sp, #8
   4a8d4:	mov	fp, #2048	; 0x800
   4a8d8:	mov	sl, #0
   4a8dc:	mov	r9, #1
   4a8e0:	str	r8, [r4, #12]
   4a8e4:	str	fp, [r4, #16]
   4a8e8:	mov	r1, sl
   4a8ec:	mov	r0, r4
   4a8f0:	bl	1564 <deflate@plt>
   4a8f4:	ldr	r2, [r4, #16]
   4a8f8:	ldr	r3, [r5]
   4a8fc:	rsb	r2, r2, #2048	; 0x800
   4a900:	mov	r1, r9
   4a904:	mov	r0, r8
   4a908:	bl	157c <fwrite@plt>
   4a90c:	ldr	r3, [r4, #16]
   4a910:	cmp	r3, #0
   4a914:	beq	4a8e0 <Mat_VarWrite5+0x718>
   4a918:	ldr	fp, [r6, #36]	; 0x24
   4a91c:	mov	r0, fp
   4a920:	bl	1630 <strlen@plt>
   4a924:	mov	r8, r0
   4a928:	cmp	r0, #4
   4a92c:	bhi	4aa84 <Mat_VarWrite5+0x8bc>
   4a930:	sxth	r2, r0
   4a934:	mov	r3, #0
   4a938:	str	r3, [sp, #2060]	; 0x80c
   4a93c:	lsl	r3, r2, #16
   4a940:	orr	r3, r3, #1
   4a944:	str	r3, [sp, #2056]	; 0x808
   4a948:	mov	r1, fp
   4a94c:	add	r8, sp, #2048	; 0x800
   4a950:	add	r8, r8, #8
   4a954:	add	r0, r8, #4
   4a958:	bl	14f8 <memcpy@plt>
   4a95c:	str	r8, [r4]
   4a960:	mov	r3, #8
   4a964:	str	r3, [r4, #4]
   4a968:	add	r8, sp, #8
   4a96c:	mov	fp, #2048	; 0x800
   4a970:	mov	sl, #0
   4a974:	mov	r9, #1
   4a978:	str	r8, [r4, #12]
   4a97c:	str	fp, [r4, #16]
   4a980:	mov	r1, sl
   4a984:	mov	r0, r4
   4a988:	bl	1564 <deflate@plt>
   4a98c:	ldr	r2, [r4, #16]
   4a990:	ldr	r3, [r5]
   4a994:	rsb	r2, r2, #2048	; 0x800
   4a998:	mov	r1, r9
   4a99c:	mov	r0, r8
   4a9a0:	bl	157c <fwrite@plt>
   4a9a4:	ldr	r3, [r4, #16]
   4a9a8:	cmp	r3, #0
   4a9ac:	beq	4a978 <Mat_VarWrite5+0x7b0>
   4a9b0:	ldr	r8, [r6, #52]	; 0x34
   4a9b4:	cmp	r8, #0
   4a9b8:	beq	4ab50 <Mat_VarWrite5+0x988>
   4a9bc:	ldr	r0, [r5]
   4a9c0:	bl	151c <ftell@plt>
   4a9c4:	str	r0, [r8]
   4a9c8:	ldr	r3, [r6, #52]	; 0x34
   4a9cc:	ldr	r3, [r3]
   4a9d0:	cmn	r3, #1
   4a9d4:	beq	4ab40 <Mat_VarWrite5+0x978>
   4a9d8:	mov	r2, r4
   4a9dc:	mov	r1, r6
   4a9e0:	mov	r0, r5
   4a9e4:	bl	45244 <WriteCompressedType>
   4a9e8:	mov	r3, #0
   4a9ec:	str	r3, [r4]
   4a9f0:	str	r3, [r4, #4]
   4a9f4:	add	r6, sp, #8
   4a9f8:	mov	fp, #2048	; 0x800
   4a9fc:	mov	sl, #4
   4aa00:	mov	r9, #1
   4aa04:	str	r6, [r4, #12]
   4aa08:	str	fp, [r4, #16]
   4aa0c:	mov	r1, sl
   4aa10:	mov	r0, r4
   4aa14:	bl	1564 <deflate@plt>
   4aa18:	mov	r8, r0
   4aa1c:	ldr	r2, [r4, #16]
   4aa20:	ldr	r3, [r5]
   4aa24:	rsb	r2, r2, #2048	; 0x800
   4aa28:	mov	r1, r9
   4aa2c:	mov	r0, r6
   4aa30:	bl	157c <fwrite@plt>
   4aa34:	cmp	r8, #1
   4aa38:	beq	4aa48 <Mat_VarWrite5+0x880>
   4aa3c:	ldr	r3, [r4, #16]
   4aa40:	cmp	r3, #0
   4aa44:	beq	4aa04 <Mat_VarWrite5+0x83c>
   4aa48:	mov	r0, r4
   4aa4c:	bl	169c <deflateEnd@plt>
   4aa50:	mov	r0, r4
   4aa54:	bl	14e0 <free@plt>
   4aa58:	b	4a278 <Mat_VarWrite5+0xb0>
   4aa5c:	mov	r0, r4
   4aa60:	bl	14e0 <free@plt>
   4aa64:	mov	r0, fp
   4aa68:	bl	1558 <zError@plt>
   4aa6c:	mov	r1, r0
   4aa70:	ldr	r0, [pc, #344]	; 4abd0 <Mat_VarWrite5+0xa08>
   4aa74:	add	r0, pc, r0
   4aa78:	bl	1690 <Mat_Critical@plt>
   4aa7c:	mvn	r0, #0
   4aa80:	b	4a2a0 <Mat_VarWrite5+0xd8>
   4aa84:	mov	r9, r0
   4aa88:	mov	r2, #2048	; 0x800
   4aa8c:	mov	r1, #0
   4aa90:	add	sl, sp, #2048	; 0x800
   4aa94:	add	sl, sl, #8
   4aa98:	mov	r0, sl
   4aa9c:	bl	166c <memset@plt>
   4aaa0:	mov	r3, #1
   4aaa4:	str	r3, [sp, #2056]	; 0x808
   4aaa8:	str	r8, [sp, #2060]	; 0x80c
   4aaac:	mov	r2, r8
   4aab0:	mov	r1, fp
   4aab4:	add	r0, sl, #8
   4aab8:	bl	14f8 <memcpy@plt>
   4aabc:	tst	r8, #7
   4aac0:	beq	4aae0 <Mat_VarWrite5+0x918>
   4aac4:	asr	r3, r8, #31
   4aac8:	lsr	r3, r3, #29
   4aacc:	add	r9, r8, r3
   4aad0:	and	r9, r9, #7
   4aad4:	sub	r9, r9, r3
   4aad8:	rsb	r9, r9, #8
   4aadc:	add	r9, r8, r9
   4aae0:	add	r3, sp, #2048	; 0x800
   4aae4:	add	r3, r3, #8
   4aae8:	str	r3, [r4]
   4aaec:	add	r9, r9, #8
   4aaf0:	str	r9, [r4, #4]
   4aaf4:	add	r8, sp, #8
   4aaf8:	mov	fp, #2048	; 0x800
   4aafc:	mov	sl, #0
   4ab00:	mov	r9, #1
   4ab04:	str	r8, [r4, #12]
   4ab08:	str	fp, [r4, #16]
   4ab0c:	mov	r1, sl
   4ab10:	mov	r0, r4
   4ab14:	bl	1564 <deflate@plt>
   4ab18:	ldr	r2, [r4, #16]
   4ab1c:	ldr	r3, [r5]
   4ab20:	rsb	r2, r2, #2048	; 0x800
   4ab24:	mov	r1, r9
   4ab28:	mov	r0, r8
   4ab2c:	bl	157c <fwrite@plt>
   4ab30:	ldr	r3, [r4, #16]
   4ab34:	cmp	r3, #0
   4ab38:	beq	4ab04 <Mat_VarWrite5+0x93c>
   4ab3c:	b	4a9b0 <Mat_VarWrite5+0x7e8>
   4ab40:	ldr	r0, [pc, #140]	; 4abd4 <Mat_VarWrite5+0xa0c>
   4ab44:	add	r0, pc, r0
   4ab48:	bl	1690 <Mat_Critical@plt>
   4ab4c:	b	4a9d8 <Mat_VarWrite5+0x810>
   4ab50:	mov	r3, #0
   4ab54:	str	r3, [r6, #16]
   4ab58:	b	4a9d8 <Mat_VarWrite5+0x810>
   4ab5c:	sub	r7, r0, r7
   4ab60:	add	r6, sp, #4096	; 0x1000
   4ab64:	add	r6, r6, #40	; 0x28
   4ab68:	str	r7, [r6, #-28]!	; 0xffffffe4
   4ab6c:	mov	r2, #1
   4ab70:	mvn	r1, #3
   4ab74:	sub	r1, r1, r7
   4ab78:	ldr	r0, [r5]
   4ab7c:	bl	1714 <fseek@plt>
   4ab80:	ldr	r3, [r5]
   4ab84:	mov	r2, #1
   4ab88:	mov	r1, #4
   4ab8c:	mov	r0, r6
   4ab90:	bl	157c <fwrite@plt>
   4ab94:	mov	r2, #0
   4ab98:	mov	r1, r4
   4ab9c:	ldr	r0, [r5]
   4aba0:	bl	1714 <fseek@plt>
   4aba4:	mov	r0, #0
   4aba8:	b	4a2a0 <Mat_VarWrite5+0xd8>
   4abac:	mvn	r0, #0
   4abb0:	b	4a2a0 <Mat_VarWrite5+0xd8>
   4abb4:	mvn	r0, #0
   4abb8:	b	4a2a0 <Mat_VarWrite5+0xd8>
   4abbc:	mvn	r0, #0
   4abc0:	b	4a2a0 <Mat_VarWrite5+0xd8>
   4abc4:	.word	0x00007fb4
   4abc8:	.word	0x00007c30
   4abcc:	.word	0x00007ff0
   4abd0:	.word	0x00007be4
   4abd4:	.word	0x00007704

0004abd8 <Mat_VarReadNextInfo5>:
   4abd8:	push	{r4, r5, r6, r7, r8, r9, lr}
   4abdc:	sub	sp, sp, #92	; 0x5c
   4abe0:	subs	r4, r0, #0
   4abe4:	beq	4b288 <Mat_VarReadNextInfo5+0x6b0>
   4abe8:	ldr	r0, [r4]
   4abec:	bl	151c <ftell@plt>
   4abf0:	mov	r6, r0
   4abf4:	cmn	r0, #1
   4abf8:	beq	4acc8 <Mat_VarReadNextInfo5+0xf0>
   4abfc:	ldr	r3, [r4]
   4ac00:	mov	r2, #1
   4ac04:	mov	r1, #4
   4ac08:	add	r0, sp, #84	; 0x54
   4ac0c:	bl	1588 <fread@plt>
   4ac10:	cmp	r0, #0
   4ac14:	moveq	r5, #0
   4ac18:	beq	4b068 <Mat_VarReadNextInfo5+0x490>
   4ac1c:	ldr	r3, [r4]
   4ac20:	mov	r2, #1
   4ac24:	mov	r1, #4
   4ac28:	add	r0, sp, #80	; 0x50
   4ac2c:	bl	1588 <fread@plt>
   4ac30:	ldr	r3, [r4, #20]
   4ac34:	cmp	r3, #0
   4ac38:	bne	4acdc <Mat_VarReadNextInfo5+0x104>
   4ac3c:	ldr	r1, [sp, #84]	; 0x54
   4ac40:	cmp	r1, #14
   4ac44:	beq	4af94 <Mat_VarReadNextInfo5+0x3bc>
   4ac48:	cmp	r1, #15
   4ac4c:	bne	4b274 <Mat_VarReadNextInfo5+0x69c>
   4ac50:	mov	r2, #64	; 0x40
   4ac54:	mov	r1, #0
   4ac58:	add	r0, sp, #16
   4ac5c:	bl	166c <memset@plt>
   4ac60:	bl	1570 <Mat_VarCalloc@plt>
   4ac64:	mov	r5, r0
   4ac68:	mov	r0, #1
   4ac6c:	str	r0, [r5, #48]	; 0x30
   4ac70:	ldr	r7, [r5, #52]	; 0x34
   4ac74:	mov	r1, #56	; 0x38
   4ac78:	bl	1468 <calloc@plt>
   4ac7c:	str	r0, [r7, #12]
   4ac80:	ldr	r3, [r5, #52]	; 0x34
   4ac84:	mov	r2, #56	; 0x38
   4ac88:	ldr	r1, [pc, #1844]	; 4b3c4 <Mat_VarReadNextInfo5+0x7ec>
   4ac8c:	add	r1, pc, r1
   4ac90:	ldr	r0, [r3, #12]
   4ac94:	bl	16b4 <inflateInit_@plt>
   4ac98:	subs	r7, r0, #0
   4ac9c:	beq	4acf0 <Mat_VarReadNextInfo5+0x118>
   4aca0:	mov	r0, r5
   4aca4:	bl	15f4 <Mat_VarFree@plt>
   4aca8:	mov	r0, r7
   4acac:	bl	1558 <zError@plt>
   4acb0:	mov	r1, r0
   4acb4:	ldr	r0, [pc, #1804]	; 4b3c8 <Mat_VarReadNextInfo5+0x7f0>
   4acb8:	add	r0, pc, r0
   4acbc:	bl	1690 <Mat_Critical@plt>
   4acc0:	mov	r5, #0
   4acc4:	b	4b068 <Mat_VarReadNextInfo5+0x490>
   4acc8:	ldr	r0, [pc, #1788]	; 4b3cc <Mat_VarReadNextInfo5+0x7f4>
   4accc:	add	r0, pc, r0
   4acd0:	bl	1690 <Mat_Critical@plt>
   4acd4:	mov	r5, #0
   4acd8:	b	4b068 <Mat_VarReadNextInfo5+0x490>
   4acdc:	add	r0, sp, #84	; 0x54
   4ace0:	bl	1a20 <Mat_int32Swap>
   4ace4:	add	r0, sp, #80	; 0x50
   4ace8:	bl	1a20 <Mat_int32Swap>
   4acec:	b	4ac3c <Mat_VarReadNextInfo5+0x64>
   4acf0:	add	r2, sp, #16
   4acf4:	mov	r1, r5
   4acf8:	mov	r0, r4
   4acfc:	bl	2704 <InflateVarTag>
   4ad00:	mov	r8, r0
   4ad04:	ldr	r3, [r4, #20]
   4ad08:	cmp	r3, #0
   4ad0c:	bne	4ad4c <Mat_VarReadNextInfo5+0x174>
   4ad10:	ldr	r3, [sp, #16]
   4ad14:	cmp	r3, #14
   4ad18:	beq	4ad60 <Mat_VarReadNextInfo5+0x188>
   4ad1c:	mov	r2, #1
   4ad20:	ldr	r1, [sp, #80]	; 0x50
   4ad24:	sub	r1, r1, r8
   4ad28:	ldr	r0, [r4]
   4ad2c:	bl	1714 <fseek@plt>
   4ad30:	mov	r0, r5
   4ad34:	bl	15f4 <Mat_VarFree@plt>
   4ad38:	ldr	r0, [pc, #1680]	; 4b3d0 <Mat_VarReadNextInfo5+0x7f8>
   4ad3c:	add	r0, pc, r0
   4ad40:	bl	1690 <Mat_Critical@plt>
   4ad44:	mov	r5, #0
   4ad48:	b	4b068 <Mat_VarReadNextInfo5+0x490>
   4ad4c:	add	r0, sp, #16
   4ad50:	bl	1a88 <Mat_uint32Swap>
   4ad54:	add	r0, sp, #20
   4ad58:	bl	1a88 <Mat_uint32Swap>
   4ad5c:	b	4ad10 <Mat_VarReadNextInfo5+0x138>
   4ad60:	add	r2, sp, #16
   4ad64:	mov	r1, r5
   4ad68:	mov	r0, r4
   4ad6c:	bl	289c <InflateArrayFlags>
   4ad70:	ldr	r3, [r4, #20]
   4ad74:	cmp	r3, #0
   4ad78:	bne	4adb0 <Mat_VarReadNextInfo5+0x1d8>
   4ad7c:	ldr	r3, [sp, #16]
   4ad80:	cmp	r3, #6
   4ad84:	beq	4adcc <Mat_VarReadNextInfo5+0x1f4>
   4ad88:	ldr	r3, [r5, #16]
   4ad8c:	cmp	r3, #17
   4ad90:	bne	4b2b0 <Mat_VarReadNextInfo5+0x6d8>
   4ad94:	ldr	r1, [sp, #80]	; 0x50
   4ad98:	add	r1, r1, #8
   4ad9c:	mov	r2, #0
   4ada0:	add	r1, r1, r6
   4ada4:	ldr	r0, [r4]
   4ada8:	bl	1714 <fseek@plt>
   4adac:	b	4b068 <Mat_VarReadNextInfo5+0x490>
   4adb0:	add	r0, sp, #16
   4adb4:	bl	1a88 <Mat_uint32Swap>
   4adb8:	add	r0, sp, #24
   4adbc:	bl	1a88 <Mat_uint32Swap>
   4adc0:	add	r0, sp, #28
   4adc4:	bl	1a88 <Mat_uint32Swap>
   4adc8:	b	4ad7c <Mat_VarReadNextInfo5+0x1a4>
   4adcc:	ldr	r3, [sp, #24]
   4add0:	uxtb	r2, r3
   4add4:	cmp	r2, #17
   4add8:	bhi	4b290 <Mat_VarReadNextInfo5+0x6b8>
   4addc:	str	r2, [r5, #16]
   4ade0:	and	r1, r3, #2048	; 0x800
   4ade4:	str	r1, [r5, #20]
   4ade8:	and	r1, r3, #1024	; 0x400
   4adec:	str	r1, [r5, #24]
   4adf0:	and	r3, r3, #512	; 0x200
   4adf4:	str	r3, [r5, #28]
   4adf8:	cmp	r2, #5
   4adfc:	bne	4ad88 <Mat_VarReadNextInfo5+0x1b0>
   4ae00:	ldr	r3, [sp, #28]
   4ae04:	str	r3, [r5]
   4ae08:	b	4b2b0 <Mat_VarReadNextInfo5+0x6d8>
   4ae0c:	add	r0, sp, #16
   4ae10:	bl	1a88 <Mat_uint32Swap>
   4ae14:	add	r0, sp, #20
   4ae18:	bl	1a88 <Mat_uint32Swap>
   4ae1c:	b	4b2f8 <Mat_VarReadNextInfo5+0x720>
   4ae20:	ldr	r9, [sp, #20]
   4ae24:	add	r3, r9, #3
   4ae28:	cmp	r9, #0
   4ae2c:	movlt	r9, r3
   4ae30:	asr	r9, r9, #2
   4ae34:	str	r9, [r5, #4]
   4ae38:	lsl	r0, r9, #2
   4ae3c:	bl	15ac <malloc@plt>
   4ae40:	str	r0, [r5, #32]
   4ae44:	ldr	r3, [r4, #20]
   4ae48:	cmp	r3, #0
   4ae4c:	bne	4ae7c <Mat_VarReadNextInfo5+0x2a4>
   4ae50:	cmp	r9, #0
   4ae54:	ble	4b304 <Mat_VarReadNextInfo5+0x72c>
   4ae58:	ldr	r2, [sp, #12]
   4ae5c:	ldr	r1, [r2, r3, lsl #2]
   4ae60:	ldr	r2, [r5, #32]
   4ae64:	str	r1, [r2, r3, lsl #2]
   4ae68:	add	r3, r3, #1
   4ae6c:	ldr	r2, [r5, #4]
   4ae70:	cmp	r2, r3
   4ae74:	bgt	4ae58 <Mat_VarReadNextInfo5+0x280>
   4ae78:	b	4b304 <Mat_VarReadNextInfo5+0x72c>
   4ae7c:	cmp	r9, #0
   4ae80:	ble	4b304 <Mat_VarReadNextInfo5+0x72c>
   4ae84:	ldr	r9, [r5, #32]
   4ae88:	ldr	r0, [sp, #12]
   4ae8c:	add	r0, r0, r7, lsl #2
   4ae90:	bl	1a88 <Mat_uint32Swap>
   4ae94:	str	r0, [r9, r7, lsl #2]
   4ae98:	add	r7, r7, #1
   4ae9c:	ldr	r3, [r5, #4]
   4aea0:	cmp	r3, r7
   4aea4:	bgt	4ae84 <Mat_VarReadNextInfo5+0x2ac>
   4aea8:	b	4b304 <Mat_VarReadNextInfo5+0x72c>
   4aeac:	ldr	r0, [sp, #12]
   4aeb0:	bl	14e0 <free@plt>
   4aeb4:	b	4b30c <Mat_VarReadNextInfo5+0x734>
   4aeb8:	add	r0, sp, #16
   4aebc:	bl	1a88 <Mat_uint32Swap>
   4aec0:	ldr	r3, [sp, #16]
   4aec4:	cmp	r3, #1
   4aec8:	bne	4b334 <Mat_VarReadNextInfo5+0x75c>
   4aecc:	ldr	r3, [r4, #20]
   4aed0:	cmp	r3, #0
   4aed4:	beq	4aee8 <Mat_VarReadNextInfo5+0x310>
   4aed8:	add	r0, sp, #20
   4aedc:	bl	1a88 <Mat_uint32Swap>
   4aee0:	mov	r7, r0
   4aee4:	b	4aeec <Mat_VarReadNextInfo5+0x314>
   4aee8:	ldr	r7, [sp, #20]
   4aeec:	tst	r7, #7
   4aef0:	bicne	r8, r7, #7
   4aef4:	addne	r8, r8, #8
   4aef8:	moveq	r8, r7
   4aefc:	add	r0, r8, #1
   4af00:	bl	15ac <malloc@plt>
   4af04:	str	r0, [r5, #36]	; 0x24
   4af08:	cmp	r0, #0
   4af0c:	beq	4b340 <Mat_VarReadNextInfo5+0x768>
   4af10:	mov	r3, r8
   4af14:	mov	r2, r0
   4af18:	mov	r1, r5
   4af1c:	mov	r0, r4
   4af20:	bl	2f68 <InflateVarName>
   4af24:	ldr	r3, [r5, #36]	; 0x24
   4af28:	mov	r2, #0
   4af2c:	strb	r2, [r3, r7]
   4af30:	b	4b340 <Mat_VarReadNextInfo5+0x768>
   4af34:	lsr	r7, r3, #16
   4af38:	sub	r3, r7, #1
   4af3c:	cmp	r3, #3
   4af40:	bhi	4b340 <Mat_VarReadNextInfo5+0x768>
   4af44:	add	r0, r7, #1
   4af48:	bl	15ac <malloc@plt>
   4af4c:	str	r0, [r5, #36]	; 0x24
   4af50:	cmp	r0, #0
   4af54:	beq	4b340 <Mat_VarReadNextInfo5+0x768>
   4af58:	mov	r2, r7
   4af5c:	add	r1, sp, #20
   4af60:	bl	14f8 <memcpy@plt>
   4af64:	ldr	r3, [r5, #36]	; 0x24
   4af68:	mov	r2, #0
   4af6c:	strb	r2, [r3, r7]
   4af70:	b	4b340 <Mat_VarReadNextInfo5+0x768>
   4af74:	mov	r1, r5
   4af78:	mov	r0, r4
   4af7c:	bl	47c40 <ReadNextStructField>
   4af80:	b	4b354 <Mat_VarReadNextInfo5+0x77c>
   4af84:	mov	r1, r5
   4af88:	mov	r0, r4
   4af8c:	bl	48a44 <ReadNextCell>
   4af90:	b	4b354 <Mat_VarReadNextInfo5+0x77c>
   4af94:	bl	1570 <Mat_VarCalloc@plt>
   4af98:	mov	r5, r0
   4af9c:	ldr	r3, [r4]
   4afa0:	mov	r2, #6
   4afa4:	mov	r1, #4
   4afa8:	add	r0, sp, #16
   4afac:	bl	1588 <fread@plt>
   4afb0:	ldr	r3, [r4, #20]
   4afb4:	cmp	r3, #0
   4afb8:	bne	4b074 <Mat_VarReadNextInfo5+0x49c>
   4afbc:	ldr	r3, [sp, #16]
   4afc0:	cmp	r3, #6
   4afc4:	beq	4b0a8 <Mat_VarReadNextInfo5+0x4d0>
   4afc8:	ldr	r3, [sp, #36]	; 0x24
   4afcc:	ldr	r2, [sp, #32]
   4afd0:	mov	r1, r5
   4afd4:	mov	r0, r4
   4afd8:	bl	43a0c <ReadRankDims>
   4afdc:	ldr	r3, [r4]
   4afe0:	mov	r2, #2
   4afe4:	mov	r1, #4
   4afe8:	add	r0, sp, #16
   4afec:	bl	1588 <fread@plt>
   4aff0:	ldr	r3, [r4, #20]
   4aff4:	cmp	r3, #0
   4aff8:	bne	4b0e4 <Mat_VarReadNextInfo5+0x50c>
   4affc:	ldr	r3, [sp, #16]
   4b000:	cmp	r3, #1
   4b004:	beq	4b114 <Mat_VarReadNextInfo5+0x53c>
   4b008:	uxth	r2, r3
   4b00c:	cmp	r2, #1
   4b010:	beq	4b184 <Mat_VarReadNextInfo5+0x5ac>
   4b014:	ldr	r3, [r5, #16]
   4b018:	cmp	r3, #2
   4b01c:	beq	4b1c4 <Mat_VarReadNextInfo5+0x5ec>
   4b020:	cmp	r3, #1
   4b024:	beq	4b1d4 <Mat_VarReadNextInfo5+0x5fc>
   4b028:	cmp	r3, #16
   4b02c:	beq	4b1e4 <Mat_VarReadNextInfo5+0x60c>
   4b030:	ldr	r7, [r5, #52]	; 0x34
   4b034:	ldr	r0, [r4]
   4b038:	bl	151c <ftell@plt>
   4b03c:	str	r0, [r7]
   4b040:	ldr	r3, [r5, #52]	; 0x34
   4b044:	ldr	r3, [r3]
   4b048:	cmn	r3, #1
   4b04c:	beq	4b264 <Mat_VarReadNextInfo5+0x68c>
   4b050:	ldr	r1, [sp, #80]	; 0x50
   4b054:	add	r1, r1, #8
   4b058:	mov	r2, #0
   4b05c:	add	r1, r1, r6
   4b060:	ldr	r0, [r4]
   4b064:	bl	1714 <fseek@plt>
   4b068:	mov	r0, r5
   4b06c:	add	sp, sp, #92	; 0x5c
   4b070:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b074:	add	r0, sp, #16
   4b078:	bl	1a88 <Mat_uint32Swap>
   4b07c:	add	r0, sp, #20
   4b080:	bl	1a88 <Mat_uint32Swap>
   4b084:	add	r0, sp, #24
   4b088:	bl	1a88 <Mat_uint32Swap>
   4b08c:	add	r0, sp, #28
   4b090:	bl	1a88 <Mat_uint32Swap>
   4b094:	add	r0, sp, #32
   4b098:	bl	1a88 <Mat_uint32Swap>
   4b09c:	add	r0, sp, #36	; 0x24
   4b0a0:	bl	1a88 <Mat_uint32Swap>
   4b0a4:	b	4afbc <Mat_VarReadNextInfo5+0x3e4>
   4b0a8:	ldr	r3, [sp, #24]
   4b0ac:	uxtb	r2, r3
   4b0b0:	cmp	r2, #17
   4b0b4:	bhi	4b3a0 <Mat_VarReadNextInfo5+0x7c8>
   4b0b8:	str	r2, [r5, #16]
   4b0bc:	and	r1, r3, #2048	; 0x800
   4b0c0:	str	r1, [r5, #20]
   4b0c4:	and	r1, r3, #1024	; 0x400
   4b0c8:	str	r1, [r5, #24]
   4b0cc:	and	r3, r3, #512	; 0x200
   4b0d0:	str	r3, [r5, #28]
   4b0d4:	cmp	r2, #5
   4b0d8:	ldreq	r3, [sp, #28]
   4b0dc:	streq	r3, [r5]
   4b0e0:	b	4afc8 <Mat_VarReadNextInfo5+0x3f0>
   4b0e4:	add	r0, sp, #16
   4b0e8:	bl	1a88 <Mat_uint32Swap>
   4b0ec:	ldr	r3, [sp, #16]
   4b0f0:	cmp	r3, #1
   4b0f4:	bne	4b008 <Mat_VarReadNextInfo5+0x430>
   4b0f8:	ldr	r3, [r4, #20]
   4b0fc:	cmp	r3, #0
   4b100:	beq	4b114 <Mat_VarReadNextInfo5+0x53c>
   4b104:	add	r0, sp, #20
   4b108:	bl	1a88 <Mat_uint32Swap>
   4b10c:	mov	r8, r0
   4b110:	b	4b118 <Mat_VarReadNextInfo5+0x540>
   4b114:	ldr	r8, [sp, #20]
   4b118:	tst	r8, #7
   4b11c:	bicne	r7, r8, #7
   4b120:	addne	r7, r7, #8
   4b124:	moveq	r7, r8
   4b128:	add	r0, r7, #1
   4b12c:	bl	15ac <malloc@plt>
   4b130:	str	r0, [r5, #36]	; 0x24
   4b134:	cmp	r0, #0
   4b138:	beq	4b014 <Mat_VarReadNextInfo5+0x43c>
   4b13c:	ldr	r3, [r4]
   4b140:	mov	r2, r7
   4b144:	mov	r1, #1
   4b148:	bl	1588 <fread@plt>
   4b14c:	cmp	r7, r0
   4b150:	beq	4b174 <Mat_VarReadNextInfo5+0x59c>
   4b154:	ldr	r0, [r5, #36]	; 0x24
   4b158:	bl	14e0 <free@plt>
   4b15c:	mov	r3, #0
   4b160:	str	r3, [r5, #36]	; 0x24
   4b164:	ldr	r0, [pc, #616]	; 4b3d4 <Mat_VarReadNextInfo5+0x7fc>
   4b168:	add	r0, pc, r0
   4b16c:	bl	1690 <Mat_Critical@plt>
   4b170:	b	4b014 <Mat_VarReadNextInfo5+0x43c>
   4b174:	ldr	r3, [r5, #36]	; 0x24
   4b178:	mov	r2, #0
   4b17c:	strb	r2, [r3, r8]
   4b180:	b	4b014 <Mat_VarReadNextInfo5+0x43c>
   4b184:	lsr	r7, r3, #16
   4b188:	sub	r3, r7, #1
   4b18c:	cmp	r3, #3
   4b190:	bhi	4b014 <Mat_VarReadNextInfo5+0x43c>
   4b194:	add	r0, r7, #1
   4b198:	bl	15ac <malloc@plt>
   4b19c:	str	r0, [r5, #36]	; 0x24
   4b1a0:	cmp	r0, #0
   4b1a4:	beq	4b014 <Mat_VarReadNextInfo5+0x43c>
   4b1a8:	mov	r2, r7
   4b1ac:	add	r1, sp, #20
   4b1b0:	bl	14f8 <memcpy@plt>
   4b1b4:	ldr	r3, [r5, #36]	; 0x24
   4b1b8:	mov	r2, #0
   4b1bc:	strb	r2, [r3, r7]
   4b1c0:	b	4b014 <Mat_VarReadNextInfo5+0x43c>
   4b1c4:	mov	r1, r5
   4b1c8:	mov	r0, r4
   4b1cc:	bl	47c40 <ReadNextStructField>
   4b1d0:	b	4b030 <Mat_VarReadNextInfo5+0x458>
   4b1d4:	mov	r1, r5
   4b1d8:	mov	r0, r4
   4b1dc:	bl	48a44 <ReadNextCell>
   4b1e0:	b	4b030 <Mat_VarReadNextInfo5+0x458>
   4b1e4:	add	r1, sp, #88	; 0x58
   4b1e8:	mov	r3, #1
   4b1ec:	str	r3, [r1, #-76]!	; 0xffffffb4
   4b1f0:	mov	r0, r5
   4b1f4:	bl	4d06c <SafeMulDims>
   4b1f8:	mov	r2, #4
   4b1fc:	str	r2, [r5, #12]
   4b200:	ldr	r1, [sp, #12]
   4b204:	mov	r0, r5
   4b208:	bl	4d0c8 <SafeMul>
   4b20c:	ldr	r0, [r5]
   4b210:	bl	15ac <malloc@plt>
   4b214:	str	r0, [r5, #40]	; 0x28
   4b218:	cmp	r0, #0
   4b21c:	beq	4b254 <Mat_VarReadNextInfo5+0x67c>
   4b220:	ldr	r3, [sp, #12]
   4b224:	cmp	r3, #0
   4b228:	beq	4b030 <Mat_VarReadNextInfo5+0x458>
   4b22c:	sub	r8, r0, #4
   4b230:	mov	r7, #0
   4b234:	mov	r0, r4
   4b238:	bl	1738 <Mat_VarReadNextInfo@plt>
   4b23c:	str	r0, [r8, #4]!
   4b240:	add	r7, r7, #1
   4b244:	ldr	r3, [sp, #12]
   4b248:	cmp	r7, r3
   4b24c:	bcc	4b234 <Mat_VarReadNextInfo5+0x65c>
   4b250:	b	4b030 <Mat_VarReadNextInfo5+0x458>
   4b254:	mov	r3, #0
   4b258:	str	r3, [r5, #12]
   4b25c:	str	r3, [r5]
   4b260:	b	4b030 <Mat_VarReadNextInfo5+0x458>
   4b264:	ldr	r0, [pc, #364]	; 4b3d8 <Mat_VarReadNextInfo5+0x800>
   4b268:	add	r0, pc, r0
   4b26c:	bl	1690 <Mat_Critical@plt>
   4b270:	b	4b050 <Mat_VarReadNextInfo5+0x478>
   4b274:	ldr	r0, [pc, #352]	; 4b3dc <Mat_VarReadNextInfo5+0x804>
   4b278:	add	r0, pc, r0
   4b27c:	bl	1690 <Mat_Critical@plt>
   4b280:	mov	r5, #0
   4b284:	b	4b068 <Mat_VarReadNextInfo5+0x490>
   4b288:	mov	r5, #0
   4b28c:	b	4b068 <Mat_VarReadNextInfo5+0x490>
   4b290:	mov	r2, #0
   4b294:	str	r2, [r5, #16]
   4b298:	and	r2, r3, #2048	; 0x800
   4b29c:	str	r2, [r5, #20]
   4b2a0:	and	r2, r3, #1024	; 0x400
   4b2a4:	str	r2, [r5, #24]
   4b2a8:	and	r3, r3, #512	; 0x200
   4b2ac:	str	r3, [r5, #28]
   4b2b0:	mov	r3, #0
   4b2b4:	str	r3, [sp, #12]
   4b2b8:	add	r3, sp, #12
   4b2bc:	str	r3, [sp]
   4b2c0:	mov	r3, #64	; 0x40
   4b2c4:	add	r2, sp, #16
   4b2c8:	mov	r1, r5
   4b2cc:	mov	r0, r4
   4b2d0:	bl	2a34 <InflateRankDims>
   4b2d4:	ldr	r3, [sp, #12]
   4b2d8:	cmp	r3, #0
   4b2dc:	addeq	r3, sp, #24
   4b2e0:	streq	r3, [sp, #12]
   4b2e4:	moveq	r8, r7
   4b2e8:	movne	r8, #1
   4b2ec:	ldr	r3, [r4, #20]
   4b2f0:	cmp	r3, #0
   4b2f4:	bne	4ae0c <Mat_VarReadNextInfo5+0x234>
   4b2f8:	ldr	r3, [sp, #16]
   4b2fc:	cmp	r3, #5
   4b300:	beq	4ae20 <Mat_VarReadNextInfo5+0x248>
   4b304:	cmp	r8, #0
   4b308:	bne	4aeac <Mat_VarReadNextInfo5+0x2d4>
   4b30c:	add	r2, sp, #16
   4b310:	mov	r1, r5
   4b314:	mov	r0, r4
   4b318:	bl	2dd0 <InflateVarNameTag>
   4b31c:	ldr	r3, [r4, #20]
   4b320:	cmp	r3, #0
   4b324:	bne	4aeb8 <Mat_VarReadNextInfo5+0x2e0>
   4b328:	ldr	r3, [sp, #16]
   4b32c:	cmp	r3, #1
   4b330:	beq	4aee8 <Mat_VarReadNextInfo5+0x310>
   4b334:	uxth	r2, r3
   4b338:	cmp	r2, #1
   4b33c:	beq	4af34 <Mat_VarReadNextInfo5+0x35c>
   4b340:	ldr	r3, [r5, #16]
   4b344:	cmp	r3, #2
   4b348:	beq	4af74 <Mat_VarReadNextInfo5+0x39c>
   4b34c:	cmp	r3, #1
   4b350:	beq	4af84 <Mat_VarReadNextInfo5+0x3ac>
   4b354:	ldr	r3, [r5, #52]	; 0x34
   4b358:	ldr	r3, [r3, #12]
   4b35c:	ldr	r1, [r3, #4]
   4b360:	mov	r2, #1
   4b364:	rsb	r1, r1, #0
   4b368:	ldr	r0, [r4]
   4b36c:	bl	1714 <fseek@plt>
   4b370:	ldr	r7, [r5, #52]	; 0x34
   4b374:	ldr	r0, [r4]
   4b378:	bl	151c <ftell@plt>
   4b37c:	str	r0, [r7]
   4b380:	ldr	r3, [r5, #52]	; 0x34
   4b384:	ldr	r3, [r3]
   4b388:	cmn	r3, #1
   4b38c:	bne	4ad94 <Mat_VarReadNextInfo5+0x1bc>
   4b390:	ldr	r0, [pc, #72]	; 4b3e0 <Mat_VarReadNextInfo5+0x808>
   4b394:	add	r0, pc, r0
   4b398:	bl	1690 <Mat_Critical@plt>
   4b39c:	b	4ad94 <Mat_VarReadNextInfo5+0x1bc>
   4b3a0:	mov	r2, #0
   4b3a4:	str	r2, [r5, #16]
   4b3a8:	and	r2, r3, #2048	; 0x800
   4b3ac:	str	r2, [r5, #20]
   4b3b0:	and	r2, r3, #1024	; 0x400
   4b3b4:	str	r2, [r5, #24]
   4b3b8:	and	r3, r3, #512	; 0x200
   4b3bc:	str	r3, [r5, #28]
   4b3c0:	b	4afc8 <Mat_VarReadNextInfo5+0x3f0>
   4b3c4:	.word	0x000079c4
   4b3c8:	.word	0x000079b8
   4b3cc:	.word	0x0000757c
   4b3d0:	.word	0x000078c8
   4b3d4:	.word	0x00007104
   4b3d8:	.word	0x00006fe0
   4b3dc:	.word	0x00007410
   4b3e0:	.word	0x00006eb4
   4b3e4:	.word	0x00000000

0004b3e8 <Mat_Create4>:
   4b3e8:	push	{r4, r5, r6, lr}
   4b3ec:	mov	r6, r0
   4b3f0:	ldr	r1, [pc, #144]	; 4b488 <Mat_Create4+0xa0>
   4b3f4:	add	r1, pc, r1
   4b3f8:	bl	14bc <fopen@plt>
   4b3fc:	subs	r5, r0, #0
   4b400:	beq	4b480 <Mat_Create4+0x98>
   4b404:	mov	r0, #44	; 0x2c
   4b408:	bl	15ac <malloc@plt>
   4b40c:	subs	r4, r0, #0
   4b410:	beq	4b468 <Mat_Create4+0x80>
   4b414:	str	r5, [r4]
   4b418:	mov	r5, #0
   4b41c:	str	r5, [r4, #4]
   4b420:	str	r5, [r4, #8]
   4b424:	mov	r1, r6
   4b428:	ldr	r0, [pc, #92]	; 4b48c <Mat_Create4+0xa4>
   4b42c:	add	r0, pc, r0
   4b430:	bl	1f2c <strdup_printf>
   4b434:	str	r0, [r4, #12]
   4b438:	mov	r3, #16
   4b43c:	str	r3, [r4, #16]
   4b440:	str	r5, [r4, #20]
   4b444:	str	r5, [r4, #24]
   4b448:	str	r5, [r4, #28]
   4b44c:	str	r5, [r4, #32]
   4b450:	str	r5, [r4, #36]	; 0x24
   4b454:	str	r5, [r4, #40]	; 0x28
   4b458:	mov	r0, r4
   4b45c:	bl	1660 <Mat_Rewind@plt>
   4b460:	mov	r0, r4
   4b464:	pop	{r4, r5, r6, pc}
   4b468:	mov	r0, r5
   4b46c:	bl	16a8 <fclose@plt>
   4b470:	ldr	r0, [pc, #24]	; 4b490 <Mat_Create4+0xa8>
   4b474:	add	r0, pc, r0
   4b478:	bl	1690 <Mat_Critical@plt>
   4b47c:	b	4b460 <Mat_Create4+0x78>
   4b480:	mov	r4, #0
   4b484:	b	4b460 <Mat_Create4+0x78>
   4b488:	.word	0x00006ea4
   4b48c:	.word	0x000075e8
   4b490:	.word	0x00007248

0004b494 <Mat_VarWrite4>:
   4b494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b498:	vpush	{d8}
   4b49c:	sub	sp, sp, #44	; 0x2c
   4b4a0:	cmp	r1, #0
   4b4a4:	cmpne	r0, #0
   4b4a8:	beq	4bae8 <Mat_VarWrite4+0x654>
   4b4ac:	mov	r6, r0
   4b4b0:	mov	sl, r1
   4b4b4:	ldr	r0, [r1, #36]	; 0x24
   4b4b8:	cmp	r0, #0
   4b4bc:	beq	4baf0 <Mat_VarWrite4+0x65c>
   4b4c0:	ldr	r5, [r1, #4]
   4b4c4:	cmp	r5, #2
   4b4c8:	bne	4baf8 <Mat_VarWrite4+0x664>
   4b4cc:	ldr	r3, [r1, #8]
   4b4d0:	sub	r3, r3, #2
   4b4d4:	cmp	r3, #7
   4b4d8:	addls	pc, pc, r3, lsl #2
   4b4dc:	b	4b654 <Mat_VarWrite4+0x1c0>
   4b4e0:	b	4b58c <Mat_VarWrite4+0xf8>
   4b4e4:	b	4b574 <Mat_VarWrite4+0xe0>
   4b4e8:	b	4b580 <Mat_VarWrite4+0xec>
   4b4ec:	b	4b568 <Mat_VarWrite4+0xd4>
   4b4f0:	b	4b654 <Mat_VarWrite4+0x1c0>
   4b4f4:	b	4b55c <Mat_VarWrite4+0xc8>
   4b4f8:	b	4b654 <Mat_VarWrite4+0x1c0>
   4b4fc:	b	4b500 <Mat_VarWrite4+0x6c>
   4b500:	mov	r3, #0
   4b504:	str	r3, [sp, #20]
   4b508:	bl	1630 <strlen@plt>
   4b50c:	add	r0, r0, #1
   4b510:	str	r0, [sp, #36]	; 0x24
   4b514:	mov	r2, #2
   4b518:	mov	r1, #0
   4b51c:	ldr	r0, [r6]
   4b520:	bl	1714 <fseek@plt>
   4b524:	ldr	r3, [sl, #16]
   4b528:	sub	r3, r3, #4
   4b52c:	cmp	r3, #8
   4b530:	addls	pc, pc, r3, lsl #2
   4b534:	b	4bb00 <Mat_VarWrite4+0x66c>
   4b538:	b	4b598 <Mat_VarWrite4+0x104>
   4b53c:	b	4b684 <Mat_VarWrite4+0x1f0>
   4b540:	b	4b5a4 <Mat_VarWrite4+0x110>
   4b544:	b	4b5a4 <Mat_VarWrite4+0x110>
   4b548:	b	4bb00 <Mat_VarWrite4+0x66c>
   4b54c:	b	4b5a4 <Mat_VarWrite4+0x110>
   4b550:	b	4b5a4 <Mat_VarWrite4+0x110>
   4b554:	b	4b5a4 <Mat_VarWrite4+0x110>
   4b558:	b	4b5a4 <Mat_VarWrite4+0x110>
   4b55c:	mov	r3, #10
   4b560:	str	r3, [sp, #20]
   4b564:	b	4b508 <Mat_VarWrite4+0x74>
   4b568:	mov	r3, #20
   4b56c:	str	r3, [sp, #20]
   4b570:	b	4b508 <Mat_VarWrite4+0x74>
   4b574:	mov	r3, #30
   4b578:	str	r3, [sp, #20]
   4b57c:	b	4b508 <Mat_VarWrite4+0x74>
   4b580:	mov	r3, #40	; 0x28
   4b584:	str	r3, [sp, #20]
   4b588:	b	4b508 <Mat_VarWrite4+0x74>
   4b58c:	mov	r3, #50	; 0x32
   4b590:	str	r3, [sp, #20]
   4b594:	b	4b508 <Mat_VarWrite4+0x74>
   4b598:	ldr	r3, [sp, #20]
   4b59c:	add	r3, r3, #1
   4b5a0:	str	r3, [sp, #20]
   4b5a4:	ldr	r1, [sl, #4]
   4b5a8:	cmp	r1, #0
   4b5ac:	ble	4b664 <Mat_VarWrite4+0x1d0>
   4b5b0:	ldr	r3, [sl, #32]
   4b5b4:	add	r1, r3, r1, lsl #2
   4b5b8:	mov	r4, #1
   4b5bc:	ldr	r2, [r3], #4
   4b5c0:	mul	r4, r2, r4
   4b5c4:	cmp	r1, r3
   4b5c8:	bne	4b5bc <Mat_VarWrite4+0x128>
   4b5cc:	ldr	r3, [sl, #32]
   4b5d0:	ldr	r2, [r3]
   4b5d4:	str	r2, [sp, #24]
   4b5d8:	ldr	r3, [r3, #4]
   4b5dc:	str	r3, [sp, #28]
   4b5e0:	ldr	r3, [sl, #20]
   4b5e4:	adds	r3, r3, #0
   4b5e8:	movne	r3, #1
   4b5ec:	str	r3, [sp, #32]
   4b5f0:	ldr	r3, [r6]
   4b5f4:	mov	r2, #1
   4b5f8:	mov	r1, #20
   4b5fc:	add	r0, sp, r1
   4b600:	bl	157c <fwrite@plt>
   4b604:	ldr	r3, [r6]
   4b608:	ldr	r2, [sp, #36]	; 0x24
   4b60c:	mov	r1, #1
   4b610:	ldr	r0, [sl, #36]	; 0x24
   4b614:	bl	157c <fwrite@plt>
   4b618:	ldr	r5, [sl, #20]
   4b61c:	cmp	r5, #0
   4b620:	beq	4b66c <Mat_VarWrite4+0x1d8>
   4b624:	ldr	r5, [sl, #40]	; 0x28
   4b628:	ldr	r3, [r6]
   4b62c:	mov	r2, r4
   4b630:	ldr	r1, [sl, #12]
   4b634:	ldr	r0, [r5]
   4b638:	bl	157c <fwrite@plt>
   4b63c:	ldr	r3, [r6]
   4b640:	mov	r2, r4
   4b644:	ldr	r1, [sl, #12]
   4b648:	ldr	r0, [r5, #4]
   4b64c:	bl	157c <fwrite@plt>
   4b650:	mov	r5, #0
   4b654:	mov	r0, r5
   4b658:	add	sp, sp, #44	; 0x2c
   4b65c:	vpop	{d8}
   4b660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b664:	mov	r4, #1
   4b668:	b	4b5cc <Mat_VarWrite4+0x138>
   4b66c:	ldr	r3, [r6]
   4b670:	mov	r2, r4
   4b674:	ldr	r1, [sl, #12]
   4b678:	ldr	r0, [sl, #40]	; 0x28
   4b67c:	bl	157c <fwrite@plt>
   4b680:	b	4b654 <Mat_VarWrite4+0x1c0>
   4b684:	ldr	r0, [sl, #8]
   4b688:	bl	1600 <Mat_SizeOf@plt>
   4b68c:	mov	r7, r0
   4b690:	ldr	r4, [sl, #40]	; 0x28
   4b694:	ldr	r3, [sp, #20]
   4b698:	add	r3, r3, #2
   4b69c:	str	r3, [sp, #20]
   4b6a0:	ldr	r3, [r4, #16]
   4b6a4:	cmp	r3, #0
   4b6a8:	subgt	r3, r3, #-1073741823	; 0xc0000001
   4b6ac:	ldrgt	r2, [r4, #12]
   4b6b0:	ldrgt	r3, [r2, r3, lsl #2]
   4b6b4:	addgt	r3, r3, #1
   4b6b8:	movle	r3, #1
   4b6bc:	str	r3, [sp, #24]
   4b6c0:	ldr	r3, [sl, #20]
   4b6c4:	cmp	r3, #0
   4b6c8:	movne	r3, #4
   4b6cc:	moveq	r3, #3
   4b6d0:	str	r3, [sp, #28]
   4b6d4:	mov	r3, #0
   4b6d8:	str	r3, [sp, #32]
   4b6dc:	ldr	r3, [r6]
   4b6e0:	mov	r2, #1
   4b6e4:	mov	r1, #20
   4b6e8:	add	r0, sp, r1
   4b6ec:	bl	157c <fwrite@plt>
   4b6f0:	ldr	r3, [r6]
   4b6f4:	ldr	r2, [sp, #36]	; 0x24
   4b6f8:	mov	r1, #1
   4b6fc:	ldr	r0, [sl, #36]	; 0x24
   4b700:	bl	157c <fwrite@plt>
   4b704:	ldr	r3, [r4, #16]
   4b708:	sub	r3, r3, #1
   4b70c:	cmp	r3, #0
   4b710:	ble	4b7bc <Mat_VarWrite4+0x328>
   4b714:	mov	r9, #4
   4b718:	mov	fp, #0
   4b71c:	add	r8, sp, #8
   4b720:	str	r7, [sp]
   4b724:	b	4b740 <Mat_VarWrite4+0x2ac>
   4b728:	add	fp, fp, #1
   4b72c:	add	r9, r9, #4
   4b730:	ldr	r3, [r4, #16]
   4b734:	sub	r3, r3, #1
   4b738:	cmp	r3, fp
   4b73c:	ble	4b7b8 <Mat_VarWrite4+0x324>
   4b740:	ldr	r3, [r4, #12]
   4b744:	ldr	r5, [r3, fp, lsl #2]
   4b748:	ldr	r3, [r3, r9]
   4b74c:	cmp	r5, r3
   4b750:	bge	4b728 <Mat_VarWrite4+0x294>
   4b754:	ldr	r3, [r4, #20]
   4b758:	cmp	r5, r3
   4b75c:	bge	4b728 <Mat_VarWrite4+0x294>
   4b760:	lsl	r7, r5, #2
   4b764:	ldr	r3, [r4, #4]
   4b768:	ldr	r3, [r3, r7]
   4b76c:	add	r3, r3, #1
   4b770:	vmov	s15, r3
   4b774:	vcvt.f64.s32	d7, s15
   4b778:	vstr	d7, [sp, #8]
   4b77c:	ldr	r3, [r6]
   4b780:	mov	r2, #1
   4b784:	mov	r1, #8
   4b788:	mov	r0, r8
   4b78c:	bl	157c <fwrite@plt>
   4b790:	add	r5, r5, #1
   4b794:	ldr	r3, [r4, #12]
   4b798:	ldr	r3, [r3, r9]
   4b79c:	cmp	r3, r5
   4b7a0:	ble	4b728 <Mat_VarWrite4+0x294>
   4b7a4:	add	r7, r7, #4
   4b7a8:	ldr	r3, [r4, #20]
   4b7ac:	cmp	r3, r5
   4b7b0:	bgt	4b764 <Mat_VarWrite4+0x2d0>
   4b7b4:	b	4b728 <Mat_VarWrite4+0x294>
   4b7b8:	ldr	r7, [sp]
   4b7bc:	ldr	r3, [sl, #32]
   4b7c0:	vldr	s14, [r3]
   4b7c4:	vcvt.f64.u32	d7, s14
   4b7c8:	add	r0, sp, #40	; 0x28
   4b7cc:	vmov	r2, r3, d7
   4b7d0:	strd	r2, [r0, #-32]!	; 0xffffffe0
   4b7d4:	ldr	r3, [r6]
   4b7d8:	mov	r2, #1
   4b7dc:	mov	r1, #8
   4b7e0:	bl	157c <fwrite@plt>
   4b7e4:	ldr	r3, [r4, #16]
   4b7e8:	sub	r3, r3, #1
   4b7ec:	cmp	r3, #0
   4b7f0:	ble	4b88c <Mat_VarWrite4+0x3f8>
   4b7f4:	mov	fp, #0
   4b7f8:	mov	r9, #1
   4b7fc:	add	r8, sp, #8
   4b800:	str	r7, [sp]
   4b804:	b	4b820 <Mat_VarWrite4+0x38c>
   4b808:	add	fp, fp, #4
   4b80c:	ldr	r2, [r4, #16]
   4b810:	sub	r2, r2, #1
   4b814:	cmp	r2, r9
   4b818:	add	r9, r9, #1
   4b81c:	ble	4b888 <Mat_VarWrite4+0x3f4>
   4b820:	ldr	r3, [r4, #12]
   4b824:	ldr	r5, [r3, fp]
   4b828:	lsl	r7, r9, #2
   4b82c:	ldr	r3, [r3, r9, lsl #2]
   4b830:	cmp	r5, r3
   4b834:	bge	4b808 <Mat_VarWrite4+0x374>
   4b838:	ldr	r3, [r4, #20]
   4b83c:	cmp	r5, r3
   4b840:	bge	4b808 <Mat_VarWrite4+0x374>
   4b844:	vmov	s15, r9
   4b848:	vcvt.f64.s32	d8, s15
   4b84c:	vstr	d8, [sp, #8]
   4b850:	ldr	r3, [r6]
   4b854:	mov	r2, #1
   4b858:	mov	r1, #8
   4b85c:	mov	r0, r8
   4b860:	bl	157c <fwrite@plt>
   4b864:	add	r5, r5, #1
   4b868:	ldr	r3, [r4, #12]
   4b86c:	ldr	r3, [r3, r7]
   4b870:	cmp	r3, r5
   4b874:	ble	4b808 <Mat_VarWrite4+0x374>
   4b878:	ldr	r3, [r4, #20]
   4b87c:	cmp	r3, r5
   4b880:	bgt	4b84c <Mat_VarWrite4+0x3b8>
   4b884:	b	4b808 <Mat_VarWrite4+0x374>
   4b888:	ldr	r7, [sp]
   4b88c:	ldr	r3, [sl, #32]
   4b890:	vldr	s14, [r3, #4]
   4b894:	vcvt.f64.u32	d7, s14
   4b898:	add	r0, sp, #40	; 0x28
   4b89c:	vmov	r2, r3, d7
   4b8a0:	strd	r2, [r0, #-32]!	; 0xffffffe0
   4b8a4:	ldr	r3, [r6]
   4b8a8:	mov	r2, #1
   4b8ac:	mov	r1, #8
   4b8b0:	bl	157c <fwrite@plt>
   4b8b4:	mov	r2, #0
   4b8b8:	mov	r3, #0
   4b8bc:	strd	r2, [sp, #8]
   4b8c0:	ldr	fp, [sl, #20]
   4b8c4:	cmp	fp, #0
   4b8c8:	beq	4ba2c <Mat_VarWrite4+0x598>
   4b8cc:	ldr	r3, [r4, #24]
   4b8d0:	ldr	r2, [r3]
   4b8d4:	str	r2, [sp]
   4b8d8:	ldr	r3, [r3, #4]
   4b8dc:	str	r3, [sp, #4]
   4b8e0:	ldr	r3, [r4, #16]
   4b8e4:	sub	r3, r3, #1
   4b8e8:	cmp	r3, #0
   4b8ec:	ble	4b97c <Mat_VarWrite4+0x4e8>
   4b8f0:	mov	r9, #4
   4b8f4:	mov	fp, #0
   4b8f8:	mov	sl, #1
   4b8fc:	b	4b918 <Mat_VarWrite4+0x484>
   4b900:	add	fp, fp, #1
   4b904:	add	r9, r9, #4
   4b908:	ldr	r3, [r4, #16]
   4b90c:	sub	r3, r3, #1
   4b910:	cmp	r3, fp
   4b914:	ble	4b97c <Mat_VarWrite4+0x4e8>
   4b918:	ldr	r3, [r4, #12]
   4b91c:	ldr	r5, [r3, fp, lsl #2]
   4b920:	ldr	r3, [r3, r9]
   4b924:	cmp	r5, r3
   4b928:	bge	4b900 <Mat_VarWrite4+0x46c>
   4b92c:	ldr	r3, [r4, #20]
   4b930:	cmp	r5, r3
   4b934:	bge	4b900 <Mat_VarWrite4+0x46c>
   4b938:	ldr	r3, [sp]
   4b93c:	mla	r8, r7, r5, r3
   4b940:	ldr	r3, [r6]
   4b944:	mov	r2, sl
   4b948:	mov	r1, r7
   4b94c:	mov	r0, r8
   4b950:	bl	157c <fwrite@plt>
   4b954:	add	r5, r5, #1
   4b958:	ldr	r3, [r4, #12]
   4b95c:	ldr	r3, [r3, r9]
   4b960:	cmp	r3, r5
   4b964:	ble	4b900 <Mat_VarWrite4+0x46c>
   4b968:	add	r8, r8, r7
   4b96c:	ldr	r3, [r4, #20]
   4b970:	cmp	r3, r5
   4b974:	bgt	4b940 <Mat_VarWrite4+0x4ac>
   4b978:	b	4b900 <Mat_VarWrite4+0x46c>
   4b97c:	ldr	r3, [r6]
   4b980:	mov	r2, #1
   4b984:	mov	r1, r7
   4b988:	add	r0, sp, #8
   4b98c:	bl	157c <fwrite@plt>
   4b990:	ldr	r3, [r4, #16]
   4b994:	sub	r3, r3, #1
   4b998:	cmp	r3, #0
   4b99c:	ble	4bacc <Mat_VarWrite4+0x638>
   4b9a0:	mov	r9, #4
   4b9a4:	mov	fp, #0
   4b9a8:	mov	sl, #1
   4b9ac:	b	4b9c8 <Mat_VarWrite4+0x534>
   4b9b0:	add	fp, fp, #1
   4b9b4:	add	r9, r9, #4
   4b9b8:	ldr	r3, [r4, #16]
   4b9bc:	sub	r3, r3, #1
   4b9c0:	cmp	r3, fp
   4b9c4:	ble	4bacc <Mat_VarWrite4+0x638>
   4b9c8:	ldr	r3, [r4, #12]
   4b9cc:	ldr	r5, [r3, fp, lsl #2]
   4b9d0:	ldr	r3, [r3, r9]
   4b9d4:	cmp	r5, r3
   4b9d8:	bge	4b9b0 <Mat_VarWrite4+0x51c>
   4b9dc:	ldr	r3, [r4, #20]
   4b9e0:	cmp	r5, r3
   4b9e4:	bge	4b9b0 <Mat_VarWrite4+0x51c>
   4b9e8:	ldr	r3, [sp, #4]
   4b9ec:	mla	r8, r7, r5, r3
   4b9f0:	ldr	r3, [r6]
   4b9f4:	mov	r2, sl
   4b9f8:	mov	r1, r7
   4b9fc:	mov	r0, r8
   4ba00:	bl	157c <fwrite@plt>
   4ba04:	add	r5, r5, #1
   4ba08:	ldr	r3, [r4, #12]
   4ba0c:	ldr	r3, [r3, r9]
   4ba10:	cmp	r3, r5
   4ba14:	ble	4b9b0 <Mat_VarWrite4+0x51c>
   4ba18:	add	r8, r8, r7
   4ba1c:	ldr	r3, [r4, #20]
   4ba20:	cmp	r3, r5
   4ba24:	bgt	4b9f0 <Mat_VarWrite4+0x55c>
   4ba28:	b	4b9b0 <Mat_VarWrite4+0x51c>
   4ba2c:	ldr	r3, [r4, #24]
   4ba30:	str	r3, [sp]
   4ba34:	ldr	r3, [r4, #16]
   4ba38:	sub	r3, r3, #1
   4ba3c:	cmp	r3, #0
   4ba40:	ble	4bacc <Mat_VarWrite4+0x638>
   4ba44:	mov	r9, #4
   4ba48:	mov	sl, #1
   4ba4c:	b	4ba68 <Mat_VarWrite4+0x5d4>
   4ba50:	add	fp, fp, #1
   4ba54:	add	r9, r9, #4
   4ba58:	ldr	r3, [r4, #16]
   4ba5c:	sub	r3, r3, #1
   4ba60:	cmp	r3, fp
   4ba64:	ble	4bacc <Mat_VarWrite4+0x638>
   4ba68:	ldr	r3, [r4, #12]
   4ba6c:	ldr	r5, [r3, fp, lsl #2]
   4ba70:	ldr	r3, [r3, r9]
   4ba74:	cmp	r5, r3
   4ba78:	bge	4ba50 <Mat_VarWrite4+0x5bc>
   4ba7c:	ldr	r3, [r4, #20]
   4ba80:	cmp	r5, r3
   4ba84:	bge	4ba50 <Mat_VarWrite4+0x5bc>
   4ba88:	ldr	r3, [sp]
   4ba8c:	mla	r8, r7, r5, r3
   4ba90:	ldr	r3, [r6]
   4ba94:	mov	r2, sl
   4ba98:	mov	r1, r7
   4ba9c:	mov	r0, r8
   4baa0:	bl	157c <fwrite@plt>
   4baa4:	add	r5, r5, #1
   4baa8:	ldr	r3, [r4, #12]
   4baac:	ldr	r3, [r3, r9]
   4bab0:	cmp	r3, r5
   4bab4:	ble	4ba50 <Mat_VarWrite4+0x5bc>
   4bab8:	add	r8, r8, r7
   4babc:	ldr	r3, [r4, #20]
   4bac0:	cmp	r3, r5
   4bac4:	bgt	4ba90 <Mat_VarWrite4+0x5fc>
   4bac8:	b	4ba50 <Mat_VarWrite4+0x5bc>
   4bacc:	ldr	r3, [r6]
   4bad0:	mov	r2, #1
   4bad4:	mov	r1, r7
   4bad8:	add	r0, sp, #8
   4badc:	bl	157c <fwrite@plt>
   4bae0:	mov	r5, #0
   4bae4:	b	4b654 <Mat_VarWrite4+0x1c0>
   4bae8:	mvn	r5, #0
   4baec:	b	4b654 <Mat_VarWrite4+0x1c0>
   4baf0:	mvn	r5, #0
   4baf4:	b	4b654 <Mat_VarWrite4+0x1c0>
   4baf8:	mvn	r5, #0
   4bafc:	b	4b654 <Mat_VarWrite4+0x1c0>
   4bb00:	mov	r5, #0
   4bb04:	b	4b654 <Mat_VarWrite4+0x1c0>

0004bb08 <Mat_VarRead4>:
   4bb08:	push	{r4, r5, r6, r7, r8, r9, lr}
   4bb0c:	sub	sp, sp, #28
   4bb10:	mov	r6, r0
   4bb14:	mov	r4, r1
   4bb18:	add	r1, sp, #24
   4bb1c:	mov	r3, #1
   4bb20:	str	r3, [r1, #-4]!
   4bb24:	mov	r0, r4
   4bb28:	bl	4d06c <SafeMulDims>
   4bb2c:	ldr	r3, [r4, #52]	; 0x34
   4bb30:	mov	r2, #0
   4bb34:	ldr	r1, [r3]
   4bb38:	ldr	r0, [r6]
   4bb3c:	bl	1714 <fseek@plt>
   4bb40:	ldr	r3, [r4, #16]
   4bb44:	cmp	r3, #5
   4bb48:	beq	4bc78 <Mat_VarRead4+0x170>
   4bb4c:	cmp	r3, #6
   4bb50:	beq	4bb6c <Mat_VarRead4+0x64>
   4bb54:	cmp	r3, #4
   4bb58:	beq	4bc24 <Mat_VarRead4+0x11c>
   4bb5c:	ldr	r0, [pc, #1540]	; 4c168 <Mat_VarRead4+0x660>
   4bb60:	add	r0, pc, r0
   4bb64:	bl	1690 <Mat_Critical@plt>
   4bb68:	b	4bbd0 <Mat_VarRead4+0xc8>
   4bb6c:	mov	r2, #8
   4bb70:	str	r2, [r4, #12]
   4bb74:	ldr	r1, [sp, #20]
   4bb78:	mov	r0, r4
   4bb7c:	bl	4d0c8 <SafeMul>
   4bb80:	ldr	r3, [r4, #20]
   4bb84:	cmp	r3, #0
   4bb88:	beq	4bbe8 <Mat_VarRead4+0xe0>
   4bb8c:	ldr	r0, [r4]
   4bb90:	bl	4cf3c <ComplexMalloc>
   4bb94:	subs	r5, r0, #0
   4bb98:	beq	4bbd8 <Mat_VarRead4+0xd0>
   4bb9c:	str	r5, [r4, #40]	; 0x28
   4bba0:	ldr	r3, [sp, #20]
   4bba4:	ldr	r2, [r4, #8]
   4bba8:	ldr	r1, [r5]
   4bbac:	mov	r0, r6
   4bbb0:	bl	3aa0 <ReadDoubleData>
   4bbb4:	ldr	r3, [sp, #20]
   4bbb8:	ldr	r2, [r4, #8]
   4bbbc:	ldr	r1, [r5, #4]
   4bbc0:	mov	r0, r6
   4bbc4:	bl	3aa0 <ReadDoubleData>
   4bbc8:	mov	r3, #9
   4bbcc:	str	r3, [r4, #8]
   4bbd0:	add	sp, sp, #28
   4bbd4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4bbd8:	ldr	r0, [pc, #1420]	; 4c16c <Mat_VarRead4+0x664>
   4bbdc:	add	r0, pc, r0
   4bbe0:	bl	1690 <Mat_Critical@plt>
   4bbe4:	b	4bbc8 <Mat_VarRead4+0xc0>
   4bbe8:	ldr	r0, [r4]
   4bbec:	bl	15ac <malloc@plt>
   4bbf0:	str	r0, [r4, #40]	; 0x28
   4bbf4:	cmp	r0, #0
   4bbf8:	beq	4bc14 <Mat_VarRead4+0x10c>
   4bbfc:	ldr	r3, [sp, #20]
   4bc00:	ldr	r2, [r4, #8]
   4bc04:	mov	r1, r0
   4bc08:	mov	r0, r6
   4bc0c:	bl	3aa0 <ReadDoubleData>
   4bc10:	b	4bbc8 <Mat_VarRead4+0xc0>
   4bc14:	ldr	r0, [pc, #1364]	; 4c170 <Mat_VarRead4+0x668>
   4bc18:	add	r0, pc, r0
   4bc1c:	bl	1690 <Mat_Critical@plt>
   4bc20:	b	4bbc8 <Mat_VarRead4+0xc0>
   4bc24:	mov	r3, #1
   4bc28:	str	r3, [r4, #12]
   4bc2c:	ldr	r5, [sp, #20]
   4bc30:	str	r5, [r4]
   4bc34:	mov	r0, r5
   4bc38:	bl	15ac <malloc@plt>
   4bc3c:	str	r0, [r4, #40]	; 0x28
   4bc40:	cmp	r0, #0
   4bc44:	beq	4bc68 <Mat_VarRead4+0x160>
   4bc48:	mov	r3, r5
   4bc4c:	ldr	r2, [r4, #8]
   4bc50:	mov	r1, r0
   4bc54:	mov	r0, r6
   4bc58:	bl	13e70 <ReadUInt8Data>
   4bc5c:	mov	r3, #2
   4bc60:	str	r3, [r4, #8]
   4bc64:	b	4bbd0 <Mat_VarRead4+0xc8>
   4bc68:	ldr	r0, [pc, #1284]	; 4c174 <Mat_VarRead4+0x66c>
   4bc6c:	add	r0, pc, r0
   4bc70:	bl	1690 <Mat_Critical@plt>
   4bc74:	b	4bc5c <Mat_VarRead4+0x154>
   4bc78:	mov	r0, #28
   4bc7c:	str	r0, [r4, #12]
   4bc80:	bl	15ac <malloc@plt>
   4bc84:	mov	r5, r0
   4bc88:	str	r0, [r4, #40]	; 0x28
   4bc8c:	cmp	r0, #0
   4bc90:	beq	4c480 <Mat_VarRead4+0x978>
   4bc94:	ldr	r2, [r4, #32]
   4bc98:	ldr	r3, [r2, #4]
   4bc9c:	cmp	r3, #4
   4bca0:	movne	r3, #0
   4bca4:	moveq	r3, #1
   4bca8:	str	r3, [r4, #20]
   4bcac:	ldr	r7, [r2]
   4bcb0:	sub	r7, r7, #1
   4bcb4:	str	r7, [r0, #8]
   4bcb8:	str	r7, [r0]
   4bcbc:	lsl	r0, r7, #2
   4bcc0:	bl	15ac <malloc@plt>
   4bcc4:	str	r0, [r5, #4]
   4bcc8:	cmp	r0, #0
   4bccc:	beq	4bdf4 <Mat_VarRead4+0x2ec>
   4bcd0:	mov	r3, r7
   4bcd4:	mov	r2, #9
   4bcd8:	mov	r1, r0
   4bcdc:	mov	r0, r6
   4bce0:	bl	b6c4 <ReadInt32Data>
   4bce4:	ldr	r3, [r5, #8]
   4bce8:	cmp	r3, #0
   4bcec:	ble	4bd14 <Mat_VarRead4+0x20c>
   4bcf0:	mov	r3, #0
   4bcf4:	ldr	r1, [r5, #4]
   4bcf8:	ldr	r2, [r1, r3, lsl #2]
   4bcfc:	sub	r2, r2, #1
   4bd00:	str	r2, [r1, r3, lsl #2]
   4bd04:	add	r3, r3, #1
   4bd08:	ldr	r2, [r5, #8]
   4bd0c:	cmp	r2, r3
   4bd10:	bgt	4bcf4 <Mat_VarRead4+0x1ec>
   4bd14:	mov	r3, #1
   4bd18:	mov	r2, #9
   4bd1c:	add	r1, sp, #8
   4bd20:	mov	r0, r6
   4bd24:	bl	3aa0 <ReadDoubleData>
   4bd28:	ldr	r3, [r4, #32]
   4bd2c:	vldr	d7, [sp, #8]
   4bd30:	vcvt.u32.f64	s14, d7
   4bd34:	vstr	s14, [r3]
   4bd38:	ldr	r0, [r6]
   4bd3c:	bl	151c <ftell@plt>
   4bd40:	mov	r7, r0
   4bd44:	cmn	r0, #1
   4bd48:	beq	4be14 <Mat_VarRead4+0x30c>
   4bd4c:	ldr	r8, [r6]
   4bd50:	ldr	r9, [r5, #8]
   4bd54:	mov	r0, #9
   4bd58:	bl	1600 <Mat_SizeOf@plt>
   4bd5c:	mov	r2, #1
   4bd60:	mul	r1, r0, r9
   4bd64:	mov	r0, r8
   4bd68:	bl	1714 <fseek@plt>
   4bd6c:	mov	r3, #1
   4bd70:	mov	r2, #9
   4bd74:	add	r1, sp, #8
   4bd78:	mov	r0, r6
   4bd7c:	bl	3aa0 <ReadDoubleData>
   4bd80:	vldr	d7, [sp, #8]
   4bd84:	vldr	d6, [pc, #980]	; 4c160 <Mat_VarRead4+0x658>
   4bd88:	vcmpe.f64	d7, d6
   4bd8c:	vmrs	APSR_nzcv, fpscr
   4bd90:	bgt	4be3c <Mat_VarRead4+0x334>
   4bd94:	vcmpe.f64	d7, #0.0
   4bd98:	vmrs	APSR_nzcv, fpscr
   4bd9c:	bmi	4be3c <Mat_VarRead4+0x334>
   4bda0:	ldr	r3, [r4, #32]
   4bda4:	vcvt.u32.f64	s14, d7
   4bda8:	vstr	s14, [r3, #4]
   4bdac:	mov	r2, #0
   4bdb0:	mov	r1, r7
   4bdb4:	ldr	r0, [r6]
   4bdb8:	bl	1714 <fseek@plt>
   4bdbc:	ldr	r3, [r4, #32]
   4bdc0:	ldr	r3, [r3, #4]
   4bdc4:	cmn	r3, #-2147483646	; 0x80000002
   4bdc8:	bls	4be64 <Mat_VarRead4+0x35c>
   4bdcc:	ldr	r0, [r5, #4]
   4bdd0:	bl	14e0 <free@plt>
   4bdd4:	ldr	r0, [r4, #40]	; 0x28
   4bdd8:	bl	14e0 <free@plt>
   4bddc:	mov	r3, #0
   4bde0:	str	r3, [r4, #40]	; 0x28
   4bde4:	ldr	r0, [pc, #908]	; 4c178 <Mat_VarRead4+0x670>
   4bde8:	add	r0, pc, r0
   4bdec:	bl	1690 <Mat_Critical@plt>
   4bdf0:	b	4bbd0 <Mat_VarRead4+0xc8>
   4bdf4:	mov	r0, r5
   4bdf8:	bl	14e0 <free@plt>
   4bdfc:	mov	r3, #0
   4be00:	str	r3, [r4, #40]	; 0x28
   4be04:	ldr	r0, [pc, #880]	; 4c17c <Mat_VarRead4+0x674>
   4be08:	add	r0, pc, r0
   4be0c:	bl	1690 <Mat_Critical@plt>
   4be10:	b	4bbd0 <Mat_VarRead4+0xc8>
   4be14:	ldr	r0, [r5, #4]
   4be18:	bl	14e0 <free@plt>
   4be1c:	ldr	r0, [r4, #40]	; 0x28
   4be20:	bl	14e0 <free@plt>
   4be24:	mov	r3, #0
   4be28:	str	r3, [r4, #40]	; 0x28
   4be2c:	ldr	r0, [pc, #844]	; 4c180 <Mat_VarRead4+0x678>
   4be30:	add	r0, pc, r0
   4be34:	bl	1690 <Mat_Critical@plt>
   4be38:	b	4bbd0 <Mat_VarRead4+0xc8>
   4be3c:	ldr	r0, [r5, #4]
   4be40:	bl	14e0 <free@plt>
   4be44:	ldr	r0, [r4, #40]	; 0x28
   4be48:	bl	14e0 <free@plt>
   4be4c:	mov	r3, #0
   4be50:	str	r3, [r4, #40]	; 0x28
   4be54:	ldr	r0, [pc, #808]	; 4c184 <Mat_VarRead4+0x67c>
   4be58:	add	r0, pc, r0
   4be5c:	bl	1690 <Mat_Critical@plt>
   4be60:	b	4bbd0 <Mat_VarRead4+0xc8>
   4be64:	add	r3, r3, #1
   4be68:	str	r3, [r5, #16]
   4be6c:	lsl	r0, r3, #2
   4be70:	bl	15ac <malloc@plt>
   4be74:	mov	r8, r0
   4be78:	str	r0, [r5, #12]
   4be7c:	cmp	r0, #0
   4be80:	beq	4bfe4 <Mat_VarRead4+0x4dc>
   4be84:	ldr	r9, [r5, #8]
   4be88:	lsl	r0, r9, #2
   4be8c:	bl	15ac <malloc@plt>
   4be90:	subs	r7, r0, #0
   4be94:	beq	4bfb4 <Mat_VarRead4+0x4ac>
   4be98:	mov	r3, #0
   4be9c:	str	r3, [r8]
   4bea0:	mov	r3, r9
   4bea4:	mov	r2, #9
   4bea8:	mov	r1, r7
   4beac:	mov	r0, r6
   4beb0:	bl	b6c4 <ReadInt32Data>
   4beb4:	ldr	r8, [r5, #16]
   4beb8:	sub	r3, r8, #1
   4bebc:	cmp	r3, #1
   4bec0:	movgt	r0, #1
   4bec4:	movgt	r3, #0
   4bec8:	bgt	4bf7c <Mat_VarRead4+0x474>
   4becc:	mov	r0, r7
   4bed0:	bl	14e0 <free@plt>
   4bed4:	ldr	r2, [r5, #8]
   4bed8:	sub	r8, r8, #-1073741823	; 0xc0000001
   4bedc:	ldr	r3, [r5, #12]
   4bee0:	str	r2, [r3, r8, lsl #2]
   4bee4:	mov	r3, #1
   4bee8:	mov	r2, #9
   4beec:	add	r1, sp, #8
   4bef0:	mov	r0, r6
   4bef4:	bl	3aa0 <ReadDoubleData>
   4bef8:	ldr	r8, [r5, #8]
   4befc:	str	r8, [r5, #20]
   4bf00:	ldr	r7, [r4, #8]
   4bf04:	ldr	r3, [r4, #20]
   4bf08:	cmp	r3, #0
   4bf0c:	bne	4c00c <Mat_VarRead4+0x504>
   4bf10:	mov	r0, r7
   4bf14:	bl	1600 <Mat_SizeOf@plt>
   4bf18:	mul	r0, r0, r8
   4bf1c:	bl	15ac <malloc@plt>
   4bf20:	mov	r1, r0
   4bf24:	str	r0, [r5, #24]
   4bf28:	cmp	r0, #0
   4bf2c:	beq	4c450 <Mat_VarRead4+0x948>
   4bf30:	sub	r3, r7, #2
   4bf34:	cmp	r3, #7
   4bf38:	addls	pc, pc, r3, lsl #2
   4bf3c:	b	4c418 <Mat_VarRead4+0x910>
   4bf40:	b	4c3f0 <Mat_VarRead4+0x8e8>
   4bf44:	b	4c3a0 <Mat_VarRead4+0x898>
   4bf48:	b	4c3c8 <Mat_VarRead4+0x8c0>
   4bf4c:	b	4c378 <Mat_VarRead4+0x870>
   4bf50:	b	4c418 <Mat_VarRead4+0x910>
   4bf54:	b	4c350 <Mat_VarRead4+0x848>
   4bf58:	b	4c418 <Mat_VarRead4+0x910>
   4bf5c:	b	4c328 <Mat_VarRead4+0x820>
   4bf60:	ldr	r2, [r5, #12]
   4bf64:	str	r3, [r2, r0, lsl #2]
   4bf68:	add	r0, r0, #1
   4bf6c:	ldr	r8, [r5, #16]
   4bf70:	sub	r2, r8, #1
   4bf74:	cmp	r2, r0
   4bf78:	ble	4becc <Mat_VarRead4+0x3c4>
   4bf7c:	ldr	ip, [r5, #8]
   4bf80:	cmp	r3, ip
   4bf84:	bge	4bf60 <Mat_VarRead4+0x458>
   4bf88:	add	r2, r7, r3, lsl #2
   4bf8c:	ldr	r1, [r7, r3, lsl #2]
   4bf90:	cmp	r1, r0
   4bf94:	bgt	4bf60 <Mat_VarRead4+0x458>
   4bf98:	add	r3, r3, #1
   4bf9c:	cmp	r3, ip
   4bfa0:	beq	4bf60 <Mat_VarRead4+0x458>
   4bfa4:	ldr	r1, [r2, #4]!
   4bfa8:	cmp	r1, r0
   4bfac:	ble	4bf98 <Mat_VarRead4+0x490>
   4bfb0:	b	4bf60 <Mat_VarRead4+0x458>
   4bfb4:	mov	r0, r8
   4bfb8:	bl	14e0 <free@plt>
   4bfbc:	ldr	r0, [r5, #4]
   4bfc0:	bl	14e0 <free@plt>
   4bfc4:	ldr	r0, [r4, #40]	; 0x28
   4bfc8:	bl	14e0 <free@plt>
   4bfcc:	mov	r3, #0
   4bfd0:	str	r3, [r4, #40]	; 0x28
   4bfd4:	ldr	r0, [pc, #428]	; 4c188 <Mat_VarRead4+0x680>
   4bfd8:	add	r0, pc, r0
   4bfdc:	bl	1690 <Mat_Critical@plt>
   4bfe0:	b	4bbd0 <Mat_VarRead4+0xc8>
   4bfe4:	ldr	r0, [r5, #4]
   4bfe8:	bl	14e0 <free@plt>
   4bfec:	ldr	r0, [r4, #40]	; 0x28
   4bff0:	bl	14e0 <free@plt>
   4bff4:	mov	r3, #0
   4bff8:	str	r3, [r4, #40]	; 0x28
   4bffc:	ldr	r0, [pc, #392]	; 4c18c <Mat_VarRead4+0x684>
   4c000:	add	r0, pc, r0
   4c004:	bl	1690 <Mat_Critical@plt>
   4c008:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c00c:	mov	r0, r7
   4c010:	bl	1600 <Mat_SizeOf@plt>
   4c014:	mul	r0, r0, r8
   4c018:	bl	4cf3c <ComplexMalloc>
   4c01c:	subs	r8, r0, #0
   4c020:	beq	4c2f8 <Mat_VarRead4+0x7f0>
   4c024:	str	r8, [r5, #24]
   4c028:	sub	r3, r7, #2
   4c02c:	cmp	r3, #7
   4c030:	addls	pc, pc, r3, lsl #2
   4c034:	b	4c2ac <Mat_VarRead4+0x7a4>
   4c038:	b	4c254 <Mat_VarRead4+0x74c>
   4c03c:	b	4c1a4 <Mat_VarRead4+0x69c>
   4c040:	b	4c1fc <Mat_VarRead4+0x6f4>
   4c044:	b	4c108 <Mat_VarRead4+0x600>
   4c048:	b	4c2ac <Mat_VarRead4+0x7a4>
   4c04c:	b	4c0b0 <Mat_VarRead4+0x5a8>
   4c050:	b	4c2ac <Mat_VarRead4+0x7a4>
   4c054:	b	4c058 <Mat_VarRead4+0x550>
   4c058:	ldr	r3, [r5, #20]
   4c05c:	mov	r2, #9
   4c060:	ldr	r1, [r8]
   4c064:	mov	r0, r6
   4c068:	bl	3aa0 <ReadDoubleData>
   4c06c:	mov	r3, #1
   4c070:	mov	r2, #9
   4c074:	add	r4, sp, #8
   4c078:	mov	r1, r4
   4c07c:	mov	r0, r6
   4c080:	bl	3aa0 <ReadDoubleData>
   4c084:	ldr	r3, [r5, #20]
   4c088:	mov	r2, #9
   4c08c:	ldr	r1, [r8, #4]
   4c090:	mov	r0, r6
   4c094:	bl	3aa0 <ReadDoubleData>
   4c098:	mov	r3, #1
   4c09c:	mov	r2, #9
   4c0a0:	mov	r1, r4
   4c0a4:	mov	r0, r6
   4c0a8:	bl	3aa0 <ReadDoubleData>
   4c0ac:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c0b0:	ldr	r3, [r5, #20]
   4c0b4:	mov	r2, #7
   4c0b8:	ldr	r1, [r8]
   4c0bc:	mov	r0, r6
   4c0c0:	bl	61cc <ReadSingleData>
   4c0c4:	mov	r3, #1
   4c0c8:	mov	r2, #7
   4c0cc:	add	r4, sp, #4
   4c0d0:	mov	r1, r4
   4c0d4:	mov	r0, r6
   4c0d8:	bl	61cc <ReadSingleData>
   4c0dc:	ldr	r3, [r5, #20]
   4c0e0:	mov	r2, #7
   4c0e4:	ldr	r1, [r8, #4]
   4c0e8:	mov	r0, r6
   4c0ec:	bl	61cc <ReadSingleData>
   4c0f0:	mov	r3, #1
   4c0f4:	mov	r2, #7
   4c0f8:	mov	r1, r4
   4c0fc:	mov	r0, r6
   4c100:	bl	61cc <ReadSingleData>
   4c104:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c108:	ldr	r3, [r5, #20]
   4c10c:	mov	r2, #5
   4c110:	ldr	r1, [r8]
   4c114:	mov	r0, r6
   4c118:	bl	b6c4 <ReadInt32Data>
   4c11c:	mov	r3, #1
   4c120:	mov	r2, #5
   4c124:	add	r4, sp, #4
   4c128:	mov	r1, r4
   4c12c:	mov	r0, r6
   4c130:	bl	b6c4 <ReadInt32Data>
   4c134:	ldr	r3, [r5, #20]
   4c138:	mov	r2, #5
   4c13c:	ldr	r1, [r8, #4]
   4c140:	mov	r0, r6
   4c144:	bl	b6c4 <ReadInt32Data>
   4c148:	mov	r3, #1
   4c14c:	mov	r2, #5
   4c150:	mov	r1, r4
   4c154:	mov	r0, r6
   4c158:	bl	b6c4 <ReadInt32Data>
   4c15c:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c160:	.word	0xff800000
   4c164:	.word	0x41dfffff
   4c168:	.word	0x00006c60
   4c16c:	.word	0x000068b4
   4c170:	.word	0x0000670c
   4c174:	.word	0x000066b8
   4c178:	.word	0x00006934
   4c17c:	.word	0x000068e0
   4c180:	.word	0x00006418
   4c184:	.word	0x000068c4
   4c188:	.word	0x00006770
   4c18c:	.word	0x00006748
   4c190:	.word	0x00006490
   4c194:	.word	0x000060e0
   4c198:	.word	0x00006338
   4c19c:	.word	0x00005fc0
   4c1a0:	.word	0x00005ea0
   4c1a4:	ldr	r3, [r5, #20]
   4c1a8:	mov	r2, #3
   4c1ac:	ldr	r1, [r8]
   4c1b0:	mov	r0, r6
   4c1b4:	bl	eda4 <ReadInt16Data>
   4c1b8:	mov	r3, #1
   4c1bc:	mov	r2, #3
   4c1c0:	add	r4, sp, #4
   4c1c4:	mov	r1, r4
   4c1c8:	mov	r0, r6
   4c1cc:	bl	eda4 <ReadInt16Data>
   4c1d0:	ldr	r3, [r5, #20]
   4c1d4:	mov	r2, #3
   4c1d8:	ldr	r1, [r8, #4]
   4c1dc:	mov	r0, r6
   4c1e0:	bl	eda4 <ReadInt16Data>
   4c1e4:	mov	r3, #1
   4c1e8:	mov	r2, #3
   4c1ec:	mov	r1, r4
   4c1f0:	mov	r0, r6
   4c1f4:	bl	eda4 <ReadInt16Data>
   4c1f8:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c1fc:	ldr	r3, [r5, #20]
   4c200:	mov	r2, #4
   4c204:	ldr	r1, [r8]
   4c208:	mov	r0, r6
   4c20c:	bl	108fc <ReadUInt16Data>
   4c210:	mov	r3, #1
   4c214:	mov	r2, #4
   4c218:	add	r4, sp, r2
   4c21c:	mov	r1, r4
   4c220:	mov	r0, r6
   4c224:	bl	108fc <ReadUInt16Data>
   4c228:	ldr	r3, [r5, #20]
   4c22c:	mov	r2, #4
   4c230:	ldr	r1, [r8, #4]
   4c234:	mov	r0, r6
   4c238:	bl	108fc <ReadUInt16Data>
   4c23c:	mov	r3, #1
   4c240:	mov	r2, #4
   4c244:	mov	r1, r4
   4c248:	mov	r0, r6
   4c24c:	bl	108fc <ReadUInt16Data>
   4c250:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c254:	ldr	r3, [r5, #20]
   4c258:	mov	r2, #2
   4c25c:	ldr	r1, [r8]
   4c260:	mov	r0, r6
   4c264:	bl	13e70 <ReadUInt8Data>
   4c268:	mov	r3, #1
   4c26c:	mov	r2, #2
   4c270:	add	r4, sp, #4
   4c274:	mov	r1, r4
   4c278:	mov	r0, r6
   4c27c:	bl	13e70 <ReadUInt8Data>
   4c280:	ldr	r3, [r5, #20]
   4c284:	mov	r2, #2
   4c288:	ldr	r1, [r8, #4]
   4c28c:	mov	r0, r6
   4c290:	bl	13e70 <ReadUInt8Data>
   4c294:	mov	r3, #1
   4c298:	mov	r2, #2
   4c29c:	mov	r1, r4
   4c2a0:	mov	r0, r6
   4c2a4:	bl	13e70 <ReadUInt8Data>
   4c2a8:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c2ac:	ldr	r0, [r8]
   4c2b0:	bl	14e0 <free@plt>
   4c2b4:	ldr	r0, [r8, #4]
   4c2b8:	bl	14e0 <free@plt>
   4c2bc:	mov	r0, r8
   4c2c0:	bl	14e0 <free@plt>
   4c2c4:	ldr	r0, [r5, #12]
   4c2c8:	bl	14e0 <free@plt>
   4c2cc:	ldr	r0, [r5, #4]
   4c2d0:	bl	14e0 <free@plt>
   4c2d4:	ldr	r0, [r4, #40]	; 0x28
   4c2d8:	bl	14e0 <free@plt>
   4c2dc:	mov	r3, #0
   4c2e0:	str	r3, [r4, #40]	; 0x28
   4c2e4:	mov	r1, r7
   4c2e8:	ldr	r0, [pc, #-352]	; 4c190 <Mat_VarRead4+0x688>
   4c2ec:	add	r0, pc, r0
   4c2f0:	bl	1690 <Mat_Critical@plt>
   4c2f4:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c2f8:	ldr	r0, [r5, #12]
   4c2fc:	bl	14e0 <free@plt>
   4c300:	ldr	r0, [r5, #4]
   4c304:	bl	14e0 <free@plt>
   4c308:	ldr	r0, [r4, #40]	; 0x28
   4c30c:	bl	14e0 <free@plt>
   4c310:	mov	r3, #0
   4c314:	str	r3, [r4, #40]	; 0x28
   4c318:	ldr	r0, [pc, #-396]	; 4c194 <Mat_VarRead4+0x68c>
   4c31c:	add	r0, pc, r0
   4c320:	bl	1690 <Mat_Critical@plt>
   4c324:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c328:	ldr	r3, [r5, #20]
   4c32c:	mov	r2, #9
   4c330:	mov	r0, r6
   4c334:	bl	3aa0 <ReadDoubleData>
   4c338:	mov	r3, #1
   4c33c:	mov	r2, #9
   4c340:	add	r1, sp, #8
   4c344:	mov	r0, r6
   4c348:	bl	3aa0 <ReadDoubleData>
   4c34c:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c350:	ldr	r3, [r5, #20]
   4c354:	mov	r2, #7
   4c358:	mov	r0, r6
   4c35c:	bl	61cc <ReadSingleData>
   4c360:	mov	r3, #1
   4c364:	mov	r2, #7
   4c368:	add	r1, sp, #4
   4c36c:	mov	r0, r6
   4c370:	bl	61cc <ReadSingleData>
   4c374:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c378:	ldr	r3, [r5, #20]
   4c37c:	mov	r2, #5
   4c380:	mov	r0, r6
   4c384:	bl	b6c4 <ReadInt32Data>
   4c388:	mov	r3, #1
   4c38c:	mov	r2, #5
   4c390:	add	r1, sp, #4
   4c394:	mov	r0, r6
   4c398:	bl	b6c4 <ReadInt32Data>
   4c39c:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c3a0:	ldr	r3, [r5, #20]
   4c3a4:	mov	r2, #3
   4c3a8:	mov	r0, r6
   4c3ac:	bl	eda4 <ReadInt16Data>
   4c3b0:	mov	r3, #1
   4c3b4:	mov	r2, #3
   4c3b8:	add	r1, sp, #4
   4c3bc:	mov	r0, r6
   4c3c0:	bl	eda4 <ReadInt16Data>
   4c3c4:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c3c8:	ldr	r3, [r5, #20]
   4c3cc:	mov	r2, #4
   4c3d0:	mov	r0, r6
   4c3d4:	bl	108fc <ReadUInt16Data>
   4c3d8:	mov	r3, #1
   4c3dc:	mov	r2, #4
   4c3e0:	add	r1, sp, r2
   4c3e4:	mov	r0, r6
   4c3e8:	bl	108fc <ReadUInt16Data>
   4c3ec:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c3f0:	ldr	r3, [r5, #20]
   4c3f4:	mov	r2, #2
   4c3f8:	mov	r0, r6
   4c3fc:	bl	13e70 <ReadUInt8Data>
   4c400:	mov	r3, #1
   4c404:	mov	r2, #2
   4c408:	add	r1, sp, #4
   4c40c:	mov	r0, r6
   4c410:	bl	13e70 <ReadUInt8Data>
   4c414:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c418:	bl	14e0 <free@plt>
   4c41c:	ldr	r0, [r5, #12]
   4c420:	bl	14e0 <free@plt>
   4c424:	ldr	r0, [r5, #4]
   4c428:	bl	14e0 <free@plt>
   4c42c:	ldr	r0, [r4, #40]	; 0x28
   4c430:	bl	14e0 <free@plt>
   4c434:	mov	r3, #0
   4c438:	str	r3, [r4, #40]	; 0x28
   4c43c:	mov	r1, r7
   4c440:	ldr	r0, [pc, #-688]	; 4c198 <Mat_VarRead4+0x690>
   4c444:	add	r0, pc, r0
   4c448:	bl	1690 <Mat_Critical@plt>
   4c44c:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c450:	ldr	r0, [r5, #12]
   4c454:	bl	14e0 <free@plt>
   4c458:	ldr	r0, [r5, #4]
   4c45c:	bl	14e0 <free@plt>
   4c460:	ldr	r0, [r4, #40]	; 0x28
   4c464:	bl	14e0 <free@plt>
   4c468:	mov	r3, #0
   4c46c:	str	r3, [r4, #40]	; 0x28
   4c470:	ldr	r0, [pc, #-732]	; 4c19c <Mat_VarRead4+0x694>
   4c474:	add	r0, pc, r0
   4c478:	bl	1690 <Mat_Critical@plt>
   4c47c:	b	4bbd0 <Mat_VarRead4+0xc8>
   4c480:	ldr	r0, [pc, #-744]	; 4c1a0 <Mat_VarRead4+0x698>
   4c484:	add	r0, pc, r0
   4c488:	bl	1690 <Mat_Critical@plt>
   4c48c:	b	4bbd0 <Mat_VarRead4+0xc8>

0004c490 <Mat_VarReadData4>:
   4c490:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4c494:	sub	sp, sp, #32
   4c498:	mov	r6, r0
   4c49c:	mov	r4, r1
   4c4a0:	mov	sl, r2
   4c4a4:	mov	r7, r3
   4c4a8:	ldr	r8, [sp, #64]	; 0x40
   4c4ac:	ldr	r9, [sp, #68]	; 0x44
   4c4b0:	ldr	r3, [r1, #52]	; 0x34
   4c4b4:	mov	r2, #0
   4c4b8:	ldr	r1, [r3]
   4c4bc:	ldr	r0, [r0]
   4c4c0:	bl	1714 <fseek@plt>
   4c4c4:	ldr	r3, [r4, #8]
   4c4c8:	sub	r2, r3, #2
   4c4cc:	cmp	r2, #7
   4c4d0:	addls	pc, pc, r2, lsl #2
   4c4d4:	b	4c6ec <Mat_VarReadData4+0x25c>
   4c4d8:	b	4c4f8 <Mat_VarReadData4+0x68>
   4c4dc:	b	4c4f8 <Mat_VarReadData4+0x68>
   4c4e0:	b	4c4f8 <Mat_VarReadData4+0x68>
   4c4e4:	b	4c4f8 <Mat_VarReadData4+0x68>
   4c4e8:	b	4c6ec <Mat_VarReadData4+0x25c>
   4c4ec:	b	4c4f8 <Mat_VarReadData4+0x68>
   4c4f0:	b	4c6ec <Mat_VarReadData4+0x25c>
   4c4f4:	b	4c4f8 <Mat_VarReadData4+0x68>
   4c4f8:	ldr	r1, [r4, #4]
   4c4fc:	cmp	r1, #2
   4c500:	beq	4c544 <Mat_VarReadData4+0xb4>
   4c504:	ldr	r5, [r4, #20]
   4c508:	cmp	r5, #0
   4c50c:	bne	4c650 <Mat_VarReadData4+0x1c0>
   4c510:	ldr	r2, [r4, #16]
   4c514:	str	r9, [sp, #16]
   4c518:	str	r8, [sp, #12]
   4c51c:	str	r7, [sp, #8]
   4c520:	ldr	r0, [r4, #32]
   4c524:	str	r0, [sp, #4]
   4c528:	str	r1, [sp]
   4c52c:	mov	r1, sl
   4c530:	mov	r0, r6
   4c534:	bl	15b28 <ReadDataSlabN>
   4c538:	mov	r0, r5
   4c53c:	add	sp, sp, #32
   4c540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c544:	ldr	r1, [r4, #32]
   4c548:	ldr	r2, [r9]
   4c54c:	sub	r2, r2, #1
   4c550:	ldr	ip, [r8]
   4c554:	ldr	r0, [r7]
   4c558:	add	r0, r0, #1
   4c55c:	mla	r2, ip, r2, r0
   4c560:	ldr	r0, [r1]
   4c564:	cmp	r2, r0
   4c568:	movhi	r5, #1
   4c56c:	bhi	4c598 <Mat_VarReadData4+0x108>
   4c570:	ldr	r5, [r9, #4]
   4c574:	sub	r5, r5, #1
   4c578:	ldr	r0, [r8, #4]
   4c57c:	ldr	r2, [r7, #4]
   4c580:	add	r2, r2, #1
   4c584:	mla	r5, r0, r5, r2
   4c588:	ldr	r2, [r1, #4]
   4c58c:	cmp	r5, r2
   4c590:	movls	r5, #0
   4c594:	movhi	r5, #1
   4c598:	ldr	r2, [r4, #20]
   4c59c:	cmp	r2, #0
   4c5a0:	beq	4c62c <Mat_VarReadData4+0x19c>
   4c5a4:	mov	r0, r3
   4c5a8:	bl	1600 <Mat_SizeOf@plt>
   4c5ac:	add	r1, sp, #32
   4c5b0:	str	r0, [r1, #-4]!
   4c5b4:	mov	r0, r4
   4c5b8:	bl	4d06c <SafeMulDims>
   4c5bc:	str	r9, [sp, #12]
   4c5c0:	str	r8, [sp, #8]
   4c5c4:	str	r7, [sp, #4]
   4c5c8:	ldr	r3, [r4, #32]
   4c5cc:	str	r3, [sp]
   4c5d0:	ldr	r3, [r4, #8]
   4c5d4:	ldr	r2, [r4, #16]
   4c5d8:	ldr	r1, [sl]
   4c5dc:	mov	r0, r6
   4c5e0:	bl	1da88 <ReadDataSlab2>
   4c5e4:	ldr	r3, [r4, #52]	; 0x34
   4c5e8:	ldr	r1, [r3]
   4c5ec:	mov	r2, #0
   4c5f0:	ldr	r3, [sp, #28]
   4c5f4:	add	r1, r1, r3
   4c5f8:	ldr	r0, [r6]
   4c5fc:	bl	1714 <fseek@plt>
   4c600:	ldr	r3, [r4, #8]
   4c604:	ldr	r2, [r4, #16]
   4c608:	ldr	r1, [sl, #4]
   4c60c:	str	r9, [sp, #12]
   4c610:	str	r8, [sp, #8]
   4c614:	str	r7, [sp, #4]
   4c618:	ldr	r0, [r4, #32]
   4c61c:	str	r0, [sp]
   4c620:	mov	r0, r6
   4c624:	bl	1da88 <ReadDataSlab2>
   4c628:	b	4c538 <Mat_VarReadData4+0xa8>
   4c62c:	ldr	r2, [r4, #16]
   4c630:	str	r9, [sp, #12]
   4c634:	str	r8, [sp, #8]
   4c638:	str	r7, [sp, #4]
   4c63c:	str	r1, [sp]
   4c640:	mov	r1, sl
   4c644:	mov	r0, r6
   4c648:	bl	1da88 <ReadDataSlab2>
   4c64c:	b	4c538 <Mat_VarReadData4+0xa8>
   4c650:	mov	r0, r3
   4c654:	bl	1600 <Mat_SizeOf@plt>
   4c658:	add	r1, sp, #32
   4c65c:	str	r0, [r1, #-4]!
   4c660:	mov	r0, r4
   4c664:	bl	4d06c <SafeMulDims>
   4c668:	str	r9, [sp, #16]
   4c66c:	str	r8, [sp, #12]
   4c670:	str	r7, [sp, #8]
   4c674:	ldr	r3, [r4, #32]
   4c678:	str	r3, [sp, #4]
   4c67c:	ldr	r3, [r4, #4]
   4c680:	str	r3, [sp]
   4c684:	ldr	r3, [r4, #8]
   4c688:	ldr	r2, [r4, #16]
   4c68c:	ldr	r1, [sl]
   4c690:	mov	r0, r6
   4c694:	bl	15b28 <ReadDataSlabN>
   4c698:	ldr	r3, [r4, #52]	; 0x34
   4c69c:	ldr	r1, [r3]
   4c6a0:	mov	r2, #0
   4c6a4:	ldr	r3, [sp, #28]
   4c6a8:	add	r1, r1, r3
   4c6ac:	ldr	r0, [r6]
   4c6b0:	bl	1714 <fseek@plt>
   4c6b4:	ldr	r3, [r4, #8]
   4c6b8:	ldr	r2, [r4, #16]
   4c6bc:	ldr	r1, [sl, #4]
   4c6c0:	str	r9, [sp, #16]
   4c6c4:	str	r8, [sp, #12]
   4c6c8:	str	r7, [sp, #8]
   4c6cc:	ldr	r0, [r4, #32]
   4c6d0:	str	r0, [sp, #4]
   4c6d4:	ldr	r0, [r4, #4]
   4c6d8:	str	r0, [sp]
   4c6dc:	mov	r0, r6
   4c6e0:	bl	15b28 <ReadDataSlabN>
   4c6e4:	mov	r5, #0
   4c6e8:	b	4c538 <Mat_VarReadData4+0xa8>
   4c6ec:	mov	r5, #1
   4c6f0:	b	4c538 <Mat_VarReadData4+0xa8>

0004c6f4 <Mat_VarReadDataLinear4>:
   4c6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c6f8:	sub	sp, sp, #36	; 0x24
   4c6fc:	mov	r5, r0
   4c700:	mov	r4, r1
   4c704:	mov	fp, r2
   4c708:	mov	r6, r3
   4c70c:	ldr	r8, [sp, #72]	; 0x48
   4c710:	ldr	r7, [sp, #76]	; 0x4c
   4c714:	add	r1, sp, #32
   4c718:	mov	r3, #1
   4c71c:	str	r3, [r1, #-4]!
   4c720:	mov	r0, r4
   4c724:	bl	4d06c <SafeMulDims>
   4c728:	str	r0, [sp, #20]
   4c72c:	ldr	r3, [r4, #52]	; 0x34
   4c730:	mov	r2, #0
   4c734:	ldr	r1, [r3]
   4c738:	ldr	r0, [r5]
   4c73c:	bl	1714 <fseek@plt>
   4c740:	ldr	r0, [r4, #8]
   4c744:	bl	1600 <Mat_SizeOf@plt>
   4c748:	str	r0, [r4, #12]
   4c74c:	ldr	sl, [sp, #28]
   4c750:	sub	r3, r7, #1
   4c754:	add	r2, r6, #1
   4c758:	mla	r3, r8, r3, r2
   4c75c:	cmp	r3, sl
   4c760:	movhi	r3, #1
   4c764:	strhi	r3, [sp, #20]
   4c768:	bhi	4c79c <Mat_VarReadDataLinear4+0xa8>
   4c76c:	mov	r9, r0
   4c770:	ldr	r3, [r4, #20]
   4c774:	cmp	r3, #0
   4c778:	bne	4c7a8 <Mat_VarReadDataLinear4+0xb4>
   4c77c:	ldr	r3, [r4, #8]
   4c780:	ldr	r2, [r4, #16]
   4c784:	str	r7, [sp, #8]
   4c788:	str	r8, [sp, #4]
   4c78c:	str	r6, [sp]
   4c790:	mov	r1, fp
   4c794:	mov	r0, r5
   4c798:	bl	1d550 <ReadDataSlab1>
   4c79c:	ldr	r0, [sp, #20]
   4c7a0:	add	sp, sp, #36	; 0x24
   4c7a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c7a8:	str	r7, [sp, #8]
   4c7ac:	str	r8, [sp, #4]
   4c7b0:	str	r6, [sp]
   4c7b4:	ldr	r3, [r4, #8]
   4c7b8:	ldr	r2, [r4, #16]
   4c7bc:	ldr	r1, [fp]
   4c7c0:	mov	r0, r5
   4c7c4:	bl	1d550 <ReadDataSlab1>
   4c7c8:	ldr	r3, [r4, #52]	; 0x34
   4c7cc:	ldr	r1, [r3]
   4c7d0:	mov	r2, #0
   4c7d4:	mla	r1, sl, r9, r1
   4c7d8:	ldr	r0, [r5]
   4c7dc:	bl	1714 <fseek@plt>
   4c7e0:	ldr	r3, [r4, #8]
   4c7e4:	ldr	r2, [r4, #16]
   4c7e8:	ldr	r1, [fp, #4]
   4c7ec:	str	r7, [sp, #8]
   4c7f0:	str	r8, [sp, #4]
   4c7f4:	str	r6, [sp]
   4c7f8:	mov	r0, r5
   4c7fc:	bl	1d550 <ReadDataSlab1>
   4c800:	b	4c79c <Mat_VarReadDataLinear4+0xa8>

0004c804 <Mat_VarReadNextInfo4>:
   4c804:	push	{r4, r5, r6, r7, r8, lr}
   4c808:	sub	sp, sp, #8
   4c80c:	subs	r4, r0, #0
   4c810:	beq	4cc7c <Mat_VarReadNextInfo4+0x478>
   4c814:	ldr	r3, [r4]
   4c818:	cmp	r3, #0
   4c81c:	beq	4cc84 <Mat_VarReadNextInfo4+0x480>
   4c820:	bl	1570 <Mat_VarCalloc@plt>
   4c824:	subs	r5, r0, #0
   4c828:	beq	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4c82c:	ldr	r3, [r4]
   4c830:	mov	r2, #1
   4c834:	mov	r1, #4
   4c838:	add	r0, sp, r1
   4c83c:	bl	1588 <fread@plt>
   4c840:	cmp	r0, #0
   4c844:	beq	4c8f4 <Mat_VarReadNextInfo4+0xf0>
   4c848:	ldr	r2, [sp, #4]
   4c84c:	ldr	r3, [pc, #1052]	; 4cc70 <Mat_VarReadNextInfo4+0x46c>
   4c850:	cmp	r2, r3
   4c854:	bhi	4c904 <Mat_VarReadNextInfo4+0x100>
   4c858:	ldr	r6, [sp, #4]
   4c85c:	vmov	s15, r6
   4c860:	vcvt.f64.s32	d0, s15
   4c864:	vldr	d7, [pc, #1004]	; 4cc58 <Mat_VarReadNextInfo4+0x454>
   4c868:	vdiv.f64	d0, d0, d7
   4c86c:	bl	1594 <floor@plt>
   4c870:	vcvt.s32.f64	s15, d0
   4c874:	vmov	r7, s15
   4c878:	ldr	r3, [pc, #1012]	; 4cc74 <Mat_VarReadNextInfo4+0x470>
   4c87c:	mla	r6, r3, r7, r6
   4c880:	vmov	s15, r6
   4c884:	vcvt.f64.s32	d0, s15
   4c888:	vldr	d7, [pc, #976]	; 4cc60 <Mat_VarReadNextInfo4+0x45c>
   4c88c:	vdiv.f64	d0, d0, d7
   4c890:	bl	1594 <floor@plt>
   4c894:	vcvt.s32.f64	s15, d0
   4c898:	vmov	r8, s15
   4c89c:	mvn	r3, #99	; 0x63
   4c8a0:	mla	r6, r3, r8, r6
   4c8a4:	vmov	s15, r6
   4c8a8:	vcvt.f64.s32	d0, s15
   4c8ac:	vldr	d7, [pc, #948]	; 4cc68 <Mat_VarReadNextInfo4+0x464>
   4c8b0:	vdiv.f64	d0, d0, d7
   4c8b4:	bl	1594 <floor@plt>
   4c8b8:	vcvt.s32.f64	s15, d0
   4c8bc:	vmov	r2, s15
   4c8c0:	mvn	r3, #9
   4c8c4:	mla	r3, r3, r2, r6
   4c8c8:	str	r3, [sp, #4]
   4c8cc:	cmp	r7, #0
   4c8d0:	beq	4c928 <Mat_VarReadNextInfo4+0x124>
   4c8d4:	cmp	r7, #1
   4c8d8:	beq	4c95c <Mat_VarReadNextInfo4+0x158>
   4c8dc:	mov	r0, r5
   4c8e0:	bl	15f4 <Mat_VarFree@plt>
   4c8e4:	mov	r5, #0
   4c8e8:	mov	r0, r5
   4c8ec:	add	sp, sp, #8
   4c8f0:	pop	{r4, r5, r6, r7, r8, pc}
   4c8f4:	mov	r0, r5
   4c8f8:	bl	15f4 <Mat_VarFree@plt>
   4c8fc:	mov	r5, #0
   4c900:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4c904:	add	r0, sp, #4
   4c908:	bl	1a20 <Mat_int32Swap>
   4c90c:	ldr	r3, [pc, #860]	; 4cc70 <Mat_VarReadNextInfo4+0x46c>
   4c910:	cmp	r0, r3
   4c914:	ble	4c858 <Mat_VarReadNextInfo4+0x54>
   4c918:	mov	r0, r5
   4c91c:	bl	15f4 <Mat_VarFree@plt>
   4c920:	mov	r5, #0
   4c924:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4c928:	mov	r1, #0
   4c92c:	str	r1, [r4, #20]
   4c930:	cmp	r8, #0
   4c934:	bne	4c968 <Mat_VarReadNextInfo4+0x164>
   4c938:	cmp	r2, #5
   4c93c:	addls	pc, pc, r2, lsl #2
   4c940:	b	4c9ec <Mat_VarReadNextInfo4+0x1e8>
   4c944:	b	4c978 <Mat_VarReadNextInfo4+0x174>
   4c948:	b	4c9b0 <Mat_VarReadNextInfo4+0x1ac>
   4c94c:	b	4c9bc <Mat_VarReadNextInfo4+0x1b8>
   4c950:	b	4c9c8 <Mat_VarReadNextInfo4+0x1c4>
   4c954:	b	4c9d4 <Mat_VarReadNextInfo4+0x1d0>
   4c958:	b	4c9e0 <Mat_VarReadNextInfo4+0x1dc>
   4c95c:	mov	r1, #1
   4c960:	str	r1, [r4, #20]
   4c964:	b	4c930 <Mat_VarReadNextInfo4+0x12c>
   4c968:	mov	r0, r5
   4c96c:	bl	15f4 <Mat_VarFree@plt>
   4c970:	mov	r5, #0
   4c974:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4c978:	mov	r2, #9
   4c97c:	str	r2, [r5, #8]
   4c980:	cmp	r3, #1
   4c984:	beq	4c9fc <Mat_VarReadNextInfo4+0x1f8>
   4c988:	cmp	r3, #2
   4c98c:	beq	4cb7c <Mat_VarReadNextInfo4+0x378>
   4c990:	cmp	r3, #0
   4c994:	moveq	r3, #6
   4c998:	streq	r3, [r5, #16]
   4c99c:	beq	4ca04 <Mat_VarReadNextInfo4+0x200>
   4c9a0:	mov	r0, r5
   4c9a4:	bl	15f4 <Mat_VarFree@plt>
   4c9a8:	mov	r5, #0
   4c9ac:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4c9b0:	mov	r2, #7
   4c9b4:	str	r2, [r5, #8]
   4c9b8:	b	4c980 <Mat_VarReadNextInfo4+0x17c>
   4c9bc:	mov	r2, #5
   4c9c0:	str	r2, [r5, #8]
   4c9c4:	b	4c980 <Mat_VarReadNextInfo4+0x17c>
   4c9c8:	mov	r2, #3
   4c9cc:	str	r2, [r5, #8]
   4c9d0:	b	4c980 <Mat_VarReadNextInfo4+0x17c>
   4c9d4:	mov	r2, #4
   4c9d8:	str	r2, [r5, #8]
   4c9dc:	b	4c980 <Mat_VarReadNextInfo4+0x17c>
   4c9e0:	mov	r2, #2
   4c9e4:	str	r2, [r5, #8]
   4c9e8:	b	4c980 <Mat_VarReadNextInfo4+0x17c>
   4c9ec:	mov	r0, r5
   4c9f0:	bl	15f4 <Mat_VarFree@plt>
   4c9f4:	mov	r5, #0
   4c9f8:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4c9fc:	mov	r3, #4
   4ca00:	str	r3, [r5, #16]
   4ca04:	mov	r3, #2
   4ca08:	str	r3, [r5, #4]
   4ca0c:	mov	r0, #8
   4ca10:	bl	15ac <malloc@plt>
   4ca14:	str	r0, [r5, #32]
   4ca18:	cmp	r0, #0
   4ca1c:	beq	4cb88 <Mat_VarReadNextInfo4+0x384>
   4ca20:	ldr	r3, [r4]
   4ca24:	mov	r2, #1
   4ca28:	mov	r1, #4
   4ca2c:	add	r0, sp, r1
   4ca30:	bl	1588 <fread@plt>
   4ca34:	mov	r6, r0
   4ca38:	ldr	r3, [r4, #20]
   4ca3c:	cmp	r3, #0
   4ca40:	bne	4cb98 <Mat_VarReadNextInfo4+0x394>
   4ca44:	ldr	r3, [r5, #32]
   4ca48:	ldr	r2, [sp, #4]
   4ca4c:	str	r2, [r3]
   4ca50:	cmp	r6, #0
   4ca54:	beq	4cba4 <Mat_VarReadNextInfo4+0x3a0>
   4ca58:	ldr	r3, [r4]
   4ca5c:	mov	r2, #1
   4ca60:	mov	r1, #4
   4ca64:	add	r0, sp, r1
   4ca68:	bl	1588 <fread@plt>
   4ca6c:	mov	r6, r0
   4ca70:	ldr	r3, [r4, #20]
   4ca74:	cmp	r3, #0
   4ca78:	bne	4cbb4 <Mat_VarReadNextInfo4+0x3b0>
   4ca7c:	ldr	r3, [r5, #32]
   4ca80:	ldr	r2, [sp, #4]
   4ca84:	str	r2, [r3, #4]
   4ca88:	cmp	r6, #0
   4ca8c:	beq	4cbc0 <Mat_VarReadNextInfo4+0x3bc>
   4ca90:	ldr	r3, [r4]
   4ca94:	mov	r2, #1
   4ca98:	mov	r1, #4
   4ca9c:	add	r0, r5, #20
   4caa0:	bl	1588 <fread@plt>
   4caa4:	cmp	r0, #0
   4caa8:	beq	4cbd0 <Mat_VarReadNextInfo4+0x3cc>
   4caac:	ldr	r3, [r5, #20]
   4cab0:	cmp	r3, #0
   4cab4:	beq	4cac4 <Mat_VarReadNextInfo4+0x2c0>
   4cab8:	ldr	r3, [r5, #16]
   4cabc:	cmp	r3, #4
   4cac0:	beq	4cbe0 <Mat_VarReadNextInfo4+0x3dc>
   4cac4:	ldr	r3, [r4]
   4cac8:	mov	r2, #1
   4cacc:	mov	r1, #4
   4cad0:	add	r0, sp, r1
   4cad4:	bl	1588 <fread@plt>
   4cad8:	cmp	r0, #0
   4cadc:	beq	4cbf0 <Mat_VarReadNextInfo4+0x3ec>
   4cae0:	ldr	r3, [r4, #20]
   4cae4:	cmp	r3, #0
   4cae8:	bne	4cc00 <Mat_VarReadNextInfo4+0x3fc>
   4caec:	ldr	r0, [sp, #4]
   4caf0:	cmp	r0, #0
   4caf4:	ble	4cc0c <Mat_VarReadNextInfo4+0x408>
   4caf8:	bl	15ac <malloc@plt>
   4cafc:	str	r0, [r5, #36]	; 0x24
   4cb00:	cmp	r0, #0
   4cb04:	beq	4cc1c <Mat_VarReadNextInfo4+0x418>
   4cb08:	ldr	r3, [r4]
   4cb0c:	ldr	r2, [sp, #4]
   4cb10:	mov	r1, #1
   4cb14:	bl	1588 <fread@plt>
   4cb18:	cmp	r0, #0
   4cb1c:	beq	4cc2c <Mat_VarReadNextInfo4+0x428>
   4cb20:	ldr	r6, [r5, #52]	; 0x34
   4cb24:	ldr	r0, [r4]
   4cb28:	bl	151c <ftell@plt>
   4cb2c:	str	r0, [r6]
   4cb30:	ldr	r3, [r5, #52]	; 0x34
   4cb34:	ldr	r3, [r3]
   4cb38:	cmn	r3, #1
   4cb3c:	beq	4cc3c <Mat_VarReadNextInfo4+0x438>
   4cb40:	ldr	r0, [r5, #8]
   4cb44:	bl	1600 <Mat_SizeOf@plt>
   4cb48:	str	r0, [sp]
   4cb4c:	ldr	r3, [r5, #20]
   4cb50:	cmp	r3, #0
   4cb54:	lslne	r0, r0, #1
   4cb58:	strne	r0, [sp]
   4cb5c:	mov	r1, sp
   4cb60:	mov	r0, r5
   4cb64:	bl	4d06c <SafeMulDims>
   4cb68:	mov	r2, #1
   4cb6c:	ldr	r1, [sp]
   4cb70:	ldr	r0, [r4]
   4cb74:	bl	1714 <fseek@plt>
   4cb78:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cb7c:	mov	r3, #5
   4cb80:	str	r3, [r5, #16]
   4cb84:	b	4ca04 <Mat_VarReadNextInfo4+0x200>
   4cb88:	mov	r0, r5
   4cb8c:	bl	15f4 <Mat_VarFree@plt>
   4cb90:	mov	r5, #0
   4cb94:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cb98:	add	r0, sp, #4
   4cb9c:	bl	1a20 <Mat_int32Swap>
   4cba0:	b	4ca44 <Mat_VarReadNextInfo4+0x240>
   4cba4:	mov	r0, r5
   4cba8:	bl	15f4 <Mat_VarFree@plt>
   4cbac:	mov	r5, #0
   4cbb0:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cbb4:	add	r0, sp, #4
   4cbb8:	bl	1a20 <Mat_int32Swap>
   4cbbc:	b	4ca7c <Mat_VarReadNextInfo4+0x278>
   4cbc0:	mov	r0, r5
   4cbc4:	bl	15f4 <Mat_VarFree@plt>
   4cbc8:	mov	r5, #0
   4cbcc:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cbd0:	mov	r0, r5
   4cbd4:	bl	15f4 <Mat_VarFree@plt>
   4cbd8:	mov	r5, #0
   4cbdc:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cbe0:	mov	r0, r5
   4cbe4:	bl	15f4 <Mat_VarFree@plt>
   4cbe8:	mov	r5, #0
   4cbec:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cbf0:	mov	r0, r5
   4cbf4:	bl	15f4 <Mat_VarFree@plt>
   4cbf8:	mov	r5, #0
   4cbfc:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cc00:	add	r0, sp, #4
   4cc04:	bl	1a20 <Mat_int32Swap>
   4cc08:	b	4caec <Mat_VarReadNextInfo4+0x2e8>
   4cc0c:	mov	r0, r5
   4cc10:	bl	15f4 <Mat_VarFree@plt>
   4cc14:	mov	r5, #0
   4cc18:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cc1c:	mov	r0, r5
   4cc20:	bl	15f4 <Mat_VarFree@plt>
   4cc24:	mov	r5, #0
   4cc28:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cc2c:	mov	r0, r5
   4cc30:	bl	15f4 <Mat_VarFree@plt>
   4cc34:	mov	r5, #0
   4cc38:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cc3c:	mov	r0, r5
   4cc40:	bl	15f4 <Mat_VarFree@plt>
   4cc44:	ldr	r0, [pc, #44]	; 4cc78 <Mat_VarReadNextInfo4+0x474>
   4cc48:	add	r0, pc, r0
   4cc4c:	bl	1690 <Mat_Critical@plt>
   4cc50:	mov	r5, #0
   4cc54:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cc58:	.word	0x00000000
   4cc5c:	.word	0x408f4000
   4cc60:	.word	0x00000000
   4cc64:	.word	0x40590000
   4cc68:	.word	0x00000000
   4cc6c:	.word	0x40240000
   4cc70:	.word	0x00000fd4
   4cc74:	.word	0xfffffc18
   4cc78:	.word	0x00005600
   4cc7c:	mov	r5, #0
   4cc80:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>
   4cc84:	mov	r5, #0
   4cc88:	b	4c8e8 <Mat_VarReadNextInfo4+0xe4>

0004cc8c <mat_copy>:
   4cc8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4cc90:	sub	sp, sp, #8192	; 0x2000
   4cc94:	mov	r4, r0
   4cc98:	mov	sl, r1
   4cc9c:	mov	r2, #8192	; 0x2000
   4cca0:	mov	r1, #0
   4cca4:	mov	r0, sp
   4cca8:	bl	166c <memset@plt>
   4ccac:	ldr	r1, [pc, #232]	; 4cd9c <mat_copy+0x110>
   4ccb0:	add	r1, pc, r1
   4ccb4:	mov	r0, r4
   4ccb8:	bl	14bc <fopen@plt>
   4ccbc:	subs	r7, r0, #0
   4ccc0:	beq	4cd48 <mat_copy+0xbc>
   4ccc4:	ldr	r1, [pc, #212]	; 4cda0 <mat_copy+0x114>
   4ccc8:	add	r1, pc, r1
   4cccc:	mov	r0, sl
   4ccd0:	bl	14bc <fopen@plt>
   4ccd4:	subs	r8, r0, #0
   4ccd8:	movne	r6, sp
   4ccdc:	movne	r9, #8192	; 0x2000
   4cce0:	movne	r5, #1
   4cce4:	beq	4cd60 <mat_copy+0xd4>
   4cce8:	mov	r3, r7
   4ccec:	mov	r2, r9
   4ccf0:	mov	r1, r5
   4ccf4:	mov	r0, r6
   4ccf8:	bl	1588 <fread@plt>
   4ccfc:	subs	r4, r0, #0
   4cd00:	beq	4cd80 <mat_copy+0xf4>
   4cd04:	mov	r3, r8
   4cd08:	mov	r2, r4
   4cd0c:	mov	r1, r5
   4cd10:	mov	r0, r6
   4cd14:	bl	157c <fwrite@plt>
   4cd18:	cmp	r4, r0
   4cd1c:	beq	4cce8 <mat_copy+0x5c>
   4cd20:	mov	r0, r7
   4cd24:	bl	16a8 <fclose@plt>
   4cd28:	mov	r0, r8
   4cd2c:	bl	16a8 <fclose@plt>
   4cd30:	mov	r1, sl
   4cd34:	ldr	r0, [pc, #104]	; 4cda4 <mat_copy+0x118>
   4cd38:	add	r0, pc, r0
   4cd3c:	bl	1690 <Mat_Critical@plt>
   4cd40:	mvn	r0, #0
   4cd44:	b	4cd94 <mat_copy+0x108>
   4cd48:	mov	r1, r4
   4cd4c:	ldr	r0, [pc, #84]	; 4cda8 <mat_copy+0x11c>
   4cd50:	add	r0, pc, r0
   4cd54:	bl	1690 <Mat_Critical@plt>
   4cd58:	mvn	r0, #0
   4cd5c:	b	4cd94 <mat_copy+0x108>
   4cd60:	mov	r0, r7
   4cd64:	bl	16a8 <fclose@plt>
   4cd68:	mov	r1, sl
   4cd6c:	ldr	r0, [pc, #56]	; 4cdac <mat_copy+0x120>
   4cd70:	add	r0, pc, r0
   4cd74:	bl	1690 <Mat_Critical@plt>
   4cd78:	mvn	r0, #0
   4cd7c:	b	4cd94 <mat_copy+0x108>
   4cd80:	mov	r0, r7
   4cd84:	bl	16a8 <fclose@plt>
   4cd88:	mov	r0, r8
   4cd8c:	bl	16a8 <fclose@plt>
   4cd90:	mov	r0, #0
   4cd94:	add	sp, sp, #8192	; 0x2000
   4cd98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4cd9c:	.word	0x00005b28
   4cda0:	.word	0x00005b38
   4cda4:	.word	0x00005af0
   4cda8:	.word	0x00005a8c
   4cdac:	.word	0x00005a94

0004cdb0 <Mat_PrintNumber>:
   4cdb0:	push	{r4, lr}
   4cdb4:	sub	r0, r0, #1
   4cdb8:	cmp	r0, #12
   4cdbc:	addls	pc, pc, r0, lsl #2
   4cdc0:	b	4cec4 <Mat_PrintNumber+0x114>
   4cdc4:	b	4cea0 <Mat_PrintNumber+0xf0>
   4cdc8:	b	4ceb4 <Mat_PrintNumber+0x104>
   4cdcc:	b	4ce78 <Mat_PrintNumber+0xc8>
   4cdd0:	b	4ce8c <Mat_PrintNumber+0xdc>
   4cdd4:	b	4ce50 <Mat_PrintNumber+0xa0>
   4cdd8:	b	4ce64 <Mat_PrintNumber+0xb4>
   4cddc:	b	4ce0c <Mat_PrintNumber+0x5c>
   4cde0:	b	4cec4 <Mat_PrintNumber+0x114>
   4cde4:	b	4cdf8 <Mat_PrintNumber+0x48>
   4cde8:	b	4cec4 <Mat_PrintNumber+0x114>
   4cdec:	b	4cec4 <Mat_PrintNumber+0x114>
   4cdf0:	b	4ce28 <Mat_PrintNumber+0x78>
   4cdf4:	b	4ce3c <Mat_PrintNumber+0x8c>
   4cdf8:	ldrd	r2, [r1]
   4cdfc:	ldr	r0, [pc, #196]	; 4cec8 <Mat_PrintNumber+0x118>
   4ce00:	add	r0, pc, r0
   4ce04:	bl	14b0 <printf@plt>
   4ce08:	pop	{r4, pc}
   4ce0c:	vldr	s15, [r1]
   4ce10:	vcvt.f64.f32	d7, s15
   4ce14:	vmov	r2, r3, d7
   4ce18:	ldr	r0, [pc, #172]	; 4cecc <Mat_PrintNumber+0x11c>
   4ce1c:	add	r0, pc, r0
   4ce20:	bl	14b0 <printf@plt>
   4ce24:	pop	{r4, pc}
   4ce28:	ldrd	r2, [r1]
   4ce2c:	ldr	r0, [pc, #156]	; 4ced0 <Mat_PrintNumber+0x120>
   4ce30:	add	r0, pc, r0
   4ce34:	bl	14b0 <printf@plt>
   4ce38:	pop	{r4, pc}
   4ce3c:	ldrd	r2, [r1]
   4ce40:	ldr	r0, [pc, #140]	; 4ced4 <Mat_PrintNumber+0x124>
   4ce44:	add	r0, pc, r0
   4ce48:	bl	14b0 <printf@plt>
   4ce4c:	pop	{r4, pc}
   4ce50:	ldr	r1, [r1]
   4ce54:	ldr	r0, [pc, #124]	; 4ced8 <Mat_PrintNumber+0x128>
   4ce58:	add	r0, pc, r0
   4ce5c:	bl	14b0 <printf@plt>
   4ce60:	pop	{r4, pc}
   4ce64:	ldr	r1, [r1]
   4ce68:	ldr	r0, [pc, #108]	; 4cedc <Mat_PrintNumber+0x12c>
   4ce6c:	add	r0, pc, r0
   4ce70:	bl	14b0 <printf@plt>
   4ce74:	pop	{r4, pc}
   4ce78:	ldrsh	r1, [r1]
   4ce7c:	ldr	r0, [pc, #92]	; 4cee0 <Mat_PrintNumber+0x130>
   4ce80:	add	r0, pc, r0
   4ce84:	bl	14b0 <printf@plt>
   4ce88:	pop	{r4, pc}
   4ce8c:	ldrh	r1, [r1]
   4ce90:	ldr	r0, [pc, #76]	; 4cee4 <Mat_PrintNumber+0x134>
   4ce94:	add	r0, pc, r0
   4ce98:	bl	14b0 <printf@plt>
   4ce9c:	pop	{r4, pc}
   4cea0:	ldrsb	r1, [r1]
   4cea4:	ldr	r0, [pc, #60]	; 4cee8 <Mat_PrintNumber+0x138>
   4cea8:	add	r0, pc, r0
   4ceac:	bl	14b0 <printf@plt>
   4ceb0:	pop	{r4, pc}
   4ceb4:	ldrb	r1, [r1]
   4ceb8:	ldr	r0, [pc, #44]	; 4ceec <Mat_PrintNumber+0x13c>
   4cebc:	add	r0, pc, r0
   4cec0:	bl	14b0 <printf@plt>
   4cec4:	pop	{r4, pc}
   4cec8:	.word	0x00005a44
   4cecc:	.word	0x00005a28
   4ced0:	.word	0x00005a18
   4ced4:	.word	0x00005a0c
   4ced8:	.word	0x00005a00
   4cedc:	.word	0x000059f0
   4cee0:	.word	0x000059e0
   4cee4:	.word	0x000059d0
   4cee8:	.word	0x000059c0
   4ceec:	.word	0x000059b4

0004cef0 <ReadData>:
   4cef0:	cmp	r1, #0
   4cef4:	cmpne	r0, #0
   4cef8:	bxeq	lr
   4cefc:	mov	r2, r1
   4cf00:	ldr	r1, [r0]
   4cf04:	cmp	r1, #0
   4cf08:	bxeq	lr
   4cf0c:	push	{r4, lr}
   4cf10:	ldr	r1, [r0, #16]
   4cf14:	cmp	r1, #256	; 0x100
   4cf18:	beq	4cf30 <ReadData+0x40>
   4cf1c:	cmp	r1, #16
   4cf20:	popne	{r4, pc}
   4cf24:	mov	r1, r2
   4cf28:	bl	4bb08 <Mat_VarRead4>
   4cf2c:	pop	{r4, pc}
   4cf30:	mov	r1, r2
   4cf34:	bl	4619c <Mat_VarRead5>
   4cf38:	pop	{r4, pc}

0004cf3c <ComplexMalloc>:
   4cf3c:	push	{r4, r5, r6, lr}
   4cf40:	mov	r5, r0
   4cf44:	mov	r0, #8
   4cf48:	bl	15ac <malloc@plt>
   4cf4c:	subs	r4, r0, #0
   4cf50:	beq	4cf80 <ComplexMalloc+0x44>
   4cf54:	mov	r0, r5
   4cf58:	bl	15ac <malloc@plt>
   4cf5c:	mov	r6, r0
   4cf60:	str	r0, [r4]
   4cf64:	cmp	r0, #0
   4cf68:	beq	4cfa0 <ComplexMalloc+0x64>
   4cf6c:	mov	r0, r5
   4cf70:	bl	15ac <malloc@plt>
   4cf74:	str	r0, [r4, #4]
   4cf78:	cmp	r0, #0
   4cf7c:	beq	4cf88 <ComplexMalloc+0x4c>
   4cf80:	mov	r0, r4
   4cf84:	pop	{r4, r5, r6, pc}
   4cf88:	mov	r0, r6
   4cf8c:	bl	14e0 <free@plt>
   4cf90:	mov	r0, r4
   4cf94:	bl	14e0 <free@plt>
   4cf98:	mov	r4, #0
   4cf9c:	b	4cf80 <ComplexMalloc+0x44>
   4cfa0:	mov	r0, r4
   4cfa4:	bl	14e0 <free@plt>
   4cfa8:	mov	r4, #0
   4cfac:	b	4cf80 <ComplexMalloc+0x44>

0004cfb0 <ClassType2DataType>:
   4cfb0:	sub	r0, r0, #1
   4cfb4:	cmp	r0, #14
   4cfb8:	addls	pc, pc, r0, lsl #2
   4cfbc:	b	4d05c <ClassType2DataType+0xac>
   4cfc0:	b	4d04c <ClassType2DataType+0x9c>
   4cfc4:	b	4d054 <ClassType2DataType+0xa4>
   4cfc8:	b	4d05c <ClassType2DataType+0xac>
   4cfcc:	b	4d03c <ClassType2DataType+0x8c>
   4cfd0:	b	4d05c <ClassType2DataType+0xac>
   4cfd4:	b	4d064 <ClassType2DataType+0xb4>
   4cfd8:	b	4cffc <ClassType2DataType+0x4c>
   4cfdc:	b	4d034 <ClassType2DataType+0x84>
   4cfe0:	b	4d044 <ClassType2DataType+0x94>
   4cfe4:	b	4d024 <ClassType2DataType+0x74>
   4cfe8:	b	4d02c <ClassType2DataType+0x7c>
   4cfec:	b	4d014 <ClassType2DataType+0x64>
   4cff0:	b	4d01c <ClassType2DataType+0x6c>
   4cff4:	b	4d004 <ClassType2DataType+0x54>
   4cff8:	b	4d00c <ClassType2DataType+0x5c>
   4cffc:	mov	r0, #7
   4d000:	bx	lr
   4d004:	mov	r0, #12
   4d008:	bx	lr
   4d00c:	mov	r0, #13
   4d010:	bx	lr
   4d014:	mov	r0, #5
   4d018:	bx	lr
   4d01c:	mov	r0, #6
   4d020:	bx	lr
   4d024:	mov	r0, #3
   4d028:	bx	lr
   4d02c:	mov	r0, #4
   4d030:	bx	lr
   4d034:	mov	r0, #1
   4d038:	bx	lr
   4d03c:	mov	r0, #2
   4d040:	bx	lr
   4d044:	mov	r0, #2
   4d048:	bx	lr
   4d04c:	mov	r0, #21
   4d050:	bx	lr
   4d054:	mov	r0, #22
   4d058:	bx	lr
   4d05c:	mov	r0, #0
   4d060:	bx	lr
   4d064:	mov	r0, #9
   4d068:	bx	lr

0004d06c <SafeMulDims>:
   4d06c:	ldr	r3, [r0, #4]
   4d070:	cmp	r3, #0
   4d074:	ble	4d0c0 <SafeMulDims+0x54>
   4d078:	mov	ip, #0
   4d07c:	ldr	r3, [r0, #32]
   4d080:	ldr	r2, [r1]
   4d084:	ldr	r3, [r3, ip, lsl #2]
   4d088:	umull	r2, r3, r2, r3
   4d08c:	str	r2, [r1]
   4d090:	cmp	r3, #0
   4d094:	bne	4d0b0 <SafeMulDims+0x44>
   4d098:	add	ip, ip, #1
   4d09c:	ldr	r3, [r0, #4]
   4d0a0:	cmp	r3, ip
   4d0a4:	bgt	4d07c <SafeMulDims+0x10>
   4d0a8:	mov	r0, #0
   4d0ac:	bx	lr
   4d0b0:	mov	r3, #0
   4d0b4:	str	r3, [r1]
   4d0b8:	mov	r0, #1
   4d0bc:	bx	lr
   4d0c0:	mov	r0, #0
   4d0c4:	bx	lr

0004d0c8 <SafeMul>:
   4d0c8:	mov	r3, r0
   4d0cc:	umull	r0, r1, r1, r2
   4d0d0:	str	r0, [r3]
   4d0d4:	cmp	r1, #0
   4d0d8:	moveq	r2, r0
   4d0dc:	moveq	r0, #0
   4d0e0:	movne	r2, #0
   4d0e4:	movne	r0, #1
   4d0e8:	str	r2, [r3]
   4d0ec:	bx	lr

0004d0f0 <Mat_GetLibraryVersion>:
   4d0f0:	cmp	r0, #0
   4d0f4:	movne	r3, #1
   4d0f8:	strne	r3, [r0]
   4d0fc:	cmp	r1, #0
   4d100:	movne	r3, #5
   4d104:	strne	r3, [r1]
   4d108:	cmp	r2, #0
   4d10c:	movne	r3, #15
   4d110:	strne	r3, [r2]
   4d114:	bx	lr

0004d118 <Mat_CreateVer>:
   4d118:	push	{r4, lr}
   4d11c:	cmp	r2, #16
   4d120:	beq	4d134 <Mat_CreateVer+0x1c>
   4d124:	cmp	r2, #256	; 0x100
   4d128:	beq	4d13c <Mat_CreateVer+0x24>
   4d12c:	mov	r0, #0
   4d130:	pop	{r4, pc}
   4d134:	bl	4b3e8 <Mat_Create4>
   4d138:	pop	{r4, pc}
   4d13c:	bl	45fa8 <Mat_Create5>
   4d140:	pop	{r4, pc}

0004d144 <Mat_Close>:
   4d144:	push	{r4, r5, r6, lr}
   4d148:	subs	r5, r0, #0
   4d14c:	beq	4d1e8 <Mat_Close+0xa4>
   4d150:	ldr	r0, [r5]
   4d154:	cmp	r0, #0
   4d158:	beq	4d160 <Mat_Close+0x1c>
   4d15c:	bl	16a8 <fclose@plt>
   4d160:	ldr	r0, [r5, #4]
   4d164:	cmp	r0, #0
   4d168:	beq	4d170 <Mat_Close+0x2c>
   4d16c:	bl	14e0 <free@plt>
   4d170:	ldr	r0, [r5, #8]
   4d174:	cmp	r0, #0
   4d178:	beq	4d180 <Mat_Close+0x3c>
   4d17c:	bl	14e0 <free@plt>
   4d180:	ldr	r0, [r5, #12]
   4d184:	cmp	r0, #0
   4d188:	beq	4d190 <Mat_Close+0x4c>
   4d18c:	bl	14e0 <free@plt>
   4d190:	ldr	r3, [r5, #40]	; 0x28
   4d194:	cmp	r3, #0
   4d198:	beq	4d1e0 <Mat_Close+0x9c>
   4d19c:	ldr	r3, [r5, #36]	; 0x24
   4d1a0:	cmp	r3, #0
   4d1a4:	beq	4d1d8 <Mat_Close+0x94>
   4d1a8:	mov	r4, #0
   4d1ac:	b	4d1c0 <Mat_Close+0x7c>
   4d1b0:	add	r4, r4, #1
   4d1b4:	ldr	r3, [r5, #36]	; 0x24
   4d1b8:	cmp	r3, r4
   4d1bc:	bls	4d1d8 <Mat_Close+0x94>
   4d1c0:	ldr	r3, [r5, #40]	; 0x28
   4d1c4:	ldr	r0, [r3, r4, lsl #2]
   4d1c8:	cmp	r0, #0
   4d1cc:	beq	4d1b0 <Mat_Close+0x6c>
   4d1d0:	bl	14e0 <free@plt>
   4d1d4:	b	4d1b0 <Mat_Close+0x6c>
   4d1d8:	ldr	r0, [r5, #40]	; 0x28
   4d1dc:	bl	14e0 <free@plt>
   4d1e0:	mov	r0, r5
   4d1e4:	bl	14e0 <free@plt>
   4d1e8:	mov	r0, #0
   4d1ec:	pop	{r4, r5, r6, pc}

0004d1f0 <Mat_GetFilename>:
   4d1f0:	cmp	r0, #0
   4d1f4:	ldrne	r0, [r0, #12]
   4d1f8:	moveq	r0, #0
   4d1fc:	bx	lr

0004d200 <Mat_GetHeader>:
   4d200:	cmp	r0, #0
   4d204:	ldrne	r0, [r0, #4]
   4d208:	moveq	r0, #0
   4d20c:	bx	lr

0004d210 <Mat_GetVersion>:
   4d210:	cmp	r0, #0
   4d214:	ldrne	r0, [r0, #16]
   4d218:	moveq	r0, #0
   4d21c:	bx	lr

0004d220 <Mat_Rewind>:
   4d220:	push	{r4, lr}
   4d224:	ldr	r3, [r0, #16]
   4d228:	cmp	r3, #256	; 0x100
   4d22c:	beq	4d248 <Mat_Rewind+0x28>
   4d230:	cmp	r3, #512	; 0x200
   4d234:	beq	4d260 <Mat_Rewind+0x40>
   4d238:	cmp	r3, #16
   4d23c:	beq	4d270 <Mat_Rewind+0x50>
   4d240:	mvn	r0, #0
   4d244:	pop	{r4, pc}
   4d248:	mov	r2, #0
   4d24c:	mov	r1, #128	; 0x80
   4d250:	ldr	r0, [r0]
   4d254:	bl	1714 <fseek@plt>
   4d258:	mov	r0, #0
   4d25c:	pop	{r4, pc}
   4d260:	mov	r3, #0
   4d264:	str	r3, [r0, #32]
   4d268:	mov	r0, r3
   4d26c:	pop	{r4, pc}
   4d270:	mov	r2, #0
   4d274:	mov	r1, r2
   4d278:	ldr	r0, [r0]
   4d27c:	bl	1714 <fseek@plt>
   4d280:	mov	r0, #0
   4d284:	pop	{r4, pc}

0004d288 <Mat_SizeOfClass>:
   4d288:	sub	r0, r0, #4
   4d28c:	cmp	r0, #11
   4d290:	addls	pc, pc, r0, lsl #2
   4d294:	b	4d2f8 <Mat_SizeOfClass+0x70>
   4d298:	b	4d2f0 <Mat_SizeOfClass+0x68>
   4d29c:	b	4d2f8 <Mat_SizeOfClass+0x70>
   4d2a0:	b	4d300 <Mat_SizeOfClass+0x78>
   4d2a4:	b	4d2c8 <Mat_SizeOfClass+0x40>
   4d2a8:	b	4d2e0 <Mat_SizeOfClass+0x58>
   4d2ac:	b	4d2e8 <Mat_SizeOfClass+0x60>
   4d2b0:	b	4d2d0 <Mat_SizeOfClass+0x48>
   4d2b4:	b	4d2d8 <Mat_SizeOfClass+0x50>
   4d2b8:	b	4d2c8 <Mat_SizeOfClass+0x40>
   4d2bc:	b	4d2c8 <Mat_SizeOfClass+0x40>
   4d2c0:	b	4d300 <Mat_SizeOfClass+0x78>
   4d2c4:	b	4d300 <Mat_SizeOfClass+0x78>
   4d2c8:	mov	r0, #4
   4d2cc:	bx	lr
   4d2d0:	mov	r0, #2
   4d2d4:	bx	lr
   4d2d8:	mov	r0, #2
   4d2dc:	bx	lr
   4d2e0:	mov	r0, #1
   4d2e4:	bx	lr
   4d2e8:	mov	r0, #1
   4d2ec:	bx	lr
   4d2f0:	mov	r0, #2
   4d2f4:	bx	lr
   4d2f8:	mov	r0, #0
   4d2fc:	bx	lr
   4d300:	mov	r0, #8
   4d304:	bx	lr

0004d308 <Mat_VarCalloc>:
   4d308:	push	{r4, lr}
   4d30c:	mov	r0, #56	; 0x38
   4d310:	bl	15ac <malloc@plt>
   4d314:	subs	r4, r0, #0
   4d318:	beq	4d380 <Mat_VarCalloc+0x78>
   4d31c:	mov	r3, #0
   4d320:	str	r3, [r4]
   4d324:	str	r3, [r4, #4]
   4d328:	str	r3, [r4, #8]
   4d32c:	str	r3, [r4, #12]
   4d330:	str	r3, [r4, #16]
   4d334:	str	r3, [r4, #20]
   4d338:	str	r3, [r4, #24]
   4d33c:	str	r3, [r4, #28]
   4d340:	str	r3, [r4, #32]
   4d344:	str	r3, [r4, #36]	; 0x24
   4d348:	str	r3, [r4, #40]	; 0x28
   4d34c:	str	r3, [r4, #44]	; 0x2c
   4d350:	str	r3, [r4, #48]	; 0x30
   4d354:	mov	r0, #20
   4d358:	bl	15ac <malloc@plt>
   4d35c:	str	r0, [r4, #52]	; 0x34
   4d360:	cmp	r0, #0
   4d364:	beq	4d388 <Mat_VarCalloc+0x80>
   4d368:	mov	r3, #0
   4d36c:	str	r3, [r0]
   4d370:	str	r3, [r0, #4]
   4d374:	str	r3, [r0, #8]
   4d378:	str	r3, [r0, #12]
   4d37c:	str	r3, [r0, #16]
   4d380:	mov	r0, r4
   4d384:	pop	{r4, pc}
   4d388:	mov	r0, r4
   4d38c:	bl	14e0 <free@plt>
   4d390:	mov	r4, #0
   4d394:	b	4d380 <Mat_VarCalloc+0x78>

0004d398 <Mat_VarDuplicate>:
   4d398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4d39c:	sub	sp, sp, #12
   4d3a0:	mov	r4, r0
   4d3a4:	mov	r6, r1
   4d3a8:	bl	1570 <Mat_VarCalloc@plt>
   4d3ac:	subs	r5, r0, #0
   4d3b0:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d3b4:	ldr	r3, [r4]
   4d3b8:	str	r3, [r5]
   4d3bc:	ldr	r3, [r4, #4]
   4d3c0:	str	r3, [r5, #4]
   4d3c4:	ldr	r3, [r4, #8]
   4d3c8:	str	r3, [r5, #8]
   4d3cc:	ldr	r3, [r4, #12]
   4d3d0:	str	r3, [r5, #12]
   4d3d4:	ldr	r3, [r4, #16]
   4d3d8:	str	r3, [r5, #16]
   4d3dc:	ldr	r3, [r4, #20]
   4d3e0:	str	r3, [r5, #20]
   4d3e4:	ldr	r3, [r4, #24]
   4d3e8:	str	r3, [r5, #24]
   4d3ec:	ldr	r3, [r4, #28]
   4d3f0:	str	r3, [r5, #28]
   4d3f4:	ldr	r3, [r4, #44]	; 0x2c
   4d3f8:	str	r3, [r5, #44]	; 0x2c
   4d3fc:	ldr	r3, [r4, #48]	; 0x30
   4d400:	str	r3, [r5, #48]	; 0x30
   4d404:	ldr	r0, [r4, #36]	; 0x24
   4d408:	cmp	r0, #0
   4d40c:	beq	4d438 <Mat_VarDuplicate+0xa0>
   4d410:	bl	1630 <strlen@plt>
   4d414:	add	r7, r0, #1
   4d418:	mov	r0, r7
   4d41c:	bl	15ac <malloc@plt>
   4d420:	str	r0, [r5, #36]	; 0x24
   4d424:	cmp	r0, #0
   4d428:	beq	4d438 <Mat_VarDuplicate+0xa0>
   4d42c:	mov	r2, r7
   4d430:	ldr	r1, [r4, #36]	; 0x24
   4d434:	bl	14f8 <memcpy@plt>
   4d438:	ldr	r0, [r4, #4]
   4d43c:	lsl	r0, r0, #2
   4d440:	bl	15ac <malloc@plt>
   4d444:	str	r0, [r5, #32]
   4d448:	cmp	r0, #0
   4d44c:	beq	4d460 <Mat_VarDuplicate+0xc8>
   4d450:	ldr	r2, [r4, #4]
   4d454:	lsl	r2, r2, #2
   4d458:	ldr	r1, [r4, #32]
   4d45c:	bl	14f8 <memcpy@plt>
   4d460:	ldr	r3, [r4, #52]	; 0x34
   4d464:	cmp	r3, #0
   4d468:	beq	4d864 <Mat_VarDuplicate+0x4cc>
   4d46c:	ldr	r2, [r5, #52]	; 0x34
   4d470:	ldr	r3, [r3]
   4d474:	str	r3, [r2]
   4d478:	ldr	r2, [r5, #52]	; 0x34
   4d47c:	mov	r3, #0
   4d480:	str	r3, [r2, #12]
   4d484:	ldr	r2, [r5, #52]	; 0x34
   4d488:	str	r3, [r2, #16]
   4d48c:	ldr	r3, [r5, #52]	; 0x34
   4d490:	ldr	r2, [r4, #52]	; 0x34
   4d494:	ldr	r2, [r2, #4]
   4d498:	str	r2, [r3, #4]
   4d49c:	ldr	r3, [r4, #52]	; 0x34
   4d4a0:	ldr	r2, [r3, #8]
   4d4a4:	cmp	r2, #0
   4d4a8:	beq	4d4b8 <Mat_VarDuplicate+0x120>
   4d4ac:	ldr	r0, [r3, #4]
   4d4b0:	cmp	r0, #0
   4d4b4:	bne	4d588 <Mat_VarDuplicate+0x1f0>
   4d4b8:	ldr	r3, [r4, #52]	; 0x34
   4d4bc:	ldr	r3, [r3, #12]
   4d4c0:	cmp	r3, #0
   4d4c4:	beq	4d4f4 <Mat_VarDuplicate+0x15c>
   4d4c8:	ldr	r7, [r5, #52]	; 0x34
   4d4cc:	mov	r0, #56	; 0x38
   4d4d0:	bl	15ac <malloc@plt>
   4d4d4:	str	r0, [r7, #12]
   4d4d8:	cmp	r0, #0
   4d4dc:	beq	4d4f4 <Mat_VarDuplicate+0x15c>
   4d4e0:	ldr	r2, [r4, #52]	; 0x34
   4d4e4:	ldr	r3, [r5, #52]	; 0x34
   4d4e8:	ldr	r1, [r2, #12]
   4d4ec:	ldr	r0, [r3, #12]
   4d4f0:	bl	1624 <inflateCopy@plt>
   4d4f4:	ldr	r3, [r4, #52]	; 0x34
   4d4f8:	ldr	r3, [r3, #16]
   4d4fc:	cmp	r3, #0
   4d500:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d504:	ldr	r3, [r4, #16]
   4d508:	cmp	r3, #5
   4d50c:	beq	4d5e8 <Mat_VarDuplicate+0x250>
   4d510:	ldr	r3, [r5, #20]
   4d514:	cmp	r3, #0
   4d518:	beq	4d798 <Mat_VarDuplicate+0x400>
   4d51c:	ldr	r7, [r5, #52]	; 0x34
   4d520:	mov	r0, #8
   4d524:	bl	15ac <malloc@plt>
   4d528:	str	r0, [r7, #16]
   4d52c:	ldr	r3, [r5, #52]	; 0x34
   4d530:	ldr	r7, [r3, #16]
   4d534:	cmp	r7, #0
   4d538:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d53c:	ldr	r3, [r4, #52]	; 0x34
   4d540:	ldr	r8, [r3, #16]
   4d544:	ldr	r0, [r5]
   4d548:	bl	15ac <malloc@plt>
   4d54c:	str	r0, [r7]
   4d550:	cmp	r0, #0
   4d554:	beq	4d564 <Mat_VarDuplicate+0x1cc>
   4d558:	ldr	r2, [r5]
   4d55c:	ldr	r1, [r8]
   4d560:	bl	14f8 <memcpy@plt>
   4d564:	ldr	r0, [r5]
   4d568:	bl	15ac <malloc@plt>
   4d56c:	str	r0, [r7, #4]
   4d570:	cmp	r0, #0
   4d574:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d578:	ldr	r2, [r5]
   4d57c:	ldr	r1, [r8, #4]
   4d580:	bl	14f8 <memcpy@plt>
   4d584:	b	4d7c8 <Mat_VarDuplicate+0x430>
   4d588:	ldr	r7, [r5, #52]	; 0x34
   4d58c:	mov	r1, #4
   4d590:	bl	1468 <calloc@plt>
   4d594:	str	r0, [r7, #8]
   4d598:	ldr	r3, [r4, #52]	; 0x34
   4d59c:	ldr	r2, [r3, #4]
   4d5a0:	cmp	r2, #0
   4d5a4:	beq	4d4b8 <Mat_VarDuplicate+0x120>
   4d5a8:	mov	r7, #0
   4d5ac:	b	4d5c4 <Mat_VarDuplicate+0x22c>
   4d5b0:	add	r7, r7, #1
   4d5b4:	ldr	r3, [r4, #52]	; 0x34
   4d5b8:	ldr	r2, [r3, #4]
   4d5bc:	cmp	r2, r7
   4d5c0:	bls	4d4b8 <Mat_VarDuplicate+0x120>
   4d5c4:	ldr	r3, [r3, #8]
   4d5c8:	ldr	r0, [r3, r7, lsl #2]
   4d5cc:	cmp	r0, #0
   4d5d0:	beq	4d5b0 <Mat_VarDuplicate+0x218>
   4d5d4:	ldr	r3, [r5, #52]	; 0x34
   4d5d8:	ldr	r8, [r3, #8]
   4d5dc:	bl	1534 <strdup@plt>
   4d5e0:	str	r0, [r8, r7, lsl #2]
   4d5e4:	b	4d5b0 <Mat_VarDuplicate+0x218>
   4d5e8:	ldr	r7, [r5, #52]	; 0x34
   4d5ec:	mov	r0, #28
   4d5f0:	bl	15ac <malloc@plt>
   4d5f4:	str	r0, [r7, #16]
   4d5f8:	ldr	r3, [r5, #52]	; 0x34
   4d5fc:	ldr	r9, [r3, #16]
   4d600:	cmp	r9, #0
   4d604:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d608:	ldr	r3, [r4, #52]	; 0x34
   4d60c:	ldr	r7, [r3, #16]
   4d610:	ldr	r3, [r7]
   4d614:	str	r3, [r9]
   4d618:	ldr	r3, [r7, #8]
   4d61c:	str	r3, [r9, #8]
   4d620:	ldr	r0, [r7, #8]
   4d624:	lsl	r0, r0, #2
   4d628:	bl	15ac <malloc@plt>
   4d62c:	str	r0, [r9, #4]
   4d630:	cmp	r0, #0
   4d634:	beq	4d648 <Mat_VarDuplicate+0x2b0>
   4d638:	ldr	r2, [r7, #8]
   4d63c:	lsl	r2, r2, #2
   4d640:	ldr	r1, [r7, #4]
   4d644:	bl	14f8 <memcpy@plt>
   4d648:	ldr	r3, [r7, #16]
   4d64c:	str	r3, [r9, #16]
   4d650:	ldr	r0, [r7, #16]
   4d654:	lsl	r0, r0, #2
   4d658:	bl	15ac <malloc@plt>
   4d65c:	str	r0, [r9, #12]
   4d660:	cmp	r0, #0
   4d664:	beq	4d678 <Mat_VarDuplicate+0x2e0>
   4d668:	ldr	r2, [r7, #16]
   4d66c:	lsl	r2, r2, #2
   4d670:	ldr	r1, [r7, #12]
   4d674:	bl	14f8 <memcpy@plt>
   4d678:	ldr	r3, [r7, #20]
   4d67c:	str	r3, [r9, #20]
   4d680:	ldr	r3, [r5, #20]
   4d684:	cmp	r3, #0
   4d688:	beq	4d744 <Mat_VarDuplicate+0x3ac>
   4d68c:	ldr	r3, [r7, #24]
   4d690:	cmp	r3, #0
   4d694:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d698:	mov	r0, #8
   4d69c:	bl	15ac <malloc@plt>
   4d6a0:	mov	r8, r0
   4d6a4:	str	r0, [r9, #24]
   4d6a8:	cmp	r0, #0
   4d6ac:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d6b0:	ldr	sl, [r7, #24]
   4d6b4:	ldr	r9, [r7, #20]
   4d6b8:	ldr	r0, [r4, #8]
   4d6bc:	bl	1600 <Mat_SizeOf@plt>
   4d6c0:	mul	r0, r0, r9
   4d6c4:	bl	15ac <malloc@plt>
   4d6c8:	mov	r9, r0
   4d6cc:	str	r0, [r8]
   4d6d0:	cmp	r0, #0
   4d6d4:	beq	4d6fc <Mat_VarDuplicate+0x364>
   4d6d8:	ldr	r3, [sl]
   4d6dc:	str	r3, [sp, #4]
   4d6e0:	ldr	fp, [r7, #20]
   4d6e4:	ldr	r0, [r4, #8]
   4d6e8:	bl	1600 <Mat_SizeOf@plt>
   4d6ec:	mul	r2, r0, fp
   4d6f0:	ldr	r1, [sp, #4]
   4d6f4:	mov	r0, r9
   4d6f8:	bl	14f8 <memcpy@plt>
   4d6fc:	ldr	r9, [r7, #20]
   4d700:	ldr	r0, [r4, #8]
   4d704:	bl	1600 <Mat_SizeOf@plt>
   4d708:	mul	r0, r0, r9
   4d70c:	bl	15ac <malloc@plt>
   4d710:	mov	r9, r0
   4d714:	str	r0, [r8, #4]
   4d718:	cmp	r0, #0
   4d71c:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d720:	ldr	r8, [sl, #4]
   4d724:	ldr	r7, [r7, #20]
   4d728:	ldr	r0, [r4, #8]
   4d72c:	bl	1600 <Mat_SizeOf@plt>
   4d730:	mul	r2, r0, r7
   4d734:	mov	r1, r8
   4d738:	mov	r0, r9
   4d73c:	bl	14f8 <memcpy@plt>
   4d740:	b	4d7c8 <Mat_VarDuplicate+0x430>
   4d744:	ldr	r3, [r7, #24]
   4d748:	cmp	r3, #0
   4d74c:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d750:	ldr	r8, [r7, #20]
   4d754:	ldr	r0, [r4, #8]
   4d758:	bl	1600 <Mat_SizeOf@plt>
   4d75c:	mul	r0, r0, r8
   4d760:	bl	15ac <malloc@plt>
   4d764:	mov	r8, r0
   4d768:	str	r0, [r9, #24]
   4d76c:	cmp	r0, #0
   4d770:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d774:	ldr	r9, [r7, #24]
   4d778:	ldr	r7, [r7, #20]
   4d77c:	ldr	r0, [r4, #8]
   4d780:	bl	1600 <Mat_SizeOf@plt>
   4d784:	mul	r2, r0, r7
   4d788:	mov	r1, r9
   4d78c:	mov	r0, r8
   4d790:	bl	14f8 <memcpy@plt>
   4d794:	b	4d7c8 <Mat_VarDuplicate+0x430>
   4d798:	ldr	r7, [r5, #52]	; 0x34
   4d79c:	ldr	r0, [r4]
   4d7a0:	bl	15ac <malloc@plt>
   4d7a4:	str	r0, [r7, #16]
   4d7a8:	cmp	r0, #0
   4d7ac:	beq	4d7c8 <Mat_VarDuplicate+0x430>
   4d7b0:	ldr	r3, [r5, #52]	; 0x34
   4d7b4:	ldr	r1, [r4, #52]	; 0x34
   4d7b8:	ldr	r2, [r4]
   4d7bc:	ldr	r1, [r1, #16]
   4d7c0:	ldr	r0, [r3, #16]
   4d7c4:	bl	14f8 <memcpy@plt>
   4d7c8:	cmp	r6, #0
   4d7cc:	beq	4d878 <Mat_VarDuplicate+0x4e0>
   4d7d0:	ldr	r3, [r4, #40]	; 0x28
   4d7d4:	cmp	r3, #0
   4d7d8:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d7dc:	ldr	r3, [r4, #16]
   4d7e0:	cmp	r3, #2
   4d7e4:	beq	4d88c <Mat_VarDuplicate+0x4f4>
   4d7e8:	cmp	r3, #1
   4d7ec:	beq	4d8f0 <Mat_VarDuplicate+0x558>
   4d7f0:	cmp	r3, #5
   4d7f4:	beq	4d954 <Mat_VarDuplicate+0x5bc>
   4d7f8:	ldr	r3, [r5, #20]
   4d7fc:	cmp	r3, #0
   4d800:	beq	4db00 <Mat_VarDuplicate+0x768>
   4d804:	mov	r0, #8
   4d808:	bl	15ac <malloc@plt>
   4d80c:	mov	r6, r0
   4d810:	str	r0, [r5, #40]	; 0x28
   4d814:	cmp	r0, #0
   4d818:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d81c:	ldr	r4, [r4, #40]	; 0x28
   4d820:	ldr	r0, [r5]
   4d824:	bl	15ac <malloc@plt>
   4d828:	str	r0, [r6]
   4d82c:	cmp	r0, #0
   4d830:	beq	4d840 <Mat_VarDuplicate+0x4a8>
   4d834:	ldr	r2, [r5]
   4d838:	ldr	r1, [r4]
   4d83c:	bl	14f8 <memcpy@plt>
   4d840:	ldr	r0, [r5]
   4d844:	bl	15ac <malloc@plt>
   4d848:	str	r0, [r6, #4]
   4d84c:	cmp	r0, #0
   4d850:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d854:	ldr	r2, [r5]
   4d858:	ldr	r1, [r4, #4]
   4d85c:	bl	14f8 <memcpy@plt>
   4d860:	b	4d880 <Mat_VarDuplicate+0x4e8>
   4d864:	ldr	r0, [r5, #52]	; 0x34
   4d868:	bl	14e0 <free@plt>
   4d86c:	mov	r3, #0
   4d870:	str	r3, [r5, #52]	; 0x34
   4d874:	b	4d7c8 <Mat_VarDuplicate+0x430>
   4d878:	ldr	r3, [r4, #40]	; 0x28
   4d87c:	str	r3, [r5, #40]	; 0x28
   4d880:	mov	r0, r5
   4d884:	add	sp, sp, #12
   4d888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d88c:	ldr	r0, [r4]
   4d890:	bl	15ac <malloc@plt>
   4d894:	mov	r7, r0
   4d898:	str	r0, [r5, #40]	; 0x28
   4d89c:	cmp	r0, #0
   4d8a0:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d8a4:	ldr	r1, [r4, #12]
   4d8a8:	cmp	r1, #0
   4d8ac:	ble	4d880 <Mat_VarDuplicate+0x4e8>
   4d8b0:	ldr	r0, [r4]
   4d8b4:	bl	513bc <__udivsi3>
   4d8b8:	ldr	r8, [r4, #40]	; 0x28
   4d8bc:	subs	r9, r0, #0
   4d8c0:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d8c4:	sub	r8, r8, #4
   4d8c8:	sub	r7, r7, #4
   4d8cc:	mov	r4, #0
   4d8d0:	mov	r1, r6
   4d8d4:	ldr	r0, [r8, #4]!
   4d8d8:	bl	172c <Mat_VarDuplicate@plt>
   4d8dc:	str	r0, [r7, #4]!
   4d8e0:	add	r4, r4, #1
   4d8e4:	cmp	r9, r4
   4d8e8:	bne	4d8d0 <Mat_VarDuplicate+0x538>
   4d8ec:	b	4d880 <Mat_VarDuplicate+0x4e8>
   4d8f0:	ldr	r0, [r4]
   4d8f4:	bl	15ac <malloc@plt>
   4d8f8:	mov	r7, r0
   4d8fc:	str	r0, [r5, #40]	; 0x28
   4d900:	cmp	r0, #0
   4d904:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d908:	ldr	r1, [r4, #12]
   4d90c:	cmp	r1, #0
   4d910:	ble	4d880 <Mat_VarDuplicate+0x4e8>
   4d914:	ldr	r0, [r4]
   4d918:	bl	513bc <__udivsi3>
   4d91c:	ldr	r8, [r4, #40]	; 0x28
   4d920:	subs	r9, r0, #0
   4d924:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d928:	sub	r8, r8, #4
   4d92c:	sub	r7, r7, #4
   4d930:	mov	r4, #0
   4d934:	mov	r1, r6
   4d938:	ldr	r0, [r8, #4]!
   4d93c:	bl	172c <Mat_VarDuplicate@plt>
   4d940:	str	r0, [r7, #4]!
   4d944:	add	r4, r4, #1
   4d948:	cmp	r9, r4
   4d94c:	bne	4d934 <Mat_VarDuplicate+0x59c>
   4d950:	b	4d880 <Mat_VarDuplicate+0x4e8>
   4d954:	mov	r0, #28
   4d958:	bl	15ac <malloc@plt>
   4d95c:	mov	r7, r0
   4d960:	str	r0, [r5, #40]	; 0x28
   4d964:	cmp	r0, #0
   4d968:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4d96c:	ldr	r6, [r4, #40]	; 0x28
   4d970:	ldr	r3, [r6]
   4d974:	str	r3, [r0]
   4d978:	ldr	r3, [r6, #8]
   4d97c:	str	r3, [r0, #8]
   4d980:	ldr	r0, [r6, #8]
   4d984:	lsl	r0, r0, #2
   4d988:	bl	15ac <malloc@plt>
   4d98c:	str	r0, [r7, #4]
   4d990:	cmp	r0, #0
   4d994:	beq	4d9a8 <Mat_VarDuplicate+0x610>
   4d998:	ldr	r2, [r6, #8]
   4d99c:	lsl	r2, r2, #2
   4d9a0:	ldr	r1, [r6, #4]
   4d9a4:	bl	14f8 <memcpy@plt>
   4d9a8:	ldr	r3, [r6, #16]
   4d9ac:	str	r3, [r7, #16]
   4d9b0:	ldr	r0, [r6, #16]
   4d9b4:	lsl	r0, r0, #2
   4d9b8:	bl	15ac <malloc@plt>
   4d9bc:	str	r0, [r7, #12]
   4d9c0:	cmp	r0, #0
   4d9c4:	beq	4d9d8 <Mat_VarDuplicate+0x640>
   4d9c8:	ldr	r2, [r6, #16]
   4d9cc:	lsl	r2, r2, #2
   4d9d0:	ldr	r1, [r6, #12]
   4d9d4:	bl	14f8 <memcpy@plt>
   4d9d8:	ldr	r3, [r6, #20]
   4d9dc:	str	r3, [r7, #20]
   4d9e0:	ldr	r3, [r5, #20]
   4d9e4:	cmp	r3, #0
   4d9e8:	beq	4daa0 <Mat_VarDuplicate+0x708>
   4d9ec:	ldr	r3, [r6, #24]
   4d9f0:	cmp	r3, #0
   4d9f4:	beq	4daf4 <Mat_VarDuplicate+0x75c>
   4d9f8:	mov	r0, #8
   4d9fc:	bl	15ac <malloc@plt>
   4da00:	mov	r8, r0
   4da04:	str	r0, [r7, #24]
   4da08:	cmp	r0, #0
   4da0c:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4da10:	ldr	r9, [r6, #24]
   4da14:	ldr	r7, [r6, #20]
   4da18:	ldr	r0, [r4, #8]
   4da1c:	bl	1600 <Mat_SizeOf@plt>
   4da20:	mul	r0, r0, r7
   4da24:	bl	15ac <malloc@plt>
   4da28:	mov	r7, r0
   4da2c:	str	r0, [r8]
   4da30:	cmp	r0, #0
   4da34:	beq	4da58 <Mat_VarDuplicate+0x6c0>
   4da38:	ldr	sl, [r9]
   4da3c:	ldr	fp, [r6, #20]
   4da40:	ldr	r0, [r4, #8]
   4da44:	bl	1600 <Mat_SizeOf@plt>
   4da48:	mul	r2, r0, fp
   4da4c:	mov	r1, sl
   4da50:	mov	r0, r7
   4da54:	bl	14f8 <memcpy@plt>
   4da58:	ldr	r7, [r6, #20]
   4da5c:	ldr	r0, [r4, #8]
   4da60:	bl	1600 <Mat_SizeOf@plt>
   4da64:	mul	r0, r0, r7
   4da68:	bl	15ac <malloc@plt>
   4da6c:	mov	r7, r0
   4da70:	str	r0, [r8, #4]
   4da74:	cmp	r0, #0
   4da78:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4da7c:	ldr	r8, [r9, #4]
   4da80:	ldr	r6, [r6, #20]
   4da84:	ldr	r0, [r4, #8]
   4da88:	bl	1600 <Mat_SizeOf@plt>
   4da8c:	mul	r2, r0, r6
   4da90:	mov	r1, r8
   4da94:	mov	r0, r7
   4da98:	bl	14f8 <memcpy@plt>
   4da9c:	b	4d880 <Mat_VarDuplicate+0x4e8>
   4daa0:	ldr	r3, [r6, #24]
   4daa4:	cmp	r3, #0
   4daa8:	beq	4daf4 <Mat_VarDuplicate+0x75c>
   4daac:	ldr	r8, [r6, #20]
   4dab0:	ldr	r0, [r4, #8]
   4dab4:	bl	1600 <Mat_SizeOf@plt>
   4dab8:	mul	r0, r0, r8
   4dabc:	bl	15ac <malloc@plt>
   4dac0:	mov	r8, r0
   4dac4:	str	r0, [r7, #24]
   4dac8:	cmp	r0, #0
   4dacc:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4dad0:	ldr	r7, [r6, #24]
   4dad4:	ldr	r6, [r6, #20]
   4dad8:	ldr	r0, [r4, #8]
   4dadc:	bl	1600 <Mat_SizeOf@plt>
   4dae0:	mul	r2, r0, r6
   4dae4:	mov	r1, r7
   4dae8:	mov	r0, r8
   4daec:	bl	14f8 <memcpy@plt>
   4daf0:	b	4d880 <Mat_VarDuplicate+0x4e8>
   4daf4:	mov	r3, #0
   4daf8:	str	r3, [r7, #24]
   4dafc:	b	4d880 <Mat_VarDuplicate+0x4e8>
   4db00:	ldr	r0, [r4]
   4db04:	bl	15ac <malloc@plt>
   4db08:	str	r0, [r5, #40]	; 0x28
   4db0c:	cmp	r0, #0
   4db10:	beq	4d880 <Mat_VarDuplicate+0x4e8>
   4db14:	ldr	r2, [r4]
   4db18:	ldr	r1, [r4, #40]	; 0x28
   4db1c:	bl	14f8 <memcpy@plt>
   4db20:	b	4d880 <Mat_VarDuplicate+0x4e8>

0004db24 <Mat_VarFree>:
   4db24:	push	{r4, r5, r6, lr}
   4db28:	sub	sp, sp, #8
   4db2c:	mov	r3, #0
   4db30:	str	r3, [sp, #4]
   4db34:	subs	r4, r0, #0
   4db38:	beq	4dea0 <Mat_VarFree+0x37c>
   4db3c:	ldr	r3, [r4, #32]
   4db40:	cmp	r3, #0
   4db44:	beq	4db64 <Mat_VarFree+0x40>
   4db48:	add	r1, sp, #8
   4db4c:	mov	r3, #1
   4db50:	str	r3, [r1, #-4]!
   4db54:	mov	r0, r4
   4db58:	bl	4d06c <SafeMulDims>
   4db5c:	ldr	r0, [r4, #32]
   4db60:	bl	14e0 <free@plt>
   4db64:	ldr	r5, [r4, #40]	; 0x28
   4db68:	cmp	r5, #0
   4db6c:	beq	4dbd0 <Mat_VarFree+0xac>
   4db70:	ldr	r3, [r4, #16]
   4db74:	sub	r3, r3, #1
   4db78:	cmp	r3, #15
   4db7c:	addls	pc, pc, r3, lsl #2
   4db80:	b	4dbd0 <Mat_VarFree+0xac>
   4db84:	b	4dc58 <Mat_VarFree+0x134>
   4db88:	b	4dbc4 <Mat_VarFree+0xa0>
   4db8c:	b	4dbd0 <Mat_VarFree+0xac>
   4db90:	b	4dd18 <Mat_VarFree+0x1f4>
   4db94:	b	4dc9c <Mat_VarFree+0x178>
   4db98:	b	4dd18 <Mat_VarFree+0x1f4>
   4db9c:	b	4dd18 <Mat_VarFree+0x1f4>
   4dba0:	b	4dd18 <Mat_VarFree+0x1f4>
   4dba4:	b	4dd18 <Mat_VarFree+0x1f4>
   4dba8:	b	4dd18 <Mat_VarFree+0x1f4>
   4dbac:	b	4dd18 <Mat_VarFree+0x1f4>
   4dbb0:	b	4dd18 <Mat_VarFree+0x1f4>
   4dbb4:	b	4dd18 <Mat_VarFree+0x1f4>
   4dbb8:	b	4dd18 <Mat_VarFree+0x1f4>
   4dbbc:	b	4dd18 <Mat_VarFree+0x1f4>
   4dbc0:	b	4dd58 <Mat_VarFree+0x234>
   4dbc4:	ldr	r3, [r4, #44]	; 0x2c
   4dbc8:	cmp	r3, #0
   4dbcc:	beq	4dc0c <Mat_VarFree+0xe8>
   4dbd0:	ldr	r3, [r4, #52]	; 0x34
   4dbd4:	cmp	r3, #0
   4dbd8:	beq	4de88 <Mat_VarFree+0x364>
   4dbdc:	ldr	r2, [r4, #48]	; 0x30
   4dbe0:	cmp	r2, #1
   4dbe4:	beq	4dd70 <Mat_VarFree+0x24c>
   4dbe8:	ldr	r3, [r4, #52]	; 0x34
   4dbec:	ldr	r2, [r3, #8]
   4dbf0:	cmp	r2, #0
   4dbf4:	beq	4de78 <Mat_VarFree+0x354>
   4dbf8:	ldr	r2, [r3, #4]
   4dbfc:	cmp	r2, #0
   4dc00:	beq	4de78 <Mat_VarFree+0x354>
   4dc04:	mov	r5, #0
   4dc08:	b	4de58 <Mat_VarFree+0x334>
   4dc0c:	ldr	r3, [r4, #52]	; 0x34
   4dc10:	ldr	r2, [r3, #4]
   4dc14:	ldr	r1, [sp, #4]
   4dc18:	mov	r0, sp
   4dc1c:	bl	4d0c8 <SafeMul>
   4dc20:	ldr	r3, [sp]
   4dc24:	cmp	r3, #0
   4dc28:	beq	4dc4c <Mat_VarFree+0x128>
   4dc2c:	sub	r5, r5, #4
   4dc30:	mov	r6, #0
   4dc34:	ldr	r0, [r5, #4]!
   4dc38:	bl	15f4 <Mat_VarFree@plt>
   4dc3c:	add	r6, r6, #1
   4dc40:	ldr	r3, [sp]
   4dc44:	cmp	r3, r6
   4dc48:	bhi	4dc34 <Mat_VarFree+0x110>
   4dc4c:	ldr	r0, [r4, #40]	; 0x28
   4dc50:	bl	14e0 <free@plt>
   4dc54:	b	4dbd0 <Mat_VarFree+0xac>
   4dc58:	ldr	r3, [r4, #44]	; 0x2c
   4dc5c:	cmp	r3, #0
   4dc60:	bne	4dbd0 <Mat_VarFree+0xac>
   4dc64:	ldr	r3, [sp, #4]
   4dc68:	cmp	r3, #0
   4dc6c:	beq	4dc90 <Mat_VarFree+0x16c>
   4dc70:	sub	r5, r5, #4
   4dc74:	mov	r6, #0
   4dc78:	ldr	r0, [r5, #4]!
   4dc7c:	bl	15f4 <Mat_VarFree@plt>
   4dc80:	add	r6, r6, #1
   4dc84:	ldr	r3, [sp, #4]
   4dc88:	cmp	r3, r6
   4dc8c:	bhi	4dc78 <Mat_VarFree+0x154>
   4dc90:	ldr	r0, [r4, #40]	; 0x28
   4dc94:	bl	14e0 <free@plt>
   4dc98:	b	4dbd0 <Mat_VarFree+0xac>
   4dc9c:	ldr	r3, [r4, #44]	; 0x2c
   4dca0:	cmp	r3, #0
   4dca4:	bne	4dbd0 <Mat_VarFree+0xac>
   4dca8:	ldr	r0, [r5, #4]
   4dcac:	cmp	r0, #0
   4dcb0:	beq	4dcb8 <Mat_VarFree+0x194>
   4dcb4:	bl	14e0 <free@plt>
   4dcb8:	ldr	r0, [r5, #12]
   4dcbc:	cmp	r0, #0
   4dcc0:	beq	4dcc8 <Mat_VarFree+0x1a4>
   4dcc4:	bl	14e0 <free@plt>
   4dcc8:	ldr	r3, [r4, #20]
   4dccc:	cmp	r3, #0
   4dcd0:	beq	4dcfc <Mat_VarFree+0x1d8>
   4dcd4:	ldr	r6, [r5, #24]
   4dcd8:	cmp	r6, #0
   4dcdc:	beq	4dd0c <Mat_VarFree+0x1e8>
   4dce0:	ldr	r0, [r6]
   4dce4:	bl	14e0 <free@plt>
   4dce8:	ldr	r0, [r6, #4]
   4dcec:	bl	14e0 <free@plt>
   4dcf0:	mov	r0, r6
   4dcf4:	bl	14e0 <free@plt>
   4dcf8:	b	4dd0c <Mat_VarFree+0x1e8>
   4dcfc:	ldr	r0, [r5, #24]
   4dd00:	cmp	r0, #0
   4dd04:	beq	4dd0c <Mat_VarFree+0x1e8>
   4dd08:	bl	14e0 <free@plt>
   4dd0c:	mov	r0, r5
   4dd10:	bl	14e0 <free@plt>
   4dd14:	b	4dbd0 <Mat_VarFree+0xac>
   4dd18:	ldr	r3, [r4, #44]	; 0x2c
   4dd1c:	cmp	r3, #0
   4dd20:	bne	4dbd0 <Mat_VarFree+0xac>
   4dd24:	ldr	r3, [r4, #20]
   4dd28:	cmp	r3, #0
   4dd2c:	beq	4dd4c <Mat_VarFree+0x228>
   4dd30:	ldr	r0, [r5]
   4dd34:	bl	14e0 <free@plt>
   4dd38:	ldr	r0, [r5, #4]
   4dd3c:	bl	14e0 <free@plt>
   4dd40:	mov	r0, r5
   4dd44:	bl	14e0 <free@plt>
   4dd48:	b	4dbd0 <Mat_VarFree+0xac>
   4dd4c:	mov	r0, r5
   4dd50:	bl	14e0 <free@plt>
   4dd54:	b	4dbd0 <Mat_VarFree+0xac>
   4dd58:	ldr	r3, [r4, #44]	; 0x2c
   4dd5c:	cmp	r3, #0
   4dd60:	bne	4dbd0 <Mat_VarFree+0xac>
   4dd64:	mov	r0, r5
   4dd68:	bl	14e0 <free@plt>
   4dd6c:	b	4dbd0 <Mat_VarFree+0xac>
   4dd70:	ldr	r0, [r3, #12]
   4dd74:	bl	1618 <inflateEnd@plt>
   4dd78:	ldr	r3, [r4, #52]	; 0x34
   4dd7c:	ldr	r0, [r3, #12]
   4dd80:	bl	14e0 <free@plt>
   4dd84:	ldr	r3, [r4, #52]	; 0x34
   4dd88:	ldr	r5, [r3, #16]
   4dd8c:	cmp	r5, #0
   4dd90:	beq	4dbe8 <Mat_VarFree+0xc4>
   4dd94:	ldr	r3, [r4, #16]
   4dd98:	cmp	r3, #5
   4dd9c:	beq	4ddb8 <Mat_VarFree+0x294>
   4dda0:	ldr	r3, [r4, #20]
   4dda4:	cmp	r3, #0
   4dda8:	bne	4de28 <Mat_VarFree+0x304>
   4ddac:	mov	r0, r5
   4ddb0:	bl	14e0 <free@plt>
   4ddb4:	b	4dbe8 <Mat_VarFree+0xc4>
   4ddb8:	ldr	r0, [r5, #4]
   4ddbc:	cmp	r0, #0
   4ddc0:	beq	4ddc8 <Mat_VarFree+0x2a4>
   4ddc4:	bl	14e0 <free@plt>
   4ddc8:	ldr	r0, [r5, #12]
   4ddcc:	cmp	r0, #0
   4ddd0:	beq	4ddd8 <Mat_VarFree+0x2b4>
   4ddd4:	bl	14e0 <free@plt>
   4ddd8:	ldr	r3, [r4, #20]
   4dddc:	cmp	r3, #0
   4dde0:	beq	4de0c <Mat_VarFree+0x2e8>
   4dde4:	ldr	r6, [r5, #24]
   4dde8:	cmp	r6, #0
   4ddec:	beq	4de1c <Mat_VarFree+0x2f8>
   4ddf0:	ldr	r0, [r6]
   4ddf4:	bl	14e0 <free@plt>
   4ddf8:	ldr	r0, [r6, #4]
   4ddfc:	bl	14e0 <free@plt>
   4de00:	mov	r0, r6
   4de04:	bl	14e0 <free@plt>
   4de08:	b	4de1c <Mat_VarFree+0x2f8>
   4de0c:	ldr	r0, [r5, #24]
   4de10:	cmp	r0, #0
   4de14:	beq	4de1c <Mat_VarFree+0x2f8>
   4de18:	bl	14e0 <free@plt>
   4de1c:	mov	r0, r5
   4de20:	bl	14e0 <free@plt>
   4de24:	b	4dbe8 <Mat_VarFree+0xc4>
   4de28:	ldr	r0, [r5]
   4de2c:	bl	14e0 <free@plt>
   4de30:	ldr	r0, [r5, #4]
   4de34:	bl	14e0 <free@plt>
   4de38:	mov	r0, r5
   4de3c:	bl	14e0 <free@plt>
   4de40:	b	4dbe8 <Mat_VarFree+0xc4>
   4de44:	add	r5, r5, #1
   4de48:	ldr	r3, [r4, #52]	; 0x34
   4de4c:	ldr	r2, [r3, #4]
   4de50:	cmp	r2, r5
   4de54:	bls	4de70 <Mat_VarFree+0x34c>
   4de58:	ldr	r3, [r3, #8]
   4de5c:	ldr	r0, [r3, r5, lsl #2]
   4de60:	cmp	r0, #0
   4de64:	beq	4de44 <Mat_VarFree+0x320>
   4de68:	bl	14e0 <free@plt>
   4de6c:	b	4de44 <Mat_VarFree+0x320>
   4de70:	ldr	r0, [r3, #8]
   4de74:	bl	14e0 <free@plt>
   4de78:	ldr	r0, [r4, #52]	; 0x34
   4de7c:	bl	14e0 <free@plt>
   4de80:	mov	r3, #0
   4de84:	str	r3, [r4, #52]	; 0x34
   4de88:	ldr	r0, [r4, #36]	; 0x24
   4de8c:	cmp	r0, #0
   4de90:	beq	4de98 <Mat_VarFree+0x374>
   4de94:	bl	14e0 <free@plt>
   4de98:	mov	r0, r4
   4de9c:	bl	14e0 <free@plt>
   4dea0:	add	sp, sp, #8
   4dea4:	pop	{r4, r5, r6, pc}

0004dea8 <Mat_Open>:
   4dea8:	push	{r4, r5, r6, r7, r8, r9, lr}
   4deac:	sub	sp, sp, #12
   4deb0:	mov	r9, r0
   4deb4:	mov	r8, r1
   4deb8:	tst	r1, #1
   4debc:	bne	4dfe4 <Mat_Open+0x13c>
   4dec0:	ldr	r1, [pc, #824]	; 4e200 <Mat_Open+0x358>
   4dec4:	add	r1, pc, r1
   4dec8:	bl	14bc <fopen@plt>
   4decc:	subs	r7, r0, #0
   4ded0:	beq	4e1f8 <Mat_Open+0x350>
   4ded4:	mov	r0, #44	; 0x2c
   4ded8:	bl	15ac <malloc@plt>
   4dedc:	subs	r4, r0, #0
   4dee0:	beq	4e010 <Mat_Open+0x168>
   4dee4:	str	r7, [r4]
   4dee8:	mov	r1, #1
   4deec:	mov	r0, #128	; 0x80
   4def0:	bl	1468 <calloc@plt>
   4def4:	mov	r5, r0
   4def8:	str	r0, [r4, #4]
   4defc:	cmp	r0, #0
   4df00:	beq	4e028 <Mat_Open+0x180>
   4df04:	mov	r1, #1
   4df08:	mov	r0, #8
   4df0c:	bl	1468 <calloc@plt>
   4df10:	str	r0, [r4, #8]
   4df14:	cmp	r0, #0
   4df18:	beq	4e04c <Mat_Open+0x1a4>
   4df1c:	mov	r6, #0
   4df20:	str	r6, [r4, #12]
   4df24:	str	r6, [r4, #16]
   4df28:	str	r6, [r4, #20]
   4df2c:	str	r6, [r4, #36]	; 0x24
   4df30:	str	r6, [r4, #40]	; 0x28
   4df34:	mov	r3, r7
   4df38:	mov	r2, #116	; 0x74
   4df3c:	mov	r1, #1
   4df40:	mov	r0, r5
   4df44:	bl	1588 <fread@plt>
   4df48:	mov	r5, r0
   4df4c:	ldr	r3, [r4, #4]
   4df50:	strb	r6, [r3, #116]	; 0x74
   4df54:	mov	r3, r7
   4df58:	mov	r2, #8
   4df5c:	mov	r1, #1
   4df60:	ldr	r0, [r4, #8]
   4df64:	bl	1588 <fread@plt>
   4df68:	add	r5, r5, r0
   4df6c:	mov	r3, r7
   4df70:	mov	r2, #1
   4df74:	mov	r1, #2
   4df78:	add	r0, sp, #4
   4df7c:	bl	1588 <fread@plt>
   4df80:	mov	r6, r0
   4df84:	mov	r3, r7
   4df88:	mov	r2, #2
   4df8c:	mov	r1, #1
   4df90:	add	r0, sp, #6
   4df94:	bl	1588 <fread@plt>
   4df98:	add	r5, r5, r0
   4df9c:	add	r5, r5, r6, lsl #1
   4dfa0:	cmp	r5, #128	; 0x80
   4dfa4:	beq	4e078 <Mat_Open+0x1d0>
   4dfa8:	ldr	r3, [r4, #16]
   4dfac:	cmp	r3, #0
   4dfb0:	beq	4e130 <Mat_Open+0x288>
   4dfb4:	mov	r1, r9
   4dfb8:	ldr	r0, [pc, #580]	; 4e204 <Mat_Open+0x35c>
   4dfbc:	add	r0, pc, r0
   4dfc0:	bl	1f2c <strdup_printf>
   4dfc4:	str	r0, [r4, #12]
   4dfc8:	str	r8, [r4, #24]
   4dfcc:	ldr	r3, [r4, #16]
   4dfd0:	cmp	r3, #512	; 0x200
   4dfd4:	beq	4e1c8 <Mat_Open+0x320>
   4dfd8:	mov	r0, r4
   4dfdc:	add	sp, sp, #12
   4dfe0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4dfe4:	ldr	r1, [pc, #540]	; 4e208 <Mat_Open+0x360>
   4dfe8:	add	r1, pc, r1
   4dfec:	bl	14bc <fopen@plt>
   4dff0:	subs	r7, r0, #0
   4dff4:	bne	4ded4 <Mat_Open+0x2c>
   4dff8:	bic	r2, r8, #1
   4dffc:	mov	r1, #0
   4e000:	mov	r0, r9
   4e004:	bl	16c0 <Mat_CreateVer@plt>
   4e008:	mov	r4, r0
   4e00c:	b	4dfd8 <Mat_Open+0x130>
   4e010:	mov	r0, r7
   4e014:	bl	16a8 <fclose@plt>
   4e018:	ldr	r0, [pc, #492]	; 4e20c <Mat_Open+0x364>
   4e01c:	add	r0, pc, r0
   4e020:	bl	1690 <Mat_Critical@plt>
   4e024:	b	4dfd8 <Mat_Open+0x130>
   4e028:	mov	r0, r4
   4e02c:	bl	14e0 <free@plt>
   4e030:	mov	r0, r7
   4e034:	bl	16a8 <fclose@plt>
   4e038:	ldr	r0, [pc, #464]	; 4e210 <Mat_Open+0x368>
   4e03c:	add	r0, pc, r0
   4e040:	bl	1690 <Mat_Critical@plt>
   4e044:	mov	r4, #0
   4e048:	b	4dfd8 <Mat_Open+0x130>
   4e04c:	mov	r0, r5
   4e050:	bl	14e0 <free@plt>
   4e054:	mov	r0, r4
   4e058:	bl	14e0 <free@plt>
   4e05c:	mov	r0, r7
   4e060:	bl	16a8 <fclose@plt>
   4e064:	ldr	r0, [pc, #424]	; 4e214 <Mat_Open+0x36c>
   4e068:	add	r0, pc, r0
   4e06c:	bl	1690 <Mat_Critical@plt>
   4e070:	mov	r4, #0
   4e074:	b	4dfd8 <Mat_Open+0x130>
   4e078:	mvn	r3, #0
   4e07c:	str	r3, [r4, #20]
   4e080:	ldrsh	r3, [sp, #6]
   4e084:	ldr	r2, [pc, #396]	; 4e218 <Mat_Open+0x370>
   4e088:	cmp	r3, r2
   4e08c:	moveq	r3, #0
   4e090:	streq	r3, [r4, #20]
   4e094:	beq	4e0a4 <Mat_Open+0x1fc>
   4e098:	ldr	r2, [pc, #380]	; 4e21c <Mat_Open+0x374>
   4e09c:	cmp	r3, r2
   4e0a0:	beq	4e11c <Mat_Open+0x274>
   4e0a4:	ldrsh	r3, [sp, #4]
   4e0a8:	str	r3, [r4, #16]
   4e0ac:	sub	r3, r3, #256	; 0x100
   4e0b0:	bic	r3, r3, #256	; 0x100
   4e0b4:	uxth	r3, r3
   4e0b8:	cmp	r3, #0
   4e0bc:	bne	4e130 <Mat_Open+0x288>
   4e0c0:	ldr	r3, [r4, #20]
   4e0c4:	cmn	r3, #1
   4e0c8:	beq	4e130 <Mat_Open+0x288>
   4e0cc:	ldr	r0, [r4]
   4e0d0:	bl	151c <ftell@plt>
   4e0d4:	str	r0, [r4, #28]
   4e0d8:	cmn	r0, #1
   4e0dc:	movne	r3, #0
   4e0e0:	strne	r3, [r4, #32]
   4e0e4:	bne	4dfa8 <Mat_Open+0x100>
   4e0e8:	ldr	r0, [r4, #4]
   4e0ec:	bl	14e0 <free@plt>
   4e0f0:	ldr	r0, [r4, #8]
   4e0f4:	bl	14e0 <free@plt>
   4e0f8:	mov	r0, r4
   4e0fc:	bl	14e0 <free@plt>
   4e100:	mov	r0, r7
   4e104:	bl	16a8 <fclose@plt>
   4e108:	ldr	r0, [pc, #272]	; 4e220 <Mat_Open+0x378>
   4e10c:	add	r0, pc, r0
   4e110:	bl	1690 <Mat_Critical@plt>
   4e114:	mov	r4, #0
   4e118:	b	4dfd8 <Mat_Open+0x130>
   4e11c:	mov	r3, #1
   4e120:	str	r3, [r4, #20]
   4e124:	add	r0, sp, #4
   4e128:	bl	1ae4 <Mat_int16Swap>
   4e12c:	b	4e0a4 <Mat_Open+0x1fc>
   4e130:	ldr	r0, [r4, #4]
   4e134:	bl	14e0 <free@plt>
   4e138:	ldr	r0, [r4, #8]
   4e13c:	bl	14e0 <free@plt>
   4e140:	mov	r3, #0
   4e144:	str	r3, [r4, #4]
   4e148:	str	r3, [r4, #8]
   4e14c:	str	r7, [r4]
   4e150:	mov	r2, #16
   4e154:	str	r2, [r4, #16]
   4e158:	str	r3, [r4, #20]
   4e15c:	str	r8, [r4, #24]
   4e160:	str	r3, [r4, #28]
   4e164:	str	r3, [r4, #32]
   4e168:	mov	r0, r4
   4e16c:	bl	1660 <Mat_Rewind@plt>
   4e170:	mov	r0, r4
   4e174:	bl	4c804 <Mat_VarReadNextInfo4>
   4e178:	mov	r3, r0
   4e17c:	clz	r0, r0
   4e180:	lsr	r0, r0, #5
   4e184:	cmp	r5, #0
   4e188:	moveq	r0, #0
   4e18c:	cmp	r0, #0
   4e190:	beq	4e1b4 <Mat_Open+0x30c>
   4e194:	mov	r0, r4
   4e198:	bl	1684 <Mat_Close@plt>
   4e19c:	mov	r1, r9
   4e1a0:	ldr	r0, [pc, #124]	; 4e224 <Mat_Open+0x37c>
   4e1a4:	add	r0, pc, r0
   4e1a8:	bl	1690 <Mat_Critical@plt>
   4e1ac:	mov	r4, #0
   4e1b0:	b	4dfd8 <Mat_Open+0x130>
   4e1b4:	mov	r0, r3
   4e1b8:	bl	15f4 <Mat_VarFree@plt>
   4e1bc:	mov	r0, r4
   4e1c0:	bl	1660 <Mat_Rewind@plt>
   4e1c4:	b	4dfb4 <Mat_Open+0x10c>
   4e1c8:	ldr	r0, [r4]
   4e1cc:	bl	16a8 <fclose@plt>
   4e1d0:	mov	r5, #0
   4e1d4:	str	r5, [r4]
   4e1d8:	mov	r0, r4
   4e1dc:	bl	1684 <Mat_Close@plt>
   4e1e0:	mov	r1, r9
   4e1e4:	ldr	r0, [pc, #60]	; 4e228 <Mat_Open+0x380>
   4e1e8:	add	r0, pc, r0
   4e1ec:	bl	1690 <Mat_Critical@plt>
   4e1f0:	mov	r4, r5
   4e1f4:	b	4dfd8 <Mat_Open+0x130>
   4e1f8:	mov	r4, #0
   4e1fc:	b	4dfd8 <Mat_Open+0x130>
   4e200:	.word	0x00004914
   4e204:	.word	0x00004a58
   4e208:	.word	0x00004890
   4e20c:	.word	0x000046a0
   4e210:	.word	0x00004840
   4e214:	.word	0x00004848
   4e218:	.word	0x00004d49
   4e21c:	.word	0x0000494d
   4e220:	.word	0x0000413c
   4e224:	.word	0x00004744
   4e228:	.word	0x0000472c

0004e22c <Mat_VarCreate>:
   4e22c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4e230:	sub	sp, sp, #12
   4e234:	ldr	r9, [sp, #48]	; 0x30
   4e238:	ldr	r8, [sp, #52]	; 0x34
   4e23c:	ldr	r6, [sp, #56]	; 0x38
   4e240:	mov	ip, #1
   4e244:	str	ip, [sp, #4]
   4e248:	cmp	r9, #0
   4e24c:	beq	4e6a8 <Mat_VarCreate+0x47c>
   4e250:	mov	sl, r3
   4e254:	mov	r5, r2
   4e258:	mov	r7, r1
   4e25c:	mov	fp, r0
   4e260:	bl	1570 <Mat_VarCalloc@plt>
   4e264:	subs	r4, r0, #0
   4e268:	beq	4e4d0 <Mat_VarCreate+0x2a4>
   4e26c:	mov	r3, #0
   4e270:	str	r3, [r4, #48]	; 0x30
   4e274:	and	r3, r6, #2048	; 0x800
   4e278:	str	r3, [r4, #20]
   4e27c:	and	r3, r6, #1024	; 0x400
   4e280:	str	r3, [r4, #24]
   4e284:	and	r3, r6, #512	; 0x200
   4e288:	str	r3, [r4, #28]
   4e28c:	cmp	fp, #0
   4e290:	beq	4e2a8 <Mat_VarCreate+0x7c>
   4e294:	mov	r1, fp
   4e298:	ldr	r0, [pc, #1188]	; 4e744 <Mat_VarCreate+0x518>
   4e29c:	add	r0, pc, r0
   4e2a0:	bl	1f2c <strdup_printf>
   4e2a4:	str	r0, [r4, #36]	; 0x24
   4e2a8:	str	sl, [r4, #4]
   4e2ac:	lsl	r0, sl, #2
   4e2b0:	bl	15ac <malloc@plt>
   4e2b4:	str	r0, [r4, #32]
   4e2b8:	cmp	sl, #0
   4e2bc:	ble	4e2f4 <Mat_VarCreate+0xc8>
   4e2c0:	sub	r2, r9, #4
   4e2c4:	mov	r3, #0
   4e2c8:	ldr	r0, [r2, #4]
   4e2cc:	ldr	r1, [r4, #32]
   4e2d0:	str	r0, [r1, r3, lsl #2]
   4e2d4:	ldr	r0, [r2, #4]!
   4e2d8:	ldr	r1, [sp, #4]
   4e2dc:	mul	r0, r0, r1
   4e2e0:	str	r0, [sp, #4]
   4e2e4:	add	r3, r3, #1
   4e2e8:	ldr	r1, [r4, #4]
   4e2ec:	cmp	r1, r3
   4e2f0:	bgt	4e2c8 <Mat_VarCreate+0x9c>
   4e2f4:	str	r7, [r4, #16]
   4e2f8:	str	r5, [r4, #8]
   4e2fc:	sub	r5, r5, #1
   4e300:	cmp	r5, #21
   4e304:	addls	pc, pc, r5, lsl #2
   4e308:	b	4e44c <Mat_VarCreate+0x220>
   4e30c:	b	4e468 <Mat_VarCreate+0x23c>
   4e310:	b	4e468 <Mat_VarCreate+0x23c>
   4e314:	b	4e364 <Mat_VarCreate+0x138>
   4e318:	b	4e364 <Mat_VarCreate+0x138>
   4e31c:	b	4e36c <Mat_VarCreate+0x140>
   4e320:	b	4e374 <Mat_VarCreate+0x148>
   4e324:	b	4e37c <Mat_VarCreate+0x150>
   4e328:	b	4e44c <Mat_VarCreate+0x220>
   4e32c:	b	4e470 <Mat_VarCreate+0x244>
   4e330:	b	4e44c <Mat_VarCreate+0x220>
   4e334:	b	4e44c <Mat_VarCreate+0x220>
   4e338:	b	4e470 <Mat_VarCreate+0x244>
   4e33c:	b	4e470 <Mat_VarCreate+0x244>
   4e340:	b	4e44c <Mat_VarCreate+0x220>
   4e344:	b	4e44c <Mat_VarCreate+0x220>
   4e348:	b	4e468 <Mat_VarCreate+0x23c>
   4e34c:	b	4e364 <Mat_VarCreate+0x138>
   4e350:	b	4e384 <Mat_VarCreate+0x158>
   4e354:	b	4e44c <Mat_VarCreate+0x220>
   4e358:	b	4e44c <Mat_VarCreate+0x220>
   4e35c:	b	4e38c <Mat_VarCreate+0x160>
   4e360:	b	4e394 <Mat_VarCreate+0x168>
   4e364:	mov	r5, #2
   4e368:	b	4e474 <Mat_VarCreate+0x248>
   4e36c:	mov	r5, #4
   4e370:	b	4e474 <Mat_VarCreate+0x248>
   4e374:	mov	r5, #4
   4e378:	b	4e474 <Mat_VarCreate+0x248>
   4e37c:	mov	r5, #4
   4e380:	b	4e474 <Mat_VarCreate+0x248>
   4e384:	mov	r5, #4
   4e388:	b	4e474 <Mat_VarCreate+0x248>
   4e38c:	mov	r5, #4
   4e390:	b	4e474 <Mat_VarCreate+0x248>
   4e394:	cmp	r8, #0
   4e398:	beq	4e708 <Mat_VarCreate+0x4dc>
   4e39c:	ldr	r3, [r8]
   4e3a0:	cmp	r3, #0
   4e3a4:	beq	4e6b0 <Mat_VarCreate+0x484>
   4e3a8:	mov	r3, r8
   4e3ac:	mov	r5, #0
   4e3b0:	add	r5, r5, #1
   4e3b4:	ldr	r2, [r3, #4]!
   4e3b8:	cmp	r2, #0
   4e3bc:	bne	4e3b0 <Mat_VarCreate+0x184>
   4e3c0:	ldr	r1, [sp, #4]
   4e3c4:	cmp	r1, #0
   4e3c8:	beq	4e3d8 <Mat_VarCreate+0x1ac>
   4e3cc:	mov	r0, r5
   4e3d0:	bl	513bc <__udivsi3>
   4e3d4:	mov	r5, r0
   4e3d8:	ldr	r3, [r4, #52]	; 0x34
   4e3dc:	str	r5, [r3, #4]
   4e3e0:	cmp	r5, #0
   4e3e4:	moveq	r5, #4
   4e3e8:	beq	4e474 <Mat_VarCreate+0x248>
   4e3ec:	ldr	r7, [r4, #52]	; 0x34
   4e3f0:	mov	r1, #4
   4e3f4:	mov	r0, r5
   4e3f8:	bl	1468 <calloc@plt>
   4e3fc:	str	r0, [r7, #8]
   4e400:	sub	r9, r8, #4
   4e404:	mov	r7, #0
   4e408:	ldr	r3, [r4, #52]	; 0x34
   4e40c:	ldr	sl, [r3, #8]
   4e410:	ldr	r3, [r9, #4]!
   4e414:	ldr	r0, [r3, #36]	; 0x24
   4e418:	bl	1534 <strdup@plt>
   4e41c:	str	r0, [sl, r7, lsl #2]
   4e420:	add	r7, r7, #1
   4e424:	cmp	r5, r7
   4e428:	bne	4e408 <Mat_VarCreate+0x1dc>
   4e42c:	add	r0, sp, #8
   4e430:	mov	r2, r7
   4e434:	ldr	r1, [r0, #-4]!
   4e438:	bl	4d0c8 <SafeMul>
   4e43c:	mov	r5, #4
   4e440:	b	4e474 <Mat_VarCreate+0x248>
   4e444:	mov	r5, #0
   4e448:	b	4e3cc <Mat_VarCreate+0x1a0>
   4e44c:	mov	r0, r4
   4e450:	bl	15f4 <Mat_VarFree@plt>
   4e454:	ldr	r0, [pc, #748]	; 4e748 <Mat_VarCreate+0x51c>
   4e458:	add	r0, pc, r0
   4e45c:	bl	1690 <Mat_Critical@plt>
   4e460:	mov	r4, #0
   4e464:	b	4e4d0 <Mat_VarCreate+0x2a4>
   4e468:	mov	r5, #1
   4e46c:	b	4e474 <Mat_VarCreate+0x248>
   4e470:	mov	r5, #8
   4e474:	ldr	r3, [r4, #16]
   4e478:	cmp	r3, #5
   4e47c:	beq	4e718 <Mat_VarCreate+0x4ec>
   4e480:	str	r5, [r4, #12]
   4e484:	mov	r2, r5
   4e488:	ldr	r1, [sp, #4]
   4e48c:	mov	r0, r4
   4e490:	bl	4d0c8 <SafeMul>
   4e494:	cmp	r8, #0
   4e498:	beq	4e6e4 <Mat_VarCreate+0x4b8>
   4e49c:	tst	r6, #1
   4e4a0:	bne	4e734 <Mat_VarCreate+0x508>
   4e4a4:	ldr	r3, [r4, #16]
   4e4a8:	cmp	r3, #5
   4e4ac:	beq	4e4ec <Mat_VarCreate+0x2c0>
   4e4b0:	ldr	r3, [r4, #20]
   4e4b4:	cmp	r3, #0
   4e4b8:	bne	4e610 <Mat_VarCreate+0x3e4>
   4e4bc:	ldr	r5, [r4]
   4e4c0:	cmp	r5, #0
   4e4c4:	bne	4e684 <Mat_VarCreate+0x458>
   4e4c8:	mov	r3, #0
   4e4cc:	str	r3, [r4, #44]	; 0x2c
   4e4d0:	mov	r0, r4
   4e4d4:	add	sp, sp, #12
   4e4d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4e4dc:	mov	r1, #4
   4e4e0:	bl	1468 <calloc@plt>
   4e4e4:	str	r0, [r4, #40]	; 0x28
   4e4e8:	b	4e4d0 <Mat_VarCreate+0x2a4>
   4e4ec:	mov	r0, #28
   4e4f0:	bl	15ac <malloc@plt>
   4e4f4:	subs	r6, r0, #0
   4e4f8:	beq	4e608 <Mat_VarCreate+0x3dc>
   4e4fc:	ldr	r3, [r8]
   4e500:	str	r3, [r6]
   4e504:	ldr	r3, [r8, #8]
   4e508:	str	r3, [r6, #8]
   4e50c:	ldr	r7, [r8, #16]
   4e510:	str	r7, [r6, #16]
   4e514:	ldr	r9, [r8, #20]
   4e518:	str	r9, [r6, #20]
   4e51c:	lsl	sl, r3, #2
   4e520:	mov	r0, sl
   4e524:	bl	15ac <malloc@plt>
   4e528:	str	r0, [r6, #4]
   4e52c:	cmp	r0, #0
   4e530:	beq	4e540 <Mat_VarCreate+0x314>
   4e534:	mov	r2, sl
   4e538:	ldr	r1, [r8, #4]
   4e53c:	bl	14f8 <memcpy@plt>
   4e540:	lsl	r7, r7, #2
   4e544:	mov	r0, r7
   4e548:	bl	15ac <malloc@plt>
   4e54c:	str	r0, [r6, #12]
   4e550:	cmp	r0, #0
   4e554:	beq	4e564 <Mat_VarCreate+0x338>
   4e558:	mov	r2, r7
   4e55c:	ldr	r1, [r8, #12]
   4e560:	bl	14f8 <memcpy@plt>
   4e564:	ldr	r3, [r4, #20]
   4e568:	cmp	r3, #0
   4e56c:	beq	4e5e4 <Mat_VarCreate+0x3b8>
   4e570:	mov	r0, #8
   4e574:	bl	15ac <malloc@plt>
   4e578:	mov	r7, r0
   4e57c:	str	r0, [r6, #24]
   4e580:	cmp	r0, #0
   4e584:	beq	4e608 <Mat_VarCreate+0x3dc>
   4e588:	ldr	sl, [r8, #24]
   4e58c:	mul	r5, r5, r9
   4e590:	mov	r0, r5
   4e594:	bl	15ac <malloc@plt>
   4e598:	mov	r9, r0
   4e59c:	str	r0, [r7]
   4e5a0:	mov	r0, r5
   4e5a4:	bl	15ac <malloc@plt>
   4e5a8:	mov	r8, r0
   4e5ac:	str	r0, [r7, #4]
   4e5b0:	cmp	r9, #0
   4e5b4:	beq	4e5c8 <Mat_VarCreate+0x39c>
   4e5b8:	mov	r2, r5
   4e5bc:	ldr	r1, [sl]
   4e5c0:	mov	r0, r9
   4e5c4:	bl	14f8 <memcpy@plt>
   4e5c8:	cmp	r8, #0
   4e5cc:	beq	4e608 <Mat_VarCreate+0x3dc>
   4e5d0:	mov	r2, r5
   4e5d4:	ldr	r1, [sl, #4]
   4e5d8:	mov	r0, r8
   4e5dc:	bl	14f8 <memcpy@plt>
   4e5e0:	b	4e608 <Mat_VarCreate+0x3dc>
   4e5e4:	mul	r5, r5, r9
   4e5e8:	mov	r0, r5
   4e5ec:	bl	15ac <malloc@plt>
   4e5f0:	str	r0, [r6, #24]
   4e5f4:	cmp	r0, #0
   4e5f8:	beq	4e608 <Mat_VarCreate+0x3dc>
   4e5fc:	mov	r2, r5
   4e600:	ldr	r1, [r8, #24]
   4e604:	bl	14f8 <memcpy@plt>
   4e608:	str	r6, [r4, #40]	; 0x28
   4e60c:	b	4e4d0 <Mat_VarCreate+0x2a4>
   4e610:	mov	r0, #8
   4e614:	bl	15ac <malloc@plt>
   4e618:	mov	r5, r0
   4e61c:	str	r0, [r4, #40]	; 0x28
   4e620:	cmp	r0, #0
   4e624:	beq	4e4c8 <Mat_VarCreate+0x29c>
   4e628:	ldr	r0, [r4]
   4e62c:	cmp	r0, #0
   4e630:	beq	4e4c8 <Mat_VarCreate+0x29c>
   4e634:	bl	15ac <malloc@plt>
   4e638:	mov	r7, r0
   4e63c:	str	r0, [r5]
   4e640:	ldr	r0, [r4]
   4e644:	bl	15ac <malloc@plt>
   4e648:	mov	r6, r0
   4e64c:	str	r0, [r5, #4]
   4e650:	cmp	r7, #0
   4e654:	beq	4e668 <Mat_VarCreate+0x43c>
   4e658:	ldr	r2, [r4]
   4e65c:	ldr	r1, [r8]
   4e660:	mov	r0, r7
   4e664:	bl	14f8 <memcpy@plt>
   4e668:	cmp	r6, #0
   4e66c:	beq	4e4c8 <Mat_VarCreate+0x29c>
   4e670:	ldr	r2, [r4]
   4e674:	ldr	r1, [r8, #4]
   4e678:	mov	r0, r6
   4e67c:	bl	14f8 <memcpy@plt>
   4e680:	b	4e4c8 <Mat_VarCreate+0x29c>
   4e684:	mov	r0, r5
   4e688:	bl	15ac <malloc@plt>
   4e68c:	str	r0, [r4, #40]	; 0x28
   4e690:	cmp	r0, #0
   4e694:	beq	4e4c8 <Mat_VarCreate+0x29c>
   4e698:	mov	r2, r5
   4e69c:	mov	r1, r8
   4e6a0:	bl	14f8 <memcpy@plt>
   4e6a4:	b	4e4c8 <Mat_VarCreate+0x29c>
   4e6a8:	mov	r4, #0
   4e6ac:	b	4e4d0 <Mat_VarCreate+0x2a4>
   4e6b0:	ldr	r1, [sp, #4]
   4e6b4:	cmp	r1, #0
   4e6b8:	bne	4e444 <Mat_VarCreate+0x218>
   4e6bc:	ldr	r3, [r4, #52]	; 0x34
   4e6c0:	mov	r2, #0
   4e6c4:	str	r2, [r3, #4]
   4e6c8:	mov	r5, #4
   4e6cc:	b	4e474 <Mat_VarCreate+0x248>
   4e6d0:	mov	r2, #4
   4e6d4:	str	r2, [r4, #12]
   4e6d8:	ldr	r1, [sp, #4]
   4e6dc:	mov	r0, r4
   4e6e0:	bl	4d0c8 <SafeMul>
   4e6e4:	ldr	r3, [r4, #16]
   4e6e8:	cmp	r3, #1
   4e6ec:	bne	4e6fc <Mat_VarCreate+0x4d0>
   4e6f0:	ldr	r0, [sp, #4]
   4e6f4:	cmp	r0, #0
   4e6f8:	bne	4e4dc <Mat_VarCreate+0x2b0>
   4e6fc:	mov	r3, #0
   4e700:	str	r3, [r4, #40]	; 0x28
   4e704:	b	4e4d0 <Mat_VarCreate+0x2a4>
   4e708:	ldr	r3, [r4, #16]
   4e70c:	cmp	r3, #5
   4e710:	bne	4e6d0 <Mat_VarCreate+0x4a4>
   4e714:	mov	r5, #4
   4e718:	mov	r3, #28
   4e71c:	str	r3, [r4, #12]
   4e720:	str	r3, [r4]
   4e724:	cmp	r8, #0
   4e728:	beq	4e6fc <Mat_VarCreate+0x4d0>
   4e72c:	tst	r6, #1
   4e730:	beq	4e4ec <Mat_VarCreate+0x2c0>
   4e734:	str	r8, [r4, #40]	; 0x28
   4e738:	mov	r3, #1
   4e73c:	str	r3, [r4, #44]	; 0x2c
   4e740:	b	4e4d0 <Mat_VarCreate+0x2a4>
   4e744:	.word	0x00004778
   4e748:	.word	0x00004500

0004e74c <Mat_CalcSingleSubscript>:
   4e74c:	push	{r4, r5, r6, lr}
   4e750:	subs	r6, r0, #0
   4e754:	ble	4e7f0 <Mat_CalcSingleSubscript+0xa4>
   4e758:	ldr	ip, [r2]
   4e75c:	ldr	r3, [r1]
   4e760:	cmp	ip, r3
   4e764:	bgt	4e788 <Mat_CalcSingleSubscript+0x3c>
   4e768:	cmp	ip, #0
   4e76c:	ble	4e794 <Mat_CalcSingleSubscript+0x48>
   4e770:	sub	ip, ip, #1
   4e774:	mov	r5, r1
   4e778:	mov	r4, #0
   4e77c:	mov	r0, r4
   4e780:	sub	lr, r1, #4
   4e784:	b	4e7a0 <Mat_CalcSingleSubscript+0x54>
   4e788:	ldr	r0, [pc, #104]	; 4e7f8 <Mat_CalcSingleSubscript+0xac>
   4e78c:	add	r0, pc, r0
   4e790:	bl	1690 <Mat_Critical@plt>
   4e794:	mvn	r0, #0
   4e798:	pop	{r4, r5, r6, pc}
   4e79c:	add	r5, r5, #4
   4e7a0:	add	r0, r0, ip
   4e7a4:	add	r4, r4, #1
   4e7a8:	cmp	r6, r4
   4e7ac:	beq	4e7ec <Mat_CalcSingleSubscript+0xa0>
   4e7b0:	ldr	ip, [r2, #4]!
   4e7b4:	ldr	r3, [r5, #4]
   4e7b8:	cmp	ip, r3
   4e7bc:	bgt	4e788 <Mat_CalcSingleSubscript+0x3c>
   4e7c0:	cmp	ip, #0
   4e7c4:	ble	4e794 <Mat_CalcSingleSubscript+0x48>
   4e7c8:	sub	ip, ip, #1
   4e7cc:	cmp	r4, #0
   4e7d0:	beq	4e79c <Mat_CalcSingleSubscript+0x50>
   4e7d4:	mov	r3, r5
   4e7d8:	ldr	r1, [r3], #-4
   4e7dc:	mul	ip, r1, ip
   4e7e0:	cmp	r3, lr
   4e7e4:	bne	4e7d8 <Mat_CalcSingleSubscript+0x8c>
   4e7e8:	b	4e79c <Mat_CalcSingleSubscript+0x50>
   4e7ec:	pop	{r4, r5, r6, pc}
   4e7f0:	mov	r0, #0
   4e7f4:	pop	{r4, r5, r6, pc}
   4e7f8:	.word	0x000041e4

0004e7fc <Mat_CalcSingleSubscript2>:
   4e7fc:	cmp	r0, #0
   4e800:	ble	4e8ac <Mat_CalcSingleSubscript2+0xb0>
   4e804:	push	{r4, r5, r6, lr}
   4e808:	ldr	ip, [r2]
   4e80c:	ldr	lr, [r1]
   4e810:	cmp	ip, lr
   4e814:	bhi	4e838 <Mat_CalcSingleSubscript2+0x3c>
   4e818:	cmp	ip, #0
   4e81c:	subne	ip, ip, #1
   4e820:	movne	r6, r1
   4e824:	movne	r5, #0
   4e828:	subne	r4, r1, #4
   4e82c:	bne	4e850 <Mat_CalcSingleSubscript2+0x54>
   4e830:	mov	r0, #1
   4e834:	pop	{r4, r5, r6, pc}
   4e838:	ldr	r0, [pc, #124]	; 4e8bc <Mat_CalcSingleSubscript2+0xc0>
   4e83c:	add	r0, pc, r0
   4e840:	bl	1690 <Mat_Critical@plt>
   4e844:	mov	r0, #1
   4e848:	pop	{r4, r5, r6, pc}
   4e84c:	add	r6, r6, #4
   4e850:	ldr	r1, [r3]
   4e854:	add	ip, r1, ip
   4e858:	str	ip, [r3]
   4e85c:	add	r5, r5, #1
   4e860:	cmp	r0, r5
   4e864:	beq	4e8a4 <Mat_CalcSingleSubscript2+0xa8>
   4e868:	ldr	ip, [r2, #4]!
   4e86c:	ldr	r1, [r6, #4]
   4e870:	cmp	ip, r1
   4e874:	bhi	4e838 <Mat_CalcSingleSubscript2+0x3c>
   4e878:	cmp	ip, #0
   4e87c:	beq	4e8b4 <Mat_CalcSingleSubscript2+0xb8>
   4e880:	sub	ip, ip, #1
   4e884:	cmp	r5, #0
   4e888:	beq	4e84c <Mat_CalcSingleSubscript2+0x50>
   4e88c:	mov	r1, r6
   4e890:	ldr	lr, [r1], #-4
   4e894:	mul	ip, lr, ip
   4e898:	cmp	r1, r4
   4e89c:	bne	4e890 <Mat_CalcSingleSubscript2+0x94>
   4e8a0:	b	4e84c <Mat_CalcSingleSubscript2+0x50>
   4e8a4:	mov	r0, #0
   4e8a8:	pop	{r4, r5, r6, pc}
   4e8ac:	mov	r0, #0
   4e8b0:	bx	lr
   4e8b4:	mov	r0, #1
   4e8b8:	pop	{r4, r5, r6, pc}
   4e8bc:	.word	0x00004164

0004e8c0 <Mat_CalcSubscripts>:
   4e8c0:	push	{r4, r5, r6, r7, r8, lr}
   4e8c4:	vpush	{d8}
   4e8c8:	mov	r6, r0
   4e8cc:	mov	r5, r1
   4e8d0:	vmov	s16, r2
   4e8d4:	lsl	r4, r0, #2
   4e8d8:	mov	r0, r4
   4e8dc:	bl	15ac <malloc@plt>
   4e8e0:	mov	r8, r0
   4e8e4:	cmp	r6, #0
   4e8e8:	beq	4e96c <Mat_CalcSubscripts+0xac>
   4e8ec:	vcvt.f64.s32	d8, s16
   4e8f0:	add	r7, r0, r4
   4e8f4:	sub	r4, r4, #4
   4e8f8:	add	r6, r5, r4
   4e8fc:	cmp	r6, r5
   4e900:	beq	4e954 <Mat_CalcSubscripts+0x94>
   4e904:	mov	r3, r6
   4e908:	mov	r4, #1
   4e90c:	ldr	r2, [r3, #-4]!
   4e910:	mul	r4, r2, r4
   4e914:	cmp	r5, r3
   4e918:	bne	4e90c <Mat_CalcSubscripts+0x4c>
   4e91c:	vmov	s15, r4
   4e920:	vcvt.f64.s32	d0, s15
   4e924:	vdiv.f64	d0, d8, d0
   4e928:	bl	1594 <floor@plt>
   4e92c:	vcvt.s32.f64	s15, d0
   4e930:	vmov	r3, s15
   4e934:	mul	r4, r3, r4
   4e938:	vmov	s15, r4
   4e93c:	vcvt.f64.s32	d7, s15
   4e940:	vsub.f64	d8, d8, d7
   4e944:	add	r3, r3, #1
   4e948:	str	r3, [r7, #-4]!
   4e94c:	sub	r6, r6, #4
   4e950:	b	4e8fc <Mat_CalcSubscripts+0x3c>
   4e954:	vmov.f64	d0, d8
   4e958:	bl	1594 <floor@plt>
   4e95c:	vcvt.s32.f64	s0, d0
   4e960:	vmov	r3, s0
   4e964:	add	r3, r3, #1
   4e968:	str	r3, [r8]
   4e96c:	mov	r0, r8
   4e970:	vpop	{d8}
   4e974:	pop	{r4, r5, r6, r7, r8, pc}

0004e978 <Mat_CalcSubscripts2>:
   4e978:	push	{r4, r5, r6, r7, r8, lr}
   4e97c:	vpush	{d8}
   4e980:	mov	r6, r0
   4e984:	mov	r5, r1
   4e988:	vmov	s16, r2
   4e98c:	lsl	r4, r0, #2
   4e990:	mov	r0, r4
   4e994:	bl	15ac <malloc@plt>
   4e998:	mov	r8, r0
   4e99c:	cmp	r6, #0
   4e9a0:	beq	4ea24 <Mat_CalcSubscripts2+0xac>
   4e9a4:	vcvt.f64.u32	d8, s16
   4e9a8:	add	r7, r0, r4
   4e9ac:	sub	r4, r4, #4
   4e9b0:	add	r6, r5, r4
   4e9b4:	cmp	r6, r5
   4e9b8:	beq	4ea0c <Mat_CalcSubscripts2+0x94>
   4e9bc:	mov	r3, r6
   4e9c0:	mov	r4, #1
   4e9c4:	ldr	r2, [r3, #-4]!
   4e9c8:	mul	r4, r2, r4
   4e9cc:	cmp	r5, r3
   4e9d0:	bne	4e9c4 <Mat_CalcSubscripts2+0x4c>
   4e9d4:	vmov	s15, r4
   4e9d8:	vcvt.f64.u32	d0, s15
   4e9dc:	vdiv.f64	d0, d8, d0
   4e9e0:	bl	1594 <floor@plt>
   4e9e4:	vcvt.u32.f64	s15, d0
   4e9e8:	vmov	r3, s15
   4e9ec:	mul	r4, r3, r4
   4e9f0:	vmov	s15, r4
   4e9f4:	vcvt.f64.u32	d7, s15
   4e9f8:	vsub.f64	d8, d8, d7
   4e9fc:	add	r3, r3, #1
   4ea00:	str	r3, [r7, #-4]!
   4ea04:	sub	r6, r6, #4
   4ea08:	b	4e9b4 <Mat_CalcSubscripts2+0x3c>
   4ea0c:	vmov.f64	d0, d8
   4ea10:	bl	1594 <floor@plt>
   4ea14:	vcvt.u32.f64	s0, d0
   4ea18:	vmov	r3, s0
   4ea1c:	add	r3, r3, #1
   4ea20:	str	r3, [r8]
   4ea24:	mov	r0, r8
   4ea28:	vpop	{d8}
   4ea2c:	pop	{r4, r5, r6, r7, r8, pc}

0004ea30 <Mat_VarGetSize>:
   4ea30:	push	{r4, r5, r6, lr}
   4ea34:	sub	sp, sp, #8
   4ea38:	mov	r6, r0
   4ea3c:	mov	r3, #0
   4ea40:	str	r3, [sp, #4]
   4ea44:	ldr	r0, [r0, #16]
   4ea48:	cmp	r0, #2
   4ea4c:	beq	4ea98 <Mat_VarGetSize+0x68>
   4ea50:	cmp	r0, #1
   4ea54:	beq	4eb4c <Mat_VarGetSize+0x11c>
   4ea58:	cmp	r0, #5
   4ea5c:	beq	4ebcc <Mat_VarGetSize+0x19c>
   4ea60:	ldr	r3, [r6, #4]
   4ea64:	cmp	r3, #0
   4ea68:	ble	4eb40 <Mat_VarGetSize+0x110>
   4ea6c:	bl	16f0 <Mat_SizeOfClass@plt>
   4ea70:	add	r1, sp, #8
   4ea74:	str	r0, [r1, #-4]!
   4ea78:	mov	r0, r6
   4ea7c:	bl	4d06c <SafeMulDims>
   4ea80:	ldr	r3, [r6, #20]
   4ea84:	cmp	r3, #0
   4ea88:	ldrne	r3, [sp, #4]
   4ea8c:	lslne	r3, r3, #1
   4ea90:	strne	r3, [sp, #4]
   4ea94:	b	4eb40 <Mat_VarGetSize+0x110>
   4ea98:	ldr	r5, [r6, #40]	; 0x28
   4ea9c:	cmp	r5, r3
   4eaa0:	beq	4eb2c <Mat_VarGetSize+0xfc>
   4eaa4:	ldr	r3, [r6, #52]	; 0x34
   4eaa8:	ldr	r3, [r3, #4]
   4eaac:	add	r1, sp, #8
   4eab0:	str	r3, [r1, #-8]!
   4eab4:	mov	r0, r6
   4eab8:	bl	4d06c <SafeMulDims>
   4eabc:	mov	r2, #60	; 0x3c
   4eac0:	ldr	r1, [sp]
   4eac4:	add	r0, sp, #4
   4eac8:	bl	4d0c8 <SafeMul>
   4eacc:	ldr	r3, [sp]
   4ead0:	cmp	r3, #0
   4ead4:	beq	4eb2c <Mat_VarGetSize+0xfc>
   4ead8:	sub	r5, r5, #4
   4eadc:	mov	r4, #0
   4eae0:	b	4eb04 <Mat_VarGetSize+0xd4>
   4eae4:	bl	1708 <Mat_VarGetSize@plt>
   4eae8:	ldr	r3, [sp, #4]
   4eaec:	add	r0, r3, r0
   4eaf0:	str	r0, [sp, #4]
   4eaf4:	add	r4, r4, #1
   4eaf8:	ldr	r3, [sp]
   4eafc:	cmp	r3, r4
   4eb00:	bls	4eb2c <Mat_VarGetSize+0xfc>
   4eb04:	ldr	r0, [r5, #4]!
   4eb08:	cmp	r0, #0
   4eb0c:	beq	4eaf4 <Mat_VarGetSize+0xc4>
   4eb10:	ldr	r3, [r0, #16]
   4eb14:	cmp	r3, #0
   4eb18:	bne	4eae4 <Mat_VarGetSize+0xb4>
   4eb1c:	ldr	r3, [sp, #4]
   4eb20:	sub	r3, r3, #56	; 0x38
   4eb24:	str	r3, [sp, #4]
   4eb28:	b	4eaf4 <Mat_VarGetSize+0xc4>
   4eb2c:	ldr	r3, [r6, #52]	; 0x34
   4eb30:	ldr	r2, [r3, #4]
   4eb34:	ldr	r3, [sp, #4]
   4eb38:	add	r3, r3, r2, lsl #6
   4eb3c:	str	r3, [sp, #4]
   4eb40:	ldr	r0, [sp, #4]
   4eb44:	add	sp, sp, #8
   4eb48:	pop	{r4, r5, r6, pc}
   4eb4c:	ldr	r5, [r6, #40]	; 0x28
   4eb50:	cmp	r5, #0
   4eb54:	beq	4eb40 <Mat_VarGetSize+0x110>
   4eb58:	ldr	r1, [r6, #12]
   4eb5c:	ldr	r0, [r6]
   4eb60:	bl	513bc <__udivsi3>
   4eb64:	mov	r6, r0
   4eb68:	rsb	r3, r0, r0, lsl #4
   4eb6c:	lsl	r3, r3, #2
   4eb70:	str	r3, [sp, #4]
   4eb74:	cmp	r0, #0
   4eb78:	beq	4eb40 <Mat_VarGetSize+0x110>
   4eb7c:	sub	r5, r5, #4
   4eb80:	mov	r4, #0
   4eb84:	b	4eba4 <Mat_VarGetSize+0x174>
   4eb88:	bl	1708 <Mat_VarGetSize@plt>
   4eb8c:	ldr	r3, [sp, #4]
   4eb90:	add	r0, r3, r0
   4eb94:	str	r0, [sp, #4]
   4eb98:	add	r4, r4, #1
   4eb9c:	cmp	r6, r4
   4eba0:	beq	4eb40 <Mat_VarGetSize+0x110>
   4eba4:	ldr	r0, [r5, #4]!
   4eba8:	cmp	r0, #0
   4ebac:	beq	4eb98 <Mat_VarGetSize+0x168>
   4ebb0:	ldr	r3, [r0, #16]
   4ebb4:	cmp	r3, #0
   4ebb8:	bne	4eb88 <Mat_VarGetSize+0x158>
   4ebbc:	ldr	r3, [sp, #4]
   4ebc0:	sub	r3, r3, #56	; 0x38
   4ebc4:	str	r3, [sp, #4]
   4ebc8:	b	4eb98 <Mat_VarGetSize+0x168>
   4ebcc:	ldr	r4, [r6, #40]	; 0x28
   4ebd0:	cmp	r4, #0
   4ebd4:	beq	4eb40 <Mat_VarGetSize+0x110>
   4ebd8:	ldr	r5, [r4, #20]
   4ebdc:	ldr	r0, [r6, #8]
   4ebe0:	bl	1600 <Mat_SizeOf@plt>
   4ebe4:	mul	r0, r0, r5
   4ebe8:	str	r0, [sp, #4]
   4ebec:	ldr	r3, [r6, #20]
   4ebf0:	cmp	r3, #0
   4ebf4:	lslne	r0, r0, #1
   4ebf8:	strne	r0, [sp, #4]
   4ebfc:	ldr	r0, [r4, #8]
   4ec00:	ldr	r1, [r4, #16]
   4ec04:	add	r3, r0, r1
   4ec08:	ldr	r2, [sp, #4]
   4ec0c:	add	r2, r2, r3, lsl #2
   4ec10:	str	r2, [sp, #4]
   4ec14:	ldr	r3, [r4, #20]
   4ec18:	cmp	r0, #0
   4ec1c:	cmpne	r3, #0
   4ec20:	moveq	r3, #1
   4ec24:	movne	r3, #0
   4ec28:	cmp	r1, #0
   4ec2c:	orreq	r3, r3, #1
   4ec30:	cmp	r3, #0
   4ec34:	beq	4eb40 <Mat_VarGetSize+0x110>
   4ec38:	ldr	r3, [r6, #28]
   4ec3c:	cmp	r3, #0
   4ec40:	movne	r3, #1
   4ec44:	moveq	r3, #8
   4ec48:	add	r3, r3, r2
   4ec4c:	str	r3, [sp, #4]
   4ec50:	b	4eb40 <Mat_VarGetSize+0x110>

0004ec54 <Mat_VarPrint>:
   4ec54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4ec58:	sub	sp, sp, #204	; 0xcc
   4ec5c:	mov	r4, r0
   4ec60:	mov	r7, r1
   4ec64:	mov	r3, #0
   4ec68:	str	r3, [sp, #196]	; 0xc4
   4ec6c:	mov	r2, #72	; 0x48
   4ec70:	ldr	r1, [pc, #2356]	; 4f5ac <Mat_VarPrint+0x958>
   4ec74:	add	r1, pc, r1
   4ec78:	add	r0, sp, #124	; 0x7c
   4ec7c:	bl	14f8 <memcpy@plt>
   4ec80:	cmp	r4, #0
   4ec84:	beq	4edac <Mat_VarPrint+0x158>
   4ec88:	ldr	r1, [r4, #36]	; 0x24
   4ec8c:	cmp	r1, #0
   4ec90:	beq	4eca0 <Mat_VarPrint+0x4c>
   4ec94:	ldr	r0, [pc, #2324]	; 4f5b0 <Mat_VarPrint+0x95c>
   4ec98:	add	r0, pc, r0
   4ec9c:	bl	14b0 <printf@plt>
   4eca0:	ldr	r1, [r4, #4]
   4eca4:	ldr	r0, [pc, #2312]	; 4f5b4 <Mat_VarPrint+0x960>
   4eca8:	add	r0, pc, r0
   4ecac:	bl	14b0 <printf@plt>
   4ecb0:	ldr	r3, [r4, #4]
   4ecb4:	cmp	r3, #0
   4ecb8:	ble	4edac <Mat_VarPrint+0x158>
   4ecbc:	ldr	r3, [r4, #32]
   4ecc0:	cmp	r3, #0
   4ecc4:	beq	4ed30 <Mat_VarPrint+0xdc>
   4ecc8:	add	r1, sp, #200	; 0xc8
   4eccc:	mov	r3, #1
   4ecd0:	str	r3, [r1, #-4]!
   4ecd4:	mov	r0, r4
   4ecd8:	bl	4d06c <SafeMulDims>
   4ecdc:	ldr	r3, [r4, #32]
   4ece0:	ldr	r1, [r3]
   4ece4:	ldr	r0, [pc, #2252]	; 4f5b8 <Mat_VarPrint+0x964>
   4ece8:	add	r0, pc, r0
   4ecec:	bl	14b0 <printf@plt>
   4ecf0:	ldr	r3, [r4, #4]
   4ecf4:	cmp	r3, #1
   4ecf8:	ble	4ed28 <Mat_VarPrint+0xd4>
   4ecfc:	mov	r5, #1
   4ed00:	ldr	r6, [pc, #2228]	; 4f5bc <Mat_VarPrint+0x968>
   4ed04:	add	r6, pc, r6
   4ed08:	ldr	r3, [r4, #32]
   4ed0c:	ldr	r1, [r3, r5, lsl #2]
   4ed10:	mov	r0, r6
   4ed14:	bl	14b0 <printf@plt>
   4ed18:	add	r5, r5, #1
   4ed1c:	ldr	r3, [r4, #4]
   4ed20:	cmp	r3, r5
   4ed24:	bgt	4ed08 <Mat_VarPrint+0xb4>
   4ed28:	mov	r0, #10
   4ed2c:	bl	1678 <putchar@plt>
   4ed30:	ldr	r3, [r4, #16]
   4ed34:	add	r2, sp, #200	; 0xc8
   4ed38:	add	r3, r2, r3, lsl #2
   4ed3c:	ldr	r1, [r3, #-76]	; 0xffffffb4
   4ed40:	ldr	r0, [pc, #2168]	; 4f5c0 <Mat_VarPrint+0x96c>
   4ed44:	add	r0, pc, r0
   4ed48:	bl	14b0 <printf@plt>
   4ed4c:	ldr	r3, [r4, #20]
   4ed50:	cmp	r3, #0
   4ed54:	bne	4edb4 <Mat_VarPrint+0x160>
   4ed58:	ldr	r3, [r4, #28]
   4ed5c:	cmp	r3, #0
   4ed60:	bne	4edc4 <Mat_VarPrint+0x170>
   4ed64:	mov	r0, #10
   4ed68:	bl	1678 <putchar@plt>
   4ed6c:	ldr	r5, [r4, #8]
   4ed70:	cmp	r5, #0
   4ed74:	bne	4edd4 <Mat_VarPrint+0x180>
   4ed78:	ldr	r3, [r4, #16]
   4ed7c:	cmp	r3, #2
   4ed80:	beq	4ee08 <Mat_VarPrint+0x1b4>
   4ed84:	ldr	r5, [r4, #40]	; 0x28
   4ed88:	cmp	r5, #0
   4ed8c:	beq	4ef20 <Mat_VarPrint+0x2cc>
   4ed90:	ldr	r1, [r4, #12]
   4ed94:	cmp	r1, #0
   4ed98:	ble	4ef20 <Mat_VarPrint+0x2cc>
   4ed9c:	cmp	r3, #1
   4eda0:	beq	4ef38 <Mat_VarPrint+0x2e4>
   4eda4:	cmp	r7, #0
   4eda8:	bne	4ef90 <Mat_VarPrint+0x33c>
   4edac:	add	sp, sp, #204	; 0xcc
   4edb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4edb4:	ldr	r0, [pc, #2056]	; 4f5c4 <Mat_VarPrint+0x970>
   4edb8:	add	r0, pc, r0
   4edbc:	bl	14b0 <printf@plt>
   4edc0:	b	4ed64 <Mat_VarPrint+0x110>
   4edc4:	ldr	r0, [pc, #2044]	; 4f5c8 <Mat_VarPrint+0x974>
   4edc8:	add	r0, pc, r0
   4edcc:	bl	14b0 <printf@plt>
   4edd0:	b	4ed64 <Mat_VarPrint+0x110>
   4edd4:	mov	r2, #100	; 0x64
   4edd8:	ldr	r1, [pc, #2028]	; 4f5cc <Mat_VarPrint+0x978>
   4eddc:	add	r1, pc, r1
   4ede0:	add	r1, r1, #72	; 0x48
   4ede4:	add	r0, sp, #24
   4ede8:	bl	14f8 <memcpy@plt>
   4edec:	add	r3, sp, #200	; 0xc8
   4edf0:	add	r5, r3, r5, lsl #2
   4edf4:	ldr	r1, [r5, #-176]	; 0xffffff50
   4edf8:	ldr	r0, [pc, #2000]	; 4f5d0 <Mat_VarPrint+0x97c>
   4edfc:	add	r0, pc, r0
   4ee00:	bl	14b0 <printf@plt>
   4ee04:	b	4ed78 <Mat_VarPrint+0x124>
   4ee08:	ldr	r6, [r4, #40]	; 0x28
   4ee0c:	ldr	r3, [r4, #52]	; 0x34
   4ee10:	ldr	r8, [r3, #4]
   4ee14:	mov	r3, #1
   4ee18:	str	r3, [sp, #24]
   4ee1c:	mov	r2, r8
   4ee20:	ldr	r1, [sp, #196]	; 0xc4
   4ee24:	add	r0, sp, #24
   4ee28:	bl	4d0c8 <SafeMul>
   4ee2c:	ldr	r5, [sp, #24]
   4ee30:	cmp	r5, #0
   4ee34:	beq	4eec8 <Mat_VarPrint+0x274>
   4ee38:	mov	r1, r5
   4ee3c:	ldr	r0, [pc, #1936]	; 4f5d4 <Mat_VarPrint+0x980>
   4ee40:	add	r0, pc, r0
   4ee44:	bl	14b0 <printf@plt>
   4ee48:	ldr	r3, [sp, #24]
   4ee4c:	cmp	r3, #0
   4ee50:	beq	4eeb8 <Mat_VarPrint+0x264>
   4ee54:	sub	r6, r6, #4
   4ee58:	mov	r5, #0
   4ee5c:	ldr	sl, [pc, #1908]	; 4f5d8 <Mat_VarPrint+0x984>
   4ee60:	add	sl, pc, sl
   4ee64:	mov	r9, r5
   4ee68:	b	4eea0 <Mat_VarPrint+0x24c>
   4ee6c:	ldr	fp, [r4, #52]	; 0x34
   4ee70:	mov	r1, r8
   4ee74:	mov	r0, r5
   4ee78:	bl	515a8 <__aeabi_uidivmod>
   4ee7c:	ldr	r3, [fp, #8]
   4ee80:	mov	r2, r9
   4ee84:	ldr	r1, [r3, r1, lsl #2]
   4ee88:	mov	r0, sl
   4ee8c:	bl	14b0 <printf@plt>
   4ee90:	add	r5, r5, #1
   4ee94:	ldr	r3, [sp, #24]
   4ee98:	cmp	r3, r5
   4ee9c:	bls	4eeb8 <Mat_VarPrint+0x264>
   4eea0:	ldr	r0, [r6, #4]!
   4eea4:	cmp	r0, #0
   4eea8:	beq	4ee6c <Mat_VarPrint+0x218>
   4eeac:	mov	r1, r7
   4eeb0:	bl	1648 <Mat_VarPrint@plt>
   4eeb4:	b	4ee90 <Mat_VarPrint+0x23c>
   4eeb8:	ldr	r0, [pc, #1820]	; 4f5dc <Mat_VarPrint+0x988>
   4eebc:	add	r0, pc, r0
   4eec0:	bl	15a0 <puts@plt>
   4eec4:	b	4edac <Mat_VarPrint+0x158>
   4eec8:	mov	r1, r8
   4eecc:	ldr	r0, [pc, #1804]	; 4f5e0 <Mat_VarPrint+0x98c>
   4eed0:	add	r0, pc, r0
   4eed4:	bl	14b0 <printf@plt>
   4eed8:	cmp	r8, #0
   4eedc:	beq	4ef10 <Mat_VarPrint+0x2bc>
   4eee0:	ldr	r7, [pc, #1788]	; 4f5e4 <Mat_VarPrint+0x990>
   4eee4:	add	r7, pc, r7
   4eee8:	mov	r6, #0
   4eeec:	ldr	r3, [r4, #52]	; 0x34
   4eef0:	ldr	r3, [r3, #8]
   4eef4:	mov	r2, r6
   4eef8:	ldr	r1, [r3, r5, lsl #2]
   4eefc:	mov	r0, r7
   4ef00:	bl	14b0 <printf@plt>
   4ef04:	add	r5, r5, #1
   4ef08:	cmp	r8, r5
   4ef0c:	bne	4eeec <Mat_VarPrint+0x298>
   4ef10:	ldr	r0, [pc, #1744]	; 4f5e8 <Mat_VarPrint+0x994>
   4ef14:	add	r0, pc, r0
   4ef18:	bl	15a0 <puts@plt>
   4ef1c:	b	4edac <Mat_VarPrint+0x158>
   4ef20:	cmp	r7, #0
   4ef24:	beq	4edac <Mat_VarPrint+0x158>
   4ef28:	ldr	r0, [pc, #1724]	; 4f5ec <Mat_VarPrint+0x998>
   4ef2c:	add	r0, pc, r0
   4ef30:	bl	15a0 <puts@plt>
   4ef34:	b	4edac <Mat_VarPrint+0x158>
   4ef38:	ldr	r0, [r4]
   4ef3c:	bl	513bc <__udivsi3>
   4ef40:	str	r0, [sp, #196]	; 0xc4
   4ef44:	ldr	r0, [pc, #1700]	; 4f5f0 <Mat_VarPrint+0x99c>
   4ef48:	add	r0, pc, r0
   4ef4c:	bl	15a0 <puts@plt>
   4ef50:	ldr	r3, [sp, #196]	; 0xc4
   4ef54:	cmp	r3, #0
   4ef58:	beq	4ef80 <Mat_VarPrint+0x32c>
   4ef5c:	sub	r5, r5, #4
   4ef60:	mov	r4, #0
   4ef64:	mov	r1, r7
   4ef68:	ldr	r0, [r5, #4]!
   4ef6c:	bl	1648 <Mat_VarPrint@plt>
   4ef70:	add	r4, r4, #1
   4ef74:	ldr	r3, [sp, #196]	; 0xc4
   4ef78:	cmp	r3, r4
   4ef7c:	bhi	4ef64 <Mat_VarPrint+0x310>
   4ef80:	ldr	r0, [pc, #1644]	; 4f5f4 <Mat_VarPrint+0x9a0>
   4ef84:	add	r0, pc, r0
   4ef88:	bl	15a0 <puts@plt>
   4ef8c:	b	4edac <Mat_VarPrint+0x158>
   4ef90:	ldr	r0, [pc, #1632]	; 4f5f8 <Mat_VarPrint+0x9a4>
   4ef94:	add	r0, pc, r0
   4ef98:	bl	15a0 <puts@plt>
   4ef9c:	ldr	r3, [r4, #4]
   4efa0:	cmp	r3, #2
   4efa4:	bgt	4efc8 <Mat_VarPrint+0x374>
   4efa8:	cmp	r3, #1
   4efac:	beq	4efd8 <Mat_VarPrint+0x384>
   4efb0:	cmp	r3, #2
   4efb4:	beq	4f000 <Mat_VarPrint+0x3ac>
   4efb8:	ldr	r0, [pc, #1596]	; 4f5fc <Mat_VarPrint+0x9a8>
   4efbc:	add	r0, pc, r0
   4efc0:	bl	15a0 <puts@plt>
   4efc4:	b	4edac <Mat_VarPrint+0x158>
   4efc8:	ldr	r0, [pc, #1584]	; 4f600 <Mat_VarPrint+0x9ac>
   4efcc:	add	r0, pc, r0
   4efd0:	bl	15a0 <puts@plt>
   4efd4:	b	4efb8 <Mat_VarPrint+0x364>
   4efd8:	ldr	r3, [r4, #32]
   4efdc:	cmp	r3, #0
   4efe0:	beq	4efb8 <Mat_VarPrint+0x364>
   4efe4:	ldr	r3, [r3]
   4efe8:	cmp	r3, #15
   4efec:	bls	4efb8 <Mat_VarPrint+0x364>
   4eff0:	ldr	r0, [pc, #1548]	; 4f604 <Mat_VarPrint+0x9b0>
   4eff4:	add	r0, pc, r0
   4eff8:	bl	15a0 <puts@plt>
   4effc:	b	4efb8 <Mat_VarPrint+0x364>
   4f000:	ldr	r2, [r4, #32]
   4f004:	cmp	r2, #0
   4f008:	beq	4efb8 <Mat_VarPrint+0x364>
   4f00c:	ldr	r3, [r4, #16]
   4f010:	sub	r3, r3, #4
   4f014:	cmp	r3, #11
   4f018:	addls	pc, pc, r3, lsl #2
   4f01c:	b	4efb8 <Mat_VarPrint+0x364>
   4f020:	b	4f260 <Mat_VarPrint+0x60c>
   4f024:	b	4f3cc <Mat_VarPrint+0x778>
   4f028:	b	4f050 <Mat_VarPrint+0x3fc>
   4f02c:	b	4f050 <Mat_VarPrint+0x3fc>
   4f030:	b	4f050 <Mat_VarPrint+0x3fc>
   4f034:	b	4f050 <Mat_VarPrint+0x3fc>
   4f038:	b	4f050 <Mat_VarPrint+0x3fc>
   4f03c:	b	4f050 <Mat_VarPrint+0x3fc>
   4f040:	b	4f050 <Mat_VarPrint+0x3fc>
   4f044:	b	4f050 <Mat_VarPrint+0x3fc>
   4f048:	b	4f050 <Mat_VarPrint+0x3fc>
   4f04c:	b	4f050 <Mat_VarPrint+0x3fc>
   4f050:	ldr	r0, [r4, #8]
   4f054:	bl	1600 <Mat_SizeOf@plt>
   4f058:	mov	r7, r0
   4f05c:	ldr	r3, [r4, #20]
   4f060:	cmp	r3, #0
   4f064:	beq	4f17c <Mat_VarPrint+0x528>
   4f068:	ldr	r3, [r4, #40]	; 0x28
   4f06c:	ldr	sl, [r3]
   4f070:	ldr	fp, [r3, #4]
   4f074:	ldr	r3, [r4, #32]
   4f078:	ldr	r3, [r3]
   4f07c:	cmp	r3, #0
   4f080:	beq	4efb8 <Mat_VarPrint+0x364>
   4f084:	mov	r8, #0
   4f088:	ldr	r9, [pc, #1400]	; 4f608 <Mat_VarPrint+0x9b4>
   4f08c:	add	r9, pc, r9
   4f090:	ldr	r3, [pc, #1396]	; 4f60c <Mat_VarPrint+0x9b8>
   4f094:	add	r3, pc, r3
   4f098:	str	r3, [sp]
   4f09c:	ldr	r3, [pc, #1388]	; 4f610 <Mat_VarPrint+0x9bc>
   4f0a0:	add	r3, pc, r3
   4f0a4:	str	r3, [sp, #4]
   4f0a8:	b	4f0e4 <Mat_VarPrint+0x490>
   4f0ac:	cmp	r2, r6
   4f0b0:	bhi	4f158 <Mat_VarPrint+0x504>
   4f0b4:	mov	r0, #10
   4f0b8:	bl	1678 <putchar@plt>
   4f0bc:	add	r8, r8, #1
   4f0c0:	ldr	r3, [r4, #32]
   4f0c4:	ldr	r3, [r3]
   4f0c8:	cmp	r3, r8
   4f0cc:	movls	r2, #0
   4f0d0:	movhi	r2, #1
   4f0d4:	cmp	r8, #14
   4f0d8:	movhi	r2, #0
   4f0dc:	cmp	r2, #0
   4f0e0:	beq	4f164 <Mat_VarPrint+0x510>
   4f0e4:	ldr	r3, [r4, #32]
   4f0e8:	ldr	r2, [r3, #4]
   4f0ec:	cmp	r2, #0
   4f0f0:	movne	r6, #0
   4f0f4:	beq	4f0b4 <Mat_VarPrint+0x460>
   4f0f8:	ldr	r5, [r3]
   4f0fc:	mla	r5, r5, r6, r8
   4f100:	mul	r5, r7, r5
   4f104:	add	r1, sl, r5
   4f108:	ldr	r0, [r4, #8]
   4f10c:	bl	4cdb0 <Mat_PrintNumber>
   4f110:	mov	r0, r9
   4f114:	bl	14b0 <printf@plt>
   4f118:	add	r1, fp, r5
   4f11c:	ldr	r0, [r4, #8]
   4f120:	bl	4cdb0 <Mat_PrintNumber>
   4f124:	ldr	r0, [sp]
   4f128:	bl	14b0 <printf@plt>
   4f12c:	add	r6, r6, #1
   4f130:	ldr	r3, [r4, #32]
   4f134:	ldr	r2, [r3, #4]
   4f138:	cmp	r2, r6
   4f13c:	movls	r1, #0
   4f140:	movhi	r1, #1
   4f144:	cmp	r6, #14
   4f148:	movhi	r1, #0
   4f14c:	cmp	r1, #0
   4f150:	bne	4f0f8 <Mat_VarPrint+0x4a4>
   4f154:	b	4f0ac <Mat_VarPrint+0x458>
   4f158:	ldr	r0, [sp, #4]
   4f15c:	bl	14b0 <printf@plt>
   4f160:	b	4f0b4 <Mat_VarPrint+0x460>
   4f164:	cmp	r3, r8
   4f168:	bls	4efb8 <Mat_VarPrint+0x364>
   4f16c:	ldr	r0, [pc, #1184]	; 4f614 <Mat_VarPrint+0x9c0>
   4f170:	add	r0, pc, r0
   4f174:	bl	15a0 <puts@plt>
   4f178:	b	4efb8 <Mat_VarPrint+0x364>
   4f17c:	ldr	r9, [r4, #40]	; 0x28
   4f180:	ldr	r3, [r4, #32]
   4f184:	ldr	r3, [r3]
   4f188:	cmp	r3, #0
   4f18c:	beq	4efb8 <Mat_VarPrint+0x364>
   4f190:	mov	r6, #0
   4f194:	mov	r8, #32
   4f198:	ldr	fp, [pc, #1144]	; 4f618 <Mat_VarPrint+0x9c4>
   4f19c:	add	fp, pc, fp
   4f1a0:	mov	sl, #10
   4f1a4:	b	4f1e0 <Mat_VarPrint+0x58c>
   4f1a8:	cmp	r2, r5
   4f1ac:	bhi	4f23c <Mat_VarPrint+0x5e8>
   4f1b0:	mov	r0, sl
   4f1b4:	bl	1678 <putchar@plt>
   4f1b8:	add	r6, r6, #1
   4f1bc:	ldr	r3, [r4, #32]
   4f1c0:	ldr	r3, [r3]
   4f1c4:	cmp	r6, #14
   4f1c8:	movhi	r2, #0
   4f1cc:	movls	r2, #1
   4f1d0:	cmp	r3, r6
   4f1d4:	movls	r2, #0
   4f1d8:	cmp	r2, #0
   4f1dc:	beq	4f248 <Mat_VarPrint+0x5f4>
   4f1e0:	ldr	r3, [r4, #32]
   4f1e4:	ldr	r2, [r3, #4]
   4f1e8:	cmp	r2, #0
   4f1ec:	movne	r5, #0
   4f1f0:	beq	4f1b0 <Mat_VarPrint+0x55c>
   4f1f4:	ldr	r1, [r3]
   4f1f8:	mla	r1, r1, r5, r6
   4f1fc:	mla	r1, r7, r1, r9
   4f200:	ldr	r0, [r4, #8]
   4f204:	bl	4cdb0 <Mat_PrintNumber>
   4f208:	mov	r0, r8
   4f20c:	bl	1678 <putchar@plt>
   4f210:	add	r5, r5, #1
   4f214:	ldr	r3, [r4, #32]
   4f218:	ldr	r2, [r3, #4]
   4f21c:	cmp	r5, #14
   4f220:	movhi	r1, #0
   4f224:	movls	r1, #1
   4f228:	cmp	r2, r5
   4f22c:	movls	r1, #0
   4f230:	cmp	r1, #0
   4f234:	bne	4f1f4 <Mat_VarPrint+0x5a0>
   4f238:	b	4f1a8 <Mat_VarPrint+0x554>
   4f23c:	mov	r0, fp
   4f240:	bl	14b0 <printf@plt>
   4f244:	b	4f1b0 <Mat_VarPrint+0x55c>
   4f248:	cmp	r3, r6
   4f24c:	bls	4efb8 <Mat_VarPrint+0x364>
   4f250:	ldr	r0, [pc, #964]	; 4f61c <Mat_VarPrint+0x9c8>
   4f254:	add	r0, pc, r0
   4f258:	bl	15a0 <puts@plt>
   4f25c:	b	4efb8 <Mat_VarPrint+0x364>
   4f260:	ldr	r3, [r4, #8]
   4f264:	cmp	r3, #4
   4f268:	beq	4f290 <Mat_VarPrint+0x63c>
   4f26c:	cmp	r3, #17
   4f270:	beq	4f290 <Mat_VarPrint+0x63c>
   4f274:	ldr	r9, [r4, #40]	; 0x28
   4f278:	ldr	r3, [r2]
   4f27c:	cmp	r3, #0
   4f280:	movne	r7, #0
   4f284:	movne	r8, #10
   4f288:	bne	4f3b0 <Mat_VarPrint+0x75c>
   4f28c:	b	4efb8 <Mat_VarPrint+0x364>
   4f290:	ldr	r7, [r4, #40]	; 0x28
   4f294:	ldr	r3, [r2]
   4f298:	cmp	r3, #0
   4f29c:	beq	4efb8 <Mat_VarPrint+0x364>
   4f2a0:	mov	r6, #0
   4f2a4:	ldr	r8, [pc, #884]	; 4f620 <Mat_VarPrint+0x9cc>
   4f2a8:	ldr	sl, [pc, #884]	; 4f624 <Mat_VarPrint+0x9d0>
   4f2ac:	add	sl, pc, sl
   4f2b0:	ldr	r9, [pc, #880]	; 4f628 <Mat_VarPrint+0x9d4>
   4f2b4:	add	r9, pc, r9
   4f2b8:	mov	fp, #10
   4f2bc:	b	4f358 <Mat_VarPrint+0x704>
   4f2c0:	bl	1678 <putchar@plt>
   4f2c4:	b	4f2ec <Mat_VarPrint+0x698>
   4f2c8:	and	r3, r0, #63	; 0x3f
   4f2cc:	lsr	r2, r0, #6
   4f2d0:	and	r2, r2, #63	; 0x3f
   4f2d4:	lsr	r1, r0, #12
   4f2d8:	orr	r3, r3, #128	; 0x80
   4f2dc:	orr	r2, r2, #128	; 0x80
   4f2e0:	orr	r1, r1, #224	; 0xe0
   4f2e4:	mov	r0, sl
   4f2e8:	bl	14b0 <printf@plt>
   4f2ec:	add	r5, r5, #1
   4f2f0:	ldr	r3, [r4, #32]
   4f2f4:	ldr	r2, [r3, #4]
   4f2f8:	cmp	r2, r5
   4f2fc:	bls	4f33c <Mat_VarPrint+0x6e8>
   4f300:	ldr	r3, [r3]
   4f304:	mla	r3, r3, r5, r6
   4f308:	lsl	r3, r3, #1
   4f30c:	ldrh	r0, [r7, r3]
   4f310:	cmp	r0, #127	; 0x7f
   4f314:	bls	4f2c0 <Mat_VarPrint+0x66c>
   4f318:	cmp	r0, r8
   4f31c:	bhi	4f2c8 <Mat_VarPrint+0x674>
   4f320:	and	r2, r0, #63	; 0x3f
   4f324:	lsr	r1, r0, #6
   4f328:	orr	r2, r2, #128	; 0x80
   4f32c:	orr	r1, r1, #192	; 0xc0
   4f330:	mov	r0, r9
   4f334:	bl	14b0 <printf@plt>
   4f338:	b	4f2ec <Mat_VarPrint+0x698>
   4f33c:	mov	r0, fp
   4f340:	bl	1678 <putchar@plt>
   4f344:	add	r6, r6, #1
   4f348:	ldr	r3, [r4, #32]
   4f34c:	ldr	r3, [r3]
   4f350:	cmp	r3, r6
   4f354:	bls	4efb8 <Mat_VarPrint+0x364>
   4f358:	ldr	r3, [r4, #32]
   4f35c:	ldr	r2, [r3, #4]
   4f360:	cmp	r2, #0
   4f364:	movne	r5, #0
   4f368:	bne	4f300 <Mat_VarPrint+0x6ac>
   4f36c:	b	4f33c <Mat_VarPrint+0x6e8>
   4f370:	ldr	r3, [r3]
   4f374:	mul	r3, r3, r5
   4f378:	ldrb	r0, [r6, r3]
   4f37c:	bl	1678 <putchar@plt>
   4f380:	add	r5, r5, #1
   4f384:	ldr	r3, [r4, #32]
   4f388:	ldr	r2, [r3, #4]
   4f38c:	cmp	r2, r5
   4f390:	bhi	4f370 <Mat_VarPrint+0x71c>
   4f394:	mov	r0, r8
   4f398:	bl	1678 <putchar@plt>
   4f39c:	add	r7, r7, #1
   4f3a0:	ldr	r3, [r4, #32]
   4f3a4:	ldr	r3, [r3]
   4f3a8:	cmp	r3, r7
   4f3ac:	bls	4efb8 <Mat_VarPrint+0x364>
   4f3b0:	ldr	r3, [r4, #32]
   4f3b4:	ldr	r2, [r3, #4]
   4f3b8:	cmp	r2, #0
   4f3bc:	movne	r5, #0
   4f3c0:	addne	r6, r9, r7
   4f3c4:	bne	4f370 <Mat_VarPrint+0x71c>
   4f3c8:	b	4f394 <Mat_VarPrint+0x740>
   4f3cc:	ldr	r0, [r4, #8]
   4f3d0:	bl	1600 <Mat_SizeOf@plt>
   4f3d4:	mov	fp, r0
   4f3d8:	ldr	r5, [r4, #40]	; 0x28
   4f3dc:	ldr	r3, [r4, #20]
   4f3e0:	cmp	r3, #0
   4f3e4:	beq	4f4f4 <Mat_VarPrint+0x8a0>
   4f3e8:	ldr	r3, [r5, #24]
   4f3ec:	ldr	r2, [r3]
   4f3f0:	str	r2, [sp, #16]
   4f3f4:	ldr	r3, [r3, #4]
   4f3f8:	str	r3, [sp, #20]
   4f3fc:	mov	sl, #0
   4f400:	ldr	r3, [pc, #548]	; 4f62c <Mat_VarPrint+0x9d8>
   4f404:	add	r3, pc, r3
   4f408:	str	r3, [sp, #4]
   4f40c:	ldr	r3, [pc, #540]	; 4f630 <Mat_VarPrint+0x9dc>
   4f410:	add	r3, pc, r3
   4f414:	str	r3, [sp, #8]
   4f418:	ldr	r3, [pc, #532]	; 4f634 <Mat_VarPrint+0x9e0>
   4f41c:	add	r3, pc, r3
   4f420:	str	r3, [sp, #12]
   4f424:	b	4f42c <Mat_VarPrint+0x7d8>
   4f428:	ldr	sl, [sp]
   4f42c:	ldr	r3, [r5, #16]
   4f430:	sub	r3, r3, #1
   4f434:	cmp	sl, r3
   4f438:	bcs	4efb8 <Mat_VarPrint+0x364>
   4f43c:	ldr	r3, [r5, #12]
   4f440:	lsl	r2, sl, #2
   4f444:	ldr	r6, [r3, sl, lsl #2]
   4f448:	add	r1, sl, #1
   4f44c:	str	r1, [sp]
   4f450:	add	sl, r2, #4
   4f454:	ldr	r3, [r3, sl]
   4f458:	cmp	r6, r3
   4f45c:	bcs	4f428 <Mat_VarPrint+0x7d4>
   4f460:	ldr	r3, [r5, #20]
   4f464:	cmp	r6, r3
   4f468:	bcs	4f428 <Mat_VarPrint+0x7d4>
   4f46c:	lsl	r9, r6, #2
   4f470:	mul	r7, r6, fp
   4f474:	ldr	r3, [sp, #16]
   4f478:	add	r8, r3, r7
   4f47c:	ldr	r3, [sp, #20]
   4f480:	add	r7, r3, r7
   4f484:	ldr	r3, [r5, #4]
   4f488:	ldr	r1, [r3, r9]
   4f48c:	ldr	r2, [sp]
   4f490:	add	r1, r1, #1
   4f494:	ldr	r0, [sp, #4]
   4f498:	bl	14b0 <printf@plt>
   4f49c:	mov	r1, r8
   4f4a0:	ldr	r0, [r4, #8]
   4f4a4:	bl	4cdb0 <Mat_PrintNumber>
   4f4a8:	ldr	r0, [sp, #8]
   4f4ac:	bl	14b0 <printf@plt>
   4f4b0:	mov	r1, r7
   4f4b4:	ldr	r0, [r4, #8]
   4f4b8:	bl	4cdb0 <Mat_PrintNumber>
   4f4bc:	ldr	r0, [sp, #12]
   4f4c0:	bl	15a0 <puts@plt>
   4f4c4:	add	r6, r6, #1
   4f4c8:	ldr	r3, [r5, #12]
   4f4cc:	ldr	r3, [r3, sl]
   4f4d0:	cmp	r3, r6
   4f4d4:	bls	4f428 <Mat_VarPrint+0x7d4>
   4f4d8:	add	r9, r9, #4
   4f4dc:	add	r8, r8, fp
   4f4e0:	add	r7, r7, fp
   4f4e4:	ldr	r3, [r5, #20]
   4f4e8:	cmp	r3, r6
   4f4ec:	bhi	4f484 <Mat_VarPrint+0x830>
   4f4f0:	b	4f428 <Mat_VarPrint+0x7d4>
   4f4f4:	ldr	r3, [r5, #24]
   4f4f8:	str	r3, [sp, #4]
   4f4fc:	mov	r9, #0
   4f500:	ldr	r3, [pc, #304]	; 4f638 <Mat_VarPrint+0x9e4>
   4f504:	add	r3, pc, r3
   4f508:	str	r3, [sp]
   4f50c:	ldr	r3, [r5, #16]
   4f510:	sub	r3, r3, #1
   4f514:	cmp	r9, r3
   4f518:	bcs	4efb8 <Mat_VarPrint+0x364>
   4f51c:	ldr	r3, [r5, #12]
   4f520:	lsl	sl, r9, #2
   4f524:	ldr	r6, [r3, r9, lsl #2]
   4f528:	add	r9, r9, #1
   4f52c:	add	sl, sl, #4
   4f530:	ldr	r3, [r3, sl]
   4f534:	cmp	r6, r3
   4f538:	bcs	4f50c <Mat_VarPrint+0x8b8>
   4f53c:	ldr	r3, [r5, #20]
   4f540:	cmp	r6, r3
   4f544:	bcs	4f50c <Mat_VarPrint+0x8b8>
   4f548:	lsl	r8, r6, #2
   4f54c:	ldr	r3, [sp, #4]
   4f550:	mla	r7, r6, fp, r3
   4f554:	ldr	r3, [r5, #4]
   4f558:	ldr	r1, [r3, r8]
   4f55c:	mov	r2, r9
   4f560:	add	r1, r1, #1
   4f564:	ldr	r0, [sp]
   4f568:	bl	14b0 <printf@plt>
   4f56c:	mov	r1, r7
   4f570:	ldr	r0, [r4, #8]
   4f574:	bl	4cdb0 <Mat_PrintNumber>
   4f578:	mov	r0, #10
   4f57c:	bl	1678 <putchar@plt>
   4f580:	add	r6, r6, #1
   4f584:	ldr	r3, [r5, #12]
   4f588:	ldr	r3, [r3, sl]
   4f58c:	cmp	r3, r6
   4f590:	bls	4f50c <Mat_VarPrint+0x8b8>
   4f594:	add	r8, r8, #4
   4f598:	add	r7, r7, fp
   4f59c:	ldr	r3, [r5, #20]
   4f5a0:	cmp	r3, r6
   4f5a4:	bhi	4f554 <Mat_VarPrint+0x900>
   4f5a8:	b	4f50c <Mat_VarPrint+0x8b8>
   4f5ac:	.word	0x000154a4
   4f5b0:	.word	0x00003d38
   4f5b4:	.word	0x00003d38
   4f5b8:	.word	0x00003d08
   4f5bc:	.word	0x00003cfc
   4f5c0:	.word	0x00003cc4
   4f5c4:	.word	0x00003c60
   4f5c8:	.word	0x00003c5c
   4f5cc:	.word	0x0001533c
   4f5d0:	.word	0x00003c34
   4f5d4:	.word	0x00003c00
   4f5d8:	.word	0x00003bf0
   4f5dc:	.word	0x00003bb4
   4f5e0:	.word	0x00003b70
   4f5e4:	.word	0x00003b6c
   4f5e8:	.word	0x00003b5c
   4f5ec:	.word	0x00003b48
   4f5f0:	.word	0x00003b30
   4f5f4:	.word	0x00003aec
   4f5f8:	.word	0x00003ae4
   4f5fc:	.word	0x00003ab4
   4f600:	.word	0x00003ab0
   4f604:	.word	0x00003ab0
   4f608:	.word	0x00003a48
   4f60c:	.word	0x00003a44
   4f610:	.word	0x00003a3c
   4f614:	.word	0x00003970
   4f618:	.word	0x00003940
   4f61c:	.word	0x0000388c
   4f620:	.word	0x000007ff
   4f624:	.word	0x00003844
   4f628:	.word	0x00003834
   4f62c:	.word	0x000036f4
   4f630:	.word	0x000036c4
   4f634:	.word	0x000036ec
   4f638:	.word	0x000035f4

0004f63c <Mat_VarReadData>:
   4f63c:	ldr	ip, [r1, #16]
   4f640:	sub	ip, ip, #6
   4f644:	cmp	ip, #9
   4f648:	bhi	4f6b0 <Mat_VarReadData+0x74>
   4f64c:	push	{lr}		; (str lr, [sp, #-4]!)
   4f650:	sub	sp, sp, #12
   4f654:	ldr	ip, [r0, #16]
   4f658:	cmp	ip, #256	; 0x100
   4f65c:	beq	4f680 <Mat_VarReadData+0x44>
   4f660:	cmp	ip, #512	; 0x200
   4f664:	moveq	r0, #1
   4f668:	beq	4f678 <Mat_VarReadData+0x3c>
   4f66c:	cmp	ip, #16
   4f670:	movne	r0, #2
   4f674:	beq	4f698 <Mat_VarReadData+0x5c>
   4f678:	add	sp, sp, #12
   4f67c:	pop	{pc}		; (ldr pc, [sp], #4)
   4f680:	ldr	ip, [sp, #20]
   4f684:	str	ip, [sp, #4]
   4f688:	ldr	ip, [sp, #16]
   4f68c:	str	ip, [sp]
   4f690:	bl	49470 <Mat_VarReadData5>
   4f694:	b	4f678 <Mat_VarReadData+0x3c>
   4f698:	ldr	ip, [sp, #20]
   4f69c:	str	ip, [sp, #4]
   4f6a0:	ldr	ip, [sp, #16]
   4f6a4:	str	ip, [sp]
   4f6a8:	bl	4c490 <Mat_VarReadData4>
   4f6ac:	b	4f678 <Mat_VarReadData+0x3c>
   4f6b0:	mvn	r0, #0
   4f6b4:	bx	lr

0004f6b8 <Mat_VarReadDataAll>:
   4f6b8:	cmp	r1, #0
   4f6bc:	cmpne	r0, #0
   4f6c0:	bne	4f6cc <Mat_VarReadDataAll+0x14>
   4f6c4:	mov	r0, #1
   4f6c8:	bx	lr
   4f6cc:	push	{r4, lr}
   4f6d0:	bl	4cef0 <ReadData>
   4f6d4:	mov	r0, #0
   4f6d8:	pop	{r4, pc}

0004f6dc <Mat_VarReadDataLinear>:
   4f6dc:	ldr	ip, [r1, #16]
   4f6e0:	sub	ip, ip, #6
   4f6e4:	cmp	ip, #9
   4f6e8:	bhi	4f750 <Mat_VarReadDataLinear+0x74>
   4f6ec:	push	{lr}		; (str lr, [sp, #-4]!)
   4f6f0:	sub	sp, sp, #12
   4f6f4:	ldr	ip, [r0, #16]
   4f6f8:	cmp	ip, #256	; 0x100
   4f6fc:	beq	4f720 <Mat_VarReadDataLinear+0x44>
   4f700:	cmp	ip, #512	; 0x200
   4f704:	moveq	r0, #1
   4f708:	beq	4f718 <Mat_VarReadDataLinear+0x3c>
   4f70c:	cmp	ip, #16
   4f710:	movne	r0, #2
   4f714:	beq	4f738 <Mat_VarReadDataLinear+0x5c>
   4f718:	add	sp, sp, #12
   4f71c:	pop	{pc}		; (ldr pc, [sp], #4)
   4f720:	ldr	ip, [sp, #20]
   4f724:	str	ip, [sp, #4]
   4f728:	ldr	ip, [sp, #16]
   4f72c:	str	ip, [sp]
   4f730:	bl	49cb8 <Mat_VarReadDataLinear5>
   4f734:	b	4f718 <Mat_VarReadDataLinear+0x3c>
   4f738:	ldr	ip, [sp, #20]
   4f73c:	str	ip, [sp, #4]
   4f740:	ldr	ip, [sp, #16]
   4f744:	str	ip, [sp]
   4f748:	bl	4c6f4 <Mat_VarReadDataLinear4>
   4f74c:	b	4f718 <Mat_VarReadDataLinear+0x3c>
   4f750:	mvn	r0, #0
   4f754:	bx	lr

0004f758 <Mat_VarReadNextInfo>:
   4f758:	cmp	r0, #0
   4f75c:	beq	4f788 <Mat_VarReadNextInfo+0x30>
   4f760:	push	{r4, lr}
   4f764:	ldr	r3, [r0, #16]
   4f768:	cmp	r3, #16
   4f76c:	beq	4f780 <Mat_VarReadNextInfo+0x28>
   4f770:	cmp	r3, #256	; 0x100
   4f774:	bne	4f790 <Mat_VarReadNextInfo+0x38>
   4f778:	bl	4abd8 <Mat_VarReadNextInfo5>
   4f77c:	pop	{r4, pc}
   4f780:	bl	4c804 <Mat_VarReadNextInfo4>
   4f784:	pop	{r4, pc}
   4f788:	mov	r0, #0
   4f78c:	bx	lr
   4f790:	mov	r0, #0
   4f794:	pop	{r4, pc}

0004f798 <Mat_GetDir>:
   4f798:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4f79c:	subs	r5, r1, #0
   4f7a0:	beq	4fa28 <Mat_GetDir+0x290>
   4f7a4:	cmp	r0, #0
   4f7a8:	moveq	r6, #0
   4f7ac:	streq	r6, [r5]
   4f7b0:	beq	4f7dc <Mat_GetDir+0x44>
   4f7b4:	mov	r4, r0
   4f7b8:	ldr	r6, [r0, #40]	; 0x28
   4f7bc:	cmp	r6, #0
   4f7c0:	beq	4f7e4 <Mat_GetDir+0x4c>
   4f7c4:	ldr	r3, [r0, #16]
   4f7c8:	cmp	r3, #512	; 0x200
   4f7cc:	beq	4f9d8 <Mat_GetDir+0x240>
   4f7d0:	ldr	r3, [r0, #36]	; 0x24
   4f7d4:	str	r3, [r5]
   4f7d8:	ldr	r6, [r4, #40]	; 0x28
   4f7dc:	mov	r0, r6
   4f7e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4f7e4:	ldr	r3, [r0, #16]
   4f7e8:	cmp	r3, #512	; 0x200
   4f7ec:	beq	4f82c <Mat_GetDir+0x94>
   4f7f0:	ldr	r0, [r0]
   4f7f4:	bl	151c <ftell@plt>
   4f7f8:	mov	r9, r0
   4f7fc:	cmn	r0, #1
   4f800:	beq	4f8ec <Mat_GetDir+0x154>
   4f804:	mov	r2, #0
   4f808:	ldr	r1, [r4, #28]
   4f80c:	ldr	r0, [r4]
   4f810:	bl	1714 <fseek@plt>
   4f814:	mov	r3, #0
   4f818:	str	r3, [r4, #36]	; 0x24
   4f81c:	ldr	r8, [pc, #524]	; 4fa30 <Mat_GetDir+0x298>
   4f820:	add	r8, pc, r8
   4f824:	mov	sl, #4
   4f828:	b	4f950 <Mat_GetDir+0x1b8>
   4f82c:	ldr	r0, [r0, #36]	; 0x24
   4f830:	cmp	r0, #0
   4f834:	moveq	r3, #0
   4f838:	streq	r3, [r5]
   4f83c:	beq	4f7dc <Mat_GetDir+0x44>
   4f840:	ldr	sl, [r4, #32]
   4f844:	mov	r1, #4
   4f848:	bl	1468 <calloc@plt>
   4f84c:	str	r0, [r4, #40]	; 0x28
   4f850:	cmp	r0, #0
   4f854:	beq	4f86c <Mat_GetDir+0xd4>
   4f858:	mov	r7, #0
   4f85c:	str	r7, [r4, #32]
   4f860:	ldr	fp, [pc, #460]	; 4fa34 <Mat_GetDir+0x29c>
   4f864:	add	fp, pc, fp
   4f868:	b	4f8b4 <Mat_GetDir+0x11c>
   4f86c:	mov	r3, #0
   4f870:	str	r3, [r5]
   4f874:	ldr	r0, [pc, #444]	; 4fa38 <Mat_GetDir+0x2a0>
   4f878:	add	r0, pc, r0
   4f87c:	bl	1690 <Mat_Critical@plt>
   4f880:	b	4f7dc <Mat_GetDir+0x44>
   4f884:	add	r8, r7, #1
   4f888:	ldr	r9, [r4, #40]	; 0x28
   4f88c:	mov	r0, fp
   4f890:	bl	1f2c <strdup_printf>
   4f894:	str	r0, [r9, r7, lsl #2]
   4f898:	mov	r7, r8
   4f89c:	mov	r0, r6
   4f8a0:	bl	15f4 <Mat_VarFree@plt>
   4f8a4:	ldr	r2, [r4, #32]
   4f8a8:	ldr	r3, [r4, #36]	; 0x24
   4f8ac:	cmp	r2, r3
   4f8b0:	bcs	4f8e0 <Mat_GetDir+0x148>
   4f8b4:	mov	r0, r4
   4f8b8:	bl	1738 <Mat_VarReadNextInfo@plt>
   4f8bc:	subs	r6, r0, #0
   4f8c0:	beq	4f8d4 <Mat_GetDir+0x13c>
   4f8c4:	ldr	r1, [r6, #36]	; 0x24
   4f8c8:	cmp	r1, #0
   4f8cc:	bne	4f884 <Mat_GetDir+0xec>
   4f8d0:	b	4f89c <Mat_GetDir+0x104>
   4f8d4:	ldr	r0, [pc, #352]	; 4fa3c <Mat_GetDir+0x2a4>
   4f8d8:	add	r0, pc, r0
   4f8dc:	bl	1690 <Mat_Critical@plt>
   4f8e0:	str	sl, [r4, #32]
   4f8e4:	str	r7, [r5]
   4f8e8:	b	4f7d8 <Mat_GetDir+0x40>
   4f8ec:	mov	r3, #0
   4f8f0:	str	r3, [r5]
   4f8f4:	ldr	r0, [pc, #324]	; 4fa40 <Mat_GetDir+0x2a8>
   4f8f8:	add	r0, pc, r0
   4f8fc:	bl	1690 <Mat_Critical@plt>
   4f900:	b	4f7dc <Mat_GetDir+0x44>
   4f904:	mov	r0, sl
   4f908:	bl	15ac <malloc@plt>
   4f90c:	mov	r7, r0
   4f910:	cmp	r7, #0
   4f914:	beq	4f990 <Mat_GetDir+0x1f8>
   4f918:	str	r7, [r4, #40]	; 0x28
   4f91c:	ldr	fp, [r4, #36]	; 0x24
   4f920:	add	r3, fp, #1
   4f924:	str	r3, [r4, #36]	; 0x24
   4f928:	ldr	r1, [r6, #36]	; 0x24
   4f92c:	mov	r0, r8
   4f930:	bl	1f2c <strdup_printf>
   4f934:	str	r0, [r7, fp, lsl #2]
   4f938:	mov	r0, r6
   4f93c:	bl	15f4 <Mat_VarFree@plt>
   4f940:	ldr	r0, [r4]
   4f944:	bl	15e8 <feof@plt>
   4f948:	cmp	r0, #0
   4f94c:	bne	4f99c <Mat_GetDir+0x204>
   4f950:	mov	r0, r4
   4f954:	bl	1738 <Mat_VarReadNextInfo@plt>
   4f958:	subs	r6, r0, #0
   4f95c:	beq	4f9b8 <Mat_GetDir+0x220>
   4f960:	ldr	r3, [r6, #36]	; 0x24
   4f964:	cmp	r3, #0
   4f968:	beq	4f938 <Mat_GetDir+0x1a0>
   4f96c:	ldr	r0, [r4, #40]	; 0x28
   4f970:	cmp	r0, #0
   4f974:	beq	4f904 <Mat_GetDir+0x16c>
   4f978:	ldr	r1, [r4, #36]	; 0x24
   4f97c:	add	r1, r1, #1
   4f980:	lsl	r1, r1, #2
   4f984:	bl	1540 <realloc@plt>
   4f988:	mov	r7, r0
   4f98c:	b	4f910 <Mat_GetDir+0x178>
   4f990:	ldr	r0, [pc, #172]	; 4fa44 <Mat_GetDir+0x2ac>
   4f994:	add	r0, pc, r0
   4f998:	bl	1690 <Mat_Critical@plt>
   4f99c:	mov	r2, #0
   4f9a0:	mov	r1, r9
   4f9a4:	ldr	r0, [r4]
   4f9a8:	bl	1714 <fseek@plt>
   4f9ac:	ldr	r3, [r4, #36]	; 0x24
   4f9b0:	str	r3, [r5]
   4f9b4:	b	4f7d8 <Mat_GetDir+0x40>
   4f9b8:	ldr	r0, [r4]
   4f9bc:	bl	15e8 <feof@plt>
   4f9c0:	cmp	r0, #0
   4f9c4:	bne	4f940 <Mat_GetDir+0x1a8>
   4f9c8:	ldr	r0, [pc, #120]	; 4fa48 <Mat_GetDir+0x2b0>
   4f9cc:	add	r0, pc, r0
   4f9d0:	bl	1690 <Mat_Critical@plt>
   4f9d4:	b	4f99c <Mat_GetDir+0x204>
   4f9d8:	mov	r3, #0
   4f9dc:	str	r3, [r5]
   4f9e0:	ldr	r3, [r0, #36]	; 0x24
   4f9e4:	cmp	r3, #0
   4f9e8:	beq	4f7d8 <Mat_GetDir+0x40>
   4f9ec:	ldr	r3, [r0, #40]	; 0x28
   4f9f0:	ldr	r3, [r3]
   4f9f4:	cmp	r3, #0
   4f9f8:	beq	4f7d8 <Mat_GetDir+0x40>
   4f9fc:	mov	r3, #1
   4fa00:	str	r3, [r5]
   4fa04:	ldr	r2, [r4, #36]	; 0x24
   4fa08:	cmp	r2, r3
   4fa0c:	bls	4f7d8 <Mat_GetDir+0x40>
   4fa10:	ldr	r2, [r4, #40]	; 0x28
   4fa14:	ldr	r2, [r2, r3, lsl #2]
   4fa18:	add	r3, r3, #1
   4fa1c:	cmp	r2, #0
   4fa20:	bne	4fa00 <Mat_GetDir+0x268>
   4fa24:	b	4f7d8 <Mat_GetDir+0x40>
   4fa28:	mov	r6, #0
   4fa2c:	b	4f7dc <Mat_GetDir+0x44>
   4fa30:	.word	0x000031f4
   4fa34:	.word	0x000031b0
   4fa38:	.word	0x00003294
   4fa3c:	.word	0x00002994
   4fa40:	.word	0x00002950
   4fa44:	.word	0x00003178
   4fa48:	.word	0x000028a0

0004fa4c <Mat_VarReadInfo>:
   4fa4c:	push	{r4, r5, r6, r7, r8, lr}
   4fa50:	cmp	r1, #0
   4fa54:	cmpne	r0, #0
   4fa58:	beq	4fbac <Mat_VarReadInfo+0x160>
   4fa5c:	mov	r4, r0
   4fa60:	mov	r6, r1
   4fa64:	ldr	r3, [r0, #16]
   4fa68:	cmp	r3, #512	; 0x200
   4fa6c:	beq	4fa98 <Mat_VarReadInfo+0x4c>
   4fa70:	ldr	r0, [r0]
   4fa74:	bl	151c <ftell@plt>
   4fa78:	mov	r7, r0
   4fa7c:	cmn	r0, #1
   4fa80:	beq	4fb98 <Mat_VarReadInfo+0x14c>
   4fa84:	mov	r2, #0
   4fa88:	ldr	r1, [r4, #28]
   4fa8c:	ldr	r0, [r4]
   4fa90:	bl	1714 <fseek@plt>
   4fa94:	b	4fb34 <Mat_VarReadInfo+0xe8>
   4fa98:	ldr	r7, [r0, #32]
   4fa9c:	mov	r3, #0
   4faa0:	str	r3, [r0, #32]
   4faa4:	ldr	r3, [r0, #36]	; 0x24
   4faa8:	cmp	r3, #0
   4faac:	bne	4fad0 <Mat_VarReadInfo+0x84>
   4fab0:	mov	r5, #0
   4fab4:	b	4fafc <Mat_VarReadInfo+0xb0>
   4fab8:	mov	r0, r5
   4fabc:	bl	15f4 <Mat_VarFree@plt>
   4fac0:	ldr	r2, [r4, #32]
   4fac4:	ldr	r3, [r4, #36]	; 0x24
   4fac8:	cmp	r2, r3
   4facc:	bcs	4fb04 <Mat_VarReadInfo+0xb8>
   4fad0:	mov	r0, r4
   4fad4:	bl	1738 <Mat_VarReadNextInfo@plt>
   4fad8:	subs	r5, r0, #0
   4fadc:	beq	4fb0c <Mat_VarReadInfo+0xc0>
   4fae0:	ldr	r0, [r5, #36]	; 0x24
   4fae4:	cmp	r0, #0
   4fae8:	beq	4fab8 <Mat_VarReadInfo+0x6c>
   4faec:	mov	r1, r6
   4faf0:	bl	148c <strcmp@plt>
   4faf4:	cmp	r0, #0
   4faf8:	bne	4fab8 <Mat_VarReadInfo+0x6c>
   4fafc:	str	r7, [r4, #32]
   4fb00:	b	4fb70 <Mat_VarReadInfo+0x124>
   4fb04:	mov	r5, #0
   4fb08:	b	4fafc <Mat_VarReadInfo+0xb0>
   4fb0c:	ldr	r0, [pc, #168]	; 4fbbc <Mat_VarReadInfo+0x170>
   4fb10:	add	r0, pc, r0
   4fb14:	bl	1690 <Mat_Critical@plt>
   4fb18:	b	4fafc <Mat_VarReadInfo+0xb0>
   4fb1c:	mov	r0, r5
   4fb20:	bl	15f4 <Mat_VarFree@plt>
   4fb24:	ldr	r0, [r4]
   4fb28:	bl	15e8 <feof@plt>
   4fb2c:	cmp	r0, #0
   4fb30:	bne	4fbb4 <Mat_VarReadInfo+0x168>
   4fb34:	mov	r0, r4
   4fb38:	bl	1738 <Mat_VarReadNextInfo@plt>
   4fb3c:	subs	r5, r0, #0
   4fb40:	beq	4fb78 <Mat_VarReadInfo+0x12c>
   4fb44:	ldr	r0, [r5, #36]	; 0x24
   4fb48:	cmp	r0, #0
   4fb4c:	beq	4fb1c <Mat_VarReadInfo+0xd0>
   4fb50:	mov	r1, r6
   4fb54:	bl	148c <strcmp@plt>
   4fb58:	cmp	r0, #0
   4fb5c:	bne	4fb1c <Mat_VarReadInfo+0xd0>
   4fb60:	mov	r2, #0
   4fb64:	mov	r1, r7
   4fb68:	ldr	r0, [r4]
   4fb6c:	bl	1714 <fseek@plt>
   4fb70:	mov	r0, r5
   4fb74:	pop	{r4, r5, r6, r7, r8, pc}
   4fb78:	ldr	r0, [r4]
   4fb7c:	bl	15e8 <feof@plt>
   4fb80:	cmp	r0, #0
   4fb84:	bne	4fb24 <Mat_VarReadInfo+0xd8>
   4fb88:	ldr	r0, [pc, #48]	; 4fbc0 <Mat_VarReadInfo+0x174>
   4fb8c:	add	r0, pc, r0
   4fb90:	bl	1690 <Mat_Critical@plt>
   4fb94:	b	4fb60 <Mat_VarReadInfo+0x114>
   4fb98:	ldr	r0, [pc, #36]	; 4fbc4 <Mat_VarReadInfo+0x178>
   4fb9c:	add	r0, pc, r0
   4fba0:	bl	1690 <Mat_Critical@plt>
   4fba4:	mov	r5, #0
   4fba8:	b	4fb70 <Mat_VarReadInfo+0x124>
   4fbac:	mov	r5, #0
   4fbb0:	b	4fb70 <Mat_VarReadInfo+0x124>
   4fbb4:	mov	r5, #0
   4fbb8:	b	4fb60 <Mat_VarReadInfo+0x114>
   4fbbc:	.word	0x0000275c
   4fbc0:	.word	0x000026e0
   4fbc4:	.word	0x000026ac

0004fbc8 <Mat_VarRead>:
   4fbc8:	push	{r4, r5, r6, lr}
   4fbcc:	cmp	r1, #0
   4fbd0:	cmpne	r0, #0
   4fbd4:	beq	4fc78 <Mat_VarRead+0xb0>
   4fbd8:	mov	r4, r0
   4fbdc:	mov	r5, r1
   4fbe0:	ldr	r3, [r0, #16]
   4fbe4:	cmp	r3, #512	; 0x200
   4fbe8:	beq	4fc4c <Mat_VarRead+0x84>
   4fbec:	ldr	r0, [r0]
   4fbf0:	bl	151c <ftell@plt>
   4fbf4:	mov	r6, r0
   4fbf8:	cmn	r0, #1
   4fbfc:	beq	4fc38 <Mat_VarRead+0x70>
   4fc00:	mov	r1, r5
   4fc04:	mov	r0, r4
   4fc08:	bl	154c <Mat_VarReadInfo@plt>
   4fc0c:	subs	r5, r0, #0
   4fc10:	beq	4fc20 <Mat_VarRead+0x58>
   4fc14:	mov	r1, r5
   4fc18:	mov	r0, r4
   4fc1c:	bl	4cef0 <ReadData>
   4fc20:	mov	r2, #0
   4fc24:	mov	r1, r6
   4fc28:	ldr	r0, [r4]
   4fc2c:	bl	1714 <fseek@plt>
   4fc30:	mov	r0, r5
   4fc34:	pop	{r4, r5, r6, pc}
   4fc38:	ldr	r0, [pc, #64]	; 4fc80 <Mat_VarRead+0xb8>
   4fc3c:	add	r0, pc, r0
   4fc40:	bl	1690 <Mat_Critical@plt>
   4fc44:	mov	r5, #0
   4fc48:	b	4fc30 <Mat_VarRead+0x68>
   4fc4c:	ldr	r6, [r0, #32]
   4fc50:	mov	r3, #0
   4fc54:	str	r3, [r0, #32]
   4fc58:	bl	154c <Mat_VarReadInfo@plt>
   4fc5c:	subs	r5, r0, #0
   4fc60:	beq	4fc70 <Mat_VarRead+0xa8>
   4fc64:	mov	r1, r5
   4fc68:	mov	r0, r4
   4fc6c:	bl	4cef0 <ReadData>
   4fc70:	str	r6, [r4, #32]
   4fc74:	b	4fc30 <Mat_VarRead+0x68>
   4fc78:	mov	r5, #0
   4fc7c:	b	4fc30 <Mat_VarRead+0x68>
   4fc80:	.word	0x0000260c

0004fc84 <Mat_VarReadNext>:
   4fc84:	push	{r4, r5, r6, lr}
   4fc88:	mov	r4, r0
   4fc8c:	ldr	r3, [r0, #16]
   4fc90:	cmp	r3, #512	; 0x200
   4fc94:	beq	4fcf8 <Mat_VarReadNext+0x74>
   4fc98:	ldr	r0, [r0]
   4fc9c:	bl	15e8 <feof@plt>
   4fca0:	cmp	r0, #0
   4fca4:	movne	r5, #0
   4fca8:	bne	4fcdc <Mat_VarReadNext+0x58>
   4fcac:	ldr	r0, [r4]
   4fcb0:	bl	151c <ftell@plt>
   4fcb4:	mov	r6, r0
   4fcb8:	cmn	r0, #1
   4fcbc:	beq	4fce4 <Mat_VarReadNext+0x60>
   4fcc0:	mov	r0, r4
   4fcc4:	bl	1738 <Mat_VarReadNextInfo@plt>
   4fcc8:	subs	r5, r0, #0
   4fccc:	beq	4fd00 <Mat_VarReadNext+0x7c>
   4fcd0:	mov	r1, r5
   4fcd4:	mov	r0, r4
   4fcd8:	bl	4cef0 <ReadData>
   4fcdc:	mov	r0, r5
   4fce0:	pop	{r4, r5, r6, pc}
   4fce4:	ldr	r0, [pc, #52]	; 4fd20 <Mat_VarReadNext+0x9c>
   4fce8:	add	r0, pc, r0
   4fcec:	bl	1690 <Mat_Critical@plt>
   4fcf0:	mov	r5, #0
   4fcf4:	b	4fcdc <Mat_VarReadNext+0x58>
   4fcf8:	mov	r6, #0
   4fcfc:	b	4fcc0 <Mat_VarReadNext+0x3c>
   4fd00:	ldr	r3, [r4, #16]
   4fd04:	cmp	r3, #512	; 0x200
   4fd08:	beq	4fcdc <Mat_VarReadNext+0x58>
   4fd0c:	mov	r2, #0
   4fd10:	mov	r1, r6
   4fd14:	ldr	r0, [r4]
   4fd18:	bl	1714 <fseek@plt>
   4fd1c:	b	4fcdc <Mat_VarReadNext+0x58>
   4fd20:	.word	0x00002560

0004fd24 <Mat_VarWriteInfo>:
   4fd24:	push	{r4, lr}
   4fd28:	ldr	r3, [r0, #16]
   4fd2c:	cmp	r3, #512	; 0x200
   4fd30:	beq	4fd50 <Mat_VarWriteInfo+0x2c>
   4fd34:	ldr	r1, [pc, #32]	; 4fd5c <Mat_VarWriteInfo+0x38>
   4fd38:	add	r1, pc, r1
   4fd3c:	ldr	r0, [pc, #28]	; 4fd60 <Mat_VarWriteInfo+0x3c>
   4fd40:	add	r0, pc, r0
   4fd44:	bl	1690 <Mat_Critical@plt>
   4fd48:	mov	r0, #1
   4fd4c:	pop	{r4, pc}
   4fd50:	ldr	r1, [pc, #12]	; 4fd64 <Mat_VarWriteInfo+0x40>
   4fd54:	add	r1, pc, r1
   4fd58:	b	4fd3c <Mat_VarWriteInfo+0x18>
   4fd5c:	.word	0x00002e20
   4fd60:	.word	0x00002e28
   4fd64:	.word	0x00002de4

0004fd68 <Mat_VarWriteData>:
   4fd68:	push	{r4, lr}
   4fd6c:	ldr	r3, [r0, #16]
   4fd70:	cmp	r3, #512	; 0x200
   4fd74:	beq	4fd94 <Mat_VarWriteData+0x2c>
   4fd78:	ldr	r1, [pc, #32]	; 4fda0 <Mat_VarWriteData+0x38>
   4fd7c:	add	r1, pc, r1
   4fd80:	ldr	r0, [pc, #28]	; 4fda4 <Mat_VarWriteData+0x3c>
   4fd84:	add	r0, pc, r0
   4fd88:	bl	1690 <Mat_Critical@plt>
   4fd8c:	mov	r0, #1
   4fd90:	pop	{r4, pc}
   4fd94:	ldr	r1, [pc, #12]	; 4fda8 <Mat_VarWriteData+0x40>
   4fd98:	add	r1, pc, r1
   4fd9c:	b	4fd80 <Mat_VarWriteData+0x18>
   4fda0:	.word	0x00002ddc
   4fda4:	.word	0x00002de4
   4fda8:	.word	0x00002da0

0004fdac <Mat_VarWrite>:
   4fdac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4fdb0:	sub	sp, sp, #8
   4fdb4:	cmp	r1, #0
   4fdb8:	cmpne	r0, #0
   4fdbc:	beq	4ff3c <Mat_VarWrite+0x190>
   4fdc0:	mov	r8, r0
   4fdc4:	mov	r6, r1
   4fdc8:	mov	r9, r2
   4fdcc:	ldr	r3, [r0, #40]	; 0x28
   4fdd0:	cmp	r3, #0
   4fdd4:	beq	4fdf4 <Mat_VarWrite+0x48>
   4fdd8:	ldr	r7, [r8, #36]	; 0x24
   4fddc:	cmp	r7, #0
   4fde0:	beq	4fe50 <Mat_VarWrite+0xa4>
   4fde4:	ldr	r5, [r8, #40]	; 0x28
   4fde8:	sub	r5, r5, #4
   4fdec:	mov	r4, #0
   4fdf0:	b	4fe10 <Mat_VarWrite+0x64>
   4fdf4:	add	r1, sp, #8
   4fdf8:	str	r3, [r1, #-4]!
   4fdfc:	bl	160c <Mat_GetDir@plt>
   4fe00:	b	4fdd8 <Mat_VarWrite+0x2c>
   4fe04:	add	r4, r4, #1
   4fe08:	cmp	r4, r7
   4fe0c:	beq	4fe50 <Mat_VarWrite+0xa4>
   4fe10:	ldr	r0, [r5, #4]!
   4fe14:	cmp	r0, #0
   4fe18:	beq	4fe04 <Mat_VarWrite+0x58>
   4fe1c:	ldr	sl, [r6, #36]	; 0x24
   4fe20:	mov	r1, sl
   4fe24:	bl	148c <strcmp@plt>
   4fe28:	cmp	r0, #0
   4fe2c:	bne	4fe04 <Mat_VarWrite+0x58>
   4fe30:	mov	r1, sl
   4fe34:	ldr	r0, [pc, #264]	; 4ff44 <Mat_VarWrite+0x198>
   4fe38:	add	r0, pc, r0
   4fe3c:	bl	1690 <Mat_Critical@plt>
   4fe40:	mov	r4, #1
   4fe44:	mov	r0, r4
   4fe48:	add	sp, sp, #8
   4fe4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4fe50:	ldr	r3, [r8, #16]
   4fe54:	cmp	r3, #256	; 0x100
   4fe58:	beq	4fe88 <Mat_VarWrite+0xdc>
   4fe5c:	cmp	r3, #512	; 0x200
   4fe60:	moveq	r4, #1
   4fe64:	beq	4fe44 <Mat_VarWrite+0x98>
   4fe68:	cmp	r3, #16
   4fe6c:	movne	r4, #2
   4fe70:	bne	4fe44 <Mat_VarWrite+0x98>
   4fe74:	mov	r1, r6
   4fe78:	mov	r0, r8
   4fe7c:	bl	4b494 <Mat_VarWrite4>
   4fe80:	mov	r4, r0
   4fe84:	b	4fe9c <Mat_VarWrite+0xf0>
   4fe88:	mov	r2, r9
   4fe8c:	mov	r1, r6
   4fe90:	mov	r0, r8
   4fe94:	bl	4a1c8 <Mat_VarWrite5>
   4fe98:	mov	r4, r0
   4fe9c:	cmp	r4, #0
   4fea0:	bne	4fe44 <Mat_VarWrite+0x98>
   4fea4:	ldr	r0, [r8, #40]	; 0x28
   4fea8:	cmp	r0, #0
   4feac:	beq	4ff00 <Mat_VarWrite+0x154>
   4feb0:	ldr	r1, [r8, #36]	; 0x24
   4feb4:	add	r1, r1, #1
   4feb8:	lsl	r1, r1, #2
   4febc:	bl	1540 <realloc@plt>
   4fec0:	mov	r5, r0
   4fec4:	cmp	r5, #0
   4fec8:	beq	4ff28 <Mat_VarWrite+0x17c>
   4fecc:	str	r5, [r8, #40]	; 0x28
   4fed0:	ldr	r3, [r6, #36]	; 0x24
   4fed4:	cmp	r3, #0
   4fed8:	beq	4ff10 <Mat_VarWrite+0x164>
   4fedc:	ldr	r7, [r8, #36]	; 0x24
   4fee0:	add	r3, r7, #1
   4fee4:	str	r3, [r8, #36]	; 0x24
   4fee8:	ldr	r1, [r6, #36]	; 0x24
   4feec:	ldr	r0, [pc, #84]	; 4ff48 <Mat_VarWrite+0x19c>
   4fef0:	add	r0, pc, r0
   4fef4:	bl	1f2c <strdup_printf>
   4fef8:	str	r0, [r5, r7, lsl #2]
   4fefc:	b	4fe44 <Mat_VarWrite+0x98>
   4ff00:	mov	r0, #4
   4ff04:	bl	15ac <malloc@plt>
   4ff08:	mov	r5, r0
   4ff0c:	b	4fec4 <Mat_VarWrite+0x118>
   4ff10:	ldr	r3, [r8, #36]	; 0x24
   4ff14:	add	r2, r3, #1
   4ff18:	str	r2, [r8, #36]	; 0x24
   4ff1c:	mov	r2, #0
   4ff20:	str	r2, [r5, r3, lsl #2]
   4ff24:	b	4fe44 <Mat_VarWrite+0x98>
   4ff28:	ldr	r0, [pc, #28]	; 4ff4c <Mat_VarWrite+0x1a0>
   4ff2c:	add	r0, pc, r0
   4ff30:	bl	1690 <Mat_Critical@plt>
   4ff34:	mov	r4, #3
   4ff38:	b	4fe44 <Mat_VarWrite+0x98>
   4ff3c:	mvn	r4, #0
   4ff40:	b	4fe44 <Mat_VarWrite+0x98>
   4ff44:	.word	0x00002d74
   4ff48:	.word	0x00002b24
   4ff4c:	.word	0x00002be0

0004ff50 <Mat_VarDelete>:
   4ff50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4ff54:	sub	sp, sp, #8
   4ff58:	mov	r5, r0
   4ff5c:	mov	r8, r1
   4ff60:	ldr	r3, [pc, #844]	; 502b4 <Mat_VarDelete+0x364>
   4ff64:	add	r3, pc, r3
   4ff68:	ldm	r3, {r0, r1}
   4ff6c:	str	r0, [sp]
   4ff70:	strh	r1, [sp, #4]
   4ff74:	lsr	r1, r1, #16
   4ff78:	strb	r1, [sp, #6]
   4ff7c:	cmp	r8, #0
   4ff80:	cmpne	r5, #0
   4ff84:	moveq	r4, #1
   4ff88:	bne	4ff98 <Mat_VarDelete+0x48>
   4ff8c:	mov	r0, r4
   4ff90:	add	sp, sp, #8
   4ff94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4ff98:	mov	r0, sp
   4ff9c:	bl	15c4 <mktemp@plt>
   4ffa0:	subs	sl, r0, #0
   4ffa4:	beq	502a0 <Mat_VarDelete+0x350>
   4ffa8:	ldr	r2, [r5, #16]
   4ffac:	cmp	r2, #16
   4ffb0:	moveq	r2, #16
   4ffb4:	beq	4ffc4 <Mat_VarDelete+0x74>
   4ffb8:	cmp	r2, #512	; 0x200
   4ffbc:	moveq	r2, #512	; 0x200
   4ffc0:	movne	r2, #256	; 0x100
   4ffc4:	ldr	r1, [r5, #4]
   4ffc8:	mov	r0, sl
   4ffcc:	bl	16c0 <Mat_CreateVer@plt>
   4ffd0:	subs	r9, r0, #0
   4ffd4:	moveq	r4, #1
   4ffd8:	beq	4ff8c <Mat_VarDelete+0x3c>
   4ffdc:	mov	r0, r5
   4ffe0:	bl	1660 <Mat_Rewind@plt>
   4ffe4:	mov	r7, #1
   4ffe8:	b	4fff8 <Mat_VarDelete+0xa8>
   4ffec:	mov	r0, r4
   4fff0:	bl	15f4 <Mat_VarFree@plt>
   4fff4:	mov	r7, r6
   4fff8:	mov	r0, r5
   4fffc:	bl	1480 <Mat_VarReadNext@plt>
   50000:	subs	r4, r0, #0
   50004:	beq	50034 <Mat_VarDelete+0xe4>
   50008:	mov	r1, r8
   5000c:	ldr	r0, [r4, #36]	; 0x24
   50010:	bl	148c <strcmp@plt>
   50014:	subs	r6, r0, #0
   50018:	beq	4ffec <Mat_VarDelete+0x9c>
   5001c:	ldr	r2, [r4, #48]	; 0x30
   50020:	mov	r1, r4
   50024:	mov	r0, r9
   50028:	bl	1504 <Mat_VarWrite@plt>
   5002c:	mov	r6, r7
   50030:	b	4ffec <Mat_VarDelete+0x9c>
   50034:	ldr	r8, [r9, #40]	; 0x28
   50038:	mov	r3, #0
   5003c:	str	r3, [r9, #40]	; 0x28
   50040:	ldr	r6, [r9, #36]	; 0x24
   50044:	mov	r0, r9
   50048:	bl	1684 <Mat_Close@plt>
   5004c:	cmp	r7, #0
   50050:	bne	50278 <Mat_VarDelete+0x328>
   50054:	ldr	r1, [r5, #12]
   50058:	ldr	r0, [pc, #600]	; 502b8 <Mat_VarDelete+0x368>
   5005c:	add	r0, pc, r0
   50060:	bl	1f2c <strdup_printf>
   50064:	mov	r7, r0
   50068:	ldr	r0, [r5]
   5006c:	cmp	r0, #0
   50070:	beq	50080 <Mat_VarDelete+0x130>
   50074:	bl	16a8 <fclose@plt>
   50078:	mov	r3, #0
   5007c:	str	r3, [r5]
   50080:	mov	r1, r7
   50084:	mov	r0, sl
   50088:	bl	4cc8c <mat_copy>
   5008c:	mov	r4, r0
   50090:	cmn	r0, #1
   50094:	beq	50110 <Mat_VarDelete+0x1c0>
   50098:	mov	r0, sl
   5009c:	bl	16cc <remove@plt>
   500a0:	mov	r4, r0
   500a4:	cmn	r0, #1
   500a8:	beq	50174 <Mat_VarDelete+0x224>
   500ac:	ldr	r1, [r5, #24]
   500b0:	mov	r0, r7
   500b4:	bl	14a4 <Mat_Open@plt>
   500b8:	subs	sl, r0, #0
   500bc:	beq	50264 <Mat_VarDelete+0x314>
   500c0:	ldr	r0, [r5, #4]
   500c4:	cmp	r0, #0
   500c8:	beq	500d0 <Mat_VarDelete+0x180>
   500cc:	bl	14e0 <free@plt>
   500d0:	ldr	r0, [r5, #8]
   500d4:	cmp	r0, #0
   500d8:	beq	500e0 <Mat_VarDelete+0x190>
   500dc:	bl	14e0 <free@plt>
   500e0:	ldr	r0, [r5, #12]
   500e4:	cmp	r0, #0
   500e8:	beq	500f0 <Mat_VarDelete+0x1a0>
   500ec:	bl	14e0 <free@plt>
   500f0:	ldr	r3, [r5, #40]	; 0x28
   500f4:	cmp	r3, #0
   500f8:	beq	501fc <Mat_VarDelete+0x2ac>
   500fc:	ldr	r3, [r5, #36]	; 0x24
   50100:	cmp	r3, #0
   50104:	beq	501f4 <Mat_VarDelete+0x2a4>
   50108:	mov	r9, #0
   5010c:	b	501dc <Mat_VarDelete+0x28c>
   50110:	cmp	r8, #0
   50114:	beq	50154 <Mat_VarDelete+0x204>
   50118:	cmp	r6, #0
   5011c:	beq	5014c <Mat_VarDelete+0x1fc>
   50120:	sub	r9, r8, #4
   50124:	mov	r5, #0
   50128:	b	50138 <Mat_VarDelete+0x1e8>
   5012c:	add	r5, r5, #1
   50130:	cmp	r6, r5
   50134:	beq	5014c <Mat_VarDelete+0x1fc>
   50138:	ldr	r0, [r9, #4]!
   5013c:	cmp	r0, #0
   50140:	beq	5012c <Mat_VarDelete+0x1dc>
   50144:	bl	14e0 <free@plt>
   50148:	b	5012c <Mat_VarDelete+0x1dc>
   5014c:	mov	r0, r8
   50150:	bl	14e0 <free@plt>
   50154:	mov	r2, r7
   50158:	mov	r1, sl
   5015c:	ldr	r0, [pc, #344]	; 502bc <Mat_VarDelete+0x36c>
   50160:	add	r0, pc, r0
   50164:	bl	1690 <Mat_Critical@plt>
   50168:	mov	r0, r7
   5016c:	bl	14e0 <free@plt>
   50170:	b	4ff8c <Mat_VarDelete+0x3c>
   50174:	cmp	r8, #0
   50178:	beq	501b8 <Mat_VarDelete+0x268>
   5017c:	cmp	r6, #0
   50180:	beq	501b0 <Mat_VarDelete+0x260>
   50184:	sub	r9, r8, #4
   50188:	mov	r5, #0
   5018c:	b	5019c <Mat_VarDelete+0x24c>
   50190:	add	r5, r5, #1
   50194:	cmp	r6, r5
   50198:	beq	501b0 <Mat_VarDelete+0x260>
   5019c:	ldr	r0, [r9, #4]!
   501a0:	cmp	r0, #0
   501a4:	beq	50190 <Mat_VarDelete+0x240>
   501a8:	bl	14e0 <free@plt>
   501ac:	b	50190 <Mat_VarDelete+0x240>
   501b0:	mov	r0, r8
   501b4:	bl	14e0 <free@plt>
   501b8:	mov	r1, sl
   501bc:	ldr	r0, [pc, #252]	; 502c0 <Mat_VarDelete+0x370>
   501c0:	add	r0, pc, r0
   501c4:	bl	1690 <Mat_Critical@plt>
   501c8:	b	50168 <Mat_VarDelete+0x218>
   501cc:	add	r9, r9, #1
   501d0:	ldr	r3, [r5, #36]	; 0x24
   501d4:	cmp	r3, r9
   501d8:	bls	501f4 <Mat_VarDelete+0x2a4>
   501dc:	ldr	r3, [r5, #40]	; 0x28
   501e0:	ldr	r0, [r3, r9, lsl #2]
   501e4:	cmp	r0, #0
   501e8:	beq	501cc <Mat_VarDelete+0x27c>
   501ec:	bl	14e0 <free@plt>
   501f0:	b	501cc <Mat_VarDelete+0x27c>
   501f4:	ldr	r0, [r5, #40]	; 0x28
   501f8:	bl	14e0 <free@plt>
   501fc:	mov	r3, sl
   50200:	mov	r2, r5
   50204:	add	r1, sl, #32
   50208:	ldr	r9, [r3]
   5020c:	ldr	lr, [r3, #4]
   50210:	ldr	ip, [r3, #8]
   50214:	ldr	r0, [r3, #12]
   50218:	str	r9, [r2]
   5021c:	str	lr, [r2, #4]
   50220:	str	ip, [r2, #8]
   50224:	str	r0, [r2, #12]
   50228:	add	r3, r3, #16
   5022c:	add	r2, r2, #16
   50230:	cmp	r3, r1
   50234:	bne	50208 <Mat_VarDelete+0x2b8>
   50238:	ldr	r0, [r3]
   5023c:	ldr	r1, [r3, #4]
   50240:	ldr	r3, [r3, #8]
   50244:	str	r0, [r2]
   50248:	str	r1, [r2, #4]
   5024c:	str	r3, [r2, #8]
   50250:	mov	r0, sl
   50254:	bl	14e0 <free@plt>
   50258:	str	r6, [r5, #36]	; 0x24
   5025c:	str	r8, [r5, #40]	; 0x28
   50260:	b	50168 <Mat_VarDelete+0x218>
   50264:	mov	r1, r7
   50268:	ldr	r0, [pc, #84]	; 502c4 <Mat_VarDelete+0x374>
   5026c:	add	r0, pc, r0
   50270:	bl	1690 <Mat_Critical@plt>
   50274:	b	50168 <Mat_VarDelete+0x218>
   50278:	mov	r0, sl
   5027c:	bl	16cc <remove@plt>
   50280:	mov	r4, r0
   50284:	cmn	r0, #1
   50288:	bne	4ff8c <Mat_VarDelete+0x3c>
   5028c:	mov	r1, sl
   50290:	ldr	r0, [pc, #48]	; 502c8 <Mat_VarDelete+0x378>
   50294:	add	r0, pc, r0
   50298:	bl	1690 <Mat_Critical@plt>
   5029c:	b	4ff8c <Mat_VarDelete+0x3c>
   502a0:	ldr	r0, [pc, #36]	; 502cc <Mat_VarDelete+0x37c>
   502a4:	add	r0, pc, r0
   502a8:	bl	1690 <Mat_Critical@plt>
   502ac:	mov	r4, #1
   502b0:	b	4ff8c <Mat_VarDelete+0x3c>
   502b4:	.word	0x00002ce0
   502b8:	.word	0x000029b8
   502bc:	.word	0x00002a68
   502c0:	.word	0x00002a2c
   502c4:	.word	0x0000299c
   502c8:	.word	0x00002958
   502cc:	.word	0x0000297c

000502d0 <Mat_VarWriteAppend>:
   502d0:	cmp	r1, #0
   502d4:	cmpne	r0, #0
   502d8:	beq	5031c <Mat_VarWriteAppend+0x4c>
   502dc:	push	{r4, lr}
   502e0:	sub	sp, sp, #8
   502e4:	mov	r4, r0
   502e8:	ldr	r3, [r0, #40]	; 0x28
   502ec:	cmp	r3, #0
   502f0:	beq	5030c <Mat_VarWriteAppend+0x3c>
   502f4:	ldr	r0, [r4, #16]
   502f8:	cmp	r0, #512	; 0x200
   502fc:	moveq	r0, #1
   50300:	movne	r0, #2
   50304:	add	sp, sp, #8
   50308:	pop	{r4, pc}
   5030c:	add	r1, sp, #8
   50310:	str	r3, [r1, #-4]!
   50314:	bl	160c <Mat_GetDir@plt>
   50318:	b	502f4 <Mat_VarWriteAppend+0x24>
   5031c:	mvn	r0, #0
   50320:	bx	lr

00050324 <Mat_VarGetCell>:
   50324:	push	{r4, r5, lr}
   50328:	sub	sp, sp, #12
   5032c:	mov	r3, #1
   50330:	str	r3, [sp, #4]
   50334:	subs	r4, r0, #0
   50338:	beq	50370 <Mat_VarGetCell+0x4c>
   5033c:	mov	r5, r1
   50340:	add	r1, sp, #4
   50344:	mov	r0, r4
   50348:	bl	4d06c <SafeMulDims>
   5034c:	cmp	r5, #0
   50350:	blt	50378 <Mat_VarGetCell+0x54>
   50354:	ldr	r3, [sp, #4]
   50358:	cmp	r5, r3
   5035c:	bcs	50380 <Mat_VarGetCell+0x5c>
   50360:	ldr	r3, [r4, #40]	; 0x28
   50364:	ldr	r0, [r3, r5, lsl #2]
   50368:	add	sp, sp, #12
   5036c:	pop	{r4, r5, pc}
   50370:	mov	r0, r4
   50374:	b	50368 <Mat_VarGetCell+0x44>
   50378:	mov	r0, #0
   5037c:	b	50368 <Mat_VarGetCell+0x44>
   50380:	mov	r0, #0
   50384:	b	50368 <Mat_VarGetCell+0x44>

00050388 <Mat_VarGetCells>:
   50388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5038c:	sub	sp, sp, #156	; 0x9c
   50390:	mov	r5, r0
   50394:	str	r0, [sp, #24]
   50398:	mov	r6, r1
   5039c:	mov	r7, r2
   503a0:	mov	r8, r3
   503a4:	str	r3, [sp, #20]
   503a8:	mov	r4, #40	; 0x28
   503ac:	mov	r2, r4
   503b0:	mov	r1, #0
   503b4:	add	r0, sp, #112	; 0x70
   503b8:	bl	166c <memset@plt>
   503bc:	mov	r2, r4
   503c0:	mov	r1, #0
   503c4:	add	r0, sp, #72	; 0x48
   503c8:	bl	166c <memset@plt>
   503cc:	mov	r2, r4
   503d0:	mov	r1, #0
   503d4:	add	r0, sp, #32
   503d8:	bl	166c <memset@plt>
   503dc:	cmp	r6, #0
   503e0:	cmpne	r5, #0
   503e4:	beq	505bc <Mat_VarGetCells+0x234>
   503e8:	mov	r2, r5
   503ec:	cmp	r8, #0
   503f0:	cmpne	r7, #0
   503f4:	beq	505d0 <Mat_VarGetCells+0x248>
   503f8:	ldr	r5, [r5, #4]
   503fc:	cmp	r5, #9
   50400:	bgt	505dc <Mat_VarGetCells+0x254>
   50404:	ldr	lr, [r2, #32]
   50408:	ldr	r3, [lr]
   5040c:	str	r3, [sp, #32]
   50410:	ldr	r2, [r8]
   50414:	mov	fp, r2
   50418:	str	r2, [sp, #16]
   5041c:	ldr	r4, [r6]
   50420:	str	r4, [sp, #112]	; 0x70
   50424:	cmp	r5, #1
   50428:	ble	5046c <Mat_VarGetCells+0xe4>
   5042c:	add	r1, r6, #4
   50430:	add	r9, sp, #112	; 0x70
   50434:	add	r2, sp, #32
   50438:	add	sl, r6, r5, lsl #2
   5043c:	ldr	r0, [r1], #4
   50440:	str	r0, [r9, #4]!
   50444:	ldr	ip, [r2]
   50448:	ldr	r3, [lr, #4]!
   5044c:	mul	r3, ip, r3
   50450:	str	r3, [r2, #4]!
   50454:	ldr	r3, [r8, #4]!
   50458:	mul	fp, r3, fp
   5045c:	mla	r4, ip, r0, r4
   50460:	cmp	r1, sl
   50464:	bne	5043c <Mat_VarGetCells+0xb4>
   50468:	str	fp, [sp, #16]
   5046c:	ldr	r8, [sp, #16]
   50470:	lsl	r0, r8, #2
   50474:	bl	15ac <malloc@plt>
   50478:	str	r0, [sp, #28]
   5047c:	cmp	r8, #0
   50480:	ble	505c4 <Mat_VarGetCells+0x23c>
   50484:	ldr	r3, [sp, #20]
   50488:	ldr	r3, [r3]
   5048c:	str	r3, [sp, #8]
   50490:	lsl	r3, r3, #2
   50494:	str	r3, [sp, #12]
   50498:	str	r0, [sp]
   5049c:	mov	fp, #0
   504a0:	sub	r3, r5, #1
   504a4:	str	r3, [sp, #4]
   504a8:	b	5053c <Mat_VarGetCells+0x1b4>
   504ac:	ldr	r8, [ip], #4
   504b0:	ldr	r9, [r1], #4
   504b4:	mla	r4, r9, r8, r4
   504b8:	add	r2, r2, #1
   504bc:	add	r3, r3, #4
   504c0:	add	r0, r0, #4
   504c4:	cmp	r5, r2
   504c8:	beq	50518 <Mat_VarGetCells+0x190>
   504cc:	ldr	r9, [r3]
   504d0:	ldr	r8, [lr, #4]!
   504d4:	cmp	r9, r8
   504d8:	bne	504ac <Mat_VarGetCells+0x124>
   504dc:	mov	r8, #0
   504e0:	str	r8, [r3]
   504e4:	ldr	r8, [r6, r2, lsl #2]
   504e8:	str	r8, [r1]
   504ec:	ldr	r8, [sp, #4]
   504f0:	cmp	r8, r2
   504f4:	ble	504ac <Mat_VarGetCells+0x124>
   504f8:	ldr	r8, [r3, #4]
   504fc:	add	r8, r8, #1
   50500:	str	r8, [r3, #4]
   50504:	ldr	r8, [r1, #4]
   50508:	ldr	r9, [r0]
   5050c:	add	r8, r8, r9
   50510:	str	r8, [r1, #4]
   50514:	b	504ac <Mat_VarGetCells+0x124>
   50518:	ldr	r3, [sp, #8]
   5051c:	add	fp, fp, r3
   50520:	ldr	r3, [sp]
   50524:	ldr	r2, [sp, #12]
   50528:	add	r3, r3, r2
   5052c:	str	r3, [sp]
   50530:	ldr	r3, [sp, #16]
   50534:	cmp	fp, r3
   50538:	bge	505c4 <Mat_VarGetCells+0x23c>
   5053c:	ldr	r3, [sp, #8]
   50540:	cmp	r3, #0
   50544:	ble	50574 <Mat_VarGetCells+0x1ec>
   50548:	ldr	r3, [sp, #24]
   5054c:	ldr	r0, [r3, #40]	; 0x28
   50550:	ldr	r1, [r7]
   50554:	ldr	r3, [sp]
   50558:	ldr	r2, [sp, #12]
   5055c:	add	r2, r3, r2
   50560:	ldr	ip, [r0, r4, lsl #2]
   50564:	str	ip, [r3], #4
   50568:	add	r4, r4, r1
   5056c:	cmp	r3, r2
   50570:	bne	50560 <Mat_VarGetCells+0x1d8>
   50574:	ldr	r4, [r6]
   50578:	str	r4, [sp, #112]	; 0x70
   5057c:	ldr	r3, [sp, #76]	; 0x4c
   50580:	add	r3, r3, #1
   50584:	str	r3, [sp, #76]	; 0x4c
   50588:	ldr	r2, [r7, #4]
   5058c:	ldr	r3, [sp, #116]	; 0x74
   50590:	add	r3, r3, r2
   50594:	str	r3, [sp, #116]	; 0x74
   50598:	cmp	r5, #1
   5059c:	ble	50518 <Mat_VarGetCells+0x190>
   505a0:	add	r3, sp, #76	; 0x4c
   505a4:	ldr	lr, [sp, #20]
   505a8:	add	r1, sp, #116	; 0x74
   505ac:	add	ip, sp, #32
   505b0:	add	r0, r7, #8
   505b4:	mov	r2, #1
   505b8:	b	504cc <Mat_VarGetCells+0x144>
   505bc:	mov	r3, #0
   505c0:	str	r3, [sp, #28]
   505c4:	ldr	r0, [sp, #28]
   505c8:	add	sp, sp, #156	; 0x9c
   505cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   505d0:	mov	r3, #0
   505d4:	str	r3, [sp, #28]
   505d8:	b	505c4 <Mat_VarGetCells+0x23c>
   505dc:	mov	r3, #0
   505e0:	str	r3, [sp, #28]
   505e4:	b	505c4 <Mat_VarGetCells+0x23c>

000505e8 <Mat_VarGetCellsLinear>:
   505e8:	push	{r4, r5, r6, r7, r8, lr}
   505ec:	subs	r8, r0, #0
   505f0:	beq	50638 <Mat_VarGetCellsLinear+0x50>
   505f4:	mov	r4, r1
   505f8:	mov	r6, r2
   505fc:	mov	r7, r3
   50600:	lsl	r5, r3, #2
   50604:	mov	r0, r5
   50608:	bl	15ac <malloc@plt>
   5060c:	cmp	r7, #0
   50610:	pople	{r4, r5, r6, r7, r8, pc}
   50614:	ldr	ip, [r8, #40]	; 0x28
   50618:	mov	r3, r0
   5061c:	add	r1, r0, r5
   50620:	ldr	r2, [ip, r4, lsl #2]
   50624:	str	r2, [r3], #4
   50628:	add	r4, r4, r6
   5062c:	cmp	r3, r1
   50630:	bne	50620 <Mat_VarGetCellsLinear+0x38>
   50634:	pop	{r4, r5, r6, r7, r8, pc}
   50638:	mov	r0, #0
   5063c:	pop	{r4, r5, r6, r7, r8, pc}

00050640 <Mat_VarSetCell>:
   50640:	push	{r4, r5, r6, lr}
   50644:	sub	sp, sp, #8
   50648:	mov	r3, #1
   5064c:	str	r3, [sp, #4]
   50650:	subs	r4, r0, #0
   50654:	beq	506a0 <Mat_VarSetCell+0x60>
   50658:	ldr	r3, [r4, #4]
   5065c:	cmp	r3, #0
   50660:	ble	506a8 <Mat_VarSetCell+0x68>
   50664:	mov	r6, r2
   50668:	mov	r5, r1
   5066c:	add	r1, sp, #4
   50670:	mov	r0, r4
   50674:	bl	4d06c <SafeMulDims>
   50678:	ldr	r3, [r4, #40]	; 0x28
   5067c:	cmp	r5, #0
   50680:	blt	506b0 <Mat_VarSetCell+0x70>
   50684:	ldr	r2, [sp, #4]
   50688:	cmp	r5, r2
   5068c:	bcs	506b8 <Mat_VarSetCell+0x78>
   50690:	ldr	r0, [r3, r5, lsl #2]
   50694:	str	r6, [r3, r5, lsl #2]
   50698:	add	sp, sp, #8
   5069c:	pop	{r4, r5, r6, pc}
   506a0:	mov	r0, r4
   506a4:	b	50698 <Mat_VarSetCell+0x58>
   506a8:	mov	r0, #0
   506ac:	b	50698 <Mat_VarSetCell+0x58>
   506b0:	mov	r0, #0
   506b4:	b	50698 <Mat_VarSetCell+0x58>
   506b8:	mov	r0, #0
   506bc:	b	50698 <Mat_VarSetCell+0x58>

000506c0 <Mat_VarCreateStruct>:
   506c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   506c4:	sub	sp, sp, #12
   506c8:	ldr	r7, [sp, #40]	; 0x28
   506cc:	subs	r4, r2, #0
   506d0:	beq	5083c <Mat_VarCreateStruct+0x17c>
   506d4:	mov	r6, r3
   506d8:	mov	r8, r1
   506dc:	mov	r9, r0
   506e0:	bl	1570 <Mat_VarCalloc@plt>
   506e4:	subs	r5, r0, #0
   506e8:	beq	50770 <Mat_VarCreateStruct+0xb0>
   506ec:	mov	r3, #0
   506f0:	str	r3, [r5, #48]	; 0x30
   506f4:	cmp	r9, r3
   506f8:	beq	50708 <Mat_VarCreateStruct+0x48>
   506fc:	mov	r0, r9
   50700:	bl	1534 <strdup@plt>
   50704:	str	r0, [r5, #36]	; 0x24
   50708:	str	r8, [r5, #4]
   5070c:	lsl	r0, r8, #2
   50710:	bl	15ac <malloc@plt>
   50714:	str	r0, [r5, #32]
   50718:	cmp	r8, #0
   5071c:	ble	5077c <Mat_VarCreateStruct+0xbc>
   50720:	sub	r1, r4, #4
   50724:	mov	r2, #0
   50728:	mov	r4, #1
   5072c:	ldr	r0, [r1, #4]
   50730:	ldr	r3, [r5, #32]
   50734:	str	r0, [r3, r2, lsl #2]
   50738:	ldr	r3, [r1, #4]!
   5073c:	mul	r4, r3, r4
   50740:	add	r2, r2, #1
   50744:	ldr	r0, [r5, #4]
   50748:	cmp	r0, r2
   5074c:	bgt	5072c <Mat_VarCreateStruct+0x6c>
   50750:	mov	r3, #2
   50754:	str	r3, [r5, #16]
   50758:	mov	r3, #22
   5075c:	str	r3, [r5, #8]
   50760:	mov	r3, #4
   50764:	str	r3, [r5, #12]
   50768:	cmp	r7, #0
   5076c:	bne	50784 <Mat_VarCreateStruct+0xc4>
   50770:	mov	r0, r5
   50774:	add	sp, sp, #12
   50778:	pop	{r4, r5, r6, r7, r8, r9, pc}
   5077c:	mov	r4, #1
   50780:	b	50750 <Mat_VarCreateStruct+0x90>
   50784:	ldr	r3, [r5, #52]	; 0x34
   50788:	str	r7, [r3, #4]
   5078c:	ldr	r8, [r5, #52]	; 0x34
   50790:	lsl	r0, r7, #2
   50794:	bl	15ac <malloc@plt>
   50798:	str	r0, [r8, #8]
   5079c:	ldr	r3, [r5, #52]	; 0x34
   507a0:	ldr	r3, [r3, #8]
   507a4:	cmp	r3, #0
   507a8:	beq	507f4 <Mat_VarCreateStruct+0x134>
   507ac:	ldr	r0, [r6]
   507b0:	cmp	r0, #0
   507b4:	movne	r8, #0
   507b8:	beq	507e4 <Mat_VarCreateStruct+0x124>
   507bc:	ldr	r3, [r5, #52]	; 0x34
   507c0:	ldr	r9, [r3, #8]
   507c4:	bl	1534 <strdup@plt>
   507c8:	str	r0, [r9, r8, lsl #2]
   507cc:	add	r8, r8, #1
   507d0:	cmp	r7, r8
   507d4:	beq	50800 <Mat_VarCreateStruct+0x140>
   507d8:	ldr	r0, [r6, #4]!
   507dc:	cmp	r0, #0
   507e0:	bne	507bc <Mat_VarCreateStruct+0xfc>
   507e4:	mov	r0, r5
   507e8:	bl	15f4 <Mat_VarFree@plt>
   507ec:	mov	r5, #0
   507f0:	b	50770 <Mat_VarCreateStruct+0xb0>
   507f4:	mov	r0, r5
   507f8:	bl	15f4 <Mat_VarFree@plt>
   507fc:	b	507ec <Mat_VarCreateStruct+0x12c>
   50800:	cmp	r4, #0
   50804:	beq	50770 <Mat_VarCreateStruct+0xb0>
   50808:	mov	r2, r8
   5080c:	mov	r1, r4
   50810:	add	r0, sp, #4
   50814:	bl	4d0c8 <SafeMul>
   50818:	ldr	r2, [r5, #12]
   5081c:	ldr	r1, [sp, #4]
   50820:	mov	r0, r5
   50824:	bl	4d0c8 <SafeMul>
   50828:	ldr	r1, [r5, #12]
   5082c:	ldr	r0, [sp, #4]
   50830:	bl	1468 <calloc@plt>
   50834:	str	r0, [r5, #40]	; 0x28
   50838:	b	50770 <Mat_VarCreateStruct+0xb0>
   5083c:	mov	r5, #0
   50840:	b	50770 <Mat_VarCreateStruct+0xb0>

00050844 <Mat_VarAddStructField>:
   50844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   50848:	sub	sp, sp, #12
   5084c:	mov	r3, #1
   50850:	str	r3, [sp, #4]
   50854:	cmp	r1, #0
   50858:	cmpne	r0, #0
   5085c:	beq	50984 <Mat_VarAddStructField+0x140>
   50860:	mov	r6, r0
   50864:	mov	r8, r1
   50868:	add	r1, sp, #4
   5086c:	bl	4d06c <SafeMulDims>
   50870:	ldr	r3, [r6, #52]	; 0x34
   50874:	ldr	r4, [r3, #4]
   50878:	add	r7, r4, #1
   5087c:	str	r7, [r3, #4]
   50880:	lsl	r5, r7, #2
   50884:	ldr	r3, [r6, #52]	; 0x34
   50888:	mov	r1, r5
   5088c:	ldr	r0, [r3, #8]
   50890:	bl	1540 <realloc@plt>
   50894:	cmp	r0, #0
   50898:	beq	5098c <Mat_VarAddStructField+0x148>
   5089c:	ldr	r3, [r6, #52]	; 0x34
   508a0:	str	r0, [r3, #8]
   508a4:	ldr	r3, [r6, #52]	; 0x34
   508a8:	sub	r5, r5, #4
   508ac:	ldr	r9, [r3, #8]
   508b0:	mov	r0, r8
   508b4:	bl	1534 <strdup@plt>
   508b8:	str	r0, [r9, r5]
   508bc:	mov	r2, r7
   508c0:	ldr	r1, [sp, #4]
   508c4:	mov	r0, sp
   508c8:	bl	4d0c8 <SafeMul>
   508cc:	mov	r2, #4
   508d0:	ldr	r1, [sp]
   508d4:	mov	r0, r6
   508d8:	bl	4d0c8 <SafeMul>
   508dc:	ldr	r0, [r6]
   508e0:	bl	15ac <malloc@plt>
   508e4:	subs	r5, r0, #0
   508e8:	moveq	r3, #0
   508ec:	streq	r3, [r6]
   508f0:	mvneq	r0, #0
   508f4:	beq	5097c <Mat_VarAddStructField+0x138>
   508f8:	ldr	r0, [r6, #40]	; 0x28
   508fc:	ldr	r9, [sp, #4]
   50900:	cmp	r9, #0
   50904:	beq	50970 <Mat_VarAddStructField+0x12c>
   50908:	lsl	r8, r4, #2
   5090c:	mov	lr, r0
   50910:	mov	r7, #0
   50914:	mov	r2, r7
   50918:	mov	sl, r7
   5091c:	b	5094c <Mat_VarAddStructField+0x108>
   50920:	ldr	r1, [r3], #4
   50924:	str	r1, [r2], #4
   50928:	cmp	r3, fp
   5092c:	bne	50920 <Mat_VarAddStructField+0xdc>
   50930:	add	ip, r4, ip
   50934:	add	r2, ip, #1
   50938:	str	sl, [r5, ip, lsl #2]
   5093c:	add	r7, r7, #1
   50940:	add	lr, lr, r8
   50944:	cmp	r7, r9
   50948:	beq	50970 <Mat_VarAddStructField+0x12c>
   5094c:	cmp	r4, #0
   50950:	beq	50968 <Mat_VarAddStructField+0x124>
   50954:	mov	ip, r2
   50958:	add	r2, r5, r2, lsl #2
   5095c:	add	fp, lr, r8
   50960:	mov	r3, lr
   50964:	b	50920 <Mat_VarAddStructField+0xdc>
   50968:	mov	ip, r2
   5096c:	b	50934 <Mat_VarAddStructField+0xf0>
   50970:	bl	14e0 <free@plt>
   50974:	str	r5, [r6, #40]	; 0x28
   50978:	mov	r0, #0
   5097c:	add	sp, sp, #12
   50980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   50984:	mvn	r0, #0
   50988:	b	5097c <Mat_VarAddStructField+0x138>
   5098c:	mvn	r0, #0
   50990:	b	5097c <Mat_VarAddStructField+0x138>

00050994 <Mat_VarGetNumberOfFields>:
   50994:	cmp	r0, #0
   50998:	beq	509c4 <Mat_VarGetNumberOfFields+0x30>
   5099c:	ldr	r3, [r0, #16]
   509a0:	cmp	r3, #2
   509a4:	beq	509b0 <Mat_VarGetNumberOfFields+0x1c>
   509a8:	mov	r0, #0
   509ac:	bx	lr
   509b0:	ldr	r3, [r0, #52]	; 0x34
   509b4:	cmp	r3, #0
   509b8:	beq	509cc <Mat_VarGetNumberOfFields+0x38>
   509bc:	ldr	r0, [r3, #4]
   509c0:	bx	lr
   509c4:	mov	r0, #0
   509c8:	bx	lr
   509cc:	mov	r0, #0
   509d0:	bx	lr

000509d4 <Mat_VarGetStructFieldnames>:
   509d4:	cmp	r0, #0
   509d8:	beq	509fc <Mat_VarGetStructFieldnames+0x28>
   509dc:	ldr	r3, [r0, #16]
   509e0:	cmp	r3, #2
   509e4:	bne	50a04 <Mat_VarGetStructFieldnames+0x30>
   509e8:	ldr	r3, [r0, #52]	; 0x34
   509ec:	cmp	r3, #0
   509f0:	beq	50a0c <Mat_VarGetStructFieldnames+0x38>
   509f4:	ldr	r0, [r3, #8]
   509f8:	bx	lr
   509fc:	mov	r0, #0
   50a00:	bx	lr
   50a04:	mov	r0, #0
   50a08:	bx	lr
   50a0c:	mov	r0, #0
   50a10:	bx	lr

00050a14 <Mat_VarGetStructFieldByIndex>:
   50a14:	push	{r4, r5, r6, lr}
   50a18:	sub	sp, sp, #8
   50a1c:	mov	r3, #1
   50a20:	str	r3, [sp, #4]
   50a24:	subs	r4, r0, #0
   50a28:	beq	50ad4 <Mat_VarGetStructFieldByIndex+0xc0>
   50a2c:	ldr	r3, [r4, #16]
   50a30:	cmp	r3, #2
   50a34:	movne	r0, #0
   50a38:	bne	50aa4 <Mat_VarGetStructFieldByIndex+0x90>
   50a3c:	ldr	r3, [r4, #12]
   50a40:	cmp	r3, #0
   50a44:	moveq	r0, #0
   50a48:	beq	50aa4 <Mat_VarGetStructFieldByIndex+0x90>
   50a4c:	mov	r5, r2
   50a50:	mov	r6, r1
   50a54:	add	r1, sp, #4
   50a58:	mov	r0, r4
   50a5c:	bl	4d06c <SafeMulDims>
   50a60:	ldr	r3, [r4, #52]	; 0x34
   50a64:	ldr	r2, [r3, #4]
   50a68:	ldr	r3, [sp, #4]
   50a6c:	cmp	r3, r5
   50a70:	movhi	r1, #0
   50a74:	movls	r1, #1
   50a78:	cmp	r3, #0
   50a7c:	moveq	r1, #0
   50a80:	cmp	r1, #0
   50a84:	bne	50aac <Mat_VarGetStructFieldByIndex+0x98>
   50a88:	cmp	r2, #0
   50a8c:	beq	50adc <Mat_VarGetStructFieldByIndex+0xc8>
   50a90:	cmp	r2, r6
   50a94:	bcc	50ac0 <Mat_VarGetStructFieldByIndex+0xac>
   50a98:	mla	r5, r5, r2, r6
   50a9c:	ldr	r3, [r4, #40]	; 0x28
   50aa0:	ldr	r0, [r3, r5, lsl #2]
   50aa4:	add	sp, sp, #8
   50aa8:	pop	{r4, r5, r6, pc}
   50aac:	ldr	r0, [pc, #48]	; 50ae4 <Mat_VarGetStructFieldByIndex+0xd0>
   50ab0:	add	r0, pc, r0
   50ab4:	bl	1690 <Mat_Critical@plt>
   50ab8:	mov	r0, #0
   50abc:	b	50aa4 <Mat_VarGetStructFieldByIndex+0x90>
   50ac0:	ldr	r0, [pc, #32]	; 50ae8 <Mat_VarGetStructFieldByIndex+0xd4>
   50ac4:	add	r0, pc, r0
   50ac8:	bl	1690 <Mat_Critical@plt>
   50acc:	mov	r0, #0
   50ad0:	b	50aa4 <Mat_VarGetStructFieldByIndex+0x90>
   50ad4:	mov	r0, r4
   50ad8:	b	50aa4 <Mat_VarGetStructFieldByIndex+0x90>
   50adc:	mov	r0, #0
   50ae0:	b	50aa4 <Mat_VarGetStructFieldByIndex+0x90>
   50ae4:	.word	0x000024e8
   50ae8:	.word	0x0000250c

00050aec <Mat_VarGetStructFieldByName>:
   50aec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   50af0:	sub	sp, sp, #8
   50af4:	mov	r3, #1
   50af8:	str	r3, [sp, #4]
   50afc:	subs	r7, r0, #0
   50b00:	beq	50bc0 <Mat_VarGetStructFieldByName+0xd4>
   50b04:	ldr	r3, [r7, #16]
   50b08:	cmp	r3, #2
   50b0c:	movne	r0, #0
   50b10:	bne	50bb8 <Mat_VarGetStructFieldByName+0xcc>
   50b14:	ldr	r3, [r7, #12]
   50b18:	cmp	r3, #0
   50b1c:	moveq	r0, #0
   50b20:	beq	50bb8 <Mat_VarGetStructFieldByName+0xcc>
   50b24:	mov	sl, r2
   50b28:	mov	r6, r1
   50b2c:	add	r1, sp, #4
   50b30:	mov	r0, r7
   50b34:	bl	4d06c <SafeMulDims>
   50b38:	ldr	r3, [r7, #52]	; 0x34
   50b3c:	ldr	r9, [r3, #4]
   50b40:	mov	r8, r9
   50b44:	cmp	r9, #0
   50b48:	ble	50b78 <Mat_VarGetStructFieldByName+0x8c>
   50b4c:	ldr	r5, [r3, #8]
   50b50:	sub	r5, r5, #4
   50b54:	mov	r4, #0
   50b58:	mov	r1, r6
   50b5c:	ldr	r0, [r5, #4]!
   50b60:	bl	148c <strcmp@plt>
   50b64:	cmp	r0, #0
   50b68:	beq	50b98 <Mat_VarGetStructFieldByName+0xac>
   50b6c:	add	r4, r4, #1
   50b70:	cmp	r8, r4
   50b74:	bne	50b58 <Mat_VarGetStructFieldByName+0x6c>
   50b78:	ldr	r3, [sp, #4]
   50b7c:	cmp	sl, r3
   50b80:	bcc	50bc8 <Mat_VarGetStructFieldByName+0xdc>
   50b84:	ldr	r0, [pc, #68]	; 50bd0 <Mat_VarGetStructFieldByName+0xe4>
   50b88:	add	r0, pc, r0
   50b8c:	bl	1690 <Mat_Critical@plt>
   50b90:	mov	r0, #0
   50b94:	b	50bb8 <Mat_VarGetStructFieldByName+0xcc>
   50b98:	ldr	r3, [sp, #4]
   50b9c:	cmp	r3, sl
   50ba0:	bls	50b84 <Mat_VarGetStructFieldByName+0x98>
   50ba4:	cmp	r4, #0
   50ba8:	movlt	r0, #0
   50bac:	mlage	r4, sl, r9, r4
   50bb0:	ldrge	r3, [r7, #40]	; 0x28
   50bb4:	ldrge	r0, [r3, r4, lsl #2]
   50bb8:	add	sp, sp, #8
   50bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   50bc0:	mov	r0, r7
   50bc4:	b	50bb8 <Mat_VarGetStructFieldByName+0xcc>
   50bc8:	mov	r0, #0
   50bcc:	b	50bb8 <Mat_VarGetStructFieldByName+0xcc>
   50bd0:	.word	0x00002410

00050bd4 <Mat_VarGetStructField>:
   50bd4:	push	{r4, r5, r6, r7, lr}
   50bd8:	sub	sp, sp, #12
   50bdc:	mov	r5, r0
   50be0:	mov	r6, r1
   50be4:	mov	r7, r2
   50be8:	mov	r4, r3
   50bec:	add	r1, sp, #8
   50bf0:	mov	r3, #1
   50bf4:	str	r3, [r1, #-4]!
   50bf8:	bl	4d06c <SafeMulDims>
   50bfc:	cmp	r4, #0
   50c00:	movlt	r0, #0
   50c04:	blt	50c68 <Mat_VarGetStructField+0x94>
   50c08:	ldr	r3, [sp, #4]
   50c0c:	cmp	r3, #0
   50c10:	beq	50c20 <Mat_VarGetStructField+0x4c>
   50c14:	cmp	r3, r4
   50c18:	movls	r0, #0
   50c1c:	bls	50c68 <Mat_VarGetStructField+0x94>
   50c20:	ldr	r3, [r5, #52]	; 0x34
   50c24:	ldr	r3, [r3, #4]
   50c28:	cmp	r3, #0
   50c2c:	movle	r3, #0
   50c30:	movgt	r3, #1
   50c34:	cmp	r7, #2
   50c38:	movne	r2, #0
   50c3c:	andeq	r2, r3, #1
   50c40:	cmp	r2, #0
   50c44:	beq	50c70 <Mat_VarGetStructField+0x9c>
   50c48:	ldr	r1, [r6]
   50c4c:	cmp	r1, #0
   50c50:	moveq	r0, #0
   50c54:	beq	50c68 <Mat_VarGetStructField+0x94>
   50c58:	mov	r2, r4
   50c5c:	sub	r1, r1, #1
   50c60:	mov	r0, r5
   50c64:	bl	16fc <Mat_VarGetStructFieldByIndex@plt>
   50c68:	add	sp, sp, #12
   50c6c:	pop	{r4, r5, r6, r7, pc}
   50c70:	cmp	r7, #1
   50c74:	movne	r3, #0
   50c78:	andeq	r3, r3, #1
   50c7c:	cmp	r3, #0
   50c80:	moveq	r0, #0
   50c84:	beq	50c68 <Mat_VarGetStructField+0x94>
   50c88:	mov	r2, r4
   50c8c:	mov	r1, r6
   50c90:	mov	r0, r5
   50c94:	bl	16e4 <Mat_VarGetStructFieldByName@plt>
   50c98:	b	50c68 <Mat_VarGetStructField+0x94>

00050c9c <Mat_VarGetStructs>:
   50c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   50ca0:	sub	sp, sp, #172	; 0xac
   50ca4:	mov	r4, r0
   50ca8:	mov	r6, r1
   50cac:	str	r1, [sp, #40]	; 0x28
   50cb0:	mov	r7, r2
   50cb4:	str	r2, [sp, #8]
   50cb8:	mov	r8, r3
   50cbc:	str	r3, [sp, #4]
   50cc0:	ldr	sl, [sp, #208]	; 0xd0
   50cc4:	mov	r5, #40	; 0x28
   50cc8:	mov	r2, r5
   50ccc:	mov	r1, #0
   50cd0:	add	r0, sp, #128	; 0x80
   50cd4:	bl	166c <memset@plt>
   50cd8:	mov	r2, r5
   50cdc:	mov	r1, #0
   50ce0:	add	r0, sp, #88	; 0x58
   50ce4:	bl	166c <memset@plt>
   50ce8:	mov	r2, r5
   50cec:	mov	r1, #0
   50cf0:	add	r0, sp, #48	; 0x30
   50cf4:	bl	166c <memset@plt>
   50cf8:	cmp	r6, #0
   50cfc:	cmpne	r4, #0
   50d00:	beq	50fec <Mat_VarGetStructs+0x350>
   50d04:	cmp	r8, #0
   50d08:	cmpne	r7, #0
   50d0c:	beq	51000 <Mat_VarGetStructs+0x364>
   50d10:	ldr	r3, [r4, #4]
   50d14:	cmp	r3, #9
   50d18:	bgt	5100c <Mat_VarGetStructs+0x370>
   50d1c:	ldr	r3, [r4, #16]
   50d20:	cmp	r3, #2
   50d24:	movne	r3, #0
   50d28:	strne	r3, [sp, #36]	; 0x24
   50d2c:	bne	50ff4 <Mat_VarGetStructs+0x358>
   50d30:	mov	r1, #0
   50d34:	mov	r0, r4
   50d38:	bl	172c <Mat_VarDuplicate@plt>
   50d3c:	str	r0, [sp, #36]	; 0x24
   50d40:	cmp	sl, #0
   50d44:	moveq	r3, #1
   50d48:	streq	r3, [r0, #44]	; 0x2c
   50d4c:	ldr	r3, [r4, #52]	; 0x34
   50d50:	ldr	fp, [r3, #4]
   50d54:	ldr	r3, [r4, #32]
   50d58:	ldr	r3, [r3]
   50d5c:	str	r3, [sp, #48]	; 0x30
   50d60:	ldr	r5, [sp, #4]
   50d64:	ldr	r3, [r5]
   50d68:	mov	r8, r3
   50d6c:	str	r3, [sp, #32]
   50d70:	ldr	r0, [sp, #40]	; 0x28
   50d74:	ldr	r3, [r0]
   50d78:	ldr	r9, [sp, #36]	; 0x24
   50d7c:	ldr	r2, [r9, #32]
   50d80:	str	r8, [r2]
   50d84:	ldr	r2, [r0]
   50d88:	str	r2, [sp, #128]	; 0x80
   50d8c:	ldr	r2, [r4, #4]
   50d90:	cmp	r2, #1
   50d94:	ble	50dec <Mat_VarGetStructs+0x150>
   50d98:	add	r7, r0, #4
   50d9c:	add	r6, sp, #132	; 0x84
   50da0:	add	r0, sp, #48	; 0x30
   50da4:	mov	r2, #1
   50da8:	ldr	ip, [r7], #4
   50dac:	str	ip, [r6], #4
   50db0:	ldr	lr, [r0]
   50db4:	ldr	r1, [r4, #32]
   50db8:	ldr	r1, [r1, r2, lsl #2]
   50dbc:	mul	r1, lr, r1
   50dc0:	str	r1, [r0, #4]!
   50dc4:	ldr	r1, [r5, #4]!
   50dc8:	mul	r8, r1, r8
   50dcc:	mla	r3, lr, ip, r3
   50dd0:	ldr	ip, [r9, #32]
   50dd4:	str	r1, [ip, r2, lsl #2]
   50dd8:	add	r2, r2, #1
   50ddc:	ldr	r1, [r4, #4]
   50de0:	cmp	r1, r2
   50de4:	bgt	50da8 <Mat_VarGetStructs+0x10c>
   50de8:	str	r8, [sp, #32]
   50dec:	mul	r7, r3, fp
   50df0:	lsl	r3, fp, #2
   50df4:	str	r3, [sp, #12]
   50df8:	ldr	r5, [sp, #32]
   50dfc:	mul	r0, r3, r5
   50e00:	ldr	r6, [sp, #36]	; 0x24
   50e04:	str	r0, [r6]
   50e08:	bl	15ac <malloc@plt>
   50e0c:	mov	r3, r0
   50e10:	str	r0, [sp, #44]	; 0x2c
   50e14:	mov	r2, r6
   50e18:	str	r0, [r2, #40]	; 0x28
   50e1c:	cmp	r0, #0
   50e20:	beq	50e38 <Mat_VarGetStructs+0x19c>
   50e24:	cmp	r5, #0
   50e28:	movne	r3, #0
   50e2c:	strne	r3, [sp, #20]
   50e30:	bne	50fc4 <Mat_VarGetStructs+0x328>
   50e34:	b	50ff4 <Mat_VarGetStructs+0x358>
   50e38:	ldr	r0, [sp, #36]	; 0x24
   50e3c:	bl	15f4 <Mat_VarFree@plt>
   50e40:	mov	r3, #0
   50e44:	str	r3, [sp, #36]	; 0x24
   50e48:	b	50ff4 <Mat_VarGetStructs+0x358>
   50e4c:	ldr	r3, [r4, #40]	; 0x28
   50e50:	mov	r1, #1
   50e54:	ldr	r0, [r3, r9]
   50e58:	bl	172c <Mat_VarDuplicate@plt>
   50e5c:	str	r0, [r6, r5, lsl #2]
   50e60:	add	r5, r5, #1
   50e64:	add	r9, r9, #4
   50e68:	cmp	fp, r5
   50e6c:	beq	50e88 <Mat_VarGetStructs+0x1ec>
   50e70:	cmp	sl, #0
   50e74:	bne	50e4c <Mat_VarGetStructs+0x1b0>
   50e78:	ldr	r3, [r4, #40]	; 0x28
   50e7c:	ldr	r3, [r3, r9]
   50e80:	str	r3, [r6, r5, lsl #2]
   50e84:	b	50e60 <Mat_VarGetStructs+0x1c4>
   50e88:	add	r7, r7, r5
   50e8c:	ldr	r3, [sp, #8]
   50e90:	ldr	r3, [r3]
   50e94:	sub	r3, r3, #1
   50e98:	mla	r7, fp, r3, r7
   50e9c:	add	r8, r8, #1
   50ea0:	ldr	r3, [sp, #4]
   50ea4:	ldr	ip, [r3]
   50ea8:	ldr	r3, [sp, #12]
   50eac:	add	r6, r6, r3
   50eb0:	cmp	ip, r8
   50eb4:	ble	50ecc <Mat_VarGetStructs+0x230>
   50eb8:	cmp	fp, #0
   50ebc:	beq	50e8c <Mat_VarGetStructs+0x1f0>
   50ec0:	lsl	r9, r7, #2
   50ec4:	mov	r5, #0
   50ec8:	b	50e70 <Mat_VarGetStructs+0x1d4>
   50ecc:	ldr	r7, [sp, #40]	; 0x28
   50ed0:	ldr	r3, [r7]
   50ed4:	str	r3, [sp, #128]	; 0x80
   50ed8:	ldr	r2, [sp, #92]	; 0x5c
   50edc:	add	r2, r2, #1
   50ee0:	str	r2, [sp, #92]	; 0x5c
   50ee4:	ldr	lr, [sp, #8]
   50ee8:	ldr	r1, [lr, #4]
   50eec:	ldr	r2, [sp, #132]	; 0x84
   50ef0:	add	r2, r2, r1
   50ef4:	str	r2, [sp, #132]	; 0x84
   50ef8:	ldr	r9, [r4, #4]
   50efc:	cmp	r9, #1
   50f00:	ble	50fa8 <Mat_VarGetStructs+0x30c>
   50f04:	add	r2, sp, #92	; 0x5c
   50f08:	ldr	r6, [sp, #4]
   50f0c:	add	r0, sp, #132	; 0x84
   50f10:	add	r5, sp, #44	; 0x2c
   50f14:	add	lr, lr, #8
   50f18:	mov	r1, #1
   50f1c:	sub	r8, r9, #1
   50f20:	str	r8, [sp, #16]
   50f24:	str	fp, [sp, #24]
   50f28:	str	ip, [sp, #28]
   50f2c:	mov	ip, r7
   50f30:	b	50f54 <Mat_VarGetStructs+0x2b8>
   50f34:	ldr	r7, [r0], #4
   50f38:	ldr	r8, [r5, #4]!
   50f3c:	mla	r3, r8, r7, r3
   50f40:	add	r1, r1, #1
   50f44:	add	r2, r2, #4
   50f48:	add	lr, lr, #4
   50f4c:	cmp	r1, r9
   50f50:	beq	50fa0 <Mat_VarGetStructs+0x304>
   50f54:	ldr	r8, [r2]
   50f58:	ldr	r7, [r6, #4]!
   50f5c:	cmp	r8, r7
   50f60:	bne	50f34 <Mat_VarGetStructs+0x298>
   50f64:	mov	r7, #0
   50f68:	str	r7, [r2]
   50f6c:	ldr	r7, [ip, r1, lsl #2]
   50f70:	str	r7, [r0]
   50f74:	ldr	r7, [sp, #16]
   50f78:	cmp	r7, r1
   50f7c:	ble	50f34 <Mat_VarGetStructs+0x298>
   50f80:	ldr	r7, [r2, #4]
   50f84:	add	r7, r7, #1
   50f88:	str	r7, [r2, #4]
   50f8c:	ldr	r7, [r0, #4]
   50f90:	ldr	r8, [lr]
   50f94:	add	r7, r7, r8
   50f98:	str	r7, [r0, #4]
   50f9c:	b	50f34 <Mat_VarGetStructs+0x298>
   50fa0:	ldr	fp, [sp, #24]
   50fa4:	ldr	ip, [sp, #28]
   50fa8:	mul	r7, r3, fp
   50fac:	ldr	r3, [sp, #20]
   50fb0:	add	r3, r3, ip
   50fb4:	str	r3, [sp, #20]
   50fb8:	ldr	r2, [sp, #32]
   50fbc:	cmp	r3, r2
   50fc0:	bcs	50ff4 <Mat_VarGetStructs+0x358>
   50fc4:	ldr	r3, [sp, #4]
   50fc8:	ldr	ip, [r3]
   50fcc:	cmp	ip, #0
   50fd0:	ble	50ecc <Mat_VarGetStructs+0x230>
   50fd4:	ldr	r3, [sp, #20]
   50fd8:	ldr	r2, [sp, #12]
   50fdc:	ldr	r1, [sp, #44]	; 0x2c
   50fe0:	mla	r6, r2, r3, r1
   50fe4:	mov	r8, #0
   50fe8:	b	50eb8 <Mat_VarGetStructs+0x21c>
   50fec:	mov	r3, #0
   50ff0:	str	r3, [sp, #36]	; 0x24
   50ff4:	ldr	r0, [sp, #36]	; 0x24
   50ff8:	add	sp, sp, #172	; 0xac
   50ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   51000:	mov	r3, #0
   51004:	str	r3, [sp, #36]	; 0x24
   51008:	b	50ff4 <Mat_VarGetStructs+0x358>
   5100c:	mov	r3, #0
   51010:	str	r3, [sp, #36]	; 0x24
   51014:	b	50ff4 <Mat_VarGetStructs+0x358>

00051018 <Mat_VarGetStructsLinear>:
   51018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5101c:	sub	sp, sp, #36	; 0x24
   51020:	subs	r7, r0, #0
   51024:	beq	511d0 <Mat_VarGetStructsLinear+0x1b8>
   51028:	ldr	r0, [r7, #4]
   5102c:	cmp	r0, #10
   51030:	bgt	511d8 <Mat_VarGetStructsLinear+0x1c0>
   51034:	str	r3, [sp]
   51038:	mov	r5, r2
   5103c:	mov	r4, r1
   51040:	mov	r1, #0
   51044:	mov	r0, r7
   51048:	bl	172c <Mat_VarDuplicate@plt>
   5104c:	str	r0, [sp, #28]
   51050:	ldr	r3, [sp, #72]	; 0x48
   51054:	cmp	r3, #0
   51058:	moveq	r3, #1
   5105c:	moveq	r2, r0
   51060:	streq	r3, [r2, #44]	; 0x2c
   51064:	ldr	r3, [r7, #52]	; 0x34
   51068:	ldr	r3, [r3, #4]
   5106c:	str	r3, [sp, #4]
   51070:	mov	r8, r3
   51074:	ldr	r2, [sp]
   51078:	lsl	r0, r2, #2
   5107c:	mul	r0, r3, r0
   51080:	ldr	r6, [sp, #28]
   51084:	str	r0, [r6]
   51088:	bl	15ac <malloc@plt>
   5108c:	str	r0, [r6, #40]	; 0x28
   51090:	cmp	r0, #0
   51094:	beq	510f4 <Mat_VarGetStructsLinear+0xdc>
   51098:	ldr	r1, [sp, #28]
   5109c:	ldr	r3, [r1, #32]
   510a0:	ldr	r0, [sp]
   510a4:	str	r0, [r3]
   510a8:	ldr	r3, [r1, #32]
   510ac:	mov	r2, #1
   510b0:	str	r2, [r3, #4]
   510b4:	ldr	r3, [r1, #40]	; 0x28
   510b8:	ldr	r2, [sp, #4]
   510bc:	mul	r1, r4, r2
   510c0:	cmp	r0, #0
   510c4:	ble	511e0 <Mat_VarGetStructsLinear+0x1c8>
   510c8:	sub	r5, r5, #1
   510cc:	mul	r0, r2, r5
   510d0:	str	r0, [sp, #8]
   510d4:	lsl	r2, r2, #2
   510d8:	str	r2, [sp, #12]
   510dc:	str	r3, [sp, #16]
   510e0:	str	r2, [sp, #24]
   510e4:	mov	fp, r3
   510e8:	mov	sl, #0
   510ec:	mov	r9, sl
   510f0:	b	5117c <Mat_VarGetStructsLinear+0x164>
   510f4:	ldr	r0, [sp, #28]
   510f8:	bl	15f4 <Mat_VarFree@plt>
   510fc:	mov	r3, #0
   51100:	str	r3, [sp, #28]
   51104:	b	511e0 <Mat_VarGetStructsLinear+0x1c8>
   51108:	cmp	r8, #0
   5110c:	ble	51158 <Mat_VarGetStructsLinear+0x140>
   51110:	str	r1, [sp, #20]
   51114:	ldr	r3, [sp, #16]
   51118:	rsb	r1, r3, r1, lsl #2
   5111c:	sub	r4, r1, sl
   51120:	mov	r6, fp
   51124:	mov	r5, #0
   51128:	ldr	r3, [r7, #40]	; 0x28
   5112c:	add	r3, r3, r4
   51130:	mov	r1, #1
   51134:	ldr	r0, [r3, r6]
   51138:	bl	172c <Mat_VarDuplicate@plt>
   5113c:	str	r0, [r6], #4
   51140:	add	r5, r5, #1
   51144:	cmp	r8, r5
   51148:	bne	51128 <Mat_VarGetStructsLinear+0x110>
   5114c:	ldr	r3, [sp, #20]
   51150:	ldr	r2, [sp, #4]
   51154:	add	r1, r3, r2
   51158:	ldr	r3, [sp, #8]
   5115c:	add	r1, r1, r3
   51160:	add	r9, r9, #1
   51164:	ldr	r3, [sp, #12]
   51168:	add	fp, fp, r3
   5116c:	add	sl, sl, r3
   51170:	ldr	r3, [sp]
   51174:	cmp	r3, r9
   51178:	beq	511e0 <Mat_VarGetStructsLinear+0x1c8>
   5117c:	ldr	r3, [sp, #72]	; 0x48
   51180:	cmp	r3, #0
   51184:	bne	51108 <Mat_VarGetStructsLinear+0xf0>
   51188:	cmp	r8, #0
   5118c:	ble	51158 <Mat_VarGetStructsLinear+0x140>
   51190:	ldr	r3, [sp, #24]
   51194:	add	r0, fp, r3
   51198:	mov	ip, r1
   5119c:	ldr	r3, [sp, #16]
   511a0:	rsb	r1, r3, r1, lsl #2
   511a4:	sub	r1, r1, sl
   511a8:	mov	r3, fp
   511ac:	ldr	r2, [r7, #40]	; 0x28
   511b0:	add	r2, r2, r3
   511b4:	ldr	r2, [r2, r1]
   511b8:	str	r2, [r3], #4
   511bc:	cmp	r3, r0
   511c0:	bne	511ac <Mat_VarGetStructsLinear+0x194>
   511c4:	ldr	r3, [sp, #4]
   511c8:	add	r1, r3, ip
   511cc:	b	51158 <Mat_VarGetStructsLinear+0x140>
   511d0:	str	r7, [sp, #28]
   511d4:	b	511e0 <Mat_VarGetStructsLinear+0x1c8>
   511d8:	mov	r3, #0
   511dc:	str	r3, [sp, #28]
   511e0:	ldr	r0, [sp, #28]
   511e4:	add	sp, sp, #36	; 0x24
   511e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000511ec <Mat_VarSetStructFieldByIndex>:
   511ec:	push	{r4, r5, r6, r7, lr}
   511f0:	sub	sp, sp, #12
   511f4:	mov	ip, #1
   511f8:	str	ip, [sp, #4]
   511fc:	subs	r4, r0, #0
   51200:	beq	51290 <Mat_VarSetStructFieldByIndex+0xa4>
   51204:	ldr	ip, [r4, #16]
   51208:	cmp	ip, #2
   5120c:	movne	r7, #0
   51210:	bne	51284 <Mat_VarSetStructFieldByIndex+0x98>
   51214:	ldr	ip, [r4, #40]	; 0x28
   51218:	cmp	ip, #0
   5121c:	beq	51298 <Mat_VarSetStructFieldByIndex+0xac>
   51220:	mov	r6, r3
   51224:	mov	r7, r2
   51228:	mov	r5, r1
   5122c:	add	r1, sp, #4
   51230:	mov	r0, r4
   51234:	bl	4d06c <SafeMulDims>
   51238:	ldr	r3, [r4, #52]	; 0x34
   5123c:	ldr	r3, [r3, #4]
   51240:	ldr	r2, [sp, #4]
   51244:	cmp	r2, r7
   51248:	cmphi	r3, r5
   5124c:	bls	512a0 <Mat_VarSetStructFieldByIndex+0xb4>
   51250:	mla	r3, r7, r3, r5
   51254:	ldr	r2, [r4, #40]	; 0x28
   51258:	ldr	r7, [r2, r3, lsl #2]
   5125c:	str	r6, [r2, r3, lsl #2]
   51260:	ldr	r0, [r6, #36]	; 0x24
   51264:	cmp	r0, #0
   51268:	beq	51270 <Mat_VarSetStructFieldByIndex+0x84>
   5126c:	bl	14e0 <free@plt>
   51270:	ldr	r3, [r4, #52]	; 0x34
   51274:	ldr	r3, [r3, #8]
   51278:	ldr	r0, [r3, r5, lsl #2]
   5127c:	bl	1534 <strdup@plt>
   51280:	str	r0, [r6, #36]	; 0x24
   51284:	mov	r0, r7
   51288:	add	sp, sp, #12
   5128c:	pop	{r4, r5, r6, r7, pc}
   51290:	mov	r7, r4
   51294:	b	51284 <Mat_VarSetStructFieldByIndex+0x98>
   51298:	mov	r7, #0
   5129c:	b	51284 <Mat_VarSetStructFieldByIndex+0x98>
   512a0:	mov	r7, #0
   512a4:	b	51284 <Mat_VarSetStructFieldByIndex+0x98>

000512a8 <Mat_VarSetStructFieldByName>:
   512a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   512ac:	sub	sp, sp, #12
   512b0:	mov	ip, #1
   512b4:	str	ip, [sp, #4]
   512b8:	subs	r8, r0, #0
   512bc:	beq	513a4 <Mat_VarSetStructFieldByName+0xfc>
   512c0:	ldr	r0, [r8, #16]
   512c4:	cmp	r0, #2
   512c8:	movne	r5, #0
   512cc:	bne	51398 <Mat_VarSetStructFieldByName+0xf0>
   512d0:	ldr	r0, [r8, #40]	; 0x28
   512d4:	cmp	r0, #0
   512d8:	beq	513ac <Mat_VarSetStructFieldByName+0x104>
   512dc:	mov	sl, r3
   512e0:	mov	fp, r2
   512e4:	mov	r6, r1
   512e8:	add	r1, sp, #4
   512ec:	mov	r0, r8
   512f0:	bl	4d06c <SafeMulDims>
   512f4:	ldr	r3, [r8, #52]	; 0x34
   512f8:	ldr	r9, [r3, #4]
   512fc:	mov	r7, r9
   51300:	cmp	r9, #0
   51304:	ble	513b4 <Mat_VarSetStructFieldByName+0x10c>
   51308:	ldr	r5, [r3, #8]
   5130c:	sub	r5, r5, #4
   51310:	mov	r4, #0
   51314:	mov	r1, r6
   51318:	ldr	r0, [r5, #4]!
   5131c:	bl	148c <strcmp@plt>
   51320:	cmp	r0, #0
   51324:	beq	5133c <Mat_VarSetStructFieldByName+0x94>
   51328:	add	r4, r4, #1
   5132c:	cmp	r7, r4
   51330:	bne	51314 <Mat_VarSetStructFieldByName+0x6c>
   51334:	mov	r5, #0
   51338:	b	51398 <Mat_VarSetStructFieldByName+0xf0>
   5133c:	ldr	r3, [sp, #4]
   51340:	cmp	r3, fp
   51344:	movls	r3, #0
   51348:	movhi	r3, #1
   5134c:	cmp	r4, #0
   51350:	movlt	r3, #0
   51354:	cmp	r3, #0
   51358:	moveq	r5, #0
   5135c:	beq	51398 <Mat_VarSetStructFieldByName+0xf0>
   51360:	mov	r6, r4
   51364:	mla	r4, fp, r9, r4
   51368:	ldr	r3, [r8, #40]	; 0x28
   5136c:	ldr	r5, [r3, r4, lsl #2]
   51370:	str	sl, [r3, r4, lsl #2]
   51374:	ldr	r0, [sl, #36]	; 0x24
   51378:	cmp	r0, #0
   5137c:	beq	51384 <Mat_VarSetStructFieldByName+0xdc>
   51380:	bl	14e0 <free@plt>
   51384:	ldr	r3, [r8, #52]	; 0x34
   51388:	ldr	r3, [r3, #8]
   5138c:	ldr	r0, [r3, r6, lsl #2]
   51390:	bl	1534 <strdup@plt>
   51394:	str	r0, [sl, #36]	; 0x24
   51398:	mov	r0, r5
   5139c:	add	sp, sp, #12
   513a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   513a4:	mov	r5, r8
   513a8:	b	51398 <Mat_VarSetStructFieldByName+0xf0>
   513ac:	mov	r5, #0
   513b0:	b	51398 <Mat_VarSetStructFieldByName+0xf0>
   513b4:	mov	r5, #0
   513b8:	b	51398 <Mat_VarSetStructFieldByName+0xf0>

000513bc <__udivsi3>:
   513bc:	subs	r2, r1, #1
   513c0:	bxeq	lr
   513c4:	bcc	5159c <__udivsi3+0x1e0>
   513c8:	cmp	r0, r1
   513cc:	bls	51580 <__udivsi3+0x1c4>
   513d0:	tst	r1, r2
   513d4:	beq	5158c <__udivsi3+0x1d0>
   513d8:	clz	r3, r0
   513dc:	clz	r2, r1
   513e0:	sub	r3, r2, r3
   513e4:	rsbs	r3, r3, #31
   513e8:	addne	r3, r3, r3, lsl #1
   513ec:	mov	r2, #0
   513f0:	addne	pc, pc, r3, lsl #2
   513f4:	nop			; (mov r0, r0)
   513f8:	cmp	r0, r1, lsl #31
   513fc:	adc	r2, r2, r2
   51400:	subcs	r0, r0, r1, lsl #31
   51404:	cmp	r0, r1, lsl #30
   51408:	adc	r2, r2, r2
   5140c:	subcs	r0, r0, r1, lsl #30
   51410:	cmp	r0, r1, lsl #29
   51414:	adc	r2, r2, r2
   51418:	subcs	r0, r0, r1, lsl #29
   5141c:	cmp	r0, r1, lsl #28
   51420:	adc	r2, r2, r2
   51424:	subcs	r0, r0, r1, lsl #28
   51428:	cmp	r0, r1, lsl #27
   5142c:	adc	r2, r2, r2
   51430:	subcs	r0, r0, r1, lsl #27
   51434:	cmp	r0, r1, lsl #26
   51438:	adc	r2, r2, r2
   5143c:	subcs	r0, r0, r1, lsl #26
   51440:	cmp	r0, r1, lsl #25
   51444:	adc	r2, r2, r2
   51448:	subcs	r0, r0, r1, lsl #25
   5144c:	cmp	r0, r1, lsl #24
   51450:	adc	r2, r2, r2
   51454:	subcs	r0, r0, r1, lsl #24
   51458:	cmp	r0, r1, lsl #23
   5145c:	adc	r2, r2, r2
   51460:	subcs	r0, r0, r1, lsl #23
   51464:	cmp	r0, r1, lsl #22
   51468:	adc	r2, r2, r2
   5146c:	subcs	r0, r0, r1, lsl #22
   51470:	cmp	r0, r1, lsl #21
   51474:	adc	r2, r2, r2
   51478:	subcs	r0, r0, r1, lsl #21
   5147c:	cmp	r0, r1, lsl #20
   51480:	adc	r2, r2, r2
   51484:	subcs	r0, r0, r1, lsl #20
   51488:	cmp	r0, r1, lsl #19
   5148c:	adc	r2, r2, r2
   51490:	subcs	r0, r0, r1, lsl #19
   51494:	cmp	r0, r1, lsl #18
   51498:	adc	r2, r2, r2
   5149c:	subcs	r0, r0, r1, lsl #18
   514a0:	cmp	r0, r1, lsl #17
   514a4:	adc	r2, r2, r2
   514a8:	subcs	r0, r0, r1, lsl #17
   514ac:	cmp	r0, r1, lsl #16
   514b0:	adc	r2, r2, r2
   514b4:	subcs	r0, r0, r1, lsl #16
   514b8:	cmp	r0, r1, lsl #15
   514bc:	adc	r2, r2, r2
   514c0:	subcs	r0, r0, r1, lsl #15
   514c4:	cmp	r0, r1, lsl #14
   514c8:	adc	r2, r2, r2
   514cc:	subcs	r0, r0, r1, lsl #14
   514d0:	cmp	r0, r1, lsl #13
   514d4:	adc	r2, r2, r2
   514d8:	subcs	r0, r0, r1, lsl #13
   514dc:	cmp	r0, r1, lsl #12
   514e0:	adc	r2, r2, r2
   514e4:	subcs	r0, r0, r1, lsl #12
   514e8:	cmp	r0, r1, lsl #11
   514ec:	adc	r2, r2, r2
   514f0:	subcs	r0, r0, r1, lsl #11
   514f4:	cmp	r0, r1, lsl #10
   514f8:	adc	r2, r2, r2
   514fc:	subcs	r0, r0, r1, lsl #10
   51500:	cmp	r0, r1, lsl #9
   51504:	adc	r2, r2, r2
   51508:	subcs	r0, r0, r1, lsl #9
   5150c:	cmp	r0, r1, lsl #8
   51510:	adc	r2, r2, r2
   51514:	subcs	r0, r0, r1, lsl #8
   51518:	cmp	r0, r1, lsl #7
   5151c:	adc	r2, r2, r2
   51520:	subcs	r0, r0, r1, lsl #7
   51524:	cmp	r0, r1, lsl #6
   51528:	adc	r2, r2, r2
   5152c:	subcs	r0, r0, r1, lsl #6
   51530:	cmp	r0, r1, lsl #5
   51534:	adc	r2, r2, r2
   51538:	subcs	r0, r0, r1, lsl #5
   5153c:	cmp	r0, r1, lsl #4
   51540:	adc	r2, r2, r2
   51544:	subcs	r0, r0, r1, lsl #4
   51548:	cmp	r0, r1, lsl #3
   5154c:	adc	r2, r2, r2
   51550:	subcs	r0, r0, r1, lsl #3
   51554:	cmp	r0, r1, lsl #2
   51558:	adc	r2, r2, r2
   5155c:	subcs	r0, r0, r1, lsl #2
   51560:	cmp	r0, r1, lsl #1
   51564:	adc	r2, r2, r2
   51568:	subcs	r0, r0, r1, lsl #1
   5156c:	cmp	r0, r1
   51570:	adc	r2, r2, r2
   51574:	subcs	r0, r0, r1
   51578:	mov	r0, r2
   5157c:	bx	lr
   51580:	moveq	r0, #1
   51584:	movne	r0, #0
   51588:	bx	lr
   5158c:	clz	r2, r1
   51590:	rsb	r2, r2, #31
   51594:	lsr	r0, r0, r2
   51598:	bx	lr
   5159c:	cmp	r0, #0
   515a0:	mvnne	r0, #0
   515a4:	b	51e10 <__aeabi_idiv0>

000515a8 <__aeabi_uidivmod>:
   515a8:	cmp	r1, #0
   515ac:	beq	5159c <__udivsi3+0x1e0>
   515b0:	push	{r0, r1, lr}
   515b4:	bl	513bc <__udivsi3>
   515b8:	pop	{r1, r2, lr}
   515bc:	mul	r3, r2, r0
   515c0:	sub	r1, r1, r3
   515c4:	bx	lr

000515c8 <__divsi3>:
   515c8:	cmp	r1, #0
   515cc:	beq	517d8 <.divsi3_skip_div0_test+0x208>

000515d0 <.divsi3_skip_div0_test>:
   515d0:	eor	ip, r0, r1
   515d4:	rsbmi	r1, r1, #0
   515d8:	subs	r2, r1, #1
   515dc:	beq	517a4 <.divsi3_skip_div0_test+0x1d4>
   515e0:	movs	r3, r0
   515e4:	rsbmi	r3, r0, #0
   515e8:	cmp	r3, r1
   515ec:	bls	517b0 <.divsi3_skip_div0_test+0x1e0>
   515f0:	tst	r1, r2
   515f4:	beq	517c0 <.divsi3_skip_div0_test+0x1f0>
   515f8:	clz	r2, r3
   515fc:	clz	r0, r1
   51600:	sub	r2, r0, r2
   51604:	rsbs	r2, r2, #31
   51608:	addne	r2, r2, r2, lsl #1
   5160c:	mov	r0, #0
   51610:	addne	pc, pc, r2, lsl #2
   51614:	nop			; (mov r0, r0)
   51618:	cmp	r3, r1, lsl #31
   5161c:	adc	r0, r0, r0
   51620:	subcs	r3, r3, r1, lsl #31
   51624:	cmp	r3, r1, lsl #30
   51628:	adc	r0, r0, r0
   5162c:	subcs	r3, r3, r1, lsl #30
   51630:	cmp	r3, r1, lsl #29
   51634:	adc	r0, r0, r0
   51638:	subcs	r3, r3, r1, lsl #29
   5163c:	cmp	r3, r1, lsl #28
   51640:	adc	r0, r0, r0
   51644:	subcs	r3, r3, r1, lsl #28
   51648:	cmp	r3, r1, lsl #27
   5164c:	adc	r0, r0, r0
   51650:	subcs	r3, r3, r1, lsl #27
   51654:	cmp	r3, r1, lsl #26
   51658:	adc	r0, r0, r0
   5165c:	subcs	r3, r3, r1, lsl #26
   51660:	cmp	r3, r1, lsl #25
   51664:	adc	r0, r0, r0
   51668:	subcs	r3, r3, r1, lsl #25
   5166c:	cmp	r3, r1, lsl #24
   51670:	adc	r0, r0, r0
   51674:	subcs	r3, r3, r1, lsl #24
   51678:	cmp	r3, r1, lsl #23
   5167c:	adc	r0, r0, r0
   51680:	subcs	r3, r3, r1, lsl #23
   51684:	cmp	r3, r1, lsl #22
   51688:	adc	r0, r0, r0
   5168c:	subcs	r3, r3, r1, lsl #22
   51690:	cmp	r3, r1, lsl #21
   51694:	adc	r0, r0, r0
   51698:	subcs	r3, r3, r1, lsl #21
   5169c:	cmp	r3, r1, lsl #20
   516a0:	adc	r0, r0, r0
   516a4:	subcs	r3, r3, r1, lsl #20
   516a8:	cmp	r3, r1, lsl #19
   516ac:	adc	r0, r0, r0
   516b0:	subcs	r3, r3, r1, lsl #19
   516b4:	cmp	r3, r1, lsl #18
   516b8:	adc	r0, r0, r0
   516bc:	subcs	r3, r3, r1, lsl #18
   516c0:	cmp	r3, r1, lsl #17
   516c4:	adc	r0, r0, r0
   516c8:	subcs	r3, r3, r1, lsl #17
   516cc:	cmp	r3, r1, lsl #16
   516d0:	adc	r0, r0, r0
   516d4:	subcs	r3, r3, r1, lsl #16
   516d8:	cmp	r3, r1, lsl #15
   516dc:	adc	r0, r0, r0
   516e0:	subcs	r3, r3, r1, lsl #15
   516e4:	cmp	r3, r1, lsl #14
   516e8:	adc	r0, r0, r0
   516ec:	subcs	r3, r3, r1, lsl #14
   516f0:	cmp	r3, r1, lsl #13
   516f4:	adc	r0, r0, r0
   516f8:	subcs	r3, r3, r1, lsl #13
   516fc:	cmp	r3, r1, lsl #12
   51700:	adc	r0, r0, r0
   51704:	subcs	r3, r3, r1, lsl #12
   51708:	cmp	r3, r1, lsl #11
   5170c:	adc	r0, r0, r0
   51710:	subcs	r3, r3, r1, lsl #11
   51714:	cmp	r3, r1, lsl #10
   51718:	adc	r0, r0, r0
   5171c:	subcs	r3, r3, r1, lsl #10
   51720:	cmp	r3, r1, lsl #9
   51724:	adc	r0, r0, r0
   51728:	subcs	r3, r3, r1, lsl #9
   5172c:	cmp	r3, r1, lsl #8
   51730:	adc	r0, r0, r0
   51734:	subcs	r3, r3, r1, lsl #8
   51738:	cmp	r3, r1, lsl #7
   5173c:	adc	r0, r0, r0
   51740:	subcs	r3, r3, r1, lsl #7
   51744:	cmp	r3, r1, lsl #6
   51748:	adc	r0, r0, r0
   5174c:	subcs	r3, r3, r1, lsl #6
   51750:	cmp	r3, r1, lsl #5
   51754:	adc	r0, r0, r0
   51758:	subcs	r3, r3, r1, lsl #5
   5175c:	cmp	r3, r1, lsl #4
   51760:	adc	r0, r0, r0
   51764:	subcs	r3, r3, r1, lsl #4
   51768:	cmp	r3, r1, lsl #3
   5176c:	adc	r0, r0, r0
   51770:	subcs	r3, r3, r1, lsl #3
   51774:	cmp	r3, r1, lsl #2
   51778:	adc	r0, r0, r0
   5177c:	subcs	r3, r3, r1, lsl #2
   51780:	cmp	r3, r1, lsl #1
   51784:	adc	r0, r0, r0
   51788:	subcs	r3, r3, r1, lsl #1
   5178c:	cmp	r3, r1
   51790:	adc	r0, r0, r0
   51794:	subcs	r3, r3, r1
   51798:	cmp	ip, #0
   5179c:	rsbmi	r0, r0, #0
   517a0:	bx	lr
   517a4:	teq	ip, r0
   517a8:	rsbmi	r0, r0, #0
   517ac:	bx	lr
   517b0:	movcc	r0, #0
   517b4:	asreq	r0, ip, #31
   517b8:	orreq	r0, r0, #1
   517bc:	bx	lr
   517c0:	clz	r2, r1
   517c4:	rsb	r2, r2, #31
   517c8:	cmp	ip, #0
   517cc:	lsr	r0, r3, r2
   517d0:	rsbmi	r0, r0, #0
   517d4:	bx	lr
   517d8:	cmp	r0, #0
   517dc:	mvngt	r0, #-2147483648	; 0x80000000
   517e0:	movlt	r0, #-2147483648	; 0x80000000
   517e4:	b	51e10 <__aeabi_idiv0>

000517e8 <__aeabi_idivmod>:
   517e8:	cmp	r1, #0
   517ec:	beq	517d8 <.divsi3_skip_div0_test+0x208>
   517f0:	push	{r0, r1, lr}
   517f4:	bl	515d0 <.divsi3_skip_div0_test>
   517f8:	pop	{r1, r2, lr}
   517fc:	mul	r3, r2, r0
   51800:	sub	r1, r1, r3
   51804:	bx	lr

00051808 <__aeabi_drsub>:
   51808:	eor	r1, r1, #-2147483648	; 0x80000000
   5180c:	b	51814 <__adddf3>

00051810 <__aeabi_dsub>:
   51810:	eor	r3, r3, #-2147483648	; 0x80000000

00051814 <__adddf3>:
   51814:	push	{r4, r5, lr}
   51818:	lsl	r4, r1, #1
   5181c:	lsl	r5, r3, #1
   51820:	teq	r4, r5
   51824:	teqeq	r0, r2
   51828:	orrsne	ip, r4, r0
   5182c:	orrsne	ip, r5, r2
   51830:	mvnsne	ip, r4, asr #21
   51834:	mvnsne	ip, r5, asr #21
   51838:	beq	51a24 <__adddf3+0x210>
   5183c:	lsr	r4, r4, #21
   51840:	rsbs	r5, r4, r5, lsr #21
   51844:	rsblt	r5, r5, #0
   51848:	ble	51868 <__adddf3+0x54>
   5184c:	add	r4, r4, r5
   51850:	eor	r2, r0, r2
   51854:	eor	r3, r1, r3
   51858:	eor	r0, r2, r0
   5185c:	eor	r1, r3, r1
   51860:	eor	r2, r0, r2
   51864:	eor	r3, r1, r3
   51868:	cmp	r5, #54	; 0x36
   5186c:	pophi	{r4, r5, pc}
   51870:	tst	r1, #-2147483648	; 0x80000000
   51874:	lsl	r1, r1, #12
   51878:	mov	ip, #1048576	; 0x100000
   5187c:	orr	r1, ip, r1, lsr #12
   51880:	beq	5188c <__adddf3+0x78>
   51884:	rsbs	r0, r0, #0
   51888:	rsc	r1, r1, #0
   5188c:	tst	r3, #-2147483648	; 0x80000000
   51890:	lsl	r3, r3, #12
   51894:	orr	r3, ip, r3, lsr #12
   51898:	beq	518a4 <__adddf3+0x90>
   5189c:	rsbs	r2, r2, #0
   518a0:	rsc	r3, r3, #0
   518a4:	teq	r4, r5
   518a8:	beq	51a0c <__adddf3+0x1f8>
   518ac:	sub	r4, r4, #1
   518b0:	rsbs	lr, r5, #32
   518b4:	blt	518d0 <__adddf3+0xbc>
   518b8:	lsl	ip, r2, lr
   518bc:	adds	r0, r0, r2, lsr r5
   518c0:	adc	r1, r1, #0
   518c4:	adds	r0, r0, r3, lsl lr
   518c8:	adcs	r1, r1, r3, asr r5
   518cc:	b	518ec <__adddf3+0xd8>
   518d0:	sub	r5, r5, #32
   518d4:	add	lr, lr, #32
   518d8:	cmp	r2, #1
   518dc:	lsl	ip, r3, lr
   518e0:	orrcs	ip, ip, #2
   518e4:	adds	r0, r0, r3, asr r5
   518e8:	adcs	r1, r1, r3, asr #31
   518ec:	and	r5, r1, #-2147483648	; 0x80000000
   518f0:	bpl	51900 <__adddf3+0xec>
   518f4:	rsbs	ip, ip, #0
   518f8:	rscs	r0, r0, #0
   518fc:	rsc	r1, r1, #0
   51900:	cmp	r1, #1048576	; 0x100000
   51904:	bcc	51944 <__adddf3+0x130>
   51908:	cmp	r1, #2097152	; 0x200000
   5190c:	bcc	5192c <__adddf3+0x118>
   51910:	lsrs	r1, r1, #1
   51914:	rrxs	r0, r0
   51918:	rrx	ip, ip
   5191c:	add	r4, r4, #1
   51920:	lsl	r2, r4, #21
   51924:	cmn	r2, #4194304	; 0x400000
   51928:	bcs	51a84 <__adddf3+0x270>
   5192c:	cmp	ip, #-2147483648	; 0x80000000
   51930:	lsrseq	ip, r0, #1
   51934:	adcs	r0, r0, #0
   51938:	adc	r1, r1, r4, lsl #20
   5193c:	orr	r1, r1, r5
   51940:	pop	{r4, r5, pc}
   51944:	lsls	ip, ip, #1
   51948:	adcs	r0, r0, r0
   5194c:	adc	r1, r1, r1
   51950:	tst	r1, #1048576	; 0x100000
   51954:	sub	r4, r4, #1
   51958:	bne	5192c <__adddf3+0x118>
   5195c:	teq	r1, #0
   51960:	moveq	r1, r0
   51964:	moveq	r0, #0
   51968:	clz	r3, r1
   5196c:	addeq	r3, r3, #32
   51970:	sub	r3, r3, #11
   51974:	subs	r2, r3, #32
   51978:	bge	5199c <__adddf3+0x188>
   5197c:	adds	r2, r2, #12
   51980:	ble	51998 <__adddf3+0x184>
   51984:	add	ip, r2, #20
   51988:	rsb	r2, r2, #12
   5198c:	lsl	r0, r1, ip
   51990:	lsr	r1, r1, r2
   51994:	b	519ac <__adddf3+0x198>
   51998:	add	r2, r2, #20
   5199c:	rsble	ip, r2, #32
   519a0:	lsl	r1, r1, r2
   519a4:	orrle	r1, r1, r0, lsr ip
   519a8:	lslle	r0, r0, r2
   519ac:	subs	r4, r4, r3
   519b0:	addge	r1, r1, r4, lsl #20
   519b4:	orrge	r1, r1, r5
   519b8:	popge	{r4, r5, pc}
   519bc:	mvn	r4, r4
   519c0:	subs	r4, r4, #31
   519c4:	bge	51a00 <__adddf3+0x1ec>
   519c8:	adds	r4, r4, #12
   519cc:	bgt	519e8 <__adddf3+0x1d4>
   519d0:	add	r4, r4, #20
   519d4:	rsb	r2, r4, #32
   519d8:	lsr	r0, r0, r4
   519dc:	orr	r0, r0, r1, lsl r2
   519e0:	orr	r1, r5, r1, lsr r4
   519e4:	pop	{r4, r5, pc}
   519e8:	rsb	r4, r4, #12
   519ec:	rsb	r2, r4, #32
   519f0:	lsr	r0, r0, r2
   519f4:	orr	r0, r0, r1, lsl r4
   519f8:	mov	r1, r5
   519fc:	pop	{r4, r5, pc}
   51a00:	lsr	r0, r1, r4
   51a04:	mov	r1, r5
   51a08:	pop	{r4, r5, pc}
   51a0c:	teq	r4, #0
   51a10:	eor	r3, r3, #1048576	; 0x100000
   51a14:	eoreq	r1, r1, #1048576	; 0x100000
   51a18:	addeq	r4, r4, #1
   51a1c:	subne	r5, r5, #1
   51a20:	b	518ac <__adddf3+0x98>
   51a24:	mvns	ip, r4, asr #21
   51a28:	mvnsne	ip, r5, asr #21
   51a2c:	beq	51a94 <__adddf3+0x280>
   51a30:	teq	r4, r5
   51a34:	teqeq	r0, r2
   51a38:	beq	51a4c <__adddf3+0x238>
   51a3c:	orrs	ip, r4, r0
   51a40:	moveq	r1, r3
   51a44:	moveq	r0, r2
   51a48:	pop	{r4, r5, pc}
   51a4c:	teq	r1, r3
   51a50:	movne	r1, #0
   51a54:	movne	r0, #0
   51a58:	popne	{r4, r5, pc}
   51a5c:	lsrs	ip, r4, #21
   51a60:	bne	51a74 <__adddf3+0x260>
   51a64:	lsls	r0, r0, #1
   51a68:	adcs	r1, r1, r1
   51a6c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   51a70:	pop	{r4, r5, pc}
   51a74:	adds	r4, r4, #4194304	; 0x400000
   51a78:	addcc	r1, r1, #1048576	; 0x100000
   51a7c:	popcc	{r4, r5, pc}
   51a80:	and	r5, r1, #-2147483648	; 0x80000000
   51a84:	orr	r1, r5, #2130706432	; 0x7f000000
   51a88:	orr	r1, r1, #15728640	; 0xf00000
   51a8c:	mov	r0, #0
   51a90:	pop	{r4, r5, pc}
   51a94:	mvns	ip, r4, asr #21
   51a98:	movne	r1, r3
   51a9c:	movne	r0, r2
   51aa0:	mvnseq	ip, r5, asr #21
   51aa4:	movne	r3, r1
   51aa8:	movne	r2, r0
   51aac:	orrs	r4, r0, r1, lsl #12
   51ab0:	orrseq	r5, r2, r3, lsl #12
   51ab4:	teqeq	r1, r3
   51ab8:	orrne	r1, r1, #524288	; 0x80000
   51abc:	pop	{r4, r5, pc}

00051ac0 <__aeabi_ui2d>:
   51ac0:	teq	r0, #0
   51ac4:	moveq	r1, #0
   51ac8:	bxeq	lr
   51acc:	push	{r4, r5, lr}
   51ad0:	mov	r4, #1024	; 0x400
   51ad4:	add	r4, r4, #50	; 0x32
   51ad8:	mov	r5, #0
   51adc:	mov	r1, #0
   51ae0:	b	5195c <__adddf3+0x148>

00051ae4 <__aeabi_i2d>:
   51ae4:	teq	r0, #0
   51ae8:	moveq	r1, #0
   51aec:	bxeq	lr
   51af0:	push	{r4, r5, lr}
   51af4:	mov	r4, #1024	; 0x400
   51af8:	add	r4, r4, #50	; 0x32
   51afc:	ands	r5, r0, #-2147483648	; 0x80000000
   51b00:	rsbmi	r0, r0, #0
   51b04:	mov	r1, #0
   51b08:	b	5195c <__adddf3+0x148>

00051b0c <__aeabi_f2d>:
   51b0c:	lsls	r2, r0, #1
   51b10:	asr	r1, r2, #3
   51b14:	rrx	r1, r1
   51b18:	lsl	r0, r2, #28
   51b1c:	andsne	r3, r2, #-16777216	; 0xff000000
   51b20:	teqne	r3, #-16777216	; 0xff000000
   51b24:	eorne	r1, r1, #939524096	; 0x38000000
   51b28:	bxne	lr
   51b2c:	teq	r2, #0
   51b30:	teqne	r3, #-16777216	; 0xff000000
   51b34:	bxeq	lr
   51b38:	push	{r4, r5, lr}
   51b3c:	mov	r4, #896	; 0x380
   51b40:	and	r5, r1, #-2147483648	; 0x80000000
   51b44:	bic	r1, r1, #-2147483648	; 0x80000000
   51b48:	b	5195c <__adddf3+0x148>

00051b4c <__aeabi_ul2d>:
   51b4c:	orrs	r2, r0, r1
   51b50:	bxeq	lr
   51b54:	push	{r4, r5, lr}
   51b58:	mov	r5, #0
   51b5c:	b	51b7c <__aeabi_l2d+0x1c>

00051b60 <__aeabi_l2d>:
   51b60:	orrs	r2, r0, r1
   51b64:	bxeq	lr
   51b68:	push	{r4, r5, lr}
   51b6c:	ands	r5, r1, #-2147483648	; 0x80000000
   51b70:	bpl	51b7c <__aeabi_l2d+0x1c>
   51b74:	rsbs	r0, r0, #0
   51b78:	rsc	r1, r1, #0
   51b7c:	mov	r4, #1024	; 0x400
   51b80:	add	r4, r4, #50	; 0x32
   51b84:	lsrs	ip, r1, #22
   51b88:	beq	51900 <__adddf3+0xec>
   51b8c:	mov	r2, #3
   51b90:	lsrs	ip, ip, #3
   51b94:	addne	r2, r2, #3
   51b98:	lsrs	ip, ip, #3
   51b9c:	addne	r2, r2, #3
   51ba0:	add	r2, r2, ip, lsr #3
   51ba4:	rsb	r3, r2, #32
   51ba8:	lsl	ip, r0, r3
   51bac:	lsr	r0, r0, r2
   51bb0:	orr	r0, r0, r1, lsl r3
   51bb4:	lsr	r1, r1, r2
   51bb8:	add	r4, r4, r2
   51bbc:	b	51900 <__adddf3+0xec>

00051bc0 <__aeabi_frsub>:
   51bc0:	eor	r0, r0, #-2147483648	; 0x80000000
   51bc4:	b	51bcc <__addsf3>

00051bc8 <__aeabi_fsub>:
   51bc8:	eor	r1, r1, #-2147483648	; 0x80000000

00051bcc <__addsf3>:
   51bcc:	lsls	r2, r0, #1
   51bd0:	lslsne	r3, r1, #1
   51bd4:	teqne	r2, r3
   51bd8:	mvnsne	ip, r2, asr #24
   51bdc:	mvnsne	ip, r3, asr #24
   51be0:	beq	51cd8 <__addsf3+0x10c>
   51be4:	lsr	r2, r2, #24
   51be8:	rsbs	r3, r2, r3, lsr #24
   51bec:	addgt	r2, r2, r3
   51bf0:	eorgt	r1, r0, r1
   51bf4:	eorgt	r0, r1, r0
   51bf8:	eorgt	r1, r0, r1
   51bfc:	rsblt	r3, r3, #0
   51c00:	cmp	r3, #25
   51c04:	bxhi	lr
   51c08:	tst	r0, #-2147483648	; 0x80000000
   51c0c:	orr	r0, r0, #8388608	; 0x800000
   51c10:	bic	r0, r0, #-16777216	; 0xff000000
   51c14:	rsbne	r0, r0, #0
   51c18:	tst	r1, #-2147483648	; 0x80000000
   51c1c:	orr	r1, r1, #8388608	; 0x800000
   51c20:	bic	r1, r1, #-16777216	; 0xff000000
   51c24:	rsbne	r1, r1, #0
   51c28:	teq	r2, r3
   51c2c:	beq	51cc0 <__addsf3+0xf4>
   51c30:	sub	r2, r2, #1
   51c34:	adds	r0, r0, r1, asr r3
   51c38:	rsb	r3, r3, #32
   51c3c:	lsl	r1, r1, r3
   51c40:	and	r3, r0, #-2147483648	; 0x80000000
   51c44:	bpl	51c50 <__addsf3+0x84>
   51c48:	rsbs	r1, r1, #0
   51c4c:	rsc	r0, r0, #0
   51c50:	cmp	r0, #8388608	; 0x800000
   51c54:	bcc	51c88 <__addsf3+0xbc>
   51c58:	cmp	r0, #16777216	; 0x1000000
   51c5c:	bcc	51c74 <__addsf3+0xa8>
   51c60:	lsrs	r0, r0, #1
   51c64:	rrx	r1, r1
   51c68:	add	r2, r2, #1
   51c6c:	cmp	r2, #254	; 0xfe
   51c70:	bcs	51d2c <__addsf3+0x160>
   51c74:	cmp	r1, #-2147483648	; 0x80000000
   51c78:	adc	r0, r0, r2, lsl #23
   51c7c:	biceq	r0, r0, #1
   51c80:	orr	r0, r0, r3
   51c84:	bx	lr
   51c88:	lsls	r1, r1, #1
   51c8c:	adc	r0, r0, r0
   51c90:	tst	r0, #8388608	; 0x800000
   51c94:	sub	r2, r2, #1
   51c98:	bne	51c74 <__addsf3+0xa8>
   51c9c:	clz	ip, r0
   51ca0:	sub	ip, ip, #8
   51ca4:	subs	r2, r2, ip
   51ca8:	lsl	r0, r0, ip
   51cac:	addge	r0, r0, r2, lsl #23
   51cb0:	rsblt	r2, r2, #0
   51cb4:	orrge	r0, r0, r3
   51cb8:	orrlt	r0, r3, r0, lsr r2
   51cbc:	bx	lr
   51cc0:	teq	r2, #0
   51cc4:	eor	r1, r1, #8388608	; 0x800000
   51cc8:	eoreq	r0, r0, #8388608	; 0x800000
   51ccc:	addeq	r2, r2, #1
   51cd0:	subne	r3, r3, #1
   51cd4:	b	51c30 <__addsf3+0x64>
   51cd8:	lsl	r3, r1, #1
   51cdc:	mvns	ip, r2, asr #24
   51ce0:	mvnsne	ip, r3, asr #24
   51ce4:	beq	51d38 <__addsf3+0x16c>
   51ce8:	teq	r2, r3
   51cec:	beq	51cfc <__addsf3+0x130>
   51cf0:	teq	r2, #0
   51cf4:	moveq	r0, r1
   51cf8:	bx	lr
   51cfc:	teq	r0, r1
   51d00:	movne	r0, #0
   51d04:	bxne	lr
   51d08:	tst	r2, #-16777216	; 0xff000000
   51d0c:	bne	51d1c <__addsf3+0x150>
   51d10:	lsls	r0, r0, #1
   51d14:	orrcs	r0, r0, #-2147483648	; 0x80000000
   51d18:	bx	lr
   51d1c:	adds	r2, r2, #33554432	; 0x2000000
   51d20:	addcc	r0, r0, #8388608	; 0x800000
   51d24:	bxcc	lr
   51d28:	and	r3, r0, #-2147483648	; 0x80000000
   51d2c:	orr	r0, r3, #2130706432	; 0x7f000000
   51d30:	orr	r0, r0, #8388608	; 0x800000
   51d34:	bx	lr
   51d38:	mvns	r2, r2, asr #24
   51d3c:	movne	r0, r1
   51d40:	mvnseq	r3, r3, asr #24
   51d44:	movne	r1, r0
   51d48:	lsls	r2, r0, #9
   51d4c:	lslseq	r3, r1, #9
   51d50:	teqeq	r0, r1
   51d54:	orrne	r0, r0, #4194304	; 0x400000
   51d58:	bx	lr

00051d5c <__aeabi_ui2f>:
   51d5c:	mov	r3, #0
   51d60:	b	51d6c <__aeabi_i2f+0x8>

00051d64 <__aeabi_i2f>:
   51d64:	ands	r3, r0, #-2147483648	; 0x80000000
   51d68:	rsbmi	r0, r0, #0
   51d6c:	movs	ip, r0
   51d70:	bxeq	lr
   51d74:	orr	r3, r3, #1258291200	; 0x4b000000
   51d78:	mov	r1, r0
   51d7c:	mov	r0, #0
   51d80:	b	51dc4 <__aeabi_l2f+0x30>

00051d84 <__aeabi_ul2f>:
   51d84:	orrs	r2, r0, r1
   51d88:	bxeq	lr
   51d8c:	mov	r3, #0
   51d90:	b	51dac <__aeabi_l2f+0x18>

00051d94 <__aeabi_l2f>:
   51d94:	orrs	r2, r0, r1
   51d98:	bxeq	lr
   51d9c:	ands	r3, r1, #-2147483648	; 0x80000000
   51da0:	bpl	51dac <__aeabi_l2f+0x18>
   51da4:	rsbs	r0, r0, #0
   51da8:	rsc	r1, r1, #0
   51dac:	movs	ip, r1
   51db0:	moveq	ip, r0
   51db4:	moveq	r1, r0
   51db8:	moveq	r0, #0
   51dbc:	orr	r3, r3, #1526726656	; 0x5b000000
   51dc0:	subeq	r3, r3, #268435456	; 0x10000000
   51dc4:	sub	r3, r3, #8388608	; 0x800000
   51dc8:	clz	r2, ip
   51dcc:	subs	r2, r2, #8
   51dd0:	sub	r3, r3, r2, lsl #23
   51dd4:	blt	51df4 <__aeabi_l2f+0x60>
   51dd8:	add	r3, r3, r1, lsl r2
   51ddc:	lsl	ip, r0, r2
   51de0:	rsb	r2, r2, #32
   51de4:	cmp	ip, #-2147483648	; 0x80000000
   51de8:	adc	r0, r3, r0, lsr r2
   51dec:	biceq	r0, r0, #1
   51df0:	bx	lr
   51df4:	add	r2, r2, #32
   51df8:	lsl	ip, r1, r2
   51dfc:	rsb	r2, r2, #32
   51e00:	orrs	r0, r0, ip, lsl #1
   51e04:	adc	r0, r3, r1, lsr r2
   51e08:	biceq	r0, r0, ip, lsr #31
   51e0c:	bx	lr

00051e10 <__aeabi_idiv0>:
   51e10:	push	{r1, lr}
   51e14:	mov	r0, #8
   51e18:	bl	1474 <raise@plt>
   51e1c:	pop	{r1, pc}

00051e20 <__aeabi_f2lz>:
   51e20:	vmov	s15, r0
   51e24:	vcmpe.f32	s15, #0.0
   51e28:	vmrs	APSR_nzcv, fpscr
   51e2c:	bmi	51e34 <__aeabi_f2lz+0x14>
   51e30:	b	51e78 <__aeabi_f2ulz>
   51e34:	push	{r4, lr}
   51e38:	eor	r0, r0, #-2147483648	; 0x80000000
   51e3c:	bl	51e78 <__aeabi_f2ulz>
   51e40:	rsbs	r0, r0, #0
   51e44:	rsc	r1, r1, #0
   51e48:	pop	{r4, pc}

00051e4c <__aeabi_d2lz>:
   51e4c:	vmov	d7, r0, r1
   51e50:	vcmpe.f64	d7, #0.0
   51e54:	vmrs	APSR_nzcv, fpscr
   51e58:	bmi	51e60 <__aeabi_d2lz+0x14>
   51e5c:	b	51ec0 <__aeabi_d2ulz>
   51e60:	push	{r4, lr}
   51e64:	eor	r1, r1, #-2147483648	; 0x80000000
   51e68:	bl	51ec0 <__aeabi_d2ulz>
   51e6c:	rsbs	r0, r0, #0
   51e70:	rsc	r1, r1, #0
   51e74:	pop	{r4, pc}

00051e78 <__aeabi_f2ulz>:
   51e78:	vmov	s15, r0
   51e7c:	vldr	d6, [pc, #44]	; 51eb0 <__aeabi_f2ulz+0x38>
   51e80:	vldr	d5, [pc, #48]	; 51eb8 <__aeabi_f2ulz+0x40>
   51e84:	mov	r0, #0
   51e88:	vcvt.f64.f32	d7, s15
   51e8c:	vmul.f64	d6, d7, d6
   51e90:	vcvt.u32.f64	s12, d6
   51e94:	vcvt.f64.u32	d4, s12
   51e98:	vmov	r1, s12
   51e9c:	vmls.f64	d7, d4, d5
   51ea0:	vcvt.u32.f64	s14, d7
   51ea4:	vmov	r3, s14
   51ea8:	orr	r0, r0, r3
   51eac:	bx	lr
   51eb0:	.word	0x00000000
   51eb4:	.word	0x3df00000
   51eb8:	.word	0x00000000
   51ebc:	.word	0x41f00000

00051ec0 <__aeabi_d2ulz>:
   51ec0:	vmov	d7, r0, r1
   51ec4:	vldr	d6, [pc, #44]	; 51ef8 <__aeabi_d2ulz+0x38>
   51ec8:	vldr	d5, [pc, #48]	; 51f00 <__aeabi_d2ulz+0x40>
   51ecc:	mov	r0, #0
   51ed0:	vmul.f64	d6, d7, d6
   51ed4:	vcvt.u32.f64	s12, d6
   51ed8:	vcvt.f64.u32	d4, s12
   51edc:	vmov	r1, s12
   51ee0:	vmls.f64	d7, d4, d5
   51ee4:	vcvt.u32.f64	s14, d7
   51ee8:	vmov	r3, s14
   51eec:	orr	r0, r0, r3
   51ef0:	bx	lr
   51ef4:	nop			; (mov r0, r0)
   51ef8:	.word	0x00000000
   51efc:	.word	0x3df00000
   51f00:	.word	0x00000000
   51f04:	.word	0x41f00000

Disassembly of section .fini:

00051f08 <_fini>:
   51f08:	push	{r3, lr}
   51f0c:	pop	{r3, pc}
