
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	10a68 <_start@@Base+0x3c>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <printf@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <printf@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r0, r1, r0, lsl #19

00010684 <printf@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <fopen@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <free@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <malloc@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__libc_start_main@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <__gmon_start__@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <exit@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <fclose@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

000106e4 <fseek@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2368]!	; 0x940

000106f0 <abort@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2360]!	; 0x938

000106fc <getc@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010708 <main@@Base>:
   10708:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1070c:	ldr	r1, [pc, #752]	; 10a04 <main@@Base+0x2fc>
   10710:	ldr	r0, [pc, #752]	; 10a08 <main@@Base+0x300>
   10714:	bl	10690 <fopen@plt>
   10718:	mov	r4, r0
   1071c:	bl	106fc <getc@plt>
   10720:	cmp	r0, #66	; 0x42
   10724:	beq	10738 <main@@Base+0x30>
   10728:	ldr	r0, [pc, #732]	; 10a0c <main@@Base+0x304>
   1072c:	bl	10684 <printf@plt>
   10730:	mov	r0, #1
   10734:	bl	106cc <exit@plt>
   10738:	mov	r0, r4
   1073c:	bl	106fc <getc@plt>
   10740:	cmp	r0, #77	; 0x4d
   10744:	bne	10728 <main@@Base+0x20>
   10748:	mov	r0, r4
   1074c:	bl	106fc <getc@plt>
   10750:	mov	r6, r0
   10754:	mov	r0, r4
   10758:	bl	106fc <getc@plt>
   1075c:	mov	r7, r0
   10760:	mov	r0, r4
   10764:	bl	106fc <getc@plt>
   10768:	lsl	r5, r0, #16
   1076c:	mov	r0, r4
   10770:	bl	106fc <getc@plt>
   10774:	orr	r5, r5, r7, lsl #8
   10778:	orr	r5, r5, r6
   1077c:	orr	r1, r5, r0, lsl #24
   10780:	ldr	r0, [pc, #648]	; 10a10 <main@@Base+0x308>
   10784:	bl	10684 <printf@plt>
   10788:	mov	r2, #1
   1078c:	mov	r1, #4
   10790:	mov	r0, r4
   10794:	bl	106e4 <fseek@plt>
   10798:	mov	r0, r4
   1079c:	bl	106fc <getc@plt>
   107a0:	mov	r5, r0
   107a4:	mov	r0, r4
   107a8:	bl	106fc <getc@plt>
   107ac:	mov	r7, r0
   107b0:	mov	r0, r4
   107b4:	bl	106fc <getc@plt>
   107b8:	lsl	r6, r0, #16
   107bc:	mov	r0, r4
   107c0:	bl	106fc <getc@plt>
   107c4:	orr	r6, r6, r7, lsl #8
   107c8:	orr	r6, r6, r5
   107cc:	mov	r2, #1
   107d0:	mov	r1, #4
   107d4:	orr	r6, r6, r0, lsl #24
   107d8:	mov	r0, r4
   107dc:	bl	106e4 <fseek@plt>
   107e0:	mov	r0, r4
   107e4:	bl	106fc <getc@plt>
   107e8:	mov	r5, r0
   107ec:	mov	r0, r4
   107f0:	bl	106fc <getc@plt>
   107f4:	mov	r7, r0
   107f8:	mov	r0, r4
   107fc:	bl	106fc <getc@plt>
   10800:	lsl	r9, r0, #16
   10804:	mov	r0, r4
   10808:	bl	106fc <getc@plt>
   1080c:	orr	r9, r9, r7, lsl #8
   10810:	orr	r9, r9, r5
   10814:	orr	r9, r9, r0, lsl #24
   10818:	mov	r1, r9
   1081c:	ldr	r0, [pc, #496]	; 10a14 <main@@Base+0x30c>
   10820:	bl	10684 <printf@plt>
   10824:	mov	r0, r4
   10828:	bl	106fc <getc@plt>
   1082c:	mov	r7, r0
   10830:	mov	r0, r4
   10834:	bl	106fc <getc@plt>
   10838:	mov	r8, r0
   1083c:	mov	r0, r4
   10840:	bl	106fc <getc@plt>
   10844:	lsl	r5, r0, #16
   10848:	mov	r0, r4
   1084c:	bl	106fc <getc@plt>
   10850:	orr	r5, r5, r8, lsl #8
   10854:	orr	r5, r5, r7
   10858:	orr	r5, r5, r0, lsl #24
   1085c:	mov	r1, r5
   10860:	ldr	r0, [pc, #432]	; 10a18 <main@@Base+0x310>
   10864:	bl	10684 <printf@plt>
   10868:	mov	r0, r4
   1086c:	bl	106fc <getc@plt>
   10870:	mov	r7, r0
   10874:	mov	r0, r4
   10878:	bl	106fc <getc@plt>
   1087c:	orr	r0, r7, r0, lsl #8
   10880:	cmp	r0, #1
   10884:	beq	10898 <main@@Base+0x190>
   10888:	ldr	r0, [pc, #396]	; 10a1c <main@@Base+0x314>
   1088c:	bl	10684 <printf@plt>
   10890:	mov	r0, #2
   10894:	b	10734 <main@@Base+0x2c>
   10898:	mov	r0, r4
   1089c:	bl	106fc <getc@plt>
   108a0:	mov	r7, r0
   108a4:	mov	r0, r4
   108a8:	bl	106fc <getc@plt>
   108ac:	orr	r7, r7, r0, lsl #8
   108b0:	mov	r1, r7
   108b4:	ldr	r0, [pc, #356]	; 10a20 <main@@Base+0x318>
   108b8:	bl	10684 <printf@plt>
   108bc:	cmp	r7, #24
   108c0:	beq	108d4 <main@@Base+0x1cc>
   108c4:	ldr	r0, [pc, #344]	; 10a24 <main@@Base+0x31c>
   108c8:	bl	10684 <printf@plt>
   108cc:	mov	r0, #3
   108d0:	b	10734 <main@@Base+0x2c>
   108d4:	mov	r1, r6
   108d8:	mov	r2, #0
   108dc:	mov	r0, r4
   108e0:	lsl	r6, r5, #2
   108e4:	bl	106e4 <fseek@plt>
   108e8:	mov	r0, r6
   108ec:	bl	106a8 <malloc@plt>
   108f0:	add	sl, r9, r9, lsl #1
   108f4:	mov	r8, #0
   108f8:	mov	r7, r0
   108fc:	cmp	r8, r5
   10900:	blt	1091c <main@@Base+0x214>
   10904:	sub	sl, r5, #1
   10908:	add	r6, r7, r6
   1090c:	cmp	sl, #0
   10910:	blt	1099c <main@@Base+0x294>
   10914:	mov	r8, #0
   10918:	b	10988 <main@@Base+0x280>
   1091c:	mov	r0, sl
   10920:	bl	106a8 <malloc@plt>
   10924:	str	r0, [r7, r8, lsl #2]
   10928:	add	r8, r8, #1
   1092c:	b	108fc <main@@Base+0x1f4>
   10930:	ldr	r3, [r6, #-4]
   10934:	add	fp, r8, r8, lsl #1
   10938:	add	r3, r3, fp
   1093c:	mov	r0, r4
   10940:	str	r3, [sp, #4]
   10944:	bl	106fc <getc@plt>
   10948:	ldr	r3, [sp, #4]
   1094c:	add	r8, r8, #1
   10950:	strb	r0, [r3, #2]
   10954:	ldr	r3, [r6, #-4]
   10958:	mov	r0, r4
   1095c:	add	r3, r3, fp
   10960:	str	r3, [sp, #4]
   10964:	bl	106fc <getc@plt>
   10968:	ldr	r3, [sp, #4]
   1096c:	strb	r0, [r3, #1]
   10970:	ldr	r3, [r6, #-4]
   10974:	mov	r0, r4
   10978:	str	r3, [sp, #4]
   1097c:	bl	106fc <getc@plt>
   10980:	ldr	r3, [sp, #4]
   10984:	strb	r0, [r3, fp]
   10988:	cmp	r8, r9
   1098c:	blt	10930 <main@@Base+0x228>
   10990:	sub	sl, sl, #1
   10994:	sub	r6, r6, #4
   10998:	b	1090c <main@@Base+0x204>
   1099c:	mov	r0, r4
   109a0:	bl	106d8 <fclose@plt>
   109a4:	mov	r2, #0
   109a8:	mov	r1, r2
   109ac:	mov	r0, r7
   109b0:	bl	10b54 <print_pixelinfo@@Base>
   109b4:	mov	r2, #0
   109b8:	mov	r1, #532	; 0x214
   109bc:	mov	r0, r7
   109c0:	bl	10b54 <print_pixelinfo@@Base>
   109c4:	ldr	r2, [pc, #92]	; 10a28 <main@@Base+0x320>
   109c8:	mov	r1, #408	; 0x198
   109cc:	mov	r0, r7
   109d0:	bl	10b54 <print_pixelinfo@@Base>
   109d4:	mov	r4, #0
   109d8:	cmp	r4, r5
   109dc:	blt	109f4 <main@@Base+0x2ec>
   109e0:	mov	r0, r7
   109e4:	bl	1069c <free@plt>
   109e8:	mov	r0, #0
   109ec:	add	sp, sp, #12
   109f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109f4:	ldr	r0, [r7, r4, lsl #2]
   109f8:	bl	1069c <free@plt>
   109fc:	add	r4, r4, #1
   10a00:	b	109d8 <main@@Base+0x2d0>
   10a04:	andeq	r0, r1, r2, lsr #24
   10a08:	andeq	r0, r1, r4, lsr #24
   10a0c:	andeq	r0, r1, r9, lsr ip
   10a10:	andeq	r0, r1, r3, ror ip
   10a14:	muleq	r1, r6, ip
   10a18:	andeq	r0, r1, sp, lsr #25
   10a1c:	andeq	r0, r1, r3, asr #25
   10a20:	andeq	r0, r1, r3, lsr #26
   10a24:	andeq	r0, r1, r7, lsr sp
   10a28:			; <UNDEFINED> instruction: 0x000001bb

00010a2c <_start@@Base>:
   10a2c:	mov	fp, #0
   10a30:	mov	lr, #0
   10a34:	pop	{r1}		; (ldr r1, [sp], #4)
   10a38:	mov	r2, sp
   10a3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a40:	push	{r0}		; (str r0, [sp, #-4]!)
   10a44:	ldr	ip, [pc, #16]	; 10a5c <_start@@Base+0x30>
   10a48:	push	{ip}		; (str ip, [sp, #-4]!)
   10a4c:	ldr	r0, [pc, #12]	; 10a60 <_start@@Base+0x34>
   10a50:	ldr	r3, [pc, #12]	; 10a64 <_start@@Base+0x38>
   10a54:	bl	106b4 <__libc_start_main@plt>
   10a58:	bl	106f0 <abort@plt>
   10a5c:	andeq	r0, r1, ip, ror #23
   10a60:	andeq	r0, r1, r8, lsl #14
   10a64:	andeq	r0, r1, ip, lsl #23
   10a68:	ldr	r3, [pc, #20]	; 10a84 <_start@@Base+0x58>
   10a6c:	ldr	r2, [pc, #20]	; 10a88 <_start@@Base+0x5c>
   10a70:	add	r3, pc, r3
   10a74:	ldr	r2, [r3, r2]
   10a78:	cmp	r2, #0
   10a7c:	bxeq	lr
   10a80:	b	106c0 <__gmon_start__@plt>
   10a84:	andeq	r0, r1, r8, lsl #11
   10a88:	andeq	r0, r0, r8, lsr r0
   10a8c:	ldr	r3, [pc, #28]	; 10ab0 <_start@@Base+0x84>
   10a90:	ldr	r0, [pc, #28]	; 10ab4 <_start@@Base+0x88>
   10a94:	sub	r3, r3, r0
   10a98:	cmp	r3, #6
   10a9c:	bxls	lr
   10aa0:	ldr	r3, [pc, #16]	; 10ab8 <_start@@Base+0x8c>
   10aa4:	cmp	r3, #0
   10aa8:	bxeq	lr
   10aac:	bx	r3
   10ab0:	andeq	r1, r2, r7, asr #32
   10ab4:	andeq	r1, r2, r4, asr #32
   10ab8:	andeq	r0, r0, r0
   10abc:	ldr	r1, [pc, #36]	; 10ae8 <_start@@Base+0xbc>
   10ac0:	ldr	r0, [pc, #36]	; 10aec <_start@@Base+0xc0>
   10ac4:	sub	r1, r1, r0
   10ac8:	asr	r1, r1, #2
   10acc:	add	r1, r1, r1, lsr #31
   10ad0:	asrs	r1, r1, #1
   10ad4:	bxeq	lr
   10ad8:	ldr	r3, [pc, #16]	; 10af0 <_start@@Base+0xc4>
   10adc:	cmp	r3, #0
   10ae0:	bxeq	lr
   10ae4:	bx	r3
   10ae8:	andeq	r1, r2, r4, asr #32
   10aec:	andeq	r1, r2, r4, asr #32
   10af0:	andeq	r0, r0, r0
   10af4:	push	{r4, lr}
   10af8:	ldr	r4, [pc, #24]	; 10b18 <_start@@Base+0xec>
   10afc:	ldrb	r3, [r4]
   10b00:	cmp	r3, #0
   10b04:	popne	{r4, pc}
   10b08:	bl	10a8c <_start@@Base+0x60>
   10b0c:	mov	r3, #1
   10b10:	strb	r3, [r4]
   10b14:	pop	{r4, pc}
   10b18:	andeq	r1, r2, r4, asr #32
   10b1c:	ldr	r0, [pc, #40]	; 10b4c <_start@@Base+0x120>
   10b20:	ldr	r3, [r0]
   10b24:	cmp	r3, #0
   10b28:	bne	10b30 <_start@@Base+0x104>
   10b2c:	b	10abc <_start@@Base+0x90>
   10b30:	ldr	r3, [pc, #24]	; 10b50 <_start@@Base+0x124>
   10b34:	cmp	r3, #0
   10b38:	beq	10b2c <_start@@Base+0x100>
   10b3c:	push	{r4, lr}
   10b40:	blx	r3
   10b44:	pop	{r4, lr}
   10b48:	b	10abc <_start@@Base+0x90>
   10b4c:	andeq	r0, r2, r4, lsl pc
   10b50:	andeq	r0, r0, r0

00010b54 <print_pixelinfo@@Base>:
   10b54:	ldr	ip, [r0, r1, lsl #2]
   10b58:	add	r3, r2, r2, lsl #1
   10b5c:	push	{r0, r1, r2, lr}
   10b60:	add	r0, ip, r3
   10b64:	ldrb	r3, [ip, r3]
   10b68:	ldrb	ip, [r0, #2]
   10b6c:	str	ip, [sp, #4]
   10b70:	ldrb	r0, [r0, #1]
   10b74:	str	r0, [sp]
   10b78:	ldr	r0, [pc, #8]	; 10b88 <print_pixelinfo@@Base+0x34>
   10b7c:	bl	10684 <printf@plt>
   10b80:	add	sp, sp, #12
   10b84:	pop	{pc}		; (ldr pc, [sp], #4)
   10b88:	strdeq	r0, [r1], -ip

00010b8c <__libc_csu_init@@Base>:
   10b8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b90:	mov	r7, r0
   10b94:	ldr	r6, [pc, #72]	; 10be4 <__libc_csu_init@@Base+0x58>
   10b98:	ldr	r5, [pc, #72]	; 10be8 <__libc_csu_init@@Base+0x5c>
   10b9c:	add	r6, pc, r6
   10ba0:	add	r5, pc, r5
   10ba4:	sub	r6, r6, r5
   10ba8:	mov	r8, r1
   10bac:	mov	r9, r2
   10bb0:	bl	10664 <printf@plt-0x20>
   10bb4:	asrs	r6, r6, #2
   10bb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bbc:	mov	r4, #0
   10bc0:	add	r4, r4, #1
   10bc4:	ldr	r3, [r5], #4
   10bc8:	mov	r2, r9
   10bcc:	mov	r1, r8
   10bd0:	mov	r0, r7
   10bd4:	blx	r3
   10bd8:	cmp	r6, r4
   10bdc:	bne	10bc0 <__libc_csu_init@@Base+0x34>
   10be0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10be4:	andeq	r0, r1, ip, ror #6
   10be8:	andeq	r0, r1, r4, ror #6

00010bec <__libc_csu_fini@@Base>:
   10bec:	bx	lr

Disassembly of section .fini:

00010bf0 <.fini>:
   10bf0:	push	{r3, lr}
   10bf4:	pop	{r3, pc}
