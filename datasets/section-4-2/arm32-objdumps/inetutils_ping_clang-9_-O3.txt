
../repos/inetutils/ping/ping:     file format elf32-littlearm


Disassembly of section .init:

00011308 <.init>:
   11308:	push	{r3, lr}
   1130c:	bl	116c4 <__assert_fail@plt+0x48>
   11310:	pop	{r3, pc}

Disassembly of section .plt:

00011314 <calloc@plt-0x14>:
   11314:	push	{lr}		; (str lr, [sp, #-4]!)
   11318:	ldr	lr, [pc, #4]	; 11324 <calloc@plt-0x4>
   1131c:	add	lr, pc, lr
   11320:	ldr	pc, [lr, #8]!
   11324:	ldrdeq	sp, [r1], -ip

00011328 <calloc@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #118784	; 0x1d000
   11330:	ldr	pc, [ip, #3292]!	; 0xcdc

00011334 <fputs_unlocked@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #118784	; 0x1d000
   1133c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011340 <strcmp@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #118784	; 0x1d000
   11348:	ldr	pc, [ip, #3276]!	; 0xccc

0001134c <strtol@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #118784	; 0x1d000
   11354:	ldr	pc, [ip, #3268]!	; 0xcc4

00011358 <setsockopt@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #118784	; 0x1d000
   11360:	ldr	pc, [ip, #3260]!	; 0xcbc

00011364 <printf@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #118784	; 0x1d000
   1136c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011370 <getprotobyname@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #118784	; 0x1d000
   11378:	ldr	pc, [ip, #3244]!	; 0xcac

0001137c <fflush@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #118784	; 0x1d000
   11384:	ldr	pc, [ip, #3236]!	; 0xca4

00011388 <getuid@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #118784	; 0x1d000
   11390:	ldr	pc, [ip, #3228]!	; 0xc9c

00011394 <memmove@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #118784	; 0x1d000
   1139c:	ldr	pc, [ip, #3220]!	; 0xc94

000113a0 <strchrnul@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #118784	; 0x1d000
   113a8:	ldr	pc, [ip, #3212]!	; 0xc8c

000113ac <free@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #118784	; 0x1d000
   113b4:	ldr	pc, [ip, #3204]!	; 0xc84

000113b8 <gai_strerror@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #118784	; 0x1d000
   113c0:	ldr	pc, [ip, #3196]!	; 0xc7c

000113c4 <strndup@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #118784	; 0x1d000
   113cc:	ldr	pc, [ip, #3188]!	; 0xc74

000113d0 <memcpy@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #118784	; 0x1d000
   113d8:	ldr	pc, [ip, #3180]!	; 0xc6c

000113dc <signal@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #118784	; 0x1d000
   113e4:	ldr	pc, [ip, #3172]!	; 0xc64

000113e8 <fwrite_unlocked@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #118784	; 0x1d000
   113f0:	ldr	pc, [ip, #3164]!	; 0xc5c

000113f4 <inet_ntoa@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #118784	; 0x1d000
   113fc:	ldr	pc, [ip, #3156]!	; 0xc54

00011400 <select@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #118784	; 0x1d000
   11408:	ldr	pc, [ip, #3148]!	; 0xc4c

0001140c <sleep@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #118784	; 0x1d000
   11414:	ldr	pc, [ip, #3140]!	; 0xc44

00011418 <gethostbyaddr@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #118784	; 0x1d000
   11420:	ldr	pc, [ip, #3132]!	; 0xc3c

00011424 <recvfrom@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #118784	; 0x1d000
   1142c:	ldr	pc, [ip, #3124]!	; 0xc34

00011430 <strdup@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #118784	; 0x1d000
   11438:	ldr	pc, [ip, #3116]!	; 0xc2c

0001143c <realloc@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #118784	; 0x1d000
   11444:	ldr	pc, [ip, #3108]!	; 0xc24

00011448 <strcasecmp@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #118784	; 0x1d000
   11450:	ldr	pc, [ip, #3100]!	; 0xc1c

00011454 <funlockfile@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #118784	; 0x1d000
   1145c:	ldr	pc, [ip, #3092]!	; 0xc14

00011460 <fwrite@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #118784	; 0x1d000
   11468:	ldr	pc, [ip, #3084]!	; 0xc0c

0001146c <gettimeofday@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #118784	; 0x1d000
   11474:	ldr	pc, [ip, #3076]!	; 0xc04

00011478 <error@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #118784	; 0x1d000
   11480:	ldr	pc, [ip, #3068]!	; 0xbfc

00011484 <getenv@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #118784	; 0x1d000
   1148c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011490 <puts@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #118784	; 0x1d000
   11498:	ldr	pc, [ip, #3052]!	; 0xbec

0001149c <malloc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #118784	; 0x1d000
   114a4:	ldr	pc, [ip, #3044]!	; 0xbe4

000114a8 <__libc_start_main@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #118784	; 0x1d000
   114b0:	ldr	pc, [ip, #3036]!	; 0xbdc

000114b4 <strerror@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #118784	; 0x1d000
   114bc:	ldr	pc, [ip, #3028]!	; 0xbd4

000114c0 <__ctype_tolower_loc@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #118784	; 0x1d000
   114c8:	ldr	pc, [ip, #3020]!	; 0xbcc

000114cc <__gmon_start__@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #118784	; 0x1d000
   114d4:	ldr	pc, [ip, #3012]!	; 0xbc4

000114d8 <__ctype_b_loc@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #118784	; 0x1d000
   114e0:	ldr	pc, [ip, #3004]!	; 0xbbc

000114e4 <getpid@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #118784	; 0x1d000
   114ec:	ldr	pc, [ip, #2996]!	; 0xbb4

000114f0 <exit@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #118784	; 0x1d000
   114f8:	ldr	pc, [ip, #2988]!	; 0xbac

000114fc <bcmp@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #118784	; 0x1d000
   11504:	ldr	pc, [ip, #2980]!	; 0xba4

00011508 <strtoul@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #118784	; 0x1d000
   11510:	ldr	pc, [ip, #2972]!	; 0xb9c

00011514 <strlen@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #118784	; 0x1d000
   1151c:	ldr	pc, [ip, #2964]!	; 0xb94

00011520 <strchr@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #118784	; 0x1d000
   11528:	ldr	pc, [ip, #2956]!	; 0xb8c

0001152c <fprintf@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #118784	; 0x1d000
   11534:	ldr	pc, [ip, #2948]!	; 0xb84

00011538 <__errno_location@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #118784	; 0x1d000
   11540:	ldr	pc, [ip, #2940]!	; 0xb7c

00011544 <snprintf@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #118784	; 0x1d000
   1154c:	ldr	pc, [ip, #2932]!	; 0xb74

00011550 <strerror_r@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #118784	; 0x1d000
   11558:	ldr	pc, [ip, #2924]!	; 0xb6c

0001155c <setvbuf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #118784	; 0x1d000
   11564:	ldr	pc, [ip, #2916]!	; 0xb64

00011568 <memset@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #118784	; 0x1d000
   11570:	ldr	pc, [ip, #2908]!	; 0xb5c

00011574 <putchar@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #118784	; 0x1d000
   1157c:	ldr	pc, [ip, #2900]!	; 0xb54

00011580 <strtod@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #118784	; 0x1d000
   11588:	ldr	pc, [ip, #2892]!	; 0xb4c

0001158c <memchr@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #118784	; 0x1d000
   11594:	ldr	pc, [ip, #2884]!	; 0xb44

00011598 <sendto@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #118784	; 0x1d000
   115a0:	ldr	pc, [ip, #2876]!	; 0xb3c

000115a4 <__overflow@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #118784	; 0x1d000
   115ac:	ldr	pc, [ip, #2868]!	; 0xb34

000115b0 <setlocale@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #118784	; 0x1d000
   115b8:	ldr	pc, [ip, #2860]!	; 0xb2c

000115bc <getnameinfo@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #118784	; 0x1d000
   115c4:	ldr	pc, [ip, #2852]!	; 0xb24

000115c8 <strrchr@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #118784	; 0x1d000
   115d0:	ldr	pc, [ip, #2844]!	; 0xb1c

000115d4 <vfprintf@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #118784	; 0x1d000
   115dc:	ldr	pc, [ip, #2836]!	; 0xb14

000115e0 <fputc@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #118784	; 0x1d000
   115e8:	ldr	pc, [ip, #2828]!	; 0xb0c

000115ec <setuid@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #118784	; 0x1d000
   115f4:	ldr	pc, [ip, #2820]!	; 0xb04

000115f8 <sscanf@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #118784	; 0x1d000
   11600:	ldr	pc, [ip, #2812]!	; 0xafc

00011604 <putc@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #118784	; 0x1d000
   1160c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011610 <flockfile@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #118784	; 0x1d000
   11618:	ldr	pc, [ip, #2796]!	; 0xaec

0001161c <vsnprintf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #118784	; 0x1d000
   11624:	ldr	pc, [ip, #2788]!	; 0xae4

00011628 <qsort@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #118784	; 0x1d000
   11630:	ldr	pc, [ip, #2780]!	; 0xadc

00011634 <freeaddrinfo@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #118784	; 0x1d000
   1163c:	ldr	pc, [ip, #2772]!	; 0xad4

00011640 <getaddrinfo@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #118784	; 0x1d000
   11648:	ldr	pc, [ip, #2764]!	; 0xacc

0001164c <socket@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #118784	; 0x1d000
   11654:	ldr	pc, [ip, #2756]!	; 0xac4

00011658 <strncmp@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #118784	; 0x1d000
   11660:	ldr	pc, [ip, #2748]!	; 0xabc

00011664 <abort@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #118784	; 0x1d000
   1166c:	ldr	pc, [ip, #2740]!	; 0xab4

00011670 <close@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #118784	; 0x1d000
   11678:	ldr	pc, [ip, #2732]!	; 0xaac

0001167c <__assert_fail@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #118784	; 0x1d000
   11684:	ldr	pc, [ip, #2724]!	; 0xaa4

Disassembly of section .text:

00011688 <argp_help@@Base-0x3a10>:
   11688:	mov	fp, #0
   1168c:	mov	lr, #0
   11690:	pop	{r1}		; (ldr r1, [sp], #4)
   11694:	mov	r2, sp
   11698:	push	{r2}		; (str r2, [sp, #-4]!)
   1169c:	push	{r0}		; (str r0, [sp, #-4]!)
   116a0:	ldr	ip, [pc, #16]	; 116b8 <__assert_fail@plt+0x3c>
   116a4:	push	{ip}		; (str ip, [sp, #-4]!)
   116a8:	ldr	r0, [pc, #12]	; 116bc <__assert_fail@plt+0x40>
   116ac:	ldr	r3, [pc, #12]	; 116c0 <__assert_fail@plt+0x44>
   116b0:	bl	114a8 <__libc_start_main@plt>
   116b4:	bl	11664 <abort@plt>
   116b8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   116bc:	andeq	r1, r1, r8, ror r7
   116c0:	andeq	ip, r1, ip, ror fp
   116c4:	ldr	r3, [pc, #20]	; 116e0 <__assert_fail@plt+0x64>
   116c8:	ldr	r2, [pc, #20]	; 116e4 <__assert_fail@plt+0x68>
   116cc:	add	r3, pc, r3
   116d0:	ldr	r2, [r3, r2]
   116d4:	cmp	r2, #0
   116d8:	bxeq	lr
   116dc:	b	114cc <__gmon_start__@plt>
   116e0:	andeq	sp, r1, ip, lsr #18
   116e4:	andeq	r0, r0, ip, lsr #2
   116e8:	ldr	r0, [pc, #24]	; 11708 <__assert_fail@plt+0x8c>
   116ec:	ldr	r3, [pc, #24]	; 1170c <__assert_fail@plt+0x90>
   116f0:	cmp	r3, r0
   116f4:	bxeq	lr
   116f8:	ldr	r3, [pc, #16]	; 11710 <__assert_fail@plt+0x94>
   116fc:	cmp	r3, #0
   11700:	bxeq	lr
   11704:	bx	r3
   11708:	andeq	pc, r2, ip, lsl r6	; <UNPREDICTABLE>
   1170c:	andeq	pc, r2, ip, lsl r6	; <UNPREDICTABLE>
   11710:	andeq	r0, r0, r0
   11714:	ldr	r0, [pc, #36]	; 11740 <__assert_fail@plt+0xc4>
   11718:	ldr	r1, [pc, #36]	; 11744 <__assert_fail@plt+0xc8>
   1171c:	sub	r1, r1, r0
   11720:	asr	r1, r1, #2
   11724:	add	r1, r1, r1, lsr #31
   11728:	asrs	r1, r1, #1
   1172c:	bxeq	lr
   11730:	ldr	r3, [pc, #16]	; 11748 <__assert_fail@plt+0xcc>
   11734:	cmp	r3, #0
   11738:	bxeq	lr
   1173c:	bx	r3
   11740:	andeq	pc, r2, ip, lsl r6	; <UNPREDICTABLE>
   11744:	andeq	pc, r2, ip, lsl r6	; <UNPREDICTABLE>
   11748:	andeq	r0, r0, r0
   1174c:	push	{r4, lr}
   11750:	ldr	r4, [pc, #24]	; 11770 <__assert_fail@plt+0xf4>
   11754:	ldrb	r3, [r4]
   11758:	cmp	r3, #0
   1175c:	popne	{r4, pc}
   11760:	bl	116e8 <__assert_fail@plt+0x6c>
   11764:	mov	r3, #1
   11768:	strb	r3, [r4]
   1176c:	pop	{r4, pc}
   11770:	andeq	pc, r2, r0, lsr r6	; <UNPREDICTABLE>
   11774:	b	11714 <__assert_fail@plt+0x98>
   11778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1177c:	add	fp, sp, #28
   11780:	sub	sp, sp, #20
   11784:	mov	r4, #1
   11788:	mov	r7, r0
   1178c:	mov	sl, r1
   11790:	str	r4, [sp, #12]
   11794:	ldr	r0, [r1]
   11798:	bl	1a084 <argp_parse@@Base+0x14cc>
   1179c:	movw	r1, #58197	; 0xe355
   117a0:	mov	r0, #6
   117a4:	movt	r1, #1
   117a8:	bl	115b0 <setlocale@plt>
   117ac:	bl	11388 <getuid@plt>
   117b0:	movw	r1, #52345	; 0xcc79
   117b4:	cmp	r0, #0
   117b8:	movw	r0, #63196	; 0xf6dc
   117bc:	movw	r8, #62400	; 0xf3c0
   117c0:	movw	r5, #63028	; 0xf634
   117c4:	movt	r0, #2
   117c8:	movt	r1, #1
   117cc:	movt	r8, #2
   117d0:	movt	r5, #2
   117d4:	str	r1, [r0]
   117d8:	movw	r0, #52369	; 0xcc91
   117dc:	add	r1, r8, #24
   117e0:	strbeq	r4, [r5]
   117e4:	movt	r0, #1
   117e8:	bl	19ea0 <argp_parse@@Base+0x12e8>
   117ec:	mov	r0, #0
   117f0:	add	r1, sp, #16
   117f4:	mov	r2, sl
   117f8:	mov	r3, #0
   117fc:	str	r1, [sp]
   11800:	str	r0, [sp, #4]
   11804:	add	r0, r8, #32
   11808:	mov	r1, r7
   1180c:	bl	18bb8 <argp_parse@@Base>
   11810:	bl	114e4 <getpid@plt>
   11814:	mov	r1, r0
   11818:	mov	r0, #8
   1181c:	bl	146d0 <__assert_fail@plt+0x3054>
   11820:	movw	r9, #63184	; 0xf6d0
   11824:	cmp	r0, #0
   11828:	movt	r9, #2
   1182c:	str	r0, [r9]
   11830:	beq	11a00 <__assert_fail@plt+0x384>
   11834:	add	r2, sp, #12
   11838:	mov	r1, #6
   1183c:	mov	r3, #4
   11840:	bl	12eb0 <__assert_fail@plt+0x1834>
   11844:	bl	11388 <getuid@plt>
   11848:	bl	115ec <setuid@plt>
   1184c:	cmp	r0, #0
   11850:	beq	1186c <__assert_fail@plt+0x1f0>
   11854:	bl	11538 <__errno_location@plt>
   11858:	ldr	r1, [r0]
   1185c:	movw	r2, #52374	; 0xcc96
   11860:	mov	r0, #1
   11864:	movt	r2, #1
   11868:	bl	11478 <error@plt>
   1186c:	movw	r0, #63020	; 0xf62c
   11870:	mov	r1, #0
   11874:	mov	r2, #1
   11878:	mov	r3, #0
   1187c:	movt	r0, #2
   11880:	ldr	r0, [r0]
   11884:	bl	1155c <setvbuf@plt>
   11888:	ldr	r1, [r5, #4]
   1188c:	ldr	r4, [sp, #16]
   11890:	cmp	r1, #0
   11894:	beq	118a0 <__assert_fail@plt+0x224>
   11898:	ldr	r0, [r9]
   1189c:	bl	12ea8 <__assert_fail@plt+0x182c>
   118a0:	movw	r0, #63180	; 0xf6cc
   118a4:	movt	r0, #2
   118a8:	ldr	r1, [r0]
   118ac:	cmp	r1, #0
   118b0:	beq	118c4 <__assert_fail@plt+0x248>
   118b4:	ldr	r0, [r9]
   118b8:	add	r2, sp, #12
   118bc:	mov	r3, #4
   118c0:	bl	12eb0 <__assert_fail@plt+0x1834>
   118c4:	movw	r0, #63176	; 0xf6c8
   118c8:	movt	r0, #2
   118cc:	ldrb	r0, [r0]
   118d0:	tst	r0, #2
   118d4:	beq	118ec <__assert_fail@plt+0x270>
   118d8:	movw	r0, #63192	; 0xf6d8
   118dc:	movt	r0, #2
   118e0:	ldr	r1, [r0]
   118e4:	ldr	r0, [r9]
   118e8:	bl	12ee4 <__assert_fail@plt+0x1868>
   118ec:	ldr	r0, [r5, #12]
   118f0:	cmp	r0, #1
   118f4:	blt	11938 <__assert_fail@plt+0x2bc>
   118f8:	ldr	r0, [r9]
   118fc:	mov	r1, #4
   11900:	add	r3, r5, #12
   11904:	mov	r2, #2
   11908:	ldr	r0, [r0]
   1190c:	str	r1, [sp]
   11910:	mov	r1, #0
   11914:	bl	11358 <setsockopt@plt>
   11918:	cmn	r0, #1
   1191c:	bgt	11938 <__assert_fail@plt+0x2bc>
   11920:	bl	11538 <__errno_location@plt>
   11924:	ldr	r1, [r0]
   11928:	movw	r2, #52381	; 0xcc9d
   1192c:	mov	r0, #0
   11930:	movt	r2, #1
   11934:	bl	11478 <error@plt>
   11938:	ldr	r0, [r8, #8]
   1193c:	sub	r5, r7, r4
   11940:	cmp	r0, #0
   11944:	bmi	11988 <__assert_fail@plt+0x30c>
   11948:	ldr	r0, [r9]
   1194c:	mov	r1, #4
   11950:	add	r3, r8, #8
   11954:	mov	r2, #1
   11958:	ldr	r0, [r0]
   1195c:	str	r1, [sp]
   11960:	mov	r1, #0
   11964:	bl	11358 <setsockopt@plt>
   11968:	cmn	r0, #1
   1196c:	bgt	11988 <__assert_fail@plt+0x30c>
   11970:	bl	11538 <__errno_location@plt>
   11974:	ldr	r1, [r0]
   11978:	movw	r2, #52400	; 0xccb0
   1197c:	mov	r0, #0
   11980:	movt	r2, #1
   11984:	bl	11478 <error@plt>
   11988:	movw	r0, #63168	; 0xf6c0
   1198c:	ldr	r1, [r8]
   11990:	movt	r0, #2
   11994:	ldr	r0, [r0]
   11998:	bl	12af4 <__assert_fail@plt+0x1478>
   1199c:	cmp	r5, #0
   119a0:	beq	119d8 <__assert_fail@plt+0x35c>
   119a4:	add	r6, sl, r4, lsl #2
   119a8:	sub	r7, r4, r7
   119ac:	mov	r4, #0
   119b0:	ldr	r0, [r6], #4
   119b4:	ldr	r1, [r8, #20]
   119b8:	blx	r1
   119bc:	mov	r5, r0
   119c0:	ldr	r0, [r9]
   119c4:	bl	148a8 <__assert_fail@plt+0x322c>
   119c8:	orr	r4, r5, r4
   119cc:	adds	r7, r7, #1
   119d0:	bcc	119b0 <__assert_fail@plt+0x334>
   119d4:	b	119dc <__assert_fail@plt+0x360>
   119d8:	mov	r4, #0
   119dc:	ldr	r0, [r9]
   119e0:	bl	19f94 <argp_parse@@Base+0x13dc>
   119e4:	movw	r0, #63172	; 0xf6c4
   119e8:	movt	r0, #2
   119ec:	ldr	r0, [r0]
   119f0:	bl	19f94 <argp_parse@@Base+0x13dc>
   119f4:	mov	r0, r4
   119f8:	sub	sp, fp, #28
   119fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a00:	mov	r0, #1
   11a04:	bl	114f0 <exit@plt>
   11a08:	push	{r4, r5, fp, lr}
   11a0c:	add	fp, sp, #8
   11a10:	movw	r1, #52419	; 0xccc3
   11a14:	mov	r4, r0
   11a18:	movt	r1, #1
   11a1c:	bl	11448 <strcasecmp@plt>
   11a20:	cmp	r0, #0
   11a24:	beq	11a9c <__assert_fail@plt+0x420>
   11a28:	movw	r1, #53558	; 0xd136
   11a2c:	mov	r0, r4
   11a30:	movt	r1, #1
   11a34:	bl	11448 <strcasecmp@plt>
   11a38:	cmp	r0, #0
   11a3c:	beq	11aac <__assert_fail@plt+0x430>
   11a40:	movw	r1, #52744	; 0xce08
   11a44:	mov	r0, r4
   11a48:	movt	r1, #1
   11a4c:	bl	11448 <strcasecmp@plt>
   11a50:	movw	r5, #17264	; 0x4370
   11a54:	cmp	r0, #0
   11a58:	movt	r5, #1
   11a5c:	beq	11a94 <__assert_fail@plt+0x418>
   11a60:	movw	r1, #52424	; 0xccc8
   11a64:	mov	r0, r4
   11a68:	movt	r1, #1
   11a6c:	bl	11448 <strcasecmp@plt>
   11a70:	cmp	r0, #0
   11a74:	beq	11a94 <__assert_fail@plt+0x418>
   11a78:	movw	r2, #52429	; 0xcccd
   11a7c:	mov	r0, #1
   11a80:	mov	r1, #0
   11a84:	mov	r3, r4
   11a88:	mov	r5, #0
   11a8c:	movt	r2, #1
   11a90:	bl	11478 <error@plt>
   11a94:	mov	r0, r5
   11a98:	pop	{r4, r5, fp, pc}
   11a9c:	movw	r5, #12776	; 0x31e8
   11aa0:	movt	r5, #1
   11aa4:	mov	r0, r5
   11aa8:	pop	{r4, r5, fp, pc}
   11aac:	movw	r5, #17616	; 0x44d0
   11ab0:	movt	r5, #1
   11ab4:	mov	r0, r5
   11ab8:	pop	{r4, r5, fp, pc}
   11abc:	movw	r0, #63028	; 0xf634
   11ac0:	mov	r1, #1
   11ac4:	movt	r0, #2
   11ac8:	str	r1, [r0, #16]
   11acc:	bx	lr
   11ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ad4:	add	fp, sp, #28
   11ad8:	sub	sp, sp, #4
   11adc:	vpush	{d8-d9}
   11ae0:	sub	sp, sp, #216	; 0xd8
   11ae4:	mov	r7, r1
   11ae8:	movw	r1, #6844	; 0x1abc
   11aec:	mov	sl, r0
   11af0:	mov	r0, #2
   11af4:	movt	r1, #1
   11af8:	bl	113dc <signal@plt>
   11afc:	movw	r8, #63028	; 0xf634
   11b00:	ldr	r4, [sl]
   11b04:	mov	r6, #0
   11b08:	movt	r8, #2
   11b0c:	str	r6, [sp, #76]	; 0x4c
   11b10:	str	r6, [sp, #72]	; 0x48
   11b14:	str	r6, [sp, #60]	; 0x3c
   11b18:	str	r6, [sp, #56]	; 0x38
   11b1c:	ldr	r0, [r8, #8]
   11b20:	cmp	r0, #0
   11b24:	beq	11b40 <__assert_fail@plt+0x4c4>
   11b28:	mov	r0, sl
   11b2c:	bl	11f00 <__assert_fail@plt+0x884>
   11b30:	ldr	r0, [r8, #8]
   11b34:	add	r6, r6, #1
   11b38:	cmp	r6, r0
   11b3c:	bcc	11b28 <__assert_fail@plt+0x4ac>
   11b40:	movw	r0, #63176	; 0xf6c8
   11b44:	str	r7, [sp, #12]
   11b48:	movt	r0, #2
   11b4c:	ldrb	r0, [r0]
   11b50:	tst	r0, #1
   11b54:	bne	11b7c <__assert_fail@plt+0x500>
   11b58:	ldr	r0, [sl, #20]
   11b5c:	movw	r1, #19923	; 0x4dd3
   11b60:	movt	r1, #4194	; 0x1062
   11b64:	umull	r1, r2, r0, r1
   11b68:	mov	r1, #1000	; 0x3e8
   11b6c:	lsr	r5, r2, #6
   11b70:	mls	r0, r5, r1, r0
   11b74:	mul	r6, r0, r1
   11b78:	b	11b84 <__assert_fail@plt+0x508>
   11b7c:	mov	r5, #0
   11b80:	movw	r6, #10000	; 0x2710
   11b84:	add	r0, sp, #64	; 0x40
   11b88:	mov	r1, #0
   11b8c:	bl	1146c <gettimeofday@plt>
   11b90:	mov	r0, sl
   11b94:	bl	11f00 <__assert_fail@plt+0x884>
   11b98:	ldr	r0, [r8, #16]
   11b9c:	cmp	r0, #0
   11ba0:	bne	11ed4 <__assert_fail@plt+0x858>
   11ba4:	movw	r7, #16960	; 0x4240
   11ba8:	add	r0, r4, #1
   11bac:	add	r9, sp, #80	; 0x50
   11bb0:	vmov.i32	q4, #0	; 0x00000000
   11bb4:	movt	r7, #15
   11bb8:	str	r0, [sp, #52]	; 0x34
   11bbc:	add	r0, r6, r7
   11bc0:	str	r0, [sp, #20]
   11bc4:	mvn	r0, r6
   11bc8:	str	r0, [sp, #16]
   11bcc:	add	r0, sl, #12
   11bd0:	str	r0, [sp, #28]
   11bd4:	add	r0, r9, #96	; 0x60
   11bd8:	str	r0, [sp, #48]	; 0x30
   11bdc:	add	r0, r9, #80	; 0x50
   11be0:	str	r0, [sp, #44]	; 0x2c
   11be4:	add	r0, r9, #64	; 0x40
   11be8:	str	r0, [sp, #40]	; 0x28
   11bec:	add	r0, r9, #48	; 0x30
   11bf0:	str	r0, [sp, #36]	; 0x24
   11bf4:	mov	r0, #0
   11bf8:	str	r0, [sp, #32]
   11bfc:	mov	r0, #0
   11c00:	str	r0, [sp, #8]
   11c04:	mov	r0, #0
   11c08:	str	r0, [sp, #24]
   11c0c:	b	11c44 <__assert_fail@plt+0x5c8>
   11c10:	movw	r0, #62400	; 0xf3c0
   11c14:	movt	r0, #2
   11c18:	ldr	r1, [r0, #12]
   11c1c:	ldr	r0, [sp, #28]
   11c20:	bl	12f2c <__assert_fail@plt+0x18b0>
   11c24:	cmp	r0, #0
   11c28:	bne	11ed4 <__assert_fail@plt+0x858>
   11c2c:	add	r0, sp, #64	; 0x40
   11c30:	mov	r1, #0
   11c34:	bl	1146c <gettimeofday@plt>
   11c38:	ldr	r0, [r8, #16]
   11c3c:	cmp	r0, #0
   11c40:	bne	11ed4 <__assert_fail@plt+0x858>
   11c44:	mov	r0, r9
   11c48:	mov	r1, #112	; 0x70
   11c4c:	mov	r3, #1
   11c50:	vst1.64	{d8-d9}, [r0], r1
   11c54:	vst1.64	{d8-d9}, [r0]
   11c58:	ldr	r0, [sp, #48]	; 0x30
   11c5c:	vst1.64	{d8-d9}, [r0]
   11c60:	ldr	r0, [sp, #44]	; 0x2c
   11c64:	vst1.64	{d8-d9}, [r0]
   11c68:	ldr	r0, [sp, #40]	; 0x28
   11c6c:	vst1.64	{d8-d9}, [r0]
   11c70:	ldr	r0, [sp, #36]	; 0x24
   11c74:	vst1.64	{d8-d9}, [r0]
   11c78:	add	r0, r9, #32
   11c7c:	vst1.64	{d8-d9}, [r0]
   11c80:	add	r0, r9, #16
   11c84:	vst1.64	{d8-d9}, [r0]
   11c88:	ldr	r0, [sl]
   11c8c:	asr	r1, r0, #31
   11c90:	add	r1, r0, r1, lsr #27
   11c94:	and	r0, r0, #31
   11c98:	asr	r1, r1, #5
   11c9c:	ldr	r2, [r9, r1, lsl #2]
   11ca0:	orr	r0, r2, r3, lsl r0
   11ca4:	str	r0, [r9, r1, lsl #2]
   11ca8:	add	r0, sp, #56	; 0x38
   11cac:	mov	r1, #0
   11cb0:	bl	1146c <gettimeofday@plt>
   11cb4:	ldr	r0, [sp, #64]	; 0x40
   11cb8:	ldr	r2, [sp, #68]	; 0x44
   11cbc:	ldr	r1, [sp, #56]	; 0x38
   11cc0:	ldr	r3, [sp, #60]	; 0x3c
   11cc4:	add	r0, r0, r5
   11cc8:	sub	r0, r0, r1
   11ccc:	add	r1, r2, r6
   11cd0:	sub	r1, r1, r3
   11cd4:	str	r0, [sp, #72]	; 0x48
   11cd8:	cmn	r1, #1
   11cdc:	str	r1, [sp, #76]	; 0x4c
   11ce0:	ble	11dcc <__assert_fail@plt+0x750>
   11ce4:	sub	r2, r7, #1
   11ce8:	cmp	r1, r2
   11cec:	ble	11d24 <__assert_fail@plt+0x6a8>
   11cf0:	movw	r2, #48576	; 0xbdc0
   11cf4:	movt	r2, #65520	; 0xfff0
   11cf8:	mov	r4, r2
   11cfc:	add	r1, r1, r2
   11d00:	movw	r2, #56963	; 0xde83
   11d04:	movt	r2, #17179	; 0x431b
   11d08:	umull	r2, r3, r1, r2
   11d0c:	lsr	r2, r3, #18
   11d10:	add	r0, r0, r3, lsr #18
   11d14:	mla	r1, r2, r4, r1
   11d18:	add	r0, r0, #1
   11d1c:	str	r0, [sp, #72]	; 0x48
   11d20:	str	r1, [sp, #76]	; 0x4c
   11d24:	cmn	r0, #1
   11d28:	mov	r1, r9
   11d2c:	mov	r2, #0
   11d30:	mov	r3, #0
   11d34:	movle	r0, #0
   11d38:	strle	r0, [sp, #72]	; 0x48
   11d3c:	strle	r0, [sp, #76]	; 0x4c
   11d40:	add	r0, sp, #72	; 0x48
   11d44:	str	r0, [sp]
   11d48:	ldr	r0, [sp, #52]	; 0x34
   11d4c:	bl	11400 <select@plt>
   11d50:	cmn	r0, #1
   11d54:	ble	11e30 <__assert_fail@plt+0x7b4>
   11d58:	cmp	r0, #1
   11d5c:	bne	11e60 <__assert_fail@plt+0x7e4>
   11d60:	mov	r0, sl
   11d64:	bl	14a34 <__assert_fail@plt+0x33b8>
   11d68:	cmp	r0, #0
   11d6c:	ldr	r0, [sp, #32]
   11d70:	addeq	r0, r0, #1
   11d74:	str	r0, [sp, #32]
   11d78:	ldr	r0, [sp, #24]
   11d7c:	cmp	r0, #0
   11d80:	bne	11d98 <__assert_fail@plt+0x71c>
   11d84:	add	r4, sp, #56	; 0x38
   11d88:	mov	r1, #0
   11d8c:	mov	r0, r4
   11d90:	bl	1146c <gettimeofday@plt>
   11d94:	str	r4, [sp, #24]
   11d98:	movw	r0, #62400	; 0xf3c0
   11d9c:	movt	r0, #2
   11da0:	ldr	r1, [r0, #12]
   11da4:	ldr	r0, [sp, #28]
   11da8:	bl	12f2c <__assert_fail@plt+0x18b0>
   11dac:	cmp	r0, #0
   11db0:	bne	11ed4 <__assert_fail@plt+0x858>
   11db4:	ldr	r0, [sl, #8]
   11db8:	ldr	r1, [sp, #32]
   11dbc:	sub	r0, r0, #1
   11dc0:	cmp	r0, r1
   11dc4:	bcs	11c38 <__assert_fail@plt+0x5bc>
   11dc8:	b	11ed4 <__assert_fail@plt+0x858>
   11dcc:	ldr	r1, [sp, #16]
   11dd0:	mov	ip, r5
   11dd4:	mov	r5, r6
   11dd8:	mov	r6, r7
   11ddc:	movw	r7, #56963	; 0xde83
   11de0:	movt	r7, #17179	; 0x431b
   11de4:	add	r1, r3, r1
   11de8:	sub	r1, r1, r2
   11dec:	umull	r1, r4, r1, r7
   11df0:	mov	r7, r6
   11df4:	mov	r6, r5
   11df8:	mov	r5, ip
   11dfc:	mvn	r1, r4, lsr #18
   11e00:	add	r0, r0, r1
   11e04:	ldr	r1, [sp, #20]
   11e08:	str	r0, [sp, #72]	; 0x48
   11e0c:	add	r1, r1, r2
   11e10:	lsr	r2, r4, #18
   11e14:	mla	r1, r2, r7, r1
   11e18:	sub	r1, r1, r3
   11e1c:	str	r1, [sp, #76]	; 0x4c
   11e20:	sub	r2, r7, #1
   11e24:	cmp	r1, r2
   11e28:	bgt	11cf0 <__assert_fail@plt+0x674>
   11e2c:	b	11d24 <__assert_fail@plt+0x6a8>
   11e30:	bl	11538 <__errno_location@plt>
   11e34:	ldr	r1, [r0]
   11e38:	cmp	r1, #4
   11e3c:	beq	11c38 <__assert_fail@plt+0x5bc>
   11e40:	movw	r2, #52457	; 0xcce9
   11e44:	mov	r0, #1
   11e48:	movt	r2, #1
   11e4c:	bl	11478 <error@plt>
   11e50:	ldr	r0, [r8, #16]
   11e54:	cmp	r0, #0
   11e58:	beq	11c44 <__assert_fail@plt+0x5c8>
   11e5c:	b	11ed4 <__assert_fail@plt+0x858>
   11e60:	ldr	r0, [sl, #8]
   11e64:	cmp	r0, #0
   11e68:	beq	11e78 <__assert_fail@plt+0x7fc>
   11e6c:	ldr	r1, [sl, #112]	; 0x70
   11e70:	cmp	r1, r0
   11e74:	bcs	11eb0 <__assert_fail@plt+0x834>
   11e78:	mov	r0, sl
   11e7c:	bl	11f00 <__assert_fail@plt+0x884>
   11e80:	movw	r0, #63176	; 0xf6c8
   11e84:	movt	r0, #2
   11e88:	ldr	r0, [r0]
   11e8c:	and	r0, r0, #9
   11e90:	cmp	r0, #1
   11e94:	bne	11c10 <__assert_fail@plt+0x594>
   11e98:	movw	r0, #63020	; 0xf62c
   11e9c:	movt	r0, #2
   11ea0:	ldr	r1, [r0]
   11ea4:	mov	r0, #46	; 0x2e
   11ea8:	bl	11604 <putc@plt>
   11eac:	b	11c10 <__assert_fail@plt+0x594>
   11eb0:	ldr	r0, [sp, #8]
   11eb4:	cmp	r0, #0
   11eb8:	bne	11ed4 <__assert_fail@plt+0x858>
   11ebc:	movw	r0, #62400	; 0xf3c0
   11ec0:	movt	r0, #2
   11ec4:	ldr	r5, [r0, #16]
   11ec8:	mov	r0, #1
   11ecc:	str	r0, [sp, #8]
   11ed0:	b	11c2c <__assert_fail@plt+0x5b0>
   11ed4:	mov	r0, sl
   11ed8:	bl	12eec <__assert_fail@plt+0x1870>
   11edc:	ldr	r1, [sp, #12]
   11ee0:	mov	r0, #0
   11ee4:	cmp	r1, #0
   11ee8:	beq	11ef0 <__assert_fail@plt+0x874>
   11eec:	blx	r1
   11ef0:	sub	sp, fp, #48	; 0x30
   11ef4:	vpop	{d8-d9}
   11ef8:	add	sp, sp, #4
   11efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f00:	push	{r4, r5, r6, r7, fp, lr}
   11f04:	add	fp, sp, #16
   11f08:	sub	sp, sp, #16
   11f0c:	movw	r7, #62400	; 0xf3c0
   11f10:	mov	r4, r0
   11f14:	mov	r5, #0
   11f18:	movt	r7, #2
   11f1c:	ldr	r0, [r7, #4]
   11f20:	cmp	r0, #8
   11f24:	bcc	11f58 <__assert_fail@plt+0x8dc>
   11f28:	add	r6, sp, #8
   11f2c:	mov	r1, #0
   11f30:	mov	r5, #0
   11f34:	mov	r0, r6
   11f38:	bl	1146c <gettimeofday@plt>
   11f3c:	mov	r0, r4
   11f40:	mov	r1, r6
   11f44:	mov	r2, #0
   11f48:	mov	r3, #8
   11f4c:	str	r5, [sp]
   11f50:	mov	r5, #8
   11f54:	bl	12df4 <__assert_fail@plt+0x1778>
   11f58:	movw	r0, #63172	; 0xf6c4
   11f5c:	movt	r0, #2
   11f60:	ldr	r1, [r0]
   11f64:	cmp	r1, #0
   11f68:	beq	11f8c <__assert_fail@plt+0x910>
   11f6c:	ldr	r0, [r7, #4]
   11f70:	mov	r2, #0
   11f74:	str	r2, [sp]
   11f78:	mov	r2, r5
   11f7c:	subs	r3, r0, r5
   11f80:	movls	r3, r0
   11f84:	mov	r0, r4
   11f88:	bl	12df4 <__assert_fail@plt+0x1778>
   11f8c:	mov	r0, r4
   11f90:	bl	148c4 <__assert_fail@plt+0x3248>
   11f94:	cmn	r0, #1
   11f98:	ble	11fa4 <__assert_fail@plt+0x928>
   11f9c:	sub	sp, fp, #16
   11fa0:	pop	{r4, r5, r6, r7, fp, pc}
   11fa4:	bl	11538 <__errno_location@plt>
   11fa8:	ldr	r1, [r0]
   11fac:	movw	r2, #53818	; 0xd23a
   11fb0:	mov	r0, #1
   11fb4:	movt	r2, #1
   11fb8:	bl	11478 <error@plt>
   11fbc:	sub	sp, fp, #16
   11fc0:	pop	{r4, r5, r6, r7, fp, pc}
   11fc4:	push	{r4, r5, fp, lr}
   11fc8:	add	fp, sp, #8
   11fcc:	movw	r4, #63020	; 0xf62c
   11fd0:	movt	r4, #2
   11fd4:	ldr	r0, [r4]
   11fd8:	bl	1137c <fflush@plt>
   11fdc:	movw	r5, #63184	; 0xf6d0
   11fe0:	movt	r5, #2
   11fe4:	ldr	r0, [r5]
   11fe8:	ldr	r1, [r0, #52]	; 0x34
   11fec:	movw	r0, #52471	; 0xccf7
   11ff0:	movt	r0, #1
   11ff4:	bl	11364 <printf@plt>
   11ff8:	ldr	r0, [r5]
   11ffc:	ldr	r1, [r0, #112]	; 0x70
   12000:	movw	r0, #52499	; 0xcd13
   12004:	movt	r0, #1
   12008:	bl	11364 <printf@plt>
   1200c:	ldr	r0, [r5]
   12010:	ldr	r1, [r0, #116]	; 0x74
   12014:	movw	r0, #52525	; 0xcd2d
   12018:	movt	r0, #1
   1201c:	bl	11364 <printf@plt>
   12020:	ldr	r0, [r5]
   12024:	ldr	r1, [r0, #120]	; 0x78
   12028:	cmp	r1, #0
   1202c:	beq	12040 <__assert_fail@plt+0x9c4>
   12030:	movw	r0, #52548	; 0xcd44
   12034:	movt	r0, #1
   12038:	bl	11364 <printf@plt>
   1203c:	ldr	r0, [r5]
   12040:	ldr	r1, [r0, #112]	; 0x70
   12044:	cmp	r1, #0
   12048:	beq	12084 <__assert_fail@plt+0xa08>
   1204c:	ldr	r0, [r0, #116]	; 0x74
   12050:	cmp	r1, r0
   12054:	bcs	12068 <__assert_fail@plt+0x9ec>
   12058:	movw	r0, #52566	; 0xcd56
   1205c:	movt	r0, #1
   12060:	bl	11364 <printf@plt>
   12064:	b	12084 <__assert_fail@plt+0xa08>
   12068:	sub	r0, r1, r0
   1206c:	mov	r2, #100	; 0x64
   12070:	mul	r0, r0, r2
   12074:	udiv	r1, r0, r1
   12078:	movw	r0, #52606	; 0xcd7e
   1207c:	movt	r0, #1
   12080:	bl	11364 <printf@plt>
   12084:	ldr	r1, [r4]
   12088:	mov	r0, #10
   1208c:	bl	11604 <putc@plt>
   12090:	mov	r0, #0
   12094:	pop	{r4, r5, fp, pc}
   12098:	push	{r4, r5, r6, sl, fp, lr}
   1209c:	add	fp, sp, #16
   120a0:	vpush	{d8}
   120a4:	sub	sp, sp, #8
   120a8:	mov	r4, r1
   120ac:	sub	r1, r0, #82	; 0x52
   120b0:	mov	r6, r2
   120b4:	mov	r5, #7
   120b8:	cmp	r1, #179	; 0xb3
   120bc:	bhi	123b4 <__assert_fail@plt+0xd38>
   120c0:	add	r0, pc, #0
   120c4:	ldr	pc, [r0, r1, lsl #2]
   120c8:	andeq	r2, r1, r0, lsr #7
   120cc:	andeq	r2, r1, r0, ror r5
   120d0:	andeq	r2, r1, r4, ror #7
   120d4:	andeq	r2, r1, r0, ror r5
   120d8:	andeq	r2, r1, r0, ror r5
   120dc:	andeq	r2, r1, r4, lsl r4
   120e0:	andeq	r2, r1, r0, ror r5
   120e4:	andeq	r2, r1, r0, ror r5
   120e8:	andeq	r2, r1, r0, ror r5
   120ec:	andeq	r2, r1, r0, ror r5
   120f0:	andeq	r2, r1, r0, ror r5
   120f4:	andeq	r2, r1, r0, ror r5
   120f8:	andeq	r2, r1, r0, ror r5
   120fc:	andeq	r2, r1, r0, ror r5
   12100:	andeq	r2, r1, r0, ror r5
   12104:	andeq	r2, r1, r0, ror r5
   12108:	andeq	r2, r1, r0, ror r5
   1210c:	andeq	r2, r1, r4, asr #8
   12110:	andeq	r2, r1, r4, ror #8
   12114:	andeq	r2, r1, r0, ror r5
   12118:	andeq	r2, r1, r0, ror r4
   1211c:	andeq	r2, r1, r0, ror r5
   12120:	andeq	r2, r1, r0, ror r5
   12124:	andeq	r2, r1, r4, lsl #9
   12128:	andeq	r2, r1, r0, ror r5
   1212c:	andeq	r2, r1, r0, ror r5
   12130:	andeq	r2, r1, ip, lsl r5
   12134:	andeq	r2, r1, r0, ror r5
   12138:	andeq	r2, r1, r0, lsl #11
   1213c:	andeq	r2, r1, r0, ror r5
   12140:	muleq	r1, r4, r5
   12144:	andeq	r2, r1, r4, asr #11
   12148:	ldrdeq	r2, [r1], -r8
   1214c:	andeq	r2, r1, ip, ror #11
   12150:	andeq	r2, r1, ip, lsl r6
   12154:	andeq	r2, r1, r0, ror r5
   12158:	andeq	r2, r1, r4, lsr #13
   1215c:			; <UNDEFINED> instruction: 0x000126b8
   12160:	andeq	r2, r1, r0, ror r5
   12164:	andeq	r2, r1, r0, ror r5
   12168:	andeq	r2, r1, r0, ror r5
   1216c:	andeq	r2, r1, r0, ror r5
   12170:	andeq	r2, r1, r0, ror r5
   12174:	andeq	r2, r1, r0, ror r5
   12178:	andeq	r2, r1, r0, ror r5
   1217c:	andeq	r2, r1, r0, ror r5
   12180:	andeq	r2, r1, r0, ror r5
   12184:	andeq	r2, r1, r0, ror r5
   12188:	andeq	r2, r1, r0, ror r5
   1218c:	andeq	r2, r1, r0, ror r5
   12190:	andeq	r2, r1, r0, ror r5
   12194:	andeq	r2, r1, r0, ror r5
   12198:	andeq	r2, r1, r0, ror r5
   1219c:	andeq	r2, r1, r0, ror r5
   121a0:	andeq	r2, r1, r0, ror r5
   121a4:	andeq	r2, r1, r0, ror r5
   121a8:	andeq	r2, r1, r0, ror r5
   121ac:	andeq	r2, r1, r0, ror r5
   121b0:	andeq	r2, r1, r0, ror r5
   121b4:	andeq	r2, r1, r0, ror r5
   121b8:	andeq	r2, r1, r0, ror r5
   121bc:	andeq	r2, r1, r0, ror r5
   121c0:	andeq	r2, r1, r0, ror r5
   121c4:	andeq	r2, r1, r0, ror r5
   121c8:	andeq	r2, r1, r0, ror r5
   121cc:	andeq	r2, r1, r0, ror r5
   121d0:	andeq	r2, r1, r0, ror r5
   121d4:	andeq	r2, r1, r0, ror r5
   121d8:	andeq	r2, r1, r0, ror r5
   121dc:	andeq	r2, r1, r0, ror r5
   121e0:	andeq	r2, r1, r0, ror r5
   121e4:	andeq	r2, r1, r0, ror r5
   121e8:	andeq	r2, r1, r0, ror r5
   121ec:	andeq	r2, r1, r0, ror r5
   121f0:	andeq	r2, r1, r0, ror r5
   121f4:	andeq	r2, r1, r0, ror r5
   121f8:	andeq	r2, r1, r0, ror r5
   121fc:	andeq	r2, r1, r0, ror r5
   12200:	andeq	r2, r1, r0, ror r5
   12204:	andeq	r2, r1, r0, ror r5
   12208:	andeq	r2, r1, r0, ror r5
   1220c:	andeq	r2, r1, r0, ror r5
   12210:	andeq	r2, r1, r0, ror r5
   12214:	andeq	r2, r1, r0, ror r5
   12218:	andeq	r2, r1, r0, ror r5
   1221c:	andeq	r2, r1, r0, ror r5
   12220:	andeq	r2, r1, r0, ror r5
   12224:	andeq	r2, r1, r0, ror r5
   12228:	andeq	r2, r1, r0, ror r5
   1222c:	andeq	r2, r1, r0, ror r5
   12230:	andeq	r2, r1, r0, ror r5
   12234:	andeq	r2, r1, r0, ror r5
   12238:	andeq	r2, r1, r0, ror r5
   1223c:	andeq	r2, r1, r0, ror r5
   12240:	andeq	r2, r1, r0, ror r5
   12244:	andeq	r2, r1, r0, ror r5
   12248:	andeq	r2, r1, r0, ror r5
   1224c:	andeq	r2, r1, r0, ror r5
   12250:	andeq	r2, r1, r0, ror r5
   12254:	andeq	r2, r1, r0, ror r5
   12258:	andeq	r2, r1, r0, ror r5
   1225c:	andeq	r2, r1, r0, ror r5
   12260:	andeq	r2, r1, r0, ror r5
   12264:	andeq	r2, r1, r0, ror r5
   12268:	andeq	r2, r1, r0, ror r5
   1226c:	andeq	r2, r1, r0, ror r5
   12270:	andeq	r2, r1, r0, ror r5
   12274:	andeq	r2, r1, r0, ror r5
   12278:	andeq	r2, r1, r0, ror r5
   1227c:	andeq	r2, r1, r0, ror r5
   12280:	andeq	r2, r1, r0, ror r5
   12284:	andeq	r2, r1, r0, ror r5
   12288:	andeq	r2, r1, r0, ror r5
   1228c:	andeq	r2, r1, r0, ror r5
   12290:	andeq	r2, r1, r0, ror r5
   12294:	andeq	r2, r1, r0, ror r5
   12298:	andeq	r2, r1, r0, ror r5
   1229c:	andeq	r2, r1, r0, ror r5
   122a0:	andeq	r2, r1, r0, ror r5
   122a4:	andeq	r2, r1, r0, ror r5
   122a8:	andeq	r2, r1, r0, ror r5
   122ac:	andeq	r2, r1, r0, ror r5
   122b0:	andeq	r2, r1, r0, ror r5
   122b4:	andeq	r2, r1, r0, ror r5
   122b8:	andeq	r2, r1, r0, ror r5
   122bc:	andeq	r2, r1, r0, ror r5
   122c0:	andeq	r2, r1, r0, ror r5
   122c4:	andeq	r2, r1, r0, ror r5
   122c8:	andeq	r2, r1, r0, ror r5
   122cc:	andeq	r2, r1, r0, ror r5
   122d0:	andeq	r2, r1, r0, ror r5
   122d4:	andeq	r2, r1, r0, ror r5
   122d8:	andeq	r2, r1, r0, ror r5
   122dc:	andeq	r2, r1, r0, ror r5
   122e0:	andeq	r2, r1, r0, ror r5
   122e4:	andeq	r2, r1, r0, ror r5
   122e8:	andeq	r2, r1, r0, ror r5
   122ec:	andeq	r2, r1, r0, ror r5
   122f0:	andeq	r2, r1, r0, ror r5
   122f4:	andeq	r2, r1, r0, ror r5
   122f8:	andeq	r2, r1, r0, ror r5
   122fc:	andeq	r2, r1, r0, ror r5
   12300:	andeq	r2, r1, r0, ror r5
   12304:	andeq	r2, r1, r0, ror r5
   12308:	andeq	r2, r1, r0, ror r5
   1230c:	andeq	r2, r1, r0, ror r5
   12310:	andeq	r2, r1, r0, ror r5
   12314:	andeq	r2, r1, r0, ror r5
   12318:	andeq	r2, r1, r0, ror r5
   1231c:	andeq	r2, r1, r0, ror r5
   12320:	andeq	r2, r1, r0, ror r5
   12324:	andeq	r2, r1, r0, ror r5
   12328:	andeq	r2, r1, r0, ror r5
   1232c:	andeq	r2, r1, r0, ror r5
   12330:	andeq	r2, r1, r0, ror r5
   12334:	andeq	r2, r1, r0, ror r5
   12338:	andeq	r2, r1, r0, ror r5
   1233c:	andeq	r2, r1, r0, ror r5
   12340:	andeq	r2, r1, r0, ror r5
   12344:	andeq	r2, r1, r0, ror r5
   12348:	andeq	r2, r1, r0, ror r5
   1234c:	andeq	r2, r1, r0, ror r5
   12350:	andeq	r2, r1, r0, ror r5
   12354:	andeq	r2, r1, r0, ror r5
   12358:	andeq	r2, r1, r0, ror r5
   1235c:	andeq	r2, r1, r0, ror r5
   12360:	andeq	r2, r1, r0, ror r5
   12364:	andeq	r2, r1, r0, ror r5
   12368:	andeq	r2, r1, r0, ror r5
   1236c:	andeq	r2, r1, r0, ror r5
   12370:	andeq	r2, r1, r0, ror r5
   12374:	andeq	r2, r1, r0, ror r5
   12378:	andeq	r2, r1, r0, ror r5
   1237c:	andeq	r2, r1, r0, ror r5
   12380:	ldrdeq	r2, [r1], -r8
   12384:	andeq	r2, r1, r4, ror #14
   12388:	strdeq	r2, [r1], -r0
   1238c:	andeq	r2, r1, ip, ror r8
   12390:	andeq	r2, r1, r4, lsr #18
   12394:	andeq	r2, r1, r4, asr r9
   12398:	andeq	r0, r0, r0
   1239c:	addmi	r4, pc, r0
   123a0:	movw	r0, #63176	; 0xf6c8
   123a4:	movt	r0, #2
   123a8:	ldr	r1, [r0]
   123ac:	orr	r1, r1, #16
   123b0:	b	12a20 <__assert_fail@plt+0x13a4>
   123b4:	movw	r1, #2
   123b8:	movt	r1, #256	; 0x100
   123bc:	cmp	r0, r1
   123c0:	bne	12570 <__assert_fail@plt+0xef4>
   123c4:	movw	r1, #53752	; 0xd1f8
   123c8:	mov	r0, r6
   123cc:	movt	r1, #1
   123d0:	bl	1694c <argp_error@@Base>
   123d4:	mov	r0, r5
   123d8:	sub	sp, fp, #24
   123dc:	vpop	{d8}
   123e0:	pop	{r4, r5, r6, sl, fp, pc}
   123e4:	mov	r0, r4
   123e8:	mov	r1, #255	; 0xff
   123ec:	mov	r2, #1
   123f0:	bl	12a38 <__assert_fail@plt+0x13bc>
   123f4:	movw	r1, #62400	; 0xf3c0
   123f8:	mov	r5, #0
   123fc:	movt	r1, #2
   12400:	str	r0, [r1, #8]
   12404:	mov	r0, r5
   12408:	sub	sp, fp, #24
   1240c:	vpop	{d8}
   12410:	pop	{r4, r5, r6, sl, fp, pc}
   12414:	mov	r0, r4
   12418:	mvn	r1, #-2147483648	; 0x80000000
   1241c:	mov	r2, #0
   12420:	mov	r5, #0
   12424:	bl	12a38 <__assert_fail@plt+0x13bc>
   12428:	movw	r1, #62400	; 0xf3c0
   1242c:	movt	r1, #2
   12430:	str	r0, [r1, #16]
   12434:	mov	r0, r5
   12438:	sub	sp, fp, #24
   1243c:	vpop	{d8}
   12440:	pop	{r4, r5, r6, sl, fp, pc}
   12444:	mov	r0, r4
   12448:	mov	r1, #0
   1244c:	mov	r2, #1
   12450:	mov	r5, #0
   12454:	bl	12a38 <__assert_fail@plt+0x13bc>
   12458:	movw	r1, #63028	; 0xf634
   1245c:	movt	r1, #2
   12460:	b	12608 <__assert_fail@plt+0xf8c>
   12464:	movw	r0, #63180	; 0xf6cc
   12468:	movt	r0, #2
   1246c:	b	12478 <__assert_fail@plt+0xdfc>
   12470:	movw	r0, #63176	; 0xf6c8
   12474:	movt	r0, #2
   12478:	ldr	r1, [r0]
   1247c:	orr	r1, r1, #1
   12480:	b	12a20 <__assert_fail@plt+0x13a4>
   12484:	add	r1, sp, #4
   12488:	mov	r0, r4
   1248c:	bl	11580 <strtod@plt>
   12490:	ldr	r3, [sp, #4]
   12494:	vmov.f64	d8, d0
   12498:	ldrb	r0, [r3]
   1249c:	cmp	r0, #0
   124a0:	beq	124b8 <__assert_fail@plt+0xe3c>
   124a4:	movw	r1, #53667	; 0xd1a3
   124a8:	mov	r0, r6
   124ac:	mov	r2, r4
   124b0:	movt	r1, #1
   124b4:	bl	1694c <argp_error@@Base>
   124b8:	vldr	d16, [pc, #-296]	; 12398 <__assert_fail@plt+0xd1c>
   124bc:	movw	r0, #63192	; 0xf6d8
   124c0:	mov	r5, #0
   124c4:	movt	r0, #2
   124c8:	vmul.f64	d16, d8, d16
   124cc:	vcvt.u32.f64	s0, d16
   124d0:	vcvt.u32.f64	s2, d16
   124d4:	vstr	s0, [r0]
   124d8:	movw	r0, #63176	; 0xf6c8
   124dc:	movt	r0, #2
   124e0:	ldr	r1, [r0]
   124e4:	orr	r1, r1, #2
   124e8:	str	r1, [r0]
   124ec:	vmov	r0, s2
   124f0:	cmp	r0, #199	; 0xc7
   124f4:	bhi	12570 <__assert_fail@plt+0xef4>
   124f8:	movw	r0, #63028	; 0xf634
   124fc:	movt	r0, #2
   12500:	ldrb	r0, [r0]
   12504:	cmp	r0, #0
   12508:	bne	12570 <__assert_fail@plt+0xef4>
   1250c:	movw	r2, #53698	; 0xd1c2
   12510:	mov	r5, #0
   12514:	movt	r2, #1
   12518:	b	12560 <__assert_fail@plt+0xee4>
   1251c:	add	r1, sp, #4
   12520:	mov	r0, r4
   12524:	mov	r2, #0
   12528:	mov	r5, #0
   1252c:	bl	11508 <strtoul@plt>
   12530:	movw	r1, #63028	; 0xf634
   12534:	cmp	r0, #0
   12538:	movt	r1, #2
   1253c:	str	r0, [r1, #8]
   12540:	bmi	12554 <__assert_fail@plt+0xed8>
   12544:	ldr	r0, [sp, #4]
   12548:	ldrb	r0, [r0]
   1254c:	cmp	r0, #0
   12550:	beq	12570 <__assert_fail@plt+0xef4>
   12554:	movw	r2, #53725	; 0xd1dd
   12558:	mov	r5, #0
   1255c:	movt	r2, #1
   12560:	mov	r0, #1
   12564:	mov	r1, #0
   12568:	mov	r3, r4
   1256c:	bl	11478 <error@plt>
   12570:	mov	r0, r5
   12574:	sub	sp, fp, #24
   12578:	vpop	{d8}
   1257c:	pop	{r4, r5, r6, sl, fp, pc}
   12580:	movw	r0, #63176	; 0xf6c8
   12584:	movt	r0, #2
   12588:	ldr	r1, [r0]
   1258c:	orr	r1, r1, #4
   12590:	b	12a20 <__assert_fail@plt+0x13a4>
   12594:	movw	r0, #63028	; 0xf634
   12598:	movw	r1, #62400	; 0xf3c0
   1259c:	movt	r0, #2
   125a0:	movt	r1, #2
   125a4:	add	r5, r0, #20
   125a8:	mov	r0, r4
   125ac:	mov	r2, r5
   125b0:	bl	12bb0 <__assert_fail@plt+0x1534>
   125b4:	movw	r0, #63168	; 0xf6c0
   125b8:	movt	r0, #2
   125bc:	str	r5, [r0]
   125c0:	b	12a24 <__assert_fail@plt+0x13a8>
   125c4:	movw	r0, #63176	; 0xf6c8
   125c8:	movt	r0, #2
   125cc:	ldr	r1, [r0]
   125d0:	orr	r1, r1, #8
   125d4:	b	12a20 <__assert_fail@plt+0x13a4>
   125d8:	movw	r0, #63180	; 0xf6cc
   125dc:	movt	r0, #2
   125e0:	ldr	r1, [r0]
   125e4:	orr	r1, r1, #5
   125e8:	b	12a20 <__assert_fail@plt+0x13a4>
   125ec:	mov	r0, r4
   125f0:	movw	r1, #65399	; 0xff77
   125f4:	mov	r2, #1
   125f8:	bl	12a38 <__assert_fail@plt+0x13bc>
   125fc:	movw	r1, #62400	; 0xf3c0
   12600:	mov	r5, #0
   12604:	movt	r1, #2
   12608:	str	r0, [r1, #4]
   1260c:	mov	r0, r5
   12610:	sub	sp, fp, #24
   12614:	vpop	{d8}
   12618:	pop	{r4, r5, r6, sl, fp, pc}
   1261c:	movw	r1, #52419	; 0xccc3
   12620:	mov	r0, r4
   12624:	movt	r1, #1
   12628:	bl	11448 <strcasecmp@plt>
   1262c:	cmp	r0, #0
   12630:	beq	129e0 <__assert_fail@plt+0x1364>
   12634:	movw	r1, #53558	; 0xd136
   12638:	mov	r0, r4
   1263c:	movt	r1, #1
   12640:	bl	11448 <strcasecmp@plt>
   12644:	cmp	r0, #0
   12648:	beq	129f4 <__assert_fail@plt+0x1378>
   1264c:	movw	r1, #52744	; 0xce08
   12650:	mov	r0, r4
   12654:	movt	r1, #1
   12658:	bl	11448 <strcasecmp@plt>
   1265c:	movw	r5, #17264	; 0x4370
   12660:	cmp	r0, #0
   12664:	movt	r5, #1
   12668:	beq	129fc <__assert_fail@plt+0x1380>
   1266c:	movw	r1, #52424	; 0xccc8
   12670:	mov	r0, r4
   12674:	movt	r1, #1
   12678:	bl	11448 <strcasecmp@plt>
   1267c:	cmp	r0, #0
   12680:	beq	129fc <__assert_fail@plt+0x1380>
   12684:	movw	r2, #52429	; 0xcccd
   12688:	mov	r0, #1
   1268c:	mov	r1, #0
   12690:	mov	r3, r4
   12694:	mov	r5, #0
   12698:	movt	r2, #1
   1269c:	bl	11478 <error@plt>
   126a0:	b	129fc <__assert_fail@plt+0x1380>
   126a4:	movw	r0, #63176	; 0xf6c8
   126a8:	movt	r0, #2
   126ac:	ldr	r1, [r0]
   126b0:	orr	r1, r1, #32
   126b4:	b	12a20 <__assert_fail@plt+0x13a4>
   126b8:	mov	r0, r4
   126bc:	mvn	r1, #-2147483648	; 0x80000000
   126c0:	mov	r2, #0
   126c4:	mov	r5, #0
   126c8:	bl	12a38 <__assert_fail@plt+0x13bc>
   126cc:	movw	r1, #62400	; 0xf3c0
   126d0:	movt	r1, #2
   126d4:	b	12940 <__assert_fail@plt+0x12c4>
   126d8:	movw	r0, #52419	; 0xccc3
   126dc:	movt	r0, #1
   126e0:	mov	r1, r0
   126e4:	bl	11448 <strcasecmp@plt>
   126e8:	cmp	r0, #0
   126ec:	beq	12918 <__assert_fail@plt+0x129c>
   126f0:	movw	r0, #52419	; 0xccc3
   126f4:	movw	r1, #53558	; 0xd136
   126f8:	movt	r0, #1
   126fc:	movt	r1, #1
   12700:	bl	11448 <strcasecmp@plt>
   12704:	cmp	r0, #0
   12708:	beq	129b8 <__assert_fail@plt+0x133c>
   1270c:	movw	r0, #52419	; 0xccc3
   12710:	movw	r1, #52744	; 0xce08
   12714:	movt	r0, #1
   12718:	movt	r1, #1
   1271c:	bl	11448 <strcasecmp@plt>
   12720:	movw	r4, #17264	; 0x4370
   12724:	cmp	r0, #0
   12728:	movt	r4, #1
   1272c:	beq	129c0 <__assert_fail@plt+0x1344>
   12730:	movw	r0, #52419	; 0xccc3
   12734:	movw	r1, #52424	; 0xccc8
   12738:	movt	r0, #1
   1273c:	movt	r1, #1
   12740:	bl	11448 <strcasecmp@plt>
   12744:	cmp	r0, #0
   12748:	beq	129c0 <__assert_fail@plt+0x1344>
   1274c:	movw	r2, #52429	; 0xcccd
   12750:	movw	r3, #52419	; 0xccc3
   12754:	mov	r4, #0
   12758:	movt	r2, #1
   1275c:	movt	r3, #1
   12760:	b	12908 <__assert_fail@plt+0x128c>
   12764:	movw	r0, #52744	; 0xce08
   12768:	movw	r1, #52419	; 0xccc3
   1276c:	movt	r0, #1
   12770:	movt	r1, #1
   12774:	bl	11448 <strcasecmp@plt>
   12778:	cmp	r0, #0
   1277c:	beq	12918 <__assert_fail@plt+0x129c>
   12780:	movw	r0, #52744	; 0xce08
   12784:	movw	r1, #53558	; 0xd136
   12788:	movt	r0, #1
   1278c:	movt	r1, #1
   12790:	bl	11448 <strcasecmp@plt>
   12794:	cmp	r0, #0
   12798:	beq	129b8 <__assert_fail@plt+0x133c>
   1279c:	movw	r0, #52744	; 0xce08
   127a0:	movt	r0, #1
   127a4:	mov	r1, r0
   127a8:	bl	11448 <strcasecmp@plt>
   127ac:	movw	r4, #17264	; 0x4370
   127b0:	cmp	r0, #0
   127b4:	movt	r4, #1
   127b8:	beq	129c0 <__assert_fail@plt+0x1344>
   127bc:	movw	r0, #52744	; 0xce08
   127c0:	movw	r1, #52424	; 0xccc8
   127c4:	movt	r0, #1
   127c8:	movt	r1, #1
   127cc:	bl	11448 <strcasecmp@plt>
   127d0:	cmp	r0, #0
   127d4:	beq	129c0 <__assert_fail@plt+0x1344>
   127d8:	movw	r2, #52429	; 0xcccd
   127dc:	movw	r3, #52744	; 0xce08
   127e0:	mov	r4, #0
   127e4:	movt	r2, #1
   127e8:	movt	r3, #1
   127ec:	b	12908 <__assert_fail@plt+0x128c>
   127f0:	movw	r0, #53558	; 0xd136
   127f4:	movw	r1, #52419	; 0xccc3
   127f8:	movt	r0, #1
   127fc:	movt	r1, #1
   12800:	bl	11448 <strcasecmp@plt>
   12804:	cmp	r0, #0
   12808:	beq	12918 <__assert_fail@plt+0x129c>
   1280c:	movw	r0, #53558	; 0xd136
   12810:	movt	r0, #1
   12814:	mov	r1, r0
   12818:	bl	11448 <strcasecmp@plt>
   1281c:	cmp	r0, #0
   12820:	beq	129b8 <__assert_fail@plt+0x133c>
   12824:	movw	r0, #53558	; 0xd136
   12828:	movw	r1, #52744	; 0xce08
   1282c:	movt	r0, #1
   12830:	movt	r1, #1
   12834:	bl	11448 <strcasecmp@plt>
   12838:	movw	r4, #17264	; 0x4370
   1283c:	cmp	r0, #0
   12840:	movt	r4, #1
   12844:	beq	129c0 <__assert_fail@plt+0x1344>
   12848:	movw	r0, #53558	; 0xd136
   1284c:	movw	r1, #52424	; 0xccc8
   12850:	movt	r0, #1
   12854:	movt	r1, #1
   12858:	bl	11448 <strcasecmp@plt>
   1285c:	cmp	r0, #0
   12860:	beq	129c0 <__assert_fail@plt+0x1344>
   12864:	movw	r2, #52429	; 0xcccd
   12868:	movw	r3, #53558	; 0xd136
   1286c:	mov	r4, #0
   12870:	movt	r2, #1
   12874:	movt	r3, #1
   12878:	b	12908 <__assert_fail@plt+0x128c>
   1287c:	movw	r0, #52808	; 0xce48
   12880:	movw	r1, #52419	; 0xccc3
   12884:	movt	r0, #1
   12888:	movt	r1, #1
   1288c:	bl	11448 <strcasecmp@plt>
   12890:	cmp	r0, #0
   12894:	beq	12918 <__assert_fail@plt+0x129c>
   12898:	movw	r0, #52808	; 0xce48
   1289c:	movw	r1, #53558	; 0xd136
   128a0:	movt	r0, #1
   128a4:	movt	r1, #1
   128a8:	bl	11448 <strcasecmp@plt>
   128ac:	cmp	r0, #0
   128b0:	beq	129b8 <__assert_fail@plt+0x133c>
   128b4:	movw	r0, #52808	; 0xce48
   128b8:	movw	r1, #52744	; 0xce08
   128bc:	movt	r0, #1
   128c0:	movt	r1, #1
   128c4:	bl	11448 <strcasecmp@plt>
   128c8:	movw	r4, #17264	; 0x4370
   128cc:	cmp	r0, #0
   128d0:	movt	r4, #1
   128d4:	beq	129c0 <__assert_fail@plt+0x1344>
   128d8:	movw	r0, #52808	; 0xce48
   128dc:	movw	r1, #52424	; 0xccc8
   128e0:	movt	r0, #1
   128e4:	movt	r1, #1
   128e8:	bl	11448 <strcasecmp@plt>
   128ec:	cmp	r0, #0
   128f0:	beq	129c0 <__assert_fail@plt+0x1344>
   128f4:	movw	r2, #52429	; 0xcccd
   128f8:	movw	r3, #52808	; 0xce48
   128fc:	mov	r4, #0
   12900:	movt	r2, #1
   12904:	movt	r3, #1
   12908:	mov	r0, #1
   1290c:	mov	r1, #0
   12910:	bl	11478 <error@plt>
   12914:	b	129c0 <__assert_fail@plt+0x1344>
   12918:	movw	r4, #12776	; 0x31e8
   1291c:	movt	r4, #1
   12920:	b	129c0 <__assert_fail@plt+0x1344>
   12924:	mov	r0, r4
   12928:	mov	r1, #255	; 0xff
   1292c:	mov	r2, #0
   12930:	mov	r5, #0
   12934:	bl	12a38 <__assert_fail@plt+0x13bc>
   12938:	movw	r1, #63028	; 0xf634
   1293c:	movt	r1, #2
   12940:	str	r0, [r1, #12]
   12944:	mov	r0, r5
   12948:	sub	sp, fp, #24
   1294c:	vpop	{d8}
   12950:	pop	{r4, r5, r6, sl, fp, pc}
   12954:	movw	r0, #63176	; 0xf6c8
   12958:	movt	r0, #2
   1295c:	ldr	r1, [r0]
   12960:	orr	r1, r1, #64	; 0x40
   12964:	str	r1, [r0]
   12968:	movw	r1, #53773	; 0xd20d
   1296c:	mov	r0, r4
   12970:	movt	r1, #1
   12974:	bl	11448 <strcasecmp@plt>
   12978:	cmp	r0, #0
   1297c:	beq	129ec <__assert_fail@plt+0x1370>
   12980:	movw	r1, #53780	; 0xd214
   12984:	mov	r0, r4
   12988:	movt	r1, #1
   1298c:	bl	11448 <strcasecmp@plt>
   12990:	cmp	r0, #0
   12994:	beq	12a0c <__assert_fail@plt+0x1390>
   12998:	movw	r2, #53787	; 0xd21b
   1299c:	mov	r0, #1
   129a0:	mov	r1, #0
   129a4:	mov	r3, r4
   129a8:	mov	r5, #0
   129ac:	movt	r2, #1
   129b0:	bl	11478 <error@plt>
   129b4:	b	12a10 <__assert_fail@plt+0x1394>
   129b8:	movw	r4, #17616	; 0x44d0
   129bc:	movt	r4, #1
   129c0:	movw	r0, #62400	; 0xf3c0
   129c4:	mov	r5, #0
   129c8:	movt	r0, #2
   129cc:	str	r4, [r0, #20]
   129d0:	mov	r0, r5
   129d4:	sub	sp, fp, #24
   129d8:	vpop	{d8}
   129dc:	pop	{r4, r5, r6, sl, fp, pc}
   129e0:	movw	r5, #12776	; 0x31e8
   129e4:	movt	r5, #1
   129e8:	b	129fc <__assert_fail@plt+0x1380>
   129ec:	mov	r5, #1
   129f0:	b	12a10 <__assert_fail@plt+0x1394>
   129f4:	movw	r5, #17616	; 0x44d0
   129f8:	movt	r5, #1
   129fc:	movw	r0, #62400	; 0xf3c0
   12a00:	movt	r0, #2
   12a04:	str	r5, [r0, #20]
   12a08:	b	12a24 <__assert_fail@plt+0x13a8>
   12a0c:	mov	r5, #2
   12a10:	movw	r0, #63188	; 0xf6d4
   12a14:	movt	r0, #2
   12a18:	ldr	r1, [r0]
   12a1c:	orr	r1, r1, r5
   12a20:	str	r1, [r0]
   12a24:	mov	r5, #0
   12a28:	mov	r0, r5
   12a2c:	sub	sp, fp, #24
   12a30:	vpop	{d8}
   12a34:	pop	{r4, r5, r6, sl, fp, pc}
   12a38:	push	{r4, r5, r6, r7, fp, lr}
   12a3c:	add	fp, sp, #16
   12a40:	sub	sp, sp, #8
   12a44:	mov	r7, r2
   12a48:	mov	r6, r1
   12a4c:	add	r1, sp, #4
   12a50:	mov	r2, #0
   12a54:	mov	r4, r0
   12a58:	bl	11508 <strtoul@plt>
   12a5c:	mov	r5, r0
   12a60:	ldr	r0, [sp, #4]
   12a64:	ldrb	r1, [r0]
   12a68:	cmp	r1, #0
   12a6c:	beq	12a8c <__assert_fail@plt+0x1410>
   12a70:	movw	r2, #53667	; 0xd1a3
   12a74:	str	r0, [sp]
   12a78:	mov	r0, #1
   12a7c:	mov	r1, #0
   12a80:	mov	r3, r4
   12a84:	movt	r2, #1
   12a88:	bl	11478 <error@plt>
   12a8c:	orrs	r0, r5, r7
   12a90:	beq	12aac <__assert_fail@plt+0x1430>
   12a94:	cmp	r6, #0
   12a98:	cmpne	r5, r6
   12a9c:	bhi	12ad0 <__assert_fail@plt+0x1454>
   12aa0:	mov	r0, r5
   12aa4:	sub	sp, fp, #16
   12aa8:	pop	{r4, r5, r6, r7, fp, pc}
   12aac:	movw	r2, #53698	; 0xd1c2
   12ab0:	mov	r0, #1
   12ab4:	mov	r1, #0
   12ab8:	mov	r3, r4
   12abc:	movt	r2, #1
   12ac0:	bl	11478 <error@plt>
   12ac4:	cmp	r6, #0
   12ac8:	cmpne	r5, r6
   12acc:	bls	12aa0 <__assert_fail@plt+0x1424>
   12ad0:	movw	r2, #53833	; 0xd249
   12ad4:	mov	r0, #1
   12ad8:	mov	r1, #0
   12adc:	mov	r3, r4
   12ae0:	movt	r2, #1
   12ae4:	bl	11478 <error@plt>
   12ae8:	mov	r0, r5
   12aec:	sub	sp, fp, #16
   12af0:	pop	{r4, r5, r6, r7, fp, pc}
   12af4:	push	{r4, r5, r6, r7, fp, lr}
   12af8:	add	fp, sp, #16
   12afc:	movw	r7, #62404	; 0xf3c4
   12b00:	mov	r5, r0
   12b04:	movt	r7, #2
   12b08:	ldr	r0, [r7]
   12b0c:	cmp	r0, #0
   12b10:	beq	12bac <__assert_fail@plt+0x1530>
   12b14:	mov	r4, r1
   12b18:	bl	1a740 <argp_parse@@Base+0x1b88>
   12b1c:	ldr	r2, [r7]
   12b20:	movw	ip, #63172	; 0xf6c4
   12b24:	cmp	r5, #0
   12b28:	movt	ip, #2
   12b2c:	str	r0, [ip]
   12b30:	beq	12b74 <__assert_fail@plt+0x14f8>
   12b34:	cmp	r2, #1
   12b38:	blt	12bac <__assert_fail@plt+0x1530>
   12b3c:	mov	r2, #0
   12b40:	mov	r3, #0
   12b44:	add	r1, r3, #1
   12b48:	ldrb	r3, [r5, r3]
   12b4c:	ldr	r6, [ip]
   12b50:	cmp	r1, r4
   12b54:	movcs	r1, r2
   12b58:	strb	r3, [r0], #1
   12b5c:	ldr	r3, [r7]
   12b60:	add	r3, r6, r3
   12b64:	cmp	r0, r3
   12b68:	mov	r3, r1
   12b6c:	bcc	12b44 <__assert_fail@plt+0x14c8>
   12b70:	b	12bac <__assert_fail@plt+0x1530>
   12b74:	cmp	r2, #0
   12b78:	beq	12bac <__assert_fail@plt+0x1530>
   12b7c:	mov	r2, #0
   12b80:	strb	r2, [r0]
   12b84:	ldr	r0, [r7]
   12b88:	cmp	r0, #2
   12b8c:	popcc	{r4, r5, r6, r7, fp, pc}
   12b90:	mov	r0, #1
   12b94:	ldr	r1, [ip]
   12b98:	strb	r0, [r1, r0]
   12b9c:	add	r0, r0, #1
   12ba0:	ldr	r1, [r7]
   12ba4:	cmp	r0, r1
   12ba8:	bcc	12b94 <__assert_fail@plt+0x1518>
   12bac:	pop	{r4, r5, r6, r7, fp, pc}
   12bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bb4:	add	fp, sp, #28
   12bb8:	sub	sp, sp, #12
   12bbc:	mov	r6, r0
   12bc0:	ldrb	r0, [r0]
   12bc4:	mov	r4, r1
   12bc8:	cmp	r0, #0
   12bcc:	beq	12c54 <__assert_fail@plt+0x15d8>
   12bd0:	movw	r8, #53858	; 0xd262
   12bd4:	mov	r5, r2
   12bd8:	mov	sl, #0
   12bdc:	add	r9, sp, #8
   12be0:	add	r7, sp, #4
   12be4:	movt	r8, #1
   12be8:	ldr	r0, [r4]
   12bec:	cmp	sl, r0
   12bf0:	blt	12c1c <__assert_fail@plt+0x15a0>
   12bf4:	b	12c58 <__assert_fail@plt+0x15dc>
   12bf8:	ldmib	sp, {r0, r1}
   12bfc:	strb	r1, [r5, sl]
   12c00:	add	sl, sl, #1
   12c04:	ldrb	r0, [r6, r0]!
   12c08:	cmp	r0, #0
   12c0c:	beq	12c58 <__assert_fail@plt+0x15dc>
   12c10:	ldr	r0, [r4]
   12c14:	cmp	sl, r0
   12c18:	bge	12c58 <__assert_fail@plt+0x15dc>
   12c1c:	mov	r0, r6
   12c20:	mov	r1, r8
   12c24:	mov	r2, r9
   12c28:	mov	r3, r7
   12c2c:	bl	115f8 <sscanf@plt>
   12c30:	cmp	r0, #1
   12c34:	beq	12bf8 <__assert_fail@plt+0x157c>
   12c38:	movw	r2, #53864	; 0xd268
   12c3c:	mov	r0, #1
   12c40:	mov	r1, #0
   12c44:	mov	r3, r6
   12c48:	movt	r2, #1
   12c4c:	bl	11478 <error@plt>
   12c50:	b	12bf8 <__assert_fail@plt+0x157c>
   12c54:	mov	sl, #0
   12c58:	str	sl, [r4]
   12c5c:	sub	sp, fp, #28
   12c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c64:	ldr	r3, [r1, #4]
   12c68:	ldr	r2, [r0, #4]
   12c6c:	ldr	ip, [r0]
   12c70:	sub	r3, r2, r3
   12c74:	cmn	r3, #1
   12c78:	str	r3, [r0, #4]
   12c7c:	ble	12c90 <__assert_fail@plt+0x1614>
   12c80:	ldr	r1, [r1]
   12c84:	sub	r1, ip, r1
   12c88:	str	r1, [r0]
   12c8c:	bx	lr
   12c90:	add	r2, r3, #576	; 0x240
   12c94:	sub	ip, ip, #1
   12c98:	add	r2, r2, #999424	; 0xf4000
   12c9c:	str	ip, [r0]
   12ca0:	str	r2, [r0, #4]
   12ca4:	ldr	r1, [r1]
   12ca8:	sub	r1, ip, r1
   12cac:	str	r1, [r0]
   12cb0:	bx	lr
   12cb4:	vcmpe.f64	d0, #0.0
   12cb8:	vneg.f64	d16, d0
   12cbc:	vmrs	APSR_nzcv, fpscr
   12cc0:	vmovmi.f64	d0, d16
   12cc4:	bx	lr
   12cc8:	vcmpe.f64	d0, #0.0
   12ccc:	vmov.i32	d16, #0	; 0x00000000
   12cd0:	vmrs	APSR_nzcv, fpscr
   12cd4:	vcmpepl.f64	d0, d1
   12cd8:	vmrspl	APSR_nzcv, fpscr
   12cdc:	bmi	12d18 <__assert_fail@plt+0x169c>
   12ce0:	vmov.f64	d17, #96	; 0x3f000000  0.5
   12ce4:	vmul.f64	d18, d0, d17
   12ce8:	vdiv.f64	d16, d0, d18
   12cec:	vadd.f64	d16, d18, d16
   12cf0:	vmul.f64	d16, d16, d17
   12cf4:	vsub.f64	d18, d16, d18
   12cf8:	vcmpe.f64	d18, #0.0
   12cfc:	vneg.f64	d19, d18
   12d00:	vmrs	APSR_nzcv, fpscr
   12d04:	vmovmi.f64	d18, d19
   12d08:	vcmpe.f64	d18, d1
   12d0c:	vmov.f64	d18, d16
   12d10:	vmrs	APSR_nzcv, fpscr
   12d14:	bgt	12ce8 <__assert_fail@plt+0x166c>
   12d18:	vorr	d0, d16, d16
   12d1c:	bx	lr
   12d20:	mvn	r0, r0
   12d24:	lsr	r0, r0, #31
   12d28:	bx	lr
   12d2c:	push	{r4, r5, fp, lr}
   12d30:	add	fp, sp, #8
   12d34:	mov	r5, r0
   12d38:	movw	r0, #53889	; 0xd281
   12d3c:	movw	r4, #54031	; 0xd30f
   12d40:	cmp	r2, #0
   12d44:	bic	r3, r2, #-2147483648	; 0x80000000
   12d48:	movt	r0, #1
   12d4c:	movt	r4, #1
   12d50:	movmi	r4, r0
   12d54:	mov	r0, r5
   12d58:	mov	r2, r4
   12d5c:	bl	11544 <snprintf@plt>
   12d60:	mov	r0, r5
   12d64:	pop	{r4, r5, fp, pc}
   12d68:	push	{r4, r5, fp, lr}
   12d6c:	add	fp, sp, #8
   12d70:	mov	r4, r0
   12d74:	ldr	r0, [r0, #80]	; 0x50
   12d78:	cmp	r0, #0
   12d7c:	bne	12da4 <__assert_fail@plt+0x1728>
   12d80:	cmp	r1, #0
   12d84:	ldr	r1, [r4, #56]	; 0x38
   12d88:	mov	r0, #80	; 0x50
   12d8c:	movwne	r0, #8
   12d90:	add	r0, r1, r0
   12d94:	bl	1ad00 <argp_parse@@Base+0x2148>
   12d98:	cmp	r0, #0
   12d9c:	str	r0, [r4, #80]	; 0x50
   12da0:	beq	12de8 <__assert_fail@plt+0x176c>
   12da4:	ldr	r0, [r4, #76]	; 0x4c
   12da8:	mov	r5, #0
   12dac:	cmp	r0, #0
   12db0:	beq	12dbc <__assert_fail@plt+0x1740>
   12db4:	mov	r0, r5
   12db8:	pop	{r4, r5, fp, pc}
   12dbc:	ldr	r0, [r4, #72]	; 0x48
   12dc0:	bl	1ad00 <argp_parse@@Base+0x2148>
   12dc4:	cmp	r0, #0
   12dc8:	str	r0, [r4, #76]	; 0x4c
   12dcc:	beq	12de8 <__assert_fail@plt+0x176c>
   12dd0:	ldr	r2, [r4, #72]	; 0x48
   12dd4:	mov	r1, #0
   12dd8:	mov	r5, #0
   12ddc:	bl	11568 <memset@plt>
   12de0:	mov	r0, r5
   12de4:	pop	{r4, r5, fp, pc}
   12de8:	mvn	r5, #0
   12dec:	mov	r0, r5
   12df0:	pop	{r4, r5, fp, pc}
   12df4:	push	{r4, r5, r6, r7, fp, lr}
   12df8:	add	fp, sp, #16
   12dfc:	mov	r7, r0
   12e00:	ldr	r0, [r0, #80]	; 0x50
   12e04:	mov	r4, r3
   12e08:	mov	r6, r2
   12e0c:	mov	r5, r1
   12e10:	cmp	r0, #0
   12e14:	bne	12e40 <__assert_fail@plt+0x17c4>
   12e18:	ldr	r0, [fp, #8]
   12e1c:	mov	r1, #80	; 0x50
   12e20:	cmp	r0, #0
   12e24:	ldr	r0, [r7, #56]	; 0x38
   12e28:	movwne	r1, #8
   12e2c:	add	r0, r0, r1
   12e30:	bl	1ad00 <argp_parse@@Base+0x2148>
   12e34:	cmp	r0, #0
   12e38:	str	r0, [r7, #80]	; 0x50
   12e3c:	beq	12ea0 <__assert_fail@plt+0x1824>
   12e40:	ldr	r0, [r7, #76]	; 0x4c
   12e44:	cmp	r0, #0
   12e48:	bne	12e6c <__assert_fail@plt+0x17f0>
   12e4c:	ldr	r0, [r7, #72]	; 0x48
   12e50:	bl	1ad00 <argp_parse@@Base+0x2148>
   12e54:	cmp	r0, #0
   12e58:	str	r0, [r7, #76]	; 0x4c
   12e5c:	beq	12ea0 <__assert_fail@plt+0x1824>
   12e60:	ldr	r2, [r7, #72]	; 0x48
   12e64:	mov	r1, #0
   12e68:	bl	11568 <memset@plt>
   12e6c:	ldr	r2, [r7, #56]	; 0x38
   12e70:	add	r1, r4, r6
   12e74:	mvn	r0, #0
   12e78:	cmp	r2, r1
   12e7c:	bcc	12e9c <__assert_fail@plt+0x1820>
   12e80:	ldr	r0, [r7, #80]	; 0x50
   12e84:	mov	r1, r5
   12e88:	mov	r2, r4
   12e8c:	add	r0, r0, r6
   12e90:	add	r0, r0, #8
   12e94:	bl	113d0 <memcpy@plt>
   12e98:	mov	r0, #0
   12e9c:	pop	{r4, r5, r6, r7, fp, pc}
   12ea0:	mvn	r0, #0
   12ea4:	pop	{r4, r5, r6, r7, fp, pc}
   12ea8:	str	r1, [r0, #8]
   12eac:	bx	lr
   12eb0:	push	{fp, lr}
   12eb4:	mov	fp, sp
   12eb8:	sub	sp, sp, #8
   12ebc:	str	r2, [sp, #4]
   12ec0:	mov	ip, r1
   12ec4:	mov	r1, #1
   12ec8:	ldr	r0, [r0]
   12ecc:	str	r3, [sp]
   12ed0:	add	r3, sp, #4
   12ed4:	mov	r2, ip
   12ed8:	bl	11358 <setsockopt@plt>
   12edc:	mov	sp, fp
   12ee0:	pop	{fp, pc}
   12ee4:	str	r1, [r0, #20]
   12ee8:	bx	lr
   12eec:	push	{r4, sl, fp, lr}
   12ef0:	add	fp, sp, #8
   12ef4:	mov	r4, r0
   12ef8:	ldr	r0, [r0, #80]	; 0x50
   12efc:	cmp	r0, #0
   12f00:	beq	12f10 <__assert_fail@plt+0x1894>
   12f04:	bl	19f94 <argp_parse@@Base+0x13dc>
   12f08:	mov	r0, #0
   12f0c:	str	r0, [r4, #80]	; 0x50
   12f10:	ldr	r0, [r4, #76]	; 0x4c
   12f14:	cmp	r0, #0
   12f18:	popeq	{r4, sl, fp, pc}
   12f1c:	bl	19f94 <argp_parse@@Base+0x13dc>
   12f20:	mov	r0, #0
   12f24:	str	r0, [r4, #76]	; 0x4c
   12f28:	pop	{r4, sl, fp, pc}
   12f2c:	push	{r4, r5, fp, lr}
   12f30:	add	fp, sp, #8
   12f34:	sub	sp, sp, #8
   12f38:	mov	r4, r1
   12f3c:	mov	r5, r0
   12f40:	mov	r0, sp
   12f44:	mov	r1, #0
   12f48:	bl	1146c <gettimeofday@plt>
   12f4c:	cmn	r4, #1
   12f50:	beq	12fa0 <__assert_fail@plt+0x1924>
   12f54:	ldr	r1, [r5, #4]
   12f58:	ldm	sp, {r0, r2}
   12f5c:	sub	r1, r2, r1
   12f60:	cmn	r1, #1
   12f64:	str	r1, [sp, #4]
   12f68:	bgt	12f80 <__assert_fail@plt+0x1904>
   12f6c:	add	r1, r1, #576	; 0x240
   12f70:	sub	r0, r0, #1
   12f74:	add	r1, r1, #999424	; 0xf4000
   12f78:	str	r1, [sp, #4]
   12f7c:	str	r0, [sp]
   12f80:	ldr	r1, [r5]
   12f84:	sub	r1, r0, r1
   12f88:	mov	r0, #1
   12f8c:	cmp	r1, r4
   12f90:	str	r1, [sp]
   12f94:	movlt	r0, #0
   12f98:	sub	sp, fp, #8
   12f9c:	pop	{r4, r5, fp, pc}
   12fa0:	mov	r0, #0
   12fa4:	sub	sp, fp, #8
   12fa8:	pop	{r4, r5, fp, pc}
   12fac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fb0:	add	fp, sp, #24
   12fb4:	sub	sp, sp, #320	; 0x140
   12fb8:	mov	r5, r1
   12fbc:	mov	r1, #0
   12fc0:	mov	r6, r0
   12fc4:	mov	r0, #1
   12fc8:	sub	r4, fp, #70	; 0x46
   12fcc:	mov	r3, #46	; 0x2e
   12fd0:	str	r0, [sp, #8]
   12fd4:	str	r1, [sp]
   12fd8:	str	r1, [sp, #4]
   12fdc:	mov	r0, r6
   12fe0:	mov	r1, r5
   12fe4:	mov	r2, r4
   12fe8:	bl	115bc <getnameinfo@plt>
   12fec:	cmp	r0, #0
   12ff0:	bne	130a0 <__assert_fail@plt+0x1a24>
   12ff4:	movw	r0, #63176	; 0xf6c8
   12ff8:	movt	r0, #2
   12ffc:	ldrb	r0, [r0]
   13000:	tst	r0, #4
   13004:	bne	13038 <__assert_fail@plt+0x19bc>
   13008:	mov	r1, #0
   1300c:	mov	r0, #40	; 0x28
   13010:	add	r2, sp, #18
   13014:	mov	r3, #256	; 0x100
   13018:	str	r0, [sp, #8]
   1301c:	str	r1, [sp]
   13020:	str	r1, [sp, #4]
   13024:	mov	r0, r6
   13028:	mov	r1, r5
   1302c:	bl	115bc <getnameinfo@plt>
   13030:	cmp	r0, #0
   13034:	beq	13050 <__assert_fail@plt+0x19d4>
   13038:	sub	r0, fp, #70	; 0x46
   1303c:	bl	1ac44 <argp_parse@@Base+0x208c>
   13040:	mov	r5, r0
   13044:	mov	r0, r5
   13048:	sub	sp, fp, #24
   1304c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13050:	mov	r0, r4
   13054:	bl	11514 <strlen@plt>
   13058:	add	r6, sp, #18
   1305c:	mov	r5, r0
   13060:	mov	r0, r6
   13064:	bl	11514 <strlen@plt>
   13068:	add	r0, r5, r0
   1306c:	add	r7, r0, #4
   13070:	mov	r0, r7
   13074:	bl	1a740 <argp_parse@@Base+0x1b88>
   13078:	movw	r2, #53925	; 0xd2a5
   1307c:	mov	r1, r7
   13080:	mov	r3, r6
   13084:	mov	r5, r0
   13088:	str	r4, [sp]
   1308c:	movt	r2, #1
   13090:	bl	11544 <snprintf@plt>
   13094:	mov	r0, r5
   13098:	sub	sp, fp, #24
   1309c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130a0:	cmn	r0, #11
   130a4:	bne	130b8 <__assert_fail@plt+0x1a3c>
   130a8:	bl	11538 <__errno_location@plt>
   130ac:	ldr	r0, [r0]
   130b0:	bl	114b4 <strerror@plt>
   130b4:	b	130bc <__assert_fail@plt+0x1a40>
   130b8:	bl	113b8 <gai_strerror@plt>
   130bc:	mov	r2, r0
   130c0:	movw	r0, #63016	; 0xf628
   130c4:	movw	r1, #53894	; 0xd286
   130c8:	movt	r0, #2
   130cc:	movt	r1, #1
   130d0:	ldr	r0, [r0]
   130d4:	bl	1152c <fprintf@plt>
   130d8:	movw	r0, #53917	; 0xd29d
   130dc:	movt	r0, #1
   130e0:	b	1303c <__assert_fail@plt+0x19c0>
   130e4:	push	{r4, r5, r6, r7, fp, lr}
   130e8:	add	fp, sp, #16
   130ec:	sub	sp, sp, #8
   130f0:	movw	r1, #63176	; 0xf6c8
   130f4:	str	r0, [sp, #4]
   130f8:	movt	r1, #2
   130fc:	ldrb	r1, [r1]
   13100:	tst	r1, #4
   13104:	bne	13158 <__assert_fail@plt+0x1adc>
   13108:	add	r0, sp, #4
   1310c:	mov	r1, #4
   13110:	mov	r2, #2
   13114:	bl	11418 <gethostbyaddr@plt>
   13118:	mov	r5, r0
   1311c:	ldr	r0, [sp, #4]
   13120:	bl	113f4 <inet_ntoa@plt>
   13124:	mov	r4, r0
   13128:	cmp	r5, #0
   1312c:	beq	13168 <__assert_fail@plt+0x1aec>
   13130:	mov	r0, r4
   13134:	bl	11514 <strlen@plt>
   13138:	mov	r6, r0
   1313c:	ldr	r0, [r5]
   13140:	cmp	r0, #0
   13144:	beq	13180 <__assert_fail@plt+0x1b04>
   13148:	bl	11514 <strlen@plt>
   1314c:	add	r0, r6, r0
   13150:	add	r7, r0, #5
   13154:	b	13184 <__assert_fail@plt+0x1b08>
   13158:	bl	113f4 <inet_ntoa@plt>
   1315c:	sub	sp, fp, #16
   13160:	pop	{r4, r5, r6, r7, fp, lr}
   13164:	b	1ac44 <argp_parse@@Base+0x208c>
   13168:	mov	r0, r4
   1316c:	bl	1ac44 <argp_parse@@Base+0x208c>
   13170:	mov	r6, r0
   13174:	mov	r0, r6
   13178:	sub	sp, fp, #16
   1317c:	pop	{r4, r5, r6, r7, fp, pc}
   13180:	add	r7, r6, #1
   13184:	mov	r0, r7
   13188:	bl	1a740 <argp_parse@@Base+0x1b88>
   1318c:	ldr	r3, [r5]
   13190:	mov	r6, r0
   13194:	cmp	r3, #0
   13198:	beq	131c0 <__assert_fail@plt+0x1b44>
   1319c:	movw	r2, #53925	; 0xd2a5
   131a0:	str	r4, [sp]
   131a4:	mov	r0, r6
   131a8:	mov	r1, r7
   131ac:	movt	r2, #1
   131b0:	bl	11544 <snprintf@plt>
   131b4:	mov	r0, r6
   131b8:	sub	sp, fp, #16
   131bc:	pop	{r4, r5, r6, r7, fp, pc}
   131c0:	movw	r2, #55159	; 0xd777
   131c4:	mov	r0, r6
   131c8:	mov	r1, r7
   131cc:	mov	r3, r4
   131d0:	movt	r2, #1
   131d4:	bl	11544 <snprintf@plt>
   131d8:	mov	r0, r6
   131dc:	sub	sp, fp, #16
   131e0:	pop	{r4, r5, r6, r7, fp, pc}
   131e4:	andeq	r0, r0, r0
   131e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131ec:	add	fp, sp, #24
   131f0:	sub	sp, sp, #80	; 0x50
   131f4:	movw	r7, #63176	; 0xf6c8
   131f8:	mov	r4, r0
   131fc:	movt	r7, #2
   13200:	ldr	r0, [r7]
   13204:	and	r0, r0, #3
   13208:	cmp	r0, #3
   1320c:	bne	13224 <__assert_fail@plt+0x1ba8>
   13210:	movw	r2, #53933	; 0xd2ad
   13214:	mov	r0, #1
   13218:	mov	r1, #0
   1321c:	movt	r2, #1
   13220:	bl	11478 <error@plt>
   13224:	vmov.i32	q8, #0	; 0x00000000
   13228:	add	r5, sp, #8
   1322c:	movw	r6, #63184	; 0xf6d0
   13230:	mov	r1, #8
   13234:	add	r0, r5, #8
   13238:	movt	r6, #2
   1323c:	vst1.64	{d16-d17}, [r0]
   13240:	mov	r0, #0
   13244:	str	r0, [sp, #36]	; 0x24
   13248:	str	r0, [sp, #32]
   1324c:	movw	r0, #52580	; 0xcd64
   13250:	movt	r0, #16845	; 0x41cd
   13254:	str	r0, [sp, #12]
   13258:	movw	r0, #0
   1325c:	movt	r0, #65408	; 0xff80
   13260:	str	r0, [sp, #8]
   13264:	ldr	r0, [r6]
   13268:	bl	148bc <__assert_fail@plt+0x3240>
   1326c:	movw	r8, #62404	; 0xf3c4
   13270:	ldr	r0, [r6]
   13274:	movt	r8, #2
   13278:	ldr	r1, [r8]
   1327c:	bl	14ca4 <__assert_fail@plt+0x3628>
   13280:	ldr	r0, [r6]
   13284:	movw	r1, #13372	; 0x343c
   13288:	mov	r2, r5
   1328c:	movt	r1, #1
   13290:	bl	14c98 <__assert_fail@plt+0x361c>
   13294:	ldr	r0, [r6]
   13298:	mov	r1, r4
   1329c:	bl	14cac <__assert_fail@plt+0x3630>
   132a0:	cmp	r0, #0
   132a4:	beq	132bc <__assert_fail@plt+0x1c40>
   132a8:	movw	r2, #53964	; 0xd2cc
   132ac:	mov	r0, #1
   132b0:	mov	r1, #0
   132b4:	movt	r2, #1
   132b8:	bl	11478 <error@plt>
   132bc:	ldr	r0, [r7]
   132c0:	tst	r0, #16
   132c4:	bne	132f8 <__assert_fail@plt+0x1c7c>
   132c8:	tst	r0, #64	; 0x40
   132cc:	beq	133b0 <__assert_fail@plt+0x1d34>
   132d0:	movw	r0, #63188	; 0xf6d4
   132d4:	mov	r1, #36	; 0x24
   132d8:	movt	r0, #2
   132dc:	ldr	r0, [r0]
   132e0:	tst	r0, #4
   132e4:	bne	13338 <__assert_fail@plt+0x1cbc>
   132e8:	tst	r0, #2
   132ec:	ubfx	r0, r0, #1, #1
   132f0:	movweq	r1, #40	; 0x28
   132f4:	b	1333c <__assert_fail@plt+0x1cc0>
   132f8:	vmov.i32	q8, #0	; 0x00000000
   132fc:	add	r3, sp, #40	; 0x28
   13300:	mov	r1, #40	; 0x28
   13304:	add	r0, r3, #19
   13308:	vst1.8	{d16-d17}, [r0]
   1330c:	add	r0, r3, #3
   13310:	vst1.8	{d16-d17}, [r0]
   13314:	mov	r0, #0
   13318:	str	r0, [sp, #76]	; 0x4c
   1331c:	str	r0, [sp, #72]	; 0x48
   13320:	mov	r0, #4
   13324:	strb	r0, [sp, #42]	; 0x2a
   13328:	movw	r0, #9991	; 0x2707
   1332c:	strh	r0, [sp, #40]	; 0x28
   13330:	ldr	r0, [r6]
   13334:	b	1337c <__assert_fail@plt+0x1d00>
   13338:	mov	r0, #3
   1333c:	vmov.i32	q8, #0	; 0x00000000
   13340:	add	r3, sp, #40	; 0x28
   13344:	add	r2, r3, #1
   13348:	vst1.8	{d16-d17}, [r2]
   1334c:	add	r2, r3, #17
   13350:	vst1.8	{d16-d17}, [r2]
   13354:	mov	r2, #0
   13358:	str	r2, [sp, #76]	; 0x4c
   1335c:	str	r2, [sp, #72]	; 0x48
   13360:	mov	r2, #68	; 0x44
   13364:	strb	r2, [sp, #40]	; 0x28
   13368:	strb	r0, [sp, #43]	; 0x2b
   1336c:	mov	r0, #5
   13370:	strb	r0, [sp, #42]	; 0x2a
   13374:	ldr	r0, [r6]
   13378:	strb	r1, [sp, #41]	; 0x29
   1337c:	ldr	r0, [r0]
   13380:	str	r1, [sp]
   13384:	mov	r1, #0
   13388:	mov	r2, #4
   1338c:	bl	11358 <setsockopt@plt>
   13390:	cmn	r0, #1
   13394:	bgt	133b0 <__assert_fail@plt+0x1d34>
   13398:	bl	11538 <__errno_location@plt>
   1339c:	ldr	r1, [r0]
   133a0:	movw	r2, #53977	; 0xd2d9
   133a4:	mov	r0, #1
   133a8:	movt	r2, #1
   133ac:	bl	11478 <error@plt>
   133b0:	ldr	r1, [r6]
   133b4:	ldr	r0, [r1, #28]
   133b8:	ldr	r4, [r1, #52]	; 0x34
   133bc:	bl	113f4 <inet_ntoa@plt>
   133c0:	ldr	r3, [r8]
   133c4:	mov	r2, r0
   133c8:	movw	r0, #53988	; 0xd2e4
   133cc:	mov	r1, r4
   133d0:	movt	r0, #1
   133d4:	bl	11364 <printf@plt>
   133d8:	ldrb	r0, [r7]
   133dc:	tst	r0, #32
   133e0:	beq	133fc <__assert_fail@plt+0x1d80>
   133e4:	ldr	r0, [r6]
   133e8:	ldr	r1, [r0, #60]	; 0x3c
   133ec:	movw	r0, #54017	; 0xd301
   133f0:	movt	r0, #1
   133f4:	mov	r2, r1
   133f8:	bl	11364 <printf@plt>
   133fc:	movw	r0, #63020	; 0xf62c
   13400:	movt	r0, #2
   13404:	ldr	r1, [r0]
   13408:	mov	r0, #10
   1340c:	bl	11604 <putc@plt>
   13410:	ldr	r0, [r6]
   13414:	movw	r1, #13472	; 0x34a0
   13418:	movt	r1, #1
   1341c:	bl	11ad0 <__assert_fail@plt+0x454>
   13420:	mov	r4, r0
   13424:	ldr	r0, [r6]
   13428:	ldr	r0, [r0, #52]	; 0x34
   1342c:	bl	19f94 <argp_parse@@Base+0x13dc>
   13430:	mov	r0, r4
   13434:	sub	sp, fp, #24
   13438:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1343c:	push	{fp, lr}
   13440:	mov	fp, sp
   13444:	sub	sp, sp, #16
   13448:	ldr	ip, [fp, #16]
   1344c:	ldr	r2, [fp, #12]
   13450:	ldr	lr, [fp, #8]
   13454:	cmp	r0, #2
   13458:	bcs	13480 <__assert_fail@plt+0x1e04>
   1345c:	sub	r0, r0, #1
   13460:	str	lr, [sp]
   13464:	stmib	sp, {r2, ip}
   13468:	clz	r0, r0
   1346c:	lsr	r0, r0, #5
   13470:	bl	13558 <__assert_fail@plt+0x1edc>
   13474:	mov	r0, #0
   13478:	mov	sp, fp
   1347c:	pop	{fp, pc}
   13480:	bne	13494 <__assert_fail@plt+0x1e18>
   13484:	mov	r0, r3
   13488:	mov	r1, lr
   1348c:	mov	r3, ip
   13490:	bl	141bc <__assert_fail@plt+0x2b40>
   13494:	mov	r0, #0
   13498:	mov	sp, fp
   1349c:	pop	{fp, pc}
   134a0:	push	{r4, sl, fp, lr}
   134a4:	add	fp, sp, #8
   134a8:	vpush	{d8-d10}
   134ac:	sub	sp, sp, #24
   134b0:	bl	11fc4 <__assert_fail@plt+0x948>
   134b4:	movw	r4, #63184	; 0xf6d0
   134b8:	movt	r4, #2
   134bc:	ldr	r1, [r4]
   134c0:	ldr	r0, [r1, #116]	; 0x74
   134c4:	cmp	r0, #0
   134c8:	beq	13538 <__assert_fail@plt+0x1ebc>
   134cc:	movw	r2, #62404	; 0xf3c4
   134d0:	movt	r2, #2
   134d4:	ldr	r2, [r2]
   134d8:	cmp	r2, #8
   134dc:	bcc	13538 <__assert_fail@plt+0x1ebc>
   134e0:	ldr	r2, [r1, #68]	; 0x44
   134e4:	ldr	r1, [r1, #120]	; 0x78
   134e8:	vldr	d1, [pc, #96]	; 13550 <__assert_fail@plt+0x1ed4>
   134ec:	add	r0, r1, r0
   134f0:	vldmia	r2, {d8-d9}
   134f4:	vldr	d16, [r2, #16]
   134f8:	vldr	d17, [r2, #24]
   134fc:	vmov	s0, r0
   13500:	vcvt.f64.u32	d18, s0
   13504:	vdiv.f64	d10, d16, d18
   13508:	vdiv.f64	d0, d17, d18
   1350c:	vmls.f64	d0, d10, d10
   13510:	bl	12cc8 <__assert_fail@plt+0x164c>
   13514:	vmov	r2, r3, d8
   13518:	movw	r0, #55273	; 0xd7e9
   1351c:	vstr	d10, [sp]
   13520:	vstr	d9, [sp, #8]
   13524:	vstr	d0, [sp, #16]
   13528:	movt	r0, #1
   1352c:	bl	11364 <printf@plt>
   13530:	ldr	r0, [r4]
   13534:	ldr	r0, [r0, #116]	; 0x74
   13538:	clz	r0, r0
   1353c:	lsr	r0, r0, #5
   13540:	sub	sp, fp, #32
   13544:	vpop	{d8-d10}
   13548:	pop	{r4, sl, fp, pc}
   1354c:	nop	{0}
   13550:	rscsle	sl, r1, #252, 18	; 0x3f0000
   13554:	svccc	0x0040624d
   13558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1355c:	add	fp, sp, #28
   13560:	sub	sp, sp, #4
   13564:	vpush	{d8}
   13568:	sub	sp, sp, #40	; 0x28
   1356c:	mov	r4, r1
   13570:	mov	r5, r0
   13574:	add	r0, sp, #16
   13578:	mov	r1, #0
   1357c:	mov	sl, r3
   13580:	mov	r8, #0
   13584:	bl	1146c <gettimeofday@plt>
   13588:	ldr	r0, [fp, #8]
   1358c:	mov	r1, #60	; 0x3c
   13590:	ldr	r6, [fp, #12]
   13594:	vmov.i32	d8, #0	; 0x00000000
   13598:	ldrb	r0, [r0]
   1359c:	and	r9, r1, r0, lsl #2
   135a0:	ldr	r0, [fp, #16]
   135a4:	sub	r7, r0, r9
   135a8:	bic	r0, r7, #7
   135ac:	cmp	r0, #8
   135b0:	beq	13628 <__assert_fail@plt+0x1fac>
   135b4:	ldr	r0, [r6, #8]
   135b8:	ldr	r1, [r6, #12]
   135bc:	str	r1, [sp, #28]
   135c0:	str	r0, [sp, #24]
   135c4:	add	r0, sp, #16
   135c8:	add	r1, sp, #24
   135cc:	bl	12c64 <__assert_fail@plt+0x15e8>
   135d0:	vldr	s2, [sp, #20]
   135d4:	vldr	s0, [sp, #16]
   135d8:	vldr	d16, [pc, #904]	; 13968 <__assert_fail@plt+0x22ec>
   135dc:	vldr	d17, [r4]
   135e0:	vldr	d18, [r4, #16]
   135e4:	vldr	d19, [r4, #24]
   135e8:	mov	r8, #1
   135ec:	vcvt.f64.s32	d20, s2
   135f0:	vcvt.f64.s32	d21, s0
   135f4:	vdiv.f64	d8, d20, d16
   135f8:	vmla.f64	d8, d21, d16
   135fc:	vmla.f64	d19, d8, d8
   13600:	vcmpe.f64	d8, d17
   13604:	vadd.f64	d16, d18, d8
   13608:	vmrs	APSR_nzcv, fpscr
   1360c:	vstr	d16, [r4, #16]
   13610:	vstr	d19, [r4, #24]
   13614:	vstrmi	d8, [r4]
   13618:	vldr	d16, [r4, #8]
   1361c:	vcmpe.f64	d8, d16
   13620:	vmrs	APSR_nzcv, fpscr
   13624:	vstrgt	d8, [r4, #8]
   13628:	movw	r0, #63176	; 0xf6c8
   1362c:	movt	r0, #2
   13630:	ldr	r0, [r0]
   13634:	tst	r0, #8
   13638:	bne	13bac <__assert_fail@plt+0x2530>
   1363c:	mov	r1, sl
   13640:	movw	sl, #63020	; 0xf62c
   13644:	tst	r0, #1
   13648:	mov	r0, #8
   1364c:	movt	sl, #2
   13650:	bne	13ba4 <__assert_fail@plt+0x2528>
   13654:	ldr	r0, [r1, #4]
   13658:	bl	113f4 <inet_ntoa@plt>
   1365c:	mov	r2, r0
   13660:	ldrh	r0, [r6, #6]
   13664:	mov	r1, r7
   13668:	rev16	r3, r0
   1366c:	movw	r0, #54034	; 0xd312
   13670:	movt	r0, #1
   13674:	bl	11364 <printf@plt>
   13678:	ldr	r0, [fp, #8]
   1367c:	ldrb	r1, [r0, #8]
   13680:	movw	r0, #54064	; 0xd330
   13684:	movt	r0, #1
   13688:	bl	11364 <printf@plt>
   1368c:	cmp	r8, #0
   13690:	beq	136a4 <__assert_fail@plt+0x2028>
   13694:	vmov	r2, r3, d8
   13698:	movw	r0, #54072	; 0xd338
   1369c:	movt	r0, #1
   136a0:	bl	11364 <printf@plt>
   136a4:	cmp	r5, #0
   136a8:	beq	136b8 <__assert_fail@plt+0x203c>
   136ac:	movw	r0, #54086	; 0xd346
   136b0:	movt	r0, #1
   136b4:	bl	11364 <printf@plt>
   136b8:	mov	r0, #10
   136bc:	cmp	r9, #21
   136c0:	bcc	13ba4 <__assert_fail@plt+0x2528>
   136c4:	ldr	r0, [fp, #8]
   136c8:	mov	r6, #0
   136cc:	add	r4, r0, #20
   136d0:	add	r0, r0, #24
   136d4:	str	r0, [sp, #4]
   136d8:	mov	r0, r4
   136dc:	str	r4, [sp, #12]
   136e0:	ldrb	r1, [r4, r6]
   136e4:	cmp	r1, #67	; 0x43
   136e8:	bgt	1372c <__assert_fail@plt+0x20b0>
   136ec:	b	137f4 <__assert_fail@plt+0x2178>
   136f0:	sub	r0, r6, r8
   136f4:	add	r6, r0, #6
   136f8:	ldr	r0, [sp, #8]
   136fc:	bic	r0, r0, #3
   13700:	sub	r0, r9, r0
   13704:	sub	r9, r0, #6
   13708:	ldr	r4, [sp, #12]
   1370c:	add	r6, r6, #1
   13710:	sub	r9, r9, #1
   13714:	add	r0, r4, r6
   13718:	cmp	r9, #20
   1371c:	ble	13ba0 <__assert_fail@plt+0x2524>
   13720:	ldrb	r1, [r4, r6]
   13724:	cmp	r1, #67	; 0x43
   13728:	ble	137f4 <__assert_fail@plt+0x2178>
   1372c:	cmp	r1, #68	; 0x44
   13730:	beq	138ac <__assert_fail@plt+0x2230>
   13734:	cmp	r1, #137	; 0x89
   13738:	cmpne	r1, #131	; 0x83
   1373c:	bne	138f8 <__assert_fail@plt+0x227c>
   13740:	movw	r0, #55140	; 0xd764
   13744:	cmp	r1, #131	; 0x83
   13748:	mov	r1, #83	; 0x53
   1374c:	movt	r0, #1
   13750:	movweq	r1, #76	; 0x4c
   13754:	bl	11364 <printf@plt>
   13758:	add	r0, r6, r4
   1375c:	ldrb	r0, [r0, #1]
   13760:	cmp	r0, #5
   13764:	bcc	138d4 <__assert_fail@plt+0x2258>
   13768:	ldr	r1, [fp, #8]
   1376c:	sub	r4, r0, #4
   13770:	sub	r0, r0, #5
   13774:	mov	r8, #0
   13778:	str	r0, [sp, #8]
   1377c:	add	r7, r1, r6
   13780:	b	137ac <__assert_fail@plt+0x2130>
   13784:	movw	r0, #55149	; 0xd76d
   13788:	movt	r0, #1
   1378c:	bl	11364 <printf@plt>
   13790:	add	r0, r4, r8
   13794:	cmp	r0, #5
   13798:	blt	136f0 <__assert_fail@plt+0x2074>
   1379c:	ldr	r1, [sl]
   137a0:	mov	r0, #10
   137a4:	bl	11604 <putc@plt>
   137a8:	sub	r8, r8, #4
   137ac:	sub	r0, r7, r8
   137b0:	ldr	r0, [r0, #23]
   137b4:	rev	r0, r0
   137b8:	cmp	r0, #0
   137bc:	beq	13784 <__assert_fail@plt+0x2108>
   137c0:	rev	r0, r0
   137c4:	bl	130e4 <__assert_fail@plt+0x1a68>
   137c8:	mov	r5, r0
   137cc:	movw	r0, #55158	; 0xd776
   137d0:	movt	r0, #1
   137d4:	mov	r1, r5
   137d8:	bl	11364 <printf@plt>
   137dc:	mov	r0, r5
   137e0:	bl	19f94 <argp_parse@@Base+0x13dc>
   137e4:	add	r0, r4, r8
   137e8:	cmp	r0, #5
   137ec:	bge	1379c <__assert_fail@plt+0x2120>
   137f0:	b	136f0 <__assert_fail@plt+0x2074>
   137f4:	cmp	r1, #1
   137f8:	beq	138e0 <__assert_fail@plt+0x2264>
   137fc:	cmp	r1, #7
   13800:	bne	138f0 <__assert_fail@plt+0x2274>
   13804:	add	r7, r6, #2
   13808:	mov	r8, r4
   1380c:	ldrb	r0, [r0, #1]
   13810:	ldrb	r4, [r8, r7]!
   13814:	cmp	r4, r0
   13818:	movhi	r4, r0
   1381c:	sub	r0, r9, #2
   13820:	sub	r5, r4, #4
   13824:	cmp	r5, #1
   13828:	blt	13a10 <__assert_fail@plt+0x2394>
   1382c:	cmp	r6, #0
   13830:	str	r0, [sp, #8]
   13834:	bne	13908 <__assert_fail@plt+0x228c>
   13838:	movw	r0, #63064	; 0xf658
   1383c:	movt	r0, #2
   13840:	ldr	r0, [r0]
   13844:	cmp	r5, r0
   13848:	bne	13908 <__assert_fail@plt+0x228c>
   1384c:	movw	r0, #63064	; 0xf658
   13850:	mov	r2, r5
   13854:	movt	r0, #2
   13858:	add	r1, r0, #4
   1385c:	mov	r0, r8
   13860:	bl	114fc <bcmp@plt>
   13864:	cmp	r0, #0
   13868:	bne	13908 <__assert_fail@plt+0x228c>
   1386c:	movw	r0, #63176	; 0xf6c8
   13870:	movt	r0, #2
   13874:	ldrb	r0, [r0]
   13878:	tst	r0, #1
   1387c:	bne	13908 <__assert_fail@plt+0x228c>
   13880:	movw	r0, #55162	; 0xd77a
   13884:	movt	r0, #1
   13888:	bl	11364 <printf@plt>
   1388c:	sub	r0, r4, #1
   13890:	asr	r1, r0, #31
   13894:	add	r0, r0, r1, lsr #30
   13898:	ldr	r1, [sp, #8]
   1389c:	bic	r0, r0, #3
   138a0:	add	r6, r0, r7
   138a4:	sub	r9, r1, r0
   138a8:	b	13708 <__assert_fail@plt+0x208c>
   138ac:	add	r1, r6, #2
   138b0:	ldrb	r2, [r0, #1]
   138b4:	ldrb	r8, [r4, r1]
   138b8:	cmp	r8, r2
   138bc:	movhi	r8, r2
   138c0:	cmp	r2, #9
   138c4:	bcs	1392c <__assert_fail@plt+0x22b0>
   138c8:	sub	r9, r9, #2
   138cc:	mov	r6, r1
   138d0:	b	1370c <__assert_fail@plt+0x2090>
   138d4:	add	r6, r6, #2
   138d8:	sub	r9, r9, #2
   138dc:	b	1370c <__assert_fail@plt+0x2090>
   138e0:	movw	r0, #55249	; 0xd7d1
   138e4:	movt	r0, #1
   138e8:	bl	11364 <printf@plt>
   138ec:	b	1370c <__assert_fail@plt+0x2090>
   138f0:	cmp	r1, #0
   138f4:	beq	13ba0 <__assert_fail@plt+0x2524>
   138f8:	movw	r0, #55254	; 0xd7d6
   138fc:	movt	r0, #1
   13900:	bl	11364 <printf@plt>
   13904:	b	1370c <__assert_fail@plt+0x2090>
   13908:	cmp	r5, #39	; 0x27
   1390c:	bgt	13a28 <__assert_fail@plt+0x23ac>
   13910:	movw	r0, #63064	; 0xf658
   13914:	mov	r1, r8
   13918:	mov	r2, r5
   1391c:	movt	r0, #2
   13920:	str	r5, [r0], #4
   13924:	bl	11394 <memmove@plt>
   13928:	b	13a38 <__assert_fail@plt+0x23bc>
   1392c:	ldrb	r7, [r0, #3]
   13930:	movw	r0, #55203	; 0xd7a3
   13934:	movt	r0, #1
   13938:	bl	11364 <printf@plt>
   1393c:	tst	r7, #15
   13940:	beq	13af0 <__assert_fail@plt+0x2474>
   13944:	ldr	r0, [sp, #4]
   13948:	str	r7, [sp, #8]
   1394c:	mov	r4, #0
   13950:	add	r7, r0, r6
   13954:	ldr	r0, [r7, r4]
   13958:	add	r1, r4, #5
   1395c:	tst	r1, #4
   13960:	beq	139a0 <__assert_fail@plt+0x2324>
   13964:	b	139ec <__assert_fail@plt+0x2370>
   13968:	andeq	r0, r0, r0
   1396c:	addmi	r4, pc, r0
   13970:	ldr	r1, [sl]
   13974:	mov	r0, #10
   13978:	bl	11604 <putc@plt>
   1397c:	add	r1, r4, #9
   13980:	add	r0, r4, #4
   13984:	cmp	r1, r8
   13988:	mov	r4, r0
   1398c:	bcs	13a1c <__assert_fail@plt+0x23a0>
   13990:	ldr	r0, [r7, r4]
   13994:	add	r1, r4, #5
   13998:	tst	r1, #4
   1399c:	bne	139ec <__assert_fail@plt+0x2370>
   139a0:	rev	r2, r0
   139a4:	add	r0, sp, #24
   139a8:	mov	r1, #16
   139ac:	bl	12d2c <__assert_fail@plt+0x16b0>
   139b0:	mov	r1, r0
   139b4:	movw	r0, #55208	; 0xd7a8
   139b8:	movt	r0, #1
   139bc:	bl	11364 <printf@plt>
   139c0:	movw	r0, #63176	; 0xf6c8
   139c4:	movt	r0, #2
   139c8:	ldrb	r0, [r0]
   139cc:	tst	r0, #32
   139d0:	beq	13970 <__assert_fail@plt+0x22f4>
   139d4:	ldr	r0, [r7, r4]
   139d8:	rev	r1, r0
   139dc:	movw	r0, #55215	; 0xd7af
   139e0:	movt	r0, #1
   139e4:	bl	11364 <printf@plt>
   139e8:	b	13970 <__assert_fail@plt+0x22f4>
   139ec:	bl	130e4 <__assert_fail@plt+0x1a68>
   139f0:	mov	r5, r0
   139f4:	movw	r0, #55158	; 0xd776
   139f8:	movt	r0, #1
   139fc:	mov	r1, r5
   13a00:	bl	11364 <printf@plt>
   13a04:	mov	r0, r5
   13a08:	bl	19f94 <argp_parse@@Base+0x13dc>
   13a0c:	b	1397c <__assert_fail@plt+0x2300>
   13a10:	mov	r6, r7
   13a14:	mov	r9, r0
   13a18:	b	13708 <__assert_fail@plt+0x208c>
   13a1c:	ldr	r4, [sp, #12]
   13a20:	ldr	r7, [sp, #8]
   13a24:	b	13b74 <__assert_fail@plt+0x24f8>
   13a28:	movw	r1, #63064	; 0xf658
   13a2c:	mov	r0, #0
   13a30:	movt	r1, #2
   13a34:	str	r0, [r1]
   13a38:	movw	r0, #55177	; 0xd789
   13a3c:	movt	r0, #1
   13a40:	bl	11364 <printf@plt>
   13a44:	ldr	r0, [fp, #8]
   13a48:	sub	r4, r4, #8
   13a4c:	mov	r7, #0
   13a50:	add	r8, r0, r6
   13a54:	add	r0, r8, r7
   13a58:	ldr	r0, [r0, #23]
   13a5c:	rev	r0, r0
   13a60:	cmp	r0, #0
   13a64:	beq	13ab8 <__assert_fail@plt+0x243c>
   13a68:	rev	r0, r0
   13a6c:	bl	130e4 <__assert_fail@plt+0x1a68>
   13a70:	mov	r5, r0
   13a74:	movw	r0, #55158	; 0xd776
   13a78:	movt	r0, #1
   13a7c:	mov	r1, r5
   13a80:	bl	11364 <printf@plt>
   13a84:	mov	r0, r5
   13a88:	bl	19f94 <argp_parse@@Base+0x13dc>
   13a8c:	cmp	r4, #1
   13a90:	blt	13adc <__assert_fail@plt+0x2460>
   13a94:	add	r5, r7, #4
   13a98:	cmp	r5, #40	; 0x28
   13a9c:	bcs	13ad0 <__assert_fail@plt+0x2454>
   13aa0:	ldr	r1, [sl]
   13aa4:	mov	r0, #10
   13aa8:	bl	11604 <putc@plt>
   13aac:	sub	r4, r4, #4
   13ab0:	mov	r7, r5
   13ab4:	b	13a54 <__assert_fail@plt+0x23d8>
   13ab8:	movw	r0, #55149	; 0xd76d
   13abc:	movt	r0, #1
   13ac0:	bl	11364 <printf@plt>
   13ac4:	cmp	r4, #1
   13ac8:	bge	13a94 <__assert_fail@plt+0x2418>
   13acc:	b	13adc <__assert_fail@plt+0x2460>
   13ad0:	movw	r0, #55183	; 0xd78f
   13ad4:	movt	r0, #1
   13ad8:	bl	11364 <printf@plt>
   13adc:	sub	r0, r9, r7
   13ae0:	sub	r9, r0, #6
   13ae4:	add	r0, r6, r7
   13ae8:	add	r6, r0, #6
   13aec:	b	13708 <__assert_fail@plt+0x208c>
   13af0:	ldr	r0, [sp, #4]
   13af4:	mov	r5, #0
   13af8:	add	r4, r0, r6
   13afc:	b	13b20 <__assert_fail@plt+0x24a4>
   13b00:	ldr	r1, [sl]
   13b04:	mov	r0, #10
   13b08:	bl	11604 <putc@plt>
   13b0c:	add	r1, r5, #9
   13b10:	add	r0, r5, #4
   13b14:	cmp	r1, r8
   13b18:	mov	r5, r0
   13b1c:	bcs	13b70 <__assert_fail@plt+0x24f4>
   13b20:	ldr	r0, [r4, r5]
   13b24:	mov	r1, #16
   13b28:	rev	r2, r0
   13b2c:	add	r0, sp, #24
   13b30:	bl	12d2c <__assert_fail@plt+0x16b0>
   13b34:	mov	r1, r0
   13b38:	movw	r0, #55208	; 0xd7a8
   13b3c:	movt	r0, #1
   13b40:	bl	11364 <printf@plt>
   13b44:	movw	r0, #63176	; 0xf6c8
   13b48:	movt	r0, #2
   13b4c:	ldrb	r0, [r0]
   13b50:	tst	r0, #32
   13b54:	beq	13b00 <__assert_fail@plt+0x2484>
   13b58:	ldr	r0, [r4, r5]
   13b5c:	rev	r1, r0
   13b60:	movw	r0, #55215	; 0xd7af
   13b64:	movt	r0, #1
   13b68:	bl	11364 <printf@plt>
   13b6c:	b	13b00 <__assert_fail@plt+0x2484>
   13b70:	ldr	r4, [sp, #12]
   13b74:	sub	r1, r9, r0
   13b78:	add	r0, r6, r0
   13b7c:	sub	r9, r1, #4
   13b80:	add	r6, r0, #4
   13b84:	tst	r7, #240	; 0xf0
   13b88:	beq	1370c <__assert_fail@plt+0x2090>
   13b8c:	movw	r0, #55225	; 0xd7b9
   13b90:	lsr	r1, r7, #4
   13b94:	movt	r0, #1
   13b98:	bl	11364 <printf@plt>
   13b9c:	b	1370c <__assert_fail@plt+0x2090>
   13ba0:	mov	r0, #10
   13ba4:	ldr	r1, [sl]
   13ba8:	bl	11604 <putc@plt>
   13bac:	mov	r0, #0
   13bb0:	sub	sp, fp, #40	; 0x28
   13bb4:	vpop	{d8}
   13bb8:	add	sp, sp, #4
   13bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bc4:	add	fp, sp, #28
   13bc8:	sub	sp, sp, #4
   13bcc:	mov	r4, r0
   13bd0:	mov	r8, r0
   13bd4:	mov	r1, #60	; 0x3c
   13bd8:	movw	r9, #63020	; 0xf62c
   13bdc:	ldrb	r0, [r4, #8]!
   13be0:	movt	r9, #2
   13be4:	and	r7, r1, r0, lsl #2
   13be8:	movw	r0, #63176	; 0xf6c8
   13bec:	movt	r0, #2
   13bf0:	ldrb	r0, [r0]
   13bf4:	tst	r0, #32
   13bf8:	beq	13d74 <__assert_fail@plt+0x26f8>
   13bfc:	movw	r0, #54998	; 0xd6d6
   13c00:	movt	r0, #1
   13c04:	bl	11364 <printf@plt>
   13c08:	movw	r5, #55013	; 0xd6e5
   13c0c:	mov	r6, r9
   13c10:	movw	r9, #58197	; 0xe355
   13c14:	ldrb	r1, [r4]
   13c18:	movt	r5, #1
   13c1c:	movt	r9, #1
   13c20:	mov	r0, r5
   13c24:	mov	r2, r9
   13c28:	bl	11364 <printf@plt>
   13c2c:	movw	sl, #55011	; 0xd6e3
   13c30:	ldrb	r1, [r4, #1]
   13c34:	mov	r0, r5
   13c38:	movt	sl, #1
   13c3c:	mov	r2, sl
   13c40:	bl	11364 <printf@plt>
   13c44:	ldrb	r1, [r4, #2]
   13c48:	mov	r0, r5
   13c4c:	mov	r2, r9
   13c50:	bl	11364 <printf@plt>
   13c54:	ldrb	r1, [r4, #3]
   13c58:	mov	r0, r5
   13c5c:	mov	r2, sl
   13c60:	bl	11364 <printf@plt>
   13c64:	ldrb	r1, [r4, #4]
   13c68:	mov	r0, r5
   13c6c:	mov	r2, r9
   13c70:	bl	11364 <printf@plt>
   13c74:	ldrb	r1, [r4, #5]
   13c78:	mov	r0, r5
   13c7c:	mov	r2, sl
   13c80:	bl	11364 <printf@plt>
   13c84:	ldrb	r1, [r4, #6]
   13c88:	mov	r0, r5
   13c8c:	mov	r2, r9
   13c90:	bl	11364 <printf@plt>
   13c94:	ldrb	r1, [r4, #7]
   13c98:	mov	r0, r5
   13c9c:	mov	r2, sl
   13ca0:	bl	11364 <printf@plt>
   13ca4:	ldrb	r1, [r4, #8]
   13ca8:	mov	r0, r5
   13cac:	mov	r2, r9
   13cb0:	bl	11364 <printf@plt>
   13cb4:	ldrb	r1, [r4, #9]
   13cb8:	mov	r0, r5
   13cbc:	mov	r2, sl
   13cc0:	bl	11364 <printf@plt>
   13cc4:	ldrb	r1, [r4, #10]
   13cc8:	mov	r0, r5
   13ccc:	mov	r2, r9
   13cd0:	bl	11364 <printf@plt>
   13cd4:	ldrb	r1, [r4, #11]
   13cd8:	mov	r0, r5
   13cdc:	mov	r2, sl
   13ce0:	bl	11364 <printf@plt>
   13ce4:	ldrb	r1, [r4, #12]
   13ce8:	mov	r0, r5
   13cec:	mov	r2, r9
   13cf0:	bl	11364 <printf@plt>
   13cf4:	ldrb	r1, [r4, #13]
   13cf8:	mov	r0, r5
   13cfc:	mov	r2, sl
   13d00:	bl	11364 <printf@plt>
   13d04:	ldrb	r1, [r4, #14]
   13d08:	mov	r0, r5
   13d0c:	mov	r2, r9
   13d10:	bl	11364 <printf@plt>
   13d14:	ldrb	r1, [r4, #15]
   13d18:	mov	r0, r5
   13d1c:	mov	r2, sl
   13d20:	bl	11364 <printf@plt>
   13d24:	ldrb	r1, [r4, #16]
   13d28:	mov	r0, r5
   13d2c:	mov	r2, r9
   13d30:	bl	11364 <printf@plt>
   13d34:	ldrb	r1, [r4, #17]
   13d38:	mov	r0, r5
   13d3c:	mov	r2, sl
   13d40:	bl	11364 <printf@plt>
   13d44:	ldrb	r1, [r4, #18]
   13d48:	mov	r2, r9
   13d4c:	mov	r0, r5
   13d50:	mov	r9, r6
   13d54:	bl	11364 <printf@plt>
   13d58:	ldrb	r1, [r4, #19]
   13d5c:	mov	r0, r5
   13d60:	mov	r2, sl
   13d64:	bl	11364 <printf@plt>
   13d68:	ldr	r1, [r6]
   13d6c:	mov	r0, #10
   13d70:	bl	11604 <putc@plt>
   13d74:	movw	r0, #55329	; 0xd821
   13d78:	movt	r0, #1
   13d7c:	bl	11490 <puts@plt>
   13d80:	ldrb	r0, [r8, #8]
   13d84:	ldrb	r3, [r8, #9]
   13d88:	lsr	r1, r0, #4
   13d8c:	and	r2, r0, #15
   13d90:	movw	r0, #55020	; 0xd6ec
   13d94:	movt	r0, #1
   13d98:	bl	11364 <printf@plt>
   13d9c:	ldrh	r1, [r8, #10]
   13da0:	rev	r0, r1
   13da4:	cmp	r1, #8192	; 0x2000
   13da8:	rorhi	r1, r0, #16
   13dac:	ldrh	r0, [r8, #12]
   13db0:	rev16	r2, r0
   13db4:	movw	r0, #55036	; 0xd6fc
   13db8:	movt	r0, #1
   13dbc:	bl	11364 <printf@plt>
   13dc0:	ldrh	r0, [r8, #14]
   13dc4:	rev	r0, r0
   13dc8:	lsr	r1, r0, #29
   13dcc:	ubfx	r2, r0, #16, #13
   13dd0:	movw	r0, #55047	; 0xd707
   13dd4:	movt	r0, #1
   13dd8:	bl	11364 <printf@plt>
   13ddc:	ldrh	r0, [r8, #18]
   13de0:	ldrb	r1, [r8, #16]
   13de4:	ldrb	r2, [r8, #17]
   13de8:	rev16	r3, r0
   13dec:	movw	r0, #55059	; 0xd713
   13df0:	movt	r0, #1
   13df4:	bl	11364 <printf@plt>
   13df8:	ldr	r0, [r8, #20]
   13dfc:	bl	113f4 <inet_ntoa@plt>
   13e00:	movw	r5, #55077	; 0xd725
   13e04:	mov	r1, r0
   13e08:	movt	r5, #1
   13e0c:	mov	r0, r5
   13e10:	bl	11364 <printf@plt>
   13e14:	ldr	r0, [r8, #24]
   13e18:	bl	113f4 <inet_ntoa@plt>
   13e1c:	mov	r1, r0
   13e20:	mov	r0, r5
   13e24:	bl	11364 <printf@plt>
   13e28:	cmp	r7, #21
   13e2c:	bcc	13e54 <__assert_fail@plt+0x27d8>
   13e30:	movw	r5, #55031	; 0xd6f7
   13e34:	add	r6, r4, #20
   13e38:	movt	r5, #1
   13e3c:	ldrb	r1, [r6], #1
   13e40:	mov	r0, r5
   13e44:	bl	11364 <printf@plt>
   13e48:	sub	r7, r7, #1
   13e4c:	cmp	r7, #20
   13e50:	bhi	13e3c <__assert_fail@plt+0x27c0>
   13e54:	ldr	r1, [r9]
   13e58:	mov	r0, #10
   13e5c:	bl	11604 <putc@plt>
   13e60:	ldrb	r1, [r8, #8]
   13e64:	ldrb	r0, [r8, #17]
   13e68:	mov	r2, #60	; 0x3c
   13e6c:	and	r1, r2, r1, lsl #2
   13e70:	cmp	r0, #1
   13e74:	add	r5, r4, r1
   13e78:	beq	13eb8 <__assert_fail@plt+0x283c>
   13e7c:	cmp	r0, #17
   13e80:	beq	13f1c <__assert_fail@plt+0x28a0>
   13e84:	cmp	r0, #6
   13e88:	bne	13f48 <__assert_fail@plt+0x28cc>
   13e8c:	ldrb	r0, [r5]
   13e90:	ldrb	r1, [r5, #1]
   13e94:	ldrb	r2, [r5, #2]
   13e98:	ldrb	r3, [r5, #3]
   13e9c:	orr	r1, r1, r0, lsl #8
   13ea0:	movw	r0, #54602	; 0xd54a
   13ea4:	orr	r2, r3, r2, lsl #8
   13ea8:	movt	r0, #1
   13eac:	sub	sp, fp, #28
   13eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb4:	b	11364 <printf@plt>
   13eb8:	ldrh	r0, [r8, #10]
   13ebc:	ldrb	r4, [r5]
   13ec0:	ldrb	r2, [r5, #1]
   13ec4:	rev	r0, r0
   13ec8:	rsb	r3, r1, r0, lsr #16
   13ecc:	movw	r0, #54684	; 0xd59c
   13ed0:	mov	r1, r4
   13ed4:	movt	r0, #1
   13ed8:	bl	11364 <printf@plt>
   13edc:	tst	r4, #247	; 0xf7
   13ee0:	bne	13f08 <__assert_fail@plt+0x288c>
   13ee4:	ldrb	r0, [r5, #4]
   13ee8:	ldrb	r1, [r5, #5]
   13eec:	ldrb	r2, [r5, #6]
   13ef0:	ldrb	r3, [r5, #7]
   13ef4:	orr	r1, r1, r0, lsl #8
   13ef8:	movw	r0, #54716	; 0xd5bc
   13efc:	orr	r2, r3, r2, lsl #8
   13f00:	movt	r0, #1
   13f04:	bl	11364 <printf@plt>
   13f08:	ldr	r1, [r9]
   13f0c:	mov	r0, #10
   13f10:	sub	sp, fp, #28
   13f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f18:	b	11604 <putc@plt>
   13f1c:	ldrb	r0, [r5]
   13f20:	ldrb	r1, [r5, #1]
   13f24:	ldrb	r2, [r5, #2]
   13f28:	ldrb	r3, [r5, #3]
   13f2c:	orr	r1, r1, r0, lsl #8
   13f30:	movw	r0, #54643	; 0xd573
   13f34:	orr	r2, r3, r2, lsl #8
   13f38:	movt	r0, #1
   13f3c:	sub	sp, fp, #28
   13f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f44:	b	11364 <printf@plt>
   13f48:	sub	sp, fp, #28
   13f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f50:	push	{r4, sl, fp, lr}
   13f54:	add	fp, sp, #8
   13f58:	movw	r3, #62460	; 0xf3fc
   13f5c:	mov	r4, r0
   13f60:	movt	r3, #2
   13f64:	ldrb	lr, [r4]
   13f68:	ldrb	r2, [r4, #1]
   13f6c:	ldr	r0, [r3]
   13f70:	cmp	r0, lr
   13f74:	ldreq	r0, [r3, #4]
   13f78:	cmpeq	r0, r2
   13f7c:	beq	14154 <__assert_fail@plt+0x2ad8>
   13f80:	movw	ip, #62460	; 0xf3fc
   13f84:	movt	ip, #2
   13f88:	mov	r3, ip
   13f8c:	ldr	r0, [r3, #12]!
   13f90:	cmp	r0, lr
   13f94:	ldreq	r0, [r3, #4]
   13f98:	cmpeq	r0, r2
   13f9c:	beq	14154 <__assert_fail@plt+0x2ad8>
   13fa0:	mov	r3, ip
   13fa4:	ldr	r0, [r3, #24]!
   13fa8:	cmp	r0, lr
   13fac:	ldreq	r0, [r3, #4]
   13fb0:	cmpeq	r0, r2
   13fb4:	beq	14154 <__assert_fail@plt+0x2ad8>
   13fb8:	mov	r3, ip
   13fbc:	ldr	r0, [r3, #36]!	; 0x24
   13fc0:	cmp	r0, lr
   13fc4:	ldreq	r0, [r3, #4]
   13fc8:	cmpeq	r0, r2
   13fcc:	beq	14154 <__assert_fail@plt+0x2ad8>
   13fd0:	mov	r3, ip
   13fd4:	ldr	r0, [r3, #48]!	; 0x30
   13fd8:	cmp	r0, lr
   13fdc:	ldreq	r0, [r3, #4]
   13fe0:	cmpeq	r0, r2
   13fe4:	beq	14154 <__assert_fail@plt+0x2ad8>
   13fe8:	mov	r3, ip
   13fec:	ldr	r0, [r3, #60]!	; 0x3c
   13ff0:	cmp	r0, lr
   13ff4:	ldreq	r0, [r3, #4]
   13ff8:	cmpeq	r0, r2
   13ffc:	beq	14154 <__assert_fail@plt+0x2ad8>
   14000:	mov	r3, ip
   14004:	ldr	r0, [r3, #72]!	; 0x48
   14008:	cmp	r0, lr
   1400c:	ldreq	r0, [r3, #4]
   14010:	cmpeq	r0, r2
   14014:	beq	14154 <__assert_fail@plt+0x2ad8>
   14018:	mov	r3, ip
   1401c:	ldr	r0, [r3, #84]!	; 0x54
   14020:	cmp	r0, lr
   14024:	ldreq	r0, [r3, #4]
   14028:	cmpeq	r0, r2
   1402c:	beq	14154 <__assert_fail@plt+0x2ad8>
   14030:	mov	r3, ip
   14034:	ldr	r0, [r3, #96]!	; 0x60
   14038:	cmp	r0, lr
   1403c:	ldreq	r0, [r3, #4]
   14040:	cmpeq	r0, r2
   14044:	beq	14154 <__assert_fail@plt+0x2ad8>
   14048:	mov	r3, ip
   1404c:	ldr	r0, [r3, #108]!	; 0x6c
   14050:	cmp	r0, lr
   14054:	ldreq	r0, [r3, #4]
   14058:	cmpeq	r0, r2
   1405c:	beq	14154 <__assert_fail@plt+0x2ad8>
   14060:	mov	r3, ip
   14064:	ldr	r0, [r3, #120]!	; 0x78
   14068:	cmp	r0, lr
   1406c:	ldreq	r0, [r3, #4]
   14070:	cmpeq	r0, r2
   14074:	beq	14154 <__assert_fail@plt+0x2ad8>
   14078:	mov	r3, ip
   1407c:	ldr	r0, [r3, #132]!	; 0x84
   14080:	cmp	r0, lr
   14084:	ldreq	r0, [r3, #4]
   14088:	cmpeq	r0, r2
   1408c:	beq	14154 <__assert_fail@plt+0x2ad8>
   14090:	mov	r3, ip
   14094:	ldr	r0, [r3, #144]!	; 0x90
   14098:	cmp	r0, lr
   1409c:	ldreq	r0, [r3, #4]
   140a0:	cmpeq	r0, r2
   140a4:	beq	14154 <__assert_fail@plt+0x2ad8>
   140a8:	mov	r3, ip
   140ac:	ldr	r0, [r3, #156]!	; 0x9c
   140b0:	cmp	r0, lr
   140b4:	ldreq	r0, [r3, #4]
   140b8:	cmpeq	r0, r2
   140bc:	beq	14154 <__assert_fail@plt+0x2ad8>
   140c0:	mov	r3, ip
   140c4:	ldr	r0, [r3, #168]!	; 0xa8
   140c8:	cmp	r0, lr
   140cc:	ldreq	r0, [r3, #4]
   140d0:	cmpeq	r0, r2
   140d4:	beq	14154 <__assert_fail@plt+0x2ad8>
   140d8:	mov	r3, ip
   140dc:	ldr	r0, [r3, #180]!	; 0xb4
   140e0:	cmp	r0, lr
   140e4:	ldreq	r0, [r3, #4]
   140e8:	cmpeq	r0, r2
   140ec:	beq	14154 <__assert_fail@plt+0x2ad8>
   140f0:	mov	r3, ip
   140f4:	ldr	r0, [r3, #192]!	; 0xc0
   140f8:	cmp	r0, lr
   140fc:	ldreq	r0, [r3, #4]
   14100:	cmpeq	r0, r2
   14104:	beq	14154 <__assert_fail@plt+0x2ad8>
   14108:	mov	r3, ip
   1410c:	ldr	r0, [r3, #204]!	; 0xcc
   14110:	cmp	r0, lr
   14114:	ldreq	r0, [r3, #4]
   14118:	cmpeq	r0, r2
   1411c:	beq	14154 <__assert_fail@plt+0x2ad8>
   14120:	mov	r3, ip
   14124:	ldr	r0, [r3, #216]!	; 0xd8
   14128:	cmp	r0, lr
   1412c:	ldreq	r0, [r3, #4]
   14130:	cmpeq	r0, r2
   14134:	beq	14154 <__assert_fail@plt+0x2ad8>
   14138:	ldr	r0, [ip, #228]!	; 0xe4
   1413c:	cmp	r0, lr
   14140:	bne	1417c <__assert_fail@plt+0x2b00>
   14144:	ldr	r0, [ip, #4]
   14148:	mov	r3, ip
   1414c:	cmp	r0, r2
   14150:	bne	1417c <__assert_fail@plt+0x2b00>
   14154:	ldr	r0, [r3, #8]
   14158:	bl	11490 <puts@plt>
   1415c:	movw	r0, #63176	; 0xf6c8
   14160:	movt	r0, #2
   14164:	ldrb	r0, [r0]
   14168:	tst	r0, #32
   1416c:	popeq	{r4, sl, fp, pc}
   14170:	mov	r0, r4
   14174:	pop	{r4, sl, fp, lr}
   14178:	b	13bc0 <__assert_fail@plt+0x2544>
   1417c:	movw	r0, #55082	; 0xd72a
   14180:	movt	r0, #1
   14184:	bl	11364 <printf@plt>
   14188:	b	1415c <__assert_fail@plt+0x2ae0>
   1418c:	push	{r4, sl, fp, lr}
   14190:	add	fp, sp, #8
   14194:	mov	r4, r0
   14198:	ldr	r0, [r0, #4]
   1419c:	bl	113f4 <inet_ntoa@plt>
   141a0:	mov	r1, r0
   141a4:	movw	r0, #55104	; 0xd740
   141a8:	movt	r0, #1
   141ac:	bl	11364 <printf@plt>
   141b0:	mov	r0, r4
   141b4:	pop	{r4, sl, fp, lr}
   141b8:	b	13bc0 <__assert_fail@plt+0x2544>
   141bc:	push	{r4, r5, r6, r7, fp, lr}
   141c0:	add	fp, sp, #16
   141c4:	mov	r4, r2
   141c8:	movw	r2, #63176	; 0xf6c8
   141cc:	ldrb	r1, [r1]
   141d0:	mov	r5, r3
   141d4:	movt	r2, #2
   141d8:	ldrb	r2, [r2]
   141dc:	tst	r2, #32
   141e0:	bne	14200 <__assert_fail@plt+0x2b84>
   141e4:	movw	r3, #63184	; 0xf6d0
   141e8:	ldr	r2, [r4, #24]
   141ec:	movt	r3, #2
   141f0:	ldr	r3, [r3]
   141f4:	ldr	r3, [r3, #28]
   141f8:	cmp	r2, r3
   141fc:	popne	{r4, r5, r6, r7, fp, pc}
   14200:	mov	r2, #60	; 0x3c
   14204:	and	r7, r2, r1, lsl #2
   14208:	mov	r1, #16
   1420c:	bl	12fac <__assert_fail@plt+0x1930>
   14210:	mov	r6, r0
   14214:	movw	r0, #54960	; 0xd6b0
   14218:	sub	r1, r5, r7
   1421c:	movt	r0, #1
   14220:	mov	r2, r6
   14224:	bl	11364 <printf@plt>
   14228:	mov	r0, r6
   1422c:	bl	19f94 <argp_parse@@Base+0x13dc>
   14230:	movw	r5, #62700	; 0xf4ec
   14234:	ldrb	r1, [r4]
   14238:	movt	r5, #2
   1423c:	ldr	r0, [r5]
   14240:	cmp	r0, r1
   14244:	beq	14330 <__assert_fail@plt+0x2cb4>
   14248:	movw	r0, #62700	; 0xf4ec
   1424c:	movt	r0, #2
   14250:	mov	r5, r0
   14254:	ldr	r2, [r5, #16]!
   14258:	cmp	r2, r1
   1425c:	beq	14330 <__assert_fail@plt+0x2cb4>
   14260:	mov	r5, r0
   14264:	ldr	r2, [r5, #32]!
   14268:	cmp	r2, r1
   1426c:	beq	14330 <__assert_fail@plt+0x2cb4>
   14270:	mov	r5, r0
   14274:	ldr	r2, [r5, #48]!	; 0x30
   14278:	cmp	r2, r1
   1427c:	beq	14330 <__assert_fail@plt+0x2cb4>
   14280:	mov	r5, r0
   14284:	ldr	r2, [r5, #64]!	; 0x40
   14288:	cmp	r2, r1
   1428c:	beq	14330 <__assert_fail@plt+0x2cb4>
   14290:	mov	r5, r0
   14294:	ldr	r2, [r5, #80]!	; 0x50
   14298:	cmp	r2, r1
   1429c:	beq	14330 <__assert_fail@plt+0x2cb4>
   142a0:	mov	r5, r0
   142a4:	ldr	r2, [r5, #96]!	; 0x60
   142a8:	cmp	r2, r1
   142ac:	beq	14330 <__assert_fail@plt+0x2cb4>
   142b0:	mov	r5, r0
   142b4:	ldr	r2, [r5, #112]!	; 0x70
   142b8:	cmp	r2, r1
   142bc:	beq	14330 <__assert_fail@plt+0x2cb4>
   142c0:	mov	r5, r0
   142c4:	ldr	r2, [r5, #128]!	; 0x80
   142c8:	cmp	r2, r1
   142cc:	beq	14330 <__assert_fail@plt+0x2cb4>
   142d0:	mov	r5, r0
   142d4:	ldr	r2, [r5, #144]!	; 0x90
   142d8:	cmp	r2, r1
   142dc:	beq	14330 <__assert_fail@plt+0x2cb4>
   142e0:	mov	r5, r0
   142e4:	ldr	r2, [r5, #160]!	; 0xa0
   142e8:	cmp	r2, r1
   142ec:	beq	14330 <__assert_fail@plt+0x2cb4>
   142f0:	mov	r5, r0
   142f4:	ldr	r2, [r5, #176]!	; 0xb0
   142f8:	cmp	r2, r1
   142fc:	beq	14330 <__assert_fail@plt+0x2cb4>
   14300:	mov	r5, r0
   14304:	ldr	r2, [r5, #192]!	; 0xc0
   14308:	cmp	r2, r1
   1430c:	beq	14330 <__assert_fail@plt+0x2cb4>
   14310:	mov	r5, r0
   14314:	ldr	r2, [r5, #208]!	; 0xd0
   14318:	cmp	r2, r1
   1431c:	beq	14330 <__assert_fail@plt+0x2cb4>
   14320:	ldr	r2, [r0, #224]!	; 0xe0
   14324:	mov	r5, r0
   14328:	cmp	r2, r1
   1432c:	bne	14360 <__assert_fail@plt+0x2ce4>
   14330:	ldr	r0, [r5, #4]
   14334:	cmp	r0, #0
   14338:	beq	14340 <__assert_fail@plt+0x2cc4>
   1433c:	bl	11490 <puts@plt>
   14340:	ldr	r2, [r5, #8]
   14344:	cmp	r2, #0
   14348:	beq	1435c <__assert_fail@plt+0x2ce0>
   1434c:	ldr	r1, [r5, #12]
   14350:	mov	r0, r4
   14354:	pop	{r4, r5, r6, r7, fp, lr}
   14358:	bx	r2
   1435c:	pop	{r4, r5, r6, r7, fp, pc}
   14360:	movw	r0, #54979	; 0xd6c3
   14364:	movt	r0, #1
   14368:	pop	{r4, r5, r6, r7, fp, lr}
   1436c:	b	11364 <printf@plt>
   14370:	push	{r4, r5, fp, lr}
   14374:	add	fp, sp, #8
   14378:	movw	r5, #63184	; 0xf6d0
   1437c:	mov	r4, r0
   14380:	mov	r1, #17
   14384:	movt	r5, #2
   14388:	ldr	r0, [r5]
   1438c:	bl	148bc <__assert_fail@plt+0x3240>
   14390:	ldr	r0, [r5]
   14394:	movw	r1, #17436	; 0x441c
   14398:	mov	r2, #0
   1439c:	movt	r1, #1
   143a0:	bl	14c98 <__assert_fail@plt+0x361c>
   143a4:	ldr	r0, [r5]
   143a8:	mov	r1, #12
   143ac:	bl	14ca4 <__assert_fail@plt+0x3628>
   143b0:	ldr	r0, [r5]
   143b4:	mov	r1, #1
   143b8:	bl	12ea8 <__assert_fail@plt+0x182c>
   143bc:	ldr	r0, [r5]
   143c0:	mov	r1, r4
   143c4:	bl	14cac <__assert_fail@plt+0x3630>
   143c8:	cmp	r0, #0
   143cc:	beq	143e4 <__assert_fail@plt+0x2d68>
   143d0:	movw	r2, #53964	; 0xd2cc
   143d4:	mov	r0, #1
   143d8:	mov	r1, #0
   143dc:	movt	r2, #1
   143e0:	bl	11478 <error@plt>
   143e4:	ldr	r1, [r5]
   143e8:	ldr	r0, [r1, #28]
   143ec:	ldr	r4, [r1, #52]	; 0x34
   143f0:	bl	113f4 <inet_ntoa@plt>
   143f4:	mov	r2, r0
   143f8:	movw	r0, #55389	; 0xd85d
   143fc:	mov	r1, r4
   14400:	movt	r0, #1
   14404:	bl	11364 <printf@plt>
   14408:	ldr	r0, [r5]
   1440c:	movw	r1, #17600	; 0x44c0
   14410:	movt	r1, #1
   14414:	pop	{r4, r5, fp, lr}
   14418:	b	11ad0 <__assert_fail@plt+0x454>
   1441c:	push	{r4, r5, r6, sl, fp, lr}
   14420:	add	fp, sp, #16
   14424:	ldr	r5, [fp, #16]
   14428:	ldr	r4, [fp, #12]
   1442c:	cmp	r0, #2
   14430:	bcs	144a0 <__assert_fail@plt+0x2e24>
   14434:	mov	r6, r0
   14438:	ldr	r0, [r3, #4]
   1443c:	bl	113f4 <inet_ntoa@plt>
   14440:	mov	r2, r0
   14444:	ldrh	r0, [r4, #6]
   14448:	mov	r1, r5
   1444c:	rev16	r3, r0
   14450:	movw	r0, #54034	; 0xd312
   14454:	movt	r0, #1
   14458:	bl	11364 <printf@plt>
   1445c:	cmp	r6, #1
   14460:	bne	14470 <__assert_fail@plt+0x2df4>
   14464:	movw	r0, #54086	; 0xd346
   14468:	movt	r0, #1
   1446c:	bl	11364 <printf@plt>
   14470:	mov	r0, #10
   14474:	bl	11574 <putchar@plt>
   14478:	ldr	r0, [r4, #8]
   1447c:	bl	113f4 <inet_ntoa@plt>
   14480:	mov	r1, r0
   14484:	movw	r0, #55433	; 0xd889
   14488:	movt	r0, #1
   1448c:	bl	11364 <printf@plt>
   14490:	mov	r0, #10
   14494:	bl	11574 <putchar@plt>
   14498:	mov	r0, #0
   1449c:	pop	{r4, r5, r6, sl, fp, pc}
   144a0:	bne	144b8 <__assert_fail@plt+0x2e3c>
   144a4:	ldr	r1, [fp, #8]
   144a8:	mov	r0, r3
   144ac:	mov	r2, r4
   144b0:	mov	r3, r5
   144b4:	bl	141bc <__assert_fail@plt+0x2b40>
   144b8:	mov	r0, #0
   144bc:	pop	{r4, r5, r6, sl, fp, pc}
   144c0:	mov	r0, #0
   144c4:	bx	lr
   144c8:	mov	r0, #0
   144cc:	bx	lr
   144d0:	push	{r4, r5, fp, lr}
   144d4:	add	fp, sp, #8
   144d8:	movw	r5, #63184	; 0xf6d0
   144dc:	mov	r4, r0
   144e0:	mov	r1, #13
   144e4:	movt	r5, #2
   144e8:	ldr	r0, [r5]
   144ec:	bl	148bc <__assert_fail@plt+0x3240>
   144f0:	ldr	r0, [r5]
   144f4:	movw	r1, #17776	; 0x4570
   144f8:	mov	r2, #0
   144fc:	movt	r1, #1
   14500:	bl	14c98 <__assert_fail@plt+0x361c>
   14504:	ldr	r0, [r5]
   14508:	mov	r1, #20
   1450c:	bl	14ca4 <__assert_fail@plt+0x3628>
   14510:	ldr	r0, [r5]
   14514:	mov	r1, r4
   14518:	bl	14cac <__assert_fail@plt+0x3630>
   1451c:	cmp	r0, #0
   14520:	beq	14538 <__assert_fail@plt+0x2ebc>
   14524:	movw	r2, #53964	; 0xd2cc
   14528:	mov	r0, #1
   1452c:	mov	r1, #0
   14530:	movt	r2, #1
   14534:	bl	11478 <error@plt>
   14538:	ldr	r1, [r5]
   1453c:	ldr	r0, [r1, #28]
   14540:	ldr	r4, [r1, #52]	; 0x34
   14544:	bl	113f4 <inet_ntoa@plt>
   14548:	mov	r2, r0
   1454c:	movw	r0, #55448	; 0xd898
   14550:	mov	r1, r4
   14554:	movt	r0, #1
   14558:	bl	11364 <printf@plt>
   1455c:	ldr	r0, [r5]
   14560:	movw	r1, #18124	; 0x46cc
   14564:	movt	r1, #1
   14568:	pop	{r4, r5, fp, lr}
   1456c:	b	11ad0 <__assert_fail@plt+0x454>
   14570:	push	{r4, r5, r6, sl, fp, lr}
   14574:	add	fp, sp, #16
   14578:	sub	sp, sp, #16
   1457c:	ldr	r5, [fp, #16]
   14580:	ldr	r4, [fp, #12]
   14584:	cmp	r0, #2
   14588:	bcs	146a8 <__assert_fail@plt+0x302c>
   1458c:	mov	r6, r0
   14590:	ldr	r0, [r3, #4]
   14594:	bl	113f4 <inet_ntoa@plt>
   14598:	mov	r2, r0
   1459c:	ldrh	r0, [r4, #6]
   145a0:	mov	r1, r5
   145a4:	rev16	r3, r0
   145a8:	movw	r0, #54034	; 0xd312
   145ac:	movt	r0, #1
   145b0:	bl	11364 <printf@plt>
   145b4:	cmp	r6, #1
   145b8:	bne	145c8 <__assert_fail@plt+0x2f4c>
   145bc:	movw	r0, #54086	; 0xd346
   145c0:	movt	r0, #1
   145c4:	bl	11364 <printf@plt>
   145c8:	mov	r0, #10
   145cc:	bl	11574 <putchar@plt>
   145d0:	ldr	r0, [r4, #8]
   145d4:	mov	r5, sp
   145d8:	mov	r1, #16
   145dc:	rev	r2, r0
   145e0:	mov	r0, r5
   145e4:	bl	12d2c <__assert_fail@plt+0x16b0>
   145e8:	mov	r1, r0
   145ec:	movw	r0, #55490	; 0xd8c2
   145f0:	movt	r0, #1
   145f4:	bl	11364 <printf@plt>
   145f8:	ldr	r0, [r4, #12]
   145fc:	mov	r1, #16
   14600:	rev	r2, r0
   14604:	mov	r0, r5
   14608:	bl	12d2c <__assert_fail@plt+0x16b0>
   1460c:	mov	r1, r0
   14610:	movw	r0, #55507	; 0xd8d3
   14614:	movt	r0, #1
   14618:	bl	11364 <printf@plt>
   1461c:	ldr	r0, [r4, #16]
   14620:	mov	r1, #16
   14624:	rev	r2, r0
   14628:	mov	r0, r5
   1462c:	bl	12d2c <__assert_fail@plt+0x16b0>
   14630:	mov	r1, r0
   14634:	movw	r0, #55524	; 0xd8e4
   14638:	movt	r0, #1
   1463c:	bl	11364 <printf@plt>
   14640:	movw	r0, #63176	; 0xf6c8
   14644:	movt	r0, #2
   14648:	ldrb	r0, [r0]
   1464c:	tst	r0, #32
   14650:	beq	146c0 <__assert_fail@plt+0x3044>
   14654:	ldr	r0, [r4, #8]
   14658:	rev	r0, r0
   1465c:	bl	12d20 <__assert_fail@plt+0x16a4>
   14660:	cmp	r0, #0
   14664:	beq	146c0 <__assert_fail@plt+0x3044>
   14668:	ldr	r0, [r4, #8]
   1466c:	rev	r0, r0
   14670:	bl	12d20 <__assert_fail@plt+0x16a4>
   14674:	cmp	r0, #0
   14678:	beq	146c0 <__assert_fail@plt+0x3044>
   1467c:	ldr	r0, [r4, #8]
   14680:	ldr	r1, [r4, #16]
   14684:	rev	r0, r0
   14688:	rev	r1, r1
   1468c:	sub	r1, r1, r0
   14690:	movw	r0, #55541	; 0xd8f5
   14694:	movt	r0, #1
   14698:	bl	11364 <printf@plt>
   1469c:	mov	r0, #0
   146a0:	sub	sp, fp, #16
   146a4:	pop	{r4, r5, r6, sl, fp, pc}
   146a8:	bne	146c0 <__assert_fail@plt+0x3044>
   146ac:	ldr	r1, [fp, #8]
   146b0:	mov	r0, r3
   146b4:	mov	r2, r4
   146b8:	mov	r3, r5
   146bc:	bl	141bc <__assert_fail@plt+0x2b40>
   146c0:	mov	r0, #0
   146c4:	sub	sp, fp, #16
   146c8:	pop	{r4, r5, r6, sl, fp, pc}
   146cc:	b	11fc4 <__assert_fail@plt+0x948>
   146d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146d4:	add	fp, sp, #24
   146d8:	mov	r9, r0
   146dc:	movw	r0, #55561	; 0xd909
   146e0:	mov	r8, r1
   146e4:	movt	r0, #1
   146e8:	bl	11370 <getprotobyname@plt>
   146ec:	cmp	r0, #0
   146f0:	beq	14818 <__assert_fail@plt+0x319c>
   146f4:	ldr	r2, [r0, #8]
   146f8:	mov	r7, r0
   146fc:	mov	r0, #2
   14700:	mov	r1, #3
   14704:	bl	1164c <socket@plt>
   14708:	mov	r4, r0
   1470c:	cmn	r0, #1
   14710:	ble	147a0 <__assert_fail@plt+0x3124>
   14714:	mov	r0, #124	; 0x7c
   14718:	bl	1ad00 <argp_parse@@Base+0x2148>
   1471c:	cmp	r0, #0
   14720:	beq	14804 <__assert_fail@plt+0x3188>
   14724:	vmov.i32	q8, #0	; 0x00000000
   14728:	mov	r6, r0
   1472c:	add	r0, r0, #60	; 0x3c
   14730:	mov	r1, #0
   14734:	mov	r2, #28
   14738:	vst1.32	{d16-d17}, [r0]
   1473c:	add	r0, r6, #44	; 0x2c
   14740:	vst1.32	{d16-d17}, [r0]
   14744:	add	r0, r6, #12
   14748:	vst1.32	{d16-d17}, [r0]
   1474c:	stm	r6, {r4, r9}
   14750:	str	r1, [r6, #8]
   14754:	add	r1, r6, #108	; 0x6c
   14758:	vst1.32	{d16-d17}, [r1]
   1475c:	add	r1, r6, #92	; 0x5c
   14760:	vst1.32	{d16-d17}, [r1]
   14764:	add	r1, r6, #76	; 0x4c
   14768:	vst1.32	{d16-d17}, [r1]
   1476c:	add	r1, r6, #28
   14770:	vst1.32	{d16-d17}, [r1]
   14774:	mov	r1, #128	; 0x80
   14778:	str	r1, [r6, #72]	; 0x48
   1477c:	uxth	r1, r8
   14780:	str	r2, [r6, #56]	; 0x38
   14784:	str	r1, [r6, #60]	; 0x3c
   14788:	mov	r1, #1000	; 0x3e8
   1478c:	str	r1, [r6, #20]
   14790:	mov	r1, #0
   14794:	bl	1146c <gettimeofday@plt>
   14798:	mov	r0, r6
   1479c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   147a0:	bl	11538 <__errno_location@plt>
   147a4:	mov	r5, r0
   147a8:	ldr	r0, [r0]
   147ac:	cmp	r0, #13
   147b0:	movne	r6, #0
   147b4:	cmpne	r0, #1
   147b8:	bne	14798 <__assert_fail@plt+0x311c>
   147bc:	mov	r0, #0
   147c0:	mov	r1, #2
   147c4:	str	r0, [r5]
   147c8:	mov	r0, #2
   147cc:	ldr	r2, [r7, #8]
   147d0:	bl	1164c <socket@plt>
   147d4:	cmn	r0, #1
   147d8:	ble	14844 <__assert_fail@plt+0x31c8>
   147dc:	mov	r4, r0
   147e0:	movw	r0, #63108	; 0xf684
   147e4:	movt	r0, #2
   147e8:	ldr	r1, [r0]
   147ec:	add	r1, r1, #1
   147f0:	str	r1, [r0]
   147f4:	mov	r0, #124	; 0x7c
   147f8:	bl	1ad00 <argp_parse@@Base+0x2148>
   147fc:	cmp	r0, #0
   14800:	bne	14724 <__assert_fail@plt+0x30a8>
   14804:	mov	r0, r4
   14808:	bl	11670 <close@plt>
   1480c:	mov	r6, #0
   14810:	mov	r0, r6
   14814:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14818:	movw	r0, #63016	; 0xf628
   1481c:	mov	r1, #29
   14820:	movt	r0, #2
   14824:	ldr	r3, [r0]
   14828:	movw	r0, #55566	; 0xd90e
   1482c:	movt	r0, #1
   14830:	mov	r2, #1
   14834:	bl	11460 <fwrite@plt>
   14838:	mov	r6, #0
   1483c:	mov	r0, r6
   14840:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14844:	ldr	r0, [r5]
   14848:	cmp	r0, #1
   1484c:	cmpne	r0, #93	; 0x5d
   14850:	bne	14870 <__assert_fail@plt+0x31f4>
   14854:	movw	r0, #63016	; 0xf628
   14858:	mov	r1, #41	; 0x29
   1485c:	movt	r0, #2
   14860:	ldr	r3, [r0]
   14864:	movw	r0, #55596	; 0xd92c
   14868:	movt	r0, #1
   1486c:	b	14830 <__assert_fail@plt+0x31b4>
   14870:	cmp	r0, #13
   14874:	beq	14854 <__assert_fail@plt+0x31d8>
   14878:	movw	r1, #63016	; 0xf628
   1487c:	movt	r1, #2
   14880:	ldr	r4, [r1]
   14884:	bl	114b4 <strerror@plt>
   14888:	movw	r1, #55638	; 0xd956
   1488c:	mov	r2, r0
   14890:	mov	r0, r4
   14894:	movt	r1, #1
   14898:	bl	1152c <fprintf@plt>
   1489c:	mov	r6, #0
   148a0:	mov	r0, r6
   148a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   148a8:	mov	r1, #0
   148ac:	str	r1, [r0, #112]	; 0x70
   148b0:	str	r1, [r0, #116]	; 0x74
   148b4:	str	r1, [r0, #120]	; 0x78
   148b8:	bx	lr
   148bc:	str	r1, [r0, #4]
   148c0:	bx	lr
   148c4:	push	{r4, r5, r6, r7, fp, lr}
   148c8:	add	fp, sp, #16
   148cc:	sub	sp, sp, #8
   148d0:	mov	r1, #0
   148d4:	mov	r4, r0
   148d8:	bl	12d68 <__assert_fail@plt+0x16ec>
   148dc:	mvn	r5, #0
   148e0:	cmp	r0, #0
   148e4:	bne	14a28 <__assert_fail@plt+0x33ac>
   148e8:	ldr	r0, [r4, #4]
   148ec:	sub	r0, r0, #13
   148f0:	cmp	r0, #6
   148f4:	bcs	1490c <__assert_fail@plt+0x3290>
   148f8:	uxtb	r1, r0
   148fc:	mov	r2, #51	; 0x33
   14900:	mov	r3, #1
   14904:	tst	r3, r2, lsr r1
   14908:	bne	14918 <__assert_fail@plt+0x329c>
   1490c:	ldr	r0, [r4, #56]	; 0x38
   14910:	add	r7, r0, #8
   14914:	b	14924 <__assert_fail@plt+0x32a8>
   14918:	movw	r1, #55748	; 0xd9c4
   1491c:	movt	r1, #1
   14920:	ldr	r7, [r1, r0, lsl #2]
   14924:	ldr	r0, [r4, #72]	; 0x48
   14928:	ldr	r2, [r4, #112]	; 0x70
   1492c:	ldr	r1, [r4, #76]	; 0x4c
   14930:	mov	r6, #1
   14934:	lsl	r0, r0, #3
   14938:	udiv	r3, r2, r0
   1493c:	mls	r0, r3, r0, r2
   14940:	ldrb	r2, [r1, r0, asr #3]
   14944:	and	r3, r0, #7
   14948:	bic	r2, r2, r6, lsl r3
   1494c:	strb	r2, [r1, r0, asr #3]
   14950:	ldr	r2, [r4, #4]
   14954:	cmp	r2, #17
   14958:	beq	14984 <__assert_fail@plt+0x3308>
   1495c:	cmp	r2, #13
   14960:	beq	1499c <__assert_fail@plt+0x3320>
   14964:	cmp	r2, #8
   14968:	bne	149b4 <__assert_fail@plt+0x3338>
   1496c:	ldr	r2, [r4, #60]	; 0x3c
   14970:	ldr	r0, [r4, #80]	; 0x50
   14974:	ldr	r3, [r4, #112]	; 0x70
   14978:	mov	r1, r7
   1497c:	bl	14e00 <__assert_fail@plt+0x3784>
   14980:	b	149cc <__assert_fail@plt+0x3350>
   14984:	ldr	r2, [r4, #60]	; 0x3c
   14988:	ldr	r0, [r4, #80]	; 0x50
   1498c:	ldr	r3, [r4, #112]	; 0x70
   14990:	mov	r1, r7
   14994:	bl	14f50 <__assert_fail@plt+0x38d4>
   14998:	b	149cc <__assert_fail@plt+0x3350>
   1499c:	ldr	r2, [r4, #60]	; 0x3c
   149a0:	ldr	r0, [r4, #80]	; 0x50
   149a4:	ldr	r3, [r4, #112]	; 0x70
   149a8:	mov	r1, r7
   149ac:	bl	14ea0 <__assert_fail@plt+0x3824>
   149b0:	b	149cc <__assert_fail@plt+0x3350>
   149b4:	ldr	r1, [r4, #112]	; 0x70
   149b8:	ldr	r3, [r4, #60]	; 0x3c
   149bc:	ldr	r0, [r4, #80]	; 0x50
   149c0:	str	r1, [sp]
   149c4:	mov	r1, r7
   149c8:	bl	14d54 <__assert_fail@plt+0x36d8>
   149cc:	ldr	r0, [r4]
   149d0:	ldr	r1, [r4, #80]	; 0x50
   149d4:	mov	r2, #16
   149d8:	add	r3, r4, #24
   149dc:	str	r3, [sp]
   149e0:	str	r2, [sp, #4]
   149e4:	mov	r2, r7
   149e8:	mov	r3, #0
   149ec:	bl	11598 <sendto@plt>
   149f0:	cmp	r0, #0
   149f4:	bmi	14a28 <__assert_fail@plt+0x33ac>
   149f8:	mov	r3, r0
   149fc:	ldr	r0, [r4, #112]	; 0x70
   14a00:	cmp	r3, r7
   14a04:	add	r0, r0, #1
   14a08:	str	r0, [r4, #112]	; 0x70
   14a0c:	beq	14a24 <__assert_fail@plt+0x33a8>
   14a10:	ldr	r1, [r4, #52]	; 0x34
   14a14:	movw	r0, #55648	; 0xd960
   14a18:	mov	r2, r7
   14a1c:	movt	r0, #1
   14a20:	bl	11364 <printf@plt>
   14a24:	mov	r5, #0
   14a28:	mov	r0, r5
   14a2c:	sub	sp, fp, #16
   14a30:	pop	{r4, r5, r6, r7, fp, pc}
   14a34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a38:	add	fp, sp, #24
   14a3c:	sub	sp, sp, #24
   14a40:	mov	r4, r0
   14a44:	mov	r0, #16
   14a48:	add	r3, sp, #20
   14a4c:	str	r0, [sp, #20]
   14a50:	add	r8, r4, #84	; 0x54
   14a54:	ldr	r2, [r4, #56]	; 0x38
   14a58:	ldr	r0, [r4]
   14a5c:	ldr	r1, [r4, #80]	; 0x50
   14a60:	str	r3, [sp, #4]
   14a64:	mov	r3, #0
   14a68:	str	r8, [sp]
   14a6c:	add	r2, r2, #80	; 0x50
   14a70:	bl	11424 <recvfrom@plt>
   14a74:	mvn	r7, #0
   14a78:	cmp	r0, #0
   14a7c:	bmi	14c24 <__assert_fail@plt+0x35a8>
   14a80:	mov	r6, r0
   14a84:	ldr	r0, [r4, #80]	; 0x50
   14a88:	add	r2, sp, #12
   14a8c:	add	r3, sp, #16
   14a90:	mov	r1, r6
   14a94:	bl	14da4 <__assert_fail@plt+0x3728>
   14a98:	cmn	r0, #1
   14a9c:	ble	14c30 <__assert_fail@plt+0x35b4>
   14aa0:	ldr	r2, [sp, #16]
   14aa4:	ldrb	r1, [r2]
   14aa8:	cmp	r1, #18
   14aac:	bhi	14b6c <__assert_fail@plt+0x34f0>
   14ab0:	movw	r5, #8448	; 0x2100
   14ab4:	mov	r3, #1
   14ab8:	movt	r5, #2
   14abc:	tst	r5, r3, lsl r1
   14ac0:	bne	14c24 <__assert_fail@plt+0x35a8>
   14ac4:	movw	r5, #16385	; 0x4001
   14ac8:	movt	r5, #4
   14acc:	tst	r5, r3, lsl r1
   14ad0:	beq	14b6c <__assert_fail@plt+0x34f0>
   14ad4:	ldrh	r3, [r2, #4]
   14ad8:	ldr	r1, [r4, #60]	; 0x3c
   14adc:	rev	r3, r3
   14ae0:	cmp	r1, r3, lsr #16
   14ae4:	beq	14afc <__assert_fail@plt+0x3480>
   14ae8:	movw	r1, #63108	; 0xf684
   14aec:	movt	r1, #2
   14af0:	ldr	r1, [r1]
   14af4:	cmp	r1, #0
   14af8:	beq	14c24 <__assert_fail@plt+0x35a8>
   14afc:	cmp	r0, #0
   14b00:	bne	14c68 <__assert_fail@plt+0x35ec>
   14b04:	ldr	r3, [r4, #116]	; 0x74
   14b08:	ldr	r0, [r4, #72]	; 0x48
   14b0c:	ldr	ip, [r4, #76]	; 0x4c
   14b10:	add	r1, r3, #1
   14b14:	lsl	r0, r0, #3
   14b18:	str	r1, [r4, #116]	; 0x74
   14b1c:	ldrh	r1, [r2, #6]
   14b20:	rev	r1, r1
   14b24:	lsr	r2, r1, #16
   14b28:	sdiv	r2, r2, r0
   14b2c:	mul	r0, r2, r0
   14b30:	rsb	r2, r0, r1, lsr #16
   14b34:	mov	r0, #1
   14b38:	ldrb	r7, [ip, r2, lsr #3]
   14b3c:	and	r1, r2, #7
   14b40:	tst	r7, r0, lsl r1
   14b44:	beq	14be4 <__assert_fail@plt+0x3568>
   14b48:	str	r3, [r4, #116]	; 0x74
   14b4c:	ldr	r1, [r4, #120]	; 0x78
   14b50:	add	r1, r1, #1
   14b54:	str	r1, [r4, #120]	; 0x78
   14b58:	ldr	ip, [r4, #64]	; 0x40
   14b5c:	mov	r7, #0
   14b60:	cmp	ip, #0
   14b64:	bne	14c08 <__assert_fail@plt+0x358c>
   14b68:	b	14c24 <__assert_fail@plt+0x35a8>
   14b6c:	ldr	r0, [r4, #28]
   14b70:	ldr	r1, [r2, #24]
   14b74:	cmp	r1, r0
   14b78:	bne	14c24 <__assert_fail@plt+0x35a8>
   14b7c:	ldrb	r0, [r2, #17]
   14b80:	cmp	r0, #1
   14b84:	bne	14c24 <__assert_fail@plt+0x35a8>
   14b88:	ldrb	r0, [r2, #28]
   14b8c:	cmp	r0, #8
   14b90:	bne	14c24 <__assert_fail@plt+0x35a8>
   14b94:	movw	r0, #63108	; 0xf684
   14b98:	movt	r0, #2
   14b9c:	ldr	r0, [r0]
   14ba0:	cmp	r0, #0
   14ba4:	bne	14bbc <__assert_fail@plt+0x3540>
   14ba8:	ldrh	r1, [r2, #32]
   14bac:	ldr	r0, [r4, #60]	; 0x3c
   14bb0:	rev16	r1, r1
   14bb4:	cmp	r0, r1
   14bb8:	bne	14c24 <__assert_fail@plt+0x35a8>
   14bbc:	ldr	ip, [r4, #64]	; 0x40
   14bc0:	mov	r7, #0
   14bc4:	cmp	ip, #0
   14bc8:	beq	14c24 <__assert_fail@plt+0x35a8>
   14bcc:	ldr	r0, [sp, #12]
   14bd0:	ldr	r1, [r4, #68]	; 0x44
   14bd4:	stm	sp, {r0, r2, r6}
   14bd8:	add	r2, r4, #24
   14bdc:	mov	r0, #2
   14be0:	b	14c1c <__assert_fail@plt+0x35a0>
   14be4:	lsl	r0, r0, r1
   14be8:	lsr	r1, r2, #3
   14bec:	orr	r0, r7, r0
   14bf0:	strb	r0, [ip, r1]
   14bf4:	mov	r0, #0
   14bf8:	ldr	ip, [r4, #64]	; 0x40
   14bfc:	mov	r7, #0
   14c00:	cmp	ip, #0
   14c04:	beq	14c24 <__assert_fail@plt+0x35a8>
   14c08:	ldr	r2, [sp, #12]
   14c0c:	ldr	r1, [r4, #68]	; 0x44
   14c10:	ldr	r3, [sp, #16]
   14c14:	stm	sp, {r2, r3, r6}
   14c18:	add	r2, r4, #24
   14c1c:	mov	r3, r8
   14c20:	blx	ip
   14c24:	mov	r0, r7
   14c28:	sub	sp, fp, #24
   14c2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c30:	movw	r0, #63016	; 0xf628
   14c34:	movt	r0, #2
   14c38:	ldr	r5, [r0]
   14c3c:	ldr	r0, [r4, #88]	; 0x58
   14c40:	bl	113f4 <inet_ntoa@plt>
   14c44:	movw	r1, #55681	; 0xd981
   14c48:	mov	r3, r0
   14c4c:	mov	r0, r5
   14c50:	mov	r2, r6
   14c54:	movt	r1, #1
   14c58:	bl	1152c <fprintf@plt>
   14c5c:	mov	r0, r7
   14c60:	sub	sp, fp, #24
   14c64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c68:	movw	r0, #63016	; 0xf628
   14c6c:	movt	r0, #2
   14c70:	ldr	r7, [r0]
   14c74:	ldr	r0, [r4, #88]	; 0x58
   14c78:	bl	113f4 <inet_ntoa@plt>
   14c7c:	movw	r1, #55718	; 0xd9a6
   14c80:	mov	r2, r0
   14c84:	mov	r0, r7
   14c88:	movt	r1, #1
   14c8c:	bl	1152c <fprintf@plt>
   14c90:	ldr	r2, [sp, #16]
   14c94:	b	14b04 <__assert_fail@plt+0x3488>
   14c98:	str	r1, [r0, #64]	; 0x40
   14c9c:	str	r2, [r0, #68]	; 0x44
   14ca0:	bx	lr
   14ca4:	str	r1, [r0, #56]	; 0x38
   14ca8:	bx	lr
   14cac:	push	{r4, r5, r6, sl, fp, lr}
   14cb0:	add	fp, sp, #16
   14cb4:	sub	sp, sp, #40	; 0x28
   14cb8:	vmov.i32	q8, #0	; 0x00000000
   14cbc:	add	r2, sp, #8
   14cc0:	mov	r4, r0
   14cc4:	mov	r5, r1
   14cc8:	add	r3, sp, #4
   14ccc:	add	r0, r2, #8
   14cd0:	vst1.64	{d16-d17}, [r0]
   14cd4:	mov	r0, #0
   14cd8:	str	r0, [sp, #36]	; 0x24
   14cdc:	str	r0, [sp, #32]
   14ce0:	mov	r0, #2
   14ce4:	str	r0, [sp, #12]
   14ce8:	mov	r0, #194	; 0xc2
   14cec:	str	r0, [sp, #8]
   14cf0:	mov	r0, r1
   14cf4:	mov	r1, #0
   14cf8:	bl	11640 <getaddrinfo@plt>
   14cfc:	cmp	r0, #0
   14d00:	beq	14d18 <__assert_fail@plt+0x369c>
   14d04:	mov	r0, #0
   14d08:	bl	19f94 <argp_parse@@Base+0x13dc>
   14d0c:	mov	r0, #1
   14d10:	sub	sp, fp, #16
   14d14:	pop	{r4, r5, r6, sl, fp, pc}
   14d18:	ldr	r6, [sp, #4]
   14d1c:	add	r0, r4, #24
   14d20:	ldr	r2, [r6, #16]
   14d24:	ldr	r1, [r6, #20]
   14d28:	bl	113d0 <memcpy@plt>
   14d2c:	ldr	r0, [r6, #24]
   14d30:	cmp	r0, #0
   14d34:	moveq	r0, r5
   14d38:	bl	11430 <strdup@plt>
   14d3c:	str	r0, [r4, #52]	; 0x34
   14d40:	ldr	r0, [sp, #4]
   14d44:	bl	11634 <freeaddrinfo@plt>
   14d48:	mov	r0, #0
   14d4c:	sub	sp, fp, #16
   14d50:	pop	{r4, r5, r6, sl, fp, pc}
   14d54:	push	{r4, r5, fp, lr}
   14d58:	add	fp, sp, #8
   14d5c:	mvn	r4, #0
   14d60:	cmp	r1, #8
   14d64:	bcc	14d9c <__assert_fail@plt+0x3720>
   14d68:	mov	r5, r0
   14d6c:	ldr	r0, [fp, #8]
   14d70:	mov	r4, #0
   14d74:	strh	r4, [r5, #2]
   14d78:	strb	r4, [r5, #1]
   14d7c:	strb	r2, [r5]
   14d80:	rev16	r0, r0
   14d84:	strh	r0, [r5, #6]
   14d88:	rev16	r0, r3
   14d8c:	strh	r0, [r5, #4]
   14d90:	mov	r0, r5
   14d94:	bl	14f90 <__assert_fail@plt+0x3914>
   14d98:	strh	r0, [r5, #2]
   14d9c:	mov	r0, r4
   14da0:	pop	{r4, r5, fp, pc}
   14da4:	push	{r4, r5, fp, lr}
   14da8:	add	fp, sp, #8
   14dac:	ldrb	ip, [r0]
   14db0:	mov	r4, #60	; 0x3c
   14db4:	and	lr, r4, ip, lsl #2
   14db8:	mvn	ip, #0
   14dbc:	add	r4, lr, #8
   14dc0:	cmp	r4, r1
   14dc4:	bhi	14df8 <__assert_fail@plt+0x377c>
   14dc8:	add	r4, r0, lr
   14dcc:	str	r0, [r2]
   14dd0:	mov	r0, #0
   14dd4:	sub	r1, r1, lr
   14dd8:	str	r4, [r3]
   14ddc:	ldrh	r5, [r4, #2]
   14de0:	strh	r0, [r4, #2]
   14de4:	mov	r0, r4
   14de8:	bl	14f90 <__assert_fail@plt+0x3914>
   14dec:	subs	ip, r0, r5
   14df0:	strh	r0, [r4, #2]
   14df4:	movwne	ip, #1
   14df8:	mov	r0, ip
   14dfc:	pop	{r4, r5, fp, pc}
   14e00:	push	{r4, sl, fp, lr}
   14e04:	add	fp, sp, #8
   14e08:	mov	r4, r0
   14e0c:	mvn	r0, #0
   14e10:	cmp	r1, #8
   14e14:	popcc	{r4, sl, fp, pc}
   14e18:	mov	r0, #8
   14e1c:	str	r0, [r4]
   14e20:	rev16	r0, r3
   14e24:	strh	r0, [r4, #6]
   14e28:	rev16	r0, r2
   14e2c:	strh	r0, [r4, #4]
   14e30:	mov	r0, r4
   14e34:	bl	14f90 <__assert_fail@plt+0x3914>
   14e38:	strh	r0, [r4, #2]
   14e3c:	mov	r0, #0
   14e40:	pop	{r4, sl, fp, pc}
   14e44:	push	{r4, r5, fp, lr}
   14e48:	add	fp, sp, #8
   14e4c:	ldrb	ip, [r0]
   14e50:	mov	r4, #60	; 0x3c
   14e54:	and	lr, r4, ip, lsl #2
   14e58:	mvn	ip, #0
   14e5c:	add	r4, lr, #8
   14e60:	cmp	r4, r1
   14e64:	bhi	14e98 <__assert_fail@plt+0x381c>
   14e68:	add	r4, r0, lr
   14e6c:	str	r0, [r2]
   14e70:	mov	r0, #0
   14e74:	sub	r1, r1, lr
   14e78:	str	r4, [r3]
   14e7c:	ldrh	r5, [r4, #2]
   14e80:	strh	r0, [r4, #2]
   14e84:	mov	r0, r4
   14e88:	bl	14f90 <__assert_fail@plt+0x3914>
   14e8c:	subs	ip, r0, r5
   14e90:	strh	r0, [r4, #2]
   14e94:	movwne	ip, #1
   14e98:	mov	r0, ip
   14e9c:	pop	{r4, r5, fp, pc}
   14ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ea4:	add	fp, sp, #24
   14ea8:	sub	sp, sp, #16
   14eac:	mvn	r5, #0
   14eb0:	cmp	r1, #20
   14eb4:	bcc	14f44 <__assert_fail@plt+0x38c8>
   14eb8:	mov	r6, r1
   14ebc:	mov	r4, r0
   14ec0:	add	r0, sp, #8
   14ec4:	mov	r1, #0
   14ec8:	mov	r7, r3
   14ecc:	mov	r8, r2
   14ed0:	mov	r5, #0
   14ed4:	bl	1146c <gettimeofday@plt>
   14ed8:	ldr	r1, [sp, #12]
   14edc:	movw	r2, #19923	; 0x4dd3
   14ee0:	ldr	r0, [sp, #8]
   14ee4:	movt	r2, #4194	; 0x1062
   14ee8:	smmul	r1, r1, r2
   14eec:	asr	r2, r1, #6
   14ef0:	add	r1, r2, r1, lsr #31
   14ef4:	movw	r2, #17671	; 0x4507
   14ef8:	movt	r2, #49710	; 0xc22e
   14efc:	smmla	r2, r0, r2, r0
   14f00:	asr	r3, r2, #16
   14f04:	add	r2, r3, r2, lsr #31
   14f08:	movw	r3, #675	; 0x2a3
   14f0c:	mul	r2, r2, r3
   14f10:	mov	r3, r8
   14f14:	sub	r0, r0, r2, lsl #7
   14f18:	mov	r2, #1000	; 0x3e8
   14f1c:	mla	r0, r0, r2, r1
   14f20:	mov	r1, r6
   14f24:	mov	r2, #13
   14f28:	rev	r0, r0
   14f2c:	str	r0, [r4, #8]
   14f30:	str	r0, [r4, #12]
   14f34:	str	r0, [r4, #16]
   14f38:	mov	r0, r4
   14f3c:	str	r7, [sp]
   14f40:	bl	14d54 <__assert_fail@plt+0x36d8>
   14f44:	mov	r0, r5
   14f48:	sub	sp, fp, #24
   14f4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f50:	push	{r4, sl, fp, lr}
   14f54:	add	fp, sp, #8
   14f58:	sub	sp, sp, #8
   14f5c:	mvn	r4, #0
   14f60:	cmp	r1, #12
   14f64:	bcc	14f84 <__assert_fail@plt+0x3908>
   14f68:	mov	ip, r2
   14f6c:	mov	r4, #0
   14f70:	mov	r2, #17
   14f74:	str	r4, [r0, #8]
   14f78:	str	r3, [sp]
   14f7c:	mov	r3, ip
   14f80:	bl	14d54 <__assert_fail@plt+0x36d8>
   14f84:	mov	r0, r4
   14f88:	sub	sp, fp, #8
   14f8c:	pop	{r4, sl, fp, pc}
   14f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f94:	add	fp, sp, #28
   14f98:	mov	r5, #0
   14f9c:	cmp	r1, #2
   14fa0:	blt	15064 <__assert_fail@plt+0x39e8>
   14fa4:	sub	sl, r1, #2
   14fa8:	mov	r4, #1
   14fac:	add	r3, r4, sl, lsr #1
   14fb0:	bic	lr, sl, #1
   14fb4:	add	ip, lr, r0
   14fb8:	cmp	r3, #4
   14fbc:	bcs	14fc8 <__assert_fail@plt+0x394c>
   14fc0:	mov	r5, #0
   14fc4:	b	15048 <__assert_fail@plt+0x39cc>
   14fc8:	bic	r9, r3, #3
   14fcc:	vmov.i32	q8, #0	; 0x00000000
   14fd0:	subs	r5, r9, #4
   14fd4:	add	r4, r4, r5, lsr #2
   14fd8:	and	r8, r4, #1
   14fdc:	beq	15088 <__assert_fail@plt+0x3a0c>
   14fe0:	sub	r7, r8, r4
   14fe4:	mov	r6, #0
   14fe8:	mov	r5, #16
   14fec:	mov	r4, r0
   14ff0:	add	r2, r4, #8
   14ff4:	vld1.16	{d18}, [r4], r5
   14ff8:	adds	r7, r7, #2
   14ffc:	add	r6, r6, #8
   15000:	vld1.16	{d19}, [r2]
   15004:	vaddw.u16	q8, q8, d18
   15008:	vaddw.u16	q8, q8, d19
   1500c:	bne	14ff0 <__assert_fail@plt+0x3974>
   15010:	cmp	r8, #0
   15014:	beq	15024 <__assert_fail@plt+0x39a8>
   15018:	add	r2, r0, r6, lsl #1
   1501c:	vld1.16	{d18}, [r2]
   15020:	vaddw.u16	q8, q8, d18
   15024:	vext.8	q9, q8, q8, #8
   15028:	cmp	r3, r9
   1502c:	vadd.i32	q8, q8, q9
   15030:	vdup.32	q9, d16[1]
   15034:	vadd.i32	q8, q8, q9
   15038:	vmov.32	r5, d16[0]
   1503c:	beq	1505c <__assert_fail@plt+0x39e0>
   15040:	sub	r1, r1, r9, lsl #1
   15044:	add	r0, r0, r9, lsl #1
   15048:	ldrh	r2, [r0], #2
   1504c:	sub	r1, r1, #2
   15050:	cmp	r1, #1
   15054:	add	r5, r5, r2
   15058:	bgt	15048 <__assert_fail@plt+0x39cc>
   1505c:	add	r0, ip, #2
   15060:	sub	r1, sl, lr
   15064:	cmp	r1, #1
   15068:	ldrbeq	r0, [r0]
   1506c:	addeq	r5, r5, r0
   15070:	asr	r0, r5, #16
   15074:	uxtah	r0, r0, r5
   15078:	add	r0, r0, r0, lsr #16
   1507c:	mvn	r0, r0
   15080:	uxth	r0, r0
   15084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15088:	mov	r6, #0
   1508c:	cmp	r8, #0
   15090:	bne	15018 <__assert_fail@plt+0x399c>
   15094:	b	15024 <__assert_fail@plt+0x39a8>

00015098 <argp_help@@Base>:
   15098:	push	{fp, lr}
   1509c:	mov	fp, sp
   150a0:	sub	sp, sp, #8
   150a4:	mov	ip, r2
   150a8:	mov	r2, r1
   150ac:	str	r3, [sp]
   150b0:	mov	r1, #0
   150b4:	mov	r3, ip
   150b8:	bl	150c4 <argp_help@@Base+0x2c>
   150bc:	mov	sp, fp
   150c0:	pop	{fp, pc}
   150c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150c8:	add	fp, sp, #28
   150cc:	sub	sp, sp, #108	; 0x6c
   150d0:	cmp	r2, #0
   150d4:	str	r1, [fp, #-96]	; 0xffffffa0
   150d8:	str	r0, [fp, #-104]	; 0xffffff98
   150dc:	beq	166bc <argp_help@@Base+0x1624>
   150e0:	ldr	r0, [fp, #8]
   150e4:	mov	r6, r3
   150e8:	mov	r5, r2
   150ec:	str	r0, [fp, #-92]	; 0xffffffa4
   150f0:	mov	r0, r2
   150f4:	bl	11610 <flockfile@plt>
   150f8:	movw	sl, #62944	; 0xf5e0
   150fc:	str	r6, [fp, #-128]	; 0xffffff80
   15100:	movt	sl, #2
   15104:	ldr	r0, [sl, #36]	; 0x24
   15108:	cmp	r0, #0
   1510c:	bne	156d4 <argp_help@@Base+0x63c>
   15110:	movw	r0, #55893	; 0xda55
   15114:	movt	r0, #1
   15118:	bl	11484 <getenv@plt>
   1511c:	mov	r8, r0
   15120:	mov	r0, #32
   15124:	mov	r1, sl
   15128:	add	r3, sl, #16
   1512c:	sub	r2, fp, #88	; 0x58
   15130:	vld1.64	{d16-d17}, [r1], r0
   15134:	vld1.64	{d18-d19}, [r3]
   15138:	add	r7, r2, #16
   1513c:	cmp	r8, #0
   15140:	vldr	d20, [r1]
   15144:	mov	r1, r2
   15148:	vst1.64	{d16-d17}, [r1], r0
   1514c:	vst1.64	{d18-d19}, [r7]
   15150:	vstr	d20, [r1]
   15154:	beq	156d4 <argp_help@@Base+0x63c>
   15158:	str	r7, [fp, #-112]	; 0xffffff90
   1515c:	str	r3, [fp, #-108]	; 0xffffff94
   15160:	str	r5, [fp, #-132]	; 0xffffff7c
   15164:	ldrb	r5, [r8]
   15168:	cmp	r5, #0
   1516c:	beq	155d0 <argp_help@@Base+0x538>
   15170:	movw	r7, #56560	; 0xdcf0
   15174:	movt	r7, #1
   15178:	bl	114d8 <__ctype_b_loc@plt>
   1517c:	str	r0, [fp, #-100]	; 0xffffff9c
   15180:	b	151b8 <argp_help@@Base+0x120>
   15184:	ldrb	r0, [r5, #15]
   15188:	sub	r1, fp, #88	; 0x58
   1518c:	str	r6, [r1, r0]
   15190:	ldr	r6, [fp, #-128]	; 0xffffff80
   15194:	movw	sl, #62944	; 0xf5e0
   15198:	movt	sl, #2
   1519c:	mov	r8, r4
   151a0:	ldrb	r0, [r8], #1
   151a4:	cmp	r0, #44	; 0x2c
   151a8:	movne	r8, r4
   151ac:	ldrb	r5, [r8]
   151b0:	cmp	r5, #0
   151b4:	beq	155d0 <argp_help@@Base+0x538>
   151b8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   151bc:	uxtb	r1, r5
   151c0:	ldr	r0, [r0]
   151c4:	add	r1, r0, r1, lsl #1
   151c8:	ldrh	r1, [r1]
   151cc:	tst	r1, #8192	; 0x2000
   151d0:	beq	151e8 <argp_help@@Base+0x150>
   151d4:	ldrb	r5, [r8, #1]!
   151d8:	add	r1, r0, r5, lsl #1
   151dc:	ldrh	r1, [r1]
   151e0:	tst	r1, #8192	; 0x2000
   151e4:	bne	151d4 <argp_help@@Base+0x13c>
   151e8:	tst	r1, #1024	; 0x400
   151ec:	beq	1558c <argp_help@@Base+0x4f4>
   151f0:	mov	r3, r5
   151f4:	mov	r2, r8
   151f8:	b	15200 <argp_help@@Base+0x168>
   151fc:	ldrb	r3, [r2, #1]!
   15200:	uxtb	r6, r3
   15204:	add	r1, r0, r6, lsl #1
   15208:	ldrh	r1, [r1]
   1520c:	tst	r1, #8
   15210:	bne	151fc <argp_help@@Base+0x164>
   15214:	cmp	r6, #95	; 0x5f
   15218:	cmpne	r6, #45	; 0x2d
   1521c:	beq	151fc <argp_help@@Base+0x164>
   15220:	tst	r1, #8192	; 0x2000
   15224:	mov	r4, r2
   15228:	beq	15244 <argp_help@@Base+0x1ac>
   1522c:	mov	r4, r2
   15230:	ldrb	r3, [r4, #1]!
   15234:	add	r1, r0, r3, lsl #1
   15238:	ldrh	r1, [r1]
   1523c:	tst	r1, #8192	; 0x2000
   15240:	bne	15230 <argp_help@@Base+0x198>
   15244:	sub	r9, r2, r8
   15248:	uxtb	r2, r3
   1524c:	cmp	r2, #0
   15250:	cmpne	r2, #44	; 0x2c
   15254:	bne	152c4 <argp_help@@Base+0x22c>
   15258:	uxtb	r0, r5
   1525c:	mov	sl, #1
   15260:	cmp	r0, #110	; 0x6e
   15264:	bne	152ac <argp_help@@Base+0x214>
   15268:	ldrb	r0, [r8, #1]
   1526c:	mov	sl, #1
   15270:	cmp	r0, #111	; 0x6f
   15274:	bne	152ac <argp_help@@Base+0x214>
   15278:	ldrb	r0, [r8, #2]
   1527c:	mov	sl, #1
   15280:	cmp	r0, #45	; 0x2d
   15284:	bne	152ac <argp_help@@Base+0x214>
   15288:	sub	r9, r9, #3
   1528c:	add	r8, r8, #3
   15290:	mov	r6, #0
   15294:	mov	sl, #1
   15298:	mov	r0, r7
   1529c:	bl	11514 <strlen@plt>
   152a0:	cmp	r0, r9
   152a4:	beq	15368 <argp_help@@Base+0x2d0>
   152a8:	b	15384 <argp_help@@Base+0x2ec>
   152ac:	mov	r6, #1
   152b0:	mov	r0, r7
   152b4:	bl	11514 <strlen@plt>
   152b8:	cmp	r0, r9
   152bc:	beq	15368 <argp_help@@Base+0x2d0>
   152c0:	b	15384 <argp_help@@Base+0x2ec>
   152c4:	cmp	r2, #61	; 0x3d
   152c8:	bne	152e0 <argp_help@@Base+0x248>
   152cc:	ldrb	r1, [r4, #1]!
   152d0:	add	r1, r0, r1, lsl #1
   152d4:	ldrh	r1, [r1]
   152d8:	tst	r1, #8192	; 0x2000
   152dc:	bne	152cc <argp_help@@Base+0x234>
   152e0:	mov	sl, #0
   152e4:	tst	r1, #2048	; 0x800
   152e8:	bne	15304 <argp_help@@Base+0x26c>
   152ec:	mov	r6, #0
   152f0:	mov	r0, r7
   152f4:	bl	11514 <strlen@plt>
   152f8:	cmp	r0, r9
   152fc:	beq	15368 <argp_help@@Base+0x2d0>
   15300:	b	15384 <argp_help@@Base+0x2ec>
   15304:	mov	r0, r4
   15308:	mov	r1, #0
   1530c:	mov	r2, #10
   15310:	bl	1134c <strtol@plt>
   15314:	mov	r6, r0
   15318:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1531c:	sub	r4, r4, #1
   15320:	ldr	r0, [r0]
   15324:	ldrb	r1, [r4, #1]!
   15328:	add	r1, r0, r1, lsl #1
   1532c:	ldrh	r1, [r1]
   15330:	tst	r1, #2048	; 0x800
   15334:	bne	15324 <argp_help@@Base+0x28c>
   15338:	mov	sl, #0
   1533c:	tst	r1, #8192	; 0x2000
   15340:	beq	15358 <argp_help@@Base+0x2c0>
   15344:	ldrb	r1, [r4, #1]!
   15348:	add	r1, r0, r1, lsl #1
   1534c:	ldrb	r1, [r1, #1]
   15350:	tst	r1, #32
   15354:	bne	15344 <argp_help@@Base+0x2ac>
   15358:	mov	r0, r7
   1535c:	bl	11514 <strlen@plt>
   15360:	cmp	r0, r9
   15364:	bne	15384 <argp_help@@Base+0x2ec>
   15368:	mov	r0, r8
   1536c:	mov	r1, r7
   15370:	mov	r2, r9
   15374:	bl	11658 <strncmp@plt>
   15378:	cmp	r0, #0
   1537c:	mov	r5, r7
   15380:	beq	15508 <argp_help@@Base+0x470>
   15384:	add	r5, r7, #16
   15388:	mov	r0, r5
   1538c:	bl	11514 <strlen@plt>
   15390:	cmp	r0, r9
   15394:	bne	153b0 <argp_help@@Base+0x318>
   15398:	mov	r0, r8
   1539c:	mov	r1, r5
   153a0:	mov	r2, r9
   153a4:	bl	11658 <strncmp@plt>
   153a8:	cmp	r0, #0
   153ac:	beq	15508 <argp_help@@Base+0x470>
   153b0:	add	r5, r7, #32
   153b4:	mov	r0, r5
   153b8:	bl	11514 <strlen@plt>
   153bc:	cmp	r0, r9
   153c0:	bne	153dc <argp_help@@Base+0x344>
   153c4:	mov	r0, r8
   153c8:	mov	r1, r5
   153cc:	mov	r2, r9
   153d0:	bl	11658 <strncmp@plt>
   153d4:	cmp	r0, #0
   153d8:	beq	15508 <argp_help@@Base+0x470>
   153dc:	add	r5, r7, #48	; 0x30
   153e0:	mov	r0, r5
   153e4:	bl	11514 <strlen@plt>
   153e8:	cmp	r0, r9
   153ec:	bne	15408 <argp_help@@Base+0x370>
   153f0:	mov	r0, r8
   153f4:	mov	r1, r5
   153f8:	mov	r2, r9
   153fc:	bl	11658 <strncmp@plt>
   15400:	cmp	r0, #0
   15404:	beq	15508 <argp_help@@Base+0x470>
   15408:	add	r5, r7, #64	; 0x40
   1540c:	mov	r0, r5
   15410:	bl	11514 <strlen@plt>
   15414:	cmp	r0, r9
   15418:	bne	15434 <argp_help@@Base+0x39c>
   1541c:	mov	r0, r8
   15420:	mov	r1, r5
   15424:	mov	r2, r9
   15428:	bl	11658 <strncmp@plt>
   1542c:	cmp	r0, #0
   15430:	beq	15508 <argp_help@@Base+0x470>
   15434:	add	r5, r7, #80	; 0x50
   15438:	mov	r0, r5
   1543c:	bl	11514 <strlen@plt>
   15440:	cmp	r0, r9
   15444:	bne	15460 <argp_help@@Base+0x3c8>
   15448:	mov	r0, r8
   1544c:	mov	r1, r5
   15450:	mov	r2, r9
   15454:	bl	11658 <strncmp@plt>
   15458:	cmp	r0, #0
   1545c:	beq	15508 <argp_help@@Base+0x470>
   15460:	add	r5, r7, #96	; 0x60
   15464:	mov	r0, r5
   15468:	bl	11514 <strlen@plt>
   1546c:	cmp	r0, r9
   15470:	bne	1548c <argp_help@@Base+0x3f4>
   15474:	mov	r0, r8
   15478:	mov	r1, r5
   1547c:	mov	r2, r9
   15480:	bl	11658 <strncmp@plt>
   15484:	cmp	r0, #0
   15488:	beq	15508 <argp_help@@Base+0x470>
   1548c:	add	r5, r7, #112	; 0x70
   15490:	mov	r0, r5
   15494:	bl	11514 <strlen@plt>
   15498:	cmp	r0, r9
   1549c:	bne	154b8 <argp_help@@Base+0x420>
   154a0:	mov	r0, r8
   154a4:	mov	r1, r5
   154a8:	mov	r2, r9
   154ac:	bl	11658 <strncmp@plt>
   154b0:	cmp	r0, #0
   154b4:	beq	15508 <argp_help@@Base+0x470>
   154b8:	add	r5, r7, #128	; 0x80
   154bc:	mov	r0, r5
   154c0:	bl	11514 <strlen@plt>
   154c4:	cmp	r0, r9
   154c8:	bne	154e4 <argp_help@@Base+0x44c>
   154cc:	mov	r0, r8
   154d0:	mov	r1, r5
   154d4:	mov	r2, r9
   154d8:	bl	11658 <strncmp@plt>
   154dc:	cmp	r0, #0
   154e0:	beq	15508 <argp_help@@Base+0x470>
   154e4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   154e8:	movw	sl, #62944	; 0xf5e0
   154ec:	movt	sl, #2
   154f0:	cmp	r0, #0
   154f4:	sub	sp, sp, #8
   154f8:	beq	15560 <argp_help@@Base+0x4c8>
   154fc:	str	r9, [sp]
   15500:	str	r8, [sp, #4]
   15504:	b	1556c <argp_help@@Base+0x4d4>
   15508:	cmp	sl, #0
   1550c:	beq	15184 <argp_help@@Base+0xec>
   15510:	ldrb	r0, [r5, #14]
   15514:	cmp	r0, #0
   15518:	bne	15184 <argp_help@@Base+0xec>
   1551c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15520:	sub	sp, sp, #8
   15524:	cmp	r0, #0
   15528:	beq	15538 <argp_help@@Base+0x4a0>
   1552c:	str	r9, [sp]
   15530:	str	r8, [sp, #4]
   15534:	b	15544 <argp_help@@Base+0x4ac>
   15538:	str	r9, [sp]
   1553c:	str	r8, [sp, #4]
   15540:	mov	r0, #0
   15544:	movw	r3, #55907	; 0xda63
   15548:	mov	r1, #0
   1554c:	mov	r2, #0
   15550:	movt	r3, #1
   15554:	bl	16ab4 <argp_failure@@Base>
   15558:	add	sp, sp, #8
   1555c:	b	15190 <argp_help@@Base+0xf8>
   15560:	str	r9, [sp]
   15564:	str	r8, [sp, #4]
   15568:	mov	r0, #0
   1556c:	movw	r3, #55954	; 0xda92
   15570:	mov	r1, #0
   15574:	mov	r2, #0
   15578:	movt	r3, #1
   1557c:	bl	16ab4 <argp_failure@@Base>
   15580:	add	sp, sp, #8
   15584:	ldr	r6, [fp, #-128]	; 0xffffff80
   15588:	b	1519c <argp_help@@Base+0x104>
   1558c:	tst	r5, #255	; 0xff
   15590:	beq	155d0 <argp_help@@Base+0x538>
   15594:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15598:	sub	sp, sp, #8
   1559c:	cmp	r0, #0
   155a0:	beq	155b0 <argp_help@@Base+0x518>
   155a4:	movw	r3, #55992	; 0xdab8
   155a8:	str	r8, [sp]
   155ac:	b	155bc <argp_help@@Base+0x524>
   155b0:	movw	r3, #55992	; 0xdab8
   155b4:	str	r8, [sp]
   155b8:	mov	r0, #0
   155bc:	movt	r3, #1
   155c0:	mov	r1, #0
   155c4:	mov	r2, #0
   155c8:	bl	16ab4 <argp_failure@@Base>
   155cc:	add	sp, sp, #8
   155d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   155d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   155d8:	movw	r0, #56560	; 0xdcf0
   155dc:	movt	r0, #1
   155e0:	cmp	r2, r1
   155e4:	bge	15668 <argp_help@@Base+0x5d0>
   155e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   155ec:	cmp	r2, r1
   155f0:	bge	15670 <argp_help@@Base+0x5d8>
   155f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   155f8:	cmp	r2, r1
   155fc:	bge	15678 <argp_help@@Base+0x5e0>
   15600:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15604:	cmp	r2, r1
   15608:	bge	15680 <argp_help@@Base+0x5e8>
   1560c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15610:	cmp	r2, r1
   15614:	bge	15688 <argp_help@@Base+0x5f0>
   15618:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1561c:	ldr	r5, [fp, #-132]	; 0xffffff7c
   15620:	cmp	r2, r1
   15624:	bge	16888 <argp_help@@Base+0x17f0>
   15628:	ldr	r0, [fp, #-112]	; 0xffffff90
   1562c:	sub	r1, fp, #88	; 0x58
   15630:	mov	r2, r1
   15634:	mov	r1, sl
   15638:	vld1.64	{d16-d17}, [r0]
   1563c:	mov	r0, #32
   15640:	vld1.64	{d18-d19}, [r2], r0
   15644:	ldr	r0, [fp, #-108]	; 0xffffff94
   15648:	vst1.64	{d16-d17}, [r0]
   1564c:	mov	r0, #36	; 0x24
   15650:	vst1.64	{d18-d19}, [r1], r0
   15654:	mov	r0, #1
   15658:	str	r0, [r1]
   1565c:	ldr	r0, [r2]
   15660:	str	r0, [sl, #32]
   15664:	b	156d4 <argp_help@@Base+0x63c>
   15668:	add	r2, r0, #32
   1566c:	b	1568c <argp_help@@Base+0x5f4>
   15670:	add	r2, r0, #48	; 0x30
   15674:	b	1568c <argp_help@@Base+0x5f4>
   15678:	add	r2, r0, #64	; 0x40
   1567c:	b	1568c <argp_help@@Base+0x5f4>
   15680:	add	r2, r0, #80	; 0x50
   15684:	b	1568c <argp_help@@Base+0x5f4>
   15688:	add	r2, r0, #96	; 0x60
   1568c:	ldr	r5, [fp, #-132]	; 0xffffff7c
   15690:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15694:	sub	sp, sp, #8
   15698:	movw	r1, #56073	; 0xdb09
   1569c:	cmp	r0, #0
   156a0:	movt	r1, #1
   156a4:	beq	156b4 <argp_help@@Base+0x61c>
   156a8:	movw	r3, #56021	; 0xdad5
   156ac:	stm	sp, {r1, r2}
   156b0:	b	156c0 <argp_help@@Base+0x628>
   156b4:	movw	r3, #56021	; 0xdad5
   156b8:	stm	sp, {r1, r2}
   156bc:	mov	r0, #0
   156c0:	movt	r3, #1
   156c4:	mov	r1, #0
   156c8:	mov	r2, #0
   156cc:	bl	16ab4 <argp_failure@@Base>
   156d0:	add	sp, sp, #8
   156d4:	ldr	r2, [sl, #32]
   156d8:	mov	r0, #0
   156dc:	mov	r1, #0
   156e0:	mov	r3, #0
   156e4:	str	r0, [fp, #-108]	; 0xffffff94
   156e8:	mov	r0, r5
   156ec:	bl	1ad84 <argp_parse@@Base+0x21cc>
   156f0:	cmp	r0, #0
   156f4:	beq	16588 <argp_help@@Base+0x14f0>
   156f8:	mov	r9, r0
   156fc:	tst	r6, #11
   15700:	str	r5, [fp, #-132]	; 0xffffff7c
   15704:	beq	158d0 <argp_help@@Base+0x838>
   15708:	ldr	r0, [fp, #-104]	; 0xffffff98
   1570c:	mov	r1, #0
   15710:	bl	16cd8 <argp_failure@@Base+0x224>
   15714:	ldr	r4, [r0, #4]
   15718:	str	r0, [fp, #-108]	; 0xffffff94
   1571c:	cmp	r4, #0
   15720:	beq	158d0 <argp_help@@Base+0x838>
   15724:	ldr	r6, [r0]
   15728:	movw	sl, #55793	; 0xd9f1
   1572c:	mov	r5, r4
   15730:	movt	sl, #1
   15734:	str	r6, [fp, #-100]	; 0xffffff9c
   15738:	ldr	r7, [r6, #4]
   1573c:	cmp	r7, #0
   15740:	bne	1575c <argp_help@@Base+0x6c4>
   15744:	subs	r5, r5, #1
   15748:	add	r6, r6, #28
   1574c:	beq	157b0 <argp_help@@Base+0x718>
   15750:	ldr	r7, [r6, #4]
   15754:	cmp	r7, #0
   15758:	beq	15744 <argp_help@@Base+0x6ac>
   1575c:	ldr	r0, [r6]
   15760:	add	r8, r0, #12
   15764:	ldr	r0, [r8, #-12]
   15768:	cmp	r0, #0
   1576c:	bne	15788 <argp_help@@Base+0x6f0>
   15770:	subs	r7, r7, #1
   15774:	add	r8, r8, #24
   15778:	beq	15744 <argp_help@@Base+0x6ac>
   1577c:	ldr	r0, [r8, #-12]
   15780:	cmp	r0, #0
   15784:	beq	15770 <argp_help@@Base+0x6d8>
   15788:	ldrb	r1, [r8]
   1578c:	tst	r1, #2
   15790:	bne	15770 <argp_help@@Base+0x6d8>
   15794:	mov	r1, sl
   15798:	bl	11340 <strcmp@plt>
   1579c:	cmp	r0, #0
   157a0:	bne	15770 <argp_help@@Base+0x6d8>
   157a4:	cmp	r6, #0
   157a8:	mvnne	r0, #0
   157ac:	strne	r0, [r6, #12]
   157b0:	ldr	r6, [fp, #-100]	; 0xffffff9c
   157b4:	movw	sl, #57144	; 0xdf38
   157b8:	mov	r8, r4
   157bc:	movt	sl, #1
   157c0:	ldr	r7, [r6, #4]
   157c4:	cmp	r7, #0
   157c8:	bne	157e4 <argp_help@@Base+0x74c>
   157cc:	subs	r8, r8, #1
   157d0:	add	r6, r6, #28
   157d4:	beq	15838 <argp_help@@Base+0x7a0>
   157d8:	ldr	r7, [r6, #4]
   157dc:	cmp	r7, #0
   157e0:	beq	157cc <argp_help@@Base+0x734>
   157e4:	ldr	r0, [r6]
   157e8:	add	r5, r0, #12
   157ec:	ldr	r0, [r5, #-12]
   157f0:	cmp	r0, #0
   157f4:	bne	15810 <argp_help@@Base+0x778>
   157f8:	subs	r7, r7, #1
   157fc:	add	r5, r5, #24
   15800:	beq	157cc <argp_help@@Base+0x734>
   15804:	ldr	r0, [r5, #-12]
   15808:	cmp	r0, #0
   1580c:	beq	157f8 <argp_help@@Base+0x760>
   15810:	ldrb	r1, [r5]
   15814:	tst	r1, #2
   15818:	bne	157f8 <argp_help@@Base+0x760>
   1581c:	mov	r1, sl
   15820:	bl	11340 <strcmp@plt>
   15824:	cmp	r0, #0
   15828:	bne	157f8 <argp_help@@Base+0x760>
   1582c:	cmp	r6, #0
   15830:	mvnne	r0, #0
   15834:	strne	r0, [r6, #12]
   15838:	cmp	r4, #0
   1583c:	beq	166ec <argp_help@@Base+0x1654>
   15840:	sub	r2, r4, #1
   15844:	ldr	r6, [fp, #-128]	; 0xffffff80
   15848:	movw	sl, #62944	; 0xf5e0
   1584c:	and	r0, r4, #3
   15850:	mov	r1, #0
   15854:	cmp	r2, #3
   15858:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1585c:	movt	sl, #2
   15860:	bcc	1589c <argp_help@@Base+0x804>
   15864:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15868:	sub	r3, r4, r0
   1586c:	mov	r1, #0
   15870:	add	r7, r1, #3
   15874:	str	r1, [r2, #24]
   15878:	str	r7, [r2, #108]	; 0x6c
   1587c:	add	r7, r1, #2
   15880:	str	r7, [r2, #80]	; 0x50
   15884:	add	r7, r1, #1
   15888:	add	r1, r1, #4
   1588c:	str	r7, [r2, #52]	; 0x34
   15890:	add	r2, r2, #112	; 0x70
   15894:	cmp	r3, r1
   15898:	bne	15870 <argp_help@@Base+0x7d8>
   1589c:	cmp	r0, #0
   158a0:	beq	158b8 <argp_help@@Base+0x820>
   158a4:	add	r2, r2, #24
   158a8:	str	r1, [r2], #28
   158ac:	subs	r0, r0, #1
   158b0:	add	r1, r1, #1
   158b4:	bne	158a8 <argp_help@@Base+0x810>
   158b8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   158bc:	movw	r3, #33020	; 0x80fc
   158c0:	mov	r1, r4
   158c4:	mov	r2, #28
   158c8:	movt	r3, #1
   158cc:	bl	11628 <qsort@plt>
   158d0:	tst	r6, #3
   158d4:	beq	16700 <argp_help@@Base+0x1668>
   158d8:	ldr	r1, [fp, #-104]	; 0xffffff98
   158dc:	ldr	r0, [r1, #8]
   158e0:	ldr	r1, [r1, #16]
   158e4:	bl	17474 <argp_failure@@Base+0x9c0>
   158e8:	mov	r2, r0
   158ec:	add	r0, r0, #7
   158f0:	bic	r0, r0, #7
   158f4:	sub	r5, sp, r0
   158f8:	mov	sp, r5
   158fc:	mov	r0, r5
   15900:	mov	r1, #0
   15904:	bl	11568 <memset@plt>
   15908:	movw	r7, #55804	; 0xd9fc
   1590c:	movt	r7, #1
   15910:	b	15934 <argp_help@@Base+0x89c>
   15914:	add	r1, r0, #1
   15918:	str	r1, [r9, #28]
   1591c:	mov	r1, #10
   15920:	strb	r1, [r0]
   15924:	cmp	r7, #0
   15928:	movw	r7, #55811	; 0xda03
   1592c:	movt	r7, #1
   15930:	beq	15af8 <argp_help@@Base+0xa60>
   15934:	movw	r0, #62944	; 0xf5e0
   15938:	ldr	r1, [r9, #24]
   1593c:	ldr	r2, [r9, #28]
   15940:	mov	sl, r6
   15944:	movt	r0, #2
   15948:	ldr	r6, [r0, #28]
   1594c:	ldr	r0, [r9, #16]
   15950:	sub	r1, r2, r1
   15954:	cmp	r1, r0
   15958:	bls	15964 <argp_help@@Base+0x8cc>
   1595c:	mov	r0, r9
   15960:	bl	1ae50 <argp_parse@@Base+0x2298>
   15964:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15968:	movw	r1, #55798	; 0xd9f6
   1596c:	ldr	r4, [r9, #12]
   15970:	mov	r0, r9
   15974:	mov	r2, r7
   15978:	str	r6, [r9, #12]
   1597c:	str	r5, [fp, #-88]	; 0xffffffa8
   15980:	movt	r1, #1
   15984:	bl	1b4b8 <argp_parse@@Base+0x2900>
   15988:	movw	r0, #62944	; 0xf5e0
   1598c:	ldr	r1, [r9, #24]
   15990:	ldr	r2, [r9, #28]
   15994:	movt	r0, #2
   15998:	ldr	r6, [r0, #28]
   1599c:	ldr	r0, [r9, #16]
   159a0:	sub	r1, r2, r1
   159a4:	cmp	r1, r0
   159a8:	bls	159b4 <argp_help@@Base+0x91c>
   159ac:	mov	r0, r9
   159b0:	bl	1ae50 <argp_parse@@Base+0x2298>
   159b4:	ldr	r8, [r9, #4]
   159b8:	str	r6, [r9, #4]
   159bc:	mov	r6, sl
   159c0:	tst	sl, #2
   159c4:	bne	159dc <argp_help@@Base+0x944>
   159c8:	ldr	r0, [fp, #-108]	; 0xffffff94
   159cc:	mov	r1, r9
   159d0:	bl	174e8 <argp_failure@@Base+0xa34>
   159d4:	orr	r6, r6, #2
   159d8:	b	15a40 <argp_help@@Base+0x9a8>
   159dc:	ldr	r0, [fp, #-108]	; 0xffffff94
   159e0:	ldr	r0, [r0, #4]
   159e4:	cmp	r0, #0
   159e8:	beq	15a40 <argp_help@@Base+0x9a8>
   159ec:	ldr	r0, [r9, #28]
   159f0:	ldr	r1, [r9, #32]
   159f4:	add	r2, r0, #12
   159f8:	cmp	r2, r1
   159fc:	bls	15a18 <argp_help@@Base+0x980>
   15a00:	mov	r0, r9
   15a04:	mov	r1, #12
   15a08:	bl	1b3cc <argp_parse@@Base+0x2814>
   15a0c:	cmp	r0, #0
   15a10:	beq	15a40 <argp_help@@Base+0x9a8>
   15a14:	ldr	r0, [r9, #28]
   15a18:	movw	r1, #56544	; 0xdce0
   15a1c:	movt	r1, #1
   15a20:	vldr	d16, [r1]
   15a24:	movw	r1, #11822	; 0x2e2e
   15a28:	movt	r1, #23854	; 0x5d2e
   15a2c:	str	r1, [r0, #8]
   15a30:	vst1.8	{d16}, [r0]
   15a34:	ldr	r0, [r9, #28]
   15a38:	add	r0, r0, #12
   15a3c:	str	r0, [r9, #28]
   15a40:	sub	sp, sp, #8
   15a44:	str	r9, [sp]
   15a48:	sub	r2, fp, #88	; 0x58
   15a4c:	mov	r3, #1
   15a50:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a54:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15a58:	bl	17904 <argp_failure@@Base+0xe50>
   15a5c:	add	sp, sp, #8
   15a60:	mov	r7, r0
   15a64:	ldr	r2, [r9, #24]
   15a68:	ldr	r0, [r9, #28]
   15a6c:	ldr	r1, [r9, #16]
   15a70:	sub	r2, r0, r2
   15a74:	cmp	r2, r1
   15a78:	bls	15ab4 <argp_help@@Base+0xa1c>
   15a7c:	mov	r0, r9
   15a80:	bl	1ae50 <argp_parse@@Base+0x2298>
   15a84:	ldr	r2, [r9, #24]
   15a88:	ldr	r0, [r9, #28]
   15a8c:	ldr	r1, [r9, #16]
   15a90:	sub	r2, r0, r2
   15a94:	cmp	r2, r1
   15a98:	str	r4, [r9, #12]
   15a9c:	bhi	15ac0 <argp_help@@Base+0xa28>
   15aa0:	str	r8, [r9, #4]
   15aa4:	ldr	r1, [r9, #32]
   15aa8:	cmp	r0, r1
   15aac:	bcc	15914 <argp_help@@Base+0x87c>
   15ab0:	b	15adc <argp_help@@Base+0xa44>
   15ab4:	cmp	r2, r1
   15ab8:	str	r4, [r9, #12]
   15abc:	bls	15aa0 <argp_help@@Base+0xa08>
   15ac0:	mov	r0, r9
   15ac4:	bl	1ae50 <argp_parse@@Base+0x2298>
   15ac8:	ldr	r0, [r9, #28]
   15acc:	str	r8, [r9, #4]
   15ad0:	ldr	r1, [r9, #32]
   15ad4:	cmp	r0, r1
   15ad8:	bcc	15914 <argp_help@@Base+0x87c>
   15adc:	mov	r0, r9
   15ae0:	mov	r1, #1
   15ae4:	bl	1b3cc <argp_parse@@Base+0x2814>
   15ae8:	cmp	r0, #0
   15aec:	beq	15924 <argp_help@@Base+0x88c>
   15af0:	ldr	r0, [r9, #28]
   15af4:	b	15914 <argp_help@@Base+0x87c>
   15af8:	movw	sl, #62944	; 0xf5e0
   15afc:	mov	r5, #1
   15b00:	movt	sl, #2
   15b04:	tst	r6, #16
   15b08:	beq	15b34 <argp_help@@Base+0xa9c>
   15b0c:	sub	sp, sp, #8
   15b10:	mov	r0, #1
   15b14:	mov	r2, #0
   15b18:	mov	r3, #0
   15b1c:	stm	sp, {r0, r9}
   15b20:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b24:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15b28:	bl	17c18 <argp_failure@@Base+0x1164>
   15b2c:	add	sp, sp, #8
   15b30:	orr	r5, r0, r5
   15b34:	tst	r6, #4
   15b38:	bne	16598 <argp_help@@Base+0x1500>
   15b3c:	tst	r6, #8
   15b40:	beq	165bc <argp_help@@Base+0x1524>
   15b44:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b48:	ldr	r1, [r0, #4]
   15b4c:	cmp	r1, #0
   15b50:	beq	165bc <argp_help@@Base+0x1524>
   15b54:	str	r6, [fp, #-128]	; 0xffffff80
   15b58:	cmp	r5, #0
   15b5c:	ldr	r4, [fp, #-108]	; 0xffffff94
   15b60:	beq	15ba0 <argp_help@@Base+0xb08>
   15b64:	ldr	r0, [r9, #28]
   15b68:	ldr	r1, [r9, #32]
   15b6c:	cmp	r0, r1
   15b70:	bcc	15b8c <argp_help@@Base+0xaf4>
   15b74:	mov	r0, r9
   15b78:	mov	r1, #1
   15b7c:	bl	1b3cc <argp_parse@@Base+0x2814>
   15b80:	cmp	r0, #0
   15b84:	beq	15b9c <argp_help@@Base+0xb04>
   15b88:	ldr	r0, [r9, #28]
   15b8c:	add	r1, r0, #1
   15b90:	str	r1, [r9, #28]
   15b94:	mov	r1, #10
   15b98:	strb	r1, [r0]
   15b9c:	ldr	r1, [r4, #4]
   15ba0:	ldr	r5, [r4]
   15ba4:	mov	r0, #0
   15ba8:	cmp	r1, #0
   15bac:	str	r0, [fp, #-44]	; 0xffffffd4
   15bb0:	str	r0, [fp, #-48]	; 0xffffffd0
   15bb4:	str	r0, [fp, #-40]	; 0xffffffd8
   15bb8:	beq	166d8 <argp_help@@Base+0x1640>
   15bbc:	add	r0, r9, #28
   15bc0:	str	r0, [fp, #-100]	; 0xffffff9c
   15bc4:	b	15be0 <argp_help@@Base+0xb48>
   15bc8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15bcc:	ldr	r0, [fp, #-120]	; 0xffffff88
   15bd0:	add	r5, r5, #28
   15bd4:	subs	r1, r1, #1
   15bd8:	str	r0, [r9, #12]
   15bdc:	beq	166c4 <argp_help@@Base+0x162c>
   15be0:	ldr	r0, [r5, #8]
   15be4:	str	r1, [fp, #-116]	; 0xffffff8c
   15be8:	ldr	r1, [r9, #24]
   15bec:	ldr	r2, [r9, #28]
   15bf0:	ldr	r4, [r5]
   15bf4:	str	r0, [fp, #-92]	; 0xffffffa4
   15bf8:	ldr	r0, [r9, #16]
   15bfc:	sub	r1, r2, r1
   15c00:	cmp	r1, r0
   15c04:	bls	15c10 <argp_help@@Base+0xb78>
   15c08:	mov	r0, r9
   15c0c:	bl	1ae50 <argp_parse@@Base+0x2298>
   15c10:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15c14:	mov	r7, #0
   15c18:	ldr	r1, [r9, #12]
   15c1c:	ldr	r2, [r9, #4]
   15c20:	mov	r8, r4
   15c24:	str	r7, [r9, #4]
   15c28:	str	r0, [fp, #-72]	; 0xffffffb8
   15c2c:	mov	r0, #1
   15c30:	str	r1, [fp, #-120]	; 0xffffff88
   15c34:	str	r2, [fp, #-124]	; 0xffffff84
   15c38:	str	r0, [fp, #-76]	; 0xffffffb4
   15c3c:	sub	r0, fp, #48	; 0x30
   15c40:	str	r0, [fp, #-80]	; 0xffffffb0
   15c44:	str	r9, [fp, #-84]	; 0xffffffac
   15c48:	str	r5, [fp, #-88]	; 0xffffffa8
   15c4c:	ldrb	r0, [r4, #12]
   15c50:	tst	r0, #8
   15c54:	bne	15c9c <argp_help@@Base+0xc04>
   15c58:	ldr	r0, [r5, #4]
   15c5c:	cmp	r0, #0
   15c60:	beq	15c9c <argp_help@@Base+0xc04>
   15c64:	add	r1, r4, #12
   15c68:	ldr	r2, [r1, #-12]
   15c6c:	cmp	r2, #0
   15c70:	bne	15c8c <argp_help@@Base+0xbf4>
   15c74:	add	r1, r1, #24
   15c78:	subs	r0, r0, #1
   15c7c:	beq	15c9c <argp_help@@Base+0xc04>
   15c80:	ldr	r2, [r1, #-12]
   15c84:	cmp	r2, #0
   15c88:	beq	15c74 <argp_help@@Base+0xbdc>
   15c8c:	ldrb	r2, [r1]
   15c90:	tst	r2, #2
   15c94:	bne	15c74 <argp_help@@Base+0xbdc>
   15c98:	mov	r7, #1
   15c9c:	ldr	r1, [r9, #24]
   15ca0:	ldr	r2, [r9, #28]
   15ca4:	ldr	r0, [r9, #16]
   15ca8:	ldr	r4, [sl, #8]
   15cac:	sub	r1, r2, r1
   15cb0:	cmp	r1, r0
   15cb4:	bls	15cc0 <argp_help@@Base+0xc28>
   15cb8:	mov	r0, r9
   15cbc:	bl	1ae50 <argp_parse@@Base+0x2298>
   15cc0:	str	r4, [r9, #12]
   15cc4:	mov	r4, r8
   15cc8:	str	r5, [fp, #-112]	; 0xffffff90
   15ccc:	ldr	r6, [r5, #4]
   15cd0:	cmp	r6, #0
   15cd4:	beq	15fd8 <argp_help@@Base+0xf40>
   15cd8:	cmp	r7, #0
   15cdc:	beq	15e7c <argp_help@@Base+0xde4>
   15ce0:	add	r7, r4, #12
   15ce4:	ldr	r5, [r7]
   15ce8:	tst	r5, #8
   15cec:	bne	15cf8 <argp_help@@Base+0xc60>
   15cf0:	b	15d10 <argp_help@@Base+0xc78>
   15cf4:	mov	r4, r8
   15cf8:	add	r7, r7, #24
   15cfc:	subs	r6, r6, #1
   15d00:	beq	15fd8 <argp_help@@Base+0xf40>
   15d04:	ldr	r5, [r7]
   15d08:	tst	r5, #8
   15d0c:	bne	15cf8 <argp_help@@Base+0xc60>
   15d10:	ldr	r4, [r7, #-8]
   15d14:	sub	r0, r4, #1
   15d18:	cmp	r0, #254	; 0xfe
   15d1c:	bhi	15cf4 <argp_help@@Base+0xc5c>
   15d20:	bl	114d8 <__ctype_b_loc@plt>
   15d24:	ldr	r0, [r0]
   15d28:	add	r0, r0, r4, lsl #1
   15d2c:	ldrb	r0, [r0, #1]
   15d30:	tst	r0, #64	; 0x40
   15d34:	bne	15d4c <argp_help@@Base+0xcb4>
   15d38:	mov	r4, r8
   15d3c:	add	r7, r7, #24
   15d40:	subs	r6, r6, #1
   15d44:	bne	15d04 <argp_help@@Base+0xc6c>
   15d48:	b	15fd8 <argp_help@@Base+0xf40>
   15d4c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15d50:	ldrb	r0, [r0]
   15d54:	cmp	r4, r0
   15d58:	bne	15e2c <argp_help@@Base+0xd94>
   15d5c:	tst	r5, #2
   15d60:	mov	r4, r8
   15d64:	bne	15e60 <argp_help@@Base+0xdc8>
   15d68:	ldr	r0, [sl, #8]
   15d6c:	sub	r1, fp, #88	; 0x58
   15d70:	bl	18700 <argp_failure@@Base+0x1c4c>
   15d74:	ldr	r0, [r9, #28]
   15d78:	ldr	r1, [r9, #32]
   15d7c:	cmp	r0, r1
   15d80:	bcc	15da0 <argp_help@@Base+0xd08>
   15d84:	mov	r0, r9
   15d88:	mov	r1, #1
   15d8c:	bl	1b3cc <argp_parse@@Base+0x2814>
   15d90:	cmp	r0, #0
   15d94:	beq	15db4 <argp_help@@Base+0xd1c>
   15d98:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15d9c:	ldr	r0, [r0]
   15da0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15da4:	add	r1, r0, #1
   15da8:	str	r1, [r2]
   15dac:	mov	r1, #45	; 0x2d
   15db0:	strb	r1, [r0]
   15db4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15db8:	ldr	r0, [r9, #28]
   15dbc:	ldr	r1, [r9, #32]
   15dc0:	ldrb	r5, [r2]
   15dc4:	cmp	r0, r1
   15dc8:	bcc	15de8 <argp_help@@Base+0xd50>
   15dcc:	mov	r0, r9
   15dd0:	mov	r1, #1
   15dd4:	bl	1b3cc <argp_parse@@Base+0x2814>
   15dd8:	cmp	r0, #0
   15ddc:	beq	15df8 <argp_help@@Base+0xd60>
   15de0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15de4:	ldr	r0, [r0]
   15de8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15dec:	add	r1, r0, #1
   15df0:	str	r1, [r2]
   15df4:	strb	r5, [r0]
   15df8:	ldr	r0, [sl]
   15dfc:	ldr	r2, [r4, #8]
   15e00:	cmp	r0, #0
   15e04:	beq	15e40 <argp_help@@Base+0xda8>
   15e08:	cmp	r2, #0
   15e0c:	beq	15e60 <argp_help@@Base+0xdc8>
   15e10:	ldrb	r0, [r4, #12]
   15e14:	tst	r0, #1
   15e18:	bne	15e50 <argp_help@@Base+0xdb8>
   15e1c:	movw	r1, #56017	; 0xdad1
   15e20:	mov	r0, r9
   15e24:	movt	r1, #1
   15e28:	b	15e5c <argp_help@@Base+0xdc4>
   15e2c:	mov	r4, r8
   15e30:	add	r7, r7, #24
   15e34:	subs	r6, r6, #1
   15e38:	bne	15d04 <argp_help@@Base+0xc6c>
   15e3c:	b	15fd8 <argp_help@@Base+0xf40>
   15e40:	cmp	r2, #0
   15e44:	movne	r0, #1
   15e48:	strne	r0, [fp, #-40]	; 0xffffffd8
   15e4c:	b	15e60 <argp_help@@Base+0xdc8>
   15e50:	movw	r1, #56513	; 0xdcc1
   15e54:	mov	r0, r9
   15e58:	movt	r1, #1
   15e5c:	bl	1b4b8 <argp_parse@@Base+0x2900>
   15e60:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15e64:	add	r0, r0, #1
   15e68:	str	r0, [fp, #-92]	; 0xffffffa4
   15e6c:	add	r7, r7, #24
   15e70:	subs	r6, r6, #1
   15e74:	bne	15d04 <argp_help@@Base+0xc6c>
   15e78:	b	15fd8 <argp_help@@Base+0xf40>
   15e7c:	add	r7, r4, #12
   15e80:	ldr	r5, [r7]
   15e84:	tst	r5, #8
   15e88:	bne	15e98 <argp_help@@Base+0xe00>
   15e8c:	b	15eb0 <argp_help@@Base+0xe18>
   15e90:	movw	sl, #62944	; 0xf5e0
   15e94:	movt	sl, #2
   15e98:	add	r7, r7, #24
   15e9c:	subs	r6, r6, #1
   15ea0:	beq	15fd8 <argp_help@@Base+0xf40>
   15ea4:	ldr	r5, [r7]
   15ea8:	tst	r5, #8
   15eac:	bne	15e98 <argp_help@@Base+0xe00>
   15eb0:	ldr	sl, [r7, #-8]
   15eb4:	sub	r0, sl, #1
   15eb8:	cmp	r0, #254	; 0xfe
   15ebc:	bhi	15e90 <argp_help@@Base+0xdf8>
   15ec0:	bl	114d8 <__ctype_b_loc@plt>
   15ec4:	ldr	r0, [r0]
   15ec8:	add	r0, r0, sl, lsl #1
   15ecc:	ldrb	r0, [r0, #1]
   15ed0:	tst	r0, #64	; 0x40
   15ed4:	beq	15e90 <argp_help@@Base+0xdf8>
   15ed8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15edc:	ldrb	r0, [r0]
   15ee0:	cmp	sl, r0
   15ee4:	bne	15e90 <argp_help@@Base+0xdf8>
   15ee8:	movw	sl, #62944	; 0xf5e0
   15eec:	tst	r5, #2
   15ef0:	movt	sl, #2
   15ef4:	bne	15fc0 <argp_help@@Base+0xf28>
   15ef8:	ldr	r0, [sl, #8]
   15efc:	sub	r1, fp, #88	; 0x58
   15f00:	bl	18700 <argp_failure@@Base+0x1c4c>
   15f04:	ldr	r0, [r9, #28]
   15f08:	ldr	r1, [r9, #32]
   15f0c:	cmp	r0, r1
   15f10:	bcc	15f30 <argp_help@@Base+0xe98>
   15f14:	mov	r0, r9
   15f18:	mov	r1, #1
   15f1c:	bl	1b3cc <argp_parse@@Base+0x2814>
   15f20:	cmp	r0, #0
   15f24:	beq	15f44 <argp_help@@Base+0xeac>
   15f28:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15f2c:	ldr	r0, [r0]
   15f30:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15f34:	add	r1, r0, #1
   15f38:	str	r1, [r2]
   15f3c:	mov	r1, #45	; 0x2d
   15f40:	strb	r1, [r0]
   15f44:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15f48:	ldr	r0, [r9, #28]
   15f4c:	ldr	r1, [r9, #32]
   15f50:	ldrb	r5, [r2]
   15f54:	cmp	r0, r1
   15f58:	bcc	15f78 <argp_help@@Base+0xee0>
   15f5c:	mov	r0, r9
   15f60:	mov	r1, #1
   15f64:	bl	1b3cc <argp_parse@@Base+0x2814>
   15f68:	cmp	r0, #0
   15f6c:	beq	15f88 <argp_help@@Base+0xef0>
   15f70:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15f74:	ldr	r0, [r0]
   15f78:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15f7c:	add	r1, r0, #1
   15f80:	str	r1, [r2]
   15f84:	strb	r5, [r0]
   15f88:	ldr	r2, [r4, #8]
   15f8c:	cmp	r2, #0
   15f90:	beq	15fc0 <argp_help@@Base+0xf28>
   15f94:	ldrb	r0, [r4, #12]
   15f98:	tst	r0, #1
   15f9c:	bne	15fb0 <argp_help@@Base+0xf18>
   15fa0:	movw	r1, #56017	; 0xdad1
   15fa4:	mov	r0, r9
   15fa8:	movt	r1, #1
   15fac:	b	15fbc <argp_help@@Base+0xf24>
   15fb0:	movw	r1, #56513	; 0xdcc1
   15fb4:	mov	r0, r9
   15fb8:	movt	r1, #1
   15fbc:	bl	1b4b8 <argp_parse@@Base+0x2900>
   15fc0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15fc4:	add	r0, r0, #1
   15fc8:	str	r0, [fp, #-92]	; 0xffffffa4
   15fcc:	add	r7, r7, #24
   15fd0:	subs	r6, r6, #1
   15fd4:	bne	15ea4 <argp_help@@Base+0xe0c>
   15fd8:	ldrb	r0, [r4, #12]
   15fdc:	tst	r0, #8
   15fe0:	bne	160b0 <argp_help@@Base+0x1018>
   15fe4:	ldr	r1, [r9, #24]
   15fe8:	ldr	r2, [r9, #28]
   15fec:	ldr	r0, [r9, #16]
   15ff0:	ldr	r4, [sl, #12]
   15ff4:	sub	r1, r2, r1
   15ff8:	cmp	r1, r0
   15ffc:	bls	16008 <argp_help@@Base+0xf70>
   16000:	mov	r0, r9
   16004:	bl	1ae50 <argp_parse@@Base+0x2298>
   16008:	ldr	r0, [fp, #-112]	; 0xffffff90
   1600c:	str	r4, [r9, #12]
   16010:	mov	r4, r8
   16014:	ldr	r5, [r0, #4]
   16018:	cmp	r5, #0
   1601c:	beq	16198 <argp_help@@Base+0x1100>
   16020:	add	r6, r4, #12
   16024:	ldr	r0, [r6, #-12]
   16028:	cmp	r0, #0
   1602c:	bne	1605c <argp_help@@Base+0xfc4>
   16030:	b	16044 <argp_help@@Base+0xfac>
   16034:	movw	r1, #56523	; 0xdccb
   16038:	mov	r0, r9
   1603c:	movt	r1, #1
   16040:	bl	1b4b8 <argp_parse@@Base+0x2900>
   16044:	add	r6, r6, #24
   16048:	subs	r5, r5, #1
   1604c:	beq	16198 <argp_help@@Base+0x1100>
   16050:	ldr	r0, [r6, #-12]
   16054:	cmp	r0, #0
   16058:	beq	16044 <argp_help@@Base+0xfac>
   1605c:	ldrb	r0, [r6]
   16060:	tst	r0, #2
   16064:	bne	16044 <argp_help@@Base+0xfac>
   16068:	ldr	r0, [sl, #12]
   1606c:	sub	r1, fp, #88	; 0x58
   16070:	bl	18700 <argp_failure@@Base+0x1c4c>
   16074:	ldr	r2, [r6, #-12]
   16078:	movw	r1, #56518	; 0xdcc6
   1607c:	mov	r0, r9
   16080:	movt	r1, #1
   16084:	bl	1b4b8 <argp_parse@@Base+0x2900>
   16088:	ldr	r2, [r4, #8]
   1608c:	cmp	r2, #0
   16090:	beq	16044 <argp_help@@Base+0xfac>
   16094:	ldrb	r0, [r4, #12]
   16098:	tst	r0, #1
   1609c:	beq	16034 <argp_help@@Base+0xf9c>
   160a0:	movw	r1, #56527	; 0xdccf
   160a4:	mov	r0, r9
   160a8:	movt	r1, #1
   160ac:	b	16040 <argp_help@@Base+0xfa8>
   160b0:	ldr	r1, [r9, #24]
   160b4:	ldr	r2, [r9, #28]
   160b8:	ldr	r0, [r9, #16]
   160bc:	ldr	r4, [sl, #16]
   160c0:	sub	r1, r2, r1
   160c4:	cmp	r1, r0
   160c8:	bls	160d4 <argp_help@@Base+0x103c>
   160cc:	mov	r0, r9
   160d0:	bl	1ae50 <argp_parse@@Base+0x2298>
   160d4:	ldr	r0, [fp, #-112]	; 0xffffff90
   160d8:	str	r4, [r9, #12]
   160dc:	mov	r4, r8
   160e0:	ldr	r6, [r0, #4]
   160e4:	cmp	r6, #0
   160e8:	beq	16198 <argp_help@@Base+0x1100>
   160ec:	add	r8, r4, #12
   160f0:	ldr	r0, [r8, #-12]
   160f4:	cmp	r0, #0
   160f8:	bne	16134 <argp_help@@Base+0x109c>
   160fc:	b	1611c <argp_help@@Base+0x1084>
   16100:	mov	r1, r5
   16104:	mov	r2, r7
   16108:	bl	113d0 <memcpy@plt>
   1610c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16110:	ldr	r0, [r1]
   16114:	add	r0, r0, r7
   16118:	str	r0, [r1]
   1611c:	add	r8, r8, #24
   16120:	subs	r6, r6, #1
   16124:	beq	16198 <argp_help@@Base+0x1100>
   16128:	ldr	r0, [r8, #-12]
   1612c:	cmp	r0, #0
   16130:	beq	1611c <argp_help@@Base+0x1084>
   16134:	ldrb	r0, [r8]
   16138:	tst	r0, #2
   1613c:	bne	1611c <argp_help@@Base+0x1084>
   16140:	ldr	r0, [sl, #16]
   16144:	sub	r1, fp, #88	; 0x58
   16148:	bl	18700 <argp_failure@@Base+0x1c4c>
   1614c:	ldr	r5, [r8, #-12]
   16150:	mov	r0, r5
   16154:	bl	11514 <strlen@plt>
   16158:	cmp	r0, #0
   1615c:	beq	1611c <argp_help@@Base+0x1084>
   16160:	mov	r7, r0
   16164:	ldr	r0, [r9, #28]
   16168:	ldr	r1, [r9, #32]
   1616c:	add	r2, r0, r7
   16170:	cmp	r2, r1
   16174:	bls	16100 <argp_help@@Base+0x1068>
   16178:	mov	r0, r9
   1617c:	mov	r1, r7
   16180:	bl	1b3cc <argp_parse@@Base+0x2814>
   16184:	cmp	r0, #0
   16188:	beq	1611c <argp_help@@Base+0x1084>
   1618c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16190:	ldr	r0, [r0]
   16194:	b	16100 <argp_help@@Base+0x1068>
   16198:	ldr	r1, [r9, #24]
   1619c:	ldr	r2, [r9, #28]
   161a0:	ldr	r0, [r9, #16]
   161a4:	sub	r1, r2, r1
   161a8:	cmp	r1, r0
   161ac:	bls	161b8 <argp_help@@Base+0x1120>
   161b0:	mov	r0, r9
   161b4:	bl	1ae50 <argp_parse@@Base+0x2298>
   161b8:	mov	r0, #0
   161bc:	ldr	r5, [fp, #-112]	; 0xffffff90
   161c0:	str	r0, [r9, #4]
   161c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   161c8:	cmp	r0, #0
   161cc:	beq	16228 <argp_help@@Base+0x1190>
   161d0:	ldrb	r0, [r4, #12]
   161d4:	mov	r6, r4
   161d8:	tst	r0, #8
   161dc:	bne	16208 <argp_help@@Base+0x1170>
   161e0:	ldr	r4, [r6, #4]
   161e4:	sub	r0, r4, #1
   161e8:	cmp	r0, #254	; 0xfe
   161ec:	bhi	16208 <argp_help@@Base+0x1170>
   161f0:	bl	114d8 <__ctype_b_loc@plt>
   161f4:	ldr	r0, [r0]
   161f8:	add	r0, r0, r4, lsl #1
   161fc:	ldrb	r0, [r0, #1]
   16200:	tst	r0, #64	; 0x40
   16204:	bne	1653c <argp_help@@Base+0x14a4>
   16208:	ldr	r0, [r6]
   1620c:	cmp	r0, #0
   16210:	bne	1653c <argp_help@@Base+0x14a4>
   16214:	ldr	r1, [r5, #20]
   16218:	ldr	r0, [r6, #16]
   1621c:	sub	r2, fp, #88	; 0x58
   16220:	bl	1890c <argp_failure@@Base+0x1e58>
   16224:	b	16538 <argp_help@@Base+0x14a0>
   16228:	ldr	r6, [r5, #20]
   1622c:	ldr	r5, [r4, #16]
   16230:	cmp	r6, #0
   16234:	mov	r8, r5
   16238:	beq	16274 <argp_help@@Base+0x11dc>
   1623c:	ldr	r0, [r6, #20]
   16240:	mov	r8, r5
   16244:	cmp	r0, #0
   16248:	beq	16274 <argp_help@@Base+0x11dc>
   1624c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16250:	ldr	r7, [r4, #4]
   16254:	mov	r0, r6
   16258:	bl	198e4 <argp_parse@@Base+0xd2c>
   1625c:	ldr	r3, [r6, #20]
   16260:	mov	r2, r0
   16264:	mov	r0, r7
   16268:	mov	r1, r5
   1626c:	blx	r3
   16270:	mov	r8, r0
   16274:	cmp	r8, #0
   16278:	beq	164cc <argp_help@@Base+0x1434>
   1627c:	ldrb	r0, [r8]
   16280:	cmp	r0, #0
   16284:	beq	164bc <argp_help@@Base+0x1424>
   16288:	ldr	r1, [r9, #24]
   1628c:	ldr	r2, [r9, #28]
   16290:	ldr	r0, [r9, #16]
   16294:	str	r5, [fp, #-92]	; 0xffffffa4
   16298:	sub	r1, r2, r1
   1629c:	cmp	r1, r0
   162a0:	bls	162bc <argp_help@@Base+0x1224>
   162a4:	mov	r0, r9
   162a8:	bl	1ae50 <argp_parse@@Base+0x2298>
   162ac:	ldr	r1, [r9, #24]
   162b0:	ldr	r2, [r9, #28]
   162b4:	ldr	r0, [r9, #16]
   162b8:	sub	r1, r2, r1
   162bc:	ldr	r6, [sl, #20]
   162c0:	ldr	r4, [r9, #20]
   162c4:	cmp	r1, r0
   162c8:	mov	r5, r6
   162cc:	bls	162ec <argp_help@@Base+0x1254>
   162d0:	mov	r0, r9
   162d4:	bl	1ae50 <argp_parse@@Base+0x2298>
   162d8:	ldr	r1, [r9, #24]
   162dc:	ldr	r2, [r9, #28]
   162e0:	ldr	r5, [sl, #20]
   162e4:	ldr	r0, [r9, #16]
   162e8:	sub	r1, r2, r1
   162ec:	bic	r7, r4, r4, asr #31
   162f0:	str	r6, [r9, #4]
   162f4:	cmp	r1, r0
   162f8:	mov	r6, r5
   162fc:	bls	1630c <argp_help@@Base+0x1274>
   16300:	mov	r0, r9
   16304:	bl	1ae50 <argp_parse@@Base+0x2298>
   16308:	ldr	r6, [sl, #20]
   1630c:	add	r0, r6, #3
   16310:	str	r5, [r9, #12]
   16314:	cmp	r7, r0
   16318:	bls	16374 <argp_help@@Base+0x12dc>
   1631c:	ldr	r0, [r9, #28]
   16320:	ldr	r1, [r9, #32]
   16324:	ldr	r5, [fp, #-92]	; 0xffffffa4
   16328:	cmp	r0, r1
   1632c:	bcc	1634c <argp_help@@Base+0x12b4>
   16330:	mov	r0, r9
   16334:	mov	r1, #1
   16338:	bl	1b3cc <argp_parse@@Base+0x2814>
   1633c:	cmp	r0, #0
   16340:	beq	1645c <argp_help@@Base+0x13c4>
   16344:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16348:	ldr	r0, [r0]
   1634c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16350:	add	r1, r0, #1
   16354:	str	r1, [r2]
   16358:	mov	r1, #10
   1635c:	strb	r1, [r0]
   16360:	mov	r0, r8
   16364:	bl	11514 <strlen@plt>
   16368:	cmp	r0, #0
   1636c:	bne	1646c <argp_help@@Base+0x13d4>
   16370:	b	164bc <argp_help@@Base+0x1424>
   16374:	cmp	r7, r6
   16378:	bcs	16408 <argp_help@@Base+0x1370>
   1637c:	ldr	r1, [r9, #24]
   16380:	ldr	r2, [r9, #28]
   16384:	ldr	r0, [r9, #16]
   16388:	ldr	r5, [fp, #-92]	; 0xffffffa4
   1638c:	sub	r1, r2, r1
   16390:	cmp	r1, r0
   16394:	bls	163a0 <argp_help@@Base+0x1308>
   16398:	mov	r0, r9
   1639c:	bl	1ae50 <argp_parse@@Base+0x2298>
   163a0:	ldr	r0, [r9, #20]
   163a4:	cmp	r0, #0
   163a8:	subgt	r6, r6, r0
   163ac:	cmp	r6, #1
   163b0:	bge	163dc <argp_help@@Base+0x1344>
   163b4:	b	1645c <argp_help@@Base+0x13c4>
   163b8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   163bc:	ldr	r0, [r0]
   163c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   163c4:	add	r1, r0, #1
   163c8:	str	r1, [r2]
   163cc:	mov	r1, #32
   163d0:	strb	r1, [r0]
   163d4:	cmp	r6, #0
   163d8:	ble	1645c <argp_help@@Base+0x13c4>
   163dc:	ldr	r0, [r9, #28]
   163e0:	ldr	r1, [r9, #32]
   163e4:	sub	r6, r6, #1
   163e8:	cmp	r0, r1
   163ec:	bcc	163c0 <argp_help@@Base+0x1328>
   163f0:	mov	r0, r9
   163f4:	mov	r1, #1
   163f8:	bl	1b3cc <argp_parse@@Base+0x2814>
   163fc:	cmp	r0, #0
   16400:	bne	163b8 <argp_help@@Base+0x1320>
   16404:	b	163d4 <argp_help@@Base+0x133c>
   16408:	ldr	r0, [r9, #28]
   1640c:	ldr	r1, [r9, #32]
   16410:	ldr	r5, [fp, #-92]	; 0xffffffa4
   16414:	add	r2, r0, #3
   16418:	cmp	r2, r1
   1641c:	bls	1643c <argp_help@@Base+0x13a4>
   16420:	mov	r0, r9
   16424:	mov	r1, #3
   16428:	bl	1b3cc <argp_parse@@Base+0x2814>
   1642c:	cmp	r0, #0
   16430:	beq	1645c <argp_help@@Base+0x13c4>
   16434:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16438:	ldr	r0, [r0]
   1643c:	mov	r1, #32
   16440:	strb	r1, [r0, #2]
   16444:	movw	r1, #8224	; 0x2020
   16448:	strh	r1, [r0]
   1644c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16450:	ldr	r0, [r1]
   16454:	add	r0, r0, #3
   16458:	str	r0, [r1]
   1645c:	mov	r0, r8
   16460:	bl	11514 <strlen@plt>
   16464:	cmp	r0, #0
   16468:	beq	164bc <argp_help@@Base+0x1424>
   1646c:	mov	r6, r0
   16470:	ldr	r0, [r9, #28]
   16474:	ldr	r1, [r9, #32]
   16478:	add	r2, r0, r6
   1647c:	cmp	r2, r1
   16480:	bls	164a0 <argp_help@@Base+0x1408>
   16484:	mov	r0, r9
   16488:	mov	r1, r6
   1648c:	bl	1b3cc <argp_parse@@Base+0x2814>
   16490:	cmp	r0, #0
   16494:	beq	164bc <argp_help@@Base+0x1424>
   16498:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1649c:	ldr	r0, [r0]
   164a0:	mov	r1, r8
   164a4:	mov	r2, r6
   164a8:	bl	113d0 <memcpy@plt>
   164ac:	ldr	r1, [fp, #-100]	; 0xffffff9c
   164b0:	ldr	r0, [r1]
   164b4:	add	r0, r0, r6
   164b8:	str	r0, [r1]
   164bc:	cmp	r8, r5
   164c0:	beq	164cc <argp_help@@Base+0x1434>
   164c4:	mov	r0, r8
   164c8:	bl	19f94 <argp_parse@@Base+0x13dc>
   164cc:	ldr	r2, [r9, #24]
   164d0:	ldr	r0, [r9, #28]
   164d4:	ldr	r1, [r9, #16]
   164d8:	sub	r2, r0, r2
   164dc:	cmp	r2, r1
   164e0:	bls	164f0 <argp_help@@Base+0x1458>
   164e4:	mov	r0, r9
   164e8:	bl	1ae50 <argp_parse@@Base+0x2298>
   164ec:	ldr	r0, [r9, #28]
   164f0:	mov	r1, #0
   164f4:	ldr	r5, [fp, #-112]	; 0xffffff90
   164f8:	str	r1, [r9, #4]
   164fc:	ldr	r1, [r9, #32]
   16500:	cmp	r0, r1
   16504:	bcc	16524 <argp_help@@Base+0x148c>
   16508:	mov	r0, r9
   1650c:	mov	r1, #1
   16510:	bl	1b3cc <argp_parse@@Base+0x2814>
   16514:	cmp	r0, #0
   16518:	beq	16538 <argp_help@@Base+0x14a0>
   1651c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16520:	ldr	r0, [r0]
   16524:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16528:	add	r1, r0, #1
   1652c:	str	r1, [r2]
   16530:	mov	r1, #10
   16534:	strb	r1, [r0]
   16538:	str	r5, [fp, #-48]	; 0xffffffd0
   1653c:	ldr	r1, [r9, #24]
   16540:	ldr	r2, [r9, #28]
   16544:	ldr	r0, [r9, #16]
   16548:	sub	r1, r2, r1
   1654c:	cmp	r1, r0
   16550:	bls	1656c <argp_help@@Base+0x14d4>
   16554:	mov	r0, r9
   16558:	bl	1ae50 <argp_parse@@Base+0x2298>
   1655c:	ldr	r1, [r9, #24]
   16560:	ldr	r2, [r9, #28]
   16564:	ldr	r0, [r9, #16]
   16568:	sub	r1, r2, r1
   1656c:	ldr	r2, [fp, #-124]	; 0xffffff84
   16570:	cmp	r1, r0
   16574:	str	r2, [r9, #4]
   16578:	bls	15bc8 <argp_help@@Base+0xb30>
   1657c:	mov	r0, r9
   16580:	bl	1ae50 <argp_parse@@Base+0x2298>
   16584:	b	15bc8 <argp_help@@Base+0xb30>
   16588:	mov	r0, r5
   1658c:	sub	sp, fp, #28
   16590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16594:	b	11454 <funlockfile@plt>
   16598:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1659c:	movw	r1, #55818	; 0xda0a
   165a0:	mov	r0, r9
   165a4:	movt	r1, #1
   165a8:	mov	r3, r2
   165ac:	bl	1b4b8 <argp_parse@@Base+0x2900>
   165b0:	mov	r5, #1
   165b4:	tst	r6, #8
   165b8:	bne	15b44 <argp_help@@Base+0xaac>
   165bc:	tst	r6, #32
   165c0:	beq	165ec <argp_help@@Base+0x1554>
   165c4:	sub	sp, sp, #8
   165c8:	mov	r0, #0
   165cc:	mov	r2, #1
   165d0:	mov	r3, r5
   165d4:	stm	sp, {r0, r9}
   165d8:	ldr	r0, [fp, #-104]	; 0xffffff98
   165dc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   165e0:	bl	17c18 <argp_failure@@Base+0x1164>
   165e4:	add	sp, sp, #8
   165e8:	orr	r5, r0, r5
   165ec:	tst	r6, #64	; 0x40
   165f0:	beq	1665c <argp_help@@Base+0x15c4>
   165f4:	movw	r6, #63196	; 0xf6dc
   165f8:	movt	r6, #2
   165fc:	ldr	r0, [r6]
   16600:	cmp	r0, #0
   16604:	beq	1665c <argp_help@@Base+0x15c4>
   16608:	cmp	r5, #0
   1660c:	beq	16648 <argp_help@@Base+0x15b0>
   16610:	ldr	r0, [r9, #28]
   16614:	ldr	r1, [r9, #32]
   16618:	cmp	r0, r1
   1661c:	bcc	16638 <argp_help@@Base+0x15a0>
   16620:	mov	r0, r9
   16624:	mov	r1, #1
   16628:	bl	1b3cc <argp_parse@@Base+0x2814>
   1662c:	cmp	r0, #0
   16630:	beq	16648 <argp_help@@Base+0x15b0>
   16634:	ldr	r0, [r9, #28]
   16638:	add	r1, r0, #1
   1663c:	str	r1, [r9, #28]
   16640:	mov	r1, #10
   16644:	strb	r1, [r0]
   16648:	ldr	r2, [r6]
   1664c:	movw	r1, #55873	; 0xda41
   16650:	mov	r0, r9
   16654:	movt	r1, #1
   16658:	bl	1b4b8 <argp_parse@@Base+0x2900>
   1665c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16660:	bl	11454 <funlockfile@plt>
   16664:	ldr	r5, [fp, #-108]	; 0xffffff94
   16668:	cmp	r5, #0
   1666c:	beq	166b4 <argp_help@@Base+0x161c>
   16670:	ldr	r0, [r5, #12]
   16674:	cmp	r0, #0
   16678:	beq	16690 <argp_help@@Base+0x15f8>
   1667c:	ldr	r4, [r0, #24]
   16680:	bl	19f94 <argp_parse@@Base+0x13dc>
   16684:	cmp	r4, #0
   16688:	mov	r0, r4
   1668c:	bne	1667c <argp_help@@Base+0x15e4>
   16690:	ldr	r0, [r5, #4]
   16694:	cmp	r0, #0
   16698:	beq	166ac <argp_help@@Base+0x1614>
   1669c:	ldr	r0, [r5]
   166a0:	bl	19f94 <argp_parse@@Base+0x13dc>
   166a4:	ldr	r0, [r5, #8]
   166a8:	bl	19f94 <argp_parse@@Base+0x13dc>
   166ac:	mov	r0, r5
   166b0:	bl	19f94 <argp_parse@@Base+0x13dc>
   166b4:	mov	r0, r9
   166b8:	bl	1ae0c <argp_parse@@Base+0x2254>
   166bc:	sub	sp, fp, #28
   166c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166c8:	cmp	r0, #0
   166cc:	ldrne	r0, [sl, #4]
   166d0:	cmpne	r0, #0
   166d4:	bne	16710 <argp_help@@Base+0x1678>
   166d8:	ldr	r6, [fp, #-128]	; 0xffffff80
   166dc:	mov	r5, #1
   166e0:	tst	r6, #32
   166e4:	bne	165c4 <argp_help@@Base+0x152c>
   166e8:	b	165ec <argp_help@@Base+0x1554>
   166ec:	ldr	r6, [fp, #-128]	; 0xffffff80
   166f0:	movw	sl, #62944	; 0xf5e0
   166f4:	movt	sl, #2
   166f8:	tst	r6, #3
   166fc:	bne	158d8 <argp_help@@Base+0x840>
   16700:	mov	r5, #0
   16704:	tst	r6, #16
   16708:	bne	15b0c <argp_help@@Base+0xa74>
   1670c:	b	15b34 <argp_help@@Base+0xa9c>
   16710:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16714:	movw	r5, #56397	; 0xdc4d
   16718:	movt	r5, #1
   1671c:	cmp	r0, #0
   16720:	beq	16770 <argp_help@@Base+0x16d8>
   16724:	ldr	r6, [r0]
   16728:	cmp	r6, #0
   1672c:	beq	16770 <argp_help@@Base+0x16d8>
   16730:	ldr	r0, [r6, #20]
   16734:	cmp	r0, #0
   16738:	beq	16770 <argp_help@@Base+0x16d8>
   1673c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16740:	mov	r0, r6
   16744:	bl	198e4 <argp_parse@@Base+0xd2c>
   16748:	ldr	r3, [r6, #20]
   1674c:	movw	r1, #56397	; 0xdc4d
   16750:	mov	r2, r0
   16754:	movw	r0, #5
   16758:	movt	r0, #512	; 0x200
   1675c:	movt	r1, #1
   16760:	blx	r3
   16764:	mov	r5, r0
   16768:	cmp	r0, #0
   1676c:	beq	166d8 <argp_help@@Base+0x1640>
   16770:	ldrb	r0, [r5]
   16774:	cmp	r0, #0
   16778:	beq	1685c <argp_help@@Base+0x17c4>
   1677c:	ldr	r0, [r9, #28]
   16780:	ldr	r1, [r9, #32]
   16784:	cmp	r0, r1
   16788:	bcc	167a8 <argp_help@@Base+0x1710>
   1678c:	mov	r0, r9
   16790:	mov	r1, #1
   16794:	bl	1b3cc <argp_parse@@Base+0x2814>
   16798:	cmp	r0, #0
   1679c:	beq	167bc <argp_help@@Base+0x1724>
   167a0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   167a4:	ldr	r0, [r0]
   167a8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   167ac:	add	r1, r0, #1
   167b0:	str	r1, [r2]
   167b4:	mov	r1, #10
   167b8:	strb	r1, [r0]
   167bc:	mov	r0, r5
   167c0:	bl	11514 <strlen@plt>
   167c4:	cmp	r0, #0
   167c8:	beq	1681c <argp_help@@Base+0x1784>
   167cc:	mov	r6, r0
   167d0:	ldr	r0, [r9, #28]
   167d4:	ldr	r1, [r9, #32]
   167d8:	add	r2, r0, r6
   167dc:	cmp	r2, r1
   167e0:	bls	16800 <argp_help@@Base+0x1768>
   167e4:	mov	r0, r9
   167e8:	mov	r1, r6
   167ec:	bl	1b3cc <argp_parse@@Base+0x2814>
   167f0:	cmp	r0, #0
   167f4:	beq	1681c <argp_help@@Base+0x1784>
   167f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   167fc:	ldr	r0, [r0]
   16800:	mov	r1, r5
   16804:	mov	r2, r6
   16808:	bl	113d0 <memcpy@plt>
   1680c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16810:	ldr	r0, [r1]
   16814:	add	r0, r0, r6
   16818:	str	r0, [r1]
   1681c:	ldr	r0, [r9, #28]
   16820:	ldr	r1, [r9, #32]
   16824:	cmp	r0, r1
   16828:	bcc	16848 <argp_help@@Base+0x17b0>
   1682c:	mov	r0, r9
   16830:	mov	r1, #1
   16834:	bl	1b3cc <argp_parse@@Base+0x2814>
   16838:	cmp	r0, #0
   1683c:	beq	1685c <argp_help@@Base+0x17c4>
   16840:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16844:	ldr	r0, [r0]
   16848:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1684c:	add	r1, r0, #1
   16850:	str	r1, [r2]
   16854:	mov	r1, #10
   16858:	strb	r1, [r0]
   1685c:	movw	r0, #56397	; 0xdc4d
   16860:	movt	r0, #1
   16864:	cmp	r5, r0
   16868:	beq	166d8 <argp_help@@Base+0x1640>
   1686c:	mov	r0, r5
   16870:	bl	19f94 <argp_parse@@Base+0x13dc>
   16874:	ldr	r6, [fp, #-128]	; 0xffffff80
   16878:	mov	r5, #1
   1687c:	tst	r6, #32
   16880:	bne	165c4 <argp_help@@Base+0x152c>
   16884:	b	165ec <argp_help@@Base+0x1554>
   16888:	add	r2, r0, #112	; 0x70
   1688c:	b	15690 <argp_help@@Base+0x5f8>

00016890 <argp_state_help@@Base>:
   16890:	push	{r4, r5, fp, lr}
   16894:	add	fp, sp, #8
   16898:	sub	sp, sp, #8
   1689c:	mov	r4, r2
   168a0:	mov	r2, r1
   168a4:	cmp	r0, #0
   168a8:	beq	168f4 <argp_state_help@@Base+0x64>
   168ac:	cmp	r2, #0
   168b0:	beq	1692c <argp_state_help@@Base+0x9c>
   168b4:	ldr	r1, [r0, #16]
   168b8:	mov	r5, r0
   168bc:	ands	r0, r1, #2
   168c0:	bne	1692c <argp_state_help@@Base+0x9c>
   168c4:	ldr	r3, [r5, #40]	; 0x28
   168c8:	ldr	r0, [r5]
   168cc:	and	r1, r1, #64	; 0x40
   168d0:	orr	r4, r4, r1, lsl #1
   168d4:	mov	r1, r5
   168d8:	str	r3, [sp]
   168dc:	mov	r3, r4
   168e0:	bl	150c4 <argp_help@@Base+0x2c>
   168e4:	ldrb	r0, [r5, #16]
   168e8:	tst	r0, #32
   168ec:	beq	1691c <argp_state_help@@Base+0x8c>
   168f0:	b	1692c <argp_state_help@@Base+0x9c>
   168f4:	cmp	r2, #0
   168f8:	beq	1692c <argp_state_help@@Base+0x9c>
   168fc:	movw	r0, #63008	; 0xf620
   16900:	mov	r1, #0
   16904:	mov	r3, r4
   16908:	movt	r0, #2
   1690c:	ldr	r0, [r0]
   16910:	str	r0, [sp]
   16914:	mov	r0, #0
   16918:	bl	150c4 <argp_help@@Base+0x2c>
   1691c:	tst	r4, #256	; 0x100
   16920:	bne	16934 <argp_state_help@@Base+0xa4>
   16924:	tst	r4, #512	; 0x200
   16928:	bne	16944 <argp_state_help@@Base+0xb4>
   1692c:	sub	sp, fp, #8
   16930:	pop	{r4, r5, fp, pc}
   16934:	movw	r0, #62984	; 0xf608
   16938:	movt	r0, #2
   1693c:	ldr	r0, [r0]
   16940:	bl	114f0 <exit@plt>
   16944:	mov	r0, #0
   16948:	bl	114f0 <exit@plt>

0001694c <argp_error@@Base>:
   1694c:	sub	sp, sp, #8
   16950:	push	{r4, r5, r6, sl, fp, lr}
   16954:	add	fp, sp, #16
   16958:	sub	sp, sp, #8
   1695c:	mov	r6, r1
   16960:	mov	r4, r0
   16964:	cmp	r0, #0
   16968:	str	r2, [fp, #8]
   1696c:	str	r3, [fp, #12]
   16970:	beq	169a0 <argp_error@@Base+0x54>
   16974:	ldrb	r0, [r4, #16]
   16978:	tst	r0, #2
   1697c:	bne	16990 <argp_error@@Base+0x44>
   16980:	add	r0, r4, #44	; 0x2c
   16984:	ldr	r5, [r0]
   16988:	cmp	r5, #0
   1698c:	bne	169b4 <argp_error@@Base+0x68>
   16990:	sub	sp, fp, #16
   16994:	pop	{r4, r5, r6, sl, fp, lr}
   16998:	add	sp, sp, #8
   1699c:	bx	lr
   169a0:	movw	r0, #63016	; 0xf628
   169a4:	movt	r0, #2
   169a8:	ldr	r5, [r0]
   169ac:	cmp	r5, #0
   169b0:	beq	16990 <argp_error@@Base+0x44>
   169b4:	mov	r0, r5
   169b8:	bl	11610 <flockfile@plt>
   169bc:	add	r0, fp, #8
   169c0:	cmp	r4, #0
   169c4:	mov	r1, r5
   169c8:	str	r0, [sp, #4]
   169cc:	movw	r0, #63008	; 0xf620
   169d0:	movt	r0, #2
   169d4:	addne	r0, r4, #40	; 0x28
   169d8:	ldr	r0, [r0]
   169dc:	bl	11334 <fputs_unlocked@plt>
   169e0:	ldr	r0, [r5, #20]
   169e4:	ldr	r1, [r5, #24]
   169e8:	cmp	r0, r1
   169ec:	bcs	16a78 <argp_error@@Base+0x12c>
   169f0:	add	r1, r0, #1
   169f4:	str	r1, [r5, #20]
   169f8:	mov	r1, #58	; 0x3a
   169fc:	strb	r1, [r0]
   16a00:	ldr	r0, [r5, #20]
   16a04:	ldr	r1, [r5, #24]
   16a08:	cmp	r0, r1
   16a0c:	bcs	16a94 <argp_error@@Base+0x148>
   16a10:	add	r1, r0, #1
   16a14:	str	r1, [r5, #20]
   16a18:	mov	r1, #32
   16a1c:	strb	r1, [r0]
   16a20:	ldr	r2, [sp, #4]
   16a24:	mov	r0, r5
   16a28:	mov	r1, r6
   16a2c:	bl	115d4 <vfprintf@plt>
   16a30:	ldr	r0, [r5, #20]
   16a34:	ldr	r1, [r5, #24]
   16a38:	cmp	r0, r1
   16a3c:	bcs	16aa4 <argp_error@@Base+0x158>
   16a40:	add	r1, r0, #1
   16a44:	str	r1, [r5, #20]
   16a48:	mov	r1, #10
   16a4c:	strb	r1, [r0]
   16a50:	mov	r0, r4
   16a54:	mov	r1, r5
   16a58:	mov	r2, #260	; 0x104
   16a5c:	bl	16890 <argp_state_help@@Base>
   16a60:	mov	r0, r5
   16a64:	bl	11454 <funlockfile@plt>
   16a68:	sub	sp, fp, #16
   16a6c:	pop	{r4, r5, r6, sl, fp, lr}
   16a70:	add	sp, sp, #8
   16a74:	bx	lr
   16a78:	mov	r0, r5
   16a7c:	mov	r1, #58	; 0x3a
   16a80:	bl	115a4 <__overflow@plt>
   16a84:	ldr	r0, [r5, #20]
   16a88:	ldr	r1, [r5, #24]
   16a8c:	cmp	r0, r1
   16a90:	bcc	16a10 <argp_error@@Base+0xc4>
   16a94:	mov	r0, r5
   16a98:	mov	r1, #32
   16a9c:	bl	115a4 <__overflow@plt>
   16aa0:	b	16a20 <argp_error@@Base+0xd4>
   16aa4:	mov	r0, r5
   16aa8:	mov	r1, #10
   16aac:	bl	115a4 <__overflow@plt>
   16ab0:	b	16a50 <argp_error@@Base+0x104>

00016ab4 <argp_failure@@Base>:
   16ab4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ab8:	add	fp, sp, #24
   16abc:	sub	sp, sp, #200	; 0xc8
   16ac0:	mov	r4, r3
   16ac4:	mov	r7, r2
   16ac8:	mov	r8, r1
   16acc:	mov	r5, r0
   16ad0:	cmp	r0, #0
   16ad4:	beq	16af8 <argp_failure@@Base+0x44>
   16ad8:	ldrb	r0, [r5, #16]
   16adc:	tst	r0, #2
   16ae0:	bne	16c78 <argp_failure@@Base+0x1c4>
   16ae4:	add	r0, r5, #44	; 0x2c
   16ae8:	ldr	r6, [r0]
   16aec:	cmp	r6, #0
   16af0:	bne	16b0c <argp_failure@@Base+0x58>
   16af4:	b	16c78 <argp_failure@@Base+0x1c4>
   16af8:	movw	r0, #63016	; 0xf628
   16afc:	movt	r0, #2
   16b00:	ldr	r6, [r0]
   16b04:	cmp	r6, #0
   16b08:	beq	16c78 <argp_failure@@Base+0x1c4>
   16b0c:	mov	r0, r6
   16b10:	bl	11610 <flockfile@plt>
   16b14:	movw	r0, #63008	; 0xf620
   16b18:	cmp	r5, #0
   16b1c:	mov	r1, r6
   16b20:	movt	r0, #2
   16b24:	addne	r0, r5, #40	; 0x28
   16b28:	ldr	r0, [r0]
   16b2c:	bl	11334 <fputs_unlocked@plt>
   16b30:	cmp	r4, #0
   16b34:	beq	16b90 <argp_failure@@Base+0xdc>
   16b38:	add	r0, fp, #8
   16b3c:	str	r0, [sp]
   16b40:	ldr	r0, [r6, #20]
   16b44:	ldr	r1, [r6, #24]
   16b48:	cmp	r0, r1
   16b4c:	bcs	16c80 <argp_failure@@Base+0x1cc>
   16b50:	add	r1, r0, #1
   16b54:	str	r1, [r6, #20]
   16b58:	mov	r1, #58	; 0x3a
   16b5c:	strb	r1, [r0]
   16b60:	ldr	r0, [r6, #20]
   16b64:	ldr	r1, [r6, #24]
   16b68:	cmp	r0, r1
   16b6c:	bcs	16c9c <argp_failure@@Base+0x1e8>
   16b70:	add	r1, r0, #1
   16b74:	str	r1, [r6, #20]
   16b78:	mov	r1, #32
   16b7c:	strb	r1, [r0]
   16b80:	ldr	r2, [sp]
   16b84:	mov	r0, r6
   16b88:	mov	r1, r4
   16b8c:	bl	115d4 <vfprintf@plt>
   16b90:	cmp	r7, #0
   16b94:	beq	16c14 <argp_failure@@Base+0x160>
   16b98:	ldr	r0, [r6, #20]
   16b9c:	ldr	r1, [r6, #24]
   16ba0:	cmp	r0, r1
   16ba4:	bcs	16cac <argp_failure@@Base+0x1f8>
   16ba8:	add	r1, r0, #1
   16bac:	str	r1, [r6, #20]
   16bb0:	mov	r1, #58	; 0x3a
   16bb4:	strb	r1, [r0]
   16bb8:	ldr	r0, [r6, #20]
   16bbc:	ldr	r1, [r6, #24]
   16bc0:	cmp	r0, r1
   16bc4:	bcs	16cc8 <argp_failure@@Base+0x214>
   16bc8:	add	r1, r0, #1
   16bcc:	str	r1, [r6, #20]
   16bd0:	mov	r1, #32
   16bd4:	strb	r1, [r0]
   16bd8:	mov	r1, sp
   16bdc:	mov	r0, r7
   16be0:	mov	r2, #200	; 0xc8
   16be4:	bl	11550 <strerror_r@plt>
   16be8:	cmp	r0, #0
   16bec:	bne	16c0c <argp_failure@@Base+0x158>
   16bf0:	mov	r0, r7
   16bf4:	bl	114b4 <strerror@plt>
   16bf8:	mov	r1, r0
   16bfc:	movw	r0, #55772	; 0xd9dc
   16c00:	cmp	r1, #0
   16c04:	movt	r0, #1
   16c08:	movne	r0, r1
   16c0c:	mov	r1, r6
   16c10:	bl	11334 <fputs_unlocked@plt>
   16c14:	ldr	r0, [r6, #20]
   16c18:	ldr	r1, [r6, #24]
   16c1c:	cmp	r0, r1
   16c20:	bcs	16c5c <argp_failure@@Base+0x1a8>
   16c24:	add	r1, r0, #1
   16c28:	str	r1, [r6, #20]
   16c2c:	mov	r1, #10
   16c30:	strb	r1, [r0]
   16c34:	mov	r0, r6
   16c38:	bl	11454 <funlockfile@plt>
   16c3c:	cmp	r8, #0
   16c40:	beq	16c78 <argp_failure@@Base+0x1c4>
   16c44:	cmp	r5, #0
   16c48:	ldrbne	r0, [r5, #16]
   16c4c:	tstne	r0, #32
   16c50:	bne	16c78 <argp_failure@@Base+0x1c4>
   16c54:	mov	r0, r8
   16c58:	bl	114f0 <exit@plt>
   16c5c:	mov	r0, r6
   16c60:	mov	r1, #10
   16c64:	bl	115a4 <__overflow@plt>
   16c68:	mov	r0, r6
   16c6c:	bl	11454 <funlockfile@plt>
   16c70:	cmp	r8, #0
   16c74:	bne	16c44 <argp_failure@@Base+0x190>
   16c78:	sub	sp, fp, #24
   16c7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c80:	mov	r0, r6
   16c84:	mov	r1, #58	; 0x3a
   16c88:	bl	115a4 <__overflow@plt>
   16c8c:	ldr	r0, [r6, #20]
   16c90:	ldr	r1, [r6, #24]
   16c94:	cmp	r0, r1
   16c98:	bcc	16b70 <argp_failure@@Base+0xbc>
   16c9c:	mov	r0, r6
   16ca0:	mov	r1, #32
   16ca4:	bl	115a4 <__overflow@plt>
   16ca8:	b	16b80 <argp_failure@@Base+0xcc>
   16cac:	mov	r0, r6
   16cb0:	mov	r1, #58	; 0x3a
   16cb4:	bl	115a4 <__overflow@plt>
   16cb8:	ldr	r0, [r6, #20]
   16cbc:	ldr	r1, [r6, #24]
   16cc0:	cmp	r0, r1
   16cc4:	bcc	16bc8 <argp_failure@@Base+0x114>
   16cc8:	mov	r0, r6
   16ccc:	mov	r1, #32
   16cd0:	bl	115a4 <__overflow@plt>
   16cd4:	b	16bd8 <argp_failure@@Base+0x124>
   16cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cdc:	add	fp, sp, #28
   16ce0:	sub	sp, sp, #52	; 0x34
   16ce4:	ldr	r4, [r0]
   16ce8:	ldr	r7, [r0, #16]
   16cec:	mov	r8, r0
   16cf0:	mov	r0, #16
   16cf4:	mov	sl, r1
   16cf8:	bl	1ad00 <argp_parse@@Base+0x2148>
   16cfc:	cmp	r0, #0
   16d00:	beq	173f4 <argp_failure@@Base+0x940>
   16d04:	mov	r9, r0
   16d08:	mov	r0, #0
   16d0c:	cmp	r4, #0
   16d10:	str	r8, [sp, #40]	; 0x28
   16d14:	mov	r1, r9
   16d18:	str	r9, [fp, #-32]	; 0xffffffe0
   16d1c:	str	r0, [r1, #12]!
   16d20:	str	r1, [sp, #28]
   16d24:	str	r0, [r1, #-8]
   16d28:	beq	16f88 <argp_failure@@Base+0x4d4>
   16d2c:	ldrb	r0, [r4, #12]
   16d30:	str	r7, [sp, #12]
   16d34:	tst	r0, #4
   16d38:	bne	17414 <argp_failure@@Base+0x960>
   16d3c:	add	r5, r4, #12
   16d40:	mov	r6, #0
   16d44:	mov	r8, #0
   16d48:	ldr	r7, [r5, #-8]
   16d4c:	cmp	r7, #0
   16d50:	bne	16d8c <argp_failure@@Base+0x2d8>
   16d54:	b	16d68 <argp_failure@@Base+0x2b4>
   16d58:	add	r5, r5, #24
   16d5c:	ldr	r7, [r5, #-8]
   16d60:	cmp	r7, #0
   16d64:	bne	16d8c <argp_failure@@Base+0x2d8>
   16d68:	ldr	r0, [r5, #-12]
   16d6c:	cmp	r0, #0
   16d70:	bne	16d8c <argp_failure@@Base+0x2d8>
   16d74:	ldr	r0, [r5, #4]
   16d78:	cmp	r0, #0
   16d7c:	bne	16d8c <argp_failure@@Base+0x2d8>
   16d80:	ldr	r0, [r5, #8]
   16d84:	cmp	r0, #0
   16d88:	beq	16dcc <argp_failure@@Base+0x318>
   16d8c:	ldr	r0, [r5]
   16d90:	sub	r1, r7, #1
   16d94:	tst	r0, #4
   16d98:	addeq	r6, r6, #1
   16d9c:	streq	r6, [r9, #4]
   16da0:	cmp	r1, #254	; 0xfe
   16da4:	bhi	16d58 <argp_failure@@Base+0x2a4>
   16da8:	ands	r0, r0, #8
   16dac:	bne	16d58 <argp_failure@@Base+0x2a4>
   16db0:	bl	114d8 <__ctype_b_loc@plt>
   16db4:	ldr	r0, [r0]
   16db8:	add	r0, r0, r7, lsl #1
   16dbc:	ldrb	r0, [r0, #1]
   16dc0:	tst	r0, #64	; 0x40
   16dc4:	addne	r8, r8, #1
   16dc8:	b	16d58 <argp_failure@@Base+0x2a4>
   16dcc:	rsb	r0, r6, r6, lsl #3
   16dd0:	lsl	r0, r0, #2
   16dd4:	bl	1ad00 <argp_parse@@Base+0x2148>
   16dd8:	mov	r5, r0
   16ddc:	str	r0, [r9]
   16de0:	add	r0, r8, #1
   16de4:	bl	1ad00 <argp_parse@@Base+0x2148>
   16de8:	cmp	r5, #0
   16dec:	str	r0, [r9, #8]
   16df0:	movne	r7, r0
   16df4:	cmpne	r0, #0
   16df8:	bne	16e1c <argp_failure@@Base+0x368>
   16dfc:	movw	r0, #56177	; 0xdb71
   16e00:	movw	r1, #56085	; 0xdb15
   16e04:	movw	r3, #56097	; 0xdb21
   16e08:	movw	r2, #474	; 0x1da
   16e0c:	movt	r0, #1
   16e10:	movt	r1, #1
   16e14:	movt	r3, #1
   16e18:	bl	1167c <__assert_fail@plt>
   16e1c:	movw	r0, #37450	; 0x924a
   16e20:	movt	r0, #2340	; 0x924
   16e24:	cmp	r6, r0
   16e28:	bcs	17434 <argp_failure@@Base+0x980>
   16e2c:	mov	r8, #0
   16e30:	mov	r0, #0
   16e34:	ldr	r1, [r4, #4]
   16e38:	cmp	r1, #0
   16e3c:	bne	16e80 <argp_failure@@Base+0x3cc>
   16e40:	b	16e5c <argp_failure@@Base+0x3a8>
   16e44:	mov	r4, r0
   16e48:	add	r5, r5, #28
   16e4c:	mov	r0, r9
   16e50:	ldr	r1, [r4, #4]
   16e54:	cmp	r1, #0
   16e58:	bne	16e80 <argp_failure@@Base+0x3cc>
   16e5c:	ldr	r2, [r4]
   16e60:	cmp	r2, #0
   16e64:	bne	16e80 <argp_failure@@Base+0x3cc>
   16e68:	ldr	r2, [r4, #16]
   16e6c:	cmp	r2, #0
   16e70:	bne	16e80 <argp_failure@@Base+0x3cc>
   16e74:	ldr	r2, [r4, #20]
   16e78:	cmp	r2, #0
   16e7c:	beq	16f74 <argp_failure@@Base+0x4c0>
   16e80:	stm	r5, {r4, r8}
   16e84:	str	r7, [r5, #8]
   16e88:	ldr	r9, [r4, #20]
   16e8c:	cmp	r9, #0
   16e90:	bne	16eac <argp_failure@@Base+0x3f8>
   16e94:	ldr	r2, [r4]
   16e98:	cmp	r2, #0
   16e9c:	bne	16ea8 <argp_failure@@Base+0x3f4>
   16ea0:	cmp	r1, #0
   16ea4:	addeq	r0, r0, #1
   16ea8:	mov	r9, r0
   16eac:	ldr	r0, [sp, #40]	; 0x28
   16eb0:	mov	r1, #0
   16eb4:	str	r9, [r5, #12]
   16eb8:	str	sl, [r5, #16]
   16ebc:	str	r0, [r5, #20]
   16ec0:	add	r0, r1, #1
   16ec4:	str	r0, [r5, #4]
   16ec8:	ldrb	r0, [r4, #12]
   16ecc:	tst	r0, #8
   16ed0:	bne	16f28 <argp_failure@@Base+0x474>
   16ed4:	ldr	r6, [r4, #4]
   16ed8:	sub	r0, r6, #1
   16edc:	cmp	r0, #254	; 0xfe
   16ee0:	bhi	16f28 <argp_failure@@Base+0x474>
   16ee4:	bl	114d8 <__ctype_b_loc@plt>
   16ee8:	ldr	r0, [r0]
   16eec:	add	r0, r0, r6, lsl #1
   16ef0:	ldrb	r0, [r0, #1]
   16ef4:	tst	r0, #64	; 0x40
   16ef8:	beq	16f28 <argp_failure@@Base+0x474>
   16efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f00:	ldr	r0, [r0, #8]
   16f04:	cmp	r0, r7
   16f08:	bcs	16f24 <argp_failure@@Base+0x470>
   16f0c:	ldrb	r1, [r0], #1
   16f10:	uxtb	r2, r6
   16f14:	cmp	r1, r2
   16f18:	beq	16f28 <argp_failure@@Base+0x474>
   16f1c:	cmp	r7, r0
   16f20:	bne	16f0c <argp_failure@@Base+0x458>
   16f24:	strb	r6, [r7], #1
   16f28:	ldr	r1, [r4, #28]
   16f2c:	add	r0, r4, #24
   16f30:	cmp	r1, #0
   16f34:	bne	16f5c <argp_failure@@Base+0x4a8>
   16f38:	ldr	r1, [r0]
   16f3c:	cmp	r1, #0
   16f40:	bne	16f5c <argp_failure@@Base+0x4a8>
   16f44:	ldr	r1, [r4, #40]	; 0x28
   16f48:	cmp	r1, #0
   16f4c:	bne	16f5c <argp_failure@@Base+0x4a8>
   16f50:	ldr	r1, [r4, #44]	; 0x2c
   16f54:	cmp	r1, #0
   16f58:	beq	16e44 <argp_failure@@Base+0x390>
   16f5c:	ldrb	r1, [r4, #36]	; 0x24
   16f60:	tst	r1, #4
   16f64:	beq	16e44 <argp_failure@@Base+0x390>
   16f68:	ldr	r1, [r5, #4]
   16f6c:	mov	r4, r0
   16f70:	b	16ec0 <argp_failure@@Base+0x40c>
   16f74:	mov	r0, #0
   16f78:	ldr	r8, [sp, #40]	; 0x28
   16f7c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   16f80:	strb	r0, [r7]
   16f84:	ldr	r7, [sp, #12]
   16f88:	cmp	r7, #0
   16f8c:	beq	173c8 <argp_failure@@Base+0x914>
   16f90:	ldr	r0, [r7]
   16f94:	cmp	r0, #0
   16f98:	beq	173c8 <argp_failure@@Base+0x914>
   16f9c:	str	sl, [sp, #4]
   16fa0:	ldr	r4, [r7, #12]
   16fa4:	cmp	r4, #0
   16fa8:	bne	16fe8 <argp_failure@@Base+0x534>
   16fac:	b	16ff0 <argp_failure@@Base+0x53c>
   16fb0:	ldr	r1, [r6]
   16fb4:	ldr	r2, [r6, #8]
   16fb8:	str	r1, [r9]
   16fbc:	stmib	r9, {r0, r2}
   16fc0:	mov	r0, #0
   16fc4:	str	r0, [r6, #4]
   16fc8:	mov	r0, r6
   16fcc:	bl	19f94 <argp_parse@@Base+0x13dc>
   16fd0:	ldr	r0, [r7, #16]!
   16fd4:	cmp	r0, #0
   16fd8:	beq	173c8 <argp_failure@@Base+0x914>
   16fdc:	ldr	r4, [r7, #12]
   16fe0:	cmp	r4, #0
   16fe4:	beq	16ff0 <argp_failure@@Base+0x53c>
   16fe8:	ldr	r5, [r7, #8]
   16fec:	b	17000 <argp_failure@@Base+0x54c>
   16ff0:	ldr	r5, [r7, #8]
   16ff4:	mov	r1, sl
   16ff8:	cmp	r5, #0
   16ffc:	beq	17058 <argp_failure@@Base+0x5a4>
   17000:	ldr	r6, [r8, #16]
   17004:	mov	r0, #28
   17008:	bl	1ad00 <argp_parse@@Base+0x2148>
   1700c:	mov	r1, r0
   17010:	cmp	r0, #0
   17014:	beq	17058 <argp_failure@@Base+0x5a4>
   17018:	sub	r0, r7, r6
   1701c:	cmp	sl, #0
   17020:	str	r5, [r1]
   17024:	asr	r0, r0, #4
   17028:	stmib	r1, {r0, r4, sl}
   1702c:	str	r8, [r1, #16]
   17030:	beq	17040 <argp_failure@@Base+0x58c>
   17034:	ldr	r0, [sl, #20]
   17038:	add	r0, r0, #1
   1703c:	b	17044 <argp_failure@@Base+0x590>
   17040:	mov	r0, #0
   17044:	ldr	r3, [sp, #28]
   17048:	str	r0, [r1, #20]
   1704c:	ldr	r2, [r3]
   17050:	str	r1, [r3]
   17054:	str	r2, [r1, #24]
   17058:	ldr	r0, [r7]
   1705c:	bl	16cd8 <argp_failure@@Base+0x224>
   17060:	ldr	r1, [sp, #28]
   17064:	mov	r6, r0
   17068:	ldr	r2, [r1]
   1706c:	mov	r0, r1
   17070:	add	r1, r2, #24
   17074:	cmp	r2, #0
   17078:	bne	17068 <argp_failure@@Base+0x5b4>
   1707c:	ldr	r1, [r6, #12]
   17080:	str	r1, [r0]
   17084:	mov	r0, #0
   17088:	str	r0, [r6, #12]
   1708c:	ldr	r0, [r6, #4]
   17090:	cmp	r0, #0
   17094:	beq	16fc8 <argp_failure@@Base+0x514>
   17098:	ldr	r1, [r9, #4]
   1709c:	cmp	r1, #0
   170a0:	beq	16fb0 <argp_failure@@Base+0x4fc>
   170a4:	add	r5, r1, r0
   170a8:	str	r1, [fp, #-36]	; 0xffffffdc
   170ac:	rsb	r0, r5, r5, lsl #3
   170b0:	lsl	r0, r0, #2
   170b4:	bl	1ad00 <argp_parse@@Base+0x2148>
   170b8:	ldr	r4, [r9, #8]
   170bc:	str	r0, [sp, #24]
   170c0:	mov	r0, r4
   170c4:	bl	11514 <strlen@plt>
   170c8:	mov	r8, r0
   170cc:	ldr	r0, [r6, #8]
   170d0:	bl	11514 <strlen@plt>
   170d4:	add	r0, r8, r0
   170d8:	str	r8, [sp, #16]
   170dc:	ldr	r8, [sp, #24]
   170e0:	add	r0, r0, #1
   170e4:	bl	1ad00 <argp_parse@@Base+0x2148>
   170e8:	cmp	r8, #0
   170ec:	cmpne	r0, #0
   170f0:	beq	173d4 <argp_failure@@Base+0x920>
   170f4:	str	r0, [sp, #36]	; 0x24
   170f8:	movw	r0, #37450	; 0x924a
   170fc:	str	r6, [sp, #20]
   17100:	str	r7, [sp, #12]
   17104:	str	r5, [sp, #8]
   17108:	movt	r0, #2340	; 0x924
   1710c:	cmp	r5, r0
   17110:	bcs	17454 <argp_failure@@Base+0x9a0>
   17114:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17118:	ldr	r1, [r9]
   1711c:	mov	r0, r8
   17120:	rsb	r6, r5, r5, lsl #3
   17124:	lsl	r2, r6, #2
   17128:	bl	113d0 <memcpy@plt>
   1712c:	add	r0, r8, r6, lsl #2
   17130:	ldr	r6, [sp, #20]
   17134:	ldm	r6, {r1, r2}
   17138:	rsb	r2, r2, r2, lsl #3
   1713c:	lsl	r2, r2, #2
   17140:	bl	113d0 <memcpy@plt>
   17144:	ldr	r0, [sp, #36]	; 0x24
   17148:	ldr	r2, [sp, #16]
   1714c:	mov	r1, r4
   17150:	bl	113d0 <memcpy@plt>
   17154:	tst	r5, #1
   17158:	mov	r0, r5
   1715c:	beq	17180 <argp_failure@@Base+0x6cc>
   17160:	ldr	r1, [sp, #24]
   17164:	ldr	r2, [sp, #36]	; 0x24
   17168:	ldr	r0, [r1, #8]
   1716c:	add	r8, r1, #28
   17170:	sub	r0, r0, r4
   17174:	add	r0, r2, r0
   17178:	str	r0, [r1, #8]
   1717c:	sub	r0, r5, #1
   17180:	ldr	r3, [sp, #36]	; 0x24
   17184:	cmp	r5, #1
   17188:	beq	171b8 <argp_failure@@Base+0x704>
   1718c:	ldr	r1, [r8, #8]
   17190:	ldr	r2, [r8, #36]	; 0x24
   17194:	subs	r0, r0, #2
   17198:	sub	r1, r1, r4
   1719c:	add	r1, r3, r1
   171a0:	str	r1, [r8, #8]
   171a4:	sub	r1, r2, r4
   171a8:	add	r1, r3, r1
   171ac:	str	r1, [r8, #36]	; 0x24
   171b0:	add	r8, r8, #56	; 0x38
   171b4:	bne	1718c <argp_failure@@Base+0x6d8>
   171b8:	ldr	r4, [sp, #16]
   171bc:	add	r0, r3, r4
   171c0:	str	r0, [fp, #-36]	; 0xffffffdc
   171c4:	ldr	r0, [r6, #4]
   171c8:	cmp	r0, #0
   171cc:	beq	17344 <argp_failure@@Base+0x890>
   171d0:	ldr	sl, [r6, #8]
   171d4:	cmp	r4, #0
   171d8:	str	r0, [sp, #32]
   171dc:	bgt	171fc <argp_failure@@Base+0x748>
   171e0:	b	172b4 <argp_failure@@Base+0x800>
   171e4:	ldr	r0, [sp, #32]
   171e8:	ldr	r9, [fp, #-32]	; 0xffffffe0
   171ec:	add	r8, r8, #28
   171f0:	subs	r0, r0, #1
   171f4:	str	r0, [sp, #32]
   171f8:	beq	17344 <argp_failure@@Base+0x890>
   171fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17200:	str	r0, [r8, #8]
   17204:	ldr	r6, [r8, #4]
   17208:	cmp	r6, #0
   1720c:	beq	171e4 <argp_failure@@Base+0x730>
   17210:	ldr	r9, [r8]
   17214:	ldrb	r0, [r9, #12]
   17218:	tst	r0, #8
   1721c:	bne	17234 <argp_failure@@Base+0x780>
   17220:	b	1724c <argp_failure@@Base+0x798>
   17224:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17228:	strb	r7, [r0], #1
   1722c:	str	r0, [fp, #-36]	; 0xffffffdc
   17230:	add	sl, sl, #1
   17234:	subs	r6, r6, #1
   17238:	add	r9, r9, #24
   1723c:	beq	171e4 <argp_failure@@Base+0x730>
   17240:	ldrb	r0, [r9, #12]
   17244:	tst	r0, #8
   17248:	bne	17234 <argp_failure@@Base+0x780>
   1724c:	ldr	r5, [r9, #4]
   17250:	sub	r0, r5, #1
   17254:	cmp	r0, #254	; 0xfe
   17258:	bhi	17234 <argp_failure@@Base+0x780>
   1725c:	ldrb	r7, [sl]
   17260:	bl	114d8 <__ctype_b_loc@plt>
   17264:	cmp	r5, r7
   17268:	bne	17234 <argp_failure@@Base+0x780>
   1726c:	ldr	r0, [r0]
   17270:	ldr	r1, [sp, #36]	; 0x24
   17274:	add	r0, r0, r5, lsl #1
   17278:	ldrh	r0, [r0]
   1727c:	ands	r0, r0, #16384	; 0x4000
   17280:	mov	r0, r4
   17284:	beq	17234 <argp_failure@@Base+0x780>
   17288:	ldrb	r2, [r1], #1
   1728c:	cmp	r2, r7
   17290:	beq	17230 <argp_failure@@Base+0x77c>
   17294:	subs	r0, r0, #1
   17298:	bne	17288 <argp_failure@@Base+0x7d4>
   1729c:	b	17224 <argp_failure@@Base+0x770>
   172a0:	ldr	r0, [sp, #32]
   172a4:	add	r8, r8, #28
   172a8:	subs	r0, r0, #1
   172ac:	str	r0, [sp, #32]
   172b0:	beq	17344 <argp_failure@@Base+0x890>
   172b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   172b8:	str	r0, [r8, #8]
   172bc:	ldr	r6, [r8, #4]
   172c0:	cmp	r6, #0
   172c4:	beq	172a0 <argp_failure@@Base+0x7ec>
   172c8:	ldr	r0, [r8]
   172cc:	add	r7, r0, #12
   172d0:	ldrb	r0, [r7]
   172d4:	tst	r0, #8
   172d8:	beq	172f4 <argp_failure@@Base+0x840>
   172dc:	add	r7, r7, #24
   172e0:	subs	r6, r6, #1
   172e4:	beq	172a0 <argp_failure@@Base+0x7ec>
   172e8:	ldrb	r0, [r7]
   172ec:	tst	r0, #8
   172f0:	bne	172dc <argp_failure@@Base+0x828>
   172f4:	ldr	r4, [r7, #-8]
   172f8:	sub	r0, r4, #1
   172fc:	cmp	r0, #254	; 0xfe
   17300:	bhi	172dc <argp_failure@@Base+0x828>
   17304:	ldrb	r5, [sl]
   17308:	bl	114d8 <__ctype_b_loc@plt>
   1730c:	cmp	r4, r5
   17310:	bne	172dc <argp_failure@@Base+0x828>
   17314:	ldr	r0, [r0]
   17318:	add	r0, r0, r4, lsl #1
   1731c:	ldrh	r0, [r0]
   17320:	ands	r0, r0, #16384	; 0x4000
   17324:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   17328:	addne	sl, sl, #1
   1732c:	strbne	r5, [r0], #1
   17330:	strne	r0, [fp, #-36]	; 0xffffffdc
   17334:	add	r7, r7, #24
   17338:	subs	r6, r6, #1
   1733c:	bne	172e8 <argp_failure@@Base+0x834>
   17340:	b	172a0 <argp_failure@@Base+0x7ec>
   17344:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17348:	mov	r0, #0
   1734c:	strb	r0, [r1]
   17350:	ldr	r0, [r9]
   17354:	bl	19f94 <argp_parse@@Base+0x13dc>
   17358:	ldr	r0, [r9, #8]
   1735c:	bl	19f94 <argp_parse@@Base+0x13dc>
   17360:	ldr	r0, [sp, #24]
   17364:	ldr	r6, [sp, #20]
   17368:	str	r0, [r9]
   1736c:	ldr	r0, [sp, #8]
   17370:	str	r0, [r9, #4]
   17374:	ldr	r0, [sp, #36]	; 0x24
   17378:	str	r0, [r9, #8]
   1737c:	ldr	r0, [r6, #12]
   17380:	cmp	r0, #0
   17384:	beq	1739c <argp_failure@@Base+0x8e8>
   17388:	ldr	r4, [r0, #24]
   1738c:	bl	19f94 <argp_parse@@Base+0x13dc>
   17390:	cmp	r4, #0
   17394:	mov	r0, r4
   17398:	bne	17388 <argp_failure@@Base+0x8d4>
   1739c:	ldr	r0, [r6, #4]
   173a0:	ldr	sl, [sp, #4]
   173a4:	ldr	r8, [sp, #40]	; 0x28
   173a8:	ldr	r7, [sp, #12]
   173ac:	cmp	r0, #0
   173b0:	beq	16fc8 <argp_failure@@Base+0x514>
   173b4:	ldr	r0, [r6]
   173b8:	bl	19f94 <argp_parse@@Base+0x13dc>
   173bc:	ldr	r0, [r6, #8]
   173c0:	bl	19f94 <argp_parse@@Base+0x13dc>
   173c4:	b	16fc8 <argp_failure@@Base+0x514>
   173c8:	mov	r0, r9
   173cc:	sub	sp, fp, #28
   173d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173d4:	movw	r0, #56269	; 0xdbcd
   173d8:	movw	r1, #56085	; 0xdb15
   173dc:	movw	r3, #56294	; 0xdbe6
   173e0:	movw	r2, #970	; 0x3ca
   173e4:	movt	r0, #1
   173e8:	movt	r1, #1
   173ec:	movt	r3, #1
   173f0:	bl	1167c <__assert_fail@plt>
   173f4:	movw	r0, #56081	; 0xdb11
   173f8:	movw	r1, #56085	; 0xdb15
   173fc:	movw	r3, #56097	; 0xdb21
   17400:	movw	r2, #450	; 0x1c2
   17404:	movt	r0, #1
   17408:	movt	r1, #1
   1740c:	movt	r3, #1
   17410:	bl	1167c <__assert_fail@plt>
   17414:	movw	r0, #56161	; 0xdb61
   17418:	movw	r1, #56085	; 0xdb15
   1741c:	movw	r3, #56097	; 0xdb21
   17420:	mov	r2, #460	; 0x1cc
   17424:	movt	r0, #1
   17428:	movt	r1, #1
   1742c:	movt	r3, #1
   17430:	bl	1167c <__assert_fail@plt>
   17434:	movw	r0, #56212	; 0xdb94
   17438:	movw	r1, #56085	; 0xdb15
   1743c:	movw	r3, #56097	; 0xdb21
   17440:	mov	r2, #476	; 0x1dc
   17444:	movt	r0, #1
   17448:	movt	r1, #1
   1744c:	movt	r3, #1
   17450:	bl	1167c <__assert_fail@plt>
   17454:	movw	r0, #56217	; 0xdb99
   17458:	movw	r1, #56085	; 0xdb15
   1745c:	movw	r3, #56294	; 0xdbe6
   17460:	mov	r2, #972	; 0x3cc
   17464:	movt	r0, #1
   17468:	movt	r1, #1
   1746c:	movt	r3, #1
   17470:	bl	1167c <__assert_fail@plt>
   17474:	push	{r4, r5, fp, lr}
   17478:	add	fp, sp, #8
   1747c:	mov	r5, r1
   17480:	cmp	r0, #0
   17484:	beq	174d4 <argp_failure@@Base+0xa20>
   17488:	mov	r1, #10
   1748c:	bl	11520 <strchr@plt>
   17490:	cmp	r0, #0
   17494:	mov	r4, r0
   17498:	movwne	r4, #1
   1749c:	cmp	r5, #0
   174a0:	beq	174e0 <argp_failure@@Base+0xa2c>
   174a4:	ldr	r1, [r5]
   174a8:	cmp	r1, #0
   174ac:	beq	174e0 <argp_failure@@Base+0xa2c>
   174b0:	add	r5, r5, #16
   174b4:	ldr	r0, [r1, #8]
   174b8:	ldr	r1, [r1, #16]
   174bc:	bl	17474 <argp_failure@@Base+0x9c0>
   174c0:	ldr	r1, [r5], #16
   174c4:	add	r4, r0, r4
   174c8:	cmp	r1, #0
   174cc:	bne	174b4 <argp_failure@@Base+0xa00>
   174d0:	b	174e0 <argp_failure@@Base+0xa2c>
   174d4:	mov	r4, #0
   174d8:	cmp	r5, #0
   174dc:	bne	174a4 <argp_failure@@Base+0x9f0>
   174e0:	mov	r0, r4
   174e4:	pop	{r4, r5, fp, pc}
   174e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174ec:	add	fp, sp, #28
   174f0:	sub	sp, sp, #28
   174f4:	ldr	r4, [r0, #4]
   174f8:	str	r1, [fp, #-40]	; 0xffffffd8
   174fc:	cmp	r4, #0
   17500:	beq	178fc <argp_failure@@Base+0xe48>
   17504:	mov	r5, r0
   17508:	ldr	r0, [r0, #8]
   1750c:	bl	11514 <strlen@plt>
   17510:	add	r0, r0, #8
   17514:	bic	r0, r0, #7
   17518:	sub	r0, sp, r0
   1751c:	mov	sp, r0
   17520:	ldr	r7, [r5]
   17524:	str	r0, [fp, #-52]	; 0xffffffcc
   17528:	str	r0, [fp, #-48]	; 0xffffffd0
   1752c:	str	r5, [fp, #-44]	; 0xffffffd4
   17530:	ldr	r6, [r7, #4]
   17534:	str	r4, [fp, #-36]	; 0xffffffdc
   17538:	cmp	r6, #0
   1753c:	bne	17564 <argp_failure@@Base+0xab0>
   17540:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17544:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17548:	add	r7, r7, #28
   1754c:	subs	r4, r4, #1
   17550:	beq	17618 <argp_failure@@Base+0xb64>
   17554:	ldr	r6, [r7, #4]
   17558:	str	r4, [fp, #-36]	; 0xffffffdc
   1755c:	cmp	r6, #0
   17560:	beq	17540 <argp_failure@@Base+0xa8c>
   17564:	ldr	r4, [r7]
   17568:	ldr	r5, [r7, #8]
   1756c:	mov	sl, r4
   17570:	ldr	r8, [sl, #12]
   17574:	tst	r8, #8
   17578:	bne	17584 <argp_failure@@Base+0xad0>
   1757c:	b	1759c <argp_failure@@Base+0xae8>
   17580:	add	r5, r5, #1
   17584:	subs	r6, r6, #1
   17588:	add	sl, sl, #24
   1758c:	beq	17540 <argp_failure@@Base+0xa8c>
   17590:	ldr	r8, [sl, #12]
   17594:	tst	r8, #8
   17598:	bne	17584 <argp_failure@@Base+0xad0>
   1759c:	ldr	r9, [sl, #4]
   175a0:	sub	r0, r9, #1
   175a4:	cmp	r0, #254	; 0xfe
   175a8:	bhi	17584 <argp_failure@@Base+0xad0>
   175ac:	bl	114d8 <__ctype_b_loc@plt>
   175b0:	ldr	r0, [r0]
   175b4:	add	r0, r0, r9, lsl #1
   175b8:	ldrb	r0, [r0, #1]
   175bc:	tst	r0, #64	; 0x40
   175c0:	beq	17584 <argp_failure@@Base+0xad0>
   175c4:	ldrb	r0, [r5]
   175c8:	cmp	r9, r0
   175cc:	bne	17584 <argp_failure@@Base+0xad0>
   175d0:	tst	r8, #4
   175d4:	moveq	r4, sl
   175d8:	tst	r8, #2
   175dc:	bne	17580 <argp_failure@@Base+0xacc>
   175e0:	ldr	r0, [sl, #8]
   175e4:	cmp	r0, #0
   175e8:	bne	17580 <argp_failure@@Base+0xacc>
   175ec:	ldr	r0, [r4, #8]
   175f0:	cmp	r0, #0
   175f4:	bne	17580 <argp_failure@@Base+0xacc>
   175f8:	ldr	r0, [r4, #12]
   175fc:	orr	r0, r0, r8
   17600:	tst	r0, #16
   17604:	bne	17580 <argp_failure@@Base+0xacc>
   17608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1760c:	strb	r9, [r0], #1
   17610:	str	r0, [fp, #-48]	; 0xffffffd0
   17614:	b	17580 <argp_failure@@Base+0xacc>
   17618:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1761c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17620:	cmp	r1, r2
   17624:	bls	17640 <argp_failure@@Base+0xb8c>
   17628:	mov	r0, #0
   1762c:	strb	r0, [r1]
   17630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17634:	movw	r1, #56338	; 0xdc12
   17638:	movt	r1, #1
   1763c:	bl	1b4b8 <argp_parse@@Base+0x2900>
   17640:	ldr	r5, [r6, #4]
   17644:	cmp	r5, #0
   17648:	beq	178fc <argp_failure@@Base+0xe48>
   1764c:	ldr	r8, [r6]
   17650:	ldr	r9, [r8, #4]
   17654:	cmp	r9, #0
   17658:	bne	17674 <argp_failure@@Base+0xbc0>
   1765c:	subs	r5, r5, #1
   17660:	add	r8, r8, #28
   17664:	beq	17818 <argp_failure@@Base+0xd64>
   17668:	ldr	r9, [r8, #4]
   1766c:	cmp	r9, #0
   17670:	beq	1765c <argp_failure@@Base+0xba8>
   17674:	ldr	sl, [r8]
   17678:	ldr	r4, [r8, #8]
   1767c:	str	sl, [fp, #-36]	; 0xffffffdc
   17680:	ldr	r6, [sl, #12]
   17684:	tst	r6, #8
   17688:	bne	176a8 <argp_failure@@Base+0xbf4>
   1768c:	b	176c0 <argp_failure@@Base+0xc0c>
   17690:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17694:	movw	r1, #56345	; 0xdc19
   17698:	mov	r2, r7
   1769c:	movt	r1, #1
   176a0:	bl	1b4b8 <argp_parse@@Base+0x2900>
   176a4:	add	r4, r4, #1
   176a8:	subs	r9, r9, #1
   176ac:	add	sl, sl, #24
   176b0:	beq	1765c <argp_failure@@Base+0xba8>
   176b4:	ldr	r6, [sl, #12]
   176b8:	tst	r6, #8
   176bc:	bne	176a8 <argp_failure@@Base+0xbf4>
   176c0:	ldr	r7, [sl, #4]
   176c4:	sub	r0, r7, #1
   176c8:	cmp	r0, #254	; 0xfe
   176cc:	bhi	176a8 <argp_failure@@Base+0xbf4>
   176d0:	bl	114d8 <__ctype_b_loc@plt>
   176d4:	ldr	r0, [r0]
   176d8:	add	r0, r0, r7, lsl #1
   176dc:	ldrb	r0, [r0, #1]
   176e0:	tst	r0, #64	; 0x40
   176e4:	beq	176a8 <argp_failure@@Base+0xbf4>
   176e8:	ldrb	r0, [r4]
   176ec:	cmp	r7, r0
   176f0:	bne	176a8 <argp_failure@@Base+0xbf4>
   176f4:	tst	r6, #4
   176f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176fc:	moveq	r0, sl
   17700:	tst	r6, #2
   17704:	str	r0, [fp, #-36]	; 0xffffffdc
   17708:	bne	176a4 <argp_failure@@Base+0xbf0>
   1770c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17710:	ldr	r3, [sl, #8]
   17714:	ldr	r0, [r0, #12]
   17718:	cmp	r3, #0
   1771c:	orr	r0, r0, r6
   17720:	bne	1772c <argp_failure@@Base+0xc78>
   17724:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17728:	ldr	r3, [r1, #8]
   1772c:	tst	r0, #16
   17730:	bne	176a4 <argp_failure@@Base+0xbf0>
   17734:	cmp	r3, #0
   17738:	beq	176a4 <argp_failure@@Base+0xbf0>
   1773c:	tst	r0, #1
   17740:	bne	17690 <argp_failure@@Base+0xbdc>
   17744:	mov	r0, r3
   17748:	str	r3, [fp, #-48]	; 0xffffffd0
   1774c:	bl	11514 <strlen@plt>
   17750:	ldr	r7, [fp, #-40]	; 0xffffffd8
   17754:	add	r6, r0, #6
   17758:	ldr	r2, [r7, #24]
   1775c:	ldr	r0, [r7, #28]
   17760:	ldr	r1, [r7, #16]
   17764:	sub	r2, r0, r2
   17768:	cmp	r2, r1
   1776c:	bls	1777c <argp_failure@@Base+0xcc8>
   17770:	mov	r0, r7
   17774:	bl	1ae50 <argp_parse@@Base+0x2298>
   17778:	ldr	r0, [r7, #28]
   1777c:	ldr	r3, [r7, #20]
   17780:	ldr	r2, [r7, #8]
   17784:	ldr	r1, [r7, #32]
   17788:	cmp	r3, #0
   1778c:	addgt	r6, r6, r3
   17790:	cmp	r6, r2
   17794:	bcs	177cc <argp_failure@@Base+0xd18>
   17798:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1779c:	cmp	r0, r1
   177a0:	bcc	177bc <argp_failure@@Base+0xd08>
   177a4:	mov	r0, r7
   177a8:	mov	r1, #1
   177ac:	bl	1b3cc <argp_parse@@Base+0x2814>
   177b0:	cmp	r0, #0
   177b4:	beq	17800 <argp_failure@@Base+0xd4c>
   177b8:	ldr	r0, [r7, #28]
   177bc:	add	r1, r0, #1
   177c0:	str	r1, [r7, #28]
   177c4:	mov	r1, #32
   177c8:	b	177fc <argp_failure@@Base+0xd48>
   177cc:	ldr	r6, [fp, #-48]	; 0xffffffd0
   177d0:	cmp	r0, r1
   177d4:	bcc	177f0 <argp_failure@@Base+0xd3c>
   177d8:	mov	r0, r7
   177dc:	mov	r1, #1
   177e0:	bl	1b3cc <argp_parse@@Base+0x2814>
   177e4:	cmp	r0, #0
   177e8:	beq	17800 <argp_failure@@Base+0xd4c>
   177ec:	ldr	r0, [r7, #28]
   177f0:	add	r1, r0, #1
   177f4:	str	r1, [r7, #28]
   177f8:	mov	r1, #10
   177fc:	strb	r1, [r0]
   17800:	ldr	r2, [sl, #4]
   17804:	movw	r1, #56356	; 0xdc24
   17808:	mov	r0, r7
   1780c:	mov	r3, r6
   17810:	movt	r1, #1
   17814:	b	176a0 <argp_failure@@Base+0xbec>
   17818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1781c:	ldr	r4, [r0, #4]
   17820:	cmp	r4, #0
   17824:	beq	178fc <argp_failure@@Base+0xe48>
   17828:	ldr	r6, [r0]
   1782c:	movw	sl, #56389	; 0xdc45
   17830:	movw	r9, #56365	; 0xdc2d
   17834:	movt	sl, #1
   17838:	movt	r9, #1
   1783c:	ldr	r7, [r6, #4]
   17840:	cmp	r7, #0
   17844:	bne	17860 <argp_failure@@Base+0xdac>
   17848:	subs	r4, r4, #1
   1784c:	add	r6, r6, #28
   17850:	beq	178fc <argp_failure@@Base+0xe48>
   17854:	ldr	r7, [r6, #4]
   17858:	cmp	r7, #0
   1785c:	beq	17848 <argp_failure@@Base+0xd94>
   17860:	ldr	r8, [r6]
   17864:	mov	r5, r8
   17868:	ldr	r2, [r5]
   1786c:	cmp	r2, #0
   17870:	bne	1789c <argp_failure@@Base+0xde8>
   17874:	b	17884 <argp_failure@@Base+0xdd0>
   17878:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1787c:	mov	r1, sl
   17880:	bl	1b4b8 <argp_parse@@Base+0x2900>
   17884:	subs	r7, r7, #1
   17888:	add	r5, r5, #24
   1788c:	beq	17848 <argp_failure@@Base+0xd94>
   17890:	ldr	r2, [r5]
   17894:	cmp	r2, #0
   17898:	beq	17884 <argp_failure@@Base+0xdd0>
   1789c:	ldr	r0, [r5, #12]
   178a0:	tst	r0, #4
   178a4:	moveq	r8, r5
   178a8:	tst	r0, #2
   178ac:	bne	17884 <argp_failure@@Base+0xdd0>
   178b0:	ldr	r3, [r5, #8]
   178b4:	ldr	r1, [r8, #12]
   178b8:	cmp	r3, #0
   178bc:	orr	r0, r1, r0
   178c0:	ldreq	r3, [r8, #8]
   178c4:	tst	r0, #16
   178c8:	bne	17884 <argp_failure@@Base+0xdd0>
   178cc:	cmp	r3, #0
   178d0:	beq	17878 <argp_failure@@Base+0xdc4>
   178d4:	tst	r0, #1
   178d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   178dc:	movne	r1, r9
   178e0:	movweq	r1, #56378	; 0xdc3a
   178e4:	movteq	r1, #1
   178e8:	bl	1b4b8 <argp_parse@@Base+0x2900>
   178ec:	subs	r7, r7, #1
   178f0:	add	r5, r5, #24
   178f4:	bne	17890 <argp_failure@@Base+0xddc>
   178f8:	b	17848 <argp_failure@@Base+0xd94>
   178fc:	sub	sp, fp, #28
   17900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17908:	add	fp, sp, #28
   1790c:	sub	sp, sp, #28
   17910:	ldr	r5, [r0, #8]
   17914:	mov	r7, r0
   17918:	ldr	sl, [r0, #16]
   1791c:	ldr	r0, [r2]
   17920:	mov	r4, r3
   17924:	mov	r9, r2
   17928:	mov	r8, r1
   1792c:	cmp	r7, #0
   17930:	mov	r6, r5
   17934:	str	r0, [sp, #20]
   17938:	beq	17974 <argp_failure@@Base+0xec0>
   1793c:	ldr	r0, [r7, #20]
   17940:	mov	r6, r5
   17944:	cmp	r0, #0
   17948:	beq	17974 <argp_failure@@Base+0xec0>
   1794c:	mov	r0, r7
   17950:	mov	r1, r8
   17954:	bl	198e4 <argp_parse@@Base+0xd2c>
   17958:	ldr	r3, [r7, #20]
   1795c:	mov	r2, r0
   17960:	movw	r0, #6
   17964:	mov	r1, r5
   17968:	movt	r0, #512	; 0x200
   1796c:	blx	r3
   17970:	mov	r6, r0
   17974:	cmp	r6, #0
   17978:	beq	179dc <argp_failure@@Base+0xf28>
   1797c:	mov	r0, r6
   17980:	mov	r1, #10
   17984:	bl	113a0 <strchrnul@plt>
   17988:	mov	r7, r0
   1798c:	ldrb	r0, [r0]
   17990:	str	r5, [sp, #12]
   17994:	str	r6, [sp, #16]
   17998:	stmib	sp, {r8, sl}
   1799c:	cmp	r0, #0
   179a0:	beq	17a4c <argp_failure@@Base+0xf98>
   179a4:	ldr	r0, [sp, #20]
   179a8:	ldrb	r6, [r0]
   179ac:	cmp	r6, #0
   179b0:	beq	17a58 <argp_failure@@Base+0xfa4>
   179b4:	mov	r8, #0
   179b8:	add	sl, r7, #1
   179bc:	mov	r1, #10
   179c0:	mov	r0, sl
   179c4:	bl	113a0 <strchrnul@plt>
   179c8:	add	r8, r8, #1
   179cc:	mov	r7, r0
   179d0:	cmp	r8, r6
   179d4:	bcc	179b8 <argp_failure@@Base+0xf04>
   179d8:	b	17a5c <argp_failure@@Base+0xfa8>
   179dc:	mov	r0, #0
   179e0:	mov	r7, #0
   179e4:	str	r0, [sp, #24]
   179e8:	cmp	sl, #0
   179ec:	beq	17bbc <argp_failure@@Base+0x1108>
   179f0:	ldr	r0, [sl]
   179f4:	cmp	r0, #0
   179f8:	beq	17bbc <argp_failure@@Base+0x1108>
   179fc:	add	r6, sl, #16
   17a00:	ldr	r5, [fp, #8]
   17a04:	ldr	sl, [sp, #24]
   17a08:	mov	r1, r8
   17a0c:	mov	r2, r9
   17a10:	mov	r3, r4
   17a14:	str	r5, [sp]
   17a18:	bl	17904 <argp_failure@@Base+0xe50>
   17a1c:	clz	r0, r0
   17a20:	lsr	r4, r0, #5
   17a24:	ldr	r0, [r6], #16
   17a28:	cmp	r0, #0
   17a2c:	bne	17a08 <argp_failure@@Base+0xf54>
   17a30:	cmp	sl, #0
   17a34:	cmpne	r4, #0
   17a38:	bne	17bcc <argp_failure@@Base+0x1118>
   17a3c:	clz	r0, r4
   17a40:	lsr	r0, r0, #5
   17a44:	sub	sp, fp, #28
   17a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a4c:	mov	r0, #0
   17a50:	mov	sl, r6
   17a54:	b	17a6c <argp_failure@@Base+0xfb8>
   17a58:	ldr	sl, [sp, #16]
   17a5c:	ldr	r0, [r9]
   17a60:	add	r0, r0, #1
   17a64:	str	r0, [r9]
   17a68:	mov	r0, #1
   17a6c:	str	r0, [sp, #24]
   17a70:	ldr	r8, [fp, #8]
   17a74:	sub	r2, r7, sl
   17a78:	add	r6, r2, #1
   17a7c:	ldr	r3, [r8, #24]
   17a80:	ldr	r0, [r8, #28]
   17a84:	ldr	r1, [r8, #16]
   17a88:	sub	r3, r0, r3
   17a8c:	cmp	r3, r1
   17a90:	bls	17aa8 <argp_failure@@Base+0xff4>
   17a94:	mov	r0, r8
   17a98:	mov	r5, r2
   17a9c:	bl	1ae50 <argp_parse@@Base+0x2298>
   17aa0:	ldr	r0, [r8, #28]
   17aa4:	mov	r2, r5
   17aa8:	ldr	r3, [r8, #20]
   17aac:	ldr	r5, [r8, #8]
   17ab0:	ldr	r1, [r8, #32]
   17ab4:	cmp	r3, #0
   17ab8:	addgt	r6, r6, r3
   17abc:	cmp	r6, r5
   17ac0:	bcs	17b08 <argp_failure@@Base+0x1054>
   17ac4:	ldr	r8, [sp, #4]
   17ac8:	cmp	r0, r1
   17acc:	bcc	17af4 <argp_failure@@Base+0x1040>
   17ad0:	ldr	r6, [fp, #8]
   17ad4:	mov	r1, #1
   17ad8:	mov	r5, r2
   17adc:	mov	r0, r6
   17ae0:	bl	1b3cc <argp_parse@@Base+0x2814>
   17ae4:	mov	r2, r5
   17ae8:	cmp	r0, #0
   17aec:	beq	17b4c <argp_failure@@Base+0x1098>
   17af0:	ldr	r0, [r6, #28]
   17af4:	ldr	r6, [fp, #8]
   17af8:	add	r1, r0, #1
   17afc:	str	r1, [r6, #28]
   17b00:	mov	r1, #32
   17b04:	b	17b48 <argp_failure@@Base+0x1094>
   17b08:	ldr	r8, [sp, #4]
   17b0c:	cmp	r0, r1
   17b10:	bcc	17b38 <argp_failure@@Base+0x1084>
   17b14:	ldr	r6, [fp, #8]
   17b18:	mov	r1, #1
   17b1c:	mov	r5, r2
   17b20:	mov	r0, r6
   17b24:	bl	1b3cc <argp_parse@@Base+0x2814>
   17b28:	mov	r2, r5
   17b2c:	cmp	r0, #0
   17b30:	beq	17b4c <argp_failure@@Base+0x1098>
   17b34:	ldr	r0, [r6, #28]
   17b38:	ldr	r6, [fp, #8]
   17b3c:	add	r1, r0, #1
   17b40:	str	r1, [r6, #28]
   17b44:	mov	r1, #10
   17b48:	strb	r1, [r0]
   17b4c:	ldr	r0, [r6, #28]
   17b50:	ldr	r1, [r6, #32]
   17b54:	add	r3, r0, r2
   17b58:	cmp	r3, r1
   17b5c:	bls	17b84 <argp_failure@@Base+0x10d0>
   17b60:	mov	r0, r6
   17b64:	mov	r1, r2
   17b68:	mov	r5, r2
   17b6c:	bl	1b3cc <argp_parse@@Base+0x2814>
   17b70:	cmp	r0, #0
   17b74:	beq	17b9c <argp_failure@@Base+0x10e8>
   17b78:	ldr	r6, [fp, #8]
   17b7c:	mov	r2, r5
   17b80:	ldr	r0, [r6, #28]
   17b84:	mov	r1, sl
   17b88:	mov	r5, r2
   17b8c:	bl	113d0 <memcpy@plt>
   17b90:	ldr	r0, [r6, #28]
   17b94:	add	r0, r0, r5
   17b98:	str	r0, [r6, #28]
   17b9c:	ldr	r0, [sp, #16]
   17ba0:	ldr	r1, [sp, #12]
   17ba4:	cmp	r0, r1
   17ba8:	beq	17bb0 <argp_failure@@Base+0x10fc>
   17bac:	bl	19f94 <argp_parse@@Base+0x13dc>
   17bb0:	ldr	sl, [sp, #8]
   17bb4:	cmp	sl, #0
   17bb8:	bne	179f0 <argp_failure@@Base+0xf3c>
   17bbc:	ldr	sl, [sp, #24]
   17bc0:	cmp	sl, #0
   17bc4:	cmpne	r4, #0
   17bc8:	beq	17a3c <argp_failure@@Base+0xf88>
   17bcc:	ldr	r2, [sp, #20]
   17bd0:	ldrb	r1, [r7]
   17bd4:	ldrb	r0, [r2]
   17bd8:	cmp	r1, #0
   17bdc:	beq	17bfc <argp_failure@@Base+0x1148>
   17be0:	add	r0, r0, #1
   17be4:	mov	r4, #0
   17be8:	strb	r0, [r2]
   17bec:	clz	r0, r4
   17bf0:	lsr	r0, r0, #5
   17bf4:	sub	sp, fp, #28
   17bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bfc:	cmp	r0, #0
   17c00:	movne	r0, #0
   17c04:	strbne	r0, [r2]
   17c08:	clz	r0, r4
   17c0c:	lsr	r0, r0, #5
   17c10:	sub	sp, fp, #28
   17c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c1c:	add	fp, sp, #28
   17c20:	sub	sp, sp, #28
   17c24:	ldr	r6, [r0, #12]
   17c28:	mov	r5, r0
   17c2c:	ldr	r0, [r0, #16]
   17c30:	mov	sl, r2
   17c34:	mov	r7, #0
   17c38:	str	r3, [sp, #24]
   17c3c:	str	r1, [sp, #20]
   17c40:	cmp	r6, #0
   17c44:	str	r0, [sp, #16]
   17c48:	beq	17c84 <argp_failure@@Base+0x11d0>
   17c4c:	mov	r0, r6
   17c50:	mov	r1, #11
   17c54:	bl	11520 <strchr@plt>
   17c58:	cmp	r0, #0
   17c5c:	mov	r9, r0
   17c60:	mov	r4, r0
   17c64:	subne	r9, r9, r6
   17c68:	cmp	sl, #0
   17c6c:	movne	r9, #0
   17c70:	cmp	r0, #0
   17c74:	addne	r4, r4, #1
   17c78:	cmp	sl, #0
   17c7c:	moveq	r4, r6
   17c80:	b	17c8c <argp_failure@@Base+0x11d8>
   17c84:	mov	r9, #0
   17c88:	mov	r4, #0
   17c8c:	ldr	r0, [r5, #20]
   17c90:	movw	r6, #1
   17c94:	movt	r6, #512	; 0x200
   17c98:	cmp	r0, #0
   17c9c:	beq	17da4 <argp_failure@@Base+0x12f0>
   17ca0:	cmp	r9, #0
   17ca4:	beq	17cb8 <argp_failure@@Base+0x1204>
   17ca8:	mov	r0, r4
   17cac:	mov	r1, r9
   17cb0:	bl	113c4 <strndup@plt>
   17cb4:	mov	r4, r0
   17cb8:	ldr	r1, [sp, #20]
   17cbc:	mov	r0, r5
   17cc0:	bl	198e4 <argp_parse@@Base+0xd2c>
   17cc4:	ldr	r3, [r5, #20]
   17cc8:	mov	r7, r0
   17ccc:	cmp	sl, #0
   17cd0:	mov	r0, r6
   17cd4:	mov	r1, r4
   17cd8:	addne	r0, r0, #1
   17cdc:	mov	r2, r7
   17ce0:	blx	r3
   17ce4:	mov	r3, r0
   17ce8:	cmp	r3, #0
   17cec:	str	r7, [sp, #8]
   17cf0:	beq	17db4 <argp_failure@@Base+0x1300>
   17cf4:	ldr	r0, [sp, #24]
   17cf8:	str	r3, [sp, #12]
   17cfc:	cmp	r0, #0
   17d00:	beq	17d44 <argp_failure@@Base+0x1290>
   17d04:	ldr	r0, [fp, #12]
   17d08:	ldr	r2, [r0, #28]
   17d0c:	ldr	r1, [r0, #32]
   17d10:	cmp	r2, r1
   17d14:	bcc	17d34 <argp_failure@@Base+0x1280>
   17d18:	mov	r1, #1
   17d1c:	bl	1b3cc <argp_parse@@Base+0x2814>
   17d20:	ldr	r3, [sp, #12]
   17d24:	cmp	r0, #0
   17d28:	beq	17d44 <argp_failure@@Base+0x1290>
   17d2c:	ldr	r0, [fp, #12]
   17d30:	ldr	r2, [r0, #28]
   17d34:	add	r1, r2, #1
   17d38:	str	r1, [r0, #28]
   17d3c:	mov	r1, #10
   17d40:	strb	r1, [r2]
   17d44:	cmp	r9, #0
   17d48:	beq	17dc8 <argp_failure@@Base+0x1314>
   17d4c:	cmp	r3, r4
   17d50:	bne	17dc8 <argp_failure@@Base+0x1314>
   17d54:	mov	r7, r5
   17d58:	ldr	r5, [fp, #12]
   17d5c:	mov	r8, r6
   17d60:	ldr	r0, [r5, #28]
   17d64:	ldr	r1, [r5, #32]
   17d68:	add	r2, r0, r9
   17d6c:	cmp	r2, r1
   17d70:	bls	17d8c <argp_failure@@Base+0x12d8>
   17d74:	mov	r0, r5
   17d78:	mov	r1, r9
   17d7c:	bl	1b3cc <argp_parse@@Base+0x2814>
   17d80:	cmp	r0, #0
   17d84:	beq	17e2c <argp_failure@@Base+0x1378>
   17d88:	ldr	r0, [r5, #28]
   17d8c:	mov	r1, r4
   17d90:	mov	r2, r9
   17d94:	bl	113d0 <memcpy@plt>
   17d98:	ldr	r0, [r5, #28]
   17d9c:	add	r0, r0, r9
   17da0:	b	17e28 <argp_failure@@Base+0x1374>
   17da4:	mov	r3, r4
   17da8:	cmp	r3, #0
   17dac:	str	r7, [sp, #8]
   17db0:	bne	17cf4 <argp_failure@@Base+0x1240>
   17db4:	mov	r8, #0
   17db8:	cmp	r9, #0
   17dbc:	cmpne	r4, #0
   17dc0:	beq	17edc <argp_failure@@Base+0x1428>
   17dc4:	b	17ec8 <argp_failure@@Base+0x1414>
   17dc8:	mov	r0, r3
   17dcc:	mov	r8, r6
   17dd0:	mov	r7, r5
   17dd4:	bl	11514 <strlen@plt>
   17dd8:	ldr	r5, [fp, #12]
   17ddc:	cmp	r0, #0
   17de0:	beq	17e2c <argp_failure@@Base+0x1378>
   17de4:	mov	r6, r0
   17de8:	ldr	r0, [r5, #28]
   17dec:	ldr	r1, [r5, #32]
   17df0:	add	r2, r0, r6
   17df4:	cmp	r2, r1
   17df8:	bls	17e14 <argp_failure@@Base+0x1360>
   17dfc:	mov	r0, r5
   17e00:	mov	r1, r6
   17e04:	bl	1b3cc <argp_parse@@Base+0x2814>
   17e08:	cmp	r0, #0
   17e0c:	beq	17e2c <argp_failure@@Base+0x1378>
   17e10:	ldr	r0, [r5, #28]
   17e14:	ldr	r1, [sp, #12]
   17e18:	mov	r2, r6
   17e1c:	bl	113d0 <memcpy@plt>
   17e20:	ldr	r0, [r5, #28]
   17e24:	add	r0, r0, r6
   17e28:	str	r0, [r5, #28]
   17e2c:	ldr	r1, [r5, #24]
   17e30:	ldr	r2, [r5, #28]
   17e34:	ldr	r0, [r5, #16]
   17e38:	sub	r1, r2, r1
   17e3c:	cmp	r1, r0
   17e40:	bls	17e4c <argp_failure@@Base+0x1398>
   17e44:	mov	r0, r5
   17e48:	bl	1ae50 <argp_parse@@Base+0x2298>
   17e4c:	ldr	r1, [r5, #20]
   17e50:	ldr	r0, [r5, #4]
   17e54:	ldr	r2, [sp, #12]
   17e58:	mov	r6, r8
   17e5c:	bic	r1, r1, r1, asr #31
   17e60:	cmp	r1, r0
   17e64:	bls	17ea4 <argp_failure@@Base+0x13f0>
   17e68:	ldr	r0, [r5, #28]
   17e6c:	ldr	r1, [r5, #32]
   17e70:	cmp	r0, r1
   17e74:	bcc	17e94 <argp_failure@@Base+0x13e0>
   17e78:	mov	r0, r5
   17e7c:	mov	r1, #1
   17e80:	bl	1b3cc <argp_parse@@Base+0x2814>
   17e84:	ldr	r2, [sp, #12]
   17e88:	cmp	r0, #0
   17e8c:	beq	17ea4 <argp_failure@@Base+0x13f0>
   17e90:	ldr	r0, [r5, #28]
   17e94:	add	r1, r0, #1
   17e98:	str	r1, [r5, #28]
   17e9c:	mov	r1, #10
   17ea0:	strb	r1, [r0]
   17ea4:	mov	r8, #1
   17ea8:	cmp	r2, r4
   17eac:	beq	17eb8 <argp_failure@@Base+0x1404>
   17eb0:	mov	r0, r2
   17eb4:	bl	19f94 <argp_parse@@Base+0x13dc>
   17eb8:	mov	r5, r7
   17ebc:	cmp	r9, #0
   17ec0:	cmpne	r4, #0
   17ec4:	beq	17edc <argp_failure@@Base+0x1428>
   17ec8:	ldr	r0, [r5, #20]
   17ecc:	cmp	r0, #0
   17ed0:	beq	17edc <argp_failure@@Base+0x1428>
   17ed4:	mov	r0, r4
   17ed8:	bl	19f94 <argp_parse@@Base+0x13dc>
   17edc:	str	sl, [sp, #12]
   17ee0:	cmp	sl, #0
   17ee4:	ldr	r9, [sp, #24]
   17ee8:	ldr	sl, [sp, #20]
   17eec:	ldr	r4, [sp, #16]
   17ef0:	beq	1804c <argp_failure@@Base+0x1598>
   17ef4:	ldr	r3, [r5, #20]
   17ef8:	cmp	r3, #0
   17efc:	beq	1804c <argp_failure@@Base+0x1598>
   17f00:	ldr	r2, [sp, #8]
   17f04:	add	r0, r6, #3
   17f08:	mov	r1, #0
   17f0c:	blx	r3
   17f10:	cmp	r0, #0
   17f14:	beq	1804c <argp_failure@@Base+0x1598>
   17f18:	mov	r7, r0
   17f1c:	orrs	r0, r8, r9
   17f20:	beq	17f60 <argp_failure@@Base+0x14ac>
   17f24:	ldr	r0, [fp, #12]
   17f28:	ldr	r2, [r0, #28]
   17f2c:	ldr	r1, [r0, #32]
   17f30:	cmp	r2, r1
   17f34:	bcc	17f50 <argp_failure@@Base+0x149c>
   17f38:	mov	r1, #1
   17f3c:	bl	1b3cc <argp_parse@@Base+0x2814>
   17f40:	cmp	r0, #0
   17f44:	beq	17f60 <argp_failure@@Base+0x14ac>
   17f48:	ldr	r0, [fp, #12]
   17f4c:	ldr	r2, [r0, #28]
   17f50:	add	r1, r2, #1
   17f54:	str	r1, [r0, #28]
   17f58:	mov	r1, #10
   17f5c:	strb	r1, [r2]
   17f60:	mov	r0, r7
   17f64:	mov	r5, r4
   17f68:	bl	11514 <strlen@plt>
   17f6c:	ldr	r4, [fp, #12]
   17f70:	cmp	r0, #0
   17f74:	beq	17fc0 <argp_failure@@Base+0x150c>
   17f78:	mov	r6, r0
   17f7c:	ldr	r0, [r4, #28]
   17f80:	ldr	r1, [r4, #32]
   17f84:	add	r2, r0, r6
   17f88:	cmp	r2, r1
   17f8c:	bls	17fa8 <argp_failure@@Base+0x14f4>
   17f90:	mov	r0, r4
   17f94:	mov	r1, r6
   17f98:	bl	1b3cc <argp_parse@@Base+0x2814>
   17f9c:	cmp	r0, #0
   17fa0:	beq	17fc0 <argp_failure@@Base+0x150c>
   17fa4:	ldr	r0, [r4, #28]
   17fa8:	mov	r1, r7
   17fac:	mov	r2, r6
   17fb0:	bl	113d0 <memcpy@plt>
   17fb4:	ldr	r0, [r4, #28]
   17fb8:	add	r0, r0, r6
   17fbc:	str	r0, [r4, #28]
   17fc0:	mov	r0, r7
   17fc4:	bl	19f94 <argp_parse@@Base+0x13dc>
   17fc8:	ldr	r1, [r4, #24]
   17fcc:	ldr	r2, [r4, #28]
   17fd0:	ldr	r0, [r4, #16]
   17fd4:	sub	r1, r2, r1
   17fd8:	cmp	r1, r0
   17fdc:	bls	17fe8 <argp_failure@@Base+0x1534>
   17fe0:	mov	r0, r4
   17fe4:	bl	1ae50 <argp_parse@@Base+0x2298>
   17fe8:	ldr	r1, [r4, #20]
   17fec:	ldr	r0, [r4, #4]
   17ff0:	mov	r8, #1
   17ff4:	bic	r1, r1, r1, asr #31
   17ff8:	cmp	r1, r0
   17ffc:	bls	18048 <argp_failure@@Base+0x1594>
   18000:	ldr	r0, [r4, #28]
   18004:	ldr	r1, [r4, #32]
   18008:	cmp	r0, r1
   1800c:	bcc	18034 <argp_failure@@Base+0x1580>
   18010:	mov	r0, r4
   18014:	mov	r1, #1
   18018:	mov	r8, #1
   1801c:	bl	1b3cc <argp_parse@@Base+0x2814>
   18020:	cmp	r0, #0
   18024:	mov	r4, r5
   18028:	beq	1804c <argp_failure@@Base+0x1598>
   1802c:	ldr	r4, [fp, #12]
   18030:	ldr	r0, [r4, #28]
   18034:	add	r1, r0, #1
   18038:	mov	r8, #1
   1803c:	str	r1, [r4, #28]
   18040:	mov	r1, #10
   18044:	strb	r1, [r0]
   18048:	mov	r4, r5
   1804c:	cmp	r4, #0
   18050:	beq	180f0 <argp_failure@@Base+0x163c>
   18054:	ldr	r0, [r4]
   18058:	cmp	r0, #0
   1805c:	beq	180f0 <argp_failure@@Base+0x163c>
   18060:	ldr	r7, [fp, #8]
   18064:	cmp	r7, #0
   18068:	beq	180b4 <argp_failure@@Base+0x1600>
   1806c:	add	r6, r4, #16
   18070:	ldr	r4, [fp, #12]
   18074:	ldr	r5, [sp, #12]
   18078:	cmp	r9, #0
   1807c:	movwne	r9, #1
   18080:	cmp	r8, #0
   18084:	bne	180f0 <argp_failure@@Base+0x163c>
   18088:	mov	r1, sl
   1808c:	mov	r2, r5
   18090:	mov	r3, r9
   18094:	str	r7, [sp]
   18098:	str	r4, [sp, #4]
   1809c:	bl	17c18 <argp_failure@@Base+0x1164>
   180a0:	mov	r8, r0
   180a4:	ldr	r0, [r6], #16
   180a8:	cmp	r0, #0
   180ac:	bne	18080 <argp_failure@@Base+0x15cc>
   180b0:	b	180f0 <argp_failure@@Base+0x163c>
   180b4:	ldr	r5, [fp, #12]
   180b8:	ldr	r7, [sp, #12]
   180bc:	add	r4, r4, #16
   180c0:	mov	r6, #0
   180c4:	orrs	r3, r8, r9
   180c8:	mov	r1, sl
   180cc:	mov	r2, r7
   180d0:	str	r6, [sp]
   180d4:	str	r5, [sp, #4]
   180d8:	movwne	r3, #1
   180dc:	bl	17c18 <argp_failure@@Base+0x1164>
   180e0:	orr	r8, r0, r8
   180e4:	ldr	r0, [r4], #16
   180e8:	cmp	r0, #0
   180ec:	bne	180c4 <argp_failure@@Base+0x1610>
   180f0:	mov	r0, r8
   180f4:	sub	sp, fp, #28
   180f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18100:	add	fp, sp, #28
   18104:	sub	sp, sp, #28
   18108:	mov	r7, r0
   1810c:	ldr	r0, [r0, #16]
   18110:	mov	r6, r1
   18114:	cmp	r0, #0
   18118:	beq	18160 <argp_failure@@Base+0x16ac>
   1811c:	mov	r2, r0
   18120:	mov	r1, r2
   18124:	ldr	r2, [r2, #12]
   18128:	cmp	r2, #0
   1812c:	bne	18120 <argp_failure@@Base+0x166c>
   18130:	add	r2, r1, #8
   18134:	ldr	r1, [r6, #16]
   18138:	ldr	r3, [r2]
   1813c:	cmp	r1, #0
   18140:	beq	18174 <argp_failure@@Base+0x16c0>
   18144:	mov	r2, r1
   18148:	mov	r5, r2
   1814c:	ldr	r2, [r2, #12]
   18150:	cmp	r2, #0
   18154:	bne	18148 <argp_failure@@Base+0x1694>
   18158:	add	r2, r5, #8
   1815c:	b	18178 <argp_failure@@Base+0x16c4>
   18160:	add	r2, r7, #12
   18164:	ldr	r1, [r6, #16]
   18168:	ldr	r3, [r2]
   1816c:	cmp	r1, #0
   18170:	bne	18144 <argp_failure@@Base+0x1690>
   18174:	add	r2, r6, #12
   18178:	ldr	r5, [r2]
   1817c:	orr	r4, r5, r3
   18180:	sub	r2, r3, r5
   18184:	cmn	r4, #1
   18188:	mov	r4, r2
   1818c:	suble	r4, r5, r3
   18190:	ands	r3, r5, r3
   18194:	movmi	r4, r2
   18198:	cmp	r4, #0
   1819c:	bne	181bc <argp_failure@@Base+0x1708>
   181a0:	cmp	r0, #0
   181a4:	mov	r4, r0
   181a8:	movwne	r4, #1
   181ac:	cmp	r1, #0
   181b0:	subne	r4, r4, #1
   181b4:	cmp	r4, #0
   181b8:	beq	181c8 <argp_failure@@Base+0x1714>
   181bc:	mov	r0, r4
   181c0:	sub	sp, fp, #28
   181c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181c8:	cmp	r0, #0
   181cc:	beq	1824c <argp_failure@@Base+0x1798>
   181d0:	ldr	r3, [r1, #20]
   181d4:	ldr	r2, [r0, #20]
   181d8:	cmp	r2, r3
   181dc:	ble	1820c <argp_failure@@Base+0x1758>
   181e0:	ldr	r0, [r0, #12]
   181e4:	ldr	r2, [r0, #20]
   181e8:	cmp	r2, r3
   181ec:	bgt	181e0 <argp_failure@@Base+0x172c>
   181f0:	bl	18694 <argp_failure@@Base+0x1be0>
   181f4:	cmp	r0, #0
   181f8:	mov	r4, r0
   181fc:	movweq	r4, #1
   18200:	mov	r0, r4
   18204:	sub	sp, fp, #28
   18208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1820c:	bge	1823c <argp_failure@@Base+0x1788>
   18210:	ldr	r1, [r1, #12]
   18214:	ldr	r3, [r1, #20]
   18218:	cmp	r2, r3
   1821c:	blt	18210 <argp_failure@@Base+0x175c>
   18220:	bl	18694 <argp_failure@@Base+0x1be0>
   18224:	cmp	r0, #0
   18228:	mov	r4, r0
   1822c:	mvneq	r4, #0
   18230:	mov	r0, r4
   18234:	sub	sp, fp, #28
   18238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1823c:	bl	18694 <argp_failure@@Base+0x1be0>
   18240:	mov	r4, r0
   18244:	cmp	r0, #0
   18248:	bne	181bc <argp_failure@@Base+0x1708>
   1824c:	ldr	r0, [r7, #12]
   18250:	ldr	r1, [r6, #12]
   18254:	orr	r2, r1, r0
   18258:	sub	r3, r0, r1
   1825c:	cmn	r2, #1
   18260:	mov	r4, r3
   18264:	suble	r4, r1, r0
   18268:	ands	r0, r1, r0
   1826c:	movmi	r4, r3
   18270:	cmp	r4, #0
   18274:	bne	181bc <argp_failure@@Base+0x1708>
   18278:	ldr	r4, [r7, #4]
   1827c:	ldr	sl, [r7]
   18280:	mov	r9, #0
   18284:	cmp	r4, #0
   18288:	beq	182cc <argp_failure@@Base+0x1818>
   1828c:	add	r0, sl, #12
   18290:	mov	r1, r4
   18294:	ldr	r9, [r0, #-12]
   18298:	cmp	r9, #0
   1829c:	bne	182b8 <argp_failure@@Base+0x1804>
   182a0:	add	r0, r0, #24
   182a4:	subs	r1, r1, #1
   182a8:	beq	182c8 <argp_failure@@Base+0x1814>
   182ac:	ldr	r9, [r0, #-12]
   182b0:	cmp	r9, #0
   182b4:	beq	182a0 <argp_failure@@Base+0x17ec>
   182b8:	ldrb	r2, [r0]
   182bc:	tst	r2, #2
   182c0:	bne	182a0 <argp_failure@@Base+0x17ec>
   182c4:	b	182cc <argp_failure@@Base+0x1818>
   182c8:	mov	r9, #0
   182cc:	ldr	r3, [r6, #4]
   182d0:	ldr	ip, [r6]
   182d4:	cmp	r3, #0
   182d8:	beq	18318 <argp_failure@@Base+0x1864>
   182dc:	add	r0, ip, #12
   182e0:	mov	r1, r3
   182e4:	ldr	r5, [r0, #-12]
   182e8:	cmp	r5, #0
   182ec:	bne	18308 <argp_failure@@Base+0x1854>
   182f0:	add	r0, r0, #24
   182f4:	subs	r1, r1, #1
   182f8:	beq	18318 <argp_failure@@Base+0x1864>
   182fc:	ldr	r5, [r0, #-12]
   18300:	cmp	r5, #0
   18304:	beq	182f0 <argp_failure@@Base+0x183c>
   18308:	ldrb	r2, [r0]
   1830c:	tst	r2, #2
   18310:	bne	182f0 <argp_failure@@Base+0x183c>
   18314:	b	1831c <argp_failure@@Base+0x1868>
   18318:	mov	r5, #0
   1831c:	ldr	r1, [sl, #12]
   18320:	mov	r8, #0
   18324:	cmp	r9, #0
   18328:	str	r4, [sp, #12]
   1832c:	str	r3, [sp, #16]
   18330:	str	sl, [sp, #8]
   18334:	str	r1, [sp, #24]
   18338:	beq	183b0 <argp_failure@@Base+0x18fc>
   1833c:	ands	r0, r1, #8
   18340:	beq	183b0 <argp_failure@@Base+0x18fc>
   18344:	str	ip, [sp, #20]
   18348:	bl	114d8 <__ctype_b_loc@plt>
   1834c:	ldrb	r1, [r9]
   18350:	ldr	r0, [r0]
   18354:	add	r2, r0, r1, lsl #1
   18358:	ldrb	r2, [r2, #1]
   1835c:	tst	r2, #32
   18360:	beq	18378 <argp_failure@@Base+0x18c4>
   18364:	ldrb	r1, [r9, #1]!
   18368:	add	r2, r0, r1, lsl #1
   1836c:	ldrb	r2, [r2, #1]
   18370:	tst	r2, #32
   18374:	bne	18364 <argp_failure@@Base+0x18b0>
   18378:	ldr	ip, [sp, #20]
   1837c:	subs	r4, r1, #45	; 0x2d
   18380:	movwne	r4, #1
   18384:	cmp	r1, #0
   18388:	beq	183a8 <argp_failure@@Base+0x18f4>
   1838c:	uxtb	r1, r1
   18390:	ldrb	r1, [r0, r1, lsl #1]
   18394:	tst	r1, #8
   18398:	bne	183a8 <argp_failure@@Base+0x18f4>
   1839c:	ldrb	r1, [r9, #1]!
   183a0:	cmp	r1, #0
   183a4:	bne	1838c <argp_failure@@Base+0x18d8>
   183a8:	ldr	r1, [sp, #24]
   183ac:	b	183b4 <argp_failure@@Base+0x1900>
   183b0:	mov	r4, #0
   183b4:	ldr	r0, [ip, #12]
   183b8:	cmp	r5, #0
   183bc:	str	r0, [sp, #4]
   183c0:	andsne	r0, r0, #8
   183c4:	beq	18430 <argp_failure@@Base+0x197c>
   183c8:	mov	sl, ip
   183cc:	bl	114d8 <__ctype_b_loc@plt>
   183d0:	ldrb	r1, [r5]
   183d4:	ldr	r0, [r0]
   183d8:	add	r2, r0, r1, lsl #1
   183dc:	ldrb	r2, [r2, #1]
   183e0:	tst	r2, #32
   183e4:	beq	183fc <argp_failure@@Base+0x1948>
   183e8:	ldrb	r1, [r5, #1]!
   183ec:	add	r2, r0, r1, lsl #1
   183f0:	ldrb	r2, [r2, #1]
   183f4:	tst	r2, #32
   183f8:	bne	183e8 <argp_failure@@Base+0x1934>
   183fc:	subs	r8, r1, #45	; 0x2d
   18400:	mov	ip, sl
   18404:	movwne	r8, #1
   18408:	cmp	r1, #0
   1840c:	beq	1842c <argp_failure@@Base+0x1978>
   18410:	uxtb	r1, r1
   18414:	ldrb	r1, [r0, r1, lsl #1]
   18418:	tst	r1, #8
   1841c:	bne	1842c <argp_failure@@Base+0x1978>
   18420:	ldrb	r1, [r5, #1]!
   18424:	cmp	r1, #0
   18428:	bne	18410 <argp_failure@@Base+0x195c>
   1842c:	ldr	r1, [sp, #24]
   18430:	subs	r4, r4, r8
   18434:	bne	181bc <argp_failure@@Base+0x1708>
   18438:	ldr	r0, [sp, #12]
   1843c:	mov	r2, #0
   18440:	str	ip, [sp, #20]
   18444:	cmp	r0, #0
   18448:	beq	184e0 <argp_failure@@Base+0x1a2c>
   1844c:	sub	sl, r0, #1
   18450:	ldr	r0, [sp, #8]
   18454:	ldr	r4, [r7, #8]
   18458:	add	r8, r0, #36	; 0x24
   1845c:	tst	r1, #8
   18460:	beq	18488 <argp_failure@@Base+0x19d4>
   18464:	mov	r2, #0
   18468:	cmp	sl, #0
   1846c:	beq	184e0 <argp_failure@@Base+0x1a2c>
   18470:	cmp	r2, #0
   18474:	bne	184e0 <argp_failure@@Base+0x1a2c>
   18478:	ldr	r1, [r8], #24
   1847c:	sub	sl, sl, #1
   18480:	tst	r1, #8
   18484:	bne	18464 <argp_failure@@Base+0x19b0>
   18488:	ldr	r7, [r8, #-32]	; 0xffffffe0
   1848c:	sub	r0, r7, #1
   18490:	cmp	r0, #254	; 0xfe
   18494:	bhi	18464 <argp_failure@@Base+0x19b0>
   18498:	str	r1, [sp, #24]
   1849c:	bl	114d8 <__ctype_b_loc@plt>
   184a0:	ldr	r0, [r0]
   184a4:	add	r0, r0, r7, lsl #1
   184a8:	ldrb	r0, [r0, #1]
   184ac:	tst	r0, #64	; 0x40
   184b0:	beq	18464 <argp_failure@@Base+0x19b0>
   184b4:	ldrb	r0, [r4]
   184b8:	mov	r2, r7
   184bc:	cmp	r7, r0
   184c0:	bne	18464 <argp_failure@@Base+0x19b0>
   184c4:	ldr	r0, [sp, #24]
   184c8:	add	r4, r4, #1
   184cc:	tst	r0, #2
   184d0:	mov	r0, #0
   184d4:	movne	r2, r0
   184d8:	cmp	sl, #0
   184dc:	bne	18470 <argp_failure@@Base+0x19bc>
   184e0:	ldr	r0, [sp, #16]
   184e4:	mov	sl, #0
   184e8:	mov	r1, r2
   184ec:	str	r2, [sp, #24]
   184f0:	cmp	r0, #0
   184f4:	beq	18590 <argp_failure@@Base+0x1adc>
   184f8:	sub	r7, r0, #1
   184fc:	ldr	r0, [sp, #20]
   18500:	ldr	r6, [r6, #8]
   18504:	ldr	r4, [sp, #4]
   18508:	add	r8, r0, #36	; 0x24
   1850c:	tst	r4, #8
   18510:	bne	1851c <argp_failure@@Base+0x1a68>
   18514:	b	18540 <argp_failure@@Base+0x1a8c>
   18518:	ldr	r2, [sp, #24]
   1851c:	mov	sl, #0
   18520:	cmp	r7, #0
   18524:	beq	18590 <argp_failure@@Base+0x1adc>
   18528:	cmp	sl, #0
   1852c:	bne	18590 <argp_failure@@Base+0x1adc>
   18530:	ldr	r4, [r8], #24
   18534:	sub	r7, r7, #1
   18538:	tst	r4, #8
   1853c:	bne	1851c <argp_failure@@Base+0x1a68>
   18540:	ldr	sl, [r8, #-32]	; 0xffffffe0
   18544:	sub	r0, sl, #1
   18548:	cmp	r0, #254	; 0xfe
   1854c:	bhi	1851c <argp_failure@@Base+0x1a68>
   18550:	bl	114d8 <__ctype_b_loc@plt>
   18554:	ldr	r0, [r0]
   18558:	add	r0, r0, sl, lsl #1
   1855c:	ldrb	r0, [r0, #1]
   18560:	tst	r0, #64	; 0x40
   18564:	beq	18518 <argp_failure@@Base+0x1a64>
   18568:	ldrb	r0, [r6]
   1856c:	ldr	r2, [sp, #24]
   18570:	cmp	sl, r0
   18574:	bne	1851c <argp_failure@@Base+0x1a68>
   18578:	tst	r4, #2
   1857c:	mov	r0, #0
   18580:	add	r6, r6, #1
   18584:	movne	sl, r0
   18588:	cmp	r7, #0
   1858c:	bne	18528 <argp_failure@@Base+0x1a74>
   18590:	tst	r2, #255	; 0xff
   18594:	mov	r6, r2
   18598:	beq	185b8 <argp_failure@@Base+0x1b04>
   1859c:	tst	sl, #255	; 0xff
   185a0:	mov	r7, sl
   185a4:	bne	185ec <argp_failure@@Base+0x1b38>
   185a8:	cmp	r5, #0
   185ac:	beq	185d4 <argp_failure@@Base+0x1b20>
   185b0:	ldrb	r7, [r5]
   185b4:	b	185ec <argp_failure@@Base+0x1b38>
   185b8:	cmp	r9, #0
   185bc:	beq	185dc <argp_failure@@Base+0x1b28>
   185c0:	ldrb	r6, [r9]
   185c4:	tst	sl, #255	; 0xff
   185c8:	mov	r7, sl
   185cc:	bne	185ec <argp_failure@@Base+0x1b38>
   185d0:	b	185a8 <argp_failure@@Base+0x1af4>
   185d4:	mov	r7, #0
   185d8:	b	185ec <argp_failure@@Base+0x1b38>
   185dc:	mov	r6, #0
   185e0:	tst	sl, #255	; 0xff
   185e4:	mov	r7, sl
   185e8:	beq	185a8 <argp_failure@@Base+0x1af4>
   185ec:	bl	114c0 <__ctype_tolower_loc@plt>
   185f0:	ldr	r2, [r0]
   185f4:	uxtb	r0, r7
   185f8:	uxtb	r1, r6
   185fc:	ldr	r3, [r2, r0, lsl #2]
   18600:	ldr	r2, [r2, r1, lsl #2]
   18604:	subs	r4, r2, r3
   18608:	subseq	r4, r0, r1
   1860c:	bne	181bc <argp_failure@@Base+0x1708>
   18610:	ldr	r0, [sp, #24]
   18614:	uxtb	r4, r0
   18618:	cmp	r4, #0
   1861c:	movwne	r4, #1
   18620:	tst	sl, #255	; 0xff
   18624:	subne	r4, r4, #1
   18628:	cmp	r4, #0
   1862c:	bne	181bc <argp_failure@@Base+0x1708>
   18630:	ldr	r0, [sp, #24]
   18634:	tst	r0, #255	; 0xff
   18638:	beq	1864c <argp_failure@@Base+0x1b98>
   1863c:	mov	r4, #0
   18640:	mov	r0, r4
   18644:	sub	sp, fp, #28
   18648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1864c:	cmp	r9, #0
   18650:	mov	r4, r9
   18654:	movwne	r4, #1
   18658:	cmp	r5, #0
   1865c:	subne	r4, r4, #1
   18660:	cmp	r4, #0
   18664:	bne	181bc <argp_failure@@Base+0x1708>
   18668:	cmp	r9, #0
   1866c:	beq	1863c <argp_failure@@Base+0x1b88>
   18670:	mov	r0, r9
   18674:	mov	r1, r5
   18678:	bl	11448 <strcasecmp@plt>
   1867c:	cmp	r0, #0
   18680:	mov	r4, r0
   18684:	moveq	r4, #0
   18688:	mov	r0, r4
   1868c:	sub	sp, fp, #28
   18690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18694:	push	{r4, r5, fp, lr}
   18698:	add	fp, sp, #8
   1869c:	mov	r4, r1
   186a0:	mov	r5, r0
   186a4:	ldr	r1, [r1, #12]
   186a8:	ldr	r0, [r0, #12]
   186ac:	cmp	r0, r1
   186b0:	beq	186c4 <argp_failure@@Base+0x1c10>
   186b4:	bl	18694 <argp_failure@@Base+0x1be0>
   186b8:	cmp	r0, #0
   186bc:	beq	186c4 <argp_failure@@Base+0x1c10>
   186c0:	pop	{r4, r5, fp, pc}
   186c4:	ldr	r1, [r5, #8]
   186c8:	ldr	r2, [r4, #8]
   186cc:	orr	r0, r2, r1
   186d0:	sub	r3, r1, r2
   186d4:	cmn	r0, #1
   186d8:	mov	r0, r3
   186dc:	suble	r0, r2, r1
   186e0:	ands	r1, r2, r1
   186e4:	movmi	r0, r3
   186e8:	cmp	r0, #0
   186ec:	popne	{r4, r5, fp, pc}
   186f0:	ldr	r0, [r5, #4]
   186f4:	ldr	r1, [r4, #4]
   186f8:	sub	r0, r1, r0
   186fc:	pop	{r4, r5, fp, pc}
   18700:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18704:	add	fp, sp, #24
   18708:	mov	r4, r0
   1870c:	ldr	r0, [r1, #12]
   18710:	mov	r5, r1
   18714:	cmp	r0, #0
   18718:	beq	18794 <argp_failure@@Base+0x1ce0>
   1871c:	ldr	r1, [r5, #8]
   18720:	ldr	r0, [r5]
   18724:	ldr	r6, [r1]
   18728:	ldr	r7, [r0, #16]
   1872c:	cmp	r6, #0
   18730:	ldrne	r1, [r1, #4]
   18734:	cmpne	r1, #0
   18738:	bne	187dc <argp_failure@@Base+0x1d28>
   1873c:	cmp	r7, #0
   18740:	beq	1887c <argp_failure@@Base+0x1dc8>
   18744:	ldr	r0, [r7]
   18748:	cmp	r0, #0
   1874c:	beq	1887c <argp_failure@@Base+0x1dc8>
   18750:	ldrb	r1, [r0]
   18754:	cmp	r1, #0
   18758:	beq	1887c <argp_failure@@Base+0x1dc8>
   1875c:	cmp	r6, #0
   18760:	beq	18840 <argp_failure@@Base+0x1d8c>
   18764:	ldr	r1, [r6, #16]
   18768:	cmp	r1, r7
   1876c:	beq	1887c <argp_failure@@Base+0x1dc8>
   18770:	cmp	r1, #0
   18774:	beq	18834 <argp_failure@@Base+0x1d80>
   18778:	ldr	r1, [r1, #12]
   1877c:	cmp	r1, r7
   18780:	cmpne	r1, #0
   18784:	bne	18778 <argp_failure@@Base+0x1cc4>
   18788:	cmp	r1, r7
   1878c:	bne	18840 <argp_failure@@Base+0x1d8c>
   18790:	b	1887c <argp_failure@@Base+0x1dc8>
   18794:	ldr	r6, [r5, #4]
   18798:	ldr	r0, [r6, #28]
   1879c:	ldr	r1, [r6, #32]
   187a0:	add	r2, r0, #2
   187a4:	cmp	r2, r1
   187a8:	bls	187c4 <argp_failure@@Base+0x1d10>
   187ac:	mov	r0, r6
   187b0:	mov	r1, #2
   187b4:	bl	1b3cc <argp_parse@@Base+0x2814>
   187b8:	cmp	r0, #0
   187bc:	beq	18884 <argp_failure@@Base+0x1dd0>
   187c0:	ldr	r0, [r6, #28]
   187c4:	movw	r1, #8236	; 0x202c
   187c8:	strh	r1, [r0]
   187cc:	ldr	r0, [r6, #28]
   187d0:	add	r0, r0, #2
   187d4:	str	r0, [r6, #28]
   187d8:	b	18884 <argp_failure@@Base+0x1dd0>
   187dc:	ldr	r1, [r6, #12]
   187e0:	ldr	r0, [r0, #12]
   187e4:	cmp	r0, r1
   187e8:	beq	1873c <argp_failure@@Base+0x1c88>
   187ec:	ldr	r8, [r5, #4]
   187f0:	ldr	r0, [r8, #28]
   187f4:	ldr	r1, [r8, #32]
   187f8:	cmp	r0, r1
   187fc:	bcc	18818 <argp_failure@@Base+0x1d64>
   18800:	mov	r0, r8
   18804:	mov	r1, #1
   18808:	bl	1b3cc <argp_parse@@Base+0x2814>
   1880c:	cmp	r0, #0
   18810:	beq	1873c <argp_failure@@Base+0x1c88>
   18814:	ldr	r0, [r8, #28]
   18818:	add	r1, r0, #1
   1881c:	str	r1, [r8, #28]
   18820:	mov	r1, #10
   18824:	strb	r1, [r0]
   18828:	cmp	r7, #0
   1882c:	bne	18744 <argp_failure@@Base+0x1c90>
   18830:	b	1887c <argp_failure@@Base+0x1dc8>
   18834:	mov	r1, #0
   18838:	cmp	r1, r7
   1883c:	beq	1887c <argp_failure@@Base+0x1dc8>
   18840:	ldr	r1, [r5, #4]
   18844:	mov	r2, r5
   18848:	ldr	r8, [r1, #12]
   1884c:	ldr	r1, [r7, #16]
   18850:	bl	1890c <argp_failure@@Base+0x1e58>
   18854:	ldr	r6, [r5, #4]
   18858:	ldr	r1, [r6, #24]
   1885c:	ldr	r2, [r6, #28]
   18860:	ldr	r0, [r6, #16]
   18864:	sub	r1, r2, r1
   18868:	cmp	r1, r0
   1886c:	bls	18878 <argp_failure@@Base+0x1dc4>
   18870:	mov	r0, r6
   18874:	bl	1ae50 <argp_parse@@Base+0x2298>
   18878:	str	r8, [r6, #12]
   1887c:	mov	r0, #0
   18880:	str	r0, [r5, #12]
   18884:	ldr	r5, [r5, #4]
   18888:	ldr	r1, [r5, #24]
   1888c:	ldr	r2, [r5, #28]
   18890:	ldr	r0, [r5, #16]
   18894:	sub	r1, r2, r1
   18898:	cmp	r1, r0
   1889c:	bls	188a8 <argp_failure@@Base+0x1df4>
   188a0:	mov	r0, r5
   188a4:	bl	1ae50 <argp_parse@@Base+0x2298>
   188a8:	ldr	r0, [r5, #20]
   188ac:	cmp	r0, #0
   188b0:	subgt	r4, r4, r0
   188b4:	cmp	r4, #1
   188b8:	blt	18908 <argp_failure@@Base+0x1e54>
   188bc:	mov	r6, #32
   188c0:	b	188d8 <argp_failure@@Base+0x1e24>
   188c4:	add	r1, r0, #1
   188c8:	str	r1, [r5, #28]
   188cc:	strb	r6, [r0]
   188d0:	cmp	r4, #0
   188d4:	ble	18908 <argp_failure@@Base+0x1e54>
   188d8:	ldr	r0, [r5, #28]
   188dc:	ldr	r1, [r5, #32]
   188e0:	sub	r4, r4, #1
   188e4:	cmp	r0, r1
   188e8:	bcc	188c4 <argp_failure@@Base+0x1e10>
   188ec:	mov	r0, r5
   188f0:	mov	r1, #1
   188f4:	bl	1b3cc <argp_parse@@Base+0x2814>
   188f8:	cmp	r0, #0
   188fc:	beq	188d0 <argp_failure@@Base+0x1e1c>
   18900:	ldr	r0, [r5, #28]
   18904:	b	188c4 <argp_failure@@Base+0x1e10>
   18908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1890c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18910:	add	fp, sp, #28
   18914:	sub	sp, sp, #4
   18918:	mov	r9, r2
   1891c:	mov	r8, r0
   18920:	cmp	r1, #0
   18924:	mov	r6, r0
   18928:	beq	18968 <argp_failure@@Base+0x1eb4>
   1892c:	ldr	r0, [r1, #20]
   18930:	mov	r4, r1
   18934:	mov	r6, r8
   18938:	cmp	r0, #0
   1893c:	beq	18968 <argp_failure@@Base+0x1eb4>
   18940:	ldr	r1, [r9, #16]
   18944:	mov	r0, r4
   18948:	bl	198e4 <argp_parse@@Base+0xd2c>
   1894c:	ldr	r3, [r4, #20]
   18950:	mov	r2, r0
   18954:	movw	r0, #3
   18958:	mov	r1, r8
   1895c:	movt	r0, #512	; 0x200
   18960:	blx	r3
   18964:	mov	r6, r0
   18968:	cmp	r6, #0
   1896c:	beq	18b98 <argp_failure@@Base+0x20e4>
   18970:	ldrb	r0, [r6]
   18974:	cmp	r0, #0
   18978:	beq	18b8c <argp_failure@@Base+0x20d8>
   1897c:	ldr	r0, [r9, #8]
   18980:	ldr	r0, [r0]
   18984:	cmp	r0, #0
   18988:	beq	189c8 <argp_failure@@Base+0x1f14>
   1898c:	ldr	r4, [r9, #4]
   18990:	ldr	r0, [r4, #28]
   18994:	ldr	r1, [r4, #32]
   18998:	cmp	r0, r1
   1899c:	bcc	189b8 <argp_failure@@Base+0x1f04>
   189a0:	mov	r0, r4
   189a4:	mov	r1, #1
   189a8:	bl	1b3cc <argp_parse@@Base+0x2814>
   189ac:	cmp	r0, #0
   189b0:	beq	189c8 <argp_failure@@Base+0x1f14>
   189b4:	ldr	r0, [r4, #28]
   189b8:	add	r1, r0, #1
   189bc:	str	r1, [r4, #28]
   189c0:	mov	r1, #10
   189c4:	strb	r1, [r0]
   189c8:	ldr	r7, [r9, #4]
   189cc:	movw	sl, #62944	; 0xf5e0
   189d0:	movt	sl, #2
   189d4:	ldr	r4, [sl, #24]
   189d8:	ldr	r1, [r7, #24]
   189dc:	ldr	r2, [r7, #28]
   189e0:	ldr	r0, [r7, #16]
   189e4:	sub	r1, r2, r1
   189e8:	cmp	r1, r0
   189ec:	bls	189f8 <argp_failure@@Base+0x1f44>
   189f0:	mov	r0, r7
   189f4:	bl	1ae50 <argp_parse@@Base+0x2298>
   189f8:	ldr	r0, [r7, #20]
   189fc:	cmp	r0, #0
   18a00:	subgt	r4, r4, r0
   18a04:	cmp	r4, #1
   18a08:	blt	18a58 <argp_failure@@Base+0x1fa4>
   18a0c:	mov	r5, #32
   18a10:	b	18a28 <argp_failure@@Base+0x1f74>
   18a14:	add	r1, r0, #1
   18a18:	str	r1, [r7, #28]
   18a1c:	strb	r5, [r0]
   18a20:	cmp	r4, #0
   18a24:	ble	18a58 <argp_failure@@Base+0x1fa4>
   18a28:	ldr	r0, [r7, #28]
   18a2c:	ldr	r1, [r7, #32]
   18a30:	sub	r4, r4, #1
   18a34:	cmp	r0, r1
   18a38:	bcc	18a14 <argp_failure@@Base+0x1f60>
   18a3c:	mov	r0, r7
   18a40:	mov	r1, #1
   18a44:	bl	1b3cc <argp_parse@@Base+0x2814>
   18a48:	cmp	r0, #0
   18a4c:	beq	18a20 <argp_failure@@Base+0x1f6c>
   18a50:	ldr	r0, [r7, #28]
   18a54:	b	18a14 <argp_failure@@Base+0x1f60>
   18a58:	ldr	r4, [r9, #4]
   18a5c:	ldr	r5, [sl, #24]
   18a60:	ldr	r1, [r4, #24]
   18a64:	ldr	r2, [r4, #28]
   18a68:	ldr	r0, [r4, #16]
   18a6c:	mov	r7, r4
   18a70:	sub	r1, r2, r1
   18a74:	mov	r2, sl
   18a78:	mov	sl, r5
   18a7c:	cmp	r1, r0
   18a80:	bls	18aa8 <argp_failure@@Base+0x1ff4>
   18a84:	mov	r0, r4
   18a88:	mov	r7, r2
   18a8c:	bl	1ae50 <argp_parse@@Base+0x2298>
   18a90:	ldr	sl, [r7, #24]
   18a94:	ldr	r7, [r9, #4]
   18a98:	ldr	r1, [r7, #24]
   18a9c:	ldr	r2, [r7, #28]
   18aa0:	ldr	r0, [r7, #16]
   18aa4:	sub	r1, r2, r1
   18aa8:	str	r5, [r4, #4]
   18aac:	cmp	r1, r0
   18ab0:	mov	r5, r7
   18ab4:	bls	18ac4 <argp_failure@@Base+0x2010>
   18ab8:	mov	r0, r7
   18abc:	bl	1ae50 <argp_parse@@Base+0x2298>
   18ac0:	ldr	r5, [r9, #4]
   18ac4:	mov	r0, r6
   18ac8:	str	sl, [r7, #12]
   18acc:	bl	11514 <strlen@plt>
   18ad0:	cmp	r0, #0
   18ad4:	beq	18b20 <argp_failure@@Base+0x206c>
   18ad8:	mov	r4, r0
   18adc:	ldr	r0, [r5, #28]
   18ae0:	ldr	r1, [r5, #32]
   18ae4:	add	r2, r0, r4
   18ae8:	cmp	r2, r1
   18aec:	bls	18b08 <argp_failure@@Base+0x2054>
   18af0:	mov	r0, r5
   18af4:	mov	r1, r4
   18af8:	bl	1b3cc <argp_parse@@Base+0x2814>
   18afc:	cmp	r0, #0
   18b00:	beq	18b20 <argp_failure@@Base+0x206c>
   18b04:	ldr	r0, [r5, #28]
   18b08:	mov	r1, r6
   18b0c:	mov	r2, r4
   18b10:	bl	113d0 <memcpy@plt>
   18b14:	ldr	r0, [r5, #28]
   18b18:	add	r0, r0, r4
   18b1c:	str	r0, [r5, #28]
   18b20:	ldr	r5, [r9, #4]
   18b24:	ldr	r2, [r5, #24]
   18b28:	ldr	r0, [r5, #28]
   18b2c:	ldr	r1, [r5, #16]
   18b30:	mov	r4, r5
   18b34:	sub	r2, r0, r2
   18b38:	cmp	r2, r1
   18b3c:	bls	18b50 <argp_failure@@Base+0x209c>
   18b40:	mov	r0, r5
   18b44:	bl	1ae50 <argp_parse@@Base+0x2298>
   18b48:	ldr	r4, [r9, #4]
   18b4c:	ldr	r0, [r4, #28]
   18b50:	mov	r1, #0
   18b54:	str	r1, [r5, #4]
   18b58:	ldr	r1, [r4, #32]
   18b5c:	cmp	r0, r1
   18b60:	bcc	18b7c <argp_failure@@Base+0x20c8>
   18b64:	mov	r0, r4
   18b68:	mov	r1, #1
   18b6c:	bl	1b3cc <argp_parse@@Base+0x2814>
   18b70:	cmp	r0, #0
   18b74:	beq	18b8c <argp_failure@@Base+0x20d8>
   18b78:	ldr	r0, [r4, #28]
   18b7c:	add	r1, r0, #1
   18b80:	str	r1, [r4, #28]
   18b84:	mov	r1, #10
   18b88:	strb	r1, [r0]
   18b8c:	ldr	r0, [r9, #8]
   18b90:	mov	r1, #1
   18b94:	str	r1, [r0, #4]
   18b98:	cmp	r6, r8
   18b9c:	beq	18bb0 <argp_failure@@Base+0x20fc>
   18ba0:	mov	r0, r6
   18ba4:	sub	sp, fp, #28
   18ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bac:	b	19f94 <argp_parse@@Base+0x13dc>
   18bb0:	sub	sp, fp, #28
   18bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018bb8 <argp_parse@@Base>:
   18bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bbc:	add	fp, sp, #28
   18bc0:	sub	sp, sp, #212	; 0xd4
   18bc4:	mov	r4, r3
   18bc8:	mov	r6, r2
   18bcc:	mov	r7, r1
   18bd0:	mov	r5, r0
   18bd4:	tst	r3, #1
   18bd8:	bne	18c0c <argp_parse@@Base+0x54>
   18bdc:	movw	r0, #63012	; 0xf624
   18be0:	movt	r0, #2
   18be4:	ldr	r1, [r0]
   18be8:	cmp	r1, #0
   18bec:	bne	18bf8 <argp_parse@@Base+0x40>
   18bf0:	ldr	r1, [r6]
   18bf4:	str	r1, [r0]
   18bf8:	movw	r8, #63008	; 0xf620
   18bfc:	movt	r8, #2
   18c00:	ldr	r0, [r8]
   18c04:	cmp	r0, #0
   18c08:	beq	18cc8 <argp_parse@@Base+0x110>
   18c0c:	tst	r4, #16
   18c10:	str	r6, [fp, #-228]	; 0xffffff1c
   18c14:	str	r7, [fp, #-232]	; 0xffffff18
   18c18:	bne	18ce4 <argp_parse@@Base+0x12c>
   18c1c:	mov	r1, sp
   18c20:	sub	r3, r1, #64	; 0x40
   18c24:	mov	sp, r3
   18c28:	mov	r2, sp
   18c2c:	sub	r0, r2, #32
   18c30:	mov	sp, r0
   18c34:	vmov.i32	q8, #0	; 0x00000000
   18c38:	sub	r2, r2, #20
   18c3c:	cmp	r5, #0
   18c40:	vst1.32	{d16-d17}, [r2]
   18c44:	mov	r2, r0
   18c48:	vst1.64	{d16-d17}, [r2]!
   18c4c:	str	r3, [r2]
   18c50:	sub	r2, r1, #32
   18c54:	sub	r1, r1, #48	; 0x30
   18c58:	vst1.64	{d16-d17}, [r2]
   18c5c:	vst1.64	{d16-d17}, [r1]
   18c60:	mov	r1, #48	; 0x30
   18c64:	mov	r2, r3
   18c68:	vst1.64	{d16-d17}, [r2], r1
   18c6c:	vst1.64	{d16-d17}, [r2]
   18c70:	movw	r2, #56704	; 0xdd80
   18c74:	strne	r5, [r3], #16
   18c78:	movt	r2, #1
   18c7c:	mov	r1, r3
   18c80:	str	r2, [r1], #16
   18c84:	movw	r2, #63200	; 0xf6e0
   18c88:	movt	r2, #2
   18c8c:	ldr	r2, [r2]
   18c90:	cmp	r2, #0
   18c94:	bne	18cac <argp_parse@@Base+0xf4>
   18c98:	movw	r2, #63116	; 0xf68c
   18c9c:	movt	r2, #2
   18ca0:	ldr	r2, [r2]
   18ca4:	cmp	r2, #0
   18ca8:	beq	18cbc <argp_parse@@Base+0x104>
   18cac:	movw	r2, #56732	; 0xdd9c
   18cb0:	mov	r3, r1
   18cb4:	movt	r2, #1
   18cb8:	str	r2, [r1]
   18cbc:	mov	r1, #0
   18cc0:	str	r1, [r3, #16]
   18cc4:	b	18ce8 <argp_parse@@Base+0x130>
   18cc8:	ldr	r0, [r6]
   18ccc:	bl	19efc <argp_parse@@Base+0x1344>
   18cd0:	str	r0, [r8]
   18cd4:	tst	r4, #16
   18cd8:	str	r6, [fp, #-228]	; 0xffffff1c
   18cdc:	str	r7, [fp, #-232]	; 0xffffff18
   18ce0:	beq	18c1c <argp_parse@@Base+0x64>
   18ce4:	mov	r0, r5
   18ce8:	vmov.i32	q8, #0	; 0x00000000
   18cec:	sub	r9, fp, #96	; 0x60
   18cf0:	mov	r7, #12
   18cf4:	mov	r5, #0
   18cf8:	cmp	r0, #0
   18cfc:	str	r4, [fp, #-224]	; 0xffffff20
   18d00:	str	r0, [fp, #-236]	; 0xffffff14
   18d04:	mov	r1, r9
   18d08:	str	r5, [fp, #-52]	; 0xffffffcc
   18d0c:	str	r5, [fp, #-56]	; 0xffffffc8
   18d10:	str	r5, [fp, #-60]	; 0xffffffc4
   18d14:	vst1.64	{d16-d17}, [r1], r7
   18d18:	vst1.32	{d16-d17}, [r1]
   18d1c:	mov	r1, #1
   18d20:	bic	r3, r1, r4, lsr #2
   18d24:	str	r3, [fp, #-64]	; 0xffffffc0
   18d28:	beq	18d60 <argp_parse@@Base+0x1a8>
   18d2c:	sub	r1, fp, #64	; 0x40
   18d30:	bl	19af4 <argp_parse@@Base+0xf3c>
   18d34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18d38:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18d3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18d40:	mov	r6, #16
   18d44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18d48:	add	r2, r2, r2, lsl #3
   18d4c:	add	r1, r6, r1, lsl #4
   18d50:	mov	r6, #36	; 0x24
   18d54:	lsl	r5, r0, #2
   18d58:	add	r8, r6, r2, lsl #2
   18d5c:	b	18d68 <argp_parse@@Base+0x1b0>
   18d60:	mov	r8, #36	; 0x24
   18d64:	mov	r1, #16
   18d68:	add	r4, r8, r5
   18d6c:	add	sl, r4, r1
   18d70:	add	r0, r3, sl
   18d74:	add	r0, r0, #1
   18d78:	bl	1ad00 <argp_parse@@Base+0x2148>
   18d7c:	cmp	r0, #0
   18d80:	str	r0, [fp, #-100]	; 0xffffff9c
   18d84:	beq	1986c <argp_parse@@Base+0xcb4>
   18d88:	mov	r6, r0
   18d8c:	mov	r0, #12
   18d90:	sub	r1, fp, #220	; 0xdc
   18d94:	mov	r2, r5
   18d98:	vld1.64	{d16-d17}, [r9], r0
   18d9c:	add	r0, r1, #20
   18da0:	add	r7, r6, r8
   18da4:	add	r8, r6, r4
   18da8:	add	r4, r6, sl
   18dac:	vld1.32	{d18-d19}, [r9]
   18db0:	mov	r9, r1
   18db4:	vst1.32	{d16-d17}, [r0]
   18db8:	add	r0, r1, #32
   18dbc:	mov	r1, #0
   18dc0:	vst1.32	{d18-d19}, [r0]
   18dc4:	mov	r0, #1
   18dc8:	str	r6, [fp, #-172]	; 0xffffff54
   18dcc:	str	r0, [fp, #-204]	; 0xffffff34
   18dd0:	str	r0, [fp, #-208]	; 0xffffff30
   18dd4:	mov	r0, r7
   18dd8:	str	r7, [fp, #-164]	; 0xffffff5c
   18ddc:	str	r8, [fp, #-212]	; 0xffffff2c
   18de0:	str	r4, [fp, #-216]	; 0xffffff28
   18de4:	bl	11568 <memset@plt>
   18de8:	ldr	sl, [fp, #-224]	; 0xffffff20
   18dec:	mov	r0, #45	; 0x2d
   18df0:	str	r7, [fp, #-36]	; 0xffffffdc
   18df4:	str	r8, [fp, #-40]	; 0xffffffd8
   18df8:	str	r4, [fp, #-44]	; 0xffffffd4
   18dfc:	str	r9, [fp, #-48]	; 0xffffffd0
   18e00:	tst	sl, #8
   18e04:	moveq	r0, #43	; 0x2b
   18e08:	tsteq	sl, #4
   18e0c:	beq	19440 <argp_parse@@Base+0x888>
   18e10:	add	r1, r4, #1
   18e14:	strb	r0, [r4]
   18e18:	str	r1, [fp, #-44]	; 0xffffffd4
   18e1c:	ldr	r0, [fp, #-236]	; 0xffffff14
   18e20:	ldr	r5, [fp, #-228]	; 0xffffff1c
   18e24:	ldr	r9, [fp, #-232]	; 0xffffff18
   18e28:	mov	r3, #0
   18e2c:	strb	r3, [r1]
   18e30:	str	r3, [r8]
   18e34:	cmp	r0, #0
   18e38:	str	r0, [fp, #-220]	; 0xffffff24
   18e3c:	beq	18e74 <argp_parse@@Base+0x2bc>
   18e40:	sub	sp, sp, #8
   18e44:	sub	r1, fp, #48	; 0x30
   18e48:	mov	r2, #0
   18e4c:	mov	r3, r6
   18e50:	str	r1, [sp]
   18e54:	mov	r1, #0
   18e58:	bl	19be0 <argp_parse@@Base+0x1028>
   18e5c:	add	sp, sp, #8
   18e60:	str	r0, [fp, #-168]	; 0xffffff58
   18e64:	mov	r6, r0
   18e68:	ldr	r3, [fp, #-220]	; 0xffffff24
   18e6c:	ldr	r4, [fp, #-172]	; 0xffffff54
   18e70:	b	18e7c <argp_parse@@Base+0x2c4>
   18e74:	mov	r4, r6
   18e78:	str	r6, [fp, #-168]	; 0xffffff58
   18e7c:	vmov.i32	q8, #0	; 0x00000000
   18e80:	sub	r1, fp, #220	; 0xdc
   18e84:	mov	r7, #0
   18e88:	mov	r0, #1
   18e8c:	mov	r8, r5
   18e90:	cmp	r4, r6
   18e94:	mov	r2, r1
   18e98:	add	r1, r1, #84	; 0x54
   18e9c:	str	r7, [fp, #-116]	; 0xffffff8c
   18ea0:	str	r7, [fp, #-120]	; 0xffffff88
   18ea4:	vst1.32	{d16-d17}, [r1]
   18ea8:	str	sl, [fp, #-140]	; 0xffffff74
   18eac:	str	r5, [fp, #-148]	; 0xffffff6c
   18eb0:	str	r9, [fp, #-152]	; 0xffffff68
   18eb4:	str	r3, [fp, #-156]	; 0xffffff64
   18eb8:	str	r2, [fp, #-104]	; 0xffffff98
   18ebc:	str	r7, [fp, #-144]	; 0xffffff70
   18ec0:	str	r0, [fp, #-160]	; 0xffffff60
   18ec4:	movw	r0, #63016	; 0xf628
   18ec8:	add	sl, r2, #64	; 0x40
   18ecc:	movt	r0, #2
   18ed0:	ldr	r0, [r0]
   18ed4:	str	r0, [fp, #-112]	; 0xffffff90
   18ed8:	movw	r0, #63020	; 0xf62c
   18edc:	movt	r0, #2
   18ee0:	ldr	r0, [r0]
   18ee4:	str	r0, [fp, #-108]	; 0xffffff94
   18ee8:	bcs	18fd4 <argp_parse@@Base+0x41c>
   18eec:	ldr	r0, [fp, #12]
   18ef0:	str	r0, [r4, #24]
   18ef4:	cmp	r7, #7
   18ef8:	cmpne	r7, #0
   18efc:	beq	18f64 <argp_parse@@Base+0x3ac>
   18f00:	b	1986c <argp_parse@@Base+0xcb4>
   18f04:	ldr	r0, [r4, #32]
   18f08:	mov	r1, #0
   18f0c:	mov	r2, sl
   18f10:	str	r0, [fp, #-120]	; 0xffffff88
   18f14:	ldr	r0, [r4, #24]
   18f18:	str	r0, [fp, #-128]	; 0xffffff80
   18f1c:	ldr	r0, [r4, #28]
   18f20:	str	r0, [fp, #-124]	; 0xffffff84
   18f24:	ldr	r0, [r4, #12]
   18f28:	str	r0, [fp, #-136]	; 0xffffff78
   18f2c:	movw	r0, #6
   18f30:	movt	r0, #256	; 0x100
   18f34:	sub	r0, r0, #3
   18f38:	blx	r3
   18f3c:	mov	r7, r0
   18f40:	ldr	r0, [fp, #-120]	; 0xffffff88
   18f44:	str	r0, [r4, #32]
   18f48:	ldr	r0, [fp, #-168]	; 0xffffff58
   18f4c:	add	r4, r4, #36	; 0x24
   18f50:	cmp	r4, r0
   18f54:	bcs	18fc8 <argp_parse@@Base+0x410>
   18f58:	cmp	r7, #7
   18f5c:	cmpne	r7, #0
   18f60:	bne	1986c <argp_parse@@Base+0xcb4>
   18f64:	ldr	r0, [r4, #16]
   18f68:	cmp	r0, #0
   18f6c:	beq	18f80 <argp_parse@@Base+0x3c8>
   18f70:	ldr	r1, [r4, #20]
   18f74:	ldr	r0, [r0, #28]
   18f78:	ldr	r0, [r0, r1, lsl #2]
   18f7c:	str	r0, [r4, #24]
   18f80:	ldr	r3, [r4]
   18f84:	cmp	r3, #0
   18f88:	bne	18f04 <argp_parse@@Base+0x34c>
   18f8c:	ldr	r0, [r4, #4]
   18f90:	mov	r7, #7
   18f94:	ldr	r0, [r0, #16]
   18f98:	cmp	r0, #0
   18f9c:	beq	18f48 <argp_parse@@Base+0x390>
   18fa0:	ldr	r0, [r0]
   18fa4:	cmp	r0, #0
   18fa8:	beq	18f48 <argp_parse@@Base+0x390>
   18fac:	ldr	r0, [r4, #24]
   18fb0:	ldr	r1, [r4, #28]
   18fb4:	str	r0, [r1]
   18fb8:	ldr	r3, [r4]
   18fbc:	cmp	r3, #0
   18fc0:	bne	18f04 <argp_parse@@Base+0x34c>
   18fc4:	b	18f48 <argp_parse@@Base+0x390>
   18fc8:	cmp	r7, #7
   18fcc:	cmpne	r7, #0
   18fd0:	bne	1986c <argp_parse@@Base+0xcb4>
   18fd4:	ldr	r0, [fp, #-140]	; 0xffffff74
   18fd8:	tst	r0, #2
   18fdc:	bne	19008 <argp_parse@@Base+0x450>
   18fe0:	mov	r0, #1
   18fe4:	str	r0, [fp, #-204]	; 0xffffff34
   18fe8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   18fec:	cmp	r0, r8
   18ff0:	bne	1903c <argp_parse@@Base+0x484>
   18ff4:	ldr	r0, [r8]
   18ff8:	cmp	r0, #0
   18ffc:	beq	1903c <argp_parse@@Base+0x484>
   19000:	bl	19efc <argp_parse@@Base+0x1344>
   19004:	b	19048 <argp_parse@@Base+0x490>
   19008:	mov	r1, #0
   1900c:	tst	r0, #1
   19010:	str	r1, [fp, #-204]	; 0xffffff34
   19014:	beq	19030 <argp_parse@@Base+0x478>
   19018:	ldr	r0, [fp, #-152]	; 0xffffff68
   1901c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19020:	sub	r1, r1, #4
   19024:	add	r0, r0, #1
   19028:	str	r1, [fp, #-148]	; 0xffffff6c
   1902c:	str	r0, [fp, #-152]	; 0xffffff68
   19030:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19034:	cmp	r0, r8
   19038:	beq	18ff4 <argp_parse@@Base+0x43c>
   1903c:	movw	r0, #63008	; 0xf620
   19040:	movt	r0, #2
   19044:	ldr	r0, [r0]
   19048:	str	r0, [fp, #-116]	; 0xffffff8c
   1904c:	sub	r0, fp, #220	; 0xdc
   19050:	mov	r8, #0
   19054:	add	r6, r0, #12
   19058:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1905c:	cmp	r0, #0
   19060:	bne	19084 <argp_parse@@Base+0x4cc>
   19064:	b	19094 <argp_parse@@Base+0x4dc>
   19068:	cmp	r0, #7
   1906c:	beq	19448 <argp_parse@@Base+0x890>
   19070:	cmp	r0, #0
   19074:	bne	196bc <argp_parse@@Base+0xb04>
   19078:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1907c:	cmp	r0, #0
   19080:	beq	19094 <argp_parse@@Base+0x4dc>
   19084:	ldr	r9, [fp, #-144]	; 0xffffff70
   19088:	cmp	r9, r0
   1908c:	bge	19148 <argp_parse@@Base+0x590>
   19090:	str	r8, [fp, #-132]	; 0xffffff7c
   19094:	ldr	r0, [fp, #-160]	; 0xffffff60
   19098:	ldr	r9, [fp, #-144]	; 0xffffff70
   1909c:	cmp	r0, #0
   190a0:	beq	19148 <argp_parse@@Base+0x590>
   190a4:	mvn	r0, #0
   190a8:	str	r0, [fp, #-200]	; 0xffffff38
   190ac:	str	r9, [fp, #-208]	; 0xffffff30
   190b0:	ldr	r2, [fp, #-216]	; 0xffffff28
   190b4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   190b8:	ldr	r0, [fp, #-152]	; 0xffffff68
   190bc:	ldr	r1, [fp, #-148]	; 0xffffff6c
   190c0:	ldrb	r7, [fp, #-140]	; 0xffffff74
   190c4:	sub	sp, sp, #8
   190c8:	tst	r7, #64	; 0x40
   190cc:	bne	190e0 <argp_parse@@Base+0x528>
   190d0:	str	r8, [sp]
   190d4:	str	r6, [sp, #4]
   190d8:	bl	19fe8 <argp_parse@@Base+0x1430>
   190dc:	b	190ec <argp_parse@@Base+0x534>
   190e0:	str	r8, [sp]
   190e4:	str	r6, [sp, #4]
   190e8:	bl	1a04c <argp_parse@@Base+0x1494>
   190ec:	add	sp, sp, #8
   190f0:	ldr	r9, [fp, #-208]	; 0xffffff30
   190f4:	mov	r7, r0
   190f8:	cmn	r0, #1
   190fc:	str	r9, [fp, #-144]	; 0xffffff70
   19100:	beq	1911c <argp_parse@@Base+0x564>
   19104:	cmp	r7, #63	; 0x3f
   19108:	beq	192ec <argp_parse@@Base+0x734>
   1910c:	cmp	r7, #1
   19110:	bne	192fc <argp_parse@@Base+0x744>
   19114:	ldr	r7, [fp, #-196]	; 0xffffff3c
   19118:	b	19180 <argp_parse@@Base+0x5c8>
   1911c:	cmp	r9, #2
   19120:	str	r8, [fp, #-160]	; 0xffffff60
   19124:	blt	19148 <argp_parse@@Base+0x590>
   19128:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1912c:	movw	r1, #57187	; 0xdf63
   19130:	movt	r1, #1
   19134:	add	r0, r0, r9, lsl #2
   19138:	ldr	r0, [r0, #-4]
   1913c:	bl	11340 <strcmp@plt>
   19140:	cmp	r0, #0
   19144:	streq	r9, [fp, #-132]	; 0xffffff7c
   19148:	ldr	r2, [fp, #-152]	; 0xffffff68
   1914c:	mov	r1, #1
   19150:	mov	r0, #7
   19154:	cmp	r9, r2
   19158:	bge	19464 <argp_parse@@Base+0x8ac>
   1915c:	ldrb	r2, [fp, #-140]	; 0xffffff74
   19160:	tst	r2, #4
   19164:	bne	19464 <argp_parse@@Base+0x8ac>
   19168:	add	r0, r9, #1
   1916c:	str	r0, [fp, #-144]	; 0xffffff70
   19170:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19174:	ldr	r7, [r1, r9, lsl #2]
   19178:	mov	r9, r0
   1917c:	str	r7, [fp, #-196]	; 0xffffff3c
   19180:	sub	r0, r9, #1
   19184:	str	r0, [fp, #-144]	; 0xffffff70
   19188:	ldr	r1, [fp, #-172]	; 0xffffff54
   1918c:	ldr	r2, [fp, #-168]	; 0xffffff58
   19190:	cmp	r1, r2
   19194:	bcs	19448 <argp_parse@@Base+0x890>
   19198:	add	r4, r1, #24
   1919c:	add	r1, r0, #1
   191a0:	str	r1, [fp, #-144]	; 0xffffff70
   191a4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   191a8:	cmp	r3, #0
   191ac:	beq	19264 <argp_parse@@Base+0x6ac>
   191b0:	ldr	r0, [r4, #8]
   191b4:	mov	r1, r7
   191b8:	mov	r2, sl
   191bc:	mov	r5, #0
   191c0:	str	r0, [fp, #-120]	; 0xffffff88
   191c4:	ldr	r0, [r4]
   191c8:	str	r0, [fp, #-128]	; 0xffffff80
   191cc:	ldr	r0, [r4, #4]
   191d0:	str	r0, [fp, #-124]	; 0xffffff84
   191d4:	ldr	r0, [r4, #-12]
   191d8:	str	r0, [fp, #-136]	; 0xffffff78
   191dc:	mov	r0, #0
   191e0:	blx	r3
   191e4:	ldr	r1, [fp, #-120]	; 0xffffff88
   191e8:	cmp	r0, #7
   191ec:	str	r1, [r4, #8]
   191f0:	bne	1927c <argp_parse@@Base+0x6c4>
   191f4:	ldr	r0, [fp, #-144]	; 0xffffff70
   191f8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   191fc:	sub	r0, r0, #1
   19200:	cmp	r3, #0
   19204:	str	r0, [fp, #-144]	; 0xffffff70
   19208:	beq	19268 <argp_parse@@Base+0x6b0>
   1920c:	ldr	r0, [r4]
   19210:	mov	r1, #0
   19214:	mov	r2, sl
   19218:	str	r0, [fp, #-128]	; 0xffffff80
   1921c:	ldr	r0, [r4, #4]
   19220:	str	r0, [fp, #-124]	; 0xffffff84
   19224:	ldr	r0, [r4, #-12]
   19228:	str	r0, [fp, #-136]	; 0xffffff78
   1922c:	movw	r0, #6
   19230:	movt	r0, #256	; 0x100
   19234:	blx	r3
   19238:	ldr	r1, [fp, #-120]	; 0xffffff88
   1923c:	str	r1, [r4, #8]
   19240:	cmp	r0, #7
   19244:	bne	19274 <argp_parse@@Base+0x6bc>
   19248:	ldr	r2, [fp, #-168]	; 0xffffff58
   1924c:	add	r1, r4, #12
   19250:	cmp	r1, r2
   19254:	bcs	19274 <argp_parse@@Base+0x6bc>
   19258:	ldr	r0, [fp, #-144]	; 0xffffff70
   1925c:	add	r4, r4, #36	; 0x24
   19260:	b	1919c <argp_parse@@Base+0x5e4>
   19264:	str	r0, [fp, #-144]	; 0xffffff70
   19268:	mov	r0, #7
   1926c:	cmp	r0, #7
   19270:	beq	19248 <argp_parse@@Base+0x690>
   19274:	movw	r5, #6
   19278:	movt	r5, #256	; 0x100
   1927c:	cmp	r0, #0
   19280:	bne	19068 <argp_parse@@Base+0x4b0>
   19284:	movw	r0, #6
   19288:	movt	r0, #256	; 0x100
   1928c:	cmp	r5, r0
   19290:	bne	192c8 <argp_parse@@Base+0x710>
   19294:	ldr	r0, [fp, #-152]	; 0xffffff68
   19298:	str	r0, [fp, #-144]	; 0xffffff70
   1929c:	cmp	r0, r9
   192a0:	blt	192d4 <argp_parse@@Base+0x71c>
   192a4:	ldr	r1, [r4, #-12]
   192a8:	sub	r0, r0, r9
   192ac:	add	r0, r0, r1
   192b0:	add	r0, r0, #1
   192b4:	str	r0, [r4, #-12]
   192b8:	mov	r0, #0
   192bc:	cmp	r0, #0
   192c0:	beq	19078 <argp_parse@@Base+0x4c0>
   192c4:	b	196bc <argp_parse@@Base+0xb04>
   192c8:	ldr	r0, [fp, #-144]	; 0xffffff70
   192cc:	cmp	r0, r9
   192d0:	bge	192a4 <argp_parse@@Base+0x6ec>
   192d4:	mov	r0, #1
   192d8:	str	r0, [fp, #-160]	; 0xffffff60
   192dc:	mov	r0, #0
   192e0:	cmp	r0, #0
   192e4:	beq	19078 <argp_parse@@Base+0x4c0>
   192e8:	b	196bc <argp_parse@@Base+0xb04>
   192ec:	ldr	r0, [fp, #-200]	; 0xffffff38
   192f0:	cmn	r0, #1
   192f4:	beq	19374 <argp_parse@@Base+0x7bc>
   192f8:	b	198ac <argp_parse@@Base+0xcf4>
   192fc:	cmp	r8, r7, asr #24
   19300:	beq	19374 <argp_parse@@Base+0x7bc>
   19304:	asr	r0, r7, #24
   19308:	ldr	r1, [fp, #-172]	; 0xffffff54
   1930c:	sub	r0, r0, #1
   19310:	add	r0, r0, r0, lsl #3
   19314:	ldr	r3, [r1, r0, lsl #2]
   19318:	cmp	r3, #0
   1931c:	beq	19878 <argp_parse@@Base+0xcc0>
   19320:	add	r4, r1, r0, lsl #2
   19324:	tst	r7, #8388608	; 0x800000
   19328:	mov	r2, sl
   1932c:	ldr	r0, [r4, #32]!
   19330:	str	r0, [fp, #-120]	; 0xffffff88
   19334:	ldr	r0, [r4, #-8]
   19338:	str	r0, [fp, #-128]	; 0xffffff80
   1933c:	ldr	r0, [r4, #-4]
   19340:	str	r0, [fp, #-124]	; 0xffffff84
   19344:	ldr	r0, [r4, #-20]	; 0xffffffec
   19348:	str	r0, [fp, #-136]	; 0xffffff78
   1934c:	bic	r0, r7, #-16777216	; 0xff000000
   19350:	ldr	r1, [fp, #-196]	; 0xffffff3c
   19354:	orrne	r0, r0, #-16777216	; 0xff000000
   19358:	blx	r3
   1935c:	mov	r1, #0
   19360:	ldr	r2, [fp, #-120]	; 0xffffff88
   19364:	cmp	r0, #7
   19368:	str	r2, [r4]
   1936c:	bne	19070 <argp_parse@@Base+0x4b8>
   19370:	b	19414 <argp_parse@@Base+0x85c>
   19374:	ldr	r0, [fp, #-216]	; 0xffffff28
   19378:	mov	r1, r7
   1937c:	bl	11520 <strchr@plt>
   19380:	cmp	r0, #0
   19384:	beq	1941c <argp_parse@@Base+0x864>
   19388:	ldr	r1, [fp, #-172]	; 0xffffff54
   1938c:	ldr	r2, [fp, #-168]	; 0xffffff58
   19390:	cmp	r1, r2
   19394:	bcs	1941c <argp_parse@@Base+0x864>
   19398:	add	r1, r1, #24
   1939c:	ldr	r3, [r1, #-16]
   193a0:	cmp	r3, r0
   193a4:	bhi	193c0 <argp_parse@@Base+0x808>
   193a8:	add	r3, r1, #36	; 0x24
   193ac:	add	r1, r1, #12
   193b0:	cmp	r1, r2
   193b4:	mov	r1, r3
   193b8:	bcc	1939c <argp_parse@@Base+0x7e4>
   193bc:	b	1941c <argp_parse@@Base+0x864>
   193c0:	ldr	r3, [r1, #-24]	; 0xffffffe8
   193c4:	cmp	r3, #0
   193c8:	beq	1941c <argp_parse@@Base+0x864>
   193cc:	mov	r4, r1
   193d0:	mov	r2, sl
   193d4:	ldr	r0, [r4, #8]!
   193d8:	str	r0, [fp, #-120]	; 0xffffff88
   193dc:	ldr	r0, [r1]
   193e0:	str	r0, [fp, #-128]	; 0xffffff80
   193e4:	ldr	r0, [r1, #4]
   193e8:	str	r0, [fp, #-124]	; 0xffffff84
   193ec:	ldr	r0, [r1, #-12]
   193f0:	str	r0, [fp, #-136]	; 0xffffff78
   193f4:	mov	r0, r7
   193f8:	ldr	r1, [fp, #-196]	; 0xffffff3c
   193fc:	blx	r3
   19400:	mov	r1, #1
   19404:	ldr	r2, [fp, #-120]	; 0xffffff88
   19408:	cmp	r0, #7
   1940c:	str	r2, [r4]
   19410:	bne	19070 <argp_parse@@Base+0x4b8>
   19414:	cmp	r1, #0
   19418:	beq	19878 <argp_parse@@Base+0xcc0>
   1941c:	movw	r1, #57190	; 0xdf66
   19420:	movw	r3, #56928	; 0xde60
   19424:	mov	r0, sl
   19428:	mov	r2, r7
   1942c:	movt	r1, #1
   19430:	movt	r3, #1
   19434:	bl	1694c <argp_error@@Base>
   19438:	mov	r0, #0
   1943c:	b	19450 <argp_parse@@Base+0x898>
   19440:	mov	r1, r4
   19444:	b	18e1c <argp_parse@@Base+0x264>
   19448:	mov	r7, #1
   1944c:	mov	r0, #1
   19450:	add	r1, r7, #1
   19454:	clz	r1, r1
   19458:	lsr	r1, r1, #5
   1945c:	orr	r1, r1, r0
   19460:	mov	r0, #7
   19464:	subs	r7, r0, #7
   19468:	movne	r7, r0
   1946c:	cmp	r1, #0
   19470:	moveq	r7, r0
   19474:	cmp	r7, #0
   19478:	beq	19540 <argp_parse@@Base+0x988>
   1947c:	cmp	r7, #0
   19480:	beq	1970c <argp_parse@@Base+0xb54>
   19484:	cmp	r7, #7
   19488:	bne	194a0 <argp_parse@@Base+0x8e8>
   1948c:	ldr	r1, [fp, #-112]	; 0xffffff90
   19490:	mov	r0, sl
   19494:	mov	r2, #260	; 0x104
   19498:	bl	16890 <argp_state_help@@Base>
   1949c:	mov	r7, #7
   194a0:	ldr	r4, [fp, #-172]	; 0xffffff54
   194a4:	ldr	r0, [fp, #-168]	; 0xffffff58
   194a8:	cmp	r4, r0
   194ac:	bcs	197d4 <argp_parse@@Base+0xc1c>
   194b0:	movw	r1, #6
   194b4:	movt	r1, #256	; 0x100
   194b8:	sub	r6, r1, #1
   194bc:	ldr	r3, [r4]
   194c0:	cmp	r3, #0
   194c4:	bne	194e0 <argp_parse@@Base+0x928>
   194c8:	add	r4, r4, #36	; 0x24
   194cc:	cmp	r4, r0
   194d0:	bcs	19528 <argp_parse@@Base+0x970>
   194d4:	ldr	r3, [r4]
   194d8:	cmp	r3, #0
   194dc:	beq	194c8 <argp_parse@@Base+0x910>
   194e0:	ldr	r0, [r4, #32]
   194e4:	mov	r1, #0
   194e8:	mov	r2, sl
   194ec:	str	r0, [fp, #-120]	; 0xffffff88
   194f0:	ldr	r0, [r4, #24]
   194f4:	str	r0, [fp, #-128]	; 0xffffff80
   194f8:	ldr	r0, [r4, #28]
   194fc:	str	r0, [fp, #-124]	; 0xffffff84
   19500:	ldr	r0, [r4, #12]
   19504:	str	r0, [fp, #-136]	; 0xffffff78
   19508:	mov	r0, r6
   1950c:	blx	r3
   19510:	ldr	r0, [fp, #-120]	; 0xffffff88
   19514:	str	r0, [r4, #32]
   19518:	ldr	r0, [fp, #-168]	; 0xffffff58
   1951c:	add	r4, r4, #36	; 0x24
   19520:	cmp	r4, r0
   19524:	bcc	194d4 <argp_parse@@Base+0x91c>
   19528:	ldr	r4, [fp, #-172]	; 0xffffff54
   1952c:	ldr	r0, [fp, #-168]	; 0xffffff58
   19530:	sub	r6, r0, #36	; 0x24
   19534:	cmp	r6, r4
   19538:	bcs	197e4 <argp_parse@@Base+0xc2c>
   1953c:	b	1985c <argp_parse@@Base+0xca4>
   19540:	ldr	r1, [fp, #-152]	; 0xffffff68
   19544:	ldr	r0, [fp, #-144]	; 0xffffff70
   19548:	cmp	r0, r1
   1954c:	bne	196a8 <argp_parse@@Base+0xaf0>
   19550:	ldr	r4, [fp, #-172]	; 0xffffff54
   19554:	ldr	r1, [fp, #-168]	; 0xffffff58
   19558:	mov	r0, #0
   1955c:	cmp	r4, r1
   19560:	bcs	19604 <argp_parse@@Base+0xa4c>
   19564:	movw	r0, #6
   19568:	mov	r7, #0
   1956c:	movt	r0, #256	; 0x100
   19570:	sub	r6, r0, #4
   19574:	mov	r0, #0
   19578:	cmp	r0, #7
   1957c:	cmpne	r0, #0
   19580:	beq	195d8 <argp_parse@@Base+0xa20>
   19584:	b	19600 <argp_parse@@Base+0xa48>
   19588:	ldr	r0, [r4, #32]
   1958c:	mov	r1, #0
   19590:	mov	r2, sl
   19594:	str	r0, [fp, #-120]	; 0xffffff88
   19598:	ldr	r0, [r4, #24]
   1959c:	str	r0, [fp, #-128]	; 0xffffff80
   195a0:	ldr	r0, [r4, #28]
   195a4:	str	r7, [fp, #-136]	; 0xffffff78
   195a8:	str	r0, [fp, #-124]	; 0xffffff84
   195ac:	mov	r0, r6
   195b0:	blx	r3
   195b4:	ldr	r1, [fp, #-120]	; 0xffffff88
   195b8:	str	r1, [r4, #32]
   195bc:	ldr	r1, [fp, #-168]	; 0xffffff58
   195c0:	add	r4, r4, #36	; 0x24
   195c4:	cmp	r4, r1
   195c8:	bcs	19600 <argp_parse@@Base+0xa48>
   195cc:	cmp	r0, #7
   195d0:	cmpne	r0, #0
   195d4:	bne	19600 <argp_parse@@Base+0xa48>
   195d8:	ldr	r2, [r4, #12]
   195dc:	cmp	r2, #0
   195e0:	bne	195c0 <argp_parse@@Base+0xa08>
   195e4:	ldr	r3, [r4]
   195e8:	cmp	r3, #0
   195ec:	bne	19588 <argp_parse@@Base+0x9d0>
   195f0:	mov	r0, #7
   195f4:	add	r4, r4, #36	; 0x24
   195f8:	cmp	r4, r1
   195fc:	bcc	195cc <argp_parse@@Base+0xa14>
   19600:	ldr	r4, [fp, #-172]	; 0xffffff54
   19604:	sub	r7, r1, #36	; 0x24
   19608:	cmp	r7, r4
   1960c:	bcc	1969c <argp_parse@@Base+0xae4>
   19610:	movw	r1, #6
   19614:	movt	r1, #256	; 0x100
   19618:	sub	r6, r1, #5
   1961c:	cmp	r0, #7
   19620:	cmpne	r0, #0
   19624:	beq	19648 <argp_parse@@Base+0xa90>
   19628:	b	196f0 <argp_parse@@Base+0xb38>
   1962c:	mov	r0, #7
   19630:	sub	r7, r7, #36	; 0x24
   19634:	cmp	r7, r4
   19638:	bcc	1969c <argp_parse@@Base+0xae4>
   1963c:	cmp	r0, #7
   19640:	cmpne	r0, #0
   19644:	bne	196f0 <argp_parse@@Base+0xb38>
   19648:	ldr	r3, [r7]
   1964c:	cmp	r3, #0
   19650:	beq	1962c <argp_parse@@Base+0xa74>
   19654:	ldr	r0, [r7, #32]
   19658:	mov	r1, #0
   1965c:	mov	r2, sl
   19660:	str	r0, [fp, #-120]	; 0xffffff88
   19664:	ldr	r0, [r7, #24]
   19668:	str	r0, [fp, #-128]	; 0xffffff80
   1966c:	ldr	r0, [r7, #28]
   19670:	str	r0, [fp, #-124]	; 0xffffff84
   19674:	ldr	r0, [r7, #12]
   19678:	str	r0, [fp, #-136]	; 0xffffff78
   1967c:	mov	r0, r6
   19680:	blx	r3
   19684:	ldr	r1, [fp, #-120]	; 0xffffff88
   19688:	str	r1, [r7, #32]
   1968c:	ldr	r4, [fp, #-172]	; 0xffffff54
   19690:	sub	r7, r7, #36	; 0x24
   19694:	cmp	r7, r4
   19698:	bcs	1963c <argp_parse@@Base+0xa84>
   1969c:	subs	r7, r0, #7
   196a0:	movne	r7, r0
   196a4:	b	196f4 <argp_parse@@Base+0xb3c>
   196a8:	ldr	r1, [fp, #8]
   196ac:	cmp	r1, #0
   196b0:	beq	196c4 <argp_parse@@Base+0xb0c>
   196b4:	str	r0, [r1]
   196b8:	b	1970c <argp_parse@@Base+0xb54>
   196bc:	mov	r1, #0
   196c0:	b	19464 <argp_parse@@Base+0x8ac>
   196c4:	ldrb	r0, [fp, #-140]	; 0xffffff74
   196c8:	tst	r0, #2
   196cc:	bne	1948c <argp_parse@@Base+0x8d4>
   196d0:	ldr	r0, [fp, #-112]	; 0xffffff90
   196d4:	cmp	r0, #0
   196d8:	beq	1948c <argp_parse@@Base+0x8d4>
   196dc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   196e0:	movw	r1, #57211	; 0xdf7b
   196e4:	movt	r1, #1
   196e8:	bl	1152c <fprintf@plt>
   196ec:	b	1948c <argp_parse@@Base+0x8d4>
   196f0:	mov	r7, r0
   196f4:	ldr	r1, [fp, #8]
   196f8:	cmp	r1, #0
   196fc:	ldrne	r0, [fp, #-144]	; 0xffffff70
   19700:	strne	r0, [r1]
   19704:	cmp	r7, #0
   19708:	bne	19484 <argp_parse@@Base+0x8cc>
   1970c:	ldr	r0, [fp, #-168]	; 0xffffff58
   19710:	ldr	r4, [fp, #-172]	; 0xffffff54
   19714:	mov	r7, #0
   19718:	sub	r5, r0, #36	; 0x24
   1971c:	cmp	r5, r4
   19720:	bcc	197d4 <argp_parse@@Base+0xc1c>
   19724:	movw	r1, #6
   19728:	mov	r0, #0
   1972c:	movt	r1, #256	; 0x100
   19730:	sub	r6, r1, #2
   19734:	cmp	r0, #7
   19738:	cmpne	r0, #0
   1973c:	beq	19760 <argp_parse@@Base+0xba8>
   19740:	b	197d0 <argp_parse@@Base+0xc18>
   19744:	mov	r0, #7
   19748:	sub	r5, r5, #36	; 0x24
   1974c:	cmp	r5, r4
   19750:	bcc	197b4 <argp_parse@@Base+0xbfc>
   19754:	cmp	r0, #7
   19758:	cmpne	r0, #0
   1975c:	bne	197d0 <argp_parse@@Base+0xc18>
   19760:	ldr	r3, [r5]
   19764:	cmp	r3, #0
   19768:	beq	19744 <argp_parse@@Base+0xb8c>
   1976c:	ldr	r0, [r5, #32]
   19770:	mov	r1, #0
   19774:	mov	r2, sl
   19778:	str	r0, [fp, #-120]	; 0xffffff88
   1977c:	ldr	r0, [r5, #24]
   19780:	str	r0, [fp, #-128]	; 0xffffff80
   19784:	ldr	r0, [r5, #28]
   19788:	str	r0, [fp, #-124]	; 0xffffff84
   1978c:	ldr	r0, [r5, #12]
   19790:	str	r0, [fp, #-136]	; 0xffffff78
   19794:	mov	r0, r6
   19798:	blx	r3
   1979c:	ldr	r1, [fp, #-120]	; 0xffffff88
   197a0:	str	r1, [r5, #32]
   197a4:	ldr	r4, [fp, #-172]	; 0xffffff54
   197a8:	sub	r5, r5, #36	; 0x24
   197ac:	cmp	r5, r4
   197b0:	bcs	19754 <argp_parse@@Base+0xb9c>
   197b4:	subs	r7, r0, #7
   197b8:	movne	r7, r0
   197bc:	ldr	r0, [fp, #-168]	; 0xffffff58
   197c0:	sub	r6, r0, #36	; 0x24
   197c4:	cmp	r6, r4
   197c8:	bcc	1985c <argp_parse@@Base+0xca4>
   197cc:	b	197e4 <argp_parse@@Base+0xc2c>
   197d0:	mov	r7, r0
   197d4:	ldr	r0, [fp, #-168]	; 0xffffff58
   197d8:	sub	r6, r0, #36	; 0x24
   197dc:	cmp	r6, r4
   197e0:	bcc	1985c <argp_parse@@Base+0xca4>
   197e4:	movw	r0, #6
   197e8:	movt	r0, #256	; 0x100
   197ec:	add	r5, r0, #1
   197f0:	ldr	r3, [r6]
   197f4:	cmp	r3, #0
   197f8:	bne	19814 <argp_parse@@Base+0xc5c>
   197fc:	sub	r6, r6, #36	; 0x24
   19800:	cmp	r6, r4
   19804:	bcc	1985c <argp_parse@@Base+0xca4>
   19808:	ldr	r3, [r6]
   1980c:	cmp	r3, #0
   19810:	beq	197fc <argp_parse@@Base+0xc44>
   19814:	ldr	r0, [r6, #32]
   19818:	mov	r1, #0
   1981c:	mov	r2, sl
   19820:	str	r0, [fp, #-120]	; 0xffffff88
   19824:	ldr	r0, [r6, #24]
   19828:	str	r0, [fp, #-128]	; 0xffffff80
   1982c:	ldr	r0, [r6, #28]
   19830:	str	r0, [fp, #-124]	; 0xffffff84
   19834:	ldr	r0, [r6, #12]
   19838:	str	r0, [fp, #-136]	; 0xffffff78
   1983c:	mov	r0, r5
   19840:	blx	r3
   19844:	ldr	r0, [fp, #-120]	; 0xffffff88
   19848:	str	r0, [r6, #32]
   1984c:	ldr	r4, [fp, #-172]	; 0xffffff54
   19850:	sub	r6, r6, #36	; 0x24
   19854:	cmp	r6, r4
   19858:	bcs	19808 <argp_parse@@Base+0xc50>
   1985c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19860:	bl	19f94 <argp_parse@@Base+0x13dc>
   19864:	cmp	r7, #7
   19868:	movweq	r7, #22
   1986c:	mov	r0, r7
   19870:	sub	sp, fp, #28
   19874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19878:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1987c:	ldr	r1, [r0, #12]
   19880:	cmp	r1, r7
   19884:	beq	198b4 <argp_parse@@Base+0xcfc>
   19888:	ldr	r1, [r0]
   1988c:	cmp	r1, #0
   19890:	beq	198b4 <argp_parse@@Base+0xcfc>
   19894:	add	r1, r0, #16
   19898:	ldr	r0, [r0, #28]
   1989c:	cmp	r0, r7
   198a0:	mov	r0, r1
   198a4:	bne	19888 <argp_parse@@Base+0xcd0>
   198a8:	b	198b8 <argp_parse@@Base+0xd00>
   198ac:	mov	r1, #0
   198b0:	b	19460 <argp_parse@@Base+0x8a8>
   198b4:	mov	r1, r0
   198b8:	ldr	r0, [r1]
   198bc:	movw	r1, #57198	; 0xdf6e
   198c0:	movw	r3, #56928	; 0xde60
   198c4:	movw	r2, #57207	; 0xdf77
   198c8:	movt	r1, #1
   198cc:	movt	r3, #1
   198d0:	movt	r2, #1
   198d4:	cmp	r0, #0
   198d8:	movne	r2, r0
   198dc:	mov	r0, sl
   198e0:	b	19434 <argp_parse@@Base+0x87c>
   198e4:	mov	ip, r0
   198e8:	mov	r0, #0
   198ec:	cmp	r1, #0
   198f0:	beq	19920 <argp_parse@@Base+0xd68>
   198f4:	ldr	r3, [r1, #52]	; 0x34
   198f8:	ldr	r1, [r3, #48]	; 0x30
   198fc:	ldr	r3, [r3, #52]	; 0x34
   19900:	cmp	r1, r3
   19904:	bxcs	lr
   19908:	ldr	r2, [r1, #4]
   1990c:	cmp	r2, ip
   19910:	beq	1991c <argp_parse@@Base+0xd64>
   19914:	add	r1, r1, #36	; 0x24
   19918:	b	19900 <argp_parse@@Base+0xd48>
   1991c:	ldr	r0, [r1, #24]
   19920:	bx	lr
   19924:	push	{r4, r5, r6, sl, fp, lr}
   19928:	add	fp, sp, #16
   1992c:	mov	r5, r2
   19930:	mov	r6, r1
   19934:	mov	r4, #7
   19938:	cmn	r0, #3
   1993c:	bgt	1996c <argp_parse@@Base+0xdb4>
   19940:	cmn	r0, #4
   19944:	beq	19998 <argp_parse@@Base+0xde0>
   19948:	cmn	r0, #3
   1994c:	bne	19a34 <argp_parse@@Base+0xe7c>
   19950:	ldr	r1, [r5, #48]	; 0x30
   19954:	mov	r0, r5
   19958:	movw	r2, #513	; 0x201
   1995c:	bl	16890 <argp_state_help@@Base>
   19960:	mov	r4, #0
   19964:	mov	r0, r4
   19968:	pop	{r4, r5, r6, sl, fp, pc}
   1996c:	cmn	r0, #2
   19970:	beq	199f4 <argp_parse@@Base+0xe3c>
   19974:	cmp	r0, #63	; 0x3f
   19978:	bne	19a34 <argp_parse@@Base+0xe7c>
   1997c:	ldr	r1, [r5, #48]	; 0x30
   19980:	mov	r0, r5
   19984:	movw	r2, #634	; 0x27a
   19988:	bl	16890 <argp_state_help@@Base>
   1998c:	mov	r4, #0
   19990:	mov	r0, r4
   19994:	pop	{r4, r5, r6, sl, fp, pc}
   19998:	movw	r0, #57125	; 0xdf25
   1999c:	cmp	r6, #0
   199a0:	mov	r1, #0
   199a4:	mov	r2, #10
   199a8:	mov	r4, #0
   199ac:	movt	r0, #1
   199b0:	movne	r0, r6
   199b4:	bl	1134c <strtol@plt>
   199b8:	movw	r5, #63112	; 0xf688
   199bc:	movt	r5, #2
   199c0:	str	r0, [r5]
   199c4:	ldr	r0, [r5]
   199c8:	subs	r0, r0, #1
   199cc:	str	r0, [r5]
   199d0:	blt	19a34 <argp_parse@@Base+0xe7c>
   199d4:	mov	r0, #1
   199d8:	bl	1140c <sleep@plt>
   199dc:	ldr	r0, [r5]
   199e0:	sub	r1, r0, #1
   199e4:	cmp	r0, #0
   199e8:	str	r1, [r5]
   199ec:	bgt	199d4 <argp_parse@@Base+0xe1c>
   199f0:	b	19a34 <argp_parse@@Base+0xe7c>
   199f4:	movw	r0, #63012	; 0xf624
   199f8:	movt	r0, #2
   199fc:	str	r6, [r0]
   19a00:	mov	r0, r6
   19a04:	bl	19efc <argp_parse@@Base+0x1344>
   19a08:	movw	r1, #63008	; 0xf620
   19a0c:	str	r0, [r5, #40]	; 0x28
   19a10:	mov	r4, #0
   19a14:	movt	r1, #2
   19a18:	str	r0, [r1]
   19a1c:	ldr	r0, [r5, #16]
   19a20:	and	r0, r0, #3
   19a24:	cmp	r0, #1
   19a28:	bne	19a34 <argp_parse@@Base+0xe7c>
   19a2c:	ldr	r0, [r5, #8]
   19a30:	str	r6, [r0]
   19a34:	mov	r0, r4
   19a38:	pop	{r4, r5, r6, sl, fp, pc}
   19a3c:	push	{r4, sl, fp, lr}
   19a40:	add	fp, sp, #8
   19a44:	mov	r1, r0
   19a48:	mov	r0, #7
   19a4c:	cmp	r1, #86	; 0x56
   19a50:	popne	{r4, sl, fp, pc}
   19a54:	movw	r0, #63116	; 0xf68c
   19a58:	mov	r4, r2
   19a5c:	movt	r0, #2
   19a60:	ldr	r2, [r0]
   19a64:	cmp	r2, #0
   19a68:	beq	19a8c <argp_parse@@Base+0xed4>
   19a6c:	ldr	r0, [r4, #48]	; 0x30
   19a70:	mov	r1, r4
   19a74:	blx	r2
   19a78:	ldrb	r1, [r4, #16]
   19a7c:	mov	r0, #0
   19a80:	tst	r1, #32
   19a84:	beq	19ac0 <argp_parse@@Base+0xf08>
   19a88:	pop	{r4, sl, fp, pc}
   19a8c:	movw	r0, #63200	; 0xf6e0
   19a90:	movt	r0, #2
   19a94:	ldr	r2, [r0]
   19a98:	cmp	r2, #0
   19a9c:	beq	19ac8 <argp_parse@@Base+0xf10>
   19aa0:	ldr	r0, [r4, #48]	; 0x30
   19aa4:	movw	r1, #57338	; 0xdffa
   19aa8:	movt	r1, #1
   19aac:	bl	1152c <fprintf@plt>
   19ab0:	ldrb	r1, [r4, #16]
   19ab4:	mov	r0, #0
   19ab8:	tst	r1, #32
   19abc:	bne	19a88 <argp_parse@@Base+0xed0>
   19ac0:	mov	r0, #0
   19ac4:	bl	114f0 <exit@plt>
   19ac8:	movw	r1, #55159	; 0xd777
   19acc:	movw	r2, #57152	; 0xdf40
   19ad0:	mov	r0, r4
   19ad4:	movt	r1, #1
   19ad8:	movt	r2, #1
   19adc:	bl	1694c <argp_error@@Base>
   19ae0:	ldrb	r1, [r4, #16]
   19ae4:	mov	r0, #0
   19ae8:	tst	r1, #32
   19aec:	bne	19a88 <argp_parse@@Base+0xed0>
   19af0:	b	19ac0 <argp_parse@@Base+0xf08>
   19af4:	push	{r4, r5, fp, lr}
   19af8:	add	fp, sp, #8
   19afc:	ldr	r2, [r0]
   19b00:	ldr	ip, [r0, #16]
   19b04:	mov	r4, r1
   19b08:	cmp	r2, #0
   19b0c:	beq	19b84 <argp_parse@@Base+0xfcc>
   19b10:	ldr	r0, [r4, #8]
   19b14:	mov	r3, #0
   19b18:	add	r0, r0, #1
   19b1c:	str	r0, [r4, #8]
   19b20:	mov	r0, #0
   19b24:	add	r5, r2, r3, lsl #3
   19b28:	ldr	r1, [r5, #4]
   19b2c:	cmp	r1, #0
   19b30:	beq	19b4c <argp_parse@@Base+0xf94>
   19b34:	add	r3, r3, #3
   19b38:	add	r0, r0, #1
   19b3c:	add	r5, r2, r3, lsl #3
   19b40:	ldr	r1, [r5, #4]
   19b44:	cmp	r1, #0
   19b48:	bne	19b34 <argp_parse@@Base+0xf7c>
   19b4c:	ldr	r1, [r2, r3, lsl #3]
   19b50:	cmp	r1, #0
   19b54:	bne	19b34 <argp_parse@@Base+0xf7c>
   19b58:	ldr	r1, [r5, #16]
   19b5c:	cmp	r1, #0
   19b60:	bne	19b34 <argp_parse@@Base+0xf7c>
   19b64:	ldr	r1, [r5, #20]
   19b68:	cmp	r1, #0
   19b6c:	bne	19b34 <argp_parse@@Base+0xf7c>
   19b70:	ldr	r1, [r4]
   19b74:	mov	r2, r4
   19b78:	add	r1, r1, r3
   19b7c:	str	r1, [r2], #4
   19b80:	b	19b98 <argp_parse@@Base+0xfe0>
   19b84:	ldr	r0, [r0, #4]
   19b88:	cmp	r0, #0
   19b8c:	beq	19ba4 <argp_parse@@Base+0xfec>
   19b90:	add	r2, r4, #8
   19b94:	mov	r0, #1
   19b98:	ldr	r1, [r2]
   19b9c:	add	r0, r1, r0
   19ba0:	str	r0, [r2]
   19ba4:	cmp	ip, #0
   19ba8:	beq	19bdc <argp_parse@@Base+0x1024>
   19bac:	ldr	r0, [ip]
   19bb0:	cmp	r0, #0
   19bb4:	popeq	{r4, r5, fp, pc}
   19bb8:	add	r5, ip, #16
   19bbc:	mov	r1, r4
   19bc0:	bl	19af4 <argp_parse@@Base+0xf3c>
   19bc4:	ldr	r0, [r4, #12]
   19bc8:	add	r0, r0, #1
   19bcc:	str	r0, [r4, #12]
   19bd0:	ldr	r0, [r5], #16
   19bd4:	cmp	r0, #0
   19bd8:	bne	19bbc <argp_parse@@Base+0x1004>
   19bdc:	pop	{r4, r5, fp, pc}
   19be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19be4:	add	fp, sp, #28
   19be8:	sub	sp, sp, #28
   19bec:	ldr	sl, [r0]
   19bf0:	ldr	r5, [r0, #16]
   19bf4:	ldr	r6, [fp, #8]
   19bf8:	mov	r7, r3
   19bfc:	cmp	sl, #0
   19c00:	beq	19ddc <argp_parse@@Base+0x1224>
   19c04:	str	r0, [sp, #8]
   19c08:	add	r0, sp, #16
   19c0c:	mov	r8, sl
   19c10:	str	r2, [sp, #12]
   19c14:	stm	r0, {r1, r5, r7}
   19c18:	ldr	r5, [r8, #4]
   19c1c:	cmp	r5, #0
   19c20:	bne	19cc8 <argp_parse@@Base+0x1110>
   19c24:	b	19ca4 <argp_parse@@Base+0x10ec>
   19c28:	ldr	r0, [r6, #8]
   19c2c:	str	r5, [r0]
   19c30:	ldr	r1, [sl, #8]
   19c34:	cmp	r1, #0
   19c38:	beq	19dbc <argp_parse@@Base+0x1204>
   19c3c:	ldrb	r1, [sl, #12]
   19c40:	tst	r1, #1
   19c44:	mov	r1, #2
   19c48:	movweq	r1, #1
   19c4c:	mov	r5, #0
   19c50:	stmib	r0, {r1, r5}
   19c54:	ldr	r1, [r8, #4]
   19c58:	ldr	r2, [r7, #48]	; 0x30
   19c5c:	ldr	r3, [sp, #24]
   19c60:	cmp	r1, #0
   19c64:	sub	r2, r3, r2
   19c68:	mov	r3, #956301312	; 0x39000000
   19c6c:	ldreq	r1, [sl, #4]
   19c70:	lsr	r2, r2, #2
   19c74:	mul	r2, r2, r3
   19c78:	bic	r1, r1, #-16777216	; 0xff000000
   19c7c:	orr	r1, r2, r1
   19c80:	add	r1, r1, #16777216	; 0x1000000
   19c84:	str	r1, [r0, #12]
   19c88:	add	r1, r0, #16
   19c8c:	str	r1, [r6, #8]
   19c90:	str	r5, [r0, #16]
   19c94:	add	r8, r8, #24
   19c98:	ldr	r5, [r8, #4]
   19c9c:	cmp	r5, #0
   19ca0:	bne	19cc8 <argp_parse@@Base+0x1110>
   19ca4:	ldr	r0, [r8]
   19ca8:	cmp	r0, #0
   19cac:	bne	19cc8 <argp_parse@@Base+0x1110>
   19cb0:	ldr	r0, [r8, #16]
   19cb4:	cmp	r0, #0
   19cb8:	bne	19cc8 <argp_parse@@Base+0x1110>
   19cbc:	ldr	r0, [r8, #20]
   19cc0:	cmp	r0, #0
   19cc4:	beq	19dc4 <argp_parse@@Base+0x120c>
   19cc8:	ldr	r0, [r8, #12]
   19ccc:	tst	r0, #4
   19cd0:	moveq	sl, r8
   19cd4:	ldrb	r1, [sl, #12]
   19cd8:	tst	r1, #8
   19cdc:	bne	19c94 <argp_parse@@Base+0x10dc>
   19ce0:	sub	r1, r5, #1
   19ce4:	cmp	r1, #254	; 0xfe
   19ce8:	bhi	19d68 <argp_parse@@Base+0x11b0>
   19cec:	ands	r0, r0, #8
   19cf0:	bne	19d68 <argp_parse@@Base+0x11b0>
   19cf4:	bl	114d8 <__ctype_b_loc@plt>
   19cf8:	ldr	r0, [r0]
   19cfc:	add	r0, r0, r5, lsl #1
   19d00:	ldrb	r0, [r0, #1]
   19d04:	tst	r0, #64	; 0x40
   19d08:	beq	19d68 <argp_parse@@Base+0x11b0>
   19d0c:	ldr	r0, [r6, #4]
   19d10:	add	r1, r0, #1
   19d14:	str	r1, [r6, #4]
   19d18:	strb	r5, [r0]
   19d1c:	ldr	r0, [sl, #8]
   19d20:	cmp	r0, #0
   19d24:	beq	19d5c <argp_parse@@Base+0x11a4>
   19d28:	ldr	r0, [r6, #4]
   19d2c:	add	r1, r0, #1
   19d30:	str	r1, [r6, #4]
   19d34:	mov	r1, #58	; 0x3a
   19d38:	strb	r1, [r0]
   19d3c:	ldrb	r0, [sl, #12]
   19d40:	tst	r0, #1
   19d44:	beq	19d5c <argp_parse@@Base+0x11a4>
   19d48:	ldr	r0, [r6, #4]
   19d4c:	add	r1, r0, #1
   19d50:	str	r1, [r6, #4]
   19d54:	mov	r1, #58	; 0x3a
   19d58:	strb	r1, [r0]
   19d5c:	ldr	r0, [r6, #4]
   19d60:	mov	r1, #0
   19d64:	strb	r1, [r0]
   19d68:	ldr	r5, [r8]
   19d6c:	cmp	r5, #0
   19d70:	beq	19c94 <argp_parse@@Base+0x10dc>
   19d74:	ldr	r7, [r6]
   19d78:	ldr	r9, [r7, #8]
   19d7c:	ldr	r0, [r9]
   19d80:	cmp	r0, #0
   19d84:	beq	19c28 <argp_parse@@Base+0x1070>
   19d88:	mov	r4, r9
   19d8c:	mov	r1, r5
   19d90:	bl	11340 <strcmp@plt>
   19d94:	cmp	r0, #0
   19d98:	beq	19dac <argp_parse@@Base+0x11f4>
   19d9c:	ldr	r0, [r4, #16]!
   19da0:	cmp	r0, #0
   19da4:	bne	19d8c <argp_parse@@Base+0x11d4>
   19da8:	b	19c28 <argp_parse@@Base+0x1070>
   19dac:	sub	r0, r4, r9
   19db0:	cmn	r0, #1
   19db4:	bgt	19c94 <argp_parse@@Base+0x10dc>
   19db8:	b	19c28 <argp_parse@@Base+0x1070>
   19dbc:	mov	r1, #0
   19dc0:	b	19c4c <argp_parse@@Base+0x1094>
   19dc4:	ldr	r0, [sp, #8]
   19dc8:	add	r7, sp, #16
   19dcc:	ldr	r2, [sp, #12]
   19dd0:	ldm	r7, {r1, r5, r7}
   19dd4:	ldr	r3, [r0, #4]
   19dd8:	b	19de8 <argp_parse@@Base+0x1230>
   19ddc:	ldr	r3, [r0, #4]
   19de0:	cmp	r3, #0
   19de4:	beq	19e8c <argp_parse@@Base+0x12d4>
   19de8:	str	r0, [r7, #4]
   19dec:	str	r3, [r7]
   19df0:	mov	r0, #0
   19df4:	cmp	r5, #0
   19df8:	add	ip, r7, #12
   19dfc:	ldr	r3, [r6, #4]
   19e00:	str	r0, [r7, #32]
   19e04:	str	r0, [r7, #24]
   19e08:	stm	ip, {r0, r1, r2}
   19e0c:	str	r0, [r7, #28]
   19e10:	str	r3, [r7, #8]
   19e14:	beq	19e3c <argp_parse@@Base+0x1284>
   19e18:	ldr	r1, [r5, r0, lsl #2]
   19e1c:	add	r0, r0, #4
   19e20:	cmp	r1, #0
   19e24:	bne	19e18 <argp_parse@@Base+0x1260>
   19e28:	ldr	r1, [r6, #12]
   19e2c:	add	r0, r1, r0
   19e30:	str	r1, [r7, #28]
   19e34:	sub	r0, r0, #4
   19e38:	str	r0, [r6, #12]
   19e3c:	add	r3, r7, #36	; 0x24
   19e40:	cmp	r5, #0
   19e44:	beq	19e80 <argp_parse@@Base+0x12c8>
   19e48:	ldr	r0, [r5]
   19e4c:	cmp	r0, #0
   19e50:	beq	19e80 <argp_parse@@Base+0x12c8>
   19e54:	add	r4, r5, #16
   19e58:	mov	r5, #0
   19e5c:	mov	r1, r7
   19e60:	mov	r2, r5
   19e64:	str	r6, [sp]
   19e68:	bl	19be0 <argp_parse@@Base+0x1028>
   19e6c:	mov	r3, r0
   19e70:	ldr	r0, [r4, r5, lsl #4]
   19e74:	add	r5, r5, #1
   19e78:	cmp	r0, #0
   19e7c:	bne	19e5c <argp_parse@@Base+0x12a4>
   19e80:	mov	r0, r3
   19e84:	sub	sp, fp, #28
   19e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e8c:	mov	r3, r7
   19e90:	mov	r7, #0
   19e94:	cmp	r5, #0
   19e98:	bne	19e48 <argp_parse@@Base+0x1290>
   19e9c:	b	19e80 <argp_parse@@Base+0x12c8>
   19ea0:	movw	r2, #63120	; 0xf690
   19ea4:	movt	r2, #2
   19ea8:	stm	r2, {r0, r1}
   19eac:	movw	r0, #63116	; 0xf68c
   19eb0:	movw	r1, #40644	; 0x9ec4
   19eb4:	movt	r0, #2
   19eb8:	movt	r1, #1
   19ebc:	str	r1, [r0]
   19ec0:	bx	lr
   19ec4:	push	{fp, lr}
   19ec8:	mov	fp, sp
   19ecc:	sub	sp, sp, #8
   19ed0:	movw	r2, #63120	; 0xf690
   19ed4:	movw	r3, #57249	; 0xdfa1
   19ed8:	movt	r2, #2
   19edc:	movt	r3, #1
   19ee0:	ldm	r2, {r1, r2}
   19ee4:	str	r2, [sp]
   19ee8:	movw	r2, #57235	; 0xdf93
   19eec:	movt	r2, #1
   19ef0:	bl	1a3fc <argp_parse@@Base+0x1844>
   19ef4:	mov	sp, fp
   19ef8:	pop	{fp, pc}
   19efc:	sub	r0, r0, #1
   19f00:	ldrb	r3, [r0, #1]!
   19f04:	cmp	r3, #47	; 0x2f
   19f08:	beq	19f00 <argp_parse@@Base+0x1348>
   19f0c:	mov	r2, #0
   19f10:	mov	r1, r0
   19f14:	uxtb	r3, r3
   19f18:	cmp	r3, #47	; 0x2f
   19f1c:	bne	19f34 <argp_parse@@Base+0x137c>
   19f20:	ldrb	r3, [r1, #1]!
   19f24:	mov	r2, #1
   19f28:	uxtb	r3, r3
   19f2c:	cmp	r3, #47	; 0x2f
   19f30:	beq	19f20 <argp_parse@@Base+0x1368>
   19f34:	cmp	r3, #0
   19f38:	bxeq	lr
   19f3c:	tst	r2, #1
   19f40:	mov	r2, #0
   19f44:	movne	r0, r1
   19f48:	ldrb	r3, [r1, #1]!
   19f4c:	uxtb	r3, r3
   19f50:	cmp	r3, #47	; 0x2f
   19f54:	bne	19f34 <argp_parse@@Base+0x137c>
   19f58:	b	19f20 <argp_parse@@Base+0x1368>
   19f5c:	push	{r4, sl, fp, lr}
   19f60:	add	fp, sp, #8
   19f64:	mov	r4, r0
   19f68:	bl	11514 <strlen@plt>
   19f6c:	mov	r1, r0
   19f70:	sub	r2, r4, #1
   19f74:	mov	r0, r1
   19f78:	cmp	r1, #2
   19f7c:	bcc	19f90 <argp_parse@@Base+0x13d8>
   19f80:	ldrb	r3, [r2, r0]
   19f84:	sub	r1, r0, #1
   19f88:	cmp	r3, #47	; 0x2f
   19f8c:	beq	19f74 <argp_parse@@Base+0x13bc>
   19f90:	pop	{r4, sl, fp, pc}
   19f94:	push	{r4, r5, r6, sl, fp, lr}
   19f98:	add	fp, sp, #16
   19f9c:	mov	r4, r0
   19fa0:	bl	11538 <__errno_location@plt>
   19fa4:	ldr	r6, [r0]
   19fa8:	mov	r5, r0
   19fac:	mov	r0, r4
   19fb0:	bl	113ac <free@plt>
   19fb4:	str	r6, [r5]
   19fb8:	pop	{r4, r5, r6, sl, fp, pc}
   19fbc:	push	{fp, lr}
   19fc0:	mov	fp, sp
   19fc4:	sub	sp, sp, #16
   19fc8:	mov	ip, #0
   19fcc:	str	ip, [sp, #8]
   19fd0:	str	ip, [sp, #4]
   19fd4:	ldr	ip, [fp, #8]
   19fd8:	str	ip, [sp]
   19fdc:	bl	1ca6c <argp_parse@@Base+0x3eb4>
   19fe0:	mov	sp, fp
   19fe4:	pop	{fp, pc}
   19fe8:	push	{fp, lr}
   19fec:	mov	fp, sp
   19ff0:	sub	sp, sp, #16
   19ff4:	mov	ip, #0
   19ff8:	str	ip, [sp, #12]
   19ffc:	str	ip, [sp, #4]
   1a000:	ldr	ip, [fp, #12]
   1a004:	str	ip, [sp, #8]
   1a008:	ldr	ip, [fp, #8]
   1a00c:	str	ip, [sp]
   1a010:	bl	1b54c <argp_parse@@Base+0x2994>
   1a014:	mov	sp, fp
   1a018:	pop	{fp, pc}
   1a01c:	push	{fp, lr}
   1a020:	mov	fp, sp
   1a024:	sub	sp, sp, #16
   1a028:	mov	ip, #0
   1a02c:	str	ip, [sp, #8]
   1a030:	mov	ip, #1
   1a034:	str	ip, [sp, #4]
   1a038:	ldr	ip, [fp, #8]
   1a03c:	str	ip, [sp]
   1a040:	bl	1ca6c <argp_parse@@Base+0x3eb4>
   1a044:	mov	sp, fp
   1a048:	pop	{fp, pc}
   1a04c:	push	{fp, lr}
   1a050:	mov	fp, sp
   1a054:	sub	sp, sp, #16
   1a058:	mov	ip, #0
   1a05c:	str	ip, [sp, #12]
   1a060:	mov	ip, #1
   1a064:	str	ip, [sp, #4]
   1a068:	ldr	ip, [fp, #12]
   1a06c:	str	ip, [sp, #8]
   1a070:	ldr	ip, [fp, #8]
   1a074:	str	ip, [sp]
   1a078:	bl	1b54c <argp_parse@@Base+0x2994>
   1a07c:	mov	sp, fp
   1a080:	pop	{fp, pc}
   1a084:	push	{r4, r5, fp, lr}
   1a088:	add	fp, sp, #8
   1a08c:	cmp	r0, #0
   1a090:	beq	1a124 <argp_parse@@Base+0x156c>
   1a094:	mov	r1, #47	; 0x2f
   1a098:	mov	r4, r0
   1a09c:	bl	115c8 <strrchr@plt>
   1a0a0:	cmp	r0, #0
   1a0a4:	mov	r5, r4
   1a0a8:	addne	r5, r0, #1
   1a0ac:	sub	r0, r5, r4
   1a0b0:	cmp	r0, #7
   1a0b4:	blt	1a108 <argp_parse@@Base+0x1550>
   1a0b8:	movw	r1, #57318	; 0xdfe6
   1a0bc:	sub	r0, r5, #7
   1a0c0:	mov	r2, #7
   1a0c4:	movt	r1, #1
   1a0c8:	bl	11658 <strncmp@plt>
   1a0cc:	cmp	r0, #0
   1a0d0:	bne	1a108 <argp_parse@@Base+0x1550>
   1a0d4:	movw	r1, #57326	; 0xdfee
   1a0d8:	mov	r0, r5
   1a0dc:	mov	r2, #3
   1a0e0:	movt	r1, #1
   1a0e4:	bl	11658 <strncmp@plt>
   1a0e8:	cmp	r0, #0
   1a0ec:	beq	1a0f8 <argp_parse@@Base+0x1540>
   1a0f0:	mov	r4, r5
   1a0f4:	b	1a108 <argp_parse@@Base+0x1550>
   1a0f8:	movw	r0, #63008	; 0xf620
   1a0fc:	add	r4, r5, #3
   1a100:	movt	r0, #2
   1a104:	str	r4, [r0]
   1a108:	movw	r0, #63012	; 0xf624
   1a10c:	movt	r0, #2
   1a110:	str	r4, [r0]
   1a114:	movw	r0, #63128	; 0xf698
   1a118:	movt	r0, #2
   1a11c:	str	r4, [r0]
   1a120:	pop	{r4, r5, fp, pc}
   1a124:	movw	r0, #63016	; 0xf628
   1a128:	mov	r1, #55	; 0x37
   1a12c:	mov	r2, #1
   1a130:	movt	r0, #2
   1a134:	ldr	r3, [r0]
   1a138:	movw	r0, #57262	; 0xdfae
   1a13c:	movt	r0, #1
   1a140:	bl	11460 <fwrite@plt>
   1a144:	bl	11664 <abort@plt>
   1a148:	push	{r4, r5, r6, r7, fp, lr}
   1a14c:	add	fp, sp, #16
   1a150:	sub	sp, sp, #32
   1a154:	ldr	r7, [fp, #12]
   1a158:	ldr	r6, [fp, #8]
   1a15c:	mov	r4, r2
   1a160:	mov	r5, r0
   1a164:	cmp	r1, #0
   1a168:	beq	1a188 <argp_parse@@Base+0x15d0>
   1a16c:	mov	r2, r1
   1a170:	movw	r1, #57330	; 0xdff2
   1a174:	str	r3, [sp]
   1a178:	mov	r0, r5
   1a17c:	mov	r3, r4
   1a180:	movt	r1, #1
   1a184:	b	1a198 <argp_parse@@Base+0x15e0>
   1a188:	movw	r1, #57342	; 0xdffe
   1a18c:	mov	r0, r5
   1a190:	mov	r2, r4
   1a194:	movt	r1, #1
   1a198:	bl	1152c <fprintf@plt>
   1a19c:	movw	r1, #58106	; 0xe2fa
   1a1a0:	movw	r2, #57349	; 0xe005
   1a1a4:	mov	r0, r5
   1a1a8:	movw	r3, #2022	; 0x7e6
   1a1ac:	movt	r1, #1
   1a1b0:	movt	r2, #1
   1a1b4:	bl	1152c <fprintf@plt>
   1a1b8:	mov	r0, #10
   1a1bc:	mov	r1, r5
   1a1c0:	bl	115e0 <fputc@plt>
   1a1c4:	movw	r1, #57353	; 0xe009
   1a1c8:	movw	r2, #57524	; 0xe0b4
   1a1cc:	mov	r0, r5
   1a1d0:	movt	r1, #1
   1a1d4:	movt	r2, #1
   1a1d8:	bl	1152c <fprintf@plt>
   1a1dc:	mov	r0, #10
   1a1e0:	mov	r1, r5
   1a1e4:	bl	115e0 <fputc@plt>
   1a1e8:	cmp	r7, #9
   1a1ec:	bhi	1a228 <argp_parse@@Base+0x1670>
   1a1f0:	add	r0, pc, #0
   1a1f4:	ldr	pc, [r0, r7, lsl #2]
   1a1f8:	andeq	sl, r1, r0, lsr #4
   1a1fc:	andeq	sl, r1, r8, ror #4
   1a200:	andeq	sl, r1, r4, lsl #5
   1a204:	andeq	sl, r1, r0, lsr #5
   1a208:	andeq	sl, r1, r4, asr #5
   1a20c:	andeq	sl, r1, ip, ror #5
   1a210:	andeq	sl, r1, r4, lsl r3
   1a214:	andeq	sl, r1, r4, asr #6
   1a218:			; <UNDEFINED> instruction: 0x0001a3bc
   1a21c:	andeq	sl, r1, ip, ror r3
   1a220:	sub	sp, fp, #16
   1a224:	pop	{r4, r5, r6, r7, fp, pc}
   1a228:	add	r7, r6, #8
   1a22c:	add	lr, r6, #20
   1a230:	ldm	r6, {r2, r3}
   1a234:	ldr	r6, [r6, #32]
   1a238:	ldm	r7, {r0, r1, r7}
   1a23c:	ldm	lr, {r4, ip, lr}
   1a240:	stm	sp, {r0, r1, r7}
   1a244:	movw	r1, #57877	; 0xe215
   1a248:	add	r0, sp, #12
   1a24c:	stm	r0, {r4, ip, lr}
   1a250:	str	r6, [sp, #24]
   1a254:	movt	r1, #1
   1a258:	mov	r0, r5
   1a25c:	bl	1152c <fprintf@plt>
   1a260:	sub	sp, fp, #16
   1a264:	pop	{r4, r5, r6, r7, fp, pc}
   1a268:	ldr	r2, [r6]
   1a26c:	movw	r1, #57558	; 0xe0d6
   1a270:	mov	r0, r5
   1a274:	movt	r1, #1
   1a278:	sub	sp, fp, #16
   1a27c:	pop	{r4, r5, r6, r7, fp, lr}
   1a280:	b	1152c <fprintf@plt>
   1a284:	ldm	r6, {r2, r3}
   1a288:	movw	r1, #57574	; 0xe0e6
   1a28c:	mov	r0, r5
   1a290:	movt	r1, #1
   1a294:	sub	sp, fp, #16
   1a298:	pop	{r4, r5, r6, r7, fp, lr}
   1a29c:	b	1152c <fprintf@plt>
   1a2a0:	ldr	r0, [r6, #8]
   1a2a4:	movw	r1, #57597	; 0xe0fd
   1a2a8:	ldm	r6, {r2, r3}
   1a2ac:	movt	r1, #1
   1a2b0:	str	r0, [sp]
   1a2b4:	mov	r0, r5
   1a2b8:	bl	1152c <fprintf@plt>
   1a2bc:	sub	sp, fp, #16
   1a2c0:	pop	{r4, r5, r6, r7, fp, pc}
   1a2c4:	ldr	r0, [r6, #8]
   1a2c8:	ldm	r6, {r2, r3}
   1a2cc:	ldr	r1, [r6, #12]
   1a2d0:	stm	sp, {r0, r1}
   1a2d4:	movw	r1, #57625	; 0xe119
   1a2d8:	movt	r1, #1
   1a2dc:	mov	r0, r5
   1a2e0:	bl	1152c <fprintf@plt>
   1a2e4:	sub	sp, fp, #16
   1a2e8:	pop	{r4, r5, r6, r7, fp, pc}
   1a2ec:	add	r7, r6, #8
   1a2f0:	ldm	r6, {r2, r3}
   1a2f4:	ldm	r7, {r0, r1, r7}
   1a2f8:	stm	sp, {r0, r1, r7}
   1a2fc:	movw	r1, #57657	; 0xe139
   1a300:	movt	r1, #1
   1a304:	mov	r0, r5
   1a308:	bl	1152c <fprintf@plt>
   1a30c:	sub	sp, fp, #16
   1a310:	pop	{r4, r5, r6, r7, fp, pc}
   1a314:	add	r7, r6, #8
   1a318:	ldm	r6, {r2, r3}
   1a31c:	ldr	r6, [r6, #20]
   1a320:	ldm	r7, {r0, r1, r7}
   1a324:	stm	sp, {r0, r1, r7}
   1a328:	movw	r1, #57693	; 0xe15d
   1a32c:	str	r6, [sp, #12]
   1a330:	movt	r1, #1
   1a334:	mov	r0, r5
   1a338:	bl	1152c <fprintf@plt>
   1a33c:	sub	sp, fp, #16
   1a340:	pop	{r4, r5, r6, r7, fp, pc}
   1a344:	add	r7, r6, #8
   1a348:	ldm	r6, {r2, r3}
   1a34c:	ldr	r4, [r6, #20]
   1a350:	ldr	r6, [r6, #24]
   1a354:	ldm	r7, {r0, r1, r7}
   1a358:	stm	sp, {r0, r1, r7}
   1a35c:	movw	r1, #57733	; 0xe185
   1a360:	str	r4, [sp, #12]
   1a364:	str	r6, [sp, #16]
   1a368:	movt	r1, #1
   1a36c:	mov	r0, r5
   1a370:	bl	1152c <fprintf@plt>
   1a374:	sub	sp, fp, #16
   1a378:	pop	{r4, r5, r6, r7, fp, pc}
   1a37c:	add	r7, r6, #8
   1a380:	add	lr, r6, #20
   1a384:	ldm	r6, {r2, r3}
   1a388:	ldr	r6, [r6, #32]
   1a38c:	ldm	r7, {r0, r1, r7}
   1a390:	ldm	lr, {r4, ip, lr}
   1a394:	stm	sp, {r0, r1, r7}
   1a398:	movw	r1, #57825	; 0xe1e1
   1a39c:	add	r0, sp, #12
   1a3a0:	stm	r0, {r4, ip, lr}
   1a3a4:	str	r6, [sp, #24]
   1a3a8:	movt	r1, #1
   1a3ac:	mov	r0, r5
   1a3b0:	bl	1152c <fprintf@plt>
   1a3b4:	sub	sp, fp, #16
   1a3b8:	pop	{r4, r5, r6, r7, fp, pc}
   1a3bc:	add	r7, r6, #8
   1a3c0:	ldm	r6, {r2, r3}
   1a3c4:	ldr	r4, [r6, #20]
   1a3c8:	ldr	ip, [r6, #24]
   1a3cc:	ldr	r6, [r6, #28]
   1a3d0:	ldm	r7, {r0, r1, r7}
   1a3d4:	stm	sp, {r0, r1, r7}
   1a3d8:	movw	r1, #57777	; 0xe1b1
   1a3dc:	str	r4, [sp, #12]
   1a3e0:	str	ip, [sp, #16]
   1a3e4:	str	r6, [sp, #20]
   1a3e8:	movt	r1, #1
   1a3ec:	mov	r0, r5
   1a3f0:	bl	1152c <fprintf@plt>
   1a3f4:	sub	sp, fp, #16
   1a3f8:	pop	{r4, r5, r6, r7, fp, pc}
   1a3fc:	push	{r4, sl, fp, lr}
   1a400:	add	fp, sp, #8
   1a404:	sub	sp, sp, #8
   1a408:	ldr	ip, [fp, #8]
   1a40c:	mov	lr, #0
   1a410:	ldr	r4, [ip, lr, lsl #2]
   1a414:	add	lr, lr, #1
   1a418:	cmp	r4, #0
   1a41c:	bne	1a410 <argp_parse@@Base+0x1858>
   1a420:	sub	r4, lr, #1
   1a424:	str	ip, [sp]
   1a428:	str	r4, [sp, #4]
   1a42c:	bl	1a148 <argp_parse@@Base+0x1590>
   1a430:	sub	sp, fp, #8
   1a434:	pop	{r4, sl, fp, pc}
   1a438:	push	{fp, lr}
   1a43c:	mov	fp, sp
   1a440:	sub	sp, sp, #48	; 0x30
   1a444:	ldr	ip, [fp, #8]
   1a448:	ldr	lr, [ip]
   1a44c:	cmp	lr, #0
   1a450:	str	lr, [sp, #8]
   1a454:	beq	1a4f0 <argp_parse@@Base+0x1938>
   1a458:	ldr	lr, [ip, #4]
   1a45c:	cmp	lr, #0
   1a460:	str	lr, [sp, #12]
   1a464:	beq	1a4f8 <argp_parse@@Base+0x1940>
   1a468:	ldr	lr, [ip, #8]
   1a46c:	cmp	lr, #0
   1a470:	str	lr, [sp, #16]
   1a474:	beq	1a500 <argp_parse@@Base+0x1948>
   1a478:	ldr	lr, [ip, #12]
   1a47c:	cmp	lr, #0
   1a480:	str	lr, [sp, #20]
   1a484:	beq	1a508 <argp_parse@@Base+0x1950>
   1a488:	ldr	lr, [ip, #16]
   1a48c:	cmp	lr, #0
   1a490:	str	lr, [sp, #24]
   1a494:	beq	1a510 <argp_parse@@Base+0x1958>
   1a498:	ldr	lr, [ip, #20]
   1a49c:	cmp	lr, #0
   1a4a0:	str	lr, [sp, #28]
   1a4a4:	beq	1a518 <argp_parse@@Base+0x1960>
   1a4a8:	ldr	lr, [ip, #24]
   1a4ac:	cmp	lr, #0
   1a4b0:	str	lr, [sp, #32]
   1a4b4:	beq	1a520 <argp_parse@@Base+0x1968>
   1a4b8:	ldr	lr, [ip, #28]
   1a4bc:	cmp	lr, #0
   1a4c0:	str	lr, [sp, #36]	; 0x24
   1a4c4:	beq	1a528 <argp_parse@@Base+0x1970>
   1a4c8:	ldr	lr, [ip, #32]
   1a4cc:	cmp	lr, #0
   1a4d0:	str	lr, [sp, #40]	; 0x28
   1a4d4:	beq	1a530 <argp_parse@@Base+0x1978>
   1a4d8:	ldr	lr, [ip, #36]	; 0x24
   1a4dc:	mov	ip, #10
   1a4e0:	cmp	lr, #0
   1a4e4:	str	lr, [sp, #44]	; 0x2c
   1a4e8:	movweq	ip, #9
   1a4ec:	b	1a534 <argp_parse@@Base+0x197c>
   1a4f0:	mov	ip, #0
   1a4f4:	b	1a534 <argp_parse@@Base+0x197c>
   1a4f8:	mov	ip, #1
   1a4fc:	b	1a534 <argp_parse@@Base+0x197c>
   1a500:	mov	ip, #2
   1a504:	b	1a534 <argp_parse@@Base+0x197c>
   1a508:	mov	ip, #3
   1a50c:	b	1a534 <argp_parse@@Base+0x197c>
   1a510:	mov	ip, #4
   1a514:	b	1a534 <argp_parse@@Base+0x197c>
   1a518:	mov	ip, #5
   1a51c:	b	1a534 <argp_parse@@Base+0x197c>
   1a520:	mov	ip, #6
   1a524:	b	1a534 <argp_parse@@Base+0x197c>
   1a528:	mov	ip, #7
   1a52c:	b	1a534 <argp_parse@@Base+0x197c>
   1a530:	mov	ip, #8
   1a534:	add	lr, sp, #8
   1a538:	str	ip, [sp, #4]
   1a53c:	str	lr, [sp]
   1a540:	bl	1a148 <argp_parse@@Base+0x1590>
   1a544:	mov	sp, fp
   1a548:	pop	{fp, pc}
   1a54c:	push	{fp, lr}
   1a550:	mov	fp, sp
   1a554:	sub	sp, sp, #56	; 0x38
   1a558:	add	ip, fp, #8
   1a55c:	str	ip, [sp, #12]
   1a560:	ldr	lr, [fp, #8]
   1a564:	cmp	lr, #0
   1a568:	str	lr, [sp, #16]
   1a56c:	beq	1a608 <argp_parse@@Base+0x1a50>
   1a570:	ldr	lr, [ip, #4]
   1a574:	cmp	lr, #0
   1a578:	str	lr, [sp, #20]
   1a57c:	beq	1a610 <argp_parse@@Base+0x1a58>
   1a580:	ldr	lr, [ip, #8]
   1a584:	cmp	lr, #0
   1a588:	str	lr, [sp, #24]
   1a58c:	beq	1a618 <argp_parse@@Base+0x1a60>
   1a590:	ldr	lr, [ip, #12]
   1a594:	cmp	lr, #0
   1a598:	str	lr, [sp, #28]
   1a59c:	beq	1a620 <argp_parse@@Base+0x1a68>
   1a5a0:	ldr	lr, [ip, #16]
   1a5a4:	cmp	lr, #0
   1a5a8:	str	lr, [sp, #32]
   1a5ac:	beq	1a628 <argp_parse@@Base+0x1a70>
   1a5b0:	ldr	lr, [ip, #20]
   1a5b4:	cmp	lr, #0
   1a5b8:	str	lr, [sp, #36]	; 0x24
   1a5bc:	beq	1a630 <argp_parse@@Base+0x1a78>
   1a5c0:	ldr	lr, [ip, #24]
   1a5c4:	cmp	lr, #0
   1a5c8:	str	lr, [sp, #40]	; 0x28
   1a5cc:	beq	1a638 <argp_parse@@Base+0x1a80>
   1a5d0:	ldr	lr, [ip, #28]
   1a5d4:	cmp	lr, #0
   1a5d8:	str	lr, [sp, #44]	; 0x2c
   1a5dc:	beq	1a640 <argp_parse@@Base+0x1a88>
   1a5e0:	ldr	lr, [ip, #32]
   1a5e4:	cmp	lr, #0
   1a5e8:	str	lr, [sp, #48]	; 0x30
   1a5ec:	beq	1a648 <argp_parse@@Base+0x1a90>
   1a5f0:	ldr	lr, [ip, #36]	; 0x24
   1a5f4:	mov	ip, #10
   1a5f8:	cmp	lr, #0
   1a5fc:	str	lr, [sp, #52]	; 0x34
   1a600:	movweq	ip, #9
   1a604:	b	1a64c <argp_parse@@Base+0x1a94>
   1a608:	mov	ip, #0
   1a60c:	b	1a64c <argp_parse@@Base+0x1a94>
   1a610:	mov	ip, #1
   1a614:	b	1a64c <argp_parse@@Base+0x1a94>
   1a618:	mov	ip, #2
   1a61c:	b	1a64c <argp_parse@@Base+0x1a94>
   1a620:	mov	ip, #3
   1a624:	b	1a64c <argp_parse@@Base+0x1a94>
   1a628:	mov	ip, #4
   1a62c:	b	1a64c <argp_parse@@Base+0x1a94>
   1a630:	mov	ip, #5
   1a634:	b	1a64c <argp_parse@@Base+0x1a94>
   1a638:	mov	ip, #6
   1a63c:	b	1a64c <argp_parse@@Base+0x1a94>
   1a640:	mov	ip, #7
   1a644:	b	1a64c <argp_parse@@Base+0x1a94>
   1a648:	mov	ip, #8
   1a64c:	add	lr, sp, #16
   1a650:	str	ip, [sp, #4]
   1a654:	str	lr, [sp]
   1a658:	bl	1a148 <argp_parse@@Base+0x1590>
   1a65c:	mov	sp, fp
   1a660:	pop	{fp, pc}
   1a664:	push	{fp, lr}
   1a668:	mov	fp, sp
   1a66c:	movw	r0, #63020	; 0xf62c
   1a670:	movt	r0, #2
   1a674:	ldr	r1, [r0]
   1a678:	mov	r0, #10
   1a67c:	bl	115e0 <fputc@plt>
   1a680:	movw	r0, #57937	; 0xe251
   1a684:	movw	r1, #57957	; 0xe265
   1a688:	movt	r0, #1
   1a68c:	movt	r1, #1
   1a690:	bl	11364 <printf@plt>
   1a694:	movw	r0, #57979	; 0xe27b
   1a698:	movw	r1, #57235	; 0xdf93
   1a69c:	movw	r2, #57999	; 0xe28f
   1a6a0:	movt	r0, #1
   1a6a4:	movt	r1, #1
   1a6a8:	movt	r2, #1
   1a6ac:	bl	11364 <printf@plt>
   1a6b0:	movw	r0, #58038	; 0xe2b6
   1a6b4:	movw	r1, #58077	; 0xe2dd
   1a6b8:	movt	r0, #1
   1a6bc:	movt	r1, #1
   1a6c0:	pop	{fp, lr}
   1a6c4:	b	11364 <printf@plt>
   1a6c8:	push	{r4, r5, r6, sl, fp, lr}
   1a6cc:	add	fp, sp, #16
   1a6d0:	mov	r4, r2
   1a6d4:	mov	r5, r1
   1a6d8:	mov	r6, r0
   1a6dc:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a6e0:	cmp	r0, #0
   1a6e4:	popne	{r4, r5, r6, sl, fp, pc}
   1a6e8:	cmp	r6, #0
   1a6ec:	beq	1a700 <argp_parse@@Base+0x1b48>
   1a6f0:	cmp	r5, #0
   1a6f4:	cmpne	r4, #0
   1a6f8:	bne	1a700 <argp_parse@@Base+0x1b48>
   1a6fc:	pop	{r4, r5, r6, sl, fp, pc}
   1a700:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a704:	push	{r4, r5, r6, sl, fp, lr}
   1a708:	add	fp, sp, #16
   1a70c:	mov	r4, r2
   1a710:	mov	r5, r1
   1a714:	mov	r6, r0
   1a718:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a71c:	cmp	r0, #0
   1a720:	popne	{r4, r5, r6, sl, fp, pc}
   1a724:	cmp	r6, #0
   1a728:	beq	1a73c <argp_parse@@Base+0x1b84>
   1a72c:	cmp	r5, #0
   1a730:	cmpne	r4, #0
   1a734:	bne	1a73c <argp_parse@@Base+0x1b84>
   1a738:	pop	{r4, r5, r6, sl, fp, pc}
   1a73c:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a740:	push	{fp, lr}
   1a744:	mov	fp, sp
   1a748:	bl	1ad00 <argp_parse@@Base+0x2148>
   1a74c:	cmp	r0, #0
   1a750:	popne	{fp, pc}
   1a754:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a758:	push	{fp, lr}
   1a75c:	mov	fp, sp
   1a760:	bl	1ad00 <argp_parse@@Base+0x2148>
   1a764:	cmp	r0, #0
   1a768:	popne	{fp, pc}
   1a76c:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a770:	push	{fp, lr}
   1a774:	mov	fp, sp
   1a778:	bl	1ad00 <argp_parse@@Base+0x2148>
   1a77c:	cmp	r0, #0
   1a780:	popne	{fp, pc}
   1a784:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a788:	push	{r4, r5, fp, lr}
   1a78c:	add	fp, sp, #8
   1a790:	mov	r4, r1
   1a794:	mov	r5, r0
   1a798:	bl	1ad30 <argp_parse@@Base+0x2178>
   1a79c:	cmp	r0, #0
   1a7a0:	popne	{r4, r5, fp, pc}
   1a7a4:	cmp	r5, #0
   1a7a8:	beq	1a7b8 <argp_parse@@Base+0x1c00>
   1a7ac:	cmp	r4, #0
   1a7b0:	bne	1a7b8 <argp_parse@@Base+0x1c00>
   1a7b4:	pop	{r4, r5, fp, pc}
   1a7b8:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a7bc:	push	{fp, lr}
   1a7c0:	mov	fp, sp
   1a7c4:	cmp	r1, #0
   1a7c8:	orreq	r1, r1, #1
   1a7cc:	bl	1ad30 <argp_parse@@Base+0x2178>
   1a7d0:	cmp	r0, #0
   1a7d4:	popne	{fp, pc}
   1a7d8:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a7dc:	push	{fp, lr}
   1a7e0:	mov	fp, sp
   1a7e4:	clz	r3, r2
   1a7e8:	lsr	ip, r3, #5
   1a7ec:	clz	r3, r1
   1a7f0:	lsr	r3, r3, #5
   1a7f4:	orrs	r3, r3, ip
   1a7f8:	movwne	r1, #1
   1a7fc:	movwne	r2, #1
   1a800:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a804:	cmp	r0, #0
   1a808:	popne	{fp, pc}
   1a80c:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a810:	push	{fp, lr}
   1a814:	mov	fp, sp
   1a818:	mov	r2, r1
   1a81c:	mov	r1, r0
   1a820:	mov	r0, #0
   1a824:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a828:	cmp	r0, #0
   1a82c:	popne	{fp, pc}
   1a830:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a834:	push	{fp, lr}
   1a838:	mov	fp, sp
   1a83c:	mov	r2, r1
   1a840:	mov	r1, r0
   1a844:	clz	r0, r2
   1a848:	clz	r3, r1
   1a84c:	lsr	r0, r0, #5
   1a850:	lsr	r3, r3, #5
   1a854:	orrs	r0, r3, r0
   1a858:	mov	r0, #0
   1a85c:	movwne	r1, #1
   1a860:	movwne	r2, #1
   1a864:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a868:	cmp	r0, #0
   1a86c:	popne	{fp, pc}
   1a870:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a874:	push	{r4, r5, r6, sl, fp, lr}
   1a878:	add	fp, sp, #16
   1a87c:	ldr	r5, [r1]
   1a880:	mov	r4, r1
   1a884:	mov	r6, r0
   1a888:	cmp	r0, #0
   1a88c:	beq	1a8a4 <argp_parse@@Base+0x1cec>
   1a890:	mov	r0, #1
   1a894:	add	r0, r0, r5, lsr #1
   1a898:	adds	r5, r5, r0
   1a89c:	bcc	1a8ac <argp_parse@@Base+0x1cf4>
   1a8a0:	b	1a8e8 <argp_parse@@Base+0x1d30>
   1a8a4:	cmp	r5, #0
   1a8a8:	movweq	r5, #64	; 0x40
   1a8ac:	mov	r0, r6
   1a8b0:	mov	r1, r5
   1a8b4:	mov	r2, #1
   1a8b8:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a8bc:	cmp	r5, #0
   1a8c0:	mov	r1, r5
   1a8c4:	movwne	r1, #1
   1a8c8:	cmp	r0, #0
   1a8cc:	bne	1a8e0 <argp_parse@@Base+0x1d28>
   1a8d0:	clz	r2, r6
   1a8d4:	lsr	r2, r2, #5
   1a8d8:	orrs	r1, r2, r1
   1a8dc:	bne	1a8e8 <argp_parse@@Base+0x1d30>
   1a8e0:	str	r5, [r4]
   1a8e4:	pop	{r4, r5, r6, sl, fp, pc}
   1a8e8:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a8ec:	push	{r4, r5, r6, r7, fp, lr}
   1a8f0:	add	fp, sp, #16
   1a8f4:	ldr	r5, [r1]
   1a8f8:	mov	r6, r2
   1a8fc:	mov	r4, r1
   1a900:	mov	r7, r0
   1a904:	cmp	r0, #0
   1a908:	beq	1a920 <argp_parse@@Base+0x1d68>
   1a90c:	mov	r0, #1
   1a910:	add	r0, r0, r5, lsr #1
   1a914:	adds	r5, r5, r0
   1a918:	bcc	1a938 <argp_parse@@Base+0x1d80>
   1a91c:	b	1a96c <argp_parse@@Base+0x1db4>
   1a920:	cmp	r5, #0
   1a924:	bne	1a938 <argp_parse@@Base+0x1d80>
   1a928:	mov	r0, #64	; 0x40
   1a92c:	cmp	r6, #64	; 0x40
   1a930:	udiv	r5, r0, r6
   1a934:	addhi	r5, r5, #1
   1a938:	mov	r0, r7
   1a93c:	mov	r1, r5
   1a940:	mov	r2, r6
   1a944:	bl	1cb40 <argp_parse@@Base+0x3f88>
   1a948:	cmp	r0, #0
   1a94c:	bne	1a964 <argp_parse@@Base+0x1dac>
   1a950:	cmp	r7, #0
   1a954:	beq	1a96c <argp_parse@@Base+0x1db4>
   1a958:	cmp	r6, #0
   1a95c:	cmpne	r5, #0
   1a960:	bne	1a96c <argp_parse@@Base+0x1db4>
   1a964:	str	r5, [r4]
   1a968:	pop	{r4, r5, r6, r7, fp, pc}
   1a96c:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1a970:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a974:	add	fp, sp, #24
   1a978:	mov	r8, r1
   1a97c:	ldr	r1, [r1]
   1a980:	mov	r5, r0
   1a984:	add	r0, r1, r1, asr #1
   1a988:	cmp	r0, r1
   1a98c:	mvnvs	r0, #-2147483648	; 0x80000000
   1a990:	cmp	r0, r3
   1a994:	mov	r7, r0
   1a998:	movgt	r7, r3
   1a99c:	cmn	r3, #1
   1a9a0:	movle	r7, r0
   1a9a4:	ldr	r0, [fp, #8]
   1a9a8:	cmn	r0, #1
   1a9ac:	ble	1a9d4 <argp_parse@@Base+0x1e1c>
   1a9b0:	cmp	r0, #0
   1a9b4:	beq	1aa28 <argp_parse@@Base+0x1e70>
   1a9b8:	cmn	r7, #1
   1a9bc:	ble	1a9fc <argp_parse@@Base+0x1e44>
   1a9c0:	mvn	r4, #-2147483648	; 0x80000000
   1a9c4:	udiv	r6, r4, r0
   1a9c8:	cmp	r6, r7
   1a9cc:	bge	1aa28 <argp_parse@@Base+0x1e70>
   1a9d0:	b	1aa38 <argp_parse@@Base+0x1e80>
   1a9d4:	cmn	r7, #1
   1a9d8:	ble	1aa18 <argp_parse@@Base+0x1e60>
   1a9dc:	cmn	r0, #1
   1a9e0:	beq	1aa28 <argp_parse@@Base+0x1e70>
   1a9e4:	mov	r6, #-2147483648	; 0x80000000
   1a9e8:	mvn	r4, #-2147483648	; 0x80000000
   1a9ec:	sdiv	r6, r6, r0
   1a9f0:	cmp	r6, r7
   1a9f4:	bge	1aa28 <argp_parse@@Base+0x1e70>
   1a9f8:	b	1aa38 <argp_parse@@Base+0x1e80>
   1a9fc:	beq	1aa28 <argp_parse@@Base+0x1e70>
   1aa00:	mov	r6, #-2147483648	; 0x80000000
   1aa04:	mvn	r4, #-2147483648	; 0x80000000
   1aa08:	sdiv	r6, r6, r7
   1aa0c:	cmp	r6, r0
   1aa10:	bge	1aa28 <argp_parse@@Base+0x1e70>
   1aa14:	b	1aa38 <argp_parse@@Base+0x1e80>
   1aa18:	mvn	r4, #-2147483648	; 0x80000000
   1aa1c:	sdiv	r6, r4, r0
   1aa20:	cmp	r7, r6
   1aa24:	blt	1aa38 <argp_parse@@Base+0x1e80>
   1aa28:	mul	r6, r7, r0
   1aa2c:	mov	r4, #64	; 0x40
   1aa30:	cmp	r6, #63	; 0x3f
   1aa34:	bgt	1aa40 <argp_parse@@Base+0x1e88>
   1aa38:	sdiv	r7, r4, r0
   1aa3c:	mul	r6, r7, r0
   1aa40:	cmp	r5, #0
   1aa44:	moveq	r4, #0
   1aa48:	streq	r4, [r8]
   1aa4c:	sub	r4, r7, r1
   1aa50:	cmp	r4, r2
   1aa54:	bge	1ab00 <argp_parse@@Base+0x1f48>
   1aa58:	add	r7, r1, r2
   1aa5c:	mov	r6, #0
   1aa60:	mov	r2, #0
   1aa64:	cmp	r7, r3
   1aa68:	movwgt	r6, #1
   1aa6c:	cmn	r3, #1
   1aa70:	movwgt	r2, #1
   1aa74:	cmp	r7, r1
   1aa78:	bvs	1ab34 <argp_parse@@Base+0x1f7c>
   1aa7c:	ands	r1, r2, r6
   1aa80:	bne	1ab34 <argp_parse@@Base+0x1f7c>
   1aa84:	cmn	r0, #1
   1aa88:	ble	1aab0 <argp_parse@@Base+0x1ef8>
   1aa8c:	cmp	r0, #0
   1aa90:	beq	1aafc <argp_parse@@Base+0x1f44>
   1aa94:	cmn	r7, #1
   1aa98:	ble	1aad4 <argp_parse@@Base+0x1f1c>
   1aa9c:	mvn	r1, #-2147483648	; 0x80000000
   1aaa0:	udiv	r1, r1, r0
   1aaa4:	cmp	r1, r7
   1aaa8:	bge	1aafc <argp_parse@@Base+0x1f44>
   1aaac:	b	1ab34 <argp_parse@@Base+0x1f7c>
   1aab0:	cmn	r7, #1
   1aab4:	ble	1aaec <argp_parse@@Base+0x1f34>
   1aab8:	cmn	r0, #1
   1aabc:	beq	1aafc <argp_parse@@Base+0x1f44>
   1aac0:	mov	r1, #-2147483648	; 0x80000000
   1aac4:	sdiv	r1, r1, r0
   1aac8:	cmp	r1, r7
   1aacc:	bge	1aafc <argp_parse@@Base+0x1f44>
   1aad0:	b	1ab34 <argp_parse@@Base+0x1f7c>
   1aad4:	beq	1aafc <argp_parse@@Base+0x1f44>
   1aad8:	mov	r1, #-2147483648	; 0x80000000
   1aadc:	sdiv	r1, r1, r7
   1aae0:	cmp	r1, r0
   1aae4:	bge	1aafc <argp_parse@@Base+0x1f44>
   1aae8:	b	1ab34 <argp_parse@@Base+0x1f7c>
   1aaec:	mvn	r1, #-2147483648	; 0x80000000
   1aaf0:	sdiv	r1, r1, r0
   1aaf4:	cmp	r7, r1
   1aaf8:	blt	1ab34 <argp_parse@@Base+0x1f7c>
   1aafc:	mul	r6, r7, r0
   1ab00:	mov	r0, r5
   1ab04:	mov	r1, r6
   1ab08:	bl	1ad30 <argp_parse@@Base+0x2178>
   1ab0c:	cmp	r6, #0
   1ab10:	movwne	r6, #1
   1ab14:	cmp	r0, #0
   1ab18:	bne	1ab2c <argp_parse@@Base+0x1f74>
   1ab1c:	clz	r1, r5
   1ab20:	lsr	r1, r1, #5
   1ab24:	orrs	r1, r1, r6
   1ab28:	bne	1ab34 <argp_parse@@Base+0x1f7c>
   1ab2c:	str	r7, [r8]
   1ab30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ab34:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ab38:	push	{fp, lr}
   1ab3c:	mov	fp, sp
   1ab40:	mov	r1, #1
   1ab44:	bl	1acac <argp_parse@@Base+0x20f4>
   1ab48:	cmp	r0, #0
   1ab4c:	popne	{fp, pc}
   1ab50:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ab54:	push	{fp, lr}
   1ab58:	mov	fp, sp
   1ab5c:	bl	1acac <argp_parse@@Base+0x20f4>
   1ab60:	cmp	r0, #0
   1ab64:	popne	{fp, pc}
   1ab68:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ab6c:	push	{fp, lr}
   1ab70:	mov	fp, sp
   1ab74:	mov	r1, #1
   1ab78:	bl	1acac <argp_parse@@Base+0x20f4>
   1ab7c:	cmp	r0, #0
   1ab80:	popne	{fp, pc}
   1ab84:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ab88:	push	{fp, lr}
   1ab8c:	mov	fp, sp
   1ab90:	bl	1acac <argp_parse@@Base+0x20f4>
   1ab94:	cmp	r0, #0
   1ab98:	popne	{fp, pc}
   1ab9c:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1aba0:	push	{r4, r5, fp, lr}
   1aba4:	add	fp, sp, #8
   1aba8:	mov	r5, r0
   1abac:	mov	r0, r1
   1abb0:	mov	r4, r1
   1abb4:	bl	1ad00 <argp_parse@@Base+0x2148>
   1abb8:	cmp	r0, #0
   1abbc:	beq	1abd0 <argp_parse@@Base+0x2018>
   1abc0:	mov	r1, r5
   1abc4:	mov	r2, r4
   1abc8:	pop	{r4, r5, fp, lr}
   1abcc:	b	113d0 <memcpy@plt>
   1abd0:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1abd4:	push	{r4, r5, fp, lr}
   1abd8:	add	fp, sp, #8
   1abdc:	mov	r5, r0
   1abe0:	mov	r0, r1
   1abe4:	mov	r4, r1
   1abe8:	bl	1ad00 <argp_parse@@Base+0x2148>
   1abec:	cmp	r0, #0
   1abf0:	beq	1ac04 <argp_parse@@Base+0x204c>
   1abf4:	mov	r1, r5
   1abf8:	mov	r2, r4
   1abfc:	pop	{r4, r5, fp, lr}
   1ac00:	b	113d0 <memcpy@plt>
   1ac04:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ac08:	push	{r4, r5, fp, lr}
   1ac0c:	add	fp, sp, #8
   1ac10:	mov	r5, r0
   1ac14:	add	r0, r1, #1
   1ac18:	mov	r4, r1
   1ac1c:	bl	1ad00 <argp_parse@@Base+0x2148>
   1ac20:	cmp	r0, #0
   1ac24:	beq	1ac40 <argp_parse@@Base+0x2088>
   1ac28:	mov	r1, #0
   1ac2c:	mov	r2, r4
   1ac30:	strb	r1, [r0, r4]
   1ac34:	mov	r1, r5
   1ac38:	pop	{r4, r5, fp, lr}
   1ac3c:	b	113d0 <memcpy@plt>
   1ac40:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ac44:	push	{r4, r5, fp, lr}
   1ac48:	add	fp, sp, #8
   1ac4c:	mov	r4, r0
   1ac50:	bl	11514 <strlen@plt>
   1ac54:	add	r5, r0, #1
   1ac58:	mov	r0, r5
   1ac5c:	bl	1ad00 <argp_parse@@Base+0x2148>
   1ac60:	cmp	r0, #0
   1ac64:	beq	1ac78 <argp_parse@@Base+0x20c0>
   1ac68:	mov	r1, r4
   1ac6c:	mov	r2, r5
   1ac70:	pop	{r4, r5, fp, lr}
   1ac74:	b	113d0 <memcpy@plt>
   1ac78:	bl	1ac7c <argp_parse@@Base+0x20c4>
   1ac7c:	push	{fp, lr}
   1ac80:	mov	fp, sp
   1ac84:	movw	r0, #62988	; 0xf60c
   1ac88:	movw	r2, #55159	; 0xd777
   1ac8c:	movw	r3, #58153	; 0xe329
   1ac90:	mov	r1, #0
   1ac94:	movt	r0, #2
   1ac98:	movt	r2, #1
   1ac9c:	movt	r3, #1
   1aca0:	ldr	r0, [r0]
   1aca4:	bl	11478 <error@plt>
   1aca8:	bl	11664 <abort@plt>
   1acac:	clz	r2, r1
   1acb0:	clz	r3, r0
   1acb4:	lsr	r2, r2, #5
   1acb8:	lsr	r3, r3, #5
   1acbc:	orrs	r2, r3, r2
   1acc0:	movwne	r1, #1
   1acc4:	movwne	r0, #1
   1acc8:	cmp	r1, #0
   1accc:	beq	1acfc <argp_parse@@Base+0x2144>
   1acd0:	mvn	r2, #-2147483648	; 0x80000000
   1acd4:	udiv	r2, r2, r1
   1acd8:	cmp	r2, r0
   1acdc:	bcs	1acfc <argp_parse@@Base+0x2144>
   1ace0:	push	{fp, lr}
   1ace4:	mov	fp, sp
   1ace8:	bl	11538 <__errno_location@plt>
   1acec:	mov	r1, #12
   1acf0:	str	r1, [r0]
   1acf4:	mov	r0, #0
   1acf8:	pop	{fp, pc}
   1acfc:	b	11328 <calloc@plt>
   1ad00:	cmp	r0, #0
   1ad04:	movweq	r0, #1
   1ad08:	cmn	r0, #1
   1ad0c:	ble	1ad14 <argp_parse@@Base+0x215c>
   1ad10:	b	1149c <malloc@plt>
   1ad14:	push	{fp, lr}
   1ad18:	mov	fp, sp
   1ad1c:	bl	11538 <__errno_location@plt>
   1ad20:	mov	r1, #12
   1ad24:	str	r1, [r0]
   1ad28:	mov	r0, #0
   1ad2c:	pop	{fp, pc}
   1ad30:	push	{fp, lr}
   1ad34:	mov	fp, sp
   1ad38:	cmp	r0, #0
   1ad3c:	beq	1ad58 <argp_parse@@Base+0x21a0>
   1ad40:	cmp	r1, #0
   1ad44:	beq	1ad64 <argp_parse@@Base+0x21ac>
   1ad48:	cmn	r1, #1
   1ad4c:	ble	1ad70 <argp_parse@@Base+0x21b8>
   1ad50:	pop	{fp, lr}
   1ad54:	b	1143c <realloc@plt>
   1ad58:	mov	r0, r1
   1ad5c:	pop	{fp, lr}
   1ad60:	b	1ad00 <argp_parse@@Base+0x2148>
   1ad64:	bl	19f94 <argp_parse@@Base+0x13dc>
   1ad68:	mov	r0, #0
   1ad6c:	pop	{fp, pc}
   1ad70:	bl	11538 <__errno_location@plt>
   1ad74:	mov	r1, #12
   1ad78:	str	r1, [r0]
   1ad7c:	mov	r0, #0
   1ad80:	pop	{fp, pc}
   1ad84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ad88:	add	fp, sp, #24
   1ad8c:	mov	r7, r0
   1ad90:	mov	r0, #36	; 0x24
   1ad94:	mov	r8, r3
   1ad98:	mov	r9, r2
   1ad9c:	mov	r6, r1
   1ada0:	bl	1ad00 <argp_parse@@Base+0x2148>
   1ada4:	cmp	r0, #0
   1ada8:	beq	1adf0 <argp_parse@@Base+0x2238>
   1adac:	mov	r5, #0
   1adb0:	str	r7, [r0]
   1adb4:	stmib	r0, {r6, r9}
   1adb8:	str	r8, [r0, #12]
   1adbc:	mov	r4, r0
   1adc0:	str	r5, [r0, #16]
   1adc4:	str	r5, [r0, #20]
   1adc8:	mov	r0, #200	; 0xc8
   1adcc:	bl	1ad00 <argp_parse@@Base+0x2148>
   1add0:	cmp	r0, #0
   1add4:	str	r0, [r4, #24]
   1add8:	beq	1adfc <argp_parse@@Base+0x2244>
   1addc:	add	r1, r0, #200	; 0xc8
   1ade0:	str	r0, [r4, #28]
   1ade4:	mov	r0, r4
   1ade8:	str	r1, [r4, #32]
   1adec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1adf0:	mov	r5, #0
   1adf4:	mov	r0, r5
   1adf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1adfc:	mov	r0, r4
   1ae00:	bl	19f94 <argp_parse@@Base+0x13dc>
   1ae04:	mov	r0, r5
   1ae08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ae0c:	push	{r4, sl, fp, lr}
   1ae10:	add	fp, sp, #8
   1ae14:	mov	r4, r0
   1ae18:	bl	1ae50 <argp_parse@@Base+0x2298>
   1ae1c:	ldr	r0, [r4, #24]
   1ae20:	ldr	r1, [r4, #28]
   1ae24:	cmp	r1, r0
   1ae28:	bls	1ae3c <argp_parse@@Base+0x2284>
   1ae2c:	ldr	r3, [r4]
   1ae30:	sub	r2, r1, r0
   1ae34:	mov	r1, #1
   1ae38:	bl	113e8 <fwrite_unlocked@plt>
   1ae3c:	ldr	r0, [r4, #24]
   1ae40:	bl	19f94 <argp_parse@@Base+0x13dc>
   1ae44:	mov	r0, r4
   1ae48:	pop	{r4, sl, fp, lr}
   1ae4c:	b	19f94 <argp_parse@@Base+0x13dc>
   1ae50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae54:	add	fp, sp, #28
   1ae58:	sub	sp, sp, #12
   1ae5c:	mov	sl, r0
   1ae60:	ldr	r0, [r0, #16]
   1ae64:	ldr	r1, [sl, #24]
   1ae68:	ldr	r8, [sl, #28]
   1ae6c:	add	r5, r1, r0
   1ae70:	cmp	r5, r8
   1ae74:	bcs	1b3b8 <argp_parse@@Base+0x2800>
   1ae78:	ldr	r7, [sl, #20]
   1ae7c:	mov	r3, #32
   1ae80:	cmp	r7, #0
   1ae84:	bne	1aebc <argp_parse@@Base+0x2304>
   1ae88:	b	1aec4 <argp_parse@@Base+0x230c>
   1ae8c:	ldr	r0, [sp, #8]
   1ae90:	cmp	r7, #0
   1ae94:	mvneq	r7, #0
   1ae98:	str	r7, [sl, #20]
   1ae9c:	sub	r0, r0, r6
   1aea0:	add	r0, r0, r9
   1aea4:	add	r8, r5, r0
   1aea8:	str	r8, [sl, #28]
   1aeac:	cmp	r5, r8
   1aeb0:	bcs	1b3b8 <argp_parse@@Base+0x2800>
   1aeb4:	cmp	r7, #0
   1aeb8:	beq	1aec4 <argp_parse@@Base+0x230c>
   1aebc:	mov	r9, r5
   1aec0:	b	1af64 <argp_parse@@Base+0x23ac>
   1aec4:	ldr	r7, [sl, #4]
   1aec8:	cmp	r7, #0
   1aecc:	beq	1b0e4 <argp_parse@@Base+0x252c>
   1aed0:	ldr	r1, [sl, #32]
   1aed4:	add	r0, r8, r7
   1aed8:	mov	r4, r7
   1aedc:	cmp	r0, r1
   1aee0:	bcs	1af18 <argp_parse@@Base+0x2360>
   1aee4:	add	r9, r5, r7
   1aee8:	sub	r2, r8, r5
   1aeec:	mov	r1, r5
   1aef0:	mov	r0, r9
   1aef4:	bl	11394 <memmove@plt>
   1aef8:	ldr	r0, [sl, #28]
   1aefc:	mov	r1, #32
   1af00:	mov	r2, r7
   1af04:	add	r0, r0, r7
   1af08:	str	r0, [sl, #28]
   1af0c:	mov	r0, r5
   1af10:	bl	11568 <memset@plt>
   1af14:	b	1af5c <argp_parse@@Base+0x23a4>
   1af18:	ldr	r0, [sl]
   1af1c:	ldr	r1, [r0, #20]
   1af20:	ldr	r2, [r0, #24]
   1af24:	cmp	r1, r2
   1af28:	bcs	1af44 <argp_parse@@Base+0x238c>
   1af2c:	add	r2, r1, #1
   1af30:	str	r2, [r0, #20]
   1af34:	strb	r3, [r1]
   1af38:	subs	r4, r4, #1
   1af3c:	bne	1af18 <argp_parse@@Base+0x2360>
   1af40:	b	1af58 <argp_parse@@Base+0x23a0>
   1af44:	mov	r1, #32
   1af48:	bl	115a4 <__overflow@plt>
   1af4c:	mov	r3, #32
   1af50:	subs	r4, r4, #1
   1af54:	bne	1af18 <argp_parse@@Base+0x2360>
   1af58:	mov	r9, r5
   1af5c:	str	r7, [sl, #20]
   1af60:	ldr	r8, [sl, #28]
   1af64:	sub	r6, r8, r9
   1af68:	mov	r0, r9
   1af6c:	mov	r1, #10
   1af70:	mov	r2, r6
   1af74:	bl	1158c <memchr@plt>
   1af78:	cmn	r7, #1
   1af7c:	mov	r4, r0
   1af80:	movle	r7, #0
   1af84:	strle	r7, [sl, #20]
   1af88:	cmp	r4, #0
   1af8c:	beq	1afc0 <argp_parse@@Base+0x2408>
   1af90:	ldr	r5, [sl, #8]
   1af94:	sub	r0, r4, r9
   1af98:	mov	r3, #32
   1af9c:	add	r0, r0, r7
   1afa0:	cmp	r0, r5
   1afa4:	bge	1afd4 <argp_parse@@Base+0x241c>
   1afa8:	mov	r7, #0
   1afac:	add	r5, r4, #1
   1afb0:	str	r7, [sl, #20]
   1afb4:	cmp	r5, r8
   1afb8:	bcc	1aeb4 <argp_parse@@Base+0x22fc>
   1afbc:	b	1b3b8 <argp_parse@@Base+0x2800>
   1afc0:	ldr	r5, [sl, #8]
   1afc4:	add	r0, r7, r6
   1afc8:	mov	r4, r8
   1afcc:	cmp	r0, r5
   1afd0:	bcc	1b39c <argp_parse@@Base+0x27e4>
   1afd4:	ldr	r0, [sl, #12]
   1afd8:	cmn	r0, #1
   1afdc:	str	r0, [sp, #4]
   1afe0:	ble	1b03c <argp_parse@@Base+0x2484>
   1afe4:	subs	r0, r5, r7
   1afe8:	mov	r1, #0
   1afec:	str	r6, [sp, #8]
   1aff0:	add	r5, r9, r0
   1aff4:	bmi	1b098 <argp_parse@@Base+0x24e0>
   1aff8:	str	r0, [sp]
   1affc:	bl	114d8 <__ctype_b_loc@plt>
   1b000:	ldr	r0, [r0]
   1b004:	mov	r7, r5
   1b008:	ldrb	r1, [r7]
   1b00c:	ldrb	r1, [r0, r1, lsl #1]
   1b010:	tst	r1, #1
   1b014:	bne	1b0ec <argp_parse@@Base+0x2534>
   1b018:	sub	r7, r7, #1
   1b01c:	cmp	r7, r9
   1b020:	bcs	1b008 <argp_parse@@Base+0x2450>
   1b024:	ldr	r0, [sp]
   1b028:	mov	r1, #0
   1b02c:	add	r6, r7, #1
   1b030:	cmp	r6, r9
   1b034:	bhi	1b0a8 <argp_parse@@Base+0x24f0>
   1b038:	b	1b100 <argp_parse@@Base+0x2548>
   1b03c:	mov	r0, r6
   1b040:	sub	r6, r5, #1
   1b044:	cmp	r4, r8
   1b048:	bcs	1b3a4 <argp_parse@@Base+0x27ec>
   1b04c:	sub	r0, r6, r7
   1b050:	sub	r2, r8, r4
   1b054:	mov	r1, r4
   1b058:	add	r0, r9, r0
   1b05c:	bl	11394 <memmove@plt>
   1b060:	ldr	r0, [sl, #20]
   1b064:	ldr	r1, [sl, #28]
   1b068:	mov	r7, #0
   1b06c:	mov	r3, #32
   1b070:	add	r5, r9, r5
   1b074:	str	r7, [sl, #20]
   1b078:	sub	r0, r6, r0
   1b07c:	add	r0, r9, r0
   1b080:	sub	r0, r4, r0
   1b084:	add	r8, r1, r0
   1b088:	str	r8, [sl, #28]
   1b08c:	cmp	r5, r8
   1b090:	bcc	1aeb4 <argp_parse@@Base+0x22fc>
   1b094:	b	1b3b8 <argp_parse@@Base+0x2800>
   1b098:	mov	r7, r5
   1b09c:	add	r6, r7, #1
   1b0a0:	cmp	r6, r9
   1b0a4:	bls	1b100 <argp_parse@@Base+0x2548>
   1b0a8:	cmp	r1, #0
   1b0ac:	beq	1b1d8 <argp_parse@@Base+0x2620>
   1b0b0:	ldr	r4, [sp, #4]
   1b0b4:	sub	r1, r7, #1
   1b0b8:	mov	r7, r1
   1b0bc:	cmp	r1, r9
   1b0c0:	bcc	1b1dc <argp_parse@@Base+0x2624>
   1b0c4:	bl	114d8 <__ctype_b_loc@plt>
   1b0c8:	mov	r1, r7
   1b0cc:	ldr	r0, [r0]
   1b0d0:	ldrb	r2, [r1], #-1
   1b0d4:	ldrb	r0, [r0, r2, lsl #1]
   1b0d8:	tst	r0, #1
   1b0dc:	bne	1b0b8 <argp_parse@@Base+0x2500>
   1b0e0:	b	1b1dc <argp_parse@@Base+0x2624>
   1b0e4:	mov	r7, #0
   1b0e8:	b	1aebc <argp_parse@@Base+0x2304>
   1b0ec:	ldr	r0, [sp]
   1b0f0:	mov	r1, #1
   1b0f4:	add	r6, r7, #1
   1b0f8:	cmp	r6, r9
   1b0fc:	bhi	1b0a8 <argp_parse@@Base+0x24f0>
   1b100:	cmp	r5, r4
   1b104:	bcs	1b138 <argp_parse@@Base+0x2580>
   1b108:	add	r0, r9, r0
   1b10c:	add	r1, r0, #1
   1b110:	mov	r5, r1
   1b114:	cmp	r1, r4
   1b118:	bcs	1b138 <argp_parse@@Base+0x2580>
   1b11c:	bl	114d8 <__ctype_b_loc@plt>
   1b120:	mov	r1, r5
   1b124:	ldr	r0, [r0]
   1b128:	ldrb	r2, [r1], #1
   1b12c:	ldrb	r0, [r0, r2, lsl #1]
   1b130:	tst	r0, #1
   1b134:	beq	1b110 <argp_parse@@Base+0x2558>
   1b138:	cmp	r5, r4
   1b13c:	beq	1b370 <argp_parse@@Base+0x27b8>
   1b140:	bl	114d8 <__ctype_b_loc@plt>
   1b144:	ldr	r0, [r0]
   1b148:	mov	r6, r5
   1b14c:	ldrb	r1, [r6, #1]!
   1b150:	ldrb	r1, [r0, r1, lsl #1]
   1b154:	tst	r1, #1
   1b158:	bne	1b14c <argp_parse@@Base+0x2594>
   1b15c:	ldr	r4, [sp, #4]
   1b160:	mov	r3, #32
   1b164:	add	r0, r8, #1
   1b168:	cmp	r6, r0
   1b16c:	bne	1b1f0 <argp_parse@@Base+0x2638>
   1b170:	cmp	r8, r6
   1b174:	bls	1b284 <argp_parse@@Base+0x26cc>
   1b178:	ldr	r0, [sl, #32]
   1b17c:	sub	r1, r0, r5
   1b180:	cmp	r1, r4
   1b184:	bgt	1b284 <argp_parse@@Base+0x26cc>
   1b188:	sub	r0, r0, r8
   1b18c:	add	r1, r4, #1
   1b190:	cmp	r0, r1
   1b194:	ble	1b21c <argp_parse@@Base+0x2664>
   1b198:	mov	r0, r4
   1b19c:	sub	r4, r8, r6
   1b1a0:	add	r7, r5, #1
   1b1a4:	mov	r1, r6
   1b1a8:	add	r0, r7, r0
   1b1ac:	mov	r2, r4
   1b1b0:	bl	11394 <memmove@plt>
   1b1b4:	ldr	r0, [sl, #12]
   1b1b8:	mov	r1, #10
   1b1bc:	mov	r3, #32
   1b1c0:	strb	r1, [r5]
   1b1c4:	mov	r5, r7
   1b1c8:	add	r6, r7, r0
   1b1cc:	add	r0, r6, r4
   1b1d0:	sub	r0, r0, r9
   1b1d4:	b	1b26c <argp_parse@@Base+0x26b4>
   1b1d8:	ldr	r4, [sp, #4]
   1b1dc:	add	r5, r7, #1
   1b1e0:	mov	r3, #32
   1b1e4:	add	r0, r8, #1
   1b1e8:	cmp	r6, r0
   1b1ec:	beq	1b170 <argp_parse@@Base+0x25b8>
   1b1f0:	cmp	r8, r6
   1b1f4:	bls	1b284 <argp_parse@@Base+0x26cc>
   1b1f8:	mvn	r0, r5
   1b1fc:	add	r0, r0, r6
   1b200:	cmp	r0, r4
   1b204:	bge	1b284 <argp_parse@@Base+0x26cc>
   1b208:	ldr	r0, [sl, #32]
   1b20c:	sub	r0, r0, r8
   1b210:	add	r1, r4, #1
   1b214:	cmp	r0, r1
   1b218:	bgt	1b198 <argp_parse@@Base+0x25e0>
   1b21c:	ldr	r0, [sl, #24]
   1b220:	cmp	r5, r0
   1b224:	bls	1b23c <argp_parse@@Base+0x2684>
   1b228:	ldr	r3, [sl]
   1b22c:	sub	r2, r5, r0
   1b230:	mov	r1, #1
   1b234:	bl	113e8 <fwrite_unlocked@plt>
   1b238:	mov	r3, #32
   1b23c:	ldr	r0, [sl]
   1b240:	ldr	r1, [r0, #20]
   1b244:	ldr	r2, [r0, #24]
   1b248:	cmp	r1, r2
   1b24c:	bcs	1b38c <argp_parse@@Base+0x27d4>
   1b250:	add	r2, r1, #1
   1b254:	str	r2, [r0, #20]
   1b258:	mov	r0, #10
   1b25c:	strb	r0, [r1]
   1b260:	ldr	r5, [sl, #24]
   1b264:	sub	r0, r8, r5
   1b268:	mov	r9, r5
   1b26c:	str	r0, [sp, #8]
   1b270:	ldr	r7, [sl, #12]
   1b274:	sub	r0, r6, r5
   1b278:	cmp	r0, r7
   1b27c:	blt	1b29c <argp_parse@@Base+0x26e4>
   1b280:	b	1b320 <argp_parse@@Base+0x2768>
   1b284:	mov	r0, #10
   1b288:	strb	r0, [r5], #1
   1b28c:	ldr	r7, [sl, #12]
   1b290:	sub	r0, r6, r5
   1b294:	cmp	r0, r7
   1b298:	bge	1b320 <argp_parse@@Base+0x2768>
   1b29c:	ldr	r0, [sp, #8]
   1b2a0:	add	r0, r9, r0
   1b2a4:	add	r0, r0, #1
   1b2a8:	cmp	r6, r0
   1b2ac:	bne	1b2c0 <argp_parse@@Base+0x2708>
   1b2b0:	ldr	r0, [sl, #32]
   1b2b4:	sub	r0, r0, r6
   1b2b8:	cmp	r0, r7
   1b2bc:	bge	1b320 <argp_parse@@Base+0x2768>
   1b2c0:	cmp	r7, #1
   1b2c4:	blt	1b344 <argp_parse@@Base+0x278c>
   1b2c8:	mov	r4, #0
   1b2cc:	ldr	r0, [sl]
   1b2d0:	ldr	r1, [r0, #20]
   1b2d4:	ldr	r2, [r0, #24]
   1b2d8:	cmp	r1, r2
   1b2dc:	bcs	1b300 <argp_parse@@Base+0x2748>
   1b2e0:	add	r2, r1, #1
   1b2e4:	str	r2, [r0, #20]
   1b2e8:	strb	r3, [r1]
   1b2ec:	ldr	r7, [sl, #12]
   1b2f0:	add	r4, r4, #1
   1b2f4:	cmp	r4, r7
   1b2f8:	blt	1b2cc <argp_parse@@Base+0x2714>
   1b2fc:	b	1b344 <argp_parse@@Base+0x278c>
   1b300:	mov	r1, #32
   1b304:	bl	115a4 <__overflow@plt>
   1b308:	mov	r3, #32
   1b30c:	ldr	r7, [sl, #12]
   1b310:	add	r4, r4, #1
   1b314:	cmp	r4, r7
   1b318:	blt	1b2cc <argp_parse@@Base+0x2714>
   1b31c:	b	1b344 <argp_parse@@Base+0x278c>
   1b320:	cmp	r7, #1
   1b324:	blt	1b344 <argp_parse@@Base+0x278c>
   1b328:	mov	r0, #0
   1b32c:	strb	r3, [r5, r0]
   1b330:	add	r0, r0, #1
   1b334:	ldr	r7, [sl, #12]
   1b338:	cmp	r0, r7
   1b33c:	blt	1b32c <argp_parse@@Base+0x2774>
   1b340:	add	r5, r5, r0
   1b344:	cmp	r5, r6
   1b348:	bcs	1ae8c <argp_parse@@Base+0x22d4>
   1b34c:	ldr	r0, [sp, #8]
   1b350:	mov	r1, r6
   1b354:	add	r0, r9, r0
   1b358:	sub	r2, r0, r6
   1b35c:	mov	r0, r5
   1b360:	bl	11394 <memmove@plt>
   1b364:	ldr	r7, [sl, #12]
   1b368:	mov	r3, #32
   1b36c:	b	1ae8c <argp_parse@@Base+0x22d4>
   1b370:	mov	r7, #0
   1b374:	add	r5, r4, #1
   1b378:	mov	r3, #32
   1b37c:	str	r7, [sl, #20]
   1b380:	cmp	r5, r8
   1b384:	bcc	1aeb4 <argp_parse@@Base+0x22fc>
   1b388:	b	1b3b8 <argp_parse@@Base+0x2800>
   1b38c:	mov	r1, #10
   1b390:	bl	115a4 <__overflow@plt>
   1b394:	mov	r3, #32
   1b398:	b	1b260 <argp_parse@@Base+0x26a8>
   1b39c:	str	r0, [sl, #20]
   1b3a0:	b	1b3b8 <argp_parse@@Base+0x2800>
   1b3a4:	add	r0, r7, r0
   1b3a8:	str	r0, [sl, #20]
   1b3ac:	sub	r0, r6, r0
   1b3b0:	add	r8, r8, r0
   1b3b4:	str	r8, [sl, #28]
   1b3b8:	ldr	r0, [sl, #24]
   1b3bc:	sub	r0, r8, r0
   1b3c0:	str	r0, [sl, #16]
   1b3c4:	sub	sp, fp, #28
   1b3c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3cc:	push	{r4, r5, r6, sl, fp, lr}
   1b3d0:	add	fp, sp, #16
   1b3d4:	mov	r4, r0
   1b3d8:	mov	r5, r1
   1b3dc:	ldr	r0, [r0, #28]
   1b3e0:	mov	r6, #1
   1b3e4:	ldr	r1, [r4, #32]
   1b3e8:	sub	r0, r1, r0
   1b3ec:	cmp	r0, r5
   1b3f0:	bcs	1b4b0 <argp_parse@@Base+0x28f8>
   1b3f4:	mov	r0, r4
   1b3f8:	bl	1ae50 <argp_parse@@Base+0x2298>
   1b3fc:	ldr	r0, [r4, #24]
   1b400:	ldr	r1, [r4, #28]
   1b404:	ldr	r3, [r4]
   1b408:	sub	r2, r1, r0
   1b40c:	mov	r1, #1
   1b410:	bl	113e8 <fwrite_unlocked@plt>
   1b414:	mov	r1, r0
   1b418:	ldr	r0, [r4, #24]
   1b41c:	ldr	r2, [r4, #28]
   1b420:	sub	r3, r2, r0
   1b424:	cmp	r1, r3
   1b428:	bne	1b47c <argp_parse@@Base+0x28c4>
   1b42c:	mov	r1, #0
   1b430:	mov	r6, #1
   1b434:	str	r1, [r4, #16]
   1b438:	str	r0, [r4, #28]
   1b43c:	ldr	r1, [r4, #32]
   1b440:	sub	r1, r1, r0
   1b444:	cmp	r1, r5
   1b448:	bcs	1b4b0 <argp_parse@@Base+0x28f8>
   1b44c:	adds	r5, r1, r5
   1b450:	bcs	1b4a0 <argp_parse@@Base+0x28e8>
   1b454:	mov	r1, r5
   1b458:	bl	1ad30 <argp_parse@@Base+0x2178>
   1b45c:	cmp	r0, #0
   1b460:	beq	1b4a0 <argp_parse@@Base+0x28e8>
   1b464:	str	r0, [r4, #24]
   1b468:	add	r1, r0, r5
   1b46c:	str	r0, [r4, #28]
   1b470:	mov	r0, r6
   1b474:	str	r1, [r4, #32]
   1b478:	pop	{r4, r5, r6, sl, fp, pc}
   1b47c:	sub	r2, r2, r1
   1b480:	str	r2, [r4, #28]
   1b484:	sub	r2, r2, r0
   1b488:	ldr	r3, [r4, #16]
   1b48c:	sub	r3, r3, r1
   1b490:	add	r1, r0, r1
   1b494:	str	r3, [r4, #16]
   1b498:	bl	11394 <memmove@plt>
   1b49c:	b	1b4ac <argp_parse@@Base+0x28f4>
   1b4a0:	bl	11538 <__errno_location@plt>
   1b4a4:	mov	r1, #12
   1b4a8:	str	r1, [r0]
   1b4ac:	mov	r6, #0
   1b4b0:	mov	r0, r6
   1b4b4:	pop	{r4, r5, r6, sl, fp, pc}
   1b4b8:	sub	sp, sp, #8
   1b4bc:	push	{r4, r5, r6, r7, fp, lr}
   1b4c0:	add	fp, sp, #16
   1b4c4:	sub	sp, sp, #8
   1b4c8:	mov	r5, r1
   1b4cc:	mov	r4, r0
   1b4d0:	mov	r1, #150	; 0x96
   1b4d4:	add	r6, fp, #8
   1b4d8:	str	r2, [fp, #8]
   1b4dc:	str	r3, [fp, #12]
   1b4e0:	mov	r0, r4
   1b4e4:	bl	1b3cc <argp_parse@@Base+0x2814>
   1b4e8:	cmp	r0, #0
   1b4ec:	beq	1b538 <argp_parse@@Base+0x2980>
   1b4f0:	str	r6, [sp, #4]
   1b4f4:	mov	r2, r5
   1b4f8:	mov	r3, r6
   1b4fc:	ldr	r0, [r4, #28]
   1b500:	ldr	r1, [r4, #32]
   1b504:	sub	r7, r1, r0
   1b508:	mov	r1, r7
   1b50c:	bl	1161c <vsnprintf@plt>
   1b510:	add	r1, r0, #1
   1b514:	cmp	r0, r7
   1b518:	bcs	1b4e0 <argp_parse@@Base+0x2928>
   1b51c:	ldr	r1, [r4, #28]
   1b520:	add	r1, r1, r0
   1b524:	str	r1, [r4, #28]
   1b528:	sub	sp, fp, #16
   1b52c:	pop	{r4, r5, r6, r7, fp, lr}
   1b530:	add	sp, sp, #8
   1b534:	bx	lr
   1b538:	mvn	r0, #0
   1b53c:	sub	sp, fp, #16
   1b540:	pop	{r4, r5, r6, r7, fp, lr}
   1b544:	add	sp, sp, #8
   1b548:	bx	lr
   1b54c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b550:	add	fp, sp, #28
   1b554:	sub	sp, sp, #92	; 0x5c
   1b558:	mvn	r4, #0
   1b55c:	cmp	r0, #1
   1b560:	blt	1c0ac <argp_parse@@Base+0x34f4>
   1b564:	ldr	ip, [fp, #16]
   1b568:	mov	r9, r2
   1b56c:	mov	r2, r0
   1b570:	mov	r8, r1
   1b574:	mov	r0, #0
   1b578:	str	r3, [fp, #-48]	; 0xffffffd0
   1b57c:	ldr	r6, [ip]
   1b580:	ldr	r4, [ip, #4]
   1b584:	str	r0, [ip, #12]
   1b588:	cmp	r6, #0
   1b58c:	beq	1b5b0 <argp_parse@@Base+0x29f8>
   1b590:	ldr	r0, [ip, #16]
   1b594:	cmp	r0, #0
   1b598:	beq	1b5b8 <argp_parse@@Base+0x2a00>
   1b59c:	ldrb	r0, [r9]
   1b5a0:	cmp	r0, #45	; 0x2d
   1b5a4:	cmpne	r0, #43	; 0x2b
   1b5a8:	addeq	r9, r9, #1
   1b5ac:	b	1b62c <argp_parse@@Base+0x2a74>
   1b5b0:	mov	r6, #1
   1b5b4:	str	r6, [ip]
   1b5b8:	mov	r0, #0
   1b5bc:	str	r6, [ip, #28]
   1b5c0:	str	r6, [ip, #32]
   1b5c4:	str	r0, [ip, #20]
   1b5c8:	ldrb	r1, [r9]
   1b5cc:	cmp	r1, #43	; 0x2b
   1b5d0:	beq	1b5e0 <argp_parse@@Base+0x2a28>
   1b5d4:	cmp	r1, #45	; 0x2d
   1b5d8:	bne	1b5ec <argp_parse@@Base+0x2a34>
   1b5dc:	mov	r0, #2
   1b5e0:	str	r0, [ip, #24]
   1b5e4:	add	r9, r9, #1
   1b5e8:	b	1b624 <argp_parse@@Base+0x2a6c>
   1b5ec:	ldr	r0, [fp, #20]
   1b5f0:	cmp	r0, #0
   1b5f4:	bne	1b61c <argp_parse@@Base+0x2a64>
   1b5f8:	movw	r0, #58243	; 0xe383
   1b5fc:	mov	r5, ip
   1b600:	mov	r7, r2
   1b604:	movt	r0, #1
   1b608:	bl	11484 <getenv@plt>
   1b60c:	mov	r2, r7
   1b610:	mov	ip, r5
   1b614:	cmp	r0, #0
   1b618:	beq	1c0b8 <argp_parse@@Base+0x3500>
   1b61c:	mov	r0, #0
   1b620:	str	r0, [ip, #24]
   1b624:	mov	r0, #1
   1b628:	str	r0, [ip, #16]
   1b62c:	ldrb	r0, [r9]
   1b630:	ldr	r5, [ip, #20]
   1b634:	str	r8, [fp, #-32]	; 0xffffffe0
   1b638:	subs	r1, r0, #58	; 0x3a
   1b63c:	movne	r1, r4
   1b640:	cmp	r5, #0
   1b644:	str	r1, [fp, #-44]	; 0xffffffd4
   1b648:	beq	1b6bc <argp_parse@@Base+0x2b04>
   1b64c:	ldrb	r0, [r5]
   1b650:	cmp	r0, #0
   1b654:	beq	1b6bc <argp_parse@@Base+0x2b04>
   1b658:	str	r2, [fp, #-36]	; 0xffffffdc
   1b65c:	add	r8, r5, #1
   1b660:	mov	r0, r9
   1b664:	mov	r7, ip
   1b668:	str	r8, [ip, #20]
   1b66c:	ldrb	r4, [r5]
   1b670:	mov	r1, r4
   1b674:	bl	11520 <strchr@plt>
   1b678:	ldrb	r1, [r5, #1]
   1b67c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b680:	cmp	r1, #0
   1b684:	orr	r1, r4, #1
   1b688:	addeq	r6, r6, #1
   1b68c:	streq	r6, [r7]
   1b690:	cmp	r1, #59	; 0x3b
   1b694:	cmpne	r0, #0
   1b698:	bne	1b71c <argp_parse@@Base+0x2b64>
   1b69c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b6a0:	cmp	r0, #0
   1b6a4:	bne	1c0ec <argp_parse@@Base+0x3534>
   1b6a8:	str	r4, [r7, #8]
   1b6ac:	mov	r4, #63	; 0x3f
   1b6b0:	mov	r0, r4
   1b6b4:	sub	sp, fp, #28
   1b6b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6bc:	mov	r3, ip
   1b6c0:	str	r9, [sp, #48]	; 0x30
   1b6c4:	mov	r5, ip
   1b6c8:	ldr	r9, [r3, #32]!
   1b6cc:	cmp	r9, r6
   1b6d0:	strgt	r6, [r3]
   1b6d4:	movgt	r9, r6
   1b6d8:	ldr	r7, [r5, #28]!
   1b6dc:	cmp	r7, r6
   1b6e0:	strgt	r6, [r5]
   1b6e4:	movgt	r7, r6
   1b6e8:	ldr	r4, [ip, #24]
   1b6ec:	cmp	r4, #1
   1b6f0:	bne	1bbc8 <argp_parse@@Base+0x3010>
   1b6f4:	cmp	r7, r9
   1b6f8:	cmpne	r9, r6
   1b6fc:	bne	1b7a8 <argp_parse@@Base+0x2bf0>
   1b700:	cmp	r9, r6
   1b704:	mov	r1, r5
   1b708:	mov	r0, r6
   1b70c:	bne	1bb74 <argp_parse@@Base+0x2fbc>
   1b710:	cmp	r6, r2
   1b714:	blt	1bb98 <argp_parse@@Base+0x2fe0>
   1b718:	b	1bbb4 <argp_parse@@Base+0x2ffc>
   1b71c:	ldrb	r2, [r0]
   1b720:	ldrb	r1, [r0, #1]
   1b724:	cmp	r2, #87	; 0x57
   1b728:	bne	1b780 <argp_parse@@Base+0x2bc8>
   1b72c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b730:	cmp	r2, #0
   1b734:	beq	1b780 <argp_parse@@Base+0x2bc8>
   1b738:	cmp	r1, #59	; 0x3b
   1b73c:	bne	1b780 <argp_parse@@Base+0x2bc8>
   1b740:	ldrb	r0, [r8]
   1b744:	cmp	r0, #0
   1b748:	bne	1c11c <argp_parse@@Base+0x3564>
   1b74c:	cmp	r6, r3
   1b750:	bne	1c114 <argp_parse@@Base+0x355c>
   1b754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b758:	cmp	r0, #0
   1b75c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b760:	bne	1c21c <argp_parse@@Base+0x3664>
   1b764:	str	r4, [r7, #8]
   1b768:	ldrb	r4, [r9]
   1b76c:	cmp	r4, #58	; 0x3a
   1b770:	movwne	r4, #63	; 0x3f
   1b774:	mov	r0, r4
   1b778:	sub	sp, fp, #28
   1b77c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b780:	cmp	r1, #58	; 0x3a
   1b784:	bne	1c0ac <argp_parse@@Base+0x34f4>
   1b788:	ldrb	r0, [r0, #2]
   1b78c:	ldrb	r1, [r8]
   1b790:	cmp	r0, #58	; 0x3a
   1b794:	bne	1bce4 <argp_parse@@Base+0x312c>
   1b798:	cmp	r1, #0
   1b79c:	bne	1bcec <argp_parse@@Base+0x3134>
   1b7a0:	mov	r0, #0
   1b7a4:	b	1c1dc <argp_parse@@Base+0x3624>
   1b7a8:	cmp	r6, r9
   1b7ac:	str	r4, [sp, #28]
   1b7b0:	str	r5, [sp, #56]	; 0x38
   1b7b4:	str	r7, [fp, #-40]	; 0xffffffd8
   1b7b8:	str	r3, [sp, #52]	; 0x34
   1b7bc:	str	r2, [fp, #-36]	; 0xffffffdc
   1b7c0:	ble	1bb50 <argp_parse@@Base+0x2f98>
   1b7c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b7c8:	cmp	r0, r9
   1b7cc:	bge	1bb50 <argp_parse@@Base+0x2f98>
   1b7d0:	add	r0, r8, r9, lsl #2
   1b7d4:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1b7d8:	mov	r2, r6
   1b7dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1b7e0:	sub	r0, r8, r9, lsl #2
   1b7e4:	str	r0, [sp, #32]
   1b7e8:	rsb	r0, r9, #1
   1b7ec:	add	r0, r8, r0, lsl #2
   1b7f0:	str	r0, [sp, #44]	; 0x2c
   1b7f4:	mvn	r0, r9
   1b7f8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b7fc:	add	r0, r8, r0, lsl #2
   1b800:	add	r0, r0, #4
   1b804:	str	r0, [sp, #24]
   1b808:	add	r0, r8, #4
   1b80c:	str	r0, [sp, #60]	; 0x3c
   1b810:	sub	r4, r9, lr
   1b814:	sub	r0, r2, r9
   1b818:	cmp	r0, r4
   1b81c:	bgt	1b844 <argp_parse@@Base+0x2c8c>
   1b820:	b	1b8f0 <argp_parse@@Base+0x2d38>
   1b824:	mov	r2, sl
   1b828:	cmp	r2, r9
   1b82c:	cmpgt	r9, lr
   1b830:	ble	1bb50 <argp_parse@@Base+0x2f98>
   1b834:	sub	r4, r9, lr
   1b838:	sub	r0, r2, r9
   1b83c:	cmp	r0, r4
   1b840:	ble	1b8f0 <argp_parse@@Base+0x2d38>
   1b844:	sub	sl, r2, r4
   1b848:	cmp	r4, #1
   1b84c:	blt	1b824 <argp_parse@@Base+0x2c6c>
   1b850:	mov	r3, #0
   1b854:	cmp	r4, #4
   1b858:	bcc	1baac <argp_parse@@Base+0x2ef4>
   1b85c:	add	r5, r8, r2, lsl #2
   1b860:	add	r1, r8, lr, lsl #2
   1b864:	cmp	r1, r5
   1b868:	bcs	1b87c <argp_parse@@Base+0x2cc4>
   1b86c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b870:	add	r5, r8, sl, lsl #2
   1b874:	cmp	r5, r0
   1b878:	bcc	1baac <argp_parse@@Base+0x2ef4>
   1b87c:	bic	r3, r4, #3
   1b880:	mov	r0, #1
   1b884:	str	sl, [sp, #40]	; 0x28
   1b888:	subs	r5, r3, #4
   1b88c:	add	r5, r0, r5, lsr #2
   1b890:	and	r0, r5, #1
   1b894:	str	r0, [sp, #36]	; 0x24
   1b898:	beq	1ba68 <argp_parse@@Base+0x2eb0>
   1b89c:	sub	r8, r5, r0
   1b8a0:	ldr	r0, [sp, #24]
   1b8a4:	add	r5, r2, lr
   1b8a8:	mov	r7, #0
   1b8ac:	add	sl, r0, r5, lsl #2
   1b8b0:	mov	r5, #0
   1b8b4:	add	ip, r1, r5
   1b8b8:	add	r0, sl, r5
   1b8bc:	add	r5, r5, #32
   1b8c0:	subs	r8, r8, #2
   1b8c4:	add	r7, r7, #8
   1b8c8:	vld1.32	{d16-d17}, [r0]
   1b8cc:	vld1.32	{d18-d19}, [ip]
   1b8d0:	vst1.32	{d16-d17}, [ip]!
   1b8d4:	vst1.32	{d18-d19}, [r0]!
   1b8d8:	vld1.32	{d16-d17}, [r0]
   1b8dc:	vld1.32	{d18-d19}, [ip]
   1b8e0:	vst1.32	{d16-d17}, [ip]
   1b8e4:	vst1.32	{d18-d19}, [r0]
   1b8e8:	bne	1b8b4 <argp_parse@@Base+0x2cfc>
   1b8ec:	b	1ba6c <argp_parse@@Base+0x2eb4>
   1b8f0:	cmp	r0, #1
   1b8f4:	blt	1ba50 <argp_parse@@Base+0x2e98>
   1b8f8:	mov	sl, #0
   1b8fc:	cmp	r0, #3
   1b900:	bls	1b9cc <argp_parse@@Base+0x2e14>
   1b904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b908:	add	r1, r3, r2, lsl #2
   1b90c:	add	r8, r3, lr, lsl #2
   1b910:	cmp	r8, r1
   1b914:	bcs	1b930 <argp_parse@@Base+0x2d78>
   1b918:	ldr	r3, [sp, #32]
   1b91c:	add	r1, r2, lr
   1b920:	add	r1, r3, r1, lsl #2
   1b924:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b928:	cmp	r3, r1
   1b92c:	bcc	1b9cc <argp_parse@@Base+0x2e14>
   1b930:	bic	sl, r0, #3
   1b934:	mov	r3, #1
   1b938:	subs	r1, sl, #4
   1b93c:	add	r1, r3, r1, lsr #2
   1b940:	and	r3, r1, #1
   1b944:	str	r3, [sp, #40]	; 0x28
   1b948:	beq	1bb38 <argp_parse@@Base+0x2f80>
   1b94c:	sub	r7, r3, r1
   1b950:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b954:	mov	r1, #0
   1b958:	mov	ip, #32
   1b95c:	mov	r5, r3
   1b960:	mov	r4, r8
   1b964:	adds	r7, r7, #2
   1b968:	add	r1, r1, #8
   1b96c:	vld1.32	{d16-d17}, [r5]!
   1b970:	vld1.32	{d18-d19}, [r4]!
   1b974:	vst1.32	{d16-d17}, [r8], ip
   1b978:	vst1.32	{d18-d19}, [r3], ip
   1b97c:	vld1.32	{d16-d17}, [r5]
   1b980:	vld1.32	{d18-d19}, [r4]
   1b984:	vst1.32	{d16-d17}, [r4]
   1b988:	vst1.32	{d18-d19}, [r5]
   1b98c:	bne	1b95c <argp_parse@@Base+0x2da4>
   1b990:	ldr	r3, [sp, #40]	; 0x28
   1b994:	ldr	ip, [fp, #16]
   1b998:	cmp	r3, #0
   1b99c:	beq	1b9c4 <argp_parse@@Base+0x2e0c>
   1b9a0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b9a4:	add	r3, r1, lr
   1b9a8:	add	r1, r1, r9
   1b9ac:	add	r3, r4, r3, lsl #2
   1b9b0:	add	r1, r4, r1, lsl #2
   1b9b4:	vld1.32	{d16-d17}, [r1]
   1b9b8:	vld1.32	{d18-d19}, [r3]
   1b9bc:	vst1.32	{d16-d17}, [r3]
   1b9c0:	vst1.32	{d18-d19}, [r1]
   1b9c4:	cmp	r0, sl
   1b9c8:	beq	1ba50 <argp_parse@@Base+0x2e98>
   1b9cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b9d0:	tst	r0, #1
   1b9d4:	mov	r4, sl
   1b9d8:	add	r1, r2, r1
   1b9dc:	beq	1ba00 <argp_parse@@Base+0x2e48>
   1b9e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9e4:	add	r7, sl, r9
   1b9e8:	add	r4, sl, lr
   1b9ec:	ldr	r5, [r3, r7, lsl #2]
   1b9f0:	ldr	r8, [r3, r4, lsl #2]
   1b9f4:	str	r5, [r3, r4, lsl #2]
   1b9f8:	orr	r4, sl, #1
   1b9fc:	str	r8, [r3, r7, lsl #2]
   1ba00:	cmp	r1, sl
   1ba04:	beq	1ba50 <argp_parse@@Base+0x2e98>
   1ba08:	ldr	r3, [sp, #60]	; 0x3c
   1ba0c:	add	r1, lr, r4
   1ba10:	add	r4, r9, r4
   1ba14:	add	r1, r3, r1, lsl #2
   1ba18:	add	r3, r3, r4, lsl #2
   1ba1c:	sub	r4, r4, r2
   1ba20:	ldr	r7, [r1, #-4]
   1ba24:	ldr	r5, [r3, #-4]
   1ba28:	adds	r4, r4, #2
   1ba2c:	str	r5, [r1, #-4]
   1ba30:	str	r7, [r3, #-4]
   1ba34:	ldr	r7, [r1]
   1ba38:	ldr	r5, [r3]
   1ba3c:	str	r5, [r1]
   1ba40:	str	r7, [r3]
   1ba44:	add	r1, r1, #8
   1ba48:	add	r3, r3, #8
   1ba4c:	bne	1ba20 <argp_parse@@Base+0x2e68>
   1ba50:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1ba54:	add	lr, r0, lr
   1ba58:	cmp	r2, r9
   1ba5c:	cmpgt	r9, lr
   1ba60:	bgt	1b834 <argp_parse@@Base+0x2c7c>
   1ba64:	b	1bb50 <argp_parse@@Base+0x2f98>
   1ba68:	mov	r7, #0
   1ba6c:	ldr	r0, [sp, #36]	; 0x24
   1ba70:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1ba74:	ldr	sl, [sp, #40]	; 0x28
   1ba78:	cmp	r0, #0
   1ba7c:	beq	1baa0 <argp_parse@@Base+0x2ee8>
   1ba80:	add	r0, r7, lr
   1ba84:	add	r1, r7, sl
   1ba88:	add	r0, r8, r0, lsl #2
   1ba8c:	add	r1, r8, r1, lsl #2
   1ba90:	vld1.32	{d16-d17}, [r1]
   1ba94:	vld1.32	{d18-d19}, [r0]
   1ba98:	vst1.32	{d16-d17}, [r0]
   1ba9c:	vst1.32	{d18-d19}, [r1]
   1baa0:	ldr	ip, [fp, #16]
   1baa4:	cmp	r4, r3
   1baa8:	beq	1b824 <argp_parse@@Base+0x2c6c>
   1baac:	mvn	r0, r3
   1bab0:	tst	r4, #1
   1bab4:	add	r1, r9, r0
   1bab8:	beq	1bad8 <argp_parse@@Base+0x2f20>
   1babc:	add	r0, r3, lr
   1bac0:	add	r5, r3, sl
   1bac4:	orr	r3, r3, #1
   1bac8:	ldr	r7, [r8, r0, lsl #2]
   1bacc:	ldr	r4, [r8, r5, lsl #2]
   1bad0:	str	r4, [r8, r0, lsl #2]
   1bad4:	str	r7, [r8, r5, lsl #2]
   1bad8:	cmp	r1, lr
   1badc:	beq	1b824 <argp_parse@@Base+0x2c6c>
   1bae0:	ldr	r4, [sp, #60]	; 0x3c
   1bae4:	add	r0, lr, r3
   1bae8:	sub	r1, r9, r3
   1baec:	add	r4, r4, r0, lsl #2
   1baf0:	add	r0, r2, lr
   1baf4:	ldr	r2, [sp, #44]	; 0x2c
   1baf8:	add	r0, r0, r3
   1bafc:	add	r2, r2, r0, lsl #2
   1bb00:	ldr	r0, [r4, #-4]
   1bb04:	ldr	r3, [r2, #-4]
   1bb08:	sub	r1, r1, #2
   1bb0c:	cmp	lr, r1
   1bb10:	str	r3, [r4, #-4]
   1bb14:	str	r0, [r2, #-4]
   1bb18:	ldr	r0, [r4]
   1bb1c:	ldr	r3, [r2]
   1bb20:	str	r3, [r4]
   1bb24:	str	r0, [r2]
   1bb28:	add	r2, r2, #8
   1bb2c:	add	r4, r4, #8
   1bb30:	bne	1bb00 <argp_parse@@Base+0x2f48>
   1bb34:	b	1b824 <argp_parse@@Base+0x2c6c>
   1bb38:	mov	r1, #0
   1bb3c:	ldr	r3, [sp, #40]	; 0x28
   1bb40:	ldr	ip, [fp, #16]
   1bb44:	cmp	r3, #0
   1bb48:	bne	1b9a0 <argp_parse@@Base+0x2de8>
   1bb4c:	b	1b9c4 <argp_parse@@Base+0x2e0c>
   1bb50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb54:	ldr	r3, [sp, #52]	; 0x34
   1bb58:	ldr	r5, [sp, #56]	; 0x38
   1bb5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb60:	ldr	r4, [sp, #28]
   1bb64:	add	r0, r0, r6
   1bb68:	mov	r1, r3
   1bb6c:	sub	r0, r0, r9
   1bb70:	str	r0, [r5]
   1bb74:	mov	r7, r0
   1bb78:	str	r6, [r1]
   1bb7c:	cmp	r6, r2
   1bb80:	blt	1bb98 <argp_parse@@Base+0x2fe0>
   1bb84:	b	1bbb4 <argp_parse@@Base+0x2ffc>
   1bb88:	add	r6, r6, #1
   1bb8c:	cmp	r2, r6
   1bb90:	str	r6, [ip]
   1bb94:	beq	1bbbc <argp_parse@@Base+0x3004>
   1bb98:	ldr	r0, [r8, r6, lsl #2]
   1bb9c:	ldrb	r1, [r0]
   1bba0:	cmp	r1, #45	; 0x2d
   1bba4:	bne	1bb88 <argp_parse@@Base+0x2fd0>
   1bba8:	ldrb	r0, [r0, #1]
   1bbac:	cmp	r0, #0
   1bbb0:	beq	1bb88 <argp_parse@@Base+0x2fd0>
   1bbb4:	mov	r9, r6
   1bbb8:	b	1bbc0 <argp_parse@@Base+0x3008>
   1bbbc:	mov	r9, r2
   1bbc0:	mov	r6, r9
   1bbc4:	str	r9, [r3]
   1bbc8:	cmp	r6, r2
   1bbcc:	beq	1c0a0 <argp_parse@@Base+0x34e8>
   1bbd0:	mov	sl, r4
   1bbd4:	movw	r4, #57187	; 0xdf63
   1bbd8:	ldr	r0, [r8, r6, lsl #2]
   1bbdc:	str	r5, [sp, #56]	; 0x38
   1bbe0:	str	r7, [fp, #-40]	; 0xffffffd8
   1bbe4:	str	r3, [sp, #52]	; 0x34
   1bbe8:	str	r2, [fp, #-36]	; 0xffffffdc
   1bbec:	movt	r4, #1
   1bbf0:	mov	r1, r4
   1bbf4:	bl	11340 <strcmp@plt>
   1bbf8:	cmp	r0, #0
   1bbfc:	beq	1bc8c <argp_parse@@Base+0x30d4>
   1bc00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bc04:	ldr	ip, [fp, #16]
   1bc08:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1bc0c:	cmp	r6, r2
   1bc10:	beq	1c0a0 <argp_parse@@Base+0x34e8>
   1bc14:	ldr	r5, [r8, r6, lsl #2]
   1bc18:	mov	r3, r4
   1bc1c:	mvn	r4, #0
   1bc20:	ldrb	r0, [r5]
   1bc24:	cmp	r0, #45	; 0x2d
   1bc28:	bne	1bcc4 <argp_parse@@Base+0x310c>
   1bc2c:	mov	r7, r5
   1bc30:	ldrb	r1, [r7, #1]!
   1bc34:	cmp	r1, #0
   1bc38:	beq	1bcc4 <argp_parse@@Base+0x310c>
   1bc3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bc40:	cmp	r0, #0
   1bc44:	beq	1c20c <argp_parse@@Base+0x3654>
   1bc48:	ldr	r9, [fp, #12]
   1bc4c:	cmp	r1, #45	; 0x2d
   1bc50:	bne	1c168 <argp_parse@@Base+0x35b0>
   1bc54:	add	r0, r5, #2
   1bc58:	mov	r1, r8
   1bc5c:	str	r0, [ip, #20]
   1bc60:	ldr	r0, [fp, #8]
   1bc64:	stm	sp, {r0, r9, ip}
   1bc68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bc6c:	str	r3, [sp, #16]
   1bc70:	str	r0, [sp, #12]
   1bc74:	mov	r0, r2
   1bc78:	ldr	r2, [sp, #48]	; 0x30
   1bc7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bc80:	bl	1c264 <argp_parse@@Base+0x36ac>
   1bc84:	sub	sp, fp, #28
   1bc88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc90:	ldr	ip, [fp, #16]
   1bc94:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1bc98:	add	r2, r6, #1
   1bc9c:	cmp	r0, r9
   1bca0:	str	r2, [ip]
   1bca4:	cmpne	r9, r2
   1bca8:	bne	1bcfc <argp_parse@@Base+0x3144>
   1bcac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bcb0:	ldr	r1, [sp, #56]	; 0x38
   1bcb4:	cmp	r0, r9
   1bcb8:	mov	r0, r2
   1bcbc:	beq	1c088 <argp_parse@@Base+0x34d0>
   1bcc0:	b	1c090 <argp_parse@@Base+0x34d8>
   1bcc4:	cmp	sl, #0
   1bcc8:	addne	r0, r6, #1
   1bccc:	strne	r5, [ip, #12]
   1bcd0:	movne	r4, #1
   1bcd4:	strne	r0, [ip]
   1bcd8:	mov	r0, r4
   1bcdc:	sub	sp, fp, #28
   1bce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bce4:	cmp	r1, #0
   1bce8:	beq	1c0c0 <argp_parse@@Base+0x3508>
   1bcec:	add	r0, r6, #1
   1bcf0:	str	r8, [r7, #12]
   1bcf4:	str	r0, [r7]
   1bcf8:	b	1c1e0 <argp_parse@@Base+0x3628>
   1bcfc:	cmp	r6, r9
   1bd00:	str	r2, [sp, #48]	; 0x30
   1bd04:	blt	1c068 <argp_parse@@Base+0x34b0>
   1bd08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd0c:	cmp	r0, r9
   1bd10:	bge	1c068 <argp_parse@@Base+0x34b0>
   1bd14:	add	r0, r8, r9, lsl #2
   1bd18:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1bd1c:	str	r0, [fp, #-44]	; 0xffffffd4
   1bd20:	sub	r0, r8, r9, lsl #2
   1bd24:	str	r0, [sp, #44]	; 0x2c
   1bd28:	rsb	r0, r9, #1
   1bd2c:	add	r0, r8, r0, lsl #2
   1bd30:	str	r0, [fp, #-56]	; 0xffffffc8
   1bd34:	mvn	r0, r9
   1bd38:	str	r0, [fp, #-48]	; 0xffffffd0
   1bd3c:	add	r0, r8, r0, lsl #2
   1bd40:	add	r0, r0, #4
   1bd44:	str	r0, [sp, #40]	; 0x28
   1bd48:	add	r0, r8, #4
   1bd4c:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd50:	ldr	r0, [sp, #48]	; 0x30
   1bd54:	sub	r4, r9, ip
   1bd58:	sub	sl, r0, r9
   1bd5c:	cmp	sl, r4
   1bd60:	bgt	1bd88 <argp_parse@@Base+0x31d0>
   1bd64:	b	1be30 <argp_parse@@Base+0x3278>
   1bd68:	mov	r0, r3
   1bd6c:	cmp	r0, r9
   1bd70:	cmpgt	r9, ip
   1bd74:	ble	1c068 <argp_parse@@Base+0x34b0>
   1bd78:	sub	r4, r9, ip
   1bd7c:	sub	sl, r0, r9
   1bd80:	cmp	sl, r4
   1bd84:	ble	1be30 <argp_parse@@Base+0x3278>
   1bd88:	sub	r3, r0, r4
   1bd8c:	cmp	r4, #1
   1bd90:	blt	1bd68 <argp_parse@@Base+0x31b0>
   1bd94:	mov	r1, #0
   1bd98:	cmp	r4, #4
   1bd9c:	bcc	1bf10 <argp_parse@@Base+0x3358>
   1bda0:	add	r2, r8, r0, lsl #2
   1bda4:	add	r7, r8, ip, lsl #2
   1bda8:	cmp	r7, r2
   1bdac:	bcs	1bdc0 <argp_parse@@Base+0x3208>
   1bdb0:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1bdb4:	add	r2, r8, r3, lsl #2
   1bdb8:	cmp	r2, r5
   1bdbc:	bcc	1bf10 <argp_parse@@Base+0x3358>
   1bdc0:	bic	r1, r4, #3
   1bdc4:	mov	r6, #1
   1bdc8:	subs	r2, r1, #4
   1bdcc:	add	r2, r6, r2, lsr #2
   1bdd0:	and	r6, r2, #1
   1bdd4:	str	r6, [sp, #60]	; 0x3c
   1bdd8:	beq	1bed0 <argp_parse@@Base+0x3318>
   1bddc:	ldr	r5, [sp, #40]	; 0x28
   1bde0:	sub	r2, r6, r2
   1bde4:	add	r6, ip, r0
   1bde8:	add	lr, r5, r6, lsl #2
   1bdec:	mov	r5, #0
   1bdf0:	mov	r6, #0
   1bdf4:	add	sl, r7, r5
   1bdf8:	add	r8, lr, r5
   1bdfc:	adds	r2, r2, #2
   1be00:	add	r5, r5, #32
   1be04:	add	r6, r6, #8
   1be08:	vld1.32	{d16-d17}, [r8]
   1be0c:	vld1.32	{d18-d19}, [sl]
   1be10:	vst1.32	{d16-d17}, [sl]!
   1be14:	vst1.32	{d18-d19}, [r8]!
   1be18:	vld1.32	{d16-d17}, [r8]
   1be1c:	vld1.32	{d18-d19}, [sl]
   1be20:	vst1.32	{d16-d17}, [sl]
   1be24:	vst1.32	{d18-d19}, [r8]
   1be28:	bne	1bdf4 <argp_parse@@Base+0x323c>
   1be2c:	b	1bed4 <argp_parse@@Base+0x331c>
   1be30:	cmp	sl, #1
   1be34:	blt	1c058 <argp_parse@@Base+0x34a0>
   1be38:	mov	r1, #0
   1be3c:	cmp	sl, #3
   1be40:	bls	1bfd8 <argp_parse@@Base+0x3420>
   1be44:	add	r2, r8, r0, lsl #2
   1be48:	add	r7, r8, ip, lsl #2
   1be4c:	cmp	r7, r2
   1be50:	bcs	1be6c <argp_parse@@Base+0x32b4>
   1be54:	ldr	r3, [sp, #44]	; 0x2c
   1be58:	add	r2, ip, r0
   1be5c:	add	r2, r3, r2, lsl #2
   1be60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1be64:	cmp	r3, r2
   1be68:	bcc	1bfd8 <argp_parse@@Base+0x3420>
   1be6c:	bic	r1, sl, #3
   1be70:	mov	r3, #1
   1be74:	subs	r2, r1, #4
   1be78:	add	r2, r3, r2, lsr #2
   1be7c:	and	r3, r2, #1
   1be80:	str	r3, [sp, #60]	; 0x3c
   1be84:	beq	1bf9c <argp_parse@@Base+0x33e4>
   1be88:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1be8c:	sub	r6, r3, r2
   1be90:	mov	r4, #0
   1be94:	mov	lr, #32
   1be98:	mov	r2, r5
   1be9c:	mov	r3, r7
   1bea0:	adds	r6, r6, #2
   1bea4:	add	r4, r4, #8
   1bea8:	vld1.32	{d16-d17}, [r2]!
   1beac:	vld1.32	{d18-d19}, [r3]!
   1beb0:	vst1.32	{d16-d17}, [r7], lr
   1beb4:	vst1.32	{d18-d19}, [r5], lr
   1beb8:	vld1.32	{d16-d17}, [r2]
   1bebc:	vld1.32	{d18-d19}, [r3]
   1bec0:	vst1.32	{d16-d17}, [r3]
   1bec4:	vst1.32	{d18-d19}, [r2]
   1bec8:	bne	1be98 <argp_parse@@Base+0x32e0>
   1becc:	b	1bfa0 <argp_parse@@Base+0x33e8>
   1bed0:	mov	r6, #0
   1bed4:	ldr	r2, [sp, #60]	; 0x3c
   1bed8:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1bedc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1bee0:	cmp	r2, #0
   1bee4:	beq	1bf08 <argp_parse@@Base+0x3350>
   1bee8:	add	r2, r6, ip
   1beec:	add	r7, r6, r3
   1bef0:	add	r2, r8, r2, lsl #2
   1bef4:	add	r7, r8, r7, lsl #2
   1bef8:	vld1.32	{d16-d17}, [r7]
   1befc:	vld1.32	{d18-d19}, [r2]
   1bf00:	vst1.32	{d16-d17}, [r2]
   1bf04:	vst1.32	{d18-d19}, [r7]
   1bf08:	cmp	r4, r1
   1bf0c:	beq	1bd68 <argp_parse@@Base+0x31b0>
   1bf10:	mvn	r2, r1
   1bf14:	tst	r4, #1
   1bf18:	add	r2, r9, r2
   1bf1c:	beq	1bf3c <argp_parse@@Base+0x3384>
   1bf20:	add	r7, r1, ip
   1bf24:	add	r5, r1, r3
   1bf28:	orr	r1, r1, #1
   1bf2c:	ldr	r6, [r8, r7, lsl #2]
   1bf30:	ldr	r4, [r8, r5, lsl #2]
   1bf34:	str	r4, [r8, r7, lsl #2]
   1bf38:	str	r6, [r8, r5, lsl #2]
   1bf3c:	cmp	r2, ip
   1bf40:	beq	1bd68 <argp_parse@@Base+0x31b0>
   1bf44:	add	r0, ip, r0
   1bf48:	sub	r2, r9, r1
   1bf4c:	add	r7, ip, r1
   1bf50:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1bf54:	add	r0, r0, r1
   1bf58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1bf5c:	add	r7, r4, r7, lsl #2
   1bf60:	add	r0, r1, r0, lsl #2
   1bf64:	ldr	r1, [r7, #-4]
   1bf68:	ldr	r6, [r0, #-4]
   1bf6c:	sub	r2, r2, #2
   1bf70:	cmp	ip, r2
   1bf74:	str	r6, [r7, #-4]
   1bf78:	str	r1, [r0, #-4]
   1bf7c:	ldr	r1, [r7]
   1bf80:	ldr	r6, [r0]
   1bf84:	str	r6, [r7]
   1bf88:	str	r1, [r0]
   1bf8c:	add	r0, r0, #8
   1bf90:	add	r7, r7, #8
   1bf94:	bne	1bf64 <argp_parse@@Base+0x33ac>
   1bf98:	b	1bd68 <argp_parse@@Base+0x31b0>
   1bf9c:	mov	r4, #0
   1bfa0:	ldr	r2, [sp, #60]	; 0x3c
   1bfa4:	cmp	r2, #0
   1bfa8:	beq	1bfcc <argp_parse@@Base+0x3414>
   1bfac:	add	r2, r4, ip
   1bfb0:	add	r3, r4, r9
   1bfb4:	add	r2, r8, r2, lsl #2
   1bfb8:	add	r3, r8, r3, lsl #2
   1bfbc:	vld1.32	{d16-d17}, [r3]
   1bfc0:	vld1.32	{d18-d19}, [r2]
   1bfc4:	vst1.32	{d16-d17}, [r2]
   1bfc8:	vst1.32	{d18-d19}, [r3]
   1bfcc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1bfd0:	cmp	sl, r1
   1bfd4:	beq	1c058 <argp_parse@@Base+0x34a0>
   1bfd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bfdc:	tst	sl, #1
   1bfe0:	mov	r3, r1
   1bfe4:	add	r2, r0, r2
   1bfe8:	beq	1c008 <argp_parse@@Base+0x3450>
   1bfec:	add	r6, r1, r9
   1bff0:	add	r3, r1, ip
   1bff4:	ldr	r5, [r8, r6, lsl #2]
   1bff8:	ldr	r7, [r8, r3, lsl #2]
   1bffc:	str	r5, [r8, r3, lsl #2]
   1c000:	orr	r3, r1, #1
   1c004:	str	r7, [r8, r6, lsl #2]
   1c008:	cmp	r2, r1
   1c00c:	beq	1c058 <argp_parse@@Base+0x34a0>
   1c010:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c014:	add	r1, ip, r3
   1c018:	add	r3, r9, r3
   1c01c:	add	r1, r2, r1, lsl #2
   1c020:	add	r2, r2, r3, lsl #2
   1c024:	sub	r3, r3, r0
   1c028:	ldr	r7, [r1, #-4]
   1c02c:	ldr	r6, [r2, #-4]
   1c030:	adds	r3, r3, #2
   1c034:	str	r6, [r1, #-4]
   1c038:	str	r7, [r2, #-4]
   1c03c:	ldr	r7, [r1]
   1c040:	ldr	r6, [r2]
   1c044:	str	r6, [r1]
   1c048:	str	r7, [r2]
   1c04c:	add	r1, r1, #8
   1c050:	add	r2, r2, #8
   1c054:	bne	1c028 <argp_parse@@Base+0x3470>
   1c058:	add	ip, sl, ip
   1c05c:	cmp	r0, r9
   1c060:	cmpgt	r9, ip
   1c064:	bgt	1bd78 <argp_parse@@Base+0x31c0>
   1c068:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c06c:	ldr	r2, [sp, #48]	; 0x30
   1c070:	ldr	r1, [sp, #56]	; 0x38
   1c074:	ldr	ip, [fp, #16]
   1c078:	add	r0, r0, r2
   1c07c:	sub	r0, r0, r9
   1c080:	str	r0, [r1]
   1c084:	ldr	r1, [sp, #52]	; 0x34
   1c088:	str	r2, [r1]
   1c08c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c090:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1c094:	str	lr, [ip]
   1c098:	str	lr, [ip, #32]
   1c09c:	mov	r9, lr
   1c0a0:	cmp	r7, r9
   1c0a4:	mvn	r4, #0
   1c0a8:	strne	r7, [ip]
   1c0ac:	mov	r0, r4
   1c0b0:	sub	sp, fp, #28
   1c0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c0b8:	mov	r0, #1
   1c0bc:	b	1b620 <argp_parse@@Base+0x2a68>
   1c0c0:	cmp	r6, r3
   1c0c4:	bne	1c1cc <argp_parse@@Base+0x3614>
   1c0c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c0cc:	cmp	r0, #0
   1c0d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c0d4:	bne	1c240 <argp_parse@@Base+0x3688>
   1c0d8:	str	r4, [r7, #8]
   1c0dc:	ldrb	r4, [r9]
   1c0e0:	cmp	r4, #58	; 0x3a
   1c0e4:	movwne	r4, #63	; 0x3f
   1c0e8:	b	1c1e0 <argp_parse@@Base+0x3628>
   1c0ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c0f0:	movw	r1, #58170	; 0xe33a
   1c0f4:	mov	r3, r4
   1c0f8:	movt	r1, #1
   1c0fc:	ldr	r2, [r0]
   1c100:	movw	r0, #63016	; 0xf628
   1c104:	movt	r0, #2
   1c108:	ldr	r0, [r0]
   1c10c:	bl	1152c <fprintf@plt>
   1c110:	b	1b6a8 <argp_parse@@Base+0x2af0>
   1c114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c118:	ldr	r8, [r0, r6, lsl #2]
   1c11c:	ldr	r2, [fp, #8]
   1c120:	movw	r1, #58239	; 0xe37f
   1c124:	str	r8, [r7, #12]
   1c128:	mov	r0, #0
   1c12c:	movt	r1, #1
   1c130:	str	r0, [r7, #12]
   1c134:	str	r8, [r7, #20]
   1c138:	str	r2, [sp]
   1c13c:	stmib	sp, {r0, r7}
   1c140:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c144:	str	r1, [sp, #16]
   1c148:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c14c:	mov	r2, r9
   1c150:	str	r0, [sp, #12]
   1c154:	mov	r0, r3
   1c158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c15c:	bl	1c264 <argp_parse@@Base+0x36ac>
   1c160:	sub	sp, fp, #28
   1c164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c168:	cmp	r9, #0
   1c16c:	beq	1c20c <argp_parse@@Base+0x3654>
   1c170:	ldrb	r0, [r5, #2]
   1c174:	cmp	r0, #0
   1c178:	beq	1c1f4 <argp_parse@@Base+0x363c>
   1c17c:	ldr	r1, [fp, #8]
   1c180:	movw	r0, #57188	; 0xdf64
   1c184:	str	r7, [ip, #20]
   1c188:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c18c:	movt	r0, #1
   1c190:	stm	sp, {r1, r9, ip}
   1c194:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c198:	str	r0, [sp, #16]
   1c19c:	mov	r0, r2
   1c1a0:	ldr	r2, [sp, #48]	; 0x30
   1c1a4:	str	r1, [sp, #12]
   1c1a8:	mov	r1, r8
   1c1ac:	bl	1c264 <argp_parse@@Base+0x36ac>
   1c1b0:	ldr	ip, [fp, #16]
   1c1b4:	mov	r4, r0
   1c1b8:	cmn	r0, #1
   1c1bc:	bne	1c0ac <argp_parse@@Base+0x34f4>
   1c1c0:	ldr	r6, [ip]
   1c1c4:	ldr	r5, [r8, r6, lsl #2]
   1c1c8:	b	1c20c <argp_parse@@Base+0x3654>
   1c1cc:	add	r0, r6, #1
   1c1d0:	str	r0, [r7]
   1c1d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c1d8:	ldr	r0, [r0, r6, lsl #2]
   1c1dc:	str	r0, [r7, #12]
   1c1e0:	mov	r0, #0
   1c1e4:	str	r0, [r7, #20]
   1c1e8:	mov	r0, r4
   1c1ec:	sub	sp, fp, #28
   1c1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1f4:	ldr	r0, [sp, #48]	; 0x30
   1c1f8:	bl	11520 <strchr@plt>
   1c1fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c200:	ldr	ip, [fp, #16]
   1c204:	cmp	r0, #0
   1c208:	beq	1c17c <argp_parse@@Base+0x35c4>
   1c20c:	ldr	r9, [sp, #48]	; 0x30
   1c210:	add	r5, r5, #1
   1c214:	str	r5, [ip, #20]
   1c218:	b	1b65c <argp_parse@@Base+0x2aa4>
   1c21c:	ldr	r2, [r0]
   1c220:	movw	r0, #63016	; 0xf628
   1c224:	movw	r1, #58198	; 0xe356
   1c228:	mov	r3, r4
   1c22c:	movt	r0, #2
   1c230:	movt	r1, #1
   1c234:	ldr	r0, [r0]
   1c238:	bl	1152c <fprintf@plt>
   1c23c:	b	1b764 <argp_parse@@Base+0x2bac>
   1c240:	ldr	r2, [r0]
   1c244:	movw	r0, #63016	; 0xf628
   1c248:	movw	r1, #58198	; 0xe356
   1c24c:	mov	r3, r4
   1c250:	movt	r0, #2
   1c254:	movt	r1, #1
   1c258:	ldr	r0, [r0]
   1c25c:	bl	1152c <fprintf@plt>
   1c260:	b	1c0d8 <argp_parse@@Base+0x3520>
   1c264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c268:	add	fp, sp, #28
   1c26c:	sub	sp, sp, #44	; 0x2c
   1c270:	str	r0, [sp, #8]
   1c274:	ldr	r0, [fp, #16]
   1c278:	str	r2, [sp, #12]
   1c27c:	str	r1, [sp, #16]
   1c280:	ldr	r8, [r0, #20]
   1c284:	mov	r9, r8
   1c288:	b	1c290 <argp_parse@@Base+0x36d8>
   1c28c:	add	r9, r9, #1
   1c290:	ldrb	r0, [r9]
   1c294:	cmp	r0, #0
   1c298:	cmpne	r0, #61	; 0x3d
   1c29c:	bne	1c28c <argp_parse@@Base+0x36d4>
   1c2a0:	ldr	sl, [r3]
   1c2a4:	mvn	r0, #0
   1c2a8:	str	r0, [sp, #24]
   1c2ac:	cmp	sl, #0
   1c2b0:	beq	1c45c <argp_parse@@Base+0x38a4>
   1c2b4:	sub	r0, r9, r8
   1c2b8:	mov	r4, #0
   1c2bc:	mov	r6, sl
   1c2c0:	mov	r7, r3
   1c2c4:	str	r3, [sp, #28]
   1c2c8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c2cc:	b	1c2e0 <argp_parse@@Base+0x3728>
   1c2d0:	ldr	r6, [r7, #16]!
   1c2d4:	add	r4, r4, #1
   1c2d8:	cmp	r6, #0
   1c2dc:	beq	1c314 <argp_parse@@Base+0x375c>
   1c2e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c2e4:	mov	r0, r6
   1c2e8:	mov	r1, r8
   1c2ec:	bl	11658 <strncmp@plt>
   1c2f0:	cmp	r0, #0
   1c2f4:	bne	1c2d0 <argp_parse@@Base+0x3718>
   1c2f8:	mov	r0, r6
   1c2fc:	bl	11514 <strlen@plt>
   1c300:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c304:	cmp	r1, r0
   1c308:	bne	1c2d0 <argp_parse@@Base+0x3718>
   1c30c:	str	r4, [sp, #24]
   1c310:	b	1c6d0 <argp_parse@@Base+0x3b18>
   1c314:	cmp	sl, #0
   1c318:	beq	1c478 <argp_parse@@Base+0x38c0>
   1c31c:	ldr	r0, [fp, #12]
   1c320:	cmp	r0, #0
   1c324:	beq	1c4f8 <argp_parse@@Base+0x3940>
   1c328:	ldr	r0, [fp, #20]
   1c32c:	cmp	r0, #0
   1c330:	beq	1c814 <argp_parse@@Base+0x3c5c>
   1c334:	mov	r0, #0
   1c338:	ldr	r6, [sp, #28]
   1c33c:	mov	r5, #0
   1c340:	mov	r7, #0
   1c344:	str	r0, [sp, #32]
   1c348:	mvn	r0, #0
   1c34c:	str	r0, [sp, #24]
   1c350:	mov	r0, #0
   1c354:	str	r0, [sp, #4]
   1c358:	mov	r0, #0
   1c35c:	str	r0, [sp, #20]
   1c360:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c364:	mov	r0, sl
   1c368:	mov	r1, r8
   1c36c:	bl	11658 <strncmp@plt>
   1c370:	cmp	r0, #0
   1c374:	beq	1c39c <argp_parse@@Base+0x37e4>
   1c378:	mov	r1, r5
   1c37c:	ldr	sl, [r6, #16]!
   1c380:	cmp	sl, #0
   1c384:	beq	1c6ac <argp_parse@@Base+0x3af4>
   1c388:	ldr	r0, [fp, #16]
   1c38c:	add	r1, r1, #1
   1c390:	mov	r5, r1
   1c394:	ldr	r8, [r0, #20]
   1c398:	b	1c360 <argp_parse@@Base+0x37a8>
   1c39c:	cmp	r7, #0
   1c3a0:	beq	1c41c <argp_parse@@Base+0x3864>
   1c3a4:	ldr	r0, [sp, #32]
   1c3a8:	mov	r1, r5
   1c3ac:	cmp	r0, #0
   1c3b0:	bne	1c37c <argp_parse@@Base+0x37c4>
   1c3b4:	ldr	r8, [sp, #20]
   1c3b8:	cmp	r8, #0
   1c3bc:	bne	1c3f8 <argp_parse@@Base+0x3840>
   1c3c0:	mov	r0, r4
   1c3c4:	bl	1ad00 <argp_parse@@Base+0x2148>
   1c3c8:	cmp	r0, #0
   1c3cc:	beq	1c438 <argp_parse@@Base+0x3880>
   1c3d0:	mov	r1, #0
   1c3d4:	mov	r2, r4
   1c3d8:	mov	r8, r0
   1c3dc:	bl	11568 <memset@plt>
   1c3e0:	ldr	r0, [sp, #24]
   1c3e4:	mov	r1, #1
   1c3e8:	mov	r2, #1
   1c3ec:	str	r1, [sp, #4]
   1c3f0:	mov	r1, r5
   1c3f4:	strb	r2, [r8, r0]
   1c3f8:	mov	r0, #1
   1c3fc:	str	r8, [sp, #20]
   1c400:	strb	r0, [r8, r1]
   1c404:	mov	r0, #0
   1c408:	str	r0, [sp, #32]
   1c40c:	ldr	sl, [r6, #16]!
   1c410:	cmp	sl, #0
   1c414:	bne	1c388 <argp_parse@@Base+0x37d0>
   1c418:	b	1c6ac <argp_parse@@Base+0x3af4>
   1c41c:	mov	r7, r6
   1c420:	mov	r1, r5
   1c424:	str	r5, [sp, #24]
   1c428:	ldr	sl, [r6, #16]!
   1c42c:	cmp	sl, #0
   1c430:	bne	1c388 <argp_parse@@Base+0x37d0>
   1c434:	b	1c6ac <argp_parse@@Base+0x3af4>
   1c438:	mov	r0, #1
   1c43c:	mov	r1, r5
   1c440:	str	r0, [sp, #32]
   1c444:	mov	r0, #0
   1c448:	str	r0, [sp, #20]
   1c44c:	ldr	sl, [r6, #16]!
   1c450:	cmp	sl, #0
   1c454:	bne	1c388 <argp_parse@@Base+0x37d0>
   1c458:	b	1c6ac <argp_parse@@Base+0x3af4>
   1c45c:	mov	r0, #0
   1c460:	mov	r4, #0
   1c464:	mov	r7, #0
   1c468:	mov	r1, #0
   1c46c:	mov	r8, #0
   1c470:	mov	r6, r3
   1c474:	b	1c48c <argp_parse@@Base+0x38d4>
   1c478:	ldr	r6, [sp, #28]
   1c47c:	mov	r0, #0
   1c480:	mov	r7, #0
   1c484:	mov	r1, #0
   1c488:	mov	r8, #0
   1c48c:	str	r0, [sp, #32]
   1c490:	cmp	r1, #0
   1c494:	ldreq	r0, [sp, #32]
   1c498:	cmpeq	r0, #0
   1c49c:	beq	1c6c8 <argp_parse@@Base+0x3b10>
   1c4a0:	ldr	r0, [fp, #20]
   1c4a4:	cmp	r0, #0
   1c4a8:	bne	1c8e0 <argp_parse@@Base+0x3d28>
   1c4ac:	cmp	r8, #0
   1c4b0:	beq	1c4bc <argp_parse@@Base+0x3904>
   1c4b4:	mov	r0, r1
   1c4b8:	bl	19f94 <argp_parse@@Base+0x13dc>
   1c4bc:	ldr	r0, [fp, #16]
   1c4c0:	ldr	r4, [r0, #20]
   1c4c4:	mov	r5, r0
   1c4c8:	mov	r0, r4
   1c4cc:	bl	11514 <strlen@plt>
   1c4d0:	mov	r1, #0
   1c4d4:	add	r0, r4, r0
   1c4d8:	str	r1, [r5, #8]
   1c4dc:	str	r0, [r5, #20]
   1c4e0:	ldr	r0, [r5]
   1c4e4:	add	r0, r0, #1
   1c4e8:	str	r0, [r5]
   1c4ec:	mov	r0, #63	; 0x3f
   1c4f0:	sub	sp, fp, #28
   1c4f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4f8:	mov	r0, #0
   1c4fc:	mov	r6, #0
   1c500:	mov	r7, #0
   1c504:	str	r0, [sp, #36]	; 0x24
   1c508:	mvn	r0, #0
   1c50c:	str	r0, [sp, #24]
   1c510:	mov	r0, #0
   1c514:	str	r0, [sp, #32]
   1c518:	mov	r0, #0
   1c51c:	str	r0, [sp, #4]
   1c520:	mov	r0, #0
   1c524:	str	r0, [sp, #20]
   1c528:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c52c:	mov	r0, sl
   1c530:	mov	r1, r8
   1c534:	bl	11658 <strncmp@plt>
   1c538:	cmp	r0, #0
   1c53c:	beq	1c570 <argp_parse@@Base+0x39b8>
   1c540:	ldr	r5, [sp, #28]
   1c544:	ldr	r3, [sp, #36]	; 0x24
   1c548:	add	r0, r5, r6, lsl #4
   1c54c:	ldr	sl, [r0, #16]
   1c550:	cmp	sl, #0
   1c554:	beq	1c6ac <argp_parse@@Base+0x3af4>
   1c558:	ldr	r0, [fp, #16]
   1c55c:	add	r3, r3, #16
   1c560:	add	r6, r6, #1
   1c564:	str	r3, [sp, #36]	; 0x24
   1c568:	ldr	r8, [r0, #20]
   1c56c:	b	1c528 <argp_parse@@Base+0x3970>
   1c570:	ldr	r5, [sp, #28]
   1c574:	ldr	r3, [sp, #36]	; 0x24
   1c578:	cmp	r7, #0
   1c57c:	add	r0, r5, r3
   1c580:	beq	1c618 <argp_parse@@Base+0x3a60>
   1c584:	ldr	r1, [r0, #4]
   1c588:	ldr	r2, [r7, #4]
   1c58c:	cmp	r2, r1
   1c590:	bne	1c5a4 <argp_parse@@Base+0x39ec>
   1c594:	ldr	r1, [r0, #8]
   1c598:	ldr	r2, [r7, #8]
   1c59c:	cmp	r2, r1
   1c5a0:	beq	1c634 <argp_parse@@Base+0x3a7c>
   1c5a4:	ldr	r0, [sp, #32]
   1c5a8:	cmp	r0, #0
   1c5ac:	bne	1c548 <argp_parse@@Base+0x3990>
   1c5b0:	ldr	r0, [fp, #20]
   1c5b4:	cmp	r0, #0
   1c5b8:	beq	1c654 <argp_parse@@Base+0x3a9c>
   1c5bc:	ldr	r8, [sp, #20]
   1c5c0:	mov	r0, #0
   1c5c4:	str	r0, [sp, #32]
   1c5c8:	cmp	r8, #0
   1c5cc:	bne	1c668 <argp_parse@@Base+0x3ab0>
   1c5d0:	mov	r0, r4
   1c5d4:	bl	1ad00 <argp_parse@@Base+0x2148>
   1c5d8:	cmp	r0, #0
   1c5dc:	beq	1c688 <argp_parse@@Base+0x3ad0>
   1c5e0:	mov	r8, r0
   1c5e4:	mov	r0, #0
   1c5e8:	mov	r1, #0
   1c5ec:	mov	r2, r4
   1c5f0:	str	r0, [sp, #32]
   1c5f4:	mov	r0, r8
   1c5f8:	bl	11568 <memset@plt>
   1c5fc:	ldr	r3, [sp, #36]	; 0x24
   1c600:	ldr	r0, [sp, #24]
   1c604:	mov	r2, #1
   1c608:	mov	r1, #1
   1c60c:	str	r1, [sp, #4]
   1c610:	strb	r2, [r8, r0]
   1c614:	b	1c668 <argp_parse@@Base+0x3ab0>
   1c618:	mov	r7, r0
   1c61c:	str	r6, [sp, #24]
   1c620:	add	r0, r5, r6, lsl #4
   1c624:	ldr	sl, [r0, #16]
   1c628:	cmp	sl, #0
   1c62c:	bne	1c558 <argp_parse@@Base+0x39a0>
   1c630:	b	1c6ac <argp_parse@@Base+0x3af4>
   1c634:	ldr	r1, [sp, #32]
   1c638:	cmp	r1, #0
   1c63c:	bne	1c548 <argp_parse@@Base+0x3990>
   1c640:	ldr	r0, [r0, #12]
   1c644:	ldr	r1, [r7, #12]
   1c648:	cmp	r1, r0
   1c64c:	bne	1c5b0 <argp_parse@@Base+0x39f8>
   1c650:	b	1c548 <argp_parse@@Base+0x3990>
   1c654:	ldr	r8, [sp, #20]
   1c658:	mov	r0, #1
   1c65c:	str	r0, [sp, #32]
   1c660:	cmp	r8, #0
   1c664:	beq	1c694 <argp_parse@@Base+0x3adc>
   1c668:	mov	r0, #1
   1c66c:	str	r8, [sp, #20]
   1c670:	strb	r0, [r8, r6]
   1c674:	add	r0, r5, r6, lsl #4
   1c678:	ldr	sl, [r0, #16]
   1c67c:	cmp	sl, #0
   1c680:	bne	1c558 <argp_parse@@Base+0x39a0>
   1c684:	b	1c6ac <argp_parse@@Base+0x3af4>
   1c688:	ldr	r3, [sp, #36]	; 0x24
   1c68c:	mov	r0, #1
   1c690:	str	r0, [sp, #32]
   1c694:	mov	r0, #0
   1c698:	str	r0, [sp, #20]
   1c69c:	add	r0, r5, r6, lsl #4
   1c6a0:	ldr	sl, [r0, #16]
   1c6a4:	cmp	sl, #0
   1c6a8:	bne	1c558 <argp_parse@@Base+0x39a0>
   1c6ac:	ldr	r6, [sp, #28]
   1c6b0:	ldr	r1, [sp, #20]
   1c6b4:	ldr	r8, [sp, #4]
   1c6b8:	cmp	r1, #0
   1c6bc:	ldreq	r0, [sp, #32]
   1c6c0:	cmpeq	r0, #0
   1c6c4:	bne	1c4a0 <argp_parse@@Base+0x38e8>
   1c6c8:	cmp	r7, #0
   1c6cc:	beq	1c770 <argp_parse@@Base+0x3bb8>
   1c6d0:	ldr	r1, [fp, #16]
   1c6d4:	mov	r0, #0
   1c6d8:	str	r0, [r1, #20]
   1c6dc:	mov	r2, r1
   1c6e0:	ldr	r1, [r1]
   1c6e4:	add	r0, r1, #1
   1c6e8:	str	r0, [r2]
   1c6ec:	ldrb	r3, [r9]
   1c6f0:	ldr	r2, [r7, #4]
   1c6f4:	cmp	r3, #0
   1c6f8:	beq	1c714 <argp_parse@@Base+0x3b5c>
   1c6fc:	cmp	r2, #0
   1c700:	beq	1c7f0 <argp_parse@@Base+0x3c38>
   1c704:	ldr	r1, [fp, #16]
   1c708:	add	r0, r9, #1
   1c70c:	str	r0, [r1, #12]
   1c710:	b	1c740 <argp_parse@@Base+0x3b88>
   1c714:	cmp	r2, #1
   1c718:	bne	1c740 <argp_parse@@Base+0x3b88>
   1c71c:	ldr	r2, [sp, #8]
   1c720:	cmp	r0, r2
   1c724:	bge	1c8b0 <argp_parse@@Base+0x3cf8>
   1c728:	ldr	r2, [fp, #16]
   1c72c:	add	r1, r1, #2
   1c730:	str	r1, [r2]
   1c734:	ldr	r1, [sp, #16]
   1c738:	ldr	r0, [r1, r0, lsl #2]
   1c73c:	str	r0, [r2, #12]
   1c740:	ldr	r0, [fp, #8]
   1c744:	cmp	r0, #0
   1c748:	ldrne	r1, [sp, #24]
   1c74c:	strne	r1, [r0]
   1c750:	ldr	r1, [r7, #8]
   1c754:	ldr	r0, [r7, #12]
   1c758:	cmp	r1, #0
   1c75c:	beq	1c8d8 <argp_parse@@Base+0x3d20>
   1c760:	str	r0, [r1]
   1c764:	mov	r0, #0
   1c768:	sub	sp, fp, #28
   1c76c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c770:	ldr	r0, [fp, #12]
   1c774:	cmp	r0, #0
   1c778:	beq	1c7bc <argp_parse@@Base+0x3c04>
   1c77c:	ldr	r0, [fp, #16]
   1c780:	ldr	r1, [sp, #16]
   1c784:	ldr	r0, [r0]
   1c788:	ldr	r0, [r1, r0, lsl #2]
   1c78c:	ldrb	r0, [r0, #1]
   1c790:	cmp	r0, #45	; 0x2d
   1c794:	beq	1c7bc <argp_parse@@Base+0x3c04>
   1c798:	ldr	r0, [fp, #16]
   1c79c:	ldr	r0, [r0, #20]
   1c7a0:	ldrb	r1, [r0]
   1c7a4:	ldr	r0, [sp, #12]
   1c7a8:	bl	11520 <strchr@plt>
   1c7ac:	mov	r1, r0
   1c7b0:	mvn	r0, #0
   1c7b4:	cmp	r1, #0
   1c7b8:	bne	1c8d8 <argp_parse@@Base+0x3d20>
   1c7bc:	ldr	r0, [fp, #20]
   1c7c0:	cmp	r0, #0
   1c7c4:	bne	1c9d8 <argp_parse@@Base+0x3e20>
   1c7c8:	ldr	r1, [fp, #16]
   1c7cc:	mov	r0, #0
   1c7d0:	str	r0, [r1, #20]
   1c7d4:	str	r0, [r1, #8]
   1c7d8:	ldr	r0, [r1]
   1c7dc:	add	r0, r0, #1
   1c7e0:	str	r0, [r1]
   1c7e4:	mov	r0, #63	; 0x3f
   1c7e8:	sub	sp, fp, #28
   1c7ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7f0:	ldr	r0, [fp, #20]
   1c7f4:	cmp	r0, #0
   1c7f8:	bne	1ca0c <argp_parse@@Base+0x3e54>
   1c7fc:	ldr	r0, [r7, #12]
   1c800:	ldr	r1, [fp, #16]
   1c804:	str	r0, [r1, #8]
   1c808:	mov	r0, #63	; 0x3f
   1c80c:	sub	sp, fp, #28
   1c810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c814:	ldr	r5, [sp, #28]
   1c818:	mov	r0, #0
   1c81c:	mov	r6, #0
   1c820:	mov	r7, #0
   1c824:	str	r0, [sp, #32]
   1c828:	mvn	r0, #0
   1c82c:	str	r0, [sp, #24]
   1c830:	b	1c854 <argp_parse@@Base+0x3c9c>
   1c834:	ldr	r0, [sp, #32]
   1c838:	cmp	r0, #0
   1c83c:	movweq	r0, #1
   1c840:	str	r0, [sp, #32]
   1c844:	ldr	sl, [r5, #16]!
   1c848:	add	r6, r6, #1
   1c84c:	cmp	sl, #0
   1c850:	beq	1c890 <argp_parse@@Base+0x3cd8>
   1c854:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c858:	mov	r0, sl
   1c85c:	mov	r1, r8
   1c860:	bl	11658 <strncmp@plt>
   1c864:	cmp	r0, #0
   1c868:	bne	1c844 <argp_parse@@Base+0x3c8c>
   1c86c:	cmp	r7, #0
   1c870:	bne	1c834 <argp_parse@@Base+0x3c7c>
   1c874:	mov	r7, r5
   1c878:	mov	r0, r6
   1c87c:	str	r6, [sp, #24]
   1c880:	ldr	sl, [r5, #16]!
   1c884:	add	r6, r6, #1
   1c888:	cmp	sl, #0
   1c88c:	bne	1c854 <argp_parse@@Base+0x3c9c>
   1c890:	ldr	r6, [sp, #28]
   1c894:	mov	r1, #0
   1c898:	mov	r8, #0
   1c89c:	cmp	r1, #0
   1c8a0:	ldreq	r0, [sp, #32]
   1c8a4:	cmpeq	r0, #0
   1c8a8:	bne	1c4a0 <argp_parse@@Base+0x38e8>
   1c8ac:	b	1c6c8 <argp_parse@@Base+0x3b10>
   1c8b0:	ldr	r0, [fp, #20]
   1c8b4:	cmp	r0, #0
   1c8b8:	bne	1ca3c <argp_parse@@Base+0x3e84>
   1c8bc:	ldr	r0, [r7, #12]
   1c8c0:	ldr	r1, [fp, #16]
   1c8c4:	str	r0, [r1, #8]
   1c8c8:	ldr	r0, [sp, #12]
   1c8cc:	ldrb	r0, [r0]
   1c8d0:	cmp	r0, #58	; 0x3a
   1c8d4:	movwne	r0, #63	; 0x3f
   1c8d8:	sub	sp, fp, #28
   1c8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8e0:	movw	sl, #63016	; 0xf628
   1c8e4:	mov	r9, r1
   1c8e8:	ldr	r1, [sp, #32]
   1c8ec:	movt	sl, #2
   1c8f0:	ldr	r0, [sl]
   1c8f4:	cmp	r1, #0
   1c8f8:	beq	1c930 <argp_parse@@Base+0x3d78>
   1c8fc:	ldr	r1, [sp, #16]
   1c900:	ldr	r3, [fp, #24]
   1c904:	ldr	r2, [r1]
   1c908:	ldr	r1, [fp, #16]
   1c90c:	ldr	r1, [r1, #20]
   1c910:	str	r1, [sp]
   1c914:	movw	r1, #58259	; 0xe393
   1c918:	movt	r1, #1
   1c91c:	bl	1152c <fprintf@plt>
   1c920:	mov	r1, r9
   1c924:	cmp	r8, #0
   1c928:	bne	1c4b4 <argp_parse@@Base+0x38fc>
   1c92c:	b	1c4bc <argp_parse@@Base+0x3904>
   1c930:	bl	11610 <flockfile@plt>
   1c934:	ldr	r1, [fp, #16]
   1c938:	ldr	r0, [sp, #16]
   1c93c:	ldr	r5, [fp, #24]
   1c940:	ldr	r1, [r1, #20]
   1c944:	ldr	r2, [r0]
   1c948:	ldr	r0, [sl]
   1c94c:	mov	r3, r5
   1c950:	str	r1, [sp]
   1c954:	movw	r1, #58291	; 0xe3b3
   1c958:	movt	r1, #1
   1c95c:	bl	1152c <fprintf@plt>
   1c960:	cmp	r4, #0
   1c964:	beq	1c9b4 <argp_parse@@Base+0x3dfc>
   1c968:	mov	r7, r9
   1c96c:	ldrb	r0, [r7]
   1c970:	cmp	r0, #0
   1c974:	bne	1c98c <argp_parse@@Base+0x3dd4>
   1c978:	add	r6, r6, #16
   1c97c:	add	r7, r7, #1
   1c980:	subs	r4, r4, #1
   1c984:	bne	1c96c <argp_parse@@Base+0x3db4>
   1c988:	b	1c9b4 <argp_parse@@Base+0x3dfc>
   1c98c:	ldr	r3, [r6]
   1c990:	ldr	r0, [sl]
   1c994:	movw	r1, #58338	; 0xe3e2
   1c998:	mov	r2, r5
   1c99c:	movt	r1, #1
   1c9a0:	bl	1152c <fprintf@plt>
   1c9a4:	add	r6, r6, #16
   1c9a8:	add	r7, r7, #1
   1c9ac:	subs	r4, r4, #1
   1c9b0:	bne	1c96c <argp_parse@@Base+0x3db4>
   1c9b4:	ldr	r1, [sl]
   1c9b8:	mov	r0, #10
   1c9bc:	bl	115e0 <fputc@plt>
   1c9c0:	ldr	r0, [sl]
   1c9c4:	bl	11454 <funlockfile@plt>
   1c9c8:	mov	r1, r9
   1c9cc:	cmp	r8, #0
   1c9d0:	bne	1c4b4 <argp_parse@@Base+0x38fc>
   1c9d4:	b	1c4bc <argp_parse@@Base+0x3904>
   1c9d8:	ldr	r1, [fp, #16]
   1c9dc:	ldr	r0, [sp, #16]
   1c9e0:	ldr	r3, [fp, #24]
   1c9e4:	ldr	r2, [r0]
   1c9e8:	movw	r0, #63016	; 0xf628
   1c9ec:	ldr	r1, [r1, #20]
   1c9f0:	movt	r0, #2
   1c9f4:	ldr	r0, [r0]
   1c9f8:	str	r1, [sp]
   1c9fc:	movw	r1, #58346	; 0xe3ea
   1ca00:	movt	r1, #1
   1ca04:	bl	1152c <fprintf@plt>
   1ca08:	b	1c7c8 <argp_parse@@Base+0x3c10>
   1ca0c:	ldr	r0, [sp, #16]
   1ca10:	ldr	r1, [r7]
   1ca14:	ldr	r3, [fp, #24]
   1ca18:	ldr	r2, [r0]
   1ca1c:	movw	r0, #63016	; 0xf628
   1ca20:	str	r1, [sp]
   1ca24:	movw	r1, #58378	; 0xe40a
   1ca28:	movt	r0, #2
   1ca2c:	movt	r1, #1
   1ca30:	ldr	r0, [r0]
   1ca34:	bl	1152c <fprintf@plt>
   1ca38:	b	1c7fc <argp_parse@@Base+0x3c44>
   1ca3c:	ldr	r0, [sp, #16]
   1ca40:	ldr	r1, [r7]
   1ca44:	ldr	r3, [fp, #24]
   1ca48:	ldr	r2, [r0]
   1ca4c:	movw	r0, #63016	; 0xf628
   1ca50:	str	r1, [sp]
   1ca54:	movw	r1, #58423	; 0xe437
   1ca58:	movt	r0, #2
   1ca5c:	movt	r1, #1
   1ca60:	ldr	r0, [r0]
   1ca64:	bl	1152c <fprintf@plt>
   1ca68:	b	1c8bc <argp_parse@@Base+0x3d04>
   1ca6c:	push	{r4, r5, r6, r7, fp, lr}
   1ca70:	add	fp, sp, #16
   1ca74:	sub	sp, sp, #16
   1ca78:	movw	r6, #62992	; 0xf610
   1ca7c:	movw	r7, #63132	; 0xf69c
   1ca80:	movt	r6, #2
   1ca84:	movt	r7, #2
   1ca88:	ldm	r6, {r4, r5}
   1ca8c:	str	r7, [sp, #8]
   1ca90:	stm	r7, {r4, r5}
   1ca94:	ldr	r5, [fp, #16]
   1ca98:	str	r5, [sp, #12]
   1ca9c:	ldr	r5, [fp, #12]
   1caa0:	str	r5, [sp, #4]
   1caa4:	ldr	r5, [fp, #8]
   1caa8:	str	r5, [sp]
   1caac:	bl	1b54c <argp_parse@@Base+0x2994>
   1cab0:	ldr	r1, [r7]
   1cab4:	ldr	r2, [r7, #8]
   1cab8:	ldr	r3, [r7, #12]
   1cabc:	str	r1, [r6]
   1cac0:	movw	r1, #63204	; 0xf6e4
   1cac4:	str	r2, [r6, #8]
   1cac8:	movt	r1, #2
   1cacc:	str	r3, [r1]
   1cad0:	sub	sp, fp, #16
   1cad4:	pop	{r4, r5, r6, r7, fp, pc}
   1cad8:	push	{r4, r5, r6, sl, fp, lr}
   1cadc:	add	fp, sp, #16
   1cae0:	sub	sp, sp, #16
   1cae4:	movw	r5, #62992	; 0xf610
   1cae8:	movw	r6, #63132	; 0xf69c
   1caec:	movt	r5, #2
   1caf0:	movt	r6, #2
   1caf4:	ldm	r5, {r3, r4}
   1caf8:	stm	r6, {r3, r4}
   1cafc:	mov	r4, #0
   1cb00:	mov	r3, #1
   1cb04:	str	r4, [sp]
   1cb08:	stmib	sp, {r4, r6}
   1cb0c:	str	r3, [sp, #12]
   1cb10:	mov	r3, #0
   1cb14:	bl	1b54c <argp_parse@@Base+0x2994>
   1cb18:	ldr	r1, [r6]
   1cb1c:	ldr	r2, [r6, #8]
   1cb20:	ldr	r3, [r6, #12]
   1cb24:	str	r1, [r5]
   1cb28:	movw	r1, #63204	; 0xf6e4
   1cb2c:	str	r2, [r5, #8]
   1cb30:	movt	r1, #2
   1cb34:	str	r3, [r1]
   1cb38:	sub	sp, fp, #16
   1cb3c:	pop	{r4, r5, r6, sl, fp, pc}
   1cb40:	cmp	r2, #0
   1cb44:	beq	1cb74 <argp_parse@@Base+0x3fbc>
   1cb48:	mvn	r3, #0
   1cb4c:	udiv	r3, r3, r2
   1cb50:	cmp	r3, r1
   1cb54:	bcs	1cb74 <argp_parse@@Base+0x3fbc>
   1cb58:	push	{fp, lr}
   1cb5c:	mov	fp, sp
   1cb60:	bl	11538 <__errno_location@plt>
   1cb64:	mov	r1, #12
   1cb68:	str	r1, [r0]
   1cb6c:	mov	r0, #0
   1cb70:	pop	{fp, pc}
   1cb74:	mul	r1, r2, r1
   1cb78:	b	1ad30 <argp_parse@@Base+0x2178>
   1cb7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cb80:	mov	r7, r0
   1cb84:	ldr	r6, [pc, #72]	; 1cbd4 <argp_parse@@Base+0x401c>
   1cb88:	ldr	r5, [pc, #72]	; 1cbd8 <argp_parse@@Base+0x4020>
   1cb8c:	add	r6, pc, r6
   1cb90:	add	r5, pc, r5
   1cb94:	sub	r6, r6, r5
   1cb98:	mov	r8, r1
   1cb9c:	mov	r9, r2
   1cba0:	bl	11308 <calloc@plt-0x20>
   1cba4:	asrs	r6, r6, #2
   1cba8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cbac:	mov	r4, #0
   1cbb0:	add	r4, r4, #1
   1cbb4:	ldr	r3, [r5], #4
   1cbb8:	mov	r2, r9
   1cbbc:	mov	r1, r8
   1cbc0:	mov	r0, r7
   1cbc4:	blx	r3
   1cbc8:	cmp	r6, r4
   1cbcc:	bne	1cbb0 <argp_parse@@Base+0x3ff8>
   1cbd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cbd4:	andeq	r2, r1, r8, ror r3
   1cbd8:	andeq	r2, r1, r0, ror r3
   1cbdc:	bx	lr

Disassembly of section .fini:

0001cbe0 <.fini>:
   1cbe0:	push	{r3, lr}
   1cbe4:	pop	{r3, pc}
