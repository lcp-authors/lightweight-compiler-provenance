
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fba0 <.init>:
    fba0:	push	{r3, lr}
    fba4:	bl	110b4 <mythread_init@plt+0xc>
    fba8:	pop	{r3, pc}

Disassembly of section .plt:

0000fbac <pthread_mutex_unlock@plt-0x14>:
    fbac:	push	{lr}		; (str lr, [sp, #-4]!)
    fbb0:	ldr	lr, [pc, #4]	; fbbc <pthread_mutex_unlock@plt-0x4>
    fbb4:	add	lr, pc, lr
    fbb8:	ldr	pc, [lr, #8]!
    fbbc:	andseq	r1, r0, r4, asr #8

0000fbc0 <pthread_mutex_unlock@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #4096	; 0x1000
    fbc8:	ldr	pc, [ip, #1092]!	; 0x444

0000fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #4096	; 0x1000
    fbd4:	ldr	pc, [ip, #1084]!	; 0x43c

0000fbd8 <mycore_realloc@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #4096	; 0x1000
    fbe0:	ldr	pc, [ip, #1076]!	; 0x434

0000fbe4 <calloc@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #4096	; 0x1000
    fbec:	ldr	pc, [ip, #1068]!	; 0x42c

0000fbf0 <mycore_strcmp@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #4096	; 0x1000
    fbf8:	ldr	pc, [ip, #1060]!	; 0x424

0000fbfc <myhtml_tree_node_insert_root@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #4096	; 0x1000
    fc04:	ldr	pc, [ip, #1052]!	; 0x41c

0000fc08 <mythread_queue_list_entry_delete@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #4096	; 0x1000
    fc10:	ldr	pc, [ip, #1044]!	; 0x414

0000fc14 <myencoding_string_append_chunk@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #4096	; 0x1000
    fc1c:	ldr	pc, [ip, #1036]!	; 0x40c

0000fc20 <myhtml_token_release_and_check_doctype_attributes@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #4096	; 0x1000
    fc28:	ldr	pc, [ip, #1028]!	; 0x404

0000fc2c <raise@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #4096	; 0x1000
    fc34:	ldr	pc, [ip, #1020]!	; 0x3fc

0000fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #4096	; 0x1000
    fc40:	ldr	pc, [ip, #1012]!	; 0x3f4

0000fc44 <myencoding_detect_unicode@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #4096	; 0x1000
    fc4c:	ldr	pc, [ip, #1004]!	; 0x3ec

0000fc50 <myhtml_tree_element_in_scope_by_node@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #4096	; 0x1000
    fc58:	ldr	pc, [ip, #996]!	; 0x3e4

0000fc5c <mythread_nanosleep_clean@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #4096	; 0x1000
    fc64:	ldr	pc, [ip, #988]!	; 0x3dc

0000fc68 <myhtml_tree_node_insert_html_element@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #4096	; 0x1000
    fc70:	ldr	pc, [ip, #980]!	; 0x3d4

0000fc74 <myhtml_tree_token_list_destroy@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #4096	; 0x1000
    fc7c:	ldr	pc, [ip, #972]!	; 0x3cc

0000fc80 <mcobject_async_init@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #4096	; 0x1000
    fc88:	ldr	pc, [ip, #964]!	; 0x3c4

0000fc8c <myhtml_tree_temp_tag_name_append@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #4096	; 0x1000
    fc94:	ldr	pc, [ip, #956]!	; 0x3bc

0000fc98 <myhtml_tokenizer_fragment_init@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #4096	; 0x1000
    fca0:	ldr	pc, [ip, #948]!	; 0x3b4

0000fca4 <mythread_nanosleep_create@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #4096	; 0x1000
    fcac:	ldr	pc, [ip, #940]!	; 0x3ac

0000fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #4096	; 0x1000
    fcb8:	ldr	pc, [ip, #932]!	; 0x3a4

0000fcbc <myhtml_tokenizer_state_init@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #4096	; 0x1000
    fcc4:	ldr	pc, [ip, #924]!	; 0x39c

0000fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #4096	; 0x1000
    fcd0:	ldr	pc, [ip, #916]!	; 0x394

0000fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #4096	; 0x1000
    fcdc:	ldr	pc, [ip, #908]!	; 0x38c

0000fce0 <myhtml_tree_wait_for_last_done_token@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #4096	; 0x1000
    fce8:	ldr	pc, [ip, #900]!	; 0x384

0000fcec <mythread_queue_get_prev_node@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #4096	; 0x1000
    fcf4:	ldr	pc, [ip, #892]!	; 0x37c

0000fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #4096	; 0x1000
    fd00:	ldr	pc, [ip, #884]!	; 0x374

0000fd04 <setbuf@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #4096	; 0x1000
    fd0c:	ldr	pc, [ip, #876]!	; 0x36c

0000fd10 <mycore_utils_avl_tree_find_min@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #4096	; 0x1000
    fd18:	ldr	pc, [ip, #868]!	; 0x364

0000fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #4096	; 0x1000
    fd24:	ldr	pc, [ip, #860]!	; 0x35c

0000fd28 <myhtml_stream_buffer_destroy@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #4096	; 0x1000
    fd30:	ldr	pc, [ip, #852]!	; 0x354

0000fd34 <myhtml_token_attr_match_case@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #4096	; 0x1000
    fd3c:	ldr	pc, [ip, #844]!	; 0x34c

0000fd40 <__cxa_finalize@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #4096	; 0x1000
    fd48:	ldr	pc, [ip, #836]!	; 0x344

0000fd4c <mycore_utils_avl_tree_node_rotate_right@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #4096	; 0x1000
    fd54:	ldr	pc, [ip, #828]!	; 0x33c

0000fd58 <mcobject_async_create@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #4096	; 0x1000
    fd60:	ldr	pc, [ip, #820]!	; 0x334

0000fd64 <mythread_queue_clean@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #4096	; 0x1000
    fd6c:	ldr	pc, [ip, #812]!	; 0x32c

0000fd70 <mcsync_mutex_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #4096	; 0x1000
    fd78:	ldr	pc, [ip, #804]!	; 0x324

0000fd7c <myhtml_parser_worker@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #4096	; 0x1000
    fd84:	ldr	pc, [ip, #796]!	; 0x31c

0000fd88 <mythread_thread_create@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #4096	; 0x1000
    fd90:	ldr	pc, [ip, #788]!	; 0x314

0000fd94 <mcsync_create@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #4096	; 0x1000
    fd9c:	ldr	pc, [ip, #780]!	; 0x30c

0000fda0 <myhtml_insertion_mode_in_template@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #4096	; 0x1000
    fda8:	ldr	pc, [ip, #772]!	; 0x304

0000fdac <mycore_utils_avl_tree_node_balance_factor@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #4096	; 0x1000
    fdb4:	ldr	pc, [ip, #764]!	; 0x2fc

0000fdb8 <fopen@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #4096	; 0x1000
    fdc0:	ldr	pc, [ip, #756]!	; 0x2f4

0000fdc4 <mcobject_async_mem_malloc@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #4096	; 0x1000
    fdcc:	ldr	pc, [ip, #748]!	; 0x2ec

0000fdd0 <mcobject_destroy@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #4096	; 0x1000
    fdd8:	ldr	pc, [ip, #740]!	; 0x2e4

0000fddc <pthread_attr_destroy@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #4096	; 0x1000
    fde4:	ldr	pc, [ip, #732]!	; 0x2dc

0000fde8 <myhtml_clean@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #4096	; 0x1000
    fdf0:	ldr	pc, [ip, #724]!	; 0x2d4

0000fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #4096	; 0x1000
    fdfc:	ldr	pc, [ip, #716]!	; 0x2cc

0000fe00 <pthread_mutex_destroy@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #4096	; 0x1000
    fe08:	ldr	pc, [ip, #708]!	; 0x2c4

0000fe0c <fflush@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #4096	; 0x1000
    fe14:	ldr	pc, [ip, #700]!	; 0x2bc

0000fe18 <mythread_create@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #4096	; 0x1000
    fe20:	ldr	pc, [ip, #692]!	; 0x2b4

0000fe24 <myhtml_insertion_mode_in_foreign_content@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #4096	; 0x1000
    fe2c:	ldr	pc, [ip, #684]!	; 0x2ac

0000fe30 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #4096	; 0x1000
    fe38:	ldr	pc, [ip, #676]!	; 0x2a4

0000fe3c <myencoding_string_append_lowercase_ascii@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #4096	; 0x1000
    fe44:	ldr	pc, [ip, #668]!	; 0x29c

0000fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #4096	; 0x1000
    fe50:	ldr	pc, [ip, #660]!	; 0x294

0000fe54 <myhread_increase_id_by_entry_id@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #4096	; 0x1000
    fe5c:	ldr	pc, [ip, #652]!	; 0x28c

0000fe60 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #4096	; 0x1000
    fe68:	ldr	pc, [ip, #644]!	; 0x284

0000fe6c <_myhtml_token_create_copy_srt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #4096	; 0x1000
    fe74:	ldr	pc, [ip, #636]!	; 0x27c

0000fe78 <memmove@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #4096	; 0x1000
    fe80:	ldr	pc, [ip, #628]!	; 0x274

0000fe84 <mythread_thread_attr_init@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #4096	; 0x1000
    fe8c:	ldr	pc, [ip, #620]!	; 0x26c

0000fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #4096	; 0x1000
    fe98:	ldr	pc, [ip, #612]!	; 0x264

0000fe9c <myhtml_rules_tree_dispatcher@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #4096	; 0x1000
    fea4:	ldr	pc, [ip, #604]!	; 0x25c

0000fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #4096	; 0x1000
    feb0:	ldr	pc, [ip, #596]!	; 0x254

0000feb4 <free@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #4096	; 0x1000
    febc:	ldr	pc, [ip, #588]!	; 0x24c

0000fec0 <mchar_async_cache_malloc@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #4096	; 0x1000
    fec8:	ldr	pc, [ip, #580]!	; 0x244

0000fecc <mythread_function_see_opt@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #4096	; 0x1000
    fed4:	ldr	pc, [ip, #572]!	; 0x23c

0000fed8 <myencoding_detect_utf_16@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #4096	; 0x1000
    fee0:	ldr	pc, [ip, #564]!	; 0x234

0000fee4 <mcobject_chunk_malloc@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #4096	; 0x1000
    feec:	ldr	pc, [ip, #556]!	; 0x22c

0000fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #4096	; 0x1000
    fef8:	ldr	pc, [ip, #548]!	; 0x224

0000fefc <mcsync_mutex_unlock@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #4096	; 0x1000
    ff04:	ldr	pc, [ip, #540]!	; 0x21c

0000ff08 <pthread_mutex_lock@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #4096	; 0x1000
    ff10:	ldr	pc, [ip, #532]!	; 0x214

0000ff14 <mycore_calloc@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #4096	; 0x1000
    ff1c:	ldr	pc, [ip, #524]!	; 0x20c

0000ff20 <nanosleep@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #4096	; 0x1000
    ff28:	ldr	pc, [ip, #516]!	; 0x204

0000ff2c <myhtml_token_node_clone@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #4096	; 0x1000
    ff34:	ldr	pc, [ip, #508]!	; 0x1fc

0000ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #4096	; 0x1000
    ff40:	ldr	pc, [ip, #500]!	; 0x1f4

0000ff44 <mchar_sync_chunk_insert_after@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #4096	; 0x1000
    ff4c:	ldr	pc, [ip, #492]!	; 0x1ec

0000ff50 <ferror@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #4096	; 0x1000
    ff58:	ldr	pc, [ip, #484]!	; 0x1e4

0000ff5c <memcpy@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #4096	; 0x1000
    ff64:	ldr	pc, [ip, #476]!	; 0x1dc

0000ff68 <myencoding_name_entry_by_name@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #4096	; 0x1000
    ff70:	ldr	pc, [ip, #468]!	; 0x1d4

0000ff74 <myhtml_token_adjust_mathml_attributes@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #4096	; 0x1000
    ff7c:	ldr	pc, [ip, #460]!	; 0x1cc

0000ff80 <mcobject_free@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #4096	; 0x1000
    ff88:	ldr	pc, [ip, #452]!	; 0x1c4

0000ff8c <myhtml_tree_node_insert_text@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #4096	; 0x1000
    ff94:	ldr	pc, [ip, #444]!	; 0x1bc

0000ff98 <myhtml_tag_set_category@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #4096	; 0x1000
    ffa0:	ldr	pc, [ip, #436]!	; 0x1b4

0000ffa4 <mcsync_spin_destroy@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #4096	; 0x1000
    ffac:	ldr	pc, [ip, #428]!	; 0x1ac

0000ffb0 <myhtml_tree_template_insertion_append@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #4096	; 0x1000
    ffb8:	ldr	pc, [ip, #420]!	; 0x1a4

0000ffbc <mchar_async_realloc@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #4096	; 0x1000
    ffc4:	ldr	pc, [ip, #412]!	; 0x19c

0000ffc8 <pthread_mutex_init@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #4096	; 0x1000
    ffd0:	ldr	pc, [ip, #404]!	; 0x194

0000ffd4 <myhtml_tokenizer_state_bogus_comment@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #4096	; 0x1000
    ffdc:	ldr	pc, [ip, #396]!	; 0x18c

0000ffe0 <myhtml_tree_node_create@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #4096	; 0x1000
    ffe8:	ldr	pc, [ip, #388]!	; 0x184

0000ffec <myhtml_tree_node_delete_recursive@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #4096	; 0x1000
    fff4:	ldr	pc, [ip, #380]!	; 0x17c

0000fff8 <myhtml_tag_static_get_by_id@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #4096	; 0x1000
   10000:	ldr	pc, [ip, #372]!	; 0x174

00010004 <myhtml_token_attr_clean@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #4096	; 0x1000
   1000c:	ldr	pc, [ip, #364]!	; 0x16c

00010010 <myhtml_tag_add@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #4096	; 0x1000
   10018:	ldr	pc, [ip, #356]!	; 0x164

0001001c <mcobject_create@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #4096	; 0x1000
   10024:	ldr	pc, [ip, #348]!	; 0x15c

00010028 <myhtml_queue_add@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #4096	; 0x1000
   10030:	ldr	pc, [ip, #340]!	; 0x154

00010034 <pthread_mutex_trylock@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #4096	; 0x1000
   1003c:	ldr	pc, [ip, #332]!	; 0x14c

00010040 <myhtml_tree_is_mathml_integration_point@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #4096	; 0x1000
   10048:	ldr	pc, [ip, #324]!	; 0x144

0001004c <mcobject_async_free@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #4096	; 0x1000
   10054:	ldr	pc, [ip, #316]!	; 0x13c

00010058 <myhtml_insertion_mode_in_head@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #4096	; 0x1000
   10060:	ldr	pc, [ip, #308]!	; 0x134

00010064 <ftell@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #4096	; 0x1000
   1006c:	ldr	pc, [ip, #300]!	; 0x12c

00010070 <memcmp@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #4096	; 0x1000
   10078:	ldr	pc, [ip, #292]!	; 0x124

0001007c <mycore_utils_mhash_hash@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #4096	; 0x1000
   10084:	ldr	pc, [ip, #284]!	; 0x11c

00010088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #4096	; 0x1000
   10090:	ldr	pc, [ip, #276]!	; 0x114

00010094 <mycore_incoming_buffer_add@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #4096	; 0x1000
   1009c:	ldr	pc, [ip, #268]!	; 0x10c

000100a0 <mythread_nanosleep_sleep@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #4096	; 0x1000
   100a8:	ldr	pc, [ip, #260]!	; 0x104

000100ac <mctree_insert_before@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #4096	; 0x1000
   100b4:	ldr	pc, [ip, #252]!	; 0xfc

000100b8 <mctree_destroy@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #4096	; 0x1000
   100c0:	ldr	pc, [ip, #244]!	; 0xf4

000100c4 <myhtml_tokenizer_chunk@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #4096	; 0x1000
   100cc:	ldr	pc, [ip, #236]!	; 0xec

000100d0 <myhtml_tree_active_formatting_append@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #4096	; 0x1000
   100d8:	ldr	pc, [ip, #228]!	; 0xe4

000100dc <myhtml_tree_active_formatting_destroy@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #4096	; 0x1000
   100e4:	ldr	pc, [ip, #220]!	; 0xdc

000100e8 <mythread_suspend@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #4096	; 0x1000
   100f0:	ldr	pc, [ip, #212]!	; 0xd4

000100f4 <myhtml_tokenizer_state_destroy@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #4096	; 0x1000
   100fc:	ldr	pc, [ip, #204]!	; 0xcc

00010100 <mycore_incoming_buffer_find_by_position@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #4096	; 0x1000
   10108:	ldr	pc, [ip, #196]!	; 0xc4

0001010c <mcobject_async_chunk_malloc@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #4096	; 0x1000
   10114:	ldr	pc, [ip, #188]!	; 0xbc

00010118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #4096	; 0x1000
   10120:	ldr	pc, [ip, #180]!	; 0xb4

00010124 <myhtml_tree_active_formatting_find@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #4096	; 0x1000
   1012c:	ldr	pc, [ip, #172]!	; 0xac

00010130 <mythread_queue_list_destroy@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #4096	; 0x1000
   10138:	ldr	pc, [ip, #164]!	; 0xa4

0001013c <myhtml_tree_open_elements_pop_until_by_node@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #4096	; 0x1000
   10144:	ldr	pc, [ip, #156]!	; 0x9c

00010148 <myhtml_stream_buffer_entry_destroy@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #4096	; 0x1000
   10150:	ldr	pc, [ip, #148]!	; 0x94

00010154 <myhtml_tokenizer_begin@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #4096	; 0x1000
   1015c:	ldr	pc, [ip, #140]!	; 0x8c

00010160 <mchar_async_create@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #4096	; 0x1000
   10168:	ldr	pc, [ip, #132]!	; 0x84

0001016c <mycore_string_copy@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #4096	; 0x1000
   10174:	ldr	pc, [ip, #124]!	; 0x7c

00010178 <myhtml_insertion_mode_in_table@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #4096	; 0x1000
   10180:	ldr	pc, [ip, #116]!	; 0x74

00010184 <mythread_queue_list_entry_push@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #4096	; 0x1000
   1018c:	ldr	pc, [ip, #108]!	; 0x6c

00010190 <mythread_queue_get_current_node@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #4096	; 0x1000
   10198:	ldr	pc, [ip, #100]!	; 0x64

0001019c <mcobject_async_chunk_up@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #4096	; 0x1000
   101a4:	ldr	pc, [ip, #92]!	; 0x5c

000101a8 <myhtml_tree_open_elements_pop@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #4096	; 0x1000
   101b0:	ldr	pc, [ip, #84]!	; 0x54

000101b4 <mcsync_destroy@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #4096	; 0x1000
   101bc:	ldr	pc, [ip, #76]!	; 0x4c

000101c0 <myencoding_result_clean@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #4096	; 0x1000
   101c8:	ldr	pc, [ip, #68]!	; 0x44

000101cc <myhtml_string_append_with_preprocessing@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #4096	; 0x1000
   101d4:	ldr	pc, [ip, #60]!	; 0x3c

000101d8 <myhtml_token_adjust_svg_attributes@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #4096	; 0x1000
   101e0:	ldr	pc, [ip, #52]!	; 0x34

000101e4 <realloc@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #4096	; 0x1000
   101ec:	ldr	pc, [ip, #44]!	; 0x2c

000101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #4096	; 0x1000
   101f8:	ldr	pc, [ip, #36]!	; 0x24

000101fc <myhtml_tree_is_html_integration_point@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #4096	; 0x1000
   10204:	ldr	pc, [ip, #28]!

00010208 <myhtml_namespace_name_entry_by_name@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #4096	; 0x1000
   10210:	ldr	pc, [ip, #20]!

00010214 <myencoding_detect_bom@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #4096	; 0x1000
   1021c:	ldr	pc, [ip, #12]!

00010220 <myhtml_tree_list_append@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #4096	; 0x1000
   10228:	ldr	pc, [ip, #4]!

0001022c <myhtml_tokenizer_calc_current_namespace@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #0, 20
   10234:	ldr	pc, [ip, #4092]!	; 0xffc

00010238 <myhtml_tree_open_elements_remove@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #0, 20
   10240:	ldr	pc, [ip, #4084]!	; 0xff4

00010244 <mctree_insert_child@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #0, 20
   1024c:	ldr	pc, [ip, #4076]!	; 0xfec

00010250 <mcsimple_clean@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #0, 20
   10258:	ldr	pc, [ip, #4068]!	; 0xfe4

0001025c <myhtml_tree_node_insert_comment@plt>:
   1025c:	add	ip, pc, #1048576	; 0x100000
   10260:	add	ip, ip, #0, 20
   10264:	ldr	pc, [ip, #4060]!	; 0xfdc

00010268 <myhtml_tokenizer_end@plt>:
   10268:	add	ip, pc, #1048576	; 0x100000
   1026c:	add	ip, ip, #0, 20
   10270:	ldr	pc, [ip, #4052]!	; 0xfd4

00010274 <mycore_utils_avl_tree_list_all_nodes@plt>:
   10274:	add	ip, pc, #1048576	; 0x100000
   10278:	add	ip, ip, #0, 20
   1027c:	ldr	pc, [ip, #4044]!	; 0xfcc

00010280 <myhtml_tree_temp_tag_name_clean@plt>:
   10280:	add	ip, pc, #1048576	; 0x100000
   10284:	add	ip, ip, #0, 20
   10288:	ldr	pc, [ip, #4036]!	; 0xfc4

0001028c <myhtml_tree_list_clean@plt>:
   1028c:	add	ip, pc, #1048576	; 0x100000
   10290:	add	ip, ip, #0, 20
   10294:	ldr	pc, [ip, #4028]!	; 0xfbc

00010298 <mchar_async_node_add@plt>:
   10298:	add	ip, pc, #1048576	; 0x100000
   1029c:	add	ip, ip, #0, 20
   102a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000102a4 <mycore_strncasecmp@plt>:
   102a4:	add	ip, pc, #1048576	; 0x100000
   102a8:	add	ip, ip, #0, 20
   102ac:	ldr	pc, [ip, #4012]!	; 0xfac

000102b0 <myhtml_tokenizer_post@plt>:
   102b0:	add	ip, pc, #1048576	; 0x100000
   102b4:	add	ip, ip, #0, 20
   102b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000102bc <myhtml_tree_list_insert_by_index@plt>:
   102bc:	add	ip, pc, #1048576	; 0x100000
   102c0:	add	ip, ip, #0, 20
   102c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000102c8 <mcsimple_create@plt>:
   102c8:	add	ip, pc, #1048576	; 0x100000
   102cc:	add	ip, ip, #0, 20
   102d0:	ldr	pc, [ip, #3988]!	; 0xf94

000102d4 <mythread_queue_destroy@plt>:
   102d4:	add	ip, pc, #1048576	; 0x100000
   102d8:	add	ip, ip, #0, 20
   102dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000102e0 <mycore_string_raw_copy@plt>:
   102e0:	add	ip, pc, #1048576	; 0x100000
   102e4:	add	ip, ip, #0, 20
   102e8:	ldr	pc, [ip, #3972]!	; 0xf84

000102ec <mycore_string_stay_only_whitespace@plt>:
   102ec:	add	ip, pc, #1048576	; 0x100000
   102f0:	add	ip, ip, #0, 20
   102f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000102f8 <mctree_clean@plt>:
   102f8:	add	ip, pc, #1048576	; 0x100000
   102fc:	add	ip, ip, #0, 20
   10300:	ldr	pc, [ip, #3956]!	; 0xf74

00010304 <myhtml_collection_create@plt>:
   10304:	add	ip, pc, #1048576	; 0x100000
   10308:	add	ip, ip, #0, 20
   1030c:	ldr	pc, [ip, #3948]!	; 0xf6c

00010310 <myhtml_rules_stop_parsing@plt>:
   10310:	add	ip, pc, #1048576	; 0x100000
   10314:	add	ip, ip, #0, 20
   10318:	ldr	pc, [ip, #3940]!	; 0xf64

0001031c <myhtml_get_nodes_by_tag_id@plt>:
   1031c:	add	ip, pc, #1048576	; 0x100000
   10320:	add	ip, ip, #0, 20
   10324:	ldr	pc, [ip, #3932]!	; 0xf5c

00010328 <myhtml_serialization_tree_buffer@plt>:
   10328:	add	ip, pc, #1048576	; 0x100000
   1032c:	add	ip, ip, #0, 20
   10330:	ldr	pc, [ip, #3924]!	; 0xf54

00010334 <myhtml_token_set_replacement_character_for_null_token@plt>:
   10334:	add	ip, pc, #1048576	; 0x100000
   10338:	add	ip, ip, #0, 20
   1033c:	ldr	pc, [ip, #3916]!	; 0xf4c

00010340 <fwrite@plt>:
   10340:	add	ip, pc, #1048576	; 0x100000
   10344:	add	ip, ip, #0, 20
   10348:	ldr	pc, [ip, #3908]!	; 0xf44

0001034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   1034c:	add	ip, pc, #1048576	; 0x100000
   10350:	add	ip, ip, #0, 20
   10354:	ldr	pc, [ip, #3900]!	; 0xf3c

00010358 <myhtml_tree_node_insert_by_mode@plt>:
   10358:	add	ip, pc, #1048576	; 0x100000
   1035c:	add	ip, ip, #0, 20
   10360:	ldr	pc, [ip, #3892]!	; 0xf34

00010364 <myhtml_tree_node_insert_after@plt>:
   10364:	add	ip, pc, #1048576	; 0x100000
   10368:	add	ip, ip, #0, 20
   1036c:	ldr	pc, [ip, #3884]!	; 0xf2c

00010370 <myhtml_data_process_state_end@plt>:
   10370:	add	ip, pc, #1048576	; 0x100000
   10374:	add	ip, ip, #0, 20
   10378:	ldr	pc, [ip, #3876]!	; 0xf24

0001037c <myhtml_serialization_reallocate@plt>:
   1037c:	add	ip, pc, #1048576	; 0x100000
   10380:	add	ip, ip, #0, 20
   10384:	ldr	pc, [ip, #3868]!	; 0xf1c

00010388 <mycore_string_append_with_replacement_null_characters@plt>:
   10388:	add	ip, pc, #1048576	; 0x100000
   1038c:	add	ip, ip, #0, 20
   10390:	ldr	pc, [ip, #3860]!	; 0xf14

00010394 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10394:	add	ip, pc, #1048576	; 0x100000
   10398:	add	ip, ip, #0, 20
   1039c:	ldr	pc, [ip, #3852]!	; 0xf0c

000103a0 <mcsimple_destroy@plt>:
   103a0:	add	ip, pc, #1048576	; 0x100000
   103a4:	add	ip, ip, #0, 20
   103a8:	ldr	pc, [ip, #3844]!	; 0xf04

000103ac <myhtml_token_doctype_check_html_4_01@plt>:
   103ac:	add	ip, pc, #1048576	; 0x100000
   103b0:	add	ip, ip, #0, 20
   103b4:	ldr	pc, [ip, #3836]!	; 0xefc

000103b8 <__mtree_insert_to_start@plt>:
   103b8:	add	ip, pc, #1048576	; 0x100000
   103bc:	add	ip, ip, #0, 20
   103c0:	ldr	pc, [ip, #3828]!	; 0xef4

000103c4 <myhtml_insertion_mode_in_select@plt>:
   103c4:	add	ip, pc, #1048576	; 0x100000
   103c8:	add	ip, ip, #0, 20
   103cc:	ldr	pc, [ip, #3820]!	; 0xeec

000103d0 <fread@plt>:
   103d0:	add	ip, pc, #1048576	; 0x100000
   103d4:	add	ip, ip, #0, 20
   103d8:	ldr	pc, [ip, #3812]!	; 0xee4

000103dc <pthread_create@plt>:
   103dc:	add	ip, pc, #1048576	; 0x100000
   103e0:	add	ip, ip, #0, 20
   103e4:	ldr	pc, [ip, #3804]!	; 0xedc

000103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   103e8:	add	ip, pc, #1048576	; 0x100000
   103ec:	add	ip, ip, #0, 20
   103f0:	ldr	pc, [ip, #3796]!	; 0xed4

000103f4 <myhtml_tree_node_insert_before@plt>:
   103f4:	add	ip, pc, #1048576	; 0x100000
   103f8:	add	ip, ip, #0, 20
   103fc:	ldr	pc, [ip, #3788]!	; 0xecc

00010400 <myhtml_parser_token_data_to_string_charef@plt>:
   10400:	add	ip, pc, #1048576	; 0x100000
   10404:	add	ip, ip, #0, 20
   10408:	ldr	pc, [ip, #3780]!	; 0xec4

0001040c <mythread_thread_attr_clean@plt>:
   1040c:	add	ip, pc, #1048576	; 0x100000
   10410:	add	ip, ip, #0, 20
   10414:	ldr	pc, [ip, #3772]!	; 0xebc

00010418 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   10418:	add	ip, pc, #1048576	; 0x100000
   1041c:	add	ip, ip, #0, 20
   10420:	ldr	pc, [ip, #3764]!	; 0xeb4

00010424 <myhtml_tree_template_insertion_clean@plt>:
   10424:	add	ip, pc, #1048576	; 0x100000
   10428:	add	ip, ip, #0, 20
   1042c:	ldr	pc, [ip, #3756]!	; 0xeac

00010430 <myhtml_tokenizer_chunk_process@plt>:
   10430:	add	ip, pc, #1048576	; 0x100000
   10434:	add	ip, ip, #0, 20
   10438:	ldr	pc, [ip, #3748]!	; 0xea4

0001043c <myhtml_stream_create@plt>:
   1043c:	add	ip, pc, #1048576	; 0x100000
   10440:	add	ip, ip, #0, 20
   10444:	ldr	pc, [ip, #3740]!	; 0xe9c

00010448 <myhtml_tree_tags_close_p@plt>:
   10448:	add	ip, pc, #1048576	; 0x100000
   1044c:	add	ip, ip, #0, 20
   10450:	ldr	pc, [ip, #3732]!	; 0xe94

00010454 <mcsimple_init@plt>:
   10454:	add	ip, pc, #1048576	; 0x100000
   10458:	add	ip, ip, #0, 20
   1045c:	ldr	pc, [ip, #3724]!	; 0xe8c

00010460 <myencoding_string_append@plt>:
   10460:	add	ip, pc, #1048576	; 0x100000
   10464:	add	ip, ip, #0, 20
   10468:	ldr	pc, [ip, #3716]!	; 0xe84

0001046c <myhtml_stream_buffer_clean@plt>:
   1046c:	add	ip, pc, #1048576	; 0x100000
   10470:	add	ip, ip, #0, 20
   10474:	ldr	pc, [ip, #3708]!	; 0xe7c

00010478 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   10478:	add	ip, pc, #1048576	; 0x100000
   1047c:	add	ip, ip, #0, 20
   10480:	ldr	pc, [ip, #3700]!	; 0xe74

00010484 <myhtml_token_merged_two_token_string@plt>:
   10484:	add	ip, pc, #1048576	; 0x100000
   10488:	add	ip, ip, #0, 20
   1048c:	ldr	pc, [ip, #3692]!	; 0xe6c

00010490 <myhtml_attribute_value@plt>:
   10490:	add	ip, pc, #1048576	; 0x100000
   10494:	add	ip, ip, #0, 20
   10498:	ldr	pc, [ip, #3684]!	; 0xe64

0001049c <myhtml_token_strict_doctype_by_token@plt>:
   1049c:	add	ip, pc, #1048576	; 0x100000
   104a0:	add	ip, ip, #0, 20
   104a4:	ldr	pc, [ip, #3676]!	; 0xe5c

000104a8 <mchar_async_init@plt>:
   104a8:	add	ip, pc, #1048576	; 0x100000
   104ac:	add	ip, ip, #0, 20
   104b0:	ldr	pc, [ip, #3668]!	; 0xe54

000104b4 <mycore_string_crop_whitespace_from_begin@plt>:
   104b4:	add	ip, pc, #1048576	; 0x100000
   104b8:	add	ip, ip, #0, 20
   104bc:	ldr	pc, [ip, #3660]!	; 0xe4c

000104c0 <mythread_resume@plt>:
   104c0:	add	ip, pc, #1048576	; 0x100000
   104c4:	add	ip, ip, #0, 20
   104c8:	ldr	pc, [ip, #3652]!	; 0xe44

000104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   104cc:	add	ip, pc, #1048576	; 0x100000
   104d0:	add	ip, ip, #0, 20
   104d4:	ldr	pc, [ip, #3644]!	; 0xe3c

000104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   104d8:	add	ip, pc, #1048576	; 0x100000
   104dc:	add	ip, ip, #0, 20
   104e0:	ldr	pc, [ip, #3636]!	; 0xe34

000104e4 <myhtml_create_stream_and_batch@plt>:
   104e4:	add	ip, pc, #1048576	; 0x100000
   104e8:	add	ip, ip, #0, 20
   104ec:	ldr	pc, [ip, #3628]!	; 0xe2c

000104f0 <myhtml_data_process_entry_clean@plt>:
   104f0:	add	ip, pc, #1048576	; 0x100000
   104f4:	add	ip, ip, #0, 20
   104f8:	ldr	pc, [ip, #3620]!	; 0xe24

000104fc <mcsync_spin_init@plt>:
   104fc:	add	ip, pc, #1048576	; 0x100000
   10500:	add	ip, ip, #0, 20
   10504:	ldr	pc, [ip, #3612]!	; 0xe1c

00010508 <malloc@plt>:
   10508:	add	ip, pc, #1048576	; 0x100000
   1050c:	add	ip, ip, #0, 20
   10510:	ldr	pc, [ip, #3604]!	; 0xe14

00010514 <mythread_check_status@plt>:
   10514:	add	ip, pc, #1048576	; 0x100000
   10518:	add	ip, ip, #0, 20
   1051c:	ldr	pc, [ip, #3596]!	; 0xe0c

00010520 <myhtml_token_doctype_check_html_4_0@plt>:
   10520:	add	ip, pc, #1048576	; 0x100000
   10524:	add	ip, ip, #0, 20
   10528:	ldr	pc, [ip, #3588]!	; 0xe04

0001052c <mycore_strcasecmp@plt>:
   1052c:	add	ip, pc, #1048576	; 0x100000
   10530:	add	ip, ip, #0, 20
   10534:	ldr	pc, [ip, #3580]!	; 0xdfc

00010538 <mythread_queue_node_malloc_round@plt>:
   10538:	add	ip, pc, #1048576	; 0x100000
   1053c:	add	ip, ip, #0, 20
   10540:	ldr	pc, [ip, #3572]!	; 0xdf4

00010544 <myhtml_tree_active_formatting_reconstruction@plt>:
   10544:	add	ip, pc, #1048576	; 0x100000
   10548:	add	ip, ip, #0, 20
   1054c:	ldr	pc, [ip, #3564]!	; 0xdec

00010550 <myhtml_token_set_done@plt>:
   10550:	add	ip, pc, #1048576	; 0x100000
   10554:	add	ip, ip, #0, 20
   10558:	ldr	pc, [ip, #3556]!	; 0xde4

0001055c <mcsync_spin_create@plt>:
   1055c:	add	ip, pc, #1048576	; 0x100000
   10560:	add	ip, ip, #0, 20
   10564:	ldr	pc, [ip, #3548]!	; 0xddc

00010568 <mythread_thread_join@plt>:
   10568:	add	ip, pc, #1048576	; 0x100000
   1056c:	add	ip, ip, #0, 20
   10570:	ldr	pc, [ip, #3540]!	; 0xdd4

00010574 <myhtml_token_attr_remove@plt>:
   10574:	add	ip, pc, #1048576	; 0x100000
   10578:	add	ip, ip, #0, 20
   1057c:	ldr	pc, [ip, #3532]!	; 0xdcc

00010580 <myhtml_token_node_attr_copy@plt>:
   10580:	add	ip, pc, #1048576	; 0x100000
   10584:	add	ip, ip, #0, 20
   10588:	ldr	pc, [ip, #3524]!	; 0xdc4

0001058c <mythread_quit@plt>:
   1058c:	add	ip, pc, #1048576	; 0x100000
   10590:	add	ip, ip, #0, 20
   10594:	ldr	pc, [ip, #3516]!	; 0xdbc

00010598 <myhtml_batch_create@plt>:
   10598:	add	ip, pc, #1048576	; 0x100000
   1059c:	add	ip, ip, #0, 20
   105a0:	ldr	pc, [ip, #3508]!	; 0xdb4

000105a4 <myhtml_parse_chunk_fragment@plt>:
   105a4:	add	ip, pc, #1048576	; 0x100000
   105a8:	add	ip, ip, #0, 20
   105ac:	ldr	pc, [ip, #3500]!	; 0xdac

000105b0 <mcsync_spin_lock@plt>:
   105b0:	add	ip, pc, #1048576	; 0x100000
   105b4:	add	ip, ip, #0, 20
   105b8:	ldr	pc, [ip, #3492]!	; 0xda4

000105bc <myhtml_token_clean@plt>:
   105bc:	add	ip, pc, #1048576	; 0x100000
   105c0:	add	ip, ip, #0, 20
   105c4:	ldr	pc, [ip, #3484]!	; 0xd9c

000105c8 <mythread_queue_list_get_count@plt>:
   105c8:	add	ip, pc, #1048576	; 0x100000
   105cc:	add	ip, ip, #0, 20
   105d0:	ldr	pc, [ip, #3476]!	; 0xd94

000105d4 <mythread_queue_list_see_for_done_by_thread@plt>:
   105d4:	add	ip, pc, #1048576	; 0x100000
   105d8:	add	ip, ip, #0, 20
   105dc:	ldr	pc, [ip, #3468]!	; 0xd8c

000105e0 <__gmon_start__@plt>:
   105e0:	add	ip, pc, #1048576	; 0x100000
   105e4:	add	ip, ip, #0, 20
   105e8:	ldr	pc, [ip, #3460]!	; 0xd84

000105ec <myhtml_tokenizer_pause@plt>:
   105ec:	add	ip, pc, #1048576	; 0x100000
   105f0:	add	ip, ip, #0, 20
   105f4:	ldr	pc, [ip, #3452]!	; 0xd7c

000105f8 <myhtml_tokenizer_set_first_settings@plt>:
   105f8:	add	ip, pc, #1048576	; 0x100000
   105fc:	add	ip, ip, #0, 20
   10600:	ldr	pc, [ip, #3444]!	; 0xd74

00010604 <myhtml_tree_temp_tag_name_init@plt>:
   10604:	add	ip, pc, #1048576	; 0x100000
   10608:	add	ip, ip, #0, 20
   1060c:	ldr	pc, [ip, #3436]!	; 0xd6c

00010610 <mycore_string_init@plt>:
   10610:	add	ip, pc, #1048576	; 0x100000
   10614:	add	ip, ip, #0, 20
   10618:	ldr	pc, [ip, #3428]!	; 0xd64

0001061c <myhtml_tree_node_find_parent_by_tag_id@plt>:
   1061c:	add	ip, pc, #1048576	; 0x100000
   10620:	add	ip, ip, #0, 20
   10624:	ldr	pc, [ip, #3420]!	; 0xd5c

00010628 <myhtml_tree_current_node@plt>:
   10628:	add	ip, pc, #1048576	; 0x100000
   1062c:	add	ip, ip, #0, 20
   10630:	ldr	pc, [ip, #3412]!	; 0xd54

00010634 <mythread_mutex_close@plt>:
   10634:	add	ip, pc, #1048576	; 0x100000
   10638:	add	ip, ip, #0, 20
   1063c:	ldr	pc, [ip, #3404]!	; 0xd4c

00010640 <myhtml_insertion_mode_in_body@plt>:
   10640:	add	ip, pc, #1048576	; 0x100000
   10644:	add	ip, ip, #0, 20
   10648:	ldr	pc, [ip, #3396]!	; 0xd44

0001064c <myhtml_tree_active_formatting_between_last_marker@plt>:
   1064c:	add	ip, pc, #1048576	; 0x100000
   10650:	add	ip, ip, #0, 20
   10654:	ldr	pc, [ip, #3388]!	; 0xd3c

00010658 <mctree_create@plt>:
   10658:	add	ip, pc, #1048576	; 0x100000
   1065c:	add	ip, ip, #0, 20
   10660:	ldr	pc, [ip, #3380]!	; 0xd34

00010664 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   10664:	add	ip, pc, #1048576	; 0x100000
   10668:	add	ip, ip, #0, 20
   1066c:	ldr	pc, [ip, #3372]!	; 0xd2c

00010670 <strlen@plt>:
   10670:	add	ip, pc, #1048576	; 0x100000
   10674:	add	ip, ip, #0, 20
   10678:	ldr	pc, [ip, #3364]!	; 0xd24

0001067c <myhtml_token_node_wait_for_done@plt>:
   1067c:	add	ip, pc, #1048576	; 0x100000
   10680:	add	ip, ip, #0, 20
   10684:	ldr	pc, [ip, #3356]!	; 0xd1c

00010688 <mycore_string_append_lowercase@plt>:
   10688:	add	ip, pc, #1048576	; 0x100000
   1068c:	add	ip, ip, #0, 20
   10690:	ldr	pc, [ip, #3348]!	; 0xd14

00010694 <myhtml_token_node_attr_copy_with_check@plt>:
   10694:	add	ip, pc, #1048576	; 0x100000
   10698:	add	ip, ip, #0, 20
   1069c:	ldr	pc, [ip, #3340]!	; 0xd0c

000106a0 <myhtml_encoding_set@plt>:
   106a0:	add	ip, pc, #1048576	; 0x100000
   106a4:	add	ip, ip, #0, 20
   106a8:	ldr	pc, [ip, #3332]!	; 0xd04

000106ac <mythread_queue_init@plt>:
   106ac:	add	ip, pc, #1048576	; 0x100000
   106b0:	add	ip, ip, #0, 20
   106b4:	ldr	pc, [ip, #3324]!	; 0xcfc

000106b8 <myhtml_tree_node_add_child@plt>:
   106b8:	add	ip, pc, #1048576	; 0x100000
   106bc:	add	ip, ip, #0, 20
   106c0:	ldr	pc, [ip, #3316]!	; 0xcf4

000106c4 <mycore_utils_avl_tree_node_set_height@plt>:
   106c4:	add	ip, pc, #1048576	; 0x100000
   106c8:	add	ip, ip, #0, 20
   106cc:	ldr	pc, [ip, #3308]!	; 0xcec

000106d0 <myhtml_tree_clean@plt>:
   106d0:	add	ip, pc, #1048576	; 0x100000
   106d4:	add	ip, ip, #0, 20
   106d8:	ldr	pc, [ip, #3300]!	; 0xce4

000106dc <myhtml_tree_generate_implied_end_tags@plt>:
   106dc:	add	ip, pc, #1048576	; 0x100000
   106e0:	add	ip, ip, #0, 20
   106e4:	ldr	pc, [ip, #3292]!	; 0xcdc

000106e8 <mchar_async_node_clean@plt>:
   106e8:	add	ip, pc, #1048576	; 0x100000
   106ec:	add	ip, ip, #0, 20
   106f0:	ldr	pc, [ip, #3284]!	; 0xcd4

000106f4 <myhtml_tree_list_destroy@plt>:
   106f4:	add	ip, pc, #1048576	; 0x100000
   106f8:	add	ip, ip, #0, 20
   106fc:	ldr	pc, [ip, #3276]!	; 0xccc

00010700 <myhtml_serialization_node_callback@plt>:
   10700:	add	ip, pc, #1048576	; 0x100000
   10704:	add	ip, ip, #0, 20
   10708:	ldr	pc, [ip, #3268]!	; 0xcc4

0001070c <myencoding_detect_by_trigram@plt>:
   1070c:	add	ip, pc, #1048576	; 0x100000
   10710:	add	ip, ip, #0, 20
   10714:	ldr	pc, [ip, #3260]!	; 0xcbc

00010718 <mchar_async_free@plt>:
   10718:	add	ip, pc, #1048576	; 0x100000
   1071c:	add	ip, ip, #0, 20
   10720:	ldr	pc, [ip, #3252]!	; 0xcb4

00010724 <mchar_async_cache_clean@plt>:
   10724:	add	ip, pc, #1048576	; 0x100000
   10728:	add	ip, ip, #0, 20
   1072c:	ldr	pc, [ip, #3244]!	; 0xcac

00010730 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   10730:	add	ip, pc, #1048576	; 0x100000
   10734:	add	ip, ip, #0, 20
   10738:	ldr	pc, [ip, #3236]!	; 0xca4

0001073c <mcsimple_malloc@plt>:
   1073c:	add	ip, pc, #1048576	; 0x100000
   10740:	add	ip, ip, #0, 20
   10744:	ldr	pc, [ip, #3228]!	; 0xc9c

00010748 <mctree_search_lowercase@plt>:
   10748:	add	ip, pc, #1048576	; 0x100000
   1074c:	add	ip, ip, #0, 20
   10750:	ldr	pc, [ip, #3220]!	; 0xc94

00010754 <myhtml_data_process@plt>:
   10754:	add	ip, pc, #1048576	; 0x100000
   10758:	add	ip, ip, #0, 20
   1075c:	ldr	pc, [ip, #3212]!	; 0xc8c

00010760 <myhtml_token_attr_copy@plt>:
   10760:	add	ip, pc, #1048576	; 0x100000
   10764:	add	ip, ip, #0, 20
   10768:	ldr	pc, [ip, #3204]!	; 0xc84

0001076c <myhtml_tree_node_insert_by_node@plt>:
   1076c:	add	ip, pc, #1048576	; 0x100000
   10770:	add	ip, ip, #0, 20
   10774:	ldr	pc, [ip, #3196]!	; 0xc7c

00010778 <mcobject_init@plt>:
   10778:	add	ip, pc, #1048576	; 0x100000
   1077c:	add	ip, ip, #0, 20
   10780:	ldr	pc, [ip, #3188]!	; 0xc74

00010784 <myhtml_token_destroy@plt>:
   10784:	add	ip, pc, #1048576	; 0x100000
   10788:	add	ip, ip, #0, 20
   1078c:	ldr	pc, [ip, #3180]!	; 0xc6c

00010790 <myhtml_destroy_marker@plt>:
   10790:	add	ip, pc, #1048576	; 0x100000
   10794:	add	ip, ip, #0, 20
   10798:	ldr	pc, [ip, #3172]!	; 0xc64

0001079c <pthread_attr_init@plt>:
   1079c:	add	ip, pc, #1048576	; 0x100000
   107a0:	add	ip, ip, #0, 20
   107a4:	ldr	pc, [ip, #3164]!	; 0xc5c

000107a8 <myhtml_attribute_free@plt>:
   107a8:	add	ip, pc, #1048576	; 0x100000
   107ac:	add	ip, ip, #0, 20
   107b0:	ldr	pc, [ip, #3156]!	; 0xc54

000107b4 <myhtml_serialization_node_buffer@plt>:
   107b4:	add	ip, pc, #1048576	; 0x100000
   107b8:	add	ip, ip, #0, 20
   107bc:	ldr	pc, [ip, #3148]!	; 0xc4c

000107c0 <myhtml_charef_find_by_pos@plt>:
   107c0:	add	ip, pc, #1048576	; 0x100000
   107c4:	add	ip, ip, #0, 20
   107c8:	ldr	pc, [ip, #3140]!	; 0xc44

000107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   107cc:	add	ip, pc, #1048576	; 0x100000
   107d0:	add	ip, ip, #0, 20
   107d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000107d8 <mythread_queue_list_create@plt>:
   107d8:	add	ip, pc, #1048576	; 0x100000
   107dc:	add	ip, ip, #0, 20
   107e0:	ldr	pc, [ip, #3124]!	; 0xc34

000107e4 <myhtml_token_attr_delete_all@plt>:
   107e4:	add	ip, pc, #1048576	; 0x100000
   107e8:	add	ip, ip, #0, 20
   107ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   107f0:	add	ip, pc, #1048576	; 0x100000
   107f4:	add	ip, ip, #0, 20
   107f8:	ldr	pc, [ip, #3108]!	; 0xc24

000107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   107fc:	add	ip, pc, #1048576	; 0x100000
   10800:	add	ip, ip, #0, 20
   10804:	ldr	pc, [ip, #3100]!	; 0xc1c

00010808 <myhtml_stream_buffer_entry_init@plt>:
   10808:	add	ip, pc, #1048576	; 0x100000
   1080c:	add	ip, ip, #0, 20
   10810:	ldr	pc, [ip, #3092]!	; 0xc14

00010814 <myhtml_tree_active_formatting_append_with_check@plt>:
   10814:	add	ip, pc, #1048576	; 0x100000
   10818:	add	ip, ip, #0, 20
   1081c:	ldr	pc, [ip, #3084]!	; 0xc0c

00010820 <myhtml_tree_active_formatting_clean@plt>:
   10820:	add	ip, pc, #1048576	; 0x100000
   10824:	add	ip, ip, #0, 20
   10828:	ldr	pc, [ip, #3076]!	; 0xc04

0001082c <myencoding_get_function_by_id@plt>:
   1082c:	add	ip, pc, #1048576	; 0x100000
   10830:	add	ip, ip, #0, 20
   10834:	ldr	pc, [ip, #3068]!	; 0xbfc

00010838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   10838:	add	ip, pc, #1048576	; 0x100000
   1083c:	add	ip, ip, #0, 20
   10840:	ldr	pc, [ip, #3060]!	; 0xbf4

00010844 <myhtml_tree_active_formatting_remove_by_index@plt>:
   10844:	add	ip, pc, #1048576	; 0x100000
   10848:	add	ip, ip, #0, 20
   1084c:	ldr	pc, [ip, #3052]!	; 0xbec

00010850 <mcsync_lock@plt>:
   10850:	add	ip, pc, #1048576	; 0x100000
   10854:	add	ip, ip, #0, 20
   10858:	ldr	pc, [ip, #3044]!	; 0xbe4

0001085c <myhtml_tree_list_init@plt>:
   1085c:	add	ip, pc, #1048576	; 0x100000
   10860:	add	ip, ip, #0, 20
   10864:	ldr	pc, [ip, #3036]!	; 0xbdc

00010868 <mcsync_init@plt>:
   10868:	add	ip, pc, #1048576	; 0x100000
   1086c:	add	ip, ip, #0, 20
   10870:	ldr	pc, [ip, #3028]!	; 0xbd4

00010874 <myhtml_tree_active_formatting_is_marker@plt>:
   10874:	add	ip, pc, #1048576	; 0x100000
   10878:	add	ip, ip, #0, 20
   1087c:	ldr	pc, [ip, #3020]!	; 0xbcc

00010880 <mcobject_async_node_clean@plt>:
   10880:	add	ip, pc, #1048576	; 0x100000
   10884:	add	ip, ip, #0, 20
   10888:	ldr	pc, [ip, #3012]!	; 0xbc4

0001088c <mchar_async_cache_destroy@plt>:
   1088c:	add	ip, pc, #1048576	; 0x100000
   10890:	add	ip, ip, #0, 20
   10894:	ldr	pc, [ip, #3004]!	; 0xbbc

00010898 <myhtml_tree_adoption_agency_algorithm@plt>:
   10898:	add	ip, pc, #1048576	; 0x100000
   1089c:	add	ip, ip, #0, 20
   108a0:	ldr	pc, [ip, #2996]!	; 0xbb4

000108a4 <myhtml_tree_active_formatting_remove@plt>:
   108a4:	add	ip, pc, #1048576	; 0x100000
   108a8:	add	ip, ip, #0, 20
   108ac:	ldr	pc, [ip, #2988]!	; 0xbac

000108b0 <memset@plt>:
   108b0:	add	ip, pc, #1048576	; 0x100000
   108b4:	add	ip, ip, #0, 20
   108b8:	ldr	pc, [ip, #2980]!	; 0xba4

000108bc <myhread_entry_create@plt>:
   108bc:	add	ip, pc, #1048576	; 0x100000
   108c0:	add	ip, ip, #0, 20
   108c4:	ldr	pc, [ip, #2972]!	; 0xb9c

000108c8 <mcsync_mutex_create@plt>:
   108c8:	add	ip, pc, #1048576	; 0x100000
   108cc:	add	ip, ip, #0, 20
   108d0:	ldr	pc, [ip, #2964]!	; 0xb94

000108d4 <mycore_string_append@plt>:
   108d4:	add	ip, pc, #1048576	; 0x100000
   108d8:	add	ip, ip, #0, 20
   108dc:	ldr	pc, [ip, #2956]!	; 0xb8c

000108e0 <mcobject_async_chunk_malloc_without_lock@plt>:
   108e0:	add	ip, pc, #1048576	; 0x100000
   108e4:	add	ip, ip, #0, 20
   108e8:	ldr	pc, [ip, #2948]!	; 0xb84

000108ec <strncpy@plt>:
   108ec:	add	ip, pc, #1048576	; 0x100000
   108f0:	add	ip, ip, #0, 20
   108f4:	ldr	pc, [ip, #2940]!	; 0xb7c

000108f8 <pthread_cancel@plt>:
   108f8:	add	ip, pc, #1048576	; 0x100000
   108fc:	add	ip, ip, #0, 20
   10900:	ldr	pc, [ip, #2932]!	; 0xb74

00010904 <myhtml_token_attr_create@plt>:
   10904:	add	ip, pc, #1048576	; 0x100000
   10908:	add	ip, ip, #0, 20
   1090c:	ldr	pc, [ip, #2924]!	; 0xb6c

00010910 <mchar_async_malloc@plt>:
   10910:	add	ip, pc, #1048576	; 0x100000
   10914:	add	ip, ip, #0, 20
   10918:	ldr	pc, [ip, #2916]!	; 0xb64

0001091c <myhtml_tag_static_search@plt>:
   1091c:	add	ip, pc, #1048576	; 0x100000
   10920:	add	ip, ip, #0, 20
   10924:	ldr	pc, [ip, #2908]!	; 0xb5c

00010928 <myhtml_data_process_end@plt>:
   10928:	add	ip, pc, #1048576	; 0x100000
   1092c:	add	ip, ip, #0, 20
   10930:	ldr	pc, [ip, #2900]!	; 0xb54

00010934 <myhtml_stream_buffer_add_entry@plt>:
   10934:	add	ip, pc, #1048576	; 0x100000
   10938:	add	ip, ip, #0, 20
   1093c:	ldr	pc, [ip, #2892]!	; 0xb4c

00010940 <myhtml_tree_temp_tag_name_destroy@plt>:
   10940:	add	ip, pc, #1048576	; 0x100000
   10944:	add	ip, ip, #0, 20
   10948:	ldr	pc, [ip, #2884]!	; 0xb44

0001094c <myhtml_tree_open_elements_pop_until@plt>:
   1094c:	add	ip, pc, #1048576	; 0x100000
   10950:	add	ip, ip, #0, 20
   10954:	ldr	pc, [ip, #2876]!	; 0xb3c

00010958 <mctree_insert@plt>:
   10958:	add	ip, pc, #1048576	; 0x100000
   1095c:	add	ip, ip, #0, 20
   10960:	ldr	pc, [ip, #2868]!	; 0xb34

00010964 <mycore_string_realloc@plt>:
   10964:	add	ip, pc, #1048576	; 0x100000
   10968:	add	ip, ip, #0, 20
   1096c:	ldr	pc, [ip, #2860]!	; 0xb2c

00010970 <myhtml_tree_node_insert@plt>:
   10970:	add	ip, pc, #1048576	; 0x100000
   10974:	add	ip, ip, #0, 20
   10978:	ldr	pc, [ip, #2852]!	; 0xb24

0001097c <mythread_queue_list_entry_wait_for_done@plt>:
   1097c:	add	ip, pc, #1048576	; 0x100000
   10980:	add	ip, ip, #0, 20
   10984:	ldr	pc, [ip, #2844]!	; 0xb1c

00010988 <myhtml_tree_open_elements_append@plt>:
   10988:	add	ip, pc, #1048576	; 0x100000
   1098c:	add	ip, ip, #0, 20
   10990:	ldr	pc, [ip, #2836]!	; 0xb14

00010994 <mcsimple_init_list_entries@plt>:
   10994:	add	ip, pc, #1048576	; 0x100000
   10998:	add	ip, ip, #0, 20
   1099c:	ldr	pc, [ip, #2828]!	; 0xb0c

000109a0 <mythread_queue_list_entry_clean@plt>:
   109a0:	add	ip, pc, #1048576	; 0x100000
   109a4:	add	ip, ip, #0, 20
   109a8:	ldr	pc, [ip, #2820]!	; 0xb04

000109ac <mythread_destroy@plt>:
   109ac:	add	ip, pc, #1048576	; 0x100000
   109b0:	add	ip, ip, #0, 20
   109b4:	ldr	pc, [ip, #2812]!	; 0xafc

000109b8 <myhtml_tree_token_list_init@plt>:
   109b8:	add	ip, pc, #1048576	; 0x100000
   109bc:	add	ip, ip, #0, 20
   109c0:	ldr	pc, [ip, #2804]!	; 0xaf4

000109c4 <myhtml_tree_list_append_after_index@plt>:
   109c4:	add	ip, pc, #1048576	; 0x100000
   109c8:	add	ip, ip, #0, 20
   109cc:	ldr	pc, [ip, #2796]!	; 0xaec

000109d0 <mchar_async_chunk_malloc@plt>:
   109d0:	add	ip, pc, #1048576	; 0x100000
   109d4:	add	ip, ip, #0, 20
   109d8:	ldr	pc, [ip, #2788]!	; 0xae4

000109dc <myhtml_tree_template_insertion_pop@plt>:
   109dc:	add	ip, pc, #1048576	; 0x100000
   109e0:	add	ip, ip, #0, 20
   109e4:	ldr	pc, [ip, #2780]!	; 0xadc

000109e8 <__mtree_search_to_start@plt>:
   109e8:	add	ip, pc, #1048576	; 0x100000
   109ec:	add	ip, ip, #0, 20
   109f0:	ldr	pc, [ip, #2772]!	; 0xad4

000109f4 <mythread_thread_destroy@plt>:
   109f4:	add	ip, pc, #1048576	; 0x100000
   109f8:	add	ip, ip, #0, 20
   109fc:	ldr	pc, [ip, #2764]!	; 0xacc

00010a00 <fclose@plt>:
   10a00:	add	ip, pc, #1048576	; 0x100000
   10a04:	add	ip, ip, #0, 20
   10a08:	ldr	pc, [ip, #2756]!	; 0xac4

00010a0c <myhtml_token_node_create@plt>:
   10a0c:	add	ip, pc, #1048576	; 0x100000
   10a10:	add	ip, ip, #0, 20
   10a14:	ldr	pc, [ip, #2748]!	; 0xabc

00010a18 <mycore_utils_avl_tree_node_balance@plt>:
   10a18:	add	ip, pc, #1048576	; 0x100000
   10a1c:	add	ip, ip, #0, 20
   10a20:	ldr	pc, [ip, #2740]!	; 0xab4

00010a24 <myhtml_tag_get_by_id@plt>:
   10a24:	add	ip, pc, #1048576	; 0x100000
   10a28:	add	ip, ip, #0, 20
   10a2c:	ldr	pc, [ip, #2732]!	; 0xaac

00010a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   10a30:	add	ip, pc, #1048576	; 0x100000
   10a34:	add	ip, ip, #0, 20
   10a38:	ldr	pc, [ip, #2724]!	; 0xaa4

00010a3c <myhtml_parse_chunk@plt>:
   10a3c:	add	ip, pc, #1048576	; 0x100000
   10a40:	add	ip, ip, #0, 20
   10a44:	ldr	pc, [ip, #2716]!	; 0xa9c

00010a48 <mycore_utils_mhash_rebuld@plt>:
   10a48:	add	ip, pc, #1048576	; 0x100000
   10a4c:	add	ip, ip, #0, 20
   10a50:	ldr	pc, [ip, #2708]!	; 0xa94

00010a54 <myhtml_charef_get_first_position@plt>:
   10a54:	add	ip, pc, #1048576	; 0x100000
   10a58:	add	ip, ip, #0, 20
   10a5c:	ldr	pc, [ip, #2700]!	; 0xa8c

00010a60 <mcobject_malloc@plt>:
   10a60:	add	ip, pc, #1048576	; 0x100000
   10a64:	add	ip, ip, #0, 20
   10a68:	ldr	pc, [ip, #2692]!	; 0xa84

00010a6c <myencoding_detect_unicode_has_end@plt>:
   10a6c:	add	ip, pc, #1048576	; 0x100000
   10a70:	add	ip, ip, #0, 20
   10a74:	ldr	pc, [ip, #2684]!	; 0xa7c

00010a78 <mcsync_spin_clean@plt>:
   10a78:	add	ip, pc, #1048576	; 0x100000
   10a7c:	add	ip, ip, #0, 20
   10a80:	ldr	pc, [ip, #2676]!	; 0xa74

00010a84 <mythread_queue_create@plt>:
   10a84:	add	ip, pc, #1048576	; 0x100000
   10a88:	add	ip, ip, #0, 20
   10a8c:	ldr	pc, [ip, #2668]!	; 0xa6c

00010a90 <mcobject_async_node_add@plt>:
   10a90:	add	ip, pc, #1048576	; 0x100000
   10a94:	add	ip, ip, #0, 20
   10a98:	ldr	pc, [ip, #2660]!	; 0xa64

00010a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a9c:	add	ip, pc, #1048576	; 0x100000
   10aa0:	add	ip, ip, #0, 20
   10aa4:	ldr	pc, [ip, #2652]!	; 0xa5c

00010aa8 <myhtml_is_html_node@plt>:
   10aa8:	add	ip, pc, #1048576	; 0x100000
   10aac:	add	ip, ip, #0, 20
   10ab0:	ldr	pc, [ip, #2644]!	; 0xa54

00010ab4 <myhtml_init_marker@plt>:
   10ab4:	add	ip, pc, #1048576	; 0x100000
   10ab8:	add	ip, ip, #0, 20
   10abc:	ldr	pc, [ip, #2636]!	; 0xa4c

00010ac0 <myhtml_tree_active_formatting_init@plt>:
   10ac0:	add	ip, pc, #1048576	; 0x100000
   10ac4:	add	ip, ip, #0, 20
   10ac8:	ldr	pc, [ip, #2628]!	; 0xa44

00010acc <myhtml_parser_token_data_to_string@plt>:
   10acc:	add	ip, pc, #1048576	; 0x100000
   10ad0:	add	ip, ip, #0, 20
   10ad4:	ldr	pc, [ip, #2620]!	; 0xa3c

00010ad8 <mythread_stop@plt>:
   10ad8:	add	ip, pc, #1048576	; 0x100000
   10adc:	add	ip, ip, #0, 20
   10ae0:	ldr	pc, [ip, #2612]!	; 0xa34

00010ae4 <mythread_option_set@plt>:
   10ae4:	add	ip, pc, #1048576	; 0x100000
   10ae8:	add	ip, ip, #0, 20
   10aec:	ldr	pc, [ip, #2604]!	; 0xa2c

00010af0 <myhtml_tag_name_by_id@plt>:
   10af0:	add	ip, pc, #1048576	; 0x100000
   10af4:	add	ip, ip, #0, 20
   10af8:	ldr	pc, [ip, #2596]!	; 0xa24

00010afc <mythread_mutex_create@plt>:
   10afc:	add	ip, pc, #1048576	; 0x100000
   10b00:	add	ip, ip, #0, 20
   10b04:	ldr	pc, [ip, #2588]!	; 0xa1c

00010b08 <myhtml_attribute_key@plt>:
   10b08:	add	ip, pc, #1048576	; 0x100000
   10b0c:	add	ip, ip, #0, 20
   10b10:	ldr	pc, [ip, #2580]!	; 0xa14

00010b14 <mchar_sync_chunk_find_by_size@plt>:
   10b14:	add	ip, pc, #1048576	; 0x100000
   10b18:	add	ip, ip, #0, 20
   10b1c:	ldr	pc, [ip, #2572]!	; 0xa0c

00010b20 <mcobject_async_destroy@plt>:
   10b20:	add	ip, pc, #1048576	; 0x100000
   10b24:	add	ip, ip, #0, 20
   10b28:	ldr	pc, [ip, #2564]!	; 0xa04

00010b2c <myhtml_token_attr_compare@plt>:
   10b2c:	add	ip, pc, #1048576	; 0x100000
   10b30:	add	ip, ip, #0, 20
   10b34:	ldr	pc, [ip, #2556]!	; 0x9fc

00010b38 <_myhtml_get_nodes_by_attribute_value@plt>:
   10b38:	add	ip, pc, #1048576	; 0x100000
   10b3c:	add	ip, ip, #0, 20
   10b40:	ldr	pc, [ip, #2548]!	; 0x9f4

00010b44 <myhtml_tokenizer_set_state@plt>:
   10b44:	add	ip, pc, #1048576	; 0x100000
   10b48:	add	ip, ip, #0, 20
   10b4c:	ldr	pc, [ip, #2540]!	; 0x9ec

00010b50 <mcsync_mutex_init@plt>:
   10b50:	add	ip, pc, #1048576	; 0x100000
   10b54:	add	ip, ip, #0, 20
   10b58:	ldr	pc, [ip, #2532]!	; 0x9e4

00010b5c <myhtml_tag_init@plt>:
   10b5c:	add	ip, pc, #1048576	; 0x100000
   10b60:	add	ip, ip, #0, 20
   10b64:	ldr	pc, [ip, #2524]!	; 0x9dc

00010b68 <pthread_join@plt>:
   10b68:	add	ip, pc, #1048576	; 0x100000
   10b6c:	add	ip, ip, #0, 20
   10b70:	ldr	pc, [ip, #2516]!	; 0x9d4

00010b74 <myhtml_tag_get_by_name@plt>:
   10b74:	add	ip, pc, #1048576	; 0x100000
   10b78:	add	ip, ip, #0, 20
   10b7c:	ldr	pc, [ip, #2508]!	; 0x9cc

00010b80 <myhtml_stream_buffer_current_entry@plt>:
   10b80:	add	ip, pc, #1048576	; 0x100000
   10b84:	add	ip, ip, #0, 20
   10b88:	ldr	pc, [ip, #2500]!	; 0x9c4

00010b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b8c:	add	ip, pc, #1048576	; 0x100000
   10b90:	add	ip, ip, #0, 20
   10b94:	ldr	pc, [ip, #2492]!	; 0x9bc

00010b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b98:	add	ip, pc, #1048576	; 0x100000
   10b9c:	add	ip, ip, #0, 20
   10ba0:	ldr	pc, [ip, #2484]!	; 0x9b4

00010ba4 <mchar_async_chunk_malloc_without_lock@plt>:
   10ba4:	add	ip, pc, #1048576	; 0x100000
   10ba8:	add	ip, ip, #0, 20
   10bac:	ldr	pc, [ip, #2476]!	; 0x9ac

00010bb0 <myhtml_tree_open_elements_init@plt>:
   10bb0:	add	ip, pc, #1048576	; 0x100000
   10bb4:	add	ip, ip, #0, 20
   10bb8:	ldr	pc, [ip, #2468]!	; 0x9a4

00010bbc <mcobject_async_malloc@plt>:
   10bbc:	add	ip, pc, #1048576	; 0x100000
   10bc0:	add	ip, ip, #0, 20
   10bc4:	ldr	pc, [ip, #2460]!	; 0x99c

00010bc8 <mchar_async_clean@plt>:
   10bc8:	add	ip, pc, #1048576	; 0x100000
   10bcc:	add	ip, ip, #0, 20
   10bd0:	ldr	pc, [ip, #2452]!	; 0x994

00010bd4 <myencoding_decode_shared_utf_16@plt>:
   10bd4:	add	ip, pc, #1048576	; 0x100000
   10bd8:	add	ip, ip, #0, 20
   10bdc:	ldr	pc, [ip, #2444]!	; 0x98c

00010be0 <myhtml_token_adjust_foreign_attributes@plt>:
   10be0:	add	ip, pc, #1048576	; 0x100000
   10be4:	add	ip, ip, #0, 20
   10be8:	ldr	pc, [ip, #2436]!	; 0x984

00010bec <myhtml_rules_init@plt>:
   10bec:	add	ip, pc, #1048576	; 0x100000
   10bf0:	add	ip, ip, #0, 20
   10bf4:	ldr	pc, [ip, #2428]!	; 0x97c

00010bf8 <myencoding_decode_gb18030@plt>:
   10bf8:	add	ip, pc, #1048576	; 0x100000
   10bfc:	add	ip, ip, #0, 20
   10c00:	ldr	pc, [ip, #2420]!	; 0x974

00010c04 <mythread_nanosleep_destroy@plt>:
   10c04:	add	ip, pc, #1048576	; 0x100000
   10c08:	add	ip, ip, #0, 20
   10c0c:	ldr	pc, [ip, #2412]!	; 0x96c

00010c10 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10c10:	add	ip, pc, #1048576	; 0x100000
   10c14:	add	ip, ip, #0, 20
   10c18:	ldr	pc, [ip, #2404]!	; 0x964

00010c1c <myhtml_string_before_append_any_preprocessing@plt>:
   10c1c:	add	ip, pc, #1048576	; 0x100000
   10c20:	add	ip, ip, #0, 20
   10c24:	ldr	pc, [ip, #2396]!	; 0x95c

00010c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10c28:	add	ip, pc, #1048576	; 0x100000
   10c2c:	add	ip, ip, #0, 20
   10c30:	ldr	pc, [ip, #2388]!	; 0x954

00010c34 <mchar_async_cache_init@plt>:
   10c34:	add	ip, pc, #1048576	; 0x100000
   10c38:	add	ip, ip, #0, 20
   10c3c:	ldr	pc, [ip, #2380]!	; 0x94c

00010c40 <myhtml_check_tag_parser@plt>:
   10c40:	add	ip, pc, #1048576	; 0x100000
   10c44:	add	ip, ip, #0, 20
   10c48:	ldr	pc, [ip, #2372]!	; 0x944

00010c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10c4c:	add	ip, pc, #1048576	; 0x100000
   10c50:	add	ip, ip, #0, 20
   10c54:	ldr	pc, [ip, #2364]!	; 0x93c

00010c58 <mchar_async_node_delete@plt>:
   10c58:	add	ip, pc, #1048576	; 0x100000
   10c5c:	add	ip, ip, #0, 20
   10c60:	ldr	pc, [ip, #2356]!	; 0x934

00010c64 <mchar_async_crop_first_chars_without_cache@plt>:
   10c64:	add	ip, pc, #1048576	; 0x100000
   10c68:	add	ip, ip, #0, 20
   10c6c:	ldr	pc, [ip, #2348]!	; 0x92c

00010c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c70:	add	ip, pc, #1048576	; 0x100000
   10c74:	add	ip, ip, #0, 20
   10c78:	ldr	pc, [ip, #2340]!	; 0x924

00010c7c <mchar_async_cache_add@plt>:
   10c7c:	add	ip, pc, #1048576	; 0x100000
   10c80:	add	ip, ip, #0, 20
   10c84:	ldr	pc, [ip, #2332]!	; 0x91c

00010c88 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c88:	add	ip, pc, #1048576	; 0x100000
   10c8c:	add	ip, ip, #0, 20
   10c90:	ldr	pc, [ip, #2324]!	; 0x914

00010c94 <mycore_malloc@plt>:
   10c94:	add	ip, pc, #1048576	; 0x100000
   10c98:	add	ip, ip, #0, 20
   10c9c:	ldr	pc, [ip, #2316]!	; 0x90c

00010ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10ca0:	add	ip, pc, #1048576	; 0x100000
   10ca4:	add	ip, ip, #0, 20
   10ca8:	ldr	pc, [ip, #2308]!	; 0x904

00010cac <mythread_queue_node_malloc_limit@plt>:
   10cac:	add	ip, pc, #1048576	; 0x100000
   10cb0:	add	ip, ip, #0, 20
   10cb4:	ldr	pc, [ip, #2300]!	; 0x8fc

00010cb8 <myhtml_tree_node_insert_by_token@plt>:
   10cb8:	add	ip, pc, #1048576	; 0x100000
   10cbc:	add	ip, ip, #0, 20
   10cc0:	ldr	pc, [ip, #2292]!	; 0x8f4

00010cc4 <mctree_insert_after@plt>:
   10cc4:	add	ip, pc, #1048576	; 0x100000
   10cc8:	add	ip, ip, #0, 20
   10ccc:	ldr	pc, [ip, #2284]!	; 0x8ec

00010cd0 <myencoding_by_name@plt>:
   10cd0:	add	ip, pc, #1048576	; 0x100000
   10cd4:	add	ip, ip, #0, 20
   10cd8:	ldr	pc, [ip, #2276]!	; 0x8e4

00010cdc <myhtml_tree_template_insertion_init@plt>:
   10cdc:	add	ip, pc, #1048576	; 0x100000
   10ce0:	add	ip, ip, #0, 20
   10ce4:	ldr	pc, [ip, #2268]!	; 0x8dc

00010ce8 <myhtml_tree_open_elements_destroy@plt>:
   10ce8:	add	ip, pc, #1048576	; 0x100000
   10cec:	add	ip, ip, #0, 20
   10cf0:	ldr	pc, [ip, #2260]!	; 0x8d4

00010cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10cf4:	add	ip, pc, #1048576	; 0x100000
   10cf8:	add	ip, ip, #0, 20
   10cfc:	ldr	pc, [ip, #2252]!	; 0x8cc

00010d00 <myhtml_tree_node_free@plt>:
   10d00:	add	ip, pc, #1048576	; 0x100000
   10d04:	add	ip, ip, #0, 20
   10d08:	ldr	pc, [ip, #2244]!	; 0x8c4

00010d0c <mythread_mutex_post@plt>:
   10d0c:	add	ip, pc, #1048576	; 0x100000
   10d10:	add	ip, ip, #0, 20
   10d14:	ldr	pc, [ip, #2236]!	; 0x8bc

00010d18 <mycore_string_clean@plt>:
   10d18:	add	ip, pc, #1048576	; 0x100000
   10d1c:	add	ip, ip, #0, 20
   10d20:	ldr	pc, [ip, #2228]!	; 0x8b4

00010d24 <mythread_queue_list_entry_make_batch@plt>:
   10d24:	add	ip, pc, #1048576	; 0x100000
   10d28:	add	ip, ip, #0, 20
   10d2c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010d30 <myhtml_tag_create@plt>:
   10d30:	add	ip, pc, #1048576	; 0x100000
   10d34:	add	ip, ip, #0, 20
   10d38:	ldr	pc, [ip, #2212]!	; 0x8a4

00010d3c <myhtml_tree_close_cell@plt>:
   10d3c:	add	ip, pc, #1048576	; 0x100000
   10d40:	add	ip, ip, #0, 20
   10d44:	ldr	pc, [ip, #2204]!	; 0x89c

00010d48 <myhtml_tree_adjusted_current_node@plt>:
   10d48:	add	ip, pc, #1048576	; 0x100000
   10d4c:	add	ip, ip, #0, 20
   10d50:	ldr	pc, [ip, #2196]!	; 0x894

00010d54 <myencoding_detect_russian_has_end@plt>:
   10d54:	add	ip, pc, #1048576	; 0x100000
   10d58:	add	ip, ip, #0, 20
   10d5c:	ldr	pc, [ip, #2188]!	; 0x88c

00010d60 <myhtml_rules_check_for_first_newline@plt>:
   10d60:	add	ip, pc, #1048576	; 0x100000
   10d64:	add	ip, ip, #0, 20
   10d68:	ldr	pc, [ip, #2180]!	; 0x884

00010d6c <myhtml_stream_buffer_init@plt>:
   10d6c:	add	ip, pc, #1048576	; 0x100000
   10d70:	add	ip, ip, #0, 20
   10d74:	ldr	pc, [ip, #2172]!	; 0x87c

00010d78 <mythread_queue_node_clean@plt>:
   10d78:	add	ip, pc, #1048576	; 0x100000
   10d7c:	add	ip, ip, #0, 20
   10d80:	ldr	pc, [ip, #2164]!	; 0x874

00010d84 <myhtml_tree_node_insert_foreign_element@plt>:
   10d84:	add	ip, pc, #1048576	; 0x100000
   10d88:	add	ip, ip, #0, 20
   10d8c:	ldr	pc, [ip, #2156]!	; 0x86c

00010d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #0, 20
   10d98:	ldr	pc, [ip, #2148]!	; 0x864

00010d9c <mythread_mutex_wait@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #0, 20
   10da4:	ldr	pc, [ip, #2140]!	; 0x85c

00010da8 <mchar_async_destroy@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #0, 20
   10db0:	ldr	pc, [ip, #2132]!	; 0x854

00010db4 <mycore_utils_mhash_add_with_choice@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #0, 20
   10dbc:	ldr	pc, [ip, #2124]!	; 0x84c

00010dc0 <myhtml_tree_node_delete@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #0, 20
   10dc8:	ldr	pc, [ip, #2116]!	; 0x844

00010dcc <mycore_free@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #0, 20
   10dd4:	ldr	pc, [ip, #2108]!	; 0x83c

00010dd8 <mythread_queue_list_wait_for_done@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #0, 20
   10de0:	ldr	pc, [ip, #2100]!	; 0x834

00010de4 <mycore_string_whitespace_from_begin@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #0, 20
   10dec:	ldr	pc, [ip, #2092]!	; 0x82c

00010df0 <myhtml_tree_node_remove@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #0, 20
   10df8:	ldr	pc, [ip, #2084]!	; 0x824

00010dfc <myhtml_collection_check_size@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #0, 20
   10e04:	ldr	pc, [ip, #2076]!	; 0x81c

00010e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #0, 20
   10e10:	ldr	pc, [ip, #2068]!	; 0x814

00010e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #0, 20
   10e1c:	ldr	pc, [ip, #2060]!	; 0x80c

00010e20 <myhtml_tree_open_elements_clean@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #0, 20
   10e28:	ldr	pc, [ip, #2052]!	; 0x804

00010e2c <myhtml_tree_node_insert_doctype@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #0, 20
   10e34:	ldr	pc, [ip, #2044]!	; 0x7fc

00010e38 <myhtml_tree_template_insertion_destroy@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #0, 20
   10e40:	ldr	pc, [ip, #2036]!	; 0x7f4

00010e44 <myhtml_tag_destroy@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #0, 20
   10e4c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010e50 <mcsync_mutex_clean@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #0, 20
   10e58:	ldr	pc, [ip, #2020]!	; 0x7e4

00010e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #0, 20
   10e64:	ldr	pc, [ip, #2012]!	; 0x7dc

00010e68 <myhtml_serialization_tree_callback@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #0, 20
   10e70:	ldr	pc, [ip, #2004]!	; 0x7d4

00010e74 <myhtml_stream_buffer_create@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #0, 20
   10e7c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010e80 <myhtml_tree_appropriate_place_inserting@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #0, 20
   10e88:	ldr	pc, [ip, #1988]!	; 0x7c4

00010e8c <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #0, 20
   10e94:	ldr	pc, [ip, #1980]!	; 0x7bc

00010e98 <myhtml_token_attr_remove_by_name@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #0, 20
   10ea0:	ldr	pc, [ip, #1972]!	; 0x7b4

00010ea4 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #0, 20
   10eac:	ldr	pc, [ip, #1964]!	; 0x7ac

00010eb0 <myhtml_token_attr_by_name@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #0, 20
   10eb8:	ldr	pc, [ip, #1956]!	; 0x7a4

00010ebc <mcsync_unlock@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #0, 20
   10ec4:	ldr	pc, [ip, #1948]!	; 0x79c

00010ec8 <myhtml_tree_token_list_append@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #0, 20
   10ed0:	ldr	pc, [ip, #1940]!	; 0x794

00010ed4 <mycore_utils_avl_tree_node_create_root@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #0, 20
   10edc:	ldr	pc, [ip, #1932]!	; 0x78c

00010ee0 <mythread_queue_list_entry_make_stream@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #0, 20
   10ee8:	ldr	pc, [ip, #1924]!	; 0x784

00010eec <mycore_strncmp@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #0, 20
   10ef4:	ldr	pc, [ip, #1916]!	; 0x77c

00010ef8 <mycore_utils_mhash_create_entry@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #0, 20
   10f00:	ldr	pc, [ip, #1908]!	; 0x774

00010f04 <myhtml_tree_element_in_scope@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #0, 20
   10f0c:	ldr	pc, [ip, #1900]!	; 0x76c

00010f10 <myencoding_index_gb18030_ranges_code_point@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #0, 20
   10f18:	ldr	pc, [ip, #1892]!	; 0x764

00010f1c <__mtree_search_lowercase_to_start@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #0, 20
   10f24:	ldr	pc, [ip, #1884]!	; 0x75c

00010f28 <fseek@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #0, 20
   10f30:	ldr	pc, [ip, #1876]!	; 0x754

00010f34 <myhtml_node_clone@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #0, 20
   10f3c:	ldr	pc, [ip, #1868]!	; 0x74c

00010f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #0, 20
   10f48:	ldr	pc, [ip, #1860]!	; 0x744

00010f4c <myencoding_detect_russian@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #0, 20
   10f54:	ldr	pc, [ip, #1852]!	; 0x73c

00010f58 <pthread_attr_setdetachstate@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #0, 20
   10f60:	ldr	pc, [ip, #1844]!	; 0x734

00010f64 <mchar_async_cache_delete@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #0, 20
   10f6c:	ldr	pc, [ip, #1836]!	; 0x72c

00010f70 <mcobject_clean@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #0, 20
   10f78:	ldr	pc, [ip, #1828]!	; 0x724

00010f7c <myhtml_token_node_clean@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #0, 20
   10f84:	ldr	pc, [ip, #1820]!	; 0x71c

00010f88 <myhtml_token_delete@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #0, 20
   10f90:	ldr	pc, [ip, #1812]!	; 0x714

00010f94 <strncmp@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #0, 20
   10f9c:	ldr	pc, [ip, #1804]!	; 0x70c

00010fa0 <mcsimple_get_by_absolute_position@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #0, 20
   10fa8:	ldr	pc, [ip, #1796]!	; 0x704

00010fac <mcsync_mutex_try_lock@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #0, 20
   10fb4:	ldr	pc, [ip, #1788]!	; 0x6fc

00010fb8 <mycore_utils_avl_tree_node_height@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #0, 20
   10fc0:	ldr	pc, [ip, #1780]!	; 0x6f4

00010fc4 <mycore_utils_avl_tree_node_clean@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #0, 20
   10fcc:	ldr	pc, [ip, #1772]!	; 0x6ec

00010fd0 <myhtml_tree_clear_stack_back_table_context@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #0, 20
   10fd8:	ldr	pc, [ip, #1764]!	; 0x6e4

00010fdc <myhtml_tree_node_clone@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #0, 20
   10fe4:	ldr	pc, [ip, #1756]!	; 0x6dc

00010fe8 <myhtml_tree_token_list_clean@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #0, 20
   10ff0:	ldr	pc, [ip, #1748]!	; 0x6d4

00010ff4 <myhtml_parser_stream@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #0, 20
   10ffc:	ldr	pc, [ip, #1740]!	; 0x6cc

00011000 <myhtml_token_create@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #0, 20
   11008:	ldr	pc, [ip, #1732]!	; 0x6c4

0001100c <myhtml_parser_token_data_to_string_lowercase@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #0, 20
   11014:	ldr	pc, [ip, #1724]!	; 0x6bc

00011018 <myencoding_detect_utf_8@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #0, 20
   11020:	ldr	pc, [ip, #1716]!	; 0x6b4

00011024 <mcsync_spin_unlock@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #0, 20
   1102c:	ldr	pc, [ip, #1708]!	; 0x6ac

00011030 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #0, 20
   11038:	ldr	pc, [ip, #1700]!	; 0x6a4

0001103c <mcsync_mutex_lock@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #0, 20
   11044:	ldr	pc, [ip, #1692]!	; 0x69c

00011048 <myhtml_tree_open_elements_find@plt>:
   11048:	add	ip, pc, #1048576	; 0x100000
   1104c:	add	ip, ip, #0, 20
   11050:	ldr	pc, [ip, #1684]!	; 0x694

00011054 <mcobject_async_clean@plt>:
   11054:	add	ip, pc, #1048576	; 0x100000
   11058:	add	ip, ip, #0, 20
   1105c:	ldr	pc, [ip, #1676]!	; 0x68c

00011060 <mchar_async_mem_malloc@plt>:
   11060:	add	ip, pc, #1048576	; 0x100000
   11064:	add	ip, ip, #0, 20
   11068:	ldr	pc, [ip, #1668]!	; 0x684

0001106c <myhtml_data_process_string_append_char@plt>:
   1106c:	add	ip, pc, #1048576	; 0x100000
   11070:	add	ip, ip, #0, 20
   11074:	ldr	pc, [ip, #1660]!	; 0x67c

00011078 <myhtml_tag_clean@plt>:
   11078:	add	ip, pc, #1048576	; 0x100000
   1107c:	add	ip, ip, #0, 20
   11080:	ldr	pc, [ip, #1652]!	; 0x674

00011084 <mythread_thread_attr_destroy@plt>:
   11084:	add	ip, pc, #1048576	; 0x100000
   11088:	add	ip, ip, #0, 20
   1108c:	ldr	pc, [ip, #1644]!	; 0x66c

00011090 <mycore_string_clean_all@plt>:
   11090:	add	ip, pc, #1048576	; 0x100000
   11094:	add	ip, ip, #0, 20
   11098:	ldr	pc, [ip, #1636]!	; 0x664

0001109c <myhtml_tree_node_clean@plt>:
   1109c:	add	ip, pc, #1048576	; 0x100000
   110a0:	add	ip, ip, #0, 20
   110a4:	ldr	pc, [ip, #1628]!	; 0x65c

000110a8 <mythread_init@plt>:
   110a8:	add	ip, pc, #1048576	; 0x100000
   110ac:	add	ip, ip, #0, 20
   110b0:	ldr	pc, [ip, #1620]!	; 0x654

Disassembly of section .text:

000110b4 <mycore_incoming_buffer_add@@Base-0x174>:
   110b4:	ldr	r3, [pc, #20]	; 110d0 <mythread_init@plt+0x28>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <mythread_init@plt+0x2c>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	105e0 <__gmon_start__@plt>
   110d0:	andeq	pc, pc, ip, lsr pc	; <UNPREDICTABLE>
   110d4:	andeq	r0, r0, r8, ror r8
   110d8:	ldr	r3, [pc, #52]	; 11114 <mythread_init@plt+0x6c>
   110dc:	ldr	r0, [pc, #52]	; 11118 <mythread_init@plt+0x70>
   110e0:	add	r3, pc, r3
   110e4:	add	r0, pc, r0
   110e8:	add	r3, r3, #3
   110ec:	sub	r3, r3, r0
   110f0:	cmp	r3, #6
   110f4:	ldr	r3, [pc, #32]	; 1111c <mythread_init@plt+0x74>
   110f8:	add	r3, pc, r3
   110fc:	bxls	lr
   11100:	ldr	r2, [pc, #24]	; 11120 <mythread_init@plt+0x78>
   11104:	ldr	r3, [r3, r2]
   11108:	cmp	r3, #0
   1110c:	bxeq	lr
   11110:	bx	r3
   11114:			; <UNDEFINED> instruction: 0x001008f0
   11118:	andseq	r0, r0, ip, ror #17
   1111c:	andeq	pc, pc, r0, lsl #30
   11120:	andeq	r0, r0, r4, asr #14
   11124:	ldr	r1, [pc, #56]	; 11164 <mythread_init@plt+0xbc>
   11128:	ldr	r0, [pc, #56]	; 11168 <mythread_init@plt+0xc0>
   1112c:	add	r1, pc, r1
   11130:	add	r0, pc, r0
   11134:	sub	r1, r1, r0
   11138:	ldr	r3, [pc, #44]	; 1116c <mythread_init@plt+0xc4>
   1113c:	asr	r1, r1, #2
   11140:	add	r3, pc, r3
   11144:	add	r1, r1, r1, lsr #31
   11148:	asrs	r1, r1, #1
   1114c:	bxeq	lr
   11150:	ldr	r2, [pc, #24]	; 11170 <mythread_init@plt+0xc8>
   11154:	ldr	r3, [r3, r2]
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andseq	r0, r0, r4, lsr #17
   11168:	andseq	r0, r0, r0, lsr #17
   1116c:			; <UNDEFINED> instruction: 0x000ffeb8
   11170:	andeq	r0, r0, ip, lsl #19
   11174:	ldr	r3, [pc, #76]	; 111c8 <mythread_init@plt+0x120>
   11178:	ldr	r2, [pc, #76]	; 111cc <mythread_init@plt+0x124>
   1117c:	add	r3, pc, r3
   11180:	add	r2, pc, r2
   11184:	ldrb	r3, [r3]
   11188:	cmp	r3, #0
   1118c:	bxne	lr
   11190:	ldr	r3, [pc, #56]	; 111d0 <mythread_init@plt+0x128>
   11194:	push	{r4, lr}
   11198:	ldr	r3, [r2, r3]
   1119c:	cmp	r3, #0
   111a0:	beq	111b0 <mythread_init@plt+0x108>
   111a4:	ldr	r3, [pc, #40]	; 111d4 <mythread_init@plt+0x12c>
   111a8:	ldr	r0, [pc, r3]
   111ac:	bl	fd40 <__cxa_finalize@plt>
   111b0:	bl	110d8 <mythread_init@plt+0x30>
   111b4:	ldr	r3, [pc, #28]	; 111d8 <mythread_init@plt+0x130>
   111b8:	mov	r2, #1
   111bc:	add	r3, pc, r3
   111c0:	strb	r2, [r3]
   111c4:	pop	{r4, pc}
   111c8:	andseq	r0, r0, r4, asr r8
   111cc:	andeq	pc, pc, r8, ror lr	; <UNPREDICTABLE>
   111d0:	andeq	r0, r0, r0, lsr r7
   111d4:	andseq	r0, r0, r4, lsr #16
   111d8:	andseq	r0, r0, r4, lsl r8
   111dc:	ldr	r0, [pc, #56]	; 1121c <mythread_init@plt+0x174>
   111e0:	ldr	r3, [pc, #56]	; 11220 <mythread_init@plt+0x178>
   111e4:	add	r0, pc, r0
   111e8:	ldr	r2, [r0]
   111ec:	add	r3, pc, r3
   111f0:	cmp	r2, #0
   111f4:	bne	111fc <mythread_init@plt+0x154>
   111f8:	b	11124 <mythread_init@plt+0x7c>
   111fc:	ldr	r2, [pc, #32]	; 11224 <mythread_init@plt+0x17c>
   11200:	ldr	r3, [r3, r2]
   11204:	cmp	r3, #0
   11208:	beq	111f8 <mythread_init@plt+0x150>
   1120c:	push	{r4, lr}
   11210:	blx	r3
   11214:	pop	{r4, lr}
   11218:	b	11124 <mythread_init@plt+0x7c>
   1121c:	strdeq	r7, [pc], -ip
   11220:	andeq	pc, pc, ip, lsl #28
   11224:	andeq	r0, r0, ip, lsr r9

00011228 <mycore_incoming_buffer_add@@Base>:
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r4, r0
   11230:	mov	r0, r1
   11234:	mov	r1, #0
   11238:	mov	r5, r2
   1123c:	mov	r6, r3
   11240:	bl	10a60 <mcobject_malloc@plt>
   11244:	mov	r3, #0
   11248:	cmp	r4, r3
   1124c:	str	r3, [r0, #4]
   11250:	str	r6, [r0, #8]
   11254:	ldrne	r3, [r4, #12]
   11258:	ldrne	r2, [r4, #8]
   1125c:	str	r5, [r0]
   11260:	addne	r3, r3, r2
   11264:	strne	r3, [r0, #12]
   11268:	mov	r3, #0
   1126c:	strne	r0, [r4, #20]
   11270:	streq	r4, [r0, #12]
   11274:	str	r4, [r0, #16]
   11278:	str	r3, [r0, #20]
   1127c:	pop	{r4, r5, r6, pc}

00011280 <mycore_incoming_buffer_clean@@Base>:
   11280:	mov	r2, #24
   11284:	mov	r1, #0
   11288:	b	108b0 <memset@plt>

0001128c <mycore_incoming_buffer_split@@Base>:
   1128c:	push	{r4, r5, r6, lr}
   11290:	mov	r4, r0
   11294:	mov	r0, r1
   11298:	ldr	r5, [r4, #12]
   1129c:	mov	r1, #0
   112a0:	sub	r5, r2, r5
   112a4:	bl	10a60 <mcobject_malloc@plt>
   112a8:	ldr	r2, [r4, #8]
   112ac:	sub	r2, r2, r5
   112b0:	str	r2, [r0, #8]
   112b4:	str	r2, [r0, #4]
   112b8:	ldr	r2, [r4]
   112bc:	add	r2, r2, r5
   112c0:	str	r2, [r0]
   112c4:	ldr	r2, [r4, #12]
   112c8:	str	r4, [r0, #16]
   112cc:	add	r2, r2, r5
   112d0:	str	r2, [r0, #12]
   112d4:	mov	r2, #0
   112d8:	str	r2, [r0, #20]
   112dc:	str	r0, [r4, #20]
   112e0:	str	r5, [r4, #8]
   112e4:	str	r5, [r4, #4]
   112e8:	pop	{r4, r5, r6, pc}

000112ec <mycore_incoming_buffer_find_by_position@@Base>:
   112ec:	ldr	r3, [r0, #12]
   112f0:	cmp	r3, r1
   112f4:	bcc	11314 <mycore_incoming_buffer_find_by_position@@Base+0x28>
   112f8:	ldr	r3, [r0, #12]
   112fc:	cmp	r1, r3
   11300:	bcc	1132c <mycore_incoming_buffer_find_by_position@@Base+0x40>
   11304:	bx	lr
   11308:	ldr	r0, [r0, #20]
   1130c:	cmp	r0, #0
   11310:	bxeq	lr
   11314:	ldr	r3, [r0, #12]
   11318:	ldr	r2, [r0, #8]
   1131c:	add	r3, r3, r2
   11320:	cmp	r1, r3
   11324:	bhi	11308 <mycore_incoming_buffer_find_by_position@@Base+0x1c>
   11328:	bx	lr
   1132c:	ldr	r0, [r0, #16]
   11330:	cmp	r0, #0
   11334:	bne	112f8 <mycore_incoming_buffer_find_by_position@@Base+0xc>
   11338:	bx	lr

0001133c <mycore_incoming_buffer_data@@Base>:
   1133c:	ldr	r0, [r0]
   11340:	bx	lr

00011344 <mycore_incoming_buffer_length@@Base>:
   11344:	ldr	r0, [r0, #4]
   11348:	bx	lr

0001134c <mycore_incoming_buffer_size@@Base>:
   1134c:	ldr	r0, [r0, #8]
   11350:	bx	lr

00011354 <mycore_incoming_buffer_offset@@Base>:
   11354:	ldr	r0, [r0, #12]
   11358:	bx	lr

0001135c <mycore_incoming_buffer_relative_begin@@Base>:
   1135c:	ldr	r0, [r0, #12]
   11360:	sub	r0, r1, r0
   11364:	bx	lr

00011368 <mycore_incoming_buffer_available_length@@Base>:
   11368:	ldr	r3, [r0, #8]
   1136c:	add	r0, r1, r2
   11370:	cmp	r0, r3
   11374:	subhi	r2, r3, r1
   11378:	mov	r0, r2
   1137c:	bx	lr

00011380 <mycore_incoming_buffer_next@@Base>:
   11380:	ldr	r0, [r0, #20]
   11384:	bx	lr

00011388 <mycore_incoming_buffer_prev@@Base>:
   11388:	ldr	r0, [r0, #16]
   1138c:	bx	lr

00011390 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   11390:	ldr	r3, [r0]
   11394:	ldr	ip, [r1]
   11398:	push	{r4, r5, r6, r7, r8, lr}
   1139c:	ldr	r2, [r3, #8]
   113a0:	ldr	r5, [pc, #132]	; 1142c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x9c>
   113a4:	cmp	ip, r2
   113a8:	movcs	r2, #0
   113ac:	ldrcs	r3, [r3, #20]
   113b0:	strcs	r2, [r1]
   113b4:	mov	r2, #0
   113b8:	ldr	r6, [r3]
   113bc:	mov	lr, r2
   113c0:	add	r5, pc, r5
   113c4:	mov	r8, r2
   113c8:	ldr	ip, [r1]
   113cc:	ldrb	r4, [r6, ip]
   113d0:	add	r7, r5, r4
   113d4:	ldrb	r7, [r7, #256]	; 0x100
   113d8:	cmp	r7, #255	; 0xff
   113dc:	cmpne	lr, #6
   113e0:	bne	113f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x60>
   113e4:	str	r3, [r0]
   113e8:	mov	r0, r2
   113ec:	pop	{r4, r5, r6, r7, r8, pc}
   113f0:	ldrb	r4, [r5, r4]
   113f4:	add	ip, ip, #1
   113f8:	str	ip, [r1]
   113fc:	orr	r2, r4, r2, lsl #4
   11400:	ldr	r4, [r3, #8]
   11404:	add	lr, lr, #1
   11408:	cmp	ip, r4
   1140c:	bcc	113c8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x38>
   11410:	ldr	ip, [r3, #20]
   11414:	cmp	ip, #0
   11418:	beq	113e4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x54>
   1141c:	ldr	r6, [r3]
   11420:	str	r8, [r1]
   11424:	mov	r3, ip
   11428:	b	113c8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x38>
   1142c:	andeq	r8, r1, r8, ror r1

00011430 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   11430:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11434:	mov	r4, r3
   11438:	ldr	r3, [r0]
   1143c:	mov	r9, r1
   11440:	mov	r6, r2
   11444:	ldr	r1, [r4]
   11448:	ldr	r2, [r3, #8]
   1144c:	mov	r8, r0
   11450:	cmp	r1, r2
   11454:	str	r3, [sp, #4]
   11458:	bcc	11474 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x44>
   1145c:	ldr	r3, [r3, #20]
   11460:	cmp	r3, #0
   11464:	beq	114a8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x78>
   11468:	mov	r2, #0
   1146c:	str	r2, [r4]
   11470:	str	r3, [sp, #4]
   11474:	add	r7, sp, #8
   11478:	ldr	sl, [pc, #228]	; 11564 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x134>
   1147c:	ldr	r3, [r7, #-4]!
   11480:	ldr	fp, [pc, #224]	; 11568 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   11484:	mov	r5, #0
   11488:	ldr	r1, [r3]
   1148c:	add	sl, pc, sl
   11490:	add	fp, pc, fp
   11494:	cmp	r5, r6
   11498:	bne	114b4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x84>
   1149c:	ldr	r3, [sp, #4]
   114a0:	sub	r6, r6, r5
   114a4:	str	r3, [r8]
   114a8:	mov	r0, r6
   114ac:	add	sp, sp, #12
   114b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114b4:	ldr	r3, [r4]
   114b8:	ldrb	r2, [r1, r3]
   114bc:	cmp	r2, #92	; 0x5c
   114c0:	bne	1153c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x10c>
   114c4:	add	r3, r3, #1
   114c8:	str	r3, [r4]
   114cc:	mov	r1, r4
   114d0:	mov	r0, r7
   114d4:	bl	101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   114d8:	cmp	r0, #255	; 0xff
   114dc:	bhi	1149c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   114e0:	ldrb	r3, [r9, r5]
   114e4:	add	r0, fp, r0
   114e8:	add	r3, fp, r3
   114ec:	ldrb	r2, [r0, #512]	; 0x200
   114f0:	ldrb	r3, [r3, #512]	; 0x200
   114f4:	cmp	r2, r3
   114f8:	bne	1149c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   114fc:	ldr	r3, [sp, #4]
   11500:	ldr	r1, [r3]
   11504:	ldr	r3, [sp, #4]
   11508:	ldr	r0, [r4]
   1150c:	add	r5, r5, #1
   11510:	ldr	r2, [r3, #8]
   11514:	cmp	r0, r2
   11518:	bcc	11494 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   1151c:	ldr	r3, [r3, #20]
   11520:	cmp	r3, #0
   11524:	beq	1149c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   11528:	ldr	r1, [r3]
   1152c:	str	r3, [sp, #4]
   11530:	mov	r3, #0
   11534:	str	r3, [r4]
   11538:	b	11494 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   1153c:	ldrb	r0, [r9, r5]
   11540:	add	r2, sl, r2
   11544:	add	r0, sl, r0
   11548:	ldrb	ip, [r2, #512]	; 0x200
   1154c:	ldrb	r2, [r0, #512]	; 0x200
   11550:	cmp	ip, r2
   11554:	bne	1149c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   11558:	add	r3, r3, #1
   1155c:	str	r3, [r4]
   11560:	b	11504 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd4>
   11564:	andeq	r8, r1, ip, lsr #1
   11568:	andeq	r8, r1, r8, lsr #1

0001156c <mycore_string_clean@@Base>:
   1156c:	mov	r3, #0
   11570:	str	r3, [r0, #8]
   11574:	bx	lr

00011578 <mycore_string_init@@Base>:
   11578:	push	{r4, r5, r6, r7, r8, lr}
   1157c:	mov	r4, r2
   11580:	mov	r2, r3
   11584:	mov	r7, r1
   11588:	mov	r5, r3
   1158c:	mov	r6, r0
   11590:	bl	10910 <mchar_async_malloc@plt>
   11594:	str	r7, [r4, #16]
   11598:	str	r6, [r4, #12]
   1159c:	stm	r4, {r0, r5}
   115a0:	mov	r0, r4
   115a4:	bl	10d18 <mycore_string_clean@plt>
   115a8:	ldr	r0, [r4]
   115ac:	pop	{r4, r5, r6, r7, r8, pc}

000115b0 <mycore_string_clean_all@@Base>:
   115b0:	mov	r2, #20
   115b4:	mov	r1, #0
   115b8:	b	108b0 <memset@plt>

000115bc <mycore_string_destroy@@Base>:
   115bc:	push	{r4, r5, r6, lr}
   115c0:	subs	r4, r0, #0
   115c4:	beq	11600 <mycore_string_destroy@@Base+0x44>
   115c8:	ldr	r2, [r4]
   115cc:	mov	r5, r1
   115d0:	cmp	r2, #0
   115d4:	beq	115ec <mycore_string_destroy@@Base+0x30>
   115d8:	ldr	r0, [r4, #12]
   115dc:	cmp	r0, #0
   115e0:	beq	115ec <mycore_string_destroy@@Base+0x30>
   115e4:	ldr	r1, [r4, #16]
   115e8:	bl	10718 <mchar_async_free@plt>
   115ec:	cmp	r5, #0
   115f0:	beq	11600 <mycore_string_destroy@@Base+0x44>
   115f4:	mov	r0, r4
   115f8:	bl	10dcc <mycore_free@plt>
   115fc:	mov	r4, #0
   11600:	mov	r0, r4
   11604:	pop	{r4, r5, r6, pc}

00011608 <mycore_string_raw_clean@@Base>:
   11608:	mov	r3, #0
   1160c:	str	r3, [r0, #8]
   11610:	bx	lr

00011614 <mycore_string_raw_clean_all@@Base>:
   11614:	mov	r3, #0
   11618:	str	r3, [r0]
   1161c:	str	r3, [r0, #4]
   11620:	str	r3, [r0, #8]
   11624:	bx	lr

00011628 <mycore_string_raw_destroy@@Base>:
   11628:	push	{r4, r5, r6, lr}
   1162c:	subs	r4, r0, #0
   11630:	beq	11664 <mycore_string_raw_destroy@@Base+0x3c>
   11634:	ldr	r0, [r4]
   11638:	mov	r5, r1
   1163c:	cmp	r0, #0
   11640:	beq	11650 <mycore_string_raw_destroy@@Base+0x28>
   11644:	bl	10dcc <mycore_free@plt>
   11648:	mov	r3, #0
   1164c:	str	r3, [r4]
   11650:	cmp	r5, #0
   11654:	beq	11664 <mycore_string_raw_destroy@@Base+0x3c>
   11658:	mov	r0, r4
   1165c:	bl	10dcc <mycore_free@plt>
   11660:	mov	r4, #0
   11664:	mov	r0, r4
   11668:	pop	{r4, r5, r6, pc}

0001166c <mycore_string_realloc@@Base>:
   1166c:	push	{r0, r1, r2, r4, r5, lr}
   11670:	cmp	r0, #0
   11674:	beq	116a0 <mycore_string_realloc@@Base+0x34>
   11678:	str	r1, [sp]
   1167c:	mov	r4, r0
   11680:	mov	r5, r1
   11684:	ldr	r3, [r0, #8]
   11688:	ldr	r2, [r0]
   1168c:	ldr	r1, [r0, #16]
   11690:	ldr	r0, [r0, #12]
   11694:	bl	ffbc <mchar_async_realloc@plt>
   11698:	cmp	r0, #0
   1169c:	stmne	r4, {r0, r5}
   116a0:	add	sp, sp, #12
   116a4:	pop	{r4, r5, pc}

000116a8 <mycore_string_data_alloc@@Base>:
   116a8:	b	10910 <mchar_async_malloc@plt>

000116ac <mycore_string_data_realloc@@Base>:
   116ac:	b	ffbc <mchar_async_realloc@plt>

000116b0 <mycore_string_data_free@@Base>:
   116b0:	b	10718 <mchar_async_free@plt>

000116b4 <mycore_string_data@@Base>:
   116b4:	cmp	r0, #0
   116b8:	ldrne	r0, [r0]
   116bc:	bx	lr

000116c0 <mycore_string_length@@Base>:
   116c0:	cmp	r0, #0
   116c4:	ldrne	r0, [r0, #8]
   116c8:	bx	lr

000116cc <mycore_string_size@@Base>:
   116cc:	cmp	r0, #0
   116d0:	ldrne	r0, [r0, #4]
   116d4:	bx	lr

000116d8 <mycore_string_data_set@@Base>:
   116d8:	cmp	r0, #0
   116dc:	moveq	r1, r0
   116e0:	strne	r1, [r0]
   116e4:	mov	r0, r1
   116e8:	bx	lr

000116ec <mycore_string_size_set@@Base>:
   116ec:	cmp	r0, #0
   116f0:	moveq	r1, r0
   116f4:	strne	r1, [r0, #4]
   116f8:	mov	r0, r1
   116fc:	bx	lr

00011700 <mycore_string_length_set@@Base>:
   11700:	cmp	r0, #0
   11704:	moveq	r1, r0
   11708:	strne	r1, [r0, #8]
   1170c:	mov	r0, r1
   11710:	bx	lr

00011714 <mycore_string_append@@Base>:
   11714:	ldr	r3, [r0, #8]
   11718:	push	{r4, r5, r6, lr}
   1171c:	mov	r6, r1
   11720:	add	r1, r2, #1
   11724:	add	r1, r1, r3
   11728:	ldr	r3, [r0, #4]
   1172c:	mov	r4, r0
   11730:	cmp	r1, r3
   11734:	mov	r5, r2
   11738:	bcc	11740 <mycore_string_append@@Base+0x2c>
   1173c:	bl	10964 <mycore_string_realloc@plt>
   11740:	ldr	r3, [r4, #8]
   11744:	ldr	r0, [r4]
   11748:	mov	r2, r5
   1174c:	add	r0, r0, r3
   11750:	mov	r1, r6
   11754:	bl	ff5c <memcpy@plt>
   11758:	ldr	r3, [r4, #8]
   1175c:	mov	r2, #0
   11760:	add	r5, r5, r3
   11764:	ldr	r3, [r4]
   11768:	str	r5, [r4, #8]
   1176c:	strb	r2, [r3, r5]
   11770:	pop	{r4, r5, r6, pc}

00011774 <mycore_string_append_one@@Base>:
   11774:	push	{r4, r5, r6, lr}
   11778:	mov	r5, r1
   1177c:	ldr	r1, [r0, #8]
   11780:	ldr	r3, [r0, #4]
   11784:	add	r2, r1, #2
   11788:	cmp	r2, r3
   1178c:	mov	r4, r0
   11790:	bcc	1179c <mycore_string_append_one@@Base+0x28>
   11794:	add	r1, r1, #3
   11798:	bl	10964 <mycore_string_realloc@plt>
   1179c:	ldr	r3, [r4, #8]
   117a0:	ldr	r2, [r4]
   117a4:	mov	r1, #0
   117a8:	strb	r5, [r2, r3]
   117ac:	ldr	r3, [r4, #8]
   117b0:	ldr	r2, [r4]
   117b4:	add	r3, r3, #1
   117b8:	str	r3, [r4, #8]
   117bc:	strb	r1, [r2, r3]
   117c0:	pop	{r4, r5, r6, pc}

000117c4 <mycore_string_append_lowercase@@Base>:
   117c4:	ldr	r3, [r0, #8]
   117c8:	push	{r4, r5, r6, lr}
   117cc:	mov	r6, r1
   117d0:	add	r1, r2, #1
   117d4:	add	r1, r1, r3
   117d8:	ldr	r3, [r0, #4]
   117dc:	mov	r4, r0
   117e0:	cmp	r1, r3
   117e4:	mov	r5, r2
   117e8:	bcc	117f0 <mycore_string_append_lowercase@@Base+0x2c>
   117ec:	bl	10964 <mycore_string_realloc@plt>
   117f0:	ldr	r3, [r4, #8]
   117f4:	ldr	r1, [r4]
   117f8:	ldr	r2, [pc, #60]	; 1183c <mycore_string_append_lowercase@@Base+0x78>
   117fc:	add	r1, r1, r3
   11800:	add	r2, pc, r2
   11804:	mov	r3, #0
   11808:	cmp	r3, r5
   1180c:	bne	11828 <mycore_string_append_lowercase@@Base+0x64>
   11810:	mov	r2, #0
   11814:	strb	r2, [r1, r3]
   11818:	ldr	r2, [r4, #8]
   1181c:	add	r3, r2, r3
   11820:	str	r3, [r4, #8]
   11824:	pop	{r4, r5, r6, pc}
   11828:	ldrb	r0, [r6, r3]
   1182c:	ldrb	r0, [r2, r0]
   11830:	strb	r0, [r1, r3]
   11834:	add	r3, r3, #1
   11838:	b	11808 <mycore_string_append_lowercase@@Base+0x44>
   1183c:	andeq	r8, r1, r8, lsr r0

00011840 <mycore_string_copy@@Base>:
   11840:	ldr	r2, [r1, #8]
   11844:	ldr	r1, [r1]
   11848:	b	108d4 <mycore_string_append@plt>

0001184c <mycore_string_raw_copy@@Base>:
   1184c:	mov	r3, #0
   11850:	strb	r3, [r0, r2]
   11854:	add	r3, r1, r2
   11858:	add	r0, r0, r2
   1185c:	cmp	r3, r1
   11860:	bne	1186c <mycore_string_raw_copy@@Base+0x20>
   11864:	mov	r0, #0
   11868:	bx	lr
   1186c:	ldrb	r2, [r3, #-1]!
   11870:	strb	r2, [r0, #-1]!
   11874:	b	1185c <mycore_string_raw_copy@@Base+0x10>

00011878 <mycore_string_raw_set_replacement_character@@Base>:
   11878:	ldr	r3, [r0]
   1187c:	mvn	r2, #16
   11880:	strb	r2, [r3, r1]
   11884:	ldr	r3, [r0]
   11888:	mvn	r2, #64	; 0x40
   1188c:	add	r3, r3, r1
   11890:	strb	r2, [r3, #1]
   11894:	ldr	r3, [r0]
   11898:	mov	r0, #3
   1189c:	add	r1, r3, r1
   118a0:	mvn	r3, #66	; 0x42
   118a4:	strb	r3, [r1, #2]
   118a8:	bx	lr

000118ac <mycore_string_append_with_replacement_null_characters@@Base>:
   118ac:	ldr	r3, [r0, #8]
   118b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118b4:	mov	r5, r1
   118b8:	add	r1, r2, #1
   118bc:	add	r1, r1, r3
   118c0:	ldr	r3, [r0, #4]
   118c4:	mov	r4, r0
   118c8:	cmp	r1, r3
   118cc:	mov	r6, r2
   118d0:	bcc	118d8 <mycore_string_append_with_replacement_null_characters@@Base+0x2c>
   118d4:	bl	10964 <mycore_string_realloc@plt>
   118d8:	ldr	r3, [r4]
   118dc:	add	r6, r5, r6
   118e0:	mvn	r7, #16
   118e4:	mvn	r8, #64	; 0x40
   118e8:	mvn	r9, #66	; 0x42
   118ec:	cmp	r6, r5
   118f0:	bne	11908 <mycore_string_append_with_replacement_null_characters@@Base+0x5c>
   118f4:	ldr	r2, [r4]
   118f8:	ldr	r3, [r4, #8]
   118fc:	mov	r1, #0
   11900:	strb	r1, [r2, r3]
   11904:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11908:	ldrb	r2, [r5], #1
   1190c:	cmp	r2, #0
   11910:	ldrne	r1, [r4, #8]
   11914:	strbne	r2, [r3, r1]
   11918:	bne	11958 <mycore_string_append_with_replacement_null_characters@@Base+0xac>
   1191c:	ldr	r1, [r4, #4]
   11920:	mov	r0, r4
   11924:	add	r1, r1, #5
   11928:	bl	10964 <mycore_string_realloc@plt>
   1192c:	ldr	r2, [r4, #8]
   11930:	ldr	r3, [r4]
   11934:	strb	r7, [r3, r2]
   11938:	ldr	r2, [r4, #8]
   1193c:	add	r2, r2, #1
   11940:	str	r2, [r4, #8]
   11944:	strb	r8, [r3, r2]
   11948:	ldr	r2, [r4, #8]
   1194c:	add	r2, r2, #1
   11950:	str	r2, [r4, #8]
   11954:	strb	r9, [r3, r2]
   11958:	ldr	r2, [r4, #8]
   1195c:	add	r2, r2, #1
   11960:	str	r2, [r4, #8]
   11964:	b	118ec <mycore_string_append_with_replacement_null_characters@@Base+0x40>

00011968 <mycore_string_stay_only_whitespace@@Base>:
   11968:	ldr	r1, [r0]
   1196c:	push	{r4, lr}
   11970:	mov	ip, r1
   11974:	ldr	r4, [pc, #64]	; 119bc <mycore_string_stay_only_whitespace@@Base+0x54>
   11978:	mov	r2, #0
   1197c:	ldr	lr, [r0, #8]
   11980:	sub	r3, ip, r1
   11984:	cmp	lr, r3
   11988:	bhi	11994 <mycore_string_stay_only_whitespace@@Base+0x2c>
   1198c:	str	r2, [r0, #8]
   11990:	pop	{r4, pc}
   11994:	ldrb	lr, [ip], #1
   11998:	sub	r3, lr, #9
   1199c:	uxtb	r3, r3
   119a0:	cmp	r3, #23
   119a4:	bhi	1197c <mycore_string_stay_only_whitespace@@Base+0x14>
   119a8:	mvn	r3, r4, lsr r3
   119ac:	tst	r3, #1
   119b0:	strbeq	lr, [r1, r2]
   119b4:	addeq	r2, r2, #1
   119b8:	b	1197c <mycore_string_stay_only_whitespace@@Base+0x14>
   119bc:	addeq	r0, r0, fp, lsl r0

000119c0 <mycore_string_crop_whitespace_from_begin@@Base>:
   119c0:	push	{r4, r5, r6, lr}
   119c4:	mov	r5, r0
   119c8:	ldr	r1, [pc, #96]	; 11a30 <mycore_string_crop_whitespace_from_begin@@Base+0x70>
   119cc:	ldr	r0, [r0]
   119d0:	ldr	r2, [r5, #8]
   119d4:	mov	r4, #0
   119d8:	cmp	r4, r2
   119dc:	bne	11a08 <mycore_string_crop_whitespace_from_begin@@Base+0x48>
   119e0:	cmp	r4, #0
   119e4:	beq	119f4 <mycore_string_crop_whitespace_from_begin@@Base+0x34>
   119e8:	mov	r1, r4
   119ec:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   119f0:	str	r0, [r5]
   119f4:	ldr	r3, [r5, #8]
   119f8:	mov	r0, r4
   119fc:	sub	r3, r3, r4
   11a00:	str	r3, [r5, #8]
   11a04:	pop	{r4, r5, r6, pc}
   11a08:	ldrb	r3, [r0, r4]
   11a0c:	sub	r3, r3, #9
   11a10:	uxtb	r3, r3
   11a14:	cmp	r3, #23
   11a18:	bhi	119e0 <mycore_string_crop_whitespace_from_begin@@Base+0x20>
   11a1c:	mvn	r3, r1, lsr r3
   11a20:	tst	r3, #1
   11a24:	bne	119e0 <mycore_string_crop_whitespace_from_begin@@Base+0x20>
   11a28:	add	r4, r4, #1
   11a2c:	b	119d8 <mycore_string_crop_whitespace_from_begin@@Base+0x18>
   11a30:	addeq	r0, r0, fp, lsl r0

00011a34 <mycore_string_whitespace_from_begin@@Base>:
   11a34:	ldr	ip, [pc, #60]	; 11a78 <mycore_string_whitespace_from_begin@@Base+0x44>
   11a38:	ldr	r1, [r0]
   11a3c:	ldr	r2, [r0, #8]
   11a40:	mov	r0, #0
   11a44:	cmp	r0, r2
   11a48:	bne	11a50 <mycore_string_whitespace_from_begin@@Base+0x1c>
   11a4c:	bx	lr
   11a50:	ldrb	r3, [r1, r0]
   11a54:	sub	r3, r3, #9
   11a58:	uxtb	r3, r3
   11a5c:	cmp	r3, #23
   11a60:	bxhi	lr
   11a64:	mvn	r3, ip, lsr r3
   11a68:	tst	r3, #1
   11a6c:	bxne	lr
   11a70:	add	r0, r0, #1
   11a74:	b	11a44 <mycore_string_whitespace_from_begin@@Base+0x10>
   11a78:	addeq	r0, r0, fp, lsl r0

00011a7c <mythread_create@@Base>:
   11a7c:	mov	r1, #40	; 0x28
   11a80:	mov	r0, #1
   11a84:	b	ff14 <mycore_calloc@plt>

00011a88 <mythread_init@@Base>:
   11a88:	push	{r4, r5, r6, lr}
   11a8c:	mov	r4, r0
   11a90:	subs	r0, r2, #0
   11a94:	beq	11ae8 <mythread_init@@Base+0x60>
   11a98:	mov	r5, #0
   11a9c:	str	r1, [r4, #32]
   11aa0:	str	r0, [r4, #8]
   11aa4:	str	r5, [r4, #4]
   11aa8:	str	r3, [r4, #12]
   11aac:	mov	r1, #40	; 0x28
   11ab0:	bl	ff14 <mycore_calloc@plt>
   11ab4:	cmp	r0, r5
   11ab8:	str	r0, [r4]
   11abc:	beq	11af0 <mythread_init@@Base+0x68>
   11ac0:	mov	r0, r4
   11ac4:	bl	fe84 <mythread_thread_attr_init@plt>
   11ac8:	cmp	r0, r5
   11acc:	str	r0, [r4, #20]
   11ad0:	beq	11af8 <mythread_init@@Base+0x70>
   11ad4:	mov	r0, r4
   11ad8:	bl	fca4 <mythread_nanosleep_create@plt>
   11adc:	str	r0, [r4, #24]
   11ae0:	mov	r0, r5
   11ae4:	pop	{r4, r5, r6, pc}
   11ae8:	mov	r0, #1
   11aec:	pop	{r4, r5, r6, pc}
   11af0:	mov	r0, #2
   11af4:	pop	{r4, r5, r6, pc}
   11af8:	mov	r0, #12
   11afc:	pop	{r4, r5, r6, pc}

00011b00 <mythread_clean@@Base>:
   11b00:	push	{r4, lr}
   11b04:	mov	r4, r0
   11b08:	ldr	r1, [r0, #20]
   11b0c:	bl	1040c <mythread_thread_attr_clean@plt>
   11b10:	ldr	r0, [r4, #24]
   11b14:	bl	fc5c <mythread_nanosleep_clean@plt>
   11b18:	mov	r3, #0
   11b1c:	str	r3, [r4, #28]
   11b20:	pop	{r4, pc}

00011b24 <myhread_entry_create@@Base>:
   11b24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b28:	mov	lr, #0
   11b2c:	ldr	r6, [r0, #8]
   11b30:	ldr	ip, [r0, #4]
   11b34:	str	lr, [r0, #28]
   11b38:	cmp	ip, r6
   11b3c:	movcs	r6, #15
   11b40:	bcs	11bb8 <myhread_entry_create@@Base+0x94>
   11b44:	mov	r7, #40	; 0x28
   11b48:	ldr	r9, [r0]
   11b4c:	mul	r7, r7, ip
   11b50:	mov	r8, r1
   11b54:	add	r5, r9, r7
   11b58:	mov	r4, r0
   11b5c:	str	r6, [r5, #12]
   11b60:	str	r2, [r5, #8]
   11b64:	str	ip, [r5, #4]
   11b68:	str	r3, [r5, #16]
   11b6c:	str	lr, [r5, #20]
   11b70:	str	r0, [r5, #32]
   11b74:	bl	fca4 <mythread_nanosleep_create@plt>
   11b78:	str	r0, [r5, #28]
   11b7c:	mov	r0, r4
   11b80:	bl	10afc <mythread_mutex_create@plt>
   11b84:	cmp	r0, #0
   11b88:	mov	r1, r0
   11b8c:	str	r0, [r5, #24]
   11b90:	moveq	r6, #71	; 0x47
   11b94:	beq	11bb8 <myhread_entry_create@@Base+0x94>
   11b98:	mov	r0, r4
   11b9c:	bl	10d9c <mythread_mutex_wait@plt>
   11ba0:	subs	r6, r0, #0
   11ba4:	beq	11bc0 <myhread_entry_create@@Base+0x9c>
   11ba8:	ldr	r1, [r5, #24]
   11bac:	mov	r0, r4
   11bb0:	bl	10634 <mythread_mutex_close@plt>
   11bb4:	mov	r6, #72	; 0x48
   11bb8:	mov	r0, r6
   11bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bc0:	add	r2, r5, #4
   11bc4:	mov	r1, r8
   11bc8:	mov	r0, r4
   11bcc:	bl	fd88 <mythread_thread_create@plt>
   11bd0:	cmp	r0, #0
   11bd4:	str	r0, [r9, r7]
   11bd8:	ldrne	r3, [r4, #4]
   11bdc:	addne	r3, r3, #1
   11be0:	strne	r3, [r4, #4]
   11be4:	bne	11bb8 <myhread_entry_create@@Base+0x94>
   11be8:	ldr	r1, [r5, #24]
   11bec:	mov	r0, r4
   11bf0:	bl	10634 <mythread_mutex_close@plt>
   11bf4:	mov	r6, #1
   11bf8:	b	11bb8 <myhread_entry_create@@Base+0x94>

00011bfc <myhread_increase_id_by_entry_id@@Base>:
   11bfc:	ldr	r0, [r0, #12]
   11c00:	add	r0, r1, r0
   11c04:	bx	lr

00011c08 <mythread_join@@Base>:
   11c08:	push	{r4, r5, r6, r7, r8, lr}
   11c0c:	mov	r5, r0
   11c10:	mov	r6, r1
   11c14:	mov	r8, r2
   11c18:	mov	r4, #0
   11c1c:	mov	r7, #40	; 0x28
   11c20:	ldr	r3, [r5, #4]
   11c24:	cmp	r4, r3
   11c28:	bcc	11c34 <mythread_join@@Base+0x2c>
   11c2c:	mov	r0, #0
   11c30:	pop	{r4, r5, r6, r7, r8, pc}
   11c34:	cmp	r6, #0
   11c38:	beq	11c50 <mythread_join@@Base+0x48>
   11c3c:	ldr	r1, [r5]
   11c40:	mov	r2, r8
   11c44:	mla	r1, r7, r4, r1
   11c48:	mov	r0, r5
   11c4c:	blx	r6
   11c50:	mul	r3, r7, r4
   11c54:	ldr	r2, [r5]
   11c58:	mov	r0, r5
   11c5c:	ldr	r1, [r2, r3]
   11c60:	bl	10568 <mythread_thread_join@plt>
   11c64:	cmp	r0, #0
   11c68:	addeq	r4, r4, #1
   11c6c:	beq	11c20 <mythread_join@@Base+0x18>
   11c70:	mov	r0, #1
   11c74:	pop	{r4, r5, r6, r7, r8, pc}

00011c78 <mythread_check_status@@Base>:
   11c78:	ldr	r1, [r0, #4]
   11c7c:	mov	r3, #0
   11c80:	mov	ip, #40	; 0x28
   11c84:	cmp	r3, r1
   11c88:	bne	11c98 <mythread_check_status@@Base+0x20>
   11c8c:	mov	r2, #0
   11c90:	mov	r0, r2
   11c94:	bx	lr
   11c98:	ldr	r2, [r0]
   11c9c:	mla	r2, ip, r3, r2
   11ca0:	ldr	r2, [r2, #20]
   11ca4:	cmp	r2, #0
   11ca8:	bne	11c90 <mythread_check_status@@Base+0x18>
   11cac:	add	r3, r3, #1
   11cb0:	b	11c84 <mythread_check_status@@Base+0xc>

00011cb4 <mythread_option@@Base>:
   11cb4:	ldr	r0, [r0, #36]	; 0x24
   11cb8:	bx	lr

00011cbc <mythread_option_set@@Base>:
   11cbc:	str	r1, [r0, #36]	; 0x24
   11cc0:	bx	lr

00011cc4 <mythread_quit@@Base>:
   11cc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cc8:	mov	r6, r1
   11ccc:	mov	r1, #2
   11cd0:	mov	r4, r0
   11cd4:	mov	r9, r2
   11cd8:	bl	10ae4 <mythread_option_set@plt>
   11cdc:	mov	r5, #0
   11ce0:	mov	r7, #40	; 0x28
   11ce4:	ldr	r3, [r4, #4]
   11ce8:	cmp	r5, r3
   11cec:	bcc	11cf8 <mythread_quit@@Base+0x34>
   11cf0:	mov	r0, #0
   11cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cf8:	cmp	r6, #0
   11cfc:	beq	11d14 <mythread_quit@@Base+0x50>
   11d00:	ldr	r1, [r4]
   11d04:	mov	r2, r9
   11d08:	mla	r1, r7, r5, r1
   11d0c:	mov	r0, r4
   11d10:	blx	r6
   11d14:	mul	r8, r7, r5
   11d18:	ldr	r3, [r4]
   11d1c:	mov	r0, r4
   11d20:	ldr	r1, [r3, r8]
   11d24:	bl	10568 <mythread_thread_join@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11d38 <mythread_quit@@Base+0x74>
   11d30:	mov	r0, #1
   11d34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d38:	ldr	r3, [r4]
   11d3c:	mov	r0, r4
   11d40:	ldr	r1, [r3, r8]
   11d44:	bl	109f4 <mythread_thread_destroy@plt>
   11d48:	cmp	r0, #0
   11d4c:	bne	11d30 <mythread_quit@@Base+0x6c>
   11d50:	add	r5, r5, #1
   11d54:	b	11ce4 <mythread_quit@@Base+0x20>

00011d58 <mythread_stop@@Base>:
   11d58:	push	{r4, r5, r6, r7, r8, lr}
   11d5c:	ldr	r4, [r0, #36]	; 0x24
   11d60:	ands	r4, r4, #4
   11d64:	bne	11db0 <mythread_stop@@Base+0x58>
   11d68:	mov	r1, #4
   11d6c:	mov	r5, r0
   11d70:	bl	10ae4 <mythread_option_set@plt>
   11d74:	mov	r7, #40	; 0x28
   11d78:	ldr	r3, [r5, #4]
   11d7c:	cmp	r4, r3
   11d80:	bcs	11db0 <mythread_stop@@Base+0x58>
   11d84:	mul	r6, r7, r4
   11d88:	b	11d94 <mythread_stop@@Base+0x3c>
   11d8c:	ldr	r0, [r5, #24]
   11d90:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11d94:	ldr	r3, [r5]
   11d98:	add	r3, r3, r6
   11d9c:	ldr	r3, [r3, #16]
   11da0:	tst	r3, #4
   11da4:	beq	11d8c <mythread_stop@@Base+0x34>
   11da8:	add	r4, r4, #1
   11dac:	b	11d78 <mythread_stop@@Base+0x20>
   11db0:	mov	r0, #0
   11db4:	pop	{r4, r5, r6, r7, r8, pc}

00011db8 <mythread_suspend@@Base>:
   11db8:	push	{r4, r5, r6, r7, r8, lr}
   11dbc:	ldr	r4, [r0, #36]	; 0x24
   11dc0:	ands	r4, r4, #1
   11dc4:	bne	11e1c <mythread_suspend@@Base+0x64>
   11dc8:	mov	r1, #1
   11dcc:	mov	r5, r0
   11dd0:	bl	10ae4 <mythread_option_set@plt>
   11dd4:	mov	r7, #40	; 0x28
   11dd8:	ldr	r3, [r5, #4]
   11ddc:	cmp	r4, r3
   11de0:	bcs	11e1c <mythread_suspend@@Base+0x64>
   11de4:	mul	r6, r7, r4
   11de8:	b	11df4 <mythread_suspend@@Base+0x3c>
   11dec:	ldr	r0, [r5, #24]
   11df0:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11df4:	ldr	r3, [r5]
   11df8:	add	r3, r3, r6
   11dfc:	ldr	r2, [r3, #16]
   11e00:	tst	r2, #4
   11e04:	bne	11e14 <mythread_suspend@@Base+0x5c>
   11e08:	ldr	r3, [r3, #16]
   11e0c:	tst	r3, #1
   11e10:	beq	11dec <mythread_suspend@@Base+0x34>
   11e14:	add	r4, r4, #1
   11e18:	b	11dd8 <mythread_suspend@@Base+0x20>
   11e1c:	mov	r0, #0
   11e20:	pop	{r4, r5, r6, r7, r8, pc}

00011e24 <mythread_resume@@Base>:
   11e24:	push	{r4, r5, r6, r7, r8, lr}
   11e28:	ldr	r4, [r0, #36]	; 0x24
   11e2c:	ands	r4, r4, #1
   11e30:	beq	11e40 <mythread_resume@@Base+0x1c>
   11e34:	bl	10ae4 <mythread_option_set@plt>
   11e38:	mov	r0, #0
   11e3c:	pop	{r4, r5, r6, r7, r8, pc}
   11e40:	mov	r5, r0
   11e44:	mov	r6, r1
   11e48:	bl	10ae4 <mythread_option_set@plt>
   11e4c:	mov	r7, #40	; 0x28
   11e50:	ldr	r3, [r5, #4]
   11e54:	cmp	r4, r3
   11e58:	bcs	11e38 <mythread_resume@@Base+0x14>
   11e5c:	ldr	r3, [r5]
   11e60:	mla	r3, r7, r4, r3
   11e64:	ldr	r2, [r3, #16]
   11e68:	tst	r2, #4
   11e6c:	bne	11e78 <mythread_resume@@Base+0x54>
   11e70:	add	r4, r4, #1
   11e74:	b	11e50 <mythread_resume@@Base+0x2c>
   11e78:	str	r6, [r3, #16]
   11e7c:	ldr	r1, [r3, #24]
   11e80:	mov	r0, r5
   11e84:	bl	10d0c <mythread_mutex_post@plt>
   11e88:	cmp	r0, #0
   11e8c:	beq	11e70 <mythread_resume@@Base+0x4c>
   11e90:	mov	r0, #1
   11e94:	pop	{r4, r5, r6, r7, r8, pc}

00011e98 <mythread_destroy@@Base>:
   11e98:	push	{r4, r5, r6, r7, r8, lr}
   11e9c:	subs	r4, r0, #0
   11ea0:	beq	11f04 <mythread_destroy@@Base+0x6c>
   11ea4:	mov	r5, r3
   11ea8:	ldr	r3, [r4]
   11eac:	cmp	r3, #0
   11eb0:	beq	11edc <mythread_destroy@@Base+0x44>
   11eb4:	mov	r6, r1
   11eb8:	mov	r7, r2
   11ebc:	mov	r1, #2
   11ec0:	bl	104c0 <mythread_resume@plt>
   11ec4:	mov	r2, r7
   11ec8:	mov	r1, r6
   11ecc:	mov	r0, r4
   11ed0:	bl	1058c <mythread_quit@plt>
   11ed4:	ldr	r0, [r4]
   11ed8:	bl	10dcc <mycore_free@plt>
   11edc:	ldr	r1, [r4, #20]
   11ee0:	mov	r0, r4
   11ee4:	bl	11084 <mythread_thread_attr_destroy@plt>
   11ee8:	ldr	r0, [r4, #24]
   11eec:	bl	10c04 <mythread_nanosleep_destroy@plt>
   11ef0:	cmp	r5, #0
   11ef4:	beq	11f04 <mythread_destroy@@Base+0x6c>
   11ef8:	mov	r0, r4
   11efc:	bl	10dcc <mycore_free@plt>
   11f00:	mov	r4, #0
   11f04:	mov	r0, r4
   11f08:	pop	{r4, r5, r6, r7, r8, pc}

00011f0c <mythread_entry_join@@Base>:
   11f0c:	subs	r3, r1, #0
   11f10:	push	{r4, lr}
   11f14:	mov	r4, r0
   11f18:	beq	11f28 <mythread_entry_join@@Base+0x1c>
   11f1c:	mov	r1, r0
   11f20:	ldr	r0, [r0, #32]
   11f24:	blx	r3
   11f28:	ldr	r1, [r4]
   11f2c:	ldr	r0, [r4, #32]
   11f30:	bl	10568 <mythread_thread_join@plt>
   11f34:	adds	r0, r0, #0
   11f38:	movne	r0, #1
   11f3c:	pop	{r4, pc}

00011f40 <mythread_entry_quit@@Base>:
   11f40:	subs	r3, r1, #0
   11f44:	push	{r4, lr}
   11f48:	mov	r4, r0
   11f4c:	beq	11f5c <mythread_entry_quit@@Base+0x1c>
   11f50:	mov	r1, r0
   11f54:	ldr	r0, [r0, #32]
   11f58:	blx	r3
   11f5c:	ldr	r1, [r4]
   11f60:	ldr	r0, [r4, #32]
   11f64:	bl	10568 <mythread_thread_join@plt>
   11f68:	cmp	r0, #0
   11f6c:	bne	11f88 <mythread_entry_quit@@Base+0x48>
   11f70:	ldr	r1, [r4]
   11f74:	ldr	r0, [r4, #32]
   11f78:	bl	109f4 <mythread_thread_destroy@plt>
   11f7c:	adds	r0, r0, #0
   11f80:	movne	r0, #1
   11f84:	pop	{r4, pc}
   11f88:	mov	r0, #1
   11f8c:	pop	{r4, pc}

00011f90 <mythread_entry_stop@@Base>:
   11f90:	ldr	r3, [r0, #16]
   11f94:	tst	r3, #4
   11f98:	bne	11fd0 <mythread_entry_stop@@Base+0x40>
   11f9c:	push	{r4, lr}
   11fa0:	mov	r4, r0
   11fa4:	mov	r3, #4
   11fa8:	str	r3, [r0, #16]
   11fac:	ldr	r3, [r4, #16]
   11fb0:	tst	r3, #4
   11fb4:	beq	11fc0 <mythread_entry_stop@@Base+0x30>
   11fb8:	mov	r0, #0
   11fbc:	pop	{r4, pc}
   11fc0:	ldr	r3, [r4, #32]
   11fc4:	ldr	r0, [r3, #24]
   11fc8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11fcc:	b	11fac <mythread_entry_stop@@Base+0x1c>
   11fd0:	mov	r0, #0
   11fd4:	bx	lr

00011fd8 <mythread_entry_suspend@@Base>:
   11fd8:	ldr	r3, [r0, #16]
   11fdc:	tst	r3, #1
   11fe0:	bne	12024 <mythread_entry_suspend@@Base+0x4c>
   11fe4:	push	{r4, lr}
   11fe8:	mov	r4, r0
   11fec:	mov	r3, #1
   11ff0:	str	r3, [r0, #16]
   11ff4:	ldr	r3, [r4, #16]
   11ff8:	tst	r3, #4
   11ffc:	bne	1200c <mythread_entry_suspend@@Base+0x34>
   12000:	ldr	r3, [r4, #16]
   12004:	tst	r3, #1
   12008:	beq	12014 <mythread_entry_suspend@@Base+0x3c>
   1200c:	mov	r0, #0
   12010:	pop	{r4, pc}
   12014:	ldr	r3, [r4, #32]
   12018:	ldr	r0, [r3, #24]
   1201c:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12020:	b	11ff4 <mythread_entry_suspend@@Base+0x1c>
   12024:	mov	r0, #0
   12028:	bx	lr

0001202c <mythread_entry_resume@@Base>:
   1202c:	ldr	r3, [r0, #16]
   12030:	tst	r3, #1
   12034:	beq	12044 <mythread_entry_resume@@Base+0x18>
   12038:	str	r1, [r0, #16]
   1203c:	mov	r0, #0
   12040:	bx	lr
   12044:	ldr	r3, [r0, #16]
   12048:	ands	r3, r3, #4
   1204c:	beq	12038 <mythread_entry_resume@@Base+0xc>
   12050:	push	{r4, lr}
   12054:	str	r1, [r0, #16]
   12058:	ldr	r1, [r0, #24]
   1205c:	ldr	r0, [r0, #32]
   12060:	bl	10d0c <mythread_mutex_post@plt>
   12064:	adds	r0, r0, #0
   12068:	movne	r0, #1
   1206c:	pop	{r4, pc}

00012070 <mythread_entry_status@@Base>:
   12070:	ldr	r0, [r0, #20]
   12074:	bx	lr

00012078 <mythread_entry_mythread@@Base>:
   12078:	ldr	r0, [r0, #32]
   1207c:	bx	lr

00012080 <mythread_callback_quit@@Base>:
   12080:	push	{r4, r5, r6, lr}
   12084:	mov	r5, r0
   12088:	mov	r4, r1
   1208c:	ldr	r3, [r4, #16]
   12090:	tst	r3, #2
   12094:	beq	1209c <mythread_callback_quit@@Base+0x1c>
   12098:	pop	{r4, r5, r6, pc}
   1209c:	ldr	r0, [r5, #24]
   120a0:	bl	100a0 <mythread_nanosleep_sleep@plt>
   120a4:	b	1208c <mythread_callback_quit@@Base+0xc>

000120a8 <mythread_queue_create@@Base>:
   120a8:	mov	r1, #28
   120ac:	mov	r0, #1
   120b0:	b	ff14 <mycore_calloc@plt>

000120b4 <mythread_queue_init@@Base>:
   120b4:	cmp	r1, #32
   120b8:	push	{r4, r5, r6, lr}
   120bc:	mov	r4, r0
   120c0:	movcc	r1, #32
   120c4:	mov	r0, #512	; 0x200
   120c8:	str	r1, [r4, #20]
   120cc:	str	r0, [r4, #8]
   120d0:	mov	r1, #4
   120d4:	bl	ff14 <mycore_calloc@plt>
   120d8:	cmp	r0, #0
   120dc:	str	r0, [r4]
   120e0:	beq	12120 <mythread_queue_init@@Base+0x6c>
   120e4:	ldr	r3, [r4, #20]
   120e8:	mov	r5, r0
   120ec:	mov	r0, #12
   120f0:	ldr	r6, [r4, #4]
   120f4:	mul	r0, r0, r3
   120f8:	bl	10c94 <mycore_malloc@plt>
   120fc:	str	r0, [r5, r6, lsl #2]
   12100:	ldm	r4, {r0, r3}
   12104:	ldr	r3, [r0, r3, lsl #2]
   12108:	cmp	r3, #0
   1210c:	bne	12128 <mythread_queue_init@@Base+0x74>
   12110:	bl	10dcc <mycore_free@plt>
   12114:	str	r0, [r4]
   12118:	mov	r0, #62	; 0x3e
   1211c:	pop	{r4, r5, r6, pc}
   12120:	mov	r0, #61	; 0x3d
   12124:	pop	{r4, r5, r6, pc}
   12128:	mov	r0, #0
   1212c:	pop	{r4, r5, r6, pc}

00012130 <mythread_queue_clean@@Base>:
   12130:	mov	r3, #0
   12134:	str	r3, [r0, #24]
   12138:	str	r3, [r0, #12]
   1213c:	str	r3, [r0, #4]
   12140:	str	r3, [r0, #16]
   12144:	bx	lr

00012148 <mythread_queue_destroy@@Base>:
   12148:	push	{r4, r5, r6, lr}
   1214c:	subs	r4, r0, #0
   12150:	beq	1216c <mythread_queue_destroy@@Base+0x24>
   12154:	ldr	r3, [r4]
   12158:	cmp	r3, #0
   1215c:	movne	r5, #0
   12160:	bne	12184 <mythread_queue_destroy@@Base+0x3c>
   12164:	mov	r0, r4
   12168:	bl	10dcc <mycore_free@plt>
   1216c:	mov	r0, #0
   12170:	pop	{r4, r5, r6, pc}
   12174:	ldr	r3, [r4]
   12178:	ldr	r0, [r3, r5, lsl #2]
   1217c:	bl	10dcc <mycore_free@plt>
   12180:	add	r5, r5, #1
   12184:	ldr	r3, [r4, #4]
   12188:	cmp	r5, r3
   1218c:	bls	12174 <mythread_queue_destroy@@Base+0x2c>
   12190:	ldr	r0, [r4]
   12194:	bl	10dcc <mycore_free@plt>
   12198:	b	12164 <mythread_queue_destroy@@Base+0x1c>

0001219c <mythread_queue_node_clean@@Base>:
   1219c:	mov	r3, #0
   121a0:	str	r3, [r0]
   121a4:	str	r3, [r0, #4]
   121a8:	str	r3, [r0, #8]
   121ac:	bx	lr

000121b0 <mythread_queue_get_prev_node@@Base>:
   121b0:	ldr	r0, [r0, #8]
   121b4:	bx	lr

000121b8 <mythread_queue_get_current_node@@Base>:
   121b8:	ldr	r1, [r0, #4]
   121bc:	ldr	r3, [r0]
   121c0:	ldr	r2, [r0, #12]
   121c4:	mov	r0, #12
   121c8:	ldr	r3, [r3, r1, lsl #2]
   121cc:	mla	r0, r0, r2, r3
   121d0:	bx	lr

000121d4 <mythread_queue_get_first_node@@Base>:
   121d4:	ldr	r3, [r0]
   121d8:	ldr	r0, [r3]
   121dc:	bx	lr

000121e0 <mythread_queue_count_used_node@@Base>:
   121e0:	ldr	r0, [r0, #16]
   121e4:	bx	lr

000121e8 <mythread_queue_list_create@@Base>:
   121e8:	mov	r1, #12
   121ec:	mov	r0, #1
   121f0:	b	ff14 <mycore_calloc@plt>

000121f4 <mythread_queue_list_destroy@@Base>:
   121f4:	cmp	r0, #0
   121f8:	bxeq	lr
   121fc:	b	10dcc <mycore_free@plt>

00012200 <mythread_queue_list_get_count@@Base>:
   12200:	ldr	r0, [r0, #8]
   12204:	bx	lr

00012208 <mythread_queue_list_wait_for_done@@Base>:
   12208:	cmp	r1, #0
   1220c:	bxeq	lr
   12210:	push	{r4, r5, r6, r7, r8, lr}
   12214:	mov	r6, r0
   12218:	ldr	r4, [r1]
   1221c:	cmp	r4, #0
   12220:	popeq	{r4, r5, r6, r7, r8, pc}
   12224:	mov	r5, #0
   12228:	b	12250 <mythread_queue_list_wait_for_done@@Base+0x48>
   1222c:	ldr	r0, [r6, #24]
   12230:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12234:	ldr	r3, [r4, #4]
   12238:	ldr	r2, [r3, r7]
   1223c:	ldr	r3, [r4]
   12240:	ldr	r3, [r3, #16]
   12244:	cmp	r2, r3
   12248:	bcc	1222c <mythread_queue_list_wait_for_done@@Base+0x24>
   1224c:	add	r5, r5, #1
   12250:	ldr	r3, [r6, #4]
   12254:	cmp	r5, r3
   12258:	lslcc	r7, r5, #2
   1225c:	bcc	12234 <mythread_queue_list_wait_for_done@@Base+0x2c>
   12260:	ldr	r4, [r4, #12]
   12264:	b	1221c <mythread_queue_list_wait_for_done@@Base+0x14>

00012268 <mythread_queue_node_malloc@@Base>:
   12268:	ldr	r3, [r1, #12]
   1226c:	push	{r4, r5, r6, r7, r8, lr}
   12270:	mov	r7, r2
   12274:	ldr	r2, [r1, #20]
   12278:	add	r3, r3, #1
   1227c:	cmp	r3, r2
   12280:	mov	r4, r1
   12284:	str	r3, [r1, #12]
   12288:	bcc	12358 <mythread_queue_node_malloc@@Base+0xf0>
   1228c:	ldr	r3, [r1, #4]
   12290:	ldr	r2, [r1, #8]
   12294:	add	r3, r3, #1
   12298:	cmp	r3, r2
   1229c:	str	r3, [r1, #4]
   122a0:	bcc	122f0 <mythread_queue_node_malloc@@Base+0x88>
   122a4:	cmp	r0, #0
   122a8:	beq	122b4 <mythread_queue_node_malloc@@Base+0x4c>
   122ac:	ldr	r1, [r0, #16]
   122b0:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   122b4:	ldr	r6, [r4, #8]
   122b8:	ldr	r0, [r4]
   122bc:	add	r6, r6, #512	; 0x200
   122c0:	lsl	r1, r6, #2
   122c4:	bl	fbd8 <mycore_realloc@plt>
   122c8:	subs	r5, r0, #0
   122cc:	beq	1233c <mythread_queue_node_malloc@@Base+0xd4>
   122d0:	ldr	r0, [r4, #4]
   122d4:	mov	r1, #0
   122d8:	sub	r2, r6, r0
   122dc:	add	r0, r5, r0, lsl #2
   122e0:	lsl	r2, r2, #2
   122e4:	bl	108b0 <memset@plt>
   122e8:	str	r5, [r4]
   122ec:	str	r6, [r4, #8]
   122f0:	ldm	r4, {r5, r6}
   122f4:	ldr	r3, [r5, r6, lsl #2]
   122f8:	cmp	r3, #0
   122fc:	bne	12350 <mythread_queue_node_malloc@@Base+0xe8>
   12300:	ldr	r3, [r4, #20]
   12304:	mov	r0, #12
   12308:	mul	r0, r0, r3
   1230c:	bl	10c94 <mycore_malloc@plt>
   12310:	ldr	r2, [r4, #4]
   12314:	ldr	r3, [r4]
   12318:	str	r0, [r5, r6, lsl #2]
   1231c:	ldr	r0, [r3, r2, lsl #2]
   12320:	cmp	r0, #0
   12324:	bne	12350 <mythread_queue_node_malloc@@Base+0xe8>
   12328:	cmp	r7, #0
   1232c:	beq	12348 <mythread_queue_node_malloc@@Base+0xe0>
   12330:	mov	r3, #62	; 0x3e
   12334:	str	r3, [r7]
   12338:	pop	{r4, r5, r6, r7, r8, pc}
   1233c:	cmp	r7, #0
   12340:	movne	r3, #61	; 0x3d
   12344:	strne	r3, [r7]
   12348:	mov	r0, #0
   1234c:	pop	{r4, r5, r6, r7, r8, pc}
   12350:	mov	r3, #0
   12354:	str	r3, [r4, #12]
   12358:	ldr	r3, [r4, #16]
   1235c:	ldr	r2, [r4, #4]
   12360:	add	r3, r3, #1
   12364:	str	r3, [r4, #16]
   12368:	ldr	r3, [r4]
   1236c:	ldr	r0, [r4, #12]
   12370:	ldr	r3, [r3, r2, lsl #2]
   12374:	mov	r2, #12
   12378:	mla	r0, r2, r0, r3
   1237c:	pop	{r4, r5, r6, r7, r8, pc}

00012380 <mythread_queue_node_malloc_limit@@Base>:
   12380:	push	{r4, r5, r6, r7, r8, lr}
   12384:	mov	r7, r3
   12388:	ldr	r3, [r1, #12]
   1238c:	mov	r4, r1
   12390:	add	r3, r3, #1
   12394:	str	r3, [r1, #12]
   12398:	ldr	r1, [r1, #16]
   1239c:	cmp	r1, r2
   123a0:	bcc	123fc <mythread_queue_node_malloc_limit@@Base+0x7c>
   123a4:	ldr	r3, [r4, #16]
   123a8:	cmp	r0, #0
   123ac:	add	r3, r3, #1
   123b0:	str	r3, [r4, #16]
   123b4:	beq	123c0 <mythread_queue_node_malloc_limit@@Base+0x40>
   123b8:	ldr	r1, [r0, #16]
   123bc:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   123c0:	mov	r3, #0
   123c4:	str	r3, [r4, #24]
   123c8:	str	r3, [r4, #12]
   123cc:	str	r3, [r4, #4]
   123d0:	str	r3, [r4, #16]
   123d4:	ldr	r3, [r4, #16]
   123d8:	ldr	r2, [r4, #4]
   123dc:	add	r3, r3, #1
   123e0:	str	r3, [r4, #16]
   123e4:	ldr	r3, [r4]
   123e8:	ldr	r0, [r4, #12]
   123ec:	ldr	r3, [r3, r2, lsl #2]
   123f0:	mov	r2, #12
   123f4:	mla	r0, r2, r0, r3
   123f8:	pop	{r4, r5, r6, r7, r8, pc}
   123fc:	ldr	r2, [r4, #20]
   12400:	cmp	r3, r2
   12404:	bcc	123d4 <mythread_queue_node_malloc_limit@@Base+0x54>
   12408:	ldr	r3, [r4, #4]
   1240c:	ldr	r2, [r4, #8]
   12410:	add	r3, r3, #1
   12414:	cmp	r3, r2
   12418:	str	r3, [r4, #4]
   1241c:	bcc	1246c <mythread_queue_node_malloc_limit@@Base+0xec>
   12420:	cmp	r0, #0
   12424:	beq	12430 <mythread_queue_node_malloc_limit@@Base+0xb0>
   12428:	ldr	r1, [r0, #16]
   1242c:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   12430:	ldr	r6, [r4, #8]
   12434:	ldr	r0, [r4]
   12438:	add	r6, r6, #512	; 0x200
   1243c:	lsl	r1, r6, #2
   12440:	bl	fbd8 <mycore_realloc@plt>
   12444:	subs	r5, r0, #0
   12448:	beq	124b8 <mythread_queue_node_malloc_limit@@Base+0x138>
   1244c:	ldr	r0, [r4, #4]
   12450:	mov	r1, #0
   12454:	sub	r2, r6, r0
   12458:	add	r0, r5, r0, lsl #2
   1245c:	lsl	r2, r2, #2
   12460:	bl	108b0 <memset@plt>
   12464:	str	r5, [r4]
   12468:	str	r6, [r4, #8]
   1246c:	ldm	r4, {r5, r6}
   12470:	ldr	r3, [r5, r6, lsl #2]
   12474:	cmp	r3, #0
   12478:	bne	124cc <mythread_queue_node_malloc_limit@@Base+0x14c>
   1247c:	ldr	r3, [r4, #20]
   12480:	mov	r0, #12
   12484:	mul	r0, r0, r3
   12488:	bl	10c94 <mycore_malloc@plt>
   1248c:	ldr	r2, [r4, #4]
   12490:	ldr	r3, [r4]
   12494:	str	r0, [r5, r6, lsl #2]
   12498:	ldr	r0, [r3, r2, lsl #2]
   1249c:	cmp	r0, #0
   124a0:	bne	124cc <mythread_queue_node_malloc_limit@@Base+0x14c>
   124a4:	cmp	r7, #0
   124a8:	beq	124c4 <mythread_queue_node_malloc_limit@@Base+0x144>
   124ac:	mov	r3, #62	; 0x3e
   124b0:	str	r3, [r7]
   124b4:	pop	{r4, r5, r6, r7, r8, pc}
   124b8:	cmp	r7, #0
   124bc:	movne	r3, #61	; 0x3d
   124c0:	strne	r3, [r7]
   124c4:	mov	r0, #0
   124c8:	pop	{r4, r5, r6, r7, r8, pc}
   124cc:	mov	r3, #0
   124d0:	str	r3, [r4, #12]
   124d4:	b	123d4 <mythread_queue_node_malloc_limit@@Base+0x54>

000124d8 <mythread_queue_list_see_for_done@@Base>:
   124d8:	cmp	r1, #0
   124dc:	ldrne	r3, [r1]
   124e0:	bne	12500 <mythread_queue_list_see_for_done@@Base+0x28>
   124e4:	mov	r0, #1
   124e8:	bx	lr
   124ec:	mov	r0, #0
   124f0:	pop	{pc}		; (ldr pc, [sp], #4)
   124f4:	mov	r0, #1
   124f8:	pop	{pc}		; (ldr pc, [sp], #4)
   124fc:	ldr	r3, [r3, #12]
   12500:	cmp	r3, #0
   12504:	beq	124e4 <mythread_queue_list_see_for_done@@Base+0xc>
   12508:	ldr	r1, [r0, #4]
   1250c:	mov	r2, #0
   12510:	cmp	r2, r1
   12514:	beq	124fc <mythread_queue_list_see_for_done@@Base+0x24>
   12518:	push	{lr}		; (str lr, [sp, #-4]!)
   1251c:	ldr	ip, [r3, #4]
   12520:	ldr	lr, [ip, r2, lsl #2]
   12524:	ldr	ip, [r3]
   12528:	ldr	ip, [ip, #16]
   1252c:	cmp	lr, ip
   12530:	bcc	124ec <mythread_queue_list_see_for_done@@Base+0x14>
   12534:	add	r2, r2, #1
   12538:	cmp	r2, r1
   1253c:	bne	1251c <mythread_queue_list_see_for_done@@Base+0x44>
   12540:	ldr	r3, [r3, #12]
   12544:	cmp	r3, #0
   12548:	beq	124f4 <mythread_queue_list_see_for_done@@Base+0x1c>
   1254c:	ldr	r1, [r0, #4]
   12550:	mov	r2, #0
   12554:	b	12538 <mythread_queue_list_see_for_done@@Base+0x60>

00012558 <mythread_queue_list_see_for_done_by_thread@@Base>:
   12558:	cmp	r1, #0
   1255c:	lslne	r2, r2, #2
   12560:	ldrne	r3, [r1]
   12564:	bne	1258c <mythread_queue_list_see_for_done_by_thread@@Base+0x34>
   12568:	mov	r0, #1
   1256c:	bx	lr
   12570:	ldr	r1, [r3, #4]
   12574:	ldr	r0, [r1, r2]
   12578:	ldr	r1, [r3]
   1257c:	ldr	r1, [r1, #16]
   12580:	cmp	r0, r1
   12584:	bcc	12598 <mythread_queue_list_see_for_done_by_thread@@Base+0x40>
   12588:	ldr	r3, [r3, #12]
   1258c:	cmp	r3, #0
   12590:	bne	12570 <mythread_queue_list_see_for_done_by_thread@@Base+0x18>
   12594:	b	12568 <mythread_queue_list_see_for_done_by_thread@@Base+0x10>
   12598:	mov	r0, #0
   1259c:	bx	lr

000125a0 <mythread_queue_list_entry_delete@@Base>:
   125a0:	push	{r4, r5, r6, r7, r8, lr}
   125a4:	mov	r7, r0
   125a8:	mov	r8, r1
   125ac:	mov	r5, r2
   125b0:	mov	r4, r3
   125b4:	mov	r6, #0
   125b8:	cmp	r6, r8
   125bc:	bne	12648 <mythread_queue_list_entry_delete@@Base+0xa8>
   125c0:	ldr	r3, [r4, #16]
   125c4:	ldr	r2, [r4, #12]
   125c8:	cmp	r3, #0
   125cc:	ldr	r1, [r5]
   125d0:	strne	r2, [r3, #12]
   125d4:	cmp	r2, #0
   125d8:	strne	r3, [r2, #16]
   125dc:	cmp	r4, r1
   125e0:	streq	r2, [r5]
   125e4:	ldr	r2, [r5, #4]
   125e8:	cmp	r4, r2
   125ec:	streq	r3, [r5, #4]
   125f0:	ldr	r3, [r5, #8]
   125f4:	sub	r3, r3, #1
   125f8:	str	r3, [r5, #8]
   125fc:	mov	r5, #0
   12600:	mov	r8, r5
   12604:	cmp	r6, r5
   12608:	bne	12660 <mythread_queue_list_entry_delete@@Base+0xc0>
   1260c:	ldrb	r3, [sp, #24]
   12610:	cmp	r3, #0
   12614:	beq	12628 <mythread_queue_list_entry_delete@@Base+0x88>
   12618:	ldr	r0, [r4]
   1261c:	cmp	r0, #0
   12620:	beq	12628 <mythread_queue_list_entry_delete@@Base+0x88>
   12624:	bl	102d4 <mythread_queue_destroy@plt>
   12628:	ldr	r0, [r4, #4]
   1262c:	cmp	r0, #0
   12630:	beq	12638 <mythread_queue_list_entry_delete@@Base+0x98>
   12634:	bl	10dcc <mycore_free@plt>
   12638:	mov	r0, r4
   1263c:	bl	10dcc <mycore_free@plt>
   12640:	mov	r0, #0
   12644:	pop	{r4, r5, r6, r7, r8, pc}
   12648:	ldr	r0, [r7, r6, lsl #2]
   1264c:	cmp	r0, #0
   12650:	beq	12658 <mythread_queue_list_entry_delete@@Base+0xb8>
   12654:	bl	100e8 <mythread_suspend@plt>
   12658:	add	r6, r6, #1
   1265c:	b	125b8 <mythread_queue_list_entry_delete@@Base+0x18>
   12660:	ldr	r0, [r7, r5, lsl #2]
   12664:	cmp	r0, #0
   12668:	beq	12674 <mythread_queue_list_entry_delete@@Base+0xd4>
   1266c:	mov	r1, r8
   12670:	bl	104c0 <mythread_resume@plt>
   12674:	add	r5, r5, #1
   12678:	b	12604 <mythread_queue_list_entry_delete@@Base+0x64>

0001267c <mythread_queue_list_entry_clean@@Base>:
   1267c:	cmp	r0, #0
   12680:	bxeq	lr
   12684:	ldr	r0, [r0]
   12688:	b	fd64 <mythread_queue_clean@plt>

0001268c <mythread_queue_list_entry_wait_for_done@@Base>:
   1268c:	push	{r4, r5, r6, r7, r8, lr}
   12690:	subs	r4, r1, #0
   12694:	movne	r6, r0
   12698:	movne	r5, #0
   1269c:	bne	126c8 <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   126a0:	pop	{r4, r5, r6, r7, r8, pc}
   126a4:	ldr	r0, [r6, #24]
   126a8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   126ac:	ldr	r3, [r4, #4]
   126b0:	ldr	r2, [r3, r7]
   126b4:	ldr	r3, [r4]
   126b8:	ldr	r3, [r3, #16]
   126bc:	cmp	r2, r3
   126c0:	bcc	126a4 <mythread_queue_list_entry_wait_for_done@@Base+0x18>
   126c4:	add	r5, r5, #1
   126c8:	ldr	r3, [r4, #8]
   126cc:	cmp	r5, r3
   126d0:	popcs	{r4, r5, r6, r7, r8, pc}
   126d4:	lsl	r7, r5, #2
   126d8:	b	126ac <mythread_queue_list_entry_wait_for_done@@Base+0x20>

000126dc <mythread_queue_node_malloc_round@@Base>:
   126dc:	push	{r4, r5, r6, lr}
   126e0:	ldr	r4, [r1]
   126e4:	ldr	r2, [r4, #12]
   126e8:	ldr	lr, [r4, #20]
   126ec:	add	r2, r2, #1
   126f0:	cmp	r2, lr
   126f4:	str	r2, [r4, #12]
   126f8:	ldrcc	r3, [r4, #16]
   126fc:	addcc	r3, r3, #1
   12700:	strcc	r3, [r4, #16]
   12704:	bcc	1272c <mythread_queue_node_malloc_round@@Base+0x50>
   12708:	ldr	r2, [r4, #16]
   1270c:	cmp	r0, #0
   12710:	add	r2, r2, #1
   12714:	mov	r5, r1
   12718:	str	r2, [r4, #16]
   1271c:	beq	12724 <mythread_queue_node_malloc_round@@Base+0x48>
   12720:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   12724:	mov	r0, r5
   12728:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   1272c:	ldr	r1, [r4, #4]
   12730:	ldr	r3, [r4]
   12734:	ldr	r2, [r4, #12]
   12738:	mov	r0, #12
   1273c:	ldr	r3, [r3, r1, lsl #2]
   12740:	mla	r0, r0, r2, r3
   12744:	pop	{r4, r5, r6, pc}

00012748 <mythread_queue_list_entry_see_for_done@@Base>:
   12748:	cmp	r0, #0
   1274c:	movne	r3, #0
   12750:	ldrne	r2, [r0, #8]
   12754:	bne	1277c <mythread_queue_list_entry_see_for_done@@Base+0x34>
   12758:	mov	r0, #1
   1275c:	bx	lr
   12760:	ldr	r1, [r0, #4]
   12764:	ldr	ip, [r1, r3, lsl #2]
   12768:	ldr	r1, [r0]
   1276c:	ldr	r1, [r1, #16]
   12770:	cmp	ip, r1
   12774:	bcc	12788 <mythread_queue_list_entry_see_for_done@@Base+0x40>
   12778:	add	r3, r3, #1
   1277c:	cmp	r3, r2
   12780:	bne	12760 <mythread_queue_list_entry_see_for_done@@Base+0x18>
   12784:	b	12758 <mythread_queue_list_entry_see_for_done@@Base+0x10>
   12788:	mov	r0, #0
   1278c:	bx	lr

00012790 <mythread_queue_list_entry_make_batch@@Base>:
   12790:	cmp	r1, #0
   12794:	movne	r3, #0
   12798:	ldrne	ip, [r0, #12]
   1279c:	ldrne	r0, [r0, #4]
   127a0:	bne	127a8 <mythread_queue_list_entry_make_batch@@Base+0x18>
   127a4:	bx	lr
   127a8:	add	r2, r3, ip
   127ac:	cmp	r2, r0
   127b0:	bls	127b8 <mythread_queue_list_entry_make_batch@@Base+0x28>
   127b4:	bx	lr
   127b8:	push	{lr}		; (str lr, [sp, #-4]!)
   127bc:	ldr	lr, [r1, #4]
   127c0:	str	r3, [lr, r2, lsl #2]
   127c4:	add	r3, r3, #1
   127c8:	add	r2, r3, ip
   127cc:	cmp	r2, r0
   127d0:	bls	127bc <mythread_queue_list_entry_make_batch@@Base+0x2c>
   127d4:	pop	{pc}		; (ldr pc, [sp], #4)

000127d8 <mythread_queue_list_entry_make_stream@@Base>:
   127d8:	cmp	r1, #0
   127dc:	bxeq	lr
   127e0:	ldr	r3, [r0, #12]
   127e4:	ldr	r0, [r0, #4]
   127e8:	mov	ip, #0
   127ec:	cmp	r3, r0
   127f0:	lsl	r2, r3, #2
   127f4:	bls	127fc <mythread_queue_list_entry_make_stream@@Base+0x24>
   127f8:	bx	lr
   127fc:	push	{lr}		; (str lr, [sp, #-4]!)
   12800:	add	r3, r3, #1
   12804:	ldr	lr, [r1, #4]
   12808:	cmp	r3, r0
   1280c:	str	ip, [lr, r2]
   12810:	add	r2, r2, #4
   12814:	bls	12800 <mythread_queue_list_entry_make_stream@@Base+0x28>
   12818:	pop	{pc}		; (ldr pc, [sp], #4)

0001281c <mythread_queue_list_entry_push@@Base>:
   1281c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12820:	mov	sl, r3
   12824:	ldr	r6, [sp, #36]	; 0x24
   12828:	mov	r8, r0
   1282c:	cmp	r6, #0
   12830:	movne	r3, #0
   12834:	strne	r3, [r6]
   12838:	mov	r9, r1
   1283c:	mov	r0, #1
   12840:	mov	r1, #20
   12844:	mov	r5, r2
   12848:	ldr	r7, [sp, #32]
   1284c:	bl	ff14 <mycore_calloc@plt>
   12850:	subs	r4, r0, #0
   12854:	bne	12870 <mythread_queue_list_entry_push@@Base+0x54>
   12858:	cmp	r6, #0
   1285c:	mov	r4, #0
   12860:	movne	r3, #60	; 0x3c
   12864:	strne	r3, [r6]
   12868:	mov	r0, r4
   1286c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12870:	cmp	r7, #0
   12874:	str	r7, [r4, #8]
   12878:	streq	r7, [r4, #4]
   1287c:	beq	128a4 <mythread_queue_list_entry_push@@Base+0x88>
   12880:	mov	r1, #4
   12884:	mov	r0, r7
   12888:	bl	ff14 <mycore_calloc@plt>
   1288c:	cmp	r0, #0
   12890:	str	r0, [r4, #4]
   12894:	bne	128a4 <mythread_queue_list_entry_push@@Base+0x88>
   12898:	mov	r0, r4
   1289c:	bl	10dcc <mycore_free@plt>
   128a0:	b	12858 <mythread_queue_list_entry_push@@Base+0x3c>
   128a4:	sub	r7, r8, #4
   128a8:	mov	r6, #0
   128ac:	str	sl, [r4]
   128b0:	cmp	r6, r9
   128b4:	bne	1290c <mythread_queue_list_entry_push@@Base+0xf0>
   128b8:	ldr	r3, [r5]
   128bc:	cmp	r3, #0
   128c0:	streq	r4, [r5]
   128c4:	ldrne	r3, [r5, #4]
   128c8:	strne	r4, [r3, #12]
   128cc:	strne	r3, [r4, #16]
   128d0:	ldr	r3, [r5, #8]
   128d4:	str	r4, [r5, #4]
   128d8:	add	r3, r3, #1
   128dc:	str	r3, [r5, #8]
   128e0:	mov	r5, #0
   128e4:	mov	r7, r5
   128e8:	cmp	r6, r5
   128ec:	beq	12868 <mythread_queue_list_entry_push@@Base+0x4c>
   128f0:	ldr	r0, [r8, r5, lsl #2]
   128f4:	cmp	r0, #0
   128f8:	beq	12904 <mythread_queue_list_entry_push@@Base+0xe8>
   128fc:	mov	r1, r7
   12900:	bl	104c0 <mythread_resume@plt>
   12904:	add	r5, r5, #1
   12908:	b	128e8 <mythread_queue_list_entry_push@@Base+0xcc>
   1290c:	ldr	r0, [r7, #4]!
   12910:	mov	r1, r4
   12914:	ldr	r3, [r0, #32]
   12918:	cmp	r3, #1
   1291c:	bne	1293c <mythread_queue_list_entry_push@@Base+0x120>
   12920:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   12924:	ldr	r0, [r7]
   12928:	cmp	r0, #0
   1292c:	beq	12934 <mythread_queue_list_entry_push@@Base+0x118>
   12930:	bl	100e8 <mythread_suspend@plt>
   12934:	add	r6, r6, #1
   12938:	b	128b0 <mythread_queue_list_entry_push@@Base+0x94>
   1293c:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   12940:	b	12924 <mythread_queue_list_entry_push@@Base+0x108>

00012944 <mythread_function_see_opt@@Base>:
   12944:	push	{r0, r1, r4, r5, r6, lr}
   12948:	ldr	r6, [r0, #28]
   1294c:	str	r1, [sp, #4]
   12950:	ldr	r1, [r6, #16]
   12954:	ldr	ip, [r1, #8]
   12958:	cmp	ip, r3
   1295c:	bne	129ec <mythread_function_see_opt@@Base+0xa8>
   12960:	ldr	r3, [sp, #4]
   12964:	mov	r4, r0
   12968:	tst	r3, #4
   1296c:	beq	129a8 <mythread_function_see_opt@@Base+0x64>
   12970:	mov	r0, r6
   12974:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12978:	cmp	r0, #0
   1297c:	beq	129e4 <mythread_function_see_opt@@Base+0xa0>
   12980:	mov	r3, #4
   12984:	str	r3, [r4, #12]
   12988:	ldr	r1, [r4, #20]
   1298c:	mov	r0, r6
   12990:	mov	r5, #0
   12994:	bl	10d9c <mythread_mutex_wait@plt>
   12998:	str	r5, [r4, #12]
   1299c:	mov	r0, r5
   129a0:	add	sp, sp, #8
   129a4:	pop	{r4, r5, r6, pc}
   129a8:	ldr	r3, [sp, #4]
   129ac:	tst	r3, #2
   129b0:	beq	129e4 <mythread_function_see_opt@@Base+0xa0>
   129b4:	mov	r0, r6
   129b8:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   129bc:	subs	r5, r0, #0
   129c0:	beq	129e4 <mythread_function_see_opt@@Base+0xa0>
   129c4:	ldr	r1, [r4, #20]
   129c8:	mov	r0, r6
   129cc:	bl	10634 <mythread_mutex_close@plt>
   129d0:	ldr	r0, [r4, #24]
   129d4:	bl	10c04 <mythread_nanosleep_destroy@plt>
   129d8:	mov	r3, #2
   129dc:	str	r3, [r4, #12]
   129e0:	b	1299c <mythread_function_see_opt@@Base+0x58>
   129e4:	ldr	r0, [sp, #24]
   129e8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   129ec:	mov	r5, #0
   129f0:	b	1299c <mythread_function_see_opt@@Base+0x58>

000129f4 <mythread_function_queue_batch@@Base>:
   129f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129f8:	sub	sp, sp, #28
   129fc:	ldr	r5, [r0, #28]
   12a00:	ldr	r1, [r0]
   12a04:	mov	r4, r0
   12a08:	ldr	r3, [r5, #16]
   12a0c:	mov	r0, r5
   12a10:	str	r3, [sp, #8]
   12a14:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12a18:	ldr	r1, [r4, #20]
   12a1c:	mov	fp, r0
   12a20:	mov	r0, r5
   12a24:	bl	10d9c <mythread_mutex_wait@plt>
   12a28:	lsl	r7, fp, #2
   12a2c:	ldr	r3, [r5, #36]	; 0x24
   12a30:	tst	r3, #1
   12a34:	movne	r3, #1
   12a38:	strne	r3, [r4, #12]
   12a3c:	bne	12a9c <mythread_function_queue_batch@@Base+0xa8>
   12a40:	ldr	r3, [sp, #8]
   12a44:	mov	r9, #0
   12a48:	ldr	r6, [r3]
   12a4c:	cmp	r6, #0
   12a50:	bne	12ab0 <mythread_function_queue_batch@@Base+0xbc>
   12a54:	ldr	r3, [sp, #8]
   12a58:	ldr	r3, [r3, #8]
   12a5c:	cmp	r9, r3
   12a60:	bne	12a2c <mythread_function_queue_batch@@Base+0x38>
   12a64:	ldr	r3, [r4, #24]
   12a68:	ldr	r1, [r5, #36]	; 0x24
   12a6c:	mov	r2, fp
   12a70:	str	r3, [sp]
   12a74:	mov	r0, r4
   12a78:	mov	r3, r9
   12a7c:	bl	fecc <mythread_function_see_opt@plt>
   12a80:	cmp	r0, #0
   12a84:	beq	12a2c <mythread_function_queue_batch@@Base+0x38>
   12a88:	mov	r0, r6
   12a8c:	add	sp, sp, #28
   12a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a94:	ldr	r0, [r4, #24]
   12a98:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12a9c:	ldr	r3, [r5, #36]	; 0x24
   12aa0:	ands	r3, r3, #1
   12aa4:	bne	12a94 <mythread_function_queue_batch@@Base+0xa0>
   12aa8:	str	r3, [r4, #12]
   12aac:	b	12a40 <mythread_function_queue_batch@@Base+0x4c>
   12ab0:	ldr	r8, [r6, #4]
   12ab4:	ldr	sl, [r6]
   12ab8:	ldr	r2, [r8, r7]
   12abc:	ldr	r3, [sl, #16]
   12ac0:	cmp	r2, r3
   12ac4:	addcs	r9, r9, #1
   12ac8:	bcs	12b2c <mythread_function_queue_batch@@Base+0x138>
   12acc:	ldr	r0, [r8, r7]
   12ad0:	ldr	r1, [sl, #20]
   12ad4:	ldr	r3, [r8, r7]
   12ad8:	ldr	r2, [sl, #20]
   12adc:	str	r3, [sp, #12]
   12ae0:	str	r2, [sp, #20]
   12ae4:	bl	2931c <mcsync_mutex_unlock@@Base+0x14>
   12ae8:	ldr	r2, [sp, #20]
   12aec:	ldr	sl, [sl]
   12af0:	mov	r1, r2
   12af4:	str	r0, [sp, #16]
   12af8:	ldr	r0, [sp, #12]
   12afc:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   12b00:	ldr	r3, [sp, #16]
   12b04:	mov	r0, #12
   12b08:	ldr	r2, [sl, r3, lsl #2]
   12b0c:	ldr	r3, [r4, #4]
   12b10:	mla	r1, r0, r1, r2
   12b14:	ldr	r0, [r4]
   12b18:	blx	r3
   12b1c:	ldr	r3, [r8, r7]
   12b20:	ldr	r2, [r5, #4]
   12b24:	add	r3, r3, r2
   12b28:	str	r3, [r8, r7]
   12b2c:	ldr	r6, [r6, #12]
   12b30:	b	12a4c <mythread_function_queue_batch@@Base+0x58>

00012b34 <mythread_function_queue_stream@@Base>:
   12b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b38:	sub	sp, sp, #28
   12b3c:	ldr	r6, [r0, #28]
   12b40:	ldr	r1, [r0]
   12b44:	mov	r4, r0
   12b48:	ldr	r3, [r6, #16]
   12b4c:	mov	r0, r6
   12b50:	str	r3, [sp, #8]
   12b54:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12b58:	ldr	r1, [r4, #20]
   12b5c:	mov	fp, r0
   12b60:	mov	r0, r6
   12b64:	bl	10d9c <mythread_mutex_wait@plt>
   12b68:	lsl	r7, fp, #2
   12b6c:	ldr	r3, [r6, #36]	; 0x24
   12b70:	tst	r3, #1
   12b74:	movne	r3, #1
   12b78:	strne	r3, [r4, #12]
   12b7c:	bne	12bdc <mythread_function_queue_stream@@Base+0xa8>
   12b80:	ldr	r3, [sp, #8]
   12b84:	mov	r9, #0
   12b88:	ldr	r5, [r3]
   12b8c:	cmp	r5, #0
   12b90:	bne	12bf0 <mythread_function_queue_stream@@Base+0xbc>
   12b94:	ldr	r3, [sp, #8]
   12b98:	ldr	r3, [r3, #8]
   12b9c:	cmp	r9, r3
   12ba0:	bne	12b6c <mythread_function_queue_stream@@Base+0x38>
   12ba4:	ldr	r3, [r4, #24]
   12ba8:	ldr	r1, [r6, #36]	; 0x24
   12bac:	mov	r2, fp
   12bb0:	str	r3, [sp]
   12bb4:	mov	r0, r4
   12bb8:	mov	r3, r9
   12bbc:	bl	fecc <mythread_function_see_opt@plt>
   12bc0:	cmp	r0, #0
   12bc4:	beq	12b6c <mythread_function_queue_stream@@Base+0x38>
   12bc8:	mov	r0, r5
   12bcc:	add	sp, sp, #28
   12bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bd4:	ldr	r0, [r4, #24]
   12bd8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12bdc:	ldr	r3, [r6, #36]	; 0x24
   12be0:	ands	r3, r3, #1
   12be4:	bne	12bd4 <mythread_function_queue_stream@@Base+0xa0>
   12be8:	str	r3, [r4, #12]
   12bec:	b	12b80 <mythread_function_queue_stream@@Base+0x4c>
   12bf0:	ldr	r8, [r5, #4]
   12bf4:	ldr	sl, [r5]
   12bf8:	ldr	r2, [r8, r7]
   12bfc:	ldr	r3, [sl, #16]
   12c00:	cmp	r2, r3
   12c04:	addcs	r9, r9, #1
   12c08:	bcs	12c68 <mythread_function_queue_stream@@Base+0x134>
   12c0c:	ldr	r0, [r8, r7]
   12c10:	ldr	r1, [sl, #20]
   12c14:	ldr	r3, [r8, r7]
   12c18:	ldr	r2, [sl, #20]
   12c1c:	str	r3, [sp, #12]
   12c20:	str	r2, [sp, #20]
   12c24:	bl	2931c <mcsync_mutex_unlock@@Base+0x14>
   12c28:	ldr	r2, [sp, #20]
   12c2c:	ldr	sl, [sl]
   12c30:	mov	r1, r2
   12c34:	str	r0, [sp, #16]
   12c38:	ldr	r0, [sp, #12]
   12c3c:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   12c40:	ldr	r3, [sp, #16]
   12c44:	mov	r0, #12
   12c48:	ldr	r2, [sl, r3, lsl #2]
   12c4c:	ldr	r3, [r4, #4]
   12c50:	mla	r1, r0, r1, r2
   12c54:	ldr	r0, [r4]
   12c58:	blx	r3
   12c5c:	ldr	r3, [r8, r7]
   12c60:	add	r3, r3, #1
   12c64:	str	r3, [r8, r7]
   12c68:	ldr	r5, [r5, #12]
   12c6c:	b	12b8c <mythread_function_queue_stream@@Base+0x58>

00012c70 <mythread_function@@Base>:
   12c70:	push	{r4, r5, r6, lr}
   12c74:	mov	r4, r0
   12c78:	ldr	r5, [r0, #28]
   12c7c:	ldr	r1, [r0, #20]
   12c80:	mov	r0, r5
   12c84:	bl	10d9c <mythread_mutex_wait@plt>
   12c88:	ldr	r3, [r4, #4]
   12c8c:	mov	r1, r4
   12c90:	ldr	r0, [r4]
   12c94:	blx	r3
   12c98:	ldr	r3, [r4, #12]
   12c9c:	orr	r3, r3, #8
   12ca0:	str	r3, [r4, #12]
   12ca4:	ldr	r3, [r4, #12]
   12ca8:	tst	r3, #1
   12cac:	bne	12cd4 <mythread_function@@Base+0x64>
   12cb0:	ldr	r3, [r4, #12]
   12cb4:	ldr	r1, [r4, #20]
   12cb8:	orr	r3, r3, #4
   12cbc:	str	r3, [r4, #12]
   12cc0:	mov	r0, r5
   12cc4:	bl	10d9c <mythread_mutex_wait@plt>
   12cc8:	b	12ce0 <mythread_function@@Base+0x70>
   12ccc:	ldr	r0, [r4, #24]
   12cd0:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12cd4:	ldr	r3, [r4, #12]
   12cd8:	tst	r3, #1
   12cdc:	bne	12ccc <mythread_function@@Base+0x5c>
   12ce0:	ldr	r3, [r5, #36]	; 0x24
   12ce4:	tst	r3, #2
   12ce8:	bne	12cfc <mythread_function@@Base+0x8c>
   12cec:	ldr	r3, [r4, #12]
   12cf0:	ands	r3, r3, #2
   12cf4:	streq	r3, [r4, #12]
   12cf8:	beq	12c88 <mythread_function@@Base+0x18>
   12cfc:	ldr	r1, [r4, #20]
   12d00:	mov	r0, r5
   12d04:	bl	10634 <mythread_mutex_close@plt>
   12d08:	ldr	r0, [r4, #24]
   12d0c:	bl	10c04 <mythread_nanosleep_destroy@plt>
   12d10:	mov	r3, #2
   12d14:	str	r3, [r4, #12]
   12d18:	mov	r0, #0
   12d1c:	pop	{r4, r5, r6, pc}

00012d20 <mycore_power@@Base>:
   12d20:	mov	r3, r0
   12d24:	mov	r0, #1
   12d28:	cmp	r1, #0
   12d2c:	bne	12d34 <mycore_power@@Base+0x14>
   12d30:	bx	lr
   12d34:	tst	r1, #1
   12d38:	lsr	r1, r1, #1
   12d3c:	mulne	r0, r3, r0
   12d40:	mul	r3, r3, r3
   12d44:	b	12d28 <mycore_power@@Base+0x8>

00012d48 <mycore_strncasecmp@@Base>:
   12d48:	cmp	r1, #0
   12d4c:	cmpne	r0, #0
   12d50:	moveq	r3, #1
   12d54:	movne	r3, #0
   12d58:	beq	12d74 <mycore_strncasecmp@@Base+0x2c>
   12d5c:	ldr	ip, [pc, #84]	; 12db8 <mycore_strncasecmp@@Base+0x70>
   12d60:	cmp	r3, r2
   12d64:	add	ip, pc, ip
   12d68:	bne	12d94 <mycore_strncasecmp@@Base+0x4c>
   12d6c:	mov	r0, #0
   12d70:	bx	lr
   12d74:	subs	r0, r0, r1
   12d78:	movne	r0, #1
   12d7c:	bx	lr
   12d80:	add	r3, r3, #1
   12d84:	cmp	r3, r2
   12d88:	bne	12d98 <mycore_strncasecmp@@Base+0x50>
   12d8c:	mov	r0, #0
   12d90:	pop	{r4, pc}
   12d94:	push	{r4, lr}
   12d98:	ldrb	r4, [r0, r3]
   12d9c:	ldrb	lr, [r1, r3]
   12da0:	ldrb	r4, [ip, r4]
   12da4:	ldrb	lr, [ip, lr]
   12da8:	cmp	r4, lr
   12dac:	beq	12d80 <mycore_strncasecmp@@Base+0x38>
   12db0:	sub	r0, r2, r3
   12db4:	pop	{r4, pc}
   12db8:	ldrdeq	r6, [r1], -r4

00012dbc <mycore_strcasecmp@@Base>:
   12dbc:	cmp	r1, #0
   12dc0:	cmpne	r0, #0
   12dc4:	moveq	r2, #1
   12dc8:	movne	r2, #0
   12dcc:	beq	12dfc <mycore_strcasecmp@@Base+0x40>
   12dd0:	ldr	ip, [pc, #68]	; 12e1c <mycore_strcasecmp@@Base+0x60>
   12dd4:	push	{r4, lr}
   12dd8:	add	ip, pc, ip
   12ddc:	ldrb	r3, [r0, r2]
   12de0:	ldrb	lr, [r1, r2]
   12de4:	ldrb	r4, [ip, r3]
   12de8:	ldrb	lr, [ip, lr]
   12dec:	cmp	r4, lr
   12df0:	beq	12e08 <mycore_strcasecmp@@Base+0x4c>
   12df4:	add	r0, r2, #1
   12df8:	pop	{r4, pc}
   12dfc:	subs	r0, r0, r1
   12e00:	movne	r0, #1
   12e04:	bx	lr
   12e08:	cmp	r3, #0
   12e0c:	addne	r2, r2, #1
   12e10:	bne	12ddc <mycore_strcasecmp@@Base+0x20>
   12e14:	mov	r0, r3
   12e18:	pop	{r4, pc}
   12e1c:	andeq	r6, r1, r0, ror #22

00012e20 <mycore_strncmp@@Base>:
   12e20:	cmp	r1, #0
   12e24:	cmpne	r0, #0
   12e28:	moveq	r3, #1
   12e2c:	movne	r3, #0
   12e30:	bne	12e54 <mycore_strncmp@@Base+0x34>
   12e34:	subs	r0, r0, r1
   12e38:	movne	r0, #1
   12e3c:	bx	lr
   12e40:	add	r3, r3, #1
   12e44:	cmp	r3, r2
   12e48:	bne	12e68 <mycore_strncmp@@Base+0x48>
   12e4c:	mov	r0, #0
   12e50:	pop	{pc}		; (ldr pc, [sp], #4)
   12e54:	cmp	r3, r2
   12e58:	bne	12e64 <mycore_strncmp@@Base+0x44>
   12e5c:	mov	r0, #0
   12e60:	bx	lr
   12e64:	push	{lr}		; (str lr, [sp, #-4]!)
   12e68:	ldrb	lr, [r0, r3]
   12e6c:	ldrb	ip, [r1, r3]
   12e70:	cmp	lr, ip
   12e74:	beq	12e40 <mycore_strncmp@@Base+0x20>
   12e78:	sub	r0, r2, r3
   12e7c:	pop	{pc}		; (ldr pc, [sp], #4)

00012e80 <mycore_strcmp@@Base>:
   12e80:	cmp	r1, #0
   12e84:	cmpne	r0, #0
   12e88:	moveq	r2, #1
   12e8c:	movne	r2, #0
   12e90:	bne	12eac <mycore_strcmp@@Base+0x2c>
   12e94:	subs	r0, r0, r1
   12e98:	movne	r0, #1
   12e9c:	bx	lr
   12ea0:	cmp	r3, #0
   12ea4:	beq	12ec4 <mycore_strcmp@@Base+0x44>
   12ea8:	add	r2, r2, #1
   12eac:	ldrb	ip, [r0, r2]
   12eb0:	ldrb	r3, [r1, r2]
   12eb4:	cmp	r3, ip
   12eb8:	beq	12ea0 <mycore_strcmp@@Base+0x20>
   12ebc:	add	r0, r2, #1
   12ec0:	bx	lr
   12ec4:	mov	r0, r3
   12ec8:	bx	lr

00012ecc <mycore_strcmp_ws@@Base>:
   12ecc:	cmp	r1, #0
   12ed0:	cmpne	r0, #0
   12ed4:	moveq	r3, #1
   12ed8:	movne	r3, #0
   12edc:	bne	12ef4 <mycore_strcmp_ws@@Base+0x28>
   12ee0:	subs	r0, r0, r1
   12ee4:	movne	r0, #1
   12ee8:	bx	lr
   12eec:	mov	r0, #0
   12ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ef4:	ldrb	r2, [r0, r3]
   12ef8:	ldrb	ip, [r1, r3]
   12efc:	cmp	ip, r2
   12f00:	beq	12f0c <mycore_strcmp_ws@@Base+0x40>
   12f04:	add	r0, r3, #1
   12f08:	bx	lr
   12f0c:	push	{lr}		; (str lr, [sp, #-4]!)
   12f10:	sub	r2, ip, #9
   12f14:	sub	lr, ip, #12
   12f18:	cmp	lr, #1
   12f1c:	cmphi	r2, #1
   12f20:	movls	r2, #1
   12f24:	movhi	r2, #0
   12f28:	tst	ip, #223	; 0xdf
   12f2c:	orreq	r2, r2, #1
   12f30:	cmp	r2, #0
   12f34:	bne	12eec <mycore_strcmp_ws@@Base+0x20>
   12f38:	add	r3, r3, #1
   12f3c:	ldrb	r2, [r0, r3]
   12f40:	ldrb	ip, [r1, r3]
   12f44:	cmp	ip, r2
   12f48:	beq	12f10 <mycore_strcmp_ws@@Base+0x44>
   12f4c:	add	r0, r3, #1
   12f50:	pop	{pc}		; (ldr pc, [sp], #4)

00012f54 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   12f54:	sub	r0, r0, #1
   12f58:	ldr	r2, [pc, #76]	; 12fac <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x58>
   12f5c:	ldrb	r3, [r0, #1]!
   12f60:	sub	r1, r1, #1
   12f64:	add	r2, pc, r2
   12f68:	cmp	r3, #0
   12f6c:	bne	12f80 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x2c>
   12f70:	mov	r0, #1
   12f74:	bx	lr
   12f78:	mov	r0, #0
   12f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f80:	push	{lr}		; (str lr, [sp, #-4]!)
   12f84:	ldrb	lr, [r1, #1]!
   12f88:	ldrb	ip, [r2, r3]
   12f8c:	ldrb	r3, [r2, lr]
   12f90:	cmp	ip, r3
   12f94:	bne	12f78 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x24>
   12f98:	ldrb	r3, [r0, #1]!
   12f9c:	cmp	r3, #0
   12fa0:	bne	12f84 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x30>
   12fa4:	mov	r0, #1
   12fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   12fac:	ldrdeq	r6, [r1], -r4

00012fb0 <mycore_utils_avl_tree_create@@Base>:
   12fb0:	mov	r1, #4
   12fb4:	mov	r0, #1
   12fb8:	b	ff14 <mycore_calloc@plt>

00012fbc <mycore_utils_avl_tree_init@@Base>:
   12fbc:	push	{r4, lr}
   12fc0:	mov	r4, r0
   12fc4:	bl	1001c <mcobject_create@plt>
   12fc8:	cmp	r0, #0
   12fcc:	str	r0, [r4]
   12fd0:	beq	12fec <mycore_utils_avl_tree_init@@Base+0x30>
   12fd4:	mov	r2, #24
   12fd8:	mov	r1, #256	; 0x100
   12fdc:	bl	10778 <mcobject_init@plt>
   12fe0:	adds	r0, r0, #0
   12fe4:	movne	r0, #1
   12fe8:	pop	{r4, pc}
   12fec:	mov	r0, #2
   12ff0:	pop	{r4, pc}

00012ff4 <mycore_utils_avl_tree_clean@@Base>:
   12ff4:	ldr	r0, [r0]
   12ff8:	b	10f70 <mcobject_clean@plt>

00012ffc <mycore_utils_avl_tree_destroy@@Base>:
   12ffc:	push	{r4, r5, r6, lr}
   13000:	subs	r4, r0, #0
   13004:	beq	1302c <mycore_utils_avl_tree_destroy@@Base+0x30>
   13008:	mov	r5, r1
   1300c:	ldr	r0, [r4]
   13010:	mov	r1, #1
   13014:	bl	fdd0 <mcobject_destroy@plt>
   13018:	cmp	r5, #0
   1301c:	beq	1302c <mycore_utils_avl_tree_destroy@@Base+0x30>
   13020:	mov	r0, r4
   13024:	bl	10dcc <mycore_free@plt>
   13028:	mov	r4, #0
   1302c:	mov	r0, r4
   13030:	pop	{r4, r5, r6, pc}

00013034 <mycore_utils_avl_tree_node_create_root@@Base>:
   13034:	push	{r4, r5, r6, lr}
   13038:	mov	r6, r1
   1303c:	ldr	r0, [r0]
   13040:	mov	r1, #0
   13044:	mov	r5, r2
   13048:	bl	10a60 <mcobject_malloc@plt>
   1304c:	mov	r2, #24
   13050:	mov	r1, #0
   13054:	mov	r4, r0
   13058:	bl	108b0 <memset@plt>
   1305c:	stm	r4, {r5, r6}
   13060:	mov	r0, r4
   13064:	pop	{r4, r5, r6, pc}

00013068 <mycore_utils_avl_tree_node_clean@@Base>:
   13068:	mov	r2, #24
   1306c:	mov	r1, #0
   13070:	b	108b0 <memset@plt>

00013074 <mycore_utils_avl_tree_node_height@@Base>:
   13074:	cmp	r0, #0
   13078:	ldrshne	r0, [r0, #20]
   1307c:	bx	lr

00013080 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   13080:	push	{r4, r5, r6, lr}
   13084:	mov	r5, r0
   13088:	ldr	r0, [r0, #12]
   1308c:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13090:	mov	r4, r0
   13094:	ldr	r0, [r5, #8]
   13098:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   1309c:	sub	r0, r4, r0
   130a0:	sxth	r0, r0
   130a4:	pop	{r4, r5, r6, pc}

000130a8 <mycore_utils_avl_tree_node_set_height@@Base>:
   130a8:	push	{r4, r5, r6, lr}
   130ac:	mov	r5, r0
   130b0:	ldr	r0, [r0, #8]
   130b4:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   130b8:	mov	r4, r0
   130bc:	ldr	r0, [r5, #12]
   130c0:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   130c4:	cmp	r4, r0
   130c8:	movge	r0, r4
   130cc:	add	r0, r0, #1
   130d0:	strh	r0, [r5, #20]
   130d4:	pop	{r4, r5, r6, pc}

000130d8 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   130d8:	push	{r4, lr}
   130dc:	ldr	r4, [r0, #8]
   130e0:	ldr	r3, [r0, #16]
   130e4:	str	r3, [r4, #16]
   130e8:	ldr	r3, [r4, #12]
   130ec:	cmp	r3, #0
   130f0:	strne	r0, [r3, #16]
   130f4:	str	r3, [r0, #8]
   130f8:	str	r4, [r0, #16]
   130fc:	str	r0, [r4, #12]
   13100:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13104:	mov	r0, r4
   13108:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   1310c:	mov	r0, r4
   13110:	pop	{r4, pc}

00013114 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   13114:	push	{r4, lr}
   13118:	ldr	r4, [r0, #12]
   1311c:	ldr	r3, [r0, #16]
   13120:	str	r3, [r4, #16]
   13124:	ldr	r3, [r4, #8]
   13128:	cmp	r3, #0
   1312c:	strne	r0, [r3, #16]
   13130:	str	r3, [r0, #12]
   13134:	str	r4, [r0, #16]
   13138:	str	r0, [r4, #8]
   1313c:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13140:	mov	r0, r4
   13144:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13148:	mov	r0, r4
   1314c:	pop	{r4, pc}

00013150 <mycore_utils_avl_tree_node_balance@@Base>:
   13150:	push	{r4, r5, r6, lr}
   13154:	mov	r4, r0
   13158:	ldr	r0, [r0, #8]
   1315c:	mov	r6, r1
   13160:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13164:	mov	r5, r0
   13168:	ldr	r0, [r4, #12]
   1316c:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13170:	cmp	r5, r0
   13174:	movlt	r3, r0
   13178:	movge	r3, r5
   1317c:	sub	r0, r0, r5
   13180:	add	r3, r3, #1
   13184:	cmn	r0, #2
   13188:	strh	r3, [r4, #20]
   1318c:	beq	131f4 <mycore_utils_avl_tree_node_balance@@Base+0xa4>
   13190:	cmp	r0, #2
   13194:	bne	13248 <mycore_utils_avl_tree_node_balance@@Base+0xf8>
   13198:	ldr	r0, [r4, #12]
   1319c:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   131a0:	cmp	r0, #0
   131a4:	bge	131b4 <mycore_utils_avl_tree_node_balance@@Base+0x64>
   131a8:	ldr	r0, [r4, #12]
   131ac:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   131b0:	str	r0, [r4, #12]
   131b4:	ldr	r5, [r4, #16]
   131b8:	cmp	r5, #0
   131bc:	beq	131e8 <mycore_utils_avl_tree_node_balance@@Base+0x98>
   131c0:	ldr	r3, [r5, #12]
   131c4:	mov	r0, r4
   131c8:	cmp	r4, r3
   131cc:	bne	131dc <mycore_utils_avl_tree_node_balance@@Base+0x8c>
   131d0:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   131d4:	str	r0, [r5, #12]
   131d8:	pop	{r4, r5, r6, pc}
   131dc:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   131e0:	str	r0, [r5, #8]
   131e4:	pop	{r4, r5, r6, pc}
   131e8:	mov	r0, r4
   131ec:	pop	{r4, r5, r6, lr}
   131f0:	b	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   131f4:	ldr	r0, [r4, #8]
   131f8:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   131fc:	cmp	r0, #0
   13200:	ble	13210 <mycore_utils_avl_tree_node_balance@@Base+0xc0>
   13204:	ldr	r0, [r4, #8]
   13208:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   1320c:	str	r0, [r4, #8]
   13210:	ldr	r5, [r4, #16]
   13214:	cmp	r5, #0
   13218:	beq	1323c <mycore_utils_avl_tree_node_balance@@Base+0xec>
   1321c:	ldr	r3, [r5, #12]
   13220:	mov	r0, r4
   13224:	cmp	r4, r3
   13228:	bne	13234 <mycore_utils_avl_tree_node_balance@@Base+0xe4>
   1322c:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   13230:	b	131d4 <mycore_utils_avl_tree_node_balance@@Base+0x84>
   13234:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   13238:	b	131e0 <mycore_utils_avl_tree_node_balance@@Base+0x90>
   1323c:	mov	r0, r4
   13240:	pop	{r4, r5, r6, lr}
   13244:	b	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   13248:	ldr	r3, [r4, #16]
   1324c:	cmp	r3, #0
   13250:	streq	r4, [r6]
   13254:	ldr	r0, [r4, #16]
   13258:	pop	{r4, r5, r6, pc}

0001325c <mycore_utils_avl_tree_add@@Base>:
   1325c:	push	{r4, r5, r6, r7, r8, lr}
   13260:	mov	r8, r1
   13264:	ldr	r5, [r1]
   13268:	mov	r7, r2
   1326c:	cmp	r5, #0
   13270:	mov	r6, r3
   13274:	bne	1328c <mycore_utils_avl_tree_add@@Base+0x30>
   13278:	mov	r2, r3
   1327c:	mov	r1, r7
   13280:	bl	10ed4 <mycore_utils_avl_tree_node_create_root@plt>
   13284:	str	r0, [r8]
   13288:	pop	{r4, r5, r6, r7, r8, pc}
   1328c:	mov	r1, #0
   13290:	ldr	r0, [r0]
   13294:	bl	10a60 <mcobject_malloc@plt>
   13298:	mov	r4, r0
   1329c:	bl	10fc4 <mycore_utils_avl_tree_node_clean@plt>
   132a0:	ldr	r3, [r5, #4]
   132a4:	cmp	r7, r3
   132a8:	bne	132bc <mycore_utils_avl_tree_add@@Base+0x60>
   132ac:	str	r6, [r5]
   132b0:	pop	{r4, r5, r6, r7, r8, pc}
   132b4:	mov	r5, r3
   132b8:	b	132a0 <mycore_utils_avl_tree_add@@Base+0x44>
   132bc:	bcs	132f0 <mycore_utils_avl_tree_add@@Base+0x94>
   132c0:	ldr	r3, [r5, #8]
   132c4:	cmp	r3, #0
   132c8:	bne	132b4 <mycore_utils_avl_tree_add@@Base+0x58>
   132cc:	str	r4, [r5, #8]
   132d0:	str	r5, [r4, #16]
   132d4:	stm	r4, {r6, r7}
   132d8:	mov	r0, r4
   132dc:	mov	r1, r8
   132e0:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   132e4:	subs	r4, r0, #0
   132e8:	bne	132d8 <mycore_utils_avl_tree_add@@Base+0x7c>
   132ec:	pop	{r4, r5, r6, r7, r8, pc}
   132f0:	ldr	r3, [r5, #12]
   132f4:	cmp	r3, #0
   132f8:	bne	132b4 <mycore_utils_avl_tree_add@@Base+0x58>
   132fc:	str	r4, [r5, #12]
   13300:	b	132d0 <mycore_utils_avl_tree_add@@Base+0x74>

00013304 <mycore_utils_avl_tree_find_min@@Base>:
   13304:	cmp	r0, #0
   13308:	bne	13314 <mycore_utils_avl_tree_find_min@@Base+0x10>
   1330c:	bx	lr
   13310:	mov	r0, r3
   13314:	ldr	r3, [r0, #12]
   13318:	cmp	r3, #0
   1331c:	bne	13310 <mycore_utils_avl_tree_find_min@@Base+0xc>
   13320:	bx	lr

00013324 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   13324:	cmp	r1, #0
   13328:	push	{r4, lr}
   1332c:	mov	r3, r0
   13330:	mov	r4, r2
   13334:	ldr	ip, [r0, #16]
   13338:	beq	133d4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xb0>
   1333c:	ldr	r2, [r0, #8]
   13340:	cmp	r1, r2
   13344:	bne	13398 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x74>
   13348:	ldr	r2, [r3, #12]
   1334c:	ldr	r0, [r1, #8]
   13350:	str	r2, [r1, #12]
   13354:	ldr	r2, [r3, #12]
   13358:	cmp	r0, #0
   1335c:	moveq	r0, r1
   13360:	cmp	r2, #0
   13364:	str	ip, [r1, #16]
   13368:	strne	r1, [r2, #16]
   1336c:	ldr	ip, [r3, #16]
   13370:	cmp	ip, #0
   13374:	streq	r1, [r4]
   13378:	beq	1338c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   1337c:	ldr	r2, [ip, #8]
   13380:	cmp	r3, r2
   13384:	streq	r1, [ip, #8]
   13388:	strne	r1, [ip, #12]
   1338c:	cmp	r0, #0
   13390:	bne	133fc <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   13394:	pop	{r4, pc}
   13398:	ldr	r0, [r1, #16]
   1339c:	mov	lr, #0
   133a0:	str	lr, [r0, #12]
   133a4:	ldr	r0, [r3, #12]
   133a8:	str	r2, [r1, #8]
   133ac:	ldr	r2, [r3, #8]
   133b0:	str	r0, [r1, #12]
   133b4:	cmp	r2, lr
   133b8:	str	ip, [r1, #16]
   133bc:	strne	r1, [r2, #16]
   133c0:	ldr	r2, [r3, #12]
   133c4:	mov	r0, r1
   133c8:	cmp	r2, #0
   133cc:	strne	r1, [r2, #16]
   133d0:	b	1336c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x48>
   133d4:	subs	r0, ip, #0
   133d8:	ldr	r2, [r3, #12]
   133dc:	beq	133f4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd0>
   133e0:	ldr	r1, [r0, #8]
   133e4:	cmp	r3, r1
   133e8:	streq	r2, [r0, #8]
   133ec:	strne	r2, [r0, #12]
   133f0:	b	1338c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   133f4:	str	r2, [r4]
   133f8:	pop	{r4, pc}
   133fc:	mov	r1, r4
   13400:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   13404:	b	1338c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>

00013408 <mycore_utils_avl_tree_delete@@Base>:
   13408:	push	{r4, r5, r6, lr}
   1340c:	ldr	r4, [r1]
   13410:	cmp	r4, #0
   13414:	moveq	r5, r4
   13418:	beq	13458 <mycore_utils_avl_tree_delete@@Base+0x50>
   1341c:	ldr	r3, [r4, #4]
   13420:	cmp	r3, r2
   13424:	bne	13460 <mycore_utils_avl_tree_delete@@Base+0x58>
   13428:	mov	r6, r0
   1342c:	ldr	r0, [r4, #8]
   13430:	mov	r5, r1
   13434:	bl	fd10 <mycore_utils_avl_tree_find_min@plt>
   13438:	mov	r2, r5
   1343c:	mov	r1, r0
   13440:	mov	r0, r4
   13444:	bl	10478 <mycore_utils_avl_tree_rotate_for_delete@plt>
   13448:	mov	r1, r4
   1344c:	ldr	r0, [r6]
   13450:	ldr	r5, [r4]
   13454:	bl	ff80 <mcobject_free@plt>
   13458:	mov	r0, r5
   1345c:	pop	{r4, r5, r6, pc}
   13460:	ldr	r3, [r4, #8]
   13464:	ldr	r4, [r4, #12]
   13468:	movhi	r4, r3
   1346c:	b	13410 <mycore_utils_avl_tree_delete@@Base+0x8>

00013470 <mycore_utils_avl_tree_search_by_type@@Base>:
   13470:	cmp	r1, #0
   13474:	bne	13480 <mycore_utils_avl_tree_search_by_type@@Base+0x10>
   13478:	mov	r0, r1
   1347c:	bx	lr
   13480:	ldr	r3, [r1, #4]
   13484:	cmp	r3, r2
   13488:	beq	13478 <mycore_utils_avl_tree_search_by_type@@Base+0x8>
   1348c:	ldr	r3, [r1, #8]
   13490:	ldr	r1, [r1, #12]
   13494:	movhi	r1, r3
   13498:	b	13470 <mycore_utils_avl_tree_search_by_type@@Base>

0001349c <mycore_utils_avl_tree_list_all_nodes@@Base>:
   1349c:	push	{r4, r5, r6, r7, r8, lr}
   134a0:	mov	r7, r0
   134a4:	mov	r4, r1
   134a8:	mov	r5, r2
   134ac:	mov	r6, r3
   134b0:	cmp	r4, #0
   134b4:	popeq	{r4, r5, r6, r7, r8, pc}
   134b8:	mov	r0, r4
   134bc:	mov	r1, r6
   134c0:	blx	r5
   134c4:	ldr	r1, [r4, #8]
   134c8:	mov	r3, r6
   134cc:	mov	r2, r5
   134d0:	mov	r0, r7
   134d4:	bl	10274 <mycore_utils_avl_tree_list_all_nodes@plt>
   134d8:	ldr	r4, [r4, #12]
   134dc:	b	134b0 <mycore_utils_avl_tree_list_all_nodes@@Base+0x14>

000134e0 <mchar_async_create@@Base>:
   134e0:	mov	r1, #84	; 0x54
   134e4:	mov	r0, #1
   134e8:	b	ff14 <mycore_calloc@plt>

000134ec <mchar_async_mem_malloc@@Base>:
   134ec:	push	{r4, r5, r6, lr}
   134f0:	subs	r4, r2, #0
   134f4:	popeq	{r4, r5, r6, pc}
   134f8:	mov	r6, r0
   134fc:	ldr	r0, [r4]
   13500:	mov	r5, r3
   13504:	cmp	r0, #0
   13508:	beq	1353c <mchar_async_mem_malloc@@Base+0x50>
   1350c:	ldr	r3, [r4, #8]
   13510:	cmp	r3, r5
   13514:	bcs	13530 <mchar_async_mem_malloc@@Base+0x44>
   13518:	bl	10dcc <mycore_free@plt>
   1351c:	ldr	r0, [r6]
   13520:	add	r0, r5, r0
   13524:	str	r0, [r4, #8]
   13528:	bl	10c94 <mycore_malloc@plt>
   1352c:	str	r0, [r4]
   13530:	mov	r3, #0
   13534:	str	r3, [r4, #4]
   13538:	pop	{r4, r5, r6, pc}
   1353c:	ldr	r0, [r6]
   13540:	cmp	r0, r3
   13544:	movcc	r0, r3
   13548:	b	13524 <mchar_async_mem_malloc@@Base+0x38>

0001354c <mchar_sync_chunk_find_by_size@@Base>:
   1354c:	ldr	r3, [r0]
   13550:	ldr	r0, [r3, #12]
   13554:	cmp	r0, #0
   13558:	bne	13560 <mchar_sync_chunk_find_by_size@@Base+0x14>
   1355c:	bx	lr
   13560:	ldr	r3, [r0, #8]
   13564:	cmp	r3, r1
   13568:	bxcs	lr
   1356c:	ldr	r0, [r0, #12]
   13570:	b	13554 <mchar_sync_chunk_find_by_size@@Base+0x8>

00013574 <mchar_sync_chunk_insert_after@@Base>:
   13574:	ldr	r3, [r0, #12]
   13578:	cmp	r3, r1
   1357c:	bxeq	lr
   13580:	ldr	r3, [r1, #16]
   13584:	cmp	r3, #0
   13588:	ldrne	r2, [r1, #12]
   1358c:	strne	r2, [r3, #12]
   13590:	ldr	r2, [r1, #12]
   13594:	cmp	r2, #0
   13598:	strne	r3, [r2, #16]
   1359c:	ldr	r3, [r0, #12]
   135a0:	cmp	r3, #0
   135a4:	strne	r1, [r3, #16]
   135a8:	str	r3, [r1, #12]
   135ac:	str	r0, [r1, #16]
   135b0:	str	r1, [r0, #12]
   135b4:	bx	lr

000135b8 <mchar_async_crop_first_chars_without_cache@@Base>:
   135b8:	cmp	r0, #0
   135bc:	ldrne	r3, [r0, #-4]
   135c0:	addne	r0, r0, r1
   135c4:	subne	r1, r3, r1
   135c8:	strne	r1, [r0, #-4]
   135cc:	bx	lr

000135d0 <mchar_async_get_size_by_data@@Base>:
   135d0:	cmp	r0, #0
   135d4:	ldrne	r0, [r0, #-4]
   135d8:	bx	lr

000135dc <mchar_async_cache_init@@Base>:
   135dc:	mov	r2, #1024	; 0x400
   135e0:	mov	r3, #1
   135e4:	push	{r4, r5, r6, lr}
   135e8:	mov	r4, #0
   135ec:	mov	r5, r0
   135f0:	str	r4, [r0, #16]
   135f4:	str	r4, [r0, #12]
   135f8:	stmib	r0, {r2, r3}
   135fc:	mov	r0, #20480	; 0x5000
   13600:	bl	10c94 <mycore_malloc@plt>
   13604:	cmp	r0, r4
   13608:	str	r0, [r5]
   1360c:	beq	1364c <mchar_async_cache_init@@Base+0x70>
   13610:	str	r4, [r0, #8]
   13614:	str	r4, [r0, #12]
   13618:	str	r4, [r0, #4]
   1361c:	str	r4, [r0]
   13620:	ldr	r0, [r5, #4]
   13624:	str	r4, [r5, #24]
   13628:	str	r0, [r5, #28]
   1362c:	lsl	r0, r0, #2
   13630:	bl	10c94 <mycore_malloc@plt>
   13634:	cmp	r0, r4
   13638:	str	r0, [r5, #20]
   1363c:	bne	13654 <mchar_async_cache_init@@Base+0x78>
   13640:	ldr	r0, [r5]
   13644:	bl	10dcc <mycore_free@plt>
   13648:	str	r0, [r5]
   1364c:	mov	r0, #2
   13650:	pop	{r4, r5, r6, pc}
   13654:	mov	r0, r4
   13658:	pop	{r4, r5, r6, pc}

0001365c <mchar_async_cache_clean@@Base>:
   1365c:	mov	r2, #1
   13660:	str	r2, [r0, #8]
   13664:	ldr	r2, [r0]
   13668:	mov	r3, #0
   1366c:	cmp	r2, r3
   13670:	str	r3, [r0, #16]
   13674:	str	r3, [r0, #12]
   13678:	str	r3, [r0, #24]
   1367c:	strne	r3, [r2, #8]
   13680:	strne	r3, [r2, #12]
   13684:	strne	r3, [r2, #4]
   13688:	strne	r3, [r2]
   1368c:	bx	lr

00013690 <mchar_async_node_clean@@Base>:
   13690:	ldr	r3, [r0, #60]	; 0x3c
   13694:	cmp	r3, r1
   13698:	bxls	lr
   1369c:	ldr	r0, [r0, #56]	; 0x38
   136a0:	mov	r3, #36	; 0x24
   136a4:	mla	r0, r3, r1, r0
   136a8:	ldr	r2, [r0]
   136ac:	ldr	r3, [r2, #16]
   136b0:	cmp	r3, #0
   136b4:	bne	136c4 <mchar_async_node_clean@@Base+0x34>
   136b8:	str	r3, [r2, #4]
   136bc:	add	r0, r0, #4
   136c0:	b	10724 <mchar_async_cache_clean@plt>
   136c4:	str	r3, [r0]
   136c8:	b	136a8 <mchar_async_node_clean@@Base+0x18>

000136cc <mchar_async_cache_destroy@@Base>:
   136cc:	push	{r4, r5, r6, lr}
   136d0:	subs	r4, r0, #0
   136d4:	beq	13710 <mchar_async_cache_destroy@@Base+0x44>
   136d8:	ldr	r0, [r4]
   136dc:	mov	r5, r1
   136e0:	cmp	r0, #0
   136e4:	beq	136ec <mchar_async_cache_destroy@@Base+0x20>
   136e8:	bl	10dcc <mycore_free@plt>
   136ec:	ldr	r0, [r4, #20]
   136f0:	cmp	r0, #0
   136f4:	beq	136fc <mchar_async_cache_destroy@@Base+0x30>
   136f8:	bl	10dcc <mycore_free@plt>
   136fc:	cmp	r5, #0
   13700:	beq	13710 <mchar_async_cache_destroy@@Base+0x44>
   13704:	mov	r0, r4
   13708:	bl	10dcc <mycore_free@plt>
   1370c:	mov	r4, #0
   13710:	mov	r0, r4
   13714:	pop	{r4, r5, r6, pc}

00013718 <mchar_async_destroy@@Base>:
   13718:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1371c:	subs	r4, r0, #0
   13720:	beq	137a0 <mchar_async_destroy@@Base+0x88>
   13724:	ldr	r3, [r4, #56]	; 0x38
   13728:	mov	r8, r1
   1372c:	cmp	r3, #0
   13730:	movne	r5, #0
   13734:	movne	r6, #36	; 0x24
   13738:	movne	r7, r5
   1373c:	bne	137bc <mchar_async_destroy@@Base+0xa4>
   13740:	ldr	r0, [r4, #68]	; 0x44
   13744:	cmp	r0, #0
   13748:	beq	13750 <mchar_async_destroy@@Base+0x38>
   1374c:	bl	10dcc <mycore_free@plt>
   13750:	ldr	r3, [r4, #4]
   13754:	cmp	r3, #0
   13758:	movne	r5, #0
   1375c:	movne	r9, #20
   13760:	bne	137f8 <mchar_async_destroy@@Base+0xe0>
   13764:	mov	r1, #0
   13768:	add	r0, r4, #24
   1376c:	bl	1088c <mchar_async_cache_destroy@plt>
   13770:	mov	r1, #1
   13774:	ldr	r0, [r4, #80]	; 0x50
   13778:	bl	101b4 <mcsync_destroy@plt>
   1377c:	mov	r2, #84	; 0x54
   13780:	mov	r1, #0
   13784:	mov	r0, r4
   13788:	bl	108b0 <memset@plt>
   1378c:	cmp	r8, #0
   13790:	beq	137a0 <mchar_async_destroy@@Base+0x88>
   13794:	mov	r0, r4
   13798:	bl	10dcc <mycore_free@plt>
   1379c:	mov	r4, #0
   137a0:	mov	r0, r4
   137a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137a8:	mla	r0, r6, r5, r0
   137ac:	mov	r1, r7
   137b0:	add	r0, r0, #4
   137b4:	bl	1088c <mchar_async_cache_destroy@plt>
   137b8:	add	r5, r5, #1
   137bc:	ldr	r3, [r4, #60]	; 0x3c
   137c0:	ldr	r0, [r4, #56]	; 0x38
   137c4:	cmp	r5, r3
   137c8:	bcc	137a8 <mchar_async_destroy@@Base+0x90>
   137cc:	bl	10dcc <mycore_free@plt>
   137d0:	mov	r3, #0
   137d4:	str	r3, [r4, #56]	; 0x38
   137d8:	b	13740 <mchar_async_destroy@@Base+0x28>
   137dc:	ldr	r3, [r4, #4]
   137e0:	lsl	r7, r5, #2
   137e4:	ldr	r3, [r3, r5, lsl #2]
   137e8:	cmp	r3, #0
   137ec:	movne	r6, #0
   137f0:	bne	13834 <mchar_async_destroy@@Base+0x11c>
   137f4:	add	r5, r5, #1
   137f8:	ldr	r3, [r4, #12]
   137fc:	cmp	r5, r3
   13800:	bcc	137dc <mchar_async_destroy@@Base+0xc4>
   13804:	ldr	r0, [r4, #4]
   13808:	bl	10dcc <mycore_free@plt>
   1380c:	mov	r3, #0
   13810:	str	r3, [r4, #4]
   13814:	b	13764 <mchar_async_destroy@@Base+0x4c>
   13818:	ldr	r2, [r3, r7]
   1381c:	mul	r3, r9, r6
   13820:	ldr	r0, [r2, r3]
   13824:	cmp	r0, #0
   13828:	beq	13830 <mchar_async_destroy@@Base+0x118>
   1382c:	bl	10dcc <mycore_free@plt>
   13830:	add	r6, r6, #1
   13834:	ldr	r3, [r4, #16]
   13838:	cmp	r6, r3
   1383c:	ldr	r3, [r4, #4]
   13840:	bcc	13818 <mchar_async_destroy@@Base+0x100>
   13844:	ldr	r0, [r3, r7]
   13848:	bl	10dcc <mycore_free@plt>
   1384c:	b	137f4 <mchar_async_destroy@@Base+0xdc>

00013850 <mchar_async_cache_malloc@@Base>:
   13850:	ldr	r3, [r0, #24]
   13854:	cmp	r3, #0
   13858:	beq	13870 <mchar_async_cache_malloc@@Base+0x20>
   1385c:	ldr	r2, [r0, #20]
   13860:	sub	r3, r3, #1
   13864:	str	r3, [r0, #24]
   13868:	ldr	r0, [r2, r3, lsl #2]
   1386c:	bx	lr
   13870:	ldr	r2, [r0, #8]
   13874:	ldr	r3, [r0, #4]
   13878:	add	r2, r2, #1
   1387c:	cmp	r2, r3
   13880:	push	{r4, lr}
   13884:	mov	r4, r0
   13888:	str	r2, [r0, #8]
   1388c:	bcc	138b0 <mchar_async_cache_malloc@@Base+0x60>
   13890:	lsl	r3, r3, #1
   13894:	mov	r1, #20
   13898:	str	r3, [r0, #4]
   1389c:	mul	r1, r1, r3
   138a0:	ldr	r0, [r0]
   138a4:	bl	fbd8 <mycore_realloc@plt>
   138a8:	cmp	r0, #0
   138ac:	strne	r0, [r4]
   138b0:	ldr	r0, [r4, #8]
   138b4:	sub	r0, r0, #1
   138b8:	pop	{r4, pc}

000138bc <mchar_async_cache_delete@@Base>:
   138bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138c0:	mov	ip, #20
   138c4:	ldr	r3, [r0]
   138c8:	ldr	r4, [r0, #12]
   138cc:	cmp	r4, #0
   138d0:	beq	13984 <mchar_async_cache_delete@@Base+0xc8>
   138d4:	mla	r2, ip, r4, r3
   138d8:	ldr	lr, [r2, #4]
   138dc:	cmp	lr, r1
   138e0:	bcc	13ab8 <mchar_async_cache_delete@@Base+0x1fc>
   138e4:	mov	ip, #20
   138e8:	mla	r5, ip, r4, r3
   138ec:	ldr	lr, [r5, #12]
   138f0:	mla	r7, ip, lr, r3
   138f4:	ldr	r2, [r7, #4]
   138f8:	cmp	r1, r2
   138fc:	beq	13990 <mchar_async_cache_delete@@Base+0xd4>
   13900:	ldr	r1, [r5, #16]
   13904:	ldr	r2, [r5, #8]
   13908:	cmp	r1, #0
   1390c:	beq	13a3c <mchar_async_cache_delete@@Base+0x180>
   13910:	mla	r6, ip, r1, r3
   13914:	ldr	r8, [r6, #8]
   13918:	cmp	r4, r8
   1391c:	bne	139dc <mchar_async_cache_delete@@Base+0x120>
   13920:	cmp	lr, #0
   13924:	beq	139c8 <mchar_async_cache_delete@@Base+0x10c>
   13928:	cmp	r2, #0
   1392c:	movne	r8, #20
   13930:	ldrne	ip, [r7, #8]
   13934:	bne	1399c <mchar_async_cache_delete@@Base+0xe0>
   13938:	str	lr, [r6, #8]
   1393c:	str	r1, [r7, #16]
   13940:	mov	r5, r0
   13944:	ldr	r0, [r0, #20]
   13948:	ldr	r3, [r5, #24]
   1394c:	str	r4, [r0, r3, lsl #2]
   13950:	ldr	r3, [r5, #24]
   13954:	ldr	r1, [r5, #28]
   13958:	add	r3, r3, #1
   1395c:	cmp	r3, r1
   13960:	str	r3, [r5, #24]
   13964:	bcc	13aa8 <mchar_async_cache_delete@@Base+0x1ec>
   13968:	lsl	r6, r1, #1
   1396c:	lsl	r1, r1, #3
   13970:	bl	fbd8 <mycore_realloc@plt>
   13974:	cmp	r0, #0
   13978:	strne	r0, [r5, #20]
   1397c:	strne	r6, [r5, #28]
   13980:	bne	13aa8 <mchar_async_cache_delete@@Base+0x1ec>
   13984:	mov	r4, #0
   13988:	mov	r0, r4
   1398c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13990:	mov	r4, lr
   13994:	b	138e8 <mchar_async_cache_delete@@Base+0x2c>
   13998:	mov	ip, sl
   1399c:	mla	r9, r8, ip, r3
   139a0:	ldr	sl, [r9, #8]
   139a4:	cmp	sl, #0
   139a8:	bne	13998 <mchar_async_cache_delete@@Base+0xdc>
   139ac:	cmp	ip, #0
   139b0:	strne	r2, [r9, #8]
   139b4:	ldrne	r2, [r5, #8]
   139b8:	streq	r2, [r7, #8]
   139bc:	mlane	r3, r8, r2, r3
   139c0:	strne	ip, [r3, #16]
   139c4:	b	13938 <mchar_async_cache_delete@@Base+0x7c>
   139c8:	str	r2, [r6, #8]
   139cc:	ldr	r2, [r5, #8]
   139d0:	mla	r3, ip, r2, r3
   139d4:	str	r1, [r3, #16]
   139d8:	b	13940 <mchar_async_cache_delete@@Base+0x84>
   139dc:	cmp	r2, #0
   139e0:	streq	lr, [r6, #12]
   139e4:	ldreq	r2, [r5, #12]
   139e8:	beq	139d0 <mchar_async_cache_delete@@Base+0x114>
   139ec:	cmp	lr, #0
   139f0:	beq	13a28 <mchar_async_cache_delete@@Base+0x16c>
   139f4:	mla	ip, ip, r2, r3
   139f8:	mov	r8, #20
   139fc:	ldr	r7, [ip, #12]
   13a00:	mla	r9, r8, r7, r3
   13a04:	ldr	sl, [r9, #12]
   13a08:	cmp	sl, #0
   13a0c:	bne	13a34 <mchar_async_cache_delete@@Base+0x178>
   13a10:	cmp	r7, #0
   13a14:	strne	lr, [r9, #12]
   13a18:	ldrne	ip, [r5, #12]
   13a1c:	streq	lr, [ip, #12]
   13a20:	mlane	ip, r8, ip, r3
   13a24:	strne	r7, [ip, #16]
   13a28:	str	r2, [r6, #12]
   13a2c:	mov	ip, #20
   13a30:	b	139d0 <mchar_async_cache_delete@@Base+0x114>
   13a34:	mov	r7, sl
   13a38:	b	13a00 <mchar_async_cache_delete@@Base+0x144>
   13a3c:	cmp	r2, #0
   13a40:	streq	lr, [r0, #12]
   13a44:	streq	r2, [r7, #16]
   13a48:	beq	13940 <mchar_async_cache_delete@@Base+0x84>
   13a4c:	cmp	lr, #0
   13a50:	beq	13a88 <mchar_async_cache_delete@@Base+0x1cc>
   13a54:	mla	ip, ip, r2, r3
   13a58:	mov	r6, #20
   13a5c:	ldr	r1, [ip, #12]
   13a60:	mla	r7, r6, r1, r3
   13a64:	ldr	r8, [r7, #12]
   13a68:	cmp	r8, #0
   13a6c:	bne	13aa0 <mchar_async_cache_delete@@Base+0x1e4>
   13a70:	cmp	r1, #0
   13a74:	strne	lr, [r7, #12]
   13a78:	ldrne	ip, [r5, #12]
   13a7c:	streq	lr, [ip, #12]
   13a80:	mlane	ip, r6, ip, r3
   13a84:	strne	r1, [ip, #16]
   13a88:	mov	r1, #20
   13a8c:	str	r2, [r0, #12]
   13a90:	mla	r3, r1, r2, r3
   13a94:	mov	r2, #0
   13a98:	str	r2, [r3, #16]
   13a9c:	b	13940 <mchar_async_cache_delete@@Base+0x84>
   13aa0:	mov	r1, r8
   13aa4:	b	13a60 <mchar_async_cache_delete@@Base+0x1a4>
   13aa8:	ldr	r3, [r5, #16]
   13aac:	sub	r3, r3, #1
   13ab0:	str	r3, [r5, #16]
   13ab4:	b	13988 <mchar_async_cache_delete@@Base+0xcc>
   13ab8:	ldr	r4, [r2, #12]
   13abc:	b	138cc <mchar_async_cache_delete@@Base+0x10>

00013ac0 <mchar_async_chunk_malloc_without_lock@@Base>:
   13ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ac4:	mov	r4, r0
   13ac8:	ldr	r9, [r0, #40]	; 0x28
   13acc:	mov	r7, r2
   13ad0:	cmp	r9, #0
   13ad4:	beq	13b0c <mchar_async_chunk_malloc_without_lock@@Base+0x4c>
   13ad8:	mov	r1, r2
   13adc:	add	r0, r0, #24
   13ae0:	bl	10f64 <mchar_async_cache_delete@plt>
   13ae4:	cmp	r0, #0
   13ae8:	bne	13af8 <mchar_async_chunk_malloc_without_lock@@Base+0x38>
   13aec:	mov	r5, #0
   13af0:	mov	r0, r5
   13af4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13af8:	mov	r3, #20
   13afc:	ldr	r2, [r4, #24]
   13b00:	mul	r0, r3, r0
   13b04:	ldr	r5, [r2, r0]
   13b08:	b	13af0 <mchar_async_chunk_malloc_without_lock@@Base+0x30>
   13b0c:	ldr	r2, [r0, #20]
   13b10:	ldr	r3, [r0, #16]
   13b14:	mov	r8, r1
   13b18:	cmp	r2, r3
   13b1c:	bcc	13ba8 <mchar_async_chunk_malloc_without_lock@@Base+0xe8>
   13b20:	ldr	r5, [r0, #12]
   13b24:	ldr	r1, [r0, #8]
   13b28:	add	r3, r5, #1
   13b2c:	cmp	r3, r1
   13b30:	str	r3, [r0, #12]
   13b34:	bcc	13b74 <mchar_async_chunk_malloc_without_lock@@Base+0xb4>
   13b38:	lsl	r3, r1, #1
   13b3c:	str	r3, [r0, #8]
   13b40:	lsl	r1, r1, #3
   13b44:	ldr	r0, [r0, #4]
   13b48:	bl	fbd8 <mycore_realloc@plt>
   13b4c:	subs	r6, r0, #0
   13b50:	beq	13aec <mchar_async_chunk_malloc_without_lock@@Base+0x2c>
   13b54:	ldr	r0, [r4, #12]
   13b58:	ldr	r2, [r4, #8]
   13b5c:	mov	r1, r9
   13b60:	sub	r2, r2, r0
   13b64:	add	r0, r6, r0, lsl #2
   13b68:	lsl	r2, r2, #2
   13b6c:	bl	108b0 <memset@plt>
   13b70:	str	r6, [r4, #4]
   13b74:	ldr	r3, [r4, #4]
   13b78:	ldr	r3, [r3, r5, lsl #2]
   13b7c:	cmp	r3, #0
   13b80:	bne	13ba0 <mchar_async_chunk_malloc_without_lock@@Base+0xe0>
   13b84:	mov	r1, #20
   13b88:	ldr	r0, [r4, #16]
   13b8c:	bl	ff14 <mycore_calloc@plt>
   13b90:	cmp	r0, #0
   13b94:	beq	13aec <mchar_async_chunk_malloc_without_lock@@Base+0x2c>
   13b98:	ldr	r3, [r4, #4]
   13b9c:	str	r0, [r3, r5, lsl #2]
   13ba0:	mov	r3, #0
   13ba4:	str	r3, [r4, #20]
   13ba8:	ldr	r3, [r4, #20]
   13bac:	ldr	r2, [r4, #12]
   13bb0:	ldr	r1, [r4, #4]
   13bb4:	mov	r6, #20
   13bb8:	sub	r2, r2, #-1073741823	; 0xc0000001
   13bbc:	mul	r6, r6, r3
   13bc0:	ldr	r9, [r1, r2, lsl #2]
   13bc4:	add	r3, r3, #1
   13bc8:	add	r5, r9, r6
   13bcc:	str	r3, [r4, #20]
   13bd0:	mov	r2, r5
   13bd4:	mov	r3, r7
   13bd8:	mov	r1, r8
   13bdc:	mov	r0, r4
   13be0:	bl	11060 <mchar_async_mem_malloc@plt>
   13be4:	ldr	r3, [r9, r6]
   13be8:	cmp	r3, #0
   13bec:	bne	13af0 <mchar_async_chunk_malloc_without_lock@@Base+0x30>
   13bf0:	b	13aec <mchar_async_chunk_malloc_without_lock@@Base+0x2c>

00013bf4 <mchar_async_chunk_malloc@@Base>:
   13bf4:	push	{r4, r5, r6, lr}
   13bf8:	mov	r4, r0
   13bfc:	mov	r5, r1
   13c00:	mov	r6, r2
   13c04:	ldr	r0, [r0, #80]	; 0x50
   13c08:	bl	10850 <mcsync_lock@plt>
   13c0c:	mov	r1, r5
   13c10:	mov	r2, r6
   13c14:	mov	r0, r4
   13c18:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   13c1c:	mov	r5, r0
   13c20:	ldr	r0, [r4, #80]	; 0x50
   13c24:	bl	10ebc <mcsync_unlock@plt>
   13c28:	mov	r0, r5
   13c2c:	pop	{r4, r5, r6, pc}

00013c30 <mchar_async_clean@@Base>:
   13c30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c34:	mov	r3, #1
   13c38:	mov	r4, #0
   13c3c:	str	r4, [r0, #20]
   13c40:	str	r3, [r0, #12]
   13c44:	mov	r8, r0
   13c48:	add	r0, r0, #24
   13c4c:	bl	10724 <mchar_async_cache_clean@plt>
   13c50:	mov	r9, #36	; 0x24
   13c54:	mov	sl, r4
   13c58:	ldr	r3, [r8, #60]	; 0x3c
   13c5c:	cmp	r4, r3
   13c60:	bcc	13c6c <mchar_async_clean@@Base+0x3c>
   13c64:	mov	r0, #0
   13c68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c6c:	mul	r5, r9, r4
   13c70:	ldr	r6, [r8, #56]	; 0x38
   13c74:	add	r7, r6, r5
   13c78:	add	r0, r7, #4
   13c7c:	bl	10724 <mchar_async_cache_clean@plt>
   13c80:	ldr	r2, [r8]
   13c84:	mov	r1, r7
   13c88:	mov	r0, r8
   13c8c:	bl	109d0 <mchar_async_chunk_malloc@plt>
   13c90:	cmp	r0, #0
   13c94:	str	r0, [r6, r5]
   13c98:	strne	sl, [r0, #16]
   13c9c:	addne	r4, r4, #1
   13ca0:	bne	13c58 <mchar_async_clean@@Base+0x28>
   13ca4:	mov	r0, #2
   13ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013cac <mchar_async_init@@Base>:
   13cac:	cmp	r2, #4096	; 0x1000
   13cb0:	push	{r4, r5, r6, lr}
   13cb4:	movcc	r2, #4096	; 0x1000
   13cb8:	mov	r4, r0
   13cbc:	str	r1, [r0, #16]
   13cc0:	str	r2, [r0]
   13cc4:	mov	r0, #1024	; 0x400
   13cc8:	str	r0, [r4, #8]
   13ccc:	mov	r1, #4
   13cd0:	bl	ff14 <mycore_calloc@plt>
   13cd4:	cmp	r0, #0
   13cd8:	str	r0, [r4, #4]
   13cdc:	bne	13cec <mchar_async_init@@Base+0x40>
   13ce0:	mov	r5, #2
   13ce4:	mov	r0, r5
   13ce8:	pop	{r4, r5, r6, pc}
   13cec:	mov	r5, r0
   13cf0:	mov	r1, #20
   13cf4:	ldr	r0, [r4, #16]
   13cf8:	bl	ff14 <mycore_calloc@plt>
   13cfc:	str	r0, [r5]
   13d00:	ldr	r0, [r4, #4]
   13d04:	ldr	r3, [r0]
   13d08:	cmp	r3, #0
   13d0c:	bne	13d1c <mchar_async_init@@Base+0x70>
   13d10:	bl	10dcc <mycore_free@plt>
   13d14:	str	r0, [r4, #4]
   13d18:	b	13ce0 <mchar_async_init@@Base+0x34>
   13d1c:	add	r0, r4, #24
   13d20:	bl	10c34 <mchar_async_cache_init@plt>
   13d24:	subs	r5, r0, #0
   13d28:	beq	13d48 <mchar_async_init@@Base+0x9c>
   13d2c:	ldr	r3, [r4, #4]
   13d30:	ldr	r0, [r3]
   13d34:	bl	10dcc <mycore_free@plt>
   13d38:	ldr	r0, [r4, #4]
   13d3c:	bl	10dcc <mycore_free@plt>
   13d40:	str	r0, [r4, #4]
   13d44:	b	13ce4 <mchar_async_init@@Base+0x38>
   13d48:	mov	r0, #64	; 0x40
   13d4c:	str	r5, [r4, #60]	; 0x3c
   13d50:	str	r0, [r4, #64]	; 0x40
   13d54:	mov	r1, #36	; 0x24
   13d58:	bl	ff14 <mycore_calloc@plt>
   13d5c:	cmp	r0, #0
   13d60:	str	r0, [r4, #56]	; 0x38
   13d64:	beq	13ce4 <mchar_async_init@@Base+0x38>
   13d68:	ldr	r0, [r4, #64]	; 0x40
   13d6c:	str	r5, [r4, #72]	; 0x48
   13d70:	str	r0, [r4, #76]	; 0x4c
   13d74:	lsl	r0, r0, #2
   13d78:	bl	10c94 <mycore_malloc@plt>
   13d7c:	cmp	r0, #0
   13d80:	str	r0, [r4, #68]	; 0x44
   13d84:	beq	13ce4 <mchar_async_init@@Base+0x38>
   13d88:	mov	r0, r4
   13d8c:	bl	10bc8 <mchar_async_clean@plt>
   13d90:	bl	fd94 <mcsync_create@plt>
   13d94:	cmp	r0, #0
   13d98:	str	r0, [r4, #80]	; 0x50
   13d9c:	beq	13ce0 <mchar_async_init@@Base+0x34>
   13da0:	pop	{r4, r5, r6, lr}
   13da4:	b	10868 <mcsync_init@plt>

00013da8 <mchar_async_node_add@@Base>:
   13da8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13dac:	mov	r4, r0
   13db0:	ldr	r0, [r0, #80]	; 0x50
   13db4:	mov	r5, r1
   13db8:	bl	10850 <mcsync_lock@plt>
   13dbc:	cmp	r0, #0
   13dc0:	beq	13ddc <mchar_async_node_add@@Base+0x34>
   13dc4:	cmp	r5, #0
   13dc8:	movne	r3, #96	; 0x60
   13dcc:	strne	r3, [r5]
   13dd0:	bne	13e2c <mchar_async_node_add@@Base+0x84>
   13dd4:	mov	r6, r5
   13dd8:	b	13e5c <mchar_async_node_add@@Base+0xb4>
   13ddc:	ldr	r7, [r4, #72]	; 0x48
   13de0:	cmp	r7, #0
   13de4:	beq	13e34 <mchar_async_node_add@@Base+0x8c>
   13de8:	ldr	r3, [r4, #68]	; 0x44
   13dec:	sub	r7, r7, #1
   13df0:	str	r7, [r4, #72]	; 0x48
   13df4:	ldr	r6, [r3, r7, lsl #2]
   13df8:	mov	r7, #36	; 0x24
   13dfc:	ldr	r9, [r4, #56]	; 0x38
   13e00:	mul	r7, r7, r6
   13e04:	add	sl, r9, r7
   13e08:	add	r0, sl, #4
   13e0c:	bl	10c34 <mchar_async_cache_init@plt>
   13e10:	subs	r8, r0, #0
   13e14:	beq	13e70 <mchar_async_node_add@@Base+0xc8>
   13e18:	cmp	r5, #0
   13e1c:	movne	r3, #2
   13e20:	strne	r3, [r5]
   13e24:	ldr	r0, [r4, #80]	; 0x50
   13e28:	bl	10ebc <mcsync_unlock@plt>
   13e2c:	mov	r6, #0
   13e30:	b	13e5c <mchar_async_node_add@@Base+0xb4>
   13e34:	ldr	r6, [r4, #60]	; 0x3c
   13e38:	ldr	r3, [r4, #64]	; 0x40
   13e3c:	cmp	r6, r3
   13e40:	bcc	13e64 <mchar_async_node_add@@Base+0xbc>
   13e44:	cmp	r5, #0
   13e48:	movne	r3, #98	; 0x62
   13e4c:	strne	r3, [r5]
   13e50:	ldr	r0, [r4, #80]	; 0x50
   13e54:	bl	10ebc <mcsync_unlock@plt>
   13e58:	mov	r6, r7
   13e5c:	mov	r0, r6
   13e60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e64:	add	r3, r6, #1
   13e68:	str	r3, [r4, #60]	; 0x3c
   13e6c:	b	13df8 <mchar_async_node_add@@Base+0x50>
   13e70:	ldr	r2, [r4]
   13e74:	mov	r1, sl
   13e78:	mov	r0, r4
   13e7c:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   13e80:	cmp	r0, #0
   13e84:	str	r0, [r9, r7]
   13e88:	beq	13e18 <mchar_async_node_add@@Base+0x70>
   13e8c:	str	r8, [r0, #12]
   13e90:	str	r8, [r0, #16]
   13e94:	ldr	r0, [r4, #80]	; 0x50
   13e98:	bl	10ebc <mcsync_unlock@plt>
   13e9c:	cmp	r5, #0
   13ea0:	strne	r8, [r5]
   13ea4:	b	13e5c <mchar_async_node_add@@Base+0xb4>

00013ea8 <mchar_async_cache_add@@Base>:
   13ea8:	push	{r4, r5, r6, r7, r8, lr}
   13eac:	mov	r5, r0
   13eb0:	ldr	r3, [r0, #16]
   13eb4:	ldr	r4, [r0, #12]
   13eb8:	add	r3, r3, #1
   13ebc:	cmp	r4, #0
   13ec0:	mov	r6, r1
   13ec4:	mov	r7, r2
   13ec8:	str	r3, [r0, #16]
   13ecc:	bne	13f00 <mchar_async_cache_add@@Base+0x58>
   13ed0:	ldr	r8, [r0]
   13ed4:	bl	fec0 <mchar_async_cache_malloc@plt>
   13ed8:	mov	r3, #20
   13edc:	str	r0, [r5, #12]
   13ee0:	mul	r0, r3, r0
   13ee4:	add	r3, r8, r0
   13ee8:	str	r4, [r3, #16]
   13eec:	str	r4, [r3, #8]
   13ef0:	str	r4, [r3, #12]
   13ef4:	str	r7, [r3, #4]
   13ef8:	str	r6, [r8, r0]
   13efc:	pop	{r4, r5, r6, r7, r8, pc}
   13f00:	bl	fec0 <mchar_async_cache_malloc@plt>
   13f04:	ldr	ip, [r5]
   13f08:	mov	r3, #20
   13f0c:	mla	lr, r3, r4, ip
   13f10:	ldr	r2, [lr, #4]
   13f14:	cmp	r7, r2
   13f18:	bne	13f64 <mchar_async_cache_add@@Base+0xbc>
   13f1c:	mul	r5, r3, r0
   13f20:	ldr	r2, [lr, #12]
   13f24:	add	r5, ip, r5
   13f28:	cmp	r2, #0
   13f2c:	str	r2, [r5, #12]
   13f30:	ldrne	r2, [lr, #12]
   13f34:	mlane	r3, r3, r2, ip
   13f38:	strne	r0, [r3, #16]
   13f3c:	mov	r3, #20
   13f40:	str	r0, [lr, #12]
   13f44:	mul	r0, r3, r0
   13f48:	add	r3, ip, r0
   13f4c:	str	r4, [r3, #16]
   13f50:	mov	r2, #0
   13f54:	str	r2, [r3, #8]
   13f58:	str	r7, [r3, #4]
   13f5c:	str	r6, [ip, r0]
   13f60:	pop	{r4, r5, r6, r7, r8, pc}
   13f64:	bcs	13fb0 <mchar_async_cache_add@@Base+0x108>
   13f68:	ldr	r2, [lr, #16]
   13f6c:	cmp	r2, #0
   13f70:	streq	r0, [r5, #12]
   13f74:	beq	13f90 <mchar_async_cache_add@@Base+0xe8>
   13f78:	mla	r3, r3, r2, ip
   13f7c:	ldr	r1, [r3, #8]
   13f80:	cmp	r4, r1
   13f84:	streq	r0, [r3, #8]
   13f88:	strne	r0, [r3, #12]
   13f8c:	mov	r3, #20
   13f90:	mla	r3, r3, r0, ip
   13f94:	str	r2, [r3, #16]
   13f98:	mov	r3, #20
   13f9c:	str	r0, [lr, #16]
   13fa0:	mul	r0, r3, r0
   13fa4:	add	r3, ip, r0
   13fa8:	str	r4, [r3, #12]
   13fac:	b	13f50 <mchar_async_cache_add@@Base+0xa8>
   13fb0:	ldr	r2, [lr, #12]
   13fb4:	cmp	r2, #0
   13fb8:	bne	13fdc <mchar_async_cache_add@@Base+0x134>
   13fbc:	str	r0, [lr, #12]
   13fc0:	mul	r0, r3, r0
   13fc4:	add	r1, ip, r0
   13fc8:	str	r2, [r1, #12]
   13fcc:	str	r2, [r1, #8]
   13fd0:	str	r4, [r1, #16]
   13fd4:	str	r7, [r1, #4]
   13fd8:	b	13f5c <mchar_async_cache_add@@Base+0xb4>
   13fdc:	mov	r4, r2
   13fe0:	b	13f0c <mchar_async_cache_add@@Base+0x64>

00013fe4 <mchar_async_node_delete@@Base>:
   13fe4:	push	{r4, r5, r6, r7, r8, lr}
   13fe8:	mov	r4, r0
   13fec:	ldr	r0, [r0, #80]	; 0x50
   13ff0:	mov	r6, r1
   13ff4:	bl	10850 <mcsync_lock@plt>
   13ff8:	ldr	r3, [r4, #60]	; 0x3c
   13ffc:	cmp	r3, r6
   14000:	bhi	14010 <mchar_async_node_delete@@Base+0x2c>
   14004:	ldr	r0, [r4, #80]	; 0x50
   14008:	pop	{r4, r5, r6, r7, r8, lr}
   1400c:	b	10ebc <mcsync_unlock@plt>
   14010:	mov	r3, #36	; 0x24
   14014:	ldr	r2, [r4, #56]	; 0x38
   14018:	mul	r3, r3, r6
   1401c:	add	r7, r2, r3
   14020:	ldr	r5, [r2, r3]
   14024:	ldr	r3, [r5, #12]
   14028:	cmp	r3, #0
   1402c:	bne	140c0 <mchar_async_node_delete@@Base+0xdc>
   14030:	add	r8, r4, #24
   14034:	ldr	r2, [r5, #8]
   14038:	mov	r1, r5
   1403c:	mov	r0, r8
   14040:	bl	10c7c <mchar_async_cache_add@plt>
   14044:	ldr	r5, [r5, #16]
   14048:	cmp	r5, #0
   1404c:	bne	14034 <mchar_async_node_delete@@Base+0x50>
   14050:	ldr	r3, [r7, #4]
   14054:	cmp	r3, #0
   14058:	beq	14068 <mchar_async_node_delete@@Base+0x84>
   1405c:	mov	r1, r5
   14060:	add	r0, r7, #4
   14064:	bl	1088c <mchar_async_cache_destroy@plt>
   14068:	mov	r1, #0
   1406c:	mov	r2, #36	; 0x24
   14070:	mov	r0, r7
   14074:	bl	108b0 <memset@plt>
   14078:	ldr	r1, [r4, #76]	; 0x4c
   1407c:	ldr	r3, [r4, #72]	; 0x48
   14080:	cmp	r3, r1
   14084:	bcc	140a4 <mchar_async_node_delete@@Base+0xc0>
   14088:	lsl	r5, r1, #1
   1408c:	ldr	r0, [r4, #68]	; 0x44
   14090:	lsl	r1, r1, #2
   14094:	bl	fbd8 <mycore_realloc@plt>
   14098:	cmp	r0, #0
   1409c:	strne	r0, [r4, #68]	; 0x44
   140a0:	strne	r5, [r4, #76]	; 0x4c
   140a4:	ldr	r2, [r4, #72]	; 0x48
   140a8:	ldr	r3, [r4, #68]	; 0x44
   140ac:	str	r6, [r3, r2, lsl #2]
   140b0:	ldr	r3, [r4, #72]	; 0x48
   140b4:	add	r3, r3, #1
   140b8:	str	r3, [r4, #72]	; 0x48
   140bc:	b	14004 <mchar_async_node_delete@@Base+0x20>
   140c0:	mov	r5, r3
   140c4:	b	14024 <mchar_async_node_delete@@Base+0x40>

000140c8 <mchar_async_malloc@@Base>:
   140c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140cc:	subs	r9, r2, #0
   140d0:	beq	141d4 <mchar_async_malloc@@Base+0x10c>
   140d4:	mov	r5, #36	; 0x24
   140d8:	ldr	r8, [r0, #56]	; 0x38
   140dc:	mul	r5, r5, r1
   140e0:	mov	r6, r0
   140e4:	add	sl, r8, r5
   140e8:	ldr	r4, [r8, r5]
   140ec:	ldr	r3, [sl, #20]
   140f0:	cmp	r3, #0
   140f4:	beq	14120 <mchar_async_malloc@@Base+0x58>
   140f8:	mov	r1, r9
   140fc:	add	r0, sl, #4
   14100:	bl	10f64 <mchar_async_cache_delete@plt>
   14104:	cmp	r0, #0
   14108:	beq	14120 <mchar_async_malloc@@Base+0x58>
   1410c:	mov	r3, #20
   14110:	ldr	r2, [sl, #4]
   14114:	mul	r0, r3, r0
   14118:	ldr	r0, [r2, r0]
   1411c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14120:	ldr	r0, [r4, #4]
   14124:	add	r7, r9, #4
   14128:	ldr	r3, [r4, #8]
   1412c:	add	r2, r0, r7
   14130:	cmp	r2, r3
   14134:	bls	141b4 <mchar_async_malloc@@Base+0xec>
   14138:	add	r1, r0, #4
   1413c:	cmp	r3, r1
   14140:	bls	1416c <mchar_async_malloc@@Base+0xa4>
   14144:	sub	r2, r3, #4
   14148:	subs	r2, r2, r0
   1414c:	beq	1416c <mchar_async_malloc@@Base+0xa4>
   14150:	ldr	r3, [r4]
   14154:	add	r1, r3, r1
   14158:	str	r2, [r3, r0]
   1415c:	ldr	r0, [r4, #8]
   14160:	str	r0, [r4, #4]
   14164:	add	r0, sl, #4
   14168:	bl	10c7c <mchar_async_cache_add@plt>
   1416c:	mov	r1, r7
   14170:	mov	r0, sl
   14174:	bl	10b14 <mchar_sync_chunk_find_by_size@plt>
   14178:	subs	r4, r0, #0
   1417c:	movne	r3, #0
   14180:	strne	r3, [r4, #4]
   14184:	bne	141a4 <mchar_async_malloc@@Base+0xdc>
   14188:	ldr	r2, [r6]
   1418c:	mov	r1, sl
   14190:	cmp	r2, r7
   14194:	addcc	r2, r2, r7
   14198:	mov	r0, r6
   1419c:	bl	109d0 <mchar_async_chunk_malloc@plt>
   141a0:	mov	r4, r0
   141a4:	mov	r1, r4
   141a8:	ldr	r0, [r8, r5]
   141ac:	bl	ff44 <mchar_sync_chunk_insert_after@plt>
   141b0:	str	r4, [r8, r5]
   141b4:	ldm	r4, {r2, r3}
   141b8:	str	r9, [r2, r3]
   141bc:	add	r0, r3, #4
   141c0:	ldr	r3, [r4, #4]
   141c4:	add	r0, r2, r0
   141c8:	add	r7, r3, r7
   141cc:	str	r7, [r4, #4]
   141d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141d4:	mov	r0, r9
   141d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000141dc <mchar_async_realloc@@Base>:
   141dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141e0:	subs	r4, r2, #0
   141e4:	ldr	lr, [sp, #32]
   141e8:	beq	1427c <mchar_async_realloc@@Base+0xa0>
   141ec:	ldr	r5, [r4, #-4]
   141f0:	cmp	r5, lr
   141f4:	bcs	1427c <mchar_async_realloc@@Base+0xa0>
   141f8:	mov	ip, #36	; 0x24
   141fc:	mov	r7, r3
   14200:	mul	ip, ip, r1
   14204:	ldr	r3, [r0, #56]	; 0x38
   14208:	add	r6, r3, ip
   1420c:	ldr	r8, [r3, ip]
   14210:	ldr	r2, [r8, #4]
   14214:	cmp	r5, r2
   14218:	bhi	1424c <mchar_async_realloc@@Base+0x70>
   1421c:	ldr	r9, [r8]
   14220:	sub	r2, r2, r5
   14224:	add	r9, r9, r2
   14228:	cmp	r4, r9
   1422c:	bne	1424c <mchar_async_realloc@@Base+0x70>
   14230:	ldr	r8, [r8, #8]
   14234:	add	r2, r2, lr
   14238:	cmp	r2, r8
   1423c:	strls	lr, [r4, #-4]
   14240:	ldrls	r3, [r3, ip]
   14244:	strls	r2, [r3, #4]
   14248:	bls	1427c <mchar_async_realloc@@Base+0xa0>
   1424c:	mov	r2, lr
   14250:	bl	10910 <mchar_async_malloc@plt>
   14254:	subs	r8, r0, #0
   14258:	beq	14278 <mchar_async_realloc@@Base+0x9c>
   1425c:	mov	r2, r7
   14260:	mov	r1, r4
   14264:	bl	ff5c <memcpy@plt>
   14268:	mov	r2, r5
   1426c:	mov	r1, r4
   14270:	add	r0, r6, #4
   14274:	bl	10c7c <mchar_async_cache_add@plt>
   14278:	mov	r4, r8
   1427c:	mov	r0, r4
   14280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014284 <mchar_async_crop_first_chars@@Base>:
   14284:	cmp	r2, #0
   14288:	push	{r4, lr}
   1428c:	moveq	r4, r2
   14290:	beq	142d4 <mchar_async_crop_first_chars@@Base+0x50>
   14294:	ldr	ip, [r2, #-4]
   14298:	add	r4, r2, r3
   1429c:	sub	ip, ip, r3
   142a0:	str	ip, [r4, #-4]
   142a4:	add	ip, r3, #4
   142a8:	cmp	ip, #4
   142ac:	bls	142d4 <mchar_async_crop_first_chars@@Base+0x50>
   142b0:	mov	ip, r2
   142b4:	sub	r2, r3, #4
   142b8:	str	r2, [ip, #-4]
   142bc:	mov	r3, #36	; 0x24
   142c0:	ldr	r0, [r0, #56]	; 0x38
   142c4:	mla	r0, r3, r1, r0
   142c8:	mov	r1, ip
   142cc:	add	r0, r0, #4
   142d0:	bl	10c7c <mchar_async_cache_add@plt>
   142d4:	mov	r0, r4
   142d8:	pop	{r4, pc}

000142dc <mchar_async_free@@Base>:
   142dc:	subs	r3, r2, #0
   142e0:	bxeq	lr
   142e4:	mov	r2, #36	; 0x24
   142e8:	ldr	r0, [r0, #56]	; 0x38
   142ec:	mla	r0, r2, r1, r0
   142f0:	ldr	r2, [r3, #-4]
   142f4:	mov	r1, r3
   142f8:	add	r0, r0, #4
   142fc:	b	10c7c <mchar_async_cache_add@plt>

00014300 <mcobject_create@@Base>:
   14300:	mov	r1, #24
   14304:	mov	r0, #1
   14308:	b	ff14 <mycore_calloc@plt>

0001430c <mcobject_init@@Base>:
   1430c:	mov	r3, #0
   14310:	push	{r4, lr}
   14314:	mov	r4, r0
   14318:	str	r2, [r0, #16]
   1431c:	str	r1, [r0, #20]
   14320:	str	r3, [r0]
   14324:	str	r3, [r0, #12]
   14328:	str	r1, [r0, #8]
   1432c:	lsl	r0, r1, #2
   14330:	bl	10c94 <mycore_malloc@plt>
   14334:	cmp	r0, #0
   14338:	str	r0, [r4, #4]
   1433c:	moveq	r0, #85	; 0x55
   14340:	movne	r0, #0
   14344:	pop	{r4, pc}

00014348 <mcobject_clean@@Base>:
   14348:	push	{r4, r5, r6, lr}
   1434c:	ldr	r4, [r0]
   14350:	cmp	r4, #0
   14354:	movne	r6, r0
   14358:	bne	14364 <mcobject_clean@@Base+0x1c>
   1435c:	pop	{r4, r5, r6, pc}
   14360:	mov	r4, r3
   14364:	ldr	r3, [r4, #12]
   14368:	cmp	r3, #0
   1436c:	bne	14360 <mcobject_clean@@Base+0x18>
   14370:	ldr	r0, [r4]
   14374:	ldr	r5, [r4, #16]
   14378:	cmp	r0, #0
   1437c:	beq	14384 <mcobject_clean@@Base+0x3c>
   14380:	bl	10dcc <mycore_free@plt>
   14384:	mov	r0, r4
   14388:	bl	10dcc <mycore_free@plt>
   1438c:	subs	r4, r5, #0
   14390:	bne	14370 <mcobject_clean@@Base+0x28>
   14394:	str	r5, [r6]
   14398:	str	r5, [r6, #12]
   1439c:	pop	{r4, r5, r6, pc}

000143a0 <mcobject_destroy@@Base>:
   143a0:	push	{r4, r5, r6, lr}
   143a4:	subs	r4, r0, #0
   143a8:	beq	143e0 <mcobject_destroy@@Base+0x40>
   143ac:	mov	r5, r1
   143b0:	bl	10f70 <mcobject_clean@plt>
   143b4:	ldr	r0, [r4, #4]
   143b8:	cmp	r0, #0
   143bc:	beq	143cc <mcobject_destroy@@Base+0x2c>
   143c0:	bl	10dcc <mycore_free@plt>
   143c4:	mov	r3, #0
   143c8:	str	r3, [r4, #4]
   143cc:	cmp	r5, #0
   143d0:	beq	143e0 <mcobject_destroy@@Base+0x40>
   143d4:	mov	r0, r4
   143d8:	bl	10dcc <mycore_free@plt>
   143dc:	mov	r4, #0
   143e0:	mov	r0, r4
   143e4:	pop	{r4, r5, r6, pc}

000143e8 <mcobject_chunk_malloc@@Base>:
   143e8:	push	{r4, r5, r6, lr}
   143ec:	subs	r6, r1, #0
   143f0:	movne	r3, #0
   143f4:	strne	r3, [r6]
   143f8:	ldr	r3, [r0]
   143fc:	cmp	r3, #0
   14400:	beq	14420 <mcobject_chunk_malloc@@Base+0x38>
   14404:	ldr	r3, [r3, #12]
   14408:	cmp	r3, #0
   1440c:	beq	14420 <mcobject_chunk_malloc@@Base+0x38>
   14410:	mov	r2, #0
   14414:	str	r3, [r0]
   14418:	str	r2, [r3, #4]
   1441c:	pop	{r4, r5, r6, pc}
   14420:	mov	r4, r0
   14424:	mov	r1, #20
   14428:	mov	r0, #1
   1442c:	bl	ff14 <mycore_calloc@plt>
   14430:	subs	r5, r0, #0
   14434:	bne	14448 <mcobject_chunk_malloc@@Base+0x60>
   14438:	cmp	r6, #0
   1443c:	movne	r3, #86	; 0x56
   14440:	strne	r3, [r6]
   14444:	pop	{r4, r5, r6, pc}
   14448:	ldr	r3, [r4, #16]
   1444c:	ldr	r0, [r4, #20]
   14450:	mul	r0, r0, r3
   14454:	bl	10c94 <mycore_malloc@plt>
   14458:	cmp	r0, #0
   1445c:	str	r0, [r5]
   14460:	bne	1447c <mcobject_chunk_malloc@@Base+0x94>
   14464:	cmp	r6, #0
   14468:	movne	r3, #87	; 0x57
   1446c:	strne	r3, [r6]
   14470:	mov	r0, r5
   14474:	pop	{r4, r5, r6, lr}
   14478:	b	10dcc <mycore_free@plt>
   1447c:	ldr	r3, [r4, #20]
   14480:	str	r3, [r5, #8]
   14484:	ldr	r3, [r4]
   14488:	cmp	r3, #0
   1448c:	strne	r3, [r5, #16]
   14490:	strne	r5, [r3, #12]
   14494:	str	r5, [r4]
   14498:	pop	{r4, r5, r6, pc}

0001449c <mcobject_malloc@@Base>:
   1449c:	ldr	r3, [r0, #12]
   144a0:	push	{r0, r1, r2, r4, r5, lr}
   144a4:	cmp	r3, #0
   144a8:	beq	144d4 <mcobject_malloc@@Base+0x38>
   144ac:	cmp	r1, #0
   144b0:	movne	r3, #0
   144b4:	strne	r3, [r1]
   144b8:	ldr	r3, [r0, #12]
   144bc:	ldr	r2, [r0, #4]
   144c0:	sub	r3, r3, #1
   144c4:	str	r3, [r0, #12]
   144c8:	ldr	r0, [r2, r3, lsl #2]
   144cc:	add	sp, sp, #12
   144d0:	pop	{r4, r5, pc}
   144d4:	ldr	r3, [r0]
   144d8:	mov	r5, r1
   144dc:	cmp	r3, #0
   144e0:	mov	r4, r0
   144e4:	beq	144f4 <mcobject_malloc@@Base+0x58>
   144e8:	ldmib	r3, {r1, r2}
   144ec:	cmp	r1, r2
   144f0:	bcc	14520 <mcobject_malloc@@Base+0x84>
   144f4:	add	r1, sp, #4
   144f8:	mov	r0, r4
   144fc:	bl	fee4 <mcobject_chunk_malloc@plt>
   14500:	ldr	r3, [sp, #4]
   14504:	cmp	r3, #0
   14508:	ldreq	r3, [r4]
   1450c:	beq	14520 <mcobject_malloc@@Base+0x84>
   14510:	cmp	r5, #0
   14514:	strne	r3, [r5]
   14518:	mov	r0, #0
   1451c:	b	144cc <mcobject_malloc@@Base+0x30>
   14520:	cmp	r5, #0
   14524:	movne	r2, #0
   14528:	strne	r2, [r5]
   1452c:	ldr	r0, [r3, #4]
   14530:	add	r2, r0, #1
   14534:	str	r2, [r3, #4]
   14538:	ldr	r2, [r4, #16]
   1453c:	ldr	r3, [r3]
   14540:	mla	r0, r2, r0, r3
   14544:	b	144cc <mcobject_malloc@@Base+0x30>

00014548 <mcobject_free@@Base>:
   14548:	push	{r4, r5, r6, lr}
   1454c:	mov	r5, r1
   14550:	ldr	r3, [r0, #12]
   14554:	ldr	r1, [r0, #8]
   14558:	mov	r4, r0
   1455c:	cmp	r3, r1
   14560:	bcc	14580 <mcobject_free@@Base+0x38>
   14564:	lsl	r6, r1, #1
   14568:	ldr	r0, [r0, #4]
   1456c:	lsl	r1, r1, #3
   14570:	bl	fbd8 <mycore_realloc@plt>
   14574:	cmp	r0, #0
   14578:	beq	1459c <mcobject_free@@Base+0x54>
   1457c:	stmib	r4, {r0, r6}
   14580:	ldr	r3, [r4, #12]
   14584:	ldr	r2, [r4, #4]
   14588:	mov	r0, #0
   1458c:	str	r5, [r2, r3, lsl #2]
   14590:	add	r3, r3, #1
   14594:	str	r3, [r4, #12]
   14598:	pop	{r4, r5, r6, pc}
   1459c:	mov	r0, #88	; 0x58
   145a0:	pop	{r4, r5, r6, pc}

000145a4 <mcobject_async_create@@Base>:
   145a4:	mov	r1, #72	; 0x48
   145a8:	mov	r0, #1
   145ac:	b	ff14 <mycore_calloc@plt>

000145b0 <mcobject_async_chunk_up@@Base>:
   145b0:	push	{r4, r5, r6, lr}
   145b4:	mov	r3, #0
   145b8:	ldr	r6, [r0, #32]
   145bc:	ldr	r5, [r0, #24]
   145c0:	str	r3, [r0, #40]	; 0x28
   145c4:	ldr	r3, [r5, r6, lsl #2]
   145c8:	cmp	r3, #0
   145cc:	bne	145f8 <mcobject_async_chunk_up@@Base+0x48>
   145d0:	mov	r4, r0
   145d4:	mov	r1, #20
   145d8:	ldr	r0, [r0, #36]	; 0x24
   145dc:	bl	ff14 <mycore_calloc@plt>
   145e0:	ldr	r2, [r4, #32]
   145e4:	ldr	r3, [r4, #24]
   145e8:	str	r0, [r5, r6, lsl #2]
   145ec:	ldr	r3, [r3, r2, lsl #2]
   145f0:	cmp	r3, #0
   145f4:	beq	14600 <mcobject_async_chunk_up@@Base+0x50>
   145f8:	mov	r0, #0
   145fc:	pop	{r4, r5, r6, pc}
   14600:	mov	r0, #2
   14604:	pop	{r4, r5, r6, pc}

00014608 <mcobject_async_destroy@@Base>:
   14608:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1460c:	subs	r4, r0, #0
   14610:	beq	1468c <mcobject_async_destroy@@Base+0x84>
   14614:	ldr	r3, [r4, #44]	; 0x2c
   14618:	mov	r7, r1
   1461c:	cmp	r3, #0
   14620:	movne	r5, #0
   14624:	bne	146b0 <mcobject_async_destroy@@Base+0xa8>
   14628:	ldr	r0, [r4, #56]	; 0x38
   1462c:	cmp	r0, #0
   14630:	beq	14638 <mcobject_async_destroy@@Base+0x30>
   14634:	bl	10dcc <mycore_free@plt>
   14638:	ldr	r3, [r4, #24]
   1463c:	cmp	r3, #0
   14640:	movne	r5, #0
   14644:	movne	r9, #20
   14648:	bne	146e4 <mcobject_async_destroy@@Base+0xdc>
   1464c:	ldr	r0, [r4, #12]
   14650:	cmp	r0, #0
   14654:	beq	1465c <mcobject_async_destroy@@Base+0x54>
   14658:	bl	10dcc <mycore_free@plt>
   1465c:	mov	r1, #1
   14660:	ldr	r0, [r4, #68]	; 0x44
   14664:	bl	101b4 <mcsync_destroy@plt>
   14668:	mov	r2, #72	; 0x48
   1466c:	mov	r1, #0
   14670:	mov	r0, r4
   14674:	bl	108b0 <memset@plt>
   14678:	cmp	r7, #0
   1467c:	beq	1468c <mcobject_async_destroy@@Base+0x84>
   14680:	mov	r0, r4
   14684:	bl	10dcc <mycore_free@plt>
   14688:	mov	r4, #0
   1468c:	mov	r0, r4
   14690:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14694:	ldr	r3, [r4, #44]	; 0x2c
   14698:	add	r3, r3, r5, lsl #4
   1469c:	ldr	r0, [r3, #4]
   146a0:	cmp	r0, #0
   146a4:	beq	146ac <mcobject_async_destroy@@Base+0xa4>
   146a8:	bl	10dcc <mycore_free@plt>
   146ac:	add	r5, r5, #1
   146b0:	ldr	r3, [r4, #48]	; 0x30
   146b4:	cmp	r5, r3
   146b8:	bcc	14694 <mcobject_async_destroy@@Base+0x8c>
   146bc:	ldr	r0, [r4, #44]	; 0x2c
   146c0:	bl	10dcc <mycore_free@plt>
   146c4:	b	14628 <mcobject_async_destroy@@Base+0x20>
   146c8:	ldr	r3, [r4, #24]
   146cc:	lsl	r8, r5, #2
   146d0:	ldr	r3, [r3, r5, lsl #2]
   146d4:	cmp	r3, #0
   146d8:	movne	r6, #0
   146dc:	bne	14718 <mcobject_async_destroy@@Base+0x110>
   146e0:	add	r5, r5, #1
   146e4:	ldr	r3, [r4, #32]
   146e8:	cmp	r5, r3
   146ec:	bcc	146c8 <mcobject_async_destroy@@Base+0xc0>
   146f0:	ldr	r0, [r4, #24]
   146f4:	bl	10dcc <mycore_free@plt>
   146f8:	b	1464c <mcobject_async_destroy@@Base+0x44>
   146fc:	ldr	r2, [r3, r8]
   14700:	mul	r3, r9, r6
   14704:	ldr	r0, [r2, r3]
   14708:	cmp	r0, #0
   1470c:	beq	14714 <mcobject_async_destroy@@Base+0x10c>
   14710:	bl	10dcc <mycore_free@plt>
   14714:	add	r6, r6, #1
   14718:	ldr	r3, [r4, #36]	; 0x24
   1471c:	cmp	r6, r3
   14720:	ldr	r3, [r4, #24]
   14724:	bcc	146fc <mcobject_async_destroy@@Base+0xf4>
   14728:	ldr	r0, [r3, r8]
   1472c:	bl	10dcc <mycore_free@plt>
   14730:	b	146e0 <mcobject_async_destroy@@Base+0xd8>

00014734 <mcobject_async_mem_malloc@@Base>:
   14734:	push	{r4, r5, r6, lr}
   14738:	mov	r6, r0
   1473c:	ldr	r0, [r1]
   14740:	mov	r4, r1
   14744:	cmp	r0, #0
   14748:	mov	r5, r2
   1474c:	beq	14798 <mcobject_async_mem_malloc@@Base+0x64>
   14750:	ldr	r3, [r1, #8]
   14754:	cmp	r3, r2
   14758:	bcs	1477c <mcobject_async_mem_malloc@@Base+0x48>
   1475c:	bl	10dcc <mycore_free@plt>
   14760:	ldr	r2, [r6]
   14764:	ldr	r0, [r6, #8]
   14768:	add	r5, r5, r2
   1476c:	str	r5, [r4, #8]
   14770:	mul	r0, r0, r5
   14774:	bl	10c94 <mycore_malloc@plt>
   14778:	str	r0, [r4]
   1477c:	ldr	r0, [r4]
   14780:	mov	r3, #0
   14784:	cmp	r0, r3
   14788:	str	r3, [r4, #4]
   1478c:	moveq	r0, #2
   14790:	movne	r0, r3
   14794:	pop	{r4, r5, r6, pc}
   14798:	ldr	r2, [r6]
   1479c:	ldr	r0, [r6, #8]
   147a0:	cmp	r5, r2
   147a4:	addhi	r5, r5, r2
   147a8:	strls	r2, [r1, #8]
   147ac:	strhi	r5, [r1, #8]
   147b0:	ldr	r3, [r1, #8]
   147b4:	mul	r0, r0, r3
   147b8:	b	14774 <mcobject_async_mem_malloc@@Base+0x40>

000147bc <mcobject_async_chunk_malloc_without_lock@@Base>:
   147bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147c0:	subs	r6, r2, #0
   147c4:	ldr	r5, [r0, #20]
   147c8:	movne	r3, #0
   147cc:	strne	r3, [r6]
   147d0:	cmp	r5, #0
   147d4:	beq	14808 <mcobject_async_chunk_malloc_without_lock@@Base+0x4c>
   147d8:	ldr	r3, [r0, #12]
   147dc:	sub	r1, r5, #1
   147e0:	str	r1, [r0, #20]
   147e4:	ldr	r0, [r3, r1, lsl #2]
   147e8:	mov	r2, #0
   147ec:	str	r2, [r0, #12]
   147f0:	str	r2, [r0, #4]
   147f4:	ldr	r0, [r3, r1, lsl #2]
   147f8:	str	r2, [r0, #16]
   147fc:	ldr	r5, [r3, r1, lsl #2]
   14800:	mov	r0, r5
   14804:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14808:	ldr	r2, [r0, #40]	; 0x28
   1480c:	ldr	r3, [r0, #36]	; 0x24
   14810:	mov	r7, r1
   14814:	cmp	r2, r3
   14818:	mov	r4, r0
   1481c:	bcc	14884 <mcobject_async_chunk_malloc_without_lock@@Base+0xc8>
   14820:	ldr	r1, [r0, #28]
   14824:	ldr	r3, [r0, #32]
   14828:	cmp	r3, r1
   1482c:	bcc	14868 <mcobject_async_chunk_malloc_without_lock@@Base+0xac>
   14830:	lsl	r9, r1, #1
   14834:	ldr	r0, [r0, #24]
   14838:	lsl	r1, r1, #3
   1483c:	bl	fbd8 <mycore_realloc@plt>
   14840:	subs	r8, r0, #0
   14844:	beq	148d4 <mcobject_async_chunk_malloc_without_lock@@Base+0x118>
   14848:	ldr	r0, [r4, #32]
   1484c:	mov	r1, r5
   14850:	sub	r2, r9, r0
   14854:	add	r0, r8, r0, lsl #2
   14858:	lsl	r2, r2, #2
   1485c:	bl	108b0 <memset@plt>
   14860:	str	r9, [r4, #28]
   14864:	str	r8, [r4, #24]
   14868:	mov	r0, r4
   1486c:	bl	1019c <mcobject_async_chunk_up@plt>
   14870:	cmp	r0, #0
   14874:	bne	148d4 <mcobject_async_chunk_malloc_without_lock@@Base+0x118>
   14878:	ldr	r3, [r4, #32]
   1487c:	add	r3, r3, #1
   14880:	str	r3, [r4, #32]
   14884:	ldr	r2, [r4, #32]
   14888:	ldr	r1, [r4, #24]
   1488c:	sub	r2, r2, #-1073741823	; 0xc0000001
   14890:	ldr	r3, [r4, #40]	; 0x28
   14894:	ldr	r2, [r1, r2, lsl #2]
   14898:	mov	r5, #20
   1489c:	mov	r0, r4
   148a0:	mla	r5, r5, r3, r2
   148a4:	add	r3, r3, #1
   148a8:	str	r3, [r4, #40]	; 0x28
   148ac:	mov	r3, #0
   148b0:	cmp	r6, r3
   148b4:	str	r3, [r5, #12]
   148b8:	str	r3, [r5, #16]
   148bc:	mov	r2, r7
   148c0:	mov	r1, r5
   148c4:	beq	148ec <mcobject_async_chunk_malloc_without_lock@@Base+0x130>
   148c8:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   148cc:	str	r0, [r6]
   148d0:	b	14800 <mcobject_async_chunk_malloc_without_lock@@Base+0x44>
   148d4:	cmp	r6, #0
   148d8:	movne	r3, #2
   148dc:	strne	r3, [r6]
   148e0:	movne	r5, #0
   148e4:	moveq	r5, r6
   148e8:	b	14800 <mcobject_async_chunk_malloc_without_lock@@Base+0x44>
   148ec:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   148f0:	b	14800 <mcobject_async_chunk_malloc_without_lock@@Base+0x44>

000148f4 <mcobject_async_chunk_malloc@@Base>:
   148f4:	push	{r4, r5, r6, lr}
   148f8:	mov	r5, r0
   148fc:	ldr	r0, [r0, #68]	; 0x44
   14900:	mov	r6, r1
   14904:	mov	r4, r2
   14908:	bl	10850 <mcsync_lock@plt>
   1490c:	cmp	r0, #0
   14910:	beq	1492c <mcobject_async_chunk_malloc@@Base+0x38>
   14914:	cmp	r4, #0
   14918:	movne	r3, #1
   1491c:	strne	r3, [r4]
   14920:	movne	r4, #0
   14924:	mov	r0, r4
   14928:	pop	{r4, r5, r6, pc}
   1492c:	mov	r2, r4
   14930:	mov	r1, r6
   14934:	mov	r0, r5
   14938:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   1493c:	mov	r4, r0
   14940:	ldr	r0, [r5, #68]	; 0x44
   14944:	bl	10ebc <mcsync_unlock@plt>
   14948:	b	14924 <mcobject_async_chunk_malloc@@Base+0x30>

0001494c <mcobject_async_clean@@Base>:
   1494c:	ldr	r3, [r0, #24]
   14950:	push	{r4, r5, r6, r7, r8, lr}
   14954:	mov	r4, #0
   14958:	ldr	r3, [r3]
   1495c:	mov	r5, r0
   14960:	cmp	r3, #0
   14964:	mov	r7, r4
   14968:	movne	r3, #1
   1496c:	str	r3, [r0, #32]
   14970:	str	r4, [r0, #40]	; 0x28
   14974:	str	r4, [r0, #20]
   14978:	ldr	r3, [r5, #48]	; 0x30
   1497c:	cmp	r4, r3
   14980:	bcc	14988 <mcobject_async_clean@@Base+0x3c>
   14984:	pop	{r4, r5, r6, r7, r8, pc}
   14988:	ldr	r6, [r5, #44]	; 0x2c
   1498c:	add	r3, r6, r4, lsl #4
   14990:	str	r7, [r3, #12]
   14994:	ldr	r3, [r6, r4, lsl #4]
   14998:	cmp	r3, #0
   1499c:	beq	149b4 <mcobject_async_clean@@Base+0x68>
   149a0:	mov	r2, r7
   149a4:	ldr	r1, [r5]
   149a8:	mov	r0, r5
   149ac:	bl	1010c <mcobject_async_chunk_malloc@plt>
   149b0:	str	r0, [r6, r4, lsl #4]
   149b4:	add	r4, r4, #1
   149b8:	b	14978 <mcobject_async_clean@@Base+0x2c>

000149bc <mcobject_async_init@@Base>:
   149bc:	push	{r4, r5, r6, lr}
   149c0:	mov	r4, r0
   149c4:	stm	r0, {r2, r3}
   149c8:	mov	r5, #0
   149cc:	add	r3, r3, #4
   149d0:	str	r3, [r0, #8]
   149d4:	str	r5, [r0, #32]
   149d8:	mov	r0, #128	; 0x80
   149dc:	str	r1, [r4, #36]	; 0x24
   149e0:	str	r0, [r4, #28]
   149e4:	mov	r1, #4
   149e8:	bl	ff14 <mycore_calloc@plt>
   149ec:	cmp	r0, r5
   149f0:	str	r0, [r4, #24]
   149f4:	beq	14a8c <mcobject_async_init@@Base+0xd0>
   149f8:	mov	r0, r4
   149fc:	bl	1019c <mcobject_async_chunk_up@plt>
   14a00:	ldr	r0, [r4, #36]	; 0x24
   14a04:	mov	r1, #4
   14a08:	str	r0, [r4, #16]
   14a0c:	bl	ff14 <mycore_calloc@plt>
   14a10:	cmp	r0, r5
   14a14:	str	r0, [r4, #12]
   14a18:	beq	14a94 <mcobject_async_init@@Base+0xd8>
   14a1c:	mov	r0, #64	; 0x40
   14a20:	str	r5, [r4, #48]	; 0x30
   14a24:	str	r0, [r4, #52]	; 0x34
   14a28:	mov	r1, #16
   14a2c:	bl	ff14 <mycore_calloc@plt>
   14a30:	cmp	r0, r5
   14a34:	str	r0, [r4, #44]	; 0x2c
   14a38:	bne	14a44 <mcobject_async_init@@Base+0x88>
   14a3c:	mov	r0, #4
   14a40:	pop	{r4, r5, r6, pc}
   14a44:	ldr	r0, [r4, #52]	; 0x34
   14a48:	str	r5, [r4, #60]	; 0x3c
   14a4c:	str	r0, [r4, #64]	; 0x40
   14a50:	lsl	r0, r0, #2
   14a54:	bl	10c94 <mycore_malloc@plt>
   14a58:	cmp	r0, #0
   14a5c:	str	r0, [r4, #56]	; 0x38
   14a60:	beq	14a3c <mcobject_async_init@@Base+0x80>
   14a64:	mov	r0, r4
   14a68:	bl	11054 <mcobject_async_clean@plt>
   14a6c:	bl	fd94 <mcsync_create@plt>
   14a70:	cmp	r0, #0
   14a74:	str	r0, [r4, #68]	; 0x44
   14a78:	beq	14a9c <mcobject_async_init@@Base+0xe0>
   14a7c:	bl	10868 <mcsync_init@plt>
   14a80:	adds	r0, r0, #0
   14a84:	movne	r0, #1
   14a88:	pop	{r4, r5, r6, pc}
   14a8c:	mov	r0, #2
   14a90:	pop	{r4, r5, r6, pc}
   14a94:	mov	r0, #3
   14a98:	pop	{r4, r5, r6, pc}
   14a9c:	mov	r0, #1
   14aa0:	pop	{r4, r5, r6, pc}

00014aa4 <mcobject_async_node_add@@Base>:
   14aa4:	push	{r4, r5, r6, r7, r8, lr}
   14aa8:	mov	r4, r0
   14aac:	ldr	r0, [r0, #68]	; 0x44
   14ab0:	mov	r6, r1
   14ab4:	bl	10850 <mcsync_lock@plt>
   14ab8:	cmp	r6, #0
   14abc:	ldr	r7, [r4, #60]	; 0x3c
   14ac0:	movne	r3, #0
   14ac4:	strne	r3, [r6]
   14ac8:	cmp	r7, #0
   14acc:	beq	14b4c <mcobject_async_node_add@@Base+0xa8>
   14ad0:	ldr	r3, [r4, #56]	; 0x38
   14ad4:	sub	r7, r7, #1
   14ad8:	str	r7, [r4, #60]	; 0x3c
   14adc:	ldr	r5, [r3, r7, lsl #2]
   14ae0:	mov	r2, r6
   14ae4:	ldr	r1, [r4]
   14ae8:	mov	r0, r4
   14aec:	ldr	r8, [r4, #44]	; 0x2c
   14af0:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   14af4:	cmp	r6, #0
   14af8:	add	r7, r8, r5, lsl #4
   14afc:	str	r0, [r8, r5, lsl #4]
   14b00:	beq	14b10 <mcobject_async_node_add@@Base+0x6c>
   14b04:	ldr	r3, [r6]
   14b08:	cmp	r3, #0
   14b0c:	bne	14b64 <mcobject_async_node_add@@Base+0xc0>
   14b10:	mov	r3, #0
   14b14:	str	r3, [r0, #12]
   14b18:	str	r3, [r0, #16]
   14b1c:	ldr	r0, [r4]
   14b20:	str	r3, [r7, #12]
   14b24:	str	r0, [r7, #8]
   14b28:	lsl	r0, r0, #2
   14b2c:	bl	10c94 <mycore_malloc@plt>
   14b30:	cmp	r0, #0
   14b34:	str	r0, [r7, #4]
   14b38:	bne	14b78 <mcobject_async_node_add@@Base+0xd4>
   14b3c:	cmp	r6, #0
   14b40:	movne	r3, #3
   14b44:	strne	r3, [r6]
   14b48:	b	14b64 <mcobject_async_node_add@@Base+0xc0>
   14b4c:	ldr	r5, [r4, #48]	; 0x30
   14b50:	ldr	r3, [r4, #52]	; 0x34
   14b54:	cmp	r5, r3
   14b58:	addcc	r3, r5, #1
   14b5c:	strcc	r3, [r4, #48]	; 0x30
   14b60:	bcc	14ae0 <mcobject_async_node_add@@Base+0x3c>
   14b64:	ldr	r0, [r4, #68]	; 0x44
   14b68:	bl	10ebc <mcsync_unlock@plt>
   14b6c:	mov	r5, #0
   14b70:	mov	r0, r5
   14b74:	pop	{r4, r5, r6, r7, r8, pc}
   14b78:	ldr	r0, [r4, #68]	; 0x44
   14b7c:	bl	10ebc <mcsync_unlock@plt>
   14b80:	b	14b70 <mcobject_async_node_add@@Base+0xcc>

00014b84 <mcobject_async_node_clean@@Base>:
   14b84:	ldr	r3, [r0, #48]	; 0x30
   14b88:	cmp	r3, r1
   14b8c:	bxls	lr
   14b90:	ldr	r2, [r0, #44]	; 0x2c
   14b94:	mov	r0, #0
   14b98:	add	r3, r2, r1, lsl #4
   14b9c:	ldr	r2, [r2, r1, lsl #4]
   14ba0:	str	r0, [r3, #12]
   14ba4:	cmp	r2, r0
   14ba8:	bne	14bb4 <mcobject_async_node_clean@@Base+0x30>
   14bac:	bx	lr
   14bb0:	str	r2, [r3]
   14bb4:	ldr	r1, [r3]
   14bb8:	ldr	r2, [r1, #16]
   14bbc:	cmp	r2, #0
   14bc0:	bne	14bb0 <mcobject_async_node_clean@@Base+0x2c>
   14bc4:	str	r2, [r1, #4]
   14bc8:	str	r2, [r3, #12]
   14bcc:	bx	lr

00014bd0 <mcobject_async_node_all_clean@@Base>:
   14bd0:	push	{r4, r5, r6, lr}
   14bd4:	mov	r5, r0
   14bd8:	mov	r4, #0
   14bdc:	ldr	r3, [r5, #48]	; 0x30
   14be0:	cmp	r4, r3
   14be4:	bcc	14bec <mcobject_async_node_all_clean@@Base+0x1c>
   14be8:	pop	{r4, r5, r6, pc}
   14bec:	mov	r1, r4
   14bf0:	mov	r0, r5
   14bf4:	bl	10880 <mcobject_async_node_clean@plt>
   14bf8:	add	r4, r4, #1
   14bfc:	b	14bdc <mcobject_async_node_all_clean@@Base+0xc>

00014c00 <mcobject_async_node_delete@@Base>:
   14c00:	push	{r4, r5, r6, r7, r8, lr}
   14c04:	mov	r4, r0
   14c08:	ldr	r0, [r0, #68]	; 0x44
   14c0c:	mov	r6, r1
   14c10:	bl	10850 <mcsync_lock@plt>
   14c14:	ldr	r3, [r4, #48]	; 0x30
   14c18:	cmp	r3, r6
   14c1c:	ldrhi	r3, [r4, #44]	; 0x2c
   14c20:	addhi	r7, r3, r6, lsl #4
   14c24:	ldrhi	r5, [r3, r6, lsl #4]
   14c28:	bhi	14c3c <mcobject_async_node_delete@@Base+0x3c>
   14c2c:	ldr	r0, [r4, #68]	; 0x44
   14c30:	pop	{r4, r5, r6, r7, r8, lr}
   14c34:	b	10ebc <mcsync_unlock@plt>
   14c38:	mov	r5, r3
   14c3c:	ldr	r3, [r5, #12]
   14c40:	cmp	r3, #0
   14c44:	bne	14c38 <mcobject_async_node_delete@@Base+0x38>
   14c48:	ldr	r1, [r4, #16]
   14c4c:	ldr	r3, [r4, #20]
   14c50:	cmp	r3, r1
   14c54:	bcc	14c78 <mcobject_async_node_delete@@Base+0x78>
   14c58:	lsl	r8, r1, #1
   14c5c:	ldr	r0, [r4, #12]
   14c60:	lsl	r1, r1, #3
   14c64:	bl	fbd8 <mycore_realloc@plt>
   14c68:	cmp	r0, #0
   14c6c:	beq	14c2c <mcobject_async_node_delete@@Base+0x2c>
   14c70:	str	r8, [r4, #16]
   14c74:	str	r0, [r4, #12]
   14c78:	ldr	r3, [r4, #20]
   14c7c:	ldr	r2, [r4, #12]
   14c80:	str	r5, [r2, r3, lsl #2]
   14c84:	ldr	r5, [r5, #16]
   14c88:	add	r3, r3, #1
   14c8c:	cmp	r5, #0
   14c90:	str	r3, [r4, #20]
   14c94:	bne	14c48 <mcobject_async_node_delete@@Base+0x48>
   14c98:	ldr	r0, [r7, #4]
   14c9c:	cmp	r0, #0
   14ca0:	beq	14ca8 <mcobject_async_node_delete@@Base+0xa8>
   14ca4:	bl	10dcc <mycore_free@plt>
   14ca8:	mov	r1, #0
   14cac:	mov	r2, #16
   14cb0:	mov	r0, r7
   14cb4:	bl	108b0 <memset@plt>
   14cb8:	ldr	r1, [r4, #64]	; 0x40
   14cbc:	ldr	r3, [r4, #60]	; 0x3c
   14cc0:	cmp	r3, r1
   14cc4:	bcc	14ce4 <mcobject_async_node_delete@@Base+0xe4>
   14cc8:	lsl	r5, r1, #1
   14ccc:	ldr	r0, [r4, #56]	; 0x38
   14cd0:	lsl	r1, r1, #2
   14cd4:	bl	fbd8 <mycore_realloc@plt>
   14cd8:	cmp	r0, #0
   14cdc:	strne	r0, [r4, #56]	; 0x38
   14ce0:	strne	r5, [r4, #64]	; 0x40
   14ce4:	ldr	r2, [r4, #60]	; 0x3c
   14ce8:	ldr	r3, [r4, #56]	; 0x38
   14cec:	str	r6, [r3, r2, lsl #2]
   14cf0:	ldr	r3, [r4, #60]	; 0x3c
   14cf4:	add	r3, r3, #1
   14cf8:	str	r3, [r4, #60]	; 0x3c
   14cfc:	b	14c2c <mcobject_async_node_delete@@Base+0x2c>

00014d00 <mcobject_async_malloc@@Base>:
   14d00:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14d04:	ldr	r6, [r0, #44]	; 0x2c
   14d08:	add	ip, r6, r1, lsl #4
   14d0c:	ldr	r3, [ip, #12]
   14d10:	cmp	r3, #0
   14d14:	beq	14d3c <mcobject_async_malloc@@Base+0x3c>
   14d18:	cmp	r2, #0
   14d1c:	movne	r1, #0
   14d20:	strne	r1, [r2]
   14d24:	ldr	r2, [ip, #4]
   14d28:	sub	r3, r3, #1
   14d2c:	str	r3, [ip, #12]
   14d30:	ldr	r0, [r2, r3, lsl #2]
   14d34:	add	sp, sp, #12
   14d38:	pop	{r4, r5, r6, r7, pc}
   14d3c:	mov	r5, r2
   14d40:	ldr	r2, [r6, r1, lsl #4]
   14d44:	mov	r4, r1
   14d48:	mov	r7, r0
   14d4c:	ldr	ip, [r2, #4]
   14d50:	ldr	r1, [r2, #8]
   14d54:	cmp	ip, r1
   14d58:	bcc	14da8 <mcobject_async_malloc@@Base+0xa8>
   14d5c:	ldr	r2, [r2, #12]
   14d60:	cmp	r2, #0
   14d64:	strne	r2, [r6, r4, lsl #4]
   14d68:	strne	r3, [r2, #4]
   14d6c:	bne	14da8 <mcobject_async_malloc@@Base+0xa8>
   14d70:	add	r2, sp, #4
   14d74:	ldr	r1, [r0]
   14d78:	bl	1010c <mcobject_async_chunk_malloc@plt>
   14d7c:	ldr	r3, [sp, #4]
   14d80:	cmp	r3, #0
   14d84:	beq	14d98 <mcobject_async_malloc@@Base+0x98>
   14d88:	cmp	r5, #0
   14d8c:	strne	r3, [r5]
   14d90:	mov	r0, #0
   14d94:	b	14d34 <mcobject_async_malloc@@Base+0x34>
   14d98:	ldr	r3, [r6, r4, lsl #4]
   14d9c:	str	r3, [r0, #16]
   14da0:	str	r0, [r3, #12]
   14da4:	str	r0, [r6, r4, lsl #4]
   14da8:	ldr	r2, [r6, r4, lsl #4]
   14dac:	cmp	r5, #0
   14db0:	movne	r3, #0
   14db4:	ldr	r0, [r2, #4]
   14db8:	strne	r3, [r5]
   14dbc:	ldr	r3, [r7, #8]
   14dc0:	mul	r3, r3, r0
   14dc4:	ldr	r0, [r2]
   14dc8:	str	r4, [r0, r3]
   14dcc:	ldr	r1, [r2, #4]
   14dd0:	add	r3, r3, #4
   14dd4:	add	r1, r1, #1
   14dd8:	str	r1, [r2, #4]
   14ddc:	add	r0, r0, r3
   14de0:	b	14d34 <mcobject_async_malloc@@Base+0x34>

00014de4 <mcobject_async_free@@Base>:
   14de4:	ldr	r3, [r1, #-4]
   14de8:	ldr	r2, [r0, #48]	; 0x30
   14dec:	cmp	r3, r2
   14df0:	bcs	14e4c <mcobject_async_free@@Base+0x68>
   14df4:	push	{r4, r5, r6, lr}
   14df8:	mov	r5, r1
   14dfc:	ldr	r4, [r0, #44]	; 0x2c
   14e00:	add	r4, r4, r3, lsl #4
   14e04:	ldr	r1, [r4, #8]
   14e08:	ldr	r2, [r4, #12]
   14e0c:	cmp	r2, r1
   14e10:	bcc	14e30 <mcobject_async_free@@Base+0x4c>
   14e14:	lsl	r6, r1, #1
   14e18:	ldr	r0, [r4, #4]
   14e1c:	lsl	r1, r1, #3
   14e20:	bl	fbd8 <mycore_realloc@plt>
   14e24:	cmp	r0, #0
   14e28:	beq	14e54 <mcobject_async_free@@Base+0x70>
   14e2c:	stmib	r4, {r0, r6}
   14e30:	ldr	r3, [r4, #12]
   14e34:	ldr	r2, [r4, #4]
   14e38:	mov	r0, #0
   14e3c:	str	r5, [r2, r3, lsl #2]
   14e40:	add	r3, r3, #1
   14e44:	str	r3, [r4, #12]
   14e48:	pop	{r4, r5, r6, pc}
   14e4c:	mov	r0, #5
   14e50:	bx	lr
   14e54:	mov	r0, #6
   14e58:	pop	{r4, r5, r6, pc}

00014e5c <mcsimple_create@@Base>:
   14e5c:	mov	r1, #28
   14e60:	mov	r0, #1
   14e64:	b	ff14 <mycore_calloc@plt>

00014e68 <mcsimple_clean@@Base>:
   14e68:	mov	r3, #0
   14e6c:	str	r3, [r0, #24]
   14e70:	str	r3, [r0, #12]
   14e74:	bx	lr

00014e78 <mcsimple_destroy@@Base>:
   14e78:	push	{r4, r5, r6, lr}
   14e7c:	subs	r4, r0, #0
   14e80:	beq	14eac <mcsimple_destroy@@Base+0x34>
   14e84:	ldr	r3, [r4, #4]
   14e88:	mov	r6, r1
   14e8c:	cmp	r3, #0
   14e90:	movne	r5, #0
   14e94:	bne	14ecc <mcsimple_destroy@@Base+0x54>
   14e98:	cmp	r6, #0
   14e9c:	beq	14eac <mcsimple_destroy@@Base+0x34>
   14ea0:	mov	r0, r4
   14ea4:	bl	10dcc <mycore_free@plt>
   14ea8:	mov	r4, #0
   14eac:	mov	r0, r4
   14eb0:	pop	{r4, r5, r6, pc}
   14eb4:	ldr	r3, [r4, #4]
   14eb8:	ldr	r0, [r3, r5, lsl #2]
   14ebc:	cmp	r0, #0
   14ec0:	beq	14ec8 <mcsimple_destroy@@Base+0x50>
   14ec4:	bl	10dcc <mycore_free@plt>
   14ec8:	add	r5, r5, #1
   14ecc:	ldr	r3, [r4, #16]
   14ed0:	cmp	r5, r3
   14ed4:	bcc	14eb4 <mcsimple_destroy@@Base+0x3c>
   14ed8:	ldr	r0, [r4, #4]
   14edc:	bl	10dcc <mycore_free@plt>
   14ee0:	b	14e98 <mcsimple_destroy@@Base+0x20>

00014ee4 <mcsimple_init_list_entries@@Base>:
   14ee4:	push	{r4, r5, r6, lr}
   14ee8:	mov	r5, r1
   14eec:	ldr	r3, [r0, #12]
   14ef0:	ldr	r1, [r0, #8]
   14ef4:	mov	r4, r0
   14ef8:	cmp	r3, r1
   14efc:	bcc	14f38 <mcsimple_init_list_entries@@Base+0x54>
   14f00:	add	r6, r1, #128	; 0x80
   14f04:	ldr	r0, [r0, #4]
   14f08:	lsl	r1, r1, #2
   14f0c:	bl	fbd8 <mycore_realloc@plt>
   14f10:	cmp	r0, #0
   14f14:	popeq	{r4, r5, r6, pc}
   14f18:	ldr	r2, [r4, #8]
   14f1c:	str	r0, [r4, #4]
   14f20:	sub	r2, r6, r2
   14f24:	mov	r1, #0
   14f28:	lsl	r2, r2, #2
   14f2c:	add	r0, r0, r5, lsl #2
   14f30:	bl	108b0 <memset@plt>
   14f34:	str	r6, [r4, #8]
   14f38:	ldr	r6, [r4, #4]
   14f3c:	mov	r3, #0
   14f40:	str	r3, [r4, #24]
   14f44:	ldr	r3, [r6, r5, lsl #2]
   14f48:	cmp	r3, #0
   14f4c:	bne	14f68 <mcsimple_init_list_entries@@Base+0x84>
   14f50:	ldr	r3, [r4, #16]
   14f54:	ldr	r0, [r4, #20]
   14f58:	add	r3, r3, #1
   14f5c:	str	r3, [r4, #16]
   14f60:	bl	10c94 <mycore_malloc@plt>
   14f64:	str	r0, [r6, r5, lsl #2]
   14f68:	ldr	r3, [r4, #4]
   14f6c:	ldr	r0, [r3, r5, lsl #2]
   14f70:	pop	{r4, r5, r6, pc}

00014f74 <mcsimple_init@@Base>:
   14f74:	push	{r4, r5, r6, lr}
   14f78:	mov	r4, r0
   14f7c:	mov	r6, r3
   14f80:	str	r3, [r4]
   14f84:	mov	r3, #0
   14f88:	mov	r0, r1
   14f8c:	str	r1, [r4, #8]
   14f90:	str	r3, [r4, #16]
   14f94:	str	r3, [r4, #12]
   14f98:	mov	r1, #4
   14f9c:	mov	r5, r2
   14fa0:	bl	ff14 <mycore_calloc@plt>
   14fa4:	cmp	r0, #0
   14fa8:	str	r0, [r4, #4]
   14fac:	popeq	{r4, r5, r6, pc}
   14fb0:	mul	r5, r5, r6
   14fb4:	ldr	r1, [r4, #12]
   14fb8:	str	r5, [r4, #20]
   14fbc:	mov	r0, r4
   14fc0:	pop	{r4, r5, r6, lr}
   14fc4:	b	10994 <mcsimple_init_list_entries@plt>

00014fc8 <mcsimple_malloc@@Base>:
   14fc8:	ldr	r2, [r0, #24]
   14fcc:	ldr	r3, [r0, #20]
   14fd0:	push	{r4, lr}
   14fd4:	cmp	r2, r3
   14fd8:	mov	r4, r0
   14fdc:	bcs	15004 <mcsimple_malloc@@Base+0x3c>
   14fe0:	ldr	r2, [r4, #24]
   14fe4:	ldr	r3, [r4]
   14fe8:	ldr	r1, [r4, #12]
   14fec:	add	r3, r3, r2
   14ff0:	str	r3, [r4, #24]
   14ff4:	ldr	r3, [r4, #4]
   14ff8:	ldr	r0, [r3, r1, lsl #2]
   14ffc:	add	r0, r0, r2
   15000:	pop	{r4, pc}
   15004:	ldr	r1, [r0, #12]
   15008:	add	r1, r1, #1
   1500c:	str	r1, [r0, #12]
   15010:	bl	10994 <mcsimple_init_list_entries@plt>
   15014:	cmp	r0, #0
   15018:	bne	14fe0 <mcsimple_malloc@@Base+0x18>
   1501c:	pop	{r4, pc}

00015020 <mcsimple_get_by_absolute_position@@Base>:
   15020:	push	{r4, r5, r6, r7, r8, lr}
   15024:	mov	r5, r0
   15028:	ldr	r4, [r0]
   1502c:	ldr	r7, [r0, #20]
   15030:	mul	r4, r4, r1
   15034:	mov	r1, r7
   15038:	mov	r0, r4
   1503c:	bl	2931c <mcsync_mutex_unlock@@Base+0x14>
   15040:	ldr	r3, [r5, #16]
   15044:	cmp	r0, r3
   15048:	bcs	1506c <mcsimple_get_by_absolute_position@@Base+0x4c>
   1504c:	mov	r6, r0
   15050:	mov	r1, r7
   15054:	mov	r0, r4
   15058:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   1505c:	ldr	r5, [r5, #4]
   15060:	ldr	r0, [r5, r6, lsl #2]
   15064:	add	r0, r0, r1
   15068:	pop	{r4, r5, r6, r7, r8, pc}
   1506c:	mov	r0, #0
   15070:	pop	{r4, r5, r6, r7, r8, pc}

00015074 <mcsync_create@@Base>:
   15074:	mov	r1, #8
   15078:	mov	r0, #1
   1507c:	b	ff14 <mycore_calloc@plt>

00015080 <mcsync_init@@Base>:
   15080:	push	{r4, r5, r6, lr}
   15084:	mov	r4, r0
   15088:	bl	1055c <mcsync_spin_create@plt>
   1508c:	cmp	r0, #0
   15090:	str	r0, [r4]
   15094:	bne	150a4 <mcsync_init@@Base+0x24>
   15098:	mov	r5, #1
   1509c:	mov	r0, r5
   150a0:	pop	{r4, r5, r6, pc}
   150a4:	bl	104fc <mcsync_spin_init@plt>
   150a8:	subs	r5, r0, #0
   150ac:	beq	150bc <mcsync_init@@Base+0x3c>
   150b0:	ldr	r0, [r4]
   150b4:	bl	ffa4 <mcsync_spin_destroy@plt>
   150b8:	b	1509c <mcsync_init@@Base+0x1c>
   150bc:	bl	108c8 <mcsync_mutex_create@plt>
   150c0:	cmp	r0, #0
   150c4:	str	r0, [r4, #4]
   150c8:	beq	15098 <mcsync_init@@Base+0x18>
   150cc:	bl	10b50 <mcsync_mutex_init@plt>
   150d0:	subs	r5, r0, #0
   150d4:	beq	1509c <mcsync_init@@Base+0x1c>
   150d8:	ldr	r0, [r4]
   150dc:	bl	ffa4 <mcsync_spin_destroy@plt>
   150e0:	ldr	r0, [r4, #4]
   150e4:	bl	fd70 <mcsync_mutex_destroy@plt>
   150e8:	b	1509c <mcsync_init@@Base+0x1c>

000150ec <mcsync_clean@@Base>:
   150ec:	push	{r4, lr}
   150f0:	mov	r4, r0
   150f4:	ldr	r0, [r0]
   150f8:	bl	10a78 <mcsync_spin_clean@plt>
   150fc:	ldr	r0, [r4, #4]
   15100:	pop	{r4, lr}
   15104:	b	10e50 <mcsync_mutex_clean@plt>

00015108 <mcsync_destroy@@Base>:
   15108:	push	{r4, r5, r6, lr}
   1510c:	subs	r4, r0, #0
   15110:	beq	1513c <mcsync_destroy@@Base+0x34>
   15114:	ldr	r0, [r4]
   15118:	mov	r5, r1
   1511c:	bl	ffa4 <mcsync_spin_destroy@plt>
   15120:	ldr	r0, [r4, #4]
   15124:	bl	fd70 <mcsync_mutex_destroy@plt>
   15128:	cmp	r5, #0
   1512c:	beq	1513c <mcsync_destroy@@Base+0x34>
   15130:	mov	r0, r4
   15134:	bl	10dcc <mycore_free@plt>
   15138:	mov	r4, #0
   1513c:	mov	r0, r4
   15140:	pop	{r4, r5, r6, pc}

00015144 <mcsync_lock@@Base>:
   15144:	ldr	r0, [r0]
   15148:	b	105b0 <mcsync_spin_lock@plt>

0001514c <mcsync_unlock@@Base>:
   1514c:	ldr	r0, [r0]
   15150:	b	11024 <mcsync_spin_unlock@plt>

00015154 <mctree_create@@Base>:
   15154:	push	{r4, r5, r6, lr}
   15158:	mov	r5, r0
   1515c:	mov	r0, #16
   15160:	bl	10c94 <mycore_malloc@plt>
   15164:	subs	r4, r0, #0
   15168:	beq	151a4 <mctree_create@@Base+0x50>
   1516c:	add	r0, r5, #512	; 0x200
   15170:	add	r3, r5, #1
   15174:	str	r0, [r4, #8]
   15178:	str	r3, [r4, #4]
   1517c:	mov	r1, #28
   15180:	bl	ff14 <mycore_calloc@plt>
   15184:	cmp	r0, #0
   15188:	mov	r6, r0
   1518c:	str	r0, [r4]
   15190:	strne	r5, [r4, #12]
   15194:	bne	151a4 <mctree_create@@Base+0x50>
   15198:	mov	r0, r4
   1519c:	bl	10dcc <mycore_free@plt>
   151a0:	mov	r4, r6
   151a4:	mov	r0, r4
   151a8:	pop	{r4, r5, r6, pc}

000151ac <mctree_clean@@Base>:
   151ac:	ldr	r3, [r0, #12]
   151b0:	mov	r2, #28
   151b4:	add	r3, r3, #1
   151b8:	str	r3, [r0, #4]
   151bc:	ldr	r3, [r0, #8]
   151c0:	mov	r1, #0
   151c4:	ldr	r0, [r0]
   151c8:	mul	r2, r2, r3
   151cc:	b	108b0 <memset@plt>

000151d0 <mctree_destroy@@Base>:
   151d0:	push	{r4, lr}
   151d4:	subs	r4, r0, #0
   151d8:	beq	151f4 <mctree_destroy@@Base+0x24>
   151dc:	ldr	r0, [r4]
   151e0:	cmp	r0, #0
   151e4:	beq	151ec <mctree_destroy@@Base+0x1c>
   151e8:	bl	10dcc <mycore_free@plt>
   151ec:	mov	r0, r4
   151f0:	bl	10dcc <mycore_free@plt>
   151f4:	mov	r0, #0
   151f8:	pop	{r4, pc}

000151fc <__mtree_search_lowercase_to_start@@Base>:
   151fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15200:	mov	r9, r2
   15204:	ldr	r5, [r0]
   15208:	mov	r6, r3
   1520c:	mov	r4, r1
   15210:	mov	r8, #28
   15214:	cmp	r4, #0
   15218:	bne	15224 <__mtree_search_lowercase_to_start@@Base+0x28>
   1521c:	mov	r0, r4
   15220:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15224:	mul	r3, r8, r4
   15228:	add	r7, r5, r3
   1522c:	ldr	r2, [r7, #4]
   15230:	cmp	r2, r6
   15234:	bne	15258 <__mtree_search_lowercase_to_start@@Base+0x5c>
   15238:	mov	r2, r6
   1523c:	ldr	r1, [r5, r3]
   15240:	mov	r0, r9
   15244:	bl	102a4 <mycore_strncasecmp@plt>
   15248:	cmp	r0, #0
   1524c:	beq	1521c <__mtree_search_lowercase_to_start@@Base+0x20>
   15250:	ldr	r4, [r7, #24]
   15254:	b	15214 <__mtree_search_lowercase_to_start@@Base+0x18>
   15258:	bcs	15278 <__mtree_search_lowercase_to_start@@Base+0x7c>
   1525c:	ldr	r4, [r7, #20]
   15260:	mla	r3, r8, r4, r5
   15264:	ldr	r3, [r3, #4]
   15268:	cmp	r6, r3
   1526c:	bcs	15214 <__mtree_search_lowercase_to_start@@Base+0x18>
   15270:	mov	r4, #0
   15274:	b	1521c <__mtree_search_lowercase_to_start@@Base+0x20>
   15278:	ldr	r4, [r7, #16]
   1527c:	mla	r3, r8, r4, r5
   15280:	ldr	r3, [r3, #4]
   15284:	cmp	r6, r3
   15288:	bls	15214 <__mtree_search_lowercase_to_start@@Base+0x18>
   1528c:	b	15270 <__mtree_search_lowercase_to_start@@Base+0x74>

00015290 <__mtree_search_to_start@@Base>:
   15290:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15294:	mov	r9, r2
   15298:	ldr	r5, [r0]
   1529c:	mov	r6, r3
   152a0:	mov	r4, r1
   152a4:	mov	r8, #28
   152a8:	cmp	r4, #0
   152ac:	bne	152b8 <__mtree_search_to_start@@Base+0x28>
   152b0:	mov	r0, r4
   152b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152b8:	mul	r3, r8, r4
   152bc:	add	r7, r5, r3
   152c0:	ldr	r2, [r7, #4]
   152c4:	cmp	r2, r6
   152c8:	bne	152ec <__mtree_search_to_start@@Base+0x5c>
   152cc:	mov	r2, r6
   152d0:	ldr	r1, [r5, r3]
   152d4:	mov	r0, r9
   152d8:	bl	10070 <memcmp@plt>
   152dc:	cmp	r0, #0
   152e0:	beq	152b0 <__mtree_search_to_start@@Base+0x20>
   152e4:	ldr	r4, [r7, #24]
   152e8:	b	152a8 <__mtree_search_to_start@@Base+0x18>
   152ec:	bcs	1530c <__mtree_search_to_start@@Base+0x7c>
   152f0:	ldr	r4, [r7, #20]
   152f4:	mla	r3, r8, r4, r5
   152f8:	ldr	r3, [r3, #4]
   152fc:	cmp	r6, r3
   15300:	bcs	152a8 <__mtree_search_to_start@@Base+0x18>
   15304:	mov	r4, #0
   15308:	b	152b0 <__mtree_search_to_start@@Base+0x20>
   1530c:	ldr	r4, [r7, #16]
   15310:	mla	r3, r8, r4, r5
   15314:	ldr	r3, [r3, #4]
   15318:	cmp	r6, r3
   1531c:	bls	152a8 <__mtree_search_to_start@@Base+0x18>
   15320:	b	15304 <__mtree_search_to_start@@Base+0x74>

00015324 <mctree_insert_child@@Base>:
   15324:	push	{r4, r5, r6, lr}
   15328:	mov	ip, #28
   1532c:	mov	r4, r0
   15330:	ldr	r0, [r0]
   15334:	ldr	r5, [r4, #4]
   15338:	mla	r1, ip, r1, r0
   1533c:	str	r5, [r1, #24]
   15340:	mul	r1, ip, r5
   15344:	add	ip, r0, r1
   15348:	str	r2, [r0, r1]
   1534c:	str	r3, [ip, #4]
   15350:	ldr	r3, [sp, #16]
   15354:	ldr	r2, [r4, #8]
   15358:	str	r3, [ip, #8]
   1535c:	add	r3, r5, #1
   15360:	cmp	r3, r2
   15364:	str	r3, [r4, #4]
   15368:	bcc	15388 <mctree_insert_child@@Base+0x64>
   1536c:	add	r3, r5, #4096	; 0x1000
   15370:	add	r3, r3, #1
   15374:	add	r1, r1, #114688	; 0x1c000
   15378:	str	r3, [r4, #8]
   1537c:	add	r1, r1, #28
   15380:	bl	fbd8 <mycore_realloc@plt>
   15384:	str	r0, [r4]
   15388:	ldr	r3, [r4, #4]
   1538c:	mov	r1, #28
   15390:	ldr	r0, [r4]
   15394:	mul	r1, r1, r3
   15398:	mov	r3, #0
   1539c:	add	r2, r0, r1
   153a0:	str	r3, [r0, r1]
   153a4:	str	r3, [r2, #8]
   153a8:	str	r3, [r2, #12]
   153ac:	str	r3, [r2, #16]
   153b0:	str	r3, [r2, #20]
   153b4:	str	r3, [r2, #24]
   153b8:	mov	r0, r5
   153bc:	pop	{r4, r5, r6, pc}

000153c0 <mctree_insert_after@@Base>:
   153c0:	push	{r4, r5, r6, r7, r8, lr}
   153c4:	mov	ip, #28
   153c8:	mov	r4, r0
   153cc:	ldr	r0, [r0]
   153d0:	ldr	r5, [r4, #4]
   153d4:	mla	r6, ip, r1, r0
   153d8:	ldr	lr, [r6, #20]
   153dc:	cmp	lr, #0
   153e0:	mlane	r7, ip, lr, r0
   153e4:	mlane	ip, ip, r5, r0
   153e8:	strne	r5, [r7, #16]
   153ec:	strne	lr, [ip, #20]
   153f0:	mov	ip, #28
   153f4:	str	r5, [r6, #20]
   153f8:	mul	ip, ip, r5
   153fc:	add	lr, r0, ip
   15400:	str	r1, [lr, #16]
   15404:	str	r2, [r0, ip]
   15408:	str	r3, [lr, #4]
   1540c:	ldr	r3, [sp, #24]
   15410:	ldr	r2, [r4, #8]
   15414:	str	r3, [lr, #8]
   15418:	add	r3, r5, #1
   1541c:	cmp	r3, r2
   15420:	str	r3, [r4, #4]
   15424:	bcc	15444 <mctree_insert_after@@Base+0x84>
   15428:	add	r3, r5, #4096	; 0x1000
   1542c:	add	r3, r3, #1
   15430:	add	r1, ip, #114688	; 0x1c000
   15434:	str	r3, [r4, #8]
   15438:	add	r1, r1, #28
   1543c:	bl	fbd8 <mycore_realloc@plt>
   15440:	str	r0, [r4]
   15444:	ldr	r3, [r4, #4]
   15448:	mov	r1, #28
   1544c:	ldr	r0, [r4]
   15450:	mul	r1, r1, r3
   15454:	mov	r3, #0
   15458:	add	r2, r0, r1
   1545c:	str	r3, [r0, r1]
   15460:	str	r3, [r2, #8]
   15464:	str	r3, [r2, #12]
   15468:	str	r3, [r2, #16]
   1546c:	str	r3, [r2, #20]
   15470:	str	r3, [r2, #24]
   15474:	mov	r0, r5
   15478:	pop	{r4, r5, r6, r7, r8, pc}

0001547c <mctree_insert_before@@Base>:
   1547c:	push	{r4, r5, r6, r7, r8, lr}
   15480:	mov	ip, #28
   15484:	mov	r4, r0
   15488:	ldr	r0, [r0]
   1548c:	ldr	r5, [r4, #4]
   15490:	mla	r6, ip, r1, r0
   15494:	ldr	lr, [r6, #16]
   15498:	cmp	lr, #0
   1549c:	mlane	r7, ip, lr, r0
   154a0:	mlane	ip, ip, r5, r0
   154a4:	strne	r5, [r7, #20]
   154a8:	strne	lr, [ip, #16]
   154ac:	mov	ip, #28
   154b0:	str	r5, [r6, #16]
   154b4:	mul	ip, ip, r5
   154b8:	add	lr, r0, ip
   154bc:	str	r1, [lr, #20]
   154c0:	str	r2, [r0, ip]
   154c4:	str	r3, [lr, #4]
   154c8:	ldr	r3, [sp, #24]
   154cc:	ldr	r2, [r4, #8]
   154d0:	str	r3, [lr, #8]
   154d4:	add	r3, r5, #1
   154d8:	cmp	r3, r2
   154dc:	str	r3, [r4, #4]
   154e0:	bcc	15500 <mctree_insert_before@@Base+0x84>
   154e4:	add	r3, r5, #4096	; 0x1000
   154e8:	add	r3, r3, #1
   154ec:	add	r1, ip, #114688	; 0x1c000
   154f0:	str	r3, [r4, #8]
   154f4:	add	r1, r1, #28
   154f8:	bl	fbd8 <mycore_realloc@plt>
   154fc:	str	r0, [r4]
   15500:	ldr	r3, [r4, #4]
   15504:	mov	r1, #28
   15508:	ldr	r0, [r4]
   1550c:	mul	r1, r1, r3
   15510:	mov	r3, #0
   15514:	add	r2, r0, r1
   15518:	str	r3, [r0, r1]
   1551c:	str	r3, [r2, #8]
   15520:	str	r3, [r2, #12]
   15524:	str	r3, [r2, #16]
   15528:	str	r3, [r2, #20]
   1552c:	str	r3, [r2, #24]
   15530:	mov	r0, r5
   15534:	pop	{r4, r5, r6, r7, r8, pc}

00015538 <__mtree_insert_to_start@@Base>:
   15538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1553c:	sub	sp, sp, #20
   15540:	ldr	r8, [r0]
   15544:	ldr	r7, [sp, #60]	; 0x3c
   15548:	mov	r9, r0
   1554c:	mov	r6, r2
   15550:	mov	r5, r3
   15554:	mov	r4, r1
   15558:	mov	fp, #28
   1555c:	cmp	r4, #0
   15560:	beq	155a4 <__mtree_insert_to_start@@Base+0x6c>
   15564:	mul	r1, fp, r4
   15568:	add	r3, r8, r1
   1556c:	ldr	sl, [r3, #4]
   15570:	cmp	sl, r5
   15574:	bne	155f8 <__mtree_insert_to_start@@Base+0xc0>
   15578:	mov	r2, r5
   1557c:	ldr	r1, [r8, r1]
   15580:	mov	r0, r6
   15584:	str	r3, [sp, #12]
   15588:	bl	10070 <memcmp@plt>
   1558c:	ldr	r3, [sp, #12]
   15590:	cmp	r0, #0
   15594:	bne	155b0 <__mtree_insert_to_start@@Base+0x78>
   15598:	ldr	r2, [sp, #56]	; 0x38
   1559c:	cmp	r2, #0
   155a0:	strne	r2, [r3, #8]
   155a4:	mov	r0, r4
   155a8:	add	sp, sp, #20
   155ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155b0:	ldr	r3, [r3, #24]
   155b4:	cmp	r3, #0
   155b8:	bne	15640 <__mtree_insert_to_start@@Base+0x108>
   155bc:	cmp	r7, #0
   155c0:	beq	155d4 <__mtree_insert_to_start@@Base+0x9c>
   155c4:	add	r2, sp, #56	; 0x38
   155c8:	mov	r1, r5
   155cc:	mov	r0, r6
   155d0:	blx	r7
   155d4:	ldr	r3, [sp, #56]	; 0x38
   155d8:	mov	r2, r6
   155dc:	str	r3, [sp]
   155e0:	mov	r1, r4
   155e4:	mov	r3, sl
   155e8:	mov	r0, r9
   155ec:	bl	10244 <mctree_insert_child@plt>
   155f0:	mov	r4, r0
   155f4:	b	155a4 <__mtree_insert_to_start@@Base+0x6c>
   155f8:	bcs	1565c <__mtree_insert_to_start@@Base+0x124>
   155fc:	ldr	r3, [r3, #20]
   15600:	cmp	r3, #0
   15604:	bne	15630 <__mtree_insert_to_start@@Base+0xf8>
   15608:	cmp	r7, #0
   1560c:	bne	15648 <__mtree_insert_to_start@@Base+0x110>
   15610:	ldr	r3, [sp, #56]	; 0x38
   15614:	mov	r2, r6
   15618:	str	r3, [sp]
   1561c:	mov	r1, r4
   15620:	mov	r3, r5
   15624:	mov	r0, r9
   15628:	bl	10cc4 <mctree_insert_after@plt>
   1562c:	b	155f0 <__mtree_insert_to_start@@Base+0xb8>
   15630:	mla	r2, fp, r3, r8
   15634:	ldr	r2, [r2, #4]
   15638:	cmp	r5, r2
   1563c:	bcc	15608 <__mtree_insert_to_start@@Base+0xd0>
   15640:	mov	r4, r3
   15644:	b	1555c <__mtree_insert_to_start@@Base+0x24>
   15648:	add	r2, sp, #56	; 0x38
   1564c:	mov	r1, r5
   15650:	mov	r0, r6
   15654:	blx	r7
   15658:	b	15610 <__mtree_insert_to_start@@Base+0xd8>
   1565c:	ldr	r3, [r3, #16]
   15660:	cmp	r3, #0
   15664:	bne	15690 <__mtree_insert_to_start@@Base+0x158>
   15668:	cmp	r7, #0
   1566c:	bne	156a4 <__mtree_insert_to_start@@Base+0x16c>
   15670:	ldr	r3, [sp, #56]	; 0x38
   15674:	mov	r2, r6
   15678:	str	r3, [sp]
   1567c:	mov	r1, r4
   15680:	mov	r3, r5
   15684:	mov	r0, r9
   15688:	bl	100ac <mctree_insert_before@plt>
   1568c:	b	155f0 <__mtree_insert_to_start@@Base+0xb8>
   15690:	mla	r2, fp, r3, r8
   15694:	ldr	r2, [r2, #4]
   15698:	cmp	r5, r2
   1569c:	bls	15640 <__mtree_insert_to_start@@Base+0x108>
   156a0:	b	15668 <__mtree_insert_to_start@@Base+0x130>
   156a4:	add	r2, sp, #56	; 0x38
   156a8:	mov	r1, r5
   156ac:	mov	r0, r6
   156b0:	blx	r7
   156b4:	b	15670 <__mtree_insert_to_start@@Base+0x138>

000156b8 <mctree_insert@@Base>:
   156b8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   156bc:	subs	r4, r2, #0
   156c0:	str	r3, [sp, #12]
   156c4:	ldr	r7, [sp, #40]	; 0x28
   156c8:	moveq	r0, r4
   156cc:	beq	15738 <mctree_insert@@Base+0x80>
   156d0:	add	r2, r1, r4
   156d4:	ldr	r3, [pc, #156]	; 15778 <mctree_insert@@Base+0xc0>
   156d8:	ldrb	r2, [r2, #-1]
   156dc:	add	r3, pc, r3
   156e0:	mov	r6, r0
   156e4:	mov	r5, r1
   156e8:	ldrb	r0, [r3, r2]
   156ec:	ldrb	r2, [r1]
   156f0:	ldr	r1, [r6, #12]
   156f4:	ldrb	r3, [r3, r2]
   156f8:	add	r0, r0, r3
   156fc:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   15700:	ldr	r2, [r6]
   15704:	mov	r3, #28
   15708:	add	r8, r1, #1
   1570c:	mla	r3, r3, r8, r2
   15710:	ldr	r1, [r3, #24]
   15714:	cmp	r1, #0
   15718:	beq	15740 <mctree_insert@@Base+0x88>
   1571c:	ldr	r3, [sp, #12]
   15720:	str	r7, [sp, #4]
   15724:	str	r3, [sp]
   15728:	mov	r2, r5
   1572c:	mov	r3, r4
   15730:	mov	r0, r6
   15734:	bl	103b8 <__mtree_insert_to_start@plt>
   15738:	add	sp, sp, #16
   1573c:	pop	{r4, r5, r6, r7, r8, pc}
   15740:	cmp	r7, #0
   15744:	beq	15758 <mctree_insert@@Base+0xa0>
   15748:	add	r2, sp, #12
   1574c:	mov	r1, r4
   15750:	mov	r0, r5
   15754:	blx	r7
   15758:	ldr	r3, [sp, #12]
   1575c:	mov	r2, r5
   15760:	str	r3, [sp]
   15764:	mov	r1, r8
   15768:	mov	r3, r4
   1576c:	mov	r0, r6
   15770:	bl	10244 <mctree_insert_child@plt>
   15774:	b	15738 <mctree_insert@@Base+0x80>
   15778:	andeq	r4, r1, ip, asr r3

0001577c <mctree_search@@Base>:
   1577c:	push	{r4, r5, r6, lr}
   15780:	subs	r6, r2, #0
   15784:	beq	157e8 <mctree_search@@Base+0x6c>
   15788:	mov	r5, r1
   1578c:	add	r3, r5, r6
   15790:	ldr	r1, [pc, #92]	; 157f4 <mctree_search@@Base+0x78>
   15794:	ldrb	r3, [r3, #-1]
   15798:	add	r1, pc, r1
   1579c:	mov	r4, r0
   157a0:	ldrb	r0, [r1, r3]
   157a4:	ldrb	r3, [r5]
   157a8:	ldrb	r3, [r1, r3]
   157ac:	ldr	r1, [r4, #12]
   157b0:	add	r0, r0, r3
   157b4:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   157b8:	ldr	r3, [r4]
   157bc:	mov	r2, #28
   157c0:	add	r1, r1, #1
   157c4:	mla	r1, r2, r1, r3
   157c8:	ldr	r1, [r1, #24]
   157cc:	cmp	r1, #0
   157d0:	beq	157ec <mctree_search@@Base+0x70>
   157d4:	mov	r3, r6
   157d8:	mov	r2, r5
   157dc:	mov	r0, r4
   157e0:	pop	{r4, r5, r6, lr}
   157e4:	b	109e8 <__mtree_search_to_start@plt>
   157e8:	mov	r1, r6
   157ec:	mov	r0, r1
   157f0:	pop	{r4, r5, r6, pc}
   157f4:	andeq	r4, r1, r0, lsr #5

000157f8 <mctree_search_lowercase@@Base>:
   157f8:	push	{r4, r5, r6, lr}
   157fc:	subs	r6, r2, #0
   15800:	beq	15864 <mctree_search_lowercase@@Base+0x6c>
   15804:	mov	r5, r1
   15808:	add	r3, r5, r6
   1580c:	ldr	r1, [pc, #92]	; 15870 <mctree_search_lowercase@@Base+0x78>
   15810:	ldrb	r3, [r3, #-1]
   15814:	add	r1, pc, r1
   15818:	mov	r4, r0
   1581c:	ldrb	r0, [r1, r3]
   15820:	ldrb	r3, [r5]
   15824:	ldrb	r3, [r1, r3]
   15828:	ldr	r1, [r4, #12]
   1582c:	add	r0, r0, r3
   15830:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   15834:	ldr	r3, [r4]
   15838:	mov	r2, #28
   1583c:	add	r1, r1, #1
   15840:	mla	r1, r2, r1, r3
   15844:	ldr	r1, [r1, #24]
   15848:	cmp	r1, #0
   1584c:	beq	15868 <mctree_search_lowercase@@Base+0x70>
   15850:	mov	r3, r6
   15854:	mov	r2, r5
   15858:	mov	r0, r4
   1585c:	pop	{r4, r5, r6, lr}
   15860:	b	10f1c <__mtree_search_lowercase_to_start@plt>
   15864:	mov	r1, r6
   15868:	mov	r0, r1
   1586c:	pop	{r4, r5, r6, pc}
   15870:	andeq	r4, r1, r4, lsr #4

00015874 <mycore_utils_mhash_hash@@Base>:
   15874:	add	r1, r0, r1
   15878:	mov	r3, #0
   1587c:	push	{r4, lr}
   15880:	cmp	r1, r0
   15884:	bne	158a4 <mycore_utils_mhash_hash@@Base+0x30>
   15888:	add	r0, r3, r3, lsl #3
   1588c:	mov	r1, r2
   15890:	eor	r0, r0, r0, lsr #11
   15894:	add	r0, r0, r0, lsl #15
   15898:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   1589c:	mov	r0, r1
   158a0:	pop	{r4, pc}
   158a4:	ldrb	ip, [r0], #1
   158a8:	add	r3, ip, r3
   158ac:	add	r3, r3, r3, lsl #10
   158b0:	eor	r3, r3, r3, lsr #6
   158b4:	b	15880 <mycore_utils_mhash_hash@@Base+0xc>

000158b8 <mycore_utils_mhash_create@@Base>:
   158b8:	mov	r1, #24
   158bc:	mov	r0, #1
   158c0:	b	ff14 <mycore_calloc@plt>

000158c4 <mycore_utils_mhash_init@@Base>:
   158c4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   158c8:	mov	r5, r0
   158cc:	mov	r6, r1
   158d0:	mov	r7, r2
   158d4:	bl	10160 <mchar_async_create@plt>
   158d8:	cmp	r0, #0
   158dc:	str	r0, [r5]
   158e0:	bne	158f4 <mycore_utils_mhash_init@@Base+0x30>
   158e4:	mov	r4, #2
   158e8:	mov	r0, r4
   158ec:	add	sp, sp, #12
   158f0:	pop	{r4, r5, r6, r7, pc}
   158f4:	mov	r2, #4096	; 0x1000
   158f8:	mov	r1, #128	; 0x80
   158fc:	bl	104a8 <mchar_async_init@plt>
   15900:	cmp	r0, #0
   15904:	mov	r4, r0
   15908:	str	r0, [sp, #4]
   1590c:	bne	158e8 <mycore_utils_mhash_init@@Base+0x24>
   15910:	add	r1, sp, #4
   15914:	ldr	r0, [r5]
   15918:	bl	10298 <mchar_async_node_add@plt>
   1591c:	ldr	r4, [sp, #4]
   15920:	cmp	r4, #0
   15924:	str	r0, [r5, #4]
   15928:	bne	158e8 <mycore_utils_mhash_init@@Base+0x24>
   1592c:	cmp	r6, #128	; 0x80
   15930:	movcc	r6, #128	; 0x80
   15934:	mov	r1, #4
   15938:	mov	r0, r6
   1593c:	bl	ff14 <mycore_calloc@plt>
   15940:	cmp	r0, #0
   15944:	str	r0, [r5, #8]
   15948:	beq	158e4 <mycore_utils_mhash_init@@Base+0x20>
   1594c:	cmp	r7, #0
   15950:	moveq	r7, #1
   15954:	str	r7, [r5, #20]
   15958:	str	r6, [r5, #12]
   1595c:	b	158e8 <mycore_utils_mhash_init@@Base+0x24>

00015960 <mycore_utils_mhash_clean@@Base>:
   15960:	push	{r4, lr}
   15964:	mov	r4, r0
   15968:	ldr	r0, [r0]
   1596c:	bl	10bc8 <mchar_async_clean@plt>
   15970:	ldr	r2, [r4, #12]
   15974:	ldr	r0, [r4, #8]
   15978:	mov	r1, #0
   1597c:	lsl	r2, r2, #2
   15980:	pop	{r4, lr}
   15984:	b	108b0 <memset@plt>

00015988 <mycore_utils_mhash_destroy@@Base>:
   15988:	push	{r4, r5, r6, lr}
   1598c:	subs	r4, r0, #0
   15990:	beq	159c4 <mycore_utils_mhash_destroy@@Base+0x3c>
   15994:	ldr	r0, [r4, #8]
   15998:	mov	r5, r1
   1599c:	cmp	r0, #0
   159a0:	beq	159b0 <mycore_utils_mhash_destroy@@Base+0x28>
   159a4:	bl	10dcc <mycore_free@plt>
   159a8:	mov	r3, #0
   159ac:	str	r3, [r4, #8]
   159b0:	cmp	r5, #0
   159b4:	beq	159c4 <mycore_utils_mhash_destroy@@Base+0x3c>
   159b8:	ldr	r0, [r4, #8]
   159bc:	bl	10dcc <mycore_free@plt>
   159c0:	mov	r4, #0
   159c4:	mov	r0, r4
   159c8:	pop	{r4, r5, r6, pc}

000159cc <mycore_utils_mhash_create_entry@@Base>:
   159cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159d0:	mov	r5, r0
   159d4:	mov	r6, r2
   159d8:	mov	r9, r1
   159dc:	mov	r2, #16
   159e0:	ldm	r0, {r0, r1}
   159e4:	mov	r8, r3
   159e8:	bl	10910 <mchar_async_malloc@plt>
   159ec:	add	r2, r6, #1
   159f0:	mov	r4, r0
   159f4:	ldm	r5, {r0, r1}
   159f8:	bl	10910 <mchar_async_malloc@plt>
   159fc:	cmp	r0, #0
   15a00:	str	r0, [r4]
   15a04:	bne	15a24 <mycore_utils_mhash_create_entry@@Base+0x58>
   15a08:	mov	r7, r0
   15a0c:	mov	r2, r4
   15a10:	ldm	r5, {r0, r1}
   15a14:	bl	10718 <mchar_async_free@plt>
   15a18:	mov	r4, r7
   15a1c:	mov	r0, r4
   15a20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a24:	mov	r2, r6
   15a28:	mov	r1, r9
   15a2c:	bl	ff5c <memcpy@plt>
   15a30:	ldr	r2, [r4]
   15a34:	mov	r3, #0
   15a38:	strb	r3, [r2, r6]
   15a3c:	stmib	r4, {r6, r8}
   15a40:	str	r3, [r4, #12]
   15a44:	b	15a1c <mycore_utils_mhash_create_entry@@Base+0x50>

00015a48 <mycore_utils_mhash_search@@Base>:
   15a48:	cmp	r2, #0
   15a4c:	cmpne	r1, #0
   15a50:	push	{r4, r5, r6, lr}
   15a54:	bne	15a64 <mycore_utils_mhash_search@@Base+0x1c>
   15a58:	mov	r4, #0
   15a5c:	mov	r0, r4
   15a60:	pop	{r4, r5, r6, pc}
   15a64:	mov	r5, r2
   15a68:	mov	r6, r1
   15a6c:	mov	r4, r0
   15a70:	ldr	r2, [r0, #12]
   15a74:	mov	r1, r5
   15a78:	mov	r0, r6
   15a7c:	bl	1007c <mycore_utils_mhash_hash@plt>
   15a80:	ldr	r3, [r4, #8]
   15a84:	ldr	r4, [r3, r0, lsl #2]
   15a88:	cmp	r4, #0
   15a8c:	beq	15a58 <mycore_utils_mhash_search@@Base+0x10>
   15a90:	ldr	r3, [r4, #4]
   15a94:	cmp	r5, r3
   15a98:	bne	15ab4 <mycore_utils_mhash_search@@Base+0x6c>
   15a9c:	mov	r2, r5
   15aa0:	mov	r1, r6
   15aa4:	ldr	r0, [r4]
   15aa8:	bl	10f94 <strncmp@plt>
   15aac:	cmp	r0, #0
   15ab0:	beq	15a5c <mycore_utils_mhash_search@@Base+0x14>
   15ab4:	ldr	r4, [r4, #12]
   15ab8:	b	15a88 <mycore_utils_mhash_search@@Base+0x40>

00015abc <mycore_utils_mhash_entry_by_id@@Base>:
   15abc:	ldr	r3, [r0, #12]
   15ac0:	cmp	r3, r1
   15ac4:	ldrhi	r3, [r0, #8]
   15ac8:	ldrhi	r0, [r3, r1, lsl #2]
   15acc:	movls	r0, #0
   15ad0:	bx	lr

00015ad4 <mycore_utils_mhash_get_table_size@@Base>:
   15ad4:	ldr	r0, [r0, #12]
   15ad8:	bx	lr

00015adc <mycore_utils_mhash_rebuild_add_entry@@Base>:
   15adc:	cmp	r2, #0
   15ae0:	cmpne	r1, #0
   15ae4:	push	{r4, r5, r6, lr}
   15ae8:	mov	r4, r3
   15aec:	mov	r5, r0
   15af0:	moveq	r3, #1
   15af4:	mov	r0, r1
   15af8:	movne	r3, #0
   15afc:	moveq	r4, #0
   15b00:	beq	15b38 <mycore_utils_mhash_rebuild_add_entry@@Base+0x5c>
   15b04:	mov	r1, r2
   15b08:	str	r3, [r4, #12]
   15b0c:	ldr	r2, [r5, #12]
   15b10:	bl	1007c <mycore_utils_mhash_hash@plt>
   15b14:	ldr	r2, [r5, #8]
   15b18:	ldr	r3, [r2, r0, lsl #2]
   15b1c:	cmp	r3, #0
   15b20:	streq	r4, [r2, r0, lsl #2]
   15b24:	beq	15b38 <mycore_utils_mhash_rebuild_add_entry@@Base+0x5c>
   15b28:	ldr	r2, [r3, #12]
   15b2c:	cmp	r2, #0
   15b30:	bne	15b40 <mycore_utils_mhash_rebuild_add_entry@@Base+0x64>
   15b34:	str	r4, [r3, #12]
   15b38:	mov	r0, r4
   15b3c:	pop	{r4, r5, r6, pc}
   15b40:	mov	r3, r2
   15b44:	b	15b28 <mycore_utils_mhash_rebuild_add_entry@@Base+0x4c>

00015b48 <mycore_utils_mhash_rebuld@@Base>:
   15b48:	push	{r4, r5, r6, r7, r8, lr}
   15b4c:	mov	r4, r0
   15b50:	ldr	r5, [r0, #12]
   15b54:	ldr	r7, [r0, #8]
   15b58:	mov	r1, #4
   15b5c:	lsl	r0, r5, #1
   15b60:	str	r0, [r4, #12]
   15b64:	bl	ff14 <mycore_calloc@plt>
   15b68:	cmp	r0, #0
   15b6c:	str	r0, [r4, #8]
   15b70:	movne	r6, #0
   15b74:	bne	15b94 <mycore_utils_mhash_rebuld@@Base+0x4c>
   15b78:	str	r7, [r4, #8]
   15b7c:	str	r5, [r4, #12]
   15b80:	pop	{r4, r5, r6, r7, r8, pc}
   15b84:	ldr	r5, [r7, r6, lsl #2]
   15b88:	cmp	r5, #0
   15b8c:	bne	15bb0 <mycore_utils_mhash_rebuld@@Base+0x68>
   15b90:	add	r6, r6, #1
   15b94:	ldr	r3, [r4, #12]
   15b98:	cmp	r6, r3
   15b9c:	bcc	15b84 <mycore_utils_mhash_rebuld@@Base+0x3c>
   15ba0:	mov	r0, r7
   15ba4:	bl	10dcc <mycore_free@plt>
   15ba8:	ldr	r0, [r4, #8]
   15bac:	pop	{r4, r5, r6, r7, r8, pc}
   15bb0:	mov	r3, r5
   15bb4:	ldm	r5, {r1, r2}
   15bb8:	mov	r0, r4
   15bbc:	bl	10ea4 <mycore_utils_mhash_rebuild_add_entry@plt>
   15bc0:	ldr	r5, [r5, #12]
   15bc4:	b	15b88 <mycore_utils_mhash_rebuld@@Base+0x40>

00015bc8 <mycore_utils_mhash_add_with_choice@@Base>:
   15bc8:	cmp	r2, #0
   15bcc:	cmpne	r1, #0
   15bd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15bd4:	moveq	r8, #1
   15bd8:	movne	r8, #0
   15bdc:	moveq	r5, #0
   15be0:	beq	15c54 <mycore_utils_mhash_add_with_choice@@Base+0x8c>
   15be4:	mov	r5, r2
   15be8:	mov	r6, r1
   15bec:	mov	r4, r0
   15bf0:	ldr	r2, [r0, #12]
   15bf4:	mov	r1, r5
   15bf8:	mov	r0, r6
   15bfc:	bl	1007c <mycore_utils_mhash_hash@plt>
   15c00:	ldr	r3, [r4, #8]
   15c04:	ldr	r7, [r3, r0, lsl #2]
   15c08:	mov	r9, r0
   15c0c:	cmp	r7, #0
   15c10:	bne	15c64 <mycore_utils_mhash_add_with_choice@@Base+0x9c>
   15c14:	ldr	r3, [r4, #12]
   15c18:	ldr	r2, [r4, #16]
   15c1c:	sub	r3, r3, r3, lsr #2
   15c20:	cmp	r2, r3
   15c24:	bcc	15c30 <mycore_utils_mhash_add_with_choice@@Base+0x68>
   15c28:	mov	r0, r4
   15c2c:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   15c30:	mov	r3, #0
   15c34:	mov	r2, r5
   15c38:	mov	r1, r6
   15c3c:	mov	r0, r4
   15c40:	ldr	r7, [r4, #8]
   15c44:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   15c48:	ldr	r3, [r4, #8]
   15c4c:	str	r0, [r7, r9, lsl #2]
   15c50:	ldr	r5, [r3, r9, lsl #2]
   15c54:	mov	r0, r5
   15c58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c5c:	add	r8, r8, #1
   15c60:	mov	r7, r3
   15c64:	ldr	r3, [r7, #4]
   15c68:	cmp	r5, r3
   15c6c:	bne	15c88 <mycore_utils_mhash_add_with_choice@@Base+0xc0>
   15c70:	mov	r2, r5
   15c74:	mov	r1, r6
   15c78:	ldr	r0, [r7]
   15c7c:	bl	10f94 <strncmp@plt>
   15c80:	cmp	r0, #0
   15c84:	beq	15cc4 <mycore_utils_mhash_add_with_choice@@Base+0xfc>
   15c88:	ldr	r3, [r7, #12]
   15c8c:	cmp	r3, #0
   15c90:	bne	15c5c <mycore_utils_mhash_add_with_choice@@Base+0x94>
   15c94:	mov	r2, r5
   15c98:	mov	r1, r6
   15c9c:	mov	r0, r4
   15ca0:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   15ca4:	ldr	r3, [r4, #20]
   15ca8:	cmp	r8, r3
   15cac:	mov	r5, r0
   15cb0:	str	r0, [r7, #12]
   15cb4:	bls	15c54 <mycore_utils_mhash_add_with_choice@@Base+0x8c>
   15cb8:	mov	r0, r4
   15cbc:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   15cc0:	b	15c54 <mycore_utils_mhash_add_with_choice@@Base+0x8c>
   15cc4:	mov	r5, r7
   15cc8:	b	15c54 <mycore_utils_mhash_add_with_choice@@Base+0x8c>

00015ccc <mycore_utils_mhash_add@@Base>:
   15ccc:	push	{r4, lr}
   15cd0:	mov	r4, r3
   15cd4:	bl	10db4 <mycore_utils_mhash_add_with_choice@plt>
   15cd8:	cmp	r0, #0
   15cdc:	strne	r4, [r0, #8]
   15ce0:	pop	{r4, pc}

00015ce4 <myencoding_detect_by_trigram@@Base>:
   15ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ce8:	mov	r5, #0
   15cec:	sub	sp, sp, #20
   15cf0:	mov	r7, r0
   15cf4:	mov	sl, r1
   15cf8:	mov	fp, r2
   15cfc:	mov	r8, r5
   15d00:	mov	r4, r5
   15d04:	str	r3, [sp, #4]
   15d08:	sub	r3, r2, #3
   15d0c:	str	r3, [sp, #8]
   15d10:	ldr	r3, [sp, #8]
   15d14:	cmp	r4, r3
   15d18:	bcc	15d30 <myencoding_detect_by_trigram@@Base+0x4c>
   15d1c:	mov	r0, r7
   15d20:	str	r8, [r7]
   15d24:	str	r5, [r7, #4]
   15d28:	add	sp, sp, #20
   15d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d30:	add	r3, sl, r4
   15d34:	str	r3, [sp]
   15d38:	ldrsb	r3, [sl, r4]
   15d3c:	cmp	r3, #0
   15d40:	movlt	r9, #0
   15d44:	ldrlt	r6, [sp, #4]
   15d48:	blt	15d58 <myencoding_detect_by_trigram@@Base+0x74>
   15d4c:	add	r4, r4, #1
   15d50:	b	15d10 <myencoding_detect_by_trigram@@Base+0x2c>
   15d54:	add	r9, r9, #1
   15d58:	ldr	r3, [sp, #56]	; 0x38
   15d5c:	cmp	r9, r3
   15d60:	beq	15d4c <myencoding_detect_by_trigram@@Base+0x68>
   15d64:	mov	r0, r6
   15d68:	mov	r2, #3
   15d6c:	ldr	r1, [sp]
   15d70:	str	r6, [sp, #12]
   15d74:	bl	10070 <memcmp@plt>
   15d78:	add	r6, r6, #8
   15d7c:	ldr	r3, [sp, #12]
   15d80:	cmp	r0, #0
   15d84:	bne	15d54 <myencoding_detect_by_trigram@@Base+0x70>
   15d88:	ldr	r3, [r3, #4]
   15d8c:	add	r8, r8, #1
   15d90:	add	r5, r5, r3
   15d94:	ldr	r3, [sp, #60]	; 0x3c
   15d98:	cmp	r5, r3
   15d9c:	movcs	r4, fp
   15da0:	b	15d4c <myencoding_detect_by_trigram@@Base+0x68>

00015da4 <myencoding_detect_russian_has_end@@Base>:
   15da4:	ldr	r3, [r0, #4]
   15da8:	cmp	r3, r2
   15dac:	bcs	15dc4 <myencoding_detect_russian_has_end@@Base+0x20>
   15db0:	ldr	r0, [r0]
   15db4:	cmp	r0, r1
   15db8:	movcc	r0, #0
   15dbc:	movcs	r0, #1
   15dc0:	bx	lr
   15dc4:	mov	r0, #1
   15dc8:	bx	lr

00015dcc <myencoding_detect_unicode_has_end@@Base>:
   15dcc:	push	{r4, lr}
   15dd0:	mov	r4, r1
   15dd4:	ldr	r1, [r0, #4]
   15dd8:	ldr	r0, [r0, #8]
   15ddc:	cmp	r1, #0
   15de0:	bne	15df0 <myencoding_detect_unicode_has_end@@Base+0x24>
   15de4:	clz	r0, r0
   15de8:	lsr	r0, r0, #5
   15dec:	pop	{r4, pc}
   15df0:	cmp	r0, #0
   15df4:	beq	15e14 <myencoding_detect_unicode_has_end@@Base+0x48>
   15df8:	mov	r3, #100	; 0x64
   15dfc:	mul	r0, r3, r0
   15e00:	bl	2931c <mcsync_mutex_unlock@@Base+0x14>
   15e04:	cmp	r0, r4
   15e08:	movcs	r0, #0
   15e0c:	movcc	r0, #1
   15e10:	pop	{r4, pc}
   15e14:	mov	r0, #1
   15e18:	pop	{r4, pc}

00015e1c <myencoding_detect_utf_8@@Base>:
   15e1c:	mov	ip, #0
   15e20:	push	{r4, r5, r6, lr}
   15e24:	mov	r3, ip
   15e28:	mov	r4, ip
   15e2c:	mov	r5, ip
   15e30:	cmp	r3, r2
   15e34:	bcc	15e44 <myencoding_detect_utf_8@@Base+0x28>
   15e38:	str	r5, [r0]
   15e3c:	stmib	r0, {r4, ip}
   15e40:	pop	{r4, r5, r6, pc}
   15e44:	ldrb	lr, [r1, r3]
   15e48:	tst	lr, #128	; 0x80
   15e4c:	addeq	lr, r3, #1
   15e50:	addeq	r5, r5, #1
   15e54:	beq	15e8c <myencoding_detect_utf_8@@Base+0x70>
   15e58:	and	r6, lr, #224	; 0xe0
   15e5c:	cmp	r6, #192	; 0xc0
   15e60:	bne	15e94 <myencoding_detect_utf_8@@Base+0x78>
   15e64:	add	lr, r3, #2
   15e68:	cmp	r2, lr
   15e6c:	bls	15e38 <myencoding_detect_utf_8@@Base+0x1c>
   15e70:	add	r3, r1, r3
   15e74:	ldrb	r3, [r3, #1]
   15e78:	tst	r3, #128	; 0x80
   15e7c:	beq	15efc <myencoding_detect_utf_8@@Base+0xe0>
   15e80:	tst	r3, #64	; 0x40
   15e84:	addeq	r4, r4, #1
   15e88:	bne	15efc <myencoding_detect_utf_8@@Base+0xe0>
   15e8c:	mov	r3, lr
   15e90:	b	15e30 <myencoding_detect_utf_8@@Base+0x14>
   15e94:	and	r6, lr, #240	; 0xf0
   15e98:	cmp	r6, #224	; 0xe0
   15e9c:	bne	15ec8 <myencoding_detect_utf_8@@Base+0xac>
   15ea0:	add	lr, r3, #3
   15ea4:	cmp	r2, lr
   15ea8:	bls	15e38 <myencoding_detect_utf_8@@Base+0x1c>
   15eac:	add	r3, r1, r3
   15eb0:	ldrb	r6, [r3, #2]
   15eb4:	tst	r6, #128	; 0x80
   15eb8:	beq	15efc <myencoding_detect_utf_8@@Base+0xe0>
   15ebc:	tst	r6, #64	; 0x40
   15ec0:	bne	15efc <myencoding_detect_utf_8@@Base+0xe0>
   15ec4:	b	15e74 <myencoding_detect_utf_8@@Base+0x58>
   15ec8:	and	lr, lr, #248	; 0xf8
   15ecc:	cmp	lr, #240	; 0xf0
   15ed0:	addne	lr, r3, #1
   15ed4:	bne	15efc <myencoding_detect_utf_8@@Base+0xe0>
   15ed8:	add	lr, r3, #4
   15edc:	cmp	r2, lr
   15ee0:	bls	15e38 <myencoding_detect_utf_8@@Base+0x1c>
   15ee4:	add	r3, r1, r3
   15ee8:	ldrb	r6, [r3, #3]
   15eec:	tst	r6, #128	; 0x80
   15ef0:	beq	15efc <myencoding_detect_utf_8@@Base+0xe0>
   15ef4:	tst	r6, #64	; 0x40
   15ef8:	beq	15eb0 <myencoding_detect_utf_8@@Base+0x94>
   15efc:	add	ip, ip, #1
   15f00:	b	15e8c <myencoding_detect_utf_8@@Base+0x70>

00015f04 <myencoding_detect_utf_16@@Base>:
   15f04:	mov	r3, #0
   15f08:	push	{r4, r5, lr}
   15f0c:	add	r2, r2, #1
   15f10:	mov	ip, #1
   15f14:	mov	lr, r3
   15f18:	cmp	ip, r2
   15f1c:	sub	r4, ip, #1
   15f20:	bne	15f34 <myencoding_detect_utf_16@@Base+0x30>
   15f24:	mov	r2, #0
   15f28:	str	r3, [r0, #8]
   15f2c:	stm	r0, {r2, lr}
   15f30:	pop	{r4, r5, pc}
   15f34:	ldrb	r5, [r1], #1
   15f38:	cmp	r5, #0
   15f3c:	bne	15f58 <myencoding_detect_utf_16@@Base+0x54>
   15f40:	tst	r4, #1
   15f44:	bne	15f60 <myencoding_detect_utf_16@@Base+0x5c>
   15f48:	ldrb	r4, [r1]
   15f4c:	sub	r4, r4, #32
   15f50:	cmp	r4, #94	; 0x5e
   15f54:	addls	r3, r3, #1
   15f58:	add	ip, ip, #1
   15f5c:	b	15f18 <myencoding_detect_utf_16@@Base+0x14>
   15f60:	ldrb	r4, [r1, #-2]
   15f64:	sub	r4, r4, #32
   15f68:	cmp	r4, #94	; 0x5e
   15f6c:	addls	lr, lr, #1
   15f70:	b	15f58 <myencoding_detect_utf_16@@Base+0x54>

00015f74 <myencoding_detect_bom@@Base>:
   15f74:	cmp	r1, #2
   15f78:	bls	15fcc <myencoding_detect_bom@@Base+0x58>
   15f7c:	ldrb	r3, [r0]
   15f80:	cmp	r3, #239	; 0xef
   15f84:	bne	15fa4 <myencoding_detect_bom@@Base+0x30>
   15f88:	ldrb	r3, [r0, #1]
   15f8c:	cmp	r3, #187	; 0xbb
   15f90:	bne	15fa4 <myencoding_detect_bom@@Base+0x30>
   15f94:	ldrb	r3, [r0, #2]
   15f98:	cmp	r3, #191	; 0xbf
   15f9c:	moveq	r3, #0
   15fa0:	beq	15fc0 <myencoding_detect_bom@@Base+0x4c>
   15fa4:	ldrb	r3, [r0]
   15fa8:	cmp	r3, #254	; 0xfe
   15fac:	bne	15fd8 <myencoding_detect_bom@@Base+0x64>
   15fb0:	ldrb	r3, [r0, #1]
   15fb4:	cmp	r3, #255	; 0xff
   15fb8:	moveq	r3, #5
   15fbc:	bne	15fd0 <myencoding_detect_bom@@Base+0x5c>
   15fc0:	str	r3, [r2]
   15fc4:	mov	r0, #1
   15fc8:	bx	lr
   15fcc:	beq	15fa4 <myencoding_detect_bom@@Base+0x30>
   15fd0:	mov	r0, #0
   15fd4:	bx	lr
   15fd8:	cmp	r3, #255	; 0xff
   15fdc:	bne	15fd0 <myencoding_detect_bom@@Base+0x5c>
   15fe0:	ldrb	r3, [r0, #1]
   15fe4:	cmp	r3, #254	; 0xfe
   15fe8:	bne	15fd0 <myencoding_detect_bom@@Base+0x5c>
   15fec:	mov	r3, #4
   15ff0:	b	15fc0 <myencoding_detect_bom@@Base+0x4c>

00015ff4 <myencoding_detect_and_cut_bom@@Base>:
   15ff4:	push	{r4, r5, r6, r7, r8, lr}
   15ff8:	mov	r5, r0
   15ffc:	mov	r4, r1
   16000:	mov	r8, r2
   16004:	mov	r7, r3
   16008:	ldr	r6, [sp, #24]
   1600c:	bl	10214 <myencoding_detect_bom@plt>
   16010:	cmp	r0, #0
   16014:	popeq	{r4, r5, r6, r7, r8, pc}
   16018:	ldr	r3, [r8]
   1601c:	cmp	r3, #0
   16020:	addeq	r5, r5, #3
   16024:	subeq	r4, r4, #3
   16028:	addne	r5, r5, #2
   1602c:	subne	r4, r4, #2
   16030:	streq	r5, [r7]
   16034:	strne	r5, [r7]
   16038:	str	r4, [r6]
   1603c:	pop	{r4, r5, r6, r7, r8, pc}

00016040 <myencoding_detect_unicode@@Base>:
   16040:	push	{r4, r5, r6, r7, lr}
   16044:	sub	sp, sp, #36	; 0x24
   16048:	mov	r3, #0
   1604c:	add	r5, sp, #20
   16050:	str	r3, [r2]
   16054:	mov	r4, r0
   16058:	mov	r7, r1
   1605c:	mov	r6, r2
   16060:	mov	r2, r1
   16064:	mov	r1, r0
   16068:	mov	r0, r5
   1606c:	bl	fed8 <myencoding_detect_utf_16@plt>
   16070:	ldr	r3, [sp, #28]
   16074:	cmp	r3, #0
   16078:	bne	160c0 <myencoding_detect_unicode@@Base+0x80>
   1607c:	ldr	r3, [sp, #24]
   16080:	cmp	r3, #2
   16084:	movhi	r3, #4
   16088:	bhi	160d8 <myencoding_detect_unicode@@Base+0x98>
   1608c:	mov	r2, r7
   16090:	mov	r1, r4
   16094:	mov	r0, sp
   16098:	bl	11018 <myencoding_detect_utf_8@plt>
   1609c:	ldm	sp, {r0, r1, r2}
   160a0:	stm	r5, {r0, r1, r2}
   160a4:	mov	r1, #10
   160a8:	mov	r0, r5
   160ac:	bl	10a6c <myencoding_detect_unicode_has_end@plt>
   160b0:	cmp	r0, #0
   160b4:	movne	r3, #0
   160b8:	strne	r3, [r6]
   160bc:	b	160e0 <myencoding_detect_unicode@@Base+0xa0>
   160c0:	cmp	r3, #2
   160c4:	bls	1608c <myencoding_detect_unicode@@Base+0x4c>
   160c8:	ldr	r3, [sp, #24]
   160cc:	cmp	r3, #0
   160d0:	bne	1608c <myencoding_detect_unicode@@Base+0x4c>
   160d4:	mov	r3, #5
   160d8:	mov	r0, #1
   160dc:	str	r3, [r6]
   160e0:	add	sp, sp, #36	; 0x24
   160e4:	pop	{r4, r5, r6, r7, pc}

000160e8 <myencoding_detect_russian@@Base>:
   160e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   160ec:	mov	r3, #0
   160f0:	ldr	r8, [pc, #492]	; 162e4 <myencoding_detect_russian@@Base+0x1fc>
   160f4:	sub	sp, sp, #24
   160f8:	str	r3, [r2]
   160fc:	mov	r3, #1000	; 0x3e8
   16100:	add	r4, sp, #16
   16104:	stm	sp, {r3, r8}
   16108:	ldr	r3, [pc, #472]	; 162e8 <myencoding_detect_russian@@Base+0x200>
   1610c:	mov	r9, r0
   16110:	add	r3, pc, r3
   16114:	mov	sl, r1
   16118:	mov	r6, r2
   1611c:	mov	r2, r1
   16120:	mov	r1, r0
   16124:	mov	r0, r4
   16128:	bl	1070c <myencoding_detect_by_trigram@plt>
   1612c:	mov	r2, r8
   16130:	mov	r1, #50	; 0x32
   16134:	mov	r0, r4
   16138:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   1613c:	cmp	r0, #0
   16140:	movne	r3, #32
   16144:	bne	162c8 <myencoding_detect_russian@@Base+0x1e0>
   16148:	ldr	r7, [sp, #20]
   1614c:	add	r5, sp, #8
   16150:	cmp	r7, #0
   16154:	movne	r3, #32
   16158:	strne	r3, [r6]
   1615c:	mov	r3, #1000	; 0x3e8
   16160:	str	r3, [sp]
   16164:	ldr	r3, [pc, #384]	; 162ec <myencoding_detect_russian@@Base+0x204>
   16168:	mov	r2, sl
   1616c:	add	r3, pc, r3
   16170:	sub	r3, r3, #136	; 0x88
   16174:	mov	r1, r9
   16178:	mov	r0, r5
   1617c:	str	r8, [sp, #4]
   16180:	bl	1070c <myencoding_detect_by_trigram@plt>
   16184:	ldm	r5, {r0, r1}
   16188:	ldr	r2, [pc, #340]	; 162e4 <myencoding_detect_russian@@Base+0x1fc>
   1618c:	stm	r4, {r0, r1}
   16190:	mov	r1, #50	; 0x32
   16194:	mov	r0, r4
   16198:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   1619c:	cmp	r0, #0
   161a0:	movne	r3, #27
   161a4:	bne	162c8 <myencoding_detect_russian@@Base+0x1e0>
   161a8:	ldr	r3, [sp, #20]
   161ac:	mov	r1, r9
   161b0:	cmp	r7, r3
   161b4:	movcc	r7, r3
   161b8:	mov	r3, #1000	; 0x3e8
   161bc:	str	r3, [sp]
   161c0:	ldr	r3, [pc, #296]	; 162f0 <myencoding_detect_russian@@Base+0x208>
   161c4:	movcc	r2, #27
   161c8:	add	r3, pc, r3
   161cc:	strcc	r2, [r6]
   161d0:	sub	r3, r3, #272	; 0x110
   161d4:	mov	r2, sl
   161d8:	mov	r0, r5
   161dc:	str	r8, [sp, #4]
   161e0:	bl	1070c <myencoding_detect_by_trigram@plt>
   161e4:	ldm	r5, {r0, r1}
   161e8:	ldr	r2, [pc, #244]	; 162e4 <myencoding_detect_russian@@Base+0x1fc>
   161ec:	stm	r4, {r0, r1}
   161f0:	mov	r1, #50	; 0x32
   161f4:	mov	r0, r4
   161f8:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   161fc:	cmp	r0, #0
   16200:	movne	r3, #22
   16204:	bne	162c8 <myencoding_detect_russian@@Base+0x1e0>
   16208:	ldr	r3, [sp, #20]
   1620c:	mov	r1, r9
   16210:	cmp	r7, r3
   16214:	movcc	r7, r3
   16218:	mov	r3, #1000	; 0x3e8
   1621c:	str	r3, [sp]
   16220:	ldr	r3, [pc, #204]	; 162f4 <myencoding_detect_russian@@Base+0x20c>
   16224:	movcc	r2, #22
   16228:	add	r3, pc, r3
   1622c:	strcc	r2, [r6]
   16230:	sub	r3, r3, #408	; 0x198
   16234:	mov	r2, sl
   16238:	mov	r0, r5
   1623c:	str	r8, [sp, #4]
   16240:	bl	1070c <myencoding_detect_by_trigram@plt>
   16244:	ldm	r5, {r0, r1}
   16248:	ldr	r2, [pc, #148]	; 162e4 <myencoding_detect_russian@@Base+0x1fc>
   1624c:	stm	r4, {r0, r1}
   16250:	mov	r1, #50	; 0x32
   16254:	mov	r0, r4
   16258:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   1625c:	cmp	r0, #0
   16260:	movne	r3, #41	; 0x29
   16264:	bne	162c8 <myencoding_detect_russian@@Base+0x1e0>
   16268:	ldr	r3, [sp, #20]
   1626c:	mov	r1, r9
   16270:	cmp	r7, r3
   16274:	movcc	r7, r3
   16278:	mov	r3, #1000	; 0x3e8
   1627c:	str	r3, [sp]
   16280:	ldr	r3, [pc, #112]	; 162f8 <myencoding_detect_russian@@Base+0x210>
   16284:	movcc	r2, #41	; 0x29
   16288:	add	r3, pc, r3
   1628c:	strcc	r2, [r6]
   16290:	sub	r3, r3, #544	; 0x220
   16294:	mov	r2, sl
   16298:	mov	r0, r5
   1629c:	str	r8, [sp, #4]
   162a0:	bl	1070c <myencoding_detect_by_trigram@plt>
   162a4:	ldm	r5, {r0, r1}
   162a8:	ldr	r2, [pc, #52]	; 162e4 <myencoding_detect_russian@@Base+0x1fc>
   162ac:	stm	r4, {r0, r1}
   162b0:	mov	r1, #50	; 0x32
   162b4:	mov	r0, r4
   162b8:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   162bc:	cmp	r0, #0
   162c0:	beq	162d0 <myencoding_detect_russian@@Base+0x1e8>
   162c4:	mov	r3, #12
   162c8:	str	r3, [r6]
   162cc:	b	162dc <myencoding_detect_russian@@Base+0x1f4>
   162d0:	ldr	r3, [sp, #20]
   162d4:	cmp	r7, r3
   162d8:	bcc	162c4 <myencoding_detect_russian@@Base+0x1dc>
   162dc:	add	sp, sp, #24
   162e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162e4:	andeq	r8, r1, r0, lsr #13
   162e8:	andeq	r3, r1, r8, lsr #20
   162ec:	andeq	r5, r1, r4, asr #19
   162f0:	andeq	r7, r1, r0, ror #18
   162f4:	strdeq	r9, [r1], -r8
   162f8:	muleq	r1, r0, r8

000162fc <myencoding_detect@@Base>:
   162fc:	mov	r3, #0
   16300:	push	{r4, r5, r6, lr}
   16304:	mov	r5, r0
   16308:	str	r3, [r2]
   1630c:	mov	r6, r1
   16310:	mov	r4, r2
   16314:	bl	fc44 <myencoding_detect_unicode@plt>
   16318:	cmp	r0, #0
   1631c:	popne	{r4, r5, r6, pc}
   16320:	mov	r2, r4
   16324:	mov	r1, r6
   16328:	mov	r0, r5
   1632c:	pop	{r4, r5, r6, lr}
   16330:	b	10f4c <myencoding_detect_russian@plt>

00016334 <myencoding_name_entry_by_name@@Base>:
   16334:	add	r2, r0, r1
   16338:	push	{r4, r5, r6, r7, r8, lr}
   1633c:	mov	r6, r0
   16340:	ldr	r3, [pc, #148]	; 163dc <myencoding_name_entry_by_name@@Base+0xa8>
   16344:	ldrb	r2, [r2, #-1]
   16348:	add	r3, pc, r3
   1634c:	mov	r5, r1
   16350:	add	r2, r3, r2
   16354:	ldr	r1, [pc, #132]	; 163e0 <myencoding_name_entry_by_name@@Base+0xac>
   16358:	ldrb	r0, [r2, #-680]	; 0xfffffd58
   1635c:	ldrb	r2, [r6]
   16360:	ldr	r7, [pc, #124]	; 163e4 <myencoding_name_entry_by_name@@Base+0xb0>
   16364:	mov	r8, #28
   16368:	add	r3, r3, r2
   1636c:	add	r7, pc, r7
   16370:	ldrb	r3, [r3, #-680]	; 0xfffffd58
   16374:	smulbb	r0, r0, r3
   16378:	mul	r0, r5, r0
   1637c:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   16380:	add	r1, r1, #1
   16384:	mla	r4, r8, r1, r7
   16388:	ldr	r0, [r4, #8]
   1638c:	cmp	r0, #0
   16390:	beq	163c8 <myencoding_name_entry_by_name@@Base+0x94>
   16394:	ldr	r3, [r4, #12]
   16398:	cmp	r5, r3
   1639c:	bne	163d0 <myencoding_name_entry_by_name@@Base+0x9c>
   163a0:	mov	r2, r5
   163a4:	mov	r1, r6
   163a8:	bl	102a4 <mycore_strncasecmp@plt>
   163ac:	cmp	r0, #0
   163b0:	bne	163bc <myencoding_name_entry_by_name@@Base+0x88>
   163b4:	mov	r0, r4
   163b8:	pop	{r4, r5, r6, r7, r8, pc}
   163bc:	ldr	r1, [r4, #20]
   163c0:	cmp	r1, #0
   163c4:	bne	16384 <myencoding_name_entry_by_name@@Base+0x50>
   163c8:	mov	r0, #0
   163cc:	pop	{r4, r5, r6, r7, r8, pc}
   163d0:	bcc	163c8 <myencoding_name_entry_by_name@@Base+0x94>
   163d4:	ldr	r1, [r4, #20]
   163d8:	b	16384 <myencoding_name_entry_by_name@@Base+0x50>
   163dc:	andeq	sp, r1, r8, asr #15
   163e0:	andeq	r0, r0, r3, lsr #3
   163e4:	andeq	r2, pc, r8, ror r8	; <UNPREDICTABLE>

000163e8 <myencoding_by_name@@Base>:
   163e8:	push	{r4, lr}
   163ec:	mov	r4, r2
   163f0:	bl	ff68 <myencoding_name_entry_by_name@plt>
   163f4:	cmp	r0, #0
   163f8:	popeq	{r4, pc}
   163fc:	cmp	r4, #0
   16400:	ldrne	r3, [r0, #16]
   16404:	mov	r0, #1
   16408:	strne	r3, [r4]
   1640c:	pop	{r4, pc}

00016410 <myencoding_name_by_id@@Base>:
   16410:	cmp	r0, #41	; 0x29
   16414:	bls	1642c <myencoding_name_by_id@@Base+0x1c>
   16418:	cmp	r1, #0
   1641c:	mov	r0, #0
   16420:	beq	1645c <myencoding_name_by_id@@Base+0x4c>
   16424:	str	r0, [r1]
   16428:	bx	lr
   1642c:	cmp	r1, #0
   16430:	lsl	r0, r0, #3
   16434:	ldrne	r3, [pc, #40]	; 16464 <myencoding_name_by_id@@Base+0x54>
   16438:	addne	r3, pc, r3
   1643c:	addne	r3, r3, r0
   16440:	ldrne	r3, [r3, #-2532]	; 0xfffff61c
   16444:	strne	r3, [r1]
   16448:	ldr	r3, [pc, #24]	; 16468 <myencoding_name_by_id@@Base+0x58>
   1644c:	add	r3, pc, r3
   16450:	add	r0, r3, r0
   16454:	ldr	r0, [r0, #-2536]	; 0xfffff618
   16458:	bx	lr
   1645c:	mov	r0, r1
   16460:	bx	lr
   16464:	muleq	pc, ip, r7	; <UNPREDICTABLE>
   16468:	andeq	r6, pc, r8, lsl #15

0001646c <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   1646c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16470:	subs	r8, r3, #0
   16474:	ldr	r6, [sp, #48]	; 0x30
   16478:	ldr	r9, [pc, #484]	; 16664 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f8>
   1647c:	movne	r3, #0
   16480:	mov	r7, r1
   16484:	ldr	sl, [pc, #476]	; 16668 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1fc>
   16488:	mov	r1, #2
   1648c:	str	r1, [r2]
   16490:	mov	r5, r0
   16494:	strne	r3, [r8]
   16498:	mov	r4, #0
   1649c:	cmp	r6, #0
   164a0:	add	r9, pc, r9
   164a4:	movne	r3, #0
   164a8:	strne	r3, [r6]
   164ac:	add	fp, r4, #7
   164b0:	cmp	fp, r7
   164b4:	movcs	r0, #0
   164b8:	bcs	16518 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xac>
   164bc:	add	r1, r5, r4
   164c0:	mov	r0, r9
   164c4:	str	r2, [sp, #4]
   164c8:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   164cc:	ldr	r2, [sp, #4]
   164d0:	cmp	r0, #0
   164d4:	beq	16538 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xcc>
   164d8:	mov	r4, fp
   164dc:	ldrb	r3, [r5, r4]
   164e0:	sub	r3, r3, #9
   164e4:	uxtb	r3, r3
   164e8:	cmp	r3, #23
   164ec:	bhi	16508 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x9c>
   164f0:	mvn	r3, sl, lsr r3
   164f4:	tst	r3, #1
   164f8:	bne	16508 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x9c>
   164fc:	add	r4, r4, #1
   16500:	cmp	r7, r4
   16504:	bhi	164dc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x70>
   16508:	ldrb	r3, [r5, r4]
   1650c:	cmp	r3, #61	; 0x3d
   16510:	bne	16538 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xcc>
   16514:	add	r4, r4, #1
   16518:	eor	ip, r0, #1
   1651c:	cmp	r4, r7
   16520:	orrcs	ip, ip, #1
   16524:	ands	ip, ip, #255	; 0xff
   16528:	ldreq	r0, [pc, #312]	; 16668 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1fc>
   1652c:	beq	16564 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf8>
   16530:	mov	ip, #0
   16534:	b	1656c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x100>
   16538:	add	r4, r4, #1
   1653c:	b	164ac <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x40>
   16540:	ldrb	r1, [r5, r4]
   16544:	sub	r3, r1, #9
   16548:	uxtb	r3, r3
   1654c:	cmp	r3, #23
   16550:	bhi	16578 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x10c>
   16554:	mvn	r3, r0, lsr r3
   16558:	tst	r3, #1
   1655c:	bne	16588 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   16560:	add	r4, r4, #1
   16564:	cmp	r4, r7
   16568:	bcc	16540 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   1656c:	mov	r0, ip
   16570:	add	sp, sp, #12
   16574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16578:	cmp	r1, #34	; 0x22
   1657c:	addeq	r1, r4, #1
   16580:	moveq	r3, r1
   16584:	beq	165f0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x184>
   16588:	cmp	r1, #39	; 0x27
   1658c:	addeq	r1, r4, #1
   16590:	moveq	r3, r1
   16594:	beq	16638 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1cc>
   16598:	ldr	r1, [pc, #200]	; 16668 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1fc>
   1659c:	add	r3, r5, r4
   165a0:	mov	r0, r3
   165a4:	add	r3, r3, #1
   165a8:	ldrb	ip, [r0]
   165ac:	sub	ip, ip, #9
   165b0:	uxtb	ip, ip
   165b4:	cmp	ip, #23
   165b8:	bhi	165c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x15c>
   165bc:	mvn	ip, r1, lsr ip
   165c0:	ands	ip, ip, #1
   165c4:	beq	16654 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1e8>
   165c8:	mov	r1, r4
   165cc:	ldrb	r3, [r5, r1]
   165d0:	cmp	r3, #59	; 0x3b
   165d4:	bne	16644 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1d8>
   165d8:	cmp	r8, #0
   165dc:	strne	r0, [r8]
   165e0:	sub	r1, r1, r4
   165e4:	cmp	r6, #0
   165e8:	b	16618 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1ac>
   165ec:	add	r3, r3, #1
   165f0:	cmp	r3, r7
   165f4:	bcs	1656c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x100>
   165f8:	ldrb	r0, [r5, r3]
   165fc:	cmp	r0, #34	; 0x22
   16600:	bne	165ec <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x180>
   16604:	cmp	r8, #0
   16608:	add	r0, r5, r1
   1660c:	strne	r0, [r8]
   16610:	sub	r1, r3, r1
   16614:	cmp	r6, #0
   16618:	strne	r1, [r6]
   1661c:	add	sp, sp, #12
   16620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16624:	b	10cd0 <myencoding_by_name@plt>
   16628:	ldrb	r0, [r5, r3]
   1662c:	cmp	r0, #39	; 0x27
   16630:	beq	16604 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x198>
   16634:	add	r3, r3, #1
   16638:	cmp	r3, r7
   1663c:	bcc	16628 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1bc>
   16640:	b	1656c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x100>
   16644:	add	r1, r1, #1
   16648:	cmp	r7, r1
   1664c:	bhi	165cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x160>
   16650:	b	165d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x16c>
   16654:	add	r4, r4, #1
   16658:	cmp	r7, r4
   1665c:	bhi	165a0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   16660:	b	1656c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x100>
   16664:	andeq	sp, r1, r8, asr #11
   16668:	addeq	r0, r0, fp, lsl r0

0001666c <myencoding_extracting_character_encoding_from_charset@@Base>:
   1666c:	mov	r3, #0
   16670:	push	{r0, r1, r2, lr}
   16674:	str	r3, [sp]
   16678:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1667c:	add	sp, sp, #12
   16680:	pop	{pc}		; (ldr pc, [sp], #4)

00016684 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   16684:	push	{r4, r5, lr}
   16688:	mov	r4, #1
   1668c:	ldr	ip, [r1]
   16690:	ldr	lr, [r3]
   16694:	ldr	r5, [pc, #96]	; 166fc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x78>
   16698:	sub	lr, ip, lr
   1669c:	str	lr, [r3, #4]
   166a0:	cmp	ip, r2
   166a4:	bcc	166b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x30>
   166a8:	str	ip, [r1]
   166ac:	mov	r3, #0
   166b0:	b	166f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x70>
   166b4:	ldrb	lr, [r0, ip]
   166b8:	sub	r3, lr, #9
   166bc:	uxtb	r3, r3
   166c0:	cmp	r3, #23
   166c4:	mvnls	r3, r5, lsr r3
   166c8:	movhi	r3, r4
   166cc:	cmp	lr, #47	; 0x2f
   166d0:	moveq	r3, #0
   166d4:	andne	r3, r3, #1
   166d8:	cmp	r3, #0
   166dc:	addeq	ip, ip, #1
   166e0:	beq	166a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x1c>
   166e4:	cmp	lr, #61	; 0x3d
   166e8:	addeq	ip, ip, #1
   166ec:	streq	ip, [r1]
   166f0:	bne	166a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x24>
   166f4:	mov	r0, r3
   166f8:	pop	{r4, r5, pc}
   166fc:	addeq	r0, r0, fp, lsl r0

00016700 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   16700:	push	{r4, r5, r6, lr}
   16704:	ldr	r4, [sp, #16]
   16708:	ldr	r5, [pc, #308]	; 16844 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x144>
   1670c:	cmp	r1, r2
   16710:	bcc	16728 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x28>
   16714:	mov	ip, r1
   16718:	mov	r3, #1
   1671c:	strb	r3, [r4]
   16720:	mov	r0, ip
   16724:	pop	{r4, r5, r6, pc}
   16728:	ldrb	lr, [r0, r1]
   1672c:	sub	ip, lr, #9
   16730:	uxtb	ip, ip
   16734:	cmp	ip, #23
   16738:	bhi	1674c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x4c>
   1673c:	mvn	ip, r5, lsr ip
   16740:	tst	ip, #1
   16744:	addeq	r1, r1, #1
   16748:	beq	1670c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc>
   1674c:	cmp	lr, #39	; 0x27
   16750:	beq	16808 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x108>
   16754:	cmp	lr, #62	; 0x3e
   16758:	moveq	r3, #1
   1675c:	strbeq	r3, [r4]
   16760:	addeq	ip, r1, r3
   16764:	beq	16720 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x20>
   16768:	cmp	lr, #34	; 0x22
   1676c:	addeq	r1, r1, #1
   16770:	streq	r1, [r3, #8]
   16774:	moveq	ip, r1
   16778:	beq	167f0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xf0>
   1677c:	ldr	r5, [pc, #192]	; 16844 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x144>
   16780:	mov	ip, r1
   16784:	mov	r4, #1
   16788:	str	r1, [r3, #8]
   1678c:	ldrb	r6, [r0, ip]
   16790:	sub	lr, r6, #9
   16794:	uxtb	lr, lr
   16798:	cmp	lr, #23
   1679c:	mvnls	lr, r5, lsr lr
   167a0:	movhi	lr, r4
   167a4:	and	lr, lr, #1
   167a8:	eor	lr, lr, #1
   167ac:	cmp	r6, #62	; 0x3e
   167b0:	orreq	lr, lr, #1
   167b4:	cmp	lr, #0
   167b8:	add	lr, ip, #1
   167bc:	beq	16834 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x134>
   167c0:	sub	ip, ip, r1
   167c4:	str	ip, [r3, #12]
   167c8:	b	167e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe4>
   167cc:	ldrb	lr, [r0, ip]
   167d0:	cmp	lr, #34	; 0x22
   167d4:	add	lr, ip, #1
   167d8:	bne	167ec <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xec>
   167dc:	sub	r1, ip, r1
   167e0:	str	r1, [r3, #12]
   167e4:	mov	ip, lr
   167e8:	b	16720 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x20>
   167ec:	mov	ip, lr
   167f0:	cmp	ip, r2
   167f4:	bcc	167cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xcc>
   167f8:	ldr	r2, [r3, #8]
   167fc:	sub	r2, ip, r2
   16800:	str	r2, [r3, #12]
   16804:	b	16720 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x20>
   16808:	add	r1, r1, #1
   1680c:	mov	ip, r1
   16810:	str	r1, [r3, #8]
   16814:	cmp	ip, r2
   16818:	bcs	167f8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xf8>
   1681c:	ldrb	lr, [r0, ip]
   16820:	cmp	lr, #39	; 0x27
   16824:	add	lr, ip, #1
   16828:	beq	167dc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xdc>
   1682c:	mov	ip, lr
   16830:	b	16814 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x114>
   16834:	cmp	r2, lr
   16838:	mov	ip, lr
   1683c:	bhi	1678c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x8c>
   16840:	b	167f8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xf8>
   16844:	addeq	r0, r0, fp, lsl r0

00016848 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   16848:	push	{r4, r5, r6, r7, r8, r9, lr}
   1684c:	sub	sp, sp, #20
   16850:	mov	r4, r0
   16854:	str	r1, [sp, #12]
   16858:	mov	r7, r2
   1685c:	mov	r1, #0
   16860:	mov	r2, #20
   16864:	mov	r0, r3
   16868:	mov	r5, r3
   1686c:	ldr	r6, [sp, #48]	; 0x30
   16870:	bl	108b0 <memset@plt>
   16874:	ldr	r2, [sp, #12]
   16878:	ldr	r9, [pc, #384]	; 16a00 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1b8>
   1687c:	add	r2, r4, r2
   16880:	mov	ip, #0
   16884:	mov	r8, #1
   16888:	sub	r0, r2, r4
   1688c:	cmp	r7, r0
   16890:	bhi	168a4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x5c>
   16894:	mov	r3, #1
   16898:	strb	r3, [r6]
   1689c:	add	sp, sp, #20
   168a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   168a4:	ldrb	r1, [r2], #1
   168a8:	sub	r3, r1, #9
   168ac:	uxtb	r3, r3
   168b0:	cmp	r3, #23
   168b4:	mvnls	r3, r9, lsr r3
   168b8:	movhi	r3, r8
   168bc:	cmp	r1, #47	; 0x2f
   168c0:	moveq	lr, #0
   168c4:	andne	lr, r3, #1
   168c8:	cmp	lr, #0
   168cc:	moveq	ip, r8
   168d0:	beq	16888 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x40>
   168d4:	cmp	ip, #0
   168d8:	strne	r0, [sp, #12]
   168dc:	cmp	r1, #62	; 0x3e
   168e0:	moveq	r3, #1
   168e4:	strbeq	r3, [r6]
   168e8:	addeq	r0, r0, r3
   168ec:	beq	1689c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x54>
   168f0:	ldr	r2, [sp, #12]
   168f4:	mov	ip, #0
   168f8:	add	r2, r4, r2
   168fc:	str	r0, [r5]
   16900:	sub	r1, r2, r4
   16904:	cmp	r7, r1
   16908:	bhi	16924 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xdc>
   1690c:	cmp	ip, #0
   16910:	strne	r1, [sp, #12]
   16914:	mov	r3, r5
   16918:	mov	r2, r7
   1691c:	add	r1, sp, #12
   16920:	b	16958 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x110>
   16924:	ldrb	r3, [r2], #1
   16928:	cmp	r3, #13
   1692c:	bhi	16988 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x140>
   16930:	cmp	r3, #12
   16934:	bcs	16944 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xfc>
   16938:	sub	r3, r3, #9
   1693c:	cmp	r3, #1
   16940:	bhi	1699c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x154>
   16944:	add	r3, r1, #1
   16948:	add	r1, sp, #16
   1694c:	mov	r2, r7
   16950:	str	r3, [r1, #-4]!
   16954:	mov	r3, r5
   16958:	mov	r0, r4
   1695c:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   16960:	cmp	r0, #0
   16964:	moveq	r3, #1
   16968:	strbeq	r3, [r6]
   1696c:	ldreq	r0, [sp, #12]
   16970:	beq	1689c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x54>
   16974:	str	r6, [sp]
   16978:	mov	r3, r5
   1697c:	mov	r2, r7
   16980:	ldr	r1, [sp, #12]
   16984:	b	169f4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1ac>
   16988:	cmp	r3, #47	; 0x2f
   1698c:	beq	169b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x16c>
   16990:	bhi	169a4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x15c>
   16994:	cmp	r3, #32
   16998:	beq	16944 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xfc>
   1699c:	mov	ip, lr
   169a0:	b	16900 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xb8>
   169a4:	cmp	r3, #61	; 0x3d
   169a8:	beq	169cc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x184>
   169ac:	cmp	r3, #62	; 0x3e
   169b0:	bne	1699c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x154>
   169b4:	mov	r3, #1
   169b8:	sub	r0, r1, r0
   169bc:	strb	r3, [r6]
   169c0:	str	r0, [r5, #4]
   169c4:	add	r0, r1, r3
   169c8:	b	1689c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x54>
   169cc:	sub	r3, r1, #1
   169d0:	cmp	r0, r3
   169d4:	beq	16944 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xfc>
   169d8:	mov	r3, r5
   169dc:	mov	r2, r7
   169e0:	sub	r0, r1, r0
   169e4:	add	r1, r1, #1
   169e8:	str	r0, [r5, #4]
   169ec:	str	r1, [sp, #12]
   169f0:	str	r6, [sp]
   169f4:	mov	r0, r4
   169f8:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   169fc:	b	1689c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x54>
   16a00:	addeq	r0, r0, fp, lsl r0

00016a04 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   16a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a08:	mov	r7, r3
   16a0c:	ldr	r3, [pc, #496]	; 16c04 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x200>
   16a10:	sub	sp, sp, #44	; 0x2c
   16a14:	add	r3, pc, r3
   16a18:	ldr	fp, [pc, #488]	; 16c08 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x204>
   16a1c:	mov	r4, #0
   16a20:	str	r3, [sp, #8]
   16a24:	ldr	r3, [pc, #480]	; 16c0c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x208>
   16a28:	mov	r6, r0
   16a2c:	mov	sl, r1
   16a30:	mov	r9, r2
   16a34:	mov	r8, r4
   16a38:	mov	r5, r4
   16a3c:	add	fp, pc, fp
   16a40:	add	r3, pc, r3
   16a44:	strb	r4, [sp, #19]
   16a48:	str	r3, [sp, #12]
   16a4c:	ldr	r1, [sl]
   16a50:	cmp	r1, r9
   16a54:	bcs	16ad8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xd4>
   16a58:	add	r3, sp, #19
   16a5c:	str	r3, [sp]
   16a60:	mov	r2, r9
   16a64:	add	r3, sp, #20
   16a68:	mov	r0, r6
   16a6c:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   16a70:	ldr	r3, [sp, #24]
   16a74:	cmp	r3, #10
   16a78:	str	r0, [sl]
   16a7c:	bne	16b0c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x108>
   16a80:	ldr	r1, [sp, #20]
   16a84:	mov	r0, fp
   16a88:	add	r1, r6, r1
   16a8c:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16a90:	cmp	r0, #0
   16a94:	beq	16b0c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x108>
   16a98:	tst	r4, #1
   16a9c:	bne	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16aa0:	ldr	r3, [sp, #32]
   16aa4:	orr	r4, r4, #1
   16aa8:	cmp	r3, #12
   16aac:	bne	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16ab0:	ldr	r1, [sp, #28]
   16ab4:	ldr	r0, [pc, #340]	; 16c10 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x20c>
   16ab8:	add	r1, r6, r1
   16abc:	add	r0, pc, r0
   16ac0:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16ac4:	cmp	r0, #0
   16ac8:	movne	r5, r0
   16acc:	ldrb	r3, [sp, #19]
   16ad0:	cmp	r3, #0
   16ad4:	beq	16a4c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x48>
   16ad8:	cmp	r8, #0
   16adc:	beq	16af8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xf4>
   16ae0:	eor	r5, r5, #1
   16ae4:	cmp	r8, #2
   16ae8:	movne	r8, #0
   16aec:	andeq	r8, r5, #1
   16af0:	cmp	r8, #0
   16af4:	beq	16bdc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1d8>
   16af8:	mov	r0, #0
   16afc:	mov	r3, #2
   16b00:	str	r3, [r7]
   16b04:	add	sp, sp, #44	; 0x2c
   16b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b0c:	ldr	r3, [sp, #24]
   16b10:	cmp	r3, #7
   16b14:	bne	16b68 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x164>
   16b18:	ldr	r1, [sp, #20]
   16b1c:	ldr	r0, [sp, #12]
   16b20:	add	r1, r6, r1
   16b24:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16b28:	cmp	r0, #0
   16b2c:	beq	16b68 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x164>
   16b30:	tst	r4, #2
   16b34:	bne	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16b38:	ldr	r3, [sp, #84]	; 0x54
   16b3c:	ldr	r0, [sp, #28]
   16b40:	str	r3, [sp]
   16b44:	mov	r2, r7
   16b48:	ldr	r3, [sp, #80]	; 0x50
   16b4c:	ldr	r1, [sp, #32]
   16b50:	add	r0, r6, r0
   16b54:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   16b58:	orr	r4, r4, #2
   16b5c:	cmp	r0, #0
   16b60:	movne	r8, #2
   16b64:	b	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16b68:	ldr	r3, [sp, #24]
   16b6c:	cmp	r3, #7
   16b70:	bne	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16b74:	ldr	r1, [sp, #20]
   16b78:	ldr	r0, [sp, #8]
   16b7c:	add	r1, r6, r1
   16b80:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16b84:	cmp	r0, #0
   16b88:	beq	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16b8c:	tst	r4, #4
   16b90:	bne	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16b94:	ldr	r3, [sp, #80]	; 0x50
   16b98:	ldr	r0, [sp, #28]
   16b9c:	cmp	r3, #0
   16ba0:	addne	r3, r6, r0
   16ba4:	ldrne	r2, [sp, #80]	; 0x50
   16ba8:	ldr	r1, [sp, #32]
   16bac:	add	r0, r6, r0
   16bb0:	strne	r3, [r2]
   16bb4:	ldr	r3, [sp, #84]	; 0x54
   16bb8:	orr	r4, r4, #4
   16bbc:	cmp	r3, #0
   16bc0:	mov	r8, #1
   16bc4:	ldrne	r2, [sp, #84]	; 0x54
   16bc8:	ldrne	r3, [sp, #32]
   16bcc:	strne	r3, [r2]
   16bd0:	mov	r2, r7
   16bd4:	bl	10cd0 <myencoding_by_name@plt>
   16bd8:	b	16acc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16bdc:	ldr	r3, [r7]
   16be0:	mov	r0, #1
   16be4:	sub	r3, r3, #4
   16be8:	cmp	r3, #1
   16bec:	strls	r8, [r7]
   16bf0:	ldr	r3, [r7]
   16bf4:	cmp	r3, #6
   16bf8:	moveq	r3, #33	; 0x21
   16bfc:	streq	r3, [r7]
   16c00:	b	16b04 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x100>
   16c04:	andeq	sp, r1, r4, asr r0
   16c08:	andeq	sp, r1, r4, lsr r0
   16c0c:	andeq	sp, r1, r8, asr #32
   16c10:			; <UNDEFINED> instruction: 0x0001cfbf

00016c14 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   16c14:	push	{r4, r5, r6, r7, lr}
   16c18:	mov	r5, r0
   16c1c:	ldr	r0, [pc, #140]	; 16cb0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x9c>
   16c20:	sub	sp, sp, #36	; 0x24
   16c24:	mov	r4, r2
   16c28:	cmp	r1, r4
   16c2c:	bcc	16c3c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x28>
   16c30:	mov	r0, r1
   16c34:	add	sp, sp, #36	; 0x24
   16c38:	pop	{r4, r5, r6, r7, pc}
   16c3c:	ldrb	r2, [r5, r1]
   16c40:	sub	r3, r2, #9
   16c44:	uxtb	r3, r3
   16c48:	cmp	r3, #23
   16c4c:	bhi	16c64 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x50>
   16c50:	mvn	r3, r0, lsr r3
   16c54:	tst	r3, #1
   16c58:	bne	16c70 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x5c>
   16c5c:	add	r1, r1, #1
   16c60:	b	16c28 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x14>
   16c64:	cmp	r2, #62	; 0x3e
   16c68:	addeq	r1, r1, #1
   16c6c:	beq	16c30 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   16c70:	add	r6, sp, #12
   16c74:	add	r7, sp, #11
   16c78:	mov	r3, #0
   16c7c:	strb	r3, [sp, #11]
   16c80:	mov	r3, r6
   16c84:	str	r7, [sp]
   16c88:	mov	r2, r4
   16c8c:	mov	r0, r5
   16c90:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   16c94:	ldrb	r3, [sp, #11]
   16c98:	cmp	r3, #0
   16c9c:	mov	r1, r0
   16ca0:	bne	16c30 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   16ca4:	cmp	r4, r0
   16ca8:	bhi	16c80 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x6c>
   16cac:	b	16c30 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   16cb0:	addeq	r0, r0, fp, lsl r0

00016cb4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   16cb4:	push	{r4, r5, lr}
   16cb8:	mov	r3, r1
   16cbc:	ldrb	lr, [r0, r1]
   16cc0:	mov	r5, r0
   16cc4:	mov	r4, r2
   16cc8:	cmp	lr, #47	; 0x2f
   16ccc:	add	ip, r0, r1
   16cd0:	bne	16d24 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x70>
   16cd4:	add	r1, r1, #1
   16cd8:	cmp	r1, r2
   16cdc:	bcs	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16ce0:	ldrb	ip, [r0, r1]
   16ce4:	ldr	r3, [pc, #232]	; 16dd4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   16ce8:	add	r3, pc, r3
   16cec:	add	r3, r3, ip
   16cf0:	ldrb	r3, [r3, #-424]	; 0xfffffe58
   16cf4:	cmp	r3, #1
   16cf8:	bne	16d04 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x50>
   16cfc:	pop	{r4, r5, lr}
   16d00:	b	10088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   16d04:	ldrb	r3, [r5, r1]
   16d08:	add	r1, r1, #1
   16d0c:	cmp	r3, #62	; 0x3e
   16d10:	bne	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16d14:	cmp	r4, r1
   16d18:	bhi	16d04 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x50>
   16d1c:	mov	r0, r1
   16d20:	pop	{r4, r5, pc}
   16d24:	cmp	lr, #33	; 0x21
   16d28:	bne	16dac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xf8>
   16d2c:	add	r3, r3, #3
   16d30:	cmp	r2, r3
   16d34:	add	r1, r1, #1
   16d38:	bls	16d58 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   16d3c:	ldrb	r3, [r0, r1]
   16d40:	cmp	r3, #45	; 0x2d
   16d44:	bne	16d58 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   16d48:	ldrb	r3, [ip, #2]
   16d4c:	cmp	r3, #45	; 0x2d
   16d50:	moveq	r3, ip
   16d54:	beq	16da0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xec>
   16d58:	cmp	r1, r4
   16d5c:	bcs	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16d60:	ldrb	r3, [r5, r1]
   16d64:	add	r1, r1, #1
   16d68:	cmp	r3, #62	; 0x3e
   16d6c:	beq	16d58 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   16d70:	b	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16d74:	ldrb	r2, [r3, #1]
   16d78:	add	r1, r1, #1
   16d7c:	cmp	r2, #62	; 0x3e
   16d80:	beq	16d9c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   16d84:	ldrb	r2, [r3]
   16d88:	cmp	r2, #45	; 0x2d
   16d8c:	bne	16d9c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   16d90:	ldrb	r2, [r3, #-1]
   16d94:	cmp	r2, #45	; 0x2d
   16d98:	beq	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16d9c:	add	r3, r3, #1
   16da0:	cmp	r1, r4
   16da4:	bcc	16d74 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xc0>
   16da8:	b	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16dac:	cmp	lr, #63	; 0x3f
   16db0:	addeq	r1, r1, #1
   16db4:	bne	16cfc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x48>
   16db8:	cmp	r1, r4
   16dbc:	bcs	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16dc0:	ldrb	r3, [r5, r1]
   16dc4:	add	r1, r1, #1
   16dc8:	cmp	r3, #62	; 0x3e
   16dcc:	beq	16db8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x104>
   16dd0:	b	16d1c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16dd4:	andeq	ip, r1, r8, lsr #28

00016dd8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   16dd8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   16ddc:	mov	r6, r3
   16de0:	ldr	r8, [pc, #292]	; 16f0c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x134>
   16de4:	mov	r3, #2
   16de8:	subs	r7, r2, #0
   16dec:	str	r3, [sp, #8]
   16df0:	mov	r4, r0
   16df4:	movne	r3, #0
   16df8:	mov	r5, r1
   16dfc:	add	r8, pc, r8
   16e00:	add	r9, sp, #8
   16e04:	add	sl, sp, #12
   16e08:	strne	r3, [r7]
   16e0c:	mov	r3, #0
   16e10:	cmp	r6, #0
   16e14:	strne	r3, [r6]
   16e18:	str	r3, [sp, #12]
   16e1c:	ldr	r1, [sp, #12]
   16e20:	cmp	r1, r5
   16e24:	bcs	16e48 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x70>
   16e28:	ldrb	r3, [r4, r1]
   16e2c:	cmp	r3, #60	; 0x3c
   16e30:	addne	r1, r1, #1
   16e34:	strne	r1, [sp, #12]
   16e38:	bne	16e1c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16e3c:	add	r3, r1, #5
   16e40:	cmp	r5, r3
   16e44:	bhi	16e54 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x7c>
   16e48:	ldr	r0, [sp, #8]
   16e4c:	add	sp, sp, #16
   16e50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e54:	add	r1, r1, #1
   16e58:	str	r1, [sp, #12]
   16e5c:	ldrb	r3, [r4, r1]
   16e60:	add	r2, r4, r1
   16e64:	cmp	r3, #77	; 0x4d
   16e68:	beq	16e74 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x9c>
   16e6c:	cmp	r3, #109	; 0x6d
   16e70:	bne	16ef8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x120>
   16e74:	mov	r1, r2
   16e78:	mov	r0, r8
   16e7c:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16e80:	cmp	r0, #0
   16e84:	beq	16e1c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16e88:	ldr	r2, [sp, #12]
   16e8c:	add	r3, r2, #4
   16e90:	str	r3, [sp, #12]
   16e94:	ldrb	r0, [r4, r3]
   16e98:	sub	r3, r0, #9
   16e9c:	uxtb	r1, r3
   16ea0:	cmp	r1, #23
   16ea4:	movhi	r3, #1
   16ea8:	ldrls	r3, [pc, #96]	; 16f10 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x138>
   16eac:	mvnls	r3, r3, lsr r1
   16eb0:	and	r3, r3, #1
   16eb4:	eor	r3, r3, #1
   16eb8:	cmp	r0, #47	; 0x2f
   16ebc:	orreq	r3, r3, #1
   16ec0:	cmp	r3, #0
   16ec4:	beq	16e1c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16ec8:	add	r2, r2, #5
   16ecc:	str	r2, [sp, #12]
   16ed0:	str	r6, [sp, #4]
   16ed4:	str	r7, [sp]
   16ed8:	mov	r3, r9
   16edc:	mov	r2, r5
   16ee0:	mov	r1, sl
   16ee4:	mov	r0, r4
   16ee8:	bl	103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   16eec:	cmp	r0, #0
   16ef0:	beq	16e1c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16ef4:	b	16e48 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x70>
   16ef8:	mov	r2, r5
   16efc:	mov	r0, r4
   16f00:	bl	1034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   16f04:	str	r0, [sp, #12]
   16f08:	b	16e1c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16f0c:	muleq	r1, r4, ip
   16f10:	addeq	r0, r0, fp, lsl r0

00016f14 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   16f14:	mov	r3, #0
   16f18:	mov	r2, r3
   16f1c:	b	10b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>

00016f20 <myencoding_decode_ibm866@@Base>:
   16f20:	tst	r0, #128	; 0x80
   16f24:	streq	r0, [r1, #12]
   16f28:	ldrne	r3, [pc, #20]	; 16f44 <myencoding_decode_ibm866@@Base+0x24>
   16f2c:	subne	r0, r0, #128	; 0x80
   16f30:	addne	r3, pc, r3
   16f34:	ldrne	r3, [r3, r0, lsl #2]
   16f38:	strne	r3, [r1, #12]
   16f3c:	mov	r0, #0
   16f40:	bx	lr
   16f44:	andeq	sp, r1, ip, lsr #9

00016f48 <myencoding_decode_iso_8859_2@@Base>:
   16f48:	tst	r0, #128	; 0x80
   16f4c:	streq	r0, [r1, #12]
   16f50:	ldrne	r3, [pc, #16]	; 16f68 <myencoding_decode_iso_8859_2@@Base+0x20>
   16f54:	addne	r3, pc, r3
   16f58:	ldrne	r3, [r3, r0, lsl #2]
   16f5c:	strne	r3, [r1, #12]
   16f60:	mov	r0, #0
   16f64:	bx	lr
   16f68:	andeq	sp, r1, r8, lsl #9

00016f6c <myencoding_decode_iso_8859_3@@Base>:
   16f6c:	tst	r0, #128	; 0x80
   16f70:	streq	r0, [r1, #12]
   16f74:	ldrne	r3, [pc, #20]	; 16f90 <myencoding_decode_iso_8859_3@@Base+0x24>
   16f78:	addne	r3, pc, r3
   16f7c:	addne	r0, r3, r0, lsl #2
   16f80:	ldrne	r3, [r0, #512]	; 0x200
   16f84:	strne	r3, [r1, #12]
   16f88:	mov	r0, #0
   16f8c:	bx	lr
   16f90:	andeq	sp, r1, r4, ror #8

00016f94 <myencoding_decode_iso_8859_4@@Base>:
   16f94:	tst	r0, #128	; 0x80
   16f98:	streq	r0, [r1, #12]
   16f9c:	ldrne	r3, [pc, #20]	; 16fb8 <myencoding_decode_iso_8859_4@@Base+0x24>
   16fa0:	addne	r3, pc, r3
   16fa4:	addne	r0, r3, r0, lsl #2
   16fa8:	ldrne	r3, [r0, #1024]	; 0x400
   16fac:	strne	r3, [r1, #12]
   16fb0:	mov	r0, #0
   16fb4:	bx	lr
   16fb8:	andeq	sp, r1, ip, lsr r4

00016fbc <myencoding_decode_iso_8859_5@@Base>:
   16fbc:	tst	r0, #128	; 0x80
   16fc0:	streq	r0, [r1, #12]
   16fc4:	ldrne	r3, [pc, #20]	; 16fe0 <myencoding_decode_iso_8859_5@@Base+0x24>
   16fc8:	addne	r3, pc, r3
   16fcc:	addne	r0, r3, r0, lsl #2
   16fd0:	ldrne	r3, [r0, #1536]	; 0x600
   16fd4:	strne	r3, [r1, #12]
   16fd8:	mov	r0, #0
   16fdc:	bx	lr
   16fe0:	andeq	sp, r1, r4, lsl r4

00016fe4 <myencoding_decode_iso_8859_6@@Base>:
   16fe4:	tst	r0, #128	; 0x80
   16fe8:	streq	r0, [r1, #12]
   16fec:	ldrne	r3, [pc, #20]	; 17008 <myencoding_decode_iso_8859_6@@Base+0x24>
   16ff0:	addne	r3, pc, r3
   16ff4:	addne	r0, r3, r0, lsl #2
   16ff8:	ldrne	r3, [r0, #2048]	; 0x800
   16ffc:	strne	r3, [r1, #12]
   17000:	mov	r0, #0
   17004:	bx	lr
   17008:	andeq	sp, r1, ip, ror #7

0001700c <myencoding_decode_iso_8859_7@@Base>:
   1700c:	tst	r0, #128	; 0x80
   17010:	streq	r0, [r1, #12]
   17014:	ldrne	r3, [pc, #20]	; 17030 <myencoding_decode_iso_8859_7@@Base+0x24>
   17018:	addne	r3, pc, r3
   1701c:	addne	r0, r3, r0, lsl #2
   17020:	ldrne	r3, [r0, #2560]	; 0xa00
   17024:	strne	r3, [r1, #12]
   17028:	mov	r0, #0
   1702c:	bx	lr
   17030:	andeq	sp, r1, r4, asr #7

00017034 <myencoding_decode_iso_8859_8_i@@Base>:
   17034:	tst	r0, #128	; 0x80
   17038:	streq	r0, [r1, #12]
   1703c:	ldrne	r3, [pc, #20]	; 17058 <myencoding_decode_iso_8859_8_i@@Base+0x24>
   17040:	addne	r3, pc, r3
   17044:	addne	r0, r3, r0, lsl #2
   17048:	ldrne	r3, [r0, #3072]	; 0xc00
   1704c:	strne	r3, [r1, #12]
   17050:	mov	r0, #0
   17054:	bx	lr
   17058:	muleq	r1, ip, r3

0001705c <myencoding_decode_iso_8859_10@@Base>:
   1705c:	tst	r0, #128	; 0x80
   17060:	streq	r0, [r1, #12]
   17064:	beq	17080 <myencoding_decode_iso_8859_10@@Base+0x24>
   17068:	ldr	r3, [pc, #24]	; 17088 <myencoding_decode_iso_8859_10@@Base+0x2c>
   1706c:	sub	r0, r0, #128	; 0x80
   17070:	add	r3, pc, r3
   17074:	add	r0, r3, r0, lsl #2
   17078:	ldr	r3, [r0, #-4088]	; 0xfffff008
   1707c:	str	r3, [r1, #12]
   17080:	mov	r0, #0
   17084:	bx	lr
   17088:	andeq	pc, r1, r4, ror #6

0001708c <myencoding_decode_iso_8859_13@@Base>:
   1708c:	tst	r0, #128	; 0x80
   17090:	streq	r0, [r1, #12]
   17094:	ldrne	r3, [pc, #20]	; 170b0 <myencoding_decode_iso_8859_13@@Base+0x24>
   17098:	addne	r3, pc, r3
   1709c:	addne	r0, r3, r0, lsl #2
   170a0:	ldrne	r3, [r0, #-4088]	; 0xfffff008
   170a4:	strne	r3, [r1, #12]
   170a8:	mov	r0, #0
   170ac:	bx	lr
   170b0:	andeq	pc, r1, ip, lsr r3	; <UNPREDICTABLE>

000170b4 <myencoding_decode_iso_8859_14@@Base>:
   170b4:	tst	r0, #128	; 0x80
   170b8:	streq	r0, [r1, #12]
   170bc:	ldrne	r3, [pc, #20]	; 170d8 <myencoding_decode_iso_8859_14@@Base+0x24>
   170c0:	addne	r3, pc, r3
   170c4:	addne	r0, r3, r0, lsl #2
   170c8:	ldrne	r3, [r0, #-3576]	; 0xfffff208
   170cc:	strne	r3, [r1, #12]
   170d0:	mov	r0, #0
   170d4:	bx	lr
   170d8:	andeq	pc, r1, r4, lsl r3	; <UNPREDICTABLE>

000170dc <myencoding_decode_iso_8859_15@@Base>:
   170dc:	tst	r0, #128	; 0x80
   170e0:	streq	r0, [r1, #12]
   170e4:	ldrne	r3, [pc, #20]	; 17100 <myencoding_decode_iso_8859_15@@Base+0x24>
   170e8:	addne	r3, pc, r3
   170ec:	addne	r0, r3, r0, lsl #2
   170f0:	ldrne	r3, [r0, #-3064]	; 0xfffff408
   170f4:	strne	r3, [r1, #12]
   170f8:	mov	r0, #0
   170fc:	bx	lr
   17100:	andeq	pc, r1, ip, ror #5

00017104 <myencoding_decode_iso_8859_16@@Base>:
   17104:	tst	r0, #128	; 0x80
   17108:	streq	r0, [r1, #12]
   1710c:	ldrne	r3, [pc, #20]	; 17128 <myencoding_decode_iso_8859_16@@Base+0x24>
   17110:	addne	r3, pc, r3
   17114:	addne	r0, r3, r0, lsl #2
   17118:	ldrne	r3, [r0, #-2552]	; 0xfffff608
   1711c:	strne	r3, [r1, #12]
   17120:	mov	r0, #0
   17124:	bx	lr
   17128:	andeq	pc, r1, r4, asr #5

0001712c <myencoding_decode_koi8_r@@Base>:
   1712c:	tst	r0, #128	; 0x80
   17130:	streq	r0, [r1, #12]
   17134:	ldrne	r3, [pc, #20]	; 17150 <myencoding_decode_koi8_r@@Base+0x24>
   17138:	addne	r3, pc, r3
   1713c:	addne	r0, r3, r0, lsl #2
   17140:	ldrne	r3, [r0, #-2040]	; 0xfffff808
   17144:	strne	r3, [r1, #12]
   17148:	mov	r0, #0
   1714c:	bx	lr
   17150:	muleq	r1, ip, r2

00017154 <myencoding_decode_koi8_u@@Base>:
   17154:	tst	r0, #128	; 0x80
   17158:	streq	r0, [r1, #12]
   1715c:	ldrne	r3, [pc, #20]	; 17178 <myencoding_decode_koi8_u@@Base+0x24>
   17160:	addne	r3, pc, r3
   17164:	addne	r0, r3, r0, lsl #2
   17168:	ldrne	r3, [r0, #-1528]	; 0xfffffa08
   1716c:	strne	r3, [r1, #12]
   17170:	mov	r0, #0
   17174:	bx	lr
   17178:	andeq	pc, r1, r4, ror r2	; <UNPREDICTABLE>

0001717c <myencoding_decode_macintosh@@Base>:
   1717c:	tst	r0, #128	; 0x80
   17180:	streq	r0, [r1, #12]
   17184:	ldrne	r3, [pc, #20]	; 171a0 <myencoding_decode_macintosh@@Base+0x24>
   17188:	addne	r3, pc, r3
   1718c:	addne	r0, r3, r0, lsl #2
   17190:	ldrne	r3, [r0, #-1016]	; 0xfffffc08
   17194:	strne	r3, [r1, #12]
   17198:	mov	r0, #0
   1719c:	bx	lr
   171a0:	andeq	pc, r1, ip, asr #4

000171a4 <myencoding_decode_windows_874@@Base>:
   171a4:	tst	r0, #128	; 0x80
   171a8:	streq	r0, [r1, #12]
   171ac:	ldrne	r3, [pc, #20]	; 171c8 <myencoding_decode_windows_874@@Base+0x24>
   171b0:	addne	r3, pc, r3
   171b4:	addne	r0, r3, r0, lsl #2
   171b8:	ldrne	r3, [r0, #-504]	; 0xfffffe08
   171bc:	strne	r3, [r1, #12]
   171c0:	mov	r0, #0
   171c4:	bx	lr
   171c8:	andeq	pc, r1, r4, lsr #4

000171cc <myencoding_decode_windows_1250@@Base>:
   171cc:	tst	r0, #128	; 0x80
   171d0:	streq	r0, [r1, #12]
   171d4:	ldrne	r3, [pc, #20]	; 171f0 <myencoding_decode_windows_1250@@Base+0x24>
   171d8:	addne	r3, pc, r3
   171dc:	addne	r0, r3, r0, lsl #2
   171e0:	ldrne	r3, [r0, #8]
   171e4:	strne	r3, [r1, #12]
   171e8:	mov	r0, #0
   171ec:	bx	lr
   171f0:	strdeq	pc, [r1], -ip

000171f4 <myencoding_decode_windows_1251@@Base>:
   171f4:	tst	r0, #128	; 0x80
   171f8:	streq	r0, [r1, #12]
   171fc:	ldrne	r3, [pc, #20]	; 17218 <myencoding_decode_windows_1251@@Base+0x24>
   17200:	addne	r3, pc, r3
   17204:	addne	r0, r3, r0, lsl #2
   17208:	ldrne	r3, [r0, #520]	; 0x208
   1720c:	strne	r3, [r1, #12]
   17210:	mov	r0, #0
   17214:	bx	lr
   17218:	ldrdeq	pc, [r1], -r4

0001721c <myencoding_decode_windows_1252@@Base>:
   1721c:	tst	r0, #128	; 0x80
   17220:	streq	r0, [r1, #12]
   17224:	ldrne	r3, [pc, #20]	; 17240 <myencoding_decode_windows_1252@@Base+0x24>
   17228:	addne	r3, pc, r3
   1722c:	addne	r0, r3, r0, lsl #2
   17230:	ldrne	r3, [r0, #1032]	; 0x408
   17234:	strne	r3, [r1, #12]
   17238:	mov	r0, #0
   1723c:	bx	lr
   17240:	andeq	pc, r1, ip, lsr #3

00017244 <myencoding_decode_windows_1253@@Base>:
   17244:	tst	r0, #128	; 0x80
   17248:	streq	r0, [r1, #12]
   1724c:	ldrne	r3, [pc, #20]	; 17268 <myencoding_decode_windows_1253@@Base+0x24>
   17250:	addne	r3, pc, r3
   17254:	addne	r0, r3, r0, lsl #2
   17258:	ldrne	r3, [r0, #1544]	; 0x608
   1725c:	strne	r3, [r1, #12]
   17260:	mov	r0, #0
   17264:	bx	lr
   17268:	andeq	pc, r1, r4, lsl #3

0001726c <myencoding_decode_windows_1254@@Base>:
   1726c:	tst	r0, #128	; 0x80
   17270:	streq	r0, [r1, #12]
   17274:	ldrne	r3, [pc, #20]	; 17290 <myencoding_decode_windows_1254@@Base+0x24>
   17278:	addne	r3, pc, r3
   1727c:	addne	r0, r3, r0, lsl #2
   17280:	ldrne	r3, [r0, #2056]	; 0x808
   17284:	strne	r3, [r1, #12]
   17288:	mov	r0, #0
   1728c:	bx	lr
   17290:	andeq	pc, r1, ip, asr r1	; <UNPREDICTABLE>

00017294 <myencoding_decode_windows_1255@@Base>:
   17294:	tst	r0, #128	; 0x80
   17298:	streq	r0, [r1, #12]
   1729c:	ldrne	r3, [pc, #20]	; 172b8 <myencoding_decode_windows_1255@@Base+0x24>
   172a0:	addne	r3, pc, r3
   172a4:	addne	r0, r3, r0, lsl #2
   172a8:	ldrne	r3, [r0, #2568]	; 0xa08
   172ac:	strne	r3, [r1, #12]
   172b0:	mov	r0, #0
   172b4:	bx	lr
   172b8:	andeq	pc, r1, r4, lsr r1	; <UNPREDICTABLE>

000172bc <myencoding_decode_windows_1256@@Base>:
   172bc:	tst	r0, #128	; 0x80
   172c0:	streq	r0, [r1, #12]
   172c4:	ldrne	r3, [pc, #20]	; 172e0 <myencoding_decode_windows_1256@@Base+0x24>
   172c8:	addne	r3, pc, r3
   172cc:	addne	r0, r3, r0, lsl #2
   172d0:	ldrne	r3, [r0, #3080]	; 0xc08
   172d4:	strne	r3, [r1, #12]
   172d8:	mov	r0, #0
   172dc:	bx	lr
   172e0:	andeq	pc, r1, ip, lsl #2

000172e4 <myencoding_decode_windows_1257@@Base>:
   172e4:	tst	r0, #128	; 0x80
   172e8:	streq	r0, [r1, #12]
   172ec:	beq	17308 <myencoding_decode_windows_1257@@Base+0x24>
   172f0:	ldr	r3, [pc, #24]	; 17310 <myencoding_decode_windows_1257@@Base+0x2c>
   172f4:	sub	r0, r0, #128	; 0x80
   172f8:	add	r3, pc, r3
   172fc:	add	r0, r3, r0, lsl #2
   17300:	ldr	r3, [r0, #-4080]	; 0xfffff010
   17304:	str	r3, [r1, #12]
   17308:	mov	r0, #0
   1730c:	bx	lr
   17310:	ldrdeq	r1, [r2], -r4

00017314 <myencoding_decode_windows_1258@@Base>:
   17314:	tst	r0, #128	; 0x80
   17318:	streq	r0, [r1, #12]
   1731c:	ldrne	r3, [pc, #20]	; 17338 <myencoding_decode_windows_1258@@Base+0x24>
   17320:	addne	r3, pc, r3
   17324:	addne	r0, r3, r0, lsl #2
   17328:	ldrne	r3, [r0, #-4080]	; 0xfffff010
   1732c:	strne	r3, [r1, #12]
   17330:	mov	r0, #0
   17334:	bx	lr
   17338:	andeq	r1, r2, ip, lsr #1

0001733c <myencoding_decode_x_mac_cyrillic@@Base>:
   1733c:	tst	r0, #128	; 0x80
   17340:	streq	r0, [r1, #12]
   17344:	ldrne	r3, [pc, #20]	; 17360 <myencoding_decode_x_mac_cyrillic@@Base+0x24>
   17348:	addne	r3, pc, r3
   1734c:	addne	r0, r3, r0, lsl #2
   17350:	ldrne	r3, [r0, #-3568]	; 0xfffff210
   17354:	strne	r3, [r1, #12]
   17358:	mov	r0, #0
   1735c:	bx	lr
   17360:	andeq	r1, r2, r4, lsl #1

00017364 <myencoding_decode_big5@@Base>:
   17364:	ldr	r2, [r1]
   17368:	cmp	r2, #0
   1736c:	beq	17450 <myencoding_decode_big5@@Base+0xec>
   17370:	push	{r4, r5, lr}
   17374:	add	lr, r0, #95	; 0x5f
   17378:	cmp	r0, #126	; 0x7e
   1737c:	sub	r4, r0, #64	; 0x40
   17380:	uxtb	lr, lr
   17384:	mov	ip, #0
   17388:	movls	r5, #64	; 0x40
   1738c:	movhi	r5, #98	; 0x62
   17390:	cmp	lr, #93	; 0x5d
   17394:	cmphi	r4, #62	; 0x3e
   17398:	str	ip, [r1]
   1739c:	bls	173ac <myencoding_decode_big5@@Base+0x48>
   173a0:	mov	ip, #1
   173a4:	mov	r0, ip
   173a8:	pop	{r4, r5, pc}
   173ac:	sub	r3, r0, #20224	; 0x4f00
   173b0:	mov	r0, #157	; 0x9d
   173b4:	sub	r3, r3, #29
   173b8:	mla	r3, r0, r2, r3
   173bc:	ldr	r2, [pc, #188]	; 17480 <myencoding_decode_big5@@Base+0x11c>
   173c0:	sub	r3, r3, r5
   173c4:	cmp	r3, r2
   173c8:	beq	17434 <myencoding_decode_big5@@Base+0xd0>
   173cc:	bhi	1740c <myencoding_decode_big5@@Base+0xa8>
   173d0:	sub	r2, r2, #2
   173d4:	cmp	r3, r2
   173d8:	moveq	r3, #202	; 0xca
   173dc:	beq	17440 <myencoding_decode_big5@@Base+0xdc>
   173e0:	cmp	r3, #0
   173e4:	beq	173a0 <myencoding_decode_big5@@Base+0x3c>
   173e8:	ldr	r0, [pc, #148]	; 17484 <myencoding_decode_big5@@Base+0x120>
   173ec:	add	r0, pc, r0
   173f0:	add	r3, r0, r3, lsl #2
   173f4:	mov	r0, #0
   173f8:	ldr	r3, [r3, #-2544]	; 0xfffff610
   173fc:	str	r0, [r1, #16]
   17400:	str	r3, [r1, #12]
   17404:	mov	ip, r0
   17408:	b	173a4 <myencoding_decode_big5@@Base+0x40>
   1740c:	ldr	r2, [pc, #116]	; 17488 <myencoding_decode_big5@@Base+0x124>
   17410:	cmp	r3, r2
   17414:	beq	1743c <myencoding_decode_big5@@Base+0xd8>
   17418:	add	r2, r2, #2
   1741c:	cmp	r3, r2
   17420:	moveq	r3, #234	; 0xea
   17424:	bne	173e0 <myencoding_decode_big5@@Base+0x7c>
   17428:	str	r3, [r1, #12]
   1742c:	mov	r3, #780	; 0x30c
   17430:	b	17448 <myencoding_decode_big5@@Base+0xe4>
   17434:	mov	r3, #202	; 0xca
   17438:	b	17428 <myencoding_decode_big5@@Base+0xc4>
   1743c:	mov	r3, #234	; 0xea
   17440:	str	r3, [r1, #12]
   17444:	mov	r3, #772	; 0x304
   17448:	str	r3, [r1, #16]
   1744c:	b	173a4 <myencoding_decode_big5@@Base+0x40>
   17450:	tst	r0, #128	; 0x80
   17454:	streq	r0, [r1, #12]
   17458:	moveq	ip, r2
   1745c:	beq	17478 <myencoding_decode_big5@@Base+0x114>
   17460:	add	r3, r0, #127	; 0x7f
   17464:	uxtb	r3, r3
   17468:	cmp	r3, #125	; 0x7d
   1746c:	strls	r0, [r1]
   17470:	movls	ip, #2
   17474:	movhi	ip, #1
   17478:	mov	r0, ip
   1747c:	bx	lr
   17480:	andeq	r0, r0, pc, ror #8
   17484:	andeq	r0, r2, r0, ror #31
   17488:	andeq	r0, r0, ip, lsl #9

0001748c <myencoding_decode_euc_jp@@Base>:
   1748c:	ldr	r3, [r1]
   17490:	cmp	r3, #142	; 0x8e
   17494:	bne	174c4 <myencoding_decode_euc_jp@@Base+0x38>
   17498:	add	r2, r0, #95	; 0x5f
   1749c:	uxtb	r2, r2
   174a0:	cmp	r2, #62	; 0x3e
   174a4:	bhi	174e4 <myencoding_decode_euc_jp@@Base+0x58>
   174a8:	add	r0, r0, #65024	; 0xfe00
   174ac:	add	r0, r0, #192	; 0xc0
   174b0:	mov	r3, #0
   174b4:	str	r3, [r1]
   174b8:	str	r0, [r1, #12]
   174bc:	mov	r0, #0
   174c0:	bx	lr
   174c4:	cmp	r3, #143	; 0x8f
   174c8:	bne	17554 <myencoding_decode_euc_jp@@Base+0xc8>
   174cc:	add	r2, r0, #95	; 0x5f
   174d0:	uxtb	r2, r2
   174d4:	cmp	r2, #93	; 0x5d
   174d8:	movls	r3, #1
   174dc:	strls	r3, [r1, #20]
   174e0:	bls	17580 <myencoding_decode_euc_jp@@Base+0xf4>
   174e4:	mov	r2, #0
   174e8:	str	r2, [r1]
   174ec:	sub	r2, r3, #161	; 0xa1
   174f0:	cmp	r2, #93	; 0x5d
   174f4:	bhi	1755c <myencoding_decode_euc_jp@@Base+0xd0>
   174f8:	add	r2, r0, #95	; 0x5f
   174fc:	uxtb	r2, r2
   17500:	cmp	r2, #93	; 0x5d
   17504:	bhi	1755c <myencoding_decode_euc_jp@@Base+0xd0>
   17508:	mov	r2, #94	; 0x5e
   1750c:	sub	r0, r0, #15232	; 0x3b80
   17510:	sub	r0, r0, #63	; 0x3f
   17514:	mla	r3, r2, r3, r0
   17518:	ldr	r2, [r1, #20]
   1751c:	cmp	r2, #0
   17520:	lsl	r3, r3, #2
   17524:	beq	1758c <myencoding_decode_euc_jp@@Base+0x100>
   17528:	ldr	r0, [pc, #120]	; 175a8 <myencoding_decode_euc_jp@@Base+0x11c>
   1752c:	add	r0, pc, r0
   17530:	add	r3, r0, r3
   17534:	ldr	r3, [r3, #2928]	; 0xb70
   17538:	str	r3, [r1, #12]
   1753c:	mov	r3, #0
   17540:	ldr	r0, [r1, #12]
   17544:	str	r3, [r1, #20]
   17548:	clz	r0, r0
   1754c:	lsr	r0, r0, #5
   17550:	bx	lr
   17554:	cmp	r3, #0
   17558:	bne	174e4 <myencoding_decode_euc_jp@@Base+0x58>
   1755c:	tst	r0, #128	; 0x80
   17560:	beq	174b8 <myencoding_decode_euc_jp@@Base+0x2c>
   17564:	add	r2, r0, #114	; 0x72
   17568:	add	r3, r0, #95	; 0x5f
   1756c:	uxtb	r2, r2
   17570:	uxtb	r3, r3
   17574:	cmp	r3, #93	; 0x5d
   17578:	cmphi	r2, #1
   1757c:	bhi	175a0 <myencoding_decode_euc_jp@@Base+0x114>
   17580:	str	r0, [r1]
   17584:	mov	r0, #2
   17588:	bx	lr
   1758c:	ldr	r0, [pc, #24]	; 175ac <myencoding_decode_euc_jp@@Base+0x120>
   17590:	add	r0, pc, r0
   17594:	add	r3, r0, r3
   17598:	ldr	r3, [r3, #-2648]	; 0xfffff5a8
   1759c:	b	17538 <myencoding_decode_euc_jp@@Base+0xac>
   175a0:	mov	r0, #1
   175a4:	bx	lr
   175a8:	andeq	r2, r3, r8, asr lr
   175ac:	andeq	ip, r3, ip, asr #27

000175b0 <myencoding_decode_iso_2022_jp@@Base>:
   175b0:	ldr	r3, [r1, #4]
   175b4:	mov	r2, r0
   175b8:	cmp	r3, #7
   175bc:	addls	pc, pc, r3, lsl #2
   175c0:	b	17690 <myencoding_decode_iso_2022_jp@@Base+0xe0>
   175c4:	b	175e4 <myencoding_decode_iso_2022_jp@@Base+0x34>
   175c8:	b	17634 <myencoding_decode_iso_2022_jp@@Base+0x84>
   175cc:	b	17690 <myencoding_decode_iso_2022_jp@@Base+0xe0>
   175d0:	b	17668 <myencoding_decode_iso_2022_jp@@Base+0xb8>
   175d4:	b	17698 <myencoding_decode_iso_2022_jp@@Base+0xe8>
   175d8:	b	176c0 <myencoding_decode_iso_2022_jp@@Base+0x110>
   175dc:	b	17720 <myencoding_decode_iso_2022_jp@@Base+0x170>
   175e0:	b	17748 <myencoding_decode_iso_2022_jp@@Base+0x198>
   175e4:	cmp	r0, #27
   175e8:	bne	175fc <myencoding_decode_iso_2022_jp@@Base+0x4c>
   175ec:	mov	r3, #6
   175f0:	str	r3, [r1, #4]
   175f4:	mov	r0, #2
   175f8:	bx	lr
   175fc:	eor	r0, r2, #128	; 0x80
   17600:	sub	r3, r2, #14
   17604:	lsr	r0, r0, #7
   17608:	cmp	r3, #1
   1760c:	movls	r3, #0
   17610:	andhi	r3, r0, #1
   17614:	cmp	r3, #0
   17618:	movne	r3, #0
   1761c:	strne	r3, [r1, #20]
   17620:	bne	1768c <myencoding_decode_iso_2022_jp@@Base+0xdc>
   17624:	mov	r3, #0
   17628:	str	r3, [r1, #20]
   1762c:	mov	r0, #1
   17630:	bx	lr
   17634:	cmp	r0, #27
   17638:	beq	175ec <myencoding_decode_iso_2022_jp@@Base+0x3c>
   1763c:	cmp	r0, #92	; 0x5c
   17640:	mov	r0, #0
   17644:	streq	r0, [r1, #20]
   17648:	moveq	r3, #165	; 0xa5
   1764c:	beq	17660 <myencoding_decode_iso_2022_jp@@Base+0xb0>
   17650:	cmp	r2, #126	; 0x7e
   17654:	bne	175fc <myencoding_decode_iso_2022_jp@@Base+0x4c>
   17658:	ldr	r3, [pc, #408]	; 177f8 <myencoding_decode_iso_2022_jp@@Base+0x248>
   1765c:	str	r0, [r1, #20]
   17660:	str	r3, [r1, #12]
   17664:	bx	lr
   17668:	cmp	r0, #27
   1766c:	beq	175ec <myencoding_decode_iso_2022_jp@@Base+0x3c>
   17670:	sub	r3, r0, #33	; 0x21
   17674:	cmp	r3, #62	; 0x3e
   17678:	bhi	17624 <myencoding_decode_iso_2022_jp@@Base+0x74>
   1767c:	add	r2, r0, #65280	; 0xff00
   17680:	add	r2, r2, #64	; 0x40
   17684:	mov	r3, #0
   17688:	str	r3, [r1, #20]
   1768c:	str	r2, [r1, #12]
   17690:	mov	r0, #0
   17694:	bx	lr
   17698:	cmp	r0, #27
   1769c:	beq	175ec <myencoding_decode_iso_2022_jp@@Base+0x3c>
   176a0:	sub	r3, r0, #33	; 0x21
   176a4:	cmp	r3, #93	; 0x5d
   176a8:	bhi	17624 <myencoding_decode_iso_2022_jp@@Base+0x74>
   176ac:	mov	r3, #0
   176b0:	str	r3, [r1, #20]
   176b4:	str	r0, [r1]
   176b8:	mov	r3, #5
   176bc:	b	175f0 <myencoding_decode_iso_2022_jp@@Base+0x40>
   176c0:	cmp	r0, #27
   176c4:	bne	176d8 <myencoding_decode_iso_2022_jp@@Base+0x128>
   176c8:	mov	r3, #6
   176cc:	str	r3, [r1, #4]
   176d0:	mov	r0, #3
   176d4:	bx	lr
   176d8:	sub	r3, r0, #33	; 0x21
   176dc:	cmp	r3, #93	; 0x5d
   176e0:	mov	r3, #4
   176e4:	str	r3, [r1, #4]
   176e8:	bhi	1762c <myencoding_decode_iso_2022_jp@@Base+0x7c>
   176ec:	ldr	r0, [r1]
   176f0:	mov	r3, #94	; 0x5e
   176f4:	sub	r2, r2, #3120	; 0xc30
   176f8:	sub	r2, r2, #15
   176fc:	mla	r0, r3, r0, r2
   17700:	ldr	r2, [pc, #244]	; 177fc <myencoding_decode_iso_2022_jp@@Base+0x24c>
   17704:	add	r2, pc, r2
   17708:	add	r2, r2, r0, lsl #2
   1770c:	ldr	r0, [r2, #-2648]	; 0xfffff5a8
   17710:	str	r0, [r1, #12]
   17714:	clz	r0, r0
   17718:	lsr	r0, r0, #5
   1771c:	bx	lr
   17720:	sub	r3, r0, #36	; 0x24
   17724:	tst	r3, #251	; 0xfb
   17728:	streq	r0, [r1]
   1772c:	moveq	r3, #7
   17730:	beq	175f0 <myencoding_decode_iso_2022_jp@@Base+0x40>
   17734:	mov	r3, #0
   17738:	str	r3, [r1, #20]
   1773c:	ldr	r3, [r1, #8]
   17740:	str	r3, [r1, #4]
   17744:	b	1762c <myencoding_decode_iso_2022_jp@@Base+0x7c>
   17748:	ldr	r0, [r1]
   1774c:	mov	r3, #0
   17750:	cmp	r2, #66	; 0x42
   17754:	cmpeq	r0, #40	; 0x28
   17758:	str	r3, [r1]
   1775c:	sub	r3, r0, #40	; 0x28
   17760:	clz	r3, r3
   17764:	lsr	r3, r3, #5
   17768:	bne	1779c <myencoding_decode_iso_2022_jp@@Base+0x1ec>
   1776c:	mov	r3, #0
   17770:	str	r3, [r1, #4]
   17774:	ldr	r3, [r1, #4]
   17778:	mov	r0, #1
   1777c:	cmp	r3, #0
   17780:	beq	177e8 <myencoding_decode_iso_2022_jp@@Base+0x238>
   17784:	str	r3, [r1, #8]
   17788:	ldr	r3, [r1, #20]
   1778c:	str	r0, [r1, #20]
   17790:	cmp	r3, #0
   17794:	moveq	r0, #2
   17798:	bx	lr
   1779c:	cmp	r2, #74	; 0x4a
   177a0:	movne	ip, #0
   177a4:	andeq	ip, r3, #1
   177a8:	cmp	ip, #0
   177ac:	movne	r3, #1
   177b0:	bne	17770 <myencoding_decode_iso_2022_jp@@Base+0x1c0>
   177b4:	cmp	r2, #73	; 0x49
   177b8:	movne	r3, #0
   177bc:	andeq	r3, r3, #1
   177c0:	cmp	r3, #0
   177c4:	movne	r3, #2
   177c8:	bne	17770 <myencoding_decode_iso_2022_jp@@Base+0x1c0>
   177cc:	cmp	r0, #36	; 0x24
   177d0:	bne	1776c <myencoding_decode_iso_2022_jp@@Base+0x1bc>
   177d4:	and	r2, r2, #253	; 0xfd
   177d8:	cmp	r2, #64	; 0x40
   177dc:	bne	1776c <myencoding_decode_iso_2022_jp@@Base+0x1bc>
   177e0:	mov	r3, #4
   177e4:	b	17770 <myencoding_decode_iso_2022_jp@@Base+0x1c0>
   177e8:	str	r3, [r1, #20]
   177ec:	ldr	r3, [r1, #8]
   177f0:	str	r3, [r1, #4]
   177f4:	bx	lr
   177f8:	andeq	r2, r0, lr, lsr r0
   177fc:	andeq	ip, r3, r8, asr ip

00017800 <myencoding_decode_x_user_defined@@Base>:
   17800:	tst	r0, #128	; 0x80
   17804:	addne	r0, r0, #63232	; 0xf700
   17808:	str	r0, [r1, #12]
   1780c:	mov	r0, #0
   17810:	bx	lr

00017814 <myencoding_decode_utf_8@@Base>:
   17814:	ldr	r3, [r1, #20]
   17818:	cmp	r3, #0
   1781c:	bne	178ec <myencoding_decode_utf_8@@Base+0xd8>
   17820:	tst	r0, #128	; 0x80
   17824:	bne	17834 <myencoding_decode_utf_8@@Base+0x20>
   17828:	str	r0, [r1, #12]
   1782c:	mov	r0, r3
   17830:	bx	lr
   17834:	add	r3, r0, #62	; 0x3e
   17838:	uxtb	r3, r3
   1783c:	cmp	r3, #29
   17840:	bhi	17874 <myencoding_decode_utf_8@@Base+0x60>
   17844:	sub	r0, r0, #192	; 0xc0
   17848:	mov	r3, #1
   1784c:	str	r3, [r1, #20]
   17850:	ldr	r2, [r1, #20]
   17854:	mov	r3, #6
   17858:	str	r0, [r1, #12]
   1785c:	mul	r2, r3, r2
   17860:	ldr	r3, [r1, #12]
   17864:	mov	r0, #2
   17868:	lsl	r3, r3, r2
   1786c:	str	r3, [r1, #12]
   17870:	bx	lr
   17874:	add	r3, r0, #32
   17878:	uxtb	r3, r3
   1787c:	cmp	r3, #15
   17880:	bhi	178b0 <myencoding_decode_utf_8@@Base+0x9c>
   17884:	cmp	r0, #224	; 0xe0
   17888:	moveq	r3, #160	; 0xa0
   1788c:	streq	r3, [r1]
   17890:	beq	178a0 <myencoding_decode_utf_8@@Base+0x8c>
   17894:	cmp	r0, #237	; 0xed
   17898:	moveq	r3, #159	; 0x9f
   1789c:	streq	r3, [r1, #4]
   178a0:	mov	r3, #2
   178a4:	str	r3, [r1, #20]
   178a8:	sub	r0, r0, #224	; 0xe0
   178ac:	b	17850 <myencoding_decode_utf_8@@Base+0x3c>
   178b0:	add	r3, r0, #16
   178b4:	uxtb	r3, r3
   178b8:	cmp	r3, #4
   178bc:	bhi	17978 <myencoding_decode_utf_8@@Base+0x164>
   178c0:	cmp	r0, #240	; 0xf0
   178c4:	moveq	r3, #144	; 0x90
   178c8:	streq	r3, [r1]
   178cc:	beq	178dc <myencoding_decode_utf_8@@Base+0xc8>
   178d0:	cmp	r0, #244	; 0xf4
   178d4:	moveq	r3, #143	; 0x8f
   178d8:	streq	r3, [r1, #4]
   178dc:	mov	r3, #2
   178e0:	str	r3, [r1, #20]
   178e4:	sub	r0, r0, #240	; 0xf0
   178e8:	b	17850 <myencoding_decode_utf_8@@Base+0x3c>
   178ec:	ldr	r2, [r1]
   178f0:	cmp	r0, r2
   178f4:	bcs	17928 <myencoding_decode_utf_8@@Base+0x114>
   178f8:	ldr	r2, [r1, #4]
   178fc:	cmp	r0, r2
   17900:	bls	17928 <myencoding_decode_utf_8@@Base+0x114>
   17904:	mov	r3, #0
   17908:	str	r3, [r1, #12]
   1790c:	str	r3, [r1, #20]
   17910:	str	r3, [r1, #8]
   17914:	mov	r2, #128	; 0x80
   17918:	mov	r3, #191	; 0xbf
   1791c:	mov	r0, #5
   17920:	stm	r1, {r2, r3}
   17924:	bx	lr
   17928:	mov	r2, #128	; 0x80
   1792c:	mov	ip, #191	; 0xbf
   17930:	push	{lr}		; (str lr, [sp, #-4]!)
   17934:	mov	lr, #6
   17938:	stm	r1, {r2, ip}
   1793c:	ldr	r2, [r1, #8]
   17940:	sub	r0, r0, #128	; 0x80
   17944:	add	r2, r2, #1
   17948:	sub	ip, r3, r2
   1794c:	cmp	r3, r2
   17950:	mul	lr, lr, ip
   17954:	ldr	ip, [r1, #12]
   17958:	str	r2, [r1, #8]
   1795c:	add	r0, ip, r0, lsl lr
   17960:	str	r0, [r1, #12]
   17964:	bne	17980 <myencoding_decode_utf_8@@Base+0x16c>
   17968:	mov	r0, #0
   1796c:	str	r0, [r1, #20]
   17970:	str	r0, [r1, #8]
   17974:	pop	{pc}		; (ldr pc, [sp], #4)
   17978:	mov	r0, #1
   1797c:	bx	lr
   17980:	mov	r0, #2
   17984:	pop	{pc}		; (ldr pc, [sp], #4)

00017988 <myencoding_decode_shift_jis@@Base>:
   17988:	mov	r2, r0
   1798c:	ldr	r0, [r1]
   17990:	cmp	r0, #0
   17994:	beq	17a34 <myencoding_decode_shift_jis@@Base+0xac>
   17998:	cmp	r2, #126	; 0x7e
   1799c:	push	{r4, lr}
   179a0:	movls	ip, #64	; 0x40
   179a4:	movhi	ip, #65	; 0x41
   179a8:	sub	lr, r2, #64	; 0x40
   179ac:	cmp	r0, #159	; 0x9f
   179b0:	eor	r4, r2, #128	; 0x80
   179b4:	movls	r3, #129	; 0x81
   179b8:	movhi	r3, #193	; 0xc1
   179bc:	cmp	r4, #124	; 0x7c
   179c0:	cmphi	lr, #62	; 0x3e
   179c4:	bhi	17a28 <myencoding_decode_shift_jis@@Base+0xa0>
   179c8:	sub	r3, r0, r3
   179cc:	mov	lr, #188	; 0xbc
   179d0:	sub	r0, r2, ip
   179d4:	mlas	r0, lr, r3, r0
   179d8:	beq	17a28 <myencoding_decode_shift_jis@@Base+0xa0>
   179dc:	ldr	r3, [pc, #160]	; 17a84 <myencoding_decode_shift_jis@@Base+0xfc>
   179e0:	add	r3, pc, r3
   179e4:	add	r3, r3, r0, lsl #2
   179e8:	ldr	r3, [r3, #-2648]	; 0xfffff5a8
   179ec:	str	r3, [r1, #12]
   179f0:	ldr	r3, [r1, #12]
   179f4:	cmp	r3, #0
   179f8:	bne	17a18 <myencoding_decode_shift_jis@@Base+0x90>
   179fc:	sub	r3, r0, #8832	; 0x2280
   17a00:	ldr	r2, [pc, #128]	; 17a88 <myencoding_decode_shift_jis@@Base+0x100>
   17a04:	sub	r3, r3, #4
   17a08:	cmp	r3, r2
   17a0c:	addls	r0, r0, #48384	; 0xbd00
   17a10:	addls	r0, r0, #124	; 0x7c
   17a14:	strls	r0, [r1, #12]
   17a18:	ldr	r0, [r1, #12]
   17a1c:	clz	r0, r0
   17a20:	lsr	r0, r0, #5
   17a24:	pop	{r4, pc}
   17a28:	mov	r0, #0
   17a2c:	str	r0, [r1, #12]
   17a30:	b	179f0 <myencoding_decode_shift_jis@@Base+0x68>
   17a34:	cmp	r2, #128	; 0x80
   17a38:	bhi	17a44 <myencoding_decode_shift_jis@@Base+0xbc>
   17a3c:	str	r2, [r1, #12]
   17a40:	bx	lr
   17a44:	add	r3, r2, #95	; 0x5f
   17a48:	uxtb	r3, r3
   17a4c:	cmp	r3, #62	; 0x3e
   17a50:	addls	r2, r2, #65024	; 0xfe00
   17a54:	addls	r2, r2, #192	; 0xc0
   17a58:	bls	17a3c <myencoding_decode_shift_jis@@Base+0xb4>
   17a5c:	add	r0, r2, #127	; 0x7f
   17a60:	add	r3, r2, #32
   17a64:	uxtb	r0, r0
   17a68:	uxtb	r3, r3
   17a6c:	cmp	r3, #28
   17a70:	cmphi	r0, #30
   17a74:	movls	r0, #2
   17a78:	strls	r2, [r1]
   17a7c:	movhi	r0, #1
   17a80:	bx	lr
   17a84:	andeq	ip, r3, ip, ror r9
   17a88:	muleq	r0, ip, r6

00017a8c <myencoding_decode_euc_kr@@Base>:
   17a8c:	ldr	r3, [r1]
   17a90:	cmp	r3, #0
   17a94:	beq	17ae4 <myencoding_decode_euc_kr@@Base+0x58>
   17a98:	mov	r2, #0
   17a9c:	str	r2, [r1]
   17aa0:	sub	r2, r0, #65	; 0x41
   17aa4:	uxtb	r2, r2
   17aa8:	cmp	r2, #189	; 0xbd
   17aac:	bhi	17ad4 <myencoding_decode_euc_kr@@Base+0x48>
   17ab0:	mov	r2, #190	; 0xbe
   17ab4:	sub	r0, r0, #24320	; 0x5f00
   17ab8:	sub	r0, r0, #255	; 0xff
   17abc:	mlas	r0, r2, r3, r0
   17ac0:	ldrne	r3, [pc, #76]	; 17b14 <myencoding_decode_euc_kr@@Base+0x88>
   17ac4:	addne	r3, pc, r3
   17ac8:	addne	r0, r3, r0, lsl #2
   17acc:	ldrne	r3, [r0, #1552]	; 0x610
   17ad0:	strne	r3, [r1, #12]
   17ad4:	ldr	r0, [r1, #12]
   17ad8:	clz	r0, r0
   17adc:	lsr	r0, r0, #5
   17ae0:	bx	lr
   17ae4:	tst	r0, #128	; 0x80
   17ae8:	bne	17af8 <myencoding_decode_euc_kr@@Base+0x6c>
   17aec:	str	r0, [r1, #12]
   17af0:	mov	r0, r3
   17af4:	bx	lr
   17af8:	add	r3, r0, #127	; 0x7f
   17afc:	uxtb	r3, r3
   17b00:	cmp	r3, #125	; 0x7d
   17b04:	strls	r0, [r1]
   17b08:	movls	r0, #2
   17b0c:	movhi	r0, #1
   17b10:	bx	lr
   17b14:	andeq	r6, r4, r0, ror r8

00017b18 <myencoding_decode_iso_8859_8@@Base>:
   17b18:	b	17034 <myencoding_decode_iso_8859_8_i@@Base>

00017b1c <myencoding_get_function_by_id@@Base>:
   17b1c:	ldr	r3, [pc, #8]	; 17b2c <myencoding_get_function_by_id@@Base+0x10>
   17b20:	add	r3, pc, r3
   17b24:	ldr	r0, [r3, r0, lsl #2]
   17b28:	bx	lr
   17b2c:	andeq	r9, pc, ip, lsr r3	; <UNPREDICTABLE>

00017b30 <myencoding_index_gb18030_ranges_code_point@@Base>:
   17b30:	ldr	r3, [pc, #140]	; 17bc4 <myencoding_index_gb18030_ranges_code_point@@Base+0x94>
   17b34:	sub	r2, r0, #39168	; 0x9900
   17b38:	cmp	r0, r3
   17b3c:	ldr	r1, [pc, #132]	; 17bc8 <myencoding_index_gb18030_ranges_code_point@@Base+0x98>
   17b40:	movls	r3, #0
   17b44:	movhi	r3, #1
   17b48:	sub	r2, r2, #252	; 0xfc
   17b4c:	cmp	r2, r1
   17b50:	orrls	r3, r3, #1
   17b54:	cmp	r3, #0
   17b58:	bne	17bb4 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   17b5c:	ldr	r3, [pc, #104]	; 17bcc <myencoding_index_gb18030_ranges_code_point@@Base+0x9c>
   17b60:	cmp	r0, r3
   17b64:	beq	17bbc <myencoding_index_gb18030_ranges_code_point@@Base+0x8c>
   17b68:	ldr	r2, [pc, #96]	; 17bd0 <myencoding_index_gb18030_ranges_code_point@@Base+0xa0>
   17b6c:	mov	r3, #207	; 0xcf
   17b70:	add	r2, pc, r2
   17b74:	sub	r1, r2, #896	; 0x380
   17b78:	push	{lr}		; (str lr, [sp, #-4]!)
   17b7c:	sub	r3, r3, #1
   17b80:	ldr	lr, [r1, r3, lsl #3]
   17b84:	lsl	ip, r3, #3
   17b88:	cmp	r0, lr
   17b8c:	bcc	17ba4 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   17b90:	add	r2, r2, ip
   17b94:	ldr	r2, [r2, #-892]	; 0xfffffc84
   17b98:	add	r0, r0, r2
   17b9c:	sub	r0, r0, r3
   17ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ba4:	cmp	r3, #0
   17ba8:	bne	17b7c <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   17bac:	mov	r2, r3
   17bb0:	b	17b98 <myencoding_index_gb18030_ranges_code_point@@Base+0x68>
   17bb4:	mov	r0, #0
   17bb8:	bx	lr
   17bbc:	ldr	r0, [pc, #16]	; 17bd4 <myencoding_index_gb18030_ranges_code_point@@Base+0xa4>
   17bc0:	bx	lr
   17bc4:	andseq	lr, r2, r7, asr #4
   17bc8:	andeq	r4, r2, fp, asr #16
   17bcc:	andeq	r1, r0, r1, lsr #26
   17bd0:	andeq	lr, r5, r4, ror #14
   17bd4:	andeq	lr, r0, r7, asr #15

00017bd8 <myencoding_decode_gb18030@@Base>:
   17bd8:	ldr	ip, [r1, #8]
   17bdc:	push	{r4, lr}
   17be0:	cmp	ip, #0
   17be4:	mov	r3, r0
   17be8:	beq	17c48 <myencoding_decode_gb18030@@Base+0x70>
   17bec:	sub	r2, r0, #48	; 0x30
   17bf0:	cmp	r2, #9
   17bf4:	mov	r4, r1
   17bf8:	bhi	17c28 <myencoding_decode_gb18030@@Base+0x50>
   17bfc:	ldr	r2, [r1]
   17c00:	mov	r0, #10
   17c04:	ldr	r1, [r1, #4]
   17c08:	mla	r2, r0, r2, r1
   17c0c:	mov	r1, #126	; 0x7e
   17c10:	mla	r2, r1, r2, ip
   17c14:	ldr	r1, [pc, #256]	; 17d1c <myencoding_decode_gb18030@@Base+0x144>
   17c18:	add	r1, r3, r1
   17c1c:	mla	r0, r0, r2, r1
   17c20:	bl	10f10 <myencoding_index_gb18030_ranges_code_point@plt>
   17c24:	str	r0, [r4, #12]
   17c28:	mov	r3, #0
   17c2c:	ldr	r0, [r4, #12]
   17c30:	str	r3, [r4]
   17c34:	str	r3, [r4, #4]
   17c38:	str	r3, [r4, #8]
   17c3c:	clz	r0, r0
   17c40:	lsr	r0, r0, #5
   17c44:	pop	{r4, pc}
   17c48:	ldr	r2, [r1, #4]
   17c4c:	cmp	r2, #0
   17c50:	beq	17c78 <myencoding_decode_gb18030@@Base+0xa0>
   17c54:	add	r2, r0, #127	; 0x7f
   17c58:	uxtb	r2, r2
   17c5c:	cmp	r2, #125	; 0x7d
   17c60:	strls	r0, [r1, #8]
   17c64:	strhi	ip, [r1]
   17c68:	strhi	ip, [r1, #4]
   17c6c:	bhi	17cb8 <myencoding_decode_gb18030@@Base+0xe0>
   17c70:	mov	r0, #2
   17c74:	pop	{r4, pc}
   17c78:	ldr	r0, [r1]
   17c7c:	cmp	r0, #0
   17c80:	beq	17cf0 <myencoding_decode_gb18030@@Base+0x118>
   17c84:	sub	ip, r3, #48	; 0x30
   17c88:	cmp	ip, #9
   17c8c:	strls	r3, [r1, #4]
   17c90:	bls	17c70 <myencoding_decode_gb18030@@Base+0x98>
   17c94:	cmp	r3, #126	; 0x7e
   17c98:	sub	ip, r3, #64	; 0x40
   17c9c:	eor	r4, r3, #128	; 0x80
   17ca0:	movls	lr, #64	; 0x40
   17ca4:	movhi	lr, #65	; 0x41
   17ca8:	cmp	r4, #126	; 0x7e
   17cac:	cmphi	ip, #62	; 0x3e
   17cb0:	str	r2, [r1]
   17cb4:	bls	17cc0 <myencoding_decode_gb18030@@Base+0xe8>
   17cb8:	mov	r0, #1
   17cbc:	pop	{r4, pc}
   17cc0:	mov	ip, #190	; 0xbe
   17cc4:	sub	r3, r3, lr
   17cc8:	mla	r0, ip, r0, r3
   17ccc:	sub	r3, r0, #24320	; 0x5f00
   17cd0:	ldr	r0, [pc, #72]	; 17d20 <myencoding_decode_gb18030@@Base+0x148>
   17cd4:	sub	r3, r3, #190	; 0xbe
   17cd8:	add	r0, pc, r0
   17cdc:	add	r3, r0, r3, lsl #2
   17ce0:	mov	r0, r2
   17ce4:	ldr	r3, [r3, #760]	; 0x2f8
   17ce8:	str	r3, [r1, #12]
   17cec:	pop	{r4, pc}
   17cf0:	tst	r3, #128	; 0x80
   17cf4:	bne	17d00 <myencoding_decode_gb18030@@Base+0x128>
   17cf8:	str	r3, [r1, #12]
   17cfc:	pop	{r4, pc}
   17d00:	cmp	r3, #128	; 0x80
   17d04:	ldreq	r3, [pc, #24]	; 17d24 <myencoding_decode_gb18030@@Base+0x14c>
   17d08:	beq	17cf8 <myencoding_decode_gb18030@@Base+0x120>
   17d0c:	cmp	r3, #255	; 0xff
   17d10:	beq	17cb8 <myencoding_decode_gb18030@@Base+0xe0>
   17d14:	str	r3, [r1]
   17d18:	b	17c70 <myencoding_decode_gb18030@@Base+0x98>
   17d1c:			; <UNDEFINED> instruction: 0xffe6414e
   17d20:	strdeq	lr, [r5], -ip
   17d24:	andeq	r2, r0, ip, lsr #1

00017d28 <myencoding_decode_gbk@@Base>:
   17d28:	b	10bf8 <myencoding_decode_gb18030@plt>

00017d2c <myencoding_decode_shared_utf_16@@Base>:
   17d2c:	ldr	r3, [r1]
   17d30:	cmp	r3, #0
   17d34:	bne	17d44 <myencoding_decode_shared_utf_16@@Base+0x18>
   17d38:	str	r0, [r1]
   17d3c:	mov	r0, #2
   17d40:	bx	lr
   17d44:	push	{r4, lr}
   17d48:	mov	ip, #0
   17d4c:	ldr	lr, [r1, #20]
   17d50:	str	ip, [r1]
   17d54:	cmp	lr, #0
   17d58:	addne	r3, r0, r3, lsl #8
   17d5c:	addeq	r3, r3, r0, lsl #8
   17d60:	ldr	r0, [r1, #4]
   17d64:	ldr	r2, [pc, #128]	; 17dec <myencoding_decode_shared_utf_16@@Base+0xc0>
   17d68:	cmp	r0, ip
   17d6c:	beq	17dc0 <myencoding_decode_shared_utf_16@@Base+0x94>
   17d70:	sub	r4, r3, #56320	; 0xdc00
   17d74:	cmp	r4, r2
   17d78:	str	ip, [r1, #4]
   17d7c:	bhi	17d98 <myencoding_decode_shared_utf_16@@Base+0x6c>
   17d80:	sub	r0, r0, #55296	; 0xd800
   17d84:	add	r3, r3, r0, lsl #10
   17d88:	add	r3, r3, #9216	; 0x2400
   17d8c:	str	r3, [r1, #12]
   17d90:	mov	r0, ip
   17d94:	pop	{r4, pc}
   17d98:	lsr	r2, r3, #8
   17d9c:	cmp	lr, #0
   17da0:	uxtb	r2, r2
   17da4:	uxtb	r3, r3
   17da8:	strne	r2, [r1, #12]
   17dac:	strne	r3, [r1, #16]
   17db0:	streq	r3, [r1, #12]
   17db4:	streq	r2, [r1, #16]
   17db8:	mov	r0, #5
   17dbc:	pop	{r4, pc}
   17dc0:	sub	ip, r3, #55296	; 0xd800
   17dc4:	cmp	ip, r2
   17dc8:	bhi	17dd8 <myencoding_decode_shared_utf_16@@Base+0xac>
   17dcc:	str	r3, [r1, #4]
   17dd0:	mov	r0, #2
   17dd4:	pop	{r4, pc}
   17dd8:	sub	ip, r3, #56320	; 0xdc00
   17ddc:	cmp	ip, r2
   17de0:	strhi	r3, [r1, #12]
   17de4:	movls	r0, #1
   17de8:	pop	{r4, pc}
   17dec:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00017df0 <myencoding_decode_utf_16be@@Base>:
   17df0:	ldr	r3, [r1, #20]
   17df4:	cmp	r3, #0
   17df8:	moveq	r3, #1
   17dfc:	streq	r3, [r1, #20]
   17e00:	b	10bd4 <myencoding_decode_shared_utf_16@plt>

00017e04 <myencoding_decode_utf_16le@@Base>:
   17e04:	ldr	r3, [r1, #20]
   17e08:	cmp	r3, #0
   17e0c:	movne	r3, #0
   17e10:	strne	r3, [r1, #20]
   17e14:	b	10bd4 <myencoding_decode_shared_utf_16@plt>

00017e18 <myencoding_result_clean@@Base>:
   17e18:	mov	r2, #24
   17e1c:	mov	r1, #0
   17e20:	b	108b0 <memset@plt>

00017e24 <myencoding_codepoint_ascii_length@@Base>:
   17e24:	cmp	r0, #127	; 0x7f
   17e28:	bls	17e5c <myencoding_codepoint_ascii_length@@Base+0x38>
   17e2c:	cmp	r0, #2048	; 0x800
   17e30:	bcc	17e64 <myencoding_codepoint_ascii_length@@Base+0x40>
   17e34:	cmp	r0, #65536	; 0x10000
   17e38:	bcc	17e6c <myencoding_codepoint_ascii_length@@Base+0x48>
   17e3c:	cmp	r0, #2097152	; 0x200000
   17e40:	bcc	17e74 <myencoding_codepoint_ascii_length@@Base+0x50>
   17e44:	cmn	r0, #-67108863	; 0xfc000001
   17e48:	bls	17e7c <myencoding_codepoint_ascii_length@@Base+0x58>
   17e4c:	cmp	r0, #0
   17e50:	movge	r0, #6
   17e54:	movlt	r0, #0
   17e58:	bx	lr
   17e5c:	mov	r0, #1
   17e60:	bx	lr
   17e64:	mov	r0, #2
   17e68:	bx	lr
   17e6c:	mov	r0, #3
   17e70:	bx	lr
   17e74:	mov	r0, #4
   17e78:	bx	lr
   17e7c:	mov	r0, #5
   17e80:	bx	lr

00017e84 <myencoding_ascii_utf_8_length@@Base>:
   17e84:	tst	r0, #128	; 0x80
   17e88:	beq	17ecc <myencoding_ascii_utf_8_length@@Base+0x48>
   17e8c:	and	r3, r0, #224	; 0xe0
   17e90:	cmp	r3, #192	; 0xc0
   17e94:	beq	17ed4 <myencoding_ascii_utf_8_length@@Base+0x50>
   17e98:	and	r3, r0, #240	; 0xf0
   17e9c:	cmp	r3, #224	; 0xe0
   17ea0:	beq	17edc <myencoding_ascii_utf_8_length@@Base+0x58>
   17ea4:	and	r3, r0, #248	; 0xf8
   17ea8:	cmp	r3, #240	; 0xf0
   17eac:	beq	17ee4 <myencoding_ascii_utf_8_length@@Base+0x60>
   17eb0:	and	r3, r0, #252	; 0xfc
   17eb4:	cmp	r3, #248	; 0xf8
   17eb8:	beq	17eec <myencoding_ascii_utf_8_length@@Base+0x68>
   17ebc:	cmp	r0, #252	; 0xfc
   17ec0:	moveq	r0, #6
   17ec4:	movne	r0, #0
   17ec8:	bx	lr
   17ecc:	mov	r0, #1
   17ed0:	bx	lr
   17ed4:	mov	r0, #2
   17ed8:	bx	lr
   17edc:	mov	r0, #3
   17ee0:	bx	lr
   17ee4:	mov	r0, #4
   17ee8:	bx	lr
   17eec:	mov	r0, #5
   17ef0:	bx	lr

00017ef4 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   17ef4:	cmp	r0, #127	; 0x7f
   17ef8:	bhi	17f08 <myencoding_codepoint_to_ascii_utf_8@@Base+0x14>
   17efc:	strb	r0, [r1]
   17f00:	mov	r0, #1
   17f04:	bx	lr
   17f08:	cmp	r0, #2048	; 0x800
   17f0c:	bcs	17f34 <myencoding_codepoint_to_ascii_utf_8@@Base+0x40>
   17f10:	mvn	r3, #63	; 0x3f
   17f14:	orr	r3, r3, r0, lsr #6
   17f18:	and	r0, r0, #63	; 0x3f
   17f1c:	strb	r3, [r1]
   17f20:	mvn	r0, r0, lsl #25
   17f24:	mvn	r0, r0, lsr #25
   17f28:	strb	r0, [r1, #1]
   17f2c:	mov	r0, #2
   17f30:	bx	lr
   17f34:	cmp	r0, #65536	; 0x10000
   17f38:	bcs	17f6c <myencoding_codepoint_to_ascii_utf_8@@Base+0x78>
   17f3c:	mvn	r3, #31
   17f40:	orr	r3, r3, r0, lsr #12
   17f44:	strb	r3, [r1]
   17f48:	lsl	r3, r0, #20
   17f4c:	mvn	r2, #127	; 0x7f
   17f50:	and	r0, r0, #63	; 0x3f
   17f54:	orr	r0, r0, r2
   17f58:	orr	r3, r2, r3, lsr #26
   17f5c:	strb	r0, [r1, #2]
   17f60:	strb	r3, [r1, #1]
   17f64:	mov	r0, #3
   17f68:	bx	lr
   17f6c:	cmp	r0, #2097152	; 0x200000
   17f70:	bcs	17fb0 <myencoding_codepoint_to_ascii_utf_8@@Base+0xbc>
   17f74:	mvn	r3, #15
   17f78:	orr	r3, r3, r0, lsr #18
   17f7c:	lsl	r2, r0, #14
   17f80:	strb	r3, [r1]
   17f84:	mvn	r3, #127	; 0x7f
   17f88:	orr	r2, r3, r2, lsr #26
   17f8c:	strb	r2, [r1, #1]
   17f90:	lsl	r2, r0, #20
   17f94:	and	r0, r0, #63	; 0x3f
   17f98:	orr	r0, r0, r3
   17f9c:	orr	r2, r3, r2, lsr #26
   17fa0:	strb	r0, [r1, #3]
   17fa4:	strb	r2, [r1, #2]
   17fa8:	mov	r0, #4
   17fac:	bx	lr
   17fb0:	mov	r0, #0
   17fb4:	bx	lr

00017fb8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   17fb8:	cmp	r0, #127	; 0x7f
   17fbc:	bhi	17fdc <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   17fc0:	ldr	r3, [pc, #196]	; 1808c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   17fc4:	add	r3, pc, r3
   17fc8:	add	r0, r3, r0
   17fcc:	ldrb	r3, [r0, #-1688]	; 0xfffff968
   17fd0:	mov	r0, #1
   17fd4:	strb	r3, [r1]
   17fd8:	bx	lr
   17fdc:	cmp	r0, #2048	; 0x800
   17fe0:	bcs	18008 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x50>
   17fe4:	mvn	r3, #63	; 0x3f
   17fe8:	orr	r3, r3, r0, lsr #6
   17fec:	and	r0, r0, #63	; 0x3f
   17ff0:	strb	r3, [r1]
   17ff4:	mvn	r0, r0, lsl #25
   17ff8:	mvn	r0, r0, lsr #25
   17ffc:	strb	r0, [r1, #1]
   18000:	mov	r0, #2
   18004:	bx	lr
   18008:	cmp	r0, #65536	; 0x10000
   1800c:	bcs	18040 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x88>
   18010:	mvn	r3, #31
   18014:	orr	r3, r3, r0, lsr #12
   18018:	strb	r3, [r1]
   1801c:	lsl	r3, r0, #20
   18020:	mvn	r2, #127	; 0x7f
   18024:	and	r0, r0, #63	; 0x3f
   18028:	orr	r0, r0, r2
   1802c:	orr	r3, r2, r3, lsr #26
   18030:	strb	r0, [r1, #2]
   18034:	strb	r3, [r1, #1]
   18038:	mov	r0, #3
   1803c:	bx	lr
   18040:	cmp	r0, #2097152	; 0x200000
   18044:	bcs	18084 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xcc>
   18048:	mvn	r3, #15
   1804c:	orr	r3, r3, r0, lsr #18
   18050:	lsl	r2, r0, #14
   18054:	strb	r3, [r1]
   18058:	mvn	r3, #127	; 0x7f
   1805c:	orr	r2, r3, r2, lsr #26
   18060:	strb	r2, [r1, #1]
   18064:	lsl	r2, r0, #20
   18068:	and	r0, r0, #63	; 0x3f
   1806c:	orr	r0, r0, r3
   18070:	orr	r2, r3, r2, lsr #26
   18074:	strb	r0, [r1, #3]
   18078:	strb	r2, [r1, #2]
   1807c:	mov	r0, #4
   18080:	bx	lr
   18084:	mov	r0, #0
   18088:	bx	lr
   1808c:			; <UNDEFINED> instruction: 0x000762b0

00018090 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   18090:	ldrb	r3, [r0]
   18094:	tst	r3, #128	; 0x80
   18098:	bne	180a8 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   1809c:	str	r3, [r1]
   180a0:	mov	r0, #1
   180a4:	bx	lr
   180a8:	and	r2, r3, #224	; 0xe0
   180ac:	cmp	r2, #192	; 0xc0
   180b0:	bne	180d8 <myencoding_ascii_utf_8_to_codepoint@@Base+0x48>
   180b4:	lsl	r3, r3, #6
   180b8:	and	r3, r3, #4032	; 0xfc0
   180bc:	str	r3, [r1]
   180c0:	ldrb	r2, [r0, #1]
   180c4:	mov	r0, #2
   180c8:	and	r2, r2, #127	; 0x7f
   180cc:	orr	r3, r2, r3
   180d0:	str	r3, [r1]
   180d4:	bx	lr
   180d8:	and	r2, r3, #240	; 0xf0
   180dc:	cmp	r2, #224	; 0xe0
   180e0:	bne	1811c <myencoding_ascii_utf_8_to_codepoint@@Base+0x8c>
   180e4:	lsl	r3, r3, #12
   180e8:	and	r3, r3, #126976	; 0x1f000
   180ec:	str	r3, [r1]
   180f0:	ldrb	r2, [r0, #1]
   180f4:	lsl	r2, r2, #6
   180f8:	and	r2, r2, #8128	; 0x1fc0
   180fc:	orr	r3, r2, r3
   18100:	str	r3, [r1]
   18104:	ldrb	r2, [r0, #2]
   18108:	mov	r0, #3
   1810c:	and	r2, r2, #127	; 0x7f
   18110:	orr	r3, r2, r3
   18114:	str	r3, [r1]
   18118:	bx	lr
   1811c:	and	r2, r3, #248	; 0xf8
   18120:	cmp	r2, #240	; 0xf0
   18124:	bne	18174 <myencoding_ascii_utf_8_to_codepoint@@Base+0xe4>
   18128:	lsl	r3, r3, #18
   1812c:	and	r3, r3, #3932160	; 0x3c0000
   18130:	str	r3, [r1]
   18134:	ldrb	r2, [r0, #1]
   18138:	lsl	r2, r2, #12
   1813c:	and	r2, r2, #520192	; 0x7f000
   18140:	orr	r2, r2, r3
   18144:	str	r2, [r1]
   18148:	ldrb	r3, [r0, #2]
   1814c:	lsl	r3, r3, #6
   18150:	and	r3, r3, #8128	; 0x1fc0
   18154:	orr	r3, r3, r2
   18158:	str	r3, [r1]
   1815c:	ldrb	r2, [r0, #3]
   18160:	mov	r0, #4
   18164:	and	r2, r2, #127	; 0x7f
   18168:	orr	r3, r2, r3
   1816c:	str	r3, [r1]
   18170:	bx	lr
   18174:	mov	r0, #0
   18178:	bx	lr

0001817c <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1817c:	lsrs	r3, r0, #16
   18180:	beq	181bc <myencoding_codepoint_to_ascii_utf_16@@Base+0x40>
   18184:	sub	r0, r0, #65536	; 0x10000
   18188:	lsr	r3, r0, #10
   1818c:	lsl	r0, r0, #22
   18190:	orr	r3, r3, #55296	; 0xd800
   18194:	lsr	r0, r0, #22
   18198:	orr	r0, r0, #56320	; 0xdc00
   1819c:	lsr	r2, r3, #8
   181a0:	strb	r3, [r1, #1]
   181a4:	lsr	r3, r0, #8
   181a8:	strb	r0, [r1, #3]
   181ac:	strb	r2, [r1]
   181b0:	strb	r3, [r1, #2]
   181b4:	mov	r0, #4
   181b8:	bx	lr
   181bc:	lsr	r3, r0, #8
   181c0:	strb	r0, [r1, #1]
   181c4:	strb	r3, [r1]
   181c8:	mov	r0, #2
   181cc:	bx	lr

000181d0 <myencoding_convert_to_ascii_utf_8@@Base>:
   181d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181d4:	mov	r6, r3
   181d8:	ldr	r3, [r0]
   181dc:	sub	sp, sp, #28
   181e0:	cmp	r3, #0
   181e4:	mov	r4, r0
   181e8:	mov	r8, r1
   181ec:	mov	r5, r2
   181f0:	beq	18298 <myencoding_convert_to_ascii_utf_8@@Base+0xc8>
   181f4:	mov	r2, #24
   181f8:	mov	r1, #0
   181fc:	mov	r0, sp
   18200:	bl	108b0 <memset@plt>
   18204:	mov	r0, r6
   18208:	bl	1082c <myencoding_get_function_by_id@plt>
   1820c:	lsr	r9, r5, #1
   18210:	mov	sl, sp
   18214:	add	r9, r9, #6
   18218:	add	r5, r8, r5
   1821c:	mov	r7, r8
   18220:	mov	fp, r0
   18224:	cmp	r7, r5
   18228:	sub	r0, r7, r8
   1822c:	beq	182b4 <myencoding_convert_to_ascii_utf_8@@Base+0xe4>
   18230:	mov	r1, sl
   18234:	ldrb	r0, [r7], #1
   18238:	blx	fp
   1823c:	cmp	r0, #0
   18240:	bne	18224 <myencoding_convert_to_ascii_utf_8@@Base+0x54>
   18244:	ldr	r6, [r4, #8]
   18248:	ldr	r3, [r4, #4]
   1824c:	add	r2, r6, #6
   18250:	cmp	r2, r3
   18254:	bcc	18274 <myencoding_convert_to_ascii_utf_8@@Base+0xa4>
   18258:	add	r6, r6, r9
   1825c:	mov	r1, r6
   18260:	ldr	r0, [r4]
   18264:	bl	fbd8 <mycore_realloc@plt>
   18268:	cmp	r0, #0
   1826c:	beq	182b0 <myencoding_convert_to_ascii_utf_8@@Base+0xe0>
   18270:	stm	r4, {r0, r6}
   18274:	ldr	r3, [r4, #8]
   18278:	ldr	r1, [r4]
   1827c:	ldr	r0, [sp, #12]
   18280:	add	r1, r1, r3
   18284:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   18288:	ldr	r3, [r4, #8]
   1828c:	add	r0, r3, r0
   18290:	str	r0, [r4, #8]
   18294:	b	18224 <myencoding_convert_to_ascii_utf_8@@Base+0x54>
   18298:	add	r0, r2, #1
   1829c:	stmib	r4, {r0, r3}
   182a0:	bl	10c94 <mycore_malloc@plt>
   182a4:	cmp	r0, #0
   182a8:	str	r0, [r4]
   182ac:	bne	181f4 <myencoding_convert_to_ascii_utf_8@@Base+0x24>
   182b0:	mov	r0, #0
   182b4:	add	sp, sp, #28
   182b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000182bc <myencoding_string_append_chunk@@Base>:
   182bc:	push	{r4, r5, r6, r7, r8, lr}
   182c0:	mov	r4, r0
   182c4:	ldr	r0, [sp, #24]
   182c8:	mov	r5, r2
   182cc:	mov	r6, r3
   182d0:	mov	r7, r1
   182d4:	bl	1082c <myencoding_get_function_by_id@plt>
   182d8:	add	r6, r5, r6
   182dc:	mov	r8, r0
   182e0:	cmp	r6, r5
   182e4:	bne	18318 <myencoding_string_append_chunk@@Base+0x5c>
   182e8:	ldr	r1, [r4, #8]
   182ec:	ldr	r3, [r4, #4]
   182f0:	cmp	r1, r3
   182f4:	bcc	18304 <myencoding_string_append_chunk@@Base+0x48>
   182f8:	add	r1, r1, #1
   182fc:	mov	r0, r4
   18300:	bl	10964 <mycore_string_realloc@plt>
   18304:	ldr	r2, [r4]
   18308:	ldr	r3, [r4, #8]
   1830c:	mov	r1, #0
   18310:	strb	r1, [r2, r3]
   18314:	pop	{r4, r5, r6, r7, r8, pc}
   18318:	mov	r1, r7
   1831c:	ldrb	r0, [r5], #1
   18320:	blx	r8
   18324:	cmp	r0, #0
   18328:	bne	182e0 <myencoding_string_append_chunk@@Base+0x24>
   1832c:	ldr	r1, [r4, #8]
   18330:	ldr	r3, [r4, #4]
   18334:	add	r1, r1, #5
   18338:	cmp	r1, r3
   1833c:	bcc	18348 <myencoding_string_append_chunk@@Base+0x8c>
   18340:	mov	r0, r4
   18344:	bl	10964 <mycore_string_realloc@plt>
   18348:	ldr	r3, [r4, #8]
   1834c:	ldr	r1, [r4]
   18350:	ldr	r0, [r7, #12]
   18354:	add	r1, r1, r3
   18358:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1835c:	ldr	r3, [r4, #8]
   18360:	add	r0, r3, r0
   18364:	str	r0, [r4, #8]
   18368:	b	182e0 <myencoding_string_append_chunk@@Base+0x24>

0001836c <myencoding_string_append@@Base>:
   1836c:	push	{r4, r5, r6, r7, r8, lr}
   18370:	sub	sp, sp, #32
   18374:	add	r4, sp, #8
   18378:	mov	r6, r1
   1837c:	mov	r7, r2
   18380:	mov	r8, r3
   18384:	mov	r5, r0
   18388:	mov	r0, r4
   1838c:	bl	101c0 <myencoding_result_clean@plt>
   18390:	str	r8, [sp]
   18394:	mov	r3, r7
   18398:	mov	r2, r6
   1839c:	mov	r1, r4
   183a0:	mov	r0, r5
   183a4:	bl	fc14 <myencoding_string_append_chunk@plt>
   183a8:	add	sp, sp, #32
   183ac:	pop	{r4, r5, r6, r7, r8, pc}

000183b0 <myencoding_string_append_one@@Base>:
   183b0:	push	{r4, r5, r6, lr}
   183b4:	mov	r4, r0
   183b8:	mov	r0, r3
   183bc:	mov	r6, r2
   183c0:	mov	r5, r1
   183c4:	bl	1082c <myencoding_get_function_by_id@plt>
   183c8:	mov	r1, r5
   183cc:	mov	r3, r0
   183d0:	mov	r0, r6
   183d4:	blx	r3
   183d8:	cmp	r0, #0
   183dc:	popne	{r4, r5, r6, pc}
   183e0:	ldr	r1, [r4, #8]
   183e4:	ldr	r3, [r4, #4]
   183e8:	add	r1, r1, #5
   183ec:	cmp	r1, r3
   183f0:	bcc	183fc <myencoding_string_append_one@@Base+0x4c>
   183f4:	mov	r0, r4
   183f8:	bl	10964 <mycore_string_realloc@plt>
   183fc:	ldr	r3, [r4, #8]
   18400:	ldr	r1, [r4]
   18404:	ldr	r0, [r5, #12]
   18408:	add	r1, r1, r3
   1840c:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   18410:	ldr	r3, [r4, #8]
   18414:	mov	r2, #0
   18418:	add	r0, r0, r3
   1841c:	ldr	r3, [r4]
   18420:	str	r0, [r4, #8]
   18424:	strb	r2, [r3, r0]
   18428:	pop	{r4, r5, r6, pc}

0001842c <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1842c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18430:	mov	r4, r0
   18434:	ldr	r0, [sp, #32]
   18438:	mov	r5, r2
   1843c:	mov	r6, r3
   18440:	mov	r7, r1
   18444:	bl	1082c <myencoding_get_function_by_id@plt>
   18448:	ldr	r9, [pc, #180]	; 18504 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd8>
   1844c:	add	r6, r5, r6
   18450:	add	r9, pc, r9
   18454:	mov	r8, r0
   18458:	cmp	r6, r5
   1845c:	bne	18490 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x64>
   18460:	ldr	r1, [r4, #8]
   18464:	ldr	r3, [r4, #4]
   18468:	cmp	r1, r3
   1846c:	bcc	1847c <myencoding_string_append_chunk_lowercase_ascii@@Base+0x50>
   18470:	add	r1, r1, #1
   18474:	mov	r0, r4
   18478:	bl	10964 <mycore_string_realloc@plt>
   1847c:	ldr	r2, [r4]
   18480:	ldr	r3, [r4, #8]
   18484:	mov	r1, #0
   18488:	strb	r1, [r2, r3]
   1848c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18490:	mov	r1, r7
   18494:	ldrb	r0, [r5]
   18498:	blx	r8
   1849c:	cmp	r0, #0
   184a0:	bne	184fc <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd0>
   184a4:	ldr	r1, [r4, #8]
   184a8:	ldr	r3, [r4, #4]
   184ac:	add	r2, r1, #5
   184b0:	cmp	r2, r3
   184b4:	bcc	184c4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x98>
   184b8:	add	r1, r1, #6
   184bc:	mov	r0, r4
   184c0:	bl	10964 <mycore_string_realloc@plt>
   184c4:	ldr	r3, [r4, #8]
   184c8:	ldr	r1, [r4]
   184cc:	ldr	r0, [r7, #12]
   184d0:	add	r1, r1, r3
   184d4:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   184d8:	cmp	r0, #1
   184dc:	ldrbeq	r1, [r5]
   184e0:	ldreq	r3, [r4, #8]
   184e4:	ldreq	r2, [r4]
   184e8:	ldrbeq	r1, [r9, r1]
   184ec:	strbeq	r1, [r2, r3]
   184f0:	ldr	r3, [r4, #8]
   184f4:	add	r0, r3, r0
   184f8:	str	r0, [r4, #8]
   184fc:	add	r5, r5, #1
   18500:	b	18458 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x2c>
   18504:	andeq	r5, r7, ip, lsl #17

00018508 <myencoding_string_append_lowercase_ascii@@Base>:
   18508:	push	{r4, r5, r6, r7, r8, lr}
   1850c:	sub	sp, sp, #32
   18510:	add	r4, sp, #8
   18514:	mov	r6, r1
   18518:	mov	r7, r2
   1851c:	mov	r8, r3
   18520:	mov	r5, r0
   18524:	mov	r0, r4
   18528:	bl	101c0 <myencoding_result_clean@plt>
   1852c:	str	r8, [sp]
   18530:	mov	r3, r7
   18534:	mov	r2, r6
   18538:	mov	r1, r4
   1853c:	mov	r0, r5
   18540:	bl	10c88 <myencoding_string_append_chunk_lowercase_ascii@plt>
   18544:	add	sp, sp, #32
   18548:	pop	{r4, r5, r6, r7, r8, pc}

0001854c <myhtml_callback_before_token_done@@Base>:
   1854c:	ldr	r0, [r0, #220]	; 0xdc
   18550:	bx	lr

00018554 <myhtml_callback_after_token_done@@Base>:
   18554:	ldr	r0, [r0, #224]	; 0xe0
   18558:	bx	lr

0001855c <myhtml_callback_before_token_done_set@@Base>:
   1855c:	str	r1, [r0, #220]	; 0xdc
   18560:	str	r2, [r0, #228]	; 0xe4
   18564:	bx	lr

00018568 <myhtml_callback_after_token_done_set@@Base>:
   18568:	str	r1, [r0, #224]	; 0xe0
   1856c:	str	r2, [r0, #232]	; 0xe8
   18570:	bx	lr

00018574 <myhtml_callback_tree_node_insert@@Base>:
   18574:	ldr	r0, [r0, #236]	; 0xec
   18578:	bx	lr

0001857c <myhtml_callback_tree_node_remove@@Base>:
   1857c:	ldr	r0, [r0, #240]	; 0xf0
   18580:	bx	lr

00018584 <myhtml_callback_tree_node_insert_set@@Base>:
   18584:	str	r1, [r0, #236]	; 0xec
   18588:	str	r2, [r0, #244]	; 0xf4
   1858c:	bx	lr

00018590 <myhtml_callback_tree_node_remove_set@@Base>:
   18590:	str	r1, [r0, #240]	; 0xf0
   18594:	str	r2, [r0, #248]	; 0xf8
   18598:	bx	lr

0001859c <myhtml_charef_find@@Base>:
   1859c:	push	{r4, r5, r6, r7, r8, lr}
   185a0:	mov	r7, #24
   185a4:	ldr	r5, [pc, #164]	; 18650 <myhtml_charef_find@@Base+0xb4>
   185a8:	ldrb	ip, [r0]
   185ac:	add	r5, pc, r5
   185b0:	mul	lr, r7, ip
   185b4:	add	r6, r5, lr
   185b8:	ldrb	r4, [r5, lr]
   185bc:	cmp	r4, #0
   185c0:	beq	18610 <myhtml_charef_find@@Base+0x74>
   185c4:	ldr	lr, [r1]
   185c8:	ldrb	r8, [r0, lr]
   185cc:	cmp	r4, r8
   185d0:	bne	1860c <myhtml_charef_find@@Base+0x70>
   185d4:	ldr	r4, [r6, #4]
   185d8:	add	lr, lr, #1
   185dc:	cmp	r4, #0
   185e0:	cmpne	lr, r2
   185e4:	str	lr, [r1]
   185e8:	bcc	1862c <myhtml_charef_find@@Base+0x90>
   185ec:	cmp	r3, #0
   185f0:	ldr	r0, [pc, #92]	; 18654 <myhtml_charef_find@@Base+0xb8>
   185f4:	ldrne	r2, [r6, #20]
   185f8:	add	r0, pc, r0
   185fc:	strne	r2, [r3]
   18600:	mov	r3, #24
   18604:	mla	r0, r3, ip, r0
   18608:	pop	{r4, r5, r6, r7, r8, pc}
   1860c:	bcc	18628 <myhtml_charef_find@@Base+0x8c>
   18610:	cmp	r3, #0
   18614:	bne	18634 <myhtml_charef_find@@Base+0x98>
   18618:	ldr	r0, [pc, #56]	; 18658 <myhtml_charef_find@@Base+0xbc>
   1861c:	mov	r3, #24
   18620:	add	r0, pc, r0
   18624:	b	18604 <myhtml_charef_find@@Base+0x68>
   18628:	add	r4, ip, #1
   1862c:	mov	ip, r4
   18630:	b	185b0 <myhtml_charef_find@@Base+0x14>
   18634:	ldr	r1, [pc, #32]	; 1865c <myhtml_charef_find@@Base+0xc0>
   18638:	mov	r2, #24
   1863c:	add	r1, pc, r1
   18640:	mla	r2, r2, ip, r1
   18644:	ldr	r2, [r2, #20]
   18648:	str	r2, [r3]
   1864c:	b	18618 <myhtml_charef_find@@Base+0x7c>
   18650:	andeq	r5, r7, r0, lsr r8
   18654:	andeq	r5, r7, r4, ror #15
   18658:			; <UNDEFINED> instruction: 0x000757bc
   1865c:	andeq	r5, r7, r0, lsr #15

00018660 <myhtml_charef_get_first_position@@Base>:
   18660:	ldr	r3, [pc, #12]	; 18674 <myhtml_charef_get_first_position@@Base+0x14>
   18664:	add	r0, r0, r0, lsl #1
   18668:	add	r3, pc, r3
   1866c:	add	r0, r3, r0, lsl #3
   18670:	bx	lr
   18674:	andeq	r5, r7, r4, ror r7

00018678 <myhtml_charef_find_by_pos@@Base>:
   18678:	push	{r4, r5, r6, r7, r8, lr}
   1867c:	mov	r4, r0
   18680:	ldr	r0, [r2]
   18684:	ldr	ip, [sp, #24]
   18688:	ldrb	r0, [r1, r0]
   1868c:	cmp	r0, #38	; 0x26
   18690:	bne	186c4 <myhtml_charef_find_by_pos@@Base+0x4c>
   18694:	ldr	r0, [ip]
   18698:	mov	r3, #1
   1869c:	str	r3, [ip, #12]
   186a0:	ldr	r3, [r0, #20]
   186a4:	cmp	r3, #0
   186a8:	popne	{r4, r5, r6, r7, r8, pc}
   186ac:	ldr	r0, [ip, #4]
   186b0:	cmp	r0, #0
   186b4:	bne	18790 <myhtml_charef_find_by_pos@@Base+0x118>
   186b8:	ldr	r0, [pc, #220]	; 1879c <myhtml_charef_find_by_pos@@Base+0x124>
   186bc:	add	r0, pc, r0
   186c0:	pop	{r4, r5, r6, r7, r8, pc}
   186c4:	ldr	r6, [pc, #212]	; 187a0 <myhtml_charef_find_by_pos@@Base+0x128>
   186c8:	mov	r7, #24
   186cc:	add	r6, pc, r6
   186d0:	mov	r0, #0
   186d4:	str	r0, [ip, #12]
   186d8:	mul	lr, r7, r4
   186dc:	add	r0, r6, lr
   186e0:	ldrb	r5, [r6, lr]
   186e4:	cmp	r5, #0
   186e8:	bne	186f8 <myhtml_charef_find_by_pos@@Base+0x80>
   186ec:	mov	r3, #1
   186f0:	str	r3, [ip, #12]
   186f4:	b	186ac <myhtml_charef_find_by_pos@@Base+0x34>
   186f8:	ldr	lr, [r2]
   186fc:	ldrb	r8, [r1, lr]
   18700:	cmp	r5, r8
   18704:	bne	18784 <myhtml_charef_find_by_pos@@Base+0x10c>
   18708:	cmp	r5, #59	; 0x3b
   1870c:	bne	18720 <myhtml_charef_find_by_pos@@Base+0xa8>
   18710:	mov	r3, #1
   18714:	str	r3, [ip, #12]
   18718:	str	r0, [ip]
   1871c:	pop	{r4, r5, r6, r7, r8, pc}
   18720:	ldr	r4, [r0, #4]
   18724:	add	lr, lr, #1
   18728:	cmp	r4, #0
   1872c:	str	lr, [r2]
   18730:	bne	18740 <myhtml_charef_find_by_pos@@Base+0xc8>
   18734:	mov	r3, #1
   18738:	str	r3, [ip, #12]
   1873c:	pop	{r4, r5, r6, r7, r8, pc}
   18740:	cmp	lr, r3
   18744:	bcc	1875c <myhtml_charef_find_by_pos@@Base+0xe4>
   18748:	ldr	r3, [r0, #20]
   1874c:	str	r0, [ip]
   18750:	cmp	r3, #0
   18754:	stmibne	ip, {r0, lr}
   18758:	pop	{r4, r5, r6, r7, r8, pc}
   1875c:	ldrb	r5, [r1, lr]
   18760:	cmp	r5, #38	; 0x26
   18764:	moveq	r3, #1
   18768:	streq	r3, [ip, #12]
   1876c:	streq	r0, [ip]
   18770:	beq	186a0 <myhtml_charef_find_by_pos@@Base+0x28>
   18774:	ldr	r5, [r0, #20]
   18778:	cmp	r5, #0
   1877c:	stmibne	ip, {r0, lr}
   18780:	b	186d8 <myhtml_charef_find_by_pos@@Base+0x60>
   18784:	bcs	186ec <myhtml_charef_find_by_pos@@Base+0x74>
   18788:	add	r4, r4, #1
   1878c:	b	186d8 <myhtml_charef_find_by_pos@@Base+0x60>
   18790:	ldr	r3, [ip, #8]
   18794:	str	r3, [r2]
   18798:	pop	{r4, r5, r6, r7, r8, pc}
   1879c:	andeq	r5, r7, r0, lsr #14
   187a0:	andeq	r5, r7, r0, lsl r7

000187a4 <myhtml_data_process_state_ampersand_data@@Base>:
   187a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   187a8:	sub	sp, sp, #20
   187ac:	mov	r7, r2
   187b0:	add	r2, sp, #16
   187b4:	mov	r5, r3
   187b8:	str	r3, [r2, #-4]!
   187bc:	mov	r3, r0
   187c0:	mov	r4, r0
   187c4:	ldr	r0, [r3, #44]!	; 0x2c
   187c8:	mov	r6, r1
   187cc:	str	r3, [sp]
   187d0:	mov	r1, r7
   187d4:	ldr	r3, [sp, #48]	; 0x30
   187d8:	ldr	r0, [r0, #4]
   187dc:	bl	107c0 <myhtml_charef_find_by_pos@plt>
   187e0:	ldr	r3, [r4, #56]	; 0x38
   187e4:	ldr	r9, [pc, #444]	; 189a8 <myhtml_data_process_state_ampersand_data@@Base+0x204>
   187e8:	cmp	r3, #0
   187ec:	add	r9, pc, r9
   187f0:	ldr	r2, [sp, #12]
   187f4:	beq	18844 <myhtml_data_process_state_ampersand_data@@Base+0xa0>
   187f8:	ldr	r3, [pc, #428]	; 189ac <myhtml_data_process_state_ampersand_data@@Base+0x208>
   187fc:	mov	r8, r0
   18800:	ldr	r3, [r9, r3]
   18804:	str	r3, [r4]
   18808:	ldrb	r3, [r7, r2]
   1880c:	cmp	r3, #59	; 0x3b
   18810:	addeq	r2, r2, #1
   18814:	streq	r2, [sp, #12]
   18818:	beq	18890 <myhtml_data_process_state_ampersand_data@@Base+0xec>
   1881c:	ldrb	r1, [r4, #60]	; 0x3c
   18820:	cmp	r1, #0
   18824:	beq	18890 <myhtml_data_process_state_ampersand_data@@Base+0xec>
   18828:	cmp	r3, #61	; 0x3d
   1882c:	beq	18844 <myhtml_data_process_state_ampersand_data@@Base+0xa0>
   18830:	ldr	r1, [pc, #376]	; 189b0 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   18834:	add	r1, pc, r1
   18838:	ldr	r3, [r1, r3, lsl #2]
   1883c:	cmp	r3, #255	; 0xff
   18840:	beq	18890 <myhtml_data_process_state_ampersand_data@@Base+0xec>
   18844:	sub	r2, r2, r5
   18848:	ldr	r3, [r4, #32]
   1884c:	add	r1, r7, r5
   18850:	mov	r0, r6
   18854:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18858:	ldr	r2, [sp, #12]
   1885c:	add	r0, r5, r0
   18860:	cmp	r0, r2
   18864:	beq	1895c <myhtml_data_process_state_ampersand_data@@Base+0x1b8>
   18868:	ldr	ip, [r4, #4]
   1886c:	ldrb	r3, [r4, #61]	; 0x3d
   18870:	cmp	ip, #0
   18874:	sub	r2, r2, r0
   18878:	add	r1, r7, r0
   1887c:	bne	18988 <myhtml_data_process_state_ampersand_data@@Base+0x1e4>
   18880:	mov	r0, r6
   18884:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   18888:	str	r0, [r4, #32]
   1888c:	b	1895c <myhtml_data_process_state_ampersand_data@@Base+0x1b8>
   18890:	ldr	r3, [r8, #20]
   18894:	cmp	r3, #0
   18898:	addne	r7, r8, #12
   1889c:	movne	r5, #0
   188a0:	bne	18934 <myhtml_data_process_state_ampersand_data@@Base+0x190>
   188a4:	ldr	r2, [sp, #12]
   188a8:	ldr	r3, [r4, #32]
   188ac:	sub	r2, r2, r5
   188b0:	add	r1, r7, r5
   188b4:	mov	r0, r6
   188b8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   188bc:	ldr	r2, [sp, #12]
   188c0:	add	r0, r5, r0
   188c4:	cmp	r0, r2
   188c8:	beq	18954 <myhtml_data_process_state_ampersand_data@@Base+0x1b0>
   188cc:	ldr	ip, [r4, #4]
   188d0:	ldrb	r3, [r4, #61]	; 0x3d
   188d4:	cmp	ip, #0
   188d8:	sub	r2, r2, r0
   188dc:	add	r1, r7, r0
   188e0:	bne	18968 <myhtml_data_process_state_ampersand_data@@Base+0x1c4>
   188e4:	mov	r0, r6
   188e8:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   188ec:	str	r0, [r4, #32]
   188f0:	b	18954 <myhtml_data_process_state_ampersand_data@@Base+0x1b0>
   188f4:	ldr	r1, [r6, #8]
   188f8:	ldr	r3, [r6, #4]
   188fc:	add	r1, r1, #5
   18900:	cmp	r1, r3
   18904:	bcc	18910 <myhtml_data_process_state_ampersand_data@@Base+0x16c>
   18908:	mov	r0, r6
   1890c:	bl	10964 <mycore_string_realloc@plt>
   18910:	ldr	r3, [r4, #36]	; 0x24
   18914:	ldr	r1, [r6]
   18918:	ldr	r0, [r7], #4
   1891c:	add	r1, r1, r3
   18920:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   18924:	ldr	r3, [r4, #36]	; 0x24
   18928:	add	r5, r5, #1
   1892c:	add	r0, r3, r0
   18930:	str	r0, [r4, #36]	; 0x24
   18934:	ldr	r3, [r8, #20]
   18938:	cmp	r5, r3
   1893c:	bcc	188f4 <myhtml_data_process_state_ampersand_data@@Base+0x150>
   18940:	ldr	r3, [r4, #36]	; 0x24
   18944:	ldr	r2, [r6]
   18948:	mov	r1, #0
   1894c:	str	r3, [r6, #8]
   18950:	strb	r1, [r2, r3]
   18954:	mov	r3, #0
   18958:	str	r3, [r4, #48]	; 0x30
   1895c:	ldr	r0, [sp, #12]
   18960:	add	sp, sp, #20
   18964:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18968:	str	r3, [sp, #4]
   1896c:	str	ip, [sp]
   18970:	mov	r3, r2
   18974:	mov	r0, r6
   18978:	mov	r2, r1
   1897c:	add	r1, r4, #8
   18980:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18984:	b	188ec <myhtml_data_process_state_ampersand_data@@Base+0x148>
   18988:	str	r3, [sp, #4]
   1898c:	str	ip, [sp]
   18990:	mov	r3, r2
   18994:	mov	r0, r6
   18998:	mov	r2, r1
   1899c:	add	r1, r4, #8
   189a0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   189a4:	b	18888 <myhtml_data_process_state_ampersand_data@@Base+0xe4>
   189a8:	andeq	r8, pc, ip, lsl #16
   189ac:			; <UNDEFINED> instruction: 0x000009b8
   189b0:	andeq	sp, sp, r8, lsl r9

000189b4 <myhtml_data_process_entry_clean@@Base>:
   189b4:	push	{r4, r5, r6, lr}
   189b8:	mov	r2, #64	; 0x40
   189bc:	ldr	r4, [pc, #28]	; 189e0 <myhtml_data_process_entry_clean@@Base+0x2c>
   189c0:	mov	r1, #0
   189c4:	mov	r5, r0
   189c8:	bl	108b0 <memset@plt>
   189cc:	ldr	r3, [pc, #16]	; 189e4 <myhtml_data_process_entry_clean@@Base+0x30>
   189d0:	add	r4, pc, r4
   189d4:	ldr	r3, [r4, r3]
   189d8:	str	r3, [r5]
   189dc:	pop	{r4, r5, r6, pc}
   189e0:	andeq	r8, pc, r8, lsr #12
   189e4:			; <UNDEFINED> instruction: 0x000009b8

000189e8 <myhtml_data_process_string_append_char@@Base>:
   189e8:	push	{r4, r5, r6, lr}
   189ec:	mov	r5, r1
   189f0:	ldr	r1, [r0, #8]
   189f4:	ldr	r3, [r0, #4]
   189f8:	add	r1, r1, #2
   189fc:	cmp	r1, r3
   18a00:	mov	r4, r0
   18a04:	bcc	18a0c <myhtml_data_process_string_append_char@@Base+0x24>
   18a08:	bl	10964 <mycore_string_realloc@plt>
   18a0c:	ldr	r3, [r4, #8]
   18a10:	ldr	r2, [r4]
   18a14:	mov	r1, #0
   18a18:	strb	r5, [r2, r3]
   18a1c:	ldr	r3, [r4, #8]
   18a20:	ldr	r2, [r4]
   18a24:	add	r3, r3, #1
   18a28:	str	r3, [r4, #8]
   18a2c:	strb	r1, [r2, r3]
   18a30:	pop	{r4, r5, r6, pc}

00018a34 <myhtml_data_process_state_data@@Base>:
   18a34:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a38:	mov	r9, r2
   18a3c:	mov	r6, r3
   18a40:	mov	r8, r1
   18a44:	ldr	r2, [sp, #48]	; 0x30
   18a48:	add	r1, r9, r3
   18a4c:	ldr	fp, [pc, #312]	; 18b8c <myhtml_data_process_state_data@@Base+0x158>
   18a50:	mov	r5, r0
   18a54:	mov	r3, r1
   18a58:	mov	r4, r6
   18a5c:	add	fp, pc, fp
   18a60:	cmp	r4, r2
   18a64:	bcc	18ab0 <myhtml_data_process_state_data@@Base+0x7c>
   18a68:	ldr	r3, [r5, #32]
   18a6c:	sub	r2, r4, r6
   18a70:	mov	r0, r8
   18a74:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18a78:	add	r0, r6, r0
   18a7c:	cmp	r4, r0
   18a80:	beq	18b2c <myhtml_data_process_state_data@@Base+0xf8>
   18a84:	ldr	ip, [r5, #4]
   18a88:	ldrb	r3, [r5, #61]	; 0x3d
   18a8c:	cmp	ip, #0
   18a90:	sub	r2, r4, r0
   18a94:	add	r1, r9, r0
   18a98:	bne	18b6c <myhtml_data_process_state_data@@Base+0x138>
   18a9c:	mov	r0, r8
   18aa0:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   18aa4:	str	r0, [r5, #32]
   18aa8:	mov	r0, r4
   18aac:	b	18b2c <myhtml_data_process_state_data@@Base+0xf8>
   18ab0:	mov	sl, r3
   18ab4:	add	r7, r4, #1
   18ab8:	ldrb	r0, [sl]
   18abc:	add	r3, r3, #1
   18ac0:	cmp	r0, #38	; 0x26
   18ac4:	bne	18b64 <myhtml_data_process_state_data@@Base+0x130>
   18ac8:	ldr	r3, [r5, #32]
   18acc:	sub	r2, r4, r6
   18ad0:	mov	r0, r8
   18ad4:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18ad8:	add	r0, r6, r0
   18adc:	cmp	r4, r0
   18ae0:	beq	18b08 <myhtml_data_process_state_data@@Base+0xd4>
   18ae4:	ldr	ip, [r5, #4]
   18ae8:	ldrb	r3, [r5, #61]	; 0x3d
   18aec:	cmp	ip, #0
   18af0:	sub	r2, r4, r0
   18af4:	add	r1, r9, r0
   18af8:	bne	18b34 <myhtml_data_process_state_data@@Base+0x100>
   18afc:	mov	r0, r8
   18b00:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   18b04:	str	r0, [r5, #32]
   18b08:	ldr	r3, [r8, #8]
   18b0c:	mov	r0, r8
   18b10:	str	r3, [r5, #36]	; 0x24
   18b14:	ldr	r3, [pc, #116]	; 18b90 <myhtml_data_process_state_data@@Base+0x15c>
   18b18:	ldr	r3, [fp, r3]
   18b1c:	str	r3, [r5]
   18b20:	ldrb	r1, [sl]
   18b24:	bl	1106c <myhtml_data_process_string_append_char@plt>
   18b28:	mov	r0, r7
   18b2c:	add	sp, sp, #12
   18b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b34:	add	r4, r5, #8
   18b38:	str	r3, [sp, #4]
   18b3c:	str	ip, [sp]
   18b40:	mov	r3, r2
   18b44:	mov	r0, r8
   18b48:	mov	r2, r1
   18b4c:	mov	r1, r4
   18b50:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18b54:	str	r0, [r5, #32]
   18b58:	mov	r0, r4
   18b5c:	bl	101c0 <myencoding_result_clean@plt>
   18b60:	b	18b08 <myhtml_data_process_state_data@@Base+0xd4>
   18b64:	mov	r4, r7
   18b68:	b	18a60 <myhtml_data_process_state_data@@Base+0x2c>
   18b6c:	str	r3, [sp, #4]
   18b70:	str	ip, [sp]
   18b74:	mov	r3, r2
   18b78:	mov	r0, r8
   18b7c:	mov	r2, r1
   18b80:	add	r1, r5, #8
   18b84:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18b88:	b	18aa4 <myhtml_data_process_state_data@@Base+0x70>
   18b8c:	muleq	pc, ip, r5	; <UNPREDICTABLE>
   18b90:	andeq	r0, r0, ip, ror r9

00018b94 <myhtml_data_process_state_ampersand@@Base>:
   18b94:	push	{r4, r5, r6, r7, r8, lr}
   18b98:	mov	r8, r1
   18b9c:	ldrb	r1, [r2, r3]
   18ba0:	ldr	r6, [pc, #196]	; 18c6c <myhtml_data_process_state_ampersand@@Base+0xd8>
   18ba4:	mov	r4, r0
   18ba8:	cmp	r1, #35	; 0x23
   18bac:	add	r6, pc, r6
   18bb0:	mov	r7, r2
   18bb4:	mov	r5, r3
   18bb8:	bne	18c18 <myhtml_data_process_state_ampersand@@Base+0x84>
   18bbc:	mov	r0, r8
   18bc0:	bl	1106c <myhtml_data_process_string_append_char@plt>
   18bc4:	mov	r3, #0
   18bc8:	str	r3, [r4, #40]	; 0x28
   18bcc:	ldr	r3, [sp, #24]
   18bd0:	add	r0, r5, #1
   18bd4:	cmp	r0, r3
   18bd8:	bcc	18bec <myhtml_data_process_state_ampersand@@Base+0x58>
   18bdc:	ldr	r3, [pc, #140]	; 18c70 <myhtml_data_process_state_ampersand@@Base+0xdc>
   18be0:	ldr	r3, [r6, r3]
   18be4:	str	r3, [r4]
   18be8:	pop	{r4, r5, r6, r7, r8, pc}
   18bec:	ldrb	r1, [r7, r0]
   18bf0:	and	r3, r1, #223	; 0xdf
   18bf4:	cmp	r3, #88	; 0x58
   18bf8:	bne	18c10 <myhtml_data_process_state_ampersand@@Base+0x7c>
   18bfc:	mov	r0, r8
   18c00:	bl	1106c <myhtml_data_process_string_append_char@plt>
   18c04:	add	r0, r5, #2
   18c08:	ldr	r3, [pc, #100]	; 18c74 <myhtml_data_process_state_ampersand@@Base+0xe0>
   18c0c:	b	18be0 <myhtml_data_process_state_ampersand@@Base+0x4c>
   18c10:	ldr	r3, [pc, #96]	; 18c78 <myhtml_data_process_state_ampersand@@Base+0xe4>
   18c14:	b	18be0 <myhtml_data_process_state_ampersand@@Base+0x4c>
   18c18:	mov	r3, #0
   18c1c:	str	r3, [r0, #48]	; 0x30
   18c20:	ldrb	r0, [r2, r5]
   18c24:	bl	10a54 <myhtml_charef_get_first_position@plt>
   18c28:	str	r0, [r4, #44]	; 0x2c
   18c2c:	ldrb	r3, [r0]
   18c30:	cmp	r3, #0
   18c34:	bne	18c4c <myhtml_data_process_state_ampersand@@Base+0xb8>
   18c38:	ldr	r3, [pc, #60]	; 18c7c <myhtml_data_process_state_ampersand@@Base+0xe8>
   18c3c:	mov	r0, r5
   18c40:	ldr	r3, [r6, r3]
   18c44:	str	r3, [r4]
   18c48:	pop	{r4, r5, r6, r7, r8, pc}
   18c4c:	ldr	r3, [pc, #44]	; 18c80 <myhtml_data_process_state_ampersand@@Base+0xec>
   18c50:	mov	r0, r8
   18c54:	ldr	r3, [r6, r3]
   18c58:	str	r3, [r4]
   18c5c:	ldrb	r1, [r7, r5]
   18c60:	bl	1106c <myhtml_data_process_string_append_char@plt>
   18c64:	add	r0, r5, #1
   18c68:	pop	{r4, r5, r6, r7, r8, pc}
   18c6c:	andeq	r8, pc, ip, asr #8
   18c70:	andeq	r0, r0, r0, ror r7
   18c74:	andeq	r0, r0, r8, ror r7
   18c78:	andeq	r0, r0, r0, lsr #19
   18c7c:			; <UNDEFINED> instruction: 0x000009b8
   18c80:	andeq	r0, r0, ip, asr #16

00018c84 <myhtml_data_process_state_ampersand_hash@@Base>:
   18c84:	push	{r4, r5, r6, lr}
   18c88:	mov	r6, r0
   18c8c:	mov	r0, r1
   18c90:	ldrb	r1, [r2, r3]
   18c94:	mov	r4, r3
   18c98:	ldr	r5, [pc, #48]	; 18cd0 <myhtml_data_process_state_ampersand_hash@@Base+0x4c>
   18c9c:	and	r3, r1, #223	; 0xdf
   18ca0:	cmp	r3, #88	; 0x58
   18ca4:	add	r5, pc, r5
   18ca8:	bne	18cc8 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   18cac:	bl	1106c <myhtml_data_process_string_append_char@plt>
   18cb0:	ldr	r3, [pc, #28]	; 18cd4 <myhtml_data_process_state_ampersand_hash@@Base+0x50>
   18cb4:	add	r4, r4, #1
   18cb8:	ldr	r3, [r5, r3]
   18cbc:	mov	r0, r4
   18cc0:	str	r3, [r6]
   18cc4:	pop	{r4, r5, r6, pc}
   18cc8:	ldr	r3, [pc, #8]	; 18cd8 <myhtml_data_process_state_ampersand_hash@@Base+0x54>
   18ccc:	b	18cb8 <myhtml_data_process_state_ampersand_hash@@Base+0x34>
   18cd0:	andeq	r8, pc, r4, asr r3	; <UNPREDICTABLE>
   18cd4:	andeq	r0, r0, r8, ror r7
   18cd8:	andeq	r0, r0, r0, lsr #19

00018cdc <myhtml_data_process_state_end@@Base>:
   18cdc:	push	{r4, r5, r6, lr}
   18ce0:	mov	r4, r1
   18ce4:	ldr	r1, [r1, #8]
   18ce8:	ldr	r3, [r4, #4]
   18cec:	add	r1, r1, #5
   18cf0:	cmp	r1, r3
   18cf4:	mov	r6, r0
   18cf8:	bcc	18d04 <myhtml_data_process_state_end@@Base+0x28>
   18cfc:	mov	r0, r4
   18d00:	bl	10964 <mycore_string_realloc@plt>
   18d04:	ldr	r3, [r6, #40]	; 0x28
   18d08:	cmp	r3, #159	; 0x9f
   18d0c:	bhi	18d50 <myhtml_data_process_state_end@@Base+0x74>
   18d10:	ldr	r2, [pc, #88]	; 18d70 <myhtml_data_process_state_end@@Base+0x94>
   18d14:	add	r2, pc, r2
   18d18:	add	r3, r2, r3, lsl #2
   18d1c:	ldr	r3, [r3, #1024]	; 0x400
   18d20:	str	r3, [r6, #40]	; 0x28
   18d24:	ldr	r5, [r6, #36]	; 0x24
   18d28:	ldr	r1, [r4]
   18d2c:	ldr	r0, [r6, #40]	; 0x28
   18d30:	add	r1, r1, r5
   18d34:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   18d38:	ldr	r3, [r4]
   18d3c:	mov	r2, #0
   18d40:	add	r0, r5, r0
   18d44:	str	r0, [r4, #8]
   18d48:	strb	r2, [r3, r0]
   18d4c:	pop	{r4, r5, r6, pc}
   18d50:	sub	r2, r3, #55296	; 0xd800
   18d54:	cmp	r2, #2048	; 0x800
   18d58:	bcs	18d64 <myhtml_data_process_state_end@@Base+0x88>
   18d5c:	ldr	r3, [pc, #16]	; 18d74 <myhtml_data_process_state_end@@Base+0x98>
   18d60:	b	18d20 <myhtml_data_process_state_end@@Base+0x44>
   18d64:	cmp	r3, #1114112	; 0x110000
   18d68:	bcs	18d5c <myhtml_data_process_state_end@@Base+0x80>
   18d6c:	b	18d24 <myhtml_data_process_state_end@@Base+0x48>
   18d70:	andeq	sp, sp, r8, lsr r4
   18d74:	strdeq	pc, [r0], -sp

00018d78 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   18d78:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d7c:	mov	r8, r2
   18d80:	ldr	r9, [pc, #316]	; 18ec4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x14c>
   18d84:	mov	r6, r3
   18d88:	mov	r4, r0
   18d8c:	ldr	lr, [sp, #48]	; 0x30
   18d90:	add	r0, r8, r3
   18d94:	ldr	sl, [pc, #300]	; 18ec8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x150>
   18d98:	ldr	r2, [pc, #300]	; 18ecc <myhtml_data_process_state_ampersand_hash_data@@Base+0x154>
   18d9c:	mov	r7, r1
   18da0:	mov	r3, r0
   18da4:	mov	r5, r6
   18da8:	add	r9, pc, r9
   18dac:	mov	fp, #10
   18db0:	add	r2, pc, r2
   18db4:	cmp	r5, lr
   18db8:	bcc	18df4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x7c>
   18dbc:	mov	r1, r0
   18dc0:	ldr	r3, [r4, #32]
   18dc4:	sub	r2, r5, r6
   18dc8:	mov	r0, r7
   18dcc:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18dd0:	add	r0, r6, r0
   18dd4:	cmp	r5, r0
   18dd8:	beq	18e80 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   18ddc:	ldr	ip, [r4, #4]
   18de0:	ldrb	r3, [r4, #61]	; 0x3d
   18de4:	cmp	ip, #0
   18de8:	sub	r2, r5, r0
   18dec:	add	r1, r8, r0
   18df0:	b	18e54 <myhtml_data_process_state_ampersand_hash_data@@Base+0xdc>
   18df4:	mov	r1, r3
   18df8:	add	r3, r3, #1
   18dfc:	ldrb	ip, [r1]
   18e00:	add	ip, r9, ip
   18e04:	ldrb	ip, [ip, #1664]	; 0x680
   18e08:	cmp	ip, #255	; 0xff
   18e0c:	bne	18e8c <myhtml_data_process_state_ampersand_hash_data@@Base+0x114>
   18e10:	ldr	r3, [pc, #184]	; 18ed0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x158>
   18e14:	cmp	r5, r6
   18e18:	ldr	r3, [r2, r3]
   18e1c:	str	r3, [r4]
   18e20:	bne	18e68 <myhtml_data_process_state_ampersand_hash_data@@Base+0xf0>
   18e24:	ldr	r3, [r4, #32]
   18e28:	mov	r2, #0
   18e2c:	mov	r0, r7
   18e30:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18e34:	add	r1, r5, r0
   18e38:	cmp	r5, r1
   18e3c:	beq	18e80 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   18e40:	ldr	ip, [r4, #4]
   18e44:	ldrb	r3, [r4, #61]	; 0x3d
   18e48:	cmp	ip, #0
   18e4c:	rsb	r2, r0, #0
   18e50:	add	r1, r8, r1
   18e54:	bne	18ea4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x12c>
   18e58:	mov	r0, r7
   18e5c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   18e60:	str	r0, [r4, #32]
   18e64:	b	18e80 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   18e68:	ldrb	r3, [r1]
   18e6c:	mov	r0, r4
   18e70:	mov	r1, r7
   18e74:	cmp	r3, #59	; 0x3b
   18e78:	addeq	r5, r5, #1
   18e7c:	bl	10370 <myhtml_data_process_state_end@plt>
   18e80:	mov	r0, r5
   18e84:	add	sp, sp, #12
   18e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e8c:	ldr	r1, [r4, #40]	; 0x28
   18e90:	add	r5, r5, #1
   18e94:	cmp	r1, sl
   18e98:	mlals	ip, fp, r1, ip
   18e9c:	strls	ip, [r4, #40]	; 0x28
   18ea0:	b	18db4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x3c>
   18ea4:	str	r3, [sp, #4]
   18ea8:	str	ip, [sp]
   18eac:	mov	r3, r2
   18eb0:	mov	r0, r7
   18eb4:	mov	r2, r1
   18eb8:	add	r1, r4, #8
   18ebc:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18ec0:	b	18e60 <myhtml_data_process_state_ampersand_hash_data@@Base+0xe8>
   18ec4:	andeq	sp, sp, r4, lsr #7
   18ec8:			; <UNDEFINED> instruction: 0x0010ffff
   18ecc:	andeq	r8, pc, r8, asr #4
   18ed0:			; <UNDEFINED> instruction: 0x000009b8

00018ed4 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   18ed4:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   18ed8:	mov	r7, r1
   18edc:	ldr	lr, [pc, #336]	; 19034 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x160>
   18ee0:	add	r1, r2, r3
   18ee4:	ldr	r9, [sp, #40]	; 0x28
   18ee8:	ldr	sl, [pc, #328]	; 19038 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x164>
   18eec:	mov	r8, r2
   18ef0:	ldr	ip, [pc, #324]	; 1903c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x168>
   18ef4:	mov	r4, r0
   18ef8:	mov	r6, r3
   18efc:	mov	r2, r1
   18f00:	mov	r5, r3
   18f04:	add	lr, pc, lr
   18f08:	add	ip, pc, ip
   18f0c:	cmp	r5, r9
   18f10:	bcc	18f48 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x74>
   18f14:	ldr	r3, [r4, #32]
   18f18:	sub	r2, r5, r6
   18f1c:	mov	r0, r7
   18f20:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18f24:	add	r0, r6, r0
   18f28:	cmp	r5, r0
   18f2c:	beq	18fd8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x104>
   18f30:	ldr	ip, [r4, #4]
   18f34:	ldrb	r3, [r4, #61]	; 0x3d
   18f38:	cmp	ip, #0
   18f3c:	sub	r2, r5, r0
   18f40:	add	r1, r8, r0
   18f44:	b	18fac <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd8>
   18f48:	mov	r0, r2
   18f4c:	add	r2, r2, #1
   18f50:	ldrb	r3, [r0]
   18f54:	add	r3, lr, r3
   18f58:	ldrb	r3, [r3, #1920]	; 0x780
   18f5c:	cmp	r3, #255	; 0xff
   18f60:	bne	18fe4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x110>
   18f64:	ldr	r3, [pc, #212]	; 19040 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x16c>
   18f68:	cmp	r5, r6
   18f6c:	ldr	r3, [ip, r3]
   18f70:	str	r3, [r4]
   18f74:	bne	18fc0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xec>
   18f78:	mov	r1, r0
   18f7c:	ldr	r3, [r4, #32]
   18f80:	mov	r2, #0
   18f84:	mov	r0, r7
   18f88:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   18f8c:	add	r1, r5, r0
   18f90:	cmp	r5, r1
   18f94:	beq	18fd8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x104>
   18f98:	ldr	ip, [r4, #4]
   18f9c:	ldrb	r3, [r4, #61]	; 0x3d
   18fa0:	cmp	ip, #0
   18fa4:	rsb	r2, r0, #0
   18fa8:	add	r1, r8, r1
   18fac:	bne	19014 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   18fb0:	mov	r0, r7
   18fb4:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   18fb8:	str	r0, [r4, #32]
   18fbc:	b	18fd8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x104>
   18fc0:	ldrb	r3, [r0]
   18fc4:	mov	r1, r7
   18fc8:	mov	r0, r4
   18fcc:	cmp	r3, #59	; 0x3b
   18fd0:	addeq	r5, r5, #1
   18fd4:	bl	10370 <myhtml_data_process_state_end@plt>
   18fd8:	mov	r0, r5
   18fdc:	add	sp, sp, #8
   18fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18fe4:	ldr	r3, [r4, #40]	; 0x28
   18fe8:	cmp	r3, sl
   18fec:	bhi	1900c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x138>
   18ff0:	lsl	r3, r3, #4
   18ff4:	str	r3, [r4, #40]	; 0x28
   18ff8:	ldrb	r0, [r2, #-1]
   18ffc:	add	r0, lr, r0
   19000:	ldrb	r0, [r0, #1920]	; 0x780
   19004:	orr	r3, r0, r3
   19008:	str	r3, [r4, #40]	; 0x28
   1900c:	add	r5, r5, #1
   19010:	b	18f0c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x38>
   19014:	str	r3, [sp, #4]
   19018:	str	ip, [sp]
   1901c:	mov	r3, r2
   19020:	mov	r0, r7
   19024:	mov	r2, r1
   19028:	add	r1, r4, #8
   1902c:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19030:	b	18fb8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xe4>
   19034:	andeq	sp, sp, r8, asr #4
   19038:			; <UNDEFINED> instruction: 0x0010ffff
   1903c:	strdeq	r8, [pc], -r0
   19040:			; <UNDEFINED> instruction: 0x000009b8

00019044 <myhtml_data_process@@Base>:
   19044:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   19048:	mov	r4, r3
   1904c:	mov	r5, r0
   19050:	mov	r6, r1
   19054:	mov	r7, r2
   19058:	mov	r3, #0
   1905c:	cmp	r3, r4
   19060:	bcc	1906c <myhtml_data_process@@Base+0x28>
   19064:	add	sp, sp, #8
   19068:	pop	{r4, r5, r6, r7, r8, pc}
   1906c:	str	r4, [sp]
   19070:	ldr	r8, [r5]
   19074:	mov	r2, r7
   19078:	mov	r1, r6
   1907c:	mov	r0, r5
   19080:	blx	r8
   19084:	mov	r3, r0
   19088:	b	1905c <myhtml_data_process@@Base+0x18>

0001908c <myhtml_data_process_end@@Base>:
   1908c:	ldr	r3, [pc, #240]	; 19184 <myhtml_data_process_end@@Base+0xf8>
   19090:	ldr	ip, [pc, #240]	; 19188 <myhtml_data_process_end@@Base+0xfc>
   19094:	add	r3, pc, r3
   19098:	push	{r4, r5, r6, r7, r8, lr}
   1909c:	ldr	r2, [r0]
   190a0:	ldr	ip, [r3, ip]
   190a4:	cmp	r2, ip
   190a8:	bne	19130 <myhtml_data_process_end@@Base+0xa4>
   190ac:	ldr	r7, [r0, #48]	; 0x30
   190b0:	cmp	r7, #0
   190b4:	beq	19130 <myhtml_data_process_end@@Base+0xa4>
   190b8:	mov	r5, r1
   190bc:	mov	r4, r0
   190c0:	add	r8, r7, #12
   190c4:	mov	r6, #0
   190c8:	ldr	r3, [r7, #20]
   190cc:	cmp	r6, r3
   190d0:	bcc	190ec <myhtml_data_process_end@@Base+0x60>
   190d4:	ldr	r3, [r4, #36]	; 0x24
   190d8:	ldr	r2, [r5]
   190dc:	mov	r1, #0
   190e0:	str	r3, [r5, #8]
   190e4:	strb	r1, [r2, r3]
   190e8:	pop	{r4, r5, r6, r7, r8, pc}
   190ec:	ldr	r1, [r5, #8]
   190f0:	ldr	r3, [r5, #4]
   190f4:	add	r1, r1, #5
   190f8:	cmp	r1, r3
   190fc:	bcc	19108 <myhtml_data_process_end@@Base+0x7c>
   19100:	mov	r0, r5
   19104:	bl	10964 <mycore_string_realloc@plt>
   19108:	ldr	r3, [r4, #36]	; 0x24
   1910c:	ldr	r1, [r5]
   19110:	ldr	r0, [r8], #4
   19114:	add	r1, r1, r3
   19118:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1911c:	ldr	r3, [r4, #36]	; 0x24
   19120:	add	r6, r6, #1
   19124:	add	r0, r3, r0
   19128:	str	r0, [r4, #36]	; 0x24
   1912c:	b	190c8 <myhtml_data_process_end@@Base+0x3c>
   19130:	ldr	ip, [pc, #84]	; 1918c <myhtml_data_process_end@@Base+0x100>
   19134:	ldr	ip, [r3, ip]
   19138:	cmp	r2, ip
   1913c:	bne	1915c <myhtml_data_process_end@@Base+0xd0>
   19140:	ldr	r3, [r1, #8]
   19144:	ldr	r2, [r0, #36]	; 0x24
   19148:	sub	r3, r3, r2
   1914c:	cmp	r3, #2
   19150:	popeq	{r4, r5, r6, r7, r8, pc}
   19154:	pop	{r4, r5, r6, r7, r8, lr}
   19158:	b	10370 <myhtml_data_process_state_end@plt>
   1915c:	ldr	ip, [pc, #44]	; 19190 <myhtml_data_process_end@@Base+0x104>
   19160:	ldr	r3, [r3, ip]
   19164:	cmp	r2, r3
   19168:	popne	{r4, r5, r6, r7, r8, pc}
   1916c:	ldr	r3, [r1, #8]
   19170:	ldr	r2, [r0, #36]	; 0x24
   19174:	sub	r3, r3, r2
   19178:	cmp	r3, #3
   1917c:	bne	19154 <myhtml_data_process_end@@Base+0xc8>
   19180:	pop	{r4, r5, r6, r7, r8, pc}
   19184:	andeq	r7, pc, r4, ror #30
   19188:	andeq	r0, r0, ip, asr #16
   1918c:	andeq	r0, r0, r0, lsr #19
   19190:	andeq	r0, r0, r8, ror r7

00019194 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   19194:	ldr	r3, [r0, #8]
   19198:	cmp	r3, r2
   1919c:	bne	191b8 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x24>
   191a0:	push	{r4, lr}
   191a4:	ldr	r0, [r0]
   191a8:	bl	102a4 <mycore_strncasecmp@plt>
   191ac:	clz	r0, r0
   191b0:	lsr	r0, r0, #5
   191b4:	pop	{r4, pc}
   191b8:	mov	r0, #0
   191bc:	bx	lr

000191c0 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   191c0:	ldr	r3, [r0, #8]
   191c4:	cmp	r3, r2
   191c8:	bcc	191ec <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x2c>
   191cc:	ldr	r0, [r0]
   191d0:	sub	r3, r3, r2
   191d4:	push	{r4, lr}
   191d8:	add	r0, r0, r3
   191dc:	bl	102a4 <mycore_strncasecmp@plt>
   191e0:	clz	r0, r0
   191e4:	lsr	r0, r0, #5
   191e8:	pop	{r4, pc}
   191ec:	mov	r0, #0
   191f0:	bx	lr

000191f4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   191f4:	ldr	r3, [r0, #8]
   191f8:	cmp	r3, r2
   191fc:	bcc	1925c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x68>
   19200:	push	{r4, r5, r6, lr}
   19204:	mov	r6, r1
   19208:	mov	r4, r2
   1920c:	ldr	r5, [r0]
   19210:	beq	19234 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x40>
   19214:	mov	r2, r4
   19218:	mov	r1, r6
   1921c:	mov	r0, r5
   19220:	bl	102a4 <mycore_strncasecmp@plt>
   19224:	cmp	r0, #0
   19228:	beq	1924c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x58>
   1922c:	mov	r0, #0
   19230:	pop	{r4, r5, r6, pc}
   19234:	mov	r0, r5
   19238:	bl	102a4 <mycore_strncasecmp@plt>
   1923c:	cmp	r0, #0
   19240:	bne	19214 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x20>
   19244:	mov	r0, #1
   19248:	pop	{r4, r5, r6, pc}
   1924c:	ldrb	r3, [r5, r4]
   19250:	cmp	r3, #45	; 0x2d
   19254:	bne	1922c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x38>
   19258:	b	19244 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x50>
   1925c:	mov	r0, #0
   19260:	bx	lr

00019264 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   19264:	ldr	r3, [r0, #8]
   19268:	cmp	r3, r2
   1926c:	bne	19288 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x24>
   19270:	push	{r4, lr}
   19274:	ldr	r0, [r0]
   19278:	bl	10eec <mycore_strncmp@plt>
   1927c:	clz	r0, r0
   19280:	lsr	r0, r0, #5
   19284:	pop	{r4, pc}
   19288:	mov	r0, #0
   1928c:	bx	lr

00019290 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   19290:	ldr	r3, [r0, #8]
   19294:	cmp	r3, r2
   19298:	bcc	192bc <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x2c>
   1929c:	ldr	r0, [r0]
   192a0:	sub	r3, r3, r2
   192a4:	push	{r4, lr}
   192a8:	add	r0, r0, r3
   192ac:	bl	10eec <mycore_strncmp@plt>
   192b0:	clz	r0, r0
   192b4:	lsr	r0, r0, #5
   192b8:	pop	{r4, pc}
   192bc:	mov	r0, #0
   192c0:	bx	lr

000192c4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   192c4:	ldr	r3, [r0, #8]
   192c8:	cmp	r3, r2
   192cc:	bcc	1932c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x68>
   192d0:	push	{r4, r5, r6, lr}
   192d4:	mov	r6, r1
   192d8:	mov	r4, r2
   192dc:	ldr	r5, [r0]
   192e0:	beq	19304 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x40>
   192e4:	mov	r2, r4
   192e8:	mov	r1, r6
   192ec:	mov	r0, r5
   192f0:	bl	10eec <mycore_strncmp@plt>
   192f4:	cmp	r0, #0
   192f8:	beq	1931c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x58>
   192fc:	mov	r0, #0
   19300:	pop	{r4, r5, r6, pc}
   19304:	mov	r0, r5
   19308:	bl	10eec <mycore_strncmp@plt>
   1930c:	cmp	r0, #0
   19310:	bne	192e4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x20>
   19314:	mov	r0, #1
   19318:	pop	{r4, r5, r6, pc}
   1931c:	ldrb	r3, [r5, r4]
   19320:	cmp	r3, #45	; 0x2d
   19324:	bne	192fc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x38>
   19328:	b	19314 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x50>
   1932c:	mov	r0, #0
   19330:	bx	lr

00019334 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   19334:	ldr	r3, [r0, #8]
   19338:	cmp	r3, r2
   1933c:	bcs	19348 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   19340:	mov	r0, #0
   19344:	bx	lr
   19348:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1934c:	mov	r6, r0
   19350:	ldr	r5, [r0]
   19354:	mov	r8, r1
   19358:	mov	r0, r5
   1935c:	mov	r4, r2
   19360:	bl	102a4 <mycore_strncasecmp@plt>
   19364:	cmp	r0, #0
   19368:	bne	1939c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1936c:	ldr	r3, [r6, #8]
   19370:	cmp	r4, r3
   19374:	bcs	193c0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x8c>
   19378:	ldrb	r3, [r5, r4]
   1937c:	sub	r3, r3, #9
   19380:	uxtb	r3, r3
   19384:	cmp	r3, #23
   19388:	bhi	1939c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1938c:	ldr	r2, [pc, #180]	; 19448 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   19390:	mvn	r3, r2, lsr r3
   19394:	tst	r3, #1
   19398:	beq	193c4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x90>
   1939c:	ldr	r9, [pc, #164]	; 19448 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   193a0:	mov	r7, #1
   193a4:	add	sl, r5, r4
   193a8:	ldr	r3, [r6, #8]
   193ac:	sub	r3, r3, r7
   193b0:	cmp	r4, r3
   193b4:	bls	193cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   193b8:	mov	r0, #0
   193bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193c0:	bne	1939c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   193c4:	mov	r0, #1
   193c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193cc:	ldrb	r3, [r5], #1
   193d0:	sub	r3, r3, #9
   193d4:	uxtb	r3, r3
   193d8:	cmp	r3, #23
   193dc:	bhi	193ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   193e0:	mvn	r3, r9, lsr r3
   193e4:	tst	r3, #1
   193e8:	beq	193f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc0>
   193ec:	add	r7, r7, #1
   193f0:	b	193a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x74>
   193f4:	mov	r2, r4
   193f8:	mov	r1, r8
   193fc:	mov	r0, r5
   19400:	bl	102a4 <mycore_strncasecmp@plt>
   19404:	cmp	r0, #0
   19408:	bne	193ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   1940c:	cmp	r4, r7
   19410:	bcs	19434 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x100>
   19414:	ldrb	r3, [sl, r7]
   19418:	sub	r3, r3, #9
   1941c:	uxtb	r3, r3
   19420:	cmp	r3, #23
   19424:	bhi	19434 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x100>
   19428:	mvn	r3, r9, lsr r3
   1942c:	tst	r3, #1
   19430:	beq	193c4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x90>
   19434:	ldr	r3, [r6, #8]
   19438:	sub	r3, r3, r7
   1943c:	cmp	r4, r3
   19440:	bne	193ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   19444:	b	193c4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x90>
   19448:	addeq	r0, r0, fp, lsl r0

0001944c <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1944c:	ldr	r3, [r0, #8]
   19450:	cmp	r3, r2
   19454:	bcc	19470 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x24>
   19458:	push	{r4, lr}
   1945c:	ldr	r0, [r0]
   19460:	bl	102a4 <mycore_strncasecmp@plt>
   19464:	clz	r0, r0
   19468:	lsr	r0, r0, #5
   1946c:	pop	{r4, pc}
   19470:	mov	r0, #0
   19474:	bx	lr

00019478 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   19478:	ldr	r3, [r0, #8]
   1947c:	cmp	r3, r2
   19480:	bcs	1948c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x14>
   19484:	mov	r0, #0
   19488:	bx	lr
   1948c:	push	{r4, r5, r6, r7, r8, lr}
   19490:	mov	r4, r2
   19494:	ldr	r8, [r0]
   19498:	mov	r7, r1
   1949c:	mov	r5, r0
   194a0:	mov	r6, #0
   194a4:	ldr	r3, [r5, #8]
   194a8:	sub	r3, r3, r6
   194ac:	cmp	r4, r3
   194b0:	bls	194bc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x44>
   194b4:	mov	r0, #0
   194b8:	pop	{r4, r5, r6, r7, r8, pc}
   194bc:	mov	r2, r4
   194c0:	mov	r1, r7
   194c4:	add	r0, r8, r6
   194c8:	bl	102a4 <mycore_strncasecmp@plt>
   194cc:	cmp	r0, #0
   194d0:	addne	r6, r6, #1
   194d4:	bne	194a4 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x2c>
   194d8:	mov	r0, #1
   194dc:	pop	{r4, r5, r6, r7, r8, pc}

000194e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   194e0:	ldr	r3, [r0, #8]
   194e4:	cmp	r3, r2
   194e8:	bcs	194f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   194ec:	mov	r0, #0
   194f0:	bx	lr
   194f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   194f8:	mov	r6, r0
   194fc:	ldr	r5, [r0]
   19500:	mov	r8, r1
   19504:	mov	r0, r5
   19508:	mov	r4, r2
   1950c:	bl	10eec <mycore_strncmp@plt>
   19510:	cmp	r0, #0
   19514:	bne	19548 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   19518:	ldr	r3, [r6, #8]
   1951c:	cmp	r4, r3
   19520:	bcs	1956c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x8c>
   19524:	ldrb	r3, [r5, r4]
   19528:	sub	r3, r3, #9
   1952c:	uxtb	r3, r3
   19530:	cmp	r3, #23
   19534:	bhi	19548 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   19538:	ldr	r2, [pc, #180]	; 195f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1953c:	mvn	r3, r2, lsr r3
   19540:	tst	r3, #1
   19544:	beq	19570 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x90>
   19548:	ldr	r9, [pc, #164]	; 195f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1954c:	mov	r7, #1
   19550:	add	sl, r5, r4
   19554:	ldr	r3, [r6, #8]
   19558:	sub	r3, r3, r7
   1955c:	cmp	r4, r3
   19560:	bls	19578 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   19564:	mov	r0, #0
   19568:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1956c:	bne	19548 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   19570:	mov	r0, #1
   19574:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19578:	ldrb	r3, [r5], #1
   1957c:	sub	r3, r3, #9
   19580:	uxtb	r3, r3
   19584:	cmp	r3, #23
   19588:	bhi	19598 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   1958c:	mvn	r3, r9, lsr r3
   19590:	tst	r3, #1
   19594:	beq	195a0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc0>
   19598:	add	r7, r7, #1
   1959c:	b	19554 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x74>
   195a0:	mov	r2, r4
   195a4:	mov	r1, r8
   195a8:	mov	r0, r5
   195ac:	bl	10eec <mycore_strncmp@plt>
   195b0:	cmp	r0, #0
   195b4:	bne	19598 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   195b8:	cmp	r4, r7
   195bc:	bcs	195e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x100>
   195c0:	ldrb	r3, [sl, r7]
   195c4:	sub	r3, r3, #9
   195c8:	uxtb	r3, r3
   195cc:	cmp	r3, #23
   195d0:	bhi	195e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x100>
   195d4:	mvn	r3, r9, lsr r3
   195d8:	tst	r3, #1
   195dc:	beq	19570 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x90>
   195e0:	ldr	r3, [r6, #8]
   195e4:	sub	r3, r3, r7
   195e8:	cmp	r4, r3
   195ec:	bne	19598 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   195f0:	b	19570 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x90>
   195f4:	addeq	r0, r0, fp, lsl r0

000195f8 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   195f8:	ldr	r3, [r0, #8]
   195fc:	cmp	r3, r2
   19600:	bcc	1961c <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x24>
   19604:	push	{r4, lr}
   19608:	ldr	r0, [r0]
   1960c:	bl	10eec <mycore_strncmp@plt>
   19610:	clz	r0, r0
   19614:	lsr	r0, r0, #5
   19618:	pop	{r4, pc}
   1961c:	mov	r0, #0
   19620:	bx	lr

00019624 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   19624:	ldr	r3, [r0, #8]
   19628:	cmp	r3, r2
   1962c:	bcs	19638 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x14>
   19630:	mov	r0, #0
   19634:	bx	lr
   19638:	push	{r4, r5, r6, r7, r8, lr}
   1963c:	mov	r4, r2
   19640:	ldr	r8, [r0]
   19644:	mov	r7, r1
   19648:	mov	r5, r0
   1964c:	mov	r6, #0
   19650:	ldr	r3, [r5, #8]
   19654:	sub	r3, r3, r6
   19658:	cmp	r4, r3
   1965c:	bls	19668 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x44>
   19660:	mov	r0, #0
   19664:	pop	{r4, r5, r6, r7, r8, pc}
   19668:	mov	r2, r4
   1966c:	mov	r1, r7
   19670:	add	r0, r8, r6
   19674:	bl	10eec <mycore_strncmp@plt>
   19678:	cmp	r0, #0
   1967c:	addne	r6, r6, #1
   19680:	bne	19650 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x2c>
   19684:	mov	r0, #1
   19688:	pop	{r4, r5, r6, r7, r8, pc}

0001968c <myhtml_init_marker@@Base>:
   1968c:	push	{r4, lr}
   19690:	mov	r4, r0
   19694:	mov	r0, #44	; 0x2c
   19698:	bl	10c94 <mycore_malloc@plt>
   1969c:	cmp	r0, #0
   196a0:	str	r0, [r4, #36]	; 0x24
   196a4:	popeq	{r4, pc}
   196a8:	pop	{r4, lr}
   196ac:	b	1109c <myhtml_tree_node_clean@plt>

000196b0 <myhtml_destroy_marker@@Base>:
   196b0:	ldr	r0, [r0, #36]	; 0x24
   196b4:	cmp	r0, #0
   196b8:	bxeq	lr
   196bc:	b	10dcc <mycore_free@plt>

000196c0 <myhtml_stream_create@@Base>:
   196c0:	push	{r4, r5, r6, r7, r8, lr}
   196c4:	subs	r4, r2, #0
   196c8:	bne	196dc <myhtml_stream_create@@Base+0x1c>
   196cc:	str	r4, [r0]
   196d0:	str	r4, [r1]
   196d4:	mov	r0, r4
   196d8:	pop	{r4, r5, r6, r7, r8, pc}
   196dc:	mov	r5, r1
   196e0:	mov	r7, r3
   196e4:	mov	r6, r0
   196e8:	bl	fe18 <mythread_create@plt>
   196ec:	mov	r2, r4
   196f0:	mov	r1, #0
   196f4:	cmp	r0, #0
   196f8:	moveq	r3, #9
   196fc:	str	r0, [r6]
   19700:	streq	r3, [r5]
   19704:	mov	r3, r7
   19708:	bl	110a8 <mythread_init@plt>
   1970c:	cmp	r0, #0
   19710:	str	r0, [r5]
   19714:	beq	19730 <myhtml_stream_create@@Base+0x70>
   19718:	mov	r2, #0
   1971c:	mov	r3, #1
   19720:	mov	r1, r2
   19724:	ldr	r0, [r6]
   19728:	bl	109ac <mythread_destroy@plt>
   1972c:	str	r0, [r6]
   19730:	ldr	r0, [r5]
   19734:	pop	{r4, r5, r6, r7, r8, pc}

00019738 <myhtml_batch_create@@Base>:
   19738:	push	{r4, r5, r6, r7, r8, lr}
   1973c:	subs	r5, r2, #0
   19740:	bne	19754 <myhtml_batch_create@@Base+0x1c>
   19744:	str	r5, [r0, #4]
   19748:	str	r5, [r1]
   1974c:	mov	r0, r5
   19750:	pop	{r4, r5, r6, r7, r8, pc}
   19754:	mov	r4, r0
   19758:	mov	r7, r3
   1975c:	mov	r6, r1
   19760:	bl	fe18 <mythread_create@plt>
   19764:	ldr	r2, [r4]
   19768:	cmp	r2, #0
   1976c:	str	r0, [r4, #4]
   19770:	bne	19790 <myhtml_batch_create@@Base+0x58>
   19774:	mov	r3, #1
   19778:	mov	r1, r2
   1977c:	mov	r0, r2
   19780:	bl	109ac <mythread_destroy@plt>
   19784:	mov	r3, #9
   19788:	str	r0, [r4]
   1978c:	str	r3, [r6]
   19790:	mov	r3, r7
   19794:	mov	r2, r5
   19798:	mov	r1, #1
   1979c:	ldr	r0, [r4, #4]
   197a0:	bl	110a8 <mythread_init@plt>
   197a4:	cmp	r0, #0
   197a8:	str	r0, [r6]
   197ac:	beq	197c8 <myhtml_batch_create@@Base+0x90>
   197b0:	mov	r2, #0
   197b4:	mov	r3, #1
   197b8:	mov	r1, r2
   197bc:	ldr	r0, [r4, #4]
   197c0:	bl	109ac <mythread_destroy@plt>
   197c4:	str	r0, [r4, #4]
   197c8:	ldr	r0, [r6]
   197cc:	pop	{r4, r5, r6, r7, r8, pc}

000197d0 <myhtml_create_stream_and_batch@@Base>:
   197d0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   197d4:	add	r5, sp, #4
   197d8:	mov	r6, r1
   197dc:	mov	r8, r2
   197e0:	mov	r3, #0
   197e4:	mov	r2, r1
   197e8:	mov	r1, r5
   197ec:	mov	r4, r0
   197f0:	bl	1043c <myhtml_stream_create@plt>
   197f4:	subs	r7, r0, #0
   197f8:	beq	19808 <myhtml_create_stream_and_batch@@Base+0x38>
   197fc:	ldr	r0, [sp, #4]
   19800:	add	sp, sp, #8
   19804:	pop	{r4, r5, r6, r7, r8, pc}
   19808:	mov	r3, r6
   1980c:	mov	r2, r8
   19810:	mov	r1, r5
   19814:	mov	r0, r4
   19818:	bl	10598 <myhtml_batch_create@plt>
   1981c:	cmp	r0, #0
   19820:	beq	197fc <myhtml_create_stream_and_batch@@Base+0x2c>
   19824:	mov	r3, #1
   19828:	mov	r2, r7
   1982c:	mov	r1, r7
   19830:	ldr	r0, [r4]
   19834:	bl	109ac <mythread_destroy@plt>
   19838:	str	r0, [r4]
   1983c:	b	197fc <myhtml_create_stream_and_batch@@Base+0x2c>

00019840 <myhtml_create@@Base>:
   19840:	mov	r1, #40	; 0x28
   19844:	mov	r0, #1
   19848:	b	ff14 <mycore_calloc@plt>

0001984c <myhtml_clean@@Base>:
   1984c:	bx	lr

00019850 <myhtml_init@@Base>:
   19850:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   19854:	mov	r4, r0
   19858:	str	r1, [r0, #32]
   1985c:	mov	r7, r1
   19860:	mov	r5, r2
   19864:	bl	10ab4 <myhtml_init_marker@plt>
   19868:	mov	r0, r4
   1986c:	bl	fcbc <myhtml_tokenizer_state_init@plt>
   19870:	ldr	r6, [pc, #476]	; 19a54 <myhtml_init@@Base+0x204>
   19874:	add	r6, pc, r6
   19878:	cmp	r0, #0
   1987c:	str	r0, [sp, #12]
   19880:	bne	19964 <myhtml_init@@Base+0x114>
   19884:	mov	r0, r4
   19888:	bl	10bec <myhtml_rules_init@plt>
   1988c:	cmp	r0, #0
   19890:	str	r0, [sp, #12]
   19894:	bne	19964 <myhtml_init@@Base+0x114>
   19898:	cmp	r5, #0
   1989c:	beq	19a38 <myhtml_init@@Base+0x1e8>
   198a0:	cmp	r7, #1
   198a4:	beq	19948 <myhtml_init@@Base+0xf8>
   198a8:	cmp	r7, #2
   198ac:	bne	1996c <myhtml_init@@Base+0x11c>
   198b0:	mov	r2, #0
   198b4:	mov	r1, #1
   198b8:	mov	r0, r4
   198bc:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   198c0:	cmp	r0, #0
   198c4:	str	r0, [sp, #12]
   198c8:	bne	19964 <myhtml_init@@Base+0x114>
   198cc:	add	r0, sp, #12
   198d0:	ldr	r7, [r4]
   198d4:	bl	107d8 <mythread_queue_list_create@plt>
   198d8:	ldr	r3, [pc, #376]	; 19a58 <myhtml_init@@Base+0x208>
   198dc:	str	r0, [r7, #16]
   198e0:	ldr	r3, [r6, r3]
   198e4:	ldr	r0, [r4]
   198e8:	str	r3, [sp]
   198ec:	ldr	r3, [pc, #360]	; 19a5c <myhtml_init@@Base+0x20c>
   198f0:	ldr	r2, [sp]
   198f4:	ldr	r3, [r6, r3]
   198f8:	str	r3, [sp, #4]
   198fc:	ldr	r1, [sp, #4]
   19900:	mov	r3, #4
   19904:	bl	108bc <myhread_entry_create@plt>
   19908:	str	r0, [sp, #12]
   1990c:	ldr	r3, [r4]
   19910:	ldr	r0, [sp, #12]
   19914:	str	r3, [r4, #8]
   19918:	ldr	r3, [r4, #4]
   1991c:	str	r5, [r4, #20]
   19920:	str	r3, [r4, #12]
   19924:	mov	r3, #0
   19928:	cmp	r0, r3
   1992c:	str	r3, [r4, #16]
   19930:	bne	19964 <myhtml_init@@Base+0x114>
   19934:	mov	r0, r4
   19938:	bl	fde8 <myhtml_clean@plt>
   1993c:	ldr	r0, [sp, #12]
   19940:	b	19964 <myhtml_init@@Base+0x114>
   19944:	mov	r5, r7
   19948:	mov	r2, #0
   1994c:	mov	r1, r2
   19950:	mov	r0, r4
   19954:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   19958:	cmp	r0, #0
   1995c:	str	r0, [sp, #12]
   19960:	beq	1990c <myhtml_init@@Base+0xbc>
   19964:	add	sp, sp, #16
   19968:	pop	{r4, r5, r6, r7, r8, pc}
   1996c:	cmp	r5, #2
   19970:	movcc	r5, #2
   19974:	sub	r2, r5, #1
   19978:	mov	r1, #1
   1997c:	mov	r0, r4
   19980:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   19984:	cmp	r0, #0
   19988:	str	r0, [sp, #12]
   1998c:	bne	19964 <myhtml_init@@Base+0x114>
   19990:	add	r0, sp, #12
   19994:	ldr	r7, [r4]
   19998:	bl	107d8 <mythread_queue_list_create@plt>
   1999c:	ldr	r3, [r4, #4]
   199a0:	str	r0, [r7, #16]
   199a4:	ldr	r0, [r4]
   199a8:	ldr	r2, [r0, #16]
   199ac:	str	r2, [r3, #16]
   199b0:	ldr	r3, [pc, #168]	; 19a60 <myhtml_init@@Base+0x210>
   199b4:	ldr	r3, [r6, r3]
   199b8:	str	r3, [sp]
   199bc:	ldr	r3, [pc, #152]	; 19a5c <myhtml_init@@Base+0x20c>
   199c0:	ldr	r2, [sp]
   199c4:	ldr	r3, [r6, r3]
   199c8:	str	r3, [sp, #4]
   199cc:	ldr	r1, [sp, #4]
   199d0:	mov	r3, #4
   199d4:	bl	108bc <myhread_entry_create@plt>
   199d8:	cmp	r0, #0
   199dc:	str	r0, [sp, #12]
   199e0:	moveq	r7, r0
   199e4:	moveq	r8, #4
   199e8:	bne	19964 <myhtml_init@@Base+0x114>
   199ec:	ldr	r0, [r4, #4]
   199f0:	ldr	r3, [r0, #8]
   199f4:	cmp	r7, r3
   199f8:	bcs	1990c <myhtml_init@@Base+0xbc>
   199fc:	ldr	r3, [pc, #96]	; 19a64 <myhtml_init@@Base+0x214>
   19a00:	ldr	r3, [r6, r3]
   19a04:	str	r3, [sp]
   19a08:	ldr	r3, [pc, #88]	; 19a68 <myhtml_init@@Base+0x218>
   19a0c:	ldr	r2, [sp]
   19a10:	ldr	r3, [r6, r3]
   19a14:	str	r3, [sp, #4]
   19a18:	ldr	r1, [sp, #4]
   19a1c:	mov	r3, r8
   19a20:	bl	108bc <myhread_entry_create@plt>
   19a24:	cmp	r0, #0
   19a28:	str	r0, [sp, #12]
   19a2c:	bne	19964 <myhtml_init@@Base+0x114>
   19a30:	add	r7, r7, #1
   19a34:	b	199ec <myhtml_init@@Base+0x19c>
   19a38:	cmp	r7, #1
   19a3c:	beq	19944 <myhtml_init@@Base+0xf4>
   19a40:	cmp	r7, #2
   19a44:	moveq	r5, #1
   19a48:	beq	198b0 <myhtml_init@@Base+0x60>
   19a4c:	mov	r5, #2
   19a50:	b	19974 <myhtml_init@@Base+0x124>
   19a54:	andeq	r7, pc, r4, lsl #15
   19a58:	andeq	r0, r0, ip, asr #14
   19a5c:	andeq	r0, r0, r0, asr #14
   19a60:	andeq	r0, r0, ip, asr #19
   19a64:	andeq	r0, r0, r4, asr r7
   19a68:	andeq	r0, r0, r4, lsr r7

00019a6c <myhtml_destroy@@Base>:
   19a6c:	push	{r0, r1, r4, r5, r6, lr}
   19a70:	subs	r4, r0, #0
   19a74:	ldr	r6, [pc, #168]	; 19b24 <myhtml_destroy@@Base+0xb8>
   19a78:	add	r6, pc, r6
   19a7c:	beq	19b18 <myhtml_destroy@@Base+0xac>
   19a80:	bl	10790 <myhtml_destroy_marker@plt>
   19a84:	ldr	r0, [r4]
   19a88:	cmp	r0, #0
   19a8c:	beq	19af8 <myhtml_destroy@@Base+0x8c>
   19a90:	ldr	r5, [r0, #16]
   19a94:	cmp	r5, #0
   19a98:	beq	19aa4 <myhtml_destroy@@Base+0x38>
   19a9c:	mov	r1, r5
   19aa0:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   19aa4:	ldr	r3, [pc, #124]	; 19b28 <myhtml_destroy@@Base+0xbc>
   19aa8:	mov	r2, #0
   19aac:	ldr	r0, [r4]
   19ab0:	ldr	r3, [r6, r3]
   19ab4:	str	r3, [sp, #4]
   19ab8:	ldr	r1, [sp, #4]
   19abc:	mov	r3, #1
   19ac0:	bl	109ac <mythread_destroy@plt>
   19ac4:	str	r0, [r4]
   19ac8:	ldr	r0, [r4, #4]
   19acc:	cmp	r0, #0
   19ad0:	beq	19ae8 <myhtml_destroy@@Base+0x7c>
   19ad4:	mov	r3, #1
   19ad8:	mov	r2, #0
   19adc:	ldr	r1, [sp, #4]
   19ae0:	bl	109ac <mythread_destroy@plt>
   19ae4:	str	r0, [r4, #4]
   19ae8:	cmp	r5, #0
   19aec:	beq	19af8 <myhtml_destroy@@Base+0x8c>
   19af0:	mov	r0, r5
   19af4:	bl	10130 <mythread_queue_list_destroy@plt>
   19af8:	mov	r0, r4
   19afc:	bl	100f4 <myhtml_tokenizer_state_destroy@plt>
   19b00:	ldr	r0, [r4, #28]
   19b04:	cmp	r0, #0
   19b08:	beq	19b10 <myhtml_destroy@@Base+0xa4>
   19b0c:	bl	10dcc <mycore_free@plt>
   19b10:	mov	r0, r4
   19b14:	bl	10dcc <mycore_free@plt>
   19b18:	mov	r0, #0
   19b1c:	add	sp, sp, #8
   19b20:	pop	{r4, r5, r6, pc}
   19b24:	andeq	r7, pc, r0, lsl #11
   19b28:	andeq	r0, r0, r8, ror #16

00019b2c <myhtml_parse_chunk@@Base>:
   19b2c:	ldr	r3, [r0, #180]	; 0xb4
   19b30:	push	{r4, r5, r6, lr}
   19b34:	tst	r3, #32
   19b38:	mov	r4, r0
   19b3c:	mov	r5, r1
   19b40:	mov	r6, r2
   19b44:	beq	19b4c <myhtml_parse_chunk@@Base+0x20>
   19b48:	bl	106d0 <myhtml_tree_clean@plt>
   19b4c:	mov	r2, r6
   19b50:	mov	r1, r5
   19b54:	mov	r0, r4
   19b58:	pop	{r4, r5, r6, lr}
   19b5c:	b	100c4 <myhtml_tokenizer_chunk@plt>

00019b60 <myhtml_parse_chunk_fragment@@Base>:
   19b60:	push	{r4, r5, r6, r7, r8, lr}
   19b64:	mov	r5, r3
   19b68:	ldr	r3, [r0, #180]	; 0xb4
   19b6c:	mov	r4, r0
   19b70:	tst	r3, #32
   19b74:	mov	r7, r1
   19b78:	mov	r8, r2
   19b7c:	ldr	r6, [sp, #24]
   19b80:	beq	19b88 <myhtml_parse_chunk_fragment@@Base+0x28>
   19b84:	bl	106d0 <myhtml_tree_clean@plt>
   19b88:	cmp	r6, #0
   19b8c:	movne	r2, r6
   19b90:	moveq	r2, #1
   19b94:	cmp	r5, #0
   19b98:	movne	r1, r5
   19b9c:	moveq	r1, #42	; 0x2a
   19ba0:	mov	r0, r4
   19ba4:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   19ba8:	cmp	r0, #0
   19bac:	beq	19bc4 <myhtml_parse_chunk_fragment@@Base+0x64>
   19bb0:	mov	r2, r8
   19bb4:	mov	r1, r7
   19bb8:	mov	r0, r4
   19bbc:	pop	{r4, r5, r6, r7, r8, lr}
   19bc0:	b	100c4 <myhtml_tokenizer_chunk@plt>
   19bc4:	ldr	r0, [pc]	; 19bcc <myhtml_parse_chunk_fragment@@Base+0x6c>
   19bc8:	pop	{r4, r5, r6, r7, r8, pc}
   19bcc:	andeq	r9, r0, sp, lsr #2

00019bd0 <myhtml_parse_chunk_single@@Base>:
   19bd0:	ldr	r3, [r0, #180]	; 0xb4
   19bd4:	tst	r3, #16
   19bd8:	ldreq	r3, [r0, #180]	; 0xb4
   19bdc:	orreq	r3, r3, #16
   19be0:	streq	r3, [r0, #180]	; 0xb4
   19be4:	b	10a3c <myhtml_parse_chunk@plt>

00019be8 <myhtml_parse_chunk_fragment_single@@Base>:
   19be8:	ldr	ip, [r0, #180]	; 0xb4
   19bec:	push	{lr}		; (str lr, [sp, #-4]!)
   19bf0:	tst	ip, #16
   19bf4:	ldr	lr, [sp, #4]
   19bf8:	ldreq	ip, [r0, #180]	; 0xb4
   19bfc:	orreq	ip, ip, #16
   19c00:	streq	ip, [r0, #180]	; 0xb4
   19c04:	str	lr, [sp, #4]
   19c08:	pop	{lr}		; (ldr lr, [sp], #4)
   19c0c:	b	105a4 <myhtml_parse_chunk_fragment@plt>

00019c10 <myhtml_parse_chunk_end@@Base>:
   19c10:	b	10268 <myhtml_tokenizer_end@plt>

00019c14 <myhtml_encoding_set@@Base>:
   19c14:	cmp	r1, #41	; 0x29
   19c18:	strls	r1, [r0, #204]	; 0xcc
   19c1c:	strls	r1, [r0, #200]	; 0xc8
   19c20:	bx	lr

00019c24 <myhtml_parse@@Base>:
   19c24:	push	{r4, r5, r6, r7, r8, lr}
   19c28:	mov	r6, r3
   19c2c:	ldr	r3, [r0, #180]	; 0xb4
   19c30:	mov	r4, r0
   19c34:	tst	r3, #32
   19c38:	mov	r7, r1
   19c3c:	mov	r5, r2
   19c40:	beq	19c48 <myhtml_parse@@Base+0x24>
   19c44:	bl	106d0 <myhtml_tree_clean@plt>
   19c48:	mov	r1, r7
   19c4c:	mov	r0, r4
   19c50:	bl	106a0 <myhtml_encoding_set@plt>
   19c54:	mov	r2, r6
   19c58:	mov	r1, r5
   19c5c:	mov	r0, r4
   19c60:	bl	10154 <myhtml_tokenizer_begin@plt>
   19c64:	cmp	r0, #0
   19c68:	popne	{r4, r5, r6, r7, r8, pc}
   19c6c:	mov	r0, r4
   19c70:	pop	{r4, r5, r6, r7, r8, lr}
   19c74:	b	10268 <myhtml_tokenizer_end@plt>

00019c78 <myhtml_parse_fragment@@Base>:
   19c78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19c7c:	mov	r8, r3
   19c80:	ldr	r3, [r0, #180]	; 0xb4
   19c84:	mov	r4, r0
   19c88:	tst	r3, #32
   19c8c:	mov	r9, r1
   19c90:	mov	r7, r2
   19c94:	ldr	r5, [sp, #32]
   19c98:	ldr	r6, [sp, #36]	; 0x24
   19c9c:	beq	19ca4 <myhtml_parse_fragment@@Base+0x2c>
   19ca0:	bl	106d0 <myhtml_tree_clean@plt>
   19ca4:	cmp	r6, #0
   19ca8:	movne	r2, r6
   19cac:	moveq	r2, #1
   19cb0:	cmp	r5, #0
   19cb4:	movne	r1, r5
   19cb8:	moveq	r1, #42	; 0x2a
   19cbc:	mov	r0, r4
   19cc0:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   19cc4:	cmp	r0, #0
   19cc8:	beq	19cfc <myhtml_parse_fragment@@Base+0x84>
   19ccc:	mov	r1, r9
   19cd0:	mov	r0, r4
   19cd4:	bl	106a0 <myhtml_encoding_set@plt>
   19cd8:	mov	r2, r8
   19cdc:	mov	r1, r7
   19ce0:	mov	r0, r4
   19ce4:	bl	10154 <myhtml_tokenizer_begin@plt>
   19ce8:	cmp	r0, #0
   19cec:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   19cf0:	mov	r0, r4
   19cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19cf8:	b	10268 <myhtml_tokenizer_end@plt>
   19cfc:	ldr	r0, [pc]	; 19d04 <myhtml_parse_fragment@@Base+0x8c>
   19d00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d04:	andeq	r9, r0, sp, lsr #2

00019d08 <myhtml_parse_single@@Base>:
   19d08:	push	{r4, r5, r6, r7, r8, lr}
   19d0c:	mov	r6, r3
   19d10:	ldr	r3, [r0, #180]	; 0xb4
   19d14:	mov	r4, r0
   19d18:	tst	r3, #32
   19d1c:	mov	r7, r1
   19d20:	mov	r5, r2
   19d24:	beq	19d2c <myhtml_parse_single@@Base+0x24>
   19d28:	bl	106d0 <myhtml_tree_clean@plt>
   19d2c:	ldr	r3, [r4, #180]	; 0xb4
   19d30:	mov	r1, r7
   19d34:	orr	r3, r3, #16
   19d38:	str	r3, [r4, #180]	; 0xb4
   19d3c:	mov	r0, r4
   19d40:	bl	106a0 <myhtml_encoding_set@plt>
   19d44:	mov	r2, r6
   19d48:	mov	r1, r5
   19d4c:	mov	r0, r4
   19d50:	bl	10154 <myhtml_tokenizer_begin@plt>
   19d54:	cmp	r0, #0
   19d58:	popne	{r4, r5, r6, r7, r8, pc}
   19d5c:	mov	r0, r4
   19d60:	pop	{r4, r5, r6, r7, r8, lr}
   19d64:	b	10268 <myhtml_tokenizer_end@plt>

00019d68 <myhtml_parse_fragment_single@@Base>:
   19d68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19d6c:	mov	r8, r3
   19d70:	ldr	r3, [r0, #180]	; 0xb4
   19d74:	mov	r4, r0
   19d78:	tst	r3, #32
   19d7c:	mov	r9, r1
   19d80:	mov	r7, r2
   19d84:	ldr	r5, [sp, #32]
   19d88:	ldr	r6, [sp, #36]	; 0x24
   19d8c:	beq	19d94 <myhtml_parse_fragment_single@@Base+0x2c>
   19d90:	bl	106d0 <myhtml_tree_clean@plt>
   19d94:	ldr	r3, [r4, #180]	; 0xb4
   19d98:	cmp	r6, #0
   19d9c:	orr	r3, r3, #16
   19da0:	movne	r2, r6
   19da4:	moveq	r2, #1
   19da8:	cmp	r5, #0
   19dac:	movne	r1, r5
   19db0:	moveq	r1, #42	; 0x2a
   19db4:	str	r3, [r4, #180]	; 0xb4
   19db8:	mov	r0, r4
   19dbc:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   19dc0:	cmp	r0, #0
   19dc4:	beq	19df8 <myhtml_parse_fragment_single@@Base+0x90>
   19dc8:	mov	r1, r9
   19dcc:	mov	r0, r4
   19dd0:	bl	106a0 <myhtml_encoding_set@plt>
   19dd4:	mov	r2, r8
   19dd8:	mov	r1, r7
   19ddc:	mov	r0, r4
   19de0:	bl	10154 <myhtml_tokenizer_begin@plt>
   19de4:	cmp	r0, #0
   19de8:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   19dec:	mov	r0, r4
   19df0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19df4:	b	10268 <myhtml_tokenizer_end@plt>
   19df8:	ldr	r0, [pc]	; 19e00 <myhtml_parse_fragment_single@@Base+0x98>
   19dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19e00:	andeq	r9, r0, sp, lsr #2

00019e04 <myhtml_encoding_get@@Base>:
   19e04:	ldr	r0, [r0, #200]	; 0xc8
   19e08:	bx	lr

00019e0c <myhtml_node_first@@Base>:
   19e0c:	ldr	r3, [r0, #88]	; 0x58
   19e10:	ldr	r0, [r0, #84]	; 0x54
   19e14:	cmp	r3, #0
   19e18:	beq	19e38 <myhtml_node_first@@Base+0x2c>
   19e1c:	cmp	r0, #0
   19e20:	bxeq	lr
   19e24:	ldr	r0, [r0, #20]
   19e28:	cmp	r0, #0
   19e2c:	bxeq	lr
   19e30:	ldr	r0, [r0, #20]
   19e34:	bx	lr
   19e38:	cmp	r0, #0
   19e3c:	bne	19e30 <myhtml_node_first@@Base+0x24>
   19e40:	bx	lr

00019e44 <myhtml_node_next@@Base>:
   19e44:	ldr	r0, [r0, #16]
   19e48:	bx	lr

00019e4c <myhtml_node_prev@@Base>:
   19e4c:	ldr	r0, [r0, #12]
   19e50:	bx	lr

00019e54 <myhtml_node_parent@@Base>:
   19e54:	ldr	r0, [r0, #24]
   19e58:	bx	lr

00019e5c <myhtml_node_child@@Base>:
   19e5c:	ldr	r0, [r0, #20]
   19e60:	bx	lr

00019e64 <myhtml_node_last_child@@Base>:
   19e64:	ldr	r0, [r0, #28]
   19e68:	bx	lr

00019e6c <myhtml_node_create@@Base>:
   19e6c:	push	{r4, r5, r6, lr}
   19e70:	mov	r5, r1
   19e74:	mov	r4, r2
   19e78:	bl	ffe0 <myhtml_tree_node_create@plt>
   19e7c:	str	r5, [r0, #4]
   19e80:	str	r4, [r0, #8]
   19e84:	pop	{r4, r5, r6, pc}

00019e88 <myhtml_node_remove@@Base>:
   19e88:	b	10df0 <myhtml_tree_node_remove@plt>

00019e8c <myhtml_node_delete@@Base>:
   19e8c:	b	10dc0 <myhtml_tree_node_delete@plt>

00019e90 <myhtml_node_delete_recursive@@Base>:
   19e90:	b	ffec <myhtml_tree_node_delete_recursive@plt>

00019e94 <myhtml_node_free@@Base>:
   19e94:	b	10d00 <myhtml_tree_node_free@plt>

00019e98 <myhtml_node_insert_before@@Base>:
   19e98:	cmp	r1, #0
   19e9c:	cmpne	r0, #0
   19ea0:	push	{r4, lr}
   19ea4:	moveq	r4, #0
   19ea8:	beq	19eb4 <myhtml_node_insert_before@@Base+0x1c>
   19eac:	mov	r4, r1
   19eb0:	bl	103f4 <myhtml_tree_node_insert_before@plt>
   19eb4:	mov	r0, r4
   19eb8:	pop	{r4, pc}

00019ebc <myhtml_node_insert_after@@Base>:
   19ebc:	cmp	r1, #0
   19ec0:	cmpne	r0, #0
   19ec4:	push	{r4, lr}
   19ec8:	moveq	r4, #0
   19ecc:	beq	19ed8 <myhtml_node_insert_after@@Base+0x1c>
   19ed0:	mov	r4, r1
   19ed4:	bl	10364 <myhtml_tree_node_insert_after@plt>
   19ed8:	mov	r0, r4
   19edc:	pop	{r4, pc}

00019ee0 <myhtml_node_append_child@@Base>:
   19ee0:	cmp	r1, #0
   19ee4:	cmpne	r0, #0
   19ee8:	push	{r4, lr}
   19eec:	moveq	r4, #0
   19ef0:	beq	19efc <myhtml_node_append_child@@Base+0x1c>
   19ef4:	mov	r4, r1
   19ef8:	bl	106b8 <myhtml_tree_node_add_child@plt>
   19efc:	mov	r0, r4
   19f00:	pop	{r4, pc}

00019f04 <myhtml_node_insert_to_appropriate_place@@Base>:
   19f04:	cmp	r1, #0
   19f08:	cmpne	r0, #0
   19f0c:	push	{r0, r1, r2, r4, r5, lr}
   19f10:	moveq	r5, #1
   19f14:	movne	r5, #0
   19f18:	moveq	r4, #0
   19f1c:	beq	19f4c <myhtml_node_insert_to_appropriate_place@@Base+0x48>
   19f20:	ldr	r3, [r0, #40]	; 0x28
   19f24:	mov	r2, #1
   19f28:	mov	r4, r1
   19f2c:	strb	r2, [r3, #188]	; 0xbc
   19f30:	add	r1, sp, #4
   19f34:	bl	10a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   19f38:	ldr	r2, [sp, #4]
   19f3c:	mov	r1, r4
   19f40:	ldr	r3, [r0, #40]	; 0x28
   19f44:	strb	r5, [r3, #188]	; 0xbc
   19f48:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   19f4c:	mov	r0, r4
   19f50:	add	sp, sp, #12
   19f54:	pop	{r4, r5, pc}

00019f58 <myhtml_node_text_set@@Base>:
   19f58:	cmp	r3, #41	; 0x29
   19f5c:	movls	ip, #0
   19f60:	movhi	ip, #1
   19f64:	cmp	r0, #0
   19f68:	orreq	ip, ip, #1
   19f6c:	cmp	ip, #0
   19f70:	beq	19f84 <myhtml_node_text_set@@Base+0x2c>
   19f74:	mov	r0, #0
   19f78:	bx	lr
   19f7c:	mov	r0, #0
   19f80:	pop	{r4, r5, r6, r7, r8, pc}
   19f84:	push	{r4, r5, r6, r7, r8, lr}
   19f88:	mov	r7, r3
   19f8c:	ldr	r3, [r0, #32]
   19f90:	mov	r4, r0
   19f94:	cmp	r3, #0
   19f98:	mov	r5, r2
   19f9c:	mov	r8, r1
   19fa0:	ldr	r6, [r0, #40]	; 0x28
   19fa4:	bne	19fcc <myhtml_node_text_set@@Base+0x74>
   19fa8:	ldr	r1, [r6, #40]	; 0x28
   19fac:	ldr	r0, [r6, #8]
   19fb0:	bl	10a0c <myhtml_token_node_create@plt>
   19fb4:	cmp	r0, #0
   19fb8:	str	r0, [r4, #32]
   19fbc:	beq	19f7c <myhtml_node_text_set@@Base+0x24>
   19fc0:	ldr	r3, [r0, #48]	; 0x30
   19fc4:	orr	r3, r3, #4
   19fc8:	str	r3, [r0, #48]	; 0x30
   19fcc:	ldr	r0, [r4, #32]
   19fd0:	ldr	r2, [r0, #4]
   19fd4:	cmp	r2, #0
   19fd8:	addeq	r3, r5, #2
   19fdc:	addeq	r2, r0, #4
   19fe0:	beq	1a010 <myhtml_node_text_set@@Base+0xb8>
   19fe4:	ldr	r3, [r0, #8]
   19fe8:	cmp	r5, r3
   19fec:	movls	r3, #0
   19ff0:	strls	r3, [r0, #12]
   19ff4:	bls	1a01c <myhtml_node_text_set@@Base+0xc4>
   19ff8:	ldr	r1, [r0, #20]
   19ffc:	ldr	r0, [r6, #4]
   1a000:	bl	10718 <mchar_async_free@plt>
   1a004:	ldr	r2, [r4, #32]
   1a008:	mov	r3, r5
   1a00c:	add	r2, r2, #4
   1a010:	ldr	r1, [r6, #52]	; 0x34
   1a014:	ldr	r0, [r6, #4]
   1a018:	bl	10610 <mycore_string_init@plt>
   1a01c:	cmp	r7, #0
   1a020:	ldr	r0, [r4, #32]
   1a024:	beq	1a054 <myhtml_node_text_set@@Base+0xfc>
   1a028:	mov	r3, r7
   1a02c:	mov	r2, r5
   1a030:	mov	r1, r8
   1a034:	add	r0, r0, #4
   1a038:	bl	10460 <myencoding_string_append@plt>
   1a03c:	ldr	r0, [r4, #32]
   1a040:	mov	r3, #0
   1a044:	add	r0, r0, #4
   1a048:	str	r3, [r0, #20]
   1a04c:	str	r3, [r0, #24]
   1a050:	pop	{r4, r5, r6, r7, r8, pc}
   1a054:	mov	r2, r5
   1a058:	mov	r1, r8
   1a05c:	add	r0, r0, #4
   1a060:	bl	108d4 <mycore_string_append@plt>
   1a064:	b	1a03c <myhtml_node_text_set@@Base+0xe4>

0001a068 <myhtml_node_text_set_with_charef@@Base>:
   1a068:	cmp	r3, #41	; 0x29
   1a06c:	movls	ip, #0
   1a070:	movhi	ip, #1
   1a074:	cmp	r0, #0
   1a078:	orreq	ip, ip, #1
   1a07c:	cmp	ip, #0
   1a080:	beq	1a08c <myhtml_node_text_set_with_charef@@Base+0x24>
   1a084:	mov	r0, #0
   1a088:	bx	lr
   1a08c:	push	{r4, r5, r6, r7, r8, lr}
   1a090:	mov	r7, r3
   1a094:	ldr	r3, [r0, #32]
   1a098:	sub	sp, sp, #64	; 0x40
   1a09c:	cmp	r3, #0
   1a0a0:	mov	r4, r0
   1a0a4:	mov	r6, r2
   1a0a8:	mov	r8, r1
   1a0ac:	ldr	r5, [r0, #40]	; 0x28
   1a0b0:	bne	1a0dc <myhtml_node_text_set_with_charef@@Base+0x74>
   1a0b4:	ldr	r1, [r5, #40]	; 0x28
   1a0b8:	ldr	r0, [r5, #8]
   1a0bc:	bl	10a0c <myhtml_token_node_create@plt>
   1a0c0:	cmp	r0, #0
   1a0c4:	str	r0, [r4, #32]
   1a0c8:	moveq	r0, #0
   1a0cc:	beq	1a17c <myhtml_node_text_set_with_charef@@Base+0x114>
   1a0d0:	ldr	r3, [r0, #48]	; 0x30
   1a0d4:	orr	r3, r3, #4
   1a0d8:	str	r3, [r0, #48]	; 0x30
   1a0dc:	ldr	r0, [r4, #32]
   1a0e0:	ldr	r2, [r0, #4]
   1a0e4:	cmp	r2, #0
   1a0e8:	addeq	r3, r6, #2
   1a0ec:	addeq	r2, r0, #4
   1a0f0:	beq	1a120 <myhtml_node_text_set_with_charef@@Base+0xb8>
   1a0f4:	ldr	r3, [r0, #8]
   1a0f8:	cmp	r6, r3
   1a0fc:	movls	r3, #0
   1a100:	strls	r3, [r0, #12]
   1a104:	bls	1a12c <myhtml_node_text_set_with_charef@@Base+0xc4>
   1a108:	ldr	r1, [r0, #20]
   1a10c:	ldr	r0, [r5, #4]
   1a110:	bl	10718 <mchar_async_free@plt>
   1a114:	ldr	r2, [r4, #32]
   1a118:	mov	r3, r6
   1a11c:	add	r2, r2, #4
   1a120:	ldr	r1, [r5, #52]	; 0x34
   1a124:	ldr	r0, [r5, #4]
   1a128:	bl	10610 <mycore_string_init@plt>
   1a12c:	mov	r0, sp
   1a130:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1a134:	add	r0, sp, #8
   1a138:	str	r7, [sp, #4]
   1a13c:	bl	101c0 <myencoding_result_clean@plt>
   1a140:	ldr	r1, [r4, #32]
   1a144:	mov	r3, r6
   1a148:	mov	r2, r8
   1a14c:	add	r1, r1, #4
   1a150:	mov	r0, sp
   1a154:	bl	10754 <myhtml_data_process@plt>
   1a158:	ldr	r1, [r4, #32]
   1a15c:	mov	r0, sp
   1a160:	add	r1, r1, #4
   1a164:	bl	10928 <myhtml_data_process_end@plt>
   1a168:	ldr	r0, [r4, #32]
   1a16c:	mov	r3, #0
   1a170:	add	r0, r0, #4
   1a174:	str	r3, [r0, #20]
   1a178:	str	r3, [r0, #24]
   1a17c:	add	sp, sp, #64	; 0x40
   1a180:	pop	{r4, r5, r6, r7, r8, pc}

0001a184 <myhtml_node_token@@Base>:
   1a184:	ldr	r0, [r0, #32]
   1a188:	bx	lr

0001a18c <myhtml_node_namespace@@Base>:
   1a18c:	ldr	r0, [r0, #8]
   1a190:	bx	lr

0001a194 <myhtml_node_namespace_set@@Base>:
   1a194:	str	r1, [r0, #8]
   1a198:	bx	lr

0001a19c <myhtml_node_tag_id@@Base>:
   1a19c:	ldr	r0, [r0, #4]
   1a1a0:	bx	lr

0001a1a4 <myhtml_tag_name_by_id@@Base>:
   1a1a4:	push	{r4, lr}
   1a1a8:	subs	r4, r2, #0
   1a1ac:	movne	r3, #0
   1a1b0:	strne	r3, [r4]
   1a1b4:	cmp	r0, #0
   1a1b8:	bne	1a1c4 <myhtml_tag_name_by_id@@Base+0x20>
   1a1bc:	mov	r0, #0
   1a1c0:	pop	{r4, pc}
   1a1c4:	ldr	r0, [r0, #28]
   1a1c8:	cmp	r0, #0
   1a1cc:	beq	1a1bc <myhtml_tag_name_by_id@@Base+0x18>
   1a1d0:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1a1d4:	cmp	r0, #0
   1a1d8:	beq	1a1bc <myhtml_tag_name_by_id@@Base+0x18>
   1a1dc:	cmp	r4, #0
   1a1e0:	ldrne	r3, [r0, #8]
   1a1e4:	ldr	r0, [r0, #4]
   1a1e8:	strne	r3, [r4]
   1a1ec:	pop	{r4, pc}

0001a1f0 <myhtml_tag_id_by_name@@Base>:
   1a1f0:	cmp	r0, #0
   1a1f4:	bne	1a208 <myhtml_tag_id_by_name@@Base+0x18>
   1a1f8:	mov	r0, #0
   1a1fc:	bx	lr
   1a200:	mov	r0, #0
   1a204:	pop	{r4, pc}
   1a208:	ldr	r0, [r0, #28]
   1a20c:	cmp	r0, #0
   1a210:	beq	1a1f8 <myhtml_tag_id_by_name@@Base+0x8>
   1a214:	push	{r4, lr}
   1a218:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1a21c:	cmp	r0, #0
   1a220:	beq	1a200 <myhtml_tag_id_by_name@@Base+0x10>
   1a224:	ldr	r0, [r0]
   1a228:	pop	{r4, pc}

0001a22c <myhtml_node_is_close_self@@Base>:
   1a22c:	ldr	r0, [r0, #32]
   1a230:	cmp	r0, #0
   1a234:	ldrne	r0, [r0, #48]	; 0x30
   1a238:	lsrne	r0, r0, #1
   1a23c:	andne	r0, r0, #1
   1a240:	bx	lr

0001a244 <myhtml_node_is_void_element@@Base>:
   1a244:	ldr	r3, [r0, #4]
   1a248:	cmp	r3, #70	; 0x46
   1a24c:	bhi	1a29c <myhtml_node_is_void_element@@Base+0x58>
   1a250:	cmp	r3, #69	; 0x45
   1a254:	bcs	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a258:	cmp	r3, #31
   1a25c:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a260:	bhi	1a284 <myhtml_node_is_void_element@@Base+0x40>
   1a264:	cmp	r3, #15
   1a268:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a26c:	cmp	r3, #24
   1a270:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a274:	cmp	r3, #10
   1a278:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a27c:	mov	r0, #0
   1a280:	bx	lr
   1a284:	cmp	r3, #46	; 0x2e
   1a288:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a28c:	cmp	r3, #64	; 0x40
   1a290:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a294:	cmp	r3, #33	; 0x21
   1a298:	b	1a278 <myhtml_node_is_void_element@@Base+0x34>
   1a29c:	cmp	r3, #100	; 0x64
   1a2a0:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a2a4:	bhi	1a2c0 <myhtml_node_is_void_element@@Base+0x7c>
   1a2a8:	cmp	r3, #78	; 0x4e
   1a2ac:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a2b0:	cmp	r3, #86	; 0x56
   1a2b4:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a2b8:	cmp	r3, #74	; 0x4a
   1a2bc:	b	1a278 <myhtml_node_is_void_element@@Base+0x34>
   1a2c0:	cmp	r3, #136	; 0x88
   1a2c4:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a2c8:	cmp	r3, #142	; 0x8e
   1a2cc:	beq	1a2d8 <myhtml_node_is_void_element@@Base+0x94>
   1a2d0:	cmp	r3, #116	; 0x74
   1a2d4:	b	1a278 <myhtml_node_is_void_element@@Base+0x34>
   1a2d8:	mov	r0, #1
   1a2dc:	bx	lr

0001a2e0 <myhtml_node_attribute_first@@Base>:
   1a2e0:	ldr	r0, [r0, #32]
   1a2e4:	cmp	r0, #0
   1a2e8:	ldrne	r0, [r0, #40]	; 0x28
   1a2ec:	bx	lr

0001a2f0 <myhtml_node_attribute_last@@Base>:
   1a2f0:	ldr	r0, [r0, #32]
   1a2f4:	cmp	r0, #0
   1a2f8:	ldrne	r0, [r0, #44]	; 0x2c
   1a2fc:	bx	lr

0001a300 <myhtml_node_text@@Base>:
   1a300:	ldr	r3, [r0, #32]
   1a304:	cmp	r3, #0
   1a308:	beq	1a330 <myhtml_node_text@@Base+0x30>
   1a30c:	ldr	r2, [r3, #12]
   1a310:	cmp	r2, #0
   1a314:	beq	1a330 <myhtml_node_text@@Base+0x30>
   1a318:	ldr	r0, [r3, #4]
   1a31c:	cmp	r0, #0
   1a320:	beq	1a330 <myhtml_node_text@@Base+0x30>
   1a324:	cmp	r1, #0
   1a328:	strne	r2, [r1]
   1a32c:	bx	lr
   1a330:	mov	r0, #0
   1a334:	cmp	r1, #0
   1a338:	strne	r0, [r1]
   1a33c:	moveq	r0, r1
   1a340:	bx	lr

0001a344 <myhtml_node_string@@Base>:
   1a344:	cmp	r0, #0
   1a348:	bxeq	lr
   1a34c:	ldr	r0, [r0, #32]
   1a350:	cmp	r0, #0
   1a354:	addne	r0, r0, #4
   1a358:	bx	lr

0001a35c <myhtml_node_raw_position@@Base>:
   1a35c:	cmp	r1, #0
   1a360:	beq	1a384 <myhtml_node_raw_position@@Base+0x28>
   1a364:	ldr	r3, [r1, #32]
   1a368:	cmp	r3, #0
   1a36c:	beq	1a384 <myhtml_node_raw_position@@Base+0x28>
   1a370:	ldr	r2, [r3, #28]
   1a374:	ldr	r3, [r3, #24]
   1a378:	str	r2, [r0, #4]
   1a37c:	str	r3, [r0]
   1a380:	bx	lr
   1a384:	mov	r3, #0
   1a388:	str	r3, [r0]
   1a38c:	str	r3, [r0, #4]
   1a390:	bx	lr

0001a394 <myhtml_node_element_position@@Base>:
   1a394:	cmp	r1, #0
   1a398:	beq	1a3bc <myhtml_node_element_position@@Base+0x28>
   1a39c:	ldr	r3, [r1, #32]
   1a3a0:	cmp	r3, #0
   1a3a4:	beq	1a3bc <myhtml_node_element_position@@Base+0x28>
   1a3a8:	ldr	r2, [r3, #36]	; 0x24
   1a3ac:	ldr	r3, [r3, #32]
   1a3b0:	str	r2, [r0, #4]
   1a3b4:	str	r3, [r0]
   1a3b8:	bx	lr
   1a3bc:	mov	r3, #0
   1a3c0:	str	r3, [r0]
   1a3c4:	str	r3, [r0, #4]
   1a3c8:	bx	lr

0001a3cc <myhtml_node_set_data@@Base>:
   1a3cc:	str	r1, [r0, #36]	; 0x24
   1a3d0:	bx	lr

0001a3d4 <myhtml_node_get_data@@Base>:
   1a3d4:	ldr	r0, [r0, #36]	; 0x24
   1a3d8:	bx	lr

0001a3dc <myhtml_node_tree@@Base>:
   1a3dc:	ldr	r0, [r0, #40]	; 0x28
   1a3e0:	bx	lr

0001a3e4 <myhtml_attribute_next@@Base>:
   1a3e4:	ldr	r0, [r0]
   1a3e8:	bx	lr

0001a3ec <myhtml_attribute_prev@@Base>:
   1a3ec:	ldr	r0, [r0, #4]
   1a3f0:	bx	lr

0001a3f4 <myhtml_attribute_namespace@@Base>:
   1a3f4:	ldr	r0, [r0, #64]	; 0x40
   1a3f8:	bx	lr

0001a3fc <myhtml_attribute_namespace_set@@Base>:
   1a3fc:	str	r1, [r0, #64]	; 0x40
   1a400:	bx	lr

0001a404 <myhtml_attribute_key@@Base>:
   1a404:	mov	r3, r0
   1a408:	ldr	r0, [r0, #8]
   1a40c:	cmp	r0, #0
   1a410:	beq	1a42c <myhtml_attribute_key@@Base+0x28>
   1a414:	ldr	r3, [r3, #16]
   1a418:	cmp	r3, #0
   1a41c:	beq	1a42c <myhtml_attribute_key@@Base+0x28>
   1a420:	cmp	r1, #0
   1a424:	strne	r3, [r1]
   1a428:	bx	lr
   1a42c:	mov	r0, #0
   1a430:	cmp	r1, #0
   1a434:	strne	r0, [r1]
   1a438:	moveq	r0, r1
   1a43c:	bx	lr

0001a440 <myhtml_attribute_value@@Base>:
   1a440:	mov	r3, r0
   1a444:	ldr	r0, [r0, #28]
   1a448:	cmp	r0, #0
   1a44c:	beq	1a468 <myhtml_attribute_value@@Base+0x28>
   1a450:	ldr	r3, [r3, #36]	; 0x24
   1a454:	cmp	r3, #0
   1a458:	beq	1a468 <myhtml_attribute_value@@Base+0x28>
   1a45c:	cmp	r1, #0
   1a460:	strne	r3, [r1]
   1a464:	bx	lr
   1a468:	mov	r0, #0
   1a46c:	cmp	r1, #0
   1a470:	strne	r0, [r1]
   1a474:	moveq	r0, r1
   1a478:	bx	lr

0001a47c <myhtml_attribute_key_string@@Base>:
   1a47c:	cmp	r0, #0
   1a480:	addne	r0, r0, #8
   1a484:	bx	lr

0001a488 <myhtml_attribute_value_string@@Base>:
   1a488:	cmp	r0, #0
   1a48c:	addne	r0, r0, #28
   1a490:	bx	lr

0001a494 <myhtml_attribute_by_key@@Base>:
   1a494:	cmp	r0, #0
   1a498:	bxeq	lr
   1a49c:	ldr	r0, [r0, #32]
   1a4a0:	cmp	r0, #0
   1a4a4:	bxeq	lr
   1a4a8:	b	10eb0 <myhtml_token_attr_by_name@plt>

0001a4ac <myhtml_attribute_add@@Base>:
   1a4ac:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1a4b0:	subs	r4, r0, #0
   1a4b4:	bne	1a4c4 <myhtml_attribute_add@@Base+0x18>
   1a4b8:	mov	r0, #0
   1a4bc:	add	sp, sp, #16
   1a4c0:	pop	{r4, r5, r6, r7, r8, pc}
   1a4c4:	mov	r8, r3
   1a4c8:	ldr	r3, [r4, #32]
   1a4cc:	mov	r7, r2
   1a4d0:	cmp	r3, #0
   1a4d4:	mov	r6, r1
   1a4d8:	ldr	r5, [r4, #40]	; 0x28
   1a4dc:	bne	1a504 <myhtml_attribute_add@@Base+0x58>
   1a4e0:	ldr	r1, [r5, #40]	; 0x28
   1a4e4:	ldr	r0, [r5, #8]
   1a4e8:	bl	10a0c <myhtml_token_node_create@plt>
   1a4ec:	cmp	r0, #0
   1a4f0:	str	r0, [r4, #32]
   1a4f4:	beq	1a4b8 <myhtml_attribute_add@@Base+0xc>
   1a4f8:	ldr	r3, [r0, #48]	; 0x30
   1a4fc:	orr	r3, r3, #4
   1a500:	str	r3, [r0, #48]	; 0x30
   1a504:	ldr	r3, [sp, #44]	; 0x2c
   1a508:	mov	r2, r6
   1a50c:	str	r3, [sp, #12]
   1a510:	ldr	r3, [r5, #40]	; 0x28
   1a514:	str	r8, [sp]
   1a518:	str	r3, [sp, #8]
   1a51c:	ldr	r3, [sp, #40]	; 0x28
   1a520:	str	r3, [sp, #4]
   1a524:	mov	r3, r7
   1a528:	ldr	r1, [r4, #32]
   1a52c:	ldr	r0, [r5, #8]
   1a530:	bl	107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1a534:	b	1a4bc <myhtml_attribute_add@@Base+0x10>

0001a538 <myhtml_attribute_remove@@Base>:
   1a538:	cmp	r0, #0
   1a53c:	bxeq	lr
   1a540:	ldr	r0, [r0, #32]
   1a544:	cmp	r0, #0
   1a548:	bxeq	lr
   1a54c:	b	10574 <myhtml_token_attr_remove@plt>

0001a550 <myhtml_attribute_remove_by_key@@Base>:
   1a550:	cmp	r0, #0
   1a554:	bxeq	lr
   1a558:	ldr	r0, [r0, #32]
   1a55c:	cmp	r0, #0
   1a560:	bxeq	lr
   1a564:	b	10e98 <myhtml_token_attr_remove_by_name@plt>

0001a568 <myhtml_attribute_free@@Base>:
   1a568:	ldr	r2, [r1, #8]
   1a56c:	push	{r4, r5, r6, lr}
   1a570:	cmp	r2, #0
   1a574:	mov	r5, r0
   1a578:	mov	r4, r1
   1a57c:	beq	1a58c <myhtml_attribute_free@@Base+0x24>
   1a580:	ldr	r1, [r1, #24]
   1a584:	ldr	r0, [r4, #20]
   1a588:	bl	10718 <mchar_async_free@plt>
   1a58c:	ldr	r2, [r4, #28]
   1a590:	cmp	r2, #0
   1a594:	beq	1a5a4 <myhtml_attribute_free@@Base+0x3c>
   1a598:	ldr	r1, [r4, #44]	; 0x2c
   1a59c:	ldr	r0, [r4, #40]	; 0x28
   1a5a0:	bl	10718 <mchar_async_free@plt>
   1a5a4:	ldr	r3, [r5, #8]
   1a5a8:	mov	r1, r4
   1a5ac:	pop	{r4, r5, r6, lr}
   1a5b0:	ldr	r0, [r3, #8]
   1a5b4:	b	1004c <mcobject_async_free@plt>

0001a5b8 <myhtml_attribute_delete@@Base>:
   1a5b8:	cmp	r1, #0
   1a5bc:	bxeq	lr
   1a5c0:	push	{r4, r5, r6, lr}
   1a5c4:	mov	r5, r0
   1a5c8:	ldr	r0, [r1, #32]
   1a5cc:	cmp	r0, #0
   1a5d0:	popeq	{r4, r5, r6, pc}
   1a5d4:	mov	r4, r2
   1a5d8:	mov	r1, r2
   1a5dc:	bl	10574 <myhtml_token_attr_remove@plt>
   1a5e0:	mov	r1, r4
   1a5e4:	mov	r0, r5
   1a5e8:	pop	{r4, r5, r6, lr}
   1a5ec:	b	107a8 <myhtml_attribute_free@plt>

0001a5f0 <myhtml_attribute_key_raw_position@@Base>:
   1a5f0:	cmp	r1, #0
   1a5f4:	streq	r1, [r0]
   1a5f8:	ldrne	r3, [r1, #52]	; 0x34
   1a5fc:	ldrne	r2, [r1, #48]	; 0x30
   1a600:	streq	r1, [r0, #4]
   1a604:	stmne	r0, {r2, r3}
   1a608:	bx	lr

0001a60c <myhtml_attribute_value_raw_position@@Base>:
   1a60c:	cmp	r1, #0
   1a610:	streq	r1, [r0]
   1a614:	ldrne	r3, [r1, #60]	; 0x3c
   1a618:	ldrne	r2, [r1, #56]	; 0x38
   1a61c:	streq	r1, [r0, #4]
   1a620:	stmne	r0, {r2, r3}
   1a624:	bx	lr

0001a628 <myhtml_collection_create@@Base>:
   1a628:	push	{r4, r5, r6, r7, r8, lr}
   1a62c:	mov	r7, r0
   1a630:	mov	r0, #12
   1a634:	mov	r5, r1
   1a638:	bl	10c94 <mycore_malloc@plt>
   1a63c:	subs	r4, r0, #0
   1a640:	bne	1a65c <myhtml_collection_create@@Base+0x34>
   1a644:	cmp	r5, #0
   1a648:	mov	r4, #0
   1a64c:	movne	r3, #2
   1a650:	strne	r3, [r5]
   1a654:	mov	r0, r4
   1a658:	pop	{r4, r5, r6, r7, r8, pc}
   1a65c:	mov	r6, #0
   1a660:	str	r7, [r4, #4]
   1a664:	str	r6, [r4, #8]
   1a668:	lsl	r0, r7, #2
   1a66c:	bl	10c94 <mycore_malloc@plt>
   1a670:	cmp	r0, r6
   1a674:	str	r0, [r4]
   1a678:	bne	1a68c <myhtml_collection_create@@Base+0x64>
   1a67c:	mov	r0, r4
   1a680:	bl	10dcc <mycore_free@plt>
   1a684:	cmp	r5, r6
   1a688:	b	1a648 <myhtml_collection_create@@Base+0x20>
   1a68c:	cmp	r5, #0
   1a690:	strne	r6, [r5]
   1a694:	b	1a654 <myhtml_collection_create@@Base+0x2c>

0001a698 <myhtml_collection_check_size@@Base>:
   1a698:	push	{r4, r5, r6, lr}
   1a69c:	ldr	r4, [r0, #8]
   1a6a0:	ldr	r3, [r0, #4]
   1a6a4:	add	r1, r1, r4
   1a6a8:	cmp	r1, r3
   1a6ac:	bcc	1a6d4 <myhtml_collection_check_size@@Base+0x3c>
   1a6b0:	add	r4, r2, #1
   1a6b4:	add	r4, r4, r1
   1a6b8:	mov	r5, r0
   1a6bc:	lsl	r1, r4, #2
   1a6c0:	ldr	r0, [r0]
   1a6c4:	bl	fbd8 <mycore_realloc@plt>
   1a6c8:	cmp	r0, #0
   1a6cc:	beq	1a6dc <myhtml_collection_check_size@@Base+0x44>
   1a6d0:	stm	r5, {r0, r4}
   1a6d4:	mov	r0, #0
   1a6d8:	pop	{r4, r5, r6, pc}
   1a6dc:	mov	r0, #2
   1a6e0:	pop	{r4, r5, r6, pc}

0001a6e4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1a6e4:	push	{r4, r5, r6, r7, r8, lr}
   1a6e8:	mov	r4, r0
   1a6ec:	mov	r5, r1
   1a6f0:	mov	r6, r2
   1a6f4:	mov	r7, #0
   1a6f8:	mov	r8, #1024	; 0x400
   1a6fc:	cmp	r4, #0
   1a700:	bne	1a70c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x28>
   1a704:	mov	r0, r4
   1a708:	pop	{r4, r5, r6, r7, r8, pc}
   1a70c:	ldr	r3, [r4, #4]
   1a710:	cmp	r3, r6
   1a714:	beq	1a72c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x48>
   1a718:	ldr	r0, [r4, #20]
   1a71c:	cmp	r0, #0
   1a720:	bne	1a768 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x84>
   1a724:	ldr	r4, [r4, #16]
   1a728:	b	1a6fc <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x18>
   1a72c:	ldr	r3, [r5, #8]
   1a730:	ldr	r2, [r5]
   1a734:	str	r4, [r2, r3, lsl #2]
   1a738:	ldr	r2, [r5, #4]
   1a73c:	add	r3, r3, #1
   1a740:	cmp	r3, r2
   1a744:	str	r3, [r5, #8]
   1a748:	bcc	1a718 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x34>
   1a74c:	mov	r2, r7
   1a750:	mov	r1, r8
   1a754:	mov	r0, r5
   1a758:	bl	10dfc <myhtml_collection_check_size@plt>
   1a75c:	cmp	r0, #0
   1a760:	beq	1a718 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x34>
   1a764:	pop	{r4, r5, r6, r7, r8, pc}
   1a768:	mov	r2, r6
   1a76c:	mov	r1, r5
   1a770:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1a774:	b	1a724 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x40>

0001a778 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1a778:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1a77c:	subs	r6, r2, #0
   1a780:	ldr	r5, [sp, #32]
   1a784:	moveq	r4, r6
   1a788:	beq	1a7c8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1a78c:	mov	r7, r3
   1a790:	mov	r3, #0
   1a794:	cmp	r1, r3
   1a798:	mov	r4, r1
   1a79c:	str	r3, [sp, #4]
   1a7a0:	bne	1a7b4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x3c>
   1a7a4:	add	r1, sp, #4
   1a7a8:	mov	r0, #1024	; 0x400
   1a7ac:	bl	10304 <myhtml_collection_create@plt>
   1a7b0:	mov	r4, r0
   1a7b4:	ldr	r2, [sp, #4]
   1a7b8:	cmp	r2, #0
   1a7bc:	beq	1a7d4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x5c>
   1a7c0:	cmp	r5, #0
   1a7c4:	strne	r2, [r5]
   1a7c8:	mov	r0, r4
   1a7cc:	add	sp, sp, #12
   1a7d0:	pop	{r4, r5, r6, r7, pc}
   1a7d4:	ldr	r0, [r6, #20]
   1a7d8:	cmp	r0, #0
   1a7dc:	beq	1a7f0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1a7e0:	mov	r2, r7
   1a7e4:	mov	r1, r4
   1a7e8:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1a7ec:	str	r0, [sp, #4]
   1a7f0:	ldr	r3, [r4]
   1a7f4:	ldr	r2, [r4, #8]
   1a7f8:	mov	r1, #0
   1a7fc:	cmp	r5, r1
   1a800:	str	r1, [r3, r2, lsl #2]
   1a804:	ldrne	r3, [sp, #4]
   1a808:	strne	r3, [r5]
   1a80c:	b	1a7c8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>

0001a810 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1a810:	push	{r4, r5, r6, r7, r8, lr}
   1a814:	mov	r4, r0
   1a818:	mov	r5, r1
   1a81c:	mov	r6, r2
   1a820:	mov	r1, r3
   1a824:	ldr	r2, [sp, #24]
   1a828:	ldr	r0, [r0, #28]
   1a82c:	ldr	r7, [sp, #28]
   1a830:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1a834:	subs	r3, r0, #0
   1a838:	popeq	{r4, r5, r6, r7, r8, pc}
   1a83c:	str	r7, [sp, #24]
   1a840:	mov	r2, r6
   1a844:	mov	r1, r5
   1a848:	mov	r0, r4
   1a84c:	ldr	r3, [r3]
   1a850:	pop	{r4, r5, r6, r7, r8, lr}
   1a854:	b	ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>

0001a858 <myhtml_get_nodes_by_tag_id@@Base>:
   1a858:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a85c:	subs	r4, r1, #0
   1a860:	mov	r7, r0
   1a864:	mov	r8, r2
   1a868:	mov	r6, r3
   1a86c:	bne	1a880 <myhtml_get_nodes_by_tag_id@@Base+0x28>
   1a870:	mov	r0, #1024	; 0x400
   1a874:	bl	10304 <myhtml_collection_create@plt>
   1a878:	subs	r4, r0, #0
   1a87c:	beq	1a920 <myhtml_get_nodes_by_tag_id@@Base+0xc8>
   1a880:	ldr	r5, [r7, #96]	; 0x60
   1a884:	mov	r9, #1024	; 0x400
   1a888:	mov	sl, #1
   1a88c:	cmp	r5, #0
   1a890:	beq	1a8fc <myhtml_get_nodes_by_tag_id@@Base+0xa4>
   1a894:	ldr	r3, [r5, #4]
   1a898:	cmp	r3, r8
   1a89c:	bne	1a8cc <myhtml_get_nodes_by_tag_id@@Base+0x74>
   1a8a0:	mov	r2, r9
   1a8a4:	mov	r1, sl
   1a8a8:	mov	r0, r4
   1a8ac:	bl	10dfc <myhtml_collection_check_size@plt>
   1a8b0:	cmp	r0, #0
   1a8b4:	bne	1a928 <myhtml_get_nodes_by_tag_id@@Base+0xd0>
   1a8b8:	ldr	r3, [r4, #8]
   1a8bc:	ldr	r2, [r4]
   1a8c0:	str	r5, [r2, r3, lsl #2]
   1a8c4:	add	r3, r3, #1
   1a8c8:	str	r3, [r4, #8]
   1a8cc:	ldr	r3, [r5, #20]
   1a8d0:	cmp	r3, #0
   1a8d4:	ldreq	r2, [r7, #96]	; 0x60
   1a8d8:	beq	1a8f4 <myhtml_get_nodes_by_tag_id@@Base+0x9c>
   1a8dc:	mov	r5, r3
   1a8e0:	b	1a88c <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1a8e4:	ldr	r3, [r5, #16]
   1a8e8:	cmp	r3, #0
   1a8ec:	bne	1a8dc <myhtml_get_nodes_by_tag_id@@Base+0x84>
   1a8f0:	ldr	r5, [r5, #24]
   1a8f4:	cmp	r5, r2
   1a8f8:	bne	1a8e4 <myhtml_get_nodes_by_tag_id@@Base+0x8c>
   1a8fc:	mov	r2, #1024	; 0x400
   1a900:	mov	r1, #1
   1a904:	mov	r0, r4
   1a908:	bl	10dfc <myhtml_collection_check_size@plt>
   1a90c:	cmp	r0, #0
   1a910:	bne	1a928 <myhtml_get_nodes_by_tag_id@@Base+0xd0>
   1a914:	ldr	r2, [r4, #8]
   1a918:	ldr	r3, [r4]
   1a91c:	str	r0, [r3, r2, lsl #2]
   1a920:	mov	r0, r4
   1a924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a928:	cmp	r6, #0
   1a92c:	movne	r3, #2
   1a930:	strne	r3, [r6]
   1a934:	b	1a920 <myhtml_get_nodes_by_tag_id@@Base+0xc8>

0001a938 <myhtml_get_nodes_by_name@@Base>:
   1a938:	push	{r4, r5, r6, lr}
   1a93c:	mov	r4, r0
   1a940:	mov	r5, r1
   1a944:	ldr	r0, [r0, #28]
   1a948:	mov	r1, r2
   1a94c:	mov	r2, r3
   1a950:	ldr	r6, [sp, #16]
   1a954:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1a958:	subs	r2, r0, #0
   1a95c:	popeq	{r4, r5, r6, pc}
   1a960:	mov	r3, r6
   1a964:	mov	r1, r5
   1a968:	mov	r0, r4
   1a96c:	ldr	r2, [r2]
   1a970:	pop	{r4, r5, r6, lr}
   1a974:	b	1031c <myhtml_get_nodes_by_tag_id@plt>

0001a978 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1a978:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a97c:	mov	r7, r0
   1a980:	mov	r6, r1
   1a984:	mov	r9, r2
   1a988:	mov	r8, r3
   1a98c:	mov	r4, r0
   1a990:	mov	sl, #0
   1a994:	mov	fp, #1024	; 0x400
   1a998:	cmp	r4, #0
   1a99c:	beq	1aa4c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd4>
   1a9a0:	ldr	r3, [r4, #32]
   1a9a4:	cmp	r3, #0
   1a9a8:	ldrne	r5, [r3, #40]	; 0x28
   1a9ac:	bne	1a9d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x58>
   1a9b0:	ldr	r3, [r4, #20]
   1a9b4:	cmp	r3, #0
   1a9b8:	bne	1a9c8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x50>
   1a9bc:	ldr	r3, [r4, #16]
   1a9c0:	cmp	r3, #0
   1a9c4:	beq	1aa40 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc8>
   1a9c8:	mov	r4, r3
   1a9cc:	b	1a998 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1a9d0:	cmp	r5, #0
   1a9d4:	beq	1a9b0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x38>
   1a9d8:	ldr	r3, [r5, #16]
   1a9dc:	cmp	r3, r8
   1a9e0:	beq	1a9ec <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x74>
   1a9e4:	ldr	r5, [r5]
   1a9e8:	b	1a9d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x58>
   1a9ec:	mov	r2, r8
   1a9f0:	mov	r1, r9
   1a9f4:	ldr	r0, [r5, #8]
   1a9f8:	bl	102a4 <mycore_strncasecmp@plt>
   1a9fc:	cmp	r0, #0
   1aa00:	bne	1a9e4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x6c>
   1aa04:	ldr	r3, [r6, #8]
   1aa08:	ldr	r2, [r6]
   1aa0c:	str	r4, [r2, r3, lsl #2]
   1aa10:	ldr	r2, [r6, #4]
   1aa14:	add	r3, r3, #1
   1aa18:	cmp	r3, r2
   1aa1c:	str	r3, [r6, #8]
   1aa20:	bcc	1a9e4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x6c>
   1aa24:	mov	r2, sl
   1aa28:	mov	r1, fp
   1aa2c:	mov	r0, r6
   1aa30:	bl	10dfc <myhtml_collection_check_size@plt>
   1aa34:	cmp	r0, #0
   1aa38:	beq	1a9e4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x6c>
   1aa3c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa40:	ldr	r4, [r4, #24]
   1aa44:	cmp	r7, r4
   1aa48:	bne	1a9bc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x44>
   1aa4c:	mov	r0, #0
   1aa50:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aa54 <myhtml_get_nodes_by_attribute_key@@Base>:
   1aa54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aa58:	subs	r7, r1, #0
   1aa5c:	mov	r9, r0
   1aa60:	mov	r6, r2
   1aa64:	mov	r8, r3
   1aa68:	ldr	r5, [sp, #36]	; 0x24
   1aa6c:	movne	r4, r7
   1aa70:	bne	1aaac <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1aa74:	mov	r1, r5
   1aa78:	mov	r0, #1024	; 0x400
   1aa7c:	bl	10304 <myhtml_collection_create@plt>
   1aa80:	cmp	r5, #0
   1aa84:	mov	r4, r0
   1aa88:	beq	1aa9c <myhtml_get_nodes_by_attribute_key@@Base+0x48>
   1aa8c:	ldr	r3, [r5]
   1aa90:	cmp	r3, #0
   1aa94:	movne	r4, r7
   1aa98:	bne	1aaa4 <myhtml_get_nodes_by_attribute_key@@Base+0x50>
   1aa9c:	cmp	r4, #0
   1aaa0:	bne	1aaac <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1aaa4:	mov	r0, r4
   1aaa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1aaac:	cmp	r6, #0
   1aab0:	ldr	r3, [sp, #32]
   1aab4:	ldreq	r6, [r9, #96]	; 0x60
   1aab8:	mov	r2, r8
   1aabc:	mov	r1, r4
   1aac0:	mov	r0, r6
   1aac4:	bl	fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1aac8:	cmp	r0, #0
   1aacc:	cmpne	r5, #0
   1aad0:	strne	r0, [r5]
   1aad4:	b	1aaa4 <myhtml_get_nodes_by_attribute_key@@Base+0x50>

0001aad8 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1aad8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aadc:	mov	r7, r0
   1aae0:	mov	r5, r1
   1aae4:	mov	r8, r2
   1aae8:	mov	r9, r3
   1aaec:	mov	r4, r0
   1aaf0:	mov	sl, #0
   1aaf4:	mov	fp, #1024	; 0x400
   1aaf8:	cmp	r4, #0
   1aafc:	beq	1aba0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1ab00:	ldr	r3, [r4, #32]
   1ab04:	cmp	r3, #0
   1ab08:	ldrne	r6, [r3, #40]	; 0x28
   1ab0c:	bne	1ab30 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x58>
   1ab10:	ldr	r3, [r4, #20]
   1ab14:	cmp	r3, #0
   1ab18:	bne	1ab28 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x50>
   1ab1c:	ldr	r3, [r4, #16]
   1ab20:	cmp	r3, #0
   1ab24:	beq	1ab94 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xbc>
   1ab28:	mov	r4, r3
   1ab2c:	b	1aaf8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x20>
   1ab30:	cmp	r6, #0
   1ab34:	beq	1ab10 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x38>
   1ab38:	ldr	r2, [sp, #40]	; 0x28
   1ab3c:	mov	r1, r9
   1ab40:	add	r0, r6, #28
   1ab44:	blx	r8
   1ab48:	cmp	r0, #0
   1ab4c:	bne	1ab58 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x80>
   1ab50:	ldr	r6, [r6]
   1ab54:	b	1ab30 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x58>
   1ab58:	ldr	r3, [r5, #8]
   1ab5c:	ldr	r2, [r5]
   1ab60:	str	r4, [r2, r3, lsl #2]
   1ab64:	ldr	r2, [r5, #4]
   1ab68:	add	r3, r3, #1
   1ab6c:	cmp	r3, r2
   1ab70:	str	r3, [r5, #8]
   1ab74:	bcc	1ab50 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x78>
   1ab78:	mov	r2, sl
   1ab7c:	mov	r1, fp
   1ab80:	mov	r0, r5
   1ab84:	bl	10dfc <myhtml_collection_check_size@plt>
   1ab88:	cmp	r0, #0
   1ab8c:	beq	1ab50 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x78>
   1ab90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab94:	ldr	r4, [r4, #24]
   1ab98:	cmp	r7, r4
   1ab9c:	bne	1ab1c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x44>
   1aba0:	mov	r0, #0
   1aba4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aba8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1aba8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abac:	mov	r6, r0
   1abb0:	mov	r5, r1
   1abb4:	mov	r8, r2
   1abb8:	mov	r9, r3
   1abbc:	mov	r4, r0
   1abc0:	mov	sl, #0
   1abc4:	mov	fp, #1024	; 0x400
   1abc8:	cmp	r4, #0
   1abcc:	beq	1ac98 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf0>
   1abd0:	ldr	r3, [r4, #32]
   1abd4:	cmp	r3, #0
   1abd8:	ldrne	r7, [r3, #40]	; 0x28
   1abdc:	bne	1ac00 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x58>
   1abe0:	ldr	r3, [r4, #20]
   1abe4:	cmp	r3, #0
   1abe8:	bne	1abf8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x50>
   1abec:	ldr	r3, [r4, #16]
   1abf0:	cmp	r3, #0
   1abf4:	beq	1ac8c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xe4>
   1abf8:	mov	r4, r3
   1abfc:	b	1abc8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x20>
   1ac00:	cmp	r7, #0
   1ac04:	beq	1abe0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x38>
   1ac08:	ldr	r2, [r7, #16]
   1ac0c:	ldr	r3, [sp, #40]	; 0x28
   1ac10:	cmp	r2, r3
   1ac14:	beq	1ac20 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x78>
   1ac18:	ldr	r7, [r7]
   1ac1c:	b	1ac00 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x58>
   1ac20:	ldr	r2, [sp, #40]	; 0x28
   1ac24:	mov	r1, r9
   1ac28:	ldr	r0, [r7, #8]
   1ac2c:	bl	102a4 <mycore_strncasecmp@plt>
   1ac30:	cmp	r0, #0
   1ac34:	bne	1ac18 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x70>
   1ac38:	ldr	r2, [sp, #48]	; 0x30
   1ac3c:	ldr	r1, [sp, #44]	; 0x2c
   1ac40:	add	r0, r7, #28
   1ac44:	blx	r8
   1ac48:	cmp	r0, #0
   1ac4c:	beq	1ac18 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x70>
   1ac50:	ldr	r2, [r5, #8]
   1ac54:	ldr	r1, [r5]
   1ac58:	str	r4, [r1, r2, lsl #2]
   1ac5c:	ldr	r1, [r5, #4]
   1ac60:	add	r2, r2, #1
   1ac64:	cmp	r2, r1
   1ac68:	str	r2, [r5, #8]
   1ac6c:	bcc	1ac18 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x70>
   1ac70:	mov	r2, sl
   1ac74:	mov	r1, fp
   1ac78:	mov	r0, r5
   1ac7c:	bl	10dfc <myhtml_collection_check_size@plt>
   1ac80:	cmp	r0, #0
   1ac84:	beq	1ac18 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x70>
   1ac88:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac8c:	ldr	r4, [r4, #24]
   1ac90:	cmp	r6, r4
   1ac94:	bne	1abec <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x44>
   1ac98:	mov	r0, #0
   1ac9c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001aca0 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1aca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aca4:	sub	sp, sp, #20
   1aca8:	subs	r7, r1, #0
   1acac:	mov	fp, r0
   1acb0:	mov	r6, r2
   1acb4:	mov	r8, r3
   1acb8:	ldr	r9, [sp, #56]	; 0x38
   1acbc:	ldr	sl, [sp, #60]	; 0x3c
   1acc0:	ldr	r5, [sp, #72]	; 0x48
   1acc4:	movne	r4, r7
   1acc8:	bne	1ad08 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1accc:	mov	r1, r5
   1acd0:	mov	r0, #1024	; 0x400
   1acd4:	bl	10304 <myhtml_collection_create@plt>
   1acd8:	cmp	r5, #0
   1acdc:	mov	r4, r0
   1ace0:	beq	1acf4 <_myhtml_get_nodes_by_attribute_value@@Base+0x54>
   1ace4:	ldr	r1, [r5]
   1ace8:	cmp	r1, #0
   1acec:	movne	r4, r7
   1acf0:	bne	1acfc <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1acf4:	cmp	r4, #0
   1acf8:	bne	1ad08 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1acfc:	mov	r0, r4
   1ad00:	add	sp, sp, #20
   1ad04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad08:	cmp	r6, #0
   1ad0c:	ldr	r3, [sp, #68]	; 0x44
   1ad10:	ldreq	r6, [fp, #96]	; 0x60
   1ad14:	cmp	r9, #0
   1ad18:	cmpne	sl, #0
   1ad1c:	beq	1ad54 <_myhtml_get_nodes_by_attribute_value@@Base+0xb4>
   1ad20:	str	r3, [sp, #8]
   1ad24:	ldr	r3, [sp, #64]	; 0x40
   1ad28:	str	sl, [sp]
   1ad2c:	str	r3, [sp, #4]
   1ad30:	mov	r2, r8
   1ad34:	mov	r3, r9
   1ad38:	mov	r1, r4
   1ad3c:	mov	r0, r6
   1ad40:	bl	fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1ad44:	cmp	r0, #0
   1ad48:	cmpne	r5, #0
   1ad4c:	strne	r0, [r5]
   1ad50:	b	1acfc <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1ad54:	str	r3, [sp]
   1ad58:	mov	r2, r8
   1ad5c:	ldr	r3, [sp, #64]	; 0x40
   1ad60:	mov	r1, r4
   1ad64:	mov	r0, r6
   1ad68:	bl	fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1ad6c:	b	1ad44 <_myhtml_get_nodes_by_attribute_value@@Base+0xa4>

0001ad70 <myhtml_get_nodes_by_attribute_value@@Base>:
   1ad70:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1ad74:	add	r4, sp, #36	; 0x24
   1ad78:	ldr	ip, [pc, #76]	; 1adcc <myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1ad7c:	cmp	r3, #0
   1ad80:	add	ip, pc, ip
   1ad84:	ldr	lr, [sp, #32]
   1ad88:	ldm	r4, {r4, r5, r6, r7}
   1ad8c:	beq	1ada8 <myhtml_get_nodes_by_attribute_value@@Base+0x38>
   1ad90:	ldr	r3, [pc, #56]	; 1add0 <myhtml_get_nodes_by_attribute_value@@Base+0x60>
   1ad94:	ldr	r3, [ip, r3]
   1ad98:	str	r3, [sp, #4]
   1ad9c:	add	sp, sp, #12
   1ada0:	pop	{r4, r5, r6, r7, lr}
   1ada4:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1ada8:	ldr	r3, [pc, #36]	; 1add4 <myhtml_get_nodes_by_attribute_value@@Base+0x64>
   1adac:	ldr	r3, [ip, r3]
   1adb0:	str	r7, [sp, #48]	; 0x30
   1adb4:	str	r3, [sp, #4]
   1adb8:	str	r6, [sp, #44]	; 0x2c
   1adbc:	str	r5, [sp, #40]	; 0x28
   1adc0:	str	r4, [sp, #36]	; 0x24
   1adc4:	str	lr, [sp, #32]
   1adc8:	b	1ad9c <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1adcc:	andeq	r6, pc, r8, ror r2	; <UNPREDICTABLE>
   1add0:	andeq	r0, r0, r4, lsl #17
   1add4:	andeq	r0, r0, ip, lsr #17

0001add8 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1add8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1addc:	add	r4, sp, #36	; 0x24
   1ade0:	ldr	ip, [pc, #76]	; 1ae34 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x5c>
   1ade4:	cmp	r3, #0
   1ade8:	add	ip, pc, ip
   1adec:	ldr	lr, [sp, #32]
   1adf0:	ldm	r4, {r4, r5, r6, r7}
   1adf4:	beq	1ae10 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x38>
   1adf8:	ldr	r3, [pc, #56]	; 1ae38 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x60>
   1adfc:	ldr	r3, [ip, r3]
   1ae00:	str	r3, [sp, #4]
   1ae04:	add	sp, sp, #12
   1ae08:	pop	{r4, r5, r6, r7, lr}
   1ae0c:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1ae10:	ldr	r3, [pc, #36]	; 1ae3c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x64>
   1ae14:	ldr	r3, [ip, r3]
   1ae18:	str	r7, [sp, #48]	; 0x30
   1ae1c:	str	r3, [sp, #4]
   1ae20:	str	r6, [sp, #44]	; 0x2c
   1ae24:	str	r5, [sp, #40]	; 0x28
   1ae28:	str	r4, [sp, #36]	; 0x24
   1ae2c:	str	lr, [sp, #32]
   1ae30:	b	1ae04 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1ae34:	andeq	r6, pc, r0, lsl r2	; <UNPREDICTABLE>
   1ae38:	andeq	r0, r0, r8, lsl r7
   1ae3c:	andeq	r0, r0, r8, lsr #18

0001ae40 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1ae40:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1ae44:	add	r4, sp, #36	; 0x24
   1ae48:	ldr	ip, [pc, #76]	; 1ae9c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x5c>
   1ae4c:	cmp	r3, #0
   1ae50:	add	ip, pc, ip
   1ae54:	ldr	lr, [sp, #32]
   1ae58:	ldm	r4, {r4, r5, r6, r7}
   1ae5c:	beq	1ae78 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x38>
   1ae60:	ldr	r3, [pc, #56]	; 1aea0 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x60>
   1ae64:	ldr	r3, [ip, r3]
   1ae68:	str	r3, [sp, #4]
   1ae6c:	add	sp, sp, #12
   1ae70:	pop	{r4, r5, r6, r7, lr}
   1ae74:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1ae78:	ldr	r3, [pc, #36]	; 1aea4 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x64>
   1ae7c:	ldr	r3, [ip, r3]
   1ae80:	str	r7, [sp, #48]	; 0x30
   1ae84:	str	r3, [sp, #4]
   1ae88:	str	r6, [sp, #44]	; 0x2c
   1ae8c:	str	r5, [sp, #40]	; 0x28
   1ae90:	str	r4, [sp, #36]	; 0x24
   1ae94:	str	lr, [sp, #32]
   1ae98:	b	1ae6c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1ae9c:	andeq	r6, pc, r8, lsr #3
   1aea0:	andeq	r0, r0, r4, ror r7
   1aea4:	andeq	r0, r0, r4, ror #14

0001aea8 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1aea8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1aeac:	add	r4, sp, #36	; 0x24
   1aeb0:	ldr	ip, [pc, #76]	; 1af04 <myhtml_get_nodes_by_attribute_value_end@@Base+0x5c>
   1aeb4:	cmp	r3, #0
   1aeb8:	add	ip, pc, ip
   1aebc:	ldr	lr, [sp, #32]
   1aec0:	ldm	r4, {r4, r5, r6, r7}
   1aec4:	beq	1aee0 <myhtml_get_nodes_by_attribute_value_end@@Base+0x38>
   1aec8:	ldr	r3, [pc, #56]	; 1af08 <myhtml_get_nodes_by_attribute_value_end@@Base+0x60>
   1aecc:	ldr	r3, [ip, r3]
   1aed0:	str	r3, [sp, #4]
   1aed4:	add	sp, sp, #12
   1aed8:	pop	{r4, r5, r6, r7, lr}
   1aedc:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1aee0:	ldr	r3, [pc, #36]	; 1af0c <myhtml_get_nodes_by_attribute_value_end@@Base+0x64>
   1aee4:	ldr	r3, [ip, r3]
   1aee8:	str	r7, [sp, #48]	; 0x30
   1aeec:	str	r3, [sp, #4]
   1aef0:	str	r6, [sp, #44]	; 0x2c
   1aef4:	str	r5, [sp, #40]	; 0x28
   1aef8:	str	r4, [sp, #36]	; 0x24
   1aefc:	str	lr, [sp, #32]
   1af00:	b	1aed4 <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1af04:	andeq	r6, pc, r0, asr #2
   1af08:	andeq	r0, r0, r4, lsl #19
   1af0c:	strdeq	r0, [r0], -r4

0001af10 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1af10:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1af14:	add	r4, sp, #36	; 0x24
   1af18:	ldr	ip, [pc, #76]	; 1af6c <myhtml_get_nodes_by_attribute_value_contain@@Base+0x5c>
   1af1c:	cmp	r3, #0
   1af20:	add	ip, pc, ip
   1af24:	ldr	lr, [sp, #32]
   1af28:	ldm	r4, {r4, r5, r6, r7}
   1af2c:	beq	1af48 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x38>
   1af30:	ldr	r3, [pc, #56]	; 1af70 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x60>
   1af34:	ldr	r3, [ip, r3]
   1af38:	str	r3, [sp, #4]
   1af3c:	add	sp, sp, #12
   1af40:	pop	{r4, r5, r6, r7, lr}
   1af44:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1af48:	ldr	r3, [pc, #36]	; 1af74 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x64>
   1af4c:	ldr	r3, [ip, r3]
   1af50:	str	r7, [sp, #48]	; 0x30
   1af54:	str	r3, [sp, #4]
   1af58:	str	r6, [sp, #44]	; 0x2c
   1af5c:	str	r5, [sp, #40]	; 0x28
   1af60:	str	r4, [sp, #36]	; 0x24
   1af64:	str	lr, [sp, #32]
   1af68:	b	1af3c <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1af6c:	ldrdeq	r6, [pc], -r8
   1af70:	andeq	r0, r0, r8, ror #14
   1af74:	andeq	r0, r0, r8, lsl #17

0001af78 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1af78:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1af7c:	add	r4, sp, #36	; 0x24
   1af80:	ldr	ip, [pc, #76]	; 1afd4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x5c>
   1af84:	cmp	r3, #0
   1af88:	add	ip, pc, ip
   1af8c:	ldr	lr, [sp, #32]
   1af90:	ldm	r4, {r4, r5, r6, r7}
   1af94:	beq	1afb0 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x38>
   1af98:	ldr	r3, [pc, #56]	; 1afd8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x60>
   1af9c:	ldr	r3, [ip, r3]
   1afa0:	str	r3, [sp, #4]
   1afa4:	add	sp, sp, #12
   1afa8:	pop	{r4, r5, r6, r7, lr}
   1afac:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1afb0:	ldr	r3, [pc, #36]	; 1afdc <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x64>
   1afb4:	ldr	r3, [ip, r3]
   1afb8:	str	r7, [sp, #48]	; 0x30
   1afbc:	str	r3, [sp, #4]
   1afc0:	str	r6, [sp, #44]	; 0x2c
   1afc4:	str	r5, [sp, #40]	; 0x28
   1afc8:	str	r4, [sp, #36]	; 0x24
   1afcc:	str	lr, [sp, #32]
   1afd0:	b	1afa4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1afd4:	andeq	r6, pc, r0, ror r0	; <UNPREDICTABLE>
   1afd8:	andeq	r0, r0, r4, lsl #16
   1afdc:	andeq	r0, r0, r0, ror r8

0001afe0 <myhtml_collection_clean@@Base>:
   1afe0:	cmp	r0, #0
   1afe4:	movne	r3, #0
   1afe8:	strne	r3, [r0, #8]
   1afec:	bx	lr

0001aff0 <myhtml_collection_destroy@@Base>:
   1aff0:	push	{r4, lr}
   1aff4:	subs	r4, r0, #0
   1aff8:	beq	1b014 <myhtml_collection_destroy@@Base+0x24>
   1affc:	ldr	r0, [r4]
   1b000:	cmp	r0, #0
   1b004:	beq	1b00c <myhtml_collection_destroy@@Base+0x1c>
   1b008:	bl	10dcc <mycore_free@plt>
   1b00c:	mov	r0, r4
   1b010:	bl	10dcc <mycore_free@plt>
   1b014:	mov	r0, #0
   1b018:	pop	{r4, pc}

0001b01c <myhtml_queue_add@@Base>:
   1b01c:	ldr	r3, [r0, #184]	; 0xb8
   1b020:	push	{r4, r5, r6, r7, r8, lr}
   1b024:	adds	r8, r2, #0
   1b028:	movne	r8, #1
   1b02c:	ands	r3, r8, r3, lsr #2
   1b030:	mov	r4, r0
   1b034:	mov	r7, r1
   1b038:	ldr	r6, [r0, #68]	; 0x44
   1b03c:	mov	r5, r2
   1b040:	beq	1b07c <myhtml_queue_add@@Base+0x60>
   1b044:	ldr	r3, [r2]
   1b048:	cmp	r3, #1
   1b04c:	bne	1b07c <myhtml_queue_add@@Base+0x60>
   1b050:	ldr	r3, [r2, #48]	; 0x30
   1b054:	tst	r3, #8
   1b058:	beq	1b07c <myhtml_queue_add@@Base+0x60>
   1b05c:	mov	r0, r2
   1b060:	bl	10f7c <myhtml_token_node_clean@plt>
   1b064:	ldr	r3, [r4, #192]	; 0xc0
   1b068:	add	r7, r7, r3
   1b06c:	str	r7, [r5, #32]
   1b070:	str	r7, [r5, #24]
   1b074:	mov	r0, #0
   1b078:	pop	{r4, r5, r6, r7, r8, pc}
   1b07c:	ldr	r3, [r4, #180]	; 0xb4
   1b080:	tst	r3, #16
   1b084:	beq	1b0e8 <myhtml_queue_add@@Base+0xcc>
   1b088:	cmp	r6, #0
   1b08c:	moveq	r3, #0
   1b090:	andne	r3, r8, #1
   1b094:	cmp	r3, #0
   1b098:	beq	1b0b8 <myhtml_queue_add@@Base+0x9c>
   1b09c:	mov	r1, r6
   1b0a0:	mov	r0, #0
   1b0a4:	str	r5, [r6, #4]
   1b0a8:	bl	fd7c <myhtml_parser_worker@plt>
   1b0ac:	mov	r1, r6
   1b0b0:	mov	r0, #0
   1b0b4:	bl	10ff4 <myhtml_parser_stream@plt>
   1b0b8:	ldr	r0, [r4]
   1b0bc:	mov	r3, #0
   1b0c0:	mov	r2, #4
   1b0c4:	ldr	r1, [r4, #24]
   1b0c8:	ldr	r0, [r0]
   1b0cc:	bl	10cac <mythread_queue_node_malloc_limit@plt>
   1b0d0:	str	r0, [r4, #68]	; 0x44
   1b0d4:	ldr	r3, [r4, #68]	; 0x44
   1b0d8:	cmp	r3, #0
   1b0dc:	bne	1b138 <myhtml_queue_add@@Base+0x11c>
   1b0e0:	mov	r0, #2
   1b0e4:	pop	{r4, r5, r6, r7, r8, pc}
   1b0e8:	ldr	r3, [r4]
   1b0ec:	cmp	r6, #0
   1b0f0:	strne	r5, [r6, #4]
   1b0f4:	ldr	r1, [r4, #20]
   1b0f8:	ldr	r0, [r3]
   1b0fc:	bl	10538 <mythread_queue_node_malloc_round@plt>
   1b100:	ldr	r1, [r4, #20]
   1b104:	ldr	r3, [r1]
   1b108:	ldr	r3, [r3, #12]
   1b10c:	cmp	r3, #0
   1b110:	str	r0, [r4, #68]	; 0x44
   1b114:	bne	1b0d4 <myhtml_queue_add@@Base+0xb8>
   1b118:	ldr	r3, [r4]
   1b11c:	ldr	r0, [r3, #4]
   1b120:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   1b124:	ldr	r3, [r4]
   1b128:	ldr	r1, [r4, #20]
   1b12c:	ldr	r0, [r3]
   1b130:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   1b134:	b	1b0d4 <myhtml_queue_add@@Base+0xb8>
   1b138:	str	r6, [r3, #8]
   1b13c:	cmp	r6, #0
   1b140:	moveq	r6, #0
   1b144:	andne	r6, r8, #1
   1b148:	cmp	r6, #0
   1b14c:	str	r4, [r3]
   1b150:	beq	1b160 <myhtml_queue_add@@Base+0x144>
   1b154:	mov	r1, r5
   1b158:	mov	r0, r4
   1b15c:	bl	1022c <myhtml_tokenizer_calc_current_namespace@plt>
   1b160:	ldr	r0, [r4, #8]
   1b164:	ldr	r1, [r0, #12]
   1b168:	bl	10a0c <myhtml_token_node_create@plt>
   1b16c:	cmp	r0, #0
   1b170:	str	r0, [r4, #64]	; 0x40
   1b174:	beq	1b0e0 <myhtml_queue_add@@Base+0xc4>
   1b178:	ldr	r3, [r4, #192]	; 0xc0
   1b17c:	add	r7, r7, r3
   1b180:	str	r7, [r0, #32]
   1b184:	str	r7, [r0, #24]
   1b188:	b	1b074 <myhtml_queue_add@@Base+0x58>

0001b18c <myhtml_utils_strcmp@@Base>:
   1b18c:	mov	ip, #0
   1b190:	cmp	ip, r2
   1b194:	beq	1b1d4 <myhtml_utils_strcmp@@Base+0x48>
   1b198:	push	{lr}		; (str lr, [sp, #-4]!)
   1b19c:	ldrb	r3, [r1, ip]
   1b1a0:	sub	lr, r3, #65	; 0x41
   1b1a4:	cmp	lr, #25
   1b1a8:	ldrb	lr, [r0, ip]
   1b1ac:	orrls	r3, r3, #96	; 0x60
   1b1b0:	cmp	r3, lr
   1b1b4:	bne	1b1cc <myhtml_utils_strcmp@@Base+0x40>
   1b1b8:	add	ip, ip, #1
   1b1bc:	cmp	ip, r2
   1b1c0:	bne	1b19c <myhtml_utils_strcmp@@Base+0x10>
   1b1c4:	mov	r0, #1
   1b1c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1cc:	mov	r0, #0
   1b1d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1d4:	mov	r0, #1
   1b1d8:	bx	lr

0001b1dc <myhtml_is_html_node@@Base>:
   1b1dc:	cmp	r0, #0
   1b1e0:	bxeq	lr
   1b1e4:	ldr	r3, [r0, #4]
   1b1e8:	cmp	r3, r1
   1b1ec:	ldreq	r0, [r0, #8]
   1b1f0:	subeq	r0, r0, #1
   1b1f4:	clzeq	r0, r0
   1b1f8:	lsreq	r0, r0, #5
   1b1fc:	movne	r0, #0
   1b200:	bx	lr

0001b204 <myhtml_version@@Base>:
   1b204:	ldr	r2, [pc, #20]	; 1b220 <myhtml_version@@Base+0x1c>
   1b208:	mov	r3, r0
   1b20c:	add	r2, pc, r2
   1b210:	ldm	r2, {r0, r1, r2}
   1b214:	stm	r3, {r0, r1, r2}
   1b218:	mov	r0, r3
   1b21c:	bx	lr
   1b220:	andeq	fp, sp, r0, asr #15

0001b224 <myhtml_node_clone@@Base>:
   1b224:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1b228:	mov	r5, r1
   1b22c:	mov	r6, r0
   1b230:	bl	ffe0 <myhtml_tree_node_create@plt>
   1b234:	ldr	r4, [r5, #4]
   1b238:	cmp	r4, #251	; 0xfb
   1b23c:	mov	r7, r0
   1b240:	bls	1b28c <myhtml_node_clone@@Base+0x68>
   1b244:	mov	r1, r4
   1b248:	ldr	r0, [r6, #28]
   1b24c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1b250:	ldr	r3, [r5, #40]	; 0x28
   1b254:	ldr	r1, [r5, #4]
   1b258:	mov	r9, r0
   1b25c:	ldr	r0, [r3, #28]
   1b260:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1b264:	cmp	r9, #0
   1b268:	mov	r8, r0
   1b26c:	bne	1b2d0 <myhtml_node_clone@@Base+0xac>
   1b270:	mov	r3, #1
   1b274:	str	r3, [sp]
   1b278:	ldr	r0, [r6, #28]
   1b27c:	mov	r3, #0
   1b280:	ldmib	r8, {r1, r2}
   1b284:	bl	10010 <myhtml_tag_add@plt>
   1b288:	mov	r4, r0
   1b28c:	ldr	r3, [r6, #44]	; 0x2c
   1b290:	ldr	r2, [r6, #40]	; 0x28
   1b294:	ldr	r1, [r5, #32]
   1b298:	ldr	r0, [r6, #8]
   1b29c:	bl	ff2c <myhtml_token_node_clone@plt>
   1b2a0:	ldr	r3, [r5, #8]
   1b2a4:	str	r4, [r7, #4]
   1b2a8:	str	r3, [r7, #8]
   1b2ac:	cmp	r0, #0
   1b2b0:	str	r0, [r7, #32]
   1b2b4:	ldrne	r3, [r0, #48]	; 0x30
   1b2b8:	strne	r4, [r0]
   1b2bc:	orrne	r3, r3, #4
   1b2c0:	strne	r3, [r0, #48]	; 0x30
   1b2c4:	mov	r0, r7
   1b2c8:	add	sp, sp, #12
   1b2cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b2d0:	ldr	r2, [r9, #8]
   1b2d4:	ldr	r3, [r0, #8]
   1b2d8:	cmp	r2, r3
   1b2dc:	bne	1b270 <myhtml_node_clone@@Base+0x4c>
   1b2e0:	ldr	r1, [r0, #4]
   1b2e4:	ldr	r0, [r9, #4]
   1b2e8:	bl	10eec <mycore_strncmp@plt>
   1b2ec:	cmp	r0, #0
   1b2f0:	bne	1b270 <myhtml_node_clone@@Base+0x4c>
   1b2f4:	b	1b28c <myhtml_node_clone@@Base+0x68>

0001b2f8 <myhtml_node_clone_deep@@Base>:
   1b2f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b2fc:	subs	r5, r1, #0
   1b300:	mov	r9, r0
   1b304:	beq	1b324 <myhtml_node_clone_deep@@Base+0x2c>
   1b308:	ldr	r3, [r5, #40]	; 0x28
   1b30c:	cmp	r3, #0
   1b310:	beq	1b324 <myhtml_node_clone_deep@@Base+0x2c>
   1b314:	ldr	r3, [r3, #84]	; 0x54
   1b318:	cmp	r5, r3
   1b31c:	ldreq	r4, [r5, #20]
   1b320:	beq	1b328 <myhtml_node_clone_deep@@Base+0x30>
   1b324:	mov	r4, r5
   1b328:	mov	r1, r4
   1b32c:	mov	r0, r9
   1b330:	bl	10f34 <myhtml_node_clone@plt>
   1b334:	subs	r7, r0, #0
   1b338:	movne	r8, r7
   1b33c:	ldrne	r4, [r4, #20]
   1b340:	bne	1b388 <myhtml_node_clone_deep@@Base+0x90>
   1b344:	mov	r7, #0
   1b348:	mov	r0, r7
   1b34c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b350:	mov	r1, r4
   1b354:	mov	r0, r9
   1b358:	bl	10f34 <myhtml_node_clone@plt>
   1b35c:	subs	r6, r0, #0
   1b360:	beq	1b344 <myhtml_node_clone_deep@@Base+0x4c>
   1b364:	mov	r1, r6
   1b368:	mov	r0, r8
   1b36c:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1b370:	ldr	r3, [r4, #20]
   1b374:	cmp	r3, #0
   1b378:	moveq	r6, r8
   1b37c:	beq	1b39c <myhtml_node_clone_deep@@Base+0xa4>
   1b380:	mov	r8, r6
   1b384:	mov	r4, r3
   1b388:	cmp	r4, #0
   1b38c:	bne	1b350 <myhtml_node_clone_deep@@Base+0x58>
   1b390:	b	1b348 <myhtml_node_clone_deep@@Base+0x50>
   1b394:	ldr	r6, [r6, #24]
   1b398:	ldr	r4, [r4, #24]
   1b39c:	cmp	r4, r5
   1b3a0:	beq	1b348 <myhtml_node_clone_deep@@Base+0x50>
   1b3a4:	ldr	r3, [r4, #16]
   1b3a8:	cmp	r3, #0
   1b3ac:	beq	1b394 <myhtml_node_clone_deep@@Base+0x9c>
   1b3b0:	b	1b380 <myhtml_node_clone_deep@@Base+0x88>

0001b3b4 <myhtml_namespace_name_entry_by_name@@Base>:
   1b3b4:	add	r2, r0, r1
   1b3b8:	push	{r4, r5, r6, r7, r8, lr}
   1b3bc:	mov	r6, r0
   1b3c0:	ldrb	r2, [r2, #-1]
   1b3c4:	ldr	r3, [pc, #140]	; 1b458 <myhtml_namespace_name_entry_by_name@@Base+0xa4>
   1b3c8:	mov	r5, r1
   1b3cc:	add	r3, pc, r3
   1b3d0:	mov	r1, #19
   1b3d4:	ldrb	r0, [r3, r2]
   1b3d8:	ldrb	r2, [r6]
   1b3dc:	ldr	r7, [pc, #120]	; 1b45c <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   1b3e0:	mov	r8, #20
   1b3e4:	add	r7, pc, r7
   1b3e8:	ldrb	r3, [r3, r2]
   1b3ec:	smulbb	r0, r0, r3
   1b3f0:	mul	r0, r5, r0
   1b3f4:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   1b3f8:	add	r1, r1, #1
   1b3fc:	mul	r1, r8, r1
   1b400:	add	r4, r7, r1
   1b404:	ldr	r0, [r7, r1]
   1b408:	cmp	r0, #0
   1b40c:	beq	1b444 <myhtml_namespace_name_entry_by_name@@Base+0x90>
   1b410:	ldr	r3, [r4, #4]
   1b414:	cmp	r5, r3
   1b418:	bne	1b44c <myhtml_namespace_name_entry_by_name@@Base+0x98>
   1b41c:	mov	r2, r5
   1b420:	mov	r1, r6
   1b424:	bl	102a4 <mycore_strncasecmp@plt>
   1b428:	cmp	r0, #0
   1b42c:	bne	1b438 <myhtml_namespace_name_entry_by_name@@Base+0x84>
   1b430:	mov	r0, r4
   1b434:	pop	{r4, r5, r6, r7, r8, pc}
   1b438:	ldr	r1, [r4, #12]
   1b43c:	cmp	r1, #0
   1b440:	bne	1b3fc <myhtml_namespace_name_entry_by_name@@Base+0x48>
   1b444:	mov	r0, #0
   1b448:	pop	{r4, r5, r6, r7, r8, pc}
   1b44c:	bcc	1b444 <myhtml_namespace_name_entry_by_name@@Base+0x90>
   1b450:	ldr	r1, [r4, #12]
   1b454:	b	1b3fc <myhtml_namespace_name_entry_by_name@@Base+0x48>
   1b458:	andeq	fp, sp, ip, lsl #12
   1b45c:	andeq	r0, pc, r0, ror #30

0001b460 <myhtml_namespace_id_by_name@@Base>:
   1b460:	push	{r4, lr}
   1b464:	mov	r4, r2
   1b468:	bl	10208 <myhtml_namespace_name_entry_by_name@plt>
   1b46c:	cmp	r0, #0
   1b470:	popeq	{r4, pc}
   1b474:	cmp	r4, #0
   1b478:	ldrne	r3, [r0, #8]
   1b47c:	mov	r0, #1
   1b480:	strne	r3, [r4]
   1b484:	pop	{r4, pc}

0001b488 <myhtml_namespace_name_by_id@@Base>:
   1b488:	cmp	r0, #7
   1b48c:	push	{r4, r5, r6, lr}
   1b490:	bls	1b4a8 <myhtml_namespace_name_by_id@@Base+0x20>
   1b494:	cmp	r1, #0
   1b498:	mov	r4, #0
   1b49c:	strne	r4, [r1]
   1b4a0:	moveq	r4, r1
   1b4a4:	b	1b4d0 <myhtml_namespace_name_by_id@@Base+0x48>
   1b4a8:	ldr	r4, [pc, #40]	; 1b4d8 <myhtml_namespace_name_by_id@@Base+0x50>
   1b4ac:	cmp	r1, #0
   1b4b0:	add	r4, pc, r4
   1b4b4:	add	r4, r4, #256	; 0x100
   1b4b8:	add	r4, r4, r0, lsl #3
   1b4bc:	beq	1b4d0 <myhtml_namespace_name_by_id@@Base+0x48>
   1b4c0:	mov	r0, r4
   1b4c4:	mov	r5, r1
   1b4c8:	bl	10670 <strlen@plt>
   1b4cc:	str	r0, [r5]
   1b4d0:	mov	r0, r4
   1b4d4:	pop	{r4, r5, r6, pc}
   1b4d8:	andeq	fp, sp, r8, lsr #10

0001b4dc <myhtml_namespace_url_by_id@@Base>:
   1b4dc:	cmp	r0, #7
   1b4e0:	bls	1b4f8 <myhtml_namespace_url_by_id@@Base+0x1c>
   1b4e4:	cmp	r1, #0
   1b4e8:	mov	r0, #0
   1b4ec:	beq	1b530 <myhtml_namespace_url_by_id@@Base+0x54>
   1b4f0:	str	r0, [r1]
   1b4f4:	bx	lr
   1b4f8:	cmp	r1, #0
   1b4fc:	beq	1b518 <myhtml_namespace_url_by_id@@Base+0x3c>
   1b500:	ldr	r2, [pc, #48]	; 1b538 <myhtml_namespace_url_by_id@@Base+0x5c>
   1b504:	mov	r3, #12
   1b508:	add	r2, pc, r2
   1b50c:	mla	r3, r3, r0, r2
   1b510:	ldr	r3, [r3, #404]	; 0x194
   1b514:	str	r3, [r1]
   1b518:	ldr	r3, [pc, #28]	; 1b53c <myhtml_namespace_url_by_id@@Base+0x60>
   1b51c:	mov	r2, #12
   1b520:	add	r3, pc, r3
   1b524:	mla	r0, r2, r0, r3
   1b528:	ldr	r0, [r0, #400]	; 0x190
   1b52c:	bx	lr
   1b530:	mov	r0, r1
   1b534:	bx	lr
   1b538:	andeq	r0, pc, ip, lsr lr	; <UNPREDICTABLE>
   1b53c:	andeq	r0, pc, r4, lsr #28

0001b540 <myhtml_namespace_id_by_url@@Base>:
   1b540:	ldr	r3, [pc, #136]	; 1b5d0 <myhtml_namespace_id_by_url@@Base+0x90>
   1b544:	mov	r2, #0
   1b548:	add	r3, pc, r3
   1b54c:	add	r3, r3, #400	; 0x190
   1b550:	ldr	ip, [r3, #8]
   1b554:	cmp	ip, #0
   1b558:	bne	1b564 <myhtml_namespace_id_by_url@@Base+0x24>
   1b55c:	mov	r0, ip
   1b560:	bx	lr
   1b564:	add	r3, r3, #12
   1b568:	ldr	ip, [r3, #-8]
   1b56c:	cmp	ip, r1
   1b570:	bne	1b5c8 <myhtml_namespace_id_by_url@@Base+0x88>
   1b574:	ldr	ip, [pc, #88]	; 1b5d4 <myhtml_namespace_id_by_url@@Base+0x94>
   1b578:	mov	r3, #12
   1b57c:	add	ip, pc, ip
   1b580:	mla	r3, r3, r2, ip
   1b584:	add	r0, r0, r1
   1b588:	push	{lr}		; (str lr, [sp, #-4]!)
   1b58c:	ldr	ip, [r3, #400]	; 0x190
   1b590:	add	r3, ip, r1
   1b594:	cmp	r3, ip
   1b598:	bne	1b5b4 <myhtml_namespace_id_by_url@@Base+0x74>
   1b59c:	ldr	r1, [pc, #52]	; 1b5d8 <myhtml_namespace_id_by_url@@Base+0x98>
   1b5a0:	mov	r3, #12
   1b5a4:	add	r1, pc, r1
   1b5a8:	mla	r2, r3, r2, r1
   1b5ac:	ldr	r0, [r2, #408]	; 0x198
   1b5b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5b4:	ldrb	lr, [r3, #-1]!
   1b5b8:	ldrb	r1, [r0, #-1]!
   1b5bc:	cmp	lr, r1
   1b5c0:	addne	r2, r2, #1
   1b5c4:	b	1b594 <myhtml_namespace_id_by_url@@Base+0x54>
   1b5c8:	add	r2, r2, #1
   1b5cc:	b	1b550 <myhtml_namespace_id_by_url@@Base+0x10>
   1b5d0:	strdeq	r0, [pc], -ip
   1b5d4:	andeq	r0, pc, r8, asr #27
   1b5d8:	andeq	r0, pc, r0, lsr #27

0001b5dc <myhtml_string_append_with_preprocessing@@Base>:
   1b5dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5e0:	mov	r8, r3
   1b5e4:	ldr	r3, [r0, #8]
   1b5e8:	mov	r7, r1
   1b5ec:	add	r1, r2, #1
   1b5f0:	add	r1, r1, r3
   1b5f4:	ldr	r3, [r0, #4]
   1b5f8:	mov	r4, r0
   1b5fc:	cmp	r1, r3
   1b600:	mov	r6, r2
   1b604:	bcc	1b60c <myhtml_string_append_with_preprocessing@@Base+0x30>
   1b608:	bl	10964 <mycore_string_realloc@plt>
   1b60c:	ldr	r3, [r4]
   1b610:	mov	r5, #0
   1b614:	mvn	r9, #16
   1b618:	mvn	sl, #64	; 0x40
   1b61c:	mvn	fp, #66	; 0x42
   1b620:	cmp	r5, r6
   1b624:	bcc	1b63c <myhtml_string_append_with_preprocessing@@Base+0x60>
   1b628:	ldr	r2, [r4]
   1b62c:	ldr	r3, [r4, #8]
   1b630:	mov	r0, #0
   1b634:	strb	r0, [r2, r3]
   1b638:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b63c:	ldrb	r2, [r7, r5]
   1b640:	cmp	r2, #13
   1b644:	bne	1b6bc <myhtml_string_append_with_preprocessing@@Base+0xe0>
   1b648:	ldr	r2, [r4, #8]
   1b64c:	mov	r1, #10
   1b650:	strb	r1, [r3, r2]
   1b654:	add	r2, r5, #1
   1b658:	cmp	r6, r2
   1b65c:	bls	1b680 <myhtml_string_append_with_preprocessing@@Base+0xa4>
   1b660:	ldrb	r1, [r7, r2]
   1b664:	cmp	r1, #10
   1b668:	moveq	r5, r2
   1b66c:	ldr	r2, [r4, #8]
   1b670:	add	r5, r5, #1
   1b674:	add	r2, r2, #1
   1b678:	str	r2, [r4, #8]
   1b67c:	b	1b620 <myhtml_string_append_with_preprocessing@@Base+0x44>
   1b680:	ldr	r1, [r4, #8]
   1b684:	ldr	r2, [r4, #4]
   1b688:	add	r3, r1, #1
   1b68c:	cmp	r3, r2
   1b690:	str	r3, [r4, #8]
   1b694:	bcc	1b6a4 <myhtml_string_append_with_preprocessing@@Base+0xc8>
   1b698:	add	r1, r1, #3
   1b69c:	mov	r0, r4
   1b6a0:	bl	10964 <mycore_string_realloc@plt>
   1b6a4:	ldr	r2, [r4]
   1b6a8:	ldr	r3, [r4, #8]
   1b6ac:	mov	r1, #0
   1b6b0:	strb	r1, [r2, r3]
   1b6b4:	ldr	r0, [r4, #8]
   1b6b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6bc:	cmp	r2, #0
   1b6c0:	moveq	r1, r8
   1b6c4:	orrne	r1, r8, #1
   1b6c8:	cmp	r1, #0
   1b6cc:	ldrne	r1, [r4, #8]
   1b6d0:	strbne	r2, [r3, r1]
   1b6d4:	bne	1b66c <myhtml_string_append_with_preprocessing@@Base+0x90>
   1b6d8:	ldr	r1, [r4, #4]
   1b6dc:	mov	r0, r4
   1b6e0:	add	r1, r1, #5
   1b6e4:	bl	10964 <mycore_string_realloc@plt>
   1b6e8:	ldr	r2, [r4, #8]
   1b6ec:	ldr	r3, [r4]
   1b6f0:	strb	r9, [r3, r2]
   1b6f4:	ldr	r2, [r4, #8]
   1b6f8:	add	r2, r2, #1
   1b6fc:	str	r2, [r4, #8]
   1b700:	strb	sl, [r3, r2]
   1b704:	ldr	r1, [r4, #8]
   1b708:	add	r1, r1, #1
   1b70c:	str	r1, [r4, #8]
   1b710:	strb	fp, [r3, r1]
   1b714:	b	1b66c <myhtml_string_append_with_preprocessing@@Base+0x90>

0001b718 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1b718:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b71c:	mov	r8, r3
   1b720:	ldr	r3, [r0, #8]
   1b724:	mov	r7, r1
   1b728:	add	r1, r2, #1
   1b72c:	add	r1, r1, r3
   1b730:	ldr	r3, [r0, #4]
   1b734:	mov	r4, r0
   1b738:	cmp	r1, r3
   1b73c:	mov	r6, r2
   1b740:	bcc	1b748 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x30>
   1b744:	bl	10964 <mycore_string_realloc@plt>
   1b748:	ldr	r9, [pc, #268]	; 1b85c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x144>
   1b74c:	ldr	r3, [r4]
   1b750:	mov	r5, #0
   1b754:	add	r9, pc, r9
   1b758:	mvn	sl, #16
   1b75c:	mvn	fp, #64	; 0x40
   1b760:	cmp	r5, r6
   1b764:	bcc	1b77c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x64>
   1b768:	ldr	r2, [r4]
   1b76c:	ldr	r3, [r4, #8]
   1b770:	mov	r0, #0
   1b774:	strb	r0, [r2, r3]
   1b778:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b77c:	ldrb	r2, [r7, r5]
   1b780:	cmp	r2, #13
   1b784:	bne	1b7fc <myhtml_string_append_lowercase_with_preprocessing@@Base+0xe4>
   1b788:	ldr	r2, [r4, #8]
   1b78c:	mov	r1, #10
   1b790:	strb	r1, [r3, r2]
   1b794:	add	r2, r5, #1
   1b798:	cmp	r6, r2
   1b79c:	bls	1b7c0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa8>
   1b7a0:	ldrb	r1, [r7, r2]
   1b7a4:	cmp	r1, #10
   1b7a8:	moveq	r5, r2
   1b7ac:	ldr	r2, [r4, #8]
   1b7b0:	add	r5, r5, #1
   1b7b4:	add	r2, r2, #1
   1b7b8:	str	r2, [r4, #8]
   1b7bc:	b	1b760 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x48>
   1b7c0:	ldr	r1, [r4, #8]
   1b7c4:	ldr	r2, [r4, #4]
   1b7c8:	add	r3, r1, #1
   1b7cc:	cmp	r3, r2
   1b7d0:	str	r3, [r4, #8]
   1b7d4:	bcc	1b7e4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xcc>
   1b7d8:	add	r1, r1, #3
   1b7dc:	mov	r0, r4
   1b7e0:	bl	10964 <mycore_string_realloc@plt>
   1b7e4:	ldr	r2, [r4]
   1b7e8:	ldr	r3, [r4, #8]
   1b7ec:	mov	r1, #0
   1b7f0:	strb	r1, [r2, r3]
   1b7f4:	ldr	r0, [r4, #8]
   1b7f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7fc:	cmp	r2, #0
   1b800:	moveq	r1, r8
   1b804:	orrne	r1, r8, #1
   1b808:	cmp	r1, #0
   1b80c:	ldrne	r1, [r4, #8]
   1b810:	ldrbne	r2, [r9, r2]
   1b814:	bne	1b854 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x13c>
   1b818:	ldr	r1, [r4, #4]
   1b81c:	mov	r0, r4
   1b820:	add	r1, r1, #5
   1b824:	bl	10964 <mycore_string_realloc@plt>
   1b828:	ldr	r2, [r4, #8]
   1b82c:	ldr	r3, [r4]
   1b830:	strb	sl, [r3, r2]
   1b834:	ldr	r2, [r4, #8]
   1b838:	add	r2, r2, #1
   1b83c:	str	r2, [r4, #8]
   1b840:	strb	fp, [r3, r2]
   1b844:	ldr	r1, [r4, #8]
   1b848:	mvn	r2, #66	; 0x42
   1b84c:	add	r1, r1, #1
   1b850:	str	r1, [r4, #8]
   1b854:	strb	r2, [r3, r1]
   1b858:	b	1b7ac <myhtml_string_append_lowercase_with_preprocessing@@Base+0x94>
   1b85c:	muleq	sp, pc, r4	; <UNPREDICTABLE>

0001b860 <myhtml_string_before_append_any_preprocessing@@Base>:
   1b860:	cmp	r2, #0
   1b864:	cmpne	r3, #0
   1b868:	ldrbne	r0, [r1]
   1b86c:	subne	r0, r0, #10
   1b870:	clzne	r0, r0
   1b874:	lsrne	r0, r0, #5
   1b878:	moveq	r0, #0
   1b87c:	bx	lr

0001b880 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1b880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b884:	sub	sp, sp, #20
   1b888:	mov	r5, r3
   1b88c:	ldrb	r3, [sp, #60]	; 0x3c
   1b890:	mov	r6, r1
   1b894:	add	r1, r5, #1
   1b898:	str	r3, [sp, #8]
   1b89c:	ldr	r3, [r0, #8]
   1b8a0:	mov	r4, r0
   1b8a4:	add	r1, r1, r3
   1b8a8:	ldr	r3, [r0, #4]
   1b8ac:	mov	r7, r2
   1b8b0:	cmp	r1, r3
   1b8b4:	bcc	1b8bc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x3c>
   1b8b8:	bl	10964 <mycore_string_realloc@plt>
   1b8bc:	ldr	r0, [sp, #56]	; 0x38
   1b8c0:	bl	1082c <myencoding_get_function_by_id@plt>
   1b8c4:	mov	r8, #0
   1b8c8:	mvn	r9, #16
   1b8cc:	mvn	sl, #64	; 0x40
   1b8d0:	mvn	fp, #66	; 0x42
   1b8d4:	str	r0, [sp, #4]
   1b8d8:	cmp	r8, r5
   1b8dc:	bcc	1b910 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   1b8e0:	ldr	r1, [r4, #8]
   1b8e4:	ldr	r3, [r4, #4]
   1b8e8:	cmp	r1, r3
   1b8ec:	bcc	1b8fc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x7c>
   1b8f0:	add	r1, r1, #1
   1b8f4:	mov	r0, r4
   1b8f8:	bl	10964 <mycore_string_realloc@plt>
   1b8fc:	ldr	r2, [r4]
   1b900:	ldr	r3, [r4, #8]
   1b904:	mov	r0, #0
   1b908:	strb	r0, [r2, r3]
   1b90c:	b	1b9e8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1b910:	mov	r1, r6
   1b914:	ldrb	r0, [r7, r8]
   1b918:	ldr	r3, [sp, #4]
   1b91c:	blx	r3
   1b920:	cmp	r0, #0
   1b924:	bne	1b9a8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x128>
   1b928:	ldr	r1, [r4, #8]
   1b92c:	ldr	r2, [r4, #4]
   1b930:	add	r0, r1, #5
   1b934:	cmp	r0, r2
   1b938:	bcc	1b948 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1b93c:	add	r1, r1, #6
   1b940:	mov	r0, r4
   1b944:	bl	10964 <mycore_string_realloc@plt>
   1b948:	ldr	r2, [r4, #8]
   1b94c:	ldr	r1, [r4]
   1b950:	ldr	r0, [r6, #12]
   1b954:	add	r1, r1, r2
   1b958:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1b95c:	cmp	r0, #1
   1b960:	mov	r2, r0
   1b964:	bne	1b99c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1b968:	ldr	ip, [r4]
   1b96c:	ldr	r0, [r4, #8]
   1b970:	ldrb	r1, [ip, r0]
   1b974:	cmp	r1, #13
   1b978:	bne	1b9f0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x170>
   1b97c:	mov	r1, #10
   1b980:	strb	r1, [ip, r0]
   1b984:	add	r1, r8, #1
   1b988:	cmp	r5, r1
   1b98c:	bls	1b9b0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x130>
   1b990:	ldrb	r0, [r7, r1]
   1b994:	cmp	r0, #10
   1b998:	moveq	r8, r1
   1b99c:	ldr	r1, [r4, #8]
   1b9a0:	add	r2, r1, r2
   1b9a4:	str	r2, [r4, #8]
   1b9a8:	add	r8, r8, #1
   1b9ac:	b	1b8d8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1b9b0:	ldr	r1, [r4, #8]
   1b9b4:	ldr	r2, [r4, #4]
   1b9b8:	add	r3, r1, #1
   1b9bc:	cmp	r3, r2
   1b9c0:	str	r3, [r4, #8]
   1b9c4:	bcc	1b9d4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1b9c8:	add	r1, r1, #3
   1b9cc:	mov	r0, r4
   1b9d0:	bl	10964 <mycore_string_realloc@plt>
   1b9d4:	ldr	r2, [r4]
   1b9d8:	ldr	r3, [r4, #8]
   1b9dc:	mov	r1, #0
   1b9e0:	strb	r1, [r2, r3]
   1b9e4:	ldr	r0, [r4, #8]
   1b9e8:	add	sp, sp, #20
   1b9ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9f0:	ldr	r3, [sp, #8]
   1b9f4:	cmp	r1, #0
   1b9f8:	orrne	r3, r3, #1
   1b9fc:	cmp	r3, #0
   1ba00:	bne	1b99c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1ba04:	ldr	r1, [r4, #4]
   1ba08:	mov	r0, r4
   1ba0c:	add	r1, r1, #5
   1ba10:	str	r2, [sp, #12]
   1ba14:	bl	10964 <mycore_string_realloc@plt>
   1ba18:	ldr	r1, [r4, #8]
   1ba1c:	ldr	r0, [r4]
   1ba20:	ldr	r2, [sp, #12]
   1ba24:	strb	r9, [r0, r1]
   1ba28:	ldr	r1, [r4, #8]
   1ba2c:	ldr	r0, [r4]
   1ba30:	add	r1, r1, #1
   1ba34:	str	r1, [r4, #8]
   1ba38:	strb	sl, [r0, r1]
   1ba3c:	ldr	r1, [r4, #8]
   1ba40:	ldr	r0, [r4]
   1ba44:	add	r1, r1, #1
   1ba48:	str	r1, [r4, #8]
   1ba4c:	strb	fp, [r0, r1]
   1ba50:	b	1b99c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>

0001ba54 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1ba54:	push	{r4, r5, r6, r7, r8, lr}
   1ba58:	sub	sp, sp, #32
   1ba5c:	add	r4, sp, #8
   1ba60:	mov	r5, r0
   1ba64:	mov	r0, r4
   1ba68:	mov	r6, r1
   1ba6c:	mov	r7, r2
   1ba70:	mov	r8, r3
   1ba74:	bl	101c0 <myencoding_result_clean@plt>
   1ba78:	ldrb	r3, [sp, #56]	; 0x38
   1ba7c:	str	r8, [sp]
   1ba80:	mov	r2, r6
   1ba84:	str	r3, [sp, #4]
   1ba88:	mov	r1, r4
   1ba8c:	mov	r3, r7
   1ba90:	mov	r0, r5
   1ba94:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ba98:	add	sp, sp, #32
   1ba9c:	pop	{r4, r5, r6, r7, r8, pc}

0001baa0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1baa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1baa4:	sub	sp, sp, #20
   1baa8:	mov	r5, r3
   1baac:	ldrb	r3, [sp, #60]	; 0x3c
   1bab0:	mov	r6, r1
   1bab4:	add	r1, r5, #1
   1bab8:	str	r3, [sp, #8]
   1babc:	ldr	r3, [r0, #8]
   1bac0:	mov	r4, r0
   1bac4:	add	r1, r1, r3
   1bac8:	ldr	r3, [r0, #4]
   1bacc:	mov	r7, r2
   1bad0:	cmp	r1, r3
   1bad4:	bcc	1badc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x3c>
   1bad8:	bl	10964 <mycore_string_realloc@plt>
   1badc:	ldr	r0, [sp, #56]	; 0x38
   1bae0:	bl	1082c <myencoding_get_function_by_id@plt>
   1bae4:	mov	r8, #0
   1bae8:	mvn	r9, #16
   1baec:	mvn	sl, #64	; 0x40
   1baf0:	mvn	fp, #66	; 0x42
   1baf4:	str	r0, [sp, #4]
   1baf8:	cmp	r8, r5
   1bafc:	bcc	1bb30 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   1bb00:	ldr	r1, [r4, #8]
   1bb04:	ldr	r3, [r4, #4]
   1bb08:	cmp	r1, r3
   1bb0c:	bcc	1bb1c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x7c>
   1bb10:	add	r1, r1, #1
   1bb14:	mov	r0, r4
   1bb18:	bl	10964 <mycore_string_realloc@plt>
   1bb1c:	ldr	r2, [r4]
   1bb20:	ldr	r3, [r4, #8]
   1bb24:	mov	r0, #0
   1bb28:	strb	r0, [r2, r3]
   1bb2c:	b	1bc08 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1bb30:	mov	r1, r6
   1bb34:	ldrb	r0, [r7, r8]
   1bb38:	ldr	r3, [sp, #4]
   1bb3c:	blx	r3
   1bb40:	cmp	r0, #0
   1bb44:	bne	1bbc8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x128>
   1bb48:	ldr	r1, [r4, #8]
   1bb4c:	ldr	r2, [r4, #4]
   1bb50:	add	r0, r1, #5
   1bb54:	cmp	r0, r2
   1bb58:	bcc	1bb68 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1bb5c:	add	r1, r1, #6
   1bb60:	mov	r0, r4
   1bb64:	bl	10964 <mycore_string_realloc@plt>
   1bb68:	ldr	r2, [r4, #8]
   1bb6c:	ldr	r1, [r4]
   1bb70:	ldr	r0, [r6, #12]
   1bb74:	add	r1, r1, r2
   1bb78:	bl	fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1bb7c:	cmp	r0, #1
   1bb80:	mov	r2, r0
   1bb84:	bne	1bbbc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1bb88:	ldr	ip, [r4]
   1bb8c:	ldr	r0, [r4, #8]
   1bb90:	ldrb	r1, [ip, r0]
   1bb94:	cmp	r1, #13
   1bb98:	bne	1bc10 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x170>
   1bb9c:	mov	r1, #10
   1bba0:	strb	r1, [ip, r0]
   1bba4:	add	r1, r8, #1
   1bba8:	cmp	r5, r1
   1bbac:	bls	1bbd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x130>
   1bbb0:	ldrb	r0, [r7, r1]
   1bbb4:	cmp	r0, #10
   1bbb8:	moveq	r8, r1
   1bbbc:	ldr	r1, [r4, #8]
   1bbc0:	add	r2, r1, r2
   1bbc4:	str	r2, [r4, #8]
   1bbc8:	add	r8, r8, #1
   1bbcc:	b	1baf8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1bbd0:	ldr	r1, [r4, #8]
   1bbd4:	ldr	r2, [r4, #4]
   1bbd8:	add	r3, r1, #1
   1bbdc:	cmp	r3, r2
   1bbe0:	str	r3, [r4, #8]
   1bbe4:	bcc	1bbf4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1bbe8:	add	r1, r1, #3
   1bbec:	mov	r0, r4
   1bbf0:	bl	10964 <mycore_string_realloc@plt>
   1bbf4:	ldr	r2, [r4]
   1bbf8:	ldr	r3, [r4, #8]
   1bbfc:	mov	r1, #0
   1bc00:	strb	r1, [r2, r3]
   1bc04:	ldr	r0, [r4, #8]
   1bc08:	add	sp, sp, #20
   1bc0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc10:	ldr	r3, [sp, #8]
   1bc14:	cmp	r1, #0
   1bc18:	orrne	r3, r3, #1
   1bc1c:	cmp	r3, #0
   1bc20:	bne	1bbbc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1bc24:	ldr	r1, [r4, #4]
   1bc28:	mov	r0, r4
   1bc2c:	add	r1, r1, #5
   1bc30:	str	r2, [sp, #12]
   1bc34:	bl	10964 <mycore_string_realloc@plt>
   1bc38:	ldr	r1, [r4, #8]
   1bc3c:	ldr	r0, [r4]
   1bc40:	ldr	r2, [sp, #12]
   1bc44:	strb	r9, [r0, r1]
   1bc48:	ldr	r1, [r4, #8]
   1bc4c:	ldr	r0, [r4]
   1bc50:	add	r1, r1, #1
   1bc54:	str	r1, [r4, #8]
   1bc58:	strb	sl, [r0, r1]
   1bc5c:	ldr	r1, [r4, #8]
   1bc60:	ldr	r0, [r4]
   1bc64:	add	r1, r1, #1
   1bc68:	str	r1, [r4, #8]
   1bc6c:	strb	fp, [r0, r1]
   1bc70:	b	1bbbc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>

0001bc74 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1bc74:	push	{r4, r5, r6, r7, r8, lr}
   1bc78:	sub	sp, sp, #32
   1bc7c:	add	r4, sp, #8
   1bc80:	mov	r5, r0
   1bc84:	mov	r0, r4
   1bc88:	mov	r6, r1
   1bc8c:	mov	r7, r2
   1bc90:	mov	r8, r3
   1bc94:	bl	101c0 <myencoding_result_clean@plt>
   1bc98:	ldrb	r3, [sp, #56]	; 0x38
   1bc9c:	str	r8, [sp]
   1bca0:	mov	r2, r6
   1bca4:	str	r3, [sp, #4]
   1bca8:	mov	r1, r4
   1bcac:	mov	r3, r7
   1bcb0:	mov	r0, r5
   1bcb4:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1bcb8:	add	sp, sp, #32
   1bcbc:	pop	{r4, r5, r6, r7, r8, pc}

0001bcc0 <myhtml_parser_stream@@Base>:
   1bcc0:	ldr	r3, [r1]
   1bcc4:	ldr	r3, [r3, #184]	; 0xb8
   1bcc8:	tst	r3, #1
   1bccc:	bxne	lr
   1bcd0:	push	{r4, lr}
   1bcd4:	mov	r4, r1
   1bcd8:	ldm	r4, {r0, r1}
   1bcdc:	bl	fe9c <myhtml_rules_tree_dispatcher@plt>
   1bce0:	cmp	r0, #0
   1bce4:	bne	1bcd8 <myhtml_parser_stream@@Base+0x18>
   1bce8:	pop	{r4, pc}

0001bcec <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1bcec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bcf0:	sub	sp, sp, #20
   1bcf4:	mov	fp, r0
   1bcf8:	mov	r6, r1
   1bcfc:	ldr	r0, [r0, #80]	; 0x50
   1bd00:	mov	r1, r3
   1bd04:	mov	r4, r3
   1bd08:	mov	r9, r2
   1bd0c:	ldr	r5, [sp, #56]	; 0x38
   1bd10:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1bd14:	ldr	r1, [r0, #12]
   1bd18:	ldr	r3, [r0, #8]
   1bd1c:	sub	r4, r4, r1
   1bd20:	add	r2, r4, r5
   1bd24:	cmp	r2, r3
   1bd28:	mov	r7, r0
   1bd2c:	bhi	1bd6c <myhtml_parser_token_data_to_string_lowercase@@Base+0x80>
   1bd30:	ldr	r3, [fp, #200]	; 0xc8
   1bd34:	ldr	r1, [r0]
   1bd38:	cmp	r3, #0
   1bd3c:	moveq	r2, r5
   1bd40:	ldrb	r3, [r9, #61]	; 0x3d
   1bd44:	beq	1be54 <myhtml_parser_token_data_to_string_lowercase@@Base+0x168>
   1bd48:	str	r3, [sp, #4]
   1bd4c:	ldr	r3, [r9, #4]
   1bd50:	str	r3, [sp]
   1bd54:	mov	r3, r5
   1bd58:	add	r2, r1, r4
   1bd5c:	mov	r0, r6
   1bd60:	add	r1, r9, #8
   1bd64:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1bd68:	b	1bdec <myhtml_parser_token_data_to_string_lowercase@@Base+0x100>
   1bd6c:	mov	sl, #0
   1bd70:	add	r3, r9, #8
   1bd74:	str	r3, [sp, #12]
   1bd78:	ldr	r8, [r7, #8]
   1bd7c:	add	r3, r5, r4
   1bd80:	cmp	r3, r8
   1bd84:	ldr	r1, [r7]
   1bd88:	bls	1be1c <myhtml_parser_token_data_to_string_lowercase@@Base+0x130>
   1bd8c:	sub	r8, r8, r4
   1bd90:	mov	r3, sl
   1bd94:	mov	r2, r8
   1bd98:	add	r1, r1, r4
   1bd9c:	mov	r0, r6
   1bda0:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1bda4:	cmp	r8, #0
   1bda8:	sub	r5, r5, r8
   1bdac:	beq	1bddc <myhtml_parser_token_data_to_string_lowercase@@Base+0xf0>
   1bdb0:	ldr	r3, [fp, #200]	; 0xc8
   1bdb4:	ldr	r1, [r7]
   1bdb8:	cmp	r3, #0
   1bdbc:	sub	r2, r8, r0
   1bdc0:	ldrb	r3, [r9, #61]	; 0x3d
   1bdc4:	add	r4, r0, r4
   1bdc8:	bne	1bdf8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x10c>
   1bdcc:	add	r1, r1, r4
   1bdd0:	mov	r0, r6
   1bdd4:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1bdd8:	mov	sl, r0
   1bddc:	ldr	r7, [r7, #20]
   1bde0:	mov	r4, #0
   1bde4:	cmp	r7, r4
   1bde8:	bne	1bd78 <myhtml_parser_token_data_to_string_lowercase@@Base+0x8c>
   1bdec:	ldr	r0, [r6, #8]
   1bdf0:	add	sp, sp, #20
   1bdf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdf8:	str	r3, [sp, #4]
   1bdfc:	ldr	r3, [r9, #4]
   1be00:	mov	r0, r6
   1be04:	str	r3, [sp]
   1be08:	mov	r3, r2
   1be0c:	add	r2, r1, r4
   1be10:	ldr	r1, [sp, #12]
   1be14:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1be18:	b	1bdd8 <myhtml_parser_token_data_to_string_lowercase@@Base+0xec>
   1be1c:	mov	r3, sl
   1be20:	mov	r2, r5
   1be24:	add	r1, r1, r4
   1be28:	mov	r0, r6
   1be2c:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1be30:	cmp	r5, #0
   1be34:	beq	1bdec <myhtml_parser_token_data_to_string_lowercase@@Base+0x100>
   1be38:	ldr	r3, [fp, #200]	; 0xc8
   1be3c:	ldr	r1, [r7]
   1be40:	cmp	r3, #0
   1be44:	sub	r2, r5, r0
   1be48:	ldrb	r3, [r9, #61]	; 0x3d
   1be4c:	add	r4, r0, r4
   1be50:	bne	1be64 <myhtml_parser_token_data_to_string_lowercase@@Base+0x178>
   1be54:	add	r1, r1, r4
   1be58:	mov	r0, r6
   1be5c:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1be60:	b	1bdec <myhtml_parser_token_data_to_string_lowercase@@Base+0x100>
   1be64:	str	r3, [sp, #4]
   1be68:	ldr	r3, [r9, #4]
   1be6c:	str	r3, [sp]
   1be70:	mov	r3, r2
   1be74:	b	1bd58 <myhtml_parser_token_data_to_string_lowercase@@Base+0x6c>

0001be78 <myhtml_parser_token_data_to_string@@Base>:
   1be78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be7c:	sub	sp, sp, #20
   1be80:	mov	fp, r0
   1be84:	mov	r6, r1
   1be88:	ldr	r0, [r0, #80]	; 0x50
   1be8c:	mov	r1, r3
   1be90:	mov	r4, r3
   1be94:	mov	r9, r2
   1be98:	ldr	r5, [sp, #56]	; 0x38
   1be9c:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1bea0:	ldr	r1, [r0, #12]
   1bea4:	ldr	r3, [r0, #8]
   1bea8:	sub	r4, r4, r1
   1beac:	add	r2, r4, r5
   1beb0:	cmp	r2, r3
   1beb4:	mov	r7, r0
   1beb8:	bhi	1bef8 <myhtml_parser_token_data_to_string@@Base+0x80>
   1bebc:	ldr	r3, [fp, #200]	; 0xc8
   1bec0:	ldr	r1, [r0]
   1bec4:	cmp	r3, #0
   1bec8:	moveq	r2, r5
   1becc:	ldrb	r3, [r9, #61]	; 0x3d
   1bed0:	beq	1bfe0 <myhtml_parser_token_data_to_string@@Base+0x168>
   1bed4:	str	r3, [sp, #4]
   1bed8:	ldr	r3, [r9, #4]
   1bedc:	str	r3, [sp]
   1bee0:	mov	r3, r5
   1bee4:	add	r2, r1, r4
   1bee8:	mov	r0, r6
   1beec:	add	r1, r9, #8
   1bef0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1bef4:	b	1bf78 <myhtml_parser_token_data_to_string@@Base+0x100>
   1bef8:	mov	sl, #0
   1befc:	add	r3, r9, #8
   1bf00:	str	r3, [sp, #12]
   1bf04:	ldr	r8, [r7, #8]
   1bf08:	add	r3, r5, r4
   1bf0c:	cmp	r3, r8
   1bf10:	ldr	r1, [r7]
   1bf14:	bls	1bfa8 <myhtml_parser_token_data_to_string@@Base+0x130>
   1bf18:	sub	r8, r8, r4
   1bf1c:	mov	r3, sl
   1bf20:	mov	r2, r8
   1bf24:	add	r1, r1, r4
   1bf28:	mov	r0, r6
   1bf2c:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1bf30:	cmp	r8, #0
   1bf34:	sub	r5, r5, r8
   1bf38:	beq	1bf68 <myhtml_parser_token_data_to_string@@Base+0xf0>
   1bf3c:	ldr	r3, [fp, #200]	; 0xc8
   1bf40:	ldr	r1, [r7]
   1bf44:	cmp	r3, #0
   1bf48:	sub	r2, r8, r0
   1bf4c:	ldrb	r3, [r9, #61]	; 0x3d
   1bf50:	add	r4, r0, r4
   1bf54:	bne	1bf84 <myhtml_parser_token_data_to_string@@Base+0x10c>
   1bf58:	add	r1, r1, r4
   1bf5c:	mov	r0, r6
   1bf60:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1bf64:	mov	sl, r0
   1bf68:	ldr	r7, [r7, #20]
   1bf6c:	mov	r4, #0
   1bf70:	cmp	r7, r4
   1bf74:	bne	1bf04 <myhtml_parser_token_data_to_string@@Base+0x8c>
   1bf78:	ldr	r0, [r6, #8]
   1bf7c:	add	sp, sp, #20
   1bf80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf84:	str	r3, [sp, #4]
   1bf88:	ldr	r3, [r9, #4]
   1bf8c:	mov	r0, r6
   1bf90:	str	r3, [sp]
   1bf94:	mov	r3, r2
   1bf98:	add	r2, r1, r4
   1bf9c:	ldr	r1, [sp, #12]
   1bfa0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1bfa4:	b	1bf64 <myhtml_parser_token_data_to_string@@Base+0xec>
   1bfa8:	mov	r3, sl
   1bfac:	mov	r2, r5
   1bfb0:	add	r1, r1, r4
   1bfb4:	mov	r0, r6
   1bfb8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1bfbc:	cmp	r5, #0
   1bfc0:	beq	1bf78 <myhtml_parser_token_data_to_string@@Base+0x100>
   1bfc4:	ldr	r3, [fp, #200]	; 0xc8
   1bfc8:	ldr	r1, [r7]
   1bfcc:	cmp	r3, #0
   1bfd0:	sub	r2, r5, r0
   1bfd4:	ldrb	r3, [r9, #61]	; 0x3d
   1bfd8:	add	r4, r0, r4
   1bfdc:	bne	1bff0 <myhtml_parser_token_data_to_string@@Base+0x178>
   1bfe0:	add	r1, r1, r4
   1bfe4:	mov	r0, r6
   1bfe8:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1bfec:	b	1bf78 <myhtml_parser_token_data_to_string@@Base+0x100>
   1bff0:	str	r3, [sp, #4]
   1bff4:	ldr	r3, [r9, #4]
   1bff8:	str	r3, [sp]
   1bffc:	mov	r3, r2
   1c000:	b	1bee4 <myhtml_parser_token_data_to_string@@Base+0x6c>

0001c004 <myhtml_parser_token_data_to_string_charef@@Base>:
   1c004:	push	{r4, r5, r6, r7, r8, lr}
   1c008:	mov	r6, r1
   1c00c:	ldr	r0, [r0, #80]	; 0x50
   1c010:	mov	r1, r3
   1c014:	mov	r4, r3
   1c018:	mov	r8, r2
   1c01c:	ldr	r7, [sp, #24]
   1c020:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1c024:	ldr	r1, [r0, #12]
   1c028:	ldr	r3, [r0, #8]
   1c02c:	sub	r1, r4, r1
   1c030:	add	r2, r1, r7
   1c034:	cmp	r2, r3
   1c038:	mov	r5, r0
   1c03c:	ldrls	r2, [r0]
   1c040:	bls	1c098 <myhtml_parser_token_data_to_string_charef@@Base+0x94>
   1c044:	mov	r4, #0
   1c048:	ldr	r3, [r5, #8]
   1c04c:	add	r2, r7, r1
   1c050:	cmp	r2, r3
   1c054:	ldr	r2, [r5]
   1c058:	bls	1c098 <myhtml_parser_token_data_to_string_charef@@Base+0x94>
   1c05c:	sub	r3, r3, r1
   1c060:	add	r2, r2, r1
   1c064:	mov	r0, r8
   1c068:	mov	r1, r6
   1c06c:	sub	r7, r7, r3
   1c070:	bl	10754 <myhtml_data_process@plt>
   1c074:	ldr	r5, [r5, #20]
   1c078:	mov	r1, r4
   1c07c:	cmp	r5, #0
   1c080:	bne	1c048 <myhtml_parser_token_data_to_string_charef@@Base+0x44>
   1c084:	mov	r0, r8
   1c088:	mov	r1, r6
   1c08c:	bl	10928 <myhtml_data_process_end@plt>
   1c090:	ldr	r0, [r6, #8]
   1c094:	pop	{r4, r5, r6, r7, r8, pc}
   1c098:	add	r2, r2, r1
   1c09c:	mov	r3, r7
   1c0a0:	mov	r1, r6
   1c0a4:	mov	r0, r8
   1c0a8:	bl	10754 <myhtml_data_process@plt>
   1c0ac:	b	1c084 <myhtml_parser_token_data_to_string_charef@@Base+0x80>

0001c0b0 <myhtml_parser_worker@@Base>:
   1c0b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c0b4:	sub	sp, sp, #72	; 0x48
   1c0b8:	ldm	r1, {r4, r5}
   1c0bc:	ldr	r3, [r4, #184]	; 0xb8
   1c0c0:	tst	r3, #3
   1c0c4:	ldr	r3, [r4, #220]	; 0xdc
   1c0c8:	beq	1c128 <myhtml_parser_worker@@Base+0x78>
   1c0cc:	ldr	r2, [r4, #184]	; 0xb8
   1c0d0:	tst	r2, #2
   1c0d4:	beq	1c128 <myhtml_parser_worker@@Base+0x78>
   1c0d8:	cmp	r3, #0
   1c0dc:	beq	1c0f4 <myhtml_parser_worker@@Base+0x44>
   1c0e0:	ldr	r2, [r4, #228]	; 0xe4
   1c0e4:	mov	r1, r5
   1c0e8:	mov	r0, r4
   1c0ec:	blx	r3
   1c0f0:	str	r0, [r4, #228]	; 0xe4
   1c0f4:	ldr	r3, [r5, #48]	; 0x30
   1c0f8:	orr	r3, r3, #4
   1c0fc:	str	r3, [r5, #48]	; 0x30
   1c100:	ldr	r3, [r4, #224]	; 0xe0
   1c104:	cmp	r3, #0
   1c108:	beq	1c120 <myhtml_parser_worker@@Base+0x70>
   1c10c:	ldr	r2, [r4, #232]	; 0xe8
   1c110:	mov	r1, r5
   1c114:	mov	r0, r4
   1c118:	blx	r3
   1c11c:	str	r0, [r4, #232]	; 0xe8
   1c120:	add	sp, sp, #72	; 0x48
   1c124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c128:	ldr	r2, [r4]
   1c12c:	ldr	r1, [r2, #4]
   1c130:	ldr	r2, [r4, #144]	; 0x90
   1c134:	cmp	r1, #0
   1c138:	ldrne	r1, [r1, #12]
   1c13c:	addne	r0, r0, r1
   1c140:	cmp	r3, #0
   1c144:	ldr	r7, [r2, r0, lsl #2]
   1c148:	beq	1c160 <myhtml_parser_worker@@Base+0xb0>
   1c14c:	ldr	r2, [r4, #228]	; 0xe4
   1c150:	mov	r1, r5
   1c154:	mov	r0, r4
   1c158:	blx	r3
   1c15c:	str	r0, [r4, #228]	; 0xe4
   1c160:	mov	r6, r5
   1c164:	ldr	r3, [r6], #4
   1c168:	sub	r3, r3, #1
   1c16c:	cmp	r3, #1
   1c170:	bhi	1c214 <myhtml_parser_worker@@Base+0x164>
   1c174:	ldr	r3, [r5, #28]
   1c178:	mov	r2, r6
   1c17c:	mov	r1, r7
   1c180:	add	r3, r3, #1
   1c184:	ldr	r0, [r4, #4]
   1c188:	bl	10610 <mycore_string_init@plt>
   1c18c:	add	r7, sp, #8
   1c190:	mov	r3, #0
   1c194:	str	r3, [r5, #40]	; 0x28
   1c198:	str	r3, [r5, #44]	; 0x2c
   1c19c:	mov	r0, r7
   1c1a0:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1c1a4:	ldr	r3, [r4, #200]	; 0xc8
   1c1a8:	str	r3, [sp, #12]
   1c1ac:	ldr	r3, [r5, #48]	; 0x30
   1c1b0:	tst	r3, #512	; 0x200
   1c1b4:	movne	r2, #1
   1c1b8:	ldr	r3, [r5, #28]
   1c1bc:	strbne	r2, [sp, #69]	; 0x45
   1c1c0:	bne	1c1dc <myhtml_parser_worker@@Base+0x12c>
   1c1c4:	ldr	r2, [r5, #48]	; 0x30
   1c1c8:	tst	r2, #16
   1c1cc:	bne	1c1dc <myhtml_parser_worker@@Base+0x12c>
   1c1d0:	ldr	r2, [r5, #48]	; 0x30
   1c1d4:	tst	r2, #256	; 0x100
   1c1d8:	beq	1c1f8 <myhtml_parser_worker@@Base+0x148>
   1c1dc:	str	r3, [sp]
   1c1e0:	mov	r2, r7
   1c1e4:	ldr	r3, [r5, #24]
   1c1e8:	mov	r1, r6
   1c1ec:	mov	r0, r4
   1c1f0:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1c1f4:	b	1c0f4 <myhtml_parser_worker@@Base+0x44>
   1c1f8:	str	r3, [sp]
   1c1fc:	mov	r2, r7
   1c200:	ldr	r3, [r5, #24]
   1c204:	mov	r1, r6
   1c208:	mov	r0, r4
   1c20c:	bl	10acc <myhtml_parser_token_data_to_string@plt>
   1c210:	b	1c0f4 <myhtml_parser_worker@@Base+0x44>
   1c214:	ldr	r3, [r5, #40]	; 0x28
   1c218:	cmp	r3, #0
   1c21c:	beq	1c308 <myhtml_parser_worker@@Base+0x258>
   1c220:	mov	r0, r6
   1c224:	bl	11090 <mycore_string_clean_all@plt>
   1c228:	ldr	r6, [r5, #40]	; 0x28
   1c22c:	add	r8, sp, #8
   1c230:	mov	sl, #1
   1c234:	cmp	r6, #0
   1c238:	beq	1c0f4 <myhtml_parser_worker@@Base+0x44>
   1c23c:	ldr	r3, [r6, #52]	; 0x34
   1c240:	add	r9, r6, #8
   1c244:	cmp	r3, #0
   1c248:	beq	1c2f0 <myhtml_parser_worker@@Base+0x240>
   1c24c:	mov	r0, r8
   1c250:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1c254:	ldr	r3, [r4, #200]	; 0xc8
   1c258:	mov	r2, r9
   1c25c:	str	r3, [sp, #12]
   1c260:	ldr	r3, [r6, #52]	; 0x34
   1c264:	mov	r1, r7
   1c268:	add	r3, r3, #1
   1c26c:	ldr	r0, [r4, #4]
   1c270:	bl	10610 <mycore_string_init@plt>
   1c274:	ldr	r3, [r6, #52]	; 0x34
   1c278:	mov	r2, r8
   1c27c:	str	r3, [sp]
   1c280:	mov	r1, r9
   1c284:	ldr	r3, [r6, #48]	; 0x30
   1c288:	mov	r0, r4
   1c28c:	bl	1100c <myhtml_parser_token_data_to_string_lowercase@plt>
   1c290:	ldr	r3, [r6, #60]	; 0x3c
   1c294:	add	r9, r6, #28
   1c298:	cmp	r3, #0
   1c29c:	beq	1c2fc <myhtml_parser_worker@@Base+0x24c>
   1c2a0:	mov	r0, r8
   1c2a4:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1c2a8:	ldr	r3, [r4, #200]	; 0xc8
   1c2ac:	mov	r2, r9
   1c2b0:	str	r3, [sp, #12]
   1c2b4:	ldr	r3, [r6, #60]	; 0x3c
   1c2b8:	mov	r1, r7
   1c2bc:	add	r3, r3, #1
   1c2c0:	ldr	r0, [r4, #4]
   1c2c4:	strb	sl, [sp, #68]	; 0x44
   1c2c8:	bl	10610 <mycore_string_init@plt>
   1c2cc:	ldr	r3, [r6, #60]	; 0x3c
   1c2d0:	mov	r2, r8
   1c2d4:	str	r3, [sp]
   1c2d8:	mov	r1, r9
   1c2dc:	ldr	r3, [r6, #56]	; 0x38
   1c2e0:	mov	r0, r4
   1c2e4:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1c2e8:	ldr	r6, [r6]
   1c2ec:	b	1c234 <myhtml_parser_worker@@Base+0x184>
   1c2f0:	mov	r0, r9
   1c2f4:	bl	11090 <mycore_string_clean_all@plt>
   1c2f8:	b	1c290 <myhtml_parser_worker@@Base+0x1e0>
   1c2fc:	mov	r0, r9
   1c300:	bl	11090 <mycore_string_clean_all@plt>
   1c304:	b	1c2e8 <myhtml_parser_worker@@Base+0x238>
   1c308:	str	r3, [r5, #44]	; 0x2c
   1c30c:	mov	r0, r6
   1c310:	bl	11090 <mycore_string_clean_all@plt>
   1c314:	b	1c0f4 <myhtml_parser_worker@@Base+0x44>

0001c318 <myhtml_parser_worker_stream@@Base>:
   1c318:	push	{r4, r5, r6, lr}
   1c31c:	mov	r4, r0
   1c320:	mov	r5, r1
   1c324:	bl	fd7c <myhtml_parser_worker@plt>
   1c328:	mov	r1, r5
   1c32c:	mov	r0, r4
   1c330:	pop	{r4, r5, r6, lr}
   1c334:	b	10ff4 <myhtml_parser_stream@plt>

0001c338 <myhtml_insertion_mode_text@@Base>:
   1c338:	ldr	r3, [r1, #48]	; 0x30
   1c33c:	push	{r4, r5, r6, lr}
   1c340:	ands	r4, r3, #1
   1c344:	mov	r5, r0
   1c348:	ldr	r3, [r1]
   1c34c:	beq	1c364 <myhtml_insertion_mode_text@@Base+0x2c>
   1c350:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1c354:	ldr	r3, [r5, #172]	; 0xac
   1c358:	str	r3, [r5, #168]	; 0xa8
   1c35c:	mov	r0, #0
   1c360:	pop	{r4, r5, r6, pc}
   1c364:	cmp	r3, #251	; 0xfb
   1c368:	bne	1c39c <myhtml_insertion_mode_text@@Base+0x64>
   1c36c:	bl	10628 <myhtml_tree_current_node@plt>
   1c370:	ldr	r3, [r0, #4]
   1c374:	cmp	r3, #112	; 0x70
   1c378:	ldreq	r3, [r0]
   1c37c:	orreq	r3, r3, #8
   1c380:	streq	r3, [r0]
   1c384:	mov	r0, r5
   1c388:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1c38c:	ldr	r3, [r5, #172]	; 0xac
   1c390:	mov	r0, #1
   1c394:	str	r3, [r5, #168]	; 0xa8
   1c398:	pop	{r4, r5, r6, pc}
   1c39c:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1c3a0:	b	1c35c <myhtml_insertion_mode_text@@Base+0x24>

0001c3a4 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1c3a4:	push	{r4, lr}
   1c3a8:	mov	r4, r1
   1c3ac:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c3b0:	add	r0, r4, #4
   1c3b4:	pop	{r4, lr}
   1c3b8:	b	104b4 <mycore_string_crop_whitespace_from_begin@plt>

0001c3bc <myhtml_insertion_mode_initial@@Base>:
   1c3bc:	push	{r4, r5, r6, lr}
   1c3c0:	mov	r5, r0
   1c3c4:	ldr	r4, [r1]
   1c3c8:	cmp	r4, #2
   1c3cc:	beq	1c408 <myhtml_insertion_mode_initial@@Base+0x4c>
   1c3d0:	cmp	r4, #3
   1c3d4:	mov	r6, r1
   1c3d8:	beq	1c418 <myhtml_insertion_mode_initial@@Base+0x5c>
   1c3dc:	cmp	r4, #1
   1c3e0:	bne	1c480 <myhtml_insertion_mode_initial@@Base+0xc4>
   1c3e4:	ldr	r3, [r1, #48]	; 0x30
   1c3e8:	tst	r3, #8
   1c3ec:	bne	1c410 <myhtml_insertion_mode_initial@@Base+0x54>
   1c3f0:	ldr	r0, [r0, #8]
   1c3f4:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1c3f8:	str	r4, [r5, #176]	; 0xb0
   1c3fc:	str	r4, [r5, #168]	; 0xa8
   1c400:	mov	r0, r4
   1c404:	pop	{r4, r5, r6, pc}
   1c408:	ldr	r2, [r0, #84]	; 0x54
   1c40c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1c410:	mov	r0, #0
   1c414:	pop	{r4, r5, r6, pc}
   1c418:	ldr	r0, [r0, #8]
   1c41c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c420:	add	r2, r5, #108	; 0x6c
   1c424:	mov	r1, r6
   1c428:	ldr	r0, [r5, #8]
   1c42c:	bl	fc20 <myhtml_token_release_and_check_doctype_attributes@plt>
   1c430:	ldr	r3, [r5, #184]	; 0xb8
   1c434:	tst	r3, #8
   1c438:	bne	1c448 <myhtml_insertion_mode_initial@@Base+0x8c>
   1c43c:	mov	r1, r6
   1c440:	mov	r0, r5
   1c444:	bl	10e2c <myhtml_tree_node_insert_doctype@plt>
   1c448:	ldrb	r3, [r5, #108]	; 0x6c
   1c44c:	cmp	r3, #0
   1c450:	bne	1c474 <myhtml_insertion_mode_initial@@Base+0xb8>
   1c454:	ldr	r3, [r5, #116]	; 0x74
   1c458:	cmp	r3, #0
   1c45c:	beq	1c46c <myhtml_insertion_mode_initial@@Base+0xb0>
   1c460:	ldr	r3, [r5, #120]	; 0x78
   1c464:	cmp	r3, #0
   1c468:	bne	1c474 <myhtml_insertion_mode_initial@@Base+0xb8>
   1c46c:	mov	r3, #1
   1c470:	str	r3, [r5, #176]	; 0xb0
   1c474:	mov	r3, #1
   1c478:	str	r3, [r5, #168]	; 0xa8
   1c47c:	b	1c410 <myhtml_insertion_mode_initial@@Base+0x54>
   1c480:	mov	r0, #1
   1c484:	str	r0, [r5, #176]	; 0xb0
   1c488:	str	r0, [r5, #168]	; 0xa8
   1c48c:	pop	{r4, r5, r6, pc}

0001c490 <myhtml_insertion_mode_before_html@@Base>:
   1c490:	push	{r4, r5, r6, r7, r8, lr}
   1c494:	mov	r6, r0
   1c498:	ldr	r4, [r1, #48]	; 0x30
   1c49c:	ldr	r5, [r1]
   1c4a0:	ands	r4, r4, #1
   1c4a4:	beq	1c4f0 <myhtml_insertion_mode_before_html@@Base+0x60>
   1c4a8:	cmp	r5, #61	; 0x3d
   1c4ac:	beq	1c4c0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c4b0:	bhi	1c4e0 <myhtml_insertion_mode_before_html@@Base+0x50>
   1c4b4:	sub	r0, r5, #23
   1c4b8:	cmp	r0, #1
   1c4bc:	bhi	1c4e8 <myhtml_insertion_mode_before_html@@Base+0x58>
   1c4c0:	mov	r2, #1
   1c4c4:	mov	r1, #0
   1c4c8:	mov	r0, r6
   1c4cc:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1c4d0:	mov	r3, #2
   1c4d4:	str	r3, [r6, #168]	; 0xa8
   1c4d8:	mov	r4, #1
   1c4dc:	b	1c548 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1c4e0:	cmp	r5, #65	; 0x41
   1c4e4:	beq	1c4c0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c4e8:	mov	r4, #0
   1c4ec:	b	1c548 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1c4f0:	cmp	r5, #2
   1c4f4:	beq	1c540 <myhtml_insertion_mode_before_html@@Base+0xb0>
   1c4f8:	bhi	1c51c <myhtml_insertion_mode_before_html@@Base+0x8c>
   1c4fc:	cmp	r5, #1
   1c500:	bne	1c4c0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c504:	ldr	r3, [r1, #48]	; 0x30
   1c508:	ands	r7, r3, #8
   1c50c:	bne	1c548 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1c510:	ldr	r0, [r0, #8]
   1c514:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1c518:	b	1c4c0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c51c:	cmp	r5, #3
   1c520:	beq	1c548 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1c524:	cmp	r5, #65	; 0x41
   1c528:	bne	1c4c0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c52c:	mov	r2, #1
   1c530:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1c534:	mov	r3, #2
   1c538:	str	r3, [r6, #168]	; 0xa8
   1c53c:	b	1c548 <myhtml_insertion_mode_before_html@@Base+0xb8>
   1c540:	ldr	r2, [r0, #84]	; 0x54
   1c544:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1c548:	mov	r0, r4
   1c54c:	pop	{r4, r5, r6, r7, r8, pc}

0001c550 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1c550:	push	{r4, r5, r6, r7, r8, lr}
   1c554:	mov	r4, r1
   1c558:	mov	r7, r0
   1c55c:	ldr	r0, [r0, #8]
   1c560:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c564:	add	r0, r4, #4
   1c568:	bl	10de4 <mycore_string_whitespace_from_begin@plt>
   1c56c:	subs	r6, r0, #0
   1c570:	moveq	r5, r6
   1c574:	beq	1c5dc <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1c578:	ldr	r1, [r7, #40]	; 0x28
   1c57c:	ldr	r0, [r7, #8]
   1c580:	bl	10a0c <myhtml_token_node_create@plt>
   1c584:	subs	r5, r0, #0
   1c588:	beq	1c5dc <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1c58c:	add	r8, r5, #4
   1c590:	add	r3, r6, #2
   1c594:	mov	r2, r8
   1c598:	ldr	r1, [r7, #52]	; 0x34
   1c59c:	ldr	r0, [r7, #4]
   1c5a0:	bl	10610 <mycore_string_init@plt>
   1c5a4:	mov	r2, r6
   1c5a8:	ldr	r1, [r4, #4]
   1c5ac:	mov	r0, r8
   1c5b0:	bl	108d4 <mycore_string_append@plt>
   1c5b4:	ldr	r3, [r5, #48]	; 0x30
   1c5b8:	mov	r1, r6
   1c5bc:	orr	r3, r3, #4
   1c5c0:	str	r3, [r5, #48]	; 0x30
   1c5c4:	ldr	r0, [r4, #4]
   1c5c8:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   1c5cc:	ldr	r3, [r4, #12]
   1c5d0:	sub	r6, r3, r6
   1c5d4:	str	r6, [r4, #12]
   1c5d8:	str	r0, [r4, #4]
   1c5dc:	mov	r0, r5
   1c5e0:	pop	{r4, r5, r6, r7, r8, pc}

0001c5e4 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1c5e4:	push	{r4, r5, r6, r7, r8, lr}
   1c5e8:	mov	r5, r1
   1c5ec:	ldr	r0, [r0, #8]
   1c5f0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c5f4:	mov	r3, #0
   1c5f8:	ldr	r6, [r5, #12]
   1c5fc:	mov	r7, r3
   1c600:	cmp	r3, r6
   1c604:	bcc	1c60c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   1c608:	pop	{r4, r5, r6, r7, r8, pc}
   1c60c:	ldr	r0, [r5, #4]
   1c610:	ldrb	r2, [r0, r3]
   1c614:	cmp	r2, #0
   1c618:	beq	1c624 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x40>
   1c61c:	add	r3, r3, #1
   1c620:	b	1c600 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x1c>
   1c624:	mov	r1, r3
   1c628:	ldrb	r2, [r0, r1]
   1c62c:	cmp	r2, #0
   1c630:	bne	1c640 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x5c>
   1c634:	add	r1, r1, #1
   1c638:	cmp	r6, r1
   1c63c:	bne	1c628 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x44>
   1c640:	ldr	r2, [r5, #12]
   1c644:	mov	r4, r1
   1c648:	add	r2, r3, r2
   1c64c:	sub	r2, r2, r1
   1c650:	str	r2, [r5, #12]
   1c654:	cmp	r4, r6
   1c658:	bcc	1c67c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x98>
   1c65c:	sub	r3, r3, r7
   1c660:	sub	r2, r4, r1
   1c664:	add	r1, r0, r1
   1c668:	add	r0, r0, r3
   1c66c:	bl	fe78 <memmove@plt>
   1c670:	add	r7, r7, #1
   1c674:	sub	r3, r4, #1
   1c678:	b	1c61c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x38>
   1c67c:	ldrb	r2, [r0, r4]
   1c680:	cmp	r2, #0
   1c684:	beq	1c65c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x78>
   1c688:	add	r4, r4, #1
   1c68c:	b	1c654 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x70>

0001c690 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   1c690:	ldr	r3, [r0, #128]	; 0x80
   1c694:	push	{r4, r5, r6, r7, r8, lr}
   1c698:	mov	r4, r0
   1c69c:	ldr	r6, [r3, #4]
   1c6a0:	mov	r8, r1
   1c6a4:	sub	r5, r6, #-1073741823	; 0xc0000001
   1c6a8:	lsl	r5, r5, #2
   1c6ac:	cmp	r6, #0
   1c6b0:	beq	1c700 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   1c6b4:	ldr	r3, [r4, #128]	; 0x80
   1c6b8:	sub	r6, r6, #1
   1c6bc:	ldr	r3, [r3]
   1c6c0:	ldr	r7, [r3, r5]
   1c6c4:	ldr	r3, [r8]
   1c6c8:	ldr	r1, [r7, #4]
   1c6cc:	cmp	r1, r3
   1c6d0:	bne	1c708 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x78>
   1c6d4:	ldr	r2, [r7, #8]
   1c6d8:	cmp	r2, #1
   1c6dc:	bne	1c708 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x78>
   1c6e0:	mov	r0, r4
   1c6e4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1c6e8:	mov	r0, r4
   1c6ec:	bl	10628 <myhtml_tree_current_node@plt>
   1c6f0:	mov	r2, #0
   1c6f4:	mov	r1, r7
   1c6f8:	mov	r0, r4
   1c6fc:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1c700:	mov	r0, #0
   1c704:	pop	{r4, r5, r6, r7, r8, pc}
   1c708:	ldr	r0, [r4, #28]
   1c70c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1c710:	ldr	r3, [r7, #8]
   1c714:	sub	r5, r5, #4
   1c718:	add	r3, r3, #4
   1c71c:	ldr	r3, [r0, r3, lsl #2]
   1c720:	tst	r3, #2
   1c724:	beq	1c6ac <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x1c>
   1c728:	b	1c700 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>

0001c72c <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   1c72c:	push	{r4, lr}
   1c730:	ldr	lr, [r0, #128]	; 0x80
   1c734:	ldr	r3, [lr, #4]
   1c738:	cmp	r3, #0
   1c73c:	beq	1c780 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x54>
   1c740:	ldr	r1, [lr, #4]
   1c744:	ldr	r3, [lr]
   1c748:	ldr	r4, [r2]
   1c74c:	sub	ip, r1, #1
   1c750:	add	r3, r3, r1, lsl #2
   1c754:	cmp	ip, #0
   1c758:	beq	1c780 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x54>
   1c75c:	ldr	r1, [r3, #-4]!
   1c760:	ldr	lr, [r1, #4]
   1c764:	cmp	r4, lr
   1c768:	beq	1c79c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x70>
   1c76c:	ldr	r1, [r3, #-4]
   1c770:	sub	ip, ip, #1
   1c774:	ldr	r1, [r1, #8]
   1c778:	cmp	r1, #1
   1c77c:	bne	1c754 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x28>
   1c780:	ldr	r3, [r0]
   1c784:	ldr	r1, [r0, #168]	; 0xa8
   1c788:	pop	{r4, lr}
   1c78c:	ldr	r3, [r3, #28]
   1c790:	ldr	r3, [r3, r1, lsl #2]
   1c794:	mov	r1, r2
   1c798:	bx	r3
   1c79c:	mov	r2, #0
   1c7a0:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1c7a4:	mov	r0, #0
   1c7a8:	pop	{r4, pc}

0001c7ac <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   1c7ac:	push	{r4, r5, r6, lr}
   1c7b0:	mov	r6, r0
   1c7b4:	mov	r5, r1
   1c7b8:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   1c7bc:	mov	r1, r5
   1c7c0:	mov	r4, r0
   1c7c4:	ldr	r0, [r6, #8]
   1c7c8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c7cc:	ldr	r3, [r4, #8]
   1c7d0:	cmp	r3, #2
   1c7d4:	bne	1c83c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x90>
   1c7d8:	mov	r0, r5
   1c7dc:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1c7e0:	mov	r0, r5
   1c7e4:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1c7e8:	mov	r1, r5
   1c7ec:	mov	r0, r6
   1c7f0:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1c7f4:	ldr	r3, [r4, #8]
   1c7f8:	ldr	r4, [r5, #48]	; 0x30
   1c7fc:	ands	r4, r4, #2
   1c800:	str	r3, [r0, #8]
   1c804:	beq	1c854 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xa8>
   1c808:	ldr	r4, [r5]
   1c80c:	mov	r0, r6
   1c810:	cmp	r4, #112	; 0x70
   1c814:	cmpeq	r3, #3
   1c818:	moveq	r4, #1
   1c81c:	movne	r4, #0
   1c820:	bne	1c850 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xa4>
   1c824:	bl	10628 <myhtml_tree_current_node@plt>
   1c828:	mov	r2, r5
   1c82c:	mov	r1, r0
   1c830:	mov	r0, r6
   1c834:	pop	{r4, r5, r6, lr}
   1c838:	b	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1c83c:	cmp	r3, #3
   1c840:	bne	1c7e0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1c844:	mov	r0, r5
   1c848:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1c84c:	b	1c7e0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1c850:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1c854:	mov	r0, r4
   1c858:	pop	{r4, r5, r6, pc}

0001c85c <myhtml_insertion_mode_in_foreign_content@@Base>:
   1c85c:	push	{r4, r5, r6, lr}
   1c860:	mov	r5, r0
   1c864:	ldr	r4, [r1, #48]	; 0x30
   1c868:	mov	r6, r1
   1c86c:	ands	r4, r4, #1
   1c870:	beq	1c8c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x64>
   1c874:	bl	10628 <myhtml_tree_current_node@plt>
   1c878:	ldr	r3, [r6]
   1c87c:	cmp	r3, #112	; 0x70
   1c880:	mov	r1, r0
   1c884:	bne	1c8b0 <myhtml_insertion_mode_in_foreign_content@@Base+0x54>
   1c888:	ldr	r3, [r0, #4]
   1c88c:	cmp	r3, #112	; 0x70
   1c890:	bne	1c8b0 <myhtml_insertion_mode_in_foreign_content@@Base+0x54>
   1c894:	ldr	r3, [r0, #8]
   1c898:	cmp	r3, #3
   1c89c:	bne	1c8b0 <myhtml_insertion_mode_in_foreign_content@@Base+0x54>
   1c8a0:	mov	r0, r5
   1c8a4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1c8a8:	mov	r0, #0
   1c8ac:	pop	{r4, r5, r6, pc}
   1c8b0:	mov	r2, r6
   1c8b4:	mov	r0, r5
   1c8b8:	pop	{r4, r5, r6, lr}
   1c8bc:	b	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1c8c0:	ldr	r3, [r1]
   1c8c4:	cmp	r3, #69	; 0x45
   1c8c8:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c8cc:	bhi	1ca58 <myhtml_insertion_mode_in_foreign_content@@Base+0x1fc>
   1c8d0:	cmp	r3, #30
   1c8d4:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c8d8:	bhi	1c99c <myhtml_insertion_mode_in_foreign_content@@Base+0x140>
   1c8dc:	cmp	r3, #14
   1c8e0:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c8e4:	bhi	1c950 <myhtml_insertion_mode_in_foreign_content@@Base+0xf4>
   1c8e8:	cmp	r3, #2
   1c8ec:	beq	1caf4 <myhtml_insertion_mode_in_foreign_content@@Base+0x298>
   1c8f0:	cmp	r3, #3
   1c8f4:	beq	1c8a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x4c>
   1c8f8:	cmp	r3, #1
   1c8fc:	bne	1ca28 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c900:	ldr	r3, [r1, #48]	; 0x30
   1c904:	tst	r3, #2048	; 0x800
   1c908:	beq	1c920 <myhtml_insertion_mode_in_foreign_content@@Base+0xc4>
   1c90c:	ldr	r0, [r0, #8]
   1c910:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c914:	mov	r1, r6
   1c918:	mov	r0, r5
   1c91c:	bl	10334 <myhtml_token_set_replacement_character_for_null_token@plt>
   1c920:	mov	r1, r6
   1c924:	mov	r0, r5
   1c928:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1c92c:	ldr	r0, [r6, #48]	; 0x30
   1c930:	ands	r0, r0, #8
   1c934:	bne	1c8a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x4c>
   1c938:	ldr	r3, [r5, #180]	; 0xb4
   1c93c:	ldr	r2, [r5, #180]	; 0xb4
   1c940:	and	r3, r3, #2
   1c944:	eor	r3, r3, r2
   1c948:	str	r3, [r5, #180]	; 0xb4
   1c94c:	pop	{r4, r5, r6, pc}
   1c950:	cmp	r3, #24
   1c954:	bhi	1c994 <myhtml_insertion_mode_in_foreign_content@@Base+0x138>
   1c958:	cmp	r3, #22
   1c95c:	bcs	1c9c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x164>
   1c960:	cmp	r3, #20
   1c964:	bne	1ca28 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c968:	ldr	r3, [r5, #88]	; 0x58
   1c96c:	cmp	r3, #0
   1c970:	bne	1ca28 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c974:	mov	r0, r5
   1c978:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1c97c:	mov	r0, r5
   1c980:	bl	10628 <myhtml_tree_current_node@plt>
   1c984:	subs	r4, r0, #0
   1c988:	bne	1cb00 <myhtml_insertion_mode_in_foreign_content@@Base+0x2a4>
   1c98c:	mov	r0, #1
   1c990:	pop	{r4, r5, r6, pc}
   1c994:	cmp	r3, #28
   1c998:	b	1c964 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c99c:	cmp	r3, #50	; 0x32
   1c9a0:	beq	1c9c8 <myhtml_insertion_mode_in_foreign_content@@Base+0x16c>
   1c9a4:	bhi	1ca38 <myhtml_insertion_mode_in_foreign_content@@Base+0x1dc>
   1c9a8:	cmp	r3, #36	; 0x24
   1c9ac:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c9b0:	bcc	1ca28 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c9b4:	sub	r2, r3, #42	; 0x2a
   1c9b8:	cmp	r2, #4
   1c9bc:	bhi	1ca28 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c9c0:	cmp	r3, #50	; 0x32
   1c9c4:	bne	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c9c8:	mov	r1, r6
   1c9cc:	ldr	r0, [r5, #8]
   1c9d0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1c9d4:	ldr	r1, [pc, #348]	; 1cb38 <myhtml_insertion_mode_in_foreign_content@@Base+0x2dc>
   1c9d8:	mov	r2, #5
   1c9dc:	add	r1, pc, r1
   1c9e0:	mov	r0, r6
   1c9e4:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1c9e8:	cmp	r0, #0
   1c9ec:	bne	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c9f0:	ldr	r1, [pc, #324]	; 1cb3c <myhtml_insertion_mode_in_foreign_content@@Base+0x2e0>
   1c9f4:	mov	r2, #4
   1c9f8:	add	r1, pc, r1
   1c9fc:	mov	r0, r6
   1ca00:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1ca04:	cmp	r0, #0
   1ca08:	bne	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca0c:	ldr	r1, [pc, #300]	; 1cb40 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e4>
   1ca10:	mov	r2, #4
   1ca14:	add	r1, pc, r1
   1ca18:	mov	r0, r6
   1ca1c:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1ca20:	cmp	r0, #0
   1ca24:	bne	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca28:	mov	r1, r6
   1ca2c:	mov	r0, r5
   1ca30:	pop	{r4, r5, r6, lr}
   1ca34:	b	fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1ca38:	cmp	r3, #64	; 0x40
   1ca3c:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca40:	bhi	1ca50 <myhtml_insertion_mode_in_foreign_content@@Base+0x1f4>
   1ca44:	sub	r2, r3, #55	; 0x37
   1ca48:	cmp	r2, #6
   1ca4c:	b	1c9bc <myhtml_insertion_mode_in_foreign_content@@Base+0x160>
   1ca50:	cmp	r3, #66	; 0x42
   1ca54:	b	1c964 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1ca58:	cmp	r3, #110	; 0x6e
   1ca5c:	bhi	1cab0 <myhtml_insertion_mode_in_foreign_content@@Base+0x254>
   1ca60:	cmp	r3, #109	; 0x6d
   1ca64:	bcs	1c9c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x164>
   1ca68:	cmp	r3, #86	; 0x56
   1ca6c:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca70:	bhi	1ca8c <myhtml_insertion_mode_in_foreign_content@@Base+0x230>
   1ca74:	cmp	r3, #79	; 0x4f
   1ca78:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca7c:	cmp	r3, #84	; 0x54
   1ca80:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca84:	cmp	r3, #77	; 0x4d
   1ca88:	b	1c964 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1ca8c:	cmp	r3, #95	; 0x5f
   1ca90:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1ca94:	bhi	1caa0 <myhtml_insertion_mode_in_foreign_content@@Base+0x244>
   1ca98:	cmp	r3, #90	; 0x5a
   1ca9c:	b	1c964 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1caa0:	cmp	r3, #99	; 0x63
   1caa4:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1caa8:	cmp	r3, #102	; 0x66
   1caac:	b	1c964 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1cab0:	cmp	r3, #121	; 0x79
   1cab4:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1cab8:	bhi	1cad4 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1cabc:	cmp	r3, #115	; 0x73
   1cac0:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1cac4:	bcc	1ca28 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1cac8:	sub	r2, r3, #117	; 0x75
   1cacc:	cmp	r2, #2
   1cad0:	b	1c9bc <myhtml_insertion_mode_in_foreign_content@@Base+0x160>
   1cad4:	cmp	r3, #125	; 0x7d
   1cad8:	beq	1c968 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1cadc:	bhi	1cae8 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1cae0:	cmp	r3, #123	; 0x7b
   1cae4:	b	1c964 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1cae8:	sub	r2, r3, #137	; 0x89
   1caec:	cmp	r2, #3
   1caf0:	b	1c9bc <myhtml_insertion_mode_in_foreign_content@@Base+0x160>
   1caf4:	mov	r2, r4
   1caf8:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1cafc:	b	1c8a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x4c>
   1cb00:	mov	r1, r4
   1cb04:	mov	r0, r5
   1cb08:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   1cb0c:	cmp	r0, #0
   1cb10:	bne	1c98c <myhtml_insertion_mode_in_foreign_content@@Base+0x130>
   1cb14:	mov	r1, r4
   1cb18:	mov	r0, r5
   1cb1c:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   1cb20:	cmp	r0, #0
   1cb24:	bne	1c98c <myhtml_insertion_mode_in_foreign_content@@Base+0x130>
   1cb28:	ldr	r3, [r4, #8]
   1cb2c:	cmp	r3, #1
   1cb30:	bne	1c974 <myhtml_insertion_mode_in_foreign_content@@Base+0x118>
   1cb34:	b	1c98c <myhtml_insertion_mode_in_foreign_content@@Base+0x130>
   1cb38:	andeq	sl, sp, r7, lsl r3
   1cb3c:	andeq	sl, sp, r7, ror #17
   1cb40:	andeq	sl, sp, r5, ror #5

0001cb44 <myhtml_rules_stop_parsing@@Base>:
   1cb44:	bx	lr

0001cb48 <myhtml_insertion_mode_in_body@@Base>:
   1cb48:	ldr	r3, [r1, #48]	; 0x30
   1cb4c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb50:	tst	r3, #1
   1cb54:	mov	r5, r1
   1cb58:	mov	r4, r0
   1cb5c:	ldr	r1, [r1]
   1cb60:	beq	1d194 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb64:	sub	r3, r1, #4
   1cb68:	cmp	r3, #135	; 0x87
   1cb6c:	addls	pc, pc, r3, lsl #2
   1cb70:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cb74:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cb78:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cb7c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cb80:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cb84:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cb88:	b	1d0d8 <myhtml_insertion_mode_in_body@@Base+0x590>
   1cb8c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cb90:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cb94:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cb98:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cb9c:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cba0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cba4:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cba8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbac:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbb0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbb4:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cbb8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbbc:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cbc0:	b	1cd94 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1cbc4:	b	1d12c <myhtml_insertion_mode_in_body@@Base+0x5e4>
   1cbc8:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cbcc:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbd0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbd4:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cbd8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbdc:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cbe0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbe4:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbe8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbec:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbf0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbf4:	b	1cfa0 <myhtml_insertion_mode_in_body@@Base+0x458>
   1cbf8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cbfc:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc00:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc04:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc08:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc0c:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc10:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc14:	b	1cfa0 <myhtml_insertion_mode_in_body@@Base+0x458>
   1cc18:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cc1c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc20:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc24:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc28:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc2c:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cc30:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc34:	b	1ce60 <myhtml_insertion_mode_in_body@@Base+0x318>
   1cc38:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc3c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc40:	b	1cfc0 <myhtml_insertion_mode_in_body@@Base+0x478>
   1cc44:	b	1cfc0 <myhtml_insertion_mode_in_body@@Base+0x478>
   1cc48:	b	1cfc0 <myhtml_insertion_mode_in_body@@Base+0x478>
   1cc4c:	b	1cfc0 <myhtml_insertion_mode_in_body@@Base+0x478>
   1cc50:	b	1cfc0 <myhtml_insertion_mode_in_body@@Base+0x478>
   1cc54:	b	1cfc0 <myhtml_insertion_mode_in_body@@Base+0x478>
   1cc58:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc5c:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc60:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cc64:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc68:	b	1cdd8 <myhtml_insertion_mode_in_body@@Base+0x290>
   1cc6c:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cc70:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc74:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc78:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc7c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc80:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc84:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc88:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc8c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc90:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc94:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cc98:	b	1cf58 <myhtml_insertion_mode_in_body@@Base+0x410>
   1cc9c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cca0:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cca4:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cca8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccac:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccb0:	b	1d0d8 <myhtml_insertion_mode_in_body@@Base+0x590>
   1ccb4:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1ccb8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccbc:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccc0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccc4:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccc8:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cccc:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1ccd0:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccd4:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccd8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccdc:	b	1d0d8 <myhtml_insertion_mode_in_body@@Base+0x590>
   1cce0:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cce4:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cce8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccec:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccf0:	b	1cf20 <myhtml_insertion_mode_in_body@@Base+0x3d8>
   1ccf4:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccf8:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1ccfc:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cd00:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd04:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd08:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd0c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd10:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd14:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd18:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd1c:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cd20:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd24:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd28:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cd2c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd30:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cd34:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd38:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd3c:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cd40:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cd44:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd48:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd4c:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cd50:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd54:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd58:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd5c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd60:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd64:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1cd68:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd6c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd70:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd74:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd78:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd7c:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd80:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd84:	b	1d184 <myhtml_insertion_mode_in_body@@Base+0x63c>
   1cd88:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cd8c:	b	1d0c8 <myhtml_insertion_mode_in_body@@Base+0x580>
   1cd90:	b	1ce1c <myhtml_insertion_mode_in_body@@Base+0x2d4>
   1cd94:	mov	r3, #8
   1cd98:	mov	r1, #23
   1cd9c:	mov	r2, #1
   1cda0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1cda4:	cmp	r0, #0
   1cda8:	movne	r3, #0
   1cdac:	ldrne	r1, [r4, #128]	; 0x80
   1cdb0:	bne	1cdc0 <myhtml_insertion_mode_in_body@@Base+0x278>
   1cdb4:	mov	r6, #0
   1cdb8:	b	1cec0 <myhtml_insertion_mode_in_body@@Base+0x378>
   1cdbc:	add	r3, r3, #1
   1cdc0:	ldr	r2, [r1, #4]
   1cdc4:	cmp	r3, r2
   1cdc8:	bcc	1cdbc <myhtml_insertion_mode_in_body@@Base+0x274>
   1cdcc:	mov	r3, #18
   1cdd0:	str	r3, [r4, #168]	; 0xa8
   1cdd4:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cdd8:	mov	r3, #8
   1cddc:	mov	r1, #23
   1cde0:	mov	r2, #1
   1cde4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1cde8:	cmp	r0, #0
   1cdec:	movne	r3, #0
   1cdf0:	ldrne	r1, [r4, #128]	; 0x80
   1cdf4:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cdf8:	ldr	r2, [r1, #4]
   1cdfc:	cmp	r3, r2
   1ce00:	bcc	1ce14 <myhtml_insertion_mode_in_body@@Base+0x2cc>
   1ce04:	mov	r3, #18
   1ce08:	str	r3, [r4, #168]	; 0xa8
   1ce0c:	mov	r6, #1
   1ce10:	b	1cec0 <myhtml_insertion_mode_in_body@@Base+0x378>
   1ce14:	add	r3, r3, #1
   1ce18:	b	1cdf8 <myhtml_insertion_mode_in_body@@Base+0x2b0>
   1ce1c:	mov	r2, #1
   1ce20:	mov	r3, #8
   1ce24:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ce28:	cmp	r0, #0
   1ce2c:	movne	r2, #0
   1ce30:	movne	r1, r2
   1ce34:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1ce38:	mov	r0, r4
   1ce3c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ce40:	mov	r0, r4
   1ce44:	bl	10628 <myhtml_tree_current_node@plt>
   1ce48:	ldr	r1, [r5]
   1ce4c:	bl	10aa8 <myhtml_is_html_node@plt>
   1ce50:	mov	r3, #0
   1ce54:	mov	r2, #1
   1ce58:	ldr	r1, [r5]
   1ce5c:	b	1cf14 <myhtml_insertion_mode_in_body@@Base+0x3cc>
   1ce60:	mov	r3, #0
   1ce64:	mov	r2, #1
   1ce68:	mov	r1, #128	; 0x80
   1ce6c:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1ce70:	subs	r6, r0, #0
   1ce74:	bne	1cecc <myhtml_insertion_mode_in_body@@Base+0x384>
   1ce78:	ldr	r5, [r4, #104]	; 0x68
   1ce7c:	str	r6, [r4, #104]	; 0x68
   1ce80:	cmp	r5, #0
   1ce84:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1ce88:	mov	r1, #8
   1ce8c:	mov	r0, r5
   1ce90:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   1ce94:	cmp	r0, #0
   1ce98:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1ce9c:	mov	r1, r6
   1cea0:	mov	r2, r6
   1cea4:	mov	r0, r4
   1cea8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ceac:	mov	r0, r4
   1ceb0:	bl	10628 <myhtml_tree_current_node@plt>
   1ceb4:	mov	r1, r5
   1ceb8:	mov	r0, r4
   1cebc:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1cec0:	mov	r0, r6
   1cec4:	add	sp, sp, #12
   1cec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cecc:	mov	r3, #8
   1ced0:	mov	r2, #1
   1ced4:	mov	r1, #52	; 0x34
   1ced8:	mov	r0, r4
   1cedc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1cee0:	cmp	r0, #0
   1cee4:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cee8:	mov	r2, #0
   1ceec:	mov	r1, r2
   1cef0:	mov	r0, r4
   1cef4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1cef8:	mov	r0, r4
   1cefc:	bl	10628 <myhtml_tree_current_node@plt>
   1cf00:	mov	r1, #52	; 0x34
   1cf04:	bl	10aa8 <myhtml_is_html_node@plt>
   1cf08:	mov	r3, #0
   1cf0c:	mov	r2, #1
   1cf10:	mov	r1, #52	; 0x34
   1cf14:	mov	r0, r4
   1cf18:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1cf1c:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cf20:	mov	r3, #32
   1cf24:	mov	r2, #1
   1cf28:	mov	r1, #99	; 0x63
   1cf2c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1cf30:	cmp	r0, #0
   1cf34:	bne	1cf48 <myhtml_insertion_mode_in_body@@Base+0x400>
   1cf38:	mov	r2, #1
   1cf3c:	mov	r1, #99	; 0x63
   1cf40:	mov	r0, r4
   1cf44:	bl	10970 <myhtml_tree_node_insert@plt>
   1cf48:	mov	r1, r5
   1cf4c:	mov	r0, r4
   1cf50:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1cf54:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cf58:	mov	r3, #16
   1cf5c:	mov	r2, #1
   1cf60:	mov	r1, #77	; 0x4d
   1cf64:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1cf68:	cmp	r0, #0
   1cf6c:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cf70:	mov	r2, #1
   1cf74:	mov	r1, #77	; 0x4d
   1cf78:	mov	r0, r4
   1cf7c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1cf80:	mov	r0, r4
   1cf84:	bl	10628 <myhtml_tree_current_node@plt>
   1cf88:	mov	r1, #77	; 0x4d
   1cf8c:	bl	10aa8 <myhtml_is_html_node@plt>
   1cf90:	mov	r3, #0
   1cf94:	mov	r2, #1
   1cf98:	mov	r1, #77	; 0x4d
   1cf9c:	b	1cf14 <myhtml_insertion_mode_in_body@@Base+0x3cc>
   1cfa0:	mov	r3, #8
   1cfa4:	mov	r2, #1
   1cfa8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1cfac:	cmp	r0, #0
   1cfb0:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cfb4:	mov	r2, #1
   1cfb8:	ldr	r1, [r5]
   1cfbc:	b	1ce38 <myhtml_insertion_mode_in_body@@Base+0x2f0>
   1cfc0:	ldr	r3, [r0, #128]	; 0x80
   1cfc4:	ldr	r7, [r3, #4]
   1cfc8:	ldr	r6, [r3]
   1cfcc:	add	r8, r6, r7, lsl #2
   1cfd0:	cmp	r7, #0
   1cfd4:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1cfd8:	ldr	r3, [r8, #-4]
   1cfdc:	ldr	r0, [r4, #28]
   1cfe0:	sub	r7, r7, #1
   1cfe4:	ldr	r1, [r3, #4]
   1cfe8:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1cfec:	ldr	r2, [r8, #-4]!
   1cff0:	ldr	r3, [r2, #4]
   1cff4:	sub	r3, r3, #55	; 0x37
   1cff8:	cmp	r3, #5
   1cffc:	ldr	r3, [r2, #8]
   1d000:	bhi	1d00c <myhtml_insertion_mode_in_body@@Base+0x4c4>
   1d004:	cmp	r3, #1
   1d008:	beq	1dfbc <myhtml_insertion_mode_in_body@@Base+0x1474>
   1d00c:	add	r3, r3, #4
   1d010:	ldr	r3, [r0, r3, lsl #2]
   1d014:	tst	r3, #8
   1d018:	beq	1cfd0 <myhtml_insertion_mode_in_body@@Base+0x488>
   1d01c:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d020:	ldr	r2, [r3, #4]
   1d024:	sub	r2, r2, #1
   1d028:	str	r2, [r3, #4]
   1d02c:	ldr	r2, [r3, #4]
   1d030:	ldr	r2, [r6, r2, lsl #2]
   1d034:	ldr	r2, [r2, #4]
   1d038:	cmp	r2, #55	; 0x37
   1d03c:	beq	1d0a4 <myhtml_insertion_mode_in_body@@Base+0x55c>
   1d040:	ldr	r2, [r3, #4]
   1d044:	ldr	r2, [r6, r2, lsl #2]
   1d048:	ldr	r2, [r2, #4]
   1d04c:	cmp	r2, #56	; 0x38
   1d050:	beq	1d0a4 <myhtml_insertion_mode_in_body@@Base+0x55c>
   1d054:	ldr	r2, [r3, #4]
   1d058:	ldr	r2, [r6, r2, lsl #2]
   1d05c:	ldr	r2, [r2, #4]
   1d060:	cmp	r2, #57	; 0x39
   1d064:	beq	1d0a4 <myhtml_insertion_mode_in_body@@Base+0x55c>
   1d068:	ldr	r2, [r3, #4]
   1d06c:	ldr	r2, [r6, r2, lsl #2]
   1d070:	ldr	r2, [r2, #4]
   1d074:	cmp	r2, #58	; 0x3a
   1d078:	beq	1d0a4 <myhtml_insertion_mode_in_body@@Base+0x55c>
   1d07c:	ldr	r2, [r3, #4]
   1d080:	ldr	r2, [r6, r2, lsl #2]
   1d084:	ldr	r2, [r2, #4]
   1d088:	cmp	r2, #59	; 0x3b
   1d08c:	beq	1d0a4 <myhtml_insertion_mode_in_body@@Base+0x55c>
   1d090:	ldr	r2, [r3, #4]
   1d094:	ldr	r2, [r6, r2, lsl #2]
   1d098:	ldr	r2, [r2, #4]
   1d09c:	cmp	r2, #60	; 0x3c
   1d0a0:	bne	1d0b8 <myhtml_insertion_mode_in_body@@Base+0x570>
   1d0a4:	ldr	r2, [r3, #4]
   1d0a8:	ldr	r2, [r6, r2, lsl #2]
   1d0ac:	ldr	r2, [r2, #8]
   1d0b0:	cmp	r2, #1
   1d0b4:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d0b8:	ldr	r2, [r3, #4]
   1d0bc:	cmp	r2, #0
   1d0c0:	bne	1d020 <myhtml_insertion_mode_in_body@@Base+0x4d8>
   1d0c4:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d0c8:	mov	r2, r1
   1d0cc:	mov	r1, r5
   1d0d0:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1d0d4:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d0d8:	mov	r3, #8
   1d0dc:	mov	r2, #1
   1d0e0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1d0e4:	cmp	r0, #0
   1d0e8:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d0ec:	mov	r2, #0
   1d0f0:	mov	r1, r2
   1d0f4:	mov	r0, r4
   1d0f8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1d0fc:	mov	r0, r4
   1d100:	bl	10628 <myhtml_tree_current_node@plt>
   1d104:	ldr	r1, [r5]
   1d108:	bl	10aa8 <myhtml_is_html_node@plt>
   1d10c:	mov	r0, r4
   1d110:	mov	r3, #0
   1d114:	mov	r2, #1
   1d118:	ldr	r1, [r5]
   1d11c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1d120:	mov	r0, r4
   1d124:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1d128:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d12c:	ldr	r3, [r5, #40]	; 0x28
   1d130:	mov	r6, #0
   1d134:	cmp	r3, #0
   1d138:	movne	r3, #0
   1d13c:	strne	r3, [r5, #40]	; 0x28
   1d140:	ldr	r3, [r5, #44]	; 0x2c
   1d144:	cmp	r3, #0
   1d148:	movne	r3, #0
   1d14c:	strne	r3, [r5, #44]	; 0x2c
   1d150:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1d154:	str	r6, [r5, #48]	; 0x30
   1d158:	mov	r1, r5
   1d15c:	mov	r0, r4
   1d160:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1d164:	mov	r0, r4
   1d168:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1d16c:	ldr	r3, [r4, #180]	; 0xb4
   1d170:	ldr	r2, [r4, #180]	; 0xb4
   1d174:	and	r3, r3, #2
   1d178:	eor	r3, r3, r2
   1d17c:	str	r3, [r4, #180]	; 0xb4
   1d180:	b	1cec0 <myhtml_insertion_mode_in_body@@Base+0x378>
   1d184:	mov	r1, r5
   1d188:	add	sp, sp, #12
   1d18c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d190:	b	fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1d194:	sub	r1, r1, #1
   1d198:	cmp	r1, #250	; 0xfa
   1d19c:	addls	pc, pc, r1, lsl #2
   1d1a0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1a4:	b	1d590 <myhtml_insertion_mode_in_body@@Base+0xa48>
   1d1a8:	b	1d5d4 <myhtml_insertion_mode_in_body@@Base+0xa8c>
   1d1ac:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d1b0:	b	1dbb4 <myhtml_insertion_mode_in_body@@Base+0x106c>
   1d1b4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1b8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1bc:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d1c0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1c4:	b	1dc60 <myhtml_insertion_mode_in_body@@Base+0x1118>
   1d1c8:	b	1dcdc <myhtml_insertion_mode_in_body@@Base+0x1194>
   1d1cc:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d1d0:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d1d4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1d8:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d1dc:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d1e0:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d1e4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1e8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1ec:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d1f0:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d1f4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d1f8:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d1fc:	b	1d668 <myhtml_insertion_mode_in_body@@Base+0xb20>
   1d200:	b	1dcdc <myhtml_insertion_mode_in_body@@Base+0x1194>
   1d204:	b	1db60 <myhtml_insertion_mode_in_body@@Base+0x1018>
   1d208:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d20c:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d210:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d214:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d218:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d21c:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d220:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d224:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d228:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d22c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d230:	b	1da00 <myhtml_insertion_mode_in_body@@Base+0xeb8>
   1d234:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d238:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d23c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d240:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d244:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d248:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d24c:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d250:	b	1da00 <myhtml_insertion_mode_in_body@@Base+0xeb8>
   1d254:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d258:	b	1dcdc <myhtml_insertion_mode_in_body@@Base+0x1194>
   1d25c:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d260:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d264:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d268:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d26c:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d270:	b	1d86c <myhtml_insertion_mode_in_body@@Base+0xd24>
   1d274:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d278:	b	1d6dc <myhtml_insertion_mode_in_body@@Base+0xb94>
   1d27c:	b	1d7cc <myhtml_insertion_mode_in_body@@Base+0xc84>
   1d280:	b	1d7cc <myhtml_insertion_mode_in_body@@Base+0xc84>
   1d284:	b	1d7cc <myhtml_insertion_mode_in_body@@Base+0xc84>
   1d288:	b	1d7cc <myhtml_insertion_mode_in_body@@Base+0xc84>
   1d28c:	b	1d7cc <myhtml_insertion_mode_in_body@@Base+0xc84>
   1d290:	b	1d7cc <myhtml_insertion_mode_in_body@@Base+0xc84>
   1d294:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d298:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d29c:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d2a0:	b	1dd68 <myhtml_insertion_mode_in_body@@Base+0x1220>
   1d2a4:	b	1d5e4 <myhtml_insertion_mode_in_body@@Base+0xa9c>
   1d2a8:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d2ac:	b	1de28 <myhtml_insertion_mode_in_body@@Base+0x12e0>
   1d2b0:	b	1ddb0 <myhtml_insertion_mode_in_body@@Base+0x1268>
   1d2b4:	b	1dcdc <myhtml_insertion_mode_in_body@@Base+0x1194>
   1d2b8:	b	1dcf8 <myhtml_insertion_mode_in_body@@Base+0x11b0>
   1d2bc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2c0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2c4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2c8:	b	1dcdc <myhtml_insertion_mode_in_body@@Base+0x1194>
   1d2cc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2d0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2d4:	b	1d8e0 <myhtml_insertion_mode_in_body@@Base+0xd98>
   1d2d8:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d2dc:	b	1d818 <myhtml_insertion_mode_in_body@@Base+0xcd0>
   1d2e0:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d2e4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2e8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d2ec:	b	1dc60 <myhtml_insertion_mode_in_body@@Base+0x1118>
   1d2f0:	b	1d784 <myhtml_insertion_mode_in_body@@Base+0xc3c>
   1d2f4:	b	1dee0 <myhtml_insertion_mode_in_body@@Base+0x1398>
   1d2f8:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d2fc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d300:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d304:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d308:	b	1dc2c <myhtml_insertion_mode_in_body@@Base+0x10e4>
   1d30c:	b	1de3c <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d310:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d314:	b	1de54 <myhtml_insertion_mode_in_body@@Base+0x130c>
   1d318:	b	1dc60 <myhtml_insertion_mode_in_body@@Base+0x1118>
   1d31c:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d320:	b	1dec0 <myhtml_insertion_mode_in_body@@Base+0x1378>
   1d324:	b	1dec0 <myhtml_insertion_mode_in_body@@Base+0x1378>
   1d328:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d32c:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d330:	b	1dd54 <myhtml_insertion_mode_in_body@@Base+0x120c>
   1d334:	b	1db24 <myhtml_insertion_mode_in_body@@Base+0xfdc>
   1d338:	b	1d818 <myhtml_insertion_mode_in_body@@Base+0xcd0>
   1d33c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d340:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d344:	b	1deec <myhtml_insertion_mode_in_body@@Base+0x13a4>
   1d348:	b	1df20 <myhtml_insertion_mode_in_body@@Base+0x13d8>
   1d34c:	b	1df20 <myhtml_insertion_mode_in_body@@Base+0x13d8>
   1d350:	b	1deec <myhtml_insertion_mode_in_body@@Base+0x13a4>
   1d354:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d358:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d35c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d360:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d364:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d368:	b	1de6c <myhtml_insertion_mode_in_body@@Base+0x1324>
   1d36c:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d370:	b	1dd54 <myhtml_insertion_mode_in_body@@Base+0x120c>
   1d374:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d378:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d37c:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d380:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d384:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d388:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d38c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d390:	b	1df88 <myhtml_insertion_mode_in_body@@Base+0x1440>
   1d394:	b	1dc84 <myhtml_insertion_mode_in_body@@Base+0x113c>
   1d398:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d39c:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d3a0:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d3a4:	b	1ddbc <myhtml_insertion_mode_in_body@@Base+0x1274>
   1d3a8:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d3ac:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d3b0:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d3b4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3b8:	b	1d654 <myhtml_insertion_mode_in_body@@Base+0xb0c>
   1d3bc:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d3c0:	b	1dd54 <myhtml_insertion_mode_in_body@@Base+0x120c>
   1d3c4:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d3c8:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d3cc:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d3d0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3d4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3d8:	b	1dcdc <myhtml_insertion_mode_in_body@@Base+0x1194>
   1d3dc:	b	1ddfc <myhtml_insertion_mode_in_body@@Base+0x12b4>
   1d3e0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3e4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3e8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3ec:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3f0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3f4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3f8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d3fc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d400:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d404:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d408:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d40c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d410:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d414:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d418:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d41c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d420:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d424:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d428:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d42c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d430:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d434:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d438:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d43c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d440:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d444:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d448:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d44c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d450:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d454:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d458:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d45c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d460:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d464:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d468:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d46c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d470:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d474:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d478:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d47c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d480:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d484:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d488:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d48c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d490:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d494:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d498:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d49c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4a0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4a4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4a8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4ac:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4b0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4b4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4b8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4bc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4c0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4c4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4c8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4cc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4d0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4d4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4d8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4dc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4e0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4e4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4e8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4ec:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4f0:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4f4:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4f8:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d4fc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d500:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d504:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d508:	b	1df44 <myhtml_insertion_mode_in_body@@Base+0x13fc>
   1d50c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d510:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d514:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d518:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d51c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d520:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d524:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d528:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d52c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d530:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d534:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d538:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d53c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d540:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d544:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d548:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d54c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d550:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d554:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d558:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d55c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d560:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d564:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d568:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d56c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d570:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d574:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d578:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d57c:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d580:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d584:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d588:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1d58c:	b	1d744 <myhtml_insertion_mode_in_body@@Base+0xbfc>
   1d590:	ldr	r3, [r5, #48]	; 0x30
   1d594:	tst	r3, #2048	; 0x800
   1d598:	beq	1d5b0 <myhtml_insertion_mode_in_body@@Base+0xa68>
   1d59c:	mov	r1, r5
   1d5a0:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1d5a4:	ldr	r3, [r5, #12]
   1d5a8:	cmp	r3, #0
   1d5ac:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d5b0:	mov	r0, r4
   1d5b4:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1d5b8:	mov	r1, r5
   1d5bc:	mov	r0, r4
   1d5c0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1d5c4:	ldr	r6, [r5, #48]	; 0x30
   1d5c8:	ands	r6, r6, #8
   1d5cc:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d5d0:	b	1d16c <myhtml_insertion_mode_in_body@@Base+0x624>
   1d5d4:	mov	r2, #0
   1d5d8:	mov	r1, r5
   1d5dc:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1d5e0:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d5e4:	mov	r3, #0
   1d5e8:	mov	r2, #1
   1d5ec:	mov	r1, #128	; 0x80
   1d5f0:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1d5f4:	subs	r8, r0, #0
   1d5f8:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d5fc:	ldr	r3, [r4, #128]	; 0x80
   1d600:	ldr	r2, [r3, #4]
   1d604:	cmp	r2, #0
   1d608:	ldrne	r3, [r3]
   1d60c:	ldrne	r7, [r3]
   1d610:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d614:	ldr	r6, [r7, #32]
   1d618:	cmp	r6, #0
   1d61c:	streq	r5, [r7, #32]
   1d620:	beq	1cec0 <myhtml_insertion_mode_in_body@@Base+0x378>
   1d624:	mov	r1, r5
   1d628:	ldr	r0, [r4, #8]
   1d62c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1d630:	ldr	r1, [r7, #32]
   1d634:	ldr	r0, [r4, #8]
   1d638:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1d63c:	ldr	r3, [r4, #44]	; 0x2c
   1d640:	ldr	r2, [r7, #32]
   1d644:	mov	r1, r5
   1d648:	ldr	r0, [r4, #8]
   1d64c:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1d650:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d654:	mov	r1, r5
   1d658:	mov	r0, r4
   1d65c:	add	sp, sp, #12
   1d660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d664:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1d668:	ldr	r3, [r0, #128]	; 0x80
   1d66c:	ldr	r2, [r3, #4]
   1d670:	cmp	r2, #1
   1d674:	bls	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d678:	ldr	r3, [r3]
   1d67c:	ldr	r3, [r3, #4]
   1d680:	ldr	r2, [r3, #4]
   1d684:	cmp	r2, #23
   1d688:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d68c:	ldr	r2, [r3, #8]
   1d690:	cmp	r2, #1
   1d694:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d698:	mov	r3, #0
   1d69c:	mov	r1, #128	; 0x80
   1d6a0:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1d6a4:	subs	r8, r0, #0
   1d6a8:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d6ac:	ldr	r3, [r4, #180]	; 0xb4
   1d6b0:	ldr	r2, [r4, #180]	; 0xb4
   1d6b4:	and	r3, r3, #2
   1d6b8:	eor	r3, r3, r2
   1d6bc:	str	r3, [r4, #180]	; 0xb4
   1d6c0:	ldr	r3, [r4, #128]	; 0x80
   1d6c4:	ldr	r2, [r3, #4]
   1d6c8:	cmp	r2, #1
   1d6cc:	bls	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d6d0:	ldr	r3, [r3]
   1d6d4:	ldr	r7, [r3, #4]
   1d6d8:	b	1d614 <myhtml_insertion_mode_in_body@@Base+0xacc>
   1d6dc:	ldr	r3, [r0, #128]	; 0x80
   1d6e0:	ldr	r2, [r3, #4]
   1d6e4:	cmp	r2, #1
   1d6e8:	bls	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d6ec:	ldr	r3, [r3]
   1d6f0:	ldr	r0, [r3, #4]
   1d6f4:	ldr	r3, [r0, #4]
   1d6f8:	cmp	r3, #23
   1d6fc:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d700:	ldr	r6, [r0, #8]
   1d704:	cmp	r6, #1
   1d708:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d70c:	ldr	r3, [r4, #180]	; 0xb4
   1d710:	tst	r3, #2
   1d714:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d718:	bl	10df0 <myhtml_tree_node_remove@plt>
   1d71c:	mov	r3, r6
   1d720:	mov	r2, r6
   1d724:	mov	r1, #65	; 0x41
   1d728:	mov	r0, r4
   1d72c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1d730:	mov	r1, r5
   1d734:	mov	r0, r4
   1d738:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1d73c:	mov	r3, #19
   1d740:	b	1cdd0 <myhtml_insertion_mode_in_body@@Base+0x288>
   1d744:	ldr	r3, [r0, #140]	; 0x8c
   1d748:	ldr	r3, [r3, #4]
   1d74c:	cmp	r3, #0
   1d750:	ldreq	r1, [r0, #128]	; 0x80
   1d754:	beq	1d76c <myhtml_insertion_mode_in_body@@Base+0xc24>
   1d758:	mov	r1, r5
   1d75c:	add	sp, sp, #12
   1d760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d764:	b	fda0 <myhtml_insertion_mode_in_template@plt>
   1d768:	add	r3, r3, #1
   1d76c:	ldr	r2, [r1, #4]
   1d770:	cmp	r3, r2
   1d774:	bcc	1d768 <myhtml_insertion_mode_in_body@@Base+0xc20>
   1d778:	mov	r0, r4
   1d77c:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1d780:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d784:	mov	r3, #32
   1d788:	mov	r2, #1
   1d78c:	mov	r1, #99	; 0x63
   1d790:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1d794:	cmp	r0, #0
   1d798:	beq	1d7a8 <myhtml_insertion_mode_in_body@@Base+0xc60>
   1d79c:	mov	r1, r5
   1d7a0:	mov	r0, r4
   1d7a4:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1d7a8:	mov	r0, r4
   1d7ac:	bl	10628 <myhtml_tree_current_node@plt>
   1d7b0:	mov	r1, #85	; 0x55
   1d7b4:	bl	10aa8 <myhtml_is_html_node@plt>
   1d7b8:	cmp	r0, #0
   1d7bc:	beq	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1d7c0:	mov	r0, r4
   1d7c4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1d7c8:	b	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1d7cc:	mov	r3, #32
   1d7d0:	mov	r2, #1
   1d7d4:	mov	r1, #99	; 0x63
   1d7d8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1d7dc:	cmp	r0, #0
   1d7e0:	beq	1d7f0 <myhtml_insertion_mode_in_body@@Base+0xca8>
   1d7e4:	mov	r1, r5
   1d7e8:	mov	r0, r4
   1d7ec:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1d7f0:	mov	r0, r4
   1d7f4:	bl	10628 <myhtml_tree_current_node@plt>
   1d7f8:	ldr	r3, [r0, #4]
   1d7fc:	sub	r3, r3, #55	; 0x37
   1d800:	cmp	r3, #5
   1d804:	bhi	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1d808:	ldr	r3, [r0, #8]
   1d80c:	cmp	r3, #1
   1d810:	bne	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1d814:	b	1d7c0 <myhtml_insertion_mode_in_body@@Base+0xc78>
   1d818:	mov	r3, #32
   1d81c:	mov	r2, #1
   1d820:	mov	r1, #99	; 0x63
   1d824:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1d828:	cmp	r0, #0
   1d82c:	beq	1d83c <myhtml_insertion_mode_in_body@@Base+0xcf4>
   1d830:	mov	r1, r5
   1d834:	mov	r0, r4
   1d838:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1d83c:	mov	r1, r5
   1d840:	mov	r0, r4
   1d844:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1d848:	ldr	r3, [r4, #180]	; 0xb4
   1d84c:	orr	r3, r3, #192	; 0xc0
   1d850:	str	r3, [r4, #180]	; 0xb4
   1d854:	ldr	r3, [r4, #180]	; 0xb4
   1d858:	ldr	r2, [r4, #180]	; 0xb4
   1d85c:	and	r3, r3, #2
   1d860:	eor	r3, r3, r2
   1d864:	str	r3, [r4, #180]	; 0xb4
   1d868:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d86c:	mov	r3, #0
   1d870:	mov	r2, #1
   1d874:	mov	r1, #128	; 0x80
   1d878:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1d87c:	ldr	r6, [r4, #104]	; 0x68
   1d880:	adds	r6, r6, #0
   1d884:	movne	r6, #1
   1d888:	cmp	r0, #0
   1d88c:	movne	r6, #0
   1d890:	cmp	r6, #0
   1d894:	mov	r7, r0
   1d898:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d89c:	mov	r3, #32
   1d8a0:	mov	r2, #1
   1d8a4:	mov	r1, #99	; 0x63
   1d8a8:	mov	r0, r4
   1d8ac:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1d8b0:	cmp	r0, #0
   1d8b4:	beq	1d8c4 <myhtml_insertion_mode_in_body@@Base+0xd7c>
   1d8b8:	mov	r1, r5
   1d8bc:	mov	r0, r4
   1d8c0:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1d8c4:	mov	r1, r5
   1d8c8:	mov	r0, r4
   1d8cc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1d8d0:	cmp	r7, #0
   1d8d4:	streq	r0, [r4, #104]	; 0x68
   1d8d8:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d8dc:	b	1cec0 <myhtml_insertion_mode_in_body@@Base+0x378>
   1d8e0:	ldr	r3, [r0, #180]	; 0xb4
   1d8e4:	ldr	r2, [r0, #180]	; 0xb4
   1d8e8:	and	r3, r3, #2
   1d8ec:	eor	r3, r3, r2
   1d8f0:	str	r3, [r0, #180]	; 0xb4
   1d8f4:	ldr	r3, [r0, #128]	; 0x80
   1d8f8:	mov	r9, #77	; 0x4d
   1d8fc:	ldr	r7, [r3, #4]
   1d900:	sub	r6, r7, #-1073741823	; 0xc0000001
   1d904:	lsl	r6, r6, #2
   1d908:	cmp	r7, #0
   1d90c:	bne	1d948 <myhtml_insertion_mode_in_body@@Base+0xe00>
   1d910:	mov	r3, #32
   1d914:	mov	r2, #1
   1d918:	mov	r1, #99	; 0x63
   1d91c:	mov	r0, r4
   1d920:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1d924:	cmp	r0, #0
   1d928:	beq	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1d92c:	mov	r1, r5
   1d930:	mov	r0, r4
   1d934:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1d938:	mov	r1, r5
   1d93c:	mov	r0, r4
   1d940:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1d944:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1d948:	ldr	r3, [r4, #128]	; 0x80
   1d94c:	ldr	r0, [r4, #28]
   1d950:	sub	r7, r7, #1
   1d954:	ldr	r3, [r3]
   1d958:	ldr	r8, [r3, r6]
   1d95c:	ldr	r1, [r8, #4]
   1d960:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1d964:	mov	r1, r9
   1d968:	mov	sl, r0
   1d96c:	mov	r0, r8
   1d970:	bl	10aa8 <myhtml_is_html_node@plt>
   1d974:	cmp	r0, #0
   1d978:	beq	1d9b4 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d97c:	mov	r2, #1
   1d980:	mov	r1, #77	; 0x4d
   1d984:	mov	r0, r4
   1d988:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1d98c:	mov	r0, r4
   1d990:	bl	10628 <myhtml_tree_current_node@plt>
   1d994:	mov	r1, #77	; 0x4d
   1d998:	bl	10aa8 <myhtml_is_html_node@plt>
   1d99c:	mov	r3, #0
   1d9a0:	mov	r2, #1
   1d9a4:	mov	r1, #77	; 0x4d
   1d9a8:	mov	r0, r4
   1d9ac:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1d9b0:	b	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d9b4:	ldr	r1, [r8, #8]
   1d9b8:	add	r3, r1, #4
   1d9bc:	ldr	r3, [sl, r3, lsl #2]
   1d9c0:	tst	r3, #2
   1d9c4:	beq	1d9f8 <myhtml_insertion_mode_in_body@@Base+0xeb0>
   1d9c8:	ldr	r2, [r8, #4]
   1d9cc:	cmp	r2, #7
   1d9d0:	cmpne	r2, #42	; 0x2a
   1d9d4:	movne	r3, #1
   1d9d8:	moveq	r3, #0
   1d9dc:	cmp	r2, #99	; 0x63
   1d9e0:	moveq	r3, #0
   1d9e4:	andne	r3, r3, #1
   1d9e8:	cmp	r3, #0
   1d9ec:	bne	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d9f0:	cmp	r1, #1
   1d9f4:	bne	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1d9f8:	sub	r6, r6, #4
   1d9fc:	b	1d908 <myhtml_insertion_mode_in_body@@Base+0xdc0>
   1da00:	ldr	r3, [r0, #180]	; 0xb4
   1da04:	ldr	r2, [r0, #180]	; 0xb4
   1da08:	and	r3, r3, #2
   1da0c:	eor	r3, r3, r2
   1da10:	str	r3, [r0, #180]	; 0xb4
   1da14:	ldr	r3, [r0, #128]	; 0x80
   1da18:	mov	r9, #44	; 0x2c
   1da1c:	ldr	r8, [r3, #4]
   1da20:	sub	r6, r8, #-1073741823	; 0xc0000001
   1da24:	lsl	r6, r6, #2
   1da28:	cmp	r8, #0
   1da2c:	beq	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1da30:	ldr	r2, [r4, #128]	; 0x80
   1da34:	ldr	r0, [r4, #28]
   1da38:	sub	r8, r8, #1
   1da3c:	ldr	r2, [r2]
   1da40:	ldr	r7, [r2, r6]
   1da44:	ldr	r1, [r7, #4]
   1da48:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1da4c:	mov	r1, #36	; 0x24
   1da50:	mov	sl, r0
   1da54:	mov	r0, r7
   1da58:	bl	10aa8 <myhtml_is_html_node@plt>
   1da5c:	subs	fp, r0, #0
   1da60:	beq	1da94 <myhtml_insertion_mode_in_body@@Base+0xf4c>
   1da64:	mov	r2, #1
   1da68:	mov	r1, #36	; 0x24
   1da6c:	mov	r0, r4
   1da70:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1da74:	mov	r0, r4
   1da78:	bl	10628 <myhtml_tree_current_node@plt>
   1da7c:	mov	r1, #36	; 0x24
   1da80:	bl	10aa8 <myhtml_is_html_node@plt>
   1da84:	mov	r3, #0
   1da88:	mov	r2, #1
   1da8c:	mov	r1, #36	; 0x24
   1da90:	b	1d9a8 <myhtml_insertion_mode_in_body@@Base+0xe60>
   1da94:	mov	r1, r9
   1da98:	mov	r0, r7
   1da9c:	bl	10aa8 <myhtml_is_html_node@plt>
   1daa0:	cmp	r0, #0
   1daa4:	beq	1dad8 <myhtml_insertion_mode_in_body@@Base+0xf90>
   1daa8:	mov	r2, #1
   1daac:	mov	r1, #44	; 0x2c
   1dab0:	mov	r0, r4
   1dab4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1dab8:	mov	r0, r4
   1dabc:	bl	10628 <myhtml_tree_current_node@plt>
   1dac0:	mov	r1, #44	; 0x2c
   1dac4:	bl	10aa8 <myhtml_is_html_node@plt>
   1dac8:	mov	r3, fp
   1dacc:	mov	r2, #1
   1dad0:	mov	r1, #44	; 0x2c
   1dad4:	b	1d9a8 <myhtml_insertion_mode_in_body@@Base+0xe60>
   1dad8:	ldr	r0, [r7, #8]
   1dadc:	add	r2, r0, #4
   1dae0:	ldr	r2, [sl, r2, lsl #2]
   1dae4:	tst	r2, #2
   1dae8:	beq	1db1c <myhtml_insertion_mode_in_body@@Base+0xfd4>
   1daec:	ldr	r1, [r7, #4]
   1daf0:	cmp	r1, #7
   1daf4:	cmpne	r1, #42	; 0x2a
   1daf8:	movne	r2, #1
   1dafc:	moveq	r2, #0
   1db00:	cmp	r1, #99	; 0x63
   1db04:	moveq	r2, #0
   1db08:	andne	r2, r2, #1
   1db0c:	cmp	r2, #0
   1db10:	bne	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1db14:	cmp	r0, #1
   1db18:	bne	1d910 <myhtml_insertion_mode_in_body@@Base+0xdc8>
   1db1c:	sub	r6, r6, #4
   1db20:	b	1da28 <myhtml_insertion_mode_in_body@@Base+0xee0>
   1db24:	mov	r3, #32
   1db28:	mov	r2, #1
   1db2c:	mov	r1, #99	; 0x63
   1db30:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1db34:	cmp	r0, #0
   1db38:	beq	1db48 <myhtml_insertion_mode_in_body@@Base+0x1000>
   1db3c:	mov	r1, r5
   1db40:	mov	r0, r4
   1db44:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1db48:	mov	r1, r5
   1db4c:	mov	r0, r4
   1db50:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1db54:	mov	r3, #6
   1db58:	str	r3, [r4, #164]	; 0xa4
   1db5c:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1db60:	mov	r3, #8
   1db64:	mov	r2, #1
   1db68:	mov	r1, #25
   1db6c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1db70:	cmp	r0, #0
   1db74:	beq	1db9c <myhtml_insertion_mode_in_body@@Base+0x1054>
   1db78:	mov	r2, #0
   1db7c:	mov	r1, r2
   1db80:	mov	r0, r4
   1db84:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1db88:	mov	r3, #0
   1db8c:	mov	r2, #1
   1db90:	mov	r1, #25
   1db94:	mov	r0, r4
   1db98:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1db9c:	mov	r0, r4
   1dba0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1dba4:	mov	r1, r5
   1dba8:	mov	r0, r4
   1dbac:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dbb0:	b	1d854 <myhtml_insertion_mode_in_body@@Base+0xd0c>
   1dbb4:	mov	r2, #0
   1dbb8:	mov	r1, #4
   1dbbc:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   1dbc0:	cmp	r0, #0
   1dbc4:	beq	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1dbc8:	mov	r2, #4
   1dbcc:	mov	r1, r5
   1dbd0:	mov	r0, r4
   1dbd4:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1dbd8:	mov	r2, #0
   1dbdc:	mov	r1, #4
   1dbe0:	mov	r0, r4
   1dbe4:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   1dbe8:	subs	r6, r0, #0
   1dbec:	beq	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1dbf0:	mov	r1, r6
   1dbf4:	mov	r0, r4
   1dbf8:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1dbfc:	mov	r1, r6
   1dc00:	mov	r0, r4
   1dc04:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   1dc08:	mov	r0, r4
   1dc0c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1dc10:	mov	r1, r5
   1dc14:	mov	r0, r4
   1dc18:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dc1c:	mov	r1, r0
   1dc20:	mov	r0, r4
   1dc24:	bl	10814 <myhtml_tree_active_formatting_append_with_check@plt>
   1dc28:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1dc2c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1dc30:	mov	r3, #8
   1dc34:	mov	r2, #1
   1dc38:	mov	r1, #90	; 0x5a
   1dc3c:	mov	r0, r4
   1dc40:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1dc44:	cmp	r0, #0
   1dc48:	beq	1dc10 <myhtml_insertion_mode_in_body@@Base+0x10c8>
   1dc4c:	mov	r2, #90	; 0x5a
   1dc50:	mov	r1, r5
   1dc54:	mov	r0, r4
   1dc58:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1dc5c:	b	1dc08 <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1dc60:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1dc64:	mov	r1, r5
   1dc68:	mov	r0, r4
   1dc6c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dc70:	ldr	r3, [r4]
   1dc74:	mov	r0, r4
   1dc78:	ldr	r1, [r3, #36]	; 0x24
   1dc7c:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1dc80:	b	1d854 <myhtml_insertion_mode_in_body@@Base+0xd0c>
   1dc84:	ldr	r3, [r0, #176]	; 0xb0
   1dc88:	tst	r3, #1
   1dc8c:	bne	1dcb4 <myhtml_insertion_mode_in_body@@Base+0x116c>
   1dc90:	mov	r3, #32
   1dc94:	mov	r2, #1
   1dc98:	mov	r1, #99	; 0x63
   1dc9c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1dca0:	cmp	r0, #0
   1dca4:	beq	1dcb4 <myhtml_insertion_mode_in_body@@Base+0x116c>
   1dca8:	mov	r1, r5
   1dcac:	mov	r0, r4
   1dcb0:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1dcb4:	mov	r1, r5
   1dcb8:	mov	r0, r4
   1dcbc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dcc0:	ldr	r3, [r4, #180]	; 0xb4
   1dcc4:	ldr	r2, [r4, #180]	; 0xb4
   1dcc8:	and	r3, r3, #2
   1dccc:	eor	r3, r3, r2
   1dcd0:	str	r3, [r4, #180]	; 0xb4
   1dcd4:	mov	r3, #8
   1dcd8:	b	1cdd0 <myhtml_insertion_mode_in_body@@Base+0x288>
   1dcdc:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1dce0:	mov	r1, r5
   1dce4:	mov	r0, r4
   1dce8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dcec:	mov	r0, r4
   1dcf0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1dcf4:	b	1d854 <myhtml_insertion_mode_in_body@@Base+0xd0c>
   1dcf8:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1dcfc:	mov	r1, r5
   1dd00:	mov	r0, r4
   1dd04:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dd08:	mov	r0, r4
   1dd0c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1dd10:	mov	r1, r5
   1dd14:	ldr	r0, [r4, #8]
   1dd18:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1dd1c:	mov	r3, #6
   1dd20:	str	r3, [sp, #4]
   1dd24:	ldr	r3, [pc, #696]	; 1dfe4 <myhtml_insertion_mode_in_body@@Base+0x149c>
   1dd28:	ldr	r2, [pc, #696]	; 1dfe8 <myhtml_insertion_mode_in_body@@Base+0x14a0>
   1dd2c:	add	r3, pc, r3
   1dd30:	str	r3, [sp]
   1dd34:	add	r2, pc, r2
   1dd38:	mov	r3, #4
   1dd3c:	mov	r1, r5
   1dd40:	ldr	r0, [r4, #8]
   1dd44:	bl	fd34 <myhtml_token_attr_match_case@plt>
   1dd48:	subs	r6, r0, #0
   1dd4c:	bne	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1dd50:	b	1d16c <myhtml_insertion_mode_in_body@@Base+0x624>
   1dd54:	mov	r1, r5
   1dd58:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1dd5c:	mov	r0, r4
   1dd60:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1dd64:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1dd68:	mov	r3, #32
   1dd6c:	mov	r2, #1
   1dd70:	mov	r1, #99	; 0x63
   1dd74:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1dd78:	cmp	r0, #0
   1dd7c:	beq	1dd8c <myhtml_insertion_mode_in_body@@Base+0x1244>
   1dd80:	mov	r1, r5
   1dd84:	mov	r0, r4
   1dd88:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1dd8c:	mov	r0, r4
   1dd90:	bl	10628 <myhtml_tree_current_node@plt>
   1dd94:	mov	r1, #85	; 0x55
   1dd98:	bl	10aa8 <myhtml_is_html_node@plt>
   1dd9c:	cmp	r0, #0
   1dda0:	beq	1dce0 <myhtml_insertion_mode_in_body@@Base+0x1198>
   1dda4:	mov	r0, r4
   1dda8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ddac:	b	1dce0 <myhtml_insertion_mode_in_body@@Base+0x1198>
   1ddb0:	mov	r3, #69	; 0x45
   1ddb4:	str	r3, [r5]
   1ddb8:	b	1ce0c <myhtml_insertion_mode_in_body@@Base+0x2c4>
   1ddbc:	mov	r1, r5
   1ddc0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ddc4:	ldr	r3, [r4, #180]	; 0xb4
   1ddc8:	orr	r3, r3, #192	; 0xc0
   1ddcc:	str	r3, [r4, #180]	; 0xb4
   1ddd0:	ldr	r3, [r4, #168]	; 0xa8
   1ddd4:	str	r3, [r4, #172]	; 0xac
   1ddd8:	ldr	r3, [r4, #180]	; 0xb4
   1dddc:	ldr	r2, [r4, #180]	; 0xb4
   1dde0:	and	r3, r3, #2
   1dde4:	eor	r3, r3, r2
   1dde8:	str	r3, [r4, #180]	; 0xb4
   1ddec:	mov	r3, #7
   1ddf0:	str	r3, [r4, #168]	; 0xa8
   1ddf4:	mov	r3, #2
   1ddf8:	b	1db58 <myhtml_insertion_mode_in_body@@Base+0x1010>
   1ddfc:	mov	r3, #32
   1de00:	mov	r2, #1
   1de04:	mov	r1, #99	; 0x63
   1de08:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1de0c:	cmp	r0, #0
   1de10:	beq	1de20 <myhtml_insertion_mode_in_body@@Base+0x12d8>
   1de14:	mov	r1, r5
   1de18:	mov	r0, r4
   1de1c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1de20:	mov	r0, r4
   1de24:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1de28:	ldr	r3, [r4, #180]	; 0xb4
   1de2c:	ldr	r2, [r4, #180]	; 0xb4
   1de30:	and	r3, r3, #2
   1de34:	eor	r3, r3, r2
   1de38:	str	r3, [r4, #180]	; 0xb4
   1de3c:	mov	r3, #4
   1de40:	str	r3, [r4, #164]	; 0xa4
   1de44:	mov	r1, r5
   1de48:	mov	r0, r4
   1de4c:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1de50:	b	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1de54:	ldr	r3, [r0, #180]	; 0xb4
   1de58:	tst	r3, #1
   1de5c:	bne	1de3c <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1de60:	mov	r0, r4
   1de64:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1de68:	b	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1de6c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1de70:	mov	r1, r5
   1de74:	mov	r0, r4
   1de78:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1de7c:	ldr	r3, [r4, #180]	; 0xb4
   1de80:	ldr	r0, [r4, #168]	; 0xa8
   1de84:	ldr	r2, [r4, #180]	; 0xb4
   1de88:	sub	r6, r0, #12
   1de8c:	and	r3, r3, #2
   1de90:	bic	r0, r0, #2
   1de94:	cmp	r0, #8
   1de98:	cmpne	r6, #2
   1de9c:	eor	r3, r3, r2
   1dea0:	str	r3, [r4, #180]	; 0xb4
   1dea4:	movhi	r3, #15
   1dea8:	movls	r6, #1
   1deac:	movhi	r6, #0
   1deb0:	strhi	r3, [r4, #168]	; 0xa8
   1deb4:	bhi	1cec0 <myhtml_insertion_mode_in_body@@Base+0x378>
   1deb8:	mov	r3, #16
   1debc:	b	1cdd0 <myhtml_insertion_mode_in_body@@Base+0x288>
   1dec0:	bl	10628 <myhtml_tree_current_node@plt>
   1dec4:	mov	r1, #97	; 0x61
   1dec8:	bl	10aa8 <myhtml_is_html_node@plt>
   1decc:	cmp	r0, #0
   1ded0:	beq	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1ded4:	mov	r0, r4
   1ded8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1dedc:	b	1de60 <myhtml_insertion_mode_in_body@@Base+0x1318>
   1dee0:	bl	10628 <myhtml_tree_current_node@plt>
   1dee4:	mov	r1, #85	; 0x55
   1dee8:	b	1dec8 <myhtml_insertion_mode_in_body@@Base+0x1380>
   1deec:	mov	r3, #8
   1def0:	mov	r2, #1
   1def4:	mov	r1, #109	; 0x6d
   1def8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1defc:	cmp	r0, #0
   1df00:	beq	1df14 <myhtml_insertion_mode_in_body@@Base+0x13cc>
   1df04:	mov	r2, #0
   1df08:	mov	r1, r2
   1df0c:	mov	r0, r4
   1df10:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1df14:	mov	r0, r4
   1df18:	bl	10628 <myhtml_tree_current_node@plt>
   1df1c:	b	1d938 <myhtml_insertion_mode_in_body@@Base+0xdf0>
   1df20:	mov	r2, #1
   1df24:	mov	r1, #109	; 0x6d
   1df28:	mov	r3, #8
   1df2c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1df30:	cmp	r0, #0
   1df34:	movne	r2, #1
   1df38:	movne	r1, #108	; 0x6c
   1df3c:	bne	1df0c <myhtml_insertion_mode_in_body@@Base+0x13c4>
   1df40:	b	1df14 <myhtml_insertion_mode_in_body@@Base+0x13cc>
   1df44:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1df48:	mov	r1, r5
   1df4c:	ldr	r0, [r4, #8]
   1df50:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1df54:	mov	r0, r5
   1df58:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1df5c:	mov	r0, r5
   1df60:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1df64:	mov	r1, r5
   1df68:	mov	r0, r4
   1df6c:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1df70:	mov	r3, #2
   1df74:	str	r3, [r0, #8]
   1df78:	ldr	r3, [r5, #48]	; 0x30
   1df7c:	tst	r3, #2
   1df80:	beq	1cdb4 <myhtml_insertion_mode_in_body@@Base+0x26c>
   1df84:	b	1dd5c <myhtml_insertion_mode_in_body@@Base+0x1214>
   1df88:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1df8c:	mov	r1, r5
   1df90:	ldr	r0, [r4, #8]
   1df94:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1df98:	mov	r0, r5
   1df9c:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1dfa0:	mov	r0, r5
   1dfa4:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1dfa8:	mov	r1, r5
   1dfac:	mov	r0, r4
   1dfb0:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1dfb4:	mov	r3, #3
   1dfb8:	b	1df74 <myhtml_insertion_mode_in_body@@Base+0x142c>
   1dfbc:	mov	r2, #0
   1dfc0:	mov	r1, r2
   1dfc4:	mov	r0, r4
   1dfc8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1dfcc:	mov	r0, r4
   1dfd0:	bl	10628 <myhtml_tree_current_node@plt>
   1dfd4:	ldr	r1, [r5]
   1dfd8:	bl	10aa8 <myhtml_is_html_node@plt>
   1dfdc:	ldr	r3, [r4, #128]	; 0x80
   1dfe0:	b	1d0b8 <myhtml_insertion_mode_in_body@@Base+0x570>
   1dfe4:	ldrdeq	r8, [sp], -r2
   1dfe8:	andeq	r5, r1, pc, asr #26

0001dfec <myhtml_insertion_mode_before_head@@Base>:
   1dfec:	push	{r4, r5, r6, lr}
   1dff0:	mov	r5, r0
   1dff4:	ldr	r4, [r1, #48]	; 0x30
   1dff8:	ldr	r6, [r1]
   1dffc:	ands	r4, r4, #1
   1e000:	beq	1e050 <myhtml_insertion_mode_before_head@@Base+0x64>
   1e004:	cmp	r6, #61	; 0x3d
   1e008:	beq	1e01c <myhtml_insertion_mode_before_head@@Base+0x30>
   1e00c:	bhi	1e040 <myhtml_insertion_mode_before_head@@Base+0x54>
   1e010:	sub	r0, r6, #23
   1e014:	cmp	r0, #1
   1e018:	bhi	1e048 <myhtml_insertion_mode_before_head@@Base+0x5c>
   1e01c:	mov	r2, #1
   1e020:	mov	r1, #61	; 0x3d
   1e024:	mov	r0, r5
   1e028:	bl	10970 <myhtml_tree_node_insert@plt>
   1e02c:	mov	r3, #3
   1e030:	str	r3, [r5, #168]	; 0xa8
   1e034:	mov	r4, #1
   1e038:	str	r0, [r5, #92]	; 0x5c
   1e03c:	b	1e074 <myhtml_insertion_mode_before_head@@Base+0x88>
   1e040:	cmp	r6, #65	; 0x41
   1e044:	beq	1e01c <myhtml_insertion_mode_before_head@@Base+0x30>
   1e048:	mov	r4, #0
   1e04c:	b	1e074 <myhtml_insertion_mode_before_head@@Base+0x88>
   1e050:	cmp	r6, #3
   1e054:	beq	1e074 <myhtml_insertion_mode_before_head@@Base+0x88>
   1e058:	bhi	1e07c <myhtml_insertion_mode_before_head@@Base+0x90>
   1e05c:	cmp	r6, #1
   1e060:	beq	1e094 <myhtml_insertion_mode_before_head@@Base+0xa8>
   1e064:	cmp	r6, #2
   1e068:	bne	1e01c <myhtml_insertion_mode_before_head@@Base+0x30>
   1e06c:	mov	r2, r4
   1e070:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e074:	mov	r0, r4
   1e078:	pop	{r4, r5, r6, pc}
   1e07c:	cmp	r6, #61	; 0x3d
   1e080:	beq	1e0ac <myhtml_insertion_mode_before_head@@Base+0xc0>
   1e084:	cmp	r6, #65	; 0x41
   1e088:	bne	1e01c <myhtml_insertion_mode_before_head@@Base+0x30>
   1e08c:	pop	{r4, r5, r6, lr}
   1e090:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1e094:	ldr	r3, [r1, #48]	; 0x30
   1e098:	tst	r3, #8
   1e09c:	bne	1e074 <myhtml_insertion_mode_before_head@@Base+0x88>
   1e0a0:	ldr	r0, [r0, #8]
   1e0a4:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1e0a8:	b	1e01c <myhtml_insertion_mode_before_head@@Base+0x30>
   1e0ac:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e0b0:	mov	r3, #3
   1e0b4:	str	r3, [r5, #168]	; 0xa8
   1e0b8:	str	r0, [r5, #92]	; 0x5c
   1e0bc:	b	1e074 <myhtml_insertion_mode_before_head@@Base+0x88>

0001e0c0 <myhtml_insertion_mode_in_head@@Base>:
   1e0c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1e0c4:	mov	r4, r0
   1e0c8:	ldr	r5, [r1, #48]	; 0x30
   1e0cc:	ldr	r6, [r1]
   1e0d0:	ands	r5, r5, #1
   1e0d4:	beq	1e190 <myhtml_insertion_mode_in_head@@Base+0xd0>
   1e0d8:	cmp	r6, #61	; 0x3d
   1e0dc:	beq	1e120 <myhtml_insertion_mode_in_head@@Base+0x60>
   1e0e0:	bhi	1e108 <myhtml_insertion_mode_in_head@@Base+0x48>
   1e0e4:	sub	r6, r6, #23
   1e0e8:	cmp	r6, #1
   1e0ec:	bhi	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e0f0:	mov	r0, r4
   1e0f4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e0f8:	mov	r3, #5
   1e0fc:	str	r3, [r4, #168]	; 0xa8
   1e100:	mov	r5, #1
   1e104:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e108:	cmp	r6, #65	; 0x41
   1e10c:	beq	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e110:	cmp	r6, #128	; 0x80
   1e114:	beq	1e130 <myhtml_insertion_mode_in_head@@Base+0x70>
   1e118:	mov	r5, #0
   1e11c:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e120:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e124:	mov	r3, #5
   1e128:	str	r3, [r4, #168]	; 0xa8
   1e12c:	b	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e130:	mov	r3, #0
   1e134:	mov	r2, #1
   1e138:	mov	r1, r6
   1e13c:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   1e140:	subs	r5, r0, #0
   1e144:	beq	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e148:	mov	r2, #0
   1e14c:	mov	r1, r2
   1e150:	mov	r0, r4
   1e154:	bl	fe30 <myhtml_tree_generate_all_implied_end_tags@plt>
   1e158:	mov	r0, r4
   1e15c:	bl	10628 <myhtml_tree_current_node@plt>
   1e160:	mov	r3, #0
   1e164:	mov	r2, #1
   1e168:	mov	r1, r6
   1e16c:	mov	r0, r4
   1e170:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1e174:	mov	r0, r4
   1e178:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1e17c:	mov	r0, r4
   1e180:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e184:	mov	r0, r4
   1e188:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1e18c:	b	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e190:	cmp	r6, #65	; 0x41
   1e194:	beq	1e304 <myhtml_insertion_mode_in_head@@Base+0x244>
   1e198:	mov	r8, r1
   1e19c:	bhi	1e1f8 <myhtml_insertion_mode_in_head@@Base+0x138>
   1e1a0:	cmp	r6, #16
   1e1a4:	bhi	1e1e4 <myhtml_insertion_mode_in_head@@Base+0x124>
   1e1a8:	cmp	r6, #15
   1e1ac:	bcs	1e21c <myhtml_insertion_mode_in_head@@Base+0x15c>
   1e1b0:	cmp	r6, #2
   1e1b4:	beq	1e2f8 <myhtml_insertion_mode_in_head@@Base+0x238>
   1e1b8:	cmp	r6, #3
   1e1bc:	beq	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e1c0:	cmp	r6, #1
   1e1c4:	bne	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e1c8:	ldr	r3, [r1, #48]	; 0x30
   1e1cc:	tst	r3, #8
   1e1d0:	beq	1e2e0 <myhtml_insertion_mode_in_head@@Base+0x220>
   1e1d4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e1d8:	mov	r0, r5
   1e1dc:	add	sp, sp, #12
   1e1e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e1e4:	cmp	r6, #19
   1e1e8:	beq	1e21c <myhtml_insertion_mode_in_head@@Base+0x15c>
   1e1ec:	cmp	r6, #61	; 0x3d
   1e1f0:	beq	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e1f4:	b	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e1f8:	cmp	r6, #93	; 0x5d
   1e1fc:	beq	1e320 <myhtml_insertion_mode_in_head@@Base+0x260>
   1e200:	bhi	1e234 <myhtml_insertion_mode_in_head@@Base+0x174>
   1e204:	cmp	r6, #86	; 0x56
   1e208:	beq	1e310 <myhtml_insertion_mode_in_head@@Base+0x250>
   1e20c:	cmp	r6, #92	; 0x5c
   1e210:	beq	1e354 <myhtml_insertion_mode_in_head@@Base+0x294>
   1e214:	cmp	r6, #78	; 0x4e
   1e218:	bne	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e21c:	mov	r1, r8
   1e220:	mov	r0, r4
   1e224:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e228:	mov	r0, r4
   1e22c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e230:	b	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e234:	cmp	r6, #120	; 0x78
   1e238:	beq	1e354 <myhtml_insertion_mode_in_head@@Base+0x294>
   1e23c:	bhi	1e2b0 <myhtml_insertion_mode_in_head@@Base+0x1f0>
   1e240:	cmp	r6, #112	; 0x70
   1e244:	bne	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e248:	add	r2, sp, #4
   1e24c:	mov	r1, r5
   1e250:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   1e254:	mov	r9, r0
   1e258:	mov	r0, r4
   1e25c:	bl	ffe0 <myhtml_tree_node_create@plt>
   1e260:	mov	r3, #1
   1e264:	ldr	r2, [sp, #4]
   1e268:	str	r3, [r0, #8]
   1e26c:	mov	r3, #3
   1e270:	str	r3, [r0]
   1e274:	mov	r1, r0
   1e278:	mov	r7, r0
   1e27c:	str	r6, [r0, #4]
   1e280:	str	r8, [r0, #32]
   1e284:	mov	r0, r9
   1e288:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   1e28c:	mov	r1, r7
   1e290:	mov	r0, r4
   1e294:	bl	10988 <myhtml_tree_open_elements_append@plt>
   1e298:	ldr	r3, [r4, #168]	; 0xa8
   1e29c:	str	r3, [r4, #172]	; 0xac
   1e2a0:	mov	r3, #7
   1e2a4:	str	r3, [r4, #168]	; 0xa8
   1e2a8:	mov	r3, #5
   1e2ac:	b	1e2d8 <myhtml_insertion_mode_in_head@@Base+0x218>
   1e2b0:	cmp	r6, #128	; 0x80
   1e2b4:	beq	1e37c <myhtml_insertion_mode_in_head@@Base+0x2bc>
   1e2b8:	cmp	r6, #134	; 0x86
   1e2bc:	bne	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e2c0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e2c4:	ldr	r3, [r4, #168]	; 0xa8
   1e2c8:	str	r3, [r4, #172]	; 0xac
   1e2cc:	mov	r3, #7
   1e2d0:	str	r3, [r4, #168]	; 0xa8
   1e2d4:	mov	r3, #2
   1e2d8:	str	r3, [r4, #164]	; 0xa4
   1e2dc:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e2e0:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1e2e4:	subs	r1, r0, #0
   1e2e8:	beq	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e2ec:	mov	r0, r4
   1e2f0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e2f4:	b	1e0f0 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e2f8:	mov	r2, r5
   1e2fc:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e300:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e304:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   1e308:	mov	r5, r0
   1e30c:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e310:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e314:	mov	r0, r4
   1e318:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e31c:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>
   1e320:	ldr	r3, [r0, #180]	; 0xb4
   1e324:	ands	r6, r3, #1
   1e328:	beq	1e348 <myhtml_insertion_mode_in_head@@Base+0x288>
   1e32c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e330:	ldr	r3, [r4, #168]	; 0xa8
   1e334:	str	r3, [r4, #172]	; 0xac
   1e338:	mov	r3, #7
   1e33c:	str	r3, [r4, #168]	; 0xa8
   1e340:	mov	r3, #4
   1e344:	b	1e2d8 <myhtml_insertion_mode_in_head@@Base+0x218>
   1e348:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e34c:	mov	r3, #4
   1e350:	b	1e128 <myhtml_insertion_mode_in_head@@Base+0x68>
   1e354:	mov	r1, r8
   1e358:	mov	r0, r4
   1e35c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e360:	ldr	r3, [r4, #168]	; 0xa8
   1e364:	str	r3, [r4, #172]	; 0xac
   1e368:	mov	r3, #7
   1e36c:	str	r3, [r4, #168]	; 0xa8
   1e370:	mov	r3, #4
   1e374:	str	r3, [r4, #164]	; 0xa4
   1e378:	b	1e118 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e37c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e380:	ldr	r3, [r4]
   1e384:	mov	r0, r4
   1e388:	ldr	r1, [r3, #36]	; 0x24
   1e38c:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1e390:	ldr	r3, [r4, #180]	; 0xb4
   1e394:	ldr	r2, [r4, #180]	; 0xb4
   1e398:	and	r3, r3, #2
   1e39c:	eor	r3, r3, r2
   1e3a0:	mov	r1, #17
   1e3a4:	str	r3, [r4, #180]	; 0xb4
   1e3a8:	str	r1, [r4, #168]	; 0xa8
   1e3ac:	mov	r0, r4
   1e3b0:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1e3b4:	b	1e1d8 <myhtml_insertion_mode_in_head@@Base+0x118>

0001e3b8 <myhtml_insertion_mode_in_template@@Base>:
   1e3b8:	ldr	r3, [r1, #48]	; 0x30
   1e3bc:	ldr	r2, [r1]
   1e3c0:	ands	r3, r3, #1
   1e3c4:	beq	1e3d4 <myhtml_insertion_mode_in_template@@Base+0x1c>
   1e3c8:	cmp	r2, #128	; 0x80
   1e3cc:	bne	1e59c <myhtml_insertion_mode_in_template@@Base+0x1e4>
   1e3d0:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1e3d4:	cmp	r2, #92	; 0x5c
   1e3d8:	push	{r4, lr}
   1e3dc:	mov	ip, r1
   1e3e0:	mov	lr, r0
   1e3e4:	beq	1e418 <myhtml_insertion_mode_in_template@@Base+0x60>
   1e3e8:	mov	r4, r0
   1e3ec:	bhi	1e474 <myhtml_insertion_mode_in_template@@Base+0xbc>
   1e3f0:	cmp	r2, #19
   1e3f4:	beq	1e418 <myhtml_insertion_mode_in_template@@Base+0x60>
   1e3f8:	bhi	1e428 <myhtml_insertion_mode_in_template@@Base+0x70>
   1e3fc:	cmp	r2, #1
   1e400:	bcc	1e444 <myhtml_insertion_mode_in_template@@Base+0x8c>
   1e404:	cmp	r2, #3
   1e408:	bls	1e520 <myhtml_insertion_mode_in_template@@Base+0x168>
   1e40c:	sub	r2, r2, #15
   1e410:	cmp	r2, #1
   1e414:	bhi	1e444 <myhtml_insertion_mode_in_template@@Base+0x8c>
   1e418:	mov	r0, lr
   1e41c:	mov	r1, ip
   1e420:	pop	{r4, lr}
   1e424:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1e428:	cmp	r2, #32
   1e42c:	beq	1e4c8 <myhtml_insertion_mode_in_template@@Base+0x110>
   1e430:	bhi	1e460 <myhtml_insertion_mode_in_template@@Base+0xa8>
   1e434:	cmp	r2, #27
   1e438:	beq	1e4c8 <myhtml_insertion_mode_in_template@@Base+0x110>
   1e43c:	cmp	r2, #31
   1e440:	beq	1e528 <myhtml_insertion_mode_in_template@@Base+0x170>
   1e444:	mov	r0, r4
   1e448:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e44c:	mov	r1, #6
   1e450:	mov	r0, r4
   1e454:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1e458:	mov	r3, #6
   1e45c:	b	1e4e0 <myhtml_insertion_mode_in_template@@Base+0x128>
   1e460:	cmp	r2, #78	; 0x4e
   1e464:	beq	1e418 <myhtml_insertion_mode_in_template@@Base+0x60>
   1e468:	cmp	r2, #86	; 0x56
   1e46c:	bne	1e444 <myhtml_insertion_mode_in_template@@Base+0x8c>
   1e470:	b	1e418 <myhtml_insertion_mode_in_template@@Base+0x60>
   1e474:	cmp	r2, #130	; 0x82
   1e478:	beq	1e4c8 <myhtml_insertion_mode_in_template@@Base+0x110>
   1e47c:	bhi	1e4ac <myhtml_insertion_mode_in_template@@Base+0xf4>
   1e480:	cmp	r2, #126	; 0x7e
   1e484:	beq	1e4c8 <myhtml_insertion_mode_in_template@@Base+0x110>
   1e488:	bhi	1e49c <myhtml_insertion_mode_in_template@@Base+0xe4>
   1e48c:	cmp	r2, #112	; 0x70
   1e490:	beq	1e418 <myhtml_insertion_mode_in_template@@Base+0x60>
   1e494:	cmp	r2, #120	; 0x78
   1e498:	b	1e46c <myhtml_insertion_mode_in_template@@Base+0xb4>
   1e49c:	cmp	r2, #127	; 0x7f
   1e4a0:	beq	1e558 <myhtml_insertion_mode_in_template@@Base+0x1a0>
   1e4a4:	cmp	r2, #128	; 0x80
   1e4a8:	b	1e46c <myhtml_insertion_mode_in_template@@Base+0xb4>
   1e4ac:	cmp	r2, #134	; 0x86
   1e4b0:	beq	1e418 <myhtml_insertion_mode_in_template@@Base+0x60>
   1e4b4:	bhi	1e4ec <myhtml_insertion_mode_in_template@@Base+0x134>
   1e4b8:	cmp	r2, #131	; 0x83
   1e4bc:	beq	1e558 <myhtml_insertion_mode_in_template@@Base+0x1a0>
   1e4c0:	cmp	r2, #132	; 0x84
   1e4c4:	bne	1e444 <myhtml_insertion_mode_in_template@@Base+0x8c>
   1e4c8:	mov	r0, r4
   1e4cc:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e4d0:	mov	r1, #8
   1e4d4:	mov	r0, r4
   1e4d8:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1e4dc:	mov	r3, #8
   1e4e0:	str	r3, [r4, #168]	; 0xa8
   1e4e4:	mov	r0, #1
   1e4e8:	pop	{r4, pc}
   1e4ec:	cmp	r2, #135	; 0x87
   1e4f0:	beq	1e540 <myhtml_insertion_mode_in_template@@Base+0x188>
   1e4f4:	cmp	r2, #251	; 0xfb
   1e4f8:	bne	1e444 <myhtml_insertion_mode_in_template@@Base+0x8c>
   1e4fc:	mov	r1, #128	; 0x80
   1e500:	mov	r2, #1
   1e504:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1e508:	subs	r1, r0, #0
   1e50c:	bne	1e574 <myhtml_insertion_mode_in_template@@Base+0x1bc>
   1e510:	mov	r0, r4
   1e514:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1e518:	mov	r0, #0
   1e51c:	pop	{r4, pc}
   1e520:	pop	{r4, lr}
   1e524:	b	1e3d0 <myhtml_insertion_mode_in_template@@Base+0x18>
   1e528:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e52c:	mov	r1, #11
   1e530:	mov	r0, r4
   1e534:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1e538:	mov	r3, #11
   1e53c:	b	1e4e0 <myhtml_insertion_mode_in_template@@Base+0x128>
   1e540:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e544:	mov	r1, #12
   1e548:	mov	r0, r4
   1e54c:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1e550:	mov	r3, #12
   1e554:	b	1e4e0 <myhtml_insertion_mode_in_template@@Base+0x128>
   1e558:	mov	r0, r4
   1e55c:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e560:	mov	r1, #13
   1e564:	mov	r0, r4
   1e568:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1e56c:	mov	r3, #13
   1e570:	b	1e4e0 <myhtml_insertion_mode_in_template@@Base+0x128>
   1e574:	mov	r2, #0
   1e578:	mov	r0, r4
   1e57c:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1e580:	mov	r0, r4
   1e584:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1e588:	mov	r0, r4
   1e58c:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1e590:	mov	r0, r4
   1e594:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1e598:	b	1e4e4 <myhtml_insertion_mode_in_template@@Base+0x12c>
   1e59c:	mov	r0, #0
   1e5a0:	bx	lr

0001e5a4 <myhtml_insertion_mode_in_head_noscript@@Base>:
   1e5a4:	ldr	r2, [r1, #48]	; 0x30
   1e5a8:	push	{r4, r5, r6, lr}
   1e5ac:	tst	r2, #1
   1e5b0:	mov	r5, r0
   1e5b4:	ldr	r4, [r1]
   1e5b8:	beq	1e5e0 <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   1e5bc:	cmp	r4, #24
   1e5c0:	beq	1e67c <myhtml_insertion_mode_in_head_noscript@@Base+0xd8>
   1e5c4:	cmp	r4, #93	; 0x5d
   1e5c8:	bne	1e5d8 <myhtml_insertion_mode_in_head_noscript@@Base+0x34>
   1e5cc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e5d0:	mov	r3, #3
   1e5d4:	str	r3, [r5, #168]	; 0xa8
   1e5d8:	mov	r0, #0
   1e5dc:	pop	{r4, r5, r6, pc}
   1e5e0:	cmp	r4, #61	; 0x3d
   1e5e4:	beq	1e5d8 <myhtml_insertion_mode_in_head_noscript@@Base+0x34>
   1e5e8:	mov	r3, r1
   1e5ec:	bhi	1e62c <myhtml_insertion_mode_in_head_noscript@@Base+0x88>
   1e5f0:	cmp	r4, #3
   1e5f4:	beq	1e5d8 <myhtml_insertion_mode_in_head_noscript@@Base+0x34>
   1e5f8:	bhi	1e61c <myhtml_insertion_mode_in_head_noscript@@Base+0x78>
   1e5fc:	cmp	r4, #1
   1e600:	beq	1e668 <myhtml_insertion_mode_in_head_noscript@@Base+0xc4>
   1e604:	cmp	r4, #2
   1e608:	movne	r0, r5
   1e60c:	bne	1e67c <myhtml_insertion_mode_in_head_noscript@@Base+0xd8>
   1e610:	mov	r1, r3
   1e614:	mov	r0, r5
   1e618:	b	1e674 <myhtml_insertion_mode_in_head_noscript@@Base+0xd0>
   1e61c:	cmp	r4, #16
   1e620:	beq	1e610 <myhtml_insertion_mode_in_head_noscript@@Base+0x6c>
   1e624:	cmp	r4, #19
   1e628:	b	1e608 <myhtml_insertion_mode_in_head_noscript@@Base+0x64>
   1e62c:	cmp	r4, #86	; 0x56
   1e630:	beq	1e610 <myhtml_insertion_mode_in_head_noscript@@Base+0x6c>
   1e634:	bhi	1e648 <myhtml_insertion_mode_in_head_noscript@@Base+0xa4>
   1e638:	cmp	r4, #65	; 0x41
   1e63c:	beq	1e660 <myhtml_insertion_mode_in_head_noscript@@Base+0xbc>
   1e640:	cmp	r4, #78	; 0x4e
   1e644:	b	1e608 <myhtml_insertion_mode_in_head_noscript@@Base+0x64>
   1e648:	cmp	r4, #93	; 0x5d
   1e64c:	beq	1e5d8 <myhtml_insertion_mode_in_head_noscript@@Base+0x34>
   1e650:	cmp	r4, #120	; 0x78
   1e654:	beq	1e610 <myhtml_insertion_mode_in_head_noscript@@Base+0x6c>
   1e658:	cmp	r4, #92	; 0x5c
   1e65c:	b	1e608 <myhtml_insertion_mode_in_head_noscript@@Base+0x64>
   1e660:	pop	{r4, r5, r6, lr}
   1e664:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1e668:	ldr	r3, [r1, #48]	; 0x30
   1e66c:	tst	r3, #8
   1e670:	beq	1e67c <myhtml_insertion_mode_in_head_noscript@@Base+0xd8>
   1e674:	pop	{r4, r5, r6, lr}
   1e678:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1e67c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e680:	mov	r3, #3
   1e684:	str	r3, [r5, #168]	; 0xa8
   1e688:	mov	r0, #1
   1e68c:	pop	{r4, r5, r6, pc}

0001e690 <myhtml_insertion_mode_after_head@@Base>:
   1e690:	push	{r4, r5, r6, lr}
   1e694:	mov	r4, r0
   1e698:	ldr	r5, [r1, #48]	; 0x30
   1e69c:	ldr	r3, [r1]
   1e6a0:	ands	r5, r5, #1
   1e6a4:	beq	1e6fc <myhtml_insertion_mode_after_head@@Base+0x6c>
   1e6a8:	cmp	r3, #65	; 0x41
   1e6ac:	beq	1e6c0 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e6b0:	bhi	1e6e4 <myhtml_insertion_mode_after_head@@Base+0x54>
   1e6b4:	sub	r3, r3, #23
   1e6b8:	cmp	r3, #1
   1e6bc:	bhi	1e6ec <myhtml_insertion_mode_after_head@@Base+0x5c>
   1e6c0:	mov	r2, #1
   1e6c4:	mov	r1, #23
   1e6c8:	mov	r0, r4
   1e6cc:	bl	10970 <myhtml_tree_node_insert@plt>
   1e6d0:	mov	r3, #6
   1e6d4:	str	r3, [r4, #168]	; 0xa8
   1e6d8:	mov	r5, #1
   1e6dc:	str	r0, [r4, #100]	; 0x64
   1e6e0:	b	1e744 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e6e4:	cmp	r3, #128	; 0x80
   1e6e8:	beq	1e6f4 <myhtml_insertion_mode_after_head@@Base+0x64>
   1e6ec:	mov	r5, #0
   1e6f0:	b	1e744 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e6f4:	pop	{r4, r5, r6, lr}
   1e6f8:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1e6fc:	cmp	r3, #61	; 0x3d
   1e700:	beq	1e6ec <myhtml_insertion_mode_after_head@@Base+0x5c>
   1e704:	mov	r6, r1
   1e708:	bhi	1e78c <myhtml_insertion_mode_after_head@@Base+0xfc>
   1e70c:	cmp	r3, #16
   1e710:	bhi	1e74c <myhtml_insertion_mode_after_head@@Base+0xbc>
   1e714:	cmp	r3, #15
   1e718:	bcs	1e764 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e71c:	cmp	r3, #2
   1e720:	beq	1e7f4 <myhtml_insertion_mode_after_head@@Base+0x164>
   1e724:	cmp	r3, #3
   1e728:	beq	1e6ec <myhtml_insertion_mode_after_head@@Base+0x5c>
   1e72c:	cmp	r3, #1
   1e730:	bne	1e6c0 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e734:	ldr	r3, [r1, #48]	; 0x30
   1e738:	tst	r3, #8
   1e73c:	beq	1e7dc <myhtml_insertion_mode_after_head@@Base+0x14c>
   1e740:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e744:	mov	r0, r5
   1e748:	pop	{r4, r5, r6, pc}
   1e74c:	cmp	r3, #23
   1e750:	beq	1e800 <myhtml_insertion_mode_after_head@@Base+0x170>
   1e754:	cmp	r3, #54	; 0x36
   1e758:	beq	1e828 <myhtml_insertion_mode_after_head@@Base+0x198>
   1e75c:	cmp	r3, #19
   1e760:	bne	1e6c0 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e764:	ldr	r1, [r4, #92]	; 0x5c
   1e768:	mov	r0, r4
   1e76c:	bl	10988 <myhtml_tree_open_elements_append@plt>
   1e770:	mov	r1, r6
   1e774:	mov	r0, r4
   1e778:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   1e77c:	ldr	r1, [r4, #92]	; 0x5c
   1e780:	mov	r0, r4
   1e784:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1e788:	b	1e6ec <myhtml_insertion_mode_after_head@@Base+0x5c>
   1e78c:	cmp	r3, #92	; 0x5c
   1e790:	beq	1e764 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e794:	bhi	1e7b8 <myhtml_insertion_mode_after_head@@Base+0x128>
   1e798:	cmp	r3, #78	; 0x4e
   1e79c:	beq	1e764 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e7a0:	cmp	r3, #86	; 0x56
   1e7a4:	beq	1e764 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e7a8:	cmp	r3, #65	; 0x41
   1e7ac:	bne	1e6c0 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e7b0:	pop	{r4, r5, r6, lr}
   1e7b4:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1e7b8:	cmp	r3, #120	; 0x78
   1e7bc:	beq	1e764 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e7c0:	bhi	1e7cc <myhtml_insertion_mode_after_head@@Base+0x13c>
   1e7c4:	cmp	r3, #112	; 0x70
   1e7c8:	b	1e760 <myhtml_insertion_mode_after_head@@Base+0xd0>
   1e7cc:	cmp	r3, #128	; 0x80
   1e7d0:	beq	1e764 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e7d4:	cmp	r3, #134	; 0x86
   1e7d8:	b	1e760 <myhtml_insertion_mode_after_head@@Base+0xd0>
   1e7dc:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1e7e0:	subs	r1, r0, #0
   1e7e4:	beq	1e6c0 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e7e8:	mov	r0, r4
   1e7ec:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e7f0:	b	1e6c0 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e7f4:	mov	r2, r5
   1e7f8:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e7fc:	b	1e744 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e800:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e804:	ldr	r3, [r4, #180]	; 0xb4
   1e808:	ldr	r2, [r4, #180]	; 0xb4
   1e80c:	and	r3, r3, #2
   1e810:	eor	r3, r3, r2
   1e814:	str	r3, [r4, #180]	; 0xb4
   1e818:	mov	r3, #6
   1e81c:	str	r0, [r4, #100]	; 0x64
   1e820:	str	r3, [r4, #168]	; 0xa8
   1e824:	b	1e744 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e828:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e82c:	mov	r3, #19
   1e830:	b	1e820 <myhtml_insertion_mode_after_head@@Base+0x190>

0001e834 <myhtml_insertion_mode_in_table@@Base>:
   1e834:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1e838:	mov	r4, r0
   1e83c:	ldr	r5, [r1, #48]	; 0x30
   1e840:	mov	r7, r1
   1e844:	ands	r5, r5, #1
   1e848:	ldr	r6, [r1]
   1e84c:	beq	1e8e0 <myhtml_insertion_mode_in_table@@Base+0xac>
   1e850:	cmp	r6, #125	; 0x7d
   1e854:	beq	1e8b0 <myhtml_insertion_mode_in_table@@Base+0x7c>
   1e858:	bhi	1e88c <myhtml_insertion_mode_in_table@@Base+0x58>
   1e85c:	cmp	r6, #32
   1e860:	bhi	1e884 <myhtml_insertion_mode_in_table@@Base+0x50>
   1e864:	cmp	r6, #31
   1e868:	bcs	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e86c:	cmp	r6, #23
   1e870:	beq	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e874:	cmp	r6, #27
   1e878:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1e87c:	mov	r5, #0
   1e880:	b	1eaa0 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e884:	cmp	r6, #65	; 0x41
   1e888:	b	1e878 <myhtml_insertion_mode_in_table@@Base+0x44>
   1e88c:	cmp	r6, #128	; 0x80
   1e890:	beq	1e9ac <myhtml_insertion_mode_in_table@@Base+0x178>
   1e894:	bcc	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e898:	cmp	r6, #130	; 0x82
   1e89c:	bcc	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1e8a0:	cmp	r6, #132	; 0x84
   1e8a4:	bls	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e8a8:	cmp	r6, #135	; 0x87
   1e8ac:	b	1e878 <myhtml_insertion_mode_in_table@@Base+0x44>
   1e8b0:	mov	r1, r6
   1e8b4:	mov	r3, #64	; 0x40
   1e8b8:	mov	r2, #1
   1e8bc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1e8c0:	subs	r1, r0, #0
   1e8c4:	beq	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e8c8:	mov	r0, r4
   1e8cc:	mov	r2, #0
   1e8d0:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1e8d4:	mov	r0, r4
   1e8d8:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1e8dc:	b	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e8e0:	cmp	r6, #120	; 0x78
   1e8e4:	mov	r8, r6
   1e8e8:	beq	1e9a4 <myhtml_insertion_mode_in_table@@Base+0x170>
   1e8ec:	bhi	1e9b8 <myhtml_insertion_mode_in_table@@Base+0x184>
   1e8f0:	cmp	r6, #31
   1e8f4:	beq	1eaac <myhtml_insertion_mode_in_table@@Base+0x278>
   1e8f8:	bhi	1e968 <myhtml_insertion_mode_in_table@@Base+0x134>
   1e8fc:	cmp	r6, #2
   1e900:	beq	1ea98 <myhtml_insertion_mode_in_table@@Base+0x264>
   1e904:	bhi	1e930 <myhtml_insertion_mode_in_table@@Base+0xfc>
   1e908:	cmp	r6, #1
   1e90c:	beq	1ea50 <myhtml_insertion_mode_in_table@@Base+0x21c>
   1e910:	mov	r3, #1
   1e914:	strb	r3, [r4, #188]	; 0xbc
   1e918:	mov	r1, r7
   1e91c:	mov	r0, r4
   1e920:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   1e924:	mov	r0, #0
   1e928:	strb	r0, [r4, #188]	; 0xbc
   1e92c:	b	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e930:	cmp	r6, #3
   1e934:	beq	1eaa0 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e938:	cmp	r6, #27
   1e93c:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1e940:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   1e944:	mov	r1, r7
   1e948:	mov	r0, r4
   1e94c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e950:	ldr	r3, [r4]
   1e954:	mov	r0, r4
   1e958:	ldr	r1, [r3, #36]	; 0x24
   1e95c:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1e960:	mov	r3, #10
   1e964:	b	1ea90 <myhtml_insertion_mode_in_table@@Base+0x25c>
   1e968:	cmp	r6, #52	; 0x34
   1e96c:	beq	1eb70 <myhtml_insertion_mode_in_table@@Base+0x33c>
   1e970:	bhi	1e994 <myhtml_insertion_mode_in_table@@Base+0x160>
   1e974:	cmp	r6, #32
   1e978:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1e97c:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   1e980:	mov	r1, r7
   1e984:	mov	r0, r4
   1e988:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e98c:	mov	r3, #11
   1e990:	b	1ea90 <myhtml_insertion_mode_in_table@@Base+0x25c>
   1e994:	cmp	r6, #70	; 0x46
   1e998:	beq	1eb10 <myhtml_insertion_mode_in_table@@Base+0x2dc>
   1e99c:	cmp	r6, #112	; 0x70
   1e9a0:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1e9a4:	mov	r1, r7
   1e9a8:	mov	r0, r4
   1e9ac:	add	sp, sp, #8
   1e9b0:	pop	{r4, r5, r6, r7, r8, lr}
   1e9b4:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1e9b8:	cmp	r6, #130	; 0x82
   1e9bc:	beq	1ead0 <myhtml_insertion_mode_in_table@@Base+0x29c>
   1e9c0:	bhi	1ea20 <myhtml_insertion_mode_in_table@@Base+0x1ec>
   1e9c4:	cmp	r6, #126	; 0x7e
   1e9c8:	beq	1ead0 <myhtml_insertion_mode_in_table@@Base+0x29c>
   1e9cc:	bhi	1ea10 <myhtml_insertion_mode_in_table@@Base+0x1dc>
   1e9d0:	cmp	r6, #125	; 0x7d
   1e9d4:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1e9d8:	mov	r3, #64	; 0x40
   1e9dc:	mov	r2, #1
   1e9e0:	mov	r1, r6
   1e9e4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1e9e8:	cmp	r0, #0
   1e9ec:	beq	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1e9f0:	mov	r0, r4
   1e9f4:	mov	r3, r5
   1e9f8:	mov	r2, #1
   1e9fc:	mov	r1, r6
   1ea00:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ea04:	mov	r0, r4
   1ea08:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1ea0c:	b	1eac8 <myhtml_insertion_mode_in_table@@Base+0x294>
   1ea10:	cmp	r6, #127	; 0x7f
   1ea14:	beq	1eaf0 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   1ea18:	cmp	r6, #128	; 0x80
   1ea1c:	b	1e9a0 <myhtml_insertion_mode_in_table@@Base+0x16c>
   1ea20:	cmp	r6, #132	; 0x84
   1ea24:	beq	1ead0 <myhtml_insertion_mode_in_table@@Base+0x29c>
   1ea28:	bcc	1eaf0 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   1ea2c:	cmp	r6, #135	; 0x87
   1ea30:	beq	1eaf0 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   1ea34:	cmp	r6, #251	; 0xfb
   1ea38:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1ea3c:	mov	r1, r7
   1ea40:	mov	r0, r4
   1ea44:	add	sp, sp, #8
   1ea48:	pop	{r4, r5, r6, r7, r8, lr}
   1ea4c:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1ea50:	bl	10628 <myhtml_tree_current_node@plt>
   1ea54:	ldr	r3, [r0, #4]
   1ea58:	sub	r3, r3, #125	; 0x7d
   1ea5c:	cmp	r3, #10
   1ea60:	ldrls	r8, [pc, #324]	; 1ebac <myhtml_insertion_mode_in_table@@Base+0x378>
   1ea64:	mvnls	r8, r8, lsr r3
   1ea68:	tst	r8, #1
   1ea6c:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1ea70:	ldr	r5, [r0, #8]
   1ea74:	cmp	r5, #1
   1ea78:	bne	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1ea7c:	ldr	r0, [r4, #136]	; 0x88
   1ea80:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   1ea84:	ldr	r3, [r4, #168]	; 0xa8
   1ea88:	str	r3, [r4, #172]	; 0xac
   1ea8c:	mov	r3, #9
   1ea90:	str	r3, [r4, #168]	; 0xa8
   1ea94:	b	1eaa0 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1ea98:	mov	r2, r5
   1ea9c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1eaa0:	mov	r0, r5
   1eaa4:	add	sp, sp, #8
   1eaa8:	pop	{r4, r5, r6, r7, r8, pc}
   1eaac:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   1eab0:	mov	r2, #1
   1eab4:	mov	r1, #32
   1eab8:	mov	r0, r4
   1eabc:	bl	10970 <myhtml_tree_node_insert@plt>
   1eac0:	mov	r3, #11
   1eac4:	str	r3, [r4, #168]	; 0xa8
   1eac8:	mov	r5, #1
   1eacc:	b	1eaa0 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1ead0:	mov	r0, r4
   1ead4:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   1ead8:	mov	r1, r7
   1eadc:	mov	r0, r4
   1eae0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eae4:	mov	r3, #12
   1eae8:	str	r3, [r4, #168]	; 0xa8
   1eaec:	b	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1eaf0:	mov	r0, r4
   1eaf4:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   1eaf8:	mov	r2, #1
   1eafc:	mov	r1, #126	; 0x7e
   1eb00:	mov	r0, r4
   1eb04:	bl	10970 <myhtml_tree_node_insert@plt>
   1eb08:	mov	r3, #12
   1eb0c:	b	1eac4 <myhtml_insertion_mode_in_table@@Base+0x290>
   1eb10:	ldr	r0, [r0, #8]
   1eb14:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1eb18:	mov	r3, #6
   1eb1c:	str	r3, [sp, #4]
   1eb20:	ldr	r3, [pc, #136]	; 1ebb0 <myhtml_insertion_mode_in_table@@Base+0x37c>
   1eb24:	ldr	r2, [pc, #136]	; 1ebb4 <myhtml_insertion_mode_in_table@@Base+0x380>
   1eb28:	add	r3, pc, r3
   1eb2c:	str	r3, [sp]
   1eb30:	add	r2, pc, r2
   1eb34:	mov	r3, #4
   1eb38:	mov	r1, r7
   1eb3c:	ldr	r0, [r4, #8]
   1eb40:	bl	fd34 <myhtml_token_attr_match_case@plt>
   1eb44:	cmp	r0, #0
   1eb48:	beq	1e910 <myhtml_insertion_mode_in_table@@Base+0xdc>
   1eb4c:	mov	r1, r7
   1eb50:	mov	r0, r4
   1eb54:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eb58:	mov	r0, r4
   1eb5c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1eb60:	ldr	r3, [r7, #48]	; 0x30
   1eb64:	orr	r3, r3, #2
   1eb68:	str	r3, [r7, #48]	; 0x30
   1eb6c:	b	1eaa0 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1eb70:	mov	r3, r5
   1eb74:	mov	r2, #1
   1eb78:	mov	r1, #128	; 0x80
   1eb7c:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1eb80:	ldr	r3, [r4, #104]	; 0x68
   1eb84:	cmp	r0, #0
   1eb88:	cmpeq	r3, #0
   1eb8c:	bne	1e87c <myhtml_insertion_mode_in_table@@Base+0x48>
   1eb90:	mov	r1, r7
   1eb94:	mov	r0, r4
   1eb98:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eb9c:	str	r0, [r4, #104]	; 0x68
   1eba0:	mov	r0, r4
   1eba4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1eba8:	b	1ea3c <myhtml_insertion_mode_in_table@@Base+0x208>
   1ebac:	andeq	r0, r0, r3, lsr #9
   1ebb0:	ldrdeq	r8, [sp], -r6
   1ebb4:	andeq	r4, r1, r3, asr pc

0001ebb8 <myhtml_insertion_mode_in_table_body@@Base>:
   1ebb8:	ldr	r3, [r1, #48]	; 0x30
   1ebbc:	push	{r4, r5, r6, lr}
   1ebc0:	ands	r5, r3, #1
   1ebc4:	mov	r6, r1
   1ebc8:	mov	r4, r0
   1ebcc:	ldr	r1, [r1]
   1ebd0:	beq	1ecf8 <myhtml_insertion_mode_in_table_body@@Base+0x140>
   1ebd4:	cmp	r1, #125	; 0x7d
   1ebd8:	beq	1ec74 <myhtml_insertion_mode_in_table_body@@Base+0xbc>
   1ebdc:	bhi	1ec10 <myhtml_insertion_mode_in_table_body@@Base+0x58>
   1ebe0:	cmp	r1, #32
   1ebe4:	bhi	1ec08 <myhtml_insertion_mode_in_table_body@@Base+0x50>
   1ebe8:	cmp	r1, #31
   1ebec:	bcs	1ec00 <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1ebf0:	cmp	r1, #23
   1ebf4:	beq	1ec00 <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1ebf8:	cmp	r1, #27
   1ebfc:	bne	1ed94 <myhtml_insertion_mode_in_table_body@@Base+0x1dc>
   1ec00:	mov	r0, #0
   1ec04:	pop	{r4, r5, r6, pc}
   1ec08:	cmp	r1, #65	; 0x41
   1ec0c:	b	1ebfc <myhtml_insertion_mode_in_table_body@@Base+0x44>
   1ec10:	cmp	r1, #130	; 0x82
   1ec14:	beq	1ec40 <myhtml_insertion_mode_in_table_body@@Base+0x88>
   1ec18:	bhi	1ec2c <myhtml_insertion_mode_in_table_body@@Base+0x74>
   1ec1c:	cmp	r1, #126	; 0x7e
   1ec20:	beq	1ec40 <myhtml_insertion_mode_in_table_body@@Base+0x88>
   1ec24:	cmp	r1, #127	; 0x7f
   1ec28:	b	1ebfc <myhtml_insertion_mode_in_table_body@@Base+0x44>
   1ec2c:	cmp	r1, #132	; 0x84
   1ec30:	beq	1ec40 <myhtml_insertion_mode_in_table_body@@Base+0x88>
   1ec34:	bcc	1ec00 <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1ec38:	cmp	r1, #135	; 0x87
   1ec3c:	b	1ebfc <myhtml_insertion_mode_in_table_body@@Base+0x44>
   1ec40:	mov	r3, #64	; 0x40
   1ec44:	mov	r2, #1
   1ec48:	mov	r0, r4
   1ec4c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ec50:	cmp	r0, #0
   1ec54:	beq	1ec00 <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1ec58:	mov	r0, r4
   1ec5c:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1ec60:	mov	r0, r4
   1ec64:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ec68:	mov	r3, #8
   1ec6c:	str	r3, [r4, #168]	; 0xa8
   1ec70:	b	1ec00 <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1ec74:	mov	r3, #64	; 0x40
   1ec78:	mov	r2, #1
   1ec7c:	mov	r1, #126	; 0x7e
   1ec80:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ec84:	mov	r3, #64	; 0x40
   1ec88:	mov	r2, #1
   1ec8c:	mov	r1, #130	; 0x82
   1ec90:	mov	r5, r0
   1ec94:	mov	r0, r4
   1ec98:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ec9c:	mov	r3, #64	; 0x40
   1eca0:	mov	r2, #1
   1eca4:	mov	r1, #132	; 0x84
   1eca8:	mov	r6, r0
   1ecac:	mov	r0, r4
   1ecb0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ecb4:	cmp	r5, #0
   1ecb8:	cmpeq	r6, #0
   1ecbc:	moveq	r5, #1
   1ecc0:	movne	r5, #0
   1ecc4:	cmp	r0, #0
   1ecc8:	movne	r5, #0
   1eccc:	andeq	r5, r5, #1
   1ecd0:	cmp	r5, #0
   1ecd4:	bne	1ec00 <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1ecd8:	mov	r0, r4
   1ecdc:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1ece0:	mov	r0, r4
   1ece4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ece8:	mov	r3, #8
   1ecec:	str	r3, [r4, #168]	; 0xa8
   1ecf0:	mov	r0, #1
   1ecf4:	pop	{r4, r5, r6, pc}
   1ecf8:	cmp	r1, #127	; 0x7f
   1ecfc:	beq	1ed74 <myhtml_insertion_mode_in_table_body@@Base+0x1bc>
   1ed00:	bhi	1ed38 <myhtml_insertion_mode_in_table_body@@Base+0x180>
   1ed04:	cmp	r1, #32
   1ed08:	bhi	1ed30 <myhtml_insertion_mode_in_table_body@@Base+0x178>
   1ed0c:	cmp	r1, #31
   1ed10:	bcs	1ed1c <myhtml_insertion_mode_in_table_body@@Base+0x164>
   1ed14:	cmp	r1, #27
   1ed18:	bne	1ed94 <myhtml_insertion_mode_in_table_body@@Base+0x1dc>
   1ed1c:	mov	r3, #64	; 0x40
   1ed20:	mov	r2, #1
   1ed24:	mov	r1, #126	; 0x7e
   1ed28:	mov	r0, r4
   1ed2c:	b	1ec80 <myhtml_insertion_mode_in_table_body@@Base+0xc8>
   1ed30:	cmp	r1, #126	; 0x7e
   1ed34:	b	1ed18 <myhtml_insertion_mode_in_table_body@@Base+0x160>
   1ed38:	cmp	r1, #131	; 0x83
   1ed3c:	beq	1ed74 <myhtml_insertion_mode_in_table_body@@Base+0x1bc>
   1ed40:	bhi	1ed4c <myhtml_insertion_mode_in_table_body@@Base+0x194>
   1ed44:	cmp	r1, #130	; 0x82
   1ed48:	b	1ed18 <myhtml_insertion_mode_in_table_body@@Base+0x160>
   1ed4c:	cmp	r1, #132	; 0x84
   1ed50:	beq	1ed1c <myhtml_insertion_mode_in_table_body@@Base+0x164>
   1ed54:	cmp	r1, #135	; 0x87
   1ed58:	bne	1ed94 <myhtml_insertion_mode_in_table_body@@Base+0x1dc>
   1ed5c:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1ed60:	mov	r1, r6
   1ed64:	mov	r0, r4
   1ed68:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ed6c:	mov	r3, #13
   1ed70:	b	1ec6c <myhtml_insertion_mode_in_table_body@@Base+0xb4>
   1ed74:	mov	r0, r4
   1ed78:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1ed7c:	mov	r2, #1
   1ed80:	mov	r1, #135	; 0x87
   1ed84:	mov	r0, r4
   1ed88:	bl	10970 <myhtml_tree_node_insert@plt>
   1ed8c:	mov	r3, #13
   1ed90:	b	1ecec <myhtml_insertion_mode_in_table_body@@Base+0x134>
   1ed94:	mov	r1, r6
   1ed98:	mov	r0, r4
   1ed9c:	pop	{r4, r5, r6, lr}
   1eda0:	b	10178 <myhtml_insertion_mode_in_table@plt>

0001eda4 <myhtml_insertion_mode_in_row@@Base>:
   1eda4:	ldr	r3, [r1, #48]	; 0x30
   1eda8:	push	{r4, r5, r6, lr}
   1edac:	tst	r3, #1
   1edb0:	mov	r5, r1
   1edb4:	mov	r4, r0
   1edb8:	ldr	r1, [r1]
   1edbc:	beq	1eec0 <myhtml_insertion_mode_in_row@@Base+0x11c>
   1edc0:	cmp	r1, #125	; 0x7d
   1edc4:	beq	1ee5c <myhtml_insertion_mode_in_row@@Base+0xb8>
   1edc8:	bhi	1edfc <myhtml_insertion_mode_in_row@@Base+0x58>
   1edcc:	cmp	r1, #32
   1edd0:	bhi	1edf4 <myhtml_insertion_mode_in_row@@Base+0x50>
   1edd4:	cmp	r1, #31
   1edd8:	bcs	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1eddc:	cmp	r1, #23
   1ede0:	beq	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1ede4:	cmp	r1, #27
   1ede8:	bne	1eee4 <myhtml_insertion_mode_in_row@@Base+0x140>
   1edec:	mov	r0, #0
   1edf0:	pop	{r4, r5, r6, pc}
   1edf4:	cmp	r1, #65	; 0x41
   1edf8:	b	1ede8 <myhtml_insertion_mode_in_row@@Base+0x44>
   1edfc:	cmp	r1, #130	; 0x82
   1ee00:	beq	1ee94 <myhtml_insertion_mode_in_row@@Base+0xf0>
   1ee04:	bhi	1ee18 <myhtml_insertion_mode_in_row@@Base+0x74>
   1ee08:	cmp	r1, #126	; 0x7e
   1ee0c:	beq	1ee94 <myhtml_insertion_mode_in_row@@Base+0xf0>
   1ee10:	cmp	r1, #127	; 0x7f
   1ee14:	b	1ede8 <myhtml_insertion_mode_in_row@@Base+0x44>
   1ee18:	cmp	r1, #132	; 0x84
   1ee1c:	beq	1ee94 <myhtml_insertion_mode_in_row@@Base+0xf0>
   1ee20:	bcc	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1ee24:	cmp	r1, #135	; 0x87
   1ee28:	bne	1eee4 <myhtml_insertion_mode_in_row@@Base+0x140>
   1ee2c:	mov	r3, #64	; 0x40
   1ee30:	mov	r2, #1
   1ee34:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ee38:	cmp	r0, #0
   1ee3c:	beq	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1ee40:	mov	r0, r4
   1ee44:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   1ee48:	mov	r0, r4
   1ee4c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ee50:	mov	r3, #12
   1ee54:	str	r3, [r4, #168]	; 0xa8
   1ee58:	b	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1ee5c:	mov	r3, #64	; 0x40
   1ee60:	mov	r2, #1
   1ee64:	mov	r1, #135	; 0x87
   1ee68:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ee6c:	cmp	r0, #0
   1ee70:	beq	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1ee74:	mov	r0, r4
   1ee78:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   1ee7c:	mov	r0, r4
   1ee80:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ee84:	mov	r3, #12
   1ee88:	str	r3, [r4, #168]	; 0xa8
   1ee8c:	mov	r0, #1
   1ee90:	pop	{r4, r5, r6, pc}
   1ee94:	mov	r3, #64	; 0x40
   1ee98:	mov	r2, #1
   1ee9c:	mov	r0, r4
   1eea0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1eea4:	cmp	r0, #0
   1eea8:	beq	1edec <myhtml_insertion_mode_in_row@@Base+0x48>
   1eeac:	mov	r3, #64	; 0x40
   1eeb0:	mov	r2, #1
   1eeb4:	mov	r1, #135	; 0x87
   1eeb8:	mov	r0, r4
   1eebc:	b	1ee68 <myhtml_insertion_mode_in_row@@Base+0xc4>
   1eec0:	cmp	r1, #127	; 0x7f
   1eec4:	beq	1ef20 <myhtml_insertion_mode_in_row@@Base+0x17c>
   1eec8:	bhi	1eefc <myhtml_insertion_mode_in_row@@Base+0x158>
   1eecc:	cmp	r1, #32
   1eed0:	bhi	1eef4 <myhtml_insertion_mode_in_row@@Base+0x150>
   1eed4:	cmp	r1, #31
   1eed8:	bcs	1eeac <myhtml_insertion_mode_in_row@@Base+0x108>
   1eedc:	cmp	r1, #27
   1eee0:	beq	1eeac <myhtml_insertion_mode_in_row@@Base+0x108>
   1eee4:	mov	r1, r5
   1eee8:	mov	r0, r4
   1eeec:	pop	{r4, r5, r6, lr}
   1eef0:	b	10178 <myhtml_insertion_mode_in_table@plt>
   1eef4:	cmp	r1, #126	; 0x7e
   1eef8:	b	1eee0 <myhtml_insertion_mode_in_row@@Base+0x13c>
   1eefc:	cmp	r1, #131	; 0x83
   1ef00:	beq	1ef20 <myhtml_insertion_mode_in_row@@Base+0x17c>
   1ef04:	bhi	1ef10 <myhtml_insertion_mode_in_row@@Base+0x16c>
   1ef08:	cmp	r1, #130	; 0x82
   1ef0c:	b	1eee0 <myhtml_insertion_mode_in_row@@Base+0x13c>
   1ef10:	cmp	r1, #132	; 0x84
   1ef14:	beq	1eeac <myhtml_insertion_mode_in_row@@Base+0x108>
   1ef18:	cmp	r1, #135	; 0x87
   1ef1c:	b	1eee0 <myhtml_insertion_mode_in_row@@Base+0x13c>
   1ef20:	mov	r0, r4
   1ef24:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   1ef28:	mov	r1, r5
   1ef2c:	mov	r0, r4
   1ef30:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ef34:	ldr	r3, [r4]
   1ef38:	mov	r0, r4
   1ef3c:	ldr	r1, [r3, #36]	; 0x24
   1ef40:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1ef44:	mov	r3, #14
   1ef48:	b	1ee54 <myhtml_insertion_mode_in_row@@Base+0xb0>

0001ef4c <myhtml_insertion_mode_in_table_text@@Base>:
   1ef4c:	ldr	r3, [r1]
   1ef50:	push	{r4, r5, r6, r7, r8, lr}
   1ef54:	cmp	r3, #1
   1ef58:	mov	r5, r0
   1ef5c:	ldrne	r6, [r0, #136]	; 0x88
   1ef60:	movne	r3, #0
   1ef64:	ldrne	r2, [r6, #4]
   1ef68:	bne	1efdc <myhtml_insertion_mode_in_table_text@@Base+0x90>
   1ef6c:	ldr	r3, [r1, #48]	; 0x30
   1ef70:	mov	r6, r1
   1ef74:	ands	r4, r3, #2048	; 0x800
   1ef78:	beq	1ef90 <myhtml_insertion_mode_in_table_text@@Base+0x44>
   1ef7c:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1ef80:	ldr	r0, [r6, #12]
   1ef84:	cmp	r0, #0
   1ef88:	popeq	{r4, r5, r6, r7, r8, pc}
   1ef8c:	mov	r1, r6
   1ef90:	ldr	r0, [r5, #136]	; 0x88
   1ef94:	bl	10ec8 <myhtml_tree_token_list_append@plt>
   1ef98:	mov	r0, #0
   1ef9c:	pop	{r4, r5, r6, r7, r8, pc}
   1efa0:	ldr	r1, [r6]
   1efa4:	ldr	r1, [r1, r3, lsl #2]
   1efa8:	ldr	r4, [r1, #48]	; 0x30
   1efac:	ands	r4, r4, #8
   1efb0:	bne	1efd8 <myhtml_insertion_mode_in_table_text@@Base+0x8c>
   1efb4:	mov	r7, #1
   1efb8:	mov	r8, r4
   1efbc:	ldr	r3, [r6, #4]
   1efc0:	cmp	r4, r3
   1efc4:	bcc	1f00c <myhtml_insertion_mode_in_table_text@@Base+0xc0>
   1efc8:	ldr	r3, [r5, #172]	; 0xac
   1efcc:	mov	r0, #1
   1efd0:	str	r3, [r5, #168]	; 0xa8
   1efd4:	pop	{r4, r5, r6, r7, r8, pc}
   1efd8:	add	r3, r3, #1
   1efdc:	cmp	r3, r2
   1efe0:	bne	1efa0 <myhtml_insertion_mode_in_table_text@@Base+0x54>
   1efe4:	mov	r4, #0
   1efe8:	ldr	r3, [r6, #4]
   1efec:	cmp	r4, r3
   1eff0:	bcs	1efc8 <myhtml_insertion_mode_in_table_text@@Base+0x7c>
   1eff4:	ldr	r3, [r6]
   1eff8:	mov	r0, r5
   1effc:	ldr	r1, [r3, r4, lsl #2]
   1f000:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f004:	add	r4, r4, #1
   1f008:	b	1efe8 <myhtml_insertion_mode_in_table_text@@Base+0x9c>
   1f00c:	ldr	r3, [r6]
   1f010:	strb	r7, [r5, #188]	; 0xbc
   1f014:	mov	r0, r5
   1f018:	ldr	r1, [r3, r4, lsl #2]
   1f01c:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   1f020:	add	r4, r4, #1
   1f024:	strb	r8, [r5, #188]	; 0xbc
   1f028:	b	1efbc <myhtml_insertion_mode_in_table_text@@Base+0x70>

0001f02c <myhtml_insertion_mode_in_caption@@Base>:
   1f02c:	ldr	r3, [r1, #48]	; 0x30
   1f030:	push	{r4, r5, r6, lr}
   1f034:	tst	r3, #1
   1f038:	mov	r5, r0
   1f03c:	ldr	r4, [r1]
   1f040:	beq	1f174 <myhtml_insertion_mode_in_caption@@Base+0x148>
   1f044:	cmp	r4, #125	; 0x7d
   1f048:	beq	1f110 <myhtml_insertion_mode_in_caption@@Base+0xe4>
   1f04c:	bhi	1f088 <myhtml_insertion_mode_in_caption@@Base+0x5c>
   1f050:	cmp	r4, #32
   1f054:	bhi	1f07c <myhtml_insertion_mode_in_caption@@Base+0x50>
   1f058:	cmp	r4, #31
   1f05c:	bcs	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f060:	cmp	r4, #23
   1f064:	beq	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f068:	cmp	r4, #27
   1f06c:	beq	1f0b0 <myhtml_insertion_mode_in_caption@@Base+0x84>
   1f070:	mov	r0, r5
   1f074:	pop	{r4, r5, r6, lr}
   1f078:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1f07c:	cmp	r4, #65	; 0x41
   1f080:	bne	1f070 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1f084:	b	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f088:	cmp	r4, #132	; 0x84
   1f08c:	bhi	1f0a8 <myhtml_insertion_mode_in_caption@@Base+0x7c>
   1f090:	cmp	r4, #130	; 0x82
   1f094:	bcs	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f098:	cmp	r4, #127	; 0x7f
   1f09c:	bhi	1f070 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1f0a0:	mov	r0, #0
   1f0a4:	pop	{r4, r5, r6, pc}
   1f0a8:	cmp	r4, #135	; 0x87
   1f0ac:	b	1f080 <myhtml_insertion_mode_in_caption@@Base+0x54>
   1f0b0:	mov	r3, #64	; 0x40
   1f0b4:	mov	r2, #1
   1f0b8:	mov	r1, r4
   1f0bc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f0c0:	cmp	r0, #0
   1f0c4:	beq	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f0c8:	mov	r2, #0
   1f0cc:	mov	r1, r2
   1f0d0:	mov	r0, r5
   1f0d4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f0d8:	mov	r0, r5
   1f0dc:	bl	10628 <myhtml_tree_current_node@plt>
   1f0e0:	mov	r1, r4
   1f0e4:	bl	10aa8 <myhtml_is_html_node@plt>
   1f0e8:	mov	r3, #0
   1f0ec:	mov	r2, #1
   1f0f0:	mov	r1, r4
   1f0f4:	mov	r0, r5
   1f0f8:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f0fc:	mov	r0, r5
   1f100:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1f104:	mov	r3, #8
   1f108:	str	r3, [r5, #168]	; 0xa8
   1f10c:	b	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f110:	mov	r3, #64	; 0x40
   1f114:	mov	r2, #1
   1f118:	mov	r1, #27
   1f11c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f120:	cmp	r0, #0
   1f124:	beq	1f0a0 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1f128:	mov	r2, #0
   1f12c:	mov	r1, r2
   1f130:	mov	r0, r5
   1f134:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f138:	mov	r0, r5
   1f13c:	bl	10628 <myhtml_tree_current_node@plt>
   1f140:	mov	r1, #27
   1f144:	bl	10aa8 <myhtml_is_html_node@plt>
   1f148:	mov	r3, #0
   1f14c:	mov	r2, #1
   1f150:	mov	r1, #27
   1f154:	mov	r0, r5
   1f158:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f15c:	mov	r0, r5
   1f160:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1f164:	mov	r3, #8
   1f168:	str	r3, [r5, #168]	; 0xa8
   1f16c:	mov	r0, #1
   1f170:	pop	{r4, r5, r6, pc}
   1f174:	cmp	r4, #127	; 0x7f
   1f178:	bhi	1f1b0 <myhtml_insertion_mode_in_caption@@Base+0x184>
   1f17c:	cmp	r4, #126	; 0x7e
   1f180:	bcs	1f19c <myhtml_insertion_mode_in_caption@@Base+0x170>
   1f184:	cmp	r4, #27
   1f188:	beq	1f19c <myhtml_insertion_mode_in_caption@@Base+0x170>
   1f18c:	bcc	1f070 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1f190:	sub	r4, r4, #31
   1f194:	cmp	r4, #1
   1f198:	bhi	1f070 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1f19c:	mov	r3, #64	; 0x40
   1f1a0:	mov	r2, #1
   1f1a4:	mov	r1, #27
   1f1a8:	mov	r0, r5
   1f1ac:	b	1f11c <myhtml_insertion_mode_in_caption@@Base+0xf0>
   1f1b0:	cmp	r4, #130	; 0x82
   1f1b4:	bcc	1f070 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1f1b8:	cmp	r4, #132	; 0x84
   1f1bc:	bls	1f19c <myhtml_insertion_mode_in_caption@@Base+0x170>
   1f1c0:	cmp	r4, #135	; 0x87
   1f1c4:	bne	1f070 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1f1c8:	b	1f19c <myhtml_insertion_mode_in_caption@@Base+0x170>

0001f1cc <myhtml_insertion_mode_in_column_group@@Base>:
   1f1cc:	push	{r4, r5, r6, lr}
   1f1d0:	mov	r6, r0
   1f1d4:	ldr	r4, [r1, #48]	; 0x30
   1f1d8:	ldr	r5, [r1]
   1f1dc:	ands	r4, r4, #1
   1f1e0:	beq	1f234 <myhtml_insertion_mode_in_column_group@@Base+0x68>
   1f1e4:	cmp	r5, #32
   1f1e8:	beq	1f204 <myhtml_insertion_mode_in_column_group@@Base+0x38>
   1f1ec:	cmp	r5, #128	; 0x80
   1f1f0:	beq	1f2f8 <myhtml_insertion_mode_in_column_group@@Base+0x12c>
   1f1f4:	cmp	r5, #31
   1f1f8:	bne	1f2a4 <myhtml_insertion_mode_in_column_group@@Base+0xd8>
   1f1fc:	mov	r4, #0
   1f200:	b	1f2d4 <myhtml_insertion_mode_in_column_group@@Base+0x108>
   1f204:	bl	10628 <myhtml_tree_current_node@plt>
   1f208:	cmp	r0, #0
   1f20c:	beq	1f1fc <myhtml_insertion_mode_in_column_group@@Base+0x30>
   1f210:	mov	r1, r5
   1f214:	bl	10aa8 <myhtml_is_html_node@plt>
   1f218:	cmp	r0, #0
   1f21c:	beq	1f1fc <myhtml_insertion_mode_in_column_group@@Base+0x30>
   1f220:	mov	r0, r6
   1f224:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f228:	mov	r3, #8
   1f22c:	str	r3, [r6, #168]	; 0xa8
   1f230:	b	1f1fc <myhtml_insertion_mode_in_column_group@@Base+0x30>
   1f234:	cmp	r5, #31
   1f238:	beq	1f2e8 <myhtml_insertion_mode_in_column_group@@Base+0x11c>
   1f23c:	bhi	1f26c <myhtml_insertion_mode_in_column_group@@Base+0xa0>
   1f240:	cmp	r5, #2
   1f244:	beq	1f2dc <myhtml_insertion_mode_in_column_group@@Base+0x110>
   1f248:	cmp	r5, #3
   1f24c:	beq	1f2d4 <myhtml_insertion_mode_in_column_group@@Base+0x108>
   1f250:	cmp	r5, #1
   1f254:	bne	1f2a0 <myhtml_insertion_mode_in_column_group@@Base+0xd4>
   1f258:	ldr	r3, [r1, #48]	; 0x30
   1f25c:	tst	r3, #8
   1f260:	beq	1f28c <myhtml_insertion_mode_in_column_group@@Base+0xc0>
   1f264:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f268:	b	1f2d4 <myhtml_insertion_mode_in_column_group@@Base+0x108>
   1f26c:	cmp	r5, #128	; 0x80
   1f270:	beq	1f2f8 <myhtml_insertion_mode_in_column_group@@Base+0x12c>
   1f274:	cmp	r5, #251	; 0xfb
   1f278:	beq	1f284 <myhtml_insertion_mode_in_column_group@@Base+0xb8>
   1f27c:	cmp	r5, #65	; 0x41
   1f280:	bne	1f2a0 <myhtml_insertion_mode_in_column_group@@Base+0xd4>
   1f284:	pop	{r4, r5, r6, lr}
   1f288:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1f28c:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1f290:	subs	r1, r0, #0
   1f294:	beq	1f2a0 <myhtml_insertion_mode_in_column_group@@Base+0xd4>
   1f298:	mov	r0, r6
   1f29c:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f2a0:	mov	r0, r6
   1f2a4:	bl	10628 <myhtml_tree_current_node@plt>
   1f2a8:	cmp	r0, #0
   1f2ac:	beq	1f1fc <myhtml_insertion_mode_in_column_group@@Base+0x30>
   1f2b0:	mov	r1, #32
   1f2b4:	bl	10aa8 <myhtml_is_html_node@plt>
   1f2b8:	cmp	r0, #0
   1f2bc:	beq	1f1fc <myhtml_insertion_mode_in_column_group@@Base+0x30>
   1f2c0:	mov	r0, r6
   1f2c4:	mov	r4, #1
   1f2c8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f2cc:	mov	r3, #8
   1f2d0:	str	r3, [r6, #168]	; 0xa8
   1f2d4:	mov	r0, r4
   1f2d8:	pop	{r4, r5, r6, pc}
   1f2dc:	mov	r2, r4
   1f2e0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1f2e4:	b	1f2d4 <myhtml_insertion_mode_in_column_group@@Base+0x108>
   1f2e8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f2ec:	mov	r0, r6
   1f2f0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f2f4:	b	1f2d4 <myhtml_insertion_mode_in_column_group@@Base+0x108>
   1f2f8:	pop	{r4, r5, r6, lr}
   1f2fc:	b	10058 <myhtml_insertion_mode_in_head@plt>

0001f300 <myhtml_insertion_mode_in_cell@@Base>:
   1f300:	ldr	r3, [r1, #48]	; 0x30
   1f304:	push	{r4, r5, r6, lr}
   1f308:	tst	r3, #1
   1f30c:	mov	r5, r1
   1f310:	mov	r4, r0
   1f314:	ldr	r1, [r1]
   1f318:	beq	1f460 <myhtml_insertion_mode_in_cell@@Base+0x160>
   1f31c:	cmp	r1, #126	; 0x7e
   1f320:	bhi	1f364 <myhtml_insertion_mode_in_cell@@Base+0x64>
   1f324:	cmp	r1, #125	; 0x7d
   1f328:	bcs	1f380 <myhtml_insertion_mode_in_cell@@Base+0x80>
   1f32c:	cmp	r1, #32
   1f330:	bhi	1f35c <myhtml_insertion_mode_in_cell@@Base+0x5c>
   1f334:	cmp	r1, #31
   1f338:	bcs	1f3ec <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f33c:	cmp	r1, #23
   1f340:	beq	1f3ec <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f344:	cmp	r1, #27
   1f348:	beq	1f3ec <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f34c:	mov	r1, r5
   1f350:	mov	r0, r4
   1f354:	pop	{r4, r5, r6, lr}
   1f358:	b	10178 <myhtml_insertion_mode_in_table@plt>
   1f35c:	cmp	r1, #65	; 0x41
   1f360:	b	1f348 <myhtml_insertion_mode_in_cell@@Base+0x48>
   1f364:	cmp	r1, #131	; 0x83
   1f368:	beq	1f3d4 <myhtml_insertion_mode_in_cell@@Base+0xd4>
   1f36c:	bhi	1f3c4 <myhtml_insertion_mode_in_cell@@Base+0xc4>
   1f370:	cmp	r1, #127	; 0x7f
   1f374:	beq	1f3d4 <myhtml_insertion_mode_in_cell@@Base+0xd4>
   1f378:	cmp	r1, #130	; 0x82
   1f37c:	bne	1f34c <myhtml_insertion_mode_in_cell@@Base+0x4c>
   1f380:	mov	r3, #64	; 0x40
   1f384:	mov	r2, #1
   1f388:	mov	r0, r4
   1f38c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f390:	cmp	r0, #0
   1f394:	beq	1f3ec <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f398:	mov	r1, #127	; 0x7f
   1f39c:	mov	r3, #64	; 0x40
   1f3a0:	mov	r2, #1
   1f3a4:	mov	r0, r4
   1f3a8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f3ac:	subs	r1, r0, #0
   1f3b0:	beq	1f43c <myhtml_insertion_mode_in_cell@@Base+0x13c>
   1f3b4:	mov	r2, r5
   1f3b8:	mov	r0, r4
   1f3bc:	bl	10d3c <myhtml_tree_close_cell@plt>
   1f3c0:	b	1f458 <myhtml_insertion_mode_in_cell@@Base+0x158>
   1f3c4:	cmp	r1, #132	; 0x84
   1f3c8:	beq	1f380 <myhtml_insertion_mode_in_cell@@Base+0x80>
   1f3cc:	cmp	r1, #135	; 0x87
   1f3d0:	b	1f37c <myhtml_insertion_mode_in_cell@@Base+0x7c>
   1f3d4:	mov	r3, #64	; 0x40
   1f3d8:	mov	r2, #1
   1f3dc:	mov	r0, r4
   1f3e0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f3e4:	cmp	r0, #0
   1f3e8:	bne	1f3f4 <myhtml_insertion_mode_in_cell@@Base+0xf4>
   1f3ec:	mov	r0, #0
   1f3f0:	pop	{r4, r5, r6, pc}
   1f3f4:	mov	r2, #0
   1f3f8:	mov	r1, r2
   1f3fc:	mov	r0, r4
   1f400:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f404:	mov	r0, r4
   1f408:	bl	10628 <myhtml_tree_current_node@plt>
   1f40c:	ldr	r1, [r5]
   1f410:	bl	10aa8 <myhtml_is_html_node@plt>
   1f414:	mov	r3, #0
   1f418:	mov	r2, #1
   1f41c:	ldr	r1, [r5]
   1f420:	mov	r0, r4
   1f424:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f428:	mov	r0, r4
   1f42c:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1f430:	mov	r3, #13
   1f434:	str	r3, [r4, #168]	; 0xa8
   1f438:	b	1f3ec <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f43c:	mov	r1, #131	; 0x83
   1f440:	mov	r3, #64	; 0x40
   1f444:	mov	r2, #1
   1f448:	mov	r0, r4
   1f44c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f450:	subs	r1, r0, #0
   1f454:	bne	1f3b4 <myhtml_insertion_mode_in_cell@@Base+0xb4>
   1f458:	mov	r0, #1
   1f45c:	pop	{r4, r5, r6, pc}
   1f460:	cmp	r1, #127	; 0x7f
   1f464:	bhi	1f4d4 <myhtml_insertion_mode_in_cell@@Base+0x1d4>
   1f468:	cmp	r1, #126	; 0x7e
   1f46c:	bcs	1f488 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1f470:	cmp	r1, #27
   1f474:	beq	1f488 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1f478:	bcc	1f4ec <myhtml_insertion_mode_in_cell@@Base+0x1ec>
   1f47c:	sub	r1, r1, #31
   1f480:	cmp	r1, #1
   1f484:	bhi	1f4ec <myhtml_insertion_mode_in_cell@@Base+0x1ec>
   1f488:	mov	r3, #64	; 0x40
   1f48c:	mov	r2, #1
   1f490:	mov	r1, #127	; 0x7f
   1f494:	mov	r0, r4
   1f498:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f49c:	mov	r3, #64	; 0x40
   1f4a0:	mov	r2, #1
   1f4a4:	mov	r1, #131	; 0x83
   1f4a8:	mov	r6, r0
   1f4ac:	mov	r0, r4
   1f4b0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f4b4:	cmp	r6, #0
   1f4b8:	cmpeq	r0, #0
   1f4bc:	beq	1f3ec <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f4c0:	cmp	r6, #0
   1f4c4:	mov	r2, r5
   1f4c8:	movne	r1, r6
   1f4cc:	moveq	r1, r0
   1f4d0:	b	1f3b8 <myhtml_insertion_mode_in_cell@@Base+0xb8>
   1f4d4:	cmp	r1, #130	; 0x82
   1f4d8:	bcc	1f4ec <myhtml_insertion_mode_in_cell@@Base+0x1ec>
   1f4dc:	cmp	r1, #132	; 0x84
   1f4e0:	bls	1f488 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1f4e4:	cmp	r1, #135	; 0x87
   1f4e8:	beq	1f488 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1f4ec:	mov	r1, r5
   1f4f0:	mov	r0, r4
   1f4f4:	pop	{r4, r5, r6, lr}
   1f4f8:	b	10640 <myhtml_insertion_mode_in_body@plt>

0001f4fc <myhtml_insertion_mode_in_select@@Base>:
   1f4fc:	push	{r4, r5, r6, r7, r8, lr}
   1f500:	mov	r6, r0
   1f504:	ldr	r5, [r1, #48]	; 0x30
   1f508:	ldr	r4, [r1]
   1f50c:	ands	r5, r5, #1
   1f510:	beq	1f5c4 <myhtml_insertion_mode_in_select@@Base+0xc8>
   1f514:	cmp	r4, #97	; 0x61
   1f518:	beq	1f5b8 <myhtml_insertion_mode_in_select@@Base+0xbc>
   1f51c:	bhi	1f530 <myhtml_insertion_mode_in_select@@Base+0x34>
   1f520:	cmp	r4, #96	; 0x60
   1f524:	beq	1f548 <myhtml_insertion_mode_in_select@@Base+0x4c>
   1f528:	mov	r0, #0
   1f52c:	pop	{r4, r5, r6, r7, r8, pc}
   1f530:	cmp	r4, #114	; 0x72
   1f534:	beq	1f728 <myhtml_insertion_mode_in_select@@Base+0x22c>
   1f538:	cmp	r4, #128	; 0x80
   1f53c:	bne	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f540:	pop	{r4, r5, r6, r7, r8, lr}
   1f544:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1f548:	bl	10628 <myhtml_tree_current_node@plt>
   1f54c:	mov	r1, #97	; 0x61
   1f550:	bl	10aa8 <myhtml_is_html_node@plt>
   1f554:	cmp	r0, #0
   1f558:	beq	1f594 <myhtml_insertion_mode_in_select@@Base+0x98>
   1f55c:	ldr	r2, [r6, #128]	; 0x80
   1f560:	ldr	r3, [r2, #4]
   1f564:	cmp	r3, #1
   1f568:	bls	1f594 <myhtml_insertion_mode_in_select@@Base+0x98>
   1f56c:	ldr	r3, [r2, #4]
   1f570:	ldr	r2, [r2]
   1f574:	sub	r3, r3, #-1073741822	; 0xc0000002
   1f578:	mov	r1, r4
   1f57c:	ldr	r0, [r2, r3, lsl #2]
   1f580:	bl	10aa8 <myhtml_is_html_node@plt>
   1f584:	cmp	r0, #0
   1f588:	beq	1f594 <myhtml_insertion_mode_in_select@@Base+0x98>
   1f58c:	mov	r0, r6
   1f590:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f594:	mov	r0, r6
   1f598:	bl	10628 <myhtml_tree_current_node@plt>
   1f59c:	mov	r1, #96	; 0x60
   1f5a0:	bl	10aa8 <myhtml_is_html_node@plt>
   1f5a4:	cmp	r0, #0
   1f5a8:	beq	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f5ac:	mov	r0, r6
   1f5b0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f5b4:	b	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f5b8:	bl	10628 <myhtml_tree_current_node@plt>
   1f5bc:	mov	r1, r4
   1f5c0:	b	1f5a0 <myhtml_insertion_mode_in_select@@Base+0xa4>
   1f5c4:	cmp	r4, #96	; 0x60
   1f5c8:	mov	r7, r1
   1f5cc:	beq	1f6dc <myhtml_insertion_mode_in_select@@Base+0x1e0>
   1f5d0:	bhi	1f644 <myhtml_insertion_mode_in_select@@Base+0x148>
   1f5d4:	cmp	r4, #65	; 0x41
   1f5d8:	beq	1f758 <myhtml_insertion_mode_in_select@@Base+0x25c>
   1f5dc:	bhi	1f5fc <myhtml_insertion_mode_in_select@@Base+0x100>
   1f5e0:	cmp	r4, #1
   1f5e4:	beq	1f684 <myhtml_insertion_mode_in_select@@Base+0x188>
   1f5e8:	cmp	r4, #2
   1f5ec:	bne	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f5f0:	mov	r2, r5
   1f5f4:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1f5f8:	b	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f5fc:	cmp	r4, #70	; 0x46
   1f600:	beq	1f60c <myhtml_insertion_mode_in_select@@Base+0x110>
   1f604:	cmp	r4, #74	; 0x4a
   1f608:	bne	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f60c:	mov	r1, #114	; 0x72
   1f610:	mov	r3, #128	; 0x80
   1f614:	mov	r2, #1
   1f618:	mov	r0, r6
   1f61c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f620:	subs	r1, r0, #0
   1f624:	beq	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f628:	mov	r2, #0
   1f62c:	mov	r0, r6
   1f630:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f634:	mov	r0, r6
   1f638:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f63c:	mov	r0, #1
   1f640:	pop	{r4, r5, r6, r7, r8, pc}
   1f644:	cmp	r4, #114	; 0x72
   1f648:	beq	1f728 <myhtml_insertion_mode_in_select@@Base+0x22c>
   1f64c:	bhi	1f66c <myhtml_insertion_mode_in_select@@Base+0x170>
   1f650:	cmp	r4, #97	; 0x61
   1f654:	beq	1f6b0 <myhtml_insertion_mode_in_select@@Base+0x1b4>
   1f658:	cmp	r4, #112	; 0x70
   1f65c:	bne	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f660:	mov	r1, r7
   1f664:	mov	r0, r6
   1f668:	b	1f540 <myhtml_insertion_mode_in_select@@Base+0x44>
   1f66c:	cmp	r4, #129	; 0x81
   1f670:	beq	1f60c <myhtml_insertion_mode_in_select@@Base+0x110>
   1f674:	cmp	r4, #251	; 0xfb
   1f678:	beq	1f758 <myhtml_insertion_mode_in_select@@Base+0x25c>
   1f67c:	cmp	r4, #128	; 0x80
   1f680:	b	1f65c <myhtml_insertion_mode_in_select@@Base+0x160>
   1f684:	ldr	r3, [r1, #48]	; 0x30
   1f688:	tst	r3, #2048	; 0x800
   1f68c:	beq	1f6a0 <myhtml_insertion_mode_in_select@@Base+0x1a4>
   1f690:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f694:	ldr	r3, [r7, #12]
   1f698:	cmp	r3, #0
   1f69c:	beq	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f6a0:	mov	r1, r7
   1f6a4:	mov	r0, r6
   1f6a8:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f6ac:	b	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f6b0:	bl	10628 <myhtml_tree_current_node@plt>
   1f6b4:	ldr	r1, [r7]
   1f6b8:	bl	10aa8 <myhtml_is_html_node@plt>
   1f6bc:	cmp	r0, #0
   1f6c0:	beq	1f6cc <myhtml_insertion_mode_in_select@@Base+0x1d0>
   1f6c4:	mov	r0, r6
   1f6c8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f6cc:	mov	r1, r7
   1f6d0:	mov	r0, r6
   1f6d4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f6d8:	b	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f6dc:	bl	10628 <myhtml_tree_current_node@plt>
   1f6e0:	ldr	r3, [r0, #4]
   1f6e4:	cmp	r3, #97	; 0x61
   1f6e8:	bne	1f700 <myhtml_insertion_mode_in_select@@Base+0x204>
   1f6ec:	ldr	r3, [r0, #8]
   1f6f0:	cmp	r3, #1
   1f6f4:	bne	1f700 <myhtml_insertion_mode_in_select@@Base+0x204>
   1f6f8:	mov	r0, r6
   1f6fc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f700:	mov	r0, r6
   1f704:	bl	10628 <myhtml_tree_current_node@plt>
   1f708:	ldr	r3, [r7]
   1f70c:	ldr	r2, [r0, #4]
   1f710:	cmp	r2, r3
   1f714:	bne	1f6cc <myhtml_insertion_mode_in_select@@Base+0x1d0>
   1f718:	ldr	r3, [r0, #8]
   1f71c:	cmp	r3, #1
   1f720:	bne	1f6cc <myhtml_insertion_mode_in_select@@Base+0x1d0>
   1f724:	b	1f6c4 <myhtml_insertion_mode_in_select@@Base+0x1c8>
   1f728:	mov	r1, r4
   1f72c:	mov	r3, #128	; 0x80
   1f730:	mov	r2, #1
   1f734:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f738:	subs	r1, r0, #0
   1f73c:	beq	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f740:	mov	r0, r6
   1f744:	mov	r2, #0
   1f748:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f74c:	mov	r0, r6
   1f750:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f754:	b	1f528 <myhtml_insertion_mode_in_select@@Base+0x2c>
   1f758:	pop	{r4, r5, r6, r7, r8, lr}
   1f75c:	b	10640 <myhtml_insertion_mode_in_body@plt>

0001f760 <myhtml_insertion_mode_in_select_in_table@@Base>:
   1f760:	ldr	r3, [r1, #48]	; 0x30
   1f764:	push	{r4, lr}
   1f768:	tst	r3, #1
   1f76c:	mov	r4, r0
   1f770:	ldr	r0, [r1]
   1f774:	beq	1f7e8 <myhtml_insertion_mode_in_select_in_table@@Base+0x88>
   1f778:	cmp	r0, #127	; 0x7f
   1f77c:	bhi	1f7d0 <myhtml_insertion_mode_in_select_in_table@@Base+0x70>
   1f780:	cmp	r0, #125	; 0x7d
   1f784:	bcs	1f790 <myhtml_insertion_mode_in_select_in_table@@Base+0x30>
   1f788:	cmp	r0, #27
   1f78c:	bne	1f800 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   1f790:	mov	r1, r0
   1f794:	mov	r3, #64	; 0x40
   1f798:	mov	r2, #1
   1f79c:	mov	r0, r4
   1f7a0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f7a4:	cmp	r0, #0
   1f7a8:	popeq	{r4, pc}
   1f7ac:	mov	r3, #0
   1f7b0:	mov	r2, #1
   1f7b4:	mov	r1, #114	; 0x72
   1f7b8:	mov	r0, r4
   1f7bc:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f7c0:	mov	r0, r4
   1f7c4:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f7c8:	mov	r0, #1
   1f7cc:	pop	{r4, pc}
   1f7d0:	cmp	r0, #130	; 0x82
   1f7d4:	bcc	1f800 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   1f7d8:	cmp	r0, #132	; 0x84
   1f7dc:	bls	1f790 <myhtml_insertion_mode_in_select_in_table@@Base+0x30>
   1f7e0:	cmp	r0, #135	; 0x87
   1f7e4:	b	1f78c <myhtml_insertion_mode_in_select_in_table@@Base+0x2c>
   1f7e8:	cmp	r0, #127	; 0x7f
   1f7ec:	bhi	1f80c <myhtml_insertion_mode_in_select_in_table@@Base+0xac>
   1f7f0:	cmp	r0, #125	; 0x7d
   1f7f4:	bcs	1f7ac <myhtml_insertion_mode_in_select_in_table@@Base+0x4c>
   1f7f8:	cmp	r0, #27
   1f7fc:	beq	1f7ac <myhtml_insertion_mode_in_select_in_table@@Base+0x4c>
   1f800:	mov	r0, r4
   1f804:	pop	{r4, lr}
   1f808:	b	103c4 <myhtml_insertion_mode_in_select@plt>
   1f80c:	cmp	r0, #130	; 0x82
   1f810:	bcc	1f800 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   1f814:	cmp	r0, #132	; 0x84
   1f818:	bls	1f7ac <myhtml_insertion_mode_in_select_in_table@@Base+0x4c>
   1f81c:	cmp	r0, #135	; 0x87
   1f820:	b	1f7fc <myhtml_insertion_mode_in_select_in_table@@Base+0x9c>

0001f824 <myhtml_insertion_mode_after_body@@Base>:
   1f824:	push	{r4, r5, r6, r7, r8, lr}
   1f828:	mov	r3, r0
   1f82c:	ldr	r5, [r1, #48]	; 0x30
   1f830:	ldr	r4, [r1]
   1f834:	ands	r5, r5, #1
   1f838:	beq	1f85c <myhtml_insertion_mode_after_body@@Base+0x38>
   1f83c:	cmp	r4, #65	; 0x41
   1f840:	bne	1f87c <myhtml_insertion_mode_after_body@@Base+0x58>
   1f844:	ldr	r0, [r0, #88]	; 0x58
   1f848:	cmp	r0, #0
   1f84c:	bne	1f8f0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   1f850:	mov	r2, #21
   1f854:	str	r2, [r3, #168]	; 0xa8
   1f858:	pop	{r4, r5, r6, r7, r8, pc}
   1f85c:	cmp	r4, #3
   1f860:	beq	1f8f0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   1f864:	bhi	1f88c <myhtml_insertion_mode_after_body@@Base+0x68>
   1f868:	cmp	r4, #1
   1f86c:	mov	r6, r1
   1f870:	beq	1f8a4 <myhtml_insertion_mode_after_body@@Base+0x80>
   1f874:	cmp	r4, #2
   1f878:	beq	1f8b8 <myhtml_insertion_mode_after_body@@Base+0x94>
   1f87c:	mov	r2, #6
   1f880:	str	r2, [r3, #168]	; 0xa8
   1f884:	mov	r0, #1
   1f888:	pop	{r4, r5, r6, r7, r8, pc}
   1f88c:	cmp	r4, #65	; 0x41
   1f890:	beq	1f8b0 <myhtml_insertion_mode_after_body@@Base+0x8c>
   1f894:	cmp	r4, #251	; 0xfb
   1f898:	bne	1f87c <myhtml_insertion_mode_after_body@@Base+0x58>
   1f89c:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1f8a0:	b	1f8f0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   1f8a4:	ldr	r2, [r1, #48]	; 0x30
   1f8a8:	tst	r2, #8
   1f8ac:	beq	1f87c <myhtml_insertion_mode_after_body@@Base+0x58>
   1f8b0:	pop	{r4, r5, r6, r7, r8, lr}
   1f8b4:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1f8b8:	ldr	r2, [r0, #128]	; 0x80
   1f8bc:	ldr	r3, [r2, #4]
   1f8c0:	cmp	r3, #0
   1f8c4:	beq	1f8f0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   1f8c8:	ldr	r3, [r2]
   1f8cc:	ldr	r7, [r3]
   1f8d0:	bl	ffe0 <myhtml_tree_node_create@plt>
   1f8d4:	ldr	r3, [r7, #8]
   1f8d8:	mov	r1, r0
   1f8dc:	str	r4, [r0, #4]
   1f8e0:	str	r6, [r0, #32]
   1f8e4:	str	r3, [r0, #8]
   1f8e8:	mov	r0, r7
   1f8ec:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1f8f0:	mov	r0, #0
   1f8f4:	pop	{r4, r5, r6, r7, r8, pc}

0001f8f8 <myhtml_insertion_mode_in_frameset@@Base>:
   1f8f8:	push	{r4, r5, r6, lr}
   1f8fc:	mov	r5, r0
   1f900:	ldr	r4, [r1, #48]	; 0x30
   1f904:	ldr	r3, [r1]
   1f908:	ands	r4, r4, #1
   1f90c:	beq	1f974 <myhtml_insertion_mode_in_frameset@@Base+0x7c>
   1f910:	cmp	r3, #54	; 0x36
   1f914:	bne	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f918:	bl	10628 <myhtml_tree_current_node@plt>
   1f91c:	ldr	r3, [r5, #84]	; 0x54
   1f920:	ldr	r3, [r3, #20]
   1f924:	cmp	r3, r0
   1f928:	bne	1f934 <myhtml_insertion_mode_in_frameset@@Base+0x3c>
   1f92c:	mov	r4, #0
   1f930:	b	1fa00 <myhtml_insertion_mode_in_frameset@@Base+0x108>
   1f934:	mov	r0, r5
   1f938:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f93c:	mov	r0, r5
   1f940:	bl	10628 <myhtml_tree_current_node@plt>
   1f944:	ldr	r3, [r5, #88]	; 0x58
   1f948:	cmp	r3, #0
   1f94c:	bne	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f950:	ldr	r3, [r0, #4]
   1f954:	cmp	r3, #54	; 0x36
   1f958:	bne	1f968 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f95c:	ldr	r3, [r0, #8]
   1f960:	cmp	r3, #1
   1f964:	beq	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f968:	mov	r3, #20
   1f96c:	str	r3, [r5, #168]	; 0xa8
   1f970:	b	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f974:	cmp	r3, #54	; 0x36
   1f978:	beq	1fa08 <myhtml_insertion_mode_in_frameset@@Base+0x110>
   1f97c:	bhi	1f9b8 <myhtml_insertion_mode_in_frameset@@Base+0xc0>
   1f980:	cmp	r3, #2
   1f984:	beq	1f9f8 <myhtml_insertion_mode_in_frameset@@Base+0x100>
   1f988:	cmp	r3, #53	; 0x35
   1f98c:	beq	1fa10 <myhtml_insertion_mode_in_frameset@@Base+0x118>
   1f990:	cmp	r3, #1
   1f994:	bne	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f998:	ldr	r3, [r1, #48]	; 0x30
   1f99c:	mov	r6, r1
   1f9a0:	tst	r3, #8
   1f9a4:	beq	1f9d8 <myhtml_insertion_mode_in_frameset@@Base+0xe0>
   1f9a8:	mov	r1, r6
   1f9ac:	mov	r0, r5
   1f9b0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f9b4:	b	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f9b8:	cmp	r3, #92	; 0x5c
   1f9bc:	beq	1fa20 <myhtml_insertion_mode_in_frameset@@Base+0x128>
   1f9c0:	cmp	r3, #251	; 0xfb
   1f9c4:	beq	1fa28 <myhtml_insertion_mode_in_frameset@@Base+0x130>
   1f9c8:	cmp	r3, #65	; 0x41
   1f9cc:	bne	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f9d0:	pop	{r4, r5, r6, lr}
   1f9d4:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1f9d8:	ldr	r0, [r0, #8]
   1f9dc:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f9e0:	add	r0, r6, #4
   1f9e4:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   1f9e8:	ldr	r3, [r6, #12]
   1f9ec:	cmp	r3, #0
   1f9f0:	beq	1f92c <myhtml_insertion_mode_in_frameset@@Base+0x34>
   1f9f4:	b	1f9a8 <myhtml_insertion_mode_in_frameset@@Base+0xb0>
   1f9f8:	mov	r2, r4
   1f9fc:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1fa00:	mov	r0, r4
   1fa04:	pop	{r4, r5, r6, pc}
   1fa08:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fa0c:	b	1fa00 <myhtml_insertion_mode_in_frameset@@Base+0x108>
   1fa10:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fa14:	mov	r0, r5
   1fa18:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fa1c:	b	1fa00 <myhtml_insertion_mode_in_frameset@@Base+0x108>
   1fa20:	pop	{r4, r5, r6, lr}
   1fa24:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1fa28:	bl	10628 <myhtml_tree_current_node@plt>
   1fa2c:	mov	r0, r5
   1fa30:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1fa34:	b	1fa00 <myhtml_insertion_mode_in_frameset@@Base+0x108>

0001fa38 <myhtml_insertion_mode_after_frameset@@Base>:
   1fa38:	push	{r4, r5, r6, lr}
   1fa3c:	mov	r6, r0
   1fa40:	ldr	r4, [r1, #48]	; 0x30
   1fa44:	ldr	r3, [r1]
   1fa48:	ands	r4, r4, #1
   1fa4c:	beq	1fa64 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   1fa50:	cmp	r3, #65	; 0x41
   1fa54:	moveq	r3, #22
   1fa58:	streq	r3, [r0, #168]	; 0xa8
   1fa5c:	mov	r0, #0
   1fa60:	pop	{r4, r5, r6, pc}
   1fa64:	cmp	r3, #65	; 0x41
   1fa68:	beq	1fae4 <myhtml_insertion_mode_after_frameset@@Base+0xac>
   1fa6c:	bhi	1fa8c <myhtml_insertion_mode_after_frameset@@Base+0x54>
   1fa70:	cmp	r3, #1
   1fa74:	beq	1faa4 <myhtml_insertion_mode_after_frameset@@Base+0x6c>
   1fa78:	cmp	r3, #2
   1fa7c:	bne	1fa5c <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1fa80:	mov	r2, r4
   1fa84:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1fa88:	b	1fa5c <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1fa8c:	cmp	r3, #92	; 0x5c
   1fa90:	beq	1faec <myhtml_insertion_mode_after_frameset@@Base+0xb4>
   1fa94:	cmp	r3, #251	; 0xfb
   1fa98:	bne	1fa5c <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1fa9c:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1faa0:	b	1fa5c <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1faa4:	ldr	r3, [r1, #48]	; 0x30
   1faa8:	mov	r5, r1
   1faac:	tst	r3, #8
   1fab0:	beq	1fac4 <myhtml_insertion_mode_after_frameset@@Base+0x8c>
   1fab4:	mov	r1, r5
   1fab8:	mov	r0, r6
   1fabc:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fac0:	b	1fa5c <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1fac4:	ldr	r0, [r0, #8]
   1fac8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1facc:	add	r0, r5, #4
   1fad0:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   1fad4:	ldr	r0, [r5, #12]
   1fad8:	cmp	r0, #0
   1fadc:	bne	1fab4 <myhtml_insertion_mode_after_frameset@@Base+0x7c>
   1fae0:	pop	{r4, r5, r6, pc}
   1fae4:	pop	{r4, r5, r6, lr}
   1fae8:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1faec:	pop	{r4, r5, r6, lr}
   1faf0:	b	10058 <myhtml_insertion_mode_in_head@plt>

0001faf4 <myhtml_insertion_mode_after_after_body@@Base>:
   1faf4:	push	{r4, r5, r6, r7, r8, lr}
   1faf8:	mov	r2, r0
   1fafc:	ldr	r4, [r1, #48]	; 0x30
   1fb00:	ands	r4, r4, #1
   1fb04:	beq	1fb18 <myhtml_insertion_mode_after_after_body@@Base+0x24>
   1fb08:	mov	r3, #6
   1fb0c:	str	r3, [r2, #168]	; 0xa8
   1fb10:	mov	r0, #1
   1fb14:	pop	{r4, r5, r6, r7, r8, pc}
   1fb18:	ldr	r5, [r1]
   1fb1c:	mov	r3, r1
   1fb20:	cmp	r5, #3
   1fb24:	beq	1fba8 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   1fb28:	mov	r6, r1
   1fb2c:	mov	ip, r0
   1fb30:	bhi	1fb50 <myhtml_insertion_mode_after_after_body@@Base+0x5c>
   1fb34:	cmp	r5, #1
   1fb38:	beq	1fb94 <myhtml_insertion_mode_after_after_body@@Base+0xa0>
   1fb3c:	cmp	r5, #2
   1fb40:	beq	1fb68 <myhtml_insertion_mode_after_after_body@@Base+0x74>
   1fb44:	mov	r3, #6
   1fb48:	str	r3, [ip, #168]	; 0xa8
   1fb4c:	b	1fb10 <myhtml_insertion_mode_after_after_body@@Base+0x1c>
   1fb50:	cmp	r5, #65	; 0x41
   1fb54:	beq	1fba8 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   1fb58:	cmp	r5, #251	; 0xfb
   1fb5c:	bne	1fb44 <myhtml_insertion_mode_after_after_body@@Base+0x50>
   1fb60:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1fb64:	b	1fb8c <myhtml_insertion_mode_after_after_body@@Base+0x98>
   1fb68:	ldr	r7, [r0, #84]	; 0x54
   1fb6c:	bl	ffe0 <myhtml_tree_node_create@plt>
   1fb70:	ldr	r3, [r7, #8]
   1fb74:	mov	r1, r0
   1fb78:	str	r5, [r0, #4]
   1fb7c:	str	r6, [r0, #32]
   1fb80:	str	r3, [r0, #8]
   1fb84:	mov	r0, r7
   1fb88:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1fb8c:	mov	r0, r4
   1fb90:	pop	{r4, r5, r6, r7, r8, pc}
   1fb94:	ldr	r3, [r1, #48]	; 0x30
   1fb98:	tst	r3, #8
   1fb9c:	beq	1fb08 <myhtml_insertion_mode_after_after_body@@Base+0x14>
   1fba0:	pop	{r4, r5, r6, r7, r8, lr}
   1fba4:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1fba8:	mov	r1, r3
   1fbac:	mov	r0, r2
   1fbb0:	b	1fba0 <myhtml_insertion_mode_after_after_body@@Base+0xac>

0001fbb4 <myhtml_insertion_mode_after_after_frameset@@Base>:
   1fbb4:	push	{r4, r5, r6, r7, r8, lr}
   1fbb8:	ldr	r4, [r1, #48]	; 0x30
   1fbbc:	ands	r4, r4, #1
   1fbc0:	beq	1fbcc <myhtml_insertion_mode_after_after_frameset@@Base+0x18>
   1fbc4:	mov	r0, #0
   1fbc8:	pop	{r4, r5, r6, r7, r8, pc}
   1fbcc:	ldr	r5, [r1]
   1fbd0:	mov	r2, r0
   1fbd4:	cmp	r5, #3
   1fbd8:	mov	r3, r1
   1fbdc:	beq	1fc3c <myhtml_insertion_mode_after_after_frameset@@Base+0x88>
   1fbe0:	mov	r7, r1
   1fbe4:	mov	r6, r0
   1fbe8:	bhi	1fc24 <myhtml_insertion_mode_after_after_frameset@@Base+0x70>
   1fbec:	cmp	r5, #1
   1fbf0:	beq	1fc48 <myhtml_insertion_mode_after_after_frameset@@Base+0x94>
   1fbf4:	cmp	r5, #2
   1fbf8:	bne	1fbc4 <myhtml_insertion_mode_after_after_frameset@@Base+0x10>
   1fbfc:	ldr	r6, [r0, #84]	; 0x54
   1fc00:	bl	ffe0 <myhtml_tree_node_create@plt>
   1fc04:	ldr	r3, [r6, #8]
   1fc08:	mov	r1, r0
   1fc0c:	str	r5, [r0, #4]
   1fc10:	str	r7, [r0, #32]
   1fc14:	str	r3, [r0, #8]
   1fc18:	mov	r0, r6
   1fc1c:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1fc20:	b	1fbc4 <myhtml_insertion_mode_after_after_frameset@@Base+0x10>
   1fc24:	cmp	r5, #92	; 0x5c
   1fc28:	beq	1fc78 <myhtml_insertion_mode_after_after_frameset@@Base+0xc4>
   1fc2c:	cmp	r5, #251	; 0xfb
   1fc30:	beq	1fc70 <myhtml_insertion_mode_after_after_frameset@@Base+0xbc>
   1fc34:	cmp	r5, #65	; 0x41
   1fc38:	bne	1fbc4 <myhtml_insertion_mode_after_after_frameset@@Base+0x10>
   1fc3c:	mov	r1, r3
   1fc40:	mov	r0, r2
   1fc44:	b	1fc54 <myhtml_insertion_mode_after_after_frameset@@Base+0xa0>
   1fc48:	ldr	r3, [r1, #48]	; 0x30
   1fc4c:	tst	r3, #8
   1fc50:	beq	1fc5c <myhtml_insertion_mode_after_after_frameset@@Base+0xa8>
   1fc54:	pop	{r4, r5, r6, r7, r8, lr}
   1fc58:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1fc5c:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1fc60:	subs	r1, r0, #0
   1fc64:	beq	1fbc4 <myhtml_insertion_mode_after_after_frameset@@Base+0x10>
   1fc68:	mov	r0, r6
   1fc6c:	b	1fc54 <myhtml_insertion_mode_after_after_frameset@@Base+0xa0>
   1fc70:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1fc74:	b	1fbc4 <myhtml_insertion_mode_after_after_frameset@@Base+0x10>
   1fc78:	pop	{r4, r5, r6, r7, r8, lr}
   1fc7c:	b	10058 <myhtml_insertion_mode_in_head@plt>

0001fc80 <myhtml_rules_check_for_first_newline@@Base>:
   1fc80:	push	{r4, r5, r6, lr}
   1fc84:	ldr	r4, [r0, #180]	; 0xb4
   1fc88:	ands	r4, r4, #64	; 0x40
   1fc8c:	beq	1fd08 <myhtml_rules_check_for_first_newline@@Base+0x88>
   1fc90:	ldr	r3, [r0, #180]	; 0xb4
   1fc94:	mov	r5, r0
   1fc98:	tst	r3, #128	; 0x80
   1fc9c:	beq	1fd10 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1fca0:	ldr	r4, [r1]
   1fca4:	mov	r6, r1
   1fca8:	cmp	r4, #1
   1fcac:	bne	1fd10 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1fcb0:	ldr	r0, [r0, #8]
   1fcb4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1fcb8:	ldr	r3, [r6, #12]
   1fcbc:	cmp	r3, #0
   1fcc0:	beq	1fd08 <myhtml_rules_check_for_first_newline@@Base+0x88>
   1fcc4:	ldr	r0, [r6, #4]
   1fcc8:	ldrb	r3, [r0]
   1fccc:	cmp	r3, #10
   1fcd0:	bne	1fd10 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1fcd4:	mov	r1, r4
   1fcd8:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   1fcdc:	ldr	r3, [r6, #12]
   1fce0:	sub	r3, r3, #1
   1fce4:	cmp	r3, #0
   1fce8:	str	r3, [r6, #12]
   1fcec:	str	r0, [r6, #4]
   1fcf0:	bne	1fd10 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1fcf4:	ldr	r3, [r5, #180]	; 0xb4
   1fcf8:	ldr	r2, [r5, #180]	; 0xb4
   1fcfc:	and	r3, r3, #64	; 0x40
   1fd00:	eor	r3, r3, r2
   1fd04:	str	r3, [r5, #180]	; 0xb4
   1fd08:	mov	r0, r4
   1fd0c:	pop	{r4, r5, r6, pc}
   1fd10:	ldr	r3, [r5, #180]	; 0xb4
   1fd14:	ldr	r2, [r5, #180]	; 0xb4
   1fd18:	and	r3, r3, #64	; 0x40
   1fd1c:	eor	r3, r3, r2
   1fd20:	str	r3, [r5, #180]	; 0xb4
   1fd24:	mov	r4, #0
   1fd28:	b	1fd08 <myhtml_rules_check_for_first_newline@@Base+0x88>

0001fd2c <myhtml_rules_tree_dispatcher@@Base>:
   1fd2c:	push	{r4, r5, r6, lr}
   1fd30:	mov	r4, r0
   1fd34:	mov	r5, r1
   1fd38:	bl	10d60 <myhtml_rules_check_for_first_newline@plt>
   1fd3c:	cmp	r0, #0
   1fd40:	beq	1fd50 <myhtml_rules_tree_dispatcher@@Base+0x24>
   1fd44:	str	r5, [r4, #152]	; 0x98
   1fd48:	mov	r0, #0
   1fd4c:	pop	{r4, r5, r6, pc}
   1fd50:	ldr	r3, [r4, #164]	; 0xa4
   1fd54:	cmp	r3, #0
   1fd58:	strne	r0, [r4, #164]	; 0xa4
   1fd5c:	mov	r0, r4
   1fd60:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   1fd64:	ldr	r3, [r4, #128]	; 0x80
   1fd68:	ldr	r3, [r3, #4]
   1fd6c:	cmp	r3, #0
   1fd70:	mov	r6, r0
   1fd74:	beq	1fd84 <myhtml_rules_tree_dispatcher@@Base+0x58>
   1fd78:	ldr	r3, [r0, #8]
   1fd7c:	cmp	r3, #1
   1fd80:	bne	1fdac <myhtml_rules_tree_dispatcher@@Base+0x80>
   1fd84:	ldr	r3, [r4]
   1fd88:	ldr	r2, [r4, #168]	; 0xa8
   1fd8c:	mov	r1, r5
   1fd90:	ldr	r3, [r3, #28]
   1fd94:	mov	r0, r4
   1fd98:	ldr	r3, [r3, r2, lsl #2]
   1fd9c:	blx	r3
   1fda0:	cmp	r0, #0
   1fda4:	streq	r5, [r4, #152]	; 0x98
   1fda8:	pop	{r4, r5, r6, pc}
   1fdac:	mov	r1, r0
   1fdb0:	mov	r0, r4
   1fdb4:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   1fdb8:	cmp	r0, #0
   1fdbc:	beq	1fde4 <myhtml_rules_tree_dispatcher@@Base+0xb8>
   1fdc0:	ldr	r3, [r5]
   1fdc4:	cmp	r3, #1
   1fdc8:	beq	1fdd8 <myhtml_rules_tree_dispatcher@@Base+0xac>
   1fdcc:	cmp	r3, #226	; 0xe2
   1fdd0:	cmpne	r3, #221	; 0xdd
   1fdd4:	beq	1fde4 <myhtml_rules_tree_dispatcher@@Base+0xb8>
   1fdd8:	ldr	r3, [r5, #48]	; 0x30
   1fddc:	tst	r3, #1
   1fde0:	beq	1fd84 <myhtml_rules_tree_dispatcher@@Base+0x58>
   1fde4:	ldr	r3, [r6, #4]
   1fde8:	cmp	r3, #8
   1fdec:	bne	1fe14 <myhtml_rules_tree_dispatcher@@Base+0xe8>
   1fdf0:	ldr	r3, [r6, #8]
   1fdf4:	cmp	r3, #2
   1fdf8:	bne	1fe14 <myhtml_rules_tree_dispatcher@@Base+0xe8>
   1fdfc:	ldr	r3, [r5]
   1fe00:	cmp	r3, #124	; 0x7c
   1fe04:	bne	1fe14 <myhtml_rules_tree_dispatcher@@Base+0xe8>
   1fe08:	ldr	r3, [r5, #48]	; 0x30
   1fe0c:	tst	r3, #1
   1fe10:	beq	1fd84 <myhtml_rules_tree_dispatcher@@Base+0x58>
   1fe14:	mov	r1, r6
   1fe18:	mov	r0, r4
   1fe1c:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   1fe20:	cmp	r0, #0
   1fe24:	beq	1fe40 <myhtml_rules_tree_dispatcher@@Base+0x114>
   1fe28:	ldr	r3, [r5, #48]	; 0x30
   1fe2c:	tst	r3, #1
   1fe30:	beq	1fd84 <myhtml_rules_tree_dispatcher@@Base+0x58>
   1fe34:	ldr	r3, [r5]
   1fe38:	cmp	r3, #1
   1fe3c:	beq	1fd84 <myhtml_rules_tree_dispatcher@@Base+0x58>
   1fe40:	ldr	r3, [r5]
   1fe44:	cmp	r3, #251	; 0xfb
   1fe48:	beq	1fd84 <myhtml_rules_tree_dispatcher@@Base+0x58>
   1fe4c:	mov	r1, r5
   1fe50:	mov	r0, r4
   1fe54:	bl	fe24 <myhtml_insertion_mode_in_foreign_content@plt>
   1fe58:	b	1fda0 <myhtml_rules_tree_dispatcher@@Base+0x74>

0001fe5c <myhtml_rules_init@@Base>:
   1fe5c:	push	{r4, r5, r6, lr}
   1fe60:	mov	r5, r0
   1fe64:	mov	r0, #92	; 0x5c
   1fe68:	bl	10c94 <mycore_malloc@plt>
   1fe6c:	ldr	r4, [pc, #304]	; 1ffa4 <myhtml_rules_init@@Base+0x148>
   1fe70:	add	r4, pc, r4
   1fe74:	cmp	r0, #0
   1fe78:	str	r0, [r5, #28]
   1fe7c:	beq	1ff9c <myhtml_rules_init@@Base+0x140>
   1fe80:	ldr	r3, [pc, #288]	; 1ffa8 <myhtml_rules_init@@Base+0x14c>
   1fe84:	ldr	r3, [r4, r3]
   1fe88:	str	r3, [r0]
   1fe8c:	ldr	r3, [pc, #280]	; 1ffac <myhtml_rules_init@@Base+0x150>
   1fe90:	ldr	r3, [r4, r3]
   1fe94:	str	r3, [r0, #4]
   1fe98:	ldr	r3, [pc, #272]	; 1ffb0 <myhtml_rules_init@@Base+0x154>
   1fe9c:	ldr	r3, [r4, r3]
   1fea0:	str	r3, [r0, #8]
   1fea4:	ldr	r3, [pc, #264]	; 1ffb4 <myhtml_rules_init@@Base+0x158>
   1fea8:	ldr	r3, [r4, r3]
   1feac:	str	r3, [r0, #12]
   1feb0:	ldr	r3, [pc, #256]	; 1ffb8 <myhtml_rules_init@@Base+0x15c>
   1feb4:	ldr	r3, [r4, r3]
   1feb8:	str	r3, [r0, #16]
   1febc:	ldr	r3, [pc, #248]	; 1ffbc <myhtml_rules_init@@Base+0x160>
   1fec0:	ldr	r3, [r4, r3]
   1fec4:	str	r3, [r0, #20]
   1fec8:	ldr	r3, [pc, #240]	; 1ffc0 <myhtml_rules_init@@Base+0x164>
   1fecc:	ldr	r3, [r4, r3]
   1fed0:	str	r3, [r0, #24]
   1fed4:	ldr	r3, [pc, #232]	; 1ffc4 <myhtml_rules_init@@Base+0x168>
   1fed8:	ldr	r3, [r4, r3]
   1fedc:	str	r3, [r0, #28]
   1fee0:	ldr	r3, [pc, #224]	; 1ffc8 <myhtml_rules_init@@Base+0x16c>
   1fee4:	ldr	r3, [r4, r3]
   1fee8:	str	r3, [r0, #32]
   1feec:	ldr	r3, [pc, #216]	; 1ffcc <myhtml_rules_init@@Base+0x170>
   1fef0:	ldr	r3, [r4, r3]
   1fef4:	str	r3, [r0, #36]	; 0x24
   1fef8:	ldr	r3, [pc, #208]	; 1ffd0 <myhtml_rules_init@@Base+0x174>
   1fefc:	ldr	r3, [r4, r3]
   1ff00:	str	r3, [r0, #40]	; 0x28
   1ff04:	ldr	r3, [pc, #200]	; 1ffd4 <myhtml_rules_init@@Base+0x178>
   1ff08:	ldr	r3, [r4, r3]
   1ff0c:	str	r3, [r0, #44]	; 0x2c
   1ff10:	ldr	r3, [pc, #192]	; 1ffd8 <myhtml_rules_init@@Base+0x17c>
   1ff14:	ldr	r3, [r4, r3]
   1ff18:	str	r3, [r0, #48]	; 0x30
   1ff1c:	ldr	r3, [pc, #184]	; 1ffdc <myhtml_rules_init@@Base+0x180>
   1ff20:	ldr	r3, [r4, r3]
   1ff24:	str	r3, [r0, #52]	; 0x34
   1ff28:	ldr	r3, [pc, #176]	; 1ffe0 <myhtml_rules_init@@Base+0x184>
   1ff2c:	ldr	r3, [r4, r3]
   1ff30:	str	r3, [r0, #56]	; 0x38
   1ff34:	ldr	r3, [pc, #168]	; 1ffe4 <myhtml_rules_init@@Base+0x188>
   1ff38:	ldr	r3, [r4, r3]
   1ff3c:	str	r3, [r0, #60]	; 0x3c
   1ff40:	ldr	r3, [pc, #160]	; 1ffe8 <myhtml_rules_init@@Base+0x18c>
   1ff44:	ldr	r3, [r4, r3]
   1ff48:	str	r3, [r0, #64]	; 0x40
   1ff4c:	ldr	r3, [pc, #152]	; 1ffec <myhtml_rules_init@@Base+0x190>
   1ff50:	ldr	r3, [r4, r3]
   1ff54:	str	r3, [r0, #68]	; 0x44
   1ff58:	ldr	r3, [pc, #144]	; 1fff0 <myhtml_rules_init@@Base+0x194>
   1ff5c:	ldr	r3, [r4, r3]
   1ff60:	str	r3, [r0, #72]	; 0x48
   1ff64:	ldr	r3, [pc, #136]	; 1fff4 <myhtml_rules_init@@Base+0x198>
   1ff68:	ldr	r3, [r4, r3]
   1ff6c:	str	r3, [r0, #76]	; 0x4c
   1ff70:	ldr	r3, [pc, #128]	; 1fff8 <myhtml_rules_init@@Base+0x19c>
   1ff74:	ldr	r3, [r4, r3]
   1ff78:	str	r3, [r0, #80]	; 0x50
   1ff7c:	ldr	r3, [pc, #120]	; 1fffc <myhtml_rules_init@@Base+0x1a0>
   1ff80:	ldr	r3, [r4, r3]
   1ff84:	str	r3, [r0, #84]	; 0x54
   1ff88:	ldr	r3, [pc, #112]	; 20000 <myhtml_rules_init@@Base+0x1a4>
   1ff8c:	ldr	r3, [r4, r3]
   1ff90:	str	r3, [r0, #88]	; 0x58
   1ff94:	mov	r0, #0
   1ff98:	pop	{r4, r5, r6, pc}
   1ff9c:	ldr	r0, [pc, #96]	; 20004 <myhtml_rules_init@@Base+0x1a8>
   1ffa0:	pop	{r4, r5, r6, pc}
   1ffa4:	andeq	r1, pc, r8, lsl #3
   1ffa8:	andeq	r0, r0, r8, lsr #16
   1ffac:	andeq	r0, r0, r8, asr r9
   1ffb0:	andeq	r0, r0, r4, ror #18
   1ffb4:	andeq	r0, r0, ip, lsr #15
   1ffb8:	andeq	r0, r0, r0, lsl #18
   1ffbc:	andeq	r0, r0, ip, lsr #18
   1ffc0:	muleq	r0, r8, r8
   1ffc4:	andeq	r0, r0, r0, lsl #16
   1ffc8:	ldrdeq	r0, [r0], -ip
   1ffcc:	andeq	r0, r0, r4, ror #17
   1ffd0:	andeq	r0, r0, r4, lsr #18
   1ffd4:	andeq	r0, r0, r4, lsl r9
   1ffd8:	andeq	r0, r0, ip, lsl r9
   1ffdc:	andeq	r0, r0, r8, lsr #15
   1ffe0:	andeq	r0, r0, r8, lsr #19
   1ffe4:	andeq	r0, r0, r8, lsr r8
   1ffe8:	muleq	r0, ip, r8
   1ffec:	andeq	r0, r0, r0, ror #14
   1fff0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1fff4:	andeq	r0, r0, r4, ror r9
   1fff8:	andeq	r0, r0, r4, lsr #14
   1fffc:	andeq	r0, r0, r0, lsr #14
   20000:	andeq	r0, r0, r0, lsr #16
   20004:	andeq	r9, r0, r4, rrx
   20008:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2000c:	mov	r6, r3
   20010:	ldr	sl, [pc, #404]	; 201ac <myhtml_rules_init@@Base+0x350>
   20014:	ldr	fp, [pc, #404]	; 201b0 <myhtml_rules_init@@Base+0x354>
   20018:	mov	r4, #0
   2001c:	ldr	r3, [pc, #400]	; 201b4 <myhtml_rules_init@@Base+0x358>
   20020:	mov	r9, r1
   20024:	mov	r7, r0
   20028:	mov	r5, r2
   2002c:	sub	r8, r0, #1
   20030:	mov	r1, r4
   20034:	add	sl, pc, sl
   20038:	add	fp, pc, fp
   2003c:	add	r3, pc, r3
   20040:	str	r3, [sp, #4]
   20044:	cmp	r4, r9
   20048:	bne	20074 <myhtml_rules_init@@Base+0x218>
   2004c:	cmp	r1, #0
   20050:	beq	2006c <myhtml_rules_init@@Base+0x210>
   20054:	sub	r0, r4, r1
   20058:	mov	r2, r6
   2005c:	add	r0, r7, r0
   20060:	blx	r5
   20064:	cmp	r0, #0
   20068:	bne	20118 <myhtml_rules_init@@Base+0x2bc>
   2006c:	mov	r0, #0
   20070:	b	2011c <myhtml_rules_init@@Base+0x2c0>
   20074:	ldrb	r3, [r8, #1]!
   20078:	cmp	r3, #60	; 0x3c
   2007c:	beq	20124 <myhtml_rules_init@@Base+0x2c8>
   20080:	bhi	20094 <myhtml_rules_init@@Base+0x238>
   20084:	cmp	r3, #38	; 0x26
   20088:	beq	200d0 <myhtml_rules_init@@Base+0x274>
   2008c:	add	r1, r1, #1
   20090:	b	200f8 <myhtml_rules_init@@Base+0x29c>
   20094:	cmp	r3, #62	; 0x3e
   20098:	beq	20158 <myhtml_rules_init@@Base+0x2fc>
   2009c:	cmp	r3, #160	; 0xa0
   200a0:	bne	2008c <myhtml_rules_init@@Base+0x230>
   200a4:	cmp	r4, #0
   200a8:	beq	2008c <myhtml_rules_init@@Base+0x230>
   200ac:	ldrb	r3, [r8, #-1]
   200b0:	cmp	r3, #194	; 0xc2
   200b4:	bne	2008c <myhtml_rules_init@@Base+0x230>
   200b8:	cmp	r1, #0
   200bc:	bne	2018c <myhtml_rules_init@@Base+0x330>
   200c0:	mov	r2, r6
   200c4:	mov	r1, #6
   200c8:	mov	r0, fp
   200cc:	b	200e8 <myhtml_rules_init@@Base+0x28c>
   200d0:	cmp	r1, #0
   200d4:	bne	20100 <myhtml_rules_init@@Base+0x2a4>
   200d8:	ldr	r0, [pc, #216]	; 201b8 <myhtml_rules_init@@Base+0x35c>
   200dc:	mov	r2, r6
   200e0:	mov	r1, #5
   200e4:	add	r0, pc, r0
   200e8:	blx	r5
   200ec:	cmp	r0, #0
   200f0:	bne	20118 <myhtml_rules_init@@Base+0x2bc>
   200f4:	mov	r1, #0
   200f8:	add	r4, r4, #1
   200fc:	b	20044 <myhtml_rules_init@@Base+0x1e8>
   20100:	sub	r0, r4, r1
   20104:	mov	r2, r6
   20108:	add	r0, r7, r0
   2010c:	blx	r5
   20110:	cmp	r0, #0
   20114:	beq	200d8 <myhtml_rules_init@@Base+0x27c>
   20118:	mov	r0, #2
   2011c:	add	sp, sp, #12
   20120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20124:	cmp	r1, #0
   20128:	bne	2013c <myhtml_rules_init@@Base+0x2e0>
   2012c:	mov	r2, r6
   20130:	mov	r1, #4
   20134:	ldr	r0, [sp, #4]
   20138:	b	200e8 <myhtml_rules_init@@Base+0x28c>
   2013c:	sub	r0, r4, r1
   20140:	mov	r2, r6
   20144:	add	r0, r7, r0
   20148:	blx	r5
   2014c:	cmp	r0, #0
   20150:	beq	2012c <myhtml_rules_init@@Base+0x2d0>
   20154:	b	20118 <myhtml_rules_init@@Base+0x2bc>
   20158:	cmp	r1, #0
   2015c:	bne	20170 <myhtml_rules_init@@Base+0x314>
   20160:	mov	r2, r6
   20164:	mov	r1, #4
   20168:	mov	r0, sl
   2016c:	b	200e8 <myhtml_rules_init@@Base+0x28c>
   20170:	sub	r0, r4, r1
   20174:	mov	r2, r6
   20178:	add	r0, r7, r0
   2017c:	blx	r5
   20180:	cmp	r0, #0
   20184:	beq	20160 <myhtml_rules_init@@Base+0x304>
   20188:	b	20118 <myhtml_rules_init@@Base+0x2bc>
   2018c:	sub	r0, r4, r1
   20190:	mov	r2, r6
   20194:	sub	r1, r1, #1
   20198:	add	r0, r7, r0
   2019c:	blx	r5
   201a0:	cmp	r0, #0
   201a4:	beq	200c0 <myhtml_rules_init@@Base+0x264>
   201a8:	b	20118 <myhtml_rules_init@@Base+0x2bc>
   201ac:	ldrdeq	r6, [sp], -ip
   201b0:	ldrdeq	r6, [sp], -sp
   201b4:	andeq	r6, sp, pc, asr #25
   201b8:	andeq	r6, sp, r1, lsr #24
   201bc:	ldr	r3, [r0, #4]
   201c0:	push	{r0, r1, r4, r5, r6, lr}
   201c4:	cmp	r3, #64	; 0x40
   201c8:	beq	2028c <myhtml_rules_init@@Base+0x430>
   201cc:	bhi	20268 <myhtml_rules_init@@Base+0x40c>
   201d0:	cmp	r3, #19
   201d4:	beq	2028c <myhtml_rules_init@@Base+0x430>
   201d8:	bhi	20244 <myhtml_rules_init@@Base+0x3e8>
   201dc:	cmp	r3, #10
   201e0:	beq	2028c <myhtml_rules_init@@Base+0x430>
   201e4:	bhi	20238 <myhtml_rules_init@@Base+0x3dc>
   201e8:	sub	ip, r3, #1
   201ec:	cmp	ip, #2
   201f0:	bls	20298 <myhtml_rules_init@@Base+0x43c>
   201f4:	mov	r5, r2
   201f8:	mov	r4, r1
   201fc:	add	r2, sp, #4
   20200:	mov	r1, r3
   20204:	ldr	r0, [r0, #40]	; 0x28
   20208:	bl	10af0 <myhtml_tag_name_by_id@plt>
   2020c:	mov	r2, r5
   20210:	mov	r1, #2
   20214:	mov	r6, r0
   20218:	ldr	r0, [pc, #228]	; 20304 <myhtml_rules_init@@Base+0x4a8>
   2021c:	add	r0, pc, r0
   20220:	blx	r4
   20224:	cmp	r0, #0
   20228:	beq	202cc <myhtml_rules_init@@Base+0x470>
   2022c:	mov	r0, #2
   20230:	add	sp, sp, #8
   20234:	pop	{r4, r5, r6, pc}
   20238:	cmp	r3, #15
   2023c:	bne	201f4 <myhtml_rules_init@@Base+0x398>
   20240:	b	2028c <myhtml_rules_init@@Base+0x430>
   20244:	cmp	r3, #31
   20248:	beq	2028c <myhtml_rules_init@@Base+0x430>
   2024c:	bhi	20258 <myhtml_rules_init@@Base+0x3fc>
   20250:	cmp	r3, #24
   20254:	b	2023c <myhtml_rules_init@@Base+0x3e0>
   20258:	cmp	r3, #46	; 0x2e
   2025c:	beq	2028c <myhtml_rules_init@@Base+0x430>
   20260:	cmp	r3, #53	; 0x35
   20264:	b	2023c <myhtml_rules_init@@Base+0x3e0>
   20268:	cmp	r3, #86	; 0x56
   2026c:	beq	2028c <myhtml_rules_init@@Base+0x430>
   20270:	bhi	202a8 <myhtml_rules_init@@Base+0x44c>
   20274:	cmp	r3, #74	; 0x4a
   20278:	beq	2028c <myhtml_rules_init@@Base+0x430>
   2027c:	bhi	202a0 <myhtml_rules_init@@Base+0x444>
   20280:	sub	ip, r3, #69	; 0x45
   20284:	cmp	ip, #1
   20288:	bhi	201f4 <myhtml_rules_init@@Base+0x398>
   2028c:	ldr	ip, [r0, #8]
   20290:	cmp	ip, #1
   20294:	bne	201f4 <myhtml_rules_init@@Base+0x398>
   20298:	mov	r0, #0
   2029c:	b	20230 <myhtml_rules_init@@Base+0x3d4>
   202a0:	cmp	r3, #78	; 0x4e
   202a4:	b	2023c <myhtml_rules_init@@Base+0x3e0>
   202a8:	cmp	r3, #116	; 0x74
   202ac:	beq	2028c <myhtml_rules_init@@Base+0x430>
   202b0:	bhi	202bc <myhtml_rules_init@@Base+0x460>
   202b4:	cmp	r3, #100	; 0x64
   202b8:	b	2023c <myhtml_rules_init@@Base+0x3e0>
   202bc:	cmp	r3, #136	; 0x88
   202c0:	beq	2028c <myhtml_rules_init@@Base+0x430>
   202c4:	cmp	r3, #142	; 0x8e
   202c8:	b	2023c <myhtml_rules_init@@Base+0x3e0>
   202cc:	mov	r2, r5
   202d0:	ldr	r1, [sp, #4]
   202d4:	mov	r0, r6
   202d8:	blx	r4
   202dc:	cmp	r0, #0
   202e0:	bne	2022c <myhtml_rules_init@@Base+0x3d0>
   202e4:	ldr	r0, [pc, #28]	; 20308 <myhtml_rules_init@@Base+0x4ac>
   202e8:	mov	r2, r5
   202ec:	mov	r1, #1
   202f0:	add	r0, pc, r0
   202f4:	blx	r4
   202f8:	cmp	r0, #0
   202fc:	bne	2022c <myhtml_rules_init@@Base+0x3d0>
   20300:	b	20298 <myhtml_rules_init@@Base+0x43c>
   20304:	andeq	r6, sp, r0, lsl #22
   20308:	andeq	r6, sp, r6, lsr sl

0002030c <myhtml_serialization_node_callback@@Base>:
   2030c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20310:	mov	r4, r1
   20314:	ldr	r1, [r0, #4]
   20318:	sub	sp, sp, #28
   2031c:	cmp	r1, #2
   20320:	mov	r6, r0
   20324:	mov	r5, r2
   20328:	beq	203d4 <myhtml_serialization_node_callback@@Base+0xc8>
   2032c:	cmp	r1, #3
   20330:	beq	20434 <myhtml_serialization_node_callback@@Base+0x128>
   20334:	cmp	r1, #1
   20338:	bne	20620 <myhtml_serialization_node_callback@@Base+0x314>
   2033c:	ldr	r1, [r0, #32]
   20340:	cmp	r1, #0
   20344:	beq	20378 <myhtml_serialization_node_callback@@Base+0x6c>
   20348:	ldr	r0, [r1, #4]
   2034c:	cmp	r0, #0
   20350:	beq	20378 <myhtml_serialization_node_callback@@Base+0x6c>
   20354:	ldr	r3, [r6, #24]
   20358:	cmp	r3, #0
   2035c:	bne	20380 <myhtml_serialization_node_callback@@Base+0x74>
   20360:	mov	r3, r5
   20364:	mov	r2, r4
   20368:	ldr	r1, [r1, #12]
   2036c:	bl	20008 <myhtml_rules_init@@Base+0x1ac>
   20370:	cmp	r0, #0
   20374:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20378:	mov	r0, #0
   2037c:	b	2068c <myhtml_serialization_node_callback@@Base+0x380>
   20380:	ldr	r3, [r3, #4]
   20384:	cmp	r3, #101	; 0x65
   20388:	beq	203a8 <myhtml_serialization_node_callback@@Base+0x9c>
   2038c:	bhi	203b8 <myhtml_serialization_node_callback@@Base+0xac>
   20390:	cmp	r3, #67	; 0x43
   20394:	beq	203a8 <myhtml_serialization_node_callback@@Base+0x9c>
   20398:	bcc	20360 <myhtml_serialization_node_callback@@Base+0x54>
   2039c:	sub	r3, r3, #91	; 0x5b
   203a0:	cmp	r3, #1
   203a4:	bhi	20360 <myhtml_serialization_node_callback@@Base+0x54>
   203a8:	ldr	r1, [r1, #12]
   203ac:	mov	r2, r5
   203b0:	blx	r4
   203b4:	b	20370 <myhtml_serialization_node_callback@@Base+0x64>
   203b8:	cmp	r3, #120	; 0x78
   203bc:	beq	203a8 <myhtml_serialization_node_callback@@Base+0x9c>
   203c0:	cmp	r3, #143	; 0x8f
   203c4:	beq	203a8 <myhtml_serialization_node_callback@@Base+0x9c>
   203c8:	cmp	r3, #112	; 0x70
   203cc:	bne	20360 <myhtml_serialization_node_callback@@Base+0x54>
   203d0:	b	203a8 <myhtml_serialization_node_callback@@Base+0x9c>
   203d4:	ldr	r0, [pc, #1340]	; 20918 <myhtml_serialization_node_callback@@Base+0x60c>
   203d8:	mov	r1, #4
   203dc:	add	r0, pc, r0
   203e0:	blx	r4
   203e4:	cmp	r0, #0
   203e8:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   203ec:	ldr	r3, [r6, #32]
   203f0:	cmp	r3, #0
   203f4:	bne	2040c <myhtml_serialization_node_callback@@Base+0x100>
   203f8:	ldr	r0, [pc, #1308]	; 2091c <myhtml_serialization_node_callback@@Base+0x610>
   203fc:	mov	r2, r5
   20400:	mov	r1, #3
   20404:	add	r0, pc, r0
   20408:	b	203b0 <myhtml_serialization_node_callback@@Base+0xa4>
   2040c:	ldr	r0, [r3, #4]
   20410:	cmp	r0, #0
   20414:	beq	203f8 <myhtml_serialization_node_callback@@Base+0xec>
   20418:	mov	r2, r5
   2041c:	ldr	r1, [r3, #12]
   20420:	blx	r4
   20424:	cmp	r0, #0
   20428:	beq	203f8 <myhtml_serialization_node_callback@@Base+0xec>
   2042c:	mov	r0, #2
   20430:	b	2068c <myhtml_serialization_node_callback@@Base+0x380>
   20434:	ldr	r0, [pc, #1252]	; 20920 <myhtml_serialization_node_callback@@Base+0x614>
   20438:	mov	r1, #9
   2043c:	add	r0, pc, r0
   20440:	blx	r4
   20444:	cmp	r0, #0
   20448:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   2044c:	ldr	r0, [pc, #1232]	; 20924 <myhtml_serialization_node_callback@@Base+0x618>
   20450:	mov	r2, r5
   20454:	mov	r1, #1
   20458:	add	r0, pc, r0
   2045c:	blx	r4
   20460:	cmp	r0, #0
   20464:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20468:	ldr	r3, [r6, #32]
   2046c:	cmp	r3, #0
   20470:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   20474:	ldr	r6, [r3, #40]	; 0x28
   20478:	cmp	r6, #0
   2047c:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   20480:	ldr	r0, [r6, #8]
   20484:	cmp	r0, #0
   20488:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   2048c:	ldr	r1, [r6, #16]
   20490:	cmp	r1, #0
   20494:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   20498:	mov	r2, r5
   2049c:	blx	r4
   204a0:	cmp	r0, #0
   204a4:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   204a8:	ldr	r7, [r6]
   204ac:	cmp	r7, #0
   204b0:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   204b4:	ldr	r3, [r7, #36]	; 0x24
   204b8:	cmp	r3, #6
   204bc:	bne	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   204c0:	ldr	r1, [pc, #1120]	; 20928 <myhtml_serialization_node_callback@@Base+0x61c>
   204c4:	ldr	r0, [r7, #28]
   204c8:	add	r1, pc, r1
   204cc:	bl	1052c <mycore_strcasecmp@plt>
   204d0:	subs	r6, r0, #0
   204d4:	ldreq	r7, [r7]
   204d8:	beq	20560 <myhtml_serialization_node_callback@@Base+0x254>
   204dc:	ldr	r1, [pc, #1096]	; 2092c <myhtml_serialization_node_callback@@Base+0x620>
   204e0:	ldr	r0, [r7, #28]
   204e4:	add	r1, pc, r1
   204e8:	bl	1052c <mycore_strcasecmp@plt>
   204ec:	cmp	r0, #0
   204f0:	bne	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   204f4:	ldr	r6, [r7]
   204f8:	cmp	r6, #0
   204fc:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   20500:	ldr	r3, [r6, #36]	; 0x24
   20504:	ldr	r7, [r6]
   20508:	cmp	r3, #0
   2050c:	beq	20560 <myhtml_serialization_node_callback@@Base+0x254>
   20510:	ldr	r0, [pc, #1048]	; 20930 <myhtml_serialization_node_callback@@Base+0x624>
   20514:	mov	r2, r5
   20518:	mov	r1, #9
   2051c:	add	r0, pc, r0
   20520:	blx	r4
   20524:	cmp	r0, #0
   20528:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   2052c:	mov	r2, r5
   20530:	ldr	r1, [r6, #36]	; 0x24
   20534:	ldr	r0, [r6, #28]
   20538:	blx	r4
   2053c:	cmp	r0, #0
   20540:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20544:	ldr	r0, [pc, #1000]	; 20934 <myhtml_serialization_node_callback@@Base+0x628>
   20548:	mov	r2, r5
   2054c:	mov	r1, #1
   20550:	add	r0, pc, r0
   20554:	blx	r4
   20558:	cmp	r0, #0
   2055c:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20560:	cmp	r7, #0
   20564:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   20568:	ldr	r3, [r7, #36]	; 0x24
   2056c:	cmp	r3, #0
   20570:	beq	205cc <myhtml_serialization_node_callback@@Base+0x2c0>
   20574:	cmp	r6, #0
   20578:	beq	205e0 <myhtml_serialization_node_callback@@Base+0x2d4>
   2057c:	ldr	r3, [r6, #36]	; 0x24
   20580:	cmp	r3, #0
   20584:	beq	205e0 <myhtml_serialization_node_callback@@Base+0x2d4>
   20588:	ldr	r0, [pc, #936]	; 20938 <myhtml_serialization_node_callback@@Base+0x62c>
   2058c:	mov	r2, r5
   20590:	mov	r1, #2
   20594:	add	r0, pc, r0
   20598:	blx	r4
   2059c:	cmp	r0, #0
   205a0:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   205a4:	ldr	r0, [r7, #28]
   205a8:	cmp	r0, #0
   205ac:	bne	20600 <myhtml_serialization_node_callback@@Base+0x2f4>
   205b0:	ldr	r0, [pc, #900]	; 2093c <myhtml_serialization_node_callback@@Base+0x630>
   205b4:	mov	r2, r5
   205b8:	mov	r1, #1
   205bc:	add	r0, pc, r0
   205c0:	blx	r4
   205c4:	cmp	r0, #0
   205c8:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   205cc:	ldr	r0, [pc, #876]	; 20940 <myhtml_serialization_node_callback@@Base+0x634>
   205d0:	mov	r2, r5
   205d4:	mov	r1, #1
   205d8:	add	r0, pc, r0
   205dc:	b	203b0 <myhtml_serialization_node_callback@@Base+0xa4>
   205e0:	ldr	r0, [pc, #860]	; 20944 <myhtml_serialization_node_callback@@Base+0x638>
   205e4:	mov	r2, r5
   205e8:	mov	r1, #7
   205ec:	add	r0, pc, r0
   205f0:	blx	r4
   205f4:	cmp	r0, #0
   205f8:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   205fc:	b	20588 <myhtml_serialization_node_callback@@Base+0x27c>
   20600:	ldr	r1, [r7, #36]	; 0x24
   20604:	cmp	r1, #0
   20608:	beq	205b0 <myhtml_serialization_node_callback@@Base+0x2a4>
   2060c:	mov	r2, r5
   20610:	blx	r4
   20614:	cmp	r0, #0
   20618:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   2061c:	b	205b0 <myhtml_serialization_node_callback@@Base+0x2a4>
   20620:	add	r2, sp, #16
   20624:	ldr	r0, [r0, #40]	; 0x28
   20628:	bl	10af0 <myhtml_tag_name_by_id@plt>
   2062c:	mov	r2, r5
   20630:	mov	r1, #1
   20634:	mov	r7, r0
   20638:	ldr	r0, [pc, #776]	; 20948 <myhtml_serialization_node_callback@@Base+0x63c>
   2063c:	add	r0, pc, r0
   20640:	blx	r4
   20644:	cmp	r0, #0
   20648:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   2064c:	mov	r2, r5
   20650:	ldr	r1, [sp, #16]
   20654:	mov	r0, r7
   20658:	blx	r4
   2065c:	cmp	r0, #0
   20660:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20664:	ldr	r3, [r6, #32]
   20668:	cmp	r3, #0
   2066c:	bne	20694 <myhtml_serialization_node_callback@@Base+0x388>
   20670:	ldr	r0, [pc, #724]	; 2094c <myhtml_serialization_node_callback@@Base+0x640>
   20674:	mov	r2, r5
   20678:	mov	r1, #1
   2067c:	add	r0, pc, r0
   20680:	blx	r4
   20684:	cmp	r0, #0
   20688:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   2068c:	add	sp, sp, #28
   20690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20694:	ldr	r7, [r3, #40]	; 0x28
   20698:	ldr	r3, [pc, #688]	; 20950 <myhtml_serialization_node_callback@@Base+0x644>
   2069c:	add	r3, pc, r3
   206a0:	str	r3, [sp, #8]
   206a4:	ldr	r3, [pc, #680]	; 20954 <myhtml_serialization_node_callback@@Base+0x648>
   206a8:	add	r3, pc, r3
   206ac:	str	r3, [sp, #12]
   206b0:	cmp	r7, #0
   206b4:	beq	20670 <myhtml_serialization_node_callback@@Base+0x364>
   206b8:	mov	r2, r5
   206bc:	mov	r1, #1
   206c0:	ldr	r0, [sp, #8]
   206c4:	blx	r4
   206c8:	cmp	r0, #0
   206cc:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   206d0:	ldr	r6, [r7, #64]	; 0x40
   206d4:	cmp	r6, #5
   206d8:	beq	20700 <myhtml_serialization_node_callback@@Base+0x3f4>
   206dc:	cmp	r6, #6
   206e0:	beq	20788 <myhtml_serialization_node_callback@@Base+0x47c>
   206e4:	cmp	r6, #4
   206e8:	bne	2071c <myhtml_serialization_node_callback@@Base+0x410>
   206ec:	ldr	r0, [pc, #612]	; 20958 <myhtml_serialization_node_callback@@Base+0x64c>
   206f0:	mov	r2, r5
   206f4:	mov	r1, #6
   206f8:	add	r0, pc, r0
   206fc:	b	20710 <myhtml_serialization_node_callback@@Base+0x404>
   20700:	ldr	r0, [pc, #596]	; 2095c <myhtml_serialization_node_callback@@Base+0x650>
   20704:	mov	r2, r5
   20708:	mov	r1, #4
   2070c:	add	r0, pc, r0
   20710:	blx	r4
   20714:	cmp	r0, #0
   20718:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   2071c:	add	r8, sp, #20
   20720:	mov	r1, r8
   20724:	mov	r0, r7
   20728:	bl	10b08 <myhtml_attribute_key@plt>
   2072c:	cmp	r0, #0
   20730:	bne	207c8 <myhtml_serialization_node_callback@@Base+0x4bc>
   20734:	ldr	r0, [pc, #548]	; 20960 <myhtml_serialization_node_callback@@Base+0x654>
   20738:	mov	r2, r5
   2073c:	mov	r1, #2
   20740:	add	r0, pc, r0
   20744:	blx	r4
   20748:	subs	r6, r0, #0
   2074c:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20750:	mov	r1, r8
   20754:	mov	r0, r7
   20758:	bl	10490 <myhtml_attribute_value@plt>
   2075c:	subs	r8, r0, #0
   20760:	bne	207e0 <myhtml_serialization_node_callback@@Base+0x4d4>
   20764:	ldr	r0, [pc, #504]	; 20964 <myhtml_serialization_node_callback@@Base+0x658>
   20768:	mov	r2, r5
   2076c:	mov	r1, #1
   20770:	add	r0, pc, r0
   20774:	blx	r4
   20778:	cmp	r0, #0
   2077c:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20780:	ldr	r7, [r7]
   20784:	b	206b0 <myhtml_serialization_node_callback@@Base+0x3a4>
   20788:	ldr	r0, [r7, #8]
   2078c:	cmp	r0, #0
   20790:	beq	2071c <myhtml_serialization_node_callback@@Base+0x410>
   20794:	ldr	r3, [r7, #16]
   20798:	cmp	r3, #5
   2079c:	bne	2071c <myhtml_serialization_node_callback@@Base+0x410>
   207a0:	ldr	r1, [pc, #448]	; 20968 <myhtml_serialization_node_callback@@Base+0x65c>
   207a4:	add	r1, pc, r1
   207a8:	bl	fbf0 <mycore_strcmp@plt>
   207ac:	cmp	r0, #0
   207b0:	beq	2071c <myhtml_serialization_node_callback@@Base+0x410>
   207b4:	ldr	r0, [pc, #432]	; 2096c <myhtml_serialization_node_callback@@Base+0x660>
   207b8:	mov	r2, r5
   207bc:	mov	r1, r6
   207c0:	add	r0, pc, r0
   207c4:	b	20710 <myhtml_serialization_node_callback@@Base+0x404>
   207c8:	mov	r2, r5
   207cc:	ldr	r1, [sp, #20]
   207d0:	blx	r4
   207d4:	cmp	r0, #0
   207d8:	beq	20734 <myhtml_serialization_node_callback@@Base+0x428>
   207dc:	b	2042c <myhtml_serialization_node_callback@@Base+0x120>
   207e0:	ldr	fp, [pc, #392]	; 20970 <myhtml_serialization_node_callback@@Base+0x664>
   207e4:	ldr	r3, [pc, #392]	; 20974 <myhtml_serialization_node_callback@@Base+0x668>
   207e8:	ldr	r9, [sp, #20]
   207ec:	sub	sl, r8, #1
   207f0:	mov	r1, r6
   207f4:	add	fp, pc, fp
   207f8:	add	r3, pc, r3
   207fc:	str	r3, [sp, #4]
   20800:	cmp	r9, r6
   20804:	bne	2082c <myhtml_serialization_node_callback@@Base+0x520>
   20808:	cmp	r1, #0
   2080c:	beq	20764 <myhtml_serialization_node_callback@@Base+0x458>
   20810:	sub	r0, r9, r1
   20814:	mov	r2, r5
   20818:	add	r0, r8, r0
   2081c:	blx	r4
   20820:	cmp	r0, #0
   20824:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20828:	b	20764 <myhtml_serialization_node_callback@@Base+0x458>
   2082c:	ldrb	r3, [sl, #1]!
   20830:	cmp	r3, #38	; 0x26
   20834:	beq	20860 <myhtml_serialization_node_callback@@Base+0x554>
   20838:	cmp	r3, #160	; 0xa0
   2083c:	beq	208c4 <myhtml_serialization_node_callback@@Base+0x5b8>
   20840:	cmp	r3, #34	; 0x22
   20844:	bne	20910 <myhtml_serialization_node_callback@@Base+0x604>
   20848:	cmp	r1, #0
   2084c:	bne	208a8 <myhtml_serialization_node_callback@@Base+0x59c>
   20850:	mov	r2, r5
   20854:	mov	r1, #6
   20858:	mov	r0, fp
   2085c:	b	20874 <myhtml_serialization_node_callback@@Base+0x568>
   20860:	cmp	r1, #0
   20864:	bne	2088c <myhtml_serialization_node_callback@@Base+0x580>
   20868:	ldr	r0, [sp, #12]
   2086c:	mov	r2, r5
   20870:	mov	r1, #5
   20874:	blx	r4
   20878:	cmp	r0, #0
   2087c:	bne	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20880:	mov	r1, #0
   20884:	add	r6, r6, #1
   20888:	b	20800 <myhtml_serialization_node_callback@@Base+0x4f4>
   2088c:	sub	r0, r6, r1
   20890:	mov	r2, r5
   20894:	add	r0, r8, r0
   20898:	blx	r4
   2089c:	cmp	r0, #0
   208a0:	beq	20868 <myhtml_serialization_node_callback@@Base+0x55c>
   208a4:	b	2042c <myhtml_serialization_node_callback@@Base+0x120>
   208a8:	sub	r0, r6, r1
   208ac:	mov	r2, r5
   208b0:	add	r0, r8, r0
   208b4:	blx	r4
   208b8:	cmp	r0, #0
   208bc:	beq	20850 <myhtml_serialization_node_callback@@Base+0x544>
   208c0:	b	2042c <myhtml_serialization_node_callback@@Base+0x120>
   208c4:	cmp	r6, #0
   208c8:	beq	20910 <myhtml_serialization_node_callback@@Base+0x604>
   208cc:	ldrb	r3, [sl, #-1]
   208d0:	cmp	r3, #194	; 0xc2
   208d4:	bne	20910 <myhtml_serialization_node_callback@@Base+0x604>
   208d8:	cmp	r1, #0
   208dc:	bne	208f0 <myhtml_serialization_node_callback@@Base+0x5e4>
   208e0:	mov	r2, r5
   208e4:	mov	r1, #6
   208e8:	ldr	r0, [sp, #4]
   208ec:	b	20874 <myhtml_serialization_node_callback@@Base+0x568>
   208f0:	sub	r0, r6, r1
   208f4:	mov	r2, r5
   208f8:	sub	r1, r1, #1
   208fc:	add	r0, r8, r0
   20900:	blx	r4
   20904:	cmp	r0, #0
   20908:	beq	208e0 <myhtml_serialization_node_callback@@Base+0x5d4>
   2090c:	b	2042c <myhtml_serialization_node_callback@@Base+0x120>
   20910:	add	r1, r1, #1
   20914:	b	20884 <myhtml_serialization_node_callback@@Base+0x578>
   20918:	andeq	r6, sp, r3, asr #18
   2091c:	andeq	r6, sp, r0, lsr #18
   20920:	andeq	r6, sp, ip, ror #17
   20924:	ldrdeq	r6, [sp], -sl
   20928:	andeq	r6, sp, lr, ror r8
   2092c:	andeq	r6, sp, r0, asr r8
   20930:	andeq	r6, sp, pc, lsl r8
   20934:	strdeq	r6, [sp], -r3
   20938:	andeq	r6, sp, lr, lsr #15
   2093c:	andeq	r6, sp, r7, lsl #15
   20940:	andeq	r6, sp, lr, asr #14
   20944:	andeq	r6, sp, r9, asr r7
   20948:	andeq	r6, sp, r1, lsl r7
   2094c:	andeq	r6, sp, sl, lsr #13
   20950:	muleq	sp, r6, r6
   20954:	andeq	r6, sp, sp, asr r6
   20958:	andeq	r6, sp, r9, ror #12
   2095c:	andeq	r6, sp, r3, asr #12
   20960:	andeq	r6, sp, r8, lsr #12
   20964:	ldrdeq	r6, [sp], -r3
   20968:			; <UNDEFINED> instruction: 0x000d65b0
   2096c:	muleq	sp, sl, r5
   20970:	andeq	r6, sp, r7, ror r5
   20974:	andeq	r6, sp, sp, lsl r5

00020978 <myhtml_serialization_tree_callback@@Base>:
   20978:	push	{r4, r5, r6, r7, r8, lr}
   2097c:	subs	r5, r0, #0
   20980:	mov	r6, r1
   20984:	mov	r7, r2
   20988:	beq	209a8 <myhtml_serialization_tree_callback@@Base+0x30>
   2098c:	ldr	r3, [r5, #40]	; 0x28
   20990:	cmp	r3, #0
   20994:	beq	209a8 <myhtml_serialization_tree_callback@@Base+0x30>
   20998:	ldr	r3, [r3, #84]	; 0x54
   2099c:	cmp	r5, r3
   209a0:	ldreq	r4, [r5, #20]
   209a4:	beq	209ac <myhtml_serialization_tree_callback@@Base+0x34>
   209a8:	mov	r4, r5
   209ac:	cmp	r4, #0
   209b0:	beq	20a60 <myhtml_serialization_tree_callback@@Base+0xe8>
   209b4:	mov	r2, r7
   209b8:	mov	r1, r6
   209bc:	mov	r0, r4
   209c0:	bl	10700 <myhtml_serialization_node_callback@plt>
   209c4:	cmp	r0, #0
   209c8:	beq	209d4 <myhtml_serialization_tree_callback@@Base+0x5c>
   209cc:	mov	r0, #2
   209d0:	pop	{r4, r5, r6, r7, r8, pc}
   209d4:	ldr	r3, [r4, #20]
   209d8:	cmp	r3, #0
   209dc:	movne	r4, r3
   209e0:	bne	209ac <myhtml_serialization_tree_callback@@Base+0x34>
   209e4:	cmp	r4, r5
   209e8:	beq	20a38 <myhtml_serialization_tree_callback@@Base+0xc0>
   209ec:	ldr	r3, [r4, #16]
   209f0:	cmp	r3, #0
   209f4:	beq	20a18 <myhtml_serialization_tree_callback@@Base+0xa0>
   209f8:	mov	r2, r7
   209fc:	mov	r1, r6
   20a00:	mov	r0, r4
   20a04:	bl	201bc <myhtml_rules_init@@Base+0x360>
   20a08:	cmp	r0, #0
   20a0c:	bne	209cc <myhtml_serialization_tree_callback@@Base+0x54>
   20a10:	ldr	r4, [r4, #16]
   20a14:	b	209ac <myhtml_serialization_tree_callback@@Base+0x34>
   20a18:	mov	r2, r7
   20a1c:	mov	r1, r6
   20a20:	mov	r0, r4
   20a24:	bl	201bc <myhtml_rules_init@@Base+0x360>
   20a28:	cmp	r0, #0
   20a2c:	bne	209cc <myhtml_serialization_tree_callback@@Base+0x54>
   20a30:	ldr	r4, [r4, #24]
   20a34:	b	209e4 <myhtml_serialization_tree_callback@@Base+0x6c>
   20a38:	ldr	r3, [r4, #40]	; 0x28
   20a3c:	ldr	r3, [r3, #84]	; 0x54
   20a40:	cmp	r4, r3
   20a44:	beq	20a60 <myhtml_serialization_tree_callback@@Base+0xe8>
   20a48:	mov	r2, r7
   20a4c:	mov	r1, r6
   20a50:	mov	r0, r4
   20a54:	bl	201bc <myhtml_rules_init@@Base+0x360>
   20a58:	cmp	r0, #0
   20a5c:	bne	209cc <myhtml_serialization_tree_callback@@Base+0x54>
   20a60:	mov	r0, #0
   20a64:	pop	{r4, r5, r6, r7, r8, pc}

00020a68 <myhtml_serialization_reallocate@@Base>:
   20a68:	push	{r4, r5, r6, lr}
   20a6c:	mov	r4, r0
   20a70:	ldr	r0, [r0]
   20a74:	mov	r5, r1
   20a78:	bl	fbd8 <mycore_realloc@plt>
   20a7c:	cmp	r0, #0
   20a80:	streq	r0, [r4]
   20a84:	streq	r0, [r4, #4]
   20a88:	streq	r0, [r4, #8]
   20a8c:	stmne	r4, {r0, r5}
   20a90:	moveq	r0, #2
   20a94:	movne	r0, #0
   20a98:	pop	{r4, r5, r6, pc}

00020a9c <myhtml_serialization_concatenate@@Base>:
   20a9c:	push	{r4, r5, r6, lr}
   20aa0:	mov	r5, r1
   20aa4:	ldr	r1, [r2, #8]
   20aa8:	ldr	r3, [r2, #4]
   20aac:	add	r1, r5, r1
   20ab0:	cmp	r1, r3
   20ab4:	mov	r6, r0
   20ab8:	mov	r4, r2
   20abc:	bcs	20af4 <myhtml_serialization_concatenate@@Base+0x58>
   20ac0:	ldr	r3, [r4, #8]
   20ac4:	ldr	r0, [r4]
   20ac8:	mov	r2, r5
   20acc:	mov	r1, r6
   20ad0:	add	r0, r0, r3
   20ad4:	bl	108ec <strncpy@plt>
   20ad8:	ldr	r3, [r4, #8]
   20adc:	mov	r0, #0
   20ae0:	add	r5, r5, r3
   20ae4:	ldr	r3, [r4]
   20ae8:	str	r5, [r4, #8]
   20aec:	strb	r0, [r3, r5]
   20af0:	pop	{r4, r5, r6, pc}
   20af4:	add	r1, r1, #4096	; 0x1000
   20af8:	mov	r0, r2
   20afc:	bl	1037c <myhtml_serialization_reallocate@plt>
   20b00:	cmp	r0, #0
   20b04:	beq	20ac0 <myhtml_serialization_concatenate@@Base+0x24>
   20b08:	mov	r0, #2
   20b0c:	pop	{r4, r5, r6, pc}

00020b10 <myhtml_serialization_tree_buffer@@Base>:
   20b10:	push	{r0, r1, r4, r5, r6, lr}
   20b14:	subs	r4, r1, #0
   20b18:	ldr	r6, [pc, #100]	; 20b84 <myhtml_serialization_tree_buffer@@Base+0x74>
   20b1c:	add	r6, pc, r6
   20b20:	beq	20b78 <myhtml_serialization_tree_buffer@@Base+0x68>
   20b24:	ldr	r3, [r4]
   20b28:	mov	r5, r0
   20b2c:	cmp	r3, #0
   20b30:	bne	20b54 <myhtml_serialization_tree_buffer@@Base+0x44>
   20b34:	ldr	r0, [pc, #76]	; 20b88 <myhtml_serialization_tree_buffer@@Base+0x78>
   20b38:	stmib	r4, {r0, r3}
   20b3c:	bl	10c94 <mycore_malloc@plt>
   20b40:	cmp	r0, #0
   20b44:	str	r0, [r4]
   20b48:	streq	r0, [r4, #4]
   20b4c:	moveq	r0, #2
   20b50:	beq	20b7c <myhtml_serialization_tree_buffer@@Base+0x6c>
   20b54:	ldr	r3, [pc, #48]	; 20b8c <myhtml_serialization_tree_buffer@@Base+0x7c>
   20b58:	mov	r2, r4
   20b5c:	mov	r0, r5
   20b60:	ldr	r3, [r6, r3]
   20b64:	str	r3, [sp, #4]
   20b68:	mov	r1, r3
   20b6c:	add	sp, sp, #8
   20b70:	pop	{r4, r5, r6, lr}
   20b74:	b	10e68 <myhtml_serialization_tree_callback@plt>
   20b78:	mov	r0, r4
   20b7c:	add	sp, sp, #8
   20b80:	pop	{r4, r5, r6, pc}
   20b84:	ldrdeq	r0, [pc], -ip
   20b88:	andeq	r5, r0, sl
   20b8c:	andeq	r0, r0, r8, lsr #17

00020b90 <myhtml_serialization@@Base>:
   20b90:	b	10328 <myhtml_serialization_tree_buffer@plt>

00020b94 <myhtml_serialization_node_buffer@@Base>:
   20b94:	push	{r0, r1, r4, r5, r6, lr}
   20b98:	mov	r5, r0
   20b9c:	ldr	r6, [pc, #96]	; 20c04 <myhtml_serialization_node_buffer@@Base+0x70>
   20ba0:	subs	r0, r1, #0
   20ba4:	add	r6, pc, r6
   20ba8:	beq	20bfc <myhtml_serialization_node_buffer@@Base+0x68>
   20bac:	ldr	r3, [r0]
   20bb0:	mov	r4, r0
   20bb4:	cmp	r3, #0
   20bb8:	bne	20bd8 <myhtml_serialization_node_buffer@@Base+0x44>
   20bbc:	mov	r0, #2048	; 0x800
   20bc0:	stmib	r4, {r0, r3}
   20bc4:	bl	10c94 <mycore_malloc@plt>
   20bc8:	cmp	r0, #0
   20bcc:	str	r0, [r4]
   20bd0:	streq	r0, [r4, #4]
   20bd4:	beq	20bfc <myhtml_serialization_node_buffer@@Base+0x68>
   20bd8:	ldr	r3, [pc, #40]	; 20c08 <myhtml_serialization_node_buffer@@Base+0x74>
   20bdc:	mov	r2, r4
   20be0:	mov	r0, r5
   20be4:	ldr	r3, [r6, r3]
   20be8:	str	r3, [sp, #4]
   20bec:	mov	r1, r3
   20bf0:	add	sp, sp, #8
   20bf4:	pop	{r4, r5, r6, lr}
   20bf8:	b	10700 <myhtml_serialization_node_callback@plt>
   20bfc:	add	sp, sp, #8
   20c00:	pop	{r4, r5, r6, pc}
   20c04:	andeq	r0, pc, r4, asr r4	; <UNPREDICTABLE>
   20c08:	andeq	r0, r0, r8, lsr #17

00020c0c <myhtml_serialization_node@@Base>:
   20c0c:	b	107b4 <myhtml_serialization_node_buffer@plt>

00020c10 <myhtml_stream_buffer_create@@Base>:
   20c10:	mov	r1, #36	; 0x24
   20c14:	mov	r0, #1
   20c18:	b	ff14 <mycore_calloc@plt>

00020c1c <myhtml_stream_buffer_init@@Base>:
   20c1c:	push	{r4, lr}
   20c20:	mov	r4, r0
   20c24:	mov	r3, #0
   20c28:	str	r3, [r4, #4]
   20c2c:	str	r1, [r4, #8]
   20c30:	mov	r0, r1
   20c34:	mov	r1, #12
   20c38:	bl	ff14 <mycore_calloc@plt>
   20c3c:	ldr	r3, [pc, #16]	; 20c54 <myhtml_stream_buffer_init@@Base+0x38>
   20c40:	cmp	r0, #0
   20c44:	str	r0, [r4]
   20c48:	moveq	r0, r3
   20c4c:	movne	r0, #0
   20c50:	pop	{r4, pc}
   20c54:	andeq	r9, r0, r1, lsl #6

00020c58 <myhtml_stream_buffer_entry_init@@Base>:
   20c58:	push	{r4, r5, r6, lr}
   20c5c:	mov	r4, r0
   20c60:	ldr	r0, [r0]
   20c64:	mov	r5, r1
   20c68:	cmp	r0, #0
   20c6c:	beq	20c80 <myhtml_stream_buffer_entry_init@@Base+0x28>
   20c70:	ldr	r3, [r4, #8]
   20c74:	cmp	r3, r1
   20c78:	bcs	20c9c <myhtml_stream_buffer_entry_init@@Base+0x44>
   20c7c:	bl	10dcc <mycore_free@plt>
   20c80:	mov	r3, #0
   20c84:	mov	r0, r5
   20c88:	stmib	r4, {r3, r5}
   20c8c:	bl	10c94 <mycore_malloc@plt>
   20c90:	cmp	r0, #0
   20c94:	str	r0, [r4]
   20c98:	beq	20ca4 <myhtml_stream_buffer_entry_init@@Base+0x4c>
   20c9c:	mov	r0, #0
   20ca0:	pop	{r4, r5, r6, pc}
   20ca4:	ldr	r0, [pc]	; 20cac <myhtml_stream_buffer_entry_init@@Base+0x54>
   20ca8:	pop	{r4, r5, r6, pc}
   20cac:	andeq	r9, r0, r3, lsl #6

00020cb0 <myhtml_stream_buffer_entry_clean@@Base>:
   20cb0:	cmp	r0, #0
   20cb4:	movne	r3, #0
   20cb8:	strne	r3, [r0, #4]
   20cbc:	bx	lr

00020cc0 <myhtml_stream_buffer_entry_destroy@@Base>:
   20cc0:	push	{r4, r5, r6, lr}
   20cc4:	subs	r4, r0, #0
   20cc8:	beq	20cf4 <myhtml_stream_buffer_entry_destroy@@Base+0x34>
   20ccc:	ldr	r0, [r4]
   20cd0:	mov	r5, r1
   20cd4:	cmp	r0, #0
   20cd8:	beq	20ce0 <myhtml_stream_buffer_entry_destroy@@Base+0x20>
   20cdc:	bl	10dcc <mycore_free@plt>
   20ce0:	cmp	r5, #0
   20ce4:	beq	20cf4 <myhtml_stream_buffer_entry_destroy@@Base+0x34>
   20ce8:	mov	r0, r4
   20cec:	bl	10dcc <mycore_free@plt>
   20cf0:	mov	r4, #0
   20cf4:	mov	r0, r4
   20cf8:	pop	{r4, r5, r6, pc}

00020cfc <myhtml_stream_buffer_clean@@Base>:
   20cfc:	cmp	r0, #0
   20d00:	movne	r3, #0
   20d04:	strne	r3, [r0, #4]
   20d08:	bx	lr

00020d0c <myhtml_stream_buffer_destroy@@Base>:
   20d0c:	push	{r4, r5, r6, r7, r8, lr}
   20d10:	subs	r4, r0, #0
   20d14:	beq	20d48 <myhtml_stream_buffer_destroy@@Base+0x3c>
   20d18:	ldr	r3, [r4]
   20d1c:	mov	r6, r1
   20d20:	cmp	r3, #0
   20d24:	movne	r5, #0
   20d28:	movne	r7, #12
   20d2c:	movne	r8, r5
   20d30:	bne	20d60 <myhtml_stream_buffer_destroy@@Base+0x54>
   20d34:	cmp	r6, #0
   20d38:	beq	20d48 <myhtml_stream_buffer_destroy@@Base+0x3c>
   20d3c:	mov	r0, r4
   20d40:	bl	10dcc <mycore_free@plt>
   20d44:	mov	r4, #0
   20d48:	mov	r0, r4
   20d4c:	pop	{r4, r5, r6, r7, r8, pc}
   20d50:	mla	r0, r7, r5, r0
   20d54:	mov	r1, r8
   20d58:	bl	10148 <myhtml_stream_buffer_entry_destroy@plt>
   20d5c:	add	r5, r5, #1
   20d60:	ldm	r4, {r0, r3}
   20d64:	cmp	r5, r3
   20d68:	bcc	20d50 <myhtml_stream_buffer_destroy@@Base+0x44>
   20d6c:	bl	10dcc <mycore_free@plt>
   20d70:	b	20d34 <myhtml_stream_buffer_destroy@@Base+0x28>

00020d74 <myhtml_stream_buffer_add_entry@@Base>:
   20d74:	push	{r4, r5, r6, r7, r8, lr}
   20d78:	mov	r4, r0
   20d7c:	ldmib	r0, {r3, r5}
   20d80:	mov	r7, r1
   20d84:	cmp	r3, r5
   20d88:	bcc	20dcc <myhtml_stream_buffer_add_entry@@Base+0x58>
   20d8c:	lsl	r5, r5, #1
   20d90:	mov	r8, #12
   20d94:	mul	r1, r8, r5
   20d98:	bl	fbd8 <mycore_realloc@plt>
   20d9c:	subs	r6, r0, #0
   20da0:	bne	20db0 <myhtml_stream_buffer_add_entry@@Base+0x3c>
   20da4:	mov	r5, #0
   20da8:	mov	r0, r5
   20dac:	pop	{r4, r5, r6, r7, r8, pc}
   20db0:	ldr	r0, [r4, #8]
   20db4:	mov	r1, #0
   20db8:	sub	r2, r5, r0
   20dbc:	mla	r0, r8, r0, r6
   20dc0:	bl	108b0 <memset@plt>
   20dc4:	str	r6, [r4]
   20dc8:	str	r5, [r4, #8]
   20dcc:	ldm	r4, {r3, r5}
   20dd0:	mov	r2, #12
   20dd4:	mov	r1, r7
   20dd8:	mla	r5, r2, r5, r3
   20ddc:	mov	r0, r5
   20de0:	bl	10808 <myhtml_stream_buffer_entry_init@plt>
   20de4:	cmp	r0, #0
   20de8:	bne	20da4 <myhtml_stream_buffer_add_entry@@Base+0x30>
   20dec:	ldr	r3, [r4, #4]
   20df0:	add	r3, r3, #1
   20df4:	str	r3, [r4, #4]
   20df8:	b	20da8 <myhtml_stream_buffer_add_entry@@Base+0x34>

00020dfc <myhtml_stream_buffer_current_entry@@Base>:
   20dfc:	ldr	r3, [r0, #4]
   20e00:	cmp	r3, #0
   20e04:	movne	r2, #12
   20e08:	ldrne	r0, [r0]
   20e0c:	mulne	r3, r2, r3
   20e10:	subne	r3, r3, #12
   20e14:	addne	r0, r0, r3
   20e18:	moveq	r0, r3
   20e1c:	bx	lr

00020e20 <myhtml_tag_create@@Base>:
   20e20:	mov	r0, #20
   20e24:	b	10c94 <mycore_malloc@plt>

00020e28 <myhtml_tag_clean@@Base>:
   20e28:	push	{r4, lr}
   20e2c:	mov	r3, #252	; 0xfc
   20e30:	mov	r4, r0
   20e34:	str	r3, [r0, #8]
   20e38:	ldr	r0, [r0, #4]
   20e3c:	bl	10250 <mcsimple_clean@plt>
   20e40:	ldr	r0, [r4, #16]
   20e44:	ldr	r1, [r4, #12]
   20e48:	bl	106e8 <mchar_async_node_clean@plt>
   20e4c:	ldr	r0, [r4]
   20e50:	pop	{r4, lr}
   20e54:	b	102f8 <mctree_clean@plt>

00020e58 <myhtml_tag_init@@Base>:
   20e58:	push	{r0, r1, r2, r4, r5, lr}
   20e5c:	mov	r5, r0
   20e60:	mov	r4, r1
   20e64:	bl	102c8 <mcsimple_create@plt>
   20e68:	cmp	r0, #0
   20e6c:	str	r0, [r4, #4]
   20e70:	ldreq	r5, [pc, #104]	; 20ee0 <myhtml_tag_init@@Base+0x88>
   20e74:	beq	20ed4 <myhtml_tag_init@@Base+0x7c>
   20e78:	mov	r3, #44	; 0x2c
   20e7c:	mov	r2, #1024	; 0x400
   20e80:	mov	r1, #128	; 0x80
   20e84:	bl	10454 <mcsimple_init@plt>
   20e88:	add	r1, sp, #4
   20e8c:	ldr	r0, [r5, #4]
   20e90:	bl	10298 <mchar_async_node_add@plt>
   20e94:	str	r0, [r4, #12]
   20e98:	mov	r0, #2
   20e9c:	bl	10658 <mctree_create@plt>
   20ea0:	ldr	r3, [r5, #4]
   20ea4:	ldr	r5, [sp, #4]
   20ea8:	str	r3, [r4, #16]
   20eac:	cmp	r5, #0
   20eb0:	mov	r3, #252	; 0xfc
   20eb4:	str	r3, [r4, #8]
   20eb8:	str	r0, [r4]
   20ebc:	bne	20ed4 <myhtml_tag_init@@Base+0x7c>
   20ec0:	cmp	r0, #0
   20ec4:	moveq	r5, #2
   20ec8:	beq	20ed4 <myhtml_tag_init@@Base+0x7c>
   20ecc:	mov	r0, r4
   20ed0:	bl	11078 <myhtml_tag_clean@plt>
   20ed4:	mov	r0, r5
   20ed8:	add	sp, sp, #12
   20edc:	pop	{r4, r5, pc}
   20ee0:	muleq	r0, r0, r1

00020ee4 <myhtml_tag_destroy@@Base>:
   20ee4:	push	{r4, lr}
   20ee8:	subs	r4, r0, #0
   20eec:	beq	20f20 <myhtml_tag_destroy@@Base+0x3c>
   20ef0:	ldr	r0, [r4]
   20ef4:	bl	100b8 <mctree_destroy@plt>
   20ef8:	mov	r1, #1
   20efc:	str	r0, [r4]
   20f00:	ldr	r0, [r4, #4]
   20f04:	bl	103a0 <mcsimple_destroy@plt>
   20f08:	ldr	r1, [r4, #12]
   20f0c:	str	r0, [r4, #4]
   20f10:	ldr	r0, [r4, #16]
   20f14:	bl	10c58 <mchar_async_node_delete@plt>
   20f18:	mov	r0, r4
   20f1c:	bl	10dcc <mycore_free@plt>
   20f20:	mov	r0, #0
   20f24:	pop	{r4, pc}

00020f28 <myhtml_tag_add@@Base>:
   20f28:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   20f2c:	mov	r6, r0
   20f30:	mov	r8, r1
   20f34:	mov	r4, r2
   20f38:	ldr	r1, [r0, #12]
   20f3c:	add	r2, r2, #1
   20f40:	ldr	r0, [r0, #16]
   20f44:	mov	r9, r3
   20f48:	ldrb	r5, [sp, #40]	; 0x28
   20f4c:	bl	10910 <mchar_async_malloc@plt>
   20f50:	cmp	r5, #0
   20f54:	movne	r3, #0
   20f58:	mov	r7, r0
   20f5c:	bne	20f8c <myhtml_tag_add@@Base+0x64>
   20f60:	mov	r2, r4
   20f64:	mov	r1, r8
   20f68:	bl	108ec <strncpy@plt>
   20f6c:	strb	r5, [r7, r4]
   20f70:	b	20f9c <myhtml_tag_add@@Base+0x74>
   20f74:	ldrb	r2, [r8, r3]
   20f78:	sub	r1, r2, #65	; 0x41
   20f7c:	cmp	r1, #25
   20f80:	orrls	r2, r2, #96	; 0x60
   20f84:	strb	r2, [r7, r3]
   20f88:	add	r3, r3, #1
   20f8c:	cmp	r3, r4
   20f90:	bne	20f74 <myhtml_tag_add@@Base+0x4c>
   20f94:	mov	r3, #0
   20f98:	strb	r3, [r7, r4]
   20f9c:	ldr	r0, [r6, #4]
   20fa0:	bl	1073c <mcsimple_malloc@plt>
   20fa4:	mov	sl, #0
   20fa8:	mov	r2, r4
   20fac:	mov	r1, r7
   20fb0:	str	sl, [sp]
   20fb4:	mov	r5, r0
   20fb8:	mov	r3, r0
   20fbc:	ldr	r0, [r6]
   20fc0:	bl	10958 <mctree_insert@plt>
   20fc4:	ldr	r8, [r6, #8]
   20fc8:	mov	r2, #28
   20fcc:	add	r3, r8, #1
   20fd0:	str	r8, [r5]
   20fd4:	str	r7, [r5, #4]
   20fd8:	str	r4, [r5, #8]
   20fdc:	str	r9, [r5, #12]
   20fe0:	mov	r1, sl
   20fe4:	str	r3, [r6, #8]
   20fe8:	add	r0, r5, #16
   20fec:	bl	108b0 <memset@plt>
   20ff0:	mov	r0, r8
   20ff4:	add	sp, sp, #8
   20ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00020ffc <myhtml_tag_set_category@@Base>:
   20ffc:	cmp	r1, #251	; 0xfb
   21000:	bxls	lr
   21004:	push	{r4, r5, r6, lr}
   21008:	sub	r1, r1, #252	; 0xfc
   2100c:	ldr	r0, [r0, #4]
   21010:	mov	r5, r3
   21014:	mov	r4, r2
   21018:	bl	10fa0 <mcsimple_get_by_absolute_position@plt>
   2101c:	add	r4, r4, #4
   21020:	str	r5, [r0, r4, lsl #2]
   21024:	pop	{r4, r5, r6, pc}

00021028 <myhtml_tag_get_by_id@@Base>:
   21028:	cmp	r1, #251	; 0xfb
   2102c:	bls	2103c <myhtml_tag_get_by_id@@Base+0x14>
   21030:	sub	r1, r1, #252	; 0xfc
   21034:	ldr	r0, [r0, #4]
   21038:	b	10fa0 <mcsimple_get_by_absolute_position@plt>
   2103c:	mov	r0, r1
   21040:	b	fff8 <myhtml_tag_static_get_by_id@plt>

00021044 <myhtml_tag_get_by_name@@Base>:
   21044:	push	{r4, r5, r6, lr}
   21048:	mov	r5, r1
   2104c:	mov	r4, r0
   21050:	mov	r1, r2
   21054:	mov	r0, r5
   21058:	mov	r6, r2
   2105c:	bl	1091c <myhtml_tag_static_search@plt>
   21060:	cmp	r0, #0
   21064:	popne	{r4, r5, r6, pc}
   21068:	mov	r2, r6
   2106c:	mov	r1, r5
   21070:	ldr	r0, [r4]
   21074:	bl	10748 <mctree_search_lowercase@plt>
   21078:	ldr	r3, [r4]
   2107c:	ldr	r2, [r3]
   21080:	mov	r3, #28
   21084:	mla	r0, r3, r0, r2
   21088:	ldr	r0, [r0, #8]
   2108c:	pop	{r4, r5, r6, pc}

00021090 <myhtml_tag_static_search@@Base>:
   21090:	add	r2, r0, r1
   21094:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21098:	mov	r6, r0
   2109c:	ldrb	r2, [r2, #-1]
   210a0:	ldr	r3, [pc, #140]	; 21134 <myhtml_tag_static_search@@Base+0xa4>
   210a4:	mov	r5, r1
   210a8:	add	r3, pc, r3
   210ac:	ldr	r1, [pc, #132]	; 21138 <myhtml_tag_static_search@@Base+0xa8>
   210b0:	ldrb	r0, [r3, r2]
   210b4:	ldrb	r2, [r6]
   210b8:	ldr	r7, [pc, #124]	; 2113c <myhtml_tag_static_search@@Base+0xac>
   210bc:	mov	r9, #12
   210c0:	add	r7, pc, r7
   210c4:	ldrb	r3, [r3, r2]
   210c8:	smulbb	r0, r0, r3
   210cc:	mul	r0, r5, r0
   210d0:	bl	29508 <mcsync_mutex_unlock@@Base+0x200>
   210d4:	add	r1, r1, #1
   210d8:	mul	r1, r9, r1
   210dc:	add	r8, r7, r1
   210e0:	ldr	r4, [r7, r1]
   210e4:	cmp	r4, #0
   210e8:	beq	2111c <myhtml_tag_static_search@@Base+0x8c>
   210ec:	ldr	r3, [r4, #8]
   210f0:	cmp	r5, r3
   210f4:	bne	21128 <myhtml_tag_static_search@@Base+0x98>
   210f8:	mov	r2, r5
   210fc:	mov	r1, r6
   21100:	ldr	r0, [r4, #4]
   21104:	bl	102a4 <mycore_strncasecmp@plt>
   21108:	cmp	r0, #0
   2110c:	beq	21120 <myhtml_tag_static_search@@Base+0x90>
   21110:	ldr	r1, [r8, #4]
   21114:	cmp	r1, #0
   21118:	bne	210d8 <myhtml_tag_static_search@@Base+0x48>
   2111c:	mov	r4, #0
   21120:	mov	r0, r4
   21124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21128:	bcc	2111c <myhtml_tag_static_search@@Base+0x8c>
   2112c:	ldr	r1, [r8, #4]
   21130:	b	210d8 <myhtml_tag_static_search@@Base+0x48>
   21134:	andeq	r5, sp, sl, asr #25
   21138:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2113c:	andeq	fp, lr, r4, ror r4

00021140 <myhtml_tag_static_get_by_id@@Base>:
   21140:	ldr	r3, [pc, #20]	; 2115c <myhtml_tag_static_get_by_id@@Base+0x1c>
   21144:	mov	r2, #44	; 0x2c
   21148:	add	r3, pc, r3
   2114c:	sub	r3, r3, #1680	; 0x690
   21150:	sub	r3, r3, #12
   21154:	mla	r0, r2, r0, r3
   21158:	bx	lr
   2115c:	andeq	sp, lr, r4, ror #7

00021160 <myhtml_token_create@@Base>:
   21160:	push	{r4, r5, r6, r7, r8, lr}
   21164:	cmp	r1, #0
   21168:	mov	r7, r0
   2116c:	mov	r0, #24
   21170:	movne	r6, r1
   21174:	moveq	r6, #4096	; 0x1000
   21178:	bl	10c94 <mycore_malloc@plt>
   2117c:	subs	r4, r0, #0
   21180:	beq	211a4 <myhtml_token_create@@Base+0x44>
   21184:	bl	fd58 <mcobject_async_create@plt>
   21188:	cmp	r0, #0
   2118c:	mov	r5, r0
   21190:	str	r0, [r4, #4]
   21194:	bne	211ac <myhtml_token_create@@Base+0x4c>
   21198:	mov	r0, r4
   2119c:	bl	10dcc <mycore_free@plt>
   211a0:	mov	r4, r5
   211a4:	mov	r0, r4
   211a8:	pop	{r4, r5, r6, r7, r8, pc}
   211ac:	bl	fd58 <mcobject_async_create@plt>
   211b0:	cmp	r0, #0
   211b4:	mov	r5, r0
   211b8:	str	r0, [r4, #8]
   211bc:	bne	211cc <myhtml_token_create@@Base+0x6c>
   211c0:	ldr	r0, [r4, #4]
   211c4:	bl	10dcc <mycore_free@plt>
   211c8:	b	21198 <myhtml_token_create@@Base+0x38>
   211cc:	mov	r3, #52	; 0x34
   211d0:	mov	r2, r6
   211d4:	mov	r1, #128	; 0x80
   211d8:	ldr	r0, [r4, #4]
   211dc:	bl	fc80 <mcobject_async_init@plt>
   211e0:	mov	r3, #68	; 0x44
   211e4:	mov	r2, r6
   211e8:	mov	r1, #128	; 0x80
   211ec:	ldr	r0, [r4, #8]
   211f0:	bl	fc80 <mcobject_async_init@plt>
   211f4:	mov	r1, #0
   211f8:	ldr	r0, [r4, #4]
   211fc:	bl	10a90 <mcobject_async_node_add@plt>
   21200:	mov	r1, #0
   21204:	str	r0, [r4, #12]
   21208:	ldr	r0, [r4, #8]
   2120c:	bl	10a90 <mcobject_async_node_add@plt>
   21210:	str	r7, [r4]
   21214:	str	r0, [r4, #16]
   21218:	b	211a4 <myhtml_token_create@@Base+0x44>

0002121c <myhtml_token_clean@@Base>:
   2121c:	push	{r4, lr}
   21220:	mov	r4, r0
   21224:	ldr	r1, [r0, #12]
   21228:	ldr	r0, [r0, #4]
   2122c:	bl	10880 <mcobject_async_node_clean@plt>
   21230:	ldr	r1, [r4, #16]
   21234:	ldr	r0, [r4, #8]
   21238:	pop	{r4, lr}
   2123c:	b	10880 <mcobject_async_node_clean@plt>

00021240 <myhtml_token_clean_all@@Base>:
   21240:	push	{r4, lr}
   21244:	mov	r4, r0
   21248:	ldr	r0, [r0, #4]
   2124c:	bl	11054 <mcobject_async_clean@plt>
   21250:	ldr	r0, [r4, #8]
   21254:	pop	{r4, lr}
   21258:	b	11054 <mcobject_async_clean@plt>

0002125c <myhtml_token_destroy@@Base>:
   2125c:	push	{r4, lr}
   21260:	subs	r4, r0, #0
   21264:	beq	212a0 <myhtml_token_destroy@@Base+0x44>
   21268:	ldr	r0, [r4, #4]
   2126c:	cmp	r0, #0
   21270:	beq	21280 <myhtml_token_destroy@@Base+0x24>
   21274:	mov	r1, #1
   21278:	bl	10b20 <mcobject_async_destroy@plt>
   2127c:	str	r0, [r4, #4]
   21280:	ldr	r0, [r4, #8]
   21284:	cmp	r0, #0
   21288:	beq	21298 <myhtml_token_destroy@@Base+0x3c>
   2128c:	mov	r1, #1
   21290:	bl	10b20 <mcobject_async_destroy@plt>
   21294:	str	r0, [r4, #8]
   21298:	mov	r0, r4
   2129c:	bl	10dcc <mycore_free@plt>
   212a0:	mov	r0, #0
   212a4:	pop	{r4, pc}

000212a8 <myhtml_token_node_clean@@Base>:
   212a8:	push	{r4, lr}
   212ac:	mov	r2, #52	; 0x34
   212b0:	mov	r4, r0
   212b4:	mov	r1, #0
   212b8:	bl	108b0 <memset@plt>
   212bc:	mov	r3, #8
   212c0:	str	r3, [r4, #48]	; 0x30
   212c4:	add	r0, r4, #4
   212c8:	pop	{r4, lr}
   212cc:	b	11090 <mycore_string_clean_all@plt>

000212d0 <myhtml_token_node_create@@Base>:
   212d0:	push	{r4, lr}
   212d4:	mov	r2, #0
   212d8:	ldr	r0, [r0, #4]
   212dc:	bl	10bbc <mcobject_async_malloc@plt>
   212e0:	subs	r4, r0, #0
   212e4:	beq	212ec <myhtml_token_node_create@@Base+0x1c>
   212e8:	bl	10f7c <myhtml_token_node_clean@plt>
   212ec:	mov	r0, r4
   212f0:	pop	{r4, pc}

000212f4 <myhtml_token_attr_clean@@Base>:
   212f4:	push	{r4, lr}
   212f8:	mov	r2, #68	; 0x44
   212fc:	mov	r4, r0
   21300:	mov	r1, #0
   21304:	bl	108b0 <memset@plt>
   21308:	mov	r3, #1
   2130c:	add	r0, r4, #8
   21310:	str	r3, [r4, #64]	; 0x40
   21314:	bl	11090 <mycore_string_clean_all@plt>
   21318:	add	r0, r4, #28
   2131c:	pop	{r4, lr}
   21320:	b	11090 <mycore_string_clean_all@plt>

00021324 <myhtml_token_attr_create@@Base>:
   21324:	push	{r4, lr}
   21328:	mov	r2, #0
   2132c:	ldr	r0, [r0, #8]
   21330:	bl	10bbc <mcobject_async_malloc@plt>
   21334:	subs	r4, r0, #0
   21338:	beq	21340 <myhtml_token_attr_create@@Base+0x1c>
   2133c:	bl	10004 <myhtml_token_attr_clean@plt>
   21340:	mov	r0, r4
   21344:	pop	{r4, pc}

00021348 <myhtml_token_node_tag_id@@Base>:
   21348:	ldr	r0, [r0]
   2134c:	bx	lr

00021350 <myhtml_token_node_raw_position@@Base>:
   21350:	cmp	r1, #0
   21354:	streq	r1, [r0]
   21358:	ldrne	r3, [r1, #28]
   2135c:	ldrne	r2, [r1, #24]
   21360:	streq	r1, [r0, #4]
   21364:	stmne	r0, {r2, r3}
   21368:	bx	lr

0002136c <myhtml_token_node_element_position@@Base>:
   2136c:	cmp	r1, #0
   21370:	streq	r1, [r0]
   21374:	ldrne	r3, [r1, #36]	; 0x24
   21378:	ldrne	r2, [r1, #32]
   2137c:	streq	r1, [r0, #4]
   21380:	stmne	r0, {r2, r3}
   21384:	bx	lr

00021388 <myhtml_token_node_attribute_first@@Base>:
   21388:	ldr	r0, [r0, #40]	; 0x28
   2138c:	bx	lr

00021390 <myhtml_token_node_attribute_last@@Base>:
   21390:	ldr	r0, [r0, #44]	; 0x2c
   21394:	bx	lr

00021398 <myhtml_token_node_text@@Base>:
   21398:	cmp	r1, #0
   2139c:	ldrne	r3, [r0, #12]
   213a0:	ldr	r0, [r0, #4]
   213a4:	strne	r3, [r1]
   213a8:	bx	lr

000213ac <myhtml_token_node_string@@Base>:
   213ac:	add	r0, r0, #4
   213b0:	bx	lr

000213b4 <myhtml_token_node_is_close@@Base>:
   213b4:	ldr	r0, [r0, #48]	; 0x30
   213b8:	and	r0, r0, #1
   213bc:	bx	lr

000213c0 <myhtml_token_node_is_close_self@@Base>:
   213c0:	ldr	r0, [r0, #48]	; 0x30
   213c4:	lsr	r0, r0, #1
   213c8:	and	r0, r0, #1
   213cc:	bx	lr

000213d0 <myhtml_token_node_wait_for_done@@Base>:
   213d0:	push	{r4, r5, r6, lr}
   213d4:	mov	r5, r0
   213d8:	mov	r4, r1
   213dc:	ldr	r3, [r4, #48]	; 0x30
   213e0:	tst	r3, #4
   213e4:	beq	213ec <myhtml_token_node_wait_for_done@@Base+0x1c>
   213e8:	pop	{r4, r5, r6, pc}
   213ec:	ldr	r3, [r5]
   213f0:	ldr	r3, [r3]
   213f4:	ldr	r3, [r3]
   213f8:	ldr	r0, [r3, #24]
   213fc:	bl	100a0 <mythread_nanosleep_sleep@plt>
   21400:	b	213dc <myhtml_token_node_wait_for_done@@Base+0xc>

00021404 <myhtml_token_set_done@@Base>:
   21404:	ldr	r3, [r0, #48]	; 0x30
   21408:	orr	r3, r3, #4
   2140c:	str	r3, [r0, #48]	; 0x30
   21410:	bx	lr

00021414 <myhtml_token_node_text_append@@Base>:
   21414:	ldr	r0, [r0]
   21418:	push	{r4, r5, r6, lr}
   2141c:	add	r4, r1, #4
   21420:	mov	r6, r2
   21424:	mov	r5, r3
   21428:	mov	r2, r4
   2142c:	ldr	r1, [r0, #52]	; 0x34
   21430:	add	r3, r3, #2
   21434:	ldr	r0, [r0, #4]
   21438:	bl	10610 <mycore_string_init@plt>
   2143c:	mov	r2, r5
   21440:	mov	r1, r6
   21444:	mov	r0, r4
   21448:	pop	{r4, r5, r6, lr}
   2144c:	b	108d4 <mycore_string_append@plt>

00021450 <myhtml_token_node_attr_append@@Base>:
   21450:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21454:	mov	r8, r0
   21458:	mov	r5, r1
   2145c:	mov	sl, r2
   21460:	ldr	r1, [sp, #40]	; 0x28
   21464:	mov	r2, #0
   21468:	ldr	r0, [r0, #8]
   2146c:	mov	r9, r3
   21470:	ldr	r7, [sp, #36]	; 0x24
   21474:	bl	10bbc <mcobject_async_malloc@plt>
   21478:	mov	r3, #0
   2147c:	cmp	r9, r3
   21480:	mov	r6, r0
   21484:	mov	r4, r0
   21488:	str	r3, [r6], #8
   2148c:	beq	2151c <myhtml_token_node_attr_append@@Base+0xcc>
   21490:	ldr	r0, [r8]
   21494:	mov	r2, r6
   21498:	add	r3, r9, #1
   2149c:	ldr	r1, [r0, #52]	; 0x34
   214a0:	ldr	r0, [r0, #4]
   214a4:	bl	10610 <mycore_string_init@plt>
   214a8:	mov	r2, r9
   214ac:	mov	r1, sl
   214b0:	mov	r0, r6
   214b4:	bl	10688 <mycore_string_append_lowercase@plt>
   214b8:	cmp	r7, #0
   214bc:	add	r6, r4, #28
   214c0:	beq	21528 <myhtml_token_node_attr_append@@Base+0xd8>
   214c4:	ldr	r0, [r8]
   214c8:	mov	r2, r6
   214cc:	add	r3, r7, #1
   214d0:	ldr	r1, [r0, #52]	; 0x34
   214d4:	ldr	r0, [r0, #4]
   214d8:	bl	10610 <mycore_string_init@plt>
   214dc:	mov	r2, r7
   214e0:	ldr	r1, [sp, #32]
   214e4:	mov	r0, r6
   214e8:	bl	108d4 <mycore_string_append@plt>
   214ec:	ldr	r3, [r5, #40]	; 0x28
   214f0:	mov	r0, r4
   214f4:	cmp	r3, #0
   214f8:	streq	r3, [r4, #4]
   214fc:	ldrne	r3, [r5, #44]	; 0x2c
   21500:	streq	r4, [r5, #40]	; 0x28
   21504:	strne	r4, [r3]
   21508:	strne	r3, [r4, #4]
   2150c:	mov	r3, #1
   21510:	str	r4, [r5, #44]	; 0x2c
   21514:	str	r3, [r4, #64]	; 0x40
   21518:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2151c:	mov	r0, r6
   21520:	bl	11090 <mycore_string_clean_all@plt>
   21524:	b	214b8 <myhtml_token_node_attr_append@@Base+0x68>
   21528:	mov	r0, r6
   2152c:	bl	11090 <mycore_string_clean_all@plt>
   21530:	b	214ec <myhtml_token_node_attr_append@@Base+0x9c>

00021534 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   21534:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21538:	mov	r8, r0
   2153c:	mov	r9, r1
   21540:	mov	fp, r2
   21544:	ldr	r1, [sp, #48]	; 0x30
   21548:	mov	r2, #0
   2154c:	ldr	r0, [r0, #8]
   21550:	mov	sl, r3
   21554:	ldr	r5, [sp, #44]	; 0x2c
   21558:	bl	10bbc <mcobject_async_malloc@plt>
   2155c:	mov	r3, #0
   21560:	cmp	sl, r3
   21564:	mov	r7, r0
   21568:	mov	r4, r0
   2156c:	str	r3, [r7], #8
   21570:	add	r6, r0, #28
   21574:	beq	2160c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   21578:	ldr	r0, [r8]
   2157c:	add	r3, sl, #1
   21580:	mov	r2, r7
   21584:	ldr	r1, [r0, #52]	; 0x34
   21588:	ldr	r0, [r0, #4]
   2158c:	bl	10610 <mycore_string_init@plt>
   21590:	ldr	r3, [sp, #52]	; 0x34
   21594:	cmp	r3, #0
   21598:	bne	215c0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x8c>
   2159c:	mov	r2, sl
   215a0:	mov	r1, fp
   215a4:	mov	r0, r7
   215a8:	bl	10688 <mycore_string_append_lowercase@plt>
   215ac:	cmp	r5, #0
   215b0:	bne	21680 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x14c>
   215b4:	mov	r0, r6
   215b8:	bl	11090 <mycore_string_clean_all@plt>
   215bc:	b	21650 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x11c>
   215c0:	ldr	r3, [sp, #52]	; 0x34
   215c4:	mov	r2, sl
   215c8:	mov	r1, fp
   215cc:	mov	r0, r7
   215d0:	bl	fe3c <myencoding_string_append_lowercase_ascii@plt>
   215d4:	cmp	r5, #0
   215d8:	beq	215b4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x80>
   215dc:	ldr	r0, [r8]
   215e0:	add	r3, r5, #1
   215e4:	mov	r2, r6
   215e8:	ldr	r1, [r0, #52]	; 0x34
   215ec:	ldr	r0, [r0, #4]
   215f0:	bl	10610 <mycore_string_init@plt>
   215f4:	ldr	r3, [sp, #52]	; 0x34
   215f8:	mov	r2, r5
   215fc:	ldr	r1, [sp, #40]	; 0x28
   21600:	mov	r0, r6
   21604:	bl	10460 <myencoding_string_append@plt>
   21608:	b	21650 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x11c>
   2160c:	mov	r0, r7
   21610:	bl	11090 <mycore_string_clean_all@plt>
   21614:	cmp	r5, #0
   21618:	beq	215b4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x80>
   2161c:	ldr	r0, [r8]
   21620:	add	r3, r5, #1
   21624:	mov	r2, r6
   21628:	ldr	r1, [r0, #52]	; 0x34
   2162c:	ldr	r0, [r0, #4]
   21630:	bl	10610 <mycore_string_init@plt>
   21634:	ldr	r3, [sp, #52]	; 0x34
   21638:	cmp	r3, #0
   2163c:	bne	215f4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xc0>
   21640:	mov	r2, r5
   21644:	ldr	r1, [sp, #40]	; 0x28
   21648:	mov	r0, r6
   2164c:	bl	108d4 <mycore_string_append@plt>
   21650:	ldr	r3, [r9, #40]	; 0x28
   21654:	mov	r0, r4
   21658:	cmp	r3, #0
   2165c:	streq	r3, [r4, #4]
   21660:	ldrne	r3, [r9, #44]	; 0x2c
   21664:	streq	r4, [r9, #40]	; 0x28
   21668:	strne	r4, [r3]
   2166c:	strne	r3, [r4, #4]
   21670:	mov	r3, #1
   21674:	str	r4, [r9, #44]	; 0x2c
   21678:	str	r3, [r4, #64]	; 0x40
   2167c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21680:	ldr	r0, [r8]
   21684:	add	r3, r5, #1
   21688:	mov	r2, r6
   2168c:	ldr	r1, [r0, #52]	; 0x34
   21690:	ldr	r0, [r0, #4]
   21694:	bl	10610 <mycore_string_init@plt>
   21698:	b	21640 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x10c>

0002169c <myhtml_token_attr_copy@@Base>:
   2169c:	push	{r4, r5, r6, r7, r8, lr}
   216a0:	mov	r5, r1
   216a4:	mov	r8, r0
   216a8:	mov	r1, r3
   216ac:	mov	r6, r2
   216b0:	ldr	r0, [r0, #8]
   216b4:	mov	r2, #0
   216b8:	bl	10bbc <mcobject_async_malloc@plt>
   216bc:	mov	r3, #0
   216c0:	mov	r7, r0
   216c4:	mov	r4, r0
   216c8:	str	r3, [r7], #8
   216cc:	ldr	r3, [r5, #16]
   216d0:	cmp	r3, #0
   216d4:	beq	21768 <myhtml_token_attr_copy@@Base+0xcc>
   216d8:	ldr	r0, [r8]
   216dc:	mov	r2, r7
   216e0:	add	r3, r3, #1
   216e4:	ldr	r1, [r0, #52]	; 0x34
   216e8:	ldr	r0, [r0, #4]
   216ec:	bl	10610 <mycore_string_init@plt>
   216f0:	ldr	r2, [r5, #16]
   216f4:	ldr	r1, [r5, #8]
   216f8:	mov	r0, r7
   216fc:	bl	10688 <mycore_string_append_lowercase@plt>
   21700:	ldr	r3, [r5, #36]	; 0x24
   21704:	add	r7, r4, #28
   21708:	cmp	r3, #0
   2170c:	beq	21774 <myhtml_token_attr_copy@@Base+0xd8>
   21710:	ldr	r0, [r8]
   21714:	mov	r2, r7
   21718:	add	r3, r3, #1
   2171c:	ldr	r1, [r0, #52]	; 0x34
   21720:	ldr	r0, [r0, #4]
   21724:	bl	10610 <mycore_string_init@plt>
   21728:	ldr	r2, [r5, #36]	; 0x24
   2172c:	ldr	r1, [r5, #28]
   21730:	mov	r0, r7
   21734:	bl	108d4 <mycore_string_append@plt>
   21738:	ldr	r3, [r6, #40]	; 0x28
   2173c:	mov	r0, #1
   21740:	cmp	r3, #0
   21744:	streq	r3, [r4, #4]
   21748:	ldrne	r3, [r6, #44]	; 0x2c
   2174c:	streq	r4, [r6, #40]	; 0x28
   21750:	strne	r4, [r3]
   21754:	strne	r3, [r4, #4]
   21758:	ldr	r3, [r5, #64]	; 0x40
   2175c:	str	r4, [r6, #44]	; 0x2c
   21760:	str	r3, [r4, #64]	; 0x40
   21764:	pop	{r4, r5, r6, r7, r8, pc}
   21768:	mov	r0, r7
   2176c:	bl	11090 <mycore_string_clean_all@plt>
   21770:	b	21700 <myhtml_token_attr_copy@@Base+0x64>
   21774:	mov	r0, r7
   21778:	bl	11090 <mycore_string_clean_all@plt>
   2177c:	b	21738 <myhtml_token_attr_copy@@Base+0x9c>

00021780 <myhtml_token_node_attr_copy@@Base>:
   21780:	push	{r4, r5, r6, r7, r8, lr}
   21784:	mov	r5, r0
   21788:	ldr	r4, [r1, #40]	; 0x28
   2178c:	mov	r6, r2
   21790:	mov	r7, r3
   21794:	cmp	r4, #0
   21798:	bne	217a0 <myhtml_token_node_attr_copy@@Base+0x20>
   2179c:	pop	{r4, r5, r6, r7, r8, pc}
   217a0:	mov	r1, r4
   217a4:	mov	r3, r7
   217a8:	mov	r2, r6
   217ac:	mov	r0, r5
   217b0:	bl	10760 <myhtml_token_attr_copy@plt>
   217b4:	ldr	r4, [r4]
   217b8:	b	21794 <myhtml_token_node_attr_copy@@Base+0x14>

000217bc <myhtml_token_node_clone@@Base>:
   217bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   217c0:	subs	r5, r1, #0
   217c4:	bne	217d4 <myhtml_token_node_clone@@Base+0x18>
   217c8:	mov	r4, #0
   217cc:	mov	r0, r4
   217d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   217d4:	mov	r1, r2
   217d8:	mov	r6, r0
   217dc:	mov	r7, r3
   217e0:	ldr	r9, [r0]
   217e4:	bl	10a0c <myhtml_token_node_create@plt>
   217e8:	subs	r4, r0, #0
   217ec:	beq	217c8 <myhtml_token_node_clone@@Base+0xc>
   217f0:	ldr	r3, [r5]
   217f4:	add	r8, r4, #4
   217f8:	str	r3, [r4]
   217fc:	ldr	r3, [r5, #48]	; 0x30
   21800:	str	r3, [r4, #48]	; 0x30
   21804:	mov	r3, #0
   21808:	str	r3, [r4, #40]	; 0x28
   2180c:	str	r3, [r4, #44]	; 0x2c
   21810:	ldr	r3, [r5, #24]
   21814:	str	r3, [r4, #24]
   21818:	ldr	r3, [r5, #28]
   2181c:	str	r3, [r4, #28]
   21820:	ldr	r3, [r5, #32]
   21824:	str	r3, [r4, #32]
   21828:	ldr	r3, [r5, #36]	; 0x24
   2182c:	str	r3, [r4, #36]	; 0x24
   21830:	ldr	r3, [r5, #12]
   21834:	cmp	r3, #0
   21838:	beq	21878 <myhtml_token_node_clone@@Base+0xbc>
   2183c:	mov	r2, r8
   21840:	ldr	r1, [r9, #52]	; 0x34
   21844:	add	r3, r3, #1
   21848:	ldr	r0, [r9, #4]
   2184c:	bl	10610 <mycore_string_init@plt>
   21850:	ldr	r2, [r5, #12]
   21854:	ldr	r1, [r5, #4]
   21858:	mov	r0, r8
   2185c:	bl	108d4 <mycore_string_append@plt>
   21860:	mov	r3, r7
   21864:	mov	r2, r4
   21868:	mov	r1, r5
   2186c:	mov	r0, r6
   21870:	bl	10580 <myhtml_token_node_attr_copy@plt>
   21874:	b	217cc <myhtml_token_node_clone@@Base+0x10>
   21878:	mov	r0, r8
   2187c:	bl	11090 <mycore_string_clean_all@plt>
   21880:	b	21860 <myhtml_token_node_clone@@Base+0xa4>

00021884 <myhtml_token_attr_match@@Base>:
   21884:	push	{r4, r5, r6, r7, r8, lr}
   21888:	mov	r5, r2
   2188c:	ldr	r7, [sp, #28]
   21890:	ldr	r4, [r1, #40]	; 0x28
   21894:	mov	r6, r3
   21898:	cmp	r4, #0
   2189c:	beq	218e0 <myhtml_token_attr_match@@Base+0x5c>
   218a0:	ldr	r3, [r4, #16]
   218a4:	cmp	r3, r6
   218a8:	bne	218ec <myhtml_token_attr_match@@Base+0x68>
   218ac:	ldr	r3, [r4, #36]	; 0x24
   218b0:	cmp	r3, r7
   218b4:	bne	218ec <myhtml_token_attr_match@@Base+0x68>
   218b8:	mov	r1, r5
   218bc:	ldr	r0, [r4, #8]
   218c0:	bl	fbf0 <mycore_strcmp@plt>
   218c4:	cmp	r0, #0
   218c8:	bne	218ec <myhtml_token_attr_match@@Base+0x68>
   218cc:	ldr	r1, [sp, #24]
   218d0:	ldr	r0, [r4, #28]
   218d4:	bl	fbf0 <mycore_strcmp@plt>
   218d8:	cmp	r0, #0
   218dc:	beq	218e4 <myhtml_token_attr_match@@Base+0x60>
   218e0:	mov	r4, #0
   218e4:	mov	r0, r4
   218e8:	pop	{r4, r5, r6, r7, r8, pc}
   218ec:	ldr	r4, [r4]
   218f0:	b	21898 <myhtml_token_attr_match@@Base+0x14>

000218f4 <myhtml_token_attr_match_case@@Base>:
   218f4:	push	{r4, r5, r6, r7, r8, lr}
   218f8:	mov	r5, r2
   218fc:	ldr	r7, [sp, #28]
   21900:	ldr	r4, [r1, #40]	; 0x28
   21904:	mov	r6, r3
   21908:	cmp	r4, #0
   2190c:	beq	21950 <myhtml_token_attr_match_case@@Base+0x5c>
   21910:	ldr	r3, [r4, #16]
   21914:	cmp	r3, r6
   21918:	bne	2195c <myhtml_token_attr_match_case@@Base+0x68>
   2191c:	ldr	r3, [r4, #36]	; 0x24
   21920:	cmp	r3, r7
   21924:	bne	2195c <myhtml_token_attr_match_case@@Base+0x68>
   21928:	mov	r1, r5
   2192c:	ldr	r0, [r4, #8]
   21930:	bl	fbf0 <mycore_strcmp@plt>
   21934:	cmp	r0, #0
   21938:	bne	2195c <myhtml_token_attr_match_case@@Base+0x68>
   2193c:	ldr	r1, [sp, #24]
   21940:	ldr	r0, [r4, #28]
   21944:	bl	1052c <mycore_strcasecmp@plt>
   21948:	cmp	r0, #0
   2194c:	beq	21954 <myhtml_token_attr_match_case@@Base+0x60>
   21950:	mov	r4, #0
   21954:	mov	r0, r4
   21958:	pop	{r4, r5, r6, r7, r8, pc}
   2195c:	ldr	r4, [r4]
   21960:	b	21908 <myhtml_token_attr_match_case@@Base+0x14>

00021964 <_myhtml_token_create_copy_srt@@Base>:
   21964:	ldr	r0, [r0]
   21968:	push	{r4, r5, r6, lr}
   2196c:	mov	r5, r1
   21970:	mov	r4, r2
   21974:	ldr	r1, [r0, #52]	; 0x34
   21978:	add	r2, r2, #2
   2197c:	ldr	r0, [r0, #4]
   21980:	mov	r6, r3
   21984:	bl	10910 <mchar_async_malloc@plt>
   21988:	mov	r2, r4
   2198c:	mov	r1, r5
   21990:	str	r0, [r6]
   21994:	pop	{r4, r5, r6, lr}
   21998:	b	102e0 <mycore_string_raw_copy@plt>

0002199c <myhtml_token_strict_doctype_by_token@@Base>:
   2199c:	push	{r4, r5, r6, lr}
   219a0:	add	r3, r2, #4
   219a4:	ldr	r5, [r1, #40]	; 0x28
   219a8:	mov	r6, r0
   219ac:	cmp	r5, #0
   219b0:	mov	r4, r2
   219b4:	beq	21a94 <myhtml_token_strict_doctype_by_token@@Base+0xf8>
   219b8:	ldr	r2, [r5, #16]
   219bc:	cmp	r2, #0
   219c0:	beq	21a94 <myhtml_token_strict_doctype_by_token@@Base+0xf8>
   219c4:	ldr	r1, [r5, #8]
   219c8:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   219cc:	ldr	r0, [pc, #396]	; 21b60 <myhtml_token_strict_doctype_by_token@@Base+0x1c4>
   219d0:	ldr	r1, [r4, #4]
   219d4:	add	r0, pc, r0
   219d8:	bl	fbf0 <mycore_strcmp@plt>
   219dc:	ldr	r5, [r5]
   219e0:	cmp	r0, #0
   219e4:	movne	r3, #0
   219e8:	moveq	r3, #1
   219ec:	cmp	r5, #0
   219f0:	strb	r3, [r4]
   219f4:	popeq	{r4, r5, r6, pc}
   219f8:	ldr	r3, [r5, #36]	; 0x24
   219fc:	cmp	r3, #0
   21a00:	popeq	{r4, r5, r6, pc}
   21a04:	ldr	r1, [pc, #344]	; 21b64 <myhtml_token_strict_doctype_by_token@@Base+0x1c8>
   21a08:	ldr	r0, [r5, #28]
   21a0c:	add	r1, pc, r1
   21a10:	bl	1052c <mycore_strcasecmp@plt>
   21a14:	cmp	r0, #0
   21a18:	bne	21ae0 <myhtml_token_strict_doctype_by_token@@Base+0x144>
   21a1c:	ldr	r5, [r5]
   21a20:	cmp	r5, #0
   21a24:	beq	21b3c <myhtml_token_strict_doctype_by_token@@Base+0x1a0>
   21a28:	ldr	r2, [r5, #36]	; 0x24
   21a2c:	cmp	r2, #0
   21a30:	beq	21b3c <myhtml_token_strict_doctype_by_token@@Base+0x1a0>
   21a34:	ldr	r1, [r5, #28]
   21a38:	add	r3, r4, #8
   21a3c:	mov	r0, r6
   21a40:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   21a44:	ldr	r1, [r5]
   21a48:	add	r5, r4, #12
   21a4c:	cmp	r1, #0
   21a50:	beq	21a68 <myhtml_token_strict_doctype_by_token@@Base+0xcc>
   21a54:	ldr	r2, [r1, #36]	; 0x24
   21a58:	cmp	r2, #0
   21a5c:	movne	r3, r5
   21a60:	ldrne	r1, [r1, #28]
   21a64:	bne	21a88 <myhtml_token_strict_doctype_by_token@@Base+0xec>
   21a68:	ldr	r0, [r4, #12]
   21a6c:	cmp	r0, #0
   21a70:	beq	21a78 <myhtml_token_strict_doctype_by_token@@Base+0xdc>
   21a74:	bl	10dcc <mycore_free@plt>
   21a78:	ldr	r1, [pc, #232]	; 21b68 <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   21a7c:	mov	r3, r5
   21a80:	mov	r2, #1
   21a84:	add	r1, pc, r1
   21a88:	mov	r0, r6
   21a8c:	pop	{r4, r5, r6, lr}
   21a90:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   21a94:	ldr	r1, [pc, #208]	; 21b6c <myhtml_token_strict_doctype_by_token@@Base+0x1d0>
   21a98:	mov	r5, #0
   21a9c:	mov	r0, r6
   21aa0:	strb	r5, [r4]
   21aa4:	mov	r2, #1
   21aa8:	add	r1, pc, r1
   21aac:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   21ab0:	ldr	r0, [r4, #8]
   21ab4:	cmp	r0, r5
   21ab8:	beq	21ac0 <myhtml_token_strict_doctype_by_token@@Base+0x124>
   21abc:	bl	10dcc <mycore_free@plt>
   21ac0:	ldr	r0, [r4, #12]
   21ac4:	str	r5, [r4, #8]
   21ac8:	cmp	r0, #0
   21acc:	beq	21ad4 <myhtml_token_strict_doctype_by_token@@Base+0x138>
   21ad0:	bl	10dcc <mycore_free@plt>
   21ad4:	mov	r3, #0
   21ad8:	str	r3, [r4, #12]
   21adc:	pop	{r4, r5, r6, pc}
   21ae0:	ldr	r1, [pc, #136]	; 21b70 <myhtml_token_strict_doctype_by_token@@Base+0x1d4>
   21ae4:	ldr	r2, [r5, #36]	; 0x24
   21ae8:	add	r1, pc, r1
   21aec:	ldr	r0, [r5, #28]
   21af0:	bl	102a4 <mycore_strncasecmp@plt>
   21af4:	cmp	r0, #0
   21af8:	bne	21b3c <myhtml_token_strict_doctype_by_token@@Base+0x1a0>
   21afc:	ldr	r5, [r5]
   21b00:	cmp	r5, #0
   21b04:	beq	21b3c <myhtml_token_strict_doctype_by_token@@Base+0x1a0>
   21b08:	ldr	r3, [r5, #36]	; 0x24
   21b0c:	cmp	r3, #0
   21b10:	beq	21b3c <myhtml_token_strict_doctype_by_token@@Base+0x1a0>
   21b14:	ldr	r1, [pc, #88]	; 21b74 <myhtml_token_strict_doctype_by_token@@Base+0x1d8>
   21b18:	add	r3, r4, #8
   21b1c:	mov	r2, #1
   21b20:	add	r1, pc, r1
   21b24:	mov	r0, r6
   21b28:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   21b2c:	add	r3, r4, #12
   21b30:	ldr	r2, [r5, #36]	; 0x24
   21b34:	ldr	r1, [r5, #28]
   21b38:	b	21a88 <myhtml_token_strict_doctype_by_token@@Base+0xec>
   21b3c:	ldr	r0, [r4, #8]
   21b40:	cmp	r0, #0
   21b44:	beq	21b4c <myhtml_token_strict_doctype_by_token@@Base+0x1b0>
   21b48:	bl	10dcc <mycore_free@plt>
   21b4c:	ldr	r0, [r4, #12]
   21b50:	mov	r3, #0
   21b54:	str	r3, [r4, #8]
   21b58:	cmp	r0, r3
   21b5c:	b	21acc <myhtml_token_strict_doctype_by_token@@Base+0x130>
   21b60:	muleq	sp, lr, r3
   21b64:	andeq	r5, sp, r8, lsr #6
   21b68:	andeq	r5, sp, lr, asr #20
   21b6c:	andeq	r5, sp, sl, lsr #20
   21b70:	andeq	r5, sp, lr, asr r2
   21b74:			; <UNDEFINED> instruction: 0x000d59b2

00021b78 <myhtml_token_doctype_check_html_4_0@@Base>:
   21b78:	ldr	r1, [pc, #68]	; 21bc4 <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   21b7c:	push	{r4, lr}
   21b80:	add	r1, pc, r1
   21b84:	mov	r4, r0
   21b88:	ldr	r0, [r0, #8]
   21b8c:	bl	fbf0 <mycore_strcmp@plt>
   21b90:	cmp	r0, #0
   21b94:	popeq	{r4, pc}
   21b98:	ldr	r0, [r4, #12]
   21b9c:	cmp	r0, #0
   21ba0:	beq	21bbc <myhtml_token_doctype_check_html_4_0@@Base+0x44>
   21ba4:	ldr	r1, [pc, #28]	; 21bc8 <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   21ba8:	add	r1, pc, r1
   21bac:	bl	fbf0 <mycore_strcmp@plt>
   21bb0:	adds	r0, r0, #0
   21bb4:	movne	r0, #1
   21bb8:	pop	{r4, pc}
   21bbc:	mov	r0, #1
   21bc0:	pop	{r4, pc}
   21bc4:	andeq	r5, sp, r4, asr r9
   21bc8:	andeq	r5, sp, r5, asr #18

00021bcc <myhtml_token_doctype_check_html_4_01@@Base>:
   21bcc:	ldr	r1, [pc, #68]	; 21c18 <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   21bd0:	push	{r4, lr}
   21bd4:	add	r1, pc, r1
   21bd8:	mov	r4, r0
   21bdc:	ldr	r0, [r0, #8]
   21be0:	bl	fbf0 <mycore_strcmp@plt>
   21be4:	cmp	r0, #0
   21be8:	popeq	{r4, pc}
   21bec:	ldr	r0, [r4, #12]
   21bf0:	cmp	r0, #0
   21bf4:	beq	21c10 <myhtml_token_doctype_check_html_4_01@@Base+0x44>
   21bf8:	ldr	r1, [pc, #28]	; 21c1c <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   21bfc:	add	r1, pc, r1
   21c00:	bl	fbf0 <mycore_strcmp@plt>
   21c04:	adds	r0, r0, #0
   21c08:	movne	r0, #1
   21c0c:	pop	{r4, pc}
   21c10:	mov	r0, #1
   21c14:	pop	{r4, pc}
   21c18:	andeq	r5, sp, r4, asr #18
   21c1c:	andeq	r5, sp, r6, lsr r9

00021c20 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   21c20:	ldr	r3, [r0, #12]
   21c24:	cmp	r3, #0
   21c28:	beq	21c68 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x48>
   21c2c:	ldr	r1, [pc, #60]	; 21c70 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x50>
   21c30:	push	{r4, lr}
   21c34:	add	r1, pc, r1
   21c38:	mov	r4, r0
   21c3c:	ldr	r0, [r0, #8]
   21c40:	bl	fbf0 <mycore_strcmp@plt>
   21c44:	cmp	r0, #0
   21c48:	popeq	{r4, pc}
   21c4c:	ldr	r1, [pc, #32]	; 21c74 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   21c50:	ldr	r0, [r4, #12]
   21c54:	add	r1, pc, r1
   21c58:	bl	fbf0 <mycore_strcmp@plt>
   21c5c:	adds	r0, r0, #0
   21c60:	movne	r0, #1
   21c64:	pop	{r4, pc}
   21c68:	mov	r0, #1
   21c6c:	bx	lr
   21c70:	andeq	r5, sp, r4, lsr #18
   21c74:	andeq	r5, sp, r5, lsr #18

00021c78 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   21c78:	ldr	r3, [r0, #12]
   21c7c:	cmp	r3, #0
   21c80:	beq	21cc0 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x48>
   21c84:	ldr	r1, [pc, #60]	; 21cc8 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x50>
   21c88:	push	{r4, lr}
   21c8c:	add	r1, pc, r1
   21c90:	mov	r4, r0
   21c94:	ldr	r0, [r0, #8]
   21c98:	bl	fbf0 <mycore_strcmp@plt>
   21c9c:	cmp	r0, #0
   21ca0:	popeq	{r4, pc}
   21ca4:	ldr	r1, [pc, #32]	; 21ccc <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   21ca8:	ldr	r0, [r4, #12]
   21cac:	add	r1, pc, r1
   21cb0:	bl	fbf0 <mycore_strcmp@plt>
   21cb4:	adds	r0, r0, #0
   21cb8:	movne	r0, #1
   21cbc:	pop	{r4, pc}
   21cc0:	mov	r0, #1
   21cc4:	bx	lr
   21cc8:	andeq	r5, sp, pc, lsl r9
   21ccc:	andeq	r5, sp, r9, lsl r9

00021cd0 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   21cd0:	push	{r4, lr}
   21cd4:	subs	r4, r2, #0
   21cd8:	bne	21ce4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x14>
   21cdc:	mov	r0, #0
   21ce0:	pop	{r4, pc}
   21ce4:	bl	1049c <myhtml_token_strict_doctype_by_token@plt>
   21ce8:	ldr	r3, [r4, #4]
   21cec:	cmp	r3, #0
   21cf0:	beq	21cdc <myhtml_token_release_and_check_doctype_attributes@@Base+0xc>
   21cf4:	ldrb	r3, [r4]
   21cf8:	cmp	r3, #0
   21cfc:	beq	21d5c <myhtml_token_release_and_check_doctype_attributes@@Base+0x8c>
   21d00:	ldr	r3, [r4, #8]
   21d04:	cmp	r3, #0
   21d08:	beq	21cdc <myhtml_token_release_and_check_doctype_attributes@@Base+0xc>
   21d0c:	ldrb	r3, [r4]
   21d10:	cmp	r3, #0
   21d14:	beq	21d74 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa4>
   21d18:	mov	r0, r4
   21d1c:	bl	10520 <myhtml_token_doctype_check_html_4_0@plt>
   21d20:	cmp	r0, #0
   21d24:	beq	21d74 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa4>
   21d28:	mov	r0, r4
   21d2c:	bl	103ac <myhtml_token_doctype_check_html_4_01@plt>
   21d30:	cmp	r0, #0
   21d34:	beq	21d74 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa4>
   21d38:	mov	r0, r4
   21d3c:	bl	10664 <myhtml_token_doctype_check_xhtml_1_0@plt>
   21d40:	cmp	r0, #0
   21d44:	beq	21d74 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa4>
   21d48:	mov	r0, r4
   21d4c:	bl	fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>
   21d50:	eor	r0, r0, #1
   21d54:	uxtb	r0, r0
   21d58:	pop	{r4, pc}
   21d5c:	ldr	r3, [r4, #8]
   21d60:	cmp	r3, #0
   21d64:	bne	21d00 <myhtml_token_release_and_check_doctype_attributes@@Base+0x30>
   21d68:	ldr	r0, [r4, #12]
   21d6c:	cmp	r0, #0
   21d70:	bne	21d7c <myhtml_token_release_and_check_doctype_attributes@@Base+0xac>
   21d74:	mov	r0, #1
   21d78:	pop	{r4, pc}
   21d7c:	ldr	r1, [pc, #16]	; 21d94 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   21d80:	add	r1, pc, r1
   21d84:	bl	fbf0 <mycore_strcmp@plt>
   21d88:	cmp	r0, #0
   21d8c:	bne	21d00 <myhtml_token_release_and_check_doctype_attributes@@Base+0x30>
   21d90:	b	21d74 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa4>
   21d94:	andeq	r5, sp, r2, ror r8

00021d98 <myhtml_token_attr_compare@@Base>:
   21d98:	cmp	r1, #0
   21d9c:	cmpne	r0, #0
   21da0:	beq	21e24 <myhtml_token_attr_compare@@Base+0x8c>
   21da4:	push	{r4, r5, r6, lr}
   21da8:	ldr	r4, [r0, #40]	; 0x28
   21dac:	ldr	r5, [r1, #40]	; 0x28
   21db0:	cmp	r4, #0
   21db4:	cmpne	r5, #0
   21db8:	beq	21dcc <myhtml_token_attr_compare@@Base+0x34>
   21dbc:	ldr	r2, [r4, #16]
   21dc0:	ldr	r3, [r5, #16]
   21dc4:	cmp	r2, r3
   21dc8:	beq	21de0 <myhtml_token_attr_compare@@Base+0x48>
   21dcc:	cmp	r4, #0
   21dd0:	cmpeq	r5, #0
   21dd4:	moveq	r0, #1
   21dd8:	movne	r0, #0
   21ddc:	pop	{r4, r5, r6, pc}
   21de0:	ldr	r2, [r4, #36]	; 0x24
   21de4:	ldr	r3, [r5, #36]	; 0x24
   21de8:	cmp	r2, r3
   21dec:	bne	21dcc <myhtml_token_attr_compare@@Base+0x34>
   21df0:	ldr	r1, [r5, #8]
   21df4:	ldr	r0, [r4, #8]
   21df8:	bl	fbf0 <mycore_strcmp@plt>
   21dfc:	cmp	r0, #0
   21e00:	bne	21dcc <myhtml_token_attr_compare@@Base+0x34>
   21e04:	ldr	r1, [r5, #28]
   21e08:	ldr	r0, [r4, #28]
   21e0c:	bl	1052c <mycore_strcasecmp@plt>
   21e10:	cmp	r0, #0
   21e14:	bne	21dcc <myhtml_token_attr_compare@@Base+0x34>
   21e18:	ldr	r4, [r4]
   21e1c:	ldr	r5, [r5]
   21e20:	b	21db0 <myhtml_token_attr_compare@@Base+0x18>
   21e24:	mov	r0, #0
   21e28:	bx	lr

00021e2c <myhtml_token_attr_by_name@@Base>:
   21e2c:	push	{r4, r5, r6, lr}
   21e30:	mov	r5, r1
   21e34:	ldr	r4, [r0, #40]	; 0x28
   21e38:	mov	r6, r2
   21e3c:	cmp	r4, #0
   21e40:	beq	21e6c <myhtml_token_attr_by_name@@Base+0x40>
   21e44:	ldr	r3, [r4, #16]
   21e48:	cmp	r3, r6
   21e4c:	beq	21e58 <myhtml_token_attr_by_name@@Base+0x2c>
   21e50:	ldr	r4, [r4]
   21e54:	b	21e3c <myhtml_token_attr_by_name@@Base+0x10>
   21e58:	mov	r1, r5
   21e5c:	ldr	r0, [r4, #8]
   21e60:	bl	fbf0 <mycore_strcmp@plt>
   21e64:	cmp	r0, #0
   21e68:	bne	21e50 <myhtml_token_attr_by_name@@Base+0x24>
   21e6c:	mov	r0, r4
   21e70:	pop	{r4, r5, r6, pc}

00021e74 <myhtml_token_node_attr_copy_with_check@@Base>:
   21e74:	push	{r4, r5, r6, r7, r8, lr}
   21e78:	mov	r6, r0
   21e7c:	ldr	r4, [r1, #40]	; 0x28
   21e80:	mov	r5, r2
   21e84:	mov	r7, r3
   21e88:	cmp	r4, #0
   21e8c:	bne	21e94 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   21e90:	pop	{r4, r5, r6, r7, r8, pc}
   21e94:	ldr	r2, [r4, #16]
   21e98:	cmp	r2, #0
   21e9c:	beq	21ec8 <myhtml_token_node_attr_copy_with_check@@Base+0x54>
   21ea0:	ldr	r1, [r4, #8]
   21ea4:	mov	r0, r5
   21ea8:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   21eac:	cmp	r0, #0
   21eb0:	bne	21ec8 <myhtml_token_node_attr_copy_with_check@@Base+0x54>
   21eb4:	mov	r3, r7
   21eb8:	mov	r2, r5
   21ebc:	mov	r1, r4
   21ec0:	mov	r0, r6
   21ec4:	bl	10760 <myhtml_token_attr_copy@plt>
   21ec8:	ldr	r4, [r4]
   21ecc:	b	21e88 <myhtml_token_node_attr_copy_with_check@@Base+0x14>

00021ed0 <myhtml_token_adjust_mathml_attributes@@Base>:
   21ed0:	ldr	r1, [pc, #64]	; 21f18 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   21ed4:	push	{r4, lr}
   21ed8:	mov	r2, #13
   21edc:	add	r1, pc, r1
   21ee0:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   21ee4:	cmp	r0, #0
   21ee8:	popeq	{r4, pc}
   21eec:	ldr	r3, [pc, #40]	; 21f1c <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   21ef0:	ldr	r2, [r0, #8]
   21ef4:	add	r3, pc, r3
   21ef8:	add	r1, r3, #12
   21efc:	ldr	r0, [r3], #4
   21f00:	cmp	r3, r1
   21f04:	str	r0, [r2], #4
   21f08:	bne	21efc <myhtml_token_adjust_mathml_attributes@@Base+0x2c>
   21f0c:	ldrb	r3, [r3]
   21f10:	strb	r3, [r2]
   21f14:	pop	{r4, pc}
   21f18:	andeq	r5, sp, sl, lsr #14
   21f1c:	andeq	r5, sp, r0, lsr #14

00021f20 <myhtml_token_adjust_svg_attributes@@Base>:
   21f20:	push	{r4, r5, r6, r7, r8, lr}
   21f24:	mov	r7, r0
   21f28:	ldr	r4, [pc, #68]	; 21f74 <myhtml_token_adjust_svg_attributes@@Base+0x54>
   21f2c:	mov	r6, #58	; 0x3a
   21f30:	add	r4, pc, r4
   21f34:	ldm	r4, {r1, r2}
   21f38:	mov	r0, r7
   21f3c:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   21f40:	cmp	r0, #0
   21f44:	beq	21f64 <myhtml_token_adjust_svg_attributes@@Base+0x44>
   21f48:	add	r5, r0, #8
   21f4c:	mov	r0, r5
   21f50:	bl	10d18 <mycore_string_clean@plt>
   21f54:	ldr	r2, [r4, #12]
   21f58:	ldr	r1, [r4, #8]
   21f5c:	mov	r0, r5
   21f60:	bl	108d4 <mycore_string_append@plt>
   21f64:	subs	r6, r6, #1
   21f68:	add	r4, r4, #16
   21f6c:	bne	21f34 <myhtml_token_adjust_svg_attributes@@Base+0x14>
   21f70:	pop	{r4, r5, r6, r7, r8, pc}
   21f74:			; <UNDEFINED> instruction: 0x000eeab0

00021f78 <myhtml_token_adjust_foreign_attributes@@Base>:
   21f78:	push	{r4, r5, r6, r7, r8, lr}
   21f7c:	mov	r8, r0
   21f80:	ldr	r4, [pc, #84]	; 21fdc <myhtml_token_adjust_foreign_attributes@@Base+0x64>
   21f84:	mov	r5, #0
   21f88:	add	r4, pc, r4
   21f8c:	add	r4, r4, #928	; 0x3a0
   21f90:	ldm	r4, {r1, r2}
   21f94:	mov	r0, r8
   21f98:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   21f9c:	subs	r6, r0, #0
   21fa0:	beq	21fc8 <myhtml_token_adjust_foreign_attributes@@Base+0x50>
   21fa4:	add	r7, r6, #8
   21fa8:	mov	r0, r7
   21fac:	bl	10d18 <mycore_string_clean@plt>
   21fb0:	ldr	r2, [r4, #12]
   21fb4:	ldr	r1, [r4, #8]
   21fb8:	mov	r0, r7
   21fbc:	bl	108d4 <mycore_string_append@plt>
   21fc0:	ldr	r3, [r4, #16]
   21fc4:	str	r3, [r6, #64]	; 0x40
   21fc8:	add	r5, r5, #1
   21fcc:	cmp	r5, #11
   21fd0:	add	r4, r4, #20
   21fd4:	bne	21f90 <myhtml_token_adjust_foreign_attributes@@Base+0x18>
   21fd8:	pop	{r4, r5, r6, r7, r8, pc}
   21fdc:	andeq	lr, lr, r8, asr sl

00021fe0 <myhtml_token_delete@@Base>:
   21fe0:	ldr	r2, [r1, #4]
   21fe4:	push	{r4, r5, r6, lr}
   21fe8:	cmp	r2, #0
   21fec:	mov	r5, r0
   21ff0:	mov	r4, r1
   21ff4:	beq	2200c <myhtml_token_delete@@Base+0x2c>
   21ff8:	ldr	r0, [r1, #16]
   21ffc:	cmp	r0, #0
   22000:	beq	2200c <myhtml_token_delete@@Base+0x2c>
   22004:	ldr	r1, [r1, #20]
   22008:	bl	10718 <mchar_async_free@plt>
   2200c:	mov	r1, r4
   22010:	ldr	r0, [r5, #4]
   22014:	pop	{r4, r5, r6, lr}
   22018:	b	1004c <mcobject_async_free@plt>

0002201c <myhtml_token_attr_delete_all@@Base>:
   2201c:	push	{r4, lr}
   22020:	ldr	r4, [r1, #40]	; 0x28
   22024:	cmp	r4, #0
   22028:	bne	22030 <myhtml_token_attr_delete_all@@Base+0x14>
   2202c:	pop	{r4, pc}
   22030:	ldr	r2, [r4, #8]
   22034:	cmp	r2, #0
   22038:	beq	22050 <myhtml_token_attr_delete_all@@Base+0x34>
   2203c:	ldr	r0, [r4, #20]
   22040:	cmp	r0, #0
   22044:	beq	22050 <myhtml_token_attr_delete_all@@Base+0x34>
   22048:	ldr	r1, [r4, #24]
   2204c:	bl	10718 <mchar_async_free@plt>
   22050:	ldr	r2, [r4, #28]
   22054:	cmp	r2, #0
   22058:	beq	22070 <myhtml_token_attr_delete_all@@Base+0x54>
   2205c:	ldr	r0, [r4, #40]	; 0x28
   22060:	cmp	r0, #0
   22064:	beq	22070 <myhtml_token_attr_delete_all@@Base+0x54>
   22068:	ldr	r1, [r4, #44]	; 0x2c
   2206c:	bl	10718 <mchar_async_free@plt>
   22070:	ldr	r4, [r4]
   22074:	b	22024 <myhtml_token_attr_delete_all@@Base+0x8>

00022078 <myhtml_token_attr_remove@@Base>:
   22078:	cmp	r1, #0
   2207c:	beq	220b0 <myhtml_token_attr_remove@@Base+0x38>
   22080:	ldr	r3, [r1, #4]
   22084:	ldr	r2, [r1]
   22088:	cmp	r3, #0
   2208c:	strne	r2, [r3]
   22090:	streq	r2, [r0, #40]	; 0x28
   22094:	ldr	r2, [r1]
   22098:	cmp	r2, #0
   2209c:	strne	r3, [r2, #4]
   220a0:	streq	r3, [r0, #44]	; 0x2c
   220a4:	mov	r3, #0
   220a8:	str	r3, [r1]
   220ac:	str	r3, [r1, #4]
   220b0:	mov	r0, r1
   220b4:	bx	lr

000220b8 <myhtml_token_attr_remove_by_name@@Base>:
   220b8:	push	{r4, lr}
   220bc:	mov	r4, r0
   220c0:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   220c4:	mov	r1, r0
   220c8:	mov	r0, r4
   220cc:	pop	{r4, lr}
   220d0:	b	10574 <myhtml_token_attr_remove@plt>

000220d4 <myhtml_token_merged_two_token_string@@Base>:
   220d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   220d8:	mov	r8, r0
   220dc:	mov	r5, r2
   220e0:	sub	sp, sp, #28
   220e4:	ldr	r0, [r0, #8]
   220e8:	mov	r6, r1
   220ec:	mov	r9, r3
   220f0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   220f4:	mov	r1, r5
   220f8:	ldr	r0, [r8, #8]
   220fc:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   22100:	mov	r3, #0
   22104:	str	r3, [r6, #24]
   22108:	str	r3, [r6, #28]
   2210c:	ldr	r1, [r8, #52]	; 0x34
   22110:	ldr	r3, [r6, #20]
   22114:	add	r4, r6, #4
   22118:	cmp	r3, r1
   2211c:	add	r7, r5, #4
   22120:	bne	22144 <myhtml_token_merged_two_token_string@@Base+0x70>
   22124:	cmp	r9, #0
   22128:	bne	22138 <myhtml_token_merged_two_token_string@@Base+0x64>
   2212c:	mov	r1, r7
   22130:	mov	r0, r4
   22134:	bl	1016c <mycore_string_copy@plt>
   22138:	mov	r0, r6
   2213c:	add	sp, sp, #28
   22140:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22144:	ldr	r3, [r5, #20]
   22148:	cmp	r1, r3
   2214c:	bne	22170 <myhtml_token_merged_two_token_string@@Base+0x9c>
   22150:	cmp	r9, #0
   22154:	movne	r1, r4
   22158:	movne	r0, r7
   2215c:	moveq	r1, r7
   22160:	moveq	r0, r4
   22164:	bl	1016c <mycore_string_copy@plt>
   22168:	mov	r6, r5
   2216c:	b	22138 <myhtml_token_merged_two_token_string@@Base+0x64>
   22170:	ldr	r3, [r5, #12]
   22174:	ldr	r2, [r6, #12]
   22178:	add	r3, r3, #2
   2217c:	add	r5, sp, #4
   22180:	add	r3, r3, r2
   22184:	ldr	r0, [r8, #4]
   22188:	mov	r2, r5
   2218c:	bl	10610 <mycore_string_init@plt>
   22190:	cmp	r9, #0
   22194:	beq	221cc <myhtml_token_merged_two_token_string@@Base+0xf8>
   22198:	mov	r1, r7
   2219c:	mov	r0, r5
   221a0:	bl	1016c <mycore_string_copy@plt>
   221a4:	mov	r1, r4
   221a8:	mov	r0, r5
   221ac:	bl	1016c <mycore_string_copy@plt>
   221b0:	mov	lr, r5
   221b4:	mov	ip, r4
   221b8:	ldm	lr!, {r0, r1, r2, r3}
   221bc:	stmia	ip!, {r0, r1, r2, r3}
   221c0:	ldr	r3, [lr]
   221c4:	str	r3, [ip]
   221c8:	b	22138 <myhtml_token_merged_two_token_string@@Base+0x64>
   221cc:	mov	r1, r4
   221d0:	mov	r0, r5
   221d4:	bl	1016c <mycore_string_copy@plt>
   221d8:	mov	r1, r7
   221dc:	b	221a8 <myhtml_token_merged_two_token_string@@Base+0xd4>

000221e0 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   221e0:	push	{r4, r5, r6, lr}
   221e4:	mov	r4, r1
   221e8:	sub	sp, sp, #24
   221ec:	mov	r6, r0
   221f0:	ldr	r0, [r0, #8]
   221f4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   221f8:	ldr	r3, [r4, #12]
   221fc:	add	r5, sp, #4
   22200:	add	r3, r3, #2
   22204:	mov	r2, r5
   22208:	ldr	r1, [r6, #52]	; 0x34
   2220c:	ldr	r0, [r6, #4]
   22210:	bl	10610 <mycore_string_init@plt>
   22214:	ldr	r2, [r4, #12]
   22218:	mov	r0, r5
   2221c:	ldr	r1, [r4, #4]!
   22220:	bl	10388 <mycore_string_append_with_replacement_null_characters@plt>
   22224:	mov	ip, r5
   22228:	ldm	ip!, {r0, r1, r2, r3}
   2222c:	stmia	r4!, {r0, r1, r2, r3}
   22230:	ldr	r3, [ip]
   22234:	str	r3, [r4]
   22238:	add	sp, sp, #24
   2223c:	pop	{r4, r5, r6, pc}

00022240 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   22240:	ldrb	r2, [r2, r3]
   22244:	cmp	r2, #47	; 0x2f
   22248:	addeq	r3, r3, #1
   2224c:	moveq	r2, #11
   22250:	movne	r2, #2
   22254:	str	r2, [r0, #160]	; 0xa0
   22258:	mov	r0, r3
   2225c:	bx	lr

00022260 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   22260:	ldrb	r2, [r2, r3]
   22264:	ldr	r1, [pc, #28]	; 22288 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   22268:	add	r1, pc, r1
   2226c:	ldrb	r2, [r1, r2]
   22270:	cmp	r2, #1
   22274:	moveq	r2, #12
   22278:	movne	r2, #2
   2227c:	str	r2, [r0, #160]	; 0xa0
   22280:	mov	r0, r3
   22284:	bx	lr
   22288:	strdeq	r5, [sp], -r4

0002228c <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   2228c:	ldrb	r2, [r2, r3]
   22290:	cmp	r2, #47	; 0x2f
   22294:	addeq	r3, r3, #1
   22298:	moveq	r2, #14
   2229c:	movne	r2, #4
   222a0:	str	r2, [r0, #160]	; 0xa0
   222a4:	mov	r0, r3
   222a8:	bx	lr

000222ac <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   222ac:	ldrb	r2, [r2, r3]
   222b0:	ldr	r1, [pc, #28]	; 222d4 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   222b4:	add	r1, pc, r1
   222b8:	ldrb	r2, [r1, r2]
   222bc:	cmp	r2, #1
   222c0:	moveq	r2, #15
   222c4:	movne	r2, #4
   222c8:	str	r2, [r0, #160]	; 0xa0
   222cc:	mov	r0, r3
   222d0:	bx	lr
   222d4:	andeq	r5, sp, r8, lsr #19

000222d8 <myhtml_tokenizer_state_data@@Base>:
   222d8:	push	{r4, r5, lr}
   222dc:	ldr	r5, [pc, #152]	; 2237c <myhtml_tokenizer_state_data@@Base+0xa4>
   222e0:	ldr	r4, [sp, #12]
   222e4:	add	r5, pc, r5
   222e8:	cmp	r3, r4
   222ec:	bcs	22318 <myhtml_tokenizer_state_data@@Base+0x40>
   222f0:	ldrb	ip, [r2, r3]
   222f4:	add	lr, r3, #1
   222f8:	cmp	ip, #60	; 0x3c
   222fc:	bne	22320 <myhtml_tokenizer_state_data@@Base+0x48>
   22300:	ldr	r2, [r0, #192]	; 0xc0
   22304:	add	r3, r2, r3
   22308:	str	r3, [r1, #32]
   2230c:	mov	r3, lr
   22310:	mov	r2, #7
   22314:	str	r2, [r0, #160]	; 0xa0
   22318:	mov	r0, r3
   2231c:	pop	{r4, r5, pc}
   22320:	cmp	ip, #0
   22324:	bne	2233c <myhtml_tokenizer_state_data@@Base+0x64>
   22328:	ldr	r3, [r1, #48]	; 0x30
   2232c:	tst	r3, #2048	; 0x800
   22330:	ldreq	r3, [r1, #48]	; 0x30
   22334:	orreq	r3, r3, #2048	; 0x800
   22338:	beq	22370 <myhtml_tokenizer_state_data@@Base+0x98>
   2233c:	ldr	r3, [r1, #48]	; 0x30
   22340:	tst	r3, #8
   22344:	beq	22374 <myhtml_tokenizer_state_data@@Base+0x9c>
   22348:	ldrb	r3, [r5, ip]
   2234c:	cmp	r3, #2
   22350:	beq	22374 <myhtml_tokenizer_state_data@@Base+0x9c>
   22354:	ldr	r3, [r1, #48]	; 0x30
   22358:	ldr	ip, [r1, #48]	; 0x30
   2235c:	and	r3, r3, #8
   22360:	eor	r3, r3, ip
   22364:	str	r3, [r1, #48]	; 0x30
   22368:	ldr	r3, [r1, #48]	; 0x30
   2236c:	orr	r3, r3, #512	; 0x200
   22370:	str	r3, [r1, #48]	; 0x30
   22374:	mov	r3, lr
   22378:	b	222e8 <myhtml_tokenizer_state_data@@Base+0x10>
   2237c:	andeq	r5, sp, r8, ror r9

00022380 <myhtml_tokenizer_state_comment@@Base>:
   22380:	push	{lr}		; (str lr, [sp, #-4]!)
   22384:	mov	lr, #2
   22388:	ldr	ip, [sp, #4]
   2238c:	str	lr, [r1]
   22390:	cmp	r3, ip
   22394:	bcs	223b0 <myhtml_tokenizer_state_comment@@Base+0x30>
   22398:	ldrb	r1, [r2, r3]
   2239c:	add	r3, r3, #1
   223a0:	cmp	r1, #45	; 0x2d
   223a4:	bne	22390 <myhtml_tokenizer_state_comment@@Base+0x10>
   223a8:	mov	r2, #48	; 0x30
   223ac:	str	r2, [r0, #160]	; 0xa0
   223b0:	mov	r0, r3
   223b4:	pop	{pc}		; (ldr pc, [sp], #4)

000223b8 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   223b8:	ldrb	r2, [r2, r3]
   223bc:	add	r3, r3, #1
   223c0:	cmp	r2, #45	; 0x2d
   223c4:	moveq	r2, #49	; 0x31
   223c8:	movne	r2, #47	; 0x2f
   223cc:	str	r2, [r0, #160]	; 0xa0
   223d0:	mov	r0, r3
   223d4:	bx	lr

000223d8 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   223d8:	ldr	r3, [pc, #8]	; 223e8 <myhtml_tokenizer_state_parse_error_stop@@Base+0x10>
   223dc:	str	r3, [r0, #196]	; 0xc4
   223e0:	ldr	r0, [sp]
   223e4:	bx	lr
   223e8:	andeq	r9, r0, ip, lsr #2

000223ec <myhtml_tokenizer_state_plaintext@@Base>:
   223ec:	mov	r2, r1
   223f0:	ldr	r1, [r1, #48]	; 0x30
   223f4:	push	{r4, r5, r6, lr}
   223f8:	tst	r1, #128	; 0x80
   223fc:	mov	r4, r0
   22400:	ldreq	r1, [r2, #48]	; 0x30
   22404:	ldr	r5, [sp, #16]
   22408:	orreq	r1, r1, #128	; 0x80
   2240c:	streq	r1, [r2, #48]	; 0x30
   22410:	ldr	r1, [r2, #48]	; 0x30
   22414:	ldr	r0, [r2, #48]	; 0x30
   22418:	and	r1, r1, #8
   2241c:	eor	r1, r1, r0
   22420:	str	r1, [r2, #48]	; 0x30
   22424:	ldr	r1, [r4, #192]	; 0xc0
   22428:	mov	r6, #0
   2242c:	add	r3, r1, r3
   22430:	add	r1, r1, r5
   22434:	str	r3, [r2, #24]
   22438:	sub	r3, r1, r3
   2243c:	str	r3, [r2, #36]	; 0x24
   22440:	str	r3, [r2, #28]
   22444:	mov	r3, #1
   22448:	str	r3, [r2]
   2244c:	mov	r1, r5
   22450:	str	r6, [r4, #160]	; 0xa0
   22454:	mov	r0, r4
   22458:	bl	10028 <myhtml_queue_add@plt>
   2245c:	cmp	r0, r6
   22460:	movne	r3, #69	; 0x45
   22464:	movne	r5, r6
   22468:	strne	r3, [r4, #160]	; 0xa0
   2246c:	mov	r0, r5
   22470:	pop	{r4, r5, r6, pc}

00022474 <myhtml_tokenizer_state_bogus_comment@@Base>:
   22474:	push	{r4, r5, r6, lr}
   22478:	mov	r5, r0
   2247c:	mov	r0, #2
   22480:	str	r0, [r1]
   22484:	ldr	ip, [sp, #16]
   22488:	ldr	r0, [r1, #48]	; 0x30
   2248c:	mov	r4, r3
   22490:	orr	r0, r0, #1024	; 0x400
   22494:	str	r0, [r1, #48]	; 0x30
   22498:	cmp	r4, ip
   2249c:	bcs	224fc <myhtml_tokenizer_state_bogus_comment@@Base+0x88>
   224a0:	ldrb	r3, [r2, r4]
   224a4:	add	r0, r4, #1
   224a8:	cmp	r3, #62	; 0x3e
   224ac:	bne	22504 <myhtml_tokenizer_state_bogus_comment@@Base+0x90>
   224b0:	ldr	r2, [r5, #192]	; 0xc0
   224b4:	ldr	r3, [r1, #24]
   224b8:	sub	r3, r2, r3
   224bc:	add	r4, r3, r4
   224c0:	ldr	r3, [r1, #32]
   224c4:	str	r4, [r1, #28]
   224c8:	sub	r2, r2, r3
   224cc:	add	r2, r2, r0
   224d0:	str	r2, [r1, #36]	; 0x24
   224d4:	mov	r4, r0
   224d8:	mov	r2, r1
   224dc:	mov	r1, r0
   224e0:	mov	r0, r5
   224e4:	bl	10028 <myhtml_queue_add@plt>
   224e8:	cmp	r0, #0
   224ec:	movne	r4, #0
   224f0:	movne	r3, #69	; 0x45
   224f4:	strne	r3, [r5, #160]	; 0xa0
   224f8:	streq	r0, [r5, #160]	; 0xa0
   224fc:	mov	r0, r4
   22500:	pop	{r4, r5, r6, pc}
   22504:	mov	r4, r0
   22508:	b	22498 <myhtml_tokenizer_state_bogus_comment@@Base+0x24>

0002250c <myhtml_tokenizer_state_cdata_section@@Base>:
   2250c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22510:	mov	r4, r3
   22514:	ldr	r3, [r1, #48]	; 0x30
   22518:	ldr	r8, [sp, #32]
   2251c:	tst	r3, #256	; 0x100
   22520:	mov	r6, r0
   22524:	ldreq	r3, [r1, #48]	; 0x30
   22528:	mov	r5, r1
   2252c:	add	r2, r2, r4
   22530:	mov	r9, #2
   22534:	orreq	r3, r3, #256	; 0x100
   22538:	streq	r3, [r1, #48]	; 0x30
   2253c:	cmp	r4, r8
   22540:	bcs	225fc <myhtml_tokenizer_state_cdata_section@@Base+0xf0>
   22544:	ldrb	r3, [r2]
   22548:	add	sl, r2, #1
   2254c:	add	r7, r4, #1
   22550:	cmp	r3, #62	; 0x3e
   22554:	bne	22604 <myhtml_tokenizer_state_cdata_section@@Base+0xf8>
   22558:	cmp	r4, #1
   2255c:	subhi	r0, r2, #2
   22560:	bhi	2257c <myhtml_tokenizer_state_cdata_section@@Base+0x70>
   22564:	ldr	r1, [r6, #192]	; 0xc0
   22568:	mov	r2, r9
   2256c:	sub	r1, r1, #2
   22570:	add	r1, r1, r4
   22574:	mov	r0, r6
   22578:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2257c:	ldrb	r3, [r0]
   22580:	cmp	r3, #93	; 0x5d
   22584:	bne	22604 <myhtml_tokenizer_state_cdata_section@@Base+0xf8>
   22588:	ldrb	r3, [r0, #1]
   2258c:	cmp	r3, #93	; 0x5d
   22590:	bne	22604 <myhtml_tokenizer_state_cdata_section@@Base+0xf8>
   22594:	ldr	r3, [r6, #192]	; 0xc0
   22598:	ldr	r1, [r5, #24]
   2259c:	sub	r2, r3, #2
   225a0:	sub	r2, r2, r1
   225a4:	add	r2, r2, r4
   225a8:	cmp	r2, #0
   225ac:	addeq	r3, r3, r7
   225b0:	str	r2, [r5, #28]
   225b4:	mov	r4, r7
   225b8:	streq	r3, [r5, #24]
   225bc:	beq	225f4 <myhtml_tokenizer_state_cdata_section@@Base+0xe8>
   225c0:	ldr	r2, [r5, #32]
   225c4:	mov	r1, r7
   225c8:	sub	r3, r3, r2
   225cc:	add	r3, r3, r7
   225d0:	str	r3, [r5, #36]	; 0x24
   225d4:	mov	r2, r5
   225d8:	mov	r0, r6
   225dc:	bl	10028 <myhtml_queue_add@plt>
   225e0:	cmp	r0, #0
   225e4:	movne	r3, #69	; 0x45
   225e8:	strne	r3, [r6, #160]	; 0xa0
   225ec:	movne	r4, #0
   225f0:	bne	225fc <myhtml_tokenizer_state_cdata_section@@Base+0xf0>
   225f4:	mov	r3, #0
   225f8:	str	r3, [r6, #160]	; 0xa0
   225fc:	mov	r0, r4
   22600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22604:	mov	r4, r7
   22608:	mov	r2, sl
   2260c:	b	2253c <myhtml_tokenizer_state_cdata_section@@Base+0x30>

00022610 <myhtml_tokenizer_state_rcdata@@Base>:
   22610:	push	{r4, r5, r6, r7, r8, lr}
   22614:	mov	r4, r3
   22618:	ldr	r3, [r0, #60]	; 0x3c
   2261c:	mov	r5, r0
   22620:	cmp	r3, #0
   22624:	mov	r6, r1
   22628:	mov	r8, r2
   2262c:	ldr	r7, [sp, #24]
   22630:	bne	22674 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   22634:	ldr	r3, [r0, #192]	; 0xc0
   22638:	ldr	r0, [r0, #68]	; 0x44
   2263c:	add	r3, r3, r4
   22640:	str	r3, [r1, #24]
   22644:	bl	fcec <mythread_queue_get_prev_node@plt>
   22648:	cmp	r0, #0
   2264c:	beq	22660 <myhtml_tokenizer_state_rcdata@@Base+0x50>
   22650:	ldr	r3, [r0, #4]
   22654:	cmp	r3, #0
   22658:	ldrne	r3, [r3]
   2265c:	bne	22670 <myhtml_tokenizer_state_rcdata@@Base+0x60>
   22660:	ldr	r3, [r5, #88]	; 0x58
   22664:	cmp	r3, #0
   22668:	beq	22674 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   2266c:	ldr	r3, [r3, #4]
   22670:	str	r3, [r5, #60]	; 0x3c
   22674:	cmp	r4, r7
   22678:	bcs	226a4 <myhtml_tokenizer_state_rcdata@@Base+0x94>
   2267c:	ldrb	r3, [r8, r4]
   22680:	add	r1, r4, #1
   22684:	cmp	r3, #60	; 0x3c
   22688:	bne	226ac <myhtml_tokenizer_state_rcdata@@Base+0x9c>
   2268c:	ldr	r3, [r5, #192]	; 0xc0
   22690:	add	r4, r3, r4
   22694:	str	r4, [r6, #32]
   22698:	mov	r4, r1
   2269c:	mov	r3, #10
   226a0:	str	r3, [r5, #160]	; 0xa0
   226a4:	mov	r0, r4
   226a8:	pop	{r4, r5, r6, r7, r8, pc}
   226ac:	mov	r4, r1
   226b0:	b	22674 <myhtml_tokenizer_state_rcdata@@Base+0x64>

000226b4 <myhtml_tokenizer_state_rawtext@@Base>:
   226b4:	push	{r4, r5, r6, r7, r8, lr}
   226b8:	mov	r4, r3
   226bc:	ldr	r3, [r0, #60]	; 0x3c
   226c0:	mov	r5, r0
   226c4:	cmp	r3, #0
   226c8:	mov	r6, r1
   226cc:	mov	r8, r2
   226d0:	ldr	r7, [sp, #24]
   226d4:	bne	22718 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   226d8:	ldr	r3, [r0, #192]	; 0xc0
   226dc:	ldr	r0, [r0, #68]	; 0x44
   226e0:	add	r3, r3, r4
   226e4:	str	r3, [r1, #24]
   226e8:	bl	fcec <mythread_queue_get_prev_node@plt>
   226ec:	cmp	r0, #0
   226f0:	beq	22704 <myhtml_tokenizer_state_rawtext@@Base+0x50>
   226f4:	ldr	r3, [r0, #4]
   226f8:	cmp	r3, #0
   226fc:	ldrne	r3, [r3]
   22700:	bne	22714 <myhtml_tokenizer_state_rawtext@@Base+0x60>
   22704:	ldr	r3, [r5, #88]	; 0x58
   22708:	cmp	r3, #0
   2270c:	beq	22718 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   22710:	ldr	r3, [r3, #4]
   22714:	str	r3, [r5, #60]	; 0x3c
   22718:	cmp	r4, r7
   2271c:	bcs	22748 <myhtml_tokenizer_state_rawtext@@Base+0x94>
   22720:	ldrb	r3, [r8, r4]
   22724:	add	r1, r4, #1
   22728:	cmp	r3, #60	; 0x3c
   2272c:	bne	22750 <myhtml_tokenizer_state_rawtext@@Base+0x9c>
   22730:	ldr	r3, [r5, #192]	; 0xc0
   22734:	add	r4, r3, r4
   22738:	str	r4, [r6, #32]
   2273c:	mov	r4, r1
   22740:	mov	r3, #13
   22744:	str	r3, [r5, #160]	; 0xa0
   22748:	mov	r0, r4
   2274c:	pop	{r4, r5, r6, r7, r8, pc}
   22750:	mov	r4, r1
   22754:	b	22718 <myhtml_tokenizer_state_rawtext@@Base+0x64>

00022758 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   22758:	push	{r4, r5, r6, lr}
   2275c:	mov	r5, r0
   22760:	ldr	r1, [sp, #16]
   22764:	mov	r4, r3
   22768:	cmp	r4, r1
   2276c:	bcs	227c0 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x68>
   22770:	ldrb	r3, [r2, r4]
   22774:	cmp	r3, #34	; 0x22
   22778:	bne	227c8 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x70>
   2277c:	ldr	r2, [r5, #56]	; 0x38
   22780:	ldr	r3, [r5, #192]	; 0xc0
   22784:	ldr	r0, [r5, #8]
   22788:	ldr	r1, [r2, #56]	; 0x38
   2278c:	sub	r3, r3, r1
   22790:	add	r3, r3, r4
   22794:	str	r3, [r2, #60]	; 0x3c
   22798:	ldr	r1, [r0, #16]
   2279c:	bl	10904 <myhtml_token_attr_create@plt>
   227a0:	cmp	r0, #0
   227a4:	moveq	r4, r0
   227a8:	addne	r4, r4, #1
   227ac:	moveq	r3, #69	; 0x45
   227b0:	movne	r3, #41	; 0x29
   227b4:	str	r0, [r5, #56]	; 0x38
   227b8:	streq	r3, [r5, #160]	; 0xa0
   227bc:	strne	r3, [r5, #160]	; 0xa0
   227c0:	mov	r0, r4
   227c4:	pop	{r4, r5, r6, pc}
   227c8:	add	r4, r4, #1
   227cc:	b	22768 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x10>

000227d0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   227d0:	push	{r4, r5, r6, lr}
   227d4:	mov	r5, r0
   227d8:	ldr	r1, [sp, #16]
   227dc:	mov	r4, r3
   227e0:	cmp	r4, r1
   227e4:	bcs	22838 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x68>
   227e8:	ldrb	r3, [r2, r4]
   227ec:	cmp	r3, #39	; 0x27
   227f0:	bne	22840 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x70>
   227f4:	ldr	r2, [r5, #56]	; 0x38
   227f8:	ldr	r3, [r5, #192]	; 0xc0
   227fc:	ldr	r0, [r5, #8]
   22800:	ldr	r1, [r2, #56]	; 0x38
   22804:	sub	r3, r3, r1
   22808:	add	r3, r3, r4
   2280c:	str	r3, [r2, #60]	; 0x3c
   22810:	ldr	r1, [r0, #16]
   22814:	bl	10904 <myhtml_token_attr_create@plt>
   22818:	cmp	r0, #0
   2281c:	moveq	r4, r0
   22820:	addne	r4, r4, #1
   22824:	moveq	r3, #69	; 0x45
   22828:	movne	r3, #41	; 0x29
   2282c:	str	r0, [r5, #56]	; 0x38
   22830:	streq	r3, [r5, #160]	; 0xa0
   22834:	strne	r3, [r5, #160]	; 0xa0
   22838:	mov	r0, r4
   2283c:	pop	{r4, r5, r6, pc}
   22840:	add	r4, r4, #1
   22844:	b	227e0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x10>

00022848 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   22848:	mov	ip, #2
   2284c:	push	{r4, r5, r6, lr}
   22850:	add	r4, r3, #1
   22854:	str	ip, [r1]
   22858:	ldrb	r2, [r2, r3]
   2285c:	mov	r5, r0
   22860:	cmp	r2, #45	; 0x2d
   22864:	moveq	r3, #49	; 0x31
   22868:	beq	228bc <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   2286c:	cmp	r2, #62	; 0x3e
   22870:	movne	r3, #47	; 0x2f
   22874:	bne	228bc <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   22878:	ldr	r3, [r0, #192]	; 0xc0
   2287c:	mov	r2, r1
   22880:	ldr	r1, [r1, #32]
   22884:	add	r3, r4, r3
   22888:	sub	r3, r3, r1
   2288c:	mov	r6, #0
   22890:	str	r3, [r2, #36]	; 0x24
   22894:	mov	r1, r4
   22898:	str	r6, [r2, #28]
   2289c:	bl	10028 <myhtml_queue_add@plt>
   228a0:	cmp	r0, #0
   228a4:	movne	r4, r6
   228a8:	movne	r3, #69	; 0x45
   228ac:	strne	r3, [r5, #160]	; 0xa0
   228b0:	streq	r0, [r5, #160]	; 0xa0
   228b4:	mov	r0, r4
   228b8:	pop	{r4, r5, r6, pc}
   228bc:	str	r3, [r5, #160]	; 0xa0
   228c0:	b	228b4 <myhtml_tokenizer_state_comment_start_dash@@Base+0x6c>

000228c4 <myhtml_tokenizer_state_comment_end@@Base>:
   228c4:	push	{r4, r5, r6, lr}
   228c8:	add	r4, r3, #1
   228cc:	ldrb	r2, [r2, r3]
   228d0:	cmp	r2, #62	; 0x3e
   228d4:	bne	22938 <myhtml_tokenizer_state_comment_end@@Base+0x74>
   228d8:	ldr	ip, [r0, #192]	; 0xc0
   228dc:	ldr	r2, [r1, #24]
   228e0:	mov	r5, r0
   228e4:	sub	r2, ip, r2
   228e8:	add	r3, r2, r3
   228ec:	cmp	r3, #1
   228f0:	str	r3, [r1, #28]
   228f4:	subhi	r3, r3, #2
   228f8:	movls	r3, #0
   228fc:	str	r3, [r1, #28]
   22900:	ldr	r3, [r1, #32]
   22904:	mov	r2, r1
   22908:	sub	ip, ip, r3
   2290c:	add	ip, ip, r4
   22910:	str	ip, [r1, #36]	; 0x24
   22914:	mov	r1, r4
   22918:	bl	10028 <myhtml_queue_add@plt>
   2291c:	cmp	r0, #0
   22920:	movne	r4, #0
   22924:	movne	r3, #69	; 0x45
   22928:	strne	r3, [r5, #160]	; 0xa0
   2292c:	streq	r0, [r5, #160]	; 0xa0
   22930:	mov	r0, r4
   22934:	pop	{r4, r5, r6, pc}
   22938:	cmp	r2, #33	; 0x21
   2293c:	moveq	r3, #50	; 0x32
   22940:	beq	22950 <myhtml_tokenizer_state_comment_end@@Base+0x8c>
   22944:	cmp	r2, #45	; 0x2d
   22948:	beq	22930 <myhtml_tokenizer_state_comment_end@@Base+0x6c>
   2294c:	mov	r3, #47	; 0x2f
   22950:	str	r3, [r0, #160]	; 0xa0
   22954:	b	22930 <myhtml_tokenizer_state_comment_end@@Base+0x6c>

00022958 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   22958:	push	{r4, r5, r6, lr}
   2295c:	mov	r5, r0
   22960:	ldrb	r2, [r2, r3]
   22964:	add	r4, r3, #1
   22968:	cmp	r2, #62	; 0x3e
   2296c:	bne	229f0 <myhtml_tokenizer_state_comment_end_bang@@Base+0x98>
   22970:	ldr	ip, [r0, #192]	; 0xc0
   22974:	ldr	r6, [r1, #24]
   22978:	add	r3, r3, ip
   2297c:	mov	r2, r1
   22980:	sub	r1, r3, #3
   22984:	cmp	r1, r6
   22988:	ldr	lr, [r2, #32]
   2298c:	bcc	229d8 <myhtml_tokenizer_state_comment_end_bang@@Base+0x80>
   22990:	mvn	r1, #2
   22994:	sub	r1, r1, r6
   22998:	sub	ip, ip, lr
   2299c:	add	r3, r1, r3
   229a0:	add	ip, ip, r4
   229a4:	str	r3, [r2, #28]
   229a8:	str	ip, [r2, #36]	; 0x24
   229ac:	mov	r1, r4
   229b0:	bl	10028 <myhtml_queue_add@plt>
   229b4:	cmp	r0, #0
   229b8:	movne	r3, #69	; 0x45
   229bc:	strne	r3, [r5, #160]	; 0xa0
   229c0:	movne	r4, #0
   229c4:	bne	229d0 <myhtml_tokenizer_state_comment_end_bang@@Base+0x78>
   229c8:	mov	r3, #0
   229cc:	str	r3, [r5, #160]	; 0xa0
   229d0:	mov	r0, r4
   229d4:	pop	{r4, r5, r6, pc}
   229d8:	sub	ip, ip, lr
   229dc:	add	ip, ip, r4
   229e0:	mov	r3, #0
   229e4:	str	ip, [r2, #36]	; 0x24
   229e8:	str	r3, [r2, #28]
   229ec:	b	229ac <myhtml_tokenizer_state_comment_end_bang@@Base+0x54>
   229f0:	cmp	r2, #45	; 0x2d
   229f4:	moveq	r3, #48	; 0x30
   229f8:	movne	r3, #47	; 0x2f
   229fc:	b	229cc <myhtml_tokenizer_state_comment_end_bang@@Base+0x74>

00022a00 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   22a00:	push	{r4, r5, r6, r7, r8, lr}
   22a04:	mov	r5, r0
   22a08:	ldr	ip, [r1, #24]
   22a0c:	ldr	r2, [r0, #192]	; 0xc0
   22a10:	ldr	r6, [sp, #24]
   22a14:	add	lr, ip, #2
   22a18:	add	r2, r6, r2
   22a1c:	cmp	lr, r2
   22a20:	ldrhi	r2, [r0, #76]	; 0x4c
   22a24:	strhi	r3, [r2, #4]
   22a28:	bhi	22a74 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22a2c:	mov	r4, r1
   22a30:	mov	r2, #2
   22a34:	mov	r1, ip
   22a38:	mov	r7, r3
   22a3c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   22a40:	ldrb	r3, [r0]
   22a44:	cmp	r3, #45	; 0x2d
   22a48:	ldr	r3, [r5, #192]	; 0xc0
   22a4c:	bne	22a7c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   22a50:	ldrb	r2, [r0, #1]
   22a54:	cmp	r2, #45	; 0x2d
   22a58:	bne	22a7c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   22a5c:	add	r6, r7, #2
   22a60:	add	r3, r3, r6
   22a64:	str	r2, [r5, #160]	; 0xa0
   22a68:	str	r3, [r4, #24]
   22a6c:	mov	r3, #0
   22a70:	str	r3, [r4, #28]
   22a74:	mov	r0, r6
   22a78:	pop	{r4, r5, r6, r7, r8, pc}
   22a7c:	ldr	r1, [r4, #24]
   22a80:	add	r3, r6, r3
   22a84:	add	r2, r1, #7
   22a88:	cmp	r2, r3
   22a8c:	ldrhi	r3, [r5, #76]	; 0x4c
   22a90:	strhi	r7, [r3, #4]
   22a94:	bhi	22a74 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22a98:	mov	r2, #7
   22a9c:	mov	r0, r5
   22aa0:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   22aa4:	ldr	r1, [pc, #252]	; 22ba8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a8>
   22aa8:	mov	r2, #7
   22aac:	add	r1, pc, r1
   22ab0:	mov	r6, r0
   22ab4:	bl	102a4 <mycore_strncasecmp@plt>
   22ab8:	cmp	r0, #0
   22abc:	bne	22af0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf0>
   22ac0:	mov	r3, #51	; 0x33
   22ac4:	str	r3, [r5, #160]	; 0xa0
   22ac8:	ldr	r3, [r5, #76]	; 0x4c
   22acc:	ldr	r6, [r4, #24]
   22ad0:	ldr	r3, [r3, #12]
   22ad4:	add	r6, r6, #7
   22ad8:	sub	r6, r6, r3
   22adc:	mov	r3, #7
   22ae0:	str	r3, [r4, #28]
   22ae4:	mov	r3, #3
   22ae8:	str	r3, [r4]
   22aec:	b	22a74 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22af0:	ldr	r1, [pc, #180]	; 22bac <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1ac>
   22af4:	mov	r2, #7
   22af8:	add	r1, pc, r1
   22afc:	mov	r0, r6
   22b00:	bl	10f94 <strncmp@plt>
   22b04:	subs	r8, r0, #0
   22b08:	bne	22b90 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22b0c:	ldr	r3, [r5, #68]	; 0x44
   22b10:	ldr	r3, [r3, #8]
   22b14:	cmp	r3, #0
   22b18:	beq	22b90 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22b1c:	ldr	r1, [r3, #4]
   22b20:	cmp	r1, #0
   22b24:	beq	22b90 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22b28:	mov	r0, r5
   22b2c:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   22b30:	mov	r0, r5
   22b34:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   22b38:	cmp	r0, #0
   22b3c:	beq	22b90 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22b40:	ldr	r3, [r0, #8]
   22b44:	cmp	r3, #1
   22b48:	beq	22b90 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22b4c:	ldr	r2, [r5, #76]	; 0x4c
   22b50:	mov	r3, #67	; 0x43
   22b54:	str	r3, [r5, #160]	; 0xa0
   22b58:	ldr	r3, [r4, #24]
   22b5c:	ldr	r6, [r2, #12]
   22b60:	add	r3, r3, #7
   22b64:	sub	r6, r3, r6
   22b68:	str	r3, [r4, #24]
   22b6c:	mov	r3, #1
   22b70:	str	r3, [r4]
   22b74:	ldr	r3, [r4, #48]	; 0x30
   22b78:	ldr	r2, [r4, #48]	; 0x30
   22b7c:	and	r3, r3, #8
   22b80:	eor	r3, r3, r2
   22b84:	str	r8, [r4, #28]
   22b88:	str	r3, [r4, #48]	; 0x30
   22b8c:	b	22a74 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22b90:	mov	r3, #0
   22b94:	str	r3, [r4, #28]
   22b98:	mov	r3, #43	; 0x2b
   22b9c:	str	r3, [r5, #160]	; 0xa0
   22ba0:	mov	r6, r7
   22ba4:	b	22a74 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22ba8:	andeq	r4, sp, lr, ror r2
   22bac:	andeq	r5, sp, r4, ror #4

00022bb0 <myhtml_tokenizer_state_comment_start@@Base>:
   22bb0:	mov	ip, #2
   22bb4:	push	{r4, r5, r6, lr}
   22bb8:	add	r4, r3, #1
   22bbc:	str	ip, [r1]
   22bc0:	ldrb	r2, [r2, r3]
   22bc4:	mov	r5, r0
   22bc8:	cmp	r2, #45	; 0x2d
   22bcc:	moveq	r3, #46	; 0x2e
   22bd0:	beq	22c24 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   22bd4:	cmp	r2, #62	; 0x3e
   22bd8:	movne	r3, #47	; 0x2f
   22bdc:	bne	22c24 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   22be0:	ldr	r3, [r0, #192]	; 0xc0
   22be4:	mov	r2, r1
   22be8:	ldr	r1, [r1, #32]
   22bec:	add	r3, r4, r3
   22bf0:	sub	r3, r3, r1
   22bf4:	mov	r6, #0
   22bf8:	str	r3, [r2, #36]	; 0x24
   22bfc:	mov	r1, r4
   22c00:	str	r6, [r2, #28]
   22c04:	bl	10028 <myhtml_queue_add@plt>
   22c08:	cmp	r0, #0
   22c0c:	movne	r4, r6
   22c10:	movne	r3, #69	; 0x45
   22c14:	strne	r3, [r5, #160]	; 0xa0
   22c18:	streq	r0, [r5, #160]	; 0xa0
   22c1c:	mov	r0, r4
   22c20:	pop	{r4, r5, r6, pc}
   22c24:	str	r3, [r5, #160]	; 0xa0
   22c28:	b	22c1c <myhtml_tokenizer_state_comment_start@@Base+0x6c>

00022c2c <myhtml_tokenizer_set_first_settings@@Base>:
   22c2c:	push	{r4, lr}
   22c30:	mov	r4, r0
   22c34:	ldr	r0, [r0, #24]
   22c38:	bl	10190 <mythread_queue_get_current_node@plt>
   22c3c:	str	r0, [r4, #68]	; 0x44
   22c40:	bl	10d78 <mythread_queue_node_clean@plt>
   22c44:	ldr	r3, [r4, #68]	; 0x44
   22c48:	ldr	r0, [r4, #8]
   22c4c:	str	r4, [r3]
   22c50:	ldr	r1, [r0, #12]
   22c54:	bl	10a0c <myhtml_token_node_create@plt>
   22c58:	cmp	r0, #0
   22c5c:	str	r0, [r4, #64]	; 0x40
   22c60:	ldrne	r3, [r4, #76]	; 0x4c
   22c64:	movne	r0, #0
   22c68:	strne	r3, [r4, #80]	; 0x50
   22c6c:	moveq	r0, #2
   22c70:	pop	{r4, pc}

00022c74 <myhtml_tokenizer_fragment_init@@Base>:
   22c74:	push	{r4, r5, r6, lr}
   22c78:	mov	r5, r2
   22c7c:	mov	r4, r0
   22c80:	mov	r6, r1
   22c84:	bl	ffe0 <myhtml_tree_node_create@plt>
   22c88:	cmp	r5, #1
   22c8c:	str	r0, [r4, #88]	; 0x58
   22c90:	str	r5, [r0, #8]
   22c94:	str	r6, [r0, #4]
   22c98:	bne	22cb4 <myhtml_tokenizer_fragment_init@@Base+0x40>
   22c9c:	cmp	r6, #93	; 0x5d
   22ca0:	bne	22d24 <myhtml_tokenizer_fragment_init@@Base+0xb0>
   22ca4:	ldr	r3, [r4, #180]	; 0xb4
   22ca8:	ands	r3, r3, #1
   22cac:	movne	r3, #4
   22cb0:	str	r3, [r4, #160]	; 0xa0
   22cb4:	ldr	r0, [r4, #8]
   22cb8:	ldr	r5, [r4, #88]	; 0x58
   22cbc:	ldr	r1, [r0, #12]
   22cc0:	bl	10a0c <myhtml_token_node_create@plt>
   22cc4:	ldr	r3, [r4, #88]	; 0x58
   22cc8:	str	r0, [r5, #32]
   22ccc:	ldr	r0, [r3, #32]
   22cd0:	cmp	r0, #0
   22cd4:	moveq	r5, r0
   22cd8:	beq	22d1c <myhtml_tokenizer_fragment_init@@Base+0xa8>
   22cdc:	bl	10550 <myhtml_token_set_done@plt>
   22ce0:	ldr	r3, [r4, #88]	; 0x58
   22ce4:	mov	r2, #1
   22ce8:	mov	r1, #0
   22cec:	ldr	r3, [r3, #32]
   22cf0:	mov	r0, r4
   22cf4:	str	r3, [r4, #156]	; 0x9c
   22cf8:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   22cfc:	cmp	r6, #128	; 0x80
   22d00:	mov	r5, r0
   22d04:	bne	22d14 <myhtml_tokenizer_fragment_init@@Base+0xa0>
   22d08:	mov	r1, #17
   22d0c:	mov	r0, r4
   22d10:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   22d14:	mov	r0, r4
   22d18:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22d1c:	mov	r0, r5
   22d20:	pop	{r4, r5, r6, pc}
   22d24:	mov	r1, r6
   22d28:	ldr	r0, [r4, #28]
   22d2c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   22d30:	ldr	r3, [r0, #12]
   22d34:	b	22cb0 <myhtml_tokenizer_fragment_init@@Base+0x3c>

00022d38 <myhtml_tokenizer_wait@@Base>:
   22d38:	ldr	r3, [r0]
   22d3c:	ldr	r3, [r3]
   22d40:	cmp	r3, #0
   22d44:	bxeq	lr
   22d48:	ldr	r1, [r0, #20]
   22d4c:	mov	r0, r3
   22d50:	b	1097c <mythread_queue_list_entry_wait_for_done@plt>

00022d54 <myhtml_tokenizer_post@@Base>:
   22d54:	ldr	r3, [r0]
   22d58:	push	{r4, lr}
   22d5c:	mov	r4, r0
   22d60:	ldr	r0, [r3]
   22d64:	cmp	r0, #0
   22d68:	beq	22d74 <myhtml_tokenizer_post@@Base+0x20>
   22d6c:	mov	r1, #0
   22d70:	bl	104c0 <mythread_resume@plt>
   22d74:	ldr	r3, [r4]
   22d78:	ldr	r0, [r3, #4]
   22d7c:	cmp	r0, #0
   22d80:	popeq	{r4, pc}
   22d84:	mov	r1, #0
   22d88:	pop	{r4, lr}
   22d8c:	b	104c0 <mythread_resume@plt>

00022d90 <myhtml_tokenizer_chunk_process@@Base>:
   22d90:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   22d94:	mov	r4, r0
   22d98:	ldr	r6, [r0]
   22d9c:	mov	r3, r2
   22da0:	mov	r7, r1
   22da4:	mov	r5, r2
   22da8:	mov	r2, r1
   22dac:	ldr	r1, [r0, #72]	; 0x48
   22db0:	ldr	r0, [r0, #76]	; 0x4c
   22db4:	ldr	r8, [r6, #24]
   22db8:	bl	10094 <mycore_incoming_buffer_add@plt>
   22dbc:	ldr	r3, [r6, #32]
   22dc0:	tst	r3, #1
   22dc4:	ldrne	r3, [r4, #180]	; 0xb4
   22dc8:	orrne	r3, r3, #16
   22dcc:	strne	r3, [r4, #180]	; 0xb4
   22dd0:	ldr	r3, [r4, #180]	; 0xb4
   22dd4:	tst	r3, #16
   22dd8:	str	r0, [r4, #76]	; 0x4c
   22ddc:	bne	22e30 <myhtml_tokenizer_chunk_process@@Base+0xa0>
   22de0:	ldr	r2, [r4, #20]
   22de4:	cmp	r2, #0
   22de8:	bne	22e28 <myhtml_tokenizer_chunk_process@@Base+0x98>
   22dec:	add	r3, sp, #16
   22df0:	mov	r0, r6
   22df4:	str	r2, [r3, #-4]!
   22df8:	ldr	r2, [r0], #8
   22dfc:	str	r3, [sp, #4]
   22e00:	ldr	r3, [r6, #20]
   22e04:	mov	r1, #2
   22e08:	str	r3, [sp]
   22e0c:	ldr	r3, [r4, #24]
   22e10:	ldr	r2, [r2, #16]
   22e14:	bl	10184 <mythread_queue_list_entry_push@plt>
   22e18:	str	r0, [r4, #20]
   22e1c:	ldr	r0, [sp, #12]
   22e20:	cmp	r0, #0
   22e24:	bne	22e74 <myhtml_tokenizer_chunk_process@@Base+0xe4>
   22e28:	mov	r0, r4
   22e2c:	bl	102b0 <myhtml_tokenizer_post@plt>
   22e30:	ldr	r3, [r4, #68]	; 0x44
   22e34:	cmp	r3, #0
   22e38:	beq	22e5c <myhtml_tokenizer_chunk_process@@Base+0xcc>
   22e3c:	mov	r3, #0
   22e40:	cmp	r3, r5
   22e44:	bcc	22e7c <myhtml_tokenizer_chunk_process@@Base+0xec>
   22e48:	ldr	r3, [r4, #192]	; 0xc0
   22e4c:	mov	r0, #0
   22e50:	add	r5, r3, r5
   22e54:	str	r5, [r4, #192]	; 0xc0
   22e58:	b	22e74 <myhtml_tokenizer_chunk_process@@Base+0xe4>
   22e5c:	mov	r2, r5
   22e60:	mov	r1, r7
   22e64:	mov	r0, r4
   22e68:	bl	105f8 <myhtml_tokenizer_set_first_settings@plt>
   22e6c:	cmp	r0, #0
   22e70:	beq	22e3c <myhtml_tokenizer_chunk_process@@Base+0xac>
   22e74:	add	sp, sp, #16
   22e78:	pop	{r4, r5, r6, r7, r8, pc}
   22e7c:	ldr	r2, [r4, #160]	; 0xa0
   22e80:	str	r5, [sp]
   22e84:	ldr	r1, [r4, #64]	; 0x40
   22e88:	ldr	r6, [r8, r2, lsl #2]
   22e8c:	mov	r0, r4
   22e90:	mov	r2, r7
   22e94:	blx	r6
   22e98:	mov	r3, r0
   22e9c:	b	22e40 <myhtml_tokenizer_chunk_process@@Base+0xb0>

00022ea0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   22ea0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ea4:	mov	r5, r0
   22ea8:	ldr	r0, [r0, #200]	; 0xc8
   22eac:	mov	r6, r1
   22eb0:	mov	r8, r2
   22eb4:	bl	1082c <myencoding_get_function_by_id@plt>
   22eb8:	ldr	r3, [r5, #148]	; 0x94
   22ebc:	cmp	r3, #0
   22ec0:	str	r0, [sp, #4]
   22ec4:	beq	22f20 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x80>
   22ec8:	ldr	r7, [r5, #148]	; 0x94
   22ecc:	add	r8, r6, r8
   22ed0:	mov	r0, r7
   22ed4:	bl	10b80 <myhtml_stream_buffer_current_entry@plt>
   22ed8:	add	sl, r7, #12
   22edc:	mov	fp, #16384	; 0x4000
   22ee0:	ldr	r9, [r0, #4]
   22ee4:	mov	r4, r0
   22ee8:	cmp	r6, r8
   22eec:	bne	22f64 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xc4>
   22ef0:	ldr	r2, [r4, #4]
   22ef4:	mov	r6, #0
   22ef8:	cmp	r9, r2
   22efc:	beq	22f18 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x78>
   22f00:	ldr	r1, [r4]
   22f04:	str	r6, [r5, #200]	; 0xc8
   22f08:	sub	r2, r2, r9
   22f0c:	add	r1, r1, r9
   22f10:	mov	r0, r5
   22f14:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   22f18:	mov	r0, r6
   22f1c:	b	22f5c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xbc>
   22f20:	bl	10e74 <myhtml_stream_buffer_create@plt>
   22f24:	cmp	r0, #0
   22f28:	str	r0, [r5, #148]	; 0x94
   22f2c:	moveq	r0, #37632	; 0x9300
   22f30:	beq	22f5c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xbc>
   22f34:	mov	r1, #1024	; 0x400
   22f38:	bl	10d6c <myhtml_stream_buffer_init@plt>
   22f3c:	cmp	r0, #0
   22f40:	bne	22f5c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xbc>
   22f44:	mov	r1, #16384	; 0x4000
   22f48:	ldr	r0, [r5, #148]	; 0x94
   22f4c:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   22f50:	cmp	r0, #0
   22f54:	bne	22ec8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x28>
   22f58:	ldr	r0, [pc, #128]	; 22fe0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x140>
   22f5c:	add	sp, sp, #12
   22f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f64:	mov	r1, sl
   22f68:	ldrb	r0, [r6], #1
   22f6c:	ldr	r3, [sp, #4]
   22f70:	blx	r3
   22f74:	cmp	r0, #0
   22f78:	bne	22ee8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x48>
   22f7c:	ldr	r2, [r4, #4]
   22f80:	ldr	r1, [r4, #8]
   22f84:	add	ip, r2, #4
   22f88:	cmp	ip, r1
   22f8c:	bcc	22fc0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x120>
   22f90:	ldr	r1, [r4]
   22f94:	str	r0, [r5, #200]	; 0xc8
   22f98:	sub	r2, r2, r9
   22f9c:	add	r1, r1, r9
   22fa0:	mov	r0, r5
   22fa4:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   22fa8:	mov	r1, fp
   22fac:	mov	r0, r7
   22fb0:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   22fb4:	subs	r4, r0, #0
   22fb8:	beq	22f58 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb8>
   22fbc:	ldr	r9, [r4, #4]
   22fc0:	ldm	r4, {r1, r3}
   22fc4:	add	r1, r1, r3
   22fc8:	ldr	r0, [r7, #24]
   22fcc:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   22fd0:	ldr	r2, [r4, #4]
   22fd4:	add	r0, r2, r0
   22fd8:	str	r0, [r4, #4]
   22fdc:	b	22ee8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x48>
   22fe0:	andeq	r9, r0, r4, lsl #6

00022fe4 <myhtml_tokenizer_chunk@@Base>:
   22fe4:	ldr	r3, [r0, #204]	; 0xcc
   22fe8:	sub	r3, r3, #4
   22fec:	cmp	r3, #1
   22ff0:	bhi	22ff8 <myhtml_tokenizer_chunk@@Base+0x14>
   22ff4:	b	10b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>
   22ff8:	b	10430 <myhtml_tokenizer_chunk_process@plt>

00022ffc <myhtml_tokenizer_begin@@Base>:
   22ffc:	b	100c4 <myhtml_tokenizer_chunk@plt>

00023000 <myhtml_tokenizer_pause@@Base>:
   23000:	ldr	r3, [r0]
   23004:	push	{r4, lr}
   23008:	mov	r4, r0
   2300c:	ldr	r0, [r3]
   23010:	cmp	r0, #0
   23014:	beq	2301c <myhtml_tokenizer_pause@@Base+0x1c>
   23018:	bl	10ad8 <mythread_stop@plt>
   2301c:	ldr	r3, [r4]
   23020:	ldr	r0, [r3, #4]
   23024:	cmp	r0, #0
   23028:	popeq	{r4, pc}
   2302c:	pop	{r4, lr}
   23030:	b	10ad8 <mythread_stop@plt>

00023034 <myhtml_tokenizer_end@@Base>:
   23034:	ldr	r2, [r0, #76]	; 0x4c
   23038:	push	{r0, r1, r4, r5, r6, lr}
   2303c:	cmp	r2, #0
   23040:	mov	r4, r0
   23044:	beq	2307c <myhtml_tokenizer_end@@Base+0x48>
   23048:	ldr	r3, [r2, #8]
   2304c:	ldr	r1, [r0, #192]	; 0xc0
   23050:	ldr	ip, [r0]
   23054:	sub	r1, r1, r3
   23058:	str	r1, [r0, #192]	; 0xc0
   2305c:	ldr	r1, [r0, #160]	; 0xa0
   23060:	ldr	ip, [ip, #24]
   23064:	add	r1, r1, #70	; 0x46
   23068:	str	r3, [sp]
   2306c:	ldr	r5, [ip, r1, lsl #2]
   23070:	ldr	r2, [r2]
   23074:	ldr	r1, [r0, #64]	; 0x40
   23078:	blx	r5
   2307c:	ldr	r2, [r4, #64]	; 0x40
   23080:	mov	r3, #251	; 0xfb
   23084:	mov	r1, #0
   23088:	str	r3, [r2]
   2308c:	mov	r0, r4
   23090:	bl	10028 <myhtml_queue_add@plt>
   23094:	cmp	r0, #0
   23098:	movne	r3, #2
   2309c:	strne	r3, [r4, #196]	; 0xc4
   230a0:	ldr	r3, [r4, #180]	; 0xb4
   230a4:	ldr	r6, [r4, #196]	; 0xc4
   230a8:	ands	r5, r3, #16
   230ac:	bne	23118 <myhtml_tokenizer_end@@Base+0xe4>
   230b0:	ldr	r3, [r4]
   230b4:	ldr	r1, [r4, #20]
   230b8:	ldr	r0, [r3]
   230bc:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   230c0:	ldr	r0, [r4]
   230c4:	ldr	r3, [r4, #20]
   230c8:	mov	r1, #2
   230cc:	ldr	r2, [r0], #8
   230d0:	str	r5, [sp]
   230d4:	ldr	r2, [r2, #16]
   230d8:	bl	fc08 <mythread_queue_list_entry_delete@plt>
   230dc:	ldr	r3, [r4]
   230e0:	ldr	r3, [r3]
   230e4:	str	r0, [r4, #20]
   230e8:	ldr	r0, [r3, #16]
   230ec:	bl	105c8 <mythread_queue_list_get_count@plt>
   230f0:	cmp	r0, #0
   230f4:	bne	23100 <myhtml_tokenizer_end@@Base+0xcc>
   230f8:	mov	r0, r4
   230fc:	bl	105ec <myhtml_tokenizer_pause@plt>
   23100:	cmp	r6, #0
   23104:	bne	23118 <myhtml_tokenizer_end@@Base+0xe4>
   23108:	ldr	r3, [r4]
   2310c:	ldr	r0, [r3]
   23110:	bl	10514 <mythread_check_status@plt>
   23114:	mov	r6, r0
   23118:	ldr	r3, [r4, #180]	; 0xb4
   2311c:	mov	r0, r6
   23120:	orr	r3, r3, #32
   23124:	str	r3, [r4, #180]	; 0xb4
   23128:	add	sp, sp, #8
   2312c:	pop	{r4, r5, r6, pc}

00023130 <myhtml_tokenizer_calc_current_namespace@@Base>:
   23130:	ldr	r3, [r0, #184]	; 0xb8
   23134:	tst	r3, #1
   23138:	bxne	lr
   2313c:	ldr	r3, [r0, #180]	; 0xb4
   23140:	tst	r3, #16
   23144:	beq	23154 <myhtml_tokenizer_calc_current_namespace@@Base+0x24>
   23148:	ldr	r3, [r0, #164]	; 0xa4
   2314c:	str	r3, [r0, #160]	; 0xa0
   23150:	bx	lr
   23154:	ldr	r3, [r1]
   23158:	cmp	r3, #124	; 0x7c
   2315c:	cmpne	r3, #218	; 0xda
   23160:	moveq	r2, #1
   23164:	movne	r2, #0
   23168:	cmp	r3, #54	; 0x36
   2316c:	orreq	r2, r2, #1
   23170:	cmp	r2, #0
   23174:	beq	23180 <myhtml_tokenizer_calc_current_namespace@@Base+0x50>
   23178:	str	r1, [r0, #156]	; 0x9c
   2317c:	bx	lr
   23180:	ldr	r2, [r0, #156]	; 0x9c
   23184:	cmp	r2, #0
   23188:	bxeq	lr
   2318c:	ldr	r2, [r1, #48]	; 0x30
   23190:	tst	r2, #1
   23194:	bxne	lr
   23198:	push	{r4, r5, r6, lr}
   2319c:	mov	r5, r1
   231a0:	mov	r4, r0
   231a4:	mov	r1, r3
   231a8:	ldr	r0, [r0, #28]
   231ac:	bl	10a24 <myhtml_tag_get_by_id@plt>
   231b0:	ldr	r3, [r0, #12]
   231b4:	cmp	r3, #0
   231b8:	popeq	{r4, r5, r6, pc}
   231bc:	mov	r1, r5
   231c0:	mov	r0, r4
   231c4:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   231c8:	ldr	r3, [r4, #164]	; 0xa4
   231cc:	str	r3, [r4, #160]	; 0xa0
   231d0:	pop	{r4, r5, r6, pc}

000231d4 <myhtml_check_tag_parser@@Base>:
   231d4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   231d8:	mov	r8, r2
   231dc:	ldr	r2, [r1, #28]
   231e0:	mov	r4, r1
   231e4:	cmp	r2, r3
   231e8:	ldr	r1, [r1, #24]
   231ec:	mov	r9, r3
   231f0:	ldrls	r3, [r0, #192]	; 0xc0
   231f4:	mov	r7, r0
   231f8:	subls	r1, r1, r3
   231fc:	ldr	r5, [r0, #28]
   23200:	addls	r1, r8, r1
   23204:	bls	23214 <myhtml_check_tag_parser@@Base+0x40>
   23208:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2320c:	ldr	r2, [r4, #28]
   23210:	mov	r1, r0
   23214:	mov	r0, r5
   23218:	bl	10b74 <myhtml_tag_get_by_name@plt>
   2321c:	cmp	r0, #0
   23220:	mov	r6, r0
   23224:	ldrne	r3, [r0]
   23228:	strne	r3, [r4]
   2322c:	bne	232a0 <myhtml_check_tag_parser@@Base+0xcc>
   23230:	ldr	r2, [r4, #28]
   23234:	ldr	r1, [r4, #24]
   23238:	cmp	r9, r2
   2323c:	bcs	23284 <myhtml_check_tag_parser@@Base+0xb0>
   23240:	mov	r0, r7
   23244:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   23248:	mov	r3, #1
   2324c:	ldr	r2, [r4, #28]
   23250:	str	r3, [sp]
   23254:	mov	r3, r6
   23258:	mov	r1, r0
   2325c:	mov	r0, r5
   23260:	bl	10010 <myhtml_tag_add@plt>
   23264:	mov	r3, #1
   23268:	mov	r2, r3
   2326c:	str	r0, [r4]
   23270:	mov	r0, r5
   23274:	ldr	r1, [r4]
   23278:	add	sp, sp, #12
   2327c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   23280:	b	ff98 <myhtml_tag_set_category@plt>
   23284:	ldr	r3, [r7, #192]	; 0xc0
   23288:	sub	r1, r1, r3
   2328c:	mov	r3, #1
   23290:	str	r3, [sp]
   23294:	add	r1, r8, r1
   23298:	mov	r3, r0
   2329c:	b	2325c <myhtml_check_tag_parser@@Base+0x88>
   232a0:	add	sp, sp, #12
   232a4:	pop	{r4, r5, r6, r7, r8, r9, pc}

000232a8 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   232a8:	push	{r4, r5, r6, lr}
   232ac:	mov	r2, r1
   232b0:	ldr	r4, [r1]
   232b4:	cmp	r4, #0
   232b8:	bne	23308 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x60>
   232bc:	ldr	ip, [r1, #24]
   232c0:	cmp	r3, ip
   232c4:	bls	23308 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x60>
   232c8:	ldr	r6, [r2, #48]	; 0x30
   232cc:	ldr	lr, [sp, #16]
   232d0:	ldr	r1, [r1, #32]
   232d4:	orr	lr, lr, r6
   232d8:	str	lr, [r2, #48]	; 0x30
   232dc:	sub	r3, r3, ip
   232e0:	mov	lr, #1
   232e4:	str	lr, [r2]
   232e8:	str	ip, [r2, #32]
   232ec:	str	r3, [r2, #36]	; 0x24
   232f0:	str	r3, [r2, #28]
   232f4:	mov	r5, r0
   232f8:	bl	10028 <myhtml_queue_add@plt>
   232fc:	cmp	r0, #0
   23300:	movne	r2, r4
   23304:	ldreq	r2, [r5, #64]	; 0x40
   23308:	mov	r0, r2
   2330c:	pop	{r4, r5, r6, pc}

00023310 <myhtml_tokenizer_state_tag_open@@Base>:
   23310:	push	{r0, r1, r2, r4, r5, lr}
   23314:	mov	r4, r3
   23318:	ldr	lr, [pc, #268]	; 2342c <myhtml_tokenizer_state_tag_open@@Base+0x11c>
   2331c:	ldrb	r3, [r2, r3]
   23320:	add	lr, pc, lr
   23324:	mov	r5, r0
   23328:	ldrb	lr, [lr, r3]
   2332c:	cmp	lr, #1
   23330:	bne	23384 <myhtml_tokenizer_state_tag_open@@Base+0x74>
   23334:	ldr	r3, [r0, #192]	; 0xc0
   23338:	mov	ip, #512	; 0x200
   2333c:	sub	r3, r3, #1
   23340:	str	ip, [sp]
   23344:	add	r3, r3, r4
   23348:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2334c:	cmp	r0, #0
   23350:	bne	2336c <myhtml_tokenizer_state_tag_open@@Base+0x5c>
   23354:	mov	r4, #0
   23358:	mov	r3, #69	; 0x45
   2335c:	str	r3, [r5, #160]	; 0xa0
   23360:	mov	r0, r4
   23364:	add	sp, sp, #12
   23368:	pop	{r4, r5, pc}
   2336c:	ldr	r3, [r5, #192]	; 0xc0
   23370:	add	r3, r3, r4
   23374:	str	r3, [r0, #24]
   23378:	mov	r3, #9
   2337c:	str	r3, [r5, #160]	; 0xa0
   23380:	b	23360 <myhtml_tokenizer_state_tag_open@@Base+0x50>
   23384:	cmp	r3, #33	; 0x21
   23388:	bne	233c4 <myhtml_tokenizer_state_tag_open@@Base+0xb4>
   2338c:	ldr	r3, [r0, #192]	; 0xc0
   23390:	mov	ip, #512	; 0x200
   23394:	sub	r3, r3, #1
   23398:	str	ip, [sp]
   2339c:	add	r3, r3, r4
   233a0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   233a4:	cmp	r0, #0
   233a8:	beq	23354 <myhtml_tokenizer_state_tag_open@@Base+0x44>
   233ac:	ldr	r3, [r5, #192]	; 0xc0
   233b0:	add	r4, r4, #1
   233b4:	add	r3, r3, r4
   233b8:	str	r3, [r0, #24]
   233bc:	mov	r3, #44	; 0x2c
   233c0:	b	2337c <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   233c4:	cmp	r3, #47	; 0x2f
   233c8:	addeq	r4, r4, #1
   233cc:	moveq	r3, #8
   233d0:	beq	2337c <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   233d4:	cmp	r3, #63	; 0x3f
   233d8:	bne	23410 <myhtml_tokenizer_state_tag_open@@Base+0x100>
   233dc:	ldr	r3, [r0, #192]	; 0xc0
   233e0:	mov	ip, #512	; 0x200
   233e4:	sub	r3, r3, #1
   233e8:	str	ip, [sp]
   233ec:	add	r3, r3, r4
   233f0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   233f4:	cmp	r0, #0
   233f8:	beq	23354 <myhtml_tokenizer_state_tag_open@@Base+0x44>
   233fc:	ldr	r3, [r5, #192]	; 0xc0
   23400:	add	r3, r3, r4
   23404:	str	r3, [r0, #24]
   23408:	mov	r3, #43	; 0x2b
   2340c:	b	2337c <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   23410:	ldr	r3, [r1, #48]	; 0x30
   23414:	ldr	r2, [r1, #48]	; 0x30
   23418:	and	r3, r3, #8
   2341c:	eor	r3, r3, r2
   23420:	str	r3, [r1, #48]	; 0x30
   23424:	mov	r3, #0
   23428:	b	2337c <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   2342c:	andeq	r4, sp, ip, lsr r9

00023430 <myhtml_tokenizer_state_end_tag_open@@Base>:
   23430:	push	{r0, r1, r4, r5, r6, lr}
   23434:	mov	r4, r3
   23438:	ldr	ip, [pc, #172]	; 234ec <myhtml_tokenizer_state_end_tag_open@@Base+0xbc>
   2343c:	ldrb	r3, [r2, r3]
   23440:	add	ip, pc, ip
   23444:	mov	r5, r0
   23448:	ldrb	r6, [ip, r3]
   2344c:	cmp	r6, #1
   23450:	bne	234a8 <myhtml_tokenizer_state_end_tag_open@@Base+0x78>
   23454:	ldr	r3, [r0, #192]	; 0xc0
   23458:	mov	ip, #512	; 0x200
   2345c:	sub	r3, r3, #2
   23460:	str	ip, [sp]
   23464:	add	r3, r3, r4
   23468:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2346c:	cmp	r0, #0
   23470:	bne	2348c <myhtml_tokenizer_state_end_tag_open@@Base+0x5c>
   23474:	mov	r4, #0
   23478:	mov	r3, #69	; 0x45
   2347c:	str	r3, [r5, #160]	; 0xa0
   23480:	mov	r0, r4
   23484:	add	sp, sp, #8
   23488:	pop	{r4, r5, r6, pc}
   2348c:	ldr	r3, [r5, #192]	; 0xc0
   23490:	str	r6, [r0, #48]	; 0x30
   23494:	add	r3, r3, r4
   23498:	str	r3, [r0, #24]
   2349c:	mov	r3, #9
   234a0:	str	r3, [r5, #160]	; 0xa0
   234a4:	b	23480 <myhtml_tokenizer_state_end_tag_open@@Base+0x50>
   234a8:	cmp	r3, #62	; 0x3e
   234ac:	addeq	r4, r4, #1
   234b0:	moveq	r3, #0
   234b4:	beq	234a0 <myhtml_tokenizer_state_end_tag_open@@Base+0x70>
   234b8:	ldr	r3, [r0, #192]	; 0xc0
   234bc:	mov	ip, #512	; 0x200
   234c0:	sub	r3, r3, #2
   234c4:	str	ip, [sp]
   234c8:	add	r3, r3, r4
   234cc:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   234d0:	cmp	r0, #0
   234d4:	beq	23474 <myhtml_tokenizer_state_end_tag_open@@Base+0x44>
   234d8:	ldr	r3, [r5, #192]	; 0xc0
   234dc:	add	r3, r3, r4
   234e0:	str	r3, [r0, #24]
   234e4:	mov	r3, #43	; 0x2b
   234e8:	b	234a0 <myhtml_tokenizer_state_end_tag_open@@Base+0x70>
   234ec:	andeq	r4, sp, ip, lsl r8

000234f0 <myhtml_tokenizer_set_state@@Base>:
   234f0:	ldr	r3, [r1, #48]	; 0x30
   234f4:	tst	r3, #1
   234f8:	bne	23514 <myhtml_tokenizer_set_state@@Base+0x24>
   234fc:	ldr	r1, [r1]
   23500:	cmp	r1, #93	; 0x5d
   23504:	bne	23520 <myhtml_tokenizer_set_state@@Base+0x30>
   23508:	ldr	r3, [r0, #180]	; 0xb4
   2350c:	tst	r3, #1
   23510:	bne	23520 <myhtml_tokenizer_set_state@@Base+0x30>
   23514:	mov	r3, #0
   23518:	str	r3, [r0, #160]	; 0xa0
   2351c:	bx	lr
   23520:	push	{r4, lr}
   23524:	mov	r4, r0
   23528:	ldr	r0, [r0, #28]
   2352c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   23530:	ldr	r3, [r0, #12]
   23534:	str	r3, [r4, #160]	; 0xa0
   23538:	pop	{r4, pc}

0002353c <myhtml_tokenizer_state_tag_name@@Base>:
   2353c:	push	{r4, r5, r6, r7, r8, lr}
   23540:	mov	r6, r0
   23544:	ldr	r0, [pc, #276]	; 23660 <myhtml_tokenizer_state_tag_name@@Base+0x124>
   23548:	mov	r5, r1
   2354c:	ldr	r1, [sp, #24]
   23550:	mov	r4, r3
   23554:	add	r0, pc, r0
   23558:	cmp	r4, r1
   2355c:	bcs	235a4 <myhtml_tokenizer_state_tag_name@@Base+0x68>
   23560:	ldrb	r3, [r2, r4]
   23564:	add	r7, r4, #1
   23568:	ldrb	ip, [r0, r3]
   2356c:	cmp	ip, #2
   23570:	bne	235ac <myhtml_tokenizer_state_tag_name@@Base+0x70>
   23574:	ldr	r3, [r6, #192]	; 0xc0
   23578:	ldr	r1, [r5, #24]
   2357c:	mov	r0, r6
   23580:	sub	r3, r3, r1
   23584:	add	r3, r3, r4
   23588:	str	r3, [r5, #28]
   2358c:	mov	r1, r5
   23590:	mov	r3, r4
   23594:	bl	10c40 <myhtml_check_tag_parser@plt>
   23598:	mov	r4, r7
   2359c:	mov	r3, #33	; 0x21
   235a0:	str	r3, [r6, #160]	; 0xa0
   235a4:	mov	r0, r4
   235a8:	pop	{r4, r5, r6, r7, r8, pc}
   235ac:	cmp	r3, #47	; 0x2f
   235b0:	bne	235e4 <myhtml_tokenizer_state_tag_name@@Base+0xa8>
   235b4:	ldr	r3, [r6, #192]	; 0xc0
   235b8:	ldr	r1, [r5, #24]
   235bc:	mov	r0, r6
   235c0:	sub	r3, r3, r1
   235c4:	add	r3, r3, r4
   235c8:	str	r3, [r5, #28]
   235cc:	mov	r1, r5
   235d0:	mov	r3, r4
   235d4:	bl	10c40 <myhtml_check_tag_parser@plt>
   235d8:	mov	r4, r7
   235dc:	mov	r3, #42	; 0x2a
   235e0:	b	235a0 <myhtml_tokenizer_state_tag_name@@Base+0x64>
   235e4:	cmp	r3, #62	; 0x3e
   235e8:	bne	23658 <myhtml_tokenizer_state_tag_name@@Base+0x11c>
   235ec:	ldr	r3, [r6, #192]	; 0xc0
   235f0:	ldr	r1, [r5, #24]
   235f4:	mov	r0, r6
   235f8:	sub	r3, r3, r1
   235fc:	add	r3, r3, r4
   23600:	str	r3, [r5, #28]
   23604:	mov	r1, r5
   23608:	mov	r3, r4
   2360c:	bl	10c40 <myhtml_check_tag_parser@plt>
   23610:	mov	r1, r5
   23614:	mov	r0, r6
   23618:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   2361c:	ldr	r3, [r6, #192]	; 0xc0
   23620:	ldr	r2, [r5, #32]
   23624:	mov	r1, r7
   23628:	sub	r3, r3, r2
   2362c:	add	r3, r3, r7
   23630:	str	r3, [r5, #36]	; 0x24
   23634:	mov	r2, r5
   23638:	mov	r0, r6
   2363c:	bl	10028 <myhtml_queue_add@plt>
   23640:	mov	r4, r7
   23644:	cmp	r0, #0
   23648:	movne	r3, #69	; 0x45
   2364c:	strne	r3, [r6, #160]	; 0xa0
   23650:	movne	r4, #0
   23654:	b	235a4 <myhtml_tokenizer_state_tag_name@@Base+0x68>
   23658:	mov	r4, r7
   2365c:	b	23558 <myhtml_tokenizer_state_tag_name@@Base+0x1c>
   23660:	andeq	r4, sp, r8, lsl #14

00023664 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   23664:	push	{r4, r5, r6, lr}
   23668:	mov	r4, r3
   2366c:	ldrb	r3, [r2, r3]
   23670:	mov	r6, r0
   23674:	cmp	r3, #62	; 0x3e
   23678:	movne	r3, #33	; 0x21
   2367c:	strne	r3, [r0, #160]	; 0xa0
   23680:	bne	236d0 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   23684:	ldr	r3, [r1, #48]	; 0x30
   23688:	mov	r5, r1
   2368c:	orr	r3, r3, #2
   23690:	str	r3, [r1, #48]	; 0x30
   23694:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   23698:	ldr	r3, [r6, #192]	; 0xc0
   2369c:	ldr	r2, [r5, #32]
   236a0:	add	r4, r4, #1
   236a4:	sub	r3, r3, r2
   236a8:	add	r3, r3, r4
   236ac:	str	r3, [r5, #36]	; 0x24
   236b0:	mov	r1, r4
   236b4:	mov	r2, r5
   236b8:	mov	r0, r6
   236bc:	bl	10028 <myhtml_queue_add@plt>
   236c0:	cmp	r0, #0
   236c4:	movne	r4, #0
   236c8:	movne	r3, #69	; 0x45
   236cc:	strne	r3, [r6, #160]	; 0xa0
   236d0:	mov	r0, r4
   236d4:	pop	{r4, r5, r6, pc}

000236d8 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   236d8:	push	{r4, r5, r6, lr}
   236dc:	mov	r4, r3
   236e0:	ldrb	r3, [r2, r3]
   236e4:	mov	r6, r0
   236e8:	mov	r5, r1
   236ec:	sub	r3, r3, #9
   236f0:	ldr	r0, [sp, #16]
   236f4:	uxtb	r3, r3
   236f8:	cmp	r3, #23
   236fc:	bhi	23710 <myhtml_tokenizer_state_before_attribute_name@@Base+0x38>
   23700:	ldr	r1, [pc, #296]	; 23830 <myhtml_tokenizer_state_before_attribute_name@@Base+0x158>
   23704:	mvn	r3, r1, lsr r3
   23708:	tst	r3, #1
   2370c:	beq	23724 <myhtml_tokenizer_state_before_attribute_name@@Base+0x4c>
   23710:	cmp	r4, r0
   23714:	bcc	2374c <myhtml_tokenizer_state_before_attribute_name@@Base+0x74>
   23718:	mov	r0, r4
   2371c:	pop	{r4, r5, r6, pc}
   23720:	add	r4, r4, #1
   23724:	cmp	r4, r0
   23728:	bcs	23718 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   2372c:	ldrb	r3, [r2, r4]
   23730:	sub	r3, r3, #9
   23734:	uxtb	r3, r3
   23738:	cmp	r3, #23
   2373c:	bhi	2374c <myhtml_tokenizer_state_before_attribute_name@@Base+0x74>
   23740:	mvn	r3, r1, lsr r3
   23744:	tst	r3, #1
   23748:	beq	23720 <myhtml_tokenizer_state_before_attribute_name@@Base+0x48>
   2374c:	ldrb	r3, [r2, r4]
   23750:	add	r1, r2, r4
   23754:	cmp	r3, #62	; 0x3e
   23758:	bne	237a4 <myhtml_tokenizer_state_before_attribute_name@@Base+0xcc>
   2375c:	mov	r1, r5
   23760:	mov	r0, r6
   23764:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   23768:	ldr	r3, [r6, #192]	; 0xc0
   2376c:	ldr	r2, [r5, #32]
   23770:	add	r4, r4, #1
   23774:	sub	r3, r3, r2
   23778:	add	r3, r3, r4
   2377c:	str	r3, [r5, #36]	; 0x24
   23780:	mov	r1, r4
   23784:	mov	r2, r5
   23788:	mov	r0, r6
   2378c:	bl	10028 <myhtml_queue_add@plt>
   23790:	cmp	r0, #0
   23794:	movne	r3, #69	; 0x45
   23798:	strne	r3, [r6, #160]	; 0xa0
   2379c:	movne	r4, #0
   237a0:	b	23718 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   237a4:	cmp	r3, #47	; 0x2f
   237a8:	ldreq	r3, [r5, #48]	; 0x30
   237ac:	addeq	r4, r4, #1
   237b0:	orreq	r3, r3, #2
   237b4:	streq	r3, [r5, #48]	; 0x30
   237b8:	beq	23718 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   237bc:	ldr	r2, [r5, #40]	; 0x28
   237c0:	ldr	r3, [r6, #56]	; 0x38
   237c4:	cmp	r2, #0
   237c8:	streq	r3, [r5, #40]	; 0x28
   237cc:	ldrne	r2, [r5, #44]	; 0x2c
   237d0:	streq	r3, [r5, #44]	; 0x2c
   237d4:	streq	r3, [r6, #56]	; 0x38
   237d8:	strne	r3, [r2]
   237dc:	strne	r2, [r3, #4]
   237e0:	movne	r2, #0
   237e4:	strne	r3, [r5, #44]	; 0x2c
   237e8:	streq	r2, [r3]
   237ec:	strne	r2, [r3]
   237f0:	streq	r2, [r3, #4]
   237f4:	strne	r3, [r6, #56]	; 0x38
   237f8:	ldr	r2, [r6, #192]	; 0xc0
   237fc:	ldr	r3, [r6, #56]	; 0x38
   23800:	add	r2, r2, r4
   23804:	str	r2, [r3, #48]	; 0x30
   23808:	mov	r2, #0
   2380c:	str	r2, [r3, #52]	; 0x34
   23810:	str	r2, [r3, #56]	; 0x38
   23814:	str	r2, [r3, #60]	; 0x3c
   23818:	ldrb	r3, [r1]
   2381c:	cmp	r3, #61	; 0x3d
   23820:	mov	r3, #34	; 0x22
   23824:	addeq	r4, r4, #1
   23828:	str	r3, [r6, #160]	; 0xa0
   2382c:	b	23718 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   23830:	addeq	r0, r0, fp, lsl r0

00023834 <myhtml_tokenizer_state_attribute_name@@Base>:
   23834:	push	{r4, r5, r6, lr}
   23838:	mov	r5, r0
   2383c:	ldr	ip, [pc, #356]	; 239a8 <myhtml_tokenizer_state_attribute_name@@Base+0x174>
   23840:	ldr	r0, [sp, #16]
   23844:	mov	r6, r1
   23848:	mov	r4, r3
   2384c:	cmp	r4, r0
   23850:	bcs	23904 <myhtml_tokenizer_state_attribute_name@@Base+0xd0>
   23854:	ldrb	r1, [r2, r4]
   23858:	sub	r3, r1, #9
   2385c:	uxtb	r3, r3
   23860:	cmp	r3, #23
   23864:	bhi	23980 <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   23868:	mvn	r3, ip, lsr r3
   2386c:	tst	r3, #1
   23870:	bne	2389c <myhtml_tokenizer_state_attribute_name@@Base+0x68>
   23874:	ldr	r2, [r5, #56]	; 0x38
   23878:	ldr	r3, [r5, #192]	; 0xc0
   2387c:	ldr	r1, [r2, #48]	; 0x30
   23880:	sub	r3, r3, r1
   23884:	add	r3, r3, r4
   23888:	str	r3, [r2, #52]	; 0x34
   2388c:	mov	r3, #35	; 0x23
   23890:	str	r3, [r5, #160]	; 0xa0
   23894:	add	r4, r4, #1
   23898:	b	23904 <myhtml_tokenizer_state_attribute_name@@Base+0xd0>
   2389c:	cmp	r1, #62	; 0x3e
   238a0:	bne	23928 <myhtml_tokenizer_state_attribute_name@@Base+0xf4>
   238a4:	ldr	r2, [r5, #56]	; 0x38
   238a8:	ldr	r3, [r5, #192]	; 0xc0
   238ac:	mov	r0, r5
   238b0:	ldr	r1, [r2, #48]	; 0x30
   238b4:	sub	r3, r3, r1
   238b8:	add	r3, r3, r4
   238bc:	str	r3, [r2, #52]	; 0x34
   238c0:	mov	r1, r6
   238c4:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   238c8:	ldr	r3, [r5, #192]	; 0xc0
   238cc:	ldr	r2, [r6, #32]
   238d0:	add	r4, r4, #1
   238d4:	sub	r3, r3, r2
   238d8:	add	r3, r3, r4
   238dc:	str	r3, [r6, #36]	; 0x24
   238e0:	mov	r2, r6
   238e4:	mov	r1, r4
   238e8:	mov	r0, r5
   238ec:	bl	10028 <myhtml_queue_add@plt>
   238f0:	cmp	r0, #0
   238f4:	beq	2390c <myhtml_tokenizer_state_attribute_name@@Base+0xd8>
   238f8:	mov	r4, #0
   238fc:	mov	r3, #69	; 0x45
   23900:	str	r3, [r5, #160]	; 0xa0
   23904:	mov	r0, r4
   23908:	pop	{r4, r5, r6, pc}
   2390c:	ldr	r0, [r5, #8]
   23910:	ldr	r1, [r0, #16]
   23914:	bl	10904 <myhtml_token_attr_create@plt>
   23918:	cmp	r0, #0
   2391c:	str	r0, [r5, #56]	; 0x38
   23920:	bne	23904 <myhtml_tokenizer_state_attribute_name@@Base+0xd0>
   23924:	b	238f8 <myhtml_tokenizer_state_attribute_name@@Base+0xc4>
   23928:	cmp	r1, #47	; 0x2f
   2392c:	bne	23978 <myhtml_tokenizer_state_attribute_name@@Base+0x144>
   23930:	ldr	r2, [r5, #56]	; 0x38
   23934:	ldr	r3, [r5, #192]	; 0xc0
   23938:	ldr	r0, [r5, #8]
   2393c:	ldr	r1, [r2, #48]	; 0x30
   23940:	sub	r3, r3, r1
   23944:	add	r3, r3, r4
   23948:	str	r3, [r2, #52]	; 0x34
   2394c:	ldr	r3, [r6, #48]	; 0x30
   23950:	ldr	r1, [r0, #16]
   23954:	orr	r3, r3, #2
   23958:	str	r3, [r6, #48]	; 0x30
   2395c:	mov	r3, #33	; 0x21
   23960:	str	r3, [r5, #160]	; 0xa0
   23964:	bl	10904 <myhtml_token_attr_create@plt>
   23968:	cmp	r0, #0
   2396c:	str	r0, [r5, #56]	; 0x38
   23970:	bne	23894 <myhtml_tokenizer_state_attribute_name@@Base+0x60>
   23974:	b	238f8 <myhtml_tokenizer_state_attribute_name@@Base+0xc4>
   23978:	add	r4, r4, #1
   2397c:	b	2384c <myhtml_tokenizer_state_attribute_name@@Base+0x18>
   23980:	cmp	r1, #61	; 0x3d
   23984:	bne	2389c <myhtml_tokenizer_state_attribute_name@@Base+0x68>
   23988:	ldr	r2, [r5, #56]	; 0x38
   2398c:	ldr	r3, [r5, #192]	; 0xc0
   23990:	ldr	r1, [r2, #48]	; 0x30
   23994:	sub	r3, r3, r1
   23998:	add	r3, r3, r4
   2399c:	str	r3, [r2, #52]	; 0x34
   239a0:	mov	r3, #36	; 0x24
   239a4:	b	23890 <myhtml_tokenizer_state_attribute_name@@Base+0x5c>
   239a8:	addeq	r0, r0, fp, lsl r0

000239ac <myhtml_tokenizer_state_after_attribute_name@@Base>:
   239ac:	push	{r4, r5, r6, r7, r8, lr}
   239b0:	mov	r4, r0
   239b4:	ldr	ip, [pc, #460]	; 23b88 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1dc>
   239b8:	ldr	r0, [sp, #24]
   239bc:	ldr	lr, [pc, #456]	; 23b8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1e0>
   239c0:	mov	r6, r1
   239c4:	mov	r5, r3
   239c8:	cmp	r5, r0
   239cc:	bcs	239e8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   239d0:	ldrb	r3, [r2, r5]
   239d4:	cmp	r3, #61	; 0x3d
   239d8:	bne	239f0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x44>
   239dc:	add	r5, r5, #1
   239e0:	mov	r3, #36	; 0x24
   239e4:	str	r3, [r4, #160]	; 0xa0
   239e8:	mov	r0, r5
   239ec:	pop	{r4, r5, r6, r7, r8, pc}
   239f0:	cmp	r3, #62	; 0x3e
   239f4:	bne	23a60 <myhtml_tokenizer_state_after_attribute_name@@Base+0xb4>
   239f8:	mov	r1, r6
   239fc:	mov	r0, r4
   23a00:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   23a04:	ldr	r3, [r4, #192]	; 0xc0
   23a08:	ldr	r2, [r6, #32]
   23a0c:	add	r5, r5, #1
   23a10:	sub	r3, r3, r2
   23a14:	add	r3, r3, r5
   23a18:	str	r3, [r6, #36]	; 0x24
   23a1c:	mov	r2, r6
   23a20:	mov	r1, r5
   23a24:	mov	r0, r4
   23a28:	bl	10028 <myhtml_queue_add@plt>
   23a2c:	cmp	r0, #0
   23a30:	beq	23a44 <myhtml_tokenizer_state_after_attribute_name@@Base+0x98>
   23a34:	mov	r3, #69	; 0x45
   23a38:	str	r3, [r4, #160]	; 0xa0
   23a3c:	mov	r5, #0
   23a40:	b	239e8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   23a44:	ldr	r0, [r4, #8]
   23a48:	ldr	r1, [r0, #16]
   23a4c:	bl	10904 <myhtml_token_attr_create@plt>
   23a50:	cmp	r0, #0
   23a54:	str	r0, [r4, #56]	; 0x38
   23a58:	bne	239e8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   23a5c:	b	23a34 <myhtml_tokenizer_state_after_attribute_name@@Base+0x88>
   23a60:	sub	r1, r3, #34	; 0x22
   23a64:	uxtb	r1, r1
   23a68:	cmp	r1, #26
   23a6c:	bhi	23af4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x148>
   23a70:	mvn	r1, ip, lsr r1
   23a74:	ands	r7, r1, #1
   23a78:	bne	23af4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x148>
   23a7c:	ldr	r0, [r4, #8]
   23a80:	ldr	r1, [r0, #16]
   23a84:	bl	10904 <myhtml_token_attr_create@plt>
   23a88:	cmp	r0, #0
   23a8c:	str	r0, [r4, #56]	; 0x38
   23a90:	beq	23a34 <myhtml_tokenizer_state_after_attribute_name@@Base+0x88>
   23a94:	ldr	r3, [r6, #40]	; 0x28
   23a98:	ldr	r2, [r4, #192]	; 0xc0
   23a9c:	cmp	r3, #0
   23aa0:	streq	r0, [r6, #40]	; 0x28
   23aa4:	ldrne	r3, [r6, #44]	; 0x2c
   23aa8:	streq	r0, [r6, #44]	; 0x2c
   23aac:	streq	r0, [r4, #56]	; 0x38
   23ab0:	strne	r0, [r3]
   23ab4:	streq	r3, [r0]
   23ab8:	strne	r3, [r0, #4]
   23abc:	streq	r3, [r0, #4]
   23ac0:	strne	r0, [r6, #44]	; 0x2c
   23ac4:	strne	r7, [r0]
   23ac8:	strne	r0, [r4, #56]	; 0x38
   23acc:	ldr	r3, [r4, #56]	; 0x38
   23ad0:	add	r2, r2, r5
   23ad4:	str	r2, [r3, #48]	; 0x30
   23ad8:	mov	r2, #0
   23adc:	str	r2, [r3, #52]	; 0x34
   23ae0:	str	r2, [r3, #56]	; 0x38
   23ae4:	str	r2, [r3, #60]	; 0x3c
   23ae8:	mov	r3, #34	; 0x22
   23aec:	str	r3, [r4, #160]	; 0xa0
   23af0:	b	239e8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   23af4:	sub	r3, r3, #9
   23af8:	uxtb	r3, r3
   23afc:	cmp	r3, #23
   23b00:	bhi	23b10 <myhtml_tokenizer_state_after_attribute_name@@Base+0x164>
   23b04:	mvn	r3, lr, lsr r3
   23b08:	tst	r3, #1
   23b0c:	beq	23b80 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1d4>
   23b10:	ldr	r0, [r4, #8]
   23b14:	ldr	r1, [r0, #16]
   23b18:	bl	10904 <myhtml_token_attr_create@plt>
   23b1c:	cmp	r0, #0
   23b20:	str	r0, [r4, #56]	; 0x38
   23b24:	beq	23a34 <myhtml_tokenizer_state_after_attribute_name@@Base+0x88>
   23b28:	ldr	r3, [r6, #40]	; 0x28
   23b2c:	cmp	r3, #0
   23b30:	streq	r0, [r6, #40]	; 0x28
   23b34:	ldrne	r3, [r6, #44]	; 0x2c
   23b38:	streq	r0, [r6, #44]	; 0x2c
   23b3c:	streq	r0, [r4, #56]	; 0x38
   23b40:	strne	r0, [r3]
   23b44:	strne	r3, [r0, #4]
   23b48:	movne	r3, #0
   23b4c:	strne	r0, [r6, #44]	; 0x2c
   23b50:	streq	r3, [r0]
   23b54:	strne	r3, [r0]
   23b58:	streq	r3, [r0, #4]
   23b5c:	ldr	r3, [r4, #192]	; 0xc0
   23b60:	strne	r0, [r4, #56]	; 0x38
   23b64:	add	r3, r3, r5
   23b68:	str	r3, [r0, #48]	; 0x30
   23b6c:	mov	r3, #0
   23b70:	str	r3, [r0, #52]	; 0x34
   23b74:	str	r3, [r0, #56]	; 0x38
   23b78:	str	r3, [r0, #60]	; 0x3c
   23b7c:	b	23ae8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x13c>
   23b80:	add	r5, r5, #1
   23b84:	b	239c8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1c>
   23b88:	streq	r0, [r0], #-33	; 0xffffffdf
   23b8c:	addeq	r0, r0, fp, lsl r0

00023b90 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   23b90:	push	{r4, r5, r6, lr}
   23b94:	mov	r5, r0
   23b98:	ldr	ip, [pc, #232]	; 23c88 <myhtml_tokenizer_state_before_attribute_value@@Base+0xf8>
   23b9c:	ldr	r0, [sp, #16]
   23ba0:	mov	r6, r1
   23ba4:	mov	r4, r3
   23ba8:	cmp	r4, r0
   23bac:	bcs	23c04 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   23bb0:	ldrb	r1, [r2, r4]
   23bb4:	cmp	r1, #62	; 0x3e
   23bb8:	bne	23c28 <myhtml_tokenizer_state_before_attribute_value@@Base+0x98>
   23bbc:	mov	r1, r6
   23bc0:	mov	r0, r5
   23bc4:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   23bc8:	ldr	r3, [r5, #192]	; 0xc0
   23bcc:	ldr	r2, [r6, #32]
   23bd0:	add	r4, r4, #1
   23bd4:	sub	r3, r3, r2
   23bd8:	add	r3, r3, r4
   23bdc:	str	r3, [r6, #36]	; 0x24
   23be0:	mov	r2, r6
   23be4:	mov	r1, r4
   23be8:	mov	r0, r5
   23bec:	bl	10028 <myhtml_queue_add@plt>
   23bf0:	cmp	r0, #0
   23bf4:	beq	23c0c <myhtml_tokenizer_state_before_attribute_value@@Base+0x7c>
   23bf8:	mov	r4, #0
   23bfc:	mov	r3, #69	; 0x45
   23c00:	str	r3, [r5, #160]	; 0xa0
   23c04:	mov	r0, r4
   23c08:	pop	{r4, r5, r6, pc}
   23c0c:	ldr	r0, [r5, #8]
   23c10:	ldr	r1, [r0, #16]
   23c14:	bl	10904 <myhtml_token_attr_create@plt>
   23c18:	cmp	r0, #0
   23c1c:	str	r0, [r5, #56]	; 0x38
   23c20:	bne	23c04 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   23c24:	b	23bf8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x68>
   23c28:	sub	r3, r1, #9
   23c2c:	uxtb	r3, r3
   23c30:	cmp	r3, #23
   23c34:	bhi	23c58 <myhtml_tokenizer_state_before_attribute_value@@Base+0xc8>
   23c38:	mvn	r3, ip, lsr r3
   23c3c:	tst	r3, #1
   23c40:	beq	23c80 <myhtml_tokenizer_state_before_attribute_value@@Base+0xf0>
   23c44:	cmp	r1, #39	; 0x27
   23c48:	addeq	r4, r4, #1
   23c4c:	moveq	r3, #38	; 0x26
   23c50:	movne	r3, #39	; 0x27
   23c54:	b	23c68 <myhtml_tokenizer_state_before_attribute_value@@Base+0xd8>
   23c58:	cmp	r1, #34	; 0x22
   23c5c:	addeq	r4, r4, #1
   23c60:	moveq	r3, #37	; 0x25
   23c64:	bne	23c44 <myhtml_tokenizer_state_before_attribute_value@@Base+0xb4>
   23c68:	str	r3, [r5, #160]	; 0xa0
   23c6c:	ldr	r2, [r5, #56]	; 0x38
   23c70:	ldr	r3, [r5, #192]	; 0xc0
   23c74:	add	r3, r3, r4
   23c78:	str	r3, [r2, #56]	; 0x38
   23c7c:	b	23c04 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   23c80:	add	r4, r4, #1
   23c84:	b	23ba8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x18>
   23c88:	addeq	r0, r0, fp, lsl r0

00023c8c <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   23c8c:	push	{r4, r5, r6, lr}
   23c90:	mov	r5, r0
   23c94:	ldr	ip, [pc, #256]	; 23d9c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x110>
   23c98:	ldr	r0, [sp, #16]
   23c9c:	mov	r6, r1
   23ca0:	mov	r4, r3
   23ca4:	cmp	r4, r0
   23ca8:	bcs	23d14 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x88>
   23cac:	ldrb	r1, [r2, r4]
   23cb0:	sub	r3, r1, #9
   23cb4:	uxtb	r3, r3
   23cb8:	cmp	r3, #23
   23cbc:	bhi	23d24 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x98>
   23cc0:	mvn	r3, ip, lsr r3
   23cc4:	tst	r3, #1
   23cc8:	bne	23d1c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x90>
   23ccc:	ldr	r2, [r5, #56]	; 0x38
   23cd0:	mov	r3, #33	; 0x21
   23cd4:	str	r3, [r5, #160]	; 0xa0
   23cd8:	ldr	r1, [r2, #56]	; 0x38
   23cdc:	ldr	r3, [r5, #192]	; 0xc0
   23ce0:	ldr	r0, [r5, #8]
   23ce4:	sub	r3, r3, r1
   23ce8:	add	r3, r3, r4
   23cec:	str	r3, [r2, #60]	; 0x3c
   23cf0:	ldr	r1, [r0, #16]
   23cf4:	bl	10904 <myhtml_token_attr_create@plt>
   23cf8:	cmp	r0, #0
   23cfc:	str	r0, [r5, #56]	; 0x38
   23d00:	addne	r4, r4, #1
   23d04:	bne	23d14 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x88>
   23d08:	mov	r4, #0
   23d0c:	mov	r3, #69	; 0x45
   23d10:	str	r3, [r5, #160]	; 0xa0
   23d14:	mov	r0, r4
   23d18:	pop	{r4, r5, r6, pc}
   23d1c:	add	r4, r4, #1
   23d20:	b	23ca4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x18>
   23d24:	cmp	r1, #62	; 0x3e
   23d28:	bne	23d1c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x90>
   23d2c:	ldr	r2, [r5, #56]	; 0x38
   23d30:	ldr	r3, [r5, #192]	; 0xc0
   23d34:	mov	r0, r5
   23d38:	ldr	r1, [r2, #56]	; 0x38
   23d3c:	sub	r3, r3, r1
   23d40:	add	r3, r3, r4
   23d44:	str	r3, [r2, #60]	; 0x3c
   23d48:	mov	r1, r6
   23d4c:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   23d50:	ldr	r3, [r5, #192]	; 0xc0
   23d54:	ldr	r2, [r6, #32]
   23d58:	add	r4, r4, #1
   23d5c:	sub	r3, r3, r2
   23d60:	add	r3, r3, r4
   23d64:	str	r3, [r6, #36]	; 0x24
   23d68:	mov	r2, r6
   23d6c:	mov	r1, r4
   23d70:	mov	r0, r5
   23d74:	bl	10028 <myhtml_queue_add@plt>
   23d78:	cmp	r0, #0
   23d7c:	bne	23d08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x7c>
   23d80:	ldr	r0, [r5, #8]
   23d84:	ldr	r1, [r0, #16]
   23d88:	bl	10904 <myhtml_token_attr_create@plt>
   23d8c:	cmp	r0, #0
   23d90:	str	r0, [r5, #56]	; 0x38
   23d94:	bne	23d14 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x88>
   23d98:	b	23d08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x7c>
   23d9c:	addeq	r0, r0, fp, lsl r0

00023da0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   23da0:	push	{r4, r5, r6, lr}
   23da4:	mov	r6, r1
   23da8:	ldrb	r1, [r2, r3]
   23dac:	mov	r4, r3
   23db0:	mov	r5, r0
   23db4:	sub	r3, r1, #9
   23db8:	uxtb	r2, r3
   23dbc:	cmp	r2, #23
   23dc0:	movhi	r3, #1
   23dc4:	ldrls	r3, [pc, #124]	; 23e48 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa8>
   23dc8:	mvnls	r3, r3, lsr r2
   23dcc:	tst	r3, #1
   23dd0:	moveq	r3, #33	; 0x21
   23dd4:	beq	23de4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x44>
   23dd8:	cmp	r1, #47	; 0x2f
   23ddc:	bne	23df4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x54>
   23de0:	mov	r3, #42	; 0x2a
   23de4:	add	r4, r4, #1
   23de8:	str	r3, [r5, #160]	; 0xa0
   23dec:	mov	r0, r4
   23df0:	pop	{r4, r5, r6, pc}
   23df4:	cmp	r1, #62	; 0x3e
   23df8:	movne	r3, #33	; 0x21
   23dfc:	strne	r3, [r0, #160]	; 0xa0
   23e00:	bne	23dec <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   23e04:	mov	r1, r6
   23e08:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   23e0c:	ldr	r3, [r5, #192]	; 0xc0
   23e10:	ldr	r2, [r6, #32]
   23e14:	add	r4, r4, #1
   23e18:	sub	r3, r3, r2
   23e1c:	add	r3, r3, r4
   23e20:	str	r3, [r6, #36]	; 0x24
   23e24:	mov	r1, r4
   23e28:	mov	r2, r6
   23e2c:	mov	r0, r5
   23e30:	bl	10028 <myhtml_queue_add@plt>
   23e34:	cmp	r0, #0
   23e38:	movne	r3, #69	; 0x45
   23e3c:	strne	r3, [r5, #160]	; 0xa0
   23e40:	movne	r4, #0
   23e44:	b	23dec <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   23e48:	addeq	r0, r0, fp, lsl r0

00023e4c <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   23e4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23e50:	mov	r6, r3
   23e54:	ldr	ip, [r1, #24]
   23e58:	ldr	r3, [r0, #192]	; 0xc0
   23e5c:	mov	r5, r0
   23e60:	sub	r3, r3, ip
   23e64:	ldr	ip, [r6]
   23e68:	mov	r4, r1
   23e6c:	add	r3, r3, ip
   23e70:	str	r3, [r1, #28]
   23e74:	ldr	r3, [r6]
   23e78:	ldr	r9, [sp, #32]
   23e7c:	bl	10c40 <myhtml_check_tag_parser@plt>
   23e80:	ldr	r2, [r4]
   23e84:	ldr	r3, [r5, #60]	; 0x3c
   23e88:	cmp	r2, r3
   23e8c:	beq	23eb4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x68>
   23e90:	mov	r0, #0
   23e94:	mov	r3, #2
   23e98:	str	r9, [r4, #24]
   23e9c:	str	r0, [r4, #28]
   23ea0:	str	r3, [r5, #160]	; 0xa0
   23ea4:	ldr	r3, [r6]
   23ea8:	add	r3, r3, #1
   23eac:	str	r3, [r6]
   23eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23eb4:	ldr	r7, [r4, #24]
   23eb8:	sub	r3, r7, #2
   23ebc:	cmp	r9, r3
   23ec0:	bcs	23f2c <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xe0>
   23ec4:	mvn	r3, #1
   23ec8:	sub	r3, r3, r9
   23ecc:	add	r3, r3, r7
   23ed0:	ldr	r2, [r4, #48]	; 0x30
   23ed4:	str	r3, [r4, #28]
   23ed8:	str	r3, [r4, #36]	; 0x24
   23edc:	ldr	r3, [sp, #36]	; 0x24
   23ee0:	ldr	r8, [r4, #32]
   23ee4:	orr	r3, r3, r2
   23ee8:	str	r3, [r4, #48]	; 0x30
   23eec:	ldr	r2, [r4, #48]	; 0x30
   23ef0:	ldr	r3, [r4, #48]	; 0x30
   23ef4:	and	r2, r2, #8
   23ef8:	eor	r2, r2, r3
   23efc:	mov	r3, #1
   23f00:	str	r9, [r4, #24]
   23f04:	str	r9, [r4, #32]
   23f08:	str	r2, [r4, #48]	; 0x30
   23f0c:	str	r3, [r4]
   23f10:	mov	r2, r4
   23f14:	ldr	r1, [r6]
   23f18:	mov	r0, r5
   23f1c:	bl	10028 <myhtml_queue_add@plt>
   23f20:	ldr	r4, [r5, #64]	; 0x40
   23f24:	str	r8, [r4, #32]
   23f28:	str	r7, [r4, #24]
   23f2c:	ldr	r3, [r5, #60]	; 0x3c
   23f30:	ldr	r2, [r5, #192]	; 0xc0
   23f34:	str	r3, [r4]
   23f38:	ldr	r3, [r4, #48]	; 0x30
   23f3c:	mov	r0, #1
   23f40:	orr	r3, r3, #1
   23f44:	str	r3, [r4, #48]	; 0x30
   23f48:	ldr	r3, [r6]
   23f4c:	sub	r3, r3, r7
   23f50:	add	r3, r3, r2
   23f54:	str	r3, [r4, #28]
   23f58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00023f5c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   23f5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   23f60:	sub	sp, sp, #20
   23f64:	mov	r5, r1
   23f68:	ldr	r6, [r1, #24]
   23f6c:	ldr	r8, [pc, #332]	; 240c0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x164>
   23f70:	ldr	r1, [r0, #192]	; 0xc0
   23f74:	ldr	r7, [sp, #48]	; 0x30
   23f78:	add	r1, r1, r3
   23f7c:	mov	r4, r0
   23f80:	str	r3, [sp, #12]
   23f84:	mov	r0, #0
   23f88:	add	r3, r2, r3
   23f8c:	add	r8, pc, r8
   23f90:	mov	r9, #1
   23f94:	str	r1, [r5, #24]
   23f98:	sub	r1, r3, r2
   23f9c:	cmp	r7, r1
   23fa0:	bhi	23fb0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x54>
   23fa4:	cmp	r0, #0
   23fa8:	strne	r1, [sp, #12]
   23fac:	b	240ac <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   23fb0:	ldrb	ip, [r3], #1
   23fb4:	ldrb	lr, [r8, ip]
   23fb8:	cmp	lr, #2
   23fbc:	bne	24008 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xac>
   23fc0:	cmp	r0, #0
   23fc4:	mov	r3, #16
   23fc8:	strne	r1, [sp, #12]
   23fcc:	str	r3, [sp, #4]
   23fd0:	str	r6, [sp]
   23fd4:	add	r3, sp, #12
   23fd8:	mov	r1, r5
   23fdc:	mov	r0, r4
   23fe0:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   23fe4:	cmp	r0, #0
   23fe8:	beq	240ac <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   23fec:	mov	r3, #33	; 0x21
   23ff0:	ldr	r0, [sp, #12]
   23ff4:	str	r3, [r4, #160]	; 0xa0
   23ff8:	mov	r3, #0
   23ffc:	str	r3, [r4, #60]	; 0x3c
   24000:	add	r0, r0, #1
   24004:	b	24084 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x128>
   24008:	cmp	ip, #62	; 0x3e
   2400c:	bne	2408c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x130>
   24010:	cmp	r0, #0
   24014:	mov	r3, #16
   24018:	strne	r1, [sp, #12]
   2401c:	str	r3, [sp, #4]
   24020:	str	r6, [sp]
   24024:	add	r3, sp, #12
   24028:	mov	r1, r5
   2402c:	mov	r0, r4
   24030:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   24034:	cmp	r0, #0
   24038:	beq	240ac <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   2403c:	ldr	r2, [r4, #64]	; 0x40
   24040:	ldr	r1, [sp, #12]
   24044:	ldr	r3, [r4, #192]	; 0xc0
   24048:	add	r1, r1, #1
   2404c:	ldr	r0, [r2, #32]
   24050:	add	r3, r1, r3
   24054:	sub	r3, r3, r0
   24058:	str	r3, [r2, #36]	; 0x24
   2405c:	mov	r0, r4
   24060:	str	r1, [sp, #12]
   24064:	bl	10028 <myhtml_queue_add@plt>
   24068:	cmp	r0, #0
   2406c:	movne	r3, #69	; 0x45
   24070:	strne	r3, [r4, #160]	; 0xa0
   24074:	movne	r0, #0
   24078:	streq	r0, [r4, #60]	; 0x3c
   2407c:	streq	r0, [r4, #160]	; 0xa0
   24080:	beq	240b0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x154>
   24084:	add	sp, sp, #20
   24088:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2408c:	cmp	ip, #47	; 0x2f
   24090:	beq	23fc0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x64>
   24094:	cmp	lr, #1
   24098:	beq	240b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x15c>
   2409c:	cmp	r0, #0
   240a0:	mov	r3, #2
   240a4:	strne	r1, [sp, #12]
   240a8:	str	r3, [r4, #160]	; 0xa0
   240ac:	str	r6, [r5, #24]
   240b0:	ldr	r0, [sp, #12]
   240b4:	b	24084 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x128>
   240b8:	mov	r0, r9
   240bc:	b	23f98 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x3c>
   240c0:	ldrdeq	r3, [sp], -r0

000240c4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   240c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   240c8:	sub	sp, sp, #20
   240cc:	mov	r4, r0
   240d0:	ldr	r8, [pc, #308]	; 2420c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x148>
   240d4:	ldr	r0, [r0, #192]	; 0xc0
   240d8:	ldr	r7, [sp, #48]	; 0x30
   240dc:	add	r0, r0, r3
   240e0:	str	r3, [sp, #12]
   240e4:	mov	lr, #0
   240e8:	add	r3, r2, r3
   240ec:	add	r8, pc, r8
   240f0:	mov	r9, #1
   240f4:	ldr	ip, [r1, #24]
   240f8:	str	r0, [r1, #24]
   240fc:	sub	r0, r3, r2
   24100:	cmp	r7, r0
   24104:	strls	ip, [r1, #24]
   24108:	bls	241e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x11c>
   2410c:	ldrb	r5, [r3], #1
   24110:	ldrb	r6, [r8, r5]
   24114:	cmp	r6, #2
   24118:	bne	24168 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xa4>
   2411c:	cmp	lr, #0
   24120:	mov	r3, #32
   24124:	strne	r0, [sp, #12]
   24128:	str	r3, [sp, #4]
   2412c:	str	ip, [sp]
   24130:	add	r3, sp, #12
   24134:	mov	r0, r4
   24138:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2413c:	cmp	r0, #0
   24140:	beq	24160 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x9c>
   24144:	mov	r3, #33	; 0x21
   24148:	str	r3, [r4, #160]	; 0xa0
   2414c:	mov	r3, #0
   24150:	str	r3, [r4, #60]	; 0x3c
   24154:	ldr	r3, [sp, #12]
   24158:	add	r3, r3, #1
   2415c:	str	r3, [sp, #12]
   24160:	ldr	r0, [sp, #12]
   24164:	b	241e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x11c>
   24168:	cmp	r5, #62	; 0x3e
   2416c:	bne	241e8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x124>
   24170:	cmp	lr, #0
   24174:	mov	r3, #32
   24178:	strne	r0, [sp, #12]
   2417c:	str	r3, [sp, #4]
   24180:	str	ip, [sp]
   24184:	add	r3, sp, #12
   24188:	mov	r0, r4
   2418c:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   24190:	cmp	r0, #0
   24194:	beq	24160 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x9c>
   24198:	ldr	r2, [r4, #64]	; 0x40
   2419c:	ldr	r1, [sp, #12]
   241a0:	ldr	r3, [r4, #192]	; 0xc0
   241a4:	add	r1, r1, #1
   241a8:	ldr	r0, [r2, #32]
   241ac:	add	r3, r1, r3
   241b0:	sub	r3, r3, r0
   241b4:	str	r3, [r2, #36]	; 0x24
   241b8:	mov	r0, r4
   241bc:	str	r1, [sp, #12]
   241c0:	bl	10028 <myhtml_queue_add@plt>
   241c4:	cmp	r0, #0
   241c8:	movne	r3, #69	; 0x45
   241cc:	strne	r3, [r4, #160]	; 0xa0
   241d0:	movne	r0, #0
   241d4:	streq	r0, [r4, #60]	; 0x3c
   241d8:	streq	r0, [r4, #160]	; 0xa0
   241dc:	beq	24160 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x9c>
   241e0:	add	sp, sp, #20
   241e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   241e8:	cmp	r5, #47	; 0x2f
   241ec:	beq	2411c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x58>
   241f0:	cmp	r6, #1
   241f4:	mov	lr, r9
   241f8:	beq	240fc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x38>
   241fc:	mov	r3, #4
   24200:	str	ip, [r1, #24]
   24204:	str	r3, [r4, #160]	; 0xa0
   24208:	b	241e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x11c>
   2420c:	andeq	r3, sp, r0, ror fp

00024210 <myhtml_tokenizer_state_init@@Base>:
   24210:	push	{r4, r5, r6, lr}
   24214:	mov	r5, r0
   24218:	ldr	r0, [pc, #1548]	; 2482c <myhtml_tokenizer_state_init@@Base+0x61c>
   2421c:	bl	10c94 <mycore_malloc@plt>
   24220:	ldr	r4, [pc, #1544]	; 24830 <myhtml_tokenizer_state_init@@Base+0x620>
   24224:	add	r4, pc, r4
   24228:	cmp	r0, #0
   2422c:	str	r0, [r5, #24]
   24230:	beq	24824 <myhtml_tokenizer_state_init@@Base+0x614>
   24234:	ldr	r3, [pc, #1528]	; 24834 <myhtml_tokenizer_state_init@@Base+0x624>
   24238:	ldr	r3, [r4, r3]
   2423c:	str	r3, [r0]
   24240:	ldr	r3, [pc, #1520]	; 24838 <myhtml_tokenizer_state_init@@Base+0x628>
   24244:	ldr	r3, [r4, r3]
   24248:	str	r3, [r0, #28]
   2424c:	ldr	r3, [pc, #1512]	; 2483c <myhtml_tokenizer_state_init@@Base+0x62c>
   24250:	ldr	r3, [r4, r3]
   24254:	str	r3, [r0, #36]	; 0x24
   24258:	ldr	r3, [pc, #1504]	; 24840 <myhtml_tokenizer_state_init@@Base+0x630>
   2425c:	ldr	r3, [r4, r3]
   24260:	str	r3, [r0, #32]
   24264:	ldr	r3, [pc, #1496]	; 24844 <myhtml_tokenizer_state_init@@Base+0x634>
   24268:	ldr	r3, [r4, r3]
   2426c:	str	r3, [r0, #168]	; 0xa8
   24270:	ldr	r3, [pc, #1488]	; 24848 <myhtml_tokenizer_state_init@@Base+0x638>
   24274:	ldr	r3, [r4, r3]
   24278:	str	r3, [r0, #176]	; 0xb0
   2427c:	ldr	r3, [pc, #1480]	; 2484c <myhtml_tokenizer_state_init@@Base+0x63c>
   24280:	ldr	r3, [r4, r3]
   24284:	str	r3, [r0, #132]	; 0x84
   24288:	ldr	r3, [pc, #1472]	; 24850 <myhtml_tokenizer_state_init@@Base+0x640>
   2428c:	ldr	r3, [r4, r3]
   24290:	str	r3, [r0, #136]	; 0x88
   24294:	ldr	r3, [pc, #1464]	; 24854 <myhtml_tokenizer_state_init@@Base+0x644>
   24298:	ldr	r3, [r4, r3]
   2429c:	str	r3, [r0, #140]	; 0x8c
   242a0:	ldr	r3, [pc, #1456]	; 24858 <myhtml_tokenizer_state_init@@Base+0x648>
   242a4:	ldr	r3, [r4, r3]
   242a8:	str	r3, [r0, #144]	; 0x90
   242ac:	ldr	r3, [pc, #1448]	; 2485c <myhtml_tokenizer_state_init@@Base+0x64c>
   242b0:	ldr	r3, [r4, r3]
   242b4:	str	r3, [r0, #164]	; 0xa4
   242b8:	ldr	r3, [pc, #1440]	; 24860 <myhtml_tokenizer_state_init@@Base+0x650>
   242bc:	ldr	r3, [r4, r3]
   242c0:	str	r3, [r0, #148]	; 0x94
   242c4:	ldr	r3, [pc, #1432]	; 24864 <myhtml_tokenizer_state_init@@Base+0x654>
   242c8:	ldr	r3, [r4, r3]
   242cc:	str	r3, [r0, #152]	; 0x98
   242d0:	ldr	r3, [pc, #1424]	; 24868 <myhtml_tokenizer_state_init@@Base+0x658>
   242d4:	ldr	r3, [r4, r3]
   242d8:	str	r3, [r0, #156]	; 0x9c
   242dc:	ldr	r3, [pc, #1416]	; 2486c <myhtml_tokenizer_state_init@@Base+0x65c>
   242e0:	ldr	r3, [r4, r3]
   242e4:	str	r3, [r0, #180]	; 0xb4
   242e8:	ldr	r3, [pc, #1408]	; 24870 <myhtml_tokenizer_state_init@@Base+0x660>
   242ec:	ldr	r3, [r4, r3]
   242f0:	str	r3, [r0, #184]	; 0xb8
   242f4:	ldr	r3, [pc, #1400]	; 24874 <myhtml_tokenizer_state_init@@Base+0x664>
   242f8:	ldr	r3, [r4, r3]
   242fc:	str	r3, [r0, #188]	; 0xbc
   24300:	ldr	r3, [pc, #1392]	; 24878 <myhtml_tokenizer_state_init@@Base+0x668>
   24304:	ldr	r3, [r4, r3]
   24308:	str	r3, [r0, #196]	; 0xc4
   2430c:	ldr	r3, [pc, #1384]	; 2487c <myhtml_tokenizer_state_init@@Base+0x66c>
   24310:	ldr	r3, [r4, r3]
   24314:	str	r3, [r0, #192]	; 0xc0
   24318:	ldr	r3, [pc, #1376]	; 24880 <myhtml_tokenizer_state_init@@Base+0x670>
   2431c:	ldr	r3, [r4, r3]
   24320:	str	r3, [r0, #200]	; 0xc8
   24324:	ldr	r3, [pc, #1368]	; 24884 <myhtml_tokenizer_state_init@@Base+0x674>
   24328:	ldr	r3, [r4, r3]
   2432c:	str	r3, [r0, #172]	; 0xac
   24330:	ldr	r3, [pc, #1360]	; 24888 <myhtml_tokenizer_state_init@@Base+0x678>
   24334:	ldr	r3, [r4, r3]
   24338:	str	r3, [r0, #268]	; 0x10c
   2433c:	ldr	r3, [pc, #1352]	; 2488c <myhtml_tokenizer_state_init@@Base+0x67c>
   24340:	ldr	r3, [r4, r3]
   24344:	str	r3, [r0, #8]
   24348:	ldr	r3, [pc, #1344]	; 24890 <myhtml_tokenizer_state_init@@Base+0x680>
   2434c:	ldr	r3, [r4, r3]
   24350:	str	r3, [r0, #40]	; 0x28
   24354:	ldr	r3, [pc, #1336]	; 24894 <myhtml_tokenizer_state_init@@Base+0x684>
   24358:	ldr	r3, [r4, r3]
   2435c:	str	r3, [r0, #44]	; 0x2c
   24360:	ldr	r3, [pc, #1328]	; 24898 <myhtml_tokenizer_state_init@@Base+0x688>
   24364:	ldr	r3, [r4, r3]
   24368:	str	r3, [r0, #48]	; 0x30
   2436c:	ldr	r3, [pc, #1320]	; 2489c <myhtml_tokenizer_state_init@@Base+0x68c>
   24370:	ldr	r3, [r4, r3]
   24374:	str	r3, [r0, #16]
   24378:	ldr	r3, [pc, #1312]	; 248a0 <myhtml_tokenizer_state_init@@Base+0x690>
   2437c:	ldr	r3, [r4, r3]
   24380:	str	r3, [r0, #52]	; 0x34
   24384:	ldr	r3, [pc, #1304]	; 248a4 <myhtml_tokenizer_state_init@@Base+0x694>
   24388:	ldr	r3, [r4, r3]
   2438c:	str	r3, [r0, #56]	; 0x38
   24390:	ldr	r3, [pc, #1296]	; 248a8 <myhtml_tokenizer_state_init@@Base+0x698>
   24394:	ldr	r3, [r4, r3]
   24398:	str	r3, [r0, #60]	; 0x3c
   2439c:	ldr	r3, [pc, #1288]	; 248ac <myhtml_tokenizer_state_init@@Base+0x69c>
   243a0:	ldr	r3, [r4, r3]
   243a4:	str	r3, [r0, #24]
   243a8:	ldr	r3, [pc, #1280]	; 248b0 <myhtml_tokenizer_state_init@@Base+0x6a0>
   243ac:	ldr	r3, [r4, r3]
   243b0:	str	r3, [r0, #204]	; 0xcc
   243b4:	ldr	r3, [pc, #1272]	; 248b4 <myhtml_tokenizer_state_init@@Base+0x6a4>
   243b8:	ldr	r3, [r4, r3]
   243bc:	str	r3, [r0, #208]	; 0xd0
   243c0:	ldr	r3, [pc, #1264]	; 248b8 <myhtml_tokenizer_state_init@@Base+0x6a8>
   243c4:	ldr	r3, [r4, r3]
   243c8:	str	r3, [r0, #212]	; 0xd4
   243cc:	ldr	r3, [pc, #1256]	; 248bc <myhtml_tokenizer_state_init@@Base+0x6ac>
   243d0:	ldr	r3, [r4, r3]
   243d4:	str	r3, [r0, #216]	; 0xd8
   243d8:	ldr	r3, [pc, #1248]	; 248c0 <myhtml_tokenizer_state_init@@Base+0x6b0>
   243dc:	ldr	r3, [r4, r3]
   243e0:	str	r3, [r0, #272]	; 0x110
   243e4:	ldr	r3, [pc, #1240]	; 248c4 <myhtml_tokenizer_state_init@@Base+0x6b4>
   243e8:	ldr	r3, [r4, r3]
   243ec:	str	r3, [r0, #224]	; 0xe0
   243f0:	ldr	r3, [pc, #1232]	; 248c8 <myhtml_tokenizer_state_init@@Base+0x6b8>
   243f4:	ldr	r3, [r4, r3]
   243f8:	str	r3, [r0, #228]	; 0xe4
   243fc:	ldr	r3, [pc, #1224]	; 248cc <myhtml_tokenizer_state_init@@Base+0x6bc>
   24400:	ldr	r3, [r4, r3]
   24404:	str	r3, [r0, #232]	; 0xe8
   24408:	ldr	r3, [pc, #1216]	; 248d0 <myhtml_tokenizer_state_init@@Base+0x6c0>
   2440c:	ldr	r3, [r4, r3]
   24410:	str	r3, [r0, #236]	; 0xec
   24414:	ldr	r3, [pc, #1208]	; 248d4 <myhtml_tokenizer_state_init@@Base+0x6c4>
   24418:	ldr	r3, [r4, r3]
   2441c:	str	r3, [r0, #252]	; 0xfc
   24420:	ldr	r3, [pc, #1200]	; 248d8 <myhtml_tokenizer_state_init@@Base+0x6c8>
   24424:	ldr	r3, [r4, r3]
   24428:	str	r3, [r0, #256]	; 0x100
   2442c:	ldr	r3, [pc, #1192]	; 248dc <myhtml_tokenizer_state_init@@Base+0x6cc>
   24430:	ldr	r3, [r4, r3]
   24434:	str	r3, [r0, #260]	; 0x104
   24438:	ldr	r3, [pc, #1184]	; 248e0 <myhtml_tokenizer_state_init@@Base+0x6d0>
   2443c:	ldr	r3, [r4, r3]
   24440:	str	r3, [r0, #264]	; 0x108
   24444:	ldr	r3, [pc, #1176]	; 248e4 <myhtml_tokenizer_state_init@@Base+0x6d4>
   24448:	ldr	r3, [r4, r3]
   2444c:	str	r3, [r0, #20]
   24450:	ldr	r3, [pc, #1168]	; 248e8 <myhtml_tokenizer_state_init@@Base+0x6d8>
   24454:	ldr	r3, [r4, r3]
   24458:	str	r3, [r0, #64]	; 0x40
   2445c:	ldr	r3, [pc, #1160]	; 248ec <myhtml_tokenizer_state_init@@Base+0x6dc>
   24460:	ldr	r3, [r4, r3]
   24464:	str	r3, [r0, #68]	; 0x44
   24468:	ldr	r3, [pc, #1152]	; 248f0 <myhtml_tokenizer_state_init@@Base+0x6e0>
   2446c:	ldr	r3, [r4, r3]
   24470:	str	r3, [r0, #72]	; 0x48
   24474:	ldr	r3, [pc, #1144]	; 248f4 <myhtml_tokenizer_state_init@@Base+0x6e4>
   24478:	ldr	r3, [r4, r3]
   2447c:	str	r3, [r0, #76]	; 0x4c
   24480:	ldr	r3, [pc, #1136]	; 248f8 <myhtml_tokenizer_state_init@@Base+0x6e8>
   24484:	ldr	r3, [r4, r3]
   24488:	str	r3, [r0, #80]	; 0x50
   2448c:	ldr	r3, [pc, #1128]	; 248fc <myhtml_tokenizer_state_init@@Base+0x6ec>
   24490:	ldr	r3, [r4, r3]
   24494:	str	r3, [r0, #84]	; 0x54
   24498:	ldr	r3, [pc, #1120]	; 24900 <myhtml_tokenizer_state_init@@Base+0x6f0>
   2449c:	ldr	r3, [r4, r3]
   244a0:	str	r3, [r0, #88]	; 0x58
   244a4:	ldr	r3, [pc, #1112]	; 24904 <myhtml_tokenizer_state_init@@Base+0x6f4>
   244a8:	ldr	r3, [r4, r3]
   244ac:	str	r3, [r0, #92]	; 0x5c
   244b0:	ldr	r3, [pc, #1104]	; 24908 <myhtml_tokenizer_state_init@@Base+0x6f8>
   244b4:	ldr	r3, [r4, r3]
   244b8:	str	r3, [r0, #96]	; 0x60
   244bc:	ldr	r3, [pc, #1096]	; 2490c <myhtml_tokenizer_state_init@@Base+0x6fc>
   244c0:	ldr	r3, [r4, r3]
   244c4:	str	r3, [r0, #100]	; 0x64
   244c8:	ldr	r3, [pc, #1088]	; 24910 <myhtml_tokenizer_state_init@@Base+0x700>
   244cc:	ldr	r3, [r4, r3]
   244d0:	str	r3, [r0, #104]	; 0x68
   244d4:	ldr	r3, [pc, #1080]	; 24914 <myhtml_tokenizer_state_init@@Base+0x704>
   244d8:	ldr	r3, [r4, r3]
   244dc:	str	r3, [r0, #108]	; 0x6c
   244e0:	ldr	r3, [pc, #1072]	; 24918 <myhtml_tokenizer_state_init@@Base+0x708>
   244e4:	ldr	r3, [r4, r3]
   244e8:	str	r3, [r0, #112]	; 0x70
   244ec:	ldr	r3, [pc, #1064]	; 2491c <myhtml_tokenizer_state_init@@Base+0x70c>
   244f0:	ldr	r3, [r4, r3]
   244f4:	str	r3, [r0, #116]	; 0x74
   244f8:	ldr	r3, [pc, #1056]	; 24920 <myhtml_tokenizer_state_init@@Base+0x710>
   244fc:	ldr	r3, [r4, r3]
   24500:	str	r3, [r0, #120]	; 0x78
   24504:	ldr	r3, [pc, #1048]	; 24924 <myhtml_tokenizer_state_init@@Base+0x714>
   24508:	ldr	r3, [r4, r3]
   2450c:	str	r3, [r0, #124]	; 0x7c
   24510:	ldr	r3, [pc, #1040]	; 24928 <myhtml_tokenizer_state_init@@Base+0x718>
   24514:	ldr	r3, [r4, r3]
   24518:	str	r3, [r0, #128]	; 0x80
   2451c:	ldr	r3, [pc, #1032]	; 2492c <myhtml_tokenizer_state_init@@Base+0x71c>
   24520:	ldr	r3, [r4, r3]
   24524:	str	r3, [r0, #276]	; 0x114
   24528:	ldr	r3, [pc, #1024]	; 24930 <myhtml_tokenizer_state_init@@Base+0x720>
   2452c:	ldr	r3, [r4, r3]
   24530:	str	r3, [r0, #280]	; 0x118
   24534:	ldr	r3, [pc, #1016]	; 24934 <myhtml_tokenizer_state_init@@Base+0x724>
   24538:	ldr	r3, [r4, r3]
   2453c:	str	r3, [r0, #308]	; 0x134
   24540:	ldr	r3, [pc, #1008]	; 24938 <myhtml_tokenizer_state_init@@Base+0x728>
   24544:	ldr	r3, [r4, r3]
   24548:	str	r3, [r0, #316]	; 0x13c
   2454c:	ldr	r3, [pc, #1000]	; 2493c <myhtml_tokenizer_state_init@@Base+0x72c>
   24550:	ldr	r3, [r4, r3]
   24554:	str	r3, [r0, #312]	; 0x138
   24558:	ldr	r3, [pc, #992]	; 24940 <myhtml_tokenizer_state_init@@Base+0x730>
   2455c:	ldr	r3, [r4, r3]
   24560:	str	r3, [r0, #448]	; 0x1c0
   24564:	ldr	r3, [pc, #984]	; 24944 <myhtml_tokenizer_state_init@@Base+0x734>
   24568:	ldr	r3, [r4, r3]
   2456c:	str	r3, [r0, #456]	; 0x1c8
   24570:	ldr	r3, [pc, #976]	; 24948 <myhtml_tokenizer_state_init@@Base+0x738>
   24574:	ldr	r3, [r4, r3]
   24578:	str	r3, [r0, #412]	; 0x19c
   2457c:	ldr	r3, [pc, #968]	; 2494c <myhtml_tokenizer_state_init@@Base+0x73c>
   24580:	ldr	r3, [r4, r3]
   24584:	str	r3, [r0, #416]	; 0x1a0
   24588:	ldr	r3, [pc, #960]	; 24950 <myhtml_tokenizer_state_init@@Base+0x740>
   2458c:	ldr	r3, [r4, r3]
   24590:	str	r3, [r0, #420]	; 0x1a4
   24594:	ldr	r3, [pc, #952]	; 24954 <myhtml_tokenizer_state_init@@Base+0x744>
   24598:	ldr	r3, [r4, r3]
   2459c:	str	r3, [r0, #424]	; 0x1a8
   245a0:	ldr	r3, [pc, #944]	; 24958 <myhtml_tokenizer_state_init@@Base+0x748>
   245a4:	ldr	r3, [r4, r3]
   245a8:	str	r3, [r0, #428]	; 0x1ac
   245ac:	ldr	r3, [pc, #936]	; 2495c <myhtml_tokenizer_state_init@@Base+0x74c>
   245b0:	ldr	r3, [r4, r3]
   245b4:	str	r3, [r0, #432]	; 0x1b0
   245b8:	ldr	r3, [pc, #928]	; 24960 <myhtml_tokenizer_state_init@@Base+0x750>
   245bc:	ldr	r3, [r4, r3]
   245c0:	str	r3, [r0, #436]	; 0x1b4
   245c4:	ldr	r3, [pc, #920]	; 24964 <myhtml_tokenizer_state_init@@Base+0x754>
   245c8:	ldr	r3, [r4, r3]
   245cc:	str	r3, [r0, #444]	; 0x1bc
   245d0:	ldr	r3, [pc, #912]	; 24968 <myhtml_tokenizer_state_init@@Base+0x758>
   245d4:	ldr	r3, [r4, r3]
   245d8:	str	r3, [r0, #460]	; 0x1cc
   245dc:	ldr	r3, [pc, #904]	; 2496c <myhtml_tokenizer_state_init@@Base+0x75c>
   245e0:	ldr	r3, [r4, r3]
   245e4:	str	r3, [r0, #464]	; 0x1d0
   245e8:	ldr	r3, [pc, #896]	; 24970 <myhtml_tokenizer_state_init@@Base+0x760>
   245ec:	ldr	r3, [r4, r3]
   245f0:	str	r3, [r0, #468]	; 0x1d4
   245f4:	ldr	r3, [pc, #888]	; 24974 <myhtml_tokenizer_state_init@@Base+0x764>
   245f8:	ldr	r3, [r4, r3]
   245fc:	str	r3, [r0, #476]	; 0x1dc
   24600:	ldr	r3, [pc, #880]	; 24978 <myhtml_tokenizer_state_init@@Base+0x768>
   24604:	ldr	r3, [r4, r3]
   24608:	str	r3, [r0, #472]	; 0x1d8
   2460c:	ldr	r3, [pc, #872]	; 2497c <myhtml_tokenizer_state_init@@Base+0x76c>
   24610:	ldr	r3, [r4, r3]
   24614:	str	r3, [r0, #480]	; 0x1e0
   24618:	ldr	r3, [pc, #864]	; 24980 <myhtml_tokenizer_state_init@@Base+0x770>
   2461c:	ldr	r3, [r4, r3]
   24620:	str	r3, [r0, #452]	; 0x1c4
   24624:	ldr	r3, [pc, #856]	; 24984 <myhtml_tokenizer_state_init@@Base+0x774>
   24628:	ldr	r3, [r4, r3]
   2462c:	str	r3, [r0, #548]	; 0x224
   24630:	ldr	r3, [pc, #848]	; 24988 <myhtml_tokenizer_state_init@@Base+0x778>
   24634:	ldr	r3, [r4, r3]
   24638:	str	r3, [r0, #288]	; 0x120
   2463c:	ldr	r3, [pc, #840]	; 2498c <myhtml_tokenizer_state_init@@Base+0x77c>
   24640:	ldr	r3, [r4, r3]
   24644:	str	r3, [r0, #320]	; 0x140
   24648:	ldr	r3, [pc, #832]	; 24990 <myhtml_tokenizer_state_init@@Base+0x780>
   2464c:	ldr	r3, [r4, r3]
   24650:	str	r3, [r0, #324]	; 0x144
   24654:	ldr	r3, [pc, #824]	; 24994 <myhtml_tokenizer_state_init@@Base+0x784>
   24658:	ldr	r3, [r4, r3]
   2465c:	str	r3, [r0, #328]	; 0x148
   24660:	ldr	r3, [pc, #816]	; 24998 <myhtml_tokenizer_state_init@@Base+0x788>
   24664:	ldr	r3, [r4, r3]
   24668:	str	r3, [r0, #296]	; 0x128
   2466c:	ldr	r3, [pc, #808]	; 2499c <myhtml_tokenizer_state_init@@Base+0x78c>
   24670:	ldr	r3, [r4, r3]
   24674:	str	r3, [r0, #332]	; 0x14c
   24678:	ldr	r3, [pc, #800]	; 249a0 <myhtml_tokenizer_state_init@@Base+0x790>
   2467c:	ldr	r3, [r4, r3]
   24680:	str	r3, [r0, #336]	; 0x150
   24684:	ldr	r3, [pc, #792]	; 249a4 <myhtml_tokenizer_state_init@@Base+0x794>
   24688:	ldr	r3, [r4, r3]
   2468c:	str	r3, [r0, #340]	; 0x154
   24690:	ldr	r3, [pc, #784]	; 249a8 <myhtml_tokenizer_state_init@@Base+0x798>
   24694:	ldr	r3, [r4, r3]
   24698:	str	r3, [r0, #304]	; 0x130
   2469c:	ldr	r3, [pc, #776]	; 249ac <myhtml_tokenizer_state_init@@Base+0x79c>
   246a0:	ldr	r3, [r4, r3]
   246a4:	str	r3, [r0, #484]	; 0x1e4
   246a8:	ldr	r3, [pc, #768]	; 249b0 <myhtml_tokenizer_state_init@@Base+0x7a0>
   246ac:	ldr	r3, [r4, r3]
   246b0:	str	r3, [r0, #488]	; 0x1e8
   246b4:	ldr	r3, [pc, #760]	; 249b4 <myhtml_tokenizer_state_init@@Base+0x7a4>
   246b8:	ldr	r3, [r4, r3]
   246bc:	str	r3, [r0, #492]	; 0x1ec
   246c0:	ldr	r3, [pc, #752]	; 249b8 <myhtml_tokenizer_state_init@@Base+0x7a8>
   246c4:	ldr	r3, [r4, r3]
   246c8:	str	r3, [r0, #496]	; 0x1f0
   246cc:	ldr	r3, [pc, #744]	; 249bc <myhtml_tokenizer_state_init@@Base+0x7ac>
   246d0:	ldr	r3, [r4, r3]
   246d4:	str	r3, [r0, #552]	; 0x228
   246d8:	ldr	r3, [pc, #736]	; 249c0 <myhtml_tokenizer_state_init@@Base+0x7b0>
   246dc:	ldr	r3, [r4, r3]
   246e0:	str	r3, [r0, #504]	; 0x1f8
   246e4:	ldr	r3, [pc, #728]	; 249c4 <myhtml_tokenizer_state_init@@Base+0x7b4>
   246e8:	ldr	r3, [r4, r3]
   246ec:	str	r3, [r0, #508]	; 0x1fc
   246f0:	ldr	r3, [pc, #720]	; 249c8 <myhtml_tokenizer_state_init@@Base+0x7b8>
   246f4:	ldr	r3, [r4, r3]
   246f8:	str	r3, [r0, #512]	; 0x200
   246fc:	ldr	r3, [pc, #712]	; 249cc <myhtml_tokenizer_state_init@@Base+0x7bc>
   24700:	ldr	r3, [r4, r3]
   24704:	str	r3, [r0, #516]	; 0x204
   24708:	ldr	r3, [pc, #704]	; 249d0 <myhtml_tokenizer_state_init@@Base+0x7c0>
   2470c:	ldr	r3, [r4, r3]
   24710:	str	r3, [r0, #532]	; 0x214
   24714:	ldr	r3, [pc, #696]	; 249d4 <myhtml_tokenizer_state_init@@Base+0x7c4>
   24718:	ldr	r3, [r4, r3]
   2471c:	str	r3, [r0, #536]	; 0x218
   24720:	ldr	r3, [pc, #688]	; 249d8 <myhtml_tokenizer_state_init@@Base+0x7c8>
   24724:	ldr	r3, [r4, r3]
   24728:	str	r3, [r0, #540]	; 0x21c
   2472c:	ldr	r3, [pc, #680]	; 249dc <myhtml_tokenizer_state_init@@Base+0x7cc>
   24730:	ldr	r3, [r4, r3]
   24734:	str	r3, [r0, #544]	; 0x220
   24738:	ldr	r3, [pc, #672]	; 249e0 <myhtml_tokenizer_state_init@@Base+0x7d0>
   2473c:	ldr	r3, [r4, r3]
   24740:	str	r3, [r0, #300]	; 0x12c
   24744:	ldr	r3, [pc, #664]	; 249e4 <myhtml_tokenizer_state_init@@Base+0x7d4>
   24748:	ldr	r3, [r4, r3]
   2474c:	str	r3, [r0, #344]	; 0x158
   24750:	ldr	r3, [pc, #656]	; 249e8 <myhtml_tokenizer_state_init@@Base+0x7d8>
   24754:	ldr	r3, [r4, r3]
   24758:	str	r3, [r0, #348]	; 0x15c
   2475c:	ldr	r3, [pc, #648]	; 249ec <myhtml_tokenizer_state_init@@Base+0x7dc>
   24760:	ldr	r3, [r4, r3]
   24764:	str	r3, [r0, #352]	; 0x160
   24768:	ldr	r3, [pc, #640]	; 249f0 <myhtml_tokenizer_state_init@@Base+0x7e0>
   2476c:	ldr	r3, [r4, r3]
   24770:	str	r3, [r0, #356]	; 0x164
   24774:	ldr	r3, [pc, #632]	; 249f4 <myhtml_tokenizer_state_init@@Base+0x7e4>
   24778:	ldr	r3, [r4, r3]
   2477c:	str	r3, [r0, #360]	; 0x168
   24780:	ldr	r3, [pc, #624]	; 249f8 <myhtml_tokenizer_state_init@@Base+0x7e8>
   24784:	ldr	r3, [r4, r3]
   24788:	str	r3, [r0, #364]	; 0x16c
   2478c:	ldr	r3, [pc, #616]	; 249fc <myhtml_tokenizer_state_init@@Base+0x7ec>
   24790:	ldr	r3, [r4, r3]
   24794:	str	r3, [r0, #368]	; 0x170
   24798:	ldr	r3, [pc, #608]	; 24a00 <myhtml_tokenizer_state_init@@Base+0x7f0>
   2479c:	ldr	r3, [r4, r3]
   247a0:	str	r3, [r0, #372]	; 0x174
   247a4:	ldr	r3, [pc, #600]	; 24a04 <myhtml_tokenizer_state_init@@Base+0x7f4>
   247a8:	ldr	r3, [r4, r3]
   247ac:	str	r3, [r0, #376]	; 0x178
   247b0:	ldr	r3, [pc, #592]	; 24a08 <myhtml_tokenizer_state_init@@Base+0x7f8>
   247b4:	ldr	r3, [r4, r3]
   247b8:	str	r3, [r0, #380]	; 0x17c
   247bc:	ldr	r3, [pc, #584]	; 24a0c <myhtml_tokenizer_state_init@@Base+0x7fc>
   247c0:	ldr	r3, [r4, r3]
   247c4:	str	r3, [r0, #384]	; 0x180
   247c8:	ldr	r3, [pc, #576]	; 24a10 <myhtml_tokenizer_state_init@@Base+0x800>
   247cc:	ldr	r3, [r4, r3]
   247d0:	str	r3, [r0, #388]	; 0x184
   247d4:	ldr	r3, [pc, #568]	; 24a14 <myhtml_tokenizer_state_init@@Base+0x804>
   247d8:	ldr	r3, [r4, r3]
   247dc:	str	r3, [r0, #392]	; 0x188
   247e0:	ldr	r3, [pc, #560]	; 24a18 <myhtml_tokenizer_state_init@@Base+0x808>
   247e4:	ldr	r3, [r4, r3]
   247e8:	str	r3, [r0, #396]	; 0x18c
   247ec:	ldr	r3, [pc, #552]	; 24a1c <myhtml_tokenizer_state_init@@Base+0x80c>
   247f0:	ldr	r3, [r4, r3]
   247f4:	str	r3, [r0, #400]	; 0x190
   247f8:	ldr	r3, [pc, #544]	; 24a20 <myhtml_tokenizer_state_init@@Base+0x810>
   247fc:	ldr	r3, [r4, r3]
   24800:	str	r3, [r0, #404]	; 0x194
   24804:	ldr	r3, [pc, #536]	; 24a24 <myhtml_tokenizer_state_init@@Base+0x814>
   24808:	ldr	r3, [r4, r3]
   2480c:	str	r3, [r0, #408]	; 0x198
   24810:	ldr	r3, [pc, #528]	; 24a28 <myhtml_tokenizer_state_init@@Base+0x818>
   24814:	ldr	r3, [r4, r3]
   24818:	str	r3, [r0, #556]	; 0x22c
   2481c:	mov	r0, #0
   24820:	pop	{r4, r5, r6, pc}
   24824:	ldr	r0, [pc, #512]	; 24a2c <myhtml_tokenizer_state_init@@Base+0x81c>
   24828:	pop	{r4, r5, r6, pc}
   2482c:	muleq	r0, r4, ip
   24830:	ldrdeq	ip, [lr], -r4
   24834:	muleq	r0, r0, r7
   24838:	andeq	r0, r0, r0, lsr r9
   2483c:	andeq	r0, r0, ip, ror #17
   24840:	andeq	r0, r0, ip, asr r9
   24844:	andeq	r0, r0, r0, lsl #15
   24848:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2484c:	andeq	r0, r0, ip, asr #17
   24850:	andeq	r0, r0, r8, lsl #14
   24854:	andeq	r0, r0, r8, lsr r9
   24858:	andeq	r0, r0, r8, ror r9
   2485c:	andeq	r0, r0, r0, lsr #18
   24860:	andeq	r0, r0, ip, lsl #18
   24864:	andeq	r0, r0, r4, asr r9
   24868:	andeq	r0, r0, ip, lsr r8
   2486c:	andeq	r0, r0, ip, ror #18
   24870:	andeq	r0, r0, ip, asr r8
   24874:	andeq	r0, r0, r8, lsl #18
   24878:	andeq	r0, r0, ip, lsl #14
   2487c:			; <UNDEFINED> instruction: 0x000007b0
   24880:	muleq	r0, r4, r8
   24884:	muleq	r0, r8, r7
   24888:	andeq	r0, r0, r8, asr #19
   2488c:	andeq	r0, r0, r4, lsr #17
   24890:	andeq	r0, r0, r8, asr #15
   24894:	andeq	r0, r0, ip, lsr #14
   24898:	andeq	r0, r0, ip, asr #15
   2489c:	andeq	r0, r0, ip, ror r7
   248a0:	andeq	r0, r0, ip, ror #15
   248a4:	andeq	r0, r0, r8, asr r7
   248a8:	andeq	r0, r0, r0, ror #18
   248ac:			; <UNDEFINED> instruction: 0x000009b0
   248b0:	andeq	r0, r0, ip, lsl #16
   248b4:	andeq	r0, r0, r4, lsl r7
   248b8:	andeq	r0, r0, r4, asr r8
   248bc:	muleq	r0, r0, r9
   248c0:	andeq	r0, r0, ip, ror r8
   248c4:			; <UNDEFINED> instruction: 0x000007b4
   248c8:	andeq	r0, r0, ip, ror #16
   248cc:	andeq	r0, r0, r0, lsl #17
   248d0:	andeq	r0, r0, r0, asr #19
   248d4:	andeq	r0, r0, ip, ror #14
   248d8:	andeq	r0, r0, ip, lsl r8
   248dc:	andeq	r0, r0, r0, asr #15
   248e0:	andeq	r0, r0, ip, lsr #16
   248e4:			; <UNDEFINED> instruction: 0x000007bc
   248e8:	andeq	r0, r0, r4, lsr #16
   248ec:	andeq	r0, r0, r0, ror #15
   248f0:	andeq	r0, r0, r8, ror #18
   248f4:	strdeq	r0, [r0], -ip
   248f8:	andeq	r0, r0, r8, asr r8
   248fc:	andeq	r0, r0, r4, lsl #18
   24900:	andeq	r0, r0, r0, lsr r8
   24904:	andeq	r0, r0, r0, asr r8
   24908:	muleq	r0, ip, r9
   2490c:	muleq	r0, r4, r7
   24910:	andeq	r0, r0, r0, lsr #15
   24914:	andeq	r0, r0, r8, lsl r8
   24918:	andeq	r0, r0, ip, asr #18
   2491c:	andeq	r0, r0, r8, lsr r7
   24920:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24924:	andeq	r0, r0, r4, asr #15
   24928:	andeq	r0, r0, r0, lsl r9
   2492c:	andeq	r0, r0, r4, lsr #15
   24930:	andeq	r0, r0, r8, ror #15
   24934:	andeq	r0, r0, r0, lsl r8
   24938:	muleq	r0, r4, r9
   2493c:	muleq	r0, r8, r9
   24940:	ldrdeq	r0, [r0], -r4
   24944:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24948:	strdeq	r0, [r0], -r4
   2494c:	andeq	r0, r0, r0, asr #18
   24950:	andeq	r0, r0, ip, asr r7
   24954:			; <UNDEFINED> instruction: 0x000008b0
   24958:	andeq	r0, r0, r4, lsr r8
   2495c:	strdeq	r0, [r0], -ip
   24960:	andeq	r0, r0, r4, ror #15
   24964:	andeq	r0, r0, r4, asr #17
   24968:	andeq	r0, r0, r0, ror r9
   2496c:	ldrdeq	r0, [r0], -r8
   24970:	andeq	r0, r0, r0, lsr #17
   24974:	andeq	r0, r0, ip, lsl #15
   24978:	andeq	r0, r0, ip, lsr #19
   2497c:	andeq	r0, r0, r4, lsl #15
   24980:	andeq	r0, r0, r4, ror #16
   24984:	strdeq	r0, [r0], -r8
   24988:	andeq	r0, r0, r0, asr r9
   2498c:	muleq	r0, ip, r7
   24990:	andeq	r0, r0, r0, ror #17
   24994:			; <UNDEFINED> instruction: 0x000008bc
   24998:	andeq	r0, r0, r4, ror r8
   2499c:	andeq	r0, r0, r4, asr #19
   249a0:	andeq	r0, r0, r8, ror #17
   249a4:			; <UNDEFINED> instruction: 0x000008b4
   249a8:	andeq	r0, r0, r8, asr #16
   249ac:	andeq	r0, r0, ip, lsl r7
   249b0:	andeq	r0, r0, r8, lsl r9
   249b4:	andeq	r0, r0, r8, lsr #14
   249b8:	andeq	r0, r0, ip, lsr r7
   249bc:	andeq	r0, r0, r8, asr #14
   249c0:	andeq	r0, r0, ip, lsl #17
   249c4:	andeq	r0, r0, r8, asr #18
   249c8:	andeq	r0, r0, r8, lsl #15
   249cc:			; <UNDEFINED> instruction: 0x000009b4
   249d0:	andeq	r0, r0, r8, lsl #19
   249d4:			; <UNDEFINED> instruction: 0x000008b8
   249d8:	andeq	r0, r0, r0, lsl #19
   249dc:	andeq	r0, r0, r0, ror #16
   249e0:			; <UNDEFINED> instruction: 0x000007b8
   249e4:	muleq	r0, r0, r8
   249e8:	ldrdeq	r0, [r0], -ip
   249ec:	ldrdeq	r0, [r0], -r8
   249f0:	andeq	r0, r0, r4, lsr r9
   249f4:	andeq	r0, r0, r4, lsl r8
   249f8:	andeq	r0, r0, r0, lsl r7
   249fc:	andeq	r0, r0, r4, lsr #19
   24a00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24a04:			; <UNDEFINED> instruction: 0x000009bc
   24a08:	andeq	r0, r0, r0, asr r7
   24a0c:	andeq	r0, r0, r8, asr #17
   24a10:	strdeq	r0, [r0], -r8
   24a14:	andeq	r0, r0, r4, asr #16
   24a18:	andeq	r0, r0, r4, asr #18
   24a1c:	andeq	r0, r0, r0, asr #16
   24a20:	andeq	r0, r0, r0, asr #17
   24a24:	ldrdeq	r0, [r0], -r4
   24a28:	andeq	r0, r0, r8, lsl #16
   24a2c:	andeq	r9, r0, ip, lsr #2

00024a30 <myhtml_tokenizer_state_destroy@@Base>:
   24a30:	ldr	r0, [r0, #24]
   24a34:	cmp	r0, #0
   24a38:	bxeq	lr
   24a3c:	b	10dcc <mycore_free@plt>

00024a40 <myhtml_tokenizer_state_doctype@@Base>:
   24a40:	mov	r2, #52	; 0x34
   24a44:	str	r2, [r0, #160]	; 0xa0
   24a48:	mov	r0, r3
   24a4c:	bx	lr

00024a50 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   24a50:	push	{r4, r5, r6, lr}
   24a54:	mov	r4, r3
   24a58:	ldrb	r3, [r2, r3]
   24a5c:	mov	r5, r0
   24a60:	ldr	ip, [sp, #16]
   24a64:	sub	r3, r3, #9
   24a68:	uxtb	r3, r3
   24a6c:	cmp	r3, #23
   24a70:	bhi	24a84 <myhtml_tokenizer_state_before_doctype_name@@Base+0x34>
   24a74:	ldr	r0, [pc, #268]	; 24b88 <myhtml_tokenizer_state_before_doctype_name@@Base+0x138>
   24a78:	mvn	r3, r0, lsr r3
   24a7c:	tst	r3, #1
   24a80:	beq	24a98 <myhtml_tokenizer_state_before_doctype_name@@Base+0x48>
   24a84:	cmp	r4, ip
   24a88:	bcc	24ac0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x70>
   24a8c:	mov	r0, r4
   24a90:	pop	{r4, r5, r6, pc}
   24a94:	add	r4, r4, #1
   24a98:	cmp	r4, ip
   24a9c:	bcs	24a8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   24aa0:	ldrb	r3, [r2, r4]
   24aa4:	sub	r3, r3, #9
   24aa8:	uxtb	r3, r3
   24aac:	cmp	r3, #23
   24ab0:	bhi	24ac0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x70>
   24ab4:	mvn	r3, r0, lsr r3
   24ab8:	tst	r3, #1
   24abc:	beq	24a94 <myhtml_tokenizer_state_before_doctype_name@@Base+0x44>
   24ac0:	ldrb	r3, [r2, r4]
   24ac4:	ldr	r2, [r5, #192]	; 0xc0
   24ac8:	cmp	r3, #62	; 0x3e
   24acc:	bne	24b34 <myhtml_tokenizer_state_before_doctype_name@@Base+0xe4>
   24ad0:	mov	r3, #1
   24ad4:	str	r3, [r5, #176]	; 0xb0
   24ad8:	add	r4, r4, r3
   24adc:	ldr	r3, [r1, #32]
   24ae0:	mov	r0, r5
   24ae4:	sub	r2, r2, r3
   24ae8:	add	r2, r2, r4
   24aec:	str	r2, [r1, #36]	; 0x24
   24af0:	mov	r2, r1
   24af4:	mov	r1, r4
   24af8:	bl	10028 <myhtml_queue_add@plt>
   24afc:	subs	r6, r0, #0
   24b00:	beq	24b14 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc4>
   24b04:	mov	r3, #69	; 0x45
   24b08:	str	r3, [r5, #160]	; 0xa0
   24b0c:	mov	r4, #0
   24b10:	b	24a8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   24b14:	ldr	r0, [r5, #8]
   24b18:	ldr	r1, [r0, #16]
   24b1c:	bl	10904 <myhtml_token_attr_create@plt>
   24b20:	cmp	r0, #0
   24b24:	str	r0, [r5, #56]	; 0x38
   24b28:	strne	r6, [r5, #160]	; 0xa0
   24b2c:	bne	24a8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   24b30:	b	24b04 <myhtml_tokenizer_state_before_doctype_name@@Base+0xb4>
   24b34:	ldr	r0, [r1, #40]	; 0x28
   24b38:	ldr	r3, [r5, #56]	; 0x38
   24b3c:	cmp	r0, #0
   24b40:	streq	r3, [r1, #40]	; 0x28
   24b44:	ldrne	r0, [r1, #44]	; 0x2c
   24b48:	streq	r3, [r1, #44]	; 0x2c
   24b4c:	streq	r3, [r5, #56]	; 0x38
   24b50:	strne	r3, [r0]
   24b54:	strne	r0, [r3, #4]
   24b58:	strne	r3, [r1, #44]	; 0x2c
   24b5c:	movne	r1, #0
   24b60:	strne	r1, [r3]
   24b64:	streq	r0, [r3]
   24b68:	streq	r0, [r3, #4]
   24b6c:	strne	r3, [r5, #56]	; 0x38
   24b70:	ldr	r3, [r5, #56]	; 0x38
   24b74:	add	r2, r2, r4
   24b78:	str	r2, [r3, #48]	; 0x30
   24b7c:	mov	r3, #53	; 0x35
   24b80:	str	r3, [r5, #160]	; 0xa0
   24b84:	b	24a8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   24b88:	addeq	r0, r0, fp, lsl r0

00024b8c <myhtml_tokenizer_state_doctype_name@@Base>:
   24b8c:	push	{r4, r5, r6, lr}
   24b90:	mov	r5, r0
   24b94:	ldr	ip, [pc, #244]	; 24c90 <myhtml_tokenizer_state_doctype_name@@Base+0x104>
   24b98:	ldr	r0, [sp, #16]
   24b9c:	mov	r4, r3
   24ba0:	cmp	r4, r0
   24ba4:	bcs	24c04 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   24ba8:	ldrb	r3, [r2, r4]
   24bac:	cmp	r3, #62	; 0x3e
   24bb0:	bne	24c2c <myhtml_tokenizer_state_doctype_name@@Base+0xa0>
   24bb4:	ldr	r0, [r5, #56]	; 0x38
   24bb8:	ldr	r3, [r5, #192]	; 0xc0
   24bbc:	ldr	r2, [r0, #48]	; 0x30
   24bc0:	sub	r2, r3, r2
   24bc4:	add	r2, r2, r4
   24bc8:	str	r2, [r0, #52]	; 0x34
   24bcc:	ldr	r2, [r1, #32]
   24bd0:	add	r4, r4, #1
   24bd4:	sub	r3, r3, r2
   24bd8:	add	r3, r3, r4
   24bdc:	str	r3, [r1, #36]	; 0x24
   24be0:	mov	r2, r1
   24be4:	mov	r0, r5
   24be8:	mov	r1, r4
   24bec:	bl	10028 <myhtml_queue_add@plt>
   24bf0:	subs	r6, r0, #0
   24bf4:	beq	24c0c <myhtml_tokenizer_state_doctype_name@@Base+0x80>
   24bf8:	mov	r4, #0
   24bfc:	mov	r3, #69	; 0x45
   24c00:	str	r3, [r5, #160]	; 0xa0
   24c04:	mov	r0, r4
   24c08:	pop	{r4, r5, r6, pc}
   24c0c:	ldr	r0, [r5, #8]
   24c10:	ldr	r1, [r0, #16]
   24c14:	bl	10904 <myhtml_token_attr_create@plt>
   24c18:	cmp	r0, #0
   24c1c:	str	r0, [r5, #56]	; 0x38
   24c20:	strne	r6, [r5, #160]	; 0xa0
   24c24:	bne	24c04 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   24c28:	b	24bf8 <myhtml_tokenizer_state_doctype_name@@Base+0x6c>
   24c2c:	sub	r3, r3, #9
   24c30:	uxtb	r3, r3
   24c34:	cmp	r3, #23
   24c38:	bhi	24c88 <myhtml_tokenizer_state_doctype_name@@Base+0xfc>
   24c3c:	mvn	r3, ip, lsr r3
   24c40:	tst	r3, #1
   24c44:	bne	24c88 <myhtml_tokenizer_state_doctype_name@@Base+0xfc>
   24c48:	ldr	r2, [r5, #56]	; 0x38
   24c4c:	ldr	r3, [r5, #192]	; 0xc0
   24c50:	ldr	r0, [r5, #8]
   24c54:	ldr	r1, [r2, #48]	; 0x30
   24c58:	sub	r3, r3, r1
   24c5c:	add	r3, r3, r4
   24c60:	str	r3, [r2, #52]	; 0x34
   24c64:	ldr	r1, [r0, #16]
   24c68:	bl	10904 <myhtml_token_attr_create@plt>
   24c6c:	cmp	r0, #0
   24c70:	movne	r3, #54	; 0x36
   24c74:	str	r0, [r5, #56]	; 0x38
   24c78:	strne	r3, [r5, #160]	; 0xa0
   24c7c:	addne	r4, r4, #1
   24c80:	bne	24c04 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   24c84:	b	24bf8 <myhtml_tokenizer_state_doctype_name@@Base+0x6c>
   24c88:	add	r4, r4, #1
   24c8c:	b	24ba0 <myhtml_tokenizer_state_doctype_name@@Base+0x14>
   24c90:	addeq	r0, r0, fp, lsl r0

00024c94 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   24c94:	push	{r4, r5, r6, lr}
   24c98:	mov	r4, r3
   24c9c:	ldrb	r3, [r2, r3]
   24ca0:	mov	r5, r0
   24ca4:	ldr	ip, [sp, #16]
   24ca8:	sub	r3, r3, #9
   24cac:	uxtb	r3, r3
   24cb0:	cmp	r3, #23
   24cb4:	bhi	24cc8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x34>
   24cb8:	ldr	r0, [pc, #164]	; 24d64 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd0>
   24cbc:	mvn	r3, r0, lsr r3
   24cc0:	tst	r3, #1
   24cc4:	beq	24cdc <myhtml_tokenizer_state_after_doctype_name@@Base+0x48>
   24cc8:	cmp	r4, ip
   24ccc:	bcc	24d04 <myhtml_tokenizer_state_after_doctype_name@@Base+0x70>
   24cd0:	mov	r0, r4
   24cd4:	pop	{r4, r5, r6, pc}
   24cd8:	add	r4, r4, #1
   24cdc:	cmp	r4, ip
   24ce0:	bcs	24cd0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x3c>
   24ce4:	ldrb	r3, [r2, r4]
   24ce8:	sub	r3, r3, #9
   24cec:	uxtb	r3, r3
   24cf0:	cmp	r3, #23
   24cf4:	bhi	24d04 <myhtml_tokenizer_state_after_doctype_name@@Base+0x70>
   24cf8:	mvn	r3, r0, lsr r3
   24cfc:	tst	r3, #1
   24d00:	beq	24cd8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x44>
   24d04:	ldrb	r3, [r2, r4]
   24d08:	cmp	r3, #62	; 0x3e
   24d0c:	ldr	r3, [r5, #192]	; 0xc0
   24d10:	bne	24d50 <myhtml_tokenizer_state_after_doctype_name@@Base+0xbc>
   24d14:	ldr	r2, [r1, #32]
   24d18:	add	r4, r4, #1
   24d1c:	sub	r3, r3, r2
   24d20:	add	r3, r3, r4
   24d24:	str	r3, [r1, #36]	; 0x24
   24d28:	mov	r2, r1
   24d2c:	mov	r0, r5
   24d30:	mov	r1, r4
   24d34:	bl	10028 <myhtml_queue_add@plt>
   24d38:	cmp	r0, #0
   24d3c:	movne	r3, #69	; 0x45
   24d40:	strne	r3, [r5, #160]	; 0xa0
   24d44:	movne	r4, #0
   24d48:	streq	r0, [r5, #160]	; 0xa0
   24d4c:	b	24cd0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x3c>
   24d50:	add	r3, r3, r4
   24d54:	str	r3, [r1, #12]
   24d58:	mov	r3, #68	; 0x44
   24d5c:	str	r3, [r5, #160]	; 0xa0
   24d60:	b	24cd0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x3c>
   24d64:	addeq	r0, r0, fp, lsl r0

00024d68 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   24d68:	push	{r4, r5, r6, r7, r8, lr}
   24d6c:	ldr	r6, [sp, #24]
   24d70:	ldr	lr, [r1, #12]
   24d74:	ldr	ip, [r0, #192]	; 0xc0
   24d78:	add	r5, lr, #6
   24d7c:	add	ip, r6, ip
   24d80:	cmp	r5, ip
   24d84:	bhi	24e30 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xc8>
   24d88:	mov	r2, #6
   24d8c:	mov	r5, r1
   24d90:	mov	r1, lr
   24d94:	mov	r6, r3
   24d98:	mov	r4, r0
   24d9c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   24da0:	ldr	r1, [pc, #324]	; 24eec <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x184>
   24da4:	mov	r2, #6
   24da8:	add	r1, pc, r1
   24dac:	mov	r7, r0
   24db0:	bl	102a4 <mycore_strncasecmp@plt>
   24db4:	cmp	r0, #0
   24db8:	bne	24e38 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd0>
   24dbc:	ldr	r2, [r5, #40]	; 0x28
   24dc0:	ldr	r3, [r4, #56]	; 0x38
   24dc4:	cmp	r2, #0
   24dc8:	streq	r3, [r5, #40]	; 0x28
   24dcc:	ldrne	r2, [r5, #44]	; 0x2c
   24dd0:	streq	r3, [r5, #44]	; 0x2c
   24dd4:	streq	r3, [r4, #56]	; 0x38
   24dd8:	strne	r3, [r2]
   24ddc:	streq	r2, [r3]
   24de0:	strne	r2, [r3, #4]
   24de4:	streq	r2, [r3, #4]
   24de8:	strne	r3, [r5, #44]	; 0x2c
   24dec:	strne	r0, [r3]
   24df0:	strne	r3, [r4, #56]	; 0x38
   24df4:	ldr	r3, [r4, #56]	; 0x38
   24df8:	ldr	r2, [r5, #12]
   24dfc:	ldr	r0, [r4, #8]
   24e00:	str	r2, [r3, #56]	; 0x38
   24e04:	mov	r2, #6
   24e08:	str	r2, [r3, #60]	; 0x3c
   24e0c:	ldr	r1, [r0, #16]
   24e10:	bl	10904 <myhtml_token_attr_create@plt>
   24e14:	cmp	r0, #0
   24e18:	str	r0, [r4, #56]	; 0x38
   24e1c:	movne	r3, #56	; 0x38
   24e20:	bne	24ebc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x154>
   24e24:	mov	r6, #0
   24e28:	mov	r3, #69	; 0x45
   24e2c:	str	r3, [r4, #160]	; 0xa0
   24e30:	mov	r0, r6
   24e34:	pop	{r4, r5, r6, r7, r8, pc}
   24e38:	ldr	r1, [pc, #176]	; 24ef0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x188>
   24e3c:	mov	r2, #6
   24e40:	add	r1, pc, r1
   24e44:	mov	r0, r7
   24e48:	bl	102a4 <mycore_strncasecmp@plt>
   24e4c:	cmp	r0, #0
   24e50:	bne	24ed8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x170>
   24e54:	ldr	r2, [r5, #40]	; 0x28
   24e58:	ldr	r3, [r4, #56]	; 0x38
   24e5c:	cmp	r2, #0
   24e60:	streq	r3, [r5, #40]	; 0x28
   24e64:	ldrne	r2, [r5, #44]	; 0x2c
   24e68:	streq	r3, [r5, #44]	; 0x2c
   24e6c:	streq	r3, [r4, #56]	; 0x38
   24e70:	strne	r3, [r2]
   24e74:	streq	r2, [r3]
   24e78:	strne	r2, [r3, #4]
   24e7c:	streq	r2, [r3, #4]
   24e80:	strne	r3, [r5, #44]	; 0x2c
   24e84:	strne	r0, [r3]
   24e88:	strne	r3, [r4, #56]	; 0x38
   24e8c:	ldr	r3, [r4, #56]	; 0x38
   24e90:	ldr	r2, [r5, #12]
   24e94:	ldr	r0, [r4, #8]
   24e98:	str	r2, [r3, #56]	; 0x38
   24e9c:	mov	r2, #6
   24ea0:	str	r2, [r3, #60]	; 0x3c
   24ea4:	ldr	r1, [r0, #16]
   24ea8:	bl	10904 <myhtml_token_attr_create@plt>
   24eac:	cmp	r0, #0
   24eb0:	str	r0, [r4, #56]	; 0x38
   24eb4:	beq	24e24 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xbc>
   24eb8:	mov	r3, #59	; 0x3b
   24ebc:	str	r3, [r4, #160]	; 0xa0
   24ec0:	ldr	r3, [r4, #76]	; 0x4c
   24ec4:	ldr	r2, [r5, #12]
   24ec8:	ldr	r3, [r3, #12]
   24ecc:	add	r2, r2, #6
   24ed0:	sub	r6, r2, r3
   24ed4:	b	24e30 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xc8>
   24ed8:	mov	r3, #1
   24edc:	str	r3, [r4, #176]	; 0xb0
   24ee0:	mov	r3, #66	; 0x42
   24ee4:	str	r3, [r4, #160]	; 0xa0
   24ee8:	b	24e30 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xc8>
   24eec:	andeq	r1, sp, ip, lsl #31
   24ef0:	andeq	r1, sp, r6, lsl #30

00024ef4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   24ef4:	push	{r4, r5, r6, lr}
   24ef8:	mov	r4, r3
   24efc:	ldrb	r3, [r2, r3]
   24f00:	mov	r5, r0
   24f04:	ldr	ip, [sp, #16]
   24f08:	sub	r3, r3, #9
   24f0c:	uxtb	r3, r3
   24f10:	cmp	r3, #23
   24f14:	bhi	24f28 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x34>
   24f18:	ldr	r0, [pc, #256]	; 25020 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x12c>
   24f1c:	mvn	r3, r0, lsr r3
   24f20:	tst	r3, #1
   24f24:	beq	24f3c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x48>
   24f28:	cmp	r4, ip
   24f2c:	bcc	24f64 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x70>
   24f30:	mov	r0, r4
   24f34:	pop	{r4, r5, r6, pc}
   24f38:	add	r4, r4, #1
   24f3c:	cmp	r4, ip
   24f40:	bcs	24f30 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x3c>
   24f44:	ldrb	r3, [r2, r4]
   24f48:	sub	r3, r3, #9
   24f4c:	uxtb	r3, r3
   24f50:	cmp	r3, #23
   24f54:	bhi	24f64 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x70>
   24f58:	mvn	r3, r0, lsr r3
   24f5c:	tst	r3, #1
   24f60:	beq	24f38 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x44>
   24f64:	ldrb	r3, [r2, r4]
   24f68:	add	r2, r4, #1
   24f6c:	cmp	r3, #34	; 0x22
   24f70:	bne	24fa0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xac>
   24f74:	ldr	r3, [r5, #192]	; 0xc0
   24f78:	ldr	r1, [r5, #56]	; 0x38
   24f7c:	add	r3, r3, #1
   24f80:	add	r4, r3, r4
   24f84:	mov	r3, #0
   24f88:	str	r3, [r1, #60]	; 0x3c
   24f8c:	mov	r3, #57	; 0x39
   24f90:	str	r4, [r1, #56]	; 0x38
   24f94:	str	r3, [r5, #160]	; 0xa0
   24f98:	mov	r4, r2
   24f9c:	b	24f30 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x3c>
   24fa0:	cmp	r3, #39	; 0x27
   24fa4:	bne	24fcc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xd8>
   24fa8:	ldr	r3, [r5, #192]	; 0xc0
   24fac:	ldr	r1, [r5, #56]	; 0x38
   24fb0:	add	r3, r3, #1
   24fb4:	add	r4, r3, r4
   24fb8:	mov	r3, #0
   24fbc:	str	r3, [r1, #60]	; 0x3c
   24fc0:	str	r4, [r1, #56]	; 0x38
   24fc4:	mov	r3, #58	; 0x3a
   24fc8:	b	24f94 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   24fcc:	cmp	r3, #62	; 0x3e
   24fd0:	mov	r3, #1
   24fd4:	str	r3, [r5, #176]	; 0xb0
   24fd8:	movne	r3, #66	; 0x42
   24fdc:	bne	24f94 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   24fe0:	mov	r4, r2
   24fe4:	ldr	r3, [r5, #192]	; 0xc0
   24fe8:	ldr	r2, [r1, #32]
   24fec:	mov	r0, r5
   24ff0:	sub	r3, r3, r2
   24ff4:	add	r3, r3, r4
   24ff8:	str	r3, [r1, #36]	; 0x24
   24ffc:	mov	r2, r1
   25000:	mov	r1, r4
   25004:	bl	10028 <myhtml_queue_add@plt>
   25008:	cmp	r0, #0
   2500c:	movne	r3, #69	; 0x45
   25010:	strne	r3, [r5, #160]	; 0xa0
   25014:	movne	r4, #0
   25018:	streq	r0, [r5, #160]	; 0xa0
   2501c:	b	24f30 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x3c>
   25020:	addeq	r0, r0, fp, lsl r0

00025024 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   25024:	push	{r4, r5, r6, lr}
   25028:	mov	r4, r0
   2502c:	ldrb	r0, [sp, #20]
   25030:	mov	r6, r1
   25034:	ldr	r1, [sp, #16]
   25038:	mov	r5, r3
   2503c:	cmp	r5, r1
   25040:	bcs	250d0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xac>
   25044:	ldrb	r3, [r2, r5]
   25048:	cmp	r3, r0
   2504c:	bne	250d8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xb4>
   25050:	ldr	r3, [r4, #56]	; 0x38
   25054:	ldr	r2, [r4, #192]	; 0xc0
   25058:	ldr	r0, [r4, #8]
   2505c:	ldr	r1, [r3, #56]	; 0x38
   25060:	sub	r2, r2, r1
   25064:	add	r2, r2, r5
   25068:	str	r2, [r3, #60]	; 0x3c
   2506c:	ldr	r2, [r6, #40]	; 0x28
   25070:	ldr	r1, [r0, #16]
   25074:	cmp	r2, #0
   25078:	streq	r3, [r6, #40]	; 0x28
   2507c:	ldrne	r2, [r6, #44]	; 0x2c
   25080:	streq	r3, [r6, #44]	; 0x2c
   25084:	streq	r3, [r4, #56]	; 0x38
   25088:	strne	r3, [r2]
   2508c:	strne	r2, [r3, #4]
   25090:	movne	r2, #0
   25094:	strne	r3, [r6, #44]	; 0x2c
   25098:	streq	r2, [r3]
   2509c:	strne	r2, [r3]
   250a0:	streq	r2, [r3, #4]
   250a4:	strne	r3, [r4, #56]	; 0x38
   250a8:	bl	10904 <myhtml_token_attr_create@plt>
   250ac:	cmp	r0, #0
   250b0:	movne	r3, #59	; 0x3b
   250b4:	str	r0, [r4, #56]	; 0x38
   250b8:	strne	r3, [r4, #160]	; 0xa0
   250bc:	addne	r5, r5, #1
   250c0:	bne	250d0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xac>
   250c4:	mov	r5, #0
   250c8:	mov	r3, #69	; 0x45
   250cc:	str	r3, [r4, #160]	; 0xa0
   250d0:	mov	r0, r5
   250d4:	pop	{r4, r5, r6, pc}
   250d8:	cmp	r3, #62	; 0x3e
   250dc:	bne	25190 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x16c>
   250e0:	mov	r3, #1
   250e4:	str	r3, [r4, #176]	; 0xb0
   250e8:	ldr	r3, [r4, #56]	; 0x38
   250ec:	ldr	r2, [r4, #192]	; 0xc0
   250f0:	ldr	r1, [r3, #56]	; 0x38
   250f4:	add	r2, r5, r2
   250f8:	cmp	r1, r2
   250fc:	bcs	25158 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x134>
   25100:	sub	r2, r2, r1
   25104:	str	r2, [r3, #60]	; 0x3c
   25108:	ldr	r2, [r6, #40]	; 0x28
   2510c:	ldr	r0, [r4, #8]
   25110:	cmp	r2, #0
   25114:	streq	r3, [r6, #40]	; 0x28
   25118:	ldrne	r2, [r6, #44]	; 0x2c
   2511c:	streq	r3, [r6, #44]	; 0x2c
   25120:	ldr	r1, [r0, #16]
   25124:	strne	r3, [r2]
   25128:	strne	r2, [r3, #4]
   2512c:	movne	r2, #0
   25130:	streq	r3, [r4, #56]	; 0x38
   25134:	strne	r3, [r6, #44]	; 0x2c
   25138:	streq	r2, [r3]
   2513c:	strne	r2, [r3]
   25140:	streq	r2, [r3, #4]
   25144:	strne	r3, [r4, #56]	; 0x38
   25148:	bl	10904 <myhtml_token_attr_create@plt>
   2514c:	cmp	r0, #0
   25150:	str	r0, [r4, #56]	; 0x38
   25154:	beq	250c4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xa0>
   25158:	ldr	r3, [r4, #192]	; 0xc0
   2515c:	ldr	r2, [r6, #32]
   25160:	add	r5, r5, #1
   25164:	sub	r3, r3, r2
   25168:	add	r3, r3, r5
   2516c:	str	r3, [r6, #36]	; 0x24
   25170:	mov	r2, r6
   25174:	mov	r1, r5
   25178:	mov	r0, r4
   2517c:	bl	10028 <myhtml_queue_add@plt>
   25180:	cmp	r0, #0
   25184:	streq	r0, [r4, #160]	; 0xa0
   25188:	beq	250d0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xac>
   2518c:	b	250c4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xa0>
   25190:	add	r5, r5, #1
   25194:	b	2503c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18>

00025198 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   25198:	push	{r0, r1, r2, lr}
   2519c:	mov	ip, #34	; 0x22
   251a0:	str	ip, [sp, #4]
   251a4:	ldr	ip, [sp, #16]
   251a8:	str	ip, [sp]
   251ac:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   251b0:	add	sp, sp, #12
   251b4:	pop	{pc}		; (ldr pc, [sp], #4)

000251b8 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   251b8:	push	{r0, r1, r2, lr}
   251bc:	mov	ip, #39	; 0x27
   251c0:	str	ip, [sp, #4]
   251c4:	ldr	ip, [sp, #16]
   251c8:	str	ip, [sp]
   251cc:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   251d0:	add	sp, sp, #12
   251d4:	pop	{pc}		; (ldr pc, [sp], #4)

000251d8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   251d8:	push	{r4, r5, r6, lr}
   251dc:	mov	r4, r3
   251e0:	ldrb	r3, [r2, r3]
   251e4:	mov	r5, r0
   251e8:	ldr	ip, [sp, #16]
   251ec:	sub	r3, r3, #9
   251f0:	uxtb	r3, r3
   251f4:	cmp	r3, #23
   251f8:	bhi	2520c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x34>
   251fc:	ldr	r0, [pc, #260]	; 25308 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x130>
   25200:	mvn	r3, r0, lsr r3
   25204:	tst	r3, #1
   25208:	beq	25220 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x48>
   2520c:	cmp	r4, ip
   25210:	bcc	25248 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x70>
   25214:	mov	r0, r4
   25218:	pop	{r4, r5, r6, pc}
   2521c:	add	r4, r4, #1
   25220:	cmp	r4, ip
   25224:	bcs	25214 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   25228:	ldrb	r3, [r2, r4]
   2522c:	sub	r3, r3, #9
   25230:	uxtb	r3, r3
   25234:	cmp	r3, #23
   25238:	bhi	25248 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x70>
   2523c:	mvn	r3, r0, lsr r3
   25240:	tst	r3, #1
   25244:	beq	2521c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x44>
   25248:	ldrb	r3, [r2, r4]
   2524c:	cmp	r3, #34	; 0x22
   25250:	bne	25280 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xa8>
   25254:	ldr	r3, [r5, #192]	; 0xc0
   25258:	ldr	r2, [r5, #56]	; 0x38
   2525c:	add	r3, r3, #1
   25260:	add	r3, r3, r4
   25264:	str	r3, [r2, #56]	; 0x38
   25268:	mov	r3, #0
   2526c:	str	r3, [r2, #60]	; 0x3c
   25270:	mov	r3, #63	; 0x3f
   25274:	str	r3, [r5, #160]	; 0xa0
   25278:	add	r4, r4, #1
   2527c:	b	25214 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   25280:	cmp	r3, #39	; 0x27
   25284:	bne	252ac <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   25288:	ldr	r3, [r5, #192]	; 0xc0
   2528c:	ldr	r2, [r5, #56]	; 0x38
   25290:	add	r3, r3, #1
   25294:	add	r3, r3, r4
   25298:	str	r3, [r2, #56]	; 0x38
   2529c:	mov	r3, #0
   252a0:	str	r3, [r2, #60]	; 0x3c
   252a4:	mov	r3, #64	; 0x40
   252a8:	b	25274 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x9c>
   252ac:	cmp	r3, #62	; 0x3e
   252b0:	bne	252f4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x11c>
   252b4:	ldr	r2, [r1, #32]
   252b8:	ldr	r3, [r5, #192]	; 0xc0
   252bc:	add	r4, r4, #1
   252c0:	sub	r3, r3, r2
   252c4:	add	r3, r3, r4
   252c8:	str	r3, [r1, #36]	; 0x24
   252cc:	mov	r2, r1
   252d0:	mov	r0, r5
   252d4:	mov	r1, r4
   252d8:	bl	10028 <myhtml_queue_add@plt>
   252dc:	cmp	r0, #0
   252e0:	movne	r3, #69	; 0x45
   252e4:	strne	r3, [r5, #160]	; 0xa0
   252e8:	movne	r4, #0
   252ec:	streq	r0, [r5, #160]	; 0xa0
   252f0:	b	25214 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   252f4:	mov	r3, #1
   252f8:	str	r3, [r5, #176]	; 0xb0
   252fc:	mov	r3, #66	; 0x42
   25300:	str	r3, [r5, #160]	; 0xa0
   25304:	b	25214 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   25308:	addeq	r0, r0, fp, lsl r0

0002530c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   2530c:	push	{r4, r5, r6, lr}
   25310:	mov	r4, r0
   25314:	ldrb	r0, [sp, #20]
   25318:	mov	r6, r1
   2531c:	ldr	r1, [sp, #16]
   25320:	mov	r5, r3
   25324:	cmp	r5, r1
   25328:	bcs	253b8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xac>
   2532c:	ldrb	r3, [r2, r5]
   25330:	cmp	r3, r0
   25334:	bne	253c0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xb4>
   25338:	ldr	r3, [r4, #56]	; 0x38
   2533c:	ldr	r2, [r4, #192]	; 0xc0
   25340:	ldr	r0, [r4, #8]
   25344:	ldr	r1, [r3, #56]	; 0x38
   25348:	sub	r2, r2, r1
   2534c:	add	r2, r2, r5
   25350:	str	r2, [r3, #60]	; 0x3c
   25354:	ldr	r2, [r6, #40]	; 0x28
   25358:	ldr	r1, [r0, #16]
   2535c:	cmp	r2, #0
   25360:	streq	r3, [r6, #40]	; 0x28
   25364:	ldrne	r2, [r6, #44]	; 0x2c
   25368:	streq	r3, [r6, #44]	; 0x2c
   2536c:	streq	r3, [r4, #56]	; 0x38
   25370:	strne	r3, [r2]
   25374:	strne	r2, [r3, #4]
   25378:	movne	r2, #0
   2537c:	strne	r3, [r6, #44]	; 0x2c
   25380:	streq	r2, [r3]
   25384:	strne	r2, [r3]
   25388:	streq	r2, [r3, #4]
   2538c:	strne	r3, [r4, #56]	; 0x38
   25390:	bl	10904 <myhtml_token_attr_create@plt>
   25394:	cmp	r0, #0
   25398:	movne	r3, #65	; 0x41
   2539c:	str	r0, [r4, #56]	; 0x38
   253a0:	strne	r3, [r4, #160]	; 0xa0
   253a4:	addne	r5, r5, #1
   253a8:	bne	253b8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xac>
   253ac:	mov	r5, #0
   253b0:	mov	r3, #69	; 0x45
   253b4:	str	r3, [r4, #160]	; 0xa0
   253b8:	mov	r0, r5
   253bc:	pop	{r4, r5, r6, pc}
   253c0:	cmp	r3, #62	; 0x3e
   253c4:	bne	25478 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x16c>
   253c8:	mov	r3, #1
   253cc:	str	r3, [r4, #176]	; 0xb0
   253d0:	ldr	r3, [r4, #56]	; 0x38
   253d4:	ldr	r2, [r4, #192]	; 0xc0
   253d8:	ldr	r1, [r3, #56]	; 0x38
   253dc:	add	r2, r5, r2
   253e0:	cmp	r1, r2
   253e4:	bcs	25440 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x134>
   253e8:	sub	r2, r2, r1
   253ec:	str	r2, [r3, #60]	; 0x3c
   253f0:	ldr	r2, [r6, #40]	; 0x28
   253f4:	ldr	r0, [r4, #8]
   253f8:	cmp	r2, #0
   253fc:	streq	r3, [r6, #40]	; 0x28
   25400:	ldrne	r2, [r6, #44]	; 0x2c
   25404:	streq	r3, [r6, #44]	; 0x2c
   25408:	ldr	r1, [r0, #16]
   2540c:	strne	r3, [r2]
   25410:	strne	r2, [r3, #4]
   25414:	movne	r2, #0
   25418:	streq	r3, [r4, #56]	; 0x38
   2541c:	strne	r3, [r6, #44]	; 0x2c
   25420:	streq	r2, [r3]
   25424:	strne	r2, [r3]
   25428:	streq	r2, [r3, #4]
   2542c:	strne	r3, [r4, #56]	; 0x38
   25430:	bl	10904 <myhtml_token_attr_create@plt>
   25434:	cmp	r0, #0
   25438:	str	r0, [r4, #56]	; 0x38
   2543c:	beq	253ac <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xa0>
   25440:	ldr	r3, [r4, #192]	; 0xc0
   25444:	ldr	r2, [r6, #32]
   25448:	add	r5, r5, #1
   2544c:	sub	r3, r3, r2
   25450:	add	r3, r3, r5
   25454:	str	r3, [r6, #36]	; 0x24
   25458:	mov	r2, r6
   2545c:	mov	r1, r5
   25460:	mov	r0, r4
   25464:	bl	10028 <myhtml_queue_add@plt>
   25468:	cmp	r0, #0
   2546c:	streq	r0, [r4, #160]	; 0xa0
   25470:	beq	253b8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xac>
   25474:	b	253ac <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xa0>
   25478:	add	r5, r5, #1
   2547c:	b	25324 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18>

00025480 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   25480:	push	{r0, r1, r2, lr}
   25484:	mov	ip, #34	; 0x22
   25488:	str	ip, [sp, #4]
   2548c:	ldr	ip, [sp, #16]
   25490:	str	ip, [sp]
   25494:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   25498:	add	sp, sp, #12
   2549c:	pop	{pc}		; (ldr pc, [sp], #4)

000254a0 <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   254a0:	push	{r0, r1, r2, lr}
   254a4:	mov	ip, #39	; 0x27
   254a8:	str	ip, [sp, #4]
   254ac:	ldr	ip, [sp, #16]
   254b0:	str	ip, [sp]
   254b4:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   254b8:	add	sp, sp, #12
   254bc:	pop	{pc}		; (ldr pc, [sp], #4)

000254c0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   254c0:	push	{r4, r5, r6, lr}
   254c4:	mov	r4, r3
   254c8:	ldrb	r3, [r2, r3]
   254cc:	mov	r5, r0
   254d0:	ldr	ip, [sp, #16]
   254d4:	sub	r3, r3, #9
   254d8:	uxtb	r3, r3
   254dc:	cmp	r3, #23
   254e0:	bhi	254f4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x34>
   254e4:	ldr	r0, [pc, #152]	; 25584 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xc4>
   254e8:	mvn	r3, r0, lsr r3
   254ec:	tst	r3, #1
   254f0:	beq	25508 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x48>
   254f4:	cmp	r4, ip
   254f8:	bcc	25530 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x70>
   254fc:	mov	r0, r4
   25500:	pop	{r4, r5, r6, pc}
   25504:	add	r4, r4, #1
   25508:	cmp	r4, ip
   2550c:	bcs	254fc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x3c>
   25510:	ldrb	r3, [r2, r4]
   25514:	sub	r3, r3, #9
   25518:	uxtb	r3, r3
   2551c:	cmp	r3, #23
   25520:	bhi	25530 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x70>
   25524:	mvn	r3, r0, lsr r3
   25528:	tst	r3, #1
   2552c:	beq	25504 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x44>
   25530:	ldrb	r3, [r2, r4]
   25534:	cmp	r3, #62	; 0x3e
   25538:	movne	r3, #66	; 0x42
   2553c:	strne	r3, [r5, #160]	; 0xa0
   25540:	bne	254fc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x3c>
   25544:	ldr	r2, [r1, #32]
   25548:	ldr	r3, [r5, #192]	; 0xc0
   2554c:	add	r4, r4, #1
   25550:	sub	r3, r3, r2
   25554:	add	r3, r3, r4
   25558:	str	r3, [r1, #36]	; 0x24
   2555c:	mov	r2, r1
   25560:	mov	r0, r5
   25564:	mov	r1, r4
   25568:	bl	10028 <myhtml_queue_add@plt>
   2556c:	cmp	r0, #0
   25570:	movne	r3, #69	; 0x45
   25574:	strne	r3, [r5, #160]	; 0xa0
   25578:	movne	r4, #0
   2557c:	streq	r0, [r5, #160]	; 0xa0
   25580:	b	254fc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x3c>
   25584:	addeq	r0, r0, fp, lsl r0

00025588 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   25588:	push	{r4, r5, r6, lr}
   2558c:	mov	r5, r0
   25590:	ldr	r0, [sp, #16]
   25594:	mov	r4, r3
   25598:	cmp	r4, r0
   2559c:	bcs	255e8 <myhtml_tokenizer_state_bogus_doctype@@Base+0x60>
   255a0:	ldrb	r3, [r2, r4]
   255a4:	add	r4, r4, #1
   255a8:	cmp	r3, #62	; 0x3e
   255ac:	bne	25598 <myhtml_tokenizer_state_bogus_doctype@@Base+0x10>
   255b0:	ldr	r2, [r1, #32]
   255b4:	ldr	r3, [r5, #192]	; 0xc0
   255b8:	mov	r0, r5
   255bc:	sub	r3, r3, r2
   255c0:	add	r3, r3, r4
   255c4:	str	r3, [r1, #36]	; 0x24
   255c8:	mov	r2, r1
   255cc:	mov	r1, r4
   255d0:	bl	10028 <myhtml_queue_add@plt>
   255d4:	cmp	r0, #0
   255d8:	movne	r4, #0
   255dc:	movne	r3, #69	; 0x45
   255e0:	strne	r3, [r5, #160]	; 0xa0
   255e4:	streq	r0, [r5, #160]	; 0xa0
   255e8:	mov	r0, r4
   255ec:	pop	{r4, r5, r6, pc}

000255f0 <myhtml_tokenizer_end_state_tag_open@@Base>:
   255f0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   255f4:	mov	r5, r3
   255f8:	ldr	r8, [r0, #192]	; 0xc0
   255fc:	ldr	lr, [sp, #32]
   25600:	ldr	r7, [r1, #32]
   25604:	ldr	ip, [r1, #24]
   25608:	add	lr, r8, lr
   2560c:	sub	r7, lr, r7
   25610:	cmp	lr, ip
   25614:	str	r7, [r1, #36]	; 0x24
   25618:	bls	2565c <myhtml_tokenizer_end_state_tag_open@@Base+0x6c>
   2561c:	cmp	ip, #0
   25620:	mov	r4, r1
   25624:	beq	25668 <myhtml_tokenizer_end_state_tag_open@@Base+0x78>
   25628:	sub	ip, r3, ip
   2562c:	add	ip, ip, r8
   25630:	mov	r6, r0
   25634:	str	ip, [r1, #28]
   25638:	bl	10c40 <myhtml_check_tag_parser@plt>
   2563c:	mov	r1, r5
   25640:	mov	r2, r4
   25644:	mov	r0, r6
   25648:	bl	10028 <myhtml_queue_add@plt>
   2564c:	cmp	r0, #0
   25650:	movne	r5, #0
   25654:	movne	r3, #69	; 0x45
   25658:	strne	r3, [r6, #160]	; 0xa0
   2565c:	mov	r0, r5
   25660:	add	sp, sp, #8
   25664:	pop	{r4, r5, r6, r7, r8, pc}
   25668:	ldr	r3, [r1, #48]	; 0x30
   2566c:	ldr	ip, [r1, #48]	; 0x30
   25670:	and	r3, r3, #8
   25674:	eor	r3, r3, ip
   25678:	str	r3, [r1, #48]	; 0x30
   2567c:	mov	r3, #512	; 0x200
   25680:	str	r3, [sp]
   25684:	mov	r3, lr
   25688:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2568c:	b	2565c <myhtml_tokenizer_end_state_tag_open@@Base+0x6c>

00025690 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   25690:	push	{r0, r1, r4, r5, r6, lr}
   25694:	mov	r4, r3
   25698:	ldr	r6, [r0, #192]	; 0xc0
   2569c:	ldr	r3, [sp, #24]
   256a0:	ldr	r5, [r1, #32]
   256a4:	ldr	lr, [r1, #24]
   256a8:	add	r3, r6, r3
   256ac:	sub	r5, r3, r5
   256b0:	cmp	r3, lr
   256b4:	str	r5, [r1, #36]	; 0x24
   256b8:	bls	256e8 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x58>
   256bc:	sub	lr, r4, lr
   256c0:	add	lr, lr, r6
   256c4:	str	lr, [r1, #28]
   256c8:	ldr	lr, [r1, #48]	; 0x30
   256cc:	ldr	r5, [r1, #48]	; 0x30
   256d0:	and	lr, lr, #8
   256d4:	eor	lr, lr, r5
   256d8:	mov	ip, #512	; 0x200
   256dc:	str	lr, [r1, #48]	; 0x30
   256e0:	str	ip, [sp]
   256e4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   256e8:	mov	r0, r4
   256ec:	add	sp, sp, #8
   256f0:	pop	{r4, r5, r6, pc}

000256f4 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   256f4:	push	{r0, r1, r4, lr}
   256f8:	mov	r4, r3
   256fc:	ldr	ip, [r0, #192]	; 0xc0
   25700:	ldr	r3, [sp, #16]
   25704:	add	r3, r3, ip
   25708:	ldr	ip, [r1, #32]
   2570c:	sub	ip, r3, ip
   25710:	str	ip, [r1, #36]	; 0x24
   25714:	mov	ip, #512	; 0x200
   25718:	str	ip, [sp]
   2571c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25720:	mov	r0, r4
   25724:	add	sp, sp, #8
   25728:	pop	{r4, pc}

0002572c <myhtml_tokenizer_end_state_tag_name@@Base>:
   2572c:	b	256f4 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>

00025730 <myhtml_tokenizer_end_state_data@@Base>:
   25730:	b	256f4 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>

00025734 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   25734:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   25738:	mov	r7, r3
   2573c:	ldr	r5, [sp, #32]
   25740:	ldr	r3, [r1, #32]
   25744:	ldr	ip, [r0, #192]	; 0xc0
   25748:	sub	r3, r5, r3
   2574c:	add	r3, r3, ip
   25750:	str	r3, [r1, #36]	; 0x24
   25754:	ldr	r3, [r1, #24]
   25758:	cmp	r3, #1
   2575c:	bls	257e4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xb0>
   25760:	ldr	r8, [r0, #76]	; 0x4c
   25764:	str	r5, [sp]
   25768:	mov	r6, r0
   2576c:	mov	r4, r1
   25770:	bl	ffd4 <myhtml_tokenizer_state_bogus_comment@plt>
   25774:	ldr	r2, [r6, #64]	; 0x40
   25778:	ldr	r3, [r6, #192]	; 0xc0
   2577c:	cmp	r4, r2
   25780:	str	r0, [r8, #4]
   25784:	beq	257f0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xbc>
   25788:	add	r5, r5, r3
   2578c:	ldr	r3, [r2, #24]
   25790:	sub	r5, r5, r3
   25794:	cmp	r5, #0
   25798:	str	r5, [r2, #28]
   2579c:	beq	257e4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xb0>
   257a0:	ldr	r3, [r2, #48]	; 0x30
   257a4:	ldr	r1, [r2, #48]	; 0x30
   257a8:	and	r3, r3, #8
   257ac:	eor	r3, r3, r1
   257b0:	str	r3, [r2, #48]	; 0x30
   257b4:	mov	r3, #1
   257b8:	str	r3, [r2]
   257bc:	ldr	r3, [r2, #48]	; 0x30
   257c0:	orr	r3, r3, #512	; 0x200
   257c4:	str	r3, [r2, #48]	; 0x30
   257c8:	mov	r1, r7
   257cc:	mov	r0, r6
   257d0:	bl	10028 <myhtml_queue_add@plt>
   257d4:	cmp	r0, #0
   257d8:	movne	r7, #0
   257dc:	movne	r3, #69	; 0x45
   257e0:	strne	r3, [r6, #160]	; 0xa0
   257e4:	mov	r0, r7
   257e8:	add	sp, sp, #8
   257ec:	pop	{r4, r5, r6, r7, r8, pc}
   257f0:	ldr	r2, [r4, #48]	; 0x30
   257f4:	ldr	r1, [r4, #48]	; 0x30
   257f8:	and	r2, r2, #8
   257fc:	eor	r2, r2, r1
   25800:	str	r2, [r4, #48]	; 0x30
   25804:	mov	r2, #2
   25808:	add	r5, r5, r3
   2580c:	str	r2, [r4]
   25810:	ldr	r3, [r4, #24]
   25814:	ldr	r2, [r4, #48]	; 0x30
   25818:	sub	r5, r5, r3
   2581c:	orr	r2, r2, #1024	; 0x400
   25820:	str	r2, [r4, #48]	; 0x30
   25824:	str	r5, [r4, #28]
   25828:	mov	r2, r4
   2582c:	b	257c8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x94>

00025830 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   25830:	push	{r4, r5, r6, lr}
   25834:	mov	r5, r3
   25838:	ldr	ip, [sp, #16]
   2583c:	ldr	r3, [r1, #32]
   25840:	mov	r2, r1
   25844:	sub	ip, ip, r3
   25848:	ldr	r3, [r0, #192]	; 0xc0
   2584c:	mov	r4, r0
   25850:	add	ip, ip, r3
   25854:	str	ip, [r1, #36]	; 0x24
   25858:	mov	r1, r5
   2585c:	bl	10028 <myhtml_queue_add@plt>
   25860:	cmp	r0, #0
   25864:	beq	2587c <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x4c>
   25868:	mov	r5, #0
   2586c:	mov	r3, #69	; 0x45
   25870:	str	r3, [r4, #160]	; 0xa0
   25874:	mov	r0, r5
   25878:	pop	{r4, r5, r6, pc}
   2587c:	ldr	r0, [r4, #8]
   25880:	ldr	r1, [r0, #16]
   25884:	bl	10904 <myhtml_token_attr_create@plt>
   25888:	cmp	r0, #0
   2588c:	str	r0, [r4, #56]	; 0x38
   25890:	bne	25874 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x44>
   25894:	b	25868 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x38>

00025898 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   25898:	ldr	r2, [r0, #192]	; 0xc0
   2589c:	ldr	r0, [r1, #32]
   258a0:	sub	r2, r2, r0
   258a4:	ldr	r0, [sp]
   258a8:	add	r2, r2, r0
   258ac:	str	r2, [r1, #36]	; 0x24
   258b0:	mov	r0, r3
   258b4:	bx	lr

000258b8 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   258b8:	ldr	r2, [r0, #192]	; 0xc0
   258bc:	ldr	r0, [r1, #32]
   258c0:	sub	r2, r2, r0
   258c4:	ldr	r0, [sp]
   258c8:	add	r2, r2, r0
   258cc:	str	r2, [r1, #36]	; 0x24
   258d0:	mov	r0, r3
   258d4:	bx	lr

000258d8 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   258d8:	push	{r4, r5, r6, lr}
   258dc:	mov	r5, r3
   258e0:	ldr	lr, [sp, #16]
   258e4:	ldr	r3, [r1, #32]
   258e8:	ldr	ip, [r0, #192]	; 0xc0
   258ec:	sub	lr, lr, r3
   258f0:	ldr	r3, [r0, #56]	; 0x38
   258f4:	add	lr, lr, ip
   258f8:	str	lr, [r1, #36]	; 0x24
   258fc:	mov	r2, r1
   25900:	ldr	r1, [r3, #56]	; 0x38
   25904:	add	ip, ip, r5
   25908:	sub	ip, ip, r1
   2590c:	str	ip, [r3, #60]	; 0x3c
   25910:	mov	r1, r5
   25914:	mov	r4, r0
   25918:	bl	10028 <myhtml_queue_add@plt>
   2591c:	cmp	r0, #0
   25920:	beq	25938 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x60>
   25924:	mov	r5, #0
   25928:	mov	r3, #69	; 0x45
   2592c:	str	r3, [r4, #160]	; 0xa0
   25930:	mov	r0, r5
   25934:	pop	{r4, r5, r6, pc}
   25938:	ldr	r0, [r4, #8]
   2593c:	ldr	r1, [r0, #16]
   25940:	bl	10904 <myhtml_token_attr_create@plt>
   25944:	cmp	r0, #0
   25948:	str	r0, [r4, #56]	; 0x38
   2594c:	bne	25930 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x58>
   25950:	b	25924 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x4c>

00025954 <myhtml_tokenizer_end_state_comment_end@@Base>:
   25954:	push	{r4, r5, r6, lr}
   25958:	mov	r2, r1
   2595c:	ldr	ip, [r1, #32]
   25960:	ldr	r1, [sp, #16]
   25964:	mov	r5, r3
   25968:	sub	r1, r1, ip
   2596c:	ldr	ip, [r2, #24]
   25970:	ldr	r3, [r0, #192]	; 0xc0
   25974:	sub	ip, r5, ip
   25978:	add	ip, ip, r3
   2597c:	add	r1, r1, r3
   25980:	cmp	ip, #2
   25984:	str	r1, [r2, #36]	; 0x24
   25988:	strls	ip, [r2, #28]
   2598c:	bls	259b4 <myhtml_tokenizer_end_state_comment_end@@Base+0x60>
   25990:	sub	ip, ip, #2
   25994:	mov	r1, r5
   25998:	str	ip, [r2, #28]
   2599c:	mov	r4, r0
   259a0:	bl	10028 <myhtml_queue_add@plt>
   259a4:	cmp	r0, #0
   259a8:	movne	r5, #0
   259ac:	movne	r3, #69	; 0x45
   259b0:	strne	r3, [r4, #160]	; 0xa0
   259b4:	mov	r0, r5
   259b8:	pop	{r4, r5, r6, pc}

000259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   259bc:	push	{r4, r5, r6, lr}
   259c0:	mov	r2, r1
   259c4:	ldr	ip, [sp, #16]
   259c8:	ldr	r1, [r1, #32]
   259cc:	mov	r5, r3
   259d0:	sub	ip, ip, r1
   259d4:	ldr	r1, [r2, #24]
   259d8:	ldr	r3, [r0, #192]	; 0xc0
   259dc:	sub	r1, r5, r1
   259e0:	add	r1, r1, r3
   259e4:	add	ip, ip, r3
   259e8:	str	r1, [r2, #28]
   259ec:	str	ip, [r2, #36]	; 0x24
   259f0:	mov	r1, r5
   259f4:	mov	r4, r0
   259f8:	bl	10028 <myhtml_queue_add@plt>
   259fc:	cmp	r0, #0
   25a00:	movne	r3, #69	; 0x45
   25a04:	movne	r5, #0
   25a08:	strne	r3, [r4, #160]	; 0xa0
   25a0c:	mov	r0, r5
   25a10:	pop	{r4, r5, r6, pc}

00025a14 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   25a14:	b	259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>

00025a18 <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   25a18:	b	259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>

00025a1c <myhtml_tokenizer_end_state_comment@@Base>:
   25a1c:	b	259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>

00025a20 <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   25a20:	b	259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>

00025a24 <myhtml_tokenizer_end_state_comment_start@@Base>:
   25a24:	b	259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>

00025a28 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   25a28:	b	259bc <myhtml_tokenizer_end_state_bogus_comment@@Base>

00025a2c <myhtml_tokenizer_end_state_cdata_section@@Base>:
   25a2c:	push	{r4, r5, r6, lr}
   25a30:	mov	r2, r1
   25a34:	ldr	ip, [r1, #32]
   25a38:	ldr	r1, [sp, #16]
   25a3c:	mov	r5, r3
   25a40:	sub	r1, r1, ip
   25a44:	ldr	ip, [r2, #24]
   25a48:	ldr	r3, [r0, #192]	; 0xc0
   25a4c:	sub	ip, r5, ip
   25a50:	add	ip, ip, r3
   25a54:	add	r1, r1, r3
   25a58:	cmp	ip, #0
   25a5c:	str	r1, [r2, #36]	; 0x24
   25a60:	str	ip, [r2, #28]
   25a64:	beq	25a84 <myhtml_tokenizer_end_state_cdata_section@@Base+0x58>
   25a68:	mov	r1, r5
   25a6c:	mov	r4, r0
   25a70:	bl	10028 <myhtml_queue_add@plt>
   25a74:	cmp	r0, #0
   25a78:	movne	r5, #0
   25a7c:	movne	r3, #69	; 0x45
   25a80:	strne	r3, [r4, #160]	; 0xa0
   25a84:	mov	r0, r5
   25a88:	pop	{r4, r5, r6, pc}

00025a8c <myhtml_tokenizer_end_state_rcdata@@Base>:
   25a8c:	push	{r4, r5, r6, lr}
   25a90:	mov	r2, r1
   25a94:	mov	r4, r3
   25a98:	ldr	r1, [sp, #16]
   25a9c:	ldr	r3, [r0, #192]	; 0xc0
   25aa0:	ldr	ip, [r2, #24]
   25aa4:	add	r1, r1, r3
   25aa8:	ldr	r3, [r2, #32]
   25aac:	cmp	r1, ip
   25ab0:	sub	r3, r1, r3
   25ab4:	str	r3, [r2, #36]	; 0x24
   25ab8:	bhi	25ac4 <myhtml_tokenizer_end_state_rcdata@@Base+0x38>
   25abc:	mov	r0, r4
   25ac0:	pop	{r4, r5, r6, pc}
   25ac4:	ldr	r3, [r2, #48]	; 0x30
   25ac8:	sub	r1, r1, ip
   25acc:	orr	r3, r3, #16
   25ad0:	str	r3, [r2, #48]	; 0x30
   25ad4:	mov	r3, #1
   25ad8:	str	r1, [r2, #28]
   25adc:	str	r3, [r2]
   25ae0:	mov	r1, #0
   25ae4:	mov	r5, r0
   25ae8:	bl	10028 <myhtml_queue_add@plt>
   25aec:	cmp	r0, #0
   25af0:	beq	25abc <myhtml_tokenizer_end_state_rcdata@@Base+0x30>
   25af4:	mov	r3, #69	; 0x45
   25af8:	str	r3, [r5, #160]	; 0xa0
   25afc:	mov	r0, #0
   25b00:	pop	{r4, r5, r6, pc}

00025b04 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   25b04:	push	{r0, r1, r2, r4, r5, lr}
   25b08:	mov	r4, r3
   25b0c:	ldr	r5, [r1, #32]
   25b10:	ldr	ip, [sp, #24]
   25b14:	ldr	r3, [r0, #192]	; 0xc0
   25b18:	sub	ip, ip, r5
   25b1c:	add	ip, ip, r3
   25b20:	str	ip, [r1, #36]	; 0x24
   25b24:	mov	ip, #16
   25b28:	str	ip, [sp]
   25b2c:	add	r3, r3, r4
   25b30:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25b34:	mov	r0, r4
   25b38:	add	sp, sp, #12
   25b3c:	pop	{r4, r5, pc}

00025b40 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   25b40:	b	25b04 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>

00025b44 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   25b44:	b	25b04 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>

00025b48 <myhtml_tokenizer_end_state_plaintext@@Base>:
   25b48:	ldr	ip, [r1, #32]
   25b4c:	ldr	r2, [sp]
   25b50:	ldr	r0, [r0, #192]	; 0xc0
   25b54:	sub	r2, r2, ip
   25b58:	add	r2, r2, r0
   25b5c:	str	r2, [r1, #36]	; 0x24
   25b60:	mov	r0, r3
   25b64:	bx	lr

00025b68 <myhtml_tokenizer_end_state_doctype@@Base>:
   25b68:	push	{r0, r1, r2, r4, r5, lr}
   25b6c:	mov	r4, r3
   25b70:	ldr	r5, [r1, #32]
   25b74:	ldr	ip, [sp, #24]
   25b78:	ldr	r3, [r0, #192]	; 0xc0
   25b7c:	sub	ip, ip, r5
   25b80:	add	ip, ip, r3
   25b84:	str	ip, [r1, #36]	; 0x24
   25b88:	mov	ip, #32
   25b8c:	str	ip, [sp]
   25b90:	add	r3, r3, r4
   25b94:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25b98:	mov	r0, r4
   25b9c:	add	sp, sp, #12
   25ba0:	pop	{r4, r5, pc}

00025ba4 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   25ba4:	b	25b68 <myhtml_tokenizer_end_state_doctype@@Base>

00025ba8 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   25ba8:	b	25b68 <myhtml_tokenizer_end_state_doctype@@Base>

00025bac <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   25bac:	b	25b68 <myhtml_tokenizer_end_state_doctype@@Base>

00025bb0 <myhtml_tokenizer_end_state_rawtext@@Base>:
   25bb0:	b	25b68 <myhtml_tokenizer_end_state_doctype@@Base>

00025bb4 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   25bb4:	push	{r4, r5, r6, lr}
   25bb8:	mov	r4, r3
   25bbc:	ldr	lr, [sp, #16]
   25bc0:	ldr	r3, [r1, #32]
   25bc4:	ldr	ip, [r0, #192]	; 0xc0
   25bc8:	sub	lr, lr, r3
   25bcc:	ldr	r3, [r0, #56]	; 0x38
   25bd0:	add	lr, lr, ip
   25bd4:	str	lr, [r1, #36]	; 0x24
   25bd8:	mov	r2, r1
   25bdc:	ldr	r1, [r3, #48]	; 0x30
   25be0:	add	ip, ip, r4
   25be4:	sub	ip, ip, r1
   25be8:	str	ip, [r3, #52]	; 0x34
   25bec:	mov	r1, r4
   25bf0:	mov	r5, r0
   25bf4:	bl	10028 <myhtml_queue_add@plt>
   25bf8:	cmp	r0, #0
   25bfc:	movne	r3, #69	; 0x45
   25c00:	movne	r4, #0
   25c04:	strne	r3, [r5, #160]	; 0xa0
   25c08:	mov	r0, r4
   25c0c:	pop	{r4, r5, r6, pc}

00025c10 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   25c10:	b	25bb4 <myhtml_tokenizer_end_state_doctype_name@@Base>

00025c14 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   25c14:	push	{r4, r5, r6, lr}
   25c18:	mov	r4, r3
   25c1c:	ldr	ip, [sp, #16]
   25c20:	ldr	r3, [r1, #32]
   25c24:	mov	r2, r1
   25c28:	sub	ip, ip, r3
   25c2c:	ldr	r3, [r0, #192]	; 0xc0
   25c30:	mov	r5, r0
   25c34:	add	ip, ip, r3
   25c38:	mov	r3, #1
   25c3c:	str	ip, [r1, #36]	; 0x24
   25c40:	str	r3, [r0, #176]	; 0xb0
   25c44:	mov	r1, r4
   25c48:	bl	10028 <myhtml_queue_add@plt>
   25c4c:	cmp	r0, #0
   25c50:	movne	r3, #69	; 0x45
   25c54:	movne	r4, #0
   25c58:	strne	r3, [r5, #160]	; 0xa0
   25c5c:	mov	r0, r4
   25c60:	pop	{r4, r5, r6, pc}

00025c64 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   25c64:	b	25c14 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>

00025c68 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   25c68:	push	{r4, r5, r6, lr}
   25c6c:	mov	r4, r0
   25c70:	ldr	ip, [r1, #32]
   25c74:	ldr	lr, [sp, #16]
   25c78:	ldr	r0, [r0, #192]	; 0xc0
   25c7c:	sub	ip, lr, ip
   25c80:	mov	r5, r3
   25c84:	add	ip, ip, r0
   25c88:	mov	r3, #1
   25c8c:	str	ip, [r1, #36]	; 0x24
   25c90:	str	r3, [r4, #176]	; 0xb0
   25c94:	ldr	r3, [r4, #56]	; 0x38
   25c98:	mov	r2, r1
   25c9c:	ldr	r1, [r3, #48]	; 0x30
   25ca0:	cmp	r1, #0
   25ca4:	cmpne	lr, #0
   25ca8:	addne	r0, r0, r5
   25cac:	subne	r0, r0, r1
   25cb0:	strne	r0, [r3, #52]	; 0x34
   25cb4:	mov	r1, r5
   25cb8:	mov	r0, r4
   25cbc:	bl	10028 <myhtml_queue_add@plt>
   25cc0:	cmp	r0, #0
   25cc4:	movne	r3, #69	; 0x45
   25cc8:	movne	r5, #0
   25ccc:	strne	r3, [r4, #160]	; 0xa0
   25cd0:	mov	r0, r5
   25cd4:	pop	{r4, r5, r6, pc}

00025cd8 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   25cd8:	b	25c68 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>

00025cdc <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   25cdc:	push	{r0, r1, r2, r4, r5, lr}
   25ce0:	mov	r4, r3
   25ce4:	ldr	lr, [sp, #24]
   25ce8:	ldr	ip, [r1, #32]
   25cec:	ldr	r3, [r0, #192]	; 0xc0
   25cf0:	sub	ip, lr, ip
   25cf4:	add	ip, ip, r3
   25cf8:	str	ip, [r1, #36]	; 0x24
   25cfc:	str	lr, [sp]
   25d00:	add	r3, r3, r4
   25d04:	bl	10c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   25d08:	mov	r0, r4
   25d0c:	add	sp, sp, #12
   25d10:	pop	{r4, r5, pc}

00025d14 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   25d14:	push	{r0, r1, r2, r4, r5, lr}
   25d18:	mov	r4, r3
   25d1c:	ldr	lr, [sp, #24]
   25d20:	ldr	ip, [r1, #32]
   25d24:	ldr	r3, [r0, #192]	; 0xc0
   25d28:	sub	ip, lr, ip
   25d2c:	add	ip, ip, r3
   25d30:	str	ip, [r1, #36]	; 0x24
   25d34:	str	lr, [sp]
   25d38:	add	r3, r3, r4
   25d3c:	bl	10e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   25d40:	mov	r0, r4
   25d44:	add	sp, sp, #12
   25d48:	pop	{r4, r5, pc}

00025d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   25d4c:	push	{r4, r5, r6, lr}
   25d50:	mov	r4, r3
   25d54:	ldr	ip, [sp, #16]
   25d58:	ldr	r3, [r1, #32]
   25d5c:	mov	r2, r1
   25d60:	sub	ip, ip, r3
   25d64:	ldr	r3, [r0, #192]	; 0xc0
   25d68:	mov	r5, r0
   25d6c:	add	ip, ip, r3
   25d70:	str	ip, [r1, #36]	; 0x24
   25d74:	mov	r1, r4
   25d78:	bl	10028 <myhtml_queue_add@plt>
   25d7c:	cmp	r0, #0
   25d80:	movne	r3, #69	; 0x45
   25d84:	movne	r4, #0
   25d88:	strne	r3, [r5, #160]	; 0xa0
   25d8c:	mov	r0, r4
   25d90:	pop	{r4, r5, r6, pc}

00025d94 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   25d94:	b	25d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00025d98 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   25d98:	b	25d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00025d9c <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   25d9c:	b	25d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00025da0 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   25da0:	b	25d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00025da4 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   25da4:	b	25d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00025da8 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   25da8:	b	25d4c <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00025dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   25dac:	push	{r0, r1, r2, r4, r5, lr}
   25db0:	mov	r4, r3
   25db4:	ldr	r5, [r1, #32]
   25db8:	ldr	ip, [sp, #24]
   25dbc:	ldr	r3, [r0, #192]	; 0xc0
   25dc0:	sub	ip, ip, r5
   25dc4:	add	ip, ip, r3
   25dc8:	str	ip, [r1, #36]	; 0x24
   25dcc:	mov	ip, #64	; 0x40
   25dd0:	str	ip, [sp]
   25dd4:	add	r3, r3, r4
   25dd8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25ddc:	mov	r0, r4
   25de0:	add	sp, sp, #12
   25de4:	pop	{r4, r5, pc}

00025de8 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   25de8:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025dec <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   25dec:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025df0 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   25df0:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025df4 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   25df4:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025df8 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   25df8:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025dfc <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   25dfc:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e00 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   25e00:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e04 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   25e04:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e08 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   25e08:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e0c <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   25e0c:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e10 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   25e10:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e14 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   25e14:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e18 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   25e18:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e1c <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   25e1c:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e20 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   25e20:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e24 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   25e24:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e28 <myhtml_tokenizer_end_state_script_data@@Base>:
   25e28:	b	25dac <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00025e2c <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   25e2c:	ldr	r0, [sp]
   25e30:	bx	lr

00025e34 <myhtml_tokenizer_state_script_data@@Base>:
   25e34:	push	{lr}		; (str lr, [sp, #-4]!)
   25e38:	ldr	lr, [sp, #4]
   25e3c:	cmp	r3, lr
   25e40:	bcs	25e6c <myhtml_tokenizer_state_script_data@@Base+0x38>
   25e44:	ldrb	ip, [r2, r3]
   25e48:	cmp	ip, #60	; 0x3c
   25e4c:	add	ip, r3, #1
   25e50:	bne	25e74 <myhtml_tokenizer_state_script_data@@Base+0x40>
   25e54:	ldr	r2, [r0, #192]	; 0xc0
   25e58:	add	r3, r2, r3
   25e5c:	str	r3, [r1, #32]
   25e60:	mov	r3, ip
   25e64:	mov	r2, #16
   25e68:	str	r2, [r0, #160]	; 0xa0
   25e6c:	mov	r0, r3
   25e70:	pop	{pc}		; (ldr pc, [sp], #4)
   25e74:	mov	r3, ip
   25e78:	b	25e3c <myhtml_tokenizer_state_script_data@@Base+0x8>

00025e7c <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   25e7c:	ldrb	r2, [r2, r3]
   25e80:	cmp	r2, #47	; 0x2f
   25e84:	addeq	r3, r3, #1
   25e88:	moveq	r2, #17
   25e8c:	beq	25ea0 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x24>
   25e90:	cmp	r2, #33	; 0x21
   25e94:	addeq	r3, r3, #1
   25e98:	moveq	r2, #19
   25e9c:	movne	r2, #5
   25ea0:	str	r2, [r0, #160]	; 0xa0
   25ea4:	mov	r0, r3
   25ea8:	bx	lr

00025eac <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   25eac:	ldrb	r2, [r2, r3]
   25eb0:	cmp	r2, #45	; 0x2d
   25eb4:	addeq	r3, r3, #1
   25eb8:	moveq	r2, #20
   25ebc:	movne	r2, #5
   25ec0:	str	r2, [r0, #160]	; 0xa0
   25ec4:	mov	r0, r3
   25ec8:	bx	lr

00025ecc <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   25ecc:	ldrb	r2, [r2, r3]
   25ed0:	cmp	r2, #45	; 0x2d
   25ed4:	addeq	r3, r3, #1
   25ed8:	moveq	r2, #23
   25edc:	movne	r2, #5
   25ee0:	str	r2, [r0, #160]	; 0xa0
   25ee4:	mov	r0, r3
   25ee8:	bx	lr

00025eec <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   25eec:	ldrb	r2, [r2, r3]
   25ef0:	bic	r2, r2, #32
   25ef4:	sub	r2, r2, #65	; 0x41
   25ef8:	cmp	r2, #25
   25efc:	movhi	r2, #5
   25f00:	ldrls	r2, [r0, #192]	; 0xc0
   25f04:	addls	r2, r2, r3
   25f08:	strls	r2, [r1, #12]
   25f0c:	movls	r2, #18
   25f10:	str	r2, [r0, #160]	; 0xa0
   25f14:	mov	r0, r3
   25f18:	bx	lr

00025f1c <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   25f1c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   25f20:	mov	r5, r0
   25f24:	mov	r7, r1
   25f28:	ldr	r0, [pc, #592]	; 26180 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   25f2c:	ldr	r1, [sp, #40]	; 0x28
   25f30:	mov	r8, r2
   25f34:	mov	r4, r3
   25f38:	cmp	r4, r1
   25f3c:	bcs	25fe0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc4>
   25f40:	ldrb	r3, [r8, r4]
   25f44:	sub	r2, r3, #9
   25f48:	uxtb	r2, r2
   25f4c:	cmp	r2, #23
   25f50:	bhi	260f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d8>
   25f54:	mvn	r2, r0, lsr r2
   25f58:	tst	r2, #1
   25f5c:	bne	26014 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xf8>
   25f60:	ldr	r9, [r7, #12]
   25f64:	ldr	r6, [r5, #192]	; 0xc0
   25f68:	sub	r6, r6, r9
   25f6c:	add	r6, r6, r4
   25f70:	cmp	r6, #6
   25f74:	beq	25f80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x64>
   25f78:	mov	r3, #5
   25f7c:	b	26008 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xec>
   25f80:	mov	r2, r6
   25f84:	mov	r1, r9
   25f88:	mov	r0, r5
   25f8c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25f90:	ldr	r1, [pc, #492]	; 26184 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x268>
   25f94:	mov	r2, r6
   25f98:	add	r1, pc, r1
   25f9c:	bl	102a4 <mycore_strncasecmp@plt>
   25fa0:	cmp	r0, #0
   25fa4:	bne	25f78 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   25fa8:	ldr	r3, [r5, #192]	; 0xc0
   25fac:	mov	r2, #64	; 0x40
   25fb0:	sub	r3, r3, #8
   25fb4:	str	r2, [sp]
   25fb8:	add	r3, r3, r4
   25fbc:	mov	r2, r8
   25fc0:	mov	r1, r7
   25fc4:	mov	r0, r5
   25fc8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25fcc:	cmp	r0, #0
   25fd0:	bne	25fec <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xd0>
   25fd4:	mov	r4, #0
   25fd8:	mov	r3, #69	; 0x45
   25fdc:	str	r3, [r5, #160]	; 0xa0
   25fe0:	mov	r0, r4
   25fe4:	add	sp, sp, #12
   25fe8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25fec:	mov	r3, #112	; 0x70
   25ff0:	str	r3, [r0]
   25ff4:	mov	r3, #1
   25ff8:	str	r9, [r0, #24]
   25ffc:	str	r6, [r0, #28]
   26000:	str	r3, [r0, #48]	; 0x30
   26004:	mov	r3, #33	; 0x21
   26008:	str	r3, [r5, #160]	; 0xa0
   2600c:	add	r4, r4, #1
   26010:	b	25fe0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc4>
   26014:	cmp	r3, #62	; 0x3e
   26018:	bne	260d4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1b8>
   2601c:	ldr	r9, [r7, #12]
   26020:	ldr	r6, [r5, #192]	; 0xc0
   26024:	sub	r6, r6, r9
   26028:	add	r6, r6, r4
   2602c:	cmp	r6, #6
   26030:	bne	25f78 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   26034:	mov	r2, r6
   26038:	mov	r1, r9
   2603c:	mov	r0, r5
   26040:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   26044:	ldr	r1, [pc, #316]	; 26188 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x26c>
   26048:	mov	r2, r6
   2604c:	add	r1, pc, r1
   26050:	bl	102a4 <mycore_strncasecmp@plt>
   26054:	cmp	r0, #0
   26058:	bne	25f78 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   2605c:	ldr	r3, [r5, #192]	; 0xc0
   26060:	mov	r2, #64	; 0x40
   26064:	sub	r3, r3, #8
   26068:	str	r2, [sp]
   2606c:	add	r3, r3, r4
   26070:	mov	r2, r8
   26074:	mov	r1, r7
   26078:	mov	r0, r5
   2607c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26080:	subs	r2, r0, #0
   26084:	beq	25fd4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   26088:	mov	r3, #112	; 0x70
   2608c:	str	r3, [r2]
   26090:	mov	r3, #1
   26094:	add	r4, r4, r3
   26098:	str	r3, [r2, #48]	; 0x30
   2609c:	ldr	r3, [r5, #192]	; 0xc0
   260a0:	ldr	r1, [r2, #32]
   260a4:	add	r3, r4, r3
   260a8:	sub	r3, r3, r1
   260ac:	str	r9, [r2, #24]
   260b0:	str	r6, [r2, #28]
   260b4:	str	r3, [r2, #36]	; 0x24
   260b8:	mov	r1, r4
   260bc:	mov	r0, r5
   260c0:	bl	10028 <myhtml_queue_add@plt>
   260c4:	cmp	r0, #0
   260c8:	streq	r0, [r5, #160]	; 0xa0
   260cc:	beq	25fe0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc4>
   260d0:	b	25fd4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   260d4:	bic	r3, r3, #32
   260d8:	sub	r3, r3, #65	; 0x41
   260dc:	cmp	r3, #25
   260e0:	movhi	r3, #5
   260e4:	strhi	r3, [r5, #160]	; 0xa0
   260e8:	bhi	25fe0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc4>
   260ec:	add	r4, r4, #1
   260f0:	b	25f38 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1c>
   260f4:	cmp	r3, #47	; 0x2f
   260f8:	bne	26014 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xf8>
   260fc:	ldr	r9, [r7, #12]
   26100:	ldr	r6, [r5, #192]	; 0xc0
   26104:	sub	r6, r6, r9
   26108:	add	r6, r6, r4
   2610c:	cmp	r6, #6
   26110:	bne	25f78 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   26114:	mov	r2, r6
   26118:	mov	r1, r9
   2611c:	mov	r0, r5
   26120:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   26124:	ldr	r1, [pc, #96]	; 2618c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x270>
   26128:	mov	r2, r6
   2612c:	add	r1, pc, r1
   26130:	bl	102a4 <mycore_strncasecmp@plt>
   26134:	cmp	r0, #0
   26138:	bne	25f78 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   2613c:	ldr	r3, [r5, #192]	; 0xc0
   26140:	mov	r2, #64	; 0x40
   26144:	sub	r3, r3, #8
   26148:	str	r2, [sp]
   2614c:	add	r3, r3, r4
   26150:	mov	r2, r8
   26154:	mov	r1, r7
   26158:	mov	r0, r5
   2615c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26160:	cmp	r0, #0
   26164:	beq	25fd4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xb8>
   26168:	mov	r3, #112	; 0x70
   2616c:	str	r3, [r0]
   26170:	str	r9, [r0, #24]
   26174:	str	r6, [r0, #28]
   26178:	mov	r3, #3
   2617c:	b	26000 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe4>
   26180:	addeq	r0, r0, fp, lsl r0
   26184:	andeq	r1, sp, r7, lsr #1
   26188:	strdeq	r0, [sp], -r3
   2618c:	andeq	r0, sp, r3, lsl pc

00026190 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   26190:	ldrb	r2, [r2, r3]
   26194:	cmp	r2, #45	; 0x2d
   26198:	beq	261b8 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   2619c:	cmp	r2, #60	; 0x3c
   261a0:	moveq	r2, #24
   261a4:	beq	261b4 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x24>
   261a8:	cmp	r2, #62	; 0x3e
   261ac:	moveq	r2, #5
   261b0:	movne	r2, #21
   261b4:	str	r2, [r0, #160]	; 0xa0
   261b8:	add	r0, r3, #1
   261bc:	bx	lr

000261c0 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   261c0:	ldrb	r2, [r2, r3]
   261c4:	cmp	r2, #47	; 0x2f
   261c8:	moveq	r2, #25
   261cc:	streq	r2, [r0, #160]	; 0xa0
   261d0:	addeq	r3, r3, #1
   261d4:	beq	261fc <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x3c>
   261d8:	bic	r2, r2, #32
   261dc:	sub	r2, r2, #65	; 0x41
   261e0:	cmp	r2, #25
   261e4:	movhi	r2, #21
   261e8:	ldrls	r2, [r0, #192]	; 0xc0
   261ec:	addls	r2, r2, r3
   261f0:	strls	r2, [r1, #12]
   261f4:	movls	r2, #27
   261f8:	str	r2, [r0, #160]	; 0xa0
   261fc:	mov	r0, r3
   26200:	bx	lr

00026204 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   26204:	ldrb	r2, [r2, r3]
   26208:	bic	r2, r2, #32
   2620c:	sub	r2, r2, #65	; 0x41
   26210:	cmp	r2, #25
   26214:	movhi	r2, #21
   26218:	ldrls	r2, [r0, #192]	; 0xc0
   2621c:	addls	r2, r2, r3
   26220:	strls	r2, [r1, #12]
   26224:	movls	r2, #26
   26228:	str	r2, [r0, #160]	; 0xa0
   2622c:	mov	r0, r3
   26230:	bx	lr

00026234 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   26234:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   26238:	mov	r5, r0
   2623c:	mov	r7, r1
   26240:	ldr	r0, [pc, #592]	; 26498 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x264>
   26244:	ldr	r1, [sp, #40]	; 0x28
   26248:	mov	r8, r2
   2624c:	mov	r4, r3
   26250:	cmp	r4, r1
   26254:	bcs	262f8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc4>
   26258:	ldrb	r3, [r8, r4]
   2625c:	sub	r2, r3, #9
   26260:	uxtb	r2, r2
   26264:	cmp	r2, #23
   26268:	bhi	2640c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1d8>
   2626c:	mvn	r2, r0, lsr r2
   26270:	tst	r2, #1
   26274:	bne	2632c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xf8>
   26278:	ldr	r9, [r7, #12]
   2627c:	ldr	r6, [r5, #192]	; 0xc0
   26280:	sub	r6, r6, r9
   26284:	add	r6, r6, r4
   26288:	cmp	r6, #6
   2628c:	beq	26298 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x64>
   26290:	mov	r3, #21
   26294:	b	26320 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xec>
   26298:	mov	r2, r6
   2629c:	mov	r1, r9
   262a0:	mov	r0, r5
   262a4:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   262a8:	ldr	r1, [pc, #492]	; 2649c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   262ac:	mov	r2, r6
   262b0:	add	r1, pc, r1
   262b4:	bl	102a4 <mycore_strncasecmp@plt>
   262b8:	cmp	r0, #0
   262bc:	bne	26290 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   262c0:	ldr	r3, [r5, #192]	; 0xc0
   262c4:	mov	r2, #64	; 0x40
   262c8:	sub	r3, r3, #8
   262cc:	str	r2, [sp]
   262d0:	add	r3, r3, r4
   262d4:	mov	r2, r8
   262d8:	mov	r1, r7
   262dc:	mov	r0, r5
   262e0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   262e4:	cmp	r0, #0
   262e8:	bne	26304 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xd0>
   262ec:	mov	r4, #0
   262f0:	mov	r3, #69	; 0x45
   262f4:	str	r3, [r5, #160]	; 0xa0
   262f8:	mov	r0, r4
   262fc:	add	sp, sp, #8
   26300:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26304:	mov	r3, #112	; 0x70
   26308:	str	r3, [r0]
   2630c:	mov	r3, #1
   26310:	str	r9, [r0, #24]
   26314:	str	r6, [r0, #28]
   26318:	str	r3, [r0, #48]	; 0x30
   2631c:	mov	r3, #33	; 0x21
   26320:	str	r3, [r5, #160]	; 0xa0
   26324:	add	r4, r4, #1
   26328:	b	262f8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc4>
   2632c:	cmp	r3, #62	; 0x3e
   26330:	bne	263ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1b8>
   26334:	ldr	r9, [r7, #12]
   26338:	ldr	r6, [r5, #192]	; 0xc0
   2633c:	sub	r6, r6, r9
   26340:	add	r6, r6, r4
   26344:	cmp	r6, #6
   26348:	bne	26290 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   2634c:	mov	r2, r6
   26350:	mov	r1, r9
   26354:	mov	r0, r5
   26358:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2635c:	ldr	r1, [pc, #316]	; 264a0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x26c>
   26360:	mov	r2, r6
   26364:	add	r1, pc, r1
   26368:	bl	102a4 <mycore_strncasecmp@plt>
   2636c:	subs	sl, r0, #0
   26370:	bne	26290 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   26374:	ldr	r3, [r5, #192]	; 0xc0
   26378:	mov	r2, #64	; 0x40
   2637c:	sub	r3, r3, #8
   26380:	str	r2, [sp]
   26384:	add	r3, r3, r4
   26388:	mov	r2, r8
   2638c:	mov	r1, r7
   26390:	mov	r0, r5
   26394:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26398:	subs	r2, r0, #0
   2639c:	beq	262ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xb8>
   263a0:	mov	r3, #112	; 0x70
   263a4:	str	r3, [r2]
   263a8:	mov	r3, #1
   263ac:	str	r3, [r2, #48]	; 0x30
   263b0:	add	r4, r4, r3
   263b4:	ldr	r3, [r5, #192]	; 0xc0
   263b8:	ldr	r1, [r2, #32]
   263bc:	add	r3, r4, r3
   263c0:	sub	r3, r3, r1
   263c4:	str	r9, [r2, #24]
   263c8:	str	r6, [r2, #28]
   263cc:	mov	r1, r4
   263d0:	str	sl, [r5, #160]	; 0xa0
   263d4:	mov	r0, r5
   263d8:	str	r3, [r2, #36]	; 0x24
   263dc:	bl	10028 <myhtml_queue_add@plt>
   263e0:	cmp	r0, #0
   263e4:	bne	262ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xb8>
   263e8:	b	262f8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc4>
   263ec:	bic	r3, r3, #32
   263f0:	sub	r3, r3, #65	; 0x41
   263f4:	cmp	r3, #25
   263f8:	movhi	r3, #21
   263fc:	strhi	r3, [r5, #160]	; 0xa0
   26400:	bhi	262f8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc4>
   26404:	add	r4, r4, #1
   26408:	b	26250 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1c>
   2640c:	cmp	r3, #47	; 0x2f
   26410:	bne	2632c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xf8>
   26414:	ldr	r9, [r7, #12]
   26418:	ldr	r6, [r5, #192]	; 0xc0
   2641c:	sub	r6, r6, r9
   26420:	add	r6, r6, r4
   26424:	cmp	r6, #6
   26428:	bne	26290 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   2642c:	mov	r2, r6
   26430:	mov	r1, r9
   26434:	mov	r0, r5
   26438:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2643c:	ldr	r1, [pc, #96]	; 264a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x270>
   26440:	mov	r2, r6
   26444:	add	r1, pc, r1
   26448:	bl	102a4 <mycore_strncasecmp@plt>
   2644c:	cmp	r0, #0
   26450:	bne	26290 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   26454:	ldr	r3, [r5, #192]	; 0xc0
   26458:	mov	r2, #64	; 0x40
   2645c:	sub	r3, r3, #8
   26460:	str	r2, [sp]
   26464:	add	r3, r3, r4
   26468:	mov	r2, r8
   2646c:	mov	r1, r7
   26470:	mov	r0, r5
   26474:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26478:	cmp	r0, #0
   2647c:	beq	262ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xb8>
   26480:	mov	r3, #112	; 0x70
   26484:	str	r3, [r0]
   26488:	str	r9, [r0, #24]
   2648c:	str	r6, [r0, #28]
   26490:	mov	r3, #3
   26494:	b	26318 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe4>
   26498:	addeq	r0, r0, fp, lsl r0
   2649c:	andeq	r0, sp, pc, lsl #27
   264a0:	ldrdeq	r0, [sp], -fp
   264a4:	strdeq	r0, [sp], -fp

000264a8 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   264a8:	ldr	ip, [sp]
   264ac:	cmp	r3, ip
   264b0:	bcs	264cc <myhtml_tokenizer_state_script_data_escaped@@Base+0x24>
   264b4:	ldrb	r1, [r2, r3]
   264b8:	add	r3, r3, #1
   264bc:	cmp	r1, #45	; 0x2d
   264c0:	bne	264d4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x2c>
   264c4:	mov	r2, #22
   264c8:	str	r2, [r0, #160]	; 0xa0
   264cc:	mov	r0, r3
   264d0:	bx	lr
   264d4:	cmp	r1, #60	; 0x3c
   264d8:	bne	264ac <myhtml_tokenizer_state_script_data_escaped@@Base+0x4>
   264dc:	mov	r2, #24
   264e0:	b	264c8 <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>

000264e4 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   264e4:	ldrb	r2, [r2, r3]
   264e8:	cmp	r2, #45	; 0x2d
   264ec:	moveq	r2, #23
   264f0:	streq	r2, [r0, #160]	; 0xa0
   264f4:	beq	26520 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   264f8:	cmp	r2, #60	; 0x3c
   264fc:	moveq	r2, #24
   26500:	streq	r2, [r0, #160]	; 0xa0
   26504:	beq	26518 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x34>
   26508:	cmp	r2, #0
   2650c:	mov	r2, #21
   26510:	str	r2, [r0, #160]	; 0xa0
   26514:	bne	26520 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   26518:	mov	r0, r3
   2651c:	bx	lr
   26520:	add	r3, r3, #1
   26524:	b	26518 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x34>

00026528 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   26528:	push	{r4, r5, r6, r7, r8, lr}
   2652c:	mov	r4, r0
   26530:	ldr	lr, [sp, #24]
   26534:	ldr	r6, [pc, #188]	; 265f8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd0>
   26538:	mov	r5, #1
   2653c:	cmp	r3, lr
   26540:	bcs	265d0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa8>
   26544:	ldrb	ip, [r2, r3]
   26548:	sub	r0, ip, #9
   2654c:	uxtb	r0, r0
   26550:	cmp	r0, #23
   26554:	mvnls	r0, r6, lsr r0
   26558:	movhi	r0, r5
   2655c:	and	r0, r0, #1
   26560:	cmp	ip, #62	; 0x3e
   26564:	cmpne	ip, #47	; 0x2f
   26568:	moveq	r7, #1
   2656c:	movne	r7, #0
   26570:	eor	r0, r0, #1
   26574:	orrs	r0, r7, r0
   26578:	beq	265d8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xb0>
   2657c:	ldr	r1, [r1, #12]
   26580:	ldr	r5, [r4, #192]	; 0xc0
   26584:	add	r6, r3, #1
   26588:	sub	r5, r5, r1
   2658c:	add	r5, r5, r3
   26590:	cmp	r5, #6
   26594:	beq	265a0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x78>
   26598:	mov	r3, #21
   2659c:	b	265c8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa0>
   265a0:	mov	r2, r5
   265a4:	mov	r0, r4
   265a8:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   265ac:	ldr	r1, [pc, #72]	; 265fc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xd4>
   265b0:	mov	r2, r5
   265b4:	add	r1, pc, r1
   265b8:	bl	102a4 <mycore_strncasecmp@plt>
   265bc:	cmp	r0, #0
   265c0:	moveq	r3, #28
   265c4:	bne	26598 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x70>
   265c8:	str	r3, [r4, #160]	; 0xa0
   265cc:	mov	r3, r6
   265d0:	mov	r0, r3
   265d4:	pop	{r4, r5, r6, r7, r8, pc}
   265d8:	bic	ip, ip, #32
   265dc:	sub	ip, ip, #65	; 0x41
   265e0:	cmp	ip, #25
   265e4:	movhi	r2, #21
   265e8:	strhi	r2, [r4, #160]	; 0xa0
   265ec:	bhi	265d0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa8>
   265f0:	add	r3, r3, #1
   265f4:	b	2653c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x14>
   265f8:	addeq	r0, r0, fp, lsl r0
   265fc:	andeq	r0, sp, fp, lsl #21

00026600 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   26600:	ldr	ip, [sp]
   26604:	cmp	r3, ip
   26608:	bcs	26624 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x24>
   2660c:	ldrb	r1, [r2, r3]
   26610:	add	r3, r3, #1
   26614:	cmp	r1, #45	; 0x2d
   26618:	bne	2662c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x2c>
   2661c:	mov	r2, #29
   26620:	str	r2, [r0, #160]	; 0xa0
   26624:	mov	r0, r3
   26628:	bx	lr
   2662c:	cmp	r1, #60	; 0x3c
   26630:	bne	26604 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4>
   26634:	mov	r2, #31
   26638:	b	26620 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>

0002663c <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2663c:	ldrb	r2, [r2, r3]
   26640:	cmp	r2, #45	; 0x2d
   26644:	moveq	r2, #30
   26648:	beq	26658 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x1c>
   2664c:	cmp	r2, #60	; 0x3c
   26650:	moveq	r2, #31
   26654:	movne	r2, #28
   26658:	str	r2, [r0, #160]	; 0xa0
   2665c:	add	r0, r3, #1
   26660:	bx	lr

00026664 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   26664:	ldrb	r2, [r2, r3]
   26668:	cmp	r2, #45	; 0x2d
   2666c:	beq	2668c <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   26670:	cmp	r2, #60	; 0x3c
   26674:	moveq	r2, #31
   26678:	beq	26688 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x24>
   2667c:	cmp	r2, #62	; 0x3e
   26680:	moveq	r2, #5
   26684:	movne	r2, #28
   26688:	str	r2, [r0, #160]	; 0xa0
   2668c:	add	r0, r3, #1
   26690:	bx	lr

00026694 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   26694:	ldrb	r2, [r2, r3]
   26698:	cmp	r2, #47	; 0x2f
   2669c:	moveq	r2, #32
   266a0:	streq	r2, [r0, #160]	; 0xa0
   266a4:	ldreq	r2, [r0, #192]	; 0xc0
   266a8:	addeq	r3, r3, #1
   266ac:	addeq	r2, r2, r3
   266b0:	movne	r2, #28
   266b4:	strne	r2, [r0, #160]	; 0xa0
   266b8:	streq	r2, [r1, #12]
   266bc:	mov	r0, r3
   266c0:	bx	lr

000266c4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   266c4:	push	{r4, r5, r6, r7, r8, lr}
   266c8:	mov	r4, r0
   266cc:	ldr	lr, [sp, #24]
   266d0:	ldr	r6, [pc, #188]	; 26794 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd0>
   266d4:	mov	r5, #1
   266d8:	cmp	r3, lr
   266dc:	bcs	2676c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa8>
   266e0:	ldrb	ip, [r2, r3]
   266e4:	sub	r0, ip, #9
   266e8:	uxtb	r0, r0
   266ec:	cmp	r0, #23
   266f0:	mvnls	r0, r6, lsr r0
   266f4:	movhi	r0, r5
   266f8:	and	r0, r0, #1
   266fc:	cmp	ip, #62	; 0x3e
   26700:	cmpne	ip, #47	; 0x2f
   26704:	moveq	r7, #1
   26708:	movne	r7, #0
   2670c:	eor	r0, r0, #1
   26710:	orrs	r0, r7, r0
   26714:	beq	26774 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xb0>
   26718:	ldr	r1, [r1, #12]
   2671c:	ldr	r5, [r4, #192]	; 0xc0
   26720:	add	r6, r3, #1
   26724:	sub	r5, r5, r1
   26728:	add	r5, r5, r3
   2672c:	cmp	r5, #6
   26730:	beq	2673c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x78>
   26734:	mov	r3, #28
   26738:	b	26764 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa0>
   2673c:	mov	r2, r5
   26740:	mov	r0, r4
   26744:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   26748:	ldr	r1, [pc, #72]	; 26798 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xd4>
   2674c:	mov	r2, r5
   26750:	add	r1, pc, r1
   26754:	bl	102a4 <mycore_strncasecmp@plt>
   26758:	cmp	r0, #0
   2675c:	moveq	r3, #21
   26760:	bne	26734 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x70>
   26764:	str	r3, [r4, #160]	; 0xa0
   26768:	mov	r3, r6
   2676c:	mov	r0, r3
   26770:	pop	{r4, r5, r6, r7, r8, pc}
   26774:	bic	ip, ip, #32
   26778:	sub	ip, ip, #65	; 0x41
   2677c:	cmp	ip, #25
   26780:	movhi	r2, #28
   26784:	strhi	r2, [r4, #160]	; 0xa0
   26788:	bhi	2676c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa8>
   2678c:	add	r3, r3, #1
   26790:	b	266d8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x14>
   26794:	addeq	r0, r0, fp, lsl r0
   26798:	andeq	r0, sp, pc, ror #17

0002679c <myhtml_tree_create@@Base>:
   2679c:	mov	r1, #252	; 0xfc
   267a0:	mov	r0, #1
   267a4:	b	ff14 <mycore_calloc@plt>

000267a8 <myhtml_tree_node_clean@@Base>:
   267a8:	push	{r4, lr}
   267ac:	mov	r2, #44	; 0x2c
   267b0:	mov	r4, r0
   267b4:	mov	r1, #0
   267b8:	bl	108b0 <memset@plt>
   267bc:	mov	r3, #1
   267c0:	str	r3, [r4, #8]
   267c4:	pop	{r4, pc}

000267c8 <myhtml_tree_parse_flags@@Base>:
   267c8:	ldr	r0, [r0, #184]	; 0xb8
   267cc:	bx	lr

000267d0 <myhtml_tree_parse_flags_set@@Base>:
   267d0:	str	r1, [r0, #184]	; 0xb8
   267d4:	bx	lr

000267d8 <myhtml_tree_get_myhtml@@Base>:
   267d8:	cmp	r0, #0
   267dc:	ldrne	r0, [r0]
   267e0:	bx	lr

000267e4 <myhtml_tree_get_tag@@Base>:
   267e4:	cmp	r0, #0
   267e8:	ldrne	r0, [r0, #28]
   267ec:	bx	lr

000267f0 <myhtml_tree_get_document@@Base>:
   267f0:	ldr	r0, [r0, #84]	; 0x54
   267f4:	bx	lr

000267f8 <myhtml_tree_get_node_html@@Base>:
   267f8:	ldr	r0, [r0, #96]	; 0x60
   267fc:	bx	lr

00026800 <myhtml_tree_get_node_body@@Base>:
   26800:	ldr	r0, [r0, #100]	; 0x64
   26804:	bx	lr

00026808 <myhtml_tree_get_node_head@@Base>:
   26808:	ldr	r0, [r0, #92]	; 0x5c
   2680c:	bx	lr

00026810 <myhtml_tree_get_mchar@@Base>:
   26810:	ldr	r0, [r0, #4]
   26814:	bx	lr

00026818 <myhtml_tree_get_mchar_node_id@@Base>:
   26818:	ldr	r0, [r0, #52]	; 0x34
   2681c:	bx	lr

00026820 <myhtml_tree_node_create@@Base>:
   26820:	push	{r4, r5, r6, lr}
   26824:	mov	r2, #0
   26828:	ldr	r1, [r0, #48]	; 0x30
   2682c:	mov	r4, r0
   26830:	ldr	r0, [r0, #12]
   26834:	bl	10bbc <mcobject_async_malloc@plt>
   26838:	mov	r5, r0
   2683c:	bl	1109c <myhtml_tree_node_clean@plt>
   26840:	str	r4, [r5, #40]	; 0x28
   26844:	mov	r0, r5
   26848:	pop	{r4, r5, r6, pc}

0002684c <myhtml_tree_node_add_child@@Base>:
   2684c:	ldr	r3, [r0, #28]
   26850:	cmp	r3, #0
   26854:	strne	r1, [r3, #16]
   26858:	streq	r1, [r0, #20]
   2685c:	strne	r3, [r1, #12]
   26860:	str	r0, [r1, #24]
   26864:	str	r1, [r0, #28]
   26868:	ldr	r0, [r1, #40]	; 0x28
   2686c:	ldr	r3, [r0, #236]	; 0xec
   26870:	cmp	r3, #0
   26874:	bxeq	lr
   26878:	ldr	r2, [r0, #244]	; 0xf4
   2687c:	bx	r3

00026880 <myhtml_tree_node_insert_before@@Base>:
   26880:	ldr	r3, [r0, #12]
   26884:	ldr	r2, [r0, #24]
   26888:	cmp	r3, #0
   2688c:	strne	r1, [r3, #16]
   26890:	streq	r1, [r2, #20]
   26894:	strne	r3, [r1, #12]
   26898:	str	r0, [r1, #16]
   2689c:	str	r2, [r1, #24]
   268a0:	str	r1, [r0, #12]
   268a4:	ldr	r0, [r1, #40]	; 0x28
   268a8:	ldr	r3, [r0, #236]	; 0xec
   268ac:	cmp	r3, #0
   268b0:	bxeq	lr
   268b4:	ldr	r2, [r0, #244]	; 0xf4
   268b8:	bx	r3

000268bc <myhtml_tree_node_insert_after@@Base>:
   268bc:	ldr	r3, [r0, #16]
   268c0:	ldr	r2, [r0, #24]
   268c4:	cmp	r3, #0
   268c8:	strne	r1, [r3, #12]
   268cc:	streq	r1, [r2, #28]
   268d0:	strne	r3, [r1, #16]
   268d4:	str	r0, [r1, #12]
   268d8:	str	r2, [r1, #24]
   268dc:	str	r1, [r0, #16]
   268e0:	ldr	r0, [r1, #40]	; 0x28
   268e4:	ldr	r3, [r0, #236]	; 0xec
   268e8:	cmp	r3, #0
   268ec:	bxeq	lr
   268f0:	ldr	r2, [r0, #244]	; 0xf4
   268f4:	bx	r3

000268f8 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   268f8:	ldr	r0, [r0, #24]
   268fc:	cmp	r0, #0
   26900:	bxeq	lr
   26904:	ldr	r3, [r0, #4]
   26908:	cmp	r3, r1
   2690c:	bne	268f8 <myhtml_tree_node_find_parent_by_tag_id@@Base>
   26910:	bx	lr

00026914 <myhtml_tree_node_remove@@Base>:
   26914:	ldr	r3, [r0, #16]
   26918:	ldr	r1, [r0, #12]
   2691c:	cmp	r3, #0
   26920:	push	{r4, lr}
   26924:	mov	r4, r0
   26928:	strne	r1, [r3, #12]
   2692c:	bne	2693c <myhtml_tree_node_remove@@Base+0x28>
   26930:	ldr	r2, [r0, #24]
   26934:	cmp	r2, #0
   26938:	strne	r1, [r2, #28]
   2693c:	ldr	r2, [r4, #12]
   26940:	cmp	r2, #0
   26944:	strne	r3, [r2, #16]
   26948:	bne	26958 <myhtml_tree_node_remove@@Base+0x44>
   2694c:	ldr	r2, [r4, #24]
   26950:	cmp	r2, #0
   26954:	strne	r3, [r2, #20]
   26958:	ldr	r0, [r4, #40]	; 0x28
   2695c:	ldr	r3, [r0, #240]	; 0xf0
   26960:	cmp	r3, #0
   26964:	beq	26974 <myhtml_tree_node_remove@@Base+0x60>
   26968:	ldr	r2, [r0, #248]	; 0xf8
   2696c:	mov	r1, r4
   26970:	blx	r3
   26974:	mov	r3, #0
   26978:	str	r3, [r4, #16]
   2697c:	str	r3, [r4, #12]
   26980:	str	r3, [r4, #24]
   26984:	mov	r0, r4
   26988:	pop	{r4, pc}

0002698c <myhtml_tree_node_free@@Base>:
   2698c:	push	{r4, lr}
   26990:	subs	r4, r0, #0
   26994:	popeq	{r4, pc}
   26998:	ldr	r1, [r4, #32]
   2699c:	cmp	r1, #0
   269a0:	beq	269c0 <myhtml_tree_node_free@@Base+0x34>
   269a4:	ldr	r3, [r4, #40]	; 0x28
   269a8:	ldr	r0, [r3, #8]
   269ac:	bl	107e4 <myhtml_token_attr_delete_all@plt>
   269b0:	ldr	r3, [r4, #40]	; 0x28
   269b4:	ldr	r1, [r4, #32]
   269b8:	ldr	r0, [r3, #8]
   269bc:	bl	10f88 <myhtml_token_delete@plt>
   269c0:	ldr	r3, [r4, #40]	; 0x28
   269c4:	mov	r1, r4
   269c8:	pop	{r4, lr}
   269cc:	ldr	r0, [r3, #12]
   269d0:	b	1004c <mcobject_async_free@plt>

000269d4 <myhtml_tree_node_delete@@Base>:
   269d4:	push	{r4, lr}
   269d8:	subs	r4, r0, #0
   269dc:	popeq	{r4, pc}
   269e0:	bl	10df0 <myhtml_tree_node_remove@plt>
   269e4:	mov	r0, r4
   269e8:	pop	{r4, lr}
   269ec:	b	10d00 <myhtml_tree_node_free@plt>
   269f0:	push	{r4, lr}
   269f4:	mov	r4, r0
   269f8:	cmp	r4, #0
   269fc:	bne	26a04 <myhtml_tree_node_delete@@Base+0x30>
   26a00:	pop	{r4, pc}
   26a04:	ldr	r0, [r4, #20]
   26a08:	cmp	r0, #0
   26a0c:	beq	26a14 <myhtml_tree_node_delete@@Base+0x40>
   26a10:	bl	269f0 <myhtml_tree_node_delete@@Base+0x1c>
   26a14:	ldr	r4, [r4, #16]
   26a18:	mov	r0, r4
   26a1c:	bl	10dc0 <myhtml_tree_node_delete@plt>
   26a20:	b	269f8 <myhtml_tree_node_delete@@Base+0x24>

00026a24 <myhtml_tree_node_delete_recursive@@Base>:
   26a24:	push	{r4, lr}
   26a28:	subs	r4, r0, #0
   26a2c:	popeq	{r4, pc}
   26a30:	ldr	r0, [r4, #20]
   26a34:	cmp	r0, #0
   26a38:	beq	26a40 <myhtml_tree_node_delete_recursive@@Base+0x1c>
   26a3c:	bl	269f0 <myhtml_tree_node_delete@@Base+0x1c>
   26a40:	mov	r0, r4
   26a44:	pop	{r4, lr}
   26a48:	b	10dc0 <myhtml_tree_node_delete@plt>

00026a4c <myhtml_tree_node_clone@@Base>:
   26a4c:	push	{r4, r5, r6, lr}
   26a50:	mov	r4, r0
   26a54:	ldr	r0, [r0, #40]	; 0x28
   26a58:	bl	ffe0 <myhtml_tree_node_create@plt>
   26a5c:	ldr	r1, [r4, #32]
   26a60:	cmp	r1, #0
   26a64:	mov	r5, r0
   26a68:	beq	26a78 <myhtml_tree_node_clone@@Base+0x2c>
   26a6c:	ldr	r3, [r4, #40]	; 0x28
   26a70:	ldr	r0, [r3, #8]
   26a74:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   26a78:	ldr	r0, [r4, #40]	; 0x28
   26a7c:	ldr	r1, [r4, #32]
   26a80:	ldr	r3, [r0, #44]	; 0x2c
   26a84:	ldr	r2, [r0, #40]	; 0x28
   26a88:	ldr	r0, [r0, #8]
   26a8c:	bl	ff2c <myhtml_token_node_clone@plt>
   26a90:	ldr	r3, [r4, #4]
   26a94:	str	r3, [r5, #4]
   26a98:	ldr	r3, [r4, #8]
   26a9c:	str	r3, [r5, #8]
   26aa0:	cmp	r0, #0
   26aa4:	str	r0, [r5, #32]
   26aa8:	ldrne	r3, [r0, #48]	; 0x30
   26aac:	orrne	r3, r3, #4
   26ab0:	strne	r3, [r0, #48]	; 0x30
   26ab4:	mov	r0, r5
   26ab8:	pop	{r4, r5, r6, pc}

00026abc <myhtml_tree_node_insert_by_mode@@Base>:
   26abc:	cmp	r2, #0
   26ac0:	bne	26ac8 <myhtml_tree_node_insert_by_mode@@Base+0xc>
   26ac4:	b	106b8 <myhtml_tree_node_add_child@plt>
   26ac8:	cmp	r2, #1
   26acc:	bne	26ad4 <myhtml_tree_node_insert_by_mode@@Base+0x18>
   26ad0:	b	103f4 <myhtml_tree_node_insert_before@plt>
   26ad4:	b	10364 <myhtml_tree_node_insert_after@plt>

00026ad8 <myhtml_tree_node_insert_doctype@@Base>:
   26ad8:	push	{r4, r5, r6, lr}
   26adc:	mov	r6, r1
   26ae0:	mov	r5, r0
   26ae4:	bl	ffe0 <myhtml_tree_node_create@plt>
   26ae8:	mov	r2, #3
   26aec:	mov	r3, #1
   26af0:	mov	r4, r0
   26af4:	str	r6, [r0, #32]
   26af8:	stmib	r0, {r2, r3}
   26afc:	mov	r1, r0
   26b00:	ldr	r0, [r5, #84]	; 0x54
   26b04:	bl	106b8 <myhtml_tree_node_add_child@plt>
   26b08:	mov	r0, r4
   26b0c:	pop	{r4, r5, r6, pc}

00026b10 <myhtml_tree_element_in_scope@@Base>:
   26b10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26b14:	mov	r9, r3
   26b18:	ldr	r3, [r0, #128]	; 0x80
   26b1c:	mov	r6, r0
   26b20:	mov	r7, r1
   26b24:	ldr	r5, [r3, #4]
   26b28:	ldr	r4, [r3]
   26b2c:	mov	r8, r2
   26b30:	add	r4, r4, r5, lsl #2
   26b34:	cmp	r5, #0
   26b38:	beq	26b90 <myhtml_tree_element_in_scope@@Base+0x80>
   26b3c:	ldr	r3, [r4, #-4]
   26b40:	ldr	r0, [r6, #28]
   26b44:	sub	r5, r5, #1
   26b48:	ldr	r1, [r3, #4]
   26b4c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   26b50:	ldr	r1, [r4, #-4]!
   26b54:	ldr	r3, [r1, #4]
   26b58:	cmp	r3, r7
   26b5c:	bne	26b74 <myhtml_tree_element_in_scope@@Base+0x64>
   26b60:	cmp	r8, #0
   26b64:	beq	26b94 <myhtml_tree_element_in_scope@@Base+0x84>
   26b68:	ldr	r3, [r1, #8]
   26b6c:	cmp	r8, r3
   26b70:	beq	26b94 <myhtml_tree_element_in_scope@@Base+0x84>
   26b74:	ldr	r1, [r1, #8]
   26b78:	cmp	r9, #128	; 0x80
   26b7c:	add	r1, r1, #4
   26b80:	ldr	r3, [r0, r1, lsl #2]
   26b84:	bne	26b9c <myhtml_tree_element_in_scope@@Base+0x8c>
   26b88:	tst	r3, #128	; 0x80
   26b8c:	bne	26b34 <myhtml_tree_element_in_scope@@Base+0x24>
   26b90:	mov	r1, #0
   26b94:	mov	r0, r1
   26b98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26b9c:	tst	r9, r3
   26ba0:	beq	26b34 <myhtml_tree_element_in_scope@@Base+0x24>
   26ba4:	b	26b90 <myhtml_tree_element_in_scope@@Base+0x80>

00026ba8 <myhtml_tree_element_in_scope_by_node@@Base>:
   26ba8:	push	{r4, r5, r6, r7, r8, lr}
   26bac:	mov	r7, r0
   26bb0:	ldr	r6, [r0, #40]	; 0x28
   26bb4:	mov	r8, r1
   26bb8:	ldr	r3, [r6, #128]	; 0x80
   26bbc:	ldr	r5, [r3, #4]
   26bc0:	ldr	r4, [r3]
   26bc4:	add	r4, r4, r5, lsl #2
   26bc8:	cmp	r5, #0
   26bcc:	beq	26c0c <myhtml_tree_element_in_scope_by_node@@Base+0x64>
   26bd0:	ldr	r3, [r4, #-4]
   26bd4:	ldr	r0, [r6, #28]
   26bd8:	sub	r5, r5, #1
   26bdc:	ldr	r1, [r3, #4]
   26be0:	bl	10a24 <myhtml_tag_get_by_id@plt>
   26be4:	ldr	r3, [r4, #-4]!
   26be8:	cmp	r7, r3
   26bec:	beq	26c20 <myhtml_tree_element_in_scope_by_node@@Base+0x78>
   26bf0:	ldr	r3, [r3, #8]
   26bf4:	cmp	r8, #128	; 0x80
   26bf8:	add	r3, r3, #4
   26bfc:	ldr	r3, [r0, r3, lsl #2]
   26c00:	bne	26c14 <myhtml_tree_element_in_scope_by_node@@Base+0x6c>
   26c04:	tst	r3, #128	; 0x80
   26c08:	bne	26bc8 <myhtml_tree_element_in_scope_by_node@@Base+0x20>
   26c0c:	mov	r0, #0
   26c10:	pop	{r4, r5, r6, r7, r8, pc}
   26c14:	tst	r8, r3
   26c18:	beq	26bc8 <myhtml_tree_element_in_scope_by_node@@Base+0x20>
   26c1c:	b	26c0c <myhtml_tree_element_in_scope_by_node@@Base+0x64>
   26c20:	mov	r0, #1
   26c24:	pop	{r4, r5, r6, r7, r8, pc}

00026c28 <myhtml_tree_list_init@@Base>:
   26c28:	push	{r4, lr}
   26c2c:	mov	r0, #12
   26c30:	bl	10c94 <mycore_malloc@plt>
   26c34:	mov	r3, #0
   26c38:	str	r3, [r0, #4]
   26c3c:	mov	r3, #4096	; 0x1000
   26c40:	mov	r4, r0
   26c44:	str	r3, [r0, #8]
   26c48:	mov	r0, #16384	; 0x4000
   26c4c:	bl	10c94 <mycore_malloc@plt>
   26c50:	str	r0, [r4]
   26c54:	mov	r0, r4
   26c58:	pop	{r4, pc}

00026c5c <myhtml_tree_list_clean@@Base>:
   26c5c:	mov	r3, #0
   26c60:	str	r3, [r0, #4]
   26c64:	bx	lr

00026c68 <myhtml_tree_list_destroy@@Base>:
   26c68:	push	{r4, r5, r6, lr}
   26c6c:	subs	r4, r0, #0
   26c70:	beq	26c9c <myhtml_tree_list_destroy@@Base+0x34>
   26c74:	ldr	r0, [r4]
   26c78:	mov	r5, r1
   26c7c:	cmp	r0, #0
   26c80:	beq	26c88 <myhtml_tree_list_destroy@@Base+0x20>
   26c84:	bl	10dcc <mycore_free@plt>
   26c88:	cmp	r5, #0
   26c8c:	beq	26c9c <myhtml_tree_list_destroy@@Base+0x34>
   26c90:	mov	r0, r4
   26c94:	bl	10dcc <mycore_free@plt>
   26c98:	mov	r4, #0
   26c9c:	mov	r0, r4
   26ca0:	pop	{r4, r5, r6, pc}

00026ca4 <myhtml_tree_list_append@@Base>:
   26ca4:	push	{r4, r5, r6, lr}
   26ca8:	mov	r5, r1
   26cac:	ldr	r3, [r0, #4]
   26cb0:	ldr	r1, [r0, #8]
   26cb4:	mov	r4, r0
   26cb8:	cmp	r3, r1
   26cbc:	bcc	26cdc <myhtml_tree_list_append@@Base+0x38>
   26cc0:	lsl	r3, r1, #1
   26cc4:	str	r3, [r0, #8]
   26cc8:	lsl	r1, r1, #3
   26ccc:	ldr	r0, [r0]
   26cd0:	bl	fbd8 <mycore_realloc@plt>
   26cd4:	cmp	r0, #0
   26cd8:	strne	r0, [r4]
   26cdc:	ldr	r2, [r4, #4]
   26ce0:	ldr	r3, [r4]
   26ce4:	str	r5, [r3, r2, lsl #2]
   26ce8:	ldr	r3, [r4, #4]
   26cec:	add	r3, r3, #1
   26cf0:	str	r3, [r4, #4]
   26cf4:	pop	{r4, r5, r6, pc}

00026cf8 <myhtml_tree_list_insert_by_index@@Base>:
   26cf8:	push	{r4, r5, r6, r7, r8, lr}
   26cfc:	mov	r6, r1
   26d00:	ldr	r3, [r0, #4]
   26d04:	ldr	r1, [r0, #8]
   26d08:	mov	r4, r0
   26d0c:	cmp	r3, r1
   26d10:	mov	r7, r2
   26d14:	bcc	26d34 <myhtml_tree_list_insert_by_index@@Base+0x3c>
   26d18:	lsl	r3, r1, #1
   26d1c:	str	r3, [r0, #8]
   26d20:	lsl	r1, r1, #3
   26d24:	ldr	r0, [r0]
   26d28:	bl	fbd8 <mycore_realloc@plt>
   26d2c:	cmp	r0, #0
   26d30:	strne	r0, [r4]
   26d34:	ldr	r1, [r4, #4]
   26d38:	add	r3, r7, #1
   26d3c:	ldr	r0, [r4]
   26d40:	lsl	r3, r3, #2
   26d44:	sub	r2, r1, r7
   26d48:	sub	r5, r3, #4
   26d4c:	add	r1, r0, r5
   26d50:	lsl	r2, r2, #2
   26d54:	add	r0, r0, r3
   26d58:	bl	fe78 <memmove@plt>
   26d5c:	ldr	r3, [r4]
   26d60:	str	r6, [r3, r5]
   26d64:	ldr	r3, [r4, #4]
   26d68:	add	r3, r3, #1
   26d6c:	str	r3, [r4, #4]
   26d70:	pop	{r4, r5, r6, r7, r8, pc}

00026d74 <myhtml_tree_list_append_after_index@@Base>:
   26d74:	add	r2, r2, #1
   26d78:	b	102bc <myhtml_tree_list_insert_by_index@plt>

00026d7c <myhtml_tree_list_current_node@@Base>:
   26d7c:	ldr	r3, [r0, #4]
   26d80:	cmp	r3, #0
   26d84:	ldrne	r3, [r0, #4]
   26d88:	ldrne	r2, [r0]
   26d8c:	subne	r3, r3, #-1073741823	; 0xc0000001
   26d90:	ldrne	r0, [r2, r3, lsl #2]
   26d94:	moveq	r0, r3
   26d98:	bx	lr

00026d9c <myhtml_tree_open_elements_init@@Base>:
   26d9c:	b	1085c <myhtml_tree_list_init@plt>

00026da0 <myhtml_tree_open_elements_clean@@Base>:
   26da0:	ldr	r3, [r0, #128]	; 0x80
   26da4:	mov	r2, #0
   26da8:	str	r2, [r3, #4]
   26dac:	bx	lr

00026db0 <myhtml_tree_open_elements_destroy@@Base>:
   26db0:	mov	r1, #1
   26db4:	ldr	r0, [r0, #128]	; 0x80
   26db8:	b	106f4 <myhtml_tree_list_destroy@plt>

00026dbc <myhtml_tree_current_node@@Base>:
   26dbc:	ldr	r2, [r0, #128]	; 0x80
   26dc0:	ldr	r0, [r2, #4]
   26dc4:	cmp	r0, #0
   26dc8:	ldrne	r3, [r2, #4]
   26dcc:	ldrne	r2, [r2]
   26dd0:	subne	r3, r3, #-1073741823	; 0xc0000001
   26dd4:	ldrne	r0, [r2, r3, lsl #2]
   26dd8:	bx	lr

00026ddc <myhtml_tree_adjusted_current_node@@Base>:
   26ddc:	ldr	r3, [r0, #128]	; 0x80
   26de0:	ldr	r3, [r3, #4]
   26de4:	cmp	r3, #1
   26de8:	bne	26df8 <myhtml_tree_adjusted_current_node@@Base+0x1c>
   26dec:	ldr	r3, [r0, #88]	; 0x58
   26df0:	cmp	r3, #0
   26df4:	bne	26dfc <myhtml_tree_adjusted_current_node@@Base+0x20>
   26df8:	b	10628 <myhtml_tree_current_node@plt>
   26dfc:	mov	r0, r3
   26e00:	bx	lr

00026e04 <myhtml_tree_open_elements_append@@Base>:
   26e04:	ldr	r0, [r0, #128]	; 0x80
   26e08:	b	10220 <myhtml_tree_list_append@plt>

00026e0c <myhtml_tree_node_insert_root@@Base>:
   26e0c:	push	{r4, r5, r6, r7, r8, lr}
   26e10:	mov	r6, r1
   26e14:	mov	r5, r0
   26e18:	mov	r7, r2
   26e1c:	bl	ffe0 <myhtml_tree_node_create@plt>
   26e20:	cmp	r6, #0
   26e24:	moveq	r3, #65	; 0x41
   26e28:	ldrne	r3, [r6]
   26e2c:	mov	r4, r0
   26e30:	str	r3, [r0, #4]
   26e34:	str	r6, [r0, #32]
   26e38:	str	r7, [r0, #8]
   26e3c:	mov	r1, r0
   26e40:	ldr	r0, [r5, #84]	; 0x54
   26e44:	bl	106b8 <myhtml_tree_node_add_child@plt>
   26e48:	mov	r0, r5
   26e4c:	mov	r1, r4
   26e50:	bl	10988 <myhtml_tree_open_elements_append@plt>
   26e54:	str	r4, [r5, #96]	; 0x60
   26e58:	mov	r0, r4
   26e5c:	pop	{r4, r5, r6, r7, r8, pc}

00026e60 <myhtml_tree_open_elements_append_after_index@@Base>:
   26e60:	ldr	r0, [r0, #128]	; 0x80
   26e64:	b	109c4 <myhtml_tree_list_append_after_index@plt>

00026e68 <myhtml_tree_open_elements_pop@@Base>:
   26e68:	ldr	r3, [r0, #128]	; 0x80
   26e6c:	ldr	r2, [r3, #4]
   26e70:	cmp	r2, #0
   26e74:	ldrne	r2, [r3, #4]
   26e78:	subne	r2, r2, #1
   26e7c:	strne	r2, [r3, #4]
   26e80:	bx	lr

00026e84 <myhtml_tree_open_elements_remove@@Base>:
   26e84:	push	{r4, r5, r6, r7, r8, lr}
   26e88:	ldr	lr, [r0, #128]	; 0x80
   26e8c:	ldr	r3, [lr, #4]
   26e90:	ldr	r5, [lr]
   26e94:	sub	ip, r3, #-1073741823	; 0xc0000001
   26e98:	add	ip, r5, ip, lsl #2
   26e9c:	cmp	r3, #0
   26ea0:	bne	26ea8 <myhtml_tree_open_elements_remove@@Base+0x24>
   26ea4:	pop	{r4, r5, r6, r7, r8, pc}
   26ea8:	mov	r7, ip
   26eac:	sub	r6, r3, #1
   26eb0:	ldr	r2, [r7]
   26eb4:	sub	ip, ip, #4
   26eb8:	cmp	r2, r1
   26ebc:	bne	26ef0 <myhtml_tree_open_elements_remove@@Base+0x6c>
   26ec0:	ldr	r2, [lr, #4]
   26ec4:	mov	r4, r0
   26ec8:	sub	r2, r2, r6
   26ecc:	add	r1, r5, r3, lsl #2
   26ed0:	lsl	r2, r2, #2
   26ed4:	mov	r0, r7
   26ed8:	bl	fe78 <memmove@plt>
   26edc:	ldr	r2, [r4, #128]	; 0x80
   26ee0:	ldr	r3, [r2, #4]
   26ee4:	sub	r3, r3, #1
   26ee8:	str	r3, [r2, #4]
   26eec:	pop	{r4, r5, r6, r7, r8, pc}
   26ef0:	mov	r3, r6
   26ef4:	b	26e9c <myhtml_tree_open_elements_remove@@Base+0x18>

00026ef8 <myhtml_tree_open_elements_pop_until@@Base>:
   26ef8:	ldr	r0, [r0, #128]	; 0x80
   26efc:	push	{lr}		; (str lr, [sp, #-4]!)
   26f00:	ldr	lr, [r0]
   26f04:	ldr	ip, [r0, #4]
   26f08:	cmp	ip, #0
   26f0c:	bne	26f14 <myhtml_tree_open_elements_pop_until@@Base+0x1c>
   26f10:	pop	{pc}		; (ldr pc, [sp], #4)
   26f14:	ldr	ip, [r0, #4]
   26f18:	sub	ip, ip, #1
   26f1c:	str	ip, [r0, #4]
   26f20:	ldr	ip, [r0, #4]
   26f24:	ldr	ip, [lr, ip, lsl #2]
   26f28:	ldr	ip, [ip, #4]
   26f2c:	cmp	ip, r1
   26f30:	bne	26f04 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   26f34:	cmp	r2, #0
   26f38:	beq	26f50 <myhtml_tree_open_elements_pop_until@@Base+0x58>
   26f3c:	ldr	ip, [r0, #4]
   26f40:	ldr	ip, [lr, ip, lsl #2]
   26f44:	ldr	ip, [ip, #8]
   26f48:	cmp	r2, ip
   26f4c:	bne	26f04 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   26f50:	cmp	r3, #0
   26f54:	ldrne	r3, [r0, #4]
   26f58:	addne	r3, r3, #1
   26f5c:	strne	r3, [r0, #4]
   26f60:	pop	{pc}		; (ldr pc, [sp], #4)

00026f64 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   26f64:	ldr	r3, [r0, #128]	; 0x80
   26f68:	ldr	ip, [r3]
   26f6c:	ldr	r0, [r3, #4]
   26f70:	cmp	r0, #0
   26f74:	bne	26f7c <myhtml_tree_open_elements_pop_until_by_node@@Base+0x18>
   26f78:	bx	lr
   26f7c:	ldr	r0, [r3, #4]
   26f80:	sub	r0, r0, #1
   26f84:	str	r0, [r3, #4]
   26f88:	ldr	r0, [r3, #4]
   26f8c:	ldr	r0, [ip, r0, lsl #2]
   26f90:	cmp	r0, r1
   26f94:	bne	26f6c <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   26f98:	cmp	r2, #0
   26f9c:	ldrne	r2, [r3, #4]
   26fa0:	addne	r2, r2, #1
   26fa4:	strne	r2, [r3, #4]
   26fa8:	bx	lr

00026fac <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   26fac:	ldr	r3, [r0, #128]	; 0x80
   26fb0:	ldr	r0, [r3, #4]
   26fb4:	cmp	r0, #0
   26fb8:	bne	26fc0 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x14>
   26fbc:	bx	lr
   26fc0:	ldr	r0, [r3, #4]
   26fc4:	sub	r0, r0, #1
   26fc8:	str	r0, [r3, #4]
   26fcc:	ldr	r0, [r3, #4]
   26fd0:	cmp	r0, r1
   26fd4:	bne	26fb0 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   26fd8:	cmp	r2, #0
   26fdc:	ldrne	r2, [r3, #4]
   26fe0:	addne	r2, r2, #1
   26fe4:	strne	r2, [r3, #4]
   26fe8:	bx	lr

00026fec <myhtml_tree_open_elements_find_reverse@@Base>:
   26fec:	ldr	r3, [r0, #128]	; 0x80
   26ff0:	ldr	ip, [r3]
   26ff4:	ldr	r0, [r3, #4]
   26ff8:	cmp	r0, #0
   26ffc:	bne	27004 <myhtml_tree_open_elements_find_reverse@@Base+0x18>
   27000:	bx	lr
   27004:	sub	r0, r0, #1
   27008:	ldr	r3, [ip, r0, lsl #2]
   2700c:	cmp	r3, r1
   27010:	bne	26ff8 <myhtml_tree_open_elements_find_reverse@@Base+0xc>
   27014:	cmp	r2, #0
   27018:	strne	r0, [r2]
   2701c:	mov	r0, #1
   27020:	bx	lr

00027024 <myhtml_tree_open_elements_find@@Base>:
   27024:	ldr	r0, [r0, #128]	; 0x80
   27028:	push	{lr}		; (str lr, [sp, #-4]!)
   2702c:	mov	r3, #0
   27030:	ldr	lr, [r0]
   27034:	ldr	ip, [r0, #4]
   27038:	cmp	r3, ip
   2703c:	bcc	27048 <myhtml_tree_open_elements_find@@Base+0x24>
   27040:	mov	r0, #0
   27044:	pop	{pc}		; (ldr pc, [sp], #4)
   27048:	ldr	ip, [lr, r3, lsl #2]
   2704c:	cmp	ip, r1
   27050:	bne	27064 <myhtml_tree_open_elements_find@@Base+0x40>
   27054:	cmp	r2, #0
   27058:	strne	r3, [r2]
   2705c:	mov	r0, #1
   27060:	pop	{pc}		; (ldr pc, [sp], #4)
   27064:	add	r3, r3, #1
   27068:	b	27034 <myhtml_tree_open_elements_find@@Base+0x10>

0002706c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2706c:	ldr	r0, [r0, #128]	; 0x80
   27070:	push	{r4, lr}
   27074:	ldr	ip, [r0, #4]
   27078:	ldr	lr, [r0]
   2707c:	cmp	ip, #0
   27080:	bne	2708c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   27084:	mov	r0, ip
   27088:	pop	{r4, pc}
   2708c:	sub	ip, ip, #1
   27090:	ldr	r0, [lr, ip, lsl #2]
   27094:	ldr	r4, [r0, #4]
   27098:	cmp	r4, r1
   2709c:	bne	2707c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x10>
   270a0:	cmp	r2, #0
   270a4:	beq	270b4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x48>
   270a8:	ldr	r4, [r0, #8]
   270ac:	cmp	r2, r4
   270b0:	bne	2707c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x10>
   270b4:	cmp	r3, #0
   270b8:	strne	ip, [r3]
   270bc:	pop	{r4, pc}

000270c0 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   270c0:	push	{r4, r5, lr}
   270c4:	mov	ip, #0
   270c8:	ldr	lr, [r0, #128]	; 0x80
   270cc:	ldr	r4, [lr]
   270d0:	ldr	r0, [lr, #4]
   270d4:	cmp	ip, r0
   270d8:	bcc	270e4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x24>
   270dc:	mov	r0, #0
   270e0:	pop	{r4, r5, pc}
   270e4:	ldr	r0, [r4, ip, lsl #2]
   270e8:	ldr	r5, [r0, #4]
   270ec:	cmp	r5, r1
   270f0:	bne	27114 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x54>
   270f4:	cmp	r2, #0
   270f8:	bne	27108 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x48>
   270fc:	cmp	r3, #0
   27100:	bne	2711c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x5c>
   27104:	pop	{r4, r5, pc}
   27108:	ldr	r5, [r0, #8]
   2710c:	cmp	r2, r5
   27110:	beq	270fc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x3c>
   27114:	add	ip, ip, #1
   27118:	b	270d0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x10>
   2711c:	str	ip, [r3]
   27120:	pop	{r4, r5, pc}

00027124 <myhtml_tree_generate_implied_end_tags@@Base>:
   27124:	ldr	r3, [r0, #128]	; 0x80
   27128:	ldr	r3, [r3, #4]
   2712c:	cmp	r3, #0
   27130:	bne	271d0 <myhtml_tree_generate_implied_end_tags@@Base+0xac>
   27134:	bx	lr
   27138:	mov	r0, r4
   2713c:	bl	10628 <myhtml_tree_current_node@plt>
   27140:	ldr	r3, [r0, #4]
   27144:	cmp	r3, #97	; 0x61
   27148:	bhi	27180 <myhtml_tree_generate_implied_end_tags@@Base+0x5c>
   2714c:	cmp	r3, #96	; 0x60
   27150:	bcs	27198 <myhtml_tree_generate_implied_end_tags@@Base+0x74>
   27154:	cmp	r3, #44	; 0x2c
   27158:	beq	27198 <myhtml_tree_generate_implied_end_tags@@Base+0x74>
   2715c:	bhi	2716c <myhtml_tree_generate_implied_end_tags@@Base+0x48>
   27160:	cmp	r3, #36	; 0x24
   27164:	beq	27198 <myhtml_tree_generate_implied_end_tags@@Base+0x74>
   27168:	pop	{r4, r5, r6, pc}
   2716c:	cmp	r3, #77	; 0x4d
   27170:	beq	27198 <myhtml_tree_generate_implied_end_tags@@Base+0x74>
   27174:	cmp	r3, #85	; 0x55
   27178:	beq	27198 <myhtml_tree_generate_implied_end_tags@@Base+0x74>
   2717c:	pop	{r4, r5, r6, pc}
   27180:	cmp	r3, #99	; 0x63
   27184:	beq	27198 <myhtml_tree_generate_implied_end_tags@@Base+0x74>
   27188:	popcc	{r4, r5, r6, pc}
   2718c:	sub	r2, r3, #105	; 0x69
   27190:	cmp	r2, #3
   27194:	pophi	{r4, r5, r6, pc}
   27198:	cmp	r6, r3
   2719c:	bne	271b4 <myhtml_tree_generate_implied_end_tags@@Base+0x90>
   271a0:	cmp	r5, #0
   271a4:	popeq	{r4, r5, r6, pc}
   271a8:	ldr	r3, [r0, #8]
   271ac:	cmp	r5, r3
   271b0:	popeq	{r4, r5, r6, pc}
   271b4:	mov	r0, r4
   271b8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   271bc:	ldr	r3, [r4, #128]	; 0x80
   271c0:	ldr	r3, [r3, #4]
   271c4:	cmp	r3, #0
   271c8:	bne	27138 <myhtml_tree_generate_implied_end_tags@@Base+0x14>
   271cc:	pop	{r4, r5, r6, pc}
   271d0:	push	{r4, r5, r6, lr}
   271d4:	mov	r4, r0
   271d8:	mov	r6, r1
   271dc:	mov	r5, r2
   271e0:	b	271bc <myhtml_tree_generate_implied_end_tags@@Base+0x98>

000271e4 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   271e4:	ldr	r3, [r0, #128]	; 0x80
   271e8:	ldr	r3, [r3, #4]
   271ec:	cmp	r3, #0
   271f0:	bne	272c4 <myhtml_tree_generate_all_implied_end_tags@@Base+0xe0>
   271f4:	bx	lr
   271f8:	mov	r0, r4
   271fc:	bl	10628 <myhtml_tree_current_node@plt>
   27200:	ldr	r3, [r0, #4]
   27204:	cmp	r3, #99	; 0x63
   27208:	beq	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   2720c:	bhi	27288 <myhtml_tree_generate_all_implied_end_tags@@Base+0xa4>
   27210:	cmp	r3, #44	; 0x2c
   27214:	beq	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   27218:	bhi	2726c <myhtml_tree_generate_all_implied_end_tags@@Base+0x88>
   2721c:	cmp	r3, #32
   27220:	beq	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   27224:	cmp	r3, #36	; 0x24
   27228:	beq	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   2722c:	cmp	r3, #27
   27230:	popne	{r4, r5, r6, pc}
   27234:	cmp	r3, r6
   27238:	bne	27250 <myhtml_tree_generate_all_implied_end_tags@@Base+0x6c>
   2723c:	cmp	r5, #0
   27240:	popeq	{r4, r5, r6, pc}
   27244:	ldr	r3, [r0, #8]
   27248:	cmp	r5, r3
   2724c:	popeq	{r4, r5, r6, pc}
   27250:	mov	r0, r4
   27254:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   27258:	ldr	r3, [r4, #128]	; 0x80
   2725c:	ldr	r3, [r3, #4]
   27260:	cmp	r3, #0
   27264:	bne	271f8 <myhtml_tree_generate_all_implied_end_tags@@Base+0x14>
   27268:	pop	{r4, r5, r6, pc}
   2726c:	cmp	r3, #77	; 0x4d
   27270:	beq	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   27274:	popcc	{r4, r5, r6, pc}
   27278:	sub	r2, r3, #96	; 0x60
   2727c:	cmp	r2, #1
   27280:	bls	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   27284:	pop	{r4, r5, r6, pc}
   27288:	cmp	r3, #127	; 0x7f
   2728c:	bhi	272a8 <myhtml_tree_generate_all_implied_end_tags@@Base+0xc4>
   27290:	cmp	r3, #126	; 0x7e
   27294:	bcs	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   27298:	sub	r2, r3, #105	; 0x69
   2729c:	cmp	r2, #3
   272a0:	bls	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   272a4:	pop	{r4, r5, r6, pc}
   272a8:	cmp	r3, #130	; 0x82
   272ac:	popcc	{r4, r5, r6, pc}
   272b0:	cmp	r3, #132	; 0x84
   272b4:	bls	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   272b8:	cmp	r3, #135	; 0x87
   272bc:	beq	27234 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   272c0:	pop	{r4, r5, r6, pc}
   272c4:	push	{r4, r5, r6, lr}
   272c8:	mov	r4, r0
   272cc:	mov	r6, r1
   272d0:	mov	r5, r2
   272d4:	b	27258 <myhtml_tree_generate_all_implied_end_tags@@Base+0x74>

000272d8 <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   272d8:	ldr	r3, [r0, #128]	; 0x80
   272dc:	ldr	r2, [r3, #4]
   272e0:	cmp	r2, #0
   272e4:	bxeq	lr
   272e8:	ldr	r2, [r3, #4]
   272ec:	ldr	ip, [r3]
   272f0:	push	{r4, lr}
   272f4:	mov	r4, #0
   272f8:	cmp	r2, #0
   272fc:	bne	27308 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x30>
   27300:	str	r2, [r0, #168]	; 0xa8
   27304:	pop	{r4, pc}
   27308:	sub	r2, r2, #1
   2730c:	cmp	r2, #0
   27310:	ldr	r3, [ip, r2, lsl #2]
   27314:	movne	r1, r4
   27318:	bne	2732c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x54>
   2731c:	ldr	lr, [r0, #88]	; 0x58
   27320:	mov	r1, #1
   27324:	cmp	lr, #0
   27328:	movne	r3, lr
   2732c:	ldr	lr, [r3, #8]
   27330:	cmp	lr, #1
   27334:	beq	27348 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x70>
   27338:	cmp	r1, #0
   2733c:	beq	272f8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x20>
   27340:	mov	r3, #6
   27344:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27348:	ldr	r3, [r3, #4]
   2734c:	cmp	r3, #114	; 0x72
   27350:	bne	27394 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xbc>
   27354:	cmp	r1, #0
   27358:	beq	27368 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x90>
   2735c:	mov	r3, #15
   27360:	str	r3, [r0, #168]	; 0xa8
   27364:	pop	{r4, pc}
   27368:	cmp	r2, #0
   2736c:	beq	2735c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   27370:	sub	r2, r2, #1
   27374:	ldr	r3, [ip, r2, lsl #2]
   27378:	ldr	r3, [r3, #4]
   2737c:	cmp	r3, #128	; 0x80
   27380:	beq	2735c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   27384:	cmp	r3, #125	; 0x7d
   27388:	bne	27368 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x90>
   2738c:	mov	r3, #16
   27390:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27394:	cmp	r3, #125	; 0x7d
   27398:	beq	27458 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x180>
   2739c:	bhi	273e4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x10c>
   273a0:	cmp	r3, #32
   273a4:	beq	27450 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x178>
   273a8:	bhi	273c4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xec>
   273ac:	cmp	r3, #23
   273b0:	beq	27340 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x68>
   273b4:	cmp	r3, #27
   273b8:	bne	27338 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x60>
   273bc:	mov	r3, #10
   273c0:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   273c4:	cmp	r3, #61	; 0x3d
   273c8:	beq	27460 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x188>
   273cc:	cmp	r3, #65	; 0x41
   273d0:	beq	27470 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x198>
   273d4:	cmp	r3, #54	; 0x36
   273d8:	bne	27338 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x60>
   273dc:	mov	r3, #19
   273e0:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   273e4:	cmp	r3, #130	; 0x82
   273e8:	beq	27448 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x170>
   273ec:	bhi	2741c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x144>
   273f0:	cmp	r3, #127	; 0x7f
   273f4:	beq	27438 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x160>
   273f8:	bcc	27448 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x170>
   273fc:	cmp	r3, #128	; 0x80
   27400:	bne	27338 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x60>
   27404:	ldr	r2, [r0, #140]	; 0x8c
   27408:	ldr	r3, [r2, #4]
   2740c:	ldr	r2, [r2]
   27410:	sub	r3, r3, #-1073741823	; 0xc0000001
   27414:	ldr	r3, [r2, r3, lsl #2]
   27418:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   2741c:	cmp	r3, #132	; 0x84
   27420:	beq	27448 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x170>
   27424:	bcc	27438 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x160>
   27428:	cmp	r3, #135	; 0x87
   2742c:	bne	27338 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x60>
   27430:	mov	r3, #13
   27434:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27438:	cmp	r1, #0
   2743c:	moveq	r3, #14
   27440:	bne	27340 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x68>
   27444:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27448:	mov	r3, #12
   2744c:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27450:	mov	r3, #11
   27454:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27458:	mov	r3, #8
   2745c:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27460:	cmp	r1, #0
   27464:	moveq	r3, #3
   27468:	bne	27340 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x68>
   2746c:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>
   27470:	ldr	r3, [r0, #92]	; 0x5c
   27474:	cmp	r3, #0
   27478:	movne	r3, #5
   2747c:	moveq	r3, #2
   27480:	b	27360 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x88>

00027484 <myhtml_tree_active_formatting_init@@Base>:
   27484:	b	1085c <myhtml_tree_list_init@plt>

00027488 <myhtml_tree_active_formatting_clean@@Base>:
   27488:	ldr	r3, [r0, #124]	; 0x7c
   2748c:	mov	r2, #0
   27490:	str	r2, [r3, #4]
   27494:	bx	lr

00027498 <myhtml_tree_active_formatting_destroy@@Base>:
   27498:	mov	r1, #1
   2749c:	ldr	r0, [r0, #124]	; 0x7c
   274a0:	b	106f4 <myhtml_tree_list_destroy@plt>

000274a4 <myhtml_tree_active_formatting_is_marker@@Base>:
   274a4:	ldr	r3, [r0]
   274a8:	ldr	r3, [r3, #36]	; 0x24
   274ac:	cmp	r3, r1
   274b0:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274b4:	ldr	r3, [r1, #4]
   274b8:	cmp	r3, #83	; 0x53
   274bc:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274c0:	bhi	274e4 <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   274c4:	cmp	r3, #25
   274c8:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274cc:	cmp	r3, #27
   274d0:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274d4:	cmp	r3, #9
   274d8:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274dc:	mov	r0, #0
   274e0:	bx	lr
   274e4:	cmp	r3, #127	; 0x7f
   274e8:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274ec:	cmp	r3, #131	; 0x83
   274f0:	beq	274fc <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   274f4:	cmp	r3, #94	; 0x5e
   274f8:	b	274d8 <myhtml_tree_active_formatting_is_marker@@Base+0x34>
   274fc:	mov	r0, #1
   27500:	bx	lr

00027504 <myhtml_tree_active_formatting_append@@Base>:
   27504:	ldr	r0, [r0, #124]	; 0x7c
   27508:	b	10220 <myhtml_tree_list_append@plt>

0002750c <myhtml_tree_active_formatting_pop@@Base>:
   2750c:	ldr	r3, [r0, #124]	; 0x7c
   27510:	ldr	r2, [r3, #4]
   27514:	cmp	r2, #0
   27518:	ldrne	r2, [r3, #4]
   2751c:	subne	r2, r2, #1
   27520:	strne	r2, [r3, #4]
   27524:	bx	lr

00027528 <myhtml_tree_active_formatting_remove@@Base>:
   27528:	push	{r4, r5, r6, r7, r8, lr}
   2752c:	ldr	lr, [r0, #124]	; 0x7c
   27530:	ldr	r3, [lr, #4]
   27534:	ldr	r5, [lr]
   27538:	sub	ip, r3, #-1073741823	; 0xc0000001
   2753c:	add	ip, r5, ip, lsl #2
   27540:	cmp	r3, #0
   27544:	bne	2754c <myhtml_tree_active_formatting_remove@@Base+0x24>
   27548:	pop	{r4, r5, r6, r7, r8, pc}
   2754c:	mov	r7, ip
   27550:	sub	r6, r3, #1
   27554:	ldr	r2, [r7]
   27558:	sub	ip, ip, #4
   2755c:	cmp	r2, r1
   27560:	bne	27594 <myhtml_tree_active_formatting_remove@@Base+0x6c>
   27564:	ldr	r2, [lr, #4]
   27568:	mov	r4, r0
   2756c:	sub	r2, r2, r6
   27570:	add	r1, r5, r3, lsl #2
   27574:	lsl	r2, r2, #2
   27578:	mov	r0, r7
   2757c:	bl	fe78 <memmove@plt>
   27580:	ldr	r2, [r4, #124]	; 0x7c
   27584:	ldr	r3, [r2, #4]
   27588:	sub	r3, r3, #1
   2758c:	str	r3, [r2, #4]
   27590:	pop	{r4, r5, r6, r7, r8, pc}
   27594:	mov	r3, r6
   27598:	b	27540 <myhtml_tree_active_formatting_remove@@Base+0x18>

0002759c <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2759c:	ldr	r2, [r0, #124]	; 0x7c
   275a0:	push	{r4, lr}
   275a4:	mov	r4, r0
   275a8:	ldr	r0, [r2]
   275ac:	ldr	r2, [r2, #4]
   275b0:	lsl	r3, r1, #2
   275b4:	sub	r2, r2, r1
   275b8:	add	r1, r3, #4
   275bc:	lsl	r2, r2, #2
   275c0:	add	r1, r0, r1
   275c4:	add	r0, r0, r3
   275c8:	bl	fe78 <memmove@plt>
   275cc:	ldr	r2, [r4, #124]	; 0x7c
   275d0:	ldr	r3, [r2, #4]
   275d4:	sub	r3, r3, #1
   275d8:	str	r3, [r2, #4]
   275dc:	pop	{r4, pc}

000275e0 <myhtml_tree_active_formatting_append_with_check@@Base>:
   275e0:	ldr	r3, [r0, #124]	; 0x7c
   275e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   275e8:	mov	r5, r0
   275ec:	ldr	r4, [r3, #4]
   275f0:	ldr	r7, [r3]
   275f4:	cmp	r4, #0
   275f8:	mov	r6, r1
   275fc:	subne	r8, r4, #1
   27600:	moveq	r8, r4
   27604:	add	r7, r7, r4, lsl #2
   27608:	mov	r9, #0
   2760c:	cmp	r4, #0
   27610:	beq	2762c <myhtml_tree_active_formatting_append_with_check@@Base+0x4c>
   27614:	ldr	r1, [r7, #-4]!
   27618:	mov	r0, r5
   2761c:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   27620:	sub	r4, r4, #1
   27624:	cmp	r0, #0
   27628:	beq	27650 <myhtml_tree_active_formatting_append_with_check@@Base+0x70>
   2762c:	cmp	r9, #2
   27630:	bls	27640 <myhtml_tree_active_formatting_append_with_check@@Base+0x60>
   27634:	mov	r1, r8
   27638:	mov	r0, r5
   2763c:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   27640:	mov	r1, r6
   27644:	mov	r0, r5
   27648:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2764c:	b	100d0 <myhtml_tree_active_formatting_append@plt>
   27650:	ldr	r3, [r7]
   27654:	ldr	r1, [r3, #32]
   27658:	cmp	r1, #0
   2765c:	beq	2760c <myhtml_tree_active_formatting_append_with_check@@Base+0x2c>
   27660:	ldr	r3, [r6, #32]
   27664:	cmp	r3, #0
   27668:	beq	2760c <myhtml_tree_active_formatting_append_with_check@@Base+0x2c>
   2766c:	ldr	r0, [r5, #8]
   27670:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   27674:	ldr	r1, [r6, #32]
   27678:	ldr	r0, [r5, #8]
   2767c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   27680:	ldr	r3, [r7]
   27684:	ldr	r2, [r6, #8]
   27688:	ldr	r1, [r3, #8]
   2768c:	cmp	r1, r2
   27690:	bne	2760c <myhtml_tree_active_formatting_append_with_check@@Base+0x2c>
   27694:	ldr	r1, [r3, #4]
   27698:	ldr	r2, [r6, #4]
   2769c:	cmp	r1, r2
   276a0:	bne	2760c <myhtml_tree_active_formatting_append_with_check@@Base+0x2c>
   276a4:	ldr	r1, [r6, #32]
   276a8:	ldr	r0, [r3, #32]
   276ac:	bl	10b2c <myhtml_token_attr_compare@plt>
   276b0:	cmp	r0, #0
   276b4:	addne	r9, r9, #1
   276b8:	movne	r8, r4
   276bc:	b	2760c <myhtml_tree_active_formatting_append_with_check@@Base+0x2c>

000276c0 <myhtml_tree_active_formatting_current_node@@Base>:
   276c0:	ldr	r2, [r0, #124]	; 0x7c
   276c4:	ldr	r0, [r2, #4]
   276c8:	cmp	r0, #0
   276cc:	ldrne	r3, [r2, #4]
   276d0:	ldrne	r2, [r2]
   276d4:	subne	r3, r3, #-1073741823	; 0xc0000001
   276d8:	ldrne	r0, [r2, r3, lsl #2]
   276dc:	bx	lr

000276e0 <myhtml_tree_active_formatting_find@@Base>:
   276e0:	ldr	r3, [r0, #124]	; 0x7c
   276e4:	ldr	ip, [r3]
   276e8:	ldr	r0, [r3, #4]
   276ec:	cmp	r0, #0
   276f0:	bne	276f8 <myhtml_tree_active_formatting_find@@Base+0x18>
   276f4:	bx	lr
   276f8:	sub	r0, r0, #1
   276fc:	ldr	r3, [ip, r0, lsl #2]
   27700:	cmp	r3, r1
   27704:	bne	276ec <myhtml_tree_active_formatting_find@@Base+0xc>
   27708:	cmp	r2, #0
   2770c:	strne	r0, [r2]
   27710:	mov	r0, #1
   27714:	bx	lr

00027718 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   27718:	ldr	r3, [r0, #124]	; 0x7c
   2771c:	ldr	r2, [r3, #4]
   27720:	cmp	r2, #0
   27724:	bxeq	lr
   27728:	push	{r4, r5, r6, lr}
   2772c:	mov	r4, r0
   27730:	ldr	r5, [r3]
   27734:	ldr	r3, [r4, #124]	; 0x7c
   27738:	ldr	r2, [r3, #4]
   2773c:	cmp	r2, #0
   27740:	bne	27748 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x30>
   27744:	pop	{r4, r5, r6, pc}
   27748:	ldr	r2, [r3, #4]
   2774c:	mov	r0, r4
   27750:	sub	r2, r2, #1
   27754:	str	r2, [r3, #4]
   27758:	ldr	r3, [r3, #4]
   2775c:	ldr	r1, [r5, r3, lsl #2]
   27760:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   27764:	cmp	r0, #0
   27768:	beq	27734 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x1c>
   2776c:	pop	{r4, r5, r6, pc}

00027770 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   27770:	ldr	r3, [r0, #124]	; 0x7c
   27774:	push	{r4, r5, r6, r7, r8, lr}
   27778:	mov	r6, r0
   2777c:	ldr	r4, [r3, #4]
   27780:	ldr	r5, [r3]
   27784:	mov	r8, r1
   27788:	mov	r7, r2
   2778c:	add	r5, r5, r4, lsl #2
   27790:	cmp	r4, #0
   27794:	beq	277b0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x40>
   27798:	ldr	r1, [r5, #-4]!
   2779c:	mov	r0, r6
   277a0:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   277a4:	sub	r4, r4, #1
   277a8:	cmp	r0, #0
   277ac:	beq	277b8 <myhtml_tree_active_formatting_between_last_marker@@Base+0x48>
   277b0:	mov	r0, #0
   277b4:	pop	{r4, r5, r6, r7, r8, pc}
   277b8:	ldr	r0, [r5]
   277bc:	ldr	r3, [r0, #4]
   277c0:	cmp	r3, r8
   277c4:	bne	27790 <myhtml_tree_active_formatting_between_last_marker@@Base+0x20>
   277c8:	ldr	r3, [r0, #8]
   277cc:	cmp	r3, #1
   277d0:	bne	27790 <myhtml_tree_active_formatting_between_last_marker@@Base+0x20>
   277d4:	cmp	r7, #0
   277d8:	strne	r4, [r7]
   277dc:	pop	{r4, r5, r6, r7, r8, pc}

000277e0 <myhtml_tree_appropriate_place_inserting@@Base>:
   277e0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   277e4:	mov	r3, #0
   277e8:	subs	r4, r1, #0
   277ec:	mov	r5, r0
   277f0:	mov	r7, r2
   277f4:	str	r3, [r2]
   277f8:	bne	27804 <myhtml_tree_appropriate_place_inserting@@Base+0x24>
   277fc:	bl	10628 <myhtml_tree_current_node@plt>
   27800:	mov	r4, r0
   27804:	ldrb	r3, [r5, #188]	; 0xbc
   27808:	cmp	r3, #0
   2780c:	beq	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   27810:	ldr	r6, [r4, #8]
   27814:	cmp	r6, #1
   27818:	bne	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   2781c:	ldr	r3, [r4, #4]
   27820:	sub	r3, r3, #125	; 0x7d
   27824:	cmp	r3, #10
   27828:	bhi	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   2782c:	ldr	r2, [pc, #176]	; 278e4 <myhtml_tree_appropriate_place_inserting@@Base+0x104>
   27830:	ands	r3, r2, r6, lsl r3
   27834:	beq	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   27838:	mov	r3, sp
   2783c:	mov	r2, r6
   27840:	mov	r1, #128	; 0x80
   27844:	mov	r0, r5
   27848:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2784c:	add	r3, sp, #4
   27850:	mov	r2, r6
   27854:	mov	r1, #125	; 0x7d
   27858:	mov	r4, r0
   2785c:	mov	r0, r5
   27860:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   27864:	cmp	r4, #0
   27868:	beq	2788c <myhtml_tree_appropriate_place_inserting@@Base+0xac>
   2786c:	cmp	r0, #0
   27870:	beq	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   27874:	ldm	sp, {r2, r3}
   27878:	cmp	r2, r3
   2787c:	bls	278a0 <myhtml_tree_appropriate_place_inserting@@Base+0xc0>
   27880:	mov	r0, r4
   27884:	add	sp, sp, #12
   27888:	pop	{r4, r5, r6, r7, pc}
   2788c:	cmp	r0, #0
   27890:	ldreq	r3, [r5, #128]	; 0x80
   27894:	ldreq	r3, [r3]
   27898:	ldreq	r4, [r3]
   2789c:	beq	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   278a0:	ldr	r3, [r0, #24]
   278a4:	cmp	r3, #0
   278a8:	beq	278cc <myhtml_tree_appropriate_place_inserting@@Base+0xec>
   278ac:	ldr	r4, [r0, #12]
   278b0:	cmp	r4, #0
   278b4:	movne	r3, #2
   278b8:	moveq	r3, #1
   278bc:	strne	r3, [r7]
   278c0:	streq	r3, [r7]
   278c4:	moveq	r4, r0
   278c8:	b	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   278cc:	ldr	r2, [r5, #128]	; 0x80
   278d0:	ldr	r3, [sp, #4]
   278d4:	ldr	r2, [r2]
   278d8:	sub	r3, r3, #-1073741823	; 0xc0000001
   278dc:	ldr	r4, [r2, r3, lsl #2]
   278e0:	b	27880 <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   278e4:	andeq	r0, r0, r3, lsr #9

000278e8 <myhtml_tree_node_insert_by_token@@Base>:
   278e8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   278ec:	mov	r6, r1
   278f0:	mov	r5, r0
   278f4:	mov	r7, r2
   278f8:	bl	ffe0 <myhtml_tree_node_create@plt>
   278fc:	ldr	r3, [r6]
   27900:	add	r2, sp, #4
   27904:	mov	r1, #0
   27908:	mov	r4, r0
   2790c:	str	r3, [r0, #4]
   27910:	str	r6, [r0, #32]
   27914:	str	r7, [r0, #8]
   27918:	mov	r0, r5
   2791c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27920:	ldr	r2, [sp, #4]
   27924:	mov	r1, r4
   27928:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2792c:	mov	r0, r5
   27930:	mov	r1, r4
   27934:	bl	10988 <myhtml_tree_open_elements_append@plt>
   27938:	mov	r0, r4
   2793c:	add	sp, sp, #12
   27940:	pop	{r4, r5, r6, r7, pc}

00027944 <myhtml_tree_node_insert@@Base>:
   27944:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27948:	mov	r5, r0
   2794c:	mov	r7, r1
   27950:	mov	r6, r2
   27954:	bl	ffe0 <myhtml_tree_node_create@plt>
   27958:	mov	r1, #0
   2795c:	add	r2, sp, #4
   27960:	mov	r4, r0
   27964:	str	r1, [r0, #32]
   27968:	str	r7, [r0, #4]
   2796c:	str	r6, [r0, #8]
   27970:	mov	r0, r5
   27974:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27978:	ldr	r2, [sp, #4]
   2797c:	mov	r1, r4
   27980:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   27984:	mov	r0, r5
   27988:	mov	r1, r4
   2798c:	bl	10988 <myhtml_tree_open_elements_append@plt>
   27990:	mov	r0, r4
   27994:	add	sp, sp, #12
   27998:	pop	{r4, r5, r6, r7, pc}

0002799c <myhtml_tree_node_insert_comment@@Base>:
   2799c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   279a0:	mov	r7, r1
   279a4:	mov	r5, r2
   279a8:	mov	r6, r0
   279ac:	bl	ffe0 <myhtml_tree_node_create@plt>
   279b0:	mov	r3, #2
   279b4:	str	r3, [r0, #4]
   279b8:	mov	r3, #0
   279bc:	cmp	r5, r3
   279c0:	mov	r4, r0
   279c4:	str	r7, [r0, #32]
   279c8:	str	r3, [sp, #4]
   279cc:	bne	279e4 <myhtml_tree_node_insert_comment@@Base+0x48>
   279d0:	mov	r1, r5
   279d4:	add	r2, sp, #4
   279d8:	mov	r0, r6
   279dc:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   279e0:	mov	r5, r0
   279e4:	mov	r0, r5
   279e8:	ldr	r2, [sp, #4]
   279ec:	mov	r1, r4
   279f0:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   279f4:	ldr	r3, [r5, #8]
   279f8:	mov	r0, r4
   279fc:	str	r3, [r4, #8]
   27a00:	add	sp, sp, #12
   27a04:	pop	{r4, r5, r6, r7, pc}

00027a08 <myhtml_tree_node_insert_text@@Base>:
   27a08:	push	{r0, r1, r4, r5, r6, lr}
   27a0c:	mov	r6, r1
   27a10:	add	r2, sp, #4
   27a14:	mov	r1, #0
   27a18:	mov	r5, r0
   27a1c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27a20:	ldr	r3, [r5, #84]	; 0x54
   27a24:	cmp	r0, r3
   27a28:	moveq	r4, #0
   27a2c:	beq	27ac4 <myhtml_tree_node_insert_text@@Base+0xbc>
   27a30:	ldr	r3, [sp, #4]
   27a34:	mov	r4, r0
   27a38:	cmp	r3, #2
   27a3c:	bne	27a98 <myhtml_tree_node_insert_text@@Base+0x90>
   27a40:	ldr	r3, [r0, #4]
   27a44:	cmp	r3, #1
   27a48:	bne	27a60 <myhtml_tree_node_insert_text@@Base+0x58>
   27a4c:	ldr	r1, [r0, #32]
   27a50:	cmp	r1, #0
   27a54:	movne	r3, #0
   27a58:	movne	r2, r6
   27a5c:	bne	27abc <myhtml_tree_node_insert_text@@Base+0xb4>
   27a60:	mov	r0, r5
   27a64:	bl	ffe0 <myhtml_tree_node_create@plt>
   27a68:	mov	r3, #1
   27a6c:	ldr	r2, [sp, #4]
   27a70:	str	r3, [r0, #4]
   27a74:	ldr	r3, [r4, #8]
   27a78:	mov	r5, r0
   27a7c:	str	r6, [r0, #32]
   27a80:	str	r3, [r0, #8]
   27a84:	mov	r1, r0
   27a88:	mov	r0, r4
   27a8c:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   27a90:	mov	r4, r5
   27a94:	b	27ac4 <myhtml_tree_node_insert_text@@Base+0xbc>
   27a98:	cmp	r3, #1
   27a9c:	bne	27ad0 <myhtml_tree_node_insert_text@@Base+0xc8>
   27aa0:	ldr	r3, [r0, #4]
   27aa4:	cmp	r3, #1
   27aa8:	bne	27a60 <myhtml_tree_node_insert_text@@Base+0x58>
   27aac:	ldr	r2, [r0, #32]
   27ab0:	cmp	r2, #0
   27ab4:	beq	27a60 <myhtml_tree_node_insert_text@@Base+0x58>
   27ab8:	mov	r1, r6
   27abc:	mov	r0, r5
   27ac0:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   27ac4:	mov	r0, r4
   27ac8:	add	sp, sp, #8
   27acc:	pop	{r4, r5, r6, pc}
   27ad0:	ldr	r3, [r0, #28]
   27ad4:	cmp	r3, #0
   27ad8:	beq	27a60 <myhtml_tree_node_insert_text@@Base+0x58>
   27adc:	ldr	r2, [r3, #4]
   27ae0:	cmp	r2, #1
   27ae4:	bne	27a60 <myhtml_tree_node_insert_text@@Base+0x58>
   27ae8:	ldr	r1, [r3, #32]
   27aec:	cmp	r1, #0
   27af0:	beq	27a60 <myhtml_tree_node_insert_text@@Base+0x58>
   27af4:	mov	r3, #0
   27af8:	mov	r2, r6
   27afc:	mov	r0, r5
   27b00:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   27b04:	ldr	r4, [r4, #28]
   27b08:	b	27ac4 <myhtml_tree_node_insert_text@@Base+0xbc>

00027b0c <myhtml_tree_node_insert_by_node@@Base>:
   27b0c:	push	{r0, r1, r2, r4, r5, lr}
   27b10:	mov	r4, r1
   27b14:	add	r2, sp, #4
   27b18:	mov	r1, #0
   27b1c:	mov	r5, r0
   27b20:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27b24:	ldr	r2, [sp, #4]
   27b28:	mov	r1, r4
   27b2c:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   27b30:	mov	r0, r5
   27b34:	mov	r1, r4
   27b38:	bl	10988 <myhtml_tree_open_elements_append@plt>
   27b3c:	mov	r0, r4
   27b40:	add	sp, sp, #12
   27b44:	pop	{r4, r5, pc}

00027b48 <myhtml_tree_active_formatting_reconstruction@@Base>:
   27b48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27b4c:	ldr	r7, [r0, #124]	; 0x7c
   27b50:	ldr	r3, [r7, #4]
   27b54:	cmp	r3, #0
   27b58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   27b5c:	ldr	r4, [r7, #4]
   27b60:	ldr	r5, [r7]
   27b64:	sub	r4, r4, #1
   27b68:	mov	r6, r0
   27b6c:	ldr	r1, [r5, r4, lsl #2]
   27b70:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   27b74:	subs	r2, r0, #0
   27b78:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   27b7c:	ldr	r1, [r5, r4, lsl #2]
   27b80:	mov	r0, r6
   27b84:	bl	11048 <myhtml_tree_open_elements_find@plt>
   27b88:	subs	r8, r0, #0
   27b8c:	beq	27b98 <myhtml_tree_active_formatting_reconstruction@@Base+0x50>
   27b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27b94:	mov	r4, r9
   27b98:	cmp	r4, #0
   27b9c:	beq	27bd0 <myhtml_tree_active_formatting_reconstruction@@Base+0x88>
   27ba0:	sub	r9, r4, #1
   27ba4:	mov	r0, r6
   27ba8:	ldr	r1, [r5, r9, lsl #2]
   27bac:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   27bb0:	cmp	r0, #0
   27bb4:	bne	27bd0 <myhtml_tree_active_formatting_reconstruction@@Base+0x88>
   27bb8:	mov	r2, r8
   27bbc:	ldr	r1, [r5, r9, lsl #2]
   27bc0:	mov	r0, r6
   27bc4:	bl	11048 <myhtml_tree_open_elements_find@plt>
   27bc8:	cmp	r0, #0
   27bcc:	beq	27b94 <myhtml_tree_active_formatting_reconstruction@@Base+0x4c>
   27bd0:	add	r5, r5, r4, lsl #2
   27bd4:	ldr	r3, [r7, #4]
   27bd8:	cmp	r4, r3
   27bdc:	bcc	27be4 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   27be0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27be4:	ldr	r0, [r5]
   27be8:	bl	10fdc <myhtml_tree_node_clone@plt>
   27bec:	add	r4, r4, #1
   27bf0:	mov	r8, r0
   27bf4:	mov	r1, r0
   27bf8:	mov	r0, r6
   27bfc:	bl	1076c <myhtml_tree_node_insert_by_node@plt>
   27c00:	str	r8, [r5], #4
   27c04:	b	27bd4 <myhtml_tree_active_formatting_reconstruction@@Base+0x8c>

00027c08 <myhtml_tree_node_insert_foreign_element@@Base>:
   27c08:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27c0c:	mov	r7, r1
   27c10:	add	r2, sp, #4
   27c14:	mov	r1, #0
   27c18:	mov	r5, r0
   27c1c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27c20:	mov	r6, r0
   27c24:	mov	r0, r5
   27c28:	bl	ffe0 <myhtml_tree_node_create@plt>
   27c2c:	ldr	r3, [r7]
   27c30:	ldr	r2, [sp, #4]
   27c34:	str	r3, [r0, #4]
   27c38:	ldr	r3, [r6, #8]
   27c3c:	mov	r4, r0
   27c40:	str	r3, [r0, #8]
   27c44:	str	r7, [r0, #32]
   27c48:	mov	r1, r0
   27c4c:	mov	r0, r6
   27c50:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   27c54:	mov	r0, r5
   27c58:	mov	r1, r4
   27c5c:	bl	10988 <myhtml_tree_open_elements_append@plt>
   27c60:	mov	r0, r4
   27c64:	add	sp, sp, #12
   27c68:	pop	{r4, r5, r6, r7, pc}

00027c6c <myhtml_tree_node_insert_html_element@@Base>:
   27c6c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27c70:	mov	r6, r1
   27c74:	add	r2, sp, #4
   27c78:	mov	r1, #0
   27c7c:	mov	r5, r0
   27c80:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27c84:	mov	r7, r0
   27c88:	mov	r0, r5
   27c8c:	bl	ffe0 <myhtml_tree_node_create@plt>
   27c90:	ldr	r3, [r6]
   27c94:	ldr	r2, [sp, #4]
   27c98:	str	r3, [r0, #4]
   27c9c:	mov	r3, #1
   27ca0:	mov	r4, r0
   27ca4:	str	r3, [r0, #8]
   27ca8:	str	r6, [r0, #32]
   27cac:	mov	r1, r0
   27cb0:	mov	r0, r7
   27cb4:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   27cb8:	mov	r0, r5
   27cbc:	mov	r1, r4
   27cc0:	bl	10988 <myhtml_tree_open_elements_append@plt>
   27cc4:	mov	r0, r4
   27cc8:	add	sp, sp, #12
   27ccc:	pop	{r4, r5, r6, r7, pc}

00027cd0 <myhtml_tree_adoption_agency_algorithm@@Base>:
   27cd0:	ldr	r1, [r0, #128]	; 0x80
   27cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27cd8:	sub	sp, sp, #68	; 0x44
   27cdc:	ldr	r3, [r1, #4]
   27ce0:	cmp	r3, #0
   27ce4:	bne	27cf0 <myhtml_tree_adoption_agency_algorithm@@Base+0x20>
   27ce8:	mov	r3, #0
   27cec:	b	27d94 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   27cf0:	ldr	r3, [r1, #4]
   27cf4:	ldr	fp, [r1]
   27cf8:	sub	r3, r3, #1
   27cfc:	str	r2, [sp, #20]
   27d00:	ldr	r1, [fp, r3, lsl #2]
   27d04:	ldr	r2, [r0, #124]	; 0x7c
   27d08:	mov	r4, r0
   27d0c:	ldr	r3, [r1, #8]
   27d10:	ldr	r2, [r2]
   27d14:	cmp	r3, #1
   27d18:	str	r2, [sp, #24]
   27d1c:	bne	27d58 <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   27d20:	ldr	r3, [r1, #4]
   27d24:	ldr	r2, [sp, #20]
   27d28:	cmp	r3, r2
   27d2c:	bne	27d58 <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   27d30:	mov	r2, #0
   27d34:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   27d38:	subs	r3, r0, #0
   27d3c:	str	r3, [sp, #4]
   27d40:	bne	27d58 <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   27d44:	mov	r0, r4
   27d48:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   27d4c:	ldr	r0, [sp, #4]
   27d50:	add	sp, sp, #68	; 0x44
   27d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d58:	mov	r3, #8
   27d5c:	str	r3, [sp, #12]
   27d60:	add	r3, sp, #48	; 0x30
   27d64:	str	r3, [sp, #36]	; 0x24
   27d68:	add	r3, sp, #60	; 0x3c
   27d6c:	str	r3, [sp, #16]
   27d70:	mov	r3, #0
   27d74:	str	r3, [sp, #44]	; 0x2c
   27d78:	ldr	r3, [r4, #124]	; 0x7c
   27d7c:	ldr	r5, [r3, #4]
   27d80:	ldr	r6, [r3]
   27d84:	add	r6, r6, r5, lsl #2
   27d88:	cmp	r5, #0
   27d8c:	bne	27d9c <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   27d90:	mov	r3, #1
   27d94:	str	r3, [sp, #4]
   27d98:	b	27d4c <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   27d9c:	ldr	r1, [r6, #-4]!
   27da0:	mov	r0, r4
   27da4:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   27da8:	sub	r5, r5, #1
   27dac:	subs	r3, r0, #0
   27db0:	str	r3, [sp, #4]
   27db4:	bne	27ce8 <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27db8:	ldr	sl, [r6]
   27dbc:	ldr	r2, [sp, #20]
   27dc0:	ldr	r3, [sl, #4]
   27dc4:	cmp	r2, r3
   27dc8:	bne	27d88 <myhtml_tree_adoption_agency_algorithm@@Base+0xb8>
   27dcc:	ldr	r2, [sp, #36]	; 0x24
   27dd0:	mov	r1, sl
   27dd4:	mov	r0, r4
   27dd8:	str	r5, [sp, #44]	; 0x2c
   27ddc:	bl	11048 <myhtml_tree_open_elements_find@plt>
   27de0:	cmp	r0, #0
   27de4:	bne	27df8 <myhtml_tree_adoption_agency_algorithm@@Base+0x128>
   27de8:	mov	r1, sl
   27dec:	mov	r0, r4
   27df0:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   27df4:	b	27d4c <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   27df8:	mov	r1, #8
   27dfc:	mov	r0, sl
   27e00:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   27e04:	cmp	r0, #0
   27e08:	beq	27ce8 <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27e0c:	mov	r0, r4
   27e10:	bl	10628 <myhtml_tree_current_node@plt>
   27e14:	ldr	r3, [sp, #48]	; 0x30
   27e18:	str	r3, [sp, #52]	; 0x34
   27e1c:	ldr	r3, [r4, #128]	; 0x80
   27e20:	ldr	r2, [r3, #4]
   27e24:	ldr	r3, [sp, #52]	; 0x34
   27e28:	cmp	r2, r3
   27e2c:	bhi	27e4c <myhtml_tree_adoption_agency_algorithm@@Base+0x17c>
   27e30:	mov	r0, r4
   27e34:	bl	10628 <myhtml_tree_current_node@plt>
   27e38:	cmp	sl, r0
   27e3c:	mov	r0, r4
   27e40:	bne	27e84 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b4>
   27e44:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   27e48:	b	27de8 <myhtml_tree_adoption_agency_algorithm@@Base+0x118>
   27e4c:	ldr	r3, [fp, r3, lsl #2]
   27e50:	ldr	r0, [r4, #28]
   27e54:	ldr	r1, [r3, #4]
   27e58:	bl	10a24 <myhtml_tag_get_by_id@plt>
   27e5c:	ldr	r6, [sp, #52]	; 0x34
   27e60:	ldr	r9, [fp, r6, lsl #2]
   27e64:	ldr	r3, [r9, #8]
   27e68:	add	r3, r3, #4
   27e6c:	ldr	r3, [r0, r3, lsl #2]
   27e70:	tst	r3, #2
   27e74:	bne	28084 <myhtml_tree_adoption_agency_algorithm@@Base+0x3b4>
   27e78:	add	r6, r6, #1
   27e7c:	str	r6, [sp, #52]	; 0x34
   27e80:	b	27e1c <myhtml_tree_adoption_agency_algorithm@@Base+0x14c>
   27e84:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   27e88:	b	27e30 <myhtml_tree_adoption_agency_algorithm@@Base+0x160>
   27e8c:	cmp	r0, #0
   27e90:	bne	27f28 <myhtml_tree_adoption_agency_algorithm@@Base+0x258>
   27e94:	mov	r1, r5
   27e98:	mov	r0, r4
   27e9c:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   27ea0:	ldr	r3, [sp, #8]
   27ea4:	ldr	r2, [sp, #32]
   27ea8:	add	r3, r3, #1
   27eac:	mov	r1, r5
   27eb0:	mov	r0, r4
   27eb4:	str	r3, [sp, #8]
   27eb8:	bl	11048 <myhtml_tree_open_elements_find@plt>
   27ebc:	cmp	r0, #0
   27ec0:	streq	r6, [sp, #56]	; 0x38
   27ec4:	ldr	r6, [sp, #56]	; 0x38
   27ec8:	cmp	r6, #0
   27ecc:	beq	27d4c <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   27ed0:	sub	r6, r6, #1
   27ed4:	str	r6, [sp, #56]	; 0x38
   27ed8:	ldr	r5, [fp, r6, lsl #2]
   27edc:	cmp	r5, sl
   27ee0:	beq	27f80 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   27ee4:	ldr	r2, [sp, #16]
   27ee8:	mov	r1, r5
   27eec:	mov	r0, r4
   27ef0:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   27ef4:	ldr	r3, [sp, #8]
   27ef8:	cmp	r3, #3
   27efc:	movle	r3, #0
   27f00:	andgt	r3, r0, #1
   27f04:	cmp	r3, #0
   27f08:	beq	27e8c <myhtml_tree_adoption_agency_algorithm@@Base+0x1bc>
   27f0c:	ldr	r1, [sp, #60]	; 0x3c
   27f10:	mov	r0, r4
   27f14:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   27f18:	ldr	r3, [sp, #60]	; 0x3c
   27f1c:	cmp	r7, r3
   27f20:	subhi	r7, r7, #1
   27f24:	b	27ea0 <myhtml_tree_adoption_agency_algorithm@@Base+0x1d0>
   27f28:	mov	r0, r5
   27f2c:	bl	10fdc <myhtml_tree_node_clone@plt>
   27f30:	mov	r3, #1
   27f34:	ldr	r2, [sp, #24]
   27f38:	cmp	r8, r9
   27f3c:	str	r3, [r0, #8]
   27f40:	ldr	r3, [sp, #60]	; 0x3c
   27f44:	mov	r5, r0
   27f48:	addeq	r7, r3, #1
   27f4c:	str	r0, [r2, r3, lsl #2]
   27f50:	ldr	r2, [sp, #56]	; 0x38
   27f54:	str	r0, [fp, r2, lsl #2]
   27f58:	ldr	r3, [r8, #24]
   27f5c:	cmp	r3, #0
   27f60:	beq	27f6c <myhtml_tree_adoption_agency_algorithm@@Base+0x29c>
   27f64:	mov	r0, r8
   27f68:	bl	10df0 <myhtml_tree_node_remove@plt>
   27f6c:	mov	r1, r8
   27f70:	mov	r0, r5
   27f74:	bl	106b8 <myhtml_tree_node_add_child@plt>
   27f78:	mov	r8, r5
   27f7c:	b	27ea0 <myhtml_tree_adoption_agency_algorithm@@Base+0x1d0>
   27f80:	ldr	r3, [r8, #24]
   27f84:	cmp	r3, #0
   27f88:	beq	27f94 <myhtml_tree_adoption_agency_algorithm@@Base+0x2c4>
   27f8c:	mov	r0, r8
   27f90:	bl	10df0 <myhtml_tree_node_remove@plt>
   27f94:	ldr	r2, [sp, #16]
   27f98:	ldr	r1, [sp, #28]
   27f9c:	mov	r0, r4
   27fa0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   27fa4:	mov	r1, r8
   27fa8:	ldr	r2, [sp, #60]	; 0x3c
   27fac:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   27fb0:	mov	r0, r5
   27fb4:	bl	10fdc <myhtml_tree_node_clone@plt>
   27fb8:	ldr	r8, [r9, #20]
   27fbc:	mov	r3, #1
   27fc0:	mov	r6, r0
   27fc4:	str	r3, [r0, #8]
   27fc8:	cmp	r8, #0
   27fcc:	bne	28064 <myhtml_tree_adoption_agency_algorithm@@Base+0x394>
   27fd0:	mov	r1, r6
   27fd4:	mov	r0, r9
   27fd8:	bl	106b8 <myhtml_tree_node_add_child@plt>
   27fdc:	add	r2, sp, #44	; 0x2c
   27fe0:	mov	r1, r5
   27fe4:	mov	r0, r4
   27fe8:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   27fec:	cmp	r0, #0
   27ff0:	beq	27ce8 <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27ff4:	ldr	r1, [sp, #44]	; 0x2c
   27ff8:	mov	r0, r4
   27ffc:	cmp	r7, r1
   28000:	subhi	r7, r7, #1
   28004:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   28008:	mov	r2, r7
   2800c:	mov	r1, r6
   28010:	ldr	r0, [r4, #124]	; 0x7c
   28014:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   28018:	mov	r1, r5
   2801c:	mov	r0, r4
   28020:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   28024:	add	r2, sp, #52	; 0x34
   28028:	mov	r1, r9
   2802c:	mov	r0, r4
   28030:	bl	11048 <myhtml_tree_open_elements_find@plt>
   28034:	cmp	r0, #0
   28038:	beq	28050 <myhtml_tree_adoption_agency_algorithm@@Base+0x380>
   2803c:	ldr	r2, [sp, #52]	; 0x34
   28040:	mov	r1, r6
   28044:	add	r2, r2, #1
   28048:	ldr	r0, [r4, #128]	; 0x80
   2804c:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   28050:	ldr	r3, [sp, #12]
   28054:	subs	r3, r3, #1
   28058:	str	r3, [sp, #12]
   2805c:	bne	27d70 <myhtml_tree_adoption_agency_algorithm@@Base+0xa0>
   28060:	b	27ce8 <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   28064:	ldr	sl, [r8, #16]
   28068:	mov	r0, r8
   2806c:	bl	10df0 <myhtml_tree_node_remove@plt>
   28070:	mov	r1, r8
   28074:	mov	r0, r6
   28078:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2807c:	mov	r8, sl
   28080:	b	27fc8 <myhtml_tree_adoption_agency_algorithm@@Base+0x2f8>
   28084:	ldr	r3, [sp, #48]	; 0x30
   28088:	ldr	r7, [sp, #44]	; 0x2c
   2808c:	sub	r3, r3, #-1073741823	; 0xc0000001
   28090:	add	r7, r7, #1
   28094:	ldr	r3, [fp, r3, lsl #2]
   28098:	mov	r8, r9
   2809c:	str	r3, [sp, #28]
   280a0:	mov	r3, #0
   280a4:	str	r3, [sp, #8]
   280a8:	add	r3, sp, #56	; 0x38
   280ac:	mov	r5, r9
   280b0:	str	r3, [sp, #32]
   280b4:	b	27ea0 <myhtml_tree_adoption_agency_algorithm@@Base+0x1d0>

000280b8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   280b8:	mov	r3, #1
   280bc:	push	{r4, r5, r6, r7, r8, lr}
   280c0:	mov	r4, r0
   280c4:	str	r3, [r1]
   280c8:	ldr	r3, [r0, #40]	; 0x28
   280cc:	mov	r6, r1
   280d0:	ldrb	r3, [r3, #188]	; 0xbc
   280d4:	cmp	r3, #0
   280d8:	beq	28180 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc8>
   280dc:	ldr	r2, [r0, #8]
   280e0:	cmp	r2, #1
   280e4:	bne	28184 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xcc>
   280e8:	ldr	r3, [r0, #4]
   280ec:	sub	r3, r3, #125	; 0x7d
   280f0:	cmp	r3, #10
   280f4:	bhi	2817c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc4>
   280f8:	ldr	r1, [pc, #152]	; 28198 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe0>
   280fc:	ands	r3, r1, r2, lsl r3
   28100:	beq	2817c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc4>
   28104:	mov	r1, #128	; 0x80
   28108:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2810c:	mov	r1, #125	; 0x7d
   28110:	mov	r7, r0
   28114:	mov	r0, r4
   28118:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2811c:	cmp	r7, #0
   28120:	mov	r5, r0
   28124:	beq	2818c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   28128:	mov	r1, #125	; 0x7d
   2812c:	mov	r0, r7
   28130:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   28134:	subs	r0, r5, r0
   28138:	movne	r0, #1
   2813c:	cmp	r5, #0
   28140:	orreq	r0, r0, #1
   28144:	cmp	r0, #0
   28148:	movne	r3, #0
   2814c:	strne	r3, [r6]
   28150:	movne	r4, r7
   28154:	bne	28184 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xcc>
   28158:	ldr	r3, [r5, #24]
   2815c:	cmp	r3, #0
   28160:	beq	28184 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xcc>
   28164:	ldr	r4, [r5, #12]
   28168:	cmp	r4, #0
   2816c:	movne	r3, #2
   28170:	bne	28180 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc8>
   28174:	mov	r4, r5
   28178:	b	28184 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xcc>
   2817c:	mov	r3, #0
   28180:	str	r3, [r6]
   28184:	mov	r0, r4
   28188:	pop	{r4, r5, r6, r7, r8, pc}
   2818c:	cmp	r0, #0
   28190:	bne	28158 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa0>
   28194:	b	28184 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xcc>
   28198:	andeq	r0, r0, r3, lsr #9

0002819c <myhtml_tree_template_insertion_init@@Base>:
   2819c:	push	{r4, r5, r6, lr}
   281a0:	mov	r5, r0
   281a4:	mov	r0, #12
   281a8:	bl	10c94 <mycore_malloc@plt>
   281ac:	mov	r2, #0
   281b0:	mov	r3, #1024	; 0x400
   281b4:	mov	r4, r0
   281b8:	stmib	r0, {r2, r3}
   281bc:	mov	r0, #4096	; 0x1000
   281c0:	bl	10c94 <mycore_malloc@plt>
   281c4:	str	r0, [r4]
   281c8:	str	r4, [r5, #140]	; 0x8c
   281cc:	mov	r0, r4
   281d0:	pop	{r4, r5, r6, pc}

000281d4 <myhtml_tree_template_insertion_clean@@Base>:
   281d4:	ldr	r3, [r0, #140]	; 0x8c
   281d8:	mov	r2, #0
   281dc:	str	r2, [r3, #4]
   281e0:	bx	lr

000281e4 <myhtml_tree_template_insertion_destroy@@Base>:
   281e4:	ldr	r3, [r0, #140]	; 0x8c
   281e8:	cmp	r3, #0
   281ec:	beq	28220 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   281f0:	push	{r4, lr}
   281f4:	mov	r4, r0
   281f8:	ldr	r0, [r3]
   281fc:	cmp	r0, #0
   28200:	beq	28208 <myhtml_tree_template_insertion_destroy@@Base+0x24>
   28204:	bl	10dcc <mycore_free@plt>
   28208:	ldr	r0, [r4, #140]	; 0x8c
   2820c:	cmp	r0, #0
   28210:	beq	28218 <myhtml_tree_template_insertion_destroy@@Base+0x34>
   28214:	bl	10dcc <mycore_free@plt>
   28218:	mov	r0, #0
   2821c:	pop	{r4, pc}
   28220:	mov	r0, #0
   28224:	bx	lr

00028228 <myhtml_tree_template_insertion_append@@Base>:
   28228:	push	{r4, r5, r6, lr}
   2822c:	mov	r5, r1
   28230:	ldr	r4, [r0, #140]	; 0x8c
   28234:	ldr	r1, [r4, #8]
   28238:	ldr	r3, [r4, #4]
   2823c:	cmp	r3, r1
   28240:	bcc	28260 <myhtml_tree_template_insertion_append@@Base+0x38>
   28244:	lsl	r3, r1, #1
   28248:	str	r3, [r4, #8]
   2824c:	lsl	r1, r1, #3
   28250:	ldr	r0, [r4]
   28254:	bl	fbd8 <mycore_realloc@plt>
   28258:	cmp	r0, #0
   2825c:	strne	r0, [r4]
   28260:	ldm	r4, {r2, r3}
   28264:	str	r5, [r2, r3, lsl #2]
   28268:	add	r3, r3, #1
   2826c:	str	r3, [r4, #4]
   28270:	pop	{r4, r5, r6, pc}

00028274 <myhtml_tree_template_insertion_pop@@Base>:
   28274:	ldr	r2, [r0, #140]	; 0x8c
   28278:	ldr	r3, [r2, #4]
   2827c:	cmp	r3, #0
   28280:	subne	r3, r3, #1
   28284:	strne	r3, [r2, #4]
   28288:	bx	lr

0002828c <myhtml_tree_template_insertion_length@@Base>:
   2828c:	ldr	r3, [r0, #140]	; 0x8c
   28290:	ldr	r0, [r3, #4]
   28294:	bx	lr

00028298 <myhtml_tree_token_list_init@@Base>:
   28298:	push	{r4, lr}
   2829c:	mov	r0, #12
   282a0:	bl	10c94 <mycore_malloc@plt>
   282a4:	mov	r2, #0
   282a8:	mov	r3, #4096	; 0x1000
   282ac:	mov	r4, r0
   282b0:	stmib	r0, {r2, r3}
   282b4:	mov	r0, #16384	; 0x4000
   282b8:	bl	10c94 <mycore_malloc@plt>
   282bc:	str	r0, [r4]
   282c0:	mov	r0, r4
   282c4:	pop	{r4, pc}

000282c8 <myhtml_tree_token_list_clean@@Base>:
   282c8:	mov	r3, #0
   282cc:	str	r3, [r0, #4]
   282d0:	bx	lr

000282d4 <myhtml_tree_clean@@Base>:
   282d4:	push	{r4, r5, r6, lr}
   282d8:	mov	r4, r0
   282dc:	ldr	r6, [r0]
   282e0:	mov	r5, #0
   282e4:	ldr	r3, [r6, #20]
   282e8:	cmp	r5, r3
   282ec:	bcc	2842c <myhtml_tree_clean@@Base+0x158>
   282f0:	ldr	r1, [r4, #48]	; 0x30
   282f4:	ldr	r0, [r4, #12]
   282f8:	bl	10880 <mcobject_async_node_clean@plt>
   282fc:	ldr	r3, [r4, #8]
   28300:	ldr	r1, [r4, #40]	; 0x28
   28304:	ldr	r0, [r3, #4]
   28308:	bl	10880 <mcobject_async_node_clean@plt>
   2830c:	ldr	r3, [r4, #8]
   28310:	ldr	r1, [r4, #44]	; 0x2c
   28314:	ldr	r0, [r3, #8]
   28318:	bl	10880 <mcobject_async_node_clean@plt>
   2831c:	ldr	r0, [r4, #20]
   28320:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   28324:	ldr	r3, [r4]
   28328:	ldr	r1, [r4, #20]
   2832c:	ldr	r0, [r3, #4]
   28330:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   28334:	ldr	r3, [r4]
   28338:	ldr	r1, [r4, #20]
   2833c:	ldr	r0, [r3]
   28340:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   28344:	ldr	r0, [r4, #8]
   28348:	bl	105bc <myhtml_token_clean@plt>
   2834c:	mov	r0, r4
   28350:	bl	ffe0 <myhtml_tree_node_create@plt>
   28354:	mov	r0, r4
   28358:	bl	ffe0 <myhtml_tree_node_create@plt>
   2835c:	mov	r3, #0
   28360:	mov	r2, #2
   28364:	str	r2, [r4, #180]	; 0xb4
   28368:	str	r3, [r4, #88]	; 0x58
   2836c:	strb	r3, [r4, #108]	; 0x6c
   28370:	str	r3, [r4, #112]	; 0x70
   28374:	str	r3, [r4, #116]	; 0x74
   28378:	str	r3, [r4, #120]	; 0x78
   2837c:	str	r3, [r4, #96]	; 0x60
   28380:	str	r3, [r4, #100]	; 0x64
   28384:	str	r3, [r4, #92]	; 0x5c
   28388:	str	r3, [r4, #104]	; 0x68
   2838c:	str	r3, [r4, #160]	; 0xa0
   28390:	str	r3, [r4, #164]	; 0xa4
   28394:	str	r3, [r4, #168]	; 0xa8
   28398:	str	r3, [r4, #172]	; 0xac
   2839c:	str	r3, [r4, #176]	; 0xb0
   283a0:	str	r3, [r4, #60]	; 0x3c
   283a4:	strb	r3, [r4, #188]	; 0xbc
   283a8:	str	r3, [r4, #156]	; 0x9c
   283ac:	str	r3, [r4, #76]	; 0x4c
   283b0:	str	r3, [r4, #80]	; 0x50
   283b4:	str	r3, [r4, #192]	; 0xc0
   283b8:	str	r3, [r4, #68]	; 0x44
   283bc:	str	r3, [r4, #152]	; 0x98
   283c0:	str	r3, [r4, #196]	; 0xc4
   283c4:	str	r3, [r4, #200]	; 0xc8
   283c8:	str	r3, [r4, #204]	; 0xcc
   283cc:	str	r0, [r4, #84]	; 0x54
   283d0:	ldr	r0, [r4, #148]	; 0x94
   283d4:	bl	1046c <myhtml_stream_buffer_clean@plt>
   283d8:	mov	r0, r4
   283dc:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   283e0:	mov	r0, r4
   283e4:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   283e8:	ldr	r0, [r4, #132]	; 0x84
   283ec:	bl	1028c <myhtml_tree_list_clean@plt>
   283f0:	ldr	r0, [r4, #136]	; 0x88
   283f4:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   283f8:	mov	r0, r4
   283fc:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   28400:	ldr	r0, [r4, #72]	; 0x48
   28404:	bl	10f70 <mcobject_clean@plt>
   28408:	ldr	r0, [r4, #28]
   2840c:	bl	11078 <myhtml_tag_clean@plt>
   28410:	ldr	r0, [r4, #24]
   28414:	bl	fd64 <mythread_queue_clean@plt>
   28418:	ldr	r0, [r4, #8]
   2841c:	ldr	r1, [r0, #16]
   28420:	bl	10904 <myhtml_token_attr_create@plt>
   28424:	str	r0, [r4, #56]	; 0x38
   28428:	pop	{r4, r5, r6, pc}
   2842c:	ldr	r3, [r4, #144]	; 0x90
   28430:	ldr	r0, [r4, #4]
   28434:	ldr	r1, [r3, r5, lsl #2]
   28438:	bl	106e8 <mchar_async_node_clean@plt>
   2843c:	add	r5, r5, #1
   28440:	b	282e4 <myhtml_tree_clean@@Base+0x10>

00028444 <myhtml_tree_init@@Base>:
   28444:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   28448:	mov	r5, #0
   2844c:	str	r1, [r0]
   28450:	mov	r6, r1
   28454:	mov	r1, #512	; 0x200
   28458:	mov	r4, r0
   2845c:	str	r5, [sp]
   28460:	bl	11000 <myhtml_token_create@plt>
   28464:	cmp	r0, r5
   28468:	str	r0, [r4, #8]
   2846c:	ldreq	r0, [pc, #560]	; 286a4 <myhtml_tree_init@@Base+0x260>
   28470:	beq	284c4 <myhtml_tree_init@@Base+0x80>
   28474:	ldr	r0, [sp]
   28478:	str	r5, [r4, #208]	; 0xd0
   2847c:	cmp	r0, r5
   28480:	str	r5, [r4, #148]	; 0x94
   28484:	str	r5, [r4, #184]	; 0xb8
   28488:	str	r5, [r4, #36]	; 0x24
   2848c:	str	r5, [r4, #220]	; 0xdc
   28490:	str	r5, [r4, #224]	; 0xe0
   28494:	str	r5, [r4, #228]	; 0xe4
   28498:	str	r5, [r4, #232]	; 0xe8
   2849c:	str	r5, [r4, #236]	; 0xec
   284a0:	str	r5, [r4, #240]	; 0xf0
   284a4:	str	r5, [r4, #244]	; 0xf4
   284a8:	str	r5, [r4, #248]	; 0xf8
   284ac:	bne	284c4 <myhtml_tree_init@@Base+0x80>
   284b0:	bl	10a84 <mythread_queue_create@plt>
   284b4:	cmp	r0, r5
   284b8:	str	r0, [r4, #24]
   284bc:	bne	284cc <myhtml_tree_init@@Base+0x88>
   284c0:	mov	r0, #2
   284c4:	add	sp, sp, #8
   284c8:	pop	{r4, r5, r6, r7, r8, pc}
   284cc:	ldr	r1, [pc, #468]	; 286a8 <myhtml_tree_init@@Base+0x264>
   284d0:	bl	106ac <mythread_queue_init@plt>
   284d4:	cmp	r0, #0
   284d8:	str	r0, [sp]
   284dc:	bne	284c4 <myhtml_tree_init@@Base+0x80>
   284e0:	bl	1001c <mcobject_create@plt>
   284e4:	cmp	r0, #0
   284e8:	str	r0, [r4, #72]	; 0x48
   284ec:	ldreq	r0, [pc, #440]	; 286ac <myhtml_tree_init@@Base+0x268>
   284f0:	beq	284c4 <myhtml_tree_init@@Base+0x80>
   284f4:	mov	r2, #24
   284f8:	mov	r1, #256	; 0x100
   284fc:	bl	10778 <mcobject_init@plt>
   28500:	cmp	r0, #0
   28504:	str	r0, [sp]
   28508:	bne	284c4 <myhtml_tree_init@@Base+0x80>
   2850c:	bl	fd58 <mcobject_async_create@plt>
   28510:	cmp	r0, #0
   28514:	str	r0, [r4, #12]
   28518:	ldreq	r0, [pc, #400]	; 286b0 <myhtml_tree_init@@Base+0x26c>
   2851c:	beq	284c4 <myhtml_tree_init@@Base+0x80>
   28520:	mov	r3, #44	; 0x2c
   28524:	mov	r2, #1024	; 0x400
   28528:	mov	r1, #128	; 0x80
   2852c:	bl	fc80 <mcobject_async_init@plt>
   28530:	cmp	r0, #0
   28534:	str	r0, [sp, #4]
   28538:	ldrne	r0, [pc, #372]	; 286b4 <myhtml_tree_init@@Base+0x270>
   2853c:	bne	284c4 <myhtml_tree_init@@Base+0x80>
   28540:	bl	10160 <mchar_async_create@plt>
   28544:	str	r0, [r4, #4]
   28548:	mov	r0, r4
   2854c:	bl	10ac0 <myhtml_tree_active_formatting_init@plt>
   28550:	str	r0, [r4, #124]	; 0x7c
   28554:	mov	r0, r4
   28558:	bl	10bb0 <myhtml_tree_open_elements_init@plt>
   2855c:	str	r0, [r4, #128]	; 0x80
   28560:	bl	1085c <myhtml_tree_list_init@plt>
   28564:	str	r0, [r4, #132]	; 0x84
   28568:	bl	109b8 <myhtml_tree_token_list_init@plt>
   2856c:	str	r0, [r4, #136]	; 0x88
   28570:	mov	r0, r4
   28574:	bl	10cdc <myhtml_tree_template_insertion_init@plt>
   28578:	str	r0, [r4, #140]	; 0x8c
   2857c:	ldr	r0, [r4, #4]
   28580:	cmp	r0, #0
   28584:	beq	284c0 <myhtml_tree_init@@Base+0x7c>
   28588:	mov	r2, #20480	; 0x5000
   2858c:	mov	r1, #128	; 0x80
   28590:	bl	104a8 <mchar_async_init@plt>
   28594:	cmp	r0, #0
   28598:	str	r0, [sp]
   2859c:	bne	284c4 <myhtml_tree_init@@Base+0x80>
   285a0:	add	r5, sp, #4
   285a4:	mov	r1, r5
   285a8:	ldr	r0, [r4, #12]
   285ac:	bl	10a90 <mcobject_async_node_add@plt>
   285b0:	ldr	r3, [sp, #4]
   285b4:	cmp	r3, #0
   285b8:	str	r0, [r4, #48]	; 0x30
   285bc:	beq	285c8 <myhtml_tree_init@@Base+0x184>
   285c0:	ldr	r0, [pc, #240]	; 286b8 <myhtml_tree_init@@Base+0x274>
   285c4:	b	284c4 <myhtml_tree_init@@Base+0x80>
   285c8:	ldr	r3, [r4, #8]
   285cc:	mov	r1, r5
   285d0:	ldr	r0, [r3, #4]
   285d4:	bl	10a90 <mcobject_async_node_add@plt>
   285d8:	ldr	r3, [sp, #4]
   285dc:	cmp	r3, #0
   285e0:	str	r0, [r4, #40]	; 0x28
   285e4:	bne	285c0 <myhtml_tree_init@@Base+0x17c>
   285e8:	ldr	r3, [r4, #8]
   285ec:	mov	r1, r5
   285f0:	ldr	r0, [r3, #8]
   285f4:	bl	10a90 <mcobject_async_node_add@plt>
   285f8:	ldr	r5, [sp, #4]
   285fc:	cmp	r5, #0
   28600:	str	r0, [r4, #44]	; 0x2c
   28604:	bne	285c0 <myhtml_tree_init@@Base+0x17c>
   28608:	mov	r1, #4
   2860c:	ldr	r0, [r6, #20]
   28610:	bl	ff14 <mycore_calloc@plt>
   28614:	cmp	r0, #0
   28618:	str	r0, [r4, #144]	; 0x90
   2861c:	movne	r8, sp
   28620:	beq	284c0 <myhtml_tree_init@@Base+0x7c>
   28624:	ldr	r3, [r6, #20]
   28628:	ldr	r7, [r4, #144]	; 0x90
   2862c:	cmp	r5, r3
   28630:	bcc	28680 <myhtml_tree_init@@Base+0x23c>
   28634:	ldr	r3, [r7]
   28638:	str	r3, [r4, #52]	; 0x34
   2863c:	bl	fd94 <mcsync_create@plt>
   28640:	cmp	r0, #0
   28644:	str	r0, [r4, #16]
   28648:	beq	284c0 <myhtml_tree_init@@Base+0x7c>
   2864c:	bl	10868 <mcsync_init@plt>
   28650:	cmp	r0, #0
   28654:	bne	284c0 <myhtml_tree_init@@Base+0x7c>
   28658:	bl	10d30 <myhtml_tag_create@plt>
   2865c:	mov	r1, r0
   28660:	str	r0, [r4, #28]
   28664:	mov	r0, r4
   28668:	bl	10b5c <myhtml_tag_init@plt>
   2866c:	str	r0, [sp]
   28670:	mov	r0, r4
   28674:	bl	106d0 <myhtml_tree_clean@plt>
   28678:	ldr	r0, [sp]
   2867c:	b	284c4 <myhtml_tree_init@@Base+0x80>
   28680:	mov	r1, r8
   28684:	ldr	r0, [r4, #4]
   28688:	bl	10298 <mchar_async_node_add@plt>
   2868c:	str	r0, [r7, r5, lsl #2]
   28690:	ldr	r0, [sp]
   28694:	cmp	r0, #0
   28698:	bne	284c4 <myhtml_tree_init@@Base+0x80>
   2869c:	add	r5, r5, #1
   286a0:	b	28624 <myhtml_tree_init@@Base+0x1e0>
   286a4:	andeq	r9, r0, ip, lsr #2
   286a8:	ldrdeq	r2, [r0], -lr
   286ac:	strdeq	r9, [r0], -r8
   286b0:	strdeq	r9, [r0], -r5
   286b4:	strdeq	r9, [r0], -r6
   286b8:	strdeq	r9, [r0], -r7

000286bc <myhtml_tree_clean_all@@Base>:
   286bc:	push	{r4, lr}
   286c0:	mov	r4, r0
   286c4:	ldr	r0, [r0, #12]
   286c8:	bl	11054 <mcobject_async_clean@plt>
   286cc:	ldr	r0, [r4, #8]
   286d0:	bl	105bc <myhtml_token_clean@plt>
   286d4:	ldr	r0, [r4, #4]
   286d8:	bl	10bc8 <mchar_async_clean@plt>
   286dc:	mov	r0, r4
   286e0:	bl	ffe0 <myhtml_tree_node_create@plt>
   286e4:	mov	r0, r4
   286e8:	bl	ffe0 <myhtml_tree_node_create@plt>
   286ec:	mov	r3, #0
   286f0:	mov	r2, #2
   286f4:	str	r2, [r4, #180]	; 0xb4
   286f8:	str	r3, [r4, #88]	; 0x58
   286fc:	strb	r3, [r4, #108]	; 0x6c
   28700:	str	r3, [r4, #112]	; 0x70
   28704:	str	r3, [r4, #116]	; 0x74
   28708:	str	r3, [r4, #120]	; 0x78
   2870c:	str	r3, [r4, #96]	; 0x60
   28710:	str	r3, [r4, #100]	; 0x64
   28714:	str	r3, [r4, #92]	; 0x5c
   28718:	str	r3, [r4, #104]	; 0x68
   2871c:	str	r3, [r4, #160]	; 0xa0
   28720:	str	r3, [r4, #164]	; 0xa4
   28724:	str	r3, [r4, #168]	; 0xa8
   28728:	str	r3, [r4, #172]	; 0xac
   2872c:	str	r3, [r4, #176]	; 0xb0
   28730:	str	r3, [r4, #60]	; 0x3c
   28734:	strb	r3, [r4, #188]	; 0xbc
   28738:	str	r3, [r4, #156]	; 0x9c
   2873c:	str	r3, [r4, #76]	; 0x4c
   28740:	str	r3, [r4, #80]	; 0x50
   28744:	str	r3, [r4, #192]	; 0xc0
   28748:	str	r3, [r4, #68]	; 0x44
   2874c:	str	r3, [r4, #152]	; 0x98
   28750:	str	r3, [r4, #196]	; 0xc4
   28754:	str	r3, [r4, #200]	; 0xc8
   28758:	str	r3, [r4, #204]	; 0xcc
   2875c:	str	r0, [r4, #84]	; 0x54
   28760:	ldr	r0, [r4, #148]	; 0x94
   28764:	bl	1046c <myhtml_stream_buffer_clean@plt>
   28768:	mov	r0, r4
   2876c:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   28770:	mov	r0, r4
   28774:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   28778:	ldr	r0, [r4, #132]	; 0x84
   2877c:	bl	1028c <myhtml_tree_list_clean@plt>
   28780:	ldr	r0, [r4, #136]	; 0x88
   28784:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   28788:	mov	r0, r4
   2878c:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   28790:	ldr	r0, [r4, #72]	; 0x48
   28794:	bl	10f70 <mcobject_clean@plt>
   28798:	ldr	r0, [r4, #28]
   2879c:	bl	11078 <myhtml_tag_clean@plt>
   287a0:	ldr	r0, [r4, #20]
   287a4:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   287a8:	ldr	r3, [r4]
   287ac:	ldr	r1, [r4, #20]
   287b0:	ldr	r0, [r3, #4]
   287b4:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   287b8:	ldr	r3, [r4]
   287bc:	ldr	r1, [r4, #20]
   287c0:	ldr	r0, [r3]
   287c4:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   287c8:	ldr	r0, [r4, #8]
   287cc:	ldr	r1, [r0, #16]
   287d0:	bl	10904 <myhtml_token_attr_create@plt>
   287d4:	str	r0, [r4, #56]	; 0x38
   287d8:	pop	{r4, pc}

000287dc <myhtml_tree_token_list_destroy@@Base>:
   287dc:	push	{r4, r5, r6, lr}
   287e0:	subs	r4, r0, #0
   287e4:	beq	28810 <myhtml_tree_token_list_destroy@@Base+0x34>
   287e8:	ldr	r0, [r4]
   287ec:	mov	r5, r1
   287f0:	cmp	r0, #0
   287f4:	beq	287fc <myhtml_tree_token_list_destroy@@Base+0x20>
   287f8:	bl	10dcc <mycore_free@plt>
   287fc:	cmp	r5, #0
   28800:	beq	28810 <myhtml_tree_token_list_destroy@@Base+0x34>
   28804:	mov	r0, r4
   28808:	bl	10dcc <mycore_free@plt>
   2880c:	mov	r4, #0
   28810:	mov	r0, r4
   28814:	pop	{r4, r5, r6, pc}

00028818 <myhtml_tree_token_list_append@@Base>:
   28818:	push	{r4, r5, r6, lr}
   2881c:	mov	r5, r1
   28820:	ldr	r3, [r0, #4]
   28824:	ldr	r1, [r0, #8]
   28828:	mov	r4, r0
   2882c:	cmp	r3, r1
   28830:	bcc	28850 <myhtml_tree_token_list_append@@Base+0x38>
   28834:	lsl	r3, r1, #1
   28838:	str	r3, [r0, #8]
   2883c:	lsl	r1, r1, #3
   28840:	ldr	r0, [r0]
   28844:	bl	fbd8 <mycore_realloc@plt>
   28848:	cmp	r0, #0
   2884c:	strne	r0, [r4]
   28850:	ldm	r4, {r2, r3}
   28854:	str	r5, [r2, r3, lsl #2]
   28858:	add	r3, r3, #1
   2885c:	str	r3, [r4, #4]
   28860:	pop	{r4, r5, r6, pc}

00028864 <myhtml_tree_token_list_append_after_index@@Base>:
   28864:	push	{r4, r5, r6, lr}
   28868:	mov	r6, r1
   2886c:	ldr	r3, [r0, #4]
   28870:	ldr	r1, [r0, #8]
   28874:	mov	r4, r0
   28878:	cmp	r3, r1
   2887c:	mov	r5, r2
   28880:	bcc	288a0 <myhtml_tree_token_list_append_after_index@@Base+0x3c>
   28884:	lsl	r3, r1, #1
   28888:	str	r3, [r0, #8]
   2888c:	lsl	r1, r1, #3
   28890:	ldr	r0, [r0]
   28894:	bl	fbd8 <mycore_realloc@plt>
   28898:	cmp	r0, #0
   2889c:	strne	r0, [r4]
   288a0:	ldr	r3, [r4]
   288a4:	ldr	r1, [r4, #4]
   288a8:	add	r3, r3, r5, lsl #2
   288ac:	mov	r2, r3
   288b0:	cmp	r5, r1
   288b4:	bhi	288c8 <myhtml_tree_token_list_append_after_index@@Base+0x64>
   288b8:	add	r1, r1, #1
   288bc:	str	r6, [r2, #4]
   288c0:	str	r1, [r4, #4]
   288c4:	pop	{r4, r5, r6, pc}
   288c8:	ldr	r0, [r3]
   288cc:	add	r5, r5, #1
   288d0:	str	r0, [r3, #4]!
   288d4:	b	288b0 <myhtml_tree_token_list_append_after_index@@Base+0x4c>

000288d8 <myhtml_tree_token_list_current_node@@Base>:
   288d8:	ldr	r3, [r0, #4]
   288dc:	cmp	r3, #0
   288e0:	subne	r3, r3, #-1073741823	; 0xc0000001
   288e4:	ldrne	r2, [r0]
   288e8:	ldrne	r0, [r2, r3, lsl #2]
   288ec:	moveq	r0, r3
   288f0:	bx	lr

000288f4 <myhtml_tree_tags_close_p@@Base>:
   288f4:	push	{r4, lr}
   288f8:	mov	r2, #1
   288fc:	mov	r4, r0
   28900:	mov	r1, #99	; 0x63
   28904:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   28908:	mov	r0, r4
   2890c:	bl	10628 <myhtml_tree_current_node@plt>
   28910:	mov	r1, #99	; 0x63
   28914:	bl	10aa8 <myhtml_is_html_node@plt>
   28918:	mov	r0, r4
   2891c:	mov	r3, #0
   28920:	mov	r2, #1
   28924:	mov	r1, #99	; 0x63
   28928:	pop	{r4, lr}
   2892c:	b	1094c <myhtml_tree_open_elements_pop_until@plt>

00028930 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   28930:	push	{r4, lr}
   28934:	mov	r4, r0
   28938:	mov	r2, #1
   2893c:	bl	10cb8 <myhtml_tree_node_insert_by_token@plt>
   28940:	ldr	r3, [r4, #168]	; 0xa8
   28944:	str	r3, [r4, #172]	; 0xac
   28948:	mov	r3, #7
   2894c:	str	r3, [r4, #168]	; 0xa8
   28950:	pop	{r4, pc}

00028954 <myhtml_tree_clear_stack_back_table_context@@Base>:
   28954:	push	{r4, lr}
   28958:	mov	r4, r0
   2895c:	bl	10628 <myhtml_tree_current_node@plt>
   28960:	ldr	r2, [r0, #4]
   28964:	cmp	r2, #125	; 0x7d
   28968:	cmpne	r2, #128	; 0x80
   2896c:	movne	r3, #1
   28970:	moveq	r3, #0
   28974:	cmp	r2, #65	; 0x41
   28978:	moveq	r3, #0
   2897c:	andne	r3, r3, #1
   28980:	cmp	r3, #0
   28984:	bne	28998 <myhtml_tree_clear_stack_back_table_context@@Base+0x44>
   28988:	ldr	r3, [r0, #8]
   2898c:	cmp	r3, #1
   28990:	bne	28998 <myhtml_tree_clear_stack_back_table_context@@Base+0x44>
   28994:	pop	{r4, pc}
   28998:	mov	r0, r4
   2899c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   289a0:	mov	r0, r4
   289a4:	b	2895c <myhtml_tree_clear_stack_back_table_context@@Base+0x8>

000289a8 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   289a8:	push	{r4, r5, r6, lr}
   289ac:	mov	r4, r0
   289b0:	bl	10628 <myhtml_tree_current_node@plt>
   289b4:	mov	r5, #1
   289b8:	mov	r6, #85	; 0x55
   289bc:	ldr	r2, [r0, #4]
   289c0:	sub	r3, r2, #126	; 0x7e
   289c4:	cmp	r3, #6
   289c8:	mvnls	r3, r6, lsr r3
   289cc:	movhi	r3, r5
   289d0:	cmp	r2, #65	; 0x41
   289d4:	moveq	r3, #0
   289d8:	andne	r3, r3, #1
   289dc:	cmp	r3, #0
   289e0:	bne	289f4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   289e4:	ldr	r3, [r0, #8]
   289e8:	cmp	r3, #1
   289ec:	bne	289f4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   289f0:	pop	{r4, r5, r6, pc}
   289f4:	mov	r0, r4
   289f8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   289fc:	mov	r0, r4
   28a00:	bl	10628 <myhtml_tree_current_node@plt>
   28a04:	b	289bc <myhtml_tree_clear_stack_back_table_body_context@@Base+0x14>

00028a08 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   28a08:	push	{r4, lr}
   28a0c:	mov	r4, r0
   28a10:	bl	10628 <myhtml_tree_current_node@plt>
   28a14:	ldr	r2, [r0, #4]
   28a18:	cmp	r2, #135	; 0x87
   28a1c:	cmpne	r2, #128	; 0x80
   28a20:	movne	r3, #1
   28a24:	moveq	r3, #0
   28a28:	cmp	r2, #65	; 0x41
   28a2c:	moveq	r3, #0
   28a30:	andne	r3, r3, #1
   28a34:	cmp	r3, #0
   28a38:	bne	28a4c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x44>
   28a3c:	ldr	r3, [r0, #8]
   28a40:	cmp	r3, #1
   28a44:	bne	28a4c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x44>
   28a48:	pop	{r4, pc}
   28a4c:	mov	r0, r4
   28a50:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   28a54:	mov	r0, r4
   28a58:	b	28a10 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x8>

00028a5c <myhtml_tree_close_cell@@Base>:
   28a5c:	mov	r2, #0
   28a60:	push	{r4, r5, r6, lr}
   28a64:	mov	r4, r0
   28a68:	mov	r5, r1
   28a6c:	mov	r1, r2
   28a70:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   28a74:	mov	r0, r4
   28a78:	bl	10628 <myhtml_tree_current_node@plt>
   28a7c:	mov	r3, #0
   28a80:	ldmib	r5, {r1, r2}
   28a84:	mov	r0, r4
   28a88:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   28a8c:	mov	r0, r4
   28a90:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   28a94:	mov	r3, #13
   28a98:	str	r3, [r4, #168]	; 0xa8
   28a9c:	pop	{r4, r5, r6, pc}

00028aa0 <myhtml_tree_is_mathml_integration_point@@Base>:
   28aa0:	ldr	r3, [r1, #8]
   28aa4:	cmp	r3, #2
   28aa8:	bne	28ad8 <myhtml_tree_is_mathml_integration_point@@Base+0x38>
   28aac:	ldr	r2, [r1, #4]
   28ab0:	sub	r0, r2, #227	; 0xe3
   28ab4:	cmp	r0, #11
   28ab8:	movhi	r3, #1
   28abc:	ldrls	r3, [pc, #28]	; 28ae0 <myhtml_tree_is_mathml_integration_point@@Base+0x40>
   28ac0:	mvnls	r3, r3, lsr r0
   28ac4:	and	r0, r3, #1
   28ac8:	eor	r0, r0, #1
   28acc:	cmp	r2, #88	; 0x58
   28ad0:	orreq	r0, r0, #1
   28ad4:	bx	lr
   28ad8:	mov	r0, #0
   28adc:	bx	lr
   28ae0:	andeq	r0, r0, r1, lsr r8

00028ae4 <myhtml_tree_is_html_integration_point@@Base>:
   28ae4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   28ae8:	mov	r5, r1
   28aec:	ldr	r2, [r1, #8]
   28af0:	cmp	r2, #3
   28af4:	bne	28b1c <myhtml_tree_is_html_integration_point@@Base+0x38>
   28af8:	ldr	r1, [r1, #4]
   28afc:	cmp	r1, #156	; 0x9c
   28b00:	cmpne	r1, #189	; 0xbd
   28b04:	moveq	r0, #1
   28b08:	movne	r0, #0
   28b0c:	cmp	r1, #134	; 0x86
   28b10:	orreq	r0, r0, #1
   28b14:	add	sp, sp, #12
   28b18:	pop	{r4, r5, r6, r7, pc}
   28b1c:	cmp	r2, #2
   28b20:	bne	28bc4 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   28b24:	ldr	r6, [r1, #4]
   28b28:	cmp	r6, #8
   28b2c:	bne	28bc4 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   28b30:	ldr	r1, [r1, #32]
   28b34:	cmp	r1, #0
   28b38:	beq	28bc4 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   28b3c:	ldr	r2, [r1, #48]	; 0x30
   28b40:	tst	r2, #1
   28b44:	bne	28bc4 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   28b48:	mov	r4, r0
   28b4c:	ldr	r0, [r0, #8]
   28b50:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   28b54:	mov	r3, #9
   28b58:	str	r3, [sp, #4]
   28b5c:	ldr	r7, [pc, #104]	; 28bcc <myhtml_tree_is_html_integration_point@@Base+0xe8>
   28b60:	ldr	r3, [pc, #104]	; 28bd0 <myhtml_tree_is_html_integration_point@@Base+0xec>
   28b64:	add	r7, pc, r7
   28b68:	add	r3, pc, r3
   28b6c:	str	r3, [sp]
   28b70:	mov	r2, r7
   28b74:	mov	r3, r6
   28b78:	ldr	r1, [r5, #32]
   28b7c:	ldr	r0, [r4, #8]
   28b80:	bl	fd34 <myhtml_token_attr_match_case@plt>
   28b84:	cmp	r0, #0
   28b88:	movne	r0, #1
   28b8c:	bne	28b14 <myhtml_tree_is_html_integration_point@@Base+0x30>
   28b90:	mov	r3, #21
   28b94:	str	r3, [sp, #4]
   28b98:	ldr	r3, [pc, #52]	; 28bd4 <myhtml_tree_is_html_integration_point@@Base+0xf0>
   28b9c:	mov	r2, r7
   28ba0:	add	r3, pc, r3
   28ba4:	str	r3, [sp]
   28ba8:	ldr	r1, [r5, #32]
   28bac:	mov	r3, r6
   28bb0:	ldr	r0, [r4, #8]
   28bb4:	bl	fd34 <myhtml_token_attr_match_case@plt>
   28bb8:	adds	r0, r0, #0
   28bbc:	movne	r0, #1
   28bc0:	b	28b14 <myhtml_tree_is_html_integration_point@@Base+0x30>
   28bc4:	mov	r0, #0
   28bc8:	b	28b14 <myhtml_tree_is_html_integration_point@@Base+0x30>
   28bcc:	andeq	pc, ip, r0, lsl #4
   28bd0:	andeq	pc, ip, r5, lsl #4
   28bd4:	ldrdeq	pc, [ip], -r7

00028bd8 <myhtml_tree_temp_tag_name_init@@Base>:
   28bd8:	push	{r4, lr}
   28bdc:	mov	r4, r0
   28be0:	mov	r3, #0
   28be4:	mov	r0, #1024	; 0x400
   28be8:	str	r0, [r4, #8]
   28bec:	str	r3, [r4, #4]
   28bf0:	bl	10c94 <mycore_malloc@plt>
   28bf4:	cmp	r0, #0
   28bf8:	str	r0, [r4]
   28bfc:	moveq	r0, #2
   28c00:	movne	r0, #0
   28c04:	pop	{r4, pc}

00028c08 <myhtml_tree_temp_tag_name_clean@@Base>:
   28c08:	mov	r3, #0
   28c0c:	str	r3, [r0, #4]
   28c10:	bx	lr

00028c14 <myhtml_tree_temp_tag_name_destroy@@Base>:
   28c14:	push	{r4, r5, r6, lr}
   28c18:	subs	r4, r0, #0
   28c1c:	beq	28c50 <myhtml_tree_temp_tag_name_destroy@@Base+0x3c>
   28c20:	ldr	r0, [r4]
   28c24:	mov	r5, r1
   28c28:	cmp	r0, #0
   28c2c:	beq	28c3c <myhtml_tree_temp_tag_name_destroy@@Base+0x28>
   28c30:	bl	10dcc <mycore_free@plt>
   28c34:	mov	r3, #0
   28c38:	str	r3, [r4]
   28c3c:	cmp	r5, #0
   28c40:	beq	28c50 <myhtml_tree_temp_tag_name_destroy@@Base+0x3c>
   28c44:	mov	r0, r4
   28c48:	bl	10dcc <mycore_free@plt>
   28c4c:	mov	r4, #0
   28c50:	mov	r0, r4
   28c54:	pop	{r4, r5, r6, pc}

00028c58 <myhtml_tree_destroy@@Base>:
   28c58:	push	{r4, lr}
   28c5c:	subs	r4, r0, #0
   28c60:	beq	28d38 <myhtml_tree_destroy@@Base+0xe0>
   28c64:	ldr	r0, [r4, #28]
   28c68:	bl	10e44 <myhtml_tag_destroy@plt>
   28c6c:	str	r0, [r4, #28]
   28c70:	mov	r0, r4
   28c74:	bl	100dc <myhtml_tree_active_formatting_destroy@plt>
   28c78:	str	r0, [r4, #124]	; 0x7c
   28c7c:	mov	r0, r4
   28c80:	bl	10ce8 <myhtml_tree_open_elements_destroy@plt>
   28c84:	mov	r1, #1
   28c88:	str	r0, [r4, #128]	; 0x80
   28c8c:	ldr	r0, [r4, #132]	; 0x84
   28c90:	bl	106f4 <myhtml_tree_list_destroy@plt>
   28c94:	mov	r1, #1
   28c98:	str	r0, [r4, #132]	; 0x84
   28c9c:	ldr	r0, [r4, #136]	; 0x88
   28ca0:	bl	fc74 <myhtml_tree_token_list_destroy@plt>
   28ca4:	str	r0, [r4, #136]	; 0x88
   28ca8:	mov	r0, r4
   28cac:	bl	10e38 <myhtml_tree_template_insertion_destroy@plt>
   28cb0:	mov	r1, #1
   28cb4:	str	r0, [r4, #140]	; 0x8c
   28cb8:	ldr	r0, [r4, #16]
   28cbc:	bl	101b4 <mcsync_destroy@plt>
   28cc0:	mov	r1, #1
   28cc4:	str	r0, [r4, #16]
   28cc8:	ldr	r0, [r4, #12]
   28ccc:	bl	10b20 <mcobject_async_destroy@plt>
   28cd0:	str	r0, [r4, #12]
   28cd4:	ldr	r0, [r4, #8]
   28cd8:	bl	10784 <myhtml_token_destroy@plt>
   28cdc:	mov	r1, #1
   28ce0:	str	r0, [r4, #8]
   28ce4:	ldr	r0, [r4, #4]
   28ce8:	bl	10da8 <mchar_async_destroy@plt>
   28cec:	mov	r1, #1
   28cf0:	str	r0, [r4, #4]
   28cf4:	ldr	r0, [r4, #148]	; 0x94
   28cf8:	bl	fd28 <myhtml_stream_buffer_destroy@plt>
   28cfc:	str	r0, [r4, #148]	; 0x94
   28d00:	ldr	r0, [r4, #24]
   28d04:	bl	102d4 <mythread_queue_destroy@plt>
   28d08:	mov	r1, #1
   28d0c:	str	r0, [r4, #24]
   28d10:	ldr	r0, [r4, #72]	; 0x48
   28d14:	bl	fdd0 <mcobject_destroy@plt>
   28d18:	mov	r1, #0
   28d1c:	str	r0, [r4, #72]	; 0x48
   28d20:	add	r0, r4, #208	; 0xd0
   28d24:	bl	10940 <myhtml_tree_temp_tag_name_destroy@plt>
   28d28:	ldr	r0, [r4, #144]	; 0x90
   28d2c:	bl	10dcc <mycore_free@plt>
   28d30:	mov	r0, r4
   28d34:	bl	10dcc <mycore_free@plt>
   28d38:	mov	r0, #0
   28d3c:	pop	{r4, pc}

00028d40 <myhtml_tree_temp_tag_name_append_one@@Base>:
   28d40:	push	{r4, r5, r6, lr}
   28d44:	mov	r4, r0
   28d48:	ldmib	r0, {r3, r5}
   28d4c:	mov	r6, r1
   28d50:	cmp	r3, r5
   28d54:	bcc	28d78 <myhtml_tree_temp_tag_name_append_one@@Base+0x38>
   28d58:	lsl	r5, r5, #1
   28d5c:	mov	r1, r5
   28d60:	ldr	r0, [r0]
   28d64:	bl	fbd8 <mycore_realloc@plt>
   28d68:	cmp	r0, #0
   28d6c:	beq	28d94 <myhtml_tree_temp_tag_name_append_one@@Base+0x54>
   28d70:	str	r5, [r4, #8]
   28d74:	str	r0, [r4]
   28d78:	ldm	r4, {r2, r3}
   28d7c:	mov	r0, #0
   28d80:	strb	r6, [r2, r3]
   28d84:	ldr	r3, [r4, #4]
   28d88:	add	r3, r3, #1
   28d8c:	str	r3, [r4, #4]
   28d90:	pop	{r4, r5, r6, pc}
   28d94:	mov	r0, #2
   28d98:	pop	{r4, r5, r6, pc}

00028d9c <myhtml_tree_temp_tag_name_append@@Base>:
   28d9c:	ldr	ip, [r0]
   28da0:	cmp	ip, #0
   28da4:	cmpne	r2, #0
   28da8:	beq	28e14 <myhtml_tree_temp_tag_name_append@@Base+0x78>
   28dac:	push	{r4, r5, r6, r7, r8, lr}
   28db0:	mov	r5, r2
   28db4:	ldmib	r0, {r3, r6}
   28db8:	mov	r7, r1
   28dbc:	mov	r4, r0
   28dc0:	add	r3, r2, r3
   28dc4:	cmp	r3, r6
   28dc8:	bcc	28dec <myhtml_tree_temp_tag_name_append@@Base+0x50>
   28dcc:	add	r6, r2, r6, lsl #1
   28dd0:	mov	r1, r6
   28dd4:	mov	r0, ip
   28dd8:	bl	fbd8 <mycore_realloc@plt>
   28ddc:	cmp	r0, #0
   28de0:	beq	28e1c <myhtml_tree_temp_tag_name_append@@Base+0x80>
   28de4:	str	r6, [r4, #8]
   28de8:	str	r0, [r4]
   28dec:	mov	r2, r5
   28df0:	mov	r1, r7
   28df4:	ldm	r4, {r0, r3}
   28df8:	add	r0, r0, r3
   28dfc:	bl	ff5c <memcpy@plt>
   28e00:	ldr	r2, [r4, #4]
   28e04:	mov	r0, #0
   28e08:	add	r5, r2, r5
   28e0c:	str	r5, [r4, #4]
   28e10:	pop	{r4, r5, r6, r7, r8, pc}
   28e14:	mov	r0, #0
   28e18:	bx	lr
   28e1c:	mov	r0, #2
   28e20:	pop	{r4, r5, r6, r7, r8, pc}

00028e24 <myhtml_tree_wait_for_last_done_token@@Base>:
   28e24:	push	{r4, r5, r6, lr}
   28e28:	mov	r4, r0
   28e2c:	mov	r5, r1
   28e30:	ldr	r3, [r4, #152]	; 0x98
   28e34:	cmp	r3, r5
   28e38:	bne	28e40 <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   28e3c:	pop	{r4, r5, r6, pc}
   28e40:	ldr	r3, [r4]
   28e44:	ldr	r3, [r3]
   28e48:	ldr	r0, [r3, #24]
   28e4c:	bl	100a0 <mythread_nanosleep_sleep@plt>
   28e50:	b	28e30 <myhtml_tree_wait_for_last_done_token@@Base+0xc>

00028e54 <myhtml_tree_special_list_init@@Base>:
   28e54:	mov	r2, #0
   28e58:	mov	r3, #1024	; 0x400
   28e5c:	push	{r4, lr}
   28e60:	mov	r4, r0
   28e64:	stmib	r0, {r2, r3}
   28e68:	mov	r0, #8192	; 0x2000
   28e6c:	bl	10c94 <mycore_malloc@plt>
   28e70:	cmp	r0, #0
   28e74:	str	r0, [r4]
   28e78:	moveq	r0, #2
   28e7c:	movne	r0, #0
   28e80:	pop	{r4, pc}

00028e84 <myhtml_tree_special_list_clean@@Base>:
   28e84:	mov	r3, #0
   28e88:	str	r3, [r0, #4]
   28e8c:	bx	lr

00028e90 <myhtml_tree_special_list_destroy@@Base>:
   28e90:	push	{r4, r5, r6, lr}
   28e94:	subs	r4, r0, #0
   28e98:	beq	28ecc <myhtml_tree_special_list_destroy@@Base+0x3c>
   28e9c:	ldr	r0, [r4]
   28ea0:	mov	r5, r1
   28ea4:	cmp	r0, #0
   28ea8:	beq	28eb8 <myhtml_tree_special_list_destroy@@Base+0x28>
   28eac:	bl	10dcc <mycore_free@plt>
   28eb0:	mov	r3, #0
   28eb4:	str	r3, [r4]
   28eb8:	cmp	r5, #0
   28ebc:	beq	28ecc <myhtml_tree_special_list_destroy@@Base+0x3c>
   28ec0:	mov	r0, r4
   28ec4:	bl	10dcc <mycore_free@plt>
   28ec8:	mov	r4, #0
   28ecc:	mov	r0, r4
   28ed0:	pop	{r4, r5, r6, pc}

00028ed4 <myhtml_tree_special_list_append@@Base>:
   28ed4:	push	{r4, r5, r6, r7, r8, lr}
   28ed8:	mov	r5, r1
   28edc:	ldr	r3, [r0, #4]
   28ee0:	ldr	r1, [r0, #8]
   28ee4:	mov	r4, r0
   28ee8:	cmp	r3, r1
   28eec:	mov	r6, r2
   28ef0:	bcc	28f14 <myhtml_tree_special_list_append@@Base+0x40>
   28ef4:	lsl	r7, r1, #1
   28ef8:	ldr	r0, [r0]
   28efc:	lsl	r1, r1, #4
   28f00:	bl	fbd8 <mycore_realloc@plt>
   28f04:	cmp	r0, #0
   28f08:	beq	28f34 <myhtml_tree_special_list_append@@Base+0x60>
   28f0c:	str	r7, [r4, #8]
   28f10:	str	r0, [r4]
   28f14:	ldm	r4, {r1, r3}
   28f18:	add	r0, r1, r3, lsl #3
   28f1c:	str	r6, [r0, #4]
   28f20:	str	r5, [r1, r3, lsl #3]
   28f24:	add	r3, r3, #1
   28f28:	str	r3, [r4, #4]
   28f2c:	mov	r0, #0
   28f30:	pop	{r4, r5, r6, r7, r8, pc}
   28f34:	mov	r0, #2
   28f38:	pop	{r4, r5, r6, r7, r8, pc}

00028f3c <myhtml_tree_special_list_length@@Base>:
   28f3c:	ldr	r0, [r0, #4]
   28f40:	bx	lr

00028f44 <myhtml_tree_special_list_pop@@Base>:
   28f44:	ldr	r3, [r0, #4]
   28f48:	cmp	r3, #0
   28f4c:	subne	r3, r3, #1
   28f50:	strne	r3, [r0, #4]
   28f54:	ldr	r0, [r0, #4]
   28f58:	bx	lr

00028f5c <myhtml_tree_special_list_get_last@@Base>:
   28f5c:	ldr	r3, [r0, #4]
   28f60:	cmp	r3, #0
   28f64:	ldrne	r0, [r0]
   28f68:	addne	r0, r0, r3, lsl #3
   28f6c:	moveq	r0, r3
   28f70:	bx	lr

00028f74 <myhtml_tree_incoming_buffer_first@@Base>:
   28f74:	ldr	r0, [r0, #80]	; 0x50
   28f78:	bx	lr

00028f7c <myhtml_tree_incomming_buffer_make_data@@Base>:
   28f7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28f80:	mov	r8, r0
   28f84:	ldr	r0, [r0, #80]	; 0x50
   28f88:	mov	r4, r1
   28f8c:	mov	r7, r2
   28f90:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   28f94:	mov	r5, r0
   28f98:	ldr	r0, [r0, #12]
   28f9c:	ldr	r3, [r5, #8]
   28fa0:	sub	r4, r4, r0
   28fa4:	add	r2, r4, r7
   28fa8:	cmp	r2, r3
   28fac:	bhi	28fbc <myhtml_tree_incomming_buffer_make_data@@Base+0x40>
   28fb0:	ldr	r0, [r5]
   28fb4:	add	r0, r0, r4
   28fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28fbc:	mov	r6, r8
   28fc0:	ldr	r3, [r6, #208]!	; 0xd0
   28fc4:	cmp	r3, #0
   28fc8:	mov	r0, r6
   28fcc:	bne	29018 <myhtml_tree_incomming_buffer_make_data@@Base+0x9c>
   28fd0:	bl	10604 <myhtml_tree_temp_tag_name_init@plt>
   28fd4:	mov	r9, #0
   28fd8:	ldr	r2, [r5, #8]
   28fdc:	add	r3, r7, r4
   28fe0:	cmp	r3, r2
   28fe4:	ldr	r1, [r5]
   28fe8:	bls	29020 <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   28fec:	sub	r2, r2, r4
   28ff0:	add	r1, r1, r4
   28ff4:	mov	r0, r6
   28ff8:	sub	r7, r7, r2
   28ffc:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   29000:	ldr	r5, [r5, #20]
   29004:	mov	r4, r9
   29008:	cmp	r5, #0
   2900c:	bne	28fd8 <myhtml_tree_incomming_buffer_make_data@@Base+0x5c>
   29010:	ldr	r0, [r8, #208]	; 0xd0
   29014:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29018:	bl	10280 <myhtml_tree_temp_tag_name_clean@plt>
   2901c:	b	28fd4 <myhtml_tree_incomming_buffer_make_data@@Base+0x58>
   29020:	mov	r2, r7
   29024:	add	r1, r1, r4
   29028:	mov	r0, r6
   2902c:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   29030:	b	29010 <myhtml_tree_incomming_buffer_make_data@@Base+0x94>

00029034 <mycore_fopen@@Base>:
   29034:	b	fdb8 <fopen@plt>

00029038 <mycore_fclose@@Base>:
   29038:	b	10a00 <fclose@plt>

0002903c <mycore_fread@@Base>:
   2903c:	b	103d0 <fread@plt>

00029040 <mycore_fwrite@@Base>:
   29040:	b	10340 <fwrite@plt>

00029044 <mycore_fflush@@Base>:
   29044:	b	fe0c <fflush@plt>

00029048 <mycore_fseek@@Base>:
   29048:	b	10f28 <fseek@plt>

0002904c <mycore_ftell@@Base>:
   2904c:	b	10064 <ftell@plt>

00029050 <mycore_ferror@@Base>:
   29050:	b	ff50 <ferror@plt>

00029054 <mycore_setbuf@@Base>:
   29054:	b	fd04 <setbuf@plt>

00029058 <mycore_malloc@@Base>:
   29058:	b	10508 <malloc@plt>

0002905c <mycore_realloc@@Base>:
   2905c:	b	101e4 <realloc@plt>

00029060 <mycore_calloc@@Base>:
   29060:	b	fbe4 <calloc@plt>

00029064 <mycore_free@@Base>:
   29064:	push	{r4, lr}
   29068:	bl	feb4 <free@plt>
   2906c:	mov	r0, #0
   29070:	pop	{r4, pc}

00029074 <mythread_thread_create@@Base>:
   29074:	push	{r4, r5, r6, r7, r8, lr}
   29078:	mov	r5, r0
   2907c:	mov	r6, r1
   29080:	mov	r0, #1
   29084:	mov	r1, #4
   29088:	mov	r7, r2
   2908c:	bl	ff14 <mycore_calloc@plt>
   29090:	subs	r4, r0, #0
   29094:	beq	290b0 <mythread_thread_create@@Base+0x3c>
   29098:	mov	r3, r7
   2909c:	mov	r2, r6
   290a0:	ldr	r1, [r5, #20]
   290a4:	bl	103dc <pthread_create@plt>
   290a8:	cmp	r0, #0
   290ac:	beq	290b4 <mythread_thread_create@@Base+0x40>
   290b0:	mov	r4, #0
   290b4:	mov	r0, r4
   290b8:	pop	{r4, r5, r6, r7, r8, pc}

000290bc <mythread_thread_join@@Base>:
   290bc:	mov	r3, r1
   290c0:	push	{r4, lr}
   290c4:	mov	r1, #0
   290c8:	ldr	r0, [r3]
   290cc:	bl	10b68 <pthread_join@plt>
   290d0:	adds	r0, r0, #0
   290d4:	movne	r0, #1
   290d8:	pop	{r4, pc}

000290dc <mythread_thread_cancel@@Base>:
   290dc:	push	{r4, lr}
   290e0:	ldr	r0, [r1]
   290e4:	bl	108f8 <pthread_cancel@plt>
   290e8:	adds	r0, r0, #0
   290ec:	movne	r0, #1
   290f0:	pop	{r4, pc}

000290f4 <mythread_thread_destroy@@Base>:
   290f4:	push	{r4, lr}
   290f8:	mov	r0, r1
   290fc:	bl	10dcc <mycore_free@plt>
   29100:	mov	r0, #0
   29104:	pop	{r4, pc}

00029108 <mythread_thread_attr_init@@Base>:
   29108:	push	{r4, r5, r6, lr}
   2910c:	mov	r1, #36	; 0x24
   29110:	mov	r6, r0
   29114:	mov	r0, #1
   29118:	bl	ff14 <mycore_calloc@plt>
   2911c:	subs	r4, r0, #0
   29120:	beq	29140 <mythread_thread_attr_init@@Base+0x38>
   29124:	bl	1079c <pthread_attr_init@plt>
   29128:	cmp	r0, #0
   2912c:	mov	r5, r0
   29130:	str	r0, [r6, #28]
   29134:	beq	29148 <mythread_thread_attr_init@@Base+0x40>
   29138:	mov	r0, r4
   2913c:	bl	10dcc <mycore_free@plt>
   29140:	mov	r0, #0
   29144:	pop	{r4, r5, r6, pc}
   29148:	mov	r1, r0
   2914c:	mov	r0, r4
   29150:	bl	10f58 <pthread_attr_setdetachstate@plt>
   29154:	cmp	r0, #0
   29158:	str	r0, [r6, #28]
   2915c:	mov	r0, r4
   29160:	bne	2913c <mythread_thread_attr_init@@Base+0x34>
   29164:	pop	{r4, r5, r6, pc}

00029168 <mythread_thread_attr_clean@@Base>:
   29168:	bx	lr

0002916c <mythread_thread_attr_destroy@@Base>:
   2916c:	push	{r4, r5, r6, lr}
   29170:	subs	r4, r1, #0
   29174:	popeq	{r4, r5, r6, pc}
   29178:	mov	r5, r0
   2917c:	mov	r0, r4
   29180:	bl	fddc <pthread_attr_destroy@plt>
   29184:	str	r0, [r5, #28]
   29188:	mov	r0, r4
   2918c:	pop	{r4, r5, r6, lr}
   29190:	b	10dcc <mycore_free@plt>

00029194 <mythread_mutex_create@@Base>:
   29194:	push	{r4, lr}
   29198:	bl	108c8 <mcsync_mutex_create@plt>
   2919c:	subs	r4, r0, #0
   291a0:	beq	291bc <mythread_mutex_create@@Base+0x28>
   291a4:	bl	10b50 <mcsync_mutex_init@plt>
   291a8:	cmp	r0, #0
   291ac:	beq	291bc <mythread_mutex_create@@Base+0x28>
   291b0:	mov	r0, r4
   291b4:	bl	10dcc <mycore_free@plt>
   291b8:	mov	r4, #0
   291bc:	mov	r0, r4
   291c0:	pop	{r4, pc}

000291c4 <mythread_mutex_post@@Base>:
   291c4:	mov	r0, r1
   291c8:	b	fefc <mcsync_mutex_unlock@plt>

000291cc <mythread_mutex_wait@@Base>:
   291cc:	mov	r0, r1
   291d0:	b	1103c <mcsync_mutex_lock@plt>

000291d4 <mythread_mutex_try_wait@@Base>:
   291d4:	mov	r0, r1
   291d8:	b	10fac <mcsync_mutex_try_lock@plt>

000291dc <mythread_mutex_close@@Base>:
   291dc:	mov	r0, r1
   291e0:	b	fd70 <mcsync_mutex_destroy@plt>

000291e4 <mythread_nanosleep_create@@Base>:
   291e4:	mov	r1, #8
   291e8:	mov	r0, #1
   291ec:	b	ff14 <mycore_calloc@plt>

000291f0 <mythread_nanosleep_clean@@Base>:
   291f0:	mov	r3, #0
   291f4:	str	r3, [r0]
   291f8:	str	r3, [r0, #4]
   291fc:	bx	lr

00029200 <mythread_nanosleep_destroy@@Base>:
   29200:	b	10dcc <mycore_free@plt>

00029204 <mythread_nanosleep_sleep@@Base>:
   29204:	push	{r4, lr}
   29208:	mov	r1, #0
   2920c:	bl	ff20 <nanosleep@plt>
   29210:	adds	r0, r0, #0
   29214:	movne	r0, #1
   29218:	pop	{r4, pc}

0002921c <mcsync_spin_create@@Base>:
   2921c:	mov	r1, #4
   29220:	mov	r0, #1
   29224:	b	ff14 <mycore_calloc@plt>

00029228 <mcsync_spin_init@@Base>:
   29228:	mov	r0, #0
   2922c:	bx	lr

00029230 <mcsync_spin_clean@@Base>:
   29230:	mov	r3, #0
   29234:	str	r3, [r0]
   29238:	bx	lr

0002923c <mcsync_spin_destroy@@Base>:
   2923c:	b	10dcc <mycore_free@plt>

00029240 <mcsync_spin_lock@@Base>:
   29240:	sub	sp, sp, #8
   29244:	mov	r2, #1
   29248:	mov	r3, #0
   2924c:	str	r3, [sp, #4]
   29250:	ldr	r1, [sp, #4]
   29254:	mcr	15, 0, r0, cr7, cr10, {5}
   29258:	ldrex	r3, [r0]
   2925c:	cmp	r3, r1
   29260:	bne	29270 <mcsync_spin_lock@@Base+0x30>
   29264:	strex	ip, r2, [r0]
   29268:	cmp	ip, #0
   2926c:	bne	29258 <mcsync_spin_lock@@Base+0x18>
   29270:	mcr	15, 0, r0, cr7, cr10, {5}
   29274:	strne	r3, [sp, #4]
   29278:	bne	29250 <mcsync_spin_lock@@Base+0x10>
   2927c:	mov	r0, #0
   29280:	add	sp, sp, #8
   29284:	bx	lr

00029288 <mcsync_spin_unlock@@Base>:
   29288:	mov	r3, #0
   2928c:	mcr	15, 0, r0, cr7, cr10, {5}
   29290:	str	r3, [r0]
   29294:	mov	r0, r3
   29298:	mcr	15, 0, r0, cr7, cr10, {5}
   2929c:	bx	lr

000292a0 <mcsync_mutex_create@@Base>:
   292a0:	mov	r1, #24
   292a4:	mov	r0, #1
   292a8:	b	ff14 <mycore_calloc@plt>

000292ac <mcsync_mutex_init@@Base>:
   292ac:	push	{r4, lr}
   292b0:	mov	r1, #0
   292b4:	bl	ffc8 <pthread_mutex_init@plt>
   292b8:	adds	r0, r0, #0
   292bc:	movne	r0, #1
   292c0:	pop	{r4, pc}

000292c4 <mcsync_mutex_clean@@Base>:
   292c4:	bx	lr

000292c8 <mcsync_mutex_destroy@@Base>:
   292c8:	push	{r4, lr}
   292cc:	mov	r4, r0
   292d0:	bl	fe00 <pthread_mutex_destroy@plt>
   292d4:	mov	r0, r4
   292d8:	pop	{r4, lr}
   292dc:	b	10dcc <mycore_free@plt>

000292e0 <mcsync_mutex_lock@@Base>:
   292e0:	push	{r4, lr}
   292e4:	bl	ff08 <pthread_mutex_lock@plt>
   292e8:	adds	r0, r0, #0
   292ec:	movne	r0, #1
   292f0:	pop	{r4, pc}

000292f4 <mcsync_mutex_try_lock@@Base>:
   292f4:	push	{r4, lr}
   292f8:	bl	10034 <pthread_mutex_trylock@plt>
   292fc:	adds	r0, r0, #0
   29300:	movne	r0, #1
   29304:	pop	{r4, pc}

00029308 <mcsync_mutex_unlock@@Base>:
   29308:	push	{r4, lr}
   2930c:	bl	fbc0 <pthread_mutex_unlock@plt>
   29310:	adds	r0, r0, #0
   29314:	movne	r0, #1
   29318:	pop	{r4, pc}
   2931c:	subs	r2, r1, #1
   29320:	bxeq	lr
   29324:	bcc	294fc <mcsync_mutex_unlock@@Base+0x1f4>
   29328:	cmp	r0, r1
   2932c:	bls	294e0 <mcsync_mutex_unlock@@Base+0x1d8>
   29330:	tst	r1, r2
   29334:	beq	294ec <mcsync_mutex_unlock@@Base+0x1e4>
   29338:	clz	r3, r0
   2933c:	clz	r2, r1
   29340:	sub	r3, r2, r3
   29344:	rsbs	r3, r3, #31
   29348:	addne	r3, r3, r3, lsl #1
   2934c:	mov	r2, #0
   29350:	addne	pc, pc, r3, lsl #2
   29354:	nop			; (mov r0, r0)
   29358:	cmp	r0, r1, lsl #31
   2935c:	adc	r2, r2, r2
   29360:	subcs	r0, r0, r1, lsl #31
   29364:	cmp	r0, r1, lsl #30
   29368:	adc	r2, r2, r2
   2936c:	subcs	r0, r0, r1, lsl #30
   29370:	cmp	r0, r1, lsl #29
   29374:	adc	r2, r2, r2
   29378:	subcs	r0, r0, r1, lsl #29
   2937c:	cmp	r0, r1, lsl #28
   29380:	adc	r2, r2, r2
   29384:	subcs	r0, r0, r1, lsl #28
   29388:	cmp	r0, r1, lsl #27
   2938c:	adc	r2, r2, r2
   29390:	subcs	r0, r0, r1, lsl #27
   29394:	cmp	r0, r1, lsl #26
   29398:	adc	r2, r2, r2
   2939c:	subcs	r0, r0, r1, lsl #26
   293a0:	cmp	r0, r1, lsl #25
   293a4:	adc	r2, r2, r2
   293a8:	subcs	r0, r0, r1, lsl #25
   293ac:	cmp	r0, r1, lsl #24
   293b0:	adc	r2, r2, r2
   293b4:	subcs	r0, r0, r1, lsl #24
   293b8:	cmp	r0, r1, lsl #23
   293bc:	adc	r2, r2, r2
   293c0:	subcs	r0, r0, r1, lsl #23
   293c4:	cmp	r0, r1, lsl #22
   293c8:	adc	r2, r2, r2
   293cc:	subcs	r0, r0, r1, lsl #22
   293d0:	cmp	r0, r1, lsl #21
   293d4:	adc	r2, r2, r2
   293d8:	subcs	r0, r0, r1, lsl #21
   293dc:	cmp	r0, r1, lsl #20
   293e0:	adc	r2, r2, r2
   293e4:	subcs	r0, r0, r1, lsl #20
   293e8:	cmp	r0, r1, lsl #19
   293ec:	adc	r2, r2, r2
   293f0:	subcs	r0, r0, r1, lsl #19
   293f4:	cmp	r0, r1, lsl #18
   293f8:	adc	r2, r2, r2
   293fc:	subcs	r0, r0, r1, lsl #18
   29400:	cmp	r0, r1, lsl #17
   29404:	adc	r2, r2, r2
   29408:	subcs	r0, r0, r1, lsl #17
   2940c:	cmp	r0, r1, lsl #16
   29410:	adc	r2, r2, r2
   29414:	subcs	r0, r0, r1, lsl #16
   29418:	cmp	r0, r1, lsl #15
   2941c:	adc	r2, r2, r2
   29420:	subcs	r0, r0, r1, lsl #15
   29424:	cmp	r0, r1, lsl #14
   29428:	adc	r2, r2, r2
   2942c:	subcs	r0, r0, r1, lsl #14
   29430:	cmp	r0, r1, lsl #13
   29434:	adc	r2, r2, r2
   29438:	subcs	r0, r0, r1, lsl #13
   2943c:	cmp	r0, r1, lsl #12
   29440:	adc	r2, r2, r2
   29444:	subcs	r0, r0, r1, lsl #12
   29448:	cmp	r0, r1, lsl #11
   2944c:	adc	r2, r2, r2
   29450:	subcs	r0, r0, r1, lsl #11
   29454:	cmp	r0, r1, lsl #10
   29458:	adc	r2, r2, r2
   2945c:	subcs	r0, r0, r1, lsl #10
   29460:	cmp	r0, r1, lsl #9
   29464:	adc	r2, r2, r2
   29468:	subcs	r0, r0, r1, lsl #9
   2946c:	cmp	r0, r1, lsl #8
   29470:	adc	r2, r2, r2
   29474:	subcs	r0, r0, r1, lsl #8
   29478:	cmp	r0, r1, lsl #7
   2947c:	adc	r2, r2, r2
   29480:	subcs	r0, r0, r1, lsl #7
   29484:	cmp	r0, r1, lsl #6
   29488:	adc	r2, r2, r2
   2948c:	subcs	r0, r0, r1, lsl #6
   29490:	cmp	r0, r1, lsl #5
   29494:	adc	r2, r2, r2
   29498:	subcs	r0, r0, r1, lsl #5
   2949c:	cmp	r0, r1, lsl #4
   294a0:	adc	r2, r2, r2
   294a4:	subcs	r0, r0, r1, lsl #4
   294a8:	cmp	r0, r1, lsl #3
   294ac:	adc	r2, r2, r2
   294b0:	subcs	r0, r0, r1, lsl #3
   294b4:	cmp	r0, r1, lsl #2
   294b8:	adc	r2, r2, r2
   294bc:	subcs	r0, r0, r1, lsl #2
   294c0:	cmp	r0, r1, lsl #1
   294c4:	adc	r2, r2, r2
   294c8:	subcs	r0, r0, r1, lsl #1
   294cc:	cmp	r0, r1
   294d0:	adc	r2, r2, r2
   294d4:	subcs	r0, r0, r1
   294d8:	mov	r0, r2
   294dc:	bx	lr
   294e0:	moveq	r0, #1
   294e4:	movne	r0, #0
   294e8:	bx	lr
   294ec:	clz	r2, r1
   294f0:	rsb	r2, r2, #31
   294f4:	lsr	r0, r0, r2
   294f8:	bx	lr
   294fc:	cmp	r0, #0
   29500:	mvnne	r0, #0
   29504:	b	29528 <mcsync_mutex_unlock@@Base+0x220>
   29508:	cmp	r1, #0
   2950c:	beq	294fc <mcsync_mutex_unlock@@Base+0x1f4>
   29510:	push	{r0, r1, lr}
   29514:	bl	2931c <mcsync_mutex_unlock@@Base+0x14>
   29518:	pop	{r1, r2, lr}
   2951c:	mul	r3, r2, r0
   29520:	sub	r1, r1, r3
   29524:	bx	lr
   29528:	push	{r1, lr}
   2952c:	mov	r0, #8
   29530:	bl	fc2c <raise@plt>
   29534:	pop	{r1, pc}

Disassembly of section .fini:

00029538 <.fini>:
   29538:	push	{r3, lr}
   2953c:	pop	{r3, pc}
