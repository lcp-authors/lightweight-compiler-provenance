
../repos/charybdis/modules/.libs/um_callerid.so:     file format elf32-littlearm


Disassembly of section .init:

000006cc <_init>:
 6cc:	push	{r3, lr}
 6d0:	bl	7a0 <call_weak_fn>
 6d4:	pop	{r3, pc}

Disassembly of section .plt:

000006d8 <.plt>:
 6d8:	push	{lr}		; (str lr, [sp, #-4]!)
 6dc:	ldr	lr, [pc, #4]	; 6e8 <.plt+0x10>
 6e0:	add	lr, pc, lr
 6e4:	ldr	pc, [lr, #8]!
 6e8:	.word	0x00011918

000006ec <delete_isupport@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2328]!	; 0x918

000006f8 <rb_current_time@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2320]!	; 0x910

00000704 <__cxa_finalize@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2312]!	; 0x908

00000710 <sendto_one@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2304]!	; 0x900

0000071c <ierror@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2296]!	; 0x8f8

00000728 <find_umode_slot@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2288]!	; 0x8f0

00000734 <find_channel_membership@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2280]!	; 0x8e8

00000740 <__gmon_start__@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2272]!	; 0x8e0

0000074c <rb_make_rb_dlink_node@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2264]!	; 0x8d8

00000758 <sendto_one_numeric@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2256]!	; 0x8d0

00000764 <snprintf@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2248]!	; 0x8c8

00000770 <add_isupport@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2240]!	; 0x8c0

0000077c <privilegeset_in_set@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2232]!	; 0x8b8

00000788 <__assert_fail@plt>:
 788:	add	ip, pc, #0, 12
 78c:	add	ip, ip, #69632	; 0x11000
 790:	ldr	pc, [ip, #2224]!	; 0x8b0

00000794 <construct_umodebuf@plt>:
 794:	add	ip, pc, #0, 12
 798:	add	ip, ip, #69632	; 0x11000
 79c:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000007a0 <call_weak_fn>:
     7a0:	ldr	r3, [pc, #20]	; 7bc <call_weak_fn+0x1c>
     7a4:	ldr	r2, [pc, #20]	; 7c0 <call_weak_fn+0x20>
     7a8:	add	r3, pc, r3
     7ac:	ldr	r2, [r3, r2]
     7b0:	cmp	r2, #0
     7b4:	bxeq	lr
     7b8:	b	740 <__gmon_start__@plt>
     7bc:	.word	0x00011850
     7c0:	.word	0x00000058

000007c4 <deregister_tm_clones>:
     7c4:	ldr	r0, [pc, #44]	; 7f8 <deregister_tm_clones+0x34>
     7c8:	ldr	r3, [pc, #44]	; 7fc <deregister_tm_clones+0x38>
     7cc:	add	r0, pc, r0
     7d0:	add	r3, pc, r3
     7d4:	cmp	r3, r0
     7d8:	ldr	r3, [pc, #32]	; 800 <deregister_tm_clones+0x3c>
     7dc:	add	r3, pc, r3
     7e0:	bxeq	lr
     7e4:	ldr	r2, [pc, #24]	; 804 <deregister_tm_clones+0x40>
     7e8:	ldr	r3, [r3, r2]
     7ec:	cmp	r3, #0
     7f0:	bxeq	lr
     7f4:	bx	r3
     7f8:	.word	0x000118e4
     7fc:	.word	0x000118e0
     800:	.word	0x0001181c
     804:	.word	0x0000004c

00000808 <register_tm_clones>:
     808:	ldr	r0, [pc, #56]	; 848 <register_tm_clones+0x40>
     80c:	ldr	r3, [pc, #56]	; 84c <register_tm_clones+0x44>
     810:	add	r0, pc, r0
     814:	add	r3, pc, r3
     818:	sub	r1, r3, r0
     81c:	ldr	r3, [pc, #44]	; 850 <register_tm_clones+0x48>
     820:	asr	r1, r1, #2
     824:	add	r3, pc, r3
     828:	add	r1, r1, r1, lsr #31
     82c:	asrs	r1, r1, #1
     830:	bxeq	lr
     834:	ldr	r2, [pc, #24]	; 854 <register_tm_clones+0x4c>
     838:	ldr	r3, [r3, r2]
     83c:	cmp	r3, #0
     840:	bxeq	lr
     844:	bx	r3
     848:	.word	0x000118a0
     84c:	.word	0x0001189c
     850:	.word	0x000117d4
     854:	.word	0x0000005c

00000858 <__do_global_dtors_aux>:
     858:	ldr	r3, [pc, #76]	; 8ac <__do_global_dtors_aux+0x54>
     85c:	ldr	r2, [pc, #76]	; 8b0 <__do_global_dtors_aux+0x58>
     860:	add	r3, pc, r3
     864:	add	r2, pc, r2
     868:	ldrb	r3, [r3]
     86c:	cmp	r3, #0
     870:	bxne	lr
     874:	ldr	r3, [pc, #56]	; 8b4 <__do_global_dtors_aux+0x5c>
     878:	push	{r4, lr}
     87c:	ldr	r3, [r2, r3]
     880:	cmp	r3, #0
     884:	beq	894 <__do_global_dtors_aux+0x3c>
     888:	ldr	r3, [pc, #40]	; 8b8 <__do_global_dtors_aux+0x60>
     88c:	ldr	r0, [pc, r3]
     890:	bl	704 <__cxa_finalize@plt>
     894:	bl	7c4 <deregister_tm_clones>
     898:	ldr	r3, [pc, #28]	; 8bc <__do_global_dtors_aux+0x64>
     89c:	mov	r2, #1
     8a0:	add	r3, pc, r3
     8a4:	strb	r2, [r3]
     8a8:	pop	{r4, pc}
     8ac:	.word	0x00011850
     8b0:	.word	0x00011794
     8b4:	.word	0x00000048
     8b8:	.word	0x000117d4
     8bc:	.word	0x00011810

000008c0 <frame_dummy>:
     8c0:	b	808 <register_tm_clones>

000008c4 <um_callerid_modinit>:
     8c4:	push	{r4, sl, fp, lr}
     8c8:	add	fp, sp, #8
     8cc:	bl	728 <find_umode_slot@plt>
     8d0:	ldr	r4, [pc, #108]	; 944 <um_callerid_modinit+0x80>
     8d4:	ldr	r4, [pc, r4]
     8d8:	str	r0, [r4, #412]	; 0x19c
     8dc:	cmp	r0, #0
     8e0:	beq	91c <um_callerid_modinit+0x58>
     8e4:	bl	728 <find_umode_slot@plt>
     8e8:	str	r0, [r4, #284]	; 0x11c
     8ec:	cmp	r0, #0
     8f0:	beq	928 <um_callerid_modinit+0x64>
     8f4:	bl	794 <construct_umodebuf@plt>
     8f8:	ldr	r1, [pc, #80]	; 950 <um_callerid_modinit+0x8c>
     8fc:	ldr	r1, [pc, r1]
     900:	ldr	r0, [pc, #76]	; 954 <um_callerid_modinit+0x90>
     904:	add	r0, pc, r0
     908:	ldr	r2, [pc, #72]	; 958 <um_callerid_modinit+0x94>
     90c:	add	r2, pc, r2
     910:	bl	770 <add_isupport@plt>
     914:	mov	r0, #0
     918:	pop	{r4, sl, fp, pc}
     91c:	ldr	r0, [pc, #36]	; 948 <um_callerid_modinit+0x84>
     920:	add	r0, pc, r0
     924:	b	938 <um_callerid_modinit+0x74>
     928:	mov	r0, #0
     92c:	str	r0, [r4, #412]	; 0x19c
     930:	ldr	r0, [pc, #20]	; 94c <um_callerid_modinit+0x88>
     934:	add	r0, pc, r0
     938:	bl	71c <ierror@plt>
     93c:	mvn	r0, #0
     940:	pop	{r4, sl, fp, pc}
     944:	.word	0x00011778
     948:	.word	0x000007f2
     94c:	.word	0x00000826
     950:	.word	0x0001174c
     954:	.word	0x0000089e
     958:	.word	0x000008dc

0000095c <um_callerid_moddeinit>:
     95c:	push	{fp, lr}
     960:	mov	fp, sp
     964:	ldr	r0, [pc, #32]	; 98c <um_callerid_moddeinit+0x30>
     968:	ldr	r0, [pc, r0]
     96c:	mov	r1, #0
     970:	str	r1, [r0, #284]	; 0x11c
     974:	str	r1, [r0, #412]	; 0x19c
     978:	bl	794 <construct_umodebuf@plt>
     97c:	ldr	r0, [pc, #12]	; 990 <um_callerid_moddeinit+0x34>
     980:	add	r0, pc, r0
     984:	pop	{fp, lr}
     988:	b	6ec <delete_isupport@plt>
     98c:	.word	0x000116e4
     990:	.word	0x00000822

00000994 <h_hdl_invite>:
     994:	push	{r4, r5, r6, sl, fp, lr}
     998:	add	fp, sp, #16
     99c:	sub	sp, sp, #8
     9a0:	mov	r4, r0
     9a4:	ldr	r0, [r0, #16]
     9a8:	cmp	r0, #0
     9ac:	bne	a40 <h_hdl_invite+0xac>
     9b0:	ldr	r6, [r4]
     9b4:	ldr	r5, [r4, #12]
     9b8:	mov	r0, #1
     9bc:	mov	r1, r6
     9c0:	mov	r2, r5
     9c4:	bl	ac4 <add_callerid_accept_for_source>
     9c8:	cmp	r0, #0
     9cc:	beq	a38 <h_hdl_invite+0xa4>
     9d0:	mov	r0, r6
     9d4:	mov	r1, r5
     9d8:	bl	c54 <allow_message>
     9dc:	cmp	r0, #0
     9e0:	bne	a40 <h_hdl_invite+0xac>
     9e4:	ldr	r0, [r5, #56]	; 0x38
     9e8:	ldr	r1, [pc, #88]	; a48 <h_hdl_invite+0xb4>
     9ec:	ldr	r1, [pc, r1]
     9f0:	ldr	r1, [r1, #412]	; 0x19c
     9f4:	and	r0, r1, r0
     9f8:	ldr	r2, [pc, #76]	; a4c <h_hdl_invite+0xb8>
     9fc:	add	r2, pc, r2
     a00:	ldr	r3, [pc, #72]	; a50 <h_hdl_invite+0xbc>
     a04:	add	r3, pc, r3
     a08:	cmp	r0, r1
     a0c:	moveq	r3, r2
     a10:	str	r3, [sp]
     a14:	add	r3, r5, #88	; 0x58
     a18:	ldr	r5, [pc, #52]	; a54 <h_hdl_invite+0xc0>
     a1c:	add	r5, pc, r5
     a20:	ldr	r2, [pc, #48]	; a58 <h_hdl_invite+0xc4>
     a24:	add	r2, pc, r2
     a28:	mov	r0, r5
     a2c:	mov	r1, #512	; 0x200
     a30:	bl	764 <snprintf@plt>
     a34:	str	r5, [r4, #28]
     a38:	mov	r0, #716	; 0x2cc
     a3c:	str	r0, [r4, #16]
     a40:	sub	sp, fp, #16
     a44:	pop	{r4, r5, r6, sl, fp, pc}
     a48:	.word	0x00011660
     a4c:	.word	0x000007eb
     a50:	.word	0x000007e6
     a54:	.word	0x00011695
     a58:	.word	0x0000079b

00000a5c <h_hdl_privmsg_user>:
     a5c:	push	{r4, r5, r6, r7, fp, lr}
     a60:	add	fp, sp, #16
     a64:	mov	r4, r0
     a68:	ldr	r0, [r0, #16]
     a6c:	cmp	r0, #0
     a70:	beq	a78 <h_hdl_privmsg_user+0x1c>
     a74:	pop	{r4, r5, r6, r7, fp, pc}
     a78:	ldm	r4, {r5, r6, r7}
     a7c:	mov	r0, r5
     a80:	mov	r1, r6
     a84:	mov	r2, r7
     a88:	bl	ac4 <add_callerid_accept_for_source>
     a8c:	cmp	r0, #0
     a90:	beq	ab8 <h_hdl_privmsg_user+0x5c>
     a94:	mov	r0, r6
     a98:	mov	r1, r7
     a9c:	bl	c54 <allow_message>
     aa0:	cmp	r0, #0
     aa4:	popne	{r4, r5, r6, r7, fp, pc}
     aa8:	mov	r0, r5
     aac:	mov	r1, r6
     ab0:	mov	r2, r7
     ab4:	bl	f7c <send_callerid_notice>
     ab8:	mov	r0, #716	; 0x2cc
     abc:	str	r0, [r4, #16]
     ac0:	pop	{r4, r5, r6, r7, fp, pc}

00000ac4 <add_callerid_accept_for_source>:
     ac4:	push	{r4, r5, r6, r7, fp, lr}
     ac8:	add	fp, sp, #16
     acc:	sub	sp, sp, #8
     ad0:	mov	r5, r1
     ad4:	ldrb	r1, [r1, #65]	; 0x41
     ad8:	mov	r4, #1
     adc:	tst	r1, #32
     ae0:	cmpne	r0, #0
     ae4:	bne	af4 <add_callerid_accept_for_source+0x30>
     ae8:	mov	r0, r4
     aec:	sub	sp, fp, #16
     af0:	pop	{r4, r5, r6, r7, fp, pc}
     af4:	ldrh	r0, [r5, #80]	; 0x50
     af8:	cmp	r0, #64	; 0x40
     afc:	bne	ae8 <add_callerid_accept_for_source+0x24>
     b00:	mov	r6, r2
     b04:	ldr	r0, [r5, #56]	; 0x38
     b08:	ldr	r7, [pc, #300]	; c3c <add_callerid_accept_for_source+0x178>
     b0c:	ldr	r7, [pc, r7]
     b10:	ldr	r1, [r7, #412]	; 0x19c
     b14:	and	r2, r1, r0
     b18:	cmp	r2, r1
     b1c:	bne	b2c <add_callerid_accept_for_source+0x68>
     b20:	cmp	r6, r5
     b24:	bne	b44 <add_callerid_accept_for_source+0x80>
     b28:	b	ae8 <add_callerid_accept_for_source+0x24>
     b2c:	cmp	r6, r5
     b30:	beq	ae8 <add_callerid_accept_for_source+0x24>
     b34:	ldr	r1, [r7, #284]	; 0x11c
     b38:	and	r0, r1, r0
     b3c:	cmp	r0, r1
     b40:	bne	ae8 <add_callerid_accept_for_source+0x24>
     b44:	ldr	r0, [r5, #432]	; 0x1b0
     b48:	add	r1, r0, #316	; 0x13c
     b4c:	mov	r0, r6
     b50:	bl	d74 <rb_dlinkFind>
     b54:	cmp	r0, #0
     b58:	bne	ae8 <add_callerid_accept_for_source+0x24>
     b5c:	ldr	r0, [r6, #24]
     b60:	cmp	r0, #0
     b64:	beq	b88 <add_callerid_accept_for_source+0xc4>
     b68:	ldr	r0, [r0, #36]	; 0x24
     b6c:	cmp	r0, #0
     b70:	beq	b88 <add_callerid_accept_for_source+0xc4>
     b74:	ldr	r1, [pc, #196]	; c40 <add_callerid_accept_for_source+0x17c>
     b78:	add	r1, pc, r1
     b7c:	bl	77c <privilegeset_in_set@plt>
     b80:	cmp	r0, #0
     b84:	bne	ae8 <add_callerid_accept_for_source+0x24>
     b88:	ldr	r0, [r6, #56]	; 0x38
     b8c:	tst	r0, #4096	; 0x1000
     b90:	beq	bac <add_callerid_accept_for_source+0xe8>
     b94:	ldr	r1, [r6, #24]
     b98:	cmp	r1, #0
     b9c:	beq	bac <add_callerid_accept_for_source+0xe8>
     ba0:	ldr	r1, [r1, #36]	; 0x24
     ba4:	cmp	r1, #0
     ba8:	beq	ae8 <add_callerid_accept_for_source+0x24>
     bac:	ldr	r1, [pc, #144]	; c44 <add_callerid_accept_for_source+0x180>
     bb0:	ldr	r1, [pc, r1]
     bb4:	ldr	r1, [r1, #96]	; 0x60
     bb8:	ldr	r2, [r5, #432]	; 0x1b0
     bbc:	ldr	r2, [r2, #324]	; 0x144
     bc0:	cmp	r2, r1
     bc4:	bcs	bf8 <add_callerid_accept_for_source+0x134>
     bc8:	bl	74c <rb_make_rb_dlink_node@plt>
     bcc:	mov	r1, r0
     bd0:	ldr	r0, [r5, #432]	; 0x1b0
     bd4:	add	r2, r0, #316	; 0x13c
     bd8:	mov	r0, r6
     bdc:	bl	e20 <rb_dlinkAdd>
     be0:	bl	74c <rb_make_rb_dlink_node@plt>
     be4:	mov	r1, r0
     be8:	add	r2, r6, #408	; 0x198
     bec:	mov	r0, r5
     bf0:	bl	e20 <rb_dlinkAdd>
     bf4:	b	ae8 <add_callerid_accept_for_source+0x24>
     bf8:	ldr	r1, [r7, #412]	; 0x19c
     bfc:	and	r0, r1, r0
     c00:	ldr	r2, [pc, #64]	; c48 <add_callerid_accept_for_source+0x184>
     c04:	add	r2, pc, r2
     c08:	ldr	r3, [pc, #60]	; c4c <add_callerid_accept_for_source+0x188>
     c0c:	add	r3, pc, r3
     c10:	cmp	r0, r1
     c14:	moveq	r3, r2
     c18:	str	r3, [sp]
     c1c:	add	r3, r6, #88	; 0x58
     c20:	ldr	r2, [pc, #40]	; c50 <add_callerid_accept_for_source+0x18c>
     c24:	add	r2, pc, r2
     c28:	mov	r0, r5
     c2c:	movw	r1, #494	; 0x1ee
     c30:	bl	758 <sendto_one_numeric@plt>
     c34:	mov	r4, #0
     c38:	b	ae8 <add_callerid_accept_for_source+0x24>
     c3c:	.word	0x00011540
     c40:	.word	0x00000675
     c44:	.word	0x000114ac
     c48:	.word	0x000005e3
     c4c:	.word	0x000005de
     c50:	.word	0x000005d6

00000c54 <allow_message>:
     c54:	push	{r4, r5, r6, sl, fp, lr}
     c58:	add	fp, sp, #16
     c5c:	mov	r4, r0
     c60:	ldrb	r0, [r1, #65]	; 0x41
     c64:	tst	r0, #32
     c68:	beq	d40 <allow_message+0xec>
     c6c:	mov	r5, r1
     c70:	ldrh	r0, [r1, #80]	; 0x50
     c74:	cmp	r0, #64	; 0x40
     c78:	bne	d40 <allow_message+0xec>
     c7c:	ldr	r0, [r5, #56]	; 0x38
     c80:	ldr	r6, [pc, #228]	; d6c <allow_message+0x118>
     c84:	ldr	r6, [pc, r6]
     c88:	ldr	r1, [r6, #412]	; 0x19c
     c8c:	and	r2, r1, r0
     c90:	cmp	r2, r1
     c94:	beq	ca8 <allow_message+0x54>
     c98:	ldr	r1, [r6, #284]	; 0x11c
     c9c:	and	r2, r1, r0
     ca0:	cmp	r2, r1
     ca4:	bne	d40 <allow_message+0xec>
     ca8:	ldr	r1, [r6, #284]	; 0x11c
     cac:	and	r0, r1, r0
     cb0:	cmp	r0, r1
     cb4:	bne	ce0 <allow_message+0x8c>
     cb8:	mov	r0, r4
     cbc:	mov	r1, r5
     cc0:	bl	f10 <has_common_channel>
     cc4:	cmp	r0, #0
     cc8:	beq	ce0 <allow_message+0x8c>
     ccc:	ldr	r0, [r5, #56]	; 0x38
     cd0:	ldr	r1, [r6, #412]	; 0x19c
     cd4:	and	r0, r1, r0
     cd8:	cmp	r0, r1
     cdc:	bne	d40 <allow_message+0xec>
     ce0:	ldrh	r0, [r4, #80]	; 0x50
     ce4:	cmp	r0, #32
     ce8:	beq	d40 <allow_message+0xec>
     cec:	ldr	r0, [r4, #24]
     cf0:	cmp	r0, #0
     cf4:	beq	d18 <allow_message+0xc4>
     cf8:	ldr	r0, [r0, #36]	; 0x24
     cfc:	cmp	r0, #0
     d00:	beq	d18 <allow_message+0xc4>
     d04:	ldr	r1, [pc, #100]	; d70 <allow_message+0x11c>
     d08:	add	r1, pc, r1
     d0c:	bl	77c <privilegeset_in_set@plt>
     d10:	cmp	r0, #0
     d14:	bne	d40 <allow_message+0xec>
     d18:	ldrb	r0, [r4, #57]	; 0x39
     d1c:	tst	r0, #16
     d20:	beq	d48 <allow_message+0xf4>
     d24:	ldr	r0, [r4, #24]
     d28:	cmp	r0, #0
     d2c:	beq	d48 <allow_message+0xf4>
     d30:	cmp	r4, r5
     d34:	ldrne	r0, [r0, #36]	; 0x24
     d38:	cmpne	r0, #0
     d3c:	bne	d50 <allow_message+0xfc>
     d40:	mov	r0, #1
     d44:	pop	{r4, r5, r6, sl, fp, pc}
     d48:	cmp	r4, r5
     d4c:	beq	d40 <allow_message+0xec>
     d50:	ldr	r0, [r5, #432]	; 0x1b0
     d54:	add	r1, r0, #316	; 0x13c
     d58:	mov	r0, r4
     d5c:	bl	d74 <rb_dlinkFind>
     d60:	cmp	r0, #0
     d64:	movwne	r0, #1
     d68:	pop	{r4, r5, r6, sl, fp, pc}
     d6c:	.word	0x000113c8
     d70:	.word	0x000004e5

00000d74 <rb_dlinkFind>:
     d74:	push	{fp, lr}
     d78:	mov	fp, sp
     d7c:	cmp	r1, #0
     d80:	beq	dc8 <rb_dlinkFind+0x54>
     d84:	cmp	r0, #0
     d88:	beq	de8 <rb_dlinkFind+0x74>
     d8c:	ldr	r2, [r1]
     d90:	mov	r1, #0
     d94:	cmp	r2, #0
     d98:	beq	db4 <rb_dlinkFind+0x40>
     d9c:	ldr	r3, [r2]
     da0:	cmp	r3, r0
     da4:	beq	dbc <rb_dlinkFind+0x48>
     da8:	ldr	r2, [r2, #8]
     dac:	cmp	r2, #0
     db0:	bne	d9c <rb_dlinkFind+0x28>
     db4:	mov	r0, r1
     db8:	pop	{fp, pc}
     dbc:	mov	r1, r2
     dc0:	mov	r0, r1
     dc4:	pop	{fp, pc}
     dc8:	ldr	r0, [pc, #56]	; e08 <rb_dlinkFind+0x94>
     dcc:	add	r0, pc, r0
     dd0:	ldr	r1, [pc, #52]	; e0c <rb_dlinkFind+0x98>
     dd4:	add	r1, pc, r1
     dd8:	ldr	r3, [pc, #48]	; e10 <rb_dlinkFind+0x9c>
     ddc:	add	r3, pc, r3
     de0:	movw	r2, #310	; 0x136
     de4:	bl	788 <__assert_fail@plt>
     de8:	ldr	r0, [pc, #36]	; e14 <rb_dlinkFind+0xa0>
     dec:	add	r0, pc, r0
     df0:	ldr	r1, [pc, #32]	; e18 <rb_dlinkFind+0xa4>
     df4:	add	r1, pc, r1
     df8:	ldr	r3, [pc, #28]	; e1c <rb_dlinkFind+0xa8>
     dfc:	add	r3, pc, r3
     e00:	movw	r2, #311	; 0x137
     e04:	bl	788 <__assert_fail@plt>
     e08:	.word	0x00000470
     e0c:	.word	0x00000475
     e10:	.word	0x00000489
     e14:	.word	0x000004ae
     e18:	.word	0x00000455
     e1c:	.word	0x00000469

00000e20 <rb_dlinkAdd>:
     e20:	push	{fp, lr}
     e24:	mov	fp, sp
     e28:	cmp	r0, #0
     e2c:	beq	e8c <rb_dlinkAdd+0x6c>
     e30:	cmp	r1, #0
     e34:	beq	eac <rb_dlinkAdd+0x8c>
     e38:	cmp	r2, #0
     e3c:	beq	ecc <rb_dlinkAdd+0xac>
     e40:	mov	r3, #0
     e44:	stm	r1, {r0, r3}
     e48:	ldr	r0, [r2]
     e4c:	str	r0, [r1, #8]
     e50:	ldr	r0, [r2]
     e54:	cmp	r0, #0
     e58:	beq	e68 <rb_dlinkAdd+0x48>
     e5c:	add	r0, r0, #4
     e60:	str	r1, [r0]
     e64:	b	e78 <rb_dlinkAdd+0x58>
     e68:	mov	r0, r2
     e6c:	ldr	r3, [r0, #4]!
     e70:	cmp	r3, #0
     e74:	streq	r1, [r0]
     e78:	str	r1, [r2]
     e7c:	ldr	r0, [r2, #8]
     e80:	add	r0, r0, #1
     e84:	str	r0, [r2, #8]
     e88:	pop	{fp, pc}
     e8c:	ldr	r0, [pc, #88]	; eec <rb_dlinkAdd+0xcc>
     e90:	add	r0, pc, r0
     e94:	ldr	r1, [pc, #84]	; ef0 <rb_dlinkAdd+0xd0>
     e98:	add	r1, pc, r1
     e9c:	ldr	r3, [pc, #80]	; ef4 <rb_dlinkAdd+0xd4>
     ea0:	add	r3, pc, r3
     ea4:	mov	r2, #143	; 0x8f
     ea8:	bl	788 <__assert_fail@plt>
     eac:	ldr	r0, [pc, #68]	; ef8 <rb_dlinkAdd+0xd8>
     eb0:	add	r0, pc, r0
     eb4:	ldr	r1, [pc, #64]	; efc <rb_dlinkAdd+0xdc>
     eb8:	add	r1, pc, r1
     ebc:	ldr	r3, [pc, #60]	; f00 <rb_dlinkAdd+0xe0>
     ec0:	add	r3, pc, r3
     ec4:	mov	r2, #144	; 0x90
     ec8:	bl	788 <__assert_fail@plt>
     ecc:	ldr	r0, [pc, #48]	; f04 <rb_dlinkAdd+0xe4>
     ed0:	add	r0, pc, r0
     ed4:	ldr	r1, [pc, #44]	; f08 <rb_dlinkAdd+0xe8>
     ed8:	add	r1, pc, r1
     edc:	ldr	r3, [pc, #40]	; f0c <rb_dlinkAdd+0xec>
     ee0:	add	r3, pc, r3
     ee4:	mov	r2, #145	; 0x91
     ee8:	bl	788 <__assert_fail@plt>
     eec:	.word	0x0000040a
     ef0:	.word	0x000003b1
     ef4:	.word	0x00000407
     ef8:	.word	0x00000432
     efc:	.word	0x00000391
     f00:	.word	0x000003e7
     f04:	.word	0x0000036c
     f08:	.word	0x00000371
     f0c:	.word	0x000003c7

00000f10 <has_common_channel>:
     f10:	push	{r4, r5, r6, sl, fp, lr}
     f14:	add	fp, sp, #16
     f18:	ldr	r0, [r0, #24]
     f1c:	ldr	r6, [r0]
     f20:	mov	r4, #0
     f24:	cmp	r6, #0
     f28:	beq	f74 <has_common_channel+0x64>
     f2c:	mov	r5, r1
     f30:	cmp	r5, #0
     f34:	bne	f4c <has_common_channel+0x3c>
     f38:	ldr	r6, [r6, #8]
     f3c:	cmp	r6, #0
     f40:	beq	f74 <has_common_channel+0x64>
     f44:	cmp	r5, #0
     f48:	beq	f38 <has_common_channel+0x28>
     f4c:	ldr	r0, [r5, #24]
     f50:	cmp	r0, #0
     f54:	beq	f38 <has_common_channel+0x28>
     f58:	ldr	r0, [r6]
     f5c:	ldr	r0, [r0, #36]	; 0x24
     f60:	mov	r1, r5
     f64:	bl	734 <find_channel_membership@plt>
     f68:	cmp	r0, #0
     f6c:	beq	f38 <has_common_channel+0x28>
     f70:	mov	r4, #1
     f74:	mov	r0, r4
     f78:	pop	{r4, r5, r6, sl, fp, pc}

00000f7c <send_callerid_notice>:
     f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f80:	add	fp, sp, #28
     f84:	sub	sp, sp, #20
     f88:	mov	r5, r1
     f8c:	ldrb	r1, [r2, #65]	; 0x41
     f90:	tst	r1, #32
     f94:	cmpne	r0, #0
     f98:	bne	fa4 <send_callerid_notice+0x28>
     f9c:	sub	sp, fp, #28
     fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fa4:	mov	r4, r2
     fa8:	ldrh	r0, [r2, #80]	; 0x50
     fac:	cmp	r0, #64	; 0x40
     fb0:	bne	f9c <send_callerid_notice+0x20>
     fb4:	ldr	r0, [r4, #56]	; 0x38
     fb8:	ldr	r9, [pc, #228]	; 10a4 <send_callerid_notice+0x128>
     fbc:	ldr	r9, [pc, r9]
     fc0:	ldr	r1, [r9, #412]	; 0x19c
     fc4:	and	r0, r1, r0
     fc8:	ldr	r8, [pc, #216]	; 10a8 <send_callerid_notice+0x12c>
     fcc:	add	r8, pc, r8
     fd0:	ldr	r7, [pc, #212]	; 10ac <send_callerid_notice+0x130>
     fd4:	add	r7, pc, r7
     fd8:	cmp	r0, r1
     fdc:	mov	r0, r7
     fe0:	moveq	r0, r8
     fe4:	str	r0, [sp]
     fe8:	add	sl, r4, #88	; 0x58
     fec:	ldr	r2, [pc, #188]	; 10b0 <send_callerid_notice+0x134>
     ff0:	add	r2, pc, r2
     ff4:	mov	r0, r5
     ff8:	mov	r1, #716	; 0x2cc
     ffc:	mov	r3, sl
    1000:	bl	758 <sendto_one_numeric@plt>
    1004:	ldr	r0, [pc, #168]	; 10b4 <send_callerid_notice+0x138>
    1008:	ldr	r0, [pc, r0]
    100c:	ldr	r0, [r0, #232]	; 0xe8
    1010:	ldr	r1, [r4, #432]	; 0x1b0
    1014:	ldr	r1, [r1, #40]	; 0x28
    1018:	add	r6, r0, r1
    101c:	bl	6f8 <rb_current_time@plt>
    1020:	cmp	r6, r0
    1024:	bge	f9c <send_callerid_notice+0x20>
    1028:	ldr	r2, [pc, #136]	; 10b8 <send_callerid_notice+0x13c>
    102c:	add	r2, pc, r2
    1030:	mov	r0, r5
    1034:	movw	r1, #717	; 0x2cd
    1038:	mov	r3, sl
    103c:	bl	758 <sendto_one_numeric@plt>
    1040:	ldr	r0, [r4, #56]	; 0x38
    1044:	ldr	r1, [r9, #412]	; 0x19c
    1048:	add	r2, r5, #163	; 0xa3
    104c:	add	r3, r5, #152	; 0x98
    1050:	add	r6, r5, #88	; 0x58
    1054:	and	r0, r1, r0
    1058:	cmp	r0, r1
    105c:	moveq	r7, r8
    1060:	str	r6, [sp]
    1064:	str	r3, [sp, #4]
    1068:	str	r2, [sp, #8]
    106c:	str	r7, [sp, #12]
    1070:	ldr	r0, [pc, #68]	; 10bc <send_callerid_notice+0x140>
    1074:	ldr	r0, [pc, r0]
    1078:	add	r2, r0, #88	; 0x58
    107c:	ldr	r1, [pc, #60]	; 10c0 <send_callerid_notice+0x144>
    1080:	add	r1, pc, r1
    1084:	mov	r0, r4
    1088:	mov	r3, sl
    108c:	bl	710 <sendto_one@plt>
    1090:	bl	6f8 <rb_current_time@plt>
    1094:	ldr	r1, [r4, #432]	; 0x1b0
    1098:	str	r0, [r1, #40]	; 0x28
    109c:	sub	sp, fp, #28
    10a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10a4:	.word	0x00011090
    10a8:	.word	0x0000021b
    10ac:	.word	0x00000216
    10b0:	.word	0x000001cf
    10b4:	.word	0x00011054
    10b8:	.word	0x000002c0
    10bc:	.word	0x00010fe4
    10c0:	.word	0x0000029a

Disassembly of section .fini:

000010c4 <_fini>:
    10c4:	push	{r3, lr}
    10c8:	pop	{r3, pc}
