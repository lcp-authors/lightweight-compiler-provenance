
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00011f58 <.init>:
   11f58:	push	{r3, lr}
   11f5c:	bl	12710 <_start@@Base+0x3c>
   11f60:	pop	{r3, pc}

Disassembly of section .plt:

00011f64 <fdopen@plt-0x14>:
   11f64:	push	{lr}		; (str lr, [sp, #-4]!)
   11f68:	ldr	lr, [pc, #4]	; 11f74 <fdopen@plt-0x4>
   11f6c:	add	lr, pc, lr
   11f70:	ldr	pc, [lr, #8]!
   11f74:	andeq	ip, r1, ip, lsl #1

00011f78 <fdopen@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #28, 20	; 0x1c000
   11f80:	ldr	pc, [ip, #140]!	; 0x8c

00011f84 <raise@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #28, 20	; 0x1c000
   11f8c:	ldr	pc, [ip, #132]!	; 0x84

00011f90 <setbuf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #28, 20	; 0x1c000
   11f98:	ldr	pc, [ip, #124]!	; 0x7c

00011f9c <longjmp@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #28, 20	; 0x1c000
   11fa4:	ldr	pc, [ip, #116]!	; 0x74

00011fa8 <_setjmp@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #28, 20	; 0x1c000
   11fb0:	ldr	pc, [ip, #108]!	; 0x6c

00011fb4 <free@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #28, 20	; 0x1c000
   11fbc:	ldr	pc, [ip, #100]!	; 0x64

00011fc0 <memcpy@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #28, 20	; 0x1c000
   11fc8:	ldr	pc, [ip, #92]!	; 0x5c

00011fcc <ftell@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #28, 20	; 0x1c000
   11fd4:	ldr	pc, [ip, #84]!	; 0x54

00011fd8 <fwrite@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #28, 20	; 0x1c000
   11fe0:	ldr	pc, [ip, #76]!	; 0x4c

00011fe4 <strcpy@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #28, 20	; 0x1c000
   11fec:	ldr	pc, [ip, #68]!	; 0x44

00011ff0 <fread@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #28, 20	; 0x1c000
   11ff8:	ldr	pc, [ip, #60]!	; 0x3c

00011ffc <open64@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #28, 20	; 0x1c000
   12004:	ldr	pc, [ip, #52]!	; 0x34

00012008 <getenv@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #28, 20	; 0x1c000
   12010:	ldr	pc, [ip, #44]!	; 0x2c

00012014 <malloc@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #28, 20	; 0x1c000
   1201c:	ldr	pc, [ip, #36]!	; 0x24

00012020 <__libc_start_main@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #28, 20	; 0x1c000
   12028:	ldr	pc, [ip, #28]!

0001202c <__gmon_start__@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #28, 20	; 0x1c000
   12034:	ldr	pc, [ip, #20]!

00012038 <getpid@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #28, 20	; 0x1c000
   12040:	ldr	pc, [ip, #12]!

00012044 <exit@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #28, 20	; 0x1c000
   1204c:	ldr	pc, [ip, #4]!

00012050 <strlen@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #110592	; 0x1b000
   12058:	ldr	pc, [ip, #4092]!	; 0xffc

0001205c <fprintf@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #110592	; 0x1b000
   12064:	ldr	pc, [ip, #4084]!	; 0xff4

00012068 <__errno_location@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #110592	; 0x1b000
   12070:	ldr	pc, [ip, #4076]!	; 0xfec

00012074 <mkdir@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #110592	; 0x1b000
   1207c:	ldr	pc, [ip, #4068]!	; 0xfe4

00012080 <memset@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #110592	; 0x1b000
   12088:	ldr	pc, [ip, #4060]!	; 0xfdc

0001208c <putchar@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #110592	; 0x1b000
   12094:	ldr	pc, [ip, #4052]!	; 0xfd4

00012098 <strncpy@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #110592	; 0x1b000
   120a0:	ldr	pc, [ip, #4044]!	; 0xfcc

000120a4 <access@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #110592	; 0x1b000
   120ac:	ldr	pc, [ip, #4036]!	; 0xfc4

000120b0 <fclose@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #110592	; 0x1b000
   120b8:	ldr	pc, [ip, #4028]!	; 0xfbc

000120bc <fcntl64@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #110592	; 0x1b000
   120c4:	ldr	pc, [ip, #4020]!	; 0xfb4

000120c8 <vfprintf@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #110592	; 0x1b000
   120d0:	ldr	pc, [ip, #4012]!	; 0xfac

000120d4 <atoi@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #110592	; 0x1b000
   120dc:	ldr	pc, [ip, #4004]!	; 0xfa4

000120e0 <fopen64@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #110592	; 0x1b000
   120e8:	ldr	pc, [ip, #3996]!	; 0xf9c

000120ec <fseek@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #110592	; 0x1b000
   120f4:	ldr	pc, [ip, #3988]!	; 0xf94

000120f8 <fputs@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #110592	; 0x1b000
   12100:	ldr	pc, [ip, #3980]!	; 0xf8c

00012104 <abort@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #110592	; 0x1b000
   1210c:	ldr	pc, [ip, #3972]!	; 0xf84

00012110 <close@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #110592	; 0x1b000
   12118:	ldr	pc, [ip, #3964]!	; 0xf7c

Disassembly of section .text:

0001211c <main@@Base-0x10>:
   1211c:	b	1c360 <__gcov_sort_n_vals@@Base+0x430>
   12120:	b	1c360 <__gcov_sort_n_vals@@Base+0x430>
   12124:	b	1c360 <__gcov_sort_n_vals@@Base+0x430>
   12128:	b	1c360 <__gcov_sort_n_vals@@Base+0x430>

0001212c <main@@Base>:
   1212c:	push	{r4, lr}
   12130:	ldr	r4, [pc, #1164]	; 125c4 <main@@Base+0x498>
   12134:	ldr	r0, [pc, #1164]	; 125c8 <main@@Base+0x49c>
   12138:	ldr	r3, [r4]
   1213c:	ldr	r2, [r4, #4]
   12140:	adds	r3, r3, #1
   12144:	adc	r2, r2, #0
   12148:	str	r3, [r4]
   1214c:	str	r2, [r4, #4]
   12150:	bl	18d44 <UnityBegin@@Base>
   12154:	ldr	r3, [r4, #8]
   12158:	ldr	r2, [r4, #12]
   1215c:	ldr	r1, [pc, #1128]	; 125cc <main@@Base+0x4a0>
   12160:	adds	r3, r3, #1
   12164:	ldr	r0, [pc, #1124]	; 125d0 <main@@Base+0x4a4>
   12168:	adc	r2, r2, #0
   1216c:	str	r3, [r4, #8]
   12170:	str	r2, [r4, #12]
   12174:	movw	r2, #629	; 0x275
   12178:	bl	18bcc <UnityDefaultTestRun@@Base>
   1217c:	ldr	r3, [r4, #16]
   12180:	ldr	r2, [r4, #20]
   12184:	ldr	r1, [pc, #1096]	; 125d4 <main@@Base+0x4a8>
   12188:	adds	r3, r3, #1
   1218c:	ldr	r0, [pc, #1092]	; 125d8 <main@@Base+0x4ac>
   12190:	adc	r2, r2, #0
   12194:	str	r3, [r4, #16]
   12198:	str	r2, [r4, #20]
   1219c:	movw	r2, #630	; 0x276
   121a0:	bl	18bcc <UnityDefaultTestRun@@Base>
   121a4:	ldr	r3, [r4, #24]
   121a8:	ldr	r2, [r4, #28]
   121ac:	ldr	r1, [pc, #1064]	; 125dc <main@@Base+0x4b0>
   121b0:	adds	r3, r3, #1
   121b4:	ldr	r0, [pc, #1060]	; 125e0 <main@@Base+0x4b4>
   121b8:	adc	r2, r2, #0
   121bc:	str	r3, [r4, #24]
   121c0:	str	r2, [r4, #28]
   121c4:	movw	r2, #631	; 0x277
   121c8:	bl	18bcc <UnityDefaultTestRun@@Base>
   121cc:	ldr	r3, [r4, #32]
   121d0:	ldr	r2, [r4, #36]	; 0x24
   121d4:	ldr	r1, [pc, #1032]	; 125e4 <main@@Base+0x4b8>
   121d8:	adds	r3, r3, #1
   121dc:	ldr	r0, [pc, #1028]	; 125e8 <main@@Base+0x4bc>
   121e0:	adc	r2, r2, #0
   121e4:	str	r3, [r4, #32]
   121e8:	str	r2, [r4, #36]	; 0x24
   121ec:	mov	r2, #632	; 0x278
   121f0:	bl	18bcc <UnityDefaultTestRun@@Base>
   121f4:	ldr	r3, [r4, #40]	; 0x28
   121f8:	ldr	r2, [r4, #44]	; 0x2c
   121fc:	ldr	r1, [pc, #1000]	; 125ec <main@@Base+0x4c0>
   12200:	adds	r3, r3, #1
   12204:	ldr	r0, [pc, #996]	; 125f0 <main@@Base+0x4c4>
   12208:	adc	r2, r2, #0
   1220c:	str	r3, [r4, #40]	; 0x28
   12210:	str	r2, [r4, #44]	; 0x2c
   12214:	movw	r2, #633	; 0x279
   12218:	bl	18bcc <UnityDefaultTestRun@@Base>
   1221c:	ldr	r3, [r4, #48]	; 0x30
   12220:	ldr	r2, [r4, #52]	; 0x34
   12224:	ldr	r1, [pc, #968]	; 125f4 <main@@Base+0x4c8>
   12228:	adds	r3, r3, #1
   1222c:	ldr	r0, [pc, #964]	; 125f8 <main@@Base+0x4cc>
   12230:	adc	r2, r2, #0
   12234:	str	r3, [r4, #48]	; 0x30
   12238:	str	r2, [r4, #52]	; 0x34
   1223c:	movw	r2, #634	; 0x27a
   12240:	bl	18bcc <UnityDefaultTestRun@@Base>
   12244:	ldr	r3, [r4, #56]	; 0x38
   12248:	ldr	r2, [r4, #60]	; 0x3c
   1224c:	ldr	r1, [pc, #936]	; 125fc <main@@Base+0x4d0>
   12250:	adds	r3, r3, #1
   12254:	ldr	r0, [pc, #932]	; 12600 <main@@Base+0x4d4>
   12258:	adc	r2, r2, #0
   1225c:	str	r3, [r4, #56]	; 0x38
   12260:	str	r2, [r4, #60]	; 0x3c
   12264:	movw	r2, #635	; 0x27b
   12268:	bl	18bcc <UnityDefaultTestRun@@Base>
   1226c:	ldr	r3, [r4, #64]	; 0x40
   12270:	ldr	r2, [r4, #68]	; 0x44
   12274:	ldr	r1, [pc, #904]	; 12604 <main@@Base+0x4d8>
   12278:	adds	r3, r3, #1
   1227c:	ldr	r0, [pc, #900]	; 12608 <main@@Base+0x4dc>
   12280:	adc	r2, r2, #0
   12284:	str	r3, [r4, #64]	; 0x40
   12288:	str	r2, [r4, #68]	; 0x44
   1228c:	mov	r2, #636	; 0x27c
   12290:	bl	18bcc <UnityDefaultTestRun@@Base>
   12294:	ldr	r3, [r4, #72]	; 0x48
   12298:	ldr	r2, [r4, #76]	; 0x4c
   1229c:	ldr	r1, [pc, #872]	; 1260c <main@@Base+0x4e0>
   122a0:	adds	r3, r3, #1
   122a4:	ldr	r0, [pc, #868]	; 12610 <main@@Base+0x4e4>
   122a8:	adc	r2, r2, #0
   122ac:	str	r3, [r4, #72]	; 0x48
   122b0:	str	r2, [r4, #76]	; 0x4c
   122b4:	movw	r2, #637	; 0x27d
   122b8:	bl	18bcc <UnityDefaultTestRun@@Base>
   122bc:	ldr	r3, [r4, #80]	; 0x50
   122c0:	ldr	r2, [r4, #84]	; 0x54
   122c4:	ldr	r1, [pc, #840]	; 12614 <main@@Base+0x4e8>
   122c8:	adds	r3, r3, #1
   122cc:	ldr	r0, [pc, #836]	; 12618 <main@@Base+0x4ec>
   122d0:	adc	r2, r2, #0
   122d4:	str	r3, [r4, #80]	; 0x50
   122d8:	str	r2, [r4, #84]	; 0x54
   122dc:	movw	r2, #638	; 0x27e
   122e0:	bl	18bcc <UnityDefaultTestRun@@Base>
   122e4:	ldr	r3, [r4, #88]	; 0x58
   122e8:	ldr	r2, [r4, #92]	; 0x5c
   122ec:	ldr	r1, [pc, #808]	; 1261c <main@@Base+0x4f0>
   122f0:	adds	r3, r3, #1
   122f4:	ldr	r0, [pc, #804]	; 12620 <main@@Base+0x4f4>
   122f8:	adc	r2, r2, #0
   122fc:	str	r3, [r4, #88]	; 0x58
   12300:	str	r2, [r4, #92]	; 0x5c
   12304:	movw	r2, #639	; 0x27f
   12308:	bl	18bcc <UnityDefaultTestRun@@Base>
   1230c:	ldr	r3, [r4, #96]	; 0x60
   12310:	ldr	r2, [r4, #100]	; 0x64
   12314:	ldr	r1, [pc, #776]	; 12624 <main@@Base+0x4f8>
   12318:	adds	r3, r3, #1
   1231c:	ldr	r0, [pc, #772]	; 12628 <main@@Base+0x4fc>
   12320:	adc	r2, r2, #0
   12324:	str	r3, [r4, #96]	; 0x60
   12328:	str	r2, [r4, #100]	; 0x64
   1232c:	mov	r2, #640	; 0x280
   12330:	bl	18bcc <UnityDefaultTestRun@@Base>
   12334:	ldr	r3, [r4, #104]	; 0x68
   12338:	ldr	r2, [r4, #108]	; 0x6c
   1233c:	ldr	r1, [pc, #744]	; 1262c <main@@Base+0x500>
   12340:	adds	r3, r3, #1
   12344:	ldr	r0, [pc, #740]	; 12630 <main@@Base+0x504>
   12348:	adc	r2, r2, #0
   1234c:	str	r3, [r4, #104]	; 0x68
   12350:	str	r2, [r4, #108]	; 0x6c
   12354:	movw	r2, #641	; 0x281
   12358:	bl	18bcc <UnityDefaultTestRun@@Base>
   1235c:	ldr	r3, [r4, #112]	; 0x70
   12360:	ldr	r2, [r4, #116]	; 0x74
   12364:	ldr	r1, [pc, #712]	; 12634 <main@@Base+0x508>
   12368:	adds	r3, r3, #1
   1236c:	ldr	r0, [pc, #708]	; 12638 <main@@Base+0x50c>
   12370:	adc	r2, r2, #0
   12374:	str	r3, [r4, #112]	; 0x70
   12378:	str	r2, [r4, #116]	; 0x74
   1237c:	movw	r2, #642	; 0x282
   12380:	bl	18bcc <UnityDefaultTestRun@@Base>
   12384:	ldr	r3, [r4, #120]	; 0x78
   12388:	ldr	r2, [r4, #124]	; 0x7c
   1238c:	ldr	r1, [pc, #680]	; 1263c <main@@Base+0x510>
   12390:	adds	r3, r3, #1
   12394:	ldr	r0, [pc, #676]	; 12640 <main@@Base+0x514>
   12398:	adc	r2, r2, #0
   1239c:	str	r3, [r4, #120]	; 0x78
   123a0:	str	r2, [r4, #124]	; 0x7c
   123a4:	movw	r2, #643	; 0x283
   123a8:	bl	18bcc <UnityDefaultTestRun@@Base>
   123ac:	ldr	r3, [r4, #128]	; 0x80
   123b0:	ldr	r2, [r4, #132]	; 0x84
   123b4:	ldr	r1, [pc, #648]	; 12644 <main@@Base+0x518>
   123b8:	adds	r3, r3, #1
   123bc:	ldr	r0, [pc, #644]	; 12648 <main@@Base+0x51c>
   123c0:	adc	r2, r2, #0
   123c4:	str	r3, [r4, #128]	; 0x80
   123c8:	str	r2, [r4, #132]	; 0x84
   123cc:	mov	r2, #644	; 0x284
   123d0:	bl	18bcc <UnityDefaultTestRun@@Base>
   123d4:	ldr	r3, [r4, #136]	; 0x88
   123d8:	ldr	r2, [r4, #140]	; 0x8c
   123dc:	ldr	r1, [pc, #616]	; 1264c <main@@Base+0x520>
   123e0:	adds	r3, r3, #1
   123e4:	ldr	r0, [pc, #612]	; 12650 <main@@Base+0x524>
   123e8:	adc	r2, r2, #0
   123ec:	str	r3, [r4, #136]	; 0x88
   123f0:	str	r2, [r4, #140]	; 0x8c
   123f4:	movw	r2, #645	; 0x285
   123f8:	bl	18bcc <UnityDefaultTestRun@@Base>
   123fc:	ldr	r3, [r4, #144]	; 0x90
   12400:	ldr	r2, [r4, #148]	; 0x94
   12404:	ldr	r1, [pc, #584]	; 12654 <main@@Base+0x528>
   12408:	adds	r3, r3, #1
   1240c:	ldr	r0, [pc, #580]	; 12658 <main@@Base+0x52c>
   12410:	adc	r2, r2, #0
   12414:	str	r3, [r4, #144]	; 0x90
   12418:	str	r2, [r4, #148]	; 0x94
   1241c:	movw	r2, #646	; 0x286
   12420:	bl	18bcc <UnityDefaultTestRun@@Base>
   12424:	ldr	r3, [r4, #152]	; 0x98
   12428:	ldr	r2, [r4, #156]	; 0x9c
   1242c:	ldr	r1, [pc, #552]	; 1265c <main@@Base+0x530>
   12430:	adds	r3, r3, #1
   12434:	ldr	r0, [pc, #548]	; 12660 <main@@Base+0x534>
   12438:	adc	r2, r2, #0
   1243c:	str	r3, [r4, #152]	; 0x98
   12440:	str	r2, [r4, #156]	; 0x9c
   12444:	movw	r2, #647	; 0x287
   12448:	bl	18bcc <UnityDefaultTestRun@@Base>
   1244c:	ldr	r3, [r4, #160]	; 0xa0
   12450:	ldr	r2, [r4, #164]	; 0xa4
   12454:	ldr	r1, [pc, #520]	; 12664 <main@@Base+0x538>
   12458:	adds	r3, r3, #1
   1245c:	ldr	r0, [pc, #516]	; 12668 <main@@Base+0x53c>
   12460:	adc	r2, r2, #0
   12464:	str	r3, [r4, #160]	; 0xa0
   12468:	str	r2, [r4, #164]	; 0xa4
   1246c:	mov	r2, #648	; 0x288
   12470:	bl	18bcc <UnityDefaultTestRun@@Base>
   12474:	ldr	r3, [r4, #168]	; 0xa8
   12478:	ldr	r2, [r4, #172]	; 0xac
   1247c:	ldr	r1, [pc, #488]	; 1266c <main@@Base+0x540>
   12480:	adds	r3, r3, #1
   12484:	ldr	r0, [pc, #484]	; 12670 <main@@Base+0x544>
   12488:	adc	r2, r2, #0
   1248c:	str	r3, [r4, #168]	; 0xa8
   12490:	str	r2, [r4, #172]	; 0xac
   12494:	movw	r2, #649	; 0x289
   12498:	bl	18bcc <UnityDefaultTestRun@@Base>
   1249c:	ldr	r3, [r4, #176]	; 0xb0
   124a0:	ldr	r2, [r4, #180]	; 0xb4
   124a4:	ldr	r1, [pc, #456]	; 12674 <main@@Base+0x548>
   124a8:	adds	r3, r3, #1
   124ac:	ldr	r0, [pc, #452]	; 12678 <main@@Base+0x54c>
   124b0:	adc	r2, r2, #0
   124b4:	str	r3, [r4, #176]	; 0xb0
   124b8:	str	r2, [r4, #180]	; 0xb4
   124bc:	movw	r2, #650	; 0x28a
   124c0:	bl	18bcc <UnityDefaultTestRun@@Base>
   124c4:	ldr	r3, [r4, #184]	; 0xb8
   124c8:	ldr	r2, [r4, #188]	; 0xbc
   124cc:	ldr	r1, [pc, #424]	; 1267c <main@@Base+0x550>
   124d0:	adds	r3, r3, #1
   124d4:	ldr	r0, [pc, #420]	; 12680 <main@@Base+0x554>
   124d8:	adc	r2, r2, #0
   124dc:	str	r3, [r4, #184]	; 0xb8
   124e0:	str	r2, [r4, #188]	; 0xbc
   124e4:	movw	r2, #651	; 0x28b
   124e8:	bl	18bcc <UnityDefaultTestRun@@Base>
   124ec:	ldr	r3, [r4, #192]	; 0xc0
   124f0:	ldr	r2, [r4, #196]	; 0xc4
   124f4:	ldr	r1, [pc, #392]	; 12684 <main@@Base+0x558>
   124f8:	adds	r3, r3, #1
   124fc:	ldr	r0, [pc, #388]	; 12688 <main@@Base+0x55c>
   12500:	adc	r2, r2, #0
   12504:	str	r3, [r4, #192]	; 0xc0
   12508:	str	r2, [r4, #196]	; 0xc4
   1250c:	mov	r2, #652	; 0x28c
   12510:	bl	18bcc <UnityDefaultTestRun@@Base>
   12514:	ldr	r3, [r4, #200]	; 0xc8
   12518:	ldr	r2, [r4, #204]	; 0xcc
   1251c:	ldr	r1, [pc, #360]	; 1268c <main@@Base+0x560>
   12520:	adds	r3, r3, #1
   12524:	ldr	r0, [pc, #356]	; 12690 <main@@Base+0x564>
   12528:	adc	r2, r2, #0
   1252c:	str	r3, [r4, #200]	; 0xc8
   12530:	str	r2, [r4, #204]	; 0xcc
   12534:	movw	r2, #653	; 0x28d
   12538:	bl	18bcc <UnityDefaultTestRun@@Base>
   1253c:	ldr	r3, [r4, #208]	; 0xd0
   12540:	ldr	r2, [r4, #212]	; 0xd4
   12544:	ldr	r1, [pc, #328]	; 12694 <main@@Base+0x568>
   12548:	adds	r3, r3, #1
   1254c:	ldr	r0, [pc, #324]	; 12698 <main@@Base+0x56c>
   12550:	adc	r2, r2, #0
   12554:	str	r3, [r4, #208]	; 0xd0
   12558:	str	r2, [r4, #212]	; 0xd4
   1255c:	movw	r2, #654	; 0x28e
   12560:	bl	18bcc <UnityDefaultTestRun@@Base>
   12564:	ldr	r3, [r4, #216]	; 0xd8
   12568:	ldr	r2, [r4, #220]	; 0xdc
   1256c:	ldr	r1, [pc, #296]	; 1269c <main@@Base+0x570>
   12570:	adds	r3, r3, #1
   12574:	ldr	r0, [pc, #292]	; 126a0 <main@@Base+0x574>
   12578:	adc	r2, r2, #0
   1257c:	str	r3, [r4, #216]	; 0xd8
   12580:	str	r2, [r4, #220]	; 0xdc
   12584:	movw	r2, #655	; 0x28f
   12588:	bl	18bcc <UnityDefaultTestRun@@Base>
   1258c:	ldr	r3, [r4, #224]	; 0xe0
   12590:	ldr	r2, [r4, #228]	; 0xe4
   12594:	adds	r3, r3, #1
   12598:	adc	r2, r2, #0
   1259c:	str	r3, [r4, #224]	; 0xe0
   125a0:	str	r2, [r4, #228]	; 0xe4
   125a4:	bl	18d98 <UnityEnd@@Base>
   125a8:	ldr	r3, [r4, #232]	; 0xe8
   125ac:	ldr	r2, [r4, #236]	; 0xec
   125b0:	adds	r3, r3, #1
   125b4:	adc	r2, r2, #0
   125b8:	str	r3, [r4, #232]	; 0xe8
   125bc:	str	r2, [r4, #236]	; 0xec
   125c0:	pop	{r4, pc}
   125c4:	strdeq	pc, [r2], -r8
   125c8:	andeq	ip, r1, r5, lsr #16
   125cc:	andeq	ip, r1, r7, ror #16
   125d0:	andeq	r4, r1, r0, lsl #17
   125d4:	andeq	ip, r1, sp, ror r8
   125d8:	andeq	r4, r1, r4, ror lr
   125dc:	muleq	r1, r1, r8
   125e0:	andeq	r4, r1, r0, lsr #26
   125e4:	andeq	ip, r1, sl, lsr #17
   125e8:	andeq	r4, r1, ip, lsl ip
   125ec:	andeq	ip, r1, r3, asr #17
   125f0:	andeq	r4, r1, r0, ror r1
   125f4:	ldrdeq	ip, [r1], -r3
   125f8:	andeq	r3, r1, r0, lsl #17
   125fc:	andeq	ip, r1, r0, ror #17
   12600:			; <UNDEFINED> instruction: 0x000137b4
   12604:	strdeq	ip, [r1], -r4
   12608:	andeq	r3, r1, r8, ror #13
   1260c:	andeq	ip, r1, r9, lsl #18
   12610:	andeq	r3, r1, ip, lsl r6
   12614:	andeq	ip, r1, sp, lsl r9
   12618:	andeq	r3, r1, r0, asr r5
   1261c:	andeq	ip, r1, sp, lsr #18
   12620:	andeq	r3, r1, r4, lsl #9
   12624:	andeq	ip, r1, sp, lsr r9
   12628:			; <UNDEFINED> instruction: 0x000133b8
   1262c:	andeq	ip, r1, sp, asr #18
   12630:	andeq	r3, r1, ip, ror #5
   12634:	andeq	ip, r1, sp, asr r9
   12638:	andeq	r3, r1, r0, lsr #4
   1263c:	andeq	ip, r1, pc, ror #18
   12640:	andeq	r3, r1, r4, asr r1
   12644:	andeq	ip, r1, r4, lsl #19
   12648:	andeq	r3, r1, r8, lsl #1
   1264c:	muleq	r1, r3, r9
   12650:			; <UNDEFINED> instruction: 0x00012fbc
   12654:	andeq	ip, r1, r1, lsr #19
   12658:	strdeq	r2, [r1], -r0
   1265c:			; <UNDEFINED> instruction: 0x0001c9b1
   12660:	andeq	r2, r1, r4, lsr #28
   12664:	andeq	ip, r1, r7, asr #19
   12668:	andeq	r2, r1, r8, asr sp
   1266c:	ldrdeq	ip, [r1], -fp
   12670:	andeq	r2, r1, ip, lsl #25
   12674:	strdeq	ip, [r1], -r4
   12678:	andeq	r2, r1, r8, lsr #20
   1267c:	andeq	ip, r1, r0, lsl sl
   12680:	andeq	r2, r1, r0, asr #23
   12684:	andeq	ip, r1, r0, lsr #20
   12688:	strdeq	r2, [r1], -r4
   1268c:	andeq	ip, r1, r2, lsr sl
   12690:	andeq	r2, r1, ip, asr r9
   12694:	andeq	ip, r1, r6, asr #20
   12698:	muleq	r1, r0, r8
   1269c:	andeq	ip, r1, sp, asr sl
   126a0:	andeq	r2, r1, r4, asr #15
   126a4:	ldr	r0, [pc]	; 126ac <main@@Base+0x580>
   126a8:	b	1c3d0 <__gcov_sort_n_vals@@Base+0x4a0>
   126ac:	strheq	lr, [r2], -r4
   126b0:	ldr	r0, [pc]	; 126b8 <main@@Base+0x58c>
   126b4:	b	1c3d0 <__gcov_sort_n_vals@@Base+0x4a0>
   126b8:	andeq	lr, r2, r0, lsl #8
   126bc:	ldr	r0, [pc]	; 126c4 <main@@Base+0x598>
   126c0:	b	1c3d0 <__gcov_sort_n_vals@@Base+0x4a0>
   126c4:	strdeq	lr, [r2], -r4
   126c8:	ldr	r0, [pc]	; 126d0 <main@@Base+0x5a4>
   126cc:	b	1c3d0 <__gcov_sort_n_vals@@Base+0x4a0>
   126d0:	andeq	lr, r2, r8, lsl #22

000126d4 <_start@@Base>:
   126d4:	mov	fp, #0
   126d8:	mov	lr, #0
   126dc:	pop	{r1}		; (ldr r1, [sp], #4)
   126e0:	mov	r2, sp
   126e4:	push	{r2}		; (str r2, [sp, #-4]!)
   126e8:	push	{r0}		; (str r0, [sp, #-4]!)
   126ec:	ldr	ip, [pc, #16]	; 12704 <_start@@Base+0x30>
   126f0:	push	{ip}		; (str ip, [sp, #-4]!)
   126f4:	ldr	r0, [pc, #12]	; 12708 <_start@@Base+0x34>
   126f8:	ldr	r3, [pc, #12]	; 1270c <_start@@Base+0x38>
   126fc:	bl	12020 <__libc_start_main@plt>
   12700:	bl	12104 <abort@plt>
   12704:	andeq	ip, r1, r8, asr #14
   12708:	andeq	r2, r1, ip, lsr #2
   1270c:	andeq	ip, r1, r8, ror #13
   12710:	ldr	r3, [pc, #20]	; 1272c <_start@@Base+0x58>
   12714:	ldr	r2, [pc, #20]	; 12730 <_start@@Base+0x5c>
   12718:	add	r3, pc, r3
   1271c:	ldr	r2, [r3, r2]
   12720:	cmp	r2, #0
   12724:	bxeq	lr
   12728:	b	1202c <__gmon_start__@plt>
   1272c:	andeq	fp, r1, r0, ror #17
   12730:	muleq	r0, ip, r0
   12734:	ldr	r0, [pc, #24]	; 12754 <_start@@Base+0x80>
   12738:	ldr	r3, [pc, #24]	; 12758 <_start@@Base+0x84>
   1273c:	cmp	r3, r0
   12740:	bxeq	lr
   12744:	ldr	r3, [pc, #16]	; 1275c <_start@@Base+0x88>
   12748:	cmp	r3, #0
   1274c:	bxeq	lr
   12750:	bx	r3
   12754:	andeq	lr, r2, ip, lsr #24
   12758:	andeq	lr, r2, ip, lsr #24
   1275c:	andeq	r0, r0, r0
   12760:	ldr	r0, [pc, #36]	; 1278c <_start@@Base+0xb8>
   12764:	ldr	r1, [pc, #36]	; 12790 <_start@@Base+0xbc>
   12768:	sub	r1, r1, r0
   1276c:	asr	r1, r1, #2
   12770:	add	r1, r1, r1, lsr #31
   12774:	asrs	r1, r1, #1
   12778:	bxeq	lr
   1277c:	ldr	r3, [pc, #16]	; 12794 <_start@@Base+0xc0>
   12780:	cmp	r3, #0
   12784:	bxeq	lr
   12788:	bx	r3
   1278c:	andeq	lr, r2, ip, lsr #24
   12790:	andeq	lr, r2, ip, lsr #24
   12794:	andeq	r0, r0, r0
   12798:	push	{r4, lr}
   1279c:	ldr	r4, [pc, #24]	; 127bc <_start@@Base+0xe8>
   127a0:	ldrb	r3, [r4]
   127a4:	cmp	r3, #0
   127a8:	popne	{r4, pc}
   127ac:	bl	12734 <_start@@Base+0x60>
   127b0:	mov	r3, #1
   127b4:	strb	r3, [r4]
   127b8:	pop	{r4, pc}
   127bc:	andeq	lr, r2, r4, lsr ip
   127c0:	b	12760 <_start@@Base+0x8c>

000127c4 <read_token_not@@Base>:
   127c4:	push	{r4, lr}
   127c8:	sub	sp, sp, #24
   127cc:	add	r0, sp, #12
   127d0:	ldr	r4, [pc, #176]	; 12888 <read_token_not@@Base+0xc4>
   127d4:	ldr	r1, [pc, #176]	; 1288c <read_token_not@@Base+0xc8>
   127d8:	ldr	r3, [r4]
   127dc:	ldr	r2, [r4, #4]
   127e0:	adds	r3, r3, #1
   127e4:	adc	r2, r2, #0
   127e8:	str	r3, [r4]
   127ec:	str	r2, [r4, #4]
   127f0:	bl	193f4 <init_lexer@@Base>
   127f4:	ldr	r3, [r4, #8]
   127f8:	add	r0, sp, #12
   127fc:	ldr	r2, [r4, #12]
   12800:	adds	r3, r3, #1
   12804:	adc	r2, r2, #0
   12808:	str	r3, [r4, #8]
   1280c:	str	r2, [r4, #12]
   12810:	bl	195e0 <next@@Base>
   12814:	ldr	r3, [r4, #16]
   12818:	ldr	r2, [r4, #20]
   1281c:	adds	r3, r3, #1
   12820:	adc	r2, r2, #0
   12824:	str	r3, [r4, #16]
   12828:	mov	r3, #148	; 0x94
   1282c:	str	r3, [sp]
   12830:	mov	r3, #620	; 0x26c
   12834:	str	r2, [r4, #20]
   12838:	mov	r2, #0
   1283c:	ldr	r1, [r0]
   12840:	mov	r0, #12
   12844:	bl	16204 <UnityAssertEqualNumber@@Base>
   12848:	ldr	r3, [r4, #24]
   1284c:	add	r0, sp, #12
   12850:	ldr	r2, [r4, #28]
   12854:	adds	r3, r3, #1
   12858:	adc	r2, r2, #0
   1285c:	str	r3, [r4, #24]
   12860:	str	r2, [r4, #28]
   12864:	bl	19420 <destroy_lexer@@Base>
   12868:	ldr	r3, [r4, #32]
   1286c:	ldr	r2, [r4, #36]	; 0x24
   12870:	adds	r3, r3, #1
   12874:	adc	r2, r2, #0
   12878:	str	r3, [r4, #32]
   1287c:	str	r2, [r4, #36]	; 0x24
   12880:	add	sp, sp, #24
   12884:	pop	{r4, pc}
   12888:	andeq	lr, r2, r8, lsr ip
   1288c:	andeq	ip, r1, r8, asr r7

00012890 <read_token_greaterthan@@Base>:
   12890:	push	{r4, lr}
   12894:	sub	sp, sp, #24
   12898:	add	r0, sp, #12
   1289c:	ldr	r4, [pc, #176]	; 12954 <read_token_greaterthan@@Base+0xc4>
   128a0:	ldr	r1, [pc, #176]	; 12958 <read_token_greaterthan@@Base+0xc8>
   128a4:	ldr	r3, [r4, #40]	; 0x28
   128a8:	ldr	r2, [r4, #44]	; 0x2c
   128ac:	adds	r3, r3, #1
   128b0:	adc	r2, r2, #0
   128b4:	str	r3, [r4, #40]	; 0x28
   128b8:	str	r2, [r4, #44]	; 0x2c
   128bc:	bl	193f4 <init_lexer@@Base>
   128c0:	ldr	r3, [r4, #48]	; 0x30
   128c4:	add	r0, sp, #12
   128c8:	ldr	r2, [r4, #52]	; 0x34
   128cc:	adds	r3, r3, #1
   128d0:	adc	r2, r2, #0
   128d4:	str	r3, [r4, #48]	; 0x30
   128d8:	str	r2, [r4, #52]	; 0x34
   128dc:	bl	195e0 <next@@Base>
   128e0:	ldr	r3, [r4, #56]	; 0x38
   128e4:	ldr	r2, [r4, #60]	; 0x3c
   128e8:	adds	r3, r3, #1
   128ec:	adc	r2, r2, #0
   128f0:	str	r3, [r4, #56]	; 0x38
   128f4:	mov	r3, #148	; 0x94
   128f8:	str	r3, [sp]
   128fc:	movw	r3, #603	; 0x25b
   12900:	str	r2, [r4, #60]	; 0x3c
   12904:	mov	r2, #0
   12908:	ldr	r1, [r0]
   1290c:	mov	r0, #12
   12910:	bl	16204 <UnityAssertEqualNumber@@Base>
   12914:	ldr	r3, [r4, #64]	; 0x40
   12918:	add	r0, sp, #12
   1291c:	ldr	r2, [r4, #68]	; 0x44
   12920:	adds	r3, r3, #1
   12924:	adc	r2, r2, #0
   12928:	str	r3, [r4, #64]	; 0x40
   1292c:	str	r2, [r4, #68]	; 0x44
   12930:	bl	19420 <destroy_lexer@@Base>
   12934:	ldr	r3, [r4, #72]	; 0x48
   12938:	ldr	r2, [r4, #76]	; 0x4c
   1293c:	adds	r3, r3, #1
   12940:	adc	r2, r2, #0
   12944:	str	r3, [r4, #72]	; 0x48
   12948:	str	r2, [r4, #76]	; 0x4c
   1294c:	add	sp, sp, #24
   12950:	pop	{r4, pc}
   12954:	andeq	lr, r2, r8, lsr ip
   12958:	andeq	ip, r1, sl, asr r7

0001295c <read_token_lessthan@@Base>:
   1295c:	push	{r4, lr}
   12960:	sub	sp, sp, #24
   12964:	add	r0, sp, #12
   12968:	ldr	r4, [pc, #176]	; 12a20 <read_token_lessthan@@Base+0xc4>
   1296c:	ldr	r1, [pc, #176]	; 12a24 <read_token_lessthan@@Base+0xc8>
   12970:	ldr	r3, [r4, #80]	; 0x50
   12974:	ldr	r2, [r4, #84]	; 0x54
   12978:	adds	r3, r3, #1
   1297c:	adc	r2, r2, #0
   12980:	str	r3, [r4, #80]	; 0x50
   12984:	str	r2, [r4, #84]	; 0x54
   12988:	bl	193f4 <init_lexer@@Base>
   1298c:	ldr	r3, [r4, #88]	; 0x58
   12990:	add	r0, sp, #12
   12994:	ldr	r2, [r4, #92]	; 0x5c
   12998:	adds	r3, r3, #1
   1299c:	adc	r2, r2, #0
   129a0:	str	r3, [r4, #88]	; 0x58
   129a4:	str	r2, [r4, #92]	; 0x5c
   129a8:	bl	195e0 <next@@Base>
   129ac:	ldr	r3, [r4, #96]	; 0x60
   129b0:	ldr	r2, [r4, #100]	; 0x64
   129b4:	adds	r3, r3, #1
   129b8:	adc	r2, r2, #0
   129bc:	str	r3, [r4, #96]	; 0x60
   129c0:	mov	r3, #148	; 0x94
   129c4:	str	r3, [sp]
   129c8:	movw	r3, #586	; 0x24a
   129cc:	str	r2, [r4, #100]	; 0x64
   129d0:	mov	r2, #0
   129d4:	ldr	r1, [r0]
   129d8:	mov	r0, #12
   129dc:	bl	16204 <UnityAssertEqualNumber@@Base>
   129e0:	ldr	r3, [r4, #104]	; 0x68
   129e4:	add	r0, sp, #12
   129e8:	ldr	r2, [r4, #108]	; 0x6c
   129ec:	adds	r3, r3, #1
   129f0:	adc	r2, r2, #0
   129f4:	str	r3, [r4, #104]	; 0x68
   129f8:	str	r2, [r4, #108]	; 0x6c
   129fc:	bl	19420 <destroy_lexer@@Base>
   12a00:	ldr	r3, [r4, #112]	; 0x70
   12a04:	ldr	r2, [r4, #116]	; 0x74
   12a08:	adds	r3, r3, #1
   12a0c:	adc	r2, r2, #0
   12a10:	str	r3, [r4, #112]	; 0x70
   12a14:	str	r2, [r4, #116]	; 0x74
   12a18:	add	sp, sp, #24
   12a1c:	pop	{r4, pc}
   12a20:	andeq	lr, r2, r8, lsr ip
   12a24:	andeq	ip, r1, ip, asr r7

00012a28 <read_token_greaterequalthan@@Base>:
   12a28:	push	{r4, lr}
   12a2c:	sub	sp, sp, #24
   12a30:	add	r0, sp, #12
   12a34:	ldr	r4, [pc, #176]	; 12aec <read_token_greaterequalthan@@Base+0xc4>
   12a38:	ldr	r1, [pc, #176]	; 12af0 <read_token_greaterequalthan@@Base+0xc8>
   12a3c:	ldr	r3, [r4, #120]	; 0x78
   12a40:	ldr	r2, [r4, #124]	; 0x7c
   12a44:	adds	r3, r3, #1
   12a48:	adc	r2, r2, #0
   12a4c:	str	r3, [r4, #120]	; 0x78
   12a50:	str	r2, [r4, #124]	; 0x7c
   12a54:	bl	193f4 <init_lexer@@Base>
   12a58:	ldr	r3, [r4, #128]	; 0x80
   12a5c:	add	r0, sp, #12
   12a60:	ldr	r2, [r4, #132]	; 0x84
   12a64:	adds	r3, r3, #1
   12a68:	adc	r2, r2, #0
   12a6c:	str	r3, [r4, #128]	; 0x80
   12a70:	str	r2, [r4, #132]	; 0x84
   12a74:	bl	195e0 <next@@Base>
   12a78:	ldr	r3, [r4, #136]	; 0x88
   12a7c:	ldr	r2, [r4, #140]	; 0x8c
   12a80:	adds	r3, r3, #1
   12a84:	adc	r2, r2, #0
   12a88:	str	r3, [r4, #136]	; 0x88
   12a8c:	mov	r3, #148	; 0x94
   12a90:	str	r3, [sp]
   12a94:	movw	r3, #569	; 0x239
   12a98:	str	r2, [r4, #140]	; 0x8c
   12a9c:	mov	r2, #0
   12aa0:	ldr	r1, [r0]
   12aa4:	mov	r0, #12
   12aa8:	bl	16204 <UnityAssertEqualNumber@@Base>
   12aac:	ldr	r3, [r4, #144]	; 0x90
   12ab0:	add	r0, sp, #12
   12ab4:	ldr	r2, [r4, #148]	; 0x94
   12ab8:	adds	r3, r3, #1
   12abc:	adc	r2, r2, #0
   12ac0:	str	r3, [r4, #144]	; 0x90
   12ac4:	str	r2, [r4, #148]	; 0x94
   12ac8:	bl	19420 <destroy_lexer@@Base>
   12acc:	ldr	r3, [r4, #152]	; 0x98
   12ad0:	ldr	r2, [r4, #156]	; 0x9c
   12ad4:	adds	r3, r3, #1
   12ad8:	adc	r2, r2, #0
   12adc:	str	r3, [r4, #152]	; 0x98
   12ae0:	str	r2, [r4, #156]	; 0x9c
   12ae4:	add	sp, sp, #24
   12ae8:	pop	{r4, pc}
   12aec:	andeq	lr, r2, r8, lsr ip
   12af0:	andeq	ip, r1, lr, asr r7

00012af4 <read_token_andand@@Base>:
   12af4:	push	{r4, lr}
   12af8:	sub	sp, sp, #24
   12afc:	add	r0, sp, #12
   12b00:	ldr	r4, [pc, #176]	; 12bb8 <read_token_andand@@Base+0xc4>
   12b04:	ldr	r1, [pc, #176]	; 12bbc <read_token_andand@@Base+0xc8>
   12b08:	ldr	r3, [r4, #160]	; 0xa0
   12b0c:	ldr	r2, [r4, #164]	; 0xa4
   12b10:	adds	r3, r3, #1
   12b14:	adc	r2, r2, #0
   12b18:	str	r3, [r4, #160]	; 0xa0
   12b1c:	str	r2, [r4, #164]	; 0xa4
   12b20:	bl	193f4 <init_lexer@@Base>
   12b24:	ldr	r3, [r4, #168]	; 0xa8
   12b28:	add	r0, sp, #12
   12b2c:	ldr	r2, [r4, #172]	; 0xac
   12b30:	adds	r3, r3, #1
   12b34:	adc	r2, r2, #0
   12b38:	str	r3, [r4, #168]	; 0xa8
   12b3c:	str	r2, [r4, #172]	; 0xac
   12b40:	bl	195e0 <next@@Base>
   12b44:	ldr	r3, [r4, #176]	; 0xb0
   12b48:	ldr	r2, [r4, #180]	; 0xb4
   12b4c:	adds	r3, r3, #1
   12b50:	adc	r2, r2, #0
   12b54:	str	r3, [r4, #176]	; 0xb0
   12b58:	mov	r3, #148	; 0x94
   12b5c:	str	r3, [sp]
   12b60:	mov	r3, #552	; 0x228
   12b64:	str	r2, [r4, #180]	; 0xb4
   12b68:	mov	r2, #0
   12b6c:	ldr	r1, [r0]
   12b70:	mov	r0, #12
   12b74:	bl	16204 <UnityAssertEqualNumber@@Base>
   12b78:	ldr	r3, [r4, #184]	; 0xb8
   12b7c:	add	r0, sp, #12
   12b80:	ldr	r2, [r4, #188]	; 0xbc
   12b84:	adds	r3, r3, #1
   12b88:	adc	r2, r2, #0
   12b8c:	str	r3, [r4, #184]	; 0xb8
   12b90:	str	r2, [r4, #188]	; 0xbc
   12b94:	bl	19420 <destroy_lexer@@Base>
   12b98:	ldr	r3, [r4, #192]	; 0xc0
   12b9c:	ldr	r2, [r4, #196]	; 0xc4
   12ba0:	adds	r3, r3, #1
   12ba4:	adc	r2, r2, #0
   12ba8:	str	r3, [r4, #192]	; 0xc0
   12bac:	str	r2, [r4, #196]	; 0xc4
   12bb0:	add	sp, sp, #24
   12bb4:	pop	{r4, pc}
   12bb8:	andeq	lr, r2, r8, lsr ip
   12bbc:	andeq	ip, r1, r1, ror #14

00012bc0 <read_token_oror@@Base>:
   12bc0:	push	{r4, lr}
   12bc4:	sub	sp, sp, #24
   12bc8:	add	r0, sp, #12
   12bcc:	ldr	r4, [pc, #176]	; 12c84 <read_token_oror@@Base+0xc4>
   12bd0:	ldr	r1, [pc, #176]	; 12c88 <read_token_oror@@Base+0xc8>
   12bd4:	ldr	r3, [r4, #200]	; 0xc8
   12bd8:	ldr	r2, [r4, #204]	; 0xcc
   12bdc:	adds	r3, r3, #1
   12be0:	adc	r2, r2, #0
   12be4:	str	r3, [r4, #200]	; 0xc8
   12be8:	str	r2, [r4, #204]	; 0xcc
   12bec:	bl	193f4 <init_lexer@@Base>
   12bf0:	ldr	r3, [r4, #208]	; 0xd0
   12bf4:	add	r0, sp, #12
   12bf8:	ldr	r2, [r4, #212]	; 0xd4
   12bfc:	adds	r3, r3, #1
   12c00:	adc	r2, r2, #0
   12c04:	str	r3, [r4, #208]	; 0xd0
   12c08:	str	r2, [r4, #212]	; 0xd4
   12c0c:	bl	195e0 <next@@Base>
   12c10:	ldr	r3, [r4, #216]	; 0xd8
   12c14:	ldr	r2, [r4, #220]	; 0xdc
   12c18:	adds	r3, r3, #1
   12c1c:	adc	r2, r2, #0
   12c20:	str	r3, [r4, #216]	; 0xd8
   12c24:	mov	r3, #148	; 0x94
   12c28:	str	r3, [sp]
   12c2c:	movw	r3, #535	; 0x217
   12c30:	str	r2, [r4, #220]	; 0xdc
   12c34:	mov	r2, #0
   12c38:	ldr	r1, [r0]
   12c3c:	mov	r0, #12
   12c40:	bl	16204 <UnityAssertEqualNumber@@Base>
   12c44:	ldr	r3, [r4, #224]	; 0xe0
   12c48:	add	r0, sp, #12
   12c4c:	ldr	r2, [r4, #228]	; 0xe4
   12c50:	adds	r3, r3, #1
   12c54:	adc	r2, r2, #0
   12c58:	str	r3, [r4, #224]	; 0xe0
   12c5c:	str	r2, [r4, #228]	; 0xe4
   12c60:	bl	19420 <destroy_lexer@@Base>
   12c64:	ldr	r3, [r4, #232]	; 0xe8
   12c68:	ldr	r2, [r4, #236]	; 0xec
   12c6c:	adds	r3, r3, #1
   12c70:	adc	r2, r2, #0
   12c74:	str	r3, [r4, #232]	; 0xe8
   12c78:	str	r2, [r4, #236]	; 0xec
   12c7c:	add	sp, sp, #24
   12c80:	pop	{r4, pc}
   12c84:	andeq	lr, r2, r8, lsr ip
   12c88:	andeq	ip, r1, r4, ror #14

00012c8c <read_token_lessequalthan@@Base>:
   12c8c:	push	{r4, lr}
   12c90:	sub	sp, sp, #24
   12c94:	add	r0, sp, #12
   12c98:	ldr	r4, [pc, #176]	; 12d50 <read_token_lessequalthan@@Base+0xc4>
   12c9c:	ldr	r1, [pc, #176]	; 12d54 <read_token_lessequalthan@@Base+0xc8>
   12ca0:	ldr	r3, [r4, #240]	; 0xf0
   12ca4:	ldr	r2, [r4, #244]	; 0xf4
   12ca8:	adds	r3, r3, #1
   12cac:	adc	r2, r2, #0
   12cb0:	str	r3, [r4, #240]	; 0xf0
   12cb4:	str	r2, [r4, #244]	; 0xf4
   12cb8:	bl	193f4 <init_lexer@@Base>
   12cbc:	ldr	r3, [r4, #248]	; 0xf8
   12cc0:	add	r0, sp, #12
   12cc4:	ldr	r2, [r4, #252]	; 0xfc
   12cc8:	adds	r3, r3, #1
   12ccc:	adc	r2, r2, #0
   12cd0:	str	r3, [r4, #248]	; 0xf8
   12cd4:	str	r2, [r4, #252]	; 0xfc
   12cd8:	bl	195e0 <next@@Base>
   12cdc:	ldr	r3, [r4, #256]	; 0x100
   12ce0:	mov	r2, #0
   12ce4:	ldr	r1, [r4, #260]	; 0x104
   12ce8:	adds	r3, r3, #1
   12cec:	adc	r1, r1, #0
   12cf0:	str	r3, [r4, #256]	; 0x100
   12cf4:	mov	r3, #148	; 0x94
   12cf8:	str	r3, [sp]
   12cfc:	movw	r3, #518	; 0x206
   12d00:	str	r1, [r4, #260]	; 0x104
   12d04:	ldr	r1, [r0]
   12d08:	mov	r0, #12
   12d0c:	bl	16204 <UnityAssertEqualNumber@@Base>
   12d10:	ldr	r3, [r4, #264]	; 0x108
   12d14:	add	r0, sp, #12
   12d18:	ldr	r2, [r4, #268]	; 0x10c
   12d1c:	adds	r3, r3, #1
   12d20:	adc	r2, r2, #0
   12d24:	str	r3, [r4, #264]	; 0x108
   12d28:	str	r2, [r4, #268]	; 0x10c
   12d2c:	bl	19420 <destroy_lexer@@Base>
   12d30:	ldr	r3, [r4, #272]	; 0x110
   12d34:	ldr	r2, [r4, #276]	; 0x114
   12d38:	adds	r3, r3, #1
   12d3c:	adc	r2, r2, #0
   12d40:	str	r3, [r4, #272]	; 0x110
   12d44:	str	r2, [r4, #276]	; 0x114
   12d48:	add	sp, sp, #24
   12d4c:	pop	{r4, pc}
   12d50:	andeq	lr, r2, r8, lsr ip
   12d54:	andeq	ip, r1, r7, ror #14

00012d58 <read_token_notequal@@Base>:
   12d58:	push	{r4, lr}
   12d5c:	sub	sp, sp, #24
   12d60:	add	r0, sp, #12
   12d64:	ldr	r4, [pc, #176]	; 12e1c <read_token_notequal@@Base+0xc4>
   12d68:	ldr	r1, [pc, #176]	; 12e20 <read_token_notequal@@Base+0xc8>
   12d6c:	ldr	r3, [r4, #-8]
   12d70:	ldr	r2, [r4, #-4]
   12d74:	adds	r3, r3, #1
   12d78:	adc	r2, r2, #0
   12d7c:	str	r3, [r4, #-8]
   12d80:	str	r2, [r4, #-4]
   12d84:	bl	193f4 <init_lexer@@Base>
   12d88:	ldr	r3, [r4]
   12d8c:	add	r0, sp, #12
   12d90:	ldr	r2, [r4, #4]
   12d94:	adds	r3, r3, #1
   12d98:	adc	r2, r2, #0
   12d9c:	str	r3, [r4]
   12da0:	str	r2, [r4, #4]
   12da4:	bl	195e0 <next@@Base>
   12da8:	ldr	r3, [r4, #8]
   12dac:	ldr	r2, [r4, #12]
   12db0:	adds	r3, r3, #1
   12db4:	adc	r2, r2, #0
   12db8:	str	r3, [r4, #8]
   12dbc:	mov	r3, #148	; 0x94
   12dc0:	str	r3, [sp]
   12dc4:	movw	r3, #501	; 0x1f5
   12dc8:	str	r2, [r4, #12]
   12dcc:	mov	r2, #0
   12dd0:	ldr	r1, [r0]
   12dd4:	mov	r0, #12
   12dd8:	bl	16204 <UnityAssertEqualNumber@@Base>
   12ddc:	ldr	r3, [r4, #16]
   12de0:	add	r0, sp, #12
   12de4:	ldr	r2, [r4, #20]
   12de8:	adds	r3, r3, #1
   12dec:	adc	r2, r2, #0
   12df0:	str	r3, [r4, #16]
   12df4:	str	r2, [r4, #20]
   12df8:	bl	19420 <destroy_lexer@@Base>
   12dfc:	ldr	r3, [r4, #24]
   12e00:	ldr	r2, [r4, #28]
   12e04:	adds	r3, r3, #1
   12e08:	adc	r2, r2, #0
   12e0c:	str	r3, [r4, #24]
   12e10:	str	r2, [r4, #28]
   12e14:	add	sp, sp, #24
   12e18:	pop	{r4, pc}
   12e1c:	andeq	lr, r2, r8, asr sp
   12e20:	andeq	ip, r1, sl, ror #14

00012e24 <read_token_equalequal@@Base>:
   12e24:	push	{r4, lr}
   12e28:	sub	sp, sp, #24
   12e2c:	add	r0, sp, #12
   12e30:	ldr	r4, [pc, #176]	; 12ee8 <read_token_equalequal@@Base+0xc4>
   12e34:	ldr	r1, [pc, #176]	; 12eec <read_token_equalequal@@Base+0xc8>
   12e38:	ldr	r3, [r4]
   12e3c:	ldr	r2, [r4, #4]
   12e40:	adds	r3, r3, #1
   12e44:	adc	r2, r2, #0
   12e48:	str	r3, [r4]
   12e4c:	str	r2, [r4, #4]
   12e50:	bl	193f4 <init_lexer@@Base>
   12e54:	ldr	r3, [r4, #8]
   12e58:	add	r0, sp, #12
   12e5c:	ldr	r2, [r4, #12]
   12e60:	adds	r3, r3, #1
   12e64:	adc	r2, r2, #0
   12e68:	str	r3, [r4, #8]
   12e6c:	str	r2, [r4, #12]
   12e70:	bl	195e0 <next@@Base>
   12e74:	ldr	r3, [r4, #16]
   12e78:	ldr	r2, [r4, #20]
   12e7c:	adds	r3, r3, #1
   12e80:	adc	r2, r2, #0
   12e84:	str	r3, [r4, #16]
   12e88:	mov	r3, #148	; 0x94
   12e8c:	str	r3, [sp]
   12e90:	mov	r3, #484	; 0x1e4
   12e94:	str	r2, [r4, #20]
   12e98:	mov	r2, #0
   12e9c:	ldr	r1, [r0]
   12ea0:	mov	r0, #12
   12ea4:	bl	16204 <UnityAssertEqualNumber@@Base>
   12ea8:	ldr	r3, [r4, #24]
   12eac:	add	r0, sp, #12
   12eb0:	ldr	r2, [r4, #28]
   12eb4:	adds	r3, r3, #1
   12eb8:	adc	r2, r2, #0
   12ebc:	str	r3, [r4, #24]
   12ec0:	str	r2, [r4, #28]
   12ec4:	bl	19420 <destroy_lexer@@Base>
   12ec8:	ldr	r3, [r4, #32]
   12ecc:	ldr	r2, [r4, #36]	; 0x24
   12ed0:	adds	r3, r3, #1
   12ed4:	adc	r2, r2, #0
   12ed8:	str	r3, [r4, #32]
   12edc:	str	r2, [r4, #36]	; 0x24
   12ee0:	add	sp, sp, #24
   12ee4:	pop	{r4, pc}
   12ee8:	andeq	lr, r2, r8, ror sp
   12eec:	andeq	ip, r1, sp, ror #14

00012ef0 <read_token_else@@Base>:
   12ef0:	push	{r4, lr}
   12ef4:	sub	sp, sp, #24
   12ef8:	add	r0, sp, #12
   12efc:	ldr	r4, [pc, #176]	; 12fb4 <read_token_else@@Base+0xc4>
   12f00:	ldr	r1, [pc, #176]	; 12fb8 <read_token_else@@Base+0xc8>
   12f04:	ldr	r3, [r4, #-8]
   12f08:	ldr	r2, [r4, #-4]
   12f0c:	adds	r3, r3, #1
   12f10:	adc	r2, r2, #0
   12f14:	str	r3, [r4, #-8]
   12f18:	str	r2, [r4, #-4]
   12f1c:	bl	193f4 <init_lexer@@Base>
   12f20:	ldr	r3, [r4]
   12f24:	add	r0, sp, #12
   12f28:	ldr	r2, [r4, #4]
   12f2c:	adds	r3, r3, #1
   12f30:	adc	r2, r2, #0
   12f34:	str	r3, [r4]
   12f38:	str	r2, [r4, #4]
   12f3c:	bl	195e0 <next@@Base>
   12f40:	ldr	r3, [r4, #8]
   12f44:	ldr	r2, [r4, #12]
   12f48:	adds	r3, r3, #1
   12f4c:	adc	r2, r2, #0
   12f50:	str	r3, [r4, #8]
   12f54:	mov	r3, #148	; 0x94
   12f58:	str	r3, [sp]
   12f5c:	movw	r3, #467	; 0x1d3
   12f60:	str	r2, [r4, #12]
   12f64:	mov	r2, #0
   12f68:	ldr	r1, [r0]
   12f6c:	mov	r0, #11
   12f70:	bl	16204 <UnityAssertEqualNumber@@Base>
   12f74:	ldr	r3, [r4, #16]
   12f78:	add	r0, sp, #12
   12f7c:	ldr	r2, [r4, #20]
   12f80:	adds	r3, r3, #1
   12f84:	adc	r2, r2, #0
   12f88:	str	r3, [r4, #16]
   12f8c:	str	r2, [r4, #20]
   12f90:	bl	19420 <destroy_lexer@@Base>
   12f94:	ldr	r3, [r4, #24]
   12f98:	ldr	r2, [r4, #28]
   12f9c:	adds	r3, r3, #1
   12fa0:	adc	r2, r2, #0
   12fa4:	str	r3, [r4, #24]
   12fa8:	str	r2, [r4, #28]
   12fac:	add	sp, sp, #24
   12fb0:	pop	{r4, pc}
   12fb4:	andeq	lr, r2, r8, lsr #27
   12fb8:	ldrdeq	ip, [r1], -fp

00012fbc <read_token_if@@Base>:
   12fbc:	push	{r4, lr}
   12fc0:	sub	sp, sp, #24
   12fc4:	add	r0, sp, #12
   12fc8:	ldr	r4, [pc, #176]	; 13080 <read_token_if@@Base+0xc4>
   12fcc:	ldr	r1, [pc, #176]	; 13084 <read_token_if@@Base+0xc8>
   12fd0:	ldr	r3, [r4]
   12fd4:	ldr	r2, [r4, #4]
   12fd8:	adds	r3, r3, #1
   12fdc:	adc	r2, r2, #0
   12fe0:	str	r3, [r4]
   12fe4:	str	r2, [r4, #4]
   12fe8:	bl	193f4 <init_lexer@@Base>
   12fec:	ldr	r3, [r4, #8]
   12ff0:	add	r0, sp, #12
   12ff4:	ldr	r2, [r4, #12]
   12ff8:	adds	r3, r3, #1
   12ffc:	adc	r2, r2, #0
   13000:	str	r3, [r4, #8]
   13004:	str	r2, [r4, #12]
   13008:	bl	195e0 <next@@Base>
   1300c:	ldr	r3, [r4, #16]
   13010:	ldr	r2, [r4, #20]
   13014:	adds	r3, r3, #1
   13018:	adc	r2, r2, #0
   1301c:	str	r3, [r4, #16]
   13020:	mov	r3, #148	; 0x94
   13024:	str	r3, [sp]
   13028:	movw	r3, #450	; 0x1c2
   1302c:	str	r2, [r4, #20]
   13030:	mov	r2, #0
   13034:	ldr	r1, [r0]
   13038:	mov	r0, #10
   1303c:	bl	16204 <UnityAssertEqualNumber@@Base>
   13040:	ldr	r3, [r4, #24]
   13044:	add	r0, sp, #12
   13048:	ldr	r2, [r4, #28]
   1304c:	adds	r3, r3, #1
   13050:	adc	r2, r2, #0
   13054:	str	r3, [r4, #24]
   13058:	str	r2, [r4, #28]
   1305c:	bl	19420 <destroy_lexer@@Base>
   13060:	ldr	r3, [r4, #32]
   13064:	ldr	r2, [r4, #36]	; 0x24
   13068:	adds	r3, r3, #1
   1306c:	adc	r2, r2, #0
   13070:	str	r3, [r4, #32]
   13074:	str	r2, [r4, #36]	; 0x24
   13078:	add	sp, sp, #24
   1307c:	pop	{r4, pc}
   13080:	andeq	lr, r2, r8, asr #27
   13084:	muleq	r1, lr, r9

00013088 <read_token_eof@@Base>:
   13088:	push	{r4, lr}
   1308c:	sub	sp, sp, #24
   13090:	add	r0, sp, #12
   13094:	ldr	r4, [pc, #176]	; 1314c <read_token_eof@@Base+0xc4>
   13098:	ldr	r1, [pc, #176]	; 13150 <read_token_eof@@Base+0xc8>
   1309c:	ldr	r3, [r4, #-8]
   130a0:	ldr	r2, [r4, #-4]
   130a4:	adds	r3, r3, #1
   130a8:	adc	r2, r2, #0
   130ac:	str	r3, [r4, #-8]
   130b0:	str	r2, [r4, #-4]
   130b4:	bl	193f4 <init_lexer@@Base>
   130b8:	ldr	r3, [r4]
   130bc:	add	r0, sp, #12
   130c0:	ldr	r2, [r4, #4]
   130c4:	adds	r3, r3, #1
   130c8:	adc	r2, r2, #0
   130cc:	str	r3, [r4]
   130d0:	str	r2, [r4, #4]
   130d4:	bl	195e0 <next@@Base>
   130d8:	ldr	r3, [r4, #8]
   130dc:	ldr	r2, [r4, #12]
   130e0:	adds	r3, r3, #1
   130e4:	adc	r2, r2, #0
   130e8:	str	r3, [r4, #8]
   130ec:	mov	r3, #148	; 0x94
   130f0:	str	r3, [sp]
   130f4:	movw	r3, #433	; 0x1b1
   130f8:	str	r2, [r4, #12]
   130fc:	mov	r2, #0
   13100:	ldr	r1, [r0]
   13104:	mov	r0, #9
   13108:	bl	16204 <UnityAssertEqualNumber@@Base>
   1310c:	ldr	r3, [r4, #16]
   13110:	add	r0, sp, #12
   13114:	ldr	r2, [r4, #20]
   13118:	adds	r3, r3, #1
   1311c:	adc	r2, r2, #0
   13120:	str	r3, [r4, #16]
   13124:	str	r2, [r4, #20]
   13128:	bl	19420 <destroy_lexer@@Base>
   1312c:	ldr	r3, [r4, #24]
   13130:	ldr	r2, [r4, #28]
   13134:	adds	r3, r3, #1
   13138:	adc	r2, r2, #0
   1313c:	str	r3, [r4, #24]
   13140:	str	r2, [r4, #28]
   13144:	add	sp, sp, #24
   13148:	pop	{r4, pc}
   1314c:	strdeq	lr, [r2], -r8
   13150:	andeq	ip, r1, r0, asr #27

00013154 <read_token_semicolon@@Base>:
   13154:	push	{r4, lr}
   13158:	sub	sp, sp, #24
   1315c:	add	r0, sp, #12
   13160:	ldr	r4, [pc, #176]	; 13218 <read_token_semicolon@@Base+0xc4>
   13164:	ldr	r1, [pc, #176]	; 1321c <read_token_semicolon@@Base+0xc8>
   13168:	ldr	r3, [r4]
   1316c:	ldr	r2, [r4, #4]
   13170:	adds	r3, r3, #1
   13174:	adc	r2, r2, #0
   13178:	str	r3, [r4]
   1317c:	str	r2, [r4, #4]
   13180:	bl	193f4 <init_lexer@@Base>
   13184:	ldr	r3, [r4, #8]
   13188:	add	r0, sp, #12
   1318c:	ldr	r2, [r4, #12]
   13190:	adds	r3, r3, #1
   13194:	adc	r2, r2, #0
   13198:	str	r3, [r4, #8]
   1319c:	str	r2, [r4, #12]
   131a0:	bl	195e0 <next@@Base>
   131a4:	ldr	r3, [r4, #16]
   131a8:	ldr	r2, [r4, #20]
   131ac:	adds	r3, r3, #1
   131b0:	adc	r2, r2, #0
   131b4:	str	r3, [r4, #16]
   131b8:	mov	r3, #148	; 0x94
   131bc:	str	r3, [sp]
   131c0:	mov	r3, #416	; 0x1a0
   131c4:	str	r2, [r4, #20]
   131c8:	mov	r2, #0
   131cc:	ldr	r1, [r0]
   131d0:	mov	r0, #8
   131d4:	bl	16204 <UnityAssertEqualNumber@@Base>
   131d8:	ldr	r3, [r4, #24]
   131dc:	add	r0, sp, #12
   131e0:	ldr	r2, [r4, #28]
   131e4:	adds	r3, r3, #1
   131e8:	adc	r2, r2, #0
   131ec:	str	r3, [r4, #24]
   131f0:	str	r2, [r4, #28]
   131f4:	bl	19420 <destroy_lexer@@Base>
   131f8:	ldr	r3, [r4, #32]
   131fc:	ldr	r2, [r4, #36]	; 0x24
   13200:	adds	r3, r3, #1
   13204:	adc	r2, r2, #0
   13208:	str	r3, [r4, #32]
   1320c:	str	r2, [r4, #36]	; 0x24
   13210:	add	sp, sp, #24
   13214:	pop	{r4, pc}
   13218:	andeq	lr, r2, r8, lsl lr
   1321c:	andeq	ip, r1, r0, ror r7

00013220 <read_token_return@@Base>:
   13220:	push	{r4, lr}
   13224:	sub	sp, sp, #24
   13228:	add	r0, sp, #12
   1322c:	ldr	r4, [pc, #176]	; 132e4 <read_token_return@@Base+0xc4>
   13230:	ldr	r1, [pc, #176]	; 132e8 <read_token_return@@Base+0xc8>
   13234:	ldr	r3, [r4, #-8]
   13238:	ldr	r2, [r4, #-4]
   1323c:	adds	r3, r3, #1
   13240:	adc	r2, r2, #0
   13244:	str	r3, [r4, #-8]
   13248:	str	r2, [r4, #-4]
   1324c:	bl	193f4 <init_lexer@@Base>
   13250:	ldr	r3, [r4]
   13254:	add	r0, sp, #12
   13258:	ldr	r2, [r4, #4]
   1325c:	adds	r3, r3, #1
   13260:	adc	r2, r2, #0
   13264:	str	r3, [r4]
   13268:	str	r2, [r4, #4]
   1326c:	bl	195e0 <next@@Base>
   13270:	ldr	r3, [r4, #8]
   13274:	ldr	r2, [r4, #12]
   13278:	adds	r3, r3, #1
   1327c:	adc	r2, r2, #0
   13280:	str	r3, [r4, #8]
   13284:	mov	r3, #148	; 0x94
   13288:	str	r3, [sp]
   1328c:	movw	r3, #399	; 0x18f
   13290:	str	r2, [r4, #12]
   13294:	mov	r2, #0
   13298:	ldr	r1, [r0]
   1329c:	mov	r0, #7
   132a0:	bl	16204 <UnityAssertEqualNumber@@Base>
   132a4:	ldr	r3, [r4, #16]
   132a8:	add	r0, sp, #12
   132ac:	ldr	r2, [r4, #20]
   132b0:	adds	r3, r3, #1
   132b4:	adc	r2, r2, #0
   132b8:	str	r3, [r4, #16]
   132bc:	str	r2, [r4, #20]
   132c0:	bl	19420 <destroy_lexer@@Base>
   132c4:	ldr	r3, [r4, #24]
   132c8:	ldr	r2, [r4, #28]
   132cc:	adds	r3, r3, #1
   132d0:	adc	r2, r2, #0
   132d4:	str	r3, [r4, #24]
   132d8:	str	r2, [r4, #28]
   132dc:	add	sp, sp, #24
   132e0:	pop	{r4, pc}
   132e4:	andeq	lr, r2, r8, asr #28
   132e8:	andeq	ip, r1, r8, ror #18

000132ec <read_token_cbra@@Base>:
   132ec:	push	{r4, lr}
   132f0:	sub	sp, sp, #24
   132f4:	add	r0, sp, #12
   132f8:	ldr	r4, [pc, #176]	; 133b0 <read_token_cbra@@Base+0xc4>
   132fc:	ldr	r1, [pc, #176]	; 133b4 <read_token_cbra@@Base+0xc8>
   13300:	ldr	r3, [r4]
   13304:	ldr	r2, [r4, #4]
   13308:	adds	r3, r3, #1
   1330c:	adc	r2, r2, #0
   13310:	str	r3, [r4]
   13314:	str	r2, [r4, #4]
   13318:	bl	193f4 <init_lexer@@Base>
   1331c:	ldr	r3, [r4, #8]
   13320:	add	r0, sp, #12
   13324:	ldr	r2, [r4, #12]
   13328:	adds	r3, r3, #1
   1332c:	adc	r2, r2, #0
   13330:	str	r3, [r4, #8]
   13334:	str	r2, [r4, #12]
   13338:	bl	195e0 <next@@Base>
   1333c:	ldr	r3, [r4, #16]
   13340:	ldr	r2, [r4, #20]
   13344:	adds	r3, r3, #1
   13348:	adc	r2, r2, #0
   1334c:	str	r3, [r4, #16]
   13350:	mov	r3, #148	; 0x94
   13354:	str	r3, [sp]
   13358:	movw	r3, #382	; 0x17e
   1335c:	str	r2, [r4, #20]
   13360:	mov	r2, #0
   13364:	ldr	r1, [r0]
   13368:	mov	r0, #6
   1336c:	bl	16204 <UnityAssertEqualNumber@@Base>
   13370:	ldr	r3, [r4, #24]
   13374:	add	r0, sp, #12
   13378:	ldr	r2, [r4, #28]
   1337c:	adds	r3, r3, #1
   13380:	adc	r2, r2, #0
   13384:	str	r3, [r4, #24]
   13388:	str	r2, [r4, #28]
   1338c:	bl	19420 <destroy_lexer@@Base>
   13390:	ldr	r3, [r4, #32]
   13394:	ldr	r2, [r4, #36]	; 0x24
   13398:	adds	r3, r3, #1
   1339c:	adc	r2, r2, #0
   133a0:	str	r3, [r4, #32]
   133a4:	str	r2, [r4, #36]	; 0x24
   133a8:	add	sp, sp, #24
   133ac:	pop	{r4, pc}
   133b0:	andeq	lr, r2, r8, ror #28
   133b4:	andeq	ip, r1, r3, lsr #16

000133b8 <read_token_obra@@Base>:
   133b8:	push	{r4, lr}
   133bc:	sub	sp, sp, #24
   133c0:	add	r0, sp, #12
   133c4:	ldr	r4, [pc, #176]	; 1347c <read_token_obra@@Base+0xc4>
   133c8:	ldr	r1, [pc, #176]	; 13480 <read_token_obra@@Base+0xc8>
   133cc:	ldr	r3, [r4, #-8]
   133d0:	ldr	r2, [r4, #-4]
   133d4:	adds	r3, r3, #1
   133d8:	adc	r2, r2, #0
   133dc:	str	r3, [r4, #-8]
   133e0:	str	r2, [r4, #-4]
   133e4:	bl	193f4 <init_lexer@@Base>
   133e8:	ldr	r3, [r4]
   133ec:	add	r0, sp, #12
   133f0:	ldr	r2, [r4, #4]
   133f4:	adds	r3, r3, #1
   133f8:	adc	r2, r2, #0
   133fc:	str	r3, [r4]
   13400:	str	r2, [r4, #4]
   13404:	bl	195e0 <next@@Base>
   13408:	ldr	r3, [r4, #8]
   1340c:	ldr	r2, [r4, #12]
   13410:	adds	r3, r3, #1
   13414:	adc	r2, r2, #0
   13418:	str	r3, [r4, #8]
   1341c:	mov	r3, #148	; 0x94
   13420:	str	r3, [sp]
   13424:	mov	r3, #364	; 0x16c
   13428:	str	r2, [r4, #12]
   1342c:	mov	r2, #0
   13430:	ldr	r1, [r0]
   13434:	mov	r0, #5
   13438:	bl	16204 <UnityAssertEqualNumber@@Base>
   1343c:	ldr	r3, [r4, #16]
   13440:	add	r0, sp, #12
   13444:	ldr	r2, [r4, #20]
   13448:	adds	r3, r3, #1
   1344c:	adc	r2, r2, #0
   13450:	str	r3, [r4, #16]
   13454:	str	r2, [r4, #20]
   13458:	bl	19420 <destroy_lexer@@Base>
   1345c:	ldr	r3, [r4, #24]
   13460:	ldr	r2, [r4, #28]
   13464:	adds	r3, r3, #1
   13468:	adc	r2, r2, #0
   1346c:	str	r3, [r4, #24]
   13470:	str	r2, [r4, #28]
   13474:	add	sp, sp, #24
   13478:	pop	{r4, pc}
   1347c:	muleq	r2, r8, lr
   13480:	andeq	ip, r1, r2, ror r7

00013484 <read_token_cpar@@Base>:
   13484:	push	{r4, lr}
   13488:	sub	sp, sp, #24
   1348c:	add	r0, sp, #12
   13490:	ldr	r4, [pc, #176]	; 13548 <read_token_cpar@@Base+0xc4>
   13494:	ldr	r1, [pc, #176]	; 1354c <read_token_cpar@@Base+0xc8>
   13498:	ldr	r3, [r4]
   1349c:	ldr	r2, [r4, #4]
   134a0:	adds	r3, r3, #1
   134a4:	adc	r2, r2, #0
   134a8:	str	r3, [r4]
   134ac:	str	r2, [r4, #4]
   134b0:	bl	193f4 <init_lexer@@Base>
   134b4:	ldr	r3, [r4, #8]
   134b8:	add	r0, sp, #12
   134bc:	ldr	r2, [r4, #12]
   134c0:	adds	r3, r3, #1
   134c4:	adc	r2, r2, #0
   134c8:	str	r3, [r4, #8]
   134cc:	str	r2, [r4, #12]
   134d0:	bl	195e0 <next@@Base>
   134d4:	ldr	r3, [r4, #16]
   134d8:	ldr	r2, [r4, #20]
   134dc:	adds	r3, r3, #1
   134e0:	adc	r2, r2, #0
   134e4:	str	r3, [r4, #16]
   134e8:	mov	r3, #148	; 0x94
   134ec:	str	r3, [sp]
   134f0:	movw	r3, #347	; 0x15b
   134f4:	str	r2, [r4, #20]
   134f8:	mov	r2, #0
   134fc:	ldr	r1, [r0]
   13500:	mov	r0, #4
   13504:	bl	16204 <UnityAssertEqualNumber@@Base>
   13508:	ldr	r3, [r4, #24]
   1350c:	add	r0, sp, #12
   13510:	ldr	r2, [r4, #28]
   13514:	adds	r3, r3, #1
   13518:	adc	r2, r2, #0
   1351c:	str	r3, [r4, #24]
   13520:	str	r2, [r4, #28]
   13524:	bl	19420 <destroy_lexer@@Base>
   13528:	ldr	r3, [r4, #32]
   1352c:	ldr	r2, [r4, #36]	; 0x24
   13530:	adds	r3, r3, #1
   13534:	adc	r2, r2, #0
   13538:	str	r3, [r4, #32]
   1353c:	str	r2, [r4, #36]	; 0x24
   13540:	add	sp, sp, #24
   13544:	pop	{r4, pc}
   13548:			; <UNDEFINED> instruction: 0x0002eeb8
   1354c:	andeq	ip, r1, r4, ror r7

00013550 <read_token_opar@@Base>:
   13550:	push	{r4, lr}
   13554:	sub	sp, sp, #24
   13558:	add	r0, sp, #12
   1355c:	ldr	r4, [pc, #176]	; 13614 <read_token_opar@@Base+0xc4>
   13560:	ldr	r1, [pc, #176]	; 13618 <read_token_opar@@Base+0xc8>
   13564:	ldr	r3, [r4, #-8]
   13568:	ldr	r2, [r4, #-4]
   1356c:	adds	r3, r3, #1
   13570:	adc	r2, r2, #0
   13574:	str	r3, [r4, #-8]
   13578:	str	r2, [r4, #-4]
   1357c:	bl	193f4 <init_lexer@@Base>
   13580:	ldr	r3, [r4]
   13584:	add	r0, sp, #12
   13588:	ldr	r2, [r4, #4]
   1358c:	adds	r3, r3, #1
   13590:	adc	r2, r2, #0
   13594:	str	r3, [r4]
   13598:	str	r2, [r4, #4]
   1359c:	bl	195e0 <next@@Base>
   135a0:	ldr	r3, [r4, #8]
   135a4:	ldr	r2, [r4, #12]
   135a8:	adds	r3, r3, #1
   135ac:	adc	r2, r2, #0
   135b0:	str	r3, [r4, #8]
   135b4:	mov	r3, #148	; 0x94
   135b8:	str	r3, [sp]
   135bc:	movw	r3, #330	; 0x14a
   135c0:	str	r2, [r4, #12]
   135c4:	mov	r2, #0
   135c8:	ldr	r1, [r0]
   135cc:	mov	r0, #3
   135d0:	bl	16204 <UnityAssertEqualNumber@@Base>
   135d4:	ldr	r3, [r4, #16]
   135d8:	add	r0, sp, #12
   135dc:	ldr	r2, [r4, #20]
   135e0:	adds	r3, r3, #1
   135e4:	adc	r2, r2, #0
   135e8:	str	r3, [r4, #16]
   135ec:	str	r2, [r4, #20]
   135f0:	bl	19420 <destroy_lexer@@Base>
   135f4:	ldr	r3, [r4, #24]
   135f8:	ldr	r2, [r4, #28]
   135fc:	adds	r3, r3, #1
   13600:	adc	r2, r2, #0
   13604:	str	r3, [r4, #24]
   13608:	str	r2, [r4, #28]
   1360c:	add	sp, sp, #24
   13610:	pop	{r4, pc}
   13614:	andeq	lr, r2, r8, ror #29
   13618:	andeq	ip, r1, r6, ror r7

0001361c <read_token_function@@Base>:
   1361c:	push	{r4, lr}
   13620:	sub	sp, sp, #24
   13624:	add	r0, sp, #12
   13628:	ldr	r4, [pc, #176]	; 136e0 <read_token_function@@Base+0xc4>
   1362c:	ldr	r1, [pc, #176]	; 136e4 <read_token_function@@Base+0xc8>
   13630:	ldr	r3, [r4]
   13634:	ldr	r2, [r4, #4]
   13638:	adds	r3, r3, #1
   1363c:	adc	r2, r2, #0
   13640:	str	r3, [r4]
   13644:	str	r2, [r4, #4]
   13648:	bl	193f4 <init_lexer@@Base>
   1364c:	ldr	r3, [r4, #8]
   13650:	add	r0, sp, #12
   13654:	ldr	r2, [r4, #12]
   13658:	adds	r3, r3, #1
   1365c:	adc	r2, r2, #0
   13660:	str	r3, [r4, #8]
   13664:	str	r2, [r4, #12]
   13668:	bl	195e0 <next@@Base>
   1366c:	ldr	r3, [r4, #16]
   13670:	ldr	r2, [r4, #20]
   13674:	adds	r3, r3, #1
   13678:	adc	r2, r2, #0
   1367c:	str	r3, [r4, #16]
   13680:	mov	r3, #148	; 0x94
   13684:	str	r3, [sp]
   13688:	movw	r3, #313	; 0x139
   1368c:	str	r2, [r4, #20]
   13690:	mov	r2, #0
   13694:	ldr	r1, [r0]
   13698:	mov	r0, #2
   1369c:	bl	16204 <UnityAssertEqualNumber@@Base>
   136a0:	ldr	r3, [r4, #24]
   136a4:	add	r0, sp, #12
   136a8:	ldr	r2, [r4, #28]
   136ac:	adds	r3, r3, #1
   136b0:	adc	r2, r2, #0
   136b4:	str	r3, [r4, #24]
   136b8:	str	r2, [r4, #28]
   136bc:	bl	19420 <destroy_lexer@@Base>
   136c0:	ldr	r3, [r4, #32]
   136c4:	ldr	r2, [r4, #36]	; 0x24
   136c8:	adds	r3, r3, #1
   136cc:	adc	r2, r2, #0
   136d0:	str	r3, [r4, #32]
   136d4:	str	r2, [r4, #36]	; 0x24
   136d8:	add	sp, sp, #24
   136dc:	pop	{r4, pc}
   136e0:	andeq	lr, r2, r8, lsl #30
   136e4:	andeq	ip, r1, r8, ror r8

000136e8 <read_token_int_value@@Base>:
   136e8:	push	{r4, lr}
   136ec:	sub	sp, sp, #24
   136f0:	add	r0, sp, #12
   136f4:	ldr	r4, [pc, #176]	; 137ac <read_token_int_value@@Base+0xc4>
   136f8:	ldr	r1, [pc, #176]	; 137b0 <read_token_int_value@@Base+0xc8>
   136fc:	ldr	r3, [r4, #-8]
   13700:	ldr	r2, [r4, #-4]
   13704:	adds	r3, r3, #1
   13708:	adc	r2, r2, #0
   1370c:	str	r3, [r4, #-8]
   13710:	str	r2, [r4, #-4]
   13714:	bl	193f4 <init_lexer@@Base>
   13718:	ldr	r3, [r4]
   1371c:	add	r0, sp, #12
   13720:	ldr	r2, [r4, #4]
   13724:	adds	r3, r3, #1
   13728:	adc	r2, r2, #0
   1372c:	str	r3, [r4]
   13730:	str	r2, [r4, #4]
   13734:	bl	195e0 <next@@Base>
   13738:	ldr	r3, [r4, #8]
   1373c:	ldr	r2, [r4, #12]
   13740:	adds	r3, r3, #1
   13744:	adc	r2, r2, #0
   13748:	str	r3, [r4, #8]
   1374c:	mov	r3, #148	; 0x94
   13750:	str	r3, [sp]
   13754:	mov	r3, #296	; 0x128
   13758:	str	r2, [r4, #12]
   1375c:	mov	r2, #0
   13760:	ldr	r1, [r0]
   13764:	mov	r0, #1
   13768:	bl	16204 <UnityAssertEqualNumber@@Base>
   1376c:	ldr	r3, [r4, #16]
   13770:	add	r0, sp, #12
   13774:	ldr	r2, [r4, #20]
   13778:	adds	r3, r3, #1
   1377c:	adc	r2, r2, #0
   13780:	str	r3, [r4, #16]
   13784:	str	r2, [r4, #20]
   13788:	bl	19420 <destroy_lexer@@Base>
   1378c:	ldr	r3, [r4, #24]
   13790:	ldr	r2, [r4, #28]
   13794:	adds	r3, r3, #1
   13798:	adc	r2, r2, #0
   1379c:	str	r3, [r4, #24]
   137a0:	str	r2, [r4, #28]
   137a4:	add	sp, sp, #24
   137a8:	pop	{r4, pc}
   137ac:	andeq	lr, r2, r8, lsr pc
   137b0:	andeq	ip, r1, r8, ror r7

000137b4 <read_token_int_type@@Base>:
   137b4:	push	{r4, lr}
   137b8:	sub	sp, sp, #24
   137bc:	add	r0, sp, #12
   137c0:	ldr	r4, [pc, #176]	; 13878 <read_token_int_type@@Base+0xc4>
   137c4:	ldr	r1, [pc, #176]	; 1387c <read_token_int_type@@Base+0xc8>
   137c8:	ldr	r3, [r4]
   137cc:	ldr	r2, [r4, #4]
   137d0:	adds	r3, r3, #1
   137d4:	adc	r2, r2, #0
   137d8:	str	r3, [r4]
   137dc:	str	r2, [r4, #4]
   137e0:	bl	193f4 <init_lexer@@Base>
   137e4:	ldr	r3, [r4, #8]
   137e8:	add	r0, sp, #12
   137ec:	ldr	r2, [r4, #12]
   137f0:	adds	r3, r3, #1
   137f4:	adc	r2, r2, #0
   137f8:	str	r3, [r4, #8]
   137fc:	str	r2, [r4, #12]
   13800:	bl	195e0 <next@@Base>
   13804:	ldr	r3, [r4, #16]
   13808:	ldr	r2, [r4, #20]
   1380c:	adds	r3, r3, #1
   13810:	adc	r2, r2, #0
   13814:	str	r3, [r4, #16]
   13818:	mov	r3, #148	; 0x94
   1381c:	str	r2, [r4, #20]
   13820:	mov	r2, #0
   13824:	str	r3, [sp]
   13828:	movw	r3, #279	; 0x117
   1382c:	ldr	r1, [r0]
   13830:	mov	r0, r2
   13834:	bl	16204 <UnityAssertEqualNumber@@Base>
   13838:	ldr	r3, [r4, #24]
   1383c:	add	r0, sp, #12
   13840:	ldr	r2, [r4, #28]
   13844:	adds	r3, r3, #1
   13848:	adc	r2, r2, #0
   1384c:	str	r3, [r4, #24]
   13850:	str	r2, [r4, #28]
   13854:	bl	19420 <destroy_lexer@@Base>
   13858:	ldr	r3, [r4, #32]
   1385c:	ldr	r2, [r4, #36]	; 0x24
   13860:	adds	r3, r3, #1
   13864:	adc	r2, r2, #0
   13868:	str	r3, [r4, #32]
   1386c:	str	r2, [r4, #36]	; 0x24
   13870:	add	sp, sp, #24
   13874:	pop	{r4, pc}
   13878:	andeq	lr, r2, r8, asr pc
   1387c:	andeq	ip, r1, sp, ror r7

00013880 <if_with_else@@Base>:
   13880:	push	{r4, r5, r6, lr}
   13884:	sub	sp, sp, #24
   13888:	mov	r5, #148	; 0x94
   1388c:	add	r0, sp, #12
   13890:	ldr	r6, [pc, #2256]	; 14168 <if_with_else@@Base+0x8e8>
   13894:	ldr	r1, [pc, #2256]	; 1416c <if_with_else@@Base+0x8ec>
   13898:	add	r4, r6, #848	; 0x350
   1389c:	ldr	r3, [r4, #-8]
   138a0:	ldr	r2, [r4, #-4]
   138a4:	adds	r3, r3, #1
   138a8:	adc	r2, r2, #0
   138ac:	str	r3, [r4, #-8]
   138b0:	str	r2, [r4, #-4]
   138b4:	bl	193f4 <init_lexer@@Base>
   138b8:	ldr	r3, [r4]
   138bc:	add	r0, sp, #12
   138c0:	ldr	r2, [r4, #4]
   138c4:	adds	r3, r3, #1
   138c8:	adc	r2, r2, #0
   138cc:	str	r3, [r4]
   138d0:	str	r2, [r4, #4]
   138d4:	bl	195e0 <next@@Base>
   138d8:	ldr	r3, [r4, #8]
   138dc:	ldr	r2, [r4, #12]
   138e0:	adds	r3, r3, #1
   138e4:	adc	r2, r2, #0
   138e8:	str	r3, [r4, #8]
   138ec:	mov	r3, #210	; 0xd2
   138f0:	str	r2, [r4, #12]
   138f4:	mov	r2, #0
   138f8:	str	r5, [sp]
   138fc:	ldr	r1, [r0]
   13900:	mov	r0, r2
   13904:	bl	16204 <UnityAssertEqualNumber@@Base>
   13908:	ldr	r3, [r4, #16]
   1390c:	add	r0, sp, #12
   13910:	ldr	r2, [r4, #20]
   13914:	adds	r3, r3, #1
   13918:	adc	r2, r2, #0
   1391c:	str	r3, [r4, #16]
   13920:	str	r2, [r4, #20]
   13924:	bl	195e0 <next@@Base>
   13928:	ldr	r3, [r4, #24]
   1392c:	ldr	r2, [r4, #28]
   13930:	adds	r3, r3, #1
   13934:	adc	r2, r2, #0
   13938:	str	r3, [r4, #24]
   1393c:	mov	r3, #212	; 0xd4
   13940:	str	r2, [r4, #28]
   13944:	mov	r2, #0
   13948:	str	r5, [sp]
   1394c:	ldr	r1, [r0]
   13950:	mov	r0, #2
   13954:	bl	16204 <UnityAssertEqualNumber@@Base>
   13958:	ldr	r3, [r4, #32]
   1395c:	add	r0, sp, #12
   13960:	ldr	r2, [r4, #36]	; 0x24
   13964:	adds	r3, r3, #1
   13968:	adc	r2, r2, #0
   1396c:	str	r3, [r4, #32]
   13970:	str	r2, [r4, #36]	; 0x24
   13974:	bl	195e0 <next@@Base>
   13978:	ldr	r3, [r4, #40]	; 0x28
   1397c:	ldr	r2, [r4, #44]	; 0x2c
   13980:	adds	r3, r3, #1
   13984:	adc	r2, r2, #0
   13988:	str	r3, [r4, #40]	; 0x28
   1398c:	mov	r3, #214	; 0xd6
   13990:	str	r2, [r4, #44]	; 0x2c
   13994:	mov	r2, #0
   13998:	str	r5, [sp]
   1399c:	ldr	r1, [r0]
   139a0:	mov	r0, #3
   139a4:	bl	16204 <UnityAssertEqualNumber@@Base>
   139a8:	ldr	r3, [r4, #48]	; 0x30
   139ac:	add	r0, sp, #12
   139b0:	ldr	r2, [r4, #52]	; 0x34
   139b4:	adds	r3, r3, #1
   139b8:	adc	r2, r2, #0
   139bc:	str	r3, [r4, #48]	; 0x30
   139c0:	str	r2, [r4, #52]	; 0x34
   139c4:	bl	195e0 <next@@Base>
   139c8:	ldr	r3, [r4, #56]	; 0x38
   139cc:	ldr	r2, [r4, #60]	; 0x3c
   139d0:	adds	r3, r3, #1
   139d4:	adc	r2, r2, #0
   139d8:	str	r3, [r4, #56]	; 0x38
   139dc:	mov	r3, #216	; 0xd8
   139e0:	str	r2, [r4, #60]	; 0x3c
   139e4:	mov	r2, #0
   139e8:	str	r5, [sp]
   139ec:	ldr	r1, [r0]
   139f0:	mov	r0, #4
   139f4:	bl	16204 <UnityAssertEqualNumber@@Base>
   139f8:	ldr	r3, [r4, #64]	; 0x40
   139fc:	add	r0, sp, #12
   13a00:	ldr	r2, [r4, #68]	; 0x44
   13a04:	adds	r3, r3, #1
   13a08:	adc	r2, r2, #0
   13a0c:	str	r3, [r4, #64]	; 0x40
   13a10:	str	r2, [r4, #68]	; 0x44
   13a14:	bl	195e0 <next@@Base>
   13a18:	ldr	r3, [r4, #72]	; 0x48
   13a1c:	ldr	r2, [r4, #76]	; 0x4c
   13a20:	adds	r3, r3, #1
   13a24:	adc	r2, r2, #0
   13a28:	str	r3, [r4, #72]	; 0x48
   13a2c:	mov	r3, #218	; 0xda
   13a30:	str	r2, [r4, #76]	; 0x4c
   13a34:	mov	r2, #0
   13a38:	str	r5, [sp]
   13a3c:	ldr	r1, [r0]
   13a40:	mov	r0, #5
   13a44:	bl	16204 <UnityAssertEqualNumber@@Base>
   13a48:	ldr	r3, [r4, #80]	; 0x50
   13a4c:	add	r0, sp, #12
   13a50:	ldr	r2, [r4, #84]	; 0x54
   13a54:	adds	r3, r3, #1
   13a58:	adc	r2, r2, #0
   13a5c:	str	r3, [r4, #80]	; 0x50
   13a60:	str	r2, [r4, #84]	; 0x54
   13a64:	bl	195e0 <next@@Base>
   13a68:	ldr	r3, [r4, #88]	; 0x58
   13a6c:	ldr	r2, [r4, #92]	; 0x5c
   13a70:	adds	r3, r3, #1
   13a74:	adc	r2, r2, #0
   13a78:	str	r3, [r4, #88]	; 0x58
   13a7c:	mov	r3, #220	; 0xdc
   13a80:	str	r2, [r4, #92]	; 0x5c
   13a84:	mov	r2, #0
   13a88:	str	r5, [sp]
   13a8c:	ldr	r1, [r0]
   13a90:	mov	r0, #10
   13a94:	bl	16204 <UnityAssertEqualNumber@@Base>
   13a98:	ldr	r3, [r4, #96]	; 0x60
   13a9c:	add	r0, sp, #12
   13aa0:	ldr	r2, [r4, #100]	; 0x64
   13aa4:	adds	r3, r3, #1
   13aa8:	adc	r2, r2, #0
   13aac:	str	r3, [r4, #96]	; 0x60
   13ab0:	str	r2, [r4, #100]	; 0x64
   13ab4:	bl	195e0 <next@@Base>
   13ab8:	ldr	r3, [r4, #104]	; 0x68
   13abc:	ldr	r2, [r4, #108]	; 0x6c
   13ac0:	adds	r3, r3, #1
   13ac4:	adc	r2, r2, #0
   13ac8:	str	r3, [r4, #104]	; 0x68
   13acc:	mov	r3, #222	; 0xde
   13ad0:	str	r2, [r4, #108]	; 0x6c
   13ad4:	mov	r2, #0
   13ad8:	str	r5, [sp]
   13adc:	ldr	r1, [r0]
   13ae0:	mov	r0, #3
   13ae4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13ae8:	ldr	r3, [r4, #112]	; 0x70
   13aec:	add	r0, sp, #12
   13af0:	ldr	r2, [r4, #116]	; 0x74
   13af4:	adds	r3, r3, #1
   13af8:	adc	r2, r2, #0
   13afc:	str	r3, [r4, #112]	; 0x70
   13b00:	str	r2, [r4, #116]	; 0x74
   13b04:	bl	195e0 <next@@Base>
   13b08:	ldr	r3, [r4, #120]	; 0x78
   13b0c:	ldr	r2, [r4, #124]	; 0x7c
   13b10:	adds	r3, r3, #1
   13b14:	adc	r2, r2, #0
   13b18:	str	r3, [r4, #120]	; 0x78
   13b1c:	mov	r3, #224	; 0xe0
   13b20:	str	r2, [r4, #124]	; 0x7c
   13b24:	mov	r2, #0
   13b28:	str	r5, [sp]
   13b2c:	ldr	r1, [r0]
   13b30:	mov	r0, #1
   13b34:	bl	16204 <UnityAssertEqualNumber@@Base>
   13b38:	ldr	r3, [r4, #128]	; 0x80
   13b3c:	add	r0, sp, #12
   13b40:	ldr	r2, [r4, #132]	; 0x84
   13b44:	adds	r3, r3, #1
   13b48:	adc	r2, r2, #0
   13b4c:	str	r3, [r4, #128]	; 0x80
   13b50:	str	r2, [r4, #132]	; 0x84
   13b54:	bl	195e0 <next@@Base>
   13b58:	ldr	r3, [r4, #136]	; 0x88
   13b5c:	ldr	r2, [r4, #140]	; 0x8c
   13b60:	adds	r3, r3, #1
   13b64:	adc	r2, r2, #0
   13b68:	str	r3, [r4, #136]	; 0x88
   13b6c:	mov	r3, #226	; 0xe2
   13b70:	str	r2, [r4, #140]	; 0x8c
   13b74:	mov	r2, #0
   13b78:	str	r5, [sp]
   13b7c:	ldr	r1, [r0]
   13b80:	mov	r0, #12
   13b84:	bl	16204 <UnityAssertEqualNumber@@Base>
   13b88:	ldr	r3, [r4, #144]	; 0x90
   13b8c:	add	r0, sp, #12
   13b90:	ldr	r2, [r4, #148]	; 0x94
   13b94:	adds	r3, r3, #1
   13b98:	adc	r2, r2, #0
   13b9c:	str	r3, [r4, #144]	; 0x90
   13ba0:	str	r2, [r4, #148]	; 0x94
   13ba4:	bl	195e0 <next@@Base>
   13ba8:	ldr	r3, [r4, #152]	; 0x98
   13bac:	ldr	r2, [r4, #156]	; 0x9c
   13bb0:	adds	r3, r3, #1
   13bb4:	adc	r2, r2, #0
   13bb8:	str	r3, [r4, #152]	; 0x98
   13bbc:	mov	r3, #228	; 0xe4
   13bc0:	str	r2, [r4, #156]	; 0x9c
   13bc4:	mov	r2, #0
   13bc8:	str	r5, [sp]
   13bcc:	ldr	r1, [r0]
   13bd0:	mov	r0, #1
   13bd4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13bd8:	ldr	r3, [r4, #160]	; 0xa0
   13bdc:	add	r0, sp, #12
   13be0:	ldr	r2, [r4, #164]	; 0xa4
   13be4:	adds	r3, r3, #1
   13be8:	adc	r2, r2, #0
   13bec:	str	r3, [r4, #160]	; 0xa0
   13bf0:	str	r2, [r4, #164]	; 0xa4
   13bf4:	bl	195e0 <next@@Base>
   13bf8:	ldr	r3, [r4, #168]	; 0xa8
   13bfc:	ldr	r2, [r4, #172]	; 0xac
   13c00:	adds	r3, r3, #1
   13c04:	adc	r2, r2, #0
   13c08:	str	r3, [r4, #168]	; 0xa8
   13c0c:	mov	r3, #230	; 0xe6
   13c10:	str	r2, [r4, #172]	; 0xac
   13c14:	mov	r2, #0
   13c18:	str	r5, [sp]
   13c1c:	ldr	r1, [r0]
   13c20:	mov	r0, #4
   13c24:	bl	16204 <UnityAssertEqualNumber@@Base>
   13c28:	ldr	r3, [r4, #176]	; 0xb0
   13c2c:	add	r0, sp, #12
   13c30:	ldr	r2, [r4, #180]	; 0xb4
   13c34:	adds	r3, r3, #1
   13c38:	adc	r2, r2, #0
   13c3c:	str	r3, [r4, #176]	; 0xb0
   13c40:	str	r2, [r4, #180]	; 0xb4
   13c44:	bl	195e0 <next@@Base>
   13c48:	ldr	r3, [r4, #184]	; 0xb8
   13c4c:	ldr	r2, [r4, #188]	; 0xbc
   13c50:	adds	r3, r3, #1
   13c54:	adc	r2, r2, #0
   13c58:	str	r3, [r4, #184]	; 0xb8
   13c5c:	mov	r3, #232	; 0xe8
   13c60:	str	r2, [r4, #188]	; 0xbc
   13c64:	mov	r2, #0
   13c68:	str	r5, [sp]
   13c6c:	ldr	r1, [r0]
   13c70:	mov	r0, #5
   13c74:	bl	16204 <UnityAssertEqualNumber@@Base>
   13c78:	ldr	r3, [r4, #192]	; 0xc0
   13c7c:	add	r0, sp, #12
   13c80:	ldr	r2, [r4, #196]	; 0xc4
   13c84:	adds	r3, r3, #1
   13c88:	adc	r2, r2, #0
   13c8c:	str	r3, [r4, #192]	; 0xc0
   13c90:	str	r2, [r4, #196]	; 0xc4
   13c94:	bl	195e0 <next@@Base>
   13c98:	ldr	r3, [r4, #200]	; 0xc8
   13c9c:	ldr	r2, [r4, #204]	; 0xcc
   13ca0:	adds	r3, r3, #1
   13ca4:	adc	r2, r2, #0
   13ca8:	str	r3, [r4, #200]	; 0xc8
   13cac:	mov	r3, #234	; 0xea
   13cb0:	str	r2, [r4, #204]	; 0xcc
   13cb4:	mov	r2, #0
   13cb8:	str	r5, [sp]
   13cbc:	ldr	r1, [r0]
   13cc0:	mov	r0, #7
   13cc4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13cc8:	ldr	r3, [r4, #208]	; 0xd0
   13ccc:	add	r0, sp, #12
   13cd0:	ldr	r2, [r4, #212]	; 0xd4
   13cd4:	adds	r3, r3, #1
   13cd8:	adc	r2, r2, #0
   13cdc:	str	r3, [r4, #208]	; 0xd0
   13ce0:	str	r2, [r4, #212]	; 0xd4
   13ce4:	bl	195e0 <next@@Base>
   13ce8:	ldr	r3, [r4, #216]	; 0xd8
   13cec:	ldr	r2, [r4, #220]	; 0xdc
   13cf0:	adds	r3, r3, #1
   13cf4:	adc	r2, r2, #0
   13cf8:	str	r3, [r4, #216]	; 0xd8
   13cfc:	mov	r3, #236	; 0xec
   13d00:	str	r2, [r4, #220]	; 0xdc
   13d04:	mov	r2, #0
   13d08:	str	r5, [sp]
   13d0c:	ldr	r1, [r0]
   13d10:	mov	r0, #1
   13d14:	bl	16204 <UnityAssertEqualNumber@@Base>
   13d18:	ldr	r3, [r4, #224]	; 0xe0
   13d1c:	add	r0, sp, #12
   13d20:	ldr	r2, [r4, #228]	; 0xe4
   13d24:	adds	r3, r3, #1
   13d28:	adc	r2, r2, #0
   13d2c:	str	r3, [r4, #224]	; 0xe0
   13d30:	str	r2, [r4, #228]	; 0xe4
   13d34:	bl	195e0 <next@@Base>
   13d38:	ldr	r3, [r4, #232]	; 0xe8
   13d3c:	ldr	r2, [r4, #236]	; 0xec
   13d40:	adds	r3, r3, #1
   13d44:	adc	r2, r2, #0
   13d48:	str	r3, [r4, #232]	; 0xe8
   13d4c:	mov	r3, #238	; 0xee
   13d50:	str	r2, [r4, #236]	; 0xec
   13d54:	mov	r2, #0
   13d58:	str	r5, [sp]
   13d5c:	ldr	r1, [r0]
   13d60:	mov	r0, #8
   13d64:	bl	16204 <UnityAssertEqualNumber@@Base>
   13d68:	ldr	r3, [r4, #240]	; 0xf0
   13d6c:	add	r0, sp, #12
   13d70:	ldr	r2, [r4, #244]	; 0xf4
   13d74:	adds	r3, r3, #1
   13d78:	adc	r2, r2, #0
   13d7c:	str	r3, [r4, #240]	; 0xf0
   13d80:	str	r2, [r4, #244]	; 0xf4
   13d84:	bl	195e0 <next@@Base>
   13d88:	ldr	r3, [r4, #248]	; 0xf8
   13d8c:	ldr	r2, [r4, #252]	; 0xfc
   13d90:	adds	r3, r3, #1
   13d94:	adc	r2, r2, #0
   13d98:	str	r3, [r4, #248]	; 0xf8
   13d9c:	mov	r3, #240	; 0xf0
   13da0:	str	r2, [r4, #252]	; 0xfc
   13da4:	mov	r2, #0
   13da8:	str	r5, [sp]
   13dac:	ldr	r1, [r0]
   13db0:	mov	r0, #6
   13db4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13db8:	ldr	r3, [r6, #1104]	; 0x450
   13dbc:	add	r0, sp, #12
   13dc0:	ldr	r1, [r6, #1108]	; 0x454
   13dc4:	adds	r3, r3, #1
   13dc8:	adc	r1, r1, #0
   13dcc:	str	r3, [r6, #1104]	; 0x450
   13dd0:	str	r1, [r6, #1108]	; 0x454
   13dd4:	bl	195e0 <next@@Base>
   13dd8:	ldr	r3, [r6, #1112]	; 0x458
   13ddc:	str	r5, [sp]
   13de0:	ldr	r2, [r6, #1116]	; 0x45c
   13de4:	ldr	r1, [r0]
   13de8:	mov	r0, #11
   13dec:	adds	r3, r3, #1
   13df0:	adc	r2, r2, #0
   13df4:	str	r3, [r6, #1112]	; 0x458
   13df8:	mov	r3, #242	; 0xf2
   13dfc:	str	r2, [r6, #1116]	; 0x45c
   13e00:	mov	r2, #0
   13e04:	bl	16204 <UnityAssertEqualNumber@@Base>
   13e08:	ldr	r3, [r6, #1120]	; 0x460
   13e0c:	add	r0, sp, #12
   13e10:	ldr	r2, [r6, #1124]	; 0x464
   13e14:	adds	r3, r3, #1
   13e18:	adc	r2, r2, #0
   13e1c:	str	r3, [r6, #1120]	; 0x460
   13e20:	str	r2, [r6, #1124]	; 0x464
   13e24:	bl	195e0 <next@@Base>
   13e28:	ldr	r3, [r6, #1128]	; 0x468
   13e2c:	str	r5, [sp]
   13e30:	ldr	r2, [r6, #1132]	; 0x46c
   13e34:	ldr	r1, [r0]
   13e38:	mov	r0, #5
   13e3c:	adds	r3, r3, #1
   13e40:	adc	r2, r2, #0
   13e44:	str	r3, [r6, #1128]	; 0x468
   13e48:	mov	r3, #244	; 0xf4
   13e4c:	str	r2, [r6, #1132]	; 0x46c
   13e50:	mov	r2, #0
   13e54:	bl	16204 <UnityAssertEqualNumber@@Base>
   13e58:	ldr	r3, [r6, #1136]	; 0x470
   13e5c:	add	r0, sp, #12
   13e60:	ldr	r2, [r6, #1140]	; 0x474
   13e64:	adds	r3, r3, #1
   13e68:	adc	r2, r2, #0
   13e6c:	str	r3, [r6, #1136]	; 0x470
   13e70:	str	r2, [r6, #1140]	; 0x474
   13e74:	bl	195e0 <next@@Base>
   13e78:	ldr	r3, [r6, #1144]	; 0x478
   13e7c:	str	r5, [sp]
   13e80:	ldr	r2, [r6, #1148]	; 0x47c
   13e84:	ldr	r1, [r0]
   13e88:	mov	r0, #7
   13e8c:	adds	r3, r3, #1
   13e90:	adc	r2, r2, #0
   13e94:	str	r3, [r6, #1144]	; 0x478
   13e98:	mov	r3, #246	; 0xf6
   13e9c:	str	r2, [r6, #1148]	; 0x47c
   13ea0:	mov	r2, #0
   13ea4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13ea8:	ldr	r3, [r6, #1152]	; 0x480
   13eac:	add	r0, sp, #12
   13eb0:	ldr	r2, [r6, #1156]	; 0x484
   13eb4:	adds	r3, r3, #1
   13eb8:	adc	r2, r2, #0
   13ebc:	str	r3, [r6, #1152]	; 0x480
   13ec0:	str	r2, [r6, #1156]	; 0x484
   13ec4:	bl	195e0 <next@@Base>
   13ec8:	ldr	r3, [r6, #1160]	; 0x488
   13ecc:	str	r5, [sp]
   13ed0:	ldr	r2, [r6, #1164]	; 0x48c
   13ed4:	ldr	r1, [r0]
   13ed8:	mov	r0, #1
   13edc:	adds	r3, r3, #1
   13ee0:	adc	r2, r2, #0
   13ee4:	str	r3, [r6, #1160]	; 0x488
   13ee8:	mov	r3, #248	; 0xf8
   13eec:	str	r2, [r6, #1164]	; 0x48c
   13ef0:	mov	r2, #0
   13ef4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13ef8:	ldr	r3, [r6, #1168]	; 0x490
   13efc:	add	r0, sp, #12
   13f00:	ldr	r2, [r6, #1172]	; 0x494
   13f04:	adds	r3, r3, #1
   13f08:	adc	r2, r2, #0
   13f0c:	str	r3, [r6, #1168]	; 0x490
   13f10:	str	r2, [r6, #1172]	; 0x494
   13f14:	bl	195e0 <next@@Base>
   13f18:	ldr	r3, [r6, #1176]	; 0x498
   13f1c:	str	r5, [sp]
   13f20:	ldr	r2, [r6, #1180]	; 0x49c
   13f24:	ldr	r1, [r0]
   13f28:	mov	r0, #8
   13f2c:	adds	r3, r3, #1
   13f30:	adc	r2, r2, #0
   13f34:	str	r3, [r6, #1176]	; 0x498
   13f38:	mov	r3, #250	; 0xfa
   13f3c:	str	r2, [r6, #1180]	; 0x49c
   13f40:	mov	r2, #0
   13f44:	bl	16204 <UnityAssertEqualNumber@@Base>
   13f48:	ldr	r3, [r6, #1184]	; 0x4a0
   13f4c:	add	r0, sp, #12
   13f50:	ldr	r2, [r6, #1188]	; 0x4a4
   13f54:	adds	r3, r3, #1
   13f58:	adc	r2, r2, #0
   13f5c:	str	r3, [r6, #1184]	; 0x4a0
   13f60:	str	r2, [r6, #1188]	; 0x4a4
   13f64:	bl	195e0 <next@@Base>
   13f68:	ldr	r3, [r6, #1192]	; 0x4a8
   13f6c:	str	r5, [sp]
   13f70:	ldr	r2, [r6, #1196]	; 0x4ac
   13f74:	ldr	r1, [r0]
   13f78:	mov	r0, #6
   13f7c:	adds	r3, r3, #1
   13f80:	adc	r2, r2, #0
   13f84:	str	r3, [r6, #1192]	; 0x4a8
   13f88:	mov	r3, #252	; 0xfc
   13f8c:	str	r2, [r6, #1196]	; 0x4ac
   13f90:	mov	r2, #0
   13f94:	bl	16204 <UnityAssertEqualNumber@@Base>
   13f98:	ldr	r3, [r6, #1200]	; 0x4b0
   13f9c:	add	r0, sp, #12
   13fa0:	ldr	r2, [r6, #1204]	; 0x4b4
   13fa4:	adds	r3, r3, #1
   13fa8:	adc	r2, r2, #0
   13fac:	str	r3, [r6, #1200]	; 0x4b0
   13fb0:	str	r2, [r6, #1204]	; 0x4b4
   13fb4:	bl	195e0 <next@@Base>
   13fb8:	ldr	r3, [r6, #1208]	; 0x4b8
   13fbc:	str	r5, [sp]
   13fc0:	ldr	r2, [r6, #1212]	; 0x4bc
   13fc4:	ldr	r1, [r0]
   13fc8:	mov	r0, #7
   13fcc:	adds	r3, r3, #1
   13fd0:	adc	r2, r2, #0
   13fd4:	str	r3, [r6, #1208]	; 0x4b8
   13fd8:	mov	r3, #254	; 0xfe
   13fdc:	str	r2, [r6, #1212]	; 0x4bc
   13fe0:	mov	r2, #0
   13fe4:	bl	16204 <UnityAssertEqualNumber@@Base>
   13fe8:	ldr	r3, [r6, #1216]	; 0x4c0
   13fec:	add	r0, sp, #12
   13ff0:	ldr	r2, [r6, #1220]	; 0x4c4
   13ff4:	adds	r3, r3, #1
   13ff8:	adc	r2, r2, #0
   13ffc:	str	r3, [r6, #1216]	; 0x4c0
   14000:	str	r2, [r6, #1220]	; 0x4c4
   14004:	bl	195e0 <next@@Base>
   14008:	ldr	r3, [r6, #1224]	; 0x4c8
   1400c:	str	r5, [sp]
   14010:	ldr	r2, [r6, #1228]	; 0x4cc
   14014:	ldr	r1, [r0]
   14018:	mov	r0, #1
   1401c:	adds	r3, r3, #1
   14020:	adc	r2, r2, #0
   14024:	str	r3, [r6, #1224]	; 0x4c8
   14028:	mov	r3, #256	; 0x100
   1402c:	str	r2, [r6, #1228]	; 0x4cc
   14030:	mov	r2, #0
   14034:	bl	16204 <UnityAssertEqualNumber@@Base>
   14038:	ldr	r3, [r6, #1232]	; 0x4d0
   1403c:	add	r0, sp, #12
   14040:	ldr	r2, [r6, #1236]	; 0x4d4
   14044:	adds	r3, r3, #1
   14048:	adc	r2, r2, #0
   1404c:	str	r3, [r6, #1232]	; 0x4d0
   14050:	str	r2, [r6, #1236]	; 0x4d4
   14054:	bl	195e0 <next@@Base>
   14058:	ldr	r3, [r6, #1240]	; 0x4d8
   1405c:	str	r5, [sp]
   14060:	ldr	r2, [r6, #1244]	; 0x4dc
   14064:	ldr	r1, [r0]
   14068:	mov	r0, #8
   1406c:	adds	r3, r3, #1
   14070:	adc	r2, r2, #0
   14074:	str	r3, [r6, #1240]	; 0x4d8
   14078:	movw	r3, #258	; 0x102
   1407c:	str	r2, [r6, #1244]	; 0x4dc
   14080:	mov	r2, #0
   14084:	bl	16204 <UnityAssertEqualNumber@@Base>
   14088:	ldr	r3, [r6, #1248]	; 0x4e0
   1408c:	add	r0, sp, #12
   14090:	ldr	r2, [r6, #1252]	; 0x4e4
   14094:	adds	r3, r3, #1
   14098:	adc	r2, r2, #0
   1409c:	str	r3, [r6, #1248]	; 0x4e0
   140a0:	str	r2, [r6, #1252]	; 0x4e4
   140a4:	bl	195e0 <next@@Base>
   140a8:	ldr	r3, [r6, #1256]	; 0x4e8
   140ac:	str	r5, [sp]
   140b0:	ldr	r2, [r6, #1260]	; 0x4ec
   140b4:	ldr	r1, [r0]
   140b8:	mov	r0, #6
   140bc:	adds	r3, r3, #1
   140c0:	adc	r2, r2, #0
   140c4:	str	r3, [r6, #1256]	; 0x4e8
   140c8:	mov	r3, #260	; 0x104
   140cc:	str	r2, [r6, #1260]	; 0x4ec
   140d0:	mov	r2, #0
   140d4:	bl	16204 <UnityAssertEqualNumber@@Base>
   140d8:	ldr	r3, [r6, #1264]	; 0x4f0
   140dc:	add	r0, sp, #12
   140e0:	ldr	r2, [r6, #1268]	; 0x4f4
   140e4:	adds	r3, r3, #1
   140e8:	adc	r2, r2, #0
   140ec:	str	r3, [r6, #1264]	; 0x4f0
   140f0:	str	r2, [r6, #1268]	; 0x4f4
   140f4:	bl	195e0 <next@@Base>
   140f8:	ldr	r3, [r6, #1272]	; 0x4f8
   140fc:	str	r5, [sp]
   14100:	ldr	r2, [r6, #1276]	; 0x4fc
   14104:	ldr	r1, [r0]
   14108:	mov	r0, #9
   1410c:	adds	r3, r3, #1
   14110:	adc	r2, r2, #0
   14114:	str	r3, [r6, #1272]	; 0x4f8
   14118:	movw	r3, #262	; 0x106
   1411c:	str	r2, [r6, #1276]	; 0x4fc
   14120:	mov	r2, #0
   14124:	bl	16204 <UnityAssertEqualNumber@@Base>
   14128:	ldr	r3, [r6, #1280]	; 0x500
   1412c:	add	r0, sp, #12
   14130:	ldr	r2, [r6, #1284]	; 0x504
   14134:	adds	r3, r3, #1
   14138:	adc	r2, r2, #0
   1413c:	str	r3, [r6, #1280]	; 0x500
   14140:	str	r2, [r6, #1284]	; 0x504
   14144:	bl	19420 <destroy_lexer@@Base>
   14148:	ldr	r3, [r6, #1288]	; 0x508
   1414c:	ldr	r2, [r6, #1292]	; 0x50c
   14150:	adds	r3, r3, #1
   14154:	adc	r2, r2, #0
   14158:	str	r3, [r6, #1288]	; 0x508
   1415c:	str	r2, [r6, #1292]	; 0x50c
   14160:	add	sp, sp, #24
   14164:	pop	{r4, r5, r6, pc}
   14168:	andeq	lr, r2, r8, lsr ip
   1416c:	andeq	ip, r1, r1, lsl #15

00014170 <if_without_else@@Base>:
   14170:	push	{r4, r5, r6, lr}
   14174:	sub	sp, sp, #24
   14178:	mov	r5, #148	; 0x94
   1417c:	add	r0, sp, #12
   14180:	ldr	r6, [pc, #1776]	; 14878 <if_without_else@@Base+0x708>
   14184:	ldr	r1, [pc, #1776]	; 1487c <if_without_else@@Base+0x70c>
   14188:	add	r4, r6, #1296	; 0x510
   1418c:	ldr	r3, [r4]
   14190:	ldr	r2, [r4, #4]
   14194:	adds	r3, r3, #1
   14198:	adc	r2, r2, #0
   1419c:	str	r3, [r4]
   141a0:	str	r2, [r4, #4]
   141a4:	bl	193f4 <init_lexer@@Base>
   141a8:	ldr	r3, [r4, #8]
   141ac:	add	r0, sp, #12
   141b0:	ldr	r2, [r4, #12]
   141b4:	adds	r3, r3, #1
   141b8:	adc	r2, r2, #0
   141bc:	str	r3, [r4, #8]
   141c0:	str	r2, [r4, #12]
   141c4:	bl	195e0 <next@@Base>
   141c8:	ldr	r3, [r4, #16]
   141cc:	ldr	r2, [r4, #20]
   141d0:	adds	r3, r3, #1
   141d4:	adc	r2, r2, #0
   141d8:	str	r3, [r4, #16]
   141dc:	mov	r3, #140	; 0x8c
   141e0:	str	r2, [r4, #20]
   141e4:	mov	r2, #0
   141e8:	str	r5, [sp]
   141ec:	ldr	r1, [r0]
   141f0:	mov	r0, r2
   141f4:	bl	16204 <UnityAssertEqualNumber@@Base>
   141f8:	ldr	r3, [r4, #24]
   141fc:	add	r0, sp, #12
   14200:	ldr	r2, [r4, #28]
   14204:	adds	r3, r3, #1
   14208:	adc	r2, r2, #0
   1420c:	str	r3, [r4, #24]
   14210:	str	r2, [r4, #28]
   14214:	bl	195e0 <next@@Base>
   14218:	ldr	r3, [r4, #32]
   1421c:	ldr	r2, [r4, #36]	; 0x24
   14220:	adds	r3, r3, #1
   14224:	adc	r2, r2, #0
   14228:	str	r3, [r4, #32]
   1422c:	mov	r3, #142	; 0x8e
   14230:	str	r2, [r4, #36]	; 0x24
   14234:	mov	r2, #0
   14238:	str	r5, [sp]
   1423c:	ldr	r1, [r0]
   14240:	mov	r0, #2
   14244:	bl	16204 <UnityAssertEqualNumber@@Base>
   14248:	ldr	r3, [r4, #40]	; 0x28
   1424c:	add	r0, sp, #12
   14250:	ldr	r2, [r4, #44]	; 0x2c
   14254:	adds	r3, r3, #1
   14258:	adc	r2, r2, #0
   1425c:	str	r3, [r4, #40]	; 0x28
   14260:	str	r2, [r4, #44]	; 0x2c
   14264:	bl	195e0 <next@@Base>
   14268:	ldr	r3, [r4, #48]	; 0x30
   1426c:	ldr	r2, [r4, #52]	; 0x34
   14270:	adds	r3, r3, #1
   14274:	adc	r2, r2, #0
   14278:	str	r3, [r4, #48]	; 0x30
   1427c:	mov	r3, #144	; 0x90
   14280:	str	r2, [r4, #52]	; 0x34
   14284:	mov	r2, #0
   14288:	str	r5, [sp]
   1428c:	ldr	r1, [r0]
   14290:	mov	r0, #3
   14294:	bl	16204 <UnityAssertEqualNumber@@Base>
   14298:	ldr	r3, [r4, #56]	; 0x38
   1429c:	add	r0, sp, #12
   142a0:	ldr	r2, [r4, #60]	; 0x3c
   142a4:	adds	r3, r3, #1
   142a8:	adc	r2, r2, #0
   142ac:	str	r3, [r4, #56]	; 0x38
   142b0:	str	r2, [r4, #60]	; 0x3c
   142b4:	bl	195e0 <next@@Base>
   142b8:	ldr	r3, [r4, #64]	; 0x40
   142bc:	ldr	r2, [r4, #68]	; 0x44
   142c0:	adds	r3, r3, #1
   142c4:	adc	r2, r2, #0
   142c8:	str	r3, [r4, #64]	; 0x40
   142cc:	mov	r3, #146	; 0x92
   142d0:	str	r2, [r4, #68]	; 0x44
   142d4:	mov	r2, #0
   142d8:	str	r5, [sp]
   142dc:	ldr	r1, [r0]
   142e0:	mov	r0, #4
   142e4:	bl	16204 <UnityAssertEqualNumber@@Base>
   142e8:	ldr	r3, [r4, #72]	; 0x48
   142ec:	add	r0, sp, #12
   142f0:	ldr	r2, [r4, #76]	; 0x4c
   142f4:	adds	r3, r3, #1
   142f8:	adc	r2, r2, #0
   142fc:	str	r3, [r4, #72]	; 0x48
   14300:	str	r2, [r4, #76]	; 0x4c
   14304:	bl	195e0 <next@@Base>
   14308:	ldr	r3, [r4, #80]	; 0x50
   1430c:	ldr	r2, [r4, #84]	; 0x54
   14310:	adds	r3, r3, #1
   14314:	adc	r2, r2, #0
   14318:	str	r3, [r4, #80]	; 0x50
   1431c:	mov	r3, r5
   14320:	str	r2, [r4, #84]	; 0x54
   14324:	mov	r2, #0
   14328:	str	r5, [sp]
   1432c:	ldr	r1, [r0]
   14330:	mov	r0, #5
   14334:	bl	16204 <UnityAssertEqualNumber@@Base>
   14338:	ldr	r3, [r4, #88]	; 0x58
   1433c:	add	r0, sp, #12
   14340:	ldr	r2, [r4, #92]	; 0x5c
   14344:	adds	r3, r3, #1
   14348:	adc	r2, r2, #0
   1434c:	str	r3, [r4, #88]	; 0x58
   14350:	str	r2, [r4, #92]	; 0x5c
   14354:	bl	195e0 <next@@Base>
   14358:	ldr	r3, [r4, #96]	; 0x60
   1435c:	ldr	r2, [r4, #100]	; 0x64
   14360:	adds	r3, r3, #1
   14364:	adc	r2, r2, #0
   14368:	str	r3, [r4, #96]	; 0x60
   1436c:	mov	r3, #150	; 0x96
   14370:	str	r2, [r4, #100]	; 0x64
   14374:	mov	r2, #0
   14378:	str	r5, [sp]
   1437c:	ldr	r1, [r0]
   14380:	mov	r0, #10
   14384:	bl	16204 <UnityAssertEqualNumber@@Base>
   14388:	ldr	r3, [r4, #104]	; 0x68
   1438c:	add	r0, sp, #12
   14390:	ldr	r2, [r4, #108]	; 0x6c
   14394:	adds	r3, r3, #1
   14398:	adc	r2, r2, #0
   1439c:	str	r3, [r4, #104]	; 0x68
   143a0:	str	r2, [r4, #108]	; 0x6c
   143a4:	bl	195e0 <next@@Base>
   143a8:	ldr	r3, [r4, #112]	; 0x70
   143ac:	ldr	r2, [r4, #116]	; 0x74
   143b0:	adds	r3, r3, #1
   143b4:	adc	r2, r2, #0
   143b8:	str	r3, [r4, #112]	; 0x70
   143bc:	mov	r3, #152	; 0x98
   143c0:	str	r2, [r4, #116]	; 0x74
   143c4:	mov	r2, #0
   143c8:	str	r5, [sp]
   143cc:	ldr	r1, [r0]
   143d0:	mov	r0, #3
   143d4:	bl	16204 <UnityAssertEqualNumber@@Base>
   143d8:	ldr	r3, [r4, #120]	; 0x78
   143dc:	add	r0, sp, #12
   143e0:	ldr	r2, [r4, #124]	; 0x7c
   143e4:	adds	r3, r3, #1
   143e8:	adc	r2, r2, #0
   143ec:	str	r3, [r4, #120]	; 0x78
   143f0:	str	r2, [r4, #124]	; 0x7c
   143f4:	bl	195e0 <next@@Base>
   143f8:	ldr	r3, [r4, #128]	; 0x80
   143fc:	ldr	r2, [r4, #132]	; 0x84
   14400:	adds	r3, r3, #1
   14404:	adc	r2, r2, #0
   14408:	str	r3, [r4, #128]	; 0x80
   1440c:	mov	r3, #154	; 0x9a
   14410:	str	r2, [r4, #132]	; 0x84
   14414:	mov	r2, #0
   14418:	str	r5, [sp]
   1441c:	ldr	r1, [r0]
   14420:	mov	r0, #1
   14424:	bl	16204 <UnityAssertEqualNumber@@Base>
   14428:	ldr	r3, [r4, #136]	; 0x88
   1442c:	add	r0, sp, #12
   14430:	ldr	r2, [r4, #140]	; 0x8c
   14434:	adds	r3, r3, #1
   14438:	adc	r2, r2, #0
   1443c:	str	r3, [r4, #136]	; 0x88
   14440:	str	r2, [r4, #140]	; 0x8c
   14444:	bl	195e0 <next@@Base>
   14448:	ldr	r3, [r4, #144]	; 0x90
   1444c:	ldr	r2, [r4, #148]	; 0x94
   14450:	adds	r3, r3, #1
   14454:	adc	r2, r2, #0
   14458:	str	r3, [r4, #144]	; 0x90
   1445c:	mov	r3, #156	; 0x9c
   14460:	str	r2, [r4, #148]	; 0x94
   14464:	mov	r2, #0
   14468:	str	r5, [sp]
   1446c:	ldr	r1, [r0]
   14470:	mov	r0, #12
   14474:	bl	16204 <UnityAssertEqualNumber@@Base>
   14478:	ldr	r3, [r4, #152]	; 0x98
   1447c:	add	r0, sp, #12
   14480:	ldr	r2, [r4, #156]	; 0x9c
   14484:	adds	r3, r3, #1
   14488:	adc	r2, r2, #0
   1448c:	str	r3, [r4, #152]	; 0x98
   14490:	str	r2, [r4, #156]	; 0x9c
   14494:	bl	195e0 <next@@Base>
   14498:	ldr	r3, [r4, #160]	; 0xa0
   1449c:	ldr	r2, [r4, #164]	; 0xa4
   144a0:	adds	r3, r3, #1
   144a4:	adc	r2, r2, #0
   144a8:	str	r3, [r4, #160]	; 0xa0
   144ac:	mov	r3, #158	; 0x9e
   144b0:	str	r2, [r4, #164]	; 0xa4
   144b4:	mov	r2, #0
   144b8:	str	r5, [sp]
   144bc:	ldr	r1, [r0]
   144c0:	mov	r0, #1
   144c4:	bl	16204 <UnityAssertEqualNumber@@Base>
   144c8:	ldr	r3, [r4, #168]	; 0xa8
   144cc:	add	r0, sp, #12
   144d0:	ldr	r2, [r4, #172]	; 0xac
   144d4:	adds	r3, r3, #1
   144d8:	adc	r2, r2, #0
   144dc:	str	r3, [r4, #168]	; 0xa8
   144e0:	str	r2, [r4, #172]	; 0xac
   144e4:	bl	195e0 <next@@Base>
   144e8:	ldr	r3, [r4, #176]	; 0xb0
   144ec:	ldr	r2, [r4, #180]	; 0xb4
   144f0:	adds	r3, r3, #1
   144f4:	adc	r2, r2, #0
   144f8:	str	r3, [r4, #176]	; 0xb0
   144fc:	mov	r3, #160	; 0xa0
   14500:	str	r2, [r4, #180]	; 0xb4
   14504:	mov	r2, #0
   14508:	str	r5, [sp]
   1450c:	ldr	r1, [r0]
   14510:	mov	r0, #4
   14514:	bl	16204 <UnityAssertEqualNumber@@Base>
   14518:	ldr	r3, [r4, #184]	; 0xb8
   1451c:	add	r0, sp, #12
   14520:	ldr	r2, [r4, #188]	; 0xbc
   14524:	adds	r3, r3, #1
   14528:	adc	r2, r2, #0
   1452c:	str	r3, [r4, #184]	; 0xb8
   14530:	str	r2, [r4, #188]	; 0xbc
   14534:	bl	195e0 <next@@Base>
   14538:	ldr	r3, [r4, #192]	; 0xc0
   1453c:	ldr	r2, [r4, #196]	; 0xc4
   14540:	adds	r3, r3, #1
   14544:	adc	r2, r2, #0
   14548:	str	r3, [r4, #192]	; 0xc0
   1454c:	mov	r3, #162	; 0xa2
   14550:	str	r2, [r4, #196]	; 0xc4
   14554:	mov	r2, #0
   14558:	str	r5, [sp]
   1455c:	ldr	r1, [r0]
   14560:	mov	r0, #5
   14564:	bl	16204 <UnityAssertEqualNumber@@Base>
   14568:	ldr	r3, [r4, #200]	; 0xc8
   1456c:	add	r0, sp, #12
   14570:	ldr	r2, [r4, #204]	; 0xcc
   14574:	adds	r3, r3, #1
   14578:	adc	r2, r2, #0
   1457c:	str	r3, [r4, #200]	; 0xc8
   14580:	str	r2, [r4, #204]	; 0xcc
   14584:	bl	195e0 <next@@Base>
   14588:	ldr	r3, [r4, #208]	; 0xd0
   1458c:	ldr	r2, [r4, #212]	; 0xd4
   14590:	adds	r3, r3, #1
   14594:	adc	r2, r2, #0
   14598:	str	r3, [r4, #208]	; 0xd0
   1459c:	mov	r3, #164	; 0xa4
   145a0:	str	r2, [r4, #212]	; 0xd4
   145a4:	mov	r2, #0
   145a8:	str	r5, [sp]
   145ac:	ldr	r1, [r0]
   145b0:	mov	r0, #7
   145b4:	bl	16204 <UnityAssertEqualNumber@@Base>
   145b8:	ldr	r3, [r4, #216]	; 0xd8
   145bc:	add	r0, sp, #12
   145c0:	ldr	r2, [r4, #220]	; 0xdc
   145c4:	adds	r3, r3, #1
   145c8:	adc	r2, r2, #0
   145cc:	str	r3, [r4, #216]	; 0xd8
   145d0:	str	r2, [r4, #220]	; 0xdc
   145d4:	bl	195e0 <next@@Base>
   145d8:	ldr	r3, [r4, #224]	; 0xe0
   145dc:	ldr	r2, [r4, #228]	; 0xe4
   145e0:	adds	r3, r3, #1
   145e4:	adc	r2, r2, #0
   145e8:	str	r3, [r4, #224]	; 0xe0
   145ec:	mov	r3, #166	; 0xa6
   145f0:	str	r2, [r4, #228]	; 0xe4
   145f4:	mov	r2, #0
   145f8:	str	r5, [sp]
   145fc:	ldr	r1, [r0]
   14600:	mov	r0, #1
   14604:	bl	16204 <UnityAssertEqualNumber@@Base>
   14608:	ldr	r3, [r4, #232]	; 0xe8
   1460c:	add	r0, sp, #12
   14610:	ldr	r2, [r4, #236]	; 0xec
   14614:	adds	r3, r3, #1
   14618:	adc	r2, r2, #0
   1461c:	str	r3, [r4, #232]	; 0xe8
   14620:	str	r2, [r4, #236]	; 0xec
   14624:	bl	195e0 <next@@Base>
   14628:	ldr	r3, [r4, #240]	; 0xf0
   1462c:	ldr	r2, [r4, #244]	; 0xf4
   14630:	adds	r3, r3, #1
   14634:	adc	r2, r2, #0
   14638:	str	r3, [r4, #240]	; 0xf0
   1463c:	mov	r3, #168	; 0xa8
   14640:	str	r2, [r4, #244]	; 0xf4
   14644:	mov	r2, #0
   14648:	str	r5, [sp]
   1464c:	ldr	r1, [r0]
   14650:	mov	r0, #8
   14654:	bl	16204 <UnityAssertEqualNumber@@Base>
   14658:	ldr	r3, [r4, #248]	; 0xf8
   1465c:	add	r0, sp, #12
   14660:	ldr	r2, [r4, #252]	; 0xfc
   14664:	adds	r3, r3, #1
   14668:	adc	r2, r2, #0
   1466c:	str	r3, [r4, #248]	; 0xf8
   14670:	str	r2, [r4, #252]	; 0xfc
   14674:	bl	195e0 <next@@Base>
   14678:	ldr	r3, [r6, #1552]	; 0x610
   1467c:	mov	r2, #0
   14680:	str	r5, [sp]
   14684:	ldr	r1, [r6, #1556]	; 0x614
   14688:	adds	r3, r3, #1
   1468c:	adc	r1, r1, #0
   14690:	str	r3, [r6, #1552]	; 0x610
   14694:	mov	r3, #170	; 0xaa
   14698:	str	r1, [r6, #1556]	; 0x614
   1469c:	ldr	r1, [r0]
   146a0:	mov	r0, #6
   146a4:	bl	16204 <UnityAssertEqualNumber@@Base>
   146a8:	ldr	r3, [r6, #1560]	; 0x618
   146ac:	add	r0, sp, #12
   146b0:	ldr	r2, [r6, #1564]	; 0x61c
   146b4:	adds	r3, r3, #1
   146b8:	adc	r2, r2, #0
   146bc:	str	r3, [r6, #1560]	; 0x618
   146c0:	str	r2, [r6, #1564]	; 0x61c
   146c4:	bl	195e0 <next@@Base>
   146c8:	ldr	r3, [r6, #1568]	; 0x620
   146cc:	str	r5, [sp]
   146d0:	ldr	r2, [r6, #1572]	; 0x624
   146d4:	ldr	r1, [r0]
   146d8:	mov	r0, #7
   146dc:	adds	r3, r3, #1
   146e0:	adc	r2, r2, #0
   146e4:	str	r3, [r6, #1568]	; 0x620
   146e8:	mov	r3, #172	; 0xac
   146ec:	str	r2, [r6, #1572]	; 0x624
   146f0:	mov	r2, #0
   146f4:	bl	16204 <UnityAssertEqualNumber@@Base>
   146f8:	ldr	r3, [r6, #1576]	; 0x628
   146fc:	add	r0, sp, #12
   14700:	ldr	r2, [r6, #1580]	; 0x62c
   14704:	adds	r3, r3, #1
   14708:	adc	r2, r2, #0
   1470c:	str	r3, [r6, #1576]	; 0x628
   14710:	str	r2, [r6, #1580]	; 0x62c
   14714:	bl	195e0 <next@@Base>
   14718:	ldr	r3, [r6, #1584]	; 0x630
   1471c:	str	r5, [sp]
   14720:	ldr	r2, [r6, #1588]	; 0x634
   14724:	ldr	r1, [r0]
   14728:	mov	r0, #1
   1472c:	adds	r3, r3, #1
   14730:	adc	r2, r2, #0
   14734:	str	r3, [r6, #1584]	; 0x630
   14738:	mov	r3, #174	; 0xae
   1473c:	str	r2, [r6, #1588]	; 0x634
   14740:	mov	r2, #0
   14744:	bl	16204 <UnityAssertEqualNumber@@Base>
   14748:	ldr	r3, [r6, #1592]	; 0x638
   1474c:	add	r0, sp, #12
   14750:	ldr	r2, [r6, #1596]	; 0x63c
   14754:	adds	r3, r3, #1
   14758:	adc	r2, r2, #0
   1475c:	str	r3, [r6, #1592]	; 0x638
   14760:	str	r2, [r6, #1596]	; 0x63c
   14764:	bl	195e0 <next@@Base>
   14768:	ldr	r3, [r6, #1600]	; 0x640
   1476c:	str	r5, [sp]
   14770:	ldr	r2, [r6, #1604]	; 0x644
   14774:	ldr	r1, [r0]
   14778:	mov	r0, #8
   1477c:	adds	r3, r3, #1
   14780:	adc	r2, r2, #0
   14784:	str	r3, [r6, #1600]	; 0x640
   14788:	mov	r3, #176	; 0xb0
   1478c:	str	r2, [r6, #1604]	; 0x644
   14790:	mov	r2, #0
   14794:	bl	16204 <UnityAssertEqualNumber@@Base>
   14798:	ldr	r3, [r6, #1608]	; 0x648
   1479c:	add	r0, sp, #12
   147a0:	ldr	r2, [r6, #1612]	; 0x64c
   147a4:	adds	r3, r3, #1
   147a8:	adc	r2, r2, #0
   147ac:	str	r3, [r6, #1608]	; 0x648
   147b0:	str	r2, [r6, #1612]	; 0x64c
   147b4:	bl	195e0 <next@@Base>
   147b8:	ldr	r3, [r6, #1616]	; 0x650
   147bc:	str	r5, [sp]
   147c0:	ldr	r2, [r6, #1620]	; 0x654
   147c4:	ldr	r1, [r0]
   147c8:	mov	r0, #6
   147cc:	adds	r3, r3, #1
   147d0:	adc	r2, r2, #0
   147d4:	str	r3, [r6, #1616]	; 0x650
   147d8:	mov	r3, #178	; 0xb2
   147dc:	str	r2, [r6, #1620]	; 0x654
   147e0:	mov	r2, #0
   147e4:	bl	16204 <UnityAssertEqualNumber@@Base>
   147e8:	ldr	r3, [r6, #1624]	; 0x658
   147ec:	add	r0, sp, #12
   147f0:	ldr	r2, [r6, #1628]	; 0x65c
   147f4:	adds	r3, r3, #1
   147f8:	adc	r2, r2, #0
   147fc:	str	r3, [r6, #1624]	; 0x658
   14800:	str	r2, [r6, #1628]	; 0x65c
   14804:	bl	195e0 <next@@Base>
   14808:	ldr	r3, [r6, #1632]	; 0x660
   1480c:	str	r5, [sp]
   14810:	ldr	r2, [r6, #1636]	; 0x664
   14814:	ldr	r1, [r0]
   14818:	mov	r0, #9
   1481c:	adds	r3, r3, #1
   14820:	adc	r2, r2, #0
   14824:	str	r3, [r6, #1632]	; 0x660
   14828:	mov	r3, #180	; 0xb4
   1482c:	str	r2, [r6, #1636]	; 0x664
   14830:	mov	r2, #0
   14834:	bl	16204 <UnityAssertEqualNumber@@Base>
   14838:	ldr	r3, [r6, #1640]	; 0x668
   1483c:	add	r0, sp, #12
   14840:	ldr	r2, [r6, #1644]	; 0x66c
   14844:	adds	r3, r3, #1
   14848:	adc	r2, r2, #0
   1484c:	str	r3, [r6, #1640]	; 0x668
   14850:	str	r2, [r6, #1644]	; 0x66c
   14854:	bl	19420 <destroy_lexer@@Base>
   14858:	ldr	r3, [r6, #1648]	; 0x670
   1485c:	ldr	r2, [r6, #1652]	; 0x674
   14860:	adds	r3, r3, #1
   14864:	adc	r2, r2, #0
   14868:	str	r3, [r6, #1648]	; 0x670
   1486c:	str	r2, [r6, #1652]	; 0x674
   14870:	add	sp, sp, #24
   14874:	pop	{r4, r5, r6, pc}
   14878:	andeq	lr, r2, r8, lsr ip
   1487c:	ldrdeq	ip, [r1], -r2

00014880 <simple_file_only_main@@Base>:
   14880:	push	{r4, r5, lr}
   14884:	sub	sp, sp, #28
   14888:	mov	r5, #148	; 0x94
   1488c:	add	r0, sp, #12
   14890:	ldr	r4, [pc, #892]	; 14c14 <simple_file_only_main@@Base+0x394>
   14894:	ldr	r1, [pc, #892]	; 14c18 <simple_file_only_main@@Base+0x398>
   14898:	ldr	r3, [r4, #-8]
   1489c:	ldr	r2, [r4, #-4]
   148a0:	adds	r3, r3, #1
   148a4:	adc	r2, r2, #0
   148a8:	str	r3, [r4, #-8]
   148ac:	str	r2, [r4, #-4]
   148b0:	bl	193f4 <init_lexer@@Base>
   148b4:	ldr	r3, [r4]
   148b8:	add	r0, sp, #12
   148bc:	ldr	r2, [r4, #4]
   148c0:	adds	r3, r3, #1
   148c4:	adc	r2, r2, #0
   148c8:	str	r3, [r4]
   148cc:	str	r2, [r4, #4]
   148d0:	bl	195e0 <next@@Base>
   148d4:	ldr	r3, [r4, #8]
   148d8:	str	r5, [sp]
   148dc:	ldr	r2, [r4, #12]
   148e0:	ldr	r1, [r0]
   148e4:	adds	r3, r3, #1
   148e8:	adc	r2, r2, #0
   148ec:	str	r3, [r4, #8]
   148f0:	mov	r3, #23
   148f4:	str	r2, [r4, #12]
   148f8:	mov	r2, #0
   148fc:	mov	r0, r2
   14900:	bl	16204 <UnityAssertEqualNumber@@Base>
   14904:	ldr	r3, [r4, #16]
   14908:	add	r0, sp, #12
   1490c:	ldr	r2, [r4, #20]
   14910:	adds	r3, r3, #1
   14914:	adc	r2, r2, #0
   14918:	str	r3, [r4, #16]
   1491c:	str	r2, [r4, #20]
   14920:	bl	195e0 <next@@Base>
   14924:	ldr	r3, [r4, #24]
   14928:	str	r5, [sp]
   1492c:	ldr	r2, [r4, #28]
   14930:	ldr	r1, [r0]
   14934:	mov	r0, #2
   14938:	adds	r3, r3, #1
   1493c:	adc	r2, r2, #0
   14940:	str	r3, [r4, #24]
   14944:	mov	r3, #25
   14948:	str	r2, [r4, #28]
   1494c:	mov	r2, #0
   14950:	bl	16204 <UnityAssertEqualNumber@@Base>
   14954:	ldr	r3, [r4, #32]
   14958:	add	r0, sp, #12
   1495c:	ldr	r2, [r4, #36]	; 0x24
   14960:	adds	r3, r3, #1
   14964:	adc	r2, r2, #0
   14968:	str	r3, [r4, #32]
   1496c:	str	r2, [r4, #36]	; 0x24
   14970:	bl	195e0 <next@@Base>
   14974:	ldr	r3, [r4, #40]	; 0x28
   14978:	str	r5, [sp]
   1497c:	ldr	r2, [r4, #44]	; 0x2c
   14980:	ldr	r1, [r0]
   14984:	mov	r0, #3
   14988:	adds	r3, r3, #1
   1498c:	adc	r2, r2, #0
   14990:	str	r3, [r4, #40]	; 0x28
   14994:	mov	r3, #27
   14998:	str	r2, [r4, #44]	; 0x2c
   1499c:	mov	r2, #0
   149a0:	bl	16204 <UnityAssertEqualNumber@@Base>
   149a4:	ldr	r3, [r4, #48]	; 0x30
   149a8:	add	r0, sp, #12
   149ac:	ldr	r2, [r4, #52]	; 0x34
   149b0:	adds	r3, r3, #1
   149b4:	adc	r2, r2, #0
   149b8:	str	r3, [r4, #48]	; 0x30
   149bc:	str	r2, [r4, #52]	; 0x34
   149c0:	bl	195e0 <next@@Base>
   149c4:	ldr	r3, [r4, #56]	; 0x38
   149c8:	str	r5, [sp]
   149cc:	ldr	r2, [r4, #60]	; 0x3c
   149d0:	ldr	r1, [r0]
   149d4:	mov	r0, #4
   149d8:	adds	r3, r3, #1
   149dc:	adc	r2, r2, #0
   149e0:	str	r3, [r4, #56]	; 0x38
   149e4:	mov	r3, #29
   149e8:	str	r2, [r4, #60]	; 0x3c
   149ec:	mov	r2, #0
   149f0:	bl	16204 <UnityAssertEqualNumber@@Base>
   149f4:	ldr	r3, [r4, #64]	; 0x40
   149f8:	add	r0, sp, #12
   149fc:	ldr	r2, [r4, #68]	; 0x44
   14a00:	adds	r3, r3, #1
   14a04:	adc	r2, r2, #0
   14a08:	str	r3, [r4, #64]	; 0x40
   14a0c:	str	r2, [r4, #68]	; 0x44
   14a10:	bl	195e0 <next@@Base>
   14a14:	ldr	r3, [r4, #72]	; 0x48
   14a18:	str	r5, [sp]
   14a1c:	ldr	r2, [r4, #76]	; 0x4c
   14a20:	ldr	r1, [r0]
   14a24:	mov	r0, #5
   14a28:	adds	r3, r3, #1
   14a2c:	adc	r2, r2, #0
   14a30:	str	r3, [r4, #72]	; 0x48
   14a34:	mov	r3, #31
   14a38:	str	r2, [r4, #76]	; 0x4c
   14a3c:	mov	r2, #0
   14a40:	bl	16204 <UnityAssertEqualNumber@@Base>
   14a44:	ldr	r3, [r4, #80]	; 0x50
   14a48:	add	r0, sp, #12
   14a4c:	ldr	r2, [r4, #84]	; 0x54
   14a50:	adds	r3, r3, #1
   14a54:	adc	r2, r2, #0
   14a58:	str	r3, [r4, #80]	; 0x50
   14a5c:	str	r2, [r4, #84]	; 0x54
   14a60:	bl	195e0 <next@@Base>
   14a64:	ldr	r3, [r4, #88]	; 0x58
   14a68:	str	r5, [sp]
   14a6c:	ldr	r2, [r4, #92]	; 0x5c
   14a70:	ldr	r1, [r0]
   14a74:	mov	r0, #7
   14a78:	adds	r3, r3, #1
   14a7c:	adc	r2, r2, #0
   14a80:	str	r3, [r4, #88]	; 0x58
   14a84:	mov	r3, #33	; 0x21
   14a88:	str	r2, [r4, #92]	; 0x5c
   14a8c:	mov	r2, #0
   14a90:	bl	16204 <UnityAssertEqualNumber@@Base>
   14a94:	ldr	r3, [r4, #96]	; 0x60
   14a98:	add	r0, sp, #12
   14a9c:	ldr	r2, [r4, #100]	; 0x64
   14aa0:	adds	r3, r3, #1
   14aa4:	adc	r2, r2, #0
   14aa8:	str	r3, [r4, #96]	; 0x60
   14aac:	str	r2, [r4, #100]	; 0x64
   14ab0:	bl	195e0 <next@@Base>
   14ab4:	ldr	r3, [r4, #104]	; 0x68
   14ab8:	str	r5, [sp]
   14abc:	ldr	r2, [r4, #108]	; 0x6c
   14ac0:	ldr	r1, [r0]
   14ac4:	mov	r0, #1
   14ac8:	adds	r3, r3, #1
   14acc:	adc	r2, r2, #0
   14ad0:	str	r3, [r4, #104]	; 0x68
   14ad4:	mov	r3, #35	; 0x23
   14ad8:	str	r2, [r4, #108]	; 0x6c
   14adc:	mov	r2, #0
   14ae0:	bl	16204 <UnityAssertEqualNumber@@Base>
   14ae4:	ldr	r3, [r4, #112]	; 0x70
   14ae8:	add	r0, sp, #12
   14aec:	ldr	r2, [r4, #116]	; 0x74
   14af0:	adds	r3, r3, #1
   14af4:	adc	r2, r2, #0
   14af8:	str	r3, [r4, #112]	; 0x70
   14afc:	str	r2, [r4, #116]	; 0x74
   14b00:	bl	195e0 <next@@Base>
   14b04:	ldr	r3, [r4, #120]	; 0x78
   14b08:	str	r5, [sp]
   14b0c:	ldr	r2, [r4, #124]	; 0x7c
   14b10:	ldr	r1, [r0]
   14b14:	mov	r0, #8
   14b18:	adds	r3, r3, #1
   14b1c:	adc	r2, r2, #0
   14b20:	str	r3, [r4, #120]	; 0x78
   14b24:	mov	r3, #37	; 0x25
   14b28:	str	r2, [r4, #124]	; 0x7c
   14b2c:	mov	r2, #0
   14b30:	bl	16204 <UnityAssertEqualNumber@@Base>
   14b34:	ldr	r3, [r4, #128]	; 0x80
   14b38:	add	r0, sp, #12
   14b3c:	ldr	r2, [r4, #132]	; 0x84
   14b40:	adds	r3, r3, #1
   14b44:	adc	r2, r2, #0
   14b48:	str	r3, [r4, #128]	; 0x80
   14b4c:	str	r2, [r4, #132]	; 0x84
   14b50:	bl	195e0 <next@@Base>
   14b54:	ldr	r3, [r4, #136]	; 0x88
   14b58:	str	r5, [sp]
   14b5c:	ldr	r2, [r4, #140]	; 0x8c
   14b60:	ldr	r1, [r0]
   14b64:	mov	r0, #6
   14b68:	adds	r3, r3, #1
   14b6c:	adc	r2, r2, #0
   14b70:	str	r3, [r4, #136]	; 0x88
   14b74:	mov	r3, #39	; 0x27
   14b78:	str	r2, [r4, #140]	; 0x8c
   14b7c:	mov	r2, #0
   14b80:	bl	16204 <UnityAssertEqualNumber@@Base>
   14b84:	ldr	r3, [r4, #144]	; 0x90
   14b88:	add	r0, sp, #12
   14b8c:	ldr	r2, [r4, #148]	; 0x94
   14b90:	adds	r3, r3, #1
   14b94:	adc	r2, r2, #0
   14b98:	str	r3, [r4, #144]	; 0x90
   14b9c:	str	r2, [r4, #148]	; 0x94
   14ba0:	bl	195e0 <next@@Base>
   14ba4:	ldr	r3, [r4, #152]	; 0x98
   14ba8:	str	r5, [sp]
   14bac:	ldr	r2, [r4, #156]	; 0x9c
   14bb0:	ldr	r1, [r0]
   14bb4:	mov	r0, #9
   14bb8:	adds	r3, r3, #1
   14bbc:	adc	r2, r2, #0
   14bc0:	str	r3, [r4, #152]	; 0x98
   14bc4:	mov	r3, #41	; 0x29
   14bc8:	str	r2, [r4, #156]	; 0x9c
   14bcc:	mov	r2, #0
   14bd0:	bl	16204 <UnityAssertEqualNumber@@Base>
   14bd4:	ldr	r3, [r4, #160]	; 0xa0
   14bd8:	add	r0, sp, #12
   14bdc:	ldr	r2, [r4, #164]	; 0xa4
   14be0:	adds	r3, r3, #1
   14be4:	adc	r2, r2, #0
   14be8:	str	r3, [r4, #160]	; 0xa0
   14bec:	str	r2, [r4, #164]	; 0xa4
   14bf0:	bl	19420 <destroy_lexer@@Base>
   14bf4:	ldr	r3, [r4, #168]	; 0xa8
   14bf8:	ldr	r2, [r4, #172]	; 0xac
   14bfc:	adds	r3, r3, #1
   14c00:	adc	r2, r2, #0
   14c04:	str	r3, [r4, #168]	; 0xa8
   14c08:	str	r2, [r4, #172]	; 0xac
   14c0c:	add	sp, sp, #28
   14c10:	pop	{r4, r5, pc}
   14c14:			; <UNDEFINED> instruction: 0x0002f2b8
   14c18:	andeq	ip, r1, fp, lsl #16

00014c1c <push_token_and_call_next@@Base>:
   14c1c:	push	{r4, r5, lr}
   14c20:	sub	sp, sp, #28
   14c24:	add	r0, sp, #12
   14c28:	ldr	r4, [pc, #232]	; 14d18 <push_token_and_call_next@@Base+0xfc>
   14c2c:	ldr	r1, [pc, #232]	; 14d1c <push_token_and_call_next@@Base+0x100>
   14c30:	ldr	r3, [r4]
   14c34:	ldr	r2, [r4, #4]
   14c38:	adds	r3, r3, #1
   14c3c:	adc	r2, r2, #0
   14c40:	str	r3, [r4]
   14c44:	str	r2, [r4, #4]
   14c48:	bl	193f4 <init_lexer@@Base>
   14c4c:	ldr	r3, [r4, #8]
   14c50:	mov	r0, #8
   14c54:	ldr	r2, [r4, #12]
   14c58:	adds	r3, r3, #1
   14c5c:	adc	r2, r2, #0
   14c60:	str	r3, [r4, #8]
   14c64:	str	r2, [r4, #12]
   14c68:	bl	12014 <malloc@plt>
   14c6c:	mov	r5, r0
   14c70:	mov	r1, r0
   14c74:	add	r0, sp, #12
   14c78:	bl	19490 <push_back@@Base>
   14c7c:	ldr	r3, [r4, #16]
   14c80:	add	r0, sp, #12
   14c84:	ldr	r2, [r4, #20]
   14c88:	adds	r3, r3, #1
   14c8c:	adc	r2, r2, #0
   14c90:	str	r3, [r4, #16]
   14c94:	str	r2, [r4, #20]
   14c98:	bl	195e0 <next@@Base>
   14c9c:	ldr	r3, [r4, #24]
   14ca0:	mov	r1, r0
   14ca4:	mov	r0, r5
   14ca8:	ldr	r2, [r4, #28]
   14cac:	adds	r3, r3, #1
   14cb0:	adc	r2, r2, #0
   14cb4:	str	r3, [r4, #24]
   14cb8:	mov	r3, #148	; 0x94
   14cbc:	str	r3, [sp]
   14cc0:	mov	r3, #113	; 0x71
   14cc4:	str	r2, [r4, #28]
   14cc8:	mov	r2, #0
   14ccc:	bl	16204 <UnityAssertEqualNumber@@Base>
   14cd0:	ldr	r3, [r4, #32]
   14cd4:	add	r0, sp, #12
   14cd8:	ldr	r2, [r4, #36]	; 0x24
   14cdc:	adds	r3, r3, #1
   14ce0:	adc	r2, r2, #0
   14ce4:	str	r3, [r4, #32]
   14ce8:	str	r2, [r4, #36]	; 0x24
   14cec:	bl	19420 <destroy_lexer@@Base>
   14cf0:	ldr	r3, [r4, #40]	; 0x28
   14cf4:	mov	r0, r5
   14cf8:	ldr	r2, [r4, #44]	; 0x2c
   14cfc:	adds	r3, r3, #1
   14d00:	adc	r2, r2, #0
   14d04:	str	r3, [r4, #40]	; 0x28
   14d08:	str	r2, [r4, #44]	; 0x2c
   14d0c:	add	sp, sp, #28
   14d10:	pop	{r4, r5, lr}
   14d14:	b	11fb4 <free@plt>
   14d18:	andeq	pc, r2, r8, ror #6
   14d1c:	andeq	ip, r1, fp, lsl #16

00014d20 <push_two_tokens_to_stack@@Base>:
   14d20:	push	{r4, r5, r6, r7, lr}
   14d24:	sub	sp, sp, #28
   14d28:	mov	r7, #148	; 0x94
   14d2c:	add	r0, sp, #12
   14d30:	ldr	r4, [pc, #308]	; 14e6c <push_two_tokens_to_stack@@Base+0x14c>
   14d34:	ldr	r1, [pc, #308]	; 14e70 <push_two_tokens_to_stack@@Base+0x150>
   14d38:	ldr	r3, [r4]
   14d3c:	ldr	r2, [r4, #4]
   14d40:	adds	r3, r3, #1
   14d44:	adc	r2, r2, #0
   14d48:	str	r3, [r4]
   14d4c:	str	r2, [r4, #4]
   14d50:	bl	193f4 <init_lexer@@Base>
   14d54:	ldr	r3, [r4, #8]
   14d58:	mov	r0, #8
   14d5c:	ldr	r2, [r4, #12]
   14d60:	adds	r3, r3, #1
   14d64:	adc	r2, r2, #0
   14d68:	str	r3, [r4, #8]
   14d6c:	str	r2, [r4, #12]
   14d70:	bl	12014 <malloc@plt>
   14d74:	mov	r6, r0
   14d78:	mov	r0, #8
   14d7c:	bl	12014 <malloc@plt>
   14d80:	mov	r5, r0
   14d84:	mov	r1, r6
   14d88:	add	r0, sp, #12
   14d8c:	bl	19490 <push_back@@Base>
   14d90:	ldr	r3, [r4, #16]
   14d94:	mov	r1, r6
   14d98:	str	r7, [sp]
   14d9c:	ldr	r2, [r4, #20]
   14da0:	ldr	r0, [sp, #16]
   14da4:	adds	r3, r3, #1
   14da8:	adc	r2, r2, #0
   14dac:	str	r3, [r4, #16]
   14db0:	mov	r3, #86	; 0x56
   14db4:	str	r2, [r4, #20]
   14db8:	mov	r2, #0
   14dbc:	ldr	r0, [r0, #4]
   14dc0:	bl	16204 <UnityAssertEqualNumber@@Base>
   14dc4:	ldr	r3, [r4, #24]
   14dc8:	mov	r1, r5
   14dcc:	add	r0, sp, #12
   14dd0:	ldr	r2, [r4, #28]
   14dd4:	adds	r3, r3, #1
   14dd8:	adc	r2, r2, #0
   14ddc:	str	r3, [r4, #24]
   14de0:	str	r2, [r4, #28]
   14de4:	bl	19490 <push_back@@Base>
   14de8:	ldr	r3, [r4, #32]
   14dec:	mov	r1, r5
   14df0:	str	r7, [sp]
   14df4:	ldr	r2, [r4, #36]	; 0x24
   14df8:	ldr	r0, [sp, #16]
   14dfc:	adds	r3, r3, #1
   14e00:	adc	r2, r2, #0
   14e04:	str	r3, [r4, #32]
   14e08:	mov	r3, #88	; 0x58
   14e0c:	str	r2, [r4, #36]	; 0x24
   14e10:	mov	r2, #0
   14e14:	ldr	r0, [r0, #4]
   14e18:	bl	16204 <UnityAssertEqualNumber@@Base>
   14e1c:	ldr	r3, [r4, #40]	; 0x28
   14e20:	add	r0, sp, #12
   14e24:	ldr	r2, [r4, #44]	; 0x2c
   14e28:	adds	r3, r3, #1
   14e2c:	adc	r2, r2, #0
   14e30:	str	r3, [r4, #40]	; 0x28
   14e34:	str	r2, [r4, #44]	; 0x2c
   14e38:	bl	19420 <destroy_lexer@@Base>
   14e3c:	ldr	r3, [r4, #48]	; 0x30
   14e40:	mov	r0, r6
   14e44:	ldr	r2, [r4, #52]	; 0x34
   14e48:	adds	r3, r3, #1
   14e4c:	adc	r2, r2, #0
   14e50:	str	r3, [r4, #48]	; 0x30
   14e54:	str	r2, [r4, #52]	; 0x34
   14e58:	bl	11fb4 <free@plt>
   14e5c:	mov	r0, r5
   14e60:	add	sp, sp, #28
   14e64:	pop	{r4, r5, r6, r7, lr}
   14e68:	b	11fb4 <free@plt>
   14e6c:	muleq	r2, r8, r3
   14e70:	andeq	ip, r1, fp, lsl #16

00014e74 <push_token_to_stack@@Base>:
   14e74:	push	{r4, r5, lr}
   14e78:	sub	sp, sp, #28
   14e7c:	add	r0, sp, #12
   14e80:	ldr	r4, [pc, #204]	; 14f54 <push_token_to_stack@@Base+0xe0>
   14e84:	ldr	r1, [pc, #204]	; 14f58 <push_token_to_stack@@Base+0xe4>
   14e88:	ldr	r3, [r4, #-8]
   14e8c:	ldr	r2, [r4, #-4]
   14e90:	adds	r3, r3, #1
   14e94:	adc	r2, r2, #0
   14e98:	str	r3, [r4, #-8]
   14e9c:	str	r2, [r4, #-4]
   14ea0:	bl	193f4 <init_lexer@@Base>
   14ea4:	ldr	r3, [r4]
   14ea8:	mov	r0, #8
   14eac:	ldr	r2, [r4, #4]
   14eb0:	adds	r3, r3, #1
   14eb4:	adc	r2, r2, #0
   14eb8:	str	r3, [r4]
   14ebc:	str	r2, [r4, #4]
   14ec0:	bl	12014 <malloc@plt>
   14ec4:	mov	r5, r0
   14ec8:	mov	r1, r0
   14ecc:	add	r0, sp, #12
   14ed0:	bl	19490 <push_back@@Base>
   14ed4:	ldr	r3, [r4, #8]
   14ed8:	mov	r1, r5
   14edc:	ldr	r2, [r4, #12]
   14ee0:	ldr	r0, [sp, #16]
   14ee4:	adds	r3, r3, #1
   14ee8:	adc	r2, r2, #0
   14eec:	str	r3, [r4, #8]
   14ef0:	mov	r3, #148	; 0x94
   14ef4:	str	r3, [sp]
   14ef8:	mov	r3, #62	; 0x3e
   14efc:	str	r2, [r4, #12]
   14f00:	mov	r2, #0
   14f04:	ldr	r0, [r0, #4]
   14f08:	bl	16204 <UnityAssertEqualNumber@@Base>
   14f0c:	ldr	r3, [r4, #16]
   14f10:	add	r0, sp, #12
   14f14:	ldr	r2, [r4, #20]
   14f18:	adds	r3, r3, #1
   14f1c:	adc	r2, r2, #0
   14f20:	str	r3, [r4, #16]
   14f24:	str	r2, [r4, #20]
   14f28:	bl	19420 <destroy_lexer@@Base>
   14f2c:	ldr	r3, [r4, #24]
   14f30:	mov	r0, r5
   14f34:	ldr	r2, [r4, #28]
   14f38:	adds	r3, r3, #1
   14f3c:	adc	r2, r2, #0
   14f40:	str	r3, [r4, #24]
   14f44:	str	r2, [r4, #28]
   14f48:	add	sp, sp, #28
   14f4c:	pop	{r4, r5, lr}
   14f50:	b	11fb4 <free@plt>
   14f54:	ldrdeq	pc, [r2], -r8
   14f58:	andeq	ip, r1, fp, lsl #16

00014f5c <UnityPrintNumber@@Base>:
   14f5c:	push	{r4, r5, r6, r7, r8, lr}
   14f60:	subs	r6, r0, #0
   14f64:	ldr	r4, [pc, #316]	; 150a8 <UnityPrintNumber@@Base+0x14c>
   14f68:	bge	14ffc <UnityPrintNumber@@Base+0xa0>
   14f6c:	mov	r0, #45	; 0x2d
   14f70:	rsb	r6, r6, #0
   14f74:	ldr	r3, [r4]
   14f78:	ldr	r2, [r4, #4]
   14f7c:	adds	r3, r3, #1
   14f80:	adc	r2, r2, #0
   14f84:	str	r3, [r4]
   14f88:	str	r2, [r4, #4]
   14f8c:	bl	1208c <putchar@plt>
   14f90:	ldr	r3, [r4, #16]
   14f94:	ldr	r2, [r4, #20]
   14f98:	adds	r3, r3, #1
   14f9c:	adc	r2, r2, #0
   14fa0:	str	r3, [r4, #16]
   14fa4:	str	r2, [r4, #20]
   14fa8:	ldr	r3, [r4, #24]
   14fac:	mov	r1, #0
   14fb0:	mov	r5, #1
   14fb4:	mov	r7, #10
   14fb8:	ldr	r2, [r4, #28]
   14fbc:	add	r8, r3, #11
   14fc0:	udiv	r0, r6, r5
   14fc4:	mov	lr, r3
   14fc8:	mov	ip, r2
   14fcc:	cmp	r0, #9
   14fd0:	bhi	15018 <UnityPrintNumber@@Base+0xbc>
   14fd4:	cmp	r1, #0
   14fd8:	strne	r3, [r4, #24]
   14fdc:	ldr	r3, [r4, #32]
   14fe0:	strne	r2, [r4, #28]
   14fe4:	ldr	r2, [r4, #36]	; 0x24
   14fe8:	adds	r3, r3, #1
   14fec:	adc	r2, r2, #0
   14ff0:	str	r3, [r4, #32]
   14ff4:	str	r2, [r4, #36]	; 0x24
   14ff8:	b	15038 <UnityPrintNumber@@Base+0xdc>
   14ffc:	ldr	r3, [r4, #8]
   15000:	ldr	r2, [r4, #12]
   15004:	adds	r3, r3, #1
   15008:	adc	r2, r2, #0
   1500c:	str	r3, [r4, #8]
   15010:	str	r2, [r4, #12]
   15014:	b	14fa8 <UnityPrintNumber@@Base+0x4c>
   15018:	adds	r3, r3, #1
   1501c:	mul	r0, r7, r5
   15020:	adc	r2, r2, #0
   15024:	cmp	r8, r3
   15028:	bne	15080 <UnityPrintNumber@@Base+0x124>
   1502c:	cmp	r1, #0
   15030:	strne	lr, [r4, #24]
   15034:	strne	ip, [r4, #28]
   15038:	mov	r7, #10
   1503c:	udiv	r3, r6, r5
   15040:	udiv	r0, r3, r7
   15044:	mls	r0, r7, r0, r3
   15048:	add	r0, r0, #48	; 0x30
   1504c:	uxtb	r0, r0
   15050:	bl	1208c <putchar@plt>
   15054:	cmp	r5, #9
   15058:	udiv	r1, r5, r7
   1505c:	bls	1508c <UnityPrintNumber@@Base+0x130>
   15060:	ldr	r3, [r4, #48]	; 0x30
   15064:	mov	r5, r1
   15068:	ldr	r2, [r4, #52]	; 0x34
   1506c:	adds	r3, r3, #1
   15070:	adc	r2, r2, #0
   15074:	str	r3, [r4, #48]	; 0x30
   15078:	str	r2, [r4, #52]	; 0x34
   1507c:	b	1503c <UnityPrintNumber@@Base+0xe0>
   15080:	mov	r1, #1
   15084:	mov	r5, r0
   15088:	b	14fc0 <UnityPrintNumber@@Base+0x64>
   1508c:	ldr	r3, [r4, #40]	; 0x28
   15090:	ldr	r2, [r4, #44]	; 0x2c
   15094:	adds	r3, r3, #1
   15098:	adc	r2, r2, #0
   1509c:	str	r3, [r4, #40]	; 0x28
   150a0:	str	r2, [r4, #44]	; 0x2c
   150a4:	pop	{r4, r5, r6, r7, r8, pc}
   150a8:	andeq	pc, r2, r8, ror #9

000150ac <UnityPrintNumberUnsigned@@Base>:
   150ac:	push	{r4, r5, r6, r7, r8, lr}
   150b0:	mov	r1, #0
   150b4:	mov	r6, r0
   150b8:	mov	r5, #1
   150bc:	mov	r7, #10
   150c0:	ldr	r4, [pc, #236]	; 151b4 <UnityPrintNumberUnsigned@@Base+0x108>
   150c4:	ldr	r3, [r4, #56]	; 0x38
   150c8:	ldr	r2, [r4, #60]	; 0x3c
   150cc:	adds	r3, r3, #1
   150d0:	adc	r2, r2, #0
   150d4:	str	r3, [r4, #56]	; 0x38
   150d8:	ldr	r3, [r4, #64]	; 0x40
   150dc:	str	r2, [r4, #60]	; 0x3c
   150e0:	ldr	r2, [r4, #68]	; 0x44
   150e4:	add	r8, r3, #11
   150e8:	udiv	r0, r6, r5
   150ec:	mov	lr, r3
   150f0:	mov	ip, r2
   150f4:	cmp	r0, #9
   150f8:	bhi	15124 <UnityPrintNumberUnsigned@@Base+0x78>
   150fc:	cmp	r1, #0
   15100:	strne	r3, [r4, #64]	; 0x40
   15104:	ldr	r3, [r4, #72]	; 0x48
   15108:	strne	r2, [r4, #68]	; 0x44
   1510c:	ldr	r2, [r4, #76]	; 0x4c
   15110:	adds	r3, r3, #1
   15114:	adc	r2, r2, #0
   15118:	str	r3, [r4, #72]	; 0x48
   1511c:	str	r2, [r4, #76]	; 0x4c
   15120:	b	15144 <UnityPrintNumberUnsigned@@Base+0x98>
   15124:	adds	r3, r3, #1
   15128:	mul	r0, r7, r5
   1512c:	adc	r2, r2, #0
   15130:	cmp	r8, r3
   15134:	bne	1518c <UnityPrintNumberUnsigned@@Base+0xe0>
   15138:	cmp	r1, #0
   1513c:	strne	lr, [r4, #64]	; 0x40
   15140:	strne	ip, [r4, #68]	; 0x44
   15144:	mov	r7, #10
   15148:	udiv	r3, r6, r5
   1514c:	udiv	r0, r3, r7
   15150:	mls	r0, r7, r0, r3
   15154:	add	r0, r0, #48	; 0x30
   15158:	uxtb	r0, r0
   1515c:	bl	1208c <putchar@plt>
   15160:	cmp	r5, #9
   15164:	udiv	r1, r5, r7
   15168:	bls	15198 <UnityPrintNumberUnsigned@@Base+0xec>
   1516c:	ldr	r3, [r4, #88]	; 0x58
   15170:	mov	r5, r1
   15174:	ldr	r2, [r4, #92]	; 0x5c
   15178:	adds	r3, r3, #1
   1517c:	adc	r2, r2, #0
   15180:	str	r3, [r4, #88]	; 0x58
   15184:	str	r2, [r4, #92]	; 0x5c
   15188:	b	15148 <UnityPrintNumberUnsigned@@Base+0x9c>
   1518c:	mov	r1, #1
   15190:	mov	r5, r0
   15194:	b	150e8 <UnityPrintNumberUnsigned@@Base+0x3c>
   15198:	ldr	r3, [r4, #80]	; 0x50
   1519c:	ldr	r2, [r4, #84]	; 0x54
   151a0:	adds	r3, r3, #1
   151a4:	adc	r2, r2, #0
   151a8:	str	r3, [r4, #80]	; 0x50
   151ac:	str	r2, [r4, #84]	; 0x54
   151b0:	pop	{r4, r5, r6, r7, r8, pc}
   151b4:	andeq	pc, r2, r8, ror #9

000151b8 <UnityPrintNumberHex@@Base>:
   151b8:	push	{r4, r5, r6, lr}
   151bc:	mov	r6, r0
   151c0:	mov	r0, #48	; 0x30
   151c4:	mov	r5, r1
   151c8:	ldr	r4, [pc, #244]	; 152c4 <UnityPrintNumberHex@@Base+0x10c>
   151cc:	ldr	r3, [r4, #96]	; 0x60
   151d0:	ldr	r2, [r4, #100]	; 0x64
   151d4:	adds	r3, r3, #1
   151d8:	adc	r2, r2, #0
   151dc:	str	r3, [r4, #96]	; 0x60
   151e0:	str	r2, [r4, #100]	; 0x64
   151e4:	bl	1208c <putchar@plt>
   151e8:	ldr	r3, [r4, #104]	; 0x68
   151ec:	mov	r0, #120	; 0x78
   151f0:	ldr	r2, [r4, #108]	; 0x6c
   151f4:	adds	r3, r3, #1
   151f8:	adc	r2, r2, #0
   151fc:	str	r3, [r4, #104]	; 0x68
   15200:	str	r2, [r4, #108]	; 0x6c
   15204:	bl	1208c <putchar@plt>
   15208:	ldr	r3, [r4, #112]	; 0x70
   1520c:	ldr	r2, [r4, #116]	; 0x74
   15210:	adds	r3, r3, #1
   15214:	adc	r2, r2, #0
   15218:	str	r3, [r4, #112]	; 0x70
   1521c:	str	r2, [r4, #116]	; 0x74
   15220:	cmp	r5, #0
   15224:	bne	15244 <UnityPrintNumberHex@@Base+0x8c>
   15228:	ldr	r3, [r4, #144]	; 0x90
   1522c:	ldr	r2, [r4, #148]	; 0x94
   15230:	adds	r3, r3, #1
   15234:	adc	r2, r2, #0
   15238:	str	r3, [r4, #144]	; 0x90
   1523c:	str	r2, [r4, #148]	; 0x94
   15240:	pop	{r4, r5, r6, pc}
   15244:	sub	r5, r5, #1
   15248:	uxtb	r5, r5
   1524c:	lsl	r3, r5, #2
   15250:	lsr	r3, r6, r3
   15254:	and	r3, r3, #15
   15258:	cmp	r3, #9
   1525c:	uxtb	r0, r3
   15260:	bhi	152a0 <UnityPrintNumberHex@@Base+0xe8>
   15264:	ldr	r3, [r4, #120]	; 0x78
   15268:	add	r0, r0, #48	; 0x30
   1526c:	ldr	r2, [r4, #124]	; 0x7c
   15270:	adds	r3, r3, #1
   15274:	adc	r2, r2, #0
   15278:	str	r3, [r4, #120]	; 0x78
   1527c:	str	r2, [r4, #124]	; 0x7c
   15280:	bl	1208c <putchar@plt>
   15284:	ldr	r3, [r4, #136]	; 0x88
   15288:	ldr	r2, [r4, #140]	; 0x8c
   1528c:	adds	r3, r3, #1
   15290:	adc	r2, r2, #0
   15294:	str	r3, [r4, #136]	; 0x88
   15298:	str	r2, [r4, #140]	; 0x8c
   1529c:	b	15220 <UnityPrintNumberHex@@Base+0x68>
   152a0:	ldr	r3, [r4, #128]	; 0x80
   152a4:	add	r0, r0, #55	; 0x37
   152a8:	ldr	r2, [r4, #132]	; 0x84
   152ac:	adds	r3, r3, #1
   152b0:	adc	r2, r2, #0
   152b4:	str	r3, [r4, #128]	; 0x80
   152b8:	str	r2, [r4, #132]	; 0x84
   152bc:	bl	1208c <putchar@plt>
   152c0:	b	15220 <UnityPrintNumberHex@@Base+0x68>
   152c4:	andeq	pc, r2, r8, ror #9

000152c8 <UnityPrintNumberByStyle@@Base>:
   152c8:	tst	r1, #16
   152cc:	push	{r4, lr}
   152d0:	ldr	r4, [pc, #208]	; 153a8 <UnityPrintNumberByStyle@@Base+0xe0>
   152d4:	beq	15310 <UnityPrintNumberByStyle@@Base+0x48>
   152d8:	ldr	r3, [r4, #152]	; 0x98
   152dc:	ldr	r2, [r4, #156]	; 0x9c
   152e0:	adds	r3, r3, #1
   152e4:	adc	r2, r2, #0
   152e8:	str	r3, [r4, #152]	; 0x98
   152ec:	str	r2, [r4, #156]	; 0x9c
   152f0:	bl	14f5c <UnityPrintNumber@@Base>
   152f4:	ldr	r3, [r4, #160]	; 0xa0
   152f8:	ldr	r2, [r4, #164]	; 0xa4
   152fc:	adds	r3, r3, #1
   15300:	adc	r2, r2, #0
   15304:	str	r3, [r4, #160]	; 0xa0
   15308:	str	r2, [r4, #164]	; 0xa4
   1530c:	pop	{r4, pc}
   15310:	tst	r1, #32
   15314:	beq	15368 <UnityPrintNumberByStyle@@Base+0xa0>
   15318:	ldr	r3, [r4, #168]	; 0xa8
   1531c:	and	r1, r1, #15
   15320:	mov	ip, r0
   15324:	sub	r1, r1, #1
   15328:	ldr	r2, [r4, #172]	; 0xac
   1532c:	adds	r3, r3, #1
   15330:	str	r3, [r4, #168]	; 0xa8
   15334:	adc	r2, r2, #0
   15338:	ldr	r3, [pc, #108]	; 153ac <UnityPrintNumberByStyle@@Base+0xe4>
   1533c:	str	r2, [r4, #172]	; 0xac
   15340:	ldr	r0, [r3, r1, lsl #2]
   15344:	and	r0, r0, ip
   15348:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   1534c:	ldr	r3, [r4, #184]	; 0xb8
   15350:	ldr	r2, [r4, #188]	; 0xbc
   15354:	adds	r3, r3, #1
   15358:	adc	r2, r2, #0
   1535c:	str	r3, [r4, #184]	; 0xb8
   15360:	str	r2, [r4, #188]	; 0xbc
   15364:	pop	{r4, pc}
   15368:	ldr	r3, [r4, #176]	; 0xb0
   1536c:	lsl	r1, r1, #1
   15370:	ldr	r2, [r4, #180]	; 0xb4
   15374:	and	r1, r1, #30
   15378:	adds	r3, r3, #1
   1537c:	adc	r2, r2, #0
   15380:	str	r3, [r4, #176]	; 0xb0
   15384:	str	r2, [r4, #180]	; 0xb4
   15388:	bl	151b8 <UnityPrintNumberHex@@Base>
   1538c:	ldr	r3, [r4, #192]	; 0xc0
   15390:	ldr	r2, [r4, #196]	; 0xc4
   15394:	adds	r3, r3, #1
   15398:	adc	r2, r2, #0
   1539c:	str	r3, [r4, #192]	; 0xc0
   153a0:	str	r2, [r4, #196]	; 0xc4
   153a4:	pop	{r4, pc}
   153a8:	andeq	pc, r2, r8, ror #9
   153ac:	ldrdeq	ip, [r1], -r0

000153b0 <UnityPrintLen@@Base>:
   153b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153b4:	subs	r7, r0, #0
   153b8:	ldr	r4, [pc, #504]	; 155b8 <UnityPrintLen@@Base+0x208>
   153bc:	bne	153dc <UnityPrintLen@@Base+0x2c>
   153c0:	ldr	r3, [r4, #208]	; 0xd0
   153c4:	ldr	r2, [r4, #212]	; 0xd4
   153c8:	adds	r3, r3, #1
   153cc:	adc	r2, r2, #0
   153d0:	str	r3, [r4, #208]	; 0xd0
   153d4:	str	r2, [r4, #212]	; 0xd4
   153d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153dc:	ldr	r3, [r4, #200]	; 0xc8
   153e0:	mov	sl, r1
   153e4:	mov	r8, r7
   153e8:	add	r5, r4, #272	; 0x110
   153ec:	add	r9, r4, #256	; 0x100
   153f0:	ldr	r2, [r4, #204]	; 0xcc
   153f4:	adds	r3, r3, #1
   153f8:	adc	r2, r2, #0
   153fc:	str	r3, [r4, #200]	; 0xc8
   15400:	str	r2, [r4, #204]	; 0xcc
   15404:	mov	r3, r8
   15408:	ldrb	r0, [r8], #1
   1540c:	cmp	r0, #0
   15410:	bne	1558c <UnityPrintLen@@Base+0x1dc>
   15414:	ldr	r2, [pc, #416]	; 155bc <UnityPrintLen@@Base+0x20c>
   15418:	ldr	r3, [r2, #-8]
   1541c:	ldr	r1, [r2, #-4]
   15420:	adds	r3, r3, #1
   15424:	adc	r1, r1, #0
   15428:	str	r3, [r2, #-8]
   1542c:	str	r1, [r2, #-4]
   15430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15434:	sub	r3, r0, #32
   15438:	cmp	r3, #94	; 0x5e
   1543c:	bhi	15478 <UnityPrintLen@@Base+0xc8>
   15440:	ldr	r3, [r4, #216]	; 0xd8
   15444:	ldr	r2, [r4, #220]	; 0xdc
   15448:	adds	r3, r3, #1
   1544c:	adc	r2, r2, #0
   15450:	str	r3, [r4, #216]	; 0xd8
   15454:	str	r2, [r4, #220]	; 0xdc
   15458:	bl	1208c <putchar@plt>
   1545c:	ldr	r3, [r4, #224]	; 0xe0
   15460:	ldr	r2, [r4, #228]	; 0xe4
   15464:	adds	r3, r3, #1
   15468:	adc	r2, r2, #0
   1546c:	str	r3, [r4, #224]	; 0xe0
   15470:	str	r2, [r4, #228]	; 0xe4
   15474:	b	15404 <UnityPrintLen@@Base+0x54>
   15478:	cmp	r0, #13
   1547c:	bne	154dc <UnityPrintLen@@Base+0x12c>
   15480:	ldr	r3, [r4, #232]	; 0xe8
   15484:	mov	r0, #92	; 0x5c
   15488:	ldr	r2, [r4, #236]	; 0xec
   1548c:	adds	r3, r3, #1
   15490:	adc	r2, r2, #0
   15494:	str	r3, [r4, #232]	; 0xe8
   15498:	str	r2, [r4, #236]	; 0xec
   1549c:	bl	1208c <putchar@plt>
   154a0:	ldr	r3, [r4, #240]	; 0xf0
   154a4:	mov	r0, #114	; 0x72
   154a8:	ldr	r2, [r4, #244]	; 0xf4
   154ac:	adds	r3, r3, #1
   154b0:	adc	r2, r2, #0
   154b4:	str	r3, [r4, #240]	; 0xf0
   154b8:	str	r2, [r4, #244]	; 0xf4
   154bc:	bl	1208c <putchar@plt>
   154c0:	ldr	r3, [r4, #248]	; 0xf8
   154c4:	ldr	r2, [r4, #252]	; 0xfc
   154c8:	adds	r3, r3, #1
   154cc:	adc	r2, r2, #0
   154d0:	str	r3, [r4, #248]	; 0xf8
   154d4:	str	r2, [r4, #252]	; 0xfc
   154d8:	b	15404 <UnityPrintLen@@Base+0x54>
   154dc:	cmp	r0, #10
   154e0:	ldr	r6, [pc, #216]	; 155c0 <UnityPrintLen@@Base+0x210>
   154e4:	bne	15544 <UnityPrintLen@@Base+0x194>
   154e8:	ldr	r3, [r9]
   154ec:	mov	r0, #92	; 0x5c
   154f0:	ldr	r2, [r9, #4]
   154f4:	adds	r3, r3, #1
   154f8:	adc	r2, r2, #0
   154fc:	str	r3, [r9]
   15500:	str	r2, [r9, #4]
   15504:	bl	1208c <putchar@plt>
   15508:	ldr	r3, [r5]
   1550c:	mov	r0, #110	; 0x6e
   15510:	ldr	r2, [r5, #4]
   15514:	adds	r3, r3, #1
   15518:	adc	r2, r2, #0
   1551c:	str	r3, [r5]
   15520:	str	r2, [r5, #4]
   15524:	bl	1208c <putchar@plt>
   15528:	ldr	r3, [r6, #-8]
   1552c:	ldr	r2, [r6, #-4]
   15530:	adds	r3, r3, #1
   15534:	adc	r2, r2, #0
   15538:	str	r3, [r6, #-8]
   1553c:	str	r2, [r6, #-4]
   15540:	b	15404 <UnityPrintLen@@Base+0x54>
   15544:	ldr	r3, [r5, #-8]
   15548:	mov	r0, #92	; 0x5c
   1554c:	ldr	r2, [r5, #-4]
   15550:	adds	r3, r3, #1
   15554:	adc	r2, r2, #0
   15558:	str	r3, [r5, #-8]
   1555c:	str	r2, [r5, #-4]
   15560:	bl	1208c <putchar@plt>
   15564:	ldr	r3, [r6]
   15568:	mov	r1, #2
   1556c:	ldr	r2, [r6, #4]
   15570:	ldrb	r0, [r8, #-1]
   15574:	adds	r3, r3, #1
   15578:	adc	r2, r2, #0
   1557c:	str	r3, [r6]
   15580:	str	r2, [r6, #4]
   15584:	bl	151b8 <UnityPrintNumberHex@@Base>
   15588:	b	15404 <UnityPrintLen@@Base+0x54>
   1558c:	sub	r3, r3, r7
   15590:	cmp	r3, sl
   15594:	bcc	15434 <UnityPrintLen@@Base+0x84>
   15598:	ldr	r2, [pc, #28]	; 155bc <UnityPrintLen@@Base+0x20c>
   1559c:	ldr	r3, [r2]
   155a0:	ldr	r1, [r2, #4]
   155a4:	adds	r3, r3, #1
   155a8:	adc	r1, r1, #0
   155ac:	str	r3, [r2]
   155b0:	str	r1, [r2, #4]
   155b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155b8:	andeq	pc, r2, r8, ror #9
   155bc:	andeq	pc, r2, r8, lsl r6	; <UNPREDICTABLE>
   155c0:	andeq	pc, r2, r8, lsl #12

000155c4 <UnityPrint@@Base>:
   155c4:	cmp	r0, #0
   155c8:	push	{r4, r5, r6, lr}
   155cc:	ldr	r4, [pc, #436]	; 15788 <UnityPrint@@Base+0x1c4>
   155d0:	bne	155f0 <UnityPrint@@Base+0x2c>
   155d4:	ldr	r3, [r4]
   155d8:	ldr	r2, [r4, #4]
   155dc:	adds	r3, r3, #1
   155e0:	adc	r2, r2, #0
   155e4:	str	r3, [r4]
   155e8:	str	r2, [r4, #4]
   155ec:	pop	{r4, r5, r6, pc}
   155f0:	ldr	r3, [r4, #-8]
   155f4:	sub	r5, r0, #1
   155f8:	ldr	r2, [r4, #-4]
   155fc:	adds	r3, r3, #1
   15600:	adc	r2, r2, #0
   15604:	str	r3, [r4, #-8]
   15608:	str	r2, [r4, #-4]
   1560c:	ldrb	r0, [r5, #1]!
   15610:	cmp	r0, #0
   15614:	bne	15634 <UnityPrint@@Base+0x70>
   15618:	ldr	r3, [r4, #88]	; 0x58
   1561c:	ldr	r2, [r4, #92]	; 0x5c
   15620:	adds	r3, r3, #1
   15624:	adc	r2, r2, #0
   15628:	str	r3, [r4, #88]	; 0x58
   1562c:	str	r2, [r4, #92]	; 0x5c
   15630:	pop	{r4, r5, r6, pc}
   15634:	sub	r3, r0, #32
   15638:	cmp	r3, #94	; 0x5e
   1563c:	bhi	15678 <UnityPrint@@Base+0xb4>
   15640:	ldr	r3, [r4, #8]
   15644:	ldr	r2, [r4, #12]
   15648:	adds	r3, r3, #1
   1564c:	adc	r2, r2, #0
   15650:	str	r3, [r4, #8]
   15654:	str	r2, [r4, #12]
   15658:	bl	1208c <putchar@plt>
   1565c:	ldr	r3, [r4, #16]
   15660:	ldr	r2, [r4, #20]
   15664:	adds	r3, r3, #1
   15668:	adc	r2, r2, #0
   1566c:	str	r3, [r4, #16]
   15670:	str	r2, [r4, #20]
   15674:	b	1560c <UnityPrint@@Base+0x48>
   15678:	cmp	r0, #13
   1567c:	bne	156dc <UnityPrint@@Base+0x118>
   15680:	ldr	r3, [r4, #24]
   15684:	mov	r0, #92	; 0x5c
   15688:	ldr	r2, [r4, #28]
   1568c:	adds	r3, r3, #1
   15690:	adc	r2, r2, #0
   15694:	str	r3, [r4, #24]
   15698:	str	r2, [r4, #28]
   1569c:	bl	1208c <putchar@plt>
   156a0:	ldr	r3, [r4, #32]
   156a4:	mov	r0, #114	; 0x72
   156a8:	ldr	r2, [r4, #36]	; 0x24
   156ac:	adds	r3, r3, #1
   156b0:	adc	r2, r2, #0
   156b4:	str	r3, [r4, #32]
   156b8:	str	r2, [r4, #36]	; 0x24
   156bc:	bl	1208c <putchar@plt>
   156c0:	ldr	r3, [r4, #40]	; 0x28
   156c4:	ldr	r2, [r4, #44]	; 0x2c
   156c8:	adds	r3, r3, #1
   156cc:	adc	r2, r2, #0
   156d0:	str	r3, [r4, #40]	; 0x28
   156d4:	str	r2, [r4, #44]	; 0x2c
   156d8:	b	1560c <UnityPrint@@Base+0x48>
   156dc:	cmp	r0, #10
   156e0:	bne	15740 <UnityPrint@@Base+0x17c>
   156e4:	ldr	r3, [r4, #48]	; 0x30
   156e8:	mov	r0, #92	; 0x5c
   156ec:	ldr	r2, [r4, #52]	; 0x34
   156f0:	adds	r3, r3, #1
   156f4:	adc	r2, r2, #0
   156f8:	str	r3, [r4, #48]	; 0x30
   156fc:	str	r2, [r4, #52]	; 0x34
   15700:	bl	1208c <putchar@plt>
   15704:	ldr	r3, [r4, #64]	; 0x40
   15708:	mov	r0, #110	; 0x6e
   1570c:	ldr	r2, [r4, #68]	; 0x44
   15710:	adds	r3, r3, #1
   15714:	adc	r2, r2, #0
   15718:	str	r3, [r4, #64]	; 0x40
   1571c:	str	r2, [r4, #68]	; 0x44
   15720:	bl	1208c <putchar@plt>
   15724:	ldr	r3, [r4, #72]	; 0x48
   15728:	ldr	r2, [r4, #76]	; 0x4c
   1572c:	adds	r3, r3, #1
   15730:	adc	r2, r2, #0
   15734:	str	r3, [r4, #72]	; 0x48
   15738:	str	r2, [r4, #76]	; 0x4c
   1573c:	b	1560c <UnityPrint@@Base+0x48>
   15740:	ldr	r3, [r4, #56]	; 0x38
   15744:	mov	r0, #92	; 0x5c
   15748:	ldr	r2, [r4, #60]	; 0x3c
   1574c:	adds	r3, r3, #1
   15750:	adc	r2, r2, #0
   15754:	str	r3, [r4, #56]	; 0x38
   15758:	str	r2, [r4, #60]	; 0x3c
   1575c:	bl	1208c <putchar@plt>
   15760:	ldr	r3, [r4, #80]	; 0x50
   15764:	mov	r1, #2
   15768:	ldr	r2, [r4, #84]	; 0x54
   1576c:	ldrb	r0, [r5]
   15770:	adds	r3, r3, #1
   15774:	adc	r2, r2, #0
   15778:	str	r3, [r4, #80]	; 0x50
   1577c:	str	r2, [r4, #84]	; 0x54
   15780:	bl	151b8 <UnityPrintNumberHex@@Base>
   15784:	b	1560c <UnityPrint@@Base+0x48>
   15788:	andeq	pc, r2, r8, lsr #12
   1578c:	push	{r4, r5, r6, lr}
   15790:	mov	r6, r0
   15794:	mov	r5, r1
   15798:	ldr	r4, [pc, #416]	; 15940 <UnityPrint@@Base+0x37c>
   1579c:	ldr	r0, [pc, #416]	; 15944 <UnityPrint@@Base+0x380>
   157a0:	ldr	r3, [r4]
   157a4:	ldr	r2, [r4, #4]
   157a8:	adds	r3, r3, #1
   157ac:	adc	r2, r2, #0
   157b0:	str	r3, [r4]
   157b4:	str	r2, [r4, #4]
   157b8:	bl	155c4 <UnityPrint@@Base>
   157bc:	cmp	r6, #0
   157c0:	beq	158c8 <UnityPrint@@Base+0x304>
   157c4:	ldr	r3, [r4, #8]
   157c8:	mov	r0, #39	; 0x27
   157cc:	ldr	r2, [r4, #12]
   157d0:	adds	r3, r3, #1
   157d4:	adc	r2, r2, #0
   157d8:	str	r3, [r4, #8]
   157dc:	str	r2, [r4, #12]
   157e0:	bl	1208c <putchar@plt>
   157e4:	ldr	r3, [r4, #24]
   157e8:	mov	r0, r6
   157ec:	ldr	r2, [r4, #28]
   157f0:	adds	r3, r3, #1
   157f4:	adc	r2, r2, #0
   157f8:	str	r3, [r4, #24]
   157fc:	str	r2, [r4, #28]
   15800:	bl	155c4 <UnityPrint@@Base>
   15804:	ldr	r3, [r4, #32]
   15808:	mov	r0, #39	; 0x27
   1580c:	ldr	r2, [r4, #36]	; 0x24
   15810:	adds	r3, r3, #1
   15814:	adc	r2, r2, #0
   15818:	str	r3, [r4, #32]
   1581c:	str	r2, [r4, #36]	; 0x24
   15820:	bl	1208c <putchar@plt>
   15824:	ldr	r3, [r4, #40]	; 0x28
   15828:	ldr	r2, [r4, #44]	; 0x2c
   1582c:	adds	r3, r3, #1
   15830:	adc	r2, r2, #0
   15834:	str	r3, [r4, #40]	; 0x28
   15838:	str	r2, [r4, #44]	; 0x2c
   1583c:	ldr	r0, [pc, #260]	; 15948 <UnityPrint@@Base+0x384>
   15840:	bl	155c4 <UnityPrint@@Base>
   15844:	cmp	r5, #0
   15848:	beq	15904 <UnityPrint@@Base+0x340>
   1584c:	ldr	r3, [r4, #56]	; 0x38
   15850:	mov	r0, #39	; 0x27
   15854:	ldr	r2, [r4, #60]	; 0x3c
   15858:	adds	r3, r3, #1
   1585c:	adc	r2, r2, #0
   15860:	str	r3, [r4, #56]	; 0x38
   15864:	str	r2, [r4, #60]	; 0x3c
   15868:	bl	1208c <putchar@plt>
   1586c:	ldr	r3, [r4, #72]	; 0x48
   15870:	mov	r0, r5
   15874:	ldr	r2, [r4, #76]	; 0x4c
   15878:	adds	r3, r3, #1
   1587c:	adc	r2, r2, #0
   15880:	str	r3, [r4, #72]	; 0x48
   15884:	str	r2, [r4, #76]	; 0x4c
   15888:	bl	155c4 <UnityPrint@@Base>
   1588c:	ldr	r3, [r4, #80]	; 0x50
   15890:	mov	r0, #39	; 0x27
   15894:	ldr	r2, [r4, #84]	; 0x54
   15898:	adds	r3, r3, #1
   1589c:	adc	r2, r2, #0
   158a0:	str	r3, [r4, #80]	; 0x50
   158a4:	str	r2, [r4, #84]	; 0x54
   158a8:	bl	1208c <putchar@plt>
   158ac:	ldr	r3, [r4, #88]	; 0x58
   158b0:	ldr	r2, [r4, #92]	; 0x5c
   158b4:	adds	r3, r3, #1
   158b8:	adc	r2, r2, #0
   158bc:	str	r3, [r4, #88]	; 0x58
   158c0:	str	r2, [r4, #92]	; 0x5c
   158c4:	pop	{r4, r5, r6, pc}
   158c8:	ldr	r3, [r4, #16]
   158cc:	ldr	r2, [r4, #20]
   158d0:	ldr	r0, [pc, #116]	; 1594c <UnityPrint@@Base+0x388>
   158d4:	adds	r3, r3, #1
   158d8:	adc	r2, r2, #0
   158dc:	str	r3, [r4, #16]
   158e0:	str	r2, [r4, #20]
   158e4:	bl	155c4 <UnityPrint@@Base>
   158e8:	ldr	r3, [r4, #48]	; 0x30
   158ec:	ldr	r2, [r4, #52]	; 0x34
   158f0:	adds	r3, r3, #1
   158f4:	adc	r2, r2, #0
   158f8:	str	r3, [r4, #48]	; 0x30
   158fc:	str	r2, [r4, #52]	; 0x34
   15900:	b	1583c <UnityPrint@@Base+0x278>
   15904:	ldr	r3, [r4, #64]	; 0x40
   15908:	ldr	r2, [r4, #68]	; 0x44
   1590c:	ldr	r0, [pc, #56]	; 1594c <UnityPrint@@Base+0x388>
   15910:	adds	r3, r3, #1
   15914:	adc	r2, r2, #0
   15918:	str	r3, [r4, #64]	; 0x40
   1591c:	str	r2, [r4, #68]	; 0x44
   15920:	bl	155c4 <UnityPrint@@Base>
   15924:	ldr	r3, [r4, #96]	; 0x60
   15928:	ldr	r2, [r4, #100]	; 0x64
   1592c:	adds	r3, r3, #1
   15930:	adc	r2, r2, #0
   15934:	str	r3, [r4, #96]	; 0x60
   15938:	str	r2, [r4, #100]	; 0x64
   1593c:	pop	{r4, r5, r6, pc}
   15940:	andeq	pc, r2, r8, lsl #13
   15944:	andeq	ip, r1, ip, ror #21
   15948:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1594c:	strdeq	ip, [r1], -r7
   15950:	push	{r4, r5, r6, lr}
   15954:	subs	r5, r0, #0
   15958:	ldr	r4, [pc, #364]	; 15acc <UnityPrint@@Base+0x508>
   1595c:	bne	1597c <UnityPrint@@Base+0x3b8>
   15960:	ldr	r3, [r4]
   15964:	ldr	r2, [r4, #4]
   15968:	adds	r3, r3, #1
   1596c:	adc	r2, r2, #0
   15970:	str	r3, [r4]
   15974:	str	r2, [r4, #4]
   15978:	pop	{r4, r5, r6, pc}
   1597c:	ldr	r3, [r4, #-8]
   15980:	ldr	r2, [r4, #-4]
   15984:	ldr	r6, [pc, #324]	; 15ad0 <UnityPrint@@Base+0x50c>
   15988:	adds	r3, r3, #1
   1598c:	ldr	r0, [pc, #320]	; 15ad4 <UnityPrint@@Base+0x510>
   15990:	adc	r2, r2, #0
   15994:	str	r3, [r4, #-8]
   15998:	str	r2, [r4, #-4]
   1599c:	bl	155c4 <UnityPrint@@Base>
   159a0:	ldr	r3, [r6, #8]
   159a4:	cmp	r3, #0
   159a8:	bne	159e8 <UnityPrint@@Base+0x424>
   159ac:	ldr	r3, [r4, #16]
   159b0:	ldr	r2, [r4, #20]
   159b4:	adds	r3, r3, #1
   159b8:	adc	r2, r2, #0
   159bc:	str	r3, [r4, #16]
   159c0:	str	r2, [r4, #20]
   159c4:	mov	r0, r5
   159c8:	bl	155c4 <UnityPrint@@Base>
   159cc:	ldr	r3, [r4, #72]	; 0x48
   159d0:	ldr	r2, [r4, #76]	; 0x4c
   159d4:	adds	r3, r3, #1
   159d8:	adc	r2, r2, #0
   159dc:	str	r3, [r4, #72]	; 0x48
   159e0:	str	r2, [r4, #76]	; 0x4c
   159e4:	pop	{r4, r5, r6, pc}
   159e8:	ldr	r3, [r4, #8]
   159ec:	ldr	r2, [r4, #12]
   159f0:	ldr	r0, [pc, #224]	; 15ad8 <UnityPrint@@Base+0x514>
   159f4:	adds	r3, r3, #1
   159f8:	adc	r2, r2, #0
   159fc:	str	r3, [r4, #8]
   15a00:	str	r2, [r4, #12]
   15a04:	bl	155c4 <UnityPrint@@Base>
   15a08:	ldr	r3, [r4, #24]
   15a0c:	ldr	r2, [r4, #28]
   15a10:	ldr	r0, [r6, #8]
   15a14:	adds	r3, r3, #1
   15a18:	adc	r2, r2, #0
   15a1c:	str	r3, [r4, #24]
   15a20:	str	r2, [r4, #28]
   15a24:	bl	155c4 <UnityPrint@@Base>
   15a28:	ldr	r3, [r6, #12]
   15a2c:	cmp	r3, #0
   15a30:	bne	15a70 <UnityPrint@@Base+0x4ac>
   15a34:	ldr	r3, [r4, #40]	; 0x28
   15a38:	ldr	r2, [r4, #44]	; 0x2c
   15a3c:	adds	r3, r3, #1
   15a40:	adc	r2, r2, #0
   15a44:	str	r3, [r4, #40]	; 0x28
   15a48:	str	r2, [r4, #44]	; 0x2c
   15a4c:	ldr	r0, [pc, #128]	; 15ad4 <UnityPrint@@Base+0x510>
   15a50:	bl	155c4 <UnityPrint@@Base>
   15a54:	ldr	r3, [r4, #64]	; 0x40
   15a58:	ldr	r2, [r4, #68]	; 0x44
   15a5c:	adds	r3, r3, #1
   15a60:	adc	r2, r2, #0
   15a64:	str	r3, [r4, #64]	; 0x40
   15a68:	str	r2, [r4, #68]	; 0x44
   15a6c:	b	159c4 <UnityPrint@@Base+0x400>
   15a70:	ldr	r3, [r4, #32]
   15a74:	ldr	r2, [r4, #36]	; 0x24
   15a78:	ldr	r0, [pc, #92]	; 15adc <UnityPrint@@Base+0x518>
   15a7c:	adds	r3, r3, #1
   15a80:	adc	r2, r2, #0
   15a84:	str	r3, [r4, #32]
   15a88:	str	r2, [r4, #36]	; 0x24
   15a8c:	bl	155c4 <UnityPrint@@Base>
   15a90:	ldr	r3, [r4, #48]	; 0x30
   15a94:	ldr	r2, [r4, #52]	; 0x34
   15a98:	ldr	r0, [r6, #12]
   15a9c:	adds	r3, r3, #1
   15aa0:	adc	r2, r2, #0
   15aa4:	str	r3, [r4, #48]	; 0x30
   15aa8:	str	r2, [r4, #52]	; 0x34
   15aac:	bl	155c4 <UnityPrint@@Base>
   15ab0:	ldr	r3, [r4, #56]	; 0x38
   15ab4:	ldr	r2, [r4, #60]	; 0x3c
   15ab8:	adds	r3, r3, #1
   15abc:	adc	r2, r2, #0
   15ac0:	str	r3, [r4, #56]	; 0x38
   15ac4:	str	r2, [r4, #60]	; 0x3c
   15ac8:	b	15a4c <UnityPrint@@Base+0x488>
   15acc:	strdeq	pc, [r2], -r8
   15ad0:	strdeq	r0, [r3], -r8
   15ad4:	andeq	ip, r1, r2, lsl #22
   15ad8:	andeq	ip, r1, r5, lsl #22
   15adc:	andeq	ip, r1, pc, lsl #22
   15ae0:	push	{r4, r5, r6, lr}
   15ae4:	mov	r5, r1
   15ae8:	ldr	r4, [pc, #216]	; 15bc8 <UnityPrint@@Base+0x604>
   15aec:	ldr	r3, [r4]
   15af0:	ldr	r2, [r4, #4]
   15af4:	adds	r3, r3, #1
   15af8:	adc	r2, r2, #0
   15afc:	str	r3, [r4]
   15b00:	str	r2, [r4, #4]
   15b04:	bl	155c4 <UnityPrint@@Base>
   15b08:	ldr	r3, [r4, #8]
   15b0c:	mov	r0, #58	; 0x3a
   15b10:	ldr	r2, [r4, #12]
   15b14:	adds	r3, r3, #1
   15b18:	adc	r2, r2, #0
   15b1c:	str	r3, [r4, #8]
   15b20:	str	r2, [r4, #12]
   15b24:	bl	1208c <putchar@plt>
   15b28:	ldr	r3, [r4, #16]
   15b2c:	mov	r0, r5
   15b30:	ldr	r2, [r4, #20]
   15b34:	adds	r3, r3, #1
   15b38:	adc	r2, r2, #0
   15b3c:	str	r3, [r4, #16]
   15b40:	str	r2, [r4, #20]
   15b44:	bl	14f5c <UnityPrintNumber@@Base>
   15b48:	ldr	r3, [r4, #24]
   15b4c:	mov	r0, #58	; 0x3a
   15b50:	ldr	r2, [r4, #28]
   15b54:	adds	r3, r3, #1
   15b58:	adc	r2, r2, #0
   15b5c:	str	r3, [r4, #24]
   15b60:	str	r2, [r4, #28]
   15b64:	bl	1208c <putchar@plt>
   15b68:	ldr	r3, [r4, #32]
   15b6c:	ldr	r2, [r4, #36]	; 0x24
   15b70:	adds	r3, r3, #1
   15b74:	str	r3, [r4, #32]
   15b78:	adc	r2, r2, #0
   15b7c:	ldr	r3, [pc, #72]	; 15bcc <UnityPrint@@Base+0x608>
   15b80:	str	r2, [r4, #36]	; 0x24
   15b84:	ldr	r0, [r3, #4]
   15b88:	bl	155c4 <UnityPrint@@Base>
   15b8c:	ldr	r3, [r4, #40]	; 0x28
   15b90:	mov	r0, #58	; 0x3a
   15b94:	ldr	r2, [r4, #44]	; 0x2c
   15b98:	adds	r3, r3, #1
   15b9c:	adc	r2, r2, #0
   15ba0:	str	r3, [r4, #40]	; 0x28
   15ba4:	str	r2, [r4, #44]	; 0x2c
   15ba8:	bl	1208c <putchar@plt>
   15bac:	ldr	r3, [r4, #48]	; 0x30
   15bb0:	ldr	r2, [r4, #52]	; 0x34
   15bb4:	adds	r3, r3, #1
   15bb8:	adc	r2, r2, #0
   15bbc:	str	r3, [r4, #48]	; 0x30
   15bc0:	str	r2, [r4, #52]	; 0x34
   15bc4:	pop	{r4, r5, r6, pc}
   15bc8:	andeq	pc, r2, r8, asr #14
   15bcc:	strdeq	r0, [r3], -r8
   15bd0:	push	{r4, lr}
   15bd4:	mov	r1, r0
   15bd8:	ldr	r4, [pc, #124]	; 15c5c <UnityPrint@@Base+0x698>
   15bdc:	ldr	r3, [r4, #-8]
   15be0:	ldr	r2, [r4, #-4]
   15be4:	adds	r3, r3, #1
   15be8:	str	r3, [r4, #-8]
   15bec:	adc	r2, r2, #0
   15bf0:	ldr	r3, [pc, #104]	; 15c60 <UnityPrint@@Base+0x69c>
   15bf4:	str	r2, [r4, #-4]
   15bf8:	ldr	r0, [r3]
   15bfc:	bl	15ae0 <UnityPrint@@Base+0x51c>
   15c00:	ldr	r3, [r4]
   15c04:	ldr	r2, [r4, #4]
   15c08:	ldr	r0, [pc, #84]	; 15c64 <UnityPrint@@Base+0x6a0>
   15c0c:	adds	r3, r3, #1
   15c10:	adc	r2, r2, #0
   15c14:	str	r3, [r4]
   15c18:	str	r2, [r4, #4]
   15c1c:	bl	155c4 <UnityPrint@@Base>
   15c20:	ldr	r3, [r4, #8]
   15c24:	mov	r0, #58	; 0x3a
   15c28:	ldr	r2, [r4, #12]
   15c2c:	adds	r3, r3, #1
   15c30:	adc	r2, r2, #0
   15c34:	str	r3, [r4, #8]
   15c38:	str	r2, [r4, #12]
   15c3c:	bl	1208c <putchar@plt>
   15c40:	ldr	r3, [r4, #16]
   15c44:	ldr	r2, [r4, #20]
   15c48:	adds	r3, r3, #1
   15c4c:	adc	r2, r2, #0
   15c50:	str	r3, [r4, #16]
   15c54:	str	r2, [r4, #20]
   15c58:	pop	{r4, pc}
   15c5c:	andeq	pc, r2, r8, lsl #15
   15c60:	strdeq	r0, [r3], -r8
   15c64:	andeq	ip, r1, sl, lsl fp
   15c68:	mov	ip, r0
   15c6c:	push	{r4, r5, r6, lr}
   15c70:	orrs	r0, ip, r1
   15c74:	ldr	r4, [pc, #328]	; 15dc4 <UnityPrint@@Base+0x800>
   15c78:	beq	15d9c <UnityPrint@@Base+0x7d8>
   15c7c:	cmp	ip, #0
   15c80:	mov	r5, r3
   15c84:	mov	r0, r2
   15c88:	bne	15d14 <UnityPrint@@Base+0x750>
   15c8c:	ldr	r3, [r4]
   15c90:	ldr	r2, [r4, #4]
   15c94:	adds	r3, r3, #1
   15c98:	adc	r2, r2, #0
   15c9c:	str	r3, [r4]
   15ca0:	str	r2, [r4, #4]
   15ca4:	bl	15bd0 <UnityPrint@@Base+0x60c>
   15ca8:	ldr	r3, [r4, #16]
   15cac:	ldr	r2, [r4, #20]
   15cb0:	ldr	r0, [pc, #272]	; 15dc8 <UnityPrint@@Base+0x804>
   15cb4:	adds	r3, r3, #1
   15cb8:	adc	r2, r2, #0
   15cbc:	str	r3, [r4, #16]
   15cc0:	str	r2, [r4, #20]
   15cc4:	bl	155c4 <UnityPrint@@Base>
   15cc8:	ldr	r3, [r4, #24]
   15ccc:	mov	r0, r5
   15cd0:	ldr	r2, [r4, #28]
   15cd4:	adds	r3, r3, #1
   15cd8:	adc	r2, r2, #0
   15cdc:	str	r3, [r4, #24]
   15ce0:	str	r2, [r4, #28]
   15ce4:	bl	15950 <UnityPrint@@Base+0x38c>
   15ce8:	ldr	r3, [r4, #32]
   15cec:	ldr	r2, [r4, #36]	; 0x24
   15cf0:	adds	r3, r3, #1
   15cf4:	adc	r2, r2, #0
   15cf8:	str	r3, [r4, #32]
   15cfc:	str	r2, [r4, #36]	; 0x24
   15d00:	ldr	r0, [pc, #196]	; 15dcc <UnityPrint@@Base+0x808>
   15d04:	mov	r1, #1
   15d08:	add	r0, r0, #40	; 0x28
   15d0c:	str	r1, [r0, #-8]
   15d10:	bl	11f9c <longjmp@plt>
   15d14:	ldr	r3, [r4, #8]
   15d18:	ldr	r2, [r4, #12]
   15d1c:	adds	r3, r3, #1
   15d20:	adc	r2, r2, #0
   15d24:	cmp	r1, #0
   15d28:	str	r3, [r4, #8]
   15d2c:	str	r2, [r4, #12]
   15d30:	bne	15dbc <UnityPrint@@Base+0x7f8>
   15d34:	ldr	r1, [r4, #40]	; 0x28
   15d38:	ldr	r3, [r4, #44]	; 0x2c
   15d3c:	adds	r1, r1, #1
   15d40:	adc	r3, r3, #0
   15d44:	str	r1, [r4, #40]	; 0x28
   15d48:	str	r3, [r4, #44]	; 0x2c
   15d4c:	bl	15bd0 <UnityPrint@@Base+0x60c>
   15d50:	ldrd	r2, [r4, #48]	; 0x30
   15d54:	ldr	r0, [pc, #116]	; 15dd0 <UnityPrint@@Base+0x80c>
   15d58:	adds	r2, r2, #1
   15d5c:	adc	r3, r3, #0
   15d60:	strd	r2, [r4, #48]	; 0x30
   15d64:	bl	155c4 <UnityPrint@@Base>
   15d68:	ldrd	r2, [r4, #56]	; 0x38
   15d6c:	mov	r0, r5
   15d70:	adds	r2, r2, #1
   15d74:	adc	r3, r3, #0
   15d78:	strd	r2, [r4, #56]	; 0x38
   15d7c:	bl	15950 <UnityPrint@@Base+0x38c>
   15d80:	ldr	r3, [r4, #64]	; 0x40
   15d84:	ldr	r2, [r4, #68]	; 0x44
   15d88:	adds	r3, r3, #1
   15d8c:	adc	r2, r2, #0
   15d90:	str	r3, [r4, #64]	; 0x40
   15d94:	str	r2, [r4, #68]	; 0x44
   15d98:	b	15d00 <UnityPrint@@Base+0x73c>
   15d9c:	ldr	r3, [r4, #-8]
   15da0:	mov	r0, #1
   15da4:	ldr	r2, [r4, #-4]
   15da8:	adds	r3, r3, #1
   15dac:	adc	r2, r2, #0
   15db0:	str	r3, [r4, #-8]
   15db4:	str	r2, [r4, #-4]
   15db8:	pop	{r4, r5, r6, pc}
   15dbc:	mov	r0, #0
   15dc0:	pop	{r4, r5, r6, pc}
   15dc4:	andeq	pc, r2, r8, lsr #15
   15dc8:	andeq	ip, r1, pc, lsl fp
   15dcc:	strdeq	r0, [r3], -r8
   15dd0:	andeq	ip, r1, ip, lsr fp

00015dd4 <UnityPrintMask@@Base>:
   15dd4:	push	{r4, r5, r6, r7, r8, lr}
   15dd8:	mov	r7, r0
   15ddc:	mov	r8, r1
   15de0:	mov	r6, #32
   15de4:	mov	r5, #-2147483648	; 0x80000000
   15de8:	ldr	r4, [pc, #228]	; 15ed4 <UnityPrintMask@@Base+0x100>
   15dec:	ldr	r3, [r4, #-8]
   15df0:	ldr	r2, [r4, #-4]
   15df4:	adds	r3, r3, #1
   15df8:	adc	r2, r2, #0
   15dfc:	str	r3, [r4, #-8]
   15e00:	str	r2, [r4, #-4]
   15e04:	tst	r7, r5
   15e08:	beq	15e98 <UnityPrintMask@@Base+0xc4>
   15e0c:	tst	r8, r5
   15e10:	beq	15e74 <UnityPrintMask@@Base+0xa0>
   15e14:	ldr	r3, [r4, #8]
   15e18:	mov	r0, #49	; 0x31
   15e1c:	ldr	r2, [r4, #12]
   15e20:	adds	r3, r3, #1
   15e24:	adc	r2, r2, #0
   15e28:	str	r3, [r4, #8]
   15e2c:	str	r2, [r4, #12]
   15e30:	bl	1208c <putchar@plt>
   15e34:	ldr	r3, [r4, #24]
   15e38:	ldr	r2, [r4, #28]
   15e3c:	adds	r3, r3, #1
   15e40:	adc	r2, r2, #0
   15e44:	str	r3, [r4, #24]
   15e48:	str	r2, [r4, #28]
   15e4c:	subs	r6, r6, #1
   15e50:	lsr	r5, r5, #1
   15e54:	bne	15e04 <UnityPrintMask@@Base+0x30>
   15e58:	ldr	r3, [r4, #40]	; 0x28
   15e5c:	ldr	r2, [r4, #44]	; 0x2c
   15e60:	adds	r3, r3, #1
   15e64:	adc	r2, r2, #0
   15e68:	str	r3, [r4, #40]	; 0x28
   15e6c:	str	r2, [r4, #44]	; 0x2c
   15e70:	pop	{r4, r5, r6, r7, r8, pc}
   15e74:	ldr	r3, [r4, #16]
   15e78:	mov	r0, #48	; 0x30
   15e7c:	ldr	r2, [r4, #20]
   15e80:	adds	r3, r3, #1
   15e84:	adc	r2, r2, #0
   15e88:	str	r3, [r4, #16]
   15e8c:	str	r2, [r4, #20]
   15e90:	bl	1208c <putchar@plt>
   15e94:	b	15e4c <UnityPrintMask@@Base+0x78>
   15e98:	ldr	r3, [r4]
   15e9c:	mov	r0, #88	; 0x58
   15ea0:	ldr	r2, [r4, #4]
   15ea4:	adds	r3, r3, #1
   15ea8:	adc	r2, r2, #0
   15eac:	str	r3, [r4]
   15eb0:	str	r2, [r4, #4]
   15eb4:	bl	1208c <putchar@plt>
   15eb8:	ldr	r3, [r4, #32]
   15ebc:	ldr	r2, [r4, #36]	; 0x24
   15ec0:	adds	r3, r3, #1
   15ec4:	adc	r2, r2, #0
   15ec8:	str	r3, [r4, #32]
   15ecc:	str	r2, [r4, #36]	; 0x24
   15ed0:	b	15e4c <UnityPrintMask@@Base+0x78>
   15ed4:	strdeq	pc, [r2], -r8

00015ed8 <UnityPrintFail@@Base>:
   15ed8:	push	{r4, lr}
   15edc:	ldr	r4, [pc, #56]	; 15f1c <UnityPrintFail@@Base+0x44>
   15ee0:	ldr	r0, [pc, #56]	; 15f20 <UnityPrintFail@@Base+0x48>
   15ee4:	ldr	r3, [r4]
   15ee8:	ldr	r2, [r4, #4]
   15eec:	adds	r3, r3, #1
   15ef0:	adc	r2, r2, #0
   15ef4:	str	r3, [r4]
   15ef8:	str	r2, [r4, #4]
   15efc:	bl	155c4 <UnityPrint@@Base>
   15f00:	ldr	r3, [r4, #8]
   15f04:	ldr	r2, [r4, #12]
   15f08:	adds	r3, r3, #1
   15f0c:	adc	r2, r2, #0
   15f10:	str	r3, [r4, #8]
   15f14:	str	r2, [r4, #12]
   15f18:	pop	{r4, pc}
   15f1c:	andeq	pc, r2, r8, lsr #16
   15f20:	andeq	ip, r1, sl, lsl fp

00015f24 <UnityPrintOk@@Base>:
   15f24:	push	{r4, lr}
   15f28:	ldr	r4, [pc, #56]	; 15f68 <UnityPrintOk@@Base+0x44>
   15f2c:	ldr	r0, [pc, #56]	; 15f6c <UnityPrintOk@@Base+0x48>
   15f30:	ldr	r3, [r4]
   15f34:	ldr	r2, [r4, #4]
   15f38:	adds	r3, r3, #1
   15f3c:	adc	r2, r2, #0
   15f40:	str	r3, [r4]
   15f44:	str	r2, [r4, #4]
   15f48:	bl	155c4 <UnityPrint@@Base>
   15f4c:	ldr	r3, [r4, #8]
   15f50:	ldr	r2, [r4, #12]
   15f54:	adds	r3, r3, #1
   15f58:	adc	r2, r2, #0
   15f5c:	str	r3, [r4, #8]
   15f60:	str	r2, [r4, #12]
   15f64:	pop	{r4, pc}
   15f68:	andeq	pc, r2, r8, lsr r8	; <UNPREDICTABLE>
   15f6c:	andeq	ip, r1, r5, asr fp

00015f70 <UnityConcludeTest@@Base>:
   15f70:	push	{r4, r5, r6, lr}
   15f74:	ldr	r5, [pc, #244]	; 16070 <UnityConcludeTest@@Base+0x100>
   15f78:	ldr	r4, [pc, #244]	; 16074 <UnityConcludeTest@@Base+0x104>
   15f7c:	ldr	r3, [r5, #36]	; 0x24
   15f80:	cmp	r3, #0
   15f84:	beq	15fdc <UnityConcludeTest@@Base+0x6c>
   15f88:	ldr	r3, [r4]
   15f8c:	ldr	r2, [r4, #4]
   15f90:	adds	r3, r3, #1
   15f94:	str	r3, [r4]
   15f98:	adc	r2, r2, #0
   15f9c:	ldr	r3, [r5, #28]
   15fa0:	str	r2, [r4, #4]
   15fa4:	add	r3, r3, #1
   15fa8:	str	r3, [r5, #28]
   15fac:	mov	r3, #0
   15fb0:	mov	r0, #10
   15fb4:	str	r3, [r5, #32]
   15fb8:	str	r3, [r5, #36]	; 0x24
   15fbc:	bl	1208c <putchar@plt>
   15fc0:	ldr	r3, [r4, #40]	; 0x28
   15fc4:	ldr	r2, [r4, #44]	; 0x2c
   15fc8:	adds	r3, r3, #1
   15fcc:	adc	r2, r2, #0
   15fd0:	str	r3, [r4, #40]	; 0x28
   15fd4:	str	r2, [r4, #44]	; 0x2c
   15fd8:	pop	{r4, r5, r6, pc}
   15fdc:	ldr	r3, [r5, #32]
   15fe0:	cmp	r3, #0
   15fe4:	bne	16048 <UnityConcludeTest@@Base+0xd8>
   15fe8:	ldr	r3, [r4, #8]
   15fec:	ldr	r2, [r4, #12]
   15ff0:	ldr	r0, [r5]
   15ff4:	adds	r3, r3, #1
   15ff8:	ldr	r1, [r5, #16]
   15ffc:	adc	r2, r2, #0
   16000:	str	r3, [r4, #8]
   16004:	str	r2, [r4, #12]
   16008:	bl	15ae0 <UnityPrint@@Base+0x51c>
   1600c:	ldr	r3, [r4, #24]
   16010:	ldr	r2, [r4, #28]
   16014:	ldr	r0, [pc, #92]	; 16078 <UnityConcludeTest@@Base+0x108>
   16018:	adds	r3, r3, #1
   1601c:	adc	r2, r2, #0
   16020:	str	r3, [r4, #24]
   16024:	str	r2, [r4, #28]
   16028:	bl	155c4 <UnityPrint@@Base>
   1602c:	ldr	r3, [r4, #32]
   16030:	ldr	r2, [r4, #36]	; 0x24
   16034:	adds	r3, r3, #1
   16038:	adc	r2, r2, #0
   1603c:	str	r3, [r4, #32]
   16040:	str	r2, [r4, #36]	; 0x24
   16044:	b	15fac <UnityConcludeTest@@Base+0x3c>
   16048:	ldr	r3, [r4, #16]
   1604c:	ldr	r2, [r4, #20]
   16050:	adds	r3, r3, #1
   16054:	str	r3, [r4, #16]
   16058:	adc	r2, r2, #0
   1605c:	ldr	r3, [r5, #24]
   16060:	str	r2, [r4, #20]
   16064:	add	r3, r3, #1
   16068:	str	r3, [r5, #24]
   1606c:	b	15fac <UnityConcludeTest@@Base+0x3c>
   16070:	strdeq	r0, [r3], -r8
   16074:	andeq	pc, r2, r8, asr #16
   16078:	andeq	ip, r1, r8, asr fp

0001607c <UnityAssertBits@@Base>:
   1607c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16080:	ldr	r6, [pc, #364]	; 161f4 <UnityAssertBits@@Base+0x178>
   16084:	ldr	r4, [pc, #364]	; 161f8 <UnityAssertBits@@Base+0x17c>
   16088:	ldr	ip, [r6, #32]
   1608c:	cmp	ip, #0
   16090:	bne	161d8 <UnityAssertBits@@Base+0x15c>
   16094:	ldr	ip, [r6, #36]	; 0x24
   16098:	cmp	ip, #0
   1609c:	beq	160bc <UnityAssertBits@@Base+0x40>
   160a0:	ldr	r3, [r4, #8]
   160a4:	ldr	r2, [r4, #12]
   160a8:	adds	r3, r3, #1
   160ac:	adc	r2, r2, #0
   160b0:	str	r3, [r4, #8]
   160b4:	str	r2, [r4, #12]
   160b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   160bc:	ldr	ip, [r4, #16]
   160c0:	ldr	lr, [r4, #20]
   160c4:	adds	ip, ip, #1
   160c8:	adc	lr, lr, #0
   160cc:	str	ip, [r4, #16]
   160d0:	eor	ip, r1, r2
   160d4:	tst	ip, r0
   160d8:	str	lr, [r4, #20]
   160dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   160e0:	mov	r7, r3
   160e4:	ldr	r3, [r4, #24]
   160e8:	mov	r8, r2
   160ec:	mov	r5, r0
   160f0:	mov	r9, r1
   160f4:	ldr	r2, [r4, #28]
   160f8:	ldr	r0, [sp, #32]
   160fc:	adds	r3, r3, #1
   16100:	adc	r2, r2, #0
   16104:	str	r3, [r4, #24]
   16108:	str	r2, [r4, #28]
   1610c:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16110:	ldr	r3, [r4, #32]
   16114:	ldr	r2, [r4, #36]	; 0x24
   16118:	ldr	r0, [pc, #220]	; 161fc <UnityAssertBits@@Base+0x180>
   1611c:	adds	r3, r3, #1
   16120:	adc	r2, r2, #0
   16124:	str	r3, [r4, #32]
   16128:	str	r2, [r4, #36]	; 0x24
   1612c:	bl	155c4 <UnityPrint@@Base>
   16130:	ldr	r3, [r4, #40]	; 0x28
   16134:	mov	r1, r9
   16138:	mov	r0, r5
   1613c:	ldr	r2, [r4, #44]	; 0x2c
   16140:	adds	r3, r3, #1
   16144:	adc	r2, r2, #0
   16148:	str	r3, [r4, #40]	; 0x28
   1614c:	str	r2, [r4, #44]	; 0x2c
   16150:	bl	15dd4 <UnityPrintMask@@Base>
   16154:	ldr	r1, [r4, #48]	; 0x30
   16158:	ldr	r3, [r4, #52]	; 0x34
   1615c:	ldr	r0, [pc, #156]	; 16200 <UnityAssertBits@@Base+0x184>
   16160:	adds	r1, r1, #1
   16164:	adc	r3, r3, #0
   16168:	str	r1, [r4, #48]	; 0x30
   1616c:	str	r3, [r4, #52]	; 0x34
   16170:	bl	155c4 <UnityPrint@@Base>
   16174:	ldr	r1, [r4, #56]	; 0x38
   16178:	mov	r0, r5
   1617c:	ldr	r3, [r4, #60]	; 0x3c
   16180:	adds	r1, r1, #1
   16184:	adc	r3, r3, #0
   16188:	str	r1, [r4, #56]	; 0x38
   1618c:	mov	r1, r8
   16190:	str	r3, [r4, #60]	; 0x3c
   16194:	bl	15dd4 <UnityPrintMask@@Base>
   16198:	ldrd	r2, [r4, #64]	; 0x40
   1619c:	mov	r0, r7
   161a0:	adds	r2, r2, #1
   161a4:	adc	r3, r3, #0
   161a8:	strd	r2, [r4, #64]	; 0x40
   161ac:	bl	15950 <UnityPrint@@Base+0x38c>
   161b0:	ldr	r3, [r4, #72]	; 0x48
   161b4:	mov	r1, #1
   161b8:	add	r0, r6, #40	; 0x28
   161bc:	ldr	r2, [r4, #76]	; 0x4c
   161c0:	str	r1, [r6, #32]
   161c4:	adds	r3, r3, #1
   161c8:	adc	r2, r2, #0
   161cc:	str	r3, [r4, #72]	; 0x48
   161d0:	str	r2, [r4, #76]	; 0x4c
   161d4:	bl	11f9c <longjmp@plt>
   161d8:	ldr	r3, [r4]
   161dc:	ldr	r2, [r4, #4]
   161e0:	adds	r3, r3, #1
   161e4:	adc	r2, r2, #0
   161e8:	str	r3, [r4]
   161ec:	str	r2, [r4, #4]
   161f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   161f4:	strdeq	r0, [r3], -r8
   161f8:	andeq	pc, r2, r8, ror r8	; <UNPREDICTABLE>
   161fc:	andeq	ip, r1, ip, ror #21
   16200:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>

00016204 <UnityAssertEqualNumber@@Base>:
   16204:	push	{r4, r5, r6, r7, r8, lr}
   16208:	ldr	r5, [pc, #364]	; 1637c <UnityAssertEqualNumber@@Base+0x178>
   1620c:	ldr	r4, [pc, #364]	; 16380 <UnityAssertEqualNumber@@Base+0x17c>
   16210:	ldr	ip, [r5, #32]
   16214:	cmp	ip, #0
   16218:	bne	16360 <UnityAssertEqualNumber@@Base+0x15c>
   1621c:	ldr	ip, [r5, #36]	; 0x24
   16220:	cmp	ip, #0
   16224:	beq	16244 <UnityAssertEqualNumber@@Base+0x40>
   16228:	ldr	r3, [r4, #8]
   1622c:	ldr	r2, [r4, #12]
   16230:	adds	r3, r3, #1
   16234:	adc	r2, r2, #0
   16238:	str	r3, [r4, #8]
   1623c:	str	r2, [r4, #12]
   16240:	pop	{r4, r5, r6, r7, r8, pc}
   16244:	ldr	ip, [r4, #16]
   16248:	ldr	lr, [r4, #20]
   1624c:	adds	ip, ip, #1
   16250:	adc	lr, lr, #0
   16254:	cmp	r0, r1
   16258:	str	ip, [r4, #16]
   1625c:	str	lr, [r4, #20]
   16260:	popeq	{r4, r5, r6, r7, r8, pc}
   16264:	mov	r6, r2
   16268:	ldr	r2, [r4, #24]
   1626c:	mov	r7, r1
   16270:	mov	r8, r0
   16274:	mov	r0, r3
   16278:	ldr	r1, [r4, #28]
   1627c:	adds	r2, r2, #1
   16280:	adc	r1, r1, #0
   16284:	str	r2, [r4, #24]
   16288:	str	r1, [r4, #28]
   1628c:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16290:	ldr	r3, [r4, #32]
   16294:	ldr	r2, [r4, #36]	; 0x24
   16298:	ldr	r0, [pc, #228]	; 16384 <UnityAssertEqualNumber@@Base+0x180>
   1629c:	adds	r3, r3, #1
   162a0:	adc	r2, r2, #0
   162a4:	str	r3, [r4, #32]
   162a8:	str	r2, [r4, #36]	; 0x24
   162ac:	bl	155c4 <UnityPrint@@Base>
   162b0:	ldr	r3, [r4, #40]	; 0x28
   162b4:	mov	r0, r8
   162b8:	ldr	r2, [r4, #44]	; 0x2c
   162bc:	ldr	r1, [sp, #24]
   162c0:	adds	r3, r3, #1
   162c4:	adc	r2, r2, #0
   162c8:	str	r3, [r4, #40]	; 0x28
   162cc:	str	r2, [r4, #44]	; 0x2c
   162d0:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   162d4:	ldr	r3, [r4, #48]	; 0x30
   162d8:	ldr	r2, [r4, #52]	; 0x34
   162dc:	ldr	r0, [pc, #164]	; 16388 <UnityAssertEqualNumber@@Base+0x184>
   162e0:	adds	r3, r3, #1
   162e4:	adc	r2, r2, #0
   162e8:	str	r3, [r4, #48]	; 0x30
   162ec:	str	r2, [r4, #52]	; 0x34
   162f0:	bl	155c4 <UnityPrint@@Base>
   162f4:	ldr	r3, [r4, #56]	; 0x38
   162f8:	mov	r0, r7
   162fc:	ldr	r2, [r4, #60]	; 0x3c
   16300:	ldr	r1, [sp, #24]
   16304:	adds	r3, r3, #1
   16308:	adc	r2, r2, #0
   1630c:	str	r3, [r4, #56]	; 0x38
   16310:	str	r2, [r4, #60]	; 0x3c
   16314:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   16318:	ldr	r3, [r4, #64]	; 0x40
   1631c:	mov	r0, r6
   16320:	ldr	r2, [r4, #68]	; 0x44
   16324:	adds	r3, r3, #1
   16328:	adc	r2, r2, #0
   1632c:	str	r3, [r4, #64]	; 0x40
   16330:	str	r2, [r4, #68]	; 0x44
   16334:	bl	15950 <UnityPrint@@Base+0x38c>
   16338:	ldr	r3, [r4, #72]	; 0x48
   1633c:	mov	r1, #1
   16340:	add	r0, r5, #40	; 0x28
   16344:	ldr	r2, [r4, #76]	; 0x4c
   16348:	str	r1, [r5, #32]
   1634c:	adds	r3, r3, #1
   16350:	adc	r2, r2, #0
   16354:	str	r3, [r4, #72]	; 0x48
   16358:	str	r2, [r4, #76]	; 0x4c
   1635c:	bl	11f9c <longjmp@plt>
   16360:	ldr	r3, [r4]
   16364:	ldr	r2, [r4, #4]
   16368:	adds	r3, r3, #1
   1636c:	adc	r2, r2, #0
   16370:	str	r3, [r4]
   16374:	str	r2, [r4, #4]
   16378:	pop	{r4, r5, r6, r7, r8, pc}
   1637c:	strdeq	r0, [r3], -r8
   16380:	andeq	pc, r2, r8, asr #17
   16384:	andeq	ip, r1, ip, ror #21
   16388:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>

0001638c <UnityAssertEqualIntArray@@Base>:
   1638c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16390:	sub	sp, sp, #20
   16394:	ldr	r9, [pc, #1780]	; 16a90 <UnityAssertEqualIntArray@@Base+0x704>
   16398:	ldr	r4, [pc, #1780]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   1639c:	ldr	r8, [sp, #60]	; 0x3c
   163a0:	ldr	lr, [r9, #32]
   163a4:	cmp	lr, #0
   163a8:	beq	163cc <UnityAssertEqualIntArray@@Base+0x40>
   163ac:	ldr	r3, [r4]
   163b0:	ldr	r2, [r4, #4]
   163b4:	adds	r3, r3, #1
   163b8:	adc	r2, r2, #0
   163bc:	str	r3, [r4]
   163c0:	str	r2, [r4, #4]
   163c4:	add	sp, sp, #20
   163c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163cc:	ldr	lr, [r9, #36]	; 0x24
   163d0:	cmp	lr, #0
   163d4:	beq	163f4 <UnityAssertEqualIntArray@@Base+0x68>
   163d8:	ldr	r3, [r4, #8]
   163dc:	ldr	r2, [r4, #12]
   163e0:	adds	r3, r3, #1
   163e4:	adc	r2, r2, #0
   163e8:	str	r3, [r4, #8]
   163ec:	str	r2, [r4, #12]
   163f0:	b	163c4 <UnityAssertEqualIntArray@@Base+0x38>
   163f4:	cmp	r2, #0
   163f8:	mov	r7, r2
   163fc:	str	r3, [sp, #4]
   16400:	bne	1648c <UnityAssertEqualIntArray@@Base+0x100>
   16404:	ldr	r3, [r4, #16]
   16408:	ldr	r2, [r4, #20]
   1640c:	ldr	r0, [sp, #56]	; 0x38
   16410:	adds	r3, r3, #1
   16414:	adc	r2, r2, #0
   16418:	str	r3, [r4, #16]
   1641c:	str	r2, [r4, #20]
   16420:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16424:	ldr	r3, [r4, #32]
   16428:	ldr	r2, [r4, #36]	; 0x24
   1642c:	ldr	r0, [pc, #1636]	; 16a98 <UnityAssertEqualIntArray@@Base+0x70c>
   16430:	adds	r3, r3, #1
   16434:	adc	r2, r2, #0
   16438:	str	r3, [r4, #32]
   1643c:	str	r2, [r4, #36]	; 0x24
   16440:	bl	155c4 <UnityPrint@@Base>
   16444:	ldr	r3, [r4, #40]	; 0x28
   16448:	ldr	r2, [r4, #44]	; 0x2c
   1644c:	ldr	r0, [sp, #4]
   16450:	adds	r3, r3, #1
   16454:	adc	r2, r2, #0
   16458:	str	r3, [r4, #40]	; 0x28
   1645c:	str	r2, [r4, #44]	; 0x2c
   16460:	bl	15950 <UnityPrint@@Base+0x38c>
   16464:	ldr	r3, [r4, #48]	; 0x30
   16468:	mov	r1, #1
   1646c:	add	r0, r9, #40	; 0x28
   16470:	ldr	r2, [r4, #52]	; 0x34
   16474:	str	r1, [r9, #32]
   16478:	adds	r3, r3, #1
   1647c:	adc	r2, r2, #0
   16480:	str	r3, [r4, #48]	; 0x30
   16484:	str	r2, [r4, #52]	; 0x34
   16488:	bl	11f9c <longjmp@plt>
   1648c:	ldr	r2, [r4, #24]
   16490:	mov	r5, r0
   16494:	mov	r6, r1
   16498:	ldr	ip, [r4, #28]
   1649c:	adds	r2, r2, #1
   164a0:	adc	ip, ip, #0
   164a4:	str	r2, [r4, #24]
   164a8:	ldr	r2, [sp, #56]	; 0x38
   164ac:	str	ip, [r4, #28]
   164b0:	bl	15c68 <UnityPrint@@Base+0x6a4>
   164b4:	cmp	r0, #1
   164b8:	bne	164d8 <UnityAssertEqualIntArray@@Base+0x14c>
   164bc:	ldr	r3, [r4, #56]	; 0x38
   164c0:	ldr	r2, [r4, #60]	; 0x3c
   164c4:	adds	r3, r3, #1
   164c8:	adc	r2, r2, #0
   164cc:	str	r3, [r4, #56]	; 0x38
   164d0:	str	r2, [r4, #60]	; 0x3c
   164d4:	b	163c4 <UnityAssertEqualIntArray@@Base+0x38>
   164d8:	bic	r3, r8, #128	; 0x80
   164dc:	cmp	r3, #33	; 0x21
   164e0:	beq	16568 <UnityAssertEqualIntArray@@Base+0x1dc>
   164e4:	bhi	16550 <UnityAssertEqualIntArray@@Base+0x1c4>
   164e8:	cmp	r3, #17
   164ec:	beq	16568 <UnityAssertEqualIntArray@@Base+0x1dc>
   164f0:	cmp	r3, #18
   164f4:	bne	165c0 <UnityAssertEqualIntArray@@Base+0x234>
   164f8:	ldr	r3, [r4, #160]	; 0xa0
   164fc:	mov	r1, r6
   16500:	mov	r0, #0
   16504:	mov	r6, r7
   16508:	ldr	r2, [r4, #164]	; 0xa4
   1650c:	cmp	r6, #0
   16510:	mov	sl, r1
   16514:	str	r3, [sp, #8]
   16518:	mov	r9, r5
   1651c:	str	r2, [sp, #12]
   16520:	bne	1679c <UnityAssertEqualIntArray@@Base+0x410>
   16524:	ldr	r1, [pc, #1384]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   16528:	cmp	r0, #0
   1652c:	strne	r3, [r1, #160]	; 0xa0
   16530:	ldr	r3, [r1, #232]	; 0xe8
   16534:	strne	r2, [r1, #164]	; 0xa4
   16538:	ldr	r2, [r1, #236]	; 0xec
   1653c:	adds	r3, r3, #1
   16540:	adc	r2, r2, #0
   16544:	str	r3, [r1, #232]	; 0xe8
   16548:	str	r2, [r1, #236]	; 0xec
   1654c:	b	163c4 <UnityAssertEqualIntArray@@Base+0x38>
   16550:	cmp	r3, #65	; 0x41
   16554:	beq	16568 <UnityAssertEqualIntArray@@Base+0x1dc>
   16558:	cmp	r3, #66	; 0x42
   1655c:	beq	164f8 <UnityAssertEqualIntArray@@Base+0x16c>
   16560:	cmp	r3, #34	; 0x22
   16564:	b	164f4 <UnityAssertEqualIntArray@@Base+0x168>
   16568:	ldr	r3, [r4, #72]	; 0x48
   1656c:	mov	r1, r6
   16570:	mov	r0, #0
   16574:	mov	r6, r7
   16578:	ldr	r2, [r4, #76]	; 0x4c
   1657c:	cmp	r6, #0
   16580:	mov	sl, r1
   16584:	str	r3, [sp, #8]
   16588:	mov	r9, r5
   1658c:	str	r2, [sp, #12]
   16590:	bne	1661c <UnityAssertEqualIntArray@@Base+0x290>
   16594:	ldr	r1, [pc, #1272]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   16598:	cmp	r0, #0
   1659c:	strne	r3, [r1, #72]	; 0x48
   165a0:	ldr	r3, [r1, #144]	; 0x90
   165a4:	strne	r2, [r1, #76]	; 0x4c
   165a8:	ldr	r2, [r1, #148]	; 0x94
   165ac:	adds	r3, r3, #1
   165b0:	adc	r2, r2, #0
   165b4:	str	r3, [r1, #144]	; 0x90
   165b8:	str	r2, [r1, #148]	; 0x94
   165bc:	b	163c4 <UnityAssertEqualIntArray@@Base+0x38>
   165c0:	ldr	r3, [r4, #248]	; 0xf8
   165c4:	mov	r1, r6
   165c8:	mov	r0, #0
   165cc:	mov	r6, r7
   165d0:	ldr	r2, [r4, #252]	; 0xfc
   165d4:	cmp	r6, #0
   165d8:	mov	sl, r1
   165dc:	str	r3, [sp, #8]
   165e0:	mov	r9, r5
   165e4:	str	r2, [sp, #12]
   165e8:	bne	1690c <UnityAssertEqualIntArray@@Base+0x580>
   165ec:	cmp	r0, #0
   165f0:	ldrne	r1, [pc, #1180]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   165f4:	strne	r2, [r1, #252]	; 0xfc
   165f8:	ldr	r2, [pc, #1180]	; 16a9c <UnityAssertEqualIntArray@@Base+0x710>
   165fc:	strne	r3, [r1, #248]	; 0xf8
   16600:	ldr	r3, [r2]
   16604:	ldr	r1, [r2, #4]
   16608:	adds	r3, r3, #1
   1660c:	adc	r1, r1, #0
   16610:	str	r3, [r2]
   16614:	str	r1, [r2, #4]
   16618:	b	163c4 <UnityAssertEqualIntArray@@Base+0x38>
   1661c:	mov	r5, r9
   16620:	mov	r1, sl
   16624:	ldrsb	fp, [r5], #1
   16628:	adds	r3, r3, #1
   1662c:	sub	ip, r6, #1
   16630:	adc	r2, r2, #0
   16634:	ldrsb	lr, [r1], #1
   16638:	cmp	fp, lr
   1663c:	beq	16790 <UnityAssertEqualIntArray@@Base+0x404>
   16640:	cmp	r0, #0
   16644:	beq	1665c <UnityAssertEqualIntArray@@Base+0x2d0>
   16648:	ldr	r3, [pc, #1092]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   1664c:	ldr	r2, [sp, #8]
   16650:	str	r2, [r3, #72]	; 0x48
   16654:	ldr	r2, [sp, #12]
   16658:	str	r2, [r3, #76]	; 0x4c
   1665c:	ldr	r3, [r4, #64]	; 0x40
   16660:	ldr	r2, [r4, #68]	; 0x44
   16664:	ldr	r0, [sp, #56]	; 0x38
   16668:	adds	r3, r3, #1
   1666c:	adc	r2, r2, #0
   16670:	str	r3, [r4, #64]	; 0x40
   16674:	str	r2, [r4, #68]	; 0x44
   16678:	bl	15bd0 <UnityPrint@@Base+0x60c>
   1667c:	ldr	r3, [r4, #80]	; 0x50
   16680:	ldr	r2, [r4, #84]	; 0x54
   16684:	ldr	r0, [pc, #1044]	; 16aa0 <UnityAssertEqualIntArray@@Base+0x714>
   16688:	adds	r3, r3, #1
   1668c:	adc	r2, r2, #0
   16690:	str	r3, [r4, #80]	; 0x50
   16694:	str	r2, [r4, #84]	; 0x54
   16698:	bl	155c4 <UnityPrint@@Base>
   1669c:	ldr	r3, [r4, #88]	; 0x58
   166a0:	sub	r0, r7, r6
   166a4:	ldr	r2, [r4, #92]	; 0x5c
   166a8:	adds	r3, r3, #1
   166ac:	adc	r2, r2, #0
   166b0:	str	r3, [r4, #88]	; 0x58
   166b4:	str	r2, [r4, #92]	; 0x5c
   166b8:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   166bc:	ldr	r3, [r4, #96]	; 0x60
   166c0:	ldr	r2, [r4, #100]	; 0x64
   166c4:	ldr	r0, [pc, #984]	; 16aa4 <UnityAssertEqualIntArray@@Base+0x718>
   166c8:	adds	r3, r3, #1
   166cc:	adc	r2, r2, #0
   166d0:	str	r3, [r4, #96]	; 0x60
   166d4:	str	r2, [r4, #100]	; 0x64
   166d8:	bl	155c4 <UnityPrint@@Base>
   166dc:	ldr	r3, [r4, #104]	; 0x68
   166e0:	mov	r1, r8
   166e4:	ldr	r2, [r4, #108]	; 0x6c
   166e8:	ldrsb	r0, [r9]
   166ec:	adds	r3, r3, #1
   166f0:	adc	r2, r2, #0
   166f4:	str	r3, [r4, #104]	; 0x68
   166f8:	str	r2, [r4, #108]	; 0x6c
   166fc:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   16700:	ldr	r3, [r4, #112]	; 0x70
   16704:	ldr	r2, [r4, #116]	; 0x74
   16708:	ldr	r0, [pc, #920]	; 16aa8 <UnityAssertEqualIntArray@@Base+0x71c>
   1670c:	adds	r3, r3, #1
   16710:	adc	r2, r2, #0
   16714:	str	r3, [r4, #112]	; 0x70
   16718:	str	r2, [r4, #116]	; 0x74
   1671c:	bl	155c4 <UnityPrint@@Base>
   16720:	ldr	r3, [r4, #120]	; 0x78
   16724:	mov	r1, r8
   16728:	ldr	r2, [r4, #124]	; 0x7c
   1672c:	ldrsb	r0, [sl]
   16730:	adds	r3, r3, #1
   16734:	adc	r2, r2, #0
   16738:	str	r3, [r4, #120]	; 0x78
   1673c:	str	r2, [r4, #124]	; 0x7c
   16740:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   16744:	ldr	r3, [r4, #128]	; 0x80
   16748:	ldr	r2, [r4, #132]	; 0x84
   1674c:	ldr	r0, [sp, #4]
   16750:	adds	r3, r3, #1
   16754:	adc	r2, r2, #0
   16758:	str	r3, [r4, #128]	; 0x80
   1675c:	str	r2, [r4, #132]	; 0x84
   16760:	bl	15950 <UnityPrint@@Base+0x38c>
   16764:	ldr	r3, [r4, #136]	; 0x88
   16768:	ldr	r2, [r4, #140]	; 0x8c
   1676c:	adds	r3, r3, #1
   16770:	adc	r2, r2, #0
   16774:	str	r3, [r4, #136]	; 0x88
   16778:	str	r2, [r4, #140]	; 0x8c
   1677c:	ldr	r3, [pc, #780]	; 16a90 <UnityAssertEqualIntArray@@Base+0x704>
   16780:	mov	r1, #1
   16784:	add	r0, r3, #40	; 0x28
   16788:	str	r1, [r3, #32]
   1678c:	b	16488 <UnityAssertEqualIntArray@@Base+0xfc>
   16790:	mov	r6, ip
   16794:	mov	r0, #1
   16798:	b	1657c <UnityAssertEqualIntArray@@Base+0x1f0>
   1679c:	mov	r5, r9
   167a0:	mov	r1, sl
   167a4:	ldrsh	fp, [r5], #2
   167a8:	adds	r3, r3, #1
   167ac:	sub	ip, r6, #1
   167b0:	adc	r2, r2, #0
   167b4:	ldrsh	lr, [r1], #2
   167b8:	cmp	fp, lr
   167bc:	beq	16900 <UnityAssertEqualIntArray@@Base+0x574>
   167c0:	cmp	r0, #0
   167c4:	beq	167dc <UnityAssertEqualIntArray@@Base+0x450>
   167c8:	ldr	r3, [pc, #708]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   167cc:	ldr	r2, [sp, #8]
   167d0:	str	r2, [r3, #160]	; 0xa0
   167d4:	ldr	r2, [sp, #12]
   167d8:	str	r2, [r3, #164]	; 0xa4
   167dc:	ldr	r3, [r4, #152]	; 0x98
   167e0:	ldr	r2, [r4, #156]	; 0x9c
   167e4:	ldr	r0, [sp, #56]	; 0x38
   167e8:	adds	r3, r3, #1
   167ec:	adc	r2, r2, #0
   167f0:	str	r3, [r4, #152]	; 0x98
   167f4:	str	r2, [r4, #156]	; 0x9c
   167f8:	bl	15bd0 <UnityPrint@@Base+0x60c>
   167fc:	ldr	r3, [r4, #168]	; 0xa8
   16800:	ldr	r2, [r4, #172]	; 0xac
   16804:	ldr	r0, [pc, #660]	; 16aa0 <UnityAssertEqualIntArray@@Base+0x714>
   16808:	adds	r3, r3, #1
   1680c:	adc	r2, r2, #0
   16810:	str	r3, [r4, #168]	; 0xa8
   16814:	str	r2, [r4, #172]	; 0xac
   16818:	bl	155c4 <UnityPrint@@Base>
   1681c:	ldr	r3, [r4, #176]	; 0xb0
   16820:	sub	r0, r7, r6
   16824:	ldr	r2, [r4, #180]	; 0xb4
   16828:	adds	r3, r3, #1
   1682c:	adc	r2, r2, #0
   16830:	str	r3, [r4, #176]	; 0xb0
   16834:	str	r2, [r4, #180]	; 0xb4
   16838:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   1683c:	ldr	r3, [r4, #184]	; 0xb8
   16840:	ldr	r2, [r4, #188]	; 0xbc
   16844:	ldr	r0, [pc, #600]	; 16aa4 <UnityAssertEqualIntArray@@Base+0x718>
   16848:	adds	r3, r3, #1
   1684c:	adc	r2, r2, #0
   16850:	str	r3, [r4, #184]	; 0xb8
   16854:	str	r2, [r4, #188]	; 0xbc
   16858:	bl	155c4 <UnityPrint@@Base>
   1685c:	ldr	r3, [r4, #192]	; 0xc0
   16860:	mov	r1, r8
   16864:	ldr	r2, [r4, #196]	; 0xc4
   16868:	ldrsh	r0, [r9]
   1686c:	adds	r3, r3, #1
   16870:	adc	r2, r2, #0
   16874:	str	r3, [r4, #192]	; 0xc0
   16878:	str	r2, [r4, #196]	; 0xc4
   1687c:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   16880:	ldr	r3, [r4, #200]	; 0xc8
   16884:	ldr	r2, [r4, #204]	; 0xcc
   16888:	ldr	r0, [pc, #536]	; 16aa8 <UnityAssertEqualIntArray@@Base+0x71c>
   1688c:	adds	r3, r3, #1
   16890:	adc	r2, r2, #0
   16894:	str	r3, [r4, #200]	; 0xc8
   16898:	str	r2, [r4, #204]	; 0xcc
   1689c:	bl	155c4 <UnityPrint@@Base>
   168a0:	ldr	r3, [r4, #208]	; 0xd0
   168a4:	mov	r1, r8
   168a8:	ldr	r2, [r4, #212]	; 0xd4
   168ac:	ldrsh	r0, [sl]
   168b0:	adds	r3, r3, #1
   168b4:	adc	r2, r2, #0
   168b8:	str	r3, [r4, #208]	; 0xd0
   168bc:	str	r2, [r4, #212]	; 0xd4
   168c0:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   168c4:	ldr	r3, [r4, #216]	; 0xd8
   168c8:	ldr	r2, [r4, #220]	; 0xdc
   168cc:	ldr	r0, [sp, #4]
   168d0:	adds	r3, r3, #1
   168d4:	adc	r2, r2, #0
   168d8:	str	r3, [r4, #216]	; 0xd8
   168dc:	str	r2, [r4, #220]	; 0xdc
   168e0:	bl	15950 <UnityPrint@@Base+0x38c>
   168e4:	ldr	r3, [r4, #224]	; 0xe0
   168e8:	ldr	r2, [r4, #228]	; 0xe4
   168ec:	adds	r3, r3, #1
   168f0:	adc	r2, r2, #0
   168f4:	str	r3, [r4, #224]	; 0xe0
   168f8:	str	r2, [r4, #228]	; 0xe4
   168fc:	b	1677c <UnityAssertEqualIntArray@@Base+0x3f0>
   16900:	mov	r6, ip
   16904:	mov	r0, #1
   16908:	b	1650c <UnityAssertEqualIntArray@@Base+0x180>
   1690c:	mov	r5, r9
   16910:	mov	r1, sl
   16914:	ldr	fp, [r5], #4
   16918:	adds	r3, r3, #1
   1691c:	sub	ip, r6, #1
   16920:	adc	r2, r2, #0
   16924:	ldr	lr, [r1], #4
   16928:	cmp	fp, lr
   1692c:	beq	16a84 <UnityAssertEqualIntArray@@Base+0x6f8>
   16930:	cmp	r0, #0
   16934:	beq	1694c <UnityAssertEqualIntArray@@Base+0x5c0>
   16938:	ldr	r3, [pc, #340]	; 16a94 <UnityAssertEqualIntArray@@Base+0x708>
   1693c:	ldr	r2, [sp, #8]
   16940:	str	r2, [r3, #248]	; 0xf8
   16944:	ldr	r2, [sp, #12]
   16948:	str	r2, [r3, #252]	; 0xfc
   1694c:	ldr	r3, [r4, #240]	; 0xf0
   16950:	ldr	r2, [r4, #244]	; 0xf4
   16954:	ldr	r0, [sp, #56]	; 0x38
   16958:	adds	r3, r3, #1
   1695c:	adc	r2, r2, #0
   16960:	str	r3, [r4, #240]	; 0xf0
   16964:	str	r2, [r4, #244]	; 0xf4
   16968:	ldr	r4, [pc, #316]	; 16aac <UnityAssertEqualIntArray@@Base+0x720>
   1696c:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16970:	ldr	r3, [r4]
   16974:	mov	r5, r4
   16978:	ldr	r0, [r4, #4]
   1697c:	adds	r1, r3, #1
   16980:	mov	r2, r1
   16984:	adc	r0, r0, #0
   16988:	mov	r3, r0
   1698c:	ldr	r0, [pc, #268]	; 16aa0 <UnityAssertEqualIntArray@@Base+0x714>
   16990:	strd	r2, [r5], #16
   16994:	bl	155c4 <UnityPrint@@Base>
   16998:	ldr	r3, [r5, #-8]
   1699c:	sub	r0, r7, r6
   169a0:	ldr	r2, [r5, #-4]
   169a4:	adds	r3, r3, #1
   169a8:	adc	r2, r2, #0
   169ac:	str	r3, [r5, #-8]
   169b0:	str	r2, [r5, #-4]
   169b4:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   169b8:	ldr	r3, [r5]
   169bc:	ldr	r2, [r5, #4]
   169c0:	ldr	r0, [pc, #220]	; 16aa4 <UnityAssertEqualIntArray@@Base+0x718>
   169c4:	adds	r3, r3, #1
   169c8:	adc	r2, r2, #0
   169cc:	str	r3, [r5]
   169d0:	str	r2, [r5, #4]
   169d4:	add	r5, r4, #48	; 0x30
   169d8:	add	r4, r4, #64	; 0x40
   169dc:	bl	155c4 <UnityPrint@@Base>
   169e0:	ldr	r3, [r4, #-40]	; 0xffffffd8
   169e4:	mov	r1, r8
   169e8:	ldr	r2, [r4, #-36]	; 0xffffffdc
   169ec:	ldr	r0, [r9]
   169f0:	adds	r3, r3, #1
   169f4:	adc	r2, r2, #0
   169f8:	str	r3, [r4, #-40]	; 0xffffffd8
   169fc:	str	r2, [r4, #-36]	; 0xffffffdc
   16a00:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   16a04:	ldr	r3, [r4, #-32]	; 0xffffffe0
   16a08:	ldr	r2, [r4, #-28]	; 0xffffffe4
   16a0c:	ldr	r0, [pc, #148]	; 16aa8 <UnityAssertEqualIntArray@@Base+0x71c>
   16a10:	adds	r3, r3, #1
   16a14:	adc	r2, r2, #0
   16a18:	str	r3, [r4, #-32]	; 0xffffffe0
   16a1c:	str	r2, [r4, #-28]	; 0xffffffe4
   16a20:	bl	155c4 <UnityPrint@@Base>
   16a24:	ldr	r3, [r5, #-8]
   16a28:	mov	r1, r8
   16a2c:	ldr	r2, [r5, #-4]
   16a30:	ldr	r0, [sl]
   16a34:	adds	r3, r3, #1
   16a38:	adc	r2, r2, #0
   16a3c:	str	r3, [r5, #-8]
   16a40:	str	r2, [r5, #-4]
   16a44:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   16a48:	ldr	r3, [r5]
   16a4c:	ldr	r2, [r5, #4]
   16a50:	ldr	r0, [sp, #4]
   16a54:	adds	r3, r3, #1
   16a58:	adc	r2, r2, #0
   16a5c:	str	r3, [r5]
   16a60:	str	r2, [r5, #4]
   16a64:	bl	15950 <UnityPrint@@Base+0x38c>
   16a68:	ldr	r3, [r4, #-8]
   16a6c:	ldr	r2, [r4, #-4]
   16a70:	adds	r3, r3, #1
   16a74:	adc	r2, r2, #0
   16a78:	str	r3, [r4, #-8]
   16a7c:	str	r2, [r4, #-4]
   16a80:	b	1677c <UnityAssertEqualIntArray@@Base+0x3f0>
   16a84:	mov	r6, ip
   16a88:	mov	r0, #1
   16a8c:	b	165d4 <UnityAssertEqualIntArray@@Base+0x248>
   16a90:	strdeq	r0, [r3], -r8
   16a94:	andeq	pc, r2, r8, lsl r9	; <UNPREDICTABLE>
   16a98:	andeq	ip, r1, sp, asr fp
   16a9c:	andeq	pc, r2, r8, asr sl	; <UNPREDICTABLE>
   16aa0:	muleq	r1, r4, fp
   16aa4:	andeq	ip, r1, ip, ror #21
   16aa8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   16aac:	andeq	pc, r2, r8, lsl sl	; <UNPREDICTABLE>

00016ab0 <UnityAssertEqualFloatArray@@Base>:
   16ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ab4:	sub	sp, sp, #20
   16ab8:	ldr	sl, [pc, #920]	; 16e58 <UnityAssertEqualFloatArray@@Base+0x3a8>
   16abc:	ldr	r4, [pc, #920]	; 16e5c <UnityAssertEqualFloatArray@@Base+0x3ac>
   16ac0:	ldr	ip, [sl, #32]
   16ac4:	cmp	ip, #0
   16ac8:	beq	16aec <UnityAssertEqualFloatArray@@Base+0x3c>
   16acc:	ldr	r3, [r4, #-8]
   16ad0:	ldr	r2, [r4, #-4]
   16ad4:	adds	r3, r3, #1
   16ad8:	adc	r2, r2, #0
   16adc:	str	r3, [r4, #-8]
   16ae0:	str	r2, [r4, #-4]
   16ae4:	add	sp, sp, #20
   16ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16aec:	ldr	r5, [sl, #36]	; 0x24
   16af0:	cmp	r5, #0
   16af4:	beq	16b14 <UnityAssertEqualFloatArray@@Base+0x64>
   16af8:	ldr	r3, [r4]
   16afc:	ldr	r2, [r4, #4]
   16b00:	adds	r3, r3, #1
   16b04:	adc	r2, r2, #0
   16b08:	str	r3, [r4]
   16b0c:	str	r2, [r4, #4]
   16b10:	b	16ae4 <UnityAssertEqualFloatArray@@Base+0x34>
   16b14:	mov	r6, r2
   16b18:	ldr	r2, [r4, #8]
   16b1c:	mov	r7, r3
   16b20:	ldr	ip, [r4, #12]
   16b24:	adds	r2, r2, #1
   16b28:	adc	ip, ip, #0
   16b2c:	cmp	r6, #0
   16b30:	str	r2, [r4, #8]
   16b34:	str	ip, [r4, #12]
   16b38:	bne	16bc4 <UnityAssertEqualFloatArray@@Base+0x114>
   16b3c:	ldr	r3, [r4, #16]
   16b40:	ldr	r2, [r4, #20]
   16b44:	ldr	r0, [sp, #56]	; 0x38
   16b48:	adds	r3, r3, #1
   16b4c:	adc	r2, r2, #0
   16b50:	str	r3, [r4, #16]
   16b54:	str	r2, [r4, #20]
   16b58:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16b5c:	ldr	r3, [r4, #24]
   16b60:	ldr	r2, [r4, #28]
   16b64:	ldr	r0, [pc, #756]	; 16e60 <UnityAssertEqualFloatArray@@Base+0x3b0>
   16b68:	adds	r3, r3, #1
   16b6c:	adc	r2, r2, #0
   16b70:	str	r3, [r4, #24]
   16b74:	str	r2, [r4, #28]
   16b78:	bl	155c4 <UnityPrint@@Base>
   16b7c:	ldr	r3, [r4, #32]
   16b80:	mov	r0, r7
   16b84:	ldr	r2, [r4, #36]	; 0x24
   16b88:	adds	r3, r3, #1
   16b8c:	adc	r2, r2, #0
   16b90:	str	r3, [r4, #32]
   16b94:	str	r2, [r4, #36]	; 0x24
   16b98:	bl	15950 <UnityPrint@@Base+0x38c>
   16b9c:	ldr	r3, [r4, #40]	; 0x28
   16ba0:	mov	r1, #1
   16ba4:	add	r0, sl, #40	; 0x28
   16ba8:	ldr	r2, [r4, #44]	; 0x2c
   16bac:	str	r1, [sl, #32]
   16bb0:	adds	r3, r3, #1
   16bb4:	adc	r2, r2, #0
   16bb8:	str	r3, [r4, #40]	; 0x28
   16bbc:	str	r2, [r4, #44]	; 0x2c
   16bc0:	bl	11f9c <longjmp@plt>
   16bc4:	ldr	r2, [sp, #56]	; 0x38
   16bc8:	mov	r9, r0
   16bcc:	mov	r8, r1
   16bd0:	bl	15c68 <UnityPrint@@Base+0x6a4>
   16bd4:	ldr	r3, [r4, #48]	; 0x30
   16bd8:	ldr	r2, [r4, #52]	; 0x34
   16bdc:	adds	r3, r3, #1
   16be0:	adc	r2, r2, #0
   16be4:	cmp	r0, #1
   16be8:	str	r3, [r4, #48]	; 0x30
   16bec:	str	r2, [r4, #52]	; 0x34
   16bf0:	beq	16c68 <UnityAssertEqualFloatArray@@Base+0x1b8>
   16bf4:	add	r3, r4, #64	; 0x40
   16bf8:	vldr	s13, [pc, #592]	; 16e50 <UnityAssertEqualFloatArray@@Base+0x3a0>
   16bfc:	mov	r1, r5
   16c00:	ldm	r3, {r3, sl, lr}
   16c04:	str	r9, [sp]
   16c08:	mov	r9, r5
   16c0c:	vldr	s12, [pc, #576]	; 16e54 <UnityAssertEqualFloatArray@@Base+0x3a4>
   16c10:	str	r8, [sp, #4]
   16c14:	mov	r8, r6
   16c18:	ldr	r0, [r4, #76]	; 0x4c
   16c1c:	ldr	ip, [r4, #96]	; 0x60
   16c20:	ldr	r2, [r4, #100]	; 0x64
   16c24:	cmp	r8, #0
   16c28:	str	ip, [sp, #8]
   16c2c:	str	r2, [sp, #12]
   16c30:	bne	16c84 <UnityAssertEqualFloatArray@@Base+0x1d4>
   16c34:	cmp	r9, #0
   16c38:	ldrne	r4, [pc, #540]	; 16e5c <UnityAssertEqualFloatArray@@Base+0x3ac>
   16c3c:	strne	r3, [r4, #64]	; 0x40
   16c40:	strne	sl, [r4, #68]	; 0x44
   16c44:	cmp	r5, #0
   16c48:	ldrne	r3, [pc, #524]	; 16e5c <UnityAssertEqualFloatArray@@Base+0x3ac>
   16c4c:	strne	lr, [r3, #72]	; 0x48
   16c50:	strne	r0, [r3, #76]	; 0x4c
   16c54:	cmp	r1, #0
   16c58:	ldrne	r3, [pc, #508]	; 16e5c <UnityAssertEqualFloatArray@@Base+0x3ac>
   16c5c:	strne	ip, [r3, #96]	; 0x60
   16c60:	strne	r2, [r3, #100]	; 0x64
   16c64:	b	16ae4 <UnityAssertEqualFloatArray@@Base+0x34>
   16c68:	ldr	r3, [r4, #56]	; 0x38
   16c6c:	ldr	r2, [r4, #60]	; 0x3c
   16c70:	adds	r3, r3, #1
   16c74:	adc	r2, r2, #0
   16c78:	str	r3, [r4, #56]	; 0x38
   16c7c:	str	r2, [r4, #60]	; 0x3c
   16c80:	b	16ae4 <UnityAssertEqualFloatArray@@Base+0x34>
   16c84:	ldr	fp, [sp]
   16c88:	vldmia	fp!, {s15}
   16c8c:	str	fp, [sp]
   16c90:	ldr	fp, [sp, #4]
   16c94:	vldmia	fp!, {s14}
   16c98:	vsub.f32	s14, s15, s14
   16c9c:	str	fp, [sp, #4]
   16ca0:	vcmpe.f32	s14, #0.0
   16ca4:	vmrs	APSR_nzcv, fpscr
   16ca8:	bpl	16cbc <UnityAssertEqualFloatArray@@Base+0x20c>
   16cac:	vsub.f32	s14, s13, s14
   16cb0:	adds	r3, r3, #1
   16cb4:	mov	r9, #1
   16cb8:	adc	sl, sl, #0
   16cbc:	vmul.f32	s15, s15, s12
   16cc0:	vcmpe.f32	s15, #0.0
   16cc4:	vmrs	APSR_nzcv, fpscr
   16cc8:	bpl	16cdc <UnityAssertEqualFloatArray@@Base+0x22c>
   16ccc:	vsub.f32	s15, s13, s15
   16cd0:	adds	lr, lr, #1
   16cd4:	mov	r5, #1
   16cd8:	adc	r0, r0, #0
   16cdc:	vmul.f32	s11, s14, s13
   16ce0:	vcmp.f32	s11, #0.0
   16ce4:	vmrs	APSR_nzcv, fpscr
   16ce8:	beq	16de0 <UnityAssertEqualFloatArray@@Base+0x330>
   16cec:	cmp	r9, #0
   16cf0:	ldr	r9, [pc, #356]	; 16e5c <UnityAssertEqualFloatArray@@Base+0x3ac>
   16cf4:	strne	r3, [r9, #64]	; 0x40
   16cf8:	strne	sl, [r9, #68]	; 0x44
   16cfc:	cmp	r5, #0
   16d00:	ldr	r3, [r9, #80]	; 0x50
   16d04:	strne	lr, [r9, #72]	; 0x48
   16d08:	strne	r0, [r9, #76]	; 0x4c
   16d0c:	cmp	r1, #0
   16d10:	strne	r2, [r9, #100]	; 0x64
   16d14:	ldr	r2, [r9, #84]	; 0x54
   16d18:	strne	ip, [r9, #96]	; 0x60
   16d1c:	adds	r3, r3, #1
   16d20:	str	r3, [r9, #80]	; 0x50
   16d24:	adc	r2, r2, #0
   16d28:	str	r2, [r9, #84]	; 0x54
   16d2c:	ldr	r0, [sp, #56]	; 0x38
   16d30:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16d34:	ldr	r3, [r4, #104]	; 0x68
   16d38:	ldr	r2, [r4, #108]	; 0x6c
   16d3c:	ldr	r0, [pc, #288]	; 16e64 <UnityAssertEqualFloatArray@@Base+0x3b4>
   16d40:	adds	r3, r3, #1
   16d44:	adc	r2, r2, #0
   16d48:	str	r3, [r4, #104]	; 0x68
   16d4c:	str	r2, [r4, #108]	; 0x6c
   16d50:	bl	155c4 <UnityPrint@@Base>
   16d54:	ldr	r3, [r4, #112]	; 0x70
   16d58:	sub	r0, r6, r8
   16d5c:	ldr	r2, [r4, #116]	; 0x74
   16d60:	adds	r3, r3, #1
   16d64:	adc	r2, r2, #0
   16d68:	str	r3, [r4, #112]	; 0x70
   16d6c:	str	r2, [r4, #116]	; 0x74
   16d70:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   16d74:	ldr	r3, [r4, #120]	; 0x78
   16d78:	ldr	r2, [r4, #124]	; 0x7c
   16d7c:	ldr	r0, [pc, #228]	; 16e68 <UnityAssertEqualFloatArray@@Base+0x3b8>
   16d80:	adds	r3, r3, #1
   16d84:	adc	r2, r2, #0
   16d88:	str	r3, [r4, #120]	; 0x78
   16d8c:	str	r2, [r4, #124]	; 0x7c
   16d90:	bl	155c4 <UnityPrint@@Base>
   16d94:	ldr	r3, [r4, #128]	; 0x80
   16d98:	mov	r0, r7
   16d9c:	ldr	r2, [r4, #132]	; 0x84
   16da0:	adds	r3, r3, #1
   16da4:	adc	r2, r2, #0
   16da8:	str	r3, [r4, #128]	; 0x80
   16dac:	str	r2, [r4, #132]	; 0x84
   16db0:	bl	15950 <UnityPrint@@Base+0x38c>
   16db4:	ldr	r3, [r4, #136]	; 0x88
   16db8:	mov	r1, #1
   16dbc:	ldr	r2, [r4, #140]	; 0x8c
   16dc0:	ldr	r0, [pc, #144]	; 16e58 <UnityAssertEqualFloatArray@@Base+0x3a8>
   16dc4:	adds	r3, r3, #1
   16dc8:	adc	r2, r2, #0
   16dcc:	str	r3, [r4, #136]	; 0x88
   16dd0:	add	r0, r0, #40	; 0x28
   16dd4:	str	r1, [r0, #-8]
   16dd8:	str	r2, [r4, #140]	; 0x8c
   16ddc:	b	16bc0 <UnityAssertEqualFloatArray@@Base+0x110>
   16de0:	vcmpe.f32	s14, s15
   16de4:	adds	ip, ip, #1
   16de8:	sub	fp, r8, #1
   16dec:	adc	r2, r2, #0
   16df0:	vmrs	APSR_nzcv, fpscr
   16df4:	ble	16e44 <UnityAssertEqualFloatArray@@Base+0x394>
   16df8:	ldr	r2, [pc, #92]	; 16e5c <UnityAssertEqualFloatArray@@Base+0x3ac>
   16dfc:	cmp	r9, #0
   16e00:	strne	r3, [r2, #64]	; 0x40
   16e04:	strne	sl, [r2, #68]	; 0x44
   16e08:	cmp	r5, #0
   16e0c:	strne	lr, [r2, #72]	; 0x48
   16e10:	strne	r0, [r2, #76]	; 0x4c
   16e14:	cmp	r1, #0
   16e18:	ldrne	r3, [sp, #8]
   16e1c:	ldr	r1, [r2, #92]	; 0x5c
   16e20:	strne	r3, [r2, #96]	; 0x60
   16e24:	ldrne	r3, [sp, #12]
   16e28:	strne	r3, [r2, #100]	; 0x64
   16e2c:	ldr	r3, [r2, #88]	; 0x58
   16e30:	adds	r3, r3, #1
   16e34:	adc	r1, r1, #0
   16e38:	str	r3, [r2, #88]	; 0x58
   16e3c:	str	r1, [r2, #92]	; 0x5c
   16e40:	b	16d2c <UnityAssertEqualFloatArray@@Base+0x27c>
   16e44:	mov	r8, fp
   16e48:	mov	r1, #1
   16e4c:	b	16c24 <UnityAssertEqualFloatArray@@Base+0x174>
   16e50:	andeq	r0, r0, r0
   16e54:	strcc	ip, [r7, -ip, lsr #11]!
   16e58:	strdeq	r0, [r3], -r8
   16e5c:	andeq	pc, r2, r8, ror #20
   16e60:	andeq	ip, r1, sp, asr fp
   16e64:	muleq	r1, r4, fp
   16e68:	muleq	r1, lr, fp

00016e6c <UnityAssertFloatsWithin@@Base>:
   16e6c:	ldr	r3, [pc, #400]	; 17004 <UnityAssertFloatsWithin@@Base+0x198>
   16e70:	push	{r4, r5, r6, lr}
   16e74:	ldr	r4, [pc, #396]	; 17008 <UnityAssertFloatsWithin@@Base+0x19c>
   16e78:	ldr	r2, [r3, #32]
   16e7c:	cmp	r2, #0
   16e80:	bne	16fe4 <UnityAssertFloatsWithin@@Base+0x178>
   16e84:	mov	r5, r3
   16e88:	ldr	r3, [r3, #36]	; 0x24
   16e8c:	cmp	r3, #0
   16e90:	beq	16eb0 <UnityAssertFloatsWithin@@Base+0x44>
   16e94:	ldr	r3, [r4, #8]
   16e98:	ldr	r2, [r4, #12]
   16e9c:	adds	r3, r3, #1
   16ea0:	adc	r2, r2, #0
   16ea4:	str	r3, [r4, #8]
   16ea8:	str	r2, [r4, #12]
   16eac:	pop	{r4, r5, r6, pc}
   16eb0:	vsub.f32	s2, s2, s1
   16eb4:	mov	r6, r0
   16eb8:	vldr	s15, [pc, #320]	; 17000 <UnityAssertFloatsWithin@@Base+0x194>
   16ebc:	vcmpe.f32	s2, #0.0
   16ec0:	vmrs	APSR_nzcv, fpscr
   16ec4:	bpl	16ee4 <UnityAssertFloatsWithin@@Base+0x78>
   16ec8:	ldr	r3, [r4, #16]
   16ecc:	vsub.f32	s2, s15, s2
   16ed0:	ldr	r2, [r4, #20]
   16ed4:	adds	r3, r3, #1
   16ed8:	adc	r2, r2, #0
   16edc:	str	r3, [r4, #16]
   16ee0:	str	r2, [r4, #20]
   16ee4:	vcmpe.f32	s0, #0.0
   16ee8:	vmrs	APSR_nzcv, fpscr
   16eec:	bpl	16f0c <UnityAssertFloatsWithin@@Base+0xa0>
   16ef0:	ldr	r3, [r4, #24]
   16ef4:	vsub.f32	s0, s15, s0
   16ef8:	ldr	r2, [r4, #28]
   16efc:	adds	r3, r3, #1
   16f00:	adc	r2, r2, #0
   16f04:	str	r3, [r4, #24]
   16f08:	str	r2, [r4, #28]
   16f0c:	vmul.f32	s15, s2, s15
   16f10:	vcmp.f32	s15, #0.0
   16f14:	vmrs	APSR_nzcv, fpscr
   16f18:	beq	16fa4 <UnityAssertFloatsWithin@@Base+0x138>
   16f1c:	ldr	r3, [r4, #32]
   16f20:	ldr	r2, [r4, #36]	; 0x24
   16f24:	adds	r3, r3, #1
   16f28:	adc	r2, r2, #0
   16f2c:	str	r3, [r4, #32]
   16f30:	str	r2, [r4, #36]	; 0x24
   16f34:	mov	r0, r1
   16f38:	bl	15bd0 <UnityPrint@@Base+0x60c>
   16f3c:	ldr	r3, [r4, #56]	; 0x38
   16f40:	ldr	r2, [r4, #60]	; 0x3c
   16f44:	ldr	r0, [pc, #192]	; 1700c <UnityAssertFloatsWithin@@Base+0x1a0>
   16f48:	adds	r3, r3, #1
   16f4c:	adc	r2, r2, #0
   16f50:	str	r3, [r4, #56]	; 0x38
   16f54:	str	r2, [r4, #60]	; 0x3c
   16f58:	bl	155c4 <UnityPrint@@Base>
   16f5c:	ldr	r3, [r4, #64]	; 0x40
   16f60:	mov	r0, r6
   16f64:	ldr	r2, [r4, #68]	; 0x44
   16f68:	adds	r3, r3, #1
   16f6c:	adc	r2, r2, #0
   16f70:	str	r3, [r4, #64]	; 0x40
   16f74:	str	r2, [r4, #68]	; 0x44
   16f78:	bl	15950 <UnityPrint@@Base+0x38c>
   16f7c:	ldr	r3, [r4, #72]	; 0x48
   16f80:	mov	r1, #1
   16f84:	ldr	r2, [r4, #76]	; 0x4c
   16f88:	str	r1, [r5, #32]
   16f8c:	ldr	r0, [pc, #124]	; 17010 <UnityAssertFloatsWithin@@Base+0x1a4>
   16f90:	adds	r3, r3, #1
   16f94:	adc	r2, r2, #0
   16f98:	str	r3, [r4, #72]	; 0x48
   16f9c:	str	r2, [r4, #76]	; 0x4c
   16fa0:	bl	11f9c <longjmp@plt>
   16fa4:	vcmpe.f32	s2, s0
   16fa8:	ldr	r3, [r4, #40]	; 0x28
   16fac:	ldr	r2, [r4, #44]	; 0x2c
   16fb0:	adds	r3, r3, #1
   16fb4:	adc	r2, r2, #0
   16fb8:	vmrs	APSR_nzcv, fpscr
   16fbc:	str	r3, [r4, #40]	; 0x28
   16fc0:	str	r2, [r4, #44]	; 0x2c
   16fc4:	pople	{r4, r5, r6, pc}
   16fc8:	ldr	r3, [r4, #48]	; 0x30
   16fcc:	ldr	r2, [r4, #52]	; 0x34
   16fd0:	adds	r3, r3, #1
   16fd4:	adc	r2, r2, #0
   16fd8:	str	r3, [r4, #48]	; 0x30
   16fdc:	str	r2, [r4, #52]	; 0x34
   16fe0:	b	16f34 <UnityAssertFloatsWithin@@Base+0xc8>
   16fe4:	ldr	r3, [r4]
   16fe8:	ldr	r2, [r4, #4]
   16fec:	adds	r3, r3, #1
   16ff0:	adc	r2, r2, #0
   16ff4:	str	r3, [r4]
   16ff8:	str	r2, [r4, #4]
   16ffc:	pop	{r4, r5, r6, pc}
   17000:	andeq	r0, r0, r0
   17004:	strdeq	r0, [r3], -r8
   17008:	strdeq	pc, [r2], -r8
   1700c:	muleq	r1, lr, fp
   17010:	andeq	r0, r3, r0, lsr #10

00017014 <UnityAssertFloatSpecial@@Base>:
   17014:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   17018:	mov	ip, r1
   1701c:	mov	r7, r0
   17020:	mov	r5, r2
   17024:	add	lr, sp, #16
   17028:	ldr	r3, [pc, #1052]	; 1744c <UnityAssertFloatSpecial@@Base+0x438>
   1702c:	ldr	r4, [pc, #1052]	; 17450 <UnityAssertFloatSpecial@@Base+0x43c>
   17030:	ldm	r3, {r0, r1, r2, r3}
   17034:	stmdb	lr, {r0, r1, r2, r3}
   17038:	ldr	r3, [pc, #1044]	; 17454 <UnityAssertFloatSpecial@@Base+0x440>
   1703c:	ldr	r2, [r3, #32]
   17040:	cmp	r2, #0
   17044:	bne	17070 <UnityAssertFloatSpecial@@Base+0x5c>
   17048:	mov	r6, r3
   1704c:	ldr	r3, [r3, #36]	; 0x24
   17050:	cmp	r3, #0
   17054:	beq	17090 <UnityAssertFloatSpecial@@Base+0x7c>
   17058:	ldr	r3, [r4]
   1705c:	ldr	r2, [r4, #4]
   17060:	adds	r3, r3, #1
   17064:	adc	r2, r2, #0
   17068:	str	r3, [r4]
   1706c:	str	r2, [r4, #4]
   17070:	ldr	r3, [r4, #8]
   17074:	ldr	r2, [r4, #12]
   17078:	adds	r3, r3, #1
   1707c:	adc	r2, r2, #0
   17080:	str	r3, [r4, #8]
   17084:	str	r2, [r4, #12]
   17088:	add	sp, sp, #16
   1708c:	pop	{r4, r5, r6, r7, r8, pc}
   17090:	lsr	r8, r5, #1
   17094:	cmp	r5, #7
   17098:	ldrls	pc, [pc, r5, lsl #2]
   1709c:	b	17410 <UnityAssertFloatSpecial@@Base+0x3fc>
   170a0:	andeq	r7, r1, r0, asr #1
   170a4:	andeq	r7, r1, r0, asr #1
   170a8:	andeq	r7, r1, r4, asr #5
   170ac:	andeq	r7, r1, r4, asr #5
   170b0:	andeq	r7, r1, ip, asr #6
   170b4:	andeq	r7, r1, ip, asr #6
   170b8:	andeq	r7, r1, r8, ror r3
   170bc:	andeq	r7, r1, r8, ror r3
   170c0:	vldr	s14, [pc, #896]	; 17448 <UnityAssertFloatSpecial@@Base+0x434>
   170c4:	vabs.f32	s15, s0
   170c8:	ldr	r3, [r4, #24]
   170cc:	ldr	r2, [r4, #28]
   170d0:	vcmp.f32	s15, s14
   170d4:	adds	r3, r3, #1
   170d8:	adc	r2, r2, #0
   170dc:	str	r3, [r4, #24]
   170e0:	str	r2, [r4, #28]
   170e4:	vmrs	APSR_nzcv, fpscr
   170e8:	movle	r3, #0
   170ec:	ble	17134 <UnityAssertFloatSpecial@@Base+0x120>
   170f0:	ldr	r3, [r4, #56]	; 0x38
   170f4:	ldr	r2, [r4, #60]	; 0x3c
   170f8:	adds	r3, r3, #1
   170fc:	str	r3, [r4, #56]	; 0x38
   17100:	adc	r2, r2, #0
   17104:	vmov	r3, s0
   17108:	str	r2, [r4, #60]	; 0x3c
   1710c:	cmp	r3, #0
   17110:	mvnlt	r3, #0
   17114:	blt	17134 <UnityAssertFloatSpecial@@Base+0x120>
   17118:	ldr	r3, [r4, #64]	; 0x40
   1711c:	ldr	r2, [r4, #68]	; 0x44
   17120:	adds	r3, r3, #1
   17124:	adc	r2, r2, #0
   17128:	str	r3, [r4, #64]	; 0x40
   1712c:	mov	r3, #1
   17130:	str	r2, [r4, #68]	; 0x44
   17134:	vcmpe.f32	s0, #0.0
   17138:	vmrs	APSR_nzcv, fpscr
   1713c:	movle	r3, #0
   17140:	andgt	r3, r3, #1
   17144:	and	r5, r5, #1
   17148:	cmp	r3, r5
   1714c:	beq	17088 <UnityAssertFloatSpecial@@Base+0x74>
   17150:	ldr	r3, [r4, #112]	; 0x70
   17154:	mov	r0, ip
   17158:	ldr	r2, [r4, #116]	; 0x74
   1715c:	adds	r3, r3, #1
   17160:	adc	r2, r2, #0
   17164:	str	r3, [r4, #112]	; 0x70
   17168:	str	r2, [r4, #116]	; 0x74
   1716c:	bl	15bd0 <UnityPrint@@Base+0x60c>
   17170:	ldr	r3, [r4, #120]	; 0x78
   17174:	ldr	r2, [r4, #124]	; 0x7c
   17178:	ldr	r0, [pc, #728]	; 17458 <UnityAssertFloatSpecial@@Base+0x444>
   1717c:	adds	r3, r3, #1
   17180:	adc	r2, r2, #0
   17184:	str	r3, [r4, #120]	; 0x78
   17188:	str	r2, [r4, #124]	; 0x7c
   1718c:	bl	155c4 <UnityPrint@@Base>
   17190:	ldr	r3, [r4, #128]	; 0x80
   17194:	ldr	r2, [r4, #132]	; 0x84
   17198:	adds	r3, r3, #1
   1719c:	adc	r2, r2, #0
   171a0:	cmp	r5, #0
   171a4:	str	r3, [r4, #128]	; 0x80
   171a8:	str	r2, [r4, #132]	; 0x84
   171ac:	bne	171e8 <UnityAssertFloatSpecial@@Base+0x1d4>
   171b0:	ldr	r3, [r4, #136]	; 0x88
   171b4:	ldr	r2, [r4, #140]	; 0x8c
   171b8:	ldr	r0, [pc, #668]	; 1745c <UnityAssertFloatSpecial@@Base+0x448>
   171bc:	adds	r3, r3, #1
   171c0:	adc	r2, r2, #0
   171c4:	str	r3, [r4, #136]	; 0x88
   171c8:	str	r2, [r4, #140]	; 0x8c
   171cc:	bl	155c4 <UnityPrint@@Base>
   171d0:	ldr	r3, [r4, #144]	; 0x90
   171d4:	ldr	r2, [r4, #148]	; 0x94
   171d8:	adds	r3, r3, #1
   171dc:	adc	r2, r2, #0
   171e0:	str	r3, [r4, #144]	; 0x90
   171e4:	str	r2, [r4, #148]	; 0x94
   171e8:	add	r3, sp, #16
   171ec:	add	r8, r3, r8, lsl #2
   171f0:	ldr	r8, [r8, #-16]
   171f4:	mov	r0, r8
   171f8:	bl	155c4 <UnityPrint@@Base>
   171fc:	ldr	r3, [r4, #152]	; 0x98
   17200:	ldr	r2, [r4, #156]	; 0x9c
   17204:	ldr	r0, [pc, #596]	; 17460 <UnityAssertFloatSpecial@@Base+0x44c>
   17208:	adds	r3, r3, #1
   1720c:	adc	r2, r2, #0
   17210:	str	r3, [r4, #152]	; 0x98
   17214:	str	r2, [r4, #156]	; 0x9c
   17218:	bl	155c4 <UnityPrint@@Base>
   1721c:	ldr	r3, [r4, #160]	; 0xa0
   17220:	ldr	r2, [r4, #164]	; 0xa4
   17224:	adds	r3, r3, #1
   17228:	adc	r2, r2, #0
   1722c:	cmp	r5, #0
   17230:	str	r3, [r4, #160]	; 0xa0
   17234:	str	r2, [r4, #164]	; 0xa4
   17238:	beq	17274 <UnityAssertFloatSpecial@@Base+0x260>
   1723c:	ldr	r3, [r4, #168]	; 0xa8
   17240:	ldr	r2, [r4, #172]	; 0xac
   17244:	ldr	r0, [pc, #528]	; 1745c <UnityAssertFloatSpecial@@Base+0x448>
   17248:	adds	r3, r3, #1
   1724c:	adc	r2, r2, #0
   17250:	str	r3, [r4, #168]	; 0xa8
   17254:	str	r2, [r4, #172]	; 0xac
   17258:	bl	155c4 <UnityPrint@@Base>
   1725c:	ldr	r3, [r4, #176]	; 0xb0
   17260:	ldr	r2, [r4, #180]	; 0xb4
   17264:	adds	r3, r3, #1
   17268:	adc	r2, r2, #0
   1726c:	str	r3, [r4, #176]	; 0xb0
   17270:	str	r2, [r4, #180]	; 0xb4
   17274:	mov	r0, r8
   17278:	bl	155c4 <UnityPrint@@Base>
   1727c:	ldr	r3, [r4, #184]	; 0xb8
   17280:	mov	r0, r7
   17284:	ldr	r2, [r4, #188]	; 0xbc
   17288:	adds	r3, r3, #1
   1728c:	adc	r2, r2, #0
   17290:	str	r3, [r4, #184]	; 0xb8
   17294:	str	r2, [r4, #188]	; 0xbc
   17298:	bl	15950 <UnityPrint@@Base+0x38c>
   1729c:	ldr	r3, [r4, #192]	; 0xc0
   172a0:	mov	r1, #1
   172a4:	ldr	r2, [r4, #196]	; 0xc4
   172a8:	str	r1, [r6, #32]
   172ac:	ldr	r0, [pc, #432]	; 17464 <UnityAssertFloatSpecial@@Base+0x450>
   172b0:	adds	r3, r3, #1
   172b4:	adc	r2, r2, #0
   172b8:	str	r3, [r4, #192]	; 0xc0
   172bc:	str	r2, [r4, #196]	; 0xc4
   172c0:	bl	11f9c <longjmp@plt>
   172c4:	vldr	s14, [pc, #380]	; 17448 <UnityAssertFloatSpecial@@Base+0x434>
   172c8:	vabs.f32	s15, s0
   172cc:	ldr	r3, [r4, #32]
   172d0:	ldr	r2, [r4, #36]	; 0x24
   172d4:	vcmp.f32	s15, s14
   172d8:	adds	r3, r3, #1
   172dc:	adc	r2, r2, #0
   172e0:	str	r3, [r4, #32]
   172e4:	str	r2, [r4, #36]	; 0x24
   172e8:	vmrs	APSR_nzcv, fpscr
   172ec:	movle	r3, #0
   172f0:	ble	17338 <UnityAssertFloatSpecial@@Base+0x324>
   172f4:	ldr	r3, [r4, #72]	; 0x48
   172f8:	ldr	r2, [r4, #76]	; 0x4c
   172fc:	adds	r3, r3, #1
   17300:	str	r3, [r4, #72]	; 0x48
   17304:	adc	r2, r2, #0
   17308:	vmov	r3, s0
   1730c:	str	r2, [r4, #76]	; 0x4c
   17310:	cmp	r3, #0
   17314:	mvnlt	r3, #0
   17318:	blt	17338 <UnityAssertFloatSpecial@@Base+0x324>
   1731c:	ldr	r3, [r4, #80]	; 0x50
   17320:	ldr	r2, [r4, #84]	; 0x54
   17324:	adds	r3, r3, #1
   17328:	adc	r2, r2, #0
   1732c:	str	r3, [r4, #80]	; 0x50
   17330:	mov	r3, #1
   17334:	str	r2, [r4, #84]	; 0x54
   17338:	vcmpe.f32	s0, #0.0
   1733c:	vmrs	APSR_nzcv, fpscr
   17340:	movpl	r3, #0
   17344:	andmi	r3, r3, #1
   17348:	b	17144 <UnityAssertFloatSpecial@@Base+0x130>
   1734c:	vcmp.f32	s0, s0
   17350:	ldr	r3, [r4, #40]	; 0x28
   17354:	ldr	r2, [r4, #44]	; 0x2c
   17358:	adds	r3, r3, #1
   1735c:	adc	r2, r2, #0
   17360:	vmrs	APSR_nzcv, fpscr
   17364:	str	r3, [r4, #40]	; 0x28
   17368:	str	r2, [r4, #44]	; 0x2c
   1736c:	movvs	r3, #1
   17370:	movvc	r3, #0
   17374:	b	17144 <UnityAssertFloatSpecial@@Base+0x130>
   17378:	vldr	s14, [pc, #200]	; 17448 <UnityAssertFloatSpecial@@Base+0x434>
   1737c:	vabs.f32	s15, s0
   17380:	ldr	r3, [r4, #48]	; 0x30
   17384:	ldr	r2, [r4, #52]	; 0x34
   17388:	vcmp.f32	s15, s14
   1738c:	adds	r3, r3, #1
   17390:	adc	r2, r2, #0
   17394:	str	r3, [r4, #48]	; 0x30
   17398:	str	r2, [r4, #52]	; 0x34
   1739c:	vmrs	APSR_nzcv, fpscr
   173a0:	ble	173e4 <UnityAssertFloatSpecial@@Base+0x3d0>
   173a4:	ldr	r3, [r4, #88]	; 0x58
   173a8:	ldr	r2, [r4, #92]	; 0x5c
   173ac:	adds	r3, r3, #1
   173b0:	str	r3, [r4, #88]	; 0x58
   173b4:	adc	r2, r2, #0
   173b8:	vmov	r3, s0
   173bc:	str	r2, [r4, #92]	; 0x5c
   173c0:	ands	r3, r3, #-2147483648	; 0x80000000
   173c4:	bne	17440 <UnityAssertFloatSpecial@@Base+0x42c>
   173c8:	ldr	r2, [r4, #96]	; 0x60
   173cc:	ldr	r1, [r4, #100]	; 0x64
   173d0:	adds	r2, r2, #1
   173d4:	adc	r1, r1, #0
   173d8:	str	r2, [r4, #96]	; 0x60
   173dc:	str	r1, [r4, #100]	; 0x64
   173e0:	b	17144 <UnityAssertFloatSpecial@@Base+0x130>
   173e4:	vcmp.f32	s0, s0
   173e8:	vmrs	APSR_nzcv, fpscr
   173ec:	bvs	17440 <UnityAssertFloatSpecial@@Base+0x42c>
   173f0:	ldr	r3, [r4, #104]	; 0x68
   173f4:	ldr	r2, [r4, #108]	; 0x6c
   173f8:	adds	r3, r3, #1
   173fc:	adc	r2, r2, #0
   17400:	str	r3, [r4, #104]	; 0x68
   17404:	mov	r3, #1
   17408:	str	r2, [r4, #108]	; 0x6c
   1740c:	b	17144 <UnityAssertFloatSpecial@@Base+0x130>
   17410:	ldr	r2, [r4, #16]
   17414:	mvn	r3, r5
   17418:	mov	r8, #0
   1741c:	and	r3, r3, #1
   17420:	ldr	r1, [r4, #20]
   17424:	adds	r2, r2, #1
   17428:	str	r2, [r4, #16]
   1742c:	adc	r1, r1, #0
   17430:	ldr	r2, [pc, #48]	; 17468 <UnityAssertFloatSpecial@@Base+0x454>
   17434:	str	r1, [r4, #20]
   17438:	str	r2, [sp]
   1743c:	b	17144 <UnityAssertFloatSpecial@@Base+0x130>
   17440:	mov	r3, #0
   17444:	b	17144 <UnityAssertFloatSpecial@@Base+0x130>
   17448:	svcvc	0x007fffff
   1744c:			; <UNDEFINED> instruction: 0x0001cbb8
   17450:	andeq	pc, r2, r8, asr #22
   17454:	strdeq	r0, [r3], -r8
   17458:	andeq	ip, r1, ip, ror #21
   1745c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   17460:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   17464:	andeq	r0, r3, r0, lsr #10
   17468:	andeq	ip, r1, r8, asr #23

0001746c <UnityAssertNumbersWithin@@Base>:
   1746c:	ldr	ip, [pc, #576]	; 176b4 <UnityAssertNumbersWithin@@Base+0x248>
   17470:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17474:	ldr	r4, [pc, #572]	; 176b8 <UnityAssertNumbersWithin@@Base+0x24c>
   17478:	ldr	lr, [ip, #32]
   1747c:	ldr	r9, [sp, #36]	; 0x24
   17480:	cmp	lr, #0
   17484:	bne	17698 <UnityAssertNumbersWithin@@Base+0x22c>
   17488:	mov	r8, ip
   1748c:	ldr	ip, [ip, #36]	; 0x24
   17490:	cmp	ip, #0
   17494:	beq	174b4 <UnityAssertNumbersWithin@@Base+0x48>
   17498:	ldr	r3, [r4]
   1749c:	ldr	r2, [r4, #4]
   174a0:	adds	r3, r3, #1
   174a4:	adc	r2, r2, #0
   174a8:	str	r3, [r4]
   174ac:	str	r2, [r4, #4]
   174b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174b4:	tst	r9, #16
   174b8:	beq	17658 <UnityAssertNumbersWithin@@Base+0x1ec>
   174bc:	cmp	r2, r1
   174c0:	ble	17638 <UnityAssertNumbersWithin@@Base+0x1cc>
   174c4:	ldr	ip, [r4, #8]
   174c8:	ldr	lr, [r4, #12]
   174cc:	adds	ip, ip, #1
   174d0:	adc	lr, lr, #0
   174d4:	str	ip, [r4, #8]
   174d8:	str	lr, [r4, #12]
   174dc:	sub	ip, r2, r1
   174e0:	cmp	ip, r0
   174e4:	movls	ip, #0
   174e8:	movhi	ip, #1
   174ec:	str	ip, [r8, #32]
   174f0:	ldr	ip, [r8, #32]
   174f4:	cmp	ip, #0
   174f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   174fc:	mov	sl, r3
   17500:	ldr	r3, [r4, #40]	; 0x28
   17504:	mov	r7, r2
   17508:	mov	r5, r0
   1750c:	mov	r6, r1
   17510:	ldr	r2, [r4, #44]	; 0x2c
   17514:	ldr	r0, [sp, #32]
   17518:	adds	r3, r3, #1
   1751c:	adc	r2, r2, #0
   17520:	str	r3, [r4, #40]	; 0x28
   17524:	str	r2, [r4, #44]	; 0x2c
   17528:	bl	15bd0 <UnityPrint@@Base+0x60c>
   1752c:	ldr	r3, [r4, #48]	; 0x30
   17530:	ldr	r2, [r4, #52]	; 0x34
   17534:	ldr	r0, [pc, #384]	; 176bc <UnityAssertNumbersWithin@@Base+0x250>
   17538:	adds	r3, r3, #1
   1753c:	adc	r2, r2, #0
   17540:	str	r3, [r4, #48]	; 0x30
   17544:	str	r2, [r4, #52]	; 0x34
   17548:	bl	155c4 <UnityPrint@@Base>
   1754c:	ldr	r3, [r4, #56]	; 0x38
   17550:	mov	r1, r9
   17554:	mov	r0, r5
   17558:	ldr	r2, [r4, #60]	; 0x3c
   1755c:	adds	r3, r3, #1
   17560:	adc	r2, r2, #0
   17564:	str	r3, [r4, #56]	; 0x38
   17568:	str	r2, [r4, #60]	; 0x3c
   1756c:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   17570:	ldr	r3, [r4, #64]	; 0x40
   17574:	ldr	r2, [r4, #68]	; 0x44
   17578:	ldr	r0, [pc, #320]	; 176c0 <UnityAssertNumbersWithin@@Base+0x254>
   1757c:	adds	r3, r3, #1
   17580:	adc	r2, r2, #0
   17584:	str	r3, [r4, #64]	; 0x40
   17588:	str	r2, [r4, #68]	; 0x44
   1758c:	bl	155c4 <UnityPrint@@Base>
   17590:	ldr	r3, [r4, #72]	; 0x48
   17594:	mov	r1, r9
   17598:	mov	r0, r6
   1759c:	ldr	r2, [r4, #76]	; 0x4c
   175a0:	adds	r3, r3, #1
   175a4:	adc	r2, r2, #0
   175a8:	str	r3, [r4, #72]	; 0x48
   175ac:	str	r2, [r4, #76]	; 0x4c
   175b0:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   175b4:	ldr	r3, [r4, #80]	; 0x50
   175b8:	ldr	r2, [r4, #84]	; 0x54
   175bc:	ldr	r0, [pc, #256]	; 176c4 <UnityAssertNumbersWithin@@Base+0x258>
   175c0:	adds	r3, r3, #1
   175c4:	adc	r2, r2, #0
   175c8:	str	r3, [r4, #80]	; 0x50
   175cc:	str	r2, [r4, #84]	; 0x54
   175d0:	bl	155c4 <UnityPrint@@Base>
   175d4:	ldr	r3, [r4, #88]	; 0x58
   175d8:	mov	r1, r9
   175dc:	mov	r0, r7
   175e0:	ldr	r2, [r4, #92]	; 0x5c
   175e4:	adds	r3, r3, #1
   175e8:	adc	r2, r2, #0
   175ec:	str	r3, [r4, #88]	; 0x58
   175f0:	str	r2, [r4, #92]	; 0x5c
   175f4:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   175f8:	ldrd	r2, [r4, #96]	; 0x60
   175fc:	mov	r0, sl
   17600:	adds	r2, r2, #1
   17604:	adc	r3, r3, #0
   17608:	strd	r2, [r4, #96]	; 0x60
   1760c:	bl	15950 <UnityPrint@@Base+0x38c>
   17610:	ldr	r3, [r4, #104]	; 0x68
   17614:	mov	r1, #1
   17618:	ldr	r2, [r4, #108]	; 0x6c
   1761c:	str	r1, [r8, #32]
   17620:	ldr	r0, [pc, #160]	; 176c8 <UnityAssertNumbersWithin@@Base+0x25c>
   17624:	adds	r3, r3, #1
   17628:	adc	r2, r2, #0
   1762c:	str	r3, [r4, #104]	; 0x68
   17630:	str	r2, [r4, #108]	; 0x6c
   17634:	bl	11f9c <longjmp@plt>
   17638:	ldr	ip, [r4, #16]
   1763c:	ldr	lr, [r4, #20]
   17640:	adds	ip, ip, #1
   17644:	adc	lr, lr, #0
   17648:	str	ip, [r4, #16]
   1764c:	str	lr, [r4, #20]
   17650:	sub	ip, r1, r2
   17654:	b	174e0 <UnityAssertNumbersWithin@@Base+0x74>
   17658:	cmp	r2, r1
   1765c:	bls	1767c <UnityAssertNumbersWithin@@Base+0x210>
   17660:	ldr	ip, [r4, #24]
   17664:	ldr	lr, [r4, #28]
   17668:	adds	ip, ip, #1
   1766c:	adc	lr, lr, #0
   17670:	str	ip, [r4, #24]
   17674:	str	lr, [r4, #28]
   17678:	b	174dc <UnityAssertNumbersWithin@@Base+0x70>
   1767c:	ldr	ip, [r4, #32]
   17680:	ldr	lr, [r4, #36]	; 0x24
   17684:	adds	ip, ip, #1
   17688:	adc	lr, lr, #0
   1768c:	str	ip, [r4, #32]
   17690:	str	lr, [r4, #36]	; 0x24
   17694:	b	17650 <UnityAssertNumbersWithin@@Base+0x1e4>
   17698:	ldr	r3, [r4, #-8]
   1769c:	ldr	r2, [r4, #-4]
   176a0:	adds	r3, r3, #1
   176a4:	adc	r2, r2, #0
   176a8:	str	r3, [r4, #-8]
   176ac:	str	r2, [r4, #-4]
   176b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   176b4:	strdeq	r0, [r3], -r8
   176b8:	andeq	pc, r2, r8, lsl ip	; <UNPREDICTABLE>
   176bc:	muleq	r1, lr, fp
   176c0:	andeq	ip, r1, ip, ror #21
   176c4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   176c8:	andeq	r0, r3, r0, lsr #10

000176cc <UnityAssertEqualString@@Base>:
   176cc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176d0:	mov	ip, r0
   176d4:	ldr	r0, [pc, #528]	; 178ec <UnityAssertEqualString@@Base+0x220>
   176d8:	ldr	r4, [pc, #528]	; 178f0 <UnityAssertEqualString@@Base+0x224>
   176dc:	ldr	lr, [r0, #32]
   176e0:	cmp	lr, #0
   176e4:	bne	178d0 <UnityAssertEqualString@@Base+0x204>
   176e8:	ldr	r5, [r0, #36]	; 0x24
   176ec:	cmp	r5, #0
   176f0:	beq	17714 <UnityAssertEqualString@@Base+0x48>
   176f4:	ldr	r3, [r4, #8]
   176f8:	ldr	r2, [r4, #12]
   176fc:	adds	r3, r3, #1
   17700:	adc	r2, r2, #0
   17704:	str	r3, [r4, #8]
   17708:	str	r2, [r4, #12]
   1770c:	add	sp, sp, #12
   17710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17714:	adds	r7, r1, #0
   17718:	mov	r8, r0
   1771c:	movne	r7, #1
   17720:	cmp	ip, #0
   17724:	moveq	r7, #0
   17728:	cmp	r7, #0
   1772c:	beq	17890 <UnityAssertEqualString@@Base+0x1c4>
   17730:	ldr	lr, [r4, #24]
   17734:	sub	fp, ip, #1
   17738:	sub	sl, r1, #1
   1773c:	ldr	r6, [r4, #28]
   17740:	str	lr, [sp]
   17744:	ldrb	r9, [fp, #1]!
   17748:	str	r6, [sp, #4]
   1774c:	ldrb	r0, [sl, #1]!
   17750:	cmp	r9, #0
   17754:	bne	177a4 <UnityAssertEqualString@@Base+0xd8>
   17758:	cmp	r5, #0
   1775c:	ldrne	r5, [pc, #396]	; 178f0 <UnityAssertEqualString@@Base+0x224>
   17760:	strne	lr, [r5, #24]
   17764:	ldr	lr, [r4, #32]
   17768:	strne	r6, [r5, #28]
   1776c:	ldr	r5, [r4, #36]	; 0x24
   17770:	adds	lr, lr, #1
   17774:	adc	r5, r5, #0
   17778:	cmp	r0, #0
   1777c:	str	lr, [r4, #32]
   17780:	str	r5, [r4, #36]	; 0x24
   17784:	bne	177d0 <UnityAssertEqualString@@Base+0x104>
   17788:	ldr	r3, [r4, #40]	; 0x28
   1778c:	ldr	r2, [r4, #44]	; 0x2c
   17790:	adds	r3, r3, #1
   17794:	adc	r2, r2, #0
   17798:	str	r3, [r4, #40]	; 0x28
   1779c:	str	r2, [r4, #44]	; 0x2c
   177a0:	b	1770c <UnityAssertEqualString@@Base+0x40>
   177a4:	adds	lr, lr, #1
   177a8:	adc	r6, r6, #0
   177ac:	cmp	r9, r0
   177b0:	beq	17888 <UnityAssertEqualString@@Base+0x1bc>
   177b4:	cmp	r5, #0
   177b8:	beq	177d0 <UnityAssertEqualString@@Base+0x104>
   177bc:	ldr	r0, [pc, #300]	; 178f0 <UnityAssertEqualString@@Base+0x224>
   177c0:	ldr	lr, [sp]
   177c4:	str	lr, [r0, #24]
   177c8:	ldr	lr, [sp, #4]
   177cc:	str	lr, [r0, #28]
   177d0:	ldr	r0, [r4, #16]
   177d4:	ldr	lr, [r4, #20]
   177d8:	adds	r0, r0, #1
   177dc:	adc	lr, lr, #0
   177e0:	str	r0, [r4, #16]
   177e4:	str	lr, [r4, #20]
   177e8:	mov	r0, #1
   177ec:	mov	r6, ip
   177f0:	ldr	ip, [r4, #64]	; 0x40
   177f4:	mov	r5, r2
   177f8:	mov	r7, r1
   177fc:	str	r0, [r8, #32]
   17800:	mov	r0, r3
   17804:	ldr	r3, [r4, #68]	; 0x44
   17808:	adds	ip, ip, #1
   1780c:	str	ip, [r4, #64]	; 0x40
   17810:	adc	r3, r3, #0
   17814:	str	r3, [r4, #68]	; 0x44
   17818:	bl	15bd0 <UnityPrint@@Base+0x60c>
   1781c:	ldr	r3, [r4, #72]	; 0x48
   17820:	mov	r1, r7
   17824:	mov	r0, r6
   17828:	ldr	r2, [r4, #76]	; 0x4c
   1782c:	adds	r3, r3, #1
   17830:	adc	r2, r2, #0
   17834:	str	r3, [r4, #72]	; 0x48
   17838:	str	r2, [r4, #76]	; 0x4c
   1783c:	bl	1578c <UnityPrint@@Base+0x1c8>
   17840:	ldr	r3, [r4, #80]	; 0x50
   17844:	mov	r0, r5
   17848:	ldr	r2, [r4, #84]	; 0x54
   1784c:	adds	r3, r3, #1
   17850:	adc	r2, r2, #0
   17854:	str	r3, [r4, #80]	; 0x50
   17858:	str	r2, [r4, #84]	; 0x54
   1785c:	bl	15950 <UnityPrint@@Base+0x38c>
   17860:	ldr	r3, [r4, #88]	; 0x58
   17864:	mov	r1, #1
   17868:	ldr	r2, [r4, #92]	; 0x5c
   1786c:	str	r1, [r8, #32]
   17870:	ldr	r0, [pc, #124]	; 178f4 <UnityAssertEqualString@@Base+0x228>
   17874:	adds	r3, r3, #1
   17878:	adc	r2, r2, #0
   1787c:	str	r3, [r4, #88]	; 0x58
   17880:	str	r2, [r4, #92]	; 0x5c
   17884:	bl	11f9c <longjmp@plt>
   17888:	mov	r5, r7
   1788c:	b	17740 <UnityAssertEqualString@@Base+0x74>
   17890:	cmp	ip, r1
   17894:	bne	178b4 <UnityAssertEqualString@@Base+0x1e8>
   17898:	ldr	r3, [r4, #56]	; 0x38
   1789c:	ldr	r2, [r4, #60]	; 0x3c
   178a0:	adds	r3, r3, #1
   178a4:	adc	r2, r2, #0
   178a8:	str	r3, [r4, #56]	; 0x38
   178ac:	str	r2, [r4, #60]	; 0x3c
   178b0:	b	1770c <UnityAssertEqualString@@Base+0x40>
   178b4:	ldr	r0, [r4, #48]	; 0x30
   178b8:	ldr	lr, [r4, #52]	; 0x34
   178bc:	adds	r0, r0, #1
   178c0:	adc	lr, lr, #0
   178c4:	str	r0, [r4, #48]	; 0x30
   178c8:	str	lr, [r4, #52]	; 0x34
   178cc:	b	177e8 <UnityAssertEqualString@@Base+0x11c>
   178d0:	ldr	r3, [r4]
   178d4:	ldr	r2, [r4, #4]
   178d8:	adds	r3, r3, #1
   178dc:	adc	r2, r2, #0
   178e0:	str	r3, [r4]
   178e4:	str	r2, [r4, #4]
   178e8:	b	1770c <UnityAssertEqualString@@Base+0x40>
   178ec:	strdeq	r0, [r3], -r8
   178f0:	andeq	pc, r2, r8, lsl #25
   178f4:	andeq	r0, r3, r0, lsr #10

000178f8 <UnityAssertEqualStringLen@@Base>:
   178f8:	ldr	ip, [pc, #1060]	; 17d24 <UnityAssertEqualStringLen@@Base+0x42c>
   178fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17900:	sub	sp, sp, #20
   17904:	ldr	r4, [pc, #1052]	; 17d28 <UnityAssertEqualStringLen@@Base+0x430>
   17908:	ldr	lr, [ip, #32]
   1790c:	cmp	lr, #0
   17910:	bne	17cfc <UnityAssertEqualStringLen@@Base+0x404>
   17914:	ldr	lr, [ip, #36]	; 0x24
   17918:	cmp	lr, #0
   1791c:	beq	17940 <UnityAssertEqualStringLen@@Base+0x48>
   17920:	ldr	r3, [r4, #8]
   17924:	ldr	r2, [r4, #12]
   17928:	adds	r3, r3, #1
   1792c:	adc	r2, r2, #0
   17930:	str	r3, [r4, #8]
   17934:	str	r2, [r4, #12]
   17938:	add	sp, sp, #20
   1793c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17940:	adds	r5, r1, #0
   17944:	mov	r6, ip
   17948:	movne	r5, #1
   1794c:	cmp	r0, #0
   17950:	moveq	r5, #0
   17954:	cmp	r5, #0
   17958:	beq	17b28 <UnityAssertEqualStringLen@@Base+0x230>
   1795c:	ldr	ip, [r4, #24]
   17960:	sub	r7, r1, #1
   17964:	stmib	sp, {r7, ip}
   17968:	ldr	ip, [r4, #28]
   1796c:	str	ip, [sp, #12]
   17970:	mov	ip, #0
   17974:	mov	sl, ip
   17978:	ldr	r7, [sp, #8]
   1797c:	ldrb	fp, [r0, ip]
   17980:	adds	r9, r7, ip
   17984:	ldr	r7, [sp, #12]
   17988:	adc	r8, r7, sl
   1798c:	cmp	fp, #0
   17990:	mov	r7, ip
   17994:	bne	17af0 <UnityAssertEqualStringLen@@Base+0x1f8>
   17998:	cmp	lr, #0
   1799c:	ldr	lr, [r4, #36]	; 0x24
   179a0:	ldrne	ip, [pc, #896]	; 17d28 <UnityAssertEqualStringLen@@Base+0x430>
   179a4:	strne	r9, [ip, #24]
   179a8:	strne	r8, [ip, #28]
   179ac:	ldr	ip, [r4, #32]
   179b0:	adds	ip, ip, #1
   179b4:	adc	lr, lr, #0
   179b8:	str	ip, [r4, #32]
   179bc:	ldrb	ip, [r1, r7]
   179c0:	str	lr, [r4, #36]	; 0x24
   179c4:	cmp	ip, #0
   179c8:	bne	17d18 <UnityAssertEqualStringLen@@Base+0x420>
   179cc:	ldr	r3, [r4, #40]	; 0x28
   179d0:	ldr	r2, [r4, #44]	; 0x2c
   179d4:	adds	r3, r3, #1
   179d8:	adc	r2, r2, #0
   179dc:	str	r3, [r4, #40]	; 0x28
   179e0:	str	r2, [r4, #44]	; 0x2c
   179e4:	b	17938 <UnityAssertEqualStringLen@@Base+0x40>
   179e8:	ldr	r7, [sp, #4]
   179ec:	adds	ip, ip, #1
   179f0:	adc	sl, sl, #0
   179f4:	add	r7, r7, ip
   179f8:	ldrb	r7, [r7]
   179fc:	cmp	r7, fp
   17a00:	beq	17ae8 <UnityAssertEqualStringLen@@Base+0x1f0>
   17a04:	cmp	lr, #0
   17a08:	ldrne	ip, [pc, #792]	; 17d28 <UnityAssertEqualStringLen@@Base+0x430>
   17a0c:	strne	r9, [ip, #24]
   17a10:	strne	r8, [ip, #28]
   17a14:	ldr	ip, [r4, #16]
   17a18:	ldr	lr, [r4, #20]
   17a1c:	adds	ip, ip, #1
   17a20:	str	ip, [r4, #16]
   17a24:	adc	lr, lr, #0
   17a28:	ldr	ip, [pc, #756]	; 17d24 <UnityAssertEqualStringLen@@Base+0x42c>
   17a2c:	str	lr, [r4, #20]
   17a30:	mov	lr, #1
   17a34:	str	lr, [ip, #32]
   17a38:	mov	r7, r3
   17a3c:	ldr	r3, [r4, #72]	; 0x48
   17a40:	mov	r8, r2
   17a44:	mov	sl, r0
   17a48:	mov	r9, r1
   17a4c:	ldr	r2, [r4, #76]	; 0x4c
   17a50:	ldr	r0, [sp, #56]	; 0x38
   17a54:	adds	r3, r3, #1
   17a58:	ldr	r5, [pc, #716]	; 17d2c <UnityAssertEqualStringLen@@Base+0x434>
   17a5c:	adc	r2, r2, #0
   17a60:	str	r3, [r4, #72]	; 0x48
   17a64:	str	r2, [r4, #76]	; 0x4c
   17a68:	bl	15bd0 <UnityPrint@@Base+0x60c>
   17a6c:	ldr	r3, [r4, #80]	; 0x50
   17a70:	ldr	r2, [r4, #84]	; 0x54
   17a74:	ldr	r0, [pc, #692]	; 17d30 <UnityAssertEqualStringLen@@Base+0x438>
   17a78:	adds	r3, r3, #1
   17a7c:	adc	r2, r2, #0
   17a80:	str	r3, [r4, #80]	; 0x50
   17a84:	ldr	r3, [r5, #-8]
   17a88:	str	r2, [r4, #84]	; 0x54
   17a8c:	ldr	r2, [r5, #-4]
   17a90:	adds	r3, r3, #1
   17a94:	adc	r2, r2, #0
   17a98:	str	r3, [r5, #-8]
   17a9c:	str	r2, [r5, #-4]
   17aa0:	bl	155c4 <UnityPrint@@Base>
   17aa4:	cmp	sl, #0
   17aa8:	bne	17b70 <UnityAssertEqualStringLen@@Base+0x278>
   17aac:	ldr	r3, [r5, #8]
   17ab0:	ldr	r2, [r5, #12]
   17ab4:	ldr	r0, [pc, #632]	; 17d34 <UnityAssertEqualStringLen@@Base+0x43c>
   17ab8:	adds	r3, r3, #1
   17abc:	adc	r2, r2, #0
   17ac0:	str	r3, [r5, #8]
   17ac4:	str	r2, [r5, #12]
   17ac8:	bl	155c4 <UnityPrint@@Base>
   17acc:	ldr	r3, [r5, #40]	; 0x28
   17ad0:	ldr	r2, [r5, #44]	; 0x2c
   17ad4:	adds	r3, r3, #1
   17ad8:	adc	r2, r2, #0
   17adc:	str	r3, [r5, #40]	; 0x28
   17ae0:	str	r2, [r5, #44]	; 0x2c
   17ae4:	b	17bec <UnityAssertEqualStringLen@@Base+0x2f4>
   17ae8:	mov	lr, r5
   17aec:	b	17978 <UnityAssertEqualStringLen@@Base+0x80>
   17af0:	cmp	r2, ip
   17af4:	bhi	179e8 <UnityAssertEqualStringLen@@Base+0xf0>
   17af8:	cmp	lr, #0
   17afc:	ldrne	r3, [pc, #548]	; 17d28 <UnityAssertEqualStringLen@@Base+0x430>
   17b00:	strne	r9, [r3, #24]
   17b04:	strne	r8, [r3, #28]
   17b08:	ldr	r2, [pc, #536]	; 17d28 <UnityAssertEqualStringLen@@Base+0x430>
   17b0c:	ldr	r3, [r2, #48]	; 0x30
   17b10:	ldr	r1, [r2, #52]	; 0x34
   17b14:	adds	r3, r3, #1
   17b18:	adc	r1, r1, #0
   17b1c:	str	r3, [r2, #48]	; 0x30
   17b20:	str	r1, [r2, #52]	; 0x34
   17b24:	b	17938 <UnityAssertEqualStringLen@@Base+0x40>
   17b28:	cmp	r0, r1
   17b2c:	bne	17b4c <UnityAssertEqualStringLen@@Base+0x254>
   17b30:	ldr	r3, [r4, #64]	; 0x40
   17b34:	ldr	r2, [r4, #68]	; 0x44
   17b38:	adds	r3, r3, #1
   17b3c:	adc	r2, r2, #0
   17b40:	str	r3, [r4, #64]	; 0x40
   17b44:	str	r2, [r4, #68]	; 0x44
   17b48:	b	17938 <UnityAssertEqualStringLen@@Base+0x40>
   17b4c:	ldr	ip, [r4, #56]	; 0x38
   17b50:	ldr	lr, [r4, #60]	; 0x3c
   17b54:	adds	ip, ip, #1
   17b58:	adc	lr, lr, #0
   17b5c:	str	ip, [r4, #56]	; 0x38
   17b60:	mov	ip, #1
   17b64:	str	ip, [r6, #32]
   17b68:	str	lr, [r4, #60]	; 0x3c
   17b6c:	b	17a38 <UnityAssertEqualStringLen@@Base+0x140>
   17b70:	ldr	r3, [r5]
   17b74:	mov	r0, #39	; 0x27
   17b78:	ldr	r2, [r5, #4]
   17b7c:	adds	r3, r3, #1
   17b80:	adc	r2, r2, #0
   17b84:	str	r3, [r5]
   17b88:	str	r2, [r5, #4]
   17b8c:	bl	1208c <putchar@plt>
   17b90:	ldr	r3, [r5, #16]
   17b94:	mov	r1, r8
   17b98:	mov	r0, sl
   17b9c:	ldr	r2, [r5, #20]
   17ba0:	adds	r3, r3, #1
   17ba4:	adc	r2, r2, #0
   17ba8:	str	r3, [r5, #16]
   17bac:	str	r2, [r5, #20]
   17bb0:	bl	153b0 <UnityPrintLen@@Base>
   17bb4:	ldr	r3, [r5, #24]
   17bb8:	mov	r0, #39	; 0x27
   17bbc:	ldr	r2, [r5, #28]
   17bc0:	adds	r3, r3, #1
   17bc4:	adc	r2, r2, #0
   17bc8:	str	r3, [r5, #24]
   17bcc:	str	r2, [r5, #28]
   17bd0:	bl	1208c <putchar@plt>
   17bd4:	ldr	r3, [r5, #32]
   17bd8:	ldr	r2, [r5, #36]	; 0x24
   17bdc:	adds	r3, r3, #1
   17be0:	adc	r2, r2, #0
   17be4:	str	r3, [r5, #32]
   17be8:	str	r2, [r5, #36]	; 0x24
   17bec:	ldr	r0, [pc, #324]	; 17d38 <UnityAssertEqualStringLen@@Base+0x440>
   17bf0:	bl	155c4 <UnityPrint@@Base>
   17bf4:	cmp	r9, #0
   17bf8:	beq	17cc0 <UnityAssertEqualStringLen@@Base+0x3c8>
   17bfc:	ldr	r3, [r5, #48]	; 0x30
   17c00:	mov	r0, #39	; 0x27
   17c04:	ldr	r2, [r5, #52]	; 0x34
   17c08:	adds	r3, r3, #1
   17c0c:	adc	r2, r2, #0
   17c10:	str	r3, [r5, #48]	; 0x30
   17c14:	str	r2, [r5, #52]	; 0x34
   17c18:	bl	1208c <putchar@plt>
   17c1c:	ldr	r3, [r5, #64]	; 0x40
   17c20:	mov	r1, r8
   17c24:	mov	r0, r9
   17c28:	ldr	r2, [r5, #68]	; 0x44
   17c2c:	adds	r3, r3, #1
   17c30:	adc	r2, r2, #0
   17c34:	str	r3, [r5, #64]	; 0x40
   17c38:	str	r2, [r5, #68]	; 0x44
   17c3c:	bl	153b0 <UnityPrintLen@@Base>
   17c40:	ldr	r3, [r5, #72]	; 0x48
   17c44:	mov	r0, #39	; 0x27
   17c48:	ldr	r2, [r5, #76]	; 0x4c
   17c4c:	adds	r3, r3, #1
   17c50:	adc	r2, r2, #0
   17c54:	str	r3, [r5, #72]	; 0x48
   17c58:	str	r2, [r5, #76]	; 0x4c
   17c5c:	bl	1208c <putchar@plt>
   17c60:	ldr	r3, [r5, #80]	; 0x50
   17c64:	ldr	r2, [r5, #84]	; 0x54
   17c68:	adds	r3, r3, #1
   17c6c:	adc	r2, r2, #0
   17c70:	str	r3, [r5, #80]	; 0x50
   17c74:	str	r2, [r5, #84]	; 0x54
   17c78:	ldr	r3, [r4, #88]	; 0x58
   17c7c:	mov	r0, r7
   17c80:	ldr	r2, [r4, #92]	; 0x5c
   17c84:	adds	r3, r3, #1
   17c88:	adc	r2, r2, #0
   17c8c:	str	r3, [r4, #88]	; 0x58
   17c90:	str	r2, [r4, #92]	; 0x5c
   17c94:	bl	15950 <UnityPrint@@Base+0x38c>
   17c98:	ldr	r3, [r4, #96]	; 0x60
   17c9c:	mov	r1, #1
   17ca0:	ldr	r2, [r4, #100]	; 0x64
   17ca4:	str	r1, [r6, #32]
   17ca8:	ldr	r0, [pc, #140]	; 17d3c <UnityAssertEqualStringLen@@Base+0x444>
   17cac:	adds	r3, r3, #1
   17cb0:	adc	r2, r2, #0
   17cb4:	str	r3, [r4, #96]	; 0x60
   17cb8:	str	r2, [r4, #100]	; 0x64
   17cbc:	bl	11f9c <longjmp@plt>
   17cc0:	ldr	r3, [r5, #56]	; 0x38
   17cc4:	ldr	r2, [r5, #60]	; 0x3c
   17cc8:	ldr	r0, [pc, #100]	; 17d34 <UnityAssertEqualStringLen@@Base+0x43c>
   17ccc:	adds	r3, r3, #1
   17cd0:	adc	r2, r2, #0
   17cd4:	str	r3, [r5, #56]	; 0x38
   17cd8:	str	r2, [r5, #60]	; 0x3c
   17cdc:	bl	155c4 <UnityPrint@@Base>
   17ce0:	ldr	r3, [r5, #88]	; 0x58
   17ce4:	ldr	r2, [r5, #92]	; 0x5c
   17ce8:	adds	r3, r3, #1
   17cec:	adc	r2, r2, #0
   17cf0:	str	r3, [r5, #88]	; 0x58
   17cf4:	str	r2, [r5, #92]	; 0x5c
   17cf8:	b	17c78 <UnityAssertEqualStringLen@@Base+0x380>
   17cfc:	ldr	r3, [r4]
   17d00:	ldr	r2, [r4, #4]
   17d04:	adds	r3, r3, #1
   17d08:	adc	r2, r2, #0
   17d0c:	str	r3, [r4]
   17d10:	str	r2, [r4, #4]
   17d14:	b	17938 <UnityAssertEqualStringLen@@Base+0x40>
   17d18:	cmp	r7, r2
   17d1c:	bcs	17b08 <UnityAssertEqualStringLen@@Base+0x210>
   17d20:	b	17a14 <UnityAssertEqualStringLen@@Base+0x11c>
   17d24:	strdeq	r0, [r3], -r8
   17d28:	andeq	pc, r2, r8, ror #25
   17d2c:	andeq	pc, r2, r8, asr sp	; <UNPREDICTABLE>
   17d30:	andeq	ip, r1, ip, ror #21
   17d34:	strdeq	ip, [r1], -r7
   17d38:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   17d3c:	andeq	r0, r3, r0, lsr #10

00017d40 <UnityAssertEqualStringArray@@Base>:
   17d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d44:	sub	sp, sp, #68	; 0x44
   17d48:	ldr	r8, [pc, #1580]	; 1837c <UnityAssertEqualStringArray@@Base+0x63c>
   17d4c:	ldr	r7, [pc, #1580]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   17d50:	ldr	lr, [r8, #32]
   17d54:	cmp	lr, #0
   17d58:	beq	17d7c <UnityAssertEqualStringArray@@Base+0x3c>
   17d5c:	ldr	r3, [r7]
   17d60:	ldr	r2, [r7, #4]
   17d64:	adds	r3, r3, #1
   17d68:	adc	r2, r2, #0
   17d6c:	str	r3, [r7]
   17d70:	str	r2, [r7, #4]
   17d74:	add	sp, sp, #68	; 0x44
   17d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d7c:	ldr	r4, [r8, #36]	; 0x24
   17d80:	cmp	r4, #0
   17d84:	beq	17da4 <UnityAssertEqualStringArray@@Base+0x64>
   17d88:	ldr	r3, [r7, #8]
   17d8c:	ldr	r2, [r7, #12]
   17d90:	adds	r3, r3, #1
   17d94:	adc	r2, r2, #0
   17d98:	str	r3, [r7, #8]
   17d9c:	str	r2, [r7, #12]
   17da0:	b	17d74 <UnityAssertEqualStringArray@@Base+0x34>
   17da4:	str	r2, [sp, #32]
   17da8:	ldr	r2, [r7, #16]
   17dac:	str	r3, [sp, #48]	; 0x30
   17db0:	ldr	ip, [r7, #20]
   17db4:	adds	r2, r2, #1
   17db8:	str	r2, [r7, #16]
   17dbc:	adc	ip, ip, #0
   17dc0:	ldr	r2, [sp, #32]
   17dc4:	str	ip, [r7, #20]
   17dc8:	cmp	r2, #0
   17dcc:	bne	17e58 <UnityAssertEqualStringArray@@Base+0x118>
   17dd0:	ldr	r3, [r7, #24]
   17dd4:	ldr	r2, [r7, #28]
   17dd8:	ldr	r0, [sp, #104]	; 0x68
   17ddc:	adds	r3, r3, #1
   17de0:	adc	r2, r2, #0
   17de4:	str	r3, [r7, #24]
   17de8:	str	r2, [r7, #28]
   17dec:	bl	15bd0 <UnityPrint@@Base+0x60c>
   17df0:	ldr	r3, [r7, #32]
   17df4:	ldr	r2, [r7, #36]	; 0x24
   17df8:	ldr	r0, [pc, #1412]	; 18384 <UnityAssertEqualStringArray@@Base+0x644>
   17dfc:	adds	r3, r3, #1
   17e00:	adc	r2, r2, #0
   17e04:	str	r3, [r7, #32]
   17e08:	str	r2, [r7, #36]	; 0x24
   17e0c:	bl	155c4 <UnityPrint@@Base>
   17e10:	ldr	r3, [r7, #40]	; 0x28
   17e14:	ldr	r2, [r7, #44]	; 0x2c
   17e18:	ldr	r0, [sp, #48]	; 0x30
   17e1c:	adds	r3, r3, #1
   17e20:	adc	r2, r2, #0
   17e24:	str	r3, [r7, #40]	; 0x28
   17e28:	str	r2, [r7, #44]	; 0x2c
   17e2c:	bl	15950 <UnityPrint@@Base+0x38c>
   17e30:	ldr	r3, [r7, #48]	; 0x30
   17e34:	mov	r1, #1
   17e38:	add	r0, r8, #40	; 0x28
   17e3c:	ldr	r2, [r7, #52]	; 0x34
   17e40:	str	r1, [r8, #32]
   17e44:	adds	r3, r3, #1
   17e48:	adc	r2, r2, #0
   17e4c:	str	r3, [r7, #48]	; 0x30
   17e50:	str	r2, [r7, #52]	; 0x34
   17e54:	bl	11f9c <longjmp@plt>
   17e58:	ldr	r2, [sp, #104]	; 0x68
   17e5c:	mov	r6, r0
   17e60:	mov	r5, r1
   17e64:	bl	15c68 <UnityPrint@@Base+0x6a4>
   17e68:	ldr	r3, [r7, #56]	; 0x38
   17e6c:	ldr	r2, [r7, #60]	; 0x3c
   17e70:	adds	r3, r3, #1
   17e74:	adc	r2, r2, #0
   17e78:	cmp	r0, #1
   17e7c:	str	r3, [r7, #56]	; 0x38
   17e80:	str	r2, [r7, #60]	; 0x3c
   17e84:	bne	17ea4 <UnityAssertEqualStringArray@@Base+0x164>
   17e88:	ldr	r3, [r7, #64]	; 0x40
   17e8c:	ldr	r2, [r7, #68]	; 0x44
   17e90:	adds	r3, r3, #1
   17e94:	adc	r2, r2, #0
   17e98:	str	r3, [r7, #64]	; 0x40
   17e9c:	str	r2, [r7, #68]	; 0x44
   17ea0:	b	17d74 <UnityAssertEqualStringArray@@Base+0x34>
   17ea4:	mov	r1, r4
   17ea8:	mov	r0, r4
   17eac:	ldr	ip, [r7, #72]	; 0x48
   17eb0:	str	r4, [sp, #12]
   17eb4:	ldr	r2, [r7, #100]	; 0x64
   17eb8:	ldr	r9, [r7, #76]	; 0x4c
   17ebc:	ldr	r3, [r7, #96]	; 0x60
   17ec0:	str	r2, [sp]
   17ec4:	ldr	r2, [r7, #104]	; 0x68
   17ec8:	str	r6, [sp, #24]
   17ecc:	ldr	lr, [r7, #108]	; 0x6c
   17ed0:	ldr	fp, [r7, #120]	; 0x78
   17ed4:	str	r2, [sp, #4]
   17ed8:	ldr	r2, [r8, #32]
   17edc:	str	r5, [sp, #28]
   17ee0:	ldr	r8, [r7, #92]	; 0x5c
   17ee4:	ldr	sl, [r7, #124]	; 0x7c
   17ee8:	str	r2, [sp, #56]	; 0x38
   17eec:	ldr	r2, [r7, #88]	; 0x58
   17ef0:	mov	r7, r4
   17ef4:	str	r2, [sp, #8]
   17ef8:	mov	r2, r4
   17efc:	ldr	r5, [sp, #24]
   17f00:	mov	r6, r5
   17f04:	str	r5, [sp, #52]	; 0x34
   17f08:	ldr	r5, [r6], #4
   17f0c:	str	r6, [sp, #24]
   17f10:	str	r5, [sp, #36]	; 0x24
   17f14:	ldr	r5, [sp, #28]
   17f18:	str	r5, [sp, #60]	; 0x3c
   17f1c:	ldr	r6, [r5], #4
   17f20:	str	r5, [sp, #28]
   17f24:	ldr	r5, [sp, #36]	; 0x24
   17f28:	cmp	r5, #0
   17f2c:	beq	18294 <UnityAssertEqualStringArray@@Base+0x554>
   17f30:	cmp	r6, #0
   17f34:	beq	17ffc <UnityAssertEqualStringArray@@Base+0x2bc>
   17f38:	ldr	r5, [sp, #8]
   17f3c:	str	r5, [sp, #16]
   17f40:	ldr	r5, [sp, #36]	; 0x24
   17f44:	str	r8, [sp, #20]
   17f48:	sub	r5, r5, #1
   17f4c:	str	r5, [sp, #40]	; 0x28
   17f50:	sub	r5, r6, #1
   17f54:	str	r5, [sp, #44]	; 0x2c
   17f58:	ldr	r5, [sp, #16]
   17f5c:	ldr	r8, [sp, #20]
   17f60:	str	r5, [sp, #8]
   17f64:	ldr	r5, [sp, #40]	; 0x28
   17f68:	ldrb	r6, [r5, #1]!
   17f6c:	str	r6, [sp, #36]	; 0x24
   17f70:	ldr	r6, [sp, #44]	; 0x2c
   17f74:	str	r5, [sp, #40]	; 0x28
   17f78:	ldrb	r5, [r6, #1]!
   17f7c:	str	r6, [sp, #44]	; 0x2c
   17f80:	mov	r6, r5
   17f84:	ldr	r5, [sp, #36]	; 0x24
   17f88:	cmp	r5, #0
   17f8c:	bne	18070 <UnityAssertEqualStringArray@@Base+0x330>
   17f90:	ldr	r5, [sp]
   17f94:	adds	r3, r3, #1
   17f98:	adc	r5, r5, #0
   17f9c:	cmp	r6, #0
   17fa0:	str	r5, [sp]
   17fa4:	mov	r5, r6
   17fa8:	beq	18218 <UnityAssertEqualStringArray@@Base+0x4d8>
   17fac:	cmp	r0, #0
   17fb0:	ldr	r0, [pc, #968]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   17fb4:	ldrne	r5, [sp, #16]
   17fb8:	str	r3, [r0, #96]	; 0x60
   17fbc:	ldr	r3, [sp]
   17fc0:	strne	r5, [r0, #88]	; 0x58
   17fc4:	movne	r5, r8
   17fc8:	strne	r5, [r0, #92]	; 0x5c
   17fcc:	cmp	r1, #0
   17fd0:	str	r3, [r0, #100]	; 0x64
   17fd4:	ldrne	r3, [sp, #4]
   17fd8:	strne	lr, [r0, #108]	; 0x6c
   17fdc:	strne	r3, [r0, #104]	; 0x68
   17fe0:	cmp	r7, #0
   17fe4:	strne	ip, [r0, #72]	; 0x48
   17fe8:	strne	r9, [r0, #76]	; 0x4c
   17fec:	cmp	r2, #0
   17ff0:	strne	fp, [r0, #120]	; 0x78
   17ff4:	strne	sl, [r0, #124]	; 0x7c
   17ff8:	b	180e8 <UnityAssertEqualStringArray@@Base+0x3a8>
   17ffc:	cmp	r0, #0
   18000:	ldr	r0, [pc, #888]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18004:	ldrne	r5, [sp, #8]
   18008:	strne	r8, [r0, #92]	; 0x5c
   1800c:	strne	r5, [r0, #88]	; 0x58
   18010:	ldr	r5, [sp, #12]
   18014:	cmp	r5, #0
   18018:	strne	r3, [r0, #96]	; 0x60
   1801c:	ldrne	r3, [sp]
   18020:	strne	r3, [r0, #100]	; 0x64
   18024:	cmp	r1, #0
   18028:	ldr	r3, [pc, #848]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   1802c:	ldrne	r1, [sp, #4]
   18030:	strne	lr, [r3, #108]	; 0x6c
   18034:	strne	r1, [r3, #104]	; 0x68
   18038:	cmp	r7, #0
   1803c:	strne	ip, [r3, #72]	; 0x48
   18040:	strne	r9, [r3, #76]	; 0x4c
   18044:	cmp	r2, #0
   18048:	strne	fp, [r3, #120]	; 0x78
   1804c:	strne	sl, [r3, #124]	; 0x7c
   18050:	ldr	r2, [pc, #808]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18054:	ldr	r3, [r2, #112]	; 0x70
   18058:	ldr	r1, [r2, #116]	; 0x74
   1805c:	adds	r3, r3, #1
   18060:	adc	r1, r1, #0
   18064:	str	r3, [r2, #112]	; 0x70
   18068:	str	r1, [r2, #116]	; 0x74
   1806c:	b	18104 <UnityAssertEqualStringArray@@Base+0x3c4>
   18070:	ldr	r5, [sp, #16]
   18074:	adds	r5, r5, #1
   18078:	str	r5, [sp, #16]
   1807c:	ldr	r5, [sp, #20]
   18080:	adc	r5, r5, #0
   18084:	str	r5, [sp, #20]
   18088:	ldr	r5, [sp, #36]	; 0x24
   1808c:	cmp	r5, r6
   18090:	beq	18210 <UnityAssertEqualStringArray@@Base+0x4d0>
   18094:	cmp	r0, #0
   18098:	ldr	r0, [pc, #736]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   1809c:	ldrne	r5, [sp, #8]
   180a0:	strne	r8, [r0, #92]	; 0x5c
   180a4:	strne	r5, [r0, #88]	; 0x58
   180a8:	ldr	r5, [sp, #12]
   180ac:	cmp	r5, #0
   180b0:	strne	r3, [r0, #96]	; 0x60
   180b4:	ldrne	r3, [sp]
   180b8:	strne	r3, [r0, #100]	; 0x64
   180bc:	cmp	r1, #0
   180c0:	ldr	r3, [pc, #696]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   180c4:	ldrne	r1, [sp, #4]
   180c8:	strne	lr, [r3, #108]	; 0x6c
   180cc:	strne	r1, [r3, #104]	; 0x68
   180d0:	cmp	r7, #0
   180d4:	strne	ip, [r3, #72]	; 0x48
   180d8:	strne	r9, [r3, #76]	; 0x4c
   180dc:	cmp	r2, #0
   180e0:	strne	fp, [r3, #120]	; 0x78
   180e4:	strne	sl, [r3, #124]	; 0x7c
   180e8:	ldr	r2, [pc, #656]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   180ec:	ldr	r3, [r2, #80]	; 0x50
   180f0:	ldr	r1, [r2, #84]	; 0x54
   180f4:	adds	r3, r3, #1
   180f8:	adc	r1, r1, #0
   180fc:	str	r3, [r2, #80]	; 0x50
   18100:	str	r1, [r2, #84]	; 0x54
   18104:	ldr	r3, [pc, #624]	; 1837c <UnityAssertEqualStringArray@@Base+0x63c>
   18108:	mov	r2, #1
   1810c:	str	r2, [r3, #32]
   18110:	ldr	r5, [pc, #616]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18114:	ldr	r0, [sp, #104]	; 0x68
   18118:	ldr	r3, [r5, #128]	; 0x80
   1811c:	ldr	r2, [r5, #132]	; 0x84
   18120:	adds	r3, r3, #1
   18124:	adc	r2, r2, #0
   18128:	str	r3, [r5, #128]	; 0x80
   1812c:	str	r2, [r5, #132]	; 0x84
   18130:	bl	15bd0 <UnityPrint@@Base+0x60c>
   18134:	ldr	r3, [r5, #136]	; 0x88
   18138:	ldr	r2, [r5, #140]	; 0x8c
   1813c:	adds	r3, r3, #1
   18140:	str	r3, [r5, #136]	; 0x88
   18144:	adc	r2, r2, #0
   18148:	ldr	r3, [sp, #32]
   1814c:	str	r2, [r5, #140]	; 0x8c
   18150:	cmp	r3, #1
   18154:	bls	181b0 <UnityAssertEqualStringArray@@Base+0x470>
   18158:	ldr	r3, [r5, #144]	; 0x90
   1815c:	ldr	r2, [r5, #148]	; 0x94
   18160:	ldr	r0, [pc, #544]	; 18388 <UnityAssertEqualStringArray@@Base+0x648>
   18164:	adds	r3, r3, #1
   18168:	adc	r2, r2, #0
   1816c:	str	r3, [r5, #144]	; 0x90
   18170:	str	r2, [r5, #148]	; 0x94
   18174:	bl	155c4 <UnityPrint@@Base>
   18178:	ldr	r3, [r5, #152]	; 0x98
   1817c:	mov	r0, r4
   18180:	ldr	r2, [r5, #156]	; 0x9c
   18184:	adds	r3, r3, #1
   18188:	adc	r2, r2, #0
   1818c:	str	r3, [r5, #152]	; 0x98
   18190:	str	r2, [r5, #156]	; 0x9c
   18194:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   18198:	ldr	r3, [r5, #160]	; 0xa0
   1819c:	ldr	r2, [r5, #164]	; 0xa4
   181a0:	adds	r3, r3, #1
   181a4:	adc	r2, r2, #0
   181a8:	str	r3, [r5, #160]	; 0xa0
   181ac:	str	r2, [r5, #164]	; 0xa4
   181b0:	ldr	r3, [sp, #60]	; 0x3c
   181b4:	ldr	r1, [r3]
   181b8:	ldr	r3, [sp, #52]	; 0x34
   181bc:	ldr	r0, [r3]
   181c0:	bl	1578c <UnityPrint@@Base+0x1c8>
   181c4:	ldr	r3, [r5, #168]	; 0xa8
   181c8:	ldr	r2, [r5, #172]	; 0xac
   181cc:	ldr	r0, [sp, #48]	; 0x30
   181d0:	adds	r3, r3, #1
   181d4:	adc	r2, r2, #0
   181d8:	str	r3, [r5, #168]	; 0xa8
   181dc:	str	r2, [r5, #172]	; 0xac
   181e0:	bl	15950 <UnityPrint@@Base+0x38c>
   181e4:	ldr	r3, [r5, #176]	; 0xb0
   181e8:	mov	r1, #1
   181ec:	ldr	r2, [r5, #180]	; 0xb4
   181f0:	ldr	r0, [pc, #388]	; 1837c <UnityAssertEqualStringArray@@Base+0x63c>
   181f4:	adds	r3, r3, #1
   181f8:	adc	r2, r2, #0
   181fc:	str	r3, [r5, #176]	; 0xb0
   18200:	add	r0, r0, #40	; 0x28
   18204:	str	r1, [r0, #-8]
   18208:	str	r2, [r5, #180]	; 0xb4
   1820c:	b	17e54 <UnityAssertEqualStringArray@@Base+0x114>
   18210:	mov	r0, #1
   18214:	b	17f58 <UnityAssertEqualStringArray@@Base+0x218>
   18218:	ldr	r1, [sp, #4]
   1821c:	adds	r1, r1, #1
   18220:	adc	lr, lr, #0
   18224:	str	r1, [sp, #4]
   18228:	mov	r1, #1
   1822c:	str	r1, [sp, #12]
   18230:	ldr	r5, [sp, #56]	; 0x38
   18234:	cmp	r5, #0
   18238:	beq	18308 <UnityAssertEqualStringArray@@Base+0x5c8>
   1823c:	cmp	r0, #0
   18240:	ldr	r0, [pc, #312]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18244:	ldrne	r5, [sp, #8]
   18248:	strne	r8, [r0, #92]	; 0x5c
   1824c:	strne	r5, [r0, #88]	; 0x58
   18250:	ldr	r5, [sp, #12]
   18254:	cmp	r5, #0
   18258:	strne	r3, [r0, #96]	; 0x60
   1825c:	ldrne	r3, [sp]
   18260:	strne	r3, [r0, #100]	; 0x64
   18264:	cmp	r1, #0
   18268:	ldr	r3, [pc, #272]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   1826c:	ldrne	r1, [sp, #4]
   18270:	strne	lr, [r3, #108]	; 0x6c
   18274:	strne	r1, [r3, #104]	; 0x68
   18278:	cmp	r7, #0
   1827c:	strne	ip, [r3, #72]	; 0x48
   18280:	strne	r9, [r3, #76]	; 0x4c
   18284:	cmp	r2, #0
   18288:	strne	fp, [r3, #120]	; 0x78
   1828c:	strne	sl, [r3, #124]	; 0x7c
   18290:	b	18110 <UnityAssertEqualStringArray@@Base+0x3d0>
   18294:	adds	ip, ip, #1
   18298:	adc	r9, r9, #0
   1829c:	cmp	r6, #0
   182a0:	bne	182b8 <UnityAssertEqualStringArray@@Base+0x578>
   182a4:	adds	fp, fp, #1
   182a8:	mov	r2, #1
   182ac:	adc	sl, sl, #0
   182b0:	mov	r7, r2
   182b4:	b	18230 <UnityAssertEqualStringArray@@Base+0x4f0>
   182b8:	cmp	r0, #0
   182bc:	ldr	r0, [pc, #188]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   182c0:	ldrne	r5, [sp, #8]
   182c4:	strne	r8, [r0, #92]	; 0x5c
   182c8:	str	ip, [r0, #72]	; 0x48
   182cc:	strne	r5, [r0, #88]	; 0x58
   182d0:	ldr	r5, [sp, #12]
   182d4:	str	r9, [r0, #76]	; 0x4c
   182d8:	cmp	r5, #0
   182dc:	strne	r3, [r0, #96]	; 0x60
   182e0:	ldrne	r3, [sp]
   182e4:	strne	r3, [r0, #100]	; 0x64
   182e8:	cmp	r1, #0
   182ec:	ldrne	r3, [sp, #4]
   182f0:	strne	lr, [r0, #108]	; 0x6c
   182f4:	strne	r3, [r0, #104]	; 0x68
   182f8:	cmp	r2, #0
   182fc:	strne	fp, [r0, #120]	; 0x78
   18300:	strne	sl, [r0, #124]	; 0x7c
   18304:	b	18050 <UnityAssertEqualStringArray@@Base+0x310>
   18308:	ldr	r5, [sp, #32]
   1830c:	add	r4, r4, #1
   18310:	cmp	r5, r4
   18314:	bne	17efc <UnityAssertEqualStringArray@@Base+0x1bc>
   18318:	cmp	r0, #0
   1831c:	ldrne	r0, [pc, #92]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18320:	ldrne	r4, [sp, #8]
   18324:	strne	r8, [r0, #92]	; 0x5c
   18328:	strne	r4, [r0, #88]	; 0x58
   1832c:	ldr	r0, [sp, #12]
   18330:	cmp	r0, #0
   18334:	ldrne	r0, [pc, #68]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18338:	strne	r3, [r0, #96]	; 0x60
   1833c:	ldrne	r3, [sp]
   18340:	strne	r3, [r0, #100]	; 0x64
   18344:	cmp	r1, #0
   18348:	ldrne	r3, [pc, #48]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   1834c:	ldrne	r1, [sp, #4]
   18350:	strne	lr, [r3, #108]	; 0x6c
   18354:	strne	r1, [r3, #104]	; 0x68
   18358:	cmp	r7, #0
   1835c:	ldrne	r3, [pc, #28]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18360:	strne	ip, [r3, #72]	; 0x48
   18364:	strne	r9, [r3, #76]	; 0x4c
   18368:	cmp	r2, #0
   1836c:	ldrne	r3, [pc, #12]	; 18380 <UnityAssertEqualStringArray@@Base+0x640>
   18370:	strne	fp, [r3, #120]	; 0x78
   18374:	strne	sl, [r3, #124]	; 0x7c
   18378:	b	17d74 <UnityAssertEqualStringArray@@Base+0x34>
   1837c:	strdeq	r0, [r3], -r8
   18380:			; <UNDEFINED> instruction: 0x0002fdb8
   18384:	andeq	ip, r1, sp, asr fp
   18388:	muleq	r1, r4, fp

0001838c <UnityAssertEqualMemory@@Base>:
   1838c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18390:	mov	r9, r3
   18394:	sub	sp, sp, #36	; 0x24
   18398:	ldr	r6, [pc, #1024]	; 187a0 <UnityAssertEqualMemory@@Base+0x414>
   1839c:	str	r2, [sp, #4]
   183a0:	ldr	r4, [pc, #1020]	; 187a4 <UnityAssertEqualMemory@@Base+0x418>
   183a4:	ldr	r3, [r6, #32]
   183a8:	cmp	r3, #0
   183ac:	beq	183d0 <UnityAssertEqualMemory@@Base+0x44>
   183b0:	ldr	r3, [r4, #-8]
   183b4:	ldr	r2, [r4, #-4]
   183b8:	adds	r3, r3, #1
   183bc:	adc	r2, r2, #0
   183c0:	str	r3, [r4, #-8]
   183c4:	str	r2, [r4, #-4]
   183c8:	add	sp, sp, #36	; 0x24
   183cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183d0:	ldr	r3, [r6, #36]	; 0x24
   183d4:	cmp	r3, #0
   183d8:	beq	183f8 <UnityAssertEqualMemory@@Base+0x6c>
   183dc:	ldr	r3, [r4]
   183e0:	ldr	r2, [r4, #4]
   183e4:	adds	r3, r3, #1
   183e8:	adc	r2, r2, #0
   183ec:	str	r3, [r4]
   183f0:	str	r2, [r4, #4]
   183f4:	b	183c8 <UnityAssertEqualMemory@@Base+0x3c>
   183f8:	ldr	r3, [r4, #8]
   183fc:	ldr	r2, [r4, #12]
   18400:	adds	r3, r3, #1
   18404:	str	r3, [r4, #8]
   18408:	adc	r2, r2, #0
   1840c:	cmp	r9, #0
   18410:	ldr	r3, [sp, #4]
   18414:	str	r2, [r4, #12]
   18418:	clz	r5, r3
   1841c:	lsr	r5, r5, #5
   18420:	moveq	r5, #1
   18424:	cmp	r5, #0
   18428:	beq	184b4 <UnityAssertEqualMemory@@Base+0x128>
   1842c:	ldr	r3, [r4, #16]
   18430:	ldr	r2, [r4, #20]
   18434:	ldr	r0, [sp, #76]	; 0x4c
   18438:	adds	r3, r3, #1
   1843c:	adc	r2, r2, #0
   18440:	str	r3, [r4, #16]
   18444:	str	r2, [r4, #20]
   18448:	bl	15bd0 <UnityPrint@@Base+0x60c>
   1844c:	ldr	r3, [r4, #24]
   18450:	ldr	r2, [r4, #28]
   18454:	ldr	r0, [pc, #844]	; 187a8 <UnityAssertEqualMemory@@Base+0x41c>
   18458:	adds	r3, r3, #1
   1845c:	adc	r2, r2, #0
   18460:	str	r3, [r4, #24]
   18464:	str	r2, [r4, #28]
   18468:	bl	155c4 <UnityPrint@@Base>
   1846c:	ldr	r3, [r4, #32]
   18470:	ldr	r2, [r4, #36]	; 0x24
   18474:	ldr	r0, [sp, #72]	; 0x48
   18478:	adds	r3, r3, #1
   1847c:	adc	r2, r2, #0
   18480:	str	r3, [r4, #32]
   18484:	str	r2, [r4, #36]	; 0x24
   18488:	bl	15950 <UnityPrint@@Base+0x38c>
   1848c:	ldr	r3, [r4, #40]	; 0x28
   18490:	mov	r1, #1
   18494:	add	r0, r6, #40	; 0x28
   18498:	ldr	r2, [r4, #44]	; 0x2c
   1849c:	str	r1, [r6, #32]
   184a0:	adds	r3, r3, #1
   184a4:	adc	r2, r2, #0
   184a8:	str	r3, [r4, #40]	; 0x28
   184ac:	str	r2, [r4, #44]	; 0x2c
   184b0:	bl	11f9c <longjmp@plt>
   184b4:	ldr	r3, [sp, #72]	; 0x48
   184b8:	mov	r8, r0
   184bc:	mov	r7, r1
   184c0:	ldr	r2, [sp, #76]	; 0x4c
   184c4:	bl	15c68 <UnityPrint@@Base+0x6a4>
   184c8:	ldr	r3, [r4, #48]	; 0x30
   184cc:	ldr	r2, [r4, #52]	; 0x34
   184d0:	adds	r3, r3, #1
   184d4:	adc	r2, r2, #0
   184d8:	cmp	r0, #1
   184dc:	str	r3, [r4, #48]	; 0x30
   184e0:	str	r2, [r4, #52]	; 0x34
   184e4:	beq	18518 <UnityAssertEqualMemory@@Base+0x18c>
   184e8:	ldrd	r2, [r4, #72]	; 0x48
   184ec:	mov	sl, r9
   184f0:	mov	fp, r5
   184f4:	ldr	lr, [r4, #176]	; 0xb0
   184f8:	ldr	ip, [r4, #180]	; 0xb4
   184fc:	cmp	sl, #0
   18500:	beq	18780 <UnityAssertEqualMemory@@Base+0x3f4>
   18504:	strd	r2, [sp, #8]
   18508:	str	r7, [sp, #16]
   1850c:	str	r8, [sp, #20]
   18510:	ldr	r6, [sp, #4]
   18514:	b	18758 <UnityAssertEqualMemory@@Base+0x3cc>
   18518:	ldr	r3, [r4, #56]	; 0x38
   1851c:	ldr	r2, [r4, #60]	; 0x3c
   18520:	adds	r3, r3, #1
   18524:	adc	r2, r2, #0
   18528:	str	r3, [r4, #56]	; 0x38
   1852c:	str	r2, [r4, #60]	; 0x3c
   18530:	b	183c8 <UnityAssertEqualMemory@@Base+0x3c>
   18534:	ldr	r1, [sp, #8]
   18538:	mov	r0, r8
   1853c:	adds	r1, r1, #1
   18540:	str	r1, [sp, #8]
   18544:	ldr	r1, [sp, #12]
   18548:	adc	r1, r1, #0
   1854c:	str	r1, [sp, #12]
   18550:	sub	r1, r6, #1
   18554:	str	r1, [sp, #24]
   18558:	ldrb	r1, [r0], #1
   1855c:	str	r0, [sp, #20]
   18560:	mov	r0, r7
   18564:	str	r1, [sp, #28]
   18568:	ldrb	r1, [r0], #1
   1856c:	str	r0, [sp, #16]
   18570:	mov	r0, r1
   18574:	ldr	r1, [sp, #28]
   18578:	cmp	r1, r0
   1857c:	beq	18750 <UnityAssertEqualMemory@@Base+0x3c4>
   18580:	ldr	r1, [pc, #540]	; 187a4 <UnityAssertEqualMemory@@Base+0x418>
   18584:	cmp	r5, #0
   18588:	ldr	r0, [sp, #76]	; 0x4c
   1858c:	strdne	r2, [r1, #72]	; 0x48
   18590:	cmp	fp, #0
   18594:	ldr	r3, [r4, #64]	; 0x40
   18598:	strne	lr, [r1, #176]	; 0xb0
   1859c:	ldr	r2, [r4, #68]	; 0x44
   185a0:	strne	ip, [r1, #180]	; 0xb4
   185a4:	adds	r3, r3, #1
   185a8:	adc	r2, r2, #0
   185ac:	str	r3, [r4, #64]	; 0x40
   185b0:	str	r2, [r4, #68]	; 0x44
   185b4:	bl	15bd0 <UnityPrint@@Base+0x60c>
   185b8:	ldr	r3, [r4, #80]	; 0x50
   185bc:	ldr	r2, [r4, #84]	; 0x54
   185c0:	ldr	r0, [pc, #484]	; 187ac <UnityAssertEqualMemory@@Base+0x420>
   185c4:	adds	r3, r3, #1
   185c8:	adc	r2, r2, #0
   185cc:	str	r3, [r4, #80]	; 0x50
   185d0:	str	r2, [r4, #84]	; 0x54
   185d4:	bl	155c4 <UnityPrint@@Base>
   185d8:	ldr	r3, [r4, #88]	; 0x58
   185dc:	ldr	r2, [r4, #92]	; 0x5c
   185e0:	adds	r3, r3, #1
   185e4:	adc	r2, r2, #0
   185e8:	cmp	r9, #1
   185ec:	str	r3, [r4, #88]	; 0x58
   185f0:	str	r2, [r4, #92]	; 0x5c
   185f4:	bls	18650 <UnityAssertEqualMemory@@Base+0x2c4>
   185f8:	ldr	r3, [r4, #96]	; 0x60
   185fc:	ldr	r2, [r4, #100]	; 0x64
   18600:	ldr	r0, [pc, #424]	; 187b0 <UnityAssertEqualMemory@@Base+0x424>
   18604:	adds	r3, r3, #1
   18608:	adc	r2, r2, #0
   1860c:	str	r3, [r4, #96]	; 0x60
   18610:	str	r2, [r4, #100]	; 0x64
   18614:	bl	155c4 <UnityPrint@@Base>
   18618:	ldr	r3, [r4, #104]	; 0x68
   1861c:	sub	r0, r9, sl
   18620:	ldr	r2, [r4, #108]	; 0x6c
   18624:	adds	r3, r3, #1
   18628:	adc	r2, r2, #0
   1862c:	str	r3, [r4, #104]	; 0x68
   18630:	str	r2, [r4, #108]	; 0x6c
   18634:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   18638:	ldr	r3, [r4, #112]	; 0x70
   1863c:	ldr	r2, [r4, #116]	; 0x74
   18640:	adds	r3, r3, #1
   18644:	adc	r2, r2, #0
   18648:	str	r3, [r4, #112]	; 0x70
   1864c:	str	r2, [r4, #116]	; 0x74
   18650:	ldr	r0, [pc, #348]	; 187b4 <UnityAssertEqualMemory@@Base+0x428>
   18654:	bl	155c4 <UnityPrint@@Base>
   18658:	ldr	r3, [r4, #120]	; 0x78
   1865c:	ldr	r2, [r4, #124]	; 0x7c
   18660:	adds	r3, r3, #1
   18664:	str	r3, [r4, #120]	; 0x78
   18668:	adc	r2, r2, #0
   1866c:	ldr	r3, [sp, #4]
   18670:	str	r2, [r4, #124]	; 0x7c
   18674:	sub	r0, r3, r6
   18678:	bl	150ac <UnityPrintNumberUnsigned@@Base>
   1867c:	ldr	r3, [r4, #128]	; 0x80
   18680:	ldr	r2, [r4, #132]	; 0x84
   18684:	ldr	r0, [pc, #300]	; 187b8 <UnityAssertEqualMemory@@Base+0x42c>
   18688:	adds	r3, r3, #1
   1868c:	adc	r2, r2, #0
   18690:	str	r3, [r4, #128]	; 0x80
   18694:	str	r2, [r4, #132]	; 0x84
   18698:	bl	155c4 <UnityPrint@@Base>
   1869c:	ldr	r3, [r4, #136]	; 0x88
   186a0:	mov	r1, #65	; 0x41
   186a4:	ldr	r2, [r4, #140]	; 0x8c
   186a8:	ldrb	r0, [r8]
   186ac:	adds	r3, r3, #1
   186b0:	adc	r2, r2, #0
   186b4:	str	r3, [r4, #136]	; 0x88
   186b8:	str	r2, [r4, #140]	; 0x8c
   186bc:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   186c0:	ldr	r3, [r4, #144]	; 0x90
   186c4:	ldr	r2, [r4, #148]	; 0x94
   186c8:	ldr	r0, [pc, #236]	; 187bc <UnityAssertEqualMemory@@Base+0x430>
   186cc:	adds	r3, r3, #1
   186d0:	adc	r2, r2, #0
   186d4:	str	r3, [r4, #144]	; 0x90
   186d8:	str	r2, [r4, #148]	; 0x94
   186dc:	bl	155c4 <UnityPrint@@Base>
   186e0:	ldr	r3, [r4, #152]	; 0x98
   186e4:	mov	r1, #65	; 0x41
   186e8:	ldr	r2, [r4, #156]	; 0x9c
   186ec:	ldrb	r0, [r7]
   186f0:	adds	r3, r3, #1
   186f4:	adc	r2, r2, #0
   186f8:	str	r3, [r4, #152]	; 0x98
   186fc:	str	r2, [r4, #156]	; 0x9c
   18700:	bl	152c8 <UnityPrintNumberByStyle@@Base>
   18704:	ldr	r3, [r4, #160]	; 0xa0
   18708:	ldr	r2, [r4, #164]	; 0xa4
   1870c:	ldr	r0, [sp, #72]	; 0x48
   18710:	adds	r3, r3, #1
   18714:	adc	r2, r2, #0
   18718:	str	r3, [r4, #160]	; 0xa0
   1871c:	str	r2, [r4, #164]	; 0xa4
   18720:	bl	15950 <UnityPrint@@Base+0x38c>
   18724:	ldr	r3, [r4, #168]	; 0xa8
   18728:	mov	r1, #1
   1872c:	ldr	r2, [r4, #172]	; 0xac
   18730:	ldr	r0, [pc, #104]	; 187a0 <UnityAssertEqualMemory@@Base+0x414>
   18734:	adds	r3, r3, #1
   18738:	adc	r2, r2, #0
   1873c:	str	r3, [r4, #168]	; 0xa8
   18740:	add	r0, r0, #40	; 0x28
   18744:	str	r1, [r0, #-8]
   18748:	str	r2, [r4, #172]	; 0xac
   1874c:	b	184b0 <UnityAssertEqualMemory@@Base+0x124>
   18750:	ldr	r6, [sp, #24]
   18754:	mov	r5, #1
   18758:	cmp	r6, #0
   1875c:	ldrd	r2, [sp, #8]
   18760:	ldr	r7, [sp, #16]
   18764:	ldr	r8, [sp, #20]
   18768:	bne	18534 <UnityAssertEqualMemory@@Base+0x1a8>
   1876c:	adds	lr, lr, #1
   18770:	sub	sl, sl, #1
   18774:	adc	ip, ip, #0
   18778:	mov	fp, #1
   1877c:	b	184fc <UnityAssertEqualMemory@@Base+0x170>
   18780:	cmp	r5, #0
   18784:	ldrne	r1, [pc, #24]	; 187a4 <UnityAssertEqualMemory@@Base+0x418>
   18788:	strdne	r2, [r1, #72]	; 0x48
   1878c:	cmp	fp, #0
   18790:	ldrne	r3, [pc, #12]	; 187a4 <UnityAssertEqualMemory@@Base+0x418>
   18794:	strne	lr, [r3, #176]	; 0xb0
   18798:	strne	ip, [r3, #180]	; 0xb4
   1879c:	b	183c8 <UnityAssertEqualMemory@@Base+0x3c>
   187a0:	strdeq	r0, [r3], -r8
   187a4:	andeq	pc, r2, r8, ror lr	; <UNPREDICTABLE>
   187a8:	andeq	ip, r1, sp, asr fp
   187ac:	andeq	ip, r1, r1, ror #23
   187b0:	muleq	r1, r4, fp
   187b4:	strdeq	ip, [r1], -r3
   187b8:	andeq	ip, r1, ip, ror #21
   187bc:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>

000187c0 <UnityFail@@Base>:
   187c0:	push	{r4, r5, r6, lr}
   187c4:	ldr	r5, [pc, #584]	; 18a14 <UnityFail@@Base+0x254>
   187c8:	ldr	r4, [pc, #584]	; 18a18 <UnityFail@@Base+0x258>
   187cc:	ldr	r3, [r5, #32]
   187d0:	cmp	r3, #0
   187d4:	beq	187f4 <UnityFail@@Base+0x34>
   187d8:	ldr	r3, [r4, #-8]
   187dc:	ldr	r2, [r4, #-4]
   187e0:	adds	r3, r3, #1
   187e4:	adc	r2, r2, #0
   187e8:	str	r3, [r4, #-8]
   187ec:	str	r2, [r4, #-4]
   187f0:	pop	{r4, r5, r6, pc}
   187f4:	ldr	r3, [r4]
   187f8:	ldr	r2, [r4, #4]
   187fc:	adds	r3, r3, #1
   18800:	str	r3, [r4]
   18804:	adc	r2, r2, #0
   18808:	ldr	r3, [r5, #36]	; 0x24
   1880c:	str	r2, [r4, #4]
   18810:	cmp	r3, #0
   18814:	popne	{r4, r5, r6, pc}
   18818:	ldr	r3, [r4, #8]
   1881c:	mov	r6, r0
   18820:	ldr	r2, [r4, #12]
   18824:	ldr	r0, [r5]
   18828:	adds	r3, r3, #1
   1882c:	adc	r2, r2, #0
   18830:	str	r3, [r4, #8]
   18834:	str	r2, [r4, #12]
   18838:	bl	15ae0 <UnityPrint@@Base+0x51c>
   1883c:	ldr	r3, [r4, #16]
   18840:	ldr	r2, [r4, #20]
   18844:	adds	r3, r3, #1
   18848:	adc	r2, r2, #0
   1884c:	str	r3, [r4, #16]
   18850:	str	r2, [r4, #20]
   18854:	bl	15ed8 <UnityPrintFail@@Base>
   18858:	cmp	r6, #0
   1885c:	bne	18888 <UnityFail@@Base+0xc8>
   18860:	ldr	r3, [r4, #32]
   18864:	ldr	r2, [r4, #36]	; 0x24
   18868:	adds	r3, r3, #1
   1886c:	adc	r2, r2, #0
   18870:	str	r3, [r4, #32]
   18874:	str	r2, [r4, #36]	; 0x24
   18878:	mov	r1, #1
   1887c:	ldr	r0, [pc, #408]	; 18a1c <UnityFail@@Base+0x25c>
   18880:	str	r1, [r5, #32]
   18884:	bl	11f9c <longjmp@plt>
   18888:	ldr	r3, [r4, #24]
   1888c:	mov	r0, #58	; 0x3a
   18890:	ldr	r2, [r4, #28]
   18894:	adds	r3, r3, #1
   18898:	adc	r2, r2, #0
   1889c:	str	r3, [r4, #24]
   188a0:	str	r2, [r4, #28]
   188a4:	bl	1208c <putchar@plt>
   188a8:	ldr	r3, [r4, #40]	; 0x28
   188ac:	ldr	r2, [r4, #44]	; 0x2c
   188b0:	adds	r3, r3, #1
   188b4:	str	r3, [r4, #40]	; 0x28
   188b8:	adc	r2, r2, #0
   188bc:	ldr	r3, [r5, #8]
   188c0:	str	r2, [r4, #44]	; 0x2c
   188c4:	cmp	r3, #0
   188c8:	beq	18950 <UnityFail@@Base+0x190>
   188cc:	ldr	r3, [r4, #48]	; 0x30
   188d0:	ldr	r2, [r4, #52]	; 0x34
   188d4:	ldr	r0, [pc, #324]	; 18a20 <UnityFail@@Base+0x260>
   188d8:	adds	r3, r3, #1
   188dc:	adc	r2, r2, #0
   188e0:	str	r3, [r4, #48]	; 0x30
   188e4:	str	r2, [r4, #52]	; 0x34
   188e8:	bl	155c4 <UnityPrint@@Base>
   188ec:	ldr	r3, [r4, #56]	; 0x38
   188f0:	ldr	r2, [r4, #60]	; 0x3c
   188f4:	ldr	r0, [r5, #8]
   188f8:	adds	r3, r3, #1
   188fc:	adc	r2, r2, #0
   18900:	str	r3, [r4, #56]	; 0x38
   18904:	str	r2, [r4, #60]	; 0x3c
   18908:	bl	155c4 <UnityPrint@@Base>
   1890c:	ldr	r3, [r5, #12]
   18910:	cmp	r3, #0
   18914:	bne	189b8 <UnityFail@@Base+0x1f8>
   18918:	ldr	r3, [r4, #72]	; 0x48
   1891c:	ldr	r2, [r4, #76]	; 0x4c
   18920:	adds	r3, r3, #1
   18924:	adc	r2, r2, #0
   18928:	str	r3, [r4, #72]	; 0x48
   1892c:	str	r2, [r4, #76]	; 0x4c
   18930:	ldr	r0, [pc, #236]	; 18a24 <UnityFail@@Base+0x264>
   18934:	bl	155c4 <UnityPrint@@Base>
   18938:	ldr	r3, [r4, #96]	; 0x60
   1893c:	ldr	r2, [r4, #100]	; 0x64
   18940:	adds	r3, r3, #1
   18944:	adc	r2, r2, #0
   18948:	str	r3, [r4, #96]	; 0x60
   1894c:	str	r2, [r4, #100]	; 0x64
   18950:	ldrb	r3, [r6]
   18954:	cmp	r3, #32
   18958:	beq	18994 <UnityFail@@Base+0x1d4>
   1895c:	ldr	r3, [r4, #104]	; 0x68
   18960:	mov	r0, #32
   18964:	ldr	r2, [r4, #108]	; 0x6c
   18968:	adds	r3, r3, #1
   1896c:	adc	r2, r2, #0
   18970:	str	r3, [r4, #104]	; 0x68
   18974:	str	r2, [r4, #108]	; 0x6c
   18978:	bl	1208c <putchar@plt>
   1897c:	ldr	r3, [r4, #112]	; 0x70
   18980:	ldr	r2, [r4, #116]	; 0x74
   18984:	adds	r3, r3, #1
   18988:	adc	r2, r2, #0
   1898c:	str	r3, [r4, #112]	; 0x70
   18990:	str	r2, [r4, #116]	; 0x74
   18994:	mov	r0, r6
   18998:	bl	155c4 <UnityPrint@@Base>
   1899c:	ldr	r3, [r4, #120]	; 0x78
   189a0:	ldr	r2, [r4, #124]	; 0x7c
   189a4:	adds	r3, r3, #1
   189a8:	adc	r2, r2, #0
   189ac:	str	r3, [r4, #120]	; 0x78
   189b0:	str	r2, [r4, #124]	; 0x7c
   189b4:	b	18878 <UnityFail@@Base+0xb8>
   189b8:	ldr	r3, [r4, #64]	; 0x40
   189bc:	ldr	r2, [r4, #68]	; 0x44
   189c0:	ldr	r0, [pc, #96]	; 18a28 <UnityFail@@Base+0x268>
   189c4:	adds	r3, r3, #1
   189c8:	adc	r2, r2, #0
   189cc:	str	r3, [r4, #64]	; 0x40
   189d0:	str	r2, [r4, #68]	; 0x44
   189d4:	bl	155c4 <UnityPrint@@Base>
   189d8:	ldr	r3, [r4, #80]	; 0x50
   189dc:	ldr	r2, [r4, #84]	; 0x54
   189e0:	ldr	r0, [r5, #12]
   189e4:	adds	r3, r3, #1
   189e8:	adc	r2, r2, #0
   189ec:	str	r3, [r4, #80]	; 0x50
   189f0:	str	r2, [r4, #84]	; 0x54
   189f4:	bl	155c4 <UnityPrint@@Base>
   189f8:	ldr	r3, [r4, #88]	; 0x58
   189fc:	ldr	r2, [r4, #92]	; 0x5c
   18a00:	adds	r3, r3, #1
   18a04:	adc	r2, r2, #0
   18a08:	str	r3, [r4, #88]	; 0x58
   18a0c:	str	r2, [r4, #92]	; 0x5c
   18a10:	b	18930 <UnityFail@@Base+0x170>
   18a14:	strdeq	r0, [r3], -r8
   18a18:	andeq	pc, r2, r8, lsr pc	; <UNPREDICTABLE>
   18a1c:	andeq	r0, r3, r0, lsr #10
   18a20:	andeq	ip, r1, r5, lsl #22
   18a24:	andeq	ip, r1, r2, lsl #22
   18a28:	andeq	ip, r1, pc, lsl #22

00018a2c <UnityIgnore@@Base>:
   18a2c:	push	{r4, r5, r6, lr}
   18a30:	ldr	r5, [pc, #316]	; 18b74 <UnityIgnore@@Base+0x148>
   18a34:	ldr	r4, [pc, #316]	; 18b78 <UnityIgnore@@Base+0x14c>
   18a38:	ldr	r3, [r5, #32]
   18a3c:	cmp	r3, #0
   18a40:	beq	18a60 <UnityIgnore@@Base+0x34>
   18a44:	ldr	r3, [r4]
   18a48:	ldr	r2, [r4, #4]
   18a4c:	adds	r3, r3, #1
   18a50:	adc	r2, r2, #0
   18a54:	str	r3, [r4]
   18a58:	str	r2, [r4, #4]
   18a5c:	pop	{r4, r5, r6, pc}
   18a60:	ldr	r3, [r4, #8]
   18a64:	ldr	r2, [r4, #12]
   18a68:	adds	r3, r3, #1
   18a6c:	str	r3, [r4, #8]
   18a70:	adc	r2, r2, #0
   18a74:	ldr	r3, [r5, #36]	; 0x24
   18a78:	str	r2, [r4, #12]
   18a7c:	cmp	r3, #0
   18a80:	popne	{r4, r5, r6, pc}
   18a84:	ldr	r3, [r4, #16]
   18a88:	mov	r6, r0
   18a8c:	ldr	r2, [r4, #20]
   18a90:	ldr	r0, [r5]
   18a94:	adds	r3, r3, #1
   18a98:	adc	r2, r2, #0
   18a9c:	str	r3, [r4, #16]
   18aa0:	str	r2, [r4, #20]
   18aa4:	bl	15ae0 <UnityPrint@@Base+0x51c>
   18aa8:	ldr	r3, [r4, #24]
   18aac:	ldr	r2, [r4, #28]
   18ab0:	ldr	r0, [pc, #196]	; 18b7c <UnityIgnore@@Base+0x150>
   18ab4:	adds	r3, r3, #1
   18ab8:	adc	r2, r2, #0
   18abc:	str	r3, [r4, #24]
   18ac0:	str	r2, [r4, #28]
   18ac4:	bl	155c4 <UnityPrint@@Base>
   18ac8:	cmp	r6, #0
   18acc:	bne	18af8 <UnityIgnore@@Base+0xcc>
   18ad0:	ldr	r3, [r4, #40]	; 0x28
   18ad4:	ldr	r2, [r4, #44]	; 0x2c
   18ad8:	adds	r3, r3, #1
   18adc:	adc	r2, r2, #0
   18ae0:	str	r3, [r4, #40]	; 0x28
   18ae4:	str	r2, [r4, #44]	; 0x2c
   18ae8:	mov	r1, #1
   18aec:	ldr	r0, [pc, #140]	; 18b80 <UnityIgnore@@Base+0x154>
   18af0:	str	r1, [r5, #36]	; 0x24
   18af4:	bl	11f9c <longjmp@plt>
   18af8:	ldr	r3, [r4, #32]
   18afc:	mov	r0, #58	; 0x3a
   18b00:	ldr	r2, [r4, #36]	; 0x24
   18b04:	adds	r3, r3, #1
   18b08:	adc	r2, r2, #0
   18b0c:	str	r3, [r4, #32]
   18b10:	str	r2, [r4, #36]	; 0x24
   18b14:	bl	1208c <putchar@plt>
   18b18:	ldr	r3, [r4, #48]	; 0x30
   18b1c:	mov	r0, #32
   18b20:	ldr	r2, [r4, #52]	; 0x34
   18b24:	adds	r3, r3, #1
   18b28:	adc	r2, r2, #0
   18b2c:	str	r3, [r4, #48]	; 0x30
   18b30:	str	r2, [r4, #52]	; 0x34
   18b34:	bl	1208c <putchar@plt>
   18b38:	ldr	r3, [r4, #56]	; 0x38
   18b3c:	mov	r0, r6
   18b40:	ldr	r2, [r4, #60]	; 0x3c
   18b44:	adds	r3, r3, #1
   18b48:	adc	r2, r2, #0
   18b4c:	str	r3, [r4, #56]	; 0x38
   18b50:	str	r2, [r4, #60]	; 0x3c
   18b54:	bl	155c4 <UnityPrint@@Base>
   18b58:	ldr	r3, [r4, #64]	; 0x40
   18b5c:	ldr	r2, [r4, #68]	; 0x44
   18b60:	adds	r3, r3, #1
   18b64:	adc	r2, r2, #0
   18b68:	str	r3, [r4, #64]	; 0x40
   18b6c:	str	r2, [r4, #68]	; 0x44
   18b70:	b	18ae8 <UnityIgnore@@Base+0xbc>
   18b74:	strdeq	r0, [r3], -r8
   18b78:			; <UNDEFINED> instruction: 0x0002ffb8
   18b7c:	strdeq	ip, [r1], -sl
   18b80:	andeq	r0, r3, r0, lsr #10

00018b84 <setUp@@Base>:
   18b84:	ldr	r2, [pc, #24]	; 18ba4 <setUp@@Base+0x20>
   18b88:	ldr	r3, [r2, #-8]
   18b8c:	ldr	r1, [r2, #-4]
   18b90:	adds	r3, r3, #1
   18b94:	adc	r1, r1, #0
   18b98:	str	r3, [r2, #-8]
   18b9c:	str	r1, [r2, #-4]
   18ba0:	bx	lr
   18ba4:	andeq	r0, r3, r8

00018ba8 <tearDown@@Base>:
   18ba8:	ldr	r2, [pc, #24]	; 18bc8 <tearDown@@Base+0x20>
   18bac:	ldr	r3, [r2]
   18bb0:	ldr	r1, [r2, #4]
   18bb4:	adds	r3, r3, #1
   18bb8:	adc	r1, r1, #0
   18bbc:	str	r3, [r2]
   18bc0:	str	r1, [r2, #4]
   18bc4:	bx	lr
   18bc8:	andeq	r0, r3, r8

00018bcc <UnityDefaultTestRun@@Base>:
   18bcc:	push	{r0, r1, r4, lr}
   18bd0:	str	r0, [sp, #4]
   18bd4:	ldr	r0, [pc, #348]	; 18d38 <UnityDefaultTestRun@@Base+0x16c>
   18bd8:	ldmdb	r0, {r3, ip}
   18bdc:	adds	r3, r3, #1
   18be0:	adc	ip, ip, #0
   18be4:	stmdb	r0, {r3, ip}
   18be8:	ldr	r0, [pc, #332]	; 18d3c <UnityDefaultTestRun@@Base+0x170>
   18bec:	ldr	r3, [r0, #20]
   18bf0:	add	r0, r0, #40	; 0x28
   18bf4:	str	r1, [r0, #-36]	; 0xffffffdc
   18bf8:	add	r3, r3, #1
   18bfc:	strd	r2, [r0, #-24]	; 0xffffffe8
   18c00:	mov	r3, #0
   18c04:	str	r3, [r0, #-32]	; 0xffffffe0
   18c08:	str	r3, [r0, #-28]	; 0xffffffe4
   18c0c:	bl	11fa8 <_setjmp@plt>
   18c10:	ldr	r4, [pc, #288]	; 18d38 <UnityDefaultTestRun@@Base+0x16c>
   18c14:	ldr	r3, [r4]
   18c18:	ldr	r2, [r4, #4]
   18c1c:	adds	r3, r3, #1
   18c20:	adc	r2, r2, #0
   18c24:	cmp	r0, #0
   18c28:	str	r3, [r4]
   18c2c:	str	r2, [r4, #4]
   18c30:	bne	18c88 <UnityDefaultTestRun@@Base+0xbc>
   18c34:	ldr	r3, [r4, #8]
   18c38:	ldr	r2, [r4, #12]
   18c3c:	adds	r3, r3, #1
   18c40:	adc	r2, r2, #0
   18c44:	str	r3, [r4, #8]
   18c48:	str	r2, [r4, #12]
   18c4c:	bl	18b84 <setUp@@Base>
   18c50:	ldr	r3, [r4, #16]
   18c54:	ldr	r2, [r4, #20]
   18c58:	adds	r3, r3, #1
   18c5c:	adc	r2, r2, #0
   18c60:	str	r3, [r4, #16]
   18c64:	ldr	r3, [sp, #4]
   18c68:	str	r2, [r4, #20]
   18c6c:	blx	r3
   18c70:	ldr	r3, [r4, #24]
   18c74:	ldr	r2, [r4, #28]
   18c78:	adds	r3, r3, #1
   18c7c:	adc	r2, r2, #0
   18c80:	str	r3, [r4, #24]
   18c84:	str	r2, [r4, #28]
   18c88:	ldr	r0, [pc, #176]	; 18d40 <UnityDefaultTestRun@@Base+0x174>
   18c8c:	bl	11fa8 <_setjmp@plt>
   18c90:	ldr	r4, [pc, #160]	; 18d38 <UnityDefaultTestRun@@Base+0x16c>
   18c94:	ldr	r3, [r4, #32]
   18c98:	ldr	r2, [r4, #36]	; 0x24
   18c9c:	adds	r3, r3, #1
   18ca0:	adc	r2, r2, #0
   18ca4:	cmp	r0, #0
   18ca8:	str	r3, [r4, #32]
   18cac:	str	r2, [r4, #36]	; 0x24
   18cb0:	bne	18d10 <UnityDefaultTestRun@@Base+0x144>
   18cb4:	ldr	r3, [r4, #40]	; 0x28
   18cb8:	ldr	r2, [r4, #44]	; 0x2c
   18cbc:	adds	r3, r3, #1
   18cc0:	str	r3, [r4, #40]	; 0x28
   18cc4:	adc	r2, r2, #0
   18cc8:	ldr	r3, [pc, #108]	; 18d3c <UnityDefaultTestRun@@Base+0x170>
   18ccc:	str	r2, [r4, #44]	; 0x2c
   18cd0:	ldr	r3, [r3, #36]	; 0x24
   18cd4:	cmp	r3, #0
   18cd8:	bne	18d10 <UnityDefaultTestRun@@Base+0x144>
   18cdc:	ldr	r3, [r4, #48]	; 0x30
   18ce0:	ldr	r2, [r4, #52]	; 0x34
   18ce4:	adds	r3, r3, #1
   18ce8:	adc	r2, r2, #0
   18cec:	str	r3, [r4, #48]	; 0x30
   18cf0:	str	r2, [r4, #52]	; 0x34
   18cf4:	bl	18ba8 <tearDown@@Base>
   18cf8:	ldr	r3, [r4, #56]	; 0x38
   18cfc:	ldr	r2, [r4, #60]	; 0x3c
   18d00:	adds	r3, r3, #1
   18d04:	adc	r2, r2, #0
   18d08:	str	r3, [r4, #56]	; 0x38
   18d0c:	str	r2, [r4, #60]	; 0x3c
   18d10:	bl	15f70 <UnityConcludeTest@@Base>
   18d14:	ldr	r2, [pc, #28]	; 18d38 <UnityDefaultTestRun@@Base+0x16c>
   18d18:	ldr	r3, [r2, #64]	; 0x40
   18d1c:	ldr	r1, [r2, #68]	; 0x44
   18d20:	adds	r3, r3, #1
   18d24:	adc	r1, r1, #0
   18d28:	str	r3, [r2, #64]	; 0x40
   18d2c:	str	r1, [r2, #68]	; 0x44
   18d30:	add	sp, sp, #8
   18d34:	pop	{r4, pc}
   18d38:	andeq	r0, r3, r8, lsl r0
   18d3c:	strdeq	r0, [r3], -r8
   18d40:	andeq	r0, r3, r0, lsr #10

00018d44 <UnityBegin@@Base>:
   18d44:	ldr	r2, [pc, #68]	; 18d90 <UnityBegin@@Base+0x4c>
   18d48:	ldr	r3, [r2, #-8]
   18d4c:	ldr	r1, [r2, #-4]
   18d50:	adds	r3, r3, #1
   18d54:	str	r3, [r2, #-8]
   18d58:	adc	r1, r1, #0
   18d5c:	ldr	r3, [pc, #48]	; 18d94 <UnityBegin@@Base+0x50>
   18d60:	str	r1, [r2, #-4]
   18d64:	mov	r2, #0
   18d68:	stm	r3, {r0, r2}
   18d6c:	str	r2, [r3, #8]
   18d70:	str	r2, [r3, #12]
   18d74:	str	r2, [r3, #16]
   18d78:	str	r2, [r3, #20]
   18d7c:	str	r2, [r3, #24]
   18d80:	str	r2, [r3, #28]
   18d84:	str	r2, [r3, #32]
   18d88:	str	r2, [r3, #36]	; 0x24
   18d8c:	bx	lr
   18d90:	andeq	r0, r3, r8, rrx
   18d94:	strdeq	r0, [r3], -r8

00018d98 <UnityEnd@@Base>:
   18d98:	push	{r4, r5, r6, lr}
   18d9c:	mov	r0, #10
   18da0:	ldr	r4, [pc, #476]	; 18f84 <UnityEnd@@Base+0x1ec>
   18da4:	ldr	r5, [pc, #476]	; 18f88 <UnityEnd@@Base+0x1f0>
   18da8:	ldr	r3, [r4]
   18dac:	ldr	r2, [r4, #4]
   18db0:	adds	r3, r3, #1
   18db4:	adc	r2, r2, #0
   18db8:	str	r3, [r4]
   18dbc:	str	r2, [r4, #4]
   18dc0:	bl	1208c <putchar@plt>
   18dc4:	ldr	r3, [r4, #8]
   18dc8:	ldr	r2, [r4, #12]
   18dcc:	ldr	r0, [pc, #440]	; 18f8c <UnityEnd@@Base+0x1f4>
   18dd0:	adds	r3, r3, #1
   18dd4:	adc	r2, r2, #0
   18dd8:	str	r3, [r4, #8]
   18ddc:	str	r2, [r4, #12]
   18de0:	bl	155c4 <UnityPrint@@Base>
   18de4:	ldr	r3, [r4, #16]
   18de8:	mov	r0, #10
   18dec:	ldr	r2, [r4, #20]
   18df0:	adds	r3, r3, #1
   18df4:	adc	r2, r2, #0
   18df8:	str	r3, [r4, #16]
   18dfc:	str	r2, [r4, #20]
   18e00:	bl	1208c <putchar@plt>
   18e04:	ldr	r3, [r4, #24]
   18e08:	ldr	r2, [r4, #28]
   18e0c:	ldr	r0, [r5, #20]
   18e10:	adds	r3, r3, #1
   18e14:	adc	r2, r2, #0
   18e18:	str	r3, [r4, #24]
   18e1c:	str	r2, [r4, #28]
   18e20:	bl	14f5c <UnityPrintNumber@@Base>
   18e24:	ldr	r3, [r4, #32]
   18e28:	ldr	r2, [r4, #36]	; 0x24
   18e2c:	ldr	r0, [pc, #348]	; 18f90 <UnityEnd@@Base+0x1f8>
   18e30:	adds	r3, r3, #1
   18e34:	adc	r2, r2, #0
   18e38:	str	r3, [r4, #32]
   18e3c:	str	r2, [r4, #36]	; 0x24
   18e40:	bl	155c4 <UnityPrint@@Base>
   18e44:	ldr	r3, [r4, #40]	; 0x28
   18e48:	ldr	r2, [r4, #44]	; 0x2c
   18e4c:	ldr	r0, [r5, #24]
   18e50:	adds	r3, r3, #1
   18e54:	adc	r2, r2, #0
   18e58:	str	r3, [r4, #40]	; 0x28
   18e5c:	str	r2, [r4, #44]	; 0x2c
   18e60:	bl	14f5c <UnityPrintNumber@@Base>
   18e64:	ldr	r3, [r4, #48]	; 0x30
   18e68:	ldr	r2, [r4, #52]	; 0x34
   18e6c:	ldr	r0, [pc, #288]	; 18f94 <UnityEnd@@Base+0x1fc>
   18e70:	adds	r3, r3, #1
   18e74:	adc	r2, r2, #0
   18e78:	str	r3, [r4, #48]	; 0x30
   18e7c:	str	r2, [r4, #52]	; 0x34
   18e80:	bl	155c4 <UnityPrint@@Base>
   18e84:	ldr	r3, [r4, #56]	; 0x38
   18e88:	ldr	r2, [r4, #60]	; 0x3c
   18e8c:	ldr	r0, [r5, #28]
   18e90:	adds	r3, r3, #1
   18e94:	adc	r2, r2, #0
   18e98:	str	r3, [r4, #56]	; 0x38
   18e9c:	str	r2, [r4, #60]	; 0x3c
   18ea0:	bl	14f5c <UnityPrintNumber@@Base>
   18ea4:	ldr	r3, [r4, #64]	; 0x40
   18ea8:	ldr	r2, [r4, #68]	; 0x44
   18eac:	ldr	r0, [pc, #228]	; 18f98 <UnityEnd@@Base+0x200>
   18eb0:	adds	r3, r3, #1
   18eb4:	adc	r2, r2, #0
   18eb8:	str	r3, [r4, #64]	; 0x40
   18ebc:	str	r2, [r4, #68]	; 0x44
   18ec0:	bl	155c4 <UnityPrint@@Base>
   18ec4:	ldr	r3, [r4, #72]	; 0x48
   18ec8:	mov	r0, #10
   18ecc:	ldr	r2, [r4, #76]	; 0x4c
   18ed0:	adds	r3, r3, #1
   18ed4:	adc	r2, r2, #0
   18ed8:	str	r3, [r4, #72]	; 0x48
   18edc:	str	r2, [r4, #76]	; 0x4c
   18ee0:	bl	1208c <putchar@plt>
   18ee4:	ldr	r3, [r5, #24]
   18ee8:	cmp	r3, #0
   18eec:	bne	18f4c <UnityEnd@@Base+0x1b4>
   18ef0:	ldr	r3, [r4, #80]	; 0x50
   18ef4:	ldr	r2, [r4, #84]	; 0x54
   18ef8:	adds	r3, r3, #1
   18efc:	adc	r2, r2, #0
   18f00:	str	r3, [r4, #80]	; 0x50
   18f04:	str	r2, [r4, #84]	; 0x54
   18f08:	bl	15f24 <UnityPrintOk@@Base>
   18f0c:	ldr	r3, [r4, #96]	; 0x60
   18f10:	ldr	r2, [r4, #100]	; 0x64
   18f14:	adds	r3, r3, #1
   18f18:	adc	r2, r2, #0
   18f1c:	str	r3, [r4, #96]	; 0x60
   18f20:	str	r2, [r4, #100]	; 0x64
   18f24:	mov	r0, #10
   18f28:	bl	1208c <putchar@plt>
   18f2c:	ldr	r3, [r4, #112]	; 0x70
   18f30:	ldr	r2, [r4, #116]	; 0x74
   18f34:	ldr	r0, [r5, #24]
   18f38:	adds	r3, r3, #1
   18f3c:	adc	r2, r2, #0
   18f40:	str	r3, [r4, #112]	; 0x70
   18f44:	str	r2, [r4, #116]	; 0x74
   18f48:	pop	{r4, r5, r6, pc}
   18f4c:	ldr	r3, [r4, #88]	; 0x58
   18f50:	ldr	r2, [r4, #92]	; 0x5c
   18f54:	adds	r3, r3, #1
   18f58:	adc	r2, r2, #0
   18f5c:	str	r3, [r4, #88]	; 0x58
   18f60:	str	r2, [r4, #92]	; 0x5c
   18f64:	bl	15ed8 <UnityPrintFail@@Base>
   18f68:	ldr	r3, [r4, #104]	; 0x68
   18f6c:	ldr	r2, [r4, #108]	; 0x6c
   18f70:	adds	r3, r3, #1
   18f74:	adc	r2, r2, #0
   18f78:	str	r3, [r4, #104]	; 0x68
   18f7c:	str	r2, [r4, #108]	; 0x6c
   18f80:	b	18f24 <UnityEnd@@Base+0x18c>
   18f84:	andeq	r0, r3, r8, rrx
   18f88:	strdeq	r0, [r3], -r8
   18f8c:	andeq	ip, r1, r1, lsl #24
   18f90:	andeq	ip, r1, r9, lsl ip
   18f94:	andeq	ip, r1, r1, lsr #24
   18f98:	andeq	ip, r1, ip, lsr #24

00018f9c <init_token_int_type@@Base>:
   18f9c:	ldr	r2, [pc, #32]	; 18fc4 <init_token_int_type@@Base+0x28>
   18fa0:	ldr	r3, [r2]
   18fa4:	ldr	r1, [r2, #4]
   18fa8:	adds	r3, r3, #1
   18fac:	adc	r1, r1, #0
   18fb0:	str	r3, [r2]
   18fb4:	mov	r3, #0
   18fb8:	str	r3, [r0]
   18fbc:	str	r1, [r2, #4]
   18fc0:	bx	lr
   18fc4:	andeq	r0, r3, r0, ror #1

00018fc8 <init_token_int_value@@Base>:
   18fc8:	ldr	r2, [pc, #36]	; 18ff4 <init_token_int_value@@Base+0x2c>
   18fcc:	str	r1, [r0, #4]
   18fd0:	ldr	r3, [r2, #8]
   18fd4:	ldr	ip, [r2, #12]
   18fd8:	adds	r3, r3, #1
   18fdc:	adc	ip, ip, #0
   18fe0:	str	r3, [r2, #8]
   18fe4:	mov	r3, #1
   18fe8:	str	r3, [r0]
   18fec:	str	ip, [r2, #12]
   18ff0:	bx	lr
   18ff4:	andeq	r0, r3, r0, ror #1

00018ff8 <init_token_function@@Base>:
   18ff8:	ldr	r2, [pc, #36]	; 19024 <init_token_function@@Base+0x2c>
   18ffc:	str	r1, [r0, #4]
   19000:	ldr	r3, [r2, #16]
   19004:	ldr	ip, [r2, #20]
   19008:	adds	r3, r3, #1
   1900c:	adc	ip, ip, #0
   19010:	str	r3, [r2, #16]
   19014:	mov	r3, #2
   19018:	str	r3, [r0]
   1901c:	str	ip, [r2, #20]
   19020:	bx	lr
   19024:	andeq	r0, r3, r0, ror #1

00019028 <init_token_opar@@Base>:
   19028:	ldr	r2, [pc, #32]	; 19050 <init_token_opar@@Base+0x28>
   1902c:	ldr	r3, [r2, #24]
   19030:	ldr	r1, [r2, #28]
   19034:	adds	r3, r3, #1
   19038:	adc	r1, r1, #0
   1903c:	str	r3, [r2, #24]
   19040:	mov	r3, #3
   19044:	str	r3, [r0]
   19048:	str	r1, [r2, #28]
   1904c:	bx	lr
   19050:	andeq	r0, r3, r0, ror #1

00019054 <init_token_cpar@@Base>:
   19054:	ldr	r2, [pc, #32]	; 1907c <init_token_cpar@@Base+0x28>
   19058:	ldr	r3, [r2, #32]
   1905c:	ldr	r1, [r2, #36]	; 0x24
   19060:	adds	r3, r3, #1
   19064:	adc	r1, r1, #0
   19068:	str	r3, [r2, #32]
   1906c:	mov	r3, #4
   19070:	str	r3, [r0]
   19074:	str	r1, [r2, #36]	; 0x24
   19078:	bx	lr
   1907c:	andeq	r0, r3, r0, ror #1

00019080 <init_token_obra@@Base>:
   19080:	ldr	r2, [pc, #32]	; 190a8 <init_token_obra@@Base+0x28>
   19084:	ldr	r3, [r2, #40]	; 0x28
   19088:	ldr	r1, [r2, #44]	; 0x2c
   1908c:	adds	r3, r3, #1
   19090:	adc	r1, r1, #0
   19094:	str	r3, [r2, #40]	; 0x28
   19098:	mov	r3, #5
   1909c:	str	r3, [r0]
   190a0:	str	r1, [r2, #44]	; 0x2c
   190a4:	bx	lr
   190a8:	andeq	r0, r3, r0, ror #1

000190ac <init_token_cbra@@Base>:
   190ac:	ldr	r2, [pc, #32]	; 190d4 <init_token_cbra@@Base+0x28>
   190b0:	ldr	r3, [r2, #48]	; 0x30
   190b4:	ldr	r1, [r2, #52]	; 0x34
   190b8:	adds	r3, r3, #1
   190bc:	adc	r1, r1, #0
   190c0:	str	r3, [r2, #48]	; 0x30
   190c4:	mov	r3, #6
   190c8:	str	r3, [r0]
   190cc:	str	r1, [r2, #52]	; 0x34
   190d0:	bx	lr
   190d4:	andeq	r0, r3, r0, ror #1

000190d8 <init_token_return@@Base>:
   190d8:	ldr	r2, [pc, #32]	; 19100 <init_token_return@@Base+0x28>
   190dc:	ldr	r3, [r2, #56]	; 0x38
   190e0:	ldr	r1, [r2, #60]	; 0x3c
   190e4:	adds	r3, r3, #1
   190e8:	adc	r1, r1, #0
   190ec:	str	r3, [r2, #56]	; 0x38
   190f0:	mov	r3, #7
   190f4:	str	r3, [r0]
   190f8:	str	r1, [r2, #60]	; 0x3c
   190fc:	bx	lr
   19100:	andeq	r0, r3, r0, ror #1

00019104 <init_token_semicolon@@Base>:
   19104:	ldr	r2, [pc, #32]	; 1912c <init_token_semicolon@@Base+0x28>
   19108:	ldr	r3, [r2, #64]	; 0x40
   1910c:	ldr	r1, [r2, #68]	; 0x44
   19110:	adds	r3, r3, #1
   19114:	adc	r1, r1, #0
   19118:	str	r3, [r2, #64]	; 0x40
   1911c:	mov	r3, #8
   19120:	str	r3, [r0]
   19124:	str	r1, [r2, #68]	; 0x44
   19128:	bx	lr
   1912c:	andeq	r0, r3, r0, ror #1

00019130 <init_token_eof@@Base>:
   19130:	ldr	r2, [pc, #32]	; 19158 <init_token_eof@@Base+0x28>
   19134:	ldr	r3, [r2, #72]	; 0x48
   19138:	ldr	r1, [r2, #76]	; 0x4c
   1913c:	adds	r3, r3, #1
   19140:	adc	r1, r1, #0
   19144:	str	r3, [r2, #72]	; 0x48
   19148:	mov	r3, #9
   1914c:	str	r3, [r0]
   19150:	str	r1, [r2, #76]	; 0x4c
   19154:	bx	lr
   19158:	andeq	r0, r3, r0, ror #1

0001915c <init_token_if@@Base>:
   1915c:	ldr	r2, [pc, #32]	; 19184 <init_token_if@@Base+0x28>
   19160:	ldr	r3, [r2, #80]	; 0x50
   19164:	ldr	r1, [r2, #84]	; 0x54
   19168:	adds	r3, r3, #1
   1916c:	adc	r1, r1, #0
   19170:	str	r3, [r2, #80]	; 0x50
   19174:	mov	r3, #10
   19178:	str	r3, [r0]
   1917c:	str	r1, [r2, #84]	; 0x54
   19180:	bx	lr
   19184:	andeq	r0, r3, r0, ror #1

00019188 <init_token_else@@Base>:
   19188:	ldr	r2, [pc, #32]	; 191b0 <init_token_else@@Base+0x28>
   1918c:	ldr	r3, [r2, #88]	; 0x58
   19190:	ldr	r1, [r2, #92]	; 0x5c
   19194:	adds	r3, r3, #1
   19198:	adc	r1, r1, #0
   1919c:	str	r3, [r2, #88]	; 0x58
   191a0:	mov	r3, #11
   191a4:	str	r3, [r0]
   191a8:	str	r1, [r2, #92]	; 0x5c
   191ac:	bx	lr
   191b0:	andeq	r0, r3, r0, ror #1

000191b4 <init_token_boolean_op@@Base>:
   191b4:	ldr	r2, [pc, #36]	; 191e0 <init_token_boolean_op@@Base+0x2c>
   191b8:	str	r1, [r0, #4]
   191bc:	ldr	r3, [r2, #96]	; 0x60
   191c0:	ldr	ip, [r2, #100]	; 0x64
   191c4:	adds	r3, r3, #1
   191c8:	adc	ip, ip, #0
   191cc:	str	r3, [r2, #96]	; 0x60
   191d0:	mov	r3, #12
   191d4:	str	r3, [r0]
   191d8:	str	ip, [r2, #100]	; 0x64
   191dc:	bx	lr
   191e0:	andeq	r0, r3, r0, ror #1

000191e4 <free_token_int_type@@Base>:
   191e4:	ldr	r2, [pc, #24]	; 19204 <free_token_int_type@@Base+0x20>
   191e8:	ldr	r3, [r2, #104]	; 0x68
   191ec:	ldr	r1, [r2, #108]	; 0x6c
   191f0:	adds	r3, r3, #1
   191f4:	adc	r1, r1, #0
   191f8:	str	r3, [r2, #104]	; 0x68
   191fc:	str	r1, [r2, #108]	; 0x6c
   19200:	b	11fb4 <free@plt>
   19204:	andeq	r0, r3, r0, ror #1

00019208 <free_token_int_value@@Base>:
   19208:	ldr	r2, [pc, #24]	; 19228 <free_token_int_value@@Base+0x20>
   1920c:	ldr	r3, [r2, #112]	; 0x70
   19210:	ldr	r1, [r2, #116]	; 0x74
   19214:	adds	r3, r3, #1
   19218:	adc	r1, r1, #0
   1921c:	str	r3, [r2, #112]	; 0x70
   19220:	str	r1, [r2, #116]	; 0x74
   19224:	b	11fb4 <free@plt>
   19228:	andeq	r0, r3, r0, ror #1

0001922c <free_token_function@@Base>:
   1922c:	ldr	r2, [pc, #24]	; 1924c <free_token_function@@Base+0x20>
   19230:	ldr	r3, [r2, #120]	; 0x78
   19234:	ldr	r1, [r2, #124]	; 0x7c
   19238:	adds	r3, r3, #1
   1923c:	adc	r1, r1, #0
   19240:	str	r3, [r2, #120]	; 0x78
   19244:	str	r1, [r2, #124]	; 0x7c
   19248:	b	11fb4 <free@plt>
   1924c:	andeq	r0, r3, r0, ror #1

00019250 <free_token_opar@@Base>:
   19250:	ldr	r2, [pc, #24]	; 19270 <free_token_opar@@Base+0x20>
   19254:	ldr	r3, [r2, #128]	; 0x80
   19258:	ldr	r1, [r2, #132]	; 0x84
   1925c:	adds	r3, r3, #1
   19260:	adc	r1, r1, #0
   19264:	str	r3, [r2, #128]	; 0x80
   19268:	str	r1, [r2, #132]	; 0x84
   1926c:	b	11fb4 <free@plt>
   19270:	andeq	r0, r3, r0, ror #1

00019274 <free_token_cpar@@Base>:
   19274:	ldr	r2, [pc, #24]	; 19294 <free_token_cpar@@Base+0x20>
   19278:	ldr	r3, [r2, #136]	; 0x88
   1927c:	ldr	r1, [r2, #140]	; 0x8c
   19280:	adds	r3, r3, #1
   19284:	adc	r1, r1, #0
   19288:	str	r3, [r2, #136]	; 0x88
   1928c:	str	r1, [r2, #140]	; 0x8c
   19290:	b	11fb4 <free@plt>
   19294:	andeq	r0, r3, r0, ror #1

00019298 <free_token_obra@@Base>:
   19298:	ldr	r2, [pc, #24]	; 192b8 <free_token_obra@@Base+0x20>
   1929c:	ldr	r3, [r2, #144]	; 0x90
   192a0:	ldr	r1, [r2, #148]	; 0x94
   192a4:	adds	r3, r3, #1
   192a8:	adc	r1, r1, #0
   192ac:	str	r3, [r2, #144]	; 0x90
   192b0:	str	r1, [r2, #148]	; 0x94
   192b4:	b	11fb4 <free@plt>
   192b8:	andeq	r0, r3, r0, ror #1

000192bc <free_token_cbra@@Base>:
   192bc:	ldr	r2, [pc, #24]	; 192dc <free_token_cbra@@Base+0x20>
   192c0:	ldr	r3, [r2, #152]	; 0x98
   192c4:	ldr	r1, [r2, #156]	; 0x9c
   192c8:	adds	r3, r3, #1
   192cc:	adc	r1, r1, #0
   192d0:	str	r3, [r2, #152]	; 0x98
   192d4:	str	r1, [r2, #156]	; 0x9c
   192d8:	b	11fb4 <free@plt>
   192dc:	andeq	r0, r3, r0, ror #1

000192e0 <free_token_return@@Base>:
   192e0:	ldr	r2, [pc, #24]	; 19300 <free_token_return@@Base+0x20>
   192e4:	ldr	r3, [r2, #160]	; 0xa0
   192e8:	ldr	r1, [r2, #164]	; 0xa4
   192ec:	adds	r3, r3, #1
   192f0:	adc	r1, r1, #0
   192f4:	str	r3, [r2, #160]	; 0xa0
   192f8:	str	r1, [r2, #164]	; 0xa4
   192fc:	b	11fb4 <free@plt>
   19300:	andeq	r0, r3, r0, ror #1

00019304 <free_token_semicolon@@Base>:
   19304:	ldr	r2, [pc, #24]	; 19324 <free_token_semicolon@@Base+0x20>
   19308:	ldr	r3, [r2, #168]	; 0xa8
   1930c:	ldr	r1, [r2, #172]	; 0xac
   19310:	adds	r3, r3, #1
   19314:	adc	r1, r1, #0
   19318:	str	r3, [r2, #168]	; 0xa8
   1931c:	str	r1, [r2, #172]	; 0xac
   19320:	b	11fb4 <free@plt>
   19324:	andeq	r0, r3, r0, ror #1

00019328 <free_token_eof@@Base>:
   19328:	ldr	r2, [pc, #24]	; 19348 <free_token_eof@@Base+0x20>
   1932c:	ldr	r3, [r2, #176]	; 0xb0
   19330:	ldr	r1, [r2, #180]	; 0xb4
   19334:	adds	r3, r3, #1
   19338:	adc	r1, r1, #0
   1933c:	str	r3, [r2, #176]	; 0xb0
   19340:	str	r1, [r2, #180]	; 0xb4
   19344:	b	11fb4 <free@plt>
   19348:	andeq	r0, r3, r0, ror #1

0001934c <free_token_if@@Base>:
   1934c:	ldr	r2, [pc, #24]	; 1936c <free_token_if@@Base+0x20>
   19350:	ldr	r3, [r2, #184]	; 0xb8
   19354:	ldr	r1, [r2, #188]	; 0xbc
   19358:	adds	r3, r3, #1
   1935c:	adc	r1, r1, #0
   19360:	str	r3, [r2, #184]	; 0xb8
   19364:	str	r1, [r2, #188]	; 0xbc
   19368:	b	11fb4 <free@plt>
   1936c:	andeq	r0, r3, r0, ror #1

00019370 <free_token_else@@Base>:
   19370:	ldr	r2, [pc, #24]	; 19390 <free_token_else@@Base+0x20>
   19374:	ldr	r3, [r2, #192]	; 0xc0
   19378:	ldr	r1, [r2, #196]	; 0xc4
   1937c:	adds	r3, r3, #1
   19380:	adc	r1, r1, #0
   19384:	str	r3, [r2, #192]	; 0xc0
   19388:	str	r1, [r2, #196]	; 0xc4
   1938c:	b	11fb4 <free@plt>
   19390:	andeq	r0, r3, r0, ror #1

00019394 <free_token_boolean_op@@Base>:
   19394:	push	{r4, lr}
   19398:	mov	r4, r0
   1939c:	ldr	r0, [r0, #4]
   193a0:	ldr	r3, [pc, #72]	; 193f0 <free_token_boolean_op@@Base+0x5c>
   193a4:	cmp	r0, #0
   193a8:	bne	193d0 <free_token_boolean_op@@Base+0x3c>
   193ac:	ldr	r2, [r3, #208]	; 0xd0
   193b0:	ldr	r1, [r3, #212]	; 0xd4
   193b4:	adds	r2, r2, #1
   193b8:	adc	r1, r1, #0
   193bc:	str	r2, [r3, #208]	; 0xd0
   193c0:	str	r1, [r3, #212]	; 0xd4
   193c4:	mov	r0, r4
   193c8:	pop	{r4, lr}
   193cc:	b	11fb4 <free@plt>
   193d0:	ldr	r2, [r3, #200]	; 0xc8
   193d4:	ldr	r1, [r3, #204]	; 0xcc
   193d8:	adds	r2, r2, #1
   193dc:	adc	r1, r1, #0
   193e0:	str	r2, [r3, #200]	; 0xc8
   193e4:	str	r1, [r3, #204]	; 0xcc
   193e8:	bl	11fb4 <free@plt>
   193ec:	b	193c4 <free_token_boolean_op@@Base+0x30>
   193f0:	andeq	r0, r3, r0, ror #1

000193f4 <init_lexer@@Base>:
   193f4:	ldr	r2, [pc, #32]	; 1941c <init_lexer@@Base+0x28>
   193f8:	str	r1, [r0]
   193fc:	ldm	r2, {r3, ip}
   19400:	adds	r3, r3, #1
   19404:	adc	ip, ip, #0
   19408:	stm	r2, {r3, ip}
   1940c:	mov	r3, #0
   19410:	str	r3, [r0, #4]
   19414:	str	r3, [r0, #8]
   19418:	bx	lr
   1941c:			; <UNDEFINED> instruction: 0x000301b8

00019420 <destroy_lexer@@Base>:
   19420:	ldr	r0, [r0, #4]
   19424:	ldr	r3, [pc, #60]	; 19468 <destroy_lexer@@Base+0x48>
   19428:	cmp	r0, #0
   1942c:	bne	1944c <destroy_lexer@@Base+0x2c>
   19430:	ldr	r2, [r3, #16]
   19434:	ldr	r1, [r3, #20]
   19438:	adds	r2, r2, #1
   1943c:	adc	r1, r1, #0
   19440:	str	r2, [r3, #16]
   19444:	str	r1, [r3, #20]
   19448:	bx	lr
   1944c:	ldr	r2, [r3, #8]
   19450:	ldr	r1, [r3, #12]
   19454:	adds	r2, r2, #1
   19458:	adc	r1, r1, #0
   1945c:	str	r2, [r3, #8]
   19460:	str	r1, [r3, #12]
   19464:	b	11fb4 <free@plt>
   19468:			; <UNDEFINED> instruction: 0x000301b8

0001946c <free_stack_base@@Base>:
   1946c:	ldr	r2, [pc, #24]	; 1948c <free_stack_base@@Base+0x20>
   19470:	ldr	r3, [r2, #24]
   19474:	ldr	r1, [r2, #28]
   19478:	adds	r3, r3, #1
   1947c:	adc	r1, r1, #0
   19480:	str	r3, [r2, #24]
   19484:	str	r1, [r2, #28]
   19488:	b	11fb4 <free@plt>
   1948c:			; <UNDEFINED> instruction: 0x000301b8

00019490 <push_back@@Base>:
   19490:	ldr	r2, [pc, #56]	; 194d0 <push_back@@Base+0x40>
   19494:	push	{r4, r5, r6, lr}
   19498:	mov	r4, r0
   1949c:	mov	r5, r1
   194a0:	ldr	r3, [r2, #32]
   194a4:	ldr	r0, [r2, #36]	; 0x24
   194a8:	adds	r3, r3, #1
   194ac:	adc	r0, r0, #0
   194b0:	str	r3, [r2, #32]
   194b4:	str	r0, [r2, #36]	; 0x24
   194b8:	mov	r0, #8
   194bc:	bl	12014 <malloc@plt>
   194c0:	ldr	r3, [r4, #4]
   194c4:	str	r0, [r4, #4]
   194c8:	stm	r0, {r3, r5}
   194cc:	pop	{r4, r5, r6, pc}
   194d0:			; <UNDEFINED> instruction: 0x000301b8

000194d4 <get_char@@Base>:
   194d4:	ldr	r2, [pc, #44]	; 19508 <get_char@@Base+0x34>
   194d8:	ldr	r3, [r2, #40]	; 0x28
   194dc:	ldr	r1, [r2, #44]	; 0x2c
   194e0:	adds	r3, r3, #1
   194e4:	adc	r1, r1, #0
   194e8:	str	r3, [r2, #40]	; 0x28
   194ec:	ldr	r3, [r0, #8]
   194f0:	str	r1, [r2, #44]	; 0x2c
   194f4:	ldr	r2, [r0]
   194f8:	add	r1, r3, #1
   194fc:	str	r1, [r0, #8]
   19500:	ldrb	r0, [r2, r3]
   19504:	bx	lr
   19508:			; <UNDEFINED> instruction: 0x000301b8

0001950c <push_back_chars@@Base>:
   1950c:	ldr	r2, [r0, #8]
   19510:	push	{r4, lr}
   19514:	ldr	r4, [pc, #112]	; 1958c <push_back_chars@@Base+0x80>
   19518:	cmp	r2, r1
   1951c:	bcc	19544 <push_back_chars@@Base+0x38>
   19520:	ldr	r3, [r4, #48]	; 0x30
   19524:	sub	r2, r2, r1
   19528:	ldr	ip, [r4, #52]	; 0x34
   1952c:	str	r2, [r0, #8]
   19530:	adds	r3, r3, #1
   19534:	adc	ip, ip, #0
   19538:	str	r3, [r4, #48]	; 0x30
   1953c:	str	ip, [r4, #52]	; 0x34
   19540:	pop	{r4, pc}
   19544:	ldr	r3, [r4, #56]	; 0x38
   19548:	ldr	r2, [r4, #60]	; 0x3c
   1954c:	ldr	r0, [pc, #60]	; 19590 <push_back_chars@@Base+0x84>
   19550:	adds	r3, r3, #1
   19554:	str	r3, [r4, #56]	; 0x38
   19558:	adc	r2, r2, #0
   1955c:	ldr	r3, [pc, #48]	; 19594 <push_back_chars@@Base+0x88>
   19560:	str	r2, [r4, #60]	; 0x3c
   19564:	ldr	r1, [r3]
   19568:	bl	120f8 <fputs@plt>
   1956c:	ldr	r3, [r4, #64]	; 0x40
   19570:	mov	r0, #1
   19574:	ldr	r2, [r4, #68]	; 0x44
   19578:	adds	r3, r3, #1
   1957c:	adc	r2, r2, #0
   19580:	str	r3, [r4, #64]	; 0x40
   19584:	str	r2, [r4, #68]	; 0x44
   19588:	bl	12044 <exit@plt>
   1958c:			; <UNDEFINED> instruction: 0x000301b8
   19590:	andeq	ip, r1, r8, ror sp
   19594:	andeq	lr, r2, r0, lsr ip

00019598 <push_back_one_char@@Base>:
   19598:	push	{r4, lr}
   1959c:	mov	r1, #1
   195a0:	ldr	r4, [pc, #52]	; 195dc <push_back_one_char@@Base+0x44>
   195a4:	ldr	r3, [r4, #72]	; 0x48
   195a8:	ldr	r2, [r4, #76]	; 0x4c
   195ac:	adds	r3, r3, #1
   195b0:	adc	r2, r2, #0
   195b4:	str	r3, [r4, #72]	; 0x48
   195b8:	str	r2, [r4, #76]	; 0x4c
   195bc:	bl	1950c <push_back_chars@@Base>
   195c0:	ldr	r3, [r4, #80]	; 0x50
   195c4:	ldr	r2, [r4, #84]	; 0x54
   195c8:	adds	r3, r3, #1
   195cc:	adc	r2, r2, #0
   195d0:	str	r3, [r4, #80]	; 0x50
   195d4:	str	r2, [r4, #84]	; 0x54
   195d8:	pop	{r4, pc}
   195dc:			; <UNDEFINED> instruction: 0x000301b8

000195e0 <next@@Base>:
   195e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195e4:	mov	r7, r0
   195e8:	sub	sp, sp, #516	; 0x204
   195ec:	ldr	r8, [r0, #4]
   195f0:	ldr	r4, [pc, #3440]	; 1a368 <next@@Base+0xd88>
   195f4:	cmp	r8, #0
   195f8:	beq	19634 <next@@Base+0x54>
   195fc:	ldr	r3, [r4, #88]	; 0x58
   19600:	mov	r0, r8
   19604:	ldr	r2, [r4, #92]	; 0x5c
   19608:	ldr	r6, [r8, #4]
   1960c:	adds	r3, r3, #1
   19610:	str	r3, [r4, #88]	; 0x58
   19614:	adc	r2, r2, #0
   19618:	ldr	r3, [r8]
   1961c:	str	r2, [r4, #92]	; 0x5c
   19620:	str	r3, [r7, #4]
   19624:	bl	11fb4 <free@plt>
   19628:	mov	r0, r6
   1962c:	add	sp, sp, #516	; 0x204
   19630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19634:	ldr	r3, [r4, #96]	; 0x60
   19638:	mov	r6, r8
   1963c:	add	r9, r4, #304	; 0x130
   19640:	add	sl, r4, #288	; 0x120
   19644:	ldr	r2, [r4, #100]	; 0x64
   19648:	adds	r3, r3, #1
   1964c:	adc	r2, r2, #0
   19650:	str	r3, [r4, #96]	; 0x60
   19654:	str	r2, [r4, #100]	; 0x64
   19658:	bl	194d4 <get_char@@Base>
   1965c:	mov	r5, r0
   19660:	mov	r0, r8
   19664:	add	r8, r4, #320	; 0x140
   19668:	cmp	r5, #0
   1966c:	bne	196a4 <next@@Base+0xc4>
   19670:	ldr	r4, [pc, #3316]	; 1a36c <next@@Base+0xd8c>
   19674:	ldr	r3, [r4]
   19678:	ldr	r2, [r4, #4]
   1967c:	adds	r3, r3, #1
   19680:	mov	r0, r3
   19684:	adc	r2, r2, #0
   19688:	mov	r1, r2
   1968c:	strd	r0, [r4], #16
   19690:	mov	r0, #4
   19694:	bl	12014 <malloc@plt>
   19698:	mov	r6, r0
   1969c:	bl	19130 <init_token_eof@@Base>
   196a0:	b	19a08 <next@@Base+0x428>
   196a4:	sub	r0, r0, #1
   196a8:	cmp	r0, #4
   196ac:	ldrls	pc, [pc, r0, lsl #2]
   196b0:	b	19768 <next@@Base+0x188>
   196b4:	andeq	r9, r1, r8, asr #13
   196b8:	andeq	r9, r1, r8, asr pc
   196bc:	andeq	sl, r1, r8, rrx
   196c0:	andeq	sl, r1, ip, lsl #3
   196c4:			; <UNDEFINED> instruction: 0x0001a2b8
   196c8:	ldr	r3, [r4, #112]	; 0x70
   196cc:	ldr	r2, [r4, #116]	; 0x74
   196d0:	adds	r3, r3, #1
   196d4:	adc	r2, r2, #0
   196d8:	str	r3, [r4, #112]	; 0x70
   196dc:	str	r2, [r4, #116]	; 0x74
   196e0:	ldr	r4, [pc, #3208]	; 1a370 <next@@Base+0xd90>
   196e4:	sub	r3, r5, #48	; 0x30
   196e8:	uxtb	r3, r3
   196ec:	cmp	r3, #9
   196f0:	bls	19f28 <next@@Base+0x948>
   196f4:	ldr	r4, [pc, #3192]	; 1a374 <next@@Base+0xd94>
   196f8:	mov	r0, r7
   196fc:	ldr	r3, [r4, #-8]
   19700:	ldr	r2, [r4, #-4]
   19704:	adds	r3, r3, #1
   19708:	adc	r2, r2, #0
   1970c:	str	r3, [r4, #-8]
   19710:	str	r2, [r4, #-4]
   19714:	bl	19598 <push_back_one_char@@Base>
   19718:	ldr	r3, [r4]
   1971c:	ldr	r2, [r4, #4]
   19720:	adds	r3, r3, #1
   19724:	mov	r0, r3
   19728:	add	r3, sp, #512	; 0x200
   1972c:	adc	r2, r2, #0
   19730:	add	r6, r3, r6
   19734:	mov	r1, r2
   19738:	mov	r3, #0
   1973c:	strd	r0, [r4], #16
   19740:	mov	r0, #8
   19744:	strb	r3, [r6, #-512]	; 0xfffffe00
   19748:	bl	12014 <malloc@plt>
   1974c:	mov	r6, r0
   19750:	mov	r0, sp
   19754:	bl	120d4 <atoi@plt>
   19758:	mov	r1, r0
   1975c:	mov	r0, r6
   19760:	bl	18fc8 <init_token_int_value@@Base>
   19764:	b	19a08 <next@@Base+0x428>
   19768:	cmp	r5, #32
   1976c:	cmpne	r5, #9
   19770:	moveq	fp, #1
   19774:	movne	fp, #0
   19778:	bne	197c4 <next@@Base+0x1e4>
   1977c:	ldr	r3, [r4, #144]	; 0x90
   19780:	ldr	r2, [r4, #148]	; 0x94
   19784:	adds	r3, r3, #1
   19788:	adc	r2, r2, #0
   1978c:	str	r3, [r4, #144]	; 0x90
   19790:	str	r2, [r4, #148]	; 0x94
   19794:	mov	r0, r7
   19798:	bl	194d4 <get_char@@Base>
   1979c:	mov	r5, r0
   197a0:	mov	r0, #0
   197a4:	ldr	r2, [pc, #3008]	; 1a36c <next@@Base+0xd8c>
   197a8:	ldr	r3, [r2, #-8]
   197ac:	ldr	r1, [r2, #-4]
   197b0:	adds	r3, r3, #1
   197b4:	adc	r1, r1, #0
   197b8:	str	r3, [r2, #-8]
   197bc:	str	r1, [r2, #-4]
   197c0:	b	19668 <next@@Base+0x88>
   197c4:	cmp	r5, #10
   197c8:	bne	197e8 <next@@Base+0x208>
   197cc:	ldr	r3, [r4, #152]	; 0x98
   197d0:	ldr	r2, [r4, #156]	; 0x9c
   197d4:	adds	r3, r3, #1
   197d8:	adc	r2, r2, #0
   197dc:	str	r3, [r4, #152]	; 0x98
   197e0:	str	r2, [r4, #156]	; 0x9c
   197e4:	b	19794 <next@@Base+0x1b4>
   197e8:	cmp	r5, #48	; 0x30
   197ec:	bne	19838 <next@@Base+0x258>
   197f0:	ldr	r3, [r4, #160]	; 0xa0
   197f4:	mov	r0, #8
   197f8:	ldr	r2, [r4, #164]	; 0xa4
   197fc:	adds	r3, r3, #1
   19800:	adc	r2, r2, #0
   19804:	str	r3, [r4, #160]	; 0xa0
   19808:	str	r2, [r4, #164]	; 0xa4
   1980c:	bl	12014 <malloc@plt>
   19810:	mov	r1, fp
   19814:	mov	r6, r0
   19818:	bl	18fc8 <init_token_int_value@@Base>
   1981c:	ldr	r3, [r4, #168]	; 0xa8
   19820:	ldr	r2, [r4, #172]	; 0xac
   19824:	adds	r3, r3, #1
   19828:	adc	r2, r2, #0
   1982c:	str	r3, [r4, #168]	; 0xa8
   19830:	str	r2, [r4, #172]	; 0xac
   19834:	b	19628 <next@@Base+0x48>
   19838:	sub	r3, r5, #49	; 0x31
   1983c:	uxtb	r3, r3
   19840:	cmp	r3, #8
   19844:	bhi	198a0 <next@@Base+0x2c0>
   19848:	ldr	r3, [r4, #176]	; 0xb0
   1984c:	add	fp, r6, #1
   19850:	mov	r0, r7
   19854:	ldr	r2, [r4, #180]	; 0xb4
   19858:	adds	r3, r3, #1
   1985c:	str	r3, [r4, #176]	; 0xb0
   19860:	add	r3, sp, #512	; 0x200
   19864:	adc	r2, r2, #0
   19868:	add	r6, r3, r6
   1986c:	str	r2, [r4, #180]	; 0xb4
   19870:	strb	r5, [r6, #-512]	; 0xfffffe00
   19874:	mov	r6, fp
   19878:	bl	194d4 <get_char@@Base>
   1987c:	ldr	r3, [r4, #184]	; 0xb8
   19880:	mov	r5, r0
   19884:	mov	r0, #1
   19888:	ldr	r2, [r4, #188]	; 0xbc
   1988c:	adds	r3, r3, #1
   19890:	adc	r2, r2, #0
   19894:	str	r3, [r4, #184]	; 0xb8
   19898:	str	r2, [r4, #188]	; 0xbc
   1989c:	b	197a4 <next@@Base+0x1c4>
   198a0:	cmp	r5, #40	; 0x28
   198a4:	bne	198ec <next@@Base+0x30c>
   198a8:	ldr	r3, [r4, #192]	; 0xc0
   198ac:	mov	r0, #4
   198b0:	ldr	r2, [r4, #196]	; 0xc4
   198b4:	adds	r3, r3, #1
   198b8:	adc	r2, r2, #0
   198bc:	str	r3, [r4, #192]	; 0xc0
   198c0:	str	r2, [r4, #196]	; 0xc4
   198c4:	bl	12014 <malloc@plt>
   198c8:	mov	r6, r0
   198cc:	bl	19028 <init_token_opar@@Base>
   198d0:	ldr	r3, [r4, #200]	; 0xc8
   198d4:	ldr	r2, [r4, #204]	; 0xcc
   198d8:	adds	r3, r3, #1
   198dc:	adc	r2, r2, #0
   198e0:	str	r3, [r4, #200]	; 0xc8
   198e4:	str	r2, [r4, #204]	; 0xcc
   198e8:	b	19628 <next@@Base+0x48>
   198ec:	cmp	r5, #41	; 0x29
   198f0:	bne	19938 <next@@Base+0x358>
   198f4:	ldr	r3, [r4, #208]	; 0xd0
   198f8:	mov	r0, #4
   198fc:	ldr	r2, [r4, #212]	; 0xd4
   19900:	adds	r3, r3, #1
   19904:	adc	r2, r2, #0
   19908:	str	r3, [r4, #208]	; 0xd0
   1990c:	str	r2, [r4, #212]	; 0xd4
   19910:	bl	12014 <malloc@plt>
   19914:	mov	r6, r0
   19918:	bl	19054 <init_token_cpar@@Base>
   1991c:	ldr	r3, [r4, #216]	; 0xd8
   19920:	ldr	r2, [r4, #220]	; 0xdc
   19924:	adds	r3, r3, #1
   19928:	adc	r2, r2, #0
   1992c:	str	r3, [r4, #216]	; 0xd8
   19930:	str	r2, [r4, #220]	; 0xdc
   19934:	b	19628 <next@@Base+0x48>
   19938:	cmp	r5, #123	; 0x7b
   1993c:	bne	19984 <next@@Base+0x3a4>
   19940:	ldr	r3, [r4, #224]	; 0xe0
   19944:	mov	r0, #4
   19948:	ldr	r2, [r4, #228]	; 0xe4
   1994c:	adds	r3, r3, #1
   19950:	adc	r2, r2, #0
   19954:	str	r3, [r4, #224]	; 0xe0
   19958:	str	r2, [r4, #228]	; 0xe4
   1995c:	bl	12014 <malloc@plt>
   19960:	mov	r6, r0
   19964:	bl	19080 <init_token_obra@@Base>
   19968:	ldr	r3, [r4, #232]	; 0xe8
   1996c:	ldr	r2, [r4, #236]	; 0xec
   19970:	adds	r3, r3, #1
   19974:	adc	r2, r2, #0
   19978:	str	r3, [r4, #232]	; 0xe8
   1997c:	str	r2, [r4, #236]	; 0xec
   19980:	b	19628 <next@@Base+0x48>
   19984:	cmp	r5, #125	; 0x7d
   19988:	bne	199d0 <next@@Base+0x3f0>
   1998c:	ldr	r3, [r4, #240]	; 0xf0
   19990:	mov	r0, #4
   19994:	ldr	r2, [r4, #244]	; 0xf4
   19998:	adds	r3, r3, #1
   1999c:	adc	r2, r2, #0
   199a0:	str	r3, [r4, #240]	; 0xf0
   199a4:	str	r2, [r4, #244]	; 0xf4
   199a8:	bl	12014 <malloc@plt>
   199ac:	mov	r6, r0
   199b0:	bl	190ac <init_token_cbra@@Base>
   199b4:	ldr	r3, [r4, #248]	; 0xf8
   199b8:	ldr	r2, [r4, #252]	; 0xfc
   199bc:	adds	r3, r3, #1
   199c0:	adc	r2, r2, #0
   199c4:	str	r3, [r4, #248]	; 0xf8
   199c8:	str	r2, [r4, #252]	; 0xfc
   199cc:	b	19628 <next@@Base+0x48>
   199d0:	cmp	r5, #59	; 0x3b
   199d4:	bne	19a24 <next@@Base+0x444>
   199d8:	ldr	r4, [pc, #2456]	; 1a378 <next@@Base+0xd98>
   199dc:	ldr	r3, [r4]
   199e0:	ldr	r2, [r4, #4]
   199e4:	adds	r3, r3, #1
   199e8:	mov	r0, r3
   199ec:	adc	r2, r2, #0
   199f0:	mov	r1, r2
   199f4:	strd	r0, [r4], #16
   199f8:	mov	r0, #4
   199fc:	bl	12014 <malloc@plt>
   19a00:	mov	r6, r0
   19a04:	bl	19104 <init_token_semicolon@@Base>
   19a08:	ldr	r3, [r4, #-8]
   19a0c:	ldr	r2, [r4, #-4]
   19a10:	adds	r3, r3, #1
   19a14:	adc	r2, r2, #0
   19a18:	str	r3, [r4, #-8]
   19a1c:	str	r2, [r4, #-4]
   19a20:	b	19628 <next@@Base+0x48>
   19a24:	add	r3, sp, #512	; 0x200
   19a28:	cmp	r5, #101	; 0x65
   19a2c:	add	r1, r3, r6
   19a30:	bne	19a88 <next@@Base+0x4a8>
   19a34:	ldr	fp, [pc, #2368]	; 1a37c <next@@Base+0xd9c>
   19a38:	add	r6, r6, #1
   19a3c:	ldm	fp, {r3, ip}
   19a40:	adds	r0, r3, #1
   19a44:	adc	ip, ip, #0
   19a48:	mov	r2, r0
   19a4c:	mov	r3, ip
   19a50:	mov	r0, r7
   19a54:	strd	r2, [fp], #16
   19a58:	mov	r3, #101	; 0x65
   19a5c:	strb	r3, [r1, #-512]	; 0xfffffe00
   19a60:	bl	194d4 <get_char@@Base>
   19a64:	ldr	r3, [fp, #-8]
   19a68:	mov	r5, r0
   19a6c:	mov	r0, #5
   19a70:	ldr	r2, [fp, #-4]
   19a74:	adds	r3, r3, #1
   19a78:	adc	r2, r2, #0
   19a7c:	str	r3, [fp, #-8]
   19a80:	str	r2, [fp, #-4]
   19a84:	b	197a4 <next@@Base+0x1c4>
   19a88:	cmp	r5, #105	; 0x69
   19a8c:	bne	19ae0 <next@@Base+0x500>
   19a90:	ldr	r3, [sl]
   19a94:	mov	r0, r7
   19a98:	add	r6, r6, #1
   19a9c:	strb	r5, [r1, #-512]	; 0xfffffe00
   19aa0:	ldr	r2, [sl, #4]
   19aa4:	adds	r3, r3, #1
   19aa8:	adc	r2, r2, #0
   19aac:	str	r3, [sl]
   19ab0:	str	r2, [sl, #4]
   19ab4:	bl	194d4 <get_char@@Base>
   19ab8:	ldr	r2, [pc, #2240]	; 1a380 <next@@Base+0xda0>
   19abc:	mov	r5, r0
   19ac0:	mov	r0, #2
   19ac4:	ldr	r3, [r2, #-8]
   19ac8:	ldr	r1, [r2, #-4]
   19acc:	adds	r3, r3, #1
   19ad0:	adc	r1, r1, #0
   19ad4:	str	r3, [r2, #-8]
   19ad8:	str	r1, [r2, #-4]
   19adc:	b	197a4 <next@@Base+0x1c4>
   19ae0:	cmp	r5, #109	; 0x6d
   19ae4:	bne	19b38 <next@@Base+0x558>
   19ae8:	ldr	r3, [r9]
   19aec:	mov	r0, r7
   19af0:	add	r6, r6, #1
   19af4:	strb	r5, [r1, #-512]	; 0xfffffe00
   19af8:	ldr	r2, [r9, #4]
   19afc:	adds	r3, r3, #1
   19b00:	adc	r2, r2, #0
   19b04:	str	r3, [r9]
   19b08:	str	r2, [r9, #4]
   19b0c:	bl	194d4 <get_char@@Base>
   19b10:	ldr	r2, [pc, #2156]	; 1a384 <next@@Base+0xda4>
   19b14:	mov	r5, r0
   19b18:	mov	r0, #3
   19b1c:	ldr	r3, [r2, #-8]
   19b20:	ldr	r1, [r2, #-4]
   19b24:	adds	r3, r3, #1
   19b28:	adc	r1, r1, #0
   19b2c:	str	r3, [r2, #-8]
   19b30:	str	r1, [r2, #-4]
   19b34:	b	197a4 <next@@Base+0x1c4>
   19b38:	cmp	r5, #114	; 0x72
   19b3c:	bne	19b90 <next@@Base+0x5b0>
   19b40:	ldr	r3, [r8]
   19b44:	mov	r0, r7
   19b48:	add	r6, r6, #1
   19b4c:	strb	r5, [r1, #-512]	; 0xfffffe00
   19b50:	ldr	r2, [r8, #4]
   19b54:	adds	r3, r3, #1
   19b58:	adc	r2, r2, #0
   19b5c:	str	r3, [r8]
   19b60:	str	r2, [r8, #4]
   19b64:	bl	194d4 <get_char@@Base>
   19b68:	ldr	r2, [pc, #2072]	; 1a388 <next@@Base+0xda8>
   19b6c:	mov	r5, r0
   19b70:	mov	r0, #4
   19b74:	ldr	r3, [r2, #-8]
   19b78:	ldr	r1, [r2, #-4]
   19b7c:	adds	r3, r3, #1
   19b80:	adc	r1, r1, #0
   19b84:	str	r3, [r2, #-8]
   19b88:	str	r1, [r2, #-4]
   19b8c:	b	197a4 <next@@Base+0x1c4>
   19b90:	cmp	r5, #33	; 0x21
   19b94:	bne	19c88 <next@@Base+0x6a8>
   19b98:	ldr	r4, [pc, #2024]	; 1a388 <next@@Base+0xda8>
   19b9c:	strb	r5, [r1, #-512]	; 0xfffffe00
   19ba0:	ldm	r4, {r3, ip}
   19ba4:	mov	r8, r4
   19ba8:	add	r4, r4, #32
   19bac:	adds	r0, r3, #1
   19bb0:	adc	ip, ip, #0
   19bb4:	mov	r2, r0
   19bb8:	mov	r3, ip
   19bbc:	mov	r0, r7
   19bc0:	strd	r2, [r8], #16
   19bc4:	bl	194d4 <get_char@@Base>
   19bc8:	ldr	r3, [r8, #-8]
   19bcc:	mov	r5, r0
   19bd0:	mov	r0, #8
   19bd4:	ldr	r2, [r8, #-4]
   19bd8:	adds	r3, r3, #1
   19bdc:	adc	r2, r2, #0
   19be0:	str	r3, [r8, #-8]
   19be4:	str	r2, [r8, #-4]
   19be8:	bl	12014 <malloc@plt>
   19bec:	cmp	r5, #61	; 0x3d
   19bf0:	mov	r6, r0
   19bf4:	beq	19c50 <next@@Base+0x670>
   19bf8:	mov	r0, r7
   19bfc:	bl	19598 <push_back_one_char@@Base>
   19c00:	ldr	r3, [r8]
   19c04:	mov	r0, #2
   19c08:	ldr	r2, [r8, #4]
   19c0c:	adds	r3, r3, #1
   19c10:	adc	r2, r2, #0
   19c14:	str	r3, [r8]
   19c18:	str	r2, [r8, #4]
   19c1c:	bl	12014 <malloc@plt>
   19c20:	ldrb	r3, [sp]
   19c24:	strb	r3, [r0]
   19c28:	mov	r3, #0
   19c2c:	strb	r3, [r0, #1]
   19c30:	mov	r1, r0
   19c34:	mov	r0, r6
   19c38:	bl	191b4 <init_token_boolean_op@@Base>
   19c3c:	ldr	r3, [r4]
   19c40:	ldr	r2, [r4, #4]
   19c44:	adds	r3, r3, #1
   19c48:	adc	r2, r2, #0
   19c4c:	b	1a180 <next@@Base+0xba0>
   19c50:	mov	r0, #3
   19c54:	bl	12014 <malloc@plt>
   19c58:	ldrb	r3, [sp]
   19c5c:	ldr	r2, [r4, #-4]
   19c60:	strb	r3, [r0]
   19c64:	mov	r3, #0
   19c68:	strb	r5, [r0, #1]
   19c6c:	strb	r3, [r0, #2]
   19c70:	ldr	r3, [r4, #-8]
   19c74:	adds	r3, r3, #1
   19c78:	adc	r2, r2, #0
   19c7c:	str	r3, [r4, #-8]
   19c80:	str	r2, [r4, #-4]
   19c84:	b	19c30 <next@@Base+0x650>
   19c88:	and	r3, r5, #253	; 0xfd
   19c8c:	cmp	r3, #60	; 0x3c
   19c90:	bne	19d8c <next@@Base+0x7ac>
   19c94:	ldr	r4, [pc, #1776]	; 1a38c <next@@Base+0xdac>
   19c98:	mov	r0, r7
   19c9c:	strb	r5, [r1, #-512]	; 0xfffffe00
   19ca0:	ldr	r3, [r4, #-8]
   19ca4:	ldr	r2, [r4, #-4]
   19ca8:	adds	r3, r3, #1
   19cac:	adc	r2, r2, #0
   19cb0:	str	r3, [r4, #-8]
   19cb4:	str	r2, [r4, #-4]
   19cb8:	bl	194d4 <get_char@@Base>
   19cbc:	ldr	r3, [r4]
   19cc0:	mov	r5, r0
   19cc4:	ldr	r2, [r4, #4]
   19cc8:	adds	r3, r3, #1
   19ccc:	mov	r0, r3
   19cd0:	adc	r2, r2, #0
   19cd4:	mov	r1, r2
   19cd8:	strd	r0, [r4], #16
   19cdc:	mov	r0, #8
   19ce0:	bl	12014 <malloc@plt>
   19ce4:	cmp	r5, #61	; 0x3d
   19ce8:	mov	r6, r0
   19cec:	beq	19d54 <next@@Base+0x774>
   19cf0:	mov	r0, r7
   19cf4:	bl	19598 <push_back_one_char@@Base>
   19cf8:	ldr	r3, [r4, #-8]
   19cfc:	mov	r0, #2
   19d00:	ldr	r2, [r4, #-4]
   19d04:	adds	r3, r3, #1
   19d08:	adc	r2, r2, #0
   19d0c:	str	r3, [r4, #-8]
   19d10:	str	r2, [r4, #-4]
   19d14:	bl	12014 <malloc@plt>
   19d18:	ldrb	r3, [sp]
   19d1c:	strb	r3, [r0]
   19d20:	mov	r3, #0
   19d24:	strb	r3, [r0, #1]
   19d28:	mov	r1, r0
   19d2c:	mov	r0, r6
   19d30:	bl	191b4 <init_token_boolean_op@@Base>
   19d34:	ldr	r2, [pc, #1620]	; 1a390 <next@@Base+0xdb0>
   19d38:	ldr	r3, [r2, #-8]
   19d3c:	ldr	r1, [r2, #-4]
   19d40:	adds	r3, r3, #1
   19d44:	adc	r1, r1, #0
   19d48:	str	r3, [r2, #-8]
   19d4c:	str	r1, [r2, #-4]
   19d50:	b	19628 <next@@Base+0x48>
   19d54:	mov	r0, #3
   19d58:	bl	12014 <malloc@plt>
   19d5c:	ldrb	r3, [sp]
   19d60:	ldr	r2, [r4, #4]
   19d64:	strb	r3, [r0]
   19d68:	mov	r3, #0
   19d6c:	strb	r5, [r0, #1]
   19d70:	strb	r3, [r0, #2]
   19d74:	ldr	r3, [r4]
   19d78:	adds	r3, r3, #1
   19d7c:	adc	r2, r2, #0
   19d80:	str	r3, [r4]
   19d84:	str	r2, [r4, #4]
   19d88:	b	19d28 <next@@Base+0x748>
   19d8c:	cmp	r5, #61	; 0x3d
   19d90:	ldr	r4, [pc, #1532]	; 1a394 <next@@Base+0xdb4>
   19d94:	bne	19e30 <next@@Base+0x850>
   19d98:	mov	r2, r4
   19d9c:	strb	r5, [r1, #-512]	; 0xfffffe00
   19da0:	ldrd	r8, [r2, #-16]!
   19da4:	adds	r3, r8, #1
   19da8:	adc	r0, r9, #0
   19dac:	str	r3, [r2]
   19db0:	str	r0, [r2, #4]
   19db4:	mov	r0, r7
   19db8:	bl	194d4 <get_char@@Base>
   19dbc:	ldr	r3, [r4]
   19dc0:	mov	r7, r0
   19dc4:	ldr	r2, [r4, #4]
   19dc8:	adds	r3, r3, #1
   19dcc:	mov	r0, r3
   19dd0:	adc	r2, r2, #0
   19dd4:	mov	r1, r2
   19dd8:	strd	r0, [r4], #16
   19ddc:	mov	r0, #8
   19de0:	bl	12014 <malloc@plt>
   19de4:	mov	r6, r0
   19de8:	cmp	r7, #61	; 0x3d
   19dec:	beq	19e0c <next@@Base+0x82c>
   19df0:	ldr	r3, [r4, #-8]
   19df4:	ldr	r2, [r4, #-4]
   19df8:	adds	r3, r3, #1
   19dfc:	adc	r2, r2, #0
   19e00:	str	r3, [r4, #-8]
   19e04:	str	r2, [r4, #-4]
   19e08:	b	1a060 <next@@Base+0xa80>
   19e0c:	mov	r0, #3
   19e10:	bl	12014 <malloc@plt>
   19e14:	ldrb	r3, [sp]
   19e18:	mov	r1, r0
   19e1c:	strb	r3, [r0]
   19e20:	mov	r3, #0
   19e24:	strb	r5, [r0, #1]
   19e28:	strb	r3, [r0, #2]
   19e2c:	b	19c34 <next@@Base+0x654>
   19e30:	ldr	r3, [r4, #-8]
   19e34:	ldr	r2, [r4, #-4]
   19e38:	adds	r3, r3, #1
   19e3c:	adc	r2, r2, #0
   19e40:	cmp	r5, #124	; 0x7c
   19e44:	str	r3, [r4, #-8]
   19e48:	str	r2, [r4, #-4]
   19e4c:	bne	19ea8 <next@@Base+0x8c8>
   19e50:	ldr	r3, [r4, #24]
   19e54:	mov	r0, r7
   19e58:	add	r4, r4, #48	; 0x30
   19e5c:	strb	r5, [r1, #-512]	; 0xfffffe00
   19e60:	ldr	r2, [r4, #-20]	; 0xffffffec
   19e64:	adds	r3, r3, #1
   19e68:	adc	r2, r2, #0
   19e6c:	str	r3, [r4, #-24]	; 0xffffffe8
   19e70:	str	r2, [r4, #-20]	; 0xffffffec
   19e74:	bl	194d4 <get_char@@Base>
   19e78:	ldr	r3, [r4, #-16]
   19e7c:	mov	r7, r0
   19e80:	mov	r0, #8
   19e84:	ldr	r2, [r4, #-12]
   19e88:	adds	r3, r3, #1
   19e8c:	adc	r2, r2, #0
   19e90:	str	r3, [r4, #-16]
   19e94:	str	r2, [r4, #-12]
   19e98:	bl	12014 <malloc@plt>
   19e9c:	mov	r6, r0
   19ea0:	cmp	r7, #124	; 0x7c
   19ea4:	b	19dec <next@@Base+0x80c>
   19ea8:	cmp	r5, #38	; 0x26
   19eac:	add	r6, r4, #64	; 0x40
   19eb0:	bne	19ef4 <next@@Base+0x914>
   19eb4:	mov	r0, r7
   19eb8:	strb	r5, [r1, #-512]	; 0xfffffe00
   19ebc:	add	r4, r4, #80	; 0x50
   19ec0:	bl	194d4 <get_char@@Base>
   19ec4:	ldr	r3, [r6]
   19ec8:	mov	r7, r0
   19ecc:	mov	r0, #8
   19ed0:	ldr	r2, [r6, #4]
   19ed4:	adds	r3, r3, #1
   19ed8:	adc	r2, r2, #0
   19edc:	str	r3, [r6]
   19ee0:	str	r2, [r6, #4]
   19ee4:	bl	12014 <malloc@plt>
   19ee8:	mov	r6, r0
   19eec:	cmp	r7, #38	; 0x26
   19ef0:	b	19dec <next@@Base+0x80c>
   19ef4:	ldr	r3, [r6, #-8]
   19ef8:	add	r4, r4, #96	; 0x60
   19efc:	ldr	r2, [r6, #-4]
   19f00:	ldr	r1, [pc, #1168]	; 1a398 <next@@Base+0xdb8>
   19f04:	adds	r3, r3, #1
   19f08:	str	r3, [r6, #-8]
   19f0c:	adc	r2, r2, #0
   19f10:	ldr	r3, [pc, #1156]	; 1a39c <next@@Base+0xdbc>
   19f14:	str	r2, [r6, #-4]
   19f18:	mov	r2, r5
   19f1c:	ldr	r0, [r3]
   19f20:	bl	1205c <fprintf@plt>
   19f24:	b	19df0 <next@@Base+0x810>
   19f28:	ldr	r3, [r4]
   19f2c:	mov	r0, r7
   19f30:	strb	r5, [sp, r6]
   19f34:	add	r6, r6, #1
   19f38:	ldr	r2, [r4, #4]
   19f3c:	adds	r3, r3, #1
   19f40:	adc	r2, r2, #0
   19f44:	str	r3, [r4]
   19f48:	str	r2, [r4, #4]
   19f4c:	bl	194d4 <get_char@@Base>
   19f50:	mov	r5, r0
   19f54:	b	196e4 <next@@Base+0x104>
   19f58:	ldr	r4, [pc, #1088]	; 1a3a0 <next@@Base+0xdc0>
   19f5c:	add	r3, sp, #512	; 0x200
   19f60:	cmp	r5, #102	; 0x66
   19f64:	add	r6, r3, r6
   19f68:	add	r8, r4, #32
   19f6c:	beq	19ff4 <next@@Base+0xa14>
   19f70:	cmp	r5, #110	; 0x6e
   19f74:	bne	1a044 <next@@Base+0xa64>
   19f78:	ldr	r3, [r4]
   19f7c:	strb	r5, [r6, #-512]	; 0xfffffe00
   19f80:	ldr	r2, [r4, #4]
   19f84:	adds	r3, r3, #1
   19f88:	mov	r0, r3
   19f8c:	adc	r2, r2, #0
   19f90:	mov	r1, r2
   19f94:	strd	r0, [r4], #16
   19f98:	mov	r0, r7
   19f9c:	bl	194d4 <get_char@@Base>
   19fa0:	ldr	r3, [r4, #-8]
   19fa4:	ldr	r2, [r4, #-4]
   19fa8:	adds	r3, r3, #1
   19fac:	adc	r2, r2, #0
   19fb0:	cmp	r0, #116	; 0x74
   19fb4:	str	r3, [r4, #-8]
   19fb8:	ldrne	r3, [r4]
   19fbc:	str	r2, [r4, #-4]
   19fc0:	ldrne	r2, [r4, #4]
   19fc4:	bne	1a050 <next@@Base+0xa70>
   19fc8:	mov	r0, #4
   19fcc:	bl	12014 <malloc@plt>
   19fd0:	mov	r6, r0
   19fd4:	bl	18f9c <init_token_int_type@@Base>
   19fd8:	ldr	r3, [r8, #-8]
   19fdc:	ldr	r2, [r8, #-4]
   19fe0:	adds	r3, r3, #1
   19fe4:	adc	r2, r2, #0
   19fe8:	str	r3, [r8, #-8]
   19fec:	str	r2, [r8, #-4]
   19ff0:	b	19628 <next@@Base+0x48>
   19ff4:	ldr	r3, [r4, #-8]
   19ff8:	mov	r0, #4
   19ffc:	strb	r5, [r6, #-512]	; 0xfffffe00
   1a000:	ldr	r2, [r4, #-4]
   1a004:	adds	r3, r3, #1
   1a008:	adc	r2, r2, #0
   1a00c:	str	r3, [r4, #-8]
   1a010:	mov	r3, #0
   1a014:	strb	r3, [r6, #-511]	; 0xfffffe01
   1a018:	str	r2, [r4, #-4]
   1a01c:	bl	12014 <malloc@plt>
   1a020:	mov	r6, r0
   1a024:	bl	1915c <init_token_if@@Base>
   1a028:	ldr	r3, [r8]
   1a02c:	ldr	r2, [r8, #4]
   1a030:	adds	r3, r3, #1
   1a034:	adc	r2, r2, #0
   1a038:	str	r3, [r8]
   1a03c:	str	r2, [r8, #4]
   1a040:	b	19628 <next@@Base+0x48>
   1a044:	ldrd	r0, [r4, #-16]!
   1a048:	mov	r3, r0
   1a04c:	mov	r2, r1
   1a050:	adds	r3, r3, #1
   1a054:	adc	r2, r2, #0
   1a058:	str	r3, [r4]
   1a05c:	str	r2, [r4, #4]
   1a060:	mov	r0, #1
   1a064:	bl	12044 <exit@plt>
   1a068:	ldr	r3, [r4, #120]	; 0x78
   1a06c:	ldr	r2, [r4, #124]	; 0x7c
   1a070:	adds	r3, r3, #1
   1a074:	adc	r2, r2, #0
   1a078:	cmp	r5, #97	; 0x61
   1a07c:	str	r3, [r4, #120]	; 0x78
   1a080:	str	r2, [r4, #124]	; 0x7c
   1a084:	ldr	r4, [pc, #792]	; 1a3a4 <next@@Base+0xdc4>
   1a088:	bne	19df0 <next@@Base+0x810>
   1a08c:	add	r3, sp, #512	; 0x200
   1a090:	mov	r0, r7
   1a094:	add	r3, r3, r6
   1a098:	add	sl, r6, #1
   1a09c:	strb	r5, [r3, #-512]	; 0xfffffe00
   1a0a0:	mov	r5, r4
   1a0a4:	bl	194d4 <get_char@@Base>
   1a0a8:	ldr	r3, [r4]
   1a0ac:	ldr	r2, [r4, #4]
   1a0b0:	adds	r3, r3, #1
   1a0b4:	mov	r8, r3
   1a0b8:	adc	r2, r2, #0
   1a0bc:	cmp	r0, #105	; 0x69
   1a0c0:	mov	r9, r2
   1a0c4:	strd	r8, [r5], #16
   1a0c8:	beq	1a0e8 <next@@Base+0xb08>
   1a0cc:	ldr	r3, [r5, #-8]
   1a0d0:	ldr	r2, [r5, #-4]
   1a0d4:	adds	r3, r3, #1
   1a0d8:	adc	r2, r2, #0
   1a0dc:	str	r3, [r5, #-8]
   1a0e0:	str	r2, [r5, #-4]
   1a0e4:	b	1a060 <next@@Base+0xa80>
   1a0e8:	add	r3, sp, #512	; 0x200
   1a0ec:	add	r8, r6, #2
   1a0f0:	add	sl, r3, sl
   1a0f4:	add	r4, r4, #32
   1a0f8:	strb	r0, [sl, #-512]	; 0xfffffe00
   1a0fc:	mov	r0, r7
   1a100:	bl	194d4 <get_char@@Base>
   1a104:	ldr	r3, [r5]
   1a108:	ldr	r2, [r5, #4]
   1a10c:	adds	r3, r3, #1
   1a110:	adc	r2, r2, #0
   1a114:	cmp	r0, #110	; 0x6e
   1a118:	str	r3, [r5]
   1a11c:	str	r2, [r5, #4]
   1a120:	bne	19df0 <next@@Base+0x810>
   1a124:	add	r3, sp, #512	; 0x200
   1a128:	add	r5, r6, #3
   1a12c:	add	r8, r3, r8
   1a130:	add	r3, r3, r5
   1a134:	strb	r0, [r8, #-512]	; 0xfffffe00
   1a138:	mov	r8, #0
   1a13c:	add	r0, r6, #4
   1a140:	strb	r8, [r3, #-512]	; 0xfffffe00
   1a144:	bl	12014 <malloc@plt>
   1a148:	mov	r7, r0
   1a14c:	mov	r2, r5
   1a150:	mov	r1, sp
   1a154:	bl	12098 <strncpy@plt>
   1a158:	mov	r0, #8
   1a15c:	strb	r8, [r7, r5]
   1a160:	bl	12014 <malloc@plt>
   1a164:	mov	r1, r7
   1a168:	mov	r6, r0
   1a16c:	bl	18ff8 <init_token_function@@Base>
   1a170:	ldr	r3, [r4]
   1a174:	ldr	r2, [r4, #4]
   1a178:	adds	r3, r3, #1
   1a17c:	adc	r2, r2, r8
   1a180:	str	r3, [r4]
   1a184:	str	r2, [r4, #4]
   1a188:	b	19628 <next@@Base+0x48>
   1a18c:	ldr	r3, [r4, #128]	; 0x80
   1a190:	ldr	r2, [r4, #132]	; 0x84
   1a194:	adds	r3, r3, #1
   1a198:	adc	r2, r2, #0
   1a19c:	cmp	r5, #101	; 0x65
   1a1a0:	str	r3, [r4, #128]	; 0x80
   1a1a4:	str	r2, [r4, #132]	; 0x84
   1a1a8:	ldr	r4, [pc, #504]	; 1a3a8 <next@@Base+0xdc8>
   1a1ac:	bne	19df0 <next@@Base+0x810>
   1a1b0:	add	r3, sp, #512	; 0x200
   1a1b4:	mov	r0, r7
   1a1b8:	add	r3, r3, r6
   1a1bc:	add	sl, r6, #1
   1a1c0:	strb	r5, [r3, #-512]	; 0xfffffe00
   1a1c4:	mov	r5, r4
   1a1c8:	bl	194d4 <get_char@@Base>
   1a1cc:	ldr	r3, [r4]
   1a1d0:	ldr	r2, [r4, #4]
   1a1d4:	adds	r3, r3, #1
   1a1d8:	mov	r8, r3
   1a1dc:	adc	r2, r2, #0
   1a1e0:	cmp	r0, #116	; 0x74
   1a1e4:	mov	r9, r2
   1a1e8:	strd	r8, [r5], #16
   1a1ec:	bne	1a0cc <next@@Base+0xaec>
   1a1f0:	add	r3, sp, #512	; 0x200
   1a1f4:	add	r8, r6, #2
   1a1f8:	add	sl, r3, sl
   1a1fc:	strb	r0, [sl, #-512]	; 0xfffffe00
   1a200:	mov	r0, r7
   1a204:	bl	194d4 <get_char@@Base>
   1a208:	ldr	r3, [r5]
   1a20c:	ldr	r2, [r5, #4]
   1a210:	adds	r3, r3, #1
   1a214:	adc	r2, r2, #0
   1a218:	cmp	r0, #117	; 0x75
   1a21c:	str	r3, [r5]
   1a220:	addne	r4, r4, #32
   1a224:	str	r2, [r5, #4]
   1a228:	bne	19df0 <next@@Base+0x810>
   1a22c:	add	r3, sp, #512	; 0x200
   1a230:	add	r6, r6, #3
   1a234:	add	r8, r3, r8
   1a238:	strb	r0, [r8, #-512]	; 0xfffffe00
   1a23c:	mov	r0, r7
   1a240:	bl	194d4 <get_char@@Base>
   1a244:	cmp	r0, #114	; 0x72
   1a248:	ldrdne	r0, [r4, #32]!
   1a24c:	bne	1a048 <next@@Base+0xa68>
   1a250:	add	r5, r4, #48	; 0x30
   1a254:	ldr	r3, [r5, #-8]
   1a258:	add	r4, r4, #64	; 0x40
   1a25c:	ldr	r2, [r5, #-4]
   1a260:	adds	r3, r3, #1
   1a264:	str	r3, [r5, #-8]
   1a268:	add	r3, sp, #512	; 0x200
   1a26c:	adc	r2, r2, #0
   1a270:	add	r6, r3, r6
   1a274:	str	r2, [r5, #-4]
   1a278:	strb	r0, [r6, #-512]	; 0xfffffe00
   1a27c:	mov	r0, r7
   1a280:	bl	194d4 <get_char@@Base>
   1a284:	ldr	r3, [r5]
   1a288:	ldr	r2, [r5, #4]
   1a28c:	adds	r3, r3, #1
   1a290:	adc	r2, r2, #0
   1a294:	cmp	r0, #110	; 0x6e
   1a298:	str	r3, [r5]
   1a29c:	str	r2, [r5, #4]
   1a2a0:	bne	19df0 <next@@Base+0x810>
   1a2a4:	mov	r0, #4
   1a2a8:	bl	12014 <malloc@plt>
   1a2ac:	mov	r6, r0
   1a2b0:	bl	190d8 <init_token_return@@Base>
   1a2b4:	b	19c3c <next@@Base+0x65c>
   1a2b8:	ldr	r3, [r4, #136]	; 0x88
   1a2bc:	ldr	r2, [r4, #140]	; 0x8c
   1a2c0:	adds	r3, r3, #1
   1a2c4:	adc	r2, r2, #0
   1a2c8:	cmp	r5, #108	; 0x6c
   1a2cc:	str	r3, [r4, #136]	; 0x88
   1a2d0:	str	r2, [r4, #140]	; 0x8c
   1a2d4:	ldr	r4, [pc, #208]	; 1a3ac <next@@Base+0xdcc>
   1a2d8:	bne	19df0 <next@@Base+0x810>
   1a2dc:	add	r3, sp, #512	; 0x200
   1a2e0:	add	r8, r6, #1
   1a2e4:	add	r6, r3, r6
   1a2e8:	mov	r0, r7
   1a2ec:	strb	r5, [r6, #-512]	; 0xfffffe00
   1a2f0:	mov	r5, r4
   1a2f4:	bl	194d4 <get_char@@Base>
   1a2f8:	ldr	r3, [r4]
   1a2fc:	ldr	r2, [r4, #4]
   1a300:	adds	r3, r3, #1
   1a304:	mov	sl, r3
   1a308:	adc	r2, r2, #0
   1a30c:	cmp	r0, #115	; 0x73
   1a310:	mov	fp, r2
   1a314:	strd	sl, [r5], #16
   1a318:	bne	1a0cc <next@@Base+0xaec>
   1a31c:	add	r3, sp, #512	; 0x200
   1a320:	add	r4, r4, #32
   1a324:	add	r8, r3, r8
   1a328:	strb	r0, [r8, #-512]	; 0xfffffe00
   1a32c:	mov	r0, r7
   1a330:	bl	194d4 <get_char@@Base>
   1a334:	ldr	r3, [r5]
   1a338:	ldr	r2, [r5, #4]
   1a33c:	adds	r3, r3, #1
   1a340:	adc	r2, r2, #0
   1a344:	cmp	r0, #101	; 0x65
   1a348:	str	r3, [r5]
   1a34c:	str	r2, [r5, #4]
   1a350:	bne	19df0 <next@@Base+0x810>
   1a354:	mov	r0, #4
   1a358:	bl	12014 <malloc@plt>
   1a35c:	mov	r6, r0
   1a360:	bl	19188 <init_token_else@@Base>
   1a364:	b	19c3c <next@@Base+0x65c>
   1a368:			; <UNDEFINED> instruction: 0x000301b8
   1a36c:	ldrdeq	r0, [r3], -r8
   1a370:	andeq	r0, r3, r8, asr #7
   1a374:	ldrdeq	r0, [r3], -r8
   1a378:			; <UNDEFINED> instruction: 0x000302b8
   1a37c:	andeq	r0, r3, r8, asr #5
   1a380:	andeq	r0, r3, r8, ror #5
   1a384:	strdeq	r0, [r3], -r8
   1a388:	andeq	r0, r3, r8, lsl #6
   1a38c:	andeq	r0, r3, r8, lsr r3
   1a390:	andeq	r0, r3, r8, asr r3
   1a394:	andeq	r0, r3, r8, ror #6
   1a398:	muleq	r1, r9, sp
   1a39c:	andeq	lr, r2, r0, lsr ip
   1a3a0:	strdeq	r0, [r3], -r8
   1a3a4:	andeq	r0, r3, r8, lsr #8
   1a3a8:	andeq	r0, r3, r8, asr r4
   1a3ac:	andeq	r0, r3, r8, lsr #9
   1a3b0:	b	1b654 <next@@Base+0x2074>
   1a3b4:	push	{r4, r5, r6, r7, r8, lr}
   1a3b8:	subs	r5, r1, #0
   1a3bc:	popeq	{r4, r5, r6, r7, r8, pc}
   1a3c0:	mov	r4, r0
   1a3c4:	bl	1a3b0 <next@@Base+0xdd0>
   1a3c8:	ldr	r3, [r4]
   1a3cc:	ldr	r2, [r4, #4]
   1a3d0:	adds	r6, r3, r0
   1a3d4:	adc	r7, r2, r1
   1a3d8:	subs	r5, r5, #1
   1a3dc:	strd	r6, [r4], #8
   1a3e0:	bne	1a3c4 <next@@Base+0xde4>
   1a3e4:	pop	{r4, r5, r6, r7, r8, pc}
   1a3e8:	ldr	r3, [pc, #20]	; 1a404 <next@@Base+0xe24>
   1a3ec:	ldr	r2, [pc, #20]	; 1a408 <next@@Base+0xe28>
   1a3f0:	add	r3, pc, r3
   1a3f4:	ldr	r3, [r3, r2]
   1a3f8:	ldmib	r3, {r0, r3}
   1a3fc:	add	r0, r0, r3
   1a400:	bx	lr
   1a404:	andeq	r3, r1, r8, lsl #24
   1a408:	andeq	r0, r0, r4, lsr #1
   1a40c:	ldr	r3, [pc, #28]	; 1a430 <next@@Base+0xe50>
   1a410:	ldr	r2, [pc, #28]	; 1a434 <next@@Base+0xe54>
   1a414:	add	r3, pc, r3
   1a418:	ldr	r3, [r3, r2]
   1a41c:	ldr	r2, [r3]
   1a420:	cmp	r2, #0
   1a424:	ldrne	r0, [r3, #20]
   1a428:	moveq	r0, #1
   1a42c:	bx	lr
   1a430:	andeq	r3, r1, r4, ror #23
   1a434:	andeq	r0, r0, r4, lsr #1
   1a438:	bx	lr
   1a43c:	ldr	ip, [pc, #32]	; 1a464 <next@@Base+0xe84>
   1a440:	mov	r3, #32
   1a444:	teq	r0, r1
   1a448:	movmi	r2, ip
   1a44c:	movpl	r2, #0
   1a450:	subs	r3, r3, #1
   1a454:	lsl	r1, r1, #1
   1a458:	eor	r0, r2, r0, lsl #1
   1a45c:	bne	1a444 <next@@Base+0xe64>
   1a460:	bx	lr
   1a464:	strbeq	r1, [r1], #3511	; 0xdb7
   1a468:	ldr	r2, [pc, #60]	; 1a4ac <next@@Base+0xecc>
   1a46c:	ldr	r3, [pc, #60]	; 1a4b0 <next@@Base+0xed0>
   1a470:	add	r2, pc, r2
   1a474:	push	{r4, lr}
   1a478:	ldr	r4, [r2, r3]
   1a47c:	ldr	r0, [r4]
   1a480:	cmp	r0, #0
   1a484:	popeq	{r4, pc}
   1a488:	ldr	r3, [pc, #36]	; 1a4b4 <next@@Base+0xed4>
   1a48c:	ldr	r3, [r2, r3]
   1a490:	ldr	r3, [r3]
   1a494:	cmp	r0, r3
   1a498:	popeq	{r4, pc}
   1a49c:	bl	120b0 <fclose@plt>
   1a4a0:	mov	r3, #0
   1a4a4:	str	r3, [r4]
   1a4a8:	pop	{r4, pc}
   1a4ac:	andeq	r3, r1, r8, lsl #23
   1a4b0:	andeq	r0, r0, r8, lsr #1
   1a4b4:	muleq	r0, r8, r0
   1a4b8:	ldr	r3, [pc, #76]	; 1a50c <next@@Base+0xf2c>
   1a4bc:	ldr	r1, [pc, #76]	; 1a510 <next@@Base+0xf30>
   1a4c0:	add	r3, pc, r3
   1a4c4:	push	{r4, r5, r6, lr}
   1a4c8:	mov	r5, r0
   1a4cc:	ldr	r4, [r3, r1]
   1a4d0:	lsl	r1, r0, #2
   1a4d4:	mov	r0, r4
   1a4d8:	mov	r2, #1
   1a4dc:	ldr	r3, [r0], #28
   1a4e0:	bl	11fd8 <fwrite@plt>
   1a4e4:	cmp	r0, #1
   1a4e8:	movne	r3, #1
   1a4ec:	ldr	r0, [r4, #8]
   1a4f0:	strne	r3, [r4, #20]
   1a4f4:	ldr	r3, [r4, #4]
   1a4f8:	sub	r0, r0, r5
   1a4fc:	add	r3, r3, r5
   1a500:	str	r3, [r4, #4]
   1a504:	str	r0, [r4, #8]
   1a508:	pop	{r4, r5, r6, pc}
   1a50c:	andeq	r3, r1, r8, lsr fp
   1a510:	andeq	r0, r0, r4, lsr #1
   1a514:	ldr	r3, [pc, #80]	; 1a56c <next@@Base+0xf8c>
   1a518:	ldr	r2, [pc, #80]	; 1a570 <next@@Base+0xf90>
   1a51c:	add	r3, pc, r3
   1a520:	push	{r4, r5, r6, lr}
   1a524:	mov	r5, r0
   1a528:	ldr	r4, [r3, r2]
   1a52c:	ldr	r3, [r4, #8]
   1a530:	cmp	r3, #1024	; 0x400
   1a534:	bcs	1a54c <next@@Base+0xf6c>
   1a538:	add	r0, r3, #7
   1a53c:	add	r3, r5, r3
   1a540:	str	r3, [r4, #8]
   1a544:	add	r0, r4, r0, lsl #2
   1a548:	pop	{r4, r5, r6, pc}
   1a54c:	mov	r0, #1024	; 0x400
   1a550:	bl	1a4b8 <next@@Base+0xed8>
   1a554:	ldr	r3, [r4, #8]
   1a558:	cmp	r3, #0
   1a55c:	addne	r2, r4, #4096	; 0x1000
   1a560:	ldrne	r2, [r2, #28]
   1a564:	strne	r2, [r4, #28]
   1a568:	b	1a538 <next@@Base+0xf58>
   1a56c:	ldrdeq	r3, [r1], -ip
   1a570:	andeq	r0, r0, r4, lsr #1
   1a574:	ldr	r3, [pc, #192]	; 1a63c <next@@Base+0x105c>
   1a578:	ldr	r2, [pc, #192]	; 1a640 <next@@Base+0x1060>
   1a57c:	add	r3, pc, r3
   1a580:	push	{r4, r5, r6, lr}
   1a584:	ldr	r4, [r3, r2]
   1a588:	ldr	r2, [r4, #24]
   1a58c:	ldr	r3, [r4, #8]
   1a590:	ldr	ip, [r4, #12]
   1a594:	cmp	r2, #0
   1a598:	sub	ip, ip, r3
   1a59c:	ble	1a618 <next@@Base+0x1038>
   1a5a0:	cmp	ip, r0
   1a5a4:	mov	r5, r0
   1a5a8:	bcs	1a604 <next@@Base+0x1024>
   1a5ac:	ldr	r2, [r4, #4]
   1a5b0:	cmp	ip, #0
   1a5b4:	add	r2, r2, r3
   1a5b8:	str	r2, [r4, #4]
   1a5bc:	addne	r2, r4, #28
   1a5c0:	mov	r0, r4
   1a5c4:	ldrne	r3, [r2, r3, lsl #2]
   1a5c8:	mov	r6, #0
   1a5cc:	strne	r3, [r4, #28]
   1a5d0:	ldr	r3, [r0], #28
   1a5d4:	mov	r2, #4096	; 0x1000
   1a5d8:	add	r0, r0, ip, lsl #2
   1a5dc:	mov	r1, #1
   1a5e0:	str	ip, [r4, #12]
   1a5e4:	str	r6, [r4, #8]
   1a5e8:	bl	11ff0 <fread@plt>
   1a5ec:	ldr	r3, [r4, #12]
   1a5f0:	add	r0, r3, r0, lsr #2
   1a5f4:	cmp	r0, r5
   1a5f8:	str	r0, [r4, #12]
   1a5fc:	bcc	1a620 <next@@Base+0x1040>
   1a600:	ldr	r3, [r4, #8]
   1a604:	add	r0, r3, #7
   1a608:	add	r5, r5, r3
   1a60c:	str	r5, [r4, #8]
   1a610:	add	r0, r4, r0, lsl #2
   1a614:	pop	{r4, r5, r6, pc}
   1a618:	mov	r0, #0
   1a61c:	pop	{r4, r5, r6, pc}
   1a620:	ldr	r3, [r4, #16]
   1a624:	str	r6, [r4, #12]
   1a628:	add	r5, r5, r3
   1a62c:	sub	r5, r5, r0
   1a630:	str	r5, [r4, #16]
   1a634:	mov	r0, r6
   1a638:	pop	{r4, r5, r6, pc}
   1a63c:	andeq	r3, r1, ip, ror sl
   1a640:	andeq	r0, r0, r4, lsr #1
   1a644:	push	{r4, r5, r6, lr}
   1a648:	ldr	r4, [pc, #92]	; 1a6ac <next@@Base+0x10cc>
   1a64c:	ldr	r3, [pc, #92]	; 1a6b0 <next@@Base+0x10d0>
   1a650:	add	r4, pc, r4
   1a654:	ldr	r5, [r4, r3]
   1a658:	ldr	r0, [r5]
   1a65c:	cmp	r0, #0
   1a660:	popne	{r4, r5, r6, pc}
   1a664:	ldr	r0, [pc, #72]	; 1a6b4 <next@@Base+0x10d4>
   1a668:	add	r0, pc, r0
   1a66c:	bl	12008 <getenv@plt>
   1a670:	cmp	r0, #0
   1a674:	beq	1a6a4 <next@@Base+0x10c4>
   1a678:	ldr	r1, [pc, #56]	; 1a6b8 <next@@Base+0x10d8>
   1a67c:	add	r1, pc, r1
   1a680:	bl	120e0 <fopen64@plt>
   1a684:	str	r0, [r5]
   1a688:	cmp	r0, #0
   1a68c:	popne	{r4, r5, r6, pc}
   1a690:	ldr	r3, [pc, #36]	; 1a6bc <next@@Base+0x10dc>
   1a694:	ldr	r3, [r4, r3]
   1a698:	ldr	r0, [r3]
   1a69c:	str	r0, [r5]
   1a6a0:	pop	{r4, r5, r6, pc}
   1a6a4:	ldr	r0, [r5]
   1a6a8:	b	1a688 <next@@Base+0x10a8>
   1a6ac:	andeq	r3, r1, r8, lsr #19
   1a6b0:	andeq	r0, r0, r8, lsr #1
   1a6b4:	andeq	r2, r0, ip, lsr #15
   1a6b8:	andeq	r2, r0, r8, lsr #15
   1a6bc:	muleq	r0, r8, r0
   1a6c0:	push	{r0, r1, r2, r3}
   1a6c4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a6c8:	sub	sp, sp, #12
   1a6cc:	add	r3, sp, #20
   1a6d0:	str	r3, [sp, #4]
   1a6d4:	bl	1a644 <next@@Base+0x1064>
   1a6d8:	ldr	r1, [sp, #16]
   1a6dc:	ldr	r2, [sp, #4]
   1a6e0:	bl	120c8 <vfprintf@plt>
   1a6e4:	add	sp, sp, #12
   1a6e8:	pop	{lr}		; (ldr lr, [sp], #4)
   1a6ec:	add	sp, sp, #16
   1a6f0:	bx	lr
   1a6f4:	push	{r4, r5, r6, r7, r8, lr}
   1a6f8:	subs	r6, r1, #0
   1a6fc:	beq	1a750 <next@@Base+0x1170>
   1a700:	cmp	r2, #0
   1a704:	ldr	r7, [r6]
   1a708:	beq	1a740 <next@@Base+0x1160>
   1a70c:	add	r4, r0, #12
   1a710:	add	r5, r4, r2, lsl #2
   1a714:	mov	r3, #0
   1a718:	ldr	r2, [r4, #4]!
   1a71c:	add	r1, r6, r3, lsl #3
   1a720:	cmp	r2, #0
   1a724:	add	r8, r3, #1
   1a728:	beq	1a738 <next@@Base+0x1158>
   1a72c:	ldr	r0, [r1, #28]
   1a730:	bl	11fb4 <free@plt>
   1a734:	mov	r3, r8
   1a738:	cmp	r4, r5
   1a73c:	bne	1a718 <next@@Base+0x1138>
   1a740:	mov	r0, r6
   1a744:	bl	11fb4 <free@plt>
   1a748:	mov	r0, r7
   1a74c:	pop	{r4, r5, r6, r7, r8, pc}
   1a750:	mov	r7, r6
   1a754:	b	1a748 <next@@Base+0x1168>
   1a758:	push	{r4, r5}
   1a75c:	mov	r4, r0
   1a760:	mov	r5, r1
   1a764:	orrs	r3, r4, r5
   1a768:	beq	1a7ac <next@@Base+0x11cc>
   1a76c:	cmp	r1, #0
   1a770:	clzeq	r2, r0
   1a774:	addeq	r2, r2, #32
   1a778:	clzne	r2, r1
   1a77c:	rsb	r3, r2, #63	; 0x3f
   1a780:	cmp	r3, #1
   1a784:	bls	1a7ac <next@@Base+0x11cc>
   1a788:	rsb	r1, r2, #61	; 0x3d
   1a78c:	rsb	r0, r1, #32
   1a790:	lsr	r3, r4, r1
   1a794:	sub	r1, r1, #32
   1a798:	orr	r3, r3, r5, lsl r0
   1a79c:	orr	r3, r3, r5, lsr r1
   1a7a0:	rsb	r2, r2, #1073741886	; 0x4000003e
   1a7a4:	and	r0, r3, #3
   1a7a8:	add	r0, r0, r2, lsl #2
   1a7ac:	pop	{r4, r5}
   1a7b0:	bx	lr
   1a7b4:	push	{r4, r5, r6, lr}
   1a7b8:	mov	r1, r3
   1a7bc:	mov	r6, r0
   1a7c0:	mov	r0, r2
   1a7c4:	mov	r4, r2
   1a7c8:	mov	r5, r3
   1a7cc:	bl	1a758 <next@@Base+0x1178>
   1a7d0:	add	r0, r0, r0, lsl #1
   1a7d4:	lsl	r0, r0, #3
   1a7d8:	add	r3, r6, r0
   1a7dc:	ldr	r1, [r6, r0]
   1a7e0:	ldr	r2, [r3, #16]
   1a7e4:	add	r1, r1, #1
   1a7e8:	str	r1, [r6, r0]
   1a7ec:	ldrd	r0, [r3, #8]
   1a7f0:	ldr	ip, [r3, #20]
   1a7f4:	adds	r2, r2, r4
   1a7f8:	str	r2, [r3, #16]
   1a7fc:	adc	r2, ip, r5
   1a800:	cmp	r4, r0
   1a804:	sbcs	r1, r5, r1
   1a808:	str	r2, [r3, #20]
   1a80c:	strdlt	r4, [r3, #8]
   1a810:	pop	{r4, r5, r6, pc}
   1a814:	ldr	r3, [r1, #8]
   1a818:	cmp	r3, #0
   1a81c:	bxeq	lr
   1a820:	add	r2, r1, #6016	; 0x1780
   1a824:	push	{r4, r5, r6, r7, r8, lr}
   1a828:	mov	r3, r1
   1a82c:	mov	r8, r1
   1a830:	mov	r7, r0
   1a834:	ldrd	r4, [r1, #24]
   1a838:	add	r2, r2, #32
   1a83c:	mov	ip, #0
   1a840:	mov	r0, #0
   1a844:	mov	r1, #0
   1a848:	str	ip, [r3, #40]	; 0x28
   1a84c:	strd	r4, [r3, #48]	; 0x30
   1a850:	strd	r0, [r3, #56]	; 0x38
   1a854:	add	r3, r3, #24
   1a858:	cmp	r3, r2
   1a85c:	bne	1a848 <next@@Base+0x1268>
   1a860:	cmp	r7, #0
   1a864:	popeq	{r4, r5, r6, r7, r8, pc}
   1a868:	add	r8, r8, #40	; 0x28
   1a86c:	ldr	r3, [r7, #16]
   1a870:	cmp	r3, #0
   1a874:	beq	1a8fc <next@@Base+0x131c>
   1a878:	ldr	r2, [r7, #52]	; 0x34
   1a87c:	cmp	r2, #0
   1a880:	beq	1a8fc <next@@Base+0x131c>
   1a884:	mov	r6, #0
   1a888:	b	1a898 <next@@Base+0x12b8>
   1a88c:	add	r6, r6, #1
   1a890:	cmp	r2, r6
   1a894:	beq	1a8fc <next@@Base+0x131c>
   1a898:	ldr	r3, [r7, #56]	; 0x38
   1a89c:	ldr	r5, [r3, r6, lsl #2]
   1a8a0:	cmp	r5, #0
   1a8a4:	beq	1a88c <next@@Base+0x12ac>
   1a8a8:	ldr	r3, [r5]
   1a8ac:	cmp	r3, r7
   1a8b0:	bne	1a88c <next@@Base+0x12ac>
   1a8b4:	ldr	r3, [r5, #16]
   1a8b8:	cmp	r3, #0
   1a8bc:	beq	1a88c <next@@Base+0x12ac>
   1a8c0:	mov	r4, #0
   1a8c4:	ldr	r2, [r5, #20]
   1a8c8:	lsl	r3, r4, #3
   1a8cc:	add	r2, r2, r3
   1a8d0:	mov	r0, r8
   1a8d4:	ldrd	r2, [r2]
   1a8d8:	bl	1a7b4 <next@@Base+0x11d4>
   1a8dc:	ldr	r3, [r5, #16]
   1a8e0:	add	r4, r4, #1
   1a8e4:	cmp	r3, r4
   1a8e8:	bhi	1a8c4 <next@@Base+0x12e4>
   1a8ec:	ldr	r2, [r7, #52]	; 0x34
   1a8f0:	add	r6, r6, #1
   1a8f4:	cmp	r2, r6
   1a8f8:	bne	1a898 <next@@Base+0x12b8>
   1a8fc:	ldr	r7, [r7, #4]
   1a900:	cmp	r7, #0
   1a904:	bne	1a86c <next@@Base+0x128c>
   1a908:	pop	{r4, r5, r6, r7, r8, pc}
   1a90c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a910:	sub	sp, sp, #12
   1a914:	mov	r6, r0
   1a918:	str	r0, [sp, #4]
   1a91c:	mov	r8, r2
   1a920:	mov	r0, r1
   1a924:	mov	r4, r1
   1a928:	ldr	r2, [pc, #364]	; 1aa9c <next@@Base+0x14bc>
   1a92c:	mov	r1, #0
   1a930:	bl	12080 <memset@plt>
   1a934:	mov	r5, #0
   1a938:	cmp	r6, #0
   1a93c:	str	r5, [r8]
   1a940:	beq	1aa80 <next@@Base+0x14a0>
   1a944:	mov	r9, r5
   1a948:	ldr	r0, [r6, #12]
   1a94c:	bl	12050 <strlen@plt>
   1a950:	cmp	r5, r0
   1a954:	strcc	r0, [r8]
   1a958:	mov	r0, r9
   1a95c:	ldr	r1, [r6, #8]
   1a960:	bl	1a43c <next@@Base+0xe5c>
   1a964:	ldr	r7, [r6, #52]	; 0x34
   1a968:	mov	r1, r7
   1a96c:	bl	1a43c <next@@Base+0xe5c>
   1a970:	cmp	r7, #0
   1a974:	mov	r9, r0
   1a978:	beq	1aa6c <next@@Base+0x148c>
   1a97c:	ldr	r5, [r6, #56]	; 0x38
   1a980:	add	r7, r5, r7, lsl #2
   1a984:	sub	r7, r7, #4
   1a988:	sub	r5, r5, #4
   1a98c:	b	1a9bc <next@@Base+0x13dc>
   1a990:	ldr	r3, [sl]
   1a994:	mov	r0, r9
   1a998:	cmp	r3, r6
   1a99c:	beq	1a9d8 <next@@Base+0x13f8>
   1a9a0:	mov	r1, #0
   1a9a4:	bl	1a43c <next@@Base+0xe5c>
   1a9a8:	mov	r1, #0
   1a9ac:	bl	1a43c <next@@Base+0xe5c>
   1a9b0:	mov	r9, r0
   1a9b4:	cmp	r5, r7
   1a9b8:	beq	1aa6c <next@@Base+0x148c>
   1a9bc:	ldr	sl, [r5, #4]!
   1a9c0:	cmp	sl, #0
   1a9c4:	bne	1a990 <next@@Base+0x13b0>
   1a9c8:	mov	r1, sl
   1a9cc:	mov	r0, r9
   1a9d0:	bl	1a43c <next@@Base+0xe5c>
   1a9d4:	b	1a9a8 <next@@Base+0x13c8>
   1a9d8:	ldr	r1, [sl, #12]
   1a9dc:	bl	1a43c <next@@Base+0xe5c>
   1a9e0:	ldr	r1, [sl, #8]
   1a9e4:	bl	1a43c <next@@Base+0xe5c>
   1a9e8:	ldr	r3, [r6, #16]
   1a9ec:	cmp	r3, #0
   1a9f0:	mov	r9, r0
   1a9f4:	beq	1a9b4 <next@@Base+0x13d4>
   1a9f8:	ldr	fp, [sl, #16]
   1a9fc:	ldr	r3, [r4, #8]
   1aa00:	mov	r1, fp
   1aa04:	add	r3, r3, fp
   1aa08:	str	r3, [r4, #8]
   1aa0c:	bl	1a43c <next@@Base+0xe5c>
   1aa10:	cmp	fp, #0
   1aa14:	mov	r9, r0
   1aa18:	beq	1a9b4 <next@@Base+0x13d4>
   1aa1c:	ldr	r2, [sl, #20]
   1aa20:	ldr	r3, [r4, #16]
   1aa24:	add	lr, r2, fp, lsl #3
   1aa28:	ldr	ip, [r4, #20]
   1aa2c:	sub	lr, lr, #8
   1aa30:	sub	r2, r2, #8
   1aa34:	ldrd	r0, [r2, #8]!
   1aa38:	ldrd	sl, [r4, #24]
   1aa3c:	adds	r3, r3, r0
   1aa40:	adc	ip, ip, r1
   1aa44:	str	ip, [r4, #20]
   1aa48:	str	r3, [r4, #16]
   1aa4c:	ldrd	r0, [r2]
   1aa50:	cmp	sl, r0
   1aa54:	sbcs	sl, fp, r1
   1aa58:	strdlt	r0, [r4, #24]
   1aa5c:	cmp	lr, r2
   1aa60:	bne	1aa34 <next@@Base+0x1454>
   1aa64:	cmp	r5, r7
   1aa68:	bne	1a9bc <next@@Base+0x13dc>
   1aa6c:	ldr	r6, [r6, #4]
   1aa70:	cmp	r6, #0
   1aa74:	beq	1aa84 <next@@Base+0x14a4>
   1aa78:	ldr	r5, [r8]
   1aa7c:	b	1a948 <next@@Base+0x1368>
   1aa80:	ldr	r9, [sp, #4]
   1aa84:	ldr	r0, [sp, #4]
   1aa88:	mov	r1, r4
   1aa8c:	bl	1a814 <next@@Base+0x1234>
   1aa90:	mov	r0, r9
   1aa94:	add	sp, sp, #12
   1aa98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa9c:	andeq	r1, r0, r8, asr #15
   1aaa0:	push	{r4, r5, r6, lr}
   1aaa4:	mov	r4, r0
   1aaa8:	ldr	r0, [pc, #192]	; 1ab70 <next@@Base+0x1590>
   1aaac:	add	r0, pc, r0
   1aab0:	bl	12008 <getenv@plt>
   1aab4:	subs	r3, r0, #0
   1aab8:	beq	1aac4 <next@@Base+0x14e4>
   1aabc:	bl	120d4 <atoi@plt>
   1aac0:	bic	r3, r0, r0, asr #31
   1aac4:	ldr	r0, [pc, #168]	; 1ab74 <next@@Base+0x1594>
   1aac8:	str	r3, [r4, #8]
   1aacc:	add	r0, pc, r0
   1aad0:	bl	12008 <getenv@plt>
   1aad4:	subs	r6, r0, #0
   1aad8:	beq	1ab48 <next@@Base+0x1568>
   1aadc:	bl	12050 <strlen@plt>
   1aae0:	ldr	r3, [r4, #4]
   1aae4:	add	r3, r3, #2
   1aae8:	cmp	r0, #0
   1aaec:	bne	1ab28 <next@@Base+0x1548>
   1aaf0:	ldr	r2, [r4, #8]
   1aaf4:	cmp	r2, #0
   1aaf8:	beq	1ab5c <next@@Base+0x157c>
   1aafc:	ldr	r6, [pc, #116]	; 1ab78 <next@@Base+0x1598>
   1ab00:	mov	r5, #1
   1ab04:	add	r6, pc, r6
   1ab08:	str	r5, [r4, #12]
   1ab0c:	add	r0, r3, r5
   1ab10:	bl	12014 <malloc@plt>
   1ab14:	mov	r2, r5
   1ab18:	mov	r1, r6
   1ab1c:	str	r0, [r4]
   1ab20:	pop	{r4, r5, r6, lr}
   1ab24:	b	11fc0 <memcpy@plt>
   1ab28:	sub	r5, r0, #1
   1ab2c:	ldrb	r2, [r6, r5]
   1ab30:	cmp	r2, #47	; 0x2f
   1ab34:	movne	r5, r0
   1ab38:	bne	1ab08 <next@@Base+0x1528>
   1ab3c:	cmp	r5, #0
   1ab40:	bne	1ab08 <next@@Base+0x1528>
   1ab44:	b	1aaf0 <next@@Base+0x1510>
   1ab48:	ldr	r2, [r4, #8]
   1ab4c:	ldr	r3, [r4, #4]
   1ab50:	cmp	r2, #0
   1ab54:	add	r3, r3, #2
   1ab58:	bne	1aafc <next@@Base+0x151c>
   1ab5c:	str	r2, [r4, #12]
   1ab60:	mov	r0, r3
   1ab64:	bl	12014 <malloc@plt>
   1ab68:	str	r0, [r4]
   1ab6c:	pop	{r4, r5, r6, pc}
   1ab70:	andeq	r2, r0, r0, lsl #7
   1ab74:	andeq	r2, r0, r4, ror r3
   1ab78:	andeq	r2, r0, r4, lsr #6
   1ab7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab80:	sub	sp, sp, #6080	; 0x17c0
   1ab84:	sub	sp, sp, #36	; 0x24
   1ab88:	mov	r3, r0
   1ab8c:	str	r1, [sp, #40]	; 0x28
   1ab90:	mov	r1, #0
   1ab94:	mov	r4, r1
   1ab98:	str	r0, [sp, #56]	; 0x38
   1ab9c:	add	r7, r3, #6016	; 0x1780
   1aba0:	add	r0, sp, #64	; 0x40
   1aba4:	add	r6, sp, #2016	; 0x7e0
   1aba8:	ldr	r2, [pc, #984]	; 1af88 <next@@Base+0x19a8>
   1abac:	mov	r5, #251	; 0xfb
   1abb0:	str	r0, [sp, #60]	; 0x3c
   1abb4:	str	r5, [sp, #52]	; 0x34
   1abb8:	str	r6, [sp, #36]	; 0x24
   1abbc:	mov	r9, r4
   1abc0:	bl	12080 <memset@plt>
   1abc4:	mov	sl, r4
   1abc8:	add	r3, r7, #8
   1abcc:	mov	r0, r4
   1abd0:	str	r3, [sp, #48]	; 0x30
   1abd4:	sub	r3, r6, #1952	; 0x7a0
   1abd8:	str	r3, [sp, #44]	; 0x2c
   1abdc:	ldr	r3, [sp, #48]	; 0x30
   1abe0:	ldr	r2, [r3, #16]
   1abe4:	ldr	r7, [r3]
   1abe8:	str	r2, [sp, #16]
   1abec:	ldr	r2, [r3, #20]
   1abf0:	cmp	r7, #0
   1abf4:	str	r2, [sp, #20]
   1abf8:	beq	1af18 <next@@Base+0x1938>
   1abfc:	ldrd	r2, [r3, #8]
   1ac00:	str	r9, [sp, #12]
   1ac04:	strd	r2, [sp, #24]
   1ac08:	b	1ace8 <next@@Base+0x1708>
   1ac0c:	bls	1af7c <next@@Base+0x199c>
   1ac10:	ldr	r3, [sp, #12]
   1ac14:	mov	r2, r4
   1ac18:	umull	r0, r1, r7, r3
   1ac1c:	mov	r3, #0
   1ac20:	mla	r1, r7, sl, r1
   1ac24:	bl	1c498 <__gcov_sort_n_vals@@Base+0x568>
   1ac28:	mov	r6, r0
   1ac2c:	mov	r8, r1
   1ac30:	ldr	r3, [sp, #12]
   1ac34:	sub	r4, r4, r7
   1ac38:	subs	r3, r3, r6
   1ac3c:	sbc	sl, sl, r8
   1ac40:	mov	fp, r7
   1ac44:	mov	r7, #0
   1ac48:	str	r3, [sp, #12]
   1ac4c:	ldr	r0, [sp, #16]
   1ac50:	ldr	r3, [sp, #20]
   1ac54:	str	r7, [sp, #16]
   1ac58:	str	r7, [sp, #20]
   1ac5c:	adds	r6, r6, r0
   1ac60:	ldrd	r0, [sp]
   1ac64:	adc	r8, r8, r3
   1ac68:	bl	1a758 <next@@Base+0x1178>
   1ac6c:	ldr	r3, [sp, #44]	; 0x2c
   1ac70:	add	r1, r0, r0, lsl #1
   1ac74:	lsl	r1, r1, #3
   1ac78:	add	ip, r3, r1
   1ac7c:	ldr	r3, [sp, #36]	; 0x24
   1ac80:	ldr	lr, [ip, #16]
   1ac84:	add	r1, r3, r1
   1ac88:	adds	r6, lr, r6
   1ac8c:	ldr	lr, [ip, #20]
   1ac90:	ldrd	r2, [ip, #8]
   1ac94:	adc	lr, lr, r8
   1ac98:	ldrd	r8, [sp]
   1ac9c:	str	lr, [sp, #32]
   1aca0:	orrs	lr, r2, r3
   1aca4:	moveq	lr, #1
   1aca8:	movne	lr, #0
   1acac:	cmp	r8, r2
   1acb0:	sbcs	r3, r9, r3
   1acb4:	orrlt	lr, lr, #1
   1acb8:	cmp	lr, #0
   1acbc:	str	r6, [ip, #16]
   1acc0:	ldr	r6, [r1, #-1952]	; 0xfffff860
   1acc4:	ldr	r3, [sp, #32]
   1acc8:	strdne	r8, [ip, #8]
   1accc:	cmp	r4, #0
   1acd0:	add	fp, r6, fp
   1acd4:	subeq	r5, r5, #1
   1acd8:	cmp	r7, #0
   1acdc:	str	r3, [ip, #20]
   1ace0:	str	fp, [r1, #-1952]	; 0xfffff860
   1ace4:	beq	1af14 <next@@Base+0x1934>
   1ace8:	cmp	r4, #0
   1acec:	beq	1ad70 <next@@Base+0x1790>
   1acf0:	add	r2, r5, r5, lsl #1
   1acf4:	ldr	r3, [sp, #40]	; 0x28
   1acf8:	add	r2, r3, r2, lsl #3
   1acfc:	ldrd	r0, [sp, #24]
   1ad00:	ldr	r3, [r2, #8]
   1ad04:	ldr	r2, [r2, #12]
   1ad08:	adds	r3, r0, r3
   1ad0c:	str	r3, [sp]
   1ad10:	adc	r3, r1, r2
   1ad14:	cmp	r4, r7
   1ad18:	str	r3, [sp, #4]
   1ad1c:	bcs	1ac0c <next@@Base+0x162c>
   1ad20:	ldr	r6, [sp, #16]
   1ad24:	ldr	r8, [sp, #20]
   1ad28:	mov	r2, r7
   1ad2c:	umull	r0, r1, r4, r6
   1ad30:	mov	r3, #0
   1ad34:	mla	r1, r4, r8, r1
   1ad38:	bl	1c498 <__gcov_sort_n_vals@@Base+0x568>
   1ad3c:	sub	r7, r7, r4
   1ad40:	mov	fp, r4
   1ad44:	mov	r4, #0
   1ad48:	subs	r2, r6, r0
   1ad4c:	str	r2, [sp, #16]
   1ad50:	sbc	r2, r8, r1
   1ad54:	ldr	r6, [sp, #12]
   1ad58:	mov	r8, sl
   1ad5c:	mov	r3, r1
   1ad60:	str	r2, [sp, #20]
   1ad64:	str	r4, [sp, #12]
   1ad68:	mov	sl, r4
   1ad6c:	b	1ac5c <next@@Base+0x167c>
   1ad70:	cmp	r5, #0
   1ad74:	blt	1af74 <next@@Base+0x1994>
   1ad78:	ldr	r3, [sp, #40]	; 0x28
   1ad7c:	add	r2, r5, r5, lsl #1
   1ad80:	ldr	r4, [r3, r2, lsl #3]
   1ad84:	add	r2, r3, r2, lsl #3
   1ad88:	cmp	r4, #0
   1ad8c:	bne	1af04 <next@@Base+0x1924>
   1ad90:	mov	r3, r2
   1ad94:	ldr	r9, [sp, #12]
   1ad98:	b	1adac <next@@Base+0x17cc>
   1ad9c:	ldr	r4, [r3]
   1ada0:	mov	r2, r3
   1ada4:	cmp	r4, #0
   1ada8:	bne	1af04 <next@@Base+0x1924>
   1adac:	subs	r5, r5, #1
   1adb0:	sub	r3, r3, #24
   1adb4:	bcs	1ad9c <next@@Base+0x17bc>
   1adb8:	ldr	r2, [sp, #52]	; 0x34
   1adbc:	ldr	ip, [sp, #36]	; 0x24
   1adc0:	ldr	r4, [sp, #16]
   1adc4:	lsl	r3, r2, #1
   1adc8:	add	r1, r3, r2
   1adcc:	sub	r2, ip, #1952	; 0x7a0
   1add0:	lsl	r1, r1, #3
   1add4:	add	r2, r2, r1
   1add8:	add	r1, ip, r1
   1addc:	ldr	ip, [r2, #16]
   1ade0:	ldr	lr, [r1, #-1952]	; 0xfffff860
   1ade4:	adds	ip, ip, r4
   1ade8:	add	r7, lr, r7
   1adec:	ldrd	r4, [r2, #8]
   1adf0:	ldr	lr, [r2, #20]
   1adf4:	str	r7, [r1, #-1952]	; 0xfffff860
   1adf8:	ldr	r1, [sp, #20]
   1adfc:	str	ip, [r2, #16]
   1ae00:	adc	lr, lr, r1
   1ae04:	orrs	r1, r4, r5
   1ae08:	str	lr, [r2, #20]
   1ae0c:	beq	1aee4 <next@@Base+0x1904>
   1ae10:	ldrd	r6, [sp, #24]
   1ae14:	cmp	r6, r4
   1ae18:	sbcs	r2, r7, r5
   1ae1c:	blt	1aee4 <next@@Base+0x1904>
   1ae20:	ldr	r2, [sp, #52]	; 0x34
   1ae24:	ldr	lr, [sp, #60]	; 0x3c
   1ae28:	add	ip, r3, r2
   1ae2c:	ldr	r3, [sp, #56]	; 0x38
   1ae30:	lsl	ip, ip, #3
   1ae34:	add	r1, lr, ip
   1ae38:	add	ip, r3, ip
   1ae3c:	b	1ae98 <next@@Base+0x18b8>
   1ae40:	ldr	r3, [r1, #-8]
   1ae44:	ldr	r6, [ip, #-8]
   1ae48:	ldr	r7, [ip, #-4]
   1ae4c:	ldr	r2, [r1, #-4]
   1ae50:	adds	r6, r3, r6
   1ae54:	ldrd	r4, [r1, #-16]
   1ae58:	adc	r2, r2, r7
   1ae5c:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1ae60:	ldr	r7, [ip, #-24]	; 0xffffffe8
   1ae64:	orrs	r8, r4, r5
   1ae68:	add	r3, r3, r7
   1ae6c:	str	r2, [r1, #-4]
   1ae70:	str	r3, [r1, #-24]	; 0xffffffe8
   1ae74:	str	r6, [r1, #-8]
   1ae78:	ldrd	r2, [ip, #-16]
   1ae7c:	sub	ip, ip, #24
   1ae80:	beq	1ae90 <next@@Base+0x18b0>
   1ae84:	cmp	r2, r4
   1ae88:	sbcs	r4, r3, r5
   1ae8c:	bge	1ae94 <next@@Base+0x18b4>
   1ae90:	strd	r2, [r1, #-16]
   1ae94:	sub	r1, r1, #24
   1ae98:	cmp	r1, lr
   1ae9c:	bne	1ae40 <next@@Base+0x1860>
   1aea0:	ldr	r3, [sp, #36]	; 0x24
   1aea4:	add	r0, r0, r0, lsl #1
   1aea8:	sub	r3, r3, #1952	; 0x7a0
   1aeac:	add	r3, r3, r0, lsl #3
   1aeb0:	ldr	r1, [sp, #60]	; 0x3c
   1aeb4:	ldr	r2, [r3, #16]
   1aeb8:	ldr	ip, [r3, #20]
   1aebc:	adds	r9, r2, r9
   1aec0:	adc	sl, ip, sl
   1aec4:	ldr	r0, [sp, #56]	; 0x38
   1aec8:	ldr	r2, [pc, #184]	; 1af88 <next@@Base+0x19a8>
   1aecc:	str	r9, [r3, #16]
   1aed0:	str	sl, [r3, #20]
   1aed4:	bl	11fc0 <memcpy@plt>
   1aed8:	add	sp, sp, #6080	; 0x17c0
   1aedc:	add	sp, sp, #36	; 0x24
   1aee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aee4:	ldr	r2, [sp, #52]	; 0x34
   1aee8:	ldrd	r4, [sp, #24]
   1aeec:	add	r1, r3, r2
   1aef0:	ldr	r2, [sp, #36]	; 0x24
   1aef4:	sub	r2, r2, #1952	; 0x7a0
   1aef8:	add	r2, r2, r1, lsl #3
   1aefc:	strd	r4, [r2, #8]
   1af00:	b	1ae20 <next@@Base+0x1840>
   1af04:	ldr	r3, [r2, #16]
   1af08:	ldr	sl, [r2, #20]
   1af0c:	str	r3, [sp, #12]
   1af10:	b	1acfc <next@@Base+0x171c>
   1af14:	ldr	r9, [sp, #12]
   1af18:	ldr	r3, [sp, #52]	; 0x34
   1af1c:	sub	r3, r3, #1
   1af20:	str	r3, [sp, #52]	; 0x34
   1af24:	cmn	r3, #1
   1af28:	ldr	r3, [sp, #48]	; 0x30
   1af2c:	sub	r3, r3, #24
   1af30:	str	r3, [sp, #48]	; 0x30
   1af34:	bne	1abdc <next@@Base+0x15fc>
   1af38:	cmp	r4, #0
   1af3c:	subne	r5, r5, #1
   1af40:	cmp	r5, #0
   1af44:	blt	1aea0 <next@@Base+0x18c0>
   1af48:	add	r5, r5, r5, lsl #1
   1af4c:	ldr	ip, [sp, #40]	; 0x28
   1af50:	add	r3, ip, r5, lsl #3
   1af54:	ldr	r2, [r3, #16]
   1af58:	ldr	r1, [r3, #20]
   1af5c:	adds	r9, r9, r2
   1af60:	adc	sl, sl, r1
   1af64:	cmp	ip, r3
   1af68:	sub	r3, r3, #24
   1af6c:	bne	1af54 <next@@Base+0x1974>
   1af70:	b	1aea0 <next@@Base+0x18c0>
   1af74:	ldr	r9, [sp, #12]
   1af78:	b	1adb8 <next@@Base+0x17d8>
   1af7c:	ldr	r6, [sp, #12]
   1af80:	mov	r8, sl
   1af84:	b	1ac30 <next@@Base+0x1650>
   1af88:	andeq	r1, r0, r0, lsr #15
   1af8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1af90:	ldrb	r4, [r0]
   1af94:	cmp	r4, #47	; 0x2f
   1af98:	addeq	r5, r0, #1
   1af9c:	ldrbeq	r4, [r0, #1]
   1afa0:	movne	r5, r0
   1afa4:	cmp	r4, #0
   1afa8:	beq	1affc <next@@Base+0x1a1c>
   1afac:	mov	r6, r0
   1afb0:	mov	r7, #0
   1afb4:	mov	r8, #47	; 0x2f
   1afb8:	ldr	sl, [pc, #136]	; 1b048 <next@@Base+0x1a68>
   1afbc:	b	1afcc <next@@Base+0x19ec>
   1afc0:	ldrb	r4, [r5, #1]!
   1afc4:	cmp	r4, #0
   1afc8:	beq	1affc <next@@Base+0x1a1c>
   1afcc:	cmp	r4, #47	; 0x2f
   1afd0:	bne	1afc0 <next@@Base+0x19e0>
   1afd4:	strb	r7, [r5]
   1afd8:	mov	r1, #0
   1afdc:	mov	r0, r6
   1afe0:	bl	120a4 <access@plt>
   1afe4:	cmn	r0, #1
   1afe8:	beq	1b008 <next@@Base+0x1a28>
   1afec:	strb	r8, [r5]
   1aff0:	ldrb	r4, [r5, #1]!
   1aff4:	cmp	r4, #0
   1aff8:	bne	1afcc <next@@Base+0x19ec>
   1affc:	mov	r9, #0
   1b000:	mov	r0, r9
   1b004:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b008:	mov	r1, sl
   1b00c:	mov	r0, r6
   1b010:	bl	12074 <mkdir@plt>
   1b014:	cmn	r0, #1
   1b018:	mov	r9, r0
   1b01c:	bne	1afec <next@@Base+0x1a0c>
   1b020:	bl	12068 <__errno_location@plt>
   1b024:	ldr	r3, [r0]
   1b028:	cmp	r3, #17
   1b02c:	beq	1afec <next@@Base+0x1a0c>
   1b030:	ldr	r0, [pc, #20]	; 1b04c <next@@Base+0x1a6c>
   1b034:	mov	r1, r6
   1b038:	add	r0, pc, r0
   1b03c:	bl	1a6c0 <next@@Base+0x10e0>
   1b040:	strb	r4, [r5]
   1b044:	b	1b000 <next@@Base+0x1a20>
   1b048:	andeq	r0, r0, sp, ror #3
   1b04c:	andeq	r1, r0, r4, lsl lr
   1b050:	ldr	r3, [pc, #76]	; 1b0a4 <next@@Base+0x1ac4>
   1b054:	cmp	r1, r3
   1b058:	beq	1b09c <next@@Base+0x1abc>
   1b05c:	cmp	r2, #0
   1b060:	ldr	ip, [pc, #64]	; 1b0a8 <next@@Base+0x1ac8>
   1b064:	push	{lr}		; (str lr, [sp, #-4]!)
   1b068:	rev	r3, r1
   1b06c:	sub	sp, sp, #12
   1b070:	ldreq	r2, [r0]
   1b074:	ldr	r0, [pc, #48]	; 1b0ac <next@@Base+0x1acc>
   1b078:	stm	sp, {r3, ip}
   1b07c:	mov	r1, r2
   1b080:	mov	r3, sp
   1b084:	add	r2, sp, #4
   1b088:	add	r0, pc, r0
   1b08c:	bl	1a6c0 <next@@Base+0x10e0>
   1b090:	mov	r0, #0
   1b094:	add	sp, sp, #12
   1b098:	pop	{pc}		; (ldr pc, [sp], #4)
   1b09c:	mov	r0, #1
   1b0a0:	bx	lr
   1b0a4:	teqmi	r8, sl, lsr #6
   1b0a8:	bcs	ce91b4 <__bss_end__@@Base+0xcb7adc>
   1b0ac:	andeq	r1, r0, ip, ror #27
   1b0b0:	ldr	r2, [r2]
   1b0b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b0b8:	cmp	r2, #0
   1b0bc:	mov	r4, r3
   1b0c0:	ldr	r2, [r3, #12]
   1b0c4:	ldr	r3, [sp, #32]
   1b0c8:	beq	1b1b4 <next@@Base+0x1bd4>
   1b0cc:	cmp	r1, #0
   1b0d0:	addeq	r1, r2, #1
   1b0d4:	streq	r1, [r4, #12]
   1b0d8:	cmp	r2, #0
   1b0dc:	ldr	r0, [r4, #16]
   1b0e0:	ldr	lr, [r4, #20]
   1b0e4:	ldrd	r6, [r4, #24]
   1b0e8:	ldr	r2, [r4, #32]
   1b0ec:	ldr	r1, [r4, #36]	; 0x24
   1b0f0:	bne	1b160 <next@@Base+0x1b80>
   1b0f4:	ldr	ip, [r3, #8]
   1b0f8:	str	ip, [r4, #8]
   1b0fc:	ldr	ip, [r3, #16]
   1b100:	ldr	r5, [r3, #20]
   1b104:	adds	r0, ip, r0
   1b108:	adc	lr, r5, lr
   1b10c:	str	r0, [r4, #16]
   1b110:	str	lr, [r4, #20]
   1b114:	ldrd	r8, [r3, #24]
   1b118:	cmp	r6, r8
   1b11c:	sbcs	r0, r7, r9
   1b120:	bge	1b1d4 <next@@Base+0x1bf4>
   1b124:	strd	r8, [r4, #24]
   1b128:	ldr	r0, [r3, #24]
   1b12c:	ldr	ip, [r3, #28]
   1b130:	adds	r2, r0, r2
   1b134:	adc	r1, ip, r1
   1b138:	str	r1, [r4, #36]	; 0x24
   1b13c:	str	r2, [r4, #32]
   1b140:	add	r1, r3, #40	; 0x28
   1b144:	ldr	r2, [pc, #176]	; 1b1fc <next@@Base+0x1c1c>
   1b148:	add	r0, r4, #40	; 0x28
   1b14c:	bl	11fc0 <memcpy@plt>
   1b150:	ldr	r3, [sp, #36]	; 0x24
   1b154:	mov	r0, #0
   1b158:	str	r3, [r4]
   1b15c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b160:	ldr	ip, [r3, #16]
   1b164:	ldr	r5, [r3, #20]
   1b168:	adds	r0, ip, r0
   1b16c:	adc	lr, r5, lr
   1b170:	str	r0, [r4, #16]
   1b174:	str	lr, [r4, #20]
   1b178:	ldrd	r8, [r3, #24]
   1b17c:	cmp	r6, r8
   1b180:	sbcs	r0, r7, r9
   1b184:	bge	1b1e8 <next@@Base+0x1c08>
   1b188:	strd	r8, [r4, #24]
   1b18c:	ldr	r0, [r3, #24]
   1b190:	ldr	ip, [r3, #28]
   1b194:	adds	r2, r0, r2
   1b198:	adc	r1, ip, r1
   1b19c:	str	r1, [r4, #36]	; 0x24
   1b1a0:	str	r2, [r4, #32]
   1b1a4:	add	r1, r3, #40	; 0x28
   1b1a8:	add	r0, r4, #40	; 0x28
   1b1ac:	bl	1ab7c <next@@Base+0x159c>
   1b1b0:	b	1b150 <next@@Base+0x1b70>
   1b1b4:	cmp	r2, #0
   1b1b8:	beq	1b150 <next@@Base+0x1b70>
   1b1bc:	mov	r1, r0
   1b1c0:	ldr	r0, [pc, #56]	; 1b200 <next@@Base+0x1c20>
   1b1c4:	add	r0, pc, r0
   1b1c8:	bl	1a6c0 <next@@Base+0x10e0>
   1b1cc:	mvn	r0, #0
   1b1d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b1d4:	adds	r2, r2, r8
   1b1d8:	adc	r1, r1, r9
   1b1dc:	str	r1, [r4, #36]	; 0x24
   1b1e0:	str	r2, [r4, #32]
   1b1e4:	b	1b140 <next@@Base+0x1b60>
   1b1e8:	adds	r2, r2, r8
   1b1ec:	adc	r1, r1, r9
   1b1f0:	str	r1, [r4, #36]	; 0x24
   1b1f4:	str	r2, [r4, #32]
   1b1f8:	b	1b1a4 <next@@Base+0x1bc4>
   1b1fc:	andeq	r1, r0, r0, lsr #15
   1b200:	andeq	r1, r0, r8, ror #25
   1b204:	ldr	r0, [pc, #52]	; 1b240 <next@@Base+0x1c60>
   1b208:	ldr	r3, [pc, #52]	; 1b244 <next@@Base+0x1c64>
   1b20c:	add	r0, pc, r0
   1b210:	push	{lr}		; (str lr, [sp, #-4]!)
   1b214:	mov	ip, #0
   1b218:	ldr	r3, [r0, r3]
   1b21c:	mvn	lr, #0
   1b220:	mov	r2, ip
   1b224:	str	lr, [r3, #24]
   1b228:	mov	r1, ip
   1b22c:	ldr	r0, [r3]
   1b230:	pop	{lr}		; (ldr lr, [sp], #4)
   1b234:	str	ip, [r3, #4]
   1b238:	str	ip, [r3, #8]
   1b23c:	b	120ec <fseek@plt>
   1b240:	andeq	r2, r1, ip, ror #27
   1b244:	andeq	r0, r0, r4, lsr #1
   1b248:	push	{r4, r5, r6, r7, lr}
   1b24c:	mov	r2, #0
   1b250:	sub	sp, sp, #36	; 0x24
   1b254:	mov	r3, #0
   1b258:	mov	r4, #0
   1b25c:	mov	r6, r0
   1b260:	strd	r2, [sp, #8]
   1b264:	strd	r2, [sp, #16]
   1b268:	strh	r4, [sp, #2]
   1b26c:	bl	12038 <getpid@plt>
   1b270:	ldr	r3, [pc, #196]	; 1b33c <next@@Base+0x1d5c>
   1b274:	ldr	ip, [pc, #196]	; 1b340 <next@@Base+0x1d60>
   1b278:	add	r3, pc, r3
   1b27c:	mvn	lr, #0
   1b280:	mov	r7, #1
   1b284:	ldr	r2, [pc, #184]	; 1b344 <next@@Base+0x1d64>
   1b288:	mov	r1, #66	; 0x42
   1b28c:	str	r0, [sp, #24]
   1b290:	ldr	r5, [r3, ip]
   1b294:	mov	r0, r6
   1b298:	strh	r7, [sp]
   1b29c:	str	r4, [r5, #4]
   1b2a0:	str	r4, [r5, #12]
   1b2a4:	str	r4, [r5, #8]
   1b2a8:	str	r4, [r5, #20]
   1b2ac:	str	lr, [r5, #16]
   1b2b0:	bl	11ffc <open64@plt>
   1b2b4:	subs	r6, r0, #0
   1b2b8:	movlt	r0, r4
   1b2bc:	blt	1b320 <next@@Base+0x1d40>
   1b2c0:	mov	r4, sp
   1b2c4:	mov	r2, r4
   1b2c8:	mov	r1, #14
   1b2cc:	mov	r0, r6
   1b2d0:	bl	120bc <fcntl64@plt>
   1b2d4:	cmp	r0, #0
   1b2d8:	beq	1b2ec <next@@Base+0x1d0c>
   1b2dc:	bl	12068 <__errno_location@plt>
   1b2e0:	ldr	r3, [r0]
   1b2e4:	cmp	r3, #4
   1b2e8:	beq	1b2c4 <next@@Base+0x1ce4>
   1b2ec:	ldr	r1, [pc, #84]	; 1b348 <next@@Base+0x1d68>
   1b2f0:	mov	r0, r6
   1b2f4:	add	r1, pc, r1
   1b2f8:	bl	11f78 <fdopen@plt>
   1b2fc:	cmp	r0, #0
   1b300:	mov	r4, r0
   1b304:	str	r0, [r5]
   1b308:	beq	1b328 <next@@Base+0x1d48>
   1b30c:	mov	r4, #1
   1b310:	mov	r1, #0
   1b314:	str	r4, [r5, #24]
   1b318:	bl	11f90 <setbuf@plt>
   1b31c:	mov	r0, r4
   1b320:	add	sp, sp, #36	; 0x24
   1b324:	pop	{r4, r5, r6, r7, pc}
   1b328:	mov	r0, r6
   1b32c:	bl	12110 <close@plt>
   1b330:	mov	r0, r4
   1b334:	add	sp, sp, #36	; 0x24
   1b338:	pop	{r4, r5, r6, r7, pc}
   1b33c:	andeq	r2, r1, r0, lsl #27
   1b340:	andeq	r0, r0, r4, lsr #1
   1b344:			; <UNDEFINED> instruction: 0x000001b6
   1b348:	andeq	r1, r0, r4, ror #23
   1b34c:	push	{r4, r5, r6, lr}
   1b350:	mov	r4, r1
   1b354:	ldr	r5, [pc, #248]	; 1b454 <next@@Base+0x1e74>
   1b358:	ldr	ip, [r4, #8]
   1b35c:	ldr	lr, [r4, #12]
   1b360:	ldr	r6, [r4]
   1b364:	cmp	ip, #0
   1b368:	mov	r1, r0
   1b36c:	add	r5, pc, r5
   1b370:	add	r0, r6, lr
   1b374:	ble	1b3b0 <next@@Base+0x1dd0>
   1b378:	ldrb	r3, [r1]
   1b37c:	cmp	r3, #47	; 0x2f
   1b380:	addeq	r2, r1, #1
   1b384:	ldrbeq	r3, [r1, #1]
   1b388:	movne	r2, r1
   1b38c:	cmp	r3, #0
   1b390:	beq	1b3b0 <next@@Base+0x1dd0>
   1b394:	cmp	r3, #47	; 0x2f
   1b398:	moveq	r1, r2
   1b39c:	ldrb	r3, [r2, #1]!
   1b3a0:	subeq	ip, ip, #1
   1b3a4:	cmp	r3, #0
   1b3a8:	cmpne	ip, #0
   1b3ac:	bne	1b394 <next@@Base+0x1db4>
   1b3b0:	cmp	lr, #0
   1b3b4:	bne	1b3d4 <next@@Base+0x1df4>
   1b3b8:	bl	11fe4 <strcpy@plt>
   1b3bc:	ldr	r0, [r4]
   1b3c0:	bl	1b248 <next@@Base+0x1c68>
   1b3c4:	cmp	r0, #0
   1b3c8:	beq	1b3ec <next@@Base+0x1e0c>
   1b3cc:	mov	r0, #0
   1b3d0:	pop	{r4, r5, r6, pc}
   1b3d4:	ldrb	r3, [r1]
   1b3d8:	cmp	r3, #47	; 0x2f
   1b3dc:	movne	r3, #47	; 0x2f
   1b3e0:	addne	r0, r0, #1
   1b3e4:	strbne	r3, [r6, lr]
   1b3e8:	b	1b3b8 <next@@Base+0x1dd8>
   1b3ec:	ldr	r0, [r4]
   1b3f0:	bl	1af8c <next@@Base+0x19ac>
   1b3f4:	cmp	r0, #0
   1b3f8:	bne	1b430 <next@@Base+0x1e50>
   1b3fc:	ldr	r0, [r4]
   1b400:	bl	1b248 <next@@Base+0x1c68>
   1b404:	cmp	r0, #0
   1b408:	bne	1b3cc <next@@Base+0x1dec>
   1b40c:	ldr	r3, [pc, #68]	; 1b458 <next@@Base+0x1e78>
   1b410:	ldr	r1, [pc, #68]	; 1b45c <next@@Base+0x1e7c>
   1b414:	ldr	r2, [r4]
   1b418:	ldr	r3, [r5, r3]
   1b41c:	add	r1, pc, r1
   1b420:	ldr	r0, [r3]
   1b424:	bl	1205c <fprintf@plt>
   1b428:	mvn	r0, #0
   1b42c:	pop	{r4, r5, r6, pc}
   1b430:	ldr	r3, [pc, #32]	; 1b458 <next@@Base+0x1e78>
   1b434:	ldr	r1, [pc, #36]	; 1b460 <next@@Base+0x1e80>
   1b438:	ldr	r2, [r4]
   1b43c:	ldr	r3, [r5, r3]
   1b440:	add	r1, pc, r1
   1b444:	ldr	r0, [r3]
   1b448:	bl	1205c <fprintf@plt>
   1b44c:	mvn	r0, #0
   1b450:	pop	{r4, r5, r6, pc}
   1b454:	andeq	r2, r1, ip, lsl #25
   1b458:	muleq	r0, r8, r0
   1b45c:	ldrdeq	r1, [r0], -r4
   1b460:	muleq	r0, ip, sl
   1b464:	ldr	r3, [pc, #96]	; 1b4cc <next@@Base+0x1eec>
   1b468:	ldr	r2, [pc, #96]	; 1b4d0 <next@@Base+0x1ef0>
   1b46c:	add	r3, pc, r3
   1b470:	push	{r4, lr}
   1b474:	ldr	r4, [r3, r2]
   1b478:	ldr	r0, [r4]
   1b47c:	cmp	r0, #0
   1b480:	beq	1b4a0 <next@@Base+0x1ec0>
   1b484:	ldr	r3, [r4, #8]
   1b488:	cmp	r3, #0
   1b48c:	bne	1b4b0 <next@@Base+0x1ed0>
   1b490:	bl	120b0 <fclose@plt>
   1b494:	mov	r3, #0
   1b498:	str	r3, [r4]
   1b49c:	str	r3, [r4, #12]
   1b4a0:	mov	r3, #0
   1b4a4:	str	r3, [r4, #24]
   1b4a8:	ldr	r0, [r4, #20]
   1b4ac:	pop	{r4, pc}
   1b4b0:	ldr	r2, [r4, #24]
   1b4b4:	cmp	r2, #0
   1b4b8:	bge	1b490 <next@@Base+0x1eb0>
   1b4bc:	mov	r0, r3
   1b4c0:	bl	1a4b8 <next@@Base+0xed8>
   1b4c4:	ldr	r0, [r4]
   1b4c8:	b	1b490 <next@@Base+0x1eb0>
   1b4cc:	andeq	r2, r1, ip, lsl #23
   1b4d0:	andeq	r0, r0, r4, lsr #1
   1b4d4:	push	{r4, lr}
   1b4d8:	mov	r4, r0
   1b4dc:	mov	r0, #1
   1b4e0:	bl	1a514 <next@@Base+0xf34>
   1b4e4:	str	r4, [r0]
   1b4e8:	pop	{r4, pc}
   1b4ec:	push	{r4, r5, r6, lr}
   1b4f0:	mov	r5, r0
   1b4f4:	mov	r0, #2
   1b4f8:	mov	r4, r1
   1b4fc:	bl	1a514 <next@@Base+0xf34>
   1b500:	str	r5, [r0]
   1b504:	str	r4, [r0, #4]
   1b508:	pop	{r4, r5, r6, pc}
   1b50c:	push	{r4, r5, r6, lr}
   1b510:	mov	r5, r0
   1b514:	mov	r0, #2
   1b518:	mov	r4, r1
   1b51c:	bl	1a514 <next@@Base+0xf34>
   1b520:	str	r5, [r0]
   1b524:	str	r4, [r0, #4]
   1b528:	pop	{r4, r5, r6, pc}
   1b52c:	mov	r2, #0
   1b530:	push	{r4, r5, r6, r7, r8, lr}
   1b534:	mov	r3, r2
   1b538:	sub	sp, sp, #32
   1b53c:	mov	r5, r1
   1b540:	mov	r7, r2
   1b544:	mov	r4, r1
   1b548:	mov	r8, #1
   1b54c:	str	r2, [sp]
   1b550:	str	r2, [sp, #4]
   1b554:	str	r2, [sp, #8]
   1b558:	str	r2, [sp, #12]
   1b55c:	str	r2, [sp, #16]
   1b560:	str	r2, [sp, #20]
   1b564:	str	r2, [sp, #24]
   1b568:	str	r2, [sp, #28]
   1b56c:	lsr	r2, r3, #5
   1b570:	ldr	lr, [r1, #40]	; 0x28
   1b574:	add	ip, sp, #32
   1b578:	cmp	lr, #0
   1b57c:	add	r2, ip, r2, lsl #2
   1b580:	and	r6, r3, #31
   1b584:	ldrne	ip, [r2, #-32]	; 0xffffffe0
   1b588:	add	r3, r3, #1
   1b58c:	orrne	ip, ip, r8, lsl r6
   1b590:	addne	r7, r7, #1
   1b594:	strne	ip, [r2, #-32]	; 0xffffffe0
   1b598:	cmp	r3, #252	; 0xfc
   1b59c:	add	r1, r1, #24
   1b5a0:	bne	1b56c <next@@Base+0x1f8c>
   1b5a4:	add	r7, r7, r7, lsl #2
   1b5a8:	add	r1, r7, #17
   1b5ac:	bl	1b50c <next@@Base+0x1f2c>
   1b5b0:	ldr	r0, [r5]
   1b5b4:	bl	1b4d4 <next@@Base+0x1ef4>
   1b5b8:	ldr	r0, [r5, #8]
   1b5bc:	bl	1b4d4 <next@@Base+0x1ef4>
   1b5c0:	ldr	r0, [r5, #12]
   1b5c4:	bl	1b4d4 <next@@Base+0x1ef4>
   1b5c8:	ldrd	r0, [r5, #16]
   1b5cc:	bl	1b4ec <next@@Base+0x1f0c>
   1b5d0:	ldrd	r0, [r5, #24]
   1b5d4:	bl	1b4ec <next@@Base+0x1f0c>
   1b5d8:	ldrd	r0, [r5, #32]
   1b5dc:	bl	1b4ec <next@@Base+0x1f0c>
   1b5e0:	sub	r6, sp, #4
   1b5e4:	add	r7, sp, #28
   1b5e8:	ldr	r0, [r6, #4]!
   1b5ec:	bl	1b4d4 <next@@Base+0x1ef4>
   1b5f0:	cmp	r7, r6
   1b5f4:	bne	1b5e8 <next@@Base+0x2008>
   1b5f8:	add	r5, r5, #6016	; 0x1780
   1b5fc:	add	r5, r5, #32
   1b600:	ldr	r3, [r4, #40]	; 0x28
   1b604:	subs	r0, r3, #0
   1b608:	beq	1b620 <next@@Base+0x2040>
   1b60c:	bl	1b4d4 <next@@Base+0x1ef4>
   1b610:	ldrd	r0, [r4, #48]	; 0x30
   1b614:	bl	1b4ec <next@@Base+0x1f0c>
   1b618:	ldrd	r0, [r4, #56]	; 0x38
   1b61c:	bl	1b4ec <next@@Base+0x1f0c>
   1b620:	add	r4, r4, #24
   1b624:	cmp	r4, r5
   1b628:	bne	1b600 <next@@Base+0x2020>
   1b62c:	add	sp, sp, #32
   1b630:	pop	{r4, r5, r6, r7, r8, pc}
   1b634:	push	{r4, lr}
   1b638:	mov	r0, #1
   1b63c:	bl	1a574 <next@@Base+0xf94>
   1b640:	subs	r3, r0, #0
   1b644:	popeq	{r4, pc}
   1b648:	ldr	r0, [r3]
   1b64c:	pop	{r4, lr}
   1b650:	b	1a438 <next@@Base+0xe58>
   1b654:	push	{r4, lr}
   1b658:	mov	r0, #2
   1b65c:	bl	1a574 <next@@Base+0xf94>
   1b660:	subs	r2, r0, #0
   1b664:	beq	1b688 <next@@Base+0x20a8>
   1b668:	ldr	r0, [r2]
   1b66c:	bl	1a438 <next@@Base+0xe58>
   1b670:	mov	r3, r0
   1b674:	ldr	r0, [r2, #4]
   1b678:	bl	1a438 <next@@Base+0xe58>
   1b67c:	mov	r1, r0
   1b680:	mov	r0, r3
   1b684:	pop	{r4, pc}
   1b688:	mov	r3, r2
   1b68c:	mov	r1, r2
   1b690:	mov	r0, r3
   1b694:	pop	{r4, pc}
   1b698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b69c:	sub	sp, sp, #28
   1b6a0:	mov	r8, r1
   1b6a4:	str	r3, [sp, #12]
   1b6a8:	mov	r4, #0
   1b6ac:	add	r3, r1, #52	; 0x34
   1b6b0:	add	r1, r1, #16
   1b6b4:	str	r0, [sp, #20]
   1b6b8:	str	r2, [sp, #16]
   1b6bc:	ldr	r2, [r3, #-4]!
   1b6c0:	cmp	r2, #0
   1b6c4:	addne	r4, r4, #1
   1b6c8:	cmp	r1, r3
   1b6cc:	bne	1b6bc <next@@Base+0x20dc>
   1b6d0:	add	r4, r4, #4
   1b6d4:	lsl	r4, r4, #3
   1b6d8:	mov	r0, r4
   1b6dc:	bl	12014 <malloc@plt>
   1b6e0:	subs	r6, r0, #0
   1b6e4:	beq	1b7b8 <next@@Base+0x21d8>
   1b6e8:	ldr	r3, [sp, #12]
   1b6ec:	mov	r4, #0
   1b6f0:	str	r3, [r6, #4]
   1b6f4:	str	r4, [r6]
   1b6f8:	bl	1b634 <next@@Base+0x2054>
   1b6fc:	mov	r7, r4
   1b700:	add	r5, r8, #12
   1b704:	str	r0, [r6, #12]
   1b708:	bl	1b634 <next@@Base+0x2054>
   1b70c:	str	r0, [r6, #16]
   1b710:	bl	1b634 <next@@Base+0x2054>
   1b714:	str	r0, [r6, #20]
   1b718:	b	1b728 <next@@Base+0x2148>
   1b71c:	add	r4, r4, #1
   1b720:	cmp	r4, #9
   1b724:	beq	1b7a4 <next@@Base+0x21c4>
   1b728:	ldr	r3, [r5, #4]!
   1b72c:	cmp	r3, #0
   1b730:	beq	1b71c <next@@Base+0x213c>
   1b734:	bl	1b634 <next@@Base+0x2054>
   1b738:	lsl	r3, r4, #17
   1b73c:	add	r3, r3, #27262976	; 0x1a00000
   1b740:	add	r3, r3, #65536	; 0x10000
   1b744:	cmp	r0, r3
   1b748:	bne	1b80c <next@@Base+0x222c>
   1b74c:	bl	1b634 <next@@Base+0x2054>
   1b750:	lsr	sl, r0, #1
   1b754:	lsl	fp, sl, #3
   1b758:	mov	r0, fp
   1b75c:	bl	12014 <malloc@plt>
   1b760:	subs	r9, r0, #0
   1b764:	beq	1b81c <next@@Base+0x223c>
   1b768:	add	r1, r6, r7, lsl #3
   1b76c:	cmp	sl, #0
   1b770:	str	sl, [r1, #24]
   1b774:	str	r9, [r1, #28]
   1b778:	sub	fp, sl, #1
   1b77c:	beq	1b794 <next@@Base+0x21b4>
   1b780:	bl	1b654 <next@@Base+0x2074>
   1b784:	sub	fp, fp, #1
   1b788:	cmn	fp, #1
   1b78c:	strd	r0, [r9], #8
   1b790:	bne	1b780 <next@@Base+0x21a0>
   1b794:	add	r4, r4, #1
   1b798:	cmp	r4, #9
   1b79c:	add	r7, r7, #1
   1b7a0:	bne	1b728 <next@@Base+0x2148>
   1b7a4:	ldr	r3, [sp, #16]
   1b7a8:	mov	r0, r6
   1b7ac:	str	r6, [r3]
   1b7b0:	add	sp, sp, #28
   1b7b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7b8:	mvn	r5, #0
   1b7bc:	cmp	r4, #0
   1b7c0:	bne	1b800 <next@@Base+0x2220>
   1b7c4:	ldr	r3, [pc, #92]	; 1b828 <next@@Base+0x2248>
   1b7c8:	mov	r4, r5
   1b7cc:	add	r3, pc, r3
   1b7d0:	ldr	r0, [pc, #84]	; 1b82c <next@@Base+0x224c>
   1b7d4:	ldr	r2, [sp, #12]
   1b7d8:	ldr	r1, [sp, #20]
   1b7dc:	str	r4, [sp]
   1b7e0:	add	r0, pc, r0
   1b7e4:	bl	1a6c0 <next@@Base+0x10e0>
   1b7e8:	mov	r2, r5
   1b7ec:	mov	r1, r6
   1b7f0:	mov	r0, r8
   1b7f4:	add	sp, sp, #28
   1b7f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7fc:	b	1a6f4 <next@@Base+0x1114>
   1b800:	ldr	r3, [pc, #40]	; 1b830 <next@@Base+0x2250>
   1b804:	add	r3, pc, r3
   1b808:	b	1b7d0 <next@@Base+0x21f0>
   1b80c:	ldr	r3, [pc, #32]	; 1b834 <next@@Base+0x2254>
   1b810:	mov	r5, r4
   1b814:	add	r3, pc, r3
   1b818:	b	1b7d0 <next@@Base+0x21f0>
   1b81c:	mov	r5, r4
   1b820:	mov	r4, fp
   1b824:	b	1b7bc <next@@Base+0x21dc>
   1b828:	andeq	r1, r0, r0, asr #14
   1b82c:	andeq	r1, r0, r0, asr r7
   1b830:	andeq	r1, r0, ip, lsl r7
   1b834:	strdeq	r1, [r0], -r8
   1b838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b83c:	sub	sp, sp, #36	; 0x24
   1b840:	mov	r9, r0
   1b844:	bl	1b634 <next@@Base+0x2054>
   1b848:	mov	r7, #0
   1b84c:	sub	r4, sp, #4
   1b850:	add	r5, sp, #28
   1b854:	str	r0, [r9]
   1b858:	bl	1b634 <next@@Base+0x2054>
   1b85c:	str	r0, [r9, #8]
   1b860:	bl	1b634 <next@@Base+0x2054>
   1b864:	str	r0, [r9, #12]
   1b868:	bl	1b654 <next@@Base+0x2074>
   1b86c:	strd	r0, [r9, #16]
   1b870:	bl	1b654 <next@@Base+0x2074>
   1b874:	strd	r0, [r9, #24]
   1b878:	bl	1b654 <next@@Base+0x2074>
   1b87c:	ldr	r2, [pc, #264]	; 1b98c <next@@Base+0x23ac>
   1b880:	strd	r0, [r9, #32]
   1b884:	add	r0, r9, #40	; 0x28
   1b888:	mov	r1, r7
   1b88c:	bl	12080 <memset@plt>
   1b890:	bl	1b634 <next@@Base+0x2054>
   1b894:	str	r0, [r4, #4]!
   1b898:	bl	1c57c <__gcov_sort_n_vals@@Base+0x64c>
   1b89c:	cmp	r4, r5
   1b8a0:	add	r7, r7, r0
   1b8a4:	bne	1b890 <next@@Base+0x22b0>
   1b8a8:	cmp	r7, #0
   1b8ac:	sub	r7, r7, #1
   1b8b0:	beq	1b978 <next@@Base+0x2398>
   1b8b4:	ldr	r8, [pc, #212]	; 1b990 <next@@Base+0x23b0>
   1b8b8:	ldr	sl, [pc, #212]	; 1b994 <next@@Base+0x23b4>
   1b8bc:	mov	r4, #0
   1b8c0:	add	r8, pc, r8
   1b8c4:	add	sl, pc, sl
   1b8c8:	mov	r5, r4
   1b8cc:	mov	r6, r4
   1b8d0:	cmp	r4, #0
   1b8d4:	addeq	r3, sp, #32
   1b8d8:	addeq	r6, r3, r5, lsl #2
   1b8dc:	subeq	r6, r6, #36	; 0x24
   1b8e0:	beq	1b8fc <next@@Base+0x231c>
   1b8e4:	b	1b924 <next@@Base+0x2344>
   1b8e8:	ldr	r4, [r6, #4]!
   1b8ec:	add	r3, r5, #1
   1b8f0:	cmp	r4, #0
   1b8f4:	bne	1b91c <next@@Base+0x233c>
   1b8f8:	mov	r5, r3
   1b8fc:	cmp	r5, #7
   1b900:	bls	1b8e8 <next@@Base+0x2308>
   1b904:	mov	r0, r8
   1b908:	bl	1a6c0 <next@@Base+0x10e0>
   1b90c:	ldr	r4, [r6, #4]!
   1b910:	add	r3, r5, #1
   1b914:	cmp	r4, #0
   1b918:	beq	1b8f8 <next@@Base+0x2318>
   1b91c:	lsl	r6, r5, #5
   1b920:	mov	r5, r3
   1b924:	tst	r4, #1
   1b928:	bne	1b93c <next@@Base+0x235c>
   1b92c:	lsr	r4, r4, #1
   1b930:	tst	r4, #1
   1b934:	add	r6, r6, #1
   1b938:	beq	1b92c <next@@Base+0x234c>
   1b93c:	cmp	r6, #251	; 0xfb
   1b940:	bhi	1b980 <next@@Base+0x23a0>
   1b944:	bl	1b634 <next@@Base+0x2054>
   1b948:	add	fp, r6, r6, lsl #1
   1b94c:	sub	r7, r7, #1
   1b950:	add	fp, r9, fp, lsl #3
   1b954:	lsr	r4, r4, #1
   1b958:	add	r6, r6, #1
   1b95c:	str	r0, [fp, #40]	; 0x28
   1b960:	bl	1b654 <next@@Base+0x2074>
   1b964:	strd	r0, [fp, #48]	; 0x30
   1b968:	bl	1b654 <next@@Base+0x2074>
   1b96c:	cmn	r7, #1
   1b970:	strd	r0, [fp, #56]	; 0x38
   1b974:	bne	1b8d0 <next@@Base+0x22f0>
   1b978:	add	sp, sp, #36	; 0x24
   1b97c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b980:	mov	r0, sl
   1b984:	bl	1a6c0 <next@@Base+0x10e0>
   1b988:	b	1b944 <next@@Base+0x2364>
   1b98c:	andeq	r1, r0, r0, lsr #15
   1b990:	muleq	r0, r4, r6
   1b994:	ldrdeq	r1, [r0], -r0
   1b998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b99c:	sub	sp, sp, #6080	; 0x17c0
   1b9a0:	sub	sp, sp, #28
   1b9a4:	mov	r4, r1
   1b9a8:	strd	r2, [sp, #4]
   1b9ac:	add	r3, sp, #6144	; 0x1800
   1b9b0:	mov	r9, r0
   1b9b4:	ldr	r7, [r3]
   1b9b8:	add	r3, sp, #6144	; 0x1800
   1b9bc:	add	r3, r3, #4
   1b9c0:	ldr	r6, [r3]
   1b9c4:	add	r3, sp, #6144	; 0x1800
   1b9c8:	add	r3, r3, #8
   1b9cc:	ldr	sl, [r3]
   1b9d0:	bl	1b634 <next@@Base+0x2054>
   1b9d4:	add	r3, r4, #12
   1b9d8:	mov	r2, r9
   1b9dc:	str	r3, [sp, #12]
   1b9e0:	mov	r1, r0
   1b9e4:	mov	r0, r3
   1b9e8:	bl	1b050 <next@@Base+0x1a70>
   1b9ec:	cmp	r0, #0
   1b9f0:	beq	1bc78 <next@@Base+0x2698>
   1b9f4:	bl	1b634 <next@@Base+0x2054>
   1b9f8:	ldr	r3, [r4, #8]
   1b9fc:	cmp	r0, r3
   1ba00:	bne	1ba94 <next@@Base+0x24b4>
   1ba04:	ldr	fp, [pc, #628]	; 1bc80 <next@@Base+0x26a0>
   1ba08:	add	r5, sp, #16
   1ba0c:	add	fp, pc, fp
   1ba10:	bl	1a3e8 <next@@Base+0xe08>
   1ba14:	str	r0, [r6]
   1ba18:	bl	1b634 <next@@Base+0x2054>
   1ba1c:	cmp	r0, #-1560281088	; 0xa3000000
   1ba20:	bne	1bad8 <next@@Base+0x24f8>
   1ba24:	bl	1b634 <next@@Base+0x2054>
   1ba28:	mov	r0, r5
   1ba2c:	bl	1b838 <next@@Base+0x2258>
   1ba30:	bl	1a40c <next@@Base+0xe2c>
   1ba34:	add	r2, sp, #2000	; 0x7d0
   1ba38:	add	r2, r2, #8
   1ba3c:	subs	r8, r0, #0
   1ba40:	bne	1bc0c <next@@Base+0x262c>
   1ba44:	ldr	r3, [r7]
   1ba48:	cmp	r3, #0
   1ba4c:	bne	1baa4 <next@@Base+0x24c4>
   1ba50:	ldr	r3, [r2, #-1992]	; 0xfffff838
   1ba54:	cmp	r3, sl
   1ba58:	bne	1ba10 <next@@Base+0x2430>
   1ba5c:	ldr	r3, [sp, #8]
   1ba60:	ldr	r2, [r2, #-1984]	; 0xfffff840
   1ba64:	ldr	r3, [r3]
   1ba68:	cmp	r2, r3
   1ba6c:	bne	1ba10 <next@@Base+0x2430>
   1ba70:	ldr	r2, [pc, #524]	; 1bc84 <next@@Base+0x26a4>
   1ba74:	mov	r1, r5
   1ba78:	ldr	r0, [sp, #4]
   1ba7c:	bl	11fc0 <memcpy@plt>
   1ba80:	ldr	r3, [r6]
   1ba84:	str	r3, [r7]
   1ba88:	b	1ba10 <next@@Base+0x2430>
   1ba8c:	cmp	r0, #0
   1ba90:	bne	1bc4c <next@@Base+0x266c>
   1ba94:	mov	r0, #0
   1ba98:	add	sp, sp, #6080	; 0x17c0
   1ba9c:	add	sp, sp, #28
   1baa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1baa4:	ldr	r0, [pc, #476]	; 1bc88 <next@@Base+0x26a8>
   1baa8:	bl	12014 <malloc@plt>
   1baac:	ldr	r2, [pc, #464]	; 1bc84 <next@@Base+0x26a4>
   1bab0:	mov	r1, r5
   1bab4:	mov	r3, r0
   1bab8:	str	r0, [fp]
   1babc:	add	r0, r0, #8
   1bac0:	str	r3, [sp]
   1bac4:	bl	11fc0 <memcpy@plt>
   1bac8:	ldr	r3, [sp]
   1bacc:	str	r8, [r3]
   1bad0:	ldr	fp, [fp]
   1bad4:	b	1ba10 <next@@Base+0x2430>
   1bad8:	ldr	r5, [r4, #52]	; 0x34
   1badc:	cmp	r5, #0
   1bae0:	beq	1ba8c <next@@Base+0x24ac>
   1bae4:	ldr	r3, [r4, #56]	; 0x38
   1bae8:	cmp	r0, #16777216	; 0x1000000
   1baec:	ldr	r8, [r3]
   1baf0:	bne	1bc48 <next@@Base+0x2668>
   1baf4:	ldr	r6, [pc, #400]	; 1bc8c <next@@Base+0x26ac>
   1baf8:	mov	r5, #0
   1bafc:	add	r6, pc, r6
   1bb00:	add	r6, r6, #4
   1bb04:	b	1bb48 <next@@Base+0x2568>
   1bb08:	mov	r2, r6
   1bb0c:	mov	r3, r5
   1bb10:	mov	r1, r4
   1bb14:	mov	r0, r9
   1bb18:	bl	1b698 <next@@Base+0x20b8>
   1bb1c:	subs	r6, r0, #0
   1bb20:	beq	1bc4c <next@@Base+0x266c>
   1bb24:	bl	1b634 <next@@Base+0x2054>
   1bb28:	ldr	r3, [r4, #52]	; 0x34
   1bb2c:	add	r5, r5, #1
   1bb30:	cmp	r3, r5
   1bb34:	beq	1ba8c <next@@Base+0x24ac>
   1bb38:	ldr	r3, [r4, #56]	; 0x38
   1bb3c:	cmp	r0, #16777216	; 0x1000000
   1bb40:	ldr	r8, [r3, r5, lsl #2]
   1bb44:	bne	1bc4c <next@@Base+0x266c>
   1bb48:	bl	1b634 <next@@Base+0x2054>
   1bb4c:	cmp	r0, #0
   1bb50:	beq	1bb24 <next@@Base+0x2544>
   1bb54:	cmp	r0, #3
   1bb58:	bne	1bc4c <next@@Base+0x266c>
   1bb5c:	cmp	r8, #0
   1bb60:	beq	1bb08 <next@@Base+0x2528>
   1bb64:	ldr	r3, [r8]
   1bb68:	cmp	r4, r3
   1bb6c:	bne	1bb08 <next@@Base+0x2528>
   1bb70:	bl	1b634 <next@@Base+0x2054>
   1bb74:	ldr	r3, [r8, #4]
   1bb78:	cmp	r0, r3
   1bb7c:	bne	1bc4c <next@@Base+0x266c>
   1bb80:	bl	1b634 <next@@Base+0x2054>
   1bb84:	ldr	r3, [r8, #8]
   1bb88:	cmp	r0, r3
   1bb8c:	bne	1bc4c <next@@Base+0x266c>
   1bb90:	bl	1b634 <next@@Base+0x2054>
   1bb94:	ldr	r3, [r8, #12]
   1bb98:	cmp	r0, r3
   1bb9c:	bne	1bc4c <next@@Base+0x266c>
   1bba0:	ldr	r7, [pc, #232]	; 1bc90 <next@@Base+0x26b0>
   1bba4:	ldr	fp, [sp, #12]
   1bba8:	add	r8, r8, #16
   1bbac:	ldr	sl, [fp, #4]!
   1bbb0:	cmp	sl, #0
   1bbb4:	beq	1bbec <next@@Base+0x260c>
   1bbb8:	bl	1b634 <next@@Base+0x2054>
   1bbbc:	str	r0, [sp]
   1bbc0:	bl	1b634 <next@@Base+0x2054>
   1bbc4:	ldr	r3, [sp]
   1bbc8:	cmp	r3, r7
   1bbcc:	bne	1bc4c <next@@Base+0x266c>
   1bbd0:	ldr	r3, [r8]
   1bbd4:	mov	r1, r3
   1bbd8:	cmp	r0, r3, lsl #1
   1bbdc:	bne	1bc4c <next@@Base+0x266c>
   1bbe0:	ldr	r0, [r8, #4]
   1bbe4:	blx	sl
   1bbe8:	add	r8, r8, #8
   1bbec:	ldr	r3, [pc, #160]	; 1bc94 <next@@Base+0x26b4>
   1bbf0:	add	r7, r7, #131072	; 0x20000
   1bbf4:	cmp	r7, r3
   1bbf8:	bne	1bbac <next@@Base+0x25cc>
   1bbfc:	bl	1a40c <next@@Base+0xe2c>
   1bc00:	cmp	r0, #0
   1bc04:	beq	1bb24 <next@@Base+0x2544>
   1bc08:	mov	r8, r0
   1bc0c:	cmp	r8, #0
   1bc10:	blt	1bc3c <next@@Base+0x265c>
   1bc14:	ldr	r2, [pc, #124]	; 1bc98 <next@@Base+0x26b8>
   1bc18:	add	r2, pc, r2
   1bc1c:	ldr	r0, [pc, #120]	; 1bc9c <next@@Base+0x26bc>
   1bc20:	mov	r1, r9
   1bc24:	add	r0, pc, r0
   1bc28:	bl	1a6c0 <next@@Base+0x10e0>
   1bc2c:	mvn	r0, #0
   1bc30:	add	sp, sp, #6080	; 0x17c0
   1bc34:	add	sp, sp, #28
   1bc38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc3c:	ldr	r2, [pc, #92]	; 1bca0 <next@@Base+0x26c0>
   1bc40:	add	r2, pc, r2
   1bc44:	b	1bc1c <next@@Base+0x263c>
   1bc48:	mov	r5, #0
   1bc4c:	ldr	r2, [pc, #80]	; 1bca4 <next@@Base+0x26c4>
   1bc50:	ldr	r0, [pc, #80]	; 1bca8 <next@@Base+0x26c8>
   1bc54:	mov	r3, r5
   1bc58:	mov	r1, r9
   1bc5c:	add	r2, pc, r2
   1bc60:	add	r0, pc, r0
   1bc64:	bl	1a6c0 <next@@Base+0x10e0>
   1bc68:	mvn	r0, #0
   1bc6c:	add	sp, sp, #6080	; 0x17c0
   1bc70:	add	sp, sp, #28
   1bc74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc78:	mvn	r0, #0
   1bc7c:	b	1ba98 <next@@Base+0x24b8>
   1bc80:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1bc84:	andeq	r1, r0, r8, asr #15
   1bc88:	ldrdeq	r1, [r0], -r0
   1bc8c:	andeq	r4, r1, r4, ror #19
   1bc90:			; <UNDEFINED> instruction: 0x01a10000
   1bc94:			; <UNDEFINED> instruction: 0x01b30000
   1bc98:	andeq	r1, r0, r4, asr #7
   1bc9c:	strdeq	r1, [r0], -r4
   1bca0:	muleq	r0, r0, r3
   1bca4:	andeq	r1, r0, r8, lsl #7
   1bca8:	muleq	r0, r0, r3
   1bcac:	ldr	r3, [pc, #72]	; 1bcfc <next@@Base+0x271c>
   1bcb0:	ldr	r2, [pc, #72]	; 1bd00 <next@@Base+0x2720>
   1bcb4:	add	r3, pc, r3
   1bcb8:	push	{r4, r5, r6, lr}
   1bcbc:	mov	r5, r0
   1bcc0:	ldr	r4, [r3, r2]
   1bcc4:	ldr	r0, [r4, #8]
   1bcc8:	cmp	r0, #0
   1bccc:	bne	1bcf4 <next@@Base+0x2714>
   1bcd0:	lsl	r1, r5, #2
   1bcd4:	mov	r2, #0
   1bcd8:	ldr	r0, [r4]
   1bcdc:	bl	120ec <fseek@plt>
   1bce0:	ldr	r0, [r4]
   1bce4:	bl	11fcc <ftell@plt>
   1bce8:	asr	r0, r0, #2
   1bcec:	str	r0, [r4, #4]
   1bcf0:	pop	{r4, r5, r6, pc}
   1bcf4:	bl	1a4b8 <next@@Base+0xed8>
   1bcf8:	b	1bcd0 <next@@Base+0x26f0>
   1bcfc:	andeq	r2, r1, r4, asr #6
   1bd00:	andeq	r0, r0, r4, lsr #1
   1bd04:	cmp	r2, #0
   1bd08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd0c:	mov	r8, r0
   1bd10:	sub	sp, sp, #20
   1bd14:	mov	r5, r1
   1bd18:	mov	r4, r3
   1bd1c:	beq	1beec <next@@Base+0x290c>
   1bd20:	cmp	r4, #0
   1bd24:	bne	1bf08 <next@@Base+0x2928>
   1bd28:	mov	r1, r5
   1bd2c:	ldr	r5, [pc, #480]	; 1bf14 <next@@Base+0x2934>
   1bd30:	mov	r0, #-1560281088	; 0xa3000000
   1bd34:	add	r5, pc, r5
   1bd38:	bl	1b52c <next@@Base+0x1f4c>
   1bd3c:	ldr	r4, [r5]
   1bd40:	cmp	r4, #0
   1bd44:	beq	1bd70 <next@@Base+0x2790>
   1bd48:	add	r1, r4, #8
   1bd4c:	mov	r0, #-1560281088	; 0xa3000000
   1bd50:	bl	1b52c <next@@Base+0x1f4c>
   1bd54:	ldr	r3, [r5]
   1bd58:	mov	r0, r3
   1bd5c:	ldr	r4, [r3]
   1bd60:	bl	11fb4 <free@plt>
   1bd64:	cmp	r4, #0
   1bd68:	str	r4, [r5]
   1bd6c:	bne	1bd48 <next@@Base+0x2768>
   1bd70:	ldr	r3, [r8, #52]	; 0x34
   1bd74:	cmp	r3, #0
   1bd78:	beq	1bec4 <next@@Base+0x28e4>
   1bd7c:	ldr	r3, [pc, #404]	; 1bf18 <next@@Base+0x2938>
   1bd80:	ldr	r9, [pc, #404]	; 1bf1c <next@@Base+0x293c>
   1bd84:	add	r3, pc, r3
   1bd88:	str	r3, [sp, #4]
   1bd8c:	ldr	r3, [pc, #396]	; 1bf20 <next@@Base+0x2940>
   1bd90:	mov	r7, #0
   1bd94:	add	r3, pc, r3
   1bd98:	str	r3, [sp, #12]
   1bd9c:	b	1bdd8 <next@@Base+0x27f8>
   1bda0:	ldr	r3, [r8, #56]	; 0x38
   1bda4:	ldr	r4, [r3, r7, lsl #2]
   1bda8:	cmp	r4, #0
   1bdac:	beq	1bdbc <next@@Base+0x27dc>
   1bdb0:	ldr	r3, [r4]
   1bdb4:	cmp	r3, r8
   1bdb8:	beq	1bed4 <next@@Base+0x28f4>
   1bdbc:	mov	r1, #0
   1bdc0:	mov	r0, #16777216	; 0x1000000
   1bdc4:	bl	1b50c <next@@Base+0x1f2c>
   1bdc8:	ldr	r3, [r8, #52]	; 0x34
   1bdcc:	add	r7, r7, #1
   1bdd0:	cmp	r3, r7
   1bdd4:	beq	1bec4 <next@@Base+0x28e4>
   1bdd8:	ldr	r3, [sp, #4]
   1bddc:	ldr	r4, [r3, #4]
   1bde0:	cmp	r4, #0
   1bde4:	beq	1bda0 <next@@Base+0x27c0>
   1bde8:	ldr	r3, [r4, #4]
   1bdec:	cmp	r3, r7
   1bdf0:	bne	1bda0 <next@@Base+0x27c0>
   1bdf4:	mov	r3, #1
   1bdf8:	mov	r1, #3
   1bdfc:	mov	r0, #16777216	; 0x1000000
   1be00:	add	r4, r4, #8
   1be04:	str	r3, [sp, #8]
   1be08:	bl	1b50c <next@@Base+0x1f2c>
   1be0c:	ldr	r0, [r4, #4]
   1be10:	bl	1b4d4 <next@@Base+0x1ef4>
   1be14:	ldr	r0, [r4, #8]
   1be18:	bl	1b4d4 <next@@Base+0x1ef4>
   1be1c:	ldr	r0, [r4, #12]
   1be20:	bl	1b4d4 <next@@Base+0x1ef4>
   1be24:	ldr	r5, [pc, #248]	; 1bf24 <next@@Base+0x2944>
   1be28:	add	r4, r4, #16
   1be2c:	add	r6, r8, #12
   1be30:	b	1be40 <next@@Base+0x2860>
   1be34:	add	r5, r5, #131072	; 0x20000
   1be38:	cmp	r5, r9
   1be3c:	beq	1be90 <next@@Base+0x28b0>
   1be40:	ldr	r3, [r6, #4]!
   1be44:	cmp	r3, #0
   1be48:	beq	1be34 <next@@Base+0x2854>
   1be4c:	ldr	fp, [r4]
   1be50:	mov	r0, r5
   1be54:	sub	sl, fp, #1
   1be58:	lsl	r1, fp, #1
   1be5c:	bl	1b50c <next@@Base+0x1f2c>
   1be60:	cmp	fp, #0
   1be64:	ldr	fp, [r4, #4]
   1be68:	beq	1be80 <next@@Base+0x28a0>
   1be6c:	sub	sl, sl, #1
   1be70:	ldrd	r0, [fp], #8
   1be74:	bl	1b4ec <next@@Base+0x1f0c>
   1be78:	cmn	sl, #1
   1be7c:	bne	1be6c <next@@Base+0x288c>
   1be80:	add	r5, r5, #131072	; 0x20000
   1be84:	cmp	r5, r9
   1be88:	add	r4, r4, #8
   1be8c:	bne	1be40 <next@@Base+0x2860>
   1be90:	ldr	r3, [sp, #8]
   1be94:	cmp	r3, #0
   1be98:	beq	1bdc8 <next@@Base+0x27e8>
   1be9c:	ldr	r4, [sp, #12]
   1bea0:	mov	r2, #9
   1bea4:	mov	r0, r8
   1bea8:	ldr	r1, [r4, #4]
   1beac:	bl	1a6f4 <next@@Base+0x1114>
   1beb0:	ldr	r3, [r8, #52]	; 0x34
   1beb4:	add	r7, r7, #1
   1beb8:	cmp	r3, r7
   1bebc:	str	r0, [r4, #4]
   1bec0:	bne	1bdd8 <next@@Base+0x27f8>
   1bec4:	mov	r0, #0
   1bec8:	add	sp, sp, #20
   1becc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bed0:	b	1b4d4 <next@@Base+0x1ef4>
   1bed4:	mov	r1, #3
   1bed8:	mov	r0, #16777216	; 0x1000000
   1bedc:	bl	1b50c <next@@Base+0x1f2c>
   1bee0:	mov	r3, #0
   1bee4:	str	r3, [sp, #8]
   1bee8:	b	1be0c <next@@Base+0x282c>
   1beec:	ldr	r1, [pc, #52]	; 1bf28 <next@@Base+0x2948>
   1bef0:	ldr	r0, [pc, #52]	; 1bf2c <next@@Base+0x294c>
   1bef4:	bl	1b50c <next@@Base+0x1f2c>
   1bef8:	ldr	r0, [r8, #8]
   1befc:	bl	1b4d4 <next@@Base+0x1ef4>
   1bf00:	cmp	r4, #0
   1bf04:	beq	1bd28 <next@@Base+0x2748>
   1bf08:	mov	r0, r4
   1bf0c:	bl	1bcac <next@@Base+0x26cc>
   1bf10:	b	1bd28 <next@@Base+0x2748>
   1bf14:	andeq	r4, r1, ip, lsr #15
   1bf18:	andeq	r4, r1, ip, asr r7
   1bf1c:			; <UNDEFINED> instruction: 0x01b30000
   1bf20:	andeq	r4, r1, ip, asr #14
   1bf24:			; <UNDEFINED> instruction: 0x01a10000
   1bf28:	teqmi	r8, sl, lsr #6
   1bf2c:	strbvs	r6, [r3, -r1, ror #8]!

0001bf30 <__gcov_sort_n_vals@@Base>:
   1bf30:	cmp	r1, #2
   1bf34:	bxle	lr
   1bf38:	sub	r1, r1, #3
   1bf3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf40:	add	r2, r0, #8
   1bf44:	sub	sp, sp, #20
   1bf48:	mov	r6, r0
   1bf4c:	bic	r7, r1, #1
   1bf50:	mvn	r8, #15
   1bf54:	mov	lr, #0
   1bf58:	ldrd	r0, [r2]
   1bf5c:	ldrd	r4, [r2, #16]
   1bf60:	ldrd	sl, [r2, #8]
   1bf64:	add	r9, r2, #16
   1bf68:	cmp	r0, r4
   1bf6c:	sbcs	r3, r1, r5
   1bf70:	mov	ip, r9
   1bf74:	sub	r1, r6, r8
   1bf78:	strd	sl, [sp]
   1bf7c:	mov	r3, lr
   1bf80:	bge	1bfe8 <__gcov_sort_n_vals@@Base+0xb8>
   1bf84:	add	sl, r8, #16
   1bf88:	mvn	fp, #1
   1bf8c:	add	sl, r2, sl
   1bf90:	orr	fp, lr, fp
   1bf94:	str	r7, [sp, #8]
   1bf98:	str	r6, [sp, #12]
   1bf9c:	b	1bfb4 <__gcov_sort_n_vals@@Base+0x84>
   1bfa0:	ldrd	r6, [ip, #-16]
   1bfa4:	sub	r2, r2, #16
   1bfa8:	cmp	r6, r4
   1bfac:	sbcs	r1, r7, r5
   1bfb0:	bge	1c010 <__gcov_sort_n_vals@@Base+0xe0>
   1bfb4:	ldrd	r6, [r2, #-8]
   1bfb8:	lsl	r1, r3, #3
   1bfbc:	mov	r0, r3
   1bfc0:	strd	r6, [r2, #8]
   1bfc4:	ldrd	r6, [sl, r1]
   1bfc8:	sub	r3, r3, #2
   1bfcc:	cmp	r3, fp
   1bfd0:	strd	r6, [r2, #16]
   1bfd4:	mov	ip, r2
   1bfd8:	bne	1bfa0 <__gcov_sort_n_vals@@Base+0x70>
   1bfdc:	ldr	r6, [sp, #12]
   1bfe0:	ldr	r7, [sp, #8]
   1bfe4:	add	r1, r6, r1
   1bfe8:	ldrd	r2, [sp]
   1bfec:	cmp	lr, r7
   1bff0:	sub	r8, r8, #16
   1bff4:	strd	r2, [r1]
   1bff8:	add	lr, lr, #2
   1bffc:	strd	r4, [ip]
   1c000:	mov	r2, r9
   1c004:	bne	1bf58 <__gcov_sort_n_vals@@Base+0x28>
   1c008:	add	sp, sp, #20
   1c00c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c010:	ldr	r6, [sp, #12]
   1c014:	ldr	r7, [sp, #8]
   1c018:	add	r1, r6, r0, lsl #3
   1c01c:	b	1bfe8 <__gcov_sort_n_vals@@Base+0xb8>
   1c020:	push	{r4, r5, r6, lr}
   1c024:	ldr	r4, [pc, #76]	; 1c078 <__gcov_sort_n_vals@@Base+0x148>
   1c028:	smull	r2, r3, r4, r0
   1c02c:	asr	r4, r0, #31
   1c030:	rsb	r4, r4, r3, asr #1
   1c034:	add	r4, r4, r4, lsl #3
   1c038:	subs	r4, r0, r4
   1c03c:	bne	1c074 <__gcov_sort_n_vals@@Base+0x144>
   1c040:	cmp	r0, #0
   1c044:	mov	r6, r0
   1c048:	ldr	r5, [r1]
   1c04c:	pople	{r4, r5, r6, pc}
   1c050:	add	r5, r5, #8
   1c054:	mov	r0, r5
   1c058:	add	r4, r4, #9
   1c05c:	mov	r1, #8
   1c060:	bl	1bf30 <__gcov_sort_n_vals@@Base>
   1c064:	cmp	r6, r4
   1c068:	add	r5, r5, #72	; 0x48
   1c06c:	bgt	1c054 <__gcov_sort_n_vals@@Base+0x124>
   1c070:	pop	{r4, r5, r6, pc}
   1c074:	bl	12104 <abort@plt>
   1c078:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1c07c:	ldr	r3, [r0, #48]	; 0x30
   1c080:	cmp	r3, #0
   1c084:	bxeq	lr
   1c088:	push	{r4, r5, r6, lr}
   1c08c:	ldr	lr, [r0, #52]	; 0x34
   1c090:	cmp	lr, #0
   1c094:	popeq	{r4, r5, r6, pc}
   1c098:	mov	r5, r0
   1c09c:	mov	r4, #0
   1c0a0:	add	r6, r0, #12
   1c0a4:	ldr	r1, [r5, #56]	; 0x38
   1c0a8:	mov	r2, r6
   1c0ac:	mov	r3, #0
   1c0b0:	ldr	r1, [r1, r4, lsl #2]
   1c0b4:	add	r1, r1, #16
   1c0b8:	ldr	ip, [r2, #4]!
   1c0bc:	cmp	ip, #0
   1c0c0:	beq	1c0d0 <__gcov_sort_n_vals@@Base+0x1a0>
   1c0c4:	cmp	r3, #8
   1c0c8:	beq	1c0ec <__gcov_sort_n_vals@@Base+0x1bc>
   1c0cc:	add	r1, r1, #8
   1c0d0:	add	r3, r3, #1
   1c0d4:	cmp	r3, #9
   1c0d8:	bne	1c0b8 <__gcov_sort_n_vals@@Base+0x188>
   1c0dc:	add	r4, r4, #1
   1c0e0:	cmp	lr, r4
   1c0e4:	bne	1c0a4 <__gcov_sort_n_vals@@Base+0x174>
   1c0e8:	pop	{r4, r5, r6, pc}
   1c0ec:	ldr	r0, [r1], #4
   1c0f0:	bl	1c020 <__gcov_sort_n_vals@@Base+0xf0>
   1c0f4:	ldr	lr, [r5, #52]	; 0x34
   1c0f8:	b	1c0dc <__gcov_sort_n_vals@@Base+0x1ac>
   1c0fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c100:	sub	sp, sp, #6080	; 0x17c0
   1c104:	ldr	ip, [pc, #396]	; 1c298 <__gcov_sort_n_vals@@Base+0x368>
   1c108:	sub	sp, sp, #36	; 0x24
   1c10c:	add	ip, pc, ip
   1c110:	add	r5, sp, #2016	; 0x7e0
   1c114:	mov	r4, r0
   1c118:	mov	r6, r1
   1c11c:	mov	r1, #0
   1c120:	str	r1, [ip, #4]
   1c124:	str	r1, [ip]
   1c128:	mov	r8, r2
   1c12c:	mov	r7, r3
   1c130:	str	r1, [r5, #-2000]	; 0xfffff830
   1c134:	str	r1, [r5, #-1996]	; 0xfffff834
   1c138:	bl	1c07c <__gcov_sort_n_vals@@Base+0x14c>
   1c13c:	mov	r1, r6
   1c140:	ldr	r0, [r4, #12]
   1c144:	bl	1b34c <next@@Base+0x1d6c>
   1c148:	cmn	r0, #1
   1c14c:	beq	1c1c8 <__gcov_sort_n_vals@@Base+0x298>
   1c150:	bl	1b634 <next@@Base+0x2054>
   1c154:	cmp	r0, #0
   1c158:	beq	1c1d4 <__gcov_sort_n_vals@@Base+0x2a4>
   1c15c:	ldr	r2, [pc, #312]	; 1c29c <__gcov_sort_n_vals@@Base+0x36c>
   1c160:	ldr	r1, [r6]
   1c164:	cmp	r0, r2
   1c168:	beq	1c22c <__gcov_sort_n_vals@@Base+0x2fc>
   1c16c:	ldr	r0, [pc, #300]	; 1c2a0 <__gcov_sort_n_vals@@Base+0x370>
   1c170:	add	r0, pc, r0
   1c174:	bl	1a6c0 <next@@Base+0x10e0>
   1c178:	ldr	r5, [pc, #292]	; 1c2a4 <__gcov_sort_n_vals@@Base+0x374>
   1c17c:	add	r5, pc, r5
   1c180:	ldr	r1, [r5, #4]
   1c184:	cmp	r1, #0
   1c188:	beq	1c1a8 <__gcov_sort_n_vals@@Base+0x278>
   1c18c:	mov	r2, #9
   1c190:	mov	r0, r4
   1c194:	bl	1a6f4 <next@@Base+0x1114>
   1c198:	cmp	r0, #0
   1c19c:	mov	r1, r0
   1c1a0:	str	r0, [r5, #4]
   1c1a4:	bne	1c18c <__gcov_sort_n_vals@@Base+0x25c>
   1c1a8:	bl	1b464 <next@@Base+0x1e84>
   1c1ac:	cmp	r0, #0
   1c1b0:	beq	1c1c8 <__gcov_sort_n_vals@@Base+0x298>
   1c1b4:	blt	1c28c <__gcov_sort_n_vals@@Base+0x35c>
   1c1b8:	ldr	r0, [pc, #232]	; 1c2a8 <__gcov_sort_n_vals@@Base+0x378>
   1c1bc:	add	r0, pc, r0
   1c1c0:	ldr	r1, [r6]
   1c1c4:	bl	1a6c0 <next@@Base+0x10e0>
   1c1c8:	add	sp, sp, #6080	; 0x17c0
   1c1cc:	add	sp, sp, #36	; 0x24
   1c1d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c1d4:	bl	1b204 <next@@Base+0x1c24>
   1c1d8:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1c1dc:	add	r9, sp, #24
   1c1e0:	cmp	r1, #0
   1c1e4:	beq	1c274 <__gcov_sort_n_vals@@Base+0x344>
   1c1e8:	add	r3, sp, #6144	; 0x1800
   1c1ec:	str	r7, [sp, #4]
   1c1f0:	ldr	r3, [r3]
   1c1f4:	mov	r1, r8
   1c1f8:	str	r3, [sp]
   1c1fc:	add	r2, r4, #16
   1c200:	mov	r3, r9
   1c204:	ldr	r0, [r6]
   1c208:	bl	1b0b0 <next@@Base+0x1ad0>
   1c20c:	cmn	r0, #1
   1c210:	beq	1c178 <__gcov_sort_n_vals@@Base+0x248>
   1c214:	mov	r1, r9
   1c218:	ldr	r3, [r5, #-2000]	; 0xfffff830
   1c21c:	ldr	r2, [r5, #-1996]	; 0xfffff834
   1c220:	mov	r0, r4
   1c224:	bl	1bd04 <next@@Base+0x2724>
   1c228:	b	1c178 <__gcov_sort_n_vals@@Base+0x248>
   1c22c:	add	ip, sp, #20
   1c230:	add	r3, sp, #16
   1c234:	str	r7, [sp, #8]
   1c238:	stm	sp, {r3, ip}
   1c23c:	add	r3, sp, #6144	; 0x1800
   1c240:	add	r9, sp, #24
   1c244:	ldr	r3, [r3]
   1c248:	mov	r0, r1
   1c24c:	mov	r2, r9
   1c250:	add	r3, r3, #8
   1c254:	mov	r1, r4
   1c258:	bl	1b998 <next@@Base+0x23b8>
   1c25c:	cmn	r0, #1
   1c260:	beq	1c178 <__gcov_sort_n_vals@@Base+0x248>
   1c264:	bl	1b204 <next@@Base+0x1c24>
   1c268:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1c26c:	cmp	r1, #0
   1c270:	bne	1c1e8 <__gcov_sort_n_vals@@Base+0x2b8>
   1c274:	ldr	r2, [pc, #48]	; 1c2ac <__gcov_sort_n_vals@@Base+0x37c>
   1c278:	mov	r0, r9
   1c27c:	bl	12080 <memset@plt>
   1c280:	ldr	r3, [r5, #-1996]	; 0xfffff834
   1c284:	str	r3, [r5, #-2000]	; 0xfffff830
   1c288:	b	1c1e8 <__gcov_sort_n_vals@@Base+0x2b8>
   1c28c:	ldr	r0, [pc, #28]	; 1c2b0 <__gcov_sort_n_vals@@Base+0x380>
   1c290:	add	r0, pc, r0
   1c294:	b	1c1c0 <__gcov_sort_n_vals@@Base+0x290>
   1c298:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1c29c:	strbvs	r6, [r3, -r1, ror #8]!
   1c2a0:	andeq	r0, r0, r0, lsl #30
   1c2a4:	andeq	r4, r1, r4, ror #6
   1c2a8:	muleq	r0, r8, lr
   1c2ac:	andeq	r1, r0, r8, asr #15
   1c2b0:	andeq	r0, r0, r4, lsr #27
   1c2b4:	push	{r4, r5, r6, r7, r8, lr}
   1c2b8:	sub	sp, sp, #6080	; 0x17c0
   1c2bc:	sub	sp, sp, #32
   1c2c0:	add	r6, sp, #24
   1c2c4:	add	r2, sp, #12
   1c2c8:	mov	r8, r1
   1c2cc:	mov	r1, r6
   1c2d0:	mov	r4, r0
   1c2d4:	bl	1a90c <next@@Base+0x132c>
   1c2d8:	add	r5, sp, #8
   1c2dc:	mov	r7, r0
   1c2e0:	mov	r0, r5
   1c2e4:	bl	1aaa0 <next@@Base+0x14c0>
   1c2e8:	cmp	r4, #0
   1c2ec:	beq	1c314 <__gcov_sort_n_vals@@Base+0x3e4>
   1c2f0:	mov	r0, r4
   1c2f4:	str	r6, [sp]
   1c2f8:	mov	r3, r7
   1c2fc:	mov	r2, r8
   1c300:	mov	r1, r5
   1c304:	bl	1c0fc <__gcov_sort_n_vals@@Base+0x1cc>
   1c308:	ldr	r4, [r4, #4]
   1c30c:	cmp	r4, #0
   1c310:	bne	1c2f0 <__gcov_sort_n_vals@@Base+0x3c0>
   1c314:	ldr	r0, [sp, #8]
   1c318:	bl	11fb4 <free@plt>
   1c31c:	add	sp, sp, #6080	; 0x17c0
   1c320:	add	sp, sp, #32
   1c324:	pop	{r4, r5, r6, r7, r8, pc}
   1c328:	ldrb	r1, [r0, #4]
   1c32c:	tst	r1, #1
   1c330:	bxne	lr
   1c334:	push	{r4, lr}
   1c338:	lsr	r1, r1, #1
   1c33c:	mov	r4, r0
   1c340:	and	r1, r1, #1
   1c344:	ldr	r0, [r0]
   1c348:	bl	1c2b4 <__gcov_sort_n_vals@@Base+0x384>
   1c34c:	ldrb	r3, [r4, #4]
   1c350:	bic	r3, r3, #3
   1c354:	orr	r3, r3, #3
   1c358:	strb	r3, [r4, #4]
   1c35c:	pop	{r4, pc}
   1c360:	push	{r4, r5, r6, lr}
   1c364:	ldr	r4, [pc, #84]	; 1c3c0 <__gcov_sort_n_vals@@Base+0x490>
   1c368:	ldr	r5, [pc, #84]	; 1c3c4 <__gcov_sort_n_vals@@Base+0x494>
   1c36c:	add	r4, pc, r4
   1c370:	mov	r0, r4
   1c374:	bl	1c328 <__gcov_sort_n_vals@@Base+0x3f8>
   1c378:	ldr	r3, [r4, #8]
   1c37c:	add	r5, pc, r5
   1c380:	cmp	r3, #0
   1c384:	ldrne	r2, [r4, #12]
   1c388:	strne	r2, [r3, #12]
   1c38c:	ldr	r2, [pc, #52]	; 1c3c8 <__gcov_sort_n_vals@@Base+0x498>
   1c390:	add	r2, pc, r2
   1c394:	ldr	r2, [r2, #12]
   1c398:	cmp	r2, #0
   1c39c:	strne	r3, [r2, #8]
   1c3a0:	beq	1c3ac <__gcov_sort_n_vals@@Base+0x47c>
   1c3a4:	pop	{r4, r5, r6, lr}
   1c3a8:	b	1a468 <next@@Base+0xe88>
   1c3ac:	ldr	r2, [pc, #24]	; 1c3cc <__gcov_sort_n_vals@@Base+0x49c>
   1c3b0:	ldr	r2, [r5, r2]
   1c3b4:	pop	{r4, r5, r6, lr}
   1c3b8:	str	r3, [r2, #4]
   1c3bc:	b	1a468 <next@@Base+0xe88>
   1c3c0:	andeq	r4, r1, r4, lsr r3
   1c3c4:	andeq	r1, r1, ip, ror ip
   1c3c8:	andeq	r4, r1, r0, lsl r3
   1c3cc:	andeq	r0, r0, r0, lsr #1
   1c3d0:	ldr	r1, [r0]
   1c3d4:	push	{r4, r5, r6, lr}
   1c3d8:	cmp	r1, #0
   1c3dc:	ldr	r5, [pc, #156]	; 1c480 <__gcov_sort_n_vals@@Base+0x550>
   1c3e0:	add	r5, pc, r5
   1c3e4:	popeq	{r4, r5, r6, pc}
   1c3e8:	ldr	r3, [r0, #52]	; 0x34
   1c3ec:	cmp	r3, #0
   1c3f0:	popeq	{r4, r5, r6, pc}
   1c3f4:	mov	r4, r0
   1c3f8:	mov	r2, #0
   1c3fc:	add	r0, r0, #12
   1c400:	bl	1b050 <next@@Base+0x1a70>
   1c404:	cmp	r0, #0
   1c408:	popeq	{r4, r5, r6, pc}
   1c40c:	ldr	r6, [pc, #112]	; 1c484 <__gcov_sort_n_vals@@Base+0x554>
   1c410:	add	r6, pc, r6
   1c414:	ldr	r2, [r6]
   1c418:	cmp	r2, #0
   1c41c:	beq	1c434 <__gcov_sort_n_vals@@Base+0x504>
   1c420:	ldr	r3, [pc, #96]	; 1c488 <__gcov_sort_n_vals@@Base+0x558>
   1c424:	str	r2, [r4, #4]
   1c428:	add	r3, pc, r3
   1c42c:	str	r4, [r3]
   1c430:	pop	{r4, r5, r6, pc}
   1c434:	ldr	r3, [pc, #80]	; 1c48c <__gcov_sort_n_vals@@Base+0x55c>
   1c438:	ldr	r2, [pc, #80]	; 1c490 <__gcov_sort_n_vals@@Base+0x560>
   1c43c:	mov	r0, #12
   1c440:	ldr	r5, [r5, r3]
   1c444:	add	r2, pc, r2
   1c448:	ldr	r1, [r5]
   1c44c:	bl	1b050 <next@@Base+0x1a70>
   1c450:	cmp	r0, #0
   1c454:	ldreq	r2, [r6]
   1c458:	beq	1c420 <__gcov_sort_n_vals@@Base+0x4f0>
   1c45c:	ldr	r3, [r5, #4]
   1c460:	cmp	r3, #0
   1c464:	str	r3, [r6, #8]
   1c468:	strne	r6, [r3, #12]
   1c46c:	ldr	r3, [pc, #32]	; 1c494 <__gcov_sort_n_vals@@Base+0x564>
   1c470:	add	r3, pc, r3
   1c474:	str	r3, [r5, #4]
   1c478:	ldr	r2, [r3]
   1c47c:	b	1c420 <__gcov_sort_n_vals@@Base+0x4f0>
   1c480:	andeq	r1, r1, r8, lsl ip
   1c484:	muleq	r1, r0, r2
   1c488:	andeq	r4, r1, r8, ror r2
   1c48c:	andeq	r0, r0, r0, lsr #1
   1c490:	andeq	r0, r0, r0, asr ip
   1c494:	andeq	r4, r1, r0, lsr r2
   1c498:	cmp	r3, #0
   1c49c:	cmpeq	r2, #0
   1c4a0:	bne	1c4c4 <__gcov_sort_n_vals@@Base+0x594>
   1c4a4:	cmp	r1, #0
   1c4a8:	movlt	r1, #-2147483648	; 0x80000000
   1c4ac:	movlt	r0, #0
   1c4b0:	blt	1c4c0 <__gcov_sort_n_vals@@Base+0x590>
   1c4b4:	cmpeq	r0, #0
   1c4b8:	mvnne	r1, #-2147483648	; 0x80000000
   1c4bc:	mvnne	r0, #0
   1c4c0:	b	1c56c <__gcov_sort_n_vals@@Base+0x63c>
   1c4c4:	sub	sp, sp, #8
   1c4c8:	push	{sp, lr}
   1c4cc:	cmp	r1, #0
   1c4d0:	blt	1c4f0 <__gcov_sort_n_vals@@Base+0x5c0>
   1c4d4:	cmp	r3, #0
   1c4d8:	blt	1c524 <__gcov_sort_n_vals@@Base+0x5f4>
   1c4dc:	bl	1c5c0 <__gcov_sort_n_vals@@Base+0x690>
   1c4e0:	ldr	lr, [sp, #4]
   1c4e4:	add	sp, sp, #8
   1c4e8:	pop	{r2, r3}
   1c4ec:	bx	lr
   1c4f0:	rsbs	r0, r0, #0
   1c4f4:	sbc	r1, r1, r1, lsl #1
   1c4f8:	cmp	r3, #0
   1c4fc:	blt	1c548 <__gcov_sort_n_vals@@Base+0x618>
   1c500:	bl	1c5c0 <__gcov_sort_n_vals@@Base+0x690>
   1c504:	ldr	lr, [sp, #4]
   1c508:	add	sp, sp, #8
   1c50c:	pop	{r2, r3}
   1c510:	rsbs	r0, r0, #0
   1c514:	sbc	r1, r1, r1, lsl #1
   1c518:	rsbs	r2, r2, #0
   1c51c:	sbc	r3, r3, r3, lsl #1
   1c520:	bx	lr
   1c524:	rsbs	r2, r2, #0
   1c528:	sbc	r3, r3, r3, lsl #1
   1c52c:	bl	1c5c0 <__gcov_sort_n_vals@@Base+0x690>
   1c530:	ldr	lr, [sp, #4]
   1c534:	add	sp, sp, #8
   1c538:	pop	{r2, r3}
   1c53c:	rsbs	r0, r0, #0
   1c540:	sbc	r1, r1, r1, lsl #1
   1c544:	bx	lr
   1c548:	rsbs	r2, r2, #0
   1c54c:	sbc	r3, r3, r3, lsl #1
   1c550:	bl	1c5c0 <__gcov_sort_n_vals@@Base+0x690>
   1c554:	ldr	lr, [sp, #4]
   1c558:	add	sp, sp, #8
   1c55c:	pop	{r2, r3}
   1c560:	rsbs	r2, r2, #0
   1c564:	sbc	r3, r3, r3, lsl #1
   1c568:	bx	lr
   1c56c:	push	{r1, lr}
   1c570:	mov	r0, #8
   1c574:	bl	11f84 <raise@plt>
   1c578:	pop	{r1, pc}
   1c57c:	ldr	r3, [pc, #48]	; 1c5b4 <__gcov_sort_n_vals@@Base+0x684>
   1c580:	ldr	r2, [pc, #48]	; 1c5b8 <__gcov_sort_n_vals@@Base+0x688>
   1c584:	and	r3, r3, r0, lsr #1
   1c588:	sub	r0, r0, r3
   1c58c:	and	r3, r0, r2
   1c590:	and	r0, r2, r0, lsr #2
   1c594:	add	r3, r3, r0
   1c598:	ldr	r0, [pc, #28]	; 1c5bc <__gcov_sort_n_vals@@Base+0x68c>
   1c59c:	add	r3, r3, r3, lsr #4
   1c5a0:	and	r0, r0, r3
   1c5a4:	add	r0, r0, r0, lsl #8
   1c5a8:	add	r0, r0, r0, lsl #16
   1c5ac:	lsr	r0, r0, #24
   1c5b0:	bx	lr
   1c5b4:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   1c5b8:	teqcc	r3, #-872415232	; 0xcc000000
   1c5bc:	svceq	0x000f0f0f
   1c5c0:	cmp	r1, r3
   1c5c4:	cmpeq	r0, r2
   1c5c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5cc:	mov	r4, r0
   1c5d0:	movcc	r0, #0
   1c5d4:	mov	r5, r1
   1c5d8:	ldr	lr, [sp, #36]	; 0x24
   1c5dc:	movcc	r1, r0
   1c5e0:	bcc	1c6dc <__gcov_sort_n_vals@@Base+0x7ac>
   1c5e4:	cmp	r3, #0
   1c5e8:	clzeq	ip, r2
   1c5ec:	clzne	ip, r3
   1c5f0:	addeq	ip, ip, #32
   1c5f4:	cmp	r5, #0
   1c5f8:	clzeq	r1, r4
   1c5fc:	addeq	r1, r1, #32
   1c600:	clzne	r1, r5
   1c604:	sub	ip, ip, r1
   1c608:	sub	sl, ip, #32
   1c60c:	lsl	r9, r3, ip
   1c610:	rsb	fp, ip, #32
   1c614:	orr	r9, r9, r2, lsl sl
   1c618:	orr	r9, r9, r2, lsr fp
   1c61c:	lsl	r8, r2, ip
   1c620:	cmp	r5, r9
   1c624:	cmpeq	r4, r8
   1c628:	movcc	r0, #0
   1c62c:	movcc	r1, r0
   1c630:	bcc	1c64c <__gcov_sort_n_vals@@Base+0x71c>
   1c634:	mov	r0, #1
   1c638:	subs	r4, r4, r8
   1c63c:	lsl	r1, r0, sl
   1c640:	orr	r1, r1, r0, lsr fp
   1c644:	lsl	r0, r0, ip
   1c648:	sbc	r5, r5, r9
   1c64c:	cmp	ip, #0
   1c650:	beq	1c6dc <__gcov_sort_n_vals@@Base+0x7ac>
   1c654:	lsr	r6, r8, #1
   1c658:	orr	r6, r6, r9, lsl #31
   1c65c:	lsr	r7, r9, #1
   1c660:	mov	r2, ip
   1c664:	b	1c688 <__gcov_sort_n_vals@@Base+0x758>
   1c668:	subs	r3, r4, r6
   1c66c:	sbc	r8, r5, r7
   1c670:	adds	r3, r3, r3
   1c674:	adc	r8, r8, r8
   1c678:	adds	r4, r3, #1
   1c67c:	adc	r5, r8, #0
   1c680:	subs	r2, r2, #1
   1c684:	beq	1c6a4 <__gcov_sort_n_vals@@Base+0x774>
   1c688:	cmp	r5, r7
   1c68c:	cmpeq	r4, r6
   1c690:	bcs	1c668 <__gcov_sort_n_vals@@Base+0x738>
   1c694:	adds	r4, r4, r4
   1c698:	adc	r5, r5, r5
   1c69c:	subs	r2, r2, #1
   1c6a0:	bne	1c688 <__gcov_sort_n_vals@@Base+0x758>
   1c6a4:	lsr	r3, r4, ip
   1c6a8:	orr	r3, r3, r5, lsl fp
   1c6ac:	lsr	r2, r5, ip
   1c6b0:	orr	r3, r3, r5, lsr sl
   1c6b4:	adds	r0, r0, r4
   1c6b8:	mov	r4, r3
   1c6bc:	lsl	r3, r2, ip
   1c6c0:	orr	r3, r3, r4, lsl sl
   1c6c4:	lsl	ip, r4, ip
   1c6c8:	orr	r3, r3, r4, lsr fp
   1c6cc:	adc	r1, r1, r5
   1c6d0:	subs	r0, r0, ip
   1c6d4:	mov	r5, r2
   1c6d8:	sbc	r1, r1, r3
   1c6dc:	cmp	lr, #0
   1c6e0:	strdne	r4, [lr]
   1c6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c6e8 <__libc_csu_init@@Base>:
   1c6e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c6ec:	mov	r7, r0
   1c6f0:	ldr	r6, [pc, #72]	; 1c740 <__libc_csu_init@@Base+0x58>
   1c6f4:	ldr	r5, [pc, #72]	; 1c744 <__libc_csu_init@@Base+0x5c>
   1c6f8:	add	r6, pc, r6
   1c6fc:	add	r5, pc, r5
   1c700:	sub	r6, r6, r5
   1c704:	mov	r8, r1
   1c708:	mov	r9, r2
   1c70c:	bl	11f58 <fdopen@plt-0x20>
   1c710:	asrs	r6, r6, #2
   1c714:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c718:	mov	r4, #0
   1c71c:	add	r4, r4, #1
   1c720:	ldr	r3, [r5], #4
   1c724:	mov	r2, r9
   1c728:	mov	r1, r8
   1c72c:	mov	r0, r7
   1c730:	blx	r3
   1c734:	cmp	r6, r4
   1c738:	bne	1c71c <__libc_csu_init@@Base+0x34>
   1c73c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c740:	andeq	r1, r1, r4, lsl #16
   1c744:	andeq	r1, r1, ip, ror #15

0001c748 <__libc_csu_fini@@Base>:
   1c748:	bx	lr

Disassembly of section .fini:

0001c74c <.fini>:
   1c74c:	push	{r3, lr}
   1c750:	pop	{r3, pc}
