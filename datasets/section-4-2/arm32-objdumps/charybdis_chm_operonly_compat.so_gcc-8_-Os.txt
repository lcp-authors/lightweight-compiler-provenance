
../repos/charybdis/extensions/.libs/chm_operonly_compat.so:     file format elf32-littlearm


Disassembly of section .init:

000003c4 <_init>:
 3c4:	push	{r3, lr}
 3c8:	bl	420 <call_weak_fn>
 3cc:	pop	{r3, pc}

Disassembly of section .plt:

000003d0 <.plt>:
 3d0:	push	{lr}		; (str lr, [sp, #-4]!)
 3d4:	ldr	lr, [pc, #4]	; 3e0 <.plt+0x10>
 3d8:	add	lr, pc, lr
 3dc:	ldr	pc, [lr, #8]!
 3e0:	.word	0x00010c20

000003e4 <__cxa_finalize@plt>:
 3e4:	add	ip, pc, #0, 12
 3e8:	add	ip, ip, #16, 20	; 0x10000
 3ec:	ldr	pc, [ip, #3104]!	; 0xc20

000003f0 <chm_nosuch@plt>:
 3f0:	add	ip, pc, #0, 12
 3f4:	add	ip, ip, #16, 20	; 0x10000
 3f8:	ldr	pc, [ip, #3096]!	; 0xc18

000003fc <chm_simple@plt>:
 3fc:	add	ip, pc, #0, 12
 400:	add	ip, ip, #16, 20	; 0x10000
 404:	ldr	pc, [ip, #3088]!	; 0xc10

00000408 <__gmon_start__@plt>:
 408:	add	ip, pc, #0, 12
 40c:	add	ip, ip, #16, 20	; 0x10000
 410:	ldr	pc, [ip, #3080]!	; 0xc08

00000414 <chm_ban@plt>:
 414:	add	ip, pc, #0, 12
 418:	add	ip, ip, #16, 20	; 0x10000
 41c:	ldr	pc, [ip, #3072]!	; 0xc00

Disassembly of section .text:

00000420 <call_weak_fn>:
 420:	ldr	r3, [pc, #20]	; 43c <call_weak_fn+0x1c>
 424:	ldr	r2, [pc, #20]	; 440 <call_weak_fn+0x20>
 428:	add	r3, pc, r3
 42c:	ldr	r2, [r3, r2]
 430:	cmp	r2, #0
 434:	bxeq	lr
 438:	b	408 <__gmon_start__@plt>
 43c:	.word	0x00010bd0
 440:	.word	0x0000002c

00000444 <deregister_tm_clones>:
 444:	ldr	r0, [pc, #44]	; 478 <deregister_tm_clones+0x34>
 448:	ldr	r3, [pc, #44]	; 47c <deregister_tm_clones+0x38>
 44c:	add	r0, pc, r0
 450:	add	r3, pc, r3
 454:	cmp	r3, r0
 458:	ldr	r3, [pc, #32]	; 480 <deregister_tm_clones+0x3c>
 45c:	add	r3, pc, r3
 460:	bxeq	lr
 464:	ldr	r2, [pc, #24]	; 484 <deregister_tm_clones+0x40>
 468:	ldr	r3, [r3, r2]
 46c:	cmp	r3, #0
 470:	bxeq	lr
 474:	bx	r3
 478:	.word	0x00010c10
 47c:	.word	0x00010c0c
 480:	.word	0x00010b9c
 484:	.word	0x00000024

00000488 <register_tm_clones>:
 488:	ldr	r0, [pc, #56]	; 4c8 <register_tm_clones+0x40>
 48c:	ldr	r3, [pc, #56]	; 4cc <register_tm_clones+0x44>
 490:	add	r0, pc, r0
 494:	add	r3, pc, r3
 498:	sub	r1, r3, r0
 49c:	ldr	r3, [pc, #44]	; 4d0 <register_tm_clones+0x48>
 4a0:	asr	r1, r1, #2
 4a4:	add	r3, pc, r3
 4a8:	add	r1, r1, r1, lsr #31
 4ac:	asrs	r1, r1, #1
 4b0:	bxeq	lr
 4b4:	ldr	r2, [pc, #24]	; 4d4 <register_tm_clones+0x4c>
 4b8:	ldr	r3, [r3, r2]
 4bc:	cmp	r3, #0
 4c0:	bxeq	lr
 4c4:	bx	r3
 4c8:	.word	0x00010bcc
 4cc:	.word	0x00010bc8
 4d0:	.word	0x00010b54
 4d4:	.word	0x00000034

000004d8 <__do_global_dtors_aux>:
 4d8:	ldr	r3, [pc, #76]	; 52c <__do_global_dtors_aux+0x54>
 4dc:	ldr	r2, [pc, #76]	; 530 <__do_global_dtors_aux+0x58>
 4e0:	add	r3, pc, r3
 4e4:	add	r2, pc, r2
 4e8:	ldrb	r3, [r3]
 4ec:	cmp	r3, #0
 4f0:	bxne	lr
 4f4:	ldr	r3, [pc, #56]	; 534 <__do_global_dtors_aux+0x5c>
 4f8:	push	{r4, lr}
 4fc:	ldr	r3, [r2, r3]
 500:	cmp	r3, #0
 504:	beq	514 <__do_global_dtors_aux+0x3c>
 508:	ldr	r3, [pc, #40]	; 538 <__do_global_dtors_aux+0x60>
 50c:	ldr	r0, [pc, r3]
 510:	bl	3e4 <__cxa_finalize@plt>
 514:	bl	444 <deregister_tm_clones>
 518:	ldr	r3, [pc, #28]	; 53c <__do_global_dtors_aux+0x64>
 51c:	mov	r2, #1
 520:	add	r3, pc, r3
 524:	strb	r2, [r3]
 528:	pop	{r4, pc}
 52c:	.word	0x00010b7c
 530:	.word	0x00010b14
 534:	.word	0x00000020
 538:	.word	0x00010b24
 53c:	.word	0x00010b3c

00000540 <frame_dummy>:
 540:	b	488 <register_tm_clones>

00000544 <_modinit>:
 544:	ldr	r3, [pc, #32]	; 56c <_modinit+0x28>
 548:	mov	r0, #0
 54c:	ldr	r2, [pc, #28]	; 570 <_modinit+0x2c>
 550:	add	r3, pc, r3
 554:	ldr	r3, [r3, r2]
 558:	ldr	r2, [pc, #20]	; 574 <_modinit+0x30>
 55c:	str	r0, [r3, #636]	; 0x27c
 560:	add	r2, pc, r2
 564:	str	r2, [r3, #632]	; 0x278
 568:	bx	lr
 56c:	.word	0x00010aa8
 570:	.word	0x00000030
 574:	.word	0x00000044

00000578 <_moddeinit>:
 578:	ldr	r3, [pc, #32]	; 5a0 <_moddeinit+0x28>
 57c:	ldr	r2, [pc, #32]	; 5a4 <_moddeinit+0x2c>
 580:	ldr	r1, [pc, #32]	; 5a8 <_moddeinit+0x30>
 584:	add	r3, pc, r3
 588:	ldr	r2, [r3, r2]
 58c:	ldr	r3, [r3, r1]
 590:	str	r3, [r2, #632]	; 0x278
 594:	mov	r3, #0
 598:	str	r3, [r2, #636]	; 0x27c
 59c:	bx	lr
 5a0:	.word	0x00010a74
 5a4:	.word	0x00000030
 5a8:	.word	0x00000028

000005ac <chm_operonly>:
 5ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 5b0:	mov	ip, #0
 5b4:	sub	sp, sp, #36	; 0x24
 5b8:	mov	r9, #0
 5bc:	mov	r4, r0
 5c0:	mov	r7, r1
 5c4:	mov	sl, r2
 5c8:	ldr	r8, [pc, #220]	; 6ac <chm_operonly+0x100>
 5cc:	mov	lr, r3
 5d0:	str	ip, [sp, #24]
 5d4:	ldr	ip, [r0, #64]	; 0x40
 5d8:	ldr	fp, [sp, #72]	; 0x48
 5dc:	add	r8, pc, r8
 5e0:	ldr	r5, [sp, #80]	; 0x50
 5e4:	str	r8, [sp, #28]
 5e8:	and	r8, ip, #8192	; 0x2000
 5ec:	orrs	ip, r8, r9
 5f0:	ldr	r6, [sp, #84]	; 0x54
 5f4:	beq	670 <chm_operonly+0xc4>
 5f8:	ldrh	ip, [r0, #80]	; 0x50
 5fc:	cmp	ip, #64	; 0x40
 600:	bne	670 <chm_operonly+0xc4>
 604:	mov	ip, #16
 608:	str	fp, [sp]
 60c:	str	r5, [sp, #8]
 610:	str	r6, [sp, #12]
 614:	str	ip, [sp, #20]
 618:	mov	ip, #105	; 0x69
 61c:	str	ip, [sp, #16]
 620:	ldr	ip, [sp, #76]	; 0x4c
 624:	str	ip, [sp, #4]
 628:	bl	3fc <chm_simple@plt>
 62c:	mov	r3, #1073741824	; 0x40000000
 630:	mov	r2, sl
 634:	str	r5, [sp, #8]
 638:	mov	r1, r7
 63c:	mov	r0, r4
 640:	str	r6, [sp, #12]
 644:	str	r3, [sp, #20]
 648:	mov	r3, #73	; 0x49
 64c:	str	r3, [sp, #16]
 650:	add	r3, sp, #28
 654:	str	r3, [sp, #4]
 658:	add	r3, sp, #24
 65c:	str	r3, [sp]
 660:	mov	r3, #1
 664:	bl	414 <chm_ban@plt>
 668:	add	sp, sp, #36	; 0x24
 66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 670:	ldr	r3, [sp, #92]	; 0x5c
 674:	mov	r2, sl
 678:	mov	r1, r7
 67c:	mov	r0, r4
 680:	str	fp, [sp]
 684:	str	r5, [sp, #8]
 688:	str	r6, [sp, #12]
 68c:	str	r3, [sp, #20]
 690:	ldrb	r3, [sp, #88]	; 0x58
 694:	str	r3, [sp, #16]
 698:	ldr	r3, [sp, #76]	; 0x4c
 69c:	str	r3, [sp, #4]
 6a0:	mov	r3, lr
 6a4:	bl	3f0 <chm_nosuch@plt>
 6a8:	b	668 <chm_operonly+0xbc>
 6ac:	.word	0x0000011f

Disassembly of section .fini:

000006b0 <_fini>:
 6b0:	push	{r3, lr}
 6b4:	pop	{r3, pc}
