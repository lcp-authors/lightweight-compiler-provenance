
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010d00 <.init>:
   10d00:	push	{r3, lr}
   10d04:	bl	11b98 <strspn@plt+0xbe4>
   10d08:	pop	{r3, pc}

Disassembly of section .plt:

00010d0c <calloc@plt-0x14>:
   10d0c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d10:	ldr	lr, [pc, #4]	; 10d1c <calloc@plt-0x4>
   10d14:	add	lr, pc, lr
   10d18:	ldr	pc, [lr, #8]!
   10d1c:	andeq	r6, r1, r4, ror #5

00010d20 <calloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #740]!	; 0x2e4

00010d2c <fputs_unlocked@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #732]!	; 0x2dc

00010d38 <uselocale@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #724]!	; 0x2d4

00010d44 <strcmp@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #716]!	; 0x2cc

00010d50 <strtol@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #708]!	; 0x2c4

00010d5c <strcspn@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #700]!	; 0x2bc

00010d68 <fflush@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #692]!	; 0x2b4

00010d74 <memmove@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #684]!	; 0x2ac

00010d80 <free@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #676]!	; 0x2a4

00010d8c <_exit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #668]!	; 0x29c

00010d98 <memcpy@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #660]!	; 0x294

00010da4 <mbsinit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #652]!	; 0x28c

00010db0 <strtold@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #644]!	; 0x284

00010dbc <fwrite_unlocked@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #636]!	; 0x27c

00010dc8 <memcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #628]!	; 0x274

00010dd4 <fputc_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #620]!	; 0x26c

00010de0 <dcgettext@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #612]!	; 0x264

00010dec <realloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #604]!	; 0x25c

00010df8 <textdomain@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #596]!	; 0x254

00010e04 <iswprint@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #588]!	; 0x24c

00010e10 <fwrite@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #580]!	; 0x244

00010e1c <lseek64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #572]!	; 0x23c

00010e28 <__ctype_get_mb_cur_max@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #564]!	; 0x234

00010e34 <strcpy@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #556]!	; 0x22c

00010e40 <__fpending@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #548]!	; 0x224

00010e4c <mbrtowc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #540]!	; 0x21c

00010e58 <error@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #532]!	; 0x214

00010e64 <__asprintf_chk@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #524]!	; 0x20c

00010e70 <malloc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #516]!	; 0x204

00010e7c <__libc_start_main@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #508]!	; 0x1fc

00010e88 <__freading@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #500]!	; 0x1f4

00010e94 <__gmon_start__@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #492]!	; 0x1ec

00010ea0 <mempcpy@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #484]!	; 0x1e4

00010eac <getopt_long@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #476]!	; 0x1dc

00010eb8 <__ctype_b_loc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #468]!	; 0x1d4

00010ec4 <exit@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #460]!	; 0x1cc

00010ed0 <strlen@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #452]!	; 0x1c4

00010edc <strchr@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #444]!	; 0x1bc

00010ee8 <__errno_location@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #436]!	; 0x1b4

00010ef4 <__sprintf_chk@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #428]!	; 0x1ac

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #420]!	; 0x1a4

00010f0c <memset@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #412]!	; 0x19c

00010f18 <__printf_chk@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #404]!	; 0x194

00010f24 <fileno@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #396]!	; 0x18c

00010f30 <__fprintf_chk@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #388]!	; 0x184

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #380]!	; 0x17c

00010f48 <fseeko64@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #372]!	; 0x174

00010f54 <setlocale@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #364]!	; 0x16c

00010f60 <strrchr@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #356]!	; 0x164

00010f6c <nl_langinfo@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #348]!	; 0x15c

00010f78 <newlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #340]!	; 0x154

00010f84 <clearerr_unlocked@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #332]!	; 0x14c

00010f90 <bindtextdomain@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #324]!	; 0x144

00010f9c <strncmp@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #316]!	; 0x13c

00010fa8 <abort@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #308]!	; 0x134

00010fb4 <strspn@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #300]!	; 0x12c

Disassembly of section .text:

00010fc0 <.text>:
   10fc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10fc4:	movw	r4, #24264	; 0x5ec8
   10fc8:	movt	r4, #1
   10fcc:	ldrd	r2, [r4, #56]	; 0x38
   10fd0:	movw	r5, #29024	; 0x7160
   10fd4:	movt	r5, #2
   10fd8:	strd	sl, [sp, #24]
   10fdc:	add	r4, r4, #72	; 0x48
   10fe0:	ldrd	sl, [r4, #-8]
   10fe4:	strd	r6, [sp, #8]
   10fe8:	mov	r6, r1
   10fec:	movw	r7, #29000	; 0x7148
   10ff0:	movt	r7, #2
   10ff4:	strd	r8, [sp, #16]
   10ff8:	movw	r9, #26140	; 0x661c
   10ffc:	movt	r9, #1
   11000:	str	lr, [sp, #32]
   11004:	vpush	{d8-d13}
   11008:	sub	sp, sp, #84	; 0x54
   1100c:	str	r0, [sp, #8]
   11010:	ldr	r0, [r1]
   11014:	strd	r2, [sp, #48]	; 0x30
   11018:	strd	sl, [sp, #56]	; 0x38
   1101c:	movw	fp, #29016	; 0x7158
   11020:	movt	fp, #2
   11024:	bl	1298c <strspn@plt+0x19d8>
   11028:	movw	r1, #25576	; 0x63e8
   1102c:	movt	r1, #1
   11030:	mov	r0, #6
   11034:	bl	10f54 <setlocale@plt>
   11038:	adds	r3, r0, #0
   1103c:	movw	r1, #26116	; 0x6604
   11040:	movt	r1, #1
   11044:	movne	r3, #1
   11048:	movw	r0, #25856	; 0x6500
   1104c:	movt	r0, #1
   11050:	strb	r3, [r5, #32]
   11054:	bl	10f90 <bindtextdomain@plt>
   11058:	movw	r0, #25856	; 0x6500
   1105c:	movt	r0, #1
   11060:	bl	10df8 <textdomain@plt>
   11064:	movw	r0, #10304	; 0x2840
   11068:	movt	r0, #1
   1106c:	bl	15e9c <strspn@plt+0x4ee8>
   11070:	mov	r2, #0
   11074:	movw	r3, #24668	; 0x605c
   11078:	movt	r3, #1
   1107c:	mov	r8, r2
   11080:	str	r3, [r5]
   11084:	strb	r2, [r5, #33]	; 0x21
   11088:	ldr	r3, [r7]
   1108c:	ldr	r2, [sp, #8]
   11090:	cmp	r3, r2
   11094:	bge	111bc <strspn@plt+0x208>
   11098:	ldr	r3, [r6, r3, lsl #2]
   1109c:	ldrb	r2, [r3]
   110a0:	cmp	r2, #45	; 0x2d
   110a4:	bne	110c0 <strspn@plt+0x10c>
   110a8:	ldrb	r3, [r3, #1]
   110ac:	cmp	r3, #46	; 0x2e
   110b0:	beq	111bc <strspn@plt+0x208>
   110b4:	sub	r3, r3, #48	; 0x30
   110b8:	cmp	r3, #9
   110bc:	bls	111bc <strspn@plt+0x208>
   110c0:	mov	sl, #0
   110c4:	mov	r3, r4
   110c8:	ldr	r0, [sp, #8]
   110cc:	mov	r2, r9
   110d0:	mov	r1, r6
   110d4:	str	sl, [sp]
   110d8:	bl	10eac <getopt_long@plt>
   110dc:	cmn	r0, #1
   110e0:	beq	111bc <strspn@plt+0x208>
   110e4:	cmp	r0, #102	; 0x66
   110e8:	beq	11168 <strspn@plt+0x1b4>
   110ec:	bgt	11108 <strspn@plt+0x154>
   110f0:	cmn	r0, #3
   110f4:	beq	1117c <strspn@plt+0x1c8>
   110f8:	cmn	r0, #2
   110fc:	bne	11160 <strspn@plt+0x1ac>
   11100:	mov	r0, sl
   11104:	bl	120b8 <strspn@plt+0x1104>
   11108:	cmp	r0, #115	; 0x73
   1110c:	beq	11170 <strspn@plt+0x1bc>
   11110:	cmp	r0, #119	; 0x77
   11114:	bne	11160 <strspn@plt+0x1ac>
   11118:	mov	r3, #1
   1111c:	strb	r3, [r5, #33]	; 0x21
   11120:	b	11088 <strspn@plt+0xd4>
   11124:	movw	r1, #26180	; 0x6644
   11128:	movt	r1, #1
   1112c:	mov	r2, #5
   11130:	mov	r0, #0
   11134:	bl	10de0 <dcgettext@plt>
   11138:	ldr	r3, [r7]
   1113c:	mov	r4, r0
   11140:	add	r3, r3, #3
   11144:	ldr	r0, [r6, r3, lsl #2]
   11148:	bl	14c7c <strspn@plt+0x3cc8>
   1114c:	mov	r1, #0
   11150:	mov	r3, r0
   11154:	mov	r2, r4
   11158:	mov	r0, r1
   1115c:	bl	10e58 <error@plt>
   11160:	mov	r0, #1
   11164:	bl	120b8 <strspn@plt+0x1104>
   11168:	ldr	r8, [fp]
   1116c:	b	11088 <strspn@plt+0xd4>
   11170:	ldr	r3, [fp]
   11174:	str	r3, [r5]
   11178:	b	11088 <strspn@plt+0xd4>
   1117c:	movw	r2, #26148	; 0x6624
   11180:	movt	r2, #1
   11184:	movw	r3, #28920	; 0x70f8
   11188:	movt	r3, #2
   1118c:	movw	r0, #29012	; 0x7154
   11190:	movt	r0, #2
   11194:	stm	sp, {r2, sl}
   11198:	movw	r1, #24464	; 0x5f90
   1119c:	movt	r1, #1
   111a0:	ldr	r0, [r0]
   111a4:	movw	r2, #25852	; 0x64fc
   111a8:	movt	r2, #1
   111ac:	ldr	r3, [r3]
   111b0:	bl	15118 <strspn@plt+0x4164>
   111b4:	mov	r0, sl
   111b8:	bl	10ec4 <exit@plt>
   111bc:	ldr	r3, [r7]
   111c0:	ldr	r2, [sp, #8]
   111c4:	subs	r3, r2, r3
   111c8:	str	r3, [sp, #12]
   111cc:	beq	114b8 <strspn@plt+0x504>
   111d0:	ldr	r3, [sp, #12]
   111d4:	cmp	r3, #3
   111d8:	bhi	11124 <strspn@plt+0x170>
   111dc:	cmp	r8, #0
   111e0:	moveq	sl, r8
   111e4:	moveq	r4, r8
   111e8:	beq	11234 <strspn@plt+0x280>
   111ec:	mov	r4, #0
   111f0:	mov	r3, r4
   111f4:	b	1120c <strspn@plt+0x258>
   111f8:	cmp	r9, #0
   111fc:	beq	11a9c <strspn@plt+0xae8>
   11200:	mov	r2, #1
   11204:	add	r3, r3, r2
   11208:	add	r4, r4, #1
   1120c:	ldrb	r9, [r8, r3]
   11210:	cmp	r9, #37	; 0x25
   11214:	bne	111f8 <strspn@plt+0x244>
   11218:	add	r9, r3, #1
   1121c:	ldrb	r2, [r8, r9]
   11220:	add	r0, r8, r9
   11224:	cmp	r2, #37	; 0x25
   11228:	bne	114ec <strspn@plt+0x538>
   1122c:	mov	r2, #2
   11230:	b	11204 <strspn@plt+0x250>
   11234:	ldr	r3, [sp, #12]
   11238:	ldr	r9, [r7]
   1123c:	cmp	r3, #3
   11240:	beq	1166c <strspn@plt+0x6b8>
   11244:	ldr	fp, [r6, r9, lsl #2]
   11248:	mov	r0, fp
   1124c:	bl	11c50 <strspn@plt+0xc9c>
   11250:	cmp	r0, #0
   11254:	beq	11278 <strspn@plt+0x2c4>
   11258:	ldr	r3, [sp, #12]
   1125c:	cmp	r3, #1
   11260:	beq	116e4 <strspn@plt+0x730>
   11264:	add	r2, r9, #1
   11268:	ldr	r0, [r6, r2, lsl #2]
   1126c:	bl	11c50 <strspn@plt+0xc9c>
   11270:	cmp	r0, #0
   11274:	bne	116e4 <strspn@plt+0x730>
   11278:	ldr	r3, [r7]
   1127c:	add	r0, sp, #64	; 0x40
   11280:	add	r2, r3, #1
   11284:	ldr	r1, [r6, r3, lsl #2]
   11288:	str	r2, [r7]
   1128c:	bl	1244c <strspn@plt+0x1498>
   11290:	ldr	r2, [r7]
   11294:	ldr	r3, [sp, #8]
   11298:	vldr	d12, [sp, #64]	; 0x40
   1129c:	ldr	r9, [sp, #72]	; 0x48
   112a0:	cmp	r2, r3
   112a4:	ldr	r3, [sp, #76]	; 0x4c
   112a8:	blt	11750 <strspn@plt+0x79c>
   112ac:	ldr	r2, [sp, #60]	; 0x3c
   112b0:	orrs	r2, r3, r2
   112b4:	beq	119bc <strspn@plt+0xa08>
   112b8:	vmov.f64	d11, d12
   112bc:	vldr	d12, [pc, #924]	; 11660 <strspn@plt+0x6ac>
   112c0:	mov	r2, r3
   112c4:	mov	fp, r9
   112c8:	mov	r3, #0
   112cc:	mov	r9, #1
   112d0:	cmp	r8, #0
   112d4:	beq	11948 <strspn@plt+0x994>
   112d8:	vldr	d10, [sp, #48]	; 0x30
   112dc:	vcmpe.f64	d10, #0.0
   112e0:	vmrs	APSR_nzcv, fpscr
   112e4:	vcmpe.f64	d12, d11
   112e8:	bmi	11650 <strspn@plt+0x69c>
   112ec:	vmrs	APSR_nzcv, fpscr
   112f0:	movgt	r6, #1
   112f4:	movle	r6, #0
   112f8:	cmp	r6, #0
   112fc:	bne	114e4 <strspn@plt+0x530>
   11300:	vmov	r2, r3, d12
   11304:	movw	r1, #26492	; 0x677c
   11308:	movt	r1, #1
   1130c:	vldr	d9, [pc, #844]	; 11660 <strspn@plt+0x6ac>
   11310:	movw	r9, #10128	; 0x2790
   11314:	movt	r9, #1
   11318:	str	r4, [sp, #8]
   1131c:	mov	r4, sl
   11320:	vmov	sl, s24
   11324:	str	r1, [sp, #12]
   11328:	vmov.f64	d13, d9
   1132c:	mov	fp, r3
   11330:	b	11434 <strspn@plt+0x480>
   11334:	vmrs	APSR_nzcv, fpscr
   11338:	movgt	r6, #1
   1133c:	movle	r6, #0
   11340:	cmp	r6, #0
   11344:	beq	11410 <strspn@plt+0x45c>
   11348:	ldrb	r3, [r5, #32]
   1134c:	cmp	r3, #0
   11350:	bne	11480 <strspn@plt+0x4cc>
   11354:	mov	r2, r8
   11358:	mov	r1, #1
   1135c:	vstr	d8, [sp]
   11360:	add	r0, sp, #32
   11364:	bl	10e64 <__asprintf_chk@plt>
   11368:	mov	r7, r0
   1136c:	cmp	r7, #0
   11370:	blt	11af0 <strspn@plt+0xb3c>
   11374:	ldr	ip, [sp, #32]
   11378:	sub	r0, r7, r4
   1137c:	mov	r7, #0
   11380:	mov	r1, r7
   11384:	mov	r3, r9
   11388:	add	r2, sp, #40	; 0x28
   1138c:	strb	r7, [ip, r0]
   11390:	ldr	ip, [sp, #8]
   11394:	ldr	r0, [sp, #32]
   11398:	add	r0, r0, ip
   1139c:	bl	156e4 <strspn@plt+0x4730>
   113a0:	cmp	r0, r7
   113a4:	beq	11628 <strspn@plt+0x674>
   113a8:	vldr	d7, [sp, #40]	; 0x28
   113ac:	vcmp.f64	d7, d11
   113b0:	vmrs	APSR_nzcv, fpscr
   113b4:	bne	11628 <strspn@plt+0x674>
   113b8:	mov	r2, r8
   113bc:	mov	r1, #1
   113c0:	strd	sl, [sp]
   113c4:	add	r0, sp, #36	; 0x24
   113c8:	str	r7, [sp, #36]	; 0x24
   113cc:	bl	10e64 <__asprintf_chk@plt>
   113d0:	cmp	r0, #0
   113d4:	blt	11af0 <strspn@plt+0xb3c>
   113d8:	ldr	r3, [sp, #36]	; 0x24
   113dc:	sub	r0, r0, r4
   113e0:	strb	r7, [r3, r0]
   113e4:	ldr	r1, [sp, #32]
   113e8:	ldr	r7, [sp, #36]	; 0x24
   113ec:	mov	r0, r7
   113f0:	bl	10d44 <strcmp@plt>
   113f4:	mov	sl, r0
   113f8:	mov	r0, r7
   113fc:	bl	1292c <strspn@plt+0x1978>
   11400:	ldr	r0, [sp, #32]
   11404:	bl	1292c <strspn@plt+0x1978>
   11408:	cmp	sl, #0
   1140c:	beq	11630 <strspn@plt+0x67c>
   11410:	movw	r3, #29012	; 0x7154
   11414:	movt	r3, #2
   11418:	ldr	r0, [r5]
   1141c:	ldr	r1, [r3]
   11420:	bl	10d2c <fputs_unlocked@plt>
   11424:	cmn	r0, #1
   11428:	beq	1164c <strspn@plt+0x698>
   1142c:	vmov	sl, fp, d8
   11430:	vadd.f64	d9, d9, d13
   11434:	mov	r2, sl
   11438:	mov	r3, fp
   1143c:	mov	r1, r8
   11440:	mov	r0, #1
   11444:	bl	10f18 <__printf_chk@plt>
   11448:	cmp	r0, #0
   1144c:	blt	1164c <strspn@plt+0x698>
   11450:	cmp	r6, #0
   11454:	bne	11630 <strspn@plt+0x67c>
   11458:	vmov.f64	d8, d12
   1145c:	vcmpe.f64	d10, #0.0
   11460:	vmla.f64	d8, d10, d9
   11464:	vmrs	APSR_nzcv, fpscr
   11468:	vcmpe.f64	d8, d11
   1146c:	bpl	11334 <strspn@plt+0x380>
   11470:	vmrs	APSR_nzcv, fpscr
   11474:	movmi	r6, #1
   11478:	movpl	r6, #0
   1147c:	b	11340 <strspn@plt+0x38c>
   11480:	mov	r0, #1
   11484:	ldr	r1, [sp, #12]
   11488:	bl	10f54 <setlocale@plt>
   1148c:	mov	r2, r8
   11490:	mov	r1, #1
   11494:	vstr	d8, [sp]
   11498:	add	r0, sp, #32
   1149c:	bl	10e64 <__asprintf_chk@plt>
   114a0:	mov	r7, r0
   114a4:	movw	r1, #25576	; 0x63e8
   114a8:	movt	r1, #1
   114ac:	mov	r0, #1
   114b0:	bl	10f54 <setlocale@plt>
   114b4:	b	1136c <strspn@plt+0x3b8>
   114b8:	ldr	r4, [sp, #12]
   114bc:	mov	r2, #5
   114c0:	movw	r1, #26164	; 0x6634
   114c4:	movt	r1, #1
   114c8:	mov	r0, r4
   114cc:	bl	10de0 <dcgettext@plt>
   114d0:	mov	r2, r0
   114d4:	mov	r1, r4
   114d8:	mov	r0, r4
   114dc:	bl	10e58 <error@plt>
   114e0:	b	11160 <strspn@plt+0x1ac>
   114e4:	mov	r0, #0
   114e8:	bl	10ec4 <exit@plt>
   114ec:	movw	r1, #26232	; 0x6678
   114f0:	movt	r1, #1
   114f4:	bl	10fb4 <strspn@plt>
   114f8:	add	r9, r9, r0
   114fc:	movw	r1, #24436	; 0x5f74
   11500:	movt	r1, #1
   11504:	add	r0, r8, r9
   11508:	bl	10fb4 <strspn@plt>
   1150c:	add	r9, r9, r0
   11510:	ldrb	r3, [r8, r9]
   11514:	cmp	r3, #46	; 0x2e
   11518:	bne	11534 <strspn@plt+0x580>
   1151c:	add	r9, r9, #1
   11520:	movw	r1, #24436	; 0x5f74
   11524:	movt	r1, #1
   11528:	add	r0, r8, r9
   1152c:	bl	10fb4 <strspn@plt>
   11530:	add	r9, r9, r0
   11534:	ldrb	r0, [r8, r9]
   11538:	cmp	r0, #76	; 0x4c
   1153c:	movne	fp, r9
   11540:	addeq	fp, r9, #1
   11544:	ldrb	sl, [r8, fp]
   11548:	add	r3, r8, fp
   1154c:	str	r3, [sp, #20]
   11550:	cmp	sl, #0
   11554:	movweq	r1, #26240	; 0x6680
   11558:	movteq	r1, #1
   1155c:	beq	11aa4 <strspn@plt+0xaf0>
   11560:	mov	r1, sl
   11564:	movw	r0, #26264	; 0x6698
   11568:	movt	r0, #1
   1156c:	bl	10edc <strchr@plt>
   11570:	subs	sl, r0, #0
   11574:	addne	r0, fp, #1
   11578:	movne	sl, #0
   1157c:	bne	11598 <strspn@plt+0x5e4>
   11580:	b	11af4 <strspn@plt+0xb40>
   11584:	cmp	fp, #0
   11588:	beq	115bc <strspn@plt+0x608>
   1158c:	mov	r3, #1
   11590:	add	r0, r0, r3
   11594:	add	sl, sl, #1
   11598:	ldrb	fp, [r8, r0]
   1159c:	cmp	fp, #37	; 0x25
   115a0:	bne	11584 <strspn@plt+0x5d0>
   115a4:	add	r3, r8, r0
   115a8:	ldrb	r3, [r3, #1]
   115ac:	cmp	r3, #37	; 0x25
   115b0:	bne	11b30 <strspn@plt+0xb7c>
   115b4:	mov	r3, #2
   115b8:	b	11590 <strspn@plt+0x5dc>
   115bc:	add	r0, r0, #2
   115c0:	bl	15228 <strspn@plt+0x4274>
   115c4:	mov	r1, r8
   115c8:	mov	r2, r9
   115cc:	str	r0, [sp, #16]
   115d0:	bl	10d98 <memcpy@plt>
   115d4:	ldr	r8, [sp, #16]
   115d8:	mov	r3, #76	; 0x4c
   115dc:	add	r0, r9, #1
   115e0:	ldr	r1, [sp, #20]
   115e4:	add	r0, r8, r0
   115e8:	strb	r3, [r8, r9]
   115ec:	bl	10e34 <strcpy@plt>
   115f0:	ldrb	r3, [r5, #33]	; 0x21
   115f4:	cmp	r3, #0
   115f8:	beq	11234 <strspn@plt+0x280>
   115fc:	mov	r2, #5
   11600:	movw	r1, #26356	; 0x66f4
   11604:	movt	r1, #1
   11608:	mov	r0, fp
   1160c:	bl	10de0 <dcgettext@plt>
   11610:	mov	r2, r0
   11614:	mov	r1, fp
   11618:	mov	r0, fp
   1161c:	bl	10e58 <error@plt>
   11620:	mov	r0, #1
   11624:	bl	120b8 <strspn@plt+0x1104>
   11628:	ldr	r0, [sp, #32]
   1162c:	bl	1292c <strspn@plt+0x1978>
   11630:	movw	r3, #29012	; 0x7154
   11634:	movt	r3, #2
   11638:	ldr	r0, [pc, #40]	; 11668 <strspn@plt+0x6b4>
   1163c:	ldr	r1, [r3]
   11640:	bl	10d2c <fputs_unlocked@plt>
   11644:	cmn	r0, #1
   11648:	bne	114e4 <strspn@plt+0x530>
   1164c:	bl	11cac <strspn@plt+0xcf8>
   11650:	vmrs	APSR_nzcv, fpscr
   11654:	movmi	r6, #1
   11658:	movpl	r6, #0
   1165c:	b	112f8 <strspn@plt+0x344>
   11660:	andeq	r0, r0, r0
   11664:	svccc	0x00f00000	; IMB
   11668:	andeq	r5, r1, r0, ror pc
   1166c:	add	r3, r9, #1
   11670:	ldr	r9, [r6, r3, lsl #2]
   11674:	mov	r0, r9
   11678:	bl	11c50 <strspn@plt+0xc9c>
   1167c:	cmp	r0, #0
   11680:	bne	11970 <strspn@plt+0x9bc>
   11684:	mov	r3, #0
   11688:	str	r3, [sp, #16]
   1168c:	ldr	r9, [r7]
   11690:	ldr	fp, [r6, r9, lsl #2]
   11694:	mov	r0, fp
   11698:	bl	11c50 <strspn@plt+0xc9c>
   1169c:	cmp	r0, #0
   116a0:	beq	11278 <strspn@plt+0x2c4>
   116a4:	add	r3, r9, #1
   116a8:	ldr	r0, [r6, r3, lsl #2]
   116ac:	lsl	r3, r3, #2
   116b0:	str	r3, [sp, #20]
   116b4:	bl	11c50 <strspn@plt+0xc9c>
   116b8:	cmp	r0, #0
   116bc:	beq	11278 <strspn@plt+0x2c4>
   116c0:	ldr	r3, [sp, #16]
   116c4:	cmp	r3, #0
   116c8:	beq	11278 <strspn@plt+0x2c4>
   116cc:	ldr	r3, [sp, #20]
   116d0:	add	r3, r6, r3
   116d4:	ldr	r0, [r3, #4]
   116d8:	bl	11c50 <strspn@plt+0xc9c>
   116dc:	cmp	r0, #0
   116e0:	beq	11278 <strspn@plt+0x2c4>
   116e4:	ldrb	r2, [r5, #33]	; 0x21
   116e8:	eor	r2, r2, #1
   116ec:	cmp	r8, #0
   116f0:	movne	r2, #0
   116f4:	andeq	r2, r2, #1
   116f8:	cmp	r2, #0
   116fc:	beq	11278 <strspn@plt+0x2c4>
   11700:	ldr	r0, [r5]
   11704:	bl	10ed0 <strlen@plt>
   11708:	cmp	r0, #1
   1170c:	bne	11278 <strspn@plt+0x2c4>
   11710:	ldr	r3, [sp, #12]
   11714:	movw	r2, #26108	; 0x65fc
   11718:	movt	r2, #1
   1171c:	ldrd	r0, [sp, #48]	; 0x30
   11720:	cmp	r3, #1
   11724:	moveq	fp, r2
   11728:	bl	15df8 <strspn@plt+0x4e44>
   1172c:	ldr	r3, [sp, #12]
   11730:	mov	r2, r0
   11734:	mov	r0, fp
   11738:	add	ip, r3, r9
   1173c:	mov	r3, r1
   11740:	sub	ip, ip, #-1073741823	; 0xc0000001
   11744:	ldr	r1, [r6, ip, lsl #2]
   11748:	bl	11cf0 <strspn@plt+0xd3c>
   1174c:	b	11278 <strspn@plt+0x2c4>
   11750:	add	ip, r2, #1
   11754:	add	r0, sp, #64	; 0x40
   11758:	ldr	r1, [r6, r2, lsl #2]
   1175c:	str	r3, [sp, #12]
   11760:	str	ip, [r7]
   11764:	bl	1244c <strspn@plt+0x1498>
   11768:	ldr	r1, [r7]
   1176c:	ldr	r3, [sp, #8]
   11770:	vldr	d11, [sp, #64]	; 0x40
   11774:	ldr	fp, [sp, #72]	; 0x48
   11778:	cmp	r1, r3
   1177c:	ldr	r3, [sp, #12]
   11780:	ldr	r2, [sp, #76]	; 0x4c
   11784:	bge	117ec <strspn@plt+0x838>
   11788:	vcmp.f64	d11, #0.0
   1178c:	vstr	d11, [sp, #48]	; 0x30
   11790:	str	fp, [sp, #56]	; 0x38
   11794:	str	r2, [sp, #60]	; 0x3c
   11798:	vmrs	APSR_nzcv, fpscr
   1179c:	bne	117c4 <strspn@plt+0x810>
   117a0:	movw	r1, #26428	; 0x673c
   117a4:	movt	r1, #1
   117a8:	mov	r2, #5
   117ac:	mov	r0, #0
   117b0:	bl	10de0 <dcgettext@plt>
   117b4:	ldr	r3, [r7]
   117b8:	mov	r4, r0
   117bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   117c0:	b	11144 <strspn@plt+0x190>
   117c4:	add	r2, r1, #1
   117c8:	add	r0, sp, #64	; 0x40
   117cc:	ldr	r1, [r6, r1, lsl #2]
   117d0:	str	r3, [sp, #8]
   117d4:	str	r2, [r7]
   117d8:	bl	1244c <strspn@plt+0x1498>
   117dc:	ldr	r3, [sp, #8]
   117e0:	vldr	d11, [sp, #64]	; 0x40
   117e4:	ldr	fp, [sp, #72]	; 0x48
   117e8:	ldr	r2, [sp, #76]	; 0x4c
   117ec:	ldr	r1, [sp, #60]	; 0x3c
   117f0:	orr	r1, r3, r1
   117f4:	orrs	r1, r1, r2
   117f8:	bne	112d0 <strspn@plt+0x31c>
   117fc:	vldr	d7, [pc, #828]	; 11b40 <strspn@plt+0xb8c>
   11800:	vmul.f64	d7, d12, d7
   11804:	vcmp.f64	d7, #0.0
   11808:	vmrs	APSR_nzcv, fpscr
   1180c:	beq	11a68 <strspn@plt+0xab4>
   11810:	cmp	r8, #0
   11814:	bne	112d8 <strspn@plt+0x324>
   11818:	ldr	ip, [sp, #60]	; 0x3c
   1181c:	mov	r2, r8
   11820:	mov	r3, r8
   11824:	bic	ip, ip, ip, asr #31
   11828:	ldrb	r1, [r5, #33]	; 0x21
   1182c:	cmp	r1, #0
   11830:	beq	11a34 <strspn@plt+0xa80>
   11834:	cmp	ip, #0
   11838:	sub	r1, ip, r3
   1183c:	moveq	lr, #1
   11840:	movne	lr, #0
   11844:	movne	r0, #1
   11848:	moveq	r0, #0
   1184c:	cmp	r2, #0
   11850:	add	r9, r1, r9
   11854:	moveq	lr, #0
   11858:	sub	r1, ip, r2
   1185c:	cmp	lr, #0
   11860:	add	fp, r1, fp
   11864:	subne	fp, fp, #1
   11868:	bne	11894 <strspn@plt+0x8e0>
   1186c:	cmp	r2, #0
   11870:	moveq	r2, r0
   11874:	movne	r2, #0
   11878:	cmp	r2, #0
   1187c:	addne	fp, fp, #1
   11880:	cmp	r3, #0
   11884:	moveq	r3, r0
   11888:	movne	r3, #0
   1188c:	cmp	r3, #0
   11890:	addne	r9, r9, #1
   11894:	cmp	r9, fp
   11898:	movcc	r9, fp
   1189c:	cmp	r9, #0
   118a0:	vldrlt	d10, [sp, #48]	; 0x30
   118a4:	bge	11a78 <strspn@plt+0xac4>
   118a8:	movw	r8, #26112	; 0x6600
   118ac:	movt	r8, #1
   118b0:	b	112dc <strspn@plt+0x328>
   118b4:	mov	r1, r0
   118b8:	movw	r2, #26464	; 0x6760
   118bc:	movt	r2, #1
   118c0:	add	r0, sp, #24
   118c4:	vstr	d12, [sp]
   118c8:	bl	10e64 <__asprintf_chk@plt>
   118cc:	cmp	r0, #0
   118d0:	blt	11af0 <strspn@plt+0xb3c>
   118d4:	vmul.f64	d8, d11, d8
   118d8:	vcmp.f64	d8, #0.0
   118dc:	vmrs	APSR_nzcv, fpscr
   118e0:	beq	11ad0 <strspn@plt+0xb1c>
   118e4:	movw	r0, #24460	; 0x5f8c
   118e8:	movt	r0, #1
   118ec:	bl	15678 <strspn@plt+0x46c4>
   118f0:	str	r0, [sp, #28]
   118f4:	ldr	r6, [sp, #24]
   118f8:	ldrb	r3, [r6]
   118fc:	cmp	r3, #45	; 0x2d
   11900:	beq	11930 <strspn@plt+0x97c>
   11904:	ldr	r7, [sp, #28]
   11908:	ldrb	r3, [r7]
   1190c:	cmp	r3, #45	; 0x2d
   11910:	beq	11930 <strspn@plt+0x97c>
   11914:	ldrd	r0, [sp, #48]	; 0x30
   11918:	bl	15df8 <strspn@plt+0x4e44>
   1191c:	mov	r2, r0
   11920:	mov	r3, r1
   11924:	mov	r0, r6
   11928:	mov	r1, r7
   1192c:	bl	11cf0 <strspn@plt+0xd3c>
   11930:	ldr	r0, [sp, #24]
   11934:	bl	1292c <strspn@plt+0x1978>
   11938:	ldr	r0, [sp, #28]
   1193c:	bl	1292c <strspn@plt+0x1978>
   11940:	mov	r2, #0
   11944:	mov	r3, r2
   11948:	ldr	ip, [sp, #60]	; 0x3c
   1194c:	cmp	r3, ip
   11950:	movge	ip, r3
   11954:	cmn	ip, #-2147483647	; 0x80000001
   11958:	cmnne	r2, #-2147483647	; 0x80000001
   1195c:	bne	11828 <strspn@plt+0x874>
   11960:	movw	r8, #26112	; 0x6600
   11964:	movt	r8, #1
   11968:	vldr	d10, [sp, #48]	; 0x30
   1196c:	b	112dc <strspn@plt+0x328>
   11970:	add	r2, sp, #48	; 0x30
   11974:	mov	r0, r9
   11978:	movw	r3, #10128	; 0x2790
   1197c:	movt	r3, #1
   11980:	mov	r1, #0
   11984:	bl	156e4 <strspn@plt+0x4730>
   11988:	cmp	r0, #0
   1198c:	beq	11684 <strspn@plt+0x6d0>
   11990:	vldr	d7, [sp, #48]	; 0x30
   11994:	vcmpe.f64	d7, #0.0
   11998:	vmrs	APSR_nzcv, fpscr
   1199c:	ble	11684 <strspn@plt+0x6d0>
   119a0:	vldr	d6, [pc, #416]	; 11b48 <strspn@plt+0xb94>
   119a4:	vcmpe.f64	d7, d6
   119a8:	vmrs	APSR_nzcv, fpscr
   119ac:	movls	r3, #1
   119b0:	movhi	r3, #0
   119b4:	str	r3, [sp, #16]
   119b8:	b	1168c <strspn@plt+0x6d8>
   119bc:	vmov.f64	d11, d12
   119c0:	vldr	d12, [pc, #392]	; 11b50 <strspn@plt+0xb9c>
   119c4:	mov	fp, r9
   119c8:	mov	r9, #1
   119cc:	vcmpe.f64	d11, #0.0
   119d0:	vldr	d8, [pc, #360]	; 11b40 <strspn@plt+0xb8c>
   119d4:	vmrs	APSR_nzcv, fpscr
   119d8:	blt	11a5c <strspn@plt+0xaa8>
   119dc:	vldr	d10, [sp, #48]	; 0x30
   119e0:	vcmpe.f64	d10, d8
   119e4:	vmrs	APSR_nzcv, fpscr
   119e8:	ble	11a5c <strspn@plt+0xaa8>
   119ec:	vldr	d7, [pc, #340]	; 11b48 <strspn@plt+0xb94>
   119f0:	vcmpe.f64	d10, d7
   119f4:	vmrs	APSR_nzcv, fpscr
   119f8:	bhi	11a5c <strspn@plt+0xaa8>
   119fc:	ldrb	r3, [r5, #33]	; 0x21
   11a00:	cmp	r3, #0
   11a04:	bne	11a5c <strspn@plt+0xaa8>
   11a08:	cmp	r8, #0
   11a0c:	bne	112dc <strspn@plt+0x328>
   11a10:	ldr	r0, [r5]
   11a14:	bl	10ed0 <strlen@plt>
   11a18:	cmp	r0, #1
   11a1c:	mov	r6, r0
   11a20:	beq	118b4 <strspn@plt+0x900>
   11a24:	ldr	ip, [sp, #60]	; 0x3c
   11a28:	cmn	ip, #-2147483647	; 0x80000001
   11a2c:	bic	ip, ip, ip, asr #31
   11a30:	beq	118a8 <strspn@plt+0x8f4>
   11a34:	movw	r3, #26484	; 0x6774
   11a38:	movt	r3, #1
   11a3c:	ldr	r0, [pc, #276]	; 11b58 <strspn@plt+0xba4>
   11a40:	mov	r2, #28
   11a44:	mov	r1, #1
   11a48:	str	ip, [sp]
   11a4c:	bl	10ef4 <__sprintf_chk@plt>
   11a50:	ldr	r8, [pc, #256]	; 11b58 <strspn@plt+0xba4>
   11a54:	vldr	d10, [sp, #48]	; 0x30
   11a58:	b	112dc <strspn@plt+0x328>
   11a5c:	mov	r2, #0
   11a60:	mov	r3, r2
   11a64:	b	112d0 <strspn@plt+0x31c>
   11a68:	vcmpe.f64	d12, #0.0
   11a6c:	vmrs	APSR_nzcv, fpscr
   11a70:	blt	11810 <strspn@plt+0x85c>
   11a74:	b	119cc <strspn@plt+0xa18>
   11a78:	movw	r3, #26472	; 0x6768
   11a7c:	movt	r3, #1
   11a80:	ldr	r0, [pc, #208]	; 11b58 <strspn@plt+0xba4>
   11a84:	mov	r2, #28
   11a88:	mov	r1, #1
   11a8c:	stm	sp, {r9, ip}
   11a90:	ldr	r8, [pc, #192]	; 11b58 <strspn@plt+0xba4>
   11a94:	bl	10ef4 <__sprintf_chk@plt>
   11a98:	b	112d8 <strspn@plt+0x324>
   11a9c:	movw	r1, #26200	; 0x6658
   11aa0:	movt	r1, #1
   11aa4:	mov	r2, #5
   11aa8:	mov	r0, #0
   11aac:	bl	10de0 <dcgettext@plt>
   11ab0:	mov	r4, r0
   11ab4:	mov	r0, r8
   11ab8:	bl	14c7c <strspn@plt+0x3cc8>
   11abc:	mov	r3, r0
   11ac0:	mov	r2, r4
   11ac4:	mov	r1, #0
   11ac8:	mov	r0, #1
   11acc:	bl	10e58 <error@plt>
   11ad0:	mov	r1, r6
   11ad4:	movw	r2, #26464	; 0x6760
   11ad8:	movt	r2, #1
   11adc:	add	r0, sp, #28
   11ae0:	vstr	d11, [sp]
   11ae4:	bl	10e64 <__asprintf_chk@plt>
   11ae8:	cmp	r0, #0
   11aec:	bge	118f4 <strspn@plt+0x940>
   11af0:	bl	156a0 <strspn@plt+0x46ec>
   11af4:	mov	r2, #5
   11af8:	movw	r1, #26276	; 0x66a4
   11afc:	movt	r1, #1
   11b00:	bl	10de0 <dcgettext@plt>
   11b04:	mov	r4, r0
   11b08:	mov	r0, r8
   11b0c:	bl	14c7c <strspn@plt+0x3cc8>
   11b10:	ldr	r3, [sp, #20]
   11b14:	mov	r2, r4
   11b18:	mov	r1, sl
   11b1c:	ldrb	ip, [r3]
   11b20:	mov	r3, r0
   11b24:	mov	r0, #1
   11b28:	str	ip, [sp]
   11b2c:	bl	10e58 <error@plt>
   11b30:	movw	r1, #26316	; 0x66cc
   11b34:	movt	r1, #1
   11b38:	b	11aa4 <strspn@plt+0xaf0>
   11b3c:	nop	{0}
	...
   11b4c:	rsbmi	r0, r9, r0
   11b50:	andeq	r0, r0, r0
   11b54:	svccc	0x00f00000	; IMB
   11b58:	andeq	r7, r2, r4, ror #2
   11b5c:	mov	fp, #0
   11b60:	mov	lr, #0
   11b64:	pop	{r1}		; (ldr r1, [sp], #4)
   11b68:	mov	r2, sp
   11b6c:	push	{r2}		; (str r2, [sp, #-4]!)
   11b70:	push	{r0}		; (str r0, [sp, #-4]!)
   11b74:	ldr	ip, [pc, #16]	; 11b8c <strspn@plt+0xbd8>
   11b78:	push	{ip}		; (str ip, [sp, #-4]!)
   11b7c:	ldr	r0, [pc, #12]	; 11b90 <strspn@plt+0xbdc>
   11b80:	ldr	r3, [pc, #12]	; 11b94 <strspn@plt+0xbe0>
   11b84:	bl	10e7c <__libc_start_main@plt>
   11b88:	bl	10fa8 <abort@plt>
   11b8c:	muleq	r1, r8, lr
   11b90:	andeq	r0, r1, r0, asr #31
   11b94:	andeq	r5, r1, r8, lsr lr
   11b98:	ldr	r3, [pc, #20]	; 11bb4 <strspn@plt+0xc00>
   11b9c:	ldr	r2, [pc, #20]	; 11bb8 <strspn@plt+0xc04>
   11ba0:	add	r3, pc, r3
   11ba4:	ldr	r2, [r3, r2]
   11ba8:	cmp	r2, #0
   11bac:	bxeq	lr
   11bb0:	b	10e94 <__gmon_start__@plt>
   11bb4:	andeq	r5, r1, r8, asr r4
   11bb8:	andeq	r0, r0, ip, ror #1
   11bbc:	ldr	r0, [pc, #24]	; 11bdc <strspn@plt+0xc28>
   11bc0:	ldr	r3, [pc, #24]	; 11be0 <strspn@plt+0xc2c>
   11bc4:	cmp	r3, r0
   11bc8:	bxeq	lr
   11bcc:	ldr	r3, [pc, #16]	; 11be4 <strspn@plt+0xc30>
   11bd0:	cmp	r3, #0
   11bd4:	bxeq	lr
   11bd8:	bx	r3
   11bdc:	andeq	r7, r2, r0, asr #2
   11be0:	andeq	r7, r2, r0, asr #2
   11be4:	andeq	r0, r0, r0
   11be8:	ldr	r0, [pc, #36]	; 11c14 <strspn@plt+0xc60>
   11bec:	ldr	r1, [pc, #36]	; 11c18 <strspn@plt+0xc64>
   11bf0:	sub	r1, r1, r0
   11bf4:	asr	r1, r1, #2
   11bf8:	add	r1, r1, r1, lsr #31
   11bfc:	asrs	r1, r1, #1
   11c00:	bxeq	lr
   11c04:	ldr	r3, [pc, #16]	; 11c1c <strspn@plt+0xc68>
   11c08:	cmp	r3, #0
   11c0c:	bxeq	lr
   11c10:	bx	r3
   11c14:	andeq	r7, r2, r0, asr #2
   11c18:	andeq	r7, r2, r0, asr #2
   11c1c:	andeq	r0, r0, r0
   11c20:	push	{r4, lr}
   11c24:	ldr	r4, [pc, #24]	; 11c44 <strspn@plt+0xc90>
   11c28:	ldrb	r3, [r4]
   11c2c:	cmp	r3, #0
   11c30:	popne	{r4, pc}
   11c34:	bl	11bbc <strspn@plt+0xc08>
   11c38:	mov	r3, #1
   11c3c:	strb	r3, [r4]
   11c40:	pop	{r4, pc}
   11c44:	andeq	r7, r2, ip, asr r1
   11c48:	b	11be8 <strspn@plt+0xc34>
   11c4c:	andeq	r0, r0, r0
   11c50:	ldrb	r3, [r0]
   11c54:	sub	r3, r3, #48	; 0x30
   11c58:	cmp	r3, #9
   11c5c:	bhi	11ca4 <strspn@plt+0xcf0>
   11c60:	strd	r4, [sp, #-16]!
   11c64:	mov	r4, r0
   11c68:	str	r6, [sp, #8]
   11c6c:	str	lr, [sp, #12]
   11c70:	bl	10ed0 <strlen@plt>
   11c74:	mov	r5, r0
   11c78:	movw	r1, #24436	; 0x5f74
   11c7c:	movt	r1, #1
   11c80:	mov	r0, r4
   11c84:	bl	10fb4 <strspn@plt>
   11c88:	sub	r0, r0, r5
   11c8c:	ldrd	r4, [sp]
   11c90:	clz	r0, r0
   11c94:	ldr	r6, [sp, #8]
   11c98:	add	sp, sp, #12
   11c9c:	lsr	r0, r0, #5
   11ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ca4:	mov	r0, #0
   11ca8:	bx	lr
   11cac:	movw	r3, #29012	; 0x7154
   11cb0:	movt	r3, #2
   11cb4:	str	r4, [sp, #-8]!
   11cb8:	ldr	r0, [r3]
   11cbc:	str	lr, [sp, #4]
   11cc0:	bl	10f84 <clearerr_unlocked@plt>
   11cc4:	bl	10ee8 <__errno_location@plt>
   11cc8:	ldr	r4, [r0]
   11ccc:	mov	r2, #5
   11cd0:	movw	r1, #24448	; 0x5f80
   11cd4:	movt	r1, #1
   11cd8:	mov	r0, #0
   11cdc:	bl	10de0 <dcgettext@plt>
   11ce0:	mov	r2, r0
   11ce4:	mov	r0, #1
   11ce8:	mov	r1, r4
   11cec:	bl	10e58 <error@plt>
   11cf0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11cf4:	strd	r6, [sp, #8]
   11cf8:	strd	r8, [sp, #16]
   11cfc:	mov	r8, r1
   11d00:	mov	r9, r0
   11d04:	strd	sl, [sp, #24]
   11d08:	movw	r1, #24460	; 0x5f8c
   11d0c:	movt	r1, #1
   11d10:	str	lr, [sp, #32]
   11d14:	sub	sp, sp, #36	; 0x24
   11d18:	mov	r0, r8
   11d1c:	mov	r4, r9
   11d20:	strd	r2, [sp]
   11d24:	bl	10d44 <strcmp@plt>
   11d28:	ldrb	r3, [r9]
   11d2c:	mov	r5, r0
   11d30:	cmp	r3, #48	; 0x30
   11d34:	bne	11d74 <strspn@plt+0xdc0>
   11d38:	mov	r7, r9
   11d3c:	mov	r6, r8
   11d40:	b	11d48 <strspn@plt+0xd94>
   11d44:	mov	r4, r3
   11d48:	ldrb	r2, [r4, #1]
   11d4c:	add	r3, r4, #1
   11d50:	cmp	r2, #48	; 0x30
   11d54:	beq	11d44 <strspn@plt+0xd90>
   11d58:	subs	r7, r7, r3
   11d5c:	mov	r8, r6
   11d60:	movne	r7, #1
   11d64:	cmp	r2, #0
   11d68:	movne	r7, #0
   11d6c:	cmp	r7, #0
   11d70:	moveq	r4, r3
   11d74:	ldrb	r3, [r8]
   11d78:	mov	r9, r8
   11d7c:	cmp	r3, #48	; 0x30
   11d80:	bne	11db8 <strspn@plt+0xe04>
   11d84:	mov	r6, r8
   11d88:	b	11d90 <strspn@plt+0xddc>
   11d8c:	mov	r9, r2
   11d90:	ldrb	r1, [r9, #1]
   11d94:	add	r2, r9, #1
   11d98:	cmp	r1, #48	; 0x30
   11d9c:	beq	11d8c <strspn@plt+0xdd8>
   11da0:	subs	r6, r6, r2
   11da4:	movne	r6, #1
   11da8:	cmp	r1, #0
   11dac:	movne	r6, #0
   11db0:	cmp	r6, #0
   11db4:	moveq	r9, r2
   11db8:	mov	r0, r4
   11dbc:	bl	10ed0 <strlen@plt>
   11dc0:	add	fp, r0, #1
   11dc4:	mov	r6, r0
   11dc8:	cmp	fp, #31
   11dcc:	movcs	r7, fp
   11dd0:	movcc	r7, #31
   11dd4:	cmp	r5, #0
   11dd8:	beq	11e90 <strspn@plt+0xedc>
   11ddc:	mov	r0, r9
   11de0:	bl	10ed0 <strlen@plt>
   11de4:	cmp	r7, r0
   11de8:	mov	r8, r0
   11dec:	movcc	r7, r0
   11df0:	add	r3, r7, #1
   11df4:	mov	r0, r3
   11df8:	str	r3, [sp, #8]
   11dfc:	bl	15228 <strspn@plt+0x4274>
   11e00:	mov	sl, r0
   11e04:	sub	r0, r7, r6
   11e08:	mov	r2, fp
   11e0c:	mov	r1, r4
   11e10:	add	r0, sl, r0
   11e14:	bl	10d98 <memcpy@plt>
   11e18:	mov	r4, r0
   11e1c:	ldr	r0, [sp, #8]
   11e20:	bl	15228 <strspn@plt+0x4274>
   11e24:	mov	fp, r0
   11e28:	sub	r0, r7, r8
   11e2c:	mov	r1, r9
   11e30:	add	r0, fp, r0
   11e34:	add	r2, r8, #1
   11e38:	bl	10d98 <memcpy@plt>
   11e3c:	cmp	r6, r8
   11e40:	str	r0, [sp, #16]
   11e44:	bcc	11ec4 <strspn@plt+0xf10>
   11e48:	bhi	11e64 <strspn@plt+0xeb0>
   11e4c:	mov	r1, r0
   11e50:	mov	r2, r6
   11e54:	mov	r0, r4
   11e58:	bl	10dc8 <memcmp@plt>
   11e5c:	cmp	r0, #0
   11e60:	ble	11ec4 <strspn@plt+0xf10>
   11e64:	mov	r0, sl
   11e68:	bl	1292c <strspn@plt+0x1978>
   11e6c:	mov	r0, fp
   11e70:	add	sp, sp, #36	; 0x24
   11e74:	ldrd	r4, [sp]
   11e78:	ldrd	r6, [sp, #8]
   11e7c:	ldrd	r8, [sp, #16]
   11e80:	ldrd	sl, [sp, #24]
   11e84:	ldr	lr, [sp, #32]
   11e88:	add	sp, sp, #36	; 0x24
   11e8c:	b	1292c <strspn@plt+0x1978>
   11e90:	add	r3, r7, #1
   11e94:	mov	r8, r5
   11e98:	mov	r0, r3
   11e9c:	str	r3, [sp, #8]
   11ea0:	bl	15228 <strspn@plt+0x4274>
   11ea4:	mov	sl, r0
   11ea8:	sub	r0, r7, r6
   11eac:	mov	r1, r4
   11eb0:	mov	r2, fp
   11eb4:	add	r0, sl, r0
   11eb8:	bl	10d98 <memcpy@plt>
   11ebc:	mov	r4, r0
   11ec0:	str	r5, [sp, #16]
   11ec4:	ldr	r3, [sp, #8]
   11ec8:	movw	r2, #29012	; 0x7154
   11ecc:	movt	r2, #2
   11ed0:	clz	r1, r5
   11ed4:	mov	r5, #48	; 0x30
   11ed8:	lsl	r3, r3, #1
   11edc:	cmp	r3, #8192	; 0x2000
   11ee0:	movcc	r3, #8192	; 0x2000
   11ee4:	mov	r0, r3
   11ee8:	strd	r2, [sp, #20]
   11eec:	lsr	r2, r1, #5
   11ef0:	str	r2, [sp, #8]
   11ef4:	bl	15228 <strspn@plt+0x4274>
   11ef8:	mov	r2, r6
   11efc:	mov	r1, r4
   11f00:	mov	r9, r0
   11f04:	bl	10ea0 <mempcpy@plt>
   11f08:	ldr	r3, [sp, #24]
   11f0c:	mov	fp, r0
   11f10:	add	r3, r9, r3
   11f14:	str	r3, [sp, #12]
   11f18:	ldrd	r0, [sp]
   11f1c:	orrs	r3, r0, r1
   11f20:	beq	11f68 <strspn@plt+0xfb4>
   11f24:	mov	lr, #49	; 0x31
   11f28:	sub	r3, r6, #1
   11f2c:	add	r3, r4, r3
   11f30:	b	11f40 <strspn@plt+0xf8c>
   11f34:	cmp	r3, r4
   11f38:	strb	r5, [r3, #1]
   11f3c:	bcc	12008 <strspn@plt+0x1054>
   11f40:	mov	ip, r3
   11f44:	ldrb	r2, [r3], #-1
   11f48:	cmp	r2, #56	; 0x38
   11f4c:	bhi	11f34 <strspn@plt+0xf80>
   11f50:	add	r2, r2, #1
   11f54:	strb	r2, [ip]
   11f58:	subs	r0, r0, #1
   11f5c:	sbc	r1, r1, #0
   11f60:	orrs	r3, r0, r1
   11f64:	bne	11f28 <strspn@plt+0xf74>
   11f68:	ldr	r3, [sp, #8]
   11f6c:	cmp	r6, r8
   11f70:	orrcc	r3, r3, #1
   11f74:	cmp	r3, #0
   11f78:	bne	11f9c <strspn@plt+0xfe8>
   11f7c:	cmp	r6, r8
   11f80:	bhi	12018 <strspn@plt+0x1064>
   11f84:	mov	r2, r6
   11f88:	mov	r0, r4
   11f8c:	ldr	r1, [sp, #16]
   11f90:	bl	10dc8 <memcmp@plt>
   11f94:	cmp	r0, #0
   11f98:	bgt	12018 <strspn@plt+0x1064>
   11f9c:	movw	r3, #29024	; 0x7160
   11fa0:	movt	r3, #2
   11fa4:	ldr	r3, [r3]
   11fa8:	cmp	r7, r6
   11fac:	ldrb	r3, [r3]
   11fb0:	strb	r3, [fp], #1
   11fb4:	beq	12048 <strspn@plt+0x1094>
   11fb8:	mov	r0, fp
   11fbc:	mov	r2, r6
   11fc0:	mov	r1, r4
   11fc4:	bl	10ea0 <mempcpy@plt>
   11fc8:	ldr	r2, [sp, #12]
   11fcc:	mvn	r3, r6
   11fd0:	mov	fp, r0
   11fd4:	add	r3, r2, r3
   11fd8:	cmp	r0, r3
   11fdc:	bls	11f18 <strspn@plt+0xf64>
   11fe0:	ldr	r3, [sp, #20]
   11fe4:	sub	r1, r0, r9
   11fe8:	mov	r2, #1
   11fec:	mov	r0, r9
   11ff0:	ldr	r3, [r3]
   11ff4:	bl	10dbc <fwrite_unlocked@plt>
   11ff8:	cmp	r0, #1
   11ffc:	bne	120b4 <strspn@plt+0x1100>
   12000:	mov	fp, r9
   12004:	b	11f18 <strspn@plt+0xf64>
   12008:	add	r6, r6, #1
   1200c:	sub	r4, r4, #1
   12010:	strb	lr, [r4]
   12014:	b	11f58 <strspn@plt+0xfa4>
   12018:	mov	r3, #10
   1201c:	mov	r0, r9
   12020:	mov	r2, #1
   12024:	strb	r3, [fp], #1
   12028:	sub	r1, fp, r9
   1202c:	ldr	r3, [sp, #20]
   12030:	ldr	r3, [r3]
   12034:	bl	10dbc <fwrite_unlocked@plt>
   12038:	cmp	r0, #1
   1203c:	bne	120b4 <strspn@plt+0x1100>
   12040:	mov	r0, #0
   12044:	bl	10ec4 <exit@plt>
   12048:	lsl	r7, r7, #1
   1204c:	mov	r0, sl
   12050:	add	r1, r7, #1
   12054:	lsl	r3, r1, #1
   12058:	str	r3, [sp, #28]
   1205c:	bl	15294 <strspn@plt+0x42e0>
   12060:	mov	r1, r0
   12064:	add	r2, r6, #1
   12068:	mov	sl, r0
   1206c:	add	r0, r0, r6
   12070:	bl	10d74 <memmove@plt>
   12074:	ldrd	r2, [sp, #24]
   12078:	mov	r4, r0
   1207c:	cmp	r3, r2
   12080:	bls	11fb8 <strspn@plt+0x1004>
   12084:	mov	r0, r9
   12088:	mov	r1, r3
   1208c:	str	r3, [sp, #12]
   12090:	str	r3, [sp, #24]
   12094:	sub	fp, fp, r9
   12098:	bl	15294 <strspn@plt+0x42e0>
   1209c:	ldr	r3, [sp, #12]
   120a0:	mov	r9, r0
   120a4:	add	fp, r0, fp
   120a8:	add	r3, r0, r3
   120ac:	str	r3, [sp, #12]
   120b0:	b	11fb8 <strspn@plt+0x1004>
   120b4:	bl	11cac <strspn@plt+0xcf8>
   120b8:	subs	r6, r0, #0
   120bc:	str	r7, [sp, #-8]!
   120c0:	str	lr, [sp, #4]
   120c4:	sub	sp, sp, #64	; 0x40
   120c8:	beq	12110 <strspn@plt+0x115c>
   120cc:	movw	r3, #29008	; 0x7150
   120d0:	movt	r3, #2
   120d4:	ldr	r4, [r3]
   120d8:	mov	r2, #5
   120dc:	movw	r1, #24468	; 0x5f94
   120e0:	movt	r1, #1
   120e4:	mov	r0, #0
   120e8:	bl	10de0 <dcgettext@plt>
   120ec:	movw	r3, #29068	; 0x718c
   120f0:	movt	r3, #2
   120f4:	mov	r2, r0
   120f8:	mov	r1, #1
   120fc:	ldr	r3, [r3]
   12100:	mov	r0, r4
   12104:	bl	10f30 <__fprintf_chk@plt>
   12108:	mov	r0, r6
   1210c:	bl	10ec4 <exit@plt>
   12110:	mov	r2, #5
   12114:	movw	r1, #24508	; 0x5fbc
   12118:	movt	r1, #1
   1211c:	movw	r7, #29012	; 0x7154
   12120:	movt	r7, #2
   12124:	bl	10de0 <dcgettext@plt>
   12128:	movw	r3, #29068	; 0x718c
   1212c:	movt	r3, #2
   12130:	ldr	ip, [r3]
   12134:	mov	r1, r0
   12138:	mov	r0, #1
   1213c:	mov	r3, ip
   12140:	mov	r2, ip
   12144:	str	ip, [sp]
   12148:	bl	10f18 <__printf_chk@plt>
   1214c:	mov	r2, #5
   12150:	movw	r1, #24612	; 0x6024
   12154:	movt	r1, #1
   12158:	mov	r0, r6
   1215c:	bl	10de0 <dcgettext@plt>
   12160:	ldr	r1, [r7]
   12164:	bl	10d2c <fputs_unlocked@plt>
   12168:	mov	r2, #5
   1216c:	movw	r1, #24672	; 0x6060
   12170:	movt	r1, #1
   12174:	mov	r0, r6
   12178:	bl	10de0 <dcgettext@plt>
   1217c:	ldr	r1, [r7]
   12180:	bl	10d2c <fputs_unlocked@plt>
   12184:	mov	r2, #5
   12188:	movw	r1, #24748	; 0x60ac
   1218c:	movt	r1, #1
   12190:	mov	r0, r6
   12194:	bl	10de0 <dcgettext@plt>
   12198:	ldr	r1, [r7]
   1219c:	bl	10d2c <fputs_unlocked@plt>
   121a0:	mov	r2, #5
   121a4:	movw	r1, #24960	; 0x6180
   121a8:	movt	r1, #1
   121ac:	mov	r0, r6
   121b0:	bl	10de0 <dcgettext@plt>
   121b4:	ldr	r1, [r7]
   121b8:	bl	10d2c <fputs_unlocked@plt>
   121bc:	mov	r2, #5
   121c0:	movw	r1, #25008	; 0x61b0
   121c4:	movt	r1, #1
   121c8:	mov	r0, r6
   121cc:	bl	10de0 <dcgettext@plt>
   121d0:	ldr	r1, [r7]
   121d4:	bl	10d2c <fputs_unlocked@plt>
   121d8:	mov	r2, #5
   121dc:	movw	r1, #25064	; 0x61e8
   121e0:	movt	r1, #1
   121e4:	mov	r0, r6
   121e8:	bl	10de0 <dcgettext@plt>
   121ec:	ldr	r1, [r7]
   121f0:	bl	10d2c <fputs_unlocked@plt>
   121f4:	mov	r2, #5
   121f8:	movw	r1, #25580	; 0x63ec
   121fc:	movt	r1, #1
   12200:	mov	r0, r6
   12204:	bl	10de0 <dcgettext@plt>
   12208:	ldr	r1, [r7]
   1220c:	bl	10d2c <fputs_unlocked@plt>
   12210:	movw	lr, #24264	; 0x5ec8
   12214:	movt	lr, #1
   12218:	ldr	ip, [lr]
   1221c:	ldr	r4, [lr, #4]
   12220:	ldrd	r8, [lr, #8]
   12224:	subs	r1, ip, #0
   12228:	str	ip, [sp, #8]
   1222c:	ldrd	r2, [lr, #16]
   12230:	str	r4, [sp, #12]
   12234:	ldrd	r4, [lr, #24]
   12238:	strd	r8, [sp, #16]
   1223c:	ldrd	r8, [lr, #32]
   12240:	strd	r2, [sp, #24]
   12244:	ldrd	r2, [lr, #40]	; 0x28
   12248:	strd	r4, [sp, #32]
   1224c:	ldrd	r4, [lr, #48]	; 0x30
   12250:	strd	r8, [sp, #40]	; 0x28
   12254:	strd	r2, [sp, #48]	; 0x30
   12258:	strd	r4, [sp, #56]	; 0x38
   1225c:	movwne	r5, #24464	; 0x5f90
   12260:	add	r4, sp, #8
   12264:	movtne	r5, #1
   12268:	bne	12360 <strspn@plt+0x13ac>
   1226c:	ldr	r4, [r4, #4]
   12270:	movw	r1, #25788	; 0x64bc
   12274:	movt	r1, #1
   12278:	mov	r2, #5
   1227c:	cmp	r4, #0
   12280:	beq	12374 <strspn@plt+0x13c0>
   12284:	mov	r0, #0
   12288:	bl	10de0 <dcgettext@plt>
   1228c:	mov	r1, r0
   12290:	movw	r3, #25812	; 0x64d4
   12294:	movt	r3, #1
   12298:	movw	r2, #25852	; 0x64fc
   1229c:	movt	r2, #1
   122a0:	mov	r0, #1
   122a4:	bl	10f18 <__printf_chk@plt>
   122a8:	mov	r1, #0
   122ac:	mov	r0, #5
   122b0:	bl	10f54 <setlocale@plt>
   122b4:	cmp	r0, #0
   122b8:	movweq	r5, #24464	; 0x5f90
   122bc:	movteq	r5, #1
   122c0:	beq	122e4 <strspn@plt+0x1330>
   122c4:	movw	r1, #25868	; 0x650c
   122c8:	movt	r1, #1
   122cc:	mov	r2, #3
   122d0:	movw	r5, #24464	; 0x5f90
   122d4:	movt	r5, #1
   122d8:	bl	10f9c <strncmp@plt>
   122dc:	cmp	r0, #0
   122e0:	bne	1242c <strspn@plt+0x1478>
   122e4:	mov	r2, #5
   122e8:	movw	r1, #25944	; 0x6558
   122ec:	movt	r1, #1
   122f0:	mov	r0, #0
   122f4:	bl	10de0 <dcgettext@plt>
   122f8:	mov	r1, r0
   122fc:	movw	r3, #24464	; 0x5f90
   12300:	movt	r3, #1
   12304:	movw	r2, #25812	; 0x64d4
   12308:	movt	r2, #1
   1230c:	mov	r0, #1
   12310:	bl	10f18 <__printf_chk@plt>
   12314:	mov	r2, #5
   12318:	movw	r1, #25972	; 0x6574
   1231c:	movt	r1, #1
   12320:	mov	r0, #0
   12324:	bl	10de0 <dcgettext@plt>
   12328:	movw	r2, #26504	; 0x6788
   1232c:	movt	r2, #1
   12330:	cmp	r4, r5
   12334:	movw	r3, #25576	; 0x63e8
   12338:	movt	r3, #1
   1233c:	mov	r1, r0
   12340:	moveq	r3, r2
   12344:	mov	r2, r4
   12348:	mov	r0, #1
   1234c:	bl	10f18 <__printf_chk@plt>
   12350:	b	12108 <strspn@plt+0x1154>
   12354:	ldr	r1, [r4, #8]!
   12358:	cmp	r1, #0
   1235c:	beq	1226c <strspn@plt+0x12b8>
   12360:	mov	r0, r5
   12364:	bl	10d44 <strcmp@plt>
   12368:	cmp	r0, #0
   1236c:	bne	12354 <strspn@plt+0x13a0>
   12370:	b	1226c <strspn@plt+0x12b8>
   12374:	mov	r0, r4
   12378:	bl	10de0 <dcgettext@plt>
   1237c:	mov	r1, r0
   12380:	movw	r3, #25812	; 0x64d4
   12384:	movt	r3, #1
   12388:	movw	r2, #25852	; 0x64fc
   1238c:	movt	r2, #1
   12390:	mov	r0, #1
   12394:	bl	10f18 <__printf_chk@plt>
   12398:	mov	r1, r4
   1239c:	mov	r0, #5
   123a0:	bl	10f54 <setlocale@plt>
   123a4:	cmp	r0, #0
   123a8:	beq	123c4 <strspn@plt+0x1410>
   123ac:	movw	r1, #25868	; 0x650c
   123b0:	movt	r1, #1
   123b4:	mov	r2, #3
   123b8:	bl	10f9c <strncmp@plt>
   123bc:	cmp	r0, #0
   123c0:	bne	12420 <strspn@plt+0x146c>
   123c4:	mov	r2, #5
   123c8:	movw	r1, #25944	; 0x6558
   123cc:	movt	r1, #1
   123d0:	mov	r0, #0
   123d4:	bl	10de0 <dcgettext@plt>
   123d8:	mov	r1, r0
   123dc:	movw	r3, #24464	; 0x5f90
   123e0:	movt	r3, #1
   123e4:	movw	r2, #25812	; 0x64d4
   123e8:	movt	r2, #1
   123ec:	mov	r0, #1
   123f0:	bl	10f18 <__printf_chk@plt>
   123f4:	movw	r1, #25972	; 0x6574
   123f8:	movt	r1, #1
   123fc:	mov	r2, #5
   12400:	mov	r0, #0
   12404:	bl	10de0 <dcgettext@plt>
   12408:	movw	r4, #24464	; 0x5f90
   1240c:	movt	r4, #1
   12410:	movw	r3, #26504	; 0x6788
   12414:	movt	r3, #1
   12418:	mov	r1, r0
   1241c:	b	12344 <strspn@plt+0x1390>
   12420:	movw	r5, #24464	; 0x5f90
   12424:	movt	r5, #1
   12428:	mov	r4, r5
   1242c:	mov	r2, #5
   12430:	movw	r1, #25872	; 0x6510
   12434:	movt	r1, #1
   12438:	mov	r0, #0
   1243c:	bl	10de0 <dcgettext@plt>
   12440:	ldr	r1, [r7]
   12444:	bl	10d2c <fputs_unlocked@plt>
   12448:	b	122e4 <strspn@plt+0x1330>
   1244c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12450:	movw	r3, #10128	; 0x2790
   12454:	movt	r3, #1
   12458:	strd	r6, [sp, #8]
   1245c:	mov	r4, r1
   12460:	mov	r6, r0
   12464:	strd	r8, [sp, #16]
   12468:	mov	r0, r1
   1246c:	mov	r1, #0
   12470:	str	sl, [sp, #24]
   12474:	str	lr, [sp, #28]
   12478:	vpush	{d8}
   1247c:	sub	sp, sp, #24
   12480:	add	r2, sp, #8
   12484:	bl	156e4 <strspn@plt+0x4730>
   12488:	subs	r5, r0, #0
   1248c:	beq	12750 <strspn@plt+0x179c>
   12490:	vldr	d8, [sp, #8]
   12494:	vcmp.f64	d8, d8
   12498:	vmrs	APSR_nzcv, fpscr
   1249c:	bne	126f8 <strspn@plt+0x1744>
   124a0:	bl	10eb8 <__ctype_b_loc@plt>
   124a4:	ldr	r0, [r0]
   124a8:	mov	r1, r4
   124ac:	mov	r4, r1
   124b0:	add	r1, r1, #1
   124b4:	ldrb	r2, [r1, #-1]
   124b8:	lsl	r3, r2, #1
   124bc:	ldrh	r3, [r0, r3]
   124c0:	ubfx	r3, r3, #13, #1
   124c4:	cmp	r2, #43	; 0x2b
   124c8:	orreq	r3, r3, #1
   124cc:	cmp	r3, #0
   124d0:	bne	124ac <strspn@plt+0x14f8>
   124d4:	mvn	r2, #-2147483648	; 0x80000000
   124d8:	mov	r1, #46	; 0x2e
   124dc:	str	r3, [sp, #16]
   124e0:	mov	r0, r4
   124e4:	str	r2, [sp, #20]
   124e8:	bl	10edc <strchr@plt>
   124ec:	subs	r5, r0, #0
   124f0:	beq	12620 <strspn@plt+0x166c>
   124f4:	movw	r1, #26100	; 0x65f4
   124f8:	movt	r1, #1
   124fc:	mov	r0, r4
   12500:	bl	10d5c <strcspn@plt>
   12504:	ldrb	r3, [r4, r0]
   12508:	cmp	r3, #0
   1250c:	bne	125ec <strspn@plt+0x1638>
   12510:	vldr	d7, [pc, #624]	; 12788 <strspn@plt+0x17d4>
   12514:	vmul.f64	d8, d8, d7
   12518:	vcmp.f64	d8, d7
   1251c:	vmrs	APSR_nzcv, fpscr
   12520:	bne	125ec <strspn@plt+0x1638>
   12524:	mov	r0, r4
   12528:	bl	10ed0 <strlen@plt>
   1252c:	cmp	r5, #0
   12530:	mov	r7, r0
   12534:	str	r0, [sp, #16]
   12538:	moveq	r8, r5
   1253c:	beq	1256c <strspn@plt+0x15b8>
   12540:	movw	r1, #26104	; 0x65f8
   12544:	movt	r1, #1
   12548:	add	r0, r5, #1
   1254c:	bl	10d5c <strcspn@plt>
   12550:	subs	r8, r0, #0
   12554:	blt	12650 <strspn@plt+0x169c>
   12558:	mvneq	r3, #0
   1255c:	str	r8, [sp, #20]
   12560:	bne	12650 <strspn@plt+0x169c>
   12564:	add	r7, r7, r3
   12568:	str	r7, [sp, #16]
   1256c:	mov	r1, #101	; 0x65
   12570:	mov	r0, r4
   12574:	bl	10edc <strchr@plt>
   12578:	subs	r7, r0, #0
   1257c:	beq	12638 <strspn@plt+0x1684>
   12580:	add	sl, r7, #1
   12584:	mov	r2, #10
   12588:	mov	r0, sl
   1258c:	mov	r1, #0
   12590:	bl	10d50 <strtol@plt>
   12594:	cmp	r0, #-2147483646	; 0x80000002
   12598:	sub	r9, r7, r4
   1259c:	bge	12678 <strspn@plt+0x16c4>
   125a0:	ldr	r2, [sp, #20]
   125a4:	mov	sl, #-2147483647	; 0x80000001
   125a8:	sub	r2, r2, sl
   125ac:	mov	r0, r4
   125b0:	str	r2, [sp, #20]
   125b4:	bl	10ed0 <strlen@plt>
   125b8:	ldr	r3, [sp, #16]
   125bc:	cmp	r5, #0
   125c0:	add	r3, r9, r3
   125c4:	sub	r3, r3, r0
   125c8:	beq	12670 <strspn@plt+0x16bc>
   125cc:	add	r5, r5, #1
   125d0:	cmp	r7, r5
   125d4:	beq	12670 <strspn@plt+0x16bc>
   125d8:	str	r3, [sp, #16]
   125dc:	rsb	sl, sl, #0
   125e0:	ldr	r3, [sp, #16]
   125e4:	add	r3, r3, sl
   125e8:	str	r3, [sp, #16]
   125ec:	ldrd	r4, [sp, #8]
   125f0:	mov	r0, r6
   125f4:	ldrd	r2, [sp, #16]
   125f8:	strd	r4, [r6]
   125fc:	strd	r2, [r6, #8]
   12600:	add	sp, sp, #24
   12604:	vpop	{d8}
   12608:	ldrd	r4, [sp]
   1260c:	ldrd	r6, [sp, #8]
   12610:	ldrd	r8, [sp, #16]
   12614:	ldr	sl, [sp, #24]
   12618:	add	sp, sp, #28
   1261c:	pop	{pc}		; (ldr pc, [sp], #4)
   12620:	mov	r1, #112	; 0x70
   12624:	mov	r0, r4
   12628:	bl	10edc <strchr@plt>
   1262c:	cmp	r0, #0
   12630:	streq	r5, [sp, #20]
   12634:	b	124f4 <strspn@plt+0x1540>
   12638:	mov	r1, #69	; 0x45
   1263c:	mov	r0, r4
   12640:	bl	10edc <strchr@plt>
   12644:	subs	r7, r0, #0
   12648:	beq	125ec <strspn@plt+0x1638>
   1264c:	b	12580 <strspn@plt+0x15cc>
   12650:	cmp	r4, r5
   12654:	beq	126e8 <strspn@plt+0x1734>
   12658:	ldrb	r3, [r5, #-1]
   1265c:	sub	r3, r3, #48	; 0x30
   12660:	cmp	r3, #9
   12664:	movls	r3, #0
   12668:	movhi	r3, #1
   1266c:	b	12564 <strspn@plt+0x15b0>
   12670:	add	r3, r3, #1
   12674:	b	125d8 <strspn@plt+0x1624>
   12678:	mov	r0, sl
   1267c:	mov	r2, #10
   12680:	mov	r1, #0
   12684:	bl	10d50 <strtol@plt>
   12688:	subs	sl, r0, #0
   1268c:	ldr	r2, [sp, #20]
   12690:	blt	125a8 <strspn@plt+0x15f4>
   12694:	cmp	r2, sl
   12698:	mov	r0, r4
   1269c:	suble	r7, r2, r2
   126a0:	subgt	r7, r2, sl
   126a4:	str	r7, [sp, #20]
   126a8:	bl	10ed0 <strlen@plt>
   126ac:	ldr	r3, [sp, #16]
   126b0:	adds	r2, r5, #0
   126b4:	movne	r2, #1
   126b8:	cmp	r8, #0
   126bc:	moveq	r2, #0
   126c0:	cmp	r7, #0
   126c4:	movne	r2, #0
   126c8:	cmp	r2, #0
   126cc:	add	r3, r9, r3
   126d0:	sub	r3, r3, r0
   126d4:	bne	126f0 <strspn@plt+0x173c>
   126d8:	cmp	sl, r8
   126dc:	subls	sl, sl, sl
   126e0:	subhi	sl, sl, r8
   126e4:	b	125e4 <strspn@plt+0x1630>
   126e8:	mov	r3, #1
   126ec:	b	12564 <strspn@plt+0x15b0>
   126f0:	sub	r3, r3, #1
   126f4:	b	126d8 <strspn@plt+0x1724>
   126f8:	mov	r2, #5
   126fc:	movw	r1, #26060	; 0x65cc
   12700:	movt	r1, #1
   12704:	mov	r0, #0
   12708:	bl	10de0 <dcgettext@plt>
   1270c:	mov	r5, r0
   12710:	movw	r1, #26084	; 0x65e4
   12714:	movt	r1, #1
   12718:	mov	r0, #0
   1271c:	bl	14c6c <strspn@plt+0x3cb8>
   12720:	mov	r6, r0
   12724:	mov	r1, r4
   12728:	mov	r0, #1
   1272c:	bl	14c6c <strspn@plt+0x3cb8>
   12730:	mov	r1, #0
   12734:	mov	r3, r6
   12738:	str	r0, [sp]
   1273c:	mov	r2, r5
   12740:	mov	r0, r1
   12744:	bl	10e58 <error@plt>
   12748:	mov	r0, #1
   1274c:	bl	120b8 <strspn@plt+0x1104>
   12750:	mov	r2, #5
   12754:	movw	r1, #26024	; 0x65a8
   12758:	movt	r1, #1
   1275c:	bl	10de0 <dcgettext@plt>
   12760:	mov	r6, r0
   12764:	mov	r0, r4
   12768:	bl	14c7c <strspn@plt+0x3cc8>
   1276c:	mov	r3, r0
   12770:	mov	r2, r6
   12774:	mov	r0, r5
   12778:	mov	r1, r5
   1277c:	bl	10e58 <error@plt>
   12780:	mov	r0, #1
   12784:	bl	120b8 <strspn@plt+0x1104>
	...
   12790:	strd	r4, [sp, #-16]!
   12794:	mov	r4, r1
   12798:	mov	r5, r0
   1279c:	str	r6, [sp, #8]
   127a0:	str	lr, [sp, #12]
   127a4:	vpush	{d8}
   127a8:	sub	sp, sp, #8
   127ac:	mov	r1, sp
   127b0:	bl	10db0 <strtold@plt>
   127b4:	ldr	r3, [sp]
   127b8:	vmov.f64	d8, d0
   127bc:	ldrb	r3, [r3]
   127c0:	cmp	r3, #0
   127c4:	bne	127f0 <strspn@plt+0x183c>
   127c8:	cmp	r4, #0
   127cc:	vmov.f64	d0, d8
   127d0:	ldrne	r3, [sp]
   127d4:	strne	r3, [r4]
   127d8:	add	sp, sp, #8
   127dc:	vpop	{d8}
   127e0:	ldrd	r4, [sp]
   127e4:	ldr	r6, [sp, #8]
   127e8:	add	sp, sp, #12
   127ec:	pop	{pc}		; (ldr pc, [sp], #4)
   127f0:	bl	10ee8 <__errno_location@plt>
   127f4:	mov	r6, r0
   127f8:	add	r1, sp, #4
   127fc:	mov	r0, r5
   12800:	ldr	r5, [r6]
   12804:	bl	158b0 <strspn@plt+0x48fc>
   12808:	ldrd	r2, [sp]
   1280c:	cmp	r2, r3
   12810:	vmovcc.f64	d8, d0
   12814:	strcc	r3, [sp]
   12818:	strcs	r5, [r6]
   1281c:	b	127c8 <strspn@plt+0x1814>
   12820:	movw	r3, #29060	; 0x7184
   12824:	movt	r3, #2
   12828:	str	r0, [r3]
   1282c:	bx	lr
   12830:	movw	r3, #29060	; 0x7184
   12834:	movt	r3, #2
   12838:	strb	r0, [r3, #4]
   1283c:	bx	lr
   12840:	movw	r3, #29012	; 0x7154
   12844:	movt	r3, #2
   12848:	strd	r4, [sp, #-16]!
   1284c:	ldr	r0, [r3]
   12850:	str	r6, [sp, #8]
   12854:	str	lr, [sp, #12]
   12858:	sub	sp, sp, #8
   1285c:	bl	15978 <strspn@plt+0x49c4>
   12860:	cmp	r0, #0
   12864:	beq	12890 <strspn@plt+0x18dc>
   12868:	movw	r4, #29060	; 0x7184
   1286c:	movt	r4, #2
   12870:	ldrb	r6, [r4, #4]
   12874:	bl	10ee8 <__errno_location@plt>
   12878:	mov	r5, r0
   1287c:	cmp	r6, #0
   12880:	beq	128bc <strspn@plt+0x1908>
   12884:	ldr	r3, [r0]
   12888:	cmp	r3, #32
   1288c:	bne	128bc <strspn@plt+0x1908>
   12890:	movw	r3, #29008	; 0x7150
   12894:	movt	r3, #2
   12898:	ldr	r0, [r3]
   1289c:	bl	15978 <strspn@plt+0x49c4>
   128a0:	cmp	r0, #0
   128a4:	bne	12904 <strspn@plt+0x1950>
   128a8:	add	sp, sp, #8
   128ac:	ldrd	r4, [sp]
   128b0:	ldr	r6, [sp, #8]
   128b4:	add	sp, sp, #12
   128b8:	pop	{pc}		; (ldr pc, [sp], #4)
   128bc:	movw	r1, #24448	; 0x5f80
   128c0:	movt	r1, #1
   128c4:	mov	r2, #5
   128c8:	mov	r0, #0
   128cc:	bl	10de0 <dcgettext@plt>
   128d0:	mov	r6, r0
   128d4:	ldr	r0, [r4]
   128d8:	cmp	r0, #0
   128dc:	beq	12914 <strspn@plt+0x1960>
   128e0:	ldr	r4, [r5]
   128e4:	bl	14a90 <strspn@plt+0x3adc>
   128e8:	mov	r3, r0
   128ec:	movw	r2, #26668	; 0x682c
   128f0:	movt	r2, #1
   128f4:	mov	r0, #0
   128f8:	str	r6, [sp]
   128fc:	mov	r1, r4
   12900:	bl	10e58 <error@plt>
   12904:	movw	r3, #28924	; 0x70fc
   12908:	movt	r3, #2
   1290c:	ldr	r0, [r3]
   12910:	bl	10d8c <_exit@plt>
   12914:	mov	r3, r6
   12918:	movw	r2, #26672	; 0x6830
   1291c:	movt	r2, #1
   12920:	ldr	r1, [r5]
   12924:	bl	10e58 <error@plt>
   12928:	b	12904 <strspn@plt+0x1950>
   1292c:	strd	r4, [sp, #-12]!
   12930:	mov	r5, r0
   12934:	str	lr, [sp, #8]
   12938:	sub	sp, sp, #12
   1293c:	bl	10ee8 <__errno_location@plt>
   12940:	mov	r4, r0
   12944:	mov	r2, #0
   12948:	ldr	r3, [r4]
   1294c:	mov	r0, r5
   12950:	str	r2, [r4]
   12954:	str	r3, [sp]
   12958:	str	r3, [sp, #4]
   1295c:	bl	10d80 <free@plt>
   12960:	ldr	r3, [r4]
   12964:	add	r2, sp, #8
   12968:	clz	r3, r3
   1296c:	lsr	r3, r3, #5
   12970:	add	r3, r2, r3, lsl #2
   12974:	ldr	r3, [r3, #-8]
   12978:	str	r3, [r4]
   1297c:	add	sp, sp, #12
   12980:	ldrd	r4, [sp]
   12984:	add	sp, sp, #8
   12988:	pop	{pc}		; (ldr pc, [sp], #4)
   1298c:	strd	r4, [sp, #-16]!
   12990:	subs	r4, r0, #0
   12994:	str	r6, [sp, #8]
   12998:	str	lr, [sp, #12]
   1299c:	beq	12a34 <strspn@plt+0x1a80>
   129a0:	mov	r1, #47	; 0x2f
   129a4:	bl	10f60 <strrchr@plt>
   129a8:	subs	r5, r0, #0
   129ac:	beq	12a0c <strspn@plt+0x1a58>
   129b0:	add	r6, r5, #1
   129b4:	sub	r3, r6, r4
   129b8:	cmp	r3, #6
   129bc:	ble	12a0c <strspn@plt+0x1a58>
   129c0:	movw	r1, #26732	; 0x686c
   129c4:	movt	r1, #1
   129c8:	mov	r2, #7
   129cc:	sub	r0, r5, #6
   129d0:	bl	10f9c <strncmp@plt>
   129d4:	cmp	r0, #0
   129d8:	bne	12a0c <strspn@plt+0x1a58>
   129dc:	movw	r1, #26740	; 0x6874
   129e0:	movt	r1, #1
   129e4:	mov	r2, #3
   129e8:	mov	r0, r6
   129ec:	bl	10f9c <strncmp@plt>
   129f0:	cmp	r0, #0
   129f4:	movne	r4, r6
   129f8:	bne	12a0c <strspn@plt+0x1a58>
   129fc:	add	r4, r5, #4
   12a00:	movw	r3, #28992	; 0x7140
   12a04:	movt	r3, #2
   12a08:	str	r4, [r3]
   12a0c:	movw	r2, #29068	; 0x718c
   12a10:	movt	r2, #2
   12a14:	ldr	r6, [sp, #8]
   12a18:	movw	r3, #28996	; 0x7144
   12a1c:	movt	r3, #2
   12a20:	str	r4, [r2]
   12a24:	str	r4, [r3]
   12a28:	ldrd	r4, [sp]
   12a2c:	add	sp, sp, #12
   12a30:	pop	{pc}		; (ldr pc, [sp], #4)
   12a34:	movw	r3, #29008	; 0x7150
   12a38:	movt	r3, #2
   12a3c:	movw	r0, #26676	; 0x6834
   12a40:	movt	r0, #1
   12a44:	ldr	r3, [r3]
   12a48:	mov	r2, #55	; 0x37
   12a4c:	mov	r1, #1
   12a50:	bl	10e10 <fwrite@plt>
   12a54:	bl	10fa8 <abort@plt>
   12a58:	strd	r4, [sp, #-16]!
   12a5c:	mov	r4, #0
   12a60:	mov	r5, #0
   12a64:	cmp	r1, #10
   12a68:	str	r6, [sp, #8]
   12a6c:	strd	r4, [r0]
   12a70:	strd	r4, [r0, #8]
   12a74:	str	lr, [sp, #12]
   12a78:	strd	r4, [r0, #16]
   12a7c:	strd	r4, [r0, #24]
   12a80:	strd	r4, [r0, #32]
   12a84:	strd	r4, [r0, #40]	; 0x28
   12a88:	beq	12aa0 <strspn@plt+0x1aec>
   12a8c:	ldrd	r4, [sp]
   12a90:	str	r1, [r0]
   12a94:	ldr	r6, [sp, #8]
   12a98:	add	sp, sp, #12
   12a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   12aa0:	bl	10fa8 <abort@plt>
   12aa4:	mov	r2, #5
   12aa8:	strd	r4, [sp, #-16]!
   12aac:	mov	r5, r0
   12ab0:	str	r6, [sp, #8]
   12ab4:	mov	r6, r1
   12ab8:	mov	r1, r0
   12abc:	mov	r0, #0
   12ac0:	str	lr, [sp, #12]
   12ac4:	bl	10de0 <dcgettext@plt>
   12ac8:	cmp	r5, r0
   12acc:	mov	r4, r0
   12ad0:	beq	12ae8 <strspn@plt+0x1b34>
   12ad4:	mov	r0, r4
   12ad8:	ldrd	r4, [sp]
   12adc:	ldr	r6, [sp, #8]
   12ae0:	add	sp, sp, #12
   12ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ae8:	bl	15be4 <strspn@plt+0x4c30>
   12aec:	ldrb	r3, [r0]
   12af0:	bic	r3, r3, #32
   12af4:	cmp	r3, #85	; 0x55
   12af8:	bne	12b60 <strspn@plt+0x1bac>
   12afc:	ldrb	r3, [r0, #1]
   12b00:	bic	r3, r3, #32
   12b04:	cmp	r3, #84	; 0x54
   12b08:	bne	12be0 <strspn@plt+0x1c2c>
   12b0c:	ldrb	r3, [r0, #2]
   12b10:	bic	r3, r3, #32
   12b14:	cmp	r3, #70	; 0x46
   12b18:	bne	12be0 <strspn@plt+0x1c2c>
   12b1c:	ldrb	r3, [r0, #3]
   12b20:	cmp	r3, #45	; 0x2d
   12b24:	bne	12be0 <strspn@plt+0x1c2c>
   12b28:	ldrb	r3, [r0, #4]
   12b2c:	cmp	r3, #56	; 0x38
   12b30:	bne	12be0 <strspn@plt+0x1c2c>
   12b34:	ldrb	r3, [r0, #5]
   12b38:	cmp	r3, #0
   12b3c:	bne	12be0 <strspn@plt+0x1c2c>
   12b40:	ldrb	r2, [r4]
   12b44:	movw	r3, #26832	; 0x68d0
   12b48:	movt	r3, #1
   12b4c:	movw	r4, #26844	; 0x68dc
   12b50:	movt	r4, #1
   12b54:	cmp	r2, #96	; 0x60
   12b58:	movne	r4, r3
   12b5c:	b	12ad4 <strspn@plt+0x1b20>
   12b60:	cmp	r3, #71	; 0x47
   12b64:	bne	12be0 <strspn@plt+0x1c2c>
   12b68:	ldrb	r3, [r0, #1]
   12b6c:	bic	r3, r3, #32
   12b70:	cmp	r3, #66	; 0x42
   12b74:	bne	12be0 <strspn@plt+0x1c2c>
   12b78:	ldrb	r3, [r0, #2]
   12b7c:	cmp	r3, #49	; 0x31
   12b80:	bne	12be0 <strspn@plt+0x1c2c>
   12b84:	ldrb	r3, [r0, #3]
   12b88:	cmp	r3, #56	; 0x38
   12b8c:	bne	12be0 <strspn@plt+0x1c2c>
   12b90:	ldrb	r3, [r0, #4]
   12b94:	cmp	r3, #48	; 0x30
   12b98:	bne	12be0 <strspn@plt+0x1c2c>
   12b9c:	ldrb	r3, [r0, #5]
   12ba0:	cmp	r3, #51	; 0x33
   12ba4:	bne	12be0 <strspn@plt+0x1c2c>
   12ba8:	ldrb	r3, [r0, #6]
   12bac:	cmp	r3, #48	; 0x30
   12bb0:	bne	12be0 <strspn@plt+0x1c2c>
   12bb4:	ldrb	r3, [r0, #7]
   12bb8:	cmp	r3, #0
   12bbc:	bne	12be0 <strspn@plt+0x1c2c>
   12bc0:	ldrb	r2, [r4]
   12bc4:	movw	r3, #26836	; 0x68d4
   12bc8:	movt	r3, #1
   12bcc:	movw	r4, #26840	; 0x68d8
   12bd0:	movt	r4, #1
   12bd4:	cmp	r2, #96	; 0x60
   12bd8:	movne	r4, r3
   12bdc:	b	12ad4 <strspn@plt+0x1b20>
   12be0:	movw	r3, #26848	; 0x68e0
   12be4:	movt	r3, #1
   12be8:	cmp	r6, #9
   12bec:	movw	r4, #26828	; 0x68cc
   12bf0:	movt	r4, #1
   12bf4:	movne	r4, r3
   12bf8:	b	12ad4 <strspn@plt+0x1b20>
   12bfc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12c00:	strd	r6, [sp, #8]
   12c04:	strd	r8, [sp, #16]
   12c08:	strd	sl, [sp, #24]
   12c0c:	mov	fp, r0
   12c10:	mov	sl, r1
   12c14:	str	lr, [sp, #32]
   12c18:	sub	sp, sp, #116	; 0x74
   12c1c:	ldr	r8, [sp, #152]	; 0x98
   12c20:	str	r3, [sp, #28]
   12c24:	ldr	r3, [sp, #156]	; 0x9c
   12c28:	str	r2, [sp, #32]
   12c2c:	and	r4, r3, #2
   12c30:	ubfx	r3, r3, #1, #1
   12c34:	str	r3, [sp, #44]	; 0x2c
   12c38:	bl	10e28 <__ctype_get_mb_cur_max@plt>
   12c3c:	str	r0, [sp, #64]	; 0x40
   12c40:	cmp	r8, #10
   12c44:	ldrls	pc, [pc, r8, lsl #2]
   12c48:	b	143b8 <strspn@plt+0x3404>
   12c4c:	andeq	r3, r1, r0, asr r0
   12c50:	andeq	r3, r1, ip, ror #1
   12c54:	andeq	r3, r1, r8, asr #13
   12c58:	andeq	r3, r1, ip, lsl #2
   12c5c:			; <UNDEFINED> instruction: 0x00012fb4
   12c60:	andeq	r3, r1, r0
   12c64:	andeq	r3, r1, r0, lsl #1
   12c68:	strheq	r3, [r1], -ip
   12c6c:	andeq	r2, r1, r8, ror ip
   12c70:	andeq	r2, r1, r8, ror ip
   12c74:	andeq	r2, r1, r8, ror ip
   12c78:	cmp	r8, #10
   12c7c:	beq	12ca8 <strspn@plt+0x1cf4>
   12c80:	mov	r1, r8
   12c84:	movw	r0, #26852	; 0x68e4
   12c88:	movt	r0, #1
   12c8c:	bl	12aa4 <strspn@plt+0x1af0>
   12c90:	mov	r1, r8
   12c94:	str	r0, [sp, #164]	; 0xa4
   12c98:	movw	r0, #26848	; 0x68e0
   12c9c:	movt	r0, #1
   12ca0:	bl	12aa4 <strspn@plt+0x1af0>
   12ca4:	str	r0, [sp, #168]	; 0xa8
   12ca8:	cmp	r4, #0
   12cac:	movne	r4, #0
   12cb0:	beq	14094 <strspn@plt+0x30e0>
   12cb4:	mov	r3, #1
   12cb8:	mov	r5, #0
   12cbc:	ldr	r0, [sp, #168]	; 0xa8
   12cc0:	str	r3, [sp, #36]	; 0x24
   12cc4:	str	r3, [sp, #40]	; 0x28
   12cc8:	str	r5, [sp, #68]	; 0x44
   12ccc:	bl	10ed0 <strlen@plt>
   12cd0:	ldr	r3, [sp, #168]	; 0xa8
   12cd4:	str	r5, [sp, #48]	; 0x30
   12cd8:	str	r0, [sp, #56]	; 0x38
   12cdc:	str	r3, [sp, #60]	; 0x3c
   12ce0:	str	r5, [sp, #72]	; 0x48
   12ce4:	str	r8, [sp, #152]	; 0x98
   12ce8:	mov	r8, fp
   12cec:	mov	r9, #0
   12cf0:	ldr	fp, [sp, #152]	; 0x98
   12cf4:	ldr	r3, [sp, #28]
   12cf8:	cmn	r3, #1
   12cfc:	beq	1325c <strspn@plt+0x22a8>
   12d00:	ldr	r3, [sp, #28]
   12d04:	subs	r6, r3, r9
   12d08:	movne	r6, #1
   12d0c:	cmp	r6, #0
   12d10:	beq	13274 <strspn@plt+0x22c0>
   12d14:	ldr	r0, [sp, #32]
   12d18:	ldr	r7, [sp, #40]	; 0x28
   12d1c:	add	r3, r0, r9
   12d20:	cmp	fp, #2
   12d24:	moveq	r7, #0
   12d28:	andne	r7, r7, #1
   12d2c:	str	r3, [sp, #52]	; 0x34
   12d30:	cmp	r7, #0
   12d34:	beq	13710 <strspn@plt+0x275c>
   12d38:	ldr	r2, [sp, #56]	; 0x38
   12d3c:	cmp	r2, #0
   12d40:	beq	139ac <strspn@plt+0x29f8>
   12d44:	ldr	r1, [sp, #28]
   12d48:	cmp	r2, #1
   12d4c:	mov	r3, r2
   12d50:	movls	r3, #0
   12d54:	movhi	r3, #1
   12d58:	add	r5, r9, r2
   12d5c:	cmn	r1, #1
   12d60:	movne	r3, #0
   12d64:	cmp	r3, #0
   12d68:	beq	12d74 <strspn@plt+0x1dc0>
   12d6c:	bl	10ed0 <strlen@plt>
   12d70:	str	r0, [sp, #28]
   12d74:	ldr	r3, [sp, #28]
   12d78:	cmp	r5, r3
   12d7c:	bhi	139ac <strspn@plt+0x29f8>
   12d80:	ldr	r0, [sp, #52]	; 0x34
   12d84:	ldr	r2, [sp, #56]	; 0x38
   12d88:	ldr	r1, [sp, #60]	; 0x3c
   12d8c:	bl	10dc8 <memcmp@plt>
   12d90:	cmp	r0, #0
   12d94:	bne	139ac <strspn@plt+0x29f8>
   12d98:	ldr	r3, [sp, #44]	; 0x2c
   12d9c:	cmp	r3, #0
   12da0:	bne	142dc <strspn@plt+0x3328>
   12da4:	ldr	r3, [sp, #52]	; 0x34
   12da8:	ldrb	r5, [r3]
   12dac:	cmp	r5, #126	; 0x7e
   12db0:	ldrls	pc, [pc, r5, lsl #2]
   12db4:	b	1366c <strspn@plt+0x26b8>
   12db8:	andeq	r3, r1, r0, ror r5
   12dbc:	andeq	r3, r1, ip, ror #12
   12dc0:	andeq	r3, r1, ip, ror #12
   12dc4:	andeq	r3, r1, ip, ror #12
   12dc8:	andeq	r3, r1, ip, ror #12
   12dcc:	andeq	r3, r1, ip, ror #12
   12dd0:	andeq	r3, r1, ip, ror #12
   12dd4:	andeq	r3, r1, r4, asr #10
   12dd8:	andeq	r3, r1, ip, lsr r5
   12ddc:	andeq	r3, r1, r4, lsl #9
   12de0:	andeq	r3, r1, r0, lsr r5
   12de4:	andeq	r3, r1, ip, ror r4
   12de8:	andeq	r3, r1, ip, lsl #10
   12dec:	andeq	r3, r1, r8, asr r5
   12df0:	andeq	r3, r1, ip, ror #12
   12df4:	andeq	r3, r1, ip, ror #12
   12df8:	andeq	r3, r1, ip, ror #12
   12dfc:	andeq	r3, r1, ip, ror #12
   12e00:	andeq	r3, r1, ip, ror #12
   12e04:	andeq	r3, r1, ip, ror #12
   12e08:	andeq	r3, r1, ip, ror #12
   12e0c:	andeq	r3, r1, ip, ror #12
   12e10:	andeq	r3, r1, ip, ror #12
   12e14:	andeq	r3, r1, ip, ror #12
   12e18:	andeq	r3, r1, ip, ror #12
   12e1c:	andeq	r3, r1, ip, ror #12
   12e20:	andeq	r3, r1, ip, ror #12
   12e24:	andeq	r3, r1, ip, ror #12
   12e28:	andeq	r3, r1, ip, ror #12
   12e2c:	andeq	r3, r1, ip, ror #12
   12e30:	andeq	r3, r1, ip, ror #12
   12e34:	andeq	r3, r1, ip, ror #12
   12e38:	andeq	r3, r1, r8, asr #12
   12e3c:	andeq	r3, r1, r0, asr r5
   12e40:	andeq	r3, r1, r0, asr r5
   12e44:	andeq	r3, r1, ip, lsr #12
   12e48:	andeq	r3, r1, r0, asr r5
   12e4c:	andeq	r3, r1, r0, ror #12
   12e50:	andeq	r3, r1, r0, asr r5
   12e54:	andeq	r3, r1, ip, lsr #7
   12e58:	andeq	r3, r1, r0, asr r5
   12e5c:	andeq	r3, r1, r0, asr r5
   12e60:	andeq	r3, r1, r0, asr r5
   12e64:	andeq	r3, r1, r0, ror #12
   12e68:	andeq	r3, r1, r0, ror #12
   12e6c:	andeq	r3, r1, r0, ror #12
   12e70:	andeq	r3, r1, r0, ror #12
   12e74:	andeq	r3, r1, r0, ror #12
   12e78:	andeq	r3, r1, r0, ror #12
   12e7c:	andeq	r3, r1, r0, ror #12
   12e80:	andeq	r3, r1, r0, ror #12
   12e84:	andeq	r3, r1, r0, ror #12
   12e88:	andeq	r3, r1, r0, ror #12
   12e8c:	andeq	r3, r1, r0, ror #12
   12e90:	andeq	r3, r1, r0, ror #12
   12e94:	andeq	r3, r1, r0, ror #12
   12e98:	andeq	r3, r1, r0, ror #12
   12e9c:	andeq	r3, r1, r0, ror #12
   12ea0:	andeq	r3, r1, r0, ror #12
   12ea4:	andeq	r3, r1, r0, asr r5
   12ea8:	andeq	r3, r1, r0, asr r5
   12eac:	andeq	r3, r1, r0, asr r5
   12eb0:	andeq	r3, r1, r0, asr r5
   12eb4:	andeq	r3, r1, r0, lsl #7
   12eb8:	andeq	r3, r1, ip, ror #12
   12ebc:	andeq	r3, r1, r0, ror #12
   12ec0:	andeq	r3, r1, r0, ror #12
   12ec4:	andeq	r3, r1, r0, ror #12
   12ec8:	andeq	r3, r1, r0, ror #12
   12ecc:	andeq	r3, r1, r0, ror #12
   12ed0:	andeq	r3, r1, r0, ror #12
   12ed4:	andeq	r3, r1, r0, ror #12
   12ed8:	andeq	r3, r1, r0, ror #12
   12edc:	andeq	r3, r1, r0, ror #12
   12ee0:	andeq	r3, r1, r0, ror #12
   12ee4:	andeq	r3, r1, r0, ror #12
   12ee8:	andeq	r3, r1, r0, ror #12
   12eec:	andeq	r3, r1, r0, ror #12
   12ef0:	andeq	r3, r1, r0, ror #12
   12ef4:	andeq	r3, r1, r0, ror #12
   12ef8:	andeq	r3, r1, r0, ror #12
   12efc:	andeq	r3, r1, r0, ror #12
   12f00:	andeq	r3, r1, r0, ror #12
   12f04:	andeq	r3, r1, r0, ror #12
   12f08:	andeq	r3, r1, r0, ror #12
   12f0c:	andeq	r3, r1, r0, ror #12
   12f10:	andeq	r3, r1, r0, ror #12
   12f14:	andeq	r3, r1, r0, ror #12
   12f18:	andeq	r3, r1, r0, ror #12
   12f1c:	andeq	r3, r1, r0, ror #12
   12f20:	andeq	r3, r1, r0, ror #12
   12f24:	andeq	r3, r1, r0, asr r5
   12f28:	andeq	r3, r1, r8, lsr #6
   12f2c:	andeq	r3, r1, r0, ror #12
   12f30:	andeq	r3, r1, r0, asr r5
   12f34:	andeq	r3, r1, r0, ror #12
   12f38:	andeq	r3, r1, r0, asr r5
   12f3c:	andeq	r3, r1, r0, ror #12
   12f40:	andeq	r3, r1, r0, ror #12
   12f44:	andeq	r3, r1, r0, ror #12
   12f48:	andeq	r3, r1, r0, ror #12
   12f4c:	andeq	r3, r1, r0, ror #12
   12f50:	andeq	r3, r1, r0, ror #12
   12f54:	andeq	r3, r1, r0, ror #12
   12f58:	andeq	r3, r1, r0, ror #12
   12f5c:	andeq	r3, r1, r0, ror #12
   12f60:	andeq	r3, r1, r0, ror #12
   12f64:	andeq	r3, r1, r0, ror #12
   12f68:	andeq	r3, r1, r0, ror #12
   12f6c:	andeq	r3, r1, r0, ror #12
   12f70:	andeq	r3, r1, r0, ror #12
   12f74:	andeq	r3, r1, r0, ror #12
   12f78:	andeq	r3, r1, r0, ror #12
   12f7c:	andeq	r3, r1, r0, ror #12
   12f80:	andeq	r3, r1, r0, ror #12
   12f84:	andeq	r3, r1, r0, ror #12
   12f88:	andeq	r3, r1, r0, ror #12
   12f8c:	andeq	r3, r1, r0, ror #12
   12f90:	andeq	r3, r1, r0, ror #12
   12f94:	andeq	r3, r1, r0, ror #12
   12f98:	andeq	r3, r1, r0, ror #12
   12f9c:	andeq	r3, r1, r0, ror #12
   12fa0:	andeq	r3, r1, r0, ror #12
   12fa4:	andeq	r3, r1, ip, asr #2
   12fa8:	andeq	r3, r1, r0, asr r5
   12fac:	andeq	r3, r1, ip, asr #2
   12fb0:	andeq	r3, r1, ip, lsr #12
   12fb4:	cmp	r4, #0
   12fb8:	moveq	r3, #1
   12fbc:	streq	r3, [sp, #40]	; 0x28
   12fc0:	beq	136d4 <strspn@plt+0x2720>
   12fc4:	mov	r3, #0
   12fc8:	mov	r2, #1
   12fcc:	mov	r4, r3
   12fd0:	str	r2, [sp, #36]	; 0x24
   12fd4:	str	r2, [sp, #44]	; 0x2c
   12fd8:	str	r2, [sp, #56]	; 0x38
   12fdc:	str	r3, [sp, #68]	; 0x44
   12fe0:	movw	r3, #26848	; 0x68e0
   12fe4:	movt	r3, #1
   12fe8:	str	r4, [sp, #40]	; 0x28
   12fec:	mov	r8, #2
   12ff0:	str	r4, [sp, #48]	; 0x30
   12ff4:	str	r3, [sp, #60]	; 0x3c
   12ff8:	str	r4, [sp, #72]	; 0x48
   12ffc:	b	12ce4 <strspn@plt+0x1d30>
   13000:	cmp	r4, #0
   13004:	bne	14250 <strspn@plt+0x329c>
   13008:	cmp	sl, #0
   1300c:	beq	14010 <strspn@plt+0x305c>
   13010:	mov	r3, #34	; 0x22
   13014:	mov	r1, r4
   13018:	mov	r2, #1
   1301c:	strb	r3, [fp]
   13020:	movw	r3, #26828	; 0x68cc
   13024:	movt	r3, #1
   13028:	mov	r4, r2
   1302c:	str	r2, [sp, #36]	; 0x24
   13030:	str	r2, [sp, #40]	; 0x28
   13034:	str	r1, [sp, #44]	; 0x2c
   13038:	str	r1, [sp, #48]	; 0x30
   1303c:	str	r2, [sp, #56]	; 0x38
   13040:	str	r3, [sp, #60]	; 0x3c
   13044:	str	r1, [sp, #68]	; 0x44
   13048:	str	r1, [sp, #72]	; 0x48
   1304c:	b	12ce4 <strspn@plt+0x1d30>
   13050:	mov	r3, #0
   13054:	mov	r4, r8
   13058:	str	r3, [sp, #40]	; 0x28
   1305c:	str	r3, [sp, #44]	; 0x2c
   13060:	str	r3, [sp, #48]	; 0x30
   13064:	str	r8, [sp, #56]	; 0x38
   13068:	str	r3, [sp, #60]	; 0x3c
   1306c:	str	r3, [sp, #68]	; 0x44
   13070:	mov	r3, #1
   13074:	str	r3, [sp, #36]	; 0x24
   13078:	str	r8, [sp, #72]	; 0x48
   1307c:	b	12ce4 <strspn@plt+0x1d30>
   13080:	mov	r3, #1
   13084:	mov	r2, #0
   13088:	mov	r4, r2
   1308c:	mov	r8, #5
   13090:	str	r3, [sp, #36]	; 0x24
   13094:	str	r3, [sp, #40]	; 0x28
   13098:	str	r3, [sp, #44]	; 0x2c
   1309c:	str	r2, [sp, #48]	; 0x30
   130a0:	str	r3, [sp, #56]	; 0x38
   130a4:	movw	r3, #26828	; 0x68cc
   130a8:	movt	r3, #1
   130ac:	str	r3, [sp, #60]	; 0x3c
   130b0:	str	r2, [sp, #68]	; 0x44
   130b4:	str	r2, [sp, #72]	; 0x48
   130b8:	b	12ce4 <strspn@plt+0x1d30>
   130bc:	mov	r3, #0
   130c0:	mov	r2, #1
   130c4:	mov	r4, r3
   130c8:	str	r2, [sp, #36]	; 0x24
   130cc:	str	r2, [sp, #40]	; 0x28
   130d0:	str	r3, [sp, #44]	; 0x2c
   130d4:	str	r3, [sp, #48]	; 0x30
   130d8:	str	r3, [sp, #56]	; 0x38
   130dc:	str	r3, [sp, #60]	; 0x3c
   130e0:	str	r3, [sp, #68]	; 0x44
   130e4:	str	r3, [sp, #72]	; 0x48
   130e8:	b	12ce4 <strspn@plt+0x1d30>
   130ec:	mov	r2, #1
   130f0:	mov	r3, #0
   130f4:	mov	r4, r3
   130f8:	str	r2, [sp, #36]	; 0x24
   130fc:	str	r2, [sp, #44]	; 0x2c
   13100:	str	r8, [sp, #56]	; 0x38
   13104:	str	r3, [sp, #68]	; 0x44
   13108:	b	12fe0 <strspn@plt+0x202c>
   1310c:	mov	r3, #1
   13110:	mov	r2, #0
   13114:	mov	r4, r2
   13118:	mov	r8, #2
   1311c:	str	r3, [sp, #36]	; 0x24
   13120:	str	r3, [sp, #40]	; 0x28
   13124:	str	r3, [sp, #44]	; 0x2c
   13128:	str	r2, [sp, #48]	; 0x30
   1312c:	str	r3, [sp, #56]	; 0x38
   13130:	movw	r3, #26848	; 0x68e0
   13134:	movt	r3, #1
   13138:	str	r3, [sp, #60]	; 0x3c
   1313c:	str	r2, [sp, #68]	; 0x44
   13140:	str	r2, [sp, #72]	; 0x48
   13144:	b	12ce4 <strspn@plt+0x1d30>
   13148:	mov	r7, #0
   1314c:	ldr	r3, [sp, #28]
   13150:	cmn	r3, #1
   13154:	beq	13c2c <strspn@plt+0x2c78>
   13158:	ldr	r3, [sp, #28]
   1315c:	subs	r2, r3, #1
   13160:	movne	r2, #1
   13164:	sub	r3, fp, #2
   13168:	cmp	r2, #0
   1316c:	clz	r3, r3
   13170:	lsr	r3, r3, #5
   13174:	bne	13180 <strspn@plt+0x21cc>
   13178:	cmp	r9, #0
   1317c:	beq	1398c <strspn@plt+0x29d8>
   13180:	mov	r6, #0
   13184:	ldr	r2, [sp, #40]	; 0x28
   13188:	eor	r2, r2, #1
   1318c:	orrs	r3, r3, r2
   13190:	bne	13368 <strspn@plt+0x23b4>
   13194:	ldr	r2, [sp, #160]	; 0xa0
   13198:	cmp	r2, #0
   1319c:	beq	131bc <strspn@plt+0x2208>
   131a0:	ldr	r0, [sp, #160]	; 0xa0
   131a4:	ubfx	r1, r5, #5, #8
   131a8:	and	r2, r5, #31
   131ac:	ldr	r1, [r0, r1, lsl #2]
   131b0:	lsr	r2, r1, r2
   131b4:	tst	r2, #1
   131b8:	bne	131c4 <strspn@plt+0x2210>
   131bc:	cmp	r7, #0
   131c0:	beq	13434 <strspn@plt+0x2480>
   131c4:	ldr	r2, [sp, #44]	; 0x2c
   131c8:	sub	r3, fp, #2
   131cc:	clz	r3, r3
   131d0:	lsr	r3, r3, #5
   131d4:	cmp	r2, #0
   131d8:	bne	13f80 <strspn@plt+0x2fcc>
   131dc:	ldr	r2, [sp, #48]	; 0x30
   131e0:	eor	r2, r2, #1
   131e4:	ands	r3, r3, r2
   131e8:	beq	13220 <strspn@plt+0x226c>
   131ec:	cmp	sl, r4
   131f0:	str	r3, [sp, #48]	; 0x30
   131f4:	movhi	r2, #39	; 0x27
   131f8:	strbhi	r2, [r8, r4]
   131fc:	add	r2, r4, #1
   13200:	cmp	sl, r2
   13204:	movhi	r1, #36	; 0x24
   13208:	strbhi	r1, [r8, r2]
   1320c:	add	r2, r4, #2
   13210:	add	r4, r4, #3
   13214:	cmp	sl, r2
   13218:	movhi	r1, #39	; 0x27
   1321c:	strbhi	r1, [r8, r2]
   13220:	cmp	r4, sl
   13224:	add	r9, r9, #1
   13228:	movcc	r3, #92	; 0x5c
   1322c:	strbcc	r3, [r8, r4]
   13230:	add	r4, r4, #1
   13234:	cmp	r4, sl
   13238:	ldr	r3, [sp, #36]	; 0x24
   1323c:	strbcc	r5, [r8, r4]
   13240:	cmp	r6, #0
   13244:	add	r4, r4, #1
   13248:	moveq	r3, #0
   1324c:	str	r3, [sp, #36]	; 0x24
   13250:	ldr	r3, [sp, #28]
   13254:	cmn	r3, #1
   13258:	bne	12d00 <strspn@plt+0x1d4c>
   1325c:	ldr	r3, [sp, #32]
   13260:	ldrb	r6, [r3, r9]
   13264:	adds	r6, r6, #0
   13268:	movne	r6, #1
   1326c:	cmp	r6, #0
   13270:	bne	12d14 <strspn@plt+0x1d60>
   13274:	str	fp, [sp, #152]	; 0x98
   13278:	mov	fp, r8
   1327c:	cmp	r4, #0
   13280:	ldr	r1, [sp, #44]	; 0x2c
   13284:	movne	r3, #0
   13288:	ldr	r8, [sp, #152]	; 0x98
   1328c:	sub	r2, r8, #2
   13290:	clz	r2, r2
   13294:	lsr	r2, r2, #5
   13298:	andeq	r3, r2, r1
   1329c:	cmp	r3, #0
   132a0:	bne	1435c <strspn@plt+0x33a8>
   132a4:	eor	r3, r1, #1
   132a8:	ands	r2, r2, r3
   132ac:	beq	14288 <strspn@plt+0x32d4>
   132b0:	ldr	r3, [sp, #68]	; 0x44
   132b4:	cmp	r3, #0
   132b8:	beq	1428c <strspn@plt+0x32d8>
   132bc:	ldr	r3, [sp, #36]	; 0x24
   132c0:	cmp	r3, #0
   132c4:	bne	14318 <strspn@plt+0x3364>
   132c8:	ldr	r3, [sp, #72]	; 0x48
   132cc:	adds	r3, r3, #0
   132d0:	movne	r3, #1
   132d4:	cmp	sl, #0
   132d8:	movne	r3, #0
   132dc:	cmp	r3, #0
   132e0:	ldreq	r2, [sp, #68]	; 0x44
   132e4:	beq	1428c <strspn@plt+0x32d8>
   132e8:	ldr	r2, [sp, #72]	; 0x48
   132ec:	str	r3, [sp, #68]	; 0x44
   132f0:	movw	r3, #26848	; 0x68e0
   132f4:	movt	r3, #1
   132f8:	mov	r1, #39	; 0x27
   132fc:	mov	r4, #1
   13300:	ldr	sl, [sp, #72]	; 0x48
   13304:	mov	r8, #2
   13308:	str	r3, [sp, #60]	; 0x3c
   1330c:	mov	r3, #0
   13310:	strb	r1, [fp]
   13314:	str	r3, [sp, #44]	; 0x2c
   13318:	str	r4, [sp, #56]	; 0x38
   1331c:	str	r2, [sp, #72]	; 0x48
   13320:	b	12ce4 <strspn@plt+0x1d30>
   13324:	mov	r7, #0
   13328:	cmp	fp, #2
   1332c:	beq	13c0c <strspn@plt+0x2c58>
   13330:	ldr	r2, [sp, #40]	; 0x28
   13334:	ldr	r3, [sp, #56]	; 0x38
   13338:	ldr	r1, [sp, #44]	; 0x2c
   1333c:	cmp	r3, #0
   13340:	moveq	r3, #0
   13344:	andne	r3, r2, r1
   13348:	cmp	r3, #0
   1334c:	moveq	r5, #92	; 0x5c
   13350:	moveq	r3, r5
   13354:	bne	13c18 <strspn@plt+0x2c64>
   13358:	ldr	r2, [sp, #40]	; 0x28
   1335c:	cmp	r2, #0
   13360:	bne	14054 <strspn@plt+0x30a0>
   13364:	mov	r6, #0
   13368:	ldr	r3, [sp, #44]	; 0x2c
   1336c:	cmp	r3, #0
   13370:	beq	13c04 <strspn@plt+0x2c50>
   13374:	mov	r3, #0
   13378:	b	13194 <strspn@plt+0x21e0>
   1337c:	mov	r7, #0
   13380:	cmp	fp, #2
   13384:	beq	13c7c <strspn@plt+0x2cc8>
   13388:	cmp	fp, #5
   1338c:	beq	13c40 <strspn@plt+0x2c8c>
   13390:	sub	r3, fp, #2
   13394:	mov	r6, #0
   13398:	clz	r3, r3
   1339c:	mov	r5, #63	; 0x3f
   133a0:	lsr	r3, r3, #5
   133a4:	b	13184 <strspn@plt+0x21d0>
   133a8:	mov	r7, #0
   133ac:	cmp	fp, #2
   133b0:	movne	r3, #0
   133b4:	movne	r5, #39	; 0x27
   133b8:	strne	r6, [sp, #68]	; 0x44
   133bc:	bne	13184 <strspn@plt+0x21d0>
   133c0:	ldr	r3, [sp, #44]	; 0x2c
   133c4:	cmp	r3, #0
   133c8:	bne	14084 <strspn@plt+0x30d0>
   133cc:	ldr	r3, [sp, #72]	; 0x48
   133d0:	cmp	sl, #0
   133d4:	clz	r3, r3
   133d8:	lsr	r3, r3, #5
   133dc:	moveq	r3, #0
   133e0:	cmp	r3, #0
   133e4:	bne	13fb0 <strspn@plt+0x2ffc>
   133e8:	cmp	sl, r4
   133ec:	movhi	r3, #39	; 0x27
   133f0:	strbhi	r3, [r8, r4]
   133f4:	add	r3, r4, #1
   133f8:	cmp	sl, r3
   133fc:	movhi	r2, #92	; 0x5c
   13400:	strbhi	r2, [r8, r3]
   13404:	add	r3, r4, #2
   13408:	cmp	sl, r3
   1340c:	bls	13418 <strspn@plt+0x2464>
   13410:	mov	r2, #39	; 0x27
   13414:	strb	r2, [r8, r3]
   13418:	mov	r3, #0
   1341c:	cmp	r7, #0
   13420:	add	r4, r4, #3
   13424:	mov	r5, #39	; 0x27
   13428:	str	r3, [sp, #48]	; 0x30
   1342c:	str	r6, [sp, #68]	; 0x44
   13430:	bne	131c4 <strspn@plt+0x2210>
   13434:	ldr	r2, [sp, #48]	; 0x30
   13438:	eor	r3, r3, #1
   1343c:	add	r9, r9, #1
   13440:	and	r3, r3, r2
   13444:	uxtb	r3, r3
   13448:	cmp	r3, #0
   1344c:	beq	13234 <strspn@plt+0x2280>
   13450:	cmp	sl, r4
   13454:	movhi	r3, #39	; 0x27
   13458:	strbhi	r3, [r8, r4]
   1345c:	add	r3, r4, #1
   13460:	add	r4, r4, #2
   13464:	cmp	sl, r3
   13468:	movhi	r2, #39	; 0x27
   1346c:	strbhi	r2, [r8, r3]
   13470:	mov	r3, #0
   13474:	str	r3, [sp, #48]	; 0x30
   13478:	b	13234 <strspn@plt+0x2280>
   1347c:	mov	r3, #118	; 0x76
   13480:	b	13358 <strspn@plt+0x23a4>
   13484:	mov	r3, #116	; 0x74
   13488:	ldr	r2, [sp, #44]	; 0x2c
   1348c:	cmp	fp, #2
   13490:	movne	r2, #0
   13494:	andeq	r2, r2, #1
   13498:	cmp	r2, #0
   1349c:	beq	13358 <strspn@plt+0x23a4>
   134a0:	mov	fp, r8
   134a4:	mov	r8, #2
   134a8:	ldr	r3, [sp, #40]	; 0x28
   134ac:	cmp	r3, #0
   134b0:	movne	r8, #4
   134b4:	mov	lr, #0
   134b8:	mov	r0, fp
   134bc:	ldr	r2, [sp, #32]
   134c0:	ldr	r3, [sp, #156]	; 0x9c
   134c4:	ldr	r1, [sp, #164]	; 0xa4
   134c8:	bic	ip, r3, #2
   134cc:	ldr	r3, [sp, #28]
   134d0:	stm	sp, {r8, ip, lr}
   134d4:	ldr	ip, [sp, #168]	; 0xa8
   134d8:	str	r1, [sp, #12]
   134dc:	mov	r1, sl
   134e0:	str	ip, [sp, #16]
   134e4:	bl	12bfc <strspn@plt+0x1c48>
   134e8:	mov	r4, r0
   134ec:	mov	r0, r4
   134f0:	add	sp, sp, #116	; 0x74
   134f4:	ldrd	r4, [sp]
   134f8:	ldrd	r6, [sp, #8]
   134fc:	ldrd	r8, [sp, #16]
   13500:	ldrd	sl, [sp, #24]
   13504:	add	sp, sp, #32
   13508:	pop	{pc}		; (ldr pc, [sp], #4)
   1350c:	mov	r5, #102	; 0x66
   13510:	ldr	r2, [sp, #44]	; 0x2c
   13514:	sub	r3, fp, #2
   13518:	clz	r3, r3
   1351c:	lsr	r3, r3, #5
   13520:	cmp	r2, #0
   13524:	bne	13f80 <strspn@plt+0x2fcc>
   13528:	mov	r6, r2
   1352c:	b	13220 <strspn@plt+0x226c>
   13530:	mov	r5, #110	; 0x6e
   13534:	mov	r6, #0
   13538:	b	131c4 <strspn@plt+0x2210>
   1353c:	mov	r5, #98	; 0x62
   13540:	b	13510 <strspn@plt+0x255c>
   13544:	mov	r5, #97	; 0x61
   13548:	b	13510 <strspn@plt+0x255c>
   1354c:	mov	r7, #0
   13550:	mov	r6, #0
   13554:	b	13374 <strspn@plt+0x23c0>
   13558:	mov	r5, #114	; 0x72
   1355c:	b	13534 <strspn@plt+0x2580>
   13560:	ldr	r3, [sp, #44]	; 0x2c
   13564:	cmp	r3, #0
   13568:	bne	142f8 <strspn@plt+0x3344>
   1356c:	mov	r7, r3
   13570:	ldr	r3, [sp, #48]	; 0x30
   13574:	sub	r2, fp, #2
   13578:	clz	r2, r2
   1357c:	lsr	r2, r2, #5
   13580:	eor	r3, r3, #1
   13584:	ands	r3, r2, r3
   13588:	beq	13f9c <strspn@plt+0x2fe8>
   1358c:	cmp	sl, r4
   13590:	movhi	r1, #39	; 0x27
   13594:	strbhi	r1, [r8, r4]
   13598:	add	r1, r4, #1
   1359c:	cmp	sl, r1
   135a0:	movhi	r0, #36	; 0x24
   135a4:	strbhi	r0, [r8, r1]
   135a8:	add	r1, r4, #2
   135ac:	cmp	sl, r1
   135b0:	movhi	r0, #39	; 0x27
   135b4:	strbhi	r0, [r8, r1]
   135b8:	add	r1, r4, #3
   135bc:	cmp	sl, r1
   135c0:	bls	13ff4 <strspn@plt+0x3040>
   135c4:	mov	r4, r1
   135c8:	mov	r1, #92	; 0x5c
   135cc:	mov	r0, r4
   135d0:	str	r3, [sp, #48]	; 0x30
   135d4:	strb	r1, [r8, r4]
   135d8:	cmp	fp, #2
   135dc:	add	r4, r4, #1
   135e0:	beq	14044 <strspn@plt+0x3090>
   135e4:	ldr	r1, [sp, #28]
   135e8:	add	r3, r9, #1
   135ec:	cmp	r3, r1
   135f0:	bcs	13608 <strspn@plt+0x2654>
   135f4:	ldr	r1, [sp, #32]
   135f8:	ldrb	r3, [r1, r3]
   135fc:	sub	r3, r3, #48	; 0x30
   13600:	cmp	r3, #9
   13604:	bls	1405c <strspn@plt+0x30a8>
   13608:	mov	r5, #48	; 0x30
   1360c:	ldr	r3, [sp, #40]	; 0x28
   13610:	eor	r3, r3, #1
   13614:	orrs	r2, r2, r3
   13618:	mov	r3, r6
   1361c:	moveq	r6, r2
   13620:	beq	13194 <strspn@plt+0x21e0>
   13624:	mov	r6, #0
   13628:	b	131bc <strspn@plt+0x2208>
   1362c:	cmp	r9, #0
   13630:	mov	r2, r7
   13634:	bne	13bd4 <strspn@plt+0x2c20>
   13638:	mov	r6, r7
   1363c:	mov	r3, r9
   13640:	mov	r7, r2
   13644:	b	13184 <strspn@plt+0x21d0>
   13648:	mov	r2, r7
   1364c:	mov	r6, r7
   13650:	mov	r3, #0
   13654:	mov	r7, r2
   13658:	mov	r5, #32
   1365c:	b	13184 <strspn@plt+0x21d0>
   13660:	mov	r6, r7
   13664:	b	13374 <strspn@plt+0x23c0>
   13668:	mov	r7, #0
   1366c:	ldr	r3, [sp, #64]	; 0x40
   13670:	cmp	r3, #1
   13674:	bne	13c94 <strspn@plt+0x2ce0>
   13678:	bl	10eb8 <__ctype_b_loc@plt>
   1367c:	ldr	r2, [r0]
   13680:	sxth	r3, r5
   13684:	lsl	r3, r3, #1
   13688:	ldr	r1, [sp, #64]	; 0x40
   1368c:	ldrh	r3, [r2, r3]
   13690:	mov	ip, r1
   13694:	and	r3, r3, #16384	; 0x4000
   13698:	cmp	r3, #0
   1369c:	ldr	r3, [sp, #40]	; 0x28
   136a0:	movne	r6, #1
   136a4:	moveq	r6, #0
   136a8:	movne	r2, #0
   136ac:	andeq	r2, r3, #1
   136b0:	cmp	r2, #0
   136b4:	bne	13fdc <strspn@plt+0x3028>
   136b8:	sub	r3, fp, #2
   136bc:	clz	r3, r3
   136c0:	lsr	r3, r3, #5
   136c4:	b	13184 <strspn@plt+0x21d0>
   136c8:	cmp	r4, #0
   136cc:	bne	1436c <strspn@plt+0x33b8>
   136d0:	str	r4, [sp, #40]	; 0x28
   136d4:	cmp	sl, #0
   136d8:	bne	1439c <strspn@plt+0x33e8>
   136dc:	mov	r3, #1
   136e0:	movw	r2, #26848	; 0x68e0
   136e4:	movt	r2, #1
   136e8:	mov	r4, r3
   136ec:	mov	r8, #2
   136f0:	str	r3, [sp, #36]	; 0x24
   136f4:	str	sl, [sp, #44]	; 0x2c
   136f8:	str	sl, [sp, #48]	; 0x30
   136fc:	str	r3, [sp, #56]	; 0x38
   13700:	str	r2, [sp, #60]	; 0x3c
   13704:	str	sl, [sp, #68]	; 0x44
   13708:	str	sl, [sp, #72]	; 0x48
   1370c:	b	12ce4 <strspn@plt+0x1d30>
   13710:	ldr	r3, [sp, #32]
   13714:	ldrb	r5, [r3, r9]
   13718:	cmp	r5, #126	; 0x7e
   1371c:	ldrls	pc, [pc, r5, lsl #2]
   13720:	b	1366c <strspn@plt+0x26b8>
   13724:	andeq	r3, r1, r8, asr #18
   13728:	andeq	r3, r1, ip, ror #12
   1372c:	andeq	r3, r1, ip, ror #12
   13730:	andeq	r3, r1, ip, ror #12
   13734:	andeq	r3, r1, ip, ror #12
   13738:	andeq	r3, r1, ip, ror #12
   1373c:	andeq	r3, r1, ip, ror #12
   13740:	andeq	r3, r1, r0, asr #18
   13744:	andeq	r3, r1, r8, lsr r9
   13748:	andeq	r3, r1, r4, lsl #9
   1374c:	andeq	r3, r1, r0, lsr r9
   13750:	andeq	r3, r1, ip, ror r4
   13754:	andeq	r3, r1, r8, lsr #18
   13758:	andeq	r3, r1, r0, lsr #18
   1375c:	andeq	r3, r1, ip, ror #12
   13760:	andeq	r3, r1, ip, ror #12
   13764:	andeq	r3, r1, ip, ror #12
   13768:	andeq	r3, r1, ip, ror #12
   1376c:	andeq	r3, r1, ip, ror #12
   13770:	andeq	r3, r1, ip, ror #12
   13774:	andeq	r3, r1, ip, ror #12
   13778:	andeq	r3, r1, ip, ror #12
   1377c:	andeq	r3, r1, ip, ror #12
   13780:	andeq	r3, r1, ip, ror #12
   13784:	andeq	r3, r1, ip, ror #12
   13788:	andeq	r3, r1, ip, ror #12
   1378c:	andeq	r3, r1, ip, ror #12
   13790:	andeq	r3, r1, ip, ror #12
   13794:	andeq	r3, r1, ip, ror #12
   13798:	andeq	r3, r1, ip, ror #12
   1379c:	andeq	r3, r1, ip, ror #12
   137a0:	andeq	r3, r1, ip, ror #12
   137a4:	muleq	r1, ip, r9
   137a8:	andeq	r3, r1, ip, ror r9
   137ac:	andeq	r3, r1, ip, ror r9
   137b0:	andeq	r3, r1, ip, ror #18
   137b4:	andeq	r3, r1, ip, ror r9
   137b8:			; <UNDEFINED> instruction: 0x000136b8
   137bc:	andeq	r3, r1, ip, ror r9
   137c0:	andeq	r3, r1, ip, lsr #7
   137c4:	andeq	r3, r1, ip, ror r9
   137c8:	andeq	r3, r1, ip, ror r9
   137cc:	andeq	r3, r1, ip, ror r9
   137d0:			; <UNDEFINED> instruction: 0x000136b8
   137d4:			; <UNDEFINED> instruction: 0x000136b8
   137d8:			; <UNDEFINED> instruction: 0x000136b8
   137dc:			; <UNDEFINED> instruction: 0x000136b8
   137e0:			; <UNDEFINED> instruction: 0x000136b8
   137e4:			; <UNDEFINED> instruction: 0x000136b8
   137e8:			; <UNDEFINED> instruction: 0x000136b8
   137ec:			; <UNDEFINED> instruction: 0x000136b8
   137f0:			; <UNDEFINED> instruction: 0x000136b8
   137f4:			; <UNDEFINED> instruction: 0x000136b8
   137f8:			; <UNDEFINED> instruction: 0x000136b8
   137fc:			; <UNDEFINED> instruction: 0x000136b8
   13800:			; <UNDEFINED> instruction: 0x000136b8
   13804:			; <UNDEFINED> instruction: 0x000136b8
   13808:			; <UNDEFINED> instruction: 0x000136b8
   1380c:			; <UNDEFINED> instruction: 0x000136b8
   13810:	andeq	r3, r1, ip, ror r9
   13814:	andeq	r3, r1, ip, ror r9
   13818:	andeq	r3, r1, ip, ror r9
   1381c:	andeq	r3, r1, ip, ror r9
   13820:	andeq	r3, r1, r0, lsl #7
   13824:	andeq	r3, r1, ip, ror #12
   13828:			; <UNDEFINED> instruction: 0x000136b8
   1382c:			; <UNDEFINED> instruction: 0x000136b8
   13830:			; <UNDEFINED> instruction: 0x000136b8
   13834:			; <UNDEFINED> instruction: 0x000136b8
   13838:			; <UNDEFINED> instruction: 0x000136b8
   1383c:			; <UNDEFINED> instruction: 0x000136b8
   13840:			; <UNDEFINED> instruction: 0x000136b8
   13844:			; <UNDEFINED> instruction: 0x000136b8
   13848:			; <UNDEFINED> instruction: 0x000136b8
   1384c:			; <UNDEFINED> instruction: 0x000136b8
   13850:			; <UNDEFINED> instruction: 0x000136b8
   13854:			; <UNDEFINED> instruction: 0x000136b8
   13858:			; <UNDEFINED> instruction: 0x000136b8
   1385c:			; <UNDEFINED> instruction: 0x000136b8
   13860:			; <UNDEFINED> instruction: 0x000136b8
   13864:			; <UNDEFINED> instruction: 0x000136b8
   13868:			; <UNDEFINED> instruction: 0x000136b8
   1386c:			; <UNDEFINED> instruction: 0x000136b8
   13870:			; <UNDEFINED> instruction: 0x000136b8
   13874:			; <UNDEFINED> instruction: 0x000136b8
   13878:			; <UNDEFINED> instruction: 0x000136b8
   1387c:			; <UNDEFINED> instruction: 0x000136b8
   13880:			; <UNDEFINED> instruction: 0x000136b8
   13884:			; <UNDEFINED> instruction: 0x000136b8
   13888:			; <UNDEFINED> instruction: 0x000136b8
   1388c:			; <UNDEFINED> instruction: 0x000136b8
   13890:	andeq	r3, r1, ip, ror r9
   13894:	andeq	r3, r1, r8, lsr #6
   13898:			; <UNDEFINED> instruction: 0x000136b8
   1389c:	andeq	r3, r1, ip, ror r9
   138a0:			; <UNDEFINED> instruction: 0x000136b8
   138a4:	andeq	r3, r1, ip, ror r9
   138a8:			; <UNDEFINED> instruction: 0x000136b8
   138ac:			; <UNDEFINED> instruction: 0x000136b8
   138b0:			; <UNDEFINED> instruction: 0x000136b8
   138b4:			; <UNDEFINED> instruction: 0x000136b8
   138b8:			; <UNDEFINED> instruction: 0x000136b8
   138bc:			; <UNDEFINED> instruction: 0x000136b8
   138c0:			; <UNDEFINED> instruction: 0x000136b8
   138c4:			; <UNDEFINED> instruction: 0x000136b8
   138c8:			; <UNDEFINED> instruction: 0x000136b8
   138cc:			; <UNDEFINED> instruction: 0x000136b8
   138d0:			; <UNDEFINED> instruction: 0x000136b8
   138d4:			; <UNDEFINED> instruction: 0x000136b8
   138d8:			; <UNDEFINED> instruction: 0x000136b8
   138dc:			; <UNDEFINED> instruction: 0x000136b8
   138e0:			; <UNDEFINED> instruction: 0x000136b8
   138e4:			; <UNDEFINED> instruction: 0x000136b8
   138e8:			; <UNDEFINED> instruction: 0x000136b8
   138ec:			; <UNDEFINED> instruction: 0x000136b8
   138f0:			; <UNDEFINED> instruction: 0x000136b8
   138f4:			; <UNDEFINED> instruction: 0x000136b8
   138f8:			; <UNDEFINED> instruction: 0x000136b8
   138fc:			; <UNDEFINED> instruction: 0x000136b8
   13900:			; <UNDEFINED> instruction: 0x000136b8
   13904:			; <UNDEFINED> instruction: 0x000136b8
   13908:			; <UNDEFINED> instruction: 0x000136b8
   1390c:			; <UNDEFINED> instruction: 0x000136b8
   13910:	andeq	r3, r1, ip, asr #2
   13914:	andeq	r3, r1, ip, ror r9
   13918:	andeq	r3, r1, ip, asr #2
   1391c:	andeq	r3, r1, ip, ror #18
   13920:	mov	r3, #114	; 0x72
   13924:	b	13488 <strspn@plt+0x24d4>
   13928:	mov	r3, #102	; 0x66
   1392c:	b	13358 <strspn@plt+0x23a4>
   13930:	mov	r3, #110	; 0x6e
   13934:	b	13488 <strspn@plt+0x24d4>
   13938:	mov	r3, #98	; 0x62
   1393c:	b	13358 <strspn@plt+0x23a4>
   13940:	mov	r3, #97	; 0x61
   13944:	b	13358 <strspn@plt+0x23a4>
   13948:	ldr	r3, [sp, #40]	; 0x28
   1394c:	cmp	r3, #0
   13950:	bne	13560 <strspn@plt+0x25ac>
   13954:	ldr	r3, [sp, #156]	; 0x9c
   13958:	tst	r3, #1
   1395c:	addne	r9, r9, #1
   13960:	bne	12cf4 <strspn@plt+0x1d40>
   13964:	ldr	r7, [sp, #40]	; 0x28
   13968:	b	13364 <strspn@plt+0x23b0>
   1396c:	sub	r3, fp, #2
   13970:	clz	r3, r3
   13974:	lsr	r3, r3, #5
   13978:	b	13178 <strspn@plt+0x21c4>
   1397c:	sub	r3, fp, #2
   13980:	mov	r6, #0
   13984:	clz	r3, r3
   13988:	lsr	r3, r3, #5
   1398c:	ldr	r2, [sp, #44]	; 0x2c
   13990:	tst	r2, r3
   13994:	beq	13184 <strspn@plt+0x21d0>
   13998:	b	134a0 <strspn@plt+0x24ec>
   1399c:	sub	r3, fp, #2
   139a0:	clz	r3, r3
   139a4:	lsr	r3, r3, #5
   139a8:	b	1398c <strspn@plt+0x29d8>
   139ac:	ldr	r3, [sp, #52]	; 0x34
   139b0:	ldrb	r5, [r3]
   139b4:	cmp	r5, #126	; 0x7e
   139b8:	ldrls	pc, [pc, r5, lsl #2]
   139bc:	b	13668 <strspn@plt+0x26b4>
   139c0:	andeq	r3, r1, r0, ror #10
   139c4:	andeq	r3, r1, r8, ror #12
   139c8:	andeq	r3, r1, r8, ror #12
   139cc:	andeq	r3, r1, r8, ror #12
   139d0:	andeq	r3, r1, r8, ror #12
   139d4:	andeq	r3, r1, r8, ror #12
   139d8:	andeq	r3, r1, r8, ror #12
   139dc:	andeq	r3, r1, r4, asr #10
   139e0:	andeq	r3, r1, ip, lsr r5
   139e4:	strdeq	r3, [r1], -r8
   139e8:	andeq	r3, r1, r0, lsr r5
   139ec:	andeq	r3, r1, ip, ror #23
   139f0:	andeq	r3, r1, ip, lsl #10
   139f4:	andeq	r3, r1, r8, asr r5
   139f8:	andeq	r3, r1, r8, ror #12
   139fc:	andeq	r3, r1, r8, ror #12
   13a00:	andeq	r3, r1, r8, ror #12
   13a04:	andeq	r3, r1, r8, ror #12
   13a08:	andeq	r3, r1, r8, ror #12
   13a0c:	andeq	r3, r1, r8, ror #12
   13a10:	andeq	r3, r1, r8, ror #12
   13a14:	andeq	r3, r1, r8, ror #12
   13a18:	andeq	r3, r1, r8, ror #12
   13a1c:	andeq	r3, r1, r8, ror #12
   13a20:	andeq	r3, r1, r8, ror #12
   13a24:	andeq	r3, r1, r8, ror #12
   13a28:	andeq	r3, r1, r8, ror #12
   13a2c:	andeq	r3, r1, r8, ror #12
   13a30:	andeq	r3, r1, r8, ror #12
   13a34:	andeq	r3, r1, r8, ror #12
   13a38:	andeq	r3, r1, r8, ror #12
   13a3c:	andeq	r3, r1, r8, ror #12
   13a40:	andeq	r3, r1, r4, ror #23
   13a44:	andeq	r3, r1, ip, asr #10
   13a48:	andeq	r3, r1, ip, asr #10
   13a4c:	andeq	r3, r1, r8, asr #23
   13a50:	andeq	r3, r1, ip, asr #10
   13a54:			; <UNDEFINED> instruction: 0x00013bbc
   13a58:	andeq	r3, r1, ip, asr #10
   13a5c:	andeq	r3, r1, r8, lsr #7
   13a60:	andeq	r3, r1, ip, asr #10
   13a64:	andeq	r3, r1, ip, asr #10
   13a68:	andeq	r3, r1, ip, asr #10
   13a6c:			; <UNDEFINED> instruction: 0x00013bbc
   13a70:			; <UNDEFINED> instruction: 0x00013bbc
   13a74:			; <UNDEFINED> instruction: 0x00013bbc
   13a78:			; <UNDEFINED> instruction: 0x00013bbc
   13a7c:			; <UNDEFINED> instruction: 0x00013bbc
   13a80:			; <UNDEFINED> instruction: 0x00013bbc
   13a84:			; <UNDEFINED> instruction: 0x00013bbc
   13a88:			; <UNDEFINED> instruction: 0x00013bbc
   13a8c:			; <UNDEFINED> instruction: 0x00013bbc
   13a90:			; <UNDEFINED> instruction: 0x00013bbc
   13a94:			; <UNDEFINED> instruction: 0x00013bbc
   13a98:			; <UNDEFINED> instruction: 0x00013bbc
   13a9c:			; <UNDEFINED> instruction: 0x00013bbc
   13aa0:			; <UNDEFINED> instruction: 0x00013bbc
   13aa4:			; <UNDEFINED> instruction: 0x00013bbc
   13aa8:			; <UNDEFINED> instruction: 0x00013bbc
   13aac:	andeq	r3, r1, ip, asr #10
   13ab0:	andeq	r3, r1, ip, asr #10
   13ab4:	andeq	r3, r1, ip, asr #10
   13ab8:	andeq	r3, r1, ip, asr #10
   13abc:	andeq	r3, r1, ip, ror r3
   13ac0:	andeq	r3, r1, r8, ror #12
   13ac4:			; <UNDEFINED> instruction: 0x00013bbc
   13ac8:			; <UNDEFINED> instruction: 0x00013bbc
   13acc:			; <UNDEFINED> instruction: 0x00013bbc
   13ad0:			; <UNDEFINED> instruction: 0x00013bbc
   13ad4:			; <UNDEFINED> instruction: 0x00013bbc
   13ad8:			; <UNDEFINED> instruction: 0x00013bbc
   13adc:			; <UNDEFINED> instruction: 0x00013bbc
   13ae0:			; <UNDEFINED> instruction: 0x00013bbc
   13ae4:			; <UNDEFINED> instruction: 0x00013bbc
   13ae8:			; <UNDEFINED> instruction: 0x00013bbc
   13aec:			; <UNDEFINED> instruction: 0x00013bbc
   13af0:			; <UNDEFINED> instruction: 0x00013bbc
   13af4:			; <UNDEFINED> instruction: 0x00013bbc
   13af8:			; <UNDEFINED> instruction: 0x00013bbc
   13afc:			; <UNDEFINED> instruction: 0x00013bbc
   13b00:			; <UNDEFINED> instruction: 0x00013bbc
   13b04:			; <UNDEFINED> instruction: 0x00013bbc
   13b08:			; <UNDEFINED> instruction: 0x00013bbc
   13b0c:			; <UNDEFINED> instruction: 0x00013bbc
   13b10:			; <UNDEFINED> instruction: 0x00013bbc
   13b14:			; <UNDEFINED> instruction: 0x00013bbc
   13b18:			; <UNDEFINED> instruction: 0x00013bbc
   13b1c:			; <UNDEFINED> instruction: 0x00013bbc
   13b20:			; <UNDEFINED> instruction: 0x00013bbc
   13b24:			; <UNDEFINED> instruction: 0x00013bbc
   13b28:			; <UNDEFINED> instruction: 0x00013bbc
   13b2c:	andeq	r3, r1, ip, asr #10
   13b30:	andeq	r3, r1, r4, lsr #6
   13b34:			; <UNDEFINED> instruction: 0x00013bbc
   13b38:	andeq	r3, r1, ip, asr #10
   13b3c:			; <UNDEFINED> instruction: 0x00013bbc
   13b40:	andeq	r3, r1, ip, asr #10
   13b44:			; <UNDEFINED> instruction: 0x00013bbc
   13b48:			; <UNDEFINED> instruction: 0x00013bbc
   13b4c:			; <UNDEFINED> instruction: 0x00013bbc
   13b50:			; <UNDEFINED> instruction: 0x00013bbc
   13b54:			; <UNDEFINED> instruction: 0x00013bbc
   13b58:			; <UNDEFINED> instruction: 0x00013bbc
   13b5c:			; <UNDEFINED> instruction: 0x00013bbc
   13b60:			; <UNDEFINED> instruction: 0x00013bbc
   13b64:			; <UNDEFINED> instruction: 0x00013bbc
   13b68:			; <UNDEFINED> instruction: 0x00013bbc
   13b6c:			; <UNDEFINED> instruction: 0x00013bbc
   13b70:			; <UNDEFINED> instruction: 0x00013bbc
   13b74:			; <UNDEFINED> instruction: 0x00013bbc
   13b78:			; <UNDEFINED> instruction: 0x00013bbc
   13b7c:			; <UNDEFINED> instruction: 0x00013bbc
   13b80:			; <UNDEFINED> instruction: 0x00013bbc
   13b84:			; <UNDEFINED> instruction: 0x00013bbc
   13b88:			; <UNDEFINED> instruction: 0x00013bbc
   13b8c:			; <UNDEFINED> instruction: 0x00013bbc
   13b90:			; <UNDEFINED> instruction: 0x00013bbc
   13b94:			; <UNDEFINED> instruction: 0x00013bbc
   13b98:			; <UNDEFINED> instruction: 0x00013bbc
   13b9c:			; <UNDEFINED> instruction: 0x00013bbc
   13ba0:			; <UNDEFINED> instruction: 0x00013bbc
   13ba4:			; <UNDEFINED> instruction: 0x00013bbc
   13ba8:			; <UNDEFINED> instruction: 0x00013bbc
   13bac:	andeq	r3, r1, r8, asr #2
   13bb0:	andeq	r3, r1, ip, asr #10
   13bb4:	andeq	r3, r1, r8, asr #2
   13bb8:	andeq	r3, r1, r8, asr #23
   13bbc:	mov	r6, r7
   13bc0:	mov	r7, #0
   13bc4:	b	13374 <strspn@plt+0x23c0>
   13bc8:	cmp	r9, #0
   13bcc:	mov	r2, #0
   13bd0:	beq	13638 <strspn@plt+0x2684>
   13bd4:	mov	r6, #0
   13bd8:	mov	r7, r2
   13bdc:	mov	r3, r6
   13be0:	b	13194 <strspn@plt+0x21e0>
   13be4:	mov	r2, #0
   13be8:	b	1364c <strspn@plt+0x2698>
   13bec:	mov	r7, #0
   13bf0:	mov	r3, #118	; 0x76
   13bf4:	b	13358 <strspn@plt+0x23a4>
   13bf8:	mov	r7, #0
   13bfc:	mov	r3, #116	; 0x74
   13c00:	b	13488 <strspn@plt+0x24d4>
   13c04:	ldr	r3, [sp, #44]	; 0x2c
   13c08:	b	131bc <strspn@plt+0x2208>
   13c0c:	ldr	r3, [sp, #44]	; 0x2c
   13c10:	cmp	r3, #0
   13c14:	bne	14084 <strspn@plt+0x30d0>
   13c18:	add	r9, r9, #1
   13c1c:	mov	r6, #0
   13c20:	ldr	r3, [sp, #48]	; 0x30
   13c24:	mov	r5, #92	; 0x5c
   13c28:	b	13448 <strspn@plt+0x2494>
   13c2c:	ldr	r3, [sp, #32]
   13c30:	ldrb	r2, [r3, #1]
   13c34:	adds	r2, r2, #0
   13c38:	movne	r2, #1
   13c3c:	b	13164 <strspn@plt+0x21b0>
   13c40:	ldr	r3, [sp, #156]	; 0x9c
   13c44:	ands	r3, r3, #4
   13c48:	beq	13c70 <strspn@plt+0x2cbc>
   13c4c:	ldr	r2, [sp, #28]
   13c50:	add	r3, r9, #2
   13c54:	cmp	r3, r2
   13c58:	bcs	13c6c <strspn@plt+0x2cb8>
   13c5c:	ldr	r2, [sp, #52]	; 0x34
   13c60:	ldrb	r5, [r2, #1]
   13c64:	cmp	r5, #63	; 0x3f
   13c68:	beq	140e8 <strspn@plt+0x3134>
   13c6c:	mov	r3, #0
   13c70:	mov	r5, #63	; 0x3f
   13c74:	mov	r6, r3
   13c78:	b	13184 <strspn@plt+0x21d0>
   13c7c:	ldr	r3, [sp, #44]	; 0x2c
   13c80:	cmp	r3, #0
   13c84:	bne	14084 <strspn@plt+0x30d0>
   13c88:	mov	r6, r3
   13c8c:	mov	r5, #63	; 0x3f
   13c90:	b	131bc <strspn@plt+0x2208>
   13c94:	ldr	r1, [sp, #28]
   13c98:	mov	r2, #0
   13c9c:	mov	r3, #0
   13ca0:	strd	r2, [sp, #104]	; 0x68
   13ca4:	cmn	r1, #1
   13ca8:	bne	13cb8 <strspn@plt+0x2d04>
   13cac:	ldr	r0, [sp, #32]
   13cb0:	bl	10ed0 <strlen@plt>
   13cb4:	str	r0, [sp, #28]
   13cb8:	str	r8, [sp, #76]	; 0x4c
   13cbc:	mov	r3, #0
   13cc0:	str	sl, [sp, #80]	; 0x50
   13cc4:	ldr	sl, [sp, #32]
   13cc8:	str	r5, [sp, #84]	; 0x54
   13ccc:	mov	r5, r3
   13cd0:	ldr	r8, [sp, #44]	; 0x2c
   13cd4:	str	r7, [sp, #88]	; 0x58
   13cd8:	str	r4, [sp, #92]	; 0x5c
   13cdc:	ldr	r2, [sp, #28]
   13ce0:	add	r4, r9, r5
   13ce4:	add	r3, sp, #104	; 0x68
   13ce8:	add	r7, sl, r4
   13cec:	add	r0, sp, #100	; 0x64
   13cf0:	mov	r1, r7
   13cf4:	sub	r2, r2, r4
   13cf8:	bl	15c30 <strspn@plt+0x4c7c>
   13cfc:	subs	r1, r0, #0
   13d00:	beq	13d4c <strspn@plt+0x2d98>
   13d04:	cmn	r1, #1
   13d08:	beq	140c4 <strspn@plt+0x3110>
   13d0c:	cmn	r1, #2
   13d10:	beq	141e4 <strspn@plt+0x3230>
   13d14:	cmp	fp, #2
   13d18:	movne	r3, #0
   13d1c:	andeq	r3, r8, #1
   13d20:	cmp	r3, #0
   13d24:	bne	13eb0 <strspn@plt+0x2efc>
   13d28:	ldr	r0, [sp, #100]	; 0x64
   13d2c:	add	r5, r5, r1
   13d30:	bl	10e04 <iswprint@plt>
   13d34:	cmp	r0, #0
   13d38:	add	r0, sp, #104	; 0x68
   13d3c:	moveq	r6, #0
   13d40:	bl	10da4 <mbsinit@plt>
   13d44:	cmp	r0, #0
   13d48:	beq	13cdc <strspn@plt+0x2d28>
   13d4c:	ldr	r3, [sp, #40]	; 0x28
   13d50:	mov	ip, r5
   13d54:	eor	r2, r6, #1
   13d58:	ldr	r8, [sp, #76]	; 0x4c
   13d5c:	ldr	sl, [sp, #80]	; 0x50
   13d60:	and	r2, r2, r3
   13d64:	ldr	r5, [sp, #84]	; 0x54
   13d68:	ldr	r7, [sp, #88]	; 0x58
   13d6c:	ldr	r4, [sp, #92]	; 0x5c
   13d70:	cmp	ip, #1
   13d74:	bls	136b0 <strspn@plt+0x26fc>
   13d78:	add	r1, ip, r9
   13d7c:	mov	r0, #39	; 0x27
   13d80:	ldr	lr, [sp, #52]	; 0x34
   13d84:	mov	ip, #0
   13d88:	str	r6, [sp, #52]	; 0x34
   13d8c:	ldr	r6, [sp, #48]	; 0x30
   13d90:	b	13e4c <strspn@plt+0x2e98>
   13d94:	ldr	ip, [sp, #44]	; 0x2c
   13d98:	sub	r3, fp, #2
   13d9c:	clz	r3, r3
   13da0:	lsr	r3, r3, #5
   13da4:	cmp	ip, #0
   13da8:	bne	13fbc <strspn@plt+0x3008>
   13dac:	eor	ip, r6, #1
   13db0:	ands	r3, r3, ip
   13db4:	beq	13de4 <strspn@plt+0x2e30>
   13db8:	cmp	sl, r4
   13dbc:	add	ip, r4, #1
   13dc0:	strbhi	r0, [r8, r4]
   13dc4:	cmp	sl, ip
   13dc8:	movhi	r6, #36	; 0x24
   13dcc:	strbhi	r6, [r8, ip]
   13dd0:	add	ip, r4, #2
   13dd4:	mov	r6, r3
   13dd8:	cmp	sl, ip
   13ddc:	add	r4, r4, #3
   13de0:	strbhi	r0, [r8, ip]
   13de4:	cmp	sl, r4
   13de8:	movhi	r3, #92	; 0x5c
   13dec:	strbhi	r3, [r8, r4]
   13df0:	add	r3, r4, #1
   13df4:	cmp	sl, r3
   13df8:	bls	13e08 <strspn@plt+0x2e54>
   13dfc:	lsr	ip, r5, #6
   13e00:	add	ip, ip, #48	; 0x30
   13e04:	strb	ip, [r8, r3]
   13e08:	add	r3, r4, #2
   13e0c:	cmp	sl, r3
   13e10:	bls	13e20 <strspn@plt+0x2e6c>
   13e14:	ubfx	ip, r5, #3, #3
   13e18:	add	ip, ip, #48	; 0x30
   13e1c:	strb	ip, [r8, r3]
   13e20:	add	r9, r9, #1
   13e24:	and	r5, r5, #7
   13e28:	cmp	r9, r1
   13e2c:	add	r5, r5, #48	; 0x30
   13e30:	add	r4, r4, #3
   13e34:	bcs	13fe8 <strspn@plt+0x3034>
   13e38:	mov	ip, r2
   13e3c:	cmp	sl, r4
   13e40:	strbhi	r5, [r8, r4]
   13e44:	add	r4, r4, #1
   13e48:	ldrb	r5, [lr, #1]!
   13e4c:	cmp	r2, #0
   13e50:	bne	13d94 <strspn@plt+0x2de0>
   13e54:	eor	r3, ip, #1
   13e58:	cmp	r7, #0
   13e5c:	and	r3, r3, r6
   13e60:	uxtb	r3, r3
   13e64:	beq	13e78 <strspn@plt+0x2ec4>
   13e68:	cmp	sl, r4
   13e6c:	movhi	r7, #92	; 0x5c
   13e70:	strbhi	r7, [r8, r4]
   13e74:	add	r4, r4, #1
   13e78:	add	r9, r9, #1
   13e7c:	cmp	r9, r1
   13e80:	bcs	13fd0 <strspn@plt+0x301c>
   13e84:	cmp	r3, #0
   13e88:	beq	14008 <strspn@plt+0x3054>
   13e8c:	cmp	sl, r4
   13e90:	add	r3, r4, #1
   13e94:	mov	r7, #0
   13e98:	strbhi	r0, [r8, r4]
   13e9c:	cmp	sl, r3
   13ea0:	add	r4, r4, #2
   13ea4:	mov	r6, r7
   13ea8:	strbhi	r0, [r8, r3]
   13eac:	b	13e3c <strspn@plt+0x2e88>
   13eb0:	cmp	r1, #1
   13eb4:	beq	13d28 <strspn@plt+0x2d74>
   13eb8:	add	r2, r4, #1
   13ebc:	add	r3, sl, r1
   13ec0:	add	r2, sl, r2
   13ec4:	add	r4, r3, r4
   13ec8:	ldrb	r3, [r2], #1
   13ecc:	sub	r3, r3, #91	; 0x5b
   13ed0:	cmp	r3, #33	; 0x21
   13ed4:	ldrls	pc, [pc, r3, lsl #2]
   13ed8:	b	13f64 <strspn@plt+0x2fb0>
   13edc:	andeq	r3, r1, r0, ror pc
   13ee0:	andeq	r3, r1, r0, ror pc
   13ee4:	andeq	r3, r1, r4, ror #30
   13ee8:	andeq	r3, r1, r0, ror pc
   13eec:	andeq	r3, r1, r4, ror #30
   13ef0:	andeq	r3, r1, r0, ror pc
   13ef4:	andeq	r3, r1, r4, ror #30
   13ef8:	andeq	r3, r1, r4, ror #30
   13efc:	andeq	r3, r1, r4, ror #30
   13f00:	andeq	r3, r1, r4, ror #30
   13f04:	andeq	r3, r1, r4, ror #30
   13f08:	andeq	r3, r1, r4, ror #30
   13f0c:	andeq	r3, r1, r4, ror #30
   13f10:	andeq	r3, r1, r4, ror #30
   13f14:	andeq	r3, r1, r4, ror #30
   13f18:	andeq	r3, r1, r4, ror #30
   13f1c:	andeq	r3, r1, r4, ror #30
   13f20:	andeq	r3, r1, r4, ror #30
   13f24:	andeq	r3, r1, r4, ror #30
   13f28:	andeq	r3, r1, r4, ror #30
   13f2c:	andeq	r3, r1, r4, ror #30
   13f30:	andeq	r3, r1, r4, ror #30
   13f34:	andeq	r3, r1, r4, ror #30
   13f38:	andeq	r3, r1, r4, ror #30
   13f3c:	andeq	r3, r1, r4, ror #30
   13f40:	andeq	r3, r1, r4, ror #30
   13f44:	andeq	r3, r1, r4, ror #30
   13f48:	andeq	r3, r1, r4, ror #30
   13f4c:	andeq	r3, r1, r4, ror #30
   13f50:	andeq	r3, r1, r4, ror #30
   13f54:	andeq	r3, r1, r4, ror #30
   13f58:	andeq	r3, r1, r4, ror #30
   13f5c:	andeq	r3, r1, r4, ror #30
   13f60:	andeq	r3, r1, r0, ror pc
   13f64:	cmp	r4, r2
   13f68:	bne	13ec8 <strspn@plt+0x2f14>
   13f6c:	b	13d28 <strspn@plt+0x2d74>
   13f70:	mov	r8, #2
   13f74:	ldr	fp, [sp, #76]	; 0x4c
   13f78:	ldr	sl, [sp, #80]	; 0x50
   13f7c:	b	134a8 <strspn@plt+0x24f4>
   13f80:	ldr	r2, [sp, #40]	; 0x28
   13f84:	str	fp, [sp, #152]	; 0x98
   13f88:	mov	fp, r8
   13f8c:	ldr	r8, [sp, #152]	; 0x98
   13f90:	and	r2, r2, r3
   13f94:	str	r2, [sp, #40]	; 0x28
   13f98:	b	134a8 <strspn@plt+0x24f4>
   13f9c:	cmp	sl, r4
   13fa0:	movls	r0, r4
   13fa4:	bls	135d8 <strspn@plt+0x2624>
   13fa8:	ldr	r3, [sp, #48]	; 0x30
   13fac:	b	135c8 <strspn@plt+0x2614>
   13fb0:	str	sl, [sp, #72]	; 0x48
   13fb4:	ldr	sl, [sp, #44]	; 0x2c
   13fb8:	b	13418 <strspn@plt+0x2464>
   13fbc:	str	r3, [sp, #40]	; 0x28
   13fc0:	str	fp, [sp, #152]	; 0x98
   13fc4:	mov	fp, r8
   13fc8:	ldr	r8, [sp, #152]	; 0x98
   13fcc:	b	134a8 <strspn@plt+0x24f4>
   13fd0:	str	r6, [sp, #48]	; 0x30
   13fd4:	ldr	r6, [sp, #52]	; 0x34
   13fd8:	b	13448 <strspn@plt+0x2494>
   13fdc:	mov	r6, #0
   13fe0:	ldr	r2, [sp, #40]	; 0x28
   13fe4:	b	13d78 <strspn@plt+0x2dc4>
   13fe8:	str	r6, [sp, #48]	; 0x30
   13fec:	ldr	r6, [sp, #52]	; 0x34
   13ff0:	b	13234 <strspn@plt+0x2280>
   13ff4:	add	r4, r4, #4
   13ff8:	mov	r6, #0
   13ffc:	str	r3, [sp, #48]	; 0x30
   14000:	mov	r5, #48	; 0x30
   14004:	b	131bc <strspn@plt+0x2208>
   14008:	mov	r7, r3
   1400c:	b	13e3c <strspn@plt+0x2e88>
   14010:	mov	r3, #1
   14014:	movw	r2, #26828	; 0x68cc
   14018:	movt	r2, #1
   1401c:	mov	r4, r3
   14020:	str	r3, [sp, #36]	; 0x24
   14024:	str	r3, [sp, #40]	; 0x28
   14028:	str	sl, [sp, #44]	; 0x2c
   1402c:	str	sl, [sp, #48]	; 0x30
   14030:	str	r3, [sp, #56]	; 0x38
   14034:	str	r2, [sp, #60]	; 0x3c
   14038:	str	sl, [sp, #68]	; 0x44
   1403c:	str	sl, [sp, #72]	; 0x48
   14040:	b	12ce4 <strspn@plt+0x1d30>
   14044:	mov	r3, r6
   14048:	mov	r5, #48	; 0x30
   1404c:	mov	r6, #0
   14050:	b	131bc <strspn@plt+0x2208>
   14054:	mov	r5, r3
   14058:	b	13534 <strspn@plt+0x2580>
   1405c:	cmp	sl, r4
   14060:	mov	r5, #48	; 0x30
   14064:	movhi	r3, #48	; 0x30
   14068:	strbhi	r3, [r8, r4]
   1406c:	add	r3, r0, #2
   14070:	add	r4, r0, #3
   14074:	cmp	sl, r3
   14078:	movhi	r1, #48	; 0x30
   1407c:	strbhi	r1, [r8, r3]
   14080:	b	1360c <strspn@plt+0x2658>
   14084:	str	fp, [sp, #152]	; 0x98
   14088:	mov	fp, r8
   1408c:	ldr	r8, [sp, #152]	; 0x98
   14090:	b	134a8 <strspn@plt+0x24f4>
   14094:	ldr	r3, [sp, #164]	; 0xa4
   14098:	ldrb	r3, [r3]
   1409c:	cmp	r3, #0
   140a0:	beq	12cb4 <strspn@plt+0x1d00>
   140a4:	ldr	r2, [sp, #164]	; 0xa4
   140a8:	cmp	sl, r4
   140ac:	strbhi	r3, [fp, r4]
   140b0:	add	r4, r4, #1
   140b4:	ldrb	r3, [r2, #1]!
   140b8:	cmp	r3, #0
   140bc:	bne	140a8 <strspn@plt+0x30f4>
   140c0:	b	12cb4 <strspn@plt+0x1d00>
   140c4:	mov	ip, r5
   140c8:	mov	r6, #0
   140cc:	ldr	r2, [sp, #40]	; 0x28
   140d0:	ldr	r8, [sp, #76]	; 0x4c
   140d4:	ldr	sl, [sp, #80]	; 0x50
   140d8:	ldr	r5, [sp, #84]	; 0x54
   140dc:	ldr	r7, [sp, #88]	; 0x58
   140e0:	ldr	r4, [sp, #92]	; 0x5c
   140e4:	b	13d70 <strspn@plt+0x2dbc>
   140e8:	ldr	r2, [sp, #32]
   140ec:	ldrb	r1, [r2, r3]
   140f0:	sub	r2, r1, #33	; 0x21
   140f4:	cmp	r2, #29
   140f8:	ldrls	pc, [pc, r2, lsl #2]
   140fc:	b	141d8 <strspn@plt+0x3224>
   14100:	andeq	r4, r1, r8, ror r1
   14104:	ldrdeq	r4, [r1], -r8
   14108:	ldrdeq	r4, [r1], -r8
   1410c:	ldrdeq	r4, [r1], -r8
   14110:	ldrdeq	r4, [r1], -r8
   14114:	ldrdeq	r4, [r1], -r8
   14118:	andeq	r4, r1, r8, ror r1
   1411c:	andeq	r4, r1, r8, ror r1
   14120:	andeq	r4, r1, r8, ror r1
   14124:	ldrdeq	r4, [r1], -r8
   14128:	ldrdeq	r4, [r1], -r8
   1412c:	ldrdeq	r4, [r1], -r8
   14130:	andeq	r4, r1, r8, ror r1
   14134:	ldrdeq	r4, [r1], -r8
   14138:	andeq	r4, r1, r8, ror r1
   1413c:	ldrdeq	r4, [r1], -r8
   14140:	ldrdeq	r4, [r1], -r8
   14144:	ldrdeq	r4, [r1], -r8
   14148:	ldrdeq	r4, [r1], -r8
   1414c:	ldrdeq	r4, [r1], -r8
   14150:	ldrdeq	r4, [r1], -r8
   14154:	ldrdeq	r4, [r1], -r8
   14158:	ldrdeq	r4, [r1], -r8
   1415c:	ldrdeq	r4, [r1], -r8
   14160:	ldrdeq	r4, [r1], -r8
   14164:	ldrdeq	r4, [r1], -r8
   14168:	ldrdeq	r4, [r1], -r8
   1416c:	andeq	r4, r1, r8, ror r1
   14170:	andeq	r4, r1, r8, ror r1
   14174:	andeq	r4, r1, r8, ror r1
   14178:	ldr	r2, [sp, #44]	; 0x2c
   1417c:	cmp	r2, #0
   14180:	bne	142dc <strspn@plt+0x3328>
   14184:	cmp	sl, r4
   14188:	mov	r5, r1
   1418c:	movhi	r2, #63	; 0x3f
   14190:	mov	r9, r3
   14194:	strbhi	r2, [r8, r4]
   14198:	add	r2, r4, #1
   1419c:	cmp	sl, r2
   141a0:	movhi	r0, #34	; 0x22
   141a4:	strbhi	r0, [r8, r2]
   141a8:	add	r2, r4, #2
   141ac:	cmp	sl, r2
   141b0:	movhi	r0, #34	; 0x22
   141b4:	strbhi	r0, [r8, r2]
   141b8:	add	r2, r4, #3
   141bc:	add	r4, r4, #4
   141c0:	cmp	sl, r2
   141c4:	movhi	r0, #63	; 0x3f
   141c8:	strbhi	r0, [r8, r2]
   141cc:	mov	r2, #0
   141d0:	mov	r6, r2
   141d4:	b	1360c <strspn@plt+0x2658>
   141d8:	mov	r3, #0
   141dc:	mov	r6, r3
   141e0:	b	13184 <strspn@plt+0x21d0>
   141e4:	ldr	r0, [sp, #28]
   141e8:	mov	r1, r4
   141ec:	mov	r2, r7
   141f0:	mov	r3, r5
   141f4:	mov	ip, r5
   141f8:	ldr	r8, [sp, #76]	; 0x4c
   141fc:	ldr	sl, [sp, #80]	; 0x50
   14200:	cmp	r1, r0
   14204:	ldr	r5, [sp, #84]	; 0x54
   14208:	ldr	r7, [sp, #88]	; 0x58
   1420c:	ldr	r4, [sp, #92]	; 0x5c
   14210:	bcs	14244 <strspn@plt+0x3290>
   14214:	ldrb	r6, [r2]
   14218:	cmp	r6, #0
   1421c:	bne	14230 <strspn@plt+0x327c>
   14220:	b	14364 <strspn@plt+0x33b0>
   14224:	ldrb	r6, [r2, #1]!
   14228:	cmp	r6, #0
   1422c:	beq	142ec <strspn@plt+0x3338>
   14230:	add	r3, r3, #1
   14234:	add	r1, r9, r3
   14238:	cmp	r1, r0
   1423c:	bcc	14224 <strspn@plt+0x3270>
   14240:	mov	ip, r3
   14244:	mov	r6, #0
   14248:	ldr	r2, [sp, #40]	; 0x28
   1424c:	b	13d70 <strspn@plt+0x2dbc>
   14250:	mov	r3, #1
   14254:	mov	r2, #0
   14258:	mov	r4, r2
   1425c:	str	r3, [sp, #36]	; 0x24
   14260:	str	r3, [sp, #40]	; 0x28
   14264:	str	r3, [sp, #44]	; 0x2c
   14268:	str	r2, [sp, #48]	; 0x30
   1426c:	str	r3, [sp, #56]	; 0x38
   14270:	movw	r3, #26828	; 0x68cc
   14274:	movt	r3, #1
   14278:	str	r3, [sp, #60]	; 0x3c
   1427c:	str	r2, [sp, #68]	; 0x44
   14280:	str	r2, [sp, #72]	; 0x48
   14284:	b	12ce4 <strspn@plt+0x1d30>
   14288:	mov	r2, r3
   1428c:	ldr	r3, [sp, #60]	; 0x3c
   14290:	cmp	r3, #0
   14294:	moveq	r2, #0
   14298:	andne	r2, r2, #1
   1429c:	cmp	r2, #0
   142a0:	beq	142cc <strspn@plt+0x3318>
   142a4:	mov	r2, r3
   142a8:	ldrb	r3, [r3]
   142ac:	cmp	r3, #0
   142b0:	beq	142cc <strspn@plt+0x3318>
   142b4:	cmp	sl, r4
   142b8:	strbhi	r3, [fp, r4]
   142bc:	add	r4, r4, #1
   142c0:	ldrb	r3, [r2, #1]!
   142c4:	cmp	r3, #0
   142c8:	bne	142b4 <strspn@plt+0x3300>
   142cc:	cmp	sl, r4
   142d0:	movhi	r3, #0
   142d4:	strbhi	r3, [fp, r4]
   142d8:	b	134ec <strspn@plt+0x2538>
   142dc:	str	fp, [sp, #152]	; 0x98
   142e0:	mov	fp, r8
   142e4:	ldr	r8, [sp, #152]	; 0x98
   142e8:	b	134b4 <strspn@plt+0x2500>
   142ec:	mov	ip, r3
   142f0:	ldr	r2, [sp, #40]	; 0x28
   142f4:	b	13d70 <strspn@plt+0x2dbc>
   142f8:	str	fp, [sp, #152]	; 0x98
   142fc:	mov	fp, r8
   14300:	ldr	r8, [sp, #152]	; 0x98
   14304:	sub	r3, r8, #2
   14308:	clz	r3, r3
   1430c:	lsr	r3, r3, #5
   14310:	str	r3, [sp, #40]	; 0x28
   14314:	b	134a8 <strspn@plt+0x24f4>
   14318:	mov	ip, #5
   1431c:	ldr	r3, [sp, #28]
   14320:	str	ip, [sp]
   14324:	ldr	r2, [sp, #156]	; 0x9c
   14328:	ldr	ip, [sp, #164]	; 0xa4
   1432c:	ldr	r0, [sp, #160]	; 0xa0
   14330:	str	r2, [sp, #4]
   14334:	ldr	r2, [sp, #32]
   14338:	ldr	r1, [sp, #72]	; 0x48
   1433c:	str	ip, [sp, #12]
   14340:	ldr	ip, [sp, #168]	; 0xa8
   14344:	str	r0, [sp, #8]
   14348:	mov	r0, fp
   1434c:	str	ip, [sp, #16]
   14350:	bl	12bfc <strspn@plt+0x1c48>
   14354:	mov	r4, r0
   14358:	b	134ec <strspn@plt+0x2538>
   1435c:	mov	r8, #2
   14360:	b	134a8 <strspn@plt+0x24f4>
   14364:	ldr	r2, [sp, #40]	; 0x28
   14368:	b	13d70 <strspn@plt+0x2dbc>
   1436c:	mov	r3, #0
   14370:	mov	r2, #1
   14374:	mov	r4, r3
   14378:	strd	r2, [sp, #36]	; 0x24
   1437c:	strd	r2, [sp, #44]	; 0x2c
   14380:	str	r2, [sp, #56]	; 0x38
   14384:	str	r3, [sp, #68]	; 0x44
   14388:	str	r3, [sp, #72]	; 0x48
   1438c:	movw	r3, #26848	; 0x68e0
   14390:	movt	r3, #1
   14394:	str	r3, [sp, #60]	; 0x3c
   14398:	b	12ce4 <strspn@plt+0x1d30>
   1439c:	mov	r3, #0
   143a0:	mov	r1, #1
   143a4:	mov	r2, r3
   143a8:	str	r1, [sp, #36]	; 0x24
   143ac:	str	r3, [sp, #48]	; 0x30
   143b0:	str	sl, [sp, #72]	; 0x48
   143b4:	b	132ec <strspn@plt+0x2338>
   143b8:	bl	10fa8 <abort@plt>
   143bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   143c0:	mov	r4, r0
   143c4:	mov	r5, r3
   143c8:	strd	r6, [sp, #8]
   143cc:	movw	r7, #28928	; 0x7100
   143d0:	movt	r7, #2
   143d4:	strd	r8, [sp, #16]
   143d8:	strd	sl, [sp, #24]
   143dc:	mov	sl, r1
   143e0:	mov	fp, r2
   143e4:	str	lr, [sp, #32]
   143e8:	sub	sp, sp, #60	; 0x3c
   143ec:	bl	10ee8 <__errno_location@plt>
   143f0:	mov	r8, r0
   143f4:	cmn	r4, #-2147483647	; 0x80000001
   143f8:	ldr	r6, [r7]
   143fc:	movne	r0, #0
   14400:	moveq	r0, #1
   14404:	ldr	r3, [r8]
   14408:	orrs	r0, r0, r4, lsr #31
   1440c:	str	r3, [sp, #28]
   14410:	bne	145a0 <strspn@plt+0x35ec>
   14414:	ldr	r3, [r7, #4]
   14418:	cmp	r3, r4
   1441c:	bgt	1447c <strspn@plt+0x34c8>
   14420:	add	r1, r7, #8
   14424:	sub	r2, r4, r3
   14428:	str	r3, [sp, #52]	; 0x34
   1442c:	cmp	r6, r1
   14430:	add	r2, r2, #1
   14434:	beq	14578 <strspn@plt+0x35c4>
   14438:	mov	r1, #8
   1443c:	mov	r0, r6
   14440:	mvn	r3, #-2147483648	; 0x80000000
   14444:	str	r1, [sp]
   14448:	add	r1, sp, #52	; 0x34
   1444c:	bl	15420 <strspn@plt+0x446c>
   14450:	mov	r6, r0
   14454:	str	r0, [r7]
   14458:	ldr	r0, [r7, #4]
   1445c:	mov	r1, #0
   14460:	ldr	r2, [sp, #52]	; 0x34
   14464:	sub	r2, r2, r0
   14468:	add	r0, r6, r0, lsl #3
   1446c:	lsl	r2, r2, #3
   14470:	bl	10f0c <memset@plt>
   14474:	ldr	r3, [sp, #52]	; 0x34
   14478:	str	r3, [r7, #4]
   1447c:	ldr	r1, [r5, #4]
   14480:	add	r0, r6, r4, lsl #3
   14484:	add	ip, r5, #8
   14488:	mov	r3, fp
   1448c:	mov	r2, sl
   14490:	ldr	r7, [r0, #4]
   14494:	str	r0, [sp, #36]	; 0x24
   14498:	str	ip, [sp, #40]	; 0x28
   1449c:	orr	r0, r1, #1
   144a0:	ldr	r9, [r6, r4, lsl #3]
   144a4:	str	ip, [sp, #8]
   144a8:	ldr	lr, [r5, #44]	; 0x2c
   144ac:	str	r0, [sp, #4]
   144b0:	ldr	ip, [r5]
   144b4:	mov	r1, r9
   144b8:	str	ip, [sp, #32]
   144bc:	ldr	ip, [r5, #40]	; 0x28
   144c0:	str	ip, [sp, #12]
   144c4:	ldr	ip, [sp, #32]
   144c8:	str	lr, [sp, #16]
   144cc:	str	r0, [sp, #44]	; 0x2c
   144d0:	mov	r0, r7
   144d4:	str	ip, [sp]
   144d8:	bl	12bfc <strspn@plt+0x1c48>
   144dc:	cmp	r9, r0
   144e0:	bhi	14550 <strspn@plt+0x359c>
   144e4:	add	r9, r0, #1
   144e8:	movw	r3, #29072	; 0x7190
   144ec:	movt	r3, #2
   144f0:	cmp	r7, r3
   144f4:	str	r9, [r6, r4, lsl #3]
   144f8:	beq	14504 <strspn@plt+0x3550>
   144fc:	mov	r0, r7
   14500:	bl	1292c <strspn@plt+0x1978>
   14504:	mov	r0, r9
   14508:	bl	15270 <strspn@plt+0x42bc>
   1450c:	ldr	ip, [r5]
   14510:	mov	r3, fp
   14514:	mov	r2, sl
   14518:	mov	r1, r9
   1451c:	mov	r7, r0
   14520:	ldr	lr, [sp, #36]	; 0x24
   14524:	ldr	r4, [r5, #40]	; 0x28
   14528:	str	r0, [lr, #4]
   1452c:	ldr	lr, [r5, #44]	; 0x2c
   14530:	str	ip, [sp]
   14534:	ldr	ip, [sp, #44]	; 0x2c
   14538:	str	ip, [sp, #4]
   1453c:	ldr	ip, [sp, #40]	; 0x28
   14540:	str	r4, [sp, #12]
   14544:	str	lr, [sp, #16]
   14548:	str	ip, [sp, #8]
   1454c:	bl	12bfc <strspn@plt+0x1c48>
   14550:	ldr	r3, [sp, #28]
   14554:	mov	r0, r7
   14558:	str	r3, [r8]
   1455c:	add	sp, sp, #60	; 0x3c
   14560:	ldrd	r4, [sp]
   14564:	ldrd	r6, [sp, #8]
   14568:	ldrd	r8, [sp, #16]
   1456c:	ldrd	sl, [sp, #24]
   14570:	add	sp, sp, #32
   14574:	pop	{pc}		; (ldr pc, [sp], #4)
   14578:	mov	r1, #8
   1457c:	mvn	r3, #-2147483648	; 0x80000000
   14580:	str	r1, [sp]
   14584:	add	r1, sp, #52	; 0x34
   14588:	bl	15420 <strspn@plt+0x446c>
   1458c:	ldrd	r2, [r7, #8]
   14590:	mov	r6, r0
   14594:	str	r0, [r7]
   14598:	strd	r2, [r0]
   1459c:	b	14458 <strspn@plt+0x34a4>
   145a0:	bl	10fa8 <abort@plt>
   145a4:	strd	r4, [sp, #-16]!
   145a8:	mov	r5, r0
   145ac:	str	r6, [sp, #8]
   145b0:	str	lr, [sp, #12]
   145b4:	bl	10ee8 <__errno_location@plt>
   145b8:	mov	r4, r0
   145bc:	cmp	r5, #0
   145c0:	ldr	r0, [pc, #32]	; 145e8 <strspn@plt+0x3634>
   145c4:	mov	r1, #48	; 0x30
   145c8:	movne	r0, r5
   145cc:	ldr	r6, [r4]
   145d0:	bl	15598 <strspn@plt+0x45e4>
   145d4:	str	r6, [r4]
   145d8:	ldrd	r4, [sp]
   145dc:	ldr	r6, [sp, #8]
   145e0:	add	sp, sp, #12
   145e4:	pop	{pc}		; (ldr pc, [sp], #4)
   145e8:	muleq	r2, r0, r2
   145ec:	ldr	r3, [pc, #12]	; 14600 <strspn@plt+0x364c>
   145f0:	cmp	r0, #0
   145f4:	moveq	r0, r3
   145f8:	ldr	r0, [r0]
   145fc:	bx	lr
   14600:	muleq	r2, r0, r2
   14604:	ldr	r3, [pc, #12]	; 14618 <strspn@plt+0x3664>
   14608:	cmp	r0, #0
   1460c:	moveq	r0, r3
   14610:	str	r1, [r0]
   14614:	bx	lr
   14618:	muleq	r2, r0, r2
   1461c:	ldr	r3, [pc, #52]	; 14658 <strspn@plt+0x36a4>
   14620:	cmp	r0, #0
   14624:	push	{lr}		; (str lr, [sp, #-4]!)
   14628:	lsr	lr, r1, #5
   1462c:	and	r1, r1, #31
   14630:	moveq	r0, r3
   14634:	add	r3, r0, #8
   14638:	ldr	ip, [r3, lr, lsl #2]
   1463c:	lsr	r0, ip, r1
   14640:	eor	r2, r2, r0
   14644:	and	r0, r0, #1
   14648:	and	r2, r2, #1
   1464c:	eor	r1, ip, r2, lsl r1
   14650:	str	r1, [r3, lr, lsl #2]
   14654:	pop	{pc}		; (ldr pc, [sp], #4)
   14658:	muleq	r2, r0, r2
   1465c:	ldr	r3, [pc, #16]	; 14674 <strspn@plt+0x36c0>
   14660:	cmp	r0, #0
   14664:	movne	r3, r0
   14668:	ldr	r0, [r3, #4]
   1466c:	str	r1, [r3, #4]
   14670:	bx	lr
   14674:	muleq	r2, r0, r2
   14678:	ldr	r3, [pc, #48]	; 146b0 <strspn@plt+0x36fc>
   1467c:	cmp	r0, #0
   14680:	mov	ip, #10
   14684:	moveq	r0, r3
   14688:	cmp	r2, #0
   1468c:	cmpne	r1, #0
   14690:	str	ip, [r0]
   14694:	beq	146a4 <strspn@plt+0x36f0>
   14698:	str	r1, [r0, #40]	; 0x28
   1469c:	str	r2, [r0, #44]	; 0x2c
   146a0:	bx	lr
   146a4:	str	r4, [sp, #-8]!
   146a8:	str	lr, [sp, #4]
   146ac:	bl	10fa8 <abort@plt>
   146b0:	muleq	r2, r0, r2
   146b4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   146b8:	strd	r6, [sp, #8]
   146bc:	mov	r7, r0
   146c0:	mov	r6, r1
   146c4:	strd	r8, [sp, #16]
   146c8:	mov	r8, r2
   146cc:	mov	r9, r3
   146d0:	str	lr, [sp, #24]
   146d4:	sub	sp, sp, #28
   146d8:	ldr	r4, [sp, #56]	; 0x38
   146dc:	ldr	ip, [pc, #104]	; 1474c <strspn@plt+0x3798>
   146e0:	cmp	r4, #0
   146e4:	moveq	r4, ip
   146e8:	bl	10ee8 <__errno_location@plt>
   146ec:	ldr	ip, [r4, #44]	; 0x2c
   146f0:	mov	r5, r0
   146f4:	mov	r1, r6
   146f8:	add	lr, r4, #8
   146fc:	mov	r3, r9
   14700:	ldr	r6, [r5]
   14704:	mov	r2, r8
   14708:	mov	r0, r7
   1470c:	str	ip, [sp, #16]
   14710:	ldr	ip, [r4, #40]	; 0x28
   14714:	str	lr, [sp, #8]
   14718:	str	ip, [sp, #12]
   1471c:	ldr	ip, [r4, #4]
   14720:	str	ip, [sp, #4]
   14724:	ldr	ip, [r4]
   14728:	str	ip, [sp]
   1472c:	bl	12bfc <strspn@plt+0x1c48>
   14730:	str	r6, [r5]
   14734:	add	sp, sp, #28
   14738:	ldrd	r4, [sp]
   1473c:	ldrd	r6, [sp, #8]
   14740:	ldrd	r8, [sp, #16]
   14744:	add	sp, sp, #24
   14748:	pop	{pc}		; (ldr pc, [sp], #4)
   1474c:	muleq	r2, r0, r2
   14750:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14754:	cmp	r3, #0
   14758:	ldr	r4, [pc, #220]	; 1483c <strspn@plt+0x3888>
   1475c:	movne	r4, r3
   14760:	strd	r6, [sp, #8]
   14764:	mov	r6, r2
   14768:	strd	r8, [sp, #16]
   1476c:	mov	r9, r0
   14770:	strd	sl, [sp, #24]
   14774:	mov	sl, r1
   14778:	str	lr, [sp, #32]
   1477c:	sub	sp, sp, #44	; 0x2c
   14780:	bl	10ee8 <__errno_location@plt>
   14784:	ldr	r5, [r4, #4]
   14788:	mov	r7, r0
   1478c:	mov	r1, #0
   14790:	add	r8, r4, #8
   14794:	mov	r3, sl
   14798:	ldr	ip, [r4, #44]	; 0x2c
   1479c:	mov	r2, r9
   147a0:	mov	r0, r1
   147a4:	ldr	lr, [r7]
   147a8:	cmp	r6, r1
   147ac:	orreq	r5, r5, #1
   147b0:	str	ip, [sp, #16]
   147b4:	ldr	ip, [r4, #40]	; 0x28
   147b8:	stmib	sp, {r5, r8, ip}
   147bc:	ldr	ip, [r4]
   147c0:	str	lr, [sp, #28]
   147c4:	str	ip, [sp]
   147c8:	bl	12bfc <strspn@plt+0x1c48>
   147cc:	add	r1, r0, #1
   147d0:	mov	fp, r0
   147d4:	mov	r0, r1
   147d8:	str	r1, [sp, #36]	; 0x24
   147dc:	bl	15270 <strspn@plt+0x42bc>
   147e0:	ldr	ip, [r4, #44]	; 0x2c
   147e4:	mov	r3, sl
   147e8:	mov	r2, r9
   147ec:	ldr	r1, [sp, #36]	; 0x24
   147f0:	str	ip, [sp, #16]
   147f4:	ldr	ip, [r4, #40]	; 0x28
   147f8:	str	r0, [sp, #32]
   147fc:	stmib	sp, {r5, r8, ip}
   14800:	ldr	ip, [r4]
   14804:	str	ip, [sp]
   14808:	bl	12bfc <strspn@plt+0x1c48>
   1480c:	ldr	lr, [sp, #28]
   14810:	cmp	r6, #0
   14814:	ldr	r0, [sp, #32]
   14818:	str	lr, [r7]
   1481c:	strne	fp, [r6]
   14820:	add	sp, sp, #44	; 0x2c
   14824:	ldrd	r4, [sp]
   14828:	ldrd	r6, [sp, #8]
   1482c:	ldrd	r8, [sp, #16]
   14830:	ldrd	sl, [sp, #24]
   14834:	add	sp, sp, #32
   14838:	pop	{pc}		; (ldr pc, [sp], #4)
   1483c:	muleq	r2, r0, r2
   14840:	mov	r3, r2
   14844:	mov	r2, #0
   14848:	b	14750 <strspn@plt+0x379c>
   1484c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14850:	movw	r5, #28928	; 0x7100
   14854:	movt	r5, #2
   14858:	ldr	r3, [r5, #4]
   1485c:	strd	r6, [sp, #8]
   14860:	str	r8, [sp, #16]
   14864:	str	lr, [sp, #20]
   14868:	ldr	r7, [r5]
   1486c:	cmp	r3, #1
   14870:	ble	14894 <strspn@plt+0x38e0>
   14874:	mov	r4, #1
   14878:	add	r6, r7, #4
   1487c:	ldr	r0, [r6, r4, lsl #3]
   14880:	add	r4, r4, #1
   14884:	bl	1292c <strspn@plt+0x1978>
   14888:	ldr	r3, [r5, #4]
   1488c:	cmp	r3, r4
   14890:	bgt	1487c <strspn@plt+0x38c8>
   14894:	ldr	r0, [r7, #4]
   14898:	movw	r4, #29072	; 0x7190
   1489c:	movt	r4, #2
   148a0:	cmp	r0, r4
   148a4:	beq	148b8 <strspn@plt+0x3904>
   148a8:	bl	1292c <strspn@plt+0x1978>
   148ac:	mov	r3, #256	; 0x100
   148b0:	str	r3, [r5, #8]
   148b4:	str	r4, [r5, #12]
   148b8:	ldr	r4, [pc, #44]	; 148ec <strspn@plt+0x3938>
   148bc:	cmp	r7, r4
   148c0:	beq	148d0 <strspn@plt+0x391c>
   148c4:	mov	r0, r7
   148c8:	bl	1292c <strspn@plt+0x1978>
   148cc:	str	r4, [r5]
   148d0:	mov	r3, #1
   148d4:	ldrd	r6, [sp, #8]
   148d8:	str	r3, [r5, #4]
   148dc:	ldrd	r4, [sp]
   148e0:	ldr	r8, [sp, #16]
   148e4:	add	sp, sp, #20
   148e8:	pop	{pc}		; (ldr pc, [sp], #4)
   148ec:	andeq	r7, r2, r8, lsl #2
   148f0:	ldr	r3, [pc, #4]	; 148fc <strspn@plt+0x3948>
   148f4:	mvn	r2, #0
   148f8:	b	143bc <strspn@plt+0x3408>
   148fc:	muleq	r2, r0, r2
   14900:	ldr	r3, [pc]	; 14908 <strspn@plt+0x3954>
   14904:	b	143bc <strspn@plt+0x3408>
   14908:	muleq	r2, r0, r2
   1490c:	mov	r1, r0
   14910:	ldr	r3, [pc, #8]	; 14920 <strspn@plt+0x396c>
   14914:	mvn	r2, #0
   14918:	mov	r0, #0
   1491c:	b	143bc <strspn@plt+0x3408>
   14920:	muleq	r2, r0, r2
   14924:	mov	r2, r1
   14928:	ldr	r3, [pc, #8]	; 14938 <strspn@plt+0x3984>
   1492c:	mov	r1, r0
   14930:	mov	r0, #0
   14934:	b	143bc <strspn@plt+0x3408>
   14938:	muleq	r2, r0, r2
   1493c:	strd	r4, [sp, #-12]!
   14940:	mov	r5, r2
   14944:	mov	r4, r0
   14948:	str	lr, [sp, #8]
   1494c:	sub	sp, sp, #52	; 0x34
   14950:	mov	r0, sp
   14954:	bl	12a58 <strspn@plt+0x1aa4>
   14958:	mov	r3, sp
   1495c:	mov	r1, r5
   14960:	mov	r0, r4
   14964:	mvn	r2, #0
   14968:	bl	143bc <strspn@plt+0x3408>
   1496c:	add	sp, sp, #52	; 0x34
   14970:	ldrd	r4, [sp]
   14974:	add	sp, sp, #8
   14978:	pop	{pc}		; (ldr pc, [sp], #4)
   1497c:	strd	r4, [sp, #-16]!
   14980:	mov	r5, r2
   14984:	mov	r4, r0
   14988:	str	r6, [sp, #8]
   1498c:	mov	r6, r3
   14990:	str	lr, [sp, #12]
   14994:	sub	sp, sp, #48	; 0x30
   14998:	mov	r0, sp
   1499c:	bl	12a58 <strspn@plt+0x1aa4>
   149a0:	mov	r3, sp
   149a4:	mov	r2, r6
   149a8:	mov	r1, r5
   149ac:	mov	r0, r4
   149b0:	bl	143bc <strspn@plt+0x3408>
   149b4:	add	sp, sp, #48	; 0x30
   149b8:	ldrd	r4, [sp]
   149bc:	ldr	r6, [sp, #8]
   149c0:	add	sp, sp, #12
   149c4:	pop	{pc}		; (ldr pc, [sp], #4)
   149c8:	mov	r2, r1
   149cc:	mov	r1, r0
   149d0:	mov	r0, #0
   149d4:	b	1493c <strspn@plt+0x3988>
   149d8:	mov	r3, r2
   149dc:	mov	r2, r1
   149e0:	mov	r1, r0
   149e4:	mov	r0, #0
   149e8:	b	1497c <strspn@plt+0x39c8>
   149ec:	ldr	ip, [pc, #140]	; 14a80 <strspn@plt+0x3acc>
   149f0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   149f4:	ldrd	r4, [ip]
   149f8:	strd	r6, [sp, #8]
   149fc:	ldrd	r6, [ip, #8]
   14a00:	strd	r8, [sp, #16]
   14a04:	lsr	r9, r2, #5
   14a08:	str	lr, [sp, #24]
   14a0c:	sub	sp, sp, #52	; 0x34
   14a10:	and	lr, r2, #31
   14a14:	add	r8, sp, #8
   14a18:	mov	r2, r1
   14a1c:	strd	r4, [sp]
   14a20:	mov	r1, r0
   14a24:	mov	r3, sp
   14a28:	strd	r6, [sp, #8]
   14a2c:	mov	r0, #0
   14a30:	ldrd	r4, [ip, #16]
   14a34:	ldrd	r6, [ip, #24]
   14a38:	strd	r4, [sp, #16]
   14a3c:	ldrd	r4, [ip, #32]
   14a40:	strd	r6, [sp, #24]
   14a44:	ldrd	r6, [ip, #40]	; 0x28
   14a48:	strd	r4, [sp, #32]
   14a4c:	strd	r6, [sp, #40]	; 0x28
   14a50:	ldr	ip, [r8, r9, lsl #2]
   14a54:	mvn	r4, ip, lsr lr
   14a58:	and	r4, r4, #1
   14a5c:	eor	lr, ip, r4, lsl lr
   14a60:	str	lr, [r8, r9, lsl #2]
   14a64:	bl	143bc <strspn@plt+0x3408>
   14a68:	add	sp, sp, #52	; 0x34
   14a6c:	ldrd	r4, [sp]
   14a70:	ldrd	r6, [sp, #8]
   14a74:	ldrd	r8, [sp, #16]
   14a78:	add	sp, sp, #24
   14a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a80:	muleq	r2, r0, r2
   14a84:	mov	r2, r1
   14a88:	mvn	r1, #0
   14a8c:	b	149ec <strspn@plt+0x3a38>
   14a90:	mov	r2, #58	; 0x3a
   14a94:	mvn	r1, #0
   14a98:	b	149ec <strspn@plt+0x3a38>
   14a9c:	mov	r2, #58	; 0x3a
   14aa0:	b	149ec <strspn@plt+0x3a38>
   14aa4:	strd	r4, [sp, #-20]!	; 0xffffffec
   14aa8:	strd	r6, [sp, #8]
   14aac:	mov	r6, r0
   14ab0:	mov	r7, r2
   14ab4:	str	lr, [sp, #16]
   14ab8:	sub	sp, sp, #100	; 0x64
   14abc:	mov	r0, sp
   14ac0:	bl	12a58 <strspn@plt+0x1aa4>
   14ac4:	ldrd	r4, [sp, #8]
   14ac8:	mov	r1, r7
   14acc:	mov	r0, r6
   14ad0:	add	r3, sp, #48	; 0x30
   14ad4:	mvn	r2, #0
   14ad8:	ldrd	r6, [sp]
   14adc:	strd	r4, [sp, #56]	; 0x38
   14ae0:	ldrd	r4, [sp, #16]
   14ae4:	strd	r6, [sp, #48]	; 0x30
   14ae8:	ldrd	r6, [sp, #32]
   14aec:	ldr	lr, [sp, #60]	; 0x3c
   14af0:	strd	r4, [sp, #64]	; 0x40
   14af4:	ldrd	r4, [sp, #24]
   14af8:	mvn	ip, lr
   14afc:	and	ip, ip, #67108864	; 0x4000000
   14b00:	strd	r4, [sp, #72]	; 0x48
   14b04:	eor	ip, ip, lr
   14b08:	ldrd	r4, [sp, #40]	; 0x28
   14b0c:	str	ip, [sp, #60]	; 0x3c
   14b10:	strd	r6, [sp, #80]	; 0x50
   14b14:	strd	r4, [sp, #88]	; 0x58
   14b18:	bl	143bc <strspn@plt+0x3408>
   14b1c:	add	sp, sp, #100	; 0x64
   14b20:	ldrd	r4, [sp]
   14b24:	ldrd	r6, [sp, #8]
   14b28:	add	sp, sp, #16
   14b2c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b30:	ldr	ip, [pc, #156]	; 14bd4 <strspn@plt+0x3c20>
   14b34:	cmp	r2, #0
   14b38:	cmpne	r1, #0
   14b3c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14b40:	strd	r6, [sp, #8]
   14b44:	mov	r6, r2
   14b48:	str	r8, [sp, #16]
   14b4c:	mov	r8, r3
   14b50:	strd	sl, [sp, #20]
   14b54:	ldrd	r4, [ip]
   14b58:	str	lr, [sp, #28]
   14b5c:	sub	sp, sp, #48	; 0x30
   14b60:	mov	lr, #10
   14b64:	ldrd	r2, [ip, #8]
   14b68:	ldrd	sl, [ip, #16]
   14b6c:	strd	r4, [sp]
   14b70:	ldrd	r4, [ip, #32]
   14b74:	str	lr, [sp]
   14b78:	strd	r2, [sp, #8]
   14b7c:	strd	sl, [sp, #16]
   14b80:	ldrd	r2, [ip, #24]
   14b84:	ldrd	sl, [ip, #40]	; 0x28
   14b88:	strd	r2, [sp, #24]
   14b8c:	strd	r4, [sp, #32]
   14b90:	strd	sl, [sp, #40]	; 0x28
   14b94:	beq	14bd0 <strspn@plt+0x3c1c>
   14b98:	ldr	r2, [sp, #80]	; 0x50
   14b9c:	mov	r7, r1
   14ba0:	mov	r3, sp
   14ba4:	mov	r1, r8
   14ba8:	str	r7, [sp, #40]	; 0x28
   14bac:	str	r6, [sp, #44]	; 0x2c
   14bb0:	bl	143bc <strspn@plt+0x3408>
   14bb4:	add	sp, sp, #48	; 0x30
   14bb8:	ldrd	r4, [sp]
   14bbc:	ldrd	r6, [sp, #8]
   14bc0:	ldr	r8, [sp, #16]
   14bc4:	ldrd	sl, [sp, #20]
   14bc8:	add	sp, sp, #28
   14bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14bd0:	bl	10fa8 <abort@plt>
   14bd4:	muleq	r2, r0, r2
   14bd8:	mvn	ip, #0
   14bdc:	push	{lr}		; (str lr, [sp, #-4]!)
   14be0:	sub	sp, sp, #12
   14be4:	str	ip, [sp]
   14be8:	bl	14b30 <strspn@plt+0x3b7c>
   14bec:	add	sp, sp, #12
   14bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bf4:	mvn	ip, #0
   14bf8:	push	{lr}		; (str lr, [sp, #-4]!)
   14bfc:	sub	sp, sp, #12
   14c00:	mov	r3, r2
   14c04:	mov	r2, r1
   14c08:	mov	r1, r0
   14c0c:	mov	r0, #0
   14c10:	str	ip, [sp]
   14c14:	bl	14b30 <strspn@plt+0x3b7c>
   14c18:	add	sp, sp, #12
   14c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c20:	push	{lr}		; (str lr, [sp, #-4]!)
   14c24:	sub	sp, sp, #12
   14c28:	str	r3, [sp]
   14c2c:	mov	r3, r2
   14c30:	mov	r2, r1
   14c34:	mov	r1, r0
   14c38:	mov	r0, #0
   14c3c:	bl	14b30 <strspn@plt+0x3b7c>
   14c40:	add	sp, sp, #12
   14c44:	pop	{pc}		; (ldr pc, [sp], #4)
   14c48:	ldr	r3, [pc]	; 14c50 <strspn@plt+0x3c9c>
   14c4c:	b	143bc <strspn@plt+0x3408>
   14c50:	andeq	r7, r2, r0, lsl r1
   14c54:	mov	r2, r1
   14c58:	ldr	r3, [pc, #8]	; 14c68 <strspn@plt+0x3cb4>
   14c5c:	mov	r1, r0
   14c60:	mov	r0, #0
   14c64:	b	143bc <strspn@plt+0x3408>
   14c68:	andeq	r7, r2, r0, lsl r1
   14c6c:	ldr	r3, [pc, #4]	; 14c78 <strspn@plt+0x3cc4>
   14c70:	mvn	r2, #0
   14c74:	b	143bc <strspn@plt+0x3408>
   14c78:	andeq	r7, r2, r0, lsl r1
   14c7c:	mov	r1, r0
   14c80:	ldr	r3, [pc, #8]	; 14c90 <strspn@plt+0x3cdc>
   14c84:	mvn	r2, #0
   14c88:	mov	r0, #0
   14c8c:	b	143bc <strspn@plt+0x3408>
   14c90:	andeq	r7, r2, r0, lsl r1
   14c94:	cmp	r1, #0
   14c98:	strd	r4, [sp, #-16]!
   14c9c:	mov	ip, r3
   14ca0:	str	r6, [sp, #8]
   14ca4:	mov	r4, r0
   14ca8:	str	lr, [sp, #12]
   14cac:	sub	sp, sp, #32
   14cb0:	ldr	r5, [sp, #48]	; 0x30
   14cb4:	ldr	r6, [sp, #52]	; 0x34
   14cb8:	beq	14dfc <strspn@plt+0x3e48>
   14cbc:	mov	r3, r1
   14cc0:	mov	r1, #1
   14cc4:	stm	sp, {r2, ip}
   14cc8:	movw	r2, #26960	; 0x6950
   14ccc:	movt	r2, #1
   14cd0:	bl	10f30 <__fprintf_chk@plt>
   14cd4:	mov	r2, #5
   14cd8:	movw	r1, #26980	; 0x6964
   14cdc:	movt	r1, #1
   14ce0:	mov	r0, #0
   14ce4:	bl	10de0 <dcgettext@plt>
   14ce8:	movw	ip, #2022	; 0x7e6
   14cec:	mov	r3, r0
   14cf0:	mov	r1, #1
   14cf4:	movw	r2, #27708	; 0x6c3c
   14cf8:	movt	r2, #1
   14cfc:	mov	r0, r4
   14d00:	str	ip, [sp]
   14d04:	bl	10f30 <__fprintf_chk@plt>
   14d08:	mov	r1, r4
   14d0c:	mov	r0, #10
   14d10:	bl	10dd4 <fputc_unlocked@plt>
   14d14:	mov	r2, #5
   14d18:	movw	r1, #26984	; 0x6968
   14d1c:	movt	r1, #1
   14d20:	mov	r0, #0
   14d24:	bl	10de0 <dcgettext@plt>
   14d28:	mov	r2, r0
   14d2c:	mov	r1, #1
   14d30:	movw	r3, #27156	; 0x6a14
   14d34:	movt	r3, #1
   14d38:	mov	r0, r4
   14d3c:	bl	10f30 <__fprintf_chk@plt>
   14d40:	mov	r1, r4
   14d44:	mov	r0, #10
   14d48:	bl	10dd4 <fputc_unlocked@plt>
   14d4c:	cmp	r6, #9
   14d50:	ldrls	pc, [pc, r6, lsl #2]
   14d54:	b	15068 <strspn@plt+0x40b4>
   14d58:	andeq	r4, r1, r8, ror #27
   14d5c:	andeq	r4, r1, r8, lsl lr
   14d60:	andeq	r4, r1, r4, asr lr
   14d64:	muleq	r1, r4, lr
   14d68:	ldrdeq	r4, [r1], -ip
   14d6c:	andeq	r4, r1, r4, lsl pc
   14d70:	andeq	r4, r1, ip, asr pc
   14d74:			; <UNDEFINED> instruction: 0x00014fb0
   14d78:	andeq	r5, r1, r8
   14d7c:	andeq	r4, r1, r0, lsl #27
   14d80:	movw	r1, #27460	; 0x6b44
   14d84:	movt	r1, #1
   14d88:	mov	r2, #5
   14d8c:	mov	r0, #0
   14d90:	bl	10de0 <dcgettext@plt>
   14d94:	ldr	lr, [r5, #4]
   14d98:	mov	r2, r0
   14d9c:	mov	r1, #1
   14da0:	mov	r0, r4
   14da4:	ldr	r3, [r5, #8]
   14da8:	ldr	ip, [r5, #32]
   14dac:	str	lr, [sp]
   14db0:	ldr	lr, [r5, #12]
   14db4:	str	ip, [sp, #28]
   14db8:	ldr	ip, [r5, #28]
   14dbc:	str	r3, [sp, #4]
   14dc0:	ldr	r3, [r5, #16]
   14dc4:	str	lr, [sp, #8]
   14dc8:	ldr	lr, [r5, #20]
   14dcc:	str	ip, [sp, #24]
   14dd0:	ldr	ip, [r5, #24]
   14dd4:	str	r3, [sp, #12]
   14dd8:	ldr	r3, [r5]
   14ddc:	str	lr, [sp, #16]
   14de0:	str	ip, [sp, #20]
   14de4:	bl	10f30 <__fprintf_chk@plt>
   14de8:	add	sp, sp, #32
   14dec:	ldrd	r4, [sp]
   14df0:	ldr	r6, [sp, #8]
   14df4:	add	sp, sp, #12
   14df8:	pop	{pc}		; (ldr pc, [sp], #4)
   14dfc:	mov	r3, r2
   14e00:	mov	r1, #1
   14e04:	str	ip, [sp]
   14e08:	movw	r2, #26972	; 0x695c
   14e0c:	movt	r2, #1
   14e10:	bl	10f30 <__fprintf_chk@plt>
   14e14:	b	14cd4 <strspn@plt+0x3d20>
   14e18:	mov	r2, #5
   14e1c:	movw	r1, #27192	; 0x6a38
   14e20:	movt	r1, #1
   14e24:	mov	r0, #0
   14e28:	bl	10de0 <dcgettext@plt>
   14e2c:	ldr	r3, [r5]
   14e30:	mov	r2, r0
   14e34:	mov	r1, #1
   14e38:	mov	r0, r4
   14e3c:	add	sp, sp, #32
   14e40:	ldrd	r4, [sp]
   14e44:	ldr	r6, [sp, #8]
   14e48:	ldr	lr, [sp, #12]
   14e4c:	add	sp, sp, #16
   14e50:	b	10f30 <__fprintf_chk@plt>
   14e54:	mov	r2, #5
   14e58:	movw	r1, #27208	; 0x6a48
   14e5c:	movt	r1, #1
   14e60:	mov	r0, #0
   14e64:	bl	10de0 <dcgettext@plt>
   14e68:	ldm	r5, {r3, ip}
   14e6c:	mov	r2, r0
   14e70:	mov	r1, #1
   14e74:	mov	r0, r4
   14e78:	str	ip, [sp, #48]	; 0x30
   14e7c:	add	sp, sp, #32
   14e80:	ldrd	r4, [sp]
   14e84:	ldr	r6, [sp, #8]
   14e88:	ldr	lr, [sp, #12]
   14e8c:	add	sp, sp, #16
   14e90:	b	10f30 <__fprintf_chk@plt>
   14e94:	mov	r2, #5
   14e98:	movw	r1, #27232	; 0x6a60
   14e9c:	movt	r1, #1
   14ea0:	mov	r0, #0
   14ea4:	bl	10de0 <dcgettext@plt>
   14ea8:	ldm	r5, {r3, lr}
   14eac:	mov	r2, r0
   14eb0:	mov	r1, #1
   14eb4:	mov	r0, r4
   14eb8:	ldr	ip, [r5, #8]
   14ebc:	str	lr, [sp, #48]	; 0x30
   14ec0:	str	ip, [sp, #52]	; 0x34
   14ec4:	add	sp, sp, #32
   14ec8:	ldrd	r4, [sp]
   14ecc:	ldr	r6, [sp, #8]
   14ed0:	ldr	lr, [sp, #12]
   14ed4:	add	sp, sp, #16
   14ed8:	b	10f30 <__fprintf_chk@plt>
   14edc:	mov	r2, #5
   14ee0:	movw	r1, #27260	; 0x6a7c
   14ee4:	movt	r1, #1
   14ee8:	mov	r0, #0
   14eec:	bl	10de0 <dcgettext@plt>
   14ef0:	ldmib	r5, {r3, ip, lr}
   14ef4:	mov	r2, r0
   14ef8:	mov	r1, #1
   14efc:	mov	r0, r4
   14f00:	str	r3, [sp]
   14f04:	ldr	r3, [r5]
   14f08:	stmib	sp, {ip, lr}
   14f0c:	bl	10f30 <__fprintf_chk@plt>
   14f10:	b	14de8 <strspn@plt+0x3e34>
   14f14:	mov	r2, #5
   14f18:	movw	r1, #27292	; 0x6a9c
   14f1c:	movt	r1, #1
   14f20:	mov	r0, #0
   14f24:	bl	10de0 <dcgettext@plt>
   14f28:	ldmib	r5, {ip, lr}
   14f2c:	mov	r2, r0
   14f30:	mov	r1, #1
   14f34:	mov	r0, r4
   14f38:	ldr	r3, [r5, #16]
   14f3c:	str	ip, [sp]
   14f40:	ldr	ip, [r5, #12]
   14f44:	str	r3, [sp, #12]
   14f48:	ldr	r3, [r5]
   14f4c:	str	lr, [sp, #4]
   14f50:	str	ip, [sp, #8]
   14f54:	bl	10f30 <__fprintf_chk@plt>
   14f58:	b	14de8 <strspn@plt+0x3e34>
   14f5c:	mov	r2, #5
   14f60:	movw	r1, #27328	; 0x6ac0
   14f64:	movt	r1, #1
   14f68:	mov	r0, #0
   14f6c:	bl	10de0 <dcgettext@plt>
   14f70:	ldr	lr, [r5, #4]
   14f74:	mov	r2, r0
   14f78:	mov	r1, #1
   14f7c:	mov	r0, r4
   14f80:	ldr	r3, [r5, #8]
   14f84:	ldr	ip, [r5, #20]
   14f88:	str	lr, [sp]
   14f8c:	ldr	lr, [r5, #12]
   14f90:	str	ip, [sp, #16]
   14f94:	ldr	ip, [r5, #16]
   14f98:	str	r3, [sp, #4]
   14f9c:	ldr	r3, [r5]
   14fa0:	str	lr, [sp, #8]
   14fa4:	str	ip, [sp, #12]
   14fa8:	bl	10f30 <__fprintf_chk@plt>
   14fac:	b	14de8 <strspn@plt+0x3e34>
   14fb0:	mov	r2, #5
   14fb4:	movw	r1, #27368	; 0x6ae8
   14fb8:	movt	r1, #1
   14fbc:	mov	r0, #0
   14fc0:	bl	10de0 <dcgettext@plt>
   14fc4:	ldmib	r5, {r3, ip}
   14fc8:	mov	r2, r0
   14fcc:	mov	r1, #1
   14fd0:	mov	r0, r4
   14fd4:	ldr	lr, [r5, #24]
   14fd8:	str	r3, [sp]
   14fdc:	ldr	r3, [r5, #12]
   14fe0:	str	lr, [sp, #20]
   14fe4:	ldr	lr, [r5, #20]
   14fe8:	str	ip, [sp, #4]
   14fec:	ldr	ip, [r5, #16]
   14ff0:	str	r3, [sp, #8]
   14ff4:	ldr	r3, [r5]
   14ff8:	str	ip, [sp, #12]
   14ffc:	str	lr, [sp, #16]
   15000:	bl	10f30 <__fprintf_chk@plt>
   15004:	b	14de8 <strspn@plt+0x3e34>
   15008:	mov	r2, #5
   1500c:	movw	r1, #27412	; 0x6b14
   15010:	movt	r1, #1
   15014:	mov	r0, #0
   15018:	bl	10de0 <dcgettext@plt>
   1501c:	ldmib	r5, {ip, lr}
   15020:	mov	r2, r0
   15024:	mov	r1, #1
   15028:	mov	r0, r4
   1502c:	ldr	r3, [r5, #28]
   15030:	str	ip, [sp]
   15034:	ldr	ip, [r5, #12]
   15038:	str	r3, [sp, #24]
   1503c:	ldr	r3, [r5, #24]
   15040:	str	lr, [sp, #4]
   15044:	ldr	lr, [r5, #16]
   15048:	str	ip, [sp, #8]
   1504c:	ldr	ip, [r5, #20]
   15050:	str	r3, [sp, #20]
   15054:	ldr	r3, [r5]
   15058:	str	lr, [sp, #12]
   1505c:	str	ip, [sp, #16]
   15060:	bl	10f30 <__fprintf_chk@plt>
   15064:	b	14de8 <strspn@plt+0x3e34>
   15068:	movw	r1, #27512	; 0x6b78
   1506c:	movt	r1, #1
   15070:	b	14d88 <strspn@plt+0x3dd4>
   15074:	strd	r4, [sp, #-12]!
   15078:	str	lr, [sp, #8]
   1507c:	sub	sp, sp, #12
   15080:	ldr	r5, [sp, #24]
   15084:	ldr	ip, [r5]
   15088:	cmp	ip, #0
   1508c:	beq	150a8 <strspn@plt+0x40f4>
   15090:	mov	lr, r5
   15094:	mov	ip, #0
   15098:	ldr	r4, [lr, #4]!
   1509c:	add	ip, ip, #1
   150a0:	cmp	r4, #0
   150a4:	bne	15098 <strspn@plt+0x40e4>
   150a8:	stm	sp, {r5, ip}
   150ac:	bl	14c94 <strspn@plt+0x3ce0>
   150b0:	add	sp, sp, #12
   150b4:	ldrd	r4, [sp]
   150b8:	add	sp, sp, #8
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)
   150c0:	strd	r4, [sp, #-16]!
   150c4:	mov	ip, #0
   150c8:	str	r6, [sp, #8]
   150cc:	str	lr, [sp, #12]
   150d0:	sub	sp, sp, #48	; 0x30
   150d4:	ldr	r5, [sp, #64]	; 0x40
   150d8:	add	r6, sp, #8
   150dc:	mov	r4, r6
   150e0:	ldr	lr, [r5], #4
   150e4:	cmp	lr, #0
   150e8:	str	lr, [r4], #4
   150ec:	beq	150fc <strspn@plt+0x4148>
   150f0:	add	ip, ip, #1
   150f4:	cmp	ip, #10
   150f8:	bne	150e0 <strspn@plt+0x412c>
   150fc:	stm	sp, {r6, ip}
   15100:	bl	14c94 <strspn@plt+0x3ce0>
   15104:	add	sp, sp, #48	; 0x30
   15108:	ldrd	r4, [sp]
   1510c:	ldr	r6, [sp, #8]
   15110:	add	sp, sp, #12
   15114:	pop	{pc}		; (ldr pc, [sp], #4)
   15118:	push	{r3}		; (str r3, [sp, #-4]!)
   1511c:	mov	ip, #0
   15120:	strd	r4, [sp, #-12]!
   15124:	str	lr, [sp, #8]
   15128:	sub	sp, sp, #56	; 0x38
   1512c:	add	r3, sp, #72	; 0x48
   15130:	add	r5, sp, #16
   15134:	mov	r4, r3
   15138:	mov	lr, r5
   1513c:	str	r3, [sp, #12]
   15140:	ldr	r3, [r4], #4
   15144:	cmp	r3, #0
   15148:	str	r3, [lr], #4
   1514c:	beq	1515c <strspn@plt+0x41a8>
   15150:	add	ip, ip, #1
   15154:	cmp	ip, #10
   15158:	bne	15140 <strspn@plt+0x418c>
   1515c:	ldr	r3, [sp, #68]	; 0x44
   15160:	stm	sp, {r5, ip}
   15164:	bl	14c94 <strspn@plt+0x3ce0>
   15168:	add	sp, sp, #56	; 0x38
   1516c:	ldrd	r4, [sp]
   15170:	ldr	lr, [sp, #8]
   15174:	add	sp, sp, #12
   15178:	add	sp, sp, #4
   1517c:	bx	lr
   15180:	movw	r3, #29012	; 0x7154
   15184:	movt	r3, #2
   15188:	str	r4, [sp, #-8]!
   1518c:	mov	r0, #10
   15190:	ldr	r1, [r3]
   15194:	str	lr, [sp, #4]
   15198:	bl	10dd4 <fputc_unlocked@plt>
   1519c:	mov	r2, #5
   151a0:	movw	r1, #27572	; 0x6bb4
   151a4:	movt	r1, #1
   151a8:	mov	r0, #0
   151ac:	bl	10de0 <dcgettext@plt>
   151b0:	mov	r1, r0
   151b4:	movw	r2, #27592	; 0x6bc8
   151b8:	movt	r2, #1
   151bc:	mov	r0, #1
   151c0:	bl	10f18 <__printf_chk@plt>
   151c4:	mov	r2, #5
   151c8:	movw	r1, #27616	; 0x6be0
   151cc:	movt	r1, #1
   151d0:	mov	r0, #0
   151d4:	bl	10de0 <dcgettext@plt>
   151d8:	mov	r1, r0
   151dc:	movw	r3, #25812	; 0x64d4
   151e0:	movt	r3, #1
   151e4:	movw	r2, #25852	; 0x64fc
   151e8:	movt	r2, #1
   151ec:	mov	r0, #1
   151f0:	bl	10f18 <__printf_chk@plt>
   151f4:	mov	r2, #5
   151f8:	movw	r1, #27636	; 0x6bf4
   151fc:	movt	r1, #1
   15200:	mov	r0, #0
   15204:	bl	10de0 <dcgettext@plt>
   15208:	mov	r1, r0
   1520c:	movw	r2, #27676	; 0x6c1c
   15210:	movt	r2, #1
   15214:	mov	r0, #1
   15218:	ldr	r4, [sp]
   1521c:	ldr	lr, [sp, #4]
   15220:	add	sp, sp, #8
   15224:	b	10f18 <__printf_chk@plt>
   15228:	str	r4, [sp, #-8]!
   1522c:	str	lr, [sp, #4]
   15230:	bl	1581c <strspn@plt+0x4868>
   15234:	cmp	r0, #0
   15238:	beq	15248 <strspn@plt+0x4294>
   1523c:	ldr	r4, [sp]
   15240:	add	sp, sp, #4
   15244:	pop	{pc}		; (ldr pc, [sp], #4)
   15248:	bl	156a0 <strspn@plt+0x46ec>
   1524c:	str	r4, [sp, #-8]!
   15250:	str	lr, [sp, #4]
   15254:	bl	1581c <strspn@plt+0x4868>
   15258:	cmp	r0, #0
   1525c:	beq	1526c <strspn@plt+0x42b8>
   15260:	ldr	r4, [sp]
   15264:	add	sp, sp, #4
   15268:	pop	{pc}		; (ldr pc, [sp], #4)
   1526c:	bl	156a0 <strspn@plt+0x46ec>
   15270:	str	r4, [sp, #-8]!
   15274:	str	lr, [sp, #4]
   15278:	bl	1581c <strspn@plt+0x4868>
   1527c:	cmp	r0, #0
   15280:	beq	15290 <strspn@plt+0x42dc>
   15284:	ldr	r4, [sp]
   15288:	add	sp, sp, #4
   1528c:	pop	{pc}		; (ldr pc, [sp], #4)
   15290:	bl	156a0 <strspn@plt+0x46ec>
   15294:	strd	r4, [sp, #-16]!
   15298:	mov	r5, r0
   1529c:	mov	r4, r1
   152a0:	str	r6, [sp, #8]
   152a4:	str	lr, [sp, #12]
   152a8:	bl	15858 <strspn@plt+0x48a4>
   152ac:	cmp	r0, #0
   152b0:	beq	152c4 <strspn@plt+0x4310>
   152b4:	ldrd	r4, [sp]
   152b8:	ldr	r6, [sp, #8]
   152bc:	add	sp, sp, #12
   152c0:	pop	{pc}		; (ldr pc, [sp], #4)
   152c4:	adds	r4, r4, #0
   152c8:	movne	r4, #1
   152cc:	cmp	r5, #0
   152d0:	moveq	r4, #1
   152d4:	cmp	r4, #0
   152d8:	beq	152b4 <strspn@plt+0x4300>
   152dc:	bl	156a0 <strspn@plt+0x46ec>
   152e0:	cmp	r1, #0
   152e4:	orreq	r1, r1, #1
   152e8:	str	r4, [sp, #-8]!
   152ec:	str	lr, [sp, #4]
   152f0:	bl	15858 <strspn@plt+0x48a4>
   152f4:	cmp	r0, #0
   152f8:	beq	15308 <strspn@plt+0x4354>
   152fc:	ldr	r4, [sp]
   15300:	add	sp, sp, #4
   15304:	pop	{pc}		; (ldr pc, [sp], #4)
   15308:	bl	156a0 <strspn@plt+0x46ec>
   1530c:	strd	r4, [sp, #-16]!
   15310:	mov	r4, r0
   15314:	mov	r5, r2
   15318:	str	r6, [sp, #8]
   1531c:	mov	r6, r1
   15320:	str	lr, [sp, #12]
   15324:	bl	15ca0 <strspn@plt+0x4cec>
   15328:	cmp	r0, #0
   1532c:	beq	15340 <strspn@plt+0x438c>
   15330:	ldrd	r4, [sp]
   15334:	ldr	r6, [sp, #8]
   15338:	add	sp, sp, #12
   1533c:	pop	{pc}		; (ldr pc, [sp], #4)
   15340:	cmp	r4, #0
   15344:	beq	15354 <strspn@plt+0x43a0>
   15348:	cmp	r6, #0
   1534c:	cmpne	r5, #0
   15350:	beq	15330 <strspn@plt+0x437c>
   15354:	bl	156a0 <strspn@plt+0x46ec>
   15358:	b	1530c <strspn@plt+0x4358>
   1535c:	cmp	r2, #0
   15360:	cmpne	r1, #0
   15364:	str	r4, [sp, #-8]!
   15368:	moveq	r2, #1
   1536c:	str	lr, [sp, #4]
   15370:	moveq	r1, r2
   15374:	bl	15ca0 <strspn@plt+0x4cec>
   15378:	cmp	r0, #0
   1537c:	beq	1538c <strspn@plt+0x43d8>
   15380:	ldr	r4, [sp]
   15384:	add	sp, sp, #4
   15388:	pop	{pc}		; (ldr pc, [sp], #4)
   1538c:	bl	156a0 <strspn@plt+0x46ec>
   15390:	mov	r2, r1
   15394:	mov	r1, r0
   15398:	mov	r0, #0
   1539c:	b	1530c <strspn@plt+0x4358>
   153a0:	mov	r2, r1
   153a4:	mov	r1, r0
   153a8:	mov	r0, #0
   153ac:	b	1535c <strspn@plt+0x43a8>
   153b0:	cmp	r0, #0
   153b4:	strd	r4, [sp, #-16]!
   153b8:	mov	r5, r1
   153bc:	ldr	r4, [r1]
   153c0:	str	r6, [sp, #8]
   153c4:	str	lr, [sp, #12]
   153c8:	beq	153f8 <strspn@plt+0x4444>
   153cc:	lsr	r3, r4, #1
   153d0:	add	r3, r3, #1
   153d4:	adds	r4, r4, r3
   153d8:	bcs	15414 <strspn@plt+0x4460>
   153dc:	mov	r1, r4
   153e0:	bl	1530c <strspn@plt+0x4358>
   153e4:	ldr	r6, [sp, #8]
   153e8:	str	r4, [r5]
   153ec:	ldrd	r4, [sp]
   153f0:	add	sp, sp, #12
   153f4:	pop	{pc}		; (ldr pc, [sp], #4)
   153f8:	cmp	r4, #0
   153fc:	bne	153dc <strspn@plt+0x4428>
   15400:	mov	r4, #64	; 0x40
   15404:	udiv	r4, r4, r2
   15408:	cmp	r2, #64	; 0x40
   1540c:	addhi	r4, r4, #1
   15410:	b	153dc <strspn@plt+0x4428>
   15414:	bl	156a0 <strspn@plt+0x46ec>
   15418:	mov	r2, #1
   1541c:	b	153b0 <strspn@plt+0x43fc>
   15420:	ldr	ip, [r1]
   15424:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15428:	mov	r5, r1
   1542c:	strd	r6, [sp, #8]
   15430:	str	lr, [sp, #28]
   15434:	strd	r8, [sp, #16]
   15438:	asr	lr, ip, #1
   1543c:	ldr	r8, [sp, #32]
   15440:	str	sl, [sp, #24]
   15444:	adds	r4, ip, lr
   15448:	mvn	lr, r3
   1544c:	lsr	lr, lr, #31
   15450:	mvnvs	r4, #-2147483648	; 0x80000000
   15454:	cmp	r3, r4
   15458:	movge	r1, #0
   1545c:	andlt	r1, lr, #1
   15460:	cmp	r1, #0
   15464:	movne	r4, r3
   15468:	smull	r6, r7, r4, r8
   1546c:	cmp	r7, r6, asr #31
   15470:	bne	154f8 <strspn@plt+0x4544>
   15474:	cmp	r6, #63	; 0x3f
   15478:	mov	r1, r6
   1547c:	ble	154e0 <strspn@plt+0x452c>
   15480:	cmp	r0, #0
   15484:	sub	r6, r4, ip
   15488:	streq	r0, [r5]
   1548c:	cmp	r6, r2
   15490:	bge	154c0 <strspn@plt+0x450c>
   15494:	adds	r4, ip, r2
   15498:	bvs	154f4 <strspn@plt+0x4540>
   1549c:	cmp	r4, r3
   154a0:	movle	r3, #0
   154a4:	andgt	r3, lr, #1
   154a8:	cmp	r3, #0
   154ac:	bne	154f4 <strspn@plt+0x4540>
   154b0:	smull	r8, r9, r4, r8
   154b4:	cmp	r9, r8, asr #31
   154b8:	mov	r1, r8
   154bc:	bne	154f4 <strspn@plt+0x4540>
   154c0:	bl	15294 <strspn@plt+0x42e0>
   154c4:	ldrd	r6, [sp, #8]
   154c8:	ldrd	r8, [sp, #16]
   154cc:	ldr	sl, [sp, #24]
   154d0:	str	r4, [r5]
   154d4:	ldrd	r4, [sp]
   154d8:	add	sp, sp, #28
   154dc:	pop	{pc}		; (ldr pc, [sp], #4)
   154e0:	mov	r6, #64	; 0x40
   154e4:	sdiv	r4, r6, r8
   154e8:	mls	r1, r8, r4, r6
   154ec:	sub	r1, r6, r1
   154f0:	b	15480 <strspn@plt+0x44cc>
   154f4:	bl	156a0 <strspn@plt+0x46ec>
   154f8:	mvn	r6, #-2147483648	; 0x80000000
   154fc:	b	154e4 <strspn@plt+0x4530>
   15500:	mov	r1, #1
   15504:	str	r4, [sp, #-8]!
   15508:	str	lr, [sp, #4]
   1550c:	bl	157a8 <strspn@plt+0x47f4>
   15510:	cmp	r0, #0
   15514:	beq	15524 <strspn@plt+0x4570>
   15518:	ldr	r4, [sp]
   1551c:	add	sp, sp, #4
   15520:	pop	{pc}		; (ldr pc, [sp], #4)
   15524:	bl	156a0 <strspn@plt+0x46ec>
   15528:	mov	r1, #1
   1552c:	str	r4, [sp, #-8]!
   15530:	str	lr, [sp, #4]
   15534:	bl	157a8 <strspn@plt+0x47f4>
   15538:	cmp	r0, #0
   1553c:	beq	1554c <strspn@plt+0x4598>
   15540:	ldr	r4, [sp]
   15544:	add	sp, sp, #4
   15548:	pop	{pc}		; (ldr pc, [sp], #4)
   1554c:	bl	156a0 <strspn@plt+0x46ec>
   15550:	str	r4, [sp, #-8]!
   15554:	str	lr, [sp, #4]
   15558:	bl	157a8 <strspn@plt+0x47f4>
   1555c:	cmp	r0, #0
   15560:	beq	15570 <strspn@plt+0x45bc>
   15564:	ldr	r4, [sp]
   15568:	add	sp, sp, #4
   1556c:	pop	{pc}		; (ldr pc, [sp], #4)
   15570:	bl	156a0 <strspn@plt+0x46ec>
   15574:	str	r4, [sp, #-8]!
   15578:	str	lr, [sp, #4]
   1557c:	bl	157a8 <strspn@plt+0x47f4>
   15580:	cmp	r0, #0
   15584:	beq	15594 <strspn@plt+0x45e0>
   15588:	ldr	r4, [sp]
   1558c:	add	sp, sp, #4
   15590:	pop	{pc}		; (ldr pc, [sp], #4)
   15594:	bl	156a0 <strspn@plt+0x46ec>
   15598:	strd	r4, [sp, #-16]!
   1559c:	mov	r4, r1
   155a0:	str	r6, [sp, #8]
   155a4:	mov	r6, r0
   155a8:	mov	r0, r1
   155ac:	str	lr, [sp, #12]
   155b0:	bl	1581c <strspn@plt+0x4868>
   155b4:	subs	r5, r0, #0
   155b8:	beq	155dc <strspn@plt+0x4628>
   155bc:	mov	r2, r4
   155c0:	mov	r1, r6
   155c4:	bl	10d98 <memcpy@plt>
   155c8:	mov	r0, r5
   155cc:	ldrd	r4, [sp]
   155d0:	ldr	r6, [sp, #8]
   155d4:	add	sp, sp, #12
   155d8:	pop	{pc}		; (ldr pc, [sp], #4)
   155dc:	bl	156a0 <strspn@plt+0x46ec>
   155e0:	strd	r4, [sp, #-16]!
   155e4:	mov	r4, r1
   155e8:	str	r6, [sp, #8]
   155ec:	mov	r6, r0
   155f0:	mov	r0, r1
   155f4:	str	lr, [sp, #12]
   155f8:	bl	1581c <strspn@plt+0x4868>
   155fc:	subs	r5, r0, #0
   15600:	beq	15624 <strspn@plt+0x4670>
   15604:	mov	r2, r4
   15608:	mov	r1, r6
   1560c:	bl	10d98 <memcpy@plt>
   15610:	mov	r0, r5
   15614:	ldrd	r4, [sp]
   15618:	ldr	r6, [sp, #8]
   1561c:	add	sp, sp, #12
   15620:	pop	{pc}		; (ldr pc, [sp], #4)
   15624:	bl	156a0 <strspn@plt+0x46ec>
   15628:	strd	r4, [sp, #-16]!
   1562c:	mov	r4, r1
   15630:	str	r6, [sp, #8]
   15634:	mov	r6, r0
   15638:	add	r0, r1, #1
   1563c:	str	lr, [sp, #12]
   15640:	bl	1581c <strspn@plt+0x4868>
   15644:	subs	r5, r0, #0
   15648:	beq	15674 <strspn@plt+0x46c0>
   1564c:	mov	r3, #0
   15650:	mov	r1, r6
   15654:	mov	r2, r4
   15658:	strb	r3, [r5, r4]
   1565c:	bl	10d98 <memcpy@plt>
   15660:	mov	r0, r5
   15664:	ldrd	r4, [sp]
   15668:	ldr	r6, [sp, #8]
   1566c:	add	sp, sp, #12
   15670:	pop	{pc}		; (ldr pc, [sp], #4)
   15674:	bl	156a0 <strspn@plt+0x46ec>
   15678:	str	r4, [sp, #-8]!
   1567c:	mov	r4, r0
   15680:	str	lr, [sp, #4]
   15684:	bl	10ed0 <strlen@plt>
   15688:	add	r1, r0, #1
   1568c:	mov	r0, r4
   15690:	ldr	r4, [sp]
   15694:	ldr	lr, [sp, #4]
   15698:	add	sp, sp, #8
   1569c:	b	15598 <strspn@plt+0x45e4>
   156a0:	movw	r3, #28924	; 0x70fc
   156a4:	movt	r3, #2
   156a8:	str	r4, [sp, #-8]!
   156ac:	ldr	r4, [r3]
   156b0:	mov	r2, #5
   156b4:	movw	r1, #27756	; 0x6c6c
   156b8:	movt	r1, #1
   156bc:	mov	r0, #0
   156c0:	str	lr, [sp, #4]
   156c4:	bl	10de0 <dcgettext@plt>
   156c8:	mov	r3, r0
   156cc:	movw	r2, #26672	; 0x6830
   156d0:	movt	r2, #1
   156d4:	mov	r1, #0
   156d8:	mov	r0, r4
   156dc:	bl	10e58 <error@plt>
   156e0:	bl	10fa8 <abort@plt>
   156e4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   156e8:	mov	r5, r1
   156ec:	mov	r4, #0
   156f0:	strd	r6, [sp, #8]
   156f4:	mov	r6, r0
   156f8:	strd	r8, [sp, #16]
   156fc:	mov	r9, r3
   15700:	mov	r8, r2
   15704:	str	lr, [sp, #24]
   15708:	sub	sp, sp, #12
   1570c:	bl	10ee8 <__errno_location@plt>
   15710:	mov	r7, r0
   15714:	add	r1, sp, #4
   15718:	mov	r0, r6
   1571c:	str	r4, [r7]
   15720:	blx	r9
   15724:	ldr	r3, [sp, #4]
   15728:	cmp	r3, r6
   1572c:	beq	157a0 <strspn@plt+0x47ec>
   15730:	cmp	r5, r4
   15734:	beq	1577c <strspn@plt+0x47c8>
   15738:	vcmp.f64	d0, #0.0
   1573c:	vmrs	APSR_nzcv, fpscr
   15740:	moveq	r0, #1
   15744:	beq	1575c <strspn@plt+0x47a8>
   15748:	ldr	r0, [r7]
   1574c:	subs	r0, r0, #34	; 0x22
   15750:	movne	r0, #1
   15754:	cmp	r5, #0
   15758:	beq	15760 <strspn@plt+0x47ac>
   1575c:	str	r3, [r5]
   15760:	vstr	d0, [r8]
   15764:	add	sp, sp, #12
   15768:	ldrd	r4, [sp]
   1576c:	ldrd	r6, [sp, #8]
   15770:	ldrd	r8, [sp, #16]
   15774:	add	sp, sp, #24
   15778:	pop	{pc}		; (ldr pc, [sp], #4)
   1577c:	ldrb	r2, [r3]
   15780:	cmp	r2, r4
   15784:	movne	r0, r5
   15788:	bne	15760 <strspn@plt+0x47ac>
   1578c:	vcmp.f64	d0, #0.0
   15790:	vmrs	APSR_nzcv, fpscr
   15794:	bne	15748 <strspn@plt+0x4794>
   15798:	mov	r0, #1
   1579c:	b	15760 <strspn@plt+0x47ac>
   157a0:	mov	r0, r4
   157a4:	b	15754 <strspn@plt+0x47a0>
   157a8:	cmp	r1, #0
   157ac:	cmpne	r0, #0
   157b0:	beq	157fc <strspn@plt+0x4848>
   157b4:	strd	r4, [sp, #-16]!
   157b8:	umull	r4, r5, r0, r1
   157bc:	str	r6, [sp, #8]
   157c0:	str	lr, [sp, #12]
   157c4:	adds	r3, r5, #0
   157c8:	movne	r3, #1
   157cc:	cmp	r4, #0
   157d0:	blt	157dc <strspn@plt+0x4828>
   157d4:	cmp	r3, #0
   157d8:	beq	15808 <strspn@plt+0x4854>
   157dc:	bl	10ee8 <__errno_location@plt>
   157e0:	mov	r3, #12
   157e4:	ldrd	r4, [sp]
   157e8:	ldr	r6, [sp, #8]
   157ec:	add	sp, sp, #12
   157f0:	str	r3, [r0]
   157f4:	mov	r0, #0
   157f8:	pop	{pc}		; (ldr pc, [sp], #4)
   157fc:	mov	r1, #1
   15800:	mov	r0, r1
   15804:	b	10d20 <calloc@plt>
   15808:	ldrd	r4, [sp]
   1580c:	ldr	r6, [sp, #8]
   15810:	ldr	lr, [sp, #12]
   15814:	add	sp, sp, #16
   15818:	b	10d20 <calloc@plt>
   1581c:	cmp	r0, #0
   15820:	beq	1582c <strspn@plt+0x4878>
   15824:	blt	15834 <strspn@plt+0x4880>
   15828:	b	10e70 <malloc@plt>
   1582c:	mov	r0, #1
   15830:	b	10e70 <malloc@plt>
   15834:	str	r4, [sp, #-8]!
   15838:	str	lr, [sp, #4]
   1583c:	bl	10ee8 <__errno_location@plt>
   15840:	mov	r3, #12
   15844:	ldr	r4, [sp]
   15848:	add	sp, sp, #4
   1584c:	str	r3, [r0]
   15850:	mov	r0, #0
   15854:	pop	{pc}		; (ldr pc, [sp], #4)
   15858:	cmp	r0, #0
   1585c:	beq	15884 <strspn@plt+0x48d0>
   15860:	cmp	r1, #0
   15864:	str	r4, [sp, #-8]!
   15868:	str	lr, [sp, #4]
   1586c:	beq	1588c <strspn@plt+0x48d8>
   15870:	blt	158a0 <strspn@plt+0x48ec>
   15874:	ldr	r4, [sp]
   15878:	ldr	lr, [sp, #4]
   1587c:	add	sp, sp, #8
   15880:	b	10dec <realloc@plt>
   15884:	mov	r0, r1
   15888:	b	1581c <strspn@plt+0x4868>
   1588c:	bl	1292c <strspn@plt+0x1978>
   15890:	ldr	r4, [sp]
   15894:	add	sp, sp, #4
   15898:	mov	r0, #0
   1589c:	pop	{pc}		; (ldr pc, [sp], #4)
   158a0:	bl	10ee8 <__errno_location@plt>
   158a4:	mov	r3, #12
   158a8:	str	r3, [r0]
   158ac:	b	15890 <strspn@plt+0x48dc>
   158b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   158b4:	movw	r4, #29376	; 0x72c0
   158b8:	movt	r4, #2
   158bc:	ldr	r2, [r4]
   158c0:	mov	r5, r1
   158c4:	strd	r6, [sp, #8]
   158c8:	mov	r6, r0
   158cc:	str	r8, [sp, #16]
   158d0:	str	lr, [sp, #20]
   158d4:	vpush	{d8}
   158d8:	cmp	r2, #0
   158dc:	beq	15954 <strspn@plt+0x49a0>
   158e0:	ldr	r0, [r4]
   158e4:	cmp	r0, #0
   158e8:	beq	1592c <strspn@plt+0x4978>
   158ec:	bl	10d38 <uselocale@plt>
   158f0:	subs	r7, r0, #0
   158f4:	beq	1592c <strspn@plt+0x4978>
   158f8:	mov	r1, r5
   158fc:	mov	r0, r6
   15900:	bl	10db0 <strtold@plt>
   15904:	vmov.f64	d8, d0
   15908:	bl	10ee8 <__errno_location@plt>
   1590c:	mov	r4, r0
   15910:	mov	r0, r7
   15914:	ldr	r5, [r4]
   15918:	bl	10d38 <uselocale@plt>
   1591c:	cmp	r0, #0
   15920:	strne	r5, [r4]
   15924:	bne	15938 <strspn@plt+0x4984>
   15928:	bl	10fa8 <abort@plt>
   1592c:	vldr	d8, [pc, #60]	; 15970 <strspn@plt+0x49bc>
   15930:	cmp	r5, #0
   15934:	strne	r6, [r5]
   15938:	vmov.f64	d0, d8
   1593c:	vpop	{d8}
   15940:	ldrd	r4, [sp]
   15944:	ldrd	r6, [sp, #8]
   15948:	ldr	r8, [sp, #16]
   1594c:	add	sp, sp, #20
   15950:	pop	{pc}		; (ldr pc, [sp], #4)
   15954:	movw	r1, #26492	; 0x677c
   15958:	movt	r1, #1
   1595c:	movw	r0, #8127	; 0x1fbf
   15960:	bl	10f78 <newlocale@plt>
   15964:	str	r0, [r4]
   15968:	b	158e0 <strspn@plt+0x492c>
   1596c:	nop	{0}
	...
   15978:	strd	r4, [sp, #-16]!
   1597c:	mov	r4, r0
   15980:	str	r6, [sp, #8]
   15984:	str	lr, [sp, #12]
   15988:	bl	10e40 <__fpending@plt>
   1598c:	ldr	r5, [r4]
   15990:	mov	r6, r0
   15994:	mov	r0, r4
   15998:	bl	15a00 <strspn@plt+0x4a4c>
   1599c:	mov	r4, r0
   159a0:	and	r5, r5, #32
   159a4:	cmp	r5, #0
   159a8:	bne	159e0 <strspn@plt+0x4a2c>
   159ac:	cmp	r0, #0
   159b0:	beq	159cc <strspn@plt+0x4a18>
   159b4:	cmp	r6, #0
   159b8:	bne	159f8 <strspn@plt+0x4a44>
   159bc:	bl	10ee8 <__errno_location@plt>
   159c0:	ldr	r4, [r0]
   159c4:	subs	r4, r4, #9
   159c8:	mvnne	r4, #0
   159cc:	mov	r0, r4
   159d0:	ldrd	r4, [sp]
   159d4:	ldr	r6, [sp, #8]
   159d8:	add	sp, sp, #12
   159dc:	pop	{pc}		; (ldr pc, [sp], #4)
   159e0:	cmp	r0, #0
   159e4:	bne	159f8 <strspn@plt+0x4a44>
   159e8:	bl	10ee8 <__errno_location@plt>
   159ec:	str	r4, [r0]
   159f0:	mvn	r4, #0
   159f4:	b	159cc <strspn@plt+0x4a18>
   159f8:	mvn	r4, #0
   159fc:	b	159cc <strspn@plt+0x4a18>
   15a00:	strd	r4, [sp, #-12]!
   15a04:	mov	r4, r0
   15a08:	str	lr, [sp, #8]
   15a0c:	sub	sp, sp, #12
   15a10:	bl	10f24 <fileno@plt>
   15a14:	cmp	r0, #0
   15a18:	mov	r0, r4
   15a1c:	blt	15aa0 <strspn@plt+0x4aec>
   15a20:	bl	10e88 <__freading@plt>
   15a24:	cmp	r0, #0
   15a28:	bne	15a6c <strspn@plt+0x4ab8>
   15a2c:	mov	r0, r4
   15a30:	bl	15ab4 <strspn@plt+0x4b00>
   15a34:	cmp	r0, #0
   15a38:	beq	15a9c <strspn@plt+0x4ae8>
   15a3c:	bl	10ee8 <__errno_location@plt>
   15a40:	mov	r5, r0
   15a44:	mov	r0, r4
   15a48:	ldr	r4, [r5]
   15a4c:	bl	10f3c <fclose@plt>
   15a50:	cmp	r4, #0
   15a54:	mvnne	r0, #0
   15a58:	strne	r4, [r5]
   15a5c:	add	sp, sp, #12
   15a60:	ldrd	r4, [sp]
   15a64:	add	sp, sp, #8
   15a68:	pop	{pc}		; (ldr pc, [sp], #4)
   15a6c:	mov	r0, r4
   15a70:	bl	10f24 <fileno@plt>
   15a74:	mov	r1, #1
   15a78:	mov	r2, #0
   15a7c:	mov	r3, #0
   15a80:	str	r1, [sp]
   15a84:	bl	10e1c <lseek64@plt>
   15a88:	mvn	r3, #0
   15a8c:	mvn	r2, #0
   15a90:	cmp	r1, r3
   15a94:	cmpeq	r0, r2
   15a98:	bne	15a2c <strspn@plt+0x4a78>
   15a9c:	mov	r0, r4
   15aa0:	add	sp, sp, #12
   15aa4:	ldrd	r4, [sp]
   15aa8:	ldr	lr, [sp, #8]
   15aac:	add	sp, sp, #12
   15ab0:	b	10f3c <fclose@plt>
   15ab4:	str	r4, [sp, #-8]!
   15ab8:	subs	r4, r0, #0
   15abc:	str	lr, [sp, #4]
   15ac0:	sub	sp, sp, #8
   15ac4:	beq	15ae0 <strspn@plt+0x4b2c>
   15ac8:	bl	10e88 <__freading@plt>
   15acc:	cmp	r0, #0
   15ad0:	beq	15ae0 <strspn@plt+0x4b2c>
   15ad4:	ldr	r3, [r4]
   15ad8:	tst	r3, #256	; 0x100
   15adc:	bne	15af8 <strspn@plt+0x4b44>
   15ae0:	mov	r0, r4
   15ae4:	add	sp, sp, #8
   15ae8:	ldr	r4, [sp]
   15aec:	ldr	lr, [sp, #4]
   15af0:	add	sp, sp, #8
   15af4:	b	10d68 <fflush@plt>
   15af8:	mov	r1, #1
   15afc:	mov	r2, #0
   15b00:	mov	r3, #0
   15b04:	mov	r0, r4
   15b08:	str	r1, [sp]
   15b0c:	bl	15b14 <strspn@plt+0x4b60>
   15b10:	b	15ae0 <strspn@plt+0x4b2c>
   15b14:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b18:	mov	r4, r0
   15b1c:	ldr	ip, [r0, #4]
   15b20:	strd	r6, [sp, #8]
   15b24:	str	lr, [sp, #20]
   15b28:	ldr	lr, [r0, #8]
   15b2c:	str	r8, [sp, #16]
   15b30:	sub	sp, sp, #8
   15b34:	ldr	r5, [sp, #32]
   15b38:	cmp	lr, ip
   15b3c:	beq	15b64 <strspn@plt+0x4bb0>
   15b40:	mov	r0, r4
   15b44:	str	r5, [sp, #32]
   15b48:	add	sp, sp, #8
   15b4c:	ldrd	r4, [sp]
   15b50:	ldrd	r6, [sp, #8]
   15b54:	ldr	r8, [sp, #16]
   15b58:	ldr	lr, [sp, #20]
   15b5c:	add	sp, sp, #24
   15b60:	b	10f48 <fseeko64@plt>
   15b64:	ldr	ip, [r0, #16]
   15b68:	ldr	lr, [r0, #20]
   15b6c:	cmp	lr, ip
   15b70:	bne	15b40 <strspn@plt+0x4b8c>
   15b74:	ldr	r8, [r0, #36]	; 0x24
   15b78:	cmp	r8, #0
   15b7c:	bne	15b40 <strspn@plt+0x4b8c>
   15b80:	mov	r6, r2
   15b84:	mov	r7, r3
   15b88:	bl	10f24 <fileno@plt>
   15b8c:	mov	r2, r6
   15b90:	mov	r3, r7
   15b94:	str	r5, [sp]
   15b98:	bl	10e1c <lseek64@plt>
   15b9c:	mvn	r3, #0
   15ba0:	mvn	r2, #0
   15ba4:	cmp	r1, r3
   15ba8:	cmpeq	r0, r2
   15bac:	beq	15bdc <strspn@plt+0x4c28>
   15bb0:	ldr	r3, [r4]
   15bb4:	strd	r0, [r4, #80]	; 0x50
   15bb8:	bic	r3, r3, #16
   15bbc:	str	r3, [r4]
   15bc0:	mov	r0, r8
   15bc4:	add	sp, sp, #8
   15bc8:	ldrd	r4, [sp]
   15bcc:	ldrd	r6, [sp, #8]
   15bd0:	ldr	r8, [sp, #16]
   15bd4:	add	sp, sp, #20
   15bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   15bdc:	mvn	r8, #0
   15be0:	b	15bc0 <strspn@plt+0x4c0c>
   15be4:	mov	r0, #14
   15be8:	str	r4, [sp, #-8]!
   15bec:	str	lr, [sp, #4]
   15bf0:	bl	10f6c <nl_langinfo@plt>
   15bf4:	cmp	r0, #0
   15bf8:	beq	15c1c <strspn@plt+0x4c68>
   15bfc:	ldrb	r2, [r0]
   15c00:	movw	r3, #27776	; 0x6c80
   15c04:	movt	r3, #1
   15c08:	ldr	r4, [sp]
   15c0c:	add	sp, sp, #4
   15c10:	cmp	r2, #0
   15c14:	moveq	r0, r3
   15c18:	pop	{pc}		; (ldr pc, [sp], #4)
   15c1c:	ldr	r4, [sp]
   15c20:	add	sp, sp, #4
   15c24:	movw	r0, #27776	; 0x6c80
   15c28:	movt	r0, #1
   15c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c30:	strd	r4, [sp, #-20]!	; 0xffffffec
   15c34:	mov	r5, r2
   15c38:	strd	r6, [sp, #8]
   15c3c:	subs	r6, r0, #0
   15c40:	mov	r7, r1
   15c44:	str	lr, [sp, #16]
   15c48:	sub	sp, sp, #12
   15c4c:	addeq	r6, sp, #4
   15c50:	mov	r0, r6
   15c54:	bl	10e4c <mbrtowc@plt>
   15c58:	cmp	r5, #0
   15c5c:	cmnne	r0, #3
   15c60:	mov	r4, r0
   15c64:	bhi	15c80 <strspn@plt+0x4ccc>
   15c68:	mov	r0, r4
   15c6c:	add	sp, sp, #12
   15c70:	ldrd	r4, [sp]
   15c74:	ldrd	r6, [sp, #8]
   15c78:	add	sp, sp, #16
   15c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c80:	mov	r0, #0
   15c84:	bl	15cd8 <strspn@plt+0x4d24>
   15c88:	cmp	r0, #0
   15c8c:	bne	15c68 <strspn@plt+0x4cb4>
   15c90:	ldrb	r3, [r7]
   15c94:	mov	r4, #1
   15c98:	str	r3, [r6]
   15c9c:	b	15c68 <strspn@plt+0x4cb4>
   15ca0:	umull	r2, r3, r1, r2
   15ca4:	cmp	r3, #0
   15ca8:	bne	15cb4 <strspn@plt+0x4d00>
   15cac:	mov	r1, r2
   15cb0:	b	15858 <strspn@plt+0x48a4>
   15cb4:	str	r4, [sp, #-8]!
   15cb8:	str	lr, [sp, #4]
   15cbc:	bl	10ee8 <__errno_location@plt>
   15cc0:	mov	r3, #12
   15cc4:	ldr	r4, [sp]
   15cc8:	add	sp, sp, #4
   15ccc:	str	r3, [r0]
   15cd0:	mov	r0, #0
   15cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   15cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   15cdc:	sub	sp, sp, #268	; 0x10c
   15ce0:	movw	r2, #257	; 0x101
   15ce4:	add	r1, sp, #4
   15ce8:	bl	15d30 <strspn@plt+0x4d7c>
   15cec:	cmp	r0, #0
   15cf0:	movne	r0, #0
   15cf4:	bne	15d28 <strspn@plt+0x4d74>
   15cf8:	movw	r1, #26492	; 0x677c
   15cfc:	movt	r1, #1
   15d00:	add	r0, sp, #4
   15d04:	bl	10d44 <strcmp@plt>
   15d08:	cmp	r0, #0
   15d0c:	beq	15d28 <strspn@plt+0x4d74>
   15d10:	add	r0, sp, #4
   15d14:	movw	r1, #27784	; 0x6c88
   15d18:	movt	r1, #1
   15d1c:	bl	10d44 <strcmp@plt>
   15d20:	adds	r0, r0, #0
   15d24:	movne	r0, #1
   15d28:	add	sp, sp, #268	; 0x10c
   15d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d30:	strd	r4, [sp, #-16]!
   15d34:	mov	r5, r1
   15d38:	mov	r1, #0
   15d3c:	mov	r4, r2
   15d40:	str	r6, [sp, #8]
   15d44:	str	lr, [sp, #12]
   15d48:	bl	10f54 <setlocale@plt>
   15d4c:	subs	r6, r0, #0
   15d50:	beq	15dd0 <strspn@plt+0x4e1c>
   15d54:	bl	10ed0 <strlen@plt>
   15d58:	cmp	r4, r0
   15d5c:	bhi	15d7c <strspn@plt+0x4dc8>
   15d60:	cmp	r4, #0
   15d64:	moveq	r0, #34	; 0x22
   15d68:	bne	15da0 <strspn@plt+0x4dec>
   15d6c:	ldrd	r4, [sp]
   15d70:	ldr	r6, [sp, #8]
   15d74:	add	sp, sp, #12
   15d78:	pop	{pc}		; (ldr pc, [sp], #4)
   15d7c:	add	r2, r0, #1
   15d80:	mov	r1, r6
   15d84:	mov	r0, r5
   15d88:	bl	10d98 <memcpy@plt>
   15d8c:	ldrd	r4, [sp]
   15d90:	mov	r0, #0
   15d94:	ldr	r6, [sp, #8]
   15d98:	add	sp, sp, #12
   15d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15da0:	sub	r4, r4, #1
   15da4:	mov	r1, r6
   15da8:	mov	r2, r4
   15dac:	mov	r0, r5
   15db0:	bl	10d98 <memcpy@plt>
   15db4:	mov	r3, #0
   15db8:	mov	r0, #34	; 0x22
   15dbc:	strb	r3, [r5, r4]
   15dc0:	ldrd	r4, [sp]
   15dc4:	ldr	r6, [sp, #8]
   15dc8:	add	sp, sp, #12
   15dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   15dd0:	cmp	r4, #0
   15dd4:	mov	r0, #22
   15dd8:	strbne	r6, [r5]
   15ddc:	ldrd	r4, [sp]
   15de0:	ldr	r6, [sp, #8]
   15de4:	add	sp, sp, #12
   15de8:	pop	{pc}		; (ldr pc, [sp], #4)
   15dec:	mov	r1, #0
   15df0:	b	10f54 <setlocale@plt>
   15df4:	andeq	r0, r0, r0
   15df8:	vmov	d6, r0, r1
   15dfc:	vldr	d7, [pc, #36]	; 15e28 <strspn@plt+0x4e74>
   15e00:	vldr	d5, [pc, #40]	; 15e30 <strspn@plt+0x4e7c>
   15e04:	vmul.f64	d7, d6, d7
   15e08:	vcvt.u32.f64	s14, d7
   15e0c:	vcvt.f64.u32	d4, s14
   15e10:	vmov	r1, s14
   15e14:	vmls.f64	d6, d4, d5
   15e18:	vcvt.u32.f64	s15, d6
   15e1c:	vmov	r0, s15
   15e20:	bx	lr
   15e24:	nop			; (mov r0, r0)
   15e28:	andeq	r0, r0, r0
   15e2c:	ldclcc	0, cr0, [r0]
   15e30:	andeq	r0, r0, r0
   15e34:	mvnsmi	r0, r0
   15e38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e3c:	mov	r7, r0
   15e40:	ldr	r6, [pc, #72]	; 15e90 <strspn@plt+0x4edc>
   15e44:	ldr	r5, [pc, #72]	; 15e94 <strspn@plt+0x4ee0>
   15e48:	add	r6, pc, r6
   15e4c:	add	r5, pc, r5
   15e50:	sub	r6, r6, r5
   15e54:	mov	r8, r1
   15e58:	mov	r9, r2
   15e5c:	bl	10d00 <calloc@plt-0x20>
   15e60:	asrs	r6, r6, #2
   15e64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e68:	mov	r4, #0
   15e6c:	add	r4, r4, #1
   15e70:	ldr	r3, [r5], #4
   15e74:	mov	r2, r9
   15e78:	mov	r1, r8
   15e7c:	mov	r0, r7
   15e80:	blx	r3
   15e84:	cmp	r6, r4
   15e88:	bne	15e6c <strspn@plt+0x4eb8>
   15e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e90:	andeq	r1, r1, r4, asr #1
   15e94:	strheq	r1, [r1], -ip
   15e98:	bx	lr
   15e9c:	ldr	r3, [pc, #12]	; 15eb0 <strspn@plt+0x4efc>
   15ea0:	mov	r1, #0
   15ea4:	add	r3, pc, r3
   15ea8:	ldr	r2, [r3]
   15eac:	b	10f00 <__cxa_atexit@plt>
   15eb0:	andeq	r1, r1, r8, asr #4

Disassembly of section .fini:

00015eb4 <.fini>:
   15eb4:	push	{r3, lr}
   15eb8:	pop	{r3, pc}
