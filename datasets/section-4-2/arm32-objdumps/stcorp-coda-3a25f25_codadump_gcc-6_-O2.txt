
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000121a8 <.init>:
   121a8:	push	{r3, lr}
   121ac:	bl	14074 <_start@@Base+0x3c>
   121b0:	pop	{r3, pc}

Disassembly of section .plt:

000121b4 <coda_cursor_get_byte_size@plt-0x14>:
   121b4:	push	{lr}		; (str lr, [sp, #-4]!)
   121b8:	ldr	lr, [pc, #4]	; 121c4 <coda_cursor_get_byte_size@plt-0x4>
   121bc:	add	lr, pc, lr
   121c0:	ldr	pc, [lr, #8]!
   121c4:	andeq	sl, r1, ip, lsr lr

000121c8 <coda_cursor_get_byte_size@plt>:
   121c8:	add	ip, pc, #0, 12
   121cc:	add	ip, ip, #106496	; 0x1a000
   121d0:	ldr	pc, [ip, #3644]!	; 0xe3c

000121d4 <coda_type_get_special_type_name@plt>:
   121d4:	add	ip, pc, #0, 12
   121d8:	add	ip, ip, #106496	; 0x1a000
   121dc:	ldr	pc, [ip, #3636]!	; 0xe34

000121e0 <coda_set_option_use_fast_size_expressions@plt>:
   121e0:	add	ip, pc, #0, 12
   121e4:	add	ip, ip, #106496	; 0x1a000
   121e8:	ldr	pc, [ip, #3628]!	; 0xe2c

000121ec <raise@plt>:
   121ec:	add	ip, pc, #0, 12
   121f0:	add	ip, ip, #106496	; 0x1a000
   121f4:	ldr	pc, [ip, #3620]!	; 0xe24

000121f8 <coda_get_option_bypass_special_types@plt>:
   121f8:	add	ip, pc, #0, 12
   121fc:	add	ip, ip, #106496	; 0x1a000
   12200:	ldr	pc, [ip, #3612]!	; 0xe1c

00012204 <coda_set_option_perform_boundary_checks@plt>:
   12204:	add	ip, pc, #0, 12
   12208:	add	ip, ip, #106496	; 0x1a000
   1220c:	ldr	pc, [ip, #3604]!	; 0xe14

00012210 <strcmp@plt>:
   12210:	add	ip, pc, #0, 12
   12214:	add	ip, ip, #106496	; 0x1a000
   12218:	ldr	pc, [ip, #3596]!	; 0xe0c

0001221c <strtol@plt>:
   1221c:	add	ip, pc, #0, 12
   12220:	add	ip, ip, #106496	; 0x1a000
   12224:	ldr	pc, [ip, #3588]!	; 0xe04

00012228 <coda_type_get_record_field_hidden_status@plt>:
   12228:	add	ip, pc, #0, 12
   1222c:	add	ip, ip, #106496	; 0x1a000
   12230:	ldr	pc, [ip, #3580]!	; 0xdfc

00012234 <printf@plt>:
   12234:	add	ip, pc, #0, 12
   12238:	add	ip, ip, #106496	; 0x1a000
   1223c:	ldr	pc, [ip, #3572]!	; 0xdf4

00012240 <coda_cursor_get_record_field_available_status@plt>:
   12240:	add	ip, pc, #0, 12
   12244:	add	ip, ip, #106496	; 0x1a000
   12248:	ldr	pc, [ip, #3564]!	; 0xdec

0001224c <fopen@plt>:
   1224c:	add	ip, pc, #0, 12
   12250:	add	ip, ip, #106496	; 0x1a000
   12254:	ldr	pc, [ip, #3556]!	; 0xde4

00012258 <coda_set_error@plt>:
   12258:	add	ip, pc, #0, 12
   1225c:	add	ip, ip, #106496	; 0x1a000
   12260:	ldr	pc, [ip, #3548]!	; 0xddc

00012264 <coda_open@plt>:
   12264:	add	ip, pc, #0, 12
   12268:	add	ip, ip, #106496	; 0x1a000
   1226c:	ldr	pc, [ip, #3540]!	; 0xdd4

00012270 <fflush@plt>:
   12270:	add	ip, pc, #0, 12
   12274:	add	ip, ip, #106496	; 0x1a000
   12278:	ldr	pc, [ip, #3532]!	; 0xdcc

0001227c <coda_time_double_to_string@plt>:
   1227c:	add	ip, pc, #0, 12
   12280:	add	ip, ip, #106496	; 0x1a000
   12284:	ldr	pc, [ip, #3524]!	; 0xdc4

00012288 <coda_cursor_get_num_elements@plt>:
   12288:	add	ip, pc, #0, 12
   1228c:	add	ip, ip, #106496	; 0x1a000
   12290:	ldr	pc, [ip, #3516]!	; 0xdbc

00012294 <coda_str64u@plt>:
   12294:	add	ip, pc, #0, 12
   12298:	add	ip, ip, #106496	; 0x1a000
   1229c:	ldr	pc, [ip, #3508]!	; 0xdb4

000122a0 <free@plt>:
   122a0:	add	ip, pc, #0, 12
   122a4:	add	ip, ip, #106496	; 0x1a000
   122a8:	ldr	pc, [ip, #3500]!	; 0xdac

000122ac <coda_set_option_use_mmap@plt>:
   122ac:	add	ip, pc, #0, 12
   122b0:	add	ip, ip, #106496	; 0x1a000
   122b4:	ldr	pc, [ip, #3492]!	; 0xda4

000122b8 <coda_set_definition_path_conditional@plt>:
   122b8:	add	ip, pc, #0, 12
   122bc:	add	ip, ip, #106496	; 0x1a000
   122c0:	ldr	pc, [ip, #3484]!	; 0xd9c

000122c4 <coda_cursor_read_uint32@plt>:
   122c4:	add	ip, pc, #0, 12
   122c8:	add	ip, ip, #106496	; 0x1a000
   122cc:	ldr	pc, [ip, #3476]!	; 0xd94

000122d0 <coda_set_option_bypass_special_types@plt>:
   122d0:	add	ip, pc, #0, 12
   122d4:	add	ip, ip, #106496	; 0x1a000
   122d8:	ldr	pc, [ip, #3468]!	; 0xd8c

000122dc <coda_type_get_record_field_type@plt>:
   122dc:	add	ip, pc, #0, 12
   122e0:	add	ip, ip, #106496	; 0x1a000
   122e4:	ldr	pc, [ip, #3460]!	; 0xd84

000122e8 <coda_cursor_get_type@plt>:
   122e8:	add	ip, pc, #0, 12
   122ec:	add	ip, ip, #106496	; 0x1a000
   122f0:	ldr	pc, [ip, #3452]!	; 0xd7c

000122f4 <memcpy@plt>:
   122f4:	add	ip, pc, #0, 12
   122f8:	add	ip, ip, #106496	; 0x1a000
   122fc:	ldr	pc, [ip, #3444]!	; 0xd74

00012300 <coda_isInf@plt>:
   12300:	add	ip, pc, #0, 12
   12304:	add	ip, ip, #106496	; 0x1a000
   12308:	ldr	pc, [ip, #3436]!	; 0xd6c

0001230c <coda_type_get_bit_size@plt>:
   1230c:	add	ip, pc, #0, 12
   12310:	add	ip, ip, #106496	; 0x1a000
   12314:	ldr	pc, [ip, #3428]!	; 0xd64

00012318 <coda_type_get_record_field_available_status@plt>:
   12318:	add	ip, pc, #0, 12
   1231c:	add	ip, ip, #106496	; 0x1a000
   12320:	ldr	pc, [ip, #3420]!	; 0xd5c

00012324 <coda_cursor_has_attributes@plt>:
   12324:	add	ip, pc, #0, 12
   12328:	add	ip, ip, #106496	; 0x1a000
   1232c:	ldr	pc, [ip, #3412]!	; 0xd54

00012330 <coda_cursor_get_type_class@plt>:
   12330:	add	ip, pc, #0, 12
   12334:	add	ip, ip, #106496	; 0x1a000
   12338:	ldr	pc, [ip, #3404]!	; 0xd4c

0001233c <coda_set_definition_path@plt>:
   1233c:	add	ip, pc, #0, 12
   12340:	add	ip, ip, #106496	; 0x1a000
   12344:	ldr	pc, [ip, #3396]!	; 0xd44

00012348 <coda_get_product_format@plt>:
   12348:	add	ip, pc, #0, 12
   1234c:	add	ip, ip, #106496	; 0x1a000
   12350:	ldr	pc, [ip, #3388]!	; 0xd3c

00012354 <coda_type_get_unit@plt>:
   12354:	add	ip, pc, #0, 12
   12358:	add	ip, ip, #106496	; 0x1a000
   1235c:	ldr	pc, [ip, #3380]!	; 0xd34

00012360 <coda_type_get_description@plt>:
   12360:	add	ip, pc, #0, 12
   12364:	add	ip, ip, #106496	; 0x1a000
   12368:	ldr	pc, [ip, #3372]!	; 0xd2c

0001236c <coda_cursor_get_special_type@plt>:
   1236c:	add	ip, pc, #0, 12
   12370:	add	ip, ip, #106496	; 0x1a000
   12374:	ldr	pc, [ip, #3364]!	; 0xd24

00012378 <coda_cursor_goto_first_array_element@plt>:
   12378:	add	ip, pc, #0, 12
   1237c:	add	ip, ip, #106496	; 0x1a000
   12380:	ldr	pc, [ip, #3356]!	; 0xd1c

00012384 <fwrite@plt>:
   12384:	add	ip, pc, #0, 12
   12388:	add	ip, ip, #106496	; 0x1a000
   1238c:	ldr	pc, [ip, #3348]!	; 0xd14

00012390 <coda_cursor_set_product@plt>:
   12390:	add	ip, pc, #0, 12
   12394:	add	ip, ip, #106496	; 0x1a000
   12398:	ldr	pc, [ip, #3340]!	; 0xd0c

0001239c <coda_cursor_goto_first_record_field@plt>:
   1239c:	add	ip, pc, #0, 12
   123a0:	add	ip, ip, #106496	; 0x1a000
   123a4:	ldr	pc, [ip, #3332]!	; 0xd04

000123a8 <coda_cursor_goto_record_field_by_index@plt>:
   123a8:	add	ip, pc, #0, 12
   123ac:	add	ip, ip, #106496	; 0x1a000
   123b0:	ldr	pc, [ip, #3324]!	; 0xcfc

000123b4 <coda_done@plt>:
   123b4:	add	ip, pc, #0, 12
   123b8:	add	ip, ip, #106496	; 0x1a000
   123bc:	ldr	pc, [ip, #3316]!	; 0xcf4

000123c0 <puts@plt>:
   123c0:	add	ip, pc, #0, 12
   123c4:	add	ip, ip, #106496	; 0x1a000
   123c8:	ldr	pc, [ip, #3308]!	; 0xcec

000123cc <coda_cursor_get_read_type@plt>:
   123cc:	add	ip, pc, #0, 12
   123d0:	add	ip, ip, #106496	; 0x1a000
   123d4:	ldr	pc, [ip, #3300]!	; 0xce4

000123d8 <malloc@plt>:
   123d8:	add	ip, pc, #0, 12
   123dc:	add	ip, ip, #106496	; 0x1a000
   123e0:	ldr	pc, [ip, #3292]!	; 0xcdc

000123e4 <__libc_start_main@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #106496	; 0x1a000
   123ec:	ldr	pc, [ip, #3284]!	; 0xcd4

000123f0 <__gmon_start__@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #106496	; 0x1a000
   123f8:	ldr	pc, [ip, #3276]!	; 0xccc

000123fc <coda_cursor_read_string@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #106496	; 0x1a000
   12404:	ldr	pc, [ip, #3268]!	; 0xcc4

00012408 <coda_cursor_goto_parent@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #106496	; 0x1a000
   12410:	ldr	pc, [ip, #3260]!	; 0xcbc

00012414 <coda_type_get_num_record_fields@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #106496	; 0x1a000
   1241c:	ldr	pc, [ip, #3252]!	; 0xcb4

00012420 <exit@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #106496	; 0x1a000
   12428:	ldr	pc, [ip, #3244]!	; 0xcac

0001242c <coda_type_get_read_type@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #106496	; 0x1a000
   12434:	ldr	pc, [ip, #3236]!	; 0xca4

00012438 <coda_cursor_get_string_length@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #106496	; 0x1a000
   12440:	ldr	pc, [ip, #3228]!	; 0xc9c

00012444 <coda_cursor_read_uint64@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #106496	; 0x1a000
   1244c:	ldr	pc, [ip, #3220]!	; 0xc94

00012450 <coda_cursor_read_double@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #106496	; 0x1a000
   12458:	ldr	pc, [ip, #3212]!	; 0xc8c

0001245c <coda_isNaN@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #106496	; 0x1a000
   12464:	ldr	pc, [ip, #3204]!	; 0xc84

00012468 <fprintf@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #106496	; 0x1a000
   12470:	ldr	pc, [ip, #3196]!	; 0xc7c

00012474 <coda_cursor_goto_next_array_element@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #106496	; 0x1a000
   1247c:	ldr	pc, [ip, #3188]!	; 0xc74

00012480 <coda_open_as@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #106496	; 0x1a000
   12488:	ldr	pc, [ip, #3180]!	; 0xc6c

0001248c <coda_init@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #106496	; 0x1a000
   12494:	ldr	pc, [ip, #3172]!	; 0xc64

00012498 <coda_set_option_perform_conversions@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #106496	; 0x1a000
   124a0:	ldr	pc, [ip, #3164]!	; 0xc5c

000124a4 <coda_cursor_goto_attributes@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #106496	; 0x1a000
   124ac:	ldr	pc, [ip, #3156]!	; 0xc54

000124b0 <coda_cursor_read_char@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #106496	; 0x1a000
   124b8:	ldr	pc, [ip, #3148]!	; 0xc4c

000124bc <memset@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #106496	; 0x1a000
   124c4:	ldr	pc, [ip, #3140]!	; 0xc44

000124c8 <putchar@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #106496	; 0x1a000
   124d0:	ldr	pc, [ip, #3132]!	; 0xc3c

000124d4 <strncpy@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #106496	; 0x1a000
   124dc:	ldr	pc, [ip, #3124]!	; 0xc34

000124e0 <coda_type_get_special_type@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #106496	; 0x1a000
   124e8:	ldr	pc, [ip, #3116]!	; 0xc2c

000124ec <coda_type_get_record_union_status@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #106496	; 0x1a000
   124f4:	ldr	pc, [ip, #3108]!	; 0xc24

000124f8 <coda_cursor_read_complex_double_split@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #106496	; 0x1a000
   12500:	ldr	pc, [ip, #3100]!	; 0xc1c

00012504 <coda_type_get_array_base_type@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #106496	; 0x1a000
   1250c:	ldr	pc, [ip, #3092]!	; 0xc14

00012510 <fclose@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #106496	; 0x1a000
   12518:	ldr	pc, [ip, #3084]!	; 0xc0c

0001251c <coda_type_get_string_length@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #106496	; 0x1a000
   12524:	ldr	pc, [ip, #3076]!	; 0xc04

00012528 <coda_type_get_native_type_name@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #106496	; 0x1a000
   12530:	ldr	pc, [ip, #3068]!	; 0xbfc

00012534 <coda_cursor_get_array_dim@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #106496	; 0x1a000
   1253c:	ldr	pc, [ip, #3060]!	; 0xbf4

00012540 <coda_cursor_has_ascii_content@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #106496	; 0x1a000
   12548:	ldr	pc, [ip, #3052]!	; 0xbec

0001254c <coda_close@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #106496	; 0x1a000
   12554:	ldr	pc, [ip, #3044]!	; 0xbe4

00012558 <coda_cursor_read_int64@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #106496	; 0x1a000
   12560:	ldr	pc, [ip, #3036]!	; 0xbdc

00012564 <vfprintf@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #106496	; 0x1a000
   1256c:	ldr	pc, [ip, #3028]!	; 0xbd4

00012570 <coda_cursor_goto@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #106496	; 0x1a000
   12578:	ldr	pc, [ip, #3020]!	; 0xbcc

0001257c <coda_type_get_record_field_index_from_name@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #106496	; 0x1a000
   12584:	ldr	pc, [ip, #3012]!	; 0xbc4

00012588 <coda_cursor_read_complex_double_pair@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #106496	; 0x1a000
   12590:	ldr	pc, [ip, #3004]!	; 0xbbc

00012594 <coda_cursor_goto_next_record_field@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #106496	; 0x1a000
   1259c:	ldr	pc, [ip, #2996]!	; 0xbb4

000125a0 <fputc@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #106496	; 0x1a000
   125a8:	ldr	pc, [ip, #2988]!	; 0xbac

000125ac <coda_type_get_array_dim@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #106496	; 0x1a000
   125b4:	ldr	pc, [ip, #2980]!	; 0xba4

000125b8 <coda_cursor_get_bit_size@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #106496	; 0x1a000
   125c0:	ldr	pc, [ip, #2972]!	; 0xb9c

000125c4 <coda_errno_to_string@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #106496	; 0x1a000
   125cc:	ldr	pc, [ip, #2964]!	; 0xb94

000125d0 <coda_cursor_use_base_type_of_special_type@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #106496	; 0x1a000
   125d8:	ldr	pc, [ip, #2956]!	; 0xb8c

000125dc <coda_cursor_get_available_union_field_index@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #106496	; 0x1a000
   125e4:	ldr	pc, [ip, #2948]!	; 0xb84

000125e8 <coda_cursor_read_int32@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #106496	; 0x1a000
   125f0:	ldr	pc, [ip, #2940]!	; 0xb7c

000125f4 <coda_cursor_get_file_bit_offset@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #106496	; 0x1a000
   125fc:	ldr	pc, [ip, #2932]!	; 0xb74

00012600 <coda_get_libcoda_version@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #106496	; 0x1a000
   12608:	ldr	pc, [ip, #2924]!	; 0xb6c

0001260c <coda_get_errno@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #106496	; 0x1a000
   12614:	ldr	pc, [ip, #2916]!	; 0xb64

00012618 <coda_type_get_special_base_type@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #106496	; 0x1a000
   12620:	ldr	pc, [ip, #2908]!	; 0xb5c

00012624 <coda_type_get_record_field_name@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #106496	; 0x1a000
   1262c:	ldr	pc, [ip, #2900]!	; 0xb54

00012630 <fputs@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #106496	; 0x1a000
   12638:	ldr	pc, [ip, #2892]!	; 0xb4c

0001263c <abort@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #106496	; 0x1a000
   12644:	ldr	pc, [ip, #2884]!	; 0xb44

00012648 <coda_cursor_read_bits@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #106496	; 0x1a000
   12650:	ldr	pc, [ip, #2876]!	; 0xb3c

00012654 <coda_str64@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #106496	; 0x1a000
   1265c:	ldr	pc, [ip, #2868]!	; 0xb34

00012660 <__assert_fail@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #106496	; 0x1a000
   12668:	ldr	pc, [ip, #2860]!	; 0xb2c

0001266c <coda_type_get_class@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #106496	; 0x1a000
   12674:	ldr	pc, [ip, #2852]!	; 0xb24

Disassembly of section .text:

00012678 <main@@Base>:
   12678:	ldr	r3, [pc, #3768]	; 13538 <main@@Base+0xec0>
   1267c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12680:	sub	sp, sp, #76	; 0x4c
   12684:	cmp	r0, #1
   12688:	add	r3, pc, r3
   1268c:	str	r3, [sp, #12]
   12690:	beq	13d60 <main@@Base+0x16e8>
   12694:	ldr	r4, [r1, #4]
   12698:	mov	r7, r1
   1269c:	ldr	r1, [pc, #3736]	; 1353c <main@@Base+0xec4>
   126a0:	mov	r5, r0
   126a4:	add	r1, pc, r1
   126a8:	mov	r0, r4
   126ac:	bl	12210 <strcmp@plt>
   126b0:	cmp	r0, #0
   126b4:	beq	13d60 <main@@Base+0x16e8>
   126b8:	ldr	r1, [pc, #3712]	; 13540 <main@@Base+0xec8>
   126bc:	mov	r0, r4
   126c0:	add	r1, pc, r1
   126c4:	bl	12210 <strcmp@plt>
   126c8:	cmp	r0, #0
   126cc:	beq	13d60 <main@@Base+0x16e8>
   126d0:	ldr	r1, [pc, #3692]	; 13544 <main@@Base+0xecc>
   126d4:	mov	r0, r4
   126d8:	add	r1, pc, r1
   126dc:	bl	12210 <strcmp@plt>
   126e0:	cmp	r0, #0
   126e4:	beq	13d30 <main@@Base+0x16b8>
   126e8:	ldr	r1, [pc, #3672]	; 13548 <main@@Base+0xed0>
   126ec:	mov	r0, r4
   126f0:	add	r1, pc, r1
   126f4:	bl	12210 <strcmp@plt>
   126f8:	cmp	r0, #0
   126fc:	beq	13d30 <main@@Base+0x16b8>
   12700:	cmp	r5, #2
   12704:	ble	12720 <main@@Base+0xa8>
   12708:	ldr	r1, [pc, #3644]	; 1354c <main@@Base+0xed4>
   1270c:	mov	r0, r4
   12710:	add	r1, pc, r1
   12714:	bl	12210 <strcmp@plt>
   12718:	cmp	r0, #0
   1271c:	beq	12dd0 <main@@Base+0x758>
   12720:	ldr	r2, [pc, #3624]	; 13550 <main@@Base+0xed8>
   12724:	mov	r1, #0
   12728:	add	r2, pc, r2
   1272c:	ldr	r0, [r7]
   12730:	bl	122b8 <coda_set_definition_path_conditional@plt>
   12734:	cmp	r0, #0
   12738:	moveq	r3, #4
   1273c:	moveq	r6, #1
   12740:	bne	13ec8 <main@@Base+0x1850>
   12744:	ldr	r4, [r7, r3]
   12748:	ldr	r1, [pc, #3588]	; 13554 <main@@Base+0xedc>
   1274c:	mov	r0, r4
   12750:	add	r1, pc, r1
   12754:	bl	12210 <strcmp@plt>
   12758:	subs	fp, r0, #0
   1275c:	beq	12b5c <main@@Base+0x4e4>
   12760:	ldr	r1, [pc, #3568]	; 13558 <main@@Base+0xee0>
   12764:	mov	r0, r4
   12768:	add	r1, pc, r1
   1276c:	bl	12210 <strcmp@plt>
   12770:	subs	fp, r0, #0
   12774:	beq	13144 <main@@Base+0xacc>
   12778:	ldr	r1, [pc, #3548]	; 1355c <main@@Base+0xee4>
   1277c:	mov	r0, r4
   12780:	add	r1, pc, r1
   12784:	bl	12210 <strcmp@plt>
   12788:	subs	fp, r0, #0
   1278c:	beq	12e04 <main@@Base+0x78c>
   12790:	ldr	r1, [pc, #3528]	; 13560 <main@@Base+0xee8>
   12794:	mov	r0, r4
   12798:	add	r1, pc, r1
   1279c:	bl	12210 <strcmp@plt>
   127a0:	subs	sl, r0, #0
   127a4:	beq	13740 <main@@Base+0x10c8>
   127a8:	ldr	r1, [pc, #3508]	; 13564 <main@@Base+0xeec>
   127ac:	mov	r0, r4
   127b0:	add	r1, pc, r1
   127b4:	bl	12210 <strcmp@plt>
   127b8:	subs	r4, r0, #0
   127bc:	bne	13e0c <main@@Base+0x1794>
   127c0:	ldr	ip, [sp, #12]
   127c4:	ldr	r2, [pc, #3748]	; 13670 <main@@Base+0xff8>
   127c8:	ldr	r3, [pc, #3748]	; 13674 <main@@Base+0xffc>
   127cc:	mov	r0, #5
   127d0:	ldr	r2, [ip, r2]
   127d4:	ldr	r1, [pc, #3740]	; 13678 <main@@Base+0x1000>
   127d8:	add	r6, r6, #1
   127dc:	str	r0, [r2]
   127e0:	ldr	r3, [ip, r3]
   127e4:	mov	r0, ip
   127e8:	mov	ip, r3
   127ec:	str	r3, [sp]
   127f0:	str	r4, [ip]
   127f4:	ldr	r3, [pc, #3712]	; 1367c <main@@Base+0x1004>
   127f8:	ldr	r1, [r0, r1]
   127fc:	ldr	r2, [pc, #3708]	; 13680 <main@@Base+0x1008>
   12800:	str	r1, [sp, #8]
   12804:	str	r4, [r1]
   12808:	ldr	r3, [r0, r3]
   1280c:	sub	r5, r5, r6
   12810:	mov	r1, r3
   12814:	str	r3, [sp, #20]
   12818:	ldr	r3, [pc, #3684]	; 13684 <main@@Base+0x100c>
   1281c:	str	r4, [r1]
   12820:	ldr	r2, [r0, r2]
   12824:	ldr	r3, [r0, r3]
   12828:	cmp	r5, #0
   1282c:	mov	r1, r3
   12830:	str	r3, [sp, #16]
   12834:	ldr	r3, [r2]
   12838:	add	r7, r7, r6, lsl #2
   1283c:	str	r3, [r1]
   12840:	ble	13c2c <main@@Base+0x15b4>
   12844:	ldr	r3, [pc, #3356]	; 13568 <main@@Base+0xef0>
   12848:	ldr	r9, [pc, #3356]	; 1356c <main@@Base+0xef4>
   1284c:	add	r3, pc, r3
   12850:	str	r3, [sp, #4]
   12854:	ldr	r3, [pc, #3348]	; 13570 <main@@Base+0xef8>
   12858:	ldr	fp, [pc, #3348]	; 13574 <main@@Base+0xefc>
   1285c:	add	r3, pc, r3
   12860:	str	r3, [sp, #24]
   12864:	ldr	r3, [pc, #3340]	; 13578 <main@@Base+0xf00>
   12868:	add	r9, pc, r9
   1286c:	add	r3, pc, r3
   12870:	str	r3, [sp, #40]	; 0x28
   12874:	ldr	r3, [pc, #3328]	; 1357c <main@@Base+0xf04>
   12878:	add	fp, pc, fp
   1287c:	add	r3, pc, r3
   12880:	str	r3, [sp, #44]	; 0x2c
   12884:	str	r4, [sp, #36]	; 0x24
   12888:	str	r4, [sp, #32]
   1288c:	str	r4, [sp, #28]
   12890:	mov	sl, #1
   12894:	b	12928 <main@@Base+0x2b0>
   12898:	mov	r1, fp
   1289c:	mov	r0, r6
   128a0:	bl	12210 <strcmp@plt>
   128a4:	cmp	r0, #0
   128a8:	beq	12944 <main@@Base+0x2cc>
   128ac:	ldr	r1, [sp, #4]
   128b0:	mov	r0, r6
   128b4:	bl	12210 <strcmp@plt>
   128b8:	cmp	r0, #0
   128bc:	beq	129ec <main@@Base+0x374>
   128c0:	ldr	r1, [pc, #3256]	; 13580 <main@@Base+0xf08>
   128c4:	mov	r0, r6
   128c8:	add	r1, pc, r1
   128cc:	bl	12210 <strcmp@plt>
   128d0:	cmp	r0, #0
   128d4:	beq	129ec <main@@Base+0x374>
   128d8:	ldr	r1, [pc, #3236]	; 13584 <main@@Base+0xf0c>
   128dc:	mov	r0, r6
   128e0:	add	r1, pc, r1
   128e4:	bl	12210 <strcmp@plt>
   128e8:	cmp	r0, #0
   128ec:	bne	12ae4 <main@@Base+0x46c>
   128f0:	add	r3, r4, #1
   128f4:	cmp	r5, r3
   128f8:	ble	12a34 <main@@Base+0x3bc>
   128fc:	add	r2, r7, r8
   12900:	ldr	r2, [r2, #4]
   12904:	ldrb	r1, [r2]
   12908:	cmp	r1, #45	; 0x2d
   1290c:	beq	12a34 <main@@Base+0x3bc>
   12910:	ldr	r1, [sp, #20]
   12914:	mov	r4, r3
   12918:	str	r2, [r1]
   1291c:	add	r4, r4, #1
   12920:	cmp	r5, r4
   12924:	ble	12954 <main@@Base+0x2dc>
   12928:	ldr	r6, [r7, r4, lsl #2]
   1292c:	mov	r1, r9
   12930:	mov	r0, r6
   12934:	bl	12210 <strcmp@plt>
   12938:	lsl	r8, r4, #2
   1293c:	cmp	r0, #0
   12940:	bne	12898 <main@@Base+0x220>
   12944:	add	r4, r4, #1
   12948:	cmp	r5, r4
   1294c:	mov	sl, r0
   12950:	bgt	12928 <main@@Base+0x2b0>
   12954:	ldr	r3, [sp]
   12958:	ldr	r3, [r3]
   1295c:	cmp	r3, #0
   12960:	beq	13c2c <main@@Base+0x15b4>
   12964:	ldrb	r3, [r3]
   12968:	cmp	r3, #0
   1296c:	beq	13c2c <main@@Base+0x15b4>
   12970:	bl	1248c <coda_init@plt>
   12974:	cmp	r0, #0
   12978:	bne	13d94 <main@@Base+0x171c>
   1297c:	bl	12498 <coda_set_option_perform_conversions@plt>
   12980:	mov	r0, sl
   12984:	bl	121e0 <coda_set_option_use_fast_size_expressions@plt>
   12988:	ldr	r3, [sp, #8]
   1298c:	ldr	r0, [r3]
   12990:	cmp	r0, #0
   12994:	beq	129b4 <main@@Base+0x33c>
   12998:	ldr	r1, [pc, #3048]	; 13588 <main@@Base+0xf10>
   1299c:	add	r1, pc, r1
   129a0:	bl	1224c <fopen@plt>
   129a4:	ldr	r3, [sp, #16]
   129a8:	cmp	r0, #0
   129ac:	str	r0, [r3]
   129b0:	beq	13e2c <main@@Base+0x17b4>
   129b4:	add	r0, sp, #28
   129b8:	ldm	r0, {r0, r1, r2}
   129bc:	bl	15f2c <print_debug_data@@Base>
   129c0:	ldr	r3, [sp, #8]
   129c4:	ldr	r3, [r3]
   129c8:	cmp	r3, #0
   129cc:	beq	129dc <main@@Base+0x364>
   129d0:	ldr	r3, [sp, #16]
   129d4:	ldr	r0, [r3]
   129d8:	bl	12510 <fclose@plt>
   129dc:	bl	123b4 <coda_done@plt>
   129e0:	mov	r0, #0
   129e4:	add	sp, sp, #76	; 0x4c
   129e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129ec:	add	r3, r4, #1
   129f0:	cmp	r5, r3
   129f4:	ble	12acc <main@@Base+0x454>
   129f8:	add	r2, r7, r8
   129fc:	ldr	r1, [r2, #4]
   12a00:	ldrb	r0, [r1]
   12a04:	cmp	r0, #45	; 0x2d
   12a08:	ldrne	r2, [sp, #8]
   12a0c:	movne	r4, r3
   12a10:	strne	r1, [r2]
   12a14:	bne	1291c <main@@Base+0x2a4>
   12a18:	ldr	r1, [sp, #40]	; 0x28
   12a1c:	mov	r0, r6
   12a20:	str	r2, [sp, #52]	; 0x34
   12a24:	str	r3, [sp, #48]	; 0x30
   12a28:	bl	12210 <strcmp@plt>
   12a2c:	cmp	r0, #0
   12a30:	bne	12de4 <main@@Base+0x76c>
   12a34:	ldr	r1, [pc, #2896]	; 1358c <main@@Base+0xf14>
   12a38:	mov	r0, r6
   12a3c:	add	r1, pc, r1
   12a40:	bl	12210 <strcmp@plt>
   12a44:	subs	r1, r0, #0
   12a48:	bne	12aa8 <main@@Base+0x430>
   12a4c:	add	r3, r4, #3
   12a50:	cmp	r5, r3
   12a54:	ble	12aa8 <main@@Base+0x430>
   12a58:	add	r8, r7, r8
   12a5c:	ldr	ip, [r8, #4]
   12a60:	ldrb	r2, [ip]
   12a64:	cmp	r2, #45	; 0x2d
   12a68:	beq	12aa8 <main@@Base+0x430>
   12a6c:	ldr	lr, [r8, #8]
   12a70:	ldrb	r2, [lr]
   12a74:	cmp	r2, #45	; 0x2d
   12a78:	beq	12aa8 <main@@Base+0x430>
   12a7c:	ldr	r0, [r8, #12]
   12a80:	ldrb	r2, [r0]
   12a84:	cmp	r2, #45	; 0x2d
   12a88:	beq	12aa8 <main@@Base+0x430>
   12a8c:	mov	r2, #10
   12a90:	mov	r4, r3
   12a94:	str	lr, [sp, #32]
   12a98:	str	ip, [sp, #28]
   12a9c:	bl	1221c <strtol@plt>
   12aa0:	str	r0, [sp, #36]	; 0x24
   12aa4:	b	1291c <main@@Base+0x2a4>
   12aa8:	sub	r3, r5, #1
   12aac:	cmp	r3, r4
   12ab0:	bne	13d74 <main@@Base+0x16fc>
   12ab4:	ldrb	r3, [r6]
   12ab8:	cmp	r3, #45	; 0x2d
   12abc:	beq	13d74 <main@@Base+0x16fc>
   12ac0:	ldr	r3, [sp]
   12ac4:	str	r6, [r3]
   12ac8:	b	1291c <main@@Base+0x2a4>
   12acc:	ldr	r1, [pc, #2748]	; 13590 <main@@Base+0xf18>
   12ad0:	mov	r0, r6
   12ad4:	add	r1, pc, r1
   12ad8:	bl	12210 <strcmp@plt>
   12adc:	cmp	r0, #0
   12ae0:	beq	12a34 <main@@Base+0x3bc>
   12ae4:	ldr	r1, [pc, #2728]	; 13594 <main@@Base+0xf1c>
   12ae8:	mov	r0, r6
   12aec:	add	r1, pc, r1
   12af0:	bl	12210 <strcmp@plt>
   12af4:	cmp	r0, #0
   12af8:	beq	128f0 <main@@Base+0x278>
   12afc:	ldr	r1, [sp, #24]
   12b00:	mov	r0, r6
   12b04:	bl	12210 <strcmp@plt>
   12b08:	subs	r1, r0, #0
   12b0c:	bne	12a34 <main@@Base+0x3bc>
   12b10:	add	r3, r4, #1
   12b14:	cmp	r5, r3
   12b18:	str	r3, [sp, #48]	; 0x30
   12b1c:	ble	12a34 <main@@Base+0x3bc>
   12b20:	add	r2, r7, r8
   12b24:	ldr	r0, [r2, #4]
   12b28:	ldrb	r2, [r0]
   12b2c:	cmp	r2, #45	; 0x2d
   12b30:	beq	12a34 <main@@Base+0x3bc>
   12b34:	mov	r2, #10
   12b38:	bl	1221c <strtol@plt>
   12b3c:	ldr	r2, [pc, #2644]	; 13598 <main@@Base+0xf20>
   12b40:	ldr	r3, [sp, #48]	; 0x30
   12b44:	mov	r4, r3
   12b48:	mov	r3, r2
   12b4c:	ldr	r2, [sp, #12]
   12b50:	ldr	r3, [r2, r3]
   12b54:	str	r0, [r3]
   12b58:	b	1291c <main@@Base+0x2a4>
   12b5c:	ldr	r3, [sp, #12]
   12b60:	ldr	r1, [pc, #2824]	; 13670 <main@@Base+0xff8>
   12b64:	ldr	r2, [pc, #2824]	; 13674 <main@@Base+0xffc>
   12b68:	ldr	lr, [pc, #2604]	; 1359c <main@@Base+0xf24>
   12b6c:	ldr	ip, [r3, r1]
   12b70:	ldr	r1, [pc, #2600]	; 135a0 <main@@Base+0xf28>
   12b74:	mov	r0, #1
   12b78:	str	fp, [ip]
   12b7c:	ldr	r2, [r3, r2]
   12b80:	ldr	ip, [pc, #2588]	; 135a4 <main@@Base+0xf2c>
   12b84:	mov	r4, r2
   12b88:	str	r2, [sp]
   12b8c:	str	fp, [r4]
   12b90:	str	fp, [r4, #664]	; 0x298
   12b94:	ldr	lr, [r3, lr]
   12b98:	ldr	r2, [pc, #2568]	; 135a8 <main@@Base+0xf30>
   12b9c:	add	r6, r6, r0
   12ba0:	str	r0, [lr]
   12ba4:	ldr	r9, [r3, r1]
   12ba8:	ldr	r1, [pc, #2556]	; 135ac <main@@Base+0xf34>
   12bac:	sub	r5, r5, r6
   12bb0:	str	fp, [r9]
   12bb4:	ldr	r2, [r3, r2]
   12bb8:	cmp	r5, #0
   12bbc:	mov	lr, r2
   12bc0:	str	r2, [sp, #44]	; 0x2c
   12bc4:	str	fp, [lr]
   12bc8:	ldr	ip, [r3, ip]
   12bcc:	ldr	r2, [pc, #2524]	; 135b0 <main@@Base+0xf38>
   12bd0:	str	ip, [sp, #8]
   12bd4:	str	fp, [ip]
   12bd8:	ldr	r1, [r3, r1]
   12bdc:	add	r7, r7, r6, lsl #2
   12be0:	str	r1, [sp, #32]
   12be4:	str	fp, [r1]
   12be8:	ldr	r3, [r3, r2]
   12bec:	str	r3, [sp, #40]	; 0x28
   12bf0:	str	fp, [r3]
   12bf4:	ble	13ca8 <main@@Base+0x1630>
   12bf8:	ldr	r3, [pc, #2484]	; 135b4 <main@@Base+0xf3c>
   12bfc:	ldr	sl, [pc, #2484]	; 135b8 <main@@Base+0xf40>
   12c00:	add	r3, pc, r3
   12c04:	str	r3, [sp, #4]
   12c08:	ldr	r3, [pc, #2476]	; 135bc <main@@Base+0xf44>
   12c0c:	mov	r6, r0
   12c10:	add	r3, pc, r3
   12c14:	str	r3, [sp, #20]
   12c18:	ldr	r3, [pc, #2464]	; 135c0 <main@@Base+0xf48>
   12c1c:	add	sl, pc, sl
   12c20:	add	r3, pc, r3
   12c24:	str	r3, [sp, #28]
   12c28:	ldr	r3, [pc, #2452]	; 135c4 <main@@Base+0xf4c>
   12c2c:	str	r0, [sp, #24]
   12c30:	add	r3, pc, r3
   12c34:	str	r3, [sp, #36]	; 0x24
   12c38:	ldr	r3, [pc, #2440]	; 135c8 <main@@Base+0xf50>
   12c3c:	add	r3, pc, r3
   12c40:	str	r3, [sp, #48]	; 0x30
   12c44:	ldr	r4, [r7, fp, lsl #2]
   12c48:	ldr	r1, [pc, #2428]	; 135cc <main@@Base+0xf54>
   12c4c:	mov	r0, r4
   12c50:	add	r1, pc, r1
   12c54:	bl	12210 <strcmp@plt>
   12c58:	lsl	r8, fp, #2
   12c5c:	cmp	r0, #0
   12c60:	beq	12dbc <main@@Base+0x744>
   12c64:	ldr	r1, [pc, #2404]	; 135d0 <main@@Base+0xf58>
   12c68:	mov	r0, r4
   12c6c:	add	r1, pc, r1
   12c70:	bl	12210 <strcmp@plt>
   12c74:	cmp	r0, #0
   12c78:	beq	12dbc <main@@Base+0x744>
   12c7c:	ldr	r1, [pc, #2384]	; 135d4 <main@@Base+0xf5c>
   12c80:	mov	r0, r4
   12c84:	add	r1, pc, r1
   12c88:	bl	12210 <strcmp@plt>
   12c8c:	cmp	r0, #0
   12c90:	beq	12dc8 <main@@Base+0x750>
   12c94:	ldr	r1, [pc, #2364]	; 135d8 <main@@Base+0xf60>
   12c98:	mov	r0, r4
   12c9c:	add	r1, pc, r1
   12ca0:	bl	12210 <strcmp@plt>
   12ca4:	cmp	r0, #0
   12ca8:	beq	12dc8 <main@@Base+0x750>
   12cac:	mov	r1, sl
   12cb0:	mov	r0, r4
   12cb4:	bl	12210 <strcmp@plt>
   12cb8:	cmp	r0, #0
   12cbc:	beq	12cd8 <main@@Base+0x660>
   12cc0:	ldr	r1, [pc, #2324]	; 135dc <main@@Base+0xf64>
   12cc4:	mov	r0, r4
   12cc8:	add	r1, pc, r1
   12ccc:	bl	12210 <strcmp@plt>
   12cd0:	cmp	r0, #0
   12cd4:	bne	12d1c <main@@Base+0x6a4>
   12cd8:	add	r2, fp, #1
   12cdc:	cmp	r5, r2
   12ce0:	str	r2, [sp, #16]
   12ce4:	ble	12d1c <main@@Base+0x6a4>
   12ce8:	add	r8, r7, r8
   12cec:	ldr	r0, [r8, #4]
   12cf0:	ldrb	r1, [r0]
   12cf4:	cmp	r1, #45	; 0x2d
   12cf8:	beq	12d1c <main@@Base+0x6a4>
   12cfc:	bl	17a98 <codadump_filter_create@@Base>
   12d00:	ldr	r3, [sp]
   12d04:	ldr	r2, [sp, #16]
   12d08:	cmp	r0, #0
   12d0c:	str	r0, [r3, #664]	; 0x298
   12d10:	beq	13fe0 <main@@Base+0x1968>
   12d14:	mov	fp, r2
   12d18:	b	12d50 <main@@Base+0x6d8>
   12d1c:	ldr	r1, [sp, #4]
   12d20:	mov	r0, r4
   12d24:	bl	12210 <strcmp@plt>
   12d28:	cmp	r0, #0
   12d2c:	beq	12d44 <main@@Base+0x6cc>
   12d30:	ldr	r1, [sp, #20]
   12d34:	mov	r0, r4
   12d38:	bl	12210 <strcmp@plt>
   12d3c:	cmp	r0, #0
   12d40:	bne	13078 <main@@Base+0xa00>
   12d44:	ldr	r3, [sp, #8]
   12d48:	mov	r2, #1
   12d4c:	str	r2, [r3]
   12d50:	add	fp, fp, #1
   12d54:	cmp	r5, fp
   12d58:	bgt	12c44 <main@@Base+0x5cc>
   12d5c:	ldr	r3, [sp]
   12d60:	ldr	r3, [r3]
   12d64:	cmp	r3, #0
   12d68:	beq	13ca8 <main@@Base+0x1630>
   12d6c:	ldrb	r3, [r3]
   12d70:	cmp	r3, #0
   12d74:	beq	13ca8 <main@@Base+0x1630>
   12d78:	bl	1248c <coda_init@plt>
   12d7c:	subs	r4, r0, #0
   12d80:	bne	13e90 <main@@Base+0x1818>
   12d84:	ldr	r3, [sp, #24]
   12d88:	eor	r0, r3, #1
   12d8c:	bl	122d0 <coda_set_option_bypass_special_types@plt>
   12d90:	mov	r0, r4
   12d94:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   12d98:	mov	r0, r6
   12d9c:	bl	12498 <coda_set_option_perform_conversions@plt>
   12da0:	bl	193e4 <traverse_info_init@@Base>
   12da4:	bl	16858 <dim_info_init@@Base>
   12da8:	bl	19458 <traverse_product@@Base>
   12dac:	bl	16888 <dim_info_done@@Base>
   12db0:	bl	19414 <traverse_info_done@@Base>
   12db4:	bl	123b4 <coda_done@plt>
   12db8:	b	129e0 <main@@Base+0x368>
   12dbc:	mov	r2, #1
   12dc0:	str	r2, [r9]
   12dc4:	b	12d50 <main@@Base+0x6d8>
   12dc8:	mov	r6, r0
   12dcc:	b	12d50 <main@@Base+0x6d8>
   12dd0:	ldr	r0, [r7, #8]
   12dd4:	bl	1233c <coda_set_definition_path@plt>
   12dd8:	mov	r6, #3
   12ddc:	mov	r3, #12
   12de0:	b	12744 <main@@Base+0xcc>
   12de4:	ldr	r1, [sp, #44]	; 0x2c
   12de8:	mov	r0, r6
   12dec:	bl	12210 <strcmp@plt>
   12df0:	ldr	r3, [sp, #48]	; 0x30
   12df4:	ldr	r2, [sp, #52]	; 0x34
   12df8:	cmp	r0, #0
   12dfc:	beq	12900 <main@@Base+0x288>
   12e00:	b	12afc <main@@Base+0x484>
   12e04:	ldr	ip, [sp, #12]
   12e08:	ldr	r2, [pc, #2144]	; 13670 <main@@Base+0xff8>
   12e0c:	ldr	r3, [pc, #2144]	; 13674 <main@@Base+0xffc>
   12e10:	mov	r0, #3
   12e14:	ldr	r2, [ip, r2]
   12e18:	ldr	r1, [pc, #2136]	; 13678 <main@@Base+0x1000>
   12e1c:	add	r6, r6, #1
   12e20:	str	r0, [r2]
   12e24:	ldr	r3, [ip, r3]
   12e28:	mov	r0, ip
   12e2c:	mov	ip, r3
   12e30:	str	r3, [sp]
   12e34:	str	fp, [ip]
   12e38:	ldr	r3, [pc, #2108]	; 1367c <main@@Base+0x1004>
   12e3c:	ldr	r1, [r0, r1]
   12e40:	ldr	r2, [pc, #2104]	; 13680 <main@@Base+0x1008>
   12e44:	str	r1, [sp, #8]
   12e48:	str	fp, [r1]
   12e4c:	ldr	r3, [r0, r3]
   12e50:	sub	r4, r5, r6
   12e54:	mov	r1, r3
   12e58:	str	r3, [sp, #20]
   12e5c:	ldr	r3, [pc, #2080]	; 13684 <main@@Base+0x100c>
   12e60:	str	fp, [r1]
   12e64:	ldr	r2, [r0, r2]
   12e68:	ldr	r3, [r0, r3]
   12e6c:	cmp	r4, #0
   12e70:	mov	r1, r3
   12e74:	str	r3, [sp, #16]
   12e78:	ldr	r3, [r2]
   12e7c:	add	r6, r7, r6, lsl #2
   12e80:	str	r3, [r1]
   12e84:	ble	13cc8 <main@@Base+0x1650>
   12e88:	ldr	r3, [pc, #1872]	; 135e0 <main@@Base+0xf68>
   12e8c:	ldr	r8, [pc, #1872]	; 135e4 <main@@Base+0xf6c>
   12e90:	add	r3, pc, r3
   12e94:	str	r3, [sp, #4]
   12e98:	ldr	r3, [pc, #1864]	; 135e8 <main@@Base+0xf70>
   12e9c:	mov	r9, fp
   12ea0:	add	r3, pc, r3
   12ea4:	str	r3, [sp, #24]
   12ea8:	ldr	r3, [pc, #1852]	; 135ec <main@@Base+0xf74>
   12eac:	add	r8, pc, r8
   12eb0:	add	r3, pc, r3
   12eb4:	str	r3, [sp, #60]	; 0x3c
   12eb8:	ldr	r3, [pc, #1840]	; 135f0 <main@@Base+0xf78>
   12ebc:	mov	sl, #1
   12ec0:	add	r3, pc, r3
   12ec4:	str	r3, [sp, #44]	; 0x2c
   12ec8:	ldr	r3, [pc, #1828]	; 135f4 <main@@Base+0xf7c>
   12ecc:	str	sl, [sp, #28]
   12ed0:	add	r3, pc, r3
   12ed4:	str	r3, [sp, #52]	; 0x34
   12ed8:	ldr	r3, [pc, #1816]	; 135f8 <main@@Base+0xf80>
   12edc:	add	r3, pc, r3
   12ee0:	str	r3, [sp, #40]	; 0x28
   12ee4:	ldr	r3, [pc, #1808]	; 135fc <main@@Base+0xf84>
   12ee8:	add	r3, pc, r3
   12eec:	str	r3, [sp, #36]	; 0x24
   12ef0:	ldr	r3, [pc, #1800]	; 13600 <main@@Base+0xf88>
   12ef4:	add	r3, pc, r3
   12ef8:	str	r3, [sp, #56]	; 0x38
   12efc:	ldr	r3, [pc, #1792]	; 13604 <main@@Base+0xf8c>
   12f00:	add	r3, pc, r3
   12f04:	str	r3, [sp, #64]	; 0x40
   12f08:	ldr	r3, [pc, #1784]	; 13608 <main@@Base+0xf90>
   12f0c:	add	r3, pc, r3
   12f10:	str	r3, [sp, #32]
   12f14:	ldr	r3, [pc, #1776]	; 1360c <main@@Base+0xf94>
   12f18:	add	r3, pc, r3
   12f1c:	str	r3, [sp, #48]	; 0x30
   12f20:	ldr	r5, [r6, fp, lsl #2]
   12f24:	mov	r1, r8
   12f28:	mov	r0, r5
   12f2c:	bl	12210 <strcmp@plt>
   12f30:	lsl	r7, fp, #2
   12f34:	cmp	r0, #0
   12f38:	beq	13104 <main@@Base+0xa8c>
   12f3c:	ldr	r1, [pc, #1740]	; 13610 <main@@Base+0xf98>
   12f40:	mov	r0, r5
   12f44:	add	r1, pc, r1
   12f48:	bl	12210 <strcmp@plt>
   12f4c:	cmp	r0, #0
   12f50:	beq	13104 <main@@Base+0xa8c>
   12f54:	ldr	r1, [pc, #1720]	; 13614 <main@@Base+0xf9c>
   12f58:	mov	r0, r5
   12f5c:	add	r1, pc, r1
   12f60:	bl	12210 <strcmp@plt>
   12f64:	cmp	r0, #0
   12f68:	beq	1310c <main@@Base+0xa94>
   12f6c:	ldr	r1, [sp, #4]
   12f70:	mov	r0, r5
   12f74:	bl	12210 <strcmp@plt>
   12f78:	cmp	r0, #0
   12f7c:	beq	1310c <main@@Base+0xa94>
   12f80:	ldr	r1, [sp, #24]
   12f84:	mov	r0, r5
   12f88:	bl	12210 <strcmp@plt>
   12f8c:	cmp	r0, #0
   12f90:	beq	13114 <main@@Base+0xa9c>
   12f94:	ldr	r1, [sp, #32]
   12f98:	mov	r0, r5
   12f9c:	bl	12210 <strcmp@plt>
   12fa0:	cmp	r0, #0
   12fa4:	beq	13114 <main@@Base+0xa9c>
   12fa8:	ldr	r1, [sp, #48]	; 0x30
   12fac:	mov	r0, r5
   12fb0:	bl	12210 <strcmp@plt>
   12fb4:	cmp	r0, #0
   12fb8:	bne	130c4 <main@@Base+0xa4c>
   12fbc:	add	r3, fp, #1
   12fc0:	cmp	r4, r3
   12fc4:	ble	13a6c <main@@Base+0x13f4>
   12fc8:	add	r7, r6, r7
   12fcc:	ldr	r2, [r7, #4]
   12fd0:	ldrb	r1, [r2]
   12fd4:	cmp	r1, #45	; 0x2d
   12fd8:	beq	13a88 <main@@Base+0x1410>
   12fdc:	ldr	r1, [sp, #20]
   12fe0:	mov	fp, r3
   12fe4:	str	r2, [r1]
   12fe8:	add	fp, fp, #1
   12fec:	cmp	r4, fp
   12ff0:	bgt	12f20 <main@@Base+0x8a8>
   12ff4:	ldr	r3, [sp]
   12ff8:	ldr	r3, [r3]
   12ffc:	cmp	r3, #0
   13000:	beq	13cc8 <main@@Base+0x1650>
   13004:	ldrb	r3, [r3]
   13008:	cmp	r3, #0
   1300c:	beq	13cc8 <main@@Base+0x1650>
   13010:	bl	1248c <coda_init@plt>
   13014:	cmp	r0, #0
   13018:	bne	13fa8 <main@@Base+0x1930>
   1301c:	ldr	r3, [sp, #28]
   13020:	eor	r0, r3, #1
   13024:	bl	122d0 <coda_set_option_bypass_special_types@plt>
   13028:	mov	r0, sl
   1302c:	bl	12498 <coda_set_option_perform_conversions@plt>
   13030:	ldr	r3, [sp, #8]
   13034:	ldr	r0, [r3]
   13038:	cmp	r0, #0
   1303c:	beq	1305c <main@@Base+0x9e4>
   13040:	ldr	r1, [pc, #1488]	; 13618 <main@@Base+0xfa0>
   13044:	add	r1, pc, r1
   13048:	bl	1224c <fopen@plt>
   1304c:	ldr	r3, [sp, #16]
   13050:	cmp	r0, #0
   13054:	str	r0, [r3]
   13058:	beq	13e58 <main@@Base+0x17e0>
   1305c:	mov	r0, r9
   13060:	bl	186bc <print_json_data@@Base>
   13064:	ldr	r3, [sp, #8]
   13068:	ldr	r3, [r3]
   1306c:	cmp	r3, #0
   13070:	bne	129d0 <main@@Base+0x358>
   13074:	b	129dc <main@@Base+0x364>
   13078:	ldr	r1, [sp, #28]
   1307c:	mov	r0, r4
   13080:	bl	12210 <strcmp@plt>
   13084:	cmp	r0, #0
   13088:	beq	130f4 <main@@Base+0xa7c>
   1308c:	ldr	r1, [sp, #36]	; 0x24
   13090:	mov	r0, r4
   13094:	bl	12210 <strcmp@plt>
   13098:	cmp	r0, #0
   1309c:	beq	130f4 <main@@Base+0xa7c>
   130a0:	ldr	r1, [sp, #48]	; 0x30
   130a4:	mov	r0, r4
   130a8:	bl	12210 <strcmp@plt>
   130ac:	cmp	r0, #0
   130b0:	bne	13b94 <main@@Base+0x151c>
   130b4:	ldr	r3, [sp, #40]	; 0x28
   130b8:	mov	r2, #1
   130bc:	str	r2, [r3]
   130c0:	b	12d50 <main@@Base+0x6d8>
   130c4:	ldr	r1, [sp, #40]	; 0x28
   130c8:	mov	r0, r5
   130cc:	bl	12210 <strcmp@plt>
   130d0:	cmp	r0, #0
   130d4:	beq	12fbc <main@@Base+0x944>
   130d8:	ldr	r1, [sp, #52]	; 0x34
   130dc:	mov	r0, r5
   130e0:	bl	12210 <strcmp@plt>
   130e4:	cmp	r0, #0
   130e8:	bne	13aac <main@@Base+0x1434>
   130ec:	str	r0, [sp, #28]
   130f0:	b	12fe8 <main@@Base+0x970>
   130f4:	ldr	r3, [sp, #32]
   130f8:	mov	r2, #1
   130fc:	str	r2, [r3]
   13100:	b	12d50 <main@@Base+0x6d8>
   13104:	mov	r9, #1
   13108:	b	12fe8 <main@@Base+0x970>
   1310c:	mov	sl, r0
   13110:	b	12fe8 <main@@Base+0x970>
   13114:	add	r3, fp, #1
   13118:	cmp	r4, r3
   1311c:	ble	13a58 <main@@Base+0x13e0>
   13120:	add	r7, r6, r7
   13124:	ldr	r2, [r7, #4]
   13128:	ldrb	r1, [r2]
   1312c:	cmp	r1, #45	; 0x2d
   13130:	beq	13af4 <main@@Base+0x147c>
   13134:	ldr	r1, [sp, #8]
   13138:	mov	fp, r3
   1313c:	str	r2, [r1]
   13140:	b	12fe8 <main@@Base+0x970>
   13144:	ldr	r3, [sp, #12]
   13148:	ldr	r2, [pc, #1312]	; 13670 <main@@Base+0xff8>
   1314c:	ldr	r1, [pc, #1312]	; 13674 <main@@Base+0xffc>
   13150:	mov	r8, #1
   13154:	ldr	r0, [r3, r2]
   13158:	ldr	r2, [pc, #1304]	; 13678 <main@@Base+0x1000>
   1315c:	ldr	lr, [pc, #1208]	; 1361c <main@@Base+0xfa4>
   13160:	str	r8, [r0]
   13164:	ldr	r1, [r3, r1]
   13168:	ldr	r0, [pc, #1296]	; 13680 <main@@Base+0x1008>
   1316c:	str	r1, [sp]
   13170:	str	fp, [r1]
   13174:	str	fp, [r1, #664]	; 0x298
   13178:	ldr	r2, [r3, r2]
   1317c:	ldr	ip, [pc, #1180]	; 13620 <main@@Base+0xfa8>
   13180:	mov	r4, r2
   13184:	str	r2, [sp, #8]
   13188:	str	fp, [r4]
   1318c:	ldr	lr, [r3, lr]
   13190:	ldr	r1, [pc, #1260]	; 13684 <main@@Base+0x100c>
   13194:	add	ip, pc, ip
   13198:	str	ip, [lr]
   1319c:	str	lr, [sp, #52]	; 0x34
   131a0:	ldr	r0, [r3, r0]
   131a4:	ldr	r1, [r3, r1]
   131a8:	ldr	r2, [pc, #1004]	; 1359c <main@@Base+0xf24>
   131ac:	ldr	r0, [r0]
   131b0:	mov	ip, r1
   131b4:	str	r1, [sp, #16]
   131b8:	str	r0, [ip]
   131bc:	ldr	r1, [pc, #988]	; 135a0 <main@@Base+0xf28>
   131c0:	ldr	r0, [r3, r2]
   131c4:	ldr	r2, [pc, #1112]	; 13624 <main@@Base+0xfac>
   131c8:	add	r6, r6, r8
   131cc:	str	r8, [r0]
   131d0:	ldr	ip, [r3, r1]
   131d4:	ldr	r0, [pc, #1100]	; 13628 <main@@Base+0xfb0>
   131d8:	ldr	r1, [pc, #1100]	; 1362c <main@@Base+0xfb4>
   131dc:	str	r8, [ip]
   131e0:	ldr	r9, [r3, r2]
   131e4:	ldr	r2, [pc, #1092]	; 13630 <main@@Base+0xfb8>
   131e8:	sub	r5, r5, r6
   131ec:	str	fp, [r9]
   131f0:	ldr	r0, [r3, r0]
   131f4:	cmp	r5, #0
   131f8:	str	r0, [sp, #20]
   131fc:	str	fp, [r0]
   13200:	ldr	r1, [r3, r1]
   13204:	add	r7, r7, r6, lsl #2
   13208:	str	r1, [sp, #40]	; 0x28
   1320c:	str	fp, [r1]
   13210:	ldr	r3, [r3, r2]
   13214:	str	r3, [sp, #48]	; 0x30
   13218:	str	fp, [r3]
   1321c:	ble	13ce8 <main@@Base+0x1670>
   13220:	ldr	r3, [pc, #1036]	; 13634 <main@@Base+0xfbc>
   13224:	str	r8, [sp, #24]
   13228:	add	r3, pc, r3
   1322c:	str	r3, [sp, #4]
   13230:	ldr	r3, [pc, #1024]	; 13638 <main@@Base+0xfc0>
   13234:	add	r3, pc, r3
   13238:	str	r3, [sp, #28]
   1323c:	ldr	r3, [pc, #1016]	; 1363c <main@@Base+0xfc4>
   13240:	add	r3, pc, r3
   13244:	str	r3, [sp, #32]
   13248:	ldr	r3, [pc, #1008]	; 13640 <main@@Base+0xfc8>
   1324c:	add	r3, pc, r3
   13250:	str	r3, [sp, #36]	; 0x24
   13254:	ldr	r3, [pc, #1000]	; 13644 <main@@Base+0xfcc>
   13258:	add	r3, pc, r3
   1325c:	str	r3, [sp, #44]	; 0x2c
   13260:	ldr	r3, [pc, #992]	; 13648 <main@@Base+0xfd0>
   13264:	add	r3, pc, r3
   13268:	str	r3, [sp, #56]	; 0x38
   1326c:	b	132fc <main@@Base+0xc84>
   13270:	ldr	r1, [pc, #980]	; 1364c <main@@Base+0xfd4>
   13274:	mov	r0, r4
   13278:	add	r1, pc, r1
   1327c:	bl	12210 <strcmp@plt>
   13280:	cmp	r0, #0
   13284:	beq	1331c <main@@Base+0xca4>
   13288:	ldr	r1, [pc, #960]	; 13650 <main@@Base+0xfd8>
   1328c:	mov	r0, r4
   13290:	add	r1, pc, r1
   13294:	bl	12210 <strcmp@plt>
   13298:	cmp	r0, #0
   1329c:	beq	132b8 <main@@Base+0xc40>
   132a0:	ldr	r1, [pc, #940]	; 13654 <main@@Base+0xfdc>
   132a4:	mov	r0, r4
   132a8:	add	r1, pc, r1
   132ac:	bl	12210 <strcmp@plt>
   132b0:	cmp	r0, #0
   132b4:	bne	133d4 <main@@Base+0xd5c>
   132b8:	add	sl, fp, #1
   132bc:	cmp	r5, sl
   132c0:	ble	133d4 <main@@Base+0xd5c>
   132c4:	add	r1, r7, r6
   132c8:	ldr	r0, [r1, #4]
   132cc:	ldrb	r1, [r0]
   132d0:	cmp	r1, #45	; 0x2d
   132d4:	beq	133d4 <main@@Base+0xd5c>
   132d8:	bl	17a98 <codadump_filter_create@@Base>
   132dc:	ldr	r3, [sp]
   132e0:	cmp	r0, #0
   132e4:	str	r0, [r3, #664]	; 0x298
   132e8:	beq	13dcc <main@@Base+0x1754>
   132ec:	mov	fp, sl
   132f0:	add	fp, fp, #1
   132f4:	cmp	r5, fp
   132f8:	ble	1332c <main@@Base+0xcb4>
   132fc:	ldr	r4, [r7, fp, lsl #2]
   13300:	ldr	r1, [pc, #848]	; 13658 <main@@Base+0xfe0>
   13304:	mov	r0, r4
   13308:	add	r1, pc, r1
   1330c:	bl	12210 <strcmp@plt>
   13310:	lsl	r6, fp, #2
   13314:	cmp	r0, #0
   13318:	bne	13270 <main@@Base+0xbf8>
   1331c:	add	fp, fp, #1
   13320:	cmp	r5, fp
   13324:	mov	r8, r0
   13328:	bgt	132fc <main@@Base+0xc84>
   1332c:	ldr	r3, [sp]
   13330:	ldr	r3, [r3]
   13334:	cmp	r3, #0
   13338:	beq	13ce8 <main@@Base+0x1670>
   1333c:	ldrb	r3, [r3]
   13340:	cmp	r3, #0
   13344:	beq	13ce8 <main@@Base+0x1670>
   13348:	bl	1248c <coda_init@plt>
   1334c:	subs	r4, r0, #0
   13350:	bne	13f58 <main@@Base+0x18e0>
   13354:	ldr	r3, [sp, #24]
   13358:	eor	r0, r3, #1
   1335c:	bl	122d0 <coda_set_option_bypass_special_types@plt>
   13360:	mov	r0, r4
   13364:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   13368:	mov	r0, r8
   1336c:	bl	12498 <coda_set_option_perform_conversions@plt>
   13370:	bl	193e4 <traverse_info_init@@Base>
   13374:	bl	16858 <dim_info_init@@Base>
   13378:	ldr	r3, [sp, #8]
   1337c:	ldr	r0, [r3]
   13380:	cmp	r0, #0
   13384:	beq	133a4 <main@@Base+0xd2c>
   13388:	ldr	r1, [pc, #716]	; 1365c <main@@Base+0xfe4>
   1338c:	add	r1, pc, r1
   13390:	bl	1224c <fopen@plt>
   13394:	ldr	r3, [sp, #16]
   13398:	cmp	r0, #0
   1339c:	str	r0, [r3]
   133a0:	beq	13f40 <main@@Base+0x18c8>
   133a4:	bl	19458 <traverse_product@@Base>
   133a8:	ldr	r3, [sp, #8]
   133ac:	ldr	r3, [r3]
   133b0:	cmp	r3, #0
   133b4:	beq	133c4 <main@@Base+0xd4c>
   133b8:	ldr	r3, [sp, #16]
   133bc:	ldr	r0, [r3]
   133c0:	bl	12510 <fclose@plt>
   133c4:	bl	16888 <dim_info_done@@Base>
   133c8:	bl	19414 <traverse_info_done@@Base>
   133cc:	bl	123b4 <coda_done@plt>
   133d0:	b	129e0 <main@@Base+0x368>
   133d4:	ldr	r1, [pc, #644]	; 13660 <main@@Base+0xfe8>
   133d8:	mov	r0, r4
   133dc:	add	r1, pc, r1
   133e0:	bl	12210 <strcmp@plt>
   133e4:	cmp	r0, #0
   133e8:	beq	1351c <main@@Base+0xea4>
   133ec:	ldr	r1, [pc, #624]	; 13664 <main@@Base+0xfec>
   133f0:	mov	r0, r4
   133f4:	add	r1, pc, r1
   133f8:	bl	12210 <strcmp@plt>
   133fc:	cmp	r0, #0
   13400:	beq	1351c <main@@Base+0xea4>
   13404:	ldr	r1, [sp, #4]
   13408:	mov	r0, r4
   1340c:	bl	12210 <strcmp@plt>
   13410:	cmp	r0, #0
   13414:	beq	13528 <main@@Base+0xeb0>
   13418:	ldr	r1, [sp, #28]
   1341c:	mov	r0, r4
   13420:	bl	12210 <strcmp@plt>
   13424:	cmp	r0, #0
   13428:	beq	13528 <main@@Base+0xeb0>
   1342c:	ldr	r1, [sp, #32]
   13430:	mov	r0, r4
   13434:	bl	12210 <strcmp@plt>
   13438:	cmp	r0, #0
   1343c:	bne	13470 <main@@Base+0xdf8>
   13440:	add	r2, fp, #1
   13444:	cmp	r5, r2
   13448:	ble	13488 <main@@Base+0xe10>
   1344c:	add	r1, r7, r6
   13450:	ldr	r1, [r1, #4]
   13454:	ldrb	r0, [r1]
   13458:	cmp	r0, #45	; 0x2d
   1345c:	beq	13488 <main@@Base+0xe10>
   13460:	ldr	r3, [sp, #8]
   13464:	mov	fp, r2
   13468:	str	r1, [r3]
   1346c:	b	132f0 <main@@Base+0xc78>
   13470:	ldr	r1, [pc, #496]	; 13668 <main@@Base+0xff0>
   13474:	mov	r0, r4
   13478:	add	r1, pc, r1
   1347c:	bl	12210 <strcmp@plt>
   13480:	cmp	r0, #0
   13484:	beq	13440 <main@@Base+0xdc8>
   13488:	ldr	r1, [sp, #36]	; 0x24
   1348c:	mov	r0, r4
   13490:	bl	12210 <strcmp@plt>
   13494:	cmp	r0, #0
   13498:	beq	1350c <main@@Base+0xe94>
   1349c:	ldr	r1, [sp, #44]	; 0x2c
   134a0:	mov	r0, r4
   134a4:	bl	12210 <strcmp@plt>
   134a8:	cmp	r0, #0
   134ac:	beq	1350c <main@@Base+0xe94>
   134b0:	ldr	r1, [sp, #56]	; 0x38
   134b4:	mov	r0, r4
   134b8:	bl	12210 <strcmp@plt>
   134bc:	cmp	r0, #0
   134c0:	beq	134dc <main@@Base+0xe64>
   134c4:	ldr	r1, [pc, #416]	; 1366c <main@@Base+0xff4>
   134c8:	mov	r0, r4
   134cc:	add	r1, pc, r1
   134d0:	bl	12210 <strcmp@plt>
   134d4:	cmp	r0, #0
   134d8:	bne	13bc0 <main@@Base+0x1548>
   134dc:	add	r2, fp, #1
   134e0:	cmp	r5, r2
   134e4:	ble	13bc0 <main@@Base+0x1548>
   134e8:	add	r6, r7, r6
   134ec:	ldr	r1, [r6, #4]
   134f0:	ldrb	r0, [r1]
   134f4:	cmp	r0, #45	; 0x2d
   134f8:	beq	13bc0 <main@@Base+0x1548>
   134fc:	ldr	r3, [sp, #52]	; 0x34
   13500:	mov	fp, r2
   13504:	str	r1, [r3]
   13508:	b	132f0 <main@@Base+0xc78>
   1350c:	ldr	r3, [sp, #40]	; 0x28
   13510:	mov	r2, #1
   13514:	str	r2, [r3]
   13518:	b	132f0 <main@@Base+0xc78>
   1351c:	mov	r2, #1
   13520:	str	r2, [r9]
   13524:	b	132f0 <main@@Base+0xc78>
   13528:	ldr	r3, [sp, #20]
   1352c:	mov	r2, #1
   13530:	str	r2, [r3]
   13534:	b	132f0 <main@@Base+0xc78>
   13538:	andeq	sl, r1, r0, ror r9
   1353c:			; <UNDEFINED> instruction: 0x00009db0
   13540:	muleq	r0, r8, sp
   13544:	andeq	r9, r0, r8, lsl #27
   13548:	andeq	r9, r0, r4, ror sp
   1354c:	andeq	r9, r0, r8, lsr #27
   13550:	muleq	r0, r4, sp
   13554:	andeq	r9, r0, r8, lsl #27
   13558:	andeq	r9, r0, r0, ror #27
   1355c:	andeq	r9, r0, r8, lsr lr
   13560:	andeq	r9, r0, r8, lsr lr
   13564:	andeq	r9, r0, ip, lsr #15
   13568:	andeq	r9, r0, r0, lsl sp
   1356c:	muleq	r0, r8, ip
   13570:	andeq	r9, r0, ip, ror sp
   13574:	muleq	r0, r0, r7
   13578:	andeq	r9, r0, r8, asr sp
   1357c:	andeq	r9, r0, ip, asr #26
   13580:	muleq	r0, r8, ip
   13584:	andeq	r9, r0, r4, ror #25
   13588:	andeq	r9, r0, ip, ror #23
   1358c:	andeq	r9, r0, r8, lsr #23
   13590:	strdeq	r9, [r0], -r0
   13594:	ldrdeq	r9, [r0], -ip
   13598:	andeq	r0, r0, r0, ror #3
   1359c:	muleq	r0, ip, r1
   135a0:			; <UNDEFINED> instruction: 0x000001b0
   135a4:	andeq	r0, r0, r4, asr #3
   135a8:	andeq	r0, r0, r0, lsr #3
   135ac:	andeq	r0, r0, ip, lsr #3
   135b0:	andeq	r0, r0, r8, asr #3
   135b4:	andeq	r9, r0, r0, asr #18
   135b8:	andeq	r9, r0, r8, ror #17
   135bc:	andeq	r8, r0, r8, ror sl
   135c0:	andeq	r9, r0, r4, lsr #18
   135c4:	muleq	r0, ip, sl
   135c8:	ldrdeq	r8, [r0], -r0
   135cc:	andeq	r9, r0, ip, lsr #17
   135d0:	andeq	r8, r0, ip, ror #17
   135d4:	andeq	r9, r0, ip, ror r8
   135d8:	andeq	r8, r0, r0, lsl r9
   135dc:	andeq	r9, r0, r0, asr #16
   135e0:	andeq	r8, r0, ip, lsl r7
   135e4:	andeq	r9, r0, r4, lsl r7
   135e8:			; <UNDEFINED> instruction: 0x000096bc
   135ec:	andeq	r8, r0, ip, lsr r9
   135f0:	andeq	r8, r0, ip, lsr #18
   135f4:	andeq	r8, r0, ip, lsl r9
   135f8:	andeq	r9, r0, ip, ror #13
   135fc:	ldrdeq	r9, [r0], -ip
   13600:	ldrdeq	r9, [r0], -r0
   13604:	andeq	r9, r0, r8, asr #13
   13608:	andeq	r9, r0, r4, asr r6
   1360c:	andeq	r9, r0, ip, lsr #13
   13610:	andeq	r8, r0, r8, lsr #26
   13614:	andeq	r9, r0, r4, lsr #11
   13618:	andeq	r9, r0, r4, asr #10
   1361c:	andeq	r0, r0, r0, asr #3
   13620:			; <UNDEFINED> instruction: 0x000093bc
   13624:	andeq	r0, r0, ip, asr #3
   13628:	andeq	r0, r0, r8, ror #3
   1362c:	andeq	r0, r0, ip, ror #3
   13630:	andeq	r0, r0, r8, lsr #3
   13634:	andeq	r9, r0, r0, lsr r3
   13638:	andeq	r8, r0, ip, ror r7
   1363c:	andeq	r9, r0, ip, lsl r3
   13640:	andeq	r9, r0, r0, lsr #6
   13644:	andeq	r8, r0, r4, lsl r8
   13648:	andeq	r9, r0, ip, lsl #6
   1364c:	andeq	r8, r0, r4, lsr r3
   13650:	andeq	r9, r0, r4, ror r2
   13654:	andeq	r9, r0, r0, ror #4
   13658:	strdeq	r9, [r0], -r8
   1365c:	strdeq	r9, [r0], -ip
   13660:	andeq	r9, r0, r8, ror r1
   13664:	andeq	r8, r0, r0, ror #10
   13668:	andeq	r9, r0, r8, ror #1
   1366c:	andeq	r9, r0, r8, lsr #1
   13670:	ldrdeq	r0, [r0], -r4
   13674:			; <UNDEFINED> instruction: 0x000001b4
   13678:	andeq	r0, r0, r4, lsr #3
   1367c:	ldrdeq	r0, [r0], -r8
   13680:	ldrdeq	r0, [r0], -ip
   13684:			; <UNDEFINED> instruction: 0x000001bc
   13688:	ldrdeq	r7, [r0], -ip
   1368c:	ldrdeq	r8, [r0], -r4
   13690:	andeq	r8, r0, ip, ror sp
   13694:	strdeq	r7, [r0], -ip
   13698:	andeq	r7, r0, ip, ror #31
   1369c:	ldrdeq	r7, [r0], -ip
   136a0:	andeq	r8, r0, ip, lsr #27
   136a4:	muleq	r0, ip, sp
   136a8:	muleq	r0, r0, sp
   136ac:	andeq	r8, r0, r8, lsl #27
   136b0:	andeq	r8, r0, r4, lsl sp
   136b4:	andeq	r8, r0, ip, ror #26
   136b8:	andeq	r8, r0, r8, ror #7
   136bc:	andeq	r8, r0, r4, ror #24
   136c0:			; <UNDEFINED> instruction: 0x00008bb0
   136c4:	andeq	r7, r0, r0, asr #23
   136c8:	andeq	r8, r0, r8, ror r9
   136cc:	andeq	r7, r0, ip, ror pc
   136d0:	strdeq	r7, [r0], -r4
   136d4:	muleq	r0, ip, r8
   136d8:	andeq	r7, r0, r8, ror fp
   136dc:	andeq	r8, r0, r0, lsr #16
   136e0:	andeq	r8, r0, r0, lsl #16
   136e4:	andeq	r8, r0, r0, ror #15
   136e8:			; <UNDEFINED> instruction: 0x000087b8
   136ec:	andeq	r8, r0, r4, lsr r7
   136f0:	andeq	r8, r0, r0, asr #14
   136f4:	andeq	r8, r0, r4, asr r7
   136f8:	muleq	r0, r4, r6
   136fc:	andeq	r8, r0, r0, lsr r7
   13700:	ldrdeq	r8, [r0], -ip
   13704:			; <UNDEFINED> instruction: 0x000086bc
   13708:	andeq	r8, r0, r0, asr r7
   1370c:	andeq	r8, r0, r4, lsr #14
   13710:	andeq	r8, r0, r8, asr r6
   13714:	muleq	r0, r8, r5
   13718:	andeq	r8, r0, r0, ror #10
   1371c:	andeq	r8, r0, r8, asr #11
   13720:	andeq	r8, r0, r8, lsr #11
   13724:	andeq	r8, r0, ip, lsr r6
   13728:	ldrdeq	r8, [r0], -r0
   1372c:	andeq	r8, r0, ip, ror #11
   13730:	andeq	r8, r0, r0, lsl #9
   13734:	andeq	r8, r0, ip, lsl r5
   13738:			; <UNDEFINED> instruction: 0x000001b8
   1373c:	andeq	r8, r0, r8, lsr #8
   13740:	ldr	ip, [sp, #12]
   13744:	ldr	r2, [pc, #-220]	; 13670 <main@@Base+0xff8>
   13748:	ldr	r3, [pc, #-220]	; 13674 <main@@Base+0xffc>
   1374c:	mov	r0, #4
   13750:	ldr	r2, [ip, r2]
   13754:	ldr	r1, [pc, #-228]	; 13678 <main@@Base+0x1000>
   13758:	add	r6, r6, #1
   1375c:	str	r0, [r2]
   13760:	ldr	r3, [ip, r3]
   13764:	mov	r0, ip
   13768:	mov	ip, r3
   1376c:	str	r3, [sp]
   13770:	str	sl, [ip]
   13774:	ldr	r3, [pc, #-256]	; 1367c <main@@Base+0x1004>
   13778:	ldr	r1, [r0, r1]
   1377c:	ldr	r2, [pc, #-260]	; 13680 <main@@Base+0x1008>
   13780:	str	r1, [sp, #8]
   13784:	str	sl, [r1]
   13788:	ldr	r3, [r0, r3]
   1378c:	mov	r1, r0
   13790:	str	r3, [sp, #20]
   13794:	mov	r0, r3
   13798:	ldr	r3, [pc, #-284]	; 13684 <main@@Base+0x100c>
   1379c:	str	sl, [r0]
   137a0:	ldr	r2, [r1, r2]
   137a4:	ldr	r3, [r1, r3]
   137a8:	sub	r5, r5, r6
   137ac:	mov	r1, r3
   137b0:	str	r3, [sp, #16]
   137b4:	ldr	r3, [r2]
   137b8:	cmp	r5, #0
   137bc:	add	r7, r7, r6, lsl #2
   137c0:	str	r3, [r1]
   137c4:	ble	13d10 <main@@Base+0x1698>
   137c8:	ldr	r3, [pc, #-328]	; 13688 <main@@Base+0x1010>
   137cc:	ldr	r8, [pc, #-328]	; 1368c <main@@Base+0x1014>
   137d0:	add	r3, pc, r3
   137d4:	str	r3, [sp, #4]
   137d8:	ldr	r3, [pc, #-336]	; 13690 <main@@Base+0x1018>
   137dc:	mov	r9, sl
   137e0:	add	r3, pc, r3
   137e4:	str	r3, [sp, #24]
   137e8:	ldr	r3, [pc, #-348]	; 13694 <main@@Base+0x101c>
   137ec:	add	r8, pc, r8
   137f0:	add	r3, pc, r3
   137f4:	str	r3, [sp, #40]	; 0x28
   137f8:	ldr	r3, [pc, #-360]	; 13698 <main@@Base+0x1020>
   137fc:	mov	fp, #1
   13800:	add	r3, pc, r3
   13804:	str	r3, [sp, #56]	; 0x38
   13808:	ldr	r3, [pc, #-372]	; 1369c <main@@Base+0x1024>
   1380c:	str	fp, [sp, #28]
   13810:	add	r3, pc, r3
   13814:	str	r3, [sp, #52]	; 0x34
   13818:	ldr	r3, [pc, #-384]	; 136a0 <main@@Base+0x1028>
   1381c:	add	r3, pc, r3
   13820:	str	r3, [sp, #44]	; 0x2c
   13824:	ldr	r3, [pc, #-392]	; 136a4 <main@@Base+0x102c>
   13828:	add	r3, pc, r3
   1382c:	str	r3, [sp, #36]	; 0x24
   13830:	ldr	r3, [pc, #-400]	; 136a8 <main@@Base+0x1030>
   13834:	add	r3, pc, r3
   13838:	str	r3, [sp, #60]	; 0x3c
   1383c:	ldr	r3, [pc, #-408]	; 136ac <main@@Base+0x1034>
   13840:	add	r3, pc, r3
   13844:	str	r3, [sp, #64]	; 0x40
   13848:	ldr	r3, [pc, #-416]	; 136b0 <main@@Base+0x1038>
   1384c:	add	r3, pc, r3
   13850:	str	r3, [sp, #32]
   13854:	ldr	r3, [pc, #-424]	; 136b4 <main@@Base+0x103c>
   13858:	add	r3, pc, r3
   1385c:	str	r3, [sp, #48]	; 0x30
   13860:	ldr	r4, [r7, sl, lsl #2]
   13864:	mov	r1, r8
   13868:	mov	r0, r4
   1386c:	bl	12210 <strcmp@plt>
   13870:	lsl	r6, sl, #2
   13874:	cmp	r0, #0
   13878:	beq	13a0c <main@@Base+0x1394>
   1387c:	ldr	r1, [pc, #-460]	; 136b8 <main@@Base+0x1040>
   13880:	mov	r0, r4
   13884:	add	r1, pc, r1
   13888:	bl	12210 <strcmp@plt>
   1388c:	cmp	r0, #0
   13890:	beq	13a0c <main@@Base+0x1394>
   13894:	ldr	r1, [pc, #-480]	; 136bc <main@@Base+0x1044>
   13898:	mov	r0, r4
   1389c:	add	r1, pc, r1
   138a0:	bl	12210 <strcmp@plt>
   138a4:	cmp	r0, #0
   138a8:	beq	13a20 <main@@Base+0x13a8>
   138ac:	ldr	r1, [sp, #4]
   138b0:	mov	r0, r4
   138b4:	bl	12210 <strcmp@plt>
   138b8:	cmp	r0, #0
   138bc:	beq	13a20 <main@@Base+0x13a8>
   138c0:	ldr	r1, [sp, #24]
   138c4:	mov	r0, r4
   138c8:	bl	12210 <strcmp@plt>
   138cc:	cmp	r0, #0
   138d0:	beq	13a28 <main@@Base+0x13b0>
   138d4:	ldr	r1, [sp, #32]
   138d8:	mov	r0, r4
   138dc:	bl	12210 <strcmp@plt>
   138e0:	cmp	r0, #0
   138e4:	beq	13a28 <main@@Base+0x13b0>
   138e8:	ldr	r1, [sp, #48]	; 0x30
   138ec:	mov	r0, r4
   138f0:	bl	12210 <strcmp@plt>
   138f4:	cmp	r0, #0
   138f8:	bne	13940 <main@@Base+0x12c8>
   138fc:	add	r3, sl, #1
   13900:	cmp	r5, r3
   13904:	ble	13970 <main@@Base+0x12f8>
   13908:	add	r6, r7, r6
   1390c:	ldr	r2, [r6, #4]
   13910:	ldrb	r1, [r2]
   13914:	cmp	r1, #45	; 0x2d
   13918:	beq	13b6c <main@@Base+0x14f4>
   1391c:	ldr	r1, [sp, #20]
   13920:	mov	sl, r3
   13924:	str	r2, [r1]
   13928:	b	13a10 <main@@Base+0x1398>
   1392c:	ldr	r1, [sp, #36]	; 0x24
   13930:	mov	r0, r4
   13934:	bl	12210 <strcmp@plt>
   13938:	cmp	r0, #0
   1393c:	beq	13970 <main@@Base+0x12f8>
   13940:	ldr	r1, [sp, #44]	; 0x2c
   13944:	mov	r0, r4
   13948:	bl	12210 <strcmp@plt>
   1394c:	cmp	r0, #0
   13950:	beq	138fc <main@@Base+0x1284>
   13954:	ldr	r1, [sp, #52]	; 0x34
   13958:	mov	r0, r4
   1395c:	bl	12210 <strcmp@plt>
   13960:	cmp	r0, #0
   13964:	bne	13ad0 <main@@Base+0x1458>
   13968:	str	r0, [sp, #28]
   1396c:	b	13a10 <main@@Base+0x1398>
   13970:	ldr	r1, [sp, #40]	; 0x28
   13974:	mov	r0, r4
   13978:	bl	12210 <strcmp@plt>
   1397c:	cmp	r0, #0
   13980:	bne	13ad0 <main@@Base+0x1458>
   13984:	str	r0, [sp, #28]
   13988:	ldr	r3, [sp]
   1398c:	ldr	r3, [r3]
   13990:	cmp	r3, #0
   13994:	beq	13d10 <main@@Base+0x1698>
   13998:	ldrb	r3, [r3]
   1399c:	cmp	r3, #0
   139a0:	beq	13d10 <main@@Base+0x1698>
   139a4:	bl	1248c <coda_init@plt>
   139a8:	cmp	r0, #0
   139ac:	bne	14000 <main@@Base+0x1988>
   139b0:	ldr	r3, [sp, #28]
   139b4:	eor	r0, r3, #1
   139b8:	bl	122d0 <coda_set_option_bypass_special_types@plt>
   139bc:	mov	r0, fp
   139c0:	bl	12498 <coda_set_option_perform_conversions@plt>
   139c4:	ldr	r3, [sp, #8]
   139c8:	ldr	r0, [r3]
   139cc:	cmp	r0, #0
   139d0:	beq	139f0 <main@@Base+0x1378>
   139d4:	ldr	r1, [pc, #-796]	; 136c0 <main@@Base+0x1048>
   139d8:	add	r1, pc, r1
   139dc:	bl	1224c <fopen@plt>
   139e0:	ldr	r3, [sp, #16]
   139e4:	cmp	r0, #0
   139e8:	str	r0, [r3]
   139ec:	beq	13f90 <main@@Base+0x1918>
   139f0:	mov	r0, r9
   139f4:	bl	1a1d0 <print_yaml_data@@Base>
   139f8:	ldr	r3, [sp, #8]
   139fc:	ldr	r3, [r3]
   13a00:	cmp	r3, #0
   13a04:	bne	129d0 <main@@Base+0x358>
   13a08:	b	129dc <main@@Base+0x364>
   13a0c:	mov	r9, #1
   13a10:	add	sl, sl, #1
   13a14:	cmp	r5, sl
   13a18:	bgt	13860 <main@@Base+0x11e8>
   13a1c:	b	13988 <main@@Base+0x1310>
   13a20:	mov	fp, r0
   13a24:	b	13a10 <main@@Base+0x1398>
   13a28:	add	r3, sl, #1
   13a2c:	cmp	r5, r3
   13a30:	ble	1392c <main@@Base+0x12b4>
   13a34:	add	r6, r7, r6
   13a38:	ldr	r2, [r6, #4]
   13a3c:	ldrb	r1, [r2]
   13a40:	cmp	r1, #45	; 0x2d
   13a44:	beq	13b30 <main@@Base+0x14b8>
   13a48:	ldr	r1, [sp, #8]
   13a4c:	mov	sl, r3
   13a50:	str	r2, [r1]
   13a54:	b	13a10 <main@@Base+0x1398>
   13a58:	ldr	r1, [sp, #36]	; 0x24
   13a5c:	mov	r0, r5
   13a60:	bl	12210 <strcmp@plt>
   13a64:	cmp	r0, #0
   13a68:	bne	130c4 <main@@Base+0xa4c>
   13a6c:	ldr	r1, [sp, #44]	; 0x2c
   13a70:	mov	r0, r5
   13a74:	bl	12210 <strcmp@plt>
   13a78:	cmp	r0, #0
   13a7c:	bne	13aac <main@@Base+0x1434>
   13a80:	str	r0, [sp, #28]
   13a84:	b	12ff4 <main@@Base+0x97c>
   13a88:	ldr	r1, [sp, #60]	; 0x3c
   13a8c:	mov	r0, r5
   13a90:	str	r3, [sp, #68]	; 0x44
   13a94:	bl	12210 <strcmp@plt>
   13a98:	ldr	r3, [sp, #68]	; 0x44
   13a9c:	cmp	r0, #0
   13aa0:	streq	r0, [sp, #28]
   13aa4:	moveq	fp, r3
   13aa8:	beq	12f20 <main@@Base+0x8a8>
   13aac:	sub	r3, r4, #1
   13ab0:	cmp	r3, fp
   13ab4:	bne	13f20 <main@@Base+0x18a8>
   13ab8:	ldrb	r3, [r5]
   13abc:	cmp	r3, #45	; 0x2d
   13ac0:	beq	13f20 <main@@Base+0x18a8>
   13ac4:	ldr	r3, [sp]
   13ac8:	str	r5, [r3]
   13acc:	b	12fe8 <main@@Base+0x970>
   13ad0:	sub	r3, r5, #1
   13ad4:	cmp	r3, sl
   13ad8:	bne	13f00 <main@@Base+0x1888>
   13adc:	ldrb	r3, [r4]
   13ae0:	cmp	r3, #45	; 0x2d
   13ae4:	beq	13f00 <main@@Base+0x1888>
   13ae8:	ldr	r3, [sp]
   13aec:	str	r4, [r3]
   13af0:	b	13a10 <main@@Base+0x1398>
   13af4:	ldr	r1, [sp, #56]	; 0x38
   13af8:	mov	r0, r5
   13afc:	str	r3, [sp, #68]	; 0x44
   13b00:	bl	12210 <strcmp@plt>
   13b04:	ldr	r3, [sp, #68]	; 0x44
   13b08:	cmp	r0, #0
   13b0c:	beq	13a88 <main@@Base+0x1410>
   13b10:	ldr	r1, [sp, #64]	; 0x40
   13b14:	mov	r0, r5
   13b18:	str	r3, [sp, #68]	; 0x44
   13b1c:	bl	12210 <strcmp@plt>
   13b20:	ldr	r3, [sp, #68]	; 0x44
   13b24:	cmp	r0, #0
   13b28:	beq	12fcc <main@@Base+0x954>
   13b2c:	b	130d8 <main@@Base+0xa60>
   13b30:	ldr	r1, [sp, #60]	; 0x3c
   13b34:	mov	r0, r4
   13b38:	str	r3, [sp, #68]	; 0x44
   13b3c:	bl	12210 <strcmp@plt>
   13b40:	ldr	r3, [sp, #68]	; 0x44
   13b44:	cmp	r0, #0
   13b48:	beq	13b6c <main@@Base+0x14f4>
   13b4c:	ldr	r1, [sp, #64]	; 0x40
   13b50:	mov	r0, r4
   13b54:	str	r3, [sp, #68]	; 0x44
   13b58:	bl	12210 <strcmp@plt>
   13b5c:	ldr	r3, [sp, #68]	; 0x44
   13b60:	cmp	r0, #0
   13b64:	beq	1390c <main@@Base+0x1294>
   13b68:	b	13954 <main@@Base+0x12dc>
   13b6c:	ldr	r1, [sp, #56]	; 0x38
   13b70:	mov	r0, r4
   13b74:	str	r3, [sp, #68]	; 0x44
   13b78:	bl	12210 <strcmp@plt>
   13b7c:	ldr	r3, [sp, #68]	; 0x44
   13b80:	cmp	r0, #0
   13b84:	bne	13ad0 <main@@Base+0x1458>
   13b88:	str	r0, [sp, #28]
   13b8c:	mov	sl, r3
   13b90:	b	13860 <main@@Base+0x11e8>
   13b94:	ldr	r1, [pc, #-1240]	; 136c4 <main@@Base+0x104c>
   13b98:	mov	r0, r4
   13b9c:	add	r1, pc, r1
   13ba0:	bl	12210 <strcmp@plt>
   13ba4:	cmp	r0, #0
   13ba8:	bne	13c6c <main@@Base+0x15f4>
   13bac:	ldr	r3, [sp, #44]	; 0x2c
   13bb0:	mov	r2, #1
   13bb4:	str	r2, [r9]
   13bb8:	str	r2, [r3]
   13bbc:	b	12d50 <main@@Base+0x6d8>
   13bc0:	ldr	r1, [pc, #-1280]	; 136c8 <main@@Base+0x1050>
   13bc4:	mov	r0, r4
   13bc8:	add	r1, pc, r1
   13bcc:	bl	12210 <strcmp@plt>
   13bd0:	cmp	r0, #0
   13bd4:	beq	13c5c <main@@Base+0x15e4>
   13bd8:	ldr	r1, [pc, #-1300]	; 136cc <main@@Base+0x1054>
   13bdc:	mov	r0, r4
   13be0:	add	r1, pc, r1
   13be4:	bl	12210 <strcmp@plt>
   13be8:	cmp	r0, #0
   13bec:	beq	13c5c <main@@Base+0x15e4>
   13bf0:	ldr	r1, [pc, #-1320]	; 136d0 <main@@Base+0x1058>
   13bf4:	mov	r0, r4
   13bf8:	add	r1, pc, r1
   13bfc:	bl	12210 <strcmp@plt>
   13c00:	cmp	r0, #0
   13c04:	beq	13d6c <main@@Base+0x16f4>
   13c08:	sub	r2, r5, #1
   13c0c:	cmp	r2, fp
   13c10:	bne	13e70 <main@@Base+0x17f8>
   13c14:	ldrb	r2, [r4]
   13c18:	cmp	r2, #45	; 0x2d
   13c1c:	beq	13e70 <main@@Base+0x17f8>
   13c20:	ldr	r3, [sp]
   13c24:	str	r4, [r3]
   13c28:	b	132f0 <main@@Base+0xc78>
   13c2c:	ldr	r0, [sp, #12]
   13c30:	ldr	r3, [pc, #-1280]	; 13738 <main@@Base+0x10c0>
   13c34:	mov	r2, #25
   13c38:	mov	r1, #1
   13c3c:	ldr	r3, [r0, r3]
   13c40:	ldr	r0, [pc, #-1396]	; 136d4 <main@@Base+0x105c>
   13c44:	add	r0, pc, r0
   13c48:	ldr	r3, [r3]
   13c4c:	bl	12384 <fwrite@plt>
   13c50:	bl	1a2d0 <print_yaml_data@@Base+0x100>
   13c54:	mov	r0, #1
   13c58:	bl	12420 <exit@plt>
   13c5c:	ldr	r3, [sp, #48]	; 0x30
   13c60:	mov	r2, #1
   13c64:	str	r2, [r3]
   13c68:	b	132f0 <main@@Base+0xc78>
   13c6c:	ldr	r1, [pc, #-1436]	; 136d8 <main@@Base+0x1060>
   13c70:	mov	r0, r4
   13c74:	add	r1, pc, r1
   13c78:	bl	12210 <strcmp@plt>
   13c7c:	cmp	r0, #0
   13c80:	beq	13d08 <main@@Base+0x1690>
   13c84:	sub	r2, r5, #1
   13c88:	cmp	r2, fp
   13c8c:	bne	13dec <main@@Base+0x1774>
   13c90:	ldrb	r2, [r4]
   13c94:	cmp	r2, #45	; 0x2d
   13c98:	beq	13dec <main@@Base+0x1774>
   13c9c:	ldr	r3, [sp]
   13ca0:	str	r4, [r3]
   13ca4:	b	12d50 <main@@Base+0x6d8>
   13ca8:	ldr	r0, [sp, #12]
   13cac:	ldr	r3, [pc, #-1404]	; 13738 <main@@Base+0x10c0>
   13cb0:	mov	r2, #25
   13cb4:	mov	r1, #1
   13cb8:	ldr	r3, [r0, r3]
   13cbc:	ldr	r0, [pc, #-1512]	; 136dc <main@@Base+0x1064>
   13cc0:	add	r0, pc, r0
   13cc4:	b	13c48 <main@@Base+0x15d0>
   13cc8:	ldr	r0, [sp, #12]
   13ccc:	ldr	r3, [pc, #-1436]	; 13738 <main@@Base+0x10c0>
   13cd0:	mov	r2, #25
   13cd4:	mov	r1, #1
   13cd8:	ldr	r3, [r0, r3]
   13cdc:	ldr	r0, [pc, #-1540]	; 136e0 <main@@Base+0x1068>
   13ce0:	add	r0, pc, r0
   13ce4:	b	13c48 <main@@Base+0x15d0>
   13ce8:	ldr	r0, [sp, #12]
   13cec:	ldr	r3, [pc, #-1468]	; 13738 <main@@Base+0x10c0>
   13cf0:	mov	r2, #25
   13cf4:	mov	r1, #1
   13cf8:	ldr	r3, [r0, r3]
   13cfc:	ldr	r0, [pc, #-1568]	; 136e4 <main@@Base+0x106c>
   13d00:	add	r0, pc, r0
   13d04:	b	13c48 <main@@Base+0x15d0>
   13d08:	str	r0, [sp, #24]
   13d0c:	b	12d50 <main@@Base+0x6d8>
   13d10:	ldr	r0, [sp, #12]
   13d14:	ldr	r3, [pc, #-1508]	; 13738 <main@@Base+0x10c0>
   13d18:	mov	r2, #25
   13d1c:	mov	r1, #1
   13d20:	ldr	r3, [r0, r3]
   13d24:	ldr	r0, [pc, #-1604]	; 136e8 <main@@Base+0x1070>
   13d28:	add	r0, pc, r0
   13d2c:	b	13c48 <main@@Base+0x15d0>
   13d30:	bl	12600 <coda_get_libcoda_version@plt>
   13d34:	mov	r1, r0
   13d38:	ldr	r0, [pc, #-1620]	; 136ec <main@@Base+0x1074>
   13d3c:	add	r0, pc, r0
   13d40:	bl	12234 <printf@plt>
   13d44:	ldr	r0, [pc, #-1628]	; 136f0 <main@@Base+0x1078>
   13d48:	add	r0, pc, r0
   13d4c:	bl	123c0 <puts@plt>
   13d50:	mov	r0, #10
   13d54:	bl	124c8 <putchar@plt>
   13d58:	mov	r0, #0
   13d5c:	bl	12420 <exit@plt>
   13d60:	bl	1a2d0 <print_yaml_data@@Base+0x100>
   13d64:	mov	r0, #0
   13d68:	bl	12420 <exit@plt>
   13d6c:	str	r0, [sp, #24]
   13d70:	b	132f0 <main@@Base+0xc78>
   13d74:	ldr	r0, [sp, #12]
   13d78:	ldr	r3, [pc, #-1608]	; 13738 <main@@Base+0x10c0>
   13d7c:	mov	r2, #25
   13d80:	mov	r1, #1
   13d84:	ldr	r3, [r0, r3]
   13d88:	ldr	r0, [pc, #-1692]	; 136f4 <main@@Base+0x107c>
   13d8c:	add	r0, pc, r0
   13d90:	b	13c48 <main@@Base+0x15d0>
   13d94:	ldr	r2, [sp, #12]
   13d98:	ldr	r3, [pc, #-1640]	; 13738 <main@@Base+0x10c0>
   13d9c:	ldr	r3, [r2, r3]
   13da0:	ldr	r4, [r3]
   13da4:	bl	1260c <coda_get_errno@plt>
   13da8:	ldr	r0, [r0]
   13dac:	bl	125c4 <coda_errno_to_string@plt>
   13db0:	ldr	r1, [pc, #-1728]	; 136f8 <main@@Base+0x1080>
   13db4:	add	r1, pc, r1
   13db8:	mov	r2, r0
   13dbc:	mov	r0, r4
   13dc0:	bl	12468 <fprintf@plt>
   13dc4:	mov	r0, #1
   13dc8:	bl	12420 <exit@plt>
   13dcc:	ldr	r0, [sp, #12]
   13dd0:	ldr	r3, [pc, #-1696]	; 13738 <main@@Base+0x10c0>
   13dd4:	mov	r2, #40	; 0x28
   13dd8:	mov	r1, #1
   13ddc:	ldr	r3, [r0, r3]
   13de0:	ldr	r0, [pc, #-1772]	; 136fc <main@@Base+0x1084>
   13de4:	add	r0, pc, r0
   13de8:	b	13c48 <main@@Base+0x15d0>
   13dec:	ldr	r0, [sp, #12]
   13df0:	ldr	r3, [pc, #-1728]	; 13738 <main@@Base+0x10c0>
   13df4:	mov	r2, #25
   13df8:	mov	r1, #1
   13dfc:	ldr	r3, [r0, r3]
   13e00:	ldr	r0, [pc, #-1800]	; 13700 <main@@Base+0x1088>
   13e04:	add	r0, pc, r0
   13e08:	b	13c48 <main@@Base+0x15d0>
   13e0c:	ldr	r0, [sp, #12]
   13e10:	ldr	r3, [pc, #-1760]	; 13738 <main@@Base+0x10c0>
   13e14:	mov	r2, #25
   13e18:	mov	r1, #1
   13e1c:	ldr	r3, [r0, r3]
   13e20:	ldr	r0, [pc, #-1828]	; 13704 <main@@Base+0x108c>
   13e24:	add	r0, pc, r0
   13e28:	b	13c48 <main@@Base+0x15d0>
   13e2c:	ldr	r2, [sp, #8]
   13e30:	ldr	r1, [pc, #-1840]	; 13708 <main@@Base+0x1090>
   13e34:	ldr	r3, [pc, #-1796]	; 13738 <main@@Base+0x10c0>
   13e38:	ldr	r2, [r2]
   13e3c:	add	r1, pc, r1
   13e40:	ldr	r0, [sp, #12]
   13e44:	ldr	r3, [r0, r3]
   13e48:	ldr	r0, [r3]
   13e4c:	bl	12468 <fprintf@plt>
   13e50:	mov	r0, #1
   13e54:	bl	12420 <exit@plt>
   13e58:	ldr	r2, [sp, #8]
   13e5c:	ldr	r1, [pc, #-1880]	; 1370c <main@@Base+0x1094>
   13e60:	ldr	r3, [pc, #-1840]	; 13738 <main@@Base+0x10c0>
   13e64:	ldr	r2, [r2]
   13e68:	add	r1, pc, r1
   13e6c:	b	13e40 <main@@Base+0x17c8>
   13e70:	ldr	r0, [sp, #12]
   13e74:	ldr	r3, [pc, #-1860]	; 13738 <main@@Base+0x10c0>
   13e78:	mov	r2, #25
   13e7c:	mov	r1, #1
   13e80:	ldr	r3, [r0, r3]
   13e84:	ldr	r0, [pc, #-1916]	; 13710 <main@@Base+0x1098>
   13e88:	add	r0, pc, r0
   13e8c:	b	13c48 <main@@Base+0x15d0>
   13e90:	ldr	r2, [sp, #12]
   13e94:	ldr	r3, [pc, #-1892]	; 13738 <main@@Base+0x10c0>
   13e98:	ldr	r3, [r2, r3]
   13e9c:	ldr	r4, [r3]
   13ea0:	bl	1260c <coda_get_errno@plt>
   13ea4:	ldr	r0, [r0]
   13ea8:	bl	125c4 <coda_errno_to_string@plt>
   13eac:	ldr	r1, [pc, #-1952]	; 13714 <main@@Base+0x109c>
   13eb0:	add	r1, pc, r1
   13eb4:	mov	r2, r0
   13eb8:	mov	r0, r4
   13ebc:	bl	12468 <fprintf@plt>
   13ec0:	mov	r0, #1
   13ec4:	bl	12420 <exit@plt>
   13ec8:	ldr	r2, [sp, #12]
   13ecc:	ldr	r3, [pc, #-1948]	; 13738 <main@@Base+0x10c0>
   13ed0:	ldr	r3, [r2, r3]
   13ed4:	ldr	r4, [r3]
   13ed8:	bl	1260c <coda_get_errno@plt>
   13edc:	ldr	r0, [r0]
   13ee0:	bl	125c4 <coda_errno_to_string@plt>
   13ee4:	ldr	r1, [pc, #-2004]	; 13718 <main@@Base+0x10a0>
   13ee8:	add	r1, pc, r1
   13eec:	mov	r2, r0
   13ef0:	mov	r0, r4
   13ef4:	bl	12468 <fprintf@plt>
   13ef8:	mov	r0, #1
   13efc:	bl	12420 <exit@plt>
   13f00:	ldr	r0, [sp, #12]
   13f04:	ldr	r3, [pc, #-2004]	; 13738 <main@@Base+0x10c0>
   13f08:	mov	r2, #25
   13f0c:	mov	r1, #1
   13f10:	ldr	r3, [r0, r3]
   13f14:	ldr	r0, [pc, #-2048]	; 1371c <main@@Base+0x10a4>
   13f18:	add	r0, pc, r0
   13f1c:	b	13c48 <main@@Base+0x15d0>
   13f20:	ldr	r0, [sp, #12]
   13f24:	ldr	r3, [pc, #-2036]	; 13738 <main@@Base+0x10c0>
   13f28:	mov	r2, #25
   13f2c:	mov	r1, #1
   13f30:	ldr	r3, [r0, r3]
   13f34:	ldr	r0, [pc, #-2076]	; 13720 <main@@Base+0x10a8>
   13f38:	add	r0, pc, r0
   13f3c:	b	13c48 <main@@Base+0x15d0>
   13f40:	ldr	r2, [sp, #8]
   13f44:	ldr	r1, [pc, #-2088]	; 13724 <main@@Base+0x10ac>
   13f48:	ldr	r3, [pc, #-2072]	; 13738 <main@@Base+0x10c0>
   13f4c:	ldr	r2, [r2]
   13f50:	add	r1, pc, r1
   13f54:	b	13e40 <main@@Base+0x17c8>
   13f58:	ldr	r2, [sp, #12]
   13f5c:	ldr	r3, [pc, #-2092]	; 13738 <main@@Base+0x10c0>
   13f60:	ldr	r3, [r2, r3]
   13f64:	ldr	r4, [r3]
   13f68:	bl	1260c <coda_get_errno@plt>
   13f6c:	ldr	r0, [r0]
   13f70:	bl	125c4 <coda_errno_to_string@plt>
   13f74:	ldr	r1, [pc, #-2132]	; 13728 <main@@Base+0x10b0>
   13f78:	add	r1, pc, r1
   13f7c:	mov	r2, r0
   13f80:	mov	r0, r4
   13f84:	bl	12468 <fprintf@plt>
   13f88:	mov	r0, #1
   13f8c:	bl	12420 <exit@plt>
   13f90:	ldr	r2, [sp, #8]
   13f94:	ldr	r1, [pc, #-2160]	; 1372c <main@@Base+0x10b4>
   13f98:	ldr	r3, [pc, #-2152]	; 13738 <main@@Base+0x10c0>
   13f9c:	ldr	r2, [r2]
   13fa0:	add	r1, pc, r1
   13fa4:	b	13e40 <main@@Base+0x17c8>
   13fa8:	ldr	r2, [sp, #12]
   13fac:	ldr	r3, [pc, #-2172]	; 13738 <main@@Base+0x10c0>
   13fb0:	ldr	r3, [r2, r3]
   13fb4:	ldr	r4, [r3]
   13fb8:	bl	1260c <coda_get_errno@plt>
   13fbc:	ldr	r0, [r0]
   13fc0:	bl	125c4 <coda_errno_to_string@plt>
   13fc4:	ldr	r1, [pc, #-2204]	; 13730 <main@@Base+0x10b8>
   13fc8:	add	r1, pc, r1
   13fcc:	mov	r2, r0
   13fd0:	mov	r0, r4
   13fd4:	bl	12468 <fprintf@plt>
   13fd8:	mov	r0, #1
   13fdc:	bl	12420 <exit@plt>
   13fe0:	ldr	r0, [sp, #12]
   13fe4:	ldr	r3, [pc, #-2228]	; 13738 <main@@Base+0x10c0>
   13fe8:	mov	r2, #40	; 0x28
   13fec:	mov	r1, #1
   13ff0:	ldr	r3, [r0, r3]
   13ff4:	ldr	r0, [pc, #-2248]	; 13734 <main@@Base+0x10bc>
   13ff8:	add	r0, pc, r0
   13ffc:	b	13c48 <main@@Base+0x15d0>
   14000:	ldr	r2, [sp, #12]
   14004:	ldr	r3, [pc, #-2260]	; 13738 <main@@Base+0x10c0>
   14008:	ldr	r3, [r2, r3]
   1400c:	ldr	r4, [r3]
   14010:	bl	1260c <coda_get_errno@plt>
   14014:	ldr	r0, [r0]
   14018:	bl	125c4 <coda_errno_to_string@plt>
   1401c:	ldr	r1, [pc, #-2280]	; 1373c <main@@Base+0x10c4>
   14020:	add	r1, pc, r1
   14024:	mov	r2, r0
   14028:	mov	r0, r4
   1402c:	bl	12468 <fprintf@plt>
   14030:	mov	r0, #1
   14034:	bl	12420 <exit@plt>

00014038 <_start@@Base>:
   14038:	mov	fp, #0
   1403c:	mov	lr, #0
   14040:	pop	{r1}		; (ldr r1, [sp], #4)
   14044:	mov	r2, sp
   14048:	push	{r2}		; (str r2, [sp, #-4]!)
   1404c:	push	{r0}		; (str r0, [sp, #-4]!)
   14050:	ldr	ip, [pc, #16]	; 14068 <_start@@Base+0x30>
   14054:	push	{ip}		; (str ip, [sp, #-4]!)
   14058:	ldr	r0, [pc, #12]	; 1406c <_start@@Base+0x34>
   1405c:	ldr	r3, [pc, #12]	; 14070 <_start@@Base+0x38>
   14060:	bl	123e4 <__libc_start_main@plt>
   14064:	bl	1263c <abort@plt>
   14068:	andeq	sl, r1, r4, lsr ip
   1406c:	andeq	r2, r1, r8, ror r6
   14070:	ldrdeq	sl, [r1], -r4
   14074:	ldr	r3, [pc, #20]	; 14090 <_start@@Base+0x58>
   14078:	ldr	r2, [pc, #20]	; 14094 <_start@@Base+0x5c>
   1407c:	add	r3, pc, r3
   14080:	ldr	r2, [r3, r2]
   14084:	cmp	r2, #0
   14088:	bxeq	lr
   1408c:	b	123f0 <__gmon_start__@plt>
   14090:	andeq	r8, r1, ip, ror pc
   14094:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14098:	ldr	r3, [pc, #28]	; 140bc <_start@@Base+0x84>
   1409c:	ldr	r0, [pc, #28]	; 140c0 <_start@@Base+0x88>
   140a0:	sub	r3, r3, r0
   140a4:	cmp	r3, #6
   140a8:	bxls	lr
   140ac:	ldr	r3, [pc, #16]	; 140c4 <_start@@Base+0x8c>
   140b0:	cmp	r3, #0
   140b4:	bxeq	lr
   140b8:	bx	r3
   140bc:	andeq	sp, r2, r7, lsl #4
   140c0:	andeq	sp, r2, r4, lsl #4
   140c4:	andeq	r0, r0, r0
   140c8:	ldr	r1, [pc, #36]	; 140f4 <_start@@Base+0xbc>
   140cc:	ldr	r0, [pc, #36]	; 140f8 <_start@@Base+0xc0>
   140d0:	sub	r1, r1, r0
   140d4:	asr	r1, r1, #2
   140d8:	add	r1, r1, r1, lsr #31
   140dc:	asrs	r1, r1, #1
   140e0:	bxeq	lr
   140e4:	ldr	r3, [pc, #16]	; 140fc <_start@@Base+0xc4>
   140e8:	cmp	r3, #0
   140ec:	bxeq	lr
   140f0:	bx	r3
   140f4:	andeq	sp, r2, r4, lsl #4
   140f8:	andeq	sp, r2, r4, lsl #4
   140fc:	andeq	r0, r0, r0
   14100:	push	{r4, lr}
   14104:	ldr	r4, [pc, #24]	; 14124 <_start@@Base+0xec>
   14108:	ldrb	r3, [r4]
   1410c:	cmp	r3, #0
   14110:	popne	{r4, pc}
   14114:	bl	14098 <_start@@Base+0x60>
   14118:	mov	r3, #1
   1411c:	strb	r3, [r4]
   14120:	pop	{r4, pc}
   14124:	andeq	sp, r2, r8, lsl #4
   14128:	ldr	r0, [pc, #40]	; 14158 <_start@@Base+0x120>
   1412c:	ldr	r3, [r0]
   14130:	cmp	r3, #0
   14134:	bne	1413c <_start@@Base+0x104>
   14138:	b	140c8 <_start@@Base+0x90>
   1413c:	ldr	r3, [pc, #24]	; 1415c <_start@@Base+0x124>
   14140:	cmp	r3, #0
   14144:	beq	14138 <_start@@Base+0x100>
   14148:	push	{r4, lr}
   1414c:	blx	r3
   14150:	pop	{r4, lr}
   14154:	b	140c8 <_start@@Base+0x90>
   14158:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1415c:	andeq	r0, r0, r0
   14160:	ldr	ip, [pc, #3020]	; 14d34 <_start@@Base+0xcfc>
   14164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14168:	sub	sp, sp, #116	; 0x74
   1416c:	add	ip, pc, ip
   14170:	mov	r4, ip
   14174:	str	ip, [sp, #32]
   14178:	ldr	ip, [pc, #3000]	; 14d38 <_start@@Base+0xd00>
   1417c:	mov	r5, r1
   14180:	add	r1, r1, #2
   14184:	str	r1, [sp, #36]	; 0x24
   14188:	ldr	sl, [r4, ip]
   1418c:	mov	lr, r1
   14190:	mov	fp, r0
   14194:	add	r1, sp, #60	; 0x3c
   14198:	ldr	r0, [sl, lr, lsl #2]
   1419c:	mov	r9, r2
   141a0:	str	r3, [sp, #20]
   141a4:	bl	1266c <coda_type_get_class@plt>
   141a8:	cmp	r0, #0
   141ac:	bne	14354 <_start@@Base+0x31c>
   141b0:	ldr	r3, [sp, #60]	; 0x3c
   141b4:	cmp	r3, #0
   141b8:	beq	142e4 <_start@@Base+0x2ac>
   141bc:	cmp	r3, #1
   141c0:	beq	14220 <_start@@Base+0x1e8>
   141c4:	ldr	r3, [pc, #2928]	; 14d3c <_start@@Base+0xd04>
   141c8:	ldr	r2, [sp, #32]
   141cc:	ldr	r3, [r2, r3]
   141d0:	ldr	r3, [r3]
   141d4:	cmp	r3, #0
   141d8:	bne	14528 <_start@@Base+0x4f0>
   141dc:	ldr	r3, [sp, #36]	; 0x24
   141e0:	add	r1, sp, #64	; 0x40
   141e4:	ldr	r0, [sl, r3, lsl #2]
   141e8:	bl	1266c <coda_type_get_class@plt>
   141ec:	cmp	r0, #0
   141f0:	bne	14520 <_start@@Base+0x4e8>
   141f4:	ldr	r3, [sp, #64]	; 0x40
   141f8:	cmp	r3, #6
   141fc:	addls	pc, pc, r3, lsl #2
   14200:	b	143d4 <_start@@Base+0x39c>
   14204:	b	144f8 <_start@@Base+0x4c0>
   14208:	b	144f8 <_start@@Base+0x4c0>
   1420c:	b	14494 <_start@@Base+0x45c>
   14210:	b	14494 <_start@@Base+0x45c>
   14214:	b	14494 <_start@@Base+0x45c>
   14218:	b	14494 <_start@@Base+0x45c>
   1421c:	b	14418 <_start@@Base+0x3e0>
   14220:	lsl	r6, r9, #2
   14224:	add	r3, r6, r9
   14228:	ldr	r0, [sp, #32]
   1422c:	add	r3, sl, r3, lsl #4
   14230:	add	r2, r6, r9
   14234:	ldr	r1, [r3, #800]	; 0x320
   14238:	ldr	r3, [pc, #2816]	; 14d40 <_start@@Base+0xd08>
   1423c:	cmp	r9, #0
   14240:	streq	r9, [sl, #844]	; 0x34c
   14244:	add	r2, sl, r2, lsl #4
   14248:	ldr	r3, [r0, r3]
   1424c:	ldr	r0, [r2, #804]	; 0x324
   14250:	ldr	r8, [r3, #104]	; 0x68
   14254:	add	ip, r1, r0
   14258:	cmp	r8, ip
   1425c:	str	ip, [sp, #24]
   14260:	bge	143e8 <_start@@Base+0x3b0>
   14264:	cmp	r0, #0
   14268:	ble	14a80 <_start@@Base+0xa48>
   1426c:	add	ip, r6, r9
   14270:	add	lr, r1, #1
   14274:	lsl	ip, ip, #4
   14278:	add	r1, ip, #844	; 0x34c
   1427c:	add	r2, sp, #80	; 0x50
   14280:	add	r3, r3, lr, lsl #2
   14284:	add	r1, sl, r1
   14288:	add	ip, sl, ip
   1428c:	add	r0, r2, r0, lsl #2
   14290:	mov	r4, #1
   14294:	mov	lr, #0
   14298:	str	r5, [sp, #28]
   1429c:	ldr	r7, [r3, #68]	; 0x44
   142a0:	add	r2, r2, #4
   142a4:	cmp	r7, #0
   142a8:	add	r3, r3, #4
   142ac:	ldrne	r7, [r3, #100]	; 0x64
   142b0:	ldrne	r5, [ip, #844]	; 0x34c
   142b4:	ldreq	r7, [r3, #-4]
   142b8:	ldrne	r7, [r7, r5, lsl #2]
   142bc:	str	r7, [r2, #-4]
   142c0:	cmp	r2, r0
   142c4:	mul	r4, r7, r4
   142c8:	str	lr, [r1, #4]!
   142cc:	bne	1429c <_start@@Base+0x264>
   142d0:	cmp	r4, #0
   142d4:	ldr	r5, [sp, #28]
   142d8:	bne	1460c <_start@@Base+0x5d4>
   142dc:	add	sp, sp, #116	; 0x74
   142e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142e4:	ldr	r3, [sp, #20]
   142e8:	add	r2, sp, #80	; 0x50
   142ec:	add	r4, r3, #872	; 0x368
   142f0:	add	r0, sl, #144	; 0x90
   142f4:	add	r3, sl, r4, lsl #2
   142f8:	ldr	r1, [r3, #4]
   142fc:	bl	12240 <coda_cursor_get_record_field_available_status@plt>
   14300:	cmp	r0, #0
   14304:	bne	14518 <_start@@Base+0x4e0>
   14308:	ldr	r3, [sp, #80]	; 0x50
   1430c:	cmp	r3, #0
   14310:	beq	142dc <_start@@Base+0x2a4>
   14314:	add	r4, sl, r4, lsl #2
   14318:	add	r0, sl, #144	; 0x90
   1431c:	ldr	r1, [r4, #4]
   14320:	bl	123a8 <coda_cursor_goto_record_field_by_index@plt>
   14324:	cmp	r0, #0
   14328:	bne	14a9c <_start@@Base+0xa64>
   1432c:	ldr	r3, [sp, #20]
   14330:	mov	r2, r9
   14334:	add	r3, r3, #1
   14338:	add	r1, r5, #1
   1433c:	mov	r0, fp
   14340:	bl	14160 <_start@@Base+0x128>
   14344:	add	r0, sl, #144	; 0x90
   14348:	bl	12408 <coda_cursor_goto_parent@plt>
   1434c:	add	sp, sp, #116	; 0x74
   14350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14354:	bl	1a974 <handle_coda_error@@Base>
   14358:	b	141b0 <_start@@Base+0x178>
   1435c:	add	r1, sp, #80	; 0x50
   14360:	add	r0, sl, #144	; 0x90
   14364:	bl	12438 <coda_cursor_get_string_length@plt>
   14368:	cmp	r0, #0
   1436c:	bne	14c3c <_start@@Base+0xc04>
   14370:	ldr	r0, [sp, #80]	; 0x50
   14374:	add	r0, r0, #1
   14378:	bl	123d8 <malloc@plt>
   1437c:	subs	r4, r0, #0
   14380:	beq	14cc8 <_start@@Base+0xc90>
   14384:	ldr	r2, [sp, #80]	; 0x50
   14388:	add	r0, sl, #144	; 0x90
   1438c:	add	r2, r2, #1
   14390:	mov	r1, r4
   14394:	bl	123fc <coda_cursor_read_string@plt>
   14398:	cmp	r0, #0
   1439c:	bne	14c90 <_start@@Base+0xc58>
   143a0:	ldr	r3, [pc, #2460]	; 14d44 <_start@@Base+0xd0c>
   143a4:	ldr	r2, [sp, #32]
   143a8:	ldr	r3, [r2, r3]
   143ac:	ldr	r3, [r3]
   143b0:	cmp	r3, #0
   143b4:	beq	14c04 <_start@@Base+0xbcc>
   143b8:	ldr	r1, [pc, #2440]	; 14d48 <_start@@Base+0xd10>
   143bc:	mov	r2, r4
   143c0:	add	r1, pc, r1
   143c4:	mov	r0, fp
   143c8:	bl	12468 <fprintf@plt>
   143cc:	mov	r0, r4
   143d0:	bl	122a0 <free@plt>
   143d4:	mov	r1, fp
   143d8:	mov	r0, #10
   143dc:	bl	125a0 <fputc@plt>
   143e0:	add	sp, sp, #116	; 0x74
   143e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143e8:	ldr	ip, [sl, #3360]	; 0xd20
   143ec:	sub	ip, ip, #1
   143f0:	cmp	r9, ip
   143f4:	bge	14264 <_start@@Base+0x22c>
   143f8:	ldr	lr, [r2, #844]	; 0x34c
   143fc:	add	ip, r9, #1
   14400:	ldr	r2, [r2, #840]	; 0x348
   14404:	add	ip, ip, ip, lsl #2
   14408:	mul	r2, r2, lr
   1440c:	add	ip, sl, ip, lsl #4
   14410:	str	r2, [ip, #844]	; 0x34c
   14414:	b	14264 <_start@@Base+0x22c>
   14418:	ldr	r3, [sp, #36]	; 0x24
   1441c:	add	r1, sp, #68	; 0x44
   14420:	ldr	r0, [sl, r3, lsl #2]
   14424:	bl	124e0 <coda_type_get_special_type@plt>
   14428:	cmp	r0, #0
   1442c:	bne	14aac <_start@@Base+0xa74>
   14430:	ldr	r3, [sp, #68]	; 0x44
   14434:	cmp	r3, #1
   14438:	bcc	143d4 <_start@@Base+0x39c>
   1443c:	cmp	r3, #2
   14440:	bls	14778 <_start@@Base+0x740>
   14444:	cmp	r3, #3
   14448:	bne	143d4 <_start@@Base+0x39c>
   1444c:	add	r0, sl, #144	; 0x90
   14450:	add	r1, sp, #80	; 0x50
   14454:	bl	12588 <coda_cursor_read_complex_double_pair@plt>
   14458:	cmp	r0, #0
   1445c:	bne	14b7c <_start@@Base+0xb44>
   14460:	ldrd	r0, [sp, #88]	; 0x58
   14464:	ldr	lr, [sp, #32]
   14468:	ldr	ip, [pc, #2268]	; 14d4c <_start@@Base+0xd14>
   1446c:	strd	r0, [sp, #8]
   14470:	ldr	r1, [pc, #2264]	; 14d50 <_start@@Base+0xd18>
   14474:	ldr	ip, [lr, ip]
   14478:	ldrd	r2, [sp, #80]	; 0x50
   1447c:	add	r1, pc, r1
   14480:	ldr	ip, [ip]
   14484:	mov	r0, fp
   14488:	str	ip, [sp]
   1448c:	bl	12468 <fprintf@plt>
   14490:	b	143d4 <_start@@Base+0x39c>
   14494:	ldr	r3, [sp, #36]	; 0x24
   14498:	add	r1, sp, #68	; 0x44
   1449c:	ldr	r0, [sl, r3, lsl #2]
   144a0:	bl	1242c <coda_type_get_read_type@plt>
   144a4:	cmp	r0, #0
   144a8:	bne	14aa4 <_start@@Base+0xa6c>
   144ac:	ldr	r3, [sp, #68]	; 0x44
   144b0:	add	r3, r3, #1
   144b4:	cmp	r3, #13
   144b8:	addls	pc, pc, r3, lsl #2
   144bc:	b	143d4 <_start@@Base+0x39c>
   144c0:	b	149f8 <_start@@Base+0x9c0>
   144c4:	b	149cc <_start@@Base+0x994>
   144c8:	b	149a0 <_start@@Base+0x968>
   144cc:	b	149cc <_start@@Base+0x994>
   144d0:	b	149a0 <_start@@Base+0x968>
   144d4:	b	149cc <_start@@Base+0x994>
   144d8:	b	149a0 <_start@@Base+0x968>
   144dc:	b	14a4c <_start@@Base+0xa14>
   144e0:	b	14a18 <_start@@Base+0x9e0>
   144e4:	b	1480c <_start@@Base+0x7d4>
   144e8:	b	1480c <_start@@Base+0x7d4>
   144ec:	b	147c8 <_start@@Base+0x790>
   144f0:	b	1435c <_start@@Base+0x324>
   144f4:	b	14844 <_start@@Base+0x80c>
   144f8:	ldr	r3, [pc, #2132]	; 14d54 <_start@@Base+0xd1c>
   144fc:	ldr	r1, [pc, #2132]	; 14d58 <_start@@Base+0xd20>
   14500:	ldr	r0, [pc, #2132]	; 14d5c <_start@@Base+0xd24>
   14504:	add	r3, pc, r3
   14508:	mov	r2, #368	; 0x170
   1450c:	add	r1, pc, r1
   14510:	add	r0, pc, r0
   14514:	bl	12660 <__assert_fail@plt>
   14518:	bl	1a974 <handle_coda_error@@Base>
   1451c:	b	14308 <_start@@Base+0x2d0>
   14520:	bl	1a974 <handle_coda_error@@Base>
   14524:	b	141f4 <_start@@Base+0x1bc>
   14528:	ldr	r3, [sl, #136]	; 0x88
   1452c:	cmp	r3, #0
   14530:	ble	141dc <_start@@Base+0x1a4>
   14534:	mov	r3, #0
   14538:	str	r3, [sp, #28]
   1453c:	ldr	r9, [pc, #2076]	; 14d60 <_start@@Base+0xd28>
   14540:	mov	r7, r3
   14544:	add	r3, sl, #4
   14548:	str	r3, [sp, #20]
   1454c:	add	r3, sp, #80	; 0x50
   14550:	add	r9, pc, r9
   14554:	str	r3, [sp, #24]
   14558:	b	14578 <_start@@Base+0x540>
   1455c:	ldr	r3, [sp, #80]	; 0x50
   14560:	cmp	r3, #1
   14564:	beq	145a4 <_start@@Base+0x56c>
   14568:	ldr	r3, [sl, #136]	; 0x88
   1456c:	add	r7, r7, #1
   14570:	cmp	r7, r3
   14574:	bge	141dc <_start@@Base+0x1a4>
   14578:	ldr	r3, [sp, #20]
   1457c:	ldr	r1, [sp, #24]
   14580:	ldr	r0, [r3, #4]!
   14584:	str	r3, [sp, #20]
   14588:	bl	1266c <coda_type_get_class@plt>
   1458c:	cmp	r0, #0
   14590:	beq	1455c <_start@@Base+0x524>
   14594:	bl	1a974 <handle_coda_error@@Base>
   14598:	ldr	r3, [sp, #80]	; 0x50
   1459c:	cmp	r3, #1
   145a0:	bne	14568 <_start@@Base+0x530>
   145a4:	ldr	r3, [sp, #28]
   145a8:	add	r5, r3, r3, lsl #2
   145ac:	lsl	r5, r5, #4
   145b0:	add	r6, sl, r5
   145b4:	ldr	r3, [r6, #804]	; 0x324
   145b8:	cmp	r3, #0
   145bc:	ble	145fc <_start@@Base+0x5c4>
   145c0:	ldr	r3, [pc, #1924]	; 14d4c <_start@@Base+0xd14>
   145c4:	ldr	r2, [sp, #32]
   145c8:	add	r5, r5, #844	; 0x34c
   145cc:	add	r5, sl, r5
   145d0:	ldr	r8, [r2, r3]
   145d4:	mov	r4, #0
   145d8:	ldr	r3, [r8]
   145dc:	ldr	r2, [r5, #4]!
   145e0:	mov	r1, r9
   145e4:	mov	r0, fp
   145e8:	bl	12468 <fprintf@plt>
   145ec:	ldr	r3, [r6, #804]	; 0x324
   145f0:	add	r4, r4, #1
   145f4:	cmp	r4, r3
   145f8:	blt	145d8 <_start@@Base+0x5a0>
   145fc:	ldr	r3, [sp, #28]
   14600:	add	r3, r3, #1
   14604:	str	r3, [sp, #28]
   14608:	b	14568 <_start@@Base+0x530>
   1460c:	add	r0, sl, #144	; 0x90
   14610:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   14614:	cmp	r0, #0
   14618:	bne	14a94 <_start@@Base+0xa5c>
   1461c:	cmp	r4, #0
   14620:	ble	14344 <_start@@Base+0x30c>
   14624:	add	r7, r9, #1
   14628:	add	r6, r6, r9
   1462c:	add	r1, r5, #1
   14630:	add	r3, r7, r7, lsl #2
   14634:	str	r9, [sp, #40]	; 0x28
   14638:	ldr	r9, [sp, #32]
   1463c:	lsl	r2, r6, #4
   14640:	str	r6, [sp, #44]	; 0x2c
   14644:	str	r1, [sp, #28]
   14648:	mov	r5, #0
   1464c:	lsl	r1, r6, #2
   14650:	sub	r6, r4, #1
   14654:	add	r3, sl, r3, lsl #4
   14658:	str	r1, [sp, #48]	; 0x30
   1465c:	str	r2, [sp, #36]	; 0x24
   14660:	str	r3, [sp, #52]	; 0x34
   14664:	ldr	r3, [sp, #20]
   14668:	mov	r2, r7
   1466c:	ldr	r1, [sp, #28]
   14670:	mov	r0, fp
   14674:	bl	14160 <_start@@Base+0x128>
   14678:	cmp	r5, r6
   1467c:	bge	14760 <_start@@Base+0x728>
   14680:	add	r0, sl, #144	; 0x90
   14684:	bl	12474 <coda_cursor_goto_next_array_element@plt>
   14688:	cmp	r0, #0
   1468c:	bne	14770 <_start@@Base+0x738>
   14690:	ldr	r3, [sp, #24]
   14694:	cmp	r8, r3
   14698:	blt	146c0 <_start@@Base+0x688>
   1469c:	ldr	r3, [sl, #3360]	; 0xd20
   146a0:	ldr	r2, [sp, #40]	; 0x28
   146a4:	sub	r3, r3, #1
   146a8:	cmp	r2, r3
   146ac:	ldrlt	r2, [sp, #52]	; 0x34
   146b0:	movlt	r3, r2
   146b4:	ldrlt	r3, [r3, #844]	; 0x34c
   146b8:	addlt	r3, r3, #1
   146bc:	strlt	r3, [r2, #844]	; 0x34c
   146c0:	ldr	r3, [pc, #1652]	; 14d3c <_start@@Base+0xd04>
   146c4:	ldr	r3, [r9, r3]
   146c8:	ldr	r3, [r3]
   146cc:	cmp	r3, #0
   146d0:	beq	14760 <_start@@Base+0x728>
   146d4:	ldr	r3, [sp, #36]	; 0x24
   146d8:	add	r3, sl, r3
   146dc:	ldr	r0, [r3, #804]	; 0x324
   146e0:	subs	r1, r0, #1
   146e4:	bmi	14760 <_start@@Base+0x728>
   146e8:	ldr	r3, [sp, #44]	; 0x2c
   146ec:	add	ip, sp, #112	; 0x70
   146f0:	add	ip, ip, r1, lsl #2
   146f4:	add	r3, r1, r3, lsl #2
   146f8:	add	r3, r3, #212	; 0xd4
   146fc:	ldr	ip, [ip, #-32]	; 0xffffffe0
   14700:	ldr	r2, [sl, r3, lsl #2]
   14704:	add	r2, r2, #1
   14708:	cmp	r2, ip
   1470c:	str	r2, [sl, r3, lsl #2]
   14710:	bne	14760 <_start@@Base+0x728>
   14714:	ldr	r3, [sp, #48]	; 0x30
   14718:	mov	lr, #0
   1471c:	add	r2, r0, r3
   14720:	add	r3, sp, #112	; 0x70
   14724:	add	r0, r3, r0, lsl #2
   14728:	add	r2, sl, r2, lsl #2
   1472c:	add	r2, r2, #844	; 0x34c
   14730:	sub	r0, r0, #40	; 0x28
   14734:	b	14750 <_start@@Base+0x718>
   14738:	ldr	r3, [r2, #-4]
   1473c:	ldr	ip, [r0], #-4
   14740:	add	r3, r3, #1
   14744:	cmp	r3, ip
   14748:	str	r3, [r2, #-4]!
   1474c:	bne	14760 <_start@@Base+0x728>
   14750:	sub	r1, r1, #1
   14754:	cmn	r1, #1
   14758:	str	lr, [r2]
   1475c:	bne	14738 <_start@@Base+0x700>
   14760:	add	r5, r5, #1
   14764:	cmp	r5, r4
   14768:	bne	14664 <_start@@Base+0x62c>
   1476c:	b	14344 <_start@@Base+0x30c>
   14770:	bl	1a974 <handle_coda_error@@Base>
   14774:	b	14690 <_start@@Base+0x658>
   14778:	add	r0, sl, #144	; 0x90
   1477c:	add	r1, sp, #72	; 0x48
   14780:	bl	12450 <coda_cursor_read_double@plt>
   14784:	cmp	r0, #0
   14788:	bne	14b74 <_start@@Base+0xb3c>
   1478c:	ldr	r3, [sp, #68]	; 0x44
   14790:	cmp	r3, #2
   14794:	bne	147b0 <_start@@Base+0x778>
   14798:	ldr	r3, [pc, #1476]	; 14d64 <_start@@Base+0xd2c>
   1479c:	ldr	r2, [sp, #32]
   147a0:	ldr	r3, [r2, r3]
   147a4:	ldr	r3, [r3]
   147a8:	cmp	r3, #0
   147ac:	bne	14b94 <_start@@Base+0xb5c>
   147b0:	ldr	r1, [pc, #1456]	; 14d68 <_start@@Base+0xd30>
   147b4:	ldrd	r2, [sp, #72]	; 0x48
   147b8:	add	r1, pc, r1
   147bc:	mov	r0, fp
   147c0:	bl	12468 <fprintf@plt>
   147c4:	b	143d4 <_start@@Base+0x39c>
   147c8:	add	r0, sl, #144	; 0x90
   147cc:	add	r1, sp, #80	; 0x50
   147d0:	bl	124b0 <coda_cursor_read_char@plt>
   147d4:	cmp	r0, #0
   147d8:	bne	14c24 <_start@@Base+0xbec>
   147dc:	ldr	r3, [pc, #1376]	; 14d44 <_start@@Base+0xd0c>
   147e0:	ldr	r2, [sp, #32]
   147e4:	ldr	r3, [r2, r3]
   147e8:	ldr	r3, [r3]
   147ec:	cmp	r3, #0
   147f0:	beq	14c14 <_start@@Base+0xbdc>
   147f4:	ldr	r1, [pc, #1392]	; 14d6c <_start@@Base+0xd34>
   147f8:	ldrb	r2, [sp, #80]	; 0x50
   147fc:	add	r1, pc, r1
   14800:	mov	r0, fp
   14804:	bl	12468 <fprintf@plt>
   14808:	b	143d4 <_start@@Base+0x39c>
   1480c:	add	r0, sl, #144	; 0x90
   14810:	add	r1, sp, #80	; 0x50
   14814:	bl	12450 <coda_cursor_read_double@plt>
   14818:	cmp	r0, #0
   1481c:	bne	14c68 <_start@@Base+0xc30>
   14820:	ldr	r3, [sp, #68]	; 0x44
   14824:	cmp	r3, #8
   14828:	ldrd	r2, [sp, #80]	; 0x50
   1482c:	beq	14c54 <_start@@Base+0xc1c>
   14830:	ldr	r1, [pc, #1336]	; 14d70 <_start@@Base+0xd38>
   14834:	mov	r0, fp
   14838:	add	r1, pc, r1
   1483c:	bl	12468 <fprintf@plt>
   14840:	b	143d4 <_start@@Base+0x39c>
   14844:	add	r1, sp, #80	; 0x50
   14848:	add	r0, sl, #144	; 0x90
   1484c:	bl	125b8 <coda_cursor_get_bit_size@plt>
   14850:	cmp	r0, #0
   14854:	bne	14c70 <_start@@Base+0xc38>
   14858:	ldrd	r6, [sp, #80]	; 0x50
   1485c:	mov	r3, #0
   14860:	and	r2, r6, #7
   14864:	orrs	r3, r2, r3
   14868:	lsr	r4, r6, #3
   1486c:	orr	r4, r4, r7, lsl #29
   14870:	movne	r3, #1
   14874:	moveq	r3, #0
   14878:	adds	r0, r4, r3
   1487c:	asr	r5, r7, #3
   14880:	adc	r1, r5, #0
   14884:	mov	r4, r0
   14888:	mov	r5, r1
   1488c:	bl	123d8 <malloc@plt>
   14890:	subs	r9, r0, #0
   14894:	beq	14c98 <_start@@Base+0xc60>
   14898:	strd	r6, [sp]
   1489c:	add	r0, sl, #144	; 0x90
   148a0:	mov	r2, #0
   148a4:	mov	r3, #0
   148a8:	mov	r1, r9
   148ac:	bl	12648 <coda_cursor_read_bits@plt>
   148b0:	cmp	r0, #0
   148b4:	bne	14c88 <_start@@Base+0xc50>
   148b8:	mov	r3, r5
   148bc:	cmp	r4, #1
   148c0:	sbcs	r3, r3, #0
   148c4:	blt	14b68 <_start@@Base+0xb30>
   148c8:	ldr	r3, [pc, #1188]	; 14d74 <_start@@Base+0xd3c>
   148cc:	ldr	sl, [pc, #1188]	; 14d78 <_start@@Base+0xd40>
   148d0:	add	r3, pc, r3
   148d4:	str	r3, [sp, #20]
   148d8:	ldr	r3, [pc, #1180]	; 14d7c <_start@@Base+0xd44>
   148dc:	add	sl, pc, sl
   148e0:	add	r3, pc, r3
   148e4:	str	r3, [sp, #24]
   148e8:	ldr	r3, [pc, #1168]	; 14d80 <_start@@Base+0xd48>
   148ec:	sub	r8, r9, #1
   148f0:	add	r3, pc, r3
   148f4:	str	r3, [sp, #28]
   148f8:	ldr	r3, [pc, #1156]	; 14d84 <_start@@Base+0xd4c>
   148fc:	mov	r6, #0
   14900:	add	r3, pc, r3
   14904:	str	r3, [sp, #32]
   14908:	ldr	r3, [pc, #1144]	; 14d88 <_start@@Base+0xd50>
   1490c:	mov	r7, #0
   14910:	add	r3, pc, r3
   14914:	str	r3, [sp, #36]	; 0x24
   14918:	b	14960 <_start@@Base+0x928>
   1491c:	cmp	r2, #12
   14920:	beq	14b00 <_start@@Base+0xac8>
   14924:	bcc	14ae8 <_start@@Base+0xab0>
   14928:	cmp	r2, #13
   1492c:	beq	14ad0 <_start@@Base+0xa98>
   14930:	cmp	r2, #92	; 0x5c
   14934:	bne	14ab4 <_start@@Base+0xa7c>
   14938:	mov	r3, fp
   1493c:	mov	r2, #2
   14940:	mov	r1, #1
   14944:	ldr	r0, [sp, #36]	; 0x24
   14948:	bl	12384 <fwrite@plt>
   1494c:	adds	r6, r6, #1
   14950:	adc	r7, r7, #0
   14954:	cmp	r5, r7
   14958:	cmpeq	r4, r6
   1495c:	beq	14b68 <_start@@Base+0xb30>
   14960:	ldrb	r2, [r8, #1]!
   14964:	cmp	r2, #10
   14968:	beq	14b50 <_start@@Base+0xb18>
   1496c:	bhi	1491c <_start@@Base+0x8e4>
   14970:	cmp	r2, #8
   14974:	beq	14b34 <_start@@Base+0xafc>
   14978:	bhi	14b18 <_start@@Base+0xae0>
   1497c:	cmp	r2, #7
   14980:	bne	14ab4 <_start@@Base+0xa7c>
   14984:	ldr	r0, [pc, #1024]	; 14d8c <_start@@Base+0xd54>
   14988:	mov	r3, fp
   1498c:	mov	r2, #2
   14990:	mov	r1, #1
   14994:	add	r0, pc, r0
   14998:	bl	12384 <fwrite@plt>
   1499c:	b	1494c <_start@@Base+0x914>
   149a0:	add	r0, sl, #144	; 0x90
   149a4:	add	r1, sp, #80	; 0x50
   149a8:	bl	122c4 <coda_cursor_read_uint32@plt>
   149ac:	cmp	r0, #0
   149b0:	bne	14c2c <_start@@Base+0xbf4>
   149b4:	ldr	r1, [pc, #980]	; 14d90 <_start@@Base+0xd58>
   149b8:	ldr	r2, [sp, #80]	; 0x50
   149bc:	add	r1, pc, r1
   149c0:	mov	r0, fp
   149c4:	bl	12468 <fprintf@plt>
   149c8:	b	143d4 <_start@@Base+0x39c>
   149cc:	add	r0, sl, #144	; 0x90
   149d0:	add	r1, sp, #80	; 0x50
   149d4:	bl	125e8 <coda_cursor_read_int32@plt>
   149d8:	cmp	r0, #0
   149dc:	bne	14c78 <_start@@Base+0xc40>
   149e0:	ldr	r1, [pc, #940]	; 14d94 <_start@@Base+0xd5c>
   149e4:	ldr	r2, [sp, #80]	; 0x50
   149e8:	add	r1, pc, r1
   149ec:	mov	r0, fp
   149f0:	bl	12468 <fprintf@plt>
   149f4:	b	143d4 <_start@@Base+0x39c>
   149f8:	ldr	r3, [pc, #920]	; 14d98 <_start@@Base+0xd60>
   149fc:	ldr	r1, [pc, #920]	; 14d9c <_start@@Base+0xd64>
   14a00:	ldr	r0, [pc, #920]	; 14da0 <_start@@Base+0xd68>
   14a04:	add	r3, pc, r3
   14a08:	ldr	r2, [pc, #916]	; 14da4 <_start@@Base+0xd6c>
   14a0c:	add	r1, pc, r1
   14a10:	add	r0, pc, r0
   14a14:	bl	12660 <__assert_fail@plt>
   14a18:	add	r0, sl, #144	; 0x90
   14a1c:	add	r1, sp, #72	; 0x48
   14a20:	bl	12444 <coda_cursor_read_uint64@plt>
   14a24:	cmp	r0, #0
   14a28:	bne	14c34 <_start@@Base+0xbfc>
   14a2c:	add	r4, sp, #80	; 0x50
   14a30:	ldrd	r0, [sp, #72]	; 0x48
   14a34:	mov	r2, r4
   14a38:	bl	12294 <coda_str64u@plt>
   14a3c:	mov	r1, fp
   14a40:	mov	r0, r4
   14a44:	bl	12630 <fputs@plt>
   14a48:	b	143d4 <_start@@Base+0x39c>
   14a4c:	add	r0, sl, #144	; 0x90
   14a50:	add	r1, sp, #72	; 0x48
   14a54:	bl	12558 <coda_cursor_read_int64@plt>
   14a58:	cmp	r0, #0
   14a5c:	bne	14c80 <_start@@Base+0xc48>
   14a60:	add	r4, sp, #80	; 0x50
   14a64:	ldrd	r0, [sp, #72]	; 0x48
   14a68:	mov	r2, r4
   14a6c:	bl	12654 <coda_str64@plt>
   14a70:	mov	r1, fp
   14a74:	mov	r0, r4
   14a78:	bl	12630 <fputs@plt>
   14a7c:	b	143d4 <_start@@Base+0x39c>
   14a80:	add	r0, sl, #144	; 0x90
   14a84:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   14a88:	mov	r4, #1
   14a8c:	cmp	r0, #0
   14a90:	beq	14624 <_start@@Base+0x5ec>
   14a94:	bl	1a974 <handle_coda_error@@Base>
   14a98:	b	1461c <_start@@Base+0x5e4>
   14a9c:	bl	1a974 <handle_coda_error@@Base>
   14aa0:	b	1432c <_start@@Base+0x2f4>
   14aa4:	bl	1a974 <handle_coda_error@@Base>
   14aa8:	b	144ac <_start@@Base+0x474>
   14aac:	bl	1a974 <handle_coda_error@@Base>
   14ab0:	b	14430 <_start@@Base+0x3f8>
   14ab4:	sub	r3, r2, #32
   14ab8:	cmp	r3, #94	; 0x5e
   14abc:	bhi	14b84 <_start@@Base+0xb4c>
   14ac0:	mov	r0, r2
   14ac4:	mov	r1, fp
   14ac8:	bl	125a0 <fputc@plt>
   14acc:	b	1494c <_start@@Base+0x914>
   14ad0:	mov	r3, fp
   14ad4:	mov	r2, #2
   14ad8:	mov	r1, #1
   14adc:	ldr	r0, [sp, #32]
   14ae0:	bl	12384 <fwrite@plt>
   14ae4:	b	1494c <_start@@Base+0x914>
   14ae8:	mov	r3, fp
   14aec:	mov	r2, #2
   14af0:	mov	r1, #1
   14af4:	ldr	r0, [sp, #28]
   14af8:	bl	12384 <fwrite@plt>
   14afc:	b	1494c <_start@@Base+0x914>
   14b00:	mov	r3, fp
   14b04:	mov	r2, #2
   14b08:	mov	r1, #1
   14b0c:	ldr	r0, [sp, #24]
   14b10:	bl	12384 <fwrite@plt>
   14b14:	b	1494c <_start@@Base+0x914>
   14b18:	ldr	r0, [pc, #648]	; 14da8 <_start@@Base+0xd70>
   14b1c:	mov	r3, fp
   14b20:	mov	r2, #2
   14b24:	mov	r1, #1
   14b28:	add	r0, pc, r0
   14b2c:	bl	12384 <fwrite@plt>
   14b30:	b	1494c <_start@@Base+0x914>
   14b34:	ldr	r0, [pc, #624]	; 14dac <_start@@Base+0xd74>
   14b38:	mov	r3, fp
   14b3c:	mov	r2, #2
   14b40:	mov	r1, #1
   14b44:	add	r0, pc, r0
   14b48:	bl	12384 <fwrite@plt>
   14b4c:	b	1494c <_start@@Base+0x914>
   14b50:	mov	r3, fp
   14b54:	mov	r2, #2
   14b58:	mov	r1, #1
   14b5c:	mov	r0, sl
   14b60:	bl	12384 <fwrite@plt>
   14b64:	b	1494c <_start@@Base+0x914>
   14b68:	mov	r0, r9
   14b6c:	bl	122a0 <free@plt>
   14b70:	b	143d4 <_start@@Base+0x39c>
   14b74:	bl	1a974 <handle_coda_error@@Base>
   14b78:	b	1478c <_start@@Base+0x754>
   14b7c:	bl	1a974 <handle_coda_error@@Base>
   14b80:	b	14460 <_start@@Base+0x428>
   14b84:	ldr	r1, [sp, #20]
   14b88:	mov	r0, fp
   14b8c:	bl	12468 <fprintf@plt>
   14b90:	b	1494c <_start@@Base+0x914>
   14b94:	vldr	d0, [sp, #72]	; 0x48
   14b98:	bl	1245c <coda_isNaN@plt>
   14b9c:	cmp	r0, #0
   14ba0:	beq	14cf8 <_start@@Base+0xcc0>
   14ba4:	ldr	lr, [pc, #516]	; 14db0 <_start@@Base+0xd78>
   14ba8:	add	r3, sp, #80	; 0x50
   14bac:	add	lr, pc, lr
   14bb0:	mov	ip, r3
   14bb4:	str	r3, [sp, #24]
   14bb8:	ldm	lr!, {r0, r1, r2, r3}
   14bbc:	stmia	ip!, {r0, r1, r2, r3}
   14bc0:	ldm	lr, {r0, r1, r2}
   14bc4:	lsr	r3, r2, #16
   14bc8:	stmia	ip!, {r0, r1}
   14bcc:	strh	r2, [ip], #2
   14bd0:	strb	r3, [ip]
   14bd4:	ldr	r3, [pc, #360]	; 14d44 <_start@@Base+0xd0c>
   14bd8:	ldr	r2, [sp, #32]
   14bdc:	ldr	r3, [r2, r3]
   14be0:	ldr	r3, [r3]
   14be4:	cmp	r3, #0
   14be8:	beq	14c44 <_start@@Base+0xc0c>
   14bec:	ldr	r1, [pc, #448]	; 14db4 <_start@@Base+0xd7c>
   14bf0:	ldr	r2, [sp, #24]
   14bf4:	add	r1, pc, r1
   14bf8:	mov	r0, fp
   14bfc:	bl	12468 <fprintf@plt>
   14c00:	b	143d4 <_start@@Base+0x39c>
   14c04:	mov	r1, fp
   14c08:	mov	r0, r4
   14c0c:	bl	12630 <fputs@plt>
   14c10:	b	143cc <_start@@Base+0x394>
   14c14:	mov	r1, fp
   14c18:	ldrb	r0, [sp, #80]	; 0x50
   14c1c:	bl	125a0 <fputc@plt>
   14c20:	b	143d4 <_start@@Base+0x39c>
   14c24:	bl	1a974 <handle_coda_error@@Base>
   14c28:	b	147dc <_start@@Base+0x7a4>
   14c2c:	bl	1a974 <handle_coda_error@@Base>
   14c30:	b	149b4 <_start@@Base+0x97c>
   14c34:	bl	1a974 <handle_coda_error@@Base>
   14c38:	b	14a2c <_start@@Base+0x9f4>
   14c3c:	bl	1a974 <handle_coda_error@@Base>
   14c40:	b	14370 <_start@@Base+0x338>
   14c44:	ldr	r0, [sp, #24]
   14c48:	mov	r1, fp
   14c4c:	bl	12630 <fputs@plt>
   14c50:	b	143d4 <_start@@Base+0x39c>
   14c54:	ldr	r1, [pc, #348]	; 14db8 <_start@@Base+0xd80>
   14c58:	mov	r0, fp
   14c5c:	add	r1, pc, r1
   14c60:	bl	12468 <fprintf@plt>
   14c64:	b	143d4 <_start@@Base+0x39c>
   14c68:	bl	1a974 <handle_coda_error@@Base>
   14c6c:	b	14820 <_start@@Base+0x7e8>
   14c70:	bl	1a974 <handle_coda_error@@Base>
   14c74:	b	14858 <_start@@Base+0x820>
   14c78:	bl	1a974 <handle_coda_error@@Base>
   14c7c:	b	149e0 <_start@@Base+0x9a8>
   14c80:	bl	1a974 <handle_coda_error@@Base>
   14c84:	b	14a60 <_start@@Base+0xa28>
   14c88:	bl	1a974 <handle_coda_error@@Base>
   14c8c:	b	148b8 <_start@@Base+0x880>
   14c90:	bl	1a974 <handle_coda_error@@Base>
   14c94:	b	143a0 <_start@@Base+0x368>
   14c98:	mov	r3, #163	; 0xa3
   14c9c:	str	r3, [sp]
   14ca0:	ldr	r1, [pc, #276]	; 14dbc <_start@@Base+0xd84>
   14ca4:	ldr	r3, [pc, #276]	; 14dc0 <_start@@Base+0xd88>
   14ca8:	mov	r2, r4
   14cac:	add	r3, pc, r3
   14cb0:	add	r1, pc, r1
   14cb4:	mvn	r0, #0
   14cb8:	bl	12258 <coda_set_error@plt>
   14cbc:	bl	1a974 <handle_coda_error@@Base>
   14cc0:	ldrd	r6, [sp, #80]	; 0x50
   14cc4:	b	14898 <_start@@Base+0x860>
   14cc8:	mov	r3, #126	; 0x7e
   14ccc:	ldr	r2, [sp, #80]	; 0x50
   14cd0:	str	r3, [sp]
   14cd4:	ldr	r1, [pc, #232]	; 14dc4 <_start@@Base+0xd8c>
   14cd8:	ldr	r3, [pc, #232]	; 14dc8 <_start@@Base+0xd90>
   14cdc:	add	r2, r2, #1
   14ce0:	add	r3, pc, r3
   14ce4:	add	r1, pc, r1
   14ce8:	mvn	r0, #0
   14cec:	bl	12258 <coda_set_error@plt>
   14cf0:	bl	1a974 <handle_coda_error@@Base>
   14cf4:	b	14384 <_start@@Base+0x34c>
   14cf8:	vldr	d0, [sp, #72]	; 0x48
   14cfc:	bl	12300 <coda_isInf@plt>
   14d00:	cmp	r0, #0
   14d04:	bne	14ba4 <_start@@Base+0xb6c>
   14d08:	ldr	r0, [pc, #188]	; 14dcc <_start@@Base+0xd94>
   14d0c:	add	r3, sp, #80	; 0x50
   14d10:	mov	r1, r3
   14d14:	add	r0, pc, r0
   14d18:	vldr	d0, [sp, #72]	; 0x48
   14d1c:	str	r3, [sp, #24]
   14d20:	bl	1227c <coda_time_double_to_string@plt>
   14d24:	cmp	r0, #0
   14d28:	beq	14bd4 <_start@@Base+0xb9c>
   14d2c:	bl	1a974 <handle_coda_error@@Base>
   14d30:	b	14bd4 <_start@@Base+0xb9c>
   14d34:	andeq	r8, r1, ip, lsl #29
   14d38:			; <UNDEFINED> instruction: 0x000001b4
   14d3c:	andeq	r0, r0, ip, asr #3
   14d40:	andeq	r0, r0, r4, ror #3
   14d44:	andeq	r0, r0, ip, ror #3
   14d48:	andeq	r6, r0, ip, lsr r9
   14d4c:	andeq	r0, r0, r0, asr #3
   14d50:	andeq	r6, r0, r0, ror #17
   14d54:	andeq	r6, r0, r8, lsr r7
   14d58:	andeq	r6, r0, r4, asr r7
   14d5c:	muleq	r0, r8, fp
   14d60:	andeq	r6, r0, r0, lsl #14
   14d64:	andeq	r0, r0, r8, lsr #3
   14d68:	andeq	r6, r0, r0, lsl #11
   14d6c:	andeq	r6, r0, ip, asr r4
   14d70:	andeq	r6, r0, r0, lsl #10
   14d74:	andeq	r6, r0, r4, asr r4
   14d78:	andeq	r6, r0, r4, lsr r4
   14d7c:	andeq	r6, r0, r8, lsr r4
   14d80:	andeq	r6, r0, r4, lsr #8
   14d84:	andeq	r6, r0, ip, lsl r4
   14d88:	andeq	r6, r0, r0, lsl r4
   14d8c:	andeq	r6, r0, r0, ror r3
   14d90:	andeq	r6, r0, r0, ror r3
   14d94:	andeq	r6, r0, r8, lsr r9
   14d98:	andeq	r6, r0, r8, lsr r2
   14d9c:	andeq	r6, r0, r4, asr r2
   14da0:	muleq	r0, r8, r6
   14da4:	andeq	r0, r0, r6, lsr #2
   14da8:	andeq	r6, r0, r4, ror #3
   14dac:	andeq	r6, r0, r4, asr #3
   14db0:			; <UNDEFINED> instruction: 0x000061b8
   14db4:	andeq	r6, r0, r8, lsl #2
   14db8:	ldrdeq	r6, [r0], -r4
   14dbc:	andeq	r6, r0, r4, lsl r0
   14dc0:			; <UNDEFINED> instruction: 0x00005fb4
   14dc4:	andeq	r5, r0, r0, ror #31
   14dc8:	andeq	r5, r0, r0, lsl #31
   14dcc:	andeq	r6, r0, ip, lsr #32

00014dd0 <export_data_element_to_ascii@@Base>:
   14dd0:	ldr	r3, [pc, #192]	; 14e98 <export_data_element_to_ascii@@Base+0xc8>
   14dd4:	push	{r4, r5, r6, lr}
   14dd8:	add	r3, pc, r3
   14ddc:	ldr	r4, [pc, #184]	; 14e9c <export_data_element_to_ascii@@Base+0xcc>
   14de0:	ldr	r2, [r3]
   14de4:	add	r4, pc, r4
   14de8:	cmp	r2, #0
   14dec:	beq	14e58 <export_data_element_to_ascii@@Base+0x88>
   14df0:	mov	r2, #0
   14df4:	str	r2, [r3]
   14df8:	ldr	r3, [pc, #160]	; 14ea0 <export_data_element_to_ascii@@Base+0xd0>
   14dfc:	ldr	r3, [r4, r3]
   14e00:	ldr	r3, [r3]
   14e04:	cmp	r3, #0
   14e08:	bne	14e70 <export_data_element_to_ascii@@Base+0xa0>
   14e0c:	ldr	r3, [pc, #144]	; 14ea4 <export_data_element_to_ascii@@Base+0xd4>
   14e10:	ldr	r2, [r4, r3]
   14e14:	ldr	r3, [r2]
   14e18:	cmp	r3, #0
   14e1c:	ble	14e38 <export_data_element_to_ascii@@Base+0x68>
   14e20:	add	r3, r3, #37	; 0x25
   14e24:	lsl	r3, r3, #3
   14e28:	add	r2, r2, r3
   14e2c:	ldrd	r2, [r2]
   14e30:	orrs	r3, r2, r3
   14e34:	popeq	{r4, r5, r6, pc}
   14e38:	ldr	r1, [pc, #104]	; 14ea8 <export_data_element_to_ascii@@Base+0xd8>
   14e3c:	mov	r3, #0
   14e40:	mov	r2, r3
   14e44:	ldr	r0, [r4, r1]
   14e48:	mov	r1, r3
   14e4c:	pop	{r4, r5, r6, lr}
   14e50:	ldr	r0, [r0]
   14e54:	b	14160 <_start@@Base+0x128>
   14e58:	ldr	r3, [pc, #72]	; 14ea8 <export_data_element_to_ascii@@Base+0xd8>
   14e5c:	mov	r0, #10
   14e60:	ldr	r3, [r4, r3]
   14e64:	ldr	r1, [r3]
   14e68:	bl	125a0 <fputc@plt>
   14e6c:	b	14df8 <export_data_element_to_ascii@@Base+0x28>
   14e70:	ldr	r3, [pc, #48]	; 14ea8 <export_data_element_to_ascii@@Base+0xd8>
   14e74:	mov	r2, #0
   14e78:	mov	r1, #2
   14e7c:	ldr	r5, [r4, r3]
   14e80:	ldr	r0, [r5]
   14e84:	bl	18908 <print_full_field_name@@Base>
   14e88:	ldr	r1, [r5]
   14e8c:	mov	r0, #10
   14e90:	bl	125a0 <fputc@plt>
   14e94:	b	14e0c <export_data_element_to_ascii@@Base+0x3c>
   14e98:	andeq	r8, r1, r8, lsl r4
   14e9c:	andeq	r8, r1, r4, lsl r2
   14ea0:	andeq	r0, r0, r8, ror #3
   14ea4:	andeq	r0, r0, r4, ror #3
   14ea8:			; <UNDEFINED> instruction: 0x000001bc
   14eac:	push	{r0, r1, r2, r3}
   14eb0:	ldr	r3, [pc, #52]	; 14eec <export_data_element_to_ascii@@Base+0x11c>
   14eb4:	ldr	r1, [pc, #52]	; 14ef0 <export_data_element_to_ascii@@Base+0x120>
   14eb8:	push	{lr}		; (str lr, [sp, #-4]!)
   14ebc:	add	r3, pc, r3
   14ec0:	sub	sp, sp, #12
   14ec4:	add	r2, sp, #20
   14ec8:	str	r2, [sp, #4]
   14ecc:	ldr	r0, [r3, r1]
   14ed0:	ldr	r1, [sp, #16]
   14ed4:	ldr	r0, [r0]
   14ed8:	bl	12564 <vfprintf@plt>
   14edc:	add	sp, sp, #12
   14ee0:	pop	{lr}		; (ldr lr, [sp], #4)
   14ee4:	add	sp, sp, #16
   14ee8:	bx	lr
   14eec:	andeq	r8, r1, ip, lsr r1
   14ef0:			; <UNDEFINED> instruction: 0x000001bc
   14ef4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ef8:	subs	r4, r1, #0
   14efc:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f00:	ldr	r8, [pc, #264]	; 15010 <export_data_element_to_ascii@@Base+0x240>
   14f04:	ldr	sl, [pc, #264]	; 15014 <export_data_element_to_ascii@@Base+0x244>
   14f08:	ldr	r9, [pc, #264]	; 15018 <export_data_element_to_ascii@@Base+0x248>
   14f0c:	ldr	r7, [pc, #264]	; 1501c <export_data_element_to_ascii@@Base+0x24c>
   14f10:	ldr	r6, [pc, #264]	; 15020 <export_data_element_to_ascii@@Base+0x250>
   14f14:	ldr	r5, [pc, #264]	; 15024 <export_data_element_to_ascii@@Base+0x254>
   14f18:	mov	fp, r0
   14f1c:	add	r8, pc, r8
   14f20:	add	sl, pc, sl
   14f24:	add	r9, pc, r9
   14f28:	add	r7, pc, r7
   14f2c:	add	r6, pc, r6
   14f30:	add	r5, pc, r5
   14f34:	add	r4, r0, r4
   14f38:	b	14f6c <export_data_element_to_ascii@@Base+0x19c>
   14f3c:	cmp	r1, #12
   14f40:	beq	15004 <export_data_element_to_ascii@@Base+0x234>
   14f44:	bcc	14ff8 <export_data_element_to_ascii@@Base+0x228>
   14f48:	cmp	r1, #13
   14f4c:	beq	14fec <export_data_element_to_ascii@@Base+0x21c>
   14f50:	cmp	r1, #92	; 0x5c
   14f54:	bne	14fd4 <export_data_element_to_ascii@@Base+0x204>
   14f58:	ldr	r0, [pc, #200]	; 15028 <export_data_element_to_ascii@@Base+0x258>
   14f5c:	add	r0, pc, r0
   14f60:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14f64:	cmp	fp, r4
   14f68:	beq	14fa4 <export_data_element_to_ascii@@Base+0x1d4>
   14f6c:	ldrb	r1, [fp], #1
   14f70:	cmp	r1, #10
   14f74:	beq	14fa8 <export_data_element_to_ascii@@Base+0x1d8>
   14f78:	bhi	14f3c <export_data_element_to_ascii@@Base+0x16c>
   14f7c:	cmp	r1, #8
   14f80:	beq	14fc4 <export_data_element_to_ascii@@Base+0x1f4>
   14f84:	bhi	14fb4 <export_data_element_to_ascii@@Base+0x1e4>
   14f88:	cmp	r1, #7
   14f8c:	bne	14fd4 <export_data_element_to_ascii@@Base+0x204>
   14f90:	ldr	r0, [pc, #148]	; 1502c <export_data_element_to_ascii@@Base+0x25c>
   14f94:	add	r0, pc, r0
   14f98:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14f9c:	cmp	fp, r4
   14fa0:	bne	14f6c <export_data_element_to_ascii@@Base+0x19c>
   14fa4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fa8:	mov	r0, r8
   14fac:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14fb0:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   14fb4:	ldr	r0, [pc, #116]	; 15030 <export_data_element_to_ascii@@Base+0x260>
   14fb8:	add	r0, pc, r0
   14fbc:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14fc0:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   14fc4:	ldr	r0, [pc, #104]	; 15034 <export_data_element_to_ascii@@Base+0x264>
   14fc8:	add	r0, pc, r0
   14fcc:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14fd0:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   14fd4:	sub	r3, r1, #32
   14fd8:	cmp	r3, #94	; 0x5e
   14fdc:	movls	r0, r9
   14fe0:	movhi	r0, sl
   14fe4:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14fe8:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   14fec:	mov	r0, r5
   14ff0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   14ff4:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   14ff8:	mov	r0, r6
   14ffc:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15000:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   15004:	mov	r0, r7
   15008:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   1500c:	b	14f64 <export_data_element_to_ascii@@Base+0x194>
   15010:	strdeq	r5, [r0], -r4
   15014:	andeq	r5, r0, r4, lsl #28
   15018:	andeq	r5, r0, r0, ror lr
   1501c:	strdeq	r5, [r0], -r0
   15020:	andeq	r5, r0, r8, ror #27
   15024:	andeq	r5, r0, ip, ror #27
   15028:	andeq	r5, r0, r4, asr #27
   1502c:	andeq	r5, r0, r0, ror sp
   15030:	andeq	r5, r0, r4, asr sp
   15034:	andeq	r5, r0, r0, asr #26
   15038:	push	{r0, r1, r2, r3}
   1503c:	ldr	r3, [pc, #164]	; 150e8 <export_data_element_to_ascii@@Base+0x318>
   15040:	push	{r4, r5, r6, r7, r8, lr}
   15044:	add	r3, pc, r3
   15048:	ldr	r2, [pc, #156]	; 150ec <export_data_element_to_ascii@@Base+0x31c>
   1504c:	ldr	r4, [r3]
   15050:	add	r2, pc, r2
   15054:	cmp	r4, #0
   15058:	sub	sp, sp, #8
   1505c:	blt	150c8 <export_data_element_to_ascii@@Base+0x2f8>
   15060:	ldr	r3, [pc, #136]	; 150f0 <export_data_element_to_ascii@@Base+0x320>
   15064:	beq	150c0 <export_data_element_to_ascii@@Base+0x2f0>
   15068:	ldr	r8, [pc, #132]	; 150f4 <export_data_element_to_ascii@@Base+0x324>
   1506c:	ldr	r5, [r2, r3]
   15070:	add	r8, pc, r8
   15074:	mov	r7, #2
   15078:	mov	r6, #1
   1507c:	ldr	r3, [r5]
   15080:	mov	r2, r7
   15084:	mov	r1, r6
   15088:	mov	r0, r8
   1508c:	bl	12384 <fwrite@plt>
   15090:	subs	r4, r4, #1
   15094:	bne	1507c <export_data_element_to_ascii@@Base+0x2ac>
   15098:	add	r3, sp, #36	; 0x24
   1509c:	ldr	r0, [r5]
   150a0:	mov	r2, r3
   150a4:	ldr	r1, [sp, #32]
   150a8:	str	r3, [sp, #4]
   150ac:	bl	12564 <vfprintf@plt>
   150b0:	add	sp, sp, #8
   150b4:	pop	{r4, r5, r6, r7, r8, lr}
   150b8:	add	sp, sp, #16
   150bc:	bx	lr
   150c0:	ldr	r5, [r2, r3]
   150c4:	b	15098 <export_data_element_to_ascii@@Base+0x2c8>
   150c8:	ldr	r3, [pc, #40]	; 150f8 <export_data_element_to_ascii@@Base+0x328>
   150cc:	ldr	r1, [pc, #40]	; 150fc <export_data_element_to_ascii@@Base+0x32c>
   150d0:	ldr	r0, [pc, #40]	; 15100 <export_data_element_to_ascii@@Base+0x330>
   150d4:	add	r3, pc, r3
   150d8:	mov	r2, #44	; 0x2c
   150dc:	add	r1, pc, r1
   150e0:	add	r0, pc, r0
   150e4:	bl	12660 <__assert_fail@plt>
   150e8:	andeq	r8, r1, r0, asr #3
   150ec:	andeq	r7, r1, r8, lsr #31
   150f0:			; <UNDEFINED> instruction: 0x000001bc
   150f4:	andeq	r5, r0, ip, lsl #26
   150f8:	andeq	r5, r0, ip, lsr #25
   150fc:			; <UNDEFINED> instruction: 0x00005cbc
   15100:	andeq	r5, r0, ip, lsl sp
   15104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15108:	sub	sp, sp, #652	; 0x28c
   1510c:	mov	r5, r1
   15110:	add	r1, sp, #48	; 0x30
   15114:	mov	r4, r0
   15118:	bl	12324 <coda_cursor_has_attributes@plt>
   1511c:	ldr	r6, [pc, #3348]	; 15e38 <export_data_element_to_ascii@@Base+0x1068>
   15120:	add	r6, pc, r6
   15124:	cmp	r0, #0
   15128:	bne	15670 <export_data_element_to_ascii@@Base+0x8a0>
   1512c:	ldr	r3, [sp, #48]	; 0x30
   15130:	cmp	r3, #0
   15134:	bne	1561c <export_data_element_to_ascii@@Base+0x84c>
   15138:	add	r1, sp, #44	; 0x2c
   1513c:	mov	r0, r4
   15140:	bl	12330 <coda_cursor_get_type_class@plt>
   15144:	cmp	r0, #0
   15148:	bne	15614 <export_data_element_to_ascii@@Base+0x844>
   1514c:	ldr	r3, [sp, #44]	; 0x2c
   15150:	cmp	r3, #6
   15154:	addls	pc, pc, r3, lsl #2
   15158:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   1515c:	b	154f0 <export_data_element_to_ascii@@Base+0x720>
   15160:	b	15298 <export_data_element_to_ascii@@Base+0x4c8>
   15164:	b	15218 <export_data_element_to_ascii@@Base+0x448>
   15168:	b	15218 <export_data_element_to_ascii@@Base+0x448>
   1516c:	b	15218 <export_data_element_to_ascii@@Base+0x448>
   15170:	b	15218 <export_data_element_to_ascii@@Base+0x448>
   15174:	b	151c4 <export_data_element_to_ascii@@Base+0x3f4>
   15178:	mov	r0, r4
   1517c:	add	r1, sp, #96	; 0x60
   15180:	bl	12450 <coda_cursor_read_double@plt>
   15184:	cmp	r0, #0
   15188:	bne	15d28 <export_data_element_to_ascii@@Base+0xf58>
   1518c:	vldr	d0, [sp, #96]	; 0x60
   15190:	bl	1245c <coda_isNaN@plt>
   15194:	cmp	r0, #0
   15198:	bne	151ac <export_data_element_to_ascii@@Base+0x3dc>
   1519c:	vldr	d0, [sp, #96]	; 0x60
   151a0:	bl	12300 <coda_isInf@plt>
   151a4:	cmp	r0, #0
   151a8:	beq	15d8c <export_data_element_to_ascii@@Base+0xfbc>
   151ac:	ldr	r0, [pc, #3208]	; 15e3c <export_data_element_to_ascii@@Base+0x106c>
   151b0:	ldrd	r2, [sp, #96]	; 0x60
   151b4:	add	r0, pc, r0
   151b8:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   151bc:	add	sp, sp, #652	; 0x28c
   151c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151c4:	add	r1, sp, #72	; 0x48
   151c8:	mov	r0, r4
   151cc:	bl	1236c <coda_cursor_get_special_type@plt>
   151d0:	cmp	r0, #0
   151d4:	bne	15740 <export_data_element_to_ascii@@Base+0x970>
   151d8:	ldr	r0, [sp, #72]	; 0x48
   151dc:	cmp	r0, #0
   151e0:	bne	15708 <export_data_element_to_ascii@@Base+0x938>
   151e4:	bl	121d4 <coda_type_get_special_type_name@plt>
   151e8:	mov	r1, r0
   151ec:	ldr	r0, [pc, #3148]	; 15e40 <export_data_element_to_ascii@@Base+0x1070>
   151f0:	add	r0, pc, r0
   151f4:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   151f8:	ldr	r3, [sp, #72]	; 0x48
   151fc:	cmp	r3, #3
   15200:	addls	pc, pc, r3, lsl #2
   15204:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15208:	b	159b8 <export_data_element_to_ascii@@Base+0xbe8>
   1520c:	b	159fc <export_data_element_to_ascii@@Base+0xc2c>
   15210:	b	15178 <export_data_element_to_ascii@@Base+0x3a8>
   15214:	b	159c8 <export_data_element_to_ascii@@Base+0xbf8>
   15218:	add	r1, sp, #72	; 0x48
   1521c:	mov	r0, r4
   15220:	bl	12540 <coda_cursor_has_ascii_content@plt>
   15224:	cmp	r0, #0
   15228:	bne	15748 <export_data_element_to_ascii@@Base+0x978>
   1522c:	ldr	r3, [sp, #72]	; 0x48
   15230:	cmp	r3, #0
   15234:	bne	15688 <export_data_element_to_ascii@@Base+0x8b8>
   15238:	add	r1, sp, #64	; 0x40
   1523c:	mov	r0, r4
   15240:	bl	123cc <coda_cursor_get_read_type@plt>
   15244:	cmp	r0, #0
   15248:	bne	15680 <export_data_element_to_ascii@@Base+0x8b0>
   1524c:	ldr	r3, [sp, #64]	; 0x40
   15250:	add	r3, r3, #1
   15254:	cmp	r3, #13
   15258:	addls	pc, pc, r3, lsl #2
   1525c:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15260:	b	15c04 <export_data_element_to_ascii@@Base+0xe34>
   15264:	b	15a24 <export_data_element_to_ascii@@Base+0xc54>
   15268:	b	15a4c <export_data_element_to_ascii@@Base+0xc7c>
   1526c:	b	15a24 <export_data_element_to_ascii@@Base+0xc54>
   15270:	b	15a4c <export_data_element_to_ascii@@Base+0xc7c>
   15274:	b	15a24 <export_data_element_to_ascii@@Base+0xc54>
   15278:	b	15a4c <export_data_element_to_ascii@@Base+0xc7c>
   1527c:	b	15aa8 <export_data_element_to_ascii@@Base+0xcd8>
   15280:	b	15ae0 <export_data_element_to_ascii@@Base+0xd10>
   15284:	b	15a74 <export_data_element_to_ascii@@Base+0xca4>
   15288:	b	15a74 <export_data_element_to_ascii@@Base+0xca4>
   1528c:	b	15c04 <export_data_element_to_ascii@@Base+0xe34>
   15290:	b	15c04 <export_data_element_to_ascii@@Base+0xe34>
   15294:	b	15b18 <export_data_element_to_ascii@@Base+0xd48>
   15298:	add	r3, sp, #96	; 0x60
   1529c:	mov	r2, r3
   152a0:	add	r1, sp, #60	; 0x3c
   152a4:	mov	r0, r4
   152a8:	str	r3, [sp, #8]
   152ac:	bl	12534 <coda_cursor_get_array_dim@plt>
   152b0:	cmp	r0, #0
   152b4:	bne	15700 <export_data_element_to_ascii@@Base+0x930>
   152b8:	ldr	r0, [sp, #60]	; 0x3c
   152bc:	cmp	r0, #0
   152c0:	blt	151bc <export_data_element_to_ascii@@Base+0x3ec>
   152c4:	beq	15d0c <export_data_element_to_ascii@@Base+0xf3c>
   152c8:	ldr	r3, [sp, #8]
   152cc:	add	r2, sp, #128	; 0x80
   152d0:	add	r0, r3, r0, lsl #2
   152d4:	mov	r8, #1
   152d8:	mov	ip, #0
   152dc:	ldr	r1, [r3], #4
   152e0:	str	ip, [r2], #4
   152e4:	cmp	r0, r3
   152e8:	mul	r8, r1, r8
   152ec:	bne	152dc <export_data_element_to_ascii@@Base+0x50c>
   152f0:	cmp	r8, #0
   152f4:	subgt	r3, r8, #1
   152f8:	strgt	r3, [sp, #32]
   152fc:	ble	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15300:	mov	r0, r4
   15304:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   15308:	cmp	r0, #0
   1530c:	bne	15d04 <export_data_element_to_ascii@@Base+0xf34>
   15310:	ldr	r2, [pc, #2860]	; 15e44 <export_data_element_to_ascii@@Base+0x1074>
   15314:	ldr	r3, [pc, #2860]	; 15e48 <export_data_element_to_ascii@@Base+0x1078>
   15318:	add	r2, pc, r2
   1531c:	str	r2, [sp, #16]
   15320:	ldr	r2, [pc, #2852]	; 15e4c <export_data_element_to_ascii@@Base+0x107c>
   15324:	ldr	fp, [r6, r3]
   15328:	add	r2, pc, r2
   1532c:	ldr	r3, [pc, #2844]	; 15e50 <export_data_element_to_ascii@@Base+0x1080>
   15330:	str	r2, [sp, #20]
   15334:	ldr	r2, [pc, #2840]	; 15e54 <export_data_element_to_ascii@@Base+0x1084>
   15338:	ldr	r7, [pc, #2840]	; 15e58 <export_data_element_to_ascii@@Base+0x1088>
   1533c:	add	r3, pc, r3
   15340:	add	r2, pc, r2
   15344:	ldr	r1, [pc, #2832]	; 15e5c <export_data_element_to_ascii@@Base+0x108c>
   15348:	str	r8, [sp, #24]
   1534c:	add	r7, pc, r7
   15350:	mov	r9, #0
   15354:	mov	sl, r2
   15358:	mov	r8, r3
   1535c:	add	r1, pc, r1
   15360:	str	r1, [sp, #36]	; 0x24
   15364:	str	r5, [sp, #28]
   15368:	ldr	r0, [sp, #16]
   1536c:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15370:	ldr	r3, [sp, #60]	; 0x3c
   15374:	cmp	r3, #0
   15378:	addgt	r6, sp, #128	; 0x80
   1537c:	movgt	r5, #0
   15380:	bgt	15394 <export_data_element_to_ascii@@Base+0x5c4>
   15384:	b	153c8 <export_data_element_to_ascii@@Base+0x5f8>
   15388:	add	r5, r5, #1
   1538c:	cmp	r5, r3
   15390:	bge	153c8 <export_data_element_to_ascii@@Base+0x5f8>
   15394:	ldr	r1, [r6], #4
   15398:	mov	r0, r7
   1539c:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   153a0:	ldr	r3, [sp, #60]	; 0x3c
   153a4:	sub	r2, r3, #1
   153a8:	cmp	r2, r5
   153ac:	ble	15388 <export_data_element_to_ascii@@Base+0x5b8>
   153b0:	mov	r0, r8
   153b4:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   153b8:	ldr	r3, [sp, #60]	; 0x3c
   153bc:	add	r5, r5, #1
   153c0:	cmp	r5, r3
   153c4:	blt	15394 <export_data_element_to_ascii@@Base+0x5c4>
   153c8:	ldr	r0, [sp, #20]
   153cc:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   153d0:	ldr	r3, [sl]
   153d4:	cmp	r3, #0
   153d8:	bne	15758 <export_data_element_to_ascii@@Base+0x988>
   153dc:	ldr	r0, [pc, #2684]	; 15e60 <export_data_element_to_ascii@@Base+0x1090>
   153e0:	add	r0, pc, r0
   153e4:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   153e8:	ldr	r2, [pc, #2676]	; 15e64 <export_data_element_to_ascii@@Base+0x1094>
   153ec:	ldr	r1, [fp]
   153f0:	add	r2, pc, r2
   153f4:	ldr	ip, [sp, #28]
   153f8:	ldr	r3, [r2]
   153fc:	cmp	ip, r1
   15400:	mov	r0, ip
   15404:	movge	r0, #0
   15408:	movlt	r0, #1
   1540c:	add	r3, r3, #1
   15410:	orrs	r1, r0, r1, lsr #31
   15414:	str	r3, [r2]
   15418:	beq	157c8 <export_data_element_to_ascii@@Base+0x9f8>
   1541c:	add	r1, ip, #1
   15420:	mov	r0, r4
   15424:	bl	15104 <export_data_element_to_ascii@@Base+0x334>
   15428:	ldr	r2, [pc, #2616]	; 15e68 <export_data_element_to_ascii@@Base+0x1098>
   1542c:	ldr	r0, [sp, #60]	; 0x3c
   15430:	add	r2, pc, r2
   15434:	subs	r1, r0, #1
   15438:	ldr	r3, [r2]
   1543c:	sub	r3, r3, #1
   15440:	str	r3, [r2]
   15444:	bmi	154b4 <export_data_element_to_ascii@@Base+0x6e4>
   15448:	add	r3, sp, #648	; 0x288
   1544c:	add	r2, r3, r1, lsl #2
   15450:	ldr	r3, [r2, #-520]	; 0xfffffdf8
   15454:	ldr	ip, [r2, #-552]	; 0xfffffdd8
   15458:	add	r3, r3, #1
   1545c:	cmp	ip, r3
   15460:	str	r3, [r2, #-520]	; 0xfffffdf8
   15464:	bne	154b4 <export_data_element_to_ascii@@Base+0x6e4>
   15468:	sub	r0, r0, #-1073741822	; 0xc0000002
   1546c:	add	r3, sp, #648	; 0x288
   15470:	lsl	r0, r0, #2
   15474:	add	r2, r3, r0
   15478:	ldr	r3, [sp, #8]
   1547c:	mov	lr, #0
   15480:	sub	r2, r2, #516	; 0x204
   15484:	add	r0, r3, r0
   15488:	b	154a4 <export_data_element_to_ascii@@Base+0x6d4>
   1548c:	ldr	r3, [r2]
   15490:	ldr	ip, [r0], #-4
   15494:	add	r3, r3, #1
   15498:	cmp	r3, ip
   1549c:	str	r3, [r2]
   154a0:	bne	154b4 <export_data_element_to_ascii@@Base+0x6e4>
   154a4:	sub	r1, r1, #1
   154a8:	cmn	r1, #1
   154ac:	str	lr, [r2], #-4
   154b0:	bne	1548c <export_data_element_to_ascii@@Base+0x6bc>
   154b4:	ldr	r3, [sp, #32]
   154b8:	cmp	r9, r3
   154bc:	bge	154d0 <export_data_element_to_ascii@@Base+0x700>
   154c0:	mov	r0, r4
   154c4:	bl	12474 <coda_cursor_goto_next_array_element@plt>
   154c8:	cmp	r0, #0
   154cc:	bne	15750 <export_data_element_to_ascii@@Base+0x980>
   154d0:	ldr	r3, [sp, #24]
   154d4:	add	r9, r9, #1
   154d8:	cmp	r3, r9
   154dc:	bgt	15368 <export_data_element_to_ascii@@Base+0x598>
   154e0:	mov	r0, r4
   154e4:	bl	12408 <coda_cursor_goto_parent@plt>
   154e8:	add	sp, sp, #652	; 0x28c
   154ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154f0:	add	r1, sp, #52	; 0x34
   154f4:	mov	r0, r4
   154f8:	bl	12288 <coda_cursor_get_num_elements@plt>
   154fc:	cmp	r0, #0
   15500:	bne	15678 <export_data_element_to_ascii@@Base+0x8a8>
   15504:	ldr	r3, [sp, #52]	; 0x34
   15508:	cmp	r3, #0
   1550c:	ble	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15510:	add	r1, sp, #56	; 0x38
   15514:	mov	r0, r4
   15518:	bl	122e8 <coda_cursor_get_type@plt>
   1551c:	cmp	r0, #0
   15520:	bne	15cfc <export_data_element_to_ascii@@Base+0xf2c>
   15524:	add	r1, sp, #60	; 0x3c
   15528:	ldr	r0, [sp, #56]	; 0x38
   1552c:	bl	124ec <coda_type_get_record_union_status@plt>
   15530:	cmp	r0, #0
   15534:	bne	15cf4 <export_data_element_to_ascii@@Base+0xf24>
   15538:	ldr	r3, [sp, #60]	; 0x3c
   1553c:	cmp	r3, #0
   15540:	beq	157e8 <export_data_element_to_ascii@@Base+0xa18>
   15544:	add	r1, sp, #64	; 0x40
   15548:	mov	r0, r4
   1554c:	bl	125dc <coda_cursor_get_available_union_field_index@plt>
   15550:	cmp	r0, #0
   15554:	bne	15c44 <export_data_element_to_ascii@@Base+0xe74>
   15558:	add	r2, sp, #72	; 0x48
   1555c:	ldr	r1, [sp, #64]	; 0x40
   15560:	ldr	r0, [sp, #56]	; 0x38
   15564:	bl	12624 <coda_type_get_record_field_name@plt>
   15568:	cmp	r0, #0
   1556c:	bne	15c3c <export_data_element_to_ascii@@Base+0xe6c>
   15570:	ldr	r1, [sp, #64]	; 0x40
   15574:	mov	r0, r4
   15578:	bl	123a8 <coda_cursor_goto_record_field_by_index@plt>
   1557c:	cmp	r0, #0
   15580:	bne	15cc4 <export_data_element_to_ascii@@Base+0xef4>
   15584:	ldr	r0, [pc, #2272]	; 15e6c <export_data_element_to_ascii@@Base+0x109c>
   15588:	ldr	r1, [sp, #72]	; 0x48
   1558c:	add	r0, pc, r0
   15590:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15594:	ldr	r3, [pc, #2260]	; 15e70 <export_data_element_to_ascii@@Base+0x10a0>
   15598:	add	r3, pc, r3
   1559c:	ldr	r3, [r3]
   155a0:	cmp	r3, #0
   155a4:	bne	15c4c <export_data_element_to_ascii@@Base+0xe7c>
   155a8:	ldr	r0, [pc, #2244]	; 15e74 <export_data_element_to_ascii@@Base+0x10a4>
   155ac:	add	r0, pc, r0
   155b0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   155b4:	ldr	r1, [pc, #2236]	; 15e78 <export_data_element_to_ascii@@Base+0x10a8>
   155b8:	ldr	r3, [pc, #2184]	; 15e48 <export_data_element_to_ascii@@Base+0x1078>
   155bc:	add	r1, pc, r1
   155c0:	ldr	r2, [r1]
   155c4:	add	r2, r2, #1
   155c8:	str	r2, [r1]
   155cc:	ldr	r3, [r6, r3]
   155d0:	ldr	r3, [r3]
   155d4:	cmp	r5, r3
   155d8:	movge	r2, #0
   155dc:	movlt	r2, #1
   155e0:	orrs	r3, r2, r3, lsr #31
   155e4:	beq	15ccc <export_data_element_to_ascii@@Base+0xefc>
   155e8:	add	r1, r5, #1
   155ec:	mov	r0, r4
   155f0:	bl	15104 <export_data_element_to_ascii@@Base+0x334>
   155f4:	ldr	r2, [pc, #2176]	; 15e7c <export_data_element_to_ascii@@Base+0x10ac>
   155f8:	mov	r0, r4
   155fc:	add	r2, pc, r2
   15600:	ldr	r3, [r2]
   15604:	sub	r3, r3, #1
   15608:	str	r3, [r2]
   1560c:	bl	12408 <coda_cursor_goto_parent@plt>
   15610:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15614:	bl	1a974 <handle_coda_error@@Base>
   15618:	b	1514c <export_data_element_to_ascii@@Base+0x37c>
   1561c:	mov	r0, r4
   15620:	bl	124a4 <coda_cursor_goto_attributes@plt>
   15624:	cmp	r0, #0
   15628:	bne	157d8 <export_data_element_to_ascii@@Base+0xa08>
   1562c:	ldr	r7, [pc, #2124]	; 15e80 <export_data_element_to_ascii@@Base+0x10b0>
   15630:	ldr	r0, [pc, #2124]	; 15e84 <export_data_element_to_ascii@@Base+0x10b4>
   15634:	add	r7, pc, r7
   15638:	add	r0, pc, r0
   1563c:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15640:	ldr	r3, [r7]
   15644:	mov	r0, r4
   15648:	add	r3, r3, #1
   1564c:	mov	r1, r5
   15650:	str	r3, [r7]
   15654:	bl	15104 <export_data_element_to_ascii@@Base+0x334>
   15658:	ldr	r3, [r7]
   1565c:	mov	r0, r4
   15660:	sub	r3, r3, #1
   15664:	str	r3, [r7]
   15668:	bl	12408 <coda_cursor_goto_parent@plt>
   1566c:	b	15138 <export_data_element_to_ascii@@Base+0x368>
   15670:	bl	1a974 <handle_coda_error@@Base>
   15674:	b	1512c <export_data_element_to_ascii@@Base+0x35c>
   15678:	bl	1a974 <handle_coda_error@@Base>
   1567c:	b	15504 <export_data_element_to_ascii@@Base+0x734>
   15680:	bl	1a974 <handle_coda_error@@Base>
   15684:	b	1524c <export_data_element_to_ascii@@Base+0x47c>
   15688:	add	r1, sp, #128	; 0x80
   1568c:	mov	r0, r4
   15690:	bl	12438 <coda_cursor_get_string_length@plt>
   15694:	cmp	r0, #0
   15698:	bne	15cdc <export_data_element_to_ascii@@Base+0xf0c>
   1569c:	ldr	r0, [sp, #128]	; 0x80
   156a0:	add	r0, r0, #1
   156a4:	bl	123d8 <malloc@plt>
   156a8:	subs	r5, r0, #0
   156ac:	beq	15dc4 <export_data_element_to_ascii@@Base+0xff4>
   156b0:	ldr	r2, [sp, #128]	; 0x80
   156b4:	mov	r1, r5
   156b8:	add	r2, r2, #1
   156bc:	mov	r0, r4
   156c0:	bl	123fc <coda_cursor_read_string@plt>
   156c4:	cmp	r0, #0
   156c8:	bne	15cec <export_data_element_to_ascii@@Base+0xf1c>
   156cc:	ldr	r0, [pc, #1972]	; 15e88 <export_data_element_to_ascii@@Base+0x10b8>
   156d0:	add	r0, pc, r0
   156d4:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   156d8:	ldr	r1, [sp, #128]	; 0x80
   156dc:	mov	r0, r5
   156e0:	bl	14ef4 <export_data_element_to_ascii@@Base+0x124>
   156e4:	ldr	r0, [pc, #1952]	; 15e8c <export_data_element_to_ascii@@Base+0x10bc>
   156e8:	ldr	r1, [sp, #128]	; 0x80
   156ec:	add	r0, pc, r0
   156f0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   156f4:	mov	r0, r5
   156f8:	bl	122a0 <free@plt>
   156fc:	b	15238 <export_data_element_to_ascii@@Base+0x468>
   15700:	bl	1a974 <handle_coda_error@@Base>
   15704:	b	152b8 <export_data_element_to_ascii@@Base+0x4e8>
   15708:	add	r6, sp, #128	; 0x80
   1570c:	mov	r2, #520	; 0x208
   15710:	mov	r1, r4
   15714:	mov	r0, r6
   15718:	bl	122f4 <memcpy@plt>
   1571c:	mov	r0, r6
   15720:	bl	125d0 <coda_cursor_use_base_type_of_special_type@plt>
   15724:	cmp	r0, #0
   15728:	bne	15ce4 <export_data_element_to_ascii@@Base+0xf14>
   1572c:	mov	r0, r6
   15730:	mov	r1, r5
   15734:	bl	15104 <export_data_element_to_ascii@@Base+0x334>
   15738:	ldr	r0, [sp, #72]	; 0x48
   1573c:	b	151e4 <export_data_element_to_ascii@@Base+0x414>
   15740:	bl	1a974 <handle_coda_error@@Base>
   15744:	b	151d8 <export_data_element_to_ascii@@Base+0x408>
   15748:	bl	1a974 <handle_coda_error@@Base>
   1574c:	b	1522c <export_data_element_to_ascii@@Base+0x45c>
   15750:	bl	1a974 <handle_coda_error@@Base>
   15754:	b	154d0 <export_data_element_to_ascii@@Base+0x700>
   15758:	add	r1, sp, #64	; 0x40
   1575c:	mov	r0, r4
   15760:	bl	125f4 <coda_cursor_get_file_bit_offset@plt>
   15764:	cmp	r0, #0
   15768:	bne	157e0 <export_data_element_to_ascii@@Base+0xa10>
   1576c:	ldrd	r2, [sp, #64]	; 0x40
   15770:	add	r6, sp, #72	; 0x48
   15774:	cmp	r2, #0
   15778:	sbcs	r1, r3, #0
   1577c:	blt	153dc <export_data_element_to_ascii@@Base+0x60c>
   15780:	lsr	r0, r2, #3
   15784:	orr	r0, r0, r3, lsl #29
   15788:	asr	r1, r3, #3
   1578c:	mov	r2, r6
   15790:	bl	12654 <coda_str64@plt>
   15794:	mov	r1, r6
   15798:	ldr	r0, [sp, #36]	; 0x24
   1579c:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   157a0:	ldrd	r2, [r6, #-8]
   157a4:	mov	r1, #0
   157a8:	and	r0, r2, #7
   157ac:	orrs	r1, r0, r1
   157b0:	beq	153dc <export_data_element_to_ascii@@Base+0x60c>
   157b4:	ldr	r0, [pc, #1748]	; 15e90 <export_data_element_to_ascii@@Base+0x10c0>
   157b8:	and	r1, r2, #7
   157bc:	add	r0, pc, r0
   157c0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   157c4:	b	153dc <export_data_element_to_ascii@@Base+0x60c>
   157c8:	ldr	r0, [pc, #1732]	; 15e94 <export_data_element_to_ascii@@Base+0x10c4>
   157cc:	add	r0, pc, r0
   157d0:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   157d4:	b	15428 <export_data_element_to_ascii@@Base+0x658>
   157d8:	bl	1a974 <handle_coda_error@@Base>
   157dc:	b	1562c <export_data_element_to_ascii@@Base+0x85c>
   157e0:	bl	1a974 <handle_coda_error@@Base>
   157e4:	b	1576c <export_data_element_to_ascii@@Base+0x99c>
   157e8:	mov	r0, r4
   157ec:	bl	1239c <coda_cursor_goto_first_record_field@plt>
   157f0:	cmp	r0, #0
   157f4:	bne	15c34 <export_data_element_to_ascii@@Base+0xe64>
   157f8:	ldr	r3, [sp, #52]	; 0x34
   157fc:	mov	r1, #0
   15800:	cmp	r3, r1
   15804:	str	r1, [sp, #64]	; 0x40
   15808:	ble	154e0 <export_data_element_to_ascii@@Base+0x710>
   1580c:	ldr	r3, [pc, #1588]	; 15e48 <export_data_element_to_ascii@@Base+0x1078>
   15810:	ldr	sl, [pc, #1664]	; 15e98 <export_data_element_to_ascii@@Base+0x10c8>
   15814:	ldr	r9, [pc, #1664]	; 15e9c <export_data_element_to_ascii@@Base+0x10cc>
   15818:	ldr	fp, [r6, r3]
   1581c:	ldr	r3, [pc, #1660]	; 15ea0 <export_data_element_to_ascii@@Base+0x10d0>
   15820:	ldr	r8, [pc, #1660]	; 15ea4 <export_data_element_to_ascii@@Base+0x10d4>
   15824:	add	r3, pc, r3
   15828:	str	r3, [sp, #24]
   1582c:	ldr	r3, [pc, #1652]	; 15ea8 <export_data_element_to_ascii@@Base+0x10d8>
   15830:	ldr	r6, [pc, #1652]	; 15eac <export_data_element_to_ascii@@Base+0x10dc>
   15834:	add	r3, pc, r3
   15838:	add	sl, pc, sl
   1583c:	add	r9, pc, r9
   15840:	str	r3, [sp, #28]
   15844:	add	r8, pc, r8
   15848:	add	r6, pc, r6
   1584c:	add	r7, sp, #72	; 0x48
   15850:	b	158dc <export_data_element_to_ascii@@Base+0xb0c>
   15854:	ldr	r1, [sp, #72]	; 0x48
   15858:	mov	r0, sl
   1585c:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15860:	ldr	r3, [r9]
   15864:	cmp	r3, #0
   15868:	bne	15914 <export_data_element_to_ascii@@Base+0xb44>
   1586c:	mov	r0, r8
   15870:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15874:	ldr	r2, [fp]
   15878:	ldr	r3, [r6]
   1587c:	cmp	r5, r2
   15880:	movge	r1, #0
   15884:	movlt	r1, #1
   15888:	add	r3, r3, #1
   1588c:	str	r3, [r6]
   15890:	orrs	r2, r1, r2, lsr #31
   15894:	beq	15998 <export_data_element_to_ascii@@Base+0xbc8>
   15898:	add	r1, r5, #1
   1589c:	mov	r0, r4
   158a0:	bl	15104 <export_data_element_to_ascii@@Base+0x334>
   158a4:	ldr	r0, [pc, #1540]	; 15eb0 <export_data_element_to_ascii@@Base+0x10e0>
   158a8:	ldr	r2, [sp, #52]	; 0x34
   158ac:	add	r0, pc, r0
   158b0:	ldr	r1, [sp, #64]	; 0x40
   158b4:	ldr	r3, [r0]
   158b8:	sub	ip, r2, #1
   158bc:	sub	r3, r3, #1
   158c0:	cmp	ip, r1
   158c4:	str	r3, [r0]
   158c8:	bgt	158f8 <export_data_element_to_ascii@@Base+0xb28>
   158cc:	add	r1, r1, #1
   158d0:	cmp	r1, r2
   158d4:	str	r1, [sp, #64]	; 0x40
   158d8:	bge	154e0 <export_data_element_to_ascii@@Base+0x710>
   158dc:	mov	r2, r7
   158e0:	ldr	r0, [sp, #56]	; 0x38
   158e4:	bl	12624 <coda_type_get_record_field_name@plt>
   158e8:	cmp	r0, #0
   158ec:	beq	15854 <export_data_element_to_ascii@@Base+0xa84>
   158f0:	bl	1a974 <handle_coda_error@@Base>
   158f4:	b	15854 <export_data_element_to_ascii@@Base+0xa84>
   158f8:	mov	r0, r4
   158fc:	bl	12594 <coda_cursor_goto_next_record_field@plt>
   15900:	cmp	r0, #0
   15904:	bne	159a8 <export_data_element_to_ascii@@Base+0xbd8>
   15908:	ldr	r2, [sp, #52]	; 0x34
   1590c:	ldr	r1, [sp, #64]	; 0x40
   15910:	b	158cc <export_data_element_to_ascii@@Base+0xafc>
   15914:	add	r1, sp, #96	; 0x60
   15918:	mov	r0, r4
   1591c:	bl	125f4 <coda_cursor_get_file_bit_offset@plt>
   15920:	cmp	r0, #0
   15924:	bne	159b0 <export_data_element_to_ascii@@Base+0xbe0>
   15928:	ldrd	r0, [sp, #96]	; 0x60
   1592c:	add	r3, sp, #104	; 0x68
   15930:	str	r3, [sp, #16]
   15934:	cmp	r0, #0
   15938:	sbcs	r3, r1, #0
   1593c:	blt	1586c <export_data_element_to_ascii@@Base+0xa9c>
   15940:	strd	r0, [sp, #8]
   15944:	ldr	ip, [sp, #12]
   15948:	add	r3, sp, #128	; 0x80
   1594c:	lsr	r0, r0, #3
   15950:	mov	r2, r3
   15954:	orr	r0, r0, ip, lsl #29
   15958:	asr	r1, ip, #3
   1595c:	str	r3, [sp, #20]
   15960:	bl	12654 <coda_str64@plt>
   15964:	ldr	r1, [sp, #20]
   15968:	ldr	r0, [sp, #24]
   1596c:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15970:	ldr	r3, [sp, #16]
   15974:	mov	r1, #0
   15978:	ldrd	r2, [r3, #-8]
   1597c:	and	r0, r2, #7
   15980:	orrs	r1, r0, r1
   15984:	beq	1586c <export_data_element_to_ascii@@Base+0xa9c>
   15988:	and	r1, r2, #7
   1598c:	ldr	r0, [sp, #28]
   15990:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15994:	b	1586c <export_data_element_to_ascii@@Base+0xa9c>
   15998:	ldr	r0, [pc, #1300]	; 15eb4 <export_data_element_to_ascii@@Base+0x10e4>
   1599c:	add	r0, pc, r0
   159a0:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   159a4:	b	158a4 <export_data_element_to_ascii@@Base+0xad4>
   159a8:	bl	1a974 <handle_coda_error@@Base>
   159ac:	b	15908 <export_data_element_to_ascii@@Base+0xb38>
   159b0:	bl	1a974 <handle_coda_error@@Base>
   159b4:	b	15928 <export_data_element_to_ascii@@Base+0xb58>
   159b8:	ldr	r0, [pc, #1272]	; 15eb8 <export_data_element_to_ascii@@Base+0x10e8>
   159bc:	add	r0, pc, r0
   159c0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   159c4:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   159c8:	mov	r0, r4
   159cc:	add	r2, sp, #128	; 0x80
   159d0:	add	r1, sp, #96	; 0x60
   159d4:	bl	124f8 <coda_cursor_read_complex_double_split@plt>
   159d8:	cmp	r0, #0
   159dc:	bne	15d20 <export_data_element_to_ascii@@Base+0xf50>
   159e0:	ldrd	r4, [sp, #128]	; 0x80
   159e4:	ldr	r0, [pc, #1232]	; 15ebc <export_data_element_to_ascii@@Base+0x10ec>
   159e8:	ldrd	r2, [sp, #96]	; 0x60
   159ec:	strd	r4, [sp]
   159f0:	add	r0, pc, r0
   159f4:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   159f8:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   159fc:	mov	r0, r4
   15a00:	add	r1, sp, #128	; 0x80
   15a04:	bl	12450 <coda_cursor_read_double@plt>
   15a08:	cmp	r0, #0
   15a0c:	bne	15d18 <export_data_element_to_ascii@@Base+0xf48>
   15a10:	ldr	r0, [pc, #1192]	; 15ec0 <export_data_element_to_ascii@@Base+0x10f0>
   15a14:	ldrd	r2, [sp, #128]	; 0x80
   15a18:	add	r0, pc, r0
   15a1c:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15a20:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15a24:	mov	r0, r4
   15a28:	add	r1, sp, #128	; 0x80
   15a2c:	bl	125e8 <coda_cursor_read_int32@plt>
   15a30:	cmp	r0, #0
   15a34:	bne	15d38 <export_data_element_to_ascii@@Base+0xf68>
   15a38:	ldr	r0, [pc, #1156]	; 15ec4 <export_data_element_to_ascii@@Base+0x10f4>
   15a3c:	ldr	r1, [sp, #128]	; 0x80
   15a40:	add	r0, pc, r0
   15a44:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15a48:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15a4c:	mov	r0, r4
   15a50:	add	r1, sp, #128	; 0x80
   15a54:	bl	122c4 <coda_cursor_read_uint32@plt>
   15a58:	cmp	r0, #0
   15a5c:	bne	15d58 <export_data_element_to_ascii@@Base+0xf88>
   15a60:	ldr	r0, [pc, #1120]	; 15ec8 <export_data_element_to_ascii@@Base+0x10f8>
   15a64:	ldr	r1, [sp, #128]	; 0x80
   15a68:	add	r0, pc, r0
   15a6c:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15a70:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15a74:	mov	r0, r4
   15a78:	add	r1, sp, #128	; 0x80
   15a7c:	bl	12450 <coda_cursor_read_double@plt>
   15a80:	cmp	r0, #0
   15a84:	bne	15d50 <export_data_element_to_ascii@@Base+0xf80>
   15a88:	ldr	r3, [sp, #64]	; 0x40
   15a8c:	cmp	r3, #8
   15a90:	ldrd	r2, [sp, #128]	; 0x80
   15a94:	beq	15d40 <export_data_element_to_ascii@@Base+0xf70>
   15a98:	ldr	r0, [pc, #1068]	; 15ecc <export_data_element_to_ascii@@Base+0x10fc>
   15a9c:	add	r0, pc, r0
   15aa0:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15aa4:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15aa8:	mov	r0, r4
   15aac:	add	r1, sp, #96	; 0x60
   15ab0:	bl	12558 <coda_cursor_read_int64@plt>
   15ab4:	cmp	r0, #0
   15ab8:	bne	15d30 <export_data_element_to_ascii@@Base+0xf60>
   15abc:	add	r4, sp, #128	; 0x80
   15ac0:	ldrd	r0, [sp, #96]	; 0x60
   15ac4:	mov	r2, r4
   15ac8:	bl	12654 <coda_str64@plt>
   15acc:	ldr	r0, [pc, #1020]	; 15ed0 <export_data_element_to_ascii@@Base+0x1100>
   15ad0:	mov	r1, r4
   15ad4:	add	r0, pc, r0
   15ad8:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15adc:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15ae0:	mov	r0, r4
   15ae4:	add	r1, sp, #96	; 0x60
   15ae8:	bl	12444 <coda_cursor_read_uint64@plt>
   15aec:	cmp	r0, #0
   15af0:	bne	15d60 <export_data_element_to_ascii@@Base+0xf90>
   15af4:	add	r4, sp, #128	; 0x80
   15af8:	ldrd	r0, [sp, #96]	; 0x60
   15afc:	mov	r2, r4
   15b00:	bl	12294 <coda_str64u@plt>
   15b04:	ldr	r0, [pc, #968]	; 15ed4 <export_data_element_to_ascii@@Base+0x1104>
   15b08:	mov	r1, r4
   15b0c:	add	r0, pc, r0
   15b10:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15b14:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15b18:	add	r1, sp, #96	; 0x60
   15b1c:	mov	r0, r4
   15b20:	bl	125b8 <coda_cursor_get_bit_size@plt>
   15b24:	cmp	r0, #0
   15b28:	bne	15d84 <export_data_element_to_ascii@@Base+0xfb4>
   15b2c:	add	r5, sp, #104	; 0x68
   15b30:	ldrd	r8, [r5, #-8]
   15b34:	mov	r3, #0
   15b38:	and	r2, r8, #7
   15b3c:	orrs	r3, r2, r3
   15b40:	lsr	r6, r8, #3
   15b44:	movne	r3, #1
   15b48:	moveq	r3, #0
   15b4c:	orr	r6, r6, r9, lsl #29
   15b50:	adds	r6, r6, r3
   15b54:	mov	r0, r6
   15b58:	bl	123d8 <malloc@plt>
   15b5c:	subs	sl, r0, #0
   15b60:	beq	15e08 <export_data_element_to_ascii@@Base+0x1038>
   15b64:	strd	r8, [sp]
   15b68:	mov	r0, r4
   15b6c:	mov	r2, #0
   15b70:	mov	r3, #0
   15b74:	mov	r1, sl
   15b78:	bl	12648 <coda_cursor_read_bits@plt>
   15b7c:	cmp	r0, #0
   15b80:	bne	15d7c <export_data_element_to_ascii@@Base+0xfac>
   15b84:	ldr	r0, [pc, #844]	; 15ed8 <export_data_element_to_ascii@@Base+0x1108>
   15b88:	add	r4, sp, #128	; 0x80
   15b8c:	add	r0, pc, r0
   15b90:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15b94:	mov	r1, r6
   15b98:	mov	r0, sl
   15b9c:	bl	14ef4 <export_data_element_to_ascii@@Base+0x124>
   15ba0:	ldr	r0, [pc, #820]	; 15edc <export_data_element_to_ascii@@Base+0x110c>
   15ba4:	add	r0, pc, r0
   15ba8:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15bac:	ldmdb	r5, {r0, r1}
   15bb0:	mov	r2, r4
   15bb4:	lsr	r0, r0, #3
   15bb8:	orr	r0, r0, r1, lsl #29
   15bbc:	asr	r1, r1, #3
   15bc0:	bl	12654 <coda_str64@plt>
   15bc4:	ldr	r0, [pc, #788]	; 15ee0 <export_data_element_to_ascii@@Base+0x1110>
   15bc8:	mov	r1, r4
   15bcc:	add	r0, pc, r0
   15bd0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15bd4:	ldrd	r2, [r5, #-8]
   15bd8:	mov	r1, #0
   15bdc:	and	r0, r2, #7
   15be0:	orrs	r1, r0, r1
   15be4:	bne	15d68 <export_data_element_to_ascii@@Base+0xf98>
   15be8:	ldr	r0, [pc, #756]	; 15ee4 <export_data_element_to_ascii@@Base+0x1114>
   15bec:	add	r0, pc, r0
   15bf0:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15bf4:	mov	r0, sl
   15bf8:	add	sp, sp, #652	; 0x28c
   15bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c00:	b	122a0 <free@plt>
   15c04:	ldr	r3, [sp, #72]	; 0x48
   15c08:	cmp	r3, #0
   15c0c:	bne	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15c10:	ldr	r3, [pc, #720]	; 15ee8 <export_data_element_to_ascii@@Base+0x1118>
   15c14:	ldr	r1, [pc, #720]	; 15eec <export_data_element_to_ascii@@Base+0x111c>
   15c18:	ldr	r0, [pc, #720]	; 15ef0 <export_data_element_to_ascii@@Base+0x1120>
   15c1c:	add	r3, pc, r3
   15c20:	mov	r2, #548	; 0x224
   15c24:	add	r3, r3, #8
   15c28:	add	r1, pc, r1
   15c2c:	add	r0, pc, r0
   15c30:	bl	12660 <__assert_fail@plt>
   15c34:	bl	1a974 <handle_coda_error@@Base>
   15c38:	b	157f8 <export_data_element_to_ascii@@Base+0xa28>
   15c3c:	bl	1a974 <handle_coda_error@@Base>
   15c40:	b	15570 <export_data_element_to_ascii@@Base+0x7a0>
   15c44:	bl	1a974 <handle_coda_error@@Base>
   15c48:	b	15558 <export_data_element_to_ascii@@Base+0x788>
   15c4c:	add	r1, sp, #96	; 0x60
   15c50:	mov	r0, r4
   15c54:	bl	125f4 <coda_cursor_get_file_bit_offset@plt>
   15c58:	cmp	r0, #0
   15c5c:	bne	15dbc <export_data_element_to_ascii@@Base+0xfec>
   15c60:	ldrd	r8, [sp, #96]	; 0x60
   15c64:	add	sl, sp, #104	; 0x68
   15c68:	cmp	r8, #0
   15c6c:	sbcs	r3, r9, #0
   15c70:	blt	155a8 <export_data_element_to_ascii@@Base+0x7d8>
   15c74:	add	r7, sp, #128	; 0x80
   15c78:	lsr	r0, r8, #3
   15c7c:	mov	r2, r7
   15c80:	orr	r0, r0, r9, lsl #29
   15c84:	asr	r1, r9, #3
   15c88:	bl	12654 <coda_str64@plt>
   15c8c:	ldr	r0, [pc, #608]	; 15ef4 <export_data_element_to_ascii@@Base+0x1124>
   15c90:	mov	r1, r7
   15c94:	add	r0, pc, r0
   15c98:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15c9c:	ldrd	r2, [sl, #-8]
   15ca0:	mov	r1, #0
   15ca4:	and	r0, r2, #7
   15ca8:	orrs	r1, r0, r1
   15cac:	beq	155a8 <export_data_element_to_ascii@@Base+0x7d8>
   15cb0:	ldr	r0, [pc, #576]	; 15ef8 <export_data_element_to_ascii@@Base+0x1128>
   15cb4:	and	r1, r2, #7
   15cb8:	add	r0, pc, r0
   15cbc:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15cc0:	b	155a8 <export_data_element_to_ascii@@Base+0x7d8>
   15cc4:	bl	1a974 <handle_coda_error@@Base>
   15cc8:	b	15584 <export_data_element_to_ascii@@Base+0x7b4>
   15ccc:	ldr	r0, [pc, #552]	; 15efc <export_data_element_to_ascii@@Base+0x112c>
   15cd0:	add	r0, pc, r0
   15cd4:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15cd8:	b	155f4 <export_data_element_to_ascii@@Base+0x824>
   15cdc:	bl	1a974 <handle_coda_error@@Base>
   15ce0:	b	1569c <export_data_element_to_ascii@@Base+0x8cc>
   15ce4:	bl	1a974 <handle_coda_error@@Base>
   15ce8:	b	1572c <export_data_element_to_ascii@@Base+0x95c>
   15cec:	bl	1a974 <handle_coda_error@@Base>
   15cf0:	b	156cc <export_data_element_to_ascii@@Base+0x8fc>
   15cf4:	bl	1a974 <handle_coda_error@@Base>
   15cf8:	b	15538 <export_data_element_to_ascii@@Base+0x768>
   15cfc:	bl	1a974 <handle_coda_error@@Base>
   15d00:	b	15524 <export_data_element_to_ascii@@Base+0x754>
   15d04:	bl	1a974 <handle_coda_error@@Base>
   15d08:	b	15310 <export_data_element_to_ascii@@Base+0x540>
   15d0c:	str	r0, [sp, #32]
   15d10:	mov	r8, #1
   15d14:	b	15300 <export_data_element_to_ascii@@Base+0x530>
   15d18:	bl	1a974 <handle_coda_error@@Base>
   15d1c:	b	15a10 <export_data_element_to_ascii@@Base+0xc40>
   15d20:	bl	1a974 <handle_coda_error@@Base>
   15d24:	b	159e0 <export_data_element_to_ascii@@Base+0xc10>
   15d28:	bl	1a974 <handle_coda_error@@Base>
   15d2c:	b	1518c <export_data_element_to_ascii@@Base+0x3bc>
   15d30:	bl	1a974 <handle_coda_error@@Base>
   15d34:	b	15abc <export_data_element_to_ascii@@Base+0xcec>
   15d38:	bl	1a974 <handle_coda_error@@Base>
   15d3c:	b	15a38 <export_data_element_to_ascii@@Base+0xc68>
   15d40:	ldr	r0, [pc, #440]	; 15f00 <export_data_element_to_ascii@@Base+0x1130>
   15d44:	add	r0, pc, r0
   15d48:	bl	15038 <export_data_element_to_ascii@@Base+0x268>
   15d4c:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15d50:	bl	1a974 <handle_coda_error@@Base>
   15d54:	b	15a88 <export_data_element_to_ascii@@Base+0xcb8>
   15d58:	bl	1a974 <handle_coda_error@@Base>
   15d5c:	b	15a60 <export_data_element_to_ascii@@Base+0xc90>
   15d60:	bl	1a974 <handle_coda_error@@Base>
   15d64:	b	15af4 <export_data_element_to_ascii@@Base+0xd24>
   15d68:	ldr	r0, [pc, #404]	; 15f04 <export_data_element_to_ascii@@Base+0x1134>
   15d6c:	and	r1, r2, #7
   15d70:	add	r0, pc, r0
   15d74:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15d78:	b	15be8 <export_data_element_to_ascii@@Base+0xe18>
   15d7c:	bl	1a974 <handle_coda_error@@Base>
   15d80:	b	15b84 <export_data_element_to_ascii@@Base+0xdb4>
   15d84:	bl	1a974 <handle_coda_error@@Base>
   15d88:	b	15b2c <export_data_element_to_ascii@@Base+0xd5c>
   15d8c:	ldr	r0, [pc, #372]	; 15f08 <export_data_element_to_ascii@@Base+0x1138>
   15d90:	add	r4, sp, #128	; 0x80
   15d94:	mov	r1, r4
   15d98:	add	r0, pc, r0
   15d9c:	vldr	d0, [sp, #96]	; 0x60
   15da0:	bl	1227c <coda_time_double_to_string@plt>
   15da4:	cmp	r0, #0
   15da8:	beq	15df4 <export_data_element_to_ascii@@Base+0x1024>
   15dac:	ldr	r0, [pc, #344]	; 15f0c <export_data_element_to_ascii@@Base+0x113c>
   15db0:	add	r0, pc, r0
   15db4:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15db8:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15dbc:	bl	1a974 <handle_coda_error@@Base>
   15dc0:	b	15c60 <export_data_element_to_ascii@@Base+0xe90>
   15dc4:	ldr	r3, [pc, #324]	; 15f10 <export_data_element_to_ascii@@Base+0x1140>
   15dc8:	ldr	r2, [sp, #128]	; 0x80
   15dcc:	str	r3, [sp]
   15dd0:	ldr	r1, [pc, #316]	; 15f14 <export_data_element_to_ascii@@Base+0x1144>
   15dd4:	ldr	r3, [pc, #316]	; 15f18 <export_data_element_to_ascii@@Base+0x1148>
   15dd8:	add	r2, r2, #1
   15ddc:	add	r3, pc, r3
   15de0:	add	r1, pc, r1
   15de4:	mvn	r0, #0
   15de8:	bl	12258 <coda_set_error@plt>
   15dec:	bl	1a974 <handle_coda_error@@Base>
   15df0:	b	156b0 <export_data_element_to_ascii@@Base+0x8e0>
   15df4:	ldr	r0, [pc, #288]	; 15f1c <export_data_element_to_ascii@@Base+0x114c>
   15df8:	mov	r1, r4
   15dfc:	add	r0, pc, r0
   15e00:	bl	14eac <export_data_element_to_ascii@@Base+0xdc>
   15e04:	b	151bc <export_data_element_to_ascii@@Base+0x3ec>
   15e08:	ldr	r2, [pc, #272]	; 15f20 <export_data_element_to_ascii@@Base+0x1150>
   15e0c:	ldr	r3, [pc, #272]	; 15f24 <export_data_element_to_ascii@@Base+0x1154>
   15e10:	ldr	r1, [pc, #272]	; 15f28 <export_data_element_to_ascii@@Base+0x1158>
   15e14:	add	r3, pc, r3
   15e18:	str	r2, [sp]
   15e1c:	add	r1, pc, r1
   15e20:	mov	r2, r6
   15e24:	mvn	r0, #0
   15e28:	bl	12258 <coda_set_error@plt>
   15e2c:	bl	1a974 <handle_coda_error@@Base>
   15e30:	ldrd	r8, [r5, #-8]
   15e34:	b	15b64 <export_data_element_to_ascii@@Base+0xd94>
   15e38:	ldrdeq	r7, [r1], -r8
   15e3c:	andeq	r5, r0, ip, ror #25
   15e40:	andeq	r5, r0, r8, lsr #25
   15e44:	andeq	r5, r0, r8, lsl fp
   15e48:	andeq	r0, r0, r0, ror #3
   15e4c:	strdeq	r6, [r0], -r0
   15e50:	strdeq	r5, [r0], -ip
   15e54:			; <UNDEFINED> instruction: 0x00017eb4
   15e58:	andeq	r5, r0, r8, ror #21
   15e5c:	andeq	r5, r0, r4, asr #21
   15e60:	ldrdeq	r7, [r0], -r4
   15e64:	andeq	r7, r1, r4, lsl lr
   15e68:	ldrdeq	r7, [r1], -r4
   15e6c:	andeq	r5, r0, ip, lsl #17
   15e70:	andeq	r7, r1, ip, asr ip
   15e74:	andeq	r7, r0, r8
   15e78:	andeq	r7, r1, r8, asr #24
   15e7c:	andeq	r7, r1, r8, lsl #24
   15e80:	ldrdeq	r7, [r1], -r0
   15e84:	ldrdeq	r5, [r0], -r0
   15e88:	strdeq	r5, [r0], -r4
   15e8c:	andeq	r5, r0, r0, asr r7
   15e90:	andeq	r5, r0, r8, ror #12
   15e94:	andeq	r5, r0, ip, asr r6
   15e98:	andeq	r5, r0, r0, ror #11
   15e9c:			; <UNDEFINED> instruction: 0x000179b8
   15ea0:	strdeq	r5, [r0], -ip
   15ea4:	andeq	r6, r0, r0, ror sp
   15ea8:	strdeq	r5, [r0], -r0
   15eac:			; <UNDEFINED> instruction: 0x000179bc
   15eb0:	andeq	r7, r1, r8, asr r9
   15eb4:	andeq	r5, r0, ip, lsl #9
   15eb8:	strdeq	r6, [r0], -r8
   15ebc:	ldrdeq	r5, [r0], -r4
   15ec0:	andeq	r5, r0, r4, ror #8
   15ec4:	andeq	r5, r0, r0, lsr #8
   15ec8:	andeq	r5, r0, r0, lsl #8
   15ecc:	andeq	r5, r0, r0, ror #7
   15ed0:	muleq	r0, ip, r3
   15ed4:	andeq	r5, r0, r4, ror #6
   15ed8:	andeq	r5, r0, r8, lsr r8
   15edc:	andeq	r5, r0, r8, lsr #5
   15ee0:	andeq	r5, r0, ip, lsl #5
   15ee4:	andeq	r5, r0, r0, ror r2
   15ee8:	andeq	r5, r0, r4, ror #2
   15eec:	andeq	r5, r0, r0, ror r1
   15ef0:	andeq	r5, r0, r8, asr r2
   15ef4:	andeq	r5, r0, ip, lsl #3
   15ef8:	andeq	r5, r0, ip, ror #2
   15efc:	andeq	r5, r0, r8, asr r1
   15f00:	andeq	r5, r0, r0, lsr r1
   15f04:	strheq	r5, [r0], -r4
   15f08:	andeq	r4, r0, r8, lsr #31
   15f0c:	strdeq	r5, [r0], -r8
   15f10:	muleq	r0, sl, r1
   15f14:	andeq	r4, r0, r4, ror #29
   15f18:			; <UNDEFINED> instruction: 0x00004fbc
   15f1c:	andeq	r6, r0, r4, lsl #13
   15f20:			; <UNDEFINED> instruction: 0x000001bf
   15f24:	andeq	r4, r0, r4, lsl #31
   15f28:	andeq	r4, r0, r8, lsr #29

00015f2c <print_debug_data@@Base>:
   15f2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15f30:	subs	r7, r0, #0
   15f34:	ldr	r4, [pc, #364]	; 160a8 <print_debug_data@@Base+0x17c>
   15f38:	sub	sp, sp, #540	; 0x21c
   15f3c:	mov	r8, r1
   15f40:	mov	r9, r2
   15f44:	add	r4, pc, r4
   15f48:	beq	16038 <print_debug_data@@Base+0x10c>
   15f4c:	ldr	r2, [pc, #344]	; 160ac <print_debug_data@@Base+0x180>
   15f50:	add	r5, sp, #8
   15f54:	mov	r3, r9
   15f58:	ldr	r6, [r4, r2]
   15f5c:	mov	r2, r1
   15f60:	mov	r1, r7
   15f64:	ldr	r0, [r6]
   15f68:	str	r5, [sp]
   15f6c:	bl	12480 <coda_open_as@plt>
   15f70:	cmp	r0, #0
   15f74:	bne	16020 <print_debug_data@@Base+0xf4>
   15f78:	add	r1, sp, #12
   15f7c:	ldr	r0, [sp, #8]
   15f80:	bl	12348 <coda_get_product_format@plt>
   15f84:	cmp	r0, #0
   15f88:	bne	16018 <print_debug_data@@Base+0xec>
   15f8c:	ldr	r2, [sp, #12]
   15f90:	ldr	r3, [pc, #280]	; 160b0 <print_debug_data@@Base+0x184>
   15f94:	cmp	r2, #2
   15f98:	add	r3, pc, r3
   15f9c:	add	r5, sp, #16
   15fa0:	movhi	r2, #0
   15fa4:	movls	r2, #1
   15fa8:	mov	r0, r5
   15fac:	ldr	r1, [sp, #8]
   15fb0:	str	r2, [r3]
   15fb4:	bl	12390 <coda_cursor_set_product@plt>
   15fb8:	cmp	r0, #0
   15fbc:	bne	16010 <print_debug_data@@Base+0xe4>
   15fc0:	ldr	r3, [pc, #236]	; 160b4 <print_debug_data@@Base+0x188>
   15fc4:	ldr	r3, [r4, r3]
   15fc8:	ldr	r1, [r3]
   15fcc:	cmp	r1, #0
   15fd0:	beq	15fe4 <print_debug_data@@Base+0xb8>
   15fd4:	mov	r0, r5
   15fd8:	bl	12570 <coda_cursor_goto@plt>
   15fdc:	cmp	r0, #0
   15fe0:	bne	16008 <print_debug_data@@Base+0xdc>
   15fe4:	mov	r0, #0
   15fe8:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   15fec:	mov	r0, r5
   15ff0:	mov	r1, #0
   15ff4:	bl	15104 <export_data_element_to_ascii@@Base+0x334>
   15ff8:	ldr	r0, [sp, #8]
   15ffc:	bl	1254c <coda_close@plt>
   16000:	add	sp, sp, #540	; 0x21c
   16004:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16008:	bl	1a974 <handle_coda_error@@Base>
   1600c:	b	15fe4 <print_debug_data@@Base+0xb8>
   16010:	bl	1a974 <handle_coda_error@@Base>
   16014:	b	15fc0 <print_debug_data@@Base+0x94>
   16018:	bl	1a974 <handle_coda_error@@Base>
   1601c:	b	15f8c <print_debug_data@@Base+0x60>
   16020:	bl	1260c <coda_get_errno@plt>
   16024:	ldr	r3, [r0]
   16028:	cmn	r3, #21
   1602c:	beq	16054 <print_debug_data@@Base+0x128>
   16030:	bl	1a974 <handle_coda_error@@Base>
   16034:	b	15f78 <print_debug_data@@Base+0x4c>
   16038:	ldr	r3, [pc, #108]	; 160ac <print_debug_data@@Base+0x180>
   1603c:	add	r5, sp, #8
   16040:	mov	r1, r5
   16044:	ldr	r6, [r4, r3]
   16048:	ldr	r0, [r6]
   1604c:	bl	12264 <coda_open@plt>
   16050:	b	15f70 <print_debug_data@@Base+0x44>
   16054:	mov	r0, #0
   16058:	bl	122ac <coda_set_option_use_mmap@plt>
   1605c:	cmp	r7, #0
   16060:	beq	16094 <print_debug_data@@Base+0x168>
   16064:	ldr	r0, [r6]
   16068:	mov	r3, r9
   1606c:	str	r5, [sp]
   16070:	mov	r2, r8
   16074:	mov	r1, r7
   16078:	bl	12480 <coda_open_as@plt>
   1607c:	mov	r5, r0
   16080:	mov	r0, #1
   16084:	bl	122ac <coda_set_option_use_mmap@plt>
   16088:	cmp	r5, #0
   1608c:	bne	16030 <print_debug_data@@Base+0x104>
   16090:	b	15f78 <print_debug_data@@Base+0x4c>
   16094:	mov	r1, r5
   16098:	ldr	r0, [r6]
   1609c:	bl	12264 <coda_open@plt>
   160a0:	mov	r5, r0
   160a4:	b	16080 <print_debug_data@@Base+0x154>
   160a8:	strheq	r7, [r1], -r4
   160ac:			; <UNDEFINED> instruction: 0x000001b4
   160b0:	andeq	r7, r1, ip, asr r2
   160b4:	ldrdeq	r0, [r0], -r8
   160b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160bc:	sub	sp, sp, #20
   160c0:	ldr	r4, [pc, #668]	; 16364 <print_debug_data@@Base+0x438>
   160c4:	ldr	r3, [pc, #668]	; 16368 <print_debug_data@@Base+0x43c>
   160c8:	add	r4, pc, r4
   160cc:	mov	sl, r0
   160d0:	ldr	r8, [r4, r3]
   160d4:	mov	r6, r1
   160d8:	add	r0, r8, #144	; 0x90
   160dc:	add	r1, sp, #8
   160e0:	mov	r9, r2
   160e4:	bl	12330 <coda_cursor_get_type_class@plt>
   160e8:	cmp	r0, #0
   160ec:	bne	162f0 <print_debug_data@@Base+0x3c4>
   160f0:	ldr	r3, [sp, #8]
   160f4:	cmp	r3, #0
   160f8:	beq	16264 <print_debug_data@@Base+0x338>
   160fc:	cmp	r3, #1
   16100:	bne	16234 <print_debug_data@@Base+0x308>
   16104:	lsl	r1, r6, #2
   16108:	add	r3, r1, r6
   1610c:	ldr	r2, [r8, #3360]	; 0xd20
   16110:	add	r3, r8, r3, lsl #4
   16114:	cmp	r6, r2
   16118:	ldr	r3, [r3, #800]	; 0x320
   1611c:	bge	16344 <print_debug_data@@Base+0x418>
   16120:	add	r1, r1, r6
   16124:	cmp	r6, #0
   16128:	add	r1, r8, r1, lsl #4
   1612c:	streq	r6, [r8, #844]	; 0x34c
   16130:	add	r6, r6, #1
   16134:	ldr	lr, [r1, #844]	; 0x34c
   16138:	ldr	ip, [r1, #840]	; 0x348
   1613c:	lsl	r7, r6, #2
   16140:	add	r2, r7, r6
   16144:	ldr	r0, [r1, #804]	; 0x324
   16148:	mul	ip, ip, lr
   1614c:	add	r2, r8, r2, lsl #4
   16150:	add	r0, r3, r0
   16154:	cmp	r0, r3
   16158:	str	ip, [r2, #844]	; 0x34c
   1615c:	ble	16334 <print_debug_data@@Base+0x408>
   16160:	ldr	ip, [pc, #516]	; 1636c <print_debug_data@@Base+0x440>
   16164:	add	r2, r0, #1
   16168:	add	r3, r3, #1
   1616c:	ldr	r0, [r4, ip]
   16170:	mov	r5, #1
   16174:	add	r3, r0, r3, lsl #2
   16178:	add	r0, r0, r2, lsl #2
   1617c:	ldr	r2, [r3, #68]	; 0x44
   16180:	add	r3, r3, #4
   16184:	cmp	r2, #0
   16188:	ldrne	r2, [r3, #100]	; 0x64
   1618c:	ldrne	ip, [r1, #844]	; 0x34c
   16190:	ldreq	r2, [r3, #-4]
   16194:	ldrne	r2, [r2, ip, lsl #2]
   16198:	cmp	r3, r0
   1619c:	mul	r5, r2, r5
   161a0:	bne	1617c <print_debug_data@@Base+0x250>
   161a4:	cmp	r5, #0
   161a8:	ble	16254 <print_debug_data@@Base+0x328>
   161ac:	add	r0, r8, #144	; 0x90
   161b0:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   161b4:	cmp	r0, #0
   161b8:	bne	162f8 <print_debug_data@@Base+0x3cc>
   161bc:	sub	r3, r5, #1
   161c0:	add	r7, r7, r6
   161c4:	str	r3, [sp]
   161c8:	add	r3, r8, #144	; 0x90
   161cc:	add	sl, sl, #1
   161d0:	add	r7, r8, r7, lsl #4
   161d4:	mov	r4, #0
   161d8:	str	r3, [sp, #4]
   161dc:	b	161f8 <print_debug_data@@Base+0x2cc>
   161e0:	ldr	r3, [r7, #844]	; 0x34c
   161e4:	add	r3, r3, #1
   161e8:	str	r3, [r7, #844]	; 0x34c
   161ec:	add	r4, r4, #1
   161f0:	cmp	r5, r4
   161f4:	ble	16300 <print_debug_data@@Base+0x3d4>
   161f8:	mov	r2, r9
   161fc:	mov	r1, r6
   16200:	mov	r0, sl
   16204:	bl	160b8 <print_debug_data@@Base+0x18c>
   16208:	subs	fp, r0, #0
   1620c:	bne	16314 <print_debug_data@@Base+0x3e8>
   16210:	ldr	r3, [sp]
   16214:	cmp	r3, r4
   16218:	ble	161ec <print_debug_data@@Base+0x2c0>
   1621c:	ldr	r0, [sp, #4]
   16220:	bl	12474 <coda_cursor_goto_next_array_element@plt>
   16224:	cmp	r0, #0
   16228:	beq	161e0 <print_debug_data@@Base+0x2b4>
   1622c:	bl	1a974 <handle_coda_error@@Base>
   16230:	b	161e0 <print_debug_data@@Base+0x2b4>
   16234:	ldr	r3, [pc, #308]	; 16370 <print_debug_data@@Base+0x444>
   16238:	ldr	r1, [pc, #308]	; 16374 <print_debug_data@@Base+0x448>
   1623c:	ldr	r0, [pc, #308]	; 16378 <print_debug_data@@Base+0x44c>
   16240:	add	r3, pc, r3
   16244:	ldr	r2, [pc, #304]	; 1637c <print_debug_data@@Base+0x450>
   16248:	add	r1, pc, r1
   1624c:	add	r0, pc, r0
   16250:	bl	12660 <__assert_fail@plt>
   16254:	mov	fp, #0
   16258:	mov	r0, fp
   1625c:	add	sp, sp, #20
   16260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16264:	add	r4, r9, #872	; 0x368
   16268:	add	r2, sp, #12
   1626c:	add	r3, r8, r4, lsl #2
   16270:	add	r0, r8, #144	; 0x90
   16274:	ldr	r1, [r3, #4]
   16278:	bl	12240 <coda_cursor_get_record_field_available_status@plt>
   1627c:	cmp	r0, #0
   16280:	bne	1632c <print_debug_data@@Base+0x400>
   16284:	ldr	r3, [sp, #12]
   16288:	cmp	r3, #0
   1628c:	beq	16254 <print_debug_data@@Base+0x328>
   16290:	ldr	r3, [r8, #3748]	; 0xea4
   16294:	sub	r3, r3, #1
   16298:	cmp	r9, r3
   1629c:	beq	162e0 <print_debug_data@@Base+0x3b4>
   162a0:	add	r4, r8, r4, lsl #2
   162a4:	add	r0, r8, #144	; 0x90
   162a8:	ldr	r1, [r4, #4]
   162ac:	bl	123a8 <coda_cursor_goto_record_field_by_index@plt>
   162b0:	cmp	r0, #0
   162b4:	bne	1633c <print_debug_data@@Base+0x410>
   162b8:	add	r2, r9, #1
   162bc:	mov	r1, r6
   162c0:	add	r0, sl, #1
   162c4:	bl	160b8 <print_debug_data@@Base+0x18c>
   162c8:	str	r0, [sp, #12]
   162cc:	add	r0, r8, #144	; 0x90
   162d0:	bl	12408 <coda_cursor_goto_parent@plt>
   162d4:	ldr	r3, [sp, #12]
   162d8:	cmp	r3, #0
   162dc:	beq	16254 <print_debug_data@@Base+0x328>
   162e0:	mov	fp, #1
   162e4:	mov	r0, fp
   162e8:	add	sp, sp, #20
   162ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162f0:	bl	1a974 <handle_coda_error@@Base>
   162f4:	b	160f0 <print_debug_data@@Base+0x1c4>
   162f8:	bl	1a974 <handle_coda_error@@Base>
   162fc:	b	161bc <print_debug_data@@Base+0x290>
   16300:	add	r0, r8, #144	; 0x90
   16304:	bl	12408 <coda_cursor_goto_parent@plt>
   16308:	mov	r0, fp
   1630c:	add	sp, sp, #20
   16310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16314:	add	r0, r8, #144	; 0x90
   16318:	bl	12408 <coda_cursor_goto_parent@plt>
   1631c:	mov	fp, #1
   16320:	mov	r0, fp
   16324:	add	sp, sp, #20
   16328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1632c:	bl	1a974 <handle_coda_error@@Base>
   16330:	b	16284 <print_debug_data@@Base+0x358>
   16334:	mov	r5, #1
   16338:	b	161ac <print_debug_data@@Base+0x280>
   1633c:	bl	1a974 <handle_coda_error@@Base>
   16340:	b	162b8 <print_debug_data@@Base+0x38c>
   16344:	ldr	r3, [pc, #52]	; 16380 <print_debug_data@@Base+0x454>
   16348:	ldr	r1, [pc, #52]	; 16384 <print_debug_data@@Base+0x458>
   1634c:	ldr	r0, [pc, #52]	; 16388 <print_debug_data@@Base+0x45c>
   16350:	add	r3, pc, r3
   16354:	ldr	r2, [pc, #48]	; 1638c <print_debug_data@@Base+0x460>
   16358:	add	r1, pc, r1
   1635c:	add	r0, pc, r0
   16360:	bl	12660 <__assert_fail@plt>
   16364:	andeq	r6, r1, r0, lsr pc
   16368:			; <UNDEFINED> instruction: 0x000001b4
   1636c:	andeq	r0, r0, r4, ror #3
   16370:	muleq	r0, r0, ip
   16374:	strdeq	r4, [r0], -ip
   16378:	andeq	r4, r0, ip, asr lr
   1637c:	ldrdeq	r0, [r0], -r9
   16380:	andeq	r4, r0, r0, lsl #23
   16384:	andeq	r4, r0, ip, ror #23
   16388:	andeq	r4, r0, r8, asr #24
   1638c:	andeq	r0, r0, lr, ror r2
   16390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16394:	sub	sp, sp, #52	; 0x34
   16398:	ldr	r7, [pc, #1156]	; 16824 <print_debug_data@@Base+0x8f8>
   1639c:	ldr	r3, [pc, #1156]	; 16828 <print_debug_data@@Base+0x8fc>
   163a0:	add	r7, pc, r7
   163a4:	mov	r9, r0
   163a8:	ldr	r4, [r7, r3]
   163ac:	mov	r5, r1
   163b0:	add	r0, r4, #144	; 0x90
   163b4:	add	r1, sp, #8
   163b8:	mov	sl, r2
   163bc:	bl	12330 <coda_cursor_get_type_class@plt>
   163c0:	cmp	r0, #0
   163c4:	bne	16680 <print_debug_data@@Base+0x754>
   163c8:	ldr	r3, [sp, #8]
   163cc:	cmp	r3, #5
   163d0:	addls	pc, pc, r3, lsl #2
   163d4:	b	1665c <print_debug_data@@Base+0x730>
   163d8:	b	165b0 <print_debug_data@@Base+0x684>
   163dc:	b	16490 <print_debug_data@@Base+0x564>
   163e0:	b	1665c <print_debug_data@@Base+0x730>
   163e4:	b	1665c <print_debug_data@@Base+0x730>
   163e8:	b	163f0 <print_debug_data@@Base+0x4c4>
   163ec:	b	163f0 <print_debug_data@@Base+0x4c4>
   163f0:	ldr	r2, [r4, #3360]	; 0xd20
   163f4:	cmp	r5, r2
   163f8:	bne	167dc <print_debug_data@@Base+0x8b0>
   163fc:	cmp	r3, #4
   16400:	beq	166c8 <print_debug_data@@Base+0x79c>
   16404:	add	r1, sp, #16
   16408:	add	r0, r4, #144	; 0x90
   1640c:	bl	121c8 <coda_cursor_get_byte_size@plt>
   16410:	cmp	r0, #0
   16414:	bne	166ec <print_debug_data@@Base+0x7c0>
   16418:	ldrd	r2, [sp, #16]
   1641c:	add	r5, r5, r5, lsl #2
   16420:	ldr	r1, [pc, #1028]	; 1682c <print_debug_data@@Base+0x900>
   16424:	add	r4, r4, r5, lsl #4
   16428:	ldr	r0, [r4, #800]	; 0x320
   1642c:	ldr	r1, [r7, r1]
   16430:	ldr	r5, [r4, #844]	; 0x34c
   16434:	add	r4, r1, r0, lsl #2
   16438:	mov	lr, r4
   1643c:	ldr	r4, [r4, #108]	; 0x6c
   16440:	str	r2, [r4, r5, lsl #2]
   16444:	ldr	r4, [lr, #4]
   16448:	cmn	r4, #1
   1644c:	moveq	r1, lr
   16450:	streq	r2, [lr, #4]
   16454:	streq	r2, [r1, #36]	; 0x24
   16458:	beq	16488 <print_debug_data@@Base+0x55c>
   1645c:	add	r0, r0, #8
   16460:	asr	r5, r4, #31
   16464:	add	r1, r1, r0, lsl #2
   16468:	cmp	r4, r2
   1646c:	sbcs	r4, r5, r3
   16470:	ldr	r4, [r1, #4]
   16474:	strlt	r2, [lr, #4]
   16478:	cmp	r2, r4
   1647c:	asr	r5, r4, #31
   16480:	sbcs	r3, r3, r5
   16484:	strlt	r2, [r1, #4]
   16488:	add	sp, sp, #52	; 0x34
   1648c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16490:	lsl	r8, r5, #2
   16494:	add	r3, r8, r5
   16498:	ldr	r2, [r4, #3360]	; 0xd20
   1649c:	add	r3, r4, r3, lsl #4
   164a0:	cmp	r5, r2
   164a4:	ldr	r6, [r3, #800]	; 0x320
   164a8:	beq	16710 <print_debug_data@@Base+0x7e4>
   164ac:	add	r2, r8, r5
   164b0:	cmp	r5, #0
   164b4:	add	r2, r4, r2, lsl #4
   164b8:	streq	r5, [r4, #844]	; 0x34c
   164bc:	add	r5, r5, #1
   164c0:	ldr	ip, [r2, #844]	; 0x34c
   164c4:	ldr	r1, [r2, #840]	; 0x348
   164c8:	lsl	r8, r5, #2
   164cc:	add	r3, r8, r5
   164d0:	ldr	r0, [r2, #804]	; 0x324
   164d4:	mul	r1, r1, ip
   164d8:	add	r3, r4, r3, lsl #4
   164dc:	add	r0, r6, r0
   164e0:	cmp	r6, r0
   164e4:	str	r1, [r3, #844]	; 0x34c
   164e8:	bge	166f4 <print_debug_data@@Base+0x7c8>
   164ec:	ldr	ip, [pc, #824]	; 1682c <print_debug_data@@Base+0x900>
   164f0:	add	r1, r0, #1
   164f4:	add	r3, r6, #1
   164f8:	ldr	r0, [r7, ip]
   164fc:	mov	r7, #1
   16500:	add	r3, r0, r3, lsl #2
   16504:	add	r0, r0, r1, lsl #2
   16508:	ldr	r1, [r3, #68]	; 0x44
   1650c:	add	r3, r3, #4
   16510:	cmp	r1, #0
   16514:	ldrne	r1, [r3, #100]	; 0x64
   16518:	ldrne	ip, [r2, #844]	; 0x34c
   1651c:	ldreq	r1, [r3, #-4]
   16520:	ldrne	r1, [r1, ip, lsl #2]
   16524:	cmp	r3, r0
   16528:	mul	r7, r1, r7
   1652c:	bne	16508 <print_debug_data@@Base+0x5dc>
   16530:	cmp	r7, #0
   16534:	subgt	fp, r7, #1
   16538:	ble	16488 <print_debug_data@@Base+0x55c>
   1653c:	add	r0, r4, #144	; 0x90
   16540:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   16544:	cmp	r0, #0
   16548:	bne	16708 <print_debug_data@@Base+0x7dc>
   1654c:	add	r8, r8, r5
   16550:	add	r3, r4, #144	; 0x90
   16554:	add	r9, r9, #1
   16558:	add	r8, r4, r8, lsl #4
   1655c:	mov	r6, #0
   16560:	str	r3, [sp, #4]
   16564:	b	16580 <print_debug_data@@Base+0x654>
   16568:	ldr	r3, [r8, #844]	; 0x34c
   1656c:	add	r3, r3, #1
   16570:	str	r3, [r8, #844]	; 0x34c
   16574:	add	r6, r6, #1
   16578:	cmp	r6, r7
   1657c:	bge	166b0 <print_debug_data@@Base+0x784>
   16580:	mov	r2, sl
   16584:	mov	r1, r5
   16588:	mov	r0, r9
   1658c:	bl	16390 <print_debug_data@@Base+0x464>
   16590:	cmp	r6, fp
   16594:	bge	16574 <print_debug_data@@Base+0x648>
   16598:	ldr	r0, [sp, #4]
   1659c:	bl	12474 <coda_cursor_goto_next_array_element@plt>
   165a0:	cmp	r0, #0
   165a4:	beq	16568 <print_debug_data@@Base+0x63c>
   165a8:	bl	1a974 <handle_coda_error@@Base>
   165ac:	b	16568 <print_debug_data@@Base+0x63c>
   165b0:	add	r6, sl, #872	; 0x368
   165b4:	add	r2, sp, #16
   165b8:	add	r3, r4, r6, lsl #2
   165bc:	add	r0, r4, #144	; 0x90
   165c0:	ldr	r1, [r3, #4]
   165c4:	bl	12240 <coda_cursor_get_record_field_available_status@plt>
   165c8:	cmp	r0, #0
   165cc:	bne	166c0 <print_debug_data@@Base+0x794>
   165d0:	ldr	r3, [sp, #16]
   165d4:	cmp	r3, #0
   165d8:	bne	16688 <print_debug_data@@Base+0x75c>
   165dc:	ldr	r2, [r4, #3360]	; 0xd20
   165e0:	add	r2, r2, r2, lsl #2
   165e4:	lsl	r2, r2, #4
   165e8:	add	r0, r4, r2
   165ec:	ldr	ip, [r0, #804]	; 0x324
   165f0:	ldr	r1, [r0, #800]	; 0x320
   165f4:	cmp	ip, #0
   165f8:	ble	16488 <print_debug_data@@Base+0x55c>
   165fc:	ldr	lr, [pc, #552]	; 1682c <print_debug_data@@Base+0x900>
   16600:	add	ip, r1, #1
   16604:	add	r2, r2, #804	; 0x324
   16608:	ldr	r1, [r7, lr]
   1660c:	add	r4, r4, r2
   16610:	add	r2, r1, ip, lsl #2
   16614:	mov	ip, r3
   16618:	b	16630 <print_debug_data@@Base+0x704>
   1661c:	ldr	r1, [r0, #804]	; 0x324
   16620:	add	r3, r3, #1
   16624:	cmp	r1, r3
   16628:	add	r2, r2, #4
   1662c:	ble	16488 <print_debug_data@@Base+0x55c>
   16630:	ldr	r1, [r4, #4]!
   16634:	cmn	r1, #1
   16638:	bne	1661c <print_debug_data@@Base+0x6f0>
   1663c:	ldr	r1, [r2, #104]	; 0x68
   16640:	ldr	lr, [r0, #844]	; 0x34c
   16644:	str	ip, [r1, lr, lsl #2]
   16648:	ldr	r1, [r2]
   1664c:	str	ip, [r2, #32]
   16650:	cmn	r1, #1
   16654:	streq	ip, [r2]
   16658:	b	1661c <print_debug_data@@Base+0x6f0>
   1665c:	ldr	r3, [pc, #460]	; 16830 <print_debug_data@@Base+0x904>
   16660:	ldr	r1, [pc, #460]	; 16834 <print_debug_data@@Base+0x908>
   16664:	ldr	r0, [pc, #460]	; 16838 <print_debug_data@@Base+0x90c>
   16668:	add	r3, pc, r3
   1666c:	ldr	r2, [pc, #456]	; 1683c <print_debug_data@@Base+0x910>
   16670:	add	r3, r3, #36	; 0x24
   16674:	add	r1, pc, r1
   16678:	add	r0, pc, r0
   1667c:	bl	12660 <__assert_fail@plt>
   16680:	bl	1a974 <handle_coda_error@@Base>
   16684:	b	163c8 <print_debug_data@@Base+0x49c>
   16688:	add	r6, r4, r6, lsl #2
   1668c:	add	r0, r4, #144	; 0x90
   16690:	ldr	r1, [r6, #4]
   16694:	bl	123a8 <coda_cursor_goto_record_field_by_index@plt>
   16698:	cmp	r0, #0
   1669c:	bne	167cc <print_debug_data@@Base+0x8a0>
   166a0:	add	r2, sl, #1
   166a4:	mov	r1, r5
   166a8:	add	r0, r9, #1
   166ac:	bl	16390 <print_debug_data@@Base+0x464>
   166b0:	add	r0, r4, #144	; 0x90
   166b4:	bl	12408 <coda_cursor_goto_parent@plt>
   166b8:	add	sp, sp, #52	; 0x34
   166bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166c0:	bl	1a974 <handle_coda_error@@Base>
   166c4:	b	165d0 <print_debug_data@@Base+0x6a4>
   166c8:	add	r1, sp, #12
   166cc:	add	r0, r4, #144	; 0x90
   166d0:	bl	12438 <coda_cursor_get_string_length@plt>
   166d4:	cmp	r0, #0
   166d8:	bne	16700 <print_debug_data@@Base+0x7d4>
   166dc:	ldr	r2, [sp, #12]
   166e0:	asr	r3, r2, #31
   166e4:	strd	r2, [sp, #16]
   166e8:	b	1641c <print_debug_data@@Base+0x4f0>
   166ec:	bl	1a974 <handle_coda_error@@Base>
   166f0:	b	16418 <print_debug_data@@Base+0x4ec>
   166f4:	mov	fp, #0
   166f8:	mov	r7, #1
   166fc:	b	1653c <print_debug_data@@Base+0x610>
   16700:	bl	1a974 <handle_coda_error@@Base>
   16704:	b	166dc <print_debug_data@@Base+0x7b0>
   16708:	bl	1a974 <handle_coda_error@@Base>
   1670c:	b	1654c <print_debug_data@@Base+0x620>
   16710:	add	r9, sp, #16
   16714:	mov	r2, r9
   16718:	add	r1, sp, #12
   1671c:	add	r0, r4, #144	; 0x90
   16720:	bl	12534 <coda_cursor_get_array_dim@plt>
   16724:	cmp	r0, #0
   16728:	bne	167d4 <print_debug_data@@Base+0x8a8>
   1672c:	add	r5, r8, r5
   16730:	ldr	r2, [sp, #12]
   16734:	lsl	r5, r5, #4
   16738:	add	r0, r4, r5
   1673c:	ldr	r3, [r0, #804]	; 0x324
   16740:	cmp	r3, r2
   16744:	bne	16800 <print_debug_data@@Base+0x8d4>
   16748:	cmp	r3, #0
   1674c:	ble	16488 <print_debug_data@@Base+0x55c>
   16750:	ldr	r3, [pc, #212]	; 1682c <print_debug_data@@Base+0x900>
   16754:	add	r6, r6, #1
   16758:	add	r5, r5, #804	; 0x324
   1675c:	ldr	r3, [r7, r3]
   16760:	add	r4, r4, r5
   16764:	add	r3, r3, r6, lsl #2
   16768:	mov	r2, #0
   1676c:	b	16784 <print_debug_data@@Base+0x858>
   16770:	ldr	r1, [r0, #804]	; 0x324
   16774:	add	r2, r2, #1
   16778:	cmp	r1, r2
   1677c:	add	r3, r3, #4
   16780:	ble	16488 <print_debug_data@@Base+0x55c>
   16784:	ldr	r1, [r4, #4]!
   16788:	cmn	r1, #1
   1678c:	bne	16770 <print_debug_data@@Base+0x844>
   16790:	ldr	ip, [r3, #104]	; 0x68
   16794:	ldr	lr, [r0, #844]	; 0x34c
   16798:	ldr	r1, [r9, r2, lsl #2]
   1679c:	str	r1, [ip, lr, lsl #2]
   167a0:	ldr	ip, [r3]
   167a4:	cmn	ip, #1
   167a8:	streq	r1, [r3]
   167ac:	streq	r1, [r3, #32]
   167b0:	beq	16770 <print_debug_data@@Base+0x844>
   167b4:	cmp	r1, ip
   167b8:	ldr	ip, [r3, #32]
   167bc:	strgt	r1, [r3]
   167c0:	cmp	r1, ip
   167c4:	strlt	r1, [r3, #32]
   167c8:	b	16770 <print_debug_data@@Base+0x844>
   167cc:	bl	1a974 <handle_coda_error@@Base>
   167d0:	b	166a0 <print_debug_data@@Base+0x774>
   167d4:	bl	1a974 <handle_coda_error@@Base>
   167d8:	b	1672c <print_debug_data@@Base+0x800>
   167dc:	ldr	r3, [pc, #92]	; 16840 <print_debug_data@@Base+0x914>
   167e0:	ldr	r1, [pc, #92]	; 16844 <print_debug_data@@Base+0x918>
   167e4:	ldr	r0, [pc, #92]	; 16848 <print_debug_data@@Base+0x91c>
   167e8:	add	r3, pc, r3
   167ec:	mov	r2, #252	; 0xfc
   167f0:	add	r3, r3, #36	; 0x24
   167f4:	add	r1, pc, r1
   167f8:	add	r0, pc, r0
   167fc:	bl	12660 <__assert_fail@plt>
   16800:	ldr	r3, [pc, #68]	; 1684c <print_debug_data@@Base+0x920>
   16804:	ldr	r1, [pc, #68]	; 16850 <print_debug_data@@Base+0x924>
   16808:	ldr	r0, [pc, #68]	; 16854 <print_debug_data@@Base+0x928>
   1680c:	add	r3, pc, r3
   16810:	mov	r2, #125	; 0x7d
   16814:	add	r3, r3, #36	; 0x24
   16818:	add	r1, pc, r1
   1681c:	add	r0, pc, r0
   16820:	bl	12660 <__assert_fail@plt>
   16824:	andeq	r6, r1, r8, asr ip
   16828:			; <UNDEFINED> instruction: 0x000001b4
   1682c:	andeq	r0, r0, r4, ror #3
   16830:	andeq	r4, r0, r8, ror #16
   16834:	ldrdeq	r4, [r0], -r0
   16838:	andeq	r4, r0, r0, lsr sl
   1683c:	andeq	r0, r0, r6, lsr #2
   16840:	andeq	r4, r0, r8, ror #13
   16844:	andeq	r4, r0, r0, asr r7
   16848:	strdeq	r4, [r0], -r8
   1684c:	andeq	r4, r0, r4, asr #13
   16850:	andeq	r4, r0, ip, lsr #14
   16854:			; <UNDEFINED> instruction: 0x000047b0

00016858 <dim_info_init@@Base>:
   16858:	ldr	r3, [pc, #32]	; 16880 <dim_info_init@@Base+0x28>
   1685c:	ldr	r2, [pc, #32]	; 16884 <dim_info_init@@Base+0x2c>
   16860:	add	r3, pc, r3
   16864:	mov	r1, #0
   16868:	ldr	r2, [r3, r2]
   1686c:	mvn	r0, #0
   16870:	str	r0, [r2, #104]	; 0x68
   16874:	str	r1, [r2]
   16878:	str	r1, [r2, #68]	; 0x44
   1687c:	bx	lr
   16880:	muleq	r1, r8, r7
   16884:	andeq	r0, r0, r4, ror #3

00016888 <dim_info_done@@Base>:
   16888:	bx	lr

0001688c <print_all_distinct_dims@@Base>:
   1688c:	ldr	r3, [pc, #500]	; 16a88 <print_all_distinct_dims@@Base+0x1fc>
   16890:	ldr	r2, [pc, #500]	; 16a8c <print_all_distinct_dims@@Base+0x200>
   16894:	add	r3, pc, r3
   16898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1689c:	sub	sp, sp, #12
   168a0:	ldr	r5, [r3, r2]
   168a4:	ldr	r3, [r5]
   168a8:	cmp	r3, r0
   168ac:	ble	16a64 <print_all_distinct_dims@@Base+0x1d8>
   168b0:	add	r3, r0, #18
   168b4:	mov	r4, r0
   168b8:	ldr	r3, [r5, r3, lsl #2]
   168bc:	cmp	r3, #0
   168c0:	bne	168cc <print_all_distinct_dims@@Base+0x40>
   168c4:	add	sp, sp, #12
   168c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168cc:	lsl	r7, r0, #2
   168d0:	add	r9, r5, r7
   168d4:	ldr	r8, [r9, #4]
   168d8:	add	r8, r8, #1
   168dc:	lsl	r8, r8, #2
   168e0:	mov	r0, r8
   168e4:	bl	123d8 <malloc@plt>
   168e8:	subs	r6, r0, #0
   168ec:	beq	16a2c <print_all_distinct_dims@@Base+0x1a0>
   168f0:	mov	r1, #0
   168f4:	mov	r2, r8
   168f8:	mov	r0, r6
   168fc:	bl	124bc <memset@plt>
   16900:	add	r3, r5, r4, lsl #2
   16904:	ldr	r3, [r3, #140]	; 0x8c
   16908:	add	r3, r5, r3, lsl #3
   1690c:	ldrd	r0, [r3, #232]	; 0xe8
   16910:	cmp	r0, #1
   16914:	sbcs	r3, r1, #0
   16918:	blt	16944 <print_all_distinct_dims@@Base+0xb8>
   1691c:	add	r3, r5, r4, lsl #2
   16920:	ldr	r2, [r3, #108]	; 0x6c
   16924:	add	r0, r2, r0, lsl #2
   16928:	ldr	r3, [r2], #4
   1692c:	cmp	r3, #0
   16930:	ldrge	r1, [r6, r3, lsl #2]
   16934:	addge	r1, r1, #1
   16938:	strge	r1, [r6, r3, lsl #2]
   1693c:	cmp	r0, r2
   16940:	bne	16928 <print_all_distinct_dims@@Base+0x9c>
   16944:	ldr	r0, [pc, #324]	; 16a90 <print_all_distinct_dims@@Base+0x204>
   16948:	add	r9, r4, #8
   1694c:	add	r1, r4, #1
   16950:	add	r0, pc, r0
   16954:	bl	12234 <printf@plt>
   16958:	add	fp, r5, r7
   1695c:	add	r3, r5, r9, lsl #2
   16960:	ldr	r1, [fp, #4]
   16964:	ldr	r4, [r3, #4]
   16968:	ldr	sl, [pc, #292]	; 16a94 <print_all_distinct_dims@@Base+0x208>
   1696c:	cmp	r4, r1
   16970:	add	sl, pc, sl
   16974:	add	r8, r6, r4, lsl #2
   16978:	bge	169a4 <print_all_distinct_dims@@Base+0x118>
   1697c:	ldr	r3, [r8], #4
   16980:	cmp	r3, #0
   16984:	ble	16994 <print_all_distinct_dims@@Base+0x108>
   16988:	mov	r1, r4
   1698c:	mov	r0, sl
   16990:	bl	12234 <printf@plt>
   16994:	ldr	r1, [fp, #4]
   16998:	add	r4, r4, #1
   1699c:	cmp	r1, r4
   169a0:	bgt	1697c <print_all_distinct_dims@@Base+0xf0>
   169a4:	ldr	r0, [pc, #236]	; 16a98 <print_all_distinct_dims@@Base+0x20c>
   169a8:	add	r9, r5, r9, lsl #2
   169ac:	add	r0, pc, r0
   169b0:	bl	12234 <printf@plt>
   169b4:	ldr	r0, [pc, #224]	; 16a9c <print_all_distinct_dims@@Base+0x210>
   169b8:	add	r5, r5, r7
   169bc:	add	r0, pc, r0
   169c0:	bl	12234 <printf@plt>
   169c4:	ldr	r4, [r9, #4]
   169c8:	ldr	r3, [r5, #4]
   169cc:	cmp	r4, r3
   169d0:	bge	16a04 <print_all_distinct_dims@@Base+0x178>
   169d4:	ldr	r8, [pc, #196]	; 16aa0 <print_all_distinct_dims@@Base+0x214>
   169d8:	add	r7, r6, r4, lsl #2
   169dc:	add	r8, pc, r8
   169e0:	ldr	r1, [r7], #4
   169e4:	cmp	r1, #0
   169e8:	ble	169f4 <print_all_distinct_dims@@Base+0x168>
   169ec:	mov	r0, r8
   169f0:	bl	12234 <printf@plt>
   169f4:	ldr	r3, [r5, #4]
   169f8:	add	r4, r4, #1
   169fc:	cmp	r3, r4
   16a00:	bgt	169e0 <print_all_distinct_dims@@Base+0x154>
   16a04:	ldr	r0, [pc, #152]	; 16aa4 <print_all_distinct_dims@@Base+0x218>
   16a08:	ldr	r1, [r6, r3, lsl #2]
   16a0c:	add	r0, pc, r0
   16a10:	bl	12234 <printf@plt>
   16a14:	mov	r0, #10
   16a18:	bl	124c8 <putchar@plt>
   16a1c:	mov	r0, r6
   16a20:	add	sp, sp, #12
   16a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a28:	b	122a0 <free@plt>
   16a2c:	mov	r3, #61	; 0x3d
   16a30:	str	r3, [sp]
   16a34:	ldr	r1, [pc, #108]	; 16aa8 <print_all_distinct_dims@@Base+0x21c>
   16a38:	ldr	r3, [pc, #108]	; 16aac <print_all_distinct_dims@@Base+0x220>
   16a3c:	mov	r2, r8
   16a40:	add	r3, pc, r3
   16a44:	add	r1, pc, r1
   16a48:	mvn	r0, #0
   16a4c:	bl	12258 <coda_set_error@plt>
   16a50:	bl	1a974 <handle_coda_error@@Base>
   16a54:	ldr	r8, [r9, #4]
   16a58:	add	r8, r8, #1
   16a5c:	lsl	r8, r8, #2
   16a60:	b	168f0 <print_all_distinct_dims@@Base+0x64>
   16a64:	ldr	r3, [pc, #68]	; 16ab0 <print_all_distinct_dims@@Base+0x224>
   16a68:	ldr	r1, [pc, #68]	; 16ab4 <print_all_distinct_dims@@Base+0x228>
   16a6c:	ldr	r0, [pc, #68]	; 16ab8 <print_all_distinct_dims@@Base+0x22c>
   16a70:	add	r3, pc, r3
   16a74:	mov	r2, #50	; 0x32
   16a78:	add	r3, r3, #60	; 0x3c
   16a7c:	add	r1, pc, r1
   16a80:	add	r0, pc, r0
   16a84:	bl	12660 <__assert_fail@plt>
   16a88:	andeq	r6, r1, r4, ror #14
   16a8c:	andeq	r0, r0, r4, ror #3
   16a90:	andeq	r4, r0, r4, ror #13
   16a94:	ldrdeq	r4, [r0], -r0
   16a98:	muleq	r0, r8, r6
   16a9c:	andeq	r4, r0, ip, lsl #13
   16aa0:	andeq	r4, r0, r4, ror #12
   16aa4:	andeq	r4, r0, r8, lsr r6
   16aa8:	andeq	r4, r0, r0, lsl #5
   16aac:	andeq	r4, r0, r4, lsl #10
   16ab0:	andeq	r4, r0, r0, ror #8
   16ab4:	andeq	r4, r0, r8, asr #9
   16ab8:	muleq	r0, r8, r5

00016abc <dim_enter_array@@Base>:
   16abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ac0:	sub	sp, sp, #100	; 0x64
   16ac4:	ldr	r5, [pc, #2460]	; 17468 <dim_enter_array@@Base+0x9ac>
   16ac8:	ldr	r3, [pc, #2460]	; 1746c <dim_enter_array@@Base+0x9b0>
   16acc:	add	r5, pc, r5
   16ad0:	add	r1, sp, #56	; 0x38
   16ad4:	ldr	fp, [r5, r3]
   16ad8:	ldr	r3, [fp, #136]	; 0x88
   16adc:	ldr	r2, [fp, #3360]	; 0xd20
   16ae0:	add	r3, r3, #2
   16ae4:	str	r2, [sp, #12]
   16ae8:	ldr	r0, [fp, r3, lsl #2]
   16aec:	bl	1266c <coda_type_get_class@plt>
   16af0:	cmp	r0, #0
   16af4:	bne	16e8c <dim_enter_array@@Base+0x3d0>
   16af8:	ldr	r3, [sp, #56]	; 0x38
   16afc:	sub	r3, r3, #1
   16b00:	cmp	r3, #5
   16b04:	addls	pc, pc, r3, lsl #2
   16b08:	b	16e40 <dim_enter_array@@Base+0x384>
   16b0c:	b	16dd0 <dim_enter_array@@Base+0x314>
   16b10:	b	16e40 <dim_enter_array@@Base+0x384>
   16b14:	b	16e40 <dim_enter_array@@Base+0x384>
   16b18:	b	16d8c <dim_enter_array@@Base+0x2d0>
   16b1c:	b	16d20 <dim_enter_array@@Base+0x264>
   16b20:	b	16b24 <dim_enter_array@@Base+0x68>
   16b24:	ldr	r3, [fp, #136]	; 0x88
   16b28:	add	r1, sp, #64	; 0x40
   16b2c:	add	r3, r3, #2
   16b30:	ldr	r0, [fp, r3, lsl #2]
   16b34:	bl	124e0 <coda_type_get_special_type@plt>
   16b38:	cmp	r0, #0
   16b3c:	bne	1730c <dim_enter_array@@Base+0x850>
   16b40:	ldr	r3, [sp, #64]	; 0x40
   16b44:	cmp	r3, #3
   16b48:	bne	17444 <dim_enter_array@@Base+0x988>
   16b4c:	ldr	r2, [sp, #12]
   16b50:	mov	r1, #1
   16b54:	lsl	r3, r2, #2
   16b58:	str	r3, [sp, #20]
   16b5c:	add	r3, r3, r2
   16b60:	mov	r2, #2
   16b64:	add	r3, fp, r3, lsl #4
   16b68:	str	r1, [r3, #804]	; 0x324
   16b6c:	str	r2, [r3, #808]	; 0x328
   16b70:	ldr	r3, [pc, #2296]	; 17470 <dim_enter_array@@Base+0x9b4>
   16b74:	ldr	r3, [r5, r3]
   16b78:	ldr	r3, [r3]
   16b7c:	cmp	r3, #0
   16b80:	beq	16e64 <dim_enter_array@@Base+0x3a8>
   16b84:	ldr	r2, [pc, #2280]	; 17474 <dim_enter_array@@Base+0x9b8>
   16b88:	ldr	r3, [sp, #20]
   16b8c:	ldr	r1, [sp, #12]
   16b90:	ldr	sl, [r5, r2]
   16b94:	add	r3, r3, r1
   16b98:	add	r3, fp, r3, lsl #4
   16b9c:	ldr	r2, [sl]
   16ba0:	ldr	r4, [r3, #804]	; 0x324
   16ba4:	str	r2, [sp, #16]
   16ba8:	add	r0, r2, r4
   16bac:	cmp	r0, #8
   16bb0:	str	r2, [r3, #800]	; 0x320
   16bb4:	bgt	17420 <dim_enter_array@@Base+0x964>
   16bb8:	ldr	r2, [sp, #16]
   16bbc:	str	r0, [sl]
   16bc0:	cmp	r2, #0
   16bc4:	ble	17348 <dim_enter_array@@Base+0x88c>
   16bc8:	add	r3, r2, #37	; 0x25
   16bcc:	add	r2, sl, r2, lsl #3
   16bd0:	lsl	r3, r3, #3
   16bd4:	ldrd	r6, [r2, #232]	; 0xe8
   16bd8:	ldrd	r2, [r3, sl]
   16bdc:	strd	r6, [sp, #24]
   16be0:	cmp	r2, #1
   16be4:	strd	r2, [sp, #40]	; 0x28
   16be8:	sbcs	r3, r3, #0
   16bec:	blt	16f28 <dim_enter_array@@Base+0x46c>
   16bf0:	cmp	r4, #0
   16bf4:	ble	1735c <dim_enter_array@@Base+0x8a0>
   16bf8:	ldr	r2, [sp, #12]
   16bfc:	ldr	r3, [sp, #20]
   16c00:	mov	r5, #0
   16c04:	add	r3, r3, r2
   16c08:	ldr	r2, [sp, #16]
   16c0c:	add	r3, fp, r3, lsl #4
   16c10:	add	ip, r2, #1
   16c14:	add	lr, r4, ip
   16c18:	add	r9, r3, #804	; 0x324
   16c1c:	lsl	r3, ip, #2
   16c20:	str	r3, [sp, #36]	; 0x24
   16c24:	mov	r1, r9
   16c28:	add	lr, sl, lr, lsl #2
   16c2c:	add	r3, sl, r3
   16c30:	mov	r6, r5
   16c34:	ldr	r2, [r1, #4]!
   16c38:	cmn	r2, #1
   16c3c:	str	r2, [r3], #4
   16c40:	moveq	r5, #1
   16c44:	cmp	r3, lr
   16c48:	str	r6, [r3, #64]	; 0x40
   16c4c:	bne	16c34 <dim_enter_array@@Base+0x178>
   16c50:	cmp	r5, #0
   16c54:	beq	16f58 <dim_enter_array@@Base+0x49c>
   16c58:	ldr	r3, [sp, #20]
   16c5c:	ldr	r2, [sp, #12]
   16c60:	mov	r6, #0
   16c64:	add	r7, r3, r2
   16c68:	ldr	r3, [sp, #36]	; 0x24
   16c6c:	add	r7, fp, r7, lsl #4
   16c70:	add	r4, r3, #104	; 0x68
   16c74:	ldr	r3, [pc, #2044]	; 17478 <dim_enter_array@@Base+0x9bc>
   16c78:	add	r4, sl, r4
   16c7c:	add	r3, pc, r3
   16c80:	str	r3, [sp, #48]	; 0x30
   16c84:	ldr	r3, [pc, #2032]	; 1747c <dim_enter_array@@Base+0x9c0>
   16c88:	mov	r8, r9
   16c8c:	add	r3, pc, r3
   16c90:	str	r3, [sp, #52]	; 0x34
   16c94:	ldr	r3, [sp, #24]
   16c98:	lsl	r3, r3, #2
   16c9c:	str	r3, [sp, #32]
   16ca0:	b	16cbc <dim_enter_array@@Base+0x200>
   16ca4:	ldr	r3, [r7, #804]	; 0x324
   16ca8:	add	r6, r6, #1
   16cac:	cmp	r3, r6
   16cb0:	add	r4, r4, #4
   16cb4:	add	r3, r7, #804	; 0x324
   16cb8:	ble	16e94 <dim_enter_array@@Base+0x3d8>
   16cbc:	ldr	r3, [r8, #4]!
   16cc0:	cmn	r3, #1
   16cc4:	movne	r3, #0
   16cc8:	strne	r3, [r4, #32]
   16ccc:	strne	r3, [r4]
   16cd0:	bne	16ca4 <dim_enter_array@@Base+0x1e8>
   16cd4:	ldr	r3, [sp, #16]
   16cd8:	ldr	r0, [sp, #32]
   16cdc:	str	r3, [r4, #32]
   16ce0:	bl	123d8 <malloc@plt>
   16ce4:	cmp	r0, #0
   16ce8:	str	r0, [r4]
   16cec:	beq	173fc <dim_enter_array@@Base+0x940>
   16cf0:	ldrd	r2, [sp, #24]
   16cf4:	cmp	r2, #1
   16cf8:	sbcs	r3, r3, #0
   16cfc:	blt	16ca4 <dim_enter_array@@Base+0x1e8>
   16d00:	ldr	r3, [r4]
   16d04:	ldr	r2, [sp, #32]
   16d08:	add	r2, r3, r2
   16d0c:	mvn	r1, #0
   16d10:	str	r1, [r3], #4
   16d14:	cmp	r3, r2
   16d18:	bne	16d0c <dim_enter_array@@Base+0x250>
   16d1c:	b	16ca4 <dim_enter_array@@Base+0x1e8>
   16d20:	ldr	r3, [fp, #136]	; 0x88
   16d24:	add	r1, sp, #64	; 0x40
   16d28:	add	r3, r3, #2
   16d2c:	ldr	r0, [fp, r3, lsl #2]
   16d30:	bl	1230c <coda_type_get_bit_size@plt>
   16d34:	cmp	r0, #0
   16d38:	bne	17304 <dim_enter_array@@Base+0x848>
   16d3c:	ldr	r2, [sp, #12]
   16d40:	mov	r1, #1
   16d44:	lsl	r3, r2, #2
   16d48:	add	ip, r3, r2
   16d4c:	str	r3, [sp, #20]
   16d50:	ldrd	r2, [sp, #64]	; 0x40
   16d54:	add	ip, fp, ip, lsl #4
   16d58:	cmp	r2, #0
   16d5c:	sbcs	r0, r3, #0
   16d60:	str	r1, [ip, #804]	; 0x324
   16d64:	blt	1733c <dim_enter_array@@Base+0x880>
   16d68:	and	r0, r2, #7
   16d6c:	mov	r1, #0
   16d70:	lsr	r2, r2, #3
   16d74:	orr	r0, r0, r1
   16d78:	orr	r2, r2, r3, lsl #29
   16d7c:	cmp	r0, #0
   16d80:	addne	r2, r2, #1
   16d84:	str	r2, [ip, #808]	; 0x328
   16d88:	b	16b70 <dim_enter_array@@Base+0xb4>
   16d8c:	ldr	r3, [fp, #136]	; 0x88
   16d90:	add	r1, sp, #64	; 0x40
   16d94:	add	r3, r3, #2
   16d98:	ldr	r0, [fp, r3, lsl #2]
   16d9c:	bl	1251c <coda_type_get_string_length@plt>
   16da0:	cmp	r0, #0
   16da4:	bne	172fc <dim_enter_array@@Base+0x840>
   16da8:	ldr	r2, [sp, #12]
   16dac:	mov	r1, #1
   16db0:	lsl	r3, r2, #2
   16db4:	str	r3, [sp, #20]
   16db8:	add	r3, r3, r2
   16dbc:	ldr	r2, [sp, #64]	; 0x40
   16dc0:	add	r3, fp, r3, lsl #4
   16dc4:	str	r1, [r3, #804]	; 0x324
   16dc8:	str	r2, [r3, #808]	; 0x328
   16dcc:	b	16b70 <dim_enter_array@@Base+0xb4>
   16dd0:	ldr	r3, [fp, #136]	; 0x88
   16dd4:	add	r4, sp, #64	; 0x40
   16dd8:	add	r3, r3, #2
   16ddc:	mov	r2, r4
   16de0:	ldr	r0, [fp, r3, lsl #2]
   16de4:	add	r1, sp, #60	; 0x3c
   16de8:	bl	125ac <coda_type_get_array_dim@plt>
   16dec:	cmp	r0, #0
   16df0:	bne	17314 <dim_enter_array@@Base+0x858>
   16df4:	ldr	r2, [sp, #12]
   16df8:	ldr	r0, [sp, #60]	; 0x3c
   16dfc:	lsl	r3, r2, #2
   16e00:	str	r3, [sp, #20]
   16e04:	add	r3, r3, r2
   16e08:	cmp	r0, #0
   16e0c:	lsl	r3, r3, #4
   16e10:	add	r2, fp, r3
   16e14:	str	r0, [r2, #804]	; 0x324
   16e18:	ble	16b70 <dim_enter_array@@Base+0xb4>
   16e1c:	add	r3, r3, #804	; 0x324
   16e20:	mov	r2, r4
   16e24:	add	r0, r4, r0, lsl #2
   16e28:	add	r3, fp, r3
   16e2c:	ldr	r1, [r2], #4
   16e30:	cmp	r2, r0
   16e34:	str	r1, [r3, #4]!
   16e38:	bne	16e2c <dim_enter_array@@Base+0x370>
   16e3c:	b	16b70 <dim_enter_array@@Base+0xb4>
   16e40:	ldr	r3, [pc, #1592]	; 17480 <dim_enter_array@@Base+0x9c4>
   16e44:	ldr	r1, [pc, #1592]	; 17484 <dim_enter_array@@Base+0x9c8>
   16e48:	ldr	r0, [pc, #1592]	; 17488 <dim_enter_array@@Base+0x9cc>
   16e4c:	add	r3, pc, r3
   16e50:	ldr	r2, [pc, #1588]	; 1748c <dim_enter_array@@Base+0x9d0>
   16e54:	add	r3, r3, #84	; 0x54
   16e58:	add	r1, pc, r1
   16e5c:	add	r0, pc, r0
   16e60:	bl	12660 <__assert_fail@plt>
   16e64:	ldr	r1, [sp, #12]
   16e68:	ldr	r2, [sp, #20]
   16e6c:	add	r2, r2, r1
   16e70:	mvn	r1, #0
   16e74:	add	r2, fp, r2, lsl #4
   16e78:	str	r3, [r2, #840]	; 0x348
   16e7c:	str	r3, [r2, #844]	; 0x34c
   16e80:	str	r1, [r2, #800]	; 0x320
   16e84:	add	sp, sp, #100	; 0x64
   16e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e8c:	bl	1a974 <handle_coda_error@@Base>
   16e90:	b	16af8 <dim_enter_array@@Base+0x3c>
   16e94:	mov	r6, #0
   16e98:	mov	r0, r6
   16e9c:	str	r6, [r7, #844]	; 0x34c
   16ea0:	mov	r2, r6
   16ea4:	mov	r1, r6
   16ea8:	str	r3, [sp, #32]
   16eac:	bl	16390 <print_debug_data@@Base+0x464>
   16eb0:	ldr	r3, [sp, #32]
   16eb4:	ldr	r4, [r3]
   16eb8:	cmp	r4, r6
   16ebc:	ldrle	r0, [sl]
   16ec0:	ble	1735c <dim_enter_array@@Base+0x8a0>
   16ec4:	ldr	r3, [sp, #20]
   16ec8:	ldr	r2, [sp, #12]
   16ecc:	str	r6, [sp, #32]
   16ed0:	add	r8, r3, r2
   16ed4:	ldr	r3, [sp, #36]	; 0x24
   16ed8:	mov	r1, r6
   16edc:	add	r7, sl, r3
   16ee0:	add	r8, fp, r8, lsl #4
   16ee4:	mov	r2, #1
   16ee8:	b	16f00 <dim_enter_array@@Base+0x444>
   16eec:	ldr	r4, [r8, #804]	; 0x324
   16ef0:	add	r6, r6, #1
   16ef4:	cmp	r4, r6
   16ef8:	add	r7, r7, #4
   16efc:	ble	172dc <dim_enter_array@@Base+0x820>
   16f00:	ldr	r3, [r9, #4]!
   16f04:	cmn	r3, #1
   16f08:	bne	16eec <dim_enter_array@@Base+0x430>
   16f0c:	ldr	r0, [r7]
   16f10:	ldr	r3, [r7, #32]
   16f14:	cmp	r0, r3
   16f18:	beq	173c4 <dim_enter_array@@Base+0x908>
   16f1c:	str	r2, [r7, #68]	; 0x44
   16f20:	str	r5, [sp, #32]
   16f24:	b	16eec <dim_enter_array@@Base+0x430>
   16f28:	cmp	r4, #0
   16f2c:	ble	1735c <dim_enter_array@@Base+0x8a0>
   16f30:	ldr	r3, [sp, #16]
   16f34:	mov	r2, #0
   16f38:	add	ip, r3, #1
   16f3c:	add	r1, r4, ip
   16f40:	add	r3, sl, ip, lsl #2
   16f44:	add	r1, sl, r1, lsl #2
   16f48:	str	r2, [r3], #4
   16f4c:	cmp	r3, r1
   16f50:	str	r2, [r3, #64]	; 0x40
   16f54:	bne	16f48 <dim_enter_array@@Base+0x48c>
   16f58:	mov	r3, #0
   16f5c:	mvn	r2, #0
   16f60:	cmp	r0, #0
   16f64:	str	r3, [sl, #68]	; 0x44
   16f68:	str	r2, [sl, #104]	; 0x68
   16f6c:	ble	1731c <dim_enter_array@@Base+0x860>
   16f70:	str	r3, [sp, #32]
   16f74:	mov	lr, #0
   16f78:	mov	ip, lr
   16f7c:	mov	r6, lr
   16f80:	mov	r3, lr
   16f84:	add	r2, sl, #68	; 0x44
   16f88:	mvn	r5, #0
   16f8c:	mov	r7, #1
   16f90:	ldr	r1, [r2, #4]!
   16f94:	cmp	r1, #0
   16f98:	movne	ip, #1
   16f9c:	movne	r5, r3
   16fa0:	add	r3, r3, #1
   16fa4:	movne	r6, ip
   16fa8:	movne	lr, r7
   16fac:	cmp	r3, r0
   16fb0:	bne	16f90 <dim_enter_array@@Base+0x4d4>
   16fb4:	cmp	ip, #0
   16fb8:	strne	r6, [sl, #68]	; 0x44
   16fbc:	cmp	lr, #0
   16fc0:	strne	r5, [sl, #104]	; 0x68
   16fc4:	ldr	r2, [sp, #12]
   16fc8:	ldr	r3, [sp, #20]
   16fcc:	cmp	r4, #0
   16fd0:	add	r3, r3, r2
   16fd4:	mov	r2, #1
   16fd8:	add	r3, fp, r3, lsl #4
   16fdc:	str	r2, [r3, #840]	; 0x348
   16fe0:	ble	173ec <dim_enter_array@@Base+0x930>
   16fe4:	ldr	r3, [sp, #16]
   16fe8:	add	ip, r3, r2
   16fec:	ldr	r3, [sp, #16]
   16ff0:	add	ip, sl, ip, lsl #2
   16ff4:	add	r3, r3, #29
   16ff8:	str	sl, [sp, #36]	; 0x24
   16ffc:	lsl	r3, r3, #3
   17000:	add	r0, sl, r3
   17004:	str	fp, [sp, #48]	; 0x30
   17008:	str	r3, [sp, #52]	; 0x34
   1700c:	mov	lr, #1
   17010:	mov	r1, #0
   17014:	ldrd	sl, [sp, #24]
   17018:	b	17044 <dim_enter_array@@Base+0x588>
   1701c:	mul	r5, r2, fp
   17020:	asr	r7, r2, #31
   17024:	umull	r2, r3, r2, sl
   17028:	mla	r5, sl, r7, r5
   1702c:	add	r1, r1, #1
   17030:	add	r3, r5, r3
   17034:	cmp	r1, r4
   17038:	strd	r2, [r0, #8]
   1703c:	add	r0, r0, #8
   17040:	beq	17084 <dim_enter_array@@Base+0x5c8>
   17044:	ldr	r2, [ip], #4
   17048:	cmp	r1, #0
   1704c:	mul	lr, r2, lr
   17050:	beq	1701c <dim_enter_array@@Base+0x560>
   17054:	ldr	r6, [r0]
   17058:	asr	r9, r2, #31
   1705c:	ldr	r5, [r0, #4]
   17060:	mul	r3, r9, r6
   17064:	umull	r6, r7, r6, r2
   17068:	mla	r2, r2, r5, r3
   1706c:	add	r1, r1, #1
   17070:	add	r7, r2, r7
   17074:	cmp	r1, r4
   17078:	strd	r6, [r0, #8]
   1707c:	add	r0, r0, #8
   17080:	bne	17044 <dim_enter_array@@Base+0x588>
   17084:	ldr	r2, [sp, #12]
   17088:	ldr	r3, [sp, #20]
   1708c:	ldr	fp, [sp, #48]	; 0x30
   17090:	add	r3, r3, r2
   17094:	ldr	r2, [sp, #32]
   17098:	add	r3, fp, r3, lsl #4
   1709c:	cmp	r2, #0
   170a0:	ldr	sl, [sp, #36]	; 0x24
   170a4:	str	lr, [r3, #840]	; 0x348
   170a8:	beq	1725c <dim_enter_array@@Base+0x7a0>
   170ac:	ldr	r3, [sp, #16]
   170b0:	mov	r2, #0
   170b4:	add	r0, r3, #38	; 0x26
   170b8:	ldr	r3, [sp, #52]	; 0x34
   170bc:	add	r0, r0, r4
   170c0:	add	r1, r3, #72	; 0x48
   170c4:	add	r1, sl, r1
   170c8:	add	r0, sl, r0, lsl #3
   170cc:	mov	r3, #0
   170d0:	strd	r2, [r1], #8
   170d4:	cmp	r1, r0
   170d8:	bne	170d0 <dim_enter_array@@Base+0x614>
   170dc:	ldrd	r2, [sp, #24]
   170e0:	cmp	r2, #1
   170e4:	sbcs	r3, r3, #0
   170e8:	blt	17164 <dim_enter_array@@Base+0x6a8>
   170ec:	ldr	r3, [sp, #16]
   170f0:	ldr	r8, [sp, #24]
   170f4:	add	r7, r3, #38	; 0x26
   170f8:	add	lr, r4, r3
   170fc:	add	r7, sl, r7, lsl #3
   17100:	add	lr, sl, lr, lsl #2
   17104:	add	r9, sl, r3, lsl #2
   17108:	mov	r6, #0
   1710c:	cmp	r4, #0
   17110:	lslgt	r5, r6, #2
   17114:	movgt	r2, r7
   17118:	movgt	r3, r9
   1711c:	movgt	ip, #1
   17120:	ble	17158 <dim_enter_array@@Base+0x69c>
   17124:	ldr	r1, [r3, #72]	; 0x48
   17128:	add	r3, r3, #4
   1712c:	cmp	r1, #0
   17130:	ldrne	r1, [r3, #104]	; 0x68
   17134:	ldreq	r1, [r3]
   17138:	ldrne	r1, [r1, r5]
   1713c:	mul	ip, r1, ip
   17140:	ldrd	r0, [r2]
   17144:	adds	r0, r0, ip
   17148:	adc	r1, r1, ip, asr #31
   1714c:	cmp	r3, lr
   17150:	strd	r0, [r2], #8
   17154:	bne	17124 <dim_enter_array@@Base+0x668>
   17158:	add	r6, r6, #1
   1715c:	cmp	r6, r8
   17160:	bne	1710c <dim_enter_array@@Base+0x650>
   17164:	ldr	r2, [sp, #12]
   17168:	ldr	r3, [sp, #20]
   1716c:	add	r3, r3, r2
   17170:	add	r3, fp, r3, lsl #4
   17174:	ldr	r2, [r3, #804]	; 0x324
   17178:	ldr	r3, [sp, #16]
   1717c:	add	r3, r3, r2
   17180:	add	r3, r3, #37	; 0x25
   17184:	lsl	r3, r3, #3
   17188:	ldrd	r0, [sl, r3]
   1718c:	cmp	r0, #1
   17190:	sbcs	r3, r1, #0
   17194:	blt	16e84 <dim_enter_array@@Base+0x3c8>
   17198:	ldr	r3, [sl]
   1719c:	cmp	r2, #1
   171a0:	ldr	r0, [sl, r3, lsl #2]
   171a4:	add	r3, sl, r3, lsl #3
   171a8:	asr	r1, r0, #31
   171ac:	strd	r0, [r3, #168]	; 0xa8
   171b0:	ble	17204 <dim_enter_array@@Base+0x748>
   171b4:	ldr	r3, [sp, #16]
   171b8:	add	ip, r3, #20
   171bc:	add	ip, ip, r2
   171c0:	add	r6, r3, #1
   171c4:	add	r2, r3, r2
   171c8:	add	ip, sl, ip, lsl #3
   171cc:	add	ip, ip, #8
   171d0:	add	lr, sl, r2, lsl #2
   171d4:	add	r6, sl, r6, lsl #2
   171d8:	ldr	r2, [lr, #-4]!
   171dc:	ldr	r0, [ip, #4]
   171e0:	ldr	r1, [ip]
   171e4:	asr	r5, r2, #31
   171e8:	mul	r0, r2, r0
   171ec:	umull	r2, r3, r1, r2
   171f0:	mla	r1, r1, r5, r0
   171f4:	cmp	r6, lr
   171f8:	add	r3, r1, r3
   171fc:	strd	r2, [ip, #-8]!
   17200:	bne	171d8 <dim_enter_array@@Base+0x71c>
   17204:	ldr	r3, [sp, #16]
   17208:	cmp	r3, #0
   1720c:	ble	16e84 <dim_enter_array@@Base+0x3c8>
   17210:	ldr	r3, [sp, #16]
   17214:	add	r0, r3, #21
   17218:	add	ip, r3, #22
   1721c:	add	r0, sl, r0, lsl #3
   17220:	add	ip, sl, ip, lsl #3
   17224:	add	sl, sl, #168	; 0xa8
   17228:	ldr	r2, [r0]
   1722c:	ldr	lr, [ip, #4]
   17230:	ldr	r4, [ip]
   17234:	ldr	r1, [r0, #4]
   17238:	mul	lr, r2, lr
   1723c:	umull	r2, r3, r2, r4
   17240:	mla	r1, r4, r1, lr
   17244:	add	r3, r1, r3
   17248:	strd	r2, [r0], #-8
   1724c:	cmp	sl, r0
   17250:	bne	17228 <dim_enter_array@@Base+0x76c>
   17254:	add	sp, sp, #100	; 0x64
   17258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1725c:	ldr	r6, [sp, #16]
   17260:	ldrd	r8, [sp, #40]	; 0x28
   17264:	add	r0, r6, #38	; 0x26
   17268:	add	r3, sl, r6, lsl #2
   1726c:	lsl	r0, r0, #3
   17270:	ldr	r2, [r3, #4]
   17274:	cmp	r1, #1
   17278:	add	lr, sl, r0
   1727c:	mul	ip, r2, r9
   17280:	asr	r5, r2, #31
   17284:	umull	r2, r3, r2, r8
   17288:	mla	ip, r8, r5, ip
   1728c:	add	r3, ip, r3
   17290:	strd	r2, [sl, r0]
   17294:	ble	17164 <dim_enter_array@@Base+0x6a8>
   17298:	add	r5, r6, #37	; 0x25
   1729c:	add	r1, r5, r1
   172a0:	add	r4, r6, #2
   172a4:	add	r5, sl, r1, lsl #3
   172a8:	add	r4, sl, r4, lsl #2
   172ac:	ldr	r2, [r4], #4
   172b0:	ldr	r0, [lr, #4]
   172b4:	ldr	r1, [lr]
   172b8:	asr	r7, r2, #31
   172bc:	mul	r0, r2, r0
   172c0:	umull	r2, r3, r2, r1
   172c4:	mla	r1, r1, r7, r0
   172c8:	add	r3, r1, r3
   172cc:	strd	r2, [lr, #8]!
   172d0:	cmp	lr, r5
   172d4:	bne	172ac <dim_enter_array@@Base+0x7f0>
   172d8:	b	17164 <dim_enter_array@@Base+0x6a8>
   172dc:	ldr	r0, [sl]
   172e0:	mov	r2, #0
   172e4:	mvn	r3, #0
   172e8:	cmp	r0, r2
   172ec:	str	r2, [sl, #68]	; 0x44
   172f0:	str	r3, [sl, #104]	; 0x68
   172f4:	bgt	16f74 <dim_enter_array@@Base+0x4b8>
   172f8:	b	16fc4 <dim_enter_array@@Base+0x508>
   172fc:	bl	1a974 <handle_coda_error@@Base>
   17300:	b	16da8 <dim_enter_array@@Base+0x2ec>
   17304:	bl	1a974 <handle_coda_error@@Base>
   17308:	b	16d3c <dim_enter_array@@Base+0x280>
   1730c:	bl	1a974 <handle_coda_error@@Base>
   17310:	b	16b40 <dim_enter_array@@Base+0x84>
   17314:	bl	1a974 <handle_coda_error@@Base>
   17318:	b	16df4 <dim_enter_array@@Base+0x338>
   1731c:	ldr	r1, [sp, #12]
   17320:	ldr	r2, [sp, #20]
   17324:	str	r3, [sp, #32]
   17328:	add	r2, r2, r1
   1732c:	mov	r1, #1
   17330:	add	r2, fp, r2, lsl #4
   17334:	str	r1, [r2, #840]	; 0x348
   17338:	b	16fec <dim_enter_array@@Base+0x530>
   1733c:	mvn	r3, #0
   17340:	str	r3, [ip, #808]	; 0x328
   17344:	b	16b70 <dim_enter_array@@Base+0xb4>
   17348:	mov	r2, #1
   1734c:	mov	r3, #0
   17350:	strd	r2, [sp, #40]	; 0x28
   17354:	strd	r2, [sp, #24]
   17358:	b	16bf0 <dim_enter_array@@Base+0x134>
   1735c:	mov	r3, #0
   17360:	mvn	r2, #0
   17364:	cmp	r0, #0
   17368:	str	r3, [sl, #68]	; 0x44
   1736c:	str	r2, [sl, #104]	; 0x68
   17370:	bgt	16f70 <dim_enter_array@@Base+0x4b4>
   17374:	ldr	r2, [sp, #12]
   17378:	ldr	r3, [sp, #20]
   1737c:	add	r3, r3, r2
   17380:	mov	r2, #1
   17384:	add	r3, fp, r3, lsl #4
   17388:	str	r2, [r3, #840]	; 0x348
   1738c:	ldr	r2, [sp, #16]
   17390:	ldrd	r4, [sp, #40]	; 0x28
   17394:	add	ip, r2, #38	; 0x26
   17398:	add	r3, sl, r2, lsl #2
   1739c:	lsl	ip, ip, #3
   173a0:	ldr	r0, [r3, #4]
   173a4:	mov	lr, r4
   173a8:	mul	r2, r0, r5
   173ac:	asr	r3, r0, #31
   173b0:	umull	r0, r1, r0, r4
   173b4:	mla	r3, r4, r3, r2
   173b8:	add	r1, r3, r1
   173bc:	strd	r0, [sl, ip]
   173c0:	b	17164 <dim_enter_array@@Base+0x6a8>
   173c4:	str	r1, [r7, #68]	; 0x44
   173c8:	ldr	r0, [r7, #104]	; 0x68
   173cc:	str	r2, [sp, #48]	; 0x30
   173d0:	str	r1, [sp, #36]	; 0x24
   173d4:	bl	122a0 <free@plt>
   173d8:	ldr	r1, [sp, #36]	; 0x24
   173dc:	ldr	r2, [sp, #48]	; 0x30
   173e0:	str	r1, [r7, #104]	; 0x68
   173e4:	str	r1, [r7, #136]	; 0x88
   173e8:	b	16eec <dim_enter_array@@Base+0x430>
   173ec:	ldr	r3, [sp, #32]
   173f0:	cmp	r3, #0
   173f4:	bne	170dc <dim_enter_array@@Base+0x620>
   173f8:	b	1738c <dim_enter_array@@Base+0x8d0>
   173fc:	mov	r3, #456	; 0x1c8
   17400:	str	r3, [sp]
   17404:	ldr	r2, [sp, #32]
   17408:	ldr	r3, [sp, #48]	; 0x30
   1740c:	ldr	r1, [sp, #52]	; 0x34
   17410:	mvn	r0, #0
   17414:	bl	12258 <coda_set_error@plt>
   17418:	bl	1a974 <handle_coda_error@@Base>
   1741c:	b	16cf0 <dim_enter_array@@Base+0x234>
   17420:	ldr	r3, [pc, #104]	; 17490 <dim_enter_array@@Base+0x9d4>
   17424:	ldr	r1, [pc, #104]	; 17494 <dim_enter_array@@Base+0x9d8>
   17428:	ldr	r0, [pc, #104]	; 17498 <dim_enter_array@@Base+0x9dc>
   1742c:	add	r3, pc, r3
   17430:	ldr	r2, [pc, #100]	; 1749c <dim_enter_array@@Base+0x9e0>
   17434:	add	r3, r3, #84	; 0x54
   17438:	add	r1, pc, r1
   1743c:	add	r0, pc, r0
   17440:	bl	12660 <__assert_fail@plt>
   17444:	ldr	r3, [pc, #84]	; 174a0 <dim_enter_array@@Base+0x9e4>
   17448:	ldr	r1, [pc, #84]	; 174a4 <dim_enter_array@@Base+0x9e8>
   1744c:	ldr	r0, [pc, #84]	; 174a8 <dim_enter_array@@Base+0x9ec>
   17450:	add	r3, pc, r3
   17454:	ldr	r2, [pc, #80]	; 174ac <dim_enter_array@@Base+0x9f0>
   17458:	add	r3, r3, #84	; 0x54
   1745c:	add	r1, pc, r1
   17460:	add	r0, pc, r0
   17464:	bl	12660 <__assert_fail@plt>
   17468:	andeq	r6, r1, ip, lsr #10
   1746c:			; <UNDEFINED> instruction: 0x000001b4
   17470:			; <UNDEFINED> instruction: 0x000001b0
   17474:	andeq	r0, r0, r4, ror #3
   17478:	andeq	r4, r0, r8, asr #5
   1747c:	andeq	r4, r0, r8, lsr r0
   17480:	andeq	r4, r0, r4, lsl #1
   17484:	andeq	r4, r0, ip, ror #1
   17488:	andeq	r4, r0, ip, asr #4
   1748c:	andeq	r0, r0, r2, lsl #3
   17490:	andeq	r3, r0, r4, lsr #21
   17494:	andeq	r3, r0, ip, lsl #22
   17498:	andeq	r3, r0, r4, lsl ip
   1749c:	muleq	r0, r2, r1
   174a0:	andeq	r3, r0, r0, lsl #21
   174a4:	andeq	r3, r0, r8, ror #21
   174a8:	andeq	r3, r0, r8, asr #24
   174ac:	andeq	r0, r0, sp, asr r1

000174b0 <dim_leave_array@@Base>:
   174b0:	ldr	r1, [pc, #360]	; 17620 <dim_leave_array@@Base+0x170>
   174b4:	ldr	r3, [pc, #360]	; 17624 <dim_leave_array@@Base+0x174>
   174b8:	add	r1, pc, r1
   174bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   174c0:	ldr	r8, [r1, r3]
   174c4:	ldr	r3, [r8, #3360]	; 0xd20
   174c8:	cmp	r3, #0
   174cc:	blt	175fc <dim_leave_array@@Base+0x14c>
   174d0:	ldr	r2, [pc, #336]	; 17628 <dim_leave_array@@Base+0x178>
   174d4:	add	r3, r3, r3, lsl #2
   174d8:	ldr	r6, [r1, r2]
   174dc:	add	r8, r8, r3, lsl #4
   174e0:	ldr	ip, [r6]
   174e4:	ldr	r2, [r8, #804]	; 0x324
   174e8:	ldr	r7, [r8, #800]	; 0x320
   174ec:	sub	ip, ip, r2
   174f0:	cmp	r2, #0
   174f4:	str	ip, [r6]
   174f8:	ble	17544 <dim_leave_array@@Base+0x94>
   174fc:	add	r5, r7, #18
   17500:	mov	r4, #0
   17504:	add	r5, r6, r5, lsl #2
   17508:	b	1751c <dim_leave_array@@Base+0x6c>
   1750c:	ldr	r2, [r8, #804]	; 0x324
   17510:	add	r4, r4, #1
   17514:	cmp	r2, r4
   17518:	ble	17540 <dim_leave_array@@Base+0x90>
   1751c:	ldr	r3, [r5], #4
   17520:	cmp	r3, #0
   17524:	beq	1750c <dim_leave_array@@Base+0x5c>
   17528:	ldr	r0, [r5, #32]
   1752c:	bl	122a0 <free@plt>
   17530:	ldr	r2, [r8, #804]	; 0x324
   17534:	add	r4, r4, #1
   17538:	cmp	r2, r4
   1753c:	bgt	1751c <dim_leave_array@@Base+0x6c>
   17540:	ldr	ip, [r6]
   17544:	mov	lr, #0
   17548:	mvn	r5, #0
   1754c:	cmp	ip, #0
   17550:	str	lr, [r6, #68]	; 0x44
   17554:	str	r5, [r6, #104]	; 0x68
   17558:	ble	175a4 <dim_leave_array@@Base+0xf4>
   1755c:	mov	r4, lr
   17560:	mov	r8, lr
   17564:	mov	r3, lr
   17568:	add	r1, r6, #68	; 0x44
   1756c:	mov	r9, #1
   17570:	ldr	r0, [r1, #4]!
   17574:	cmp	r0, #0
   17578:	movne	r4, #1
   1757c:	movne	r5, r3
   17580:	add	r3, r3, #1
   17584:	movne	r8, r4
   17588:	movne	lr, r9
   1758c:	cmp	r3, ip
   17590:	bne	17570 <dim_leave_array@@Base+0xc0>
   17594:	cmp	r4, #0
   17598:	strne	r8, [r6, #68]	; 0x44
   1759c:	cmp	lr, #0
   175a0:	strne	r5, [r6, #104]	; 0x68
   175a4:	add	r2, r7, r2
   175a8:	add	r2, r2, #37	; 0x25
   175ac:	lsl	r2, r2, #3
   175b0:	ldrd	r2, [r2, r6]
   175b4:	cmp	r2, #1
   175b8:	sbcs	r3, r3, #0
   175bc:	blt	175f8 <dim_leave_array@@Base+0x148>
   175c0:	cmp	r7, #0
   175c4:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   175c8:	add	r4, r7, #21
   175cc:	add	r7, r7, #22
   175d0:	add	r4, r6, r4, lsl #3
   175d4:	add	r7, r6, r7, lsl #3
   175d8:	add	r6, r6, #168	; 0xa8
   175dc:	ldrd	r2, [r7]
   175e0:	ldrd	r0, [r4]
   175e4:	bl	1a9c8 <handle_coda_error@@Base+0x54>
   175e8:	strd	r0, [r4], #-8
   175ec:	cmp	r4, r6
   175f0:	bne	175dc <dim_leave_array@@Base+0x12c>
   175f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   175f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   175fc:	ldr	r3, [pc, #40]	; 1762c <dim_leave_array@@Base+0x17c>
   17600:	ldr	r1, [pc, #40]	; 17630 <dim_leave_array@@Base+0x180>
   17604:	ldr	r0, [pc, #40]	; 17634 <dim_leave_array@@Base+0x184>
   17608:	add	r3, pc, r3
   1760c:	ldr	r2, [pc, #36]	; 17638 <dim_leave_array@@Base+0x188>
   17610:	add	r3, r3, #100	; 0x64
   17614:	add	r1, pc, r1
   17618:	add	r0, pc, r0
   1761c:	bl	12660 <__assert_fail@plt>
   17620:	andeq	r5, r1, r0, asr #22
   17624:			; <UNDEFINED> instruction: 0x000001b4
   17628:	andeq	r0, r0, r4, ror #3
   1762c:	andeq	r3, r0, r8, asr #17
   17630:	andeq	r3, r0, r0, lsr r9
   17634:	andeq	r3, r0, r4, ror sl
   17638:	andeq	r0, r0, r3, asr #4

0001763c <dim_record_field_available@@Base>:
   1763c:	mov	r2, #0
   17640:	mov	r1, r2
   17644:	mov	r0, r2
   17648:	b	160b8 <print_debug_data@@Base+0x18c>

0001764c <codadump_filter_remove@@Base>:
   1764c:	push	{r4, lr}
   17650:	subs	r4, r0, #0
   17654:	beq	176c4 <codadump_filter_remove@@Base+0x78>
   17658:	ldr	r0, [r4]
   1765c:	cmp	r0, #0
   17660:	popeq	{r4, pc}
   17664:	ldr	r3, [r0, #8]
   17668:	cmp	r3, #0
   1766c:	beq	1767c <codadump_filter_remove@@Base+0x30>
   17670:	add	r0, r0, #8
   17674:	bl	1764c <codadump_filter_remove@@Base>
   17678:	ldr	r0, [r4]
   1767c:	ldr	r3, [r0, #4]
   17680:	cmp	r3, #0
   17684:	beq	17694 <codadump_filter_remove@@Base+0x48>
   17688:	add	r0, r0, #4
   1768c:	bl	1764c <codadump_filter_remove@@Base>
   17690:	ldr	r0, [r4]
   17694:	ldr	r3, [r0]
   17698:	cmp	r3, #0
   1769c:	beq	176b4 <codadump_filter_remove@@Base+0x68>
   176a0:	mov	r0, r3
   176a4:	bl	122a0 <free@plt>
   176a8:	ldr	r0, [r4]
   176ac:	mov	r3, #0
   176b0:	str	r3, [r0]
   176b4:	bl	122a0 <free@plt>
   176b8:	mov	r3, #0
   176bc:	str	r3, [r4]
   176c0:	pop	{r4, pc}
   176c4:	ldr	r3, [pc, #24]	; 176e4 <codadump_filter_remove@@Base+0x98>
   176c8:	ldr	r1, [pc, #24]	; 176e8 <codadump_filter_remove@@Base+0x9c>
   176cc:	ldr	r0, [pc, #24]	; 176ec <codadump_filter_remove@@Base+0xa0>
   176d0:	add	r3, pc, r3
   176d4:	mov	r2, #192	; 0xc0
   176d8:	add	r1, pc, r1
   176dc:	add	r0, pc, r0
   176e0:	bl	12660 <__assert_fail@plt>
   176e4:	ldrdeq	r3, [r0], -ip
   176e8:	andeq	r3, r0, r8, ror #20
   176ec:	andeq	r3, r0, r8, asr #21
   176f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   176f4:	subs	r4, r0, #0
   176f8:	sub	sp, sp, #8
   176fc:	beq	17948 <codadump_filter_remove@@Base+0x2fc>
   17700:	cmp	r1, #0
   17704:	mov	r6, r1
   17708:	beq	17924 <codadump_filter_remove@@Base+0x2d8>
   1770c:	cmp	r2, #0
   17710:	mov	r5, r2
   17714:	beq	1796c <codadump_filter_remove@@Base+0x320>
   17718:	ldrb	r3, [r4]
   1771c:	sub	r2, r3, #9
   17720:	cmp	r3, #32
   17724:	cmpne	r2, #1
   17728:	bhi	17740 <codadump_filter_remove@@Base+0xf4>
   1772c:	ldrb	r3, [r4, #1]!
   17730:	sub	r2, r3, #9
   17734:	cmp	r3, #32
   17738:	cmpne	r2, #1
   1773c:	bls	1772c <codadump_filter_remove@@Base+0xe0>
   17740:	cmp	r3, #0
   17744:	cmpne	r3, #59	; 0x3b
   17748:	movne	r2, #1
   1774c:	moveq	r2, #0
   17750:	and	r3, r3, #253	; 0xfd
   17754:	cmp	r3, #44	; 0x2c
   17758:	moveq	r3, #0
   1775c:	andne	r3, r2, #1
   17760:	cmp	r3, #0
   17764:	beq	1787c <codadump_filter_remove@@Base+0x230>
   17768:	add	r1, r4, #1
   1776c:	mov	r7, #0
   17770:	b	17778 <codadump_filter_remove@@Base+0x12c>
   17774:	mov	r7, r9
   17778:	ldrb	r3, [r1]
   1777c:	mov	r8, r1
   17780:	add	r9, r7, #1
   17784:	cmp	r3, #0
   17788:	cmpne	r3, #59	; 0x3b
   1778c:	movne	r2, #1
   17790:	moveq	r2, #0
   17794:	and	r3, r3, #253	; 0xfd
   17798:	cmp	r3, #44	; 0x2c
   1779c:	moveq	r3, #0
   177a0:	andne	r3, r2, #1
   177a4:	cmp	r3, #0
   177a8:	add	r1, r1, #1
   177ac:	bne	17774 <codadump_filter_remove@@Base+0x128>
   177b0:	mov	r0, #12
   177b4:	bl	123d8 <malloc@plt>
   177b8:	cmp	r0, #0
   177bc:	str	r0, [r6]
   177c0:	movne	sl, r0
   177c4:	beq	178f4 <codadump_filter_remove@@Base+0x2a8>
   177c8:	add	r7, r7, #2
   177cc:	mov	r0, r7
   177d0:	bl	123d8 <malloc@plt>
   177d4:	cmp	r0, #0
   177d8:	str	r0, [sl]
   177dc:	beq	178c0 <codadump_filter_remove@@Base+0x274>
   177e0:	mov	r2, r9
   177e4:	mov	r1, r4
   177e8:	bl	124d4 <strncpy@plt>
   177ec:	ldr	r1, [r6]
   177f0:	mov	r3, #0
   177f4:	sub	r2, r9, #1
   177f8:	str	r3, [r1, #4]
   177fc:	ldr	r1, [r6]
   17800:	str	r3, [r1, #8]
   17804:	ldr	r3, [r6]
   17808:	ldr	lr, [r3]
   1780c:	add	r1, lr, r2
   17810:	ldrb	r3, [lr, r2]
   17814:	sub	r0, r3, #9
   17818:	cmp	r3, #32
   1781c:	cmpne	r0, #1
   17820:	bls	17860 <codadump_filter_remove@@Base+0x214>
   17824:	mov	ip, r9
   17828:	mov	r3, #0
   1782c:	strb	r3, [lr, ip]
   17830:	ldrb	r3, [r8]
   17834:	cmp	r3, #46	; 0x2e
   17838:	beq	17888 <codadump_filter_remove@@Base+0x23c>
   1783c:	cmp	r3, #44	; 0x2c
   17840:	cmpne	r3, #59	; 0x3b
   17844:	addeq	r9, r9, #1
   17848:	addeq	r4, r4, r9
   1784c:	streq	r4, [r5]
   17850:	strne	r8, [r5]
   17854:	add	sp, sp, #8
   17858:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1785c:	sub	r2, r2, #1
   17860:	ldrb	r3, [r1, #-1]!
   17864:	mov	ip, r2
   17868:	sub	r0, r3, #9
   1786c:	cmp	r3, #32
   17870:	cmpne	r0, #1
   17874:	bls	1785c <codadump_filter_remove@@Base+0x210>
   17878:	b	17828 <codadump_filter_remove@@Base+0x1dc>
   1787c:	str	r3, [r6]
   17880:	add	sp, sp, #8
   17884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17888:	ldr	r1, [r6]
   1788c:	add	r0, r9, #1
   17890:	add	r0, r4, r0
   17894:	mov	r2, r5
   17898:	add	r1, r1, #4
   1789c:	bl	176f0 <codadump_filter_remove@@Base+0xa4>
   178a0:	ldr	r3, [r6]
   178a4:	ldr	r3, [r3, #4]
   178a8:	cmp	r3, #0
   178ac:	bne	17854 <codadump_filter_remove@@Base+0x208>
   178b0:	mov	r0, r6
   178b4:	add	sp, sp, #8
   178b8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   178bc:	b	1764c <codadump_filter_remove@@Base>
   178c0:	mov	r3, #76	; 0x4c
   178c4:	str	r3, [sp]
   178c8:	ldr	r1, [pc, #192]	; 17990 <codadump_filter_remove@@Base+0x344>
   178cc:	ldr	r3, [pc, #192]	; 17994 <codadump_filter_remove@@Base+0x348>
   178d0:	mvn	r0, #0
   178d4:	add	r3, pc, r3
   178d8:	mov	r2, r7
   178dc:	add	r1, pc, r1
   178e0:	bl	12258 <coda_set_error@plt>
   178e4:	bl	1a974 <handle_coda_error@@Base>
   178e8:	ldr	r3, [r6]
   178ec:	ldr	r0, [r3]
   178f0:	b	177e0 <codadump_filter_remove@@Base+0x194>
   178f4:	mov	r3, #69	; 0x45
   178f8:	str	r3, [sp]
   178fc:	ldr	r1, [pc, #148]	; 17998 <codadump_filter_remove@@Base+0x34c>
   17900:	ldr	r3, [pc, #148]	; 1799c <codadump_filter_remove@@Base+0x350>
   17904:	mov	r2, #12
   17908:	add	r3, pc, r3
   1790c:	add	r1, pc, r1
   17910:	mvn	r0, #0
   17914:	bl	12258 <coda_set_error@plt>
   17918:	bl	1a974 <handle_coda_error@@Base>
   1791c:	ldr	sl, [r6]
   17920:	b	177c8 <codadump_filter_remove@@Base+0x17c>
   17924:	ldr	r3, [pc, #116]	; 179a0 <codadump_filter_remove@@Base+0x354>
   17928:	ldr	r1, [pc, #116]	; 179a4 <codadump_filter_remove@@Base+0x358>
   1792c:	ldr	r0, [pc, #116]	; 179a8 <codadump_filter_remove@@Base+0x35c>
   17930:	add	r3, pc, r3
   17934:	mov	r2, #45	; 0x2d
   17938:	add	r3, r3, #24
   1793c:	add	r1, pc, r1
   17940:	add	r0, pc, r0
   17944:	bl	12660 <__assert_fail@plt>
   17948:	ldr	r3, [pc, #92]	; 179ac <codadump_filter_remove@@Base+0x360>
   1794c:	ldr	r1, [pc, #92]	; 179b0 <codadump_filter_remove@@Base+0x364>
   17950:	ldr	r0, [pc, #92]	; 179b4 <codadump_filter_remove@@Base+0x368>
   17954:	add	r3, pc, r3
   17958:	mov	r2, #44	; 0x2c
   1795c:	add	r3, r3, #24
   17960:	add	r1, pc, r1
   17964:	add	r0, pc, r0
   17968:	bl	12660 <__assert_fail@plt>
   1796c:	ldr	r3, [pc, #68]	; 179b8 <codadump_filter_remove@@Base+0x36c>
   17970:	ldr	r1, [pc, #68]	; 179bc <codadump_filter_remove@@Base+0x370>
   17974:	ldr	r0, [pc, #68]	; 179c0 <codadump_filter_remove@@Base+0x374>
   17978:	add	r3, pc, r3
   1797c:	mov	r2, #46	; 0x2e
   17980:	add	r3, r3, #24
   17984:	add	r1, pc, r1
   17988:	add	r0, pc, r0
   1798c:	bl	12660 <__assert_fail@plt>
   17990:	strdeq	r3, [r0], -ip
   17994:	andeq	r3, r0, ip, ror #16
   17998:			; <UNDEFINED> instruction: 0x000033b8
   1799c:	andeq	r3, r0, r8, lsr r8
   179a0:	andeq	r3, r0, ip, ror r7
   179a4:	andeq	r3, r0, r4, lsl #16
   179a8:	andeq	r3, r0, r4, ror #16
   179ac:	andeq	r3, r0, r8, asr r7
   179b0:	andeq	r3, r0, r0, ror #15
   179b4:	andeq	r3, r0, r0, asr r8
   179b8:	andeq	r3, r0, r4, lsr r7
   179bc:			; <UNDEFINED> instruction: 0x000037bc
   179c0:	andeq	r3, r0, r0, asr #16
   179c4:	push	{r4, r5, r6, lr}
   179c8:	sub	sp, sp, #8
   179cc:	cmp	r0, #0
   179d0:	str	r1, [sp, #4]
   179d4:	beq	17a68 <codadump_filter_remove@@Base+0x41c>
   179d8:	subs	r5, r1, #0
   179dc:	beq	17a34 <codadump_filter_remove@@Base+0x3e8>
   179e0:	ldr	r4, [r0]
   179e4:	cmp	r4, #0
   179e8:	streq	r5, [r0]
   179ec:	beq	17a34 <codadump_filter_remove@@Base+0x3e8>
   179f0:	ldr	r1, [r5]
   179f4:	ldr	r0, [r4]
   179f8:	bl	12210 <strcmp@plt>
   179fc:	subs	r6, r0, #0
   17a00:	bne	17a3c <codadump_filter_remove@@Base+0x3f0>
   17a04:	ldr	r3, [r4, #4]
   17a08:	cmp	r3, #0
   17a0c:	beq	17a2c <codadump_filter_remove@@Base+0x3e0>
   17a10:	ldr	r1, [r5, #4]
   17a14:	add	r0, r4, #4
   17a18:	cmp	r1, #0
   17a1c:	beq	17a60 <codadump_filter_remove@@Base+0x414>
   17a20:	bl	179c4 <codadump_filter_remove@@Base+0x378>
   17a24:	ldr	r3, [sp, #4]
   17a28:	str	r6, [r3, #4]
   17a2c:	add	r0, sp, #4
   17a30:	bl	1764c <codadump_filter_remove@@Base>
   17a34:	add	sp, sp, #8
   17a38:	pop	{r4, r5, r6, pc}
   17a3c:	ldr	r3, [r4, #8]
   17a40:	cmp	r3, #0
   17a44:	streq	r5, [r4, #8]
   17a48:	beq	17a34 <codadump_filter_remove@@Base+0x3e8>
   17a4c:	mov	r1, r5
   17a50:	add	r0, r4, #8
   17a54:	bl	179c4 <codadump_filter_remove@@Base+0x378>
   17a58:	add	sp, sp, #8
   17a5c:	pop	{r4, r5, r6, pc}
   17a60:	bl	1764c <codadump_filter_remove@@Base>
   17a64:	b	17a2c <codadump_filter_remove@@Base+0x3e0>
   17a68:	ldr	r3, [pc, #28]	; 17a8c <codadump_filter_remove@@Base+0x440>
   17a6c:	ldr	r1, [pc, #28]	; 17a90 <codadump_filter_remove@@Base+0x444>
   17a70:	ldr	r0, [pc, #28]	; 17a94 <codadump_filter_remove@@Base+0x448>
   17a74:	add	r3, pc, r3
   17a78:	mov	r2, #117	; 0x75
   17a7c:	add	r3, r3, #40	; 0x28
   17a80:	add	r1, pc, r1
   17a84:	add	r0, pc, r0
   17a88:	bl	12660 <__assert_fail@plt>
   17a8c:	andeq	r3, r0, r8, lsr r6
   17a90:	andeq	r3, r0, r0, asr #13
   17a94:	andeq	r3, r0, r0, lsr #14

00017a98 <codadump_filter_create@@Base>:
   17a98:	push	{r4, r5, r6, r7, lr}
   17a9c:	sub	sp, sp, #20
   17aa0:	mov	r4, #0
   17aa4:	cmp	r0, #0
   17aa8:	str	r0, [sp, #12]
   17aac:	str	r4, [sp, #4]
   17ab0:	str	r4, [sp, #8]
   17ab4:	beq	17b10 <codadump_filter_create@@Base+0x78>
   17ab8:	ldrb	r3, [r0]
   17abc:	cmp	r3, r4
   17ac0:	beq	17b24 <codadump_filter_create@@Base+0x8c>
   17ac4:	add	r7, sp, #12
   17ac8:	add	r6, sp, #8
   17acc:	add	r5, sp, #4
   17ad0:	b	17aec <codadump_filter_create@@Base+0x54>
   17ad4:	bl	179c4 <codadump_filter_remove@@Base+0x378>
   17ad8:	ldr	r0, [sp, #12]
   17adc:	str	r4, [sp, #8]
   17ae0:	ldrb	r3, [r0]
   17ae4:	cmp	r3, #0
   17ae8:	beq	17b18 <codadump_filter_create@@Base+0x80>
   17aec:	mov	r1, r6
   17af0:	mov	r2, r7
   17af4:	bl	176f0 <codadump_filter_remove@@Base+0xa4>
   17af8:	ldr	r3, [sp, #8]
   17afc:	mov	r0, r5
   17b00:	subs	r1, r3, #0
   17b04:	bne	17ad4 <codadump_filter_create@@Base+0x3c>
   17b08:	bl	1764c <codadump_filter_remove@@Base>
   17b0c:	ldr	r0, [sp, #4]
   17b10:	add	sp, sp, #20
   17b14:	pop	{r4, r5, r6, r7, pc}
   17b18:	ldr	r0, [sp, #4]
   17b1c:	add	sp, sp, #20
   17b20:	pop	{r4, r5, r6, r7, pc}
   17b24:	mov	r0, r3
   17b28:	b	17b10 <codadump_filter_create@@Base+0x78>

00017b2c <codadump_filter_get_fieldname@@Base>:
   17b2c:	cmp	r0, #0
   17b30:	beq	17b3c <codadump_filter_get_fieldname@@Base+0x10>
   17b34:	ldr	r0, [r0]
   17b38:	bx	lr
   17b3c:	ldr	r3, [pc, #32]	; 17b64 <codadump_filter_get_fieldname@@Base+0x38>
   17b40:	ldr	r1, [pc, #32]	; 17b68 <codadump_filter_get_fieldname@@Base+0x3c>
   17b44:	ldr	r0, [pc, #32]	; 17b6c <codadump_filter_get_fieldname@@Base+0x40>
   17b48:	add	r3, pc, r3
   17b4c:	push	{r4, lr}
   17b50:	mov	r2, #216	; 0xd8
   17b54:	add	r3, r3, #52	; 0x34
   17b58:	add	r1, pc, r1
   17b5c:	add	r0, pc, r0
   17b60:	bl	12660 <__assert_fail@plt>
   17b64:	andeq	r3, r0, r4, ror #10
   17b68:	andeq	r3, r0, r8, ror #11
   17b6c:	andeq	r3, r0, r8, asr #12

00017b70 <codadump_filter_get_subfilter@@Base>:
   17b70:	cmp	r0, #0
   17b74:	beq	17b80 <codadump_filter_get_subfilter@@Base+0x10>
   17b78:	ldr	r0, [r0, #4]
   17b7c:	bx	lr
   17b80:	ldr	r3, [pc, #32]	; 17ba8 <codadump_filter_get_subfilter@@Base+0x38>
   17b84:	ldr	r1, [pc, #32]	; 17bac <codadump_filter_get_subfilter@@Base+0x3c>
   17b88:	ldr	r0, [pc, #32]	; 17bb0 <codadump_filter_get_subfilter@@Base+0x40>
   17b8c:	add	r3, pc, r3
   17b90:	push	{r4, lr}
   17b94:	mov	r2, #223	; 0xdf
   17b98:	add	r3, r3, #84	; 0x54
   17b9c:	add	r1, pc, r1
   17ba0:	add	r0, pc, r0
   17ba4:	bl	12660 <__assert_fail@plt>
   17ba8:	andeq	r3, r0, r0, lsr #10
   17bac:	andeq	r3, r0, r4, lsr #11
   17bb0:	andeq	r3, r0, r4, lsl #12

00017bb4 <codadump_filter_get_next_filter@@Base>:
   17bb4:	cmp	r0, #0
   17bb8:	beq	17bc4 <codadump_filter_get_next_filter@@Base+0x10>
   17bbc:	ldr	r0, [r0, #8]
   17bc0:	bx	lr
   17bc4:	ldr	r3, [pc, #32]	; 17bec <codadump_filter_get_next_filter@@Base+0x38>
   17bc8:	ldr	r1, [pc, #32]	; 17bf0 <codadump_filter_get_next_filter@@Base+0x3c>
   17bcc:	ldr	r0, [pc, #32]	; 17bf4 <codadump_filter_get_next_filter@@Base+0x40>
   17bd0:	add	r3, pc, r3
   17bd4:	push	{r4, lr}
   17bd8:	mov	r2, #230	; 0xe6
   17bdc:	add	r3, r3, #116	; 0x74
   17be0:	add	r1, pc, r1
   17be4:	add	r0, pc, r0
   17be8:	bl	12660 <__assert_fail@plt>
   17bec:	ldrdeq	r3, [r0], -ip
   17bf0:	andeq	r3, r0, r0, ror #10
   17bf4:	andeq	r3, r0, r0, asr #11
   17bf8:	push	{r0, r1, r2, r3}
   17bfc:	ldr	r3, [pc, #52]	; 17c38 <codadump_filter_get_next_filter@@Base+0x84>
   17c00:	ldr	r1, [pc, #52]	; 17c3c <codadump_filter_get_next_filter@@Base+0x88>
   17c04:	push	{lr}		; (str lr, [sp, #-4]!)
   17c08:	add	r3, pc, r3
   17c0c:	sub	sp, sp, #12
   17c10:	add	r2, sp, #20
   17c14:	str	r2, [sp, #4]
   17c18:	ldr	r0, [r3, r1]
   17c1c:	ldr	r1, [sp, #16]
   17c20:	ldr	r0, [r0]
   17c24:	bl	12564 <vfprintf@plt>
   17c28:	add	sp, sp, #12
   17c2c:	pop	{lr}		; (ldr lr, [sp], #4)
   17c30:	add	sp, sp, #16
   17c34:	bx	lr
   17c38:	strdeq	r5, [r1], -r0
   17c3c:			; <UNDEFINED> instruction: 0x000001bc
   17c40:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c44:	subs	r4, r1, #0
   17c48:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c4c:	ldr	r8, [pc, #248]	; 17d4c <codadump_filter_get_next_filter@@Base+0x198>
   17c50:	ldr	sl, [pc, #248]	; 17d50 <codadump_filter_get_next_filter@@Base+0x19c>
   17c54:	ldr	r9, [pc, #248]	; 17d54 <codadump_filter_get_next_filter@@Base+0x1a0>
   17c58:	ldr	r7, [pc, #248]	; 17d58 <codadump_filter_get_next_filter@@Base+0x1a4>
   17c5c:	ldr	r6, [pc, #248]	; 17d5c <codadump_filter_get_next_filter@@Base+0x1a8>
   17c60:	ldr	r5, [pc, #248]	; 17d60 <codadump_filter_get_next_filter@@Base+0x1ac>
   17c64:	mov	fp, r0
   17c68:	add	r8, pc, r8
   17c6c:	add	sl, pc, sl
   17c70:	add	r9, pc, r9
   17c74:	add	r7, pc, r7
   17c78:	add	r6, pc, r6
   17c7c:	add	r5, pc, r5
   17c80:	add	r4, r0, r4
   17c84:	b	17cbc <codadump_filter_get_next_filter@@Base+0x108>
   17c88:	cmp	r1, #9
   17c8c:	beq	17d3c <codadump_filter_get_next_filter@@Base+0x188>
   17c90:	cmp	r1, #10
   17c94:	beq	17d2c <codadump_filter_get_next_filter@@Base+0x178>
   17c98:	cmp	r1, #8
   17c9c:	beq	17d1c <codadump_filter_get_next_filter@@Base+0x168>
   17ca0:	sub	r3, r1, #32
   17ca4:	cmp	r3, #94	; 0x5e
   17ca8:	movls	r0, r9
   17cac:	movhi	r0, sl
   17cb0:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17cb4:	cmp	fp, r4
   17cb8:	beq	17cf4 <codadump_filter_get_next_filter@@Base+0x140>
   17cbc:	ldrb	r1, [fp], #1
   17cc0:	cmp	r1, #12
   17cc4:	beq	17cf8 <codadump_filter_get_next_filter@@Base+0x144>
   17cc8:	bls	17c88 <codadump_filter_get_next_filter@@Base+0xd4>
   17ccc:	cmp	r1, #34	; 0x22
   17cd0:	beq	17d10 <codadump_filter_get_next_filter@@Base+0x15c>
   17cd4:	cmp	r1, #92	; 0x5c
   17cd8:	beq	17d04 <codadump_filter_get_next_filter@@Base+0x150>
   17cdc:	cmp	r1, #13
   17ce0:	bne	17ca0 <codadump_filter_get_next_filter@@Base+0xec>
   17ce4:	mov	r0, r5
   17ce8:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17cec:	cmp	fp, r4
   17cf0:	bne	17cbc <codadump_filter_get_next_filter@@Base+0x108>
   17cf4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cf8:	mov	r0, r8
   17cfc:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17d00:	b	17cb4 <codadump_filter_get_next_filter@@Base+0x100>
   17d04:	mov	r0, r6
   17d08:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17d0c:	b	17cb4 <codadump_filter_get_next_filter@@Base+0x100>
   17d10:	mov	r0, r7
   17d14:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17d18:	b	17cb4 <codadump_filter_get_next_filter@@Base+0x100>
   17d1c:	ldr	r0, [pc, #64]	; 17d64 <codadump_filter_get_next_filter@@Base+0x1b0>
   17d20:	add	r0, pc, r0
   17d24:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17d28:	b	17cb4 <codadump_filter_get_next_filter@@Base+0x100>
   17d2c:	ldr	r0, [pc, #52]	; 17d68 <codadump_filter_get_next_filter@@Base+0x1b4>
   17d30:	add	r0, pc, r0
   17d34:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17d38:	b	17cb4 <codadump_filter_get_next_filter@@Base+0x100>
   17d3c:	ldr	r0, [pc, #40]	; 17d6c <codadump_filter_get_next_filter@@Base+0x1b8>
   17d40:	add	r0, pc, r0
   17d44:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17d48:	b	17cb4 <codadump_filter_get_next_filter@@Base+0x100>
   17d4c:	strheq	r3, [r0], -r0
   17d50:	andeq	r3, r0, r4, lsr #11
   17d54:	andeq	r3, r0, r4, lsr #2
   17d58:	muleq	r0, r8, r5
   17d5c:	andeq	r3, r0, r8, lsr #1
   17d60:	andeq	r3, r0, r0, lsr #1
   17d64:	andeq	r2, r0, r8, ror #31
   17d68:	andeq	r2, r0, r0, ror #31
   17d6c:	andeq	r2, r0, ip, asr #31
   17d70:	ldr	r3, [pc, #2232]	; 18630 <codadump_filter_get_next_filter@@Base+0xa7c>
   17d74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d78:	add	r3, pc, r3
   17d7c:	mov	r2, #0
   17d80:	ldr	r3, [r3]
   17d84:	sub	sp, sp, #72	; 0x48
   17d88:	cmp	r3, r2
   17d8c:	str	r2, [sp, #12]
   17d90:	mov	r4, r0
   17d94:	bne	1807c <codadump_filter_get_next_filter@@Base+0x4c8>
   17d98:	add	r1, sp, #8
   17d9c:	mov	r0, r4
   17da0:	bl	12330 <coda_cursor_get_type_class@plt>
   17da4:	cmp	r0, #0
   17da8:	bne	18074 <codadump_filter_get_next_filter@@Base+0x4c0>
   17dac:	ldr	r3, [sp, #8]
   17db0:	cmp	r3, #6
   17db4:	addls	pc, pc, r3, lsl #2
   17db8:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   17dbc:	b	17f8c <codadump_filter_get_next_filter@@Base+0x3d8>
   17dc0:	b	17ed0 <codadump_filter_get_next_filter@@Base+0x31c>
   17dc4:	b	17e70 <codadump_filter_get_next_filter@@Base+0x2bc>
   17dc8:	b	17e70 <codadump_filter_get_next_filter@@Base+0x2bc>
   17dcc:	b	17e70 <codadump_filter_get_next_filter@@Base+0x2bc>
   17dd0:	b	17e70 <codadump_filter_get_next_filter@@Base+0x2bc>
   17dd4:	b	17e3c <codadump_filter_get_next_filter@@Base+0x288>
   17dd8:	mov	r0, r4
   17ddc:	add	r1, sp, #32
   17de0:	bl	12450 <coda_cursor_read_double@plt>
   17de4:	cmp	r0, #0
   17de8:	bne	1851c <codadump_filter_get_next_filter@@Base+0x968>
   17dec:	vldr	d0, [sp, #32]
   17df0:	bl	1245c <coda_isNaN@plt>
   17df4:	cmp	r0, #0
   17df8:	bne	17e0c <codadump_filter_get_next_filter@@Base+0x258>
   17dfc:	vldr	d0, [sp, #32]
   17e00:	bl	12300 <coda_isInf@plt>
   17e04:	cmp	r0, #0
   17e08:	beq	1856c <codadump_filter_get_next_filter@@Base+0x9b8>
   17e0c:	ldr	r0, [pc, #2080]	; 18634 <codadump_filter_get_next_filter@@Base+0xa80>
   17e10:	ldrd	r2, [sp, #32]
   17e14:	add	r0, pc, r0
   17e18:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17e1c:	ldr	r3, [sp, #12]
   17e20:	cmp	r3, #0
   17e24:	beq	17e34 <codadump_filter_get_next_filter@@Base+0x280>
   17e28:	ldr	r0, [pc, #2056]	; 18638 <codadump_filter_get_next_filter@@Base+0xa84>
   17e2c:	add	r0, pc, r0
   17e30:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17e34:	add	sp, sp, #72	; 0x48
   17e38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e3c:	add	r1, sp, #28
   17e40:	mov	r0, r4
   17e44:	bl	1236c <coda_cursor_get_special_type@plt>
   17e48:	cmp	r0, #0
   17e4c:	bne	180ec <codadump_filter_get_next_filter@@Base+0x538>
   17e50:	ldr	r3, [sp, #28]
   17e54:	cmp	r3, #3
   17e58:	addls	pc, pc, r3, lsl #2
   17e5c:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   17e60:	b	181d0 <codadump_filter_get_next_filter@@Base+0x61c>
   17e64:	b	181e0 <codadump_filter_get_next_filter@@Base+0x62c>
   17e68:	b	17dd8 <codadump_filter_get_next_filter@@Base+0x224>
   17e6c:	b	18208 <codadump_filter_get_next_filter@@Base+0x654>
   17e70:	add	r1, sp, #28
   17e74:	mov	r0, r4
   17e78:	bl	123cc <coda_cursor_get_read_type@plt>
   17e7c:	cmp	r0, #0
   17e80:	bne	180e4 <codadump_filter_get_next_filter@@Base+0x530>
   17e84:	ldr	r3, [sp, #28]
   17e88:	add	r3, r3, #1
   17e8c:	cmp	r3, #13
   17e90:	addls	pc, pc, r3, lsl #2
   17e94:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   17e98:	b	18380 <codadump_filter_get_next_filter@@Base+0x7cc>
   17e9c:	b	18390 <codadump_filter_get_next_filter@@Base+0x7dc>
   17ea0:	b	1823c <codadump_filter_get_next_filter@@Base+0x688>
   17ea4:	b	18390 <codadump_filter_get_next_filter@@Base+0x7dc>
   17ea8:	b	1823c <codadump_filter_get_next_filter@@Base+0x688>
   17eac:	b	18390 <codadump_filter_get_next_filter@@Base+0x7dc>
   17eb0:	b	1823c <codadump_filter_get_next_filter@@Base+0x688>
   17eb4:	b	18264 <codadump_filter_get_next_filter@@Base+0x6b0>
   17eb8:	b	18314 <codadump_filter_get_next_filter@@Base+0x760>
   17ebc:	b	1834c <codadump_filter_get_next_filter@@Base+0x798>
   17ec0:	b	1834c <codadump_filter_get_next_filter@@Base+0x798>
   17ec4:	b	183b8 <codadump_filter_get_next_filter@@Base+0x804>
   17ec8:	b	1829c <codadump_filter_get_next_filter@@Base+0x6e8>
   17ecc:	b	183f8 <codadump_filter_get_next_filter@@Base+0x844>
   17ed0:	ldr	r0, [pc, #1892]	; 1863c <codadump_filter_get_next_filter@@Base+0xa88>
   17ed4:	add	r5, sp, #40	; 0x28
   17ed8:	add	r0, pc, r0
   17edc:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17ee0:	mov	r2, r5
   17ee4:	add	r1, sp, #32
   17ee8:	mov	r0, r4
   17eec:	bl	12534 <coda_cursor_get_array_dim@plt>
   17ef0:	cmp	r0, #0
   17ef4:	bne	180dc <codadump_filter_get_next_filter@@Base+0x528>
   17ef8:	ldr	r3, [sp, #32]
   17efc:	cmp	r3, #0
   17f00:	blt	18064 <codadump_filter_get_next_filter@@Base+0x4b0>
   17f04:	beq	18508 <codadump_filter_get_next_filter@@Base+0x954>
   17f08:	mov	r2, r5
   17f0c:	add	r3, r5, r3, lsl #2
   17f10:	mov	r5, #1
   17f14:	ldr	r1, [r2], #4
   17f18:	cmp	r2, r3
   17f1c:	mul	r5, r1, r5
   17f20:	bne	17f14 <codadump_filter_get_next_filter@@Base+0x360>
   17f24:	cmp	r5, #0
   17f28:	subgt	r7, r5, #1
   17f2c:	ble	18064 <codadump_filter_get_next_filter@@Base+0x4b0>
   17f30:	mov	r0, r4
   17f34:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   17f38:	cmp	r0, #0
   17f3c:	bne	18500 <codadump_filter_get_next_filter@@Base+0x94c>
   17f40:	ldr	r8, [pc, #1784]	; 18640 <codadump_filter_get_next_filter@@Base+0xa8c>
   17f44:	mov	r6, #0
   17f48:	add	r8, pc, r8
   17f4c:	b	17f58 <codadump_filter_get_next_filter@@Base+0x3a4>
   17f50:	cmp	r5, r6
   17f54:	ble	1805c <codadump_filter_get_next_filter@@Base+0x4a8>
   17f58:	mov	r0, r4
   17f5c:	bl	17d70 <codadump_filter_get_next_filter@@Base+0x1bc>
   17f60:	cmp	r6, r7
   17f64:	mov	r0, r8
   17f68:	add	r6, r6, #1
   17f6c:	bge	17f50 <codadump_filter_get_next_filter@@Base+0x39c>
   17f70:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17f74:	mov	r0, r4
   17f78:	bl	12474 <coda_cursor_goto_next_array_element@plt>
   17f7c:	cmp	r0, #0
   17f80:	beq	17f50 <codadump_filter_get_next_filter@@Base+0x39c>
   17f84:	bl	1a974 <handle_coda_error@@Base>
   17f88:	b	17f50 <codadump_filter_get_next_filter@@Base+0x39c>
   17f8c:	ldr	r0, [pc, #1712]	; 18644 <codadump_filter_get_next_filter@@Base+0xa90>
   17f90:	add	r0, pc, r0
   17f94:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   17f98:	add	r1, sp, #16
   17f9c:	mov	r0, r4
   17fa0:	bl	12288 <coda_cursor_get_num_elements@plt>
   17fa4:	cmp	r0, #0
   17fa8:	bne	180d4 <codadump_filter_get_next_filter@@Base+0x520>
   17fac:	ldr	r3, [sp, #16]
   17fb0:	cmp	r3, #0
   17fb4:	ble	1804c <codadump_filter_get_next_filter@@Base+0x498>
   17fb8:	add	r1, sp, #20
   17fbc:	mov	r0, r4
   17fc0:	bl	122e8 <coda_cursor_get_type@plt>
   17fc4:	cmp	r0, #0
   17fc8:	bne	184f0 <codadump_filter_get_next_filter@@Base+0x93c>
   17fcc:	add	r1, sp, #24
   17fd0:	ldr	r0, [sp, #20]
   17fd4:	bl	124ec <coda_type_get_record_union_status@plt>
   17fd8:	cmp	r0, #0
   17fdc:	bne	184e8 <codadump_filter_get_next_filter@@Base+0x934>
   17fe0:	ldr	r3, [sp, #24]
   17fe4:	cmp	r3, #0
   17fe8:	beq	180fc <codadump_filter_get_next_filter@@Base+0x548>
   17fec:	add	r1, sp, #28
   17ff0:	mov	r0, r4
   17ff4:	bl	125dc <coda_cursor_get_available_union_field_index@plt>
   17ff8:	cmp	r0, #0
   17ffc:	bne	18498 <codadump_filter_get_next_filter@@Base+0x8e4>
   18000:	add	r2, sp, #40	; 0x28
   18004:	ldr	r1, [sp, #28]
   18008:	ldr	r0, [sp, #20]
   1800c:	bl	12624 <coda_type_get_record_field_name@plt>
   18010:	cmp	r0, #0
   18014:	bne	18490 <codadump_filter_get_next_filter@@Base+0x8dc>
   18018:	ldr	r1, [sp, #28]
   1801c:	mov	r0, r4
   18020:	bl	123a8 <coda_cursor_goto_record_field_by_index@plt>
   18024:	cmp	r0, #0
   18028:	bne	184a0 <codadump_filter_get_next_filter@@Base+0x8ec>
   1802c:	ldr	r0, [pc, #1556]	; 18648 <codadump_filter_get_next_filter@@Base+0xa94>
   18030:	ldr	r1, [sp, #40]	; 0x28
   18034:	add	r0, pc, r0
   18038:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   1803c:	mov	r0, r4
   18040:	bl	17d70 <codadump_filter_get_next_filter@@Base+0x1bc>
   18044:	mov	r0, r4
   18048:	bl	12408 <coda_cursor_goto_parent@plt>
   1804c:	ldr	r0, [pc, #1528]	; 1864c <codadump_filter_get_next_filter@@Base+0xa98>
   18050:	add	r0, pc, r0
   18054:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18058:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   1805c:	mov	r0, r4
   18060:	bl	12408 <coda_cursor_goto_parent@plt>
   18064:	ldr	r0, [pc, #1508]	; 18650 <codadump_filter_get_next_filter@@Base+0xa9c>
   18068:	add	r0, pc, r0
   1806c:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18070:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18074:	bl	1a974 <handle_coda_error@@Base>
   18078:	b	17dac <codadump_filter_get_next_filter@@Base+0x1f8>
   1807c:	add	r1, sp, #12
   18080:	bl	12324 <coda_cursor_has_attributes@plt>
   18084:	cmp	r0, #0
   18088:	bne	180f4 <codadump_filter_get_next_filter@@Base+0x540>
   1808c:	ldr	r3, [sp, #12]
   18090:	cmp	r3, #0
   18094:	beq	17d98 <codadump_filter_get_next_filter@@Base+0x1e4>
   18098:	ldr	r0, [pc, #1460]	; 18654 <codadump_filter_get_next_filter@@Base+0xaa0>
   1809c:	add	r0, pc, r0
   180a0:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   180a4:	mov	r0, r4
   180a8:	bl	124a4 <coda_cursor_goto_attributes@plt>
   180ac:	cmp	r0, #0
   180b0:	bne	184f8 <codadump_filter_get_next_filter@@Base+0x944>
   180b4:	mov	r0, r4
   180b8:	bl	17d70 <codadump_filter_get_next_filter@@Base+0x1bc>
   180bc:	mov	r0, r4
   180c0:	bl	12408 <coda_cursor_goto_parent@plt>
   180c4:	ldr	r0, [pc, #1420]	; 18658 <codadump_filter_get_next_filter@@Base+0xaa4>
   180c8:	add	r0, pc, r0
   180cc:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   180d0:	b	17d98 <codadump_filter_get_next_filter@@Base+0x1e4>
   180d4:	bl	1a974 <handle_coda_error@@Base>
   180d8:	b	17fac <codadump_filter_get_next_filter@@Base+0x3f8>
   180dc:	bl	1a974 <handle_coda_error@@Base>
   180e0:	b	17ef8 <codadump_filter_get_next_filter@@Base+0x344>
   180e4:	bl	1a974 <handle_coda_error@@Base>
   180e8:	b	17e84 <codadump_filter_get_next_filter@@Base+0x2d0>
   180ec:	bl	1a974 <handle_coda_error@@Base>
   180f0:	b	17e50 <codadump_filter_get_next_filter@@Base+0x29c>
   180f4:	bl	1a974 <handle_coda_error@@Base>
   180f8:	b	1808c <codadump_filter_get_next_filter@@Base+0x4d8>
   180fc:	mov	r0, r4
   18100:	bl	1239c <coda_cursor_goto_first_record_field@plt>
   18104:	cmp	r0, #0
   18108:	bne	184a8 <codadump_filter_get_next_filter@@Base+0x8f4>
   1810c:	ldr	r3, [sp, #16]
   18110:	mov	r1, #0
   18114:	cmp	r3, r1
   18118:	str	r1, [sp, #28]
   1811c:	ble	181c4 <codadump_filter_get_next_filter@@Base+0x610>
   18120:	ldr	r7, [pc, #1332]	; 1865c <codadump_filter_get_next_filter@@Base+0xaa8>
   18124:	ldr	r8, [pc, #1332]	; 18660 <codadump_filter_get_next_filter@@Base+0xaac>
   18128:	add	r7, pc, r7
   1812c:	add	r8, pc, r8
   18130:	mov	r6, #1
   18134:	add	r5, sp, #40	; 0x28
   18138:	add	r9, sp, #32
   1813c:	b	181a8 <codadump_filter_get_next_filter@@Base+0x5f4>
   18140:	ldr	sl, [sp, #40]	; 0x28
   18144:	cmp	sl, #0
   18148:	bne	18184 <codadump_filter_get_next_filter@@Base+0x5d0>
   1814c:	cmp	r6, #0
   18150:	beq	184d4 <codadump_filter_get_next_filter@@Base+0x920>
   18154:	mov	r2, r9
   18158:	ldr	r1, [sp, #28]
   1815c:	ldr	r0, [sp, #20]
   18160:	bl	12624 <coda_type_get_record_field_name@plt>
   18164:	cmp	r0, #0
   18168:	bne	184cc <codadump_filter_get_next_filter@@Base+0x918>
   1816c:	ldr	r1, [sp, #32]
   18170:	mov	r0, r7
   18174:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18178:	mov	r0, r4
   1817c:	bl	17d70 <codadump_filter_get_next_filter@@Base+0x1bc>
   18180:	mov	r6, sl
   18184:	ldr	r3, [sp, #16]
   18188:	ldr	r1, [sp, #28]
   1818c:	sub	r2, r3, #1
   18190:	cmp	r2, r1
   18194:	bgt	184b0 <codadump_filter_get_next_filter@@Base+0x8fc>
   18198:	add	r1, r1, #1
   1819c:	cmp	r1, r3
   181a0:	str	r1, [sp, #28]
   181a4:	bge	181c4 <codadump_filter_get_next_filter@@Base+0x610>
   181a8:	mov	r2, r5
   181ac:	ldr	r0, [sp, #20]
   181b0:	bl	12228 <coda_type_get_record_field_hidden_status@plt>
   181b4:	cmp	r0, #0
   181b8:	beq	18140 <codadump_filter_get_next_filter@@Base+0x58c>
   181bc:	bl	1a974 <handle_coda_error@@Base>
   181c0:	b	18140 <codadump_filter_get_next_filter@@Base+0x58c>
   181c4:	mov	r0, r4
   181c8:	bl	12408 <coda_cursor_goto_parent@plt>
   181cc:	b	1804c <codadump_filter_get_next_filter@@Base+0x498>
   181d0:	ldr	r0, [pc, #1164]	; 18664 <codadump_filter_get_next_filter@@Base+0xab0>
   181d4:	add	r0, pc, r0
   181d8:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   181dc:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   181e0:	mov	r0, r4
   181e4:	add	r1, sp, #40	; 0x28
   181e8:	bl	12450 <coda_cursor_read_double@plt>
   181ec:	cmp	r0, #0
   181f0:	bne	18524 <codadump_filter_get_next_filter@@Base+0x970>
   181f4:	ldr	r0, [pc, #1132]	; 18668 <codadump_filter_get_next_filter@@Base+0xab4>
   181f8:	ldrd	r2, [sp, #40]	; 0x28
   181fc:	add	r0, pc, r0
   18200:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18204:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18208:	mov	r0, r4
   1820c:	add	r2, sp, #40	; 0x28
   18210:	add	r1, sp, #32
   18214:	bl	124f8 <coda_cursor_read_complex_double_split@plt>
   18218:	cmp	r0, #0
   1821c:	bne	18514 <codadump_filter_get_next_filter@@Base+0x960>
   18220:	ldrd	r4, [sp, #40]	; 0x28
   18224:	ldr	r0, [pc, #1088]	; 1866c <codadump_filter_get_next_filter@@Base+0xab8>
   18228:	ldrd	r2, [sp, #32]
   1822c:	strd	r4, [sp]
   18230:	add	r0, pc, r0
   18234:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18238:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   1823c:	mov	r0, r4
   18240:	add	r1, sp, #40	; 0x28
   18244:	bl	122c4 <coda_cursor_read_uint32@plt>
   18248:	cmp	r0, #0
   1824c:	bne	1855c <codadump_filter_get_next_filter@@Base+0x9a8>
   18250:	ldr	r0, [pc, #1048]	; 18670 <codadump_filter_get_next_filter@@Base+0xabc>
   18254:	ldr	r1, [sp, #40]	; 0x28
   18258:	add	r0, pc, r0
   1825c:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18260:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18264:	mov	r0, r4
   18268:	add	r1, sp, #32
   1826c:	bl	12558 <coda_cursor_read_int64@plt>
   18270:	cmp	r0, #0
   18274:	bne	18544 <codadump_filter_get_next_filter@@Base+0x990>
   18278:	add	r4, sp, #40	; 0x28
   1827c:	ldrd	r0, [sp, #32]
   18280:	mov	r2, r4
   18284:	bl	12654 <coda_str64@plt>
   18288:	ldr	r0, [pc, #996]	; 18674 <codadump_filter_get_next_filter@@Base+0xac0>
   1828c:	mov	r1, r4
   18290:	add	r0, pc, r0
   18294:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18298:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   1829c:	add	r1, sp, #40	; 0x28
   182a0:	mov	r0, r4
   182a4:	bl	12438 <coda_cursor_get_string_length@plt>
   182a8:	cmp	r0, #0
   182ac:	bne	18564 <codadump_filter_get_next_filter@@Base+0x9b0>
   182b0:	ldr	r0, [sp, #40]	; 0x28
   182b4:	add	r0, r0, #1
   182b8:	bl	123d8 <malloc@plt>
   182bc:	subs	r5, r0, #0
   182c0:	beq	185d0 <codadump_filter_get_next_filter@@Base+0xa1c>
   182c4:	ldr	r2, [sp, #40]	; 0x28
   182c8:	mov	r0, r4
   182cc:	add	r2, r2, #1
   182d0:	mov	r1, r5
   182d4:	bl	123fc <coda_cursor_read_string@plt>
   182d8:	cmp	r0, #0
   182dc:	bne	18554 <codadump_filter_get_next_filter@@Base+0x9a0>
   182e0:	ldr	r4, [pc, #912]	; 18678 <codadump_filter_get_next_filter@@Base+0xac4>
   182e4:	add	r4, pc, r4
   182e8:	mov	r0, r4
   182ec:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   182f0:	ldr	r1, [sp, #40]	; 0x28
   182f4:	mov	r0, r5
   182f8:	bl	17c40 <codadump_filter_get_next_filter@@Base+0x8c>
   182fc:	mov	r0, r4
   18300:	ldr	r1, [sp, #40]	; 0x28
   18304:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18308:	mov	r0, r5
   1830c:	bl	122a0 <free@plt>
   18310:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18314:	mov	r0, r4
   18318:	add	r1, sp, #32
   1831c:	bl	12444 <coda_cursor_read_uint64@plt>
   18320:	cmp	r0, #0
   18324:	bne	1852c <codadump_filter_get_next_filter@@Base+0x978>
   18328:	add	r4, sp, #40	; 0x28
   1832c:	ldrd	r0, [sp, #32]
   18330:	mov	r2, r4
   18334:	bl	12294 <coda_str64u@plt>
   18338:	ldr	r0, [pc, #828]	; 1867c <codadump_filter_get_next_filter@@Base+0xac8>
   1833c:	mov	r1, r4
   18340:	add	r0, pc, r0
   18344:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18348:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   1834c:	mov	r0, r4
   18350:	add	r1, sp, #40	; 0x28
   18354:	bl	12450 <coda_cursor_read_double@plt>
   18358:	cmp	r0, #0
   1835c:	bne	1853c <codadump_filter_get_next_filter@@Base+0x988>
   18360:	ldr	r3, [sp, #28]
   18364:	cmp	r3, #8
   18368:	ldrd	r2, [sp, #40]	; 0x28
   1836c:	beq	185ac <codadump_filter_get_next_filter@@Base+0x9f8>
   18370:	ldr	r0, [pc, #776]	; 18680 <codadump_filter_get_next_filter@@Base+0xacc>
   18374:	add	r0, pc, r0
   18378:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   1837c:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18380:	ldr	r0, [pc, #764]	; 18684 <codadump_filter_get_next_filter@@Base+0xad0>
   18384:	add	r0, pc, r0
   18388:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   1838c:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18390:	mov	r0, r4
   18394:	add	r1, sp, #40	; 0x28
   18398:	bl	125e8 <coda_cursor_read_int32@plt>
   1839c:	cmp	r0, #0
   183a0:	bne	18534 <codadump_filter_get_next_filter@@Base+0x980>
   183a4:	ldr	r0, [pc, #732]	; 18688 <codadump_filter_get_next_filter@@Base+0xad4>
   183a8:	ldr	r1, [sp, #40]	; 0x28
   183ac:	add	r0, pc, r0
   183b0:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   183b4:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   183b8:	add	r5, sp, #40	; 0x28
   183bc:	mov	r0, r4
   183c0:	mov	r1, r5
   183c4:	bl	124b0 <coda_cursor_read_char@plt>
   183c8:	cmp	r0, #0
   183cc:	bne	1854c <codadump_filter_get_next_filter@@Base+0x998>
   183d0:	ldr	r4, [pc, #692]	; 1868c <codadump_filter_get_next_filter@@Base+0xad8>
   183d4:	add	r4, pc, r4
   183d8:	mov	r0, r4
   183dc:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   183e0:	mov	r0, r5
   183e4:	mov	r1, #1
   183e8:	bl	17c40 <codadump_filter_get_next_filter@@Base+0x8c>
   183ec:	mov	r0, r4
   183f0:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   183f4:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   183f8:	add	r1, sp, #40	; 0x28
   183fc:	mov	r0, r4
   18400:	bl	125b8 <coda_cursor_get_bit_size@plt>
   18404:	cmp	r0, #0
   18408:	bne	185a4 <codadump_filter_get_next_filter@@Base+0x9f0>
   1840c:	ldrd	r8, [sp, #40]	; 0x28
   18410:	mov	r1, #0
   18414:	and	r0, r8, #7
   18418:	orrs	r3, r0, r1
   1841c:	lsr	r6, r8, #3
   18420:	movne	r1, #1
   18424:	moveq	r1, #0
   18428:	orr	r6, r6, r9, lsl #29
   1842c:	adds	r6, r6, r1
   18430:	mov	r0, r6
   18434:	bl	123d8 <malloc@plt>
   18438:	subs	r5, r0, #0
   1843c:	beq	18600 <codadump_filter_get_next_filter@@Base+0xa4c>
   18440:	strd	r8, [sp]
   18444:	mov	r0, r4
   18448:	mov	r2, #0
   1844c:	mov	r3, #0
   18450:	mov	r1, r5
   18454:	bl	12648 <coda_cursor_read_bits@plt>
   18458:	cmp	r0, #0
   1845c:	bne	1859c <codadump_filter_get_next_filter@@Base+0x9e8>
   18460:	ldr	r4, [pc, #552]	; 18690 <codadump_filter_get_next_filter@@Base+0xadc>
   18464:	add	r4, pc, r4
   18468:	mov	r0, r4
   1846c:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18470:	mov	r1, r6
   18474:	mov	r0, r5
   18478:	bl	17c40 <codadump_filter_get_next_filter@@Base+0x8c>
   1847c:	mov	r0, r4
   18480:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18484:	mov	r0, r5
   18488:	bl	122a0 <free@plt>
   1848c:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   18490:	bl	1a974 <handle_coda_error@@Base>
   18494:	b	18018 <codadump_filter_get_next_filter@@Base+0x464>
   18498:	bl	1a974 <handle_coda_error@@Base>
   1849c:	b	18000 <codadump_filter_get_next_filter@@Base+0x44c>
   184a0:	bl	1a974 <handle_coda_error@@Base>
   184a4:	b	1802c <codadump_filter_get_next_filter@@Base+0x478>
   184a8:	bl	1a974 <handle_coda_error@@Base>
   184ac:	b	1810c <codadump_filter_get_next_filter@@Base+0x558>
   184b0:	mov	r0, r4
   184b4:	bl	12594 <coda_cursor_goto_next_record_field@plt>
   184b8:	cmp	r0, #0
   184bc:	bne	184e0 <codadump_filter_get_next_filter@@Base+0x92c>
   184c0:	ldr	r3, [sp, #16]
   184c4:	ldr	r1, [sp, #28]
   184c8:	b	18198 <codadump_filter_get_next_filter@@Base+0x5e4>
   184cc:	bl	1a974 <handle_coda_error@@Base>
   184d0:	b	1816c <codadump_filter_get_next_filter@@Base+0x5b8>
   184d4:	mov	r0, r8
   184d8:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   184dc:	b	18154 <codadump_filter_get_next_filter@@Base+0x5a0>
   184e0:	bl	1a974 <handle_coda_error@@Base>
   184e4:	b	184c0 <codadump_filter_get_next_filter@@Base+0x90c>
   184e8:	bl	1a974 <handle_coda_error@@Base>
   184ec:	b	17fe0 <codadump_filter_get_next_filter@@Base+0x42c>
   184f0:	bl	1a974 <handle_coda_error@@Base>
   184f4:	b	17fcc <codadump_filter_get_next_filter@@Base+0x418>
   184f8:	bl	1a974 <handle_coda_error@@Base>
   184fc:	b	180b4 <codadump_filter_get_next_filter@@Base+0x500>
   18500:	bl	1a974 <handle_coda_error@@Base>
   18504:	b	17f40 <codadump_filter_get_next_filter@@Base+0x38c>
   18508:	mov	r7, r3
   1850c:	mov	r5, #1
   18510:	b	17f30 <codadump_filter_get_next_filter@@Base+0x37c>
   18514:	bl	1a974 <handle_coda_error@@Base>
   18518:	b	18220 <codadump_filter_get_next_filter@@Base+0x66c>
   1851c:	bl	1a974 <handle_coda_error@@Base>
   18520:	b	17dec <codadump_filter_get_next_filter@@Base+0x238>
   18524:	bl	1a974 <handle_coda_error@@Base>
   18528:	b	181f4 <codadump_filter_get_next_filter@@Base+0x640>
   1852c:	bl	1a974 <handle_coda_error@@Base>
   18530:	b	18328 <codadump_filter_get_next_filter@@Base+0x774>
   18534:	bl	1a974 <handle_coda_error@@Base>
   18538:	b	183a4 <codadump_filter_get_next_filter@@Base+0x7f0>
   1853c:	bl	1a974 <handle_coda_error@@Base>
   18540:	b	18360 <codadump_filter_get_next_filter@@Base+0x7ac>
   18544:	bl	1a974 <handle_coda_error@@Base>
   18548:	b	18278 <codadump_filter_get_next_filter@@Base+0x6c4>
   1854c:	bl	1a974 <handle_coda_error@@Base>
   18550:	b	183d0 <codadump_filter_get_next_filter@@Base+0x81c>
   18554:	bl	1a974 <handle_coda_error@@Base>
   18558:	b	182e0 <codadump_filter_get_next_filter@@Base+0x72c>
   1855c:	bl	1a974 <handle_coda_error@@Base>
   18560:	b	18250 <codadump_filter_get_next_filter@@Base+0x69c>
   18564:	bl	1a974 <handle_coda_error@@Base>
   18568:	b	182b0 <codadump_filter_get_next_filter@@Base+0x6fc>
   1856c:	ldr	r0, [pc, #288]	; 18694 <codadump_filter_get_next_filter@@Base+0xae0>
   18570:	add	r4, sp, #40	; 0x28
   18574:	mov	r1, r4
   18578:	add	r0, pc, r0
   1857c:	vldr	d0, [sp, #32]
   18580:	bl	1227c <coda_time_double_to_string@plt>
   18584:	cmp	r0, #0
   18588:	beq	185bc <codadump_filter_get_next_filter@@Base+0xa08>
   1858c:	ldr	r0, [pc, #260]	; 18698 <codadump_filter_get_next_filter@@Base+0xae4>
   18590:	add	r0, pc, r0
   18594:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18598:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   1859c:	bl	1a974 <handle_coda_error@@Base>
   185a0:	b	18460 <codadump_filter_get_next_filter@@Base+0x8ac>
   185a4:	bl	1a974 <handle_coda_error@@Base>
   185a8:	b	1840c <codadump_filter_get_next_filter@@Base+0x858>
   185ac:	ldr	r0, [pc, #232]	; 1869c <codadump_filter_get_next_filter@@Base+0xae8>
   185b0:	add	r0, pc, r0
   185b4:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   185b8:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   185bc:	ldr	r0, [pc, #220]	; 186a0 <codadump_filter_get_next_filter@@Base+0xaec>
   185c0:	mov	r1, r4
   185c4:	add	r0, pc, r0
   185c8:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   185cc:	b	17e1c <codadump_filter_get_next_filter@@Base+0x268>
   185d0:	ldr	r3, [pc, #204]	; 186a4 <codadump_filter_get_next_filter@@Base+0xaf0>
   185d4:	ldr	r2, [sp, #40]	; 0x28
   185d8:	str	r3, [sp]
   185dc:	ldr	r1, [pc, #196]	; 186a8 <codadump_filter_get_next_filter@@Base+0xaf4>
   185e0:	ldr	r3, [pc, #196]	; 186ac <codadump_filter_get_next_filter@@Base+0xaf8>
   185e4:	add	r2, r2, #1
   185e8:	add	r3, pc, r3
   185ec:	add	r1, pc, r1
   185f0:	mvn	r0, #0
   185f4:	bl	12258 <coda_set_error@plt>
   185f8:	bl	1a974 <handle_coda_error@@Base>
   185fc:	b	182c4 <codadump_filter_get_next_filter@@Base+0x710>
   18600:	ldr	r2, [pc, #168]	; 186b0 <codadump_filter_get_next_filter@@Base+0xafc>
   18604:	ldr	r3, [pc, #168]	; 186b4 <codadump_filter_get_next_filter@@Base+0xb00>
   18608:	ldr	r1, [pc, #168]	; 186b8 <codadump_filter_get_next_filter@@Base+0xb04>
   1860c:	add	r3, pc, r3
   18610:	str	r2, [sp]
   18614:	add	r1, pc, r1
   18618:	mov	r2, r6
   1861c:	mvn	r0, #0
   18620:	bl	12258 <coda_set_error@plt>
   18624:	bl	1a974 <handle_coda_error@@Base>
   18628:	ldrd	r8, [sp, #40]	; 0x28
   1862c:	b	18440 <codadump_filter_get_next_filter@@Base+0x88c>
   18630:	muleq	r1, r0, r4
   18634:	andeq	r2, r0, r4, lsr #30
   18638:	andeq	r3, r0, r0, lsl r4
   1863c:	andeq	r3, r0, r8, ror #6
   18640:	strdeq	r2, [r0], -r0
   18644:	andeq	r3, r0, r0, lsr #5
   18648:	andeq	r3, r0, r0, lsl #4
   1864c:	andeq	r3, r0, ip, ror #3
   18650:	andeq	r3, r0, r4, asr r3
   18654:	andeq	r3, r0, ip, ror r1
   18658:	andeq	r3, r0, ip, asr r1
   1865c:	andeq	r3, r0, ip, lsl #2
   18660:	andeq	r2, r0, ip, lsl #26
   18664:	ldrdeq	r3, [r0], -r4
   18668:	andeq	r2, r0, ip, lsr fp
   1866c:	strheq	r3, [r0], -ip
   18670:	ldrdeq	r2, [r0], -r4
   18674:	andeq	r2, r0, r8, asr #23
   18678:	andeq	r3, r0, r0, ror #1
   1867c:	andeq	r2, r0, r8, lsl fp
   18680:	andeq	r2, r0, r4, asr #19
   18684:	andeq	r2, r0, r4, lsr #30
   18688:	andeq	r2, r0, r4, ror pc
   1868c:	strdeq	r2, [r0], -r0
   18690:	andeq	r2, r0, r0, ror #30
   18694:	andeq	r2, r0, r8, lsr sp
   18698:	andeq	r2, r0, r0, asr #26
   1869c:	andeq	r2, r0, r0, lsl #15
   186a0:	andeq	r2, r0, r8, lsr r7
   186a4:	andeq	r0, r0, pc, lsr #2
   186a8:	ldrdeq	r2, [r0], -r8
   186ac:	andeq	r2, r0, ip, asr ip
   186b0:	andeq	r0, r0, lr, asr #2
   186b4:	andeq	r2, r0, r8, lsr ip
   186b8:			; <UNDEFINED> instruction: 0x000026b0

000186bc <print_json_data@@Base>:
   186bc:	push	{r4, r5, r6, lr}
   186c0:	sub	sp, sp, #528	; 0x210
   186c4:	ldr	r2, [pc, #232]	; 187b4 <print_json_data@@Base+0xf8>
   186c8:	ldr	r4, [pc, #232]	; 187b8 <print_json_data@@Base+0xfc>
   186cc:	ldr	r3, [pc, #232]	; 187bc <print_json_data@@Base+0x100>
   186d0:	add	r2, pc, r2
   186d4:	add	r4, pc, r4
   186d8:	str	r0, [r2]
   186dc:	ldr	r5, [r4, r3]
   186e0:	add	r6, sp, #4
   186e4:	mov	r1, r6
   186e8:	ldr	r0, [r5]
   186ec:	bl	12264 <coda_open@plt>
   186f0:	cmp	r0, #0
   186f4:	bne	18770 <print_json_data@@Base+0xb4>
   186f8:	add	r5, sp, #8
   186fc:	mov	r0, r5
   18700:	ldr	r1, [sp, #4]
   18704:	bl	12390 <coda_cursor_set_product@plt>
   18708:	cmp	r0, #0
   1870c:	bne	18768 <print_json_data@@Base+0xac>
   18710:	ldr	r3, [pc, #168]	; 187c0 <print_json_data@@Base+0x104>
   18714:	ldr	r3, [r4, r3]
   18718:	ldr	r1, [r3]
   1871c:	cmp	r1, #0
   18720:	beq	18734 <print_json_data@@Base+0x78>
   18724:	mov	r0, r5
   18728:	bl	12570 <coda_cursor_goto@plt>
   1872c:	cmp	r0, #0
   18730:	bne	18760 <print_json_data@@Base+0xa4>
   18734:	mov	r0, #0
   18738:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   1873c:	mov	r0, r5
   18740:	bl	17d70 <codadump_filter_get_next_filter@@Base+0x1bc>
   18744:	ldr	r0, [pc, #120]	; 187c4 <print_json_data@@Base+0x108>
   18748:	add	r0, pc, r0
   1874c:	bl	17bf8 <codadump_filter_get_next_filter@@Base+0x44>
   18750:	ldr	r0, [sp, #4]
   18754:	bl	1254c <coda_close@plt>
   18758:	add	sp, sp, #528	; 0x210
   1875c:	pop	{r4, r5, r6, pc}
   18760:	bl	1a974 <handle_coda_error@@Base>
   18764:	b	18734 <print_json_data@@Base+0x78>
   18768:	bl	1a974 <handle_coda_error@@Base>
   1876c:	b	18710 <print_json_data@@Base+0x54>
   18770:	bl	1260c <coda_get_errno@plt>
   18774:	ldr	r3, [r0]
   18778:	cmn	r3, #21
   1877c:	beq	18788 <print_json_data@@Base+0xcc>
   18780:	bl	1a974 <handle_coda_error@@Base>
   18784:	b	186f8 <print_json_data@@Base+0x3c>
   18788:	mov	r0, #0
   1878c:	bl	122ac <coda_set_option_use_mmap@plt>
   18790:	mov	r1, r6
   18794:	ldr	r0, [r5]
   18798:	bl	12264 <coda_open@plt>
   1879c:	mov	r5, r0
   187a0:	mov	r0, #1
   187a4:	bl	122ac <coda_set_option_use_mmap@plt>
   187a8:	cmp	r5, #0
   187ac:	bne	18780 <print_json_data@@Base+0xc4>
   187b0:	b	186f8 <print_json_data@@Base+0x3c>
   187b4:	andeq	r4, r1, r8, lsr fp
   187b8:	andeq	r4, r1, r4, lsr #18
   187bc:			; <UNDEFINED> instruction: 0x000001b4
   187c0:	ldrdeq	r0, [r0], -r8
   187c4:	andeq	r3, r0, ip, ror #28
   187c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187cc:	add	r1, r1, r1, lsl #2
   187d0:	ldr	r9, [pc, #276]	; 188ec <print_json_data@@Base+0x230>
   187d4:	ldr	r3, [pc, #276]	; 188f0 <print_json_data@@Base+0x234>
   187d8:	add	r9, pc, r9
   187dc:	lsl	r1, r1, #4
   187e0:	ldr	r5, [r9, r3]
   187e4:	sub	sp, sp, #12
   187e8:	add	r7, r5, r1
   187ec:	ldr	r3, [r7, #804]	; 0x324
   187f0:	cmp	r3, #0
   187f4:	ble	1888c <print_json_data@@Base+0x1d0>
   187f8:	ldr	r3, [pc, #244]	; 188f4 <print_json_data@@Base+0x238>
   187fc:	ldr	fp, [pc, #244]	; 188f8 <print_json_data@@Base+0x23c>
   18800:	ldr	sl, [pc, #244]	; 188fc <print_json_data@@Base+0x240>
   18804:	ldr	r8, [r9, r3]
   18808:	ldr	r3, [pc, #240]	; 18900 <print_json_data@@Base+0x244>
   1880c:	add	r1, r1, #808	; 0x328
   18810:	add	r3, pc, r3
   18814:	str	r3, [sp, #4]
   18818:	ldr	r3, [r8]
   1881c:	mov	r6, r0
   18820:	cmp	r3, #0
   18824:	add	r5, r5, r1
   18828:	mov	r4, #0
   1882c:	add	fp, pc, fp
   18830:	add	sl, pc, sl
   18834:	ldr	r2, [pc, #200]	; 18904 <print_json_data@@Base+0x248>
   18838:	beq	188a8 <print_json_data@@Base+0x1ec>
   1883c:	ldr	r3, [r7, #800]	; 0x320
   18840:	ldr	r2, [r9, r2]
   18844:	add	r3, r4, r3
   18848:	add	r1, r3, #18
   1884c:	add	lr, r2, r3, lsl #2
   18850:	ldr	r1, [r2, r1, lsl #2]
   18854:	mov	r0, r6
   18858:	cmp	r1, #0
   1885c:	mov	r1, sl
   18860:	beq	188c8 <print_json_data@@Base+0x20c>
   18864:	ldr	r3, [lr, #4]
   18868:	ldr	r2, [lr, #36]	; 0x24
   1886c:	bl	12468 <fprintf@plt>
   18870:	ldr	r3, [r7, #804]	; 0x324
   18874:	add	r4, r4, #1
   18878:	cmp	r4, r3
   1887c:	mov	r1, r6
   18880:	mov	r0, #44	; 0x2c
   18884:	add	r5, r5, #4
   18888:	blt	18894 <print_json_data@@Base+0x1d8>
   1888c:	add	sp, sp, #12
   18890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18894:	bl	125a0 <fputc@plt>
   18898:	ldr	r3, [r8]
   1889c:	ldr	r2, [pc, #96]	; 18904 <print_json_data@@Base+0x248>
   188a0:	cmp	r3, #0
   188a4:	bne	1883c <print_json_data@@Base+0x180>
   188a8:	ldr	r3, [r5]
   188ac:	mov	r1, fp
   188b0:	cmn	r3, #1
   188b4:	mov	r0, r6
   188b8:	mov	r2, r3
   188bc:	beq	188dc <print_json_data@@Base+0x220>
   188c0:	bl	12468 <fprintf@plt>
   188c4:	b	18870 <print_json_data@@Base+0x1b4>
   188c8:	ldr	r2, [lr, #4]
   188cc:	ldr	r1, [sp, #4]
   188d0:	mov	r0, r6
   188d4:	bl	12468 <fprintf@plt>
   188d8:	b	18870 <print_json_data@@Base+0x1b4>
   188dc:	mov	r1, r6
   188e0:	mov	r0, #63	; 0x3f
   188e4:	bl	125a0 <fputc@plt>
   188e8:	b	18870 <print_json_data@@Base+0x1b4>
   188ec:	andeq	r4, r1, r0, lsr #16
   188f0:			; <UNDEFINED> instruction: 0x000001b4
   188f4:			; <UNDEFINED> instruction: 0x000001b0
   188f8:	strdeq	r2, [r0], -r4
   188fc:	andeq	r2, r0, ip, ror #21
   18900:	andeq	r2, r0, r0, lsl fp
   18904:	andeq	r0, r0, r4, ror #3

00018908 <print_full_field_name@@Base>:
   18908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1890c:	sub	sp, sp, #20
   18910:	ldr	r3, [pc, #788]	; 18c2c <print_full_field_name@@Base+0x324>
   18914:	cmp	r1, #1
   18918:	str	r2, [sp]
   1891c:	mov	r4, r0
   18920:	add	r3, pc, r3
   18924:	beq	18ac0 <print_full_field_name@@Base+0x1b8>
   18928:	ldr	r2, [pc, #768]	; 18c30 <print_full_field_name@@Base+0x328>
   1892c:	mov	sl, r1
   18930:	ldr	r5, [r3, r2]
   18934:	ldr	r3, [r5, #3748]	; 0xea4
   18938:	cmp	r3, #0
   1893c:	addgt	r7, r5, #3616	; 0xe20
   18940:	movgt	r6, #0
   18944:	movgt	r8, #46	; 0x2e
   18948:	bgt	18954 <print_full_field_name@@Base+0x4c>
   1894c:	b	18978 <print_full_field_name@@Base+0x70>
   18950:	bl	125a0 <fputc@plt>
   18954:	mov	r1, r4
   18958:	ldr	r0, [r7, #4]!
   1895c:	bl	12630 <fputs@plt>
   18960:	ldr	r3, [r5, #3748]	; 0xea4
   18964:	add	r6, r6, #1
   18968:	cmp	r3, r6
   1896c:	mov	r1, r4
   18970:	mov	r0, r8
   18974:	bgt	18950 <print_full_field_name@@Base+0x48>
   18978:	cmp	sl, #2
   1897c:	beq	18988 <print_full_field_name@@Base+0x80>
   18980:	add	sp, sp, #20
   18984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18988:	ldr	r3, [r5, #136]	; 0x88
   1898c:	cmp	r3, #0
   18990:	ble	18c0c <print_full_field_name@@Base+0x304>
   18994:	ldr	r3, [pc, #664]	; 18c34 <print_full_field_name@@Base+0x32c>
   18998:	mov	r9, #0
   1899c:	add	r3, pc, r3
   189a0:	str	r3, [sp, #4]
   189a4:	mov	r6, r9
   189a8:	add	r8, r5, #4
   189ac:	add	r7, sp, #12
   189b0:	mov	fp, #44	; 0x2c
   189b4:	b	189d4 <print_full_field_name@@Base+0xcc>
   189b8:	ldr	r3, [sp, #12]
   189bc:	cmp	r3, #1
   189c0:	beq	189f8 <print_full_field_name@@Base+0xf0>
   189c4:	ldr	r3, [r5, #136]	; 0x88
   189c8:	add	r6, r6, #1
   189cc:	cmp	r3, r6
   189d0:	ble	18a54 <print_full_field_name@@Base+0x14c>
   189d4:	mov	r1, r7
   189d8:	ldr	r0, [r8, #4]!
   189dc:	bl	1266c <coda_type_get_class@plt>
   189e0:	cmp	r0, #0
   189e4:	beq	189b8 <print_full_field_name@@Base+0xb0>
   189e8:	bl	1a974 <handle_coda_error@@Base>
   189ec:	ldr	r3, [sp, #12]
   189f0:	cmp	r3, #1
   189f4:	bne	189c4 <print_full_field_name@@Base+0xbc>
   189f8:	add	r3, r9, r9, lsl #2
   189fc:	add	r3, r5, r3, lsl #4
   18a00:	ldr	r2, [r3, #804]	; 0x324
   18a04:	cmp	r2, #0
   18a08:	ble	189c4 <print_full_field_name@@Base+0xbc>
   18a0c:	ldr	r2, [r3, #800]	; 0x320
   18a10:	mov	r1, r4
   18a14:	cmp	r2, #0
   18a18:	mov	r0, fp
   18a1c:	mov	r3, r4
   18a20:	mov	r2, sl
   18a24:	bne	18ab8 <print_full_field_name@@Base+0x1b0>
   18a28:	mov	r1, #1
   18a2c:	ldr	r0, [sp, #4]
   18a30:	bl	12384 <fwrite@plt>
   18a34:	mov	r1, r9
   18a38:	mov	r0, r4
   18a3c:	bl	187c8 <print_json_data@@Base+0x10c>
   18a40:	ldr	r3, [r5, #136]	; 0x88
   18a44:	add	r6, r6, #1
   18a48:	cmp	r3, r6
   18a4c:	add	r9, r9, #1
   18a50:	bgt	189d4 <print_full_field_name@@Base+0xcc>
   18a54:	ldr	r3, [sp]
   18a58:	cmp	r3, #0
   18a5c:	beq	18a9c <print_full_field_name@@Base+0x194>
   18a60:	ldr	r3, [r5, #3360]	; 0xd20
   18a64:	cmp	r9, r3
   18a68:	bge	18a9c <print_full_field_name@@Base+0x194>
   18a6c:	add	r3, r9, r9, lsl #2
   18a70:	add	r5, r5, r3, lsl #4
   18a74:	ldr	r3, [r5, #800]	; 0x320
   18a78:	cmp	r3, #0
   18a7c:	beq	18bf0 <print_full_field_name@@Base+0x2e8>
   18a80:	mov	r1, r4
   18a84:	mov	r0, #44	; 0x2c
   18a88:	bl	125a0 <fputc@plt>
   18a8c:	mov	r1, r9
   18a90:	mov	r0, r4
   18a94:	bl	187c8 <print_json_data@@Base+0x10c>
   18a98:	add	r9, r9, #1
   18a9c:	cmp	r9, #0
   18aa0:	ble	18980 <print_full_field_name@@Base+0x78>
   18aa4:	mov	r1, r4
   18aa8:	mov	r0, #93	; 0x5d
   18aac:	bl	125a0 <fputc@plt>
   18ab0:	add	sp, sp, #20
   18ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ab8:	bl	125a0 <fputc@plt>
   18abc:	b	18a34 <print_full_field_name@@Base+0x12c>
   18ac0:	ldr	r2, [pc, #360]	; 18c30 <print_full_field_name@@Base+0x328>
   18ac4:	mov	r9, #0
   18ac8:	ldr	r5, [r3, r2]
   18acc:	ldr	r3, [r5, #136]	; 0x88
   18ad0:	cmp	r3, #0
   18ad4:	ble	18b98 <print_full_field_name@@Base+0x290>
   18ad8:	ldr	fp, [pc, #344]	; 18c38 <print_full_field_name@@Base+0x330>
   18adc:	mov	sl, r9
   18ae0:	add	fp, pc, fp
   18ae4:	mov	r6, r9
   18ae8:	add	r8, r5, #4
   18aec:	add	r7, sp, #12
   18af0:	b	18b50 <print_full_field_name@@Base+0x248>
   18af4:	cmp	r3, #1
   18af8:	bne	18b40 <print_full_field_name@@Base+0x238>
   18afc:	cmp	r6, #0
   18b00:	beq	18be0 <print_full_field_name@@Base+0x2d8>
   18b04:	add	r3, r9, r9, lsl #2
   18b08:	add	r3, r5, r3, lsl #4
   18b0c:	ldr	r3, [r3, #804]	; 0x324
   18b10:	cmp	r3, #0
   18b14:	ble	18b3c <print_full_field_name@@Base+0x234>
   18b18:	mov	r1, r4
   18b1c:	mov	r0, #91	; 0x5b
   18b20:	bl	125a0 <fputc@plt>
   18b24:	mov	r1, r9
   18b28:	mov	r0, r4
   18b2c:	bl	187c8 <print_json_data@@Base+0x10c>
   18b30:	mov	r1, r4
   18b34:	mov	r0, #93	; 0x5d
   18b38:	bl	125a0 <fputc@plt>
   18b3c:	add	r9, r9, #1
   18b40:	ldr	r3, [r5, #136]	; 0x88
   18b44:	add	r6, r6, #1
   18b48:	cmp	r3, r6
   18b4c:	ble	18b98 <print_full_field_name@@Base+0x290>
   18b50:	mov	r1, r7
   18b54:	ldr	r0, [r8, #4]!
   18b58:	bl	1266c <coda_type_get_class@plt>
   18b5c:	cmp	r0, #0
   18b60:	bne	18bd8 <print_full_field_name@@Base+0x2d0>
   18b64:	ldr	r3, [sp, #12]
   18b68:	cmp	r3, #0
   18b6c:	bne	18af4 <print_full_field_name@@Base+0x1ec>
   18b70:	add	r3, r5, sl, lsl #2
   18b74:	mov	r1, fp
   18b78:	ldr	r2, [r3, #3620]	; 0xe24
   18b7c:	mov	r0, r4
   18b80:	bl	12468 <fprintf@plt>
   18b84:	ldr	r3, [r5, #136]	; 0x88
   18b88:	add	r6, r6, #1
   18b8c:	cmp	r3, r6
   18b90:	add	sl, sl, #1
   18b94:	bgt	18b50 <print_full_field_name@@Base+0x248>
   18b98:	ldr	r3, [sp]
   18b9c:	cmp	r3, #0
   18ba0:	beq	18980 <print_full_field_name@@Base+0x78>
   18ba4:	ldr	r3, [r5, #3360]	; 0xd20
   18ba8:	cmp	r3, r9
   18bac:	ble	18980 <print_full_field_name@@Base+0x78>
   18bb0:	mov	r1, r4
   18bb4:	mov	r0, #91	; 0x5b
   18bb8:	bl	125a0 <fputc@plt>
   18bbc:	mov	r1, r9
   18bc0:	mov	r0, r4
   18bc4:	bl	187c8 <print_json_data@@Base+0x10c>
   18bc8:	mov	r1, r4
   18bcc:	mov	r0, #93	; 0x5d
   18bd0:	bl	125a0 <fputc@plt>
   18bd4:	b	18980 <print_full_field_name@@Base+0x78>
   18bd8:	bl	1a974 <handle_coda_error@@Base>
   18bdc:	b	18b64 <print_full_field_name@@Base+0x25c>
   18be0:	mov	r1, r4
   18be4:	mov	r0, #47	; 0x2f
   18be8:	bl	125a0 <fputc@plt>
   18bec:	b	18b04 <print_full_field_name@@Base+0x1fc>
   18bf0:	ldr	r0, [pc, #68]	; 18c3c <print_full_field_name@@Base+0x334>
   18bf4:	mov	r3, r4
   18bf8:	mov	r2, #2
   18bfc:	mov	r1, #1
   18c00:	add	r0, pc, r0
   18c04:	bl	12384 <fwrite@plt>
   18c08:	b	18a8c <print_full_field_name@@Base+0x184>
   18c0c:	ldr	r3, [sp]
   18c10:	cmp	r3, #0
   18c14:	beq	18980 <print_full_field_name@@Base+0x78>
   18c18:	ldr	r3, [r5, #3360]	; 0xd20
   18c1c:	cmp	r3, #0
   18c20:	movgt	r9, #0
   18c24:	bgt	18a6c <print_full_field_name@@Base+0x164>
   18c28:	b	18980 <print_full_field_name@@Base+0x78>
   18c2c:	ldrdeq	r4, [r1], -r8
   18c30:			; <UNDEFINED> instruction: 0x000001b4
   18c34:	andeq	r2, r0, ip, lsl #19
   18c38:	andeq	r2, r0, r4, asr #16
   18c3c:	andeq	r2, r0, r8, lsr #14
   18c40:	push	{r4, r5, r6, lr}
   18c44:	sub	sp, sp, #8
   18c48:	ldr	r4, [pc, #636]	; 18ecc <print_full_field_name@@Base+0x5c4>
   18c4c:	ldr	r3, [pc, #636]	; 18ed0 <print_full_field_name@@Base+0x5c8>
   18c50:	add	r4, pc, r4
   18c54:	ldr	r3, [r4, r3]
   18c58:	ldr	r2, [r3]
   18c5c:	cmp	r2, #0
   18c60:	beq	18c74 <print_full_field_name@@Base+0x36c>
   18c64:	cmp	r2, #1
   18c68:	beq	18d18 <print_full_field_name@@Base+0x410>
   18c6c:	add	sp, sp, #8
   18c70:	pop	{r4, r5, r6, pc}
   18c74:	ldr	r3, [pc, #600]	; 18ed4 <print_full_field_name@@Base+0x5cc>
   18c78:	mov	r1, #1
   18c7c:	ldr	r5, [r4, r3]
   18c80:	ldr	r0, [r5]
   18c84:	bl	18908 <print_full_field_name@@Base>
   18c88:	ldr	r3, [pc, #584]	; 18ed8 <print_full_field_name@@Base+0x5d0>
   18c8c:	ldr	r3, [r4, r3]
   18c90:	ldr	r3, [r3]
   18c94:	cmp	r3, #0
   18c98:	bne	18d24 <print_full_field_name@@Base+0x41c>
   18c9c:	ldr	r3, [pc, #568]	; 18edc <print_full_field_name@@Base+0x5d4>
   18ca0:	ldr	r3, [r4, r3]
   18ca4:	ldr	r3, [r3]
   18ca8:	cmp	r3, #0
   18cac:	bne	18e10 <print_full_field_name@@Base+0x508>
   18cb0:	ldr	r3, [pc, #552]	; 18ee0 <print_full_field_name@@Base+0x5d8>
   18cb4:	ldr	r3, [r4, r3]
   18cb8:	ldr	r3, [r3]
   18cbc:	cmp	r3, #0
   18cc0:	bne	18dc4 <print_full_field_name@@Base+0x4bc>
   18cc4:	mov	r0, #10
   18cc8:	bl	124c8 <putchar@plt>
   18ccc:	ldr	r3, [pc, #528]	; 18ee4 <print_full_field_name@@Base+0x5dc>
   18cd0:	ldr	r3, [r4, r3]
   18cd4:	ldr	r3, [r3]
   18cd8:	cmp	r3, #0
   18cdc:	beq	18c6c <print_full_field_name@@Base+0x364>
   18ce0:	ldr	r3, [pc, #512]	; 18ee8 <print_full_field_name@@Base+0x5e0>
   18ce4:	ldr	r5, [r4, r3]
   18ce8:	ldr	r3, [r5]
   18cec:	cmp	r3, #0
   18cf0:	ble	18c6c <print_full_field_name@@Base+0x364>
   18cf4:	mov	r4, #0
   18cf8:	mov	r0, r4
   18cfc:	bl	1688c <print_all_distinct_dims@@Base>
   18d00:	ldr	r3, [r5]
   18d04:	add	r4, r4, #1
   18d08:	cmp	r4, r3
   18d0c:	blt	18cf8 <print_full_field_name@@Base+0x3f0>
   18d10:	add	sp, sp, #8
   18d14:	pop	{r4, r5, r6, pc}
   18d18:	bl	14dd0 <export_data_element_to_ascii@@Base>
   18d1c:	add	sp, sp, #8
   18d20:	pop	{r4, r5, r6, pc}
   18d24:	ldr	r3, [pc, #448]	; 18eec <print_full_field_name@@Base+0x5e4>
   18d28:	mov	r1, sp
   18d2c:	ldr	r6, [r4, r3]
   18d30:	ldr	r3, [r6, #136]	; 0x88
   18d34:	add	r3, r3, #2
   18d38:	ldr	r0, [r6, r3, lsl #2]
   18d3c:	bl	1266c <coda_type_get_class@plt>
   18d40:	cmp	r0, #0
   18d44:	bne	18e6c <print_full_field_name@@Base+0x564>
   18d48:	ldr	r3, [sp]
   18d4c:	add	r1, sp, #4
   18d50:	cmp	r3, #6
   18d54:	ldr	r3, [r6, #136]	; 0x88
   18d58:	add	r3, r3, #2
   18d5c:	ldr	r0, [r6, r3, lsl #2]
   18d60:	beq	18e7c <print_full_field_name@@Base+0x574>
   18d64:	bl	1242c <coda_type_get_read_type@plt>
   18d68:	cmp	r0, #0
   18d6c:	bne	18e5c <print_full_field_name@@Base+0x554>
   18d70:	ldr	r0, [sp, #4]
   18d74:	bl	12528 <coda_type_get_native_type_name@plt>
   18d78:	mov	r1, r0
   18d7c:	ldr	r0, [pc, #364]	; 18ef0 <print_full_field_name@@Base+0x5e8>
   18d80:	add	r0, pc, r0
   18d84:	bl	12234 <printf@plt>
   18d88:	ldr	r3, [sp, #4]
   18d8c:	sub	r3, r3, #11
   18d90:	cmp	r3, #1
   18d94:	bhi	18c9c <print_full_field_name@@Base+0x394>
   18d98:	mov	r0, #40	; 0x28
   18d9c:	bl	124c8 <putchar@plt>
   18da0:	ldr	r1, [r6, #3360]	; 0xd20
   18da4:	cmp	r1, #0
   18da8:	ble	18eac <print_full_field_name@@Base+0x5a4>
   18dac:	ldr	r0, [r5]
   18db0:	sub	r1, r1, #1
   18db4:	bl	187c8 <print_json_data@@Base+0x10c>
   18db8:	mov	r0, #41	; 0x29
   18dbc:	bl	124c8 <putchar@plt>
   18dc0:	b	18c9c <print_full_field_name@@Base+0x394>
   18dc4:	ldr	r3, [pc, #288]	; 18eec <print_full_field_name@@Base+0x5e4>
   18dc8:	add	r1, sp, #4
   18dcc:	ldr	r2, [r4, r3]
   18dd0:	ldr	r3, [r2, #136]	; 0x88
   18dd4:	add	r3, r3, #2
   18dd8:	ldr	r0, [r2, r3, lsl #2]
   18ddc:	bl	12360 <coda_type_get_description@plt>
   18de0:	cmp	r0, #0
   18de4:	bne	18e74 <print_full_field_name@@Base+0x56c>
   18de8:	ldr	r1, [sp, #4]
   18dec:	cmp	r1, #0
   18df0:	beq	18cc4 <print_full_field_name@@Base+0x3bc>
   18df4:	ldrb	r3, [r1]
   18df8:	cmp	r3, #0
   18dfc:	beq	18cc4 <print_full_field_name@@Base+0x3bc>
   18e00:	ldr	r0, [pc, #236]	; 18ef4 <print_full_field_name@@Base+0x5ec>
   18e04:	add	r0, pc, r0
   18e08:	bl	12234 <printf@plt>
   18e0c:	b	18cc4 <print_full_field_name@@Base+0x3bc>
   18e10:	ldr	r3, [pc, #212]	; 18eec <print_full_field_name@@Base+0x5e4>
   18e14:	add	r1, sp, #4
   18e18:	ldr	r2, [r4, r3]
   18e1c:	ldr	r3, [r2, #136]	; 0x88
   18e20:	add	r3, r3, #2
   18e24:	ldr	r0, [r2, r3, lsl #2]
   18e28:	bl	12354 <coda_type_get_unit@plt>
   18e2c:	cmp	r0, #0
   18e30:	bne	18e64 <print_full_field_name@@Base+0x55c>
   18e34:	ldr	r1, [sp, #4]
   18e38:	cmp	r1, #0
   18e3c:	beq	18cb0 <print_full_field_name@@Base+0x3a8>
   18e40:	ldrb	r3, [r1]
   18e44:	cmp	r3, #0
   18e48:	beq	18cb0 <print_full_field_name@@Base+0x3a8>
   18e4c:	ldr	r0, [pc, #164]	; 18ef8 <print_full_field_name@@Base+0x5f0>
   18e50:	add	r0, pc, r0
   18e54:	bl	12234 <printf@plt>
   18e58:	b	18cb0 <print_full_field_name@@Base+0x3a8>
   18e5c:	bl	1a974 <handle_coda_error@@Base>
   18e60:	b	18d70 <print_full_field_name@@Base+0x468>
   18e64:	bl	1a974 <handle_coda_error@@Base>
   18e68:	b	18e34 <print_full_field_name@@Base+0x52c>
   18e6c:	bl	1a974 <handle_coda_error@@Base>
   18e70:	b	18d48 <print_full_field_name@@Base+0x440>
   18e74:	bl	1a974 <handle_coda_error@@Base>
   18e78:	b	18de8 <print_full_field_name@@Base+0x4e0>
   18e7c:	bl	124e0 <coda_type_get_special_type@plt>
   18e80:	cmp	r0, #0
   18e84:	bne	18ea4 <print_full_field_name@@Base+0x59c>
   18e88:	ldr	r0, [sp, #4]
   18e8c:	bl	121d4 <coda_type_get_special_type_name@plt>
   18e90:	mov	r1, r0
   18e94:	ldr	r0, [pc, #96]	; 18efc <print_full_field_name@@Base+0x5f4>
   18e98:	add	r0, pc, r0
   18e9c:	bl	12234 <printf@plt>
   18ea0:	b	18c9c <print_full_field_name@@Base+0x394>
   18ea4:	bl	1a974 <handle_coda_error@@Base>
   18ea8:	b	18e88 <print_full_field_name@@Base+0x580>
   18eac:	ldr	r3, [pc, #76]	; 18f00 <print_full_field_name@@Base+0x5f8>
   18eb0:	ldr	r1, [pc, #76]	; 18f04 <print_full_field_name@@Base+0x5fc>
   18eb4:	ldr	r0, [pc, #76]	; 18f08 <print_full_field_name@@Base+0x600>
   18eb8:	add	r3, pc, r3
   18ebc:	mov	r2, #238	; 0xee
   18ec0:	add	r1, pc, r1
   18ec4:	add	r0, pc, r0
   18ec8:	bl	12660 <__assert_fail@plt>
   18ecc:	andeq	r4, r1, r8, lsr #7
   18ed0:	ldrdeq	r0, [r0], -r4
   18ed4:	ldrdeq	r0, [r0], -ip
   18ed8:	andeq	r0, r0, r4, asr #3
   18edc:	andeq	r0, r0, ip, lsr #3
   18ee0:	andeq	r0, r0, r8, asr #3
   18ee4:	andeq	r0, r0, r0, lsr #3
   18ee8:	andeq	r0, r0, r4, ror #3
   18eec:			; <UNDEFINED> instruction: 0x000001b4
   18ef0:	andeq	r2, r0, ip, lsr #11
   18ef4:			; <UNDEFINED> instruction: 0x000025bc
   18ef8:	andeq	r2, r0, r8, ror #10
   18efc:	muleq	r0, r4, r4
   18f00:	andeq	r2, r0, r0, asr #8
   18f04:	andeq	r2, r0, r0, ror r4
   18f08:	ldrdeq	r2, [r0], -r4
   18f0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18f10:	sub	sp, sp, #20
   18f14:	ldr	r6, [pc, #856]	; 19274 <print_full_field_name@@Base+0x96c>
   18f18:	ldr	r3, [pc, #856]	; 19278 <print_full_field_name@@Base+0x970>
   18f1c:	add	r6, pc, r6
   18f20:	add	r1, sp, #4
   18f24:	ldr	r4, [r6, r3]
   18f28:	ldr	r3, [r4, #136]	; 0x88
   18f2c:	add	r3, r3, #2
   18f30:	ldr	r0, [r4, r3, lsl #2]
   18f34:	bl	1266c <coda_type_get_class@plt>
   18f38:	cmp	r0, #0
   18f3c:	bne	19164 <print_full_field_name@@Base+0x85c>
   18f40:	ldr	r3, [sp, #4]
   18f44:	cmp	r3, #6
   18f48:	addls	pc, pc, r3, lsl #2
   18f4c:	b	19088 <print_full_field_name@@Base+0x780>
   18f50:	b	18f6c <print_full_field_name@@Base+0x664>
   18f54:	b	190fc <print_full_field_name@@Base+0x7f4>
   18f58:	b	190c4 <print_full_field_name@@Base+0x7bc>
   18f5c:	b	190c4 <print_full_field_name@@Base+0x7bc>
   18f60:	b	190c4 <print_full_field_name@@Base+0x7bc>
   18f64:	b	190c4 <print_full_field_name@@Base+0x7bc>
   18f68:	b	19090 <print_full_field_name@@Base+0x788>
   18f6c:	ldr	r3, [r4, #136]	; 0x88
   18f70:	cmp	r3, #30
   18f74:	bgt	19088 <print_full_field_name@@Base+0x780>
   18f78:	ldr	r2, [r4, #3748]	; 0xea4
   18f7c:	add	r3, r3, #2
   18f80:	add	r1, sp, #8
   18f84:	ldr	r0, [r4, r3, lsl #2]
   18f88:	add	r3, r2, #1
   18f8c:	str	r3, [r4, #3748]	; 0xea4
   18f90:	bl	12414 <coda_type_get_num_record_fields@plt>
   18f94:	cmp	r0, #0
   18f98:	beq	18fa0 <print_full_field_name@@Base+0x698>
   18f9c:	bl	1a974 <handle_coda_error@@Base>
   18fa0:	ldr	r2, [r4, #796]	; 0x31c
   18fa4:	ldr	r3, [r4, #136]	; 0x88
   18fa8:	add	r2, r2, #166	; 0xa6
   18fac:	add	r3, r3, #1
   18fb0:	ldr	r9, [r4, r2, lsl #2]
   18fb4:	str	r3, [r4, #136]	; 0x88
   18fb8:	cmp	r9, #0
   18fbc:	beq	191e0 <print_full_field_name@@Base+0x8d8>
   18fc0:	mov	r0, r9
   18fc4:	add	r8, sp, #12
   18fc8:	mov	r7, #1
   18fcc:	bl	17b2c <codadump_filter_get_fieldname@@Base>
   18fd0:	subs	r5, r0, #0
   18fd4:	beq	1922c <print_full_field_name@@Base+0x924>
   18fd8:	ldr	r3, [r4, #136]	; 0x88
   18fdc:	mov	r2, r8
   18fe0:	add	r3, r3, #1
   18fe4:	mov	r1, r5
   18fe8:	ldr	r0, [r4, r3, lsl #2]
   18fec:	bl	1257c <coda_type_get_record_field_index_from_name@plt>
   18ff0:	cmp	r0, #0
   18ff4:	beq	1900c <print_full_field_name@@Base+0x704>
   18ff8:	bl	1260c <coda_get_errno@plt>
   18ffc:	ldr	r3, [r0]
   19000:	cmn	r3, #102	; 0x66
   19004:	beq	19250 <print_full_field_name@@Base+0x948>
   19008:	bl	1a974 <handle_coda_error@@Base>
   1900c:	ldr	r5, [r4, #796]	; 0x31c
   19010:	add	r3, r5, #166	; 0xa6
   19014:	add	r5, r5, #167	; 0xa7
   19018:	ldr	r0, [r4, r3, lsl #2]
   1901c:	bl	17b70 <codadump_filter_get_subfilter@@Base>
   19020:	ldr	r3, [r4, #796]	; 0x31c
   19024:	mov	r1, r7
   19028:	add	r3, r3, #1
   1902c:	str	r3, [r4, #796]	; 0x31c
   19030:	str	r0, [r4, r5, lsl #2]
   19034:	ldr	r0, [sp, #12]
   19038:	bl	19294 <print_full_field_name@@Base+0x98c>
   1903c:	ldr	r3, [r4, #796]	; 0x31c
   19040:	add	r5, r3, #165	; 0xa5
   19044:	sub	r3, r3, #1
   19048:	ldr	r0, [r4, r5, lsl #2]
   1904c:	str	r3, [r4, #796]	; 0x31c
   19050:	bl	17bb4 <codadump_filter_get_next_filter@@Base>
   19054:	ldr	r3, [r4, #796]	; 0x31c
   19058:	add	r3, r3, #166	; 0xa6
   1905c:	str	r0, [r4, r5, lsl #2]
   19060:	ldr	r0, [r4, r3, lsl #2]
   19064:	cmp	r0, #0
   19068:	bne	18fcc <print_full_field_name@@Base+0x6c4>
   1906c:	str	r9, [r4, r3, lsl #2]
   19070:	ldr	r2, [r4, #136]	; 0x88
   19074:	ldr	r3, [r4, #3748]	; 0xea4
   19078:	sub	r2, r2, #1
   1907c:	sub	r3, r3, #1
   19080:	str	r2, [r4, #136]	; 0x88
   19084:	str	r3, [r4, #3748]	; 0xea4
   19088:	add	sp, sp, #20
   1908c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19090:	bl	121f8 <coda_get_option_bypass_special_types@plt>
   19094:	ldr	r3, [r4, #136]	; 0x88
   19098:	cmp	r0, #0
   1909c:	beq	19198 <print_full_field_name@@Base+0x890>
   190a0:	add	r3, r3, #2
   190a4:	add	r1, r4, r3, lsl #2
   190a8:	ldr	r0, [r4, r3, lsl #2]
   190ac:	bl	12618 <coda_type_get_special_base_type@plt>
   190b0:	cmp	r0, #0
   190b4:	bne	1921c <print_full_field_name@@Base+0x914>
   190b8:	bl	18f0c <print_full_field_name@@Base+0x604>
   190bc:	add	sp, sp, #20
   190c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   190c4:	ldr	r3, [r4, #136]	; 0x88
   190c8:	add	r1, sp, #12
   190cc:	add	r3, r3, #2
   190d0:	ldr	r0, [r4, r3, lsl #2]
   190d4:	bl	1242c <coda_type_get_read_type@plt>
   190d8:	cmp	r0, #0
   190dc:	bne	191d0 <print_full_field_name@@Base+0x8c8>
   190e0:	ldr	r3, [sp, #12]
   190e4:	sub	r3, r3, #11
   190e8:	cmp	r3, #1
   190ec:	bls	1916c <print_full_field_name@@Base+0x864>
   190f0:	bl	18c40 <print_full_field_name@@Base+0x338>
   190f4:	add	sp, sp, #20
   190f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   190fc:	ldr	r3, [r4, #136]	; 0x88
   19100:	cmp	r3, #30
   19104:	bgt	19088 <print_full_field_name@@Base+0x780>
   19108:	bl	16abc <dim_enter_array@@Base>
   1910c:	ldr	r3, [r4, #136]	; 0x88
   19110:	ldr	r2, [r4, #3360]	; 0xd20
   19114:	add	r1, r3, #3
   19118:	add	r0, r3, #2
   1911c:	add	r2, r2, #1
   19120:	add	r3, r3, #1
   19124:	add	r1, r4, r1, lsl #2
   19128:	ldr	r0, [r4, r0, lsl #2]
   1912c:	str	r3, [r4, #136]	; 0x88
   19130:	str	r2, [r4, #3360]	; 0xd20
   19134:	bl	12504 <coda_type_get_array_base_type@plt>
   19138:	cmp	r0, #0
   1913c:	bne	191d8 <print_full_field_name@@Base+0x8d0>
   19140:	bl	18f0c <print_full_field_name@@Base+0x604>
   19144:	ldr	r2, [r4, #136]	; 0x88
   19148:	ldr	r3, [r4, #3360]	; 0xd20
   1914c:	sub	r2, r2, #1
   19150:	sub	r3, r3, #1
   19154:	str	r2, [r4, #136]	; 0x88
   19158:	str	r3, [r4, #3360]	; 0xd20
   1915c:	bl	174b0 <dim_leave_array@@Base>
   19160:	b	19088 <print_full_field_name@@Base+0x780>
   19164:	bl	1a974 <handle_coda_error@@Base>
   19168:	b	18f40 <print_full_field_name@@Base+0x638>
   1916c:	bl	16abc <dim_enter_array@@Base>
   19170:	ldr	r3, [r4, #3360]	; 0xd20
   19174:	add	r3, r3, #1
   19178:	str	r3, [r4, #3360]	; 0xd20
   1917c:	bl	18c40 <print_full_field_name@@Base+0x338>
   19180:	ldr	r3, [r4, #3360]	; 0xd20
   19184:	sub	r3, r3, #1
   19188:	str	r3, [r4, #3360]	; 0xd20
   1918c:	bl	174b0 <dim_leave_array@@Base>
   19190:	add	sp, sp, #20
   19194:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19198:	add	r3, r3, #2
   1919c:	add	r1, sp, #12
   191a0:	ldr	r0, [r4, r3, lsl #2]
   191a4:	bl	124e0 <coda_type_get_special_type@plt>
   191a8:	cmp	r0, #0
   191ac:	bne	19224 <print_full_field_name@@Base+0x91c>
   191b0:	ldr	r3, [sp, #12]
   191b4:	cmp	r3, #3
   191b8:	addls	pc, pc, r3, lsl #2
   191bc:	b	19088 <print_full_field_name@@Base+0x780>
   191c0:	b	19088 <print_full_field_name@@Base+0x780>
   191c4:	b	190f0 <print_full_field_name@@Base+0x7e8>
   191c8:	b	190f0 <print_full_field_name@@Base+0x7e8>
   191cc:	b	1916c <print_full_field_name@@Base+0x864>
   191d0:	bl	1a974 <handle_coda_error@@Base>
   191d4:	b	190e0 <print_full_field_name@@Base+0x7d8>
   191d8:	bl	1a974 <handle_coda_error@@Base>
   191dc:	b	19140 <print_full_field_name@@Base+0x838>
   191e0:	ldr	r3, [sp, #8]
   191e4:	str	r9, [sp, #12]
   191e8:	cmp	r3, #0
   191ec:	ble	19070 <print_full_field_name@@Base+0x768>
   191f0:	mov	r0, r9
   191f4:	mov	r5, r9
   191f8:	mov	r1, r5
   191fc:	bl	19294 <print_full_field_name@@Base+0x98c>
   19200:	ldr	r0, [sp, #12]
   19204:	ldr	r3, [sp, #8]
   19208:	add	r0, r0, #1
   1920c:	cmp	r3, r0
   19210:	str	r0, [sp, #12]
   19214:	bgt	191f8 <print_full_field_name@@Base+0x8f0>
   19218:	b	19070 <print_full_field_name@@Base+0x768>
   1921c:	bl	1a974 <handle_coda_error@@Base>
   19220:	b	190b8 <print_full_field_name@@Base+0x7b0>
   19224:	bl	1a974 <handle_coda_error@@Base>
   19228:	b	191b0 <print_full_field_name@@Base+0x8a8>
   1922c:	ldr	r3, [pc, #72]	; 1927c <print_full_field_name@@Base+0x974>
   19230:	ldr	r1, [pc, #72]	; 19280 <print_full_field_name@@Base+0x978>
   19234:	ldr	r0, [pc, #72]	; 19284 <print_full_field_name@@Base+0x97c>
   19238:	add	r3, pc, r3
   1923c:	ldr	r2, [pc, #68]	; 19288 <print_full_field_name@@Base+0x980>
   19240:	add	r3, r3, #20
   19244:	add	r1, pc, r1
   19248:	add	r0, pc, r0
   1924c:	bl	12660 <__assert_fail@plt>
   19250:	ldr	r3, [pc, #52]	; 1928c <print_full_field_name@@Base+0x984>
   19254:	ldr	r1, [pc, #52]	; 19290 <print_full_field_name@@Base+0x988>
   19258:	mov	r2, r5
   1925c:	ldr	r3, [r6, r3]
   19260:	add	r1, pc, r1
   19264:	ldr	r0, [r3]
   19268:	bl	12468 <fprintf@plt>
   1926c:	mov	r0, #1
   19270:	bl	12420 <exit@plt>
   19274:	ldrdeq	r4, [r1], -ip
   19278:			; <UNDEFINED> instruction: 0x000001b4
   1927c:	andeq	r2, r0, r0, asr #1
   19280:	andeq	r2, r0, ip, ror #1
   19284:	andeq	r2, r0, r0, lsl #3
   19288:	andeq	r0, r0, r9, lsl #3
   1928c:			; <UNDEFINED> instruction: 0x000001b8
   19290:	andeq	r2, r0, r8, ror r1
   19294:	push	{r4, r5, r6, r7, lr}
   19298:	mov	r5, r0
   1929c:	ldr	r7, [pc, #308]	; 193d8 <print_full_field_name@@Base+0xad0>
   192a0:	ldr	r3, [pc, #308]	; 193dc <print_full_field_name@@Base+0xad4>
   192a4:	add	r7, pc, r7
   192a8:	mov	r6, r1
   192ac:	ldr	r4, [r7, r3]
   192b0:	mov	r1, r0
   192b4:	sub	sp, sp, #12
   192b8:	ldr	r3, [r4, #3748]	; 0xea4
   192bc:	ldr	r0, [r4, #136]	; 0x88
   192c0:	mov	r2, sp
   192c4:	add	r0, r0, #1
   192c8:	add	r3, r4, r3, lsl #2
   192cc:	ldr	r0, [r4, r0, lsl #2]
   192d0:	str	r5, [r3, #3488]	; 0xda0
   192d4:	bl	12228 <coda_type_get_record_field_hidden_status@plt>
   192d8:	cmp	r0, #0
   192dc:	bne	193ac <print_full_field_name@@Base+0xaa4>
   192e0:	ldr	r3, [sp]
   192e4:	adds	r3, r3, #0
   192e8:	movne	r3, #1
   192ec:	cmp	r6, #0
   192f0:	movne	r3, #0
   192f4:	cmp	r3, #0
   192f8:	bne	19368 <print_full_field_name@@Base+0xa60>
   192fc:	ldr	r3, [pc, #220]	; 193e0 <print_full_field_name@@Base+0xad8>
   19300:	ldr	r3, [r7, r3]
   19304:	ldr	r3, [r3]
   19308:	cmp	r3, #0
   1930c:	ldr	r3, [r4, #136]	; 0x88
   19310:	bne	19370 <print_full_field_name@@Base+0xa68>
   19314:	sub	r3, r3, #1
   19318:	ldr	r2, [r4, #3748]	; 0xea4
   1931c:	add	r3, r3, #2
   19320:	add	r2, r2, #904	; 0x388
   19324:	ldr	r0, [r4, r3, lsl #2]
   19328:	add	r2, r4, r2, lsl #2
   1932c:	mov	r1, r5
   19330:	bl	12624 <coda_type_get_record_field_name@plt>
   19334:	cmp	r0, #0
   19338:	bne	193b4 <print_full_field_name@@Base+0xaac>
   1933c:	ldr	r3, [r4, #136]	; 0x88
   19340:	mov	r1, r5
   19344:	add	r2, r3, #2
   19348:	add	r3, r3, #1
   1934c:	add	r2, r4, r2, lsl #2
   19350:	ldr	r0, [r4, r3, lsl #2]
   19354:	bl	122dc <coda_type_get_record_field_type@plt>
   19358:	cmp	r0, #0
   1935c:	beq	19364 <print_full_field_name@@Base+0xa5c>
   19360:	bl	1a974 <handle_coda_error@@Base>
   19364:	bl	18f0c <print_full_field_name@@Base+0x604>
   19368:	add	sp, sp, #12
   1936c:	pop	{r4, r5, r6, r7, pc}
   19370:	add	r3, r3, #1
   19374:	add	r2, sp, #4
   19378:	mov	r1, r5
   1937c:	ldr	r0, [r4, r3, lsl #2]
   19380:	bl	12318 <coda_type_get_record_field_available_status@plt>
   19384:	cmp	r0, #0
   19388:	bne	193bc <print_full_field_name@@Base+0xab4>
   1938c:	ldr	r2, [sp, #4]
   19390:	cmn	r2, #1
   19394:	beq	193c4 <print_full_field_name@@Base+0xabc>
   19398:	ldr	r3, [r4, #136]	; 0x88
   1939c:	sub	r3, r3, #1
   193a0:	add	r1, r4, r3, lsl #2
   193a4:	str	r2, [r1, #3364]	; 0xd24
   193a8:	b	19318 <print_full_field_name@@Base+0xa10>
   193ac:	bl	1a974 <handle_coda_error@@Base>
   193b0:	b	192e0 <print_full_field_name@@Base+0x9d8>
   193b4:	bl	1a974 <handle_coda_error@@Base>
   193b8:	b	1933c <print_full_field_name@@Base+0xa34>
   193bc:	bl	1a974 <handle_coda_error@@Base>
   193c0:	b	1938c <print_full_field_name@@Base+0xa84>
   193c4:	bl	1763c <dim_record_field_available@@Base>
   193c8:	cmp	r0, #0
   193cc:	beq	19368 <print_full_field_name@@Base+0xa60>
   193d0:	ldr	r2, [sp, #4]
   193d4:	b	19398 <print_full_field_name@@Base+0xa90>
   193d8:	andeq	r3, r1, r4, asr sp
   193dc:			; <UNDEFINED> instruction: 0x000001b4
   193e0:			; <UNDEFINED> instruction: 0x000001b0

000193e4 <traverse_info_init@@Base>:
   193e4:	ldr	r3, [pc, #32]	; 1940c <traverse_info_init@@Base+0x28>
   193e8:	ldr	r1, [pc, #32]	; 19410 <traverse_info_init@@Base+0x2c>
   193ec:	add	r3, pc, r3
   193f0:	mov	r2, #0
   193f4:	ldr	r3, [r3, r1]
   193f8:	str	r2, [r3, #4]
   193fc:	str	r2, [r3, #136]	; 0x88
   19400:	str	r2, [r3, #3360]	; 0xd20
   19404:	str	r2, [r3, #3748]	; 0xea4
   19408:	bx	lr
   1940c:	andeq	r3, r1, ip, lsl #24
   19410:			; <UNDEFINED> instruction: 0x000001b4

00019414 <traverse_info_done@@Base>:
   19414:	ldr	r3, [pc, #52]	; 19450 <traverse_info_done@@Base+0x3c>
   19418:	ldr	r2, [pc, #52]	; 19454 <traverse_info_done@@Base+0x40>
   1941c:	add	r3, pc, r3
   19420:	push	{r4, lr}
   19424:	ldr	r4, [r3, r2]
   19428:	ldr	r0, [r4, #4]
   1942c:	cmp	r0, #0
   19430:	beq	19438 <traverse_info_done@@Base+0x24>
   19434:	bl	1254c <coda_close@plt>
   19438:	ldr	r3, [r4, #664]	; 0x298
   1943c:	cmp	r3, #0
   19440:	popeq	{r4, pc}
   19444:	add	r0, r4, #664	; 0x298
   19448:	pop	{r4, lr}
   1944c:	b	1764c <codadump_filter_remove@@Base>
   19450:	ldrdeq	r3, [r1], -ip
   19454:			; <UNDEFINED> instruction: 0x000001b4

00019458 <traverse_product@@Base>:
   19458:	ldr	r3, [pc, #188]	; 1951c <traverse_product@@Base+0xc4>
   1945c:	ldr	r2, [pc, #188]	; 19520 <traverse_product@@Base+0xc8>
   19460:	add	r3, pc, r3
   19464:	push	{r4, r5, r6, lr}
   19468:	ldr	r4, [r3, r2]
   1946c:	add	r5, r4, #4
   19470:	mov	r1, r5
   19474:	ldr	r0, [r4]
   19478:	bl	12264 <coda_open@plt>
   1947c:	cmp	r0, #0
   19480:	bne	194d8 <traverse_product@@Base+0x80>
   19484:	ldr	r1, [r4, #4]
   19488:	add	r0, r4, #144	; 0x90
   1948c:	bl	12390 <coda_cursor_set_product@plt>
   19490:	cmp	r0, #0
   19494:	bne	194d0 <traverse_product@@Base+0x78>
   19498:	ldr	r1, [r4, #136]	; 0x88
   1949c:	add	r0, r4, #144	; 0x90
   194a0:	add	r1, r1, #2
   194a4:	add	r1, r4, r1, lsl #2
   194a8:	bl	122e8 <coda_cursor_get_type@plt>
   194ac:	cmp	r0, #0
   194b0:	beq	194b8 <traverse_product@@Base+0x60>
   194b4:	bl	1a974 <handle_coda_error@@Base>
   194b8:	bl	18f0c <print_full_field_name@@Base+0x604>
   194bc:	ldr	r0, [r4, #4]
   194c0:	bl	1254c <coda_close@plt>
   194c4:	mov	r3, #0
   194c8:	str	r3, [r4, #4]
   194cc:	pop	{r4, r5, r6, pc}
   194d0:	bl	1a974 <handle_coda_error@@Base>
   194d4:	b	19498 <traverse_product@@Base+0x40>
   194d8:	bl	1260c <coda_get_errno@plt>
   194dc:	ldr	r3, [r0]
   194e0:	cmn	r3, #21
   194e4:	beq	194f0 <traverse_product@@Base+0x98>
   194e8:	bl	1a974 <handle_coda_error@@Base>
   194ec:	b	19484 <traverse_product@@Base+0x2c>
   194f0:	mov	r0, #0
   194f4:	bl	122ac <coda_set_option_use_mmap@plt>
   194f8:	mov	r1, r5
   194fc:	ldr	r0, [r4]
   19500:	bl	12264 <coda_open@plt>
   19504:	mov	r5, r0
   19508:	mov	r0, #1
   1950c:	bl	122ac <coda_set_option_use_mmap@plt>
   19510:	cmp	r5, #0
   19514:	bne	194e8 <traverse_product@@Base+0x90>
   19518:	b	19484 <traverse_product@@Base+0x2c>
   1951c:	muleq	r1, r8, fp
   19520:			; <UNDEFINED> instruction: 0x000001b4
   19524:	push	{r0, r1, r2, r3}
   19528:	ldr	r3, [pc, #52]	; 19564 <traverse_product@@Base+0x10c>
   1952c:	ldr	r1, [pc, #52]	; 19568 <traverse_product@@Base+0x110>
   19530:	push	{lr}		; (str lr, [sp, #-4]!)
   19534:	add	r3, pc, r3
   19538:	sub	sp, sp, #12
   1953c:	add	r2, sp, #20
   19540:	str	r2, [sp, #4]
   19544:	ldr	r0, [r3, r1]
   19548:	ldr	r1, [sp, #16]
   1954c:	ldr	r0, [r0]
   19550:	bl	12564 <vfprintf@plt>
   19554:	add	sp, sp, #12
   19558:	pop	{lr}		; (ldr lr, [sp], #4)
   1955c:	add	sp, sp, #16
   19560:	bx	lr
   19564:	andeq	r3, r1, r4, asr #21
   19568:			; <UNDEFINED> instruction: 0x000001bc
   1956c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19570:	subs	r4, r1, #0
   19574:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19578:	ldr	r8, [pc, #248]	; 19678 <traverse_product@@Base+0x220>
   1957c:	ldr	sl, [pc, #248]	; 1967c <traverse_product@@Base+0x224>
   19580:	ldr	r9, [pc, #248]	; 19680 <traverse_product@@Base+0x228>
   19584:	ldr	r7, [pc, #248]	; 19684 <traverse_product@@Base+0x22c>
   19588:	ldr	r6, [pc, #248]	; 19688 <traverse_product@@Base+0x230>
   1958c:	ldr	r5, [pc, #248]	; 1968c <traverse_product@@Base+0x234>
   19590:	mov	fp, r0
   19594:	add	r8, pc, r8
   19598:	add	sl, pc, sl
   1959c:	add	r9, pc, r9
   195a0:	add	r7, pc, r7
   195a4:	add	r6, pc, r6
   195a8:	add	r5, pc, r5
   195ac:	add	r4, r0, r4
   195b0:	b	195e8 <traverse_product@@Base+0x190>
   195b4:	cmp	r1, #9
   195b8:	beq	19668 <traverse_product@@Base+0x210>
   195bc:	cmp	r1, #10
   195c0:	beq	19658 <traverse_product@@Base+0x200>
   195c4:	cmp	r1, #8
   195c8:	beq	19648 <traverse_product@@Base+0x1f0>
   195cc:	sub	r3, r1, #32
   195d0:	cmp	r3, #94	; 0x5e
   195d4:	movls	r0, r9
   195d8:	movhi	r0, sl
   195dc:	bl	19524 <traverse_product@@Base+0xcc>
   195e0:	cmp	fp, r4
   195e4:	beq	19620 <traverse_product@@Base+0x1c8>
   195e8:	ldrb	r1, [fp], #1
   195ec:	cmp	r1, #12
   195f0:	beq	19624 <traverse_product@@Base+0x1cc>
   195f4:	bls	195b4 <traverse_product@@Base+0x15c>
   195f8:	cmp	r1, #34	; 0x22
   195fc:	beq	1963c <traverse_product@@Base+0x1e4>
   19600:	cmp	r1, #92	; 0x5c
   19604:	beq	19630 <traverse_product@@Base+0x1d8>
   19608:	cmp	r1, #13
   1960c:	bne	195cc <traverse_product@@Base+0x174>
   19610:	mov	r0, r5
   19614:	bl	19524 <traverse_product@@Base+0xcc>
   19618:	cmp	fp, r4
   1961c:	bne	195e8 <traverse_product@@Base+0x190>
   19620:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19624:	mov	r0, r8
   19628:	bl	19524 <traverse_product@@Base+0xcc>
   1962c:	b	195e0 <traverse_product@@Base+0x188>
   19630:	mov	r0, r6
   19634:	bl	19524 <traverse_product@@Base+0xcc>
   19638:	b	195e0 <traverse_product@@Base+0x188>
   1963c:	mov	r0, r7
   19640:	bl	19524 <traverse_product@@Base+0xcc>
   19644:	b	195e0 <traverse_product@@Base+0x188>
   19648:	ldr	r0, [pc, #64]	; 19690 <traverse_product@@Base+0x238>
   1964c:	add	r0, pc, r0
   19650:	bl	19524 <traverse_product@@Base+0xcc>
   19654:	b	195e0 <traverse_product@@Base+0x188>
   19658:	ldr	r0, [pc, #52]	; 19694 <traverse_product@@Base+0x23c>
   1965c:	add	r0, pc, r0
   19660:	bl	19524 <traverse_product@@Base+0xcc>
   19664:	b	195e0 <traverse_product@@Base+0x188>
   19668:	ldr	r0, [pc, #40]	; 19698 <traverse_product@@Base+0x240>
   1966c:	add	r0, pc, r0
   19670:	bl	19524 <traverse_product@@Base+0xcc>
   19674:	b	195e0 <traverse_product@@Base+0x188>
   19678:	andeq	r1, r0, r4, lsl #15
   1967c:	andeq	r1, r0, r8, ror ip
   19680:	strdeq	r1, [r0], -r8
   19684:	andeq	r1, r0, ip, ror #24
   19688:	andeq	r1, r0, ip, ror r7
   1968c:	andeq	r1, r0, r4, ror r7
   19690:			; <UNDEFINED> instruction: 0x000016bc
   19694:			; <UNDEFINED> instruction: 0x000016b4
   19698:	andeq	r1, r0, r0, lsr #13
   1969c:	ldr	r3, [pc, #120]	; 1971c <traverse_product@@Base+0x2c4>
   196a0:	push	{r4, r5, r6, r7, r8, lr}
   196a4:	add	r3, pc, r3
   196a8:	ldr	r2, [pc, #112]	; 19720 <traverse_product@@Base+0x2c8>
   196ac:	ldr	r4, [r3]
   196b0:	add	r2, pc, r2
   196b4:	cmp	r4, #0
   196b8:	blt	196fc <traverse_product@@Base+0x2a4>
   196bc:	beq	196f8 <traverse_product@@Base+0x2a0>
   196c0:	ldr	r3, [pc, #92]	; 19724 <traverse_product@@Base+0x2cc>
   196c4:	ldr	r8, [pc, #92]	; 19728 <traverse_product@@Base+0x2d0>
   196c8:	mov	r7, #2
   196cc:	ldr	r6, [r2, r3]
   196d0:	add	r8, pc, r8
   196d4:	mov	r5, #1
   196d8:	ldr	r3, [r6]
   196dc:	mov	r2, r7
   196e0:	mov	r1, r5
   196e4:	mov	r0, r8
   196e8:	bl	12384 <fwrite@plt>
   196ec:	subs	r4, r4, #1
   196f0:	bne	196d8 <traverse_product@@Base+0x280>
   196f4:	pop	{r4, r5, r6, r7, r8, pc}
   196f8:	pop	{r4, r5, r6, r7, r8, pc}
   196fc:	ldr	r3, [pc, #40]	; 1972c <traverse_product@@Base+0x2d4>
   19700:	ldr	r1, [pc, #40]	; 19730 <traverse_product@@Base+0x2d8>
   19704:	ldr	r0, [pc, #40]	; 19734 <traverse_product@@Base+0x2dc>
   19708:	add	r3, pc, r3
   1970c:	mov	r2, #44	; 0x2c
   19710:	add	r1, pc, r1
   19714:	add	r0, pc, r0
   19718:	bl	12660 <__assert_fail@plt>
   1971c:	andeq	r3, r1, r8, ror #22
   19720:	andeq	r3, r1, r8, asr #18
   19724:			; <UNDEFINED> instruction: 0x000001bc
   19728:	andeq	r1, r0, ip, lsr #13
   1972c:	andeq	r1, r0, r4, lsl #26
   19730:	andeq	r1, r0, r4, lsl #26
   19734:	andeq	r1, r0, r8, ror #13
   19738:	push	{r0, r1, r2, r3}
   1973c:	push	{r4, lr}
   19740:	sub	sp, sp, #8
   19744:	ldr	r4, [pc, #52]	; 19780 <traverse_product@@Base+0x328>
   19748:	bl	1969c <traverse_product@@Base+0x244>
   1974c:	ldr	r1, [pc, #48]	; 19784 <traverse_product@@Base+0x32c>
   19750:	add	r4, pc, r4
   19754:	add	r2, sp, #20
   19758:	str	r2, [sp, #4]
   1975c:	ldr	r0, [r4, r1]
   19760:	ldr	r1, [sp, #16]
   19764:	mov	r3, r4
   19768:	ldr	r0, [r0]
   1976c:	bl	12564 <vfprintf@plt>
   19770:	add	sp, sp, #8
   19774:	pop	{r4, lr}
   19778:	add	sp, sp, #16
   1977c:	bx	lr
   19780:	andeq	r3, r1, r8, lsr #17
   19784:			; <UNDEFINED> instruction: 0x000001bc
   19788:	ldr	r3, [pc, #2460]	; 1a12c <traverse_product@@Base+0xcd4>
   1978c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19790:	add	r3, pc, r3
   19794:	mov	r2, #0
   19798:	ldr	r3, [r3, #4]
   1979c:	sub	sp, sp, #76	; 0x4c
   197a0:	cmp	r3, r2
   197a4:	mov	r7, r1
   197a8:	str	r2, [sp, #12]
   197ac:	mov	r4, r0
   197b0:	bne	19a94 <traverse_product@@Base+0x63c>
   197b4:	add	r1, sp, #8
   197b8:	mov	r0, r4
   197bc:	bl	12330 <coda_cursor_get_type_class@plt>
   197c0:	cmp	r0, #0
   197c4:	bne	19a8c <traverse_product@@Base+0x634>
   197c8:	ldr	r3, [sp, #8]
   197cc:	cmp	r3, #6
   197d0:	addls	pc, pc, r3, lsl #2
   197d4:	b	198e0 <traverse_product@@Base+0x488>
   197d8:	b	197f4 <traverse_product@@Base+0x39c>
   197dc:	b	1999c <traverse_product@@Base+0x544>
   197e0:	b	1993c <traverse_product@@Base+0x4e4>
   197e4:	b	1993c <traverse_product@@Base+0x4e4>
   197e8:	b	1993c <traverse_product@@Base+0x4e4>
   197ec:	b	1993c <traverse_product@@Base+0x4e4>
   197f0:	b	19908 <traverse_product@@Base+0x4b0>
   197f4:	add	r1, sp, #16
   197f8:	mov	r0, r4
   197fc:	bl	12288 <coda_cursor_get_num_elements@plt>
   19800:	cmp	r0, #0
   19804:	beq	1980c <traverse_product@@Base+0x3b4>
   19808:	bl	1a974 <handle_coda_error@@Base>
   1980c:	ldr	r3, [sp, #16]
   19810:	cmp	r3, #0
   19814:	ble	19d58 <traverse_product@@Base+0x900>
   19818:	cmp	r7, #0
   1981c:	bne	19c94 <traverse_product@@Base+0x83c>
   19820:	add	r1, sp, #20
   19824:	mov	r0, r4
   19828:	bl	122e8 <coda_cursor_get_type@plt>
   1982c:	cmp	r0, #0
   19830:	bne	19c8c <traverse_product@@Base+0x834>
   19834:	add	r1, sp, #24
   19838:	ldr	r0, [sp, #20]
   1983c:	bl	124ec <coda_type_get_record_union_status@plt>
   19840:	cmp	r0, #0
   19844:	bne	19c84 <traverse_product@@Base+0x82c>
   19848:	ldr	r3, [sp, #24]
   1984c:	cmp	r3, #0
   19850:	beq	19b4c <traverse_product@@Base+0x6f4>
   19854:	add	r1, sp, #28
   19858:	mov	r0, r4
   1985c:	bl	125dc <coda_cursor_get_available_union_field_index@plt>
   19860:	cmp	r0, #0
   19864:	bne	19ff8 <traverse_product@@Base+0xba0>
   19868:	add	r2, sp, #40	; 0x28
   1986c:	ldr	r1, [sp, #28]
   19870:	ldr	r0, [sp, #20]
   19874:	bl	12624 <coda_type_get_record_field_name@plt>
   19878:	cmp	r0, #0
   1987c:	bne	19ff0 <traverse_product@@Base+0xb98>
   19880:	ldr	r1, [sp, #28]
   19884:	mov	r0, r4
   19888:	bl	123a8 <coda_cursor_goto_record_field_by_index@plt>
   1988c:	cmp	r0, #0
   19890:	bne	19fe8 <traverse_product@@Base+0xb90>
   19894:	cmp	r7, #0
   19898:	bne	19fe0 <traverse_product@@Base+0xb88>
   1989c:	ldr	r5, [pc, #2188]	; 1a130 <traverse_product@@Base+0xcd8>
   198a0:	ldr	r0, [pc, #2188]	; 1a134 <traverse_product@@Base+0xcdc>
   198a4:	add	r5, pc, r5
   198a8:	ldr	r1, [sp, #40]	; 0x28
   198ac:	add	r0, pc, r0
   198b0:	bl	19524 <traverse_product@@Base+0xcc>
   198b4:	ldr	r3, [r5]
   198b8:	mov	r1, #1
   198bc:	add	r3, r3, r1
   198c0:	mov	r0, r4
   198c4:	str	r3, [r5]
   198c8:	bl	19788 <traverse_product@@Base+0x330>
   198cc:	ldr	r3, [r5]
   198d0:	mov	r0, r4
   198d4:	sub	r3, r3, #1
   198d8:	str	r3, [r5]
   198dc:	bl	12408 <coda_cursor_goto_parent@plt>
   198e0:	ldr	r3, [sp, #12]
   198e4:	cmp	r3, #0
   198e8:	beq	19900 <traverse_product@@Base+0x4a8>
   198ec:	ldr	r2, [pc, #2116]	; 1a138 <traverse_product@@Base+0xce0>
   198f0:	add	r2, pc, r2
   198f4:	ldr	r3, [r2]
   198f8:	sub	r3, r3, #1
   198fc:	str	r3, [r2]
   19900:	add	sp, sp, #76	; 0x4c
   19904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19908:	add	r1, sp, #28
   1990c:	mov	r0, r4
   19910:	bl	1236c <coda_cursor_get_special_type@plt>
   19914:	cmp	r0, #0
   19918:	bne	19b24 <traverse_product@@Base+0x6cc>
   1991c:	ldr	r3, [sp, #28]
   19920:	cmp	r3, #3
   19924:	addls	pc, pc, r3, lsl #2
   19928:	b	198e0 <traverse_product@@Base+0x488>
   1992c:	b	19cd8 <traverse_product@@Base+0x880>
   19930:	b	19ce8 <traverse_product@@Base+0x890>
   19934:	b	19d10 <traverse_product@@Base+0x8b8>
   19938:	b	19ca4 <traverse_product@@Base+0x84c>
   1993c:	add	r1, sp, #28
   19940:	mov	r0, r4
   19944:	bl	123cc <coda_cursor_get_read_type@plt>
   19948:	cmp	r0, #0
   1994c:	bne	19b34 <traverse_product@@Base+0x6dc>
   19950:	ldr	r3, [sp, #28]
   19954:	add	r3, r3, #1
   19958:	cmp	r3, #13
   1995c:	addls	pc, pc, r3, lsl #2
   19960:	b	198e0 <traverse_product@@Base+0x488>
   19964:	b	19fac <traverse_product@@Base+0xb54>
   19968:	b	19e54 <traverse_product@@Base+0x9fc>
   1996c:	b	19f14 <traverse_product@@Base+0xabc>
   19970:	b	19e54 <traverse_product@@Base+0x9fc>
   19974:	b	19f14 <traverse_product@@Base+0xabc>
   19978:	b	19e54 <traverse_product@@Base+0x9fc>
   1997c:	b	19f14 <traverse_product@@Base+0xabc>
   19980:	b	19f3c <traverse_product@@Base+0xae4>
   19984:	b	19f74 <traverse_product@@Base+0xb1c>
   19988:	b	19d68 <traverse_product@@Base+0x910>
   1998c:	b	19d68 <traverse_product@@Base+0x910>
   19990:	b	19d9c <traverse_product@@Base+0x944>
   19994:	b	19ddc <traverse_product@@Base+0x984>
   19998:	b	19e7c <traverse_product@@Base+0xa24>
   1999c:	add	r5, sp, #40	; 0x28
   199a0:	mov	r2, r5
   199a4:	add	r1, sp, #32
   199a8:	mov	r0, r4
   199ac:	bl	12534 <coda_cursor_get_array_dim@plt>
   199b0:	cmp	r0, #0
   199b4:	bne	19b2c <traverse_product@@Base+0x6d4>
   199b8:	ldr	r8, [sp, #32]
   199bc:	cmp	r8, #0
   199c0:	blt	19b3c <traverse_product@@Base+0x6e4>
   199c4:	beq	1a008 <traverse_product@@Base+0xbb0>
   199c8:	add	r8, r5, r8, lsl #2
   199cc:	mov	r7, #1
   199d0:	ldr	r3, [r5], #4
   199d4:	cmp	r5, r8
   199d8:	mul	r7, r3, r7
   199dc:	bne	199d0 <traverse_product@@Base+0x578>
   199e0:	cmp	r7, #0
   199e4:	subgt	r8, r7, #1
   199e8:	ble	19b3c <traverse_product@@Base+0x6e4>
   199ec:	ldr	r0, [pc, #1864]	; 1a13c <traverse_product@@Base+0xce4>
   199f0:	add	r0, pc, r0
   199f4:	bl	19524 <traverse_product@@Base+0xcc>
   199f8:	mov	r0, r4
   199fc:	bl	12378 <coda_cursor_goto_first_array_element@plt>
   19a00:	cmp	r0, #0
   19a04:	bne	19fd8 <traverse_product@@Base+0xb80>
   19a08:	ldr	sl, [pc, #1840]	; 1a140 <traverse_product@@Base+0xce8>
   19a0c:	ldr	r6, [pc, #1840]	; 1a144 <traverse_product@@Base+0xcec>
   19a10:	mov	r5, #0
   19a14:	add	sl, pc, sl
   19a18:	add	r6, pc, r6
   19a1c:	mov	r9, r5
   19a20:	b	19a2c <traverse_product@@Base+0x5d4>
   19a24:	cmp	r7, r5
   19a28:	ble	19a80 <traverse_product@@Base+0x628>
   19a2c:	mov	r0, sl
   19a30:	bl	19738 <traverse_product@@Base+0x2e0>
   19a34:	ldr	r3, [r6]
   19a38:	mov	r0, r4
   19a3c:	add	r3, r3, #1
   19a40:	mov	r1, r9
   19a44:	str	r3, [r6]
   19a48:	bl	19788 <traverse_product@@Base+0x330>
   19a4c:	ldr	r3, [r6]
   19a50:	cmp	r5, r8
   19a54:	sub	r3, r3, #1
   19a58:	mov	r0, r4
   19a5c:	add	r5, r5, #1
   19a60:	str	r3, [r6]
   19a64:	bge	19a24 <traverse_product@@Base+0x5cc>
   19a68:	bl	12474 <coda_cursor_goto_next_array_element@plt>
   19a6c:	cmp	r0, #0
   19a70:	beq	19a24 <traverse_product@@Base+0x5cc>
   19a74:	bl	1a974 <handle_coda_error@@Base>
   19a78:	cmp	r7, r5
   19a7c:	bgt	19a2c <traverse_product@@Base+0x5d4>
   19a80:	mov	r0, r4
   19a84:	bl	12408 <coda_cursor_goto_parent@plt>
   19a88:	b	198e0 <traverse_product@@Base+0x488>
   19a8c:	bl	1a974 <handle_coda_error@@Base>
   19a90:	b	197c8 <traverse_product@@Base+0x370>
   19a94:	add	r1, sp, #12
   19a98:	bl	12324 <coda_cursor_has_attributes@plt>
   19a9c:	cmp	r0, #0
   19aa0:	bne	19c64 <traverse_product@@Base+0x80c>
   19aa4:	ldr	r3, [sp, #12]
   19aa8:	cmp	r3, #0
   19aac:	beq	197b4 <traverse_product@@Base+0x35c>
   19ab0:	cmp	r7, #0
   19ab4:	bne	19fc4 <traverse_product@@Base+0xb6c>
   19ab8:	ldr	r0, [pc, #1672]	; 1a148 <traverse_product@@Base+0xcf0>
   19abc:	add	r0, pc, r0
   19ac0:	bl	19524 <traverse_product@@Base+0xcc>
   19ac4:	mov	r0, r4
   19ac8:	bl	124a4 <coda_cursor_goto_attributes@plt>
   19acc:	cmp	r0, #0
   19ad0:	bne	19fbc <traverse_product@@Base+0xb64>
   19ad4:	ldr	r5, [pc, #1648]	; 1a14c <traverse_product@@Base+0xcf4>
   19ad8:	mov	r1, #1
   19adc:	add	r5, pc, r5
   19ae0:	mov	r0, r4
   19ae4:	ldr	r3, [r5]
   19ae8:	add	r3, r3, r1
   19aec:	str	r3, [r5]
   19af0:	bl	19788 <traverse_product@@Base+0x330>
   19af4:	ldr	r3, [r5]
   19af8:	mov	r0, r4
   19afc:	sub	r3, r3, #1
   19b00:	str	r3, [r5]
   19b04:	bl	12408 <coda_cursor_goto_parent@plt>
   19b08:	ldr	r0, [pc, #1600]	; 1a150 <traverse_product@@Base+0xcf8>
   19b0c:	add	r0, pc, r0
   19b10:	bl	19738 <traverse_product@@Base+0x2e0>
   19b14:	ldr	r3, [r5]
   19b18:	add	r3, r3, #1
   19b1c:	str	r3, [r5]
   19b20:	b	197b4 <traverse_product@@Base+0x35c>
   19b24:	bl	1a974 <handle_coda_error@@Base>
   19b28:	b	1991c <traverse_product@@Base+0x4c4>
   19b2c:	bl	1a974 <handle_coda_error@@Base>
   19b30:	b	199b8 <traverse_product@@Base+0x560>
   19b34:	bl	1a974 <handle_coda_error@@Base>
   19b38:	b	19950 <traverse_product@@Base+0x4f8>
   19b3c:	ldr	r0, [pc, #1552]	; 1a154 <traverse_product@@Base+0xcfc>
   19b40:	add	r0, pc, r0
   19b44:	bl	19524 <traverse_product@@Base+0xcc>
   19b48:	b	198e0 <traverse_product@@Base+0x488>
   19b4c:	mov	r0, r4
   19b50:	bl	1239c <coda_cursor_goto_first_record_field@plt>
   19b54:	cmp	r0, #0
   19b58:	bne	1a000 <traverse_product@@Base+0xba8>
   19b5c:	ldr	r3, [sp, #16]
   19b60:	mov	r1, #0
   19b64:	cmp	r3, r1
   19b68:	str	r1, [sp, #28]
   19b6c:	ble	19a80 <traverse_product@@Base+0x628>
   19b70:	ldr	fp, [pc, #1504]	; 1a158 <traverse_product@@Base+0xd00>
   19b74:	ldr	r8, [pc, #1504]	; 1a15c <traverse_product@@Base+0xd04>
   19b78:	mov	r6, #1
   19b7c:	add	fp, pc, fp
   19b80:	add	r8, pc, r8
   19b84:	add	r5, sp, #40	; 0x28
   19b88:	add	r9, sp, #32
   19b8c:	b	19bc0 <traverse_product@@Base+0x768>
   19b90:	ldr	sl, [sp, #40]	; 0x28
   19b94:	cmp	sl, #0
   19b98:	beq	19be4 <traverse_product@@Base+0x78c>
   19b9c:	ldr	r3, [sp, #16]
   19ba0:	ldr	r1, [sp, #28]
   19ba4:	sub	r2, r3, #1
   19ba8:	cmp	r2, r1
   19bac:	bgt	19c48 <traverse_product@@Base+0x7f0>
   19bb0:	add	r1, r1, #1
   19bb4:	cmp	r1, r3
   19bb8:	str	r1, [sp, #28]
   19bbc:	bge	19a80 <traverse_product@@Base+0x628>
   19bc0:	mov	r2, r5
   19bc4:	ldr	r0, [sp, #20]
   19bc8:	bl	12228 <coda_type_get_record_field_hidden_status@plt>
   19bcc:	cmp	r0, #0
   19bd0:	beq	19b90 <traverse_product@@Base+0x738>
   19bd4:	bl	1a974 <handle_coda_error@@Base>
   19bd8:	ldr	sl, [sp, #40]	; 0x28
   19bdc:	cmp	sl, #0
   19be0:	bne	19b9c <traverse_product@@Base+0x744>
   19be4:	mov	r2, r9
   19be8:	ldr	r1, [sp, #28]
   19bec:	ldr	r0, [sp, #20]
   19bf0:	bl	12624 <coda_type_get_record_field_name@plt>
   19bf4:	cmp	r0, #0
   19bf8:	bne	19c7c <traverse_product@@Base+0x824>
   19bfc:	eor	r6, r6, #1
   19c00:	cmp	r7, #0
   19c04:	orrne	r6, r6, #1
   19c08:	tst	r6, #1
   19c0c:	bne	19c74 <traverse_product@@Base+0x81c>
   19c10:	ldr	r1, [sp, #32]
   19c14:	mov	r0, fp
   19c18:	bl	19524 <traverse_product@@Base+0xcc>
   19c1c:	ldr	r2, [r8]
   19c20:	mov	r1, #1
   19c24:	add	r2, r2, r1
   19c28:	mov	r0, r4
   19c2c:	str	r2, [r8]
   19c30:	bl	19788 <traverse_product@@Base+0x330>
   19c34:	ldr	r2, [r8]
   19c38:	mov	r6, sl
   19c3c:	sub	r3, r2, #1
   19c40:	str	r3, [r8]
   19c44:	b	19b9c <traverse_product@@Base+0x744>
   19c48:	mov	r0, r4
   19c4c:	bl	12594 <coda_cursor_goto_next_record_field@plt>
   19c50:	cmp	r0, #0
   19c54:	bne	19c6c <traverse_product@@Base+0x814>
   19c58:	ldr	r3, [sp, #16]
   19c5c:	ldr	r1, [sp, #28]
   19c60:	b	19bb0 <traverse_product@@Base+0x758>
   19c64:	bl	1a974 <handle_coda_error@@Base>
   19c68:	b	19aa4 <traverse_product@@Base+0x64c>
   19c6c:	bl	1a974 <handle_coda_error@@Base>
   19c70:	b	19c58 <traverse_product@@Base+0x800>
   19c74:	bl	1969c <traverse_product@@Base+0x244>
   19c78:	b	19c10 <traverse_product@@Base+0x7b8>
   19c7c:	bl	1a974 <handle_coda_error@@Base>
   19c80:	b	19bfc <traverse_product@@Base+0x7a4>
   19c84:	bl	1a974 <handle_coda_error@@Base>
   19c88:	b	19848 <traverse_product@@Base+0x3f0>
   19c8c:	bl	1a974 <handle_coda_error@@Base>
   19c90:	b	19834 <traverse_product@@Base+0x3dc>
   19c94:	ldr	r0, [pc, #1220]	; 1a160 <traverse_product@@Base+0xd08>
   19c98:	add	r0, pc, r0
   19c9c:	bl	19524 <traverse_product@@Base+0xcc>
   19ca0:	b	19820 <traverse_product@@Base+0x3c8>
   19ca4:	mov	r0, r4
   19ca8:	add	r2, sp, #40	; 0x28
   19cac:	add	r1, sp, #32
   19cb0:	bl	124f8 <coda_cursor_read_complex_double_split@plt>
   19cb4:	cmp	r0, #0
   19cb8:	bne	1a018 <traverse_product@@Base+0xbc0>
   19cbc:	ldrd	r4, [sp, #40]	; 0x28
   19cc0:	ldr	r0, [pc, #1180]	; 1a164 <traverse_product@@Base+0xd0c>
   19cc4:	ldrd	r2, [sp, #32]
   19cc8:	strd	r4, [sp]
   19ccc:	add	r0, pc, r0
   19cd0:	bl	19524 <traverse_product@@Base+0xcc>
   19cd4:	b	198e0 <traverse_product@@Base+0x488>
   19cd8:	ldr	r0, [pc, #1160]	; 1a168 <traverse_product@@Base+0xd10>
   19cdc:	add	r0, pc, r0
   19ce0:	bl	19524 <traverse_product@@Base+0xcc>
   19ce4:	b	198e0 <traverse_product@@Base+0x488>
   19ce8:	mov	r0, r4
   19cec:	add	r1, sp, #40	; 0x28
   19cf0:	bl	12450 <coda_cursor_read_double@plt>
   19cf4:	cmp	r0, #0
   19cf8:	bne	1a020 <traverse_product@@Base+0xbc8>
   19cfc:	ldr	r0, [pc, #1128]	; 1a16c <traverse_product@@Base+0xd14>
   19d00:	ldrd	r2, [sp, #40]	; 0x28
   19d04:	add	r0, pc, r0
   19d08:	bl	19524 <traverse_product@@Base+0xcc>
   19d0c:	b	198e0 <traverse_product@@Base+0x488>
   19d10:	mov	r0, r4
   19d14:	add	r1, sp, #32
   19d18:	bl	12450 <coda_cursor_read_double@plt>
   19d1c:	cmp	r0, #0
   19d20:	bne	1a010 <traverse_product@@Base+0xbb8>
   19d24:	vldr	d0, [sp, #32]
   19d28:	bl	1245c <coda_isNaN@plt>
   19d2c:	cmp	r0, #0
   19d30:	bne	19d44 <traverse_product@@Base+0x8ec>
   19d34:	vldr	d0, [sp, #32]
   19d38:	bl	12300 <coda_isInf@plt>
   19d3c:	cmp	r0, #0
   19d40:	beq	1a040 <traverse_product@@Base+0xbe8>
   19d44:	ldr	r0, [pc, #1060]	; 1a170 <traverse_product@@Base+0xd18>
   19d48:	ldrd	r2, [sp, #32]
   19d4c:	add	r0, pc, r0
   19d50:	bl	19524 <traverse_product@@Base+0xcc>
   19d54:	b	198e0 <traverse_product@@Base+0x488>
   19d58:	ldr	r0, [pc, #1044]	; 1a174 <traverse_product@@Base+0xd1c>
   19d5c:	add	r0, pc, r0
   19d60:	bl	19524 <traverse_product@@Base+0xcc>
   19d64:	b	198e0 <traverse_product@@Base+0x488>
   19d68:	mov	r0, r4
   19d6c:	add	r1, sp, #40	; 0x28
   19d70:	bl	12450 <coda_cursor_read_double@plt>
   19d74:	cmp	r0, #0
   19d78:	bne	1a080 <traverse_product@@Base+0xc28>
   19d7c:	ldr	r3, [sp, #28]
   19d80:	cmp	r3, #8
   19d84:	ldrd	r2, [sp, #40]	; 0x28
   19d88:	beq	1a0a8 <traverse_product@@Base+0xc50>
   19d8c:	ldr	r0, [pc, #996]	; 1a178 <traverse_product@@Base+0xd20>
   19d90:	add	r0, pc, r0
   19d94:	bl	19524 <traverse_product@@Base+0xcc>
   19d98:	b	198e0 <traverse_product@@Base+0x488>
   19d9c:	add	r5, sp, #40	; 0x28
   19da0:	mov	r0, r4
   19da4:	mov	r1, r5
   19da8:	bl	124b0 <coda_cursor_read_char@plt>
   19dac:	cmp	r0, #0
   19db0:	bne	1a070 <traverse_product@@Base+0xc18>
   19db4:	ldr	r0, [pc, #960]	; 1a17c <traverse_product@@Base+0xd24>
   19db8:	add	r0, pc, r0
   19dbc:	bl	19524 <traverse_product@@Base+0xcc>
   19dc0:	mov	r0, r5
   19dc4:	mov	r1, #1
   19dc8:	bl	1956c <traverse_product@@Base+0x114>
   19dcc:	ldr	r0, [pc, #940]	; 1a180 <traverse_product@@Base+0xd28>
   19dd0:	add	r0, pc, r0
   19dd4:	bl	19524 <traverse_product@@Base+0xcc>
   19dd8:	b	198e0 <traverse_product@@Base+0x488>
   19ddc:	add	r1, sp, #40	; 0x28
   19de0:	mov	r0, r4
   19de4:	bl	12438 <coda_cursor_get_string_length@plt>
   19de8:	cmp	r0, #0
   19dec:	bne	1a088 <traverse_product@@Base+0xc30>
   19df0:	ldr	r0, [sp, #40]	; 0x28
   19df4:	add	r0, r0, #1
   19df8:	bl	123d8 <malloc@plt>
   19dfc:	subs	r5, r0, #0
   19e00:	beq	1a0cc <traverse_product@@Base+0xc74>
   19e04:	ldr	r2, [sp, #40]	; 0x28
   19e08:	mov	r0, r4
   19e0c:	add	r2, r2, #1
   19e10:	mov	r1, r5
   19e14:	bl	123fc <coda_cursor_read_string@plt>
   19e18:	cmp	r0, #0
   19e1c:	bne	1a038 <traverse_product@@Base+0xbe0>
   19e20:	ldr	r0, [pc, #860]	; 1a184 <traverse_product@@Base+0xd2c>
   19e24:	add	r0, pc, r0
   19e28:	bl	19524 <traverse_product@@Base+0xcc>
   19e2c:	ldr	r1, [sp, #40]	; 0x28
   19e30:	mov	r0, r5
   19e34:	bl	1956c <traverse_product@@Base+0x114>
   19e38:	ldr	r0, [pc, #840]	; 1a188 <traverse_product@@Base+0xd30>
   19e3c:	ldr	r1, [sp, #40]	; 0x28
   19e40:	add	r0, pc, r0
   19e44:	bl	19524 <traverse_product@@Base+0xcc>
   19e48:	mov	r0, r5
   19e4c:	bl	122a0 <free@plt>
   19e50:	b	198e0 <traverse_product@@Base+0x488>
   19e54:	mov	r0, r4
   19e58:	add	r1, sp, #40	; 0x28
   19e5c:	bl	125e8 <coda_cursor_read_int32@plt>
   19e60:	cmp	r0, #0
   19e64:	bne	1a078 <traverse_product@@Base+0xc20>
   19e68:	ldr	r0, [pc, #796]	; 1a18c <traverse_product@@Base+0xd34>
   19e6c:	ldr	r1, [sp, #40]	; 0x28
   19e70:	add	r0, pc, r0
   19e74:	bl	19524 <traverse_product@@Base+0xcc>
   19e78:	b	198e0 <traverse_product@@Base+0x488>
   19e7c:	add	r1, sp, #40	; 0x28
   19e80:	mov	r0, r4
   19e84:	bl	125b8 <coda_cursor_get_bit_size@plt>
   19e88:	cmp	r0, #0
   19e8c:	bne	1a090 <traverse_product@@Base+0xc38>
   19e90:	ldrd	r8, [sp, #40]	; 0x28
   19e94:	mov	r1, #0
   19e98:	and	r0, r8, #7
   19e9c:	orrs	r3, r0, r1
   19ea0:	lsr	r6, r8, #3
   19ea4:	movne	r1, #1
   19ea8:	moveq	r1, #0
   19eac:	orr	r6, r6, r9, lsl #29
   19eb0:	adds	r6, r6, r1
   19eb4:	mov	r0, r6
   19eb8:	bl	123d8 <malloc@plt>
   19ebc:	subs	r5, r0, #0
   19ec0:	beq	1a0fc <traverse_product@@Base+0xca4>
   19ec4:	strd	r8, [sp]
   19ec8:	mov	r0, r4
   19ecc:	mov	r2, #0
   19ed0:	mov	r3, #0
   19ed4:	mov	r1, r5
   19ed8:	bl	12648 <coda_cursor_read_bits@plt>
   19edc:	cmp	r0, #0
   19ee0:	bne	1a098 <traverse_product@@Base+0xc40>
   19ee4:	ldr	r0, [pc, #676]	; 1a190 <traverse_product@@Base+0xd38>
   19ee8:	add	r0, pc, r0
   19eec:	bl	19524 <traverse_product@@Base+0xcc>
   19ef0:	mov	r1, r6
   19ef4:	mov	r0, r5
   19ef8:	bl	1956c <traverse_product@@Base+0x114>
   19efc:	ldr	r0, [pc, #656]	; 1a194 <traverse_product@@Base+0xd3c>
   19f00:	add	r0, pc, r0
   19f04:	bl	19524 <traverse_product@@Base+0xcc>
   19f08:	mov	r0, r5
   19f0c:	bl	122a0 <free@plt>
   19f10:	b	198e0 <traverse_product@@Base+0x488>
   19f14:	mov	r0, r4
   19f18:	add	r1, sp, #40	; 0x28
   19f1c:	bl	122c4 <coda_cursor_read_uint32@plt>
   19f20:	cmp	r0, #0
   19f24:	bne	1a028 <traverse_product@@Base+0xbd0>
   19f28:	ldr	r0, [pc, #616]	; 1a198 <traverse_product@@Base+0xd40>
   19f2c:	ldr	r1, [sp, #40]	; 0x28
   19f30:	add	r0, pc, r0
   19f34:	bl	19524 <traverse_product@@Base+0xcc>
   19f38:	b	198e0 <traverse_product@@Base+0x488>
   19f3c:	mov	r0, r4
   19f40:	add	r1, sp, #32
   19f44:	bl	12558 <coda_cursor_read_int64@plt>
   19f48:	cmp	r0, #0
   19f4c:	bne	1a030 <traverse_product@@Base+0xbd8>
   19f50:	add	r4, sp, #40	; 0x28
   19f54:	ldrd	r0, [sp, #32]
   19f58:	mov	r2, r4
   19f5c:	bl	12654 <coda_str64@plt>
   19f60:	ldr	r0, [pc, #564]	; 1a19c <traverse_product@@Base+0xd44>
   19f64:	mov	r1, r4
   19f68:	add	r0, pc, r0
   19f6c:	bl	19524 <traverse_product@@Base+0xcc>
   19f70:	b	198e0 <traverse_product@@Base+0x488>
   19f74:	mov	r0, r4
   19f78:	add	r1, sp, #32
   19f7c:	bl	12444 <coda_cursor_read_uint64@plt>
   19f80:	cmp	r0, #0
   19f84:	bne	1a0a0 <traverse_product@@Base+0xc48>
   19f88:	add	r4, sp, #40	; 0x28
   19f8c:	ldrd	r0, [sp, #32]
   19f90:	mov	r2, r4
   19f94:	bl	12294 <coda_str64u@plt>
   19f98:	ldr	r0, [pc, #512]	; 1a1a0 <traverse_product@@Base+0xd48>
   19f9c:	mov	r1, r4
   19fa0:	add	r0, pc, r0
   19fa4:	bl	19524 <traverse_product@@Base+0xcc>
   19fa8:	b	198e0 <traverse_product@@Base+0x488>
   19fac:	ldr	r0, [pc, #496]	; 1a1a4 <traverse_product@@Base+0xd4c>
   19fb0:	add	r0, pc, r0
   19fb4:	bl	19524 <traverse_product@@Base+0xcc>
   19fb8:	b	198e0 <traverse_product@@Base+0x488>
   19fbc:	bl	1a974 <handle_coda_error@@Base>
   19fc0:	b	19ad4 <traverse_product@@Base+0x67c>
   19fc4:	ldr	r0, [pc, #476]	; 1a1a8 <traverse_product@@Base+0xd50>
   19fc8:	add	r0, pc, r0
   19fcc:	bl	19524 <traverse_product@@Base+0xcc>
   19fd0:	bl	1969c <traverse_product@@Base+0x244>
   19fd4:	b	19ab8 <traverse_product@@Base+0x660>
   19fd8:	bl	1a974 <handle_coda_error@@Base>
   19fdc:	b	19a08 <traverse_product@@Base+0x5b0>
   19fe0:	bl	1969c <traverse_product@@Base+0x244>
   19fe4:	b	1989c <traverse_product@@Base+0x444>
   19fe8:	bl	1a974 <handle_coda_error@@Base>
   19fec:	b	19894 <traverse_product@@Base+0x43c>
   19ff0:	bl	1a974 <handle_coda_error@@Base>
   19ff4:	b	19880 <traverse_product@@Base+0x428>
   19ff8:	bl	1a974 <handle_coda_error@@Base>
   19ffc:	b	19868 <traverse_product@@Base+0x410>
   1a000:	bl	1a974 <handle_coda_error@@Base>
   1a004:	b	19b5c <traverse_product@@Base+0x704>
   1a008:	mov	r7, #1
   1a00c:	b	199ec <traverse_product@@Base+0x594>
   1a010:	bl	1a974 <handle_coda_error@@Base>
   1a014:	b	19d24 <traverse_product@@Base+0x8cc>
   1a018:	bl	1a974 <handle_coda_error@@Base>
   1a01c:	b	19cbc <traverse_product@@Base+0x864>
   1a020:	bl	1a974 <handle_coda_error@@Base>
   1a024:	b	19cfc <traverse_product@@Base+0x8a4>
   1a028:	bl	1a974 <handle_coda_error@@Base>
   1a02c:	b	19f28 <traverse_product@@Base+0xad0>
   1a030:	bl	1a974 <handle_coda_error@@Base>
   1a034:	b	19f50 <traverse_product@@Base+0xaf8>
   1a038:	bl	1a974 <handle_coda_error@@Base>
   1a03c:	b	19e20 <traverse_product@@Base+0x9c8>
   1a040:	ldr	r0, [pc, #356]	; 1a1ac <traverse_product@@Base+0xd54>
   1a044:	add	r4, sp, #40	; 0x28
   1a048:	mov	r1, r4
   1a04c:	add	r0, pc, r0
   1a050:	vldr	d0, [sp, #32]
   1a054:	bl	1227c <coda_time_double_to_string@plt>
   1a058:	cmp	r0, #0
   1a05c:	beq	1a0b8 <traverse_product@@Base+0xc60>
   1a060:	ldr	r0, [pc, #328]	; 1a1b0 <traverse_product@@Base+0xd58>
   1a064:	add	r0, pc, r0
   1a068:	bl	19524 <traverse_product@@Base+0xcc>
   1a06c:	b	198e0 <traverse_product@@Base+0x488>
   1a070:	bl	1a974 <handle_coda_error@@Base>
   1a074:	b	19db4 <traverse_product@@Base+0x95c>
   1a078:	bl	1a974 <handle_coda_error@@Base>
   1a07c:	b	19e68 <traverse_product@@Base+0xa10>
   1a080:	bl	1a974 <handle_coda_error@@Base>
   1a084:	b	19d7c <traverse_product@@Base+0x924>
   1a088:	bl	1a974 <handle_coda_error@@Base>
   1a08c:	b	19df0 <traverse_product@@Base+0x998>
   1a090:	bl	1a974 <handle_coda_error@@Base>
   1a094:	b	19e90 <traverse_product@@Base+0xa38>
   1a098:	bl	1a974 <handle_coda_error@@Base>
   1a09c:	b	19ee4 <traverse_product@@Base+0xa8c>
   1a0a0:	bl	1a974 <handle_coda_error@@Base>
   1a0a4:	b	19f88 <traverse_product@@Base+0xb30>
   1a0a8:	ldr	r0, [pc, #260]	; 1a1b4 <traverse_product@@Base+0xd5c>
   1a0ac:	add	r0, pc, r0
   1a0b0:	bl	19524 <traverse_product@@Base+0xcc>
   1a0b4:	b	198e0 <traverse_product@@Base+0x488>
   1a0b8:	ldr	r0, [pc, #248]	; 1a1b8 <traverse_product@@Base+0xd60>
   1a0bc:	mov	r1, r4
   1a0c0:	add	r0, pc, r0
   1a0c4:	bl	19524 <traverse_product@@Base+0xcc>
   1a0c8:	b	198e0 <traverse_product@@Base+0x488>
   1a0cc:	ldr	r3, [pc, #232]	; 1a1bc <traverse_product@@Base+0xd64>
   1a0d0:	ldr	r2, [sp, #40]	; 0x28
   1a0d4:	str	r3, [sp]
   1a0d8:	ldr	r1, [pc, #224]	; 1a1c0 <traverse_product@@Base+0xd68>
   1a0dc:	ldr	r3, [pc, #224]	; 1a1c4 <traverse_product@@Base+0xd6c>
   1a0e0:	add	r2, r2, #1
   1a0e4:	add	r3, pc, r3
   1a0e8:	add	r1, pc, r1
   1a0ec:	mvn	r0, #0
   1a0f0:	bl	12258 <coda_set_error@plt>
   1a0f4:	bl	1a974 <handle_coda_error@@Base>
   1a0f8:	b	19e04 <traverse_product@@Base+0x9ac>
   1a0fc:	mov	r3, #392	; 0x188
   1a100:	str	r3, [sp]
   1a104:	ldr	r1, [pc, #188]	; 1a1c8 <traverse_product@@Base+0xd70>
   1a108:	ldr	r3, [pc, #188]	; 1a1cc <traverse_product@@Base+0xd74>
   1a10c:	mov	r2, r6
   1a110:	add	r3, pc, r3
   1a114:	add	r1, pc, r1
   1a118:	mvn	r0, #0
   1a11c:	bl	12258 <coda_set_error@plt>
   1a120:	bl	1a974 <handle_coda_error@@Base>
   1a124:	ldrd	r8, [sp, #40]	; 0x28
   1a128:	b	19ec4 <traverse_product@@Base+0xa6c>
   1a12c:	andeq	r3, r1, ip, ror sl
   1a130:	andeq	r3, r1, r8, ror #18
   1a134:	ldrdeq	r1, [r0], -ip
   1a138:	andeq	r3, r1, ip, lsl r9
   1a13c:	andeq	r2, r0, r4, asr #23
   1a140:	andeq	r1, r0, r0, lsl #21
   1a144:	strdeq	r3, [r1], -r4
   1a148:			; <UNDEFINED> instruction: 0x000019bc
   1a14c:	andeq	r3, r1, r0, lsr r7
   1a150:	andeq	r1, r0, r4, ror r9
   1a154:	andeq	r1, r0, r8, asr r9
   1a158:	andeq	r1, r0, ip, lsl #18
   1a15c:	andeq	r3, r1, ip, lsl #13
   1a160:	andeq	r2, r0, ip, lsl r9
   1a164:	ldrdeq	r1, [r0], -ip
   1a168:	andeq	r1, r0, r4, asr #15
   1a16c:	andeq	r1, r0, r8, ror r1
   1a170:	andeq	r1, r0, r0, lsr r1
   1a174:	andeq	r1, r0, r4, lsr r7
   1a178:	andeq	r1, r0, ip, ror #1
   1a17c:	andeq	r1, r0, ip, lsl #12
   1a180:	andeq	r1, r0, ip, asr #13
   1a184:	andeq	r1, r0, r0, lsr #11
   1a188:	andeq	r1, r0, ip, asr r6
   1a18c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a190:	ldrdeq	r1, [r0], -ip
   1a194:	muleq	r0, ip, r5
   1a198:	andeq	r0, r0, r8, lsr pc
   1a19c:	andeq	r0, r0, r8, lsl #30
   1a1a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1a4:	strdeq	r1, [r0], -r0
   1a1a8:	andeq	r2, r0, ip, ror #11
   1a1ac:	andeq	r1, r0, r4, ror #4
   1a1b0:	andeq	r1, r0, ip, ror #4
   1a1b4:	andeq	r0, r0, r8, asr #27
   1a1b8:			; <UNDEFINED> instruction: 0x00000db0
   1a1bc:	andeq	r0, r0, r9, ror #2
   1a1c0:	ldrdeq	r0, [r0], -ip
   1a1c4:	andeq	r1, r0, r0, lsr r3
   1a1c8:			; <UNDEFINED> instruction: 0x00000bb0
   1a1cc:	andeq	r1, r0, r4, lsl #6

0001a1d0 <print_yaml_data@@Base>:
   1a1d0:	push	{r4, r5, r6, lr}
   1a1d4:	sub	sp, sp, #528	; 0x210
   1a1d8:	ldr	r2, [pc, #224]	; 1a2c0 <print_yaml_data@@Base+0xf0>
   1a1dc:	ldr	r4, [pc, #224]	; 1a2c4 <print_yaml_data@@Base+0xf4>
   1a1e0:	ldr	r3, [pc, #224]	; 1a2c8 <print_yaml_data@@Base+0xf8>
   1a1e4:	add	r2, pc, r2
   1a1e8:	add	r4, pc, r4
   1a1ec:	str	r0, [r2, #4]
   1a1f0:	ldr	r5, [r4, r3]
   1a1f4:	add	r6, sp, #4
   1a1f8:	mov	r1, r6
   1a1fc:	ldr	r0, [r5]
   1a200:	bl	12264 <coda_open@plt>
   1a204:	cmp	r0, #0
   1a208:	bne	1a27c <print_yaml_data@@Base+0xac>
   1a20c:	add	r5, sp, #8
   1a210:	mov	r0, r5
   1a214:	ldr	r1, [sp, #4]
   1a218:	bl	12390 <coda_cursor_set_product@plt>
   1a21c:	cmp	r0, #0
   1a220:	bne	1a274 <print_yaml_data@@Base+0xa4>
   1a224:	ldr	r3, [pc, #160]	; 1a2cc <print_yaml_data@@Base+0xfc>
   1a228:	ldr	r3, [r4, r3]
   1a22c:	ldr	r1, [r3]
   1a230:	cmp	r1, #0
   1a234:	beq	1a248 <print_yaml_data@@Base+0x78>
   1a238:	mov	r0, r5
   1a23c:	bl	12570 <coda_cursor_goto@plt>
   1a240:	cmp	r0, #0
   1a244:	bne	1a26c <print_yaml_data@@Base+0x9c>
   1a248:	mov	r0, #0
   1a24c:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   1a250:	mov	r0, r5
   1a254:	mov	r1, #0
   1a258:	bl	19788 <traverse_product@@Base+0x330>
   1a25c:	ldr	r0, [sp, #4]
   1a260:	bl	1254c <coda_close@plt>
   1a264:	add	sp, sp, #528	; 0x210
   1a268:	pop	{r4, r5, r6, pc}
   1a26c:	bl	1a974 <handle_coda_error@@Base>
   1a270:	b	1a248 <print_yaml_data@@Base+0x78>
   1a274:	bl	1a974 <handle_coda_error@@Base>
   1a278:	b	1a224 <print_yaml_data@@Base+0x54>
   1a27c:	bl	1260c <coda_get_errno@plt>
   1a280:	ldr	r3, [r0]
   1a284:	cmn	r3, #21
   1a288:	beq	1a294 <print_yaml_data@@Base+0xc4>
   1a28c:	bl	1a974 <handle_coda_error@@Base>
   1a290:	b	1a20c <print_yaml_data@@Base+0x3c>
   1a294:	mov	r0, #0
   1a298:	bl	122ac <coda_set_option_use_mmap@plt>
   1a29c:	mov	r1, r6
   1a2a0:	ldr	r0, [r5]
   1a2a4:	bl	12264 <coda_open@plt>
   1a2a8:	mov	r5, r0
   1a2ac:	mov	r0, #1
   1a2b0:	bl	122ac <coda_set_option_use_mmap@plt>
   1a2b4:	cmp	r5, #0
   1a2b8:	bne	1a28c <print_yaml_data@@Base+0xbc>
   1a2bc:	b	1a20c <print_yaml_data@@Base+0x3c>
   1a2c0:	andeq	r3, r1, r8, lsr #32
   1a2c4:	andeq	r2, r1, r0, lsl lr
   1a2c8:			; <UNDEFINED> instruction: 0x000001b4
   1a2cc:	ldrdeq	r0, [r0], -r8
   1a2d0:	ldr	r0, [pc, #1392]	; 1a848 <print_yaml_data@@Base+0x678>
   1a2d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2d8:	add	r0, pc, r0
   1a2dc:	sub	sp, sp, #28
   1a2e0:	bl	123c0 <puts@plt>
   1a2e4:	ldr	r0, [pc, #1376]	; 1a84c <print_yaml_data@@Base+0x67c>
   1a2e8:	ldr	r4, [pc, #1376]	; 1a850 <print_yaml_data@@Base+0x680>
   1a2ec:	add	r0, pc, r0
   1a2f0:	bl	123c0 <puts@plt>
   1a2f4:	ldr	r0, [pc, #1368]	; 1a854 <print_yaml_data@@Base+0x684>
   1a2f8:	add	r4, pc, r4
   1a2fc:	add	r0, pc, r0
   1a300:	bl	123c0 <puts@plt>
   1a304:	mov	r0, r4
   1a308:	str	r4, [sp, #4]
   1a30c:	bl	123c0 <puts@plt>
   1a310:	ldr	r0, [pc, #1344]	; 1a858 <print_yaml_data@@Base+0x688>
   1a314:	ldr	fp, [pc, #1344]	; 1a85c <print_yaml_data@@Base+0x68c>
   1a318:	add	r0, pc, r0
   1a31c:	bl	123c0 <puts@plt>
   1a320:	ldr	r0, [pc, #1336]	; 1a860 <print_yaml_data@@Base+0x690>
   1a324:	ldr	sl, [pc, #1336]	; 1a864 <print_yaml_data@@Base+0x694>
   1a328:	add	fp, pc, fp
   1a32c:	add	r0, pc, r0
   1a330:	ldr	r5, [pc, #1328]	; 1a868 <print_yaml_data@@Base+0x698>
   1a334:	add	sl, pc, sl
   1a338:	bl	123c0 <puts@plt>
   1a33c:	ldr	r4, [pc, #1320]	; 1a86c <print_yaml_data@@Base+0x69c>
   1a340:	mov	r0, fp
   1a344:	bl	123c0 <puts@plt>
   1a348:	add	r5, pc, r5
   1a34c:	mov	r0, sl
   1a350:	bl	123c0 <puts@plt>
   1a354:	add	r4, pc, r4
   1a358:	mov	r0, r5
   1a35c:	bl	123c0 <puts@plt>
   1a360:	mov	r0, r4
   1a364:	bl	123c0 <puts@plt>
   1a368:	ldr	r0, [pc, #1280]	; 1a870 <print_yaml_data@@Base+0x6a0>
   1a36c:	ldr	r9, [pc, #1280]	; 1a874 <print_yaml_data@@Base+0x6a4>
   1a370:	add	r0, pc, r0
   1a374:	bl	123c0 <puts@plt>
   1a378:	ldr	r0, [pc, #1272]	; 1a878 <print_yaml_data@@Base+0x6a8>
   1a37c:	ldr	r8, [pc, #1272]	; 1a87c <print_yaml_data@@Base+0x6ac>
   1a380:	add	r0, pc, r0
   1a384:	bl	123c0 <puts@plt>
   1a388:	ldr	r0, [pc, #1264]	; 1a880 <print_yaml_data@@Base+0x6b0>
   1a38c:	add	r9, pc, r9
   1a390:	add	r0, pc, r0
   1a394:	bl	123c0 <puts@plt>
   1a398:	ldr	r0, [pc, #1252]	; 1a884 <print_yaml_data@@Base+0x6b4>
   1a39c:	ldr	r7, [pc, #1252]	; 1a888 <print_yaml_data@@Base+0x6b8>
   1a3a0:	add	r0, pc, r0
   1a3a4:	bl	123c0 <puts@plt>
   1a3a8:	ldr	r0, [pc, #1244]	; 1a88c <print_yaml_data@@Base+0x6bc>
   1a3ac:	add	r8, pc, r8
   1a3b0:	add	r0, pc, r0
   1a3b4:	bl	123c0 <puts@plt>
   1a3b8:	ldr	r0, [pc, #1232]	; 1a890 <print_yaml_data@@Base+0x6c0>
   1a3bc:	ldr	r6, [pc, #1232]	; 1a894 <print_yaml_data@@Base+0x6c4>
   1a3c0:	add	r0, pc, r0
   1a3c4:	bl	123c0 <puts@plt>
   1a3c8:	ldr	r0, [pc, #1224]	; 1a898 <print_yaml_data@@Base+0x6c8>
   1a3cc:	add	r7, pc, r7
   1a3d0:	add	r0, pc, r0
   1a3d4:	bl	123c0 <puts@plt>
   1a3d8:	ldr	r0, [pc, #1212]	; 1a89c <print_yaml_data@@Base+0x6cc>
   1a3dc:	add	r6, pc, r6
   1a3e0:	add	r0, pc, r0
   1a3e4:	bl	123c0 <puts@plt>
   1a3e8:	ldr	r0, [pc, #1200]	; 1a8a0 <print_yaml_data@@Base+0x6d0>
   1a3ec:	add	r0, pc, r0
   1a3f0:	bl	123c0 <puts@plt>
   1a3f4:	mov	r0, r9
   1a3f8:	bl	123c0 <puts@plt>
   1a3fc:	mov	r0, r8
   1a400:	bl	123c0 <puts@plt>
   1a404:	mov	r0, r7
   1a408:	bl	123c0 <puts@plt>
   1a40c:	mov	r0, r6
   1a410:	bl	123c0 <puts@plt>
   1a414:	mov	r0, #10
   1a418:	bl	124c8 <putchar@plt>
   1a41c:	ldr	r0, [pc, #1152]	; 1a8a4 <print_yaml_data@@Base+0x6d4>
   1a420:	add	r0, pc, r0
   1a424:	bl	123c0 <puts@plt>
   1a428:	ldr	r0, [pc, #1144]	; 1a8a8 <print_yaml_data@@Base+0x6d8>
   1a42c:	add	r0, pc, r0
   1a430:	bl	123c0 <puts@plt>
   1a434:	ldr	r3, [sp, #4]
   1a438:	mov	r0, r3
   1a43c:	bl	123c0 <puts@plt>
   1a440:	mov	r0, fp
   1a444:	bl	123c0 <puts@plt>
   1a448:	mov	r0, sl
   1a44c:	bl	123c0 <puts@plt>
   1a450:	mov	r0, r5
   1a454:	bl	123c0 <puts@plt>
   1a458:	mov	r0, r4
   1a45c:	bl	123c0 <puts@plt>
   1a460:	ldr	r0, [pc, #1092]	; 1a8ac <print_yaml_data@@Base+0x6dc>
   1a464:	ldr	r5, [pc, #1092]	; 1a8b0 <print_yaml_data@@Base+0x6e0>
   1a468:	add	r0, pc, r0
   1a46c:	bl	123c0 <puts@plt>
   1a470:	ldr	r0, [pc, #1084]	; 1a8b4 <print_yaml_data@@Base+0x6e4>
   1a474:	ldr	r4, [pc, #1084]	; 1a8b8 <print_yaml_data@@Base+0x6e8>
   1a478:	add	r0, pc, r0
   1a47c:	bl	123c0 <puts@plt>
   1a480:	ldr	r0, [pc, #1076]	; 1a8bc <print_yaml_data@@Base+0x6ec>
   1a484:	add	r5, pc, r5
   1a488:	add	r0, pc, r0
   1a48c:	bl	123c0 <puts@plt>
   1a490:	ldr	r0, [pc, #1064]	; 1a8c0 <print_yaml_data@@Base+0x6f0>
   1a494:	add	r4, pc, r4
   1a498:	add	r0, pc, r0
   1a49c:	bl	123c0 <puts@plt>
   1a4a0:	mov	r0, r5
   1a4a4:	bl	123c0 <puts@plt>
   1a4a8:	mov	r0, r4
   1a4ac:	bl	123c0 <puts@plt>
   1a4b0:	ldr	r0, [pc, #1036]	; 1a8c4 <print_yaml_data@@Base+0x6f4>
   1a4b4:	add	r0, pc, r0
   1a4b8:	bl	123c0 <puts@plt>
   1a4bc:	ldr	r0, [pc, #1028]	; 1a8c8 <print_yaml_data@@Base+0x6f8>
   1a4c0:	add	r0, pc, r0
   1a4c4:	bl	123c0 <puts@plt>
   1a4c8:	ldr	r0, [pc, #1020]	; 1a8cc <print_yaml_data@@Base+0x6fc>
   1a4cc:	add	r0, pc, r0
   1a4d0:	bl	123c0 <puts@plt>
   1a4d4:	ldr	r0, [pc, #1012]	; 1a8d0 <print_yaml_data@@Base+0x700>
   1a4d8:	add	r0, pc, r0
   1a4dc:	bl	123c0 <puts@plt>
   1a4e0:	ldr	r0, [pc, #1004]	; 1a8d4 <print_yaml_data@@Base+0x704>
   1a4e4:	add	r0, pc, r0
   1a4e8:	bl	123c0 <puts@plt>
   1a4ec:	ldr	r0, [pc, #996]	; 1a8d8 <print_yaml_data@@Base+0x708>
   1a4f0:	add	r0, pc, r0
   1a4f4:	bl	123c0 <puts@plt>
   1a4f8:	mov	r0, r9
   1a4fc:	bl	123c0 <puts@plt>
   1a500:	mov	r0, r8
   1a504:	bl	123c0 <puts@plt>
   1a508:	mov	r0, r7
   1a50c:	bl	123c0 <puts@plt>
   1a510:	mov	r0, r6
   1a514:	bl	123c0 <puts@plt>
   1a518:	mov	r0, #10
   1a51c:	bl	124c8 <putchar@plt>
   1a520:	ldr	r0, [pc, #948]	; 1a8dc <print_yaml_data@@Base+0x70c>
   1a524:	add	r0, pc, r0
   1a528:	bl	123c0 <puts@plt>
   1a52c:	ldr	r2, [pc, #940]	; 1a8e0 <print_yaml_data@@Base+0x710>
   1a530:	ldr	r0, [pc, #940]	; 1a8e4 <print_yaml_data@@Base+0x714>
   1a534:	add	r2, pc, r2
   1a538:	add	r0, pc, r0
   1a53c:	str	r2, [sp, #8]
   1a540:	bl	123c0 <puts@plt>
   1a544:	ldr	r3, [pc, #924]	; 1a8e8 <print_yaml_data@@Base+0x718>
   1a548:	ldr	r0, [pc, #924]	; 1a8ec <print_yaml_data@@Base+0x71c>
   1a54c:	add	r3, pc, r3
   1a550:	add	r0, pc, r0
   1a554:	str	r3, [sp, #4]
   1a558:	bl	123c0 <puts@plt>
   1a55c:	ldr	r2, [sp, #8]
   1a560:	mov	r0, r2
   1a564:	str	r2, [sp, #20]
   1a568:	bl	123c0 <puts@plt>
   1a56c:	ldr	r3, [sp, #4]
   1a570:	mov	r0, r3
   1a574:	str	r3, [sp, #16]
   1a578:	bl	123c0 <puts@plt>
   1a57c:	ldr	r0, [pc, #876]	; 1a8f0 <print_yaml_data@@Base+0x720>
   1a580:	add	r0, pc, r0
   1a584:	bl	123c0 <puts@plt>
   1a588:	mov	r0, fp
   1a58c:	bl	123c0 <puts@plt>
   1a590:	mov	r0, sl
   1a594:	bl	123c0 <puts@plt>
   1a598:	ldr	r1, [pc, #852]	; 1a8f4 <print_yaml_data@@Base+0x724>
   1a59c:	mov	r0, r5
   1a5a0:	add	r1, pc, r1
   1a5a4:	str	r1, [sp, #4]
   1a5a8:	bl	123c0 <puts@plt>
   1a5ac:	mov	r0, r4
   1a5b0:	bl	123c0 <puts@plt>
   1a5b4:	ldr	r1, [sp, #4]
   1a5b8:	mov	r0, r1
   1a5bc:	str	r1, [sp, #12]
   1a5c0:	bl	123c0 <puts@plt>
   1a5c4:	ldr	r3, [pc, #812]	; 1a8f8 <print_yaml_data@@Base+0x728>
   1a5c8:	add	r3, pc, r3
   1a5cc:	mov	r0, r3
   1a5d0:	str	r3, [sp, #4]
   1a5d4:	bl	123c0 <puts@plt>
   1a5d8:	ldr	r2, [pc, #796]	; 1a8fc <print_yaml_data@@Base+0x72c>
   1a5dc:	add	r2, pc, r2
   1a5e0:	mov	r0, r2
   1a5e4:	str	r2, [sp, #8]
   1a5e8:	bl	123c0 <puts@plt>
   1a5ec:	mov	r0, r9
   1a5f0:	bl	123c0 <puts@plt>
   1a5f4:	mov	r0, r8
   1a5f8:	bl	123c0 <puts@plt>
   1a5fc:	mov	r0, r7
   1a600:	bl	123c0 <puts@plt>
   1a604:	mov	r0, r6
   1a608:	bl	123c0 <puts@plt>
   1a60c:	mov	r0, #10
   1a610:	bl	124c8 <putchar@plt>
   1a614:	ldr	r0, [pc, #740]	; 1a900 <print_yaml_data@@Base+0x730>
   1a618:	add	r0, pc, r0
   1a61c:	bl	123c0 <puts@plt>
   1a620:	ldr	r0, [pc, #732]	; 1a904 <print_yaml_data@@Base+0x734>
   1a624:	add	r0, pc, r0
   1a628:	bl	123c0 <puts@plt>
   1a62c:	ldr	r0, [pc, #724]	; 1a908 <print_yaml_data@@Base+0x738>
   1a630:	add	r0, pc, r0
   1a634:	bl	123c0 <puts@plt>
   1a638:	ldr	r2, [sp, #20]
   1a63c:	mov	r0, r2
   1a640:	bl	123c0 <puts@plt>
   1a644:	ldr	r3, [sp, #16]
   1a648:	mov	r0, r3
   1a64c:	bl	123c0 <puts@plt>
   1a650:	ldr	r0, [pc, #692]	; 1a90c <print_yaml_data@@Base+0x73c>
   1a654:	add	r0, pc, r0
   1a658:	bl	123c0 <puts@plt>
   1a65c:	ldr	r0, [pc, #684]	; 1a910 <print_yaml_data@@Base+0x740>
   1a660:	add	r0, pc, r0
   1a664:	bl	123c0 <puts@plt>
   1a668:	mov	r0, fp
   1a66c:	bl	123c0 <puts@plt>
   1a670:	mov	r0, sl
   1a674:	bl	123c0 <puts@plt>
   1a678:	mov	r0, r5
   1a67c:	bl	123c0 <puts@plt>
   1a680:	mov	r0, r4
   1a684:	bl	123c0 <puts@plt>
   1a688:	ldr	r1, [sp, #12]
   1a68c:	mov	r0, r1
   1a690:	bl	123c0 <puts@plt>
   1a694:	ldr	sl, [sp, #4]
   1a698:	mov	r0, sl
   1a69c:	bl	123c0 <puts@plt>
   1a6a0:	ldr	fp, [sp, #8]
   1a6a4:	mov	r0, fp
   1a6a8:	bl	123c0 <puts@plt>
   1a6ac:	mov	r0, r9
   1a6b0:	bl	123c0 <puts@plt>
   1a6b4:	mov	r0, r8
   1a6b8:	bl	123c0 <puts@plt>
   1a6bc:	mov	r0, r7
   1a6c0:	bl	123c0 <puts@plt>
   1a6c4:	mov	r0, r6
   1a6c8:	bl	123c0 <puts@plt>
   1a6cc:	mov	r0, #10
   1a6d0:	bl	124c8 <putchar@plt>
   1a6d4:	ldr	r0, [pc, #568]	; 1a914 <print_yaml_data@@Base+0x744>
   1a6d8:	add	r0, pc, r0
   1a6dc:	bl	123c0 <puts@plt>
   1a6e0:	ldr	r0, [pc, #560]	; 1a918 <print_yaml_data@@Base+0x748>
   1a6e4:	add	r0, pc, r0
   1a6e8:	bl	123c0 <puts@plt>
   1a6ec:	ldr	r0, [pc, #552]	; 1a91c <print_yaml_data@@Base+0x74c>
   1a6f0:	add	r0, pc, r0
   1a6f4:	bl	123c0 <puts@plt>
   1a6f8:	ldr	r0, [pc, #544]	; 1a920 <print_yaml_data@@Base+0x750>
   1a6fc:	add	r0, pc, r0
   1a700:	bl	123c0 <puts@plt>
   1a704:	ldr	r0, [pc, #536]	; 1a924 <print_yaml_data@@Base+0x754>
   1a708:	add	r0, pc, r0
   1a70c:	bl	123c0 <puts@plt>
   1a710:	ldr	r0, [pc, #528]	; 1a928 <print_yaml_data@@Base+0x758>
   1a714:	add	r0, pc, r0
   1a718:	bl	123c0 <puts@plt>
   1a71c:	ldr	r0, [pc, #520]	; 1a92c <print_yaml_data@@Base+0x75c>
   1a720:	add	r0, pc, r0
   1a724:	bl	123c0 <puts@plt>
   1a728:	mov	r0, r5
   1a72c:	bl	123c0 <puts@plt>
   1a730:	mov	r0, r4
   1a734:	bl	123c0 <puts@plt>
   1a738:	ldr	r1, [sp, #12]
   1a73c:	mov	r0, r1
   1a740:	bl	123c0 <puts@plt>
   1a744:	mov	r0, sl
   1a748:	bl	123c0 <puts@plt>
   1a74c:	mov	r0, fp
   1a750:	bl	123c0 <puts@plt>
   1a754:	ldr	r0, [pc, #468]	; 1a930 <print_yaml_data@@Base+0x760>
   1a758:	add	r0, pc, r0
   1a75c:	bl	123c0 <puts@plt>
   1a760:	ldr	r0, [pc, #460]	; 1a934 <print_yaml_data@@Base+0x764>
   1a764:	add	r0, pc, r0
   1a768:	bl	123c0 <puts@plt>
   1a76c:	ldr	r0, [pc, #452]	; 1a938 <print_yaml_data@@Base+0x768>
   1a770:	add	r0, pc, r0
   1a774:	bl	123c0 <puts@plt>
   1a778:	ldr	r0, [pc, #444]	; 1a93c <print_yaml_data@@Base+0x76c>
   1a77c:	add	r0, pc, r0
   1a780:	bl	123c0 <puts@plt>
   1a784:	ldr	r0, [pc, #436]	; 1a940 <print_yaml_data@@Base+0x770>
   1a788:	add	r0, pc, r0
   1a78c:	bl	123c0 <puts@plt>
   1a790:	ldr	r0, [pc, #428]	; 1a944 <print_yaml_data@@Base+0x774>
   1a794:	add	r0, pc, r0
   1a798:	bl	123c0 <puts@plt>
   1a79c:	mov	r0, #10
   1a7a0:	bl	124c8 <putchar@plt>
   1a7a4:	ldr	r0, [pc, #412]	; 1a948 <print_yaml_data@@Base+0x778>
   1a7a8:	add	r0, pc, r0
   1a7ac:	bl	123c0 <puts@plt>
   1a7b0:	ldr	r0, [pc, #404]	; 1a94c <print_yaml_data@@Base+0x77c>
   1a7b4:	add	r0, pc, r0
   1a7b8:	bl	123c0 <puts@plt>
   1a7bc:	mov	r0, #10
   1a7c0:	bl	124c8 <putchar@plt>
   1a7c4:	ldr	r0, [pc, #388]	; 1a950 <print_yaml_data@@Base+0x780>
   1a7c8:	add	r0, pc, r0
   1a7cc:	bl	123c0 <puts@plt>
   1a7d0:	ldr	r0, [pc, #380]	; 1a954 <print_yaml_data@@Base+0x784>
   1a7d4:	add	r0, pc, r0
   1a7d8:	bl	123c0 <puts@plt>
   1a7dc:	mov	r0, #10
   1a7e0:	bl	124c8 <putchar@plt>
   1a7e4:	ldr	r0, [pc, #364]	; 1a958 <print_yaml_data@@Base+0x788>
   1a7e8:	add	r0, pc, r0
   1a7ec:	bl	123c0 <puts@plt>
   1a7f0:	ldr	r0, [pc, #356]	; 1a95c <print_yaml_data@@Base+0x78c>
   1a7f4:	add	r0, pc, r0
   1a7f8:	bl	123c0 <puts@plt>
   1a7fc:	ldr	r0, [pc, #348]	; 1a960 <print_yaml_data@@Base+0x790>
   1a800:	add	r0, pc, r0
   1a804:	bl	123c0 <puts@plt>
   1a808:	ldr	r0, [pc, #340]	; 1a964 <print_yaml_data@@Base+0x794>
   1a80c:	add	r0, pc, r0
   1a810:	bl	123c0 <puts@plt>
   1a814:	ldr	r0, [pc, #332]	; 1a968 <print_yaml_data@@Base+0x798>
   1a818:	add	r0, pc, r0
   1a81c:	bl	123c0 <puts@plt>
   1a820:	ldr	r0, [pc, #324]	; 1a96c <print_yaml_data@@Base+0x79c>
   1a824:	add	r0, pc, r0
   1a828:	bl	123c0 <puts@plt>
   1a82c:	ldr	r0, [pc, #316]	; 1a970 <print_yaml_data@@Base+0x7a0>
   1a830:	add	r0, pc, r0
   1a834:	bl	123c0 <puts@plt>
   1a838:	mov	r0, #10
   1a83c:	add	sp, sp, #28
   1a840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a844:	b	124c8 <putchar@plt>
   1a848:	ldrdeq	r1, [r0], -ip
   1a84c:	ldrdeq	r1, [r0], -r0
   1a850:	andeq	r1, r0, r8, lsr r2
   1a854:	andeq	r1, r0, r8, lsl #4
   1a858:	andeq	r1, r0, r0, lsr r2
   1a85c:	andeq	r1, r0, r4, ror r2
   1a860:	andeq	r1, r0, r8, lsr r2
   1a864:	muleq	r0, r0, r2
   1a868:			; <UNDEFINED> instruction: 0x000012b8
   1a86c:	ldrdeq	r1, [r0], -ip
   1a870:	andeq	r1, r0, r8, lsl #6
   1a874:	andeq	r1, r0, r4, asr r4
   1a878:	andeq	r1, r0, r0, lsl r3
   1a87c:	andeq	r1, r0, r4, asr r4
   1a880:	andeq	r1, r0, ip, lsr #6
   1a884:	andeq	r1, r0, r4, lsr r3
   1a888:	andeq	r1, r0, r4, lsl #9
   1a88c:	andeq	r1, r0, r0, asr r3
   1a890:	andeq	r1, r0, ip, asr r3
   1a894:	andeq	r1, r0, r4, asr #9
   1a898:	andeq	r1, r0, r0, lsl #7
   1a89c:	andeq	r1, r0, ip, lsl #7
   1a8a0:	andeq	r1, r0, r8, asr #7
   1a8a4:	andeq	r1, r0, r0, lsr #9
   1a8a8:	ldrdeq	r1, [r0], -ip
   1a8ac:	ldrdeq	r1, [r0], -ip
   1a8b0:	andeq	r1, r0, r0, lsl #11
   1a8b4:	andeq	r1, r0, r4, ror #9
   1a8b8:	muleq	r0, r4, r5
   1a8bc:	andeq	r1, r0, r8, lsl r5
   1a8c0:	andeq	r1, r0, r0, lsr #10
   1a8c4:	andeq	r1, r0, r8, lsr #11
   1a8c8:			; <UNDEFINED> instruction: 0x000015bc
   1a8cc:	strdeq	r1, [r0], -ip
   1a8d0:	andeq	r1, r0, r8, lsr #12
   1a8d4:	andeq	r1, r0, r8, ror #12
   1a8d8:	andeq	r1, r0, r0, lsl #13
   1a8dc:	muleq	r0, ip, r6
   1a8e0:	andeq	r1, r0, r8, lsr #14
   1a8e4:	ldrdeq	r1, [r0], -r0
   1a8e8:	andeq	r1, r0, r0, lsr r7
   1a8ec:	strdeq	r1, [r0], -r4
   1a8f0:	andeq	r1, r0, r4, asr #14
   1a8f4:	andeq	r1, r0, r0, ror r7
   1a8f8:	andeq	r1, r0, r8, ror #14
   1a8fc:	muleq	r0, ip, r7
   1a900:			; <UNDEFINED> instruction: 0x000017b0
   1a904:	andeq	r1, r0, ip, ror #15
   1a908:	andeq	r1, r0, ip, lsl r8
   1a90c:	andeq	r1, r0, r0, lsl r8
   1a910:	andeq	r1, r0, r0, asr r8
   1a914:	strdeq	r1, [r0], -r8
   1a918:	andeq	r1, r0, r4, lsr r8
   1a91c:	andeq	r1, r0, r4, ror r8
   1a920:			; <UNDEFINED> instruction: 0x000018b4
   1a924:	ldrdeq	r1, [r0], -r8
   1a928:	andeq	r1, r0, r4, ror #17
   1a92c:	andeq	r1, r0, r8, lsl #18
   1a930:	andeq	r1, r0, r8, lsl #18
   1a934:	andeq	r1, r0, ip, lsl r9
   1a938:	andeq	r1, r0, r0, ror #18
   1a93c:	andeq	r1, r0, r0, lsr #19
   1a940:	ldrdeq	r1, [r0], -r4
   1a944:	andeq	r1, r0, r8, lsl sl
   1a948:	andeq	r1, r0, ip, lsr sl
   1a94c:	andeq	r1, r0, r8, asr #20
   1a950:	andeq	r1, r0, r4, asr sl
   1a954:	andeq	r1, r0, r4, ror #20
   1a958:	andeq	r1, r0, r4, lsl #21
   1a95c:	andeq	r1, r0, r8, asr #21
   1a960:	andeq	r1, r0, r8, lsl #22
   1a964:	andeq	r1, r0, r8, lsr #22
   1a968:	andeq	r1, r0, r8, ror #22
   1a96c:	andeq	r1, r0, r4, lsr #23
   1a970:	ldrdeq	r1, [r0], -r8

0001a974 <handle_coda_error@@Base>:
   1a974:	ldr	r3, [pc, #64]	; 1a9bc <handle_coda_error@@Base+0x48>
   1a978:	ldr	r2, [pc, #64]	; 1a9c0 <handle_coda_error@@Base+0x4c>
   1a97c:	add	r3, pc, r3
   1a980:	push	{r4, r5, r6, lr}
   1a984:	ldr	r4, [r3, r2]
   1a988:	ldr	r5, [r4]
   1a98c:	bl	1260c <coda_get_errno@plt>
   1a990:	ldr	r0, [r0]
   1a994:	bl	125c4 <coda_errno_to_string@plt>
   1a998:	ldr	r1, [pc, #36]	; 1a9c4 <handle_coda_error@@Base+0x50>
   1a99c:	add	r1, pc, r1
   1a9a0:	mov	r2, r0
   1a9a4:	mov	r0, r5
   1a9a8:	bl	12468 <fprintf@plt>
   1a9ac:	ldr	r0, [r4]
   1a9b0:	bl	12270 <fflush@plt>
   1a9b4:	mov	r0, #1
   1a9b8:	bl	12420 <exit@plt>
   1a9bc:	andeq	r2, r1, ip, ror r6
   1a9c0:			; <UNDEFINED> instruction: 0x000001b8
   1a9c4:	andeq	r1, r0, ip, lsr #21
   1a9c8:	cmp	r3, #0
   1a9cc:	cmpeq	r2, #0
   1a9d0:	bne	1a9f4 <handle_coda_error@@Base+0x80>
   1a9d4:	cmp	r1, #0
   1a9d8:	movlt	r1, #-2147483648	; 0x80000000
   1a9dc:	movlt	r0, #0
   1a9e0:	blt	1a9f0 <handle_coda_error@@Base+0x7c>
   1a9e4:	cmpeq	r0, #0
   1a9e8:	mvnne	r1, #-2147483648	; 0x80000000
   1a9ec:	mvnne	r0, #0
   1a9f0:	b	1aa9c <handle_coda_error@@Base+0x128>
   1a9f4:	sub	sp, sp, #8
   1a9f8:	push	{sp, lr}
   1a9fc:	cmp	r1, #0
   1aa00:	blt	1aa20 <handle_coda_error@@Base+0xac>
   1aa04:	cmp	r3, #0
   1aa08:	blt	1aa54 <handle_coda_error@@Base+0xe0>
   1aa0c:	bl	1aaac <handle_coda_error@@Base+0x138>
   1aa10:	ldr	lr, [sp, #4]
   1aa14:	add	sp, sp, #8
   1aa18:	pop	{r2, r3}
   1aa1c:	bx	lr
   1aa20:	rsbs	r0, r0, #0
   1aa24:	sbc	r1, r1, r1, lsl #1
   1aa28:	cmp	r3, #0
   1aa2c:	blt	1aa78 <handle_coda_error@@Base+0x104>
   1aa30:	bl	1aaac <handle_coda_error@@Base+0x138>
   1aa34:	ldr	lr, [sp, #4]
   1aa38:	add	sp, sp, #8
   1aa3c:	pop	{r2, r3}
   1aa40:	rsbs	r0, r0, #0
   1aa44:	sbc	r1, r1, r1, lsl #1
   1aa48:	rsbs	r2, r2, #0
   1aa4c:	sbc	r3, r3, r3, lsl #1
   1aa50:	bx	lr
   1aa54:	rsbs	r2, r2, #0
   1aa58:	sbc	r3, r3, r3, lsl #1
   1aa5c:	bl	1aaac <handle_coda_error@@Base+0x138>
   1aa60:	ldr	lr, [sp, #4]
   1aa64:	add	sp, sp, #8
   1aa68:	pop	{r2, r3}
   1aa6c:	rsbs	r0, r0, #0
   1aa70:	sbc	r1, r1, r1, lsl #1
   1aa74:	bx	lr
   1aa78:	rsbs	r2, r2, #0
   1aa7c:	sbc	r3, r3, r3, lsl #1
   1aa80:	bl	1aaac <handle_coda_error@@Base+0x138>
   1aa84:	ldr	lr, [sp, #4]
   1aa88:	add	sp, sp, #8
   1aa8c:	pop	{r2, r3}
   1aa90:	rsbs	r2, r2, #0
   1aa94:	sbc	r3, r3, r3, lsl #1
   1aa98:	bx	lr
   1aa9c:	push	{r1, lr}
   1aaa0:	mov	r0, #8
   1aaa4:	bl	121ec <raise@plt>
   1aaa8:	pop	{r1, pc}
   1aaac:	cmp	r1, r3
   1aab0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1aab4:	cmpeq	r0, r2
   1aab8:	mov	r4, r0
   1aabc:	mov	r5, r1
   1aac0:	ldr	r9, [sp, #28]
   1aac4:	movcc	r0, #0
   1aac8:	movcc	r1, #0
   1aacc:	bcc	1abc4 <handle_coda_error@@Base+0x250>
   1aad0:	cmp	r3, #0
   1aad4:	clzeq	ip, r2
   1aad8:	clzne	ip, r3
   1aadc:	addeq	ip, ip, #32
   1aae0:	cmp	r5, #0
   1aae4:	clzeq	r1, r4
   1aae8:	addeq	r1, r1, #32
   1aaec:	clzne	r1, r5
   1aaf0:	sub	ip, ip, r1
   1aaf4:	sub	lr, ip, #32
   1aaf8:	lsl	r7, r3, ip
   1aafc:	rsb	r8, ip, #32
   1ab00:	orr	r7, r7, r2, lsl lr
   1ab04:	orr	r7, r7, r2, lsr r8
   1ab08:	lsl	r6, r2, ip
   1ab0c:	cmp	r5, r7
   1ab10:	cmpeq	r4, r6
   1ab14:	movcc	r0, #0
   1ab18:	movcc	r1, #0
   1ab1c:	bcc	1ab38 <handle_coda_error@@Base+0x1c4>
   1ab20:	mov	r3, #1
   1ab24:	subs	r4, r4, r6
   1ab28:	lsl	r1, r3, lr
   1ab2c:	lsl	r0, r3, ip
   1ab30:	orr	r1, r1, r3, lsr r8
   1ab34:	sbc	r5, r5, r7
   1ab38:	cmp	ip, #0
   1ab3c:	beq	1abc4 <handle_coda_error@@Base+0x250>
   1ab40:	lsrs	r3, r7, #1
   1ab44:	rrx	r2, r6
   1ab48:	mov	r6, ip
   1ab4c:	b	1ab70 <handle_coda_error@@Base+0x1fc>
   1ab50:	subs	r4, r4, r2
   1ab54:	sbc	r5, r5, r3
   1ab58:	adds	r4, r4, r4
   1ab5c:	adc	r5, r5, r5
   1ab60:	adds	r4, r4, #1
   1ab64:	adc	r5, r5, #0
   1ab68:	subs	r6, r6, #1
   1ab6c:	beq	1ab8c <handle_coda_error@@Base+0x218>
   1ab70:	cmp	r5, r3
   1ab74:	cmpeq	r4, r2
   1ab78:	bcs	1ab50 <handle_coda_error@@Base+0x1dc>
   1ab7c:	adds	r4, r4, r4
   1ab80:	adc	r5, r5, r5
   1ab84:	subs	r6, r6, #1
   1ab88:	bne	1ab70 <handle_coda_error@@Base+0x1fc>
   1ab8c:	lsr	r6, r4, ip
   1ab90:	lsr	r7, r5, ip
   1ab94:	orr	r6, r6, r5, lsl r8
   1ab98:	adds	r2, r0, r4
   1ab9c:	orr	r6, r6, r5, lsr lr
   1aba0:	adc	r3, r1, r5
   1aba4:	lsl	r1, r7, ip
   1aba8:	orr	r1, r1, r6, lsl lr
   1abac:	lsl	r0, r6, ip
   1abb0:	orr	r1, r1, r6, lsr r8
   1abb4:	subs	r0, r2, r0
   1abb8:	mov	r4, r6
   1abbc:	mov	r5, r7
   1abc0:	sbc	r1, r3, r1
   1abc4:	cmp	r9, #0
   1abc8:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1abcc:	strd	r4, [r9]
   1abd0:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001abd4 <__libc_csu_init@@Base>:
   1abd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1abd8:	mov	r7, r0
   1abdc:	ldr	r6, [pc, #72]	; 1ac2c <__libc_csu_init@@Base+0x58>
   1abe0:	ldr	r5, [pc, #72]	; 1ac30 <__libc_csu_init@@Base+0x5c>
   1abe4:	add	r6, pc, r6
   1abe8:	add	r5, pc, r5
   1abec:	sub	r6, r6, r5
   1abf0:	mov	r8, r1
   1abf4:	mov	r9, r2
   1abf8:	bl	121a8 <coda_cursor_get_byte_size@plt-0x20>
   1abfc:	asrs	r6, r6, #2
   1ac00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ac04:	mov	r4, #0
   1ac08:	add	r4, r4, #1
   1ac0c:	ldr	r3, [r5], #4
   1ac10:	mov	r2, r9
   1ac14:	mov	r1, r8
   1ac18:	mov	r0, r7
   1ac1c:	blx	r3
   1ac20:	cmp	r6, r4
   1ac24:	bne	1ac08 <__libc_csu_init@@Base+0x34>
   1ac28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ac2c:	andeq	r2, r1, ip, lsl #6
   1ac30:	andeq	r2, r1, r4, lsl #6

0001ac34 <__libc_csu_fini@@Base>:
   1ac34:	bx	lr

Disassembly of section .fini:

0001ac38 <.fini>:
   1ac38:	push	{r3, lr}
   1ac3c:	pop	{r3, pc}
