
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r8, lsr #9
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r8, asr #8
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	12834 <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	movw	r0, #21700	; 0x54c4
   12024:	movt	r0, #1
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	1283c <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	movw	r0, #21725	; 0x54dd
   12038:	movt	r0, #1
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	12844 <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	movw	r0, #21750	; 0x54f6
   1204c:	movt	r0, #1
   12050:	bl	11e9c <printf@plt>
   12054:	bl	1284c <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	movw	r0, #21775	; 0x550f
   12060:	movt	r0, #1
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}

00012070 <table_new@@Base>:
   12070:	push	{fp, lr}
   12074:	mov	fp, sp
   12078:	mov	r0, #56	; 0x38
   1207c:	bl	11ecc <malloc@plt>
   12080:	mov	r1, #0
   12084:	mov	r2, #10
   12088:	mov	r3, #20
   1208c:	vmov.i32	q8, #0	; 0x00000000
   12090:	str	r1, [r0]
   12094:	stmib	r0, {r1, r2}
   12098:	str	r1, [r0, #12]
   1209c:	str	r1, [r0, #16]
   120a0:	str	r1, [r0, #20]
   120a4:	str	r3, [r0, #24]
   120a8:	str	r1, [r0, #28]
   120ac:	str	r2, [r0, #48]	; 0x30
   120b0:	str	r1, [r0, #52]	; 0x34
   120b4:	add	r1, r0, #32
   120b8:	vst1.32	{d16-d17}, [r1]
   120bc:	pop	{fp, pc}

000120c0 <table_init@@Base>:
   120c0:	mov	r1, #0
   120c4:	mov	r2, #10
   120c8:	mov	r3, #20
   120cc:	vmov.i32	q8, #0	; 0x00000000
   120d0:	str	r1, [r0]
   120d4:	stmib	r0, {r1, r2}
   120d8:	str	r1, [r0, #12]
   120dc:	str	r1, [r0, #16]
   120e0:	str	r1, [r0, #20]
   120e4:	str	r3, [r0, #24]
   120e8:	str	r1, [r0, #28]
   120ec:	str	r2, [r0, #48]	; 0x30
   120f0:	str	r1, [r0, #52]	; 0x34
   120f4:	add	r0, r0, #32
   120f8:	vst1.32	{d16-d17}, [r0]
   120fc:	bx	lr

00012100 <table_delete@@Base>:
   12100:	push	{r4, sl, fp, lr}
   12104:	add	fp, sp, #8
   12108:	mov	r4, r0
   1210c:	bl	1211c <table_destroy@@Base>
   12110:	mov	r0, r4
   12114:	pop	{r4, sl, fp, lr}
   12118:	b	11ea8 <free@plt>

0001211c <table_destroy@@Base>:
   1211c:	cmp	r0, #0
   12120:	bxeq	lr
   12124:	push	{r4, r5, r6, sl, fp, lr}
   12128:	add	fp, sp, #16
   1212c:	mvn	r1, #0
   12130:	mvn	r2, #0
   12134:	mov	r3, #64	; 0x40
   12138:	mov	r4, r0
   1213c:	bl	12ac4 <table_notify@@Base>
   12140:	mov	r0, r4
   12144:	bl	13910 <table_get_row_length@@Base>
   12148:	cmp	r0, #1
   1214c:	blt	12170 <table_destroy@@Base+0x54>
   12150:	mov	r5, r0
   12154:	mov	r6, #0
   12158:	mov	r0, r4
   1215c:	mov	r1, r6
   12160:	bl	138b8 <table_row_destroy@@Base>
   12164:	add	r6, r6, #1
   12168:	cmp	r5, r6
   1216c:	bne	12158 <table_destroy@@Base+0x3c>
   12170:	ldr	r0, [r4, #16]
   12174:	cmp	r0, #0
   12178:	beq	12180 <table_destroy@@Base+0x64>
   1217c:	bl	11ea8 <free@plt>
   12180:	mov	r0, r4
   12184:	bl	12bb8 <table_get_column_length@@Base>
   12188:	cmp	r0, #1
   1218c:	blt	121b0 <table_destroy@@Base+0x94>
   12190:	mov	r5, r0
   12194:	mov	r6, #0
   12198:	mov	r0, r4
   1219c:	mov	r1, r6
   121a0:	bl	12ba0 <table_column_destroy@@Base>
   121a4:	add	r6, r6, #1
   121a8:	cmp	r5, r6
   121ac:	bne	12198 <table_destroy@@Base+0x7c>
   121b0:	ldr	r0, [r4]
   121b4:	cmp	r0, #0
   121b8:	beq	121c0 <table_destroy@@Base+0xa4>
   121bc:	bl	11ea8 <free@plt>
   121c0:	ldr	r0, [r4, #36]	; 0x24
   121c4:	cmp	r0, #0
   121c8:	beq	121d0 <table_destroy@@Base+0xb4>
   121cc:	bl	11ea8 <free@plt>
   121d0:	ldr	r0, [r4, #40]	; 0x28
   121d4:	cmp	r0, #0
   121d8:	beq	121e0 <table_destroy@@Base+0xc4>
   121dc:	bl	11ea8 <free@plt>
   121e0:	ldr	r0, [r4, #44]	; 0x2c
   121e4:	cmp	r0, #0
   121e8:	pop	{r4, r5, r6, sl, fp, lr}
   121ec:	beq	121f4 <table_destroy@@Base+0xd8>
   121f0:	b	11ea8 <free@plt>
   121f4:	bx	lr

000121f8 <table_dupe@@Base>:
   121f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121fc:	add	fp, sp, #28
   12200:	sub	sp, sp, #12
   12204:	mov	r4, r0
   12208:	bl	13910 <table_get_row_length@@Base>
   1220c:	mov	r8, r0
   12210:	mov	r0, r4
   12214:	bl	12bb8 <table_get_column_length@@Base>
   12218:	mov	r6, r0
   1221c:	mov	r0, #56	; 0x38
   12220:	bl	11ecc <malloc@plt>
   12224:	mov	sl, r0
   12228:	mov	r5, #0
   1222c:	mov	r0, #10
   12230:	mov	r1, #20
   12234:	cmp	r6, #1
   12238:	vmov.i32	q8, #0	; 0x00000000
   1223c:	str	r5, [sl]
   12240:	str	r5, [sl, #4]
   12244:	str	r0, [sl, #8]
   12248:	str	r5, [sl, #12]
   1224c:	str	r5, [sl, #16]
   12250:	str	r5, [sl, #20]
   12254:	str	r1, [sl, #24]
   12258:	str	r5, [sl, #28]
   1225c:	str	r0, [sl, #48]	; 0x30
   12260:	add	r0, sl, #32
   12264:	str	r5, [sl, #52]	; 0x34
   12268:	vst1.32	{d16-d17}, [r0]
   1226c:	blt	122a8 <table_dupe@@Base+0xb0>
   12270:	mov	r0, r4
   12274:	mov	r1, r5
   12278:	bl	12c28 <table_get_column_name@@Base>
   1227c:	mov	r7, r0
   12280:	mov	r0, r4
   12284:	mov	r1, r5
   12288:	bl	12c38 <table_get_column_data_type@@Base>
   1228c:	mov	r2, r0
   12290:	mov	r0, sl
   12294:	mov	r1, r7
   12298:	bl	12c4c <table_add_column@@Base>
   1229c:	add	r5, r5, #1
   122a0:	cmp	r6, r5
   122a4:	bne	12270 <table_dupe@@Base+0x78>
   122a8:	cmp	r8, #1
   122ac:	blt	12828 <table_dupe@@Base+0x630>
   122b0:	mov	r5, #0
   122b4:	add	r9, sp, #8
   122b8:	mov	r0, sl
   122bc:	bl	13918 <table_add_row@@Base>
   122c0:	cmp	r6, #1
   122c4:	blt	1281c <table_dupe@@Base+0x624>
   122c8:	mov	r7, #0
   122cc:	mov	r0, r4
   122d0:	mov	r1, r7
   122d4:	bl	12c38 <table_get_column_data_type@@Base>
   122d8:	cmp	r0, #23
   122dc:	bhi	1236c <table_dupe@@Base+0x174>
   122e0:	add	r1, pc, #0
   122e4:	ldr	pc, [r1, r0, lsl #2]
   122e8:	andeq	r2, r1, r8, asr #6
   122ec:	andeq	r2, r1, ip, ror r3
   122f0:			; <UNDEFINED> instruction: 0x000123b0
   122f4:	andeq	r2, r1, r4, ror #7
   122f8:	andeq	r2, r1, r8, lsl r4
   122fc:	andeq	r2, r1, ip, asr #8
   12300:	andeq	r2, r1, r0, lsl #9
   12304:			; <UNDEFINED> instruction: 0x000124b4
   12308:	andeq	r2, r1, r8, ror #9
   1230c:	andeq	r2, r1, ip, lsl r5
   12310:	andeq	r2, r1, r0, asr r5
   12314:	andeq	r2, r1, r4, lsl #11
   12318:			; <UNDEFINED> instruction: 0x000125b8
   1231c:	andeq	r2, r1, ip, ror #11
   12320:	andeq	r2, r1, r0, lsr #12
   12324:	andeq	r2, r1, r4, asr r6
   12328:	andeq	r2, r1, r8, lsl #13
   1232c:			; <UNDEFINED> instruction: 0x000126b8
   12330:	andeq	r2, r1, r8, ror #13
   12334:	andeq	r2, r1, r8, lsl r7
   12338:	andeq	r2, r1, ip, asr #14
   1233c:	andeq	r2, r1, r0, lsl #15
   12340:			; <UNDEFINED> instruction: 0x000127b4
   12344:	andeq	r2, r1, r8, ror #15
   12348:	mov	r0, r4
   1234c:	mov	r1, r5
   12350:	mov	r2, r7
   12354:	bl	13668 <table_get_int@@Base>
   12358:	mov	r3, r0
   1235c:	mov	r0, sl
   12360:	mov	r1, r5
   12364:	mov	r2, r7
   12368:	bl	13e70 <table_set_int@@Base>
   1236c:	add	r7, r7, #1
   12370:	cmp	r6, r7
   12374:	bne	122cc <table_dupe@@Base+0xd4>
   12378:	b	1281c <table_dupe@@Base+0x624>
   1237c:	mov	r0, r4
   12380:	mov	r1, r5
   12384:	mov	r2, r7
   12388:	bl	13680 <table_get_uint@@Base>
   1238c:	mov	r3, r0
   12390:	mov	r0, sl
   12394:	mov	r1, r5
   12398:	mov	r2, r7
   1239c:	bl	13ef0 <table_set_uint@@Base>
   123a0:	add	r7, r7, #1
   123a4:	cmp	r6, r7
   123a8:	bne	122cc <table_dupe@@Base+0xd4>
   123ac:	b	1281c <table_dupe@@Base+0x624>
   123b0:	mov	r0, r4
   123b4:	mov	r1, r5
   123b8:	mov	r2, r7
   123bc:	bl	13698 <table_get_int8@@Base>
   123c0:	mov	r3, r0
   123c4:	mov	r0, sl
   123c8:	mov	r1, r5
   123cc:	mov	r2, r7
   123d0:	bl	13f70 <table_set_int8@@Base>
   123d4:	add	r7, r7, #1
   123d8:	cmp	r6, r7
   123dc:	bne	122cc <table_dupe@@Base+0xd4>
   123e0:	b	1281c <table_dupe@@Base+0x624>
   123e4:	mov	r0, r4
   123e8:	mov	r1, r5
   123ec:	mov	r2, r7
   123f0:	bl	136b0 <table_get_uint8@@Base>
   123f4:	mov	r3, r0
   123f8:	mov	r0, sl
   123fc:	mov	r1, r5
   12400:	mov	r2, r7
   12404:	bl	13ff0 <table_set_uint8@@Base>
   12408:	add	r7, r7, #1
   1240c:	cmp	r6, r7
   12410:	bne	122cc <table_dupe@@Base+0xd4>
   12414:	b	1281c <table_dupe@@Base+0x624>
   12418:	mov	r0, r4
   1241c:	mov	r1, r5
   12420:	mov	r2, r7
   12424:	bl	136c8 <table_get_int16@@Base>
   12428:	mov	r3, r0
   1242c:	mov	r0, sl
   12430:	mov	r1, r5
   12434:	mov	r2, r7
   12438:	bl	14070 <table_set_int16@@Base>
   1243c:	add	r7, r7, #1
   12440:	cmp	r6, r7
   12444:	bne	122cc <table_dupe@@Base+0xd4>
   12448:	b	1281c <table_dupe@@Base+0x624>
   1244c:	mov	r0, r4
   12450:	mov	r1, r5
   12454:	mov	r2, r7
   12458:	bl	136e0 <table_get_uint16@@Base>
   1245c:	mov	r3, r0
   12460:	mov	r0, sl
   12464:	mov	r1, r5
   12468:	mov	r2, r7
   1246c:	bl	140f0 <table_set_uint16@@Base>
   12470:	add	r7, r7, #1
   12474:	cmp	r6, r7
   12478:	bne	122cc <table_dupe@@Base+0xd4>
   1247c:	b	1281c <table_dupe@@Base+0x624>
   12480:	mov	r0, r4
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	136f8 <table_get_int32@@Base>
   12490:	mov	r3, r0
   12494:	mov	r0, sl
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	14170 <table_set_int32@@Base>
   124a4:	add	r7, r7, #1
   124a8:	cmp	r6, r7
   124ac:	bne	122cc <table_dupe@@Base+0xd4>
   124b0:	b	1281c <table_dupe@@Base+0x624>
   124b4:	mov	r0, r4
   124b8:	mov	r1, r5
   124bc:	mov	r2, r7
   124c0:	bl	13710 <table_get_uint32@@Base>
   124c4:	mov	r3, r0
   124c8:	mov	r0, sl
   124cc:	mov	r1, r5
   124d0:	mov	r2, r7
   124d4:	bl	141f0 <table_set_uint32@@Base>
   124d8:	add	r7, r7, #1
   124dc:	cmp	r6, r7
   124e0:	bne	122cc <table_dupe@@Base+0xd4>
   124e4:	b	1281c <table_dupe@@Base+0x624>
   124e8:	mov	r0, r4
   124ec:	mov	r1, r5
   124f0:	mov	r2, r7
   124f4:	bl	13728 <table_get_int64@@Base>
   124f8:	stm	sp, {r0, r1}
   124fc:	mov	r0, sl
   12500:	mov	r1, r5
   12504:	mov	r2, r7
   12508:	bl	14270 <table_set_int64@@Base>
   1250c:	add	r7, r7, #1
   12510:	cmp	r6, r7
   12514:	bne	122cc <table_dupe@@Base+0xd4>
   12518:	b	1281c <table_dupe@@Base+0x624>
   1251c:	mov	r0, r4
   12520:	mov	r1, r5
   12524:	mov	r2, r7
   12528:	bl	13740 <table_get_uint64@@Base>
   1252c:	stm	sp, {r0, r1}
   12530:	mov	r0, sl
   12534:	mov	r1, r5
   12538:	mov	r2, r7
   1253c:	bl	142f8 <table_set_uint64@@Base>
   12540:	add	r7, r7, #1
   12544:	cmp	r6, r7
   12548:	bne	122cc <table_dupe@@Base+0xd4>
   1254c:	b	1281c <table_dupe@@Base+0x624>
   12550:	mov	r0, r4
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	13758 <table_get_short@@Base>
   12560:	mov	r3, r0
   12564:	mov	r0, sl
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	14380 <table_set_short@@Base>
   12574:	add	r7, r7, #1
   12578:	cmp	r6, r7
   1257c:	bne	122cc <table_dupe@@Base+0xd4>
   12580:	b	1281c <table_dupe@@Base+0x624>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	13770 <table_get_ushort@@Base>
   12594:	mov	r3, r0
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	14400 <table_set_ushort@@Base>
   125a8:	add	r7, r7, #1
   125ac:	cmp	r6, r7
   125b0:	bne	122cc <table_dupe@@Base+0xd4>
   125b4:	b	1281c <table_dupe@@Base+0x624>
   125b8:	mov	r0, r4
   125bc:	mov	r1, r5
   125c0:	mov	r2, r7
   125c4:	bl	13788 <table_get_long@@Base>
   125c8:	mov	r3, r0
   125cc:	mov	r0, sl
   125d0:	mov	r1, r5
   125d4:	mov	r2, r7
   125d8:	bl	14480 <table_set_long@@Base>
   125dc:	add	r7, r7, #1
   125e0:	cmp	r6, r7
   125e4:	bne	122cc <table_dupe@@Base+0xd4>
   125e8:	b	1281c <table_dupe@@Base+0x624>
   125ec:	mov	r0, r4
   125f0:	mov	r1, r5
   125f4:	mov	r2, r7
   125f8:	bl	137a0 <table_get_ulong@@Base>
   125fc:	mov	r3, r0
   12600:	mov	r0, sl
   12604:	mov	r1, r5
   12608:	mov	r2, r7
   1260c:	bl	14500 <table_set_ulong@@Base>
   12610:	add	r7, r7, #1
   12614:	cmp	r6, r7
   12618:	bne	122cc <table_dupe@@Base+0xd4>
   1261c:	b	1281c <table_dupe@@Base+0x624>
   12620:	mov	r0, r4
   12624:	mov	r1, r5
   12628:	mov	r2, r7
   1262c:	bl	137b8 <table_get_llong@@Base>
   12630:	stm	sp, {r0, r1}
   12634:	mov	r0, sl
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	14580 <table_set_llong@@Base>
   12644:	add	r7, r7, #1
   12648:	cmp	r6, r7
   1264c:	bne	122cc <table_dupe@@Base+0xd4>
   12650:	b	1281c <table_dupe@@Base+0x624>
   12654:	mov	r0, r4
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	137d0 <table_get_ullong@@Base>
   12664:	stm	sp, {r0, r1}
   12668:	mov	r0, sl
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	14608 <table_set_ullong@@Base>
   12678:	add	r7, r7, #1
   1267c:	cmp	r6, r7
   12680:	bne	122cc <table_dupe@@Base+0xd4>
   12684:	b	1281c <table_dupe@@Base+0x624>
   12688:	mov	r0, r4
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	137e8 <table_get_float@@Base>
   12698:	mov	r0, sl
   1269c:	mov	r1, r5
   126a0:	mov	r2, r7
   126a4:	bl	14690 <table_set_float@@Base>
   126a8:	add	r7, r7, #1
   126ac:	cmp	r6, r7
   126b0:	bne	122cc <table_dupe@@Base+0xd4>
   126b4:	b	1281c <table_dupe@@Base+0x624>
   126b8:	mov	r0, r4
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	13800 <table_get_double@@Base>
   126c8:	mov	r0, sl
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	1471c <table_set_double@@Base>
   126d8:	add	r7, r7, #1
   126dc:	cmp	r6, r7
   126e0:	bne	122cc <table_dupe@@Base+0xd4>
   126e4:	b	1281c <table_dupe@@Base+0x624>
   126e8:	mov	r0, r4
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	13818 <table_get_ldouble@@Base>
   126f8:	mov	r0, sl
   126fc:	mov	r1, r5
   12700:	mov	r2, r7
   12704:	bl	147a4 <table_set_ldouble@@Base>
   12708:	add	r7, r7, #1
   1270c:	cmp	r6, r7
   12710:	bne	122cc <table_dupe@@Base+0xd4>
   12714:	b	1281c <table_dupe@@Base+0x624>
   12718:	mov	r0, r4
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	13830 <table_get_char@@Base>
   12728:	mov	r3, r0
   1272c:	mov	r0, sl
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	148b4 <table_set_char@@Base>
   1273c:	add	r7, r7, #1
   12740:	cmp	r6, r7
   12744:	bne	122cc <table_dupe@@Base+0xd4>
   12748:	b	1281c <table_dupe@@Base+0x624>
   1274c:	mov	r0, r4
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	13848 <table_get_uchar@@Base>
   1275c:	mov	r3, r0
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	14934 <table_set_uchar@@Base>
   12770:	add	r7, r7, #1
   12774:	cmp	r6, r7
   12778:	bne	122cc <table_dupe@@Base+0xd4>
   1277c:	b	1281c <table_dupe@@Base+0x624>
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	13860 <table_get_string@@Base>
   12790:	mov	r3, r0
   12794:	mov	r0, sl
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	1482c <table_set_string@@Base>
   127a4:	add	r7, r7, #1
   127a8:	cmp	r6, r7
   127ac:	bne	122cc <table_dupe@@Base+0xd4>
   127b0:	b	1281c <table_dupe@@Base+0x624>
   127b4:	mov	r0, r4
   127b8:	mov	r1, r5
   127bc:	mov	r2, r7
   127c0:	bl	13650 <table_get_bool@@Base>
   127c4:	mov	r3, r0
   127c8:	mov	r0, sl
   127cc:	mov	r1, r5
   127d0:	mov	r2, r7
   127d4:	bl	13df0 <table_set_bool@@Base>
   127d8:	add	r7, r7, #1
   127dc:	cmp	r6, r7
   127e0:	bne	122cc <table_dupe@@Base+0xd4>
   127e4:	b	1281c <table_dupe@@Base+0x624>
   127e8:	mov	r0, r4
   127ec:	mov	r1, r5
   127f0:	mov	r2, r7
   127f4:	bl	13874 <table_get_ptr@@Base>
   127f8:	str	r0, [sp, #8]
   127fc:	mov	r0, sl
   12800:	mov	r1, r5
   12804:	mov	r2, r7
   12808:	mov	r3, r9
   1280c:	bl	149b4 <table_set_ptr@@Base>
   12810:	add	r7, r7, #1
   12814:	cmp	r6, r7
   12818:	bne	122cc <table_dupe@@Base+0xd4>
   1281c:	add	r5, r5, #1
   12820:	cmp	r5, r8
   12824:	bne	122b8 <table_dupe@@Base+0xc0>
   12828:	mov	r0, sl
   1282c:	sub	sp, fp, #28
   12830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012834 <table_get_major_version@@Base>:
   12834:	mov	r0, #0
   12838:	bx	lr

0001283c <table_get_minor_version@@Base>:
   1283c:	mov	r0, #0
   12840:	bx	lr

00012844 <table_get_patch_version@@Base>:
   12844:	mov	r0, #0
   12848:	bx	lr

0001284c <table_get_version@@Base>:
   1284c:	movw	r0, #21774	; 0x550e
   12850:	movt	r0, #1
   12854:	bx	lr

00012858 <table_get_callback_length@@Base>:
   12858:	ldr	r0, [r0, #32]
   1285c:	bx	lr

00012860 <table_register_callback@@Base>:
   12860:	push	{r4, r5, r6, r7, fp, lr}
   12864:	add	fp, sp, #16
   12868:	mov	r5, r0
   1286c:	ldr	r0, [r0, #32]
   12870:	mov	r4, r3
   12874:	mov	r6, r2
   12878:	mov	r7, r1
   1287c:	cmp	r0, #1
   12880:	blt	128b4 <table_register_callback@@Base+0x54>
   12884:	ldr	r2, [r5, #36]	; 0x24
   12888:	mov	r1, #0
   1288c:	ldr	r3, [r2, r1, lsl #2]
   12890:	cmp	r3, r7
   12894:	bne	128a8 <table_register_callback@@Base+0x48>
   12898:	ldr	r3, [r5, #40]	; 0x28
   1289c:	ldr	r3, [r3, r1, lsl #2]
   128a0:	cmp	r3, r6
   128a4:	beq	12938 <table_register_callback@@Base+0xd8>
   128a8:	add	r1, r1, #1
   128ac:	cmp	r1, r0
   128b0:	blt	1288c <table_register_callback@@Base+0x2c>
   128b4:	ldr	r1, [r5, #48]	; 0x30
   128b8:	udiv	r2, r0, r1
   128bc:	mls	r2, r2, r1, r0
   128c0:	cmp	r2, #0
   128c4:	bne	12910 <table_register_callback@@Base+0xb0>
   128c8:	ldr	r2, [r5, #52]	; 0x34
   128cc:	ldr	r0, [r5, #36]	; 0x24
   128d0:	add	r1, r2, r1
   128d4:	str	r1, [r5, #52]	; 0x34
   128d8:	lsl	r1, r1, #2
   128dc:	bl	11eb4 <realloc@plt>
   128e0:	str	r0, [r5, #36]	; 0x24
   128e4:	ldr	r1, [r5, #52]	; 0x34
   128e8:	ldr	r0, [r5, #40]	; 0x28
   128ec:	lsl	r1, r1, #2
   128f0:	bl	11eb4 <realloc@plt>
   128f4:	str	r0, [r5, #40]	; 0x28
   128f8:	ldr	r1, [r5, #52]	; 0x34
   128fc:	ldr	r0, [r5, #44]	; 0x2c
   12900:	lsl	r1, r1, #2
   12904:	bl	11eb4 <realloc@plt>
   12908:	str	r0, [r5, #44]	; 0x2c
   1290c:	ldr	r0, [r5, #32]
   12910:	ldr	r1, [r5, #36]	; 0x24
   12914:	str	r7, [r1, r0, lsl #2]
   12918:	ldr	r1, [r5, #40]	; 0x28
   1291c:	str	r6, [r1, r0, lsl #2]
   12920:	ldr	r1, [r5, #44]	; 0x2c
   12924:	str	r4, [r1, r0, lsl #2]
   12928:	ldr	r0, [r5, #32]
   1292c:	add	r0, r0, #1
   12930:	str	r0, [r5, #32]
   12934:	pop	{r4, r5, r6, r7, fp, pc}
   12938:	cmp	r1, #0
   1293c:	ldrne	r0, [r5, #44]	; 0x2c
   12940:	ldrne	r2, [r0, r1, lsl #2]
   12944:	orrne	r2, r2, r4
   12948:	strne	r2, [r0, r1, lsl #2]
   1294c:	popne	{r4, r5, r6, r7, fp, pc}
   12950:	b	128b4 <table_register_callback@@Base+0x54>

00012954 <table_unregister_callback@@Base>:
   12954:	push	{r4, r5, r6, sl, fp, lr}
   12958:	add	fp, sp, #16
   1295c:	ldr	r4, [r0, #32]
   12960:	cmp	r4, #1
   12964:	blt	1299c <table_unregister_callback@@Base+0x48>
   12968:	ldr	r3, [r0, #36]	; 0x24
   1296c:	mov	r6, r0
   12970:	mov	r0, #0
   12974:	ldr	r5, [r3, r0, lsl #2]
   12978:	cmp	r5, r1
   1297c:	bne	12990 <table_unregister_callback@@Base+0x3c>
   12980:	ldr	r5, [r6, #40]	; 0x28
   12984:	ldr	r5, [r5, r0, lsl #2]
   12988:	cmp	r5, r2
   1298c:	beq	129a0 <table_unregister_callback@@Base+0x4c>
   12990:	add	r0, r0, #1
   12994:	cmp	r0, r4
   12998:	blt	12974 <table_unregister_callback@@Base+0x20>
   1299c:	pop	{r4, r5, r6, sl, fp, pc}
   129a0:	sub	r1, r4, #1
   129a4:	cmp	r0, r1
   129a8:	bge	12a38 <table_unregister_callback@@Base+0xe4>
   129ac:	add	r1, r3, r0, lsl #2
   129b0:	ldr	r1, [r1, #4]
   129b4:	str	r1, [r3, r0, lsl #2]
   129b8:	ldr	r1, [r6, #40]	; 0x28
   129bc:	add	r2, r1, r0, lsl #2
   129c0:	ldr	r2, [r2, #4]
   129c4:	str	r2, [r1, r0, lsl #2]
   129c8:	ldr	r1, [r6, #44]	; 0x2c
   129cc:	add	r2, r1, r0, lsl #2
   129d0:	ldr	r2, [r2, #4]
   129d4:	str	r2, [r1, r0, lsl #2]
   129d8:	add	r2, r0, #1
   129dc:	ldr	r1, [r6, #32]
   129e0:	sub	r1, r1, #1
   129e4:	cmp	r2, r1
   129e8:	bge	12a38 <table_unregister_callback@@Base+0xe4>
   129ec:	ldr	r1, [r6, #36]	; 0x24
   129f0:	add	r1, r1, r0, lsl #2
   129f4:	ldr	r2, [r1, #8]
   129f8:	str	r2, [r1, #4]
   129fc:	ldr	r1, [r6, #40]	; 0x28
   12a00:	add	r1, r1, r0, lsl #2
   12a04:	ldr	r2, [r1, #8]
   12a08:	str	r2, [r1, #4]
   12a0c:	ldr	r1, [r6, #44]	; 0x2c
   12a10:	add	r1, r1, r0, lsl #2
   12a14:	ldr	r2, [r1, #8]
   12a18:	str	r2, [r1, #4]
   12a1c:	add	r2, r0, #1
   12a20:	add	r0, r0, #2
   12a24:	ldr	r1, [r6, #32]
   12a28:	sub	r1, r1, #1
   12a2c:	cmp	r0, r1
   12a30:	mov	r0, r2
   12a34:	blt	129ec <table_unregister_callback@@Base+0x98>
   12a38:	str	r1, [r6, #32]
   12a3c:	ldr	r2, [r6, #48]	; 0x30
   12a40:	udiv	r0, r1, r2
   12a44:	mls	r0, r0, r2, r1
   12a48:	cmp	r0, #0
   12a4c:	popne	{r4, r5, r6, sl, fp, pc}
   12a50:	ldr	r1, [r6, #52]	; 0x34
   12a54:	ldr	r0, [r6, #36]	; 0x24
   12a58:	subs	r1, r1, r2
   12a5c:	str	r1, [r6, #52]	; 0x34
   12a60:	beq	12a9c <table_unregister_callback@@Base+0x148>
   12a64:	lsl	r1, r1, #2
   12a68:	bl	11eb4 <realloc@plt>
   12a6c:	str	r0, [r6, #36]	; 0x24
   12a70:	ldr	r1, [r6, #52]	; 0x34
   12a74:	ldr	r0, [r6, #40]	; 0x28
   12a78:	lsl	r1, r1, #2
   12a7c:	bl	11eb4 <realloc@plt>
   12a80:	str	r0, [r6, #40]	; 0x28
   12a84:	ldr	r1, [r6, #52]	; 0x34
   12a88:	ldr	r0, [r6, #44]	; 0x2c
   12a8c:	lsl	r1, r1, #2
   12a90:	bl	11eb4 <realloc@plt>
   12a94:	str	r0, [r6, #44]	; 0x2c
   12a98:	pop	{r4, r5, r6, sl, fp, pc}
   12a9c:	bl	11ea8 <free@plt>
   12aa0:	ldr	r0, [r6, #40]	; 0x28
   12aa4:	bl	11ea8 <free@plt>
   12aa8:	ldr	r0, [r6, #44]	; 0x2c
   12aac:	bl	11ea8 <free@plt>
   12ab0:	mov	r0, #0
   12ab4:	str	r0, [r6, #36]	; 0x24
   12ab8:	str	r0, [r6, #40]	; 0x28
   12abc:	str	r0, [r6, #44]	; 0x2c
   12ac0:	pop	{r4, r5, r6, sl, fp, pc}

00012ac4 <table_notify@@Base>:
   12ac4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ac8:	add	fp, sp, #24
   12acc:	sub	sp, sp, #8
   12ad0:	mov	r7, r0
   12ad4:	ldr	r0, [r0, #32]
   12ad8:	cmp	r0, #1
   12adc:	blt	12b38 <table_notify@@Base+0x74>
   12ae0:	mov	r4, r3
   12ae4:	mov	r8, r2
   12ae8:	mov	r9, r1
   12aec:	mov	r5, #0
   12af0:	ldr	r1, [r7, #44]	; 0x2c
   12af4:	ldr	r1, [r1, r5, lsl #2]
   12af8:	tst	r1, r4
   12afc:	beq	12b2c <table_notify@@Base+0x68>
   12b00:	ldr	r0, [r7, #36]	; 0x24
   12b04:	ldr	r1, [r7, #40]	; 0x28
   12b08:	mov	r2, r8
   12b0c:	mov	r3, r4
   12b10:	ldr	r6, [r0, r5, lsl #2]
   12b14:	ldr	r0, [r1, r5, lsl #2]
   12b18:	mov	r1, r9
   12b1c:	str	r0, [sp]
   12b20:	mov	r0, r7
   12b24:	blx	r6
   12b28:	ldr	r0, [r7, #32]
   12b2c:	add	r5, r5, #1
   12b30:	cmp	r5, r0
   12b34:	blt	12af0 <table_notify@@Base+0x2c>
   12b38:	sub	sp, fp, #24
   12b3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b40 <table_column_init@@Base>:
   12b40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b44:	add	fp, sp, #24
   12b48:	ldr	r7, [r0]
   12b4c:	mov	r0, r2
   12b50:	mov	r4, r3
   12b54:	mov	r5, r2
   12b58:	mov	r6, r1
   12b5c:	bl	11ef0 <strlen@plt>
   12b60:	add	r0, r0, #1
   12b64:	bl	11ecc <malloc@plt>
   12b68:	ldr	r8, [fp, #8]
   12b6c:	add	r6, r6, r6, lsl #1
   12b70:	cmp	r0, #0
   12b74:	str	r0, [r7, r6, lsl #2]
   12b78:	beq	12b84 <table_column_init@@Base+0x44>
   12b7c:	mov	r1, r5
   12b80:	bl	11ec0 <strcpy@plt>
   12b84:	add	r0, r7, r6, lsl #2
   12b88:	stmib	r0, {r4, r8}
   12b8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b90 <table_get_col_ptr@@Base>:
   12b90:	ldr	r0, [r0]
   12b94:	add	r1, r1, r1, lsl #1
   12b98:	add	r0, r0, r1, lsl #2
   12b9c:	bx	lr

00012ba0 <table_column_destroy@@Base>:
   12ba0:	ldr	r0, [r0]
   12ba4:	add	r1, r1, r1, lsl #1
   12ba8:	ldr	r0, [r0, r1, lsl #2]
   12bac:	cmp	r0, #0
   12bb0:	bxeq	lr
   12bb4:	b	11ea8 <free@plt>

00012bb8 <table_get_column_length@@Base>:
   12bb8:	ldr	r0, [r0, #4]
   12bbc:	bx	lr

00012bc0 <table_get_column@@Base>:
   12bc0:	push	{r4, r5, r6, r7, fp, lr}
   12bc4:	add	fp, sp, #16
   12bc8:	ldr	r6, [r0, #4]
   12bcc:	cmp	r6, #1
   12bd0:	blt	12c14 <table_get_column@@Base+0x54>
   12bd4:	ldr	r7, [r0]
   12bd8:	mov	r5, r1
   12bdc:	mov	r4, #0
   12be0:	ldr	r0, [r7]
   12be4:	mov	r1, r5
   12be8:	bl	11e90 <strcmp@plt>
   12bec:	cmp	r0, #0
   12bf0:	beq	12c04 <table_get_column@@Base+0x44>
   12bf4:	add	r4, r4, #1
   12bf8:	add	r7, r7, #12
   12bfc:	cmp	r4, r6
   12c00:	blt	12be0 <table_get_column@@Base+0x20>
   12c04:	cmp	r4, r6
   12c08:	mvneq	r4, #0
   12c0c:	mov	r0, r4
   12c10:	pop	{r4, r5, r6, r7, fp, pc}
   12c14:	mov	r4, #0
   12c18:	cmp	r4, r6
   12c1c:	mvneq	r4, #0
   12c20:	mov	r0, r4
   12c24:	pop	{r4, r5, r6, r7, fp, pc}

00012c28 <table_get_column_name@@Base>:
   12c28:	ldr	r0, [r0]
   12c2c:	add	r1, r1, r1, lsl #1
   12c30:	ldr	r0, [r0, r1, lsl #2]
   12c34:	bx	lr

00012c38 <table_get_column_data_type@@Base>:
   12c38:	ldr	r0, [r0]
   12c3c:	add	r1, r1, r1, lsl #1
   12c40:	add	r0, r0, r1, lsl #2
   12c44:	ldr	r0, [r0, #4]
   12c48:	bx	lr

00012c4c <table_add_column@@Base>:
   12c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c50:	add	fp, sp, #28
   12c54:	sub	sp, sp, #4
   12c58:	mov	r4, r0
   12c5c:	mov	r8, r1
   12c60:	ldr	r0, [r0, #4]
   12c64:	mov	r9, r2
   12c68:	ldr	r1, [r4, #8]
   12c6c:	udiv	r2, r0, r1
   12c70:	mls	r0, r2, r1, r0
   12c74:	cmp	r0, #0
   12c78:	bne	12ce4 <table_add_column@@Base+0x98>
   12c7c:	ldr	r2, [r4, #12]
   12c80:	ldr	r0, [r4]
   12c84:	add	r1, r2, r1
   12c88:	str	r1, [r4, #12]
   12c8c:	add	r1, r1, r1, lsl #1
   12c90:	lsl	r1, r1, #2
   12c94:	bl	11eb4 <realloc@plt>
   12c98:	str	r0, [r4]
   12c9c:	mov	r0, r4
   12ca0:	bl	13910 <table_get_row_length@@Base>
   12ca4:	cmp	r0, #1
   12ca8:	blt	12ce4 <table_add_column@@Base+0x98>
   12cac:	mov	r6, r0
   12cb0:	mov	r5, #0
   12cb4:	mov	r0, r4
   12cb8:	mov	r1, r5
   12cbc:	bl	138ac <table_get_row_ptr@@Base>
   12cc0:	ldr	r1, [r4, #12]
   12cc4:	mov	r7, r0
   12cc8:	ldr	r0, [r0]
   12ccc:	lsl	r1, r1, #2
   12cd0:	bl	11eb4 <realloc@plt>
   12cd4:	add	r5, r5, #1
   12cd8:	str	r0, [r7]
   12cdc:	cmp	r6, r5
   12ce0:	bne	12cb4 <table_add_column@@Base+0x68>
   12ce4:	mov	r0, r4
   12ce8:	bl	13910 <table_get_row_length@@Base>
   12cec:	ldr	r6, [r4, #4]
   12cf0:	mov	r7, r0
   12cf4:	mov	r0, r9
   12cf8:	bl	13624 <table_get_default_compare_function_for_data_type@@Base>
   12cfc:	ldr	r5, [r4]
   12d00:	mov	sl, r0
   12d04:	mov	r0, r8
   12d08:	bl	11ef0 <strlen@plt>
   12d0c:	add	r0, r0, #1
   12d10:	bl	11ecc <malloc@plt>
   12d14:	mov	r1, r8
   12d18:	add	r8, r6, r6, lsl #1
   12d1c:	cmp	r0, #0
   12d20:	str	r0, [r5, r8, lsl #2]
   12d24:	beq	12d2c <table_add_column@@Base+0xe0>
   12d28:	bl	11ec0 <strcpy@plt>
   12d2c:	add	r0, r5, r8, lsl #2
   12d30:	cmp	r7, #1
   12d34:	stmib	r0, {r9, sl}
   12d38:	blt	12d5c <table_add_column@@Base+0x110>
   12d3c:	mov	r5, #0
   12d40:	mov	r0, r4
   12d44:	mov	r1, r5
   12d48:	mov	r2, r6
   12d4c:	bl	14a10 <table_cell_init@@Base>
   12d50:	add	r5, r5, #1
   12d54:	cmp	r7, r5
   12d58:	bne	12d40 <table_add_column@@Base+0xf4>
   12d5c:	ldr	r2, [r4, #4]
   12d60:	mov	r0, r4
   12d64:	mvn	r1, #0
   12d68:	mov	r3, #8
   12d6c:	bl	12ac4 <table_notify@@Base>
   12d70:	ldr	r0, [r4, #4]
   12d74:	add	r1, r0, #1
   12d78:	str	r1, [r4, #4]
   12d7c:	sub	sp, fp, #28
   12d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d84 <table_remove_column@@Base>:
   12d84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d88:	add	fp, sp, #24
   12d8c:	mov	r5, r0
   12d90:	ldr	r0, [r0]
   12d94:	add	r6, r1, r1, lsl #1
   12d98:	mov	r9, r1
   12d9c:	ldr	r0, [r0, r6, lsl #2]
   12da0:	cmp	r0, #0
   12da4:	beq	12dac <table_remove_column@@Base+0x28>
   12da8:	bl	11ea8 <free@plt>
   12dac:	ldr	r0, [r5, #4]
   12db0:	sub	r4, r0, #1
   12db4:	cmp	r4, r9
   12db8:	ble	12de8 <table_remove_column@@Base+0x64>
   12dbc:	sub	r0, r4, r9
   12dc0:	lsl	r1, r6, #2
   12dc4:	ldr	r2, [r5]
   12dc8:	subs	r0, r0, #1
   12dcc:	add	r2, r2, r1
   12dd0:	add	r1, r1, #12
   12dd4:	vldr	d16, [r2, #12]
   12dd8:	ldr	r3, [r2, #20]
   12ddc:	str	r3, [r2, #8]
   12de0:	vstr	d16, [r2]
   12de4:	bne	12dc4 <table_remove_column@@Base+0x40>
   12de8:	mov	r0, r5
   12dec:	bl	13910 <table_get_row_length@@Base>
   12df0:	cmp	r0, #1
   12df4:	blt	12e7c <table_remove_column@@Base+0xf8>
   12df8:	mov	r6, r0
   12dfc:	mov	r7, #0
   12e00:	cmp	r4, r9
   12e04:	ble	12e54 <table_remove_column@@Base+0xd0>
   12e08:	mov	r0, r5
   12e0c:	mov	r1, r7
   12e10:	mov	r2, r9
   12e14:	bl	14a4c <table_cell_destroy@@Base>
   12e18:	mov	r0, r5
   12e1c:	mov	r1, r7
   12e20:	bl	138ac <table_get_row_ptr@@Base>
   12e24:	mov	r1, r9
   12e28:	ldr	r2, [r0]
   12e2c:	add	r3, r2, r1, lsl #2
   12e30:	ldr	r3, [r3, #4]
   12e34:	str	r3, [r2, r1, lsl #2]
   12e38:	add	r1, r1, #1
   12e3c:	cmp	r4, r1
   12e40:	bne	12e28 <table_remove_column@@Base+0xa4>
   12e44:	add	r7, r7, #1
   12e48:	cmp	r7, r6
   12e4c:	bne	12e08 <table_remove_column@@Base+0x84>
   12e50:	b	12e7c <table_remove_column@@Base+0xf8>
   12e54:	mov	r0, r5
   12e58:	mov	r1, r7
   12e5c:	mov	r2, r9
   12e60:	bl	14a4c <table_cell_destroy@@Base>
   12e64:	mov	r0, r5
   12e68:	mov	r1, r7
   12e6c:	bl	138ac <table_get_row_ptr@@Base>
   12e70:	add	r7, r7, #1
   12e74:	cmp	r6, r7
   12e78:	bne	12e54 <table_remove_column@@Base+0xd0>
   12e7c:	ldmib	r5, {r0, r1}
   12e80:	sub	r0, r0, #1
   12e84:	udiv	r2, r0, r1
   12e88:	str	r0, [r5, #4]
   12e8c:	mls	r0, r2, r1, r0
   12e90:	cmp	r0, #0
   12e94:	bne	12f00 <table_remove_column@@Base+0x17c>
   12e98:	ldr	r2, [r5, #12]
   12e9c:	ldr	r0, [r5]
   12ea0:	sub	r1, r2, r1
   12ea4:	str	r1, [r5, #12]
   12ea8:	add	r1, r1, r1, lsl #1
   12eac:	lsl	r1, r1, #2
   12eb0:	bl	11eb4 <realloc@plt>
   12eb4:	str	r0, [r5]
   12eb8:	mov	r0, r5
   12ebc:	bl	13910 <table_get_row_length@@Base>
   12ec0:	cmp	r0, #1
   12ec4:	blt	12f00 <table_remove_column@@Base+0x17c>
   12ec8:	mov	r8, r0
   12ecc:	mov	r7, #0
   12ed0:	mov	r0, r5
   12ed4:	mov	r1, r7
   12ed8:	bl	138ac <table_get_row_ptr@@Base>
   12edc:	ldr	r1, [r5, #12]
   12ee0:	mov	r6, r0
   12ee4:	ldr	r0, [r0]
   12ee8:	lsl	r1, r1, #2
   12eec:	bl	11eb4 <realloc@plt>
   12ef0:	add	r7, r7, #1
   12ef4:	str	r0, [r6]
   12ef8:	cmp	r8, r7
   12efc:	bne	12ed0 <table_remove_column@@Base+0x14c>
   12f00:	mov	r0, r5
   12f04:	mvn	r1, #0
   12f08:	mov	r2, r9
   12f0c:	mov	r3, #16
   12f10:	bl	12ac4 <table_notify@@Base>
   12f14:	mov	r0, #0
   12f18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f1c <table_get_column_compare_function@@Base>:
   12f1c:	ldr	r0, [r0]
   12f20:	add	r1, r1, r1, lsl #1
   12f24:	add	r0, r0, r1, lsl #2
   12f28:	ldr	r0, [r0, #8]
   12f2c:	bx	lr

00012f30 <table_set_column_compare_function@@Base>:
   12f30:	ldr	r0, [r0]
   12f34:	add	r1, r1, r1, lsl #1
   12f38:	add	r0, r0, r1, lsl #2
   12f3c:	str	r2, [r0, #8]
   12f40:	bx	lr

00012f44 <table_compare_bool@@Base>:
   12f44:	cmp	r0, #0
   12f48:	beq	12f7c <table_compare_bool@@Base+0x38>
   12f4c:	cmp	r1, #0
   12f50:	moveq	r1, #1
   12f54:	moveq	r0, r1
   12f58:	bxeq	lr
   12f5c:	ldrb	r2, [r1]
   12f60:	ldrb	r0, [r0]
   12f64:	mov	r1, #0
   12f68:	cmp	r0, r2
   12f6c:	mvncc	r1, #0
   12f70:	movwhi	r1, #1
   12f74:	mov	r0, r1
   12f78:	bx	lr
   12f7c:	cmp	r1, #0
   12f80:	mvnne	r1, #0
   12f84:	mov	r0, r1
   12f88:	bx	lr

00012f8c <table_compare_int@@Base>:
   12f8c:	cmp	r0, #0
   12f90:	beq	12fc4 <table_compare_int@@Base+0x38>
   12f94:	cmp	r1, #0
   12f98:	moveq	r1, #1
   12f9c:	moveq	r0, r1
   12fa0:	bxeq	lr
   12fa4:	ldr	r2, [r1]
   12fa8:	ldr	r0, [r0]
   12fac:	mov	r1, #0
   12fb0:	cmp	r0, r2
   12fb4:	mvnlt	r1, #0
   12fb8:	movwgt	r1, #1
   12fbc:	mov	r0, r1
   12fc0:	bx	lr
   12fc4:	cmp	r1, #0
   12fc8:	mvnne	r1, #0
   12fcc:	mov	r0, r1
   12fd0:	bx	lr

00012fd4 <table_compare_uint@@Base>:
   12fd4:	cmp	r0, #0
   12fd8:	beq	1300c <table_compare_uint@@Base+0x38>
   12fdc:	cmp	r1, #0
   12fe0:	moveq	r1, #1
   12fe4:	moveq	r0, r1
   12fe8:	bxeq	lr
   12fec:	ldr	r2, [r1]
   12ff0:	ldr	r0, [r0]
   12ff4:	mov	r1, #0
   12ff8:	cmp	r0, r2
   12ffc:	mvncc	r1, #0
   13000:	movwhi	r1, #1
   13004:	mov	r0, r1
   13008:	bx	lr
   1300c:	cmp	r1, #0
   13010:	mvnne	r1, #0
   13014:	mov	r0, r1
   13018:	bx	lr

0001301c <table_compare_int8@@Base>:
   1301c:	cmp	r0, #0
   13020:	beq	13054 <table_compare_int8@@Base+0x38>
   13024:	cmp	r1, #0
   13028:	moveq	r1, #1
   1302c:	moveq	r0, r1
   13030:	bxeq	lr
   13034:	ldrsb	r2, [r1]
   13038:	ldrsb	r0, [r0]
   1303c:	mov	r1, #0
   13040:	cmp	r0, r2
   13044:	mvnlt	r1, #0
   13048:	movwgt	r1, #1
   1304c:	mov	r0, r1
   13050:	bx	lr
   13054:	cmp	r1, #0
   13058:	mvnne	r1, #0
   1305c:	mov	r0, r1
   13060:	bx	lr

00013064 <table_compare_uint8@@Base>:
   13064:	cmp	r0, #0
   13068:	beq	1309c <table_compare_uint8@@Base+0x38>
   1306c:	cmp	r1, #0
   13070:	moveq	r1, #1
   13074:	moveq	r0, r1
   13078:	bxeq	lr
   1307c:	ldrb	r2, [r1]
   13080:	ldrb	r0, [r0]
   13084:	mov	r1, #0
   13088:	cmp	r0, r2
   1308c:	mvncc	r1, #0
   13090:	movwhi	r1, #1
   13094:	mov	r0, r1
   13098:	bx	lr
   1309c:	cmp	r1, #0
   130a0:	mvnne	r1, #0
   130a4:	mov	r0, r1
   130a8:	bx	lr

000130ac <table_compare_int16@@Base>:
   130ac:	cmp	r0, #0
   130b0:	beq	130e4 <table_compare_int16@@Base+0x38>
   130b4:	cmp	r1, #0
   130b8:	moveq	r1, #1
   130bc:	moveq	r0, r1
   130c0:	bxeq	lr
   130c4:	ldrsh	r2, [r1]
   130c8:	ldrsh	r0, [r0]
   130cc:	mov	r1, #0
   130d0:	cmp	r0, r2
   130d4:	mvnlt	r1, #0
   130d8:	movwgt	r1, #1
   130dc:	mov	r0, r1
   130e0:	bx	lr
   130e4:	cmp	r1, #0
   130e8:	mvnne	r1, #0
   130ec:	mov	r0, r1
   130f0:	bx	lr

000130f4 <table_compare_uint16@@Base>:
   130f4:	cmp	r0, #0
   130f8:	beq	1312c <table_compare_uint16@@Base+0x38>
   130fc:	cmp	r1, #0
   13100:	moveq	r1, #1
   13104:	moveq	r0, r1
   13108:	bxeq	lr
   1310c:	ldrh	r2, [r1]
   13110:	ldrh	r0, [r0]
   13114:	mov	r1, #0
   13118:	cmp	r0, r2
   1311c:	mvncc	r1, #0
   13120:	movwhi	r1, #1
   13124:	mov	r0, r1
   13128:	bx	lr
   1312c:	cmp	r1, #0
   13130:	mvnne	r1, #0
   13134:	mov	r0, r1
   13138:	bx	lr

0001313c <table_compare_int32@@Base>:
   1313c:	cmp	r0, #0
   13140:	beq	13174 <table_compare_int32@@Base+0x38>
   13144:	cmp	r1, #0
   13148:	moveq	r1, #1
   1314c:	moveq	r0, r1
   13150:	bxeq	lr
   13154:	ldr	r2, [r1]
   13158:	ldr	r0, [r0]
   1315c:	mov	r1, #0
   13160:	cmp	r0, r2
   13164:	mvnlt	r1, #0
   13168:	movwgt	r1, #1
   1316c:	mov	r0, r1
   13170:	bx	lr
   13174:	cmp	r1, #0
   13178:	mvnne	r1, #0
   1317c:	mov	r0, r1
   13180:	bx	lr

00013184 <table_compare_uint32@@Base>:
   13184:	cmp	r0, #0
   13188:	beq	131bc <table_compare_uint32@@Base+0x38>
   1318c:	cmp	r1, #0
   13190:	moveq	r1, #1
   13194:	moveq	r0, r1
   13198:	bxeq	lr
   1319c:	ldr	r2, [r1]
   131a0:	ldr	r0, [r0]
   131a4:	mov	r1, #0
   131a8:	cmp	r0, r2
   131ac:	mvncc	r1, #0
   131b0:	movwhi	r1, #1
   131b4:	mov	r0, r1
   131b8:	bx	lr
   131bc:	cmp	r1, #0
   131c0:	mvnne	r1, #0
   131c4:	mov	r0, r1
   131c8:	bx	lr

000131cc <table_compare_int64@@Base>:
   131cc:	cmp	r0, #0
   131d0:	beq	13224 <table_compare_int64@@Base+0x58>
   131d4:	cmp	r1, #0
   131d8:	moveq	r1, #1
   131dc:	moveq	r0, r1
   131e0:	bxeq	lr
   131e4:	push	{r5, r7, fp, lr}
   131e8:	add	fp, sp, #8
   131ec:	ldm	r1, {r2, r7}
   131f0:	ldm	r0, {r0, r5}
   131f4:	mov	r1, #0
   131f8:	subs	r3, r0, r2
   131fc:	sbcs	r3, r5, r7
   13200:	movwlt	r1, #1
   13204:	cmp	r1, #0
   13208:	mvnne	r1, #0
   1320c:	subs	r0, r2, r0
   13210:	sbcs	r0, r7, r5
   13214:	movwlt	r1, #1
   13218:	pop	{r5, r7, fp, lr}
   1321c:	mov	r0, r1
   13220:	bx	lr
   13224:	cmp	r1, #0
   13228:	mvnne	r1, #0
   1322c:	mov	r0, r1
   13230:	bx	lr

00013234 <table_compare_uint64@@Base>:
   13234:	cmp	r0, #0
   13238:	beq	1328c <table_compare_uint64@@Base+0x58>
   1323c:	cmp	r1, #0
   13240:	moveq	r1, #1
   13244:	moveq	r0, r1
   13248:	bxeq	lr
   1324c:	push	{r5, r7, fp, lr}
   13250:	add	fp, sp, #8
   13254:	ldm	r1, {r2, r7}
   13258:	ldm	r0, {r0, r5}
   1325c:	mov	r1, #0
   13260:	subs	r3, r0, r2
   13264:	sbcs	r3, r5, r7
   13268:	movwcc	r1, #1
   1326c:	cmp	r1, #0
   13270:	mvnne	r1, #0
   13274:	subs	r0, r2, r0
   13278:	sbcs	r0, r7, r5
   1327c:	movwcc	r1, #1
   13280:	pop	{r5, r7, fp, lr}
   13284:	mov	r0, r1
   13288:	bx	lr
   1328c:	cmp	r1, #0
   13290:	mvnne	r1, #0
   13294:	mov	r0, r1
   13298:	bx	lr

0001329c <table_compare_short@@Base>:
   1329c:	cmp	r0, #0
   132a0:	beq	132d4 <table_compare_short@@Base+0x38>
   132a4:	cmp	r1, #0
   132a8:	moveq	r1, #1
   132ac:	moveq	r0, r1
   132b0:	bxeq	lr
   132b4:	ldrsh	r2, [r1]
   132b8:	ldrsh	r0, [r0]
   132bc:	mov	r1, #0
   132c0:	cmp	r0, r2
   132c4:	mvnlt	r1, #0
   132c8:	movwgt	r1, #1
   132cc:	mov	r0, r1
   132d0:	bx	lr
   132d4:	cmp	r1, #0
   132d8:	mvnne	r1, #0
   132dc:	mov	r0, r1
   132e0:	bx	lr

000132e4 <table_compare_ushort@@Base>:
   132e4:	cmp	r0, #0
   132e8:	beq	1331c <table_compare_ushort@@Base+0x38>
   132ec:	cmp	r1, #0
   132f0:	moveq	r1, #1
   132f4:	moveq	r0, r1
   132f8:	bxeq	lr
   132fc:	ldrh	r2, [r1]
   13300:	ldrh	r0, [r0]
   13304:	mov	r1, #0
   13308:	cmp	r0, r2
   1330c:	mvncc	r1, #0
   13310:	movwhi	r1, #1
   13314:	mov	r0, r1
   13318:	bx	lr
   1331c:	cmp	r1, #0
   13320:	mvnne	r1, #0
   13324:	mov	r0, r1
   13328:	bx	lr

0001332c <table_compare_long@@Base>:
   1332c:	cmp	r0, #0
   13330:	beq	13364 <table_compare_long@@Base+0x38>
   13334:	cmp	r1, #0
   13338:	moveq	r1, #1
   1333c:	moveq	r0, r1
   13340:	bxeq	lr
   13344:	ldr	r2, [r1]
   13348:	ldr	r0, [r0]
   1334c:	mov	r1, #0
   13350:	cmp	r0, r2
   13354:	mvnlt	r1, #0
   13358:	movwgt	r1, #1
   1335c:	mov	r0, r1
   13360:	bx	lr
   13364:	cmp	r1, #0
   13368:	mvnne	r1, #0
   1336c:	mov	r0, r1
   13370:	bx	lr

00013374 <table_compare_ulong@@Base>:
   13374:	cmp	r0, #0
   13378:	beq	133ac <table_compare_ulong@@Base+0x38>
   1337c:	cmp	r1, #0
   13380:	moveq	r1, #1
   13384:	moveq	r0, r1
   13388:	bxeq	lr
   1338c:	ldr	r2, [r1]
   13390:	ldr	r0, [r0]
   13394:	mov	r1, #0
   13398:	cmp	r0, r2
   1339c:	mvncc	r1, #0
   133a0:	movwhi	r1, #1
   133a4:	mov	r0, r1
   133a8:	bx	lr
   133ac:	cmp	r1, #0
   133b0:	mvnne	r1, #0
   133b4:	mov	r0, r1
   133b8:	bx	lr

000133bc <table_compare_llong@@Base>:
   133bc:	cmp	r0, #0
   133c0:	beq	13414 <table_compare_llong@@Base+0x58>
   133c4:	cmp	r1, #0
   133c8:	moveq	r1, #1
   133cc:	moveq	r0, r1
   133d0:	bxeq	lr
   133d4:	push	{r5, r7, fp, lr}
   133d8:	add	fp, sp, #8
   133dc:	ldm	r1, {r2, r7}
   133e0:	ldm	r0, {r0, r5}
   133e4:	mov	r1, #0
   133e8:	subs	r3, r0, r2
   133ec:	sbcs	r3, r5, r7
   133f0:	movwlt	r1, #1
   133f4:	cmp	r1, #0
   133f8:	mvnne	r1, #0
   133fc:	subs	r0, r2, r0
   13400:	sbcs	r0, r7, r5
   13404:	movwlt	r1, #1
   13408:	pop	{r5, r7, fp, lr}
   1340c:	mov	r0, r1
   13410:	bx	lr
   13414:	cmp	r1, #0
   13418:	mvnne	r1, #0
   1341c:	mov	r0, r1
   13420:	bx	lr

00013424 <table_compare_ullong@@Base>:
   13424:	cmp	r0, #0
   13428:	beq	1345c <table_compare_ullong@@Base+0x38>
   1342c:	cmp	r1, #0
   13430:	moveq	r1, #1
   13434:	moveq	r0, r1
   13438:	bxeq	lr
   1343c:	ldr	r2, [r1]
   13440:	ldr	r0, [r0]
   13444:	mov	r1, #0
   13448:	cmp	r0, r2
   1344c:	mvncc	r1, #0
   13450:	movwhi	r1, #1
   13454:	mov	r0, r1
   13458:	bx	lr
   1345c:	cmp	r1, #0
   13460:	mvnne	r1, #0
   13464:	mov	r0, r1
   13468:	bx	lr

0001346c <table_compare_float@@Base>:
   1346c:	cmp	r0, #0
   13470:	beq	134a8 <table_compare_float@@Base+0x3c>
   13474:	cmp	r1, #0
   13478:	moveq	r1, #1
   1347c:	moveq	r0, r1
   13480:	bxeq	lr
   13484:	vldr	s0, [r1]
   13488:	vldr	s2, [r0]
   1348c:	mov	r1, #0
   13490:	vcmpe.f32	s2, s0
   13494:	vmrs	APSR_nzcv, fpscr
   13498:	mvnmi	r1, #0
   1349c:	movwgt	r1, #1
   134a0:	mov	r0, r1
   134a4:	bx	lr
   134a8:	cmp	r1, #0
   134ac:	mvnne	r1, #0
   134b0:	mov	r0, r1
   134b4:	bx	lr

000134b8 <table_compare_double@@Base>:
   134b8:	cmp	r0, #0
   134bc:	beq	134f4 <table_compare_double@@Base+0x3c>
   134c0:	cmp	r1, #0
   134c4:	moveq	r1, #1
   134c8:	moveq	r0, r1
   134cc:	bxeq	lr
   134d0:	vldr	d16, [r1]
   134d4:	vldr	d17, [r0]
   134d8:	mov	r1, #0
   134dc:	vcmpe.f64	d17, d16
   134e0:	vmrs	APSR_nzcv, fpscr
   134e4:	mvnmi	r1, #0
   134e8:	movwgt	r1, #1
   134ec:	mov	r0, r1
   134f0:	bx	lr
   134f4:	cmp	r1, #0
   134f8:	mvnne	r1, #0
   134fc:	mov	r0, r1
   13500:	bx	lr

00013504 <table_compare_ldouble@@Base>:
   13504:	cmp	r0, #0
   13508:	beq	13540 <table_compare_ldouble@@Base+0x3c>
   1350c:	cmp	r1, #0
   13510:	moveq	r1, #1
   13514:	moveq	r0, r1
   13518:	bxeq	lr
   1351c:	vldr	d16, [r1]
   13520:	vldr	d17, [r0]
   13524:	mov	r1, #0
   13528:	vcmpe.f64	d17, d16
   1352c:	vmrs	APSR_nzcv, fpscr
   13530:	mvnmi	r1, #0
   13534:	movwgt	r1, #1
   13538:	mov	r0, r1
   1353c:	bx	lr
   13540:	cmp	r1, #0
   13544:	mvnne	r1, #0
   13548:	mov	r0, r1
   1354c:	bx	lr

00013550 <table_compare_char@@Base>:
   13550:	cmp	r0, #0
   13554:	beq	13588 <table_compare_char@@Base+0x38>
   13558:	cmp	r1, #0
   1355c:	moveq	r1, #1
   13560:	moveq	r0, r1
   13564:	bxeq	lr
   13568:	ldrb	r2, [r1]
   1356c:	ldrb	r0, [r0]
   13570:	mov	r1, #0
   13574:	cmp	r0, r2
   13578:	mvncc	r1, #0
   1357c:	movwhi	r1, #1
   13580:	mov	r0, r1
   13584:	bx	lr
   13588:	cmp	r1, #0
   1358c:	mvnne	r1, #0
   13590:	mov	r0, r1
   13594:	bx	lr

00013598 <table_compare_uchar@@Base>:
   13598:	cmp	r0, #0
   1359c:	beq	135d0 <table_compare_uchar@@Base+0x38>
   135a0:	cmp	r1, #0
   135a4:	moveq	r1, #1
   135a8:	moveq	r0, r1
   135ac:	bxeq	lr
   135b0:	ldrb	r2, [r1]
   135b4:	ldrb	r0, [r0]
   135b8:	mov	r1, #0
   135bc:	cmp	r0, r2
   135c0:	mvncc	r1, #0
   135c4:	movwhi	r1, #1
   135c8:	mov	r0, r1
   135cc:	bx	lr
   135d0:	cmp	r1, #0
   135d4:	mvnne	r1, #0
   135d8:	mov	r0, r1
   135dc:	bx	lr

000135e0 <table_compare_string@@Base>:
   135e0:	cmp	r0, #0
   135e4:	beq	135fc <table_compare_string@@Base+0x1c>
   135e8:	cmp	r1, #0
   135ec:	moveq	r1, #1
   135f0:	moveq	r0, r1
   135f4:	bxeq	lr
   135f8:	b	11e90 <strcmp@plt>
   135fc:	cmp	r1, #0
   13600:	mvnne	r1, #0
   13604:	mov	r0, r1
   13608:	bx	lr

0001360c <table_compare_ptr@@Base>:
   1360c:	mov	r2, #0
   13610:	cmp	r0, r1
   13614:	mvncc	r2, #0
   13618:	movwhi	r2, #1
   1361c:	mov	r0, r2
   13620:	bx	lr

00013624 <table_get_default_compare_function_for_data_type@@Base>:
   13624:	cmp	r0, #23
   13628:	movwls	r1, #21808	; 0x5530
   1362c:	movhi	r0, #0
   13630:	movtls	r1, #1
   13634:	ldrls	r0, [r1, r0, lsl #2]
   13638:	bx	lr

0001363c <table_get@@Base>:
   1363c:	push	{fp, lr}
   13640:	mov	fp, sp
   13644:	bl	14a30 <table_get_cell_ptr@@Base>
   13648:	ldr	r0, [r0]
   1364c:	pop	{fp, pc}

00013650 <table_get_bool@@Base>:
   13650:	push	{fp, lr}
   13654:	mov	fp, sp
   13658:	bl	14a30 <table_get_cell_ptr@@Base>
   1365c:	ldr	r0, [r0]
   13660:	ldrb	r0, [r0]
   13664:	pop	{fp, pc}

00013668 <table_get_int@@Base>:
   13668:	push	{fp, lr}
   1366c:	mov	fp, sp
   13670:	bl	14a30 <table_get_cell_ptr@@Base>
   13674:	ldr	r0, [r0]
   13678:	ldr	r0, [r0]
   1367c:	pop	{fp, pc}

00013680 <table_get_uint@@Base>:
   13680:	push	{fp, lr}
   13684:	mov	fp, sp
   13688:	bl	14a30 <table_get_cell_ptr@@Base>
   1368c:	ldr	r0, [r0]
   13690:	ldr	r0, [r0]
   13694:	pop	{fp, pc}

00013698 <table_get_int8@@Base>:
   13698:	push	{fp, lr}
   1369c:	mov	fp, sp
   136a0:	bl	14a30 <table_get_cell_ptr@@Base>
   136a4:	ldr	r0, [r0]
   136a8:	ldrsb	r0, [r0]
   136ac:	pop	{fp, pc}

000136b0 <table_get_uint8@@Base>:
   136b0:	push	{fp, lr}
   136b4:	mov	fp, sp
   136b8:	bl	14a30 <table_get_cell_ptr@@Base>
   136bc:	ldr	r0, [r0]
   136c0:	ldrb	r0, [r0]
   136c4:	pop	{fp, pc}

000136c8 <table_get_int16@@Base>:
   136c8:	push	{fp, lr}
   136cc:	mov	fp, sp
   136d0:	bl	14a30 <table_get_cell_ptr@@Base>
   136d4:	ldr	r0, [r0]
   136d8:	ldrsh	r0, [r0]
   136dc:	pop	{fp, pc}

000136e0 <table_get_uint16@@Base>:
   136e0:	push	{fp, lr}
   136e4:	mov	fp, sp
   136e8:	bl	14a30 <table_get_cell_ptr@@Base>
   136ec:	ldr	r0, [r0]
   136f0:	ldrh	r0, [r0]
   136f4:	pop	{fp, pc}

000136f8 <table_get_int32@@Base>:
   136f8:	push	{fp, lr}
   136fc:	mov	fp, sp
   13700:	bl	14a30 <table_get_cell_ptr@@Base>
   13704:	ldr	r0, [r0]
   13708:	ldr	r0, [r0]
   1370c:	pop	{fp, pc}

00013710 <table_get_uint32@@Base>:
   13710:	push	{fp, lr}
   13714:	mov	fp, sp
   13718:	bl	14a30 <table_get_cell_ptr@@Base>
   1371c:	ldr	r0, [r0]
   13720:	ldr	r0, [r0]
   13724:	pop	{fp, pc}

00013728 <table_get_int64@@Base>:
   13728:	push	{fp, lr}
   1372c:	mov	fp, sp
   13730:	bl	14a30 <table_get_cell_ptr@@Base>
   13734:	ldr	r0, [r0]
   13738:	ldrd	r0, [r0]
   1373c:	pop	{fp, pc}

00013740 <table_get_uint64@@Base>:
   13740:	push	{fp, lr}
   13744:	mov	fp, sp
   13748:	bl	14a30 <table_get_cell_ptr@@Base>
   1374c:	ldr	r0, [r0]
   13750:	ldrd	r0, [r0]
   13754:	pop	{fp, pc}

00013758 <table_get_short@@Base>:
   13758:	push	{fp, lr}
   1375c:	mov	fp, sp
   13760:	bl	14a30 <table_get_cell_ptr@@Base>
   13764:	ldr	r0, [r0]
   13768:	ldrsh	r0, [r0]
   1376c:	pop	{fp, pc}

00013770 <table_get_ushort@@Base>:
   13770:	push	{fp, lr}
   13774:	mov	fp, sp
   13778:	bl	14a30 <table_get_cell_ptr@@Base>
   1377c:	ldr	r0, [r0]
   13780:	ldrh	r0, [r0]
   13784:	pop	{fp, pc}

00013788 <table_get_long@@Base>:
   13788:	push	{fp, lr}
   1378c:	mov	fp, sp
   13790:	bl	14a30 <table_get_cell_ptr@@Base>
   13794:	ldr	r0, [r0]
   13798:	ldr	r0, [r0]
   1379c:	pop	{fp, pc}

000137a0 <table_get_ulong@@Base>:
   137a0:	push	{fp, lr}
   137a4:	mov	fp, sp
   137a8:	bl	14a30 <table_get_cell_ptr@@Base>
   137ac:	ldr	r0, [r0]
   137b0:	ldr	r0, [r0]
   137b4:	pop	{fp, pc}

000137b8 <table_get_llong@@Base>:
   137b8:	push	{fp, lr}
   137bc:	mov	fp, sp
   137c0:	bl	14a30 <table_get_cell_ptr@@Base>
   137c4:	ldr	r0, [r0]
   137c8:	ldrd	r0, [r0]
   137cc:	pop	{fp, pc}

000137d0 <table_get_ullong@@Base>:
   137d0:	push	{fp, lr}
   137d4:	mov	fp, sp
   137d8:	bl	14a30 <table_get_cell_ptr@@Base>
   137dc:	ldr	r0, [r0]
   137e0:	ldrd	r0, [r0]
   137e4:	pop	{fp, pc}

000137e8 <table_get_float@@Base>:
   137e8:	push	{fp, lr}
   137ec:	mov	fp, sp
   137f0:	bl	14a30 <table_get_cell_ptr@@Base>
   137f4:	ldr	r0, [r0]
   137f8:	vldr	s0, [r0]
   137fc:	pop	{fp, pc}

00013800 <table_get_double@@Base>:
   13800:	push	{fp, lr}
   13804:	mov	fp, sp
   13808:	bl	14a30 <table_get_cell_ptr@@Base>
   1380c:	ldr	r0, [r0]
   13810:	vldr	d0, [r0]
   13814:	pop	{fp, pc}

00013818 <table_get_ldouble@@Base>:
   13818:	push	{fp, lr}
   1381c:	mov	fp, sp
   13820:	bl	14a30 <table_get_cell_ptr@@Base>
   13824:	ldr	r0, [r0]
   13828:	vldr	d0, [r0]
   1382c:	pop	{fp, pc}

00013830 <table_get_char@@Base>:
   13830:	push	{fp, lr}
   13834:	mov	fp, sp
   13838:	bl	14a30 <table_get_cell_ptr@@Base>
   1383c:	ldr	r0, [r0]
   13840:	ldrb	r0, [r0]
   13844:	pop	{fp, pc}

00013848 <table_get_uchar@@Base>:
   13848:	push	{fp, lr}
   1384c:	mov	fp, sp
   13850:	bl	14a30 <table_get_cell_ptr@@Base>
   13854:	ldr	r0, [r0]
   13858:	ldrb	r0, [r0]
   1385c:	pop	{fp, pc}

00013860 <table_get_string@@Base>:
   13860:	push	{fp, lr}
   13864:	mov	fp, sp
   13868:	bl	14a30 <table_get_cell_ptr@@Base>
   1386c:	ldr	r0, [r0]
   13870:	pop	{fp, pc}

00013874 <table_get_ptr@@Base>:
   13874:	push	{fp, lr}
   13878:	mov	fp, sp
   1387c:	bl	14a30 <table_get_cell_ptr@@Base>
   13880:	ldr	r0, [r0]
   13884:	pop	{fp, pc}

00013888 <table_row_init@@Base>:
   13888:	push	{r4, r5, fp, lr}
   1388c:	add	fp, sp, #8
   13890:	mov	r4, r1
   13894:	ldr	r1, [r0, #12]
   13898:	ldr	r5, [r0, #16]
   1389c:	lsl	r0, r1, #2
   138a0:	bl	11ecc <malloc@plt>
   138a4:	str	r0, [r5, r4, lsl #2]
   138a8:	pop	{r4, r5, fp, pc}

000138ac <table_get_row_ptr@@Base>:
   138ac:	ldr	r0, [r0, #16]
   138b0:	add	r0, r0, r1, lsl #2
   138b4:	bx	lr

000138b8 <table_row_destroy@@Base>:
   138b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138bc:	add	fp, sp, #24
   138c0:	mov	r4, r1
   138c4:	mov	r5, r0
   138c8:	bl	12bb8 <table_get_column_length@@Base>
   138cc:	ldr	r8, [r5, #16]
   138d0:	cmp	r0, #1
   138d4:	blt	138fc <table_row_destroy@@Base+0x44>
   138d8:	mov	r6, r0
   138dc:	mov	r7, #0
   138e0:	mov	r0, r5
   138e4:	mov	r1, r4
   138e8:	mov	r2, r7
   138ec:	bl	14a4c <table_cell_destroy@@Base>
   138f0:	add	r7, r7, #1
   138f4:	cmp	r6, r7
   138f8:	bne	138e0 <table_row_destroy@@Base+0x28>
   138fc:	ldr	r0, [r8, r4, lsl #2]
   13900:	cmp	r0, #0
   13904:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13908:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1390c:	b	11ea8 <free@plt>

00013910 <table_get_row_length@@Base>:
   13910:	ldr	r0, [r0, #20]
   13914:	bx	lr

00013918 <table_add_row@@Base>:
   13918:	push	{r4, r5, r6, r7, fp, lr}
   1391c:	add	fp, sp, #16
   13920:	ldr	r5, [r0, #20]
   13924:	ldr	r1, [r0, #24]
   13928:	mov	r4, r0
   1392c:	udiv	r0, r5, r1
   13930:	mls	r0, r0, r1, r5
   13934:	cmp	r0, #0
   13938:	bne	1395c <table_add_row@@Base+0x44>
   1393c:	ldr	r2, [r4, #28]
   13940:	ldr	r0, [r4, #16]
   13944:	add	r1, r2, r1
   13948:	str	r1, [r4, #28]
   1394c:	lsl	r1, r1, #2
   13950:	bl	11eb4 <realloc@plt>
   13954:	str	r0, [r4, #16]
   13958:	ldr	r5, [r4, #20]
   1395c:	mov	r0, r4
   13960:	bl	12bb8 <table_get_column_length@@Base>
   13964:	mov	r6, r0
   13968:	ldr	r0, [r4, #12]
   1396c:	ldr	r7, [r4, #16]
   13970:	lsl	r0, r0, #2
   13974:	bl	11ecc <malloc@plt>
   13978:	cmp	r6, #1
   1397c:	str	r0, [r7, r5, lsl #2]
   13980:	blt	139a4 <table_add_row@@Base+0x8c>
   13984:	mov	r7, #0
   13988:	mov	r0, r4
   1398c:	mov	r1, r5
   13990:	mov	r2, r7
   13994:	bl	14a10 <table_cell_init@@Base>
   13998:	add	r7, r7, #1
   1399c:	cmp	r6, r7
   139a0:	bne	13988 <table_add_row@@Base+0x70>
   139a4:	ldr	r1, [r4, #20]
   139a8:	mov	r0, r4
   139ac:	mvn	r2, #0
   139b0:	mov	r3, #2
   139b4:	bl	12ac4 <table_notify@@Base>
   139b8:	ldr	r0, [r4, #20]
   139bc:	add	r1, r0, #1
   139c0:	str	r1, [r4, #20]
   139c4:	pop	{r4, r5, r6, r7, fp, pc}

000139c8 <table_remove_row@@Base>:
   139c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139cc:	add	fp, sp, #24
   139d0:	ldr	r8, [r0, #20]
   139d4:	mov	r4, r1
   139d8:	mov	r5, r0
   139dc:	bl	12bb8 <table_get_column_length@@Base>
   139e0:	cmp	r0, #1
   139e4:	blt	13a30 <table_remove_row@@Base+0x68>
   139e8:	mov	r6, r0
   139ec:	mov	r7, #0
   139f0:	mov	r0, r5
   139f4:	mov	r1, r7
   139f8:	bl	12c38 <table_get_column_data_type@@Base>
   139fc:	cmp	r0, #23
   13a00:	beq	13a24 <table_remove_row@@Base+0x5c>
   13a04:	mov	r0, r5
   13a08:	mov	r1, r4
   13a0c:	mov	r2, r7
   13a10:	bl	14a30 <table_get_cell_ptr@@Base>
   13a14:	ldr	r0, [r0]
   13a18:	cmp	r0, #0
   13a1c:	beq	13a24 <table_remove_row@@Base+0x5c>
   13a20:	bl	11ea8 <free@plt>
   13a24:	add	r7, r7, #1
   13a28:	cmp	r6, r7
   13a2c:	bne	139f0 <table_remove_row@@Base+0x28>
   13a30:	ldr	r0, [r5, #16]
   13a34:	ldr	r0, [r0, r4, lsl #2]
   13a38:	cmp	r0, #0
   13a3c:	beq	13a44 <table_remove_row@@Base+0x7c>
   13a40:	bl	11ea8 <free@plt>
   13a44:	sub	r0, r8, #1
   13a48:	cmp	r0, r4
   13a4c:	ble	13a70 <table_remove_row@@Base+0xa8>
   13a50:	mov	r1, r4
   13a54:	ldr	r2, [r5, #16]
   13a58:	add	r3, r2, r1, lsl #2
   13a5c:	ldr	r3, [r3, #4]
   13a60:	str	r3, [r2, r1, lsl #2]
   13a64:	add	r1, r1, #1
   13a68:	cmp	r0, r1
   13a6c:	bne	13a54 <table_remove_row@@Base+0x8c>
   13a70:	ldr	r0, [r5, #20]
   13a74:	ldr	r1, [r5, #24]
   13a78:	sub	r0, r0, #1
   13a7c:	udiv	r2, r0, r1
   13a80:	str	r0, [r5, #20]
   13a84:	mls	r0, r2, r1, r0
   13a88:	cmp	r0, #0
   13a8c:	bne	13aac <table_remove_row@@Base+0xe4>
   13a90:	ldr	r2, [r5, #28]
   13a94:	ldr	r0, [r5, #16]
   13a98:	sub	r1, r2, r1
   13a9c:	str	r1, [r5, #28]
   13aa0:	lsl	r1, r1, #2
   13aa4:	bl	11eb4 <realloc@plt>
   13aa8:	str	r0, [r5, #16]
   13aac:	mov	r0, r5
   13ab0:	mov	r1, r4
   13ab4:	mvn	r2, #0
   13ab8:	mov	r3, #4
   13abc:	bl	12ac4 <table_notify@@Base>
   13ac0:	mov	r0, #0
   13ac4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ac8 <table_set_row_ptr@@Base>:
   13ac8:	ldr	r2, [r2]
   13acc:	ldr	r0, [r0, #16]
   13ad0:	str	r2, [r0, r1, lsl #2]
   13ad4:	bx	lr

00013ad8 <table_set@@Base>:
   13ad8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13adc:	add	fp, sp, #24
   13ae0:	mov	r8, r3
   13ae4:	mov	r4, r2
   13ae8:	mov	r9, r1
   13aec:	mov	r6, r0
   13af0:	bl	14a30 <table_get_cell_ptr@@Base>
   13af4:	mov	r5, r0
   13af8:	mov	r0, r6
   13afc:	mov	r1, r4
   13b00:	bl	12b90 <table_get_col_ptr@@Base>
   13b04:	ldr	r1, [fp, #8]
   13b08:	mvn	r7, #0
   13b0c:	cmp	r1, #23
   13b10:	bhi	13dd4 <table_set@@Base+0x2fc>
   13b14:	add	r2, pc, #0
   13b18:	ldr	pc, [r2, r1, lsl #2]
   13b1c:	andeq	r3, r1, ip, ror fp
   13b20:	andeq	r3, r1, ip, lsl #23
   13b24:	muleq	r1, ip, fp
   13b28:	andeq	r3, r1, ip, lsr #23
   13b2c:			; <UNDEFINED> instruction: 0x00013bbc
   13b30:	andeq	r3, r1, ip, asr #23
   13b34:	ldrdeq	r3, [r1], -ip
   13b38:	andeq	r3, r1, ip, ror #23
   13b3c:	strdeq	r3, [r1], -ip
   13b40:	andeq	r3, r1, ip, lsl #24
   13b44:	andeq	r3, r1, ip, lsl ip
   13b48:	andeq	r3, r1, ip, lsr #24
   13b4c:	andeq	r3, r1, r4, ror #24
   13b50:	andeq	r3, r1, r4, ror ip
   13b54:	andeq	r3, r1, r4, lsl #25
   13b58:	muleq	r1, r4, ip
   13b5c:	andeq	r3, r1, r4, lsr #25
   13b60:	ldrdeq	r3, [r1], -ip
   13b64:	andeq	r3, r1, ip, ror #25
   13b68:	andeq	r3, r1, ip, lsr #26
   13b6c:	andeq	r3, r1, ip, lsr sp
   13b70:	andeq	r3, r1, ip, asr #26
   13b74:	andeq	r3, r1, r8, lsl #27
   13b78:	ldrdeq	r3, [r1], -ip
   13b7c:	ldr	r0, [r0, #4]
   13b80:	cmp	r0, #0
   13b84:	bne	13dd4 <table_set@@Base+0x2fc>
   13b88:	b	13cb0 <table_set@@Base+0x1d8>
   13b8c:	ldr	r0, [r0, #4]
   13b90:	cmp	r0, #1
   13b94:	beq	13cb0 <table_set@@Base+0x1d8>
   13b98:	b	13dd4 <table_set@@Base+0x2fc>
   13b9c:	ldr	r0, [r0, #4]
   13ba0:	cmp	r0, #2
   13ba4:	beq	13d94 <table_set@@Base+0x2bc>
   13ba8:	b	13dd4 <table_set@@Base+0x2fc>
   13bac:	ldr	r0, [r0, #4]
   13bb0:	cmp	r0, #3
   13bb4:	beq	13d94 <table_set@@Base+0x2bc>
   13bb8:	b	13dd4 <table_set@@Base+0x2fc>
   13bbc:	ldr	r0, [r0, #4]
   13bc0:	cmp	r0, #4
   13bc4:	beq	13c38 <table_set@@Base+0x160>
   13bc8:	b	13dd4 <table_set@@Base+0x2fc>
   13bcc:	ldr	r0, [r0, #4]
   13bd0:	cmp	r0, #5
   13bd4:	beq	13c38 <table_set@@Base+0x160>
   13bd8:	b	13dd4 <table_set@@Base+0x2fc>
   13bdc:	ldr	r0, [r0, #4]
   13be0:	cmp	r0, #6
   13be4:	beq	13cb0 <table_set@@Base+0x1d8>
   13be8:	b	13dd4 <table_set@@Base+0x2fc>
   13bec:	ldr	r0, [r0, #4]
   13bf0:	cmp	r0, #7
   13bf4:	beq	13cb0 <table_set@@Base+0x1d8>
   13bf8:	b	13dd4 <table_set@@Base+0x2fc>
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, #8
   13c04:	beq	13cf8 <table_set@@Base+0x220>
   13c08:	b	13dd4 <table_set@@Base+0x2fc>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #9
   13c14:	beq	13cf8 <table_set@@Base+0x220>
   13c18:	b	13dd4 <table_set@@Base+0x2fc>
   13c1c:	ldr	r0, [r0, #4]
   13c20:	cmp	r0, #10
   13c24:	beq	13c38 <table_set@@Base+0x160>
   13c28:	b	13dd4 <table_set@@Base+0x2fc>
   13c2c:	ldr	r0, [r0, #4]
   13c30:	cmp	r0, #11
   13c34:	bne	13dd4 <table_set@@Base+0x2fc>
   13c38:	ldr	r0, [r5]
   13c3c:	cmp	r0, #0
   13c40:	bne	13c58 <table_set@@Base+0x180>
   13c44:	mov	r0, #2
   13c48:	bl	11ecc <malloc@plt>
   13c4c:	cmp	r0, #0
   13c50:	str	r0, [r5]
   13c54:	beq	13dd4 <table_set@@Base+0x2fc>
   13c58:	ldrh	r1, [r8]
   13c5c:	strh	r1, [r0]
   13c60:	b	13dbc <table_set@@Base+0x2e4>
   13c64:	ldr	r0, [r0, #4]
   13c68:	cmp	r0, #12
   13c6c:	beq	13cb0 <table_set@@Base+0x1d8>
   13c70:	b	13dd4 <table_set@@Base+0x2fc>
   13c74:	ldr	r0, [r0, #4]
   13c78:	cmp	r0, #13
   13c7c:	beq	13cb0 <table_set@@Base+0x1d8>
   13c80:	b	13dd4 <table_set@@Base+0x2fc>
   13c84:	ldr	r0, [r0, #4]
   13c88:	cmp	r0, #14
   13c8c:	beq	13cf8 <table_set@@Base+0x220>
   13c90:	b	13dd4 <table_set@@Base+0x2fc>
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #15
   13c9c:	beq	13cf8 <table_set@@Base+0x220>
   13ca0:	b	13dd4 <table_set@@Base+0x2fc>
   13ca4:	ldr	r0, [r0, #4]
   13ca8:	cmp	r0, #16
   13cac:	bne	13dd4 <table_set@@Base+0x2fc>
   13cb0:	ldr	r0, [r5]
   13cb4:	cmp	r0, #0
   13cb8:	bne	13cd0 <table_set@@Base+0x1f8>
   13cbc:	mov	r0, #4
   13cc0:	bl	11ecc <malloc@plt>
   13cc4:	cmp	r0, #0
   13cc8:	str	r0, [r5]
   13ccc:	beq	13dd4 <table_set@@Base+0x2fc>
   13cd0:	ldr	r1, [r8]
   13cd4:	str	r1, [r0]
   13cd8:	b	13dbc <table_set@@Base+0x2e4>
   13cdc:	ldr	r0, [r0, #4]
   13ce0:	cmp	r0, #17
   13ce4:	beq	13cf8 <table_set@@Base+0x220>
   13ce8:	b	13dd4 <table_set@@Base+0x2fc>
   13cec:	ldr	r0, [r0, #4]
   13cf0:	cmp	r0, #18
   13cf4:	bne	13dd4 <table_set@@Base+0x2fc>
   13cf8:	ldr	r0, [r5]
   13cfc:	cmp	r0, #0
   13d00:	bne	13d18 <table_set@@Base+0x240>
   13d04:	mov	r0, #8
   13d08:	bl	11ecc <malloc@plt>
   13d0c:	cmp	r0, #0
   13d10:	str	r0, [r5]
   13d14:	beq	13dd4 <table_set@@Base+0x2fc>
   13d18:	ldr	r1, [r8]
   13d1c:	ldr	r2, [r8, #4]
   13d20:	str	r2, [r0, #4]
   13d24:	str	r1, [r0]
   13d28:	b	13dbc <table_set@@Base+0x2e4>
   13d2c:	ldr	r0, [r0, #4]
   13d30:	cmp	r0, #19
   13d34:	beq	13d94 <table_set@@Base+0x2bc>
   13d38:	b	13dd4 <table_set@@Base+0x2fc>
   13d3c:	ldr	r0, [r0, #4]
   13d40:	cmp	r0, #20
   13d44:	beq	13d94 <table_set@@Base+0x2bc>
   13d48:	b	13dd4 <table_set@@Base+0x2fc>
   13d4c:	ldr	r0, [r0, #4]
   13d50:	cmp	r0, #21
   13d54:	bne	13dd4 <table_set@@Base+0x2fc>
   13d58:	mov	r0, r8
   13d5c:	bl	11ef0 <strlen@plt>
   13d60:	ldr	r2, [r5]
   13d64:	add	r1, r0, #1
   13d68:	mov	r0, r2
   13d6c:	bl	11eb4 <realloc@plt>
   13d70:	cmp	r0, #0
   13d74:	str	r0, [r5]
   13d78:	beq	13dd4 <table_set@@Base+0x2fc>
   13d7c:	mov	r1, r8
   13d80:	bl	11ec0 <strcpy@plt>
   13d84:	b	13dbc <table_set@@Base+0x2e4>
   13d88:	ldr	r0, [r0, #4]
   13d8c:	cmp	r0, #22
   13d90:	bne	13dd4 <table_set@@Base+0x2fc>
   13d94:	ldr	r0, [r5]
   13d98:	cmp	r0, #0
   13d9c:	bne	13db4 <table_set@@Base+0x2dc>
   13da0:	mov	r0, #1
   13da4:	bl	11ecc <malloc@plt>
   13da8:	cmp	r0, #0
   13dac:	str	r0, [r5]
   13db0:	beq	13dd4 <table_set@@Base+0x2fc>
   13db4:	ldrb	r1, [r8]
   13db8:	strb	r1, [r0]
   13dbc:	mov	r0, r6
   13dc0:	mov	r1, r9
   13dc4:	mov	r2, r4
   13dc8:	mov	r3, #1
   13dcc:	bl	12ac4 <table_notify@@Base>
   13dd0:	mov	r7, #0
   13dd4:	mov	r0, r7
   13dd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ddc:	ldr	r0, [r0, #4]
   13de0:	cmp	r0, #23
   13de4:	bne	13dd4 <table_set@@Base+0x2fc>
   13de8:	str	r8, [r5]
   13dec:	b	13dbc <table_set@@Base+0x2e4>

00013df0 <table_set_bool@@Base>:
   13df0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13df4:	add	fp, sp, #24
   13df8:	mov	r8, r3
   13dfc:	mov	r4, r2
   13e00:	mov	r9, r1
   13e04:	mov	r6, r0
   13e08:	bl	14a30 <table_get_cell_ptr@@Base>
   13e0c:	mov	r5, r0
   13e10:	mov	r0, r6
   13e14:	mov	r1, r4
   13e18:	bl	12b90 <table_get_col_ptr@@Base>
   13e1c:	ldr	r0, [r0, #4]
   13e20:	mvn	r7, #0
   13e24:	cmp	r0, #22
   13e28:	bne	13e68 <table_set_bool@@Base+0x78>
   13e2c:	ldr	r0, [r5]
   13e30:	cmp	r0, #0
   13e34:	bne	13e4c <table_set_bool@@Base+0x5c>
   13e38:	mov	r0, #1
   13e3c:	bl	11ecc <malloc@plt>
   13e40:	cmp	r0, #0
   13e44:	str	r0, [r5]
   13e48:	beq	13e68 <table_set_bool@@Base+0x78>
   13e4c:	strb	r8, [r0]
   13e50:	mov	r0, r6
   13e54:	mov	r1, r9
   13e58:	mov	r2, r4
   13e5c:	mov	r3, #1
   13e60:	bl	12ac4 <table_notify@@Base>
   13e64:	mov	r7, #0
   13e68:	mov	r0, r7
   13e6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e70 <table_set_int@@Base>:
   13e70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e74:	add	fp, sp, #24
   13e78:	mov	r8, r3
   13e7c:	mov	r4, r2
   13e80:	mov	r5, r1
   13e84:	mov	r6, r0
   13e88:	bl	14a30 <table_get_cell_ptr@@Base>
   13e8c:	mov	r9, r0
   13e90:	mov	r0, r6
   13e94:	mov	r1, r4
   13e98:	bl	12b90 <table_get_col_ptr@@Base>
   13e9c:	ldr	r0, [r0, #4]
   13ea0:	mvn	r7, #0
   13ea4:	cmp	r0, #0
   13ea8:	bne	13ee8 <table_set_int@@Base+0x78>
   13eac:	ldr	r0, [r9]
   13eb0:	cmp	r0, #0
   13eb4:	bne	13ecc <table_set_int@@Base+0x5c>
   13eb8:	mov	r0, #4
   13ebc:	bl	11ecc <malloc@plt>
   13ec0:	cmp	r0, #0
   13ec4:	str	r0, [r9]
   13ec8:	beq	13ee8 <table_set_int@@Base+0x78>
   13ecc:	str	r8, [r0]
   13ed0:	mov	r0, r6
   13ed4:	mov	r1, r5
   13ed8:	mov	r2, r4
   13edc:	mov	r3, #1
   13ee0:	bl	12ac4 <table_notify@@Base>
   13ee4:	mov	r7, #0
   13ee8:	mov	r0, r7
   13eec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ef0 <table_set_uint@@Base>:
   13ef0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ef4:	add	fp, sp, #24
   13ef8:	mov	r8, r3
   13efc:	mov	r4, r2
   13f00:	mov	r5, r1
   13f04:	mov	r6, r0
   13f08:	bl	14a30 <table_get_cell_ptr@@Base>
   13f0c:	mov	r9, r0
   13f10:	mov	r0, r6
   13f14:	mov	r1, r4
   13f18:	bl	12b90 <table_get_col_ptr@@Base>
   13f1c:	ldr	r0, [r0, #4]
   13f20:	mvn	r7, #0
   13f24:	cmp	r0, #1
   13f28:	bne	13f68 <table_set_uint@@Base+0x78>
   13f2c:	ldr	r0, [r9]
   13f30:	cmp	r0, #0
   13f34:	bne	13f4c <table_set_uint@@Base+0x5c>
   13f38:	mov	r0, #4
   13f3c:	bl	11ecc <malloc@plt>
   13f40:	cmp	r0, #0
   13f44:	str	r0, [r9]
   13f48:	beq	13f68 <table_set_uint@@Base+0x78>
   13f4c:	str	r8, [r0]
   13f50:	mov	r0, r6
   13f54:	mov	r1, r5
   13f58:	mov	r2, r4
   13f5c:	mov	r3, #1
   13f60:	bl	12ac4 <table_notify@@Base>
   13f64:	mov	r7, #0
   13f68:	mov	r0, r7
   13f6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f70 <table_set_int8@@Base>:
   13f70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f74:	add	fp, sp, #24
   13f78:	mov	r8, r3
   13f7c:	mov	r4, r2
   13f80:	mov	r9, r1
   13f84:	mov	r6, r0
   13f88:	bl	14a30 <table_get_cell_ptr@@Base>
   13f8c:	mov	r5, r0
   13f90:	mov	r0, r6
   13f94:	mov	r1, r4
   13f98:	bl	12b90 <table_get_col_ptr@@Base>
   13f9c:	ldr	r0, [r0, #4]
   13fa0:	mvn	r7, #0
   13fa4:	cmp	r0, #2
   13fa8:	bne	13fe8 <table_set_int8@@Base+0x78>
   13fac:	ldr	r0, [r5]
   13fb0:	cmp	r0, #0
   13fb4:	bne	13fcc <table_set_int8@@Base+0x5c>
   13fb8:	mov	r0, #1
   13fbc:	bl	11ecc <malloc@plt>
   13fc0:	cmp	r0, #0
   13fc4:	str	r0, [r5]
   13fc8:	beq	13fe8 <table_set_int8@@Base+0x78>
   13fcc:	strb	r8, [r0]
   13fd0:	mov	r0, r6
   13fd4:	mov	r1, r9
   13fd8:	mov	r2, r4
   13fdc:	mov	r3, #1
   13fe0:	bl	12ac4 <table_notify@@Base>
   13fe4:	mov	r7, #0
   13fe8:	mov	r0, r7
   13fec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ff0 <table_set_uint8@@Base>:
   13ff0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ff4:	add	fp, sp, #24
   13ff8:	mov	r8, r3
   13ffc:	mov	r4, r2
   14000:	mov	r9, r1
   14004:	mov	r6, r0
   14008:	bl	14a30 <table_get_cell_ptr@@Base>
   1400c:	mov	r5, r0
   14010:	mov	r0, r6
   14014:	mov	r1, r4
   14018:	bl	12b90 <table_get_col_ptr@@Base>
   1401c:	ldr	r0, [r0, #4]
   14020:	mvn	r7, #0
   14024:	cmp	r0, #3
   14028:	bne	14068 <table_set_uint8@@Base+0x78>
   1402c:	ldr	r0, [r5]
   14030:	cmp	r0, #0
   14034:	bne	1404c <table_set_uint8@@Base+0x5c>
   14038:	mov	r0, #1
   1403c:	bl	11ecc <malloc@plt>
   14040:	cmp	r0, #0
   14044:	str	r0, [r5]
   14048:	beq	14068 <table_set_uint8@@Base+0x78>
   1404c:	strb	r8, [r0]
   14050:	mov	r0, r6
   14054:	mov	r1, r9
   14058:	mov	r2, r4
   1405c:	mov	r3, #1
   14060:	bl	12ac4 <table_notify@@Base>
   14064:	mov	r7, #0
   14068:	mov	r0, r7
   1406c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014070 <table_set_int16@@Base>:
   14070:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14074:	add	fp, sp, #24
   14078:	mov	r8, r3
   1407c:	mov	r4, r2
   14080:	mov	r9, r1
   14084:	mov	r6, r0
   14088:	bl	14a30 <table_get_cell_ptr@@Base>
   1408c:	mov	r5, r0
   14090:	mov	r0, r6
   14094:	mov	r1, r4
   14098:	bl	12b90 <table_get_col_ptr@@Base>
   1409c:	ldr	r0, [r0, #4]
   140a0:	mvn	r7, #0
   140a4:	cmp	r0, #4
   140a8:	bne	140e8 <table_set_int16@@Base+0x78>
   140ac:	ldr	r0, [r5]
   140b0:	cmp	r0, #0
   140b4:	bne	140cc <table_set_int16@@Base+0x5c>
   140b8:	mov	r0, #2
   140bc:	bl	11ecc <malloc@plt>
   140c0:	cmp	r0, #0
   140c4:	str	r0, [r5]
   140c8:	beq	140e8 <table_set_int16@@Base+0x78>
   140cc:	strh	r8, [r0]
   140d0:	mov	r0, r6
   140d4:	mov	r1, r9
   140d8:	mov	r2, r4
   140dc:	mov	r3, #1
   140e0:	bl	12ac4 <table_notify@@Base>
   140e4:	mov	r7, #0
   140e8:	mov	r0, r7
   140ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140f0 <table_set_uint16@@Base>:
   140f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140f4:	add	fp, sp, #24
   140f8:	mov	r8, r3
   140fc:	mov	r4, r2
   14100:	mov	r9, r1
   14104:	mov	r6, r0
   14108:	bl	14a30 <table_get_cell_ptr@@Base>
   1410c:	mov	r5, r0
   14110:	mov	r0, r6
   14114:	mov	r1, r4
   14118:	bl	12b90 <table_get_col_ptr@@Base>
   1411c:	ldr	r0, [r0, #4]
   14120:	mvn	r7, #0
   14124:	cmp	r0, #5
   14128:	bne	14168 <table_set_uint16@@Base+0x78>
   1412c:	ldr	r0, [r5]
   14130:	cmp	r0, #0
   14134:	bne	1414c <table_set_uint16@@Base+0x5c>
   14138:	mov	r0, #2
   1413c:	bl	11ecc <malloc@plt>
   14140:	cmp	r0, #0
   14144:	str	r0, [r5]
   14148:	beq	14168 <table_set_uint16@@Base+0x78>
   1414c:	strh	r8, [r0]
   14150:	mov	r0, r6
   14154:	mov	r1, r9
   14158:	mov	r2, r4
   1415c:	mov	r3, #1
   14160:	bl	12ac4 <table_notify@@Base>
   14164:	mov	r7, #0
   14168:	mov	r0, r7
   1416c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014170 <table_set_int32@@Base>:
   14170:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14174:	add	fp, sp, #24
   14178:	mov	r8, r3
   1417c:	mov	r4, r2
   14180:	mov	r5, r1
   14184:	mov	r6, r0
   14188:	bl	14a30 <table_get_cell_ptr@@Base>
   1418c:	mov	r9, r0
   14190:	mov	r0, r6
   14194:	mov	r1, r4
   14198:	bl	12b90 <table_get_col_ptr@@Base>
   1419c:	ldr	r0, [r0, #4]
   141a0:	mvn	r7, #0
   141a4:	cmp	r0, #6
   141a8:	bne	141e8 <table_set_int32@@Base+0x78>
   141ac:	ldr	r0, [r9]
   141b0:	cmp	r0, #0
   141b4:	bne	141cc <table_set_int32@@Base+0x5c>
   141b8:	mov	r0, #4
   141bc:	bl	11ecc <malloc@plt>
   141c0:	cmp	r0, #0
   141c4:	str	r0, [r9]
   141c8:	beq	141e8 <table_set_int32@@Base+0x78>
   141cc:	str	r8, [r0]
   141d0:	mov	r0, r6
   141d4:	mov	r1, r5
   141d8:	mov	r2, r4
   141dc:	mov	r3, #1
   141e0:	bl	12ac4 <table_notify@@Base>
   141e4:	mov	r7, #0
   141e8:	mov	r0, r7
   141ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141f0 <table_set_uint32@@Base>:
   141f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141f4:	add	fp, sp, #24
   141f8:	mov	r8, r3
   141fc:	mov	r4, r2
   14200:	mov	r5, r1
   14204:	mov	r6, r0
   14208:	bl	14a30 <table_get_cell_ptr@@Base>
   1420c:	mov	r9, r0
   14210:	mov	r0, r6
   14214:	mov	r1, r4
   14218:	bl	12b90 <table_get_col_ptr@@Base>
   1421c:	ldr	r0, [r0, #4]
   14220:	mvn	r7, #0
   14224:	cmp	r0, #7
   14228:	bne	14268 <table_set_uint32@@Base+0x78>
   1422c:	ldr	r0, [r9]
   14230:	cmp	r0, #0
   14234:	bne	1424c <table_set_uint32@@Base+0x5c>
   14238:	mov	r0, #4
   1423c:	bl	11ecc <malloc@plt>
   14240:	cmp	r0, #0
   14244:	str	r0, [r9]
   14248:	beq	14268 <table_set_uint32@@Base+0x78>
   1424c:	str	r8, [r0]
   14250:	mov	r0, r6
   14254:	mov	r1, r5
   14258:	mov	r2, r4
   1425c:	mov	r3, #1
   14260:	bl	12ac4 <table_notify@@Base>
   14264:	mov	r7, #0
   14268:	mov	r0, r7
   1426c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014270 <table_set_int64@@Base>:
   14270:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14274:	add	fp, sp, #24
   14278:	mov	r4, r2
   1427c:	mov	r8, r1
   14280:	mov	r6, r0
   14284:	bl	14a30 <table_get_cell_ptr@@Base>
   14288:	mov	r5, r0
   1428c:	mov	r0, r6
   14290:	mov	r1, r4
   14294:	bl	12b90 <table_get_col_ptr@@Base>
   14298:	ldr	r0, [r0, #4]
   1429c:	mvn	r7, #0
   142a0:	cmp	r0, #8
   142a4:	bne	142f0 <table_set_int64@@Base+0x80>
   142a8:	ldr	r0, [r5]
   142ac:	cmp	r0, #0
   142b0:	bne	142c8 <table_set_int64@@Base+0x58>
   142b4:	mov	r0, #8
   142b8:	bl	11ecc <malloc@plt>
   142bc:	cmp	r0, #0
   142c0:	str	r0, [r5]
   142c4:	beq	142f0 <table_set_int64@@Base+0x80>
   142c8:	ldr	r1, [fp, #12]
   142cc:	ldr	r2, [fp, #8]
   142d0:	mov	r3, #1
   142d4:	str	r2, [r0]
   142d8:	str	r1, [r0, #4]
   142dc:	mov	r0, r6
   142e0:	mov	r1, r8
   142e4:	mov	r2, r4
   142e8:	bl	12ac4 <table_notify@@Base>
   142ec:	mov	r7, #0
   142f0:	mov	r0, r7
   142f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000142f8 <table_set_uint64@@Base>:
   142f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142fc:	add	fp, sp, #24
   14300:	mov	r4, r2
   14304:	mov	r8, r1
   14308:	mov	r6, r0
   1430c:	bl	14a30 <table_get_cell_ptr@@Base>
   14310:	mov	r5, r0
   14314:	mov	r0, r6
   14318:	mov	r1, r4
   1431c:	bl	12b90 <table_get_col_ptr@@Base>
   14320:	ldr	r0, [r0, #4]
   14324:	mvn	r7, #0
   14328:	cmp	r0, #9
   1432c:	bne	14378 <table_set_uint64@@Base+0x80>
   14330:	ldr	r0, [r5]
   14334:	cmp	r0, #0
   14338:	bne	14350 <table_set_uint64@@Base+0x58>
   1433c:	mov	r0, #8
   14340:	bl	11ecc <malloc@plt>
   14344:	cmp	r0, #0
   14348:	str	r0, [r5]
   1434c:	beq	14378 <table_set_uint64@@Base+0x80>
   14350:	ldr	r1, [fp, #12]
   14354:	ldr	r2, [fp, #8]
   14358:	mov	r3, #1
   1435c:	str	r2, [r0]
   14360:	str	r1, [r0, #4]
   14364:	mov	r0, r6
   14368:	mov	r1, r8
   1436c:	mov	r2, r4
   14370:	bl	12ac4 <table_notify@@Base>
   14374:	mov	r7, #0
   14378:	mov	r0, r7
   1437c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014380 <table_set_short@@Base>:
   14380:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14384:	add	fp, sp, #24
   14388:	mov	r8, r3
   1438c:	mov	r4, r2
   14390:	mov	r9, r1
   14394:	mov	r6, r0
   14398:	bl	14a30 <table_get_cell_ptr@@Base>
   1439c:	mov	r5, r0
   143a0:	mov	r0, r6
   143a4:	mov	r1, r4
   143a8:	bl	12b90 <table_get_col_ptr@@Base>
   143ac:	ldr	r0, [r0, #4]
   143b0:	mvn	r7, #0
   143b4:	cmp	r0, #10
   143b8:	bne	143f8 <table_set_short@@Base+0x78>
   143bc:	ldr	r0, [r5]
   143c0:	cmp	r0, #0
   143c4:	bne	143dc <table_set_short@@Base+0x5c>
   143c8:	mov	r0, #2
   143cc:	bl	11ecc <malloc@plt>
   143d0:	cmp	r0, #0
   143d4:	str	r0, [r5]
   143d8:	beq	143f8 <table_set_short@@Base+0x78>
   143dc:	strh	r8, [r0]
   143e0:	mov	r0, r6
   143e4:	mov	r1, r9
   143e8:	mov	r2, r4
   143ec:	mov	r3, #1
   143f0:	bl	12ac4 <table_notify@@Base>
   143f4:	mov	r7, #0
   143f8:	mov	r0, r7
   143fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014400 <table_set_ushort@@Base>:
   14400:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14404:	add	fp, sp, #24
   14408:	mov	r8, r3
   1440c:	mov	r4, r2
   14410:	mov	r9, r1
   14414:	mov	r6, r0
   14418:	bl	14a30 <table_get_cell_ptr@@Base>
   1441c:	mov	r5, r0
   14420:	mov	r0, r6
   14424:	mov	r1, r4
   14428:	bl	12b90 <table_get_col_ptr@@Base>
   1442c:	ldr	r0, [r0, #4]
   14430:	mvn	r7, #0
   14434:	cmp	r0, #11
   14438:	bne	14478 <table_set_ushort@@Base+0x78>
   1443c:	ldr	r0, [r5]
   14440:	cmp	r0, #0
   14444:	bne	1445c <table_set_ushort@@Base+0x5c>
   14448:	mov	r0, #2
   1444c:	bl	11ecc <malloc@plt>
   14450:	cmp	r0, #0
   14454:	str	r0, [r5]
   14458:	beq	14478 <table_set_ushort@@Base+0x78>
   1445c:	strh	r8, [r0]
   14460:	mov	r0, r6
   14464:	mov	r1, r9
   14468:	mov	r2, r4
   1446c:	mov	r3, #1
   14470:	bl	12ac4 <table_notify@@Base>
   14474:	mov	r7, #0
   14478:	mov	r0, r7
   1447c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014480 <table_set_long@@Base>:
   14480:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14484:	add	fp, sp, #24
   14488:	mov	r8, r3
   1448c:	mov	r4, r2
   14490:	mov	r5, r1
   14494:	mov	r6, r0
   14498:	bl	14a30 <table_get_cell_ptr@@Base>
   1449c:	mov	r9, r0
   144a0:	mov	r0, r6
   144a4:	mov	r1, r4
   144a8:	bl	12b90 <table_get_col_ptr@@Base>
   144ac:	ldr	r0, [r0, #4]
   144b0:	mvn	r7, #0
   144b4:	cmp	r0, #12
   144b8:	bne	144f8 <table_set_long@@Base+0x78>
   144bc:	ldr	r0, [r9]
   144c0:	cmp	r0, #0
   144c4:	bne	144dc <table_set_long@@Base+0x5c>
   144c8:	mov	r0, #4
   144cc:	bl	11ecc <malloc@plt>
   144d0:	cmp	r0, #0
   144d4:	str	r0, [r9]
   144d8:	beq	144f8 <table_set_long@@Base+0x78>
   144dc:	str	r8, [r0]
   144e0:	mov	r0, r6
   144e4:	mov	r1, r5
   144e8:	mov	r2, r4
   144ec:	mov	r3, #1
   144f0:	bl	12ac4 <table_notify@@Base>
   144f4:	mov	r7, #0
   144f8:	mov	r0, r7
   144fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014500 <table_set_ulong@@Base>:
   14500:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14504:	add	fp, sp, #24
   14508:	mov	r8, r3
   1450c:	mov	r4, r2
   14510:	mov	r5, r1
   14514:	mov	r6, r0
   14518:	bl	14a30 <table_get_cell_ptr@@Base>
   1451c:	mov	r9, r0
   14520:	mov	r0, r6
   14524:	mov	r1, r4
   14528:	bl	12b90 <table_get_col_ptr@@Base>
   1452c:	ldr	r0, [r0, #4]
   14530:	mvn	r7, #0
   14534:	cmp	r0, #13
   14538:	bne	14578 <table_set_ulong@@Base+0x78>
   1453c:	ldr	r0, [r9]
   14540:	cmp	r0, #0
   14544:	bne	1455c <table_set_ulong@@Base+0x5c>
   14548:	mov	r0, #4
   1454c:	bl	11ecc <malloc@plt>
   14550:	cmp	r0, #0
   14554:	str	r0, [r9]
   14558:	beq	14578 <table_set_ulong@@Base+0x78>
   1455c:	str	r8, [r0]
   14560:	mov	r0, r6
   14564:	mov	r1, r5
   14568:	mov	r2, r4
   1456c:	mov	r3, #1
   14570:	bl	12ac4 <table_notify@@Base>
   14574:	mov	r7, #0
   14578:	mov	r0, r7
   1457c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014580 <table_set_llong@@Base>:
   14580:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14584:	add	fp, sp, #24
   14588:	mov	r4, r2
   1458c:	mov	r8, r1
   14590:	mov	r6, r0
   14594:	bl	14a30 <table_get_cell_ptr@@Base>
   14598:	mov	r5, r0
   1459c:	mov	r0, r6
   145a0:	mov	r1, r4
   145a4:	bl	12b90 <table_get_col_ptr@@Base>
   145a8:	ldr	r0, [r0, #4]
   145ac:	mvn	r7, #0
   145b0:	cmp	r0, #14
   145b4:	bne	14600 <table_set_llong@@Base+0x80>
   145b8:	ldr	r0, [r5]
   145bc:	cmp	r0, #0
   145c0:	bne	145d8 <table_set_llong@@Base+0x58>
   145c4:	mov	r0, #8
   145c8:	bl	11ecc <malloc@plt>
   145cc:	cmp	r0, #0
   145d0:	str	r0, [r5]
   145d4:	beq	14600 <table_set_llong@@Base+0x80>
   145d8:	ldr	r1, [fp, #12]
   145dc:	ldr	r2, [fp, #8]
   145e0:	mov	r3, #1
   145e4:	str	r2, [r0]
   145e8:	str	r1, [r0, #4]
   145ec:	mov	r0, r6
   145f0:	mov	r1, r8
   145f4:	mov	r2, r4
   145f8:	bl	12ac4 <table_notify@@Base>
   145fc:	mov	r7, #0
   14600:	mov	r0, r7
   14604:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014608 <table_set_ullong@@Base>:
   14608:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1460c:	add	fp, sp, #24
   14610:	mov	r4, r2
   14614:	mov	r8, r1
   14618:	mov	r6, r0
   1461c:	bl	14a30 <table_get_cell_ptr@@Base>
   14620:	mov	r5, r0
   14624:	mov	r0, r6
   14628:	mov	r1, r4
   1462c:	bl	12b90 <table_get_col_ptr@@Base>
   14630:	ldr	r0, [r0, #4]
   14634:	mvn	r7, #0
   14638:	cmp	r0, #15
   1463c:	bne	14688 <table_set_ullong@@Base+0x80>
   14640:	ldr	r0, [r5]
   14644:	cmp	r0, #0
   14648:	bne	14660 <table_set_ullong@@Base+0x58>
   1464c:	mov	r0, #8
   14650:	bl	11ecc <malloc@plt>
   14654:	cmp	r0, #0
   14658:	str	r0, [r5]
   1465c:	beq	14688 <table_set_ullong@@Base+0x80>
   14660:	ldr	r1, [fp, #12]
   14664:	ldr	r2, [fp, #8]
   14668:	mov	r3, #1
   1466c:	str	r2, [r0]
   14670:	str	r1, [r0, #4]
   14674:	mov	r0, r6
   14678:	mov	r1, r8
   1467c:	mov	r2, r4
   14680:	bl	12ac4 <table_notify@@Base>
   14684:	mov	r7, #0
   14688:	mov	r0, r7
   1468c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014690 <table_set_float@@Base>:
   14690:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14694:	add	fp, sp, #24
   14698:	vpush	{d8}
   1469c:	vmov.f32	s16, s0
   146a0:	mov	r4, r2
   146a4:	mov	r8, r1
   146a8:	mov	r6, r0
   146ac:	bl	14a30 <table_get_cell_ptr@@Base>
   146b0:	mov	r5, r0
   146b4:	mov	r0, r6
   146b8:	mov	r1, r4
   146bc:	bl	12b90 <table_get_col_ptr@@Base>
   146c0:	ldr	r0, [r0, #4]
   146c4:	mvn	r7, #0
   146c8:	cmp	r0, #16
   146cc:	bne	14710 <table_set_float@@Base+0x80>
   146d0:	ldr	r0, [r5]
   146d4:	cmp	r0, #0
   146d8:	bne	146f0 <table_set_float@@Base+0x60>
   146dc:	mov	r0, #4
   146e0:	bl	11ecc <malloc@plt>
   146e4:	cmp	r0, #0
   146e8:	str	r0, [r5]
   146ec:	beq	14710 <table_set_float@@Base+0x80>
   146f0:	vmov	r1, s16
   146f4:	mov	r2, r4
   146f8:	mov	r3, #1
   146fc:	str	r1, [r0]
   14700:	mov	r0, r6
   14704:	mov	r1, r8
   14708:	bl	12ac4 <table_notify@@Base>
   1470c:	mov	r7, #0
   14710:	mov	r0, r7
   14714:	vpop	{d8}
   14718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001471c <table_set_double@@Base>:
   1471c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14720:	add	fp, sp, #24
   14724:	vpush	{d8}
   14728:	vorr	d8, d0, d0
   1472c:	mov	r4, r2
   14730:	mov	r5, r1
   14734:	mov	r6, r0
   14738:	bl	14a30 <table_get_cell_ptr@@Base>
   1473c:	mov	r8, r0
   14740:	mov	r0, r6
   14744:	mov	r1, r4
   14748:	bl	12b90 <table_get_col_ptr@@Base>
   1474c:	ldr	r0, [r0, #4]
   14750:	mvn	r7, #0
   14754:	cmp	r0, #17
   14758:	bne	14798 <table_set_double@@Base+0x7c>
   1475c:	ldr	r0, [r8]
   14760:	cmp	r0, #0
   14764:	bne	1477c <table_set_double@@Base+0x60>
   14768:	mov	r0, #8
   1476c:	bl	11ecc <malloc@plt>
   14770:	cmp	r0, #0
   14774:	str	r0, [r8]
   14778:	beq	14798 <table_set_double@@Base+0x7c>
   1477c:	vst1.8	{d8}, [r0]
   14780:	mov	r0, r6
   14784:	mov	r1, r5
   14788:	mov	r2, r4
   1478c:	mov	r3, #1
   14790:	bl	12ac4 <table_notify@@Base>
   14794:	mov	r7, #0
   14798:	mov	r0, r7
   1479c:	vpop	{d8}
   147a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147a4 <table_set_ldouble@@Base>:
   147a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147a8:	add	fp, sp, #24
   147ac:	vpush	{d8}
   147b0:	vorr	d8, d0, d0
   147b4:	mov	r4, r2
   147b8:	mov	r5, r1
   147bc:	mov	r6, r0
   147c0:	bl	14a30 <table_get_cell_ptr@@Base>
   147c4:	mov	r8, r0
   147c8:	mov	r0, r6
   147cc:	mov	r1, r4
   147d0:	bl	12b90 <table_get_col_ptr@@Base>
   147d4:	ldr	r0, [r0, #4]
   147d8:	mvn	r7, #0
   147dc:	cmp	r0, #18
   147e0:	bne	14820 <table_set_ldouble@@Base+0x7c>
   147e4:	ldr	r0, [r8]
   147e8:	cmp	r0, #0
   147ec:	bne	14804 <table_set_ldouble@@Base+0x60>
   147f0:	mov	r0, #8
   147f4:	bl	11ecc <malloc@plt>
   147f8:	cmp	r0, #0
   147fc:	str	r0, [r8]
   14800:	beq	14820 <table_set_ldouble@@Base+0x7c>
   14804:	vst1.8	{d8}, [r0]
   14808:	mov	r0, r6
   1480c:	mov	r1, r5
   14810:	mov	r2, r4
   14814:	mov	r3, #1
   14818:	bl	12ac4 <table_notify@@Base>
   1481c:	mov	r7, #0
   14820:	mov	r0, r7
   14824:	vpop	{d8}
   14828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001482c <table_set_string@@Base>:
   1482c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14830:	add	fp, sp, #24
   14834:	mov	r8, r3
   14838:	mov	r4, r2
   1483c:	mov	r9, r1
   14840:	mov	r6, r0
   14844:	bl	14a30 <table_get_cell_ptr@@Base>
   14848:	mov	r5, r0
   1484c:	mov	r0, r6
   14850:	mov	r1, r4
   14854:	bl	12b90 <table_get_col_ptr@@Base>
   14858:	ldr	r0, [r0, #4]
   1485c:	mvn	r7, #0
   14860:	cmp	r0, #21
   14864:	bne	148ac <table_set_string@@Base+0x80>
   14868:	mov	r0, r8
   1486c:	bl	11ef0 <strlen@plt>
   14870:	ldr	r2, [r5]
   14874:	add	r1, r0, #1
   14878:	mov	r0, r2
   1487c:	bl	11eb4 <realloc@plt>
   14880:	cmp	r0, #0
   14884:	str	r0, [r5]
   14888:	beq	148ac <table_set_string@@Base+0x80>
   1488c:	mov	r1, r8
   14890:	bl	11ec0 <strcpy@plt>
   14894:	mov	r0, r6
   14898:	mov	r1, r9
   1489c:	mov	r2, r4
   148a0:	mov	r3, #1
   148a4:	bl	12ac4 <table_notify@@Base>
   148a8:	mov	r7, #0
   148ac:	mov	r0, r7
   148b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148b4 <table_set_char@@Base>:
   148b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148b8:	add	fp, sp, #24
   148bc:	mov	r8, r3
   148c0:	mov	r4, r2
   148c4:	mov	r9, r1
   148c8:	mov	r6, r0
   148cc:	bl	14a30 <table_get_cell_ptr@@Base>
   148d0:	mov	r5, r0
   148d4:	mov	r0, r6
   148d8:	mov	r1, r4
   148dc:	bl	12b90 <table_get_col_ptr@@Base>
   148e0:	ldr	r0, [r0, #4]
   148e4:	mvn	r7, #0
   148e8:	cmp	r0, #19
   148ec:	bne	1492c <table_set_char@@Base+0x78>
   148f0:	ldr	r0, [r5]
   148f4:	cmp	r0, #0
   148f8:	bne	14910 <table_set_char@@Base+0x5c>
   148fc:	mov	r0, #1
   14900:	bl	11ecc <malloc@plt>
   14904:	cmp	r0, #0
   14908:	str	r0, [r5]
   1490c:	beq	1492c <table_set_char@@Base+0x78>
   14910:	strb	r8, [r0]
   14914:	mov	r0, r6
   14918:	mov	r1, r9
   1491c:	mov	r2, r4
   14920:	mov	r3, #1
   14924:	bl	12ac4 <table_notify@@Base>
   14928:	mov	r7, #0
   1492c:	mov	r0, r7
   14930:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014934 <table_set_uchar@@Base>:
   14934:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14938:	add	fp, sp, #24
   1493c:	mov	r8, r3
   14940:	mov	r4, r2
   14944:	mov	r9, r1
   14948:	mov	r6, r0
   1494c:	bl	14a30 <table_get_cell_ptr@@Base>
   14950:	mov	r5, r0
   14954:	mov	r0, r6
   14958:	mov	r1, r4
   1495c:	bl	12b90 <table_get_col_ptr@@Base>
   14960:	ldr	r0, [r0, #4]
   14964:	mvn	r7, #0
   14968:	cmp	r0, #20
   1496c:	bne	149ac <table_set_uchar@@Base+0x78>
   14970:	ldr	r0, [r5]
   14974:	cmp	r0, #0
   14978:	bne	14990 <table_set_uchar@@Base+0x5c>
   1497c:	mov	r0, #1
   14980:	bl	11ecc <malloc@plt>
   14984:	cmp	r0, #0
   14988:	str	r0, [r5]
   1498c:	beq	149ac <table_set_uchar@@Base+0x78>
   14990:	strb	r8, [r0]
   14994:	mov	r0, r6
   14998:	mov	r1, r9
   1499c:	mov	r2, r4
   149a0:	mov	r3, #1
   149a4:	bl	12ac4 <table_notify@@Base>
   149a8:	mov	r7, #0
   149ac:	mov	r0, r7
   149b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149b4 <table_set_ptr@@Base>:
   149b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149b8:	add	fp, sp, #24
   149bc:	mov	r8, r3
   149c0:	mov	r4, r2
   149c4:	mov	r5, r1
   149c8:	mov	r6, r0
   149cc:	bl	14a30 <table_get_cell_ptr@@Base>
   149d0:	mov	r7, r0
   149d4:	mov	r0, r6
   149d8:	mov	r1, r4
   149dc:	bl	12b90 <table_get_col_ptr@@Base>
   149e0:	ldr	r1, [r0, #4]
   149e4:	mvn	r0, #0
   149e8:	cmp	r1, #23
   149ec:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   149f0:	mov	r0, r6
   149f4:	mov	r1, r5
   149f8:	mov	r2, r4
   149fc:	mov	r3, #1
   14a00:	str	r8, [r7]
   14a04:	bl	12ac4 <table_notify@@Base>
   14a08:	mov	r0, #0
   14a0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a10 <table_cell_init@@Base>:
   14a10:	push	{r4, sl, fp, lr}
   14a14:	add	fp, sp, #8
   14a18:	mov	r4, r2
   14a1c:	bl	138ac <table_get_row_ptr@@Base>
   14a20:	ldr	r0, [r0]
   14a24:	mov	r1, #0
   14a28:	str	r1, [r0, r4, lsl #2]
   14a2c:	pop	{r4, sl, fp, pc}

00014a30 <table_get_cell_ptr@@Base>:
   14a30:	push	{r4, sl, fp, lr}
   14a34:	add	fp, sp, #8
   14a38:	mov	r4, r2
   14a3c:	bl	138ac <table_get_row_ptr@@Base>
   14a40:	ldr	r0, [r0]
   14a44:	add	r0, r0, r4, lsl #2
   14a48:	pop	{r4, sl, fp, pc}

00014a4c <table_cell_destroy@@Base>:
   14a4c:	push	{r4, r5, r6, sl, fp, lr}
   14a50:	add	fp, sp, #16
   14a54:	mov	r5, r1
   14a58:	mov	r1, r2
   14a5c:	mov	r4, r2
   14a60:	mov	r6, r0
   14a64:	bl	12c38 <table_get_column_data_type@@Base>
   14a68:	cmp	r0, #23
   14a6c:	popeq	{r4, r5, r6, sl, fp, pc}
   14a70:	mov	r0, r6
   14a74:	mov	r1, r5
   14a78:	bl	138ac <table_get_row_ptr@@Base>
   14a7c:	ldr	r0, [r0]
   14a80:	ldr	r0, [r0, r4, lsl #2]
   14a84:	cmp	r0, #0
   14a88:	beq	14a94 <table_cell_destroy@@Base+0x48>
   14a8c:	pop	{r4, r5, r6, sl, fp, lr}
   14a90:	b	11ea8 <free@plt>
   14a94:	pop	{r4, r5, r6, sl, fp, pc}

00014a98 <table_cell_to_buffer@@Base>:
   14a98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a9c:	add	fp, sp, #24
   14aa0:	sub	sp, sp, #8
   14aa4:	mov	r7, r1
   14aa8:	mov	r1, r2
   14aac:	mov	r5, r3
   14ab0:	mov	r6, r2
   14ab4:	mov	r4, r0
   14ab8:	bl	12c38 <table_get_column_data_type@@Base>
   14abc:	cmp	r0, #23
   14ac0:	bhi	14d30 <table_cell_to_buffer@@Base+0x298>
   14ac4:	ldr	r8, [fp, #8]
   14ac8:	add	r1, pc, #0
   14acc:	ldr	pc, [r1, r0, lsl #2]
   14ad0:	andeq	r4, r1, r0, lsr fp
   14ad4:	andeq	r4, r1, r4, asr #22
   14ad8:	andeq	r4, r1, r8, asr fp
   14adc:	andeq	r4, r1, ip, ror #22
   14ae0:	andeq	r4, r1, r0, lsl #23
   14ae4:	muleq	r1, r4, fp
   14ae8:	andeq	r4, r1, r8, lsr #23
   14aec:			; <UNDEFINED> instruction: 0x00014bbc
   14af0:	ldrdeq	r4, [r1], -ip
   14af4:	strdeq	r4, [r1], -r0
   14af8:	andeq	r4, r1, r4, lsl #24
   14afc:	andeq	r4, r1, r4, lsr #24
   14b00:	andeq	r4, r1, r4, asr #24
   14b04:	andeq	r4, r1, r4, ror #24
   14b08:	andeq	r4, r1, r4, lsl #25
   14b0c:	andeq	r4, r1, r4, lsr #25
   14b10:	andeq	r4, r1, r4, asr #25
   14b14:	andeq	r4, r1, r8, ror #25
   14b18:	andeq	r4, r1, r8, lsl #26
   14b1c:	andeq	r4, r1, ip, lsr sp
   14b20:	andeq	r4, r1, r0, asr sp
   14b24:	andeq	r4, r1, r0, ror sp
   14b28:	muleq	r1, r0, sp
   14b2c:	andeq	r4, r1, r4, asr #27
   14b30:	mov	r0, r4
   14b34:	mov	r1, r7
   14b38:	mov	r2, r6
   14b3c:	bl	13668 <table_get_int@@Base>
   14b40:	b	14da0 <table_cell_to_buffer@@Base+0x308>
   14b44:	mov	r0, r4
   14b48:	mov	r1, r7
   14b4c:	mov	r2, r6
   14b50:	bl	13680 <table_get_uint@@Base>
   14b54:	b	14bcc <table_cell_to_buffer@@Base+0x134>
   14b58:	mov	r0, r4
   14b5c:	mov	r1, r7
   14b60:	mov	r2, r6
   14b64:	bl	13698 <table_get_int8@@Base>
   14b68:	b	14da0 <table_cell_to_buffer@@Base+0x308>
   14b6c:	mov	r0, r4
   14b70:	mov	r1, r7
   14b74:	mov	r2, r6
   14b78:	bl	136b0 <table_get_uint8@@Base>
   14b7c:	b	14bcc <table_cell_to_buffer@@Base+0x134>
   14b80:	mov	r0, r4
   14b84:	mov	r1, r7
   14b88:	mov	r2, r6
   14b8c:	bl	136c8 <table_get_int16@@Base>
   14b90:	b	14da0 <table_cell_to_buffer@@Base+0x308>
   14b94:	mov	r0, r4
   14b98:	mov	r1, r7
   14b9c:	mov	r2, r6
   14ba0:	bl	136e0 <table_get_uint16@@Base>
   14ba4:	b	14bcc <table_cell_to_buffer@@Base+0x134>
   14ba8:	mov	r0, r4
   14bac:	mov	r1, r7
   14bb0:	mov	r2, r6
   14bb4:	bl	136f8 <table_get_int32@@Base>
   14bb8:	b	14da0 <table_cell_to_buffer@@Base+0x308>
   14bbc:	mov	r0, r4
   14bc0:	mov	r1, r7
   14bc4:	mov	r2, r6
   14bc8:	bl	13710 <table_get_uint32@@Base>
   14bcc:	movw	r2, #21907	; 0x5593
   14bd0:	mov	r3, r0
   14bd4:	movt	r2, #1
   14bd8:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14bdc:	mov	r0, r4
   14be0:	mov	r1, r7
   14be4:	mov	r2, r6
   14be8:	bl	13728 <table_get_int64@@Base>
   14bec:	b	14c94 <table_cell_to_buffer@@Base+0x1fc>
   14bf0:	mov	r0, r4
   14bf4:	mov	r1, r7
   14bf8:	mov	r2, r6
   14bfc:	bl	13740 <table_get_uint64@@Base>
   14c00:	b	14cb4 <table_cell_to_buffer@@Base+0x21c>
   14c04:	mov	r0, r4
   14c08:	mov	r1, r7
   14c0c:	mov	r2, r6
   14c10:	bl	13758 <table_get_short@@Base>
   14c14:	movw	r2, #21920	; 0x55a0
   14c18:	mov	r3, r0
   14c1c:	movt	r2, #1
   14c20:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14c24:	mov	r0, r4
   14c28:	mov	r1, r7
   14c2c:	mov	r2, r6
   14c30:	bl	13770 <table_get_ushort@@Base>
   14c34:	movw	r2, #21924	; 0x55a4
   14c38:	mov	r3, r0
   14c3c:	movt	r2, #1
   14c40:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14c44:	mov	r0, r4
   14c48:	mov	r1, r7
   14c4c:	mov	r2, r6
   14c50:	bl	13788 <table_get_long@@Base>
   14c54:	movw	r2, #21928	; 0x55a8
   14c58:	mov	r3, r0
   14c5c:	movt	r2, #1
   14c60:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14c64:	mov	r0, r4
   14c68:	mov	r1, r7
   14c6c:	mov	r2, r6
   14c70:	bl	137a0 <table_get_ulong@@Base>
   14c74:	movw	r2, #21932	; 0x55ac
   14c78:	mov	r3, r0
   14c7c:	movt	r2, #1
   14c80:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14c84:	mov	r0, r4
   14c88:	mov	r1, r7
   14c8c:	mov	r2, r6
   14c90:	bl	137b8 <table_get_llong@@Base>
   14c94:	movw	r2, #21910	; 0x5596
   14c98:	stm	sp, {r0, r1}
   14c9c:	movt	r2, #1
   14ca0:	b	14d24 <table_cell_to_buffer@@Base+0x28c>
   14ca4:	mov	r0, r4
   14ca8:	mov	r1, r7
   14cac:	mov	r2, r6
   14cb0:	bl	137d0 <table_get_ullong@@Base>
   14cb4:	movw	r2, #21915	; 0x559b
   14cb8:	stm	sp, {r0, r1}
   14cbc:	movt	r2, #1
   14cc0:	b	14d24 <table_cell_to_buffer@@Base+0x28c>
   14cc4:	mov	r0, r4
   14cc8:	mov	r1, r7
   14ccc:	mov	r2, r6
   14cd0:	bl	137e8 <table_get_float@@Base>
   14cd4:	movw	r2, #21939	; 0x55b3
   14cd8:	vcvt.f64.f32	d16, s0
   14cdc:	vstr	d16, [sp]
   14ce0:	movt	r2, #1
   14ce4:	b	14d24 <table_cell_to_buffer@@Base+0x28c>
   14ce8:	mov	r0, r4
   14cec:	mov	r1, r7
   14cf0:	mov	r2, r6
   14cf4:	bl	13800 <table_get_double@@Base>
   14cf8:	movw	r2, #21942	; 0x55b6
   14cfc:	vstr	d0, [sp]
   14d00:	movt	r2, #1
   14d04:	b	14d24 <table_cell_to_buffer@@Base+0x28c>
   14d08:	mov	r0, r4
   14d0c:	mov	r1, r7
   14d10:	mov	r2, r6
   14d14:	bl	13818 <table_get_ldouble@@Base>
   14d18:	movw	r2, #21946	; 0x55ba
   14d1c:	vstr	d0, [sp]
   14d20:	movt	r2, #1
   14d24:	mov	r0, r5
   14d28:	mov	r1, r8
   14d2c:	bl	11efc <snprintf@plt>
   14d30:	mov	r0, #0
   14d34:	sub	sp, fp, #24
   14d38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d3c:	mov	r0, r4
   14d40:	mov	r1, r7
   14d44:	mov	r2, r6
   14d48:	bl	13830 <table_get_char@@Base>
   14d4c:	b	14d60 <table_cell_to_buffer@@Base+0x2c8>
   14d50:	mov	r0, r4
   14d54:	mov	r1, r7
   14d58:	mov	r2, r6
   14d5c:	bl	13848 <table_get_uchar@@Base>
   14d60:	movw	r2, #21950	; 0x55be
   14d64:	mov	r3, r0
   14d68:	movt	r2, #1
   14d6c:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14d70:	mov	r0, r4
   14d74:	mov	r1, r7
   14d78:	mov	r2, r6
   14d7c:	bl	13860 <table_get_string@@Base>
   14d80:	movw	r2, #21936	; 0x55b0
   14d84:	mov	r3, r0
   14d88:	movt	r2, #1
   14d8c:	b	14dac <table_cell_to_buffer@@Base+0x314>
   14d90:	mov	r0, r4
   14d94:	mov	r1, r7
   14d98:	mov	r2, r6
   14d9c:	bl	13650 <table_get_bool@@Base>
   14da0:	movw	r2, #21904	; 0x5590
   14da4:	mov	r3, r0
   14da8:	movt	r2, #1
   14dac:	mov	r0, r5
   14db0:	mov	r1, r8
   14db4:	bl	11efc <snprintf@plt>
   14db8:	mov	r0, #0
   14dbc:	sub	sp, fp, #24
   14dc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14dc4:	mov	r0, r4
   14dc8:	mov	r1, r7
   14dcc:	mov	r2, r6
   14dd0:	bl	13874 <table_get_ptr@@Base>
   14dd4:	movw	r2, #21953	; 0x55c1
   14dd8:	mov	r3, r0
   14ddc:	movt	r2, #1
   14de0:	b	14dac <table_cell_to_buffer@@Base+0x314>

00014de4 <table_cell_from_buffer@@Base>:
   14de4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14de8:	add	fp, sp, #24
   14dec:	sub	sp, sp, #264	; 0x108
   14df0:	mov	r5, r1
   14df4:	mov	r1, r2
   14df8:	mov	r7, r3
   14dfc:	mov	r4, r2
   14e00:	mov	r6, r0
   14e04:	bl	12c38 <table_get_column_data_type@@Base>
   14e08:	cmp	r0, #23
   14e0c:	bhi	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14e10:	add	r1, pc, #0
   14e14:	ldr	pc, [r1, r0, lsl #2]
   14e18:	andeq	r4, r1, r8, ror lr
   14e1c:			; <UNDEFINED> instruction: 0x00014eb0
   14e20:	andeq	r4, r1, r8, ror #29
   14e24:	andeq	r4, r1, r0, lsr #30
   14e28:	andeq	r4, r1, r8, asr pc
   14e2c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14e30:	andeq	r4, r1, r8, asr #31
   14e34:	andeq	r5, r1, r0
   14e38:	andeq	r5, r1, r8, lsr r0
   14e3c:	andeq	r5, r1, r8, ror r0
   14e40:	strheq	r5, [r1], -r8
   14e44:	strdeq	r5, [r1], -r0
   14e48:	andeq	r5, r1, r8, lsr #2
   14e4c:	andeq	r5, r1, r0, ror #2
   14e50:	muleq	r1, r8, r1
   14e54:	ldrdeq	r5, [r1], -r8
   14e58:	andeq	r5, r1, r8, lsl r2
   14e5c:	andeq	r5, r1, r0, asr r2
   14e60:	andeq	r5, r1, r8, lsl #5
   14e64:	andeq	r5, r1, r0, asr #5
   14e68:	strdeq	r5, [r1], -r8
   14e6c:	andeq	r5, r1, r0, lsr r3
   14e70:	andeq	r5, r1, r8, ror #6
   14e74:	andeq	r5, r1, ip, lsr #7
   14e78:	movw	r1, #21904	; 0x5590
   14e7c:	add	r2, sp, #8
   14e80:	mov	r0, r7
   14e84:	movt	r1, #1
   14e88:	bl	11f08 <__isoc99_sscanf@plt>
   14e8c:	mvn	r7, #0
   14e90:	cmp	r0, #1
   14e94:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14e98:	ldr	r3, [sp, #8]
   14e9c:	mov	r0, r6
   14ea0:	mov	r1, r5
   14ea4:	mov	r2, r4
   14ea8:	bl	13e70 <table_set_int@@Base>
   14eac:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14eb0:	movw	r1, #21907	; 0x5593
   14eb4:	add	r2, sp, #8
   14eb8:	mov	r0, r7
   14ebc:	movt	r1, #1
   14ec0:	bl	11f08 <__isoc99_sscanf@plt>
   14ec4:	mvn	r7, #0
   14ec8:	cmp	r0, #1
   14ecc:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14ed0:	ldr	r3, [sp, #8]
   14ed4:	mov	r0, r6
   14ed8:	mov	r1, r5
   14edc:	mov	r2, r4
   14ee0:	bl	13ef0 <table_set_uint@@Base>
   14ee4:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14ee8:	movw	r1, #21956	; 0x55c4
   14eec:	add	r2, sp, #8
   14ef0:	mov	r0, r7
   14ef4:	movt	r1, #1
   14ef8:	bl	11f08 <__isoc99_sscanf@plt>
   14efc:	mvn	r7, #0
   14f00:	cmp	r0, #1
   14f04:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14f08:	ldrsb	r3, [sp, #8]
   14f0c:	mov	r0, r6
   14f10:	mov	r1, r5
   14f14:	mov	r2, r4
   14f18:	bl	13f70 <table_set_int8@@Base>
   14f1c:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14f20:	movw	r1, #21961	; 0x55c9
   14f24:	add	r2, sp, #8
   14f28:	mov	r0, r7
   14f2c:	movt	r1, #1
   14f30:	bl	11f08 <__isoc99_sscanf@plt>
   14f34:	mvn	r7, #0
   14f38:	cmp	r0, #1
   14f3c:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14f40:	ldrb	r3, [sp, #8]
   14f44:	mov	r0, r6
   14f48:	mov	r1, r5
   14f4c:	mov	r2, r4
   14f50:	bl	13ff0 <table_set_uint8@@Base>
   14f54:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14f58:	movw	r1, #21920	; 0x55a0
   14f5c:	add	r2, sp, #8
   14f60:	mov	r0, r7
   14f64:	movt	r1, #1
   14f68:	bl	11f08 <__isoc99_sscanf@plt>
   14f6c:	mvn	r7, #0
   14f70:	cmp	r0, #1
   14f74:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14f78:	ldrsh	r3, [sp, #8]
   14f7c:	mov	r0, r6
   14f80:	mov	r1, r5
   14f84:	mov	r2, r4
   14f88:	bl	14070 <table_set_int16@@Base>
   14f8c:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14f90:	movw	r1, #21924	; 0x55a4
   14f94:	add	r2, sp, #8
   14f98:	mov	r0, r7
   14f9c:	movt	r1, #1
   14fa0:	bl	11f08 <__isoc99_sscanf@plt>
   14fa4:	mvn	r7, #0
   14fa8:	cmp	r0, #1
   14fac:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14fb0:	ldrh	r3, [sp, #8]
   14fb4:	mov	r0, r6
   14fb8:	mov	r1, r5
   14fbc:	mov	r2, r4
   14fc0:	bl	140f0 <table_set_uint16@@Base>
   14fc4:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   14fc8:	movw	r1, #21904	; 0x5590
   14fcc:	add	r2, sp, #8
   14fd0:	mov	r0, r7
   14fd4:	movt	r1, #1
   14fd8:	bl	11f08 <__isoc99_sscanf@plt>
   14fdc:	mvn	r7, #0
   14fe0:	cmp	r0, #1
   14fe4:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   14fe8:	ldr	r3, [sp, #8]
   14fec:	mov	r0, r6
   14ff0:	mov	r1, r5
   14ff4:	mov	r2, r4
   14ff8:	bl	14170 <table_set_int32@@Base>
   14ffc:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15000:	movw	r1, #21907	; 0x5593
   15004:	add	r2, sp, #8
   15008:	mov	r0, r7
   1500c:	movt	r1, #1
   15010:	bl	11f08 <__isoc99_sscanf@plt>
   15014:	mvn	r7, #0
   15018:	cmp	r0, #1
   1501c:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15020:	ldr	r3, [sp, #8]
   15024:	mov	r0, r6
   15028:	mov	r1, r5
   1502c:	mov	r2, r4
   15030:	bl	141f0 <table_set_uint32@@Base>
   15034:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15038:	movw	r1, #21910	; 0x5596
   1503c:	add	r2, sp, #8
   15040:	mov	r0, r7
   15044:	movt	r1, #1
   15048:	bl	11f08 <__isoc99_sscanf@plt>
   1504c:	mvn	r7, #0
   15050:	cmp	r0, #1
   15054:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15058:	ldr	r0, [sp, #8]
   1505c:	ldr	r1, [sp, #12]
   15060:	mov	r2, r4
   15064:	stm	sp, {r0, r1}
   15068:	mov	r0, r6
   1506c:	mov	r1, r5
   15070:	bl	14270 <table_set_int64@@Base>
   15074:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15078:	movw	r1, #21915	; 0x559b
   1507c:	add	r2, sp, #8
   15080:	mov	r0, r7
   15084:	movt	r1, #1
   15088:	bl	11f08 <__isoc99_sscanf@plt>
   1508c:	mvn	r7, #0
   15090:	cmp	r0, #1
   15094:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15098:	ldr	r0, [sp, #8]
   1509c:	ldr	r1, [sp, #12]
   150a0:	mov	r2, r4
   150a4:	stm	sp, {r0, r1}
   150a8:	mov	r0, r6
   150ac:	mov	r1, r5
   150b0:	bl	142f8 <table_set_uint64@@Base>
   150b4:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   150b8:	movw	r1, #21920	; 0x55a0
   150bc:	add	r2, sp, #8
   150c0:	mov	r0, r7
   150c4:	movt	r1, #1
   150c8:	bl	11f08 <__isoc99_sscanf@plt>
   150cc:	mvn	r7, #0
   150d0:	cmp	r0, #1
   150d4:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   150d8:	ldrsh	r3, [sp, #8]
   150dc:	mov	r0, r6
   150e0:	mov	r1, r5
   150e4:	mov	r2, r4
   150e8:	bl	14380 <table_set_short@@Base>
   150ec:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   150f0:	movw	r1, #21924	; 0x55a4
   150f4:	add	r2, sp, #8
   150f8:	mov	r0, r7
   150fc:	movt	r1, #1
   15100:	bl	11f08 <__isoc99_sscanf@plt>
   15104:	mvn	r7, #0
   15108:	cmp	r0, #1
   1510c:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15110:	ldrh	r3, [sp, #8]
   15114:	mov	r0, r6
   15118:	mov	r1, r5
   1511c:	mov	r2, r4
   15120:	bl	14400 <table_set_ushort@@Base>
   15124:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15128:	movw	r1, #21928	; 0x55a8
   1512c:	add	r2, sp, #8
   15130:	mov	r0, r7
   15134:	movt	r1, #1
   15138:	bl	11f08 <__isoc99_sscanf@plt>
   1513c:	mvn	r7, #0
   15140:	cmp	r0, #1
   15144:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15148:	ldr	r3, [sp, #8]
   1514c:	mov	r0, r6
   15150:	mov	r1, r5
   15154:	mov	r2, r4
   15158:	bl	14480 <table_set_long@@Base>
   1515c:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15160:	movw	r1, #21932	; 0x55ac
   15164:	add	r2, sp, #8
   15168:	mov	r0, r7
   1516c:	movt	r1, #1
   15170:	bl	11f08 <__isoc99_sscanf@plt>
   15174:	mvn	r7, #0
   15178:	cmp	r0, #1
   1517c:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15180:	ldr	r3, [sp, #8]
   15184:	mov	r0, r6
   15188:	mov	r1, r5
   1518c:	mov	r2, r4
   15190:	bl	14500 <table_set_ulong@@Base>
   15194:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15198:	movw	r1, #21910	; 0x5596
   1519c:	add	r2, sp, #8
   151a0:	mov	r0, r7
   151a4:	movt	r1, #1
   151a8:	bl	11f08 <__isoc99_sscanf@plt>
   151ac:	mvn	r7, #0
   151b0:	cmp	r0, #1
   151b4:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   151b8:	ldr	r0, [sp, #8]
   151bc:	ldr	r1, [sp, #12]
   151c0:	mov	r2, r4
   151c4:	stm	sp, {r0, r1}
   151c8:	mov	r0, r6
   151cc:	mov	r1, r5
   151d0:	bl	14580 <table_set_llong@@Base>
   151d4:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   151d8:	movw	r1, #21915	; 0x559b
   151dc:	add	r2, sp, #8
   151e0:	mov	r0, r7
   151e4:	movt	r1, #1
   151e8:	bl	11f08 <__isoc99_sscanf@plt>
   151ec:	mvn	r7, #0
   151f0:	cmp	r0, #1
   151f4:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   151f8:	ldr	r0, [sp, #8]
   151fc:	ldr	r1, [sp, #12]
   15200:	mov	r2, r4
   15204:	stm	sp, {r0, r1}
   15208:	mov	r0, r6
   1520c:	mov	r1, r5
   15210:	bl	14608 <table_set_ullong@@Base>
   15214:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15218:	movw	r1, #21939	; 0x55b3
   1521c:	add	r2, sp, #8
   15220:	mov	r0, r7
   15224:	movt	r1, #1
   15228:	bl	11f08 <__isoc99_sscanf@plt>
   1522c:	mvn	r7, #0
   15230:	cmp	r0, #1
   15234:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15238:	vldr	s0, [sp, #8]
   1523c:	mov	r0, r6
   15240:	mov	r1, r5
   15244:	mov	r2, r4
   15248:	bl	14690 <table_set_float@@Base>
   1524c:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15250:	movw	r1, #21942	; 0x55b6
   15254:	add	r2, sp, #8
   15258:	mov	r0, r7
   1525c:	movt	r1, #1
   15260:	bl	11f08 <__isoc99_sscanf@plt>
   15264:	mvn	r7, #0
   15268:	cmp	r0, #1
   1526c:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15270:	vldr	d0, [sp, #8]
   15274:	mov	r0, r6
   15278:	mov	r1, r5
   1527c:	mov	r2, r4
   15280:	bl	1471c <table_set_double@@Base>
   15284:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15288:	movw	r1, #21946	; 0x55ba
   1528c:	add	r2, sp, #8
   15290:	mov	r0, r7
   15294:	movt	r1, #1
   15298:	bl	11f08 <__isoc99_sscanf@plt>
   1529c:	mvn	r7, #0
   152a0:	cmp	r0, #1
   152a4:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   152a8:	vldr	d0, [sp, #8]
   152ac:	mov	r0, r6
   152b0:	mov	r1, r5
   152b4:	mov	r2, r4
   152b8:	bl	147a4 <table_set_ldouble@@Base>
   152bc:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   152c0:	movw	r1, #21950	; 0x55be
   152c4:	add	r2, sp, #8
   152c8:	mov	r0, r7
   152cc:	movt	r1, #1
   152d0:	bl	11f08 <__isoc99_sscanf@plt>
   152d4:	mvn	r7, #0
   152d8:	cmp	r0, #1
   152dc:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   152e0:	ldrb	r3, [sp, #8]
   152e4:	mov	r0, r6
   152e8:	mov	r1, r5
   152ec:	mov	r2, r4
   152f0:	bl	148b4 <table_set_char@@Base>
   152f4:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   152f8:	movw	r1, #21950	; 0x55be
   152fc:	add	r2, sp, #8
   15300:	mov	r0, r7
   15304:	movt	r1, #1
   15308:	bl	11f08 <__isoc99_sscanf@plt>
   1530c:	mvn	r7, #0
   15310:	cmp	r0, #1
   15314:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15318:	ldrb	r3, [sp, #8]
   1531c:	mov	r0, r6
   15320:	mov	r1, r5
   15324:	mov	r2, r4
   15328:	bl	14934 <table_set_uchar@@Base>
   1532c:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15330:	movw	r1, #21936	; 0x55b0
   15334:	add	r2, sp, #8
   15338:	mov	r0, r7
   1533c:	movt	r1, #1
   15340:	bl	11f08 <__isoc99_sscanf@plt>
   15344:	mvn	r7, #0
   15348:	cmp	r0, #1
   1534c:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15350:	add	r3, sp, #8
   15354:	mov	r0, r6
   15358:	mov	r1, r5
   1535c:	mov	r2, r4
   15360:	bl	1482c <table_set_string@@Base>
   15364:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   15368:	movw	r1, #21904	; 0x5590
   1536c:	add	r2, sp, #8
   15370:	mov	r0, r7
   15374:	movt	r1, #1
   15378:	bl	11f08 <__isoc99_sscanf@plt>
   1537c:	mvn	r7, #0
   15380:	cmp	r0, #1
   15384:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   15388:	ldr	r0, [sp, #8]
   1538c:	cmp	r0, #0
   15390:	beq	153f0 <table_cell_from_buffer@@Base+0x60c>
   15394:	mov	r0, r6
   15398:	mov	r1, r5
   1539c:	mov	r2, r4
   153a0:	mov	r3, #1
   153a4:	bl	13df0 <table_set_bool@@Base>
   153a8:	b	153e0 <table_cell_from_buffer@@Base+0x5fc>
   153ac:	movw	r1, #21953	; 0x55c1
   153b0:	add	r2, sp, #8
   153b4:	mov	r0, r7
   153b8:	movt	r1, #1
   153bc:	bl	11f08 <__isoc99_sscanf@plt>
   153c0:	mvn	r7, #0
   153c4:	cmp	r0, #1
   153c8:	bne	153e4 <table_cell_from_buffer@@Base+0x600>
   153cc:	ldr	r3, [sp, #8]
   153d0:	mov	r0, r6
   153d4:	mov	r1, r5
   153d8:	mov	r2, r4
   153dc:	bl	149b4 <table_set_ptr@@Base>
   153e0:	mov	r7, #0
   153e4:	mov	r0, r7
   153e8:	sub	sp, fp, #24
   153ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153f0:	mov	r0, r6
   153f4:	mov	r1, r5
   153f8:	mov	r2, r4
   153fc:	mov	r3, #0
   15400:	mov	r7, #0
   15404:	bl	13df0 <table_set_bool@@Base>
   15408:	mov	r0, r7
   1540c:	sub	sp, fp, #24
   15410:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015414 <table_cell_nullify@@Base>:
   15414:	push	{r4, r5, fp, lr}
   15418:	add	fp, sp, #8
   1541c:	mov	r4, r2
   15420:	bl	138ac <table_get_row_ptr@@Base>
   15424:	ldr	r5, [r0]
   15428:	ldr	r0, [r5, r4, lsl #2]
   1542c:	cmp	r0, #0
   15430:	beq	15440 <table_cell_nullify@@Base+0x2c>
   15434:	bl	11ea8 <free@plt>
   15438:	mov	r0, #0
   1543c:	str	r0, [r5, r4, lsl #2]
   15440:	mov	r0, #0
   15444:	pop	{r4, r5, fp, pc}

00015448 <__libc_csu_init@@Base>:
   15448:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1544c:	mov	r7, r0
   15450:	ldr	r6, [pc, #72]	; 154a0 <__libc_csu_init@@Base+0x58>
   15454:	ldr	r5, [pc, #72]	; 154a4 <__libc_csu_init@@Base+0x5c>
   15458:	add	r6, pc, r6
   1545c:	add	r5, pc, r5
   15460:	sub	r6, r6, r5
   15464:	mov	r8, r1
   15468:	mov	r9, r2
   1546c:	bl	11e70 <strcmp@plt-0x20>
   15470:	asrs	r6, r6, #2
   15474:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15478:	mov	r4, #0
   1547c:	add	r4, r4, #1
   15480:	ldr	r3, [r5], #4
   15484:	mov	r2, r9
   15488:	mov	r1, r8
   1548c:	mov	r0, r7
   15490:	blx	r3
   15494:	cmp	r6, r4
   15498:	bne	1547c <__libc_csu_init@@Base+0x34>
   1549c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154a0:	andeq	r0, r1, ip, lsr #21
   154a4:	andeq	r0, r1, r4, lsr #21

000154a8 <__libc_csu_fini@@Base>:
   154a8:	bx	lr

Disassembly of section .fini:

000154ac <.fini>:
   154ac:	push	{r3, lr}
   154b0:	pop	{r3, pc}
