
../repos/inetutils/src/dnsdomainname:     file format elf32-littlearm


Disassembly of section .init:

00010d1c <.init>:
   10d1c:	push	{r3, lr}
   10d20:	bl	11034 <__assert_fail@plt+0xb8>
   10d24:	pop	{r3, pc}

Disassembly of section .plt:

00010d28 <calloc@plt-0x14>:
   10d28:	push	{lr}		; (str lr, [sp, #-4]!)
   10d2c:	ldr	lr, [pc, #4]	; 10d38 <calloc@plt-0x4>
   10d30:	add	lr, pc, lr
   10d34:	ldr	pc, [lr, #8]!
   10d38:	andeq	r8, r1, r8, asr #5

00010d3c <calloc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #712]!	; 0x2c8

00010d48 <fputs_unlocked@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #704]!	; 0x2c0

00010d54 <raise@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #696]!	; 0x2b8

00010d60 <strcmp@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #688]!	; 0x2b0

00010d6c <strtol@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #680]!	; 0x2a8

00010d78 <printf@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #672]!	; 0x2a0

00010d84 <memmove@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #664]!	; 0x298

00010d90 <strchrnul@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #656]!	; 0x290

00010d9c <free@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #648]!	; 0x288

00010da8 <gai_strerror@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #640]!	; 0x280

00010db4 <strndup@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #632]!	; 0x278

00010dc0 <memcpy@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #624]!	; 0x270

00010dcc <fwrite_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #616]!	; 0x268

00010dd8 <sleep@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #608]!	; 0x260

00010de4 <realloc@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #600]!	; 0x258

00010df0 <strcasecmp@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #592]!	; 0x250

00010dfc <funlockfile@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #584]!	; 0x248

00010e08 <fwrite@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #576]!	; 0x240

00010e14 <error@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #568]!	; 0x238

00010e20 <gethostname@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #560]!	; 0x230

00010e2c <getenv@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #552]!	; 0x228

00010e38 <puts@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #544]!	; 0x220

00010e44 <malloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #536]!	; 0x218

00010e50 <__libc_start_main@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #528]!	; 0x210

00010e5c <strerror@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #520]!	; 0x208

00010e68 <__ctype_tolower_loc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #512]!	; 0x200

00010e74 <__gmon_start__@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e80 <mempcpy@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #496]!	; 0x1f0

00010e8c <__ctype_b_loc@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #488]!	; 0x1e8

00010e98 <exit@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #24, 20	; 0x18000
   10ea0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ea4 <strlen@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #24, 20	; 0x18000
   10eac:	ldr	pc, [ip, #472]!	; 0x1d8

00010eb0 <strchr@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #24, 20	; 0x18000
   10eb8:	ldr	pc, [ip, #464]!	; 0x1d0

00010ebc <fprintf@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #24, 20	; 0x18000
   10ec4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec8 <__errno_location@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #24, 20	; 0x18000
   10ed0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ed4 <strerror_r@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #24, 20	; 0x18000
   10edc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ee0 <memset@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #24, 20	; 0x18000
   10ee8:	ldr	pc, [ip, #432]!	; 0x1b0

00010eec <memchr@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #24, 20	; 0x18000
   10ef4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef8 <__overflow@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #24, 20	; 0x18000
   10f00:	ldr	pc, [ip, #416]!	; 0x1a0

00010f04 <strrchr@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #24, 20	; 0x18000
   10f0c:	ldr	pc, [ip, #408]!	; 0x198

00010f10 <vfprintf@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #24, 20	; 0x18000
   10f18:	ldr	pc, [ip, #400]!	; 0x190

00010f1c <fputc@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #24, 20	; 0x18000
   10f24:	ldr	pc, [ip, #392]!	; 0x188

00010f28 <flockfile@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #24, 20	; 0x18000
   10f30:	ldr	pc, [ip, #384]!	; 0x180

00010f34 <vsnprintf@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #24, 20	; 0x18000
   10f3c:	ldr	pc, [ip, #376]!	; 0x178

00010f40 <qsort@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #24, 20	; 0x18000
   10f48:	ldr	pc, [ip, #368]!	; 0x170

00010f4c <freeaddrinfo@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #24, 20	; 0x18000
   10f54:	ldr	pc, [ip, #360]!	; 0x168

00010f58 <getaddrinfo@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #24, 20	; 0x18000
   10f60:	ldr	pc, [ip, #352]!	; 0x160

00010f64 <strncmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #24, 20	; 0x18000
   10f6c:	ldr	pc, [ip, #344]!	; 0x158

00010f70 <abort@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #24, 20	; 0x18000
   10f78:	ldr	pc, [ip, #336]!	; 0x150

00010f7c <__assert_fail@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #24, 20	; 0x18000
   10f84:	ldr	pc, [ip, #328]!	; 0x148

Disassembly of section .text:

00010f88 <argp_parse@@Base-0x7b4>:
   10f88:	push	{r7, lr}
   10f8c:	mov	r7, r0
   10f90:	sub	sp, sp, #8
   10f94:	ldr	r0, [r1]
   10f98:	mov	r6, r1
   10f9c:	ldr	r5, [pc, #68]	; 10fe8 <__assert_fail@plt+0x6c>
   10fa0:	bl	126dc <argp_parse@@Base+0xfa0>
   10fa4:	ldr	r3, [pc, #64]	; 10fec <__assert_fail@plt+0x70>
   10fa8:	ldr	r2, [pc, #64]	; 10ff0 <__assert_fail@plt+0x74>
   10fac:	mov	r4, #0
   10fb0:	mov	r1, r5
   10fb4:	ldr	r0, [pc, #56]	; 10ff4 <__assert_fail@plt+0x78>
   10fb8:	str	r2, [r3]
   10fbc:	bl	12500 <argp_parse@@Base+0xdc4>
   10fc0:	mov	r2, r6
   10fc4:	mov	r1, r7
   10fc8:	mov	r3, r4
   10fcc:	add	r0, r5, #8
   10fd0:	str	r4, [sp, #4]
   10fd4:	str	r4, [sp]
   10fd8:	bl	1173c <argp_parse@@Base>
   10fdc:	bl	11120 <__assert_fail@plt+0x1a4>
   10fe0:	mov	r0, r4
   10fe4:	bl	10e98 <exit@plt>
   10fe8:	ldrdeq	r9, [r2], -ip
   10fec:	andeq	r9, r2, ip, lsl #3
   10ff0:	andeq	r7, r1, r0, ror #31
   10ff4:	strdeq	r7, [r1], -r8
   10ff8:	mov	fp, #0
   10ffc:	mov	lr, #0
   11000:	pop	{r1}		; (ldr r1, [sp], #4)
   11004:	mov	r2, sp
   11008:	push	{r2}		; (str r2, [sp, #-4]!)
   1100c:	push	{r0}		; (str r0, [sp, #-4]!)
   11010:	ldr	ip, [pc, #16]	; 11028 <__assert_fail@plt+0xac>
   11014:	push	{ip}		; (str ip, [sp, #-4]!)
   11018:	ldr	r0, [pc, #12]	; 1102c <__assert_fail@plt+0xb0>
   1101c:	ldr	r3, [pc, #12]	; 11030 <__assert_fail@plt+0xb4>
   11020:	bl	10e50 <__libc_start_main@plt>
   11024:	bl	10f70 <abort@plt>
   11028:			; <UNDEFINED> instruction: 0x00017eb8
   1102c:	andeq	r0, r1, r8, lsl #31
   11030:	andeq	r7, r1, r8, asr lr
   11034:	ldr	r3, [pc, #20]	; 11050 <__assert_fail@plt+0xd4>
   11038:	ldr	r2, [pc, #20]	; 11054 <__assert_fail@plt+0xd8>
   1103c:	add	r3, pc, r3
   11040:	ldr	r2, [r3, r2]
   11044:	cmp	r2, #0
   11048:	bxeq	lr
   1104c:	b	10e74 <__gmon_start__@plt>
   11050:			; <UNDEFINED> instruction: 0x00017fbc
   11054:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11058:	ldr	r3, [pc, #28]	; 1107c <__assert_fail@plt+0x100>
   1105c:	ldr	r0, [pc, #28]	; 11080 <__assert_fail@plt+0x104>
   11060:	sub	r3, r3, r0
   11064:	cmp	r3, #6
   11068:	bxls	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <__assert_fail@plt+0x108>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r9, r2, pc, lsr r1
   11080:	andeq	r9, r2, ip, lsr r1
   11084:	andeq	r0, r0, r0
   11088:	ldr	r1, [pc, #36]	; 110b4 <__assert_fail@plt+0x138>
   1108c:	ldr	r0, [pc, #36]	; 110b8 <__assert_fail@plt+0x13c>
   11090:	sub	r1, r1, r0
   11094:	asr	r1, r1, #2
   11098:	add	r1, r1, r1, lsr #31
   1109c:	asrs	r1, r1, #1
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <__assert_fail@plt+0x140>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	r9, r2, ip, lsr r1
   110b8:	andeq	r9, r2, ip, lsr r1
   110bc:	andeq	r0, r0, r0
   110c0:	push	{r4, lr}
   110c4:	ldr	r4, [pc, #24]	; 110e4 <__assert_fail@plt+0x168>
   110c8:	ldrb	r3, [r4]
   110cc:	cmp	r3, #0
   110d0:	popne	{r4, pc}
   110d4:	bl	11058 <__assert_fail@plt+0xdc>
   110d8:	mov	r3, #1
   110dc:	strb	r3, [r4]
   110e0:	pop	{r4, pc}
   110e4:	andeq	r9, r2, r0, asr r1
   110e8:	ldr	r0, [pc, #40]	; 11118 <__assert_fail@plt+0x19c>
   110ec:	ldr	r3, [r0]
   110f0:	cmp	r3, #0
   110f4:	bne	110fc <__assert_fail@plt+0x180>
   110f8:	b	11088 <__assert_fail@plt+0x10c>
   110fc:	ldr	r3, [pc, #24]	; 1111c <__assert_fail@plt+0x1a0>
   11100:	cmp	r3, #0
   11104:	beq	110f8 <__assert_fail@plt+0x17c>
   11108:	push	{r4, lr}
   1110c:	blx	r3
   11110:	pop	{r4, lr}
   11114:	b	11088 <__assert_fail@plt+0x10c>
   11118:	andeq	r8, r2, ip, lsl #30
   1111c:	andeq	r0, r0, r0
   11120:	push	{r4, lr}
   11124:	sub	sp, sp, #40	; 0x28
   11128:	bl	12b84 <argp_parse@@Base+0x1448>
   1112c:	subs	r4, r0, #0
   11130:	beq	111bc <__assert_fail@plt+0x240>
   11134:	mov	r2, #32
   11138:	mov	r1, #0
   1113c:	add	r0, sp, #8
   11140:	bl	10ee0 <memset@plt>
   11144:	mov	ip, #2
   11148:	add	r2, sp, #8
   1114c:	add	r3, sp, #4
   11150:	mov	r1, #0
   11154:	mov	r0, r4
   11158:	str	ip, [sp, #8]
   1115c:	bl	10f58 <getaddrinfo@plt>
   11160:	cmp	r0, #0
   11164:	bne	111a0 <__assert_fail@plt+0x224>
   11168:	ldr	r3, [sp, #4]
   1116c:	mov	r1, #46	; 0x2e
   11170:	ldr	r0, [r3, #24]
   11174:	bl	10eb0 <strchr@plt>
   11178:	cmp	r0, #0
   1117c:	beq	11188 <__assert_fail@plt+0x20c>
   11180:	add	r0, r0, #1
   11184:	bl	10e38 <puts@plt>
   11188:	mov	r0, r4
   1118c:	bl	125d4 <argp_parse@@Base+0xe98>
   11190:	ldr	r0, [sp, #4]
   11194:	bl	10f4c <freeaddrinfo@plt>
   11198:	add	sp, sp, #40	; 0x28
   1119c:	pop	{r4, pc}
   111a0:	bl	10da8 <gai_strerror@plt>
   111a4:	ldr	r2, [pc, #40]	; 111d4 <__assert_fail@plt+0x258>
   111a8:	mov	r1, #0
   111ac:	mov	r3, r0
   111b0:	mov	r0, #1
   111b4:	bl	10e14 <error@plt>
   111b8:	b	11168 <__assert_fail@plt+0x1ec>
   111bc:	bl	10ec8 <__errno_location@plt>
   111c0:	ldr	r2, [pc, #16]	; 111d8 <__assert_fail@plt+0x25c>
   111c4:	ldr	r1, [r0]
   111c8:	mov	r0, #1
   111cc:	bl	10e14 <error@plt>
   111d0:	b	11134 <__assert_fail@plt+0x1b8>
   111d4:	ldrdeq	r7, [r1], -ip
   111d8:	andeq	r7, r1, r0, asr #31
   111dc:	ldr	r3, [r0]
   111e0:	push	{r4, r5, r6, lr}
   111e4:	cmp	r3, #0
   111e8:	ldr	r5, [r0, #16]
   111ec:	beq	11254 <__assert_fail@plt+0x2d8>
   111f0:	ldr	r0, [r1, #8]
   111f4:	mov	r2, #0
   111f8:	add	r0, r0, #1
   111fc:	str	r0, [r1, #8]
   11200:	b	11208 <__assert_fail@plt+0x28c>
   11204:	add	r2, r2, #1
   11208:	add	r3, r3, #24
   1120c:	ldr	r0, [r3, #-20]	; 0xffffffec
   11210:	cmp	r0, #0
   11214:	bne	11204 <__assert_fail@plt+0x288>
   11218:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1121c:	cmp	r0, #0
   11220:	bne	11204 <__assert_fail@plt+0x288>
   11224:	ldr	r0, [r3, #-8]
   11228:	cmp	r0, #0
   1122c:	bne	11204 <__assert_fail@plt+0x288>
   11230:	ldr	r0, [r3, #-4]
   11234:	cmp	r0, #0
   11238:	bne	11204 <__assert_fail@plt+0x288>
   1123c:	ldm	r1, {r0, r3}
   11240:	add	ip, r2, r2, lsl #1
   11244:	add	r0, r0, ip
   11248:	add	r2, r3, r2
   1124c:	stm	r1, {r0, r2}
   11250:	b	11268 <__assert_fail@plt+0x2ec>
   11254:	ldr	r3, [r0, #4]
   11258:	cmp	r3, #0
   1125c:	ldrne	r3, [r1, #8]
   11260:	addne	r3, r3, #1
   11264:	strne	r3, [r1, #8]
   11268:	cmp	r5, #0
   1126c:	popeq	{r4, r5, r6, pc}
   11270:	ldr	r0, [r5]
   11274:	cmp	r0, #0
   11278:	popeq	{r4, r5, r6, pc}
   1127c:	mov	r4, r1
   11280:	mov	r1, r4
   11284:	bl	111dc <__assert_fail@plt+0x260>
   11288:	ldr	r3, [r4, #12]
   1128c:	ldr	r0, [r5, #16]!
   11290:	add	r3, r3, #1
   11294:	cmp	r0, #0
   11298:	str	r3, [r4, #12]
   1129c:	bne	11280 <__assert_fail@plt+0x304>
   112a0:	pop	{r4, r5, r6, pc}
   112a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a8:	sub	sp, sp, #36	; 0x24
   112ac:	ldr	sl, [r0]
   112b0:	str	r0, [sp, #12]
   112b4:	cmp	sl, #0
   112b8:	str	r1, [sp, #16]
   112bc:	str	r2, [sp, #20]
   112c0:	mov	r9, r3
   112c4:	ldr	r8, [r0, #16]
   112c8:	ldr	r7, [sp, #72]	; 0x48
   112cc:	beq	11498 <__assert_fail@plt+0x51c>
   112d0:	add	fp, sl, #24
   112d4:	str	r8, [sp, #28]
   112d8:	str	r3, [sp, #24]
   112dc:	ldr	r4, [fp, #-20]	; 0xffffffec
   112e0:	sub	r1, fp, #24
   112e4:	cmp	r4, #0
   112e8:	bne	112f8 <__assert_fail@plt+0x37c>
   112ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112f0:	cmp	r3, #0
   112f4:	beq	1146c <__assert_fail@plt+0x4f0>
   112f8:	ldr	r3, [fp, #-12]
   112fc:	tst	r3, #4
   11300:	moveq	sl, r1
   11304:	moveq	r5, r3
   11308:	ldrne	r5, [sl, #12]
   1130c:	ands	r5, r5, #8
   11310:	bne	11454 <__assert_fail@plt+0x4d8>
   11314:	tst	r3, #8
   11318:	bne	11394 <__assert_fail@plt+0x418>
   1131c:	sub	r3, r4, #1
   11320:	cmp	r3, #254	; 0xfe
   11324:	bhi	11394 <__assert_fail@plt+0x418>
   11328:	bl	10e8c <__ctype_b_loc@plt>
   1132c:	lsl	r3, r4, #1
   11330:	ldr	r1, [r0]
   11334:	ldrh	r3, [r1, r3]
   11338:	tst	r3, #16384	; 0x4000
   1133c:	beq	11394 <__assert_fail@plt+0x418>
   11340:	ldr	r3, [r7, #4]
   11344:	add	r1, r3, #1
   11348:	str	r1, [r7, #4]
   1134c:	strb	r4, [r3]
   11350:	ldr	r3, [sl, #8]
   11354:	cmp	r3, #0
   11358:	beq	11388 <__assert_fail@plt+0x40c>
   1135c:	ldr	r3, [r7, #4]
   11360:	mov	r2, #58	; 0x3a
   11364:	add	r1, r3, #1
   11368:	str	r1, [r7, #4]
   1136c:	strb	r2, [r3]
   11370:	ldr	r3, [sl, #12]
   11374:	tst	r3, #1
   11378:	ldrne	r3, [r7, #4]
   1137c:	addne	r1, r3, #1
   11380:	strne	r1, [r7, #4]
   11384:	strbne	r2, [r3]
   11388:	ldr	r3, [r7, #4]
   1138c:	mov	r2, #0
   11390:	strb	r2, [r3]
   11394:	ldr	r4, [fp, #-24]	; 0xffffffe8
   11398:	cmp	r4, #0
   1139c:	beq	11454 <__assert_fail@plt+0x4d8>
   113a0:	ldr	r8, [r7]
   113a4:	ldr	r6, [r8, #8]
   113a8:	ldr	r0, [r6]
   113ac:	cmp	r0, #0
   113b0:	beq	113d4 <__assert_fail@plt+0x458>
   113b4:	mov	r9, r6
   113b8:	mov	r1, r4
   113bc:	bl	10d60 <strcmp@plt>
   113c0:	cmp	r0, #0
   113c4:	beq	1145c <__assert_fail@plt+0x4e0>
   113c8:	ldr	r0, [r9, #16]!
   113cc:	cmp	r0, #0
   113d0:	bne	113b8 <__assert_fail@plt+0x43c>
   113d4:	ldr	r3, [sl, #8]
   113d8:	ldr	r1, [r7, #8]
   113dc:	cmp	r3, #0
   113e0:	str	r4, [r1]
   113e4:	beq	113f8 <__assert_fail@plt+0x47c>
   113e8:	ldr	r3, [sl, #12]
   113ec:	tst	r3, #1
   113f0:	moveq	r5, #1
   113f4:	movne	r5, #2
   113f8:	str	r5, [r1, #4]
   113fc:	ldr	ip, [fp, #-20]	; 0xffffffec
   11400:	mov	r3, #0
   11404:	cmp	ip, r3
   11408:	str	r3, [r1, #8]
   1140c:	ldr	r2, [sp, #24]
   11410:	ldr	r3, [r8, #48]	; 0x30
   11414:	ldreq	ip, [sl, #4]
   11418:	sub	r3, r2, r3
   1141c:	bic	ip, ip, #-16777216	; 0xff000000
   11420:	asr	r3, r3, #2
   11424:	add	lr, r1, #16
   11428:	rsb	r0, r3, r3, lsl #3
   1142c:	add	r0, r0, r0, lsl #6
   11430:	add	r0, r3, r0, lsl #3
   11434:	rsb	r0, r0, r0, lsl #15
   11438:	add	r3, r3, r0, lsl #3
   1143c:	add	r3, r3, #1
   11440:	add	r3, ip, r3, lsl #24
   11444:	str	r3, [r1, #12]
   11448:	mov	r3, #0
   1144c:	str	lr, [r7, #8]
   11450:	str	r3, [r1, #16]
   11454:	add	fp, fp, #24
   11458:	b	112dc <__assert_fail@plt+0x360>
   1145c:	sub	r6, r9, r6
   11460:	cmn	r6, #15
   11464:	bge	11454 <__assert_fail@plt+0x4d8>
   11468:	b	113d4 <__assert_fail@plt+0x458>
   1146c:	ldr	r3, [fp, #-8]
   11470:	cmp	r3, #0
   11474:	bne	112f8 <__assert_fail@plt+0x37c>
   11478:	ldr	r3, [fp, #-4]
   1147c:	cmp	r3, #0
   11480:	bne	112f8 <__assert_fail@plt+0x37c>
   11484:	ldr	r3, [sp, #12]
   11488:	ldr	r8, [sp, #28]
   1148c:	ldr	r9, [sp, #24]
   11490:	ldr	r3, [r3, #4]
   11494:	b	114b0 <__assert_fail@plt+0x534>
   11498:	ldr	r3, [sp, #12]
   1149c:	ldr	r3, [r3, #4]
   114a0:	cmp	r3, #0
   114a4:	moveq	r0, r9
   114a8:	moveq	r9, r3
   114ac:	beq	11520 <__assert_fail@plt+0x5a4>
   114b0:	ldr	r2, [r7, #4]
   114b4:	ldr	r1, [sp, #12]
   114b8:	str	r3, [r9]
   114bc:	cmp	r8, #0
   114c0:	stmib	r9, {r1, r2}
   114c4:	ldr	r2, [sp, #16]
   114c8:	mov	r3, #0
   114cc:	str	r2, [r9, #16]
   114d0:	ldr	r2, [sp, #20]
   114d4:	str	r3, [r9, #12]
   114d8:	str	r2, [r9, #20]
   114dc:	str	r3, [r9, #24]
   114e0:	str	r3, [r9, #32]
   114e4:	str	r3, [r9, #28]
   114e8:	beq	1151c <__assert_fail@plt+0x5a0>
   114ec:	ldr	r2, [r8]
   114f0:	cmp	r2, r3
   114f4:	beq	11568 <__assert_fail@plt+0x5ec>
   114f8:	add	r3, r3, #1
   114fc:	ldr	r2, [r8, r3, lsl #4]
   11500:	cmp	r2, #0
   11504:	bne	114f8 <__assert_fail@plt+0x57c>
   11508:	lsl	r3, r3, #2
   1150c:	ldr	r2, [r7, #12]
   11510:	add	r3, r2, r3
   11514:	str	r2, [r9, #28]
   11518:	str	r3, [r7, #12]
   1151c:	add	r0, r9, #36	; 0x24
   11520:	cmp	r8, #0
   11524:	beq	11560 <__assert_fail@plt+0x5e4>
   11528:	ldr	r1, [r8]
   1152c:	cmp	r1, #0
   11530:	beq	11560 <__assert_fail@plt+0x5e4>
   11534:	mov	r2, #0
   11538:	add	r4, r2, #1
   1153c:	mov	r3, r0
   11540:	str	r7, [sp]
   11544:	mov	r0, r1
   11548:	mov	r1, r9
   1154c:	bl	112a4 <__assert_fail@plt+0x328>
   11550:	ldr	r1, [r8, r4, lsl #4]
   11554:	mov	r2, r4
   11558:	cmp	r1, #0
   1155c:	bne	11538 <__assert_fail@plt+0x5bc>
   11560:	add	sp, sp, #36	; 0x24
   11564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11568:	mov	r3, r2
   1156c:	b	1150c <__assert_fail@plt+0x590>
   11570:	cmp	r0, #86	; 0x56
   11574:	beq	11580 <__assert_fail@plt+0x604>
   11578:	mov	r0, #7
   1157c:	bx	lr
   11580:	ldr	r3, [pc, #104]	; 115f0 <__assert_fail@plt+0x674>
   11584:	push	{r4, lr}
   11588:	mov	r4, r2
   1158c:	ldr	r3, [r3]
   11590:	cmp	r3, #0
   11594:	beq	115b8 <__assert_fail@plt+0x63c>
   11598:	mov	r1, r2
   1159c:	ldr	r0, [r2, #48]	; 0x30
   115a0:	blx	r3
   115a4:	ldr	r0, [r4, #16]
   115a8:	ands	r0, r0, #32
   115ac:	beq	115ec <__assert_fail@plt+0x670>
   115b0:	mov	r0, #0
   115b4:	pop	{r4, pc}
   115b8:	ldr	r3, [pc, #52]	; 115f4 <__assert_fail@plt+0x678>
   115bc:	ldr	r2, [r3]
   115c0:	cmp	r2, #0
   115c4:	beq	115d8 <__assert_fail@plt+0x65c>
   115c8:	ldr	r1, [pc, #40]	; 115f8 <__assert_fail@plt+0x67c>
   115cc:	ldr	r0, [r4, #48]	; 0x30
   115d0:	bl	10ebc <fprintf@plt>
   115d4:	b	115a4 <__assert_fail@plt+0x628>
   115d8:	ldr	r2, [pc, #28]	; 115fc <__assert_fail@plt+0x680>
   115dc:	ldr	r1, [pc, #28]	; 11600 <__assert_fail@plt+0x684>
   115e0:	mov	r0, r4
   115e4:	bl	15e98 <argp_error@@Base>
   115e8:	b	115a4 <__assert_fail@plt+0x628>
   115ec:	bl	10e98 <exit@plt>
   115f0:	andeq	r9, r2, r8, asr r1
   115f4:	muleq	r2, r0, r1
   115f8:	andeq	r8, r1, ip, asr #5
   115fc:	andeq	r8, r1, r0, lsr r1
   11600:	ldrdeq	r7, [r1], -ip
   11604:	cmn	r0, #3
   11608:	push	{r4, r5, lr}
   1160c:	mov	r4, r2
   11610:	sub	sp, sp, #12
   11614:	beq	116f8 <__assert_fail@plt+0x77c>
   11618:	ble	11688 <__assert_fail@plt+0x70c>
   1161c:	cmn	r0, #2
   11620:	beq	11648 <__assert_fail@plt+0x6cc>
   11624:	cmp	r0, #63	; 0x3f
   11628:	bne	116ec <__assert_fail@plt+0x770>
   1162c:	mov	r0, r4
   11630:	ldr	r2, [pc, #236]	; 11724 <__assert_fail@plt+0x7a8>
   11634:	ldr	r1, [r4, #48]	; 0x30
   11638:	bl	15de8 <argp_state_help@@Base>
   1163c:	mov	r0, #0
   11640:	add	sp, sp, #12
   11644:	pop	{r4, r5, pc}
   11648:	ldr	r3, [pc, #216]	; 11728 <__assert_fail@plt+0x7ac>
   1164c:	mov	r0, r1
   11650:	str	r1, [sp, #4]
   11654:	str	r1, [r3]
   11658:	bl	12528 <argp_parse@@Base+0xdec>
   1165c:	ldr	r3, [r4, #16]
   11660:	ldr	r2, [pc, #196]	; 1172c <__assert_fail@plt+0x7b0>
   11664:	and	r3, r3, #3
   11668:	cmp	r3, #1
   1166c:	ldr	r1, [sp, #4]
   11670:	str	r0, [r4, #40]	; 0x28
   11674:	str	r0, [r2]
   11678:	beq	11714 <__assert_fail@plt+0x798>
   1167c:	mov	r0, #0
   11680:	add	sp, sp, #12
   11684:	pop	{r4, r5, pc}
   11688:	cmn	r0, #4
   1168c:	bne	116ec <__assert_fail@plt+0x770>
   11690:	cmp	r1, #0
   11694:	ldr	r0, [pc, #148]	; 11730 <__assert_fail@plt+0x7b4>
   11698:	mov	r2, #10
   1169c:	movne	r0, r1
   116a0:	mov	r1, #0
   116a4:	bl	10d6c <strtol@plt>
   116a8:	ldr	r4, [pc, #132]	; 11734 <__assert_fail@plt+0x7b8>
   116ac:	str	r0, [r4]
   116b0:	ldr	r3, [r4]
   116b4:	cmp	r3, #0
   116b8:	sub	r3, r3, #1
   116bc:	str	r3, [r4]
   116c0:	ble	1167c <__assert_fail@plt+0x700>
   116c4:	mov	r5, #1
   116c8:	mov	r0, r5
   116cc:	bl	10dd8 <sleep@plt>
   116d0:	ldr	r3, [r4]
   116d4:	cmp	r3, #0
   116d8:	sub	r3, r3, #1
   116dc:	str	r3, [r4]
   116e0:	bgt	116c8 <__assert_fail@plt+0x74c>
   116e4:	mov	r0, #0
   116e8:	b	11680 <__assert_fail@plt+0x704>
   116ec:	mov	r0, #7
   116f0:	add	sp, sp, #12
   116f4:	pop	{r4, r5, pc}
   116f8:	mov	r0, r4
   116fc:	ldr	r2, [pc, #52]	; 11738 <__assert_fail@plt+0x7bc>
   11700:	ldr	r1, [r4, #48]	; 0x30
   11704:	bl	15de8 <argp_state_help@@Base>
   11708:	mov	r0, #0
   1170c:	add	sp, sp, #12
   11710:	pop	{r4, r5, pc}
   11714:	ldr	r3, [r4, #8]
   11718:	mov	r0, #0
   1171c:	str	r1, [r3]
   11720:	b	11640 <__assert_fail@plt+0x6c4>
   11724:	andeq	r0, r0, sl, ror r2
   11728:	andeq	r9, r2, r4, asr #2
   1172c:	andeq	r9, r2, r0, asr #2
   11730:	andeq	r8, r1, r4, asr r1
   11734:	andeq	r9, r2, r4, asr r1
   11738:	andeq	r0, r0, r1, lsl #4

0001173c <argp_parse@@Base>:
   1173c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11740:	add	fp, sp, #32
   11744:	tst	r3, #1
   11748:	sub	sp, sp, #228	; 0xe4
   1174c:	mov	r6, r3
   11750:	mov	r7, r0
   11754:	str	r1, [fp, #-240]	; 0xffffff10
   11758:	str	r2, [fp, #-232]	; 0xffffff18
   1175c:	bne	11788 <argp_parse@@Base+0x4c>
   11760:	ldr	r3, [pc, #3260]	; 12424 <argp_parse@@Base+0xce8>
   11764:	ldr	r4, [pc, #3260]	; 12428 <argp_parse@@Base+0xcec>
   11768:	ldr	r2, [r3]
   1176c:	cmp	r2, #0
   11770:	ldreq	r2, [fp, #-232]	; 0xffffff18
   11774:	ldreq	r2, [r2]
   11778:	streq	r2, [r3]
   1177c:	ldr	r3, [r4]
   11780:	cmp	r3, #0
   11784:	beq	11e28 <argp_parse@@Base+0x6ec>
   11788:	ands	r3, r6, #16
   1178c:	beq	11d30 <argp_parse@@Base+0x5f4>
   11790:	sub	r4, fp, #196	; 0xc4
   11794:	mov	r0, r4
   11798:	mov	r2, #36	; 0x24
   1179c:	mov	r1, #0
   117a0:	bl	10ee0 <memset@plt>
   117a4:	ands	r3, r6, #4
   117a8:	str	r3, [fp, #-244]	; 0xffffff0c
   117ac:	mov	r3, #0
   117b0:	moveq	r0, #1
   117b4:	movne	r0, #0
   117b8:	cmp	r7, r3
   117bc:	str	r3, [fp, #-224]	; 0xffffff20
   117c0:	str	r3, [fp, #-220]	; 0xffffff24
   117c4:	str	r3, [fp, #-216]	; 0xffffff28
   117c8:	str	r0, [fp, #-228]	; 0xffffff1c
   117cc:	beq	11c34 <argp_parse@@Base+0x4f8>
   117d0:	mov	r0, r7
   117d4:	sub	r1, fp, #228	; 0xe4
   117d8:	bl	111dc <__assert_fail@plt+0x260>
   117dc:	ldr	r5, [fp, #-220]	; 0xffffff24
   117e0:	ldr	r9, [fp, #-216]	; 0xffffff28
   117e4:	add	r5, r5, #1
   117e8:	ldr	r3, [fp, #-224]	; 0xffffff20
   117ec:	add	r5, r5, r5, lsl #3
   117f0:	lsl	r2, r9, #2
   117f4:	lsl	r5, r5, #2
   117f8:	add	r3, r3, #1
   117fc:	add	sl, r2, r5
   11800:	ldr	r0, [fp, #-228]	; 0xffffff1c
   11804:	add	r9, sl, r3, lsl #4
   11808:	str	r2, [fp, #-236]	; 0xffffff14
   1180c:	add	r0, r9, r0
   11810:	add	r0, r0, #1
   11814:	bl	12c70 <argp_parse@@Base+0x1534>
   11818:	cmp	r0, #0
   1181c:	mov	r8, r0
   11820:	str	r0, [fp, #-40]	; 0xffffffd8
   11824:	moveq	r5, #12
   11828:	beq	11c28 <argp_parse@@Base+0x4ec>
   1182c:	mov	r3, #1
   11830:	str	r3, [fp, #-196]	; 0xffffff3c
   11834:	str	r3, [fp, #-192]	; 0xffffff40
   11838:	ldm	r4!, {r0, r1, r2, r3}
   1183c:	sub	ip, fp, #148	; 0x94
   11840:	add	r5, r8, r5
   11844:	str	r5, [fp, #-104]	; 0xffffff98
   11848:	stmia	ip!, {r0, r1, r2, r3}
   1184c:	add	r3, r8, sl
   11850:	mov	lr, r3
   11854:	ldm	r4!, {r0, r1, r2, r3}
   11858:	add	sl, r8, r9
   1185c:	str	lr, [fp, #-248]	; 0xffffff08
   11860:	str	lr, [fp, #-152]	; 0xffffff68
   11864:	ldr	lr, [r4]
   11868:	stmia	ip!, {r0, r1, r2, r3}
   1186c:	mov	r0, r5
   11870:	ldr	r2, [fp, #-236]	; 0xffffff14
   11874:	mov	r1, #0
   11878:	str	lr, [ip]
   1187c:	str	r8, [fp, #-112]	; 0xffffff90
   11880:	str	sl, [fp, #-156]	; 0xffffff64
   11884:	bl	10ee0 <memset@plt>
   11888:	ldr	lr, [fp, #-248]	; 0xffffff08
   1188c:	sub	r4, fp, #160	; 0xa0
   11890:	tst	r6, #8
   11894:	str	lr, [fp, #-204]	; 0xffffff34
   11898:	str	sl, [fp, #-208]	; 0xffffff30
   1189c:	str	r5, [fp, #-200]	; 0xffffff38
   118a0:	str	r4, [fp, #-212]	; 0xffffff2c
   118a4:	bne	11c48 <argp_parse@@Base+0x50c>
   118a8:	ldr	r3, [fp, #-244]	; 0xffffff0c
   118ac:	cmp	r3, #0
   118b0:	addne	r3, sl, #1
   118b4:	movne	r2, #43	; 0x2b
   118b8:	strbne	r2, [sl]
   118bc:	movne	sl, r3
   118c0:	strne	r3, [fp, #-208]	; 0xffffff30
   118c4:	mov	r2, #0
   118c8:	strb	r2, [sl]
   118cc:	ldr	r3, [fp, #-204]	; 0xffffff34
   118d0:	cmp	r7, r2
   118d4:	str	r2, [r3]
   118d8:	str	r7, [fp, #-160]	; 0xffffff60
   118dc:	beq	11df0 <argp_parse@@Base+0x6b4>
   118e0:	sub	r1, fp, #212	; 0xd4
   118e4:	mov	r0, r7
   118e8:	str	r1, [sp]
   118ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   118f0:	mov	r1, r2
   118f4:	bl	112a4 <__assert_fail@plt+0x328>
   118f8:	ldr	r7, [fp, #-160]	; 0xffffff60
   118fc:	ldr	r5, [fp, #-112]	; 0xffffff90
   11900:	mov	r8, r0
   11904:	str	r0, [fp, #-108]	; 0xffffff94
   11908:	mov	r2, #56	; 0x38
   1190c:	mov	r1, #0
   11910:	sub	r0, fp, #96	; 0x60
   11914:	bl	10ee0 <memset@plt>
   11918:	ldr	r2, [pc, #2828]	; 1242c <argp_parse@@Base+0xcf0>
   1191c:	ldr	r3, [pc, #2828]	; 12430 <argp_parse@@Base+0xcf4>
   11920:	ldr	r0, [fp, #-240]	; 0xffffff10
   11924:	ldr	r1, [r2]
   11928:	str	r0, [fp, #-92]	; 0xffffffa4
   1192c:	ldr	r2, [r3]
   11930:	ldr	r0, [fp, #-232]	; 0xffffff18
   11934:	mov	r3, #1
   11938:	cmp	r5, r8
   1193c:	str	r7, [fp, #-96]	; 0xffffffa0
   11940:	str	r0, [fp, #-88]	; 0xffffffa8
   11944:	str	r6, [fp, #-80]	; 0xffffffb0
   11948:	str	r4, [fp, #-44]	; 0xffffffd4
   1194c:	str	r1, [fp, #-52]	; 0xffffffcc
   11950:	str	r2, [fp, #-48]	; 0xffffffd0
   11954:	str	r3, [fp, #-100]	; 0xffffff9c
   11958:	bcc	11c5c <argp_parse@@Base+0x520>
   1195c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11960:	tst	r3, #2
   11964:	bne	11e00 <argp_parse@@Base+0x6c4>
   11968:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1196c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   11970:	mov	r2, #1
   11974:	str	r2, [fp, #-144]	; 0xffffff70
   11978:	ldr	r2, [fp, #-232]	; 0xffffff18
   1197c:	cmp	r2, r3
   11980:	beq	12300 <argp_parse@@Base+0xbc4>
   11984:	ldr	r3, [pc, #2716]	; 12428 <argp_parse@@Base+0xcec>
   11988:	ldr	r3, [r3]
   1198c:	str	r3, [fp, #-56]	; 0xffffffc8
   11990:	ldr	r2, [fp, #-100]	; 0xffffff9c
   11994:	ldr	r5, [fp, #-84]	; 0xffffffac
   11998:	ldr	sl, [pc, #2708]	; 12434 <argp_parse@@Base+0xcf8>
   1199c:	mov	r0, r4
   119a0:	mov	r6, #0
   119a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   119a8:	cmp	r3, #0
   119ac:	beq	11e3c <argp_parse@@Base+0x700>
   119b0:	cmp	r3, r5
   119b4:	strgt	r6, [fp, #-72]	; 0xffffffb8
   119b8:	bgt	11e3c <argp_parse@@Base+0x700>
   119bc:	cmp	r5, r0
   119c0:	blt	121d8 <argp_parse@@Base+0xa9c>
   119c4:	cmp	r5, r0
   119c8:	bne	121e4 <argp_parse@@Base+0xaa8>
   119cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   119d0:	ldr	ip, [fp, #-108]	; 0xffffff94
   119d4:	cmp	r3, ip
   119d8:	bcs	123c8 <argp_parse@@Base+0xc8c>
   119dc:	mov	r5, #0
   119e0:	add	r4, r3, #36	; 0x24
   119e4:	mov	r7, r5
   119e8:	ldr	r6, [pc, #2632]	; 12438 <argp_parse@@Base+0xcfc>
   119ec:	mov	r0, r5
   119f0:	b	11a38 <argp_parse@@Base+0x2fc>
   119f4:	ldr	ip, [r4, #-4]
   119f8:	str	ip, [fp, #-60]	; 0xffffffc4
   119fc:	ldr	ip, [r4, #-12]
   11a00:	str	ip, [fp, #-68]	; 0xffffffbc
   11a04:	ldr	ip, [r4, #-8]
   11a08:	str	r3, [fp, #-76]	; 0xffffffb4
   11a0c:	str	ip, [fp, #-64]	; 0xffffffc0
   11a10:	blx	r5
   11a14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11a18:	str	r3, [r4, #-4]
   11a1c:	ldr	ip, [fp, #-108]	; 0xffffff94
   11a20:	cmp	ip, r4
   11a24:	bls	12370 <argp_parse@@Base+0xc34>
   11a28:	cmp	r0, #7
   11a2c:	cmpne	r0, #0
   11a30:	bne	1234c <argp_parse@@Base+0xc10>
   11a34:	add	r4, r4, #36	; 0x24
   11a38:	ldr	r3, [r4, #-24]	; 0xffffffe8
   11a3c:	cmp	r3, #0
   11a40:	bne	11a20 <argp_parse@@Base+0x2e4>
   11a44:	ldr	r5, [r4, #-36]	; 0xffffffdc
   11a48:	sub	r2, fp, #96	; 0x60
   11a4c:	cmp	r5, #0
   11a50:	mov	r1, r7
   11a54:	mov	r0, r6
   11a58:	bne	119f4 <argp_parse@@Base+0x2b8>
   11a5c:	cmp	ip, r4
   11a60:	mov	r0, #7
   11a64:	bhi	11a34 <argp_parse@@Base+0x2f8>
   11a68:	ldr	r3, [fp, #-112]	; 0xffffff90
   11a6c:	sub	r4, ip, #36	; 0x24
   11a70:	cmp	r4, r3
   11a74:	movcs	r5, #7
   11a78:	bcc	11b00 <argp_parse@@Base+0x3c4>
   11a7c:	cmp	r5, #7
   11a80:	cmpne	r5, #0
   11a84:	bne	12360 <argp_parse@@Base+0xc24>
   11a88:	sub	r4, r4, #36	; 0x24
   11a8c:	mov	r7, #0
   11a90:	ldr	r6, [pc, #2468]	; 1243c <argp_parse@@Base+0xd00>
   11a94:	b	11ae0 <argp_parse@@Base+0x3a4>
   11a98:	ldr	r3, [r4, #68]	; 0x44
   11a9c:	ldr	ip, [r4, #48]	; 0x30
   11aa0:	str	r3, [fp, #-60]	; 0xffffffc4
   11aa4:	ldr	r3, [r4, #60]	; 0x3c
   11aa8:	str	r3, [fp, #-68]	; 0xffffffbc
   11aac:	ldr	r3, [r4, #64]	; 0x40
   11ab0:	str	ip, [fp, #-76]	; 0xffffffb4
   11ab4:	str	r3, [fp, #-64]	; 0xffffffc0
   11ab8:	blx	r5
   11abc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ac0:	str	r3, [r4, #68]	; 0x44
   11ac4:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ac8:	cmp	r4, r3
   11acc:	bcc	123c0 <argp_parse@@Base+0xc84>
   11ad0:	cmp	r0, #7
   11ad4:	cmpne	r0, #0
   11ad8:	bne	12330 <argp_parse@@Base+0xbf4>
   11adc:	sub	r4, r4, #36	; 0x24
   11ae0:	ldr	r5, [r4, #36]	; 0x24
   11ae4:	sub	r2, fp, #96	; 0x60
   11ae8:	cmp	r5, #0
   11aec:	mov	r1, r7
   11af0:	mov	r0, r6
   11af4:	bne	11a98 <argp_parse@@Base+0x35c>
   11af8:	cmp	r4, r3
   11afc:	bcs	11adc <argp_parse@@Base+0x3a0>
   11b00:	ldr	r2, [fp, #4]
   11b04:	cmp	r2, #0
   11b08:	beq	11b24 <argp_parse@@Base+0x3e8>
   11b0c:	mov	r5, #0
   11b10:	ldr	r1, [fp, #4]
   11b14:	ldr	r2, [fp, #-84]	; 0xffffffac
   11b18:	str	r2, [r1]
   11b1c:	cmp	r5, #0
   11b20:	bne	12340 <argp_parse@@Base+0xc04>
   11b24:	ldr	ip, [fp, #-108]	; 0xffffff94
   11b28:	b	121fc <argp_parse@@Base+0xac0>
   11b2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11b30:	mov	r5, r0
   11b34:	ldr	ip, [fp, #-108]	; 0xffffff94
   11b38:	cmp	ip, r3
   11b3c:	bls	122f8 <argp_parse@@Base+0xbbc>
   11b40:	ldr	r7, [pc, #2296]	; 12440 <argp_parse@@Base+0xd04>
   11b44:	add	r4, r3, #36	; 0x24
   11b48:	mov	r8, #0
   11b4c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   11b50:	sub	r2, fp, #96	; 0x60
   11b54:	cmp	r3, #0
   11b58:	mov	r1, r8
   11b5c:	mov	r0, r7
   11b60:	mov	r6, r4
   11b64:	beq	11b98 <argp_parse@@Base+0x45c>
   11b68:	ldr	ip, [r4, #-4]
   11b6c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   11b70:	str	ip, [fp, #-60]	; 0xffffffc4
   11b74:	ldr	ip, [r4, #-12]
   11b78:	str	ip, [fp, #-68]	; 0xffffffbc
   11b7c:	ldr	ip, [r4, #-8]
   11b80:	str	lr, [fp, #-76]	; 0xffffffb4
   11b84:	str	ip, [fp, #-64]	; 0xffffffc0
   11b88:	blx	r3
   11b8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11b90:	str	r3, [r4, #-4]
   11b94:	ldr	ip, [fp, #-108]	; 0xffffff94
   11b98:	cmp	ip, r6
   11b9c:	add	r4, r4, #36	; 0x24
   11ba0:	bhi	11b4c <argp_parse@@Base+0x410>
   11ba4:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ba8:	sub	ip, ip, #36	; 0x24
   11bac:	cmp	r3, ip
   11bb0:	bhi	11c18 <argp_parse@@Base+0x4dc>
   11bb4:	ldr	r8, [pc, #2184]	; 12444 <argp_parse@@Base+0xd08>
   11bb8:	sub	r4, ip, #36	; 0x24
   11bbc:	mov	r9, #0
   11bc0:	ldr	r6, [r4, #36]	; 0x24
   11bc4:	sub	r2, fp, #96	; 0x60
   11bc8:	cmp	r6, #0
   11bcc:	mov	r1, r9
   11bd0:	mov	r0, r8
   11bd4:	mov	r7, r4
   11bd8:	beq	11c0c <argp_parse@@Base+0x4d0>
   11bdc:	ldr	r3, [r4, #68]	; 0x44
   11be0:	ldr	ip, [r4, #48]	; 0x30
   11be4:	str	r3, [fp, #-60]	; 0xffffffc4
   11be8:	ldr	r3, [r4, #60]	; 0x3c
   11bec:	str	r3, [fp, #-68]	; 0xffffffbc
   11bf0:	ldr	r3, [r4, #64]	; 0x40
   11bf4:	str	ip, [fp, #-76]	; 0xffffffb4
   11bf8:	str	r3, [fp, #-64]	; 0xffffffc0
   11bfc:	blx	r6
   11c00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c04:	str	r3, [r4, #68]	; 0x44
   11c08:	ldr	r3, [fp, #-112]	; 0xffffff90
   11c0c:	cmp	r3, r7
   11c10:	sub	r4, r4, #36	; 0x24
   11c14:	bls	11bc0 <argp_parse@@Base+0x484>
   11c18:	cmp	r5, #7
   11c1c:	moveq	r5, #22
   11c20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c24:	bl	125d4 <argp_parse@@Base+0xe98>
   11c28:	mov	r0, r5
   11c2c:	sub	sp, fp, #32
   11c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c34:	mov	sl, #36	; 0x24
   11c38:	mov	r5, sl
   11c3c:	mov	r9, #52	; 0x34
   11c40:	str	r7, [fp, #-236]	; 0xffffff14
   11c44:	b	1180c <argp_parse@@Base+0xd0>
   11c48:	add	sl, sl, #1
   11c4c:	mov	r3, #45	; 0x2d
   11c50:	str	sl, [fp, #-208]	; 0xffffff30
   11c54:	strb	r3, [r8, r9]
   11c58:	b	118c4 <argp_parse@@Base+0x188>
   11c5c:	ldr	r3, [fp, #8]
   11c60:	add	r4, r5, #36	; 0x24
   11c64:	str	r3, [r5, #24]
   11c68:	mov	r7, #0
   11c6c:	ldr	r6, [pc, #2004]	; 12448 <argp_parse@@Base+0xd0c>
   11c70:	b	11cc8 <argp_parse@@Base+0x58c>
   11c74:	ldr	r2, [r4, #-4]
   11c78:	ldr	r0, [r4, #-24]	; 0xffffffe8
   11c7c:	str	r2, [fp, #-60]	; 0xffffffc4
   11c80:	ldr	r1, [r4, #-12]
   11c84:	sub	r2, fp, #96	; 0x60
   11c88:	str	r1, [fp, #-68]	; 0xffffffbc
   11c8c:	ldr	ip, [r4, #-8]
   11c90:	mov	r1, r7
   11c94:	str	r0, [fp, #-76]	; 0xffffffb4
   11c98:	str	ip, [fp, #-64]	; 0xffffffc0
   11c9c:	mov	r0, r6
   11ca0:	blx	r3
   11ca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ca8:	str	r3, [r4, #-4]
   11cac:	ldr	r3, [fp, #-108]	; 0xffffff94
   11cb0:	cmp	r3, r4
   11cb4:	bls	123e4 <argp_parse@@Base+0xca8>
   11cb8:	cmp	r0, #7
   11cbc:	cmpne	r0, #0
   11cc0:	bne	11de0 <argp_parse@@Base+0x6a4>
   11cc4:	add	r4, r4, #36	; 0x24
   11cc8:	ldr	r3, [r4, #-20]	; 0xffffffec
   11ccc:	cmp	r3, #0
   11cd0:	ldrne	r3, [r3, #28]
   11cd4:	ldrne	r2, [r4, #-16]
   11cd8:	ldrne	r3, [r3, r2, lsl #2]
   11cdc:	strne	r3, [r4, #-12]
   11ce0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   11ce4:	cmp	r3, #0
   11ce8:	bne	11c74 <argp_parse@@Base+0x538>
   11cec:	ldr	r3, [r4, #-32]	; 0xffffffe0
   11cf0:	ldr	r3, [r3, #16]
   11cf4:	cmp	r3, #0
   11cf8:	beq	11d20 <argp_parse@@Base+0x5e4>
   11cfc:	ldr	r3, [r3]
   11d00:	cmp	r3, #0
   11d04:	beq	11d20 <argp_parse@@Base+0x5e4>
   11d08:	ldr	r3, [r4, #-8]
   11d0c:	ldr	r2, [r4, #-12]
   11d10:	str	r2, [r3]
   11d14:	ldr	r3, [r4, #-36]	; 0xffffffdc
   11d18:	cmp	r3, #0
   11d1c:	bne	11c74 <argp_parse@@Base+0x538>
   11d20:	ldr	r3, [fp, #-108]	; 0xffffff94
   11d24:	cmp	r3, r4
   11d28:	bhi	11cc4 <argp_parse@@Base+0x588>
   11d2c:	b	1195c <argp_parse@@Base+0x220>
   11d30:	sub	sp, sp, #72	; 0x48
   11d34:	add	r4, sp, #8
   11d38:	sub	sp, sp, #40	; 0x28
   11d3c:	add	r5, sp, #8
   11d40:	mov	r1, r3
   11d44:	mov	r0, r4
   11d48:	mov	r2, #64	; 0x40
   11d4c:	str	r3, [r5]
   11d50:	str	r3, [r5, #4]
   11d54:	str	r3, [r5, #8]
   11d58:	str	r3, [r5, #12]
   11d5c:	str	r3, [r5, #20]
   11d60:	str	r3, [r5, #24]
   11d64:	str	r4, [r5, #16]
   11d68:	bl	10ee0 <memset@plt>
   11d6c:	ldr	r3, [pc, #1752]	; 1244c <argp_parse@@Base+0xd10>
   11d70:	cmp	r7, #0
   11d74:	strne	r7, [r4]
   11d78:	ldr	r3, [r3]
   11d7c:	addne	r4, r4, #16
   11d80:	ldr	r2, [pc, #1736]	; 12450 <argp_parse@@Base+0xd14>
   11d84:	cmp	r3, #0
   11d88:	str	r2, [r4]
   11d8c:	beq	12318 <argp_parse@@Base+0xbdc>
   11d90:	ldr	r2, [pc, #1724]	; 12454 <argp_parse@@Base+0xd18>
   11d94:	add	r3, r4, #32
   11d98:	str	r2, [r4, #16]
   11d9c:	mov	r8, #0
   11da0:	sub	r4, fp, #196	; 0xc4
   11da4:	str	r8, [r3]
   11da8:	mov	r1, r8
   11dac:	mov	r0, r4
   11db0:	mov	r2, #36	; 0x24
   11db4:	bl	10ee0 <memset@plt>
   11db8:	ands	r3, r6, #4
   11dbc:	str	r3, [fp, #-244]	; 0xffffff0c
   11dc0:	moveq	r3, #1
   11dc4:	movne	r3, r8
   11dc8:	mov	r7, r5
   11dcc:	str	r8, [fp, #-224]	; 0xffffff20
   11dd0:	str	r8, [fp, #-220]	; 0xffffff24
   11dd4:	str	r8, [fp, #-216]	; 0xffffff28
   11dd8:	str	r3, [fp, #-228]	; 0xffffff1c
   11ddc:	b	117d0 <argp_parse@@Base+0x94>
   11de0:	mov	r5, r0
   11de4:	mov	r0, r5
   11de8:	sub	sp, fp, #32
   11dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11df0:	ldr	r5, [fp, #-112]	; 0xffffff90
   11df4:	mov	r8, r5
   11df8:	str	r5, [fp, #-108]	; 0xffffff94
   11dfc:	b	11908 <argp_parse@@Base+0x1cc>
   11e00:	tst	r3, #1
   11e04:	mov	r3, #0
   11e08:	str	r3, [fp, #-144]	; 0xffffff70
   11e0c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   11e10:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11e14:	subne	r3, r3, #4
   11e18:	addne	r4, r4, #1
   11e1c:	strne	r3, [fp, #-88]	; 0xffffffa8
   11e20:	strne	r4, [fp, #-92]	; 0xffffffa4
   11e24:	b	11978 <argp_parse@@Base+0x23c>
   11e28:	ldr	r3, [fp, #-232]	; 0xffffff18
   11e2c:	ldr	r0, [r3]
   11e30:	bl	12528 <argp_parse@@Base+0xdec>
   11e34:	str	r0, [r4]
   11e38:	b	11788 <argp_parse@@Base+0x4c>
   11e3c:	cmp	r2, #0
   11e40:	beq	119bc <argp_parse@@Base+0x280>
   11e44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11e48:	str	r5, [fp, #-148]	; 0xffffff6c
   11e4c:	ands	ip, r3, #64	; 0x40
   11e50:	mvn	r3, #0
   11e54:	str	r3, [fp, #-140]	; 0xffffff74
   11e58:	ldr	r2, [fp, #-156]	; 0xffffff64
   11e5c:	ldr	r3, [fp, #-152]	; 0xffffff68
   11e60:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11e64:	beq	12184 <argp_parse@@Base+0xa48>
   11e68:	sub	ip, fp, #148	; 0x94
   11e6c:	stm	sp, {r6, ip}
   11e70:	bl	126a8 <argp_parse@@Base+0xf6c>
   11e74:	ldr	r5, [fp, #-148]	; 0xffffff6c
   11e78:	str	r5, [fp, #-84]	; 0xffffffac
   11e7c:	mov	r7, r0
   11e80:	cmn	r7, #1
   11e84:	beq	121a4 <argp_parse@@Base+0xa68>
   11e88:	cmp	r7, #63	; 0x3f
   11e8c:	beq	122a8 <argp_parse@@Base+0xb6c>
   11e90:	cmp	r7, #1
   11e94:	beq	11fec <argp_parse@@Base+0x8b0>
   11e98:	asrs	r8, r7, #24
   11e9c:	bne	11f48 <argp_parse@@Base+0x80c>
   11ea0:	mov	r1, r7
   11ea4:	ldr	r0, [fp, #-156]	; 0xffffff64
   11ea8:	bl	10eb0 <strchr@plt>
   11eac:	cmp	r0, #0
   11eb0:	beq	11fb8 <argp_parse@@Base+0x87c>
   11eb4:	ldr	r4, [fp, #-112]	; 0xffffff90
   11eb8:	ldr	r2, [fp, #-108]	; 0xffffff94
   11ebc:	cmp	r4, r2
   11ec0:	bcc	11ed4 <argp_parse@@Base+0x798>
   11ec4:	b	11fb8 <argp_parse@@Base+0x87c>
   11ec8:	add	r4, r4, #36	; 0x24
   11ecc:	cmp	r4, r2
   11ed0:	bcs	11fb8 <argp_parse@@Base+0x87c>
   11ed4:	ldr	r3, [r4, #8]
   11ed8:	cmp	r0, r3
   11edc:	bcs	11ec8 <argp_parse@@Base+0x78c>
   11ee0:	ldr	r3, [r4]
   11ee4:	cmp	r3, #0
   11ee8:	beq	11fb8 <argp_parse@@Base+0x87c>
   11eec:	ldr	r2, [r4, #32]
   11ef0:	ldr	r0, [r4, #28]
   11ef4:	ldr	ip, [r4, #24]
   11ef8:	str	r2, [fp, #-60]	; 0xffffffc4
   11efc:	ldr	r2, [r4, #12]
   11f00:	ldr	r1, [fp, #-136]	; 0xffffff78
   11f04:	str	r0, [fp, #-64]	; 0xffffffc0
   11f08:	str	r2, [fp, #-76]	; 0xffffffb4
   11f0c:	str	ip, [fp, #-68]	; 0xffffffbc
   11f10:	sub	r2, fp, #96	; 0x60
   11f14:	mov	r0, r7
   11f18:	blx	r3
   11f1c:	mov	r8, r6
   11f20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11f24:	str	r3, [r4, #32]
   11f28:	cmp	r0, #7
   11f2c:	beq	11fb0 <argp_parse@@Base+0x874>
   11f30:	cmp	r0, #0
   11f34:	bne	11b2c <argp_parse@@Base+0x3f0>
   11f38:	ldr	r2, [fp, #-100]	; 0xffffff9c
   11f3c:	ldr	r5, [fp, #-84]	; 0xffffffac
   11f40:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11f44:	b	119a4 <argp_parse@@Base+0x268>
   11f48:	add	r3, r8, r8, lsl #3
   11f4c:	ldr	r2, [fp, #-112]	; 0xffffff90
   11f50:	lsl	r3, r3, #2
   11f54:	sub	r3, r3, #36	; 0x24
   11f58:	add	r4, r2, r3
   11f5c:	ldr	r5, [r2, r3]
   11f60:	ands	r3, r7, #8388608	; 0x800000
   11f64:	movne	r3, #-16777216	; 0xff000000
   11f68:	cmp	r5, #0
   11f6c:	beq	1213c <argp_parse@@Base+0xa00>
   11f70:	ldr	r0, [r4, #32]
   11f74:	ldr	r2, [r4, #24]
   11f78:	str	r0, [fp, #-60]	; 0xffffffc4
   11f7c:	ldr	r0, [r4, #28]
   11f80:	str	r2, [fp, #-68]	; 0xffffffbc
   11f84:	ldr	r2, [r4, #12]
   11f88:	str	r0, [fp, #-64]	; 0xffffffc0
   11f8c:	bic	r0, r7, #-16777216	; 0xff000000
   11f90:	str	r2, [fp, #-76]	; 0xffffffb4
   11f94:	orr	r0, r0, r3
   11f98:	ldr	r1, [fp, #-136]	; 0xffffff78
   11f9c:	sub	r2, fp, #96	; 0x60
   11fa0:	blx	r5
   11fa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11fa8:	str	r3, [r4, #32]
   11fac:	b	11f28 <argp_parse@@Base+0x7ec>
   11fb0:	cmp	r8, #0
   11fb4:	bne	1213c <argp_parse@@Base+0xa00>
   11fb8:	mov	r2, r7
   11fbc:	ldr	r3, [pc, #1172]	; 12458 <argp_parse@@Base+0xd1c>
   11fc0:	ldr	r1, [pc, #1172]	; 1245c <argp_parse@@Base+0xd20>
   11fc4:	sub	r0, fp, #96	; 0x60
   11fc8:	bl	15e98 <argp_error@@Base>
   11fcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11fd0:	mov	r2, #260	; 0x104
   11fd4:	sub	r0, fp, #96	; 0x60
   11fd8:	bl	15de8 <argp_state_help@@Base>
   11fdc:	mov	r5, #7
   11fe0:	ldr	r3, [fp, #-112]	; 0xffffff90
   11fe4:	ldr	ip, [fp, #-108]	; 0xffffff94
   11fe8:	b	11b38 <argp_parse@@Base+0x3fc>
   11fec:	ldr	r7, [fp, #-136]	; 0xffffff78
   11ff0:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ff4:	ldr	ip, [fp, #-108]	; 0xffffff94
   11ff8:	sub	r8, r5, #1
   11ffc:	cmp	r3, ip
   12000:	str	r8, [fp, #-84]	; 0xffffffac
   12004:	bcs	12130 <argp_parse@@Base+0x9f4>
   12008:	mov	lr, r8
   1200c:	add	r4, r3, #36	; 0x24
   12010:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12014:	add	r5, lr, #1
   12018:	cmp	r3, #0
   1201c:	str	r5, [fp, #-84]	; 0xffffffac
   12020:	sub	r2, fp, #96	; 0x60
   12024:	mov	r1, r7
   12028:	mov	r0, r6
   1202c:	sub	r5, r4, #36	; 0x24
   12030:	mov	r9, r4
   12034:	streq	lr, [fp, #-84]	; 0xffffffac
   12038:	beq	12124 <argp_parse@@Base+0x9e8>
   1203c:	ldr	ip, [r4, #-4]
   12040:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12044:	str	ip, [fp, #-60]	; 0xffffffc4
   12048:	ldr	ip, [r4, #-12]
   1204c:	str	ip, [fp, #-68]	; 0xffffffbc
   12050:	ldr	ip, [r4, #-8]
   12054:	str	lr, [fp, #-76]	; 0xffffffb4
   12058:	str	ip, [fp, #-64]	; 0xffffffc0
   1205c:	blx	r3
   12060:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12064:	str	r3, [r4, #-4]
   12068:	cmp	r0, #7
   1206c:	beq	120a8 <argp_parse@@Base+0x96c>
   12070:	cmp	r0, #0
   12074:	bne	11b2c <argp_parse@@Base+0x3f0>
   12078:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1207c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12080:	cmp	r8, r5
   12084:	sublt	r8, r5, r8
   12088:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   1208c:	movge	r3, #1
   12090:	addlt	r8, r3, r8
   12094:	strlt	r8, [r4, #-24]	; 0xffffffe8
   12098:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   1209c:	strge	r3, [fp, #-100]	; 0xffffff9c
   120a0:	movge	r2, r3
   120a4:	b	119a4 <argp_parse@@Base+0x268>
   120a8:	ldr	lr, [fp, #-84]	; 0xffffffac
   120ac:	ldr	r3, [r4, #-36]	; 0xffffffdc
   120b0:	sub	lr, lr, #1
   120b4:	cmp	r3, #0
   120b8:	str	lr, [fp, #-84]	; 0xffffffac
   120bc:	beq	12120 <argp_parse@@Base+0x9e4>
   120c0:	add	r0, r5, #24
   120c4:	ldr	r2, [r5, #12]
   120c8:	ldm	r0, {r0, r1, ip}
   120cc:	str	r2, [fp, #-76]	; 0xffffffb4
   120d0:	sub	r2, fp, #96	; 0x60
   120d4:	str	ip, [fp, #-60]	; 0xffffffc4
   120d8:	str	r0, [fp, #-68]	; 0xffffffbc
   120dc:	str	r1, [fp, #-64]	; 0xffffffc0
   120e0:	mov	r0, sl
   120e4:	mov	r1, r6
   120e8:	blx	r3
   120ec:	ldr	ip, [fp, #-108]	; 0xffffff94
   120f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   120f4:	cmp	r4, ip
   120f8:	movcs	r1, #0
   120fc:	movcc	r1, #1
   12100:	mov	r3, r4
   12104:	str	r2, [r5, #32]
   12108:	cmp	r0, #7
   1210c:	movne	r1, #0
   12110:	cmp	r1, #0
   12114:	beq	123fc <argp_parse@@Base+0xcc0>
   12118:	ldr	lr, [fp, #-84]	; 0xffffffac
   1211c:	b	1200c <argp_parse@@Base+0x8d0>
   12120:	ldr	ip, [fp, #-108]	; 0xffffff94
   12124:	cmp	r9, ip
   12128:	add	r4, r4, #36	; 0x24
   1212c:	bcc	12010 <argp_parse@@Base+0x8d4>
   12130:	ldr	r5, [fp, #-84]	; 0xffffffac
   12134:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12138:	b	119c4 <argp_parse@@Base+0x288>
   1213c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12140:	ldr	r2, [r3, #12]
   12144:	cmp	r2, r7
   12148:	bne	12160 <argp_parse@@Base+0xa24>
   1214c:	b	12294 <argp_parse@@Base+0xb58>
   12150:	add	r3, r3, #16
   12154:	ldr	r2, [r3, #12]
   12158:	cmp	r2, r7
   1215c:	beq	12294 <argp_parse@@Base+0xb58>
   12160:	ldr	r2, [r3]
   12164:	cmp	r2, #0
   12168:	bne	12150 <argp_parse@@Base+0xa14>
   1216c:	ldr	r2, [pc, #748]	; 12460 <argp_parse@@Base+0xd24>
   12170:	ldr	r3, [pc, #736]	; 12458 <argp_parse@@Base+0xd1c>
   12174:	ldr	r1, [pc, #744]	; 12464 <argp_parse@@Base+0xd28>
   12178:	sub	r0, fp, #96	; 0x60
   1217c:	bl	15e98 <argp_error@@Base>
   12180:	b	11fcc <argp_parse@@Base+0x890>
   12184:	sub	lr, fp, #148	; 0x94
   12188:	stm	sp, {ip, lr}
   1218c:	bl	12654 <argp_parse@@Base+0xf18>
   12190:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12194:	str	r5, [fp, #-84]	; 0xffffffac
   12198:	mov	r7, r0
   1219c:	cmn	r7, #1
   121a0:	bne	11e88 <argp_parse@@Base+0x74c>
   121a4:	cmp	r5, #1
   121a8:	str	r6, [fp, #-100]	; 0xffffff9c
   121ac:	ble	121cc <argp_parse@@Base+0xa90>
   121b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   121b4:	sub	r3, r5, #-1073741823	; 0xc0000001
   121b8:	ldr	r1, [pc, #680]	; 12468 <argp_parse@@Base+0xd2c>
   121bc:	ldr	r0, [r2, r3, lsl #2]
   121c0:	bl	10d60 <strcmp@plt>
   121c4:	cmp	r0, #0
   121c8:	streq	r5, [fp, #-72]	; 0xffffffb8
   121cc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   121d0:	cmp	r5, r0
   121d4:	bge	119c4 <argp_parse@@Base+0x288>
   121d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   121dc:	tst	r3, #4
   121e0:	beq	122b8 <argp_parse@@Base+0xb7c>
   121e4:	ldr	r3, [fp, #4]
   121e8:	cmp	r3, #0
   121ec:	beq	12390 <argp_parse@@Base+0xc54>
   121f0:	str	r5, [r3]
   121f4:	ldr	ip, [fp, #-108]	; 0xffffff94
   121f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   121fc:	sub	r2, ip, #36	; 0x24
   12200:	cmp	r3, r2
   12204:	bhi	122ec <argp_parse@@Base+0xbb0>
   12208:	ldr	r6, [pc, #604]	; 1246c <argp_parse@@Base+0xd30>
   1220c:	sub	r4, ip, #72	; 0x48
   12210:	mov	r7, #0
   12214:	ldr	r5, [r4, #36]	; 0x24
   12218:	sub	r2, fp, #96	; 0x60
   1221c:	cmp	r5, #0
   12220:	mov	r1, r7
   12224:	mov	r0, r6
   12228:	beq	12284 <argp_parse@@Base+0xb48>
   1222c:	ldr	r3, [r4, #68]	; 0x44
   12230:	ldr	ip, [r4, #48]	; 0x30
   12234:	str	r3, [fp, #-60]	; 0xffffffc4
   12238:	ldr	r3, [r4, #60]	; 0x3c
   1223c:	str	r3, [fp, #-68]	; 0xffffffbc
   12240:	ldr	r3, [r4, #64]	; 0x40
   12244:	str	ip, [fp, #-76]	; 0xffffffb4
   12248:	str	r3, [fp, #-64]	; 0xffffffc0
   1224c:	blx	r5
   12250:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12254:	str	r3, [r4, #68]	; 0x44
   12258:	ldr	r3, [fp, #-112]	; 0xffffff90
   1225c:	cmp	r4, r3
   12260:	bcc	122cc <argp_parse@@Base+0xb90>
   12264:	cmp	r0, #7
   12268:	cmpne	r0, #0
   1226c:	sub	r4, r4, #36	; 0x24
   12270:	beq	12214 <argp_parse@@Base+0xad8>
   12274:	ldr	ip, [fp, #-108]	; 0xffffff94
   12278:	mov	r5, r0
   1227c:	sub	ip, ip, #36	; 0x24
   12280:	b	11bac <argp_parse@@Base+0x470>
   12284:	cmp	r4, r3
   12288:	bcc	122d8 <argp_parse@@Base+0xb9c>
   1228c:	sub	r4, r4, #36	; 0x24
   12290:	b	12214 <argp_parse@@Base+0xad8>
   12294:	ldr	r2, [r3]
   12298:	ldr	r3, [pc, #448]	; 12460 <argp_parse@@Base+0xd24>
   1229c:	cmp	r2, #0
   122a0:	moveq	r2, r3
   122a4:	b	12170 <argp_parse@@Base+0xa34>
   122a8:	ldr	r3, [fp, #-140]	; 0xffffff74
   122ac:	cmn	r3, #1
   122b0:	bne	11fcc <argp_parse@@Base+0x890>
   122b4:	b	11ea0 <argp_parse@@Base+0x764>
   122b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   122bc:	ldr	r7, [r3, r5, lsl #2]
   122c0:	add	r5, r5, #1
   122c4:	str	r7, [fp, #-136]	; 0xffffff78
   122c8:	b	11ff0 <argp_parse@@Base+0x8b4>
   122cc:	cmp	r0, #7
   122d0:	mov	r5, r0
   122d4:	bne	122f4 <argp_parse@@Base+0xbb8>
   122d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   122dc:	sub	ip, ip, #36	; 0x24
   122e0:	cmp	ip, r3
   122e4:	movcs	r5, #0
   122e8:	bcs	11bb4 <argp_parse@@Base+0x478>
   122ec:	mov	r5, #0
   122f0:	b	11c20 <argp_parse@@Base+0x4e4>
   122f4:	ldr	ip, [fp, #-108]	; 0xffffff94
   122f8:	sub	ip, ip, #36	; 0x24
   122fc:	b	11bac <argp_parse@@Base+0x470>
   12300:	ldr	r0, [r2]
   12304:	cmp	r0, #0
   12308:	beq	11984 <argp_parse@@Base+0x248>
   1230c:	bl	12528 <argp_parse@@Base+0xdec>
   12310:	str	r0, [fp, #-56]	; 0xffffffc8
   12314:	b	11990 <argp_parse@@Base+0x254>
   12318:	ldr	r3, [pc, #336]	; 12470 <argp_parse@@Base+0xd34>
   1231c:	ldr	r3, [r3]
   12320:	cmp	r3, #0
   12324:	addeq	r3, r4, #16
   12328:	bne	11d90 <argp_parse@@Base+0x654>
   1232c:	b	11d9c <argp_parse@@Base+0x660>
   12330:	mov	r5, r0
   12334:	ldr	r2, [fp, #4]
   12338:	cmp	r2, #0
   1233c:	bne	11b10 <argp_parse@@Base+0x3d4>
   12340:	cmp	r5, #7
   12344:	bne	11b34 <argp_parse@@Base+0x3f8>
   12348:	b	11fcc <argp_parse@@Base+0x890>
   1234c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12350:	sub	ip, ip, #36	; 0x24
   12354:	cmp	r3, ip
   12358:	mov	r5, r0
   1235c:	bls	12334 <argp_parse@@Base+0xbf8>
   12360:	ldr	r2, [fp, #4]
   12364:	cmp	r2, #0
   12368:	bne	11b10 <argp_parse@@Base+0x3d4>
   1236c:	b	11b1c <argp_parse@@Base+0x3e0>
   12370:	ldr	r3, [fp, #-112]	; 0xffffff90
   12374:	sub	r4, ip, #36	; 0x24
   12378:	cmp	r4, r3
   1237c:	mov	r5, r0
   12380:	bcs	11a7c <argp_parse@@Base+0x340>
   12384:	cmp	r5, #7
   12388:	beq	11b00 <argp_parse@@Base+0x3c4>
   1238c:	b	12360 <argp_parse@@Base+0xc24>
   12390:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12394:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12398:	tst	r3, #2
   1239c:	bne	11fd0 <argp_parse@@Base+0x894>
   123a0:	cmp	r1, #0
   123a4:	beq	11fd0 <argp_parse@@Base+0x894>
   123a8:	mov	r0, r1
   123ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   123b0:	ldr	r1, [pc, #188]	; 12474 <argp_parse@@Base+0xd38>
   123b4:	bl	10ebc <fprintf@plt>
   123b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   123bc:	b	11fd0 <argp_parse@@Base+0x894>
   123c0:	mov	r5, r0
   123c4:	b	12384 <argp_parse@@Base+0xc48>
   123c8:	sub	r4, ip, #36	; 0x24
   123cc:	cmp	r3, r4
   123d0:	bls	11a88 <argp_parse@@Base+0x34c>
   123d4:	ldr	r2, [fp, #4]
   123d8:	cmp	r2, #0
   123dc:	bne	11b0c <argp_parse@@Base+0x3d0>
   123e0:	b	121fc <argp_parse@@Base+0xac0>
   123e4:	cmp	r0, #7
   123e8:	mov	r5, r0
   123ec:	beq	1195c <argp_parse@@Base+0x220>
   123f0:	cmp	r0, #0
   123f4:	beq	1195c <argp_parse@@Base+0x220>
   123f8:	b	11c28 <argp_parse@@Base+0x4ec>
   123fc:	cmp	r0, #0
   12400:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   12404:	moveq	r5, r0
   12408:	streq	r0, [fp, #-84]	; 0xffffffac
   1240c:	beq	12080 <argp_parse@@Base+0x944>
   12410:	cmp	r0, #7
   12414:	mov	r5, r0
   12418:	beq	12130 <argp_parse@@Base+0x9f4>
   1241c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12420:	b	11b38 <argp_parse@@Base+0x3fc>
   12424:	andeq	r9, r2, r4, asr #2
   12428:	andeq	r9, r2, r0, asr #2
   1242c:	andeq	r9, r2, r8, asr #2
   12430:	andeq	r9, r2, ip, asr #2
   12434:	tsteq	r0, r6
   12438:	tsteq	r0, r2
   1243c:	tsteq	r0, r1
   12440:	tsteq	r0, r5
   12444:	tsteq	r0, r7
   12448:	tsteq	r0, r3
   1244c:	muleq	r2, r0, r1
   12450:	andeq	r8, r1, r8, lsl r0
   12454:	andeq	r8, r1, r4, lsr r0
   12458:	andeq	r8, r1, r0, asr r0
   1245c:	andeq	r8, r1, r4, ror #2
   12460:	andeq	r8, r1, ip, asr r1
   12464:	andeq	r8, r1, ip, ror #2
   12468:	andeq	r8, r1, r0, ror #2
   1246c:	tsteq	r0, r4
   12470:	andeq	r9, r2, r8, asr r1
   12474:	andeq	r8, r1, r8, ror r1
   12478:	cmp	r1, #0
   1247c:	beq	124bc <argp_parse@@Base+0xd80>
   12480:	ldr	r2, [r1, #52]	; 0x34
   12484:	ldr	r3, [r2, #48]	; 0x30
   12488:	ldr	r1, [r2, #52]	; 0x34
   1248c:	cmp	r3, r1
   12490:	bcs	124bc <argp_parse@@Base+0xd80>
   12494:	ldr	r2, [r3, #4]
   12498:	cmp	r0, r2
   1249c:	bne	124b0 <argp_parse@@Base+0xd74>
   124a0:	b	124c4 <argp_parse@@Base+0xd88>
   124a4:	ldr	r2, [r3, #4]
   124a8:	cmp	r2, r0
   124ac:	beq	124c4 <argp_parse@@Base+0xd88>
   124b0:	add	r3, r3, #36	; 0x24
   124b4:	cmp	r3, r1
   124b8:	bcc	124a4 <argp_parse@@Base+0xd68>
   124bc:	mov	r0, #0
   124c0:	bx	lr
   124c4:	ldr	r0, [r3, #24]
   124c8:	bx	lr
   124cc:	ldr	ip, [pc, #32]	; 124f4 <argp_parse@@Base+0xdb8>
   124d0:	push	{lr}		; (str lr, [sp, #-4]!)
   124d4:	sub	sp, sp, #12
   124d8:	ldm	ip, {r1, ip}
   124dc:	ldr	r3, [pc, #20]	; 124f8 <argp_parse@@Base+0xdbc>
   124e0:	ldr	r2, [pc, #20]	; 124fc <argp_parse@@Base+0xdc0>
   124e4:	str	ip, [sp]
   124e8:	bl	12a38 <argp_parse@@Base+0x12fc>
   124ec:	add	sp, sp, #12
   124f0:	pop	{pc}		; (ldr pc, [sp], #4)
   124f4:	andeq	r9, r2, ip, asr r1
   124f8:	andeq	r8, r1, r0, ror #4
   124fc:	andeq	r8, r1, r0, ror r2
   12500:	ldr	r3, [pc, #20]	; 1251c <argp_parse@@Base+0xde0>
   12504:	ldr	r2, [pc, #20]	; 12520 <argp_parse@@Base+0xde4>
   12508:	ldr	ip, [pc, #20]	; 12524 <argp_parse@@Base+0xde8>
   1250c:	str	r0, [r3]
   12510:	str	ip, [r2]
   12514:	str	r1, [r3, #4]
   12518:	bx	lr
   1251c:	andeq	r9, r2, ip, asr r1
   12520:	andeq	r9, r2, r8, asr r1
   12524:	andeq	r2, r1, ip, asr #9
   12528:	ldrb	r3, [r0]
   1252c:	cmp	r3, #47	; 0x2f
   12530:	bne	12540 <argp_parse@@Base+0xe04>
   12534:	ldrb	r3, [r0, #1]!
   12538:	cmp	r3, #47	; 0x2f
   1253c:	beq	12534 <argp_parse@@Base+0xdf8>
   12540:	cmp	r3, #0
   12544:	bxeq	lr
   12548:	mov	r2, #0
   1254c:	push	{lr}		; (str lr, [sp, #-4]!)
   12550:	mov	ip, r2
   12554:	mov	r1, r0
   12558:	mov	lr, #1
   1255c:	cmp	r3, #47	; 0x2f
   12560:	moveq	r2, lr
   12564:	beq	12574 <argp_parse@@Base+0xe38>
   12568:	cmp	r2, #0
   1256c:	movne	r0, r1
   12570:	movne	r2, ip
   12574:	ldrb	r3, [r1, #1]!
   12578:	cmp	r3, #0
   1257c:	bne	1255c <argp_parse@@Base+0xe20>
   12580:	pop	{pc}		; (ldr pc, [sp], #4)
   12584:	push	{r4, lr}
   12588:	mov	r4, r0
   1258c:	bl	10ea4 <strlen@plt>
   12590:	cmp	r0, #1
   12594:	popls	{r4, pc}
   12598:	sub	r3, r0, #1
   1259c:	add	r2, r4, r3
   125a0:	ldrb	r1, [r4, r3]
   125a4:	cmp	r1, #47	; 0x2f
   125a8:	popne	{r4, pc}
   125ac:	cmp	r3, #1
   125b0:	beq	125c4 <argp_parse@@Base+0xe88>
   125b4:	ldrb	r1, [r2, #-1]!
   125b8:	sub	r0, r3, #1
   125bc:	cmp	r1, #47	; 0x2f
   125c0:	beq	125cc <argp_parse@@Base+0xe90>
   125c4:	mov	r0, r3
   125c8:	pop	{r4, pc}
   125cc:	mov	r3, r0
   125d0:	b	125ac <argp_parse@@Base+0xe70>
   125d4:	push	{r4, r5, lr}
   125d8:	sub	sp, sp, #12
   125dc:	mov	r5, r0
   125e0:	bl	10ec8 <__errno_location@plt>
   125e4:	mov	r2, #0
   125e8:	mov	r4, r0
   125ec:	ldr	r3, [r0]
   125f0:	str	r2, [r4]
   125f4:	mov	r0, r5
   125f8:	str	r3, [sp]
   125fc:	str	r3, [sp, #4]
   12600:	bl	10d9c <free@plt>
   12604:	ldr	r3, [r4]
   12608:	add	r2, sp, #8
   1260c:	cmp	r3, #0
   12610:	moveq	r3, #4
   12614:	movne	r3, #0
   12618:	add	r3, r2, r3
   1261c:	ldr	r3, [r3, #-8]
   12620:	str	r3, [r4]
   12624:	add	sp, sp, #12
   12628:	pop	{r4, r5, pc}
   1262c:	push	{lr}		; (str lr, [sp, #-4]!)
   12630:	sub	sp, sp, #20
   12634:	mov	ip, #0
   12638:	ldr	lr, [sp, #24]
   1263c:	str	ip, [sp, #8]
   12640:	str	lr, [sp]
   12644:	str	ip, [sp, #4]
   12648:	bl	16b3c <argp_error@@Base+0xca4>
   1264c:	add	sp, sp, #20
   12650:	pop	{pc}		; (ldr pc, [sp], #4)
   12654:	push	{r4, lr}
   12658:	sub	sp, sp, #16
   1265c:	mov	ip, #0
   12660:	ldr	r4, [sp, #24]
   12664:	ldr	lr, [sp, #28]
   12668:	str	r4, [sp]
   1266c:	str	lr, [sp, #8]
   12670:	str	ip, [sp, #12]
   12674:	str	ip, [sp, #4]
   12678:	bl	165dc <argp_error@@Base+0x744>
   1267c:	add	sp, sp, #16
   12680:	pop	{r4, pc}
   12684:	push	{r4, lr}
   12688:	sub	sp, sp, #16
   1268c:	mov	lr, #0
   12690:	ldr	r4, [sp, #24]
   12694:	mov	ip, #1
   12698:	stm	sp, {r4, ip, lr}
   1269c:	bl	16b3c <argp_error@@Base+0xca4>
   126a0:	add	sp, sp, #16
   126a4:	pop	{r4, pc}
   126a8:	push	{r4, r5, lr}
   126ac:	sub	sp, sp, #20
   126b0:	mov	lr, #0
   126b4:	ldr	r5, [sp, #32]
   126b8:	ldr	r4, [sp, #36]	; 0x24
   126bc:	mov	ip, #1
   126c0:	str	r5, [sp]
   126c4:	str	r4, [sp, #8]
   126c8:	str	lr, [sp, #12]
   126cc:	str	ip, [sp, #4]
   126d0:	bl	165dc <argp_error@@Base+0x744>
   126d4:	add	sp, sp, #20
   126d8:	pop	{r4, r5, pc}
   126dc:	push	{r4, r5, r6, lr}
   126e0:	subs	r4, r0, #0
   126e4:	beq	12758 <argp_parse@@Base+0x101c>
   126e8:	mov	r1, #47	; 0x2f
   126ec:	bl	10f04 <strrchr@plt>
   126f0:	subs	r5, r0, #0
   126f4:	beq	12744 <argp_parse@@Base+0x1008>
   126f8:	add	r6, r5, #1
   126fc:	sub	r3, r6, r4
   12700:	cmp	r3, #6
   12704:	ble	12744 <argp_parse@@Base+0x1008>
   12708:	mov	r2, #7
   1270c:	ldr	r1, [pc, #96]	; 12774 <argp_parse@@Base+0x1038>
   12710:	sub	r0, r5, #6
   12714:	bl	10f64 <strncmp@plt>
   12718:	cmp	r0, #0
   1271c:	bne	12744 <argp_parse@@Base+0x1008>
   12720:	mov	r2, #3
   12724:	ldr	r1, [pc, #76]	; 12778 <argp_parse@@Base+0x103c>
   12728:	mov	r0, r6
   1272c:	bl	10f64 <strncmp@plt>
   12730:	cmp	r0, #0
   12734:	movne	r4, r6
   12738:	ldreq	r3, [pc, #60]	; 1277c <argp_parse@@Base+0x1040>
   1273c:	addeq	r4, r5, #4
   12740:	streq	r4, [r3]
   12744:	ldr	r2, [pc, #52]	; 12780 <argp_parse@@Base+0x1044>
   12748:	ldr	r3, [pc, #52]	; 12784 <argp_parse@@Base+0x1048>
   1274c:	str	r4, [r2]
   12750:	str	r4, [r3]
   12754:	pop	{r4, r5, r6, pc}
   12758:	ldr	r3, [pc, #40]	; 12788 <argp_parse@@Base+0x104c>
   1275c:	mov	r2, #55	; 0x37
   12760:	mov	r1, #1
   12764:	ldr	r3, [r3]
   12768:	ldr	r0, [pc, #28]	; 1278c <argp_parse@@Base+0x1050>
   1276c:	bl	10e08 <fwrite@plt>
   12770:	bl	10f70 <abort@plt>
   12774:			; <UNDEFINED> instruction: 0x000182b8
   12778:	andeq	r8, r1, r0, asr #5
   1277c:	andeq	r9, r2, r0, asr #2
   12780:	andeq	r9, r2, r4, ror #2
   12784:	andeq	r9, r2, r4, asr #2
   12788:	andeq	r9, r2, r8, asr #2
   1278c:	andeq	r8, r1, r0, lsl #5
   12790:	push	{r4, r5, r6, r7, lr}
   12794:	sub	sp, sp, #36	; 0x24
   12798:	cmp	r1, #0
   1279c:	mov	r4, r0
   127a0:	ldr	r5, [sp, #56]	; 0x38
   127a4:	ldr	r6, [sp, #60]	; 0x3c
   127a8:	beq	129e8 <argp_parse@@Base+0x12ac>
   127ac:	str	r3, [sp]
   127b0:	mov	r3, r2
   127b4:	mov	r2, r1
   127b8:	ldr	r1, [pc, #564]	; 129f4 <argp_parse@@Base+0x12b8>
   127bc:	bl	10ebc <fprintf@plt>
   127c0:	ldr	r3, [pc, #560]	; 129f8 <argp_parse@@Base+0x12bc>
   127c4:	ldr	r2, [pc, #560]	; 129fc <argp_parse@@Base+0x12c0>
   127c8:	ldr	r1, [pc, #560]	; 12a00 <argp_parse@@Base+0x12c4>
   127cc:	mov	r0, r4
   127d0:	bl	10ebc <fprintf@plt>
   127d4:	mov	r1, r4
   127d8:	mov	r0, #10
   127dc:	bl	10f1c <fputc@plt>
   127e0:	ldr	r1, [pc, #540]	; 12a04 <argp_parse@@Base+0x12c8>
   127e4:	ldr	r2, [pc, #540]	; 12a08 <argp_parse@@Base+0x12cc>
   127e8:	mov	r0, r4
   127ec:	bl	10ebc <fprintf@plt>
   127f0:	mov	r1, r4
   127f4:	mov	r0, #10
   127f8:	bl	10f1c <fputc@plt>
   127fc:	cmp	r6, #9
   12800:	ldrls	pc, [pc, r6, lsl #2]
   12804:	b	12830 <argp_parse@@Base+0x10f4>
   12808:	andeq	r2, r1, r0, ror r8
   1280c:			; <UNDEFINED> instruction: 0x000128bc
   12810:	ldrdeq	r2, [r1], -r4
   12814:	andeq	r2, r1, ip, ror #17
   12818:	andeq	r2, r1, ip, lsl #18
   1281c:	andeq	r2, r1, r4, lsr r9
   12820:	andeq	r2, r1, r4, asr r9
   12824:	andeq	r2, r1, ip, ror r9
   12828:	andeq	r2, r1, ip, lsr #19
   1282c:	andeq	r2, r1, r8, ror r8
   12830:	ldr	ip, [r5, #32]
   12834:	ldr	r1, [r5, #28]
   12838:	ldm	r5, {r2, r3}
   1283c:	ldr	r7, [r5, #24]
   12840:	ldr	r6, [r5, #20]
   12844:	str	ip, [sp, #24]
   12848:	ldr	lr, [r5, #16]
   1284c:	str	r1, [sp, #20]
   12850:	ldr	r1, [r5, #8]
   12854:	ldr	ip, [r5, #12]
   12858:	mov	r0, r4
   1285c:	str	r7, [sp, #16]
   12860:	stm	sp, {r1, ip, lr}
   12864:	str	r6, [sp, #12]
   12868:	ldr	r1, [pc, #412]	; 12a0c <argp_parse@@Base+0x12d0>
   1286c:	bl	10ebc <fprintf@plt>
   12870:	add	sp, sp, #36	; 0x24
   12874:	pop	{r4, r5, r6, r7, pc}
   12878:	ldr	ip, [r5, #32]
   1287c:	ldr	r1, [r5, #28]
   12880:	ldm	r5, {r2, r3}
   12884:	ldr	r7, [r5, #24]
   12888:	ldr	r6, [r5, #20]
   1288c:	str	ip, [sp, #24]
   12890:	ldr	lr, [r5, #16]
   12894:	str	r1, [sp, #20]
   12898:	ldr	r1, [r5, #8]
   1289c:	ldr	ip, [r5, #12]
   128a0:	mov	r0, r4
   128a4:	str	r7, [sp, #16]
   128a8:	stm	sp, {r1, ip, lr}
   128ac:	str	r6, [sp, #12]
   128b0:	ldr	r1, [pc, #344]	; 12a10 <argp_parse@@Base+0x12d4>
   128b4:	bl	10ebc <fprintf@plt>
   128b8:	b	12870 <argp_parse@@Base+0x1134>
   128bc:	ldr	r2, [r5]
   128c0:	mov	r0, r4
   128c4:	ldr	r1, [pc, #328]	; 12a14 <argp_parse@@Base+0x12d8>
   128c8:	add	sp, sp, #36	; 0x24
   128cc:	pop	{r4, r5, r6, r7, lr}
   128d0:	b	10ebc <fprintf@plt>
   128d4:	mov	r0, r4
   128d8:	ldm	r5, {r2, r3}
   128dc:	ldr	r1, [pc, #308]	; 12a18 <argp_parse@@Base+0x12dc>
   128e0:	add	sp, sp, #36	; 0x24
   128e4:	pop	{r4, r5, r6, r7, lr}
   128e8:	b	10ebc <fprintf@plt>
   128ec:	ldr	r1, [r5, #8]
   128f0:	ldm	r5, {r2, r3}
   128f4:	mov	r0, r4
   128f8:	str	r1, [sp, #56]	; 0x38
   128fc:	ldr	r1, [pc, #280]	; 12a1c <argp_parse@@Base+0x12e0>
   12900:	add	sp, sp, #36	; 0x24
   12904:	pop	{r4, r5, r6, r7, lr}
   12908:	b	10ebc <fprintf@plt>
   1290c:	ldr	r1, [r5, #8]
   12910:	ldr	ip, [r5, #12]
   12914:	ldm	r5, {r2, r3}
   12918:	mov	r0, r4
   1291c:	str	r1, [sp, #56]	; 0x38
   12920:	str	ip, [sp, #60]	; 0x3c
   12924:	ldr	r1, [pc, #244]	; 12a20 <argp_parse@@Base+0x12e4>
   12928:	add	sp, sp, #36	; 0x24
   1292c:	pop	{r4, r5, r6, r7, lr}
   12930:	b	10ebc <fprintf@plt>
   12934:	add	r1, r5, #8
   12938:	ldm	r5, {r2, r3}
   1293c:	ldm	r1, {r1, ip, lr}
   12940:	mov	r0, r4
   12944:	stm	sp, {r1, ip, lr}
   12948:	ldr	r1, [pc, #212]	; 12a24 <argp_parse@@Base+0x12e8>
   1294c:	bl	10ebc <fprintf@plt>
   12950:	b	12870 <argp_parse@@Base+0x1134>
   12954:	add	r1, r5, #8
   12958:	ldr	r6, [r5, #20]
   1295c:	ldm	r1, {r1, ip, lr}
   12960:	mov	r0, r4
   12964:	ldm	r5, {r2, r3}
   12968:	str	r6, [sp, #12]
   1296c:	stm	sp, {r1, ip, lr}
   12970:	ldr	r1, [pc, #176]	; 12a28 <argp_parse@@Base+0x12ec>
   12974:	bl	10ebc <fprintf@plt>
   12978:	b	12870 <argp_parse@@Base+0x1134>
   1297c:	add	r1, r5, #8
   12980:	ldr	r7, [r5, #24]
   12984:	ldm	r1, {r1, ip, lr}
   12988:	mov	r0, r4
   1298c:	ldr	r6, [r5, #20]
   12990:	ldm	r5, {r2, r3}
   12994:	stm	sp, {r1, ip, lr}
   12998:	str	r7, [sp, #16]
   1299c:	str	r6, [sp, #12]
   129a0:	ldr	r1, [pc, #132]	; 12a2c <argp_parse@@Base+0x12f0>
   129a4:	bl	10ebc <fprintf@plt>
   129a8:	b	12870 <argp_parse@@Base+0x1134>
   129ac:	ldr	r1, [r5, #28]
   129b0:	ldm	r5, {r2, r3}
   129b4:	ldr	r7, [r5, #24]
   129b8:	ldr	r6, [r5, #20]
   129bc:	ldr	lr, [r5, #16]
   129c0:	str	r1, [sp, #20]
   129c4:	ldr	r1, [r5, #8]
   129c8:	ldr	ip, [r5, #12]
   129cc:	mov	r0, r4
   129d0:	str	r7, [sp, #16]
   129d4:	stm	sp, {r1, ip, lr}
   129d8:	str	r6, [sp, #12]
   129dc:	ldr	r1, [pc, #76]	; 12a30 <argp_parse@@Base+0x12f4>
   129e0:	bl	10ebc <fprintf@plt>
   129e4:	b	12870 <argp_parse@@Base+0x1134>
   129e8:	ldr	r1, [pc, #68]	; 12a34 <argp_parse@@Base+0x12f8>
   129ec:	bl	10ebc <fprintf@plt>
   129f0:	b	127c0 <argp_parse@@Base+0x1084>
   129f4:	andeq	r8, r1, r4, asr #5
   129f8:	andeq	r0, r0, r6, ror #15
   129fc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12a00:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12a04:	andeq	r8, r1, r0, lsl #6
   12a08:	ldrdeq	r8, [r1], -ip
   12a0c:	andeq	r8, r1, ip, ror #9
   12a10:			; <UNDEFINED> instruction: 0x000184b8
   12a14:	andeq	r8, r1, ip, lsr #7
   12a18:			; <UNDEFINED> instruction: 0x000183bc
   12a1c:	ldrdeq	r8, [r1], -r4
   12a20:	strdeq	r8, [r1], -r0
   12a24:	andeq	r8, r1, r0, lsl r4
   12a28:	andeq	r8, r1, r4, lsr r4
   12a2c:	andeq	r8, r1, ip, asr r4
   12a30:	andeq	r8, r1, r8, lsl #9
   12a34:	ldrdeq	r8, [r1], -r0
   12a38:	push	{r4, r5, lr}
   12a3c:	sub	sp, sp, #12
   12a40:	ldr	r5, [sp, #24]
   12a44:	ldr	ip, [r5]
   12a48:	cmp	ip, #0
   12a4c:	beq	12a68 <argp_parse@@Base+0x132c>
   12a50:	mov	lr, r5
   12a54:	mov	ip, #0
   12a58:	ldr	r4, [lr, #4]!
   12a5c:	add	ip, ip, #1
   12a60:	cmp	r4, #0
   12a64:	bne	12a58 <argp_parse@@Base+0x131c>
   12a68:	stm	sp, {r5, ip}
   12a6c:	bl	12790 <argp_parse@@Base+0x1054>
   12a70:	add	sp, sp, #12
   12a74:	pop	{r4, r5, pc}
   12a78:	push	{r4, r5, lr}
   12a7c:	sub	sp, sp, #52	; 0x34
   12a80:	add	r5, sp, #4
   12a84:	ldr	r4, [sp, #64]	; 0x40
   12a88:	mov	ip, #0
   12a8c:	sub	r4, r4, #4
   12a90:	ldr	lr, [r4, #4]!
   12a94:	cmp	lr, #0
   12a98:	str	lr, [r5, #4]!
   12a9c:	beq	12aac <argp_parse@@Base+0x1370>
   12aa0:	add	ip, ip, #1
   12aa4:	cmp	ip, #10
   12aa8:	bne	12a90 <argp_parse@@Base+0x1354>
   12aac:	add	lr, sp, #8
   12ab0:	str	ip, [sp, #4]
   12ab4:	str	lr, [sp]
   12ab8:	bl	12790 <argp_parse@@Base+0x1054>
   12abc:	add	sp, sp, #52	; 0x34
   12ac0:	pop	{r4, r5, pc}
   12ac4:	push	{r3}		; (str r3, [sp, #-4]!)
   12ac8:	push	{r4, lr}
   12acc:	sub	sp, sp, #60	; 0x3c
   12ad0:	add	lr, sp, #56	; 0x38
   12ad4:	add	r3, sp, #72	; 0x48
   12ad8:	str	r3, [lr, #-44]!	; 0xffffffd4
   12adc:	add	r4, sp, #68	; 0x44
   12ae0:	mov	r3, #0
   12ae4:	ldr	ip, [r4, #4]!
   12ae8:	cmp	ip, #0
   12aec:	str	ip, [lr, #4]!
   12af0:	beq	12b00 <argp_parse@@Base+0x13c4>
   12af4:	add	r3, r3, #1
   12af8:	cmp	r3, #10
   12afc:	bne	12ae4 <argp_parse@@Base+0x13a8>
   12b00:	add	ip, sp, #16
   12b04:	str	r3, [sp, #4]
   12b08:	str	ip, [sp]
   12b0c:	ldr	r3, [sp, #68]	; 0x44
   12b10:	bl	12790 <argp_parse@@Base+0x1054>
   12b14:	add	sp, sp, #60	; 0x3c
   12b18:	pop	{r4, lr}
   12b1c:	add	sp, sp, #4
   12b20:	bx	lr
   12b24:	ldr	r3, [pc, #56]	; 12b64 <argp_parse@@Base+0x1428>
   12b28:	push	{r4, lr}
   12b2c:	mov	r0, #10
   12b30:	ldr	r1, [r3]
   12b34:	bl	10f1c <fputc@plt>
   12b38:	ldr	r1, [pc, #40]	; 12b68 <argp_parse@@Base+0x142c>
   12b3c:	ldr	r0, [pc, #40]	; 12b6c <argp_parse@@Base+0x1430>
   12b40:	bl	10d78 <printf@plt>
   12b44:	ldr	r1, [pc, #36]	; 12b70 <argp_parse@@Base+0x1434>
   12b48:	ldr	r2, [pc, #36]	; 12b74 <argp_parse@@Base+0x1438>
   12b4c:	ldr	r0, [pc, #36]	; 12b78 <argp_parse@@Base+0x143c>
   12b50:	bl	10d78 <printf@plt>
   12b54:	ldr	r1, [pc, #32]	; 12b7c <argp_parse@@Base+0x1440>
   12b58:	ldr	r0, [pc, #32]	; 12b80 <argp_parse@@Base+0x1444>
   12b5c:	pop	{r4, lr}
   12b60:	b	10d78 <printf@plt>
   12b64:	andeq	r9, r2, ip, asr #2
   12b68:	andeq	r8, r1, r8, lsr #10
   12b6c:	andeq	r8, r1, r0, asr #10
   12b70:	andeq	r8, r1, r0, ror r2
   12b74:	andeq	r8, r1, r4, asr r5
   12b78:	andeq	r8, r1, ip, ror r5
   12b7c:	muleq	r1, r0, r5
   12b80:			; <UNDEFINED> instruction: 0x000185b0
   12b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b88:	sub	sp, sp, #116	; 0x74
   12b8c:	mov	r4, #100	; 0x64
   12b90:	str	r4, [sp, #8]
   12b94:	bl	10ec8 <__errno_location@plt>
   12b98:	mov	r7, #0
   12b9c:	mov	r5, r7
   12ba0:	add	fp, sp, #12
   12ba4:	mov	r8, #1
   12ba8:	mvn	sl, #0
   12bac:	mov	r6, r0
   12bb0:	b	12bc8 <argp_parse@@Base+0x148c>
   12bb4:	str	r8, [sp]
   12bb8:	bl	16d5c <argp_error@@Base+0xec4>
   12bbc:	ldr	r4, [sp, #8]
   12bc0:	mov	fp, r0
   12bc4:	mov	r7, r0
   12bc8:	sub	r4, r4, #1
   12bcc:	mov	r1, r4
   12bd0:	strb	r5, [fp, r4]
   12bd4:	mov	r0, fp
   12bd8:	str	r5, [r6]
   12bdc:	bl	10e20 <gethostname@plt>
   12be0:	subs	r9, r0, #0
   12be4:	mov	r0, fp
   12be8:	bne	12c00 <argp_parse@@Base+0x14c4>
   12bec:	bl	10ea4 <strlen@plt>
   12bf0:	add	r0, r0, #1
   12bf4:	cmp	r4, r0
   12bf8:	bgt	12c50 <argp_parse@@Base+0x1514>
   12bfc:	str	r9, [r6]
   12c00:	mov	r0, r7
   12c04:	bl	125d4 <argp_parse@@Base+0xe98>
   12c08:	ldr	ip, [r6]
   12c0c:	mov	r3, r8
   12c10:	cmp	ip, #22
   12c14:	mov	r2, #1
   12c18:	ldrls	r3, [pc, #76]	; 12c6c <argp_parse@@Base+0x1530>
   12c1c:	add	r1, sp, #8
   12c20:	mov	r0, r5
   12c24:	mvnls	r3, r3, lsr ip
   12c28:	cmp	ip, #36	; 0x24
   12c2c:	moveq	ip, #0
   12c30:	andne	ip, r3, #1
   12c34:	cmp	ip, #0
   12c38:	mov	r3, sl
   12c3c:	beq	12bb4 <argp_parse@@Base+0x1478>
   12c40:	mov	r7, #0
   12c44:	mov	r0, r7
   12c48:	add	sp, sp, #116	; 0x74
   12c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c50:	cmp	r7, #0
   12c54:	bne	12c44 <argp_parse@@Base+0x1508>
   12c58:	mov	r1, r0
   12c5c:	mov	r0, fp
   12c60:	bl	1708c <argp_error@@Base+0x11f4>
   12c64:	mov	r7, r0
   12c68:	b	12c44 <argp_parse@@Base+0x1508>
   12c6c:	subeq	r1, r0, r1
   12c70:	cmp	r0, #0
   12c74:	moveq	r0, #1
   12c78:	cmp	r0, #0
   12c7c:	blt	12c84 <argp_parse@@Base+0x1548>
   12c80:	b	10e44 <malloc@plt>
   12c84:	push	{r4, lr}
   12c88:	bl	10ec8 <__errno_location@plt>
   12c8c:	mov	r3, #12
   12c90:	str	r3, [r0]
   12c94:	mov	r0, #0
   12c98:	pop	{r4, pc}
   12c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ca0:	sub	sp, sp, #20
   12ca4:	ldr	r5, [r0, #4]
   12ca8:	ldr	r4, [r0]
   12cac:	cmp	r5, #0
   12cb0:	ldr	r7, [r0, #8]
   12cb4:	beq	12d8c <argp_parse@@Base+0x1650>
   12cb8:	stmib	sp, {r1, r2, r3}
   12cbc:	mov	r6, #1
   12cc0:	str	r4, [sp]
   12cc4:	mov	r8, #0
   12cc8:	b	12ce8 <argp_parse@@Base+0x15ac>
   12ccc:	mov	r3, r6
   12cd0:	subs	r5, r5, #1
   12cd4:	moveq	r3, #0
   12cd8:	andne	r3, r3, #1
   12cdc:	cmp	r3, #0
   12ce0:	add	r4, r4, #24
   12ce4:	beq	12d54 <argp_parse@@Base+0x1618>
   12ce8:	ldr	fp, [r4, #12]
   12cec:	ands	r9, fp, #8
   12cf0:	movne	r3, r6
   12cf4:	movne	r9, r8
   12cf8:	bne	12cd0 <argp_parse@@Base+0x1594>
   12cfc:	ldr	sl, [r4, #4]
   12d00:	sub	r3, sl, #1
   12d04:	cmp	r3, #254	; 0xfe
   12d08:	bhi	12ccc <argp_parse@@Base+0x1590>
   12d0c:	bl	10e8c <__ctype_b_loc@plt>
   12d10:	lsl	r3, sl, #1
   12d14:	ldr	r1, [r0]
   12d18:	ldrh	r3, [r1, r3]
   12d1c:	tst	r3, #16384	; 0x4000
   12d20:	beq	12ccc <argp_parse@@Base+0x1590>
   12d24:	ldrb	r3, [r7]
   12d28:	cmp	r3, sl
   12d2c:	bne	12ccc <argp_parse@@Base+0x1590>
   12d30:	ldr	r3, [sp]
   12d34:	tst	fp, #4
   12d38:	moveq	r3, r4
   12d3c:	tst	fp, #2
   12d40:	str	r3, [sp]
   12d44:	movne	r3, r6
   12d48:	beq	12d64 <argp_parse@@Base+0x1628>
   12d4c:	add	r7, r7, #1
   12d50:	b	12cd0 <argp_parse@@Base+0x1594>
   12d54:	mov	sl, r9
   12d58:	mov	r0, sl
   12d5c:	add	sp, sp, #20
   12d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d64:	ldr	r3, [sp, #12]
   12d68:	ldr	r2, [sp, #8]
   12d6c:	ldr	r1, [sp]
   12d70:	mov	r0, r4
   12d74:	ldr	ip, [sp, #4]
   12d78:	blx	ip
   12d7c:	clz	r3, r0
   12d80:	mov	r9, r0
   12d84:	lsr	r3, r3, #5
   12d88:	b	12d4c <argp_parse@@Base+0x1610>
   12d8c:	mov	sl, r5
   12d90:	b	12d58 <argp_parse@@Base+0x161c>
   12d94:	push	{r4, r5, r6, lr}
   12d98:	ldr	r4, [r0, #12]
   12d9c:	ands	r4, r4, #8
   12da0:	movne	r4, #0
   12da4:	bne	12dd0 <argp_parse@@Base+0x1694>
   12da8:	ldr	r5, [r0, #4]
   12dac:	sub	r3, r5, #1
   12db0:	cmp	r3, #254	; 0xfe
   12db4:	bhi	12dd0 <argp_parse@@Base+0x1694>
   12db8:	bl	10e8c <__ctype_b_loc@plt>
   12dbc:	lsl	r3, r5, #1
   12dc0:	ldr	r2, [r0]
   12dc4:	ldrh	r3, [r2, r3]
   12dc8:	tst	r3, #16384	; 0x4000
   12dcc:	movne	r4, r5
   12dd0:	mov	r0, r4
   12dd4:	pop	{r4, r5, r6, pc}
   12dd8:	push	{r4, lr}
   12ddc:	mov	r4, r0
   12de0:	bl	10e8c <__ctype_b_loc@plt>
   12de4:	ldr	r2, [r4]
   12de8:	ldr	lr, [r0]
   12dec:	b	12df4 <argp_parse@@Base+0x16b8>
   12df0:	str	r2, [r4]
   12df4:	ldrb	r1, [r2]
   12df8:	mov	r3, r2
   12dfc:	add	r2, r2, #1
   12e00:	lsl	r0, r1, #1
   12e04:	ldrh	ip, [lr, r0]
   12e08:	tst	ip, #8192	; 0x2000
   12e0c:	bne	12df0 <argp_parse@@Base+0x16b4>
   12e10:	subs	r0, r1, #45	; 0x2d
   12e14:	movne	r0, #1
   12e18:	cmp	r1, #0
   12e1c:	popeq	{r4, pc}
   12e20:	tst	ip, #8
   12e24:	popne	{r4, pc}
   12e28:	add	r3, r3, #1
   12e2c:	str	r3, [r4]
   12e30:	ldrb	r2, [r3]
   12e34:	cmp	r2, #0
   12e38:	lsl	r2, r2, #1
   12e3c:	popeq	{r4, pc}
   12e40:	ldrh	r2, [lr, r2]
   12e44:	tst	r2, #8
   12e48:	beq	12e28 <argp_parse@@Base+0x16ec>
   12e4c:	pop	{r4, pc}
   12e50:	push	{r4, r5, r6, lr}
   12e54:	mov	r5, r0
   12e58:	ldr	r0, [r0, #12]
   12e5c:	cmp	r0, #0
   12e60:	beq	12e74 <argp_parse@@Base+0x1738>
   12e64:	ldr	r4, [r0, #24]
   12e68:	bl	125d4 <argp_parse@@Base+0xe98>
   12e6c:	subs	r0, r4, #0
   12e70:	bne	12e64 <argp_parse@@Base+0x1728>
   12e74:	ldr	r3, [r5, #4]
   12e78:	cmp	r3, #0
   12e7c:	beq	12e90 <argp_parse@@Base+0x1754>
   12e80:	ldr	r0, [r5]
   12e84:	bl	125d4 <argp_parse@@Base+0xe98>
   12e88:	ldr	r0, [r5, #8]
   12e8c:	bl	125d4 <argp_parse@@Base+0xe98>
   12e90:	mov	r0, r5
   12e94:	pop	{r4, r5, r6, lr}
   12e98:	b	125d4 <argp_parse@@Base+0xe98>
   12e9c:	push	{r4, r5, r6, r7, r8, lr}
   12ea0:	mov	r5, r1
   12ea4:	ldr	r3, [r0, #28]
   12ea8:	ldr	r1, [r0, #24]
   12eac:	ldr	r2, [r0, #16]
   12eb0:	sub	r3, r3, r1
   12eb4:	cmp	r3, r2
   12eb8:	mov	r4, r0
   12ebc:	bhi	12f28 <argp_parse@@Base+0x17ec>
   12ec0:	ldr	r1, [r4, #20]
   12ec4:	mov	r6, #32
   12ec8:	cmp	r1, #0
   12ecc:	subge	r5, r5, r1
   12ed0:	mov	r7, #1
   12ed4:	cmp	r5, #0
   12ed8:	sub	r5, r5, #1
   12edc:	ble	12f08 <argp_parse@@Base+0x17cc>
   12ee0:	ldr	r3, [r4, #28]
   12ee4:	ldr	r2, [r4, #32]
   12ee8:	cmp	r3, r2
   12eec:	bcs	12f0c <argp_parse@@Base+0x17d0>
   12ef0:	add	r2, r3, #1
   12ef4:	cmp	r5, #0
   12ef8:	str	r2, [r4, #28]
   12efc:	sub	r5, r5, #1
   12f00:	strb	r6, [r3]
   12f04:	bgt	12ee0 <argp_parse@@Base+0x17a4>
   12f08:	pop	{r4, r5, r6, r7, r8, pc}
   12f0c:	mov	r1, r7
   12f10:	mov	r0, r4
   12f14:	bl	178f4 <argp_error@@Base+0x1a5c>
   12f18:	cmp	r0, #0
   12f1c:	beq	12ed4 <argp_parse@@Base+0x1798>
   12f20:	ldr	r3, [r4, #28]
   12f24:	b	12ef0 <argp_parse@@Base+0x17b4>
   12f28:	bl	17264 <argp_error@@Base+0x13cc>
   12f2c:	b	12ec0 <argp_parse@@Base+0x1784>
   12f30:	push	{r4, r5, r6, lr}
   12f34:	subs	r4, r2, #0
   12f38:	popeq	{r4, r5, r6, pc}
   12f3c:	ldr	ip, [r4, #20]
   12f40:	cmp	ip, #0
   12f44:	popeq	{r4, r5, r6, pc}
   12f48:	mov	r6, r1
   12f4c:	mov	r5, r0
   12f50:	mov	r1, r3
   12f54:	mov	r0, r4
   12f58:	bl	12478 <argp_parse@@Base+0xd3c>
   12f5c:	ldr	r3, [r4, #20]
   12f60:	mov	r1, r5
   12f64:	mov	r2, r0
   12f68:	mov	r0, r6
   12f6c:	pop	{r4, r5, r6, lr}
   12f70:	bx	r3
   12f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f78:	mov	r5, r2
   12f7c:	sub	sp, sp, #12
   12f80:	mov	r2, r1
   12f84:	ldr	r3, [r5, #16]
   12f88:	ldr	r1, [pc, #488]	; 13178 <argp_parse@@Base+0x1a3c>
   12f8c:	mov	r8, r0
   12f90:	bl	12f30 <argp_parse@@Base+0x17f4>
   12f94:	subs	r6, r0, #0
   12f98:	beq	130a4 <argp_parse@@Base+0x1968>
   12f9c:	ldrb	r3, [r6]
   12fa0:	cmp	r3, #0
   12fa4:	beq	13098 <argp_parse@@Base+0x195c>
   12fa8:	ldr	r3, [r5, #8]
   12fac:	ldr	r3, [r3]
   12fb0:	cmp	r3, #0
   12fb4:	beq	12fdc <argp_parse@@Base+0x18a0>
   12fb8:	ldr	r4, [r5, #4]
   12fbc:	ldr	r3, [r4, #28]
   12fc0:	ldr	r2, [r4, #32]
   12fc4:	cmp	r3, r2
   12fc8:	bcs	1315c <argp_parse@@Base+0x1a20>
   12fcc:	add	r1, r3, #1
   12fd0:	mov	r2, #10
   12fd4:	str	r1, [r4, #28]
   12fd8:	strb	r2, [r3]
   12fdc:	ldr	sl, [pc, #408]	; 1317c <argp_parse@@Base+0x1a40>
   12fe0:	ldr	r0, [r5, #4]
   12fe4:	ldr	r1, [sl, #24]
   12fe8:	bl	12e9c <argp_parse@@Base+0x1760>
   12fec:	ldr	r4, [r5, #4]
   12ff0:	ldr	r9, [sl, #24]
   12ff4:	ldr	r7, [r4, #28]
   12ff8:	ldr	r3, [r4, #24]
   12ffc:	ldr	r2, [r4, #16]
   13000:	sub	r3, r7, r3
   13004:	cmp	r3, r2
   13008:	strls	r9, [r4, #4]
   1300c:	movls	fp, r4
   13010:	bhi	130e0 <argp_parse@@Base+0x19a4>
   13014:	str	r9, [fp, #12]
   13018:	mov	r0, r6
   1301c:	bl	10ea4 <strlen@plt>
   13020:	subs	r9, r0, #0
   13024:	beq	1305c <argp_parse@@Base+0x1920>
   13028:	ldr	r2, [r4, #32]
   1302c:	add	r3, r7, r9
   13030:	cmp	r2, r3
   13034:	bcc	130c4 <argp_parse@@Base+0x1988>
   13038:	mov	r2, r9
   1303c:	mov	r0, r7
   13040:	mov	r1, r6
   13044:	bl	10dc0 <memcpy@plt>
   13048:	ldr	r3, [r4, #28]
   1304c:	add	r9, r3, r9
   13050:	str	r9, [r4, #28]
   13054:	ldr	r4, [r5, #4]
   13058:	ldr	r7, [r4, #28]
   1305c:	ldr	r3, [r4, #24]
   13060:	ldr	r2, [r4, #16]
   13064:	sub	r3, r7, r3
   13068:	cmp	r3, r2
   1306c:	movls	r9, r4
   13070:	bhi	1312c <argp_parse@@Base+0x19f0>
   13074:	ldr	r2, [r9, #32]
   13078:	mov	r3, #0
   1307c:	cmp	r2, r7
   13080:	str	r3, [r4, #4]
   13084:	bls	13140 <argp_parse@@Base+0x1a04>
   13088:	add	r2, r7, #1
   1308c:	mov	r3, #10
   13090:	str	r2, [r9, #28]
   13094:	strb	r3, [r7]
   13098:	ldr	r3, [r5, #8]
   1309c:	mov	r2, #1
   130a0:	str	r2, [r3, #4]
   130a4:	cmp	r8, r6
   130a8:	beq	130bc <argp_parse@@Base+0x1980>
   130ac:	mov	r0, r6
   130b0:	add	sp, sp, #12
   130b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130b8:	b	125d4 <argp_parse@@Base+0xe98>
   130bc:	add	sp, sp, #12
   130c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130c4:	mov	r1, r9
   130c8:	mov	r0, r4
   130cc:	bl	178f4 <argp_error@@Base+0x1a5c>
   130d0:	cmp	r0, #0
   130d4:	beq	13054 <argp_parse@@Base+0x1918>
   130d8:	ldr	r7, [r4, #28]
   130dc:	b	13038 <argp_parse@@Base+0x18fc>
   130e0:	mov	r0, r4
   130e4:	str	r9, [sp, #4]
   130e8:	bl	17264 <argp_error@@Base+0x13cc>
   130ec:	ldr	fp, [r5, #4]
   130f0:	ldr	r3, [sp, #4]
   130f4:	ldr	r9, [sl, #24]
   130f8:	ldr	r7, [fp, #28]
   130fc:	ldr	r2, [fp, #24]
   13100:	ldr	r1, [fp, #16]
   13104:	sub	r2, r7, r2
   13108:	cmp	r2, r1
   1310c:	str	r3, [r4, #4]
   13110:	movls	r4, fp
   13114:	bls	13014 <argp_parse@@Base+0x18d8>
   13118:	mov	r0, fp
   1311c:	bl	17264 <argp_error@@Base+0x13cc>
   13120:	ldr	r4, [r5, #4]
   13124:	ldr	r7, [r4, #28]
   13128:	b	13014 <argp_parse@@Base+0x18d8>
   1312c:	mov	r0, r4
   13130:	bl	17264 <argp_error@@Base+0x13cc>
   13134:	ldr	r9, [r5, #4]
   13138:	ldr	r7, [r9, #28]
   1313c:	b	13074 <argp_parse@@Base+0x1938>
   13140:	mov	r1, #1
   13144:	mov	r0, r9
   13148:	bl	178f4 <argp_error@@Base+0x1a5c>
   1314c:	cmp	r0, #0
   13150:	beq	13098 <argp_parse@@Base+0x195c>
   13154:	ldr	r7, [r9, #28]
   13158:	b	13088 <argp_parse@@Base+0x194c>
   1315c:	mov	r1, #1
   13160:	mov	r0, r4
   13164:	bl	178f4 <argp_error@@Base+0x1a5c>
   13168:	cmp	r0, #0
   1316c:	beq	12fdc <argp_parse@@Base+0x18a0>
   13170:	ldr	r3, [r4, #28]
   13174:	b	12fcc <argp_parse@@Base+0x1890>
   13178:	andeq	r0, r0, #3
   1317c:	andeq	r9, r2, r0, lsl #2
   13180:	ldr	r3, [r1, #12]
   13184:	push	{r4, r5, r6, r7, r8, lr}
   13188:	cmp	r3, #0
   1318c:	mov	r4, r1
   13190:	mov	r6, r0
   13194:	beq	1327c <argp_parse@@Base+0x1b40>
   13198:	ldr	r3, [r1, #8]
   1319c:	ldr	r2, [r1]
   131a0:	ldr	r7, [r3]
   131a4:	ldr	r3, [r3, #4]
   131a8:	ldr	r5, [r2, #16]
   131ac:	cmp	r3, #0
   131b0:	cmpne	r7, #0
   131b4:	beq	131ec <argp_parse@@Base+0x1ab0>
   131b8:	ldr	r2, [r2, #12]
   131bc:	ldr	r3, [r7, #12]
   131c0:	cmp	r2, r3
   131c4:	beq	131ec <argp_parse@@Base+0x1ab0>
   131c8:	ldr	r8, [r1, #4]
   131cc:	ldr	r3, [r8, #28]
   131d0:	ldr	r2, [r8, #32]
   131d4:	cmp	r3, r2
   131d8:	bcs	1330c <argp_parse@@Base+0x1bd0>
   131dc:	add	r1, r3, #1
   131e0:	mov	r2, #10
   131e4:	str	r1, [r8, #28]
   131e8:	strb	r2, [r3]
   131ec:	cmp	r5, #0
   131f0:	beq	132d8 <argp_parse@@Base+0x1b9c>
   131f4:	ldr	r0, [r5]
   131f8:	cmp	r0, #0
   131fc:	beq	132d8 <argp_parse@@Base+0x1b9c>
   13200:	ldrb	r3, [r0]
   13204:	cmp	r3, #0
   13208:	beq	132d8 <argp_parse@@Base+0x1b9c>
   1320c:	cmp	r7, #0
   13210:	beq	13240 <argp_parse@@Base+0x1b04>
   13214:	ldr	r3, [r7, #16]
   13218:	cmp	r5, r3
   1321c:	beq	132d8 <argp_parse@@Base+0x1b9c>
   13220:	cmp	r3, #0
   13224:	beq	13240 <argp_parse@@Base+0x1b04>
   13228:	ldr	r3, [r3, #12]
   1322c:	cmp	r3, #0
   13230:	cmpne	r5, r3
   13234:	bne	13228 <argp_parse@@Base+0x1aec>
   13238:	cmp	r5, r3
   1323c:	beq	132d8 <argp_parse@@Base+0x1b9c>
   13240:	ldr	r3, [r4, #4]
   13244:	ldr	r1, [r5, #16]
   13248:	mov	r2, r4
   1324c:	ldr	r7, [r3, #12]
   13250:	bl	12f74 <argp_parse@@Base+0x1838>
   13254:	ldr	r5, [r4, #4]
   13258:	mov	r0, r5
   1325c:	ldr	r3, [r5, #28]
   13260:	ldr	r1, [r5, #24]
   13264:	ldr	r2, [r5, #16]
   13268:	sub	r3, r3, r1
   1326c:	cmp	r3, r2
   13270:	bhi	13300 <argp_parse@@Base+0x1bc4>
   13274:	str	r7, [r5, #12]
   13278:	b	132dc <argp_parse@@Base+0x1ba0>
   1327c:	ldr	r5, [r1, #4]
   13280:	ldr	r3, [r5, #28]
   13284:	ldr	r1, [r5, #32]
   13288:	add	r2, r3, #2
   1328c:	cmp	r1, r2
   13290:	bcc	132bc <argp_parse@@Base+0x1b80>
   13294:	ldr	r2, [pc, #140]	; 13328 <argp_parse@@Base+0x1bec>
   13298:	mov	r1, r6
   1329c:	ldrh	r2, [r2]
   132a0:	strh	r2, [r3]
   132a4:	ldr	r3, [r5, #28]
   132a8:	ldr	r0, [r4, #4]
   132ac:	add	r3, r3, #2
   132b0:	str	r3, [r5, #28]
   132b4:	pop	{r4, r5, r6, r7, r8, lr}
   132b8:	b	12e9c <argp_parse@@Base+0x1760>
   132bc:	mov	r1, #2
   132c0:	mov	r0, r5
   132c4:	bl	178f4 <argp_error@@Base+0x1a5c>
   132c8:	cmp	r0, #0
   132cc:	beq	132f0 <argp_parse@@Base+0x1bb4>
   132d0:	ldr	r3, [r5, #28]
   132d4:	b	13294 <argp_parse@@Base+0x1b58>
   132d8:	ldr	r0, [r4, #4]
   132dc:	mov	r3, #0
   132e0:	str	r3, [r4, #12]
   132e4:	mov	r1, r6
   132e8:	pop	{r4, r5, r6, r7, r8, lr}
   132ec:	b	12e9c <argp_parse@@Base+0x1760>
   132f0:	ldr	r0, [r4, #4]
   132f4:	mov	r1, r6
   132f8:	pop	{r4, r5, r6, r7, r8, lr}
   132fc:	b	12e9c <argp_parse@@Base+0x1760>
   13300:	bl	17264 <argp_error@@Base+0x13cc>
   13304:	ldr	r0, [r4, #4]
   13308:	b	13274 <argp_parse@@Base+0x1b38>
   1330c:	mov	r1, #1
   13310:	mov	r0, r8
   13314:	bl	178f4 <argp_error@@Base+0x1a5c>
   13318:	cmp	r0, #0
   1331c:	beq	131ec <argp_parse@@Base+0x1ab0>
   13320:	ldr	r3, [r8, #28]
   13324:	b	131dc <argp_parse@@Base+0x1aa0>
   13328:			; <UNDEFINED> instruction: 0x000186b0
   1332c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13330:	mov	r7, r3
   13334:	ldr	sl, [r0, #12]
   13338:	sub	sp, sp, #36	; 0x24
   1333c:	ldr	r3, [r0, #16]
   13340:	cmp	sl, #0
   13344:	mov	fp, r0
   13348:	mov	r6, r2
   1334c:	str	r3, [sp, #16]
   13350:	mov	r9, r1
   13354:	ldr	r8, [sp, #72]	; 0x48
   13358:	ldr	r5, [sp, #76]	; 0x4c
   1335c:	beq	1372c <argp_parse@@Base+0x1ff0>
   13360:	mov	r1, #11
   13364:	mov	r0, sl
   13368:	bl	10eb0 <strchr@plt>
   1336c:	cmp	r6, #0
   13370:	bne	13648 <argp_parse@@Base+0x1f0c>
   13374:	cmp	r0, #0
   13378:	ldr	r3, [fp, #20]
   1337c:	beq	13884 <argp_parse@@Base+0x2148>
   13380:	cmp	r3, #0
   13384:	sub	r4, r0, sl
   13388:	beq	1381c <argp_parse@@Base+0x20e0>
   1338c:	cmp	r4, #0
   13390:	beq	137bc <argp_parse@@Base+0x2080>
   13394:	mov	r0, sl
   13398:	mov	r1, r4
   1339c:	bl	10db4 <strndup@plt>
   133a0:	mov	r3, #1
   133a4:	str	r3, [sp, #24]
   133a8:	mov	sl, r0
   133ac:	adds	r3, r0, #0
   133b0:	movne	r3, #1
   133b4:	str	r3, [sp, #20]
   133b8:	mov	r1, r9
   133bc:	mov	r0, fp
   133c0:	bl	12478 <argp_parse@@Base+0xd3c>
   133c4:	ldr	r3, [fp, #20]
   133c8:	str	r0, [sp, #12]
   133cc:	ldr	r0, [pc, #1272]	; 138cc <argp_parse@@Base+0x2190>
   133d0:	ldr	r2, [sp, #12]
   133d4:	mov	r1, sl
   133d8:	blx	r3
   133dc:	subs	r3, r0, #0
   133e0:	beq	1376c <argp_parse@@Base+0x2030>
   133e4:	cmp	r7, #0
   133e8:	beq	1340c <argp_parse@@Base+0x1cd0>
   133ec:	ldr	r2, [r5, #28]
   133f0:	ldr	r1, [r5, #32]
   133f4:	cmp	r2, r1
   133f8:	bcs	13774 <argp_parse@@Base+0x2038>
   133fc:	add	r0, r2, #1
   13400:	mov	r1, #10
   13404:	str	r0, [r5, #28]
   13408:	strb	r1, [r2]
   1340c:	ldr	r2, [sp, #24]
   13410:	cmp	r3, sl
   13414:	movne	r2, #0
   13418:	andeq	r2, r2, #1
   1341c:	cmp	r2, #0
   13420:	beq	1368c <argp_parse@@Base+0x1f50>
   13424:	ldr	r0, [r5, #28]
   13428:	ldr	r1, [r5, #32]
   1342c:	add	r2, r0, r4
   13430:	cmp	r1, r2
   13434:	bcs	136ec <argp_parse@@Base+0x1fb0>
   13438:	mov	r1, r4
   1343c:	mov	r0, r5
   13440:	str	r3, [sp, #24]
   13444:	bl	178f4 <argp_error@@Base+0x1a5c>
   13448:	ldr	r3, [sp, #24]
   1344c:	cmp	r0, #0
   13450:	bne	136e8 <argp_parse@@Base+0x1fac>
   13454:	ldr	r4, [r5, #28]
   13458:	ldr	r1, [r5, #24]
   1345c:	ldr	r2, [r5, #16]
   13460:	sub	r4, r4, r1
   13464:	cmp	r4, r2
   13468:	bhi	13710 <argp_parse@@Base+0x1fd4>
   1346c:	ldr	r2, [r5, #20]
   13470:	ldr	r1, [r5, #4]
   13474:	bic	r2, r2, r2, asr #31
   13478:	cmp	r1, r2
   1347c:	bcs	134a0 <argp_parse@@Base+0x1d64>
   13480:	ldr	r2, [r5, #28]
   13484:	ldr	r1, [r5, #32]
   13488:	cmp	r2, r1
   1348c:	bcs	13798 <argp_parse@@Base+0x205c>
   13490:	add	r0, r2, #1
   13494:	mov	r1, #10
   13498:	str	r0, [r5, #28]
   1349c:	strb	r1, [r2]
   134a0:	cmp	r3, sl
   134a4:	moveq	r4, #1
   134a8:	beq	134b8 <argp_parse@@Base+0x1d7c>
   134ac:	mov	r0, r3
   134b0:	bl	125d4 <argp_parse@@Base+0xe98>
   134b4:	mov	r4, #1
   134b8:	ldr	r3, [sp, #20]
   134bc:	cmp	r3, #0
   134c0:	beq	134d8 <argp_parse@@Base+0x1d9c>
   134c4:	ldr	r3, [fp, #20]
   134c8:	cmp	r3, #0
   134cc:	beq	135bc <argp_parse@@Base+0x1e80>
   134d0:	mov	r0, sl
   134d4:	bl	125d4 <argp_parse@@Base+0xe98>
   134d8:	cmp	r6, #0
   134dc:	beq	135bc <argp_parse@@Base+0x1e80>
   134e0:	ldr	r3, [fp, #20]
   134e4:	cmp	r3, #0
   134e8:	beq	135bc <argp_parse@@Base+0x1e80>
   134ec:	ldr	r2, [sp, #12]
   134f0:	mov	r1, #0
   134f4:	ldr	r0, [pc, #980]	; 138d0 <argp_parse@@Base+0x2194>
   134f8:	blx	r3
   134fc:	subs	sl, r0, #0
   13500:	beq	135bc <argp_parse@@Base+0x1e80>
   13504:	orrs	r3, r7, r4
   13508:	beq	1352c <argp_parse@@Base+0x1df0>
   1350c:	ldr	r3, [r5, #28]
   13510:	ldr	r2, [r5, #32]
   13514:	cmp	r3, r2
   13518:	bcs	13854 <argp_parse@@Base+0x2118>
   1351c:	add	r1, r3, #1
   13520:	mov	r2, #10
   13524:	str	r1, [r5, #28]
   13528:	strb	r2, [r3]
   1352c:	mov	r0, sl
   13530:	bl	10ea4 <strlen@plt>
   13534:	subs	r4, r0, #0
   13538:	beq	13564 <argp_parse@@Base+0x1e28>
   1353c:	ldr	r0, [r5, #28]
   13540:	ldr	r2, [r5, #32]
   13544:	add	r3, r0, r4
   13548:	cmp	r2, r3
   1354c:	bcs	137cc <argp_parse@@Base+0x2090>
   13550:	mov	r1, r4
   13554:	mov	r0, r5
   13558:	bl	178f4 <argp_error@@Base+0x1a5c>
   1355c:	cmp	r0, #0
   13560:	bne	137c8 <argp_parse@@Base+0x208c>
   13564:	mov	r0, sl
   13568:	bl	125d4 <argp_parse@@Base+0xe98>
   1356c:	ldr	r3, [r5, #28]
   13570:	ldr	r1, [r5, #24]
   13574:	ldr	r2, [r5, #16]
   13578:	sub	r3, r3, r1
   1357c:	cmp	r3, r2
   13580:	bhi	137e8 <argp_parse@@Base+0x20ac>
   13584:	ldr	r3, [r5, #20]
   13588:	ldr	r2, [r5, #4]
   1358c:	bic	r3, r3, r3, asr #31
   13590:	cmp	r2, r3
   13594:	bcs	13724 <argp_parse@@Base+0x1fe8>
   13598:	ldr	r3, [r5, #28]
   1359c:	ldr	r2, [r5, #32]
   135a0:	cmp	r3, r2
   135a4:	bcs	13838 <argp_parse@@Base+0x20fc>
   135a8:	mov	r4, #1
   135ac:	add	r2, r3, r4
   135b0:	str	r2, [r5, #28]
   135b4:	mov	r2, #10
   135b8:	strb	r2, [r3]
   135bc:	ldr	fp, [sp, #16]
   135c0:	cmp	fp, #0
   135c4:	beq	1363c <argp_parse@@Base+0x1f00>
   135c8:	ldr	r3, [fp]
   135cc:	cmp	r3, #0
   135d0:	beq	1363c <argp_parse@@Base+0x1f00>
   135d4:	eor	r2, r4, #1
   135d8:	and	r2, r2, #1
   135dc:	clz	sl, r8
   135e0:	lsr	sl, sl, #5
   135e4:	orrs	r2, sl, r2
   135e8:	bne	13604 <argp_parse@@Base+0x1ec8>
   135ec:	b	13870 <argp_parse@@Base+0x2134>
   135f0:	cmp	r4, #0
   135f4:	movne	r2, sl
   135f8:	orreq	r2, sl, #1
   135fc:	cmp	r2, #0
   13600:	beq	1363c <argp_parse@@Base+0x1f00>
   13604:	orrs	r2, r7, r4
   13608:	mov	r0, r3
   1360c:	str	r5, [sp, #4]
   13610:	movne	r3, #1
   13614:	moveq	r3, #0
   13618:	str	r8, [sp]
   1361c:	mov	r2, r6
   13620:	mov	r1, r9
   13624:	bl	1332c <argp_parse@@Base+0x1bf0>
   13628:	ldr	r3, [fp, #16]
   1362c:	add	fp, fp, #16
   13630:	cmp	r3, #0
   13634:	orr	r4, r4, r0
   13638:	bne	135f0 <argp_parse@@Base+0x1eb4>
   1363c:	mov	r0, r4
   13640:	add	sp, sp, #36	; 0x24
   13644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13648:	cmp	r0, #0
   1364c:	addne	sl, r0, #1
   13650:	beq	13814 <argp_parse@@Base+0x20d8>
   13654:	ldr	r3, [fp, #20]
   13658:	cmp	r3, #0
   1365c:	beq	137f4 <argp_parse@@Base+0x20b8>
   13660:	mov	r3, #0
   13664:	mov	r1, r9
   13668:	mov	r0, fp
   1366c:	mov	r4, r3
   13670:	str	r3, [sp, #20]
   13674:	bl	12478 <argp_parse@@Base+0xd3c>
   13678:	str	r4, [sp, #24]
   1367c:	ldr	r3, [fp, #20]
   13680:	str	r0, [sp, #12]
   13684:	ldr	r0, [pc, #584]	; 138d4 <argp_parse@@Base+0x2198>
   13688:	b	133d0 <argp_parse@@Base+0x1c94>
   1368c:	mov	r0, r3
   13690:	str	r3, [sp, #24]
   13694:	bl	10ea4 <strlen@plt>
   13698:	ldr	r3, [sp, #24]
   1369c:	subs	r4, r0, #0
   136a0:	beq	13454 <argp_parse@@Base+0x1d18>
   136a4:	ldr	r0, [r5, #28]
   136a8:	ldr	r1, [r5, #32]
   136ac:	add	r2, r0, r4
   136b0:	cmp	r1, r2
   136b4:	bcs	136d8 <argp_parse@@Base+0x1f9c>
   136b8:	mov	r1, r4
   136bc:	mov	r0, r5
   136c0:	str	r3, [sp, #24]
   136c4:	bl	178f4 <argp_error@@Base+0x1a5c>
   136c8:	ldr	r3, [sp, #24]
   136cc:	cmp	r0, #0
   136d0:	beq	13454 <argp_parse@@Base+0x1d18>
   136d4:	ldr	r0, [r5, #28]
   136d8:	mov	r2, r4
   136dc:	mov	r1, r3
   136e0:	str	r3, [sp, #24]
   136e4:	b	136f8 <argp_parse@@Base+0x1fbc>
   136e8:	ldr	r0, [r5, #28]
   136ec:	mov	r2, r4
   136f0:	mov	r1, sl
   136f4:	str	r3, [sp, #24]
   136f8:	bl	10dc0 <memcpy@plt>
   136fc:	ldr	r2, [r5, #28]
   13700:	ldr	r3, [sp, #24]
   13704:	add	r4, r2, r4
   13708:	str	r4, [r5, #28]
   1370c:	b	13458 <argp_parse@@Base+0x1d1c>
   13710:	mov	r0, r5
   13714:	str	r3, [sp, #24]
   13718:	bl	17264 <argp_error@@Base+0x13cc>
   1371c:	ldr	r3, [sp, #24]
   13720:	b	1346c <argp_parse@@Base+0x1d30>
   13724:	mov	r4, #1
   13728:	b	135bc <argp_parse@@Base+0x1e80>
   1372c:	ldr	r4, [r0, #20]
   13730:	cmp	r4, #0
   13734:	beq	1387c <argp_parse@@Base+0x2140>
   13738:	bl	12478 <argp_parse@@Base+0xd3c>
   1373c:	cmp	r6, #0
   13740:	ldr	r3, [fp, #20]
   13744:	strne	sl, [sp, #20]
   13748:	strne	sl, [sp, #24]
   1374c:	movne	r4, sl
   13750:	streq	r6, [sp, #20]
   13754:	streq	r6, [sp, #24]
   13758:	moveq	r4, r6
   1375c:	str	r0, [sp, #12]
   13760:	ldrne	r0, [pc, #364]	; 138d4 <argp_parse@@Base+0x2198>
   13764:	ldreq	r0, [pc, #352]	; 138cc <argp_parse@@Base+0x2190>
   13768:	b	133d0 <argp_parse@@Base+0x1c94>
   1376c:	mov	r4, r3
   13770:	b	134b8 <argp_parse@@Base+0x1d7c>
   13774:	mov	r1, #1
   13778:	mov	r0, r5
   1377c:	str	r3, [sp, #28]
   13780:	bl	178f4 <argp_error@@Base+0x1a5c>
   13784:	ldr	r3, [sp, #28]
   13788:	cmp	r0, #0
   1378c:	beq	1340c <argp_parse@@Base+0x1cd0>
   13790:	ldr	r2, [r5, #28]
   13794:	b	133fc <argp_parse@@Base+0x1cc0>
   13798:	mov	r1, #1
   1379c:	mov	r0, r5
   137a0:	str	r3, [sp, #24]
   137a4:	bl	178f4 <argp_error@@Base+0x1a5c>
   137a8:	ldr	r3, [sp, #24]
   137ac:	cmp	r0, #0
   137b0:	beq	134a0 <argp_parse@@Base+0x1d64>
   137b4:	ldr	r2, [r5, #28]
   137b8:	b	13490 <argp_parse@@Base+0x1d54>
   137bc:	str	r4, [sp, #20]
   137c0:	str	r4, [sp, #24]
   137c4:	b	133b8 <argp_parse@@Base+0x1c7c>
   137c8:	ldr	r0, [r5, #28]
   137cc:	mov	r2, r4
   137d0:	mov	r1, sl
   137d4:	bl	10dc0 <memcpy@plt>
   137d8:	ldr	r3, [r5, #28]
   137dc:	add	r4, r3, r4
   137e0:	str	r4, [r5, #28]
   137e4:	b	13564 <argp_parse@@Base+0x1e28>
   137e8:	mov	r0, r5
   137ec:	bl	17264 <argp_error@@Base+0x13cc>
   137f0:	b	13584 <argp_parse@@Base+0x1e48>
   137f4:	cmp	sl, #0
   137f8:	beq	13878 <argp_parse@@Base+0x213c>
   137fc:	str	r3, [sp, #20]
   13800:	str	r3, [sp, #24]
   13804:	mov	r4, r3
   13808:	str	r3, [sp, #12]
   1380c:	mov	r3, sl
   13810:	b	133e4 <argp_parse@@Base+0x1ca8>
   13814:	mov	sl, r0
   13818:	b	13654 <argp_parse@@Base+0x1f18>
   1381c:	adds	r3, r4, #0
   13820:	movne	r3, #1
   13824:	str	r3, [sp, #24]
   13828:	str	r3, [sp, #20]
   1382c:	str	r6, [sp, #12]
   13830:	mov	r3, sl
   13834:	b	133e4 <argp_parse@@Base+0x1ca8>
   13838:	mov	r1, #1
   1383c:	mov	r0, r5
   13840:	bl	178f4 <argp_error@@Base+0x1a5c>
   13844:	cmp	r0, #0
   13848:	beq	13724 <argp_parse@@Base+0x1fe8>
   1384c:	ldr	r3, [r5, #28]
   13850:	b	135a8 <argp_parse@@Base+0x1e6c>
   13854:	mov	r1, #1
   13858:	mov	r0, r5
   1385c:	bl	178f4 <argp_error@@Base+0x1a5c>
   13860:	cmp	r0, #0
   13864:	beq	1352c <argp_parse@@Base+0x1df0>
   13868:	ldr	r3, [r5, #28]
   1386c:	b	1351c <argp_parse@@Base+0x1de0>
   13870:	mov	r4, #1
   13874:	b	1363c <argp_parse@@Base+0x1f00>
   13878:	mov	r4, sl
   1387c:	str	r4, [sp, #12]
   13880:	b	134d8 <argp_parse@@Base+0x1d9c>
   13884:	cmp	r3, #0
   13888:	beq	138b4 <argp_parse@@Base+0x2178>
   1388c:	mov	r1, r9
   13890:	mov	r0, fp
   13894:	bl	12478 <argp_parse@@Base+0xd3c>
   13898:	mov	r4, r6
   1389c:	ldr	r3, [fp, #20]
   138a0:	str	r6, [sp, #20]
   138a4:	str	r6, [sp, #24]
   138a8:	str	r0, [sp, #12]
   138ac:	ldr	r0, [pc, #24]	; 138cc <argp_parse@@Base+0x2190>
   138b0:	b	133d0 <argp_parse@@Base+0x1c94>
   138b4:	mov	r3, sl
   138b8:	str	r6, [sp, #20]
   138bc:	str	r6, [sp, #24]
   138c0:	mov	r4, r6
   138c4:	str	r6, [sp, #12]
   138c8:	b	133e4 <argp_parse@@Base+0x1ca8>
   138cc:	andeq	r0, r0, #1
   138d0:	andeq	r0, r0, #4
   138d4:	andeq	r0, r0, #2
   138d8:	ldr	r3, [r0, #12]
   138dc:	ldr	r2, [r1, #12]
   138e0:	push	{r4, r5, r6, lr}
   138e4:	cmp	r3, r2
   138e8:	beq	13938 <argp_parse@@Base+0x21fc>
   138ec:	mov	r5, r1
   138f0:	mov	r4, r0
   138f4:	mov	r1, r2
   138f8:	mov	r0, r3
   138fc:	bl	138d8 <argp_parse@@Base+0x219c>
   13900:	cmp	r0, #0
   13904:	popne	{r4, r5, r6, pc}
   13908:	ldr	r3, [r5, #8]
   1390c:	ldr	r0, [r4, #8]
   13910:	mvn	r2, r3
   13914:	lsr	r2, r2, #31
   13918:	cmp	r2, r0, lsr #31
   1391c:	subne	r0, r0, r3
   13920:	subeq	r0, r3, r0
   13924:	cmp	r0, #0
   13928:	ldreq	r3, [r5, #4]
   1392c:	ldreq	r0, [r4, #4]
   13930:	subeq	r0, r3, r0
   13934:	pop	{r4, r5, r6, pc}
   13938:	ldr	r3, [r1, #8]
   1393c:	ldr	r2, [r0, #8]
   13940:	mvn	ip, r3
   13944:	ldr	lr, [r1, #4]
   13948:	lsr	ip, ip, #31
   1394c:	cmp	ip, r2, lsr #31
   13950:	ldr	r1, [r0, #4]
   13954:	subne	r0, r2, r3
   13958:	subeq	r0, r3, r2
   1395c:	cmp	r0, #0
   13960:	subeq	r0, lr, r1
   13964:	pop	{r4, r5, r6, pc}
   13968:	push	{r4, r5, r6, r7, r8, r9, lr}
   1396c:	sub	sp, sp, #12
   13970:	ldr	lr, [r0, #16]
   13974:	cmp	lr, #0
   13978:	movne	r2, lr
   1397c:	bne	13988 <argp_parse@@Base+0x224c>
   13980:	b	13c4c <argp_parse@@Base+0x2510>
   13984:	mov	r2, r3
   13988:	ldr	r3, [r2, #12]
   1398c:	cmp	r3, #0
   13990:	bne	13984 <argp_parse@@Base+0x2248>
   13994:	ldr	ip, [r1, #16]
   13998:	ldr	r4, [r2, #8]
   1399c:	cmp	ip, #0
   139a0:	movne	r2, ip
   139a4:	bne	139b0 <argp_parse@@Base+0x2274>
   139a8:	b	13c60 <argp_parse@@Base+0x2524>
   139ac:	mov	r2, r3
   139b0:	ldr	r3, [r2, #12]
   139b4:	cmp	r3, #0
   139b8:	bne	139ac <argp_parse@@Base+0x2270>
   139bc:	ldr	r3, [r2, #8]
   139c0:	mvn	r2, r3
   139c4:	lsr	r2, r2, #31
   139c8:	cmp	r2, r4, lsr #31
   139cc:	subne	r4, r4, r3
   139d0:	subeq	r4, r3, r4
   139d4:	cmp	r4, #0
   139d8:	bne	13a40 <argp_parse@@Base+0x2304>
   139dc:	adds	r4, ip, #0
   139e0:	movne	r4, #1
   139e4:	cmp	lr, #0
   139e8:	rsbeq	r4, r4, #0
   139ec:	rsbne	r4, r4, #1
   139f0:	cmp	r4, #0
   139f4:	bne	13a40 <argp_parse@@Base+0x2304>
   139f8:	cmp	lr, #0
   139fc:	mov	r5, r1
   13a00:	mov	r6, r0
   13a04:	beq	13a5c <argp_parse@@Base+0x2320>
   13a08:	ldr	r0, [lr, #20]
   13a0c:	ldr	r2, [ip, #20]
   13a10:	cmp	r0, r2
   13a14:	ble	13c20 <argp_parse@@Base+0x24e4>
   13a18:	mov	r0, lr
   13a1c:	ldr	r0, [r0, #12]
   13a20:	ldr	r3, [r0, #20]
   13a24:	cmp	r2, r3
   13a28:	blt	13a1c <argp_parse@@Base+0x22e0>
   13a2c:	mov	r1, ip
   13a30:	bl	138d8 <argp_parse@@Base+0x219c>
   13a34:	cmp	r0, #0
   13a38:	movne	r4, r0
   13a3c:	moveq	r4, #1
   13a40:	mov	r0, r4
   13a44:	add	sp, sp, #12
   13a48:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a4c:	mov	r0, lr
   13a50:	bl	138d8 <argp_parse@@Base+0x219c>
   13a54:	subs	r4, r0, #0
   13a58:	bne	13a40 <argp_parse@@Base+0x2304>
   13a5c:	ldr	r4, [r5, #12]
   13a60:	ldr	r3, [r6, #12]
   13a64:	mvn	r2, r4
   13a68:	lsr	r2, r2, #31
   13a6c:	cmp	r2, r3, lsr #31
   13a70:	subne	r4, r3, r4
   13a74:	subeq	r4, r4, r3
   13a78:	cmp	r4, #0
   13a7c:	bne	13a40 <argp_parse@@Base+0x2304>
   13a80:	ldr	r2, [r6, #4]
   13a84:	ldr	lr, [r6]
   13a88:	cmp	r2, #0
   13a8c:	beq	13ab8 <argp_parse@@Base+0x237c>
   13a90:	add	r3, lr, #24
   13a94:	ldr	r1, [r3, #-24]	; 0xffffffe8
   13a98:	cmp	r1, #0
   13a9c:	beq	13aac <argp_parse@@Base+0x2370>
   13aa0:	ldr	r0, [r3, #-12]
   13aa4:	tst	r0, #2
   13aa8:	beq	13c68 <argp_parse@@Base+0x252c>
   13aac:	subs	r2, r2, #1
   13ab0:	add	r3, r3, #24
   13ab4:	bne	13a94 <argp_parse@@Base+0x2358>
   13ab8:	ldr	r2, [r5, #4]
   13abc:	mov	ip, #0
   13ac0:	cmp	r2, ip
   13ac4:	str	ip, [sp]
   13ac8:	ldr	r3, [r5]
   13acc:	beq	13cd8 <argp_parse@@Base+0x259c>
   13ad0:	add	r3, r3, #24
   13ad4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   13ad8:	cmp	r1, #0
   13adc:	beq	13aec <argp_parse@@Base+0x23b0>
   13ae0:	ldr	r0, [r3, #-12]
   13ae4:	tst	r0, #2
   13ae8:	beq	13afc <argp_parse@@Base+0x23c0>
   13aec:	subs	r2, r2, #1
   13af0:	add	r3, r3, #24
   13af4:	bne	13ad4 <argp_parse@@Base+0x2398>
   13af8:	mov	r1, r2
   13afc:	ldr	r3, [lr, #12]
   13b00:	str	r1, [sp, #4]
   13b04:	ands	r3, ip, r3, lsr #3
   13b08:	beq	13cd0 <argp_parse@@Base+0x2594>
   13b0c:	mov	r0, sp
   13b10:	bl	12dd8 <argp_parse@@Base+0x169c>
   13b14:	ldr	r3, [r5]
   13b18:	cmp	r0, #0
   13b1c:	bne	13cbc <argp_parse@@Base+0x2580>
   13b20:	ldr	r3, [r3, #12]
   13b24:	tst	r3, #8
   13b28:	beq	13b50 <argp_parse@@Base+0x2414>
   13b2c:	ldr	r3, [sp, #4]
   13b30:	cmp	r3, #0
   13b34:	beq	13b50 <argp_parse@@Base+0x2414>
   13b38:	add	r0, sp, #4
   13b3c:	bl	12dd8 <argp_parse@@Base+0x169c>
   13b40:	cmp	r0, #0
   13b44:	subne	r4, r4, #1
   13b48:	cmp	r4, #0
   13b4c:	bne	13a40 <argp_parse@@Base+0x2304>
   13b50:	ldr	r2, [r6, #20]
   13b54:	mov	r0, r6
   13b58:	mov	r3, #0
   13b5c:	ldr	r2, [r2, #24]
   13b60:	ldr	r1, [pc, #408]	; 13d00 <argp_parse@@Base+0x25c4>
   13b64:	bl	12c9c <argp_parse@@Base+0x1560>
   13b68:	ldr	r2, [r5, #20]
   13b6c:	mov	r3, #0
   13b70:	ldr	r1, [pc, #392]	; 13d00 <argp_parse@@Base+0x25c4>
   13b74:	ldr	r2, [r2, #24]
   13b78:	uxtb	r6, r0
   13b7c:	mov	r0, r5
   13b80:	bl	12c9c <argp_parse@@Base+0x1560>
   13b84:	cmp	r6, #0
   13b88:	lslne	r4, r6, #2
   13b8c:	movne	r7, r6
   13b90:	uxtb	r5, r0
   13b94:	beq	13ca0 <argp_parse@@Base+0x2564>
   13b98:	cmp	r5, #0
   13b9c:	lslne	r9, r5, #2
   13ba0:	movne	r8, r5
   13ba4:	beq	13c84 <argp_parse@@Base+0x2548>
   13ba8:	bl	10e68 <__ctype_tolower_loc@plt>
   13bac:	ldr	r3, [r0]
   13bb0:	ldr	r4, [r3, r4]
   13bb4:	ldr	r3, [r3, r9]
   13bb8:	subs	r4, r4, r3
   13bbc:	bne	13a40 <argp_parse@@Base+0x2304>
   13bc0:	subs	r4, r8, r7
   13bc4:	bne	13a40 <argp_parse@@Base+0x2304>
   13bc8:	adds	r4, r5, #0
   13bcc:	movne	r4, #1
   13bd0:	cmp	r6, #0
   13bd4:	rsbeq	r4, r4, #0
   13bd8:	rsbne	r4, r4, #1
   13bdc:	cmp	r4, #0
   13be0:	bne	13a40 <argp_parse@@Base+0x2304>
   13be4:	cmp	r6, #0
   13be8:	bne	13a40 <argp_parse@@Base+0x2304>
   13bec:	ldm	sp, {r0, r1}
   13bf0:	adds	r4, r1, #0
   13bf4:	movne	r4, #1
   13bf8:	cmp	r0, #0
   13bfc:	rsbeq	r4, r4, #0
   13c00:	rsbne	r4, r4, #1
   13c04:	cmp	r4, #0
   13c08:	bne	13a40 <argp_parse@@Base+0x2304>
   13c0c:	cmp	r0, #0
   13c10:	beq	13a40 <argp_parse@@Base+0x2304>
   13c14:	bl	10df0 <strcasecmp@plt>
   13c18:	mov	r4, r0
   13c1c:	b	13a40 <argp_parse@@Base+0x2304>
   13c20:	mov	r1, ip
   13c24:	bge	13a4c <argp_parse@@Base+0x2310>
   13c28:	ldr	r1, [r1, #12]
   13c2c:	ldr	r3, [r1, #20]
   13c30:	cmp	r0, r3
   13c34:	blt	13c28 <argp_parse@@Base+0x24ec>
   13c38:	mov	r0, lr
   13c3c:	bl	138d8 <argp_parse@@Base+0x219c>
   13c40:	subs	r4, r0, #0
   13c44:	mvneq	r4, #0
   13c48:	b	13a40 <argp_parse@@Base+0x2304>
   13c4c:	ldr	ip, [r1, #16]
   13c50:	ldr	r4, [r0, #12]
   13c54:	cmp	ip, #0
   13c58:	movne	r2, ip
   13c5c:	bne	139b0 <argp_parse@@Base+0x2274>
   13c60:	ldr	r3, [r1, #12]
   13c64:	b	139c0 <argp_parse@@Base+0x2284>
   13c68:	ldr	r2, [r5, #4]
   13c6c:	str	r1, [sp]
   13c70:	cmp	r2, #0
   13c74:	ldr	r3, [r5]
   13c78:	beq	13ce0 <argp_parse@@Base+0x25a4>
   13c7c:	mov	ip, #1
   13c80:	b	13ad0 <argp_parse@@Base+0x2394>
   13c84:	ldr	r3, [sp, #4]
   13c88:	cmp	r3, #0
   13c8c:	moveq	r9, r5
   13c90:	ldrbne	r8, [r3]
   13c94:	moveq	r8, r5
   13c98:	lslne	r9, r8, #2
   13c9c:	b	13ba8 <argp_parse@@Base+0x246c>
   13ca0:	ldr	r3, [sp]
   13ca4:	cmp	r3, #0
   13ca8:	moveq	r4, r6
   13cac:	ldrbne	r7, [r3]
   13cb0:	moveq	r7, r6
   13cb4:	lslne	r4, r7, #2
   13cb8:	b	13b98 <argp_parse@@Base+0x245c>
   13cbc:	ldr	r3, [r3, #12]
   13cc0:	tst	r3, #8
   13cc4:	bne	13cec <argp_parse@@Base+0x25b0>
   13cc8:	mov	r4, #1
   13ccc:	b	13a40 <argp_parse@@Base+0x2304>
   13cd0:	ldr	r3, [r5]
   13cd4:	b	13b20 <argp_parse@@Base+0x23e4>
   13cd8:	str	r2, [sp, #4]
   13cdc:	b	13b50 <argp_parse@@Base+0x2414>
   13ce0:	mov	r1, r2
   13ce4:	mov	ip, #1
   13ce8:	b	13afc <argp_parse@@Base+0x23c0>
   13cec:	ldr	r3, [sp, #4]
   13cf0:	mov	r4, #1
   13cf4:	cmp	r3, #0
   13cf8:	bne	13b38 <argp_parse@@Base+0x23fc>
   13cfc:	b	13a40 <argp_parse@@Base+0x2304>
   13d00:	muleq	r1, r4, sp
   13d04:	ldr	r3, [r0, #28]
   13d08:	ldr	r2, [r0, #24]
   13d0c:	push	{r4, r5, r6, lr}
   13d10:	mov	r5, r1
   13d14:	ldr	r1, [r0, #16]
   13d18:	sub	r2, r3, r2
   13d1c:	cmp	r2, r1
   13d20:	mov	r4, r0
   13d24:	movls	r2, r3
   13d28:	bhi	13d84 <argp_parse@@Base+0x2648>
   13d2c:	ldr	r1, [r4, #20]
   13d30:	ldr	r0, [r4, #8]
   13d34:	cmp	r1, #0
   13d38:	addge	r5, r5, r1
   13d3c:	cmp	r5, r0
   13d40:	bcc	13d64 <argp_parse@@Base+0x2628>
   13d44:	ldr	r1, [r4, #32]
   13d48:	cmp	r1, r3
   13d4c:	bls	13d94 <argp_parse@@Base+0x2658>
   13d50:	add	r1, r2, #1
   13d54:	mov	r3, #10
   13d58:	str	r1, [r4, #28]
   13d5c:	strb	r3, [r2]
   13d60:	pop	{r4, r5, r6, pc}
   13d64:	ldr	r2, [r4, #32]
   13d68:	cmp	r2, r3
   13d6c:	bls	13db0 <argp_parse@@Base+0x2674>
   13d70:	add	r1, r3, #1
   13d74:	mov	r2, #32
   13d78:	str	r1, [r4, #28]
   13d7c:	strb	r2, [r3]
   13d80:	pop	{r4, r5, r6, pc}
   13d84:	bl	17264 <argp_error@@Base+0x13cc>
   13d88:	ldr	r3, [r4, #28]
   13d8c:	mov	r2, r3
   13d90:	b	13d2c <argp_parse@@Base+0x25f0>
   13d94:	mov	r1, #1
   13d98:	mov	r0, r4
   13d9c:	bl	178f4 <argp_error@@Base+0x1a5c>
   13da0:	cmp	r0, #0
   13da4:	popeq	{r4, r5, r6, pc}
   13da8:	ldr	r2, [r4, #28]
   13dac:	b	13d50 <argp_parse@@Base+0x2614>
   13db0:	mov	r1, #1
   13db4:	mov	r0, r4
   13db8:	bl	178f4 <argp_error@@Base+0x1a5c>
   13dbc:	cmp	r0, #0
   13dc0:	popeq	{r4, r5, r6, pc}
   13dc4:	ldr	r3, [r4, #28]
   13dc8:	b	13d70 <argp_parse@@Base+0x2634>
   13dcc:	push	{r4, r5, r6, lr}
   13dd0:	ldr	r5, [r0, #8]
   13dd4:	ldr	r2, [r0, #12]
   13dd8:	ldr	ip, [r1, #12]
   13ddc:	cmp	r5, #0
   13de0:	orr	r2, r2, ip
   13de4:	beq	13e4c <argp_parse@@Base+0x2710>
   13de8:	tst	r2, #16
   13dec:	bne	13e28 <argp_parse@@Base+0x26ec>
   13df0:	tst	r2, #1
   13df4:	mov	r6, r3
   13df8:	mov	r4, r0
   13dfc:	bne	13e30 <argp_parse@@Base+0x26f4>
   13e00:	mov	r0, r5
   13e04:	bl	10ea4 <strlen@plt>
   13e08:	add	r1, r0, #6
   13e0c:	mov	r0, r6
   13e10:	bl	13d04 <argp_parse@@Base+0x25c8>
   13e14:	mov	r3, r5
   13e18:	ldr	r2, [r4, #4]
   13e1c:	mov	r0, r6
   13e20:	ldr	r1, [pc, #56]	; 13e60 <argp_parse@@Base+0x2724>
   13e24:	bl	17914 <argp_error@@Base+0x1a7c>
   13e28:	mov	r0, #0
   13e2c:	pop	{r4, r5, r6, pc}
   13e30:	ldr	r2, [r0, #4]
   13e34:	mov	r3, r5
   13e38:	mov	r0, r6
   13e3c:	ldr	r1, [pc, #32]	; 13e64 <argp_parse@@Base+0x2728>
   13e40:	bl	17914 <argp_error@@Base+0x1a7c>
   13e44:	mov	r0, #0
   13e48:	pop	{r4, r5, r6, pc}
   13e4c:	ldr	r5, [r1, #8]
   13e50:	cmp	r5, #0
   13e54:	bne	13de8 <argp_parse@@Base+0x26ac>
   13e58:	mov	r0, #0
   13e5c:	pop	{r4, r5, r6, pc}
   13e60:	andeq	r8, r1, r0, asr #13
   13e64:			; <UNDEFINED> instruction: 0x000186b4
   13e68:	mov	ip, r0
   13e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e70:	mov	r8, r2
   13e74:	sub	sp, sp, #28
   13e78:	mov	r2, ip
   13e7c:	ldr	ip, [ip, #16]
   13e80:	mov	r9, r1
   13e84:	ldr	r1, [r0, #8]
   13e88:	str	ip, [sp, #8]
   13e8c:	ldr	ip, [r8]
   13e90:	str	r1, [sp, #16]
   13e94:	mov	r0, r1
   13e98:	mov	r4, r3
   13e9c:	ldr	r1, [pc, #456]	; 1406c <argp_parse@@Base+0x2930>
   13ea0:	mov	r3, r9
   13ea4:	mov	r5, ip
   13ea8:	str	ip, [sp, #20]
   13eac:	ldr	r6, [sp, #64]	; 0x40
   13eb0:	bl	12f30 <argp_parse@@Base+0x17f4>
   13eb4:	subs	r3, r0, #0
   13eb8:	str	r3, [sp, #12]
   13ebc:	beq	14018 <argp_parse@@Base+0x28dc>
   13ec0:	mov	r1, #10
   13ec4:	bl	10d90 <strchrnul@plt>
   13ec8:	ldrb	sl, [r0]
   13ecc:	mov	r7, r0
   13ed0:	cmp	sl, #0
   13ed4:	bne	13fd4 <argp_parse@@Base+0x2898>
   13ed8:	ldr	r5, [sp, #12]
   13edc:	add	r1, r7, #1
   13ee0:	sub	r1, r1, r5
   13ee4:	mov	r0, r6
   13ee8:	bl	13d04 <argp_parse@@Base+0x25c8>
   13eec:	ldr	r0, [r6, #28]
   13ef0:	sub	fp, r7, r5
   13ef4:	ldr	r1, [r6, #32]
   13ef8:	add	r2, r0, fp
   13efc:	cmp	r1, r2
   13f00:	bcs	13f1c <argp_parse@@Base+0x27e0>
   13f04:	mov	r1, fp
   13f08:	mov	r0, r6
   13f0c:	bl	178f4 <argp_error@@Base+0x1a5c>
   13f10:	cmp	r0, #0
   13f14:	beq	13f34 <argp_parse@@Base+0x27f8>
   13f18:	ldr	r0, [r6, #28]
   13f1c:	mov	r2, fp
   13f20:	mov	r1, r5
   13f24:	bl	10dc0 <memcpy@plt>
   13f28:	ldr	r3, [r6, #28]
   13f2c:	add	fp, r3, fp
   13f30:	str	fp, [r6, #28]
   13f34:	ldr	r3, [sp, #16]
   13f38:	ldr	r2, [sp, #12]
   13f3c:	cmp	r3, r2
   13f40:	beq	13f4c <argp_parse@@Base+0x2810>
   13f44:	mov	r0, r2
   13f48:	bl	125d4 <argp_parse@@Base+0xe98>
   13f4c:	ldr	r3, [sp, #8]
   13f50:	cmp	r3, #0
   13f54:	beq	13f98 <argp_parse@@Base+0x285c>
   13f58:	ldr	r2, [r3]
   13f5c:	cmp	r2, #0
   13f60:	beq	13f98 <argp_parse@@Base+0x285c>
   13f64:	ldr	r5, [sp, #8]
   13f68:	mov	r3, r4
   13f6c:	mov	r0, r2
   13f70:	str	r6, [sp]
   13f74:	mov	r2, r8
   13f78:	mov	r1, r9
   13f7c:	bl	13e68 <argp_parse@@Base+0x272c>
   13f80:	ldr	r2, [r5, #16]!
   13f84:	cmp	r2, #0
   13f88:	clz	r3, r0
   13f8c:	lsr	r3, r3, #5
   13f90:	bne	13f6c <argp_parse@@Base+0x2830>
   13f94:	mov	r4, r3
   13f98:	cmp	r4, #0
   13f9c:	moveq	sl, #0
   13fa0:	andne	sl, sl, #1
   13fa4:	cmp	sl, #0
   13fa8:	beq	14038 <argp_parse@@Base+0x28fc>
   13fac:	ldrb	r0, [r7]
   13fb0:	cmp	r0, #0
   13fb4:	bne	14048 <argp_parse@@Base+0x290c>
   13fb8:	ldr	r3, [sp, #20]
   13fbc:	ldrb	r4, [r3]
   13fc0:	cmp	r4, #0
   13fc4:	moveq	r0, r4
   13fc8:	strbne	r0, [r3]
   13fcc:	add	sp, sp, #28
   13fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fd4:	ldrb	sl, [r5]
   13fd8:	cmp	sl, #0
   13fdc:	beq	14064 <argp_parse@@Base+0x2928>
   13fe0:	mov	fp, #0
   13fe4:	add	r5, r0, #1
   13fe8:	add	fp, fp, #1
   13fec:	mov	r0, r5
   13ff0:	mov	r1, #10
   13ff4:	bl	10d90 <strchrnul@plt>
   13ff8:	cmp	fp, sl
   13ffc:	bne	13fe4 <argp_parse@@Base+0x28a8>
   14000:	mov	r7, r0
   14004:	ldr	r2, [r8]
   14008:	mov	sl, #1
   1400c:	add	r2, r2, sl
   14010:	str	r2, [r8]
   14014:	b	13edc <argp_parse@@Base+0x27a0>
   14018:	ldr	r3, [sp, #8]
   1401c:	cmp	r3, #0
   14020:	beq	14038 <argp_parse@@Base+0x28fc>
   14024:	ldr	r2, [r3]
   14028:	cmp	r2, #0
   1402c:	ldrne	r7, [sp, #12]
   14030:	movne	sl, r7
   14034:	bne	13f64 <argp_parse@@Base+0x2828>
   14038:	clz	r0, r4
   1403c:	lsr	r0, r0, #5
   14040:	add	sp, sp, #28
   14044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14048:	ldr	r2, [sp, #20]
   1404c:	mov	r0, #1
   14050:	ldrb	r3, [r2]
   14054:	add	r3, r3, r0
   14058:	strb	r3, [r2]
   1405c:	add	sp, sp, #28
   14060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14064:	ldr	r5, [sp, #12]
   14068:	b	14004 <argp_parse@@Base+0x28c8>
   1406c:	andeq	r0, r0, #6
   14070:	ldr	r2, [r0, #8]
   14074:	cmp	r2, #0
   14078:	beq	14084 <argp_parse@@Base+0x2948>
   1407c:	mov	r0, #0
   14080:	bx	lr
   14084:	ldr	r2, [r1, #8]
   14088:	cmp	r2, #0
   1408c:	bne	1407c <argp_parse@@Base+0x2940>
   14090:	ldr	r1, [r1, #12]
   14094:	ldr	r2, [r0, #12]
   14098:	orr	r2, r2, r1
   1409c:	tst	r2, #16
   140a0:	ldreq	r2, [r3]
   140a4:	ldreq	r1, [r0, #4]
   140a8:	addeq	r0, r2, #1
   140ac:	streq	r0, [r3]
   140b0:	strbeq	r1, [r2]
   140b4:	b	1407c <argp_parse@@Base+0x2940>
   140b8:	mov	r3, r0
   140bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140c0:	sub	sp, sp, #52	; 0x34
   140c4:	ldr	r2, [r3, #16]
   140c8:	str	r0, [sp, #24]
   140cc:	mov	r0, #16
   140d0:	ldr	r4, [r3]
   140d4:	str	r1, [sp, #28]
   140d8:	str	r2, [sp, #8]
   140dc:	bl	12c70 <argp_parse@@Base+0x1534>
   140e0:	subs	r3, r0, #0
   140e4:	str	r3, [sp, #20]
   140e8:	beq	1474c <argp_parse@@Base+0x3010>
   140ec:	ldr	r2, [sp, #20]
   140f0:	mov	r3, #0
   140f4:	cmp	r4, #0
   140f8:	str	r3, [r2, #4]
   140fc:	str	r3, [r2, #12]
   14100:	beq	14304 <argp_parse@@Base+0x2bc8>
   14104:	ldr	r5, [r4, #12]
   14108:	ands	r5, r5, #4
   1410c:	bne	14760 <argp_parse@@Base+0x3024>
   14110:	add	r6, r4, #24
   14114:	mov	r9, r5
   14118:	mov	sl, r5
   1411c:	mov	fp, r2
   14120:	b	14164 <argp_parse@@Base+0x2a28>
   14124:	ldr	r3, [r6, #-12]
   14128:	tst	r3, #4
   1412c:	addeq	r9, r9, #1
   14130:	streq	r9, [fp, #4]
   14134:	tst	r3, #8
   14138:	bne	14160 <argp_parse@@Base+0x2a24>
   1413c:	sub	r3, r8, #1
   14140:	cmp	r3, #254	; 0xfe
   14144:	bhi	14160 <argp_parse@@Base+0x2a24>
   14148:	bl	10e8c <__ctype_b_loc@plt>
   1414c:	lsl	r8, r8, #1
   14150:	ldr	r3, [r0]
   14154:	ldrh	r3, [r3, r8]
   14158:	tst	r3, #16384	; 0x4000
   1415c:	addne	sl, sl, #1
   14160:	add	r6, r6, #24
   14164:	ldr	r8, [r6, #-20]	; 0xffffffec
   14168:	cmp	r8, #0
   1416c:	bne	14124 <argp_parse@@Base+0x29e8>
   14170:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14174:	cmp	r3, #0
   14178:	bne	14124 <argp_parse@@Base+0x29e8>
   1417c:	ldr	r3, [r6, #-8]
   14180:	cmp	r3, #0
   14184:	bne	14124 <argp_parse@@Base+0x29e8>
   14188:	ldr	r7, [r6, #-4]
   1418c:	cmp	r7, #0
   14190:	bne	14124 <argp_parse@@Base+0x29e8>
   14194:	rsb	r9, r9, r9, lsl #3
   14198:	lsl	r0, r9, #2
   1419c:	bl	12c70 <argp_parse@@Base+0x1534>
   141a0:	ldr	r6, [sp, #20]
   141a4:	str	r0, [r6]
   141a8:	add	r0, sl, #1
   141ac:	bl	12c70 <argp_parse@@Base+0x1534>
   141b0:	ldr	r8, [r6]
   141b4:	mov	r3, r6
   141b8:	cmp	r0, #0
   141bc:	cmpne	r8, #0
   141c0:	mov	sl, r0
   141c4:	str	r0, [r3, #8]
   141c8:	beq	14710 <argp_parse@@Base+0x2fd4>
   141cc:	ldr	r2, [sp, #20]
   141d0:	ldr	r3, [pc, #1436]	; 14774 <argp_parse@@Base+0x3038>
   141d4:	ldr	r2, [r2, #4]
   141d8:	cmp	r2, r3
   141dc:	bhi	146fc <argp_parse@@Base+0x2fc0>
   141e0:	add	r8, r8, #28
   141e4:	mov	r2, r8
   141e8:	ldr	r3, [r4, #4]
   141ec:	mov	r8, sl
   141f0:	mov	r9, r2
   141f4:	cmp	r3, #0
   141f8:	bne	14208 <argp_parse@@Base+0x2acc>
   141fc:	ldr	r2, [r4]
   14200:	cmp	r2, #0
   14204:	beq	146b4 <argp_parse@@Base+0x2f78>
   14208:	str	r7, [r9, #-24]	; 0xffffffe8
   1420c:	ldr	r6, [r4, #20]
   14210:	str	r4, [r9, #-28]	; 0xffffffe4
   14214:	cmp	r6, #0
   14218:	str	sl, [r9, #-20]	; 0xffffffec
   1421c:	bne	14234 <argp_parse@@Base+0x2af8>
   14220:	ldr	r2, [r4]
   14224:	cmp	r2, #0
   14228:	cmpeq	r3, #0
   1422c:	movne	r6, r5
   14230:	beq	146d8 <argp_parse@@Base+0x2f9c>
   14234:	ldr	r1, [sp, #28]
   14238:	str	r6, [r9, #-16]
   1423c:	mov	r5, r4
   14240:	ldr	r2, [r4, #12]
   14244:	mov	r3, r7
   14248:	str	r1, [r9, #-12]
   1424c:	ldr	r1, [sp, #24]
   14250:	str	r1, [r9, #-8]
   14254:	add	r3, r3, #1
   14258:	tst	r2, #8
   1425c:	str	r3, [r9, #-24]	; 0xffffffe8
   14260:	bne	142cc <argp_parse@@Base+0x2b90>
   14264:	ldr	fp, [r4, #4]
   14268:	sub	r3, fp, #1
   1426c:	cmp	r3, #254	; 0xfe
   14270:	bhi	142cc <argp_parse@@Base+0x2b90>
   14274:	bl	10e8c <__ctype_b_loc@plt>
   14278:	lsl	r3, fp, #1
   1427c:	ldr	r2, [r0]
   14280:	ldrh	r3, [r2, r3]
   14284:	tst	r3, #16384	; 0x4000
   14288:	beq	142cc <argp_parse@@Base+0x2b90>
   1428c:	cmp	r8, sl
   14290:	uxtb	r1, fp
   14294:	bcs	142c4 <argp_parse@@Base+0x2b88>
   14298:	ldrb	r3, [r8]
   1429c:	cmp	r3, r1
   142a0:	movne	r3, r8
   142a4:	subne	r0, sl, #1
   142a8:	bne	142bc <argp_parse@@Base+0x2b80>
   142ac:	b	142cc <argp_parse@@Base+0x2b90>
   142b0:	ldrb	r2, [r3, #1]!
   142b4:	cmp	r2, r1
   142b8:	beq	142cc <argp_parse@@Base+0x2b90>
   142bc:	cmp	r0, r3
   142c0:	bne	142b0 <argp_parse@@Base+0x2b74>
   142c4:	strb	r1, [sl]
   142c8:	add	sl, sl, #1
   142cc:	ldr	r3, [r5, #28]
   142d0:	add	r4, r4, #24
   142d4:	cmp	r3, #0
   142d8:	bne	142e8 <argp_parse@@Base+0x2bac>
   142dc:	ldr	r2, [r5, #24]
   142e0:	cmp	r2, #0
   142e4:	beq	14690 <argp_parse@@Base+0x2f54>
   142e8:	ldr	r2, [r5, #36]	; 0x24
   142ec:	tst	r2, #4
   142f0:	beq	146a8 <argp_parse@@Base+0x2f6c>
   142f4:	ldr	r3, [r9, #-24]	; 0xffffffe8
   142f8:	mov	r5, r4
   142fc:	b	14254 <argp_parse@@Base+0x2b18>
   14300:	strb	r3, [sl]
   14304:	ldr	r3, [sp, #8]
   14308:	cmp	r3, #0
   1430c:	beq	14448 <argp_parse@@Base+0x2d0c>
   14310:	ldr	r3, [r3]
   14314:	cmp	r3, #0
   14318:	beq	14448 <argp_parse@@Base+0x2d0c>
   1431c:	ldr	r3, [sp, #20]
   14320:	add	r3, r3, #12
   14324:	str	r3, [sp, #44]	; 0x2c
   14328:	ldr	r3, [sp, #8]
   1432c:	ldr	r5, [r3, #12]
   14330:	cmp	r5, #0
   14334:	ldrne	r6, [r3, #8]
   14338:	bne	1434c <argp_parse@@Base+0x2c10>
   1433c:	ldr	r3, [sp, #8]
   14340:	ldr	r6, [r3, #8]
   14344:	cmp	r6, #0
   14348:	beq	14670 <argp_parse@@Base+0x2f34>
   1434c:	ldr	r7, [sp, #24]
   14350:	ldr	r2, [sp, #8]
   14354:	mov	r0, #28
   14358:	ldr	r3, [r7, #16]
   1435c:	sub	r3, r2, r3
   14360:	asr	r4, r3, #4
   14364:	bl	12c70 <argp_parse@@Base+0x1534>
   14368:	subs	r1, r0, #0
   1436c:	beq	143ac <argp_parse@@Base+0x2c70>
   14370:	ldr	r3, [sp, #28]
   14374:	ldr	r0, [sp, #20]
   14378:	cmp	r3, #0
   1437c:	str	r3, [r1, #12]
   14380:	ldrne	r3, [r3, #20]
   14384:	ldr	r2, [r0, #12]
   14388:	addne	r3, r3, #1
   1438c:	moveq	r3, #0
   14390:	str	r5, [r1, #8]
   14394:	str	r6, [r1]
   14398:	str	r4, [r1, #4]
   1439c:	str	r7, [r1, #16]
   143a0:	str	r3, [r1, #20]
   143a4:	str	r2, [r1, #24]
   143a8:	str	r1, [r0, #12]
   143ac:	ldr	r3, [sp, #8]
   143b0:	ldr	r0, [r3]
   143b4:	bl	140b8 <argp_parse@@Base+0x297c>
   143b8:	ldr	r3, [sp, #20]
   143bc:	ldr	r2, [r3, #12]
   143c0:	cmp	r2, #0
   143c4:	str	r0, [sp, #16]
   143c8:	bne	143d4 <argp_parse@@Base+0x2c98>
   143cc:	b	14678 <argp_parse@@Base+0x2f3c>
   143d0:	mov	r2, r3
   143d4:	ldr	r3, [r2, #24]
   143d8:	cmp	r3, #0
   143dc:	bne	143d0 <argp_parse@@Base+0x2c94>
   143e0:	add	r2, r2, #24
   143e4:	ldr	r0, [sp, #16]
   143e8:	mov	ip, r0
   143ec:	ldr	r3, [r0, #4]
   143f0:	ldr	r1, [r0, #12]
   143f4:	cmp	r3, #0
   143f8:	str	r1, [r2]
   143fc:	mov	r2, #0
   14400:	str	r2, [r0, #12]
   14404:	beq	1442c <argp_parse@@Base+0x2cf0>
   14408:	ldr	lr, [sp, #20]
   1440c:	ldr	r2, [lr, #4]
   14410:	cmp	r2, #0
   14414:	bne	14454 <argp_parse@@Base+0x2d18>
   14418:	ldr	r0, [r0]
   1441c:	ldr	r1, [ip, #8]
   14420:	stm	lr, {r0, r3}
   14424:	str	r1, [lr, #8]
   14428:	str	r2, [ip, #4]
   1442c:	ldr	r0, [sp, #16]
   14430:	bl	12e50 <argp_parse@@Base+0x1714>
   14434:	ldr	r2, [sp, #8]
   14438:	ldr	r3, [r2, #16]!
   1443c:	cmp	r3, #0
   14440:	str	r2, [sp, #8]
   14444:	bne	14328 <argp_parse@@Base+0x2bec>
   14448:	ldr	r0, [sp, #20]
   1444c:	add	sp, sp, #52	; 0x34
   14450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14454:	add	r3, r3, r2
   14458:	str	r3, [sp, #36]	; 0x24
   1445c:	rsb	r0, r3, r3, lsl #3
   14460:	lsl	r0, r0, #2
   14464:	bl	12c70 <argp_parse@@Base+0x1534>
   14468:	ldr	r3, [sp, #20]
   1446c:	mov	r4, r0
   14470:	str	r0, [sp, #32]
   14474:	ldr	r0, [r3, #8]
   14478:	bl	10ea4 <strlen@plt>
   1447c:	ldr	r3, [sp, #16]
   14480:	mov	r8, r0
   14484:	ldr	r0, [r3, #8]
   14488:	bl	10ea4 <strlen@plt>
   1448c:	add	r0, r8, r0
   14490:	add	r0, r0, #1
   14494:	bl	12c70 <argp_parse@@Base+0x1534>
   14498:	cmp	r4, #0
   1449c:	cmpne	r0, #0
   144a0:	mov	r7, r0
   144a4:	beq	14724 <argp_parse@@Base+0x2fe8>
   144a8:	ldr	r3, [sp, #36]	; 0x24
   144ac:	ldr	r2, [pc, #704]	; 14774 <argp_parse@@Base+0x3038>
   144b0:	cmp	r3, r2
   144b4:	bhi	14738 <argp_parse@@Base+0x2ffc>
   144b8:	ldr	r5, [sp, #20]
   144bc:	ldr	r9, [sp, #32]
   144c0:	ldm	r5, {r3, r4}
   144c4:	mov	r0, r9
   144c8:	rsb	r6, r4, r4, lsl #3
   144cc:	mov	r1, r3
   144d0:	lsl	r6, r6, #2
   144d4:	mov	r2, r6
   144d8:	str	r3, [sp, #40]	; 0x28
   144dc:	bl	10e80 <mempcpy@plt>
   144e0:	ldr	r3, [sp, #16]
   144e4:	ldr	r1, [r3, #4]
   144e8:	mov	ip, r1
   144ec:	str	r1, [sp, #4]
   144f0:	rsb	r2, ip, ip, lsl #3
   144f4:	ldr	r1, [r3]
   144f8:	lsl	r2, r2, #2
   144fc:	bl	10dc0 <memcpy@plt>
   14500:	ldr	r5, [r5, #8]
   14504:	mov	r2, r8
   14508:	mov	r1, r5
   1450c:	mov	r0, r7
   14510:	bl	10dc0 <memcpy@plt>
   14514:	cmp	r4, #0
   14518:	beq	14688 <argp_parse@@Base+0x2f4c>
   1451c:	mov	r2, r9
   14520:	ldr	r3, [r2, #8]
   14524:	subs	r4, r4, #1
   14528:	sub	r3, r3, r5
   1452c:	add	r3, r7, r3
   14530:	str	r3, [r2, #8]
   14534:	add	r2, r2, #28
   14538:	bne	14520 <argp_parse@@Base+0x2de4>
   1453c:	ldr	r3, [sp, #32]
   14540:	add	r1, r3, r6
   14544:	ldr	r3, [sp, #4]
   14548:	ldr	r2, [sp, #16]
   1454c:	cmp	r3, #0
   14550:	add	r3, r7, r8
   14554:	str	r3, [sp, #12]
   14558:	ldr	sl, [r2, #8]
   1455c:	beq	14680 <argp_parse@@Base+0x2f44>
   14560:	sub	r8, r3, #1
   14564:	add	fp, r1, #28
   14568:	mov	r9, r3
   1456c:	mov	r3, r8
   14570:	mov	r8, fp
   14574:	mov	fp, sl
   14578:	mov	sl, r3
   1457c:	ldr	r5, [r8, #-24]	; 0xffffffe8
   14580:	str	r9, [r8, #-20]	; 0xffffffec
   14584:	cmp	r5, #0
   14588:	ldr	r4, [r8, #-28]	; 0xffffffe4
   1458c:	bne	145a0 <argp_parse@@Base+0x2e64>
   14590:	b	1462c <argp_parse@@Base+0x2ef0>
   14594:	subs	r5, r5, #1
   14598:	add	r4, r4, #24
   1459c:	beq	1462c <argp_parse@@Base+0x2ef0>
   145a0:	ldr	r3, [r4, #12]
   145a4:	tst	r3, #8
   145a8:	bne	14594 <argp_parse@@Base+0x2e58>
   145ac:	ldr	r6, [r4, #4]
   145b0:	sub	r3, r6, #1
   145b4:	cmp	r3, #254	; 0xfe
   145b8:	bhi	14594 <argp_parse@@Base+0x2e58>
   145bc:	bl	10e8c <__ctype_b_loc@plt>
   145c0:	lsl	r3, r6, #1
   145c4:	ldr	r2, [r0]
   145c8:	ldrh	r3, [r2, r3]
   145cc:	tst	r3, #16384	; 0x4000
   145d0:	beq	14594 <argp_parse@@Base+0x2e58>
   145d4:	ldrb	r1, [fp]
   145d8:	cmp	r1, r6
   145dc:	bne	14594 <argp_parse@@Base+0x2e58>
   145e0:	ldr	r3, [sp, #12]
   145e4:	cmp	r7, r3
   145e8:	bcs	14614 <argp_parse@@Base+0x2ed8>
   145ec:	ldrb	r3, [r7]
   145f0:	cmp	r3, r1
   145f4:	movne	r3, r7
   145f8:	bne	1460c <argp_parse@@Base+0x2ed0>
   145fc:	b	1461c <argp_parse@@Base+0x2ee0>
   14600:	ldrb	r2, [r3, #1]!
   14604:	cmp	r2, r1
   14608:	beq	1461c <argp_parse@@Base+0x2ee0>
   1460c:	cmp	sl, r3
   14610:	bne	14600 <argp_parse@@Base+0x2ec4>
   14614:	strb	r1, [r9]
   14618:	add	r9, r9, #1
   1461c:	subs	r5, r5, #1
   14620:	add	fp, fp, #1
   14624:	add	r4, r4, #24
   14628:	bne	145a0 <argp_parse@@Base+0x2e64>
   1462c:	ldr	r3, [sp, #4]
   14630:	add	r8, r8, #28
   14634:	subs	r3, r3, #1
   14638:	str	r3, [sp, #4]
   1463c:	bne	1457c <argp_parse@@Base+0x2e40>
   14640:	mov	r3, #0
   14644:	strb	r3, [r9]
   14648:	ldr	r0, [sp, #40]	; 0x28
   1464c:	bl	125d4 <argp_parse@@Base+0xe98>
   14650:	ldr	r4, [sp, #20]
   14654:	ldr	r0, [r4, #8]
   14658:	bl	125d4 <argp_parse@@Base+0xe98>
   1465c:	ldr	r2, [sp, #32]
   14660:	str	r2, [r4]
   14664:	ldr	r2, [sp, #36]	; 0x24
   14668:	stmib	r4, {r2, r7}
   1466c:	b	1442c <argp_parse@@Base+0x2cf0>
   14670:	ldr	r1, [sp, #28]
   14674:	b	143ac <argp_parse@@Base+0x2c70>
   14678:	ldr	r2, [sp, #44]	; 0x2c
   1467c:	b	143e4 <argp_parse@@Base+0x2ca8>
   14680:	ldr	r9, [sp, #12]
   14684:	b	14640 <argp_parse@@Base+0x2f04>
   14688:	ldr	r1, [sp, #32]
   1468c:	b	14544 <argp_parse@@Base+0x2e08>
   14690:	ldr	r2, [r5, #40]	; 0x28
   14694:	cmp	r2, #0
   14698:	bne	142e8 <argp_parse@@Base+0x2bac>
   1469c:	ldr	r2, [r5, #44]	; 0x2c
   146a0:	cmp	r2, #0
   146a4:	bne	142e8 <argp_parse@@Base+0x2bac>
   146a8:	add	r9, r9, #28
   146ac:	mov	r5, r6
   146b0:	b	141f4 <argp_parse@@Base+0x2ab8>
   146b4:	ldr	r2, [r4, #16]
   146b8:	cmp	r2, #0
   146bc:	beq	146e0 <argp_parse@@Base+0x2fa4>
   146c0:	str	r3, [r9, #-24]	; 0xffffffe8
   146c4:	ldr	r6, [r4, #20]
   146c8:	str	r4, [r9, #-28]	; 0xffffffe4
   146cc:	cmp	r6, #0
   146d0:	str	sl, [r9, #-20]	; 0xffffffec
   146d4:	bne	14234 <argp_parse@@Base+0x2af8>
   146d8:	add	r6, r5, #1
   146dc:	b	14234 <argp_parse@@Base+0x2af8>
   146e0:	ldr	r6, [r4, #20]
   146e4:	cmp	r6, #0
   146e8:	beq	14300 <argp_parse@@Base+0x2bc4>
   146ec:	str	r4, [r9, #-28]	; 0xffffffe4
   146f0:	str	r3, [r9, #-24]	; 0xffffffe8
   146f4:	str	sl, [r9, #-20]	; 0xffffffec
   146f8:	b	14234 <argp_parse@@Base+0x2af8>
   146fc:	ldr	r3, [pc, #116]	; 14778 <argp_parse@@Base+0x303c>
   14700:	mov	r2, #476	; 0x1dc
   14704:	ldr	r1, [pc, #112]	; 1477c <argp_parse@@Base+0x3040>
   14708:	ldr	r0, [pc, #112]	; 14780 <argp_parse@@Base+0x3044>
   1470c:	bl	10f7c <__assert_fail@plt>
   14710:	ldr	r3, [pc, #96]	; 14778 <argp_parse@@Base+0x303c>
   14714:	ldr	r2, [pc, #104]	; 14784 <argp_parse@@Base+0x3048>
   14718:	ldr	r1, [pc, #92]	; 1477c <argp_parse@@Base+0x3040>
   1471c:	ldr	r0, [pc, #100]	; 14788 <argp_parse@@Base+0x304c>
   14720:	bl	10f7c <__assert_fail@plt>
   14724:	ldr	r3, [pc, #96]	; 1478c <argp_parse@@Base+0x3050>
   14728:	ldr	r2, [pc, #96]	; 14790 <argp_parse@@Base+0x3054>
   1472c:	ldr	r1, [pc, #72]	; 1477c <argp_parse@@Base+0x3040>
   14730:	ldr	r0, [pc, #92]	; 14794 <argp_parse@@Base+0x3058>
   14734:	bl	10f7c <__assert_fail@plt>
   14738:	ldr	r3, [pc, #76]	; 1478c <argp_parse@@Base+0x3050>
   1473c:	mov	r2, #972	; 0x3cc
   14740:	ldr	r1, [pc, #52]	; 1477c <argp_parse@@Base+0x3040>
   14744:	ldr	r0, [pc, #76]	; 14798 <argp_parse@@Base+0x305c>
   14748:	bl	10f7c <__assert_fail@plt>
   1474c:	ldr	r3, [pc, #36]	; 14778 <argp_parse@@Base+0x303c>
   14750:	ldr	r2, [pc, #68]	; 1479c <argp_parse@@Base+0x3060>
   14754:	ldr	r1, [pc, #32]	; 1477c <argp_parse@@Base+0x3040>
   14758:	ldr	r0, [pc, #64]	; 147a0 <argp_parse@@Base+0x3064>
   1475c:	bl	10f7c <__assert_fail@plt>
   14760:	ldr	r3, [pc, #16]	; 14778 <argp_parse@@Base+0x303c>
   14764:	mov	r2, #460	; 0x1cc
   14768:	ldr	r1, [pc, #12]	; 1477c <argp_parse@@Base+0x3040>
   1476c:	ldr	r0, [pc, #48]	; 147a4 <argp_parse@@Base+0x3068>
   14770:	bl	10f7c <__assert_fail@plt>
   14774:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14778:	andeq	r8, r1, r8, lsl #12
   1477c:	andeq	r8, r1, ip, asr #13
   14780:	andeq	r8, r1, r0, lsl r7
   14784:	ldrdeq	r0, [r0], -sl
   14788:	andeq	r8, r1, ip, ror #13
   1478c:	andeq	r8, r1, r4, lsl r6
   14790:	andeq	r0, r0, sl, asr #7
   14794:	andeq	r8, r1, ip, asr #14
   14798:	andeq	r8, r1, r8, ror #14
   1479c:	andeq	r0, r0, r2, asr #3
   147a0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   147a4:	ldrdeq	r8, [r1], -ip
   147a8:	cmp	r1, #0
   147ac:	push	{r4, r5, r6, r7, r8, lr}
   147b0:	beq	14828 <argp_parse@@Base+0x30ec>
   147b4:	sub	r7, r1, #1
   147b8:	mov	r8, r2
   147bc:	mov	r6, r0
   147c0:	ldm	r6, {r4, r5}
   147c4:	cmp	r5, #0
   147c8:	sub	r5, r5, #1
   147cc:	beq	1480c <argp_parse@@Base+0x30d0>
   147d0:	add	r4, r4, #24
   147d4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   147d8:	mov	r1, r8
   147dc:	subs	r0, r3, #0
   147e0:	sub	r5, r5, #1
   147e4:	beq	14800 <argp_parse@@Base+0x30c4>
   147e8:	ldr	r3, [r4, #-12]
   147ec:	tst	r3, #2
   147f0:	bne	14800 <argp_parse@@Base+0x30c4>
   147f4:	bl	10d60 <strcmp@plt>
   147f8:	cmp	r0, #0
   147fc:	beq	14820 <argp_parse@@Base+0x30e4>
   14800:	cmn	r5, #1
   14804:	add	r4, r4, #24
   14808:	bne	147d4 <argp_parse@@Base+0x3098>
   1480c:	sub	r7, r7, #1
   14810:	cmn	r7, #1
   14814:	add	r6, r6, #28
   14818:	bne	147c0 <argp_parse@@Base+0x3084>
   1481c:	mov	r6, #0
   14820:	mov	r0, r6
   14824:	pop	{r4, r5, r6, r7, r8, pc}
   14828:	mov	r6, r1
   1482c:	b	14820 <argp_parse@@Base+0x30e4>
   14830:	push	{r4, r5, r6, lr}
   14834:	subs	r4, r0, #0
   14838:	mov	r5, r1
   1483c:	beq	14850 <argp_parse@@Base+0x3114>
   14840:	mov	r1, #10
   14844:	bl	10eb0 <strchr@plt>
   14848:	adds	r4, r0, #0
   1484c:	movne	r4, #1
   14850:	cmp	r5, #0
   14854:	beq	14880 <argp_parse@@Base+0x3144>
   14858:	ldr	r3, [r5]
   1485c:	cmp	r3, #0
   14860:	beq	14880 <argp_parse@@Base+0x3144>
   14864:	ldr	r1, [r3, #16]
   14868:	ldr	r0, [r3, #8]
   1486c:	bl	14830 <argp_parse@@Base+0x30f4>
   14870:	ldr	r3, [r5, #16]!
   14874:	cmp	r3, #0
   14878:	add	r4, r4, r0
   1487c:	bne	14864 <argp_parse@@Base+0x3128>
   14880:	mov	r0, r4
   14884:	pop	{r4, r5, r6, pc}
   14888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1488c:	add	fp, sp, #32
   14890:	sub	sp, sp, #12
   14894:	ldr	r5, [r0, #4]
   14898:	cmp	r5, #0
   1489c:	bne	148a8 <argp_parse@@Base+0x316c>
   148a0:	sub	sp, fp, #32
   148a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a8:	mov	r6, r0
   148ac:	ldr	r0, [r0, #8]
   148b0:	mov	r9, r1
   148b4:	bl	10ea4 <strlen@plt>
   148b8:	ldr	r8, [pc, #360]	; 14a28 <argp_parse@@Base+0x32ec>
   148bc:	ldr	r4, [r6]
   148c0:	sub	r7, fp, #36	; 0x24
   148c4:	add	r3, r0, #15
   148c8:	bic	r3, r3, #7
   148cc:	sub	sp, sp, r3
   148d0:	mov	sl, sp
   148d4:	str	sp, [r7, #-4]!
   148d8:	ldr	r2, [r4, #20]
   148dc:	mov	r0, r4
   148e0:	mov	r3, r7
   148e4:	mov	r1, r8
   148e8:	ldr	r2, [r2, #24]
   148ec:	bl	12c9c <argp_parse@@Base+0x1560>
   148f0:	subs	r5, r5, #1
   148f4:	add	r4, r4, #28
   148f8:	bne	148d8 <argp_parse@@Base+0x319c>
   148fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14900:	cmp	sl, r3
   14904:	bcc	14a08 <argp_parse@@Base+0x32cc>
   14908:	ldm	r6, {r4, r5}
   1490c:	cmp	r5, #0
   14910:	beq	148a0 <argp_parse@@Base+0x3164>
   14914:	ldr	r7, [pc, #272]	; 14a2c <argp_parse@@Base+0x32f0>
   14918:	ldr	r2, [r4, #20]
   1491c:	mov	r0, r4
   14920:	mov	r3, r9
   14924:	mov	r1, r7
   14928:	ldr	r2, [r2, #24]
   1492c:	bl	12c9c <argp_parse@@Base+0x1560>
   14930:	subs	r5, r5, #1
   14934:	add	r4, r4, #28
   14938:	bne	14918 <argp_parse@@Base+0x31dc>
   1493c:	ldm	r6, {r7, r8}
   14940:	cmp	r8, #0
   14944:	beq	148a0 <argp_parse@@Base+0x3164>
   14948:	ldr	sl, [pc, #224]	; 14a30 <argp_parse@@Base+0x32f4>
   1494c:	add	r7, r7, #28
   14950:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14954:	ldr	r4, [r7, #-28]	; 0xffffffe4
   14958:	cmp	r5, #0
   1495c:	movne	r6, r4
   14960:	bne	14974 <argp_parse@@Base+0x3238>
   14964:	b	149d0 <argp_parse@@Base+0x3294>
   14968:	subs	r5, r5, #1
   1496c:	add	r4, r4, #24
   14970:	beq	149d0 <argp_parse@@Base+0x3294>
   14974:	ldr	r2, [r4]
   14978:	cmp	r2, #0
   1497c:	beq	14968 <argp_parse@@Base+0x322c>
   14980:	ldr	r1, [r4, #12]
   14984:	tst	r1, #4
   14988:	moveq	r6, r4
   1498c:	tst	r1, #2
   14990:	bne	14968 <argp_parse@@Base+0x322c>
   14994:	ldr	r3, [r4, #8]
   14998:	ldr	r0, [r6, #12]
   1499c:	cmp	r3, #0
   149a0:	orr	r1, r1, r0
   149a4:	beq	149e4 <argp_parse@@Base+0x32a8>
   149a8:	tst	r1, #16
   149ac:	bne	14968 <argp_parse@@Base+0x322c>
   149b0:	tst	r1, #1
   149b4:	moveq	r1, sl
   149b8:	ldrne	r1, [pc, #116]	; 14a34 <argp_parse@@Base+0x32f8>
   149bc:	mov	r0, r9
   149c0:	bl	17914 <argp_error@@Base+0x1a7c>
   149c4:	subs	r5, r5, #1
   149c8:	add	r4, r4, #24
   149cc:	bne	14974 <argp_parse@@Base+0x3238>
   149d0:	subs	r8, r8, #1
   149d4:	add	r7, r7, #28
   149d8:	bne	14950 <argp_parse@@Base+0x3214>
   149dc:	sub	sp, fp, #32
   149e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149e4:	tst	r1, #16
   149e8:	bne	14968 <argp_parse@@Base+0x322c>
   149ec:	ldr	r3, [r6, #8]
   149f0:	cmp	r3, #0
   149f4:	bne	149b0 <argp_parse@@Base+0x3274>
   149f8:	ldr	r1, [pc, #56]	; 14a38 <argp_parse@@Base+0x32fc>
   149fc:	mov	r0, r9
   14a00:	bl	17914 <argp_error@@Base+0x1a7c>
   14a04:	b	14968 <argp_parse@@Base+0x322c>
   14a08:	add	r1, r3, #1
   14a0c:	str	r1, [fp, #-40]	; 0xffffffd8
   14a10:	mov	r2, sl
   14a14:	ldr	r1, [pc, #32]	; 14a3c <argp_parse@@Base+0x3300>
   14a18:	strb	r5, [r3]
   14a1c:	mov	r0, r9
   14a20:	bl	17914 <argp_error@@Base+0x1a7c>
   14a24:	b	14908 <argp_parse@@Base+0x31cc>
   14a28:	andeq	r4, r1, r0, ror r0
   14a2c:	andeq	r3, r1, ip, asr #27
   14a30:			; <UNDEFINED> instruction: 0x000187b4
   14a34:	andeq	r8, r1, r4, lsr #15
   14a38:	andeq	r8, r1, r0, asr #15
   14a3c:	muleq	r1, ip, r7

00014a40 <argp_failure@@Base>:
   14a40:	push	{r3}		; (str r3, [sp, #-4]!)
   14a44:	push	{r4, r5, r6, r7, lr}
   14a48:	subs	r5, r0, #0
   14a4c:	sub	sp, sp, #200	; 0xc8
   14a50:	mov	r7, r1
   14a54:	mov	r6, r2
   14a58:	beq	14ba8 <argp_failure@@Base+0x168>
   14a5c:	ldr	r3, [r5, #16]
   14a60:	tst	r3, #2
   14a64:	bne	14b98 <argp_failure@@Base+0x158>
   14a68:	ldr	r4, [r5, #44]	; 0x2c
   14a6c:	cmp	r4, #0
   14a70:	beq	14b98 <argp_failure@@Base+0x158>
   14a74:	mov	r0, r4
   14a78:	bl	10f28 <flockfile@plt>
   14a7c:	ldr	r0, [r5, #40]	; 0x28
   14a80:	mov	r1, r4
   14a84:	bl	10d48 <fputs_unlocked@plt>
   14a88:	ldr	r3, [sp, #220]	; 0xdc
   14a8c:	cmp	r3, #0
   14a90:	beq	14aec <argp_failure@@Base+0xac>
   14a94:	ldr	r3, [r4, #20]
   14a98:	ldr	r1, [r4, #24]
   14a9c:	add	r2, sp, #224	; 0xe0
   14aa0:	cmp	r3, r1
   14aa4:	str	r2, [sp]
   14aa8:	addcc	r1, r3, #1
   14aac:	movcc	r2, #58	; 0x3a
   14ab0:	strcc	r1, [r4, #20]
   14ab4:	strbcc	r2, [r3]
   14ab8:	bcs	14bf4 <argp_failure@@Base+0x1b4>
   14abc:	ldr	r3, [r4, #20]
   14ac0:	ldr	r2, [r4, #24]
   14ac4:	cmp	r3, r2
   14ac8:	addcc	r1, r3, #1
   14acc:	movcc	r2, #32
   14ad0:	strcc	r1, [r4, #20]
   14ad4:	strbcc	r2, [r3]
   14ad8:	bcs	14be4 <argp_failure@@Base+0x1a4>
   14adc:	ldr	r2, [sp]
   14ae0:	ldr	r1, [sp, #220]	; 0xdc
   14ae4:	mov	r0, r4
   14ae8:	bl	10f10 <vfprintf@plt>
   14aec:	cmp	r6, #0
   14af0:	beq	14b54 <argp_failure@@Base+0x114>
   14af4:	ldr	r3, [r4, #20]
   14af8:	ldr	r2, [r4, #24]
   14afc:	cmp	r3, r2
   14b00:	addcc	r1, r3, #1
   14b04:	movcc	r2, #58	; 0x3a
   14b08:	strcc	r1, [r4, #20]
   14b0c:	strbcc	r2, [r3]
   14b10:	bcs	14c14 <argp_failure@@Base+0x1d4>
   14b14:	ldr	r3, [r4, #20]
   14b18:	ldr	r2, [r4, #24]
   14b1c:	cmp	r3, r2
   14b20:	addcc	r1, r3, #1
   14b24:	movcc	r2, #32
   14b28:	strcc	r1, [r4, #20]
   14b2c:	strbcc	r2, [r3]
   14b30:	bcs	14c04 <argp_failure@@Base+0x1c4>
   14b34:	mov	r2, #200	; 0xc8
   14b38:	mov	r1, sp
   14b3c:	mov	r0, r6
   14b40:	bl	10ed4 <strerror_r@plt>
   14b44:	cmp	r0, #0
   14b48:	beq	14c24 <argp_failure@@Base+0x1e4>
   14b4c:	mov	r1, r4
   14b50:	bl	10d48 <fputs_unlocked@plt>
   14b54:	ldr	r3, [r4, #20]
   14b58:	ldr	r2, [r4, #24]
   14b5c:	cmp	r3, r2
   14b60:	addcc	r1, r3, #1
   14b64:	movcc	r2, #10
   14b68:	strcc	r1, [r4, #20]
   14b6c:	strbcc	r2, [r3]
   14b70:	bcs	14bcc <argp_failure@@Base+0x18c>
   14b74:	mov	r0, r4
   14b78:	bl	10dfc <funlockfile@plt>
   14b7c:	cmp	r7, #0
   14b80:	beq	14b98 <argp_failure@@Base+0x158>
   14b84:	cmp	r5, #0
   14b88:	beq	14bdc <argp_failure@@Base+0x19c>
   14b8c:	ldr	r3, [r5, #16]
   14b90:	tst	r3, #32
   14b94:	beq	14bdc <argp_failure@@Base+0x19c>
   14b98:	add	sp, sp, #200	; 0xc8
   14b9c:	pop	{r4, r5, r6, r7, lr}
   14ba0:	add	sp, sp, #4
   14ba4:	bx	lr
   14ba8:	ldr	r3, [pc, #140]	; 14c3c <argp_failure@@Base+0x1fc>
   14bac:	ldr	r4, [r3]
   14bb0:	cmp	r4, #0
   14bb4:	beq	14b98 <argp_failure@@Base+0x158>
   14bb8:	mov	r0, r4
   14bbc:	bl	10f28 <flockfile@plt>
   14bc0:	ldr	r3, [pc, #120]	; 14c40 <argp_failure@@Base+0x200>
   14bc4:	ldr	r0, [r3]
   14bc8:	b	14a80 <argp_failure@@Base+0x40>
   14bcc:	mov	r1, #10
   14bd0:	mov	r0, r4
   14bd4:	bl	10ef8 <__overflow@plt>
   14bd8:	b	14b74 <argp_failure@@Base+0x134>
   14bdc:	mov	r0, r7
   14be0:	bl	10e98 <exit@plt>
   14be4:	mov	r1, #32
   14be8:	mov	r0, r4
   14bec:	bl	10ef8 <__overflow@plt>
   14bf0:	b	14adc <argp_failure@@Base+0x9c>
   14bf4:	mov	r1, #58	; 0x3a
   14bf8:	mov	r0, r4
   14bfc:	bl	10ef8 <__overflow@plt>
   14c00:	b	14abc <argp_failure@@Base+0x7c>
   14c04:	mov	r1, #32
   14c08:	mov	r0, r4
   14c0c:	bl	10ef8 <__overflow@plt>
   14c10:	b	14b34 <argp_failure@@Base+0xf4>
   14c14:	mov	r1, #58	; 0x3a
   14c18:	mov	r0, r4
   14c1c:	bl	10ef8 <__overflow@plt>
   14c20:	b	14b14 <argp_failure@@Base+0xd4>
   14c24:	mov	r0, r6
   14c28:	bl	10e5c <strerror@plt>
   14c2c:	ldr	r3, [pc, #16]	; 14c44 <argp_failure@@Base+0x204>
   14c30:	cmp	r0, #0
   14c34:	moveq	r0, r3
   14c38:	b	14b4c <argp_failure@@Base+0x10c>
   14c3c:	andeq	r9, r2, r8, asr #2
   14c40:	andeq	r9, r2, r0, asr #2
   14c44:	andeq	r8, r1, r8, asr #15
   14c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c4c:	add	fp, sp, #32
   14c50:	cmp	r2, #0
   14c54:	sub	sp, sp, #116	; 0x74
   14c58:	str	r2, [fp, #-132]	; 0xffffff7c
   14c5c:	str	r0, [fp, #-112]	; 0xffffff90
   14c60:	str	r1, [fp, #-104]	; 0xffffff98
   14c64:	str	r3, [fp, #-96]	; 0xffffffa0
   14c68:	beq	14d20 <argp_failure@@Base+0x2e0>
   14c6c:	ldr	sl, [pc, #4064]	; 15c54 <argp_failure@@Base+0x1214>
   14c70:	mov	r0, r2
   14c74:	bl	10f28 <flockfile@plt>
   14c78:	ldr	r3, [sl, #36]	; 0x24
   14c7c:	cmp	r3, #0
   14c80:	str	r3, [fp, #-108]	; 0xffffff94
   14c84:	beq	151d0 <argp_failure@@Base+0x790>
   14c88:	mov	r3, #0
   14c8c:	mov	r1, r3
   14c90:	ldr	r2, [sl, #32]
   14c94:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14c98:	bl	171e8 <argp_error@@Base+0x1350>
   14c9c:	subs	r9, r0, #0
   14ca0:	beq	15d14 <argp_failure@@Base+0x12d4>
   14ca4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14ca8:	ands	r3, r3, #11
   14cac:	streq	r3, [fp, #-136]	; 0xffffff78
   14cb0:	bne	1562c <argp_failure@@Base+0xbec>
   14cb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14cb8:	ands	r4, r3, #3
   14cbc:	bne	15420 <argp_failure@@Base+0x9e0>
   14cc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14cc4:	tst	r3, #16
   14cc8:	bne	153fc <argp_failure@@Base+0x9bc>
   14ccc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14cd0:	tst	r3, #4
   14cd4:	bne	153e0 <argp_failure@@Base+0x9a0>
   14cd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14cdc:	tst	r3, #8
   14ce0:	bne	14d74 <argp_failure@@Base+0x334>
   14ce4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14ce8:	tst	r3, #32
   14cec:	bne	151a8 <argp_failure@@Base+0x768>
   14cf0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14cf4:	tst	r3, #64	; 0x40
   14cf8:	bne	14d28 <argp_failure@@Base+0x2e8>
   14cfc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14d00:	bl	10dfc <funlockfile@plt>
   14d04:	ldr	r3, [fp, #-136]	; 0xffffff78
   14d08:	cmp	r3, #0
   14d0c:	beq	14d18 <argp_failure@@Base+0x2d8>
   14d10:	mov	r0, r3
   14d14:	bl	12e50 <argp_parse@@Base+0x1714>
   14d18:	mov	r0, r9
   14d1c:	bl	177d4 <argp_error@@Base+0x193c>
   14d20:	sub	sp, fp, #32
   14d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d28:	ldr	r5, [pc, #3880]	; 15c58 <argp_failure@@Base+0x1218>
   14d2c:	ldr	r2, [r5]
   14d30:	cmp	r2, #0
   14d34:	beq	14cfc <argp_failure@@Base+0x2bc>
   14d38:	cmp	r4, #0
   14d3c:	beq	14d64 <argp_failure@@Base+0x324>
   14d40:	ldr	r3, [r9, #28]
   14d44:	ldr	r2, [r9, #32]
   14d48:	cmp	r3, r2
   14d4c:	bcs	15cf8 <argp_failure@@Base+0x12b8>
   14d50:	add	r1, r3, #1
   14d54:	mov	r2, #10
   14d58:	str	r1, [r9, #28]
   14d5c:	strb	r2, [r3]
   14d60:	ldr	r2, [r5]
   14d64:	ldr	r1, [pc, #3824]	; 15c5c <argp_failure@@Base+0x121c>
   14d68:	mov	r0, r9
   14d6c:	bl	17914 <argp_error@@Base+0x1a7c>
   14d70:	b	14cfc <argp_failure@@Base+0x2bc>
   14d74:	ldr	r3, [fp, #-136]	; 0xffffff78
   14d78:	ldr	r3, [r3, #4]
   14d7c:	cmp	r3, #0
   14d80:	str	r3, [fp, #-108]	; 0xffffff94
   14d84:	beq	14ce4 <argp_failure@@Base+0x2a4>
   14d88:	cmp	r4, #0
   14d8c:	beq	15ba8 <argp_failure@@Base+0x1168>
   14d90:	ldr	r3, [r9, #28]
   14d94:	ldr	r2, [r9, #32]
   14d98:	cmp	r3, r2
   14d9c:	bcs	15d4c <argp_failure@@Base+0x130c>
   14da0:	add	r1, r3, #1
   14da4:	mov	r2, #10
   14da8:	str	r1, [r9, #28]
   14dac:	strb	r2, [r3]
   14db0:	ldr	r3, [fp, #-136]	; 0xffffff78
   14db4:	ldr	r2, [fp, #-136]	; 0xffffff78
   14db8:	ldr	r3, [r3, #4]
   14dbc:	ldr	r8, [r2]
   14dc0:	str	r3, [fp, #-108]	; 0xffffff94
   14dc4:	ldr	r3, [fp, #-108]	; 0xffffff94
   14dc8:	cmp	r3, #0
   14dcc:	mov	r3, #0
   14dd0:	str	r3, [fp, #-88]	; 0xffffffa8
   14dd4:	str	r3, [fp, #-84]	; 0xffffffac
   14dd8:	str	r3, [fp, #-80]	; 0xffffffb0
   14ddc:	beq	15198 <argp_failure@@Base+0x758>
   14de0:	str	sl, [fp, #-100]	; 0xffffff9c
   14de4:	ldr	lr, [r9, #28]
   14de8:	ldr	r3, [r9, #24]
   14dec:	ldr	r5, [r9, #16]
   14df0:	sub	lr, lr, r3
   14df4:	cmp	lr, r5
   14df8:	ldr	r6, [r8]
   14dfc:	ldr	sl, [r8, #8]
   14e00:	bhi	15900 <argp_failure@@Base+0xec0>
   14e04:	ldr	r1, [r9, #4]
   14e08:	ldr	r7, [r6, #12]
   14e0c:	str	r1, [fp, #-116]	; 0xffffff8c
   14e10:	ldr	r1, [r9, #12]
   14e14:	mov	r3, #0
   14e18:	str	r1, [fp, #-120]	; 0xffffff88
   14e1c:	sub	r1, fp, #88	; 0x58
   14e20:	str	r3, [r9, #4]
   14e24:	and	r2, r7, #8
   14e28:	str	r1, [fp, #-68]	; 0xffffffbc
   14e2c:	ldr	r1, [fp, #-104]	; 0xffffff98
   14e30:	mov	r0, #1
   14e34:	cmp	r2, r3
   14e38:	mov	r4, r2
   14e3c:	str	r0, [fp, #-64]	; 0xffffffc0
   14e40:	str	r8, [fp, #-76]	; 0xffffffb4
   14e44:	str	r9, [fp, #-72]	; 0xffffffb8
   14e48:	str	r1, [fp, #-60]	; 0xffffffc4
   14e4c:	bne	1578c <argp_failure@@Base+0xd4c>
   14e50:	ldr	ip, [r8, #4]
   14e54:	cmp	ip, r3
   14e58:	beq	14e84 <argp_failure@@Base+0x444>
   14e5c:	add	r0, r6, #24
   14e60:	ldr	r3, [r0, #-24]	; 0xffffffe8
   14e64:	cmp	r3, #0
   14e68:	beq	14e78 <argp_failure@@Base+0x438>
   14e6c:	ldr	r3, [r0, #-12]
   14e70:	tst	r3, #2
   14e74:	beq	15788 <argp_failure@@Base+0xd48>
   14e78:	subs	ip, ip, #1
   14e7c:	add	r0, r0, #24
   14e80:	bne	14e60 <argp_failure@@Base+0x420>
   14e84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14e88:	cmp	lr, r5
   14e8c:	str	r2, [fp, #-128]	; 0xffffff80
   14e90:	ldr	r5, [r3, #8]
   14e94:	bhi	157a0 <argp_failure@@Base+0xd60>
   14e98:	str	r5, [r9, #12]
   14e9c:	ldr	r5, [r8, #4]
   14ea0:	cmp	r5, #0
   14ea4:	beq	14f28 <argp_failure@@Base+0x4e8>
   14ea8:	mov	r4, r6
   14eac:	str	r8, [fp, #-124]	; 0xffffff84
   14eb0:	b	14ec8 <argp_failure@@Base+0x488>
   14eb4:	subs	r5, r5, #1
   14eb8:	add	r4, r4, #24
   14ebc:	beq	14f1c <argp_failure@@Base+0x4dc>
   14ec0:	ldr	r7, [r4, #12]
   14ec4:	and	r2, r7, #8
   14ec8:	cmp	r2, #0
   14ecc:	bne	14eb4 <argp_failure@@Base+0x474>
   14ed0:	ldr	r8, [r4, #4]
   14ed4:	sub	r2, r8, #1
   14ed8:	cmp	r2, #254	; 0xfe
   14edc:	bhi	14eb4 <argp_failure@@Base+0x474>
   14ee0:	bl	10e8c <__ctype_b_loc@plt>
   14ee4:	lsl	r2, r8, #1
   14ee8:	ldr	r1, [r0]
   14eec:	ldrh	r2, [r1, r2]
   14ef0:	tst	r2, #16384	; 0x4000
   14ef4:	beq	14eb4 <argp_failure@@Base+0x474>
   14ef8:	ldrb	r2, [sl]
   14efc:	cmp	r8, r2
   14f00:	bne	14eb4 <argp_failure@@Base+0x474>
   14f04:	tst	r7, #2
   14f08:	beq	1584c <argp_failure@@Base+0xe0c>
   14f0c:	subs	r5, r5, #1
   14f10:	add	sl, sl, #1
   14f14:	add	r4, r4, #24
   14f18:	bne	14ec0 <argp_failure@@Base+0x480>
   14f1c:	ldr	r4, [r6, #12]
   14f20:	ldr	r8, [fp, #-124]	; 0xffffff84
   14f24:	and	r4, r4, #8
   14f28:	ldr	r3, [r9, #28]
   14f2c:	ldr	r1, [r9, #24]
   14f30:	cmp	r4, #0
   14f34:	ldr	r2, [r9, #16]
   14f38:	sub	r3, r3, r1
   14f3c:	beq	157b8 <argp_failure@@Base+0xd78>
   14f40:	cmp	r3, r2
   14f44:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14f48:	ldr	r4, [r3, #16]
   14f4c:	bhi	15a80 <argp_failure@@Base+0x1040>
   14f50:	str	r4, [r9, #12]
   14f54:	ldr	r5, [r8, #4]
   14f58:	cmp	r5, #0
   14f5c:	addne	r4, r6, #24
   14f60:	bne	14f74 <argp_failure@@Base+0x534>
   14f64:	b	15004 <argp_failure@@Base+0x5c4>
   14f68:	subs	r5, r5, #1
   14f6c:	add	r4, r4, #24
   14f70:	beq	15004 <argp_failure@@Base+0x5c4>
   14f74:	ldr	r3, [r4, #-24]	; 0xffffffe8
   14f78:	cmp	r3, #0
   14f7c:	beq	14f68 <argp_failure@@Base+0x528>
   14f80:	ldr	r3, [r4, #-12]
   14f84:	tst	r3, #2
   14f88:	bne	14f68 <argp_failure@@Base+0x528>
   14f8c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14f90:	sub	r1, fp, #76	; 0x4c
   14f94:	ldr	r0, [r3, #16]
   14f98:	bl	13180 <argp_parse@@Base+0x1a44>
   14f9c:	ldr	sl, [r4, #-24]	; 0xffffffe8
   14fa0:	mov	r0, sl
   14fa4:	bl	10ea4 <strlen@plt>
   14fa8:	subs	r7, r0, #0
   14fac:	beq	14f68 <argp_failure@@Base+0x528>
   14fb0:	ldr	r2, [r9, #28]
   14fb4:	ldr	lr, [r9, #32]
   14fb8:	add	ip, r2, r7
   14fbc:	cmp	lr, ip
   14fc0:	mov	r1, r7
   14fc4:	mov	r0, r9
   14fc8:	bcs	14fdc <argp_failure@@Base+0x59c>
   14fcc:	bl	178f4 <argp_error@@Base+0x1a5c>
   14fd0:	cmp	r0, #0
   14fd4:	beq	14f68 <argp_failure@@Base+0x528>
   14fd8:	ldr	r2, [r9, #28]
   14fdc:	mov	r0, r2
   14fe0:	mov	r1, sl
   14fe4:	mov	r2, r7
   14fe8:	bl	10dc0 <memcpy@plt>
   14fec:	ldr	r2, [r9, #28]
   14ff0:	subs	r5, r5, #1
   14ff4:	add	r3, r2, r7
   14ff8:	str	r3, [r9, #28]
   14ffc:	add	r4, r4, #24
   15000:	bne	14f74 <argp_failure@@Base+0x534>
   15004:	ldr	r3, [r9, #28]
   15008:	ldr	r1, [r9, #24]
   1500c:	ldr	r2, [r9, #16]
   15010:	sub	r3, r3, r1
   15014:	cmp	r3, r2
   15018:	bhi	15a34 <argp_failure@@Base+0xff4>
   1501c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15020:	mov	r3, #0
   15024:	cmp	r2, r3
   15028:	str	r3, [r9, #4]
   1502c:	beq	1591c <argp_failure@@Base+0xedc>
   15030:	ldr	r3, [r6, #12]
   15034:	tst	r3, #8
   15038:	bne	15064 <argp_failure@@Base+0x624>
   1503c:	ldr	r4, [r6, #4]
   15040:	sub	r3, r4, #1
   15044:	cmp	r3, #254	; 0xfe
   15048:	bhi	15064 <argp_failure@@Base+0x624>
   1504c:	bl	10e8c <__ctype_b_loc@plt>
   15050:	lsl	r4, r4, #1
   15054:	ldr	r3, [r0]
   15058:	ldrh	r3, [r3, r4]
   1505c:	tst	r3, #16384	; 0x4000
   15060:	bne	15070 <argp_failure@@Base+0x630>
   15064:	ldr	r3, [r6]
   15068:	cmp	r3, #0
   1506c:	beq	15ce4 <argp_failure@@Base+0x12a4>
   15070:	ldr	r3, [r9, #28]
   15074:	ldr	r1, [r9, #24]
   15078:	ldr	r2, [r9, #16]
   1507c:	sub	r3, r3, r1
   15080:	cmp	r3, r2
   15084:	bhi	158cc <argp_failure@@Base+0xe8c>
   15088:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1508c:	str	r3, [r9, #4]
   15090:	ldr	r3, [fp, #-108]	; 0xffffff94
   15094:	add	r8, r8, #28
   15098:	subs	r3, r3, #1
   1509c:	str	r3, [fp, #-108]	; 0xffffff94
   150a0:	ldr	r3, [fp, #-120]	; 0xffffff88
   150a4:	str	r3, [r9, #12]
   150a8:	bne	14de4 <argp_failure@@Base+0x3a4>
   150ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   150b0:	ldr	sl, [fp, #-100]	; 0xffffff9c
   150b4:	cmp	r3, #0
   150b8:	beq	15198 <argp_failure@@Base+0x758>
   150bc:	ldr	r3, [sl, #4]
   150c0:	cmp	r3, #0
   150c4:	beq	15198 <argp_failure@@Base+0x758>
   150c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   150cc:	ldr	r1, [pc, #2956]	; 15c60 <argp_failure@@Base+0x1220>
   150d0:	cmp	r3, #0
   150d4:	ldr	r0, [pc, #2952]	; 15c64 <argp_failure@@Base+0x1224>
   150d8:	ldrne	r2, [r3]
   150dc:	ldreq	r2, [fp, #-104]	; 0xffffff98
   150e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   150e4:	bl	12f30 <argp_parse@@Base+0x17f4>
   150e8:	subs	r4, r0, #0
   150ec:	beq	15198 <argp_failure@@Base+0x758>
   150f0:	ldrb	r3, [r4]
   150f4:	cmp	r3, #0
   150f8:	beq	1518c <argp_failure@@Base+0x74c>
   150fc:	ldr	r3, [r9, #28]
   15100:	ldr	r2, [r9, #32]
   15104:	cmp	r3, r2
   15108:	bcs	15da8 <argp_failure@@Base+0x1368>
   1510c:	add	r1, r3, #1
   15110:	mov	r2, #10
   15114:	str	r1, [r9, #28]
   15118:	strb	r2, [r3]
   1511c:	mov	r0, r4
   15120:	bl	10ea4 <strlen@plt>
   15124:	subs	r5, r0, #0
   15128:	beq	15d84 <argp_failure@@Base+0x1344>
   1512c:	ldr	r0, [r9, #28]
   15130:	ldr	r2, [r9, #32]
   15134:	add	r3, r0, r5
   15138:	cmp	r2, r3
   1513c:	bcs	15158 <argp_failure@@Base+0x718>
   15140:	mov	r1, r5
   15144:	mov	r0, r9
   15148:	bl	178f4 <argp_error@@Base+0x1a5c>
   1514c:	cmp	r0, #0
   15150:	beq	15d84 <argp_failure@@Base+0x1344>
   15154:	ldr	r0, [r9, #28]
   15158:	mov	r2, r5
   1515c:	mov	r1, r4
   15160:	bl	10dc0 <memcpy@plt>
   15164:	ldr	r3, [r9, #28]
   15168:	add	r3, r3, r5
   1516c:	str	r3, [r9, #28]
   15170:	ldr	r2, [r9, #32]
   15174:	cmp	r2, r3
   15178:	bls	15d8c <argp_failure@@Base+0x134c>
   1517c:	add	r1, r3, #1
   15180:	mov	r2, #10
   15184:	str	r1, [r9, #28]
   15188:	strb	r2, [r3]
   1518c:	ldr	r3, [pc, #2768]	; 15c64 <argp_failure@@Base+0x1224>
   15190:	cmp	r4, r3
   15194:	bne	15cd8 <argp_failure@@Base+0x1298>
   15198:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1519c:	mov	r4, #1
   151a0:	tst	r3, #32
   151a4:	beq	14cf0 <argp_failure@@Base+0x2b0>
   151a8:	mov	r3, #0
   151ac:	str	r3, [sp]
   151b0:	str	r9, [sp, #4]
   151b4:	mov	r3, r4
   151b8:	ldr	r1, [fp, #-104]	; 0xffffff98
   151bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   151c0:	mov	r2, #1
   151c4:	bl	1332c <argp_parse@@Base+0x1bf0>
   151c8:	orr	r4, r4, r0
   151cc:	b	14cf0 <argp_failure@@Base+0x2b0>
   151d0:	ldr	r0, [pc, #2704]	; 15c68 <argp_failure@@Base+0x1228>
   151d4:	bl	10e2c <getenv@plt>
   151d8:	mov	lr, sl
   151dc:	sub	r3, fp, #76	; 0x4c
   151e0:	mov	ip, r3
   151e4:	str	r3, [fp, #-100]	; 0xffffff9c
   151e8:	mov	r6, r0
   151ec:	ldm	lr!, {r0, r1, r2, r3}
   151f0:	cmp	r6, #0
   151f4:	stmia	ip!, {r0, r1, r2, r3}
   151f8:	ldm	lr!, {r0, r1, r2, r3}
   151fc:	stmia	ip!, {r0, r1, r2, r3}
   15200:	ldm	lr, {r0, r1}
   15204:	stm	ip, {r0, r1}
   15208:	beq	14c88 <argp_failure@@Base+0x248>
   1520c:	ldrb	r9, [r6]
   15210:	ldr	r8, [pc, #2644]	; 15c6c <argp_failure@@Base+0x122c>
   15214:	cmp	r9, #0
   15218:	beq	1536c <argp_failure@@Base+0x92c>
   1521c:	bl	10e8c <__ctype_b_loc@plt>
   15220:	mov	r5, r0
   15224:	ldr	r1, [r0]
   15228:	b	15230 <argp_failure@@Base+0x7f0>
   1522c:	ldrb	r9, [r6, #1]!
   15230:	lsl	r3, r9, #1
   15234:	ldrh	r3, [r1, r3]
   15238:	tst	r3, #8192	; 0x2000
   1523c:	bne	1522c <argp_failure@@Base+0x7ec>
   15240:	ands	r2, r3, #1024	; 0x400
   15244:	beq	15364 <argp_failure@@Base+0x924>
   15248:	cmp	r9, #95	; 0x5f
   1524c:	cmpne	r9, #45	; 0x2d
   15250:	lsl	r3, r3, #28
   15254:	moveq	r7, #1
   15258:	movne	r7, #0
   1525c:	orrs	r3, r7, r3, lsr #31
   15260:	beq	15b20 <argp_failure@@Base+0x10e0>
   15264:	mov	r4, r6
   15268:	ldrb	r3, [r4, #1]!
   1526c:	cmp	r3, #95	; 0x5f
   15270:	cmpne	r3, #45	; 0x2d
   15274:	lsl	r2, r3, #1
   15278:	moveq	r0, #1
   1527c:	ldrh	r2, [r1, r2]
   15280:	movne	r0, #0
   15284:	lsl	ip, r2, #28
   15288:	orrs	r0, r0, ip, lsr #31
   1528c:	bne	15268 <argp_failure@@Base+0x828>
   15290:	tst	r2, #8192	; 0x2000
   15294:	sub	r7, r4, r6
   15298:	beq	152b0 <argp_failure@@Base+0x870>
   1529c:	ldrb	r3, [r4, #1]!
   152a0:	lsl	r2, r3, #1
   152a4:	ldrh	r2, [r1, r2]
   152a8:	tst	r2, #8192	; 0x2000
   152ac:	bne	1529c <argp_failure@@Base+0x85c>
   152b0:	cmp	r3, #44	; 0x2c
   152b4:	cmpne	r3, #0
   152b8:	beq	153cc <argp_failure@@Base+0x98c>
   152bc:	cmp	r3, #61	; 0x3d
   152c0:	beq	15728 <argp_failure@@Base+0xce8>
   152c4:	ldrb	r3, [r4]
   152c8:	lsl	r3, r3, #1
   152cc:	ldrh	r3, [r1, r3]
   152d0:	tst	r3, #2048	; 0x800
   152d4:	bne	156c8 <argp_failure@@Base+0xc88>
   152d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   152dc:	mov	r9, r3
   152e0:	str	r3, [fp, #-116]	; 0xffffff8c
   152e4:	ldr	r5, [pc, #2436]	; 15c70 <argp_failure@@Base+0x1230>
   152e8:	b	152f8 <argp_failure@@Base+0x8b8>
   152ec:	add	r5, r5, #16
   152f0:	cmp	r5, r8
   152f4:	beq	15b88 <argp_failure@@Base+0x1148>
   152f8:	mov	r0, r5
   152fc:	bl	10ea4 <strlen@plt>
   15300:	cmp	r0, r7
   15304:	bne	152ec <argp_failure@@Base+0x8ac>
   15308:	mov	r2, r7
   1530c:	mov	r1, r5
   15310:	mov	r0, r6
   15314:	bl	10f64 <strncmp@plt>
   15318:	cmp	r0, #0
   1531c:	bne	152ec <argp_failure@@Base+0x8ac>
   15320:	cmp	r9, #0
   15324:	beq	15334 <argp_failure@@Base+0x8f4>
   15328:	ldrb	r1, [r5, #14]
   1532c:	cmp	r1, #0
   15330:	beq	15d68 <argp_failure@@Base+0x1328>
   15334:	ldrb	r3, [r5, #15]
   15338:	sub	r2, fp, #36	; 0x24
   1533c:	add	r3, r2, r3
   15340:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15344:	str	r2, [r3, #-40]	; 0xffffffd8
   15348:	cmp	r5, r8
   1534c:	beq	15b88 <argp_failure@@Base+0x1148>
   15350:	ldrb	r9, [r4]
   15354:	cmp	r9, #44	; 0x2c
   15358:	beq	15a68 <argp_failure@@Base+0x1028>
   1535c:	mov	r6, r4
   15360:	b	15214 <argp_failure@@Base+0x7d4>
   15364:	cmp	r9, #0
   15368:	bne	15cc0 <argp_failure@@Base+0x1280>
   1536c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15370:	ldr	r1, [pc, #2296]	; 15c70 <argp_failure@@Base+0x1230>
   15374:	add	r3, r1, #16
   15378:	cmp	r3, r8
   1537c:	mov	r1, r3
   15380:	beq	15ac4 <argp_failure@@Base+0x1084>
   15384:	ldrb	r2, [r3, #14]
   15388:	cmp	r2, #0
   1538c:	bne	15374 <argp_failure@@Base+0x934>
   15390:	ldrb	r0, [r3, #15]
   15394:	sub	ip, fp, #36	; 0x24
   15398:	cmp	r0, #32
   1539c:	add	ip, ip, r0
   153a0:	beq	15374 <argp_failure@@Base+0x934>
   153a4:	ldr	r0, [ip, #-40]	; 0xffffffd8
   153a8:	cmp	r0, lr
   153ac:	blt	15374 <argp_failure@@Base+0x934>
   153b0:	ldr	r1, [pc, #2236]	; 15c74 <argp_failure@@Base+0x1234>
   153b4:	ldr	r0, [fp, #-104]	; 0xffffff98
   153b8:	stm	sp, {r1, r3}
   153bc:	ldr	r3, [pc, #2228]	; 15c78 <argp_failure@@Base+0x1238>
   153c0:	mov	r1, r2
   153c4:	bl	14a40 <argp_failure@@Base>
   153c8:	b	14c88 <argp_failure@@Base+0x248>
   153cc:	cmp	r9, #110	; 0x6e
   153d0:	beq	15758 <argp_failure@@Base+0xd18>
   153d4:	mov	r9, #1
   153d8:	str	r9, [fp, #-116]	; 0xffffff8c
   153dc:	b	152e4 <argp_failure@@Base+0x8a4>
   153e0:	ldr	r3, [fp, #4]
   153e4:	ldr	r1, [pc, #2192]	; 15c7c <argp_failure@@Base+0x123c>
   153e8:	mov	r2, r3
   153ec:	mov	r0, r9
   153f0:	bl	17914 <argp_error@@Base+0x1a7c>
   153f4:	mov	r4, #1
   153f8:	b	14cd8 <argp_failure@@Base+0x298>
   153fc:	mov	r2, #1
   15400:	mov	r3, #0
   15404:	stm	sp, {r2, r9}
   15408:	ldr	r1, [fp, #-104]	; 0xffffff98
   1540c:	mov	r2, r3
   15410:	ldr	r0, [fp, #-112]	; 0xffffff90
   15414:	bl	1332c <argp_parse@@Base+0x1bf0>
   15418:	orr	r4, r4, r0
   1541c:	b	14ccc <argp_failure@@Base+0x28c>
   15420:	ldr	r3, [fp, #-112]	; 0xffffff90
   15424:	mov	r4, #1
   15428:	mov	r6, r4
   1542c:	ldr	r1, [r3, #16]
   15430:	ldr	r0, [r3, #8]
   15434:	bl	14830 <argp_parse@@Base+0x30f4>
   15438:	mov	r1, #0
   1543c:	add	r3, r0, #14
   15440:	bic	r3, r3, #7
   15444:	sub	sp, sp, r3
   15448:	add	r7, sp, #8
   1544c:	mov	r2, r0
   15450:	mov	r0, r7
   15454:	bl	10ee0 <memset@plt>
   15458:	sub	r3, fp, #76	; 0x4c
   1545c:	str	r3, [fp, #-100]	; 0xffffff9c
   15460:	ldr	r8, [fp, #-136]	; 0xffffff78
   15464:	str	r7, [fp, #-108]	; 0xffffff94
   15468:	b	15584 <argp_failure@@Base+0xb44>
   1546c:	cmp	r4, #0
   15470:	ldr	r3, [fp, #-108]	; 0xffffff94
   15474:	ldr	r5, [r9, #12]
   15478:	ldrne	r2, [pc, #2048]	; 15c80 <argp_failure@@Base+0x1240>
   1547c:	str	r7, [r9, #12]
   15480:	ldreq	r2, [pc, #2044]	; 15c84 <argp_failure@@Base+0x1244>
   15484:	str	r3, [fp, #-76]	; 0xffffffb4
   15488:	ldr	r1, [pc, #2040]	; 15c88 <argp_failure@@Base+0x1248>
   1548c:	ldr	r3, [fp, #4]
   15490:	mov	r0, r9
   15494:	bl	17914 <argp_error@@Base+0x1a7c>
   15498:	ldr	r3, [r9, #28]
   1549c:	ldr	r1, [r9, #24]
   154a0:	ldr	r2, [r9, #16]
   154a4:	sub	r3, r3, r1
   154a8:	cmp	r3, r2
   154ac:	ldr	r7, [sl, #28]
   154b0:	bhi	15618 <argp_failure@@Base+0xbd8>
   154b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154b8:	ldr	r4, [r9, #4]
   154bc:	tst	r3, #2
   154c0:	str	r7, [r9, #4]
   154c4:	beq	155fc <argp_failure@@Base+0xbbc>
   154c8:	ldr	r3, [r8, #4]
   154cc:	cmp	r3, #0
   154d0:	beq	15520 <argp_failure@@Base+0xae0>
   154d4:	ldr	ip, [r9, #28]
   154d8:	ldr	r2, [r9, #32]
   154dc:	add	r3, ip, #12
   154e0:	cmp	r2, r3
   154e4:	bcs	15500 <argp_failure@@Base+0xac0>
   154e8:	mov	r1, #12
   154ec:	mov	r0, r9
   154f0:	bl	178f4 <argp_error@@Base+0x1a5c>
   154f4:	cmp	r0, #0
   154f8:	beq	15520 <argp_failure@@Base+0xae0>
   154fc:	ldr	ip, [r9, #28]
   15500:	ldr	r3, [pc, #1924]	; 15c8c <argp_failure@@Base+0x124c>
   15504:	ldm	r3!, {r0, r1, r2}
   15508:	str	r0, [ip]
   1550c:	str	r1, [ip, #4]
   15510:	str	r2, [ip, #8]
   15514:	ldr	r3, [r9, #28]
   15518:	add	r3, r3, #12
   1551c:	str	r3, [r9, #28]
   15520:	mov	r3, r6
   15524:	ldr	r1, [fp, #-104]	; 0xffffff98
   15528:	str	r9, [sp]
   1552c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15530:	ldr	r0, [fp, #-112]	; 0xffffff90
   15534:	bl	13e68 <argp_parse@@Base+0x272c>
   15538:	ldr	r3, [r9, #28]
   1553c:	ldr	r1, [r9, #24]
   15540:	sub	r1, r3, r1
   15544:	mov	r7, r0
   15548:	ldr	r0, [r9, #16]
   1554c:	cmp	r1, r0
   15550:	strls	r5, [r9, #12]
   15554:	bhi	155c8 <argp_failure@@Base+0xb88>
   15558:	ldr	r1, [r9, #32]
   1555c:	str	r4, [r9, #4]
   15560:	cmp	r1, r3
   15564:	bls	155ac <argp_failure@@Base+0xb6c>
   15568:	add	r1, r3, #1
   1556c:	mov	r2, #10
   15570:	str	r1, [r9, #28]
   15574:	strb	r2, [r3]
   15578:	cmp	r7, #0
   1557c:	mov	r4, #0
   15580:	beq	15624 <argp_failure@@Base+0xbe4>
   15584:	ldr	r3, [r9, #28]
   15588:	ldr	r1, [r9, #24]
   1558c:	ldr	r2, [r9, #16]
   15590:	sub	r3, r3, r1
   15594:	cmp	r3, r2
   15598:	ldr	r7, [sl, #28]
   1559c:	bls	1546c <argp_failure@@Base+0xa2c>
   155a0:	mov	r0, r9
   155a4:	bl	17264 <argp_error@@Base+0x13cc>
   155a8:	b	1546c <argp_failure@@Base+0xa2c>
   155ac:	mov	r1, r6
   155b0:	mov	r0, r9
   155b4:	bl	178f4 <argp_error@@Base+0x1a5c>
   155b8:	cmp	r0, #0
   155bc:	beq	15578 <argp_failure@@Base+0xb38>
   155c0:	ldr	r3, [r9, #28]
   155c4:	b	15568 <argp_failure@@Base+0xb28>
   155c8:	mov	r0, r9
   155cc:	bl	17264 <argp_error@@Base+0x13cc>
   155d0:	ldr	r3, [r9, #28]
   155d4:	ldr	r1, [r9, #24]
   155d8:	ldr	r0, [r9, #16]
   155dc:	sub	r1, r3, r1
   155e0:	cmp	r1, r0
   155e4:	str	r5, [r9, #12]
   155e8:	bls	15558 <argp_failure@@Base+0xb18>
   155ec:	mov	r0, r9
   155f0:	bl	17264 <argp_error@@Base+0x13cc>
   155f4:	ldr	r3, [r9, #28]
   155f8:	b	15558 <argp_failure@@Base+0xb18>
   155fc:	mov	r1, r9
   15600:	mov	r0, r8
   15604:	bl	14888 <argp_parse@@Base+0x314c>
   15608:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1560c:	orr	r3, r3, #2
   15610:	str	r3, [fp, #-96]	; 0xffffffa0
   15614:	b	15520 <argp_failure@@Base+0xae0>
   15618:	mov	r0, r9
   1561c:	bl	17264 <argp_error@@Base+0x13cc>
   15620:	b	154b4 <argp_failure@@Base+0xa74>
   15624:	mov	r4, #1
   15628:	b	14cc0 <argp_failure@@Base+0x280>
   1562c:	mov	r1, #0
   15630:	ldr	r0, [fp, #-112]	; 0xffffff90
   15634:	bl	140b8 <argp_parse@@Base+0x297c>
   15638:	ldr	r2, [pc, #1616]	; 15c90 <argp_failure@@Base+0x1250>
   1563c:	ldr	r4, [r0, #4]
   15640:	ldr	r5, [r0]
   15644:	mov	r1, r4
   15648:	mov	r6, r0
   1564c:	str	r0, [fp, #-136]	; 0xffffff78
   15650:	mov	r0, r5
   15654:	bl	147a8 <argp_parse@@Base+0x306c>
   15658:	ldr	r2, [pc, #1588]	; 15c94 <argp_failure@@Base+0x1254>
   1565c:	cmp	r0, #0
   15660:	mvnne	r3, #0
   15664:	strne	r3, [r0, #12]
   15668:	movne	r3, r6
   1566c:	mov	r0, r5
   15670:	ldrne	r4, [r3, #4]
   15674:	mov	r1, r4
   15678:	bl	147a8 <argp_parse@@Base+0x306c>
   1567c:	cmp	r0, #0
   15680:	mvnne	r3, #0
   15684:	strne	r3, [r0, #12]
   15688:	ldrne	r3, [fp, #-136]	; 0xffffff78
   1568c:	ldrne	r4, [r3, #4]
   15690:	cmp	r4, #0
   15694:	beq	14cb4 <argp_failure@@Base+0x274>
   15698:	mov	r3, r5
   1569c:	mov	r1, #0
   156a0:	str	r1, [r3, #24]
   156a4:	add	r1, r1, #1
   156a8:	cmp	r1, r4
   156ac:	add	r3, r3, #28
   156b0:	bne	156a0 <argp_failure@@Base+0xc60>
   156b4:	mov	r0, r5
   156b8:	ldr	r3, [pc, #1496]	; 15c98 <argp_failure@@Base+0x1258>
   156bc:	mov	r2, #28
   156c0:	bl	10f40 <qsort@plt>
   156c4:	b	14cb4 <argp_failure@@Base+0x274>
   156c8:	mov	r2, #10
   156cc:	mov	r1, #0
   156d0:	mov	r0, r4
   156d4:	bl	10d6c <strtol@plt>
   156d8:	ldrb	r3, [r4]
   156dc:	ldr	r2, [r5]
   156e0:	lsl	r3, r3, #1
   156e4:	ldrh	r3, [r2, r3]
   156e8:	tst	r3, #2048	; 0x800
   156ec:	str	r0, [fp, #-116]	; 0xffffff8c
   156f0:	beq	15718 <argp_failure@@Base+0xcd8>
   156f4:	ldrb	r3, [r4, #1]!
   156f8:	lsl	r3, r3, #1
   156fc:	ldrh	r3, [r2, r3]
   15700:	tst	r3, #2048	; 0x800
   15704:	bne	156f4 <argp_failure@@Base+0xcb4>
   15708:	b	15718 <argp_failure@@Base+0xcd8>
   1570c:	ldrb	r3, [r4, #1]!
   15710:	lsl	r3, r3, #1
   15714:	ldrh	r3, [r2, r3]
   15718:	tst	r3, #8192	; 0x2000
   1571c:	bne	1570c <argp_failure@@Base+0xccc>
   15720:	ldr	r9, [fp, #-108]	; 0xffffff94
   15724:	b	152e4 <argp_failure@@Base+0x8a4>
   15728:	ldrb	r3, [r4, #1]
   1572c:	add	r4, r4, #1
   15730:	lsl	r3, r3, #1
   15734:	ldrh	r3, [r1, r3]
   15738:	tst	r3, #8192	; 0x2000
   1573c:	beq	152d0 <argp_failure@@Base+0x890>
   15740:	ldrb	r3, [r4, #1]!
   15744:	lsl	r3, r3, #1
   15748:	ldrh	r3, [r1, r3]
   1574c:	tst	r3, #8192	; 0x2000
   15750:	bne	15740 <argp_failure@@Base+0xd00>
   15754:	b	152d0 <argp_failure@@Base+0x890>
   15758:	ldrb	r3, [r6, #1]
   1575c:	cmp	r3, #111	; 0x6f
   15760:	bne	153d4 <argp_failure@@Base+0x994>
   15764:	ldrb	r3, [r6, #2]
   15768:	cmp	r3, #45	; 0x2d
   1576c:	bne	153d4 <argp_failure@@Base+0x994>
   15770:	ldr	r3, [fp, #-108]	; 0xffffff94
   15774:	add	r6, r6, #3
   15778:	sub	r7, r7, #3
   1577c:	str	r3, [fp, #-116]	; 0xffffff8c
   15780:	mov	r9, #1
   15784:	b	152e4 <argp_failure@@Base+0x8a4>
   15788:	mov	r3, #1
   1578c:	str	r3, [fp, #-128]	; 0xffffff80
   15790:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15794:	cmp	lr, r5
   15798:	ldr	r5, [r3, #8]
   1579c:	bls	14e98 <argp_failure@@Base+0x458>
   157a0:	mov	r0, r9
   157a4:	bl	17264 <argp_error@@Base+0x13cc>
   157a8:	ldr	r7, [r6, #12]
   157ac:	and	r2, r7, #8
   157b0:	mov	r4, r2
   157b4:	b	14e98 <argp_failure@@Base+0x458>
   157b8:	cmp	r3, r2
   157bc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   157c0:	ldr	r4, [r3, #12]
   157c4:	bhi	15a74 <argp_failure@@Base+0x1034>
   157c8:	str	r4, [r9, #12]
   157cc:	ldr	r5, [r8, #4]
   157d0:	cmp	r5, #0
   157d4:	beq	15004 <argp_failure@@Base+0x5c4>
   157d8:	add	r4, r6, #24
   157dc:	ldr	r7, [fp, #-100]	; 0xffffff9c
   157e0:	b	157f0 <argp_failure@@Base+0xdb0>
   157e4:	subs	r5, r5, #1
   157e8:	add	r4, r4, #24
   157ec:	beq	15004 <argp_failure@@Base+0x5c4>
   157f0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   157f4:	cmp	r3, #0
   157f8:	beq	157e4 <argp_failure@@Base+0xda4>
   157fc:	ldr	r3, [r4, #-12]
   15800:	tst	r3, #2
   15804:	bne	157e4 <argp_failure@@Base+0xda4>
   15808:	sub	r1, fp, #76	; 0x4c
   1580c:	ldr	r0, [r7, #12]
   15810:	bl	13180 <argp_parse@@Base+0x1a44>
   15814:	ldr	r2, [r4, #-24]	; 0xffffffe8
   15818:	ldr	r1, [pc, #1148]	; 15c9c <argp_failure@@Base+0x125c>
   1581c:	mov	r0, r9
   15820:	bl	17914 <argp_error@@Base+0x1a7c>
   15824:	ldr	r3, [r6, #8]
   15828:	ldr	r1, [pc, #1136]	; 15ca0 <argp_failure@@Base+0x1260>
   1582c:	subs	r2, r3, #0
   15830:	mov	r0, r9
   15834:	beq	157e4 <argp_failure@@Base+0xda4>
   15838:	ldr	ip, [r6, #12]
   1583c:	tst	ip, #1
   15840:	ldrne	r1, [pc, #1116]	; 15ca4 <argp_failure@@Base+0x1264>
   15844:	bl	17914 <argp_error@@Base+0x1a7c>
   15848:	b	157e4 <argp_failure@@Base+0xda4>
   1584c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15850:	sub	r1, fp, #76	; 0x4c
   15854:	ldr	r0, [r3, #8]
   15858:	bl	13180 <argp_parse@@Base+0x1a44>
   1585c:	ldr	r3, [r9, #28]
   15860:	ldr	r2, [r9, #32]
   15864:	cmp	r3, r2
   15868:	bcs	15aa8 <argp_failure@@Base+0x1068>
   1586c:	add	r2, r3, #1
   15870:	str	r2, [r9, #28]
   15874:	mov	r2, #45	; 0x2d
   15878:	strb	r2, [r3]
   1587c:	ldr	r3, [r9, #28]
   15880:	ldr	r2, [r9, #32]
   15884:	ldrb	r7, [sl]
   15888:	cmp	r3, r2
   1588c:	bcs	15a8c <argp_failure@@Base+0x104c>
   15890:	add	r2, r3, #1
   15894:	str	r2, [r9, #28]
   15898:	strb	r7, [r3]
   1589c:	ldr	r3, [fp, #-128]	; 0xffffff80
   158a0:	cmp	r3, #0
   158a4:	beq	15a40 <argp_failure@@Base+0x1000>
   158a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158ac:	ldr	r3, [r3]
   158b0:	cmp	r3, #0
   158b4:	bne	15a40 <argp_failure@@Base+0x1000>
   158b8:	ldr	r3, [r6, #8]
   158bc:	cmp	r3, #0
   158c0:	movne	r3, #1
   158c4:	strne	r3, [fp, #-80]	; 0xffffffb0
   158c8:	b	14f0c <argp_failure@@Base+0x4cc>
   158cc:	mov	r0, r9
   158d0:	bl	17264 <argp_error@@Base+0x13cc>
   158d4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   158d8:	ldr	r3, [r9, #28]
   158dc:	ldr	r1, [r9, #24]
   158e0:	str	r2, [r9, #4]
   158e4:	ldr	r2, [r9, #16]
   158e8:	sub	r3, r3, r1
   158ec:	cmp	r3, r2
   158f0:	bls	15090 <argp_failure@@Base+0x650>
   158f4:	mov	r0, r9
   158f8:	bl	17264 <argp_error@@Base+0x13cc>
   158fc:	b	15090 <argp_failure@@Base+0x650>
   15900:	mov	r0, r9
   15904:	bl	17264 <argp_error@@Base+0x13cc>
   15908:	ldr	lr, [r9, #28]
   1590c:	ldr	r2, [r9, #24]
   15910:	ldr	r5, [r9, #16]
   15914:	sub	lr, lr, r2
   15918:	b	14e04 <argp_failure@@Base+0x3c4>
   1591c:	ldr	r4, [r6, #16]
   15920:	ldr	r1, [r6, #4]
   15924:	mov	r0, r4
   15928:	ldr	r3, [fp, #-104]	; 0xffffff98
   1592c:	ldr	r2, [r8, #20]
   15930:	bl	12f30 <argp_parse@@Base+0x17f4>
   15934:	subs	r5, r0, #0
   15938:	beq	159f0 <argp_failure@@Base+0xfb0>
   1593c:	ldrb	r3, [r5]
   15940:	cmp	r3, #0
   15944:	beq	159e0 <argp_failure@@Base+0xfa0>
   15948:	ldr	r3, [r9, #28]
   1594c:	ldr	r1, [r9, #24]
   15950:	ldr	r2, [r9, #16]
   15954:	sub	r3, r3, r1
   15958:	cmp	r3, r2
   1595c:	bhi	15be0 <argp_failure@@Base+0x11a0>
   15960:	ldr	r7, [r9, #20]
   15964:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15968:	bic	r7, r7, r7, asr #31
   1596c:	ldr	r6, [r3, #20]
   15970:	mov	r3, r6
   15974:	str	r6, [r9, #4]
   15978:	add	r2, r6, #3
   1597c:	cmp	r2, r7
   15980:	str	r3, [r9, #12]
   15984:	bcs	15b30 <argp_failure@@Base+0x10f0>
   15988:	ldr	r3, [r9, #28]
   1598c:	ldr	r2, [r9, #32]
   15990:	cmp	r3, r2
   15994:	bcs	15d30 <argp_failure@@Base+0x12f0>
   15998:	add	r1, r3, #1
   1599c:	mov	r2, #10
   159a0:	str	r1, [r9, #28]
   159a4:	strb	r2, [r3]
   159a8:	mov	r0, r5
   159ac:	bl	10ea4 <strlen@plt>
   159b0:	subs	r6, r0, #0
   159b4:	beq	159e0 <argp_failure@@Base+0xfa0>
   159b8:	ldr	r0, [r9, #28]
   159bc:	ldr	r2, [r9, #32]
   159c0:	add	r3, r0, r6
   159c4:	cmp	r2, r3
   159c8:	bcs	15bc4 <argp_failure@@Base+0x1184>
   159cc:	mov	r1, r6
   159d0:	mov	r0, r9
   159d4:	bl	178f4 <argp_error@@Base+0x1a5c>
   159d8:	cmp	r0, #0
   159dc:	bne	15bc0 <argp_failure@@Base+0x1180>
   159e0:	cmp	r4, r5
   159e4:	beq	159f0 <argp_failure@@Base+0xfb0>
   159e8:	mov	r0, r5
   159ec:	bl	125d4 <argp_parse@@Base+0xe98>
   159f0:	ldr	r3, [r9, #28]
   159f4:	ldr	r2, [r9, #24]
   159f8:	ldr	r1, [r9, #16]
   159fc:	sub	r2, r3, r2
   15a00:	cmp	r2, r1
   15a04:	bhi	15b10 <argp_failure@@Base+0x10d0>
   15a08:	ldr	r1, [r9, #32]
   15a0c:	mov	r2, #0
   15a10:	cmp	r1, r3
   15a14:	str	r2, [r9, #4]
   15a18:	bls	15af4 <argp_failure@@Base+0x10b4>
   15a1c:	add	r1, r3, #1
   15a20:	mov	r2, #10
   15a24:	str	r1, [r9, #28]
   15a28:	strb	r2, [r3]
   15a2c:	str	r8, [fp, #-88]	; 0xffffffa8
   15a30:	b	15070 <argp_failure@@Base+0x630>
   15a34:	mov	r0, r9
   15a38:	bl	17264 <argp_error@@Base+0x13cc>
   15a3c:	b	1501c <argp_failure@@Base+0x5dc>
   15a40:	ldr	r2, [r6, #8]
   15a44:	cmp	r2, #0
   15a48:	beq	14f0c <argp_failure@@Base+0x4cc>
   15a4c:	ldr	r3, [r6, #12]
   15a50:	mov	r0, r9
   15a54:	tst	r3, #1
   15a58:	ldrne	r1, [pc, #584]	; 15ca8 <argp_failure@@Base+0x1268>
   15a5c:	ldreq	r1, [pc, #584]	; 15cac <argp_failure@@Base+0x126c>
   15a60:	bl	17914 <argp_error@@Base+0x1a7c>
   15a64:	b	14f0c <argp_failure@@Base+0x4cc>
   15a68:	ldrb	r9, [r4, #1]
   15a6c:	add	r4, r4, #1
   15a70:	b	1535c <argp_failure@@Base+0x91c>
   15a74:	mov	r0, r9
   15a78:	bl	17264 <argp_error@@Base+0x13cc>
   15a7c:	b	157c8 <argp_failure@@Base+0xd88>
   15a80:	mov	r0, r9
   15a84:	bl	17264 <argp_error@@Base+0x13cc>
   15a88:	b	14f50 <argp_failure@@Base+0x510>
   15a8c:	mov	r1, #1
   15a90:	mov	r0, r9
   15a94:	bl	178f4 <argp_error@@Base+0x1a5c>
   15a98:	cmp	r0, #0
   15a9c:	beq	1589c <argp_failure@@Base+0xe5c>
   15aa0:	ldr	r3, [r9, #28]
   15aa4:	b	15890 <argp_failure@@Base+0xe50>
   15aa8:	mov	r1, #1
   15aac:	mov	r0, r9
   15ab0:	bl	178f4 <argp_error@@Base+0x1a5c>
   15ab4:	cmp	r0, #0
   15ab8:	beq	1587c <argp_failure@@Base+0xe3c>
   15abc:	ldr	r3, [r9, #28]
   15ac0:	b	1586c <argp_failure@@Base+0xe2c>
   15ac4:	ldr	lr, [fp, #-100]	; 0xffffff9c
   15ac8:	ldr	sl, [pc, #388]	; 15c54 <argp_failure@@Base+0x1214>
   15acc:	mov	r4, #1
   15ad0:	ldm	lr!, {r0, r1, r2, r3}
   15ad4:	mov	ip, sl
   15ad8:	stmia	ip!, {r0, r1, r2, r3}
   15adc:	ldm	lr!, {r0, r1, r2, r3}
   15ae0:	stmia	ip!, {r0, r1, r2, r3}
   15ae4:	ldm	lr, {r0, r1}
   15ae8:	stm	ip, {r0, r1}
   15aec:	str	r4, [sl, #36]	; 0x24
   15af0:	b	14c88 <argp_failure@@Base+0x248>
   15af4:	mov	r1, #1
   15af8:	mov	r0, r9
   15afc:	bl	178f4 <argp_error@@Base+0x1a5c>
   15b00:	cmp	r0, #0
   15b04:	beq	15a2c <argp_failure@@Base+0xfec>
   15b08:	ldr	r3, [r9, #28]
   15b0c:	b	15a1c <argp_failure@@Base+0xfdc>
   15b10:	mov	r0, r9
   15b14:	bl	17264 <argp_error@@Base+0x13cc>
   15b18:	ldr	r3, [r9, #28]
   15b1c:	b	15a08 <argp_failure@@Base+0xfc8>
   15b20:	mov	r7, r3
   15b24:	mov	r4, r6
   15b28:	mov	r3, r9
   15b2c:	b	152b0 <argp_failure@@Base+0x870>
   15b30:	cmp	r6, r7
   15b34:	bhi	15d20 <argp_failure@@Base+0x12e0>
   15b38:	ldr	r3, [r9, #28]
   15b3c:	ldr	r1, [r9, #32]
   15b40:	add	r2, r3, #3
   15b44:	cmp	r1, r2
   15b48:	bcs	15b64 <argp_failure@@Base+0x1124>
   15b4c:	mov	r1, #3
   15b50:	mov	r0, r9
   15b54:	bl	178f4 <argp_error@@Base+0x1a5c>
   15b58:	cmp	r0, #0
   15b5c:	beq	159a8 <argp_failure@@Base+0xf68>
   15b60:	ldr	r3, [r9, #28]
   15b64:	ldr	r2, [pc, #324]	; 15cb0 <argp_failure@@Base+0x1270>
   15b68:	ldrh	r1, [r2]
   15b6c:	ldrb	r2, [r2, #2]
   15b70:	strh	r1, [r3]
   15b74:	strb	r2, [r3, #2]
   15b78:	ldr	r3, [r9, #28]
   15b7c:	add	r3, r3, #3
   15b80:	str	r3, [r9, #28]
   15b84:	b	159a8 <argp_failure@@Base+0xf68>
   15b88:	mov	r2, #0
   15b8c:	str	r6, [sp, #4]
   15b90:	str	r7, [sp]
   15b94:	ldr	r3, [pc, #280]	; 15cb4 <argp_failure@@Base+0x1274>
   15b98:	mov	r1, r2
   15b9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15ba0:	bl	14a40 <argp_failure@@Base>
   15ba4:	b	15350 <argp_failure@@Base+0x910>
   15ba8:	ldr	r3, [fp, #-136]	; 0xffffff78
   15bac:	ldr	r8, [r3]
   15bb0:	str	r4, [fp, #-88]	; 0xffffffa8
   15bb4:	str	r4, [fp, #-84]	; 0xffffffac
   15bb8:	str	r4, [fp, #-80]	; 0xffffffb0
   15bbc:	b	14de0 <argp_failure@@Base+0x3a0>
   15bc0:	ldr	r0, [r9, #28]
   15bc4:	mov	r2, r6
   15bc8:	mov	r1, r5
   15bcc:	bl	10dc0 <memcpy@plt>
   15bd0:	ldr	r3, [r9, #28]
   15bd4:	add	r6, r3, r6
   15bd8:	str	r6, [r9, #28]
   15bdc:	b	159e0 <argp_failure@@Base+0xfa0>
   15be0:	mov	r0, r9
   15be4:	bl	17264 <argp_error@@Base+0x13cc>
   15be8:	ldr	r3, [r9, #28]
   15bec:	ldr	r1, [r9, #24]
   15bf0:	ldr	r2, [r9, #16]
   15bf4:	ldr	r7, [r9, #20]
   15bf8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   15bfc:	sub	r3, r3, r1
   15c00:	cmp	r3, r2
   15c04:	ldr	r6, [sl, #20]
   15c08:	bic	r7, r7, r7, asr #31
   15c0c:	bls	15970 <argp_failure@@Base+0xf30>
   15c10:	mov	r0, r9
   15c14:	bl	17264 <argp_error@@Base+0x13cc>
   15c18:	ldr	r3, [r9, #28]
   15c1c:	ldr	r1, [r9, #24]
   15c20:	ldr	r2, [r9, #16]
   15c24:	sub	r3, r3, r1
   15c28:	cmp	r3, r2
   15c2c:	ldr	r3, [sl, #20]
   15c30:	str	r6, [r9, #4]
   15c34:	movls	r6, r3
   15c38:	bls	15978 <argp_failure@@Base+0xf38>
   15c3c:	mov	r0, r9
   15c40:	str	r3, [fp, #-124]	; 0xffffff84
   15c44:	bl	17264 <argp_error@@Base+0x13cc>
   15c48:	ldr	r6, [sl, #20]
   15c4c:	ldr	r3, [fp, #-124]	; 0xffffff84
   15c50:	b	15978 <argp_failure@@Base+0xf38>
   15c54:	andeq	r9, r2, r0, lsl #2
   15c58:	andeq	r9, r2, ip, lsl #3
   15c5c:	muleq	r1, r8, r9
   15c60:	andeq	r0, r0, #5
   15c64:	andeq	r8, r1, r4, lsr #18
   15c68:	andeq	r8, r1, r0, ror #15
   15c6c:			; <UNDEFINED> instruction: 0x000186b0
   15c70:	andeq	r8, r1, r0, lsr #12
   15c74:	muleq	r1, ip, r8
   15c78:	andeq	r8, r1, r8, ror #16
   15c7c:	andeq	r8, r1, ip, asr #17
   15c80:	andeq	r8, r1, r4, lsr #17
   15c84:			; <UNDEFINED> instruction: 0x000188b4
   15c88:	andeq	r8, r1, ip, lsr #17
   15c8c:			; <UNDEFINED> instruction: 0x000188bc
   15c90:			; <UNDEFINED> instruction: 0x000181b8
   15c94:	muleq	r1, r8, r1
   15c98:	andeq	r3, r1, r8, ror #18
   15c9c:	andeq	r8, r1, ip, lsl #18
   15ca0:	andeq	r8, r1, ip, lsl r9
   15ca4:	andeq	r8, r1, r4, lsl r9
   15ca8:	andeq	r8, r1, r4, lsl #18
   15cac:	andeq	r8, r1, r8, ror #2
   15cb0:	andeq	r8, r1, r0, lsr #18
   15cb4:	andeq	r8, r1, r0, lsr #16
   15cb8:	andeq	r8, r1, r8, asr #16
   15cbc:	strdeq	r8, [r1], -r0
   15cc0:	str	r6, [sp]
   15cc4:	ldr	r3, [pc, #-20]	; 15cb8 <argp_failure@@Base+0x1278>
   15cc8:	mov	r1, r2
   15ccc:	ldr	r0, [fp, #-104]	; 0xffffff98
   15cd0:	bl	14a40 <argp_failure@@Base>
   15cd4:	b	1536c <argp_failure@@Base+0x92c>
   15cd8:	mov	r0, r4
   15cdc:	bl	125d4 <argp_parse@@Base+0xe98>
   15ce0:	b	15198 <argp_failure@@Base+0x758>
   15ce4:	ldr	r0, [r6, #16]
   15ce8:	sub	r2, fp, #76	; 0x4c
   15cec:	ldr	r1, [r8, #20]
   15cf0:	bl	12f74 <argp_parse@@Base+0x1838>
   15cf4:	b	15a2c <argp_failure@@Base+0xfec>
   15cf8:	mov	r1, #1
   15cfc:	mov	r0, r9
   15d00:	bl	178f4 <argp_error@@Base+0x1a5c>
   15d04:	cmp	r0, #0
   15d08:	beq	14d60 <argp_failure@@Base+0x320>
   15d0c:	ldr	r3, [r9, #28]
   15d10:	b	14d50 <argp_failure@@Base+0x310>
   15d14:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15d18:	bl	10dfc <funlockfile@plt>
   15d1c:	b	14d20 <argp_failure@@Base+0x2e0>
   15d20:	mov	r1, r6
   15d24:	mov	r0, r9
   15d28:	bl	12e9c <argp_parse@@Base+0x1760>
   15d2c:	b	159a8 <argp_failure@@Base+0xf68>
   15d30:	mov	r1, #1
   15d34:	mov	r0, r9
   15d38:	bl	178f4 <argp_error@@Base+0x1a5c>
   15d3c:	cmp	r0, #0
   15d40:	beq	159a8 <argp_failure@@Base+0xf68>
   15d44:	ldr	r3, [r9, #28]
   15d48:	b	15998 <argp_failure@@Base+0xf58>
   15d4c:	mov	r1, #1
   15d50:	mov	r0, r9
   15d54:	bl	178f4 <argp_error@@Base+0x1a5c>
   15d58:	cmp	r0, #0
   15d5c:	beq	14db0 <argp_failure@@Base+0x370>
   15d60:	ldr	r3, [r9, #28]
   15d64:	b	14da0 <argp_failure@@Base+0x360>
   15d68:	str	r6, [sp, #4]
   15d6c:	str	r7, [sp]
   15d70:	ldr	r3, [pc, #-188]	; 15cbc <argp_failure@@Base+0x127c>
   15d74:	mov	r2, #0
   15d78:	ldr	r0, [fp, #-104]	; 0xffffff98
   15d7c:	bl	14a40 <argp_failure@@Base>
   15d80:	b	15348 <argp_failure@@Base+0x908>
   15d84:	ldr	r3, [r9, #28]
   15d88:	b	15170 <argp_failure@@Base+0x730>
   15d8c:	mov	r1, #1
   15d90:	mov	r0, r9
   15d94:	bl	178f4 <argp_error@@Base+0x1a5c>
   15d98:	cmp	r0, #0
   15d9c:	beq	1518c <argp_failure@@Base+0x74c>
   15da0:	ldr	r3, [r9, #28]
   15da4:	b	1517c <argp_failure@@Base+0x73c>
   15da8:	mov	r1, #1
   15dac:	mov	r0, r9
   15db0:	bl	178f4 <argp_error@@Base+0x1a5c>
   15db4:	cmp	r0, #0
   15db8:	beq	1511c <argp_failure@@Base+0x6dc>
   15dbc:	ldr	r3, [r9, #28]
   15dc0:	b	1510c <argp_failure@@Base+0x6cc>

00015dc4 <argp_help@@Base>:
   15dc4:	push	{lr}		; (str lr, [sp, #-4]!)
   15dc8:	sub	sp, sp, #12
   15dcc:	str	r3, [sp]
   15dd0:	mov	r3, r2
   15dd4:	mov	r2, r1
   15dd8:	mov	r1, #0
   15ddc:	bl	14c48 <argp_failure@@Base+0x208>
   15de0:	add	sp, sp, #12
   15de4:	pop	{pc}		; (ldr pc, [sp], #4)

00015de8 <argp_state_help@@Base>:
   15de8:	push	{r4, r5, lr}
   15dec:	subs	r4, r0, #0
   15df0:	sub	sp, sp, #12
   15df4:	mov	r5, r2
   15df8:	beq	15e58 <argp_state_help@@Base+0x70>
   15dfc:	ldr	r3, [r4, #16]
   15e00:	tst	r3, #2
   15e04:	bne	15e50 <argp_state_help@@Base+0x68>
   15e08:	cmp	r1, #0
   15e0c:	beq	15e50 <argp_state_help@@Base+0x68>
   15e10:	tst	r3, #64	; 0x40
   15e14:	ldr	r3, [r4, #40]	; 0x28
   15e18:	orrne	r5, r5, #128	; 0x80
   15e1c:	ldr	r0, [r4]
   15e20:	mov	r2, r1
   15e24:	str	r3, [sp]
   15e28:	mov	r1, r4
   15e2c:	mov	r3, r5
   15e30:	bl	14c48 <argp_failure@@Base+0x208>
   15e34:	ldr	r3, [r4, #16]
   15e38:	tst	r3, #32
   15e3c:	bne	15e50 <argp_state_help@@Base+0x68>
   15e40:	ands	r0, r5, #256	; 0x100
   15e44:	bne	15e84 <argp_state_help@@Base+0x9c>
   15e48:	tst	r5, #512	; 0x200
   15e4c:	bne	15e80 <argp_state_help@@Base+0x98>
   15e50:	add	sp, sp, #12
   15e54:	pop	{r4, r5, pc}
   15e58:	cmp	r1, #0
   15e5c:	beq	15e50 <argp_state_help@@Base+0x68>
   15e60:	ldr	r3, [pc, #40]	; 15e90 <argp_state_help@@Base+0xa8>
   15e64:	mov	r2, r1
   15e68:	mov	r1, r4
   15e6c:	ldr	ip, [r3]
   15e70:	mov	r3, r5
   15e74:	str	ip, [sp]
   15e78:	bl	14c48 <argp_failure@@Base+0x208>
   15e7c:	b	15e40 <argp_state_help@@Base+0x58>
   15e80:	bl	10e98 <exit@plt>
   15e84:	ldr	r3, [pc, #8]	; 15e94 <argp_state_help@@Base+0xac>
   15e88:	ldr	r0, [r3]
   15e8c:	bl	10e98 <exit@plt>
   15e90:	andeq	r9, r2, r0, asr #2
   15e94:	andeq	r9, r2, r4, lsr r1

00015e98 <argp_error@@Base>:
   15e98:	push	{r1, r2, r3}
   15e9c:	push	{r4, r5, lr}
   15ea0:	subs	r5, r0, #0
   15ea4:	sub	sp, sp, #8
   15ea8:	beq	15f78 <argp_error@@Base+0xe0>
   15eac:	ldr	r3, [r5, #16]
   15eb0:	tst	r3, #2
   15eb4:	bne	15f68 <argp_error@@Base+0xd0>
   15eb8:	ldr	r4, [r5, #44]	; 0x2c
   15ebc:	cmp	r4, #0
   15ec0:	beq	15f68 <argp_error@@Base+0xd0>
   15ec4:	mov	r0, r4
   15ec8:	bl	10f28 <flockfile@plt>
   15ecc:	ldr	r0, [r5, #40]	; 0x28
   15ed0:	add	r3, sp, #24
   15ed4:	str	r3, [sp, #4]
   15ed8:	mov	r1, r4
   15edc:	bl	10d48 <fputs_unlocked@plt>
   15ee0:	ldr	r3, [r4, #20]
   15ee4:	ldr	r2, [r4, #24]
   15ee8:	cmp	r3, r2
   15eec:	addcc	r1, r3, #1
   15ef0:	movcc	r2, #58	; 0x3a
   15ef4:	strcc	r1, [r4, #20]
   15ef8:	strbcc	r2, [r3]
   15efc:	bcs	15fc4 <argp_error@@Base+0x12c>
   15f00:	ldr	r3, [r4, #20]
   15f04:	ldr	r2, [r4, #24]
   15f08:	cmp	r3, r2
   15f0c:	addcc	r1, r3, #1
   15f10:	movcc	r2, #32
   15f14:	strcc	r1, [r4, #20]
   15f18:	strbcc	r2, [r3]
   15f1c:	bcs	15fb4 <argp_error@@Base+0x11c>
   15f20:	ldr	r1, [sp, #20]
   15f24:	ldr	r2, [sp, #4]
   15f28:	mov	r0, r4
   15f2c:	bl	10f10 <vfprintf@plt>
   15f30:	ldr	r3, [r4, #20]
   15f34:	ldr	r2, [r4, #24]
   15f38:	cmp	r3, r2
   15f3c:	addcc	r1, r3, #1
   15f40:	movcc	r2, #10
   15f44:	strcc	r1, [r4, #20]
   15f48:	strbcc	r2, [r3]
   15f4c:	bcs	15fa4 <argp_error@@Base+0x10c>
   15f50:	mov	r0, r5
   15f54:	mov	r2, #260	; 0x104
   15f58:	mov	r1, r4
   15f5c:	bl	15de8 <argp_state_help@@Base>
   15f60:	mov	r0, r4
   15f64:	bl	10dfc <funlockfile@plt>
   15f68:	add	sp, sp, #8
   15f6c:	pop	{r4, r5, lr}
   15f70:	add	sp, sp, #12
   15f74:	bx	lr
   15f78:	ldr	r3, [pc, #84]	; 15fd4 <argp_error@@Base+0x13c>
   15f7c:	ldr	r4, [r3]
   15f80:	cmp	r4, #0
   15f84:	beq	15f68 <argp_error@@Base+0xd0>
   15f88:	mov	r0, r4
   15f8c:	bl	10f28 <flockfile@plt>
   15f90:	ldr	r2, [pc, #64]	; 15fd8 <argp_error@@Base+0x140>
   15f94:	add	r3, sp, #24
   15f98:	str	r3, [sp, #4]
   15f9c:	ldr	r0, [r2]
   15fa0:	b	15ed8 <argp_error@@Base+0x40>
   15fa4:	mov	r1, #10
   15fa8:	mov	r0, r4
   15fac:	bl	10ef8 <__overflow@plt>
   15fb0:	b	15f50 <argp_error@@Base+0xb8>
   15fb4:	mov	r1, #32
   15fb8:	mov	r0, r4
   15fbc:	bl	10ef8 <__overflow@plt>
   15fc0:	b	15f20 <argp_error@@Base+0x88>
   15fc4:	mov	r1, #58	; 0x3a
   15fc8:	mov	r0, r4
   15fcc:	bl	10ef8 <__overflow@plt>
   15fd0:	b	15f00 <argp_error@@Base+0x68>
   15fd4:	andeq	r9, r2, r8, asr #2
   15fd8:	andeq	r9, r2, r0, asr #2
   15fdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15fe0:	ldr	r4, [r1, #32]
   15fe4:	ldr	r8, [r1, #28]
   15fe8:	ldr	r7, [r1]
   15fec:	add	r6, r0, r4, lsl #2
   15ff0:	mov	r2, r8
   15ff4:	mov	r5, r7
   15ff8:	cmp	r5, r4
   15ffc:	movle	r3, #0
   16000:	movgt	r3, #1
   16004:	cmp	r2, r4
   16008:	movge	r3, #0
   1600c:	cmp	r3, #0
   16010:	beq	16084 <argp_error@@Base+0x1ec>
   16014:	sub	r3, r5, r4
   16018:	sub	sl, r4, r2
   1601c:	cmp	r3, sl
   16020:	ble	16054 <argp_error@@Base+0x1bc>
   16024:	sub	r5, r5, sl
   16028:	add	sl, sl, r2
   1602c:	add	ip, r0, r5, lsl #2
   16030:	add	sl, r0, sl, lsl #2
   16034:	add	r3, r0, r2, lsl #2
   16038:	ldr	r9, [ip]
   1603c:	ldr	lr, [r3]
   16040:	str	r9, [r3], #4
   16044:	cmp	sl, r3
   16048:	str	lr, [ip], #4
   1604c:	bne	16038 <argp_error@@Base+0x1a0>
   16050:	b	15ff8 <argp_error@@Base+0x160>
   16054:	add	sl, r3, r2
   16058:	add	r3, r0, r2, lsl #2
   1605c:	add	r9, r0, sl, lsl #2
   16060:	mov	r2, r6
   16064:	ldr	lr, [r2]
   16068:	ldr	ip, [r3]
   1606c:	str	lr, [r3], #4
   16070:	cmp	r3, r9
   16074:	str	ip, [r2], #4
   16078:	bne	16064 <argp_error@@Base+0x1cc>
   1607c:	mov	r2, sl
   16080:	b	15ff8 <argp_error@@Base+0x160>
   16084:	sub	r4, r7, r4
   16088:	add	r8, r4, r8
   1608c:	str	r8, [r1, #28]
   16090:	str	r7, [r1, #32]
   16094:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1609c:	sub	sp, sp, #44	; 0x2c
   160a0:	str	r1, [sp, #20]
   160a4:	ldr	r1, [sp, #88]	; 0x58
   160a8:	str	r0, [sp, #24]
   160ac:	str	r2, [sp, #28]
   160b0:	ldr	r8, [r1, #20]
   160b4:	str	r3, [sp, #12]
   160b8:	mov	r7, r8
   160bc:	ldrb	r5, [r8]
   160c0:	cmp	r5, #61	; 0x3d
   160c4:	cmpne	r5, #0
   160c8:	movne	r5, #1
   160cc:	moveq	r5, #0
   160d0:	beq	160e8 <argp_error@@Base+0x250>
   160d4:	ldrb	r3, [r7, #1]!
   160d8:	cmp	r3, #0
   160dc:	cmpne	r3, #61	; 0x3d
   160e0:	bne	160d4 <argp_error@@Base+0x23c>
   160e4:	sub	r5, r7, r8
   160e8:	ldr	r3, [sp, #12]
   160ec:	ldr	sl, [r3]
   160f0:	cmp	sl, #0
   160f4:	beq	163a8 <argp_error@@Base+0x510>
   160f8:	mov	fp, r3
   160fc:	mov	r4, sl
   16100:	mov	r6, #0
   16104:	mov	r2, r5
   16108:	mov	r1, r8
   1610c:	mov	r0, r4
   16110:	bl	10f64 <strncmp@plt>
   16114:	mov	r9, fp
   16118:	cmp	r0, #0
   1611c:	mov	r0, r4
   16120:	bne	16130 <argp_error@@Base+0x298>
   16124:	bl	10ea4 <strlen@plt>
   16128:	cmp	r0, r5
   1612c:	beq	161bc <argp_error@@Base+0x324>
   16130:	ldr	r4, [fp, #16]!
   16134:	add	r6, r6, #1
   16138:	cmp	r4, #0
   1613c:	bne	16104 <argp_error@@Base+0x26c>
   16140:	ldr	r3, [sp, #12]
   16144:	ldr	fp, [sp, #88]	; 0x58
   16148:	mov	r0, sl
   1614c:	mov	r1, r8
   16150:	mov	r9, r4
   16154:	mov	sl, r4
   16158:	mov	r8, r3
   1615c:	mvn	r2, #0
   16160:	str	r4, [sp, #36]	; 0x24
   16164:	str	r4, [sp, #16]
   16168:	str	r2, [sp, #32]
   1616c:	mov	r2, r5
   16170:	bl	10f64 <strncmp@plt>
   16174:	cmp	r0, #0
   16178:	bne	16198 <argp_error@@Base+0x300>
   1617c:	cmp	r9, #0
   16180:	beq	16418 <argp_error@@Base+0x580>
   16184:	ldr	r3, [sp, #84]	; 0x54
   16188:	cmp	r3, #0
   1618c:	beq	16260 <argp_error@@Base+0x3c8>
   16190:	cmp	r4, #0
   16194:	beq	16294 <argp_error@@Base+0x3fc>
   16198:	ldr	r0, [r8, #16]!
   1619c:	add	sl, sl, #1
   161a0:	cmp	r0, #0
   161a4:	beq	162c8 <argp_error@@Base+0x430>
   161a8:	ldr	r1, [fp, #20]
   161ac:	b	1616c <argp_error@@Base+0x2d4>
   161b0:	cmp	r9, #0
   161b4:	beq	163a8 <argp_error@@Base+0x510>
   161b8:	ldr	r6, [sp, #32]
   161bc:	ldr	r3, [sp, #88]	; 0x58
   161c0:	ldr	r0, [sp, #88]	; 0x58
   161c4:	mov	r1, #0
   161c8:	ldr	r2, [r3]
   161cc:	str	r1, [r0, #20]
   161d0:	add	r3, r2, #1
   161d4:	str	r3, [r0]
   161d8:	ldrb	r1, [r7]
   161dc:	cmp	r1, #0
   161e0:	bne	16220 <argp_error@@Base+0x388>
   161e4:	ldr	r1, [r9, #4]
   161e8:	cmp	r1, #1
   161ec:	beq	16424 <argp_error@@Base+0x58c>
   161f0:	ldr	r3, [sp, #80]	; 0x50
   161f4:	ldr	r2, [r9, #8]
   161f8:	cmp	r3, #0
   161fc:	strne	r6, [r3]
   16200:	cmp	r2, #0
   16204:	movne	r3, #0
   16208:	ldreq	r3, [r9, #12]
   1620c:	ldrne	r1, [r9, #12]
   16210:	strne	r1, [r2]
   16214:	mov	r0, r3
   16218:	add	sp, sp, #44	; 0x2c
   1621c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16220:	ldr	r3, [r9, #4]
   16224:	cmp	r3, #0
   16228:	movne	r3, r0
   1622c:	addne	r7, r7, #1
   16230:	strne	r7, [r3, #12]
   16234:	bne	161f0 <argp_error@@Base+0x358>
   16238:	ldr	r3, [sp, #92]	; 0x5c
   1623c:	cmp	r3, #0
   16240:	bne	16370 <argp_error@@Base+0x4d8>
   16244:	ldr	r1, [sp, #88]	; 0x58
   16248:	ldr	r2, [r9, #12]
   1624c:	mov	r3, #63	; 0x3f
   16250:	str	r2, [r1, #8]
   16254:	mov	r0, r3
   16258:	add	sp, sp, #44	; 0x2c
   1625c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16260:	ldr	r2, [r9, #4]
   16264:	ldr	r3, [r8, #4]
   16268:	cmp	r2, r3
   1626c:	bne	16190 <argp_error@@Base+0x2f8>
   16270:	ldr	r2, [r9, #8]
   16274:	ldr	r3, [r8, #8]
   16278:	cmp	r2, r3
   1627c:	bne	16190 <argp_error@@Base+0x2f8>
   16280:	ldr	r2, [r9, #12]
   16284:	ldr	r3, [r8, #12]
   16288:	cmp	r2, r3
   1628c:	bne	16190 <argp_error@@Base+0x2f8>
   16290:	b	16198 <argp_error@@Base+0x300>
   16294:	ldr	r3, [sp, #92]	; 0x5c
   16298:	cmp	r3, #0
   1629c:	ldr	r3, [sp, #16]
   162a0:	beq	16360 <argp_error@@Base+0x4c8>
   162a4:	cmp	r3, #0
   162a8:	beq	1657c <argp_error@@Base+0x6e4>
   162ac:	ldr	r3, [sp, #16]
   162b0:	ldr	r0, [r8, #16]!
   162b4:	mov	r2, #1
   162b8:	cmp	r0, #0
   162bc:	strb	r2, [r3, sl]
   162c0:	add	sl, sl, #1
   162c4:	bne	161a8 <argp_error@@Base+0x310>
   162c8:	ldr	r3, [sp, #16]
   162cc:	cmp	r3, #0
   162d0:	cmpeq	r4, #0
   162d4:	beq	161b0 <argp_error@@Base+0x318>
   162d8:	ldr	r3, [sp, #92]	; 0x5c
   162dc:	cmp	r3, #0
   162e0:	beq	16460 <argp_error@@Base+0x5c8>
   162e4:	cmp	r4, #0
   162e8:	bne	164e8 <argp_error@@Base+0x650>
   162ec:	ldr	r5, [pc, #716]	; 165c0 <argp_error@@Base+0x728>
   162f0:	ldr	r8, [sp, #16]
   162f4:	ldr	r7, [pc, #712]	; 165c4 <argp_error@@Base+0x72c>
   162f8:	ldr	r0, [r5]
   162fc:	bl	10f28 <flockfile@plt>
   16300:	ldr	r3, [sp, #20]
   16304:	ldr	r0, [r5]
   16308:	ldr	r1, [pc, #696]	; 165c8 <argp_error@@Base+0x730>
   1630c:	ldr	r2, [r3]
   16310:	ldr	r3, [sp, #88]	; 0x58
   16314:	add	r6, r8, r6
   16318:	ldr	r3, [r3, #20]
   1631c:	str	r3, [sp]
   16320:	ldr	r3, [sp, #96]	; 0x60
   16324:	bl	10ebc <fprintf@plt>
   16328:	ldr	r9, [sp, #12]
   1632c:	b	1633c <argp_error@@Base+0x4a4>
   16330:	cmp	r8, r6
   16334:	add	r4, r4, #1
   16338:	beq	1644c <argp_error@@Base+0x5b4>
   1633c:	ldrb	r3, [r8], #1
   16340:	cmp	r3, #0
   16344:	beq	16330 <argp_error@@Base+0x498>
   16348:	ldr	r3, [r9, r4, lsl #4]
   1634c:	ldr	r2, [sp, #96]	; 0x60
   16350:	mov	r1, r7
   16354:	ldr	r0, [r5]
   16358:	bl	10ebc <fprintf@plt>
   1635c:	b	16330 <argp_error@@Base+0x498>
   16360:	cmp	r3, #0
   16364:	mov	r4, #1
   16368:	bne	162ac <argp_error@@Base+0x414>
   1636c:	b	16198 <argp_error@@Base+0x300>
   16370:	ldr	r3, [sp, #20]
   16374:	ldr	r1, [pc, #580]	; 165c0 <argp_error@@Base+0x728>
   16378:	ldr	r2, [r3]
   1637c:	ldr	r3, [r9]
   16380:	ldr	r0, [r1]
   16384:	str	r3, [sp]
   16388:	ldr	r1, [pc, #572]	; 165cc <argp_error@@Base+0x734>
   1638c:	ldr	r3, [sp, #96]	; 0x60
   16390:	bl	10ebc <fprintf@plt>
   16394:	ldr	r1, [sp, #88]	; 0x58
   16398:	ldr	r2, [r9, #12]
   1639c:	mov	r3, #63	; 0x3f
   163a0:	str	r2, [r1, #8]
   163a4:	b	16254 <argp_error@@Base+0x3bc>
   163a8:	ldr	r3, [sp, #84]	; 0x54
   163ac:	cmp	r3, #0
   163b0:	bne	1653c <argp_error@@Base+0x6a4>
   163b4:	ldr	r3, [sp, #92]	; 0x5c
   163b8:	cmp	r3, #0
   163bc:	beq	163e8 <argp_error@@Base+0x550>
   163c0:	ldr	r3, [sp, #20]
   163c4:	ldr	r1, [pc, #500]	; 165c0 <argp_error@@Base+0x728>
   163c8:	ldr	r2, [r3]
   163cc:	ldr	r3, [sp, #88]	; 0x58
   163d0:	ldr	r0, [r1]
   163d4:	ldr	r1, [pc, #500]	; 165d0 <argp_error@@Base+0x738>
   163d8:	ldr	r3, [r3, #20]
   163dc:	str	r3, [sp]
   163e0:	ldr	r3, [sp, #96]	; 0x60
   163e4:	bl	10ebc <fprintf@plt>
   163e8:	ldr	r3, [sp, #88]	; 0x58
   163ec:	ldr	r1, [sp, #88]	; 0x58
   163f0:	mov	r2, #0
   163f4:	ldr	r3, [r3]
   163f8:	str	r2, [r1, #20]
   163fc:	add	r3, r3, #1
   16400:	str	r3, [r1]
   16404:	mov	r3, #63	; 0x3f
   16408:	mov	r0, r3
   1640c:	str	r2, [r1, #8]
   16410:	add	sp, sp, #44	; 0x2c
   16414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16418:	str	sl, [sp, #32]
   1641c:	mov	r9, r8
   16420:	b	16198 <argp_error@@Base+0x300>
   16424:	ldr	r1, [sp, #24]
   16428:	cmp	r3, r1
   1642c:	bge	164b8 <argp_error@@Base+0x620>
   16430:	ldr	r1, [sp, #20]
   16434:	add	r2, r2, #2
   16438:	ldr	r3, [r1, r3, lsl #2]
   1643c:	ldr	r1, [sp, #88]	; 0x58
   16440:	str	r3, [r1, #12]
   16444:	str	r2, [r1]
   16448:	b	161f0 <argp_error@@Base+0x358>
   1644c:	ldr	r1, [r5]
   16450:	mov	r0, #10
   16454:	bl	10f1c <fputc@plt>
   16458:	ldr	r0, [r5]
   1645c:	bl	10dfc <funlockfile@plt>
   16460:	ldr	r3, [sp, #36]	; 0x24
   16464:	cmp	r3, #0
   16468:	beq	16474 <argp_error@@Base+0x5dc>
   1646c:	ldr	r0, [sp, #16]
   16470:	bl	125d4 <argp_parse@@Base+0xe98>
   16474:	ldr	r3, [sp, #88]	; 0x58
   16478:	ldr	r4, [r3, #20]
   1647c:	mov	r0, r4
   16480:	bl	10ea4 <strlen@plt>
   16484:	ldr	r3, [sp, #88]	; 0x58
   16488:	ldr	r1, [sp, #88]	; 0x58
   1648c:	mov	r2, #0
   16490:	ldr	r3, [r3]
   16494:	str	r2, [r1, #8]
   16498:	add	r3, r3, #1
   1649c:	str	r3, [r1]
   164a0:	mov	r3, #63	; 0x3f
   164a4:	add	r0, r4, r0
   164a8:	str	r0, [r1, #20]
   164ac:	mov	r0, r3
   164b0:	add	sp, sp, #44	; 0x2c
   164b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164b8:	ldr	r3, [sp, #92]	; 0x5c
   164bc:	cmp	r3, #0
   164c0:	bne	16514 <argp_error@@Base+0x67c>
   164c4:	ldr	r2, [sp, #88]	; 0x58
   164c8:	ldr	r3, [r9, #12]
   164cc:	str	r3, [r2, #8]
   164d0:	ldr	r3, [sp, #28]
   164d4:	ldrb	r3, [r3]
   164d8:	cmp	r3, #58	; 0x3a
   164dc:	movne	r3, #63	; 0x3f
   164e0:	moveq	r3, #58	; 0x3a
   164e4:	b	16214 <argp_error@@Base+0x37c>
   164e8:	ldr	r3, [sp, #20]
   164ec:	ldr	r1, [pc, #204]	; 165c0 <argp_error@@Base+0x728>
   164f0:	ldr	r2, [r3]
   164f4:	ldr	r3, [sp, #88]	; 0x58
   164f8:	ldr	r0, [r1]
   164fc:	ldr	r1, [pc, #208]	; 165d4 <argp_error@@Base+0x73c>
   16500:	ldr	r3, [r3, #20]
   16504:	str	r3, [sp]
   16508:	ldr	r3, [sp, #96]	; 0x60
   1650c:	bl	10ebc <fprintf@plt>
   16510:	b	16460 <argp_error@@Base+0x5c8>
   16514:	ldr	r3, [sp, #20]
   16518:	ldr	r1, [pc, #160]	; 165c0 <argp_error@@Base+0x728>
   1651c:	ldr	r2, [r3]
   16520:	ldr	r3, [r9]
   16524:	ldr	r0, [r1]
   16528:	str	r3, [sp]
   1652c:	ldr	r1, [pc, #164]	; 165d8 <argp_error@@Base+0x740>
   16530:	ldr	r3, [sp, #96]	; 0x60
   16534:	bl	10ebc <fprintf@plt>
   16538:	b	164c4 <argp_error@@Base+0x62c>
   1653c:	ldr	r3, [sp, #88]	; 0x58
   16540:	ldr	r2, [sp, #20]
   16544:	ldr	r3, [r3]
   16548:	ldr	r3, [r2, r3, lsl #2]
   1654c:	ldrb	r3, [r3, #1]
   16550:	cmp	r3, #45	; 0x2d
   16554:	beq	163b4 <argp_error@@Base+0x51c>
   16558:	ldr	r3, [sp, #88]	; 0x58
   1655c:	ldr	r0, [sp, #28]
   16560:	ldr	r3, [r3, #20]
   16564:	ldrb	r1, [r3]
   16568:	bl	10eb0 <strchr@plt>
   1656c:	cmp	r0, #0
   16570:	beq	163b4 <argp_error@@Base+0x51c>
   16574:	mvn	r3, #0
   16578:	b	16214 <argp_error@@Base+0x37c>
   1657c:	mov	r0, r6
   16580:	bl	12c70 <argp_parse@@Base+0x1534>
   16584:	subs	r3, r0, #0
   16588:	str	r3, [sp, #16]
   1658c:	beq	165b8 <argp_error@@Base+0x720>
   16590:	mov	r2, r6
   16594:	mov	r1, #0
   16598:	bl	10ee0 <memset@plt>
   1659c:	mov	r3, #1
   165a0:	str	r3, [sp, #36]	; 0x24
   165a4:	ldr	r2, [sp, #32]
   165a8:	ldr	r3, [sp, #16]
   165ac:	mov	r1, #1
   165b0:	strb	r1, [r3, r2]
   165b4:	b	162ac <argp_error@@Base+0x414>
   165b8:	mov	r4, #1
   165bc:	b	16198 <argp_error@@Base+0x300>
   165c0:	andeq	r9, r2, r8, asr #2
   165c4:	strdeq	r8, [r1], -ip
   165c8:	andeq	r8, r1, ip, asr #19
   165cc:	andeq	r8, r1, r4, lsr #20
   165d0:	andeq	r8, r1, r4, lsl #20
   165d4:	andeq	r8, r1, ip, lsr #19
   165d8:	andeq	r8, r1, r4, asr sl
   165dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165e0:	sub	sp, sp, #36	; 0x24
   165e4:	subs	r6, r0, #0
   165e8:	ldr	r4, [sp, #80]	; 0x50
   165ec:	ldr	r8, [r4, #4]
   165f0:	ble	167cc <argp_error@@Base+0x934>
   165f4:	mov	sl, r3
   165f8:	ldr	r3, [r4]
   165fc:	mov	r7, r2
   16600:	mov	r2, #0
   16604:	cmp	r3, r2
   16608:	mov	r9, r1
   1660c:	str	r2, [r4, #12]
   16610:	beq	16854 <argp_error@@Base+0x9bc>
   16614:	ldr	r2, [r4, #16]
   16618:	cmp	r2, #0
   1661c:	bne	167d8 <argp_error@@Base+0x940>
   16620:	mov	r5, #0
   16624:	str	r3, [r4, #32]
   16628:	str	r3, [r4, #28]
   1662c:	str	r5, [r4, #20]
   16630:	ldrb	r3, [r7]
   16634:	cmp	r3, #45	; 0x2d
   16638:	moveq	r3, #2
   1663c:	addeq	r7, r7, #1
   16640:	streq	r3, [r4, #24]
   16644:	beq	1666c <argp_error@@Base+0x7d4>
   16648:	cmp	r3, #43	; 0x2b
   1664c:	streq	r5, [r4, #24]
   16650:	addeq	r7, r7, #1
   16654:	beq	1666c <argp_error@@Base+0x7d4>
   16658:	ldr	r3, [sp, #84]	; 0x54
   1665c:	cmp	r3, #0
   16660:	beq	168f4 <argp_error@@Base+0xa5c>
   16664:	mov	r3, #0
   16668:	str	r3, [r4, #24]
   1666c:	mov	r3, #1
   16670:	str	r3, [r4, #16]
   16674:	ldrb	r3, [r7]
   16678:	cmp	r3, #58	; 0x3a
   1667c:	moveq	r8, #0
   16680:	cmp	r5, #0
   16684:	beq	16738 <argp_error@@Base+0x8a0>
   16688:	ldrb	r3, [r5]
   1668c:	cmp	r3, #0
   16690:	beq	16738 <argp_error@@Base+0x8a0>
   16694:	add	r3, r5, #1
   16698:	str	r3, [r4, #20]
   1669c:	ldrb	fp, [r5]
   166a0:	mov	r0, r7
   166a4:	str	r3, [sp, #28]
   166a8:	mov	r1, fp
   166ac:	bl	10eb0 <strchr@plt>
   166b0:	ldrb	r1, [r5, #1]
   166b4:	ldr	r3, [sp, #28]
   166b8:	cmp	r1, #0
   166bc:	ldreq	r1, [r4]
   166c0:	addeq	r1, r1, #1
   166c4:	streq	r1, [r4]
   166c8:	sub	r1, fp, #58	; 0x3a
   166cc:	mov	r2, r0
   166d0:	cmp	r2, #0
   166d4:	cmpne	r1, #1
   166d8:	mov	r0, fp
   166dc:	bls	16824 <argp_error@@Base+0x98c>
   166e0:	ldrb	r1, [r2]
   166e4:	cmp	r1, #87	; 0x57
   166e8:	ldrb	r1, [r2, #1]
   166ec:	beq	16978 <argp_error@@Base+0xae0>
   166f0:	cmp	r1, #58	; 0x3a
   166f4:	bne	1681c <argp_error@@Base+0x984>
   166f8:	ldrb	r2, [r2, #2]
   166fc:	cmp	r2, #58	; 0x3a
   16700:	ldrb	r2, [r5, #1]
   16704:	beq	16a00 <argp_error@@Base+0xb68>
   16708:	cmp	r2, #0
   1670c:	bne	16a0c <argp_error@@Base+0xb74>
   16710:	ldr	r3, [r4]
   16714:	cmp	r6, r3
   16718:	beq	16aac <argp_error@@Base+0xc14>
   1671c:	ldr	r2, [r9, r3, lsl #2]
   16720:	add	r3, r3, #1
   16724:	str	r2, [r4, #12]
   16728:	str	r3, [r4]
   1672c:	mov	r3, #0
   16730:	str	r3, [r4, #20]
   16734:	b	1681c <argp_error@@Base+0x984>
   16738:	ldr	fp, [r4]
   1673c:	ldr	r3, [r4, #32]
   16740:	cmp	r3, fp
   16744:	ldr	r3, [r4, #28]
   16748:	strgt	fp, [r4, #32]
   1674c:	cmp	fp, r3
   16750:	ldr	r3, [r4, #24]
   16754:	strlt	fp, [r4, #28]
   16758:	cmp	r3, #1
   1675c:	beq	16864 <argp_error@@Base+0x9cc>
   16760:	cmp	r6, fp
   16764:	beq	168dc <argp_error@@Base+0xa44>
   16768:	ldr	r3, [pc, #944]	; 16b20 <argp_error@@Base+0xc88>
   1676c:	ldr	r5, [r9, fp, lsl #2]
   16770:	mov	r1, r3
   16774:	mov	r0, r5
   16778:	str	r3, [sp, #28]
   1677c:	bl	10d60 <strcmp@plt>
   16780:	ldr	r3, [sp, #28]
   16784:	cmp	r0, #0
   16788:	bne	167f4 <argp_error@@Base+0x95c>
   1678c:	ldr	r3, [r4, #28]
   16790:	ldr	r2, [r4, #32]
   16794:	add	fp, fp, #1
   16798:	cmp	r3, r2
   1679c:	str	fp, [r4]
   167a0:	beq	1696c <argp_error@@Base+0xad4>
   167a4:	cmp	fp, r2
   167a8:	beq	167bc <argp_error@@Base+0x924>
   167ac:	mov	r0, r9
   167b0:	mov	r1, r4
   167b4:	bl	15fdc <argp_error@@Base+0x144>
   167b8:	ldr	r3, [r4, #28]
   167bc:	cmp	r3, r6
   167c0:	str	r6, [r4]
   167c4:	str	r6, [r4, #32]
   167c8:	strne	r3, [r4]
   167cc:	mvn	r0, #0
   167d0:	add	sp, sp, #36	; 0x24
   167d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167d8:	ldrb	r3, [r7]
   167dc:	ldr	r5, [r4, #20]
   167e0:	sub	r2, r3, #43	; 0x2b
   167e4:	tst	r2, #253	; 0xfd
   167e8:	ldrbeq	r3, [r7, #1]
   167ec:	addeq	r7, r7, #1
   167f0:	b	16678 <argp_error@@Base+0x7e0>
   167f4:	ldrb	r2, [r5]
   167f8:	cmp	r2, #45	; 0x2d
   167fc:	beq	16920 <argp_error@@Base+0xa88>
   16800:	ldr	r3, [r4, #24]
   16804:	cmp	r3, #0
   16808:	beq	167cc <argp_error@@Base+0x934>
   1680c:	mov	r0, #1
   16810:	add	fp, fp, #1
   16814:	str	fp, [r4]
   16818:	str	r5, [r4, #12]
   1681c:	add	sp, sp, #36	; 0x24
   16820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16824:	cmp	r8, #0
   16828:	beq	16844 <argp_error@@Base+0x9ac>
   1682c:	ldr	r1, [pc, #752]	; 16b24 <argp_error@@Base+0xc8c>
   16830:	ldr	r2, [r9]
   16834:	mov	r3, fp
   16838:	ldr	r0, [r1]
   1683c:	ldr	r1, [pc, #740]	; 16b28 <argp_error@@Base+0xc90>
   16840:	bl	10ebc <fprintf@plt>
   16844:	mov	r0, #63	; 0x3f
   16848:	str	fp, [r4, #8]
   1684c:	add	sp, sp, #36	; 0x24
   16850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16854:	mov	r2, #1
   16858:	mov	r3, r2
   1685c:	str	r2, [r4]
   16860:	b	16620 <argp_error@@Base+0x788>
   16864:	ldr	r2, [r4, #28]
   16868:	ldr	r3, [r4, #32]
   1686c:	cmp	r2, r3
   16870:	beq	169f0 <argp_error@@Base+0xb58>
   16874:	cmp	fp, r3
   16878:	beq	1688c <argp_error@@Base+0x9f4>
   1687c:	mov	r1, r4
   16880:	mov	r0, r9
   16884:	bl	15fdc <argp_error@@Base+0x144>
   16888:	ldr	r3, [r4]
   1688c:	cmp	r6, r3
   16890:	movle	fp, r3
   16894:	ble	168d0 <argp_error@@Base+0xa38>
   16898:	add	r1, r9, r3, lsl #2
   1689c:	b	168b0 <argp_error@@Base+0xa18>
   168a0:	add	r3, r3, #1
   168a4:	cmp	r6, r3
   168a8:	str	r3, [r4]
   168ac:	beq	16914 <argp_error@@Base+0xa7c>
   168b0:	ldr	r2, [r1], #4
   168b4:	ldrb	r0, [r2]
   168b8:	cmp	r0, #45	; 0x2d
   168bc:	bne	168a0 <argp_error@@Base+0xa08>
   168c0:	ldrb	r2, [r2, #1]
   168c4:	cmp	r2, #0
   168c8:	beq	168a0 <argp_error@@Base+0xa08>
   168cc:	ldr	fp, [r4]
   168d0:	str	r3, [r4, #32]
   168d4:	cmp	r6, fp
   168d8:	bne	16768 <argp_error@@Base+0x8d0>
   168dc:	ldr	r3, [r4, #28]
   168e0:	ldr	r6, [r4, #32]
   168e4:	mvn	r0, #0
   168e8:	cmp	r3, r6
   168ec:	strne	r3, [r4]
   168f0:	b	167d0 <argp_error@@Base+0x938>
   168f4:	ldr	r0, [pc, #560]	; 16b2c <argp_error@@Base+0xc94>
   168f8:	bl	10e2c <getenv@plt>
   168fc:	ldr	r5, [r4, #20]
   16900:	cmp	r0, #0
   16904:	bne	16664 <argp_error@@Base+0x7cc>
   16908:	mov	r3, #1
   1690c:	str	r3, [r4, #24]
   16910:	b	1666c <argp_error@@Base+0x7d4>
   16914:	mov	fp, r6
   16918:	str	r3, [r4, #32]
   1691c:	b	168d4 <argp_error@@Base+0xa3c>
   16920:	ldrb	r1, [r5, #1]
   16924:	cmp	r1, #0
   16928:	beq	16800 <argp_error@@Base+0x968>
   1692c:	cmp	sl, #0
   16930:	beq	16964 <argp_error@@Base+0xacc>
   16934:	cmp	r1, #45	; 0x2d
   16938:	beq	16a70 <argp_error@@Base+0xbd8>
   1693c:	ldr	r3, [sp, #76]	; 0x4c
   16940:	cmp	r3, #0
   16944:	beq	16964 <argp_error@@Base+0xacc>
   16948:	ldrb	r3, [r5, #2]
   1694c:	cmp	r3, #0
   16950:	bne	16a20 <argp_error@@Base+0xb88>
   16954:	mov	r0, r7
   16958:	bl	10eb0 <strchr@plt>
   1695c:	cmp	r0, #0
   16960:	beq	16a20 <argp_error@@Base+0xb88>
   16964:	add	r5, r5, #1
   16968:	b	16694 <argp_error@@Base+0x7fc>
   1696c:	mov	r3, fp
   16970:	str	fp, [r4, #28]
   16974:	b	167bc <argp_error@@Base+0x924>
   16978:	cmp	sl, #0
   1697c:	sub	ip, r1, #59	; 0x3b
   16980:	clz	ip, ip
   16984:	lsr	ip, ip, #5
   16988:	moveq	ip, #0
   1698c:	cmp	ip, #0
   16990:	beq	166f0 <argp_error@@Base+0x858>
   16994:	ldrb	r2, [r5, #1]
   16998:	cmp	r2, #0
   1699c:	bne	169b0 <argp_error@@Base+0xb18>
   169a0:	ldr	r3, [r4]
   169a4:	cmp	r6, r3
   169a8:	ldrne	r3, [r9, r3, lsl #2]
   169ac:	beq	16acc <argp_error@@Base+0xc34>
   169b0:	str	r3, [r4, #20]
   169b4:	ldr	lr, [pc, #372]	; 16b30 <argp_error@@Base+0xc98>
   169b8:	ldr	r3, [sp, #72]	; 0x48
   169bc:	mov	ip, #0
   169c0:	str	r3, [sp]
   169c4:	str	r8, [sp, #12]
   169c8:	str	r4, [sp, #8]
   169cc:	str	lr, [sp, #16]
   169d0:	mov	r3, sl
   169d4:	str	ip, [r4, #12]
   169d8:	mov	r2, r7
   169dc:	mov	r1, r9
   169e0:	mov	r0, r6
   169e4:	str	ip, [sp, #4]
   169e8:	bl	16098 <argp_error@@Base+0x200>
   169ec:	b	1681c <argp_error@@Base+0x984>
   169f0:	cmp	fp, r3
   169f4:	movne	r3, fp
   169f8:	strne	fp, [r4, #28]
   169fc:	b	1688c <argp_error@@Base+0x9f4>
   16a00:	cmp	r2, #0
   16a04:	streq	r2, [r4, #12]
   16a08:	beq	1672c <argp_error@@Base+0x894>
   16a0c:	ldr	r2, [r4]
   16a10:	str	r3, [r4, #12]
   16a14:	add	r3, r2, #1
   16a18:	str	r3, [r4]
   16a1c:	b	1672c <argp_error@@Base+0x894>
   16a20:	ldr	r2, [sp, #76]	; 0x4c
   16a24:	add	r5, r5, #1
   16a28:	str	r5, [r4, #20]
   16a2c:	ldr	r3, [pc, #256]	; 16b34 <argp_error@@Base+0xc9c>
   16a30:	str	r2, [sp, #4]
   16a34:	ldr	r2, [sp, #72]	; 0x48
   16a38:	str	r3, [sp, #16]
   16a3c:	str	r2, [sp]
   16a40:	str	r8, [sp, #12]
   16a44:	str	r4, [sp, #8]
   16a48:	mov	r3, sl
   16a4c:	mov	r2, r7
   16a50:	mov	r1, r9
   16a54:	mov	r0, r6
   16a58:	bl	16098 <argp_error@@Base+0x200>
   16a5c:	cmn	r0, #1
   16a60:	bne	1681c <argp_error@@Base+0x984>
   16a64:	ldr	r3, [r4]
   16a68:	ldr	r5, [r9, r3, lsl #2]
   16a6c:	b	16964 <argp_error@@Base+0xacc>
   16a70:	add	r5, r5, #2
   16a74:	str	r5, [r4, #20]
   16a78:	str	r3, [sp, #16]
   16a7c:	ldr	r3, [sp, #76]	; 0x4c
   16a80:	str	r8, [sp, #12]
   16a84:	str	r3, [sp, #4]
   16a88:	ldr	r3, [sp, #72]	; 0x48
   16a8c:	str	r4, [sp, #8]
   16a90:	str	r3, [sp]
   16a94:	mov	r2, r7
   16a98:	mov	r3, sl
   16a9c:	mov	r1, r9
   16aa0:	mov	r0, r6
   16aa4:	bl	16098 <argp_error@@Base+0x200>
   16aa8:	b	1681c <argp_error@@Base+0x984>
   16aac:	cmp	r8, #0
   16ab0:	bne	16b04 <argp_error@@Base+0xc6c>
   16ab4:	str	fp, [r4, #8]
   16ab8:	ldrb	r0, [r7]
   16abc:	cmp	r0, #58	; 0x3a
   16ac0:	movne	r0, #63	; 0x3f
   16ac4:	moveq	r0, #58	; 0x3a
   16ac8:	b	1672c <argp_error@@Base+0x894>
   16acc:	cmp	r8, #0
   16ad0:	beq	16aec <argp_error@@Base+0xc54>
   16ad4:	ldr	r1, [pc, #72]	; 16b24 <argp_error@@Base+0xc8c>
   16ad8:	ldr	r2, [r9]
   16adc:	mov	r3, fp
   16ae0:	ldr	r0, [r1]
   16ae4:	ldr	r1, [pc, #76]	; 16b38 <argp_error@@Base+0xca0>
   16ae8:	bl	10ebc <fprintf@plt>
   16aec:	str	fp, [r4, #8]
   16af0:	ldrb	r0, [r7]
   16af4:	cmp	r0, #58	; 0x3a
   16af8:	movne	r0, #63	; 0x3f
   16afc:	moveq	r0, #58	; 0x3a
   16b00:	b	1681c <argp_error@@Base+0x984>
   16b04:	ldr	r1, [pc, #24]	; 16b24 <argp_error@@Base+0xc8c>
   16b08:	ldr	r2, [r9]
   16b0c:	mov	r3, fp
   16b10:	ldr	r0, [r1]
   16b14:	ldr	r1, [pc, #28]	; 16b38 <argp_error@@Base+0xca0>
   16b18:	bl	10ebc <fprintf@plt>
   16b1c:	b	16ab4 <argp_error@@Base+0xc1c>
   16b20:	andeq	r8, r1, r0, ror #2
   16b24:	andeq	r9, r2, r8, asr #2
   16b28:	muleq	r1, r0, sl
   16b2c:	andeq	r8, r1, ip, ror sl
   16b30:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16b34:	andeq	r8, r1, ip, lsl #21
   16b38:	andeq	r8, r1, ip, lsr #21
   16b3c:	push	{r4, r5, r6, lr}
   16b40:	sub	sp, sp, #16
   16b44:	ldr	r5, [pc, #84]	; 16ba0 <argp_error@@Base+0xd08>
   16b48:	ldr	ip, [sp, #32]
   16b4c:	ldr	r4, [pc, #80]	; 16ba4 <argp_error@@Base+0xd0c>
   16b50:	str	ip, [sp]
   16b54:	ldr	ip, [sp, #40]	; 0x28
   16b58:	ldr	r6, [sp, #36]	; 0x24
   16b5c:	ldr	lr, [r5]
   16b60:	str	ip, [sp, #12]
   16b64:	ldr	ip, [r5, #4]
   16b68:	str	r4, [sp, #8]
   16b6c:	str	r6, [sp, #4]
   16b70:	str	ip, [r4, #4]
   16b74:	str	lr, [r4]
   16b78:	bl	165dc <argp_error@@Base+0x744>
   16b7c:	ldr	r3, [pc, #36]	; 16ba8 <argp_error@@Base+0xd10>
   16b80:	ldr	ip, [r4]
   16b84:	ldr	r1, [r4, #8]
   16b88:	ldr	r2, [r4, #12]
   16b8c:	str	ip, [r5]
   16b90:	str	r1, [r5, #8]
   16b94:	str	r2, [r3]
   16b98:	add	sp, sp, #16
   16b9c:	pop	{r4, r5, r6, pc}
   16ba0:	andeq	r9, r2, r8, lsr #2
   16ba4:	andeq	r9, r2, r8, ror #2
   16ba8:	muleq	r2, r4, r1
   16bac:	push	{lr}		; (str lr, [sp, #-4]!)
   16bb0:	mov	r3, #0
   16bb4:	sub	sp, sp, #20
   16bb8:	mov	ip, #1
   16bbc:	str	r3, [sp]
   16bc0:	stmib	sp, {r3, ip}
   16bc4:	bl	16b3c <argp_error@@Base+0xca4>
   16bc8:	add	sp, sp, #20
   16bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16bd0:	push	{r4, lr}
   16bd4:	bl	12c70 <argp_parse@@Base+0x1534>
   16bd8:	cmp	r0, #0
   16bdc:	popne	{r4, pc}
   16be0:	bl	17118 <argp_error@@Base+0x1280>
   16be4:	push	{r4, lr}
   16be8:	bl	12c70 <argp_parse@@Base+0x1534>
   16bec:	cmp	r0, #0
   16bf0:	popne	{r4, pc}
   16bf4:	bl	17118 <argp_error@@Base+0x1280>
   16bf8:	push	{r4, lr}
   16bfc:	bl	12c70 <argp_parse@@Base+0x1534>
   16c00:	cmp	r0, #0
   16c04:	popne	{r4, pc}
   16c08:	bl	17118 <argp_error@@Base+0x1280>
   16c0c:	push	{r4, r5, r6, lr}
   16c10:	mov	r5, r0
   16c14:	mov	r4, r1
   16c18:	bl	1718c <argp_error@@Base+0x12f4>
   16c1c:	cmp	r0, #0
   16c20:	popne	{r4, r5, r6, pc}
   16c24:	adds	r4, r4, #0
   16c28:	movne	r4, #1
   16c2c:	cmp	r5, #0
   16c30:	orreq	r4, r4, #1
   16c34:	cmp	r4, #0
   16c38:	popeq	{r4, r5, r6, pc}
   16c3c:	bl	17118 <argp_error@@Base+0x1280>
   16c40:	push	{r4, lr}
   16c44:	cmp	r1, #0
   16c48:	orreq	r1, r1, #1
   16c4c:	bl	1718c <argp_error@@Base+0x12f4>
   16c50:	cmp	r0, #0
   16c54:	popne	{r4, pc}
   16c58:	bl	17118 <argp_error@@Base+0x1280>
   16c5c:	push	{r4, r5, r6, lr}
   16c60:	mov	r6, r0
   16c64:	mov	r5, r1
   16c68:	mov	r4, r2
   16c6c:	bl	179b0 <argp_error@@Base+0x1b18>
   16c70:	cmp	r0, #0
   16c74:	popne	{r4, r5, r6, pc}
   16c78:	cmp	r6, #0
   16c7c:	beq	16c8c <argp_error@@Base+0xdf4>
   16c80:	cmp	r5, #0
   16c84:	cmpne	r4, #0
   16c88:	popeq	{r4, r5, r6, pc}
   16c8c:	bl	17118 <argp_error@@Base+0x1280>
   16c90:	b	16c5c <argp_error@@Base+0xdc4>
   16c94:	cmp	r2, #0
   16c98:	cmpne	r1, #0
   16c9c:	moveq	r2, #1
   16ca0:	moveq	r1, r2
   16ca4:	push	{r4, lr}
   16ca8:	bl	179b0 <argp_error@@Base+0x1b18>
   16cac:	cmp	r0, #0
   16cb0:	popne	{r4, pc}
   16cb4:	bl	17118 <argp_error@@Base+0x1280>
   16cb8:	mov	r2, r1
   16cbc:	mov	r1, r0
   16cc0:	mov	r0, #0
   16cc4:	b	16c5c <argp_error@@Base+0xdc4>
   16cc8:	mov	r2, r1
   16ccc:	mov	r1, r0
   16cd0:	mov	r0, #0
   16cd4:	b	16c94 <argp_error@@Base+0xdfc>
   16cd8:	push	{r4, r5, r6, lr}
   16cdc:	subs	r6, r0, #0
   16ce0:	sub	sp, sp, #8
   16ce4:	mov	r5, r1
   16ce8:	ldr	r4, [r1]
   16cec:	beq	16d28 <argp_error@@Base+0xe90>
   16cf0:	lsr	r1, r4, #1
   16cf4:	add	r3, r1, #1
   16cf8:	mvn	r3, r3
   16cfc:	cmp	r4, r3
   16d00:	bhi	16d24 <argp_error@@Base+0xe8c>
   16d04:	add	r4, r4, #1
   16d08:	add	r4, r4, r1
   16d0c:	mov	r0, r6
   16d10:	mov	r1, r4
   16d14:	bl	16c5c <argp_error@@Base+0xdc4>
   16d18:	str	r4, [r5]
   16d1c:	add	sp, sp, #8
   16d20:	pop	{r4, r5, r6, pc}
   16d24:	bl	17118 <argp_error@@Base+0x1280>
   16d28:	cmp	r4, #0
   16d2c:	bne	16d0c <argp_error@@Base+0xe74>
   16d30:	mov	r1, r2
   16d34:	mov	r0, #64	; 0x40
   16d38:	str	r2, [sp, #4]
   16d3c:	bl	179fc <argp_error@@Base+0x1b64>
   16d40:	ldr	r2, [sp, #4]
   16d44:	cmp	r0, #0
   16d48:	movne	r4, r0
   16d4c:	addeq	r4, r0, #1
   16d50:	b	16d0c <argp_error@@Base+0xe74>
   16d54:	mov	r2, #1
   16d58:	b	16cd8 <argp_error@@Base+0xe40>
   16d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d60:	sub	sp, sp, #12
   16d64:	ldr	r6, [r1]
   16d68:	mov	sl, r1
   16d6c:	mov	r9, r0
   16d70:	asrs	r4, r6, #1
   16d74:	mov	r5, r2
   16d78:	mov	fp, r3
   16d7c:	ldr	r7, [sp, #48]	; 0x30
   16d80:	bmi	16eec <argp_error@@Base+0x1054>
   16d84:	mvn	r3, #-2147483648	; 0x80000000
   16d88:	sub	r3, r3, r4
   16d8c:	cmp	r6, r3
   16d90:	movle	r3, #0
   16d94:	movgt	r3, #1
   16d98:	mvn	r8, fp
   16d9c:	cmp	r3, #0
   16da0:	addeq	r4, r4, r6
   16da4:	mvnne	r4, #-2147483648	; 0x80000000
   16da8:	lsr	r8, r8, #31
   16dac:	cmp	fp, r4
   16db0:	movge	r3, #0
   16db4:	andlt	r3, r8, #1
   16db8:	cmp	r3, #0
   16dbc:	beq	16ea4 <argp_error@@Base+0x100c>
   16dc0:	cmp	r7, #0
   16dc4:	blt	16f74 <argp_error@@Base+0x10dc>
   16dc8:	bne	16f6c <argp_error@@Base+0x10d4>
   16dcc:	mov	r2, #64	; 0x40
   16dd0:	mov	r1, r7
   16dd4:	mov	r0, r2
   16dd8:	str	r2, [sp, #4]
   16ddc:	bl	17c08 <argp_error@@Base+0x1d70>
   16de0:	ldr	r2, [sp, #4]
   16de4:	mov	r1, r7
   16de8:	mov	r4, r0
   16dec:	mov	r0, r2
   16df0:	bl	17e28 <argp_error@@Base+0x1f90>
   16df4:	ldr	r2, [sp, #4]
   16df8:	sub	r1, r2, r1
   16dfc:	cmp	r9, #0
   16e00:	sub	r3, r4, r6
   16e04:	streq	r9, [sl]
   16e08:	cmp	r3, r5
   16e0c:	bge	16e90 <argp_error@@Base+0xff8>
   16e10:	cmp	r5, #0
   16e14:	blt	16f00 <argp_error@@Base+0x1068>
   16e18:	cmp	r6, #0
   16e1c:	blt	16e3c <argp_error@@Base+0xfa4>
   16e20:	mvn	r3, #-2147483648	; 0x80000000
   16e24:	sub	r3, r3, r5
   16e28:	cmp	r6, r3
   16e2c:	movle	r3, #0
   16e30:	movgt	r3, #1
   16e34:	cmp	r3, #0
   16e38:	bne	16ffc <argp_error@@Base+0x1164>
   16e3c:	add	r5, r6, r5
   16e40:	cmp	fp, r5
   16e44:	movge	r8, #0
   16e48:	andlt	r8, r8, #1
   16e4c:	cmp	r8, #0
   16e50:	mov	r4, r5
   16e54:	bne	16ffc <argp_error@@Base+0x1164>
   16e58:	cmp	r7, #0
   16e5c:	blt	16f14 <argp_error@@Base+0x107c>
   16e60:	beq	16e8c <argp_error@@Base+0xff4>
   16e64:	cmp	r5, #0
   16e68:	blt	16fbc <argp_error@@Base+0x1124>
   16e6c:	mov	r1, r7
   16e70:	mvn	r0, #-2147483648	; 0x80000000
   16e74:	bl	17c08 <argp_error@@Base+0x1d70>
   16e78:	cmp	r5, r0
   16e7c:	movle	r0, #0
   16e80:	movgt	r0, #1
   16e84:	cmp	r0, #0
   16e88:	bne	16ffc <argp_error@@Base+0x1164>
   16e8c:	mul	r1, r5, r7
   16e90:	mov	r0, r9
   16e94:	bl	16c0c <argp_error@@Base+0xd74>
   16e98:	str	r4, [sl]
   16e9c:	add	sp, sp, #12
   16ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ea4:	cmp	r7, #0
   16ea8:	blt	16f40 <argp_error@@Base+0x10a8>
   16eac:	beq	16dcc <argp_error@@Base+0xf34>
   16eb0:	cmp	r4, #0
   16eb4:	blt	16f7c <argp_error@@Base+0x10e4>
   16eb8:	mov	r1, r7
   16ebc:	mvn	r0, #-2147483648	; 0x80000000
   16ec0:	bl	17c08 <argp_error@@Base+0x1d70>
   16ec4:	cmp	r0, r4
   16ec8:	movge	r0, #0
   16ecc:	movlt	r0, #1
   16ed0:	cmp	r0, #0
   16ed4:	mvnne	r2, #-2147483648	; 0x80000000
   16ed8:	bne	16dd0 <argp_error@@Base+0xf38>
   16edc:	mul	r1, r7, r4
   16ee0:	cmp	r1, #63	; 0x3f
   16ee4:	bgt	16dfc <argp_error@@Base+0xf64>
   16ee8:	b	16dcc <argp_error@@Base+0xf34>
   16eec:	rsb	r3, r4, #-2147483648	; 0x80000000
   16ef0:	cmp	r6, r3
   16ef4:	movge	r3, #0
   16ef8:	movlt	r3, #1
   16efc:	b	16d98 <argp_error@@Base+0xf00>
   16f00:	rsb	r3, r5, #-2147483648	; 0x80000000
   16f04:	cmp	r6, r3
   16f08:	movge	r3, #0
   16f0c:	movlt	r3, #1
   16f10:	b	16e34 <argp_error@@Base+0xf9c>
   16f14:	cmp	r5, #0
   16f18:	blt	16fa0 <argp_error@@Base+0x1108>
   16f1c:	cmn	r7, #1
   16f20:	beq	16e8c <argp_error@@Base+0xff4>
   16f24:	mov	r1, r7
   16f28:	mov	r0, #-2147483648	; 0x80000000
   16f2c:	bl	17c08 <argp_error@@Base+0x1d70>
   16f30:	cmp	r5, r0
   16f34:	movle	r0, #0
   16f38:	movgt	r0, #1
   16f3c:	b	16e84 <argp_error@@Base+0xfec>
   16f40:	cmp	r4, #0
   16f44:	blt	16fe0 <argp_error@@Base+0x1148>
   16f48:	cmn	r7, #1
   16f4c:	beq	16edc <argp_error@@Base+0x1044>
   16f50:	mov	r1, r7
   16f54:	mov	r0, #-2147483648	; 0x80000000
   16f58:	bl	17c08 <argp_error@@Base+0x1d70>
   16f5c:	cmp	r0, r4
   16f60:	movge	r0, #0
   16f64:	movlt	r0, #1
   16f68:	b	16ed0 <argp_error@@Base+0x1038>
   16f6c:	mov	r4, fp
   16f70:	b	16eb8 <argp_error@@Base+0x1020>
   16f74:	mov	r4, fp
   16f78:	b	16f48 <argp_error@@Base+0x10b0>
   16f7c:	cmn	r4, #1
   16f80:	beq	16edc <argp_error@@Base+0x1044>
   16f84:	mov	r1, r4
   16f88:	mov	r0, #-2147483648	; 0x80000000
   16f8c:	bl	17c08 <argp_error@@Base+0x1d70>
   16f90:	cmp	r7, r0
   16f94:	movle	r0, #0
   16f98:	movgt	r0, #1
   16f9c:	b	16ed0 <argp_error@@Base+0x1038>
   16fa0:	mov	r1, r7
   16fa4:	mvn	r0, #-2147483648	; 0x80000000
   16fa8:	bl	17c08 <argp_error@@Base+0x1d70>
   16fac:	cmp	r5, r0
   16fb0:	movge	r0, #0
   16fb4:	movlt	r0, #1
   16fb8:	b	16e84 <argp_error@@Base+0xfec>
   16fbc:	cmn	r5, #1
   16fc0:	beq	16e8c <argp_error@@Base+0xff4>
   16fc4:	mov	r1, r5
   16fc8:	mov	r0, #-2147483648	; 0x80000000
   16fcc:	bl	17c08 <argp_error@@Base+0x1d70>
   16fd0:	cmp	r7, r0
   16fd4:	movle	r0, #0
   16fd8:	movgt	r0, #1
   16fdc:	b	16e84 <argp_error@@Base+0xfec>
   16fe0:	mov	r1, r7
   16fe4:	mvn	r0, #-2147483648	; 0x80000000
   16fe8:	bl	17c08 <argp_error@@Base+0x1d70>
   16fec:	cmp	r0, r4
   16ff0:	movle	r0, #0
   16ff4:	movgt	r0, #1
   16ff8:	b	16ed0 <argp_error@@Base+0x1038>
   16ffc:	bl	17118 <argp_error@@Base+0x1280>
   17000:	push	{r4, lr}
   17004:	mov	r1, #1
   17008:	bl	17144 <argp_error@@Base+0x12ac>
   1700c:	cmp	r0, #0
   17010:	popne	{r4, pc}
   17014:	bl	17118 <argp_error@@Base+0x1280>
   17018:	push	{r4, lr}
   1701c:	mov	r1, #1
   17020:	bl	17144 <argp_error@@Base+0x12ac>
   17024:	cmp	r0, #0
   17028:	popne	{r4, pc}
   1702c:	bl	17118 <argp_error@@Base+0x1280>
   17030:	push	{r4, lr}
   17034:	bl	17144 <argp_error@@Base+0x12ac>
   17038:	cmp	r0, #0
   1703c:	popne	{r4, pc}
   17040:	bl	17118 <argp_error@@Base+0x1280>
   17044:	push	{r4, lr}
   17048:	bl	17144 <argp_error@@Base+0x12ac>
   1704c:	cmp	r0, #0
   17050:	popne	{r4, pc}
   17054:	bl	17118 <argp_error@@Base+0x1280>
   17058:	push	{r4, r5, r6, lr}
   1705c:	mov	r6, r0
   17060:	mov	r0, r1
   17064:	mov	r4, r1
   17068:	bl	12c70 <argp_parse@@Base+0x1534>
   1706c:	subs	r5, r0, #0
   17070:	beq	17088 <argp_error@@Base+0x11f0>
   17074:	mov	r2, r4
   17078:	mov	r1, r6
   1707c:	bl	10dc0 <memcpy@plt>
   17080:	mov	r0, r5
   17084:	pop	{r4, r5, r6, pc}
   17088:	bl	17118 <argp_error@@Base+0x1280>
   1708c:	push	{r4, r5, r6, lr}
   17090:	mov	r6, r0
   17094:	mov	r0, r1
   17098:	mov	r4, r1
   1709c:	bl	12c70 <argp_parse@@Base+0x1534>
   170a0:	subs	r5, r0, #0
   170a4:	beq	170bc <argp_error@@Base+0x1224>
   170a8:	mov	r2, r4
   170ac:	mov	r1, r6
   170b0:	bl	10dc0 <memcpy@plt>
   170b4:	mov	r0, r5
   170b8:	pop	{r4, r5, r6, pc}
   170bc:	bl	17118 <argp_error@@Base+0x1280>
   170c0:	push	{r4, r5, r6, lr}
   170c4:	mov	r6, r0
   170c8:	add	r0, r1, #1
   170cc:	mov	r4, r1
   170d0:	bl	12c70 <argp_parse@@Base+0x1534>
   170d4:	subs	r5, r0, #0
   170d8:	beq	170f8 <argp_error@@Base+0x1260>
   170dc:	mov	r3, #0
   170e0:	mov	r1, r6
   170e4:	strb	r3, [r5, r4]
   170e8:	mov	r2, r4
   170ec:	bl	10dc0 <memcpy@plt>
   170f0:	mov	r0, r5
   170f4:	pop	{r4, r5, r6, pc}
   170f8:	bl	17118 <argp_error@@Base+0x1280>
   170fc:	push	{r4, lr}
   17100:	mov	r4, r0
   17104:	bl	10ea4 <strlen@plt>
   17108:	add	r1, r0, #1
   1710c:	mov	r0, r4
   17110:	pop	{r4, lr}
   17114:	b	17058 <argp_error@@Base+0x11c0>
   17118:	ldr	r1, [pc, #24]	; 17138 <argp_error@@Base+0x12a0>
   1711c:	push	{r4, lr}
   17120:	ldr	r0, [r1]
   17124:	ldr	r3, [pc, #16]	; 1713c <argp_error@@Base+0x12a4>
   17128:	ldr	r2, [pc, #16]	; 17140 <argp_error@@Base+0x12a8>
   1712c:	mov	r1, #0
   17130:	bl	10e14 <error@plt>
   17134:	bl	10f70 <abort@plt>
   17138:	andeq	r9, r2, r8, lsr r1
   1713c:	ldrdeq	r8, [r1], -ip
   17140:	ldrdeq	r7, [r1], -ip
   17144:	cmp	r1, #0
   17148:	cmpne	r0, #0
   1714c:	moveq	r1, #1
   17150:	moveq	r0, r1
   17154:	umull	r2, r3, r0, r1
   17158:	adds	r3, r3, #0
   1715c:	movne	r3, #1
   17160:	cmp	r2, #0
   17164:	blt	17174 <argp_error@@Base+0x12dc>
   17168:	cmp	r3, #0
   1716c:	bne	17174 <argp_error@@Base+0x12dc>
   17170:	b	10d3c <calloc@plt>
   17174:	push	{r4, lr}
   17178:	bl	10ec8 <__errno_location@plt>
   1717c:	mov	r3, #12
   17180:	str	r3, [r0]
   17184:	mov	r0, #0
   17188:	pop	{r4, pc}
   1718c:	cmp	r0, #0
   17190:	beq	171b4 <argp_error@@Base+0x131c>
   17194:	cmp	r1, #0
   17198:	push	{lr}		; (str lr, [sp, #-4]!)
   1719c:	sub	sp, sp, #12
   171a0:	beq	171bc <argp_error@@Base+0x1324>
   171a4:	blt	171d4 <argp_error@@Base+0x133c>
   171a8:	add	sp, sp, #12
   171ac:	pop	{lr}		; (ldr lr, [sp], #4)
   171b0:	b	10de4 <realloc@plt>
   171b4:	mov	r0, r1
   171b8:	b	12c70 <argp_parse@@Base+0x1534>
   171bc:	str	r1, [sp, #4]
   171c0:	bl	125d4 <argp_parse@@Base+0xe98>
   171c4:	ldr	r3, [sp, #4]
   171c8:	mov	r0, r3
   171cc:	add	sp, sp, #12
   171d0:	pop	{pc}		; (ldr pc, [sp], #4)
   171d4:	bl	10ec8 <__errno_location@plt>
   171d8:	mov	r2, #12
   171dc:	mov	r3, #0
   171e0:	str	r2, [r0]
   171e4:	b	171c8 <argp_error@@Base+0x1330>
   171e8:	push	{r4, r5, r6, r7, r8, lr}
   171ec:	mov	r8, r0
   171f0:	mov	r0, #36	; 0x24
   171f4:	mov	r7, r1
   171f8:	mov	r6, r2
   171fc:	mov	r5, r3
   17200:	bl	12c70 <argp_parse@@Base+0x1534>
   17204:	subs	r4, r0, #0
   17208:	beq	1724c <argp_error@@Base+0x13b4>
   1720c:	mov	r0, #0
   17210:	str	r5, [r4, #12]
   17214:	str	r0, [r4, #20]
   17218:	str	r0, [r4, #16]
   1721c:	str	r8, [r4]
   17220:	str	r7, [r4, #4]
   17224:	str	r6, [r4, #8]
   17228:	mov	r0, #200	; 0xc8
   1722c:	bl	12c70 <argp_parse@@Base+0x1534>
   17230:	cmp	r0, #0
   17234:	addne	r3, r0, #200	; 0xc8
   17238:	mov	r5, r0
   1723c:	str	r0, [r4, #24]
   17240:	strne	r0, [r4, #28]
   17244:	strne	r3, [r4, #32]
   17248:	beq	17254 <argp_error@@Base+0x13bc>
   1724c:	mov	r0, r4
   17250:	pop	{r4, r5, r6, r7, r8, pc}
   17254:	mov	r0, r4
   17258:	bl	125d4 <argp_parse@@Base+0xe98>
   1725c:	mov	r4, r5
   17260:	b	1724c <argp_error@@Base+0x13b4>
   17264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17268:	mov	r7, r0
   1726c:	ldr	r6, [r0, #24]
   17270:	ldr	r3, [r0, #16]
   17274:	ldr	fp, [r0, #28]
   17278:	sub	sp, sp, #12
   1727c:	add	r6, r6, r3
   17280:	mov	r9, #32
   17284:	cmp	r6, fp
   17288:	bcs	17364 <argp_error@@Base+0x14cc>
   1728c:	ldr	r8, [r7, #20]
   17290:	cmp	r8, #0
   17294:	bne	17304 <argp_error@@Base+0x146c>
   17298:	ldr	r4, [r7, #4]
   1729c:	cmp	r4, #0
   172a0:	beq	175a8 <argp_error@@Base+0x1710>
   172a4:	ldr	r2, [r7, #32]
   172a8:	add	r3, fp, r4
   172ac:	cmp	r2, r3
   172b0:	bls	172c4 <argp_error@@Base+0x142c>
   172b4:	b	176f0 <argp_error@@Base+0x1858>
   172b8:	add	r8, r8, #1
   172bc:	cmp	r4, r8
   172c0:	beq	172f8 <argp_error@@Base+0x1460>
   172c4:	ldr	r0, [r7]
   172c8:	ldr	r3, [r0, #20]
   172cc:	ldr	r2, [r0, #24]
   172d0:	add	r1, r3, #1
   172d4:	cmp	r3, r2
   172d8:	strcc	r1, [r0, #20]
   172dc:	strbcc	r9, [r3]
   172e0:	bcc	172b8 <argp_error@@Base+0x1420>
   172e4:	mov	r1, r9
   172e8:	add	r8, r8, #1
   172ec:	bl	10ef8 <__overflow@plt>
   172f0:	cmp	r4, r8
   172f4:	bne	172c4 <argp_error@@Base+0x142c>
   172f8:	ldr	fp, [r7, #28]
   172fc:	mov	r8, r4
   17300:	str	r4, [r7, #20]
   17304:	sub	sl, fp, r6
   17308:	mov	r2, sl
   1730c:	mov	r1, #10
   17310:	mov	r0, r6
   17314:	bl	10eec <memchr@plt>
   17318:	cmp	r8, #0
   1731c:	movlt	r8, #0
   17320:	movlt	r3, r8
   17324:	str	r6, [sp]
   17328:	mov	r4, r0
   1732c:	strlt	r3, [r7, #20]
   17330:	cmp	r4, #0
   17334:	beq	175cc <argp_error@@Base+0x1734>
   17338:	sub	r2, r4, r6
   1733c:	ldr	r3, [r7, #8]
   17340:	add	r2, r2, r8
   17344:	cmp	r2, r3
   17348:	bge	17378 <argp_error@@Base+0x14e0>
   1734c:	ldr	fp, [r7, #28]
   17350:	add	r6, r4, #1
   17354:	mov	r3, #0
   17358:	cmp	r6, fp
   1735c:	str	r3, [r7, #20]
   17360:	bcc	1728c <argp_error@@Base+0x13f4>
   17364:	ldr	r3, [r7, #24]
   17368:	sub	r3, fp, r3
   1736c:	str	r3, [r7, #16]
   17370:	add	sp, sp, #12
   17374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17378:	ldr	r2, [r7, #12]
   1737c:	sub	r5, r3, #1
   17380:	cmp	r2, #0
   17384:	str	r2, [sp, #4]
   17388:	blt	17684 <argp_error@@Base+0x17ec>
   1738c:	add	r5, r5, #1
   17390:	sub	r8, r5, r8
   17394:	adds	r8, r6, r8
   17398:	bcs	17604 <argp_error@@Base+0x176c>
   1739c:	bl	10e8c <__ctype_b_loc@plt>
   173a0:	mov	r3, r8
   173a4:	ldr	r0, [r0]
   173a8:	b	173b4 <argp_error@@Base+0x151c>
   173ac:	cmp	r3, r6
   173b0:	bcc	17608 <argp_error@@Base+0x1770>
   173b4:	mov	r1, r3
   173b8:	sub	r3, r3, #1
   173bc:	ldrb	r2, [r1]
   173c0:	mov	r5, r3
   173c4:	lsl	r2, r2, #1
   173c8:	ldrh	r2, [r0, r2]
   173cc:	tst	r2, #1
   173d0:	beq	173ac <argp_error@@Base+0x1514>
   173d4:	add	r5, r1, #1
   173d8:	cmp	r5, r6
   173dc:	bls	1761c <argp_error@@Base+0x1784>
   173e0:	cmp	r1, r6
   173e4:	bcc	17614 <argp_error@@Base+0x177c>
   173e8:	mov	r1, r3
   173ec:	sub	r8, r6, #1
   173f0:	b	1740c <argp_error@@Base+0x1574>
   173f4:	ldrb	r3, [r1]
   173f8:	sub	r1, r1, #1
   173fc:	lsl	r3, r3, #1
   17400:	ldrh	r3, [r0, r3]
   17404:	tst	r3, #1
   17408:	beq	17734 <argp_error@@Base+0x189c>
   1740c:	cmp	r8, r1
   17410:	mov	r2, r1
   17414:	bne	173f4 <argp_error@@Base+0x155c>
   17418:	add	r8, r8, #1
   1741c:	add	r3, sl, #1
   17420:	add	r3, r6, r3
   17424:	cmp	r5, r3
   17428:	beq	17510 <argp_error@@Base+0x1678>
   1742c:	add	r3, r8, #1
   17430:	ldr	r1, [sp, #4]
   17434:	sub	r2, r5, r3
   17438:	cmp	r2, r1
   1743c:	bge	1752c <argp_error@@Base+0x1694>
   17440:	cmp	r5, fp
   17444:	bcs	17524 <argp_error@@Base+0x168c>
   17448:	ldr	r3, [r7, #32]
   1744c:	ldr	r2, [sp, #4]
   17450:	sub	r3, r3, fp
   17454:	add	r0, r2, #1
   17458:	cmp	r3, r0
   1745c:	bgt	17764 <argp_error@@Base+0x18cc>
   17460:	ldr	r0, [r7, #24]
   17464:	cmp	r8, r0
   17468:	bls	1747c <argp_error@@Base+0x15e4>
   1746c:	sub	r2, r8, r0
   17470:	ldr	r3, [r7]
   17474:	mov	r1, #1
   17478:	bl	10dcc <fwrite_unlocked@plt>
   1747c:	ldr	r0, [r7]
   17480:	ldr	r2, [r0, #24]
   17484:	ldr	r3, [r0, #20]
   17488:	cmp	r3, r2
   1748c:	addcc	r2, r3, #1
   17490:	strcc	r2, [r0, #20]
   17494:	movcc	r2, #10
   17498:	strbcc	r2, [r3]
   1749c:	bcs	177a4 <argp_error@@Base+0x190c>
   174a0:	ldr	r6, [r7, #24]
   174a4:	ldr	r3, [sp]
   174a8:	sub	r2, r5, r6
   174ac:	sub	r3, r3, r6
   174b0:	add	sl, sl, r3
   174b4:	mov	fp, r2
   174b8:	mov	r4, r6
   174bc:	ldr	r3, [r7, #12]
   174c0:	cmp	r3, r2
   174c4:	bgt	1754c <argp_error@@Base+0x16b4>
   174c8:	cmp	r3, #0
   174cc:	movgt	r2, r6
   174d0:	ble	174ec <argp_error@@Base+0x1654>
   174d4:	strb	r9, [r2], #1
   174d8:	ldr	r3, [r7, #12]
   174dc:	sub	r1, r2, r6
   174e0:	cmp	r3, r1
   174e4:	bgt	174d4 <argp_error@@Base+0x163c>
   174e8:	mov	r6, r2
   174ec:	cmp	r6, r5
   174f0:	bcc	176d4 <argp_error@@Base+0x183c>
   174f4:	sub	fp, sl, fp
   174f8:	cmp	r3, #0
   174fc:	add	fp, r6, fp
   17500:	mvneq	r3, #0
   17504:	str	fp, [r7, #28]
   17508:	str	r3, [r7, #20]
   1750c:	b	17284 <argp_error@@Base+0x13ec>
   17510:	ldr	r3, [r7, #32]
   17514:	ldr	r2, [sp, #4]
   17518:	sub	r3, r3, r8
   1751c:	cmp	r3, r2
   17520:	ble	17440 <argp_error@@Base+0x15a8>
   17524:	add	r3, r8, #1
   17528:	sub	r2, r5, r3
   1752c:	sub	fp, r5, r6
   17530:	mov	r4, r6
   17534:	mov	r6, r3
   17538:	mov	r3, #10
   1753c:	strb	r3, [r8]
   17540:	ldr	r3, [r7, #12]
   17544:	cmp	r3, r2
   17548:	ble	174c8 <argp_error@@Base+0x1630>
   1754c:	add	r2, sl, #1
   17550:	add	r2, r4, r2
   17554:	cmp	r5, r2
   17558:	beq	17750 <argp_error@@Base+0x18b8>
   1755c:	cmp	r3, #0
   17560:	movgt	r8, #0
   17564:	bgt	1757c <argp_error@@Base+0x16e4>
   17568:	b	174ec <argp_error@@Base+0x1654>
   1756c:	ldr	r3, [r7, #12]
   17570:	add	r8, r8, #1
   17574:	cmp	r3, r8
   17578:	ble	174ec <argp_error@@Base+0x1654>
   1757c:	ldr	r0, [r7]
   17580:	ldr	r3, [r0, #20]
   17584:	ldr	r2, [r0, #24]
   17588:	add	r1, r3, #1
   1758c:	cmp	r3, r2
   17590:	strcc	r1, [r0, #20]
   17594:	strbcc	r9, [r3]
   17598:	bcc	1756c <argp_error@@Base+0x16d4>
   1759c:	mov	r1, r9
   175a0:	bl	10ef8 <__overflow@plt>
   175a4:	b	1756c <argp_error@@Base+0x16d4>
   175a8:	sub	sl, fp, r6
   175ac:	mov	r2, sl
   175b0:	mov	r1, #10
   175b4:	mov	r0, r6
   175b8:	bl	10eec <memchr@plt>
   175bc:	str	r6, [sp]
   175c0:	mov	r4, r0
   175c4:	cmp	r4, #0
   175c8:	bne	17338 <argp_error@@Base+0x14a0>
   175cc:	ldr	r5, [r7, #8]
   175d0:	add	r3, r8, sl
   175d4:	cmp	r3, r5
   175d8:	bcc	177c8 <argp_error@@Base+0x1930>
   175dc:	ldr	r2, [r7, #12]
   175e0:	sub	r5, r5, #1
   175e4:	cmp	r2, #0
   175e8:	str	r2, [sp, #4]
   175ec:	blt	177b4 <argp_error@@Base+0x191c>
   175f0:	add	r5, r5, #1
   175f4:	sub	r8, r5, r8
   175f8:	adds	r8, r6, r8
   175fc:	mov	r4, fp
   17600:	bcc	1739c <argp_error@@Base+0x1504>
   17604:	mov	r5, r8
   17608:	add	r5, r5, #1
   1760c:	cmp	r5, r6
   17610:	bls	1761c <argp_error@@Base+0x1784>
   17614:	mov	r8, r5
   17618:	b	1741c <argp_error@@Base+0x1584>
   1761c:	cmp	r8, r4
   17620:	bcs	17658 <argp_error@@Base+0x17c0>
   17624:	add	r5, r8, #1
   17628:	b	1764c <argp_error@@Base+0x17b4>
   1762c:	bl	10e8c <__ctype_b_loc@plt>
   17630:	ldrb	r3, [r5]
   17634:	add	r5, r5, #1
   17638:	lsl	r3, r3, #1
   1763c:	ldr	r2, [r0]
   17640:	ldrh	r3, [r2, r3]
   17644:	tst	r3, #1
   17648:	bne	17668 <argp_error@@Base+0x17d0>
   1764c:	cmp	r5, r4
   17650:	mov	r8, r5
   17654:	bne	1762c <argp_error@@Base+0x1794>
   17658:	cmp	r8, r4
   1765c:	beq	1773c <argp_error@@Base+0x18a4>
   17660:	bl	10e8c <__ctype_b_loc@plt>
   17664:	ldr	r2, [r0]
   17668:	mov	r5, r8
   1766c:	ldrb	r3, [r5, #1]!
   17670:	lsl	r3, r3, #1
   17674:	ldrh	r3, [r2, r3]
   17678:	tst	r3, #1
   1767c:	bne	1766c <argp_error@@Base+0x17d4>
   17680:	b	1741c <argp_error@@Base+0x1584>
   17684:	cmp	r4, fp
   17688:	str	r3, [sp]
   1768c:	bcs	177b0 <argp_error@@Base+0x1918>
   17690:	sub	r0, r5, r8
   17694:	sub	r2, fp, r4
   17698:	add	r0, r6, r0
   1769c:	mov	r1, r4
   176a0:	bl	10d84 <memmove@plt>
   176a4:	ldr	r2, [r7, #20]
   176a8:	ldr	fp, [r7, #28]
   176ac:	sub	r5, r5, r2
   176b0:	add	r5, r6, r5
   176b4:	mov	r3, #0
   176b8:	sub	r4, r5, r4
   176bc:	str	r3, [r7, #20]
   176c0:	ldr	r3, [sp]
   176c4:	sub	fp, fp, r4
   176c8:	add	r6, r6, r3
   176cc:	str	fp, [r7, #28]
   176d0:	b	17284 <argp_error@@Base+0x13ec>
   176d4:	add	r2, r4, sl
   176d8:	sub	r2, r2, r5
   176dc:	mov	r1, r5
   176e0:	mov	r0, r6
   176e4:	bl	10d84 <memmove@plt>
   176e8:	ldr	r3, [r7, #12]
   176ec:	b	174f4 <argp_error@@Base+0x165c>
   176f0:	add	r5, r6, r4
   176f4:	sub	r2, fp, r6
   176f8:	mov	r1, r6
   176fc:	mov	r0, r5
   17700:	bl	10d84 <memmove@plt>
   17704:	ldr	r3, [r7, #28]
   17708:	mov	r0, r6
   1770c:	add	r3, r3, r4
   17710:	str	r3, [r7, #28]
   17714:	mov	r2, r4
   17718:	mov	r1, r9
   1771c:	bl	10ee0 <memset@plt>
   17720:	mov	r6, r5
   17724:	ldr	fp, [r7, #28]
   17728:	mov	r8, r4
   1772c:	str	r4, [r7, #20]
   17730:	b	17304 <argp_error@@Base+0x146c>
   17734:	add	r8, r2, #1
   17738:	b	1741c <argp_error@@Base+0x1584>
   1773c:	mov	r3, #0
   17740:	str	r3, [r7, #20]
   17744:	add	r6, r8, #1
   17748:	ldr	fp, [r7, #28]
   1774c:	b	17284 <argp_error@@Base+0x13ec>
   17750:	ldr	r2, [r7, #32]
   17754:	sub	r2, r2, r5
   17758:	cmp	r3, r2
   1775c:	ble	174c8 <argp_error@@Base+0x1630>
   17760:	b	1755c <argp_error@@Base+0x16c4>
   17764:	sub	fp, fp, r5
   17768:	mov	r2, fp
   1776c:	mov	r1, r5
   17770:	add	r0, r8, r0
   17774:	bl	10d84 <memmove@plt>
   17778:	ldr	r2, [r7, #12]
   1777c:	mov	r3, #10
   17780:	add	r5, r2, #1
   17784:	add	r5, r8, r5
   17788:	add	fp, r5, fp
   1778c:	sub	sl, fp, r6
   17790:	mov	r4, r6
   17794:	sub	fp, r5, r6
   17798:	strb	r3, [r8]
   1779c:	add	r6, r8, #1
   177a0:	b	174bc <argp_error@@Base+0x1624>
   177a4:	mov	r1, #10
   177a8:	bl	10ef8 <__overflow@plt>
   177ac:	b	174a0 <argp_error@@Base+0x1608>
   177b0:	add	r3, r8, sl
   177b4:	sub	r5, r5, r3
   177b8:	add	fp, fp, r5
   177bc:	str	fp, [r7, #28]
   177c0:	str	r3, [r7, #20]
   177c4:	b	17364 <argp_error@@Base+0x14cc>
   177c8:	str	r3, [r7, #20]
   177cc:	ldr	fp, [r7, #28]
   177d0:	b	17364 <argp_error@@Base+0x14cc>
   177d4:	push	{r4, lr}
   177d8:	mov	r4, r0
   177dc:	bl	17264 <argp_error@@Base+0x13cc>
   177e0:	ldr	r2, [r4, #28]
   177e4:	ldr	r0, [r4, #24]
   177e8:	cmp	r2, r0
   177ec:	bls	17804 <argp_error@@Base+0x196c>
   177f0:	sub	r2, r2, r0
   177f4:	ldr	r3, [r4]
   177f8:	mov	r1, #1
   177fc:	bl	10dcc <fwrite_unlocked@plt>
   17800:	ldr	r0, [r4, #24]
   17804:	bl	125d4 <argp_parse@@Base+0xe98>
   17808:	mov	r0, r4
   1780c:	pop	{r4, lr}
   17810:	b	125d4 <argp_parse@@Base+0xe98>
   17814:	push	{r4, r5, r6, lr}
   17818:	mov	r4, r0
   1781c:	mov	r5, r1
   17820:	bl	17264 <argp_error@@Base+0x13cc>
   17824:	ldr	r3, [r4, #24]
   17828:	ldr	r2, [r4, #28]
   1782c:	mov	r0, r3
   17830:	sub	r2, r2, r3
   17834:	mov	r1, #1
   17838:	ldr	r3, [r4]
   1783c:	bl	10dcc <fwrite_unlocked@plt>
   17840:	ldr	r2, [r4, #28]
   17844:	ldr	r3, [r4, #24]
   17848:	sub	r1, r2, r3
   1784c:	cmp	r0, r1
   17850:	bne	17894 <argp_error@@Base+0x19fc>
   17854:	ldr	r1, [r4, #32]
   17858:	mov	r2, #0
   1785c:	sub	r1, r1, r3
   17860:	cmp	r1, r5
   17864:	str	r3, [r4, #28]
   17868:	str	r2, [r4, #16]
   1786c:	movcs	r3, #1
   17870:	bcs	1788c <argp_error@@Base+0x19f4>
   17874:	adds	r5, r1, r5
   17878:	bcc	178c4 <argp_error@@Base+0x1a2c>
   1787c:	bl	10ec8 <__errno_location@plt>
   17880:	mov	r3, #0
   17884:	mov	r2, #12
   17888:	str	r2, [r0]
   1788c:	mov	r0, r3
   17890:	pop	{r4, r5, r6, pc}
   17894:	ldr	r1, [r4, #16]
   17898:	sub	r2, r2, r0
   1789c:	sub	r1, r1, r0
   178a0:	str	r2, [r4, #28]
   178a4:	str	r1, [r4, #16]
   178a8:	sub	r2, r2, r3
   178ac:	add	r1, r3, r0
   178b0:	mov	r0, r3
   178b4:	bl	10d84 <memmove@plt>
   178b8:	mov	r3, #0
   178bc:	mov	r0, r3
   178c0:	pop	{r4, r5, r6, pc}
   178c4:	mov	r0, r3
   178c8:	mov	r1, r5
   178cc:	bl	1718c <argp_error@@Base+0x12f4>
   178d0:	cmp	r0, #0
   178d4:	beq	1787c <argp_error@@Base+0x19e4>
   178d8:	add	r1, r0, r5
   178dc:	mov	r3, #1
   178e0:	str	r0, [r4, #24]
   178e4:	str	r0, [r4, #28]
   178e8:	str	r1, [r4, #32]
   178ec:	mov	r0, r3
   178f0:	pop	{r4, r5, r6, pc}
   178f4:	ldr	r3, [r0, #32]
   178f8:	ldr	r2, [r0, #28]
   178fc:	sub	r3, r3, r2
   17900:	cmp	r3, r1
   17904:	bcc	17910 <argp_error@@Base+0x1a78>
   17908:	mov	r0, #1
   1790c:	bx	lr
   17910:	b	17814 <argp_error@@Base+0x197c>
   17914:	push	{r1, r2, r3}
   17918:	mov	r1, #150	; 0x96
   1791c:	push	{r4, r5, r6, r7, lr}
   17920:	sub	sp, sp, #8
   17924:	mov	r5, r0
   17928:	ldr	r7, [sp, #28]
   1792c:	add	r6, sp, #32
   17930:	ldr	r3, [r5, #32]
   17934:	ldr	r0, [r5, #28]
   17938:	sub	r2, r3, r0
   1793c:	cmp	r1, r2
   17940:	bhi	17984 <argp_error@@Base+0x1aec>
   17944:	sub	r4, r3, r0
   17948:	mov	r1, r4
   1794c:	mov	r3, r6
   17950:	mov	r2, r7
   17954:	str	r6, [sp, #4]
   17958:	bl	10f34 <vsnprintf@plt>
   1795c:	cmp	r4, r0
   17960:	addls	r1, r0, #1
   17964:	bls	17930 <argp_error@@Base+0x1a98>
   17968:	ldr	r3, [r5, #28]
   1796c:	add	r3, r3, r0
   17970:	str	r3, [r5, #28]
   17974:	add	sp, sp, #8
   17978:	pop	{r4, r5, r6, r7, lr}
   1797c:	add	sp, sp, #12
   17980:	bx	lr
   17984:	mov	r0, r5
   17988:	bl	17814 <argp_error@@Base+0x197c>
   1798c:	cmp	r0, #0
   17990:	ldrne	r3, [r5, #32]
   17994:	ldrne	r0, [r5, #28]
   17998:	bne	17944 <argp_error@@Base+0x1aac>
   1799c:	mvn	r0, #0
   179a0:	add	sp, sp, #8
   179a4:	pop	{r4, r5, r6, r7, lr}
   179a8:	add	sp, sp, #12
   179ac:	bx	lr
   179b0:	push	{r4, r5, r6, lr}
   179b4:	subs	r4, r2, #0
   179b8:	mov	r6, r0
   179bc:	mov	r5, r1
   179c0:	beq	179ec <argp_error@@Base+0x1b54>
   179c4:	mov	r1, r4
   179c8:	mvn	r0, #0
   179cc:	bl	179fc <argp_error@@Base+0x1b64>
   179d0:	cmp	r0, r5
   179d4:	bcs	179ec <argp_error@@Base+0x1b54>
   179d8:	bl	10ec8 <__errno_location@plt>
   179dc:	mov	r3, #12
   179e0:	str	r3, [r0]
   179e4:	mov	r0, #0
   179e8:	pop	{r4, r5, r6, pc}
   179ec:	mul	r1, r5, r4
   179f0:	mov	r0, r6
   179f4:	pop	{r4, r5, r6, lr}
   179f8:	b	1718c <argp_error@@Base+0x12f4>
   179fc:	subs	r2, r1, #1
   17a00:	bxeq	lr
   17a04:	bcc	17bdc <argp_error@@Base+0x1d44>
   17a08:	cmp	r0, r1
   17a0c:	bls	17bc0 <argp_error@@Base+0x1d28>
   17a10:	tst	r1, r2
   17a14:	beq	17bcc <argp_error@@Base+0x1d34>
   17a18:	clz	r3, r0
   17a1c:	clz	r2, r1
   17a20:	sub	r3, r2, r3
   17a24:	rsbs	r3, r3, #31
   17a28:	addne	r3, r3, r3, lsl #1
   17a2c:	mov	r2, #0
   17a30:	addne	pc, pc, r3, lsl #2
   17a34:	nop			; (mov r0, r0)
   17a38:	cmp	r0, r1, lsl #31
   17a3c:	adc	r2, r2, r2
   17a40:	subcs	r0, r0, r1, lsl #31
   17a44:	cmp	r0, r1, lsl #30
   17a48:	adc	r2, r2, r2
   17a4c:	subcs	r0, r0, r1, lsl #30
   17a50:	cmp	r0, r1, lsl #29
   17a54:	adc	r2, r2, r2
   17a58:	subcs	r0, r0, r1, lsl #29
   17a5c:	cmp	r0, r1, lsl #28
   17a60:	adc	r2, r2, r2
   17a64:	subcs	r0, r0, r1, lsl #28
   17a68:	cmp	r0, r1, lsl #27
   17a6c:	adc	r2, r2, r2
   17a70:	subcs	r0, r0, r1, lsl #27
   17a74:	cmp	r0, r1, lsl #26
   17a78:	adc	r2, r2, r2
   17a7c:	subcs	r0, r0, r1, lsl #26
   17a80:	cmp	r0, r1, lsl #25
   17a84:	adc	r2, r2, r2
   17a88:	subcs	r0, r0, r1, lsl #25
   17a8c:	cmp	r0, r1, lsl #24
   17a90:	adc	r2, r2, r2
   17a94:	subcs	r0, r0, r1, lsl #24
   17a98:	cmp	r0, r1, lsl #23
   17a9c:	adc	r2, r2, r2
   17aa0:	subcs	r0, r0, r1, lsl #23
   17aa4:	cmp	r0, r1, lsl #22
   17aa8:	adc	r2, r2, r2
   17aac:	subcs	r0, r0, r1, lsl #22
   17ab0:	cmp	r0, r1, lsl #21
   17ab4:	adc	r2, r2, r2
   17ab8:	subcs	r0, r0, r1, lsl #21
   17abc:	cmp	r0, r1, lsl #20
   17ac0:	adc	r2, r2, r2
   17ac4:	subcs	r0, r0, r1, lsl #20
   17ac8:	cmp	r0, r1, lsl #19
   17acc:	adc	r2, r2, r2
   17ad0:	subcs	r0, r0, r1, lsl #19
   17ad4:	cmp	r0, r1, lsl #18
   17ad8:	adc	r2, r2, r2
   17adc:	subcs	r0, r0, r1, lsl #18
   17ae0:	cmp	r0, r1, lsl #17
   17ae4:	adc	r2, r2, r2
   17ae8:	subcs	r0, r0, r1, lsl #17
   17aec:	cmp	r0, r1, lsl #16
   17af0:	adc	r2, r2, r2
   17af4:	subcs	r0, r0, r1, lsl #16
   17af8:	cmp	r0, r1, lsl #15
   17afc:	adc	r2, r2, r2
   17b00:	subcs	r0, r0, r1, lsl #15
   17b04:	cmp	r0, r1, lsl #14
   17b08:	adc	r2, r2, r2
   17b0c:	subcs	r0, r0, r1, lsl #14
   17b10:	cmp	r0, r1, lsl #13
   17b14:	adc	r2, r2, r2
   17b18:	subcs	r0, r0, r1, lsl #13
   17b1c:	cmp	r0, r1, lsl #12
   17b20:	adc	r2, r2, r2
   17b24:	subcs	r0, r0, r1, lsl #12
   17b28:	cmp	r0, r1, lsl #11
   17b2c:	adc	r2, r2, r2
   17b30:	subcs	r0, r0, r1, lsl #11
   17b34:	cmp	r0, r1, lsl #10
   17b38:	adc	r2, r2, r2
   17b3c:	subcs	r0, r0, r1, lsl #10
   17b40:	cmp	r0, r1, lsl #9
   17b44:	adc	r2, r2, r2
   17b48:	subcs	r0, r0, r1, lsl #9
   17b4c:	cmp	r0, r1, lsl #8
   17b50:	adc	r2, r2, r2
   17b54:	subcs	r0, r0, r1, lsl #8
   17b58:	cmp	r0, r1, lsl #7
   17b5c:	adc	r2, r2, r2
   17b60:	subcs	r0, r0, r1, lsl #7
   17b64:	cmp	r0, r1, lsl #6
   17b68:	adc	r2, r2, r2
   17b6c:	subcs	r0, r0, r1, lsl #6
   17b70:	cmp	r0, r1, lsl #5
   17b74:	adc	r2, r2, r2
   17b78:	subcs	r0, r0, r1, lsl #5
   17b7c:	cmp	r0, r1, lsl #4
   17b80:	adc	r2, r2, r2
   17b84:	subcs	r0, r0, r1, lsl #4
   17b88:	cmp	r0, r1, lsl #3
   17b8c:	adc	r2, r2, r2
   17b90:	subcs	r0, r0, r1, lsl #3
   17b94:	cmp	r0, r1, lsl #2
   17b98:	adc	r2, r2, r2
   17b9c:	subcs	r0, r0, r1, lsl #2
   17ba0:	cmp	r0, r1, lsl #1
   17ba4:	adc	r2, r2, r2
   17ba8:	subcs	r0, r0, r1, lsl #1
   17bac:	cmp	r0, r1
   17bb0:	adc	r2, r2, r2
   17bb4:	subcs	r0, r0, r1
   17bb8:	mov	r0, r2
   17bbc:	bx	lr
   17bc0:	moveq	r0, #1
   17bc4:	movne	r0, #0
   17bc8:	bx	lr
   17bcc:	clz	r2, r1
   17bd0:	rsb	r2, r2, #31
   17bd4:	lsr	r0, r0, r2
   17bd8:	bx	lr
   17bdc:	cmp	r0, #0
   17be0:	mvnne	r0, #0
   17be4:	b	17e48 <argp_error@@Base+0x1fb0>
   17be8:	cmp	r1, #0
   17bec:	beq	17bdc <argp_error@@Base+0x1d44>
   17bf0:	push	{r0, r1, lr}
   17bf4:	bl	179fc <argp_error@@Base+0x1b64>
   17bf8:	pop	{r1, r2, lr}
   17bfc:	mul	r3, r2, r0
   17c00:	sub	r1, r1, r3
   17c04:	bx	lr
   17c08:	cmp	r1, #0
   17c0c:	beq	17e18 <argp_error@@Base+0x1f80>
   17c10:	eor	ip, r0, r1
   17c14:	rsbmi	r1, r1, #0
   17c18:	subs	r2, r1, #1
   17c1c:	beq	17de4 <argp_error@@Base+0x1f4c>
   17c20:	movs	r3, r0
   17c24:	rsbmi	r3, r0, #0
   17c28:	cmp	r3, r1
   17c2c:	bls	17df0 <argp_error@@Base+0x1f58>
   17c30:	tst	r1, r2
   17c34:	beq	17e00 <argp_error@@Base+0x1f68>
   17c38:	clz	r2, r3
   17c3c:	clz	r0, r1
   17c40:	sub	r2, r0, r2
   17c44:	rsbs	r2, r2, #31
   17c48:	addne	r2, r2, r2, lsl #1
   17c4c:	mov	r0, #0
   17c50:	addne	pc, pc, r2, lsl #2
   17c54:	nop			; (mov r0, r0)
   17c58:	cmp	r3, r1, lsl #31
   17c5c:	adc	r0, r0, r0
   17c60:	subcs	r3, r3, r1, lsl #31
   17c64:	cmp	r3, r1, lsl #30
   17c68:	adc	r0, r0, r0
   17c6c:	subcs	r3, r3, r1, lsl #30
   17c70:	cmp	r3, r1, lsl #29
   17c74:	adc	r0, r0, r0
   17c78:	subcs	r3, r3, r1, lsl #29
   17c7c:	cmp	r3, r1, lsl #28
   17c80:	adc	r0, r0, r0
   17c84:	subcs	r3, r3, r1, lsl #28
   17c88:	cmp	r3, r1, lsl #27
   17c8c:	adc	r0, r0, r0
   17c90:	subcs	r3, r3, r1, lsl #27
   17c94:	cmp	r3, r1, lsl #26
   17c98:	adc	r0, r0, r0
   17c9c:	subcs	r3, r3, r1, lsl #26
   17ca0:	cmp	r3, r1, lsl #25
   17ca4:	adc	r0, r0, r0
   17ca8:	subcs	r3, r3, r1, lsl #25
   17cac:	cmp	r3, r1, lsl #24
   17cb0:	adc	r0, r0, r0
   17cb4:	subcs	r3, r3, r1, lsl #24
   17cb8:	cmp	r3, r1, lsl #23
   17cbc:	adc	r0, r0, r0
   17cc0:	subcs	r3, r3, r1, lsl #23
   17cc4:	cmp	r3, r1, lsl #22
   17cc8:	adc	r0, r0, r0
   17ccc:	subcs	r3, r3, r1, lsl #22
   17cd0:	cmp	r3, r1, lsl #21
   17cd4:	adc	r0, r0, r0
   17cd8:	subcs	r3, r3, r1, lsl #21
   17cdc:	cmp	r3, r1, lsl #20
   17ce0:	adc	r0, r0, r0
   17ce4:	subcs	r3, r3, r1, lsl #20
   17ce8:	cmp	r3, r1, lsl #19
   17cec:	adc	r0, r0, r0
   17cf0:	subcs	r3, r3, r1, lsl #19
   17cf4:	cmp	r3, r1, lsl #18
   17cf8:	adc	r0, r0, r0
   17cfc:	subcs	r3, r3, r1, lsl #18
   17d00:	cmp	r3, r1, lsl #17
   17d04:	adc	r0, r0, r0
   17d08:	subcs	r3, r3, r1, lsl #17
   17d0c:	cmp	r3, r1, lsl #16
   17d10:	adc	r0, r0, r0
   17d14:	subcs	r3, r3, r1, lsl #16
   17d18:	cmp	r3, r1, lsl #15
   17d1c:	adc	r0, r0, r0
   17d20:	subcs	r3, r3, r1, lsl #15
   17d24:	cmp	r3, r1, lsl #14
   17d28:	adc	r0, r0, r0
   17d2c:	subcs	r3, r3, r1, lsl #14
   17d30:	cmp	r3, r1, lsl #13
   17d34:	adc	r0, r0, r0
   17d38:	subcs	r3, r3, r1, lsl #13
   17d3c:	cmp	r3, r1, lsl #12
   17d40:	adc	r0, r0, r0
   17d44:	subcs	r3, r3, r1, lsl #12
   17d48:	cmp	r3, r1, lsl #11
   17d4c:	adc	r0, r0, r0
   17d50:	subcs	r3, r3, r1, lsl #11
   17d54:	cmp	r3, r1, lsl #10
   17d58:	adc	r0, r0, r0
   17d5c:	subcs	r3, r3, r1, lsl #10
   17d60:	cmp	r3, r1, lsl #9
   17d64:	adc	r0, r0, r0
   17d68:	subcs	r3, r3, r1, lsl #9
   17d6c:	cmp	r3, r1, lsl #8
   17d70:	adc	r0, r0, r0
   17d74:	subcs	r3, r3, r1, lsl #8
   17d78:	cmp	r3, r1, lsl #7
   17d7c:	adc	r0, r0, r0
   17d80:	subcs	r3, r3, r1, lsl #7
   17d84:	cmp	r3, r1, lsl #6
   17d88:	adc	r0, r0, r0
   17d8c:	subcs	r3, r3, r1, lsl #6
   17d90:	cmp	r3, r1, lsl #5
   17d94:	adc	r0, r0, r0
   17d98:	subcs	r3, r3, r1, lsl #5
   17d9c:	cmp	r3, r1, lsl #4
   17da0:	adc	r0, r0, r0
   17da4:	subcs	r3, r3, r1, lsl #4
   17da8:	cmp	r3, r1, lsl #3
   17dac:	adc	r0, r0, r0
   17db0:	subcs	r3, r3, r1, lsl #3
   17db4:	cmp	r3, r1, lsl #2
   17db8:	adc	r0, r0, r0
   17dbc:	subcs	r3, r3, r1, lsl #2
   17dc0:	cmp	r3, r1, lsl #1
   17dc4:	adc	r0, r0, r0
   17dc8:	subcs	r3, r3, r1, lsl #1
   17dcc:	cmp	r3, r1
   17dd0:	adc	r0, r0, r0
   17dd4:	subcs	r3, r3, r1
   17dd8:	cmp	ip, #0
   17ddc:	rsbmi	r0, r0, #0
   17de0:	bx	lr
   17de4:	teq	ip, r0
   17de8:	rsbmi	r0, r0, #0
   17dec:	bx	lr
   17df0:	movcc	r0, #0
   17df4:	asreq	r0, ip, #31
   17df8:	orreq	r0, r0, #1
   17dfc:	bx	lr
   17e00:	clz	r2, r1
   17e04:	rsb	r2, r2, #31
   17e08:	cmp	ip, #0
   17e0c:	lsr	r0, r3, r2
   17e10:	rsbmi	r0, r0, #0
   17e14:	bx	lr
   17e18:	cmp	r0, #0
   17e1c:	mvngt	r0, #-2147483648	; 0x80000000
   17e20:	movlt	r0, #-2147483648	; 0x80000000
   17e24:	b	17e48 <argp_error@@Base+0x1fb0>
   17e28:	cmp	r1, #0
   17e2c:	beq	17e18 <argp_error@@Base+0x1f80>
   17e30:	push	{r0, r1, lr}
   17e34:	bl	17c10 <argp_error@@Base+0x1d78>
   17e38:	pop	{r1, r2, lr}
   17e3c:	mul	r3, r2, r0
   17e40:	sub	r1, r1, r3
   17e44:	bx	lr
   17e48:	push	{r1, lr}
   17e4c:	mov	r0, #8
   17e50:	bl	10d54 <raise@plt>
   17e54:	pop	{r1, pc}
   17e58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17e5c:	mov	r7, r0
   17e60:	ldr	r6, [pc, #72]	; 17eb0 <argp_error@@Base+0x2018>
   17e64:	ldr	r5, [pc, #72]	; 17eb4 <argp_error@@Base+0x201c>
   17e68:	add	r6, pc, r6
   17e6c:	add	r5, pc, r5
   17e70:	sub	r6, r6, r5
   17e74:	mov	r8, r1
   17e78:	mov	r9, r2
   17e7c:	bl	10d1c <calloc@plt-0x20>
   17e80:	asrs	r6, r6, #2
   17e84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e88:	mov	r4, #0
   17e8c:	add	r4, r4, #1
   17e90:	ldr	r3, [r5], #4
   17e94:	mov	r2, r9
   17e98:	mov	r1, r8
   17e9c:	mov	r0, r7
   17ea0:	blx	r3
   17ea4:	cmp	r6, r4
   17ea8:	bne	17e8c <argp_error@@Base+0x1ff4>
   17eac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17eb0:	muleq	r1, r8, r0
   17eb4:	muleq	r1, r0, r0
   17eb8:	bx	lr

Disassembly of section .fini:

00017ebc <.fini>:
   17ebc:	push	{r3, lr}
   17ec0:	pop	{r3, pc}
