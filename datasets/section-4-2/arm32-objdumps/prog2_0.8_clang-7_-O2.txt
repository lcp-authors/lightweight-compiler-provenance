
../repos/prog2/0.8:     file format elf32-littlearm


Disassembly of section .init:

0001069c <.init>:
   1069c:	push	{r3, lr}
   106a0:	bl	1074c <_start@@Base+0x3c>
   106a4:	pop	{r3, pc}

Disassembly of section .plt:

000106a8 <printf@plt-0x14>:
   106a8:	push	{lr}		; (str lr, [sp, #-4]!)
   106ac:	ldr	lr, [pc, #4]	; 106b8 <printf@plt-0x4>
   106b0:	add	lr, pc, lr
   106b4:	ldr	pc, [lr, #8]!
   106b8:	andeq	r0, r1, r8, asr #18

000106bc <printf@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2376]!	; 0x948

000106c8 <strcpy@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2368]!	; 0x940

000106d4 <__libc_start_main@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2360]!	; 0x938

000106e0 <__gmon_start__@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2352]!	; 0x930

000106ec <memset@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2344]!	; 0x928

000106f8 <__isoc99_scanf@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2336]!	; 0x920

00010704 <abort@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2328]!	; 0x918

Disassembly of section .text:

00010710 <_start@@Base>:
   10710:	mov	fp, #0
   10714:	mov	lr, #0
   10718:	pop	{r1}		; (ldr r1, [sp], #4)
   1071c:	mov	r2, sp
   10720:	push	{r2}		; (str r2, [sp, #-4]!)
   10724:	push	{r0}		; (str r0, [sp, #-4]!)
   10728:	ldr	ip, [pc, #16]	; 10740 <_start@@Base+0x30>
   1072c:	push	{ip}		; (str ip, [sp, #-4]!)
   10730:	ldr	r0, [pc, #12]	; 10744 <_start@@Base+0x34>
   10734:	ldr	r3, [pc, #12]	; 10748 <_start@@Base+0x38>
   10738:	bl	106d4 <__libc_start_main@plt>
   1073c:	bl	10704 <abort@plt>
   10740:	andeq	r0, r1, r8, lsl fp
   10744:	strdeq	r0, [r1], -ip
   10748:			; <UNDEFINED> instruction: 0x00010ab8
   1074c:	ldr	r3, [pc, #20]	; 10768 <_start@@Base+0x58>
   10750:	ldr	r2, [pc, #20]	; 1076c <_start@@Base+0x5c>
   10754:	add	r3, pc, r3
   10758:	ldr	r2, [r3, r2]
   1075c:	cmp	r2, #0
   10760:	bxeq	lr
   10764:	b	106e0 <__gmon_start__@plt>
   10768:	andeq	r0, r1, r4, lsr #17
   1076c:	andeq	r0, r0, r8, lsr #32
   10770:	ldr	r0, [pc, #24]	; 10790 <_start@@Base+0x80>
   10774:	ldr	r3, [pc, #24]	; 10794 <_start@@Base+0x84>
   10778:	cmp	r3, r0
   1077c:	bxeq	lr
   10780:	ldr	r3, [pc, #16]	; 10798 <_start@@Base+0x88>
   10784:	cmp	r3, #0
   10788:	bxeq	lr
   1078c:	bx	r3
   10790:	andeq	r1, r2, r4, lsr r0
   10794:	andeq	r1, r2, r4, lsr r0
   10798:	andeq	r0, r0, r0
   1079c:	ldr	r0, [pc, #36]	; 107c8 <_start@@Base+0xb8>
   107a0:	ldr	r1, [pc, #36]	; 107cc <_start@@Base+0xbc>
   107a4:	sub	r1, r1, r0
   107a8:	asr	r1, r1, #2
   107ac:	add	r1, r1, r1, lsr #31
   107b0:	asrs	r1, r1, #1
   107b4:	bxeq	lr
   107b8:	ldr	r3, [pc, #16]	; 107d0 <_start@@Base+0xc0>
   107bc:	cmp	r3, #0
   107c0:	bxeq	lr
   107c4:	bx	r3
   107c8:	andeq	r1, r2, r4, lsr r0
   107cc:	andeq	r1, r2, r4, lsr r0
   107d0:	andeq	r0, r0, r0
   107d4:	push	{r4, lr}
   107d8:	ldr	r4, [pc, #24]	; 107f8 <_start@@Base+0xe8>
   107dc:	ldrb	r3, [r4]
   107e0:	cmp	r3, #0
   107e4:	popne	{r4, pc}
   107e8:	bl	10770 <_start@@Base+0x60>
   107ec:	mov	r3, #1
   107f0:	strb	r3, [r4]
   107f4:	pop	{r4, pc}
   107f8:	andeq	r1, r2, r4, lsr r0
   107fc:	b	1079c <_start@@Base+0x8c>

00010800 <lerpontuacoes@@Base>:
   10800:	push	{r4, r5, r6, r7, fp, lr}
   10804:	add	fp, sp, #16
   10808:	sub	sp, sp, #8
   1080c:	mov	r5, r0
   10810:	ldr	r0, [pc, #84]	; 1086c <lerpontuacoes@@Base+0x6c>
   10814:	mov	r4, r1
   10818:	add	r1, sp, #4
   1081c:	add	r0, pc, r0
   10820:	bl	106f8 <__isoc99_scanf@plt>
   10824:	ldr	r0, [sp, #4]
   10828:	cmp	r0, #1
   1082c:	blt	10864 <lerpontuacoes@@Base+0x64>
   10830:	ldr	r6, [pc, #56]	; 10870 <lerpontuacoes@@Base+0x70>
   10834:	mov	r7, #0
   10838:	add	r6, pc, r6
   1083c:	mov	r0, r6
   10840:	mov	r1, r5
   10844:	mov	r2, r4
   10848:	bl	106f8 <__isoc99_scanf@plt>
   1084c:	ldr	r0, [sp, #4]
   10850:	add	r7, r7, #1
   10854:	add	r5, r5, #50	; 0x32
   10858:	add	r4, r4, #4
   1085c:	cmp	r7, r0
   10860:	blt	1083c <lerpontuacoes@@Base+0x3c>
   10864:	sub	sp, fp, #16
   10868:	pop	{r4, r5, r6, r7, fp, pc}
   1086c:	andeq	r0, r0, r7, lsl #6
   10870:	andeq	r0, r0, r8, ror #5

00010874 <primeiroUltimo@@Base>:
   10874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10878:	add	fp, sp, #28
   1087c:	push	{r3}		; (str r3, [sp, #-4]!)
   10880:	cmp	r2, #2
   10884:	blt	108f4 <primeiroUltimo@@Base+0x80>
   10888:	ldr	r9, [r1]
   1088c:	add	r7, r1, #4
   10890:	add	r6, r0, #50	; 0x32
   10894:	sub	r5, r2, #1
   10898:	mov	r8, r9
   1089c:	ldr	r4, [r7]
   108a0:	cmp	r4, r8
   108a4:	ble	108c8 <primeiroUltimo@@Base+0x54>
   108a8:	ldr	r0, [sp]
   108ac:	mov	r1, r6
   108b0:	bl	106c8 <strcpy@plt>
   108b4:	ldr	sl, [r7]
   108b8:	mov	r8, r4
   108bc:	cmp	sl, r9
   108c0:	blt	108d4 <primeiroUltimo@@Base+0x60>
   108c4:	b	108e4 <primeiroUltimo@@Base+0x70>
   108c8:	mov	sl, r4
   108cc:	cmp	sl, r9
   108d0:	bge	108e4 <primeiroUltimo@@Base+0x70>
   108d4:	ldr	r0, [fp, #8]
   108d8:	mov	r1, r6
   108dc:	bl	106c8 <strcpy@plt>
   108e0:	mov	r9, sl
   108e4:	add	r7, r7, #4
   108e8:	add	r6, r6, #50	; 0x32
   108ec:	subs	r5, r5, #1
   108f0:	bne	1089c <primeiroUltimo@@Base+0x28>
   108f4:	sub	sp, fp, #28
   108f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000108fc <main@@Base>:
   108fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10900:	add	fp, sp, #28
   10904:	sub	sp, sp, #4
   10908:	vpush	{d8-d9}
   1090c:	sub	sp, sp, #1200	; 0x4b0
   10910:	sub	r5, fp, #136	; 0x88
   10914:	vmov.i32	q4, #0	; 0x00000000
   10918:	mov	r0, #64	; 0x40
   1091c:	add	r6, sp, #112	; 0x70
   10920:	mov	r2, #1000	; 0x3e8
   10924:	mov	r7, #0
   10928:	mov	r1, r5
   1092c:	vst1.64	{d8-d9}, [r1], r0
   10930:	add	r0, r5, #48	; 0x30
   10934:	vst1.64	{d8-d9}, [r0]
   10938:	add	r0, r5, #32
   1093c:	vst1.64	{d8-d9}, [r1]
   10940:	mov	r1, #0
   10944:	vst1.64	{d8-d9}, [r0]
   10948:	add	r0, r5, #16
   1094c:	vst1.64	{d8-d9}, [r0]
   10950:	mov	r0, r6
   10954:	bl	106ec <memset@plt>
   10958:	add	r0, sp, #56	; 0x38
   1095c:	add	r1, r0, #32
   10960:	vst1.64	{d8-d9}, [r1]
   10964:	add	r1, r0, #16
   10968:	vst1.64	{d8-d9}, [r1]
   1096c:	mov	r1, #48	; 0x30
   10970:	vst1.64	{d8-d9}, [r0], r1
   10974:	strh	r7, [r0]
   10978:	mov	r0, sp
   1097c:	add	r2, r0, #32
   10980:	vst1.64	{d8-d9}, [r2]
   10984:	add	r2, r0, #16
   10988:	vst1.64	{d8-d9}, [r0], r1
   1098c:	sub	r1, fp, #56	; 0x38
   10990:	vst1.64	{d8-d9}, [r2]
   10994:	strh	r7, [r0]
   10998:	ldr	r0, [pc, #260]	; 10aa4 <main@@Base+0x1a8>
   1099c:	add	r0, pc, r0
   109a0:	bl	106f8 <__isoc99_scanf@plt>
   109a4:	ldr	r4, [fp, #-56]	; 0xffffffc8
   109a8:	cmp	r4, #1
   109ac:	blt	10a60 <main@@Base+0x164>
   109b0:	ldr	r8, [pc, #240]	; 10aa8 <main@@Base+0x1ac>
   109b4:	add	r8, pc, r8
   109b8:	mov	r0, r8
   109bc:	mov	r1, r6
   109c0:	mov	r2, r5
   109c4:	bl	106f8 <__isoc99_scanf@plt>
   109c8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   109cc:	add	r7, r7, #1
   109d0:	add	r6, r6, #50	; 0x32
   109d4:	add	r5, r5, #4
   109d8:	cmp	r7, r4
   109dc:	blt	109b8 <main@@Base+0xbc>
   109e0:	cmp	r4, #2
   109e4:	blt	10a60 <main@@Base+0x164>
   109e8:	ldr	sl, [fp, #-136]	; 0xffffff78
   109ec:	add	r0, sp, #112	; 0x70
   109f0:	mov	r6, #1
   109f4:	add	r5, r0, #50	; 0x32
   109f8:	sub	r0, fp, #136	; 0x88
   109fc:	mov	r9, sl
   10a00:	ldr	r7, [r0, r6, lsl #2]
   10a04:	cmp	r7, r9
   10a08:	ble	10a30 <main@@Base+0x134>
   10a0c:	add	r0, sp, #56	; 0x38
   10a10:	mov	r1, r5
   10a14:	bl	106c8 <strcpy@plt>
   10a18:	sub	r0, fp, #136	; 0x88
   10a1c:	mov	r9, r7
   10a20:	ldr	r8, [r0, r6, lsl #2]
   10a24:	cmp	r8, sl
   10a28:	blt	10a3c <main@@Base+0x140>
   10a2c:	b	10a50 <main@@Base+0x154>
   10a30:	mov	r8, r7
   10a34:	cmp	r8, sl
   10a38:	bge	10a50 <main@@Base+0x154>
   10a3c:	mov	r0, sp
   10a40:	mov	r1, r5
   10a44:	bl	106c8 <strcpy@plt>
   10a48:	sub	r0, fp, #136	; 0x88
   10a4c:	mov	sl, r8
   10a50:	add	r6, r6, #1
   10a54:	add	r5, r5, #50	; 0x32
   10a58:	cmp	r4, r6
   10a5c:	bne	10a00 <main@@Base+0x104>
   10a60:	ldr	r0, [pc, #68]	; 10aac <main@@Base+0x1b0>
   10a64:	mov	r1, r4
   10a68:	add	r0, pc, r0
   10a6c:	bl	106bc <printf@plt>
   10a70:	ldr	r0, [pc, #56]	; 10ab0 <main@@Base+0x1b4>
   10a74:	add	r1, sp, #56	; 0x38
   10a78:	add	r0, pc, r0
   10a7c:	bl	106bc <printf@plt>
   10a80:	ldr	r0, [pc, #44]	; 10ab4 <main@@Base+0x1b8>
   10a84:	mov	r1, sp
   10a88:	add	r0, pc, r0
   10a8c:	bl	106bc <printf@plt>
   10a90:	mov	r0, #0
   10a94:	sub	sp, fp, #48	; 0x30
   10a98:	vpop	{d8-d9}
   10a9c:	add	sp, sp, #4
   10aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10aa4:	andeq	r0, r0, r7, lsl #3
   10aa8:	andeq	r0, r0, ip, ror #2
   10aac:	strheq	r0, [r0], -lr
   10ab0:	andeq	r0, r0, sl, asr #1
   10ab4:	andeq	r0, r0, r7, asr #1

00010ab8 <__libc_csu_init@@Base>:
   10ab8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10abc:	mov	r7, r0
   10ac0:	ldr	r6, [pc, #72]	; 10b10 <__libc_csu_init@@Base+0x58>
   10ac4:	ldr	r5, [pc, #72]	; 10b14 <__libc_csu_init@@Base+0x5c>
   10ac8:	add	r6, pc, r6
   10acc:	add	r5, pc, r5
   10ad0:	sub	r6, r6, r5
   10ad4:	mov	r8, r1
   10ad8:	mov	r9, r2
   10adc:	bl	1069c <printf@plt-0x20>
   10ae0:	asrs	r6, r6, #2
   10ae4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ae8:	mov	r4, #0
   10aec:	add	r4, r4, #1
   10af0:	ldr	r3, [r5], #4
   10af4:	mov	r2, r9
   10af8:	mov	r1, r8
   10afc:	mov	r0, r7
   10b00:	blx	r3
   10b04:	cmp	r6, r4
   10b08:	bne	10aec <__libc_csu_init@@Base+0x34>
   10b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b10:	andeq	r0, r1, ip, lsr r4
   10b14:	andeq	r0, r1, r4, lsr r4

00010b18 <__libc_csu_fini@@Base>:
   10b18:	bx	lr

Disassembly of section .fini:

00010b1c <.fini>:
   10b1c:	push	{r3, lr}
   10b20:	pop	{r3, pc}
