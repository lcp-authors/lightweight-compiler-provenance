
../repos/coreutils/src/tee:     file format elf32-littlearm


Disassembly of section .init:

00010cc8 <.init>:
   10cc8:	push	{r3, lr}
   10ccc:	bl	111f8 <close@plt+0x294>
   10cd0:	pop	{r3, pc}

Disassembly of section .plt:

00010cd4 <fdopen@plt-0x14>:
   10cd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd8:	ldr	lr, [pc, #4]	; 10ce4 <fdopen@plt-0x4>
   10cdc:	add	lr, pc, lr
   10ce0:	ldr	pc, [lr, #8]!
   10ce4:	andeq	r8, r1, ip, lsl r3

00010ce8 <fdopen@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #24, 20	; 0x18000
   10cf0:	ldr	pc, [ip, #796]!	; 0x31c

00010cf4 <calloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #24, 20	; 0x18000
   10cfc:	ldr	pc, [ip, #788]!	; 0x314

00010d00 <fputs_unlocked@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #24, 20	; 0x18000
   10d08:	ldr	pc, [ip, #780]!	; 0x30c

00010d0c <raise@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #24, 20	; 0x18000
   10d14:	ldr	pc, [ip, #772]!	; 0x304

00010d18 <strcmp@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #24, 20	; 0x18000
   10d20:	ldr	pc, [ip, #764]!	; 0x2fc

00010d24 <posix_fadvise64@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #24, 20	; 0x18000
   10d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d30 <read@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #24, 20	; 0x18000
   10d38:	ldr	pc, [ip, #748]!	; 0x2ec

00010d3c <fflush@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #740]!	; 0x2e4

00010d48 <free@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #732]!	; 0x2dc

00010d54 <_exit@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d60 <memcpy@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #716]!	; 0x2cc

00010d6c <mbsinit@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #708]!	; 0x2c4

00010d78 <signal@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #700]!	; 0x2bc

00010d84 <fwrite_unlocked@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d90 <memcmp@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #684]!	; 0x2ac

00010d9c <fputc_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #676]!	; 0x2a4

00010da8 <dcgettext@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #668]!	; 0x29c

00010db4 <realloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #660]!	; 0x294

00010dc0 <textdomain@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #652]!	; 0x28c

00010dcc <iswprint@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #644]!	; 0x284

00010dd8 <fwrite@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #636]!	; 0x27c

00010de4 <lseek64@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #628]!	; 0x274

00010df0 <__ctype_get_mb_cur_max@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #620]!	; 0x26c

00010dfc <__fpending@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #612]!	; 0x264

00010e08 <mbrtowc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #604]!	; 0x25c

00010e14 <error@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #596]!	; 0x254

00010e20 <malloc@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #588]!	; 0x24c

00010e2c <__libc_start_main@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #580]!	; 0x244

00010e38 <__freading@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #572]!	; 0x23c

00010e44 <__gmon_start__@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #564]!	; 0x234

00010e50 <getopt_long@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #556]!	; 0x22c

00010e5c <__ctype_b_loc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #548]!	; 0x224

00010e68 <exit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #540]!	; 0x21c

00010e74 <strlen@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #532]!	; 0x214

00010e80 <__errno_location@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #524]!	; 0x20c

00010e8c <__cxa_atexit@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #516]!	; 0x204

00010e98 <setvbuf@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #24, 20	; 0x18000
   10ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ea4 <memset@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #24, 20	; 0x18000
   10eac:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb0 <__printf_chk@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #24, 20	; 0x18000
   10eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00010ebc <fileno@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #24, 20	; 0x18000
   10ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ec8 <__fprintf_chk@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #24, 20	; 0x18000
   10ed0:	ldr	pc, [ip, #476]!	; 0x1dc

00010ed4 <fclose@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #24, 20	; 0x18000
   10edc:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee0 <fseeko64@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #24, 20	; 0x18000
   10ee8:	ldr	pc, [ip, #460]!	; 0x1cc

00010eec <fcntl64@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #24, 20	; 0x18000
   10ef4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ef8 <__overflow@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #24, 20	; 0x18000
   10f00:	ldr	pc, [ip, #444]!	; 0x1bc

00010f04 <setlocale@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #24, 20	; 0x18000
   10f0c:	ldr	pc, [ip, #436]!	; 0x1b4

00010f10 <strrchr@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #24, 20	; 0x18000
   10f18:	ldr	pc, [ip, #428]!	; 0x1ac

00010f1c <nl_langinfo@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #24, 20	; 0x18000
   10f24:	ldr	pc, [ip, #420]!	; 0x1a4

00010f28 <clearerr_unlocked@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #24, 20	; 0x18000
   10f30:	ldr	pc, [ip, #412]!	; 0x19c

00010f34 <fopen64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #24, 20	; 0x18000
   10f3c:	ldr	pc, [ip, #404]!	; 0x194

00010f40 <bindtextdomain@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #24, 20	; 0x18000
   10f48:	ldr	pc, [ip, #396]!	; 0x18c

00010f4c <strncmp@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #24, 20	; 0x18000
   10f54:	ldr	pc, [ip, #388]!	; 0x184

00010f58 <abort@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #24, 20	; 0x18000
   10f60:	ldr	pc, [ip, #380]!	; 0x17c

00010f64 <close@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #24, 20	; 0x18000
   10f6c:	ldr	pc, [ip, #372]!	; 0x174

Disassembly of section .text:

00010f70 <.text>:
   10f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f74:	mov	r7, r0
   10f78:	sub	sp, sp, #20
   10f7c:	ldr	r0, [r1]
   10f80:	mov	r6, r1
   10f84:	bl	12308 <close@plt+0x13a4>
   10f88:	ldr	r1, [pc, #472]	; 11168 <close@plt+0x204>
   10f8c:	mov	r0, #6
   10f90:	bl	10f04 <setlocale@plt>
   10f94:	ldr	sl, [pc, #464]	; 1116c <close@plt+0x208>
   10f98:	ldr	r1, [pc, #464]	; 11170 <close@plt+0x20c>
   10f9c:	ldr	r0, [pc, #464]	; 11174 <close@plt+0x210>
   10fa0:	bl	10f40 <bindtextdomain@plt>
   10fa4:	ldr	r5, [pc, #460]	; 11178 <close@plt+0x214>
   10fa8:	ldr	r0, [pc, #452]	; 11174 <close@plt+0x210>
   10fac:	ldr	r8, [pc, #456]	; 1117c <close@plt+0x218>
   10fb0:	bl	10dc0 <textdomain@plt>
   10fb4:	add	r9, sl, #92	; 0x5c
   10fb8:	ldr	r0, [pc, #448]	; 11180 <close@plt+0x21c>
   10fbc:	mov	fp, #1
   10fc0:	bl	17dcc <close@plt+0x6e68>
   10fc4:	mov	r3, #0
   10fc8:	strb	r3, [r5]
   10fcc:	strb	r3, [r5, #8]
   10fd0:	mov	r4, #0
   10fd4:	str	r4, [sp]
   10fd8:	mov	r3, r9
   10fdc:	mov	r2, r8
   10fe0:	mov	r1, r6
   10fe4:	mov	r0, r7
   10fe8:	bl	10e50 <getopt_long@plt>
   10fec:	cmn	r0, #1
   10ff0:	beq	110cc <close@plt+0x168>
   10ff4:	cmp	r0, #97	; 0x61
   10ff8:	beq	110b8 <close@plt+0x154>
   10ffc:	bgt	11018 <close@plt+0xb4>
   11000:	cmn	r0, #3
   11004:	beq	1106c <close@plt+0x108>
   11008:	cmn	r0, #2
   1100c:	bne	110b0 <close@plt+0x14c>
   11010:	mov	r0, r4
   11014:	bl	11674 <close@plt+0x710>
   11018:	cmp	r0, #105	; 0x69
   1101c:	beq	110a8 <close@plt+0x144>
   11020:	cmp	r0, #112	; 0x70
   11024:	bne	110b0 <close@plt+0x14c>
   11028:	ldr	r3, [pc, #340]	; 11184 <close@plt+0x220>
   1102c:	ldr	r1, [r3]
   11030:	cmp	r1, #0
   11034:	beq	110c0 <close@plt+0x15c>
   11038:	ldr	r3, [pc, #328]	; 11188 <close@plt+0x224>
   1103c:	mov	r0, #4
   11040:	ldr	r2, [r3]
   11044:	ldr	r3, [pc, #320]	; 1118c <close@plt+0x228>
   11048:	str	r0, [sp]
   1104c:	stmib	sp, {r2, fp}
   11050:	ldr	r0, [pc, #312]	; 11190 <close@plt+0x22c>
   11054:	add	r2, r3, #16
   11058:	bl	11c8c <close@plt+0xd28>
   1105c:	add	r0, sl, r0, lsl #2
   11060:	ldr	r3, [r0, #56]	; 0x38
   11064:	str	r3, [r5, #4]
   11068:	b	10fd0 <close@plt+0x6c>
   1106c:	ldr	ip, [pc, #288]	; 11194 <close@plt+0x230>
   11070:	ldr	r1, [pc, #288]	; 11198 <close@plt+0x234>
   11074:	ldr	r3, [pc, #288]	; 1119c <close@plt+0x238>
   11078:	ldr	r0, [pc, #288]	; 111a0 <close@plt+0x23c>
   1107c:	ldr	r2, [pc, #288]	; 111a4 <close@plt+0x240>
   11080:	str	r4, [sp, #12]
   11084:	ldr	r0, [r0]
   11088:	ldr	r3, [r3]
   1108c:	stmib	sp, {r1, ip}
   11090:	str	r2, [sp]
   11094:	ldr	r1, [pc, #268]	; 111a8 <close@plt+0x244>
   11098:	ldr	r2, [pc, #268]	; 111ac <close@plt+0x248>
   1109c:	bl	16bb4 <close@plt+0x5c50>
   110a0:	mov	r0, r4
   110a4:	bl	10e68 <exit@plt>
   110a8:	strb	fp, [r5, #8]
   110ac:	b	10fd0 <close@plt+0x6c>
   110b0:	mov	r0, #1
   110b4:	bl	11674 <close@plt+0x710>
   110b8:	strb	fp, [r5]
   110bc:	b	10fd0 <close@plt+0x6c>
   110c0:	mov	r3, #2
   110c4:	str	r3, [r5, #4]
   110c8:	b	10fd0 <close@plt+0x6c>
   110cc:	ldrb	r3, [r5, #8]
   110d0:	cmp	r3, r4
   110d4:	bne	1111c <close@plt+0x1b8>
   110d8:	ldr	r3, [r5, #4]
   110dc:	cmp	r3, #0
   110e0:	bne	1112c <close@plt+0x1c8>
   110e4:	ldr	r3, [pc, #196]	; 111b0 <close@plt+0x24c>
   110e8:	ldr	r1, [r3]
   110ec:	sub	r0, r7, r1
   110f0:	add	r1, r6, r1, lsl #2
   110f4:	bl	112e4 <close@plt+0x380>
   110f8:	mov	r4, r0
   110fc:	mov	r0, #0
   11100:	bl	10f64 <close@plt>
   11104:	cmp	r0, #0
   11108:	bne	1113c <close@plt+0x1d8>
   1110c:	eor	r0, r4, #1
   11110:	uxtb	r0, r0
   11114:	add	sp, sp, #20
   11118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1111c:	mov	r1, #1
   11120:	mov	r0, #2
   11124:	bl	10d78 <signal@plt>
   11128:	b	110d8 <close@plt+0x174>
   1112c:	mov	r1, #1
   11130:	mov	r0, #13
   11134:	bl	10d78 <signal@plt>
   11138:	b	110e4 <close@plt+0x180>
   1113c:	bl	10e80 <__errno_location@plt>
   11140:	mov	r2, #5
   11144:	ldr	r1, [pc, #104]	; 111b4 <close@plt+0x250>
   11148:	ldr	r4, [r0]
   1114c:	mov	r0, #0
   11150:	bl	10da8 <dcgettext@plt>
   11154:	mov	r1, r4
   11158:	ldr	r2, [pc, #88]	; 111b8 <close@plt+0x254>
   1115c:	mov	r3, r0
   11160:	mov	r0, #1
   11164:	bl	10e14 <error@plt>
   11168:	andeq	r7, r1, ip, lsl pc
   1116c:	strdeq	r7, [r1], -r0
   11170:	andeq	r8, r1, r4, asr #7
   11174:	andeq	r8, r1, ip, lsl r3
   11178:	andeq	r9, r2, r8, ror #2
   1117c:	andeq	r8, r1, ip, lsl r4
   11180:	andeq	r1, r1, r4, asr pc
   11184:	andeq	r9, r2, r0, ror #2
   11188:	strdeq	r9, [r2], -r4
   1118c:	andeq	r7, r1, r8, lsr #28
   11190:	ldrdeq	r8, [r1], -ip
   11194:	andeq	r8, r1, ip, ror #7
   11198:	strdeq	r8, [r1], -ip
   1119c:	strdeq	r9, [r2], -r0
   111a0:	andeq	r9, r2, ip, asr r1
   111a4:	andeq	r8, r1, r0, lsl r4
   111a8:	ldrdeq	r7, [r1], -r0
   111ac:	andeq	r8, r1, r8, lsl r3
   111b0:	andeq	r9, r2, r8, asr #2
   111b4:	andeq	r8, r1, r0, lsr #8
   111b8:	andeq	r8, r1, r4, lsl #11
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <close@plt+0x288>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <close@plt+0x28c>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <close@plt+0x290>
   111e4:	bl	10e2c <__libc_start_main@plt>
   111e8:	bl	10f58 <abort@plt>
   111ec:	andeq	r7, r1, r8, asr #27
   111f0:	andeq	r0, r1, r0, ror pc
   111f4:	andeq	r7, r1, r8, ror #26
   111f8:	ldr	r3, [pc, #20]	; 11214 <close@plt+0x2b0>
   111fc:	ldr	r2, [pc, #20]	; 11218 <close@plt+0x2b4>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10e44 <__gmon_start__@plt>
   11214:	strdeq	r7, [r1], -r8
   11218:	andeq	r0, r0, r4, ror #1
   1121c:	ldr	r3, [pc, #28]	; 11240 <close@plt+0x2dc>
   11220:	ldr	r0, [pc, #28]	; 11244 <close@plt+0x2e0>
   11224:	sub	r3, r3, r0
   11228:	cmp	r3, #6
   1122c:	bxls	lr
   11230:	ldr	r3, [pc, #16]	; 11248 <close@plt+0x2e4>
   11234:	cmp	r3, #0
   11238:	bxeq	lr
   1123c:	bx	r3
   11240:	andeq	r9, r2, pc, lsr r1
   11244:	andeq	r9, r2, ip, lsr r1
   11248:	andeq	r0, r0, r0
   1124c:	ldr	r1, [pc, #36]	; 11278 <close@plt+0x314>
   11250:	ldr	r0, [pc, #36]	; 1127c <close@plt+0x318>
   11254:	sub	r1, r1, r0
   11258:	asr	r1, r1, #2
   1125c:	add	r1, r1, r1, lsr #31
   11260:	asrs	r1, r1, #1
   11264:	bxeq	lr
   11268:	ldr	r3, [pc, #16]	; 11280 <close@plt+0x31c>
   1126c:	cmp	r3, #0
   11270:	bxeq	lr
   11274:	bx	r3
   11278:	andeq	r9, r2, ip, lsr r1
   1127c:	andeq	r9, r2, ip, lsr r1
   11280:	andeq	r0, r0, r0
   11284:	push	{r4, lr}
   11288:	ldr	r4, [pc, #24]	; 112a8 <close@plt+0x344>
   1128c:	ldrb	r3, [r4]
   11290:	cmp	r3, #0
   11294:	popne	{r4, pc}
   11298:	bl	1121c <close@plt+0x2b8>
   1129c:	mov	r3, #1
   112a0:	strb	r3, [r4]
   112a4:	pop	{r4, pc}
   112a8:	andeq	r9, r2, r4, ror #2
   112ac:	ldr	r0, [pc, #40]	; 112dc <close@plt+0x378>
   112b0:	ldr	r3, [r0]
   112b4:	cmp	r3, #0
   112b8:	bne	112c0 <close@plt+0x35c>
   112bc:	b	1124c <close@plt+0x2e8>
   112c0:	ldr	r3, [pc, #24]	; 112e0 <close@plt+0x37c>
   112c4:	cmp	r3, #0
   112c8:	beq	112bc <close@plt+0x358>
   112cc:	push	{r4, lr}
   112d0:	blx	r3
   112d4:	pop	{r4, lr}
   112d8:	b	1124c <close@plt+0x2e8>
   112dc:	andeq	r8, r2, r4, lsl pc
   112e0:	andeq	r0, r0, r0
   112e4:	ldr	r3, [pc, #872]	; 11654 <close@plt+0x6f0>
   112e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112ec:	sub	sp, sp, #8192	; 0x2000
   112f0:	ldrb	ip, [r3]
   112f4:	ldr	lr, [pc, #860]	; 11658 <close@plt+0x6f4>
   112f8:	sub	sp, sp, #28
   112fc:	ldr	r3, [pc, #856]	; 1165c <close@plt+0x6f8>
   11300:	cmp	ip, #0
   11304:	ldr	r2, [pc, #852]	; 11660 <close@plt+0x6fc>
   11308:	mov	r6, r0
   1130c:	movne	r2, r3
   11310:	ldr	r0, [lr]
   11314:	mov	r5, r1
   11318:	str	r1, [sp, #8]
   1131c:	mov	r1, #2
   11320:	str	r2, [sp]
   11324:	bl	12044 <close@plt+0x10e0>
   11328:	mov	r1, #4
   1132c:	add	r0, r6, #1
   11330:	bl	16e80 <close@plt+0x5f1c>
   11334:	ldr	fp, [pc, #808]	; 11664 <close@plt+0x700>
   11338:	mov	r2, #5
   1133c:	ldr	r1, [pc, #804]	; 11668 <close@plt+0x704>
   11340:	ldr	r3, [fp]
   11344:	mov	sl, r0
   11348:	str	r0, [sp, #12]
   1134c:	str	r3, [sl]
   11350:	mov	r0, #0
   11354:	bl	10da8 <dcgettext@plt>
   11358:	mov	r3, #0
   1135c:	mov	r1, r3
   11360:	mov	r2, #2
   11364:	str	r0, [r5, #-4]
   11368:	ldr	r0, [fp]
   1136c:	bl	10e98 <setvbuf@plt>
   11370:	cmp	r6, #0
   11374:	mov	r3, #1
   11378:	ble	11648 <close@plt+0x6e4>
   1137c:	mov	r7, r3
   11380:	mov	r8, r3
   11384:	mov	r9, #0
   11388:	str	r3, [sp, #4]
   1138c:	ldr	r1, [sp]
   11390:	ldr	r0, [r5]
   11394:	bl	12178 <close@plt+0x1214>
   11398:	mov	r1, #0
   1139c:	mov	r3, r9
   113a0:	mov	r2, #2
   113a4:	cmp	r0, r1
   113a8:	mov	r4, r0
   113ac:	str	r0, [sl, #4]!
   113b0:	beq	115b0 <close@plt+0x64c>
   113b4:	add	r8, r8, #1
   113b8:	bl	10e98 <setvbuf@plt>
   113bc:	cmp	r6, r8
   113c0:	add	r7, r7, #1
   113c4:	add	r5, r5, #4
   113c8:	bge	1138c <close@plt+0x428>
   113cc:	cmp	r7, #0
   113d0:	beq	11518 <close@plt+0x5b4>
   113d4:	mov	sl, #1
   113d8:	mov	r2, #8192	; 0x2000
   113dc:	add	r1, sp, #24
   113e0:	mov	r0, #0
   113e4:	bl	10d30 <read@plt>
   113e8:	subs	r8, r0, #0
   113ec:	blt	114f0 <close@plt+0x58c>
   113f0:	beq	11510 <close@plt+0x5ac>
   113f4:	cmp	r6, #0
   113f8:	blt	11500 <close@plt+0x59c>
   113fc:	ldr	r4, [sp, #12]
   11400:	mov	r5, #0
   11404:	b	11488 <close@plt+0x524>
   11408:	ldr	r0, [r4]
   1140c:	ldr	r2, [fp]
   11410:	cmp	r0, r2
   11414:	bne	11424 <close@plt+0x4c0>
   11418:	str	r3, [sp]
   1141c:	bl	10f28 <clearerr_unlocked@plt>
   11420:	ldr	r3, [sp]
   11424:	str	r3, [sp]
   11428:	ldr	r3, [sp, #8]
   1142c:	mov	r1, #3
   11430:	add	r2, r3, r5, lsl #2
   11434:	mov	r0, #0
   11438:	ldr	r2, [r2, #-4]
   1143c:	bl	152e0 <close@plt+0x437c>
   11440:	mov	r3, #0
   11444:	str	r3, [sp, #4]
   11448:	sub	r9, r9, #3
   1144c:	ldr	r3, [sp]
   11450:	cmp	r9, #1
   11454:	mov	r1, r3
   11458:	ldr	r2, [pc, #524]	; 1166c <close@plt+0x708>
   1145c:	mov	r3, r0
   11460:	movhi	r0, #0
   11464:	movls	r0, #1
   11468:	bl	10e14 <error@plt>
   1146c:	mov	r3, #0
   11470:	str	r3, [r4]
   11474:	sub	r7, r7, #1
   11478:	add	r5, r5, #1
   1147c:	cmp	r6, r5
   11480:	add	r4, r4, #4
   11484:	blt	11500 <close@plt+0x59c>
   11488:	ldr	r3, [r4]
   1148c:	cmp	r3, #0
   11490:	beq	11478 <close@plt+0x514>
   11494:	mov	r2, sl
   11498:	mov	r1, r8
   1149c:	add	r0, sp, #24
   114a0:	bl	10d84 <fwrite_unlocked@plt>
   114a4:	cmp	r0, #1
   114a8:	beq	11478 <close@plt+0x514>
   114ac:	bl	10e80 <__errno_location@plt>
   114b0:	ldr	r2, [pc, #412]	; 11654 <close@plt+0x6f0>
   114b4:	ldr	r9, [r2, #4]
   114b8:	ldr	r3, [r0]
   114bc:	cmp	r3, #32
   114c0:	bne	11408 <close@plt+0x4a4>
   114c4:	bic	r2, r9, #2
   114c8:	cmp	r2, #1
   114cc:	beq	11408 <close@plt+0x4a4>
   114d0:	ldr	r0, [r4]
   114d4:	ldr	r3, [fp]
   114d8:	cmp	r0, r3
   114dc:	bne	1146c <close@plt+0x508>
   114e0:	bl	10f28 <clearerr_unlocked@plt>
   114e4:	mov	r3, #0
   114e8:	str	r3, [r4]
   114ec:	b	11474 <close@plt+0x510>
   114f0:	bl	10e80 <__errno_location@plt>
   114f4:	ldr	r3, [r0]
   114f8:	cmp	r3, #4
   114fc:	bne	11508 <close@plt+0x5a4>
   11500:	cmp	r7, #0
   11504:	bne	113d8 <close@plt+0x474>
   11508:	cmn	r8, #1
   1150c:	beq	11614 <close@plt+0x6b0>
   11510:	cmp	r6, #0
   11514:	ble	11598 <close@plt+0x634>
   11518:	ldr	fp, [pc, #332]	; 1166c <close@plt+0x708>
   1151c:	ldr	r4, [sp, #8]
   11520:	ldr	r7, [sp, #12]
   11524:	mov	r5, #1
   11528:	mov	sl, #3
   1152c:	mov	r8, #0
   11530:	b	11540 <close@plt+0x5dc>
   11534:	cmp	r6, r5
   11538:	add	r4, r4, #4
   1153c:	blt	11598 <close@plt+0x634>
   11540:	ldr	r3, [r7, #4]!
   11544:	add	r5, r5, #1
   11548:	subs	r0, r3, #0
   1154c:	beq	11534 <close@plt+0x5d0>
   11550:	bl	12078 <close@plt+0x1114>
   11554:	cmp	r0, #0
   11558:	beq	11534 <close@plt+0x5d0>
   1155c:	bl	10e80 <__errno_location@plt>
   11560:	ldr	r2, [r4]
   11564:	mov	r1, sl
   11568:	str	r8, [sp, #4]
   1156c:	add	r4, r4, #4
   11570:	ldr	r9, [r0]
   11574:	mov	r0, r8
   11578:	bl	152e0 <close@plt+0x437c>
   1157c:	mov	r2, fp
   11580:	mov	r1, r9
   11584:	mov	r3, r0
   11588:	mov	r0, r8
   1158c:	bl	10e14 <error@plt>
   11590:	cmp	r6, r5
   11594:	bge	11540 <close@plt+0x5dc>
   11598:	ldr	r0, [sp, #12]
   1159c:	bl	12210 <close@plt+0x12ac>
   115a0:	ldr	r0, [sp, #4]
   115a4:	add	sp, sp, #8192	; 0x2000
   115a8:	add	sp, sp, #28
   115ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115b0:	ldr	r3, [pc, #156]	; 11654 <close@plt+0x6f0>
   115b4:	add	r8, r8, #1
   115b8:	ldr	r3, [r3, #4]
   115bc:	sub	r3, r3, #3
   115c0:	cmp	r3, #1
   115c4:	movhi	r3, #0
   115c8:	movls	r3, #1
   115cc:	str	r3, [sp, #20]
   115d0:	bl	10e80 <__errno_location@plt>
   115d4:	ldr	r2, [r5], #4
   115d8:	mov	r1, #3
   115dc:	str	r9, [sp, #4]
   115e0:	ldr	ip, [r0]
   115e4:	mov	r0, r9
   115e8:	str	ip, [sp, #16]
   115ec:	bl	152e0 <close@plt+0x437c>
   115f0:	ldr	r2, [pc, #116]	; 1166c <close@plt+0x708>
   115f4:	ldr	r1, [sp, #16]
   115f8:	mov	r3, r0
   115fc:	ldr	r0, [sp, #20]
   11600:	bl	10e14 <error@plt>
   11604:	cmp	r6, r8
   11608:	bge	1138c <close@plt+0x428>
   1160c:	str	r4, [sp, #4]
   11610:	b	113cc <close@plt+0x468>
   11614:	bl	10e80 <__errno_location@plt>
   11618:	mov	r3, #0
   1161c:	mov	r2, #5
   11620:	ldr	r1, [pc, #72]	; 11670 <close@plt+0x70c>
   11624:	str	r3, [sp, #4]
   11628:	ldr	r4, [r0]
   1162c:	mov	r0, r3
   11630:	bl	10da8 <dcgettext@plt>
   11634:	mov	r1, r4
   11638:	mov	r2, r0
   1163c:	mov	r0, #0
   11640:	bl	10e14 <error@plt>
   11644:	b	11510 <close@plt+0x5ac>
   11648:	str	r3, [sp, #4]
   1164c:	mov	r7, r3
   11650:	b	113d4 <close@plt+0x470>
   11654:	andeq	r9, r2, r8, ror #2
   11658:	andeq	r9, r2, r8, asr r1
   1165c:	andeq	r7, r1, ip, lsr #29
   11660:			; <UNDEFINED> instruction: 0x00017eb0
   11664:	andeq	r9, r2, ip, asr r1
   11668:			; <UNDEFINED> instruction: 0x00017eb4
   1166c:	andeq	r8, r1, r4, lsl #11
   11670:	andeq	r7, r1, r4, asr #29
   11674:	subs	r6, r0, #0
   11678:	push	{r7, lr}
   1167c:	sub	sp, sp, #56	; 0x38
   11680:	beq	116bc <close@plt+0x758>
   11684:	ldr	r3, [pc, #660]	; 11920 <close@plt+0x9bc>
   11688:	mov	r2, #5
   1168c:	ldr	r1, [pc, #656]	; 11924 <close@plt+0x9c0>
   11690:	mov	r0, #0
   11694:	ldr	r4, [r3]
   11698:	bl	10da8 <dcgettext@plt>
   1169c:	ldr	r3, [pc, #644]	; 11928 <close@plt+0x9c4>
   116a0:	mov	r1, #1
   116a4:	ldr	r3, [r3]
   116a8:	mov	r2, r0
   116ac:	mov	r0, r4
   116b0:	bl	10ec8 <__fprintf_chk@plt>
   116b4:	mov	r0, r6
   116b8:	bl	10e68 <exit@plt>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #612]	; 1192c <close@plt+0x9c8>
   116c4:	bl	10da8 <dcgettext@plt>
   116c8:	ldr	r3, [pc, #600]	; 11928 <close@plt+0x9c4>
   116cc:	ldr	r7, [pc, #604]	; 11930 <close@plt+0x9cc>
   116d0:	ldr	r4, [pc, #604]	; 11934 <close@plt+0x9d0>
   116d4:	ldr	r2, [r3]
   116d8:	mov	r1, r0
   116dc:	mov	r0, #1
   116e0:	bl	10eb0 <__printf_chk@plt>
   116e4:	mov	r2, #5
   116e8:	ldr	r1, [pc, #584]	; 11938 <close@plt+0x9d4>
   116ec:	mov	r0, r6
   116f0:	bl	10da8 <dcgettext@plt>
   116f4:	ldr	r1, [r7]
   116f8:	bl	10d00 <fputs_unlocked@plt>
   116fc:	mov	r2, #5
   11700:	ldr	r1, [pc, #564]	; 1193c <close@plt+0x9d8>
   11704:	mov	r0, r6
   11708:	bl	10da8 <dcgettext@plt>
   1170c:	ldr	r1, [r7]
   11710:	bl	10d00 <fputs_unlocked@plt>
   11714:	mov	r2, #5
   11718:	ldr	r1, [pc, #544]	; 11940 <close@plt+0x9dc>
   1171c:	mov	r0, r6
   11720:	bl	10da8 <dcgettext@plt>
   11724:	ldr	r1, [r7]
   11728:	bl	10d00 <fputs_unlocked@plt>
   1172c:	mov	r2, #5
   11730:	ldr	r1, [pc, #524]	; 11944 <close@plt+0x9e0>
   11734:	mov	r0, r6
   11738:	bl	10da8 <dcgettext@plt>
   1173c:	ldr	r1, [r7]
   11740:	bl	10d00 <fputs_unlocked@plt>
   11744:	mov	r2, #5
   11748:	ldr	r1, [pc, #504]	; 11948 <close@plt+0x9e4>
   1174c:	mov	r0, r6
   11750:	bl	10da8 <dcgettext@plt>
   11754:	ldr	r1, [r7]
   11758:	bl	10d00 <fputs_unlocked@plt>
   1175c:	ldm	r4!, {r0, r1, r2, r3}
   11760:	mov	lr, sp
   11764:	stmia	lr!, {r0, r1, r2, r3}
   11768:	ldm	r4!, {r0, r1, r2, r3}
   1176c:	ldr	ip, [sp]
   11770:	stmia	lr!, {r0, r1, r2, r3}
   11774:	cmp	ip, #0
   11778:	ldm	r4!, {r0, r1, r2, r3}
   1177c:	stmia	lr!, {r0, r1, r2, r3}
   11780:	ldm	r4, {r0, r1}
   11784:	moveq	r4, sp
   11788:	stm	lr, {r0, r1}
   1178c:	beq	117bc <close@plt+0x858>
   11790:	ldr	r5, [pc, #436]	; 1194c <close@plt+0x9e8>
   11794:	mov	r4, sp
   11798:	b	117a8 <close@plt+0x844>
   1179c:	ldr	ip, [r4, #8]!
   117a0:	cmp	ip, #0
   117a4:	beq	117bc <close@plt+0x858>
   117a8:	mov	r1, ip
   117ac:	mov	r0, r5
   117b0:	bl	10d18 <strcmp@plt>
   117b4:	cmp	r0, #0
   117b8:	bne	1179c <close@plt+0x838>
   117bc:	ldr	r4, [r4, #4]
   117c0:	mov	r2, #5
   117c4:	cmp	r4, #0
   117c8:	ldr	r1, [pc, #384]	; 11950 <close@plt+0x9ec>
   117cc:	beq	11874 <close@plt+0x910>
   117d0:	mov	r0, #0
   117d4:	bl	10da8 <dcgettext@plt>
   117d8:	ldr	r3, [pc, #372]	; 11954 <close@plt+0x9f0>
   117dc:	ldr	r2, [pc, #372]	; 11958 <close@plt+0x9f4>
   117e0:	mov	r1, r0
   117e4:	mov	r0, #1
   117e8:	bl	10eb0 <__printf_chk@plt>
   117ec:	mov	r1, #0
   117f0:	mov	r0, #5
   117f4:	bl	10f04 <setlocale@plt>
   117f8:	cmp	r0, #0
   117fc:	ldreq	r5, [pc, #328]	; 1194c <close@plt+0x9e8>
   11800:	beq	1181c <close@plt+0x8b8>
   11804:	mov	r2, #3
   11808:	ldr	r1, [pc, #332]	; 1195c <close@plt+0x9f8>
   1180c:	bl	10f4c <strncmp@plt>
   11810:	ldr	r5, [pc, #308]	; 1194c <close@plt+0x9e8>
   11814:	cmp	r0, #0
   11818:	bne	11904 <close@plt+0x9a0>
   1181c:	mov	r2, #5
   11820:	ldr	r1, [pc, #312]	; 11960 <close@plt+0x9fc>
   11824:	mov	r0, #0
   11828:	bl	10da8 <dcgettext@plt>
   1182c:	ldr	r3, [pc, #280]	; 1194c <close@plt+0x9e8>
   11830:	ldr	r2, [pc, #284]	; 11954 <close@plt+0x9f0>
   11834:	mov	r1, r0
   11838:	mov	r0, #1
   1183c:	bl	10eb0 <__printf_chk@plt>
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #280]	; 11964 <close@plt+0xa00>
   11848:	mov	r0, #0
   1184c:	bl	10da8 <dcgettext@plt>
   11850:	ldr	r2, [pc, #272]	; 11968 <close@plt+0xa04>
   11854:	cmp	r4, r5
   11858:	ldr	r3, [pc, #268]	; 1196c <close@plt+0xa08>
   1185c:	movne	r3, r2
   11860:	mov	r1, r0
   11864:	mov	r2, r4
   11868:	mov	r0, #1
   1186c:	bl	10eb0 <__printf_chk@plt>
   11870:	b	116b4 <close@plt+0x750>
   11874:	mov	r0, r4
   11878:	bl	10da8 <dcgettext@plt>
   1187c:	ldr	r3, [pc, #208]	; 11954 <close@plt+0x9f0>
   11880:	ldr	r2, [pc, #208]	; 11958 <close@plt+0x9f4>
   11884:	mov	r1, r0
   11888:	mov	r0, #1
   1188c:	bl	10eb0 <__printf_chk@plt>
   11890:	mov	r1, r4
   11894:	mov	r0, #5
   11898:	bl	10f04 <setlocale@plt>
   1189c:	cmp	r0, #0
   118a0:	beq	118b8 <close@plt+0x954>
   118a4:	mov	r2, #3
   118a8:	ldr	r1, [pc, #172]	; 1195c <close@plt+0x9f8>
   118ac:	bl	10f4c <strncmp@plt>
   118b0:	cmp	r0, #0
   118b4:	bne	118fc <close@plt+0x998>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #156]	; 11960 <close@plt+0x9fc>
   118c0:	mov	r0, #0
   118c4:	bl	10da8 <dcgettext@plt>
   118c8:	ldr	r3, [pc, #124]	; 1194c <close@plt+0x9e8>
   118cc:	ldr	r2, [pc, #128]	; 11954 <close@plt+0x9f0>
   118d0:	mov	r4, r3
   118d4:	mov	r1, r0
   118d8:	mov	r0, #1
   118dc:	bl	10eb0 <__printf_chk@plt>
   118e0:	ldr	r1, [pc, #124]	; 11964 <close@plt+0xa00>
   118e4:	mov	r2, #5
   118e8:	mov	r0, #0
   118ec:	bl	10da8 <dcgettext@plt>
   118f0:	ldr	r3, [pc, #116]	; 1196c <close@plt+0xa08>
   118f4:	mov	r1, r0
   118f8:	b	11864 <close@plt+0x900>
   118fc:	ldr	r5, [pc, #72]	; 1194c <close@plt+0x9e8>
   11900:	mov	r4, r5
   11904:	mov	r2, #5
   11908:	ldr	r1, [pc, #96]	; 11970 <close@plt+0xa0c>
   1190c:	mov	r0, #0
   11910:	bl	10da8 <dcgettext@plt>
   11914:	ldr	r1, [r7]
   11918:	bl	10d00 <fputs_unlocked@plt>
   1191c:	b	1181c <close@plt+0x8b8>
   11920:	andeq	r9, r2, r0, asr r1
   11924:	ldrdeq	r7, [r1], -r4
   11928:	andeq	r9, r2, ip, ror r1
   1192c:	strdeq	r7, [r1], -ip
   11930:	andeq	r9, r2, ip, asr r1
   11934:	strdeq	r7, [r1], -r0
   11938:	andeq	r7, r1, r0, lsr #30
   1193c:	andeq	r7, r1, r0, ror #31
   11940:	andeq	r8, r1, r0, ror r0
   11944:	andeq	r8, r1, r0, lsr #1
   11948:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1194c:	ldrdeq	r7, [r1], -r0
   11950:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11954:	strdeq	r8, [r1], -r0
   11958:	andeq	r8, r1, r8, lsl r3
   1195c:	andeq	r8, r1, r8, lsr #6
   11960:	andeq	r8, r1, r4, ror r3
   11964:	muleq	r1, r0, r3
   11968:	andeq	r7, r1, ip, lsl pc
   1196c:	andeq	r8, r1, r8, lsr r4
   11970:	andeq	r8, r1, ip, lsr #6
   11974:	mov	r0, #1
   11978:	b	11674 <close@plt+0x710>
   1197c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11980:	mov	r4, r1
   11984:	sub	sp, sp, #12
   11988:	mov	r5, r2
   1198c:	str	r2, [sp, #4]
   11990:	mov	r7, r3
   11994:	mov	sl, r0
   11998:	bl	10e74 <strlen@plt>
   1199c:	ldr	fp, [r4]
   119a0:	cmp	fp, #0
   119a4:	beq	11ab8 <close@plt+0xb54>
   119a8:	cmp	r5, #0
   119ac:	mov	r8, r0
   119b0:	mov	r3, r5
   119b4:	beq	11a60 <close@plt+0xafc>
   119b8:	mov	r2, #0
   119bc:	mov	r5, r2
   119c0:	mov	r6, r3
   119c4:	mvn	r9, #0
   119c8:	str	r2, [sp]
   119cc:	mov	r2, r8
   119d0:	mov	r1, sl
   119d4:	mov	r0, fp
   119d8:	bl	10f4c <strncmp@plt>
   119dc:	cmp	r0, #0
   119e0:	mov	r0, fp
   119e4:	bne	11a24 <close@plt+0xac0>
   119e8:	bl	10e74 <strlen@plt>
   119ec:	ldr	r3, [sp, #4]
   119f0:	mov	r2, r7
   119f4:	mov	r1, r6
   119f8:	cmp	r8, r0
   119fc:	mla	r0, r7, r9, r3
   11a00:	beq	11a50 <close@plt+0xaec>
   11a04:	cmn	r9, #1
   11a08:	moveq	r9, r5
   11a0c:	beq	11a24 <close@plt+0xac0>
   11a10:	bl	10d90 <memcmp@plt>
   11a14:	ldr	r3, [sp]
   11a18:	cmp	r0, #0
   11a1c:	movne	r3, #1
   11a20:	str	r3, [sp]
   11a24:	ldr	fp, [r4, #4]!
   11a28:	add	r5, r5, #1
   11a2c:	cmp	fp, #0
   11a30:	add	r6, r6, r7
   11a34:	bne	119cc <close@plt+0xa68>
   11a38:	ldr	r3, [sp]
   11a3c:	cmp	r3, #0
   11a40:	mvnne	r9, #1
   11a44:	mov	r0, r9
   11a48:	add	sp, sp, #12
   11a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a50:	mov	r9, r5
   11a54:	mov	r0, r9
   11a58:	add	sp, sp, #12
   11a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a60:	mov	r6, r5
   11a64:	mvn	r9, #0
   11a68:	mov	r2, r8
   11a6c:	mov	r1, sl
   11a70:	mov	r0, fp
   11a74:	bl	10f4c <strncmp@plt>
   11a78:	cmp	r0, #0
   11a7c:	mov	r0, fp
   11a80:	bne	11a9c <close@plt+0xb38>
   11a84:	bl	10e74 <strlen@plt>
   11a88:	cmp	r8, r0
   11a8c:	beq	11a50 <close@plt+0xaec>
   11a90:	cmn	r9, #1
   11a94:	moveq	r9, r5
   11a98:	movne	r6, #1
   11a9c:	ldr	fp, [r4, #4]!
   11aa0:	add	r5, r5, #1
   11aa4:	cmp	fp, #0
   11aa8:	bne	11a68 <close@plt+0xb04>
   11aac:	str	r6, [sp]
   11ab0:	mov	r3, r6
   11ab4:	b	11a3c <close@plt+0xad8>
   11ab8:	mvn	r9, #0
   11abc:	b	11a44 <close@plt+0xae0>
   11ac0:	push	{r4, r5, r6, lr}
   11ac4:	mov	r6, r0
   11ac8:	ldr	r0, [r1]
   11acc:	cmp	r0, #0
   11ad0:	beq	11b08 <close@plt+0xba4>
   11ad4:	mov	r4, r1
   11ad8:	mov	r5, #0
   11adc:	b	11af0 <close@plt+0xb8c>
   11ae0:	ldr	r0, [r4, #4]!
   11ae4:	add	r5, r5, #1
   11ae8:	cmp	r0, #0
   11aec:	beq	11b08 <close@plt+0xba4>
   11af0:	mov	r1, r6
   11af4:	bl	10d18 <strcmp@plt>
   11af8:	cmp	r0, #0
   11afc:	bne	11ae0 <close@plt+0xb7c>
   11b00:	mov	r0, r5
   11b04:	pop	{r4, r5, r6, pc}
   11b08:	mvn	r0, #0
   11b0c:	pop	{r4, r5, r6, pc}
   11b10:	cmn	r2, #1
   11b14:	push	{r4, r5, r6, lr}
   11b18:	mov	r2, #5
   11b1c:	sub	sp, sp, #8
   11b20:	mov	r4, r1
   11b24:	mov	r5, r0
   11b28:	ldreq	r1, [pc, #76]	; 11b7c <close@plt+0xc18>
   11b2c:	ldrne	r1, [pc, #76]	; 11b80 <close@plt+0xc1c>
   11b30:	mov	r0, #0
   11b34:	bl	10da8 <dcgettext@plt>
   11b38:	mov	r2, r4
   11b3c:	mov	r1, #8
   11b40:	mov	r6, r0
   11b44:	mov	r0, #0
   11b48:	bl	14484 <close@plt+0x3520>
   11b4c:	mov	r1, r5
   11b50:	mov	r4, r0
   11b54:	mov	r0, #1
   11b58:	bl	16020 <close@plt+0x50bc>
   11b5c:	mov	r1, #0
   11b60:	mov	r3, r4
   11b64:	mov	r2, r6
   11b68:	str	r0, [sp]
   11b6c:	mov	r0, r1
   11b70:	bl	10e14 <error@plt>
   11b74:	add	sp, sp, #8
   11b78:	pop	{r4, r5, r6, pc}
   11b7c:	andeq	r8, r1, r0, lsl r5
   11b80:	andeq	r8, r1, ip, lsr #10
   11b84:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b88:	mov	r6, r0
   11b8c:	ldr	r9, [pc, #232]	; 11c7c <close@plt+0xd18>
   11b90:	mov	r4, r1
   11b94:	mov	r7, r2
   11b98:	ldr	r1, [pc, #224]	; 11c80 <close@plt+0xd1c>
   11b9c:	mov	r2, #5
   11ba0:	mov	r0, #0
   11ba4:	bl	10da8 <dcgettext@plt>
   11ba8:	ldr	r1, [r9]
   11bac:	bl	10d00 <fputs_unlocked@plt>
   11bb0:	ldr	fp, [r6]
   11bb4:	cmp	fp, #0
   11bb8:	movne	r8, #0
   11bbc:	movne	r5, r8
   11bc0:	movne	sl, #1
   11bc4:	bne	11c04 <close@plt+0xca0>
   11bc8:	b	11c48 <close@plt+0xce4>
   11bcc:	mov	r0, fp
   11bd0:	ldr	r8, [r9]
   11bd4:	bl	161d4 <close@plt+0x5270>
   11bd8:	ldr	r2, [pc, #164]	; 11c84 <close@plt+0xd20>
   11bdc:	mov	r1, sl
   11be0:	mov	r3, r0
   11be4:	mov	r0, r8
   11be8:	bl	10ec8 <__fprintf_chk@plt>
   11bec:	mov	r8, r4
   11bf0:	ldr	fp, [r6, #4]!
   11bf4:	add	r5, r5, #1
   11bf8:	cmp	fp, #0
   11bfc:	add	r4, r4, r7
   11c00:	beq	11c48 <close@plt+0xce4>
   11c04:	cmp	r5, #0
   11c08:	mov	r1, r4
   11c0c:	mov	r2, r7
   11c10:	mov	r0, r8
   11c14:	beq	11bcc <close@plt+0xc68>
   11c18:	bl	10d90 <memcmp@plt>
   11c1c:	cmp	r0, #0
   11c20:	bne	11bcc <close@plt+0xc68>
   11c24:	mov	r0, fp
   11c28:	ldr	fp, [r9]
   11c2c:	bl	161d4 <close@plt+0x5270>
   11c30:	ldr	r2, [pc, #80]	; 11c88 <close@plt+0xd24>
   11c34:	mov	r1, sl
   11c38:	mov	r3, r0
   11c3c:	mov	r0, fp
   11c40:	bl	10ec8 <__fprintf_chk@plt>
   11c44:	b	11bf0 <close@plt+0xc8c>
   11c48:	ldr	r0, [r9]
   11c4c:	ldr	r3, [r0, #20]
   11c50:	ldr	r2, [r0, #24]
   11c54:	cmp	r3, r2
   11c58:	bcs	11c70 <close@plt+0xd0c>
   11c5c:	add	r1, r3, #1
   11c60:	mov	r2, #10
   11c64:	str	r1, [r0, #20]
   11c68:	strb	r2, [r3]
   11c6c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c70:	mov	r1, #10
   11c74:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c78:	b	10ef8 <__overflow@plt>
   11c7c:	andeq	r9, r2, r0, asr r1
   11c80:	andeq	r8, r1, ip, asr #10
   11c84:	andeq	r8, r1, r4, ror #10
   11c88:	andeq	r8, r1, ip, ror #10
   11c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c90:	sub	sp, sp, #36	; 0x24
   11c94:	mov	r6, r1
   11c98:	ldrb	ip, [sp, #80]	; 0x50
   11c9c:	str	r0, [sp, #28]
   11ca0:	str	r2, [sp, #24]
   11ca4:	cmp	ip, #0
   11ca8:	str	ip, [sp, #20]
   11cac:	str	r3, [sp, #12]
   11cb0:	ldr	r7, [sp, #72]	; 0x48
   11cb4:	bne	11d6c <close@plt+0xe08>
   11cb8:	ldr	r0, [r2]
   11cbc:	cmp	r0, #0
   11cc0:	movne	sl, ip
   11cc4:	movne	r4, r2
   11cc8:	bne	11d50 <close@plt+0xdec>
   11ccc:	mov	r2, #5
   11cd0:	ldr	r1, [pc, #512]	; 11ed8 <close@plt+0xf74>
   11cd4:	mov	r0, #0
   11cd8:	bl	10da8 <dcgettext@plt>
   11cdc:	mov	r4, r0
   11ce0:	mov	r2, r6
   11ce4:	mov	r1, #8
   11ce8:	mov	r0, #0
   11cec:	bl	14484 <close@plt+0x3520>
   11cf0:	ldr	r1, [sp, #28]
   11cf4:	mvn	sl, #0
   11cf8:	mov	r5, r0
   11cfc:	mov	r0, #1
   11d00:	bl	16020 <close@plt+0x50bc>
   11d04:	mov	r1, #0
   11d08:	mov	r3, r5
   11d0c:	mov	r2, r4
   11d10:	str	r0, [sp]
   11d14:	mov	r0, r1
   11d18:	bl	10e14 <error@plt>
   11d1c:	ldr	r0, [sp, #24]
   11d20:	mov	r2, r7
   11d24:	ldr	r1, [sp, #12]
   11d28:	bl	11b84 <close@plt+0xc20>
   11d2c:	ldr	r3, [sp, #76]	; 0x4c
   11d30:	blx	r3
   11d34:	mov	r0, sl
   11d38:	add	sp, sp, #36	; 0x24
   11d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d40:	ldr	r0, [r4, #4]!
   11d44:	add	sl, sl, #1
   11d48:	cmp	r0, #0
   11d4c:	beq	11ccc <close@plt+0xd68>
   11d50:	mov	r1, r6
   11d54:	bl	10d18 <strcmp@plt>
   11d58:	cmp	r0, #0
   11d5c:	bne	11d40 <close@plt+0xddc>
   11d60:	mov	r0, sl
   11d64:	add	sp, sp, #36	; 0x24
   11d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d6c:	mov	r0, r1
   11d70:	bl	10e74 <strlen@plt>
   11d74:	ldr	r3, [sp, #24]
   11d78:	ldr	fp, [r3]
   11d7c:	cmp	fp, #0
   11d80:	mov	r9, r0
   11d84:	beq	11ccc <close@plt+0xd68>
   11d88:	ldr	r2, [sp, #12]
   11d8c:	cmp	r2, #0
   11d90:	beq	11e4c <close@plt+0xee8>
   11d94:	mov	r1, #0
   11d98:	mov	r4, r1
   11d9c:	mov	r8, r3
   11da0:	mov	r5, r2
   11da4:	mvn	sl, #0
   11da8:	str	r1, [sp, #16]
   11dac:	mov	r2, r9
   11db0:	mov	r1, r6
   11db4:	mov	r0, fp
   11db8:	bl	10f4c <strncmp@plt>
   11dbc:	cmp	r0, #0
   11dc0:	mov	r0, fp
   11dc4:	bne	11e08 <close@plt+0xea4>
   11dc8:	bl	10e74 <strlen@plt>
   11dcc:	ldr	r3, [sp, #12]
   11dd0:	mov	r2, r7
   11dd4:	mov	r1, r5
   11dd8:	cmp	r9, r0
   11ddc:	mla	r0, r7, sl, r3
   11de0:	beq	11e3c <close@plt+0xed8>
   11de4:	cmn	sl, #1
   11de8:	moveq	sl, r4
   11dec:	beq	11e08 <close@plt+0xea4>
   11df0:	bl	10d90 <memcmp@plt>
   11df4:	ldr	r2, [sp, #20]
   11df8:	ldr	r3, [sp, #16]
   11dfc:	cmp	r0, #0
   11e00:	movne	r3, r2
   11e04:	str	r3, [sp, #16]
   11e08:	ldr	fp, [r8, #4]!
   11e0c:	add	r4, r4, #1
   11e10:	cmp	fp, #0
   11e14:	add	r5, r5, r7
   11e18:	bne	11dac <close@plt+0xe48>
   11e1c:	ldr	r3, [sp, #16]
   11e20:	cmp	r3, #0
   11e24:	bne	11ec0 <close@plt+0xf5c>
   11e28:	cmn	sl, #1
   11e2c:	beq	11ccc <close@plt+0xd68>
   11e30:	mov	r0, sl
   11e34:	add	sp, sp, #36	; 0x24
   11e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e3c:	mov	sl, r4
   11e40:	mov	r0, sl
   11e44:	add	sp, sp, #36	; 0x24
   11e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e4c:	mov	r5, r3
   11e50:	ldr	r3, [sp, #12]
   11e54:	str	r7, [sp, #72]	; 0x48
   11e58:	mov	r7, fp
   11e5c:	ldr	fp, [sp, #20]
   11e60:	mov	r8, r3
   11e64:	mvn	sl, #0
   11e68:	mov	r4, r3
   11e6c:	mov	r2, r9
   11e70:	mov	r1, r6
   11e74:	mov	r0, r7
   11e78:	bl	10f4c <strncmp@plt>
   11e7c:	cmp	r0, #0
   11e80:	mov	r0, r7
   11e84:	bne	11ea0 <close@plt+0xf3c>
   11e88:	bl	10e74 <strlen@plt>
   11e8c:	cmp	r9, r0
   11e90:	beq	11e3c <close@plt+0xed8>
   11e94:	cmn	sl, #1
   11e98:	moveq	sl, r4
   11e9c:	movne	r8, fp
   11ea0:	ldr	r7, [r5, #4]!
   11ea4:	add	r4, r4, #1
   11ea8:	cmp	r7, #0
   11eac:	bne	11e6c <close@plt+0xf08>
   11eb0:	str	r8, [sp, #16]
   11eb4:	ldr	r7, [sp, #72]	; 0x48
   11eb8:	mov	r3, r8
   11ebc:	b	11e20 <close@plt+0xebc>
   11ec0:	mov	r2, #5
   11ec4:	ldr	r1, [pc, #16]	; 11edc <close@plt+0xf78>
   11ec8:	mov	r0, #0
   11ecc:	bl	10da8 <dcgettext@plt>
   11ed0:	mov	r4, r0
   11ed4:	b	11ce0 <close@plt+0xd7c>
   11ed8:	andeq	r8, r1, r0, lsl r5
   11edc:	andeq	r8, r1, ip, lsr #10
   11ee0:	push	{r4, r5, r6, r7, r8, lr}
   11ee4:	ldr	r7, [r1]
   11ee8:	cmp	r7, #0
   11eec:	beq	11f2c <close@plt+0xfc8>
   11ef0:	mov	r6, r3
   11ef4:	mov	r8, r0
   11ef8:	mov	r4, r2
   11efc:	mov	r5, r1
   11f00:	b	11f10 <close@plt+0xfac>
   11f04:	ldr	r7, [r5, #4]!
   11f08:	cmp	r7, #0
   11f0c:	beq	11f2c <close@plt+0xfc8>
   11f10:	mov	r1, r4
   11f14:	mov	r2, r6
   11f18:	mov	r0, r8
   11f1c:	bl	10d90 <memcmp@plt>
   11f20:	add	r4, r4, r6
   11f24:	cmp	r0, #0
   11f28:	bne	11f04 <close@plt+0xfa0>
   11f2c:	mov	r0, r7
   11f30:	pop	{r4, r5, r6, r7, r8, pc}
   11f34:	ldr	r3, [pc, #4]	; 11f40 <close@plt+0xfdc>
   11f38:	str	r0, [r3]
   11f3c:	bx	lr
   11f40:	andeq	r9, r2, r4, ror r1
   11f44:	ldr	r3, [pc, #4]	; 11f50 <close@plt+0xfec>
   11f48:	strb	r0, [r3, #4]
   11f4c:	bx	lr
   11f50:	andeq	r9, r2, r4, ror r1
   11f54:	ldr	r3, [pc, #192]	; 1201c <close@plt+0x10b8>
   11f58:	push	{r4, r5, r6, lr}
   11f5c:	sub	sp, sp, #8
   11f60:	ldr	r0, [r3]
   11f64:	bl	174f4 <close@plt+0x6590>
   11f68:	cmp	r0, #0
   11f6c:	beq	11f90 <close@plt+0x102c>
   11f70:	ldr	r4, [pc, #168]	; 12020 <close@plt+0x10bc>
   11f74:	ldrb	r3, [r4, #4]
   11f78:	cmp	r3, #0
   11f7c:	beq	11fac <close@plt+0x1048>
   11f80:	bl	10e80 <__errno_location@plt>
   11f84:	ldr	r3, [r0]
   11f88:	cmp	r3, #32
   11f8c:	bne	11fac <close@plt+0x1048>
   11f90:	ldr	r3, [pc, #140]	; 12024 <close@plt+0x10c0>
   11f94:	ldr	r0, [r3]
   11f98:	bl	174f4 <close@plt+0x6590>
   11f9c:	cmp	r0, #0
   11fa0:	bne	11ff4 <close@plt+0x1090>
   11fa4:	add	sp, sp, #8
   11fa8:	pop	{r4, r5, r6, pc}
   11fac:	mov	r2, #5
   11fb0:	ldr	r1, [pc, #112]	; 12028 <close@plt+0x10c4>
   11fb4:	mov	r0, #0
   11fb8:	bl	10da8 <dcgettext@plt>
   11fbc:	ldr	r4, [r4]
   11fc0:	cmp	r4, #0
   11fc4:	mov	r5, r0
   11fc8:	beq	12000 <close@plt+0x109c>
   11fcc:	bl	10e80 <__errno_location@plt>
   11fd0:	ldr	r6, [r0]
   11fd4:	mov	r0, r4
   11fd8:	bl	14f74 <close@plt+0x4010>
   11fdc:	mov	r1, r6
   11fe0:	str	r5, [sp]
   11fe4:	ldr	r2, [pc, #64]	; 1202c <close@plt+0x10c8>
   11fe8:	mov	r3, r0
   11fec:	mov	r0, #0
   11ff0:	bl	10e14 <error@plt>
   11ff4:	ldr	r3, [pc, #52]	; 12030 <close@plt+0x10cc>
   11ff8:	ldr	r0, [r3]
   11ffc:	bl	10d54 <_exit@plt>
   12000:	bl	10e80 <__errno_location@plt>
   12004:	mov	r3, r5
   12008:	ldr	r2, [pc, #36]	; 12034 <close@plt+0x10d0>
   1200c:	ldr	r1, [r0]
   12010:	mov	r0, r4
   12014:	bl	10e14 <error@plt>
   12018:	b	11ff4 <close@plt+0x1090>
   1201c:	andeq	r9, r2, ip, asr r1
   12020:	andeq	r9, r2, r4, ror r1
   12024:	andeq	r9, r2, r0, asr r1
   12028:	andeq	r8, r1, r4, ror r5
   1202c:	andeq	r8, r1, r0, lsl #11
   12030:	strdeq	r9, [r2], -r8
   12034:	andeq	r8, r1, r4, lsl #11
   12038:	push	{r4, r5}
   1203c:	pop	{r4, r5}
   12040:	b	10d24 <posix_fadvise64@plt>
   12044:	cmp	r0, #0
   12048:	bxeq	lr
   1204c:	push	{r4, lr}
   12050:	sub	sp, sp, #16
   12054:	mov	r4, r1
   12058:	bl	10ebc <fileno@plt>
   1205c:	mov	r2, #0
   12060:	mov	r3, #0
   12064:	str	r4, [sp, #8]
   12068:	strd	r2, [sp]
   1206c:	bl	10d24 <posix_fadvise64@plt>
   12070:	add	sp, sp, #16
   12074:	pop	{r4, pc}
   12078:	push	{r4, r5, lr}
   1207c:	sub	sp, sp, #12
   12080:	mov	r4, r0
   12084:	bl	10ebc <fileno@plt>
   12088:	cmp	r0, #0
   1208c:	mov	r0, r4
   12090:	blt	1210c <close@plt+0x11a8>
   12094:	bl	10e38 <__freading@plt>
   12098:	cmp	r0, #0
   1209c:	bne	120d8 <close@plt+0x1174>
   120a0:	mov	r0, r4
   120a4:	bl	12118 <close@plt+0x11b4>
   120a8:	cmp	r0, #0
   120ac:	beq	12108 <close@plt+0x11a4>
   120b0:	bl	10e80 <__errno_location@plt>
   120b4:	mov	r5, r0
   120b8:	mov	r0, r4
   120bc:	ldr	r4, [r5]
   120c0:	bl	10ed4 <fclose@plt>
   120c4:	cmp	r4, #0
   120c8:	mvnne	r0, #0
   120cc:	strne	r4, [r5]
   120d0:	add	sp, sp, #12
   120d4:	pop	{r4, r5, pc}
   120d8:	mov	r0, r4
   120dc:	bl	10ebc <fileno@plt>
   120e0:	mov	r3, #1
   120e4:	str	r3, [sp]
   120e8:	mov	r2, #0
   120ec:	mov	r3, #0
   120f0:	bl	10de4 <lseek64@plt>
   120f4:	mvn	r3, #0
   120f8:	mvn	r2, #0
   120fc:	cmp	r1, r3
   12100:	cmpeq	r0, r2
   12104:	bne	120a0 <close@plt+0x113c>
   12108:	mov	r0, r4
   1210c:	add	sp, sp, #12
   12110:	pop	{r4, r5, lr}
   12114:	b	10ed4 <fclose@plt>
   12118:	push	{r4, lr}
   1211c:	subs	r4, r0, #0
   12120:	sub	sp, sp, #8
   12124:	beq	12140 <close@plt+0x11dc>
   12128:	bl	10e38 <__freading@plt>
   1212c:	cmp	r0, #0
   12130:	beq	12140 <close@plt+0x11dc>
   12134:	ldr	r3, [r4]
   12138:	tst	r3, #256	; 0x100
   1213c:	bne	12150 <close@plt+0x11ec>
   12140:	mov	r0, r4
   12144:	add	sp, sp, #8
   12148:	pop	{r4, lr}
   1214c:	b	10d3c <fflush@plt>
   12150:	mov	r3, #1
   12154:	str	r3, [sp]
   12158:	mov	r2, #0
   1215c:	mov	r3, #0
   12160:	mov	r0, r4
   12164:	bl	12268 <close@plt+0x1304>
   12168:	mov	r0, r4
   1216c:	add	sp, sp, #8
   12170:	pop	{r4, lr}
   12174:	b	10d3c <fflush@plt>
   12178:	push	{r4, r5, r6, lr}
   1217c:	mov	r5, r1
   12180:	bl	10f34 <fopen64@plt>
   12184:	subs	r4, r0, #0
   12188:	beq	12198 <close@plt+0x1234>
   1218c:	bl	10ebc <fileno@plt>
   12190:	cmp	r0, #2
   12194:	bls	121a0 <close@plt+0x123c>
   12198:	mov	r0, r4
   1219c:	pop	{r4, r5, r6, pc}
   121a0:	bl	16354 <close@plt+0x53f0>
   121a4:	subs	r6, r0, #0
   121a8:	blt	121f0 <close@plt+0x128c>
   121ac:	mov	r0, r4
   121b0:	bl	12078 <close@plt+0x1114>
   121b4:	cmp	r0, #0
   121b8:	bne	121d0 <close@plt+0x126c>
   121bc:	mov	r1, r5
   121c0:	mov	r0, r6
   121c4:	bl	10ce8 <fdopen@plt>
   121c8:	subs	r4, r0, #0
   121cc:	bne	12198 <close@plt+0x1234>
   121d0:	bl	10e80 <__errno_location@plt>
   121d4:	mov	r4, #0
   121d8:	mov	r5, r0
   121dc:	mov	r0, r6
   121e0:	ldr	r6, [r5]
   121e4:	bl	10f64 <close@plt>
   121e8:	str	r6, [r5]
   121ec:	b	12198 <close@plt+0x1234>
   121f0:	bl	10e80 <__errno_location@plt>
   121f4:	mov	r5, r0
   121f8:	mov	r0, r4
   121fc:	ldr	r6, [r5]
   12200:	mov	r4, #0
   12204:	bl	12078 <close@plt+0x1114>
   12208:	str	r6, [r5]
   1220c:	b	12198 <close@plt+0x1234>
   12210:	push	{r4, r5, lr}
   12214:	sub	sp, sp, #12
   12218:	mov	r5, r0
   1221c:	bl	10e80 <__errno_location@plt>
   12220:	mov	r2, #0
   12224:	mov	r4, r0
   12228:	ldr	r3, [r0]
   1222c:	str	r2, [r4]
   12230:	mov	r0, r5
   12234:	str	r3, [sp]
   12238:	str	r3, [sp, #4]
   1223c:	bl	10d48 <free@plt>
   12240:	ldr	r3, [r4]
   12244:	add	r2, sp, #8
   12248:	cmp	r3, #0
   1224c:	moveq	r3, #4
   12250:	movne	r3, #0
   12254:	add	r3, r2, r3
   12258:	ldr	r3, [r3, #-8]
   1225c:	str	r3, [r4]
   12260:	add	sp, sp, #12
   12264:	pop	{r4, r5, pc}
   12268:	push	{r4, r5, r6, r7, r8, lr}
   1226c:	sub	sp, sp, #8
   12270:	ldmib	r0, {ip, lr}
   12274:	mov	r4, r0
   12278:	ldr	r5, [sp, #32]
   1227c:	cmp	lr, ip
   12280:	beq	12298 <close@plt+0x1334>
   12284:	str	r5, [sp, #32]
   12288:	mov	r0, r4
   1228c:	add	sp, sp, #8
   12290:	pop	{r4, r5, r6, r7, r8, lr}
   12294:	b	10ee0 <fseeko64@plt>
   12298:	ldr	lr, [r0, #20]
   1229c:	ldr	ip, [r0, #16]
   122a0:	cmp	lr, ip
   122a4:	bne	12284 <close@plt+0x1320>
   122a8:	ldr	r8, [r0, #36]	; 0x24
   122ac:	cmp	r8, #0
   122b0:	bne	12284 <close@plt+0x1320>
   122b4:	mov	r6, r2
   122b8:	mov	r7, r3
   122bc:	bl	10ebc <fileno@plt>
   122c0:	mov	r2, r6
   122c4:	mov	r3, r7
   122c8:	str	r5, [sp]
   122cc:	bl	10de4 <lseek64@plt>
   122d0:	mvn	r3, #0
   122d4:	mvn	r2, #0
   122d8:	cmp	r1, r3
   122dc:	cmpeq	r0, r2
   122e0:	beq	12300 <close@plt+0x139c>
   122e4:	ldr	r3, [r4]
   122e8:	strd	r0, [r4, #80]	; 0x50
   122ec:	mov	r0, r8
   122f0:	bic	r3, r3, #16
   122f4:	str	r3, [r4]
   122f8:	add	sp, sp, #8
   122fc:	pop	{r4, r5, r6, r7, r8, pc}
   12300:	mvn	r0, #0
   12304:	b	122f8 <close@plt+0x1394>
   12308:	push	{r4, r5, r6, lr}
   1230c:	subs	r4, r0, #0
   12310:	beq	12384 <close@plt+0x1420>
   12314:	mov	r1, #47	; 0x2f
   12318:	bl	10f10 <strrchr@plt>
   1231c:	subs	r5, r0, #0
   12320:	beq	12370 <close@plt+0x140c>
   12324:	add	r6, r5, #1
   12328:	sub	r3, r6, r4
   1232c:	cmp	r3, #6
   12330:	ble	12370 <close@plt+0x140c>
   12334:	mov	r2, #7
   12338:	ldr	r1, [pc, #96]	; 123a0 <close@plt+0x143c>
   1233c:	sub	r0, r5, #6
   12340:	bl	10f4c <strncmp@plt>
   12344:	cmp	r0, #0
   12348:	bne	12370 <close@plt+0x140c>
   1234c:	mov	r2, #3
   12350:	ldr	r1, [pc, #76]	; 123a4 <close@plt+0x1440>
   12354:	mov	r0, r6
   12358:	bl	10f4c <strncmp@plt>
   1235c:	cmp	r0, #0
   12360:	movne	r4, r6
   12364:	ldreq	r3, [pc, #60]	; 123a8 <close@plt+0x1444>
   12368:	addeq	r4, r5, #4
   1236c:	streq	r4, [r3]
   12370:	ldr	r2, [pc, #52]	; 123ac <close@plt+0x1448>
   12374:	ldr	r3, [pc, #52]	; 123b0 <close@plt+0x144c>
   12378:	str	r4, [r2]
   1237c:	str	r4, [r3]
   12380:	pop	{r4, r5, r6, pc}
   12384:	ldr	r3, [pc, #40]	; 123b4 <close@plt+0x1450>
   12388:	mov	r2, #55	; 0x37
   1238c:	mov	r1, #1
   12390:	ldr	r3, [r3]
   12394:	ldr	r0, [pc, #28]	; 123b8 <close@plt+0x1454>
   12398:	bl	10dd8 <fwrite@plt>
   1239c:	bl	10f58 <abort@plt>
   123a0:	andeq	r8, r1, r0, asr #11
   123a4:	andeq	r8, r1, r8, asr #11
   123a8:	andeq	r9, r2, r0, asr #2
   123ac:	andeq	r9, r2, ip, ror r1
   123b0:	andeq	r9, r2, r4, asr #2
   123b4:	andeq	r9, r2, r0, asr r1
   123b8:	andeq	r8, r1, r8, lsl #11
   123bc:	push	{r4, r5, r6, lr}
   123c0:	mov	r4, r0
   123c4:	mov	r5, r1
   123c8:	bl	17744 <close@plt+0x67e0>
   123cc:	ldrb	r3, [r0]
   123d0:	bic	r3, r3, #32
   123d4:	cmp	r3, #85	; 0x55
   123d8:	bne	12438 <close@plt+0x14d4>
   123dc:	ldrb	r3, [r0, #1]
   123e0:	bic	r3, r3, #32
   123e4:	cmp	r3, #84	; 0x54
   123e8:	bne	12474 <close@plt+0x1510>
   123ec:	ldrb	r3, [r0, #2]
   123f0:	bic	r3, r3, #32
   123f4:	cmp	r3, #70	; 0x46
   123f8:	bne	12474 <close@plt+0x1510>
   123fc:	ldrb	r3, [r0, #3]
   12400:	cmp	r3, #45	; 0x2d
   12404:	bne	12474 <close@plt+0x1510>
   12408:	ldrb	r3, [r0, #4]
   1240c:	cmp	r3, #56	; 0x38
   12410:	bne	12474 <close@plt+0x1510>
   12414:	ldrb	r3, [r0, #5]
   12418:	cmp	r3, #0
   1241c:	bne	12474 <close@plt+0x1510>
   12420:	ldrb	r2, [r4]
   12424:	ldr	r3, [pc, #152]	; 124c4 <close@plt+0x1560>
   12428:	ldr	r0, [pc, #152]	; 124c8 <close@plt+0x1564>
   1242c:	cmp	r2, #96	; 0x60
   12430:	movne	r0, r3
   12434:	pop	{r4, r5, r6, pc}
   12438:	cmp	r3, #71	; 0x47
   1243c:	bne	12474 <close@plt+0x1510>
   12440:	ldrb	r3, [r0, #1]
   12444:	bic	r3, r3, #32
   12448:	cmp	r3, #66	; 0x42
   1244c:	bne	12474 <close@plt+0x1510>
   12450:	ldrb	r3, [r0, #2]
   12454:	cmp	r3, #49	; 0x31
   12458:	bne	12474 <close@plt+0x1510>
   1245c:	ldrb	r3, [r0, #3]
   12460:	cmp	r3, #56	; 0x38
   12464:	bne	12474 <close@plt+0x1510>
   12468:	ldrb	r3, [r0, #4]
   1246c:	cmp	r3, #48	; 0x30
   12470:	beq	12488 <close@plt+0x1524>
   12474:	ldr	r3, [pc, #80]	; 124cc <close@plt+0x1568>
   12478:	cmp	r5, #9
   1247c:	ldr	r0, [pc, #76]	; 124d0 <close@plt+0x156c>
   12480:	movne	r0, r3
   12484:	pop	{r4, r5, r6, pc}
   12488:	ldrb	r3, [r0, #5]
   1248c:	cmp	r3, #51	; 0x33
   12490:	bne	12474 <close@plt+0x1510>
   12494:	ldrb	r3, [r0, #6]
   12498:	cmp	r3, #48	; 0x30
   1249c:	bne	12474 <close@plt+0x1510>
   124a0:	ldrb	r3, [r0, #7]
   124a4:	cmp	r3, #0
   124a8:	bne	12474 <close@plt+0x1510>
   124ac:	ldrb	r2, [r4]
   124b0:	ldr	r3, [pc, #28]	; 124d4 <close@plt+0x1570>
   124b4:	ldr	r0, [pc, #28]	; 124d8 <close@plt+0x1574>
   124b8:	cmp	r2, #96	; 0x60
   124bc:	movne	r0, r3
   124c0:	pop	{r4, r5, r6, pc}
   124c4:	andeq	r8, r1, r4, lsr #12
   124c8:	andeq	r8, r1, r0, lsr #12
   124cc:	andeq	r8, r1, r4, lsr r6
   124d0:	andeq	r8, r1, r0, lsr r6
   124d4:	andeq	r8, r1, ip, lsr #12
   124d8:	andeq	r8, r1, r8, lsr #12
   124dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124e0:	sub	sp, sp, #140	; 0x8c
   124e4:	mov	r9, r1
   124e8:	str	r3, [sp, #24]
   124ec:	mov	r3, #1
   124f0:	mov	sl, r0
   124f4:	str	r2, [sp, #44]	; 0x2c
   124f8:	str	r3, [sp, #28]
   124fc:	bl	10df0 <__ctype_get_mb_cur_max@plt>
   12500:	ldr	r3, [sp, #180]	; 0xb4
   12504:	mov	fp, r9
   12508:	mov	r9, sl
   1250c:	lsr	r3, r3, #1
   12510:	and	r3, r3, #1
   12514:	str	r3, [sp, #40]	; 0x28
   12518:	ldr	r3, [sp, #180]	; 0xb4
   1251c:	mov	r2, #0
   12520:	and	r3, r3, #4
   12524:	str	r3, [sp, #100]	; 0x64
   12528:	ldr	r3, [sp, #180]	; 0xb4
   1252c:	str	r2, [sp, #76]	; 0x4c
   12530:	and	r3, r3, #1
   12534:	str	r3, [sp, #96]	; 0x60
   12538:	str	r2, [sp, #36]	; 0x24
   1253c:	str	r2, [sp, #56]	; 0x38
   12540:	str	r2, [sp, #68]	; 0x44
   12544:	str	r2, [sp, #72]	; 0x48
   12548:	str	r2, [sp, #84]	; 0x54
   1254c:	str	r0, [sp, #80]	; 0x50
   12550:	ldr	r3, [sp, #176]	; 0xb0
   12554:	cmp	r3, #10
   12558:	ldrls	pc, [pc, r3, lsl #2]
   1255c:	b	13734 <close@plt+0x27d0>
   12560:	andeq	r2, r1, ip, lsl #11
   12564:	andeq	r2, r1, ip, lsr #17
   12568:	andeq	r2, r1, r4, lsl #20
   1256c:	andeq	r2, r1, r0, ror #17
   12570:	andeq	r2, r1, r8, asr sl
   12574:	andeq	r2, r1, r8, lsr sl
   12578:	andeq	r2, r1, r0, lsl #18
   1257c:	andeq	r2, r1, r4, lsr #18
   12580:	andeq	r2, r1, ip, asr #18
   12584:	andeq	r2, r1, ip, asr #18
   12588:	andeq	r2, r1, ip, asr #18
   1258c:	mov	r3, #0
   12590:	ldr	r1, [sp, #56]	; 0x38
   12594:	ldr	r2, [sp, #176]	; 0xb0
   12598:	ldr	lr, [sp, #176]	; 0xb0
   1259c:	mov	r8, r3
   125a0:	mov	ip, r3
   125a4:	str	r3, [sp, #40]	; 0x28
   125a8:	mov	r3, r1
   125ac:	cmp	r2, #2
   125b0:	moveq	r3, #0
   125b4:	andne	r3, r3, #1
   125b8:	mov	r0, r3
   125bc:	str	r3, [sp, #92]	; 0x5c
   125c0:	ldr	r3, [sp, #68]	; 0x44
   125c4:	sub	lr, lr, #2
   125c8:	adds	r2, r3, #0
   125cc:	movne	r2, #1
   125d0:	and	r3, r1, ip
   125d4:	and	r3, r2, r3
   125d8:	clz	lr, lr
   125dc:	str	r3, [sp, #88]	; 0x58
   125e0:	lsr	lr, lr, #5
   125e4:	mov	r3, ip
   125e8:	and	r3, r3, lr
   125ec:	mov	sl, #0
   125f0:	and	r0, r2, r0
   125f4:	str	r3, [sp, #64]	; 0x40
   125f8:	eor	r3, r1, #1
   125fc:	str	lr, [sp, #52]	; 0x34
   12600:	str	r0, [sp, #48]	; 0x30
   12604:	str	r3, [sp, #60]	; 0x3c
   12608:	ldr	r3, [sp, #24]
   1260c:	cmn	r3, #1
   12610:	beq	12b40 <close@plt+0x1bdc>
   12614:	subs	r7, r3, sl
   12618:	movne	r7, #1
   1261c:	cmp	r7, #0
   12620:	beq	12b58 <close@plt+0x1bf4>
   12624:	ldr	r3, [sp, #48]	; 0x30
   12628:	cmp	r3, #0
   1262c:	beq	12ec4 <close@plt+0x1f60>
   12630:	ldr	r2, [sp, #68]	; 0x44
   12634:	ldr	r1, [sp, #24]
   12638:	cmp	r2, #1
   1263c:	mov	r3, r2
   12640:	movls	r3, #0
   12644:	movhi	r3, #1
   12648:	cmn	r1, #1
   1264c:	movne	r3, #0
   12650:	cmp	r3, #0
   12654:	add	r4, sl, r2
   12658:	beq	12668 <close@plt+0x1704>
   1265c:	ldr	r0, [sp, #44]	; 0x2c
   12660:	bl	10e74 <strlen@plt>
   12664:	str	r0, [sp, #24]
   12668:	ldr	r3, [sp, #24]
   1266c:	cmp	r3, r4
   12670:	ldr	r3, [sp, #44]	; 0x2c
   12674:	add	r5, r3, sl
   12678:	bcc	12ecc <close@plt+0x1f68>
   1267c:	mov	r0, r5
   12680:	ldr	r2, [sp, #68]	; 0x44
   12684:	ldr	r1, [sp, #72]	; 0x48
   12688:	bl	10d90 <memcmp@plt>
   1268c:	cmp	r0, #0
   12690:	bne	12ecc <close@plt+0x1f68>
   12694:	ldr	r3, [sp, #40]	; 0x28
   12698:	cmp	r3, #0
   1269c:	bne	13888 <close@plt+0x2924>
   126a0:	ldrb	r4, [r5]
   126a4:	cmp	r4, #126	; 0x7e
   126a8:	ldrls	pc, [pc, r4, lsl #2]
   126ac:	b	137c4 <close@plt+0x2860>
   126b0:	andeq	r2, r1, r4, lsl #27
   126b4:	andeq	r3, r1, r4, asr #15
   126b8:	andeq	r3, r1, r4, asr #15
   126bc:	andeq	r3, r1, r4, asr #15
   126c0:	andeq	r3, r1, r4, asr #15
   126c4:	andeq	r3, r1, r4, asr #15
   126c8:	andeq	r3, r1, r4, asr #15
   126cc:	andeq	r2, r1, r0, ror sp
   126d0:	andeq	r2, r1, ip, asr sp
   126d4:	andeq	r2, r1, r8, lsr sp
   126d8:	andeq	r2, r1, r8, lsl sp
   126dc:	andeq	r2, r1, r8, asr #26
   126e0:	andeq	r2, r1, r0, lsl #25
   126e4:			; <UNDEFINED> instruction: 0x00012eb4
   126e8:	andeq	r3, r1, r4, asr #15
   126ec:	andeq	r3, r1, r4, asr #15
   126f0:	andeq	r3, r1, r4, asr #15
   126f4:	andeq	r3, r1, r4, asr #15
   126f8:	andeq	r3, r1, r4, asr #15
   126fc:	andeq	r3, r1, r4, asr #15
   12700:	andeq	r3, r1, r4, asr #15
   12704:	andeq	r3, r1, r4, asr #15
   12708:	andeq	r3, r1, r4, asr #15
   1270c:	andeq	r3, r1, r4, asr #15
   12710:	andeq	r3, r1, r4, asr #15
   12714:	andeq	r3, r1, r4, asr #15
   12718:	andeq	r3, r1, r4, asr #15
   1271c:	andeq	r3, r1, r4, asr #15
   12720:	andeq	r3, r1, r4, asr #15
   12724:	andeq	r3, r1, r4, asr #15
   12728:	andeq	r3, r1, r4, asr #15
   1272c:	andeq	r3, r1, r4, asr #15
   12730:	andeq	r2, r1, r4, lsr #29
   12734:	andeq	r2, r1, r4, lsl #29
   12738:	andeq	r2, r1, r4, lsl #29
   1273c:	andeq	r2, r1, r4, ror #28
   12740:	andeq	r2, r1, r4, lsl #29
   12744:	andeq	r2, r1, r0, ror ip
   12748:	andeq	r2, r1, r4, lsl #29
   1274c:	andeq	r2, r1, ip, asr #24
   12750:	andeq	r2, r1, r4, lsl #29
   12754:	andeq	r2, r1, r4, lsl #29
   12758:	andeq	r2, r1, r4, lsl #29
   1275c:	andeq	r2, r1, r0, ror ip
   12760:	andeq	r2, r1, r0, ror ip
   12764:	andeq	r2, r1, r0, ror ip
   12768:	andeq	r2, r1, r0, ror ip
   1276c:	andeq	r2, r1, r0, ror ip
   12770:	andeq	r2, r1, r0, ror ip
   12774:	andeq	r2, r1, r0, ror ip
   12778:	andeq	r2, r1, r0, ror ip
   1277c:	andeq	r2, r1, r0, ror ip
   12780:	andeq	r2, r1, r0, ror ip
   12784:	andeq	r2, r1, r0, ror ip
   12788:	andeq	r2, r1, r0, ror ip
   1278c:	andeq	r2, r1, r0, ror ip
   12790:	andeq	r2, r1, r0, ror ip
   12794:	andeq	r2, r1, r0, ror ip
   12798:	andeq	r2, r1, r0, ror ip
   1279c:	andeq	r2, r1, r4, lsl #29
   127a0:	andeq	r2, r1, r4, lsl #29
   127a4:	andeq	r2, r1, r4, lsl #29
   127a8:	andeq	r2, r1, r4, lsl #29
   127ac:	strdeq	r2, [r1], -ip
   127b0:	andeq	r3, r1, r4, asr #15
   127b4:	andeq	r2, r1, r0, ror ip
   127b8:	andeq	r2, r1, r0, ror ip
   127bc:	andeq	r2, r1, r0, ror ip
   127c0:	andeq	r2, r1, r0, ror ip
   127c4:	andeq	r2, r1, r0, ror ip
   127c8:	andeq	r2, r1, r0, ror ip
   127cc:	andeq	r2, r1, r0, ror ip
   127d0:	andeq	r2, r1, r0, ror ip
   127d4:	andeq	r2, r1, r0, ror ip
   127d8:	andeq	r2, r1, r0, ror ip
   127dc:	andeq	r2, r1, r0, ror ip
   127e0:	andeq	r2, r1, r0, ror ip
   127e4:	andeq	r2, r1, r0, ror ip
   127e8:	andeq	r2, r1, r0, ror ip
   127ec:	andeq	r2, r1, r0, ror ip
   127f0:	andeq	r2, r1, r0, ror ip
   127f4:	andeq	r2, r1, r0, ror ip
   127f8:	andeq	r2, r1, r0, ror ip
   127fc:	andeq	r2, r1, r0, ror ip
   12800:	andeq	r2, r1, r0, ror ip
   12804:	andeq	r2, r1, r0, ror ip
   12808:	andeq	r2, r1, r0, ror ip
   1280c:	andeq	r2, r1, r0, ror ip
   12810:	andeq	r2, r1, r0, ror ip
   12814:	andeq	r2, r1, r0, ror ip
   12818:	andeq	r2, r1, r0, ror ip
   1281c:	andeq	r2, r1, r4, lsl #29
   12820:	andeq	r2, r1, r8, asr #23
   12824:	andeq	r2, r1, r0, ror ip
   12828:	andeq	r2, r1, r4, lsl #29
   1282c:	andeq	r2, r1, r0, ror ip
   12830:	andeq	r2, r1, r4, lsl #29
   12834:	andeq	r2, r1, r0, ror ip
   12838:	andeq	r2, r1, r0, ror ip
   1283c:	andeq	r2, r1, r0, ror ip
   12840:	andeq	r2, r1, r0, ror ip
   12844:	andeq	r2, r1, r0, ror ip
   12848:	andeq	r2, r1, r0, ror ip
   1284c:	andeq	r2, r1, r0, ror ip
   12850:	andeq	r2, r1, r0, ror ip
   12854:	andeq	r2, r1, r0, ror ip
   12858:	andeq	r2, r1, r0, ror ip
   1285c:	andeq	r2, r1, r0, ror ip
   12860:	andeq	r2, r1, r0, ror ip
   12864:	andeq	r2, r1, r0, ror ip
   12868:	andeq	r2, r1, r0, ror ip
   1286c:	andeq	r2, r1, r0, ror ip
   12870:	andeq	r2, r1, r0, ror ip
   12874:	andeq	r2, r1, r0, ror ip
   12878:	andeq	r2, r1, r0, ror ip
   1287c:	andeq	r2, r1, r0, ror ip
   12880:	andeq	r2, r1, r0, ror ip
   12884:	andeq	r2, r1, r0, ror ip
   12888:	andeq	r2, r1, r0, ror ip
   1288c:	andeq	r2, r1, r0, ror ip
   12890:	andeq	r2, r1, r0, ror ip
   12894:	andeq	r2, r1, r0, ror ip
   12898:	andeq	r2, r1, r0, ror ip
   1289c:	andeq	r2, r1, r0, lsl #21
   128a0:	andeq	r2, r1, r4, lsl #29
   128a4:	andeq	r2, r1, r0, lsl #21
   128a8:	andeq	r2, r1, r4, ror #28
   128ac:	mov	r3, #1
   128b0:	str	r3, [sp, #40]	; 0x28
   128b4:	str	r3, [sp, #68]	; 0x44
   128b8:	mov	r8, #0
   128bc:	ldr	r3, [pc, #4056]	; 1389c <close@plt+0x2938>
   128c0:	str	r3, [sp, #72]	; 0x48
   128c4:	mov	r3, #2
   128c8:	str	r3, [sp, #176]	; 0xb0
   128cc:	ldr	r1, [sp, #56]	; 0x38
   128d0:	mov	r2, r3
   128d4:	ldr	ip, [sp, #40]	; 0x28
   128d8:	mov	lr, r3
   128dc:	b	125a8 <close@plt+0x1644>
   128e0:	mov	r3, #1
   128e4:	str	r3, [sp, #56]	; 0x38
   128e8:	str	r3, [sp, #68]	; 0x44
   128ec:	str	r3, [sp, #40]	; 0x28
   128f0:	ldr	r3, [pc, #4004]	; 1389c <close@plt+0x2938>
   128f4:	mov	r8, #0
   128f8:	str	r3, [sp, #72]	; 0x48
   128fc:	b	128c4 <close@plt+0x1960>
   12900:	mov	r3, #1
   12904:	str	r3, [sp, #56]	; 0x38
   12908:	str	r3, [sp, #68]	; 0x44
   1290c:	str	r3, [sp, #40]	; 0x28
   12910:	ldr	r3, [pc, #3976]	; 138a0 <close@plt+0x293c>
   12914:	mov	r8, #0
   12918:	str	r3, [sp, #72]	; 0x48
   1291c:	mov	r3, #5
   12920:	b	128c8 <close@plt+0x1964>
   12924:	mov	r3, #0
   12928:	str	r3, [sp, #40]	; 0x28
   1292c:	mov	r3, #1
   12930:	str	r3, [sp, #56]	; 0x38
   12934:	mov	r8, #0
   12938:	mov	r1, r3
   1293c:	ldr	r2, [sp, #176]	; 0xb0
   12940:	ldr	ip, [sp, #40]	; 0x28
   12944:	ldr	lr, [sp, #176]	; 0xb0
   12948:	b	125a8 <close@plt+0x1644>
   1294c:	ldr	r3, [sp, #176]	; 0xb0
   12950:	cmp	r3, #10
   12954:	beq	12998 <close@plt+0x1a34>
   12958:	mov	r2, #5
   1295c:	ldr	r1, [pc, #3904]	; 138a4 <close@plt+0x2940>
   12960:	mov	r0, #0
   12964:	bl	10da8 <dcgettext@plt>
   12968:	ldr	r2, [pc, #3892]	; 138a4 <close@plt+0x2940>
   1296c:	cmp	r0, r2
   12970:	str	r0, [sp, #188]	; 0xbc
   12974:	beq	13a30 <close@plt+0x2acc>
   12978:	mov	r2, #5
   1297c:	ldr	r1, [pc, #3864]	; 1389c <close@plt+0x2938>
   12980:	mov	r0, #0
   12984:	bl	10da8 <dcgettext@plt>
   12988:	ldr	r2, [pc, #3852]	; 1389c <close@plt+0x2938>
   1298c:	cmp	r0, r2
   12990:	str	r0, [sp, #192]	; 0xc0
   12994:	beq	13a20 <close@plt+0x2abc>
   12998:	ldr	r8, [sp, #40]	; 0x28
   1299c:	cmp	r8, #0
   129a0:	movne	r8, #0
   129a4:	bne	129d4 <close@plt+0x1a70>
   129a8:	ldr	r3, [sp, #188]	; 0xbc
   129ac:	ldrb	r3, [r3]
   129b0:	cmp	r3, #0
   129b4:	beq	129d4 <close@plt+0x1a70>
   129b8:	ldr	r2, [sp, #188]	; 0xbc
   129bc:	cmp	fp, r8
   129c0:	strbhi	r3, [r9, r8]
   129c4:	ldrb	r3, [r2, #1]!
   129c8:	add	r8, r8, #1
   129cc:	cmp	r3, #0
   129d0:	bne	129bc <close@plt+0x1a58>
   129d4:	ldr	r0, [sp, #192]	; 0xc0
   129d8:	bl	10e74 <strlen@plt>
   129dc:	ldr	r3, [sp, #192]	; 0xc0
   129e0:	ldr	r2, [sp, #176]	; 0xb0
   129e4:	str	r3, [sp, #72]	; 0x48
   129e8:	mov	r3, #1
   129ec:	str	r3, [sp, #56]	; 0x38
   129f0:	mov	r1, r3
   129f4:	ldr	ip, [sp, #40]	; 0x28
   129f8:	ldr	lr, [sp, #176]	; 0xb0
   129fc:	str	r0, [sp, #68]	; 0x44
   12a00:	b	125a8 <close@plt+0x1644>
   12a04:	ldr	r3, [sp, #40]	; 0x28
   12a08:	cmp	r3, #0
   12a0c:	beq	136b4 <close@plt+0x2750>
   12a10:	mov	r3, #1
   12a14:	str	r3, [sp, #68]	; 0x44
   12a18:	ldr	r3, [pc, #3708]	; 1389c <close@plt+0x2938>
   12a1c:	str	r3, [sp, #72]	; 0x48
   12a20:	mov	r8, #0
   12a24:	ldr	r1, [sp, #56]	; 0x38
   12a28:	ldr	r2, [sp, #176]	; 0xb0
   12a2c:	ldr	ip, [sp, #40]	; 0x28
   12a30:	ldr	lr, [sp, #176]	; 0xb0
   12a34:	b	125a8 <close@plt+0x1644>
   12a38:	ldr	r3, [sp, #40]	; 0x28
   12a3c:	cmp	r3, #0
   12a40:	beq	13738 <close@plt+0x27d4>
   12a44:	str	r3, [sp, #56]	; 0x38
   12a48:	mov	r3, #1
   12a4c:	str	r3, [sp, #68]	; 0x44
   12a50:	ldr	r3, [pc, #3656]	; 138a0 <close@plt+0x293c>
   12a54:	b	12a1c <close@plt+0x1ab8>
   12a58:	ldr	r3, [sp, #40]	; 0x28
   12a5c:	cmp	r3, #0
   12a60:	mov	r3, #1
   12a64:	streq	r3, [sp, #56]	; 0x38
   12a68:	beq	136b4 <close@plt+0x2750>
   12a6c:	str	r3, [sp, #68]	; 0x44
   12a70:	ldr	r3, [pc, #3620]	; 1389c <close@plt+0x2938>
   12a74:	mov	r8, #0
   12a78:	str	r3, [sp, #72]	; 0x48
   12a7c:	b	128c4 <close@plt+0x1960>
   12a80:	ldr	r3, [sp, #24]
   12a84:	ldr	r6, [sp, #48]	; 0x30
   12a88:	cmn	r3, #1
   12a8c:	beq	130e8 <close@plt+0x2184>
   12a90:	subs	r3, r3, #1
   12a94:	movne	r3, #1
   12a98:	cmp	r3, #0
   12a9c:	beq	12e68 <close@plt+0x1f04>
   12aa0:	ldr	r1, [sp, #52]	; 0x34
   12aa4:	mov	r7, r3
   12aa8:	mov	r3, #0
   12aac:	str	r3, [sp, #32]
   12ab0:	ldr	r3, [sp, #60]	; 0x3c
   12ab4:	orr	r2, r1, r3
   12ab8:	ldr	r3, [sp, #40]	; 0x28
   12abc:	eor	r2, r2, #1
   12ac0:	orr	r2, r3, r2
   12ac4:	tst	r2, #255	; 0xff
   12ac8:	bne	133ec <close@plt+0x2488>
   12acc:	cmp	r6, #0
   12ad0:	bne	12cac <close@plt+0x1d48>
   12ad4:	ldr	r3, [sp, #36]	; 0x24
   12ad8:	add	sl, sl, #1
   12adc:	and	r3, r3, r7
   12ae0:	uxtb	r6, r3
   12ae4:	cmp	r6, #0
   12ae8:	beq	12b14 <close@plt+0x1bb0>
   12aec:	cmp	fp, r8
   12af0:	movhi	r3, #39	; 0x27
   12af4:	strbhi	r3, [r9, r8]
   12af8:	add	r3, r8, #1
   12afc:	cmp	fp, r3
   12b00:	movhi	r2, #39	; 0x27
   12b04:	add	r8, r8, #2
   12b08:	strbhi	r2, [r9, r3]
   12b0c:	mov	r3, #0
   12b10:	str	r3, [sp, #36]	; 0x24
   12b14:	ldr	r2, [sp, #32]
   12b18:	cmp	r8, fp
   12b1c:	ldr	r3, [sp, #28]
   12b20:	strbcc	r4, [r9, r8]
   12b24:	cmp	r2, #0
   12b28:	moveq	r3, #0
   12b2c:	str	r3, [sp, #28]
   12b30:	ldr	r3, [sp, #24]
   12b34:	add	r8, r8, #1
   12b38:	cmn	r3, #1
   12b3c:	bne	12614 <close@plt+0x16b0>
   12b40:	ldr	r3, [sp, #44]	; 0x2c
   12b44:	ldrb	r3, [r3, sl]
   12b48:	adds	r7, r3, #0
   12b4c:	movne	r7, #1
   12b50:	cmp	r7, #0
   12b54:	bne	12624 <close@plt+0x16c0>
   12b58:	ldr	r3, [sp, #64]	; 0x40
   12b5c:	cmp	r8, #0
   12b60:	movne	r3, #0
   12b64:	andeq	r3, r3, #1
   12b68:	cmp	r3, #0
   12b6c:	str	r3, [sp, #64]	; 0x40
   12b70:	bne	13614 <close@plt+0x26b0>
   12b74:	ldr	r3, [sp, #40]	; 0x28
   12b78:	ldr	r2, [sp, #52]	; 0x34
   12b7c:	eor	r3, r3, #1
   12b80:	ands	r2, r2, r3
   12b84:	beq	13a40 <close@plt+0x2adc>
   12b88:	ldr	r3, [sp, #76]	; 0x4c
   12b8c:	cmp	r3, #0
   12b90:	beq	13a10 <close@plt+0x2aac>
   12b94:	ldr	r3, [sp, #28]
   12b98:	cmp	r3, #0
   12b9c:	bne	139cc <close@plt+0x2a68>
   12ba0:	ldr	r2, [sp, #84]	; 0x54
   12ba4:	clz	r3, fp
   12ba8:	cmp	r2, #0
   12bac:	lsr	r3, r3, #5
   12bb0:	moveq	r3, #0
   12bb4:	cmp	r3, #0
   12bb8:	beq	1396c <close@plt+0x2a08>
   12bbc:	mov	fp, r2
   12bc0:	str	r3, [sp, #76]	; 0x4c
   12bc4:	b	12550 <close@plt+0x15ec>
   12bc8:	ldr	r3, [sp, #176]	; 0xb0
   12bcc:	ldr	r6, [sp, #48]	; 0x30
   12bd0:	cmp	r3, #2
   12bd4:	beq	1310c <close@plt+0x21a8>
   12bd8:	ldr	r3, [sp, #88]	; 0x58
   12bdc:	cmp	r3, #0
   12be0:	beq	13690 <close@plt+0x272c>
   12be4:	mov	r3, #0
   12be8:	add	sl, sl, #1
   12bec:	ldr	r6, [sp, #36]	; 0x24
   12bf0:	str	r3, [sp, #32]
   12bf4:	mov	r4, #92	; 0x5c
   12bf8:	b	12ae4 <close@plt+0x1b80>
   12bfc:	ldr	r3, [sp, #176]	; 0xb0
   12c00:	ldr	r6, [sp, #48]	; 0x30
   12c04:	cmp	r3, #2
   12c08:	beq	1313c <close@plt+0x21d8>
   12c0c:	cmp	r3, #5
   12c10:	bne	136a0 <close@plt+0x273c>
   12c14:	ldr	r3, [sp, #100]	; 0x64
   12c18:	cmp	r3, #0
   12c1c:	beq	13704 <close@plt+0x27a0>
   12c20:	ldr	r2, [sp, #24]
   12c24:	add	r3, sl, #2
   12c28:	cmp	r2, r3
   12c2c:	bls	12c3c <close@plt+0x1cd8>
   12c30:	ldrb	r4, [r5, #1]
   12c34:	cmp	r4, #63	; 0x3f
   12c38:	beq	138ac <close@plt+0x2948>
   12c3c:	mov	r1, #0
   12c40:	str	r1, [sp, #32]
   12c44:	mov	r4, #63	; 0x3f
   12c48:	b	12ab0 <close@plt+0x1b4c>
   12c4c:	ldr	r3, [sp, #176]	; 0xb0
   12c50:	ldr	r6, [sp, #48]	; 0x30
   12c54:	cmp	r3, #2
   12c58:	beq	13168 <close@plt+0x2204>
   12c5c:	str	r7, [sp, #32]
   12c60:	str	r7, [sp, #76]	; 0x4c
   12c64:	mov	r1, #0
   12c68:	mov	r4, #39	; 0x27
   12c6c:	b	12ab0 <close@plt+0x1b4c>
   12c70:	ldr	r6, [sp, #48]	; 0x30
   12c74:	ldr	r1, [sp, #52]	; 0x34
   12c78:	str	r7, [sp, #32]
   12c7c:	b	12ab0 <close@plt+0x1b4c>
   12c80:	ldr	r6, [sp, #48]	; 0x30
   12c84:	ldr	r1, [sp, #52]	; 0x34
   12c88:	mov	r4, #12
   12c8c:	mov	r3, #102	; 0x66
   12c90:	ldr	r2, [sp, #56]	; 0x38
   12c94:	cmp	r2, #0
   12c98:	streq	r2, [sp, #32]
   12c9c:	beq	12ab0 <close@plt+0x1b4c>
   12ca0:	mov	r4, r3
   12ca4:	mov	r3, #0
   12ca8:	str	r3, [sp, #32]
   12cac:	ldr	r3, [sp, #40]	; 0x28
   12cb0:	cmp	r3, #0
   12cb4:	bne	13424 <close@plt+0x24c0>
   12cb8:	ldr	r3, [sp, #36]	; 0x24
   12cbc:	eor	r3, r3, #1
   12cc0:	and	r3, r3, r1
   12cc4:	ands	r3, r3, #255	; 0xff
   12cc8:	beq	12d00 <close@plt+0x1d9c>
   12ccc:	cmp	fp, r8
   12cd0:	movhi	r2, #39	; 0x27
   12cd4:	strbhi	r2, [r9, r8]
   12cd8:	add	r2, r8, #1
   12cdc:	cmp	fp, r2
   12ce0:	movhi	r1, #36	; 0x24
   12ce4:	strbhi	r1, [r9, r2]
   12ce8:	add	r2, r8, #2
   12cec:	cmp	fp, r2
   12cf0:	add	r8, r8, #3
   12cf4:	movhi	r1, #39	; 0x27
   12cf8:	strbhi	r1, [r9, r2]
   12cfc:	str	r3, [sp, #36]	; 0x24
   12d00:	cmp	fp, r8
   12d04:	movhi	r3, #92	; 0x5c
   12d08:	strbhi	r3, [r9, r8]
   12d0c:	add	sl, sl, #1
   12d10:	add	r8, r8, #1
   12d14:	b	12b14 <close@plt+0x1bb0>
   12d18:	ldr	r6, [sp, #48]	; 0x30
   12d1c:	mov	r4, #10
   12d20:	mov	r3, #110	; 0x6e
   12d24:	ldr	r2, [sp, #64]	; 0x40
   12d28:	cmp	r2, #0
   12d2c:	bne	137ac <close@plt+0x2848>
   12d30:	ldr	r1, [sp, #52]	; 0x34
   12d34:	b	12c90 <close@plt+0x1d2c>
   12d38:	ldr	r6, [sp, #48]	; 0x30
   12d3c:	ldr	r1, [sp, #52]	; 0x34
   12d40:	mov	r3, #116	; 0x74
   12d44:	b	12c90 <close@plt+0x1d2c>
   12d48:	ldr	r6, [sp, #48]	; 0x30
   12d4c:	ldr	r1, [sp, #52]	; 0x34
   12d50:	mov	r4, #11
   12d54:	mov	r3, #118	; 0x76
   12d58:	b	12c90 <close@plt+0x1d2c>
   12d5c:	ldr	r6, [sp, #48]	; 0x30
   12d60:	ldr	r1, [sp, #52]	; 0x34
   12d64:	mov	r4, #8
   12d68:	mov	r3, #98	; 0x62
   12d6c:	b	12c90 <close@plt+0x1d2c>
   12d70:	ldr	r6, [sp, #48]	; 0x30
   12d74:	ldr	r1, [sp, #52]	; 0x34
   12d78:	mov	r4, #7
   12d7c:	mov	r3, #97	; 0x61
   12d80:	b	12c90 <close@plt+0x1d2c>
   12d84:	ldr	r3, [sp, #56]	; 0x38
   12d88:	ldr	r6, [sp, #48]	; 0x30
   12d8c:	cmp	r3, #0
   12d90:	beq	13254 <close@plt+0x22f0>
   12d94:	ldr	r3, [sp, #40]	; 0x28
   12d98:	cmp	r3, #0
   12d9c:	bne	13888 <close@plt+0x2924>
   12da0:	ldr	r3, [sp, #36]	; 0x24
   12da4:	ldr	r2, [sp, #52]	; 0x34
   12da8:	eor	r3, r3, #1
   12dac:	ands	r3, r2, r3
   12db0:	moveq	r2, r8
   12db4:	beq	12dec <close@plt+0x1e88>
   12db8:	cmp	fp, r8
   12dbc:	movhi	r2, #39	; 0x27
   12dc0:	strbhi	r2, [r9, r8]
   12dc4:	add	r2, r8, #1
   12dc8:	cmp	fp, r2
   12dcc:	movhi	r1, #36	; 0x24
   12dd0:	strbhi	r1, [r9, r2]
   12dd4:	add	r2, r8, #2
   12dd8:	cmp	fp, r2
   12ddc:	movhi	r1, #39	; 0x27
   12de0:	strbhi	r1, [r9, r2]
   12de4:	add	r2, r8, #3
   12de8:	str	r3, [sp, #36]	; 0x24
   12dec:	cmp	fp, r2
   12df0:	movhi	r3, #92	; 0x5c
   12df4:	strbhi	r3, [r9, r2]
   12df8:	ldr	r3, [sp, #92]	; 0x5c
   12dfc:	add	r8, r2, #1
   12e00:	cmp	r3, #0
   12e04:	beq	13788 <close@plt+0x2824>
   12e08:	ldr	r1, [sp, #24]
   12e0c:	add	r3, sl, #1
   12e10:	cmp	r1, r3
   12e14:	bls	12e4c <close@plt+0x1ee8>
   12e18:	ldr	r1, [sp, #44]	; 0x2c
   12e1c:	ldrb	r3, [r1, r3]
   12e20:	sub	r3, r3, #48	; 0x30
   12e24:	cmp	r3, #9
   12e28:	bhi	12e4c <close@plt+0x1ee8>
   12e2c:	cmp	fp, r8
   12e30:	movhi	r3, #48	; 0x30
   12e34:	strbhi	r3, [r9, r8]
   12e38:	add	r3, r2, #2
   12e3c:	cmp	fp, r3
   12e40:	add	r8, r2, #3
   12e44:	movhi	r1, #48	; 0x30
   12e48:	strbhi	r1, [r9, r3]
   12e4c:	ldr	r3, [sp, #40]	; 0x28
   12e50:	ldr	r1, [sp, #52]	; 0x34
   12e54:	mov	r7, r3
   12e58:	str	r3, [sp, #32]
   12e5c:	mov	r4, #48	; 0x30
   12e60:	b	12ab0 <close@plt+0x1b4c>
   12e64:	ldr	r6, [sp, #48]	; 0x30
   12e68:	cmp	sl, #0
   12e6c:	streq	r7, [sp, #32]
   12e70:	beq	12e90 <close@plt+0x1f2c>
   12e74:	mov	r3, #0
   12e78:	ldr	r1, [sp, #52]	; 0x34
   12e7c:	str	r3, [sp, #32]
   12e80:	b	12ab0 <close@plt+0x1b4c>
   12e84:	ldr	r6, [sp, #48]	; 0x30
   12e88:	mov	r3, #0
   12e8c:	str	r3, [sp, #32]
   12e90:	ldr	r3, [sp, #64]	; 0x40
   12e94:	cmp	r3, #0
   12e98:	bne	13614 <close@plt+0x26b0>
   12e9c:	ldr	r1, [sp, #52]	; 0x34
   12ea0:	b	12ab0 <close@plt+0x1b4c>
   12ea4:	ldr	r3, [sp, #48]	; 0x30
   12ea8:	mov	r6, r3
   12eac:	str	r3, [sp, #32]
   12eb0:	b	12e90 <close@plt+0x1f2c>
   12eb4:	ldr	r6, [sp, #48]	; 0x30
   12eb8:	mov	r4, #13
   12ebc:	mov	r3, #114	; 0x72
   12ec0:	b	12d24 <close@plt+0x1dc0>
   12ec4:	ldr	r3, [sp, #44]	; 0x2c
   12ec8:	add	r5, r3, sl
   12ecc:	ldrb	r4, [r5]
   12ed0:	cmp	r4, #126	; 0x7e
   12ed4:	ldrls	pc, [pc, r4, lsl #2]
   12ed8:	b	13274 <close@plt+0x2310>
   12edc:	andeq	r3, r1, r4, asr #4
   12ee0:	andeq	r3, r1, r4, ror r2
   12ee4:	andeq	r3, r1, r4, ror r2
   12ee8:	andeq	r3, r1, r4, ror r2
   12eec:	andeq	r3, r1, r4, ror r2
   12ef0:	andeq	r3, r1, r4, ror r2
   12ef4:	andeq	r3, r1, r4, ror r2
   12ef8:	andeq	r3, r1, ip, lsr r2
   12efc:	andeq	r3, r1, r4, lsr r2
   12f00:	andeq	r3, r1, r8, lsr #4
   12f04:	andeq	r3, r1, r0, lsr #4
   12f08:	andeq	r3, r1, r8, lsl r2
   12f0c:	andeq	r3, r1, r0, lsl r2
   12f10:	andeq	r3, r1, r8, lsl #4
   12f14:	andeq	r3, r1, r4, ror r2
   12f18:	andeq	r3, r1, r4, ror r2
   12f1c:	andeq	r3, r1, r4, ror r2
   12f20:	andeq	r3, r1, r4, ror r2
   12f24:	andeq	r3, r1, r4, ror r2
   12f28:	andeq	r3, r1, r4, ror r2
   12f2c:	andeq	r3, r1, r4, ror r2
   12f30:	andeq	r3, r1, r4, ror r2
   12f34:	andeq	r3, r1, r4, ror r2
   12f38:	andeq	r3, r1, r4, ror r2
   12f3c:	andeq	r3, r1, r4, ror r2
   12f40:	andeq	r3, r1, r4, ror r2
   12f44:	andeq	r3, r1, r4, ror r2
   12f48:	andeq	r3, r1, r4, ror r2
   12f4c:	andeq	r3, r1, r4, ror r2
   12f50:	andeq	r3, r1, r4, ror r2
   12f54:	andeq	r3, r1, r4, ror r2
   12f58:	andeq	r3, r1, r4, ror r2
   12f5c:	strdeq	r3, [r1], -ip
   12f60:	strdeq	r3, [r1], -r4
   12f64:	strdeq	r3, [r1], -r4
   12f68:	andeq	r3, r1, ip, ror #3
   12f6c:	strdeq	r3, [r1], -r4
   12f70:	andeq	r3, r1, r4, ror #3
   12f74:	strdeq	r3, [r1], -r4
   12f78:	andeq	r3, r1, r8, asr r1
   12f7c:	strdeq	r3, [r1], -r4
   12f80:	strdeq	r3, [r1], -r4
   12f84:	strdeq	r3, [r1], -r4
   12f88:	andeq	r3, r1, r4, ror #3
   12f8c:	andeq	r3, r1, r4, ror #3
   12f90:	andeq	r3, r1, r4, ror #3
   12f94:	andeq	r3, r1, r4, ror #3
   12f98:	andeq	r3, r1, r4, ror #3
   12f9c:	andeq	r3, r1, r4, ror #3
   12fa0:	andeq	r3, r1, r4, ror #3
   12fa4:	andeq	r3, r1, r4, ror #3
   12fa8:	andeq	r3, r1, r4, ror #3
   12fac:	andeq	r3, r1, r4, ror #3
   12fb0:	andeq	r3, r1, r4, ror #3
   12fb4:	andeq	r3, r1, r4, ror #3
   12fb8:	andeq	r3, r1, r4, ror #3
   12fbc:	andeq	r3, r1, r4, ror #3
   12fc0:	andeq	r3, r1, r4, ror #3
   12fc4:	andeq	r3, r1, r4, ror #3
   12fc8:	strdeq	r3, [r1], -r4
   12fcc:	strdeq	r3, [r1], -r4
   12fd0:	strdeq	r3, [r1], -r4
   12fd4:	strdeq	r3, [r1], -r4
   12fd8:	andeq	r3, r1, ip, lsr #2
   12fdc:	andeq	r3, r1, r4, ror r2
   12fe0:	andeq	r3, r1, r4, ror #3
   12fe4:	andeq	r3, r1, r4, ror #3
   12fe8:	andeq	r3, r1, r4, ror #3
   12fec:	andeq	r3, r1, r4, ror #3
   12ff0:	andeq	r3, r1, r4, ror #3
   12ff4:	andeq	r3, r1, r4, ror #3
   12ff8:	andeq	r3, r1, r4, ror #3
   12ffc:	andeq	r3, r1, r4, ror #3
   13000:	andeq	r3, r1, r4, ror #3
   13004:	andeq	r3, r1, r4, ror #3
   13008:	andeq	r3, r1, r4, ror #3
   1300c:	andeq	r3, r1, r4, ror #3
   13010:	andeq	r3, r1, r4, ror #3
   13014:	andeq	r3, r1, r4, ror #3
   13018:	andeq	r3, r1, r4, ror #3
   1301c:	andeq	r3, r1, r4, ror #3
   13020:	andeq	r3, r1, r4, ror #3
   13024:	andeq	r3, r1, r4, ror #3
   13028:	andeq	r3, r1, r4, ror #3
   1302c:	andeq	r3, r1, r4, ror #3
   13030:	andeq	r3, r1, r4, ror #3
   13034:	andeq	r3, r1, r4, ror #3
   13038:	andeq	r3, r1, r4, ror #3
   1303c:	andeq	r3, r1, r4, ror #3
   13040:	andeq	r3, r1, r4, ror #3
   13044:	andeq	r3, r1, r4, ror #3
   13048:	strdeq	r3, [r1], -r4
   1304c:	strdeq	r3, [r1], -ip
   13050:	andeq	r3, r1, r4, ror #3
   13054:	strdeq	r3, [r1], -r4
   13058:	andeq	r3, r1, r4, ror #3
   1305c:	strdeq	r3, [r1], -r4
   13060:	andeq	r3, r1, r4, ror #3
   13064:	andeq	r3, r1, r4, ror #3
   13068:	andeq	r3, r1, r4, ror #3
   1306c:	andeq	r3, r1, r4, ror #3
   13070:	andeq	r3, r1, r4, ror #3
   13074:	andeq	r3, r1, r4, ror #3
   13078:	andeq	r3, r1, r4, ror #3
   1307c:	andeq	r3, r1, r4, ror #3
   13080:	andeq	r3, r1, r4, ror #3
   13084:	andeq	r3, r1, r4, ror #3
   13088:	andeq	r3, r1, r4, ror #3
   1308c:	andeq	r3, r1, r4, ror #3
   13090:	andeq	r3, r1, r4, ror #3
   13094:	andeq	r3, r1, r4, ror #3
   13098:	andeq	r3, r1, r4, ror #3
   1309c:	andeq	r3, r1, r4, ror #3
   130a0:	andeq	r3, r1, r4, ror #3
   130a4:	andeq	r3, r1, r4, ror #3
   130a8:	andeq	r3, r1, r4, ror #3
   130ac:	andeq	r3, r1, r4, ror #3
   130b0:	andeq	r3, r1, r4, ror #3
   130b4:	andeq	r3, r1, r4, ror #3
   130b8:	andeq	r3, r1, r4, ror #3
   130bc:	andeq	r3, r1, r4, ror #3
   130c0:	andeq	r3, r1, r4, ror #3
   130c4:	andeq	r3, r1, r4, ror #3
   130c8:	ldrdeq	r3, [r1], -r8
   130cc:	strdeq	r3, [r1], -r4
   130d0:	ldrdeq	r3, [r1], -r8
   130d4:	andeq	r3, r1, ip, ror #3
   130d8:	ldr	r3, [sp, #24]
   130dc:	mov	r6, #0
   130e0:	cmn	r3, #1
   130e4:	bne	12a90 <close@plt+0x1b2c>
   130e8:	ldr	r3, [sp, #44]	; 0x2c
   130ec:	ldrb	r3, [r3, #1]
   130f0:	adds	r3, r3, #0
   130f4:	movne	r3, #1
   130f8:	b	12a98 <close@plt+0x1b34>
   130fc:	ldr	r3, [sp, #176]	; 0xb0
   13100:	mov	r6, #0
   13104:	cmp	r3, #2
   13108:	bne	12bd8 <close@plt+0x1c74>
   1310c:	ldr	r3, [sp, #64]	; 0x40
   13110:	cmp	r3, #0
   13114:	bne	1394c <close@plt+0x29e8>
   13118:	add	sl, sl, #1
   1311c:	ldr	r6, [sp, #36]	; 0x24
   13120:	str	r3, [sp, #32]
   13124:	mov	r4, #92	; 0x5c
   13128:	b	12ae4 <close@plt+0x1b80>
   1312c:	ldr	r3, [sp, #176]	; 0xb0
   13130:	mov	r6, #0
   13134:	cmp	r3, #2
   13138:	bne	12c0c <close@plt+0x1ca8>
   1313c:	ldr	r3, [sp, #40]	; 0x28
   13140:	cmp	r3, #0
   13144:	bne	13428 <close@plt+0x24c4>
   13148:	mov	r1, r7
   1314c:	str	r3, [sp, #32]
   13150:	mov	r4, #63	; 0x3f
   13154:	b	12ab0 <close@plt+0x1b4c>
   13158:	ldr	r3, [sp, #176]	; 0xb0
   1315c:	mov	r6, #0
   13160:	cmp	r3, #2
   13164:	bne	12c5c <close@plt+0x1cf8>
   13168:	ldr	r3, [sp, #64]	; 0x40
   1316c:	cmp	r3, #0
   13170:	bne	1394c <close@plt+0x29e8>
   13174:	ldr	r2, [sp, #84]	; 0x54
   13178:	adds	r3, fp, #0
   1317c:	movne	r3, #1
   13180:	cmp	r2, #0
   13184:	movne	r3, #0
   13188:	cmp	r3, #0
   1318c:	strne	fp, [sp, #84]	; 0x54
   13190:	movne	fp, #0
   13194:	bne	131c4 <close@plt+0x2260>
   13198:	cmp	fp, r8
   1319c:	movhi	r3, #39	; 0x27
   131a0:	strbhi	r3, [r9, r8]
   131a4:	add	r3, r8, #1
   131a8:	cmp	fp, r3
   131ac:	movhi	r2, #92	; 0x5c
   131b0:	strbhi	r2, [r9, r3]
   131b4:	add	r3, r8, #2
   131b8:	cmp	fp, r3
   131bc:	movhi	r2, #39	; 0x27
   131c0:	strbhi	r2, [r9, r3]
   131c4:	ldr	r3, [sp, #64]	; 0x40
   131c8:	add	r8, r8, #3
   131cc:	mov	r1, r7
   131d0:	str	r7, [sp, #32]
   131d4:	str	r7, [sp, #76]	; 0x4c
   131d8:	str	r3, [sp, #36]	; 0x24
   131dc:	mov	r4, #39	; 0x27
   131e0:	b	12ab0 <close@plt+0x1b4c>
   131e4:	mov	r6, #0
   131e8:	b	12c74 <close@plt+0x1d10>
   131ec:	mov	r6, #0
   131f0:	b	12e68 <close@plt+0x1f04>
   131f4:	mov	r6, #0
   131f8:	b	12e88 <close@plt+0x1f24>
   131fc:	str	r7, [sp, #32]
   13200:	mov	r6, #0
   13204:	b	12e90 <close@plt+0x1f2c>
   13208:	mov	r6, #0
   1320c:	b	12eb8 <close@plt+0x1f54>
   13210:	mov	r6, #0
   13214:	b	12c84 <close@plt+0x1d20>
   13218:	mov	r6, #0
   1321c:	b	12d4c <close@plt+0x1de8>
   13220:	mov	r6, #0
   13224:	b	12d1c <close@plt+0x1db8>
   13228:	mov	r6, #0
   1322c:	mov	r3, #116	; 0x74
   13230:	b	12d24 <close@plt+0x1dc0>
   13234:	mov	r6, #0
   13238:	b	12d60 <close@plt+0x1dfc>
   1323c:	mov	r6, #0
   13240:	b	12d74 <close@plt+0x1e10>
   13244:	ldr	r3, [sp, #56]	; 0x38
   13248:	mov	r6, #0
   1324c:	cmp	r3, #0
   13250:	bne	12d94 <close@plt+0x1e30>
   13254:	ldr	r3, [sp, #96]	; 0x60
   13258:	cmp	r3, #0
   1325c:	addne	sl, sl, #1
   13260:	bne	12608 <close@plt+0x16a4>
   13264:	ldr	r1, [sp, #52]	; 0x34
   13268:	str	r3, [sp, #32]
   1326c:	mov	r4, r3
   13270:	b	12ab0 <close@plt+0x1b4c>
   13274:	mov	r6, #0
   13278:	ldr	r3, [sp, #80]	; 0x50
   1327c:	cmp	r3, #1
   13280:	bne	13470 <close@plt+0x250c>
   13284:	bl	10e5c <__ctype_b_loc@plt>
   13288:	ldr	r2, [sp, #80]	; 0x50
   1328c:	sxth	r3, r4
   13290:	mov	r1, r2
   13294:	lsl	r3, r3, #1
   13298:	ldr	r2, [r0]
   1329c:	ldrh	r3, [r2, r3]
   132a0:	and	r3, r3, #16384	; 0x4000
   132a4:	cmp	r3, #0
   132a8:	movne	r3, #1
   132ac:	moveq	r3, #0
   132b0:	str	r3, [sp, #32]
   132b4:	moveq	r3, #1
   132b8:	movne	r3, #0
   132bc:	ldr	r2, [sp, #56]	; 0x38
   132c0:	and	r3, r3, r2
   132c4:	ands	r3, r3, #255	; 0xff
   132c8:	beq	12e9c <close@plt+0x1f38>
   132cc:	add	r1, sl, r1
   132d0:	mov	r0, #0
   132d4:	ldr	r7, [sp, #40]	; 0x28
   132d8:	ldr	r2, [sp, #36]	; 0x24
   132dc:	ldr	lr, [sp, #52]	; 0x34
   132e0:	b	13390 <close@plt+0x242c>
   132e4:	cmp	r7, #0
   132e8:	bne	136e4 <close@plt+0x2780>
   132ec:	eor	r0, r2, #1
   132f0:	ands	r0, lr, r0
   132f4:	beq	1332c <close@plt+0x23c8>
   132f8:	cmp	fp, r8
   132fc:	movhi	r2, #39	; 0x27
   13300:	strbhi	r2, [r9, r8]
   13304:	add	r2, r8, #1
   13308:	cmp	fp, r2
   1330c:	movhi	ip, #36	; 0x24
   13310:	strbhi	ip, [r9, r2]
   13314:	add	r2, r8, #2
   13318:	cmp	fp, r2
   1331c:	movhi	ip, #39	; 0x27
   13320:	strbhi	ip, [r9, r2]
   13324:	add	r8, r8, #3
   13328:	mov	r2, r0
   1332c:	cmp	fp, r8
   13330:	movhi	r0, #92	; 0x5c
   13334:	strbhi	r0, [r9, r8]
   13338:	add	r0, r8, #1
   1333c:	cmp	fp, r0
   13340:	lsrhi	ip, r4, #6
   13344:	addhi	ip, ip, #48	; 0x30
   13348:	strbhi	ip, [r9, r0]
   1334c:	add	ip, r8, #2
   13350:	cmp	fp, ip
   13354:	lsrhi	r0, r4, #3
   13358:	andhi	r0, r0, #7
   1335c:	addhi	r0, r0, #48	; 0x30
   13360:	add	sl, sl, #1
   13364:	strbhi	r0, [r9, ip]
   13368:	and	r4, r4, #7
   1336c:	cmp	sl, r1
   13370:	add	r4, r4, #48	; 0x30
   13374:	add	r8, r8, #3
   13378:	bcs	136fc <close@plt+0x2798>
   1337c:	mov	r0, r3
   13380:	cmp	fp, r8
   13384:	strbhi	r4, [r9, r8]
   13388:	ldrb	r4, [r5, #1]!
   1338c:	add	r8, r8, #1
   13390:	cmp	r3, #0
   13394:	bne	132e4 <close@plt+0x2380>
   13398:	cmp	r6, #0
   1339c:	bne	13440 <close@plt+0x24dc>
   133a0:	eor	r6, r0, #1
   133a4:	and	r6, r6, r2
   133a8:	add	sl, sl, #1
   133ac:	cmp	r1, sl
   133b0:	uxtb	r6, r6
   133b4:	bls	13468 <close@plt+0x2504>
   133b8:	cmp	r6, #0
   133bc:	beq	13380 <close@plt+0x241c>
   133c0:	cmp	fp, r8
   133c4:	movhi	r2, #39	; 0x27
   133c8:	strbhi	r2, [r9, r8]
   133cc:	add	r2, r8, #1
   133d0:	cmp	fp, r2
   133d4:	movhi	ip, #39	; 0x27
   133d8:	strbhi	ip, [r9, r2]
   133dc:	add	r8, r8, #2
   133e0:	mov	r6, r3
   133e4:	mov	r2, r3
   133e8:	b	13380 <close@plt+0x241c>
   133ec:	ldr	r3, [sp, #184]	; 0xb8
   133f0:	cmp	r3, #0
   133f4:	beq	12acc <close@plt+0x1b68>
   133f8:	lsr	r2, r4, #5
   133fc:	mov	r0, r3
   13400:	uxtb	r2, r2
   13404:	and	r3, r4, #31
   13408:	ldr	r2, [r0, r2, lsl #2]
   1340c:	lsr	r3, r2, r3
   13410:	tst	r3, #1
   13414:	beq	12acc <close@plt+0x1b68>
   13418:	ldr	r3, [sp, #40]	; 0x28
   1341c:	cmp	r3, #0
   13420:	beq	12cb8 <close@plt+0x1d54>
   13424:	mov	r3, r1
   13428:	str	r3, [sp, #64]	; 0x40
   1342c:	mov	sl, r9
   13430:	ldr	r3, [sp, #56]	; 0x38
   13434:	mov	r9, fp
   13438:	ldr	r2, [sp, #64]	; 0x40
   1343c:	b	1362c <close@plt+0x26c8>
   13440:	cmp	fp, r8
   13444:	eor	r6, r0, #1
   13448:	movhi	ip, #92	; 0x5c
   1344c:	and	r6, r6, r2
   13450:	add	sl, sl, #1
   13454:	strbhi	ip, [r9, r8]
   13458:	cmp	r1, sl
   1345c:	add	r8, r8, #1
   13460:	uxtb	r6, r6
   13464:	bhi	133b8 <close@plt+0x2454>
   13468:	str	r2, [sp, #36]	; 0x24
   1346c:	b	12ae4 <close@plt+0x1b80>
   13470:	ldr	r3, [sp, #24]
   13474:	cmn	r3, #1
   13478:	mov	r3, #0
   1347c:	str	r3, [sp, #128]	; 0x80
   13480:	str	r3, [sp, #132]	; 0x84
   13484:	beq	13778 <close@plt+0x2814>
   13488:	mov	r2, r7
   1348c:	mov	r3, #0
   13490:	str	r7, [sp, #104]	; 0x68
   13494:	str	r5, [sp, #116]	; 0x74
   13498:	mov	r7, r3
   1349c:	mov	r5, r2
   134a0:	str	r4, [sp, #32]
   134a4:	str	r6, [sp, #108]	; 0x6c
   134a8:	str	r8, [sp, #112]	; 0x70
   134ac:	ldr	r3, [sp, #44]	; 0x2c
   134b0:	add	r6, sl, r7
   134b4:	add	r4, r3, r6
   134b8:	ldr	r3, [sp, #24]
   134bc:	mov	r1, r4
   134c0:	sub	r2, r3, r6
   134c4:	add	r0, sp, #124	; 0x7c
   134c8:	add	r3, sp, #128	; 0x80
   134cc:	bl	17778 <close@plt+0x6814>
   134d0:	subs	r8, r0, #0
   134d4:	beq	1385c <close@plt+0x28f8>
   134d8:	cmn	r8, #1
   134dc:	beq	13834 <close@plt+0x28d0>
   134e0:	cmn	r8, #2
   134e4:	beq	137cc <close@plt+0x2868>
   134e8:	ldr	r3, [sp, #64]	; 0x40
   134ec:	cmp	r3, #0
   134f0:	beq	135b0 <close@plt+0x264c>
   134f4:	cmp	r8, #1
   134f8:	beq	135b0 <close@plt+0x264c>
   134fc:	sub	r3, r8, #1
   13500:	add	r6, r3, r6
   13504:	ldr	r3, [sp, #44]	; 0x2c
   13508:	add	r6, r3, r6
   1350c:	ldrb	r3, [r4, #1]!
   13510:	sub	r3, r3, #91	; 0x5b
   13514:	cmp	r3, #33	; 0x21
   13518:	ldrls	pc, [pc, r3, lsl #2]
   1351c:	b	135a8 <close@plt+0x2644>
   13520:	andeq	r3, r1, r4, lsl r6
   13524:	andeq	r3, r1, r4, lsl r6
   13528:	andeq	r3, r1, r8, lsr #11
   1352c:	andeq	r3, r1, r4, lsl r6
   13530:	andeq	r3, r1, r8, lsr #11
   13534:	andeq	r3, r1, r4, lsl r6
   13538:	andeq	r3, r1, r8, lsr #11
   1353c:	andeq	r3, r1, r8, lsr #11
   13540:	andeq	r3, r1, r8, lsr #11
   13544:	andeq	r3, r1, r8, lsr #11
   13548:	andeq	r3, r1, r8, lsr #11
   1354c:	andeq	r3, r1, r8, lsr #11
   13550:	andeq	r3, r1, r8, lsr #11
   13554:	andeq	r3, r1, r8, lsr #11
   13558:	andeq	r3, r1, r8, lsr #11
   1355c:	andeq	r3, r1, r8, lsr #11
   13560:	andeq	r3, r1, r8, lsr #11
   13564:	andeq	r3, r1, r8, lsr #11
   13568:	andeq	r3, r1, r8, lsr #11
   1356c:	andeq	r3, r1, r8, lsr #11
   13570:	andeq	r3, r1, r8, lsr #11
   13574:	andeq	r3, r1, r8, lsr #11
   13578:	andeq	r3, r1, r8, lsr #11
   1357c:	andeq	r3, r1, r8, lsr #11
   13580:	andeq	r3, r1, r8, lsr #11
   13584:	andeq	r3, r1, r8, lsr #11
   13588:	andeq	r3, r1, r8, lsr #11
   1358c:	andeq	r3, r1, r8, lsr #11
   13590:	andeq	r3, r1, r8, lsr #11
   13594:	andeq	r3, r1, r8, lsr #11
   13598:	andeq	r3, r1, r8, lsr #11
   1359c:	andeq	r3, r1, r8, lsr #11
   135a0:	andeq	r3, r1, r8, lsr #11
   135a4:	andeq	r3, r1, r4, lsl r6
   135a8:	cmp	r6, r4
   135ac:	bne	1350c <close@plt+0x25a8>
   135b0:	ldr	r0, [sp, #124]	; 0x7c
   135b4:	bl	10dcc <iswprint@plt>
   135b8:	add	r7, r7, r8
   135bc:	cmp	r0, #0
   135c0:	add	r0, sp, #128	; 0x80
   135c4:	moveq	r5, #0
   135c8:	bl	10d6c <mbsinit@plt>
   135cc:	cmp	r0, #0
   135d0:	beq	134ac <close@plt+0x2548>
   135d4:	ldr	r4, [sp, #32]
   135d8:	str	r5, [sp, #32]
   135dc:	ldr	r3, [sp, #32]
   135e0:	mov	r1, r7
   135e4:	eor	r3, r3, #1
   135e8:	ldr	r7, [sp, #104]	; 0x68
   135ec:	ldr	r6, [sp, #108]	; 0x6c
   135f0:	ldr	r8, [sp, #112]	; 0x70
   135f4:	ldr	r5, [sp, #116]	; 0x74
   135f8:	uxtb	r3, r3
   135fc:	cmp	r1, #1
   13600:	bls	132bc <close@plt+0x2358>
   13604:	ldr	r2, [sp, #56]	; 0x38
   13608:	and	r3, r3, r2
   1360c:	uxtb	r3, r3
   13610:	b	132cc <close@plt+0x2368>
   13614:	mov	r3, #2
   13618:	str	r3, [sp, #176]	; 0xb0
   1361c:	ldr	r2, [sp, #64]	; 0x40
   13620:	ldr	r3, [sp, #56]	; 0x38
   13624:	mov	sl, r9
   13628:	mov	r9, fp
   1362c:	and	r3, r3, r2
   13630:	tst	r3, #255	; 0xff
   13634:	ldr	r3, [sp, #176]	; 0xb0
   13638:	movne	r3, #4
   1363c:	str	r3, [sp, #176]	; 0xb0
   13640:	ldr	r3, [sp, #180]	; 0xb4
   13644:	mov	ip, #0
   13648:	bic	r3, r3, #2
   1364c:	str	r3, [sp, #4]
   13650:	ldr	r3, [sp, #192]	; 0xc0
   13654:	ldr	r2, [sp, #44]	; 0x2c
   13658:	str	r3, [sp, #16]
   1365c:	ldr	r3, [sp, #188]	; 0xbc
   13660:	mov	r1, r9
   13664:	str	r3, [sp, #12]
   13668:	ldr	r3, [sp, #176]	; 0xb0
   1366c:	mov	r0, sl
   13670:	str	r3, [sp]
   13674:	str	ip, [sp, #8]
   13678:	ldr	r3, [sp, #24]
   1367c:	bl	124dc <close@plt+0x1578>
   13680:	mov	fp, r0
   13684:	mov	r0, fp
   13688:	add	sp, sp, #140	; 0x8c
   1368c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13690:	mov	r4, #92	; 0x5c
   13694:	mov	r1, #0
   13698:	mov	r3, r4
   1369c:	b	12c90 <close@plt+0x1d2c>
   136a0:	mov	r3, #0
   136a4:	ldr	r1, [sp, #52]	; 0x34
   136a8:	str	r3, [sp, #32]
   136ac:	mov	r4, #63	; 0x3f
   136b0:	b	12ab0 <close@plt+0x1b4c>
   136b4:	cmp	fp, #0
   136b8:	beq	13714 <close@plt+0x27b0>
   136bc:	mov	r3, #39	; 0x27
   136c0:	strb	r3, [r9]
   136c4:	mov	r3, #0
   136c8:	str	r3, [sp, #40]	; 0x28
   136cc:	mov	r3, #1
   136d0:	str	r3, [sp, #68]	; 0x44
   136d4:	ldr	r3, [pc, #448]	; 1389c <close@plt+0x2938>
   136d8:	mov	r8, #1
   136dc:	str	r3, [sp, #72]	; 0x48
   136e0:	b	128c4 <close@plt+0x1960>
   136e4:	ldr	r3, [sp, #40]	; 0x28
   136e8:	mov	sl, r9
   136ec:	str	r3, [sp, #56]	; 0x38
   136f0:	mov	r9, fp
   136f4:	ldr	r2, [sp, #64]	; 0x40
   136f8:	b	1362c <close@plt+0x26c8>
   136fc:	str	r2, [sp, #36]	; 0x24
   13700:	b	12b14 <close@plt+0x1bb0>
   13704:	mov	r1, #0
   13708:	str	r3, [sp, #32]
   1370c:	mov	r4, #63	; 0x3f
   13710:	b	12ab0 <close@plt+0x1b4c>
   13714:	ldr	r3, [pc, #384]	; 1389c <close@plt+0x2938>
   13718:	str	r3, [sp, #72]	; 0x48
   1371c:	mov	r3, #0
   13720:	str	r3, [sp, #40]	; 0x28
   13724:	mov	r3, #1
   13728:	str	r3, [sp, #68]	; 0x44
   1372c:	mov	r8, r3
   13730:	b	128c4 <close@plt+0x1960>
   13734:	bl	10f58 <abort@plt>
   13738:	cmp	fp, #0
   1373c:	beq	1379c <close@plt+0x2838>
   13740:	mov	r2, #1
   13744:	mov	r3, #34	; 0x22
   13748:	strb	r3, [r9]
   1374c:	mov	r8, r2
   13750:	mov	r3, r2
   13754:	str	r2, [sp, #68]	; 0x44
   13758:	str	r3, [sp, #56]	; 0x38
   1375c:	ldr	r3, [pc, #316]	; 138a0 <close@plt+0x293c>
   13760:	ldr	r1, [sp, #56]	; 0x38
   13764:	str	r3, [sp, #72]	; 0x48
   13768:	ldr	r2, [sp, #176]	; 0xb0
   1376c:	ldr	ip, [sp, #40]	; 0x28
   13770:	ldr	lr, [sp, #176]	; 0xb0
   13774:	b	125a8 <close@plt+0x1644>
   13778:	ldr	r0, [sp, #44]	; 0x2c
   1377c:	bl	10e74 <strlen@plt>
   13780:	str	r0, [sp, #24]
   13784:	b	13488 <close@plt+0x2524>
   13788:	mov	r7, #0
   1378c:	ldr	r1, [sp, #52]	; 0x34
   13790:	str	r3, [sp, #32]
   13794:	mov	r4, #48	; 0x30
   13798:	b	12ab0 <close@plt+0x1b4c>
   1379c:	mov	r3, #1
   137a0:	str	r3, [sp, #68]	; 0x44
   137a4:	mov	r8, r3
   137a8:	b	13758 <close@plt+0x27f4>
   137ac:	mov	r3, #2
   137b0:	mov	sl, r9
   137b4:	str	r3, [sp, #176]	; 0xb0
   137b8:	mov	r9, fp
   137bc:	ldr	r3, [sp, #56]	; 0x38
   137c0:	b	1362c <close@plt+0x26c8>
   137c4:	ldr	r6, [sp, #48]	; 0x30
   137c8:	b	13278 <close@plt+0x2314>
   137cc:	ldr	r0, [sp, #24]
   137d0:	mov	ip, r6
   137d4:	cmp	r0, ip
   137d8:	mov	r1, r7
   137dc:	mov	r2, r4
   137e0:	ldr	r7, [sp, #104]	; 0x68
   137e4:	ldr	r4, [sp, #32]
   137e8:	ldr	r6, [sp, #108]	; 0x6c
   137ec:	ldr	r8, [sp, #112]	; 0x70
   137f0:	ldr	r5, [sp, #116]	; 0x74
   137f4:	bls	13824 <close@plt+0x28c0>
   137f8:	ldrb	r3, [r2]
   137fc:	cmp	r3, #0
   13800:	bne	13814 <close@plt+0x28b0>
   13804:	b	13934 <close@plt+0x29d0>
   13808:	ldrb	r3, [r2, #1]!
   1380c:	cmp	r3, #0
   13810:	beq	13934 <close@plt+0x29d0>
   13814:	add	r1, r1, #1
   13818:	add	r3, sl, r1
   1381c:	cmp	r0, r3
   13820:	bhi	13808 <close@plt+0x28a4>
   13824:	mov	r2, #0
   13828:	mov	r3, r7
   1382c:	str	r2, [sp, #32]
   13830:	b	135fc <close@plt+0x2698>
   13834:	mov	r1, r7
   13838:	ldr	r7, [sp, #104]	; 0x68
   1383c:	mov	r2, #0
   13840:	ldr	r4, [sp, #32]
   13844:	ldr	r6, [sp, #108]	; 0x6c
   13848:	ldr	r8, [sp, #112]	; 0x70
   1384c:	ldr	r5, [sp, #116]	; 0x74
   13850:	mov	r3, r7
   13854:	str	r2, [sp, #32]
   13858:	b	135fc <close@plt+0x2698>
   1385c:	mov	r3, r5
   13860:	eor	r3, r3, #1
   13864:	ldr	r4, [sp, #32]
   13868:	mov	r1, r7
   1386c:	str	r5, [sp, #32]
   13870:	ldr	r7, [sp, #104]	; 0x68
   13874:	ldr	r6, [sp, #108]	; 0x6c
   13878:	ldr	r8, [sp, #112]	; 0x70
   1387c:	ldr	r5, [sp, #116]	; 0x74
   13880:	uxtb	r3, r3
   13884:	b	135fc <close@plt+0x2698>
   13888:	mov	sl, r9
   1388c:	str	r3, [sp, #56]	; 0x38
   13890:	mov	r9, fp
   13894:	ldr	r2, [sp, #64]	; 0x40
   13898:	b	1362c <close@plt+0x26c8>
   1389c:	andeq	r8, r1, r4, lsr r6
   138a0:	andeq	r8, r1, r0, lsr r6
   138a4:	andeq	r8, r1, r8, lsr r6
   138a8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   138ac:	ldr	r2, [sp, #44]	; 0x2c
   138b0:	ldrb	r1, [r2, r3]
   138b4:	sub	r2, r1, #33	; 0x21
   138b8:	uxtb	r2, r2
   138bc:	cmp	r2, #29
   138c0:	bhi	13940 <close@plt+0x29dc>
   138c4:	ldr	r0, [pc, #-36]	; 138a8 <close@plt+0x2944>
   138c8:	mov	ip, #1
   138cc:	ands	r2, r0, ip, lsl r2
   138d0:	beq	13960 <close@plt+0x29fc>
   138d4:	ldr	r2, [sp, #40]	; 0x28
   138d8:	cmp	r2, #0
   138dc:	bne	13a54 <close@plt+0x2af0>
   138e0:	add	r2, r8, #1
   138e4:	cmp	fp, r8
   138e8:	strbhi	r4, [r9, r8]
   138ec:	cmp	fp, r2
   138f0:	movhi	r0, #34	; 0x22
   138f4:	strbhi	r0, [r9, r2]
   138f8:	add	r2, r8, #2
   138fc:	cmp	fp, r2
   13900:	movhi	r0, #34	; 0x22
   13904:	strbhi	r0, [r9, r2]
   13908:	add	r2, r8, #3
   1390c:	cmp	fp, r2
   13910:	mov	sl, r3
   13914:	ldr	r3, [sp, #40]	; 0x28
   13918:	movhi	r0, #63	; 0x3f
   1391c:	mov	r4, r1
   13920:	strbhi	r0, [r9, r2]
   13924:	add	r8, r8, #4
   13928:	mov	r1, r3
   1392c:	str	r3, [sp, #32]
   13930:	b	12ab0 <close@plt+0x1b4c>
   13934:	str	r3, [sp, #32]
   13938:	mov	r3, r7
   1393c:	b	135fc <close@plt+0x2698>
   13940:	mov	r1, #0
   13944:	str	r1, [sp, #32]
   13948:	b	12ab0 <close@plt+0x1b4c>
   1394c:	mov	sl, r9
   13950:	ldr	r3, [sp, #56]	; 0x38
   13954:	mov	r9, fp
   13958:	ldr	r2, [sp, #64]	; 0x40
   1395c:	b	1362c <close@plt+0x26c8>
   13960:	str	r2, [sp, #32]
   13964:	mov	r1, #0
   13968:	b	12ab0 <close@plt+0x1b4c>
   1396c:	ldr	r2, [sp, #76]	; 0x4c
   13970:	mov	sl, r9
   13974:	mov	r9, fp
   13978:	mov	fp, r8
   1397c:	ldr	r1, [sp, #72]	; 0x48
   13980:	cmp	r1, #0
   13984:	moveq	r3, #0
   13988:	andne	r3, r2, #1
   1398c:	cmp	r3, #0
   13990:	beq	139bc <close@plt+0x2a58>
   13994:	ldrb	r3, [r1]
   13998:	cmp	r3, #0
   1399c:	beq	139bc <close@plt+0x2a58>
   139a0:	mov	r2, r1
   139a4:	cmp	r9, fp
   139a8:	strbhi	r3, [sl, fp]
   139ac:	ldrb	r3, [r2, #1]!
   139b0:	add	fp, fp, #1
   139b4:	cmp	r3, #0
   139b8:	bne	139a4 <close@plt+0x2a40>
   139bc:	cmp	r9, fp
   139c0:	movhi	r3, #0
   139c4:	strbhi	r3, [sl, fp]
   139c8:	b	13684 <close@plt+0x2720>
   139cc:	ldr	r3, [sp, #192]	; 0xc0
   139d0:	mov	ip, #5
   139d4:	str	r3, [sp, #16]
   139d8:	ldr	r3, [sp, #188]	; 0xbc
   139dc:	ldr	r2, [sp, #44]	; 0x2c
   139e0:	str	r3, [sp, #12]
   139e4:	ldr	r3, [sp, #184]	; 0xb8
   139e8:	ldr	r1, [sp, #84]	; 0x54
   139ec:	str	r3, [sp, #8]
   139f0:	ldr	r3, [sp, #180]	; 0xb4
   139f4:	mov	r0, r9
   139f8:	str	r3, [sp, #4]
   139fc:	str	ip, [sp]
   13a00:	ldr	r3, [sp, #24]
   13a04:	bl	124dc <close@plt+0x1578>
   13a08:	mov	fp, r0
   13a0c:	b	13684 <close@plt+0x2720>
   13a10:	mov	sl, r9
   13a14:	mov	r9, fp
   13a18:	mov	fp, r8
   13a1c:	b	1397c <close@plt+0x2a18>
   13a20:	ldr	r1, [sp, #176]	; 0xb0
   13a24:	bl	123bc <close@plt+0x1458>
   13a28:	str	r0, [sp, #192]	; 0xc0
   13a2c:	b	12998 <close@plt+0x1a34>
   13a30:	ldr	r1, [sp, #176]	; 0xb0
   13a34:	bl	123bc <close@plt+0x1458>
   13a38:	str	r0, [sp, #188]	; 0xbc
   13a3c:	b	12978 <close@plt+0x1a14>
   13a40:	mov	sl, r9
   13a44:	mov	r2, r3
   13a48:	mov	r9, fp
   13a4c:	mov	fp, r8
   13a50:	b	1397c <close@plt+0x2a18>
   13a54:	mov	sl, r9
   13a58:	mov	r9, fp
   13a5c:	b	13640 <close@plt+0x26dc>
   13a60:	push	{r4, r5, r6, lr}
   13a64:	mov	r5, r0
   13a68:	bl	10e80 <__errno_location@plt>
   13a6c:	cmp	r5, #0
   13a70:	mov	r1, #48	; 0x30
   13a74:	mov	r4, r0
   13a78:	ldr	r0, [pc, #16]	; 13a90 <close@plt+0x2b2c>
   13a7c:	ldr	r6, [r4]
   13a80:	movne	r0, r5
   13a84:	bl	17308 <close@plt+0x63a4>
   13a88:	str	r6, [r4]
   13a8c:	pop	{r4, r5, r6, pc}
   13a90:	andeq	r9, r2, r0, lsl #3
   13a94:	ldr	r3, [pc, #12]	; 13aa8 <close@plt+0x2b44>
   13a98:	cmp	r0, #0
   13a9c:	moveq	r0, r3
   13aa0:	ldr	r0, [r0]
   13aa4:	bx	lr
   13aa8:	andeq	r9, r2, r0, lsl #3
   13aac:	ldr	r3, [pc, #12]	; 13ac0 <close@plt+0x2b5c>
   13ab0:	cmp	r0, #0
   13ab4:	moveq	r0, r3
   13ab8:	str	r1, [r0]
   13abc:	bx	lr
   13ac0:	andeq	r9, r2, r0, lsl #3
   13ac4:	ldr	r3, [pc, #52]	; 13b00 <close@plt+0x2b9c>
   13ac8:	cmp	r0, #0
   13acc:	moveq	r0, r3
   13ad0:	add	r3, r0, #8
   13ad4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ad8:	lsr	lr, r1, #5
   13adc:	and	r1, r1, #31
   13ae0:	ldr	ip, [r3, lr, lsl #2]
   13ae4:	lsr	r0, ip, r1
   13ae8:	eor	r2, r2, r0
   13aec:	and	r2, r2, #1
   13af0:	and	r0, r0, #1
   13af4:	eor	r1, ip, r2, lsl r1
   13af8:	str	r1, [r3, lr, lsl #2]
   13afc:	pop	{pc}		; (ldr pc, [sp], #4)
   13b00:	andeq	r9, r2, r0, lsl #3
   13b04:	ldr	r3, [pc, #16]	; 13b1c <close@plt+0x2bb8>
   13b08:	cmp	r0, #0
   13b0c:	movne	r3, r0
   13b10:	ldr	r0, [r3, #4]
   13b14:	str	r1, [r3, #4]
   13b18:	bx	lr
   13b1c:	andeq	r9, r2, r0, lsl #3
   13b20:	ldr	r3, [pc, #44]	; 13b54 <close@plt+0x2bf0>
   13b24:	cmp	r0, #0
   13b28:	moveq	r0, r3
   13b2c:	mov	ip, #10
   13b30:	cmp	r2, #0
   13b34:	cmpne	r1, #0
   13b38:	str	ip, [r0]
   13b3c:	beq	13b4c <close@plt+0x2be8>
   13b40:	str	r1, [r0, #40]	; 0x28
   13b44:	str	r2, [r0, #44]	; 0x2c
   13b48:	bx	lr
   13b4c:	push	{r4, lr}
   13b50:	bl	10f58 <abort@plt>
   13b54:	andeq	r9, r2, r0, lsl #3
   13b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b5c:	sub	sp, sp, #24
   13b60:	ldr	ip, [pc, #108]	; 13bd4 <close@plt+0x2c70>
   13b64:	ldr	r4, [sp, #56]	; 0x38
   13b68:	mov	r9, r2
   13b6c:	cmp	r4, #0
   13b70:	moveq	r4, ip
   13b74:	mov	sl, r3
   13b78:	mov	r7, r0
   13b7c:	mov	r8, r1
   13b80:	bl	10e80 <__errno_location@plt>
   13b84:	ldr	r3, [r4, #44]	; 0x2c
   13b88:	mov	r1, r8
   13b8c:	ldr	r6, [r0]
   13b90:	str	r3, [sp, #16]
   13b94:	ldr	r2, [r4, #40]	; 0x28
   13b98:	add	r3, r4, #8
   13b9c:	str	r3, [sp, #8]
   13ba0:	str	r2, [sp, #12]
   13ba4:	ldr	r2, [r4, #4]
   13ba8:	mov	r5, r0
   13bac:	str	r2, [sp, #4]
   13bb0:	ldr	ip, [r4]
   13bb4:	mov	r3, sl
   13bb8:	mov	r2, r9
   13bbc:	mov	r0, r7
   13bc0:	str	ip, [sp]
   13bc4:	bl	124dc <close@plt+0x1578>
   13bc8:	str	r6, [r5]
   13bcc:	add	sp, sp, #24
   13bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bd4:	andeq	r9, r2, r0, lsl #3
   13bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bdc:	cmp	r2, #0
   13be0:	sub	sp, sp, #36	; 0x24
   13be4:	ldr	r4, [pc, #164]	; 13c90 <close@plt+0x2d2c>
   13be8:	mov	r8, r1
   13bec:	movne	r4, r2
   13bf0:	mov	r7, r0
   13bf4:	bl	10e80 <__errno_location@plt>
   13bf8:	ldr	r3, [r4, #44]	; 0x2c
   13bfc:	ldr	r5, [r4, #4]
   13c00:	add	r9, r4, #8
   13c04:	orr	r5, r5, #1
   13c08:	mov	r1, #0
   13c0c:	mov	r2, r7
   13c10:	ldr	fp, [r0]
   13c14:	str	r3, [sp, #16]
   13c18:	ldr	r3, [r4, #40]	; 0x28
   13c1c:	stmib	sp, {r5, r9}
   13c20:	str	r3, [sp, #12]
   13c24:	ldr	r3, [r4]
   13c28:	mov	r6, r0
   13c2c:	str	r3, [sp]
   13c30:	mov	r0, r1
   13c34:	mov	r3, r8
   13c38:	bl	124dc <close@plt+0x1578>
   13c3c:	add	r1, r0, #1
   13c40:	mov	r0, r1
   13c44:	str	r1, [sp, #28]
   13c48:	bl	16dc4 <close@plt+0x5e60>
   13c4c:	ldr	r3, [r4, #44]	; 0x2c
   13c50:	ldr	r1, [sp, #28]
   13c54:	str	r3, [sp, #16]
   13c58:	ldr	r3, [r4, #40]	; 0x28
   13c5c:	str	r5, [sp, #4]
   13c60:	str	r3, [sp, #12]
   13c64:	str	r9, [sp, #8]
   13c68:	ldr	ip, [r4]
   13c6c:	mov	r3, r8
   13c70:	mov	r2, r7
   13c74:	str	ip, [sp]
   13c78:	mov	sl, r0
   13c7c:	bl	124dc <close@plt+0x1578>
   13c80:	mov	r0, sl
   13c84:	str	fp, [r6]
   13c88:	add	sp, sp, #36	; 0x24
   13c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c90:	andeq	r9, r2, r0, lsl #3
   13c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c98:	cmp	r3, #0
   13c9c:	sub	sp, sp, #44	; 0x2c
   13ca0:	ldr	r4, [pc, #192]	; 13d68 <close@plt+0x2e04>
   13ca4:	mov	r6, r2
   13ca8:	movne	r4, r3
   13cac:	mov	r9, r1
   13cb0:	mov	r8, r0
   13cb4:	bl	10e80 <__errno_location@plt>
   13cb8:	ldr	r3, [r4, #44]	; 0x2c
   13cbc:	ldr	r5, [r4, #4]
   13cc0:	add	sl, r4, #8
   13cc4:	cmp	r6, #0
   13cc8:	orreq	r5, r5, #1
   13ccc:	mov	r1, #0
   13cd0:	ldr	r2, [r0]
   13cd4:	str	r3, [sp, #16]
   13cd8:	ldr	r3, [r4, #40]	; 0x28
   13cdc:	stmib	sp, {r5, sl}
   13ce0:	str	r3, [sp, #12]
   13ce4:	ldr	r3, [r4]
   13ce8:	mov	r7, r0
   13cec:	str	r2, [sp, #28]
   13cf0:	str	r3, [sp]
   13cf4:	mov	r2, r8
   13cf8:	mov	r3, r9
   13cfc:	mov	r0, r1
   13d00:	bl	124dc <close@plt+0x1578>
   13d04:	add	r1, r0, #1
   13d08:	mov	fp, r0
   13d0c:	mov	r0, r1
   13d10:	str	r1, [sp, #36]	; 0x24
   13d14:	bl	16dc4 <close@plt+0x5e60>
   13d18:	ldr	r3, [r4, #44]	; 0x2c
   13d1c:	mov	r2, r8
   13d20:	str	r3, [sp, #16]
   13d24:	ldr	r3, [r4, #40]	; 0x28
   13d28:	str	r5, [sp, #4]
   13d2c:	str	r3, [sp, #12]
   13d30:	str	sl, [sp, #8]
   13d34:	ldr	ip, [r4]
   13d38:	ldr	r1, [sp, #36]	; 0x24
   13d3c:	mov	r3, r9
   13d40:	str	ip, [sp]
   13d44:	str	r0, [sp, #32]
   13d48:	bl	124dc <close@plt+0x1578>
   13d4c:	ldr	r2, [sp, #28]
   13d50:	cmp	r6, #0
   13d54:	str	r2, [r7]
   13d58:	ldr	r0, [sp, #32]
   13d5c:	strne	fp, [r6]
   13d60:	add	sp, sp, #44	; 0x2c
   13d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d68:	andeq	r9, r2, r0, lsl #3
   13d6c:	push	{r4, r5, r6, r7, r8, lr}
   13d70:	ldr	r6, [pc, #116]	; 13dec <close@plt+0x2e88>
   13d74:	ldr	r3, [r6, #4]
   13d78:	ldr	r7, [r6]
   13d7c:	cmp	r3, #1
   13d80:	movgt	r5, r7
   13d84:	movgt	r4, #1
   13d88:	ble	13da8 <close@plt+0x2e44>
   13d8c:	ldr	r0, [r5, #12]
   13d90:	bl	12210 <close@plt+0x12ac>
   13d94:	ldr	r3, [r6, #4]
   13d98:	add	r4, r4, #1
   13d9c:	cmp	r3, r4
   13da0:	add	r5, r5, #8
   13da4:	bgt	13d8c <close@plt+0x2e28>
   13da8:	ldr	r0, [r7, #4]
   13dac:	ldr	r4, [pc, #60]	; 13df0 <close@plt+0x2e8c>
   13db0:	cmp	r0, r4
   13db4:	beq	13dc8 <close@plt+0x2e64>
   13db8:	bl	12210 <close@plt+0x12ac>
   13dbc:	mov	r3, #256	; 0x100
   13dc0:	str	r4, [r6, #12]
   13dc4:	str	r3, [r6, #8]
   13dc8:	ldr	r4, [pc, #36]	; 13df4 <close@plt+0x2e90>
   13dcc:	cmp	r7, r4
   13dd0:	beq	13de0 <close@plt+0x2e7c>
   13dd4:	mov	r0, r7
   13dd8:	bl	12210 <close@plt+0x12ac>
   13ddc:	str	r4, [r6]
   13de0:	mov	r3, #1
   13de4:	str	r3, [r6, #4]
   13de8:	pop	{r4, r5, r6, r7, r8, pc}
   13dec:	strdeq	r9, [r2], -ip
   13df0:			; <UNDEFINED> instruction: 0x000291b0
   13df4:	andeq	r9, r2, r4, lsl #2
   13df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dfc:	sub	sp, sp, #44	; 0x2c
   13e00:	mov	r5, r0
   13e04:	mov	sl, r1
   13e08:	bl	10e80 <__errno_location@plt>
   13e0c:	ldr	r4, [pc, #400]	; 13fa4 <close@plt+0x3040>
   13e10:	cmn	r5, #-2147483647	; 0x80000001
   13e14:	ldr	r6, [r4]
   13e18:	mov	r8, r0
   13e1c:	movne	r0, #0
   13e20:	moveq	r0, #1
   13e24:	ldr	r3, [r8]
   13e28:	orrs	r0, r0, r5, lsr #31
   13e2c:	str	r3, [sp, #24]
   13e30:	bne	13fa0 <close@plt+0x303c>
   13e34:	ldr	r2, [r4, #4]
   13e38:	cmp	r5, r2
   13e3c:	blt	13e9c <close@plt+0x2f38>
   13e40:	add	r7, r4, #8
   13e44:	cmp	r6, r7
   13e48:	str	r2, [sp, #36]	; 0x24
   13e4c:	beq	13f70 <close@plt+0x300c>
   13e50:	mov	r3, #8
   13e54:	sub	r2, r5, r2
   13e58:	mov	r0, r6
   13e5c:	str	r3, [sp]
   13e60:	add	r2, r2, #1
   13e64:	mvn	r3, #-2147483648	; 0x80000000
   13e68:	add	r1, sp, #36	; 0x24
   13e6c:	bl	16fe0 <close@plt+0x607c>
   13e70:	mov	r6, r0
   13e74:	str	r0, [r4]
   13e78:	ldr	r0, [r4, #4]
   13e7c:	ldr	r2, [sp, #36]	; 0x24
   13e80:	mov	r1, #0
   13e84:	sub	r2, r2, r0
   13e88:	add	r0, r6, r0, lsl #3
   13e8c:	lsl	r2, r2, #3
   13e90:	bl	10ea4 <memset@plt>
   13e94:	ldr	r3, [sp, #36]	; 0x24
   13e98:	str	r3, [r4, #4]
   13e9c:	ldr	r4, [pc, #260]	; 13fa8 <close@plt+0x3044>
   13ea0:	add	fp, r6, r5, lsl #3
   13ea4:	ldr	r9, [r6, r5, lsl #3]
   13ea8:	ldr	r0, [r4, #4]
   13eac:	ldr	r3, [r4]
   13eb0:	ldr	r7, [fp, #4]
   13eb4:	ldr	r1, [r4, #44]	; 0x2c
   13eb8:	ldr	r2, [r4, #40]	; 0x28
   13ebc:	orr	r0, r0, #1
   13ec0:	str	r3, [sp]
   13ec4:	add	r3, r4, #8
   13ec8:	str	r0, [sp, #28]
   13ecc:	str	r0, [sp, #4]
   13ed0:	str	r1, [sp, #16]
   13ed4:	str	r2, [sp, #12]
   13ed8:	str	r3, [sp, #8]
   13edc:	mov	r0, r7
   13ee0:	mov	r1, r9
   13ee4:	mvn	r3, #0
   13ee8:	mov	r2, sl
   13eec:	bl	124dc <close@plt+0x1578>
   13ef0:	cmp	r9, r0
   13ef4:	bhi	13f5c <close@plt+0x2ff8>
   13ef8:	add	r3, r4, #48	; 0x30
   13efc:	add	r9, r0, #1
   13f00:	cmp	r7, r3
   13f04:	str	r9, [r6, r5, lsl #3]
   13f08:	beq	13f14 <close@plt+0x2fb0>
   13f0c:	mov	r0, r7
   13f10:	bl	12210 <close@plt+0x12ac>
   13f14:	mov	r0, r9
   13f18:	bl	16dc4 <close@plt+0x5e60>
   13f1c:	ldr	ip, [r4, #44]	; 0x2c
   13f20:	ldr	r3, [r4]
   13f24:	ldr	lr, [r4, #40]	; 0x28
   13f28:	ldr	r4, [pc, #124]	; 13fac <close@plt+0x3048>
   13f2c:	mov	r2, sl
   13f30:	mov	r1, r9
   13f34:	str	r0, [fp, #4]
   13f38:	str	r4, [sp, #8]
   13f3c:	ldr	r4, [sp, #28]
   13f40:	str	r3, [sp]
   13f44:	str	r4, [sp, #4]
   13f48:	str	ip, [sp, #16]
   13f4c:	str	lr, [sp, #12]
   13f50:	mvn	r3, #0
   13f54:	mov	r7, r0
   13f58:	bl	124dc <close@plt+0x1578>
   13f5c:	ldr	r3, [sp, #24]
   13f60:	mov	r0, r7
   13f64:	str	r3, [r8]
   13f68:	add	sp, sp, #44	; 0x2c
   13f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f70:	mov	r3, #8
   13f74:	sub	r2, r5, r2
   13f78:	str	r3, [sp]
   13f7c:	add	r1, sp, #36	; 0x24
   13f80:	add	r2, r2, #1
   13f84:	mvn	r3, #-2147483648	; 0x80000000
   13f88:	bl	16fe0 <close@plt+0x607c>
   13f8c:	mov	r6, r0
   13f90:	ldm	r7, {r0, r1}
   13f94:	str	r6, [r4]
   13f98:	stm	r6, {r0, r1}
   13f9c:	b	13e78 <close@plt+0x2f14>
   13fa0:	bl	10f58 <abort@plt>
   13fa4:	strdeq	r9, [r2], -ip
   13fa8:	andeq	r9, r2, r0, lsl #3
   13fac:	andeq	r9, r2, r8, lsl #3
   13fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fb4:	sub	sp, sp, #52	; 0x34
   13fb8:	mov	r5, r0
   13fbc:	mov	sl, r1
   13fc0:	mov	fp, r2
   13fc4:	bl	10e80 <__errno_location@plt>
   13fc8:	ldr	r4, [pc, #408]	; 14168 <close@plt+0x3204>
   13fcc:	cmn	r5, #-2147483647	; 0x80000001
   13fd0:	ldr	r6, [r4]
   13fd4:	mov	r8, r0
   13fd8:	movne	r0, #0
   13fdc:	moveq	r0, #1
   13fe0:	ldr	r3, [r8]
   13fe4:	orrs	r0, r0, r5, lsr #31
   13fe8:	str	r3, [sp, #28]
   13fec:	bne	14164 <close@plt+0x3200>
   13ff0:	ldr	r2, [r4, #4]
   13ff4:	cmp	r5, r2
   13ff8:	blt	14058 <close@plt+0x30f4>
   13ffc:	add	r7, r4, #8
   14000:	cmp	r6, r7
   14004:	str	r2, [sp, #44]	; 0x2c
   14008:	beq	14134 <close@plt+0x31d0>
   1400c:	mov	r3, #8
   14010:	sub	r2, r5, r2
   14014:	mov	r0, r6
   14018:	str	r3, [sp]
   1401c:	add	r2, r2, #1
   14020:	mvn	r3, #-2147483648	; 0x80000000
   14024:	add	r1, sp, #44	; 0x2c
   14028:	bl	16fe0 <close@plt+0x607c>
   1402c:	mov	r6, r0
   14030:	str	r0, [r4]
   14034:	ldr	r0, [r4, #4]
   14038:	ldr	r2, [sp, #44]	; 0x2c
   1403c:	mov	r1, #0
   14040:	sub	r2, r2, r0
   14044:	add	r0, r6, r0, lsl #3
   14048:	lsl	r2, r2, #3
   1404c:	bl	10ea4 <memset@plt>
   14050:	ldr	r3, [sp, #44]	; 0x2c
   14054:	str	r3, [r4, #4]
   14058:	ldr	r4, [pc, #268]	; 1416c <close@plt+0x3208>
   1405c:	add	r3, r6, r5, lsl #3
   14060:	str	r3, [sp, #32]
   14064:	ldr	r7, [r3, #4]
   14068:	ldr	r0, [r4, #4]
   1406c:	ldr	r3, [r4]
   14070:	ldr	r9, [r6, r5, lsl #3]
   14074:	ldr	r1, [r4, #44]	; 0x2c
   14078:	ldr	r2, [r4, #40]	; 0x28
   1407c:	orr	r0, r0, #1
   14080:	str	r3, [sp]
   14084:	add	r3, r4, #8
   14088:	str	r0, [sp, #36]	; 0x24
   1408c:	str	r0, [sp, #4]
   14090:	str	r1, [sp, #16]
   14094:	str	r2, [sp, #12]
   14098:	str	r3, [sp, #8]
   1409c:	mov	r0, r7
   140a0:	mov	r1, r9
   140a4:	mov	r3, fp
   140a8:	mov	r2, sl
   140ac:	bl	124dc <close@plt+0x1578>
   140b0:	cmp	r9, r0
   140b4:	bhi	14120 <close@plt+0x31bc>
   140b8:	add	r3, r4, #48	; 0x30
   140bc:	add	r9, r0, #1
   140c0:	cmp	r7, r3
   140c4:	str	r9, [r6, r5, lsl #3]
   140c8:	beq	140d4 <close@plt+0x3170>
   140cc:	mov	r0, r7
   140d0:	bl	12210 <close@plt+0x12ac>
   140d4:	mov	r0, r9
   140d8:	bl	16dc4 <close@plt+0x5e60>
   140dc:	ldr	ip, [sp, #32]
   140e0:	ldr	lr, [r4, #44]	; 0x2c
   140e4:	ldr	r5, [r4, #40]	; 0x28
   140e8:	mov	r3, fp
   140ec:	mov	r2, sl
   140f0:	mov	r1, r9
   140f4:	str	r0, [ip, #4]
   140f8:	ldr	ip, [r4]
   140fc:	ldr	r4, [pc, #108]	; 14170 <close@plt+0x320c>
   14100:	str	lr, [sp, #16]
   14104:	str	r4, [sp, #8]
   14108:	ldr	r4, [sp, #36]	; 0x24
   1410c:	str	r5, [sp, #12]
   14110:	str	r4, [sp, #4]
   14114:	str	ip, [sp]
   14118:	mov	r7, r0
   1411c:	bl	124dc <close@plt+0x1578>
   14120:	ldr	r3, [sp, #28]
   14124:	mov	r0, r7
   14128:	str	r3, [r8]
   1412c:	add	sp, sp, #52	; 0x34
   14130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14134:	mov	r3, #8
   14138:	sub	r2, r5, r2
   1413c:	str	r3, [sp]
   14140:	add	r1, sp, #44	; 0x2c
   14144:	add	r2, r2, #1
   14148:	mvn	r3, #-2147483648	; 0x80000000
   1414c:	bl	16fe0 <close@plt+0x607c>
   14150:	mov	r6, r0
   14154:	ldm	r7, {r0, r1}
   14158:	str	r6, [r4]
   1415c:	stm	r6, {r0, r1}
   14160:	b	14034 <close@plt+0x30d0>
   14164:	bl	10f58 <abort@plt>
   14168:	strdeq	r9, [r2], -ip
   1416c:	andeq	r9, r2, r0, lsl #3
   14170:	andeq	r9, r2, r8, lsl #3
   14174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14178:	sub	sp, sp, #44	; 0x2c
   1417c:	mov	sl, r0
   14180:	bl	10e80 <__errno_location@plt>
   14184:	ldr	r4, [pc, #352]	; 142ec <close@plt+0x3388>
   14188:	ldr	r2, [r4, #4]
   1418c:	ldr	r5, [r4]
   14190:	cmp	r2, #0
   14194:	ldr	r3, [r0]
   14198:	mov	r8, r0
   1419c:	str	r3, [sp, #28]
   141a0:	bgt	141fc <close@plt+0x3298>
   141a4:	add	r6, r4, #8
   141a8:	cmp	r5, r6
   141ac:	str	r2, [sp, #36]	; 0x24
   141b0:	beq	142bc <close@plt+0x3358>
   141b4:	mov	r3, #8
   141b8:	mov	r0, r5
   141bc:	str	r3, [sp]
   141c0:	rsb	r2, r2, #1
   141c4:	mvn	r3, #-2147483648	; 0x80000000
   141c8:	add	r1, sp, #36	; 0x24
   141cc:	bl	16fe0 <close@plt+0x607c>
   141d0:	mov	r5, r0
   141d4:	str	r0, [r4]
   141d8:	ldr	r0, [r4, #4]
   141dc:	ldr	r2, [sp, #36]	; 0x24
   141e0:	mov	r1, #0
   141e4:	sub	r2, r2, r0
   141e8:	add	r0, r5, r0, lsl #3
   141ec:	lsl	r2, r2, #3
   141f0:	bl	10ea4 <memset@plt>
   141f4:	ldr	r3, [sp, #36]	; 0x24
   141f8:	str	r3, [r4, #4]
   141fc:	ldr	r4, [pc, #236]	; 142f0 <close@plt+0x338c>
   14200:	ldr	r9, [r5]
   14204:	ldr	r6, [r5, #4]
   14208:	ldr	r7, [r4, #4]
   1420c:	ldr	r1, [r4, #44]	; 0x2c
   14210:	ldr	r2, [r4, #40]	; 0x28
   14214:	ldr	r3, [r4]
   14218:	orr	r7, r7, #1
   1421c:	add	fp, r4, #8
   14220:	str	r1, [sp, #16]
   14224:	str	r2, [sp, #12]
   14228:	str	r3, [sp]
   1422c:	str	r7, [sp, #4]
   14230:	str	fp, [sp, #8]
   14234:	mov	r1, r9
   14238:	mov	r0, r6
   1423c:	mvn	r3, #0
   14240:	mov	r2, sl
   14244:	bl	124dc <close@plt+0x1578>
   14248:	cmp	r9, r0
   1424c:	bhi	142a8 <close@plt+0x3344>
   14250:	add	r3, r4, #48	; 0x30
   14254:	add	r9, r0, #1
   14258:	cmp	r6, r3
   1425c:	str	r9, [r5]
   14260:	beq	1426c <close@plt+0x3308>
   14264:	mov	r0, r6
   14268:	bl	12210 <close@plt+0x12ac>
   1426c:	mov	r0, r9
   14270:	bl	16dc4 <close@plt+0x5e60>
   14274:	ldr	ip, [r4, #44]	; 0x2c
   14278:	ldr	r3, [r4]
   1427c:	ldr	lr, [r4, #40]	; 0x28
   14280:	mov	r2, sl
   14284:	mov	r1, r9
   14288:	str	r0, [r5, #4]
   1428c:	str	r3, [sp]
   14290:	stmib	sp, {r7, fp}
   14294:	str	ip, [sp, #16]
   14298:	str	lr, [sp, #12]
   1429c:	mvn	r3, #0
   142a0:	mov	r6, r0
   142a4:	bl	124dc <close@plt+0x1578>
   142a8:	ldr	r3, [sp, #28]
   142ac:	mov	r0, r6
   142b0:	str	r3, [r8]
   142b4:	add	sp, sp, #44	; 0x2c
   142b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142bc:	mov	r3, #8
   142c0:	str	r3, [sp]
   142c4:	add	r1, sp, #36	; 0x24
   142c8:	rsb	r2, r2, #1
   142cc:	mvn	r3, #-2147483648	; 0x80000000
   142d0:	mov	r0, #0
   142d4:	bl	16fe0 <close@plt+0x607c>
   142d8:	mov	r5, r0
   142dc:	ldm	r6, {r0, r1}
   142e0:	str	r5, [r4]
   142e4:	stm	r5, {r0, r1}
   142e8:	b	141d8 <close@plt+0x3274>
   142ec:	strdeq	r9, [r2], -ip
   142f0:	andeq	r9, r2, r0, lsl #3
   142f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142f8:	sub	sp, sp, #44	; 0x2c
   142fc:	mov	r9, r0
   14300:	mov	sl, r1
   14304:	bl	10e80 <__errno_location@plt>
   14308:	ldr	r4, [pc, #364]	; 1447c <close@plt+0x3518>
   1430c:	ldr	r2, [r4, #4]
   14310:	ldr	r5, [r4]
   14314:	cmp	r2, #0
   14318:	ldr	r3, [r0]
   1431c:	mov	r7, r0
   14320:	str	r3, [sp, #24]
   14324:	bgt	14380 <close@plt+0x341c>
   14328:	add	r6, r4, #8
   1432c:	cmp	r5, r6
   14330:	str	r2, [sp, #36]	; 0x24
   14334:	beq	1444c <close@plt+0x34e8>
   14338:	mov	r3, #8
   1433c:	mov	r0, r5
   14340:	str	r3, [sp]
   14344:	rsb	r2, r2, #1
   14348:	mvn	r3, #-2147483648	; 0x80000000
   1434c:	add	r1, sp, #36	; 0x24
   14350:	bl	16fe0 <close@plt+0x607c>
   14354:	mov	r5, r0
   14358:	str	r0, [r4]
   1435c:	ldr	r0, [r4, #4]
   14360:	ldr	r2, [sp, #36]	; 0x24
   14364:	mov	r1, #0
   14368:	sub	r2, r2, r0
   1436c:	add	r0, r5, r0, lsl #3
   14370:	lsl	r2, r2, #3
   14374:	bl	10ea4 <memset@plt>
   14378:	ldr	r3, [sp, #36]	; 0x24
   1437c:	str	r3, [r4, #4]
   14380:	ldr	r4, [pc, #248]	; 14480 <close@plt+0x351c>
   14384:	ldr	r8, [r5]
   14388:	ldr	r6, [r5, #4]
   1438c:	ldr	r0, [r4, #4]
   14390:	ldr	r1, [r4, #44]	; 0x2c
   14394:	ldr	r2, [r4, #40]	; 0x28
   14398:	ldr	r3, [r4]
   1439c:	orr	r0, r0, #1
   143a0:	add	fp, r4, #8
   143a4:	str	r0, [sp, #28]
   143a8:	str	r0, [sp, #4]
   143ac:	str	r1, [sp, #16]
   143b0:	str	r2, [sp, #12]
   143b4:	str	r3, [sp]
   143b8:	str	fp, [sp, #8]
   143bc:	mov	r1, r8
   143c0:	mov	r0, r6
   143c4:	mov	r3, sl
   143c8:	mov	r2, r9
   143cc:	bl	124dc <close@plt+0x1578>
   143d0:	cmp	r8, r0
   143d4:	bhi	14438 <close@plt+0x34d4>
   143d8:	add	r3, r4, #48	; 0x30
   143dc:	add	r8, r0, #1
   143e0:	cmp	r6, r3
   143e4:	str	r8, [r5]
   143e8:	beq	143f4 <close@plt+0x3490>
   143ec:	mov	r0, r6
   143f0:	bl	12210 <close@plt+0x12ac>
   143f4:	mov	r0, r8
   143f8:	bl	16dc4 <close@plt+0x5e60>
   143fc:	ldr	lr, [r4, #44]	; 0x2c
   14400:	ldr	ip, [r4]
   14404:	mov	r3, sl
   14408:	mov	r2, r9
   1440c:	mov	r1, r8
   14410:	str	r0, [r5, #4]
   14414:	ldr	r5, [r4, #40]	; 0x28
   14418:	ldr	r4, [sp, #28]
   1441c:	str	fp, [sp, #8]
   14420:	str	r4, [sp, #4]
   14424:	str	lr, [sp, #16]
   14428:	str	r5, [sp, #12]
   1442c:	str	ip, [sp]
   14430:	mov	r6, r0
   14434:	bl	124dc <close@plt+0x1578>
   14438:	ldr	r3, [sp, #24]
   1443c:	mov	r0, r6
   14440:	str	r3, [r7]
   14444:	add	sp, sp, #44	; 0x2c
   14448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1444c:	mov	r3, #8
   14450:	str	r3, [sp]
   14454:	add	r1, sp, #36	; 0x24
   14458:	rsb	r2, r2, #1
   1445c:	mvn	r3, #-2147483648	; 0x80000000
   14460:	mov	r0, #0
   14464:	bl	16fe0 <close@plt+0x607c>
   14468:	mov	r5, r0
   1446c:	ldm	r6, {r0, r1}
   14470:	str	r5, [r4]
   14474:	stm	r5, {r0, r1}
   14478:	b	1435c <close@plt+0x33f8>
   1447c:	strdeq	r9, [r2], -ip
   14480:	andeq	r9, r2, r0, lsl #3
   14484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14488:	sub	sp, sp, #132	; 0x84
   1448c:	mov	r5, r1
   14490:	mov	r4, r0
   14494:	mov	r9, r2
   14498:	add	r0, sp, #80	; 0x50
   1449c:	mov	r2, #48	; 0x30
   144a0:	mov	r1, #0
   144a4:	bl	10ea4 <memset@plt>
   144a8:	cmp	r5, #10
   144ac:	beq	14664 <close@plt+0x3700>
   144b0:	add	lr, sp, #80	; 0x50
   144b4:	str	r5, [sp, #80]	; 0x50
   144b8:	ldm	lr!, {r0, r1, r2, r3}
   144bc:	add	ip, sp, #32
   144c0:	ldr	r6, [pc, #416]	; 14668 <close@plt+0x3704>
   144c4:	stmia	ip!, {r0, r1, r2, r3}
   144c8:	ldm	lr!, {r0, r1, r2, r3}
   144cc:	stmia	ip!, {r0, r1, r2, r3}
   144d0:	ldm	lr, {r0, r1, r2, r3}
   144d4:	stm	ip, {r0, r1, r2, r3}
   144d8:	bl	10e80 <__errno_location@plt>
   144dc:	cmn	r4, #-2147483647	; 0x80000001
   144e0:	ldr	r5, [r6]
   144e4:	mov	r7, r0
   144e8:	movne	r0, #0
   144ec:	moveq	r0, #1
   144f0:	ldr	r3, [r7]
   144f4:	orrs	r0, r0, r4, lsr #31
   144f8:	str	r3, [sp, #24]
   144fc:	bne	14664 <close@plt+0x3700>
   14500:	ldr	r2, [r6, #4]
   14504:	cmp	r4, r2
   14508:	blt	14568 <close@plt+0x3604>
   1450c:	add	r8, r6, #8
   14510:	cmp	r5, r8
   14514:	str	r2, [sp, #80]	; 0x50
   14518:	beq	14634 <close@plt+0x36d0>
   1451c:	mov	r3, #8
   14520:	sub	r2, r4, r2
   14524:	mov	r0, r5
   14528:	str	r3, [sp]
   1452c:	add	r2, r2, #1
   14530:	add	r1, sp, #80	; 0x50
   14534:	mvn	r3, #-2147483648	; 0x80000000
   14538:	bl	16fe0 <close@plt+0x607c>
   1453c:	mov	r5, r0
   14540:	str	r0, [r6]
   14544:	ldr	r0, [r6, #4]
   14548:	ldr	r2, [sp, #80]	; 0x50
   1454c:	mov	r1, #0
   14550:	sub	r2, r2, r0
   14554:	add	r0, r5, r0, lsl #3
   14558:	lsl	r2, r2, #3
   1455c:	bl	10ea4 <memset@plt>
   14560:	ldr	r3, [sp, #80]	; 0x50
   14564:	str	r3, [r6, #4]
   14568:	add	fp, r5, r4, lsl #3
   1456c:	ldr	r1, [sp, #36]	; 0x24
   14570:	ldr	r8, [r5, r4, lsl #3]
   14574:	ldr	r6, [fp, #4]
   14578:	ldr	r2, [sp, #72]	; 0x48
   1457c:	ldr	r3, [sp, #32]
   14580:	ldr	ip, [sp, #76]	; 0x4c
   14584:	orr	r1, r1, #1
   14588:	add	sl, sp, #40	; 0x28
   1458c:	str	r1, [sp, #28]
   14590:	str	r1, [sp, #4]
   14594:	str	r2, [sp, #12]
   14598:	str	r3, [sp]
   1459c:	mov	r0, r6
   145a0:	mov	r1, r8
   145a4:	str	ip, [sp, #16]
   145a8:	str	sl, [sp, #8]
   145ac:	mvn	r3, #0
   145b0:	mov	r2, r9
   145b4:	bl	124dc <close@plt+0x1578>
   145b8:	cmp	r8, r0
   145bc:	bhi	14620 <close@plt+0x36bc>
   145c0:	ldr	r3, [pc, #164]	; 1466c <close@plt+0x3708>
   145c4:	add	r8, r0, #1
   145c8:	cmp	r6, r3
   145cc:	str	r8, [r5, r4, lsl #3]
   145d0:	beq	145dc <close@plt+0x3678>
   145d4:	mov	r0, r6
   145d8:	bl	12210 <close@plt+0x12ac>
   145dc:	mov	r0, r8
   145e0:	bl	16dc4 <close@plt+0x5e60>
   145e4:	ldr	lr, [sp, #76]	; 0x4c
   145e8:	ldr	r3, [sp, #32]
   145ec:	ldr	ip, [sp, #72]	; 0x48
   145f0:	ldr	r4, [sp, #28]
   145f4:	mov	r2, r9
   145f8:	mov	r1, r8
   145fc:	str	r0, [fp, #4]
   14600:	str	r3, [sp]
   14604:	str	sl, [sp, #8]
   14608:	str	r4, [sp, #4]
   1460c:	str	lr, [sp, #16]
   14610:	str	ip, [sp, #12]
   14614:	mvn	r3, #0
   14618:	mov	r6, r0
   1461c:	bl	124dc <close@plt+0x1578>
   14620:	ldr	r3, [sp, #24]
   14624:	mov	r0, r6
   14628:	str	r3, [r7]
   1462c:	add	sp, sp, #132	; 0x84
   14630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14634:	mov	r3, #8
   14638:	sub	r2, r4, r2
   1463c:	add	r1, sp, #80	; 0x50
   14640:	str	r3, [sp]
   14644:	add	r2, r2, #1
   14648:	mvn	r3, #-2147483648	; 0x80000000
   1464c:	bl	16fe0 <close@plt+0x607c>
   14650:	mov	r5, r0
   14654:	ldm	r8, {r0, r1}
   14658:	str	r5, [r6]
   1465c:	stm	r5, {r0, r1}
   14660:	b	14544 <close@plt+0x35e0>
   14664:	bl	10f58 <abort@plt>
   14668:	strdeq	r9, [r2], -ip
   1466c:			; <UNDEFINED> instruction: 0x000291b0
   14670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14674:	sub	sp, sp, #132	; 0x84
   14678:	mov	r5, r1
   1467c:	mov	r4, r0
   14680:	mov	r9, r2
   14684:	add	r0, sp, #80	; 0x50
   14688:	mov	r2, #48	; 0x30
   1468c:	mov	r1, #0
   14690:	mov	sl, r3
   14694:	bl	10ea4 <memset@plt>
   14698:	cmp	r5, #10
   1469c:	beq	14858 <close@plt+0x38f4>
   146a0:	add	lr, sp, #80	; 0x50
   146a4:	str	r5, [sp, #80]	; 0x50
   146a8:	ldm	lr!, {r0, r1, r2, r3}
   146ac:	add	ip, sp, #32
   146b0:	ldr	r6, [pc, #420]	; 1485c <close@plt+0x38f8>
   146b4:	stmia	ip!, {r0, r1, r2, r3}
   146b8:	ldm	lr!, {r0, r1, r2, r3}
   146bc:	stmia	ip!, {r0, r1, r2, r3}
   146c0:	ldm	lr, {r0, r1, r2, r3}
   146c4:	stm	ip, {r0, r1, r2, r3}
   146c8:	bl	10e80 <__errno_location@plt>
   146cc:	cmn	r4, #-2147483647	; 0x80000001
   146d0:	ldr	r5, [r6]
   146d4:	mov	r7, r0
   146d8:	movne	r0, #0
   146dc:	moveq	r0, #1
   146e0:	ldr	r3, [r7]
   146e4:	orrs	r0, r0, r4, lsr #31
   146e8:	str	r3, [sp, #24]
   146ec:	bne	14858 <close@plt+0x38f4>
   146f0:	ldr	r2, [r6, #4]
   146f4:	cmp	r4, r2
   146f8:	blt	14758 <close@plt+0x37f4>
   146fc:	add	r8, r6, #8
   14700:	cmp	r5, r8
   14704:	str	r2, [sp, #80]	; 0x50
   14708:	beq	14828 <close@plt+0x38c4>
   1470c:	mov	r3, #8
   14710:	sub	r2, r4, r2
   14714:	mov	r0, r5
   14718:	str	r3, [sp]
   1471c:	add	r2, r2, #1
   14720:	add	r1, sp, #80	; 0x50
   14724:	mvn	r3, #-2147483648	; 0x80000000
   14728:	bl	16fe0 <close@plt+0x607c>
   1472c:	mov	r5, r0
   14730:	str	r0, [r6]
   14734:	ldr	r0, [r6, #4]
   14738:	ldr	r2, [sp, #80]	; 0x50
   1473c:	mov	r1, #0
   14740:	sub	r2, r2, r0
   14744:	add	r0, r5, r0, lsl #3
   14748:	lsl	r2, r2, #3
   1474c:	bl	10ea4 <memset@plt>
   14750:	ldr	r3, [sp, #80]	; 0x50
   14754:	str	r3, [r6, #4]
   14758:	add	fp, r5, r4, lsl #3
   1475c:	ldr	r3, [sp, #32]
   14760:	ldr	r1, [sp, #36]	; 0x24
   14764:	ldr	r8, [r5, r4, lsl #3]
   14768:	ldr	r6, [fp, #4]
   1476c:	ldr	r2, [sp, #72]	; 0x48
   14770:	ldr	ip, [sp, #76]	; 0x4c
   14774:	orr	r1, r1, #1
   14778:	str	r3, [sp]
   1477c:	add	r3, sp, #40	; 0x28
   14780:	str	r1, [sp, #28]
   14784:	str	r1, [sp, #4]
   14788:	str	r2, [sp, #12]
   1478c:	str	r3, [sp, #8]
   14790:	mov	r0, r6
   14794:	mov	r1, r8
   14798:	str	ip, [sp, #16]
   1479c:	mov	r3, sl
   147a0:	mov	r2, r9
   147a4:	bl	124dc <close@plt+0x1578>
   147a8:	cmp	r8, r0
   147ac:	bhi	14814 <close@plt+0x38b0>
   147b0:	ldr	r3, [pc, #168]	; 14860 <close@plt+0x38fc>
   147b4:	add	r8, r0, #1
   147b8:	cmp	r6, r3
   147bc:	str	r8, [r5, r4, lsl #3]
   147c0:	beq	147cc <close@plt+0x3868>
   147c4:	mov	r0, r6
   147c8:	bl	12210 <close@plt+0x12ac>
   147cc:	mov	r0, r8
   147d0:	bl	16dc4 <close@plt+0x5e60>
   147d4:	add	lr, sp, #40	; 0x28
   147d8:	ldr	ip, [sp, #76]	; 0x4c
   147dc:	ldr	r4, [sp, #72]	; 0x48
   147e0:	ldr	r5, [sp, #28]
   147e4:	mov	r3, sl
   147e8:	mov	r2, r9
   147ec:	mov	r1, r8
   147f0:	str	r0, [fp, #4]
   147f4:	str	lr, [sp, #8]
   147f8:	ldr	lr, [sp, #32]
   147fc:	str	r5, [sp, #4]
   14800:	str	ip, [sp, #16]
   14804:	str	r4, [sp, #12]
   14808:	str	lr, [sp]
   1480c:	mov	r6, r0
   14810:	bl	124dc <close@plt+0x1578>
   14814:	ldr	r3, [sp, #24]
   14818:	mov	r0, r6
   1481c:	str	r3, [r7]
   14820:	add	sp, sp, #132	; 0x84
   14824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14828:	mov	r3, #8
   1482c:	sub	r2, r4, r2
   14830:	add	r1, sp, #80	; 0x50
   14834:	str	r3, [sp]
   14838:	add	r2, r2, #1
   1483c:	mvn	r3, #-2147483648	; 0x80000000
   14840:	bl	16fe0 <close@plt+0x607c>
   14844:	mov	r5, r0
   14848:	ldm	r8, {r0, r1}
   1484c:	str	r5, [r6]
   14850:	stm	r5, {r0, r1}
   14854:	b	14734 <close@plt+0x37d0>
   14858:	bl	10f58 <abort@plt>
   1485c:	strdeq	r9, [r2], -ip
   14860:			; <UNDEFINED> instruction: 0x000291b0
   14864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14868:	sub	sp, sp, #124	; 0x7c
   1486c:	mov	r4, r0
   14870:	mov	r9, r1
   14874:	add	r0, sp, #72	; 0x48
   14878:	mov	r2, #48	; 0x30
   1487c:	mov	r1, #0
   14880:	bl	10ea4 <memset@plt>
   14884:	cmp	r4, #10
   14888:	beq	14a14 <close@plt+0x3ab0>
   1488c:	add	lr, sp, #72	; 0x48
   14890:	str	r4, [sp, #72]	; 0x48
   14894:	ldm	lr!, {r0, r1, r2, r3}
   14898:	add	ip, sp, #24
   1489c:	ldr	r5, [pc, #372]	; 14a18 <close@plt+0x3ab4>
   148a0:	stmia	ip!, {r0, r1, r2, r3}
   148a4:	ldm	lr!, {r0, r1, r2, r3}
   148a8:	stmia	ip!, {r0, r1, r2, r3}
   148ac:	ldm	lr, {r0, r1, r2, r3}
   148b0:	stm	ip, {r0, r1, r2, r3}
   148b4:	bl	10e80 <__errno_location@plt>
   148b8:	ldr	r2, [r5, #4]
   148bc:	ldr	r4, [r5]
   148c0:	cmp	r2, #0
   148c4:	mov	r7, r0
   148c8:	ldr	fp, [r0]
   148cc:	bgt	14928 <close@plt+0x39c4>
   148d0:	add	r6, r5, #8
   148d4:	cmp	r4, r6
   148d8:	str	r2, [sp, #72]	; 0x48
   148dc:	beq	149e4 <close@plt+0x3a80>
   148e0:	mov	r3, #8
   148e4:	mov	r0, r4
   148e8:	str	r3, [sp]
   148ec:	rsb	r2, r2, #1
   148f0:	add	r1, sp, #72	; 0x48
   148f4:	mvn	r3, #-2147483648	; 0x80000000
   148f8:	bl	16fe0 <close@plt+0x607c>
   148fc:	mov	r4, r0
   14900:	str	r0, [r5]
   14904:	ldr	r0, [r5, #4]
   14908:	ldr	r2, [sp, #72]	; 0x48
   1490c:	mov	r1, #0
   14910:	sub	r2, r2, r0
   14914:	add	r0, r4, r0, lsl #3
   14918:	lsl	r2, r2, #3
   1491c:	bl	10ea4 <memset@plt>
   14920:	ldr	r3, [sp, #72]	; 0x48
   14924:	str	r3, [r5, #4]
   14928:	ldr	r6, [sp, #28]
   1492c:	ldr	r8, [r4]
   14930:	ldr	r5, [r4, #4]
   14934:	ldr	r2, [sp, #64]	; 0x40
   14938:	ldr	r3, [sp, #24]
   1493c:	ldr	ip, [sp, #68]	; 0x44
   14940:	orr	r6, r6, #1
   14944:	add	sl, sp, #32
   14948:	str	r2, [sp, #12]
   1494c:	str	r3, [sp]
   14950:	str	r6, [sp, #4]
   14954:	mov	r1, r8
   14958:	mov	r0, r5
   1495c:	str	ip, [sp, #16]
   14960:	str	sl, [sp, #8]
   14964:	mvn	r3, #0
   14968:	mov	r2, r9
   1496c:	bl	124dc <close@plt+0x1578>
   14970:	cmp	r8, r0
   14974:	bhi	149d4 <close@plt+0x3a70>
   14978:	ldr	r3, [pc, #156]	; 14a1c <close@plt+0x3ab8>
   1497c:	add	r8, r0, #1
   14980:	cmp	r5, r3
   14984:	str	r8, [r4]
   14988:	beq	14994 <close@plt+0x3a30>
   1498c:	mov	r0, r5
   14990:	bl	12210 <close@plt+0x12ac>
   14994:	mov	r0, r8
   14998:	bl	16dc4 <close@plt+0x5e60>
   1499c:	ldr	lr, [sp, #68]	; 0x44
   149a0:	ldr	r3, [sp, #24]
   149a4:	ldr	ip, [sp, #64]	; 0x40
   149a8:	mov	r2, r9
   149ac:	mov	r1, r8
   149b0:	str	r0, [r4, #4]
   149b4:	str	r3, [sp]
   149b8:	str	sl, [sp, #8]
   149bc:	str	r6, [sp, #4]
   149c0:	str	lr, [sp, #16]
   149c4:	str	ip, [sp, #12]
   149c8:	mvn	r3, #0
   149cc:	mov	r5, r0
   149d0:	bl	124dc <close@plt+0x1578>
   149d4:	mov	r0, r5
   149d8:	str	fp, [r7]
   149dc:	add	sp, sp, #124	; 0x7c
   149e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149e4:	mov	r3, #8
   149e8:	add	r1, sp, #72	; 0x48
   149ec:	str	r3, [sp]
   149f0:	rsb	r2, r2, #1
   149f4:	mvn	r3, #-2147483648	; 0x80000000
   149f8:	mov	r0, #0
   149fc:	bl	16fe0 <close@plt+0x607c>
   14a00:	mov	r4, r0
   14a04:	ldm	r6, {r0, r1}
   14a08:	str	r4, [r5]
   14a0c:	stm	r4, {r0, r1}
   14a10:	b	14904 <close@plt+0x39a0>
   14a14:	bl	10f58 <abort@plt>
   14a18:	strdeq	r9, [r2], -ip
   14a1c:			; <UNDEFINED> instruction: 0x000291b0
   14a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a24:	sub	sp, sp, #132	; 0x84
   14a28:	mov	r4, r0
   14a2c:	mov	r9, r1
   14a30:	mov	sl, r2
   14a34:	add	r0, sp, #80	; 0x50
   14a38:	mov	r2, #48	; 0x30
   14a3c:	mov	r1, #0
   14a40:	bl	10ea4 <memset@plt>
   14a44:	cmp	r4, #10
   14a48:	beq	14bdc <close@plt+0x3c78>
   14a4c:	add	lr, sp, #80	; 0x50
   14a50:	str	r4, [sp, #80]	; 0x50
   14a54:	ldm	lr!, {r0, r1, r2, r3}
   14a58:	add	ip, sp, #32
   14a5c:	ldr	r5, [pc, #380]	; 14be0 <close@plt+0x3c7c>
   14a60:	stmia	ip!, {r0, r1, r2, r3}
   14a64:	ldm	lr!, {r0, r1, r2, r3}
   14a68:	stmia	ip!, {r0, r1, r2, r3}
   14a6c:	ldm	lr, {r0, r1, r2, r3}
   14a70:	stm	ip, {r0, r1, r2, r3}
   14a74:	bl	10e80 <__errno_location@plt>
   14a78:	ldr	r2, [r5, #4]
   14a7c:	ldr	r4, [r5]
   14a80:	cmp	r2, #0
   14a84:	ldr	r3, [r0]
   14a88:	mov	r7, r0
   14a8c:	str	r3, [sp, #28]
   14a90:	bgt	14aec <close@plt+0x3b88>
   14a94:	add	r6, r5, #8
   14a98:	cmp	r4, r6
   14a9c:	str	r2, [sp, #80]	; 0x50
   14aa0:	beq	14bac <close@plt+0x3c48>
   14aa4:	mov	r3, #8
   14aa8:	mov	r0, r4
   14aac:	str	r3, [sp]
   14ab0:	rsb	r2, r2, #1
   14ab4:	add	r1, sp, #80	; 0x50
   14ab8:	mvn	r3, #-2147483648	; 0x80000000
   14abc:	bl	16fe0 <close@plt+0x607c>
   14ac0:	mov	r4, r0
   14ac4:	str	r0, [r5]
   14ac8:	ldr	r0, [r5, #4]
   14acc:	ldr	r2, [sp, #80]	; 0x50
   14ad0:	mov	r1, #0
   14ad4:	sub	r2, r2, r0
   14ad8:	add	r0, r4, r0, lsl #3
   14adc:	lsl	r2, r2, #3
   14ae0:	bl	10ea4 <memset@plt>
   14ae4:	ldr	r3, [sp, #80]	; 0x50
   14ae8:	str	r3, [r5, #4]
   14aec:	ldr	r6, [sp, #36]	; 0x24
   14af0:	ldr	r8, [r4]
   14af4:	ldr	r5, [r4, #4]
   14af8:	ldr	r2, [sp, #72]	; 0x48
   14afc:	ldr	r3, [sp, #32]
   14b00:	ldr	ip, [sp, #76]	; 0x4c
   14b04:	orr	r6, r6, #1
   14b08:	add	fp, sp, #40	; 0x28
   14b0c:	str	r2, [sp, #12]
   14b10:	str	r3, [sp]
   14b14:	str	r6, [sp, #4]
   14b18:	mov	r1, r8
   14b1c:	mov	r0, r5
   14b20:	str	ip, [sp, #16]
   14b24:	str	fp, [sp, #8]
   14b28:	mov	r3, sl
   14b2c:	mov	r2, r9
   14b30:	bl	124dc <close@plt+0x1578>
   14b34:	cmp	r8, r0
   14b38:	bhi	14b98 <close@plt+0x3c34>
   14b3c:	ldr	r3, [pc, #160]	; 14be4 <close@plt+0x3c80>
   14b40:	add	r8, r0, #1
   14b44:	cmp	r5, r3
   14b48:	str	r8, [r4]
   14b4c:	beq	14b58 <close@plt+0x3bf4>
   14b50:	mov	r0, r5
   14b54:	bl	12210 <close@plt+0x12ac>
   14b58:	mov	r0, r8
   14b5c:	bl	16dc4 <close@plt+0x5e60>
   14b60:	ldr	ip, [sp, #76]	; 0x4c
   14b64:	ldr	lr, [sp, #32]
   14b68:	mov	r3, sl
   14b6c:	mov	r2, r9
   14b70:	mov	r1, r8
   14b74:	str	r0, [r4, #4]
   14b78:	ldr	r4, [sp, #72]	; 0x48
   14b7c:	str	fp, [sp, #8]
   14b80:	str	r6, [sp, #4]
   14b84:	str	ip, [sp, #16]
   14b88:	str	r4, [sp, #12]
   14b8c:	str	lr, [sp]
   14b90:	mov	r5, r0
   14b94:	bl	124dc <close@plt+0x1578>
   14b98:	ldr	r3, [sp, #28]
   14b9c:	mov	r0, r5
   14ba0:	str	r3, [r7]
   14ba4:	add	sp, sp, #132	; 0x84
   14ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bac:	mov	r3, #8
   14bb0:	add	r1, sp, #80	; 0x50
   14bb4:	str	r3, [sp]
   14bb8:	rsb	r2, r2, #1
   14bbc:	mvn	r3, #-2147483648	; 0x80000000
   14bc0:	mov	r0, #0
   14bc4:	bl	16fe0 <close@plt+0x607c>
   14bc8:	mov	r4, r0
   14bcc:	ldm	r6, {r0, r1}
   14bd0:	str	r4, [r5]
   14bd4:	stm	r4, {r0, r1}
   14bd8:	b	14ac8 <close@plt+0x3b64>
   14bdc:	bl	10f58 <abort@plt>
   14be0:	strdeq	r9, [r2], -ip
   14be4:			; <UNDEFINED> instruction: 0x000291b0
   14be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bec:	mov	r4, r2
   14bf0:	ldr	lr, [pc, #432]	; 14da8 <close@plt+0x3e44>
   14bf4:	mov	sl, r0
   14bf8:	mov	fp, r1
   14bfc:	ldm	lr!, {r0, r1, r2, r3}
   14c00:	sub	sp, sp, #92	; 0x5c
   14c04:	add	ip, sp, #40	; 0x28
   14c08:	lsr	r7, r4, #5
   14c0c:	stmia	ip!, {r0, r1, r2, r3}
   14c10:	add	r6, sp, #48	; 0x30
   14c14:	ldm	lr!, {r0, r1, r2, r3}
   14c18:	and	r4, r4, #31
   14c1c:	ldr	r5, [pc, #392]	; 14dac <close@plt+0x3e48>
   14c20:	stmia	ip!, {r0, r1, r2, r3}
   14c24:	ldm	lr, {r0, r1, r2, r3}
   14c28:	stm	ip, {r0, r1, r2, r3}
   14c2c:	ldr	r2, [r6, r7, lsl #2]
   14c30:	lsr	r3, r2, r4
   14c34:	eor	r3, r3, #1
   14c38:	and	r3, r3, #1
   14c3c:	eor	r4, r2, r3, lsl r4
   14c40:	str	r4, [r6, r7, lsl #2]
   14c44:	bl	10e80 <__errno_location@plt>
   14c48:	ldr	r2, [r5, #4]
   14c4c:	ldr	r4, [r5]
   14c50:	cmp	r2, #0
   14c54:	ldr	r3, [r0]
   14c58:	mov	r8, r0
   14c5c:	str	r3, [sp, #28]
   14c60:	bgt	14cbc <close@plt+0x3d58>
   14c64:	add	r7, r5, #8
   14c68:	cmp	r4, r7
   14c6c:	str	r2, [sp, #36]	; 0x24
   14c70:	beq	14d78 <close@plt+0x3e14>
   14c74:	mov	r3, #8
   14c78:	mov	r0, r4
   14c7c:	str	r3, [sp]
   14c80:	rsb	r2, r2, #1
   14c84:	mvn	r3, #-2147483648	; 0x80000000
   14c88:	add	r1, sp, #36	; 0x24
   14c8c:	bl	16fe0 <close@plt+0x607c>
   14c90:	mov	r4, r0
   14c94:	str	r0, [r5]
   14c98:	ldr	r0, [r5, #4]
   14c9c:	ldr	r2, [sp, #36]	; 0x24
   14ca0:	mov	r1, #0
   14ca4:	sub	r2, r2, r0
   14ca8:	add	r0, r4, r0, lsl #3
   14cac:	lsl	r2, r2, #3
   14cb0:	bl	10ea4 <memset@plt>
   14cb4:	ldr	r3, [sp, #36]	; 0x24
   14cb8:	str	r3, [r5, #4]
   14cbc:	ldr	r7, [sp, #44]	; 0x2c
   14cc0:	ldr	r9, [r4]
   14cc4:	ldr	r5, [r4, #4]
   14cc8:	ldr	r2, [sp, #80]	; 0x50
   14ccc:	ldr	r3, [sp, #40]	; 0x28
   14cd0:	ldr	ip, [sp, #84]	; 0x54
   14cd4:	orr	r7, r7, #1
   14cd8:	str	r2, [sp, #12]
   14cdc:	str	r3, [sp]
   14ce0:	str	r7, [sp, #4]
   14ce4:	str	r6, [sp, #8]
   14ce8:	mov	r1, r9
   14cec:	mov	r0, r5
   14cf0:	str	ip, [sp, #16]
   14cf4:	mov	r3, fp
   14cf8:	mov	r2, sl
   14cfc:	bl	124dc <close@plt+0x1578>
   14d00:	cmp	r9, r0
   14d04:	bhi	14d64 <close@plt+0x3e00>
   14d08:	ldr	r3, [pc, #160]	; 14db0 <close@plt+0x3e4c>
   14d0c:	add	r9, r0, #1
   14d10:	cmp	r5, r3
   14d14:	str	r9, [r4]
   14d18:	beq	14d24 <close@plt+0x3dc0>
   14d1c:	mov	r0, r5
   14d20:	bl	12210 <close@plt+0x12ac>
   14d24:	mov	r0, r9
   14d28:	bl	16dc4 <close@plt+0x5e60>
   14d2c:	ldr	ip, [sp, #84]	; 0x54
   14d30:	ldr	lr, [sp, #40]	; 0x28
   14d34:	mov	r3, fp
   14d38:	mov	r2, sl
   14d3c:	mov	r1, r9
   14d40:	str	r0, [r4, #4]
   14d44:	ldr	r4, [sp, #80]	; 0x50
   14d48:	str	r6, [sp, #8]
   14d4c:	str	r7, [sp, #4]
   14d50:	str	ip, [sp, #16]
   14d54:	str	r4, [sp, #12]
   14d58:	str	lr, [sp]
   14d5c:	mov	r5, r0
   14d60:	bl	124dc <close@plt+0x1578>
   14d64:	ldr	r3, [sp, #28]
   14d68:	mov	r0, r5
   14d6c:	str	r3, [r8]
   14d70:	add	sp, sp, #92	; 0x5c
   14d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d78:	mov	r3, #8
   14d7c:	str	r3, [sp]
   14d80:	add	r1, sp, #36	; 0x24
   14d84:	rsb	r2, r2, #1
   14d88:	mvn	r3, #-2147483648	; 0x80000000
   14d8c:	mov	r0, #0
   14d90:	bl	16fe0 <close@plt+0x607c>
   14d94:	mov	r4, r0
   14d98:	ldm	r7, {r0, r1}
   14d9c:	str	r4, [r5]
   14da0:	stm	r4, {r0, r1}
   14da4:	b	14c98 <close@plt+0x3d34>
   14da8:	andeq	r9, r2, r0, lsl #3
   14dac:	strdeq	r9, [r2], -ip
   14db0:			; <UNDEFINED> instruction: 0x000291b0
   14db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14db8:	mov	r4, r1
   14dbc:	ldr	lr, [pc, #420]	; 14f68 <close@plt+0x4004>
   14dc0:	mov	r6, r0
   14dc4:	sub	sp, sp, #84	; 0x54
   14dc8:	ldm	lr!, {r0, r1, r2, r3}
   14dcc:	add	ip, sp, #32
   14dd0:	lsr	r8, r4, #5
   14dd4:	add	r5, sp, #40	; 0x28
   14dd8:	stmia	ip!, {r0, r1, r2, r3}
   14ddc:	and	r4, r4, #31
   14de0:	ldm	lr!, {r0, r1, r2, r3}
   14de4:	ldr	r7, [pc, #384]	; 14f6c <close@plt+0x4008>
   14de8:	stmia	ip!, {r0, r1, r2, r3}
   14dec:	ldm	lr, {r0, r1, r2, r3}
   14df0:	stm	ip, {r0, r1, r2, r3}
   14df4:	ldr	r2, [r5, r8, lsl #2]
   14df8:	lsr	r3, r2, r4
   14dfc:	eor	r3, r3, #1
   14e00:	and	r3, r3, #1
   14e04:	eor	r4, r2, r3, lsl r4
   14e08:	str	r4, [r5, r8, lsl #2]
   14e0c:	bl	10e80 <__errno_location@plt>
   14e10:	ldr	r2, [r7, #4]
   14e14:	ldr	r4, [r7]
   14e18:	cmp	r2, #0
   14e1c:	mov	r9, r0
   14e20:	ldr	sl, [r0]
   14e24:	bgt	14e80 <close@plt+0x3f1c>
   14e28:	add	r8, r7, #8
   14e2c:	cmp	r4, r8
   14e30:	str	r2, [sp, #28]
   14e34:	beq	14f38 <close@plt+0x3fd4>
   14e38:	mov	r3, #8
   14e3c:	mov	r0, r4
   14e40:	str	r3, [sp]
   14e44:	rsb	r2, r2, #1
   14e48:	mvn	r3, #-2147483648	; 0x80000000
   14e4c:	add	r1, sp, #28
   14e50:	bl	16fe0 <close@plt+0x607c>
   14e54:	mov	r4, r0
   14e58:	str	r0, [r7]
   14e5c:	ldr	r0, [r7, #4]
   14e60:	ldr	r2, [sp, #28]
   14e64:	mov	r1, #0
   14e68:	sub	r2, r2, r0
   14e6c:	add	r0, r4, r0, lsl #3
   14e70:	lsl	r2, r2, #3
   14e74:	bl	10ea4 <memset@plt>
   14e78:	ldr	r3, [sp, #28]
   14e7c:	str	r3, [r7, #4]
   14e80:	ldr	r8, [sp, #36]	; 0x24
   14e84:	ldr	fp, [r4]
   14e88:	ldr	r7, [r4, #4]
   14e8c:	ldr	r2, [sp, #72]	; 0x48
   14e90:	ldr	r3, [sp, #32]
   14e94:	ldr	ip, [sp, #76]	; 0x4c
   14e98:	orr	r8, r8, #1
   14e9c:	str	r2, [sp, #12]
   14ea0:	str	r3, [sp]
   14ea4:	str	r8, [sp, #4]
   14ea8:	str	r5, [sp, #8]
   14eac:	mov	r1, fp
   14eb0:	mov	r0, r7
   14eb4:	str	ip, [sp, #16]
   14eb8:	mvn	r3, #0
   14ebc:	mov	r2, r6
   14ec0:	bl	124dc <close@plt+0x1578>
   14ec4:	cmp	fp, r0
   14ec8:	bhi	14f28 <close@plt+0x3fc4>
   14ecc:	ldr	r3, [pc, #156]	; 14f70 <close@plt+0x400c>
   14ed0:	add	fp, r0, #1
   14ed4:	cmp	r7, r3
   14ed8:	str	fp, [r4]
   14edc:	beq	14ee8 <close@plt+0x3f84>
   14ee0:	mov	r0, r7
   14ee4:	bl	12210 <close@plt+0x12ac>
   14ee8:	mov	r0, fp
   14eec:	bl	16dc4 <close@plt+0x5e60>
   14ef0:	ldr	lr, [sp, #76]	; 0x4c
   14ef4:	ldr	r3, [sp, #32]
   14ef8:	ldr	ip, [sp, #72]	; 0x48
   14efc:	mov	r2, r6
   14f00:	mov	r1, fp
   14f04:	str	r0, [r4, #4]
   14f08:	str	r3, [sp]
   14f0c:	str	r5, [sp, #8]
   14f10:	str	r8, [sp, #4]
   14f14:	str	lr, [sp, #16]
   14f18:	str	ip, [sp, #12]
   14f1c:	mvn	r3, #0
   14f20:	mov	r7, r0
   14f24:	bl	124dc <close@plt+0x1578>
   14f28:	mov	r0, r7
   14f2c:	str	sl, [r9]
   14f30:	add	sp, sp, #84	; 0x54
   14f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f38:	mov	r3, #8
   14f3c:	str	r3, [sp]
   14f40:	add	r1, sp, #28
   14f44:	rsb	r2, r2, #1
   14f48:	mvn	r3, #-2147483648	; 0x80000000
   14f4c:	mov	r0, #0
   14f50:	bl	16fe0 <close@plt+0x607c>
   14f54:	mov	r4, r0
   14f58:	ldm	r8, {r0, r1}
   14f5c:	str	r4, [r7]
   14f60:	stm	r4, {r0, r1}
   14f64:	b	14e5c <close@plt+0x3ef8>
   14f68:	andeq	r9, r2, r0, lsl #3
   14f6c:	strdeq	r9, [r2], -ip
   14f70:			; <UNDEFINED> instruction: 0x000291b0
   14f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f78:	mov	r6, r0
   14f7c:	ldr	lr, [pc, #404]	; 15118 <close@plt+0x41b4>
   14f80:	sub	sp, sp, #84	; 0x54
   14f84:	add	ip, sp, #32
   14f88:	ldm	lr!, {r0, r1, r2, r3}
   14f8c:	ldr	r5, [pc, #392]	; 1511c <close@plt+0x41b8>
   14f90:	stmia	ip!, {r0, r1, r2, r3}
   14f94:	ldm	lr!, {r0, r1, r2, r3}
   14f98:	ldr	r4, [sp, #44]	; 0x2c
   14f9c:	stmia	ip!, {r0, r1, r2, r3}
   14fa0:	ldm	lr, {r0, r1, r2, r3}
   14fa4:	mvn	lr, r4
   14fa8:	and	lr, lr, #67108864	; 0x4000000
   14fac:	eor	lr, lr, r4
   14fb0:	stm	ip, {r0, r1, r2, r3}
   14fb4:	str	lr, [sp, #44]	; 0x2c
   14fb8:	bl	10e80 <__errno_location@plt>
   14fbc:	ldr	r2, [r5, #4]
   14fc0:	ldr	r4, [r5]
   14fc4:	cmp	r2, #0
   14fc8:	mov	r8, r0
   14fcc:	ldr	sl, [r0]
   14fd0:	bgt	1502c <close@plt+0x40c8>
   14fd4:	add	r7, r5, #8
   14fd8:	cmp	r4, r7
   14fdc:	str	r2, [sp, #28]
   14fe0:	beq	150e8 <close@plt+0x4184>
   14fe4:	mov	r3, #8
   14fe8:	mov	r0, r4
   14fec:	str	r3, [sp]
   14ff0:	rsb	r2, r2, #1
   14ff4:	mvn	r3, #-2147483648	; 0x80000000
   14ff8:	add	r1, sp, #28
   14ffc:	bl	16fe0 <close@plt+0x607c>
   15000:	mov	r4, r0
   15004:	str	r0, [r5]
   15008:	ldr	r0, [r5, #4]
   1500c:	ldr	r2, [sp, #28]
   15010:	mov	r1, #0
   15014:	sub	r2, r2, r0
   15018:	add	r0, r4, r0, lsl #3
   1501c:	lsl	r2, r2, #3
   15020:	bl	10ea4 <memset@plt>
   15024:	ldr	r3, [sp, #28]
   15028:	str	r3, [r5, #4]
   1502c:	ldr	r7, [sp, #36]	; 0x24
   15030:	ldr	r9, [r4]
   15034:	ldr	r5, [r4, #4]
   15038:	ldr	r2, [sp, #72]	; 0x48
   1503c:	ldr	r3, [sp, #32]
   15040:	ldr	ip, [sp, #76]	; 0x4c
   15044:	orr	r7, r7, #1
   15048:	add	fp, sp, #40	; 0x28
   1504c:	str	r2, [sp, #12]
   15050:	str	r3, [sp]
   15054:	str	r7, [sp, #4]
   15058:	mov	r1, r9
   1505c:	mov	r0, r5
   15060:	str	ip, [sp, #16]
   15064:	str	fp, [sp, #8]
   15068:	mvn	r3, #0
   1506c:	mov	r2, r6
   15070:	bl	124dc <close@plt+0x1578>
   15074:	cmp	r9, r0
   15078:	bhi	150d8 <close@plt+0x4174>
   1507c:	ldr	r3, [pc, #156]	; 15120 <close@plt+0x41bc>
   15080:	add	r9, r0, #1
   15084:	cmp	r5, r3
   15088:	str	r9, [r4]
   1508c:	beq	15098 <close@plt+0x4134>
   15090:	mov	r0, r5
   15094:	bl	12210 <close@plt+0x12ac>
   15098:	mov	r0, r9
   1509c:	bl	16dc4 <close@plt+0x5e60>
   150a0:	ldr	lr, [sp, #76]	; 0x4c
   150a4:	ldr	r3, [sp, #32]
   150a8:	ldr	ip, [sp, #72]	; 0x48
   150ac:	mov	r2, r6
   150b0:	mov	r1, r9
   150b4:	str	r0, [r4, #4]
   150b8:	str	r3, [sp]
   150bc:	str	fp, [sp, #8]
   150c0:	str	r7, [sp, #4]
   150c4:	str	lr, [sp, #16]
   150c8:	str	ip, [sp, #12]
   150cc:	mvn	r3, #0
   150d0:	mov	r5, r0
   150d4:	bl	124dc <close@plt+0x1578>
   150d8:	mov	r0, r5
   150dc:	str	sl, [r8]
   150e0:	add	sp, sp, #84	; 0x54
   150e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150e8:	mov	r3, #8
   150ec:	str	r3, [sp]
   150f0:	add	r1, sp, #28
   150f4:	rsb	r2, r2, #1
   150f8:	mvn	r3, #-2147483648	; 0x80000000
   150fc:	mov	r0, #0
   15100:	bl	16fe0 <close@plt+0x607c>
   15104:	mov	r4, r0
   15108:	ldm	r7, {r0, r1}
   1510c:	str	r4, [r5]
   15110:	stm	r4, {r0, r1}
   15114:	b	15008 <close@plt+0x40a4>
   15118:	andeq	r9, r2, r0, lsl #3
   1511c:	strdeq	r9, [r2], -ip
   15120:			; <UNDEFINED> instruction: 0x000291b0
   15124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15128:	mov	r9, r0
   1512c:	ldr	lr, [pc, #416]	; 152d4 <close@plt+0x4370>
   15130:	mov	sl, r1
   15134:	sub	sp, sp, #92	; 0x5c
   15138:	ldm	lr!, {r0, r1, r2, r3}
   1513c:	add	ip, sp, #40	; 0x28
   15140:	ldr	r5, [pc, #400]	; 152d8 <close@plt+0x4374>
   15144:	stmia	ip!, {r0, r1, r2, r3}
   15148:	ldm	lr!, {r0, r1, r2, r3}
   1514c:	ldr	r4, [sp, #52]	; 0x34
   15150:	stmia	ip!, {r0, r1, r2, r3}
   15154:	ldm	lr, {r0, r1, r2, r3}
   15158:	mvn	lr, r4
   1515c:	and	lr, lr, #67108864	; 0x4000000
   15160:	eor	lr, lr, r4
   15164:	stm	ip, {r0, r1, r2, r3}
   15168:	str	lr, [sp, #52]	; 0x34
   1516c:	bl	10e80 <__errno_location@plt>
   15170:	ldr	r2, [r5, #4]
   15174:	ldr	r4, [r5]
   15178:	cmp	r2, #0
   1517c:	ldr	r3, [r0]
   15180:	mov	r7, r0
   15184:	str	r3, [sp, #28]
   15188:	bgt	151e4 <close@plt+0x4280>
   1518c:	add	r6, r5, #8
   15190:	cmp	r4, r6
   15194:	str	r2, [sp, #36]	; 0x24
   15198:	beq	152a4 <close@plt+0x4340>
   1519c:	mov	r3, #8
   151a0:	mov	r0, r4
   151a4:	str	r3, [sp]
   151a8:	rsb	r2, r2, #1
   151ac:	mvn	r3, #-2147483648	; 0x80000000
   151b0:	add	r1, sp, #36	; 0x24
   151b4:	bl	16fe0 <close@plt+0x607c>
   151b8:	mov	r4, r0
   151bc:	str	r0, [r5]
   151c0:	ldr	r0, [r5, #4]
   151c4:	ldr	r2, [sp, #36]	; 0x24
   151c8:	mov	r1, #0
   151cc:	sub	r2, r2, r0
   151d0:	add	r0, r4, r0, lsl #3
   151d4:	lsl	r2, r2, #3
   151d8:	bl	10ea4 <memset@plt>
   151dc:	ldr	r3, [sp, #36]	; 0x24
   151e0:	str	r3, [r5, #4]
   151e4:	ldr	r6, [sp, #44]	; 0x2c
   151e8:	ldr	r8, [r4]
   151ec:	ldr	r5, [r4, #4]
   151f0:	ldr	r2, [sp, #80]	; 0x50
   151f4:	ldr	r3, [sp, #40]	; 0x28
   151f8:	ldr	ip, [sp, #84]	; 0x54
   151fc:	orr	r6, r6, #1
   15200:	add	fp, sp, #48	; 0x30
   15204:	str	r2, [sp, #12]
   15208:	str	r3, [sp]
   1520c:	str	r6, [sp, #4]
   15210:	mov	r1, r8
   15214:	mov	r0, r5
   15218:	str	ip, [sp, #16]
   1521c:	str	fp, [sp, #8]
   15220:	mov	r3, sl
   15224:	mov	r2, r9
   15228:	bl	124dc <close@plt+0x1578>
   1522c:	cmp	r8, r0
   15230:	bhi	15290 <close@plt+0x432c>
   15234:	ldr	r3, [pc, #160]	; 152dc <close@plt+0x4378>
   15238:	add	r8, r0, #1
   1523c:	cmp	r5, r3
   15240:	str	r8, [r4]
   15244:	beq	15250 <close@plt+0x42ec>
   15248:	mov	r0, r5
   1524c:	bl	12210 <close@plt+0x12ac>
   15250:	mov	r0, r8
   15254:	bl	16dc4 <close@plt+0x5e60>
   15258:	ldr	ip, [sp, #84]	; 0x54
   1525c:	ldr	lr, [sp, #40]	; 0x28
   15260:	mov	r3, sl
   15264:	mov	r2, r9
   15268:	mov	r1, r8
   1526c:	str	r0, [r4, #4]
   15270:	ldr	r4, [sp, #80]	; 0x50
   15274:	str	fp, [sp, #8]
   15278:	str	r6, [sp, #4]
   1527c:	str	ip, [sp, #16]
   15280:	str	r4, [sp, #12]
   15284:	str	lr, [sp]
   15288:	mov	r5, r0
   1528c:	bl	124dc <close@plt+0x1578>
   15290:	ldr	r3, [sp, #28]
   15294:	mov	r0, r5
   15298:	str	r3, [r7]
   1529c:	add	sp, sp, #92	; 0x5c
   152a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152a4:	mov	r3, #8
   152a8:	str	r3, [sp]
   152ac:	add	r1, sp, #36	; 0x24
   152b0:	rsb	r2, r2, #1
   152b4:	mvn	r3, #-2147483648	; 0x80000000
   152b8:	mov	r0, #0
   152bc:	bl	16fe0 <close@plt+0x607c>
   152c0:	mov	r4, r0
   152c4:	ldm	r6, {r0, r1}
   152c8:	str	r4, [r5]
   152cc:	stm	r4, {r0, r1}
   152d0:	b	151c0 <close@plt+0x425c>
   152d4:	andeq	r9, r2, r0, lsl #3
   152d8:	strdeq	r9, [r2], -ip
   152dc:			; <UNDEFINED> instruction: 0x000291b0
   152e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e4:	sub	sp, sp, #180	; 0xb4
   152e8:	mov	r6, r1
   152ec:	mov	r4, r0
   152f0:	mov	r9, r2
   152f4:	add	r0, sp, #80	; 0x50
   152f8:	mov	r2, #48	; 0x30
   152fc:	mov	r1, #0
   15300:	bl	10ea4 <memset@plt>
   15304:	cmp	r6, #10
   15308:	beq	154e8 <close@plt+0x4584>
   1530c:	add	r5, sp, #80	; 0x50
   15310:	str	r6, [sp, #80]	; 0x50
   15314:	ldm	r5!, {r0, r1, r2, r3}
   15318:	add	ip, sp, #128	; 0x80
   1531c:	mov	r7, ip
   15320:	add	lr, sp, #32
   15324:	stmia	ip!, {r0, r1, r2, r3}
   15328:	mov	r8, #67108864	; 0x4000000
   1532c:	ldm	r5!, {r0, r1, r2, r3}
   15330:	ldr	r6, [pc, #436]	; 154ec <close@plt+0x4588>
   15334:	stmia	ip!, {r0, r1, r2, r3}
   15338:	ldm	r5, {r0, r1, r2, r3}
   1533c:	stm	ip, {r0, r1, r2, r3}
   15340:	ldm	r7!, {r0, r1, r2, r3}
   15344:	stmia	lr!, {r0, r1, r2, r3}
   15348:	ldm	r7!, {r0, r1, r2, r3}
   1534c:	str	r8, [sp, #44]	; 0x2c
   15350:	stmia	lr!, {r0, r1, r2, r3}
   15354:	ldm	ip, {r0, r1, r2, r3}
   15358:	stm	lr, {r0, r1, r2, r3}
   1535c:	bl	10e80 <__errno_location@plt>
   15360:	cmn	r4, #-2147483647	; 0x80000001
   15364:	ldr	r5, [r6]
   15368:	mov	r7, r0
   1536c:	movne	r0, #0
   15370:	moveq	r0, #1
   15374:	ldr	r3, [r7]
   15378:	orrs	r0, r0, r4, lsr #31
   1537c:	str	r3, [sp, #24]
   15380:	bne	154e8 <close@plt+0x4584>
   15384:	ldr	r2, [r6, #4]
   15388:	cmp	r4, r2
   1538c:	blt	153ec <close@plt+0x4488>
   15390:	add	r8, r6, #8
   15394:	cmp	r5, r8
   15398:	str	r2, [sp, #80]	; 0x50
   1539c:	beq	154b8 <close@plt+0x4554>
   153a0:	mov	r3, #8
   153a4:	sub	r2, r4, r2
   153a8:	mov	r0, r5
   153ac:	str	r3, [sp]
   153b0:	add	r2, r2, #1
   153b4:	add	r1, sp, #80	; 0x50
   153b8:	mvn	r3, #-2147483648	; 0x80000000
   153bc:	bl	16fe0 <close@plt+0x607c>
   153c0:	mov	r5, r0
   153c4:	str	r0, [r6]
   153c8:	ldr	r0, [r6, #4]
   153cc:	ldr	r2, [sp, #80]	; 0x50
   153d0:	mov	r1, #0
   153d4:	sub	r2, r2, r0
   153d8:	add	r0, r5, r0, lsl #3
   153dc:	lsl	r2, r2, #3
   153e0:	bl	10ea4 <memset@plt>
   153e4:	ldr	r3, [sp, #80]	; 0x50
   153e8:	str	r3, [r6, #4]
   153ec:	add	fp, r5, r4, lsl #3
   153f0:	ldr	r1, [sp, #36]	; 0x24
   153f4:	ldr	r8, [r5, r4, lsl #3]
   153f8:	ldr	r6, [fp, #4]
   153fc:	ldr	r2, [sp, #72]	; 0x48
   15400:	ldr	r3, [sp, #32]
   15404:	ldr	ip, [sp, #76]	; 0x4c
   15408:	orr	r1, r1, #1
   1540c:	add	sl, sp, #40	; 0x28
   15410:	str	r1, [sp, #28]
   15414:	str	r1, [sp, #4]
   15418:	str	r2, [sp, #12]
   1541c:	str	r3, [sp]
   15420:	mov	r0, r6
   15424:	mov	r1, r8
   15428:	str	ip, [sp, #16]
   1542c:	str	sl, [sp, #8]
   15430:	mvn	r3, #0
   15434:	mov	r2, r9
   15438:	bl	124dc <close@plt+0x1578>
   1543c:	cmp	r8, r0
   15440:	bhi	154a4 <close@plt+0x4540>
   15444:	ldr	r3, [pc, #164]	; 154f0 <close@plt+0x458c>
   15448:	add	r8, r0, #1
   1544c:	cmp	r6, r3
   15450:	str	r8, [r5, r4, lsl #3]
   15454:	beq	15460 <close@plt+0x44fc>
   15458:	mov	r0, r6
   1545c:	bl	12210 <close@plt+0x12ac>
   15460:	mov	r0, r8
   15464:	bl	16dc4 <close@plt+0x5e60>
   15468:	ldr	lr, [sp, #76]	; 0x4c
   1546c:	ldr	r3, [sp, #32]
   15470:	ldr	ip, [sp, #72]	; 0x48
   15474:	ldr	r4, [sp, #28]
   15478:	mov	r2, r9
   1547c:	mov	r1, r8
   15480:	str	r0, [fp, #4]
   15484:	str	r3, [sp]
   15488:	str	sl, [sp, #8]
   1548c:	str	r4, [sp, #4]
   15490:	str	lr, [sp, #16]
   15494:	str	ip, [sp, #12]
   15498:	mvn	r3, #0
   1549c:	mov	r6, r0
   154a0:	bl	124dc <close@plt+0x1578>
   154a4:	ldr	r3, [sp, #24]
   154a8:	mov	r0, r6
   154ac:	str	r3, [r7]
   154b0:	add	sp, sp, #180	; 0xb4
   154b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154b8:	mov	r3, #8
   154bc:	sub	r2, r4, r2
   154c0:	add	r1, sp, #80	; 0x50
   154c4:	str	r3, [sp]
   154c8:	add	r2, r2, #1
   154cc:	mvn	r3, #-2147483648	; 0x80000000
   154d0:	bl	16fe0 <close@plt+0x607c>
   154d4:	mov	r5, r0
   154d8:	ldm	r8, {r0, r1}
   154dc:	str	r5, [r6]
   154e0:	stm	r5, {r0, r1}
   154e4:	b	153c8 <close@plt+0x4464>
   154e8:	bl	10f58 <abort@plt>
   154ec:	strdeq	r9, [r2], -ip
   154f0:			; <UNDEFINED> instruction: 0x000291b0
   154f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154f8:	mov	r7, r1
   154fc:	ldr	lr, [pc, #492]	; 156f0 <close@plt+0x478c>
   15500:	mov	r8, r2
   15504:	mov	r4, r0
   15508:	mov	fp, r3
   1550c:	ldm	lr!, {r0, r1, r2, r3}
   15510:	sub	sp, sp, #100	; 0x64
   15514:	add	ip, sp, #48	; 0x30
   15518:	mov	sl, #10
   1551c:	stmia	ip!, {r0, r1, r2, r3}
   15520:	cmp	r8, #0
   15524:	cmpne	r7, #0
   15528:	ldm	lr!, {r0, r1, r2, r3}
   1552c:	str	sl, [sp, #48]	; 0x30
   15530:	stmia	ip!, {r0, r1, r2, r3}
   15534:	ldm	lr, {r0, r1, r2, r3}
   15538:	stm	ip, {r0, r1, r2, r3}
   1553c:	beq	156ec <close@plt+0x4788>
   15540:	str	r7, [sp, #88]	; 0x58
   15544:	str	r8, [sp, #92]	; 0x5c
   15548:	bl	10e80 <__errno_location@plt>
   1554c:	ldr	r6, [pc, #416]	; 156f4 <close@plt+0x4790>
   15550:	cmn	r4, #-2147483647	; 0x80000001
   15554:	ldr	r5, [r6]
   15558:	mov	r9, r0
   1555c:	movne	r0, #0
   15560:	moveq	r0, #1
   15564:	ldr	r3, [r9]
   15568:	orrs	r0, r0, r4, lsr #31
   1556c:	str	r3, [sp, #28]
   15570:	bne	156ec <close@plt+0x4788>
   15574:	ldr	r2, [r6, #4]
   15578:	cmp	r4, r2
   1557c:	movlt	r3, sl
   15580:	blt	155ec <close@plt+0x4688>
   15584:	add	r7, r6, #8
   15588:	cmp	r5, r7
   1558c:	str	r2, [sp, #44]	; 0x2c
   15590:	beq	156bc <close@plt+0x4758>
   15594:	mov	r3, #8
   15598:	sub	r2, r4, r2
   1559c:	mov	r0, r5
   155a0:	str	r3, [sp]
   155a4:	add	r2, r2, #1
   155a8:	mvn	r3, #-2147483648	; 0x80000000
   155ac:	add	r1, sp, #44	; 0x2c
   155b0:	bl	16fe0 <close@plt+0x607c>
   155b4:	mov	r5, r0
   155b8:	str	r0, [r6]
   155bc:	ldr	r0, [r6, #4]
   155c0:	ldr	r2, [sp, #44]	; 0x2c
   155c4:	mov	r1, #0
   155c8:	sub	r2, r2, r0
   155cc:	add	r0, r5, r0, lsl #3
   155d0:	lsl	r2, r2, #3
   155d4:	bl	10ea4 <memset@plt>
   155d8:	ldr	r3, [sp, #48]	; 0x30
   155dc:	ldr	r7, [sp, #88]	; 0x58
   155e0:	ldr	r8, [sp, #92]	; 0x5c
   155e4:	ldr	r2, [sp, #44]	; 0x2c
   155e8:	str	r2, [r6, #4]
   155ec:	add	r2, r5, r4, lsl #3
   155f0:	mov	r1, r2
   155f4:	str	r2, [sp, #32]
   155f8:	ldr	r2, [sp, #52]	; 0x34
   155fc:	ldr	r6, [r1, #4]
   15600:	ldr	sl, [r5, r4, lsl #3]
   15604:	orr	r2, r2, #1
   15608:	str	r3, [sp]
   1560c:	add	r3, sp, #56	; 0x38
   15610:	str	r2, [sp, #36]	; 0x24
   15614:	str	r2, [sp, #4]
   15618:	str	r3, [sp, #8]
   1561c:	mov	r0, r6
   15620:	str	r8, [sp, #16]
   15624:	str	r7, [sp, #12]
   15628:	mov	r1, sl
   1562c:	mvn	r3, #0
   15630:	mov	r2, fp
   15634:	bl	124dc <close@plt+0x1578>
   15638:	cmp	sl, r0
   1563c:	bhi	156a8 <close@plt+0x4744>
   15640:	ldr	r3, [pc, #176]	; 156f8 <close@plt+0x4794>
   15644:	add	r7, r0, #1
   15648:	cmp	r6, r3
   1564c:	str	r7, [r5, r4, lsl #3]
   15650:	beq	1565c <close@plt+0x46f8>
   15654:	mov	r0, r6
   15658:	bl	12210 <close@plt+0x12ac>
   1565c:	mov	r0, r7
   15660:	bl	16dc4 <close@plt+0x5e60>
   15664:	ldr	r3, [sp, #32]
   15668:	ldr	lr, [sp, #92]	; 0x5c
   1566c:	ldr	ip, [sp, #88]	; 0x58
   15670:	ldr	r4, [sp, #36]	; 0x24
   15674:	mov	r2, fp
   15678:	mov	r1, r7
   1567c:	str	r0, [r3, #4]
   15680:	add	r3, sp, #56	; 0x38
   15684:	str	r3, [sp, #8]
   15688:	ldr	r3, [sp, #48]	; 0x30
   1568c:	str	r4, [sp, #4]
   15690:	str	r3, [sp]
   15694:	str	lr, [sp, #16]
   15698:	str	ip, [sp, #12]
   1569c:	mvn	r3, #0
   156a0:	mov	r6, r0
   156a4:	bl	124dc <close@plt+0x1578>
   156a8:	ldr	r3, [sp, #28]
   156ac:	mov	r0, r6
   156b0:	str	r3, [r9]
   156b4:	add	sp, sp, #100	; 0x64
   156b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156bc:	mov	r3, #8
   156c0:	sub	r2, r4, r2
   156c4:	str	r3, [sp]
   156c8:	add	r1, sp, #44	; 0x2c
   156cc:	add	r2, r2, #1
   156d0:	mvn	r3, #-2147483648	; 0x80000000
   156d4:	bl	16fe0 <close@plt+0x607c>
   156d8:	mov	r5, r0
   156dc:	ldm	r7, {r0, r1}
   156e0:	str	r5, [r6]
   156e4:	stm	r5, {r0, r1}
   156e8:	b	155bc <close@plt+0x4658>
   156ec:	bl	10f58 <abort@plt>
   156f0:	andeq	r9, r2, r0, lsl #3
   156f4:	strdeq	r9, [r2], -ip
   156f8:			; <UNDEFINED> instruction: 0x000291b0
   156fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15700:	mov	r7, r1
   15704:	ldr	lr, [pc, #492]	; 158f8 <close@plt+0x4994>
   15708:	mov	r8, r2
   1570c:	mov	r4, r0
   15710:	mov	fp, r3
   15714:	ldm	lr!, {r0, r1, r2, r3}
   15718:	sub	sp, sp, #100	; 0x64
   1571c:	add	ip, sp, #48	; 0x30
   15720:	mov	sl, #10
   15724:	stmia	ip!, {r0, r1, r2, r3}
   15728:	cmp	r8, #0
   1572c:	cmpne	r7, #0
   15730:	ldm	lr!, {r0, r1, r2, r3}
   15734:	str	sl, [sp, #48]	; 0x30
   15738:	stmia	ip!, {r0, r1, r2, r3}
   1573c:	ldm	lr, {r0, r1, r2, r3}
   15740:	stm	ip, {r0, r1, r2, r3}
   15744:	beq	158f4 <close@plt+0x4990>
   15748:	str	r7, [sp, #88]	; 0x58
   1574c:	str	r8, [sp, #92]	; 0x5c
   15750:	bl	10e80 <__errno_location@plt>
   15754:	ldr	r6, [pc, #416]	; 158fc <close@plt+0x4998>
   15758:	cmn	r4, #-2147483647	; 0x80000001
   1575c:	ldr	r5, [r6]
   15760:	mov	r9, r0
   15764:	movne	r0, #0
   15768:	moveq	r0, #1
   1576c:	ldr	r3, [r9]
   15770:	orrs	r0, r0, r4, lsr #31
   15774:	str	r3, [sp, #28]
   15778:	bne	158f4 <close@plt+0x4990>
   1577c:	ldr	r2, [r6, #4]
   15780:	cmp	r4, r2
   15784:	movlt	r3, sl
   15788:	blt	157f4 <close@plt+0x4890>
   1578c:	add	r7, r6, #8
   15790:	cmp	r5, r7
   15794:	str	r2, [sp, #44]	; 0x2c
   15798:	beq	158c4 <close@plt+0x4960>
   1579c:	mov	r3, #8
   157a0:	sub	r2, r4, r2
   157a4:	mov	r0, r5
   157a8:	str	r3, [sp]
   157ac:	add	r2, r2, #1
   157b0:	mvn	r3, #-2147483648	; 0x80000000
   157b4:	add	r1, sp, #44	; 0x2c
   157b8:	bl	16fe0 <close@plt+0x607c>
   157bc:	mov	r5, r0
   157c0:	str	r0, [r6]
   157c4:	ldr	r0, [r6, #4]
   157c8:	ldr	r2, [sp, #44]	; 0x2c
   157cc:	mov	r1, #0
   157d0:	sub	r2, r2, r0
   157d4:	add	r0, r5, r0, lsl #3
   157d8:	lsl	r2, r2, #3
   157dc:	bl	10ea4 <memset@plt>
   157e0:	ldr	r3, [sp, #48]	; 0x30
   157e4:	ldr	r7, [sp, #88]	; 0x58
   157e8:	ldr	r8, [sp, #92]	; 0x5c
   157ec:	ldr	r2, [sp, #44]	; 0x2c
   157f0:	str	r2, [r6, #4]
   157f4:	add	r2, r5, r4, lsl #3
   157f8:	mov	r1, r2
   157fc:	str	r2, [sp, #32]
   15800:	ldr	r2, [sp, #52]	; 0x34
   15804:	ldr	r6, [r1, #4]
   15808:	ldr	sl, [r5, r4, lsl #3]
   1580c:	orr	r2, r2, #1
   15810:	str	r3, [sp]
   15814:	add	r3, sp, #56	; 0x38
   15818:	str	r2, [sp, #36]	; 0x24
   1581c:	str	r2, [sp, #4]
   15820:	str	r3, [sp, #8]
   15824:	mov	r0, r6
   15828:	str	r8, [sp, #16]
   1582c:	str	r7, [sp, #12]
   15830:	mov	r1, sl
   15834:	ldr	r3, [sp, #136]	; 0x88
   15838:	mov	r2, fp
   1583c:	bl	124dc <close@plt+0x1578>
   15840:	cmp	sl, r0
   15844:	bhi	158b0 <close@plt+0x494c>
   15848:	ldr	r3, [pc, #176]	; 15900 <close@plt+0x499c>
   1584c:	add	r7, r0, #1
   15850:	cmp	r6, r3
   15854:	str	r7, [r5, r4, lsl #3]
   15858:	beq	15864 <close@plt+0x4900>
   1585c:	mov	r0, r6
   15860:	bl	12210 <close@plt+0x12ac>
   15864:	mov	r0, r7
   15868:	bl	16dc4 <close@plt+0x5e60>
   1586c:	ldr	r3, [sp, #32]
   15870:	ldr	lr, [sp, #92]	; 0x5c
   15874:	ldr	ip, [sp, #88]	; 0x58
   15878:	ldr	r4, [sp, #36]	; 0x24
   1587c:	mov	r2, fp
   15880:	mov	r1, r7
   15884:	str	r0, [r3, #4]
   15888:	add	r3, sp, #56	; 0x38
   1588c:	str	r3, [sp, #8]
   15890:	ldr	r3, [sp, #48]	; 0x30
   15894:	str	r4, [sp, #4]
   15898:	str	r3, [sp]
   1589c:	str	lr, [sp, #16]
   158a0:	str	ip, [sp, #12]
   158a4:	ldr	r3, [sp, #136]	; 0x88
   158a8:	mov	r6, r0
   158ac:	bl	124dc <close@plt+0x1578>
   158b0:	ldr	r3, [sp, #28]
   158b4:	mov	r0, r6
   158b8:	str	r3, [r9]
   158bc:	add	sp, sp, #100	; 0x64
   158c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158c4:	mov	r3, #8
   158c8:	sub	r2, r4, r2
   158cc:	str	r3, [sp]
   158d0:	add	r1, sp, #44	; 0x2c
   158d4:	add	r2, r2, #1
   158d8:	mvn	r3, #-2147483648	; 0x80000000
   158dc:	bl	16fe0 <close@plt+0x607c>
   158e0:	mov	r5, r0
   158e4:	ldm	r7, {r0, r1}
   158e8:	str	r5, [r6]
   158ec:	stm	r5, {r0, r1}
   158f0:	b	157c4 <close@plt+0x4860>
   158f4:	bl	10f58 <abort@plt>
   158f8:	andeq	r9, r2, r0, lsl #3
   158fc:	strdeq	r9, [r2], -ip
   15900:			; <UNDEFINED> instruction: 0x000291b0
   15904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15908:	mov	r5, r0
   1590c:	ldr	lr, [pc, #452]	; 15ad8 <close@plt+0x4b74>
   15910:	mov	r6, r1
   15914:	mov	sl, r2
   15918:	ldm	lr!, {r0, r1, r2, r3}
   1591c:	sub	sp, sp, #92	; 0x5c
   15920:	add	ip, sp, #40	; 0x28
   15924:	cmp	r6, #0
   15928:	cmpne	r5, #0
   1592c:	stmia	ip!, {r0, r1, r2, r3}
   15930:	mov	r9, #10
   15934:	ldm	lr!, {r0, r1, r2, r3}
   15938:	moveq	fp, #1
   1593c:	movne	fp, #0
   15940:	str	r9, [sp, #40]	; 0x28
   15944:	stmia	ip!, {r0, r1, r2, r3}
   15948:	ldm	lr, {r0, r1, r2, r3}
   1594c:	stm	ip, {r0, r1, r2, r3}
   15950:	beq	15ad4 <close@plt+0x4b70>
   15954:	str	r5, [sp, #80]	; 0x50
   15958:	str	r6, [sp, #84]	; 0x54
   1595c:	bl	10e80 <__errno_location@plt>
   15960:	ldr	r7, [pc, #372]	; 15adc <close@plt+0x4b78>
   15964:	ldr	r2, [r7, #4]
   15968:	ldr	r4, [r7]
   1596c:	cmp	r2, #0
   15970:	ldr	r3, [r0]
   15974:	mov	r8, r0
   15978:	str	r3, [sp, #24]
   1597c:	movgt	r3, r9
   15980:	bgt	159e8 <close@plt+0x4a84>
   15984:	add	r5, r7, #8
   15988:	cmp	r4, r5
   1598c:	str	r2, [sp, #36]	; 0x24
   15990:	beq	15aa4 <close@plt+0x4b40>
   15994:	mov	r3, #8
   15998:	mov	r0, r4
   1599c:	str	r3, [sp]
   159a0:	rsb	r2, r2, #1
   159a4:	mvn	r3, #-2147483648	; 0x80000000
   159a8:	add	r1, sp, #36	; 0x24
   159ac:	bl	16fe0 <close@plt+0x607c>
   159b0:	mov	r4, r0
   159b4:	str	r0, [r7]
   159b8:	ldr	r0, [r7, #4]
   159bc:	ldr	r2, [sp, #36]	; 0x24
   159c0:	mov	r1, #0
   159c4:	sub	r2, r2, r0
   159c8:	add	r0, r4, r0, lsl #3
   159cc:	lsl	r2, r2, #3
   159d0:	bl	10ea4 <memset@plt>
   159d4:	ldr	r3, [sp, #40]	; 0x28
   159d8:	ldr	r5, [sp, #80]	; 0x50
   159dc:	ldr	r6, [sp, #84]	; 0x54
   159e0:	ldr	r2, [sp, #36]	; 0x24
   159e4:	str	r2, [r7, #4]
   159e8:	ldr	r2, [sp, #44]	; 0x2c
   159ec:	ldr	r9, [r4]
   159f0:	ldr	r7, [r4, #4]
   159f4:	orr	r2, r2, #1
   159f8:	add	fp, sp, #48	; 0x30
   159fc:	str	r2, [sp, #28]
   15a00:	str	r2, [sp, #4]
   15a04:	str	r3, [sp]
   15a08:	str	r6, [sp, #16]
   15a0c:	str	r5, [sp, #12]
   15a10:	mov	r1, r9
   15a14:	mov	r0, r7
   15a18:	str	fp, [sp, #8]
   15a1c:	mvn	r3, #0
   15a20:	mov	r2, sl
   15a24:	bl	124dc <close@plt+0x1578>
   15a28:	cmp	r9, r0
   15a2c:	bhi	15a90 <close@plt+0x4b2c>
   15a30:	ldr	r3, [pc, #168]	; 15ae0 <close@plt+0x4b7c>
   15a34:	add	r5, r0, #1
   15a38:	cmp	r7, r3
   15a3c:	str	r5, [r4]
   15a40:	beq	15a4c <close@plt+0x4ae8>
   15a44:	mov	r0, r7
   15a48:	bl	12210 <close@plt+0x12ac>
   15a4c:	mov	r0, r5
   15a50:	bl	16dc4 <close@plt+0x5e60>
   15a54:	ldr	lr, [sp, #84]	; 0x54
   15a58:	ldr	r3, [sp, #40]	; 0x28
   15a5c:	ldr	ip, [sp, #80]	; 0x50
   15a60:	mov	r2, sl
   15a64:	mov	r1, r5
   15a68:	str	r0, [r4, #4]
   15a6c:	ldr	r4, [sp, #28]
   15a70:	str	r3, [sp]
   15a74:	str	fp, [sp, #8]
   15a78:	str	r4, [sp, #4]
   15a7c:	str	lr, [sp, #16]
   15a80:	str	ip, [sp, #12]
   15a84:	mvn	r3, #0
   15a88:	mov	r7, r0
   15a8c:	bl	124dc <close@plt+0x1578>
   15a90:	ldr	r3, [sp, #24]
   15a94:	mov	r0, r7
   15a98:	str	r3, [r8]
   15a9c:	add	sp, sp, #92	; 0x5c
   15aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15aa4:	mov	r3, #8
   15aa8:	str	r3, [sp]
   15aac:	add	r1, sp, #36	; 0x24
   15ab0:	rsb	r2, r2, #1
   15ab4:	mov	r0, fp
   15ab8:	mvn	r3, #-2147483648	; 0x80000000
   15abc:	bl	16fe0 <close@plt+0x607c>
   15ac0:	mov	r4, r0
   15ac4:	ldm	r5, {r0, r1}
   15ac8:	str	r4, [r7]
   15acc:	stm	r4, {r0, r1}
   15ad0:	b	159b8 <close@plt+0x4a54>
   15ad4:	bl	10f58 <abort@plt>
   15ad8:	andeq	r9, r2, r0, lsl #3
   15adc:	strdeq	r9, [r2], -ip
   15ae0:			; <UNDEFINED> instruction: 0x000291b0
   15ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ae8:	mov	r5, r0
   15aec:	ldr	lr, [pc, #464]	; 15cc4 <close@plt+0x4d60>
   15af0:	mov	r6, r1
   15af4:	mov	sl, r2
   15af8:	mov	fp, r3
   15afc:	ldm	lr!, {r0, r1, r2, r3}
   15b00:	sub	sp, sp, #92	; 0x5c
   15b04:	add	ip, sp, #40	; 0x28
   15b08:	cmp	r6, #0
   15b0c:	cmpne	r5, #0
   15b10:	stmia	ip!, {r0, r1, r2, r3}
   15b14:	moveq	r4, #1
   15b18:	ldm	lr!, {r0, r1, r2, r3}
   15b1c:	movne	r4, #0
   15b20:	mov	r9, #10
   15b24:	str	r4, [sp, #28]
   15b28:	stmia	ip!, {r0, r1, r2, r3}
   15b2c:	ldm	lr, {r0, r1, r2, r3}
   15b30:	str	r9, [sp, #40]	; 0x28
   15b34:	stm	ip, {r0, r1, r2, r3}
   15b38:	beq	15cc0 <close@plt+0x4d5c>
   15b3c:	str	r5, [sp, #80]	; 0x50
   15b40:	str	r6, [sp, #84]	; 0x54
   15b44:	bl	10e80 <__errno_location@plt>
   15b48:	ldr	r7, [pc, #376]	; 15cc8 <close@plt+0x4d64>
   15b4c:	ldr	r2, [r7, #4]
   15b50:	ldr	r4, [r7]
   15b54:	cmp	r2, #0
   15b58:	ldr	r3, [r0]
   15b5c:	mov	r8, r0
   15b60:	str	r3, [sp, #24]
   15b64:	movgt	r3, r9
   15b68:	bgt	15bd0 <close@plt+0x4c6c>
   15b6c:	add	r5, r7, #8
   15b70:	cmp	r4, r5
   15b74:	str	r2, [sp, #36]	; 0x24
   15b78:	beq	15c90 <close@plt+0x4d2c>
   15b7c:	mov	r3, #8
   15b80:	mov	r0, r4
   15b84:	str	r3, [sp]
   15b88:	rsb	r2, r2, #1
   15b8c:	mvn	r3, #-2147483648	; 0x80000000
   15b90:	add	r1, sp, #36	; 0x24
   15b94:	bl	16fe0 <close@plt+0x607c>
   15b98:	mov	r4, r0
   15b9c:	str	r0, [r7]
   15ba0:	ldr	r0, [r7, #4]
   15ba4:	ldr	r2, [sp, #36]	; 0x24
   15ba8:	mov	r1, #0
   15bac:	sub	r2, r2, r0
   15bb0:	add	r0, r4, r0, lsl #3
   15bb4:	lsl	r2, r2, #3
   15bb8:	bl	10ea4 <memset@plt>
   15bbc:	ldr	r3, [sp, #40]	; 0x28
   15bc0:	ldr	r5, [sp, #80]	; 0x50
   15bc4:	ldr	r6, [sp, #84]	; 0x54
   15bc8:	ldr	r2, [sp, #36]	; 0x24
   15bcc:	str	r2, [r7, #4]
   15bd0:	ldr	r2, [sp, #44]	; 0x2c
   15bd4:	ldr	r9, [r4]
   15bd8:	ldr	r7, [r4, #4]
   15bdc:	orr	r2, r2, #1
   15be0:	str	r3, [sp]
   15be4:	add	r3, sp, #48	; 0x30
   15be8:	str	r2, [sp, #28]
   15bec:	str	r2, [sp, #4]
   15bf0:	str	r3, [sp, #8]
   15bf4:	str	r6, [sp, #16]
   15bf8:	str	r5, [sp, #12]
   15bfc:	mov	r1, r9
   15c00:	mov	r0, r7
   15c04:	mov	r3, fp
   15c08:	mov	r2, sl
   15c0c:	bl	124dc <close@plt+0x1578>
   15c10:	cmp	r9, r0
   15c14:	bhi	15c7c <close@plt+0x4d18>
   15c18:	ldr	r3, [pc, #172]	; 15ccc <close@plt+0x4d68>
   15c1c:	add	r5, r0, #1
   15c20:	cmp	r7, r3
   15c24:	str	r5, [r4]
   15c28:	beq	15c34 <close@plt+0x4cd0>
   15c2c:	mov	r0, r7
   15c30:	bl	12210 <close@plt+0x12ac>
   15c34:	mov	r0, r5
   15c38:	bl	16dc4 <close@plt+0x5e60>
   15c3c:	add	lr, sp, #48	; 0x30
   15c40:	ldr	ip, [sp, #84]	; 0x54
   15c44:	mov	r1, r5
   15c48:	ldr	r5, [sp, #28]
   15c4c:	mov	r3, fp
   15c50:	mov	r2, sl
   15c54:	str	r0, [r4, #4]
   15c58:	ldr	r4, [sp, #80]	; 0x50
   15c5c:	str	lr, [sp, #8]
   15c60:	ldr	lr, [sp, #40]	; 0x28
   15c64:	str	r5, [sp, #4]
   15c68:	str	ip, [sp, #16]
   15c6c:	str	r4, [sp, #12]
   15c70:	str	lr, [sp]
   15c74:	mov	r7, r0
   15c78:	bl	124dc <close@plt+0x1578>
   15c7c:	ldr	r3, [sp, #24]
   15c80:	mov	r0, r7
   15c84:	str	r3, [r8]
   15c88:	add	sp, sp, #92	; 0x5c
   15c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c90:	mov	r3, #8
   15c94:	str	r3, [sp]
   15c98:	add	r1, sp, #36	; 0x24
   15c9c:	rsb	r2, r2, #1
   15ca0:	ldr	r0, [sp, #28]
   15ca4:	mvn	r3, #-2147483648	; 0x80000000
   15ca8:	bl	16fe0 <close@plt+0x607c>
   15cac:	mov	r4, r0
   15cb0:	ldm	r5, {r0, r1}
   15cb4:	str	r4, [r7]
   15cb8:	stm	r4, {r0, r1}
   15cbc:	b	15ba0 <close@plt+0x4c3c>
   15cc0:	bl	10f58 <abort@plt>
   15cc4:	andeq	r9, r2, r0, lsl #3
   15cc8:	strdeq	r9, [r2], -ip
   15ccc:			; <UNDEFINED> instruction: 0x000291b0
   15cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cd4:	sub	sp, sp, #52	; 0x34
   15cd8:	mov	r5, r0
   15cdc:	mov	sl, r1
   15ce0:	mov	fp, r2
   15ce4:	bl	10e80 <__errno_location@plt>
   15ce8:	ldr	r4, [pc, #404]	; 15e84 <close@plt+0x4f20>
   15cec:	cmn	r5, #-2147483647	; 0x80000001
   15cf0:	ldr	r6, [r4]
   15cf4:	mov	r8, r0
   15cf8:	movne	r0, #0
   15cfc:	moveq	r0, #1
   15d00:	ldr	r3, [r8]
   15d04:	orrs	r0, r0, r5, lsr #31
   15d08:	str	r3, [sp, #28]
   15d0c:	bne	15e80 <close@plt+0x4f1c>
   15d10:	ldr	r2, [r4, #4]
   15d14:	cmp	r5, r2
   15d18:	blt	15d78 <close@plt+0x4e14>
   15d1c:	add	r7, r4, #8
   15d20:	cmp	r6, r7
   15d24:	str	r2, [sp, #44]	; 0x2c
   15d28:	beq	15e50 <close@plt+0x4eec>
   15d2c:	mov	r3, #8
   15d30:	sub	r2, r5, r2
   15d34:	mov	r0, r6
   15d38:	str	r3, [sp]
   15d3c:	add	r2, r2, #1
   15d40:	mvn	r3, #-2147483648	; 0x80000000
   15d44:	add	r1, sp, #44	; 0x2c
   15d48:	bl	16fe0 <close@plt+0x607c>
   15d4c:	mov	r6, r0
   15d50:	str	r0, [r4]
   15d54:	ldr	r0, [r4, #4]
   15d58:	ldr	r2, [sp, #44]	; 0x2c
   15d5c:	mov	r1, #0
   15d60:	sub	r2, r2, r0
   15d64:	add	r0, r6, r0, lsl #3
   15d68:	lsl	r2, r2, #3
   15d6c:	bl	10ea4 <memset@plt>
   15d70:	ldr	r3, [sp, #44]	; 0x2c
   15d74:	str	r3, [r4, #4]
   15d78:	ldr	r2, [r4, #56]	; 0x38
   15d7c:	add	r3, r6, r5, lsl #3
   15d80:	ldr	r1, [r4, #20]
   15d84:	ldr	r7, [r3, #4]
   15d88:	ldr	r9, [r6, r5, lsl #3]
   15d8c:	ldr	ip, [r4, #60]	; 0x3c
   15d90:	str	r3, [sp, #32]
   15d94:	ldr	r3, [r4, #16]
   15d98:	str	r2, [sp, #12]
   15d9c:	ldr	r2, [pc, #228]	; 15e88 <close@plt+0x4f24>
   15da0:	orr	r1, r1, #1
   15da4:	str	r1, [sp, #36]	; 0x24
   15da8:	str	r1, [sp, #4]
   15dac:	str	r2, [sp, #8]
   15db0:	str	r3, [sp]
   15db4:	mov	r0, r7
   15db8:	mov	r1, r9
   15dbc:	str	ip, [sp, #16]
   15dc0:	mov	r3, fp
   15dc4:	mov	r2, sl
   15dc8:	bl	124dc <close@plt+0x1578>
   15dcc:	cmp	r9, r0
   15dd0:	bhi	15e3c <close@plt+0x4ed8>
   15dd4:	ldr	r3, [pc, #176]	; 15e8c <close@plt+0x4f28>
   15dd8:	add	r9, r0, #1
   15ddc:	cmp	r7, r3
   15de0:	str	r9, [r6, r5, lsl #3]
   15de4:	beq	15df0 <close@plt+0x4e8c>
   15de8:	mov	r0, r7
   15dec:	bl	12210 <close@plt+0x12ac>
   15df0:	mov	r0, r9
   15df4:	bl	16dc4 <close@plt+0x5e60>
   15df8:	ldr	ip, [sp, #32]
   15dfc:	ldr	lr, [r4, #60]	; 0x3c
   15e00:	ldr	r5, [r4, #56]	; 0x38
   15e04:	mov	r3, fp
   15e08:	mov	r2, sl
   15e0c:	mov	r1, r9
   15e10:	str	r0, [ip, #4]
   15e14:	ldr	ip, [r4, #16]
   15e18:	ldr	r4, [pc, #104]	; 15e88 <close@plt+0x4f24>
   15e1c:	str	lr, [sp, #16]
   15e20:	str	r4, [sp, #8]
   15e24:	ldr	r4, [sp, #36]	; 0x24
   15e28:	str	r5, [sp, #12]
   15e2c:	str	r4, [sp, #4]
   15e30:	str	ip, [sp]
   15e34:	mov	r7, r0
   15e38:	bl	124dc <close@plt+0x1578>
   15e3c:	ldr	r3, [sp, #28]
   15e40:	mov	r0, r7
   15e44:	str	r3, [r8]
   15e48:	add	sp, sp, #52	; 0x34
   15e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e50:	mov	r3, #8
   15e54:	sub	r2, r5, r2
   15e58:	str	r3, [sp]
   15e5c:	add	r1, sp, #44	; 0x2c
   15e60:	add	r2, r2, #1
   15e64:	mvn	r3, #-2147483648	; 0x80000000
   15e68:	bl	16fe0 <close@plt+0x607c>
   15e6c:	mov	r6, r0
   15e70:	ldm	r7, {r0, r1}
   15e74:	str	r6, [r4]
   15e78:	stm	r6, {r0, r1}
   15e7c:	b	15d54 <close@plt+0x4df0>
   15e80:	bl	10f58 <abort@plt>
   15e84:	strdeq	r9, [r2], -ip
   15e88:	andeq	r9, r2, r4, lsl r1
   15e8c:			; <UNDEFINED> instruction: 0x000291b0
   15e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e94:	sub	sp, sp, #44	; 0x2c
   15e98:	mov	r9, r0
   15e9c:	mov	sl, r1
   15ea0:	bl	10e80 <__errno_location@plt>
   15ea4:	ldr	r4, [pc, #360]	; 16014 <close@plt+0x50b0>
   15ea8:	ldr	r2, [r4, #4]
   15eac:	ldr	r5, [r4]
   15eb0:	cmp	r2, #0
   15eb4:	ldr	r3, [r0]
   15eb8:	mov	r7, r0
   15ebc:	str	r3, [sp, #24]
   15ec0:	bgt	15f1c <close@plt+0x4fb8>
   15ec4:	add	r6, r4, #8
   15ec8:	cmp	r5, r6
   15ecc:	str	r2, [sp, #36]	; 0x24
   15ed0:	beq	15fe4 <close@plt+0x5080>
   15ed4:	mov	r3, #8
   15ed8:	mov	r0, r5
   15edc:	str	r3, [sp]
   15ee0:	rsb	r2, r2, #1
   15ee4:	mvn	r3, #-2147483648	; 0x80000000
   15ee8:	add	r1, sp, #36	; 0x24
   15eec:	bl	16fe0 <close@plt+0x607c>
   15ef0:	mov	r5, r0
   15ef4:	str	r0, [r4]
   15ef8:	ldr	r0, [r4, #4]
   15efc:	ldr	r2, [sp, #36]	; 0x24
   15f00:	mov	r1, #0
   15f04:	sub	r2, r2, r0
   15f08:	add	r0, r5, r0, lsl #3
   15f0c:	lsl	r2, r2, #3
   15f10:	bl	10ea4 <memset@plt>
   15f14:	ldr	r3, [sp, #36]	; 0x24
   15f18:	str	r3, [r4, #4]
   15f1c:	ldr	r1, [r4, #20]
   15f20:	ldr	r8, [r5]
   15f24:	ldr	r6, [r5, #4]
   15f28:	ldr	r2, [r4, #56]	; 0x38
   15f2c:	ldr	r3, [r4, #16]
   15f30:	ldr	ip, [r4, #60]	; 0x3c
   15f34:	ldr	fp, [pc, #220]	; 16018 <close@plt+0x50b4>
   15f38:	orr	r1, r1, #1
   15f3c:	str	r1, [sp, #28]
   15f40:	str	r1, [sp, #4]
   15f44:	str	r2, [sp, #12]
   15f48:	str	r3, [sp]
   15f4c:	mov	r1, r8
   15f50:	mov	r0, r6
   15f54:	str	ip, [sp, #16]
   15f58:	str	fp, [sp, #8]
   15f5c:	mov	r3, sl
   15f60:	mov	r2, r9
   15f64:	bl	124dc <close@plt+0x1578>
   15f68:	cmp	r8, r0
   15f6c:	bhi	15fd0 <close@plt+0x506c>
   15f70:	ldr	r3, [pc, #164]	; 1601c <close@plt+0x50b8>
   15f74:	add	r8, r0, #1
   15f78:	cmp	r6, r3
   15f7c:	str	r8, [r5]
   15f80:	beq	15f8c <close@plt+0x5028>
   15f84:	mov	r0, r6
   15f88:	bl	12210 <close@plt+0x12ac>
   15f8c:	mov	r0, r8
   15f90:	bl	16dc4 <close@plt+0x5e60>
   15f94:	ldr	lr, [r4, #60]	; 0x3c
   15f98:	ldr	ip, [r4, #16]
   15f9c:	mov	r3, sl
   15fa0:	mov	r2, r9
   15fa4:	mov	r1, r8
   15fa8:	str	r0, [r5, #4]
   15fac:	ldr	r5, [r4, #56]	; 0x38
   15fb0:	ldr	r4, [sp, #28]
   15fb4:	str	fp, [sp, #8]
   15fb8:	str	r4, [sp, #4]
   15fbc:	str	lr, [sp, #16]
   15fc0:	str	r5, [sp, #12]
   15fc4:	str	ip, [sp]
   15fc8:	mov	r6, r0
   15fcc:	bl	124dc <close@plt+0x1578>
   15fd0:	ldr	r3, [sp, #24]
   15fd4:	mov	r0, r6
   15fd8:	str	r3, [r7]
   15fdc:	add	sp, sp, #44	; 0x2c
   15fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fe4:	mov	r3, #8
   15fe8:	str	r3, [sp]
   15fec:	add	r1, sp, #36	; 0x24
   15ff0:	rsb	r2, r2, #1
   15ff4:	mvn	r3, #-2147483648	; 0x80000000
   15ff8:	mov	r0, #0
   15ffc:	bl	16fe0 <close@plt+0x607c>
   16000:	mov	r5, r0
   16004:	ldm	r6, {r0, r1}
   16008:	str	r5, [r4]
   1600c:	stm	r5, {r0, r1}
   16010:	b	15ef8 <close@plt+0x4f94>
   16014:	strdeq	r9, [r2], -ip
   16018:	andeq	r9, r2, r4, lsl r1
   1601c:			; <UNDEFINED> instruction: 0x000291b0
   16020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16024:	sub	sp, sp, #44	; 0x2c
   16028:	mov	r5, r0
   1602c:	mov	sl, r1
   16030:	bl	10e80 <__errno_location@plt>
   16034:	ldr	r4, [pc, #396]	; 161c8 <close@plt+0x5264>
   16038:	cmn	r5, #-2147483647	; 0x80000001
   1603c:	ldr	r6, [r4]
   16040:	mov	r8, r0
   16044:	movne	r0, #0
   16048:	moveq	r0, #1
   1604c:	ldr	r3, [r8]
   16050:	orrs	r0, r0, r5, lsr #31
   16054:	str	r3, [sp, #24]
   16058:	bne	161c4 <close@plt+0x5260>
   1605c:	ldr	r2, [r4, #4]
   16060:	cmp	r5, r2
   16064:	blt	160c4 <close@plt+0x5160>
   16068:	add	r7, r4, #8
   1606c:	cmp	r6, r7
   16070:	str	r2, [sp, #36]	; 0x24
   16074:	beq	16194 <close@plt+0x5230>
   16078:	mov	r3, #8
   1607c:	sub	r2, r5, r2
   16080:	mov	r0, r6
   16084:	str	r3, [sp]
   16088:	add	r2, r2, #1
   1608c:	mvn	r3, #-2147483648	; 0x80000000
   16090:	add	r1, sp, #36	; 0x24
   16094:	bl	16fe0 <close@plt+0x607c>
   16098:	mov	r6, r0
   1609c:	str	r0, [r4]
   160a0:	ldr	r0, [r4, #4]
   160a4:	ldr	r2, [sp, #36]	; 0x24
   160a8:	mov	r1, #0
   160ac:	sub	r2, r2, r0
   160b0:	add	r0, r6, r0, lsl #3
   160b4:	lsl	r2, r2, #3
   160b8:	bl	10ea4 <memset@plt>
   160bc:	ldr	r3, [sp, #36]	; 0x24
   160c0:	str	r3, [r4, #4]
   160c4:	ldr	r2, [r4, #56]	; 0x38
   160c8:	add	fp, r6, r5, lsl #3
   160cc:	ldr	r1, [r4, #20]
   160d0:	ldr	r9, [r6, r5, lsl #3]
   160d4:	ldr	r7, [fp, #4]
   160d8:	ldr	r3, [r4, #16]
   160dc:	ldr	ip, [r4, #60]	; 0x3c
   160e0:	str	r2, [sp, #12]
   160e4:	ldr	r2, [pc, #224]	; 161cc <close@plt+0x5268>
   160e8:	orr	r1, r1, #1
   160ec:	str	r1, [sp, #28]
   160f0:	str	r1, [sp, #4]
   160f4:	str	r2, [sp, #8]
   160f8:	str	r3, [sp]
   160fc:	mov	r0, r7
   16100:	mov	r1, r9
   16104:	str	ip, [sp, #16]
   16108:	mvn	r3, #0
   1610c:	mov	r2, sl
   16110:	bl	124dc <close@plt+0x1578>
   16114:	cmp	r9, r0
   16118:	bhi	16180 <close@plt+0x521c>
   1611c:	ldr	r3, [pc, #172]	; 161d0 <close@plt+0x526c>
   16120:	add	r9, r0, #1
   16124:	cmp	r7, r3
   16128:	str	r9, [r6, r5, lsl #3]
   1612c:	beq	16138 <close@plt+0x51d4>
   16130:	mov	r0, r7
   16134:	bl	12210 <close@plt+0x12ac>
   16138:	mov	r0, r9
   1613c:	bl	16dc4 <close@plt+0x5e60>
   16140:	ldr	ip, [r4, #60]	; 0x3c
   16144:	ldr	r3, [r4, #16]
   16148:	ldr	lr, [r4, #56]	; 0x38
   1614c:	ldr	r4, [pc, #120]	; 161cc <close@plt+0x5268>
   16150:	mov	r2, sl
   16154:	mov	r1, r9
   16158:	str	r0, [fp, #4]
   1615c:	str	r4, [sp, #8]
   16160:	ldr	r4, [sp, #28]
   16164:	str	r3, [sp]
   16168:	str	r4, [sp, #4]
   1616c:	str	ip, [sp, #16]
   16170:	str	lr, [sp, #12]
   16174:	mvn	r3, #0
   16178:	mov	r7, r0
   1617c:	bl	124dc <close@plt+0x1578>
   16180:	ldr	r3, [sp, #24]
   16184:	mov	r0, r7
   16188:	str	r3, [r8]
   1618c:	add	sp, sp, #44	; 0x2c
   16190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16194:	mov	r3, #8
   16198:	sub	r2, r5, r2
   1619c:	str	r3, [sp]
   161a0:	add	r1, sp, #36	; 0x24
   161a4:	add	r2, r2, #1
   161a8:	mvn	r3, #-2147483648	; 0x80000000
   161ac:	bl	16fe0 <close@plt+0x607c>
   161b0:	mov	r6, r0
   161b4:	ldm	r7, {r0, r1}
   161b8:	str	r6, [r4]
   161bc:	stm	r6, {r0, r1}
   161c0:	b	160a0 <close@plt+0x513c>
   161c4:	bl	10f58 <abort@plt>
   161c8:	strdeq	r9, [r2], -ip
   161cc:	andeq	r9, r2, r4, lsl r1
   161d0:			; <UNDEFINED> instruction: 0x000291b0
   161d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161d8:	sub	sp, sp, #44	; 0x2c
   161dc:	mov	sl, r0
   161e0:	bl	10e80 <__errno_location@plt>
   161e4:	ldr	r4, [pc, #348]	; 16348 <close@plt+0x53e4>
   161e8:	ldr	r2, [r4, #4]
   161ec:	ldr	r5, [r4]
   161f0:	cmp	r2, #0
   161f4:	ldr	r3, [r0]
   161f8:	mov	r8, r0
   161fc:	str	r3, [sp, #28]
   16200:	bgt	1625c <close@plt+0x52f8>
   16204:	add	r6, r4, #8
   16208:	cmp	r5, r6
   1620c:	str	r2, [sp, #36]	; 0x24
   16210:	beq	16318 <close@plt+0x53b4>
   16214:	mov	r3, #8
   16218:	mov	r0, r5
   1621c:	str	r3, [sp]
   16220:	rsb	r2, r2, #1
   16224:	mvn	r3, #-2147483648	; 0x80000000
   16228:	add	r1, sp, #36	; 0x24
   1622c:	bl	16fe0 <close@plt+0x607c>
   16230:	mov	r5, r0
   16234:	str	r0, [r4]
   16238:	ldr	r0, [r4, #4]
   1623c:	ldr	r2, [sp, #36]	; 0x24
   16240:	mov	r1, #0
   16244:	sub	r2, r2, r0
   16248:	add	r0, r5, r0, lsl #3
   1624c:	lsl	r2, r2, #3
   16250:	bl	10ea4 <memset@plt>
   16254:	ldr	r3, [sp, #36]	; 0x24
   16258:	str	r3, [r4, #4]
   1625c:	ldr	r7, [r4, #20]
   16260:	ldr	r9, [r5]
   16264:	ldr	r6, [r5, #4]
   16268:	ldr	r2, [r4, #56]	; 0x38
   1626c:	ldr	r3, [r4, #16]
   16270:	ldr	ip, [r4, #60]	; 0x3c
   16274:	ldr	fp, [pc, #208]	; 1634c <close@plt+0x53e8>
   16278:	orr	r7, r7, #1
   1627c:	str	r2, [sp, #12]
   16280:	str	r3, [sp]
   16284:	str	r7, [sp, #4]
   16288:	mov	r1, r9
   1628c:	mov	r0, r6
   16290:	str	ip, [sp, #16]
   16294:	str	fp, [sp, #8]
   16298:	mvn	r3, #0
   1629c:	mov	r2, sl
   162a0:	bl	124dc <close@plt+0x1578>
   162a4:	cmp	r9, r0
   162a8:	bhi	16304 <close@plt+0x53a0>
   162ac:	ldr	r3, [pc, #156]	; 16350 <close@plt+0x53ec>
   162b0:	add	r9, r0, #1
   162b4:	cmp	r6, r3
   162b8:	str	r9, [r5]
   162bc:	beq	162c8 <close@plt+0x5364>
   162c0:	mov	r0, r6
   162c4:	bl	12210 <close@plt+0x12ac>
   162c8:	mov	r0, r9
   162cc:	bl	16dc4 <close@plt+0x5e60>
   162d0:	ldr	ip, [r4, #60]	; 0x3c
   162d4:	ldr	r3, [r4, #16]
   162d8:	ldr	lr, [r4, #56]	; 0x38
   162dc:	mov	r2, sl
   162e0:	mov	r1, r9
   162e4:	str	r0, [r5, #4]
   162e8:	str	r3, [sp]
   162ec:	stmib	sp, {r7, fp}
   162f0:	str	ip, [sp, #16]
   162f4:	str	lr, [sp, #12]
   162f8:	mvn	r3, #0
   162fc:	mov	r6, r0
   16300:	bl	124dc <close@plt+0x1578>
   16304:	ldr	r3, [sp, #28]
   16308:	mov	r0, r6
   1630c:	str	r3, [r8]
   16310:	add	sp, sp, #44	; 0x2c
   16314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16318:	mov	r3, #8
   1631c:	str	r3, [sp]
   16320:	add	r1, sp, #36	; 0x24
   16324:	rsb	r2, r2, #1
   16328:	mvn	r3, #-2147483648	; 0x80000000
   1632c:	mov	r0, #0
   16330:	bl	16fe0 <close@plt+0x607c>
   16334:	mov	r5, r0
   16338:	ldm	r6, {r0, r1}
   1633c:	str	r5, [r4]
   16340:	stm	r5, {r0, r1}
   16344:	b	16238 <close@plt+0x52d4>
   16348:	strdeq	r9, [r2], -ip
   1634c:	andeq	r9, r2, r4, lsl r1
   16350:			; <UNDEFINED> instruction: 0x000291b0
   16354:	mov	r2, #3
   16358:	mov	r1, #0
   1635c:	b	17570 <close@plt+0x660c>
   16360:	push	{r4, r5, r6, lr}
   16364:	sub	sp, sp, #32
   16368:	cmp	r1, #0
   1636c:	mov	r4, r0
   16370:	ldr	r5, [sp, #48]	; 0x30
   16374:	ldr	r6, [sp, #52]	; 0x34
   16378:	beq	16690 <close@plt+0x572c>
   1637c:	stm	sp, {r2, r3}
   16380:	mov	r3, r1
   16384:	ldr	r2, [pc, #808]	; 166b4 <close@plt+0x5750>
   16388:	mov	r1, #1
   1638c:	bl	10ec8 <__fprintf_chk@plt>
   16390:	mov	r2, #5
   16394:	ldr	r1, [pc, #796]	; 166b8 <close@plt+0x5754>
   16398:	mov	r0, #0
   1639c:	bl	10da8 <dcgettext@plt>
   163a0:	ldr	r3, [pc, #788]	; 166bc <close@plt+0x5758>
   163a4:	ldr	r2, [pc, #788]	; 166c0 <close@plt+0x575c>
   163a8:	str	r3, [sp]
   163ac:	mov	r1, #1
   163b0:	mov	r3, r0
   163b4:	mov	r0, r4
   163b8:	bl	10ec8 <__fprintf_chk@plt>
   163bc:	mov	r1, r4
   163c0:	mov	r0, #10
   163c4:	bl	10d9c <fputc_unlocked@plt>
   163c8:	mov	r2, #5
   163cc:	ldr	r1, [pc, #752]	; 166c4 <close@plt+0x5760>
   163d0:	mov	r0, #0
   163d4:	bl	10da8 <dcgettext@plt>
   163d8:	mov	r1, #1
   163dc:	ldr	r3, [pc, #740]	; 166c8 <close@plt+0x5764>
   163e0:	mov	r2, r0
   163e4:	mov	r0, r4
   163e8:	bl	10ec8 <__fprintf_chk@plt>
   163ec:	mov	r1, r4
   163f0:	mov	r0, #10
   163f4:	bl	10d9c <fputc_unlocked@plt>
   163f8:	cmp	r6, #9
   163fc:	ldrls	pc, [pc, r6, lsl #2]
   16400:	b	166a8 <close@plt+0x5744>
   16404:	andeq	r6, r1, r8, lsl #9
   16408:	muleq	r1, r0, r4
   1640c:			; <UNDEFINED> instruction: 0x000164bc
   16410:	strdeq	r6, [r1], -r0
   16414:	andeq	r6, r1, ip, lsr #10
   16418:	andeq	r6, r1, r8, ror #10
   1641c:	andeq	r6, r1, r4, lsr #11
   16420:	andeq	r6, r1, r8, ror #11
   16424:	andeq	r6, r1, r8, lsr r6
   16428:	andeq	r6, r1, ip, lsr #8
   1642c:	ldr	r1, [pc, #664]	; 166cc <close@plt+0x5768>
   16430:	mov	r2, #5
   16434:	mov	r0, #0
   16438:	bl	10da8 <dcgettext@plt>
   1643c:	ldr	ip, [r5, #32]
   16440:	ldr	r1, [r5, #28]
   16444:	ldr	r2, [r5, #24]
   16448:	ldr	r3, [r5]
   1644c:	ldr	r6, [r5, #20]
   16450:	str	ip, [sp, #28]
   16454:	ldr	lr, [r5, #16]
   16458:	str	r1, [sp, #24]
   1645c:	ldr	ip, [r5, #12]
   16460:	str	r2, [sp, #20]
   16464:	ldr	r1, [r5, #8]
   16468:	ldr	r2, [r5, #4]
   1646c:	str	r6, [sp, #16]
   16470:	stmib	sp, {r1, ip, lr}
   16474:	mov	r1, #1
   16478:	str	r2, [sp]
   1647c:	mov	r2, r0
   16480:	mov	r0, r4
   16484:	bl	10ec8 <__fprintf_chk@plt>
   16488:	add	sp, sp, #32
   1648c:	pop	{r4, r5, r6, pc}
   16490:	mov	r2, #5
   16494:	ldr	r1, [pc, #564]	; 166d0 <close@plt+0x576c>
   16498:	mov	r0, #0
   1649c:	bl	10da8 <dcgettext@plt>
   164a0:	ldr	r3, [r5]
   164a4:	mov	r1, #1
   164a8:	mov	r2, r0
   164ac:	mov	r0, r4
   164b0:	add	sp, sp, #32
   164b4:	pop	{r4, r5, r6, lr}
   164b8:	b	10ec8 <__fprintf_chk@plt>
   164bc:	mov	r2, #5
   164c0:	ldr	r1, [pc, #524]	; 166d4 <close@plt+0x5770>
   164c4:	mov	r0, #0
   164c8:	bl	10da8 <dcgettext@plt>
   164cc:	ldr	r2, [r5, #4]
   164d0:	ldr	r3, [r5]
   164d4:	mov	r1, #1
   164d8:	str	r2, [sp, #48]	; 0x30
   164dc:	mov	r2, r0
   164e0:	mov	r0, r4
   164e4:	add	sp, sp, #32
   164e8:	pop	{r4, r5, r6, lr}
   164ec:	b	10ec8 <__fprintf_chk@plt>
   164f0:	mov	r2, #5
   164f4:	ldr	r1, [pc, #476]	; 166d8 <close@plt+0x5774>
   164f8:	mov	r0, #0
   164fc:	bl	10da8 <dcgettext@plt>
   16500:	ldr	r1, [r5, #8]
   16504:	ldr	r2, [r5, #4]
   16508:	ldr	r3, [r5]
   1650c:	str	r1, [sp, #52]	; 0x34
   16510:	str	r2, [sp, #48]	; 0x30
   16514:	mov	r1, #1
   16518:	mov	r2, r0
   1651c:	mov	r0, r4
   16520:	add	sp, sp, #32
   16524:	pop	{r4, r5, r6, lr}
   16528:	b	10ec8 <__fprintf_chk@plt>
   1652c:	mov	r2, #5
   16530:	ldr	r1, [pc, #420]	; 166dc <close@plt+0x5778>
   16534:	mov	r0, #0
   16538:	bl	10da8 <dcgettext@plt>
   1653c:	ldr	r1, [r5, #8]
   16540:	ldr	ip, [r5, #12]
   16544:	ldr	r2, [r5, #4]
   16548:	ldr	r3, [r5]
   1654c:	stmib	sp, {r1, ip}
   16550:	str	r2, [sp]
   16554:	mov	r1, #1
   16558:	mov	r2, r0
   1655c:	mov	r0, r4
   16560:	bl	10ec8 <__fprintf_chk@plt>
   16564:	b	16488 <close@plt+0x5524>
   16568:	mov	r2, #5
   1656c:	ldr	r1, [pc, #364]	; 166e0 <close@plt+0x577c>
   16570:	mov	r0, #0
   16574:	bl	10da8 <dcgettext@plt>
   16578:	add	r1, r5, #8
   1657c:	ldr	r2, [r5, #4]
   16580:	ldm	r1, {r1, ip, lr}
   16584:	ldr	r3, [r5]
   16588:	str	r2, [sp]
   1658c:	stmib	sp, {r1, ip, lr}
   16590:	mov	r1, #1
   16594:	mov	r2, r0
   16598:	mov	r0, r4
   1659c:	bl	10ec8 <__fprintf_chk@plt>
   165a0:	b	16488 <close@plt+0x5524>
   165a4:	mov	r2, #5
   165a8:	ldr	r1, [pc, #308]	; 166e4 <close@plt+0x5780>
   165ac:	mov	r0, #0
   165b0:	bl	10da8 <dcgettext@plt>
   165b4:	add	r1, r5, #8
   165b8:	ldr	r2, [r5, #4]
   165bc:	ldm	r1, {r1, ip, lr}
   165c0:	ldr	r6, [r5, #20]
   165c4:	ldr	r3, [r5]
   165c8:	stmib	sp, {r1, ip, lr}
   165cc:	mov	r1, #1
   165d0:	str	r2, [sp]
   165d4:	str	r6, [sp, #16]
   165d8:	mov	r2, r0
   165dc:	mov	r0, r4
   165e0:	bl	10ec8 <__fprintf_chk@plt>
   165e4:	b	16488 <close@plt+0x5524>
   165e8:	mov	r2, #5
   165ec:	ldr	r1, [pc, #244]	; 166e8 <close@plt+0x5784>
   165f0:	mov	r0, #0
   165f4:	bl	10da8 <dcgettext@plt>
   165f8:	ldr	r2, [r5, #24]
   165fc:	ldr	r3, [r5]
   16600:	ldr	r6, [r5, #20]
   16604:	ldr	lr, [r5, #16]
   16608:	ldr	ip, [r5, #12]
   1660c:	str	r2, [sp, #20]
   16610:	ldr	r1, [r5, #8]
   16614:	ldr	r2, [r5, #4]
   16618:	str	r6, [sp, #16]
   1661c:	stmib	sp, {r1, ip, lr}
   16620:	mov	r1, #1
   16624:	str	r2, [sp]
   16628:	mov	r2, r0
   1662c:	mov	r0, r4
   16630:	bl	10ec8 <__fprintf_chk@plt>
   16634:	b	16488 <close@plt+0x5524>
   16638:	mov	r2, #5
   1663c:	ldr	r1, [pc, #168]	; 166ec <close@plt+0x5788>
   16640:	mov	r0, #0
   16644:	bl	10da8 <dcgettext@plt>
   16648:	ldr	r1, [r5, #28]
   1664c:	ldr	r2, [r5, #24]
   16650:	ldr	r3, [r5]
   16654:	ldr	r6, [r5, #20]
   16658:	ldr	lr, [r5, #16]
   1665c:	str	r1, [sp, #24]
   16660:	ldr	ip, [r5, #12]
   16664:	str	r2, [sp, #20]
   16668:	ldr	r1, [r5, #8]
   1666c:	ldr	r2, [r5, #4]
   16670:	str	r6, [sp, #16]
   16674:	stmib	sp, {r1, ip, lr}
   16678:	mov	r1, #1
   1667c:	str	r2, [sp]
   16680:	mov	r2, r0
   16684:	mov	r0, r4
   16688:	bl	10ec8 <__fprintf_chk@plt>
   1668c:	b	16488 <close@plt+0x5524>
   16690:	str	r3, [sp]
   16694:	mov	r1, #1
   16698:	mov	r3, r2
   1669c:	ldr	r2, [pc, #76]	; 166f0 <close@plt+0x578c>
   166a0:	bl	10ec8 <__fprintf_chk@plt>
   166a4:	b	16390 <close@plt+0x542c>
   166a8:	mov	r2, #5
   166ac:	ldr	r1, [pc, #64]	; 166f4 <close@plt+0x5790>
   166b0:	b	16434 <close@plt+0x54d0>
   166b4:	andeq	r8, r1, r4, lsr #13
   166b8:			; <UNDEFINED> instruction: 0x000186b8
   166bc:	andeq	r0, r0, r6, ror #15
   166c0:	muleq	r1, r0, r9
   166c4:			; <UNDEFINED> instruction: 0x000186bc
   166c8:	andeq	r8, r1, r8, ror #14
   166cc:	muleq	r1, r8, r8
   166d0:	andeq	r8, r1, ip, lsl #15
   166d4:	muleq	r1, ip, r7
   166d8:			; <UNDEFINED> instruction: 0x000187b4
   166dc:	ldrdeq	r8, [r1], -r0
   166e0:	strdeq	r8, [r1], -r0
   166e4:	andeq	r8, r1, r4, lsl r8
   166e8:	andeq	r8, r1, ip, lsr r8
   166ec:	andeq	r8, r1, r8, ror #16
   166f0:			; <UNDEFINED> instruction: 0x000186b0
   166f4:	andeq	r8, r1, ip, asr #17
   166f8:	push	{r4, r5, lr}
   166fc:	sub	sp, sp, #12
   16700:	ldr	r5, [sp, #24]
   16704:	ldr	ip, [r5]
   16708:	cmp	ip, #0
   1670c:	beq	16728 <close@plt+0x57c4>
   16710:	mov	lr, r5
   16714:	mov	ip, #0
   16718:	ldr	r4, [lr, #4]!
   1671c:	add	ip, ip, #1
   16720:	cmp	r4, #0
   16724:	bne	16718 <close@plt+0x57b4>
   16728:	stm	sp, {r5, ip}
   1672c:	bl	16360 <close@plt+0x53fc>
   16730:	add	sp, sp, #12
   16734:	pop	{r4, r5, pc}
   16738:	push	{r4, r5, lr}
   1673c:	sub	sp, sp, #76	; 0x4c
   16740:	mov	r5, r0
   16744:	ldr	ip, [sp, #88]	; 0x58
   16748:	ldr	r0, [ip]
   1674c:	cmp	r0, #0
   16750:	str	r0, [sp, #32]
   16754:	beq	16b28 <close@plt+0x5bc4>
   16758:	ldr	r0, [ip, #4]
   1675c:	cmp	r0, #0
   16760:	str	r0, [sp, #36]	; 0x24
   16764:	beq	16b30 <close@plt+0x5bcc>
   16768:	ldr	r0, [ip, #8]
   1676c:	cmp	r0, #0
   16770:	str	r0, [sp, #40]	; 0x28
   16774:	beq	16b38 <close@plt+0x5bd4>
   16778:	ldr	r0, [ip, #12]
   1677c:	cmp	r0, #0
   16780:	str	r0, [sp, #44]	; 0x2c
   16784:	beq	16b40 <close@plt+0x5bdc>
   16788:	ldr	r0, [ip, #16]
   1678c:	cmp	r0, #0
   16790:	str	r0, [sp, #48]	; 0x30
   16794:	beq	16b48 <close@plt+0x5be4>
   16798:	ldr	r0, [ip, #20]
   1679c:	cmp	r0, #0
   167a0:	str	r0, [sp, #52]	; 0x34
   167a4:	beq	16b50 <close@plt+0x5bec>
   167a8:	ldr	r0, [ip, #24]
   167ac:	cmp	r0, #0
   167b0:	str	r0, [sp, #56]	; 0x38
   167b4:	beq	16b58 <close@plt+0x5bf4>
   167b8:	ldr	r0, [ip, #28]
   167bc:	cmp	r0, #0
   167c0:	str	r0, [sp, #60]	; 0x3c
   167c4:	beq	16b60 <close@plt+0x5bfc>
   167c8:	ldr	r0, [ip, #32]
   167cc:	cmp	r0, #0
   167d0:	str	r0, [sp, #64]	; 0x40
   167d4:	beq	16b68 <close@plt+0x5c04>
   167d8:	ldr	r0, [ip, #36]	; 0x24
   167dc:	cmp	r0, #0
   167e0:	movne	r4, #10
   167e4:	moveq	r4, #9
   167e8:	cmp	r1, #0
   167ec:	beq	16b00 <close@plt+0x5b9c>
   167f0:	stm	sp, {r2, r3}
   167f4:	mov	r0, r5
   167f8:	mov	r3, r1
   167fc:	ldr	r2, [pc, #876]	; 16b70 <close@plt+0x5c0c>
   16800:	mov	r1, #1
   16804:	bl	10ec8 <__fprintf_chk@plt>
   16808:	mov	r2, #5
   1680c:	ldr	r1, [pc, #864]	; 16b74 <close@plt+0x5c10>
   16810:	mov	r0, #0
   16814:	bl	10da8 <dcgettext@plt>
   16818:	ldr	r3, [pc, #856]	; 16b78 <close@plt+0x5c14>
   1681c:	ldr	r2, [pc, #856]	; 16b7c <close@plt+0x5c18>
   16820:	str	r3, [sp]
   16824:	mov	r1, #1
   16828:	mov	r3, r0
   1682c:	mov	r0, r5
   16830:	bl	10ec8 <__fprintf_chk@plt>
   16834:	mov	r1, r5
   16838:	mov	r0, #10
   1683c:	bl	10d9c <fputc_unlocked@plt>
   16840:	mov	r2, #5
   16844:	ldr	r1, [pc, #820]	; 16b80 <close@plt+0x5c1c>
   16848:	mov	r0, #0
   1684c:	bl	10da8 <dcgettext@plt>
   16850:	mov	r1, #1
   16854:	ldr	r3, [pc, #808]	; 16b84 <close@plt+0x5c20>
   16858:	mov	r2, r0
   1685c:	mov	r0, r5
   16860:	bl	10ec8 <__fprintf_chk@plt>
   16864:	mov	r1, r5
   16868:	mov	r0, #10
   1686c:	bl	10d9c <fputc_unlocked@plt>
   16870:	cmp	r4, #9
   16874:	ldrls	pc, [pc, r4, lsl #2]
   16878:	b	16b1c <close@plt+0x5bb8>
   1687c:	andeq	r6, r1, r0, lsl #18
   16880:	andeq	r6, r1, r8, lsl #18
   16884:	andeq	r6, r1, r4, lsr r9
   16888:	andeq	r6, r1, r8, ror #18
   1688c:	andeq	r6, r1, r0, lsr #19
   16890:	ldrdeq	r6, [r1], -ip
   16894:	andeq	r6, r1, r8, lsl sl
   16898:	andeq	r6, r1, ip, asr sl
   1689c:	andeq	r6, r1, r8, lsr #21
   168a0:	andeq	r6, r1, r4, lsr #17
   168a4:	ldr	r1, [pc, #732]	; 16b88 <close@plt+0x5c24>
   168a8:	mov	r2, #5
   168ac:	mov	r0, #0
   168b0:	bl	10da8 <dcgettext@plt>
   168b4:	ldr	ip, [sp, #64]	; 0x40
   168b8:	ldr	r1, [sp, #60]	; 0x3c
   168bc:	ldr	r2, [sp, #56]	; 0x38
   168c0:	ldr	lr, [sp, #48]	; 0x30
   168c4:	str	ip, [sp, #28]
   168c8:	str	r1, [sp, #24]
   168cc:	ldr	ip, [sp, #44]	; 0x2c
   168d0:	ldr	r1, [sp, #40]	; 0x28
   168d4:	ldr	r4, [sp, #52]	; 0x34
   168d8:	str	r2, [sp, #20]
   168dc:	ldr	r2, [sp, #36]	; 0x24
   168e0:	stmib	sp, {r1, ip, lr}
   168e4:	mov	r1, #1
   168e8:	str	r2, [sp]
   168ec:	ldr	r3, [sp, #32]
   168f0:	str	r4, [sp, #16]
   168f4:	mov	r2, r0
   168f8:	mov	r0, r5
   168fc:	bl	10ec8 <__fprintf_chk@plt>
   16900:	add	sp, sp, #76	; 0x4c
   16904:	pop	{r4, r5, pc}
   16908:	mov	r2, #5
   1690c:	ldr	r1, [pc, #632]	; 16b8c <close@plt+0x5c28>
   16910:	mov	r0, #0
   16914:	bl	10da8 <dcgettext@plt>
   16918:	ldr	r3, [sp, #32]
   1691c:	mov	r1, #1
   16920:	mov	r2, r0
   16924:	mov	r0, r5
   16928:	add	sp, sp, #76	; 0x4c
   1692c:	pop	{r4, r5, lr}
   16930:	b	10ec8 <__fprintf_chk@plt>
   16934:	mov	r2, #5
   16938:	ldr	r1, [pc, #592]	; 16b90 <close@plt+0x5c2c>
   1693c:	mov	r0, #0
   16940:	bl	10da8 <dcgettext@plt>
   16944:	ldr	r2, [sp, #36]	; 0x24
   16948:	ldr	r3, [sp, #32]
   1694c:	str	r2, [sp, #88]	; 0x58
   16950:	mov	r1, #1
   16954:	mov	r2, r0
   16958:	mov	r0, r5
   1695c:	add	sp, sp, #76	; 0x4c
   16960:	pop	{r4, r5, lr}
   16964:	b	10ec8 <__fprintf_chk@plt>
   16968:	mov	r2, #5
   1696c:	ldr	r1, [pc, #544]	; 16b94 <close@plt+0x5c30>
   16970:	mov	r0, #0
   16974:	bl	10da8 <dcgettext@plt>
   16978:	ldr	r1, [sp, #40]	; 0x28
   1697c:	ldr	r2, [sp, #36]	; 0x24
   16980:	str	r1, [sp, #4]
   16984:	str	r2, [sp]
   16988:	ldr	r3, [sp, #32]
   1698c:	mov	r1, #1
   16990:	mov	r2, r0
   16994:	mov	r0, r5
   16998:	bl	10ec8 <__fprintf_chk@plt>
   1699c:	b	16900 <close@plt+0x599c>
   169a0:	mov	r2, #5
   169a4:	ldr	r1, [pc, #492]	; 16b98 <close@plt+0x5c34>
   169a8:	mov	r0, #0
   169ac:	bl	10da8 <dcgettext@plt>
   169b0:	ldr	r1, [sp, #40]	; 0x28
   169b4:	ldr	ip, [sp, #44]	; 0x2c
   169b8:	ldr	r2, [sp, #36]	; 0x24
   169bc:	ldr	r3, [sp, #32]
   169c0:	stmib	sp, {r1, ip}
   169c4:	str	r2, [sp]
   169c8:	mov	r1, #1
   169cc:	mov	r2, r0
   169d0:	mov	r0, r5
   169d4:	bl	10ec8 <__fprintf_chk@plt>
   169d8:	b	16900 <close@plt+0x599c>
   169dc:	mov	r2, #5
   169e0:	ldr	r1, [pc, #436]	; 16b9c <close@plt+0x5c38>
   169e4:	mov	r0, #0
   169e8:	bl	10da8 <dcgettext@plt>
   169ec:	add	r1, sp, #40	; 0x28
   169f0:	ldr	r2, [sp, #36]	; 0x24
   169f4:	ldm	r1, {r1, ip, lr}
   169f8:	ldr	r3, [sp, #32]
   169fc:	str	r2, [sp]
   16a00:	stmib	sp, {r1, ip, lr}
   16a04:	mov	r1, #1
   16a08:	mov	r2, r0
   16a0c:	mov	r0, r5
   16a10:	bl	10ec8 <__fprintf_chk@plt>
   16a14:	b	16900 <close@plt+0x599c>
   16a18:	mov	r2, #5
   16a1c:	ldr	r1, [pc, #380]	; 16ba0 <close@plt+0x5c3c>
   16a20:	mov	r0, #0
   16a24:	bl	10da8 <dcgettext@plt>
   16a28:	add	r1, sp, #40	; 0x28
   16a2c:	ldr	r2, [sp, #36]	; 0x24
   16a30:	ldm	r1, {r1, ip, lr}
   16a34:	ldr	r4, [sp, #52]	; 0x34
   16a38:	str	r2, [sp]
   16a3c:	stmib	sp, {r1, ip, lr}
   16a40:	mov	r1, #1
   16a44:	ldr	r3, [sp, #32]
   16a48:	str	r4, [sp, #16]
   16a4c:	mov	r2, r0
   16a50:	mov	r0, r5
   16a54:	bl	10ec8 <__fprintf_chk@plt>
   16a58:	b	16900 <close@plt+0x599c>
   16a5c:	mov	r2, #5
   16a60:	ldr	r1, [pc, #316]	; 16ba4 <close@plt+0x5c40>
   16a64:	mov	r0, #0
   16a68:	bl	10da8 <dcgettext@plt>
   16a6c:	add	r1, sp, #40	; 0x28
   16a70:	ldr	r2, [sp, #56]	; 0x38
   16a74:	ldm	r1, {r1, ip, lr}
   16a78:	ldr	r4, [sp, #52]	; 0x34
   16a7c:	str	r2, [sp, #20]
   16a80:	ldr	r2, [sp, #36]	; 0x24
   16a84:	stmib	sp, {r1, ip, lr}
   16a88:	mov	r1, #1
   16a8c:	str	r2, [sp]
   16a90:	ldr	r3, [sp, #32]
   16a94:	str	r4, [sp, #16]
   16a98:	mov	r2, r0
   16a9c:	mov	r0, r5
   16aa0:	bl	10ec8 <__fprintf_chk@plt>
   16aa4:	b	16900 <close@plt+0x599c>
   16aa8:	mov	r2, #5
   16aac:	ldr	r1, [pc, #244]	; 16ba8 <close@plt+0x5c44>
   16ab0:	mov	r0, #0
   16ab4:	bl	10da8 <dcgettext@plt>
   16ab8:	ldr	r1, [sp, #60]	; 0x3c
   16abc:	ldr	r2, [sp, #56]	; 0x38
   16ac0:	ldr	lr, [sp, #48]	; 0x30
   16ac4:	ldr	ip, [sp, #44]	; 0x2c
   16ac8:	str	r1, [sp, #24]
   16acc:	ldr	r1, [sp, #40]	; 0x28
   16ad0:	ldr	r4, [sp, #52]	; 0x34
   16ad4:	str	r2, [sp, #20]
   16ad8:	ldr	r2, [sp, #36]	; 0x24
   16adc:	stmib	sp, {r1, ip, lr}
   16ae0:	mov	r1, #1
   16ae4:	str	r2, [sp]
   16ae8:	ldr	r3, [sp, #32]
   16aec:	str	r4, [sp, #16]
   16af0:	mov	r2, r0
   16af4:	mov	r0, r5
   16af8:	bl	10ec8 <__fprintf_chk@plt>
   16afc:	b	16900 <close@plt+0x599c>
   16b00:	str	r3, [sp]
   16b04:	mov	r1, #1
   16b08:	mov	r3, r2
   16b0c:	mov	r0, r5
   16b10:	ldr	r2, [pc, #148]	; 16bac <close@plt+0x5c48>
   16b14:	bl	10ec8 <__fprintf_chk@plt>
   16b18:	b	16808 <close@plt+0x58a4>
   16b1c:	mov	r2, #5
   16b20:	ldr	r1, [pc, #136]	; 16bb0 <close@plt+0x5c4c>
   16b24:	b	168ac <close@plt+0x5948>
   16b28:	mov	r4, r0
   16b2c:	b	167e8 <close@plt+0x5884>
   16b30:	mov	r4, #1
   16b34:	b	167e8 <close@plt+0x5884>
   16b38:	mov	r4, #2
   16b3c:	b	167e8 <close@plt+0x5884>
   16b40:	mov	r4, #3
   16b44:	b	167e8 <close@plt+0x5884>
   16b48:	mov	r4, #4
   16b4c:	b	167e8 <close@plt+0x5884>
   16b50:	mov	r4, #5
   16b54:	b	167e8 <close@plt+0x5884>
   16b58:	mov	r4, #6
   16b5c:	b	167e8 <close@plt+0x5884>
   16b60:	mov	r4, #7
   16b64:	b	167e8 <close@plt+0x5884>
   16b68:	mov	r4, #8
   16b6c:	b	167e8 <close@plt+0x5884>
   16b70:	andeq	r8, r1, r4, lsr #13
   16b74:			; <UNDEFINED> instruction: 0x000186b8
   16b78:	andeq	r0, r0, r6, ror #15
   16b7c:	muleq	r1, r0, r9
   16b80:			; <UNDEFINED> instruction: 0x000186bc
   16b84:	andeq	r8, r1, r8, ror #14
   16b88:	muleq	r1, r8, r8
   16b8c:	andeq	r8, r1, ip, lsl #15
   16b90:	muleq	r1, ip, r7
   16b94:			; <UNDEFINED> instruction: 0x000187b4
   16b98:	ldrdeq	r8, [r1], -r0
   16b9c:	strdeq	r8, [r1], -r0
   16ba0:	andeq	r8, r1, r4, lsl r8
   16ba4:	andeq	r8, r1, ip, lsr r8
   16ba8:	andeq	r8, r1, r8, ror #16
   16bac:			; <UNDEFINED> instruction: 0x000186b0
   16bb0:	andeq	r8, r1, ip, asr #17
   16bb4:	push	{r3}		; (str r3, [sp, #-4]!)
   16bb8:	push	{lr}		; (str lr, [sp, #-4]!)
   16bbc:	sub	sp, sp, #56	; 0x38
   16bc0:	add	r3, sp, #64	; 0x40
   16bc4:	ldr	ip, [sp, #64]	; 0x40
   16bc8:	str	r3, [sp, #12]
   16bcc:	cmp	ip, #0
   16bd0:	str	ip, [sp, #16]
   16bd4:	beq	16c6c <close@plt+0x5d08>
   16bd8:	ldr	ip, [sp, #68]	; 0x44
   16bdc:	cmp	ip, #0
   16be0:	str	ip, [sp, #20]
   16be4:	beq	16c8c <close@plt+0x5d28>
   16be8:	ldr	ip, [sp, #72]	; 0x48
   16bec:	cmp	ip, #0
   16bf0:	str	ip, [sp, #24]
   16bf4:	beq	16c94 <close@plt+0x5d30>
   16bf8:	ldr	ip, [sp, #76]	; 0x4c
   16bfc:	cmp	ip, #0
   16c00:	str	ip, [sp, #28]
   16c04:	beq	16c9c <close@plt+0x5d38>
   16c08:	ldr	ip, [sp, #80]	; 0x50
   16c0c:	cmp	ip, #0
   16c10:	str	ip, [sp, #32]
   16c14:	beq	16ca4 <close@plt+0x5d40>
   16c18:	ldr	ip, [sp, #84]	; 0x54
   16c1c:	cmp	ip, #0
   16c20:	str	ip, [sp, #36]	; 0x24
   16c24:	beq	16cac <close@plt+0x5d48>
   16c28:	ldr	ip, [sp, #88]	; 0x58
   16c2c:	cmp	ip, #0
   16c30:	str	ip, [sp, #40]	; 0x28
   16c34:	beq	16cb4 <close@plt+0x5d50>
   16c38:	ldr	ip, [sp, #92]	; 0x5c
   16c3c:	cmp	ip, #0
   16c40:	str	ip, [sp, #44]	; 0x2c
   16c44:	beq	16cbc <close@plt+0x5d58>
   16c48:	ldr	ip, [sp, #96]	; 0x60
   16c4c:	cmp	ip, #0
   16c50:	str	ip, [sp, #48]	; 0x30
   16c54:	beq	16cc4 <close@plt+0x5d60>
   16c58:	ldr	ip, [sp, #100]	; 0x64
   16c5c:	cmp	ip, #0
   16c60:	str	ip, [sp, #52]	; 0x34
   16c64:	movne	ip, #10
   16c68:	moveq	ip, #9
   16c6c:	add	r3, sp, #16
   16c70:	stm	sp, {r3, ip}
   16c74:	ldr	r3, [sp, #60]	; 0x3c
   16c78:	bl	16360 <close@plt+0x53fc>
   16c7c:	add	sp, sp, #56	; 0x38
   16c80:	pop	{lr}		; (ldr lr, [sp], #4)
   16c84:	add	sp, sp, #4
   16c88:	bx	lr
   16c8c:	mov	ip, #1
   16c90:	b	16c6c <close@plt+0x5d08>
   16c94:	mov	ip, #2
   16c98:	b	16c6c <close@plt+0x5d08>
   16c9c:	mov	ip, #3
   16ca0:	b	16c6c <close@plt+0x5d08>
   16ca4:	mov	ip, #4
   16ca8:	b	16c6c <close@plt+0x5d08>
   16cac:	mov	ip, #5
   16cb0:	b	16c6c <close@plt+0x5d08>
   16cb4:	mov	ip, #6
   16cb8:	b	16c6c <close@plt+0x5d08>
   16cbc:	mov	ip, #7
   16cc0:	b	16c6c <close@plt+0x5d08>
   16cc4:	mov	ip, #8
   16cc8:	b	16c6c <close@plt+0x5d08>
   16ccc:	ldr	r3, [pc, #116]	; 16d48 <close@plt+0x5de4>
   16cd0:	push	{r4, lr}
   16cd4:	mov	r0, #10
   16cd8:	ldr	r1, [r3]
   16cdc:	bl	10d9c <fputc_unlocked@plt>
   16ce0:	mov	r2, #5
   16ce4:	ldr	r1, [pc, #96]	; 16d4c <close@plt+0x5de8>
   16ce8:	mov	r0, #0
   16cec:	bl	10da8 <dcgettext@plt>
   16cf0:	ldr	r2, [pc, #88]	; 16d50 <close@plt+0x5dec>
   16cf4:	mov	r1, r0
   16cf8:	mov	r0, #1
   16cfc:	bl	10eb0 <__printf_chk@plt>
   16d00:	mov	r2, #5
   16d04:	ldr	r1, [pc, #72]	; 16d54 <close@plt+0x5df0>
   16d08:	mov	r0, #0
   16d0c:	bl	10da8 <dcgettext@plt>
   16d10:	ldr	r3, [pc, #64]	; 16d58 <close@plt+0x5df4>
   16d14:	ldr	r2, [pc, #64]	; 16d5c <close@plt+0x5df8>
   16d18:	mov	r1, r0
   16d1c:	mov	r0, #1
   16d20:	bl	10eb0 <__printf_chk@plt>
   16d24:	mov	r2, #5
   16d28:	ldr	r1, [pc, #48]	; 16d60 <close@plt+0x5dfc>
   16d2c:	mov	r0, #0
   16d30:	bl	10da8 <dcgettext@plt>
   16d34:	ldr	r2, [pc, #40]	; 16d64 <close@plt+0x5e00>
   16d38:	pop	{r4, lr}
   16d3c:	mov	r1, r0
   16d40:	mov	r0, #1
   16d44:	b	10eb0 <__printf_chk@plt>
   16d48:	andeq	r9, r2, ip, asr r1
   16d4c:	andeq	r8, r1, r8, lsl #18
   16d50:	andeq	r8, r1, ip, lsl r9
   16d54:	andeq	r8, r1, r4, lsr r9
   16d58:	strdeq	r8, [r1], -r0
   16d5c:	andeq	r8, r1, r8, lsl r3
   16d60:	andeq	r8, r1, r8, asr #18
   16d64:	andeq	r8, r1, r0, ror r9
   16d68:	push	{r4, r5, r6, lr}
   16d6c:	mov	r6, r0
   16d70:	mov	r5, r1
   16d74:	mov	r4, r2
   16d78:	bl	177cc <close@plt+0x6868>
   16d7c:	cmp	r0, #0
   16d80:	popne	{r4, r5, r6, pc}
   16d84:	cmp	r6, #0
   16d88:	beq	16d98 <close@plt+0x5e34>
   16d8c:	cmp	r5, #0
   16d90:	cmpne	r4, #0
   16d94:	popeq	{r4, r5, r6, pc}
   16d98:	bl	173e4 <close@plt+0x6480>
   16d9c:	push	{r4, lr}
   16da0:	bl	1746c <close@plt+0x6508>
   16da4:	cmp	r0, #0
   16da8:	popne	{r4, pc}
   16dac:	bl	173e4 <close@plt+0x6480>
   16db0:	push	{r4, lr}
   16db4:	bl	1746c <close@plt+0x6508>
   16db8:	cmp	r0, #0
   16dbc:	popne	{r4, pc}
   16dc0:	bl	173e4 <close@plt+0x6480>
   16dc4:	push	{r4, lr}
   16dc8:	bl	1746c <close@plt+0x6508>
   16dcc:	cmp	r0, #0
   16dd0:	popne	{r4, pc}
   16dd4:	bl	173e4 <close@plt+0x6480>
   16dd8:	push	{r4, r5, r6, lr}
   16ddc:	mov	r5, r0
   16de0:	mov	r4, r1
   16de4:	bl	17498 <close@plt+0x6534>
   16de8:	cmp	r0, #0
   16dec:	popne	{r4, r5, r6, pc}
   16df0:	adds	r4, r4, #0
   16df4:	movne	r4, #1
   16df8:	cmp	r5, #0
   16dfc:	orreq	r4, r4, #1
   16e00:	cmp	r4, #0
   16e04:	popeq	{r4, r5, r6, pc}
   16e08:	bl	173e4 <close@plt+0x6480>
   16e0c:	push	{r4, lr}
   16e10:	cmp	r1, #0
   16e14:	orreq	r1, r1, #1
   16e18:	bl	17498 <close@plt+0x6534>
   16e1c:	cmp	r0, #0
   16e20:	popne	{r4, pc}
   16e24:	bl	173e4 <close@plt+0x6480>
   16e28:	push	{r4, r5, r6, lr}
   16e2c:	mov	r6, r0
   16e30:	mov	r5, r1
   16e34:	mov	r4, r2
   16e38:	bl	177cc <close@plt+0x6868>
   16e3c:	cmp	r0, #0
   16e40:	popne	{r4, r5, r6, pc}
   16e44:	cmp	r6, #0
   16e48:	beq	16e58 <close@plt+0x5ef4>
   16e4c:	cmp	r5, #0
   16e50:	cmpne	r4, #0
   16e54:	popeq	{r4, r5, r6, pc}
   16e58:	bl	173e4 <close@plt+0x6480>
   16e5c:	cmp	r2, #0
   16e60:	cmpne	r1, #0
   16e64:	moveq	r2, #1
   16e68:	moveq	r1, r2
   16e6c:	push	{r4, lr}
   16e70:	bl	177cc <close@plt+0x6868>
   16e74:	cmp	r0, #0
   16e78:	popne	{r4, pc}
   16e7c:	bl	173e4 <close@plt+0x6480>
   16e80:	push	{r4, lr}
   16e84:	mov	r2, r1
   16e88:	mov	r1, r0
   16e8c:	mov	r0, #0
   16e90:	bl	177cc <close@plt+0x6868>
   16e94:	cmp	r0, #0
   16e98:	popne	{r4, pc}
   16e9c:	bl	173e4 <close@plt+0x6480>
   16ea0:	cmp	r1, #0
   16ea4:	cmpne	r0, #0
   16ea8:	moveq	r2, #1
   16eac:	movne	r2, r1
   16eb0:	moveq	r1, r2
   16eb4:	movne	r1, r0
   16eb8:	push	{r4, lr}
   16ebc:	mov	r0, #0
   16ec0:	bl	177cc <close@plt+0x6868>
   16ec4:	cmp	r0, #0
   16ec8:	popne	{r4, pc}
   16ecc:	bl	173e4 <close@plt+0x6480>
   16ed0:	cmp	r0, #0
   16ed4:	push	{r4, r5, r6, lr}
   16ed8:	mov	r5, r1
   16edc:	ldr	r4, [r1]
   16ee0:	beq	16f1c <close@plt+0x5fb8>
   16ee4:	lsr	r2, r4, #1
   16ee8:	add	r3, r2, #1
   16eec:	mvn	r3, r3
   16ef0:	cmp	r4, r3
   16ef4:	bhi	16f38 <close@plt+0x5fd4>
   16ef8:	add	r4, r4, #1
   16efc:	add	r4, r4, r2
   16f00:	mov	r1, r4
   16f04:	mov	r2, #1
   16f08:	bl	177cc <close@plt+0x6868>
   16f0c:	cmp	r0, #0
   16f10:	beq	16f3c <close@plt+0x5fd8>
   16f14:	str	r4, [r5]
   16f18:	pop	{r4, r5, r6, pc}
   16f1c:	cmp	r4, #0
   16f20:	moveq	r4, #64	; 0x40
   16f24:	mov	r1, r4
   16f28:	mov	r2, #1
   16f2c:	bl	177cc <close@plt+0x6868>
   16f30:	cmp	r0, #0
   16f34:	bne	16f14 <close@plt+0x5fb0>
   16f38:	bl	173e4 <close@plt+0x6480>
   16f3c:	cmp	r4, #0
   16f40:	bne	16f38 <close@plt+0x5fd4>
   16f44:	str	r4, [r5]
   16f48:	pop	{r4, r5, r6, pc}
   16f4c:	cmp	r0, #0
   16f50:	push	{r4, r5, r6, lr}
   16f54:	mov	r5, r1
   16f58:	ldr	r4, [r1]
   16f5c:	mov	r6, r2
   16f60:	beq	16fa4 <close@plt+0x6040>
   16f64:	lsr	r1, r4, #1
   16f68:	add	r3, r1, #1
   16f6c:	mvn	r3, r3
   16f70:	cmp	r4, r3
   16f74:	bhi	16fdc <close@plt+0x6078>
   16f78:	add	r4, r4, #1
   16f7c:	add	r4, r4, r1
   16f80:	mov	r1, r4
   16f84:	bl	177cc <close@plt+0x6868>
   16f88:	cmp	r0, #0
   16f8c:	bne	16f9c <close@plt+0x6038>
   16f90:	cmp	r4, #0
   16f94:	cmpne	r6, #0
   16f98:	bne	16fdc <close@plt+0x6078>
   16f9c:	str	r4, [r5]
   16fa0:	pop	{r4, r5, r6, pc}
   16fa4:	cmp	r4, #0
   16fa8:	bne	16fc4 <close@plt+0x6060>
   16fac:	mov	r1, r2
   16fb0:	mov	r0, #64	; 0x40
   16fb4:	bl	1790c <close@plt+0x69a8>
   16fb8:	cmp	r0, #0
   16fbc:	movne	r4, r0
   16fc0:	addeq	r4, r0, #1
   16fc4:	mov	r2, r6
   16fc8:	mov	r1, r4
   16fcc:	mov	r0, #0
   16fd0:	bl	177cc <close@plt+0x6868>
   16fd4:	cmp	r0, #0
   16fd8:	bne	16f9c <close@plt+0x6038>
   16fdc:	bl	173e4 <close@plt+0x6480>
   16fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fe4:	sub	sp, sp, #12
   16fe8:	ldr	r6, [r1]
   16fec:	mov	r8, r1
   16ff0:	mov	r9, r0
   16ff4:	asrs	r4, r6, #1
   16ff8:	mov	sl, r2
   16ffc:	mov	fp, r3
   17000:	ldr	r7, [sp, #48]	; 0x30
   17004:	bmi	17180 <close@plt+0x621c>
   17008:	mvn	r1, #-2147483648	; 0x80000000
   1700c:	sub	r1, r1, r4
   17010:	cmp	r6, r1
   17014:	movle	r1, #0
   17018:	movgt	r1, #1
   1701c:	mvn	r3, fp
   17020:	cmp	r1, #0
   17024:	addeq	r4, r4, r6
   17028:	mvnne	r4, #-2147483648	; 0x80000000
   1702c:	lsr	r3, r3, #31
   17030:	cmp	fp, r4
   17034:	movge	r2, #0
   17038:	andlt	r2, r3, #1
   1703c:	cmp	r2, #0
   17040:	beq	17130 <close@plt+0x61cc>
   17044:	cmp	r7, #0
   17048:	blt	17218 <close@plt+0x62b4>
   1704c:	bne	17210 <close@plt+0x62ac>
   17050:	mov	r5, #64	; 0x40
   17054:	mov	r1, r7
   17058:	mov	r0, r5
   1705c:	str	r3, [sp, #4]
   17060:	bl	17b18 <close@plt+0x6bb4>
   17064:	mov	r1, r7
   17068:	mov	r4, r0
   1706c:	mov	r0, r5
   17070:	bl	17d38 <close@plt+0x6dd4>
   17074:	ldr	r3, [sp, #4]
   17078:	sub	r5, r5, r1
   1707c:	cmp	r9, #0
   17080:	sub	r2, r4, r6
   17084:	streq	r9, [r8]
   17088:	cmp	r2, sl
   1708c:	bge	17110 <close@plt+0x61ac>
   17090:	cmp	sl, #0
   17094:	blt	171b0 <close@plt+0x624c>
   17098:	cmp	r6, #0
   1709c:	blt	170bc <close@plt+0x6158>
   170a0:	mvn	r2, #-2147483648	; 0x80000000
   170a4:	sub	r2, r2, sl
   170a8:	cmp	r6, r2
   170ac:	movle	r2, #0
   170b0:	movgt	r2, #1
   170b4:	cmp	r2, #0
   170b8:	bne	171ac <close@plt+0x6248>
   170bc:	add	r6, r6, sl
   170c0:	cmp	fp, r6
   170c4:	movge	r3, #0
   170c8:	andlt	r3, r3, #1
   170cc:	cmp	r3, #0
   170d0:	mov	r4, r6
   170d4:	bne	171ac <close@plt+0x6248>
   170d8:	cmp	r7, #0
   170dc:	blt	171c4 <close@plt+0x6260>
   170e0:	beq	1710c <close@plt+0x61a8>
   170e4:	cmp	r6, #0
   170e8:	blt	17268 <close@plt+0x6304>
   170ec:	mov	r1, r7
   170f0:	mvn	r0, #-2147483648	; 0x80000000
   170f4:	bl	17b18 <close@plt+0x6bb4>
   170f8:	cmp	r6, r0
   170fc:	movle	r0, #0
   17100:	movgt	r0, #1
   17104:	cmp	r0, #0
   17108:	bne	171ac <close@plt+0x6248>
   1710c:	mul	r5, r6, r7
   17110:	mov	r1, r5
   17114:	mov	r0, r9
   17118:	bl	17498 <close@plt+0x6534>
   1711c:	cmp	r0, #0
   17120:	beq	17194 <close@plt+0x6230>
   17124:	str	r4, [r8]
   17128:	add	sp, sp, #12
   1712c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17130:	cmp	r7, #0
   17134:	blt	171f0 <close@plt+0x628c>
   17138:	beq	17050 <close@plt+0x60ec>
   1713c:	cmp	r4, #0
   17140:	blt	17220 <close@plt+0x62bc>
   17144:	mov	r1, r7
   17148:	mvn	r0, #-2147483648	; 0x80000000
   1714c:	str	r3, [sp, #4]
   17150:	bl	17b18 <close@plt+0x6bb4>
   17154:	ldr	r3, [sp, #4]
   17158:	cmp	r0, r4
   1715c:	movge	r0, #0
   17160:	movlt	r0, #1
   17164:	cmp	r0, #0
   17168:	mvnne	r5, #-2147483648	; 0x80000000
   1716c:	bne	17054 <close@plt+0x60f0>
   17170:	mul	r5, r7, r4
   17174:	cmp	r5, #63	; 0x3f
   17178:	bgt	1707c <close@plt+0x6118>
   1717c:	b	17050 <close@plt+0x60ec>
   17180:	rsb	r1, r4, #-2147483648	; 0x80000000
   17184:	cmp	r6, r1
   17188:	movge	r1, #0
   1718c:	movlt	r1, #1
   17190:	b	1701c <close@plt+0x60b8>
   17194:	adds	r5, r5, #0
   17198:	movne	r5, #1
   1719c:	cmp	r9, #0
   171a0:	orreq	r5, r5, #1
   171a4:	cmp	r5, #0
   171a8:	beq	17124 <close@plt+0x61c0>
   171ac:	bl	173e4 <close@plt+0x6480>
   171b0:	rsb	r2, sl, #-2147483648	; 0x80000000
   171b4:	cmp	r6, r2
   171b8:	movge	r2, #0
   171bc:	movlt	r2, #1
   171c0:	b	170b4 <close@plt+0x6150>
   171c4:	cmp	r6, #0
   171c8:	blt	1724c <close@plt+0x62e8>
   171cc:	cmn	r7, #1
   171d0:	beq	1710c <close@plt+0x61a8>
   171d4:	mov	r1, r7
   171d8:	mov	r0, #-2147483648	; 0x80000000
   171dc:	bl	17b18 <close@plt+0x6bb4>
   171e0:	cmp	r6, r0
   171e4:	movle	r0, #0
   171e8:	movgt	r0, #1
   171ec:	b	17104 <close@plt+0x61a0>
   171f0:	cmp	r4, #0
   171f4:	blt	1728c <close@plt+0x6328>
   171f8:	cmn	r7, #1
   171fc:	beq	17170 <close@plt+0x620c>
   17200:	str	r3, [sp, #4]
   17204:	mov	r1, r7
   17208:	mov	r0, #-2147483648	; 0x80000000
   1720c:	b	17150 <close@plt+0x61ec>
   17210:	mov	r4, fp
   17214:	b	17144 <close@plt+0x61e0>
   17218:	mov	r4, fp
   1721c:	b	171f8 <close@plt+0x6294>
   17220:	cmn	r4, #1
   17224:	beq	17170 <close@plt+0x620c>
   17228:	mov	r1, r4
   1722c:	mov	r0, #-2147483648	; 0x80000000
   17230:	str	r3, [sp, #4]
   17234:	bl	17b18 <close@plt+0x6bb4>
   17238:	ldr	r3, [sp, #4]
   1723c:	cmp	r7, r0
   17240:	movle	r0, #0
   17244:	movgt	r0, #1
   17248:	b	17164 <close@plt+0x6200>
   1724c:	mov	r1, r7
   17250:	mvn	r0, #-2147483648	; 0x80000000
   17254:	bl	17b18 <close@plt+0x6bb4>
   17258:	cmp	r6, r0
   1725c:	movge	r0, #0
   17260:	movlt	r0, #1
   17264:	b	17104 <close@plt+0x61a0>
   17268:	cmn	r6, #1
   1726c:	beq	1710c <close@plt+0x61a8>
   17270:	mov	r1, r6
   17274:	mov	r0, #-2147483648	; 0x80000000
   17278:	bl	17b18 <close@plt+0x6bb4>
   1727c:	cmp	r7, r0
   17280:	movle	r0, #0
   17284:	movgt	r0, #1
   17288:	b	17104 <close@plt+0x61a0>
   1728c:	mov	r1, r7
   17290:	mvn	r0, #-2147483648	; 0x80000000
   17294:	str	r3, [sp, #4]
   17298:	bl	17b18 <close@plt+0x6bb4>
   1729c:	ldr	r3, [sp, #4]
   172a0:	cmp	r0, r4
   172a4:	movle	r0, #0
   172a8:	movgt	r0, #1
   172ac:	b	17164 <close@plt+0x6200>
   172b0:	push	{r4, lr}
   172b4:	mov	r1, #1
   172b8:	bl	17424 <close@plt+0x64c0>
   172bc:	cmp	r0, #0
   172c0:	popne	{r4, pc}
   172c4:	bl	173e4 <close@plt+0x6480>
   172c8:	push	{r4, lr}
   172cc:	mov	r1, #1
   172d0:	bl	17424 <close@plt+0x64c0>
   172d4:	cmp	r0, #0
   172d8:	popne	{r4, pc}
   172dc:	bl	173e4 <close@plt+0x6480>
   172e0:	push	{r4, lr}
   172e4:	bl	17424 <close@plt+0x64c0>
   172e8:	cmp	r0, #0
   172ec:	popne	{r4, pc}
   172f0:	bl	173e4 <close@plt+0x6480>
   172f4:	push	{r4, lr}
   172f8:	bl	17424 <close@plt+0x64c0>
   172fc:	cmp	r0, #0
   17300:	popne	{r4, pc}
   17304:	bl	173e4 <close@plt+0x6480>
   17308:	push	{r4, r5, r6, lr}
   1730c:	mov	r6, r0
   17310:	mov	r0, r1
   17314:	mov	r4, r1
   17318:	bl	1746c <close@plt+0x6508>
   1731c:	subs	r5, r0, #0
   17320:	beq	17338 <close@plt+0x63d4>
   17324:	mov	r2, r4
   17328:	mov	r1, r6
   1732c:	bl	10d60 <memcpy@plt>
   17330:	mov	r0, r5
   17334:	pop	{r4, r5, r6, pc}
   17338:	bl	173e4 <close@plt+0x6480>
   1733c:	push	{r4, r5, r6, lr}
   17340:	mov	r6, r0
   17344:	mov	r0, r1
   17348:	mov	r4, r1
   1734c:	bl	1746c <close@plt+0x6508>
   17350:	subs	r5, r0, #0
   17354:	beq	1736c <close@plt+0x6408>
   17358:	mov	r2, r4
   1735c:	mov	r1, r6
   17360:	bl	10d60 <memcpy@plt>
   17364:	mov	r0, r5
   17368:	pop	{r4, r5, r6, pc}
   1736c:	bl	173e4 <close@plt+0x6480>
   17370:	push	{r4, r5, r6, lr}
   17374:	mov	r6, r0
   17378:	add	r0, r1, #1
   1737c:	mov	r4, r1
   17380:	bl	1746c <close@plt+0x6508>
   17384:	subs	r5, r0, #0
   17388:	beq	173a8 <close@plt+0x6444>
   1738c:	mov	r3, #0
   17390:	mov	r1, r6
   17394:	strb	r3, [r5, r4]
   17398:	mov	r2, r4
   1739c:	bl	10d60 <memcpy@plt>
   173a0:	mov	r0, r5
   173a4:	pop	{r4, r5, r6, pc}
   173a8:	bl	173e4 <close@plt+0x6480>
   173ac:	push	{r4, r5, r6, lr}
   173b0:	mov	r6, r0
   173b4:	bl	10e74 <strlen@plt>
   173b8:	add	r4, r0, #1
   173bc:	mov	r0, r4
   173c0:	bl	1746c <close@plt+0x6508>
   173c4:	subs	r5, r0, #0
   173c8:	beq	173e0 <close@plt+0x647c>
   173cc:	mov	r2, r4
   173d0:	mov	r1, r6
   173d4:	bl	10d60 <memcpy@plt>
   173d8:	mov	r0, r5
   173dc:	pop	{r4, r5, r6, pc}
   173e0:	bl	173e4 <close@plt+0x6480>
   173e4:	ldr	r3, [pc, #44]	; 17418 <close@plt+0x64b4>
   173e8:	push	{r4, lr}
   173ec:	mov	r2, #5
   173f0:	ldr	r1, [pc, #36]	; 1741c <close@plt+0x64b8>
   173f4:	mov	r0, #0
   173f8:	ldr	r4, [r3]
   173fc:	bl	10da8 <dcgettext@plt>
   17400:	ldr	r2, [pc, #24]	; 17420 <close@plt+0x64bc>
   17404:	mov	r1, #0
   17408:	mov	r3, r0
   1740c:	mov	r0, r4
   17410:	bl	10e14 <error@plt>
   17414:	bl	10f58 <abort@plt>
   17418:	strdeq	r9, [r2], -r8
   1741c:	andeq	r8, r1, r0, asr #19
   17420:	andeq	r8, r1, r4, lsl #11
   17424:	cmp	r1, #0
   17428:	cmpne	r0, #0
   1742c:	moveq	r1, #1
   17430:	moveq	r0, r1
   17434:	umull	r2, r3, r0, r1
   17438:	adds	r3, r3, #0
   1743c:	movne	r3, #1
   17440:	cmp	r2, #0
   17444:	blt	17454 <close@plt+0x64f0>
   17448:	cmp	r3, #0
   1744c:	bne	17454 <close@plt+0x64f0>
   17450:	b	10cf4 <calloc@plt>
   17454:	push	{r4, lr}
   17458:	bl	10e80 <__errno_location@plt>
   1745c:	mov	r3, #12
   17460:	str	r3, [r0]
   17464:	mov	r0, #0
   17468:	pop	{r4, pc}
   1746c:	cmp	r0, #0
   17470:	moveq	r0, #1
   17474:	cmp	r0, #0
   17478:	blt	17480 <close@plt+0x651c>
   1747c:	b	10e20 <malloc@plt>
   17480:	push	{r4, lr}
   17484:	bl	10e80 <__errno_location@plt>
   17488:	mov	r3, #12
   1748c:	str	r3, [r0]
   17490:	mov	r0, #0
   17494:	pop	{r4, pc}
   17498:	cmp	r0, #0
   1749c:	beq	174c0 <close@plt+0x655c>
   174a0:	cmp	r1, #0
   174a4:	push	{lr}		; (str lr, [sp, #-4]!)
   174a8:	sub	sp, sp, #12
   174ac:	beq	174c8 <close@plt+0x6564>
   174b0:	blt	174e0 <close@plt+0x657c>
   174b4:	add	sp, sp, #12
   174b8:	pop	{lr}		; (ldr lr, [sp], #4)
   174bc:	b	10db4 <realloc@plt>
   174c0:	mov	r0, r1
   174c4:	b	1746c <close@plt+0x6508>
   174c8:	str	r1, [sp, #4]
   174cc:	bl	12210 <close@plt+0x12ac>
   174d0:	ldr	r3, [sp, #4]
   174d4:	mov	r0, r3
   174d8:	add	sp, sp, #12
   174dc:	pop	{pc}		; (ldr pc, [sp], #4)
   174e0:	bl	10e80 <__errno_location@plt>
   174e4:	mov	r2, #12
   174e8:	mov	r3, #0
   174ec:	str	r2, [r0]
   174f0:	b	174d4 <close@plt+0x6570>
   174f4:	push	{r4, r5, r6, lr}
   174f8:	mov	r4, r0
   174fc:	bl	10dfc <__fpending@plt>
   17500:	ldr	r5, [r4]
   17504:	and	r5, r5, #32
   17508:	mov	r6, r0
   1750c:	mov	r0, r4
   17510:	bl	12078 <close@plt+0x1114>
   17514:	cmp	r5, #0
   17518:	mov	r4, r0
   1751c:	bne	1753c <close@plt+0x65d8>
   17520:	cmp	r0, #0
   17524:	beq	17534 <close@plt+0x65d0>
   17528:	cmp	r6, #0
   1752c:	beq	17558 <close@plt+0x65f4>
   17530:	mvn	r4, #0
   17534:	mov	r0, r4
   17538:	pop	{r4, r5, r6, pc}
   1753c:	cmp	r0, #0
   17540:	bne	17530 <close@plt+0x65cc>
   17544:	bl	10e80 <__errno_location@plt>
   17548:	str	r4, [r0]
   1754c:	mvn	r4, #0
   17550:	mov	r0, r4
   17554:	pop	{r4, r5, r6, pc}
   17558:	bl	10e80 <__errno_location@plt>
   1755c:	ldr	r4, [r0]
   17560:	subs	r4, r4, #9
   17564:	mvnne	r4, #0
   17568:	mov	r0, r4
   1756c:	pop	{r4, r5, r6, pc}
   17570:	push	{r1, r2, r3}
   17574:	push	{r4, r5, r6, r7, lr}
   17578:	sub	sp, sp, #8
   1757c:	add	r3, sp, #32
   17580:	ldr	r1, [sp, #28]
   17584:	str	r3, [sp, #4]
   17588:	cmp	r1, #0
   1758c:	beq	17624 <close@plt+0x66c0>
   17590:	ldr	r2, [pc, #412]	; 17734 <close@plt+0x67d0>
   17594:	mov	r5, r0
   17598:	cmp	r1, r2
   1759c:	bne	175e8 <close@plt+0x6684>
   175a0:	ldr	r6, [pc, #400]	; 17738 <close@plt+0x67d4>
   175a4:	ldr	r7, [r3]
   175a8:	add	r2, sp, #36	; 0x24
   175ac:	ldr	r3, [r6]
   175b0:	str	r2, [sp, #4]
   175b4:	cmp	r3, #0
   175b8:	mov	r2, r7
   175bc:	blt	176e8 <close@plt+0x6784>
   175c0:	bl	10eec <fcntl64@plt>
   175c4:	subs	r4, r0, #0
   175c8:	blt	1766c <close@plt+0x6708>
   175cc:	mov	r3, #1
   175d0:	str	r3, [r6]
   175d4:	mov	r0, r4
   175d8:	add	sp, sp, #8
   175dc:	pop	{r4, r5, r6, r7, lr}
   175e0:	add	sp, sp, #12
   175e4:	bx	lr
   175e8:	cmp	r1, #11
   175ec:	beq	17614 <close@plt+0x66b0>
   175f0:	bgt	17634 <close@plt+0x66d0>
   175f4:	cmp	r1, #3
   175f8:	beq	17614 <close@plt+0x66b0>
   175fc:	ble	17728 <close@plt+0x67c4>
   17600:	cmp	r1, #8
   17604:	beq	17654 <close@plt+0x66f0>
   17608:	ble	17654 <close@plt+0x66f0>
   1760c:	cmp	r1, #9
   17610:	bne	17654 <close@plt+0x66f0>
   17614:	mov	r0, r5
   17618:	bl	10eec <fcntl64@plt>
   1761c:	mov	r4, r0
   17620:	b	175d4 <close@plt+0x6670>
   17624:	ldr	r2, [sp, #32]
   17628:	bl	10eec <fcntl64@plt>
   1762c:	mov	r4, r0
   17630:	b	175d4 <close@plt+0x6670>
   17634:	ldr	r3, [pc, #256]	; 1773c <close@plt+0x67d8>
   17638:	cmp	r1, r3
   1763c:	bgt	17708 <close@plt+0x67a4>
   17640:	cmp	r1, r2
   17644:	bge	17654 <close@plt+0x66f0>
   17648:	sub	r3, r3, #6
   1764c:	cmp	r1, r3
   17650:	beq	17614 <close@plt+0x66b0>
   17654:	ldr	r3, [sp, #4]
   17658:	mov	r0, r5
   1765c:	ldr	r2, [r3]
   17660:	bl	10eec <fcntl64@plt>
   17664:	mov	r4, r0
   17668:	b	175d4 <close@plt+0x6670>
   1766c:	bl	10e80 <__errno_location@plt>
   17670:	ldr	r3, [r0]
   17674:	cmp	r3, #22
   17678:	bne	175cc <close@plt+0x6668>
   1767c:	mov	r2, r7
   17680:	mov	r0, r5
   17684:	mov	r1, #0
   17688:	bl	10eec <fcntl64@plt>
   1768c:	subs	r4, r0, #0
   17690:	blt	175d4 <close@plt+0x6670>
   17694:	mvn	r3, #0
   17698:	str	r3, [r6]
   1769c:	mov	r1, #1
   176a0:	mov	r0, r4
   176a4:	bl	10eec <fcntl64@plt>
   176a8:	subs	r2, r0, #0
   176ac:	blt	176c8 <close@plt+0x6764>
   176b0:	orr	r2, r2, #1
   176b4:	mov	r1, #2
   176b8:	mov	r0, r4
   176bc:	bl	10eec <fcntl64@plt>
   176c0:	cmn	r0, #1
   176c4:	bne	175d4 <close@plt+0x6670>
   176c8:	bl	10e80 <__errno_location@plt>
   176cc:	mov	r5, r0
   176d0:	mov	r0, r4
   176d4:	ldr	r6, [r5]
   176d8:	mvn	r4, #0
   176dc:	bl	10f64 <close@plt>
   176e0:	str	r6, [r5]
   176e4:	b	175d4 <close@plt+0x6670>
   176e8:	mov	r1, #0
   176ec:	bl	10eec <fcntl64@plt>
   176f0:	subs	r4, r0, #0
   176f4:	blt	175d4 <close@plt+0x6670>
   176f8:	ldr	r3, [r6]
   176fc:	cmn	r3, #1
   17700:	beq	1769c <close@plt+0x6738>
   17704:	b	175d4 <close@plt+0x6670>
   17708:	ldr	r3, [pc, #48]	; 17740 <close@plt+0x67dc>
   1770c:	cmp	r1, r3
   17710:	beq	17654 <close@plt+0x66f0>
   17714:	blt	17614 <close@plt+0x66b0>
   17718:	add	r3, r3, #1
   1771c:	cmp	r1, r3
   17720:	bne	17654 <close@plt+0x66f0>
   17724:	b	17614 <close@plt+0x66b0>
   17728:	cmp	r1, #1
   1772c:	bne	17654 <close@plt+0x66f0>
   17730:	b	17614 <close@plt+0x66b0>
   17734:	andeq	r0, r0, r6, lsl #8
   17738:			; <UNDEFINED> instruction: 0x000292b0
   1773c:	andeq	r0, r0, r7, lsl #8
   17740:	andeq	r0, r0, r9, lsl #8
   17744:	push	{r4, lr}
   17748:	mov	r0, #14
   1774c:	bl	10f1c <nl_langinfo@plt>
   17750:	cmp	r0, #0
   17754:	beq	1776c <close@plt+0x6808>
   17758:	ldrb	r2, [r0]
   1775c:	ldr	r3, [pc, #16]	; 17774 <close@plt+0x6810>
   17760:	cmp	r2, #0
   17764:	moveq	r0, r3
   17768:	pop	{r4, pc}
   1776c:	ldr	r0, [pc]	; 17774 <close@plt+0x6810>
   17770:	pop	{r4, pc}
   17774:	ldrdeq	r8, [r1], -r4
   17778:	push	{r4, r5, r6, r7, lr}
   1777c:	subs	r6, r0, #0
   17780:	sub	sp, sp, #12
   17784:	addeq	r6, sp, #4
   17788:	mov	r0, r6
   1778c:	mov	r5, r2
   17790:	mov	r7, r1
   17794:	bl	10e08 <mbrtowc@plt>
   17798:	cmp	r5, #0
   1779c:	cmnne	r0, #3
   177a0:	mov	r4, r0
   177a4:	bls	177c0 <close@plt+0x685c>
   177a8:	mov	r0, #0
   177ac:	bl	17818 <close@plt+0x68b4>
   177b0:	cmp	r0, #0
   177b4:	moveq	r4, #1
   177b8:	ldrbeq	r3, [r7]
   177bc:	streq	r3, [r6]
   177c0:	mov	r0, r4
   177c4:	add	sp, sp, #12
   177c8:	pop	{r4, r5, r6, r7, pc}
   177cc:	push	{r4, r5, r6, lr}
   177d0:	subs	r4, r2, #0
   177d4:	mov	r6, r0
   177d8:	mov	r5, r1
   177dc:	beq	17808 <close@plt+0x68a4>
   177e0:	mov	r1, r4
   177e4:	mvn	r0, #0
   177e8:	bl	1790c <close@plt+0x69a8>
   177ec:	cmp	r0, r5
   177f0:	bcs	17808 <close@plt+0x68a4>
   177f4:	bl	10e80 <__errno_location@plt>
   177f8:	mov	r3, #12
   177fc:	str	r3, [r0]
   17800:	mov	r0, #0
   17804:	pop	{r4, r5, r6, pc}
   17808:	mul	r1, r5, r4
   1780c:	mov	r0, r6
   17810:	pop	{r4, r5, r6, lr}
   17814:	b	17498 <close@plt+0x6534>
   17818:	push	{lr}		; (str lr, [sp, #-4]!)
   1781c:	sub	sp, sp, #268	; 0x10c
   17820:	add	r1, sp, #4
   17824:	ldr	r2, [pc, #60]	; 17868 <close@plt+0x6904>
   17828:	bl	17874 <close@plt+0x6910>
   1782c:	cmp	r0, #0
   17830:	movne	r0, #0
   17834:	bne	17860 <close@plt+0x68fc>
   17838:	ldr	r1, [pc, #44]	; 1786c <close@plt+0x6908>
   1783c:	add	r0, sp, #4
   17840:	bl	10d18 <strcmp@plt>
   17844:	cmp	r0, #0
   17848:	beq	17860 <close@plt+0x68fc>
   1784c:	add	r0, sp, #4
   17850:	ldr	r1, [pc, #24]	; 17870 <close@plt+0x690c>
   17854:	bl	10d18 <strcmp@plt>
   17858:	adds	r0, r0, #0
   1785c:	movne	r0, #1
   17860:	add	sp, sp, #268	; 0x10c
   17864:	pop	{pc}		; (ldr pc, [sp], #4)
   17868:	andeq	r0, r0, r1, lsl #2
   1786c:	ldrdeq	r8, [r1], -ip
   17870:	andeq	r8, r1, r0, ror #19
   17874:	push	{r4, r5, r6, lr}
   17878:	mov	r5, r1
   1787c:	mov	r1, #0
   17880:	mov	r4, r2
   17884:	bl	10f04 <setlocale@plt>
   17888:	subs	r6, r0, #0
   1788c:	beq	178e8 <close@plt+0x6984>
   17890:	bl	10e74 <strlen@plt>
   17894:	cmp	r4, r0
   17898:	bhi	178d0 <close@plt+0x696c>
   1789c:	cmp	r4, #0
   178a0:	bne	178ac <close@plt+0x6948>
   178a4:	mov	r0, #34	; 0x22
   178a8:	pop	{r4, r5, r6, pc}
   178ac:	sub	r4, r4, #1
   178b0:	mov	r1, r6
   178b4:	mov	r2, r4
   178b8:	mov	r0, r5
   178bc:	bl	10d60 <memcpy@plt>
   178c0:	mov	r3, #0
   178c4:	strb	r3, [r5, r4]
   178c8:	mov	r0, #34	; 0x22
   178cc:	pop	{r4, r5, r6, pc}
   178d0:	add	r2, r0, #1
   178d4:	mov	r1, r6
   178d8:	mov	r0, r5
   178dc:	bl	10d60 <memcpy@plt>
   178e0:	mov	r0, #0
   178e4:	pop	{r4, r5, r6, pc}
   178e8:	cmp	r4, #0
   178ec:	beq	178fc <close@plt+0x6998>
   178f0:	strb	r6, [r5]
   178f4:	mov	r0, #22
   178f8:	pop	{r4, r5, r6, pc}
   178fc:	mov	r0, #22
   17900:	pop	{r4, r5, r6, pc}
   17904:	mov	r1, #0
   17908:	b	10f04 <setlocale@plt>
   1790c:	subs	r2, r1, #1
   17910:	bxeq	lr
   17914:	bcc	17aec <close@plt+0x6b88>
   17918:	cmp	r0, r1
   1791c:	bls	17ad0 <close@plt+0x6b6c>
   17920:	tst	r1, r2
   17924:	beq	17adc <close@plt+0x6b78>
   17928:	clz	r3, r0
   1792c:	clz	r2, r1
   17930:	sub	r3, r2, r3
   17934:	rsbs	r3, r3, #31
   17938:	addne	r3, r3, r3, lsl #1
   1793c:	mov	r2, #0
   17940:	addne	pc, pc, r3, lsl #2
   17944:	nop			; (mov r0, r0)
   17948:	cmp	r0, r1, lsl #31
   1794c:	adc	r2, r2, r2
   17950:	subcs	r0, r0, r1, lsl #31
   17954:	cmp	r0, r1, lsl #30
   17958:	adc	r2, r2, r2
   1795c:	subcs	r0, r0, r1, lsl #30
   17960:	cmp	r0, r1, lsl #29
   17964:	adc	r2, r2, r2
   17968:	subcs	r0, r0, r1, lsl #29
   1796c:	cmp	r0, r1, lsl #28
   17970:	adc	r2, r2, r2
   17974:	subcs	r0, r0, r1, lsl #28
   17978:	cmp	r0, r1, lsl #27
   1797c:	adc	r2, r2, r2
   17980:	subcs	r0, r0, r1, lsl #27
   17984:	cmp	r0, r1, lsl #26
   17988:	adc	r2, r2, r2
   1798c:	subcs	r0, r0, r1, lsl #26
   17990:	cmp	r0, r1, lsl #25
   17994:	adc	r2, r2, r2
   17998:	subcs	r0, r0, r1, lsl #25
   1799c:	cmp	r0, r1, lsl #24
   179a0:	adc	r2, r2, r2
   179a4:	subcs	r0, r0, r1, lsl #24
   179a8:	cmp	r0, r1, lsl #23
   179ac:	adc	r2, r2, r2
   179b0:	subcs	r0, r0, r1, lsl #23
   179b4:	cmp	r0, r1, lsl #22
   179b8:	adc	r2, r2, r2
   179bc:	subcs	r0, r0, r1, lsl #22
   179c0:	cmp	r0, r1, lsl #21
   179c4:	adc	r2, r2, r2
   179c8:	subcs	r0, r0, r1, lsl #21
   179cc:	cmp	r0, r1, lsl #20
   179d0:	adc	r2, r2, r2
   179d4:	subcs	r0, r0, r1, lsl #20
   179d8:	cmp	r0, r1, lsl #19
   179dc:	adc	r2, r2, r2
   179e0:	subcs	r0, r0, r1, lsl #19
   179e4:	cmp	r0, r1, lsl #18
   179e8:	adc	r2, r2, r2
   179ec:	subcs	r0, r0, r1, lsl #18
   179f0:	cmp	r0, r1, lsl #17
   179f4:	adc	r2, r2, r2
   179f8:	subcs	r0, r0, r1, lsl #17
   179fc:	cmp	r0, r1, lsl #16
   17a00:	adc	r2, r2, r2
   17a04:	subcs	r0, r0, r1, lsl #16
   17a08:	cmp	r0, r1, lsl #15
   17a0c:	adc	r2, r2, r2
   17a10:	subcs	r0, r0, r1, lsl #15
   17a14:	cmp	r0, r1, lsl #14
   17a18:	adc	r2, r2, r2
   17a1c:	subcs	r0, r0, r1, lsl #14
   17a20:	cmp	r0, r1, lsl #13
   17a24:	adc	r2, r2, r2
   17a28:	subcs	r0, r0, r1, lsl #13
   17a2c:	cmp	r0, r1, lsl #12
   17a30:	adc	r2, r2, r2
   17a34:	subcs	r0, r0, r1, lsl #12
   17a38:	cmp	r0, r1, lsl #11
   17a3c:	adc	r2, r2, r2
   17a40:	subcs	r0, r0, r1, lsl #11
   17a44:	cmp	r0, r1, lsl #10
   17a48:	adc	r2, r2, r2
   17a4c:	subcs	r0, r0, r1, lsl #10
   17a50:	cmp	r0, r1, lsl #9
   17a54:	adc	r2, r2, r2
   17a58:	subcs	r0, r0, r1, lsl #9
   17a5c:	cmp	r0, r1, lsl #8
   17a60:	adc	r2, r2, r2
   17a64:	subcs	r0, r0, r1, lsl #8
   17a68:	cmp	r0, r1, lsl #7
   17a6c:	adc	r2, r2, r2
   17a70:	subcs	r0, r0, r1, lsl #7
   17a74:	cmp	r0, r1, lsl #6
   17a78:	adc	r2, r2, r2
   17a7c:	subcs	r0, r0, r1, lsl #6
   17a80:	cmp	r0, r1, lsl #5
   17a84:	adc	r2, r2, r2
   17a88:	subcs	r0, r0, r1, lsl #5
   17a8c:	cmp	r0, r1, lsl #4
   17a90:	adc	r2, r2, r2
   17a94:	subcs	r0, r0, r1, lsl #4
   17a98:	cmp	r0, r1, lsl #3
   17a9c:	adc	r2, r2, r2
   17aa0:	subcs	r0, r0, r1, lsl #3
   17aa4:	cmp	r0, r1, lsl #2
   17aa8:	adc	r2, r2, r2
   17aac:	subcs	r0, r0, r1, lsl #2
   17ab0:	cmp	r0, r1, lsl #1
   17ab4:	adc	r2, r2, r2
   17ab8:	subcs	r0, r0, r1, lsl #1
   17abc:	cmp	r0, r1
   17ac0:	adc	r2, r2, r2
   17ac4:	subcs	r0, r0, r1
   17ac8:	mov	r0, r2
   17acc:	bx	lr
   17ad0:	moveq	r0, #1
   17ad4:	movne	r0, #0
   17ad8:	bx	lr
   17adc:	clz	r2, r1
   17ae0:	rsb	r2, r2, #31
   17ae4:	lsr	r0, r0, r2
   17ae8:	bx	lr
   17aec:	cmp	r0, #0
   17af0:	mvnne	r0, #0
   17af4:	b	17d58 <close@plt+0x6df4>
   17af8:	cmp	r1, #0
   17afc:	beq	17aec <close@plt+0x6b88>
   17b00:	push	{r0, r1, lr}
   17b04:	bl	1790c <close@plt+0x69a8>
   17b08:	pop	{r1, r2, lr}
   17b0c:	mul	r3, r2, r0
   17b10:	sub	r1, r1, r3
   17b14:	bx	lr
   17b18:	cmp	r1, #0
   17b1c:	beq	17d28 <close@plt+0x6dc4>
   17b20:	eor	ip, r0, r1
   17b24:	rsbmi	r1, r1, #0
   17b28:	subs	r2, r1, #1
   17b2c:	beq	17cf4 <close@plt+0x6d90>
   17b30:	movs	r3, r0
   17b34:	rsbmi	r3, r0, #0
   17b38:	cmp	r3, r1
   17b3c:	bls	17d00 <close@plt+0x6d9c>
   17b40:	tst	r1, r2
   17b44:	beq	17d10 <close@plt+0x6dac>
   17b48:	clz	r2, r3
   17b4c:	clz	r0, r1
   17b50:	sub	r2, r0, r2
   17b54:	rsbs	r2, r2, #31
   17b58:	addne	r2, r2, r2, lsl #1
   17b5c:	mov	r0, #0
   17b60:	addne	pc, pc, r2, lsl #2
   17b64:	nop			; (mov r0, r0)
   17b68:	cmp	r3, r1, lsl #31
   17b6c:	adc	r0, r0, r0
   17b70:	subcs	r3, r3, r1, lsl #31
   17b74:	cmp	r3, r1, lsl #30
   17b78:	adc	r0, r0, r0
   17b7c:	subcs	r3, r3, r1, lsl #30
   17b80:	cmp	r3, r1, lsl #29
   17b84:	adc	r0, r0, r0
   17b88:	subcs	r3, r3, r1, lsl #29
   17b8c:	cmp	r3, r1, lsl #28
   17b90:	adc	r0, r0, r0
   17b94:	subcs	r3, r3, r1, lsl #28
   17b98:	cmp	r3, r1, lsl #27
   17b9c:	adc	r0, r0, r0
   17ba0:	subcs	r3, r3, r1, lsl #27
   17ba4:	cmp	r3, r1, lsl #26
   17ba8:	adc	r0, r0, r0
   17bac:	subcs	r3, r3, r1, lsl #26
   17bb0:	cmp	r3, r1, lsl #25
   17bb4:	adc	r0, r0, r0
   17bb8:	subcs	r3, r3, r1, lsl #25
   17bbc:	cmp	r3, r1, lsl #24
   17bc0:	adc	r0, r0, r0
   17bc4:	subcs	r3, r3, r1, lsl #24
   17bc8:	cmp	r3, r1, lsl #23
   17bcc:	adc	r0, r0, r0
   17bd0:	subcs	r3, r3, r1, lsl #23
   17bd4:	cmp	r3, r1, lsl #22
   17bd8:	adc	r0, r0, r0
   17bdc:	subcs	r3, r3, r1, lsl #22
   17be0:	cmp	r3, r1, lsl #21
   17be4:	adc	r0, r0, r0
   17be8:	subcs	r3, r3, r1, lsl #21
   17bec:	cmp	r3, r1, lsl #20
   17bf0:	adc	r0, r0, r0
   17bf4:	subcs	r3, r3, r1, lsl #20
   17bf8:	cmp	r3, r1, lsl #19
   17bfc:	adc	r0, r0, r0
   17c00:	subcs	r3, r3, r1, lsl #19
   17c04:	cmp	r3, r1, lsl #18
   17c08:	adc	r0, r0, r0
   17c0c:	subcs	r3, r3, r1, lsl #18
   17c10:	cmp	r3, r1, lsl #17
   17c14:	adc	r0, r0, r0
   17c18:	subcs	r3, r3, r1, lsl #17
   17c1c:	cmp	r3, r1, lsl #16
   17c20:	adc	r0, r0, r0
   17c24:	subcs	r3, r3, r1, lsl #16
   17c28:	cmp	r3, r1, lsl #15
   17c2c:	adc	r0, r0, r0
   17c30:	subcs	r3, r3, r1, lsl #15
   17c34:	cmp	r3, r1, lsl #14
   17c38:	adc	r0, r0, r0
   17c3c:	subcs	r3, r3, r1, lsl #14
   17c40:	cmp	r3, r1, lsl #13
   17c44:	adc	r0, r0, r0
   17c48:	subcs	r3, r3, r1, lsl #13
   17c4c:	cmp	r3, r1, lsl #12
   17c50:	adc	r0, r0, r0
   17c54:	subcs	r3, r3, r1, lsl #12
   17c58:	cmp	r3, r1, lsl #11
   17c5c:	adc	r0, r0, r0
   17c60:	subcs	r3, r3, r1, lsl #11
   17c64:	cmp	r3, r1, lsl #10
   17c68:	adc	r0, r0, r0
   17c6c:	subcs	r3, r3, r1, lsl #10
   17c70:	cmp	r3, r1, lsl #9
   17c74:	adc	r0, r0, r0
   17c78:	subcs	r3, r3, r1, lsl #9
   17c7c:	cmp	r3, r1, lsl #8
   17c80:	adc	r0, r0, r0
   17c84:	subcs	r3, r3, r1, lsl #8
   17c88:	cmp	r3, r1, lsl #7
   17c8c:	adc	r0, r0, r0
   17c90:	subcs	r3, r3, r1, lsl #7
   17c94:	cmp	r3, r1, lsl #6
   17c98:	adc	r0, r0, r0
   17c9c:	subcs	r3, r3, r1, lsl #6
   17ca0:	cmp	r3, r1, lsl #5
   17ca4:	adc	r0, r0, r0
   17ca8:	subcs	r3, r3, r1, lsl #5
   17cac:	cmp	r3, r1, lsl #4
   17cb0:	adc	r0, r0, r0
   17cb4:	subcs	r3, r3, r1, lsl #4
   17cb8:	cmp	r3, r1, lsl #3
   17cbc:	adc	r0, r0, r0
   17cc0:	subcs	r3, r3, r1, lsl #3
   17cc4:	cmp	r3, r1, lsl #2
   17cc8:	adc	r0, r0, r0
   17ccc:	subcs	r3, r3, r1, lsl #2
   17cd0:	cmp	r3, r1, lsl #1
   17cd4:	adc	r0, r0, r0
   17cd8:	subcs	r3, r3, r1, lsl #1
   17cdc:	cmp	r3, r1
   17ce0:	adc	r0, r0, r0
   17ce4:	subcs	r3, r3, r1
   17ce8:	cmp	ip, #0
   17cec:	rsbmi	r0, r0, #0
   17cf0:	bx	lr
   17cf4:	teq	ip, r0
   17cf8:	rsbmi	r0, r0, #0
   17cfc:	bx	lr
   17d00:	movcc	r0, #0
   17d04:	asreq	r0, ip, #31
   17d08:	orreq	r0, r0, #1
   17d0c:	bx	lr
   17d10:	clz	r2, r1
   17d14:	rsb	r2, r2, #31
   17d18:	cmp	ip, #0
   17d1c:	lsr	r0, r3, r2
   17d20:	rsbmi	r0, r0, #0
   17d24:	bx	lr
   17d28:	cmp	r0, #0
   17d2c:	mvngt	r0, #-2147483648	; 0x80000000
   17d30:	movlt	r0, #-2147483648	; 0x80000000
   17d34:	b	17d58 <close@plt+0x6df4>
   17d38:	cmp	r1, #0
   17d3c:	beq	17d28 <close@plt+0x6dc4>
   17d40:	push	{r0, r1, lr}
   17d44:	bl	17b20 <close@plt+0x6bbc>
   17d48:	pop	{r1, r2, lr}
   17d4c:	mul	r3, r2, r0
   17d50:	sub	r1, r1, r3
   17d54:	bx	lr
   17d58:	push	{r1, lr}
   17d5c:	mov	r0, #8
   17d60:	bl	10d0c <raise@plt>
   17d64:	pop	{r1, pc}
   17d68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d6c:	mov	r7, r0
   17d70:	ldr	r6, [pc, #72]	; 17dc0 <close@plt+0x6e5c>
   17d74:	ldr	r5, [pc, #72]	; 17dc4 <close@plt+0x6e60>
   17d78:	add	r6, pc, r6
   17d7c:	add	r5, pc, r5
   17d80:	sub	r6, r6, r5
   17d84:	mov	r8, r1
   17d88:	mov	r9, r2
   17d8c:	bl	10cc8 <fdopen@plt-0x20>
   17d90:	asrs	r6, r6, #2
   17d94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d98:	mov	r4, #0
   17d9c:	add	r4, r4, #1
   17da0:	ldr	r3, [r5], #4
   17da4:	mov	r2, r9
   17da8:	mov	r1, r8
   17dac:	mov	r0, r7
   17db0:	blx	r3
   17db4:	cmp	r6, r4
   17db8:	bne	17d9c <close@plt+0x6e38>
   17dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17dc0:	muleq	r1, r0, r1
   17dc4:	andeq	r1, r1, r8, lsl #3
   17dc8:	bx	lr
   17dcc:	ldr	r3, [pc, #12]	; 17de0 <close@plt+0x6e7c>
   17dd0:	mov	r1, #0
   17dd4:	add	r3, pc, r3
   17dd8:	ldr	r2, [r3]
   17ddc:	b	10e8c <__cxa_atexit@plt>
   17de0:	andeq	r1, r1, r0, lsl r3

Disassembly of section .fini:

00017de4 <.fini>:
   17de4:	push	{r3, lr}
   17de8:	pop	{r3, pc}
