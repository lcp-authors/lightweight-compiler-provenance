
../repos/coreutils/src/uname:     file format elf32-littlearm


Disassembly of section .init:

00010c48 <.init>:
   10c48:	push	{r3, lr}
   10c4c:	bl	10eb4 <putchar_unlocked@plt+0x48>
   10c50:	pop	{r3, pc}

Disassembly of section .plt:

00010c54 <calloc@plt-0x14>:
   10c54:	push	{lr}		; (str lr, [sp, #-4]!)
   10c58:	ldr	lr, [pc, #4]	; 10c64 <calloc@plt-0x4>
   10c5c:	add	lr, pc, lr
   10c60:	ldr	pc, [lr, #8]!
   10c64:	muleq	r1, ip, r3

00010c68 <calloc@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #924]!	; 0x39c

00010c74 <fputs_unlocked@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #916]!	; 0x394

00010c80 <strcmp@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #908]!	; 0x38c

00010c8c <fflush@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #900]!	; 0x384

00010c98 <free@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #892]!	; 0x37c

00010ca4 <_exit@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #884]!	; 0x374

00010cb0 <memcpy@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #876]!	; 0x36c

00010cbc <mbsinit@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #868]!	; 0x364

00010cc8 <uname@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #860]!	; 0x35c

00010cd4 <dcgettext@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #852]!	; 0x354

00010ce0 <realloc@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #844]!	; 0x34c

00010cec <textdomain@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #836]!	; 0x344

00010cf8 <iswprint@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #828]!	; 0x33c

00010d04 <lseek64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #820]!	; 0x334

00010d10 <__ctype_get_mb_cur_max@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #812]!	; 0x32c

00010d1c <__fpending@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #804]!	; 0x324

00010d28 <ferror_unlocked@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #796]!	; 0x31c

00010d34 <mbrtowc@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #788]!	; 0x314

00010d40 <error@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #780]!	; 0x30c

00010d4c <malloc@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #772]!	; 0x304

00010d58 <__libc_start_main@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #764]!	; 0x2fc

00010d64 <__freading@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d70 <__gmon_start__@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #748]!	; 0x2ec

00010d7c <getopt_long@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #740]!	; 0x2e4

00010d88 <__ctype_b_loc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #732]!	; 0x2dc

00010d94 <exit@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #724]!	; 0x2d4

00010da0 <bcmp@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #716]!	; 0x2cc

00010dac <strlen@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #708]!	; 0x2c4

00010db8 <__errno_location@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #700]!	; 0x2bc

00010dc4 <__cxa_atexit@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #692]!	; 0x2b4

00010dd0 <memset@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #684]!	; 0x2ac

00010ddc <__printf_chk@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #676]!	; 0x2a4

00010de8 <fileno@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #668]!	; 0x29c

00010df4 <__fprintf_chk@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #660]!	; 0x294

00010e00 <fclose@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #652]!	; 0x28c

00010e0c <fseeko64@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #644]!	; 0x284

00010e18 <setlocale@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #636]!	; 0x27c

00010e24 <strrchr@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #628]!	; 0x274

00010e30 <nl_langinfo@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #620]!	; 0x26c

00010e3c <bindtextdomain@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #612]!	; 0x264

00010e48 <fputs@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #604]!	; 0x25c

00010e54 <strncmp@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #596]!	; 0x254

00010e60 <abort@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #588]!	; 0x24c

00010e6c <putchar_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #580]!	; 0x244

Disassembly of section .text:

00010e78 <.text>:
   10e78:	mov	fp, #0
   10e7c:	mov	lr, #0
   10e80:	pop	{r1}		; (ldr r1, [sp], #4)
   10e84:	mov	r2, sp
   10e88:	push	{r2}		; (str r2, [sp, #-4]!)
   10e8c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e90:	ldr	ip, [pc, #16]	; 10ea8 <putchar_unlocked@plt+0x3c>
   10e94:	push	{ip}		; (str ip, [sp, #-4]!)
   10e98:	ldr	r0, [pc, #12]	; 10eac <putchar_unlocked@plt+0x40>
   10e9c:	ldr	r3, [pc, #12]	; 10eb0 <putchar_unlocked@plt+0x44>
   10ea0:	bl	10d58 <__libc_start_main@plt>
   10ea4:	bl	10e60 <abort@plt>
   10ea8:	andeq	r4, r1, r4, asr r0
   10eac:	ldrdeq	r1, [r1], -ip
   10eb0:	strdeq	r3, [r1], -r4
   10eb4:	ldr	r3, [pc, #20]	; 10ed0 <putchar_unlocked@plt+0x64>
   10eb8:	ldr	r2, [pc, #20]	; 10ed4 <putchar_unlocked@plt+0x68>
   10ebc:	add	r3, pc, r3
   10ec0:	ldr	r2, [r3, r2]
   10ec4:	cmp	r2, #0
   10ec8:	bxeq	lr
   10ecc:	b	10d70 <__gmon_start__@plt>
   10ed0:	andeq	r4, r1, ip, lsr r1
   10ed4:	strheq	r0, [r0], -ip
   10ed8:	ldr	r0, [pc, #24]	; 10ef8 <putchar_unlocked@plt+0x8c>
   10edc:	ldr	r3, [pc, #24]	; 10efc <putchar_unlocked@plt+0x90>
   10ee0:	cmp	r3, r0
   10ee4:	bxeq	lr
   10ee8:	ldr	r3, [pc, #16]	; 10f00 <putchar_unlocked@plt+0x94>
   10eec:	cmp	r3, #0
   10ef0:	bxeq	lr
   10ef4:	bx	r3
   10ef8:	andeq	r5, r2, r8, lsl r1
   10efc:	andeq	r5, r2, r8, lsl r1
   10f00:	andeq	r0, r0, r0
   10f04:	ldr	r0, [pc, #36]	; 10f30 <putchar_unlocked@plt+0xc4>
   10f08:	ldr	r1, [pc, #36]	; 10f34 <putchar_unlocked@plt+0xc8>
   10f0c:	sub	r1, r1, r0
   10f10:	asr	r1, r1, #2
   10f14:	add	r1, r1, r1, lsr #31
   10f18:	asrs	r1, r1, #1
   10f1c:	bxeq	lr
   10f20:	ldr	r3, [pc, #16]	; 10f38 <putchar_unlocked@plt+0xcc>
   10f24:	cmp	r3, #0
   10f28:	bxeq	lr
   10f2c:	bx	r3
   10f30:	andeq	r5, r2, r8, lsl r1
   10f34:	andeq	r5, r2, r8, lsl r1
   10f38:	andeq	r0, r0, r0
   10f3c:	push	{r4, lr}
   10f40:	ldr	r4, [pc, #24]	; 10f60 <putchar_unlocked@plt+0xf4>
   10f44:	ldrb	r3, [r4]
   10f48:	cmp	r3, #0
   10f4c:	popne	{r4, pc}
   10f50:	bl	10ed8 <putchar_unlocked@plt+0x6c>
   10f54:	mov	r3, #1
   10f58:	strb	r3, [r4]
   10f5c:	pop	{r4, pc}
   10f60:	andeq	r5, r2, r0, lsr r1
   10f64:	b	10f04 <putchar_unlocked@plt+0x98>
   10f68:	push	{fp, lr}
   10f6c:	mov	fp, sp
   10f70:	sub	sp, sp, #56	; 0x38
   10f74:	mov	r8, r0
   10f78:	cmp	r0, #0
   10f7c:	bne	1119c <putchar_unlocked@plt+0x330>
   10f80:	movw	r1, #16547	; 0x40a3
   10f84:	mov	r0, #0
   10f88:	mov	r2, #5
   10f8c:	movt	r1, #1
   10f90:	bl	10cd4 <dcgettext@plt>
   10f94:	mov	r1, r0
   10f98:	movw	r0, #20796	; 0x513c
   10f9c:	movt	r0, #2
   10fa0:	ldr	r2, [r0]
   10fa4:	mov	r0, #1
   10fa8:	bl	10ddc <__printf_chk@plt>
   10fac:	movw	r5, #20680	; 0x50c8
   10fb0:	movw	r9, #20780	; 0x512c
   10fb4:	movt	r5, #2
   10fb8:	movt	r9, #2
   10fbc:	ldr	r0, [r5]
   10fc0:	cmp	r0, #1
   10fc4:	bne	10ff0 <putchar_unlocked@plt+0x184>
   10fc8:	movw	r1, #16570	; 0x40ba
   10fcc:	mov	r0, #0
   10fd0:	mov	r2, #5
   10fd4:	movt	r1, #1
   10fd8:	bl	10cd4 <dcgettext@plt>
   10fdc:	ldr	r1, [r9]
   10fe0:	bl	10c74 <fputs_unlocked@plt>
   10fe4:	movw	r1, #16932	; 0x4224
   10fe8:	movt	r1, #1
   10fec:	b	10ff8 <putchar_unlocked@plt+0x18c>
   10ff0:	movw	r1, #17235	; 0x4353
   10ff4:	movt	r1, #1
   10ff8:	mov	r0, #0
   10ffc:	mov	r2, #5
   11000:	bl	10cd4 <dcgettext@plt>
   11004:	ldr	r1, [r9]
   11008:	bl	10c74 <fputs_unlocked@plt>
   1100c:	movw	r1, #17265	; 0x4371
   11010:	mov	r0, #0
   11014:	mov	r2, #5
   11018:	movt	r1, #1
   1101c:	bl	10cd4 <dcgettext@plt>
   11020:	ldr	r1, [r9]
   11024:	bl	10c74 <fputs_unlocked@plt>
   11028:	movw	r1, #17310	; 0x439e
   1102c:	mov	r0, #0
   11030:	mov	r2, #5
   11034:	movt	r1, #1
   11038:	bl	10cd4 <dcgettext@plt>
   1103c:	ldr	r1, [r9]
   11040:	bl	10c74 <fputs_unlocked@plt>
   11044:	movw	r1, #17944	; 0x4618
   11048:	ldr	ip, [r5]
   1104c:	mov	r6, sp
   11050:	movt	r1, #1
   11054:	mov	r2, r6
   11058:	ldm	r1!, {r3, r4, r5, r7}
   1105c:	cmp	ip, #1
   11060:	stmia	r2!, {r3, r4, r5, r7}
   11064:	ldm	r1!, {r0, r3, r4, r5, r7}
   11068:	stmia	r2!, {r0, r3, r4, r5, r7}
   1106c:	ldm	r1, {r0, r3, r4, r5, r7}
   11070:	movw	r1, #17432	; 0x4418
   11074:	movt	r1, #1
   11078:	stm	r2, {r0, r3, r4, r5, r7}
   1107c:	movw	r0, #17364	; 0x43d4
   11080:	movw	r5, #17370	; 0x43da
   11084:	movt	r0, #1
   11088:	movt	r5, #1
   1108c:	moveq	r5, r0
   11090:	mov	r0, r5
   11094:	bl	10c80 <strcmp@plt>
   11098:	cmp	r0, #0
   1109c:	ldrne	r1, [r6, #8]!
   110a0:	cmpne	r1, #0
   110a4:	bne	11090 <putchar_unlocked@plt+0x224>
   110a8:	movw	r1, #17527	; 0x4477
   110ac:	ldr	r6, [r6, #4]
   110b0:	mov	r0, #0
   110b4:	mov	r2, #5
   110b8:	movt	r1, #1
   110bc:	bl	10cd4 <dcgettext@plt>
   110c0:	movw	r2, #17550	; 0x448e
   110c4:	movw	r3, #17564	; 0x449c
   110c8:	mov	r1, r0
   110cc:	mov	r0, #1
   110d0:	movt	r2, #1
   110d4:	movt	r3, #1
   110d8:	bl	10ddc <__printf_chk@plt>
   110dc:	cmp	r6, #0
   110e0:	mov	r0, #5
   110e4:	mov	r1, #0
   110e8:	moveq	r6, r5
   110ec:	bl	10e18 <setlocale@plt>
   110f0:	cmp	r0, #0
   110f4:	beq	1112c <putchar_unlocked@plt+0x2c0>
   110f8:	movw	r1, #17604	; 0x44c4
   110fc:	mov	r2, #3
   11100:	movt	r1, #1
   11104:	bl	10e54 <strncmp@plt>
   11108:	cmp	r0, #0
   1110c:	beq	1112c <putchar_unlocked@plt+0x2c0>
   11110:	movw	r1, #17608	; 0x44c8
   11114:	mov	r0, #0
   11118:	mov	r2, #5
   1111c:	movt	r1, #1
   11120:	bl	10cd4 <dcgettext@plt>
   11124:	ldr	r1, [r9]
   11128:	bl	10c74 <fputs_unlocked@plt>
   1112c:	movw	r1, #17679	; 0x450f
   11130:	mov	r0, #0
   11134:	mov	r2, #5
   11138:	movt	r1, #1
   1113c:	bl	10cd4 <dcgettext@plt>
   11140:	movw	r2, #17564	; 0x449c
   11144:	mov	r1, r0
   11148:	mov	r0, #1
   1114c:	mov	r3, r5
   11150:	movt	r2, #1
   11154:	bl	10ddc <__printf_chk@plt>
   11158:	movw	r1, #17706	; 0x452a
   1115c:	mov	r0, #0
   11160:	mov	r2, #5
   11164:	movt	r1, #1
   11168:	bl	10cd4 <dcgettext@plt>
   1116c:	mov	r1, r0
   11170:	movw	r0, #17460	; 0x4434
   11174:	movw	r3, #17264	; 0x4370
   11178:	cmp	r6, r5
   1117c:	mov	r2, r6
   11180:	movt	r0, #1
   11184:	movt	r3, #1
   11188:	moveq	r3, r0
   1118c:	mov	r0, #1
   11190:	bl	10ddc <__printf_chk@plt>
   11194:	mov	r0, r8
   11198:	bl	10d94 <exit@plt>
   1119c:	movw	r0, #20776	; 0x5128
   111a0:	movw	r1, #16508	; 0x407c
   111a4:	mov	r2, #5
   111a8:	movt	r0, #2
   111ac:	movt	r1, #1
   111b0:	ldr	r5, [r0]
   111b4:	mov	r0, #0
   111b8:	bl	10cd4 <dcgettext@plt>
   111bc:	mov	r2, r0
   111c0:	movw	r0, #20796	; 0x513c
   111c4:	mov	r1, #1
   111c8:	movt	r0, #2
   111cc:	ldr	r3, [r0]
   111d0:	mov	r0, r5
   111d4:	bl	10df4 <__fprintf_chk@plt>
   111d8:	b	11194 <putchar_unlocked@plt+0x328>
   111dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e0:	add	fp, sp, #28
   111e4:	sub	sp, sp, #412	; 0x19c
   111e8:	mov	r5, r0
   111ec:	ldr	r0, [r1]
   111f0:	mov	r4, r1
   111f4:	bl	1169c <putchar_unlocked@plt+0x830>
   111f8:	movw	r1, #17264	; 0x4370
   111fc:	mov	r0, #6
   11200:	movt	r1, #1
   11204:	bl	10e18 <setlocale@plt>
   11208:	movw	r6, #17554	; 0x4492
   1120c:	movw	r1, #17375	; 0x43df
   11210:	movt	r6, #1
   11214:	movt	r1, #1
   11218:	mov	r0, r6
   1121c:	bl	10e3c <bindtextdomain@plt>
   11220:	mov	r0, r6
   11224:	bl	10cec <textdomain@plt>
   11228:	movw	r0, #5556	; 0x15b4
   1122c:	movt	r0, #1
   11230:	bl	14058 <putchar_unlocked@plt+0x31ec>
   11234:	movw	r9, #20680	; 0x50c8
   11238:	movt	r9, #2
   1123c:	ldr	r0, [r9]
   11240:	cmp	r0, #2
   11244:	bne	112b4 <putchar_unlocked@plt+0x448>
   11248:	movw	r2, #17264	; 0x4370
   1124c:	movw	r3, #18000	; 0x4650
   11250:	mov	r0, #0
   11254:	mov	r1, r4
   11258:	movt	r2, #1
   1125c:	movt	r3, #1
   11260:	str	r0, [sp]
   11264:	mov	r0, r5
   11268:	bl	10d7c <getopt_long@plt>
   1126c:	mov	r6, #16
   11270:	cmn	r0, #1
   11274:	beq	113a8 <putchar_unlocked@plt+0x53c>
   11278:	cmn	r0, #3
   1127c:	bne	114d0 <putchar_unlocked@plt+0x664>
   11280:	movw	r0, #20684	; 0x50cc
   11284:	movw	r6, #17757	; 0x455d
   11288:	ldr	r2, [r9]
   1128c:	movw	r7, #17773	; 0x456d
   11290:	mov	r1, #0
   11294:	movt	r0, #2
   11298:	movt	r6, #1
   1129c:	movt	r7, #1
   112a0:	ldr	r3, [r0]
   112a4:	movw	r0, #20780	; 0x512c
   112a8:	stm	sp, {r6, r7}
   112ac:	str	r1, [sp, #8]
   112b0:	b	1149c <putchar_unlocked@plt+0x630>
   112b4:	movw	r8, #17783	; 0x4577
   112b8:	movw	r7, #18048	; 0x4680
   112bc:	mov	sl, #0
   112c0:	mov	r0, #0
   112c4:	movt	r8, #1
   112c8:	movt	r7, #1
   112cc:	mov	r6, r0
   112d0:	mov	r0, r5
   112d4:	mov	r1, r4
   112d8:	mov	r2, r8
   112dc:	mov	r3, r7
   112e0:	str	sl, [sp]
   112e4:	bl	10d7c <getopt_long@plt>
   112e8:	cmp	r0, #96	; 0x60
   112ec:	ble	113a0 <putchar_unlocked@plt+0x534>
   112f0:	sub	r1, r0, #97	; 0x61
   112f4:	cmp	r1, #21
   112f8:	bhi	11518 <putchar_unlocked@plt+0x6ac>
   112fc:	add	r2, pc, #4
   11300:	mvn	r0, #0
   11304:	ldr	pc, [r2, r1, lsl #2]
   11308:	andeq	r1, r1, ip, asr #5
   1130c:	andeq	r1, r1, r8, lsl r5
   11310:	andeq	r1, r1, r8, lsl r5
   11314:	andeq	r1, r1, r8, lsl r5
   11318:	andeq	r1, r1, r8, lsl r5
   1131c:	andeq	r1, r1, r8, lsl r5
   11320:	andeq	r1, r1, r8, lsl r5
   11324:	andeq	r1, r1, r8, lsl r5
   11328:	andeq	r1, r1, r0, ror #6
   1132c:	andeq	r1, r1, r8, lsl r5
   11330:	andeq	r1, r1, r8, lsl r5
   11334:	andeq	r1, r1, r8, lsl r5
   11338:	andeq	r1, r1, r8, ror r3
   1133c:	andeq	r1, r1, r8, ror #6
   11340:	muleq	r1, r8, r3
   11344:	muleq	r1, r0, r3
   11348:	andeq	r1, r1, r8, lsl r5
   1134c:	andeq	r1, r1, r0, lsl #7
   11350:	andeq	r1, r1, r8, lsl #7
   11354:	andeq	r1, r1, r8, lsl r5
   11358:	andeq	r1, r1, r8, lsl r5
   1135c:	andeq	r1, r1, r0, ror r3
   11360:	orr	r0, r6, #64	; 0x40
   11364:	b	112cc <putchar_unlocked@plt+0x460>
   11368:	orr	r0, r6, #2
   1136c:	b	112cc <putchar_unlocked@plt+0x460>
   11370:	orr	r0, r6, #8
   11374:	b	112cc <putchar_unlocked@plt+0x460>
   11378:	orr	r0, r6, #16
   1137c:	b	112cc <putchar_unlocked@plt+0x460>
   11380:	orr	r0, r6, #4
   11384:	b	112cc <putchar_unlocked@plt+0x460>
   11388:	orr	r0, r6, #1
   1138c:	b	112cc <putchar_unlocked@plt+0x460>
   11390:	orr	r0, r6, #32
   11394:	b	112cc <putchar_unlocked@plt+0x460>
   11398:	orr	r0, r6, #128	; 0x80
   1139c:	b	112cc <putchar_unlocked@plt+0x460>
   113a0:	cmn	r0, #1
   113a4:	bne	1146c <putchar_unlocked@plt+0x600>
   113a8:	movw	r7, #20768	; 0x5120
   113ac:	movt	r7, #2
   113b0:	ldr	r0, [r7]
   113b4:	cmp	r0, r5
   113b8:	bne	114e0 <putchar_unlocked@plt+0x674>
   113bc:	cmp	r6, #0
   113c0:	movweq	r6, #1
   113c4:	tst	r6, #31
   113c8:	beq	1141c <putchar_unlocked@plt+0x5b0>
   113cc:	add	r4, sp, #16
   113d0:	mov	r0, r4
   113d4:	bl	10cc8 <uname@plt>
   113d8:	cmn	r0, #1
   113dc:	beq	11520 <putchar_unlocked@plt+0x6b4>
   113e0:	tst	r6, #1
   113e4:	addne	r0, sp, #16
   113e8:	blne	1154c <putchar_unlocked@plt+0x6e0>
   113ec:	tst	r6, #2
   113f0:	addne	r0, r4, #65	; 0x41
   113f4:	blne	1154c <putchar_unlocked@plt+0x6e0>
   113f8:	tst	r6, #4
   113fc:	addne	r0, r4, #130	; 0x82
   11400:	blne	1154c <putchar_unlocked@plt+0x6e0>
   11404:	tst	r6, #8
   11408:	addne	r0, r4, #195	; 0xc3
   1140c:	blne	1154c <putchar_unlocked@plt+0x6e0>
   11410:	tst	r6, #16
   11414:	addne	r0, r4, #260	; 0x104
   11418:	blne	1154c <putchar_unlocked@plt+0x6e0>
   1141c:	cmn	r6, #1
   11420:	andsne	r0, r6, #32
   11424:	movwne	r0, #17936	; 0x4610
   11428:	movtne	r0, #1
   1142c:	blne	1154c <putchar_unlocked@plt+0x6e0>
   11430:	cmn	r6, #1
   11434:	andsne	r0, r6, #64	; 0x40
   11438:	movwne	r0, #17936	; 0x4610
   1143c:	movtne	r0, #1
   11440:	blne	1154c <putchar_unlocked@plt+0x6e0>
   11444:	tst	r6, #128	; 0x80
   11448:	beq	11458 <putchar_unlocked@plt+0x5ec>
   1144c:	movw	r0, #17422	; 0x440e
   11450:	movt	r0, #1
   11454:	bl	1154c <putchar_unlocked@plt+0x6e0>
   11458:	mov	r0, #10
   1145c:	bl	10e6c <putchar_unlocked@plt>
   11460:	mov	r0, #0
   11464:	sub	sp, fp, #28
   11468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1146c:	cmn	r0, #3
   11470:	bne	114d0 <putchar_unlocked@plt+0x664>
   11474:	movw	r0, #20684	; 0x50cc
   11478:	ldr	r2, [r9]
   1147c:	movw	r7, #17757	; 0x455d
   11480:	mov	r1, #0
   11484:	movt	r0, #2
   11488:	movt	r7, #1
   1148c:	str	r1, [sp, #4]
   11490:	ldr	r3, [r0]
   11494:	movw	r0, #20780	; 0x512c
   11498:	str	r7, [sp]
   1149c:	movt	r0, #2
   114a0:	ldr	r0, [r0]
   114a4:	movw	r7, #17364	; 0x43d4
   114a8:	cmp	r2, #1
   114ac:	movw	r2, #17550	; 0x448e
   114b0:	movw	r1, #17370	; 0x43da
   114b4:	movt	r7, #1
   114b8:	movt	r2, #1
   114bc:	movt	r1, #1
   114c0:	moveq	r1, r7
   114c4:	bl	1358c <putchar_unlocked@plt+0x2720>
   114c8:	mov	r0, #0
   114cc:	bl	10d94 <exit@plt>
   114d0:	cmn	r0, #2
   114d4:	bne	11518 <putchar_unlocked@plt+0x6ac>
   114d8:	mov	r0, #0
   114dc:	bl	10f68 <putchar_unlocked@plt+0xfc>
   114e0:	movw	r1, #17793	; 0x4581
   114e4:	mov	r0, #0
   114e8:	mov	r2, #5
   114ec:	movt	r1, #1
   114f0:	bl	10cd4 <dcgettext@plt>
   114f4:	mov	r5, r0
   114f8:	ldr	r0, [r7]
   114fc:	ldr	r0, [r4, r0, lsl #2]
   11500:	bl	13088 <putchar_unlocked@plt+0x221c>
   11504:	mov	r3, r0
   11508:	mov	r0, #0
   1150c:	mov	r1, #0
   11510:	mov	r2, r5
   11514:	bl	10d40 <error@plt>
   11518:	mov	r0, #1
   1151c:	bl	10f68 <putchar_unlocked@plt+0xfc>
   11520:	bl	10db8 <__errno_location@plt>
   11524:	movw	r1, #17399	; 0x43f7
   11528:	ldr	r4, [r0]
   1152c:	mov	r0, #0
   11530:	mov	r2, #5
   11534:	movt	r1, #1
   11538:	bl	10cd4 <dcgettext@plt>
   1153c:	mov	r2, r0
   11540:	mov	r0, #1
   11544:	mov	r1, r4
   11548:	bl	10d40 <error@plt>
   1154c:	push	{r4, r5, fp, lr}
   11550:	add	fp, sp, #8
   11554:	movw	r5, #20785	; 0x5131
   11558:	mov	r4, r0
   1155c:	movt	r5, #2
   11560:	ldrb	r0, [r5]
   11564:	cmp	r0, #1
   11568:	bne	11574 <putchar_unlocked@plt+0x708>
   1156c:	mov	r0, #32
   11570:	bl	10e6c <putchar_unlocked@plt>
   11574:	mov	r0, #1
   11578:	strb	r0, [r5]
   1157c:	movw	r0, #20780	; 0x512c
   11580:	movt	r0, #2
   11584:	ldr	r1, [r0]
   11588:	mov	r0, r4
   1158c:	pop	{r4, r5, fp, lr}
   11590:	b	10c74 <fputs_unlocked@plt>
   11594:	movw	r1, #20788	; 0x5134
   11598:	movt	r1, #2
   1159c:	str	r0, [r1]
   115a0:	bx	lr
   115a4:	movw	r1, #20792	; 0x5138
   115a8:	movt	r1, #2
   115ac:	strb	r0, [r1]
   115b0:	bx	lr
   115b4:	push	{r4, r5, r6, sl, fp, lr}
   115b8:	add	fp, sp, #16
   115bc:	sub	sp, sp, #8
   115c0:	movw	r0, #20780	; 0x512c
   115c4:	movt	r0, #2
   115c8:	ldr	r0, [r0]
   115cc:	bl	13bd8 <putchar_unlocked@plt+0x2d6c>
   115d0:	cmp	r0, #0
   115d4:	beq	115fc <putchar_unlocked@plt+0x790>
   115d8:	movw	r0, #20792	; 0x5138
   115dc:	movt	r0, #2
   115e0:	ldrb	r0, [r0]
   115e4:	cmp	r0, #0
   115e8:	beq	1161c <putchar_unlocked@plt+0x7b0>
   115ec:	bl	10db8 <__errno_location@plt>
   115f0:	ldr	r0, [r0]
   115f4:	cmp	r0, #32
   115f8:	bne	1161c <putchar_unlocked@plt+0x7b0>
   115fc:	movw	r0, #20776	; 0x5128
   11600:	movt	r0, #2
   11604:	ldr	r0, [r0]
   11608:	bl	13bd8 <putchar_unlocked@plt+0x2d6c>
   1160c:	cmp	r0, #0
   11610:	subeq	sp, fp, #16
   11614:	popeq	{r4, r5, r6, sl, fp, pc}
   11618:	b	1168c <putchar_unlocked@plt+0x820>
   1161c:	movw	r1, #18287	; 0x476f
   11620:	mov	r0, #0
   11624:	mov	r2, #5
   11628:	movt	r1, #1
   1162c:	bl	10cd4 <dcgettext@plt>
   11630:	mov	r4, r0
   11634:	movw	r0, #20788	; 0x5134
   11638:	movt	r0, #2
   1163c:	ldr	r6, [r0]
   11640:	bl	10db8 <__errno_location@plt>
   11644:	ldr	r5, [r0]
   11648:	cmp	r6, #0
   1164c:	bne	11668 <putchar_unlocked@plt+0x7fc>
   11650:	movw	r2, #18303	; 0x477f
   11654:	mov	r0, #0
   11658:	mov	r1, r5
   1165c:	mov	r3, r4
   11660:	movt	r2, #1
   11664:	b	11688 <putchar_unlocked@plt+0x81c>
   11668:	mov	r0, r6
   1166c:	bl	12e48 <putchar_unlocked@plt+0x1fdc>
   11670:	movw	r2, #18299	; 0x477b
   11674:	mov	r3, r0
   11678:	str	r4, [sp]
   1167c:	mov	r0, #0
   11680:	mov	r1, r5
   11684:	movt	r2, #1
   11688:	bl	10d40 <error@plt>
   1168c:	movw	r0, #20688	; 0x50d0
   11690:	movt	r0, #2
   11694:	ldr	r0, [r0]
   11698:	bl	10ca4 <_exit@plt>
   1169c:	push	{r4, r5, fp, lr}
   116a0:	add	fp, sp, #8
   116a4:	cmp	r0, #0
   116a8:	beq	1173c <putchar_unlocked@plt+0x8d0>
   116ac:	mov	r1, #47	; 0x2f
   116b0:	mov	r4, r0
   116b4:	bl	10e24 <strrchr@plt>
   116b8:	cmp	r0, #0
   116bc:	mov	r5, r4
   116c0:	addne	r5, r0, #1
   116c4:	sub	r0, r5, r4
   116c8:	cmp	r0, #7
   116cc:	blt	11720 <putchar_unlocked@plt+0x8b4>
   116d0:	movw	r1, #18362	; 0x47ba
   116d4:	sub	r0, r5, #7
   116d8:	mov	r2, #7
   116dc:	movt	r1, #1
   116e0:	bl	10e54 <strncmp@plt>
   116e4:	cmp	r0, #0
   116e8:	bne	11720 <putchar_unlocked@plt+0x8b4>
   116ec:	movw	r1, #18370	; 0x47c2
   116f0:	mov	r0, r5
   116f4:	mov	r2, #3
   116f8:	movt	r1, #1
   116fc:	bl	10e54 <strncmp@plt>
   11700:	cmp	r0, #0
   11704:	beq	11710 <putchar_unlocked@plt+0x8a4>
   11708:	mov	r4, r5
   1170c:	b	11720 <putchar_unlocked@plt+0x8b4>
   11710:	movw	r0, #20760	; 0x5118
   11714:	add	r4, r5, #3
   11718:	movt	r0, #2
   1171c:	str	r4, [r0]
   11720:	movw	r0, #20764	; 0x511c
   11724:	movt	r0, #2
   11728:	str	r4, [r0]
   1172c:	movw	r0, #20796	; 0x513c
   11730:	movt	r0, #2
   11734:	str	r4, [r0]
   11738:	pop	{r4, r5, fp, pc}
   1173c:	movw	r0, #20776	; 0x5128
   11740:	movt	r0, #2
   11744:	ldr	r1, [r0]
   11748:	movw	r0, #18306	; 0x4782
   1174c:	movt	r0, #1
   11750:	bl	10e48 <fputs@plt>
   11754:	bl	10e60 <abort@plt>
   11758:	push	{r4, r5, r6, sl, fp, lr}
   1175c:	add	fp, sp, #16
   11760:	mov	r4, r0
   11764:	movw	r0, #20800	; 0x5140
   11768:	movt	r0, #2
   1176c:	cmp	r4, #0
   11770:	moveq	r4, r0
   11774:	bl	10db8 <__errno_location@plt>
   11778:	ldr	r6, [r0]
   1177c:	mov	r5, r0
   11780:	mov	r0, r4
   11784:	mov	r1, #48	; 0x30
   11788:	bl	139e4 <putchar_unlocked@plt+0x2b78>
   1178c:	str	r6, [r5]
   11790:	pop	{r4, r5, r6, sl, fp, pc}
   11794:	movw	r1, #20800	; 0x5140
   11798:	cmp	r0, #0
   1179c:	movt	r1, #2
   117a0:	movne	r1, r0
   117a4:	ldr	r0, [r1]
   117a8:	bx	lr
   117ac:	movw	r2, #20800	; 0x5140
   117b0:	cmp	r0, #0
   117b4:	movt	r2, #2
   117b8:	movne	r2, r0
   117bc:	str	r1, [r2]
   117c0:	bx	lr
   117c4:	movw	r3, #20800	; 0x5140
   117c8:	cmp	r0, #0
   117cc:	and	r2, r2, #1
   117d0:	movt	r3, #2
   117d4:	movne	r3, r0
   117d8:	ubfx	r0, r1, #5, #3
   117dc:	and	r1, r1, #31
   117e0:	add	ip, r3, r0, lsl #2
   117e4:	mov	r0, #1
   117e8:	ldr	r3, [ip, #8]
   117ec:	and	r0, r0, r3, lsr r1
   117f0:	eor	r2, r0, r2
   117f4:	eor	r1, r3, r2, lsl r1
   117f8:	str	r1, [ip, #8]
   117fc:	bx	lr
   11800:	movw	r2, #20800	; 0x5140
   11804:	cmp	r0, #0
   11808:	movt	r2, #2
   1180c:	movne	r2, r0
   11810:	ldr	r0, [r2, #4]
   11814:	str	r1, [r2, #4]
   11818:	bx	lr
   1181c:	push	{fp, lr}
   11820:	mov	fp, sp
   11824:	movw	r3, #20800	; 0x5140
   11828:	cmp	r0, #0
   1182c:	movt	r3, #2
   11830:	movne	r3, r0
   11834:	cmp	r1, #0
   11838:	mov	r0, #10
   1183c:	cmpne	r2, #0
   11840:	str	r0, [r3]
   11844:	bne	1184c <putchar_unlocked@plt+0x9e0>
   11848:	bl	10e60 <abort@plt>
   1184c:	str	r1, [r3, #40]	; 0x28
   11850:	str	r2, [r3, #44]	; 0x2c
   11854:	pop	{fp, pc}
   11858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1185c:	add	fp, sp, #28
   11860:	sub	sp, sp, #20
   11864:	mov	r7, r0
   11868:	ldr	r0, [fp, #8]
   1186c:	movw	r5, #20800	; 0x5140
   11870:	mov	r8, r3
   11874:	mov	r9, r2
   11878:	mov	sl, r1
   1187c:	movt	r5, #2
   11880:	cmp	r0, #0
   11884:	movne	r5, r0
   11888:	bl	10db8 <__errno_location@plt>
   1188c:	ldr	r2, [r5, #40]	; 0x28
   11890:	ldr	r3, [r5, #44]	; 0x2c
   11894:	mov	r4, r0
   11898:	ldm	r5, {r0, r1}
   1189c:	add	r5, r5, #8
   118a0:	ldr	r6, [r4]
   118a4:	stm	sp, {r0, r1, r5}
   118a8:	mov	r0, r7
   118ac:	mov	r1, sl
   118b0:	str	r2, [sp, #12]
   118b4:	str	r3, [sp, #16]
   118b8:	mov	r2, r9
   118bc:	mov	r3, r8
   118c0:	bl	118d0 <putchar_unlocked@plt+0xa64>
   118c4:	str	r6, [r4]
   118c8:	sub	sp, fp, #28
   118cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118d4:	add	fp, sp, #28
   118d8:	sub	sp, sp, #156	; 0x9c
   118dc:	mov	r5, r0
   118e0:	add	r0, r2, #1
   118e4:	mov	r6, r1
   118e8:	mov	sl, r3
   118ec:	str	r2, [fp, #-80]	; 0xffffffb0
   118f0:	str	r0, [sp, #72]	; 0x48
   118f4:	ldr	r0, [fp, #12]
   118f8:	and	r1, r0, #1
   118fc:	str	r1, [sp, #32]
   11900:	and	r1, r0, #4
   11904:	str	r1, [sp, #28]
   11908:	ubfx	r9, r0, #1, #1
   1190c:	bl	10d10 <__ctype_get_mb_cur_max@plt>
   11910:	str	r0, [sp, #40]	; 0x28
   11914:	ldr	r0, [fp, #24]
   11918:	ldr	r7, [fp, #8]
   1191c:	mov	r1, #0
   11920:	mov	lr, #0
   11924:	str	r5, [fp, #-84]	; 0xffffffac
   11928:	str	r1, [sp, #60]	; 0x3c
   1192c:	mov	r1, #1
   11930:	str	r1, [fp, #-48]	; 0xffffffd0
   11934:	str	r0, [sp, #80]	; 0x50
   11938:	ldr	r0, [fp, #20]
   1193c:	str	r0, [sp, #76]	; 0x4c
   11940:	mov	r0, #0
   11944:	str	r0, [sp, #56]	; 0x38
   11948:	mov	r0, #0
   1194c:	str	r0, [fp, #-88]	; 0xffffffa8
   11950:	mov	r0, #0
   11954:	str	r0, [fp, #-72]	; 0xffffffb8
   11958:	mov	r0, #0
   1195c:	cmp	r7, #10
   11960:	bhi	1293c <putchar_unlocked@plt+0x1ad0>
   11964:	add	r1, pc, #24
   11968:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1196c:	mov	ip, r6
   11970:	mov	r8, #0
   11974:	mov	r2, #1
   11978:	mov	r6, #0
   1197c:	mov	r3, sl
   11980:	ldr	pc, [r1, r7, lsl #2]
   11984:	andeq	r1, r1, r0, ror sl
   11988:	andeq	r1, r1, r4, asr #21
   1198c:	andeq	r1, r1, r4, lsl #21
   11990:	andeq	r1, r1, r8, ror #20
   11994:			; <UNDEFINED> instruction: 0x00011ab8
   11998:	andeq	r1, r1, ip, ror #21
   1199c:	muleq	r1, r4, sl
   119a0:	andeq	r1, r1, r0, ror fp
   119a4:			; <UNDEFINED> instruction: 0x000119b0
   119a8:			; <UNDEFINED> instruction: 0x000119b0
   119ac:	strdeq	r1, [r1], -r0
   119b0:	movw	r0, #18454	; 0x4816
   119b4:	mov	r1, r7
   119b8:	mov	r6, r5
   119bc:	mov	r4, ip
   119c0:	mov	r5, lr
   119c4:	movt	r0, #1
   119c8:	bl	130a0 <putchar_unlocked@plt+0x2234>
   119cc:	str	r0, [sp, #76]	; 0x4c
   119d0:	movw	r0, #18456	; 0x4818
   119d4:	mov	r1, r7
   119d8:	movt	r0, #1
   119dc:	bl	130a0 <putchar_unlocked@plt+0x2234>
   119e0:	mov	lr, r5
   119e4:	mov	r5, r6
   119e8:	mov	ip, r4
   119ec:	str	r0, [sp, #80]	; 0x50
   119f0:	mov	r8, #0
   119f4:	tst	r9, #1
   119f8:	str	lr, [sp, #44]	; 0x2c
   119fc:	bne	11a34 <putchar_unlocked@plt+0xbc8>
   11a00:	ldr	r0, [sp, #76]	; 0x4c
   11a04:	ldrb	r0, [r0]
   11a08:	cmp	r0, #0
   11a0c:	beq	11a34 <putchar_unlocked@plt+0xbc8>
   11a10:	ldr	r1, [sp, #76]	; 0x4c
   11a14:	mov	r8, #0
   11a18:	add	r1, r1, #1
   11a1c:	cmp	r8, ip
   11a20:	strbcc	r0, [r5, r8]
   11a24:	ldrb	r0, [r1, r8]
   11a28:	add	r8, r8, #1
   11a2c:	cmp	r0, #0
   11a30:	bne	11a1c <putchar_unlocked@plt+0xbb0>
   11a34:	ldr	r6, [sp, #80]	; 0x50
   11a38:	mov	r4, ip
   11a3c:	mov	r0, r6
   11a40:	bl	10dac <strlen@plt>
   11a44:	mov	ip, r4
   11a48:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11a4c:	ldr	lr, [sp, #44]	; 0x2c
   11a50:	str	r6, [fp, #-88]	; 0xffffffa8
   11a54:	str	r0, [fp, #-72]	; 0xffffffb8
   11a58:	mov	r2, #1
   11a5c:	mov	r6, r9
   11a60:	mov	r3, sl
   11a64:	b	11b70 <putchar_unlocked@plt+0xd04>
   11a68:	mov	r0, #1
   11a6c:	b	11ac4 <putchar_unlocked@plt+0xc58>
   11a70:	mov	r7, #0
   11a74:	mov	r8, #0
   11a78:	mov	r2, r0
   11a7c:	mov	r6, #0
   11a80:	b	11b70 <putchar_unlocked@plt+0xd04>
   11a84:	tst	r9, #1
   11a88:	bne	11ac4 <putchar_unlocked@plt+0xc58>
   11a8c:	mov	r2, r0
   11a90:	b	11b1c <putchar_unlocked@plt+0xcb0>
   11a94:	mov	r0, #1
   11a98:	mov	r8, #0
   11a9c:	mov	r7, #5
   11aa0:	mov	r2, #1
   11aa4:	str	r0, [fp, #-72]	; 0xffffffb8
   11aa8:	movw	r0, #18452	; 0x4814
   11aac:	movt	r0, #1
   11ab0:	str	r0, [fp, #-88]	; 0xffffffa8
   11ab4:	b	11ae4 <putchar_unlocked@plt+0xc78>
   11ab8:	mov	r2, #1
   11abc:	tst	r9, #1
   11ac0:	beq	11b1c <putchar_unlocked@plt+0xcb0>
   11ac4:	mov	r1, #1
   11ac8:	mov	r8, #0
   11acc:	mov	r7, #2
   11ad0:	mov	r2, r0
   11ad4:	str	r1, [fp, #-72]	; 0xffffffb8
   11ad8:	movw	r1, #18456	; 0x4818
   11adc:	movt	r1, #1
   11ae0:	str	r1, [fp, #-88]	; 0xffffffa8
   11ae4:	mov	r6, #1
   11ae8:	b	11b70 <putchar_unlocked@plt+0xd04>
   11aec:	tst	r9, #1
   11af0:	beq	11b40 <putchar_unlocked@plt+0xcd4>
   11af4:	mov	r0, #1
   11af8:	mov	r8, #0
   11afc:	mov	r2, #1
   11b00:	mov	r6, #1
   11b04:	mov	r7, #5
   11b08:	str	r0, [fp, #-72]	; 0xffffffb8
   11b0c:	movw	r0, #18452	; 0x4814
   11b10:	movt	r0, #1
   11b14:	str	r0, [fp, #-88]	; 0xffffffa8
   11b18:	b	11b70 <putchar_unlocked@plt+0xd04>
   11b1c:	cmp	ip, #0
   11b20:	mov	r8, #1
   11b24:	mov	r6, #0
   11b28:	mov	r7, #2
   11b2c:	movne	r0, #39	; 0x27
   11b30:	strbne	r0, [r5]
   11b34:	movw	r0, #18456	; 0x4818
   11b38:	movt	r0, #1
   11b3c:	b	11b64 <putchar_unlocked@plt+0xcf8>
   11b40:	cmp	ip, #0
   11b44:	mov	r8, #1
   11b48:	mov	r2, #1
   11b4c:	mov	r7, #5
   11b50:	mov	r6, #0
   11b54:	movne	r0, #34	; 0x22
   11b58:	strbne	r0, [r5]
   11b5c:	movw	r0, #18452	; 0x4814
   11b60:	movt	r0, #1
   11b64:	str	r0, [fp, #-88]	; 0xffffffa8
   11b68:	mov	r0, #1
   11b6c:	str	r0, [fp, #-72]	; 0xffffffb8
   11b70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11b74:	str	r7, [fp, #-68]	; 0xffffffbc
   11b78:	str	r6, [fp, #-76]	; 0xffffffb4
   11b7c:	str	r2, [sp, #84]	; 0x54
   11b80:	cmp	r0, #0
   11b84:	movwne	r0, #1
   11b88:	and	r1, r0, r6
   11b8c:	and	r1, r2, r1
   11b90:	str	r1, [sp, #48]	; 0x30
   11b94:	sub	r1, r7, #2
   11b98:	clz	r1, r1
   11b9c:	lsr	r1, r1, #5
   11ba0:	and	r1, r1, r6
   11ba4:	str	r1, [sp, #64]	; 0x40
   11ba8:	subs	r1, r7, #2
   11bac:	eor	r7, r6, #1
   11bb0:	movwne	r1, #1
   11bb4:	str	r7, [sp, #92]	; 0x5c
   11bb8:	orr	r7, r1, r7
   11bbc:	and	r1, r1, r2
   11bc0:	and	r0, r0, r1
   11bc4:	str	r7, [sp, #68]	; 0x44
   11bc8:	mov	r7, #0
   11bcc:	str	r0, [fp, #-60]	; 0xffffffc4
   11bd0:	orr	r0, r1, r6
   11bd4:	ldr	r1, [fp, #16]
   11bd8:	eor	r0, r0, #1
   11bdc:	clz	r1, r1
   11be0:	lsr	r1, r1, #5
   11be4:	orr	r0, r1, r0
   11be8:	str	r0, [fp, #-64]	; 0xffffffc0
   11bec:	eor	r0, r2, #1
   11bf0:	str	r0, [sp, #52]	; 0x34
   11bf4:	cmn	r3, #1
   11bf8:	beq	11c08 <putchar_unlocked@plt+0xd9c>
   11bfc:	cmp	r7, r3
   11c00:	bne	11c14 <putchar_unlocked@plt+0xda8>
   11c04:	b	12770 <putchar_unlocked@plt+0x1904>
   11c08:	ldrb	r0, [r4, r7]
   11c0c:	cmp	r0, #0
   11c10:	beq	12778 <putchar_unlocked@plt+0x190c>
   11c14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11c18:	cmp	r0, #0
   11c1c:	beq	11c64 <putchar_unlocked@plt+0xdf8>
   11c20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11c24:	add	r5, r7, r0
   11c28:	cmp	r0, #2
   11c2c:	bcc	11c78 <putchar_unlocked@plt+0xe0c>
   11c30:	mov	r0, #0
   11c34:	cmn	r3, #1
   11c38:	str	r0, [fp, #-56]	; 0xffffffc8
   11c3c:	bne	11c80 <putchar_unlocked@plt+0xe14>
   11c40:	mov	r0, r4
   11c44:	mov	r4, ip
   11c48:	mov	r6, lr
   11c4c:	bl	10dac <strlen@plt>
   11c50:	mov	ip, r4
   11c54:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11c58:	mov	lr, r6
   11c5c:	mov	r3, r0
   11c60:	b	11c80 <putchar_unlocked@plt+0xe14>
   11c64:	mov	r0, #0
   11c68:	mov	sl, r3
   11c6c:	str	r0, [fp, #-56]	; 0xffffffc8
   11c70:	mov	r0, #0
   11c74:	b	11cec <putchar_unlocked@plt+0xe80>
   11c78:	mov	r0, #0
   11c7c:	str	r0, [fp, #-56]	; 0xffffffc8
   11c80:	cmp	r5, r3
   11c84:	bls	11c98 <putchar_unlocked@plt+0xe2c>
   11c88:	ldr	r5, [fp, #-84]	; 0xffffffac
   11c8c:	mov	r0, #0
   11c90:	mov	sl, r3
   11c94:	b	11cec <putchar_unlocked@plt+0xe80>
   11c98:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11c9c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11ca0:	add	r0, r4, r7
   11ca4:	mov	r5, lr
   11ca8:	mov	r6, ip
   11cac:	mov	sl, r3
   11cb0:	bl	10da0 <bcmp@plt>
   11cb4:	ldr	r2, [sp, #92]	; 0x5c
   11cb8:	cmp	r0, #0
   11cbc:	ldr	r3, [fp, #-84]	; 0xffffffac
   11cc0:	mov	r1, r0
   11cc4:	movwne	r1, #1
   11cc8:	orr	r1, r1, r2
   11ccc:	tst	r1, #1
   11cd0:	beq	127fc <putchar_unlocked@plt+0x1990>
   11cd4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11cd8:	clz	r0, r0
   11cdc:	mov	lr, r5
   11ce0:	mov	ip, r6
   11ce4:	mov	r5, r3
   11ce8:	lsr	r0, r0, #5
   11cec:	str	r0, [fp, #-52]	; 0xffffffcc
   11cf0:	ldrb	r6, [r4, r7]
   11cf4:	cmp	r6, #126	; 0x7e
   11cf8:	bhi	12220 <putchar_unlocked@plt+0x13b4>
   11cfc:	add	r3, pc, #16
   11d00:	mov	r9, #1
   11d04:	mov	r2, #110	; 0x6e
   11d08:	mov	r0, #97	; 0x61
   11d0c:	mov	r1, #0
   11d10:	ldr	pc, [r3, r6, lsl #2]
   11d14:	andeq	r2, r1, r4, lsl #1
   11d18:	andeq	r2, r1, r0, lsr #4
   11d1c:	andeq	r2, r1, r0, lsr #4
   11d20:	andeq	r2, r1, r0, lsr #4
   11d24:	andeq	r2, r1, r0, lsr #4
   11d28:	andeq	r2, r1, r0, lsr #4
   11d2c:	andeq	r2, r1, r0, lsr #4
   11d30:	andeq	r2, r1, r0, lsr #5
   11d34:	andeq	r2, r1, r4, rrx
   11d38:	andeq	r2, r1, ip, asr r0
   11d3c:	andeq	r2, r1, r0, ror r0
   11d40:	andeq	r2, r1, r8, lsl #3
   11d44:	andeq	r2, r1, r4, asr r0
   11d48:	andeq	r2, r1, ip, rrx
   11d4c:	andeq	r2, r1, r0, lsr #4
   11d50:	andeq	r2, r1, r0, lsr #4
   11d54:	andeq	r2, r1, r0, lsr #4
   11d58:	andeq	r2, r1, r0, lsr #4
   11d5c:	andeq	r2, r1, r0, lsr #4
   11d60:	andeq	r2, r1, r0, lsr #4
   11d64:	andeq	r2, r1, r0, lsr #4
   11d68:	andeq	r2, r1, r0, lsr #4
   11d6c:	andeq	r2, r1, r0, lsr #4
   11d70:	andeq	r2, r1, r0, lsr #4
   11d74:	andeq	r2, r1, r0, lsr #4
   11d78:	andeq	r2, r1, r0, lsr #4
   11d7c:	andeq	r2, r1, r0, lsr #4
   11d80:	andeq	r2, r1, r0, lsr #4
   11d84:	andeq	r2, r1, r0, lsr #4
   11d88:	andeq	r2, r1, r0, lsr #4
   11d8c:	andeq	r2, r1, r0, lsr #4
   11d90:	andeq	r2, r1, r0, lsr #4
   11d94:	andeq	r2, r1, r4
   11d98:	andeq	r2, r1, r8
   11d9c:	andeq	r2, r1, r8
   11da0:	andeq	r1, r1, ip, ror #31
   11da4:	andeq	r2, r1, r8
   11da8:	andeq	r1, r1, r0, lsl pc
   11dac:	andeq	r2, r1, r8
   11db0:	muleq	r1, r0, r1
   11db4:	andeq	r2, r1, r8
   11db8:	andeq	r2, r1, r8
   11dbc:	andeq	r2, r1, r8
   11dc0:	andeq	r1, r1, r0, lsl pc
   11dc4:	andeq	r1, r1, r0, lsl pc
   11dc8:	andeq	r1, r1, r0, lsl pc
   11dcc:	andeq	r1, r1, r0, lsl pc
   11dd0:	andeq	r1, r1, r0, lsl pc
   11dd4:	andeq	r1, r1, r0, lsl pc
   11dd8:	andeq	r1, r1, r0, lsl pc
   11ddc:	andeq	r1, r1, r0, lsl pc
   11de0:	andeq	r1, r1, r0, lsl pc
   11de4:	andeq	r1, r1, r0, lsl pc
   11de8:	andeq	r1, r1, r0, lsl pc
   11dec:	andeq	r1, r1, r0, lsl pc
   11df0:	andeq	r1, r1, r0, lsl pc
   11df4:	andeq	r1, r1, r0, lsl pc
   11df8:	andeq	r1, r1, r0, lsl pc
   11dfc:	andeq	r1, r1, r0, lsl pc
   11e00:	andeq	r2, r1, r8
   11e04:	andeq	r2, r1, r8
   11e08:	andeq	r2, r1, r8
   11e0c:	andeq	r2, r1, r8
   11e10:	andeq	r2, r1, ip, asr r1
   11e14:	andeq	r2, r1, r0, lsr #4
   11e18:	andeq	r1, r1, r0, lsl pc
   11e1c:	andeq	r1, r1, r0, lsl pc
   11e20:	andeq	r1, r1, r0, lsl pc
   11e24:	andeq	r1, r1, r0, lsl pc
   11e28:	andeq	r1, r1, r0, lsl pc
   11e2c:	andeq	r1, r1, r0, lsl pc
   11e30:	andeq	r1, r1, r0, lsl pc
   11e34:	andeq	r1, r1, r0, lsl pc
   11e38:	andeq	r1, r1, r0, lsl pc
   11e3c:	andeq	r1, r1, r0, lsl pc
   11e40:	andeq	r1, r1, r0, lsl pc
   11e44:	andeq	r1, r1, r0, lsl pc
   11e48:	andeq	r1, r1, r0, lsl pc
   11e4c:	andeq	r1, r1, r0, lsl pc
   11e50:	andeq	r1, r1, r0, lsl pc
   11e54:	andeq	r1, r1, r0, lsl pc
   11e58:	andeq	r1, r1, r0, lsl pc
   11e5c:	andeq	r1, r1, r0, lsl pc
   11e60:	andeq	r1, r1, r0, lsl pc
   11e64:	andeq	r1, r1, r0, lsl pc
   11e68:	andeq	r1, r1, r0, lsl pc
   11e6c:	andeq	r1, r1, r0, lsl pc
   11e70:	andeq	r1, r1, r0, lsl pc
   11e74:	andeq	r1, r1, r0, lsl pc
   11e78:	andeq	r1, r1, r0, lsl pc
   11e7c:	andeq	r1, r1, r0, lsl pc
   11e80:	andeq	r2, r1, r8
   11e84:	andeq	r2, r1, r0, lsr r0
   11e88:	andeq	r1, r1, r0, lsl pc
   11e8c:	andeq	r2, r1, r8
   11e90:	andeq	r1, r1, r0, lsl pc
   11e94:	andeq	r2, r1, r8
   11e98:	andeq	r1, r1, r0, lsl pc
   11e9c:	andeq	r1, r1, r0, lsl pc
   11ea0:	andeq	r1, r1, r0, lsl pc
   11ea4:	andeq	r1, r1, r0, lsl pc
   11ea8:	andeq	r1, r1, r0, lsl pc
   11eac:	andeq	r1, r1, r0, lsl pc
   11eb0:	andeq	r1, r1, r0, lsl pc
   11eb4:	andeq	r1, r1, r0, lsl pc
   11eb8:	andeq	r1, r1, r0, lsl pc
   11ebc:	andeq	r1, r1, r0, lsl pc
   11ec0:	andeq	r1, r1, r0, lsl pc
   11ec4:	andeq	r1, r1, r0, lsl pc
   11ec8:	andeq	r1, r1, r0, lsl pc
   11ecc:	andeq	r1, r1, r0, lsl pc
   11ed0:	andeq	r1, r1, r0, lsl pc
   11ed4:	andeq	r1, r1, r0, lsl pc
   11ed8:	andeq	r1, r1, r0, lsl pc
   11edc:	andeq	r1, r1, r0, lsl pc
   11ee0:	andeq	r1, r1, r0, lsl pc
   11ee4:	andeq	r1, r1, r0, lsl pc
   11ee8:	andeq	r1, r1, r0, lsl pc
   11eec:	andeq	r1, r1, r0, lsl pc
   11ef0:	andeq	r1, r1, r0, lsl pc
   11ef4:	andeq	r1, r1, r0, lsl pc
   11ef8:	andeq	r1, r1, r0, lsl pc
   11efc:	andeq	r1, r1, r0, lsl pc
   11f00:	andeq	r1, r1, r4, asr #31
   11f04:	andeq	r2, r1, r8
   11f08:	andeq	r1, r1, r4, asr #31
   11f0c:	andeq	r1, r1, ip, ror #31
   11f10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f14:	tst	r0, #1
   11f18:	bne	11f44 <putchar_unlocked@plt+0x10d8>
   11f1c:	ldr	r1, [fp, #16]
   11f20:	ubfx	r0, r6, #5, #3
   11f24:	mov	r2, #1
   11f28:	ldr	r0, [r1, r0, lsl #2]
   11f2c:	and	r1, r6, #31
   11f30:	tst	r0, r2, lsl r1
   11f34:	beq	11f44 <putchar_unlocked@plt+0x10d8>
   11f38:	mov	r0, r6
   11f3c:	mov	r1, r9
   11f40:	b	11f58 <putchar_unlocked@plt+0x10ec>
   11f44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f48:	mov	r1, r9
   11f4c:	cmp	r0, #0
   11f50:	mov	r0, r6
   11f54:	beq	126a4 <putchar_unlocked@plt+0x1838>
   11f58:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11f5c:	tst	r2, #1
   11f60:	bne	12840 <putchar_unlocked@plt+0x19d4>
   11f64:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11f68:	subs	r2, r2, #2
   11f6c:	movwne	r2, #1
   11f70:	orr	r2, r2, lr
   11f74:	tst	r2, #1
   11f78:	bne	11fb0 <putchar_unlocked@plt+0x1144>
   11f7c:	cmp	r8, ip
   11f80:	mov	lr, #1
   11f84:	movcc	r2, #39	; 0x27
   11f88:	strbcc	r2, [r5, r8]
   11f8c:	add	r2, r8, #1
   11f90:	cmp	r2, ip
   11f94:	movcc	r3, #36	; 0x24
   11f98:	strbcc	r3, [r5, r2]
   11f9c:	add	r2, r8, #2
   11fa0:	add	r8, r8, #3
   11fa4:	cmp	r2, ip
   11fa8:	movcc	r3, #39	; 0x27
   11fac:	strbcc	r3, [r5, r2]
   11fb0:	cmp	r8, ip
   11fb4:	movcc	r2, #92	; 0x5c
   11fb8:	strbcc	r2, [r5, r8]
   11fbc:	add	r8, r8, #1
   11fc0:	b	126e4 <putchar_unlocked@plt+0x1878>
   11fc4:	cmp	sl, #1
   11fc8:	beq	11fec <putchar_unlocked@plt+0x1180>
   11fcc:	mov	r9, #0
   11fd0:	cmn	sl, #1
   11fd4:	bne	11ff8 <putchar_unlocked@plt+0x118c>
   11fd8:	ldrb	r0, [r4, #1]
   11fdc:	cmp	r0, #0
   11fe0:	beq	11fec <putchar_unlocked@plt+0x1180>
   11fe4:	mvn	sl, #0
   11fe8:	b	11ff8 <putchar_unlocked@plt+0x118c>
   11fec:	mov	r9, #0
   11ff0:	cmp	r7, #0
   11ff4:	beq	12004 <putchar_unlocked@plt+0x1198>
   11ff8:	mov	r0, #0
   11ffc:	str	r0, [fp, #-56]	; 0xffffffc8
   12000:	b	11f10 <putchar_unlocked@plt+0x10a4>
   12004:	mov	r1, #1
   12008:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1200c:	cmp	r0, #2
   12010:	bne	12028 <putchar_unlocked@plt+0x11bc>
   12014:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12018:	mov	r9, r1
   1201c:	tst	r0, #1
   12020:	beq	11f10 <putchar_unlocked@plt+0x10a4>
   12024:	b	12840 <putchar_unlocked@plt+0x19d4>
   12028:	mov	r9, r1
   1202c:	b	11f10 <putchar_unlocked@plt+0x10a4>
   12030:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12034:	cmp	r0, #2
   12038:	bne	1227c <putchar_unlocked@plt+0x1410>
   1203c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12040:	tst	r0, #1
   12044:	bne	12840 <putchar_unlocked@plt+0x19d4>
   12048:	mov	r0, #0
   1204c:	str	r0, [fp, #-56]	; 0xffffffc8
   12050:	b	12294 <putchar_unlocked@plt+0x1428>
   12054:	mov	r0, #102	; 0x66
   12058:	b	122a0 <putchar_unlocked@plt+0x1434>
   1205c:	mov	r2, #116	; 0x74
   12060:	b	12070 <putchar_unlocked@plt+0x1204>
   12064:	mov	r0, #98	; 0x62
   12068:	b	122a0 <putchar_unlocked@plt+0x1434>
   1206c:	mov	r2, #114	; 0x72
   12070:	ldr	r0, [sp, #68]	; 0x44
   12074:	tst	r0, #1
   12078:	mov	r0, r2
   1207c:	bne	122a0 <putchar_unlocked@plt+0x1434>
   12080:	b	12840 <putchar_unlocked@plt+0x19d4>
   12084:	ldr	r0, [sp, #84]	; 0x54
   12088:	tst	r0, #1
   1208c:	beq	122c0 <putchar_unlocked@plt+0x1454>
   12090:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12094:	tst	r0, #1
   12098:	bne	1292c <putchar_unlocked@plt+0x1ac0>
   1209c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   120a0:	mov	r2, sl
   120a4:	subs	r0, r0, #2
   120a8:	movwne	r0, #1
   120ac:	orr	r0, r0, lr
   120b0:	tst	r0, #1
   120b4:	bne	120ec <putchar_unlocked@plt+0x1280>
   120b8:	cmp	r8, ip
   120bc:	mov	lr, #1
   120c0:	movcc	r0, #39	; 0x27
   120c4:	strbcc	r0, [r5, r8]
   120c8:	add	r0, r8, #1
   120cc:	cmp	r0, ip
   120d0:	movcc	r1, #36	; 0x24
   120d4:	strbcc	r1, [r5, r0]
   120d8:	add	r0, r8, #2
   120dc:	add	r8, r8, #3
   120e0:	cmp	r0, ip
   120e4:	movcc	r1, #39	; 0x27
   120e8:	strbcc	r1, [r5, r0]
   120ec:	mov	r1, #1
   120f0:	cmp	r8, ip
   120f4:	mov	r9, #0
   120f8:	mov	r6, #48	; 0x30
   120fc:	str	r1, [fp, #-56]	; 0xffffffc8
   12100:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12104:	movcc	r0, #92	; 0x5c
   12108:	strbcc	r0, [r5, r8]
   1210c:	add	r0, r8, #1
   12110:	cmp	r1, #2
   12114:	beq	1241c <putchar_unlocked@plt+0x15b0>
   12118:	add	r1, r7, #1
   1211c:	cmp	r1, r2
   12120:	bcs	1241c <putchar_unlocked@plt+0x15b0>
   12124:	ldrb	r1, [r4, r1]
   12128:	sub	r1, r1, #48	; 0x30
   1212c:	uxtb	r1, r1
   12130:	cmp	r1, #9
   12134:	bhi	1241c <putchar_unlocked@plt+0x15b0>
   12138:	cmp	r0, ip
   1213c:	movcc	r1, #48	; 0x30
   12140:	strbcc	r1, [r5, r0]
   12144:	add	r0, r8, #2
   12148:	add	r8, r8, #3
   1214c:	cmp	r0, ip
   12150:	movcc	r1, #48	; 0x30
   12154:	strbcc	r1, [r5, r0]
   12158:	b	11f10 <putchar_unlocked@plt+0x10a4>
   1215c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12160:	mov	r6, #63	; 0x3f
   12164:	cmp	r0, #5
   12168:	beq	12424 <putchar_unlocked@plt+0x15b8>
   1216c:	mov	r1, #0
   12170:	cmp	r0, #2
   12174:	str	r1, [fp, #-56]	; 0xffffffc8
   12178:	bne	124d8 <putchar_unlocked@plt+0x166c>
   1217c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12180:	mov	r9, #0
   12184:	b	1201c <putchar_unlocked@plt+0x11b0>
   12188:	mov	r0, #118	; 0x76
   1218c:	b	122a0 <putchar_unlocked@plt+0x1434>
   12190:	mov	r0, #1
   12194:	mov	r6, #39	; 0x27
   12198:	str	r0, [sp, #60]	; 0x3c
   1219c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   121a0:	cmp	r0, #2
   121a4:	bne	12218 <putchar_unlocked@plt+0x13ac>
   121a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121ac:	tst	r0, #1
   121b0:	bne	12840 <putchar_unlocked@plt+0x19d4>
   121b4:	ldr	r2, [sp, #56]	; 0x38
   121b8:	clz	r1, ip
   121bc:	mov	lr, #0
   121c0:	lsr	r1, r1, #5
   121c4:	cmp	r2, #0
   121c8:	mov	r0, r2
   121cc:	movwne	r0, #1
   121d0:	orrs	r0, r0, r1
   121d4:	moveq	r2, ip
   121d8:	moveq	ip, r0
   121dc:	cmp	r8, ip
   121e0:	str	r2, [sp, #56]	; 0x38
   121e4:	movcc	r0, #39	; 0x27
   121e8:	strbcc	r0, [r5, r8]
   121ec:	add	r0, r8, #1
   121f0:	cmp	r0, ip
   121f4:	movcc	r1, #92	; 0x5c
   121f8:	strbcc	r1, [r5, r0]
   121fc:	add	r0, r8, #2
   12200:	add	r8, r8, #3
   12204:	cmp	r0, ip
   12208:	movcc	r1, #39	; 0x27
   1220c:	strbcc	r1, [r5, r0]
   12210:	mov	r0, #0
   12214:	str	r0, [fp, #-56]	; 0xffffffc8
   12218:	mov	r9, #1
   1221c:	b	11f10 <putchar_unlocked@plt+0x10a4>
   12220:	ldr	r0, [sp, #40]	; 0x28
   12224:	str	lr, [sp, #44]	; 0x2c
   12228:	str	ip, [sp, #88]	; 0x58
   1222c:	cmp	r0, #1
   12230:	bne	122e0 <putchar_unlocked@plt+0x1474>
   12234:	str	sl, [sp, #36]	; 0x24
   12238:	bl	10d88 <__ctype_b_loc@plt>
   1223c:	ldr	r0, [r0]
   12240:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12244:	mov	r1, #1
   12248:	add	r0, r0, r6, lsl #1
   1224c:	ldrb	r0, [r0, #1]
   12250:	ubfx	r9, r0, #6, #1
   12254:	ldr	r0, [sp, #52]	; 0x34
   12258:	ldr	lr, [sp, #44]	; 0x2c
   1225c:	cmp	r1, #1
   12260:	orr	r3, r9, r0
   12264:	bhi	124e0 <putchar_unlocked@plt+0x1674>
   12268:	tst	r3, #1
   1226c:	beq	124e0 <putchar_unlocked@plt+0x1674>
   12270:	ldr	sl, [sp, #36]	; 0x24
   12274:	ldr	ip, [sp, #88]	; 0x58
   12278:	b	11f10 <putchar_unlocked@plt+0x10a4>
   1227c:	ldr	r1, [sp, #48]	; 0x30
   12280:	mov	r0, #0
   12284:	str	r0, [fp, #-56]	; 0xffffffc8
   12288:	mov	r0, #92	; 0x5c
   1228c:	cmp	r1, #0
   12290:	beq	122a0 <putchar_unlocked@plt+0x1434>
   12294:	mov	r6, #92	; 0x5c
   12298:	mov	r9, #0
   1229c:	b	126a4 <putchar_unlocked@plt+0x1838>
   122a0:	mov	r1, #0
   122a4:	mov	r9, #0
   122a8:	str	r1, [fp, #-56]	; 0xffffffc8
   122ac:	ldr	r1, [sp, #84]	; 0x54
   122b0:	tst	r1, #1
   122b4:	mov	r1, #0
   122b8:	beq	11f10 <putchar_unlocked@plt+0x10a4>
   122bc:	b	11f58 <putchar_unlocked@plt+0x10ec>
   122c0:	ldr	r0, [sp, #32]
   122c4:	mov	r6, #0
   122c8:	mov	r9, #0
   122cc:	cmp	r0, #0
   122d0:	mov	r0, #0
   122d4:	str	r0, [fp, #-56]	; 0xffffffc8
   122d8:	beq	11f10 <putchar_unlocked@plt+0x10a4>
   122dc:	b	126fc <putchar_unlocked@plt+0x1890>
   122e0:	mov	r0, #0
   122e4:	cmn	sl, #1
   122e8:	sub	r3, fp, #40	; 0x28
   122ec:	str	r0, [fp, #-36]	; 0xffffffdc
   122f0:	str	r0, [fp, #-40]	; 0xffffffd8
   122f4:	bne	1230c <putchar_unlocked@plt+0x14a0>
   122f8:	mov	r0, r4
   122fc:	bl	10dac <strlen@plt>
   12300:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12304:	sub	r3, fp, #40	; 0x28
   12308:	mov	sl, r0
   1230c:	ldr	r0, [sp, #72]	; 0x48
   12310:	mov	r9, #1
   12314:	mov	r1, #0
   12318:	str	sl, [sp, #36]	; 0x24
   1231c:	add	r0, r0, r7
   12320:	str	r0, [sp, #20]
   12324:	add	r0, r1, r7
   12328:	str	r1, [sp, #24]
   1232c:	add	r1, r4, r0
   12330:	mov	r4, r0
   12334:	sub	r2, sl, r0
   12338:	sub	r0, fp, #44	; 0x2c
   1233c:	bl	13e54 <putchar_unlocked@plt+0x2fe8>
   12340:	cmp	r0, #0
   12344:	beq	12750 <putchar_unlocked@plt+0x18e4>
   12348:	cmn	r0, #1
   1234c:	beq	12708 <putchar_unlocked@plt+0x189c>
   12350:	ldr	r2, [sp, #36]	; 0x24
   12354:	cmn	r0, #2
   12358:	beq	12710 <putchar_unlocked@plt+0x18a4>
   1235c:	ldr	r2, [sp, #64]	; 0x40
   12360:	ldr	ip, [sp, #88]	; 0x58
   12364:	ldr	r4, [sp, #84]	; 0x54
   12368:	ldr	lr, [fp, #-48]	; 0xffffffd0
   1236c:	cmp	r0, #2
   12370:	mov	r1, #0
   12374:	movwcc	r1, #1
   12378:	eor	r2, r2, #1
   1237c:	orrs	r1, r2, r1
   12380:	bne	123d0 <putchar_unlocked@plt+0x1564>
   12384:	ldr	r1, [sp, #24]
   12388:	ldr	r2, [sp, #20]
   1238c:	add	r1, r2, r1
   12390:	sub	r2, r0, #1
   12394:	ldrb	r3, [r1]
   12398:	sub	r5, r3, #94	; 0x5e
   1239c:	cmp	r5, #30
   123a0:	bhi	123b8 <putchar_unlocked@plt+0x154c>
   123a4:	mov	r4, #1
   123a8:	mov	sl, #1073741829	; 0x40000005
   123ac:	tst	sl, r4, lsl r5
   123b0:	ldr	r4, [sp, #84]	; 0x54
   123b4:	bne	12818 <putchar_unlocked@plt+0x19ac>
   123b8:	sub	r3, r3, #91	; 0x5b
   123bc:	cmp	r3, #2
   123c0:	bcc	12818 <putchar_unlocked@plt+0x19ac>
   123c4:	add	r1, r1, #1
   123c8:	subs	r2, r2, #1
   123cc:	bne	12394 <putchar_unlocked@plt+0x1528>
   123d0:	ldr	r5, [sp, #24]
   123d4:	str	lr, [fp, #-48]	; 0xffffffd0
   123d8:	add	r5, r0, r5
   123dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123e0:	bl	10cf8 <iswprint@plt>
   123e4:	cmp	r0, #0
   123e8:	sub	r4, fp, #40	; 0x28
   123ec:	movwne	r0, #1
   123f0:	and	r9, r9, r0
   123f4:	mov	r0, r4
   123f8:	bl	10cbc <mbsinit@plt>
   123fc:	mov	r1, r5
   12400:	mov	r3, r4
   12404:	ldr	sl, [sp, #36]	; 0x24
   12408:	ldr	r5, [fp, #-84]	; 0xffffffac
   1240c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12410:	cmp	r0, #0
   12414:	beq	12324 <putchar_unlocked@plt+0x14b8>
   12418:	b	12254 <putchar_unlocked@plt+0x13e8>
   1241c:	mov	r8, r0
   12420:	b	11f10 <putchar_unlocked@plt+0x10a4>
   12424:	mov	r0, #0
   12428:	str	r0, [fp, #-56]	; 0xffffffc8
   1242c:	ldr	r0, [sp, #28]
   12430:	cmp	r0, #0
   12434:	beq	124d8 <putchar_unlocked@plt+0x166c>
   12438:	add	r0, r7, #2
   1243c:	mov	r1, sl
   12440:	cmp	r0, sl
   12444:	bcs	124d8 <putchar_unlocked@plt+0x166c>
   12448:	add	r1, r7, r4
   1244c:	ldrb	r1, [r1, #1]
   12450:	cmp	r1, #63	; 0x3f
   12454:	bne	124d8 <putchar_unlocked@plt+0x166c>
   12458:	ldrb	r9, [r4, r0]
   1245c:	sub	r2, r9, #33	; 0x21
   12460:	cmp	r2, #29
   12464:	bhi	124d8 <putchar_unlocked@plt+0x166c>
   12468:	mov	r1, r4
   1246c:	movw	r4, #20929	; 0x51c1
   12470:	mov	r3, #1
   12474:	movt	r4, #14336	; 0x3800
   12478:	tst	r4, r3, lsl r2
   1247c:	beq	12764 <putchar_unlocked@plt+0x18f8>
   12480:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12484:	tst	r2, #1
   12488:	bne	12934 <putchar_unlocked@plt+0x1ac8>
   1248c:	cmp	r8, ip
   12490:	mov	r4, r1
   12494:	mov	r7, r0
   12498:	mov	r6, r9
   1249c:	movcc	r2, #63	; 0x3f
   124a0:	strbcc	r2, [r5, r8]
   124a4:	add	r2, r8, #1
   124a8:	cmp	r2, ip
   124ac:	movcc	r3, #34	; 0x22
   124b0:	strbcc	r3, [r5, r2]
   124b4:	add	r2, r8, #2
   124b8:	cmp	r2, ip
   124bc:	movcc	r3, #34	; 0x22
   124c0:	strbcc	r3, [r5, r2]
   124c4:	add	r2, r8, #3
   124c8:	add	r8, r8, #4
   124cc:	cmp	r2, ip
   124d0:	movcc	r3, #63	; 0x3f
   124d4:	strbcc	r3, [r5, r2]
   124d8:	mov	r9, #0
   124dc:	b	11f10 <putchar_unlocked@plt+0x10a4>
   124e0:	ldr	sl, [sp, #36]	; 0x24
   124e4:	add	r0, r1, r7
   124e8:	mov	r2, #0
   124ec:	str	r3, [sp, #24]
   124f0:	str	r0, [fp, #-56]	; 0xffffffc8
   124f4:	tst	r3, #1
   124f8:	beq	12524 <putchar_unlocked@plt+0x16b8>
   124fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12500:	tst	r0, #1
   12504:	beq	125ec <putchar_unlocked@plt+0x1780>
   12508:	ldr	r1, [sp, #88]	; 0x58
   1250c:	mov	r0, r3
   12510:	cmp	r8, r1
   12514:	movcc	r1, #92	; 0x5c
   12518:	strbcc	r1, [r5, r8]
   1251c:	add	r8, r8, #1
   12520:	b	125f0 <putchar_unlocked@plt+0x1784>
   12524:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12528:	tst	r1, #1
   1252c:	bne	1283c <putchar_unlocked@plt+0x19d0>
   12530:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12534:	subs	r2, r1, #2
   12538:	movwne	r2, #1
   1253c:	orr	r2, r2, lr
   12540:	tst	r2, #1
   12544:	bne	12588 <putchar_unlocked@plt+0x171c>
   12548:	ldr	r1, [sp, #88]	; 0x58
   1254c:	add	r2, r8, #1
   12550:	mov	lr, #1
   12554:	cmp	r8, r1
   12558:	movcc	r1, #39	; 0x27
   1255c:	strbcc	r1, [r5, r8]
   12560:	ldr	r1, [sp, #88]	; 0x58
   12564:	cmp	r2, r1
   12568:	movcc	r1, #36	; 0x24
   1256c:	strbcc	r1, [r5, r2]
   12570:	ldr	r1, [sp, #88]	; 0x58
   12574:	add	r2, r8, #2
   12578:	add	r8, r8, #3
   1257c:	cmp	r2, r1
   12580:	movcc	r1, #39	; 0x27
   12584:	strbcc	r1, [r5, r2]
   12588:	ldr	r1, [sp, #88]	; 0x58
   1258c:	add	r2, r8, #1
   12590:	mov	r0, r3
   12594:	cmp	r8, r1
   12598:	movcc	r1, #92	; 0x5c
   1259c:	strbcc	r1, [r5, r8]
   125a0:	ldr	r1, [sp, #88]	; 0x58
   125a4:	cmp	r2, r1
   125a8:	bcs	125bc <putchar_unlocked@plt+0x1750>
   125ac:	uxtb	r3, r6
   125b0:	mov	r1, #48	; 0x30
   125b4:	orr	r3, r1, r3, lsr #6
   125b8:	strb	r3, [r5, r2]
   125bc:	ldr	r1, [sp, #88]	; 0x58
   125c0:	add	r2, r8, #2
   125c4:	add	r8, r8, #3
   125c8:	cmp	r2, r1
   125cc:	lsrcc	r3, r6, #3
   125d0:	movcc	r1, #6
   125d4:	bficc	r3, r1, #3, #29
   125d8:	mov	r1, #6
   125dc:	bfi	r6, r1, #3, #29
   125e0:	strbcc	r3, [r5, r2]
   125e4:	mov	r2, #1
   125e8:	b	125f8 <putchar_unlocked@plt+0x178c>
   125ec:	mov	r0, r3
   125f0:	mov	r1, #0
   125f4:	str	r1, [fp, #-52]	; 0xffffffcc
   125f8:	mov	ip, r2
   125fc:	and	r1, r2, #1
   12600:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12604:	add	r3, r7, #1
   12608:	cmp	r2, r3
   1260c:	bls	12694 <putchar_unlocked@plt+0x1828>
   12610:	cmp	r1, #0
   12614:	mvn	r5, lr
   12618:	movwne	r1, #1
   1261c:	orr	r5, r5, r1
   12620:	tst	r5, #1
   12624:	bne	12668 <putchar_unlocked@plt+0x17fc>
   12628:	ldr	r1, [sp, #88]	; 0x58
   1262c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12630:	mov	r2, r4
   12634:	ldr	r4, [sp, #88]	; 0x58
   12638:	ldr	r0, [sp, #24]
   1263c:	mov	lr, #0
   12640:	cmp	r8, r1
   12644:	movcc	r1, #39	; 0x27
   12648:	strbcc	r1, [r5, r8]
   1264c:	add	r1, r8, #1
   12650:	add	r8, r8, #2
   12654:	cmp	r1, r4
   12658:	movcc	r4, #39	; 0x27
   1265c:	strbcc	r4, [r5, r1]
   12660:	mov	r4, r2
   12664:	b	1266c <putchar_unlocked@plt+0x1800>
   12668:	ldr	r5, [fp, #-84]	; 0xffffffac
   1266c:	ldr	r1, [sp, #88]	; 0x58
   12670:	mov	r2, ip
   12674:	cmp	r8, r1
   12678:	ldr	r1, [sp, #72]	; 0x48
   1267c:	strbcc	r6, [r5, r8]
   12680:	add	r8, r8, #1
   12684:	ldrb	r6, [r1, r7]
   12688:	mov	r7, r3
   1268c:	mov	r3, r0
   12690:	b	124f4 <putchar_unlocked@plt+0x1688>
   12694:	ldr	ip, [sp, #88]	; 0x58
   12698:	cmp	r1, #0
   1269c:	movwne	r1, #1
   126a0:	str	r1, [fp, #-56]	; 0xffffffc8
   126a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   126a8:	cmp	r0, #0
   126ac:	bne	126dc <putchar_unlocked@plt+0x1870>
   126b0:	tst	lr, #1
   126b4:	beq	126dc <putchar_unlocked@plt+0x1870>
   126b8:	cmp	r8, ip
   126bc:	mov	lr, #0
   126c0:	movcc	r0, #39	; 0x27
   126c4:	strbcc	r0, [r5, r8]
   126c8:	add	r0, r8, #1
   126cc:	add	r8, r8, #2
   126d0:	cmp	r0, ip
   126d4:	movcc	r1, #39	; 0x27
   126d8:	strbcc	r1, [r5, r0]
   126dc:	mov	r1, r9
   126e0:	mov	r0, r6
   126e4:	cmp	r8, ip
   126e8:	strbcc	r0, [r5, r8]
   126ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   126f0:	add	r8, r8, #1
   126f4:	and	r0, r0, r1
   126f8:	str	r0, [fp, #-48]	; 0xffffffd0
   126fc:	mov	r3, sl
   12700:	add	r7, r7, #1
   12704:	b	11bf4 <putchar_unlocked@plt+0xd88>
   12708:	mov	r9, #0
   1270c:	b	12750 <putchar_unlocked@plt+0x18e4>
   12710:	mov	r9, #0
   12714:	cmp	r2, r4
   12718:	bls	12750 <putchar_unlocked@plt+0x18e4>
   1271c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12720:	ldr	r1, [sp, #24]
   12724:	add	r0, r4, r7
   12728:	mov	r3, r1
   1272c:	ldrb	r1, [r0, r1]
   12730:	cmp	r1, #0
   12734:	beq	1275c <putchar_unlocked@plt+0x18f0>
   12738:	add	r3, r3, #1
   1273c:	add	r1, r7, r3
   12740:	cmp	r1, r2
   12744:	mov	r1, r3
   12748:	bcc	12728 <putchar_unlocked@plt+0x18bc>
   1274c:	b	12254 <putchar_unlocked@plt+0x13e8>
   12750:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12754:	ldr	r1, [sp, #24]
   12758:	b	12254 <putchar_unlocked@plt+0x13e8>
   1275c:	mov	r1, r3
   12760:	b	12254 <putchar_unlocked@plt+0x13e8>
   12764:	mov	r9, #0
   12768:	mov	r4, r1
   1276c:	b	11f10 <putchar_unlocked@plt+0x10a4>
   12770:	mov	sl, r7
   12774:	b	1277c <putchar_unlocked@plt+0x1910>
   12778:	mvn	sl, #0
   1277c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12780:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12784:	eor	r0, r1, #2
   12788:	orr	r0, r0, r8
   1278c:	clz	r0, r0
   12790:	lsr	r0, r0, #5
   12794:	tst	r2, r0
   12798:	bne	12840 <putchar_unlocked@plt+0x19d4>
   1279c:	subs	r0, r1, #2
   127a0:	movwne	r0, #1
   127a4:	orr	r0, r2, r0
   127a8:	tst	r0, #1
   127ac:	ldreq	r0, [sp, #60]	; 0x3c
   127b0:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   127b4:	eoreq	r0, r0, #1
   127b8:	tsteq	r0, #1
   127bc:	bne	128d4 <putchar_unlocked@plt+0x1a68>
   127c0:	tst	r1, #1
   127c4:	bne	128a0 <putchar_unlocked@plt+0x1a34>
   127c8:	ldr	r6, [sp, #56]	; 0x38
   127cc:	mov	r9, #0
   127d0:	cmp	r6, #0
   127d4:	beq	128cc <putchar_unlocked@plt+0x1a60>
   127d8:	ldr	r0, [sp, #84]	; 0x54
   127dc:	mov	r1, #0
   127e0:	mov	r7, #2
   127e4:	cmp	ip, #0
   127e8:	str	r1, [fp, #-48]	; 0xffffffd0
   127ec:	mov	r1, #0
   127f0:	str	r1, [fp, #-76]	; 0xffffffb4
   127f4:	beq	1195c <putchar_unlocked@plt+0xaf0>
   127f8:	b	128d4 <putchar_unlocked@plt+0x1a68>
   127fc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12800:	ldr	r1, [fp, #12]
   12804:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12808:	mov	r5, r3
   1280c:	mov	ip, r6
   12810:	mov	r3, sl
   12814:	b	12864 <putchar_unlocked@plt+0x19f8>
   12818:	tst	r4, #1
   1281c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12820:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12824:	ldr	r1, [fp, #12]
   12828:	ldr	r3, [sp, #36]	; 0x24
   1282c:	mov	r0, #2
   12830:	movwne	r0, #4
   12834:	mov	r2, r0
   12838:	b	12864 <putchar_unlocked@plt+0x19f8>
   1283c:	ldr	ip, [sp, #88]	; 0x58
   12840:	ldr	r1, [sp, #84]	; 0x54
   12844:	mov	r0, #2
   12848:	tst	r1, #1
   1284c:	movwne	r0, #4
   12850:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12854:	ldr	r1, [fp, #12]
   12858:	mov	r3, sl
   1285c:	cmp	r2, #2
   12860:	moveq	r2, r0
   12864:	mov	r0, #0
   12868:	bic	r1, r1, #2
   1286c:	str	r2, [sp]
   12870:	mov	r2, r4
   12874:	str	r0, [sp, #8]
   12878:	ldr	r0, [sp, #76]	; 0x4c
   1287c:	str	r1, [sp, #4]
   12880:	mov	r1, ip
   12884:	str	r0, [sp, #12]
   12888:	ldr	r0, [sp, #80]	; 0x50
   1288c:	str	r0, [sp, #16]
   12890:	mov	r0, r5
   12894:	bl	118d0 <putchar_unlocked@plt+0xa64>
   12898:	mov	r8, r0
   1289c:	b	12920 <putchar_unlocked@plt+0x1ab4>
   128a0:	mov	r0, #5
   128a4:	ldr	r1, [sp, #56]	; 0x38
   128a8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   128ac:	mov	r3, sl
   128b0:	str	r0, [sp]
   128b4:	ldr	r0, [fp, #12]
   128b8:	str	r0, [sp, #4]
   128bc:	ldr	r0, [fp, #16]
   128c0:	str	r0, [sp, #8]
   128c4:	ldr	r0, [sp, #76]	; 0x4c
   128c8:	b	12884 <putchar_unlocked@plt+0x1a18>
   128cc:	mov	r0, #0
   128d0:	str	r0, [fp, #-76]	; 0xffffffb4
   128d4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   128d8:	cmp	r1, #0
   128dc:	beq	12914 <putchar_unlocked@plt+0x1aa8>
   128e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   128e4:	tst	r0, #1
   128e8:	bne	12914 <putchar_unlocked@plt+0x1aa8>
   128ec:	ldrb	r0, [r1]
   128f0:	cmp	r0, #0
   128f4:	beq	12914 <putchar_unlocked@plt+0x1aa8>
   128f8:	add	r1, r1, #1
   128fc:	cmp	r8, ip
   12900:	strbcc	r0, [r5, r8]
   12904:	add	r8, r8, #1
   12908:	ldrb	r0, [r1], #1
   1290c:	cmp	r0, #0
   12910:	bne	128fc <putchar_unlocked@plt+0x1a90>
   12914:	cmp	r8, ip
   12918:	movcc	r0, #0
   1291c:	strbcc	r0, [r5, r8]
   12920:	mov	r0, r8
   12924:	sub	sp, fp, #28
   12928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1292c:	mov	r0, #4
   12930:	b	12850 <putchar_unlocked@plt+0x19e4>
   12934:	mov	r4, r1
   12938:	b	12840 <putchar_unlocked@plt+0x19d4>
   1293c:	bl	10e60 <abort@plt>
   12940:	mov	r3, r2
   12944:	mov	r2, #0
   12948:	b	1294c <putchar_unlocked@plt+0x1ae0>
   1294c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12950:	add	fp, sp, #28
   12954:	sub	sp, sp, #36	; 0x24
   12958:	movw	r8, #20800	; 0x5140
   1295c:	cmp	r3, #0
   12960:	mov	r4, r2
   12964:	str	r2, [sp, #24]
   12968:	mov	r5, r1
   1296c:	mov	r6, r0
   12970:	str	r0, [sp, #20]
   12974:	movt	r8, #2
   12978:	movne	r8, r3
   1297c:	bl	10db8 <__errno_location@plt>
   12980:	str	r0, [sp, #28]
   12984:	ldr	r1, [r8, #40]	; 0x28
   12988:	ldr	r2, [r8, #44]	; 0x2c
   1298c:	ldr	r7, [r0]
   12990:	cmp	r4, #0
   12994:	add	sl, r8, #8
   12998:	mov	r0, #0
   1299c:	ldm	r8, {r3, r9}
   129a0:	orreq	r9, r9, #1
   129a4:	stm	sp, {r3, r9, sl}
   129a8:	str	r1, [sp, #12]
   129ac:	str	r2, [sp, #16]
   129b0:	mov	r1, #0
   129b4:	mov	r2, r6
   129b8:	mov	r3, r5
   129bc:	str	r7, [sp, #32]
   129c0:	mov	r7, r5
   129c4:	bl	118d0 <putchar_unlocked@plt+0xa64>
   129c8:	add	r4, r0, #1
   129cc:	mov	r5, r0
   129d0:	mov	r0, r4
   129d4:	bl	136c4 <putchar_unlocked@plt+0x2858>
   129d8:	mov	r6, r0
   129dc:	ldr	r0, [r8]
   129e0:	ldr	r2, [r8, #44]	; 0x2c
   129e4:	ldr	r1, [r8, #40]	; 0x28
   129e8:	mov	r3, r7
   129ec:	stm	sp, {r0, r9, sl}
   129f0:	str	r2, [sp, #16]
   129f4:	ldr	r2, [sp, #20]
   129f8:	str	r1, [sp, #12]
   129fc:	mov	r0, r6
   12a00:	mov	r1, r4
   12a04:	bl	118d0 <putchar_unlocked@plt+0xa64>
   12a08:	ldr	r0, [sp, #24]
   12a0c:	ldr	r1, [sp, #32]
   12a10:	ldr	r2, [sp, #28]
   12a14:	cmp	r0, #0
   12a18:	str	r1, [r2]
   12a1c:	strne	r5, [r0]
   12a20:	mov	r0, r6
   12a24:	sub	sp, fp, #28
   12a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a30:	add	fp, sp, #24
   12a34:	movw	r5, #20700	; 0x50dc
   12a38:	movw	r8, #20696	; 0x50d8
   12a3c:	movt	r5, #2
   12a40:	movt	r8, #2
   12a44:	ldr	r0, [r5]
   12a48:	ldr	r4, [r8]
   12a4c:	cmp	r0, #2
   12a50:	blt	12a7c <putchar_unlocked@plt+0x1c10>
   12a54:	add	r7, r4, #12
   12a58:	mov	r6, #0
   12a5c:	ldr	r0, [r7, r6, lsl #3]
   12a60:	bl	13d50 <putchar_unlocked@plt+0x2ee4>
   12a64:	ldr	r1, [r5]
   12a68:	add	r2, r6, #2
   12a6c:	add	r0, r6, #1
   12a70:	mov	r6, r0
   12a74:	cmp	r2, r1
   12a78:	blt	12a5c <putchar_unlocked@plt+0x1bf0>
   12a7c:	ldr	r0, [r4, #4]
   12a80:	movw	r9, #20848	; 0x5170
   12a84:	movw	r7, #20704	; 0x50e0
   12a88:	movt	r9, #2
   12a8c:	movt	r7, #2
   12a90:	cmp	r0, r9
   12a94:	beq	12aa4 <putchar_unlocked@plt+0x1c38>
   12a98:	bl	13d50 <putchar_unlocked@plt+0x2ee4>
   12a9c:	mov	r0, #256	; 0x100
   12aa0:	stm	r7, {r0, r9}
   12aa4:	cmp	r4, r7
   12aa8:	beq	12ab8 <putchar_unlocked@plt+0x1c4c>
   12aac:	mov	r0, r4
   12ab0:	bl	13d50 <putchar_unlocked@plt+0x2ee4>
   12ab4:	str	r7, [r8]
   12ab8:	mov	r0, #1
   12abc:	str	r0, [r5]
   12ac0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ac4:	movw	r3, #20800	; 0x5140
   12ac8:	mvn	r2, #0
   12acc:	movt	r3, #2
   12ad0:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   12ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ad8:	add	fp, sp, #28
   12adc:	sub	sp, sp, #44	; 0x2c
   12ae0:	mov	r7, r3
   12ae4:	str	r2, [sp, #36]	; 0x24
   12ae8:	str	r1, [sp, #32]
   12aec:	mov	r5, r0
   12af0:	bl	10db8 <__errno_location@plt>
   12af4:	cmp	r5, #0
   12af8:	bmi	12c68 <putchar_unlocked@plt+0x1dfc>
   12afc:	cmn	r5, #-2147483647	; 0x80000001
   12b00:	beq	12c68 <putchar_unlocked@plt+0x1dfc>
   12b04:	movw	r8, #20700	; 0x50dc
   12b08:	movw	r4, #20696	; 0x50d8
   12b0c:	str	r0, [sp, #28]
   12b10:	ldr	r0, [r0]
   12b14:	movt	r8, #2
   12b18:	movt	r4, #2
   12b1c:	ldr	r1, [r8]
   12b20:	ldr	r6, [r4]
   12b24:	str	r0, [sp, #24]
   12b28:	cmp	r1, r5
   12b2c:	ble	12b38 <putchar_unlocked@plt+0x1ccc>
   12b30:	mov	sl, r6
   12b34:	b	12ba4 <putchar_unlocked@plt+0x1d38>
   12b38:	movw	r9, #20704	; 0x50e0
   12b3c:	mov	r0, #8
   12b40:	str	r1, [fp, #-32]	; 0xffffffe0
   12b44:	sub	r1, r5, r1
   12b48:	mvn	r3, #-2147483648	; 0x80000000
   12b4c:	movt	r9, #2
   12b50:	str	r0, [sp]
   12b54:	add	r2, r1, #1
   12b58:	sub	r1, fp, #32
   12b5c:	subs	r0, r6, r9
   12b60:	movne	r0, r6
   12b64:	bl	137f4 <putchar_unlocked@plt+0x2988>
   12b68:	mov	sl, r0
   12b6c:	cmp	r6, r9
   12b70:	str	r0, [r4]
   12b74:	bne	12b80 <putchar_unlocked@plt+0x1d14>
   12b78:	ldrd	r0, [r9]
   12b7c:	stm	sl, {r0, r1}
   12b80:	ldr	r1, [r8]
   12b84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b88:	add	r0, sl, r1, lsl #3
   12b8c:	sub	r1, r2, r1
   12b90:	lsl	r2, r1, #3
   12b94:	mov	r1, #0
   12b98:	bl	10dd0 <memset@plt>
   12b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ba0:	str	r0, [r8]
   12ba4:	mov	r9, sl
   12ba8:	ldm	r7, {r0, r1}
   12bac:	orr	r8, r1, #1
   12bb0:	add	r1, r7, #8
   12bb4:	ldr	r2, [r7, #40]	; 0x28
   12bb8:	ldr	r3, [r7, #44]	; 0x2c
   12bbc:	ldr	r6, [r9, r5, lsl #3]!
   12bc0:	str	r1, [sp, #20]
   12bc4:	ldr	r4, [r9, #4]!
   12bc8:	stm	sp, {r0, r8}
   12bcc:	add	r0, sp, #8
   12bd0:	stm	r0, {r1, r2, r3}
   12bd4:	ldr	r2, [sp, #32]
   12bd8:	ldr	r3, [sp, #36]	; 0x24
   12bdc:	mov	r1, r6
   12be0:	mov	r0, r4
   12be4:	bl	118d0 <putchar_unlocked@plt+0xa64>
   12be8:	cmp	r6, r0
   12bec:	bhi	12c50 <putchar_unlocked@plt+0x1de4>
   12bf0:	add	r6, r0, #1
   12bf4:	movw	r0, #20848	; 0x5170
   12bf8:	movt	r0, #2
   12bfc:	str	r6, [sl, r5, lsl #3]
   12c00:	cmp	r4, r0
   12c04:	beq	12c10 <putchar_unlocked@plt+0x1da4>
   12c08:	mov	r0, r4
   12c0c:	bl	13d50 <putchar_unlocked@plt+0x2ee4>
   12c10:	mov	r0, r6
   12c14:	bl	136c4 <putchar_unlocked@plt+0x2858>
   12c18:	str	r0, [r9]
   12c1c:	mov	r4, r0
   12c20:	add	r3, sp, #8
   12c24:	ldr	r0, [r7]
   12c28:	ldr	r1, [r7, #40]	; 0x28
   12c2c:	ldr	r2, [r7, #44]	; 0x2c
   12c30:	stm	sp, {r0, r8}
   12c34:	ldr	r0, [sp, #20]
   12c38:	stm	r3, {r0, r1, r2}
   12c3c:	ldr	r2, [sp, #32]
   12c40:	ldr	r3, [sp, #36]	; 0x24
   12c44:	mov	r0, r4
   12c48:	mov	r1, r6
   12c4c:	bl	118d0 <putchar_unlocked@plt+0xa64>
   12c50:	ldr	r0, [sp, #28]
   12c54:	ldr	r1, [sp, #24]
   12c58:	str	r1, [r0]
   12c5c:	mov	r0, r4
   12c60:	sub	sp, fp, #28
   12c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c68:	bl	10e60 <abort@plt>
   12c6c:	movw	r3, #20800	; 0x5140
   12c70:	movt	r3, #2
   12c74:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   12c78:	movw	r3, #20800	; 0x5140
   12c7c:	mov	r1, r0
   12c80:	mov	r0, #0
   12c84:	mvn	r2, #0
   12c88:	movt	r3, #2
   12c8c:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   12c90:	movw	r3, #20800	; 0x5140
   12c94:	mov	r2, r1
   12c98:	mov	r1, r0
   12c9c:	mov	r0, #0
   12ca0:	movt	r3, #2
   12ca4:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   12ca8:	push	{fp, lr}
   12cac:	mov	fp, sp
   12cb0:	sub	sp, sp, #48	; 0x30
   12cb4:	vmov.i32	q8, #0	; 0x00000000
   12cb8:	mov	ip, #32
   12cbc:	mov	r3, sp
   12cc0:	mov	lr, r2
   12cc4:	cmp	r1, #10
   12cc8:	add	r2, r3, #16
   12ccc:	vst1.64	{d16-d17}, [r3], ip
   12cd0:	vst1.64	{d16-d17}, [r2]
   12cd4:	vst1.64	{d16-d17}, [r3]
   12cd8:	beq	12cf8 <putchar_unlocked@plt+0x1e8c>
   12cdc:	str	r1, [sp]
   12ce0:	mov	r3, sp
   12ce4:	mov	r1, lr
   12ce8:	mvn	r2, #0
   12cec:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12cf0:	mov	sp, fp
   12cf4:	pop	{fp, pc}
   12cf8:	bl	10e60 <abort@plt>
   12cfc:	push	{r4, sl, fp, lr}
   12d00:	add	fp, sp, #8
   12d04:	sub	sp, sp, #48	; 0x30
   12d08:	vmov.i32	q8, #0	; 0x00000000
   12d0c:	mov	ip, r3
   12d10:	mov	r3, sp
   12d14:	mov	lr, #32
   12d18:	cmp	r1, #10
   12d1c:	add	r4, r3, #16
   12d20:	vst1.64	{d16-d17}, [r3], lr
   12d24:	vst1.64	{d16-d17}, [r4]
   12d28:	vst1.64	{d16-d17}, [r3]
   12d2c:	beq	12d4c <putchar_unlocked@plt+0x1ee0>
   12d30:	str	r1, [sp]
   12d34:	mov	r1, r2
   12d38:	mov	r3, sp
   12d3c:	mov	r2, ip
   12d40:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12d44:	sub	sp, fp, #8
   12d48:	pop	{r4, sl, fp, pc}
   12d4c:	bl	10e60 <abort@plt>
   12d50:	mov	r2, r1
   12d54:	mov	r1, r0
   12d58:	mov	r0, #0
   12d5c:	b	12ca8 <putchar_unlocked@plt+0x1e3c>
   12d60:	mov	r3, r2
   12d64:	mov	r2, r1
   12d68:	mov	r1, r0
   12d6c:	mov	r0, #0
   12d70:	b	12cfc <putchar_unlocked@plt+0x1e90>
   12d74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d78:	add	fp, sp, #24
   12d7c:	sub	sp, sp, #48	; 0x30
   12d80:	movw	r8, #20800	; 0x5140
   12d84:	mov	lr, r0
   12d88:	mov	r3, sp
   12d8c:	mov	ip, r1
   12d90:	movt	r8, #2
   12d94:	mov	r1, r3
   12d98:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   12d9c:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   12da0:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   12da4:	stm	r1, {r0, r4, r5, r6, r7, r9}
   12da8:	ubfx	r0, r2, #5, #3
   12dac:	and	r2, r2, #31
   12db0:	mov	r4, #1
   12db4:	add	r0, r3, r0, lsl #2
   12db8:	ldr	r1, [r0, #8]
   12dbc:	bic	r4, r4, r1, lsr r2
   12dc0:	eor	r1, r1, r4, lsl r2
   12dc4:	mov	r2, ip
   12dc8:	str	r1, [r0, #8]
   12dcc:	mov	r0, #0
   12dd0:	mov	r1, lr
   12dd4:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12dd8:	sub	sp, fp, #24
   12ddc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12de0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12de4:	add	fp, sp, #24
   12de8:	sub	sp, sp, #48	; 0x30
   12dec:	movw	lr, #20800	; 0x5140
   12df0:	mov	ip, r0
   12df4:	mov	r3, sp
   12df8:	movt	lr, #2
   12dfc:	mov	r2, r3
   12e00:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   12e04:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   12e08:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   12e0c:	stm	r2, {r0, r4, r5, r6, r7, r8}
   12e10:	ubfx	r0, r1, #5, #3
   12e14:	and	r1, r1, #31
   12e18:	mov	r7, #1
   12e1c:	add	r0, r3, r0, lsl #2
   12e20:	ldr	r2, [r0, #8]
   12e24:	bic	r7, r7, r2, lsr r1
   12e28:	eor	r1, r2, r7, lsl r1
   12e2c:	mvn	r2, #0
   12e30:	str	r1, [r0, #8]
   12e34:	mov	r0, #0
   12e38:	mov	r1, ip
   12e3c:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12e40:	sub	sp, fp, #24
   12e44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e48:	push	{r4, r5, r6, r7, fp, lr}
   12e4c:	add	fp, sp, #16
   12e50:	sub	sp, sp, #48	; 0x30
   12e54:	movw	lr, #20800	; 0x5140
   12e58:	mov	ip, r0
   12e5c:	mov	r3, sp
   12e60:	movt	lr, #2
   12e64:	mov	r2, r3
   12e68:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   12e6c:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12e70:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   12e74:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12e78:	mov	r1, ip
   12e7c:	mvn	r2, #0
   12e80:	ldr	r0, [sp, #12]
   12e84:	orr	r0, r0, #67108864	; 0x4000000
   12e88:	str	r0, [sp, #12]
   12e8c:	mov	r0, #0
   12e90:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12e94:	sub	sp, fp, #16
   12e98:	pop	{r4, r5, r6, r7, fp, pc}
   12e9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ea0:	add	fp, sp, #24
   12ea4:	sub	sp, sp, #48	; 0x30
   12ea8:	movw	r8, #20800	; 0x5140
   12eac:	mov	ip, r1
   12eb0:	mov	lr, r0
   12eb4:	mov	r3, sp
   12eb8:	movt	r8, #2
   12ebc:	mov	r2, r3
   12ec0:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   12ec4:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12ec8:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   12ecc:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12ed0:	mov	r1, lr
   12ed4:	mov	r2, ip
   12ed8:	ldr	r0, [sp, #12]
   12edc:	orr	r0, r0, #67108864	; 0x4000000
   12ee0:	str	r0, [sp, #12]
   12ee4:	mov	r0, #0
   12ee8:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12eec:	sub	sp, fp, #24
   12ef0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ef4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ef8:	add	fp, sp, #24
   12efc:	sub	sp, sp, #96	; 0x60
   12f00:	vmov.i32	q8, #0	; 0x00000000
   12f04:	mov	lr, sp
   12f08:	mov	ip, r2
   12f0c:	cmp	r1, #10
   12f10:	add	r3, lr, #16
   12f14:	mov	r2, lr
   12f18:	vst1.64	{d16-d17}, [r3]
   12f1c:	mov	r3, #28
   12f20:	vst1.64	{d16-d17}, [r2], r3
   12f24:	vst1.32	{d16-d17}, [r2]
   12f28:	beq	12f68 <putchar_unlocked@plt+0x20fc>
   12f2c:	str	r1, [sp, #48]	; 0x30
   12f30:	add	r3, sp, #48	; 0x30
   12f34:	ldm	lr!, {r2, r4, r5, r6, r7}
   12f38:	add	r1, r3, #4
   12f3c:	stmia	r1!, {r2, r4, r5, r6, r7}
   12f40:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   12f44:	stm	r1, {r2, r4, r5, r6, r7, r8}
   12f48:	mvn	r2, #0
   12f4c:	ldr	r1, [sp, #60]	; 0x3c
   12f50:	orr	r1, r1, #67108864	; 0x4000000
   12f54:	str	r1, [sp, #60]	; 0x3c
   12f58:	mov	r1, ip
   12f5c:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12f60:	sub	sp, fp, #24
   12f64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f68:	bl	10e60 <abort@plt>
   12f6c:	push	{fp, lr}
   12f70:	mov	fp, sp
   12f74:	sub	sp, sp, #8
   12f78:	mvn	ip, #0
   12f7c:	str	ip, [sp]
   12f80:	bl	12f8c <putchar_unlocked@plt+0x2120>
   12f84:	mov	sp, fp
   12f88:	pop	{fp, pc}
   12f8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f90:	add	fp, sp, #24
   12f94:	sub	sp, sp, #48	; 0x30
   12f98:	movw	ip, #20800	; 0x5140
   12f9c:	mov	lr, r3
   12fa0:	mov	r3, sp
   12fa4:	cmp	r1, #0
   12fa8:	movt	ip, #2
   12fac:	cmpne	r2, #0
   12fb0:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   12fb4:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   12fb8:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   12fbc:	stm	r3, {r4, r5, r6, r7, r8, r9}
   12fc0:	mov	r3, #10
   12fc4:	str	r3, [sp]
   12fc8:	bne	12fd0 <putchar_unlocked@plt+0x2164>
   12fcc:	bl	10e60 <abort@plt>
   12fd0:	ldr	ip, [fp, #8]
   12fd4:	str	r2, [sp, #44]	; 0x2c
   12fd8:	str	r1, [sp, #40]	; 0x28
   12fdc:	mov	r3, sp
   12fe0:	mov	r1, lr
   12fe4:	mov	r2, ip
   12fe8:	bl	12ad4 <putchar_unlocked@plt+0x1c68>
   12fec:	sub	sp, fp, #24
   12ff0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ff4:	push	{fp, lr}
   12ff8:	mov	fp, sp
   12ffc:	sub	sp, sp, #8
   13000:	mov	r3, r2
   13004:	mov	r2, r1
   13008:	mov	r1, r0
   1300c:	mvn	r0, #0
   13010:	str	r0, [sp]
   13014:	mov	r0, #0
   13018:	bl	12f8c <putchar_unlocked@plt+0x2120>
   1301c:	mov	sp, fp
   13020:	pop	{fp, pc}
   13024:	push	{fp, lr}
   13028:	mov	fp, sp
   1302c:	sub	sp, sp, #8
   13030:	mov	ip, r2
   13034:	mov	r2, r1
   13038:	mov	r1, r0
   1303c:	str	r3, [sp]
   13040:	mov	r0, #0
   13044:	mov	r3, ip
   13048:	bl	12f8c <putchar_unlocked@plt+0x2120>
   1304c:	mov	sp, fp
   13050:	pop	{fp, pc}
   13054:	movw	r3, #20712	; 0x50e8
   13058:	movt	r3, #2
   1305c:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   13060:	movw	r3, #20712	; 0x50e8
   13064:	mov	r2, r1
   13068:	mov	r1, r0
   1306c:	mov	r0, #0
   13070:	movt	r3, #2
   13074:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   13078:	movw	r3, #20712	; 0x50e8
   1307c:	mvn	r2, #0
   13080:	movt	r3, #2
   13084:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   13088:	movw	r3, #20712	; 0x50e8
   1308c:	mov	r1, r0
   13090:	mov	r0, #0
   13094:	mvn	r2, #0
   13098:	movt	r3, #2
   1309c:	b	12ad4 <putchar_unlocked@plt+0x1c68>
   130a0:	push	{r4, r5, fp, lr}
   130a4:	add	fp, sp, #8
   130a8:	mov	r5, r0
   130ac:	mov	r4, r1
   130b0:	mov	r0, #0
   130b4:	mov	r2, #5
   130b8:	mov	r1, r5
   130bc:	bl	10cd4 <dcgettext@plt>
   130c0:	cmp	r0, r5
   130c4:	popne	{r4, r5, fp, pc}
   130c8:	bl	13e1c <putchar_unlocked@plt+0x2fb0>
   130cc:	ldrb	r1, [r0]
   130d0:	and	r1, r1, #223	; 0xdf
   130d4:	cmp	r1, #71	; 0x47
   130d8:	beq	13140 <putchar_unlocked@plt+0x22d4>
   130dc:	cmp	r1, #85	; 0x55
   130e0:	bne	13198 <putchar_unlocked@plt+0x232c>
   130e4:	ldrb	r1, [r0, #1]
   130e8:	and	r1, r1, #223	; 0xdf
   130ec:	cmp	r1, #84	; 0x54
   130f0:	bne	13198 <putchar_unlocked@plt+0x232c>
   130f4:	ldrb	r1, [r0, #2]
   130f8:	and	r1, r1, #223	; 0xdf
   130fc:	cmp	r1, #70	; 0x46
   13100:	bne	13198 <putchar_unlocked@plt+0x232c>
   13104:	ldrb	r1, [r0, #3]
   13108:	cmp	r1, #45	; 0x2d
   1310c:	bne	13198 <putchar_unlocked@plt+0x232c>
   13110:	ldrb	r1, [r0, #4]
   13114:	cmp	r1, #56	; 0x38
   13118:	bne	13198 <putchar_unlocked@plt+0x232c>
   1311c:	ldrb	r0, [r0, #5]
   13120:	cmp	r0, #0
   13124:	bne	13198 <putchar_unlocked@plt+0x232c>
   13128:	ldrb	r1, [r5]
   1312c:	movw	r2, #18458	; 0x481a
   13130:	movw	r0, #18462	; 0x481e
   13134:	movt	r2, #1
   13138:	movt	r0, #1
   1313c:	b	131c8 <putchar_unlocked@plt+0x235c>
   13140:	ldrb	r1, [r0, #1]
   13144:	and	r1, r1, #223	; 0xdf
   13148:	cmp	r1, #66	; 0x42
   1314c:	bne	13198 <putchar_unlocked@plt+0x232c>
   13150:	ldrb	r1, [r0, #2]
   13154:	cmp	r1, #49	; 0x31
   13158:	bne	13198 <putchar_unlocked@plt+0x232c>
   1315c:	ldrb	r1, [r0, #3]
   13160:	cmp	r1, #56	; 0x38
   13164:	bne	13198 <putchar_unlocked@plt+0x232c>
   13168:	ldrb	r1, [r0, #4]
   1316c:	cmp	r1, #48	; 0x30
   13170:	bne	13198 <putchar_unlocked@plt+0x232c>
   13174:	ldrb	r1, [r0, #5]
   13178:	cmp	r1, #51	; 0x33
   1317c:	bne	13198 <putchar_unlocked@plt+0x232c>
   13180:	ldrb	r1, [r0, #6]
   13184:	cmp	r1, #48	; 0x30
   13188:	bne	13198 <putchar_unlocked@plt+0x232c>
   1318c:	ldrb	r0, [r0, #7]
   13190:	cmp	r0, #0
   13194:	beq	131b4 <putchar_unlocked@plt+0x2348>
   13198:	movw	r1, #18452	; 0x4814
   1319c:	movw	r0, #18456	; 0x4818
   131a0:	cmp	r4, #9
   131a4:	movt	r1, #1
   131a8:	movt	r0, #1
   131ac:	moveq	r0, r1
   131b0:	pop	{r4, r5, fp, pc}
   131b4:	ldrb	r1, [r5]
   131b8:	movw	r2, #18466	; 0x4822
   131bc:	movw	r0, #18470	; 0x4826
   131c0:	movt	r2, #1
   131c4:	movt	r0, #1
   131c8:	cmp	r1, #96	; 0x60
   131cc:	moveq	r0, r2
   131d0:	pop	{r4, r5, fp, pc}
   131d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131d8:	add	fp, sp, #24
   131dc:	sub	sp, sp, #32
   131e0:	ldr	r6, [fp, #12]
   131e4:	ldr	r7, [fp, #8]
   131e8:	mov	r4, r2
   131ec:	mov	r8, r0
   131f0:	cmp	r1, #0
   131f4:	beq	1321c <putchar_unlocked@plt+0x23b0>
   131f8:	movw	r2, #18560	; 0x4880
   131fc:	mov	r5, r1
   13200:	str	r3, [sp, #4]
   13204:	str	r4, [sp]
   13208:	mov	r0, r8
   1320c:	mov	r1, #1
   13210:	movt	r2, #1
   13214:	mov	r3, r5
   13218:	b	13234 <putchar_unlocked@plt+0x23c8>
   1321c:	movw	r2, #18572	; 0x488c
   13220:	str	r3, [sp]
   13224:	mov	r0, r8
   13228:	mov	r1, #1
   1322c:	mov	r3, r4
   13230:	movt	r2, #1
   13234:	bl	10df4 <__fprintf_chk@plt>
   13238:	movw	r1, #18579	; 0x4893
   1323c:	mov	r0, #0
   13240:	mov	r2, #5
   13244:	movt	r1, #1
   13248:	bl	10cd4 <dcgettext@plt>
   1324c:	movw	r2, #19297	; 0x4b61
   13250:	mov	r3, r0
   13254:	movw	r0, #2022	; 0x7e6
   13258:	mov	r1, #1
   1325c:	movt	r2, #1
   13260:	str	r0, [sp]
   13264:	mov	r0, r8
   13268:	bl	10df4 <__fprintf_chk@plt>
   1326c:	movw	r4, #17263	; 0x436f
   13270:	mov	r1, r8
   13274:	movt	r4, #1
   13278:	mov	r0, r4
   1327c:	bl	10c74 <fputs_unlocked@plt>
   13280:	movw	r1, #18583	; 0x4897
   13284:	mov	r0, #0
   13288:	mov	r2, #5
   1328c:	movt	r1, #1
   13290:	bl	10cd4 <dcgettext@plt>
   13294:	movw	r3, #18754	; 0x4942
   13298:	mov	r2, r0
   1329c:	mov	r0, r8
   132a0:	mov	r1, #1
   132a4:	movt	r3, #1
   132a8:	bl	10df4 <__fprintf_chk@plt>
   132ac:	mov	r0, r4
   132b0:	mov	r1, r8
   132b4:	bl	10c74 <fputs_unlocked@plt>
   132b8:	cmp	r6, #9
   132bc:	bhi	13320 <putchar_unlocked@plt+0x24b4>
   132c0:	add	r0, pc, #0
   132c4:	ldr	pc, [r0, r6, lsl #2]
   132c8:	strdeq	r3, [r1], -r8
   132cc:	strdeq	r3, [r1], -r0
   132d0:	andeq	r3, r1, ip, lsr #6
   132d4:	andeq	r3, r1, r4, asr r3
   132d8:	andeq	r3, r1, ip, ror r3
   132dc:	andeq	r3, r1, r4, lsr #7
   132e0:	andeq	r3, r1, ip, asr #7
   132e4:	andeq	r3, r1, r4, lsl #8
   132e8:	andeq	r3, r1, r4, lsr #9
   132ec:	andeq	r3, r1, ip, asr #8
   132f0:	movw	r1, #18788	; 0x4964
   132f4:	mov	r0, #0
   132f8:	mov	r2, #5
   132fc:	movt	r1, #1
   13300:	bl	10cd4 <dcgettext@plt>
   13304:	ldr	r3, [r7]
   13308:	mov	r2, r0
   1330c:	mov	r0, r8
   13310:	mov	r1, #1
   13314:	sub	sp, fp, #24
   13318:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1331c:	b	10df4 <__fprintf_chk@plt>
   13320:	movw	r1, #19107	; 0x4aa3
   13324:	movt	r1, #1
   13328:	b	13454 <putchar_unlocked@plt+0x25e8>
   1332c:	movw	r1, #18804	; 0x4974
   13330:	mov	r0, #0
   13334:	mov	r2, #5
   13338:	movt	r1, #1
   1333c:	bl	10cd4 <dcgettext@plt>
   13340:	mov	r2, r0
   13344:	ldr	r3, [r7]
   13348:	ldr	r0, [r7, #4]
   1334c:	str	r0, [sp]
   13350:	b	13440 <putchar_unlocked@plt+0x25d4>
   13354:	movw	r1, #18827	; 0x498b
   13358:	mov	r0, #0
   1335c:	mov	r2, #5
   13360:	movt	r1, #1
   13364:	bl	10cd4 <dcgettext@plt>
   13368:	mov	r2, r0
   1336c:	ldr	r3, [r7]
   13370:	ldmib	r7, {r0, r1}
   13374:	stm	sp, {r0, r1}
   13378:	b	13440 <putchar_unlocked@plt+0x25d4>
   1337c:	movw	r1, #18855	; 0x49a7
   13380:	mov	r0, #0
   13384:	mov	r2, #5
   13388:	movt	r1, #1
   1338c:	bl	10cd4 <dcgettext@plt>
   13390:	ldr	r3, [r7]
   13394:	mov	r2, r0
   13398:	ldmib	r7, {r0, r1, r7}
   1339c:	stm	sp, {r0, r1, r7}
   133a0:	b	13440 <putchar_unlocked@plt+0x25d4>
   133a4:	movw	r1, #18887	; 0x49c7
   133a8:	mov	r0, #0
   133ac:	mov	r2, #5
   133b0:	movt	r1, #1
   133b4:	bl	10cd4 <dcgettext@plt>
   133b8:	ldr	r3, [r7]
   133bc:	mov	r2, r0
   133c0:	ldmib	r7, {r0, r1, r6, r7}
   133c4:	stm	sp, {r0, r1, r6, r7}
   133c8:	b	13440 <putchar_unlocked@plt+0x25d4>
   133cc:	movw	r1, #18923	; 0x49eb
   133d0:	mov	r0, #0
   133d4:	mov	r2, #5
   133d8:	movt	r1, #1
   133dc:	bl	10cd4 <dcgettext@plt>
   133e0:	mov	r2, r0
   133e4:	ldr	r3, [r7]
   133e8:	ldmib	r7, {r0, r1, r6}
   133ec:	ldr	r5, [r7, #16]
   133f0:	ldr	r7, [r7, #20]
   133f4:	stm	sp, {r0, r1, r6}
   133f8:	str	r5, [sp, #12]
   133fc:	str	r7, [sp, #16]
   13400:	b	13440 <putchar_unlocked@plt+0x25d4>
   13404:	movw	r1, #18963	; 0x4a13
   13408:	mov	r0, #0
   1340c:	mov	r2, #5
   13410:	movt	r1, #1
   13414:	bl	10cd4 <dcgettext@plt>
   13418:	mov	r2, r0
   1341c:	ldr	r3, [r7]
   13420:	ldmib	r7, {r0, r1, r6}
   13424:	ldr	r5, [r7, #16]
   13428:	ldr	r4, [r7, #20]
   1342c:	ldr	r7, [r7, #24]
   13430:	stm	sp, {r0, r1, r6}
   13434:	str	r5, [sp, #12]
   13438:	str	r4, [sp, #16]
   1343c:	str	r7, [sp, #20]
   13440:	mov	r0, r8
   13444:	mov	r1, #1
   13448:	b	134f4 <putchar_unlocked@plt+0x2688>
   1344c:	movw	r1, #19055	; 0x4a6f
   13450:	movt	r1, #1
   13454:	mov	r0, #0
   13458:	mov	r2, #5
   1345c:	bl	10cd4 <dcgettext@plt>
   13460:	mov	ip, r0
   13464:	ldr	r3, [r7]
   13468:	ldr	r0, [r7, #4]
   1346c:	ldr	r1, [r7, #8]
   13470:	ldr	r6, [r7, #12]
   13474:	ldr	r5, [r7, #16]
   13478:	ldr	r4, [r7, #20]
   1347c:	ldr	r2, [r7, #24]
   13480:	ldr	lr, [r7, #28]
   13484:	ldr	r7, [r7, #32]
   13488:	stm	sp, {r0, r1, r6}
   1348c:	str	r5, [sp, #12]
   13490:	str	r4, [sp, #16]
   13494:	str	r2, [sp, #20]
   13498:	str	lr, [sp, #24]
   1349c:	str	r7, [sp, #28]
   134a0:	b	134e8 <putchar_unlocked@plt+0x267c>
   134a4:	movw	r1, #19007	; 0x4a3f
   134a8:	mov	r0, #0
   134ac:	mov	r2, #5
   134b0:	movt	r1, #1
   134b4:	bl	10cd4 <dcgettext@plt>
   134b8:	mov	ip, r0
   134bc:	ldr	r3, [r7]
   134c0:	ldmib	r7, {r0, r1, r6}
   134c4:	ldr	r5, [r7, #16]
   134c8:	ldr	r4, [r7, #20]
   134cc:	ldr	r2, [r7, #24]
   134d0:	ldr	r7, [r7, #28]
   134d4:	stm	sp, {r0, r1, r6}
   134d8:	str	r5, [sp, #12]
   134dc:	str	r4, [sp, #16]
   134e0:	str	r2, [sp, #20]
   134e4:	str	r7, [sp, #24]
   134e8:	mov	r0, r8
   134ec:	mov	r1, #1
   134f0:	mov	r2, ip
   134f4:	bl	10df4 <__fprintf_chk@plt>
   134f8:	sub	sp, fp, #24
   134fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13500:	push	{r4, sl, fp, lr}
   13504:	add	fp, sp, #8
   13508:	sub	sp, sp, #8
   1350c:	ldr	ip, [fp, #8]
   13510:	mov	lr, #0
   13514:	ldr	r4, [ip, lr, lsl #2]
   13518:	add	lr, lr, #1
   1351c:	cmp	r4, #0
   13520:	bne	13514 <putchar_unlocked@plt+0x26a8>
   13524:	sub	r4, lr, #1
   13528:	str	ip, [sp]
   1352c:	str	r4, [sp, #4]
   13530:	bl	131d4 <putchar_unlocked@plt+0x2368>
   13534:	sub	sp, fp, #8
   13538:	pop	{r4, sl, fp, pc}
   1353c:	push	{r4, r5, fp, lr}
   13540:	add	fp, sp, #8
   13544:	sub	sp, sp, #48	; 0x30
   13548:	ldr	r4, [fp, #8]
   1354c:	mov	ip, #0
   13550:	add	lr, sp, #8
   13554:	ldr	r5, [r4]
   13558:	cmp	r5, #0
   1355c:	str	r5, [lr, ip, lsl #2]
   13560:	beq	13578 <putchar_unlocked@plt+0x270c>
   13564:	add	ip, ip, #1
   13568:	add	r4, r4, #4
   1356c:	cmp	ip, #10
   13570:	bne	13554 <putchar_unlocked@plt+0x26e8>
   13574:	mov	ip, #10
   13578:	str	lr, [sp]
   1357c:	str	ip, [sp, #4]
   13580:	bl	131d4 <putchar_unlocked@plt+0x2368>
   13584:	sub	sp, fp, #8
   13588:	pop	{r4, r5, fp, pc}
   1358c:	push	{fp, lr}
   13590:	mov	fp, sp
   13594:	sub	sp, sp, #8
   13598:	add	ip, fp, #8
   1359c:	str	ip, [sp, #4]
   135a0:	str	ip, [sp]
   135a4:	bl	1353c <putchar_unlocked@plt+0x26d0>
   135a8:	mov	sp, fp
   135ac:	pop	{fp, pc}
   135b0:	push	{fp, lr}
   135b4:	mov	fp, sp
   135b8:	movw	r0, #20780	; 0x512c
   135bc:	movt	r0, #2
   135c0:	ldr	r1, [r0]
   135c4:	movw	r0, #17263	; 0x436f
   135c8:	movt	r0, #1
   135cc:	bl	10c74 <fputs_unlocked@plt>
   135d0:	movw	r1, #19167	; 0x4adf
   135d4:	mov	r0, #0
   135d8:	mov	r2, #5
   135dc:	movt	r1, #1
   135e0:	bl	10cd4 <dcgettext@plt>
   135e4:	movw	r2, #19187	; 0x4af3
   135e8:	mov	r1, r0
   135ec:	mov	r0, #1
   135f0:	movt	r2, #1
   135f4:	bl	10ddc <__printf_chk@plt>
   135f8:	movw	r1, #19209	; 0x4b09
   135fc:	mov	r0, #0
   13600:	mov	r2, #5
   13604:	movt	r1, #1
   13608:	bl	10cd4 <dcgettext@plt>
   1360c:	movw	r2, #17550	; 0x448e
   13610:	movw	r3, #17564	; 0x449c
   13614:	mov	r1, r0
   13618:	mov	r0, #1
   1361c:	movt	r2, #1
   13620:	movt	r3, #1
   13624:	bl	10ddc <__printf_chk@plt>
   13628:	movw	r1, #19229	; 0x4b1d
   1362c:	mov	r0, #0
   13630:	mov	r2, #5
   13634:	movt	r1, #1
   13638:	bl	10cd4 <dcgettext@plt>
   1363c:	movw	r2, #19268	; 0x4b44
   13640:	mov	r1, r0
   13644:	mov	r0, #1
   13648:	movt	r2, #1
   1364c:	pop	{fp, lr}
   13650:	b	10ddc <__printf_chk@plt>
   13654:	b	13658 <putchar_unlocked@plt+0x27ec>
   13658:	push	{r4, r5, r6, sl, fp, lr}
   1365c:	add	fp, sp, #16
   13660:	mov	r4, r2
   13664:	mov	r5, r1
   13668:	mov	r6, r0
   1366c:	bl	13eb8 <putchar_unlocked@plt+0x304c>
   13670:	cmp	r0, #0
   13674:	popne	{r4, r5, r6, sl, fp, pc}
   13678:	cmp	r6, #0
   1367c:	beq	13690 <putchar_unlocked@plt+0x2824>
   13680:	cmp	r5, #0
   13684:	cmpne	r4, #0
   13688:	bne	13690 <putchar_unlocked@plt+0x2824>
   1368c:	pop	{r4, r5, r6, sl, fp, pc}
   13690:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13694:	push	{fp, lr}
   13698:	mov	fp, sp
   1369c:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   136a0:	cmp	r0, #0
   136a4:	popne	{fp, pc}
   136a8:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   136b8:	cmp	r0, #0
   136bc:	popne	{fp, pc}
   136c0:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   136c4:	push	{fp, lr}
   136c8:	mov	fp, sp
   136cc:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   136d0:	cmp	r0, #0
   136d4:	popne	{fp, pc}
   136d8:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   136dc:	push	{r4, r5, fp, lr}
   136e0:	add	fp, sp, #8
   136e4:	mov	r4, r1
   136e8:	mov	r5, r0
   136ec:	bl	13b88 <putchar_unlocked@plt+0x2d1c>
   136f0:	cmp	r0, #0
   136f4:	popne	{r4, r5, fp, pc}
   136f8:	cmp	r5, #0
   136fc:	beq	1370c <putchar_unlocked@plt+0x28a0>
   13700:	cmp	r4, #0
   13704:	bne	1370c <putchar_unlocked@plt+0x28a0>
   13708:	pop	{r4, r5, fp, pc}
   1370c:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13710:	push	{fp, lr}
   13714:	mov	fp, sp
   13718:	cmp	r1, #0
   1371c:	orreq	r1, r1, #1
   13720:	bl	13b88 <putchar_unlocked@plt+0x2d1c>
   13724:	cmp	r0, #0
   13728:	popne	{fp, pc}
   1372c:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	clz	r3, r2
   1373c:	lsr	ip, r3, #5
   13740:	clz	r3, r1
   13744:	lsr	r3, r3, #5
   13748:	orrs	r3, r3, ip
   1374c:	movwne	r1, #1
   13750:	movwne	r2, #1
   13754:	bl	13eb8 <putchar_unlocked@plt+0x304c>
   13758:	cmp	r0, #0
   1375c:	popne	{fp, pc}
   13760:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	mov	r2, r1
   13770:	mov	r1, r0
   13774:	mov	r0, #0
   13778:	bl	13eb8 <putchar_unlocked@plt+0x304c>
   1377c:	cmp	r0, #0
   13780:	popne	{fp, pc}
   13784:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13788:	mov	r2, r1
   1378c:	mov	r1, r0
   13790:	mov	r0, #0
   13794:	b	13730 <putchar_unlocked@plt+0x28c4>
   13798:	mov	r2, #1
   1379c:	b	137a0 <putchar_unlocked@plt+0x2934>
   137a0:	push	{r4, r5, fp, lr}
   137a4:	add	fp, sp, #8
   137a8:	ldr	r5, [r1]
   137ac:	mov	r4, r1
   137b0:	cmp	r0, #0
   137b4:	beq	137cc <putchar_unlocked@plt+0x2960>
   137b8:	mov	r1, #1
   137bc:	add	r1, r1, r5, lsr #1
   137c0:	adds	r5, r5, r1
   137c4:	bcc	137e4 <putchar_unlocked@plt+0x2978>
   137c8:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   137cc:	cmp	r5, #0
   137d0:	bne	137e4 <putchar_unlocked@plt+0x2978>
   137d4:	mov	r1, #64	; 0x40
   137d8:	cmp	r2, #64	; 0x40
   137dc:	udiv	r5, r1, r2
   137e0:	addhi	r5, r5, #1
   137e4:	mov	r1, r5
   137e8:	bl	13658 <putchar_unlocked@plt+0x27ec>
   137ec:	str	r5, [r4]
   137f0:	pop	{r4, r5, fp, pc}
   137f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137f8:	add	fp, sp, #24
   137fc:	ldr	r6, [r1]
   13800:	mov	r8, r1
   13804:	ldr	r4, [fp, #8]
   13808:	add	r1, r6, r6, asr #1
   1380c:	cmp	r1, r6
   13810:	mvnvs	r1, #-2147483648	; 0x80000000
   13814:	cmp	r1, r3
   13818:	mov	r5, r1
   1381c:	movgt	r5, r3
   13820:	cmn	r3, #1
   13824:	movle	r5, r1
   13828:	cmn	r4, #1
   1382c:	ble	1384c <putchar_unlocked@plt+0x29e0>
   13830:	cmp	r4, #0
   13834:	beq	138a0 <putchar_unlocked@plt+0x2a34>
   13838:	cmn	r5, #1
   1383c:	ble	13874 <putchar_unlocked@plt+0x2a08>
   13840:	mvn	r7, #-2147483648	; 0x80000000
   13844:	udiv	r1, r7, r4
   13848:	b	13868 <putchar_unlocked@plt+0x29fc>
   1384c:	cmn	r5, #1
   13850:	ble	13890 <putchar_unlocked@plt+0x2a24>
   13854:	cmn	r4, #1
   13858:	beq	138a0 <putchar_unlocked@plt+0x2a34>
   1385c:	mov	r1, #-2147483648	; 0x80000000
   13860:	mvn	r7, #-2147483648	; 0x80000000
   13864:	sdiv	r1, r1, r4
   13868:	cmp	r1, r5
   1386c:	bge	138a0 <putchar_unlocked@plt+0x2a34>
   13870:	b	138b0 <putchar_unlocked@plt+0x2a44>
   13874:	beq	138a0 <putchar_unlocked@plt+0x2a34>
   13878:	mov	r1, #-2147483648	; 0x80000000
   1387c:	mvn	r7, #-2147483648	; 0x80000000
   13880:	sdiv	r1, r1, r5
   13884:	cmp	r1, r4
   13888:	bge	138a0 <putchar_unlocked@plt+0x2a34>
   1388c:	b	138b0 <putchar_unlocked@plt+0x2a44>
   13890:	mvn	r7, #-2147483648	; 0x80000000
   13894:	sdiv	r1, r7, r4
   13898:	cmp	r5, r1
   1389c:	blt	138b0 <putchar_unlocked@plt+0x2a44>
   138a0:	mul	r1, r5, r4
   138a4:	mov	r7, #64	; 0x40
   138a8:	cmp	r1, #63	; 0x3f
   138ac:	bgt	138b8 <putchar_unlocked@plt+0x2a4c>
   138b0:	sdiv	r5, r7, r4
   138b4:	mul	r1, r5, r4
   138b8:	cmp	r0, #0
   138bc:	moveq	r7, #0
   138c0:	streq	r7, [r8]
   138c4:	sub	r7, r5, r6
   138c8:	cmp	r7, r2
   138cc:	bge	13970 <putchar_unlocked@plt+0x2b04>
   138d0:	add	r5, r6, r2
   138d4:	mov	r2, #0
   138d8:	mov	r1, #0
   138dc:	cmp	r5, r3
   138e0:	movwgt	r2, #1
   138e4:	cmn	r3, #1
   138e8:	movwgt	r1, #1
   138ec:	cmp	r5, r6
   138f0:	bvs	13958 <putchar_unlocked@plt+0x2aec>
   138f4:	ands	r1, r1, r2
   138f8:	bne	13958 <putchar_unlocked@plt+0x2aec>
   138fc:	cmn	r4, #1
   13900:	ble	13920 <putchar_unlocked@plt+0x2ab4>
   13904:	cmp	r4, #0
   13908:	beq	1396c <putchar_unlocked@plt+0x2b00>
   1390c:	cmn	r5, #1
   13910:	ble	13944 <putchar_unlocked@plt+0x2ad8>
   13914:	mvn	r1, #-2147483648	; 0x80000000
   13918:	udiv	r1, r1, r4
   1391c:	b	13938 <putchar_unlocked@plt+0x2acc>
   13920:	cmn	r5, #1
   13924:	ble	1395c <putchar_unlocked@plt+0x2af0>
   13928:	cmn	r4, #1
   1392c:	beq	1396c <putchar_unlocked@plt+0x2b00>
   13930:	mov	r1, #-2147483648	; 0x80000000
   13934:	sdiv	r1, r1, r4
   13938:	cmp	r1, r5
   1393c:	bge	1396c <putchar_unlocked@plt+0x2b00>
   13940:	b	13958 <putchar_unlocked@plt+0x2aec>
   13944:	beq	1396c <putchar_unlocked@plt+0x2b00>
   13948:	mov	r1, #-2147483648	; 0x80000000
   1394c:	sdiv	r1, r1, r5
   13950:	cmp	r1, r4
   13954:	bge	1396c <putchar_unlocked@plt+0x2b00>
   13958:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   1395c:	mvn	r1, #-2147483648	; 0x80000000
   13960:	sdiv	r1, r1, r4
   13964:	cmp	r5, r1
   13968:	blt	13958 <putchar_unlocked@plt+0x2aec>
   1396c:	mul	r1, r5, r4
   13970:	bl	136dc <putchar_unlocked@plt+0x2870>
   13974:	str	r5, [r8]
   13978:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1397c:	push	{fp, lr}
   13980:	mov	fp, sp
   13984:	mov	r1, #1
   13988:	bl	13b04 <putchar_unlocked@plt+0x2c98>
   1398c:	cmp	r0, #0
   13990:	popne	{fp, pc}
   13994:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13998:	push	{fp, lr}
   1399c:	mov	fp, sp
   139a0:	bl	13b04 <putchar_unlocked@plt+0x2c98>
   139a4:	cmp	r0, #0
   139a8:	popne	{fp, pc}
   139ac:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   139b0:	push	{fp, lr}
   139b4:	mov	fp, sp
   139b8:	mov	r1, #1
   139bc:	bl	13b04 <putchar_unlocked@plt+0x2c98>
   139c0:	cmp	r0, #0
   139c4:	popne	{fp, pc}
   139c8:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	bl	13b04 <putchar_unlocked@plt+0x2c98>
   139d8:	cmp	r0, #0
   139dc:	popne	{fp, pc}
   139e0:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   139e4:	push	{r4, r5, fp, lr}
   139e8:	add	fp, sp, #8
   139ec:	mov	r5, r0
   139f0:	mov	r0, r1
   139f4:	mov	r4, r1
   139f8:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   139fc:	cmp	r0, #0
   13a00:	beq	13a14 <putchar_unlocked@plt+0x2ba8>
   13a04:	mov	r1, r5
   13a08:	mov	r2, r4
   13a0c:	pop	{r4, r5, fp, lr}
   13a10:	b	10cb0 <memcpy@plt>
   13a14:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13a18:	push	{r4, r5, fp, lr}
   13a1c:	add	fp, sp, #8
   13a20:	mov	r5, r0
   13a24:	mov	r0, r1
   13a28:	mov	r4, r1
   13a2c:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   13a30:	cmp	r0, #0
   13a34:	beq	13a48 <putchar_unlocked@plt+0x2bdc>
   13a38:	mov	r1, r5
   13a3c:	mov	r2, r4
   13a40:	pop	{r4, r5, fp, lr}
   13a44:	b	10cb0 <memcpy@plt>
   13a48:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13a4c:	push	{r4, r5, fp, lr}
   13a50:	add	fp, sp, #8
   13a54:	mov	r5, r0
   13a58:	add	r0, r1, #1
   13a5c:	mov	r4, r1
   13a60:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   13a64:	cmp	r0, #0
   13a68:	beq	13a84 <putchar_unlocked@plt+0x2c18>
   13a6c:	mov	r1, #0
   13a70:	mov	r2, r4
   13a74:	strb	r1, [r0, r4]
   13a78:	mov	r1, r5
   13a7c:	pop	{r4, r5, fp, lr}
   13a80:	b	10cb0 <memcpy@plt>
   13a84:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13a88:	push	{r4, r5, fp, lr}
   13a8c:	add	fp, sp, #8
   13a90:	mov	r4, r0
   13a94:	bl	10dac <strlen@plt>
   13a98:	add	r5, r0, #1
   13a9c:	mov	r0, r5
   13aa0:	bl	13b58 <putchar_unlocked@plt+0x2cec>
   13aa4:	cmp	r0, #0
   13aa8:	beq	13abc <putchar_unlocked@plt+0x2c50>
   13aac:	mov	r1, r4
   13ab0:	mov	r2, r5
   13ab4:	pop	{r4, r5, fp, lr}
   13ab8:	b	10cb0 <memcpy@plt>
   13abc:	bl	13ac0 <putchar_unlocked@plt+0x2c54>
   13ac0:	push	{fp, lr}
   13ac4:	mov	fp, sp
   13ac8:	movw	r0, #20688	; 0x50d0
   13acc:	movw	r1, #19344	; 0x4b90
   13ad0:	mov	r2, #5
   13ad4:	movt	r0, #2
   13ad8:	movt	r1, #1
   13adc:	ldr	r4, [r0]
   13ae0:	mov	r0, #0
   13ae4:	bl	10cd4 <dcgettext@plt>
   13ae8:	movw	r2, #18303	; 0x477f
   13aec:	mov	r3, r0
   13af0:	mov	r0, r4
   13af4:	mov	r1, #0
   13af8:	movt	r2, #1
   13afc:	bl	10d40 <error@plt>
   13b00:	bl	10e60 <abort@plt>
   13b04:	clz	r2, r1
   13b08:	clz	r3, r0
   13b0c:	lsr	r2, r2, #5
   13b10:	lsr	r3, r3, #5
   13b14:	orrs	r2, r3, r2
   13b18:	movwne	r1, #1
   13b1c:	movwne	r0, #1
   13b20:	cmp	r1, #0
   13b24:	beq	13b54 <putchar_unlocked@plt+0x2ce8>
   13b28:	mvn	r2, #-2147483648	; 0x80000000
   13b2c:	udiv	r2, r2, r1
   13b30:	cmp	r2, r0
   13b34:	bcs	13b54 <putchar_unlocked@plt+0x2ce8>
   13b38:	push	{fp, lr}
   13b3c:	mov	fp, sp
   13b40:	bl	10db8 <__errno_location@plt>
   13b44:	mov	r1, #12
   13b48:	str	r1, [r0]
   13b4c:	mov	r0, #0
   13b50:	pop	{fp, pc}
   13b54:	b	10c68 <calloc@plt>
   13b58:	cmp	r0, #0
   13b5c:	movweq	r0, #1
   13b60:	cmn	r0, #1
   13b64:	ble	13b6c <putchar_unlocked@plt+0x2d00>
   13b68:	b	10d4c <malloc@plt>
   13b6c:	push	{fp, lr}
   13b70:	mov	fp, sp
   13b74:	bl	10db8 <__errno_location@plt>
   13b78:	mov	r1, #12
   13b7c:	str	r1, [r0]
   13b80:	mov	r0, #0
   13b84:	pop	{fp, pc}
   13b88:	push	{fp, lr}
   13b8c:	mov	fp, sp
   13b90:	cmp	r0, #0
   13b94:	beq	13bb0 <putchar_unlocked@plt+0x2d44>
   13b98:	cmp	r1, #0
   13b9c:	beq	13bbc <putchar_unlocked@plt+0x2d50>
   13ba0:	cmn	r1, #1
   13ba4:	ble	13bc4 <putchar_unlocked@plt+0x2d58>
   13ba8:	pop	{fp, lr}
   13bac:	b	10ce0 <realloc@plt>
   13bb0:	mov	r0, r1
   13bb4:	pop	{fp, lr}
   13bb8:	b	13b58 <putchar_unlocked@plt+0x2cec>
   13bbc:	bl	13d50 <putchar_unlocked@plt+0x2ee4>
   13bc0:	b	13bd0 <putchar_unlocked@plt+0x2d64>
   13bc4:	bl	10db8 <__errno_location@plt>
   13bc8:	mov	r1, #12
   13bcc:	str	r1, [r0]
   13bd0:	mov	r0, #0
   13bd4:	pop	{fp, pc}
   13bd8:	push	{r4, r5, r6, sl, fp, lr}
   13bdc:	add	fp, sp, #16
   13be0:	mov	r4, r0
   13be4:	bl	10d1c <__fpending@plt>
   13be8:	mov	r5, r0
   13bec:	mov	r0, r4
   13bf0:	bl	10d28 <ferror_unlocked@plt>
   13bf4:	mov	r6, r0
   13bf8:	mov	r0, r4
   13bfc:	bl	13c58 <putchar_unlocked@plt+0x2dec>
   13c00:	cmp	r6, #0
   13c04:	beq	13c24 <putchar_unlocked@plt+0x2db8>
   13c08:	mvn	r4, #0
   13c0c:	cmp	r0, #0
   13c10:	bne	13c50 <putchar_unlocked@plt+0x2de4>
   13c14:	bl	10db8 <__errno_location@plt>
   13c18:	mov	r1, #0
   13c1c:	str	r1, [r0]
   13c20:	b	13c50 <putchar_unlocked@plt+0x2de4>
   13c24:	cmp	r0, #0
   13c28:	mov	r4, r0
   13c2c:	mvnne	r4, #0
   13c30:	cmp	r5, #0
   13c34:	bne	13c50 <putchar_unlocked@plt+0x2de4>
   13c38:	cmp	r0, #0
   13c3c:	beq	13c50 <putchar_unlocked@plt+0x2de4>
   13c40:	bl	10db8 <__errno_location@plt>
   13c44:	ldr	r0, [r0]
   13c48:	subs	r4, r0, #9
   13c4c:	mvnne	r4, #0
   13c50:	mov	r0, r4
   13c54:	pop	{r4, r5, r6, sl, fp, pc}
   13c58:	push	{r4, r5, r6, sl, fp, lr}
   13c5c:	add	fp, sp, #16
   13c60:	sub	sp, sp, #8
   13c64:	mov	r4, r0
   13c68:	bl	10de8 <fileno@plt>
   13c6c:	cmn	r0, #1
   13c70:	ble	13ce4 <putchar_unlocked@plt+0x2e78>
   13c74:	mov	r0, r4
   13c78:	bl	10d64 <__freading@plt>
   13c7c:	cmp	r0, #0
   13c80:	beq	13cac <putchar_unlocked@plt+0x2e40>
   13c84:	mov	r0, r4
   13c88:	bl	10de8 <fileno@plt>
   13c8c:	mov	r1, #1
   13c90:	mov	r2, #0
   13c94:	mov	r3, #0
   13c98:	str	r1, [sp]
   13c9c:	bl	10d04 <lseek64@plt>
   13ca0:	and	r0, r0, r1
   13ca4:	cmn	r0, #1
   13ca8:	beq	13ce4 <putchar_unlocked@plt+0x2e78>
   13cac:	mov	r0, r4
   13cb0:	bl	13cf4 <putchar_unlocked@plt+0x2e88>
   13cb4:	cmp	r0, #0
   13cb8:	beq	13ce4 <putchar_unlocked@plt+0x2e78>
   13cbc:	bl	10db8 <__errno_location@plt>
   13cc0:	ldr	r6, [r0]
   13cc4:	mov	r5, r0
   13cc8:	mov	r0, r4
   13ccc:	bl	10e00 <fclose@plt>
   13cd0:	cmp	r6, #0
   13cd4:	strne	r6, [r5]
   13cd8:	mvnne	r0, #0
   13cdc:	sub	sp, fp, #16
   13ce0:	pop	{r4, r5, r6, sl, fp, pc}
   13ce4:	mov	r0, r4
   13ce8:	sub	sp, fp, #16
   13cec:	pop	{r4, r5, r6, sl, fp, lr}
   13cf0:	b	10e00 <fclose@plt>
   13cf4:	push	{r4, sl, fp, lr}
   13cf8:	add	fp, sp, #8
   13cfc:	sub	sp, sp, #8
   13d00:	mov	r4, r0
   13d04:	cmp	r0, #0
   13d08:	beq	13d40 <putchar_unlocked@plt+0x2ed4>
   13d0c:	mov	r0, r4
   13d10:	bl	10d64 <__freading@plt>
   13d14:	cmp	r0, #0
   13d18:	beq	13d40 <putchar_unlocked@plt+0x2ed4>
   13d1c:	ldrb	r0, [r4, #1]
   13d20:	tst	r0, #1
   13d24:	beq	13d40 <putchar_unlocked@plt+0x2ed4>
   13d28:	mov	r0, #1
   13d2c:	mov	r2, #0
   13d30:	mov	r3, #0
   13d34:	str	r0, [sp]
   13d38:	mov	r0, r4
   13d3c:	bl	13d78 <putchar_unlocked@plt+0x2f0c>
   13d40:	mov	r0, r4
   13d44:	sub	sp, fp, #8
   13d48:	pop	{r4, sl, fp, lr}
   13d4c:	b	10c8c <fflush@plt>
   13d50:	push	{r4, r5, r6, sl, fp, lr}
   13d54:	add	fp, sp, #16
   13d58:	mov	r4, r0
   13d5c:	bl	10db8 <__errno_location@plt>
   13d60:	ldr	r6, [r0]
   13d64:	mov	r5, r0
   13d68:	mov	r0, r4
   13d6c:	bl	10c98 <free@plt>
   13d70:	str	r6, [r5]
   13d74:	pop	{r4, r5, r6, sl, fp, pc}
   13d78:	push	{r4, r5, r6, r7, fp, lr}
   13d7c:	add	fp, sp, #16
   13d80:	sub	sp, sp, #8
   13d84:	mov	r4, r0
   13d88:	ldr	r0, [r0, #4]
   13d8c:	mov	r5, r3
   13d90:	mov	r6, r2
   13d94:	ldr	r1, [r4, #8]
   13d98:	cmp	r1, r0
   13d9c:	bne	13db8 <putchar_unlocked@plt+0x2f4c>
   13da0:	ldrd	r0, [r4, #16]
   13da4:	cmp	r1, r0
   13da8:	bne	13db8 <putchar_unlocked@plt+0x2f4c>
   13dac:	ldr	r0, [r4, #36]	; 0x24
   13db0:	cmp	r0, #0
   13db4:	beq	13dd0 <putchar_unlocked@plt+0x2f64>
   13db8:	mov	r0, r4
   13dbc:	mov	r2, r6
   13dc0:	mov	r3, r5
   13dc4:	sub	sp, fp, #16
   13dc8:	pop	{r4, r5, r6, r7, fp, lr}
   13dcc:	b	10e0c <fseeko64@plt>
   13dd0:	ldr	r7, [fp, #8]
   13dd4:	mov	r0, r4
   13dd8:	bl	10de8 <fileno@plt>
   13ddc:	mov	r2, r6
   13de0:	mov	r3, r5
   13de4:	str	r7, [sp]
   13de8:	bl	10d04 <lseek64@plt>
   13dec:	and	r2, r0, r1
   13df0:	cmn	r2, #1
   13df4:	beq	13e10 <putchar_unlocked@plt+0x2fa4>
   13df8:	strd	r0, [r4, #80]	; 0x50
   13dfc:	ldr	r0, [r4]
   13e00:	bic	r0, r0, #16
   13e04:	str	r0, [r4]
   13e08:	mov	r0, #0
   13e0c:	b	13e14 <putchar_unlocked@plt+0x2fa8>
   13e10:	mvn	r0, #0
   13e14:	sub	sp, fp, #16
   13e18:	pop	{r4, r5, r6, r7, fp, pc}
   13e1c:	push	{fp, lr}
   13e20:	mov	fp, sp
   13e24:	mov	r0, #14
   13e28:	bl	10e30 <nl_langinfo@plt>
   13e2c:	movw	r1, #17264	; 0x4370
   13e30:	cmp	r0, #0
   13e34:	movt	r1, #1
   13e38:	movne	r1, r0
   13e3c:	movw	r0, #19361	; 0x4ba1
   13e40:	ldrb	r2, [r1]
   13e44:	movt	r0, #1
   13e48:	cmp	r2, #0
   13e4c:	movne	r0, r1
   13e50:	pop	{fp, pc}
   13e54:	push	{r4, r5, r6, r7, fp, lr}
   13e58:	add	fp, sp, #16
   13e5c:	sub	sp, sp, #8
   13e60:	cmp	r0, #0
   13e64:	add	r5, sp, #4
   13e68:	mov	r7, r2
   13e6c:	mov	r4, r1
   13e70:	movne	r5, r0
   13e74:	mov	r0, r5
   13e78:	bl	10d34 <mbrtowc@plt>
   13e7c:	mov	r6, r0
   13e80:	cmp	r7, #0
   13e84:	beq	13eac <putchar_unlocked@plt+0x3040>
   13e88:	cmn	r6, #2
   13e8c:	bcc	13eac <putchar_unlocked@plt+0x3040>
   13e90:	mov	r0, #0
   13e94:	bl	13ef4 <putchar_unlocked@plt+0x3088>
   13e98:	cmp	r0, #0
   13e9c:	bne	13eac <putchar_unlocked@plt+0x3040>
   13ea0:	ldrb	r0, [r4]
   13ea4:	mov	r6, #1
   13ea8:	str	r0, [r5]
   13eac:	mov	r0, r6
   13eb0:	sub	sp, fp, #16
   13eb4:	pop	{r4, r5, r6, r7, fp, pc}
   13eb8:	cmp	r2, #0
   13ebc:	beq	13eec <putchar_unlocked@plt+0x3080>
   13ec0:	mvn	r3, #0
   13ec4:	udiv	r3, r3, r2
   13ec8:	cmp	r3, r1
   13ecc:	bcs	13eec <putchar_unlocked@plt+0x3080>
   13ed0:	push	{fp, lr}
   13ed4:	mov	fp, sp
   13ed8:	bl	10db8 <__errno_location@plt>
   13edc:	mov	r1, #12
   13ee0:	str	r1, [r0]
   13ee4:	mov	r0, #0
   13ee8:	pop	{fp, pc}
   13eec:	mul	r1, r2, r1
   13ef0:	b	13b88 <putchar_unlocked@plt+0x2d1c>
   13ef4:	push	{r4, sl, fp, lr}
   13ef8:	add	fp, sp, #8
   13efc:	sub	sp, sp, #264	; 0x108
   13f00:	add	r1, sp, #7
   13f04:	movw	r2, #257	; 0x101
   13f08:	bl	13f60 <putchar_unlocked@plt+0x30f4>
   13f0c:	mov	r4, #0
   13f10:	cmp	r0, #0
   13f14:	bne	13f54 <putchar_unlocked@plt+0x30e8>
   13f18:	movw	r1, #19367	; 0x4ba7
   13f1c:	add	r0, sp, #7
   13f20:	mov	r2, #2
   13f24:	movt	r1, #1
   13f28:	bl	10da0 <bcmp@plt>
   13f2c:	cmp	r0, #0
   13f30:	beq	13f54 <putchar_unlocked@plt+0x30e8>
   13f34:	movw	r1, #19369	; 0x4ba9
   13f38:	add	r0, sp, #7
   13f3c:	mov	r2, #6
   13f40:	movt	r1, #1
   13f44:	bl	10da0 <bcmp@plt>
   13f48:	cmp	r0, #0
   13f4c:	mov	r4, r0
   13f50:	movwne	r4, #1
   13f54:	mov	r0, r4
   13f58:	sub	sp, fp, #8
   13f5c:	pop	{r4, sl, fp, pc}
   13f60:	push	{r4, r5, r6, r7, fp, lr}
   13f64:	add	fp, sp, #16
   13f68:	mov	r4, r1
   13f6c:	mov	r1, #0
   13f70:	mov	r6, r2
   13f74:	bl	10e18 <setlocale@plt>
   13f78:	cmp	r0, #0
   13f7c:	beq	13fa8 <putchar_unlocked@plt+0x313c>
   13f80:	mov	r7, r0
   13f84:	bl	10dac <strlen@plt>
   13f88:	cmp	r0, r6
   13f8c:	bcs	13fbc <putchar_unlocked@plt+0x3150>
   13f90:	add	r2, r0, #1
   13f94:	mov	r0, r4
   13f98:	mov	r1, r7
   13f9c:	bl	10cb0 <memcpy@plt>
   13fa0:	mov	r5, #0
   13fa4:	b	13fe4 <putchar_unlocked@plt+0x3178>
   13fa8:	cmp	r6, #0
   13fac:	mov	r5, #22
   13fb0:	movne	r0, #0
   13fb4:	strbne	r0, [r4]
   13fb8:	b	13fe4 <putchar_unlocked@plt+0x3178>
   13fbc:	mov	r5, #34	; 0x22
   13fc0:	cmp	r6, #0
   13fc4:	beq	13fe4 <putchar_unlocked@plt+0x3178>
   13fc8:	sub	r6, r6, #1
   13fcc:	mov	r0, r4
   13fd0:	mov	r1, r7
   13fd4:	mov	r2, r6
   13fd8:	bl	10cb0 <memcpy@plt>
   13fdc:	mov	r0, #0
   13fe0:	strb	r0, [r4, r6]
   13fe4:	mov	r0, r5
   13fe8:	pop	{r4, r5, r6, r7, fp, pc}
   13fec:	mov	r1, #0
   13ff0:	b	10e18 <setlocale@plt>
   13ff4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ff8:	mov	r7, r0
   13ffc:	ldr	r6, [pc, #72]	; 1404c <putchar_unlocked@plt+0x31e0>
   14000:	ldr	r5, [pc, #72]	; 14050 <putchar_unlocked@plt+0x31e4>
   14004:	add	r6, pc, r6
   14008:	add	r5, pc, r5
   1400c:	sub	r6, r6, r5
   14010:	mov	r8, r1
   14014:	mov	r9, r2
   14018:	bl	10c48 <calloc@plt-0x20>
   1401c:	asrs	r6, r6, #2
   14020:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14024:	mov	r4, #0
   14028:	add	r4, r4, #1
   1402c:	ldr	r3, [r5], #4
   14030:	mov	r2, r9
   14034:	mov	r1, r8
   14038:	mov	r0, r7
   1403c:	blx	r3
   14040:	cmp	r6, r4
   14044:	bne	14028 <putchar_unlocked@plt+0x31bc>
   14048:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1404c:	andeq	r0, r1, r0, lsl #30
   14050:	strdeq	r0, [r1], -r8
   14054:	bx	lr
   14058:	ldr	r3, [pc, #12]	; 1406c <putchar_unlocked@plt+0x3200>
   1405c:	mov	r1, #0
   14060:	add	r3, pc, r3
   14064:	ldr	r2, [r3]
   14068:	b	10dc4 <__cxa_atexit@plt>
   1406c:	andeq	r1, r1, ip, asr r0

Disassembly of section .fini:

00014070 <.fini>:
   14070:	push	{r3, lr}
   14074:	pop	{r3, pc}
