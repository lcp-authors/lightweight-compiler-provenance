
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

00000730 <_init>:
 730:	push	{r3, lr}
 734:	bl	864 <call_weak_fn>
 738:	pop	{r3, pc}

Disassembly of section .plt:

0000073c <.plt>:
 73c:	push	{lr}		; (str lr, [sp, #-4]!)
 740:	ldr	lr, [pc, #4]	; 74c <.plt+0x10>
 744:	add	lr, pc, lr
 748:	ldr	pc, [lr, #8]!
 74c:	.word	0x000108b4

00000750 <calloc@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #16, 20	; 0x10000
 758:	ldr	pc, [ip, #2228]!	; 0x8b4

0000075c <mod_del_cmd@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #16, 20	; 0x10000
 764:	ldr	pc, [ip, #2220]!	; 0x8ac

00000768 <__cxa_finalize@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #16, 20	; 0x10000
 770:	ldr	pc, [ip, #2212]!	; 0x8a4

00000774 <sendto_one@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #16, 20	; 0x10000
 77c:	ldr	pc, [ip, #2204]!	; 0x89c

00000780 <free@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #16, 20	; 0x10000
 788:	ldr	pc, [ip, #2196]!	; 0x894

0000078c <rb_outofmemory@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #16, 20	; 0x10000
 794:	ldr	pc, [ip, #2188]!	; 0x88c

00000798 <rb_free_rb_dlink_node@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #16, 20	; 0x10000
 7a0:	ldr	pc, [ip, #2180]!	; 0x884

000007a4 <strcpy@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #16, 20	; 0x10000
 7ac:	ldr	pc, [ip, #2172]!	; 0x87c

000007b0 <rb_dictionary_foreach_start@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #16, 20	; 0x10000
 7b8:	ldr	pc, [ip, #2164]!	; 0x874

000007bc <msgbuf_reconstruct_tail@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #16, 20	; 0x10000
 7c4:	ldr	pc, [ip, #2156]!	; 0x86c

000007c8 <__gmon_start__@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #16, 20	; 0x10000
 7d0:	ldr	pc, [ip, #2148]!	; 0x864

000007d4 <rb_make_rb_dlink_node@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #16, 20	; 0x10000
 7dc:	ldr	pc, [ip, #2140]!	; 0x85c

000007e0 <sendto_one_numeric@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #16, 20	; 0x10000
 7e8:	ldr	pc, [ip, #2132]!	; 0x854

000007ec <strlen@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #16, 20	; 0x10000
 7f4:	ldr	pc, [ip, #2124]!	; 0x84c

000007f8 <strchr@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #16, 20	; 0x10000
 800:	ldr	pc, [ip, #2116]!	; 0x844

00000804 <find_server@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #16, 20	; 0x10000
 80c:	ldr	pc, [ip, #2108]!	; 0x83c

00000810 <rb_dictionary_foreach_cur@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #16, 20	; 0x10000
 818:	ldr	pc, [ip, #2100]!	; 0x834

0000081c <find_named_person@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #16, 20	; 0x10000
 824:	ldr	pc, [ip, #2092]!	; 0x82c

00000828 <flood_endgrace@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #16, 20	; 0x10000
 830:	ldr	pc, [ip, #2084]!	; 0x824

00000834 <rb_dictionary_foreach_next@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #16, 20	; 0x10000
 83c:	ldr	pc, [ip, #2076]!	; 0x81c

00000840 <mod_add_cmd@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #16, 20	; 0x10000
 848:	ldr	pc, [ip, #2068]!	; 0x814

0000084c <rb_dictionary_retrieve@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #16, 20	; 0x10000
 854:	ldr	pc, [ip, #2060]!	; 0x80c

00000858 <__assert_fail@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #16, 20	; 0x10000
 860:	ldr	pc, [ip, #2052]!	; 0x804

Disassembly of section .text:

00000864 <call_weak_fn>:
 864:	ldr	r3, [pc, #20]	; 880 <call_weak_fn+0x1c>
 868:	ldr	r2, [pc, #20]	; 884 <call_weak_fn+0x20>
 86c:	add	r3, pc, r3
 870:	ldr	r2, [r3, r2]
 874:	cmp	r2, #0
 878:	bxeq	lr
 87c:	b	7c8 <__gmon_start__@plt>
 880:	.word	0x0001078c
 884:	.word	0x00000074

00000888 <deregister_tm_clones>:
 888:	ldr	r0, [pc, #44]	; 8bc <deregister_tm_clones+0x34>
 88c:	ldr	r3, [pc, #44]	; 8c0 <deregister_tm_clones+0x38>
 890:	add	r0, pc, r0
 894:	add	r3, pc, r3
 898:	cmp	r3, r0
 89c:	ldr	r3, [pc, #32]	; 8c4 <deregister_tm_clones+0x3c>
 8a0:	add	r3, pc, r3
 8a4:	bxeq	lr
 8a8:	ldr	r2, [pc, #24]	; 8c8 <deregister_tm_clones+0x40>
 8ac:	ldr	r3, [r3, r2]
 8b0:	cmp	r3, #0
 8b4:	bxeq	lr
 8b8:	bx	r3
 8bc:	.word	0x0001082c
 8c0:	.word	0x00010828
 8c4:	.word	0x00010758
 8c8:	.word	0x0000006c

000008cc <register_tm_clones>:
 8cc:	ldr	r0, [pc, #56]	; 90c <register_tm_clones+0x40>
 8d0:	ldr	r3, [pc, #56]	; 910 <register_tm_clones+0x44>
 8d4:	add	r0, pc, r0
 8d8:	add	r3, pc, r3
 8dc:	sub	r1, r3, r0
 8e0:	ldr	r3, [pc, #44]	; 914 <register_tm_clones+0x48>
 8e4:	asr	r1, r1, #2
 8e8:	add	r3, pc, r3
 8ec:	add	r1, r1, r1, lsr #31
 8f0:	asrs	r1, r1, #1
 8f4:	bxeq	lr
 8f8:	ldr	r2, [pc, #24]	; 918 <register_tm_clones+0x4c>
 8fc:	ldr	r3, [r3, r2]
 900:	cmp	r3, #0
 904:	bxeq	lr
 908:	bx	r3
 90c:	.word	0x000107e8
 910:	.word	0x000107e4
 914:	.word	0x00010710
 918:	.word	0x00000078

0000091c <__do_global_dtors_aux>:
 91c:	ldr	r3, [pc, #76]	; 970 <__do_global_dtors_aux+0x54>
 920:	ldr	r2, [pc, #76]	; 974 <__do_global_dtors_aux+0x58>
 924:	add	r3, pc, r3
 928:	add	r2, pc, r2
 92c:	ldrb	r3, [r3]
 930:	cmp	r3, #0
 934:	bxne	lr
 938:	ldr	r3, [pc, #56]	; 978 <__do_global_dtors_aux+0x5c>
 93c:	push	{r4, lr}
 940:	ldr	r3, [r2, r3]
 944:	cmp	r3, #0
 948:	beq	958 <__do_global_dtors_aux+0x3c>
 94c:	ldr	r3, [pc, #40]	; 97c <__do_global_dtors_aux+0x60>
 950:	ldr	r0, [pc, r3]
 954:	bl	768 <__cxa_finalize@plt>
 958:	bl	888 <deregister_tm_clones>
 95c:	ldr	r3, [pc, #28]	; 980 <__do_global_dtors_aux+0x64>
 960:	mov	r2, #1
 964:	add	r3, pc, r3
 968:	strb	r2, [r3]
 96c:	pop	{r4, pc}
 970:	.word	0x00010798
 974:	.word	0x000106d0
 978:	.word	0x00000068
 97c:	.word	0x00010728
 980:	.word	0x00010758

00000984 <frame_dummy>:
 984:	b	8cc <register_tm_clones>

00000988 <m_alias>:
 988:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 98c:	mov	r6, r0
 990:	mov	r4, r1
 994:	ldr	r5, [pc, #468]	; b70 <m_alias+0x1e8>
 998:	ldr	r3, [pc, #468]	; b74 <m_alias+0x1ec>
 99c:	ldr	r1, [r0, #192]	; 0xc0
 9a0:	add	r5, pc, r5
 9a4:	ldr	sl, [sp, #32]
 9a8:	ldr	r3, [r5, r3]
 9ac:	ldr	r0, [r3]
 9b0:	bl	84c <rb_dictionary_retrieve@plt>
 9b4:	subs	r8, r0, #0
 9b8:	bne	a00 <m_alias+0x78>
 9bc:	ldrh	r3, [r4, #80]	; 0x50
 9c0:	cmp	r3, #64	; 0x40
 9c4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 9c8:	ldr	r3, [r4, #24]
 9cc:	cmp	r3, #0
 9d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 9d4:	mov	r0, r4
 9d8:	ldr	r3, [pc, #408]	; b78 <m_alias+0x1f0>
 9dc:	ldr	r1, [pc, #408]	; b7c <m_alias+0x1f4>
 9e0:	ldr	r2, [r5, r3]
 9e4:	ldr	r3, [r6, #192]	; 0xc0
 9e8:	add	r1, pc, r1
 9ec:	add	r2, r2, #88	; 0x58
 9f0:	str	r3, [sp, #32]
 9f4:	add	r3, r4, #88	; 0x58
 9f8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 9fc:	b	774 <sendto_one@plt>
 a00:	ldr	r1, [r4, #64]	; 0x40
 a04:	mov	r3, #0
 a08:	and	r2, r1, #256	; 0x100
 a0c:	orrs	r3, r2, r3
 a10:	bne	a2c <m_alias+0xa4>
 a14:	ldr	r3, [r4, #432]	; 0x1b0
 a18:	ldr	r3, [r3, #116]	; 0x74
 a1c:	cmp	r3, #20
 a20:	bls	a2c <m_alias+0xa4>
 a24:	mov	r0, r4
 a28:	bl	828 <flood_endgrace@plt>
 a2c:	ldr	r7, [r8, #4]
 a30:	mov	r1, #64	; 0x40
 a34:	mov	r0, r7
 a38:	bl	7f8 <strchr@plt>
 a3c:	subs	r9, r0, #0
 a40:	beq	ac8 <m_alias+0x140>
 a44:	add	r1, r9, #1
 a48:	mov	r0, #0
 a4c:	bl	804 <find_server@plt>
 a50:	subs	r7, r0, #0
 a54:	bne	a74 <m_alias+0xec>
 a58:	ldr	r2, [pc, #288]	; b80 <m_alias+0x1f8>
 a5c:	mov	r0, r4
 a60:	mov	r1, #440	; 0x1b8
 a64:	ldr	r3, [r8, #4]
 a68:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a6c:	add	r2, pc, r2
 a70:	b	7e0 <sendto_one_numeric@plt>
 a74:	ldrh	r3, [r7, #80]	; 0x50
 a78:	cmp	r3, #4
 a7c:	beq	a58 <m_alias+0xd0>
 a80:	mov	r1, #1
 a84:	mov	r0, r6
 a88:	bl	7bc <msgbuf_reconstruct_tail@plt>
 a8c:	ldr	r1, [sl, #4]
 a90:	cmp	r1, #0
 a94:	beq	aa4 <m_alias+0x11c>
 a98:	ldrb	r3, [r1]
 a9c:	cmp	r3, #0
 aa0:	bne	ae8 <m_alias+0x160>
 aa4:	ldr	r3, [pc, #204]	; b78 <m_alias+0x1f0>
 aa8:	mov	r0, r4
 aac:	ldr	r1, [pc, #208]	; b84 <m_alias+0x1fc>
 ab0:	ldr	r2, [r5, r3]
 ab4:	add	r3, r7, #88	; 0x58
 ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 abc:	add	r1, pc, r1
 ac0:	add	r2, r2, #88	; 0x58
 ac4:	b	774 <sendto_one@plt>
 ac8:	mov	r0, r7
 acc:	bl	81c <find_named_person@plt>
 ad0:	subs	r7, r0, #0
 ad4:	beq	a58 <m_alias+0xd0>
 ad8:	ldr	r3, [r7, #56]	; 0x38
 adc:	tst	r3, #64	; 0x40
 ae0:	bne	a80 <m_alias+0xf8>
 ae4:	b	a58 <m_alias+0xd0>
 ae8:	ldr	r3, [r7, #36]	; 0x24
 aec:	ldrh	r0, [r3, #80]	; 0x50
 af0:	cmp	r0, #32
 af4:	bne	b30 <m_alias+0x1a8>
 af8:	ldrb	r2, [r3, #396]	; 0x18c
 afc:	cmp	r2, #0
 b00:	beq	b30 <m_alias+0x1a8>
 b04:	ldrb	r3, [r4, #396]	; 0x18c
 b08:	cmp	r3, #0
 b0c:	addne	r2, r4, #396	; 0x18c
 b10:	addeq	r2, r4, #88	; 0x58
 b14:	cmp	r9, #0
 b18:	bne	b3c <m_alias+0x1b4>
 b1c:	ldrb	r3, [r7, #396]	; 0x18c
 b20:	cmp	r3, #0
 b24:	addne	r3, r7, #396	; 0x18c
 b28:	bne	b40 <m_alias+0x1b8>
 b2c:	b	b68 <m_alias+0x1e0>
 b30:	cmp	r9, #0
 b34:	add	r2, r4, #88	; 0x58
 b38:	beq	b54 <m_alias+0x1cc>
 b3c:	ldr	r3, [r8, #4]
 b40:	str	r1, [sp, #32]
 b44:	mov	r0, r7
 b48:	ldr	r1, [pc, #56]	; b88 <m_alias+0x200>
 b4c:	add	r1, pc, r1
 b50:	b	9f8 <m_alias+0x70>
 b54:	cmp	r0, #32
 b58:	bne	b68 <m_alias+0x1e0>
 b5c:	ldrb	r3, [r3, #396]	; 0x18c
 b60:	cmp	r3, #0
 b64:	bne	b1c <m_alias+0x194>
 b68:	add	r3, r7, #88	; 0x58
 b6c:	b	b40 <m_alias+0x1b8>
 b70:	.word	0x00010658
 b74:	.word	0x00000070
 b78:	.word	0x0000007c
 b7c:	.word	0x000003f5
 b80:	.word	0x00000390
 b84:	.word	0x00000367
 b88:	.word	0x000002f3

00000b8c <destroy_aliases>:
 b8c:	push	{r4, r5, r6, r7, r8, lr}
 b90:	ldr	r5, [pc, #140]	; c24 <destroy_aliases+0x98>
 b94:	add	r5, pc, r5
 b98:	ldr	r4, [r5]
 b9c:	cmp	r4, #0
 ba0:	popeq	{r4, r5, r6, r7, r8, pc}
 ba4:	ldr	r7, [pc, #124]	; c28 <destroy_aliases+0x9c>
 ba8:	ldr	r8, [pc, #124]	; c2c <destroy_aliases+0xa0>
 bac:	ldr	r6, [r4, #8]
 bb0:	add	r7, pc, r7
 bb4:	add	r8, pc, r8
 bb8:	ldr	r0, [r4]
 bbc:	bl	75c <mod_del_cmd@plt>
 bc0:	ldr	r0, [r4]
 bc4:	cmp	r0, #0
 bc8:	beq	bd0 <destroy_aliases+0x44>
 bcc:	bl	780 <free@plt>
 bd0:	ldrd	r2, [r4, #4]
 bd4:	mov	r0, r4
 bd8:	cmp	r3, #0
 bdc:	strne	r2, [r3, #4]
 be0:	streq	r2, [r7, #4]
 be4:	ldr	r2, [r4, #4]
 be8:	cmp	r2, #0
 bec:	strne	r3, [r2, #8]
 bf0:	streq	r3, [r8]
 bf4:	mov	r3, #0
 bf8:	str	r3, [r4, #4]
 bfc:	str	r3, [r4, #8]
 c00:	ldr	r3, [r5, #8]
 c04:	sub	r3, r3, #1
 c08:	str	r3, [r5, #8]
 c0c:	bl	798 <rb_free_rb_dlink_node@plt>
 c10:	cmp	r6, #0
 c14:	popeq	{r4, r5, r6, r7, r8, pc}
 c18:	mov	r4, r6
 c1c:	ldr	r6, [r6, #8]
 c20:	b	bb8 <destroy_aliases+0x2c>
 c24:	.word	0x0001052c
 c28:	.word	0x00010510
 c2c:	.word	0x0001050c

00000c30 <_moddeinit>:
 c30:	b	b8c <destroy_aliases>

00000c34 <create_aliases>:
 c34:	ldr	r3, [pc, #296]	; d64 <create_aliases+0x130>
 c38:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 c3c:	mov	r6, sp
 c40:	mov	r1, r6
 c44:	ldr	r2, [pc, #284]	; d68 <create_aliases+0x134>
 c48:	add	r3, pc, r3
 c4c:	ldr	r9, [pc, #280]	; d6c <create_aliases+0x138>
 c50:	ldr	r7, [pc, #280]	; d70 <create_aliases+0x13c>
 c54:	ldr	r5, [r3, r2]
 c58:	add	r9, pc, r9
 c5c:	ldr	r8, [pc, #272]	; d74 <create_aliases+0x140>
 c60:	add	r7, pc, r7
 c64:	ldr	r0, [r5]
 c68:	add	r8, pc, r8
 c6c:	bl	7b0 <rb_dictionary_foreach_start@plt>
 c70:	mov	r1, r6
 c74:	ldr	r0, [r5]
 c78:	bl	810 <rb_dictionary_foreach_cur@plt>
 c7c:	cmp	r0, #0
 c80:	bne	c8c <create_aliases+0x58>
 c84:	add	sp, sp, #8
 c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 c8c:	ldr	sl, [r0]
 c90:	mov	r0, sl
 c94:	bl	7ec <strlen@plt>
 c98:	add	r1, r0, #69	; 0x45
 c9c:	mov	r0, #1
 ca0:	bl	750 <calloc@plt>
 ca4:	subs	r4, r0, #0
 ca8:	bne	cb0 <create_aliases+0x7c>
 cac:	bl	78c <rb_outofmemory@plt>
 cb0:	add	r3, r4, #68	; 0x44
 cb4:	mov	r1, sl
 cb8:	mov	r0, r3
 cbc:	bl	7a4 <strcpy@plt>
 cc0:	mov	ip, r4
 cc4:	mov	lr, r9
 cc8:	str	r0, [ip], #20
 ccc:	ldm	lr!, {r0, r1, r2, r3}
 cd0:	stmia	ip!, {r0, r1, r2, r3}
 cd4:	ldm	lr!, {r0, r1, r2, r3}
 cd8:	stmia	ip!, {r0, r1, r2, r3}
 cdc:	ldm	lr, {r0, r1, r2, r3}
 ce0:	stm	ip, {r0, r1, r2, r3}
 ce4:	mov	r0, r4
 ce8:	bl	840 <mod_add_cmd@plt>
 cec:	bl	7d4 <rb_make_rb_dlink_node@plt>
 cf0:	cmp	r0, #0
 cf4:	bne	d18 <create_aliases+0xe4>
 cf8:	ldr	r3, [pc, #120]	; d78 <create_aliases+0x144>
 cfc:	mov	r2, #144	; 0x90
 d00:	ldr	r1, [pc, #116]	; d7c <create_aliases+0x148>
 d04:	ldr	r0, [pc, #116]	; d80 <create_aliases+0x14c>
 d08:	add	r3, pc, r3
 d0c:	add	r1, pc, r1
 d10:	add	r0, pc, r0
 d14:	bl	858 <__assert_fail@plt>
 d18:	mov	r3, #0
 d1c:	str	r4, [r0]
 d20:	str	r3, [r0, #4]
 d24:	ldr	r3, [r7]
 d28:	cmp	r3, #0
 d2c:	str	r3, [r0, #8]
 d30:	strne	r0, [r3, #4]
 d34:	bne	d44 <create_aliases+0x110>
 d38:	ldr	r3, [r7, #4]
 d3c:	cmp	r3, #0
 d40:	streq	r0, [r7, #4]
 d44:	ldr	r3, [r8, #8]
 d48:	mov	r1, r6
 d4c:	str	r0, [r8]
 d50:	ldr	r0, [r5]
 d54:	add	r3, r3, #1
 d58:	str	r3, [r8, #8]
 d5c:	bl	834 <rb_dictionary_foreach_next@plt>
 d60:	b	c70 <create_aliases+0x3c>
 d64:	.word	0x000103b0
 d68:	.word	0x00000070
 d6c:	.word	0x00010270
 d70:	.word	0x00010460
 d74:	.word	0x00010458
 d78:	.word	0x000000a0
 d7c:	.word	0x00000146
 d80:	.word	0x0000015e

00000d84 <reload_aliases>:
 d84:	push	{r4, lr}
 d88:	bl	b8c <destroy_aliases>
 d8c:	bl	c34 <create_aliases>
 d90:	mov	r0, #0
 d94:	pop	{r4, pc}

00000d98 <_modinit>:
 d98:	push	{r4, lr}
 d9c:	bl	c34 <create_aliases>
 da0:	mov	r0, #0
 da4:	pop	{r4, pc}

Disassembly of section .fini:

00000da8 <_fini>:
 da8:	push	{r3, lr}
 dac:	pop	{r3, pc}
