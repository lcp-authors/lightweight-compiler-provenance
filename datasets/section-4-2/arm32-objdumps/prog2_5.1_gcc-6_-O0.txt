
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <.init>:
   10a08:	push	{r3, lr}
   10a0c:	bl	10ae8 <_start@@Base+0x3c>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <calloc@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <calloc@plt-0x4>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r2, [r1], -ip

00010a28 <calloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <free@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <strcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <abort@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010aac <_start@@Base>:
   10aac:	mov	fp, #0
   10ab0:	mov	lr, #0
   10ab4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ab8:	mov	r2, sp
   10abc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ac4:	ldr	ip, [pc, #16]	; 10adc <_start@@Base+0x30>
   10ac8:	push	{ip}		; (str ip, [sp, #-4]!)
   10acc:	ldr	r0, [pc, #12]	; 10ae0 <_start@@Base+0x34>
   10ad0:	ldr	r3, [pc, #12]	; 10ae4 <_start@@Base+0x38>
   10ad4:	bl	10a70 <__libc_start_main@plt>
   10ad8:	bl	10aa0 <abort@plt>
   10adc:	andeq	r2, r1, r4, lsl r0
   10ae0:	ldrdeq	r0, [r1], -r4
   10ae4:			; <UNDEFINED> instruction: 0x00011fb4
   10ae8:	ldr	r3, [pc, #20]	; 10b04 <_start@@Base+0x58>
   10aec:	ldr	r2, [pc, #20]	; 10b08 <_start@@Base+0x5c>
   10af0:	add	r3, pc, r3
   10af4:	ldr	r2, [r3, r2]
   10af8:	cmp	r2, #0
   10afc:	bxeq	lr
   10b00:	b	10a7c <__gmon_start__@plt>
   10b04:	andeq	r2, r1, r8, lsl #10
   10b08:	andeq	r0, r0, r8, lsr r0
   10b0c:	ldr	r3, [pc, #28]	; 10b30 <_start@@Base+0x84>
   10b10:	ldr	r0, [pc, #28]	; 10b34 <_start@@Base+0x88>
   10b14:	sub	r3, r3, r0
   10b18:	cmp	r3, #6
   10b1c:	bxls	lr
   10b20:	ldr	r3, [pc, #16]	; 10b38 <_start@@Base+0x8c>
   10b24:	cmp	r3, #0
   10b28:	bxeq	lr
   10b2c:	bx	r3
   10b30:	andeq	r3, r2, r7, asr #32
   10b34:	andeq	r3, r2, r4, asr #32
   10b38:	andeq	r0, r0, r0
   10b3c:	ldr	r1, [pc, #36]	; 10b68 <_start@@Base+0xbc>
   10b40:	ldr	r0, [pc, #36]	; 10b6c <_start@@Base+0xc0>
   10b44:	sub	r1, r1, r0
   10b48:	asr	r1, r1, #2
   10b4c:	add	r1, r1, r1, lsr #31
   10b50:	asrs	r1, r1, #1
   10b54:	bxeq	lr
   10b58:	ldr	r3, [pc, #16]	; 10b70 <_start@@Base+0xc4>
   10b5c:	cmp	r3, #0
   10b60:	bxeq	lr
   10b64:	bx	r3
   10b68:	andeq	r3, r2, r4, asr #32
   10b6c:	andeq	r3, r2, r4, asr #32
   10b70:	andeq	r0, r0, r0
   10b74:	push	{r4, lr}
   10b78:	ldr	r4, [pc, #24]	; 10b98 <_start@@Base+0xec>
   10b7c:	ldrb	r3, [r4]
   10b80:	cmp	r3, #0
   10b84:	popne	{r4, pc}
   10b88:	bl	10b0c <_start@@Base+0x60>
   10b8c:	mov	r3, #1
   10b90:	strb	r3, [r4]
   10b94:	pop	{r4, pc}
   10b98:	andeq	r3, r2, r4, asr #32
   10b9c:	ldr	r0, [pc, #40]	; 10bcc <_start@@Base+0x120>
   10ba0:	ldr	r3, [r0]
   10ba4:	cmp	r3, #0
   10ba8:	bne	10bb0 <_start@@Base+0x104>
   10bac:	b	10b3c <_start@@Base+0x90>
   10bb0:	ldr	r3, [pc, #24]	; 10bd0 <_start@@Base+0x124>
   10bb4:	cmp	r3, #0
   10bb8:	beq	10bac <_start@@Base+0x100>
   10bbc:	push	{r4, lr}
   10bc0:	blx	r3
   10bc4:	pop	{r4, lr}
   10bc8:	b	10b3c <_start@@Base+0x90>
   10bcc:	andeq	r2, r2, r4, lsl pc
   10bd0:	andeq	r0, r0, r0

00010bd4 <main@@Base>:
   10bd4:	push	{fp, lr}
   10bd8:	add	fp, sp, #4
   10bdc:	sub	sp, sp, #64	; 0x40
   10be0:	mov	r1, #3
   10be4:	mov	r0, #4
   10be8:	bl	11480 <armazem_novo@@Base>
   10bec:	str	r0, [fp, #-12]
   10bf0:	ldr	r3, [pc, #1076]	; 1102c <main@@Base+0x458>
   10bf4:	add	r3, pc, r3
   10bf8:	mov	r0, r3
   10bfc:	bl	10a58 <puts@plt>
   10c00:	vldr	s0, [pc, #1012]	; 10ffc <main@@Base+0x428>
   10c04:	ldr	r3, [pc, #1060]	; 11030 <main@@Base+0x45c>
   10c08:	add	r3, pc, r3
   10c0c:	mov	r0, r3
   10c10:	bl	117b4 <contentor_novo@@Base>
   10c14:	str	r0, [fp, #-16]
   10c18:	vldr	s0, [pc, #992]	; 11000 <main@@Base+0x42c>
   10c1c:	ldr	r3, [pc, #1040]	; 11034 <main@@Base+0x460>
   10c20:	add	r3, pc, r3
   10c24:	mov	r0, r3
   10c28:	bl	117b4 <contentor_novo@@Base>
   10c2c:	str	r0, [fp, #-20]	; 0xffffffec
   10c30:	vldr	s0, [pc, #972]	; 11004 <main@@Base+0x430>
   10c34:	ldr	r3, [pc, #1020]	; 11038 <main@@Base+0x464>
   10c38:	add	r3, pc, r3
   10c3c:	mov	r0, r3
   10c40:	bl	117b4 <contentor_novo@@Base>
   10c44:	str	r0, [fp, #-24]	; 0xffffffe8
   10c48:	vldr	s0, [pc, #952]	; 11008 <main@@Base+0x434>
   10c4c:	ldr	r3, [pc, #1000]	; 1103c <main@@Base+0x468>
   10c50:	add	r3, pc, r3
   10c54:	mov	r0, r3
   10c58:	bl	117b4 <contentor_novo@@Base>
   10c5c:	str	r0, [fp, #-28]	; 0xffffffe4
   10c60:	vldr	s0, [pc, #932]	; 1100c <main@@Base+0x438>
   10c64:	ldr	r3, [pc, #980]	; 11040 <main@@Base+0x46c>
   10c68:	add	r3, pc, r3
   10c6c:	mov	r0, r3
   10c70:	bl	117b4 <contentor_novo@@Base>
   10c74:	str	r0, [fp, #-32]	; 0xffffffe0
   10c78:	vldr	s0, [pc, #912]	; 11010 <main@@Base+0x43c>
   10c7c:	ldr	r3, [pc, #960]	; 11044 <main@@Base+0x470>
   10c80:	add	r3, pc, r3
   10c84:	mov	r0, r3
   10c88:	bl	117b4 <contentor_novo@@Base>
   10c8c:	str	r0, [fp, #-36]	; 0xffffffdc
   10c90:	vldr	s0, [pc, #892]	; 11014 <main@@Base+0x440>
   10c94:	ldr	r3, [pc, #940]	; 11048 <main@@Base+0x474>
   10c98:	add	r3, pc, r3
   10c9c:	mov	r0, r3
   10ca0:	bl	117b4 <contentor_novo@@Base>
   10ca4:	str	r0, [fp, #-40]	; 0xffffffd8
   10ca8:	vldr	s0, [pc, #872]	; 11018 <main@@Base+0x444>
   10cac:	ldr	r3, [pc, #920]	; 1104c <main@@Base+0x478>
   10cb0:	add	r3, pc, r3
   10cb4:	mov	r0, r3
   10cb8:	bl	117b4 <contentor_novo@@Base>
   10cbc:	str	r0, [fp, #-44]	; 0xffffffd4
   10cc0:	vldr	s0, [pc, #836]	; 1100c <main@@Base+0x438>
   10cc4:	ldr	r3, [pc, #900]	; 11050 <main@@Base+0x47c>
   10cc8:	add	r3, pc, r3
   10ccc:	mov	r0, r3
   10cd0:	bl	117b4 <contentor_novo@@Base>
   10cd4:	str	r0, [fp, #-48]	; 0xffffffd0
   10cd8:	vldr	s0, [pc, #828]	; 1101c <main@@Base+0x448>
   10cdc:	ldr	r3, [pc, #880]	; 11054 <main@@Base+0x480>
   10ce0:	add	r3, pc, r3
   10ce4:	mov	r0, r3
   10ce8:	bl	117b4 <contentor_novo@@Base>
   10cec:	str	r0, [fp, #-52]	; 0xffffffcc
   10cf0:	vldr	s0, [pc, #808]	; 11020 <main@@Base+0x44c>
   10cf4:	ldr	r3, [pc, #860]	; 11058 <main@@Base+0x484>
   10cf8:	add	r3, pc, r3
   10cfc:	mov	r0, r3
   10d00:	bl	117b4 <contentor_novo@@Base>
   10d04:	str	r0, [fp, #-56]	; 0xffffffc8
   10d08:	vldr	s0, [pc, #788]	; 11024 <main@@Base+0x450>
   10d0c:	ldr	r3, [pc, #840]	; 1105c <main@@Base+0x488>
   10d10:	add	r3, pc, r3
   10d14:	mov	r0, r3
   10d18:	bl	117b4 <contentor_novo@@Base>
   10d1c:	str	r0, [fp, #-60]	; 0xffffffc4
   10d20:	vldr	s0, [pc, #768]	; 11028 <main@@Base+0x454>
   10d24:	ldr	r3, [pc, #820]	; 11060 <main@@Base+0x48c>
   10d28:	add	r3, pc, r3
   10d2c:	mov	r0, r3
   10d30:	bl	117b4 <contentor_novo@@Base>
   10d34:	str	r0, [fp, #-64]	; 0xffffffc0
   10d38:	ldr	r3, [pc, #804]	; 11064 <main@@Base+0x490>
   10d3c:	add	r3, pc, r3
   10d40:	mov	r0, r3
   10d44:	bl	10a58 <puts@plt>
   10d48:	ldr	r0, [fp, #-12]
   10d4c:	bl	11280 <imprimeArmazem@@Base>
   10d50:	ldr	r3, [pc, #784]	; 11068 <main@@Base+0x494>
   10d54:	add	r3, pc, r3
   10d58:	mov	r0, r3
   10d5c:	bl	10a58 <puts@plt>
   10d60:	ldr	r1, [fp, #-16]
   10d64:	ldr	r0, [fp, #-12]
   10d68:	bl	115bc <armazenar_contentor@@Base>
   10d6c:	mov	r3, r0
   10d70:	cmp	r3, #0
   10d74:	beq	10d94 <main@@Base+0x1c0>
   10d78:	ldr	r3, [fp, #-16]
   10d7c:	ldr	r3, [r3]
   10d80:	mov	r1, r3
   10d84:	ldr	r3, [pc, #736]	; 1106c <main@@Base+0x498>
   10d88:	add	r3, pc, r3
   10d8c:	mov	r0, r3
   10d90:	bl	10a34 <printf@plt>
   10d94:	ldr	r1, [fp, #-20]	; 0xffffffec
   10d98:	ldr	r0, [fp, #-12]
   10d9c:	bl	115bc <armazenar_contentor@@Base>
   10da0:	mov	r3, r0
   10da4:	cmp	r3, #0
   10da8:	beq	10dc8 <main@@Base+0x1f4>
   10dac:	ldr	r3, [fp, #-20]	; 0xffffffec
   10db0:	ldr	r3, [r3]
   10db4:	mov	r1, r3
   10db8:	ldr	r3, [pc, #688]	; 11070 <main@@Base+0x49c>
   10dbc:	add	r3, pc, r3
   10dc0:	mov	r0, r3
   10dc4:	bl	10a34 <printf@plt>
   10dc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10dcc:	ldr	r0, [fp, #-12]
   10dd0:	bl	115bc <armazenar_contentor@@Base>
   10dd4:	mov	r3, r0
   10dd8:	cmp	r3, #0
   10ddc:	beq	10dfc <main@@Base+0x228>
   10de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10de4:	ldr	r3, [r3]
   10de8:	mov	r1, r3
   10dec:	ldr	r3, [pc, #640]	; 11074 <main@@Base+0x4a0>
   10df0:	add	r3, pc, r3
   10df4:	mov	r0, r3
   10df8:	bl	10a34 <printf@plt>
   10dfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10e00:	ldr	r0, [fp, #-12]
   10e04:	bl	115bc <armazenar_contentor@@Base>
   10e08:	mov	r3, r0
   10e0c:	cmp	r3, #0
   10e10:	beq	10e30 <main@@Base+0x25c>
   10e14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e18:	ldr	r3, [r3]
   10e1c:	mov	r1, r3
   10e20:	ldr	r3, [pc, #592]	; 11078 <main@@Base+0x4a4>
   10e24:	add	r3, pc, r3
   10e28:	mov	r0, r3
   10e2c:	bl	10a34 <printf@plt>
   10e30:	ldr	r3, [pc, #580]	; 1107c <main@@Base+0x4a8>
   10e34:	add	r3, pc, r3
   10e38:	mov	r0, r3
   10e3c:	bl	10a58 <puts@plt>
   10e40:	ldr	r0, [fp, #-12]
   10e44:	bl	11280 <imprimeArmazem@@Base>
   10e48:	ldr	r3, [pc, #560]	; 11080 <main@@Base+0x4ac>
   10e4c:	add	r3, pc, r3
   10e50:	mov	r0, r3
   10e54:	bl	10a58 <puts@plt>
   10e58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10e5c:	ldr	r0, [fp, #-12]
   10e60:	bl	115bc <armazenar_contentor@@Base>
   10e64:	mov	r3, r0
   10e68:	cmp	r3, #0
   10e6c:	beq	10e8c <main@@Base+0x2b8>
   10e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10e74:	ldr	r3, [r3]
   10e78:	mov	r1, r3
   10e7c:	ldr	r3, [pc, #512]	; 11084 <main@@Base+0x4b0>
   10e80:	add	r3, pc, r3
   10e84:	mov	r0, r3
   10e88:	bl	10a34 <printf@plt>
   10e8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10e90:	ldr	r0, [fp, #-12]
   10e94:	bl	115bc <armazenar_contentor@@Base>
   10e98:	mov	r3, r0
   10e9c:	cmp	r3, #0
   10ea0:	beq	10ec0 <main@@Base+0x2ec>
   10ea4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ea8:	ldr	r3, [r3]
   10eac:	mov	r1, r3
   10eb0:	ldr	r3, [pc, #464]	; 11088 <main@@Base+0x4b4>
   10eb4:	add	r3, pc, r3
   10eb8:	mov	r0, r3
   10ebc:	bl	10a34 <printf@plt>
   10ec0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10ec4:	ldr	r0, [fp, #-12]
   10ec8:	bl	115bc <armazenar_contentor@@Base>
   10ecc:	mov	r3, r0
   10ed0:	cmp	r3, #0
   10ed4:	beq	10ef4 <main@@Base+0x320>
   10ed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10edc:	ldr	r3, [r3]
   10ee0:	mov	r1, r3
   10ee4:	ldr	r3, [pc, #416]	; 1108c <main@@Base+0x4b8>
   10ee8:	add	r3, pc, r3
   10eec:	mov	r0, r3
   10ef0:	bl	10a34 <printf@plt>
   10ef4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10ef8:	ldr	r0, [fp, #-12]
   10efc:	bl	115bc <armazenar_contentor@@Base>
   10f00:	mov	r3, r0
   10f04:	cmp	r3, #0
   10f08:	beq	10f28 <main@@Base+0x354>
   10f0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10f10:	ldr	r3, [r3]
   10f14:	mov	r1, r3
   10f18:	ldr	r3, [pc, #368]	; 11090 <main@@Base+0x4bc>
   10f1c:	add	r3, pc, r3
   10f20:	mov	r0, r3
   10f24:	bl	10a34 <printf@plt>
   10f28:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10f2c:	ldr	r0, [fp, #-12]
   10f30:	bl	115bc <armazenar_contentor@@Base>
   10f34:	mov	r3, r0
   10f38:	cmp	r3, #0
   10f3c:	beq	10f5c <main@@Base+0x388>
   10f40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10f44:	ldr	r3, [r3]
   10f48:	mov	r1, r3
   10f4c:	ldr	r3, [pc, #320]	; 11094 <main@@Base+0x4c0>
   10f50:	add	r3, pc, r3
   10f54:	mov	r0, r3
   10f58:	bl	10a34 <printf@plt>
   10f5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10f60:	ldr	r0, [fp, #-12]
   10f64:	bl	115bc <armazenar_contentor@@Base>
   10f68:	mov	r3, r0
   10f6c:	cmp	r3, #0
   10f70:	beq	10f90 <main@@Base+0x3bc>
   10f74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10f78:	ldr	r3, [r3]
   10f7c:	mov	r1, r3
   10f80:	ldr	r3, [pc, #272]	; 11098 <main@@Base+0x4c4>
   10f84:	add	r3, pc, r3
   10f88:	mov	r0, r3
   10f8c:	bl	10a34 <printf@plt>
   10f90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10f94:	ldr	r0, [fp, #-12]
   10f98:	bl	115bc <armazenar_contentor@@Base>
   10f9c:	mov	r3, r0
   10fa0:	cmp	r3, #0
   10fa4:	beq	10fc4 <main@@Base+0x3f0>
   10fa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10fac:	ldr	r3, [r3]
   10fb0:	mov	r1, r3
   10fb4:	ldr	r3, [pc, #224]	; 1109c <main@@Base+0x4c8>
   10fb8:	add	r3, pc, r3
   10fbc:	mov	r0, r3
   10fc0:	bl	10a34 <printf@plt>
   10fc4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10fc8:	ldr	r0, [fp, #-12]
   10fcc:	bl	115bc <armazenar_contentor@@Base>
   10fd0:	mov	r3, r0
   10fd4:	cmp	r3, #0
   10fd8:	beq	110d4 <main@@Base+0x500>
   10fdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10fe0:	ldr	r3, [r3]
   10fe4:	mov	r1, r3
   10fe8:	ldr	r3, [pc, #176]	; 110a0 <main@@Base+0x4cc>
   10fec:	add	r3, pc, r3
   10ff0:	mov	r0, r3
   10ff4:	bl	10a34 <printf@plt>
   10ff8:	b	110d4 <main@@Base+0x500>
   10ffc:	cmnmi	r6, #0
   11000:	cmnmi	sl, #0
   11004:	strmi	r8, [r4], #-0
   11008:	ldrtmi	r8, [r1], #-0
   1100c:			; <UNDEFINED> instruction: 0x43be0000
   11010:	bicmi	r0, r3, #0
   11014:	sbcmi	r0, r8, #0
   11018:	adcmi	r0, r0, #0
   1101c:	tstmi	r6, #0
   11020:	orrmi	r0, r7, #0
   11024:	bicsmi	r0, r7, #0
   11028:	movtmi	r0, #32768	; 0x8000
   1102c:	andeq	r1, r0, r8, lsr #8
   11030:	andeq	r1, r0, r8, lsr #8
   11034:	andeq	r1, r0, r8, lsl r4
   11038:	andeq	r1, r0, r4, lsl #8
   1103c:	strdeq	r1, [r0], -r4
   11040:	andeq	r1, r0, r4, ror #7
   11044:	ldrdeq	r1, [r0], -r4
   11048:	andeq	r1, r0, r4, asr #7
   1104c:			; <UNDEFINED> instruction: 0x000013b8
   11050:	andeq	r1, r0, r8, lsr #7
   11054:	muleq	r0, ip, r3
   11058:	andeq	r1, r0, ip, lsl #7
   1105c:	andeq	r1, r0, r0, lsl #7
   11060:	andeq	r1, r0, r0, ror r3
   11064:	andeq	r1, r0, r4, ror #6
   11068:	andeq	r1, r0, r8, ror #6
   1106c:	andeq	r1, r0, r8, asr r3
   11070:	andeq	r1, r0, r4, lsr #6
   11074:	strdeq	r1, [r0], -r0
   11078:			; <UNDEFINED> instruction: 0x000012bc
   1107c:	ldrdeq	r1, [r0], -r4
   11080:	ldrdeq	r1, [r0], -r8
   11084:	andeq	r1, r0, r0, ror #4
   11088:	andeq	r1, r0, ip, lsr #4
   1108c:	strdeq	r1, [r0], -r8
   11090:	andeq	r1, r0, r4, asr #3
   11094:	muleq	r0, r0, r1
   11098:	andeq	r1, r0, ip, asr r1
   1109c:	andeq	r1, r0, r8, lsr #2
   110a0:	strdeq	r1, [r0], -r4
   110a4:	andeq	r1, r0, r0, ror r0
   110a8:	andeq	r1, r0, r0, rrx
   110ac:	andeq	r1, r0, ip, asr r0
   110b0:	andeq	r1, r0, r0, asr r0
   110b4:	andeq	r1, r0, ip, lsl #1
   110b8:	andeq	r1, r0, r8, lsl #1
   110bc:	andeq	r1, r0, r8, ror r0
   110c0:	andeq	r1, r0, ip, ror r0
   110c4:	andeq	r1, r0, r8, lsl r0
   110c8:	andeq	r1, r0, r8, asr #32
   110cc:	andeq	r1, r0, r8, lsr r0
   110d0:	andeq	r1, r0, r4, lsr r0
   110d4:	ldr	r3, [pc, #-56]	; 110a4 <main@@Base+0x4d0>
   110d8:	add	r3, pc, r3
   110dc:	mov	r0, r3
   110e0:	bl	10a58 <puts@plt>
   110e4:	ldr	r0, [fp, #-12]
   110e8:	bl	11280 <imprimeArmazem@@Base>
   110ec:	ldr	r0, [fp, #-12]
   110f0:	bl	1152c <armazem_cheio@@Base>
   110f4:	mov	r3, r0
   110f8:	cmp	r3, #0
   110fc:	beq	11114 <main@@Base+0x540>
   11100:	ldr	r3, [pc, #-96]	; 110a8 <main@@Base+0x4d4>
   11104:	add	r3, pc, r3
   11108:	mov	r0, r3
   1110c:	bl	10a58 <puts@plt>
   11110:	b	11124 <main@@Base+0x550>
   11114:	ldr	r3, [pc, #-112]	; 110ac <main@@Base+0x4d8>
   11118:	add	r3, pc, r3
   1111c:	mov	r0, r3
   11120:	bl	10a58 <puts@plt>
   11124:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11128:	ldr	r0, [fp, #-12]
   1112c:	bl	115bc <armazenar_contentor@@Base>
   11130:	mov	r3, r0
   11134:	cmp	r3, #0
   11138:	beq	11158 <main@@Base+0x584>
   1113c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11140:	ldr	r3, [r3]
   11144:	mov	r1, r3
   11148:	ldr	r3, [pc, #-160]	; 110b0 <main@@Base+0x4dc>
   1114c:	add	r3, pc, r3
   11150:	mov	r0, r3
   11154:	bl	10a34 <printf@plt>
   11158:	ldr	r3, [pc, #-172]	; 110b4 <main@@Base+0x4e0>
   1115c:	add	r3, pc, r3
   11160:	mov	r0, r3
   11164:	bl	10a58 <puts@plt>
   11168:	mov	r3, #0
   1116c:	str	r3, [fp, #-8]
   11170:	b	111a4 <main@@Base+0x5d0>
   11174:	ldr	r0, [fp, #-12]
   11178:	bl	116a8 <expedir_contentor@@Base>
   1117c:	str	r0, [fp, #-68]	; 0xffffffbc
   11180:	ldr	r3, [pc, #-208]	; 110b8 <main@@Base+0x4e4>
   11184:	add	r3, pc, r3
   11188:	mov	r0, r3
   1118c:	bl	10a58 <puts@plt>
   11190:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11194:	bl	11864 <contentor_imprime@@Base>
   11198:	ldr	r3, [fp, #-8]
   1119c:	add	r3, r3, #1
   111a0:	str	r3, [fp, #-8]
   111a4:	ldr	r3, [fp, #-8]
   111a8:	cmp	r3, #7
   111ac:	ble	11174 <main@@Base+0x5a0>
   111b0:	ldr	r3, [pc, #-252]	; 110bc <main@@Base+0x4e8>
   111b4:	add	r3, pc, r3
   111b8:	mov	r0, r3
   111bc:	bl	10a58 <puts@plt>
   111c0:	ldr	r0, [fp, #-12]
   111c4:	bl	11280 <imprimeArmazem@@Base>
   111c8:	ldr	r3, [pc, #-272]	; 110c0 <main@@Base+0x4ec>
   111cc:	add	r3, pc, r3
   111d0:	mov	r0, r3
   111d4:	bl	10a58 <puts@plt>
   111d8:	mov	r3, #0
   111dc:	str	r3, [fp, #-8]
   111e0:	b	11214 <main@@Base+0x640>
   111e4:	ldr	r0, [fp, #-12]
   111e8:	bl	116a8 <expedir_contentor@@Base>
   111ec:	str	r0, [fp, #-68]	; 0xffffffbc
   111f0:	ldr	r3, [pc, #-308]	; 110c4 <main@@Base+0x4f0>
   111f4:	add	r3, pc, r3
   111f8:	mov	r0, r3
   111fc:	bl	10a58 <puts@plt>
   11200:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11204:	bl	11864 <contentor_imprime@@Base>
   11208:	ldr	r3, [fp, #-8]
   1120c:	add	r3, r3, #1
   11210:	str	r3, [fp, #-8]
   11214:	ldr	r3, [fp, #-8]
   11218:	cmp	r3, #3
   1121c:	ble	111e4 <main@@Base+0x610>
   11220:	ldr	r3, [pc, #-352]	; 110c8 <main@@Base+0x4f4>
   11224:	add	r3, pc, r3
   11228:	mov	r0, r3
   1122c:	bl	10a58 <puts@plt>
   11230:	ldr	r0, [fp, #-12]
   11234:	bl	11280 <imprimeArmazem@@Base>
   11238:	ldr	r0, [fp, #-12]
   1123c:	bl	114dc <armazem_vazio@@Base>
   11240:	mov	r3, r0
   11244:	cmp	r3, #0
   11248:	beq	11260 <main@@Base+0x68c>
   1124c:	ldr	r3, [pc, #-392]	; 110cc <main@@Base+0x4f8>
   11250:	add	r3, pc, r3
   11254:	mov	r0, r3
   11258:	bl	10a58 <puts@plt>
   1125c:	b	11270 <main@@Base+0x69c>
   11260:	ldr	r3, [pc, #-408]	; 110d0 <main@@Base+0x4fc>
   11264:	add	r3, pc, r3
   11268:	mov	r0, r3
   1126c:	bl	10a58 <puts@plt>
   11270:	mov	r3, #0
   11274:	mov	r0, r3
   11278:	sub	sp, fp, #4
   1127c:	pop	{fp, pc}

00011280 <imprimeArmazem@@Base>:
   11280:	push	{fp, lr}
   11284:	add	fp, sp, #4
   11288:	sub	sp, sp, #32
   1128c:	str	r0, [fp, #-32]	; 0xffffffe0
   11290:	mov	r3, #0
   11294:	str	r3, [fp, #-20]	; 0xffffffec
   11298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1129c:	cmp	r3, #0
   112a0:	beq	1145c <imprimeArmazem@@Base+0x1dc>
   112a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   112a8:	ldr	r3, [r3, #8]
   112ac:	cmp	r3, #0
   112b0:	beq	1145c <imprimeArmazem@@Base+0x1dc>
   112b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   112b8:	ldr	r3, [r3, #8]
   112bc:	ldr	r3, [r3, #4]
   112c0:	mov	r1, #4
   112c4:	mov	r0, r3
   112c8:	bl	10a28 <calloc@plt>
   112cc:	mov	r3, r0
   112d0:	str	r3, [fp, #-24]	; 0xffffffe8
   112d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   112d8:	ldr	r3, [r3, #8]
   112dc:	ldr	r3, [r3, #4]
   112e0:	str	r3, [fp, #-28]	; 0xffffffe4
   112e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   112e8:	ldr	r3, [r3, #8]
   112ec:	ldr	r3, [r3]
   112f0:	str	r3, [fp, #-16]
   112f4:	mov	r3, #0
   112f8:	str	r3, [fp, #-8]
   112fc:	b	11338 <imprimeArmazem@@Base+0xb8>
   11300:	ldr	r3, [fp, #-8]
   11304:	lsl	r3, r3, #2
   11308:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1130c:	add	r3, r2, r3
   11310:	ldr	r2, [fp, #-16]
   11314:	ldr	r2, [r2]
   11318:	ldr	r2, [r2, #4]
   1131c:	str	r2, [r3]
   11320:	ldr	r3, [fp, #-16]
   11324:	ldr	r3, [r3, #4]
   11328:	str	r3, [fp, #-16]
   1132c:	ldr	r3, [fp, #-8]
   11330:	add	r3, r3, #1
   11334:	str	r3, [fp, #-8]
   11338:	ldr	r3, [fp, #-16]
   1133c:	cmp	r3, #0
   11340:	bne	11300 <imprimeArmazem@@Base+0x80>
   11344:	mov	r0, #10
   11348:	bl	10a94 <putchar@plt>
   1134c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11350:	ldr	r3, [r3, #4]
   11354:	str	r3, [fp, #-12]
   11358:	b	113ec <imprimeArmazem@@Base+0x16c>
   1135c:	ldr	r3, [pc, #260]	; 11468 <imprimeArmazem@@Base+0x1e8>
   11360:	add	r3, pc, r3
   11364:	mov	r0, r3
   11368:	bl	10a34 <printf@plt>
   1136c:	mov	r3, #0
   11370:	str	r3, [fp, #-8]
   11374:	b	113c8 <imprimeArmazem@@Base+0x148>
   11378:	ldr	r3, [fp, #-8]
   1137c:	lsl	r3, r3, #2
   11380:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11384:	add	r3, r2, r3
   11388:	ldr	r2, [r3]
   1138c:	ldr	r3, [fp, #-12]
   11390:	cmp	r2, r3
   11394:	blt	113ac <imprimeArmazem@@Base+0x12c>
   11398:	ldr	r3, [pc, #204]	; 1146c <imprimeArmazem@@Base+0x1ec>
   1139c:	add	r3, pc, r3
   113a0:	mov	r0, r3
   113a4:	bl	10a34 <printf@plt>
   113a8:	b	113bc <imprimeArmazem@@Base+0x13c>
   113ac:	ldr	r3, [pc, #188]	; 11470 <imprimeArmazem@@Base+0x1f0>
   113b0:	add	r3, pc, r3
   113b4:	mov	r0, r3
   113b8:	bl	10a34 <printf@plt>
   113bc:	ldr	r3, [fp, #-8]
   113c0:	add	r3, r3, #1
   113c4:	str	r3, [fp, #-8]
   113c8:	ldr	r2, [fp, #-8]
   113cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   113d0:	cmp	r2, r3
   113d4:	blt	11378 <imprimeArmazem@@Base+0xf8>
   113d8:	mov	r0, #10
   113dc:	bl	10a94 <putchar@plt>
   113e0:	ldr	r3, [fp, #-12]
   113e4:	sub	r3, r3, #1
   113e8:	str	r3, [fp, #-12]
   113ec:	ldr	r3, [fp, #-12]
   113f0:	cmp	r3, #0
   113f4:	bgt	1135c <imprimeArmazem@@Base+0xdc>
   113f8:	ldr	r3, [pc, #116]	; 11474 <imprimeArmazem@@Base+0x1f4>
   113fc:	add	r3, pc, r3
   11400:	mov	r0, r3
   11404:	bl	10a34 <printf@plt>
   11408:	mov	r3, #0
   1140c:	str	r3, [fp, #-8]
   11410:	b	11430 <imprimeArmazem@@Base+0x1b0>
   11414:	ldr	r3, [pc, #92]	; 11478 <imprimeArmazem@@Base+0x1f8>
   11418:	add	r3, pc, r3
   1141c:	mov	r0, r3
   11420:	bl	10a34 <printf@plt>
   11424:	ldr	r3, [fp, #-8]
   11428:	add	r3, r3, #1
   1142c:	str	r3, [fp, #-8]
   11430:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11434:	ldr	r2, [r3]
   11438:	ldr	r3, [fp, #-8]
   1143c:	cmp	r2, r3
   11440:	bgt	11414 <imprimeArmazem@@Base+0x194>
   11444:	ldr	r3, [pc, #48]	; 1147c <imprimeArmazem@@Base+0x1fc>
   11448:	add	r3, pc, r3
   1144c:	mov	r0, r3
   11450:	bl	10a58 <puts@plt>
   11454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11458:	bl	10a40 <free@plt>
   1145c:	nop			; (mov r0, r0)
   11460:	sub	sp, fp, #4
   11464:	pop	{fp, pc}
   11468:	andeq	r0, r0, r0, ror #30
   1146c:	andeq	r0, r0, r8, lsr #30
   11470:	andeq	r0, r0, ip, lsl pc
   11474:	ldrdeq	r0, [r0], -r8
   11478:	andeq	r0, r0, r0, asr #29
   1147c:	muleq	r0, r8, lr

00011480 <armazem_novo@@Base>:
   11480:	push	{fp, lr}
   11484:	add	fp, sp, #4
   11488:	sub	sp, sp, #16
   1148c:	str	r0, [fp, #-16]
   11490:	str	r1, [fp, #-20]	; 0xffffffec
   11494:	mov	r0, #12
   11498:	bl	10a64 <malloc@plt>
   1149c:	mov	r3, r0
   114a0:	str	r3, [fp, #-8]
   114a4:	ldr	r3, [fp, #-8]
   114a8:	ldr	r2, [fp, #-16]
   114ac:	str	r2, [r3]
   114b0:	ldr	r3, [fp, #-8]
   114b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   114b8:	str	r2, [r3, #4]
   114bc:	bl	11948 <fila_nova@@Base>
   114c0:	mov	r2, r0
   114c4:	ldr	r3, [fp, #-8]
   114c8:	str	r2, [r3, #8]
   114cc:	ldr	r3, [fp, #-8]
   114d0:	mov	r0, r3
   114d4:	sub	sp, fp, #4
   114d8:	pop	{fp, pc}

000114dc <armazem_vazio@@Base>:
   114dc:	push	{fp, lr}
   114e0:	add	fp, sp, #4
   114e4:	sub	sp, sp, #8
   114e8:	str	r0, [fp, #-8]
   114ec:	ldr	r3, [fp, #-8]
   114f0:	cmp	r3, #0
   114f4:	beq	11514 <armazem_vazio@@Base+0x38>
   114f8:	ldr	r3, [fp, #-8]
   114fc:	ldr	r3, [r3, #8]
   11500:	mov	r0, r3
   11504:	bl	11a24 <fila_tamanho@@Base>
   11508:	mov	r3, r0
   1150c:	cmp	r3, #0
   11510:	bne	1151c <armazem_vazio@@Base+0x40>
   11514:	mov	r3, #1
   11518:	b	11520 <armazem_vazio@@Base+0x44>
   1151c:	mov	r3, #0
   11520:	mov	r0, r3
   11524:	sub	sp, fp, #4
   11528:	pop	{fp, pc}

0001152c <armazem_cheio@@Base>:
   1152c:	push	{fp, lr}
   11530:	add	fp, sp, #4
   11534:	sub	sp, sp, #8
   11538:	str	r0, [fp, #-8]
   1153c:	ldr	r0, [fp, #-8]
   11540:	bl	114dc <armazem_vazio@@Base>
   11544:	mov	r3, r0
   11548:	cmp	r3, #0
   1154c:	beq	11558 <armazem_cheio@@Base+0x2c>
   11550:	mov	r3, #0
   11554:	b	115b0 <armazem_cheio@@Base+0x84>
   11558:	ldr	r3, [fp, #-8]
   1155c:	ldr	r3, [r3, #8]
   11560:	mov	r0, r3
   11564:	bl	11a24 <fila_tamanho@@Base>
   11568:	mov	r2, r0
   1156c:	ldr	r3, [fp, #-8]
   11570:	ldr	r3, [r3]
   11574:	cmp	r2, r3
   11578:	bne	115ac <armazem_cheio@@Base+0x80>
   1157c:	ldr	r3, [fp, #-8]
   11580:	ldr	r3, [r3, #8]
   11584:	mov	r0, r3
   11588:	bl	11ab8 <fila_back@@Base>
   1158c:	mov	r3, r0
   11590:	ldr	r2, [r3, #4]
   11594:	ldr	r3, [fp, #-8]
   11598:	ldr	r3, [r3, #4]
   1159c:	cmp	r2, r3
   115a0:	bne	115ac <armazem_cheio@@Base+0x80>
   115a4:	mov	r3, #1
   115a8:	b	115b0 <armazem_cheio@@Base+0x84>
   115ac:	mov	r3, #0
   115b0:	mov	r0, r3
   115b4:	sub	sp, fp, #4
   115b8:	pop	{fp, pc}

000115bc <armazenar_contentor@@Base>:
   115bc:	push	{r4, fp, lr}
   115c0:	add	fp, sp, #8
   115c4:	sub	sp, sp, #20
   115c8:	str	r0, [fp, #-24]	; 0xffffffe8
   115cc:	str	r1, [fp, #-28]	; 0xffffffe4
   115d0:	bl	11d18 <pilha_nova@@Base>
   115d4:	str	r0, [fp, #-16]
   115d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115dc:	cmp	r3, #0
   115e0:	beq	11604 <armazenar_contentor@@Base+0x48>
   115e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   115e8:	cmp	r3, #0
   115ec:	beq	11604 <armazenar_contentor@@Base+0x48>
   115f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115f4:	bl	1152c <armazem_cheio@@Base>
   115f8:	mov	r3, r0
   115fc:	cmp	r3, #0
   11600:	beq	1160c <armazenar_contentor@@Base+0x50>
   11604:	mov	r3, #0
   11608:	b	1169c <armazenar_contentor@@Base+0xe0>
   1160c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11610:	bl	114dc <armazem_vazio@@Base>
   11614:	mov	r3, r0
   11618:	cmp	r3, #0
   1161c:	beq	1163c <armazenar_contentor@@Base+0x80>
   11620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11624:	ldr	r4, [r3, #8]
   11628:	bl	11d18 <pilha_nova@@Base>
   1162c:	mov	r3, r0
   11630:	mov	r1, r3
   11634:	mov	r0, r4
   11638:	bl	11b30 <fila_push@@Base>
   1163c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11640:	ldr	r3, [r3, #8]
   11644:	mov	r0, r3
   11648:	bl	11ab8 <fila_back@@Base>
   1164c:	mov	r3, r0
   11650:	ldr	r2, [r3, #4]
   11654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11658:	ldr	r3, [r3, #4]
   1165c:	cmp	r2, r3
   11660:	bne	11678 <armazenar_contentor@@Base+0xbc>
   11664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11668:	ldr	r3, [r3, #8]
   1166c:	ldr	r1, [fp, #-16]
   11670:	mov	r0, r3
   11674:	bl	11b30 <fila_push@@Base>
   11678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1167c:	ldr	r3, [r3, #8]
   11680:	mov	r0, r3
   11684:	bl	11ab8 <fila_back@@Base>
   11688:	mov	r3, r0
   1168c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11690:	mov	r0, r3
   11694:	bl	11e88 <pilha_push@@Base>
   11698:	mov	r3, #1
   1169c:	mov	r0, r3
   116a0:	sub	sp, fp, #8
   116a4:	pop	{r4, fp, pc}

000116a8 <expedir_contentor@@Base>:
   116a8:	push	{r4, fp, lr}
   116ac:	add	fp, sp, #8
   116b0:	sub	sp, sp, #20
   116b4:	str	r0, [fp, #-24]	; 0xffffffe8
   116b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116bc:	bl	114dc <armazem_vazio@@Base>
   116c0:	mov	r3, r0
   116c4:	cmp	r3, #0
   116c8:	bne	116f4 <expedir_contentor@@Base+0x4c>
   116cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116d0:	ldr	r3, [r3, #8]
   116d4:	mov	r0, r3
   116d8:	bl	11a60 <fila_front@@Base>
   116dc:	mov	r3, r0
   116e0:	mov	r0, r3
   116e4:	bl	11e30 <pilha_top@@Base>
   116e8:	mov	r3, r0
   116ec:	cmp	r3, #0
   116f0:	bne	116fc <expedir_contentor@@Base+0x54>
   116f4:	mov	r3, #0
   116f8:	b	117a8 <expedir_contentor@@Base+0x100>
   116fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11700:	ldr	r3, [r3, #8]
   11704:	mov	r0, r3
   11708:	bl	11a60 <fila_front@@Base>
   1170c:	mov	r3, r0
   11710:	mov	r0, r3
   11714:	bl	11e30 <pilha_top@@Base>
   11718:	mov	r3, r0
   1171c:	ldr	r4, [r3]
   11720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11724:	ldr	r3, [r3, #8]
   11728:	mov	r0, r3
   1172c:	bl	11a60 <fila_front@@Base>
   11730:	mov	r3, r0
   11734:	mov	r0, r3
   11738:	bl	11e30 <pilha_top@@Base>
   1173c:	mov	r3, r0
   11740:	vldr	s15, [r3, #4]
   11744:	vmov.f32	s0, s15
   11748:	mov	r0, r4
   1174c:	bl	117b4 <contentor_novo@@Base>
   11750:	str	r0, [fp, #-16]
   11754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11758:	ldr	r3, [r3, #8]
   1175c:	mov	r0, r3
   11760:	bl	11a60 <fila_front@@Base>
   11764:	mov	r3, r0
   11768:	ldr	r3, [r3, #4]
   1176c:	cmp	r3, #1
   11770:	bgt	11788 <expedir_contentor@@Base+0xe0>
   11774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11778:	ldr	r3, [r3, #8]
   1177c:	mov	r0, r3
   11780:	bl	11bf4 <fila_pop@@Base>
   11784:	b	117a4 <expedir_contentor@@Base+0xfc>
   11788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1178c:	ldr	r3, [r3, #8]
   11790:	mov	r0, r3
   11794:	bl	11a60 <fila_front@@Base>
   11798:	mov	r3, r0
   1179c:	mov	r0, r3
   117a0:	bl	11f30 <pilha_pop@@Base>
   117a4:	ldr	r3, [fp, #-16]
   117a8:	mov	r0, r3
   117ac:	sub	sp, fp, #8
   117b0:	pop	{r4, fp, pc}

000117b4 <contentor_novo@@Base>:
   117b4:	push	{fp, lr}
   117b8:	add	fp, sp, #4
   117bc:	sub	sp, sp, #16
   117c0:	str	r0, [fp, #-16]
   117c4:	vstr	s0, [fp, #-20]	; 0xffffffec
   117c8:	mov	r0, #8
   117cc:	bl	10a64 <malloc@plt>
   117d0:	mov	r3, r0
   117d4:	str	r3, [fp, #-8]
   117d8:	ldr	r0, [fp, #-16]
   117dc:	bl	10a88 <strlen@plt>
   117e0:	mov	r3, r0
   117e4:	add	r3, r3, #1
   117e8:	mov	r0, r3
   117ec:	bl	10a64 <malloc@plt>
   117f0:	mov	r3, r0
   117f4:	mov	r2, r3
   117f8:	ldr	r3, [fp, #-8]
   117fc:	str	r2, [r3]
   11800:	ldr	r3, [fp, #-8]
   11804:	ldr	r3, [r3]
   11808:	ldr	r1, [fp, #-16]
   1180c:	mov	r0, r3
   11810:	bl	10a4c <strcpy@plt>
   11814:	ldr	r3, [fp, #-8]
   11818:	ldr	r2, [fp, #-20]	; 0xffffffec
   1181c:	str	r2, [r3, #4]
   11820:	ldr	r3, [fp, #-8]
   11824:	mov	r0, r3
   11828:	sub	sp, fp, #4
   1182c:	pop	{fp, pc}

00011830 <contentor_apaga@@Base>:
   11830:	push	{fp, lr}
   11834:	add	fp, sp, #4
   11838:	sub	sp, sp, #8
   1183c:	str	r0, [fp, #-8]
   11840:	ldr	r3, [fp, #-8]
   11844:	ldr	r3, [r3]
   11848:	mov	r0, r3
   1184c:	bl	10a40 <free@plt>
   11850:	ldr	r0, [fp, #-8]
   11854:	bl	10a40 <free@plt>
   11858:	nop			; (mov r0, r0)
   1185c:	sub	sp, fp, #4
   11860:	pop	{fp, pc}

00011864 <contentor_imprime@@Base>:
   11864:	push	{fp, lr}
   11868:	add	fp, sp, #4
   1186c:	sub	sp, sp, #8
   11870:	str	r0, [fp, #-8]
   11874:	ldr	r3, [fp, #-8]
   11878:	cmp	r3, #0
   1187c:	bne	11894 <contentor_imprime@@Base+0x30>
   11880:	ldr	r3, [pc, #60]	; 118c4 <contentor_imprime@@Base+0x60>
   11884:	add	r3, pc, r3
   11888:	mov	r0, r3
   1188c:	bl	10a58 <puts@plt>
   11890:	b	118b8 <contentor_imprime@@Base+0x54>
   11894:	ldr	r3, [fp, #-8]
   11898:	ldr	r1, [r3]
   1189c:	ldr	r3, [fp, #-8]
   118a0:	vldr	s15, [r3, #4]
   118a4:	vcvt.f64.f32	d7, s15
   118a8:	vmov	r2, r3, d7
   118ac:	ldr	r0, [pc, #20]	; 118c8 <contentor_imprime@@Base+0x64>
   118b0:	add	r0, pc, r0
   118b4:	bl	10a34 <printf@plt>
   118b8:	nop			; (mov r0, r0)
   118bc:	sub	sp, fp, #4
   118c0:	pop	{fp, pc}
   118c4:	andeq	r0, r0, r0, ror #20
   118c8:	andeq	r0, r0, r4, asr #20

000118cc <fila_novo_elemento@@Base>:
   118cc:	push	{fp, lr}
   118d0:	add	fp, sp, #4
   118d4:	sub	sp, sp, #16
   118d8:	str	r0, [fp, #-16]
   118dc:	mov	r0, #8
   118e0:	bl	10a64 <malloc@plt>
   118e4:	mov	r3, r0
   118e8:	str	r3, [fp, #-8]
   118ec:	ldr	r3, [fp, #-8]
   118f0:	cmp	r3, #0
   118f4:	bne	11900 <fila_novo_elemento@@Base+0x34>
   118f8:	mov	r3, #0
   118fc:	b	1193c <fila_novo_elemento@@Base+0x70>
   11900:	ldr	r3, [fp, #-8]
   11904:	ldr	r2, [fp, #-16]
   11908:	str	r2, [r3]
   1190c:	ldr	r3, [fp, #-8]
   11910:	ldr	r3, [r3]
   11914:	cmp	r3, #0
   11918:	bne	1192c <fila_novo_elemento@@Base+0x60>
   1191c:	ldr	r0, [fp, #-8]
   11920:	bl	10a40 <free@plt>
   11924:	mov	r3, #0
   11928:	b	1193c <fila_novo_elemento@@Base+0x70>
   1192c:	ldr	r3, [fp, #-8]
   11930:	mov	r2, #0
   11934:	str	r2, [r3, #4]
   11938:	ldr	r3, [fp, #-8]
   1193c:	mov	r0, r3
   11940:	sub	sp, fp, #4
   11944:	pop	{fp, pc}

00011948 <fila_nova@@Base>:
   11948:	push	{fp, lr}
   1194c:	add	fp, sp, #4
   11950:	sub	sp, sp, #8
   11954:	mov	r0, #8
   11958:	bl	10a64 <malloc@plt>
   1195c:	mov	r3, r0
   11960:	str	r3, [fp, #-8]
   11964:	ldr	r3, [fp, #-8]
   11968:	cmp	r3, #0
   1196c:	bne	11978 <fila_nova@@Base+0x30>
   11970:	mov	r3, #0
   11974:	b	11994 <fila_nova@@Base+0x4c>
   11978:	ldr	r3, [fp, #-8]
   1197c:	mov	r2, #0
   11980:	str	r2, [r3]
   11984:	ldr	r3, [fp, #-8]
   11988:	mov	r2, #0
   1198c:	str	r2, [r3, #4]
   11990:	ldr	r3, [fp, #-8]
   11994:	mov	r0, r3
   11998:	sub	sp, fp, #4
   1199c:	pop	{fp, pc}

000119a0 <fila_apaga@@Base>:
   119a0:	push	{fp, lr}
   119a4:	add	fp, sp, #4
   119a8:	sub	sp, sp, #16
   119ac:	str	r0, [fp, #-16]
   119b0:	ldr	r3, [fp, #-16]
   119b4:	cmp	r3, #0
   119b8:	beq	11a18 <fila_apaga@@Base+0x78>
   119bc:	b	119f8 <fila_apaga@@Base+0x58>
   119c0:	ldr	r3, [fp, #-16]
   119c4:	ldr	r3, [r3]
   119c8:	str	r3, [fp, #-8]
   119cc:	ldr	r3, [fp, #-16]
   119d0:	ldr	r3, [r3]
   119d4:	ldr	r2, [r3, #4]
   119d8:	ldr	r3, [fp, #-16]
   119dc:	str	r2, [r3]
   119e0:	ldr	r3, [fp, #-8]
   119e4:	ldr	r3, [r3]
   119e8:	mov	r0, r3
   119ec:	bl	11d70 <pilha_apaga@@Base>
   119f0:	ldr	r0, [fp, #-8]
   119f4:	bl	10a40 <free@plt>
   119f8:	ldr	r3, [fp, #-16]
   119fc:	ldr	r3, [r3]
   11a00:	cmp	r3, #0
   11a04:	bne	119c0 <fila_apaga@@Base+0x20>
   11a08:	ldr	r0, [fp, #-16]
   11a0c:	bl	10a40 <free@plt>
   11a10:	nop			; (mov r0, r0)
   11a14:	b	11a1c <fila_apaga@@Base+0x7c>
   11a18:	nop			; (mov r0, r0)
   11a1c:	sub	sp, fp, #4
   11a20:	pop	{fp, pc}

00011a24 <fila_tamanho@@Base>:
   11a24:	push	{fp}		; (str fp, [sp, #-4]!)
   11a28:	add	fp, sp, #0
   11a2c:	sub	sp, sp, #12
   11a30:	str	r0, [fp, #-8]
   11a34:	ldr	r3, [fp, #-8]
   11a38:	cmp	r3, #0
   11a3c:	bne	11a48 <fila_tamanho@@Base+0x24>
   11a40:	mvn	r3, #0
   11a44:	b	11a50 <fila_tamanho@@Base+0x2c>
   11a48:	ldr	r3, [fp, #-8]
   11a4c:	ldr	r3, [r3, #4]
   11a50:	mov	r0, r3
   11a54:	add	sp, fp, #0
   11a58:	pop	{fp}		; (ldr fp, [sp], #4)
   11a5c:	bx	lr

00011a60 <fila_front@@Base>:
   11a60:	push	{fp}		; (str fp, [sp, #-4]!)
   11a64:	add	fp, sp, #0
   11a68:	sub	sp, sp, #20
   11a6c:	str	r0, [fp, #-16]
   11a70:	ldr	r3, [fp, #-16]
   11a74:	cmp	r3, #0
   11a78:	beq	11a8c <fila_front@@Base+0x2c>
   11a7c:	ldr	r3, [fp, #-16]
   11a80:	ldr	r3, [r3, #4]
   11a84:	cmp	r3, #0
   11a88:	bne	11a94 <fila_front@@Base+0x34>
   11a8c:	mov	r3, #0
   11a90:	b	11aa8 <fila_front@@Base+0x48>
   11a94:	ldr	r3, [fp, #-16]
   11a98:	ldr	r3, [r3]
   11a9c:	str	r3, [fp, #-8]
   11aa0:	ldr	r3, [fp, #-8]
   11aa4:	ldr	r3, [r3]
   11aa8:	mov	r0, r3
   11aac:	add	sp, fp, #0
   11ab0:	pop	{fp}		; (ldr fp, [sp], #4)
   11ab4:	bx	lr

00011ab8 <fila_back@@Base>:
   11ab8:	push	{fp}		; (str fp, [sp, #-4]!)
   11abc:	add	fp, sp, #0
   11ac0:	sub	sp, sp, #20
   11ac4:	str	r0, [fp, #-16]
   11ac8:	ldr	r3, [fp, #-16]
   11acc:	cmp	r3, #0
   11ad0:	beq	11ae4 <fila_back@@Base+0x2c>
   11ad4:	ldr	r3, [fp, #-16]
   11ad8:	ldr	r3, [r3, #4]
   11adc:	cmp	r3, #0
   11ae0:	bne	11aec <fila_back@@Base+0x34>
   11ae4:	mov	r3, #0
   11ae8:	b	11b20 <fila_back@@Base+0x68>
   11aec:	ldr	r3, [fp, #-16]
   11af0:	ldr	r3, [r3]
   11af4:	str	r3, [fp, #-8]
   11af8:	b	11b08 <fila_back@@Base+0x50>
   11afc:	ldr	r3, [fp, #-8]
   11b00:	ldr	r3, [r3, #4]
   11b04:	str	r3, [fp, #-8]
   11b08:	ldr	r3, [fp, #-8]
   11b0c:	ldr	r3, [r3, #4]
   11b10:	cmp	r3, #0
   11b14:	bne	11afc <fila_back@@Base+0x44>
   11b18:	ldr	r3, [fp, #-8]
   11b1c:	ldr	r3, [r3]
   11b20:	mov	r0, r3
   11b24:	add	sp, fp, #0
   11b28:	pop	{fp}		; (ldr fp, [sp], #4)
   11b2c:	bx	lr

00011b30 <fila_push@@Base>:
   11b30:	push	{fp, lr}
   11b34:	add	fp, sp, #4
   11b38:	sub	sp, sp, #24
   11b3c:	str	r0, [fp, #-24]	; 0xffffffe8
   11b40:	str	r1, [fp, #-28]	; 0xffffffe4
   11b44:	mov	r3, #0
   11b48:	str	r3, [fp, #-12]
   11b4c:	mov	r3, #0
   11b50:	str	r3, [fp, #-16]
   11b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b58:	cmp	r3, #0
   11b5c:	beq	11be0 <fila_push@@Base+0xb0>
   11b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b64:	ldr	r3, [r3]
   11b68:	str	r3, [fp, #-8]
   11b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b70:	bl	118cc <fila_novo_elemento@@Base>
   11b74:	str	r0, [fp, #-16]
   11b78:	ldr	r3, [fp, #-16]
   11b7c:	cmp	r3, #0
   11b80:	beq	11be8 <fila_push@@Base+0xb8>
   11b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b88:	ldr	r3, [r3, #4]
   11b8c:	add	r2, r3, #1
   11b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b94:	str	r2, [r3, #4]
   11b98:	ldr	r3, [fp, #-8]
   11b9c:	cmp	r3, #0
   11ba0:	bne	11bc0 <fila_push@@Base+0x90>
   11ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ba8:	ldr	r2, [fp, #-16]
   11bac:	str	r2, [r3]
   11bb0:	b	11bec <fila_push@@Base+0xbc>
   11bb4:	ldr	r3, [fp, #-8]
   11bb8:	ldr	r3, [r3, #4]
   11bbc:	str	r3, [fp, #-8]
   11bc0:	ldr	r3, [fp, #-8]
   11bc4:	ldr	r3, [r3, #4]
   11bc8:	cmp	r3, #0
   11bcc:	bne	11bb4 <fila_push@@Base+0x84>
   11bd0:	ldr	r3, [fp, #-8]
   11bd4:	ldr	r2, [fp, #-16]
   11bd8:	str	r2, [r3, #4]
   11bdc:	b	11bec <fila_push@@Base+0xbc>
   11be0:	nop			; (mov r0, r0)
   11be4:	b	11bec <fila_push@@Base+0xbc>
   11be8:	nop			; (mov r0, r0)
   11bec:	sub	sp, fp, #4
   11bf0:	pop	{fp, pc}

00011bf4 <fila_pop@@Base>:
   11bf4:	push	{fp, lr}
   11bf8:	add	fp, sp, #4
   11bfc:	sub	sp, sp, #16
   11c00:	str	r0, [fp, #-16]
   11c04:	mov	r3, #0
   11c08:	str	r3, [fp, #-8]
   11c0c:	ldr	r3, [fp, #-16]
   11c10:	cmp	r3, #0
   11c14:	beq	11c74 <fila_pop@@Base+0x80>
   11c18:	ldr	r3, [fp, #-16]
   11c1c:	ldr	r3, [r3, #4]
   11c20:	cmp	r3, #0
   11c24:	beq	11c74 <fila_pop@@Base+0x80>
   11c28:	ldr	r3, [fp, #-16]
   11c2c:	ldr	r3, [r3]
   11c30:	str	r3, [fp, #-12]
   11c34:	ldr	r3, [fp, #-16]
   11c38:	ldr	r3, [r3, #4]
   11c3c:	sub	r2, r3, #1
   11c40:	ldr	r3, [fp, #-16]
   11c44:	str	r2, [r3, #4]
   11c48:	ldr	r3, [fp, #-12]
   11c4c:	ldr	r2, [r3, #4]
   11c50:	ldr	r3, [fp, #-16]
   11c54:	str	r2, [r3]
   11c58:	ldr	r3, [fp, #-12]
   11c5c:	ldr	r3, [r3]
   11c60:	mov	r0, r3
   11c64:	bl	11d70 <pilha_apaga@@Base>
   11c68:	ldr	r0, [fp, #-12]
   11c6c:	bl	10a40 <free@plt>
   11c70:	b	11c78 <fila_pop@@Base+0x84>
   11c74:	nop			; (mov r0, r0)
   11c78:	sub	sp, fp, #4
   11c7c:	pop	{fp, pc}

00011c80 <pilha_novo_elemento@@Base>:
   11c80:	push	{fp, lr}
   11c84:	add	fp, sp, #4
   11c88:	sub	sp, sp, #16
   11c8c:	str	r0, [fp, #-16]
   11c90:	mov	r0, #8
   11c94:	bl	10a64 <malloc@plt>
   11c98:	mov	r3, r0
   11c9c:	str	r3, [fp, #-8]
   11ca0:	ldr	r3, [fp, #-8]
   11ca4:	cmp	r3, #0
   11ca8:	bne	11cb4 <pilha_novo_elemento@@Base+0x34>
   11cac:	mov	r3, #0
   11cb0:	b	11d0c <pilha_novo_elemento@@Base+0x8c>
   11cb4:	ldr	r3, [fp, #-16]
   11cb8:	ldr	r2, [r3]
   11cbc:	ldr	r3, [fp, #-16]
   11cc0:	vldr	s15, [r3, #4]
   11cc4:	vmov.f32	s0, s15
   11cc8:	mov	r0, r2
   11ccc:	bl	117b4 <contentor_novo@@Base>
   11cd0:	mov	r2, r0
   11cd4:	ldr	r3, [fp, #-8]
   11cd8:	str	r2, [r3]
   11cdc:	ldr	r3, [fp, #-8]
   11ce0:	ldr	r3, [r3]
   11ce4:	cmp	r3, #0
   11ce8:	bne	11cfc <pilha_novo_elemento@@Base+0x7c>
   11cec:	ldr	r0, [fp, #-8]
   11cf0:	bl	10a40 <free@plt>
   11cf4:	mov	r3, #0
   11cf8:	b	11d0c <pilha_novo_elemento@@Base+0x8c>
   11cfc:	ldr	r3, [fp, #-8]
   11d00:	mov	r2, #0
   11d04:	str	r2, [r3, #4]
   11d08:	ldr	r3, [fp, #-8]
   11d0c:	mov	r0, r3
   11d10:	sub	sp, fp, #4
   11d14:	pop	{fp, pc}

00011d18 <pilha_nova@@Base>:
   11d18:	push	{fp, lr}
   11d1c:	add	fp, sp, #4
   11d20:	sub	sp, sp, #8
   11d24:	mov	r0, #8
   11d28:	bl	10a64 <malloc@plt>
   11d2c:	mov	r3, r0
   11d30:	str	r3, [fp, #-8]
   11d34:	ldr	r3, [fp, #-8]
   11d38:	cmp	r3, #0
   11d3c:	bne	11d48 <pilha_nova@@Base+0x30>
   11d40:	mov	r3, #0
   11d44:	b	11d64 <pilha_nova@@Base+0x4c>
   11d48:	ldr	r3, [fp, #-8]
   11d4c:	mov	r2, #0
   11d50:	str	r2, [r3]
   11d54:	ldr	r3, [fp, #-8]
   11d58:	mov	r2, #0
   11d5c:	str	r2, [r3, #4]
   11d60:	ldr	r3, [fp, #-8]
   11d64:	mov	r0, r3
   11d68:	sub	sp, fp, #4
   11d6c:	pop	{fp, pc}

00011d70 <pilha_apaga@@Base>:
   11d70:	push	{fp, lr}
   11d74:	add	fp, sp, #4
   11d78:	sub	sp, sp, #16
   11d7c:	str	r0, [fp, #-16]
   11d80:	ldr	r3, [fp, #-16]
   11d84:	cmp	r3, #0
   11d88:	beq	11de8 <pilha_apaga@@Base+0x78>
   11d8c:	b	11dc8 <pilha_apaga@@Base+0x58>
   11d90:	ldr	r3, [fp, #-16]
   11d94:	ldr	r3, [r3]
   11d98:	str	r3, [fp, #-8]
   11d9c:	ldr	r3, [fp, #-16]
   11da0:	ldr	r3, [r3]
   11da4:	ldr	r2, [r3, #4]
   11da8:	ldr	r3, [fp, #-16]
   11dac:	str	r2, [r3]
   11db0:	ldr	r3, [fp, #-8]
   11db4:	ldr	r3, [r3]
   11db8:	mov	r0, r3
   11dbc:	bl	11830 <contentor_apaga@@Base>
   11dc0:	ldr	r0, [fp, #-8]
   11dc4:	bl	10a40 <free@plt>
   11dc8:	ldr	r3, [fp, #-16]
   11dcc:	ldr	r3, [r3]
   11dd0:	cmp	r3, #0
   11dd4:	bne	11d90 <pilha_apaga@@Base+0x20>
   11dd8:	ldr	r0, [fp, #-16]
   11ddc:	bl	10a40 <free@plt>
   11de0:	nop			; (mov r0, r0)
   11de4:	b	11dec <pilha_apaga@@Base+0x7c>
   11de8:	nop			; (mov r0, r0)
   11dec:	sub	sp, fp, #4
   11df0:	pop	{fp, pc}

00011df4 <pilha_tamanho@@Base>:
   11df4:	push	{fp}		; (str fp, [sp, #-4]!)
   11df8:	add	fp, sp, #0
   11dfc:	sub	sp, sp, #12
   11e00:	str	r0, [fp, #-8]
   11e04:	ldr	r3, [fp, #-8]
   11e08:	cmp	r3, #0
   11e0c:	bne	11e18 <pilha_tamanho@@Base+0x24>
   11e10:	mvn	r3, #0
   11e14:	b	11e20 <pilha_tamanho@@Base+0x2c>
   11e18:	ldr	r3, [fp, #-8]
   11e1c:	ldr	r3, [r3, #4]
   11e20:	mov	r0, r3
   11e24:	add	sp, fp, #0
   11e28:	pop	{fp}		; (ldr fp, [sp], #4)
   11e2c:	bx	lr

00011e30 <pilha_top@@Base>:
   11e30:	push	{fp}		; (str fp, [sp, #-4]!)
   11e34:	add	fp, sp, #0
   11e38:	sub	sp, sp, #20
   11e3c:	str	r0, [fp, #-16]
   11e40:	ldr	r3, [fp, #-16]
   11e44:	cmp	r3, #0
   11e48:	beq	11e5c <pilha_top@@Base+0x2c>
   11e4c:	ldr	r3, [fp, #-16]
   11e50:	ldr	r3, [r3, #4]
   11e54:	cmp	r3, #0
   11e58:	bne	11e64 <pilha_top@@Base+0x34>
   11e5c:	mov	r3, #0
   11e60:	b	11e78 <pilha_top@@Base+0x48>
   11e64:	ldr	r3, [fp, #-16]
   11e68:	ldr	r3, [r3]
   11e6c:	str	r3, [fp, #-8]
   11e70:	ldr	r3, [fp, #-8]
   11e74:	ldr	r3, [r3]
   11e78:	mov	r0, r3
   11e7c:	add	sp, fp, #0
   11e80:	pop	{fp}		; (ldr fp, [sp], #4)
   11e84:	bx	lr

00011e88 <pilha_push@@Base>:
   11e88:	push	{fp, lr}
   11e8c:	add	fp, sp, #4
   11e90:	sub	sp, sp, #16
   11e94:	str	r0, [fp, #-16]
   11e98:	str	r1, [fp, #-20]	; 0xffffffec
   11e9c:	mov	r3, #0
   11ea0:	str	r3, [fp, #-8]
   11ea4:	ldr	r3, [fp, #-16]
   11ea8:	cmp	r3, #0
   11eac:	beq	11f1c <pilha_push@@Base+0x94>
   11eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11eb4:	bl	11c80 <pilha_novo_elemento@@Base>
   11eb8:	str	r0, [fp, #-8]
   11ebc:	ldr	r3, [fp, #-8]
   11ec0:	cmp	r3, #0
   11ec4:	beq	11f24 <pilha_push@@Base+0x9c>
   11ec8:	ldr	r3, [fp, #-16]
   11ecc:	ldr	r3, [r3, #4]
   11ed0:	add	r2, r3, #1
   11ed4:	ldr	r3, [fp, #-16]
   11ed8:	str	r2, [r3, #4]
   11edc:	ldr	r3, [fp, #-16]
   11ee0:	ldr	r3, [r3]
   11ee4:	cmp	r3, #0
   11ee8:	bne	11efc <pilha_push@@Base+0x74>
   11eec:	ldr	r3, [fp, #-16]
   11ef0:	ldr	r2, [fp, #-8]
   11ef4:	str	r2, [r3]
   11ef8:	b	11f28 <pilha_push@@Base+0xa0>
   11efc:	ldr	r3, [fp, #-16]
   11f00:	ldr	r2, [r3]
   11f04:	ldr	r3, [fp, #-8]
   11f08:	str	r2, [r3, #4]
   11f0c:	ldr	r3, [fp, #-16]
   11f10:	ldr	r2, [fp, #-8]
   11f14:	str	r2, [r3]
   11f18:	b	11f28 <pilha_push@@Base+0xa0>
   11f1c:	nop			; (mov r0, r0)
   11f20:	b	11f28 <pilha_push@@Base+0xa0>
   11f24:	nop			; (mov r0, r0)
   11f28:	sub	sp, fp, #4
   11f2c:	pop	{fp, pc}

00011f30 <pilha_pop@@Base>:
   11f30:	push	{fp, lr}
   11f34:	add	fp, sp, #4
   11f38:	sub	sp, sp, #16
   11f3c:	str	r0, [fp, #-16]
   11f40:	ldr	r3, [fp, #-16]
   11f44:	cmp	r3, #0
   11f48:	beq	11fa8 <pilha_pop@@Base+0x78>
   11f4c:	ldr	r3, [fp, #-16]
   11f50:	ldr	r3, [r3, #4]
   11f54:	cmp	r3, #0
   11f58:	beq	11fa8 <pilha_pop@@Base+0x78>
   11f5c:	ldr	r3, [fp, #-16]
   11f60:	ldr	r3, [r3]
   11f64:	str	r3, [fp, #-8]
   11f68:	ldr	r3, [fp, #-8]
   11f6c:	ldr	r2, [r3, #4]
   11f70:	ldr	r3, [fp, #-16]
   11f74:	str	r2, [r3]
   11f78:	ldr	r3, [fp, #-16]
   11f7c:	ldr	r3, [r3, #4]
   11f80:	sub	r2, r3, #1
   11f84:	ldr	r3, [fp, #-16]
   11f88:	str	r2, [r3, #4]
   11f8c:	ldr	r3, [fp, #-8]
   11f90:	ldr	r3, [r3]
   11f94:	mov	r0, r3
   11f98:	bl	11830 <contentor_apaga@@Base>
   11f9c:	ldr	r0, [fp, #-8]
   11fa0:	bl	10a40 <free@plt>
   11fa4:	b	11fac <pilha_pop@@Base+0x7c>
   11fa8:	nop			; (mov r0, r0)
   11fac:	sub	sp, fp, #4
   11fb0:	pop	{fp, pc}

00011fb4 <__libc_csu_init@@Base>:
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11fb8:	mov	r7, r0
   11fbc:	ldr	r6, [pc, #72]	; 1200c <__libc_csu_init@@Base+0x58>
   11fc0:	ldr	r5, [pc, #72]	; 12010 <__libc_csu_init@@Base+0x5c>
   11fc4:	add	r6, pc, r6
   11fc8:	add	r5, pc, r5
   11fcc:	sub	r6, r6, r5
   11fd0:	mov	r8, r1
   11fd4:	mov	r9, r2
   11fd8:	bl	10a08 <calloc@plt-0x20>
   11fdc:	asrs	r6, r6, #2
   11fe0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fe4:	mov	r4, #0
   11fe8:	add	r4, r4, #1
   11fec:	ldr	r3, [r5], #4
   11ff0:	mov	r2, r9
   11ff4:	mov	r1, r8
   11ff8:	mov	r0, r7
   11ffc:	blx	r3
   12000:	cmp	r6, r4
   12004:	bne	11fe8 <__libc_csu_init@@Base+0x34>
   12008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1200c:	andeq	r0, r1, r4, asr #30
   12010:	andeq	r0, r1, ip, lsr pc

00012014 <__libc_csu_fini@@Base>:
   12014:	bx	lr

Disassembly of section .fini:

00012018 <.fini>:
   12018:	push	{r3, lr}
   1201c:	pop	{r3, pc}
