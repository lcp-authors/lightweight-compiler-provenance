
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011e98 <.init>:
   11e98:	push	{r3, lr}
   11e9c:	bl	11f90 <_start@@Base+0x3c>
   11ea0:	pop	{r3, pc}

Disassembly of section .plt:

00011ea4 <strcmp@plt-0x14>:
   11ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ea8:	ldr	lr, [pc, #4]	; 11eb4 <strcmp@plt-0x4>
   11eac:	add	lr, pc, lr
   11eb0:	ldr	pc, [lr, #8]!
   11eb4:	andeq	r3, r1, ip, asr #2

00011eb8 <strcmp@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #77824	; 0x13000
   11ec0:	ldr	pc, [ip, #332]!	; 0x14c

00011ec4 <printf@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #77824	; 0x13000
   11ecc:	ldr	pc, [ip, #324]!	; 0x144

00011ed0 <free@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #77824	; 0x13000
   11ed8:	ldr	pc, [ip, #316]!	; 0x13c

00011edc <realloc@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #77824	; 0x13000
   11ee4:	ldr	pc, [ip, #308]!	; 0x134

00011ee8 <strcpy@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #77824	; 0x13000
   11ef0:	ldr	pc, [ip, #300]!	; 0x12c

00011ef4 <puts@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #77824	; 0x13000
   11efc:	ldr	pc, [ip, #292]!	; 0x124

00011f00 <malloc@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #77824	; 0x13000
   11f08:	ldr	pc, [ip, #284]!	; 0x11c

00011f0c <__libc_start_main@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #77824	; 0x13000
   11f14:	ldr	pc, [ip, #276]!	; 0x114

00011f18 <__gmon_start__@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #77824	; 0x13000
   11f20:	ldr	pc, [ip, #268]!	; 0x10c

00011f24 <strlen@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #77824	; 0x13000
   11f2c:	ldr	pc, [ip, #260]!	; 0x104

00011f30 <snprintf@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #77824	; 0x13000
   11f38:	ldr	pc, [ip, #252]!	; 0xfc

00011f3c <__isoc99_sscanf@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #77824	; 0x13000
   11f44:	ldr	pc, [ip, #244]!	; 0xf4

00011f48 <abort@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #77824	; 0x13000
   11f50:	ldr	pc, [ip, #236]!	; 0xec

Disassembly of section .text:

00011f54 <_start@@Base>:
   11f54:	mov	fp, #0
   11f58:	mov	lr, #0
   11f5c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f60:	mov	r2, sp
   11f64:	push	{r2}		; (str r2, [sp, #-4]!)
   11f68:	push	{r0}		; (str r0, [sp, #-4]!)
   11f6c:	ldr	ip, [pc, #16]	; 11f84 <_start@@Base+0x30>
   11f70:	push	{ip}		; (str ip, [sp, #-4]!)
   11f74:	ldr	r0, [pc, #12]	; 11f88 <_start@@Base+0x34>
   11f78:	ldr	r3, [pc, #12]	; 11f8c <_start@@Base+0x38>
   11f7c:	bl	11f0c <__libc_start_main@plt>
   11f80:	bl	11f48 <abort@plt>
   11f84:	strdeq	r4, [r1], -r8
   11f88:	andeq	r2, r1, r4, asr #32
   11f8c:	muleq	r1, r8, fp
   11f90:	ldr	r3, [pc, #20]	; 11fac <_start@@Base+0x58>
   11f94:	ldr	r2, [pc, #20]	; 11fb0 <_start@@Base+0x5c>
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r2, [r3, r2]
   11fa0:	cmp	r2, #0
   11fa4:	bxeq	lr
   11fa8:	b	11f18 <__gmon_start__@plt>
   11fac:	andeq	r3, r1, r0, rrx
   11fb0:	andeq	r0, r0, r0, asr #32
   11fb4:	ldr	r0, [pc, #24]	; 11fd4 <_start@@Base+0x80>
   11fb8:	ldr	r3, [pc, #24]	; 11fd8 <_start@@Base+0x84>
   11fbc:	cmp	r3, r0
   11fc0:	bxeq	lr
   11fc4:	ldr	r3, [pc, #16]	; 11fdc <_start@@Base+0x88>
   11fc8:	cmp	r3, #0
   11fcc:	bxeq	lr
   11fd0:	bx	r3
   11fd4:	andeq	r5, r2, ip, asr #32
   11fd8:	andeq	r5, r2, ip, asr #32
   11fdc:	andeq	r0, r0, r0
   11fe0:	ldr	r0, [pc, #36]	; 1200c <_start@@Base+0xb8>
   11fe4:	ldr	r1, [pc, #36]	; 12010 <_start@@Base+0xbc>
   11fe8:	sub	r1, r1, r0
   11fec:	asr	r1, r1, #2
   11ff0:	add	r1, r1, r1, lsr #31
   11ff4:	asrs	r1, r1, #1
   11ff8:	bxeq	lr
   11ffc:	ldr	r3, [pc, #16]	; 12014 <_start@@Base+0xc0>
   12000:	cmp	r3, #0
   12004:	bxeq	lr
   12008:	bx	r3
   1200c:	andeq	r5, r2, ip, asr #32
   12010:	andeq	r5, r2, ip, asr #32
   12014:	andeq	r0, r0, r0
   12018:	push	{r4, lr}
   1201c:	ldr	r4, [pc, #24]	; 1203c <_start@@Base+0xe8>
   12020:	ldrb	r3, [r4]
   12024:	cmp	r3, #0
   12028:	popne	{r4, pc}
   1202c:	bl	11fb4 <_start@@Base+0x60>
   12030:	mov	r3, #1
   12034:	strb	r3, [r4]
   12038:	pop	{r4, pc}
   1203c:	andeq	r5, r2, ip, asr #32
   12040:	b	11fe0 <_start@@Base+0x8c>

00012044 <main@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	sub	sp, sp, #64	; 0x40
   12050:	add	r5, sp, #8
   12054:	mov	r4, #0
   12058:	mov	r0, r5
   1205c:	str	r4, [sp, #4]
   12060:	bl	121ec <table_init@@Base>
   12064:	movw	r1, #8584	; 0x2188
   12068:	add	r2, sp, #4
   1206c:	mov	r0, r5
   12070:	mvn	r3, #0
   12074:	movt	r1, #1
   12078:	bl	12878 <table_register_callback@@Base>
   1207c:	mov	r0, r5
   12080:	bl	13880 <table_add_row@@Base>
   12084:	mov	r5, r0
   12088:	ldrb	r0, [sp, #4]
   1208c:	tst	r0, #2
   12090:	bne	120a4 <main@@Base+0x60>
   12094:	movw	r0, #19638	; 0x4cb6
   12098:	movt	r0, #1
   1209c:	bl	11ef4 <puts@plt>
   120a0:	mvn	r4, #0
   120a4:	movw	r1, #19464	; 0x4c08
   120a8:	add	r0, sp, #8
   120ac:	mov	r2, #0
   120b0:	movt	r1, #1
   120b4:	bl	12c4c <table_add_column@@Base>
   120b8:	mov	r6, r0
   120bc:	ldrb	r0, [sp, #4]
   120c0:	tst	r0, #8
   120c4:	bne	120d8 <main@@Base+0x94>
   120c8:	movw	r0, #19678	; 0x4cde
   120cc:	movt	r0, #1
   120d0:	bl	11ef4 <puts@plt>
   120d4:	mvn	r4, #0
   120d8:	add	r0, sp, #8
   120dc:	mov	r1, r5
   120e0:	mov	r2, r6
   120e4:	mov	r3, #42	; 0x2a
   120e8:	bl	13d7c <table_set_int@@Base>
   120ec:	ldrb	r0, [sp, #4]
   120f0:	tst	r0, #1
   120f4:	bne	12108 <main@@Base+0xc4>
   120f8:	movw	r0, #19467	; 0x4c0b
   120fc:	movt	r0, #1
   12100:	bl	11ec4 <printf@plt>
   12104:	mvn	r4, #0
   12108:	add	r0, sp, #8
   1210c:	mov	r1, r5
   12110:	bl	13930 <table_remove_row@@Base>
   12114:	ldrb	r0, [sp, #4]
   12118:	tst	r0, #4
   1211c:	bne	12130 <main@@Base+0xec>
   12120:	movw	r0, #19511	; 0x4c37
   12124:	movt	r0, #1
   12128:	bl	11ec4 <printf@plt>
   1212c:	mvn	r4, #0
   12130:	add	r0, sp, #8
   12134:	mov	r1, r6
   12138:	bl	12d64 <table_remove_column@@Base>
   1213c:	ldrb	r0, [sp, #4]
   12140:	tst	r0, #16
   12144:	bne	12158 <main@@Base+0x114>
   12148:	movw	r0, #19553	; 0x4c61
   1214c:	movt	r0, #1
   12150:	bl	11ec4 <printf@plt>
   12154:	mvn	r4, #0
   12158:	add	r0, sp, #8
   1215c:	bl	12248 <table_destroy@@Base>
   12160:	ldrb	r0, [sp, #4]
   12164:	tst	r0, #64	; 0x40
   12168:	bne	1217c <main@@Base+0x138>
   1216c:	movw	r0, #19598	; 0x4c8e
   12170:	movt	r0, #1
   12174:	bl	11ec4 <printf@plt>
   12178:	mvn	r4, #0
   1217c:	mov	r0, r4
   12180:	sub	sp, fp, #16
   12184:	pop	{r4, r5, r6, sl, fp, pc}
   12188:	ldr	r0, [sp]
   1218c:	ldr	r1, [r0]
   12190:	orr	r1, r1, r3
   12194:	str	r1, [r0]
   12198:	bx	lr

0001219c <table_new@@Base>:
   1219c:	push	{fp, lr}
   121a0:	mov	fp, sp
   121a4:	mov	r0, #56	; 0x38
   121a8:	bl	11f00 <malloc@plt>
   121ac:	vmov.i32	q8, #0	; 0x00000000
   121b0:	mov	r1, #0
   121b4:	mov	r2, #10
   121b8:	mov	r3, #20
   121bc:	str	r1, [r0]
   121c0:	stmib	r0, {r1, r2}
   121c4:	str	r1, [r0, #12]
   121c8:	str	r1, [r0, #16]
   121cc:	str	r1, [r0, #20]
   121d0:	str	r3, [r0, #24]
   121d4:	str	r1, [r0, #28]
   121d8:	str	r2, [r0, #48]	; 0x30
   121dc:	str	r1, [r0, #52]	; 0x34
   121e0:	add	r1, r0, #32
   121e4:	vst1.32	{d16-d17}, [r1]
   121e8:	pop	{fp, pc}

000121ec <table_init@@Base>:
   121ec:	vmov.i32	q8, #0	; 0x00000000
   121f0:	mov	r1, #0
   121f4:	mov	r2, #10
   121f8:	mov	r3, #20
   121fc:	str	r1, [r0]
   12200:	stmib	r0, {r1, r2}
   12204:	str	r1, [r0, #12]
   12208:	str	r1, [r0, #16]
   1220c:	str	r1, [r0, #20]
   12210:	str	r3, [r0, #24]
   12214:	str	r1, [r0, #28]
   12218:	str	r2, [r0, #48]	; 0x30
   1221c:	str	r1, [r0, #52]	; 0x34
   12220:	add	r0, r0, #32
   12224:	vst1.32	{d16-d17}, [r0]
   12228:	bx	lr

0001222c <table_delete@@Base>:
   1222c:	push	{r4, sl, fp, lr}
   12230:	add	fp, sp, #8
   12234:	mov	r4, r0
   12238:	bl	12248 <table_destroy@@Base>
   1223c:	mov	r0, r4
   12240:	pop	{r4, sl, fp, lr}
   12244:	b	11ed0 <free@plt>

00012248 <table_destroy@@Base>:
   12248:	cmp	r0, #0
   1224c:	bxeq	lr
   12250:	push	{r4, r5, r6, sl, fp, lr}
   12254:	add	fp, sp, #16
   12258:	mvn	r1, #0
   1225c:	mvn	r2, #0
   12260:	mov	r3, #64	; 0x40
   12264:	mov	r4, r0
   12268:	bl	12acc <table_notify@@Base>
   1226c:	mov	r0, r4
   12270:	bl	13878 <table_get_row_length@@Base>
   12274:	cmp	r0, #1
   12278:	blt	1229c <table_destroy@@Base+0x54>
   1227c:	mov	r5, r0
   12280:	mov	r6, #0
   12284:	mov	r0, r4
   12288:	mov	r1, r6
   1228c:	bl	1381c <table_row_destroy@@Base>
   12290:	add	r6, r6, #1
   12294:	cmp	r5, r6
   12298:	bne	12284 <table_destroy@@Base+0x3c>
   1229c:	ldr	r0, [r4, #16]
   122a0:	cmp	r0, #0
   122a4:	beq	122ac <table_destroy@@Base+0x64>
   122a8:	bl	11ed0 <free@plt>
   122ac:	mov	r0, r4
   122b0:	bl	12bc0 <table_get_column_length@@Base>
   122b4:	cmp	r0, #1
   122b8:	blt	122dc <table_destroy@@Base+0x94>
   122bc:	mov	r5, r0
   122c0:	mov	r6, #0
   122c4:	mov	r0, r4
   122c8:	mov	r1, r6
   122cc:	bl	12ba8 <table_column_destroy@@Base>
   122d0:	add	r6, r6, #1
   122d4:	cmp	r5, r6
   122d8:	bne	122c4 <table_destroy@@Base+0x7c>
   122dc:	ldr	r0, [r4]
   122e0:	cmp	r0, #0
   122e4:	beq	122ec <table_destroy@@Base+0xa4>
   122e8:	bl	11ed0 <free@plt>
   122ec:	ldr	r0, [r4, #36]	; 0x24
   122f0:	cmp	r0, #0
   122f4:	beq	122fc <table_destroy@@Base+0xb4>
   122f8:	bl	11ed0 <free@plt>
   122fc:	ldr	r0, [r4, #40]	; 0x28
   12300:	cmp	r0, #0
   12304:	beq	1230c <table_destroy@@Base+0xc4>
   12308:	bl	11ed0 <free@plt>
   1230c:	ldr	r0, [r4, #44]	; 0x2c
   12310:	cmp	r0, #0
   12314:	pop	{r4, r5, r6, sl, fp, lr}
   12318:	beq	12320 <table_destroy@@Base+0xd8>
   1231c:	b	11ed0 <free@plt>
   12320:	bx	lr

00012324 <table_dupe@@Base>:
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12328:	add	fp, sp, #28
   1232c:	sub	sp, sp, #12
   12330:	mov	r4, r0
   12334:	bl	13878 <table_get_row_length@@Base>
   12338:	mov	r8, r0
   1233c:	mov	r0, r4
   12340:	bl	12bc0 <table_get_column_length@@Base>
   12344:	mov	r6, r0
   12348:	mov	r0, #56	; 0x38
   1234c:	bl	11f00 <malloc@plt>
   12350:	vmov.i32	q8, #0	; 0x00000000
   12354:	mov	sl, r0
   12358:	mov	r5, #0
   1235c:	mov	r0, #10
   12360:	mov	r1, #20
   12364:	cmp	r6, #1
   12368:	str	r5, [sl]
   1236c:	str	r5, [sl, #4]
   12370:	str	r0, [sl, #8]
   12374:	str	r5, [sl, #12]
   12378:	str	r5, [sl, #16]
   1237c:	str	r5, [sl, #20]
   12380:	str	r1, [sl, #24]
   12384:	str	r5, [sl, #28]
   12388:	str	r0, [sl, #48]	; 0x30
   1238c:	add	r0, sl, #32
   12390:	str	r5, [sl, #52]	; 0x34
   12394:	vst1.32	{d16-d17}, [r0]
   12398:	blt	123d4 <table_dupe@@Base+0xb0>
   1239c:	mov	r0, r4
   123a0:	mov	r1, r5
   123a4:	bl	12c28 <table_get_column_name@@Base>
   123a8:	mov	r7, r0
   123ac:	mov	r0, r4
   123b0:	mov	r1, r5
   123b4:	bl	12c38 <table_get_column_data_type@@Base>
   123b8:	mov	r2, r0
   123bc:	mov	r0, sl
   123c0:	mov	r1, r7
   123c4:	bl	12c4c <table_add_column@@Base>
   123c8:	add	r5, r5, #1
   123cc:	cmp	r6, r5
   123d0:	bne	1239c <table_dupe@@Base+0x78>
   123d4:	cmp	r8, #1
   123d8:	blt	12840 <table_dupe@@Base+0x51c>
   123dc:	mov	r5, #0
   123e0:	add	r9, sp, #8
   123e4:	mov	r0, sl
   123e8:	bl	13880 <table_add_row@@Base>
   123ec:	cmp	r6, #1
   123f0:	blt	12834 <table_dupe@@Base+0x510>
   123f4:	mov	r7, #0
   123f8:	mov	r0, r4
   123fc:	mov	r1, r7
   12400:	bl	12c38 <table_get_column_data_type@@Base>
   12404:	cmp	r0, #23
   12408:	bhi	12828 <table_dupe@@Base+0x504>
   1240c:	add	r1, pc, #0
   12410:	ldr	pc, [r1, r0, lsl #2]
   12414:	andeq	r2, r1, r4, ror r4
   12418:	muleq	r1, ip, r4
   1241c:	andeq	r2, r1, r4, asr #9
   12420:	andeq	r2, r1, ip, ror #9
   12424:	andeq	r2, r1, r4, lsl r5
   12428:	andeq	r2, r1, ip, lsr r5
   1242c:	andeq	r2, r1, r4, ror #10
   12430:	andeq	r2, r1, ip, lsl #11
   12434:			; <UNDEFINED> instruction: 0x000125b4
   12438:	ldrdeq	r2, [r1], -ip
   1243c:	andeq	r2, r1, r4, lsl #12
   12440:	andeq	r2, r1, ip, lsr #12
   12444:	andeq	r2, r1, r4, asr r6
   12448:	andeq	r2, r1, ip, ror r6
   1244c:	andeq	r2, r1, r4, lsr #13
   12450:	andeq	r2, r1, ip, asr #13
   12454:	strdeq	r2, [r1], -r4
   12458:	andeq	r2, r1, r8, lsl r7
   1245c:	andeq	r2, r1, ip, lsr r7
   12460:	andeq	r2, r1, r0, ror #14
   12464:	andeq	r2, r1, r8, lsl #15
   12468:			; <UNDEFINED> instruction: 0x000127b0
   1246c:	ldrdeq	r2, [r1], -r8
   12470:	andeq	r2, r1, r0, lsl #16
   12474:	mov	r0, r4
   12478:	mov	r1, r5
   1247c:	mov	r2, r7
   12480:	bl	135cc <table_get_int@@Base>
   12484:	mov	r3, r0
   12488:	mov	r0, sl
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	13d7c <table_set_int@@Base>
   12498:	b	12828 <table_dupe@@Base+0x504>
   1249c:	mov	r0, r4
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	135e4 <table_get_uint@@Base>
   124ac:	mov	r3, r0
   124b0:	mov	r0, sl
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	13da4 <table_set_uint@@Base>
   124c0:	b	12828 <table_dupe@@Base+0x504>
   124c4:	mov	r0, r4
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	135fc <table_get_int8@@Base>
   124d4:	mov	r3, r0
   124d8:	mov	r0, sl
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	13dcc <table_set_int8@@Base>
   124e8:	b	12828 <table_dupe@@Base+0x504>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	13614 <table_get_uint8@@Base>
   124fc:	mov	r3, r0
   12500:	mov	r0, sl
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	13df4 <table_set_uint8@@Base>
   12510:	b	12828 <table_dupe@@Base+0x504>
   12514:	mov	r0, r4
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	1362c <table_get_int16@@Base>
   12524:	mov	r3, r0
   12528:	mov	r0, sl
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	13e1c <table_set_int16@@Base>
   12538:	b	12828 <table_dupe@@Base+0x504>
   1253c:	mov	r0, r4
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	13644 <table_get_uint16@@Base>
   1254c:	mov	r3, r0
   12550:	mov	r0, sl
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	13e44 <table_set_uint16@@Base>
   12560:	b	12828 <table_dupe@@Base+0x504>
   12564:	mov	r0, r4
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	1365c <table_get_int32@@Base>
   12574:	mov	r3, r0
   12578:	mov	r0, sl
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	13e6c <table_set_int32@@Base>
   12588:	b	12828 <table_dupe@@Base+0x504>
   1258c:	mov	r0, r4
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	13674 <table_get_uint32@@Base>
   1259c:	mov	r3, r0
   125a0:	mov	r0, sl
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	13e94 <table_set_uint32@@Base>
   125b0:	b	12828 <table_dupe@@Base+0x504>
   125b4:	mov	r0, r4
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	1368c <table_get_int64@@Base>
   125c4:	stm	sp, {r0, r1}
   125c8:	mov	r0, sl
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	13ebc <table_set_int64@@Base>
   125d8:	b	12828 <table_dupe@@Base+0x504>
   125dc:	mov	r0, r4
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	136a4 <table_get_uint64@@Base>
   125ec:	stm	sp, {r0, r1}
   125f0:	mov	r0, sl
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	13ef0 <table_set_uint64@@Base>
   12600:	b	12828 <table_dupe@@Base+0x504>
   12604:	mov	r0, r4
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	136bc <table_get_short@@Base>
   12614:	mov	r3, r0
   12618:	mov	r0, sl
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	13f24 <table_set_short@@Base>
   12628:	b	12828 <table_dupe@@Base+0x504>
   1262c:	mov	r0, r4
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	136d4 <table_get_ushort@@Base>
   1263c:	mov	r3, r0
   12640:	mov	r0, sl
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	13f4c <table_set_ushort@@Base>
   12650:	b	12828 <table_dupe@@Base+0x504>
   12654:	mov	r0, r4
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	136ec <table_get_long@@Base>
   12664:	mov	r3, r0
   12668:	mov	r0, sl
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	13f74 <table_set_long@@Base>
   12678:	b	12828 <table_dupe@@Base+0x504>
   1267c:	mov	r0, r4
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13704 <table_get_ulong@@Base>
   1268c:	mov	r3, r0
   12690:	mov	r0, sl
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	13f9c <table_set_ulong@@Base>
   126a0:	b	12828 <table_dupe@@Base+0x504>
   126a4:	mov	r0, r4
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	1371c <table_get_llong@@Base>
   126b4:	stm	sp, {r0, r1}
   126b8:	mov	r0, sl
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	13fc4 <table_set_llong@@Base>
   126c8:	b	12828 <table_dupe@@Base+0x504>
   126cc:	mov	r0, r4
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	13734 <table_get_ullong@@Base>
   126dc:	stm	sp, {r0, r1}
   126e0:	mov	r0, sl
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	13ff8 <table_set_ullong@@Base>
   126f0:	b	12828 <table_dupe@@Base+0x504>
   126f4:	mov	r0, r4
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	1374c <table_get_float@@Base>
   12704:	mov	r0, sl
   12708:	mov	r1, r5
   1270c:	mov	r2, r7
   12710:	bl	1402c <table_set_float@@Base>
   12714:	b	12828 <table_dupe@@Base+0x504>
   12718:	mov	r0, r4
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	13764 <table_get_double@@Base>
   12728:	mov	r0, sl
   1272c:	mov	r1, r5
   12730:	mov	r2, r7
   12734:	bl	14054 <table_set_double@@Base>
   12738:	b	12828 <table_dupe@@Base+0x504>
   1273c:	mov	r0, r4
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	1377c <table_get_ldouble@@Base>
   1274c:	mov	r0, sl
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	1407c <table_set_ldouble@@Base>
   1275c:	b	12828 <table_dupe@@Base+0x504>
   12760:	mov	r0, r4
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	13794 <table_get_char@@Base>
   12770:	mov	r3, r0
   12774:	mov	r0, sl
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	140c4 <table_set_char@@Base>
   12784:	b	12828 <table_dupe@@Base+0x504>
   12788:	mov	r0, r4
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	bl	137ac <table_get_uchar@@Base>
   12798:	mov	r3, r0
   1279c:	mov	r0, sl
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	140ec <table_set_uchar@@Base>
   127ac:	b	12828 <table_dupe@@Base+0x504>
   127b0:	mov	r0, r4
   127b4:	mov	r1, r5
   127b8:	mov	r2, r7
   127bc:	bl	137c4 <table_get_string@@Base>
   127c0:	mov	r3, r0
   127c4:	mov	r0, sl
   127c8:	mov	r1, r5
   127cc:	mov	r2, r7
   127d0:	bl	140a4 <table_set_string@@Base>
   127d4:	b	12828 <table_dupe@@Base+0x504>
   127d8:	mov	r0, r4
   127dc:	mov	r1, r5
   127e0:	mov	r2, r7
   127e4:	bl	135b4 <table_get_bool@@Base>
   127e8:	mov	r3, r0
   127ec:	mov	r0, sl
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	13d54 <table_set_bool@@Base>
   127fc:	b	12828 <table_dupe@@Base+0x504>
   12800:	mov	r0, r4
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	137d8 <table_get_ptr@@Base>
   12810:	str	r0, [sp, #8]
   12814:	mov	r0, sl
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	mov	r3, r9
   12824:	bl	14114 <table_set_ptr@@Base>
   12828:	add	r7, r7, #1
   1282c:	cmp	r6, r7
   12830:	bne	123f8 <table_dupe@@Base+0xd4>
   12834:	add	r5, r5, #1
   12838:	cmp	r5, r8
   1283c:	bne	123e4 <table_dupe@@Base+0xc0>
   12840:	mov	r0, sl
   12844:	sub	sp, fp, #28
   12848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001284c <table_get_major_version@@Base>:
   1284c:	mov	r0, #0
   12850:	bx	lr

00012854 <table_get_minor_version@@Base>:
   12854:	mov	r0, #0
   12858:	bx	lr

0001285c <table_get_patch_version@@Base>:
   1285c:	mov	r0, #0
   12860:	bx	lr

00012864 <table_get_version@@Base>:
   12864:	movw	r0, #19868	; 0x4d9c
   12868:	movt	r0, #1
   1286c:	bx	lr

00012870 <table_get_callback_length@@Base>:
   12870:	ldr	r0, [r0, #32]
   12874:	bx	lr

00012878 <table_register_callback@@Base>:
   12878:	push	{r4, r5, r6, r7, fp, lr}
   1287c:	add	fp, sp, #16
   12880:	mov	r5, r0
   12884:	ldr	r0, [r0, #32]
   12888:	mov	r4, r3
   1288c:	mov	r6, r2
   12890:	mov	r7, r1
   12894:	cmp	r0, #1
   12898:	blt	128cc <table_register_callback@@Base+0x54>
   1289c:	ldr	r2, [r5, #36]	; 0x24
   128a0:	mov	r1, #0
   128a4:	ldr	r3, [r2, r1, lsl #2]
   128a8:	cmp	r3, r7
   128ac:	bne	128c0 <table_register_callback@@Base+0x48>
   128b0:	ldr	r3, [r5, #40]	; 0x28
   128b4:	ldr	r3, [r3, r1, lsl #2]
   128b8:	cmp	r3, r6
   128bc:	beq	12950 <table_register_callback@@Base+0xd8>
   128c0:	add	r1, r1, #1
   128c4:	cmp	r0, r1
   128c8:	bne	128a4 <table_register_callback@@Base+0x2c>
   128cc:	ldr	r1, [r5, #48]	; 0x30
   128d0:	udiv	r2, r0, r1
   128d4:	mls	r2, r2, r1, r0
   128d8:	cmp	r2, #0
   128dc:	bne	12928 <table_register_callback@@Base+0xb0>
   128e0:	ldr	r2, [r5, #52]	; 0x34
   128e4:	ldr	r0, [r5, #36]	; 0x24
   128e8:	add	r1, r2, r1
   128ec:	str	r1, [r5, #52]	; 0x34
   128f0:	lsl	r1, r1, #2
   128f4:	bl	11edc <realloc@plt>
   128f8:	str	r0, [r5, #36]	; 0x24
   128fc:	ldr	r1, [r5, #52]	; 0x34
   12900:	ldr	r0, [r5, #40]	; 0x28
   12904:	lsl	r1, r1, #2
   12908:	bl	11edc <realloc@plt>
   1290c:	str	r0, [r5, #40]	; 0x28
   12910:	ldr	r1, [r5, #52]	; 0x34
   12914:	ldr	r0, [r5, #44]	; 0x2c
   12918:	lsl	r1, r1, #2
   1291c:	bl	11edc <realloc@plt>
   12920:	str	r0, [r5, #44]	; 0x2c
   12924:	ldr	r0, [r5, #32]
   12928:	ldr	r1, [r5, #36]	; 0x24
   1292c:	str	r7, [r1, r0, lsl #2]
   12930:	ldr	r1, [r5, #40]	; 0x28
   12934:	str	r6, [r1, r0, lsl #2]
   12938:	ldr	r1, [r5, #44]	; 0x2c
   1293c:	str	r4, [r1, r0, lsl #2]
   12940:	ldr	r0, [r5, #32]
   12944:	add	r0, r0, #1
   12948:	str	r0, [r5, #32]
   1294c:	pop	{r4, r5, r6, r7, fp, pc}
   12950:	cmp	r1, #0
   12954:	beq	128cc <table_register_callback@@Base+0x54>
   12958:	ldr	r0, [r5, #44]	; 0x2c
   1295c:	ldr	r2, [r0, r1, lsl #2]
   12960:	orr	r2, r2, r4
   12964:	str	r2, [r0, r1, lsl #2]
   12968:	pop	{r4, r5, r6, r7, fp, pc}

0001296c <table_unregister_callback@@Base>:
   1296c:	push	{r4, r5, r6, sl, fp, lr}
   12970:	add	fp, sp, #16
   12974:	ldr	r4, [r0, #32]
   12978:	cmp	r4, #1
   1297c:	blt	129b4 <table_unregister_callback@@Base+0x48>
   12980:	ldr	r3, [r0, #36]	; 0x24
   12984:	mov	r6, r0
   12988:	mov	r0, #0
   1298c:	ldr	r5, [r3, r0, lsl #2]
   12990:	cmp	r5, r1
   12994:	bne	129a8 <table_unregister_callback@@Base+0x3c>
   12998:	ldr	r5, [r6, #40]	; 0x28
   1299c:	ldr	r5, [r5, r0, lsl #2]
   129a0:	cmp	r5, r2
   129a4:	beq	129b8 <table_unregister_callback@@Base+0x4c>
   129a8:	add	r0, r0, #1
   129ac:	cmp	r0, r4
   129b0:	bne	1298c <table_unregister_callback@@Base+0x20>
   129b4:	pop	{r4, r5, r6, sl, fp, pc}
   129b8:	sub	r1, r4, #1
   129bc:	cmp	r0, r1
   129c0:	bge	12a44 <table_unregister_callback@@Base+0xd8>
   129c4:	add	r2, r0, #1
   129c8:	ldr	r1, [r3, r2, lsl #2]
   129cc:	str	r1, [r3, r0, lsl #2]
   129d0:	ldr	r1, [r6, #40]	; 0x28
   129d4:	ldr	r3, [r1, r2, lsl #2]
   129d8:	str	r3, [r1, r0, lsl #2]
   129dc:	ldr	r1, [r6, #44]	; 0x2c
   129e0:	ldr	r3, [r1, r2, lsl #2]
   129e4:	str	r3, [r1, r0, lsl #2]
   129e8:	ldr	r1, [r6, #32]
   129ec:	sub	r1, r1, #1
   129f0:	cmp	r2, r1
   129f4:	bge	12a44 <table_unregister_callback@@Base+0xd8>
   129f8:	ldr	r1, [r6, #36]	; 0x24
   129fc:	add	r1, r1, r0, lsl #2
   12a00:	ldr	r2, [r1, #8]
   12a04:	str	r2, [r1, #4]
   12a08:	ldr	r1, [r6, #40]	; 0x28
   12a0c:	add	r1, r1, r0, lsl #2
   12a10:	ldr	r2, [r1, #8]
   12a14:	str	r2, [r1, #4]
   12a18:	ldr	r1, [r6, #44]	; 0x2c
   12a1c:	add	r1, r1, r0, lsl #2
   12a20:	ldr	r2, [r1, #8]
   12a24:	str	r2, [r1, #4]
   12a28:	add	r2, r0, #1
   12a2c:	add	r0, r0, #2
   12a30:	ldr	r1, [r6, #32]
   12a34:	sub	r1, r1, #1
   12a38:	cmp	r0, r1
   12a3c:	mov	r0, r2
   12a40:	blt	129f8 <table_unregister_callback@@Base+0x8c>
   12a44:	str	r1, [r6, #32]
   12a48:	ldr	r2, [r6, #48]	; 0x30
   12a4c:	udiv	r0, r1, r2
   12a50:	mls	r0, r0, r2, r1
   12a54:	cmp	r0, #0
   12a58:	popne	{r4, r5, r6, sl, fp, pc}
   12a5c:	ldr	r1, [r6, #52]	; 0x34
   12a60:	ldr	r0, [r6, #36]	; 0x24
   12a64:	subs	r1, r1, r2
   12a68:	str	r1, [r6, #52]	; 0x34
   12a6c:	beq	12aa4 <table_unregister_callback@@Base+0x138>
   12a70:	lsl	r1, r1, #2
   12a74:	bl	11edc <realloc@plt>
   12a78:	str	r0, [r6, #36]	; 0x24
   12a7c:	ldr	r1, [r6, #52]	; 0x34
   12a80:	ldr	r0, [r6, #40]	; 0x28
   12a84:	lsl	r1, r1, #2
   12a88:	bl	11edc <realloc@plt>
   12a8c:	str	r0, [r6, #40]	; 0x28
   12a90:	ldr	r1, [r6, #52]	; 0x34
   12a94:	ldr	r0, [r6, #44]	; 0x2c
   12a98:	lsl	r1, r1, #2
   12a9c:	bl	11edc <realloc@plt>
   12aa0:	b	12ac4 <table_unregister_callback@@Base+0x158>
   12aa4:	bl	11ed0 <free@plt>
   12aa8:	ldr	r0, [r6, #40]	; 0x28
   12aac:	bl	11ed0 <free@plt>
   12ab0:	ldr	r0, [r6, #44]	; 0x2c
   12ab4:	bl	11ed0 <free@plt>
   12ab8:	mov	r0, #0
   12abc:	str	r0, [r6, #36]	; 0x24
   12ac0:	str	r0, [r6, #40]	; 0x28
   12ac4:	str	r0, [r6, #44]	; 0x2c
   12ac8:	pop	{r4, r5, r6, sl, fp, pc}

00012acc <table_notify@@Base>:
   12acc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ad0:	add	fp, sp, #24
   12ad4:	sub	sp, sp, #8
   12ad8:	mov	r7, r0
   12adc:	ldr	r0, [r0, #32]
   12ae0:	cmp	r0, #1
   12ae4:	blt	12b40 <table_notify@@Base+0x74>
   12ae8:	mov	r4, r3
   12aec:	mov	r8, r2
   12af0:	mov	r9, r1
   12af4:	mov	r5, #0
   12af8:	ldr	r1, [r7, #44]	; 0x2c
   12afc:	ldr	r1, [r1, r5, lsl #2]
   12b00:	tst	r1, r4
   12b04:	beq	12b34 <table_notify@@Base+0x68>
   12b08:	ldr	r0, [r7, #36]	; 0x24
   12b0c:	ldr	r1, [r7, #40]	; 0x28
   12b10:	mov	r2, r8
   12b14:	mov	r3, r4
   12b18:	ldr	r6, [r0, r5, lsl #2]
   12b1c:	ldr	r0, [r1, r5, lsl #2]
   12b20:	mov	r1, r9
   12b24:	str	r0, [sp]
   12b28:	mov	r0, r7
   12b2c:	blx	r6
   12b30:	ldr	r0, [r7, #32]
   12b34:	add	r5, r5, #1
   12b38:	cmp	r5, r0
   12b3c:	blt	12af8 <table_notify@@Base+0x2c>
   12b40:	sub	sp, fp, #24
   12b44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b48 <table_column_init@@Base>:
   12b48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b4c:	add	fp, sp, #24
   12b50:	ldr	r7, [r0]
   12b54:	mov	r0, r2
   12b58:	mov	r4, r3
   12b5c:	mov	r5, r2
   12b60:	mov	r6, r1
   12b64:	bl	11f24 <strlen@plt>
   12b68:	add	r0, r0, #1
   12b6c:	bl	11f00 <malloc@plt>
   12b70:	ldr	r8, [fp, #8]
   12b74:	add	r6, r6, r6, lsl #1
   12b78:	cmp	r0, #0
   12b7c:	str	r0, [r7, r6, lsl #2]
   12b80:	beq	12b8c <table_column_init@@Base+0x44>
   12b84:	mov	r1, r5
   12b88:	bl	11ee8 <strcpy@plt>
   12b8c:	add	r0, r7, r6, lsl #2
   12b90:	stmib	r0, {r4, r8}
   12b94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b98 <table_get_col_ptr@@Base>:
   12b98:	ldr	r0, [r0]
   12b9c:	add	r1, r1, r1, lsl #1
   12ba0:	add	r0, r0, r1, lsl #2
   12ba4:	bx	lr

00012ba8 <table_column_destroy@@Base>:
   12ba8:	ldr	r0, [r0]
   12bac:	add	r1, r1, r1, lsl #1
   12bb0:	ldr	r0, [r0, r1, lsl #2]
   12bb4:	cmp	r0, #0
   12bb8:	bxeq	lr
   12bbc:	b	11ed0 <free@plt>

00012bc0 <table_get_column_length@@Base>:
   12bc0:	ldr	r0, [r0, #4]
   12bc4:	bx	lr

00012bc8 <table_get_column@@Base>:
   12bc8:	push	{r4, r5, r6, r7, fp, lr}
   12bcc:	add	fp, sp, #16
   12bd0:	ldr	r6, [r0, #4]
   12bd4:	cmp	r6, #1
   12bd8:	blt	12c14 <table_get_column@@Base+0x4c>
   12bdc:	ldr	r7, [r0]
   12be0:	mov	r5, r1
   12be4:	mov	r4, #0
   12be8:	ldr	r0, [r7]
   12bec:	mov	r1, r5
   12bf0:	bl	11eb8 <strcmp@plt>
   12bf4:	cmp	r0, #0
   12bf8:	beq	12c18 <table_get_column@@Base+0x50>
   12bfc:	add	r4, r4, #1
   12c00:	add	r7, r7, #12
   12c04:	cmp	r6, r4
   12c08:	bne	12be8 <table_get_column@@Base+0x20>
   12c0c:	mov	r4, r6
   12c10:	b	12c18 <table_get_column@@Base+0x50>
   12c14:	mov	r4, #0
   12c18:	cmp	r4, r6
   12c1c:	mvneq	r4, #0
   12c20:	mov	r0, r4
   12c24:	pop	{r4, r5, r6, r7, fp, pc}

00012c28 <table_get_column_name@@Base>:
   12c28:	ldr	r0, [r0]
   12c2c:	add	r1, r1, r1, lsl #1
   12c30:	ldr	r0, [r0, r1, lsl #2]
   12c34:	bx	lr

00012c38 <table_get_column_data_type@@Base>:
   12c38:	ldr	r0, [r0]
   12c3c:	add	r1, r1, r1, lsl #1
   12c40:	add	r0, r0, r1, lsl #2
   12c44:	ldr	r0, [r0, #4]
   12c48:	bx	lr

00012c4c <table_add_column@@Base>:
   12c4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c50:	add	fp, sp, #24
   12c54:	sub	sp, sp, #8
   12c58:	mov	r4, r0
   12c5c:	mov	r8, r1
   12c60:	ldr	r0, [r0, #4]
   12c64:	mov	r9, r2
   12c68:	ldr	r1, [r4, #8]
   12c6c:	udiv	r2, r0, r1
   12c70:	mls	r0, r2, r1, r0
   12c74:	cmp	r0, #0
   12c78:	bne	12ce4 <table_add_column@@Base+0x98>
   12c7c:	ldr	r2, [r4, #12]
   12c80:	ldr	r0, [r4]
   12c84:	add	r1, r2, r1
   12c88:	str	r1, [r4, #12]
   12c8c:	add	r1, r1, r1, lsl #1
   12c90:	lsl	r1, r1, #2
   12c94:	bl	11edc <realloc@plt>
   12c98:	str	r0, [r4]
   12c9c:	mov	r0, r4
   12ca0:	bl	13878 <table_get_row_length@@Base>
   12ca4:	cmp	r0, #1
   12ca8:	blt	12ce4 <table_add_column@@Base+0x98>
   12cac:	mov	r6, r0
   12cb0:	mov	r7, #0
   12cb4:	mov	r0, r4
   12cb8:	mov	r1, r7
   12cbc:	bl	13810 <table_get_row_ptr@@Base>
   12cc0:	ldr	r1, [r4, #12]
   12cc4:	mov	r5, r0
   12cc8:	ldr	r0, [r0]
   12ccc:	lsl	r1, r1, #2
   12cd0:	bl	11edc <realloc@plt>
   12cd4:	add	r7, r7, #1
   12cd8:	str	r0, [r5]
   12cdc:	cmp	r6, r7
   12ce0:	bne	12cb4 <table_add_column@@Base+0x68>
   12ce4:	mov	r0, r4
   12ce8:	bl	13878 <table_get_row_length@@Base>
   12cec:	ldr	r6, [r4, #4]
   12cf0:	mov	r7, r0
   12cf4:	mov	r0, r9
   12cf8:	bl	13584 <table_get_default_compare_function_for_data_type@@Base>
   12cfc:	str	r0, [sp]
   12d00:	mov	r0, r4
   12d04:	mov	r1, r6
   12d08:	mov	r2, r8
   12d0c:	mov	r3, r9
   12d10:	bl	12b48 <table_column_init@@Base>
   12d14:	cmp	r7, #1
   12d18:	blt	12d3c <table_add_column@@Base+0xf0>
   12d1c:	mov	r5, #0
   12d20:	mov	r0, r4
   12d24:	mov	r1, r5
   12d28:	mov	r2, r6
   12d2c:	bl	14134 <table_cell_init@@Base>
   12d30:	add	r5, r5, #1
   12d34:	cmp	r7, r5
   12d38:	bne	12d20 <table_add_column@@Base+0xd4>
   12d3c:	ldr	r2, [r4, #4]
   12d40:	mov	r0, r4
   12d44:	mvn	r1, #0
   12d48:	mov	r3, #8
   12d4c:	bl	12acc <table_notify@@Base>
   12d50:	ldr	r0, [r4, #4]
   12d54:	add	r1, r0, #1
   12d58:	str	r1, [r4, #4]
   12d5c:	sub	sp, fp, #24
   12d60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012d64 <table_remove_column@@Base>:
   12d64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d68:	add	fp, sp, #24
   12d6c:	mov	r5, r0
   12d70:	ldr	r0, [r0]
   12d74:	add	r6, r1, r1, lsl #1
   12d78:	mov	r9, r1
   12d7c:	ldr	r0, [r0, r6, lsl #2]
   12d80:	cmp	r0, #0
   12d84:	beq	12d8c <table_remove_column@@Base+0x28>
   12d88:	bl	11ed0 <free@plt>
   12d8c:	ldr	r0, [r5, #4]
   12d90:	sub	r4, r0, #1
   12d94:	cmp	r4, r9
   12d98:	ble	12dcc <table_remove_column@@Base+0x68>
   12d9c:	mvn	r1, r9
   12da0:	add	r0, r1, r0
   12da4:	lsl	r1, r6, #2
   12da8:	ldr	r2, [r5]
   12dac:	subs	r0, r0, #1
   12db0:	add	r2, r2, r1
   12db4:	add	r1, r1, #12
   12db8:	vldr	d16, [r2, #12]
   12dbc:	ldr	r3, [r2, #20]
   12dc0:	str	r3, [r2, #8]
   12dc4:	vstr	d16, [r2]
   12dc8:	bne	12da8 <table_remove_column@@Base+0x44>
   12dcc:	mov	r0, r5
   12dd0:	bl	13878 <table_get_row_length@@Base>
   12dd4:	cmp	r0, #1
   12dd8:	blt	12e34 <table_remove_column@@Base+0xd0>
   12ddc:	mov	r6, r0
   12de0:	mov	r7, #0
   12de4:	mov	r0, r5
   12de8:	mov	r1, r7
   12dec:	mov	r2, r9
   12df0:	bl	14170 <table_cell_destroy@@Base>
   12df4:	mov	r0, r5
   12df8:	mov	r1, r7
   12dfc:	bl	13810 <table_get_row_ptr@@Base>
   12e00:	cmp	r4, r9
   12e04:	ble	12e28 <table_remove_column@@Base+0xc4>
   12e08:	mov	r1, r9
   12e0c:	ldr	r2, [r0]
   12e10:	add	r3, r2, r1, lsl #2
   12e14:	ldr	r3, [r3, #4]
   12e18:	str	r3, [r2, r1, lsl #2]
   12e1c:	add	r1, r1, #1
   12e20:	cmp	r4, r1
   12e24:	bne	12e0c <table_remove_column@@Base+0xa8>
   12e28:	add	r7, r7, #1
   12e2c:	cmp	r7, r6
   12e30:	bne	12de4 <table_remove_column@@Base+0x80>
   12e34:	ldmib	r5, {r0, r1}
   12e38:	sub	r0, r0, #1
   12e3c:	udiv	r2, r0, r1
   12e40:	str	r0, [r5, #4]
   12e44:	mls	r0, r2, r1, r0
   12e48:	cmp	r0, #0
   12e4c:	bne	12eb8 <table_remove_column@@Base+0x154>
   12e50:	ldr	r2, [r5, #12]
   12e54:	ldr	r0, [r5]
   12e58:	sub	r1, r2, r1
   12e5c:	str	r1, [r5, #12]
   12e60:	add	r1, r1, r1, lsl #1
   12e64:	lsl	r1, r1, #2
   12e68:	bl	11edc <realloc@plt>
   12e6c:	str	r0, [r5]
   12e70:	mov	r0, r5
   12e74:	bl	13878 <table_get_row_length@@Base>
   12e78:	cmp	r0, #1
   12e7c:	blt	12eb8 <table_remove_column@@Base+0x154>
   12e80:	mov	r8, r0
   12e84:	mov	r7, #0
   12e88:	mov	r0, r5
   12e8c:	mov	r1, r7
   12e90:	bl	13810 <table_get_row_ptr@@Base>
   12e94:	ldr	r1, [r5, #12]
   12e98:	mov	r6, r0
   12e9c:	ldr	r0, [r0]
   12ea0:	lsl	r1, r1, #2
   12ea4:	bl	11edc <realloc@plt>
   12ea8:	add	r7, r7, #1
   12eac:	str	r0, [r6]
   12eb0:	cmp	r8, r7
   12eb4:	bne	12e88 <table_remove_column@@Base+0x124>
   12eb8:	mov	r0, r5
   12ebc:	mvn	r1, #0
   12ec0:	mov	r2, r9
   12ec4:	mov	r3, #16
   12ec8:	bl	12acc <table_notify@@Base>
   12ecc:	mov	r0, #0
   12ed0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ed4 <table_get_column_compare_function@@Base>:
   12ed4:	ldr	r0, [r0]
   12ed8:	add	r1, r1, r1, lsl #1
   12edc:	add	r0, r0, r1, lsl #2
   12ee0:	ldr	r0, [r0, #8]
   12ee4:	bx	lr

00012ee8 <table_set_column_compare_function@@Base>:
   12ee8:	ldr	r0, [r0]
   12eec:	add	r1, r1, r1, lsl #1
   12ef0:	add	r0, r0, r1, lsl #2
   12ef4:	str	r2, [r0, #8]
   12ef8:	bx	lr

00012efc <table_compare_bool@@Base>:
   12efc:	cmp	r0, #0
   12f00:	beq	12f28 <table_compare_bool@@Base+0x2c>
   12f04:	cmp	r1, #0
   12f08:	beq	12f34 <table_compare_bool@@Base+0x38>
   12f0c:	ldrb	r2, [r1]
   12f10:	ldrb	r0, [r0]
   12f14:	mov	r1, #0
   12f18:	cmp	r0, r2
   12f1c:	mvncc	r1, #0
   12f20:	movwhi	r1, #1
   12f24:	b	12f38 <table_compare_bool@@Base+0x3c>
   12f28:	cmp	r1, #0
   12f2c:	mvnne	r1, #0
   12f30:	b	12f38 <table_compare_bool@@Base+0x3c>
   12f34:	mov	r1, #1
   12f38:	mov	r0, r1
   12f3c:	bx	lr

00012f40 <table_compare_int@@Base>:
   12f40:	cmp	r0, #0
   12f44:	beq	12f6c <table_compare_int@@Base+0x2c>
   12f48:	cmp	r1, #0
   12f4c:	beq	12f78 <table_compare_int@@Base+0x38>
   12f50:	ldr	r2, [r1]
   12f54:	ldr	r0, [r0]
   12f58:	mov	r1, #0
   12f5c:	cmp	r0, r2
   12f60:	mvnlt	r1, #0
   12f64:	movwgt	r1, #1
   12f68:	b	12f7c <table_compare_int@@Base+0x3c>
   12f6c:	cmp	r1, #0
   12f70:	mvnne	r1, #0
   12f74:	b	12f7c <table_compare_int@@Base+0x3c>
   12f78:	mov	r1, #1
   12f7c:	mov	r0, r1
   12f80:	bx	lr

00012f84 <table_compare_uint@@Base>:
   12f84:	cmp	r0, #0
   12f88:	beq	12fb0 <table_compare_uint@@Base+0x2c>
   12f8c:	cmp	r1, #0
   12f90:	beq	12fbc <table_compare_uint@@Base+0x38>
   12f94:	ldr	r2, [r1]
   12f98:	ldr	r0, [r0]
   12f9c:	mov	r1, #0
   12fa0:	cmp	r0, r2
   12fa4:	mvncc	r1, #0
   12fa8:	movwhi	r1, #1
   12fac:	b	12fc0 <table_compare_uint@@Base+0x3c>
   12fb0:	cmp	r1, #0
   12fb4:	mvnne	r1, #0
   12fb8:	b	12fc0 <table_compare_uint@@Base+0x3c>
   12fbc:	mov	r1, #1
   12fc0:	mov	r0, r1
   12fc4:	bx	lr

00012fc8 <table_compare_int8@@Base>:
   12fc8:	cmp	r0, #0
   12fcc:	beq	12ff4 <table_compare_int8@@Base+0x2c>
   12fd0:	cmp	r1, #0
   12fd4:	beq	13000 <table_compare_int8@@Base+0x38>
   12fd8:	ldrsb	r2, [r1]
   12fdc:	ldrsb	r0, [r0]
   12fe0:	mov	r1, #0
   12fe4:	cmp	r0, r2
   12fe8:	mvnlt	r1, #0
   12fec:	movwgt	r1, #1
   12ff0:	b	13004 <table_compare_int8@@Base+0x3c>
   12ff4:	cmp	r1, #0
   12ff8:	mvnne	r1, #0
   12ffc:	b	13004 <table_compare_int8@@Base+0x3c>
   13000:	mov	r1, #1
   13004:	mov	r0, r1
   13008:	bx	lr

0001300c <table_compare_uint8@@Base>:
   1300c:	cmp	r0, #0
   13010:	beq	13038 <table_compare_uint8@@Base+0x2c>
   13014:	cmp	r1, #0
   13018:	beq	13044 <table_compare_uint8@@Base+0x38>
   1301c:	ldrb	r2, [r1]
   13020:	ldrb	r0, [r0]
   13024:	mov	r1, #0
   13028:	cmp	r0, r2
   1302c:	mvncc	r1, #0
   13030:	movwhi	r1, #1
   13034:	b	13048 <table_compare_uint8@@Base+0x3c>
   13038:	cmp	r1, #0
   1303c:	mvnne	r1, #0
   13040:	b	13048 <table_compare_uint8@@Base+0x3c>
   13044:	mov	r1, #1
   13048:	mov	r0, r1
   1304c:	bx	lr

00013050 <table_compare_int16@@Base>:
   13050:	cmp	r0, #0
   13054:	beq	1307c <table_compare_int16@@Base+0x2c>
   13058:	cmp	r1, #0
   1305c:	beq	13088 <table_compare_int16@@Base+0x38>
   13060:	ldrsh	r2, [r1]
   13064:	ldrsh	r0, [r0]
   13068:	mov	r1, #0
   1306c:	cmp	r0, r2
   13070:	mvnlt	r1, #0
   13074:	movwgt	r1, #1
   13078:	b	1308c <table_compare_int16@@Base+0x3c>
   1307c:	cmp	r1, #0
   13080:	mvnne	r1, #0
   13084:	b	1308c <table_compare_int16@@Base+0x3c>
   13088:	mov	r1, #1
   1308c:	mov	r0, r1
   13090:	bx	lr

00013094 <table_compare_uint16@@Base>:
   13094:	cmp	r0, #0
   13098:	beq	130c0 <table_compare_uint16@@Base+0x2c>
   1309c:	cmp	r1, #0
   130a0:	beq	130cc <table_compare_uint16@@Base+0x38>
   130a4:	ldrh	r2, [r1]
   130a8:	ldrh	r0, [r0]
   130ac:	mov	r1, #0
   130b0:	cmp	r0, r2
   130b4:	mvncc	r1, #0
   130b8:	movwhi	r1, #1
   130bc:	b	130d0 <table_compare_uint16@@Base+0x3c>
   130c0:	cmp	r1, #0
   130c4:	mvnne	r1, #0
   130c8:	b	130d0 <table_compare_uint16@@Base+0x3c>
   130cc:	mov	r1, #1
   130d0:	mov	r0, r1
   130d4:	bx	lr

000130d8 <table_compare_int32@@Base>:
   130d8:	cmp	r0, #0
   130dc:	beq	13104 <table_compare_int32@@Base+0x2c>
   130e0:	cmp	r1, #0
   130e4:	beq	13110 <table_compare_int32@@Base+0x38>
   130e8:	ldr	r2, [r1]
   130ec:	ldr	r0, [r0]
   130f0:	mov	r1, #0
   130f4:	cmp	r0, r2
   130f8:	mvnlt	r1, #0
   130fc:	movwgt	r1, #1
   13100:	b	13114 <table_compare_int32@@Base+0x3c>
   13104:	cmp	r1, #0
   13108:	mvnne	r1, #0
   1310c:	b	13114 <table_compare_int32@@Base+0x3c>
   13110:	mov	r1, #1
   13114:	mov	r0, r1
   13118:	bx	lr

0001311c <table_compare_uint32@@Base>:
   1311c:	cmp	r0, #0
   13120:	beq	13148 <table_compare_uint32@@Base+0x2c>
   13124:	cmp	r1, #0
   13128:	beq	13154 <table_compare_uint32@@Base+0x38>
   1312c:	ldr	r2, [r1]
   13130:	ldr	r0, [r0]
   13134:	mov	r1, #0
   13138:	cmp	r0, r2
   1313c:	mvncc	r1, #0
   13140:	movwhi	r1, #1
   13144:	b	13158 <table_compare_uint32@@Base+0x3c>
   13148:	cmp	r1, #0
   1314c:	mvnne	r1, #0
   13150:	b	13158 <table_compare_uint32@@Base+0x3c>
   13154:	mov	r1, #1
   13158:	mov	r0, r1
   1315c:	bx	lr

00013160 <table_compare_int64@@Base>:
   13160:	cmp	r0, #0
   13164:	beq	131ac <table_compare_int64@@Base+0x4c>
   13168:	cmp	r1, #0
   1316c:	beq	131b8 <table_compare_int64@@Base+0x58>
   13170:	push	{r5, r7, fp, lr}
   13174:	add	fp, sp, #8
   13178:	ldm	r0, {r0, r5}
   1317c:	ldm	r1, {r2, r7}
   13180:	mov	r1, #0
   13184:	subs	r3, r0, r2
   13188:	sbcs	r3, r5, r7
   1318c:	movwlt	r1, #1
   13190:	cmp	r1, #0
   13194:	mvnne	r1, #0
   13198:	subs	r0, r2, r0
   1319c:	sbcs	r0, r7, r5
   131a0:	movwlt	r1, #1
   131a4:	pop	{r5, r7, fp, lr}
   131a8:	b	131bc <table_compare_int64@@Base+0x5c>
   131ac:	cmp	r1, #0
   131b0:	mvnne	r1, #0
   131b4:	b	131bc <table_compare_int64@@Base+0x5c>
   131b8:	mov	r1, #1
   131bc:	mov	r0, r1
   131c0:	bx	lr

000131c4 <table_compare_uint64@@Base>:
   131c4:	cmp	r0, #0
   131c8:	beq	13210 <table_compare_uint64@@Base+0x4c>
   131cc:	cmp	r1, #0
   131d0:	beq	1321c <table_compare_uint64@@Base+0x58>
   131d4:	push	{r5, r7, fp, lr}
   131d8:	add	fp, sp, #8
   131dc:	ldm	r0, {r0, r5}
   131e0:	ldm	r1, {r2, r7}
   131e4:	mov	r1, #0
   131e8:	subs	r3, r0, r2
   131ec:	sbcs	r3, r5, r7
   131f0:	movwcc	r1, #1
   131f4:	cmp	r1, #0
   131f8:	mvnne	r1, #0
   131fc:	subs	r0, r2, r0
   13200:	sbcs	r0, r7, r5
   13204:	movwcc	r1, #1
   13208:	pop	{r5, r7, fp, lr}
   1320c:	b	13220 <table_compare_uint64@@Base+0x5c>
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	b	13220 <table_compare_uint64@@Base+0x5c>
   1321c:	mov	r1, #1
   13220:	mov	r0, r1
   13224:	bx	lr

00013228 <table_compare_short@@Base>:
   13228:	cmp	r0, #0
   1322c:	beq	13254 <table_compare_short@@Base+0x2c>
   13230:	cmp	r1, #0
   13234:	beq	13260 <table_compare_short@@Base+0x38>
   13238:	ldrsh	r2, [r1]
   1323c:	ldrsh	r0, [r0]
   13240:	mov	r1, #0
   13244:	cmp	r0, r2
   13248:	mvnlt	r1, #0
   1324c:	movwgt	r1, #1
   13250:	b	13264 <table_compare_short@@Base+0x3c>
   13254:	cmp	r1, #0
   13258:	mvnne	r1, #0
   1325c:	b	13264 <table_compare_short@@Base+0x3c>
   13260:	mov	r1, #1
   13264:	mov	r0, r1
   13268:	bx	lr

0001326c <table_compare_ushort@@Base>:
   1326c:	cmp	r0, #0
   13270:	beq	13298 <table_compare_ushort@@Base+0x2c>
   13274:	cmp	r1, #0
   13278:	beq	132a4 <table_compare_ushort@@Base+0x38>
   1327c:	ldrh	r2, [r1]
   13280:	ldrh	r0, [r0]
   13284:	mov	r1, #0
   13288:	cmp	r0, r2
   1328c:	mvncc	r1, #0
   13290:	movwhi	r1, #1
   13294:	b	132a8 <table_compare_ushort@@Base+0x3c>
   13298:	cmp	r1, #0
   1329c:	mvnne	r1, #0
   132a0:	b	132a8 <table_compare_ushort@@Base+0x3c>
   132a4:	mov	r1, #1
   132a8:	mov	r0, r1
   132ac:	bx	lr

000132b0 <table_compare_long@@Base>:
   132b0:	cmp	r0, #0
   132b4:	beq	132dc <table_compare_long@@Base+0x2c>
   132b8:	cmp	r1, #0
   132bc:	beq	132e8 <table_compare_long@@Base+0x38>
   132c0:	ldr	r2, [r1]
   132c4:	ldr	r0, [r0]
   132c8:	mov	r1, #0
   132cc:	cmp	r0, r2
   132d0:	mvnlt	r1, #0
   132d4:	movwgt	r1, #1
   132d8:	b	132ec <table_compare_long@@Base+0x3c>
   132dc:	cmp	r1, #0
   132e0:	mvnne	r1, #0
   132e4:	b	132ec <table_compare_long@@Base+0x3c>
   132e8:	mov	r1, #1
   132ec:	mov	r0, r1
   132f0:	bx	lr

000132f4 <table_compare_ulong@@Base>:
   132f4:	cmp	r0, #0
   132f8:	beq	13320 <table_compare_ulong@@Base+0x2c>
   132fc:	cmp	r1, #0
   13300:	beq	1332c <table_compare_ulong@@Base+0x38>
   13304:	ldr	r2, [r1]
   13308:	ldr	r0, [r0]
   1330c:	mov	r1, #0
   13310:	cmp	r0, r2
   13314:	mvncc	r1, #0
   13318:	movwhi	r1, #1
   1331c:	b	13330 <table_compare_ulong@@Base+0x3c>
   13320:	cmp	r1, #0
   13324:	mvnne	r1, #0
   13328:	b	13330 <table_compare_ulong@@Base+0x3c>
   1332c:	mov	r1, #1
   13330:	mov	r0, r1
   13334:	bx	lr

00013338 <table_compare_llong@@Base>:
   13338:	cmp	r0, #0
   1333c:	beq	13384 <table_compare_llong@@Base+0x4c>
   13340:	cmp	r1, #0
   13344:	beq	13390 <table_compare_llong@@Base+0x58>
   13348:	push	{r5, r7, fp, lr}
   1334c:	add	fp, sp, #8
   13350:	ldm	r0, {r0, r5}
   13354:	ldm	r1, {r2, r7}
   13358:	mov	r1, #0
   1335c:	subs	r3, r0, r2
   13360:	sbcs	r3, r5, r7
   13364:	movwlt	r1, #1
   13368:	cmp	r1, #0
   1336c:	mvnne	r1, #0
   13370:	subs	r0, r2, r0
   13374:	sbcs	r0, r7, r5
   13378:	movwlt	r1, #1
   1337c:	pop	{r5, r7, fp, lr}
   13380:	b	13394 <table_compare_llong@@Base+0x5c>
   13384:	cmp	r1, #0
   13388:	mvnne	r1, #0
   1338c:	b	13394 <table_compare_llong@@Base+0x5c>
   13390:	mov	r1, #1
   13394:	mov	r0, r1
   13398:	bx	lr

0001339c <table_compare_ullong@@Base>:
   1339c:	cmp	r0, #0
   133a0:	beq	133c8 <table_compare_ullong@@Base+0x2c>
   133a4:	cmp	r1, #0
   133a8:	beq	133d4 <table_compare_ullong@@Base+0x38>
   133ac:	ldr	r2, [r1]
   133b0:	ldr	r0, [r0]
   133b4:	mov	r1, #0
   133b8:	cmp	r0, r2
   133bc:	mvncc	r1, #0
   133c0:	movwhi	r1, #1
   133c4:	b	133d8 <table_compare_ullong@@Base+0x3c>
   133c8:	cmp	r1, #0
   133cc:	mvnne	r1, #0
   133d0:	b	133d8 <table_compare_ullong@@Base+0x3c>
   133d4:	mov	r1, #1
   133d8:	mov	r0, r1
   133dc:	bx	lr

000133e0 <table_compare_float@@Base>:
   133e0:	cmp	r0, #0
   133e4:	beq	13410 <table_compare_float@@Base+0x30>
   133e8:	cmp	r1, #0
   133ec:	beq	1341c <table_compare_float@@Base+0x3c>
   133f0:	vldr	s0, [r1]
   133f4:	vldr	s2, [r0]
   133f8:	mov	r1, #0
   133fc:	vcmpe.f32	s2, s0
   13400:	vmrs	APSR_nzcv, fpscr
   13404:	mvnmi	r1, #0
   13408:	movwgt	r1, #1
   1340c:	b	13420 <table_compare_float@@Base+0x40>
   13410:	cmp	r1, #0
   13414:	mvnne	r1, #0
   13418:	b	13420 <table_compare_float@@Base+0x40>
   1341c:	mov	r1, #1
   13420:	mov	r0, r1
   13424:	bx	lr

00013428 <table_compare_double@@Base>:
   13428:	cmp	r0, #0
   1342c:	beq	13458 <table_compare_double@@Base+0x30>
   13430:	cmp	r1, #0
   13434:	beq	13464 <table_compare_double@@Base+0x3c>
   13438:	vldr	d16, [r1]
   1343c:	vldr	d17, [r0]
   13440:	mov	r1, #0
   13444:	vcmpe.f64	d17, d16
   13448:	vmrs	APSR_nzcv, fpscr
   1344c:	mvnmi	r1, #0
   13450:	movwgt	r1, #1
   13454:	b	13468 <table_compare_double@@Base+0x40>
   13458:	cmp	r1, #0
   1345c:	mvnne	r1, #0
   13460:	b	13468 <table_compare_double@@Base+0x40>
   13464:	mov	r1, #1
   13468:	mov	r0, r1
   1346c:	bx	lr

00013470 <table_compare_ldouble@@Base>:
   13470:	cmp	r0, #0
   13474:	beq	134a0 <table_compare_ldouble@@Base+0x30>
   13478:	cmp	r1, #0
   1347c:	beq	134ac <table_compare_ldouble@@Base+0x3c>
   13480:	vldr	d16, [r1]
   13484:	vldr	d17, [r0]
   13488:	mov	r1, #0
   1348c:	vcmpe.f64	d17, d16
   13490:	vmrs	APSR_nzcv, fpscr
   13494:	mvnmi	r1, #0
   13498:	movwgt	r1, #1
   1349c:	b	134b0 <table_compare_ldouble@@Base+0x40>
   134a0:	cmp	r1, #0
   134a4:	mvnne	r1, #0
   134a8:	b	134b0 <table_compare_ldouble@@Base+0x40>
   134ac:	mov	r1, #1
   134b0:	mov	r0, r1
   134b4:	bx	lr

000134b8 <table_compare_char@@Base>:
   134b8:	cmp	r0, #0
   134bc:	beq	134e4 <table_compare_char@@Base+0x2c>
   134c0:	cmp	r1, #0
   134c4:	beq	134f0 <table_compare_char@@Base+0x38>
   134c8:	ldrb	r2, [r1]
   134cc:	ldrb	r0, [r0]
   134d0:	mov	r1, #0
   134d4:	cmp	r0, r2
   134d8:	mvncc	r1, #0
   134dc:	movwhi	r1, #1
   134e0:	b	134f4 <table_compare_char@@Base+0x3c>
   134e4:	cmp	r1, #0
   134e8:	mvnne	r1, #0
   134ec:	b	134f4 <table_compare_char@@Base+0x3c>
   134f0:	mov	r1, #1
   134f4:	mov	r0, r1
   134f8:	bx	lr

000134fc <table_compare_uchar@@Base>:
   134fc:	cmp	r0, #0
   13500:	beq	13528 <table_compare_uchar@@Base+0x2c>
   13504:	cmp	r1, #0
   13508:	beq	13534 <table_compare_uchar@@Base+0x38>
   1350c:	ldrb	r2, [r1]
   13510:	ldrb	r0, [r0]
   13514:	mov	r1, #0
   13518:	cmp	r0, r2
   1351c:	mvncc	r1, #0
   13520:	movwhi	r1, #1
   13524:	b	13538 <table_compare_uchar@@Base+0x3c>
   13528:	cmp	r1, #0
   1352c:	mvnne	r1, #0
   13530:	b	13538 <table_compare_uchar@@Base+0x3c>
   13534:	mov	r1, #1
   13538:	mov	r0, r1
   1353c:	bx	lr

00013540 <table_compare_string@@Base>:
   13540:	cmp	r0, #0
   13544:	beq	13554 <table_compare_string@@Base+0x14>
   13548:	cmp	r1, #0
   1354c:	beq	13560 <table_compare_string@@Base+0x20>
   13550:	b	11eb8 <strcmp@plt>
   13554:	cmp	r1, #0
   13558:	mvnne	r1, #0
   1355c:	b	13564 <table_compare_string@@Base+0x24>
   13560:	mov	r1, #1
   13564:	mov	r0, r1
   13568:	bx	lr

0001356c <table_compare_ptr@@Base>:
   1356c:	cmp	r0, r1
   13570:	mov	r2, #0
   13574:	mvncc	r2, #0
   13578:	movwhi	r2, #1
   1357c:	mov	r0, r2
   13580:	bx	lr

00013584 <table_get_default_compare_function_for_data_type@@Base>:
   13584:	cmp	r0, #23
   13588:	movhi	r0, #0
   1358c:	bxhi	lr
   13590:	movw	r1, #19724	; 0x4d0c
   13594:	movt	r1, #1
   13598:	ldr	r0, [r1, r0, lsl #2]
   1359c:	bx	lr

000135a0 <table_get@@Base>:
   135a0:	push	{fp, lr}
   135a4:	mov	fp, sp
   135a8:	bl	14154 <table_get_cell_ptr@@Base>
   135ac:	ldr	r0, [r0]
   135b0:	pop	{fp, pc}

000135b4 <table_get_bool@@Base>:
   135b4:	push	{fp, lr}
   135b8:	mov	fp, sp
   135bc:	bl	14154 <table_get_cell_ptr@@Base>
   135c0:	ldr	r0, [r0]
   135c4:	ldrb	r0, [r0]
   135c8:	pop	{fp, pc}

000135cc <table_get_int@@Base>:
   135cc:	push	{fp, lr}
   135d0:	mov	fp, sp
   135d4:	bl	14154 <table_get_cell_ptr@@Base>
   135d8:	ldr	r0, [r0]
   135dc:	ldr	r0, [r0]
   135e0:	pop	{fp, pc}

000135e4 <table_get_uint@@Base>:
   135e4:	push	{fp, lr}
   135e8:	mov	fp, sp
   135ec:	bl	14154 <table_get_cell_ptr@@Base>
   135f0:	ldr	r0, [r0]
   135f4:	ldr	r0, [r0]
   135f8:	pop	{fp, pc}

000135fc <table_get_int8@@Base>:
   135fc:	push	{fp, lr}
   13600:	mov	fp, sp
   13604:	bl	14154 <table_get_cell_ptr@@Base>
   13608:	ldr	r0, [r0]
   1360c:	ldrsb	r0, [r0]
   13610:	pop	{fp, pc}

00013614 <table_get_uint8@@Base>:
   13614:	push	{fp, lr}
   13618:	mov	fp, sp
   1361c:	bl	14154 <table_get_cell_ptr@@Base>
   13620:	ldr	r0, [r0]
   13624:	ldrb	r0, [r0]
   13628:	pop	{fp, pc}

0001362c <table_get_int16@@Base>:
   1362c:	push	{fp, lr}
   13630:	mov	fp, sp
   13634:	bl	14154 <table_get_cell_ptr@@Base>
   13638:	ldr	r0, [r0]
   1363c:	ldrsh	r0, [r0]
   13640:	pop	{fp, pc}

00013644 <table_get_uint16@@Base>:
   13644:	push	{fp, lr}
   13648:	mov	fp, sp
   1364c:	bl	14154 <table_get_cell_ptr@@Base>
   13650:	ldr	r0, [r0]
   13654:	ldrh	r0, [r0]
   13658:	pop	{fp, pc}

0001365c <table_get_int32@@Base>:
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	bl	14154 <table_get_cell_ptr@@Base>
   13668:	ldr	r0, [r0]
   1366c:	ldr	r0, [r0]
   13670:	pop	{fp, pc}

00013674 <table_get_uint32@@Base>:
   13674:	push	{fp, lr}
   13678:	mov	fp, sp
   1367c:	bl	14154 <table_get_cell_ptr@@Base>
   13680:	ldr	r0, [r0]
   13684:	ldr	r0, [r0]
   13688:	pop	{fp, pc}

0001368c <table_get_int64@@Base>:
   1368c:	push	{fp, lr}
   13690:	mov	fp, sp
   13694:	bl	14154 <table_get_cell_ptr@@Base>
   13698:	ldr	r0, [r0]
   1369c:	ldrd	r0, [r0]
   136a0:	pop	{fp, pc}

000136a4 <table_get_uint64@@Base>:
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	bl	14154 <table_get_cell_ptr@@Base>
   136b0:	ldr	r0, [r0]
   136b4:	ldrd	r0, [r0]
   136b8:	pop	{fp, pc}

000136bc <table_get_short@@Base>:
   136bc:	push	{fp, lr}
   136c0:	mov	fp, sp
   136c4:	bl	14154 <table_get_cell_ptr@@Base>
   136c8:	ldr	r0, [r0]
   136cc:	ldrsh	r0, [r0]
   136d0:	pop	{fp, pc}

000136d4 <table_get_ushort@@Base>:
   136d4:	push	{fp, lr}
   136d8:	mov	fp, sp
   136dc:	bl	14154 <table_get_cell_ptr@@Base>
   136e0:	ldr	r0, [r0]
   136e4:	ldrh	r0, [r0]
   136e8:	pop	{fp, pc}

000136ec <table_get_long@@Base>:
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	bl	14154 <table_get_cell_ptr@@Base>
   136f8:	ldr	r0, [r0]
   136fc:	ldr	r0, [r0]
   13700:	pop	{fp, pc}

00013704 <table_get_ulong@@Base>:
   13704:	push	{fp, lr}
   13708:	mov	fp, sp
   1370c:	bl	14154 <table_get_cell_ptr@@Base>
   13710:	ldr	r0, [r0]
   13714:	ldr	r0, [r0]
   13718:	pop	{fp, pc}

0001371c <table_get_llong@@Base>:
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	bl	14154 <table_get_cell_ptr@@Base>
   13728:	ldr	r0, [r0]
   1372c:	ldrd	r0, [r0]
   13730:	pop	{fp, pc}

00013734 <table_get_ullong@@Base>:
   13734:	push	{fp, lr}
   13738:	mov	fp, sp
   1373c:	bl	14154 <table_get_cell_ptr@@Base>
   13740:	ldr	r0, [r0]
   13744:	ldrd	r0, [r0]
   13748:	pop	{fp, pc}

0001374c <table_get_float@@Base>:
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	bl	14154 <table_get_cell_ptr@@Base>
   13758:	ldr	r0, [r0]
   1375c:	vldr	s0, [r0]
   13760:	pop	{fp, pc}

00013764 <table_get_double@@Base>:
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	bl	14154 <table_get_cell_ptr@@Base>
   13770:	ldr	r0, [r0]
   13774:	vldr	d0, [r0]
   13778:	pop	{fp, pc}

0001377c <table_get_ldouble@@Base>:
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	bl	14154 <table_get_cell_ptr@@Base>
   13788:	ldr	r0, [r0]
   1378c:	vldr	d0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_get_char@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	14154 <table_get_cell_ptr@@Base>
   137a0:	ldr	r0, [r0]
   137a4:	ldrb	r0, [r0]
   137a8:	pop	{fp, pc}

000137ac <table_get_uchar@@Base>:
   137ac:	push	{fp, lr}
   137b0:	mov	fp, sp
   137b4:	bl	14154 <table_get_cell_ptr@@Base>
   137b8:	ldr	r0, [r0]
   137bc:	ldrb	r0, [r0]
   137c0:	pop	{fp, pc}

000137c4 <table_get_string@@Base>:
   137c4:	push	{fp, lr}
   137c8:	mov	fp, sp
   137cc:	bl	14154 <table_get_cell_ptr@@Base>
   137d0:	ldr	r0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_ptr@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	14154 <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	pop	{fp, pc}

000137ec <table_row_init@@Base>:
   137ec:	push	{r4, r5, fp, lr}
   137f0:	add	fp, sp, #8
   137f4:	mov	r4, r1
   137f8:	ldr	r1, [r0, #12]
   137fc:	ldr	r5, [r0, #16]
   13800:	lsl	r0, r1, #2
   13804:	bl	11f00 <malloc@plt>
   13808:	str	r0, [r5, r4, lsl #2]
   1380c:	pop	{r4, r5, fp, pc}

00013810 <table_get_row_ptr@@Base>:
   13810:	ldr	r0, [r0, #16]
   13814:	add	r0, r0, r1, lsl #2
   13818:	bx	lr

0001381c <table_row_destroy@@Base>:
   1381c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13820:	add	fp, sp, #24
   13824:	mov	r4, r1
   13828:	mov	r5, r0
   1382c:	bl	12bc0 <table_get_column_length@@Base>
   13830:	ldr	r8, [r5, #16]
   13834:	cmp	r0, #1
   13838:	blt	13860 <table_row_destroy@@Base+0x44>
   1383c:	mov	r6, r0
   13840:	mov	r7, #0
   13844:	mov	r0, r5
   13848:	mov	r1, r4
   1384c:	mov	r2, r7
   13850:	bl	14170 <table_cell_destroy@@Base>
   13854:	add	r7, r7, #1
   13858:	cmp	r6, r7
   1385c:	bne	13844 <table_row_destroy@@Base+0x28>
   13860:	ldr	r0, [r8, r4, lsl #2]
   13864:	cmp	r0, #0
   13868:	beq	13874 <table_row_destroy@@Base+0x58>
   1386c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13870:	b	11ed0 <free@plt>
   13874:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013878 <table_get_row_length@@Base>:
   13878:	ldr	r0, [r0, #20]
   1387c:	bx	lr

00013880 <table_add_row@@Base>:
   13880:	push	{r4, r5, r6, r7, fp, lr}
   13884:	add	fp, sp, #16
   13888:	ldr	r5, [r0, #20]
   1388c:	ldr	r1, [r0, #24]
   13890:	mov	r4, r0
   13894:	udiv	r0, r5, r1
   13898:	mls	r0, r0, r1, r5
   1389c:	cmp	r0, #0
   138a0:	bne	138c4 <table_add_row@@Base+0x44>
   138a4:	ldr	r2, [r4, #28]
   138a8:	ldr	r0, [r4, #16]
   138ac:	add	r1, r2, r1
   138b0:	str	r1, [r4, #28]
   138b4:	lsl	r1, r1, #2
   138b8:	bl	11edc <realloc@plt>
   138bc:	str	r0, [r4, #16]
   138c0:	ldr	r5, [r4, #20]
   138c4:	mov	r0, r4
   138c8:	bl	12bc0 <table_get_column_length@@Base>
   138cc:	mov	r6, r0
   138d0:	ldr	r0, [r4, #12]
   138d4:	ldr	r7, [r4, #16]
   138d8:	lsl	r0, r0, #2
   138dc:	bl	11f00 <malloc@plt>
   138e0:	cmp	r6, #1
   138e4:	str	r0, [r7, r5, lsl #2]
   138e8:	blt	1390c <table_add_row@@Base+0x8c>
   138ec:	mov	r7, #0
   138f0:	mov	r0, r4
   138f4:	mov	r1, r5
   138f8:	mov	r2, r7
   138fc:	bl	14134 <table_cell_init@@Base>
   13900:	add	r7, r7, #1
   13904:	cmp	r6, r7
   13908:	bne	138f0 <table_add_row@@Base+0x70>
   1390c:	ldr	r1, [r4, #20]
   13910:	mov	r0, r4
   13914:	mvn	r2, #0
   13918:	mov	r3, #2
   1391c:	bl	12acc <table_notify@@Base>
   13920:	ldr	r0, [r4, #20]
   13924:	add	r1, r0, #1
   13928:	str	r1, [r4, #20]
   1392c:	pop	{r4, r5, r6, r7, fp, pc}

00013930 <table_remove_row@@Base>:
   13930:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13934:	add	fp, sp, #24
   13938:	ldr	r8, [r0, #20]
   1393c:	mov	r4, r1
   13940:	mov	r5, r0
   13944:	bl	12bc0 <table_get_column_length@@Base>
   13948:	cmp	r0, #1
   1394c:	blt	13998 <table_remove_row@@Base+0x68>
   13950:	mov	r6, r0
   13954:	mov	r7, #0
   13958:	mov	r0, r5
   1395c:	mov	r1, r7
   13960:	bl	12c38 <table_get_column_data_type@@Base>
   13964:	cmp	r0, #23
   13968:	beq	1398c <table_remove_row@@Base+0x5c>
   1396c:	mov	r0, r5
   13970:	mov	r1, r4
   13974:	mov	r2, r7
   13978:	bl	14154 <table_get_cell_ptr@@Base>
   1397c:	ldr	r0, [r0]
   13980:	cmp	r0, #0
   13984:	beq	1398c <table_remove_row@@Base+0x5c>
   13988:	bl	11ed0 <free@plt>
   1398c:	add	r7, r7, #1
   13990:	cmp	r6, r7
   13994:	bne	13958 <table_remove_row@@Base+0x28>
   13998:	ldr	r0, [r5, #16]
   1399c:	ldr	r0, [r0, r4, lsl #2]
   139a0:	cmp	r0, #0
   139a4:	beq	139ac <table_remove_row@@Base+0x7c>
   139a8:	bl	11ed0 <free@plt>
   139ac:	sub	r0, r8, #1
   139b0:	cmp	r0, r4
   139b4:	ble	139d8 <table_remove_row@@Base+0xa8>
   139b8:	mov	r1, r4
   139bc:	ldr	r2, [r5, #16]
   139c0:	add	r3, r2, r1, lsl #2
   139c4:	ldr	r3, [r3, #4]
   139c8:	str	r3, [r2, r1, lsl #2]
   139cc:	add	r1, r1, #1
   139d0:	cmp	r0, r1
   139d4:	bne	139bc <table_remove_row@@Base+0x8c>
   139d8:	ldr	r0, [r5, #20]
   139dc:	ldr	r1, [r5, #24]
   139e0:	sub	r0, r0, #1
   139e4:	udiv	r2, r0, r1
   139e8:	str	r0, [r5, #20]
   139ec:	mls	r0, r2, r1, r0
   139f0:	cmp	r0, #0
   139f4:	bne	13a14 <table_remove_row@@Base+0xe4>
   139f8:	ldr	r2, [r5, #28]
   139fc:	ldr	r0, [r5, #16]
   13a00:	sub	r1, r2, r1
   13a04:	str	r1, [r5, #28]
   13a08:	lsl	r1, r1, #2
   13a0c:	bl	11edc <realloc@plt>
   13a10:	str	r0, [r5, #16]
   13a14:	mov	r0, r5
   13a18:	mov	r1, r4
   13a1c:	mvn	r2, #0
   13a20:	mov	r3, #4
   13a24:	bl	12acc <table_notify@@Base>
   13a28:	mov	r0, #0
   13a2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a30 <table_set_row_ptr@@Base>:
   13a30:	ldr	r2, [r2]
   13a34:	ldr	r0, [r0, #16]
   13a38:	str	r2, [r0, r1, lsl #2]
   13a3c:	bx	lr

00013a40 <table_set@@Base>:
   13a40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a44:	add	fp, sp, #24
   13a48:	mov	r8, r3
   13a4c:	mov	r4, r2
   13a50:	mov	r9, r1
   13a54:	mov	r6, r0
   13a58:	bl	14154 <table_get_cell_ptr@@Base>
   13a5c:	mov	r5, r0
   13a60:	mov	r0, r6
   13a64:	mov	r1, r4
   13a68:	bl	12b98 <table_get_col_ptr@@Base>
   13a6c:	ldr	r1, [fp, #8]
   13a70:	mvn	r7, #0
   13a74:	cmp	r1, #23
   13a78:	bhi	13d38 <table_set@@Base+0x2f8>
   13a7c:	add	r2, pc, #0
   13a80:	ldr	pc, [r2, r1, lsl #2]
   13a84:	andeq	r3, r1, r4, ror #21
   13a88:	strdeq	r3, [r1], -r4
   13a8c:	andeq	r3, r1, r4, lsl #22
   13a90:	andeq	r3, r1, r4, lsl fp
   13a94:	andeq	r3, r1, r4, lsr #22
   13a98:	andeq	r3, r1, r4, lsr fp
   13a9c:	andeq	r3, r1, r4, asr #22
   13aa0:	andeq	r3, r1, r4, asr fp
   13aa4:	andeq	r3, r1, r4, ror #22
   13aa8:	andeq	r3, r1, r4, ror fp
   13aac:	andeq	r3, r1, r4, lsl #23
   13ab0:	muleq	r1, r4, fp
   13ab4:	andeq	r3, r1, ip, asr #23
   13ab8:	ldrdeq	r3, [r1], -ip
   13abc:	andeq	r3, r1, ip, ror #23
   13ac0:	strdeq	r3, [r1], -ip
   13ac4:	andeq	r3, r1, ip, lsl #24
   13ac8:	andeq	r3, r1, r0, asr #24
   13acc:	andeq	r3, r1, r0, asr ip
   13ad0:	muleq	r1, r0, ip
   13ad4:	andeq	r3, r1, r0, lsr #25
   13ad8:			; <UNDEFINED> instruction: 0x00013cb0
   13adc:	andeq	r3, r1, ip, ror #25
   13ae0:	andeq	r3, r1, r0, asr #26
   13ae4:	ldr	r0, [r0, #4]
   13ae8:	cmp	r0, #0
   13aec:	bne	13d38 <table_set@@Base+0x2f8>
   13af0:	b	13c18 <table_set@@Base+0x1d8>
   13af4:	ldr	r0, [r0, #4]
   13af8:	cmp	r0, #1
   13afc:	beq	13c18 <table_set@@Base+0x1d8>
   13b00:	b	13d38 <table_set@@Base+0x2f8>
   13b04:	ldr	r0, [r0, #4]
   13b08:	cmp	r0, #2
   13b0c:	beq	13cf8 <table_set@@Base+0x2b8>
   13b10:	b	13d38 <table_set@@Base+0x2f8>
   13b14:	ldr	r0, [r0, #4]
   13b18:	cmp	r0, #3
   13b1c:	beq	13cf8 <table_set@@Base+0x2b8>
   13b20:	b	13d38 <table_set@@Base+0x2f8>
   13b24:	ldr	r0, [r0, #4]
   13b28:	cmp	r0, #4
   13b2c:	beq	13ba0 <table_set@@Base+0x160>
   13b30:	b	13d38 <table_set@@Base+0x2f8>
   13b34:	ldr	r0, [r0, #4]
   13b38:	cmp	r0, #5
   13b3c:	beq	13ba0 <table_set@@Base+0x160>
   13b40:	b	13d38 <table_set@@Base+0x2f8>
   13b44:	ldr	r0, [r0, #4]
   13b48:	cmp	r0, #6
   13b4c:	beq	13c18 <table_set@@Base+0x1d8>
   13b50:	b	13d38 <table_set@@Base+0x2f8>
   13b54:	ldr	r0, [r0, #4]
   13b58:	cmp	r0, #7
   13b5c:	beq	13c18 <table_set@@Base+0x1d8>
   13b60:	b	13d38 <table_set@@Base+0x2f8>
   13b64:	ldr	r0, [r0, #4]
   13b68:	cmp	r0, #8
   13b6c:	beq	13c5c <table_set@@Base+0x21c>
   13b70:	b	13d38 <table_set@@Base+0x2f8>
   13b74:	ldr	r0, [r0, #4]
   13b78:	cmp	r0, #9
   13b7c:	beq	13c5c <table_set@@Base+0x21c>
   13b80:	b	13d38 <table_set@@Base+0x2f8>
   13b84:	ldr	r0, [r0, #4]
   13b88:	cmp	r0, #10
   13b8c:	beq	13ba0 <table_set@@Base+0x160>
   13b90:	b	13d38 <table_set@@Base+0x2f8>
   13b94:	ldr	r0, [r0, #4]
   13b98:	cmp	r0, #11
   13b9c:	bne	13d38 <table_set@@Base+0x2f8>
   13ba0:	ldr	r0, [r5]
   13ba4:	cmp	r0, #0
   13ba8:	bne	13bc0 <table_set@@Base+0x180>
   13bac:	mov	r0, #2
   13bb0:	bl	11f00 <malloc@plt>
   13bb4:	cmp	r0, #0
   13bb8:	str	r0, [r5]
   13bbc:	beq	13d38 <table_set@@Base+0x2f8>
   13bc0:	ldrh	r1, [r8]
   13bc4:	strh	r1, [r0]
   13bc8:	b	13d20 <table_set@@Base+0x2e0>
   13bcc:	ldr	r0, [r0, #4]
   13bd0:	cmp	r0, #12
   13bd4:	beq	13c18 <table_set@@Base+0x1d8>
   13bd8:	b	13d38 <table_set@@Base+0x2f8>
   13bdc:	ldr	r0, [r0, #4]
   13be0:	cmp	r0, #13
   13be4:	beq	13c18 <table_set@@Base+0x1d8>
   13be8:	b	13d38 <table_set@@Base+0x2f8>
   13bec:	ldr	r0, [r0, #4]
   13bf0:	cmp	r0, #14
   13bf4:	beq	13c5c <table_set@@Base+0x21c>
   13bf8:	b	13d38 <table_set@@Base+0x2f8>
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, #15
   13c04:	beq	13c5c <table_set@@Base+0x21c>
   13c08:	b	13d38 <table_set@@Base+0x2f8>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #16
   13c14:	bne	13d38 <table_set@@Base+0x2f8>
   13c18:	ldr	r0, [r5]
   13c1c:	cmp	r0, #0
   13c20:	bne	13c38 <table_set@@Base+0x1f8>
   13c24:	mov	r0, #4
   13c28:	bl	11f00 <malloc@plt>
   13c2c:	cmp	r0, #0
   13c30:	str	r0, [r5]
   13c34:	beq	13d38 <table_set@@Base+0x2f8>
   13c38:	ldr	r1, [r8]
   13c3c:	b	13c88 <table_set@@Base+0x248>
   13c40:	ldr	r0, [r0, #4]
   13c44:	cmp	r0, #17
   13c48:	beq	13c5c <table_set@@Base+0x21c>
   13c4c:	b	13d38 <table_set@@Base+0x2f8>
   13c50:	ldr	r0, [r0, #4]
   13c54:	cmp	r0, #18
   13c58:	bne	13d38 <table_set@@Base+0x2f8>
   13c5c:	ldr	r0, [r5]
   13c60:	cmp	r0, #0
   13c64:	bne	13c7c <table_set@@Base+0x23c>
   13c68:	mov	r0, #8
   13c6c:	bl	11f00 <malloc@plt>
   13c70:	cmp	r0, #0
   13c74:	str	r0, [r5]
   13c78:	beq	13d38 <table_set@@Base+0x2f8>
   13c7c:	ldr	r1, [r8]
   13c80:	ldr	r2, [r8, #4]
   13c84:	str	r2, [r0, #4]
   13c88:	str	r1, [r0]
   13c8c:	b	13d20 <table_set@@Base+0x2e0>
   13c90:	ldr	r0, [r0, #4]
   13c94:	cmp	r0, #19
   13c98:	beq	13cf8 <table_set@@Base+0x2b8>
   13c9c:	b	13d38 <table_set@@Base+0x2f8>
   13ca0:	ldr	r0, [r0, #4]
   13ca4:	cmp	r0, #20
   13ca8:	beq	13cf8 <table_set@@Base+0x2b8>
   13cac:	b	13d38 <table_set@@Base+0x2f8>
   13cb0:	ldr	r0, [r0, #4]
   13cb4:	cmp	r0, #21
   13cb8:	bne	13d38 <table_set@@Base+0x2f8>
   13cbc:	mov	r0, r8
   13cc0:	bl	11f24 <strlen@plt>
   13cc4:	ldr	r2, [r5]
   13cc8:	add	r1, r0, #1
   13ccc:	mov	r0, r2
   13cd0:	bl	11edc <realloc@plt>
   13cd4:	cmp	r0, #0
   13cd8:	str	r0, [r5]
   13cdc:	beq	13d38 <table_set@@Base+0x2f8>
   13ce0:	mov	r1, r8
   13ce4:	bl	11ee8 <strcpy@plt>
   13ce8:	b	13d20 <table_set@@Base+0x2e0>
   13cec:	ldr	r0, [r0, #4]
   13cf0:	cmp	r0, #22
   13cf4:	bne	13d38 <table_set@@Base+0x2f8>
   13cf8:	ldr	r0, [r5]
   13cfc:	cmp	r0, #0
   13d00:	bne	13d18 <table_set@@Base+0x2d8>
   13d04:	mov	r0, #1
   13d08:	bl	11f00 <malloc@plt>
   13d0c:	cmp	r0, #0
   13d10:	str	r0, [r5]
   13d14:	beq	13d38 <table_set@@Base+0x2f8>
   13d18:	ldrb	r1, [r8]
   13d1c:	strb	r1, [r0]
   13d20:	mov	r0, r6
   13d24:	mov	r1, r9
   13d28:	mov	r2, r4
   13d2c:	mov	r3, #1
   13d30:	bl	12acc <table_notify@@Base>
   13d34:	mov	r7, #0
   13d38:	mov	r0, r7
   13d3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d40:	ldr	r0, [r0, #4]
   13d44:	cmp	r0, #23
   13d48:	bne	13d38 <table_set@@Base+0x2f8>
   13d4c:	str	r8, [r5]
   13d50:	b	13d20 <table_set@@Base+0x2e0>

00013d54 <table_set_bool@@Base>:
   13d54:	push	{fp, lr}
   13d58:	mov	fp, sp
   13d5c:	sub	sp, sp, #8
   13d60:	strb	r3, [fp, #-1]
   13d64:	mov	r3, #22
   13d68:	str	r3, [sp]
   13d6c:	sub	r3, fp, #1
   13d70:	bl	13a40 <table_set@@Base>
   13d74:	mov	sp, fp
   13d78:	pop	{fp, pc}

00013d7c <table_set_int@@Base>:
   13d7c:	push	{fp, lr}
   13d80:	mov	fp, sp
   13d84:	sub	sp, sp, #8
   13d88:	str	r3, [sp, #4]
   13d8c:	mov	r3, #0
   13d90:	str	r3, [sp]
   13d94:	add	r3, sp, #4
   13d98:	bl	13a40 <table_set@@Base>
   13d9c:	mov	sp, fp
   13da0:	pop	{fp, pc}

00013da4 <table_set_uint@@Base>:
   13da4:	push	{fp, lr}
   13da8:	mov	fp, sp
   13dac:	sub	sp, sp, #8
   13db0:	str	r3, [sp, #4]
   13db4:	mov	r3, #1
   13db8:	str	r3, [sp]
   13dbc:	add	r3, sp, #4
   13dc0:	bl	13a40 <table_set@@Base>
   13dc4:	mov	sp, fp
   13dc8:	pop	{fp, pc}

00013dcc <table_set_int8@@Base>:
   13dcc:	push	{fp, lr}
   13dd0:	mov	fp, sp
   13dd4:	sub	sp, sp, #8
   13dd8:	strb	r3, [fp, #-1]
   13ddc:	mov	r3, #2
   13de0:	str	r3, [sp]
   13de4:	sub	r3, fp, #1
   13de8:	bl	13a40 <table_set@@Base>
   13dec:	mov	sp, fp
   13df0:	pop	{fp, pc}

00013df4 <table_set_uint8@@Base>:
   13df4:	push	{fp, lr}
   13df8:	mov	fp, sp
   13dfc:	sub	sp, sp, #8
   13e00:	strb	r3, [fp, #-1]
   13e04:	mov	r3, #3
   13e08:	str	r3, [sp]
   13e0c:	sub	r3, fp, #1
   13e10:	bl	13a40 <table_set@@Base>
   13e14:	mov	sp, fp
   13e18:	pop	{fp, pc}

00013e1c <table_set_int16@@Base>:
   13e1c:	push	{fp, lr}
   13e20:	mov	fp, sp
   13e24:	sub	sp, sp, #8
   13e28:	strh	r3, [fp, #-2]
   13e2c:	mov	r3, #4
   13e30:	str	r3, [sp]
   13e34:	sub	r3, fp, #2
   13e38:	bl	13a40 <table_set@@Base>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}

00013e44 <table_set_uint16@@Base>:
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #8
   13e50:	strh	r3, [fp, #-2]
   13e54:	mov	r3, #5
   13e58:	str	r3, [sp]
   13e5c:	sub	r3, fp, #2
   13e60:	bl	13a40 <table_set@@Base>
   13e64:	mov	sp, fp
   13e68:	pop	{fp, pc}

00013e6c <table_set_int32@@Base>:
   13e6c:	push	{fp, lr}
   13e70:	mov	fp, sp
   13e74:	sub	sp, sp, #8
   13e78:	str	r3, [sp, #4]
   13e7c:	mov	r3, #6
   13e80:	str	r3, [sp]
   13e84:	add	r3, sp, #4
   13e88:	bl	13a40 <table_set@@Base>
   13e8c:	mov	sp, fp
   13e90:	pop	{fp, pc}

00013e94 <table_set_uint32@@Base>:
   13e94:	push	{fp, lr}
   13e98:	mov	fp, sp
   13e9c:	sub	sp, sp, #8
   13ea0:	str	r3, [sp, #4]
   13ea4:	mov	r3, #7
   13ea8:	str	r3, [sp]
   13eac:	add	r3, sp, #4
   13eb0:	bl	13a40 <table_set@@Base>
   13eb4:	mov	sp, fp
   13eb8:	pop	{fp, pc}

00013ebc <table_set_int64@@Base>:
   13ebc:	push	{fp, lr}
   13ec0:	mov	fp, sp
   13ec4:	sub	sp, sp, #16
   13ec8:	ldr	r3, [fp, #12]
   13ecc:	str	r3, [sp, #12]
   13ed0:	ldr	r3, [fp, #8]
   13ed4:	str	r3, [sp, #8]
   13ed8:	mov	r3, #8
   13edc:	str	r3, [sp]
   13ee0:	add	r3, sp, #8
   13ee4:	bl	13a40 <table_set@@Base>
   13ee8:	mov	sp, fp
   13eec:	pop	{fp, pc}

00013ef0 <table_set_uint64@@Base>:
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	sub	sp, sp, #16
   13efc:	ldr	r3, [fp, #12]
   13f00:	str	r3, [sp, #12]
   13f04:	ldr	r3, [fp, #8]
   13f08:	str	r3, [sp, #8]
   13f0c:	mov	r3, #9
   13f10:	str	r3, [sp]
   13f14:	add	r3, sp, #8
   13f18:	bl	13a40 <table_set@@Base>
   13f1c:	mov	sp, fp
   13f20:	pop	{fp, pc}

00013f24 <table_set_short@@Base>:
   13f24:	push	{fp, lr}
   13f28:	mov	fp, sp
   13f2c:	sub	sp, sp, #8
   13f30:	strh	r3, [fp, #-2]
   13f34:	mov	r3, #10
   13f38:	str	r3, [sp]
   13f3c:	sub	r3, fp, #2
   13f40:	bl	13a40 <table_set@@Base>
   13f44:	mov	sp, fp
   13f48:	pop	{fp, pc}

00013f4c <table_set_ushort@@Base>:
   13f4c:	push	{fp, lr}
   13f50:	mov	fp, sp
   13f54:	sub	sp, sp, #8
   13f58:	strh	r3, [fp, #-2]
   13f5c:	mov	r3, #11
   13f60:	str	r3, [sp]
   13f64:	sub	r3, fp, #2
   13f68:	bl	13a40 <table_set@@Base>
   13f6c:	mov	sp, fp
   13f70:	pop	{fp, pc}

00013f74 <table_set_long@@Base>:
   13f74:	push	{fp, lr}
   13f78:	mov	fp, sp
   13f7c:	sub	sp, sp, #8
   13f80:	str	r3, [sp, #4]
   13f84:	mov	r3, #12
   13f88:	str	r3, [sp]
   13f8c:	add	r3, sp, #4
   13f90:	bl	13a40 <table_set@@Base>
   13f94:	mov	sp, fp
   13f98:	pop	{fp, pc}

00013f9c <table_set_ulong@@Base>:
   13f9c:	push	{fp, lr}
   13fa0:	mov	fp, sp
   13fa4:	sub	sp, sp, #8
   13fa8:	str	r3, [sp, #4]
   13fac:	mov	r3, #13
   13fb0:	str	r3, [sp]
   13fb4:	add	r3, sp, #4
   13fb8:	bl	13a40 <table_set@@Base>
   13fbc:	mov	sp, fp
   13fc0:	pop	{fp, pc}

00013fc4 <table_set_llong@@Base>:
   13fc4:	push	{fp, lr}
   13fc8:	mov	fp, sp
   13fcc:	sub	sp, sp, #16
   13fd0:	ldr	r3, [fp, #12]
   13fd4:	str	r3, [sp, #12]
   13fd8:	ldr	r3, [fp, #8]
   13fdc:	str	r3, [sp, #8]
   13fe0:	mov	r3, #14
   13fe4:	str	r3, [sp]
   13fe8:	add	r3, sp, #8
   13fec:	bl	13a40 <table_set@@Base>
   13ff0:	mov	sp, fp
   13ff4:	pop	{fp, pc}

00013ff8 <table_set_ullong@@Base>:
   13ff8:	push	{fp, lr}
   13ffc:	mov	fp, sp
   14000:	sub	sp, sp, #16
   14004:	ldr	r3, [fp, #12]
   14008:	str	r3, [sp, #12]
   1400c:	ldr	r3, [fp, #8]
   14010:	str	r3, [sp, #8]
   14014:	mov	r3, #15
   14018:	str	r3, [sp]
   1401c:	add	r3, sp, #8
   14020:	bl	13a40 <table_set@@Base>
   14024:	mov	sp, fp
   14028:	pop	{fp, pc}

0001402c <table_set_float@@Base>:
   1402c:	push	{fp, lr}
   14030:	mov	fp, sp
   14034:	sub	sp, sp, #8
   14038:	mov	r3, #16
   1403c:	vstr	s0, [sp, #4]
   14040:	str	r3, [sp]
   14044:	add	r3, sp, #4
   14048:	bl	13a40 <table_set@@Base>
   1404c:	mov	sp, fp
   14050:	pop	{fp, pc}

00014054 <table_set_double@@Base>:
   14054:	push	{fp, lr}
   14058:	mov	fp, sp
   1405c:	sub	sp, sp, #16
   14060:	mov	r3, #17
   14064:	vstr	d0, [sp, #8]
   14068:	str	r3, [sp]
   1406c:	add	r3, sp, #8
   14070:	bl	13a40 <table_set@@Base>
   14074:	mov	sp, fp
   14078:	pop	{fp, pc}

0001407c <table_set_ldouble@@Base>:
   1407c:	push	{fp, lr}
   14080:	mov	fp, sp
   14084:	sub	sp, sp, #16
   14088:	mov	r3, #18
   1408c:	vstr	d0, [sp, #8]
   14090:	str	r3, [sp]
   14094:	add	r3, sp, #8
   14098:	bl	13a40 <table_set@@Base>
   1409c:	mov	sp, fp
   140a0:	pop	{fp, pc}

000140a4 <table_set_string@@Base>:
   140a4:	push	{fp, lr}
   140a8:	mov	fp, sp
   140ac:	sub	sp, sp, #8
   140b0:	mov	ip, #21
   140b4:	str	ip, [sp]
   140b8:	bl	13a40 <table_set@@Base>
   140bc:	mov	sp, fp
   140c0:	pop	{fp, pc}

000140c4 <table_set_char@@Base>:
   140c4:	push	{fp, lr}
   140c8:	mov	fp, sp
   140cc:	sub	sp, sp, #8
   140d0:	strb	r3, [fp, #-1]
   140d4:	mov	r3, #19
   140d8:	str	r3, [sp]
   140dc:	sub	r3, fp, #1
   140e0:	bl	13a40 <table_set@@Base>
   140e4:	mov	sp, fp
   140e8:	pop	{fp, pc}

000140ec <table_set_uchar@@Base>:
   140ec:	push	{fp, lr}
   140f0:	mov	fp, sp
   140f4:	sub	sp, sp, #8
   140f8:	strb	r3, [fp, #-1]
   140fc:	mov	r3, #20
   14100:	str	r3, [sp]
   14104:	sub	r3, fp, #1
   14108:	bl	13a40 <table_set@@Base>
   1410c:	mov	sp, fp
   14110:	pop	{fp, pc}

00014114 <table_set_ptr@@Base>:
   14114:	push	{fp, lr}
   14118:	mov	fp, sp
   1411c:	sub	sp, sp, #8
   14120:	mov	ip, #23
   14124:	str	ip, [sp]
   14128:	bl	13a40 <table_set@@Base>
   1412c:	mov	sp, fp
   14130:	pop	{fp, pc}

00014134 <table_cell_init@@Base>:
   14134:	push	{r4, sl, fp, lr}
   14138:	add	fp, sp, #8
   1413c:	mov	r4, r2
   14140:	bl	13810 <table_get_row_ptr@@Base>
   14144:	ldr	r0, [r0]
   14148:	mov	r1, #0
   1414c:	str	r1, [r0, r4, lsl #2]
   14150:	pop	{r4, sl, fp, pc}

00014154 <table_get_cell_ptr@@Base>:
   14154:	push	{r4, sl, fp, lr}
   14158:	add	fp, sp, #8
   1415c:	mov	r4, r2
   14160:	bl	13810 <table_get_row_ptr@@Base>
   14164:	ldr	r0, [r0]
   14168:	add	r0, r0, r4, lsl #2
   1416c:	pop	{r4, sl, fp, pc}

00014170 <table_cell_destroy@@Base>:
   14170:	push	{r4, r5, r6, sl, fp, lr}
   14174:	add	fp, sp, #16
   14178:	mov	r5, r1
   1417c:	mov	r1, r2
   14180:	mov	r4, r2
   14184:	mov	r6, r0
   14188:	bl	12c38 <table_get_column_data_type@@Base>
   1418c:	cmp	r0, #23
   14190:	popeq	{r4, r5, r6, sl, fp, pc}
   14194:	mov	r0, r6
   14198:	mov	r1, r5
   1419c:	bl	13810 <table_get_row_ptr@@Base>
   141a0:	ldr	r0, [r0]
   141a4:	ldr	r0, [r0, r4, lsl #2]
   141a8:	cmp	r0, #0
   141ac:	beq	141b8 <table_cell_destroy@@Base+0x48>
   141b0:	pop	{r4, r5, r6, sl, fp, lr}
   141b4:	b	11ed0 <free@plt>
   141b8:	pop	{r4, r5, r6, sl, fp, pc}

000141bc <table_cell_to_buffer@@Base>:
   141bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141c0:	add	fp, sp, #24
   141c4:	sub	sp, sp, #8
   141c8:	mov	r7, r1
   141cc:	mov	r1, r2
   141d0:	mov	r5, r3
   141d4:	mov	r6, r2
   141d8:	mov	r4, r0
   141dc:	bl	12c38 <table_get_column_data_type@@Base>
   141e0:	cmp	r0, #23
   141e4:	bhi	144d4 <table_cell_to_buffer@@Base+0x318>
   141e8:	ldr	r8, [fp, #8]
   141ec:	add	r1, pc, #0
   141f0:	ldr	pc, [r1, r0, lsl #2]
   141f4:	andeq	r4, r1, r4, asr r2
   141f8:	andeq	r4, r1, r8, ror #4
   141fc:	andeq	r4, r1, ip, ror r2
   14200:	muleq	r1, r0, r2
   14204:	andeq	r4, r1, r4, lsr #5
   14208:			; <UNDEFINED> instruction: 0x000142b8
   1420c:	andeq	r4, r1, ip, asr #5
   14210:	andeq	r4, r1, r0, ror #5
   14214:	andeq	r4, r1, r0, lsl #6
   14218:	andeq	r4, r1, r4, lsl r3
   1421c:	andeq	r4, r1, r8, lsr #6
   14220:	andeq	r4, r1, r8, asr #6
   14224:	andeq	r4, r1, r8, ror #6
   14228:	andeq	r4, r1, r8, lsl #7
   1422c:	andeq	r4, r1, r8, lsr #7
   14230:	andeq	r4, r1, r8, asr #7
   14234:	andeq	r4, r1, r8, ror #7
   14238:	andeq	r4, r1, ip, lsl #8
   1423c:	andeq	r4, r1, ip, lsr #8
   14240:	andeq	r4, r1, r8, asr r4
   14244:	andeq	r4, r1, ip, ror #8
   14248:	andeq	r4, r1, ip, lsl #9
   1424c:	andeq	r4, r1, ip, lsr #9
   14250:	andeq	r4, r1, r0, ror #9
   14254:	mov	r0, r4
   14258:	mov	r1, r7
   1425c:	mov	r2, r6
   14260:	bl	135cc <table_get_int@@Base>
   14264:	b	144bc <table_cell_to_buffer@@Base+0x300>
   14268:	mov	r0, r4
   1426c:	mov	r1, r7
   14270:	mov	r2, r6
   14274:	bl	135e4 <table_get_uint@@Base>
   14278:	b	142f0 <table_cell_to_buffer@@Base+0x134>
   1427c:	mov	r0, r4
   14280:	mov	r1, r7
   14284:	mov	r2, r6
   14288:	bl	135fc <table_get_int8@@Base>
   1428c:	b	144bc <table_cell_to_buffer@@Base+0x300>
   14290:	mov	r0, r4
   14294:	mov	r1, r7
   14298:	mov	r2, r6
   1429c:	bl	13614 <table_get_uint8@@Base>
   142a0:	b	142f0 <table_cell_to_buffer@@Base+0x134>
   142a4:	mov	r0, r4
   142a8:	mov	r1, r7
   142ac:	mov	r2, r6
   142b0:	bl	1362c <table_get_int16@@Base>
   142b4:	b	144bc <table_cell_to_buffer@@Base+0x300>
   142b8:	mov	r0, r4
   142bc:	mov	r1, r7
   142c0:	mov	r2, r6
   142c4:	bl	13644 <table_get_uint16@@Base>
   142c8:	b	142f0 <table_cell_to_buffer@@Base+0x134>
   142cc:	mov	r0, r4
   142d0:	mov	r1, r7
   142d4:	mov	r2, r6
   142d8:	bl	1365c <table_get_int32@@Base>
   142dc:	b	144bc <table_cell_to_buffer@@Base+0x300>
   142e0:	mov	r0, r4
   142e4:	mov	r1, r7
   142e8:	mov	r2, r6
   142ec:	bl	13674 <table_get_uint32@@Base>
   142f0:	movw	r2, #19823	; 0x4d6f
   142f4:	mov	r3, r0
   142f8:	movt	r2, #1
   142fc:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   14300:	mov	r0, r4
   14304:	mov	r1, r7
   14308:	mov	r2, r6
   1430c:	bl	1368c <table_get_int64@@Base>
   14310:	b	143b8 <table_cell_to_buffer@@Base+0x1fc>
   14314:	mov	r0, r4
   14318:	mov	r1, r7
   1431c:	mov	r2, r6
   14320:	bl	136a4 <table_get_uint64@@Base>
   14324:	b	143d8 <table_cell_to_buffer@@Base+0x21c>
   14328:	mov	r0, r4
   1432c:	mov	r1, r7
   14330:	mov	r2, r6
   14334:	bl	136bc <table_get_short@@Base>
   14338:	movw	r2, #19836	; 0x4d7c
   1433c:	mov	r3, r0
   14340:	movt	r2, #1
   14344:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   14348:	mov	r0, r4
   1434c:	mov	r1, r7
   14350:	mov	r2, r6
   14354:	bl	136d4 <table_get_ushort@@Base>
   14358:	movw	r2, #19840	; 0x4d80
   1435c:	mov	r3, r0
   14360:	movt	r2, #1
   14364:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   14368:	mov	r0, r4
   1436c:	mov	r1, r7
   14370:	mov	r2, r6
   14374:	bl	136ec <table_get_long@@Base>
   14378:	movw	r2, #19844	; 0x4d84
   1437c:	mov	r3, r0
   14380:	movt	r2, #1
   14384:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   14388:	mov	r0, r4
   1438c:	mov	r1, r7
   14390:	mov	r2, r6
   14394:	bl	13704 <table_get_ulong@@Base>
   14398:	movw	r2, #19848	; 0x4d88
   1439c:	mov	r3, r0
   143a0:	movt	r2, #1
   143a4:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   143a8:	mov	r0, r4
   143ac:	mov	r1, r7
   143b0:	mov	r2, r6
   143b4:	bl	1371c <table_get_llong@@Base>
   143b8:	movw	r2, #19826	; 0x4d72
   143bc:	stm	sp, {r0, r1}
   143c0:	movt	r2, #1
   143c4:	b	14448 <table_cell_to_buffer@@Base+0x28c>
   143c8:	mov	r0, r4
   143cc:	mov	r1, r7
   143d0:	mov	r2, r6
   143d4:	bl	13734 <table_get_ullong@@Base>
   143d8:	movw	r2, #19831	; 0x4d77
   143dc:	stm	sp, {r0, r1}
   143e0:	movt	r2, #1
   143e4:	b	14448 <table_cell_to_buffer@@Base+0x28c>
   143e8:	mov	r0, r4
   143ec:	mov	r1, r7
   143f0:	mov	r2, r6
   143f4:	bl	1374c <table_get_float@@Base>
   143f8:	vcvt.f64.f32	d16, s0
   143fc:	movw	r2, #19855	; 0x4d8f
   14400:	movt	r2, #1
   14404:	vstr	d16, [sp]
   14408:	b	14448 <table_cell_to_buffer@@Base+0x28c>
   1440c:	mov	r0, r4
   14410:	mov	r1, r7
   14414:	mov	r2, r6
   14418:	bl	13764 <table_get_double@@Base>
   1441c:	movw	r2, #19858	; 0x4d92
   14420:	vstr	d0, [sp]
   14424:	movt	r2, #1
   14428:	b	14448 <table_cell_to_buffer@@Base+0x28c>
   1442c:	mov	r0, r4
   14430:	mov	r1, r7
   14434:	mov	r2, r6
   14438:	bl	1377c <table_get_ldouble@@Base>
   1443c:	movw	r2, #19862	; 0x4d96
   14440:	vstr	d0, [sp]
   14444:	movt	r2, #1
   14448:	mov	r0, r5
   1444c:	mov	r1, r8
   14450:	bl	11f30 <snprintf@plt>
   14454:	b	144d4 <table_cell_to_buffer@@Base+0x318>
   14458:	mov	r0, r4
   1445c:	mov	r1, r7
   14460:	mov	r2, r6
   14464:	bl	13794 <table_get_char@@Base>
   14468:	b	1447c <table_cell_to_buffer@@Base+0x2c0>
   1446c:	mov	r0, r4
   14470:	mov	r1, r7
   14474:	mov	r2, r6
   14478:	bl	137ac <table_get_uchar@@Base>
   1447c:	movw	r2, #19866	; 0x4d9a
   14480:	mov	r3, r0
   14484:	movt	r2, #1
   14488:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   1448c:	mov	r0, r4
   14490:	mov	r1, r7
   14494:	mov	r2, r6
   14498:	bl	137c4 <table_get_string@@Base>
   1449c:	movw	r2, #19852	; 0x4d8c
   144a0:	mov	r3, r0
   144a4:	movt	r2, #1
   144a8:	b	144c8 <table_cell_to_buffer@@Base+0x30c>
   144ac:	mov	r0, r4
   144b0:	mov	r1, r7
   144b4:	mov	r2, r6
   144b8:	bl	135b4 <table_get_bool@@Base>
   144bc:	movw	r2, #19820	; 0x4d6c
   144c0:	mov	r3, r0
   144c4:	movt	r2, #1
   144c8:	mov	r0, r5
   144cc:	mov	r1, r8
   144d0:	bl	11f30 <snprintf@plt>
   144d4:	mov	r0, #0
   144d8:	sub	sp, fp, #24
   144dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144e0:	mov	r0, r4
   144e4:	mov	r1, r7
   144e8:	mov	r2, r6
   144ec:	bl	137d8 <table_get_ptr@@Base>
   144f0:	movw	r2, #19869	; 0x4d9d
   144f4:	mov	r3, r0
   144f8:	movt	r2, #1
   144fc:	b	144c8 <table_cell_to_buffer@@Base+0x30c>

00014500 <table_cell_from_buffer@@Base>:
   14500:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14504:	add	fp, sp, #24
   14508:	sub	sp, sp, #264	; 0x108
   1450c:	mov	r5, r1
   14510:	mov	r1, r2
   14514:	mov	r7, r3
   14518:	mov	r4, r2
   1451c:	mov	r6, r0
   14520:	bl	12c38 <table_get_column_data_type@@Base>
   14524:	cmp	r0, #23
   14528:	bhi	14b58 <table_cell_from_buffer@@Base+0x658>
   1452c:	add	r1, pc, #0
   14530:	ldr	pc, [r1, r0, lsl #2]
   14534:	muleq	r1, r4, r5
   14538:	ldrdeq	r4, [r1], -r0
   1453c:	andeq	r4, r1, ip, lsl #12
   14540:	andeq	r4, r1, r8, asr #12
   14544:	andeq	r4, r1, r4, lsl #13
   14548:	andeq	r4, r1, r0, asr #13
   1454c:	strdeq	r4, [r1], -ip
   14550:	andeq	r4, r1, r8, lsr r7
   14554:	andeq	r4, r1, r4, ror r7
   14558:			; <UNDEFINED> instruction: 0x000147b8
   1455c:	strdeq	r4, [r1], -ip
   14560:	andeq	r4, r1, r8, lsr r8
   14564:	andeq	r4, r1, r4, ror r8
   14568:			; <UNDEFINED> instruction: 0x000148b0
   1456c:	andeq	r4, r1, ip, ror #17
   14570:	andeq	r4, r1, r0, lsr r9
   14574:	andeq	r4, r1, r4, ror r9
   14578:			; <UNDEFINED> instruction: 0x000149b0
   1457c:	andeq	r4, r1, ip, ror #19
   14580:	andeq	r4, r1, r8, lsr #20
   14584:	andeq	r4, r1, r4, ror #20
   14588:	andeq	r4, r1, r0, lsr #21
   1458c:	ldrdeq	r4, [r1], -ip
   14590:	andeq	r4, r1, r0, lsr #22
   14594:	movw	r1, #19820	; 0x4d6c
   14598:	add	r2, sp, #8
   1459c:	mov	r0, r7
   145a0:	movt	r1, #1
   145a4:	bl	11f3c <__isoc99_sscanf@plt>
   145a8:	mov	r1, r0
   145ac:	mvn	r0, #0
   145b0:	cmp	r1, #1
   145b4:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   145b8:	ldr	r3, [sp, #8]
   145bc:	mov	r0, r6
   145c0:	mov	r1, r5
   145c4:	mov	r2, r4
   145c8:	bl	13d7c <table_set_int@@Base>
   145cc:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   145d0:	movw	r1, #19823	; 0x4d6f
   145d4:	add	r2, sp, #8
   145d8:	mov	r0, r7
   145dc:	movt	r1, #1
   145e0:	bl	11f3c <__isoc99_sscanf@plt>
   145e4:	mov	r1, r0
   145e8:	mvn	r0, #0
   145ec:	cmp	r1, #1
   145f0:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   145f4:	ldr	r3, [sp, #8]
   145f8:	mov	r0, r6
   145fc:	mov	r1, r5
   14600:	mov	r2, r4
   14604:	bl	13da4 <table_set_uint@@Base>
   14608:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   1460c:	movw	r1, #19872	; 0x4da0
   14610:	add	r2, sp, #8
   14614:	mov	r0, r7
   14618:	movt	r1, #1
   1461c:	bl	11f3c <__isoc99_sscanf@plt>
   14620:	mov	r1, r0
   14624:	mvn	r0, #0
   14628:	cmp	r1, #1
   1462c:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14630:	ldrsb	r3, [sp, #8]
   14634:	mov	r0, r6
   14638:	mov	r1, r5
   1463c:	mov	r2, r4
   14640:	bl	13dcc <table_set_int8@@Base>
   14644:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14648:	movw	r1, #19877	; 0x4da5
   1464c:	add	r2, sp, #8
   14650:	mov	r0, r7
   14654:	movt	r1, #1
   14658:	bl	11f3c <__isoc99_sscanf@plt>
   1465c:	mov	r1, r0
   14660:	mvn	r0, #0
   14664:	cmp	r1, #1
   14668:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   1466c:	ldrb	r3, [sp, #8]
   14670:	mov	r0, r6
   14674:	mov	r1, r5
   14678:	mov	r2, r4
   1467c:	bl	13df4 <table_set_uint8@@Base>
   14680:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14684:	movw	r1, #19836	; 0x4d7c
   14688:	add	r2, sp, #8
   1468c:	mov	r0, r7
   14690:	movt	r1, #1
   14694:	bl	11f3c <__isoc99_sscanf@plt>
   14698:	mov	r1, r0
   1469c:	mvn	r0, #0
   146a0:	cmp	r1, #1
   146a4:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   146a8:	ldrsh	r3, [sp, #8]
   146ac:	mov	r0, r6
   146b0:	mov	r1, r5
   146b4:	mov	r2, r4
   146b8:	bl	13e1c <table_set_int16@@Base>
   146bc:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   146c0:	movw	r1, #19840	; 0x4d80
   146c4:	add	r2, sp, #8
   146c8:	mov	r0, r7
   146cc:	movt	r1, #1
   146d0:	bl	11f3c <__isoc99_sscanf@plt>
   146d4:	mov	r1, r0
   146d8:	mvn	r0, #0
   146dc:	cmp	r1, #1
   146e0:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   146e4:	ldrh	r3, [sp, #8]
   146e8:	mov	r0, r6
   146ec:	mov	r1, r5
   146f0:	mov	r2, r4
   146f4:	bl	13e44 <table_set_uint16@@Base>
   146f8:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   146fc:	movw	r1, #19820	; 0x4d6c
   14700:	add	r2, sp, #8
   14704:	mov	r0, r7
   14708:	movt	r1, #1
   1470c:	bl	11f3c <__isoc99_sscanf@plt>
   14710:	mov	r1, r0
   14714:	mvn	r0, #0
   14718:	cmp	r1, #1
   1471c:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14720:	ldr	r3, [sp, #8]
   14724:	mov	r0, r6
   14728:	mov	r1, r5
   1472c:	mov	r2, r4
   14730:	bl	13e6c <table_set_int32@@Base>
   14734:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14738:	movw	r1, #19823	; 0x4d6f
   1473c:	add	r2, sp, #8
   14740:	mov	r0, r7
   14744:	movt	r1, #1
   14748:	bl	11f3c <__isoc99_sscanf@plt>
   1474c:	mov	r1, r0
   14750:	mvn	r0, #0
   14754:	cmp	r1, #1
   14758:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   1475c:	ldr	r3, [sp, #8]
   14760:	mov	r0, r6
   14764:	mov	r1, r5
   14768:	mov	r2, r4
   1476c:	bl	13e94 <table_set_uint32@@Base>
   14770:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14774:	movw	r1, #19826	; 0x4d72
   14778:	add	r2, sp, #8
   1477c:	mov	r0, r7
   14780:	movt	r1, #1
   14784:	bl	11f3c <__isoc99_sscanf@plt>
   14788:	mov	r1, r0
   1478c:	mvn	r0, #0
   14790:	cmp	r1, #1
   14794:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14798:	ldr	r0, [sp, #8]
   1479c:	ldr	r1, [sp, #12]
   147a0:	mov	r2, r4
   147a4:	stm	sp, {r0, r1}
   147a8:	mov	r0, r6
   147ac:	mov	r1, r5
   147b0:	bl	13ebc <table_set_int64@@Base>
   147b4:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   147b8:	movw	r1, #19831	; 0x4d77
   147bc:	add	r2, sp, #8
   147c0:	mov	r0, r7
   147c4:	movt	r1, #1
   147c8:	bl	11f3c <__isoc99_sscanf@plt>
   147cc:	mov	r1, r0
   147d0:	mvn	r0, #0
   147d4:	cmp	r1, #1
   147d8:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   147dc:	ldr	r0, [sp, #8]
   147e0:	ldr	r1, [sp, #12]
   147e4:	mov	r2, r4
   147e8:	stm	sp, {r0, r1}
   147ec:	mov	r0, r6
   147f0:	mov	r1, r5
   147f4:	bl	13ef0 <table_set_uint64@@Base>
   147f8:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   147fc:	movw	r1, #19836	; 0x4d7c
   14800:	add	r2, sp, #8
   14804:	mov	r0, r7
   14808:	movt	r1, #1
   1480c:	bl	11f3c <__isoc99_sscanf@plt>
   14810:	mov	r1, r0
   14814:	mvn	r0, #0
   14818:	cmp	r1, #1
   1481c:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14820:	ldrsh	r3, [sp, #8]
   14824:	mov	r0, r6
   14828:	mov	r1, r5
   1482c:	mov	r2, r4
   14830:	bl	13f24 <table_set_short@@Base>
   14834:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14838:	movw	r1, #19840	; 0x4d80
   1483c:	add	r2, sp, #8
   14840:	mov	r0, r7
   14844:	movt	r1, #1
   14848:	bl	11f3c <__isoc99_sscanf@plt>
   1484c:	mov	r1, r0
   14850:	mvn	r0, #0
   14854:	cmp	r1, #1
   14858:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   1485c:	ldrh	r3, [sp, #8]
   14860:	mov	r0, r6
   14864:	mov	r1, r5
   14868:	mov	r2, r4
   1486c:	bl	13f4c <table_set_ushort@@Base>
   14870:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14874:	movw	r1, #19844	; 0x4d84
   14878:	add	r2, sp, #8
   1487c:	mov	r0, r7
   14880:	movt	r1, #1
   14884:	bl	11f3c <__isoc99_sscanf@plt>
   14888:	mov	r1, r0
   1488c:	mvn	r0, #0
   14890:	cmp	r1, #1
   14894:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14898:	ldr	r3, [sp, #8]
   1489c:	mov	r0, r6
   148a0:	mov	r1, r5
   148a4:	mov	r2, r4
   148a8:	bl	13f74 <table_set_long@@Base>
   148ac:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   148b0:	movw	r1, #19848	; 0x4d88
   148b4:	add	r2, sp, #8
   148b8:	mov	r0, r7
   148bc:	movt	r1, #1
   148c0:	bl	11f3c <__isoc99_sscanf@plt>
   148c4:	mov	r1, r0
   148c8:	mvn	r0, #0
   148cc:	cmp	r1, #1
   148d0:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   148d4:	ldr	r3, [sp, #8]
   148d8:	mov	r0, r6
   148dc:	mov	r1, r5
   148e0:	mov	r2, r4
   148e4:	bl	13f9c <table_set_ulong@@Base>
   148e8:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   148ec:	movw	r1, #19826	; 0x4d72
   148f0:	add	r2, sp, #8
   148f4:	mov	r0, r7
   148f8:	movt	r1, #1
   148fc:	bl	11f3c <__isoc99_sscanf@plt>
   14900:	mov	r1, r0
   14904:	mvn	r0, #0
   14908:	cmp	r1, #1
   1490c:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14910:	ldr	r0, [sp, #8]
   14914:	ldr	r1, [sp, #12]
   14918:	mov	r2, r4
   1491c:	stm	sp, {r0, r1}
   14920:	mov	r0, r6
   14924:	mov	r1, r5
   14928:	bl	13fc4 <table_set_llong@@Base>
   1492c:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14930:	movw	r1, #19831	; 0x4d77
   14934:	add	r2, sp, #8
   14938:	mov	r0, r7
   1493c:	movt	r1, #1
   14940:	bl	11f3c <__isoc99_sscanf@plt>
   14944:	mov	r1, r0
   14948:	mvn	r0, #0
   1494c:	cmp	r1, #1
   14950:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14954:	ldr	r0, [sp, #8]
   14958:	ldr	r1, [sp, #12]
   1495c:	mov	r2, r4
   14960:	stm	sp, {r0, r1}
   14964:	mov	r0, r6
   14968:	mov	r1, r5
   1496c:	bl	13ff8 <table_set_ullong@@Base>
   14970:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14974:	movw	r1, #19855	; 0x4d8f
   14978:	add	r2, sp, #8
   1497c:	mov	r0, r7
   14980:	movt	r1, #1
   14984:	bl	11f3c <__isoc99_sscanf@plt>
   14988:	mov	r1, r0
   1498c:	mvn	r0, #0
   14990:	cmp	r1, #1
   14994:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14998:	vldr	s0, [sp, #8]
   1499c:	mov	r0, r6
   149a0:	mov	r1, r5
   149a4:	mov	r2, r4
   149a8:	bl	1402c <table_set_float@@Base>
   149ac:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   149b0:	movw	r1, #19858	; 0x4d92
   149b4:	add	r2, sp, #8
   149b8:	mov	r0, r7
   149bc:	movt	r1, #1
   149c0:	bl	11f3c <__isoc99_sscanf@plt>
   149c4:	mov	r1, r0
   149c8:	mvn	r0, #0
   149cc:	cmp	r1, #1
   149d0:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   149d4:	vldr	d0, [sp, #8]
   149d8:	mov	r0, r6
   149dc:	mov	r1, r5
   149e0:	mov	r2, r4
   149e4:	bl	14054 <table_set_double@@Base>
   149e8:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   149ec:	movw	r1, #19862	; 0x4d96
   149f0:	add	r2, sp, #8
   149f4:	mov	r0, r7
   149f8:	movt	r1, #1
   149fc:	bl	11f3c <__isoc99_sscanf@plt>
   14a00:	mov	r1, r0
   14a04:	mvn	r0, #0
   14a08:	cmp	r1, #1
   14a0c:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14a10:	vldr	d0, [sp, #8]
   14a14:	mov	r0, r6
   14a18:	mov	r1, r5
   14a1c:	mov	r2, r4
   14a20:	bl	1407c <table_set_ldouble@@Base>
   14a24:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14a28:	movw	r1, #19866	; 0x4d9a
   14a2c:	add	r2, sp, #8
   14a30:	mov	r0, r7
   14a34:	movt	r1, #1
   14a38:	bl	11f3c <__isoc99_sscanf@plt>
   14a3c:	mov	r1, r0
   14a40:	mvn	r0, #0
   14a44:	cmp	r1, #1
   14a48:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14a4c:	ldrb	r3, [sp, #8]
   14a50:	mov	r0, r6
   14a54:	mov	r1, r5
   14a58:	mov	r2, r4
   14a5c:	bl	140c4 <table_set_char@@Base>
   14a60:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14a64:	movw	r1, #19866	; 0x4d9a
   14a68:	add	r2, sp, #8
   14a6c:	mov	r0, r7
   14a70:	movt	r1, #1
   14a74:	bl	11f3c <__isoc99_sscanf@plt>
   14a78:	mov	r1, r0
   14a7c:	mvn	r0, #0
   14a80:	cmp	r1, #1
   14a84:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14a88:	ldrb	r3, [sp, #8]
   14a8c:	mov	r0, r6
   14a90:	mov	r1, r5
   14a94:	mov	r2, r4
   14a98:	bl	140ec <table_set_uchar@@Base>
   14a9c:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14aa0:	movw	r1, #19852	; 0x4d8c
   14aa4:	add	r2, sp, #8
   14aa8:	mov	r0, r7
   14aac:	movt	r1, #1
   14ab0:	bl	11f3c <__isoc99_sscanf@plt>
   14ab4:	mov	r1, r0
   14ab8:	mvn	r0, #0
   14abc:	cmp	r1, #1
   14ac0:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14ac4:	add	r3, sp, #8
   14ac8:	mov	r0, r6
   14acc:	mov	r1, r5
   14ad0:	mov	r2, r4
   14ad4:	bl	140a4 <table_set_string@@Base>
   14ad8:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14adc:	movw	r1, #19820	; 0x4d6c
   14ae0:	add	r2, sp, #8
   14ae4:	mov	r0, r7
   14ae8:	movt	r1, #1
   14aec:	bl	11f3c <__isoc99_sscanf@plt>
   14af0:	mov	r1, r0
   14af4:	mvn	r0, #0
   14af8:	cmp	r1, #1
   14afc:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14b00:	ldr	r3, [sp, #8]
   14b04:	mov	r0, r6
   14b08:	mov	r1, r5
   14b0c:	mov	r2, r4
   14b10:	cmp	r3, #0
   14b14:	movwne	r3, #1
   14b18:	bl	13d54 <table_set_bool@@Base>
   14b1c:	b	14b58 <table_cell_from_buffer@@Base+0x658>
   14b20:	movw	r1, #19869	; 0x4d9d
   14b24:	add	r2, sp, #8
   14b28:	mov	r0, r7
   14b2c:	movt	r1, #1
   14b30:	bl	11f3c <__isoc99_sscanf@plt>
   14b34:	mov	r1, r0
   14b38:	mvn	r0, #0
   14b3c:	cmp	r1, #1
   14b40:	bne	14b5c <table_cell_from_buffer@@Base+0x65c>
   14b44:	ldr	r3, [sp, #8]
   14b48:	mov	r0, r6
   14b4c:	mov	r1, r5
   14b50:	mov	r2, r4
   14b54:	bl	14114 <table_set_ptr@@Base>
   14b58:	mov	r0, #0
   14b5c:	sub	sp, fp, #24
   14b60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b64 <table_cell_nullify@@Base>:
   14b64:	push	{r4, r5, fp, lr}
   14b68:	add	fp, sp, #8
   14b6c:	mov	r4, r2
   14b70:	bl	13810 <table_get_row_ptr@@Base>
   14b74:	ldr	r5, [r0]
   14b78:	ldr	r0, [r5, r4, lsl #2]
   14b7c:	cmp	r0, #0
   14b80:	beq	14b90 <table_cell_nullify@@Base+0x2c>
   14b84:	bl	11ed0 <free@plt>
   14b88:	mov	r0, #0
   14b8c:	str	r0, [r5, r4, lsl #2]
   14b90:	mov	r0, #0
   14b94:	pop	{r4, r5, fp, pc}

00014b98 <__libc_csu_init@@Base>:
   14b98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b9c:	mov	r7, r0
   14ba0:	ldr	r6, [pc, #72]	; 14bf0 <__libc_csu_init@@Base+0x58>
   14ba4:	ldr	r5, [pc, #72]	; 14bf4 <__libc_csu_init@@Base+0x5c>
   14ba8:	add	r6, pc, r6
   14bac:	add	r5, pc, r5
   14bb0:	sub	r6, r6, r5
   14bb4:	mov	r8, r1
   14bb8:	mov	r9, r2
   14bbc:	bl	11e98 <strcmp@plt-0x20>
   14bc0:	asrs	r6, r6, #2
   14bc4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bc8:	mov	r4, #0
   14bcc:	add	r4, r4, #1
   14bd0:	ldr	r3, [r5], #4
   14bd4:	mov	r2, r9
   14bd8:	mov	r1, r8
   14bdc:	mov	r0, r7
   14be0:	blx	r3
   14be4:	cmp	r6, r4
   14be8:	bne	14bcc <__libc_csu_init@@Base+0x34>
   14bec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bf0:	andeq	r0, r1, ip, asr r3
   14bf4:	andeq	r0, r1, r4, asr r3

00014bf8 <__libc_csu_fini@@Base>:
   14bf8:	bx	lr

Disassembly of section .fini:

00014bfc <.fini>:
   14bfc:	push	{r3, lr}
   14c00:	pop	{r3, pc}
