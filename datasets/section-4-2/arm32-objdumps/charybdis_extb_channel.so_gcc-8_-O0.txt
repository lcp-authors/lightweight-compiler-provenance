
../repos/charybdis/extensions/.libs/extb_channel.so:     file format elf32-littlearm


Disassembly of section .init:

000003a4 <_init>:
 3a4:	push	{r3, lr}
 3a8:	bl	3f4 <call_weak_fn>
 3ac:	pop	{r3, pc}

Disassembly of section .plt:

000003b0 <.plt>:
 3b0:	push	{lr}		; (str lr, [sp, #-4]!)
 3b4:	ldr	lr, [pc, #4]	; 3c0 <.plt+0x10>
 3b8:	add	lr, pc, lr
 3bc:	ldr	pc, [lr, #8]!
 3c0:	.word	0x00010c40

000003c4 <__cxa_finalize@plt>:
 3c4:	add	ip, pc, #0, 12
 3c8:	add	ip, ip, #16, 20	; 0x10000
 3cc:	ldr	pc, [ip, #3136]!	; 0xc40

000003d0 <find_channel@plt>:
 3d0:	add	ip, pc, #0, 12
 3d4:	add	ip, ip, #16, 20	; 0x10000
 3d8:	ldr	pc, [ip, #3128]!	; 0xc38

000003dc <find_channel_membership@plt>:
 3dc:	add	ip, pc, #0, 12
 3e0:	add	ip, ip, #16, 20	; 0x10000
 3e4:	ldr	pc, [ip, #3120]!	; 0xc30

000003e8 <__gmon_start__@plt>:
 3e8:	add	ip, pc, #0, 12
 3ec:	add	ip, ip, #16, 20	; 0x10000
 3f0:	ldr	pc, [ip, #3112]!	; 0xc28

Disassembly of section .text:

000003f4 <call_weak_fn>:
 3f4:	ldr	r3, [pc, #20]	; 410 <call_weak_fn+0x1c>
 3f8:	ldr	r2, [pc, #20]	; 414 <call_weak_fn+0x20>
 3fc:	add	r3, pc, r3
 400:	ldr	r2, [r3, r2]
 404:	cmp	r2, #0
 408:	bxeq	lr
 40c:	b	3e8 <__gmon_start__@plt>
 410:	.word	0x00010bfc
 414:	.word	0x00000024

00000418 <deregister_tm_clones>:
 418:	ldr	r0, [pc, #44]	; 44c <deregister_tm_clones+0x34>
 41c:	ldr	r3, [pc, #44]	; 450 <deregister_tm_clones+0x38>
 420:	add	r0, pc, r0
 424:	add	r3, pc, r3
 428:	cmp	r3, r0
 42c:	ldr	r3, [pc, #32]	; 454 <deregister_tm_clones+0x3c>
 430:	add	r3, pc, r3
 434:	bxeq	lr
 438:	ldr	r2, [pc, #24]	; 458 <deregister_tm_clones+0x40>
 43c:	ldr	r3, [r3, r2]
 440:	cmp	r3, #0
 444:	bxeq	lr
 448:	bx	r3
 44c:	.word	0x00010c34
 450:	.word	0x00010c30
 454:	.word	0x00010bc8
 458:	.word	0x00000020

0000045c <register_tm_clones>:
 45c:	ldr	r0, [pc, #56]	; 49c <register_tm_clones+0x40>
 460:	ldr	r3, [pc, #56]	; 4a0 <register_tm_clones+0x44>
 464:	add	r0, pc, r0
 468:	add	r3, pc, r3
 46c:	sub	r1, r3, r0
 470:	ldr	r3, [pc, #44]	; 4a4 <register_tm_clones+0x48>
 474:	asr	r1, r1, #2
 478:	add	r3, pc, r3
 47c:	add	r1, r1, r1, lsr #31
 480:	asrs	r1, r1, #1
 484:	bxeq	lr
 488:	ldr	r2, [pc, #24]	; 4a8 <register_tm_clones+0x4c>
 48c:	ldr	r3, [r3, r2]
 490:	cmp	r3, #0
 494:	bxeq	lr
 498:	bx	r3
 49c:	.word	0x00010bf0
 4a0:	.word	0x00010bec
 4a4:	.word	0x00010b80
 4a8:	.word	0x0000002c

000004ac <__do_global_dtors_aux>:
 4ac:	ldr	r3, [pc, #76]	; 500 <__do_global_dtors_aux+0x54>
 4b0:	ldr	r2, [pc, #76]	; 504 <__do_global_dtors_aux+0x58>
 4b4:	add	r3, pc, r3
 4b8:	add	r2, pc, r2
 4bc:	ldrb	r3, [r3]
 4c0:	cmp	r3, #0
 4c4:	bxne	lr
 4c8:	ldr	r3, [pc, #56]	; 508 <__do_global_dtors_aux+0x5c>
 4cc:	push	{r4, lr}
 4d0:	ldr	r3, [r2, r3]
 4d4:	cmp	r3, #0
 4d8:	beq	4e8 <__do_global_dtors_aux+0x3c>
 4dc:	ldr	r3, [pc, #40]	; 50c <__do_global_dtors_aux+0x60>
 4e0:	ldr	r0, [pc, r3]
 4e4:	bl	3c4 <__cxa_finalize@plt>
 4e8:	bl	418 <deregister_tm_clones>
 4ec:	ldr	r3, [pc, #28]	; 510 <__do_global_dtors_aux+0x64>
 4f0:	mov	r2, #1
 4f4:	add	r3, pc, r3
 4f8:	strb	r2, [r3]
 4fc:	pop	{r4, pc}
 500:	.word	0x00010ba0
 504:	.word	0x00010b40
 508:	.word	0x0000001c
 50c:	.word	0x00010b48
 510:	.word	0x00010b60

00000514 <frame_dummy>:
 514:	b	45c <register_tm_clones>

00000518 <_modinit>:
 518:	push	{fp}		; (str fp, [sp, #-4]!)
 51c:	add	fp, sp, #0
 520:	ldr	r2, [pc, #40]	; 550 <_modinit+0x38>
 524:	add	r2, pc, r2
 528:	ldr	r3, [pc, #36]	; 554 <_modinit+0x3c>
 52c:	ldr	r3, [r2, r3]
 530:	ldr	r2, [pc, #32]	; 558 <_modinit+0x40>
 534:	add	r2, pc, r2
 538:	str	r2, [r3, #396]	; 0x18c
 53c:	mov	r3, #0
 540:	mov	r0, r3
 544:	add	sp, fp, #0
 548:	pop	{fp}		; (ldr fp, [sp], #4)
 54c:	bx	lr
 550:	.word	0x00010ad4
 554:	.word	0x00000028
 558:	.word	0x00000058

0000055c <_moddeinit>:
 55c:	push	{fp}		; (str fp, [sp, #-4]!)
 560:	add	fp, sp, #0
 564:	ldr	r2, [pc, #32]	; 58c <_moddeinit+0x30>
 568:	add	r2, pc, r2
 56c:	ldr	r3, [pc, #28]	; 590 <_moddeinit+0x34>
 570:	ldr	r3, [r2, r3]
 574:	mov	r2, #0
 578:	str	r2, [r3, #396]	; 0x18c
 57c:	nop	{0}
 580:	add	sp, fp, #0
 584:	pop	{fp}		; (ldr fp, [sp], #4)
 588:	bx	lr
 58c:	.word	0x00010a90
 590:	.word	0x00000028

00000594 <eb_channel>:
 594:	str	fp, [sp, #-8]!
 598:	str	lr, [sp, #4]
 59c:	add	fp, sp, #4
 5a0:	sub	sp, sp, #24
 5a4:	str	r0, [fp, #-16]
 5a8:	str	r1, [fp, #-20]	; 0xffffffec
 5ac:	str	r2, [fp, #-24]	; 0xffffffe8
 5b0:	str	r3, [fp, #-28]	; 0xffffffe4
 5b4:	ldr	r3, [fp, #-16]
 5b8:	cmp	r3, #0
 5bc:	bne	5c8 <eb_channel+0x34>
 5c0:	mvn	r3, #0
 5c4:	b	654 <eb_channel+0xc0>
 5c8:	ldr	r0, [fp, #-16]
 5cc:	bl	3d0 <find_channel@plt>
 5d0:	str	r0, [fp, #-8]
 5d4:	ldr	r3, [fp, #-8]
 5d8:	cmp	r3, #0
 5dc:	bne	5e8 <eb_channel+0x54>
 5e0:	mvn	r3, #0
 5e4:	b	654 <eb_channel+0xc0>
 5e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5ec:	ldr	r3, [r3, #236]	; 0xec
 5f0:	ldrb	r3, [r3]
 5f4:	cmp	r3, #35	; 0x23
 5f8:	bne	614 <eb_channel+0x80>
 5fc:	ldr	r3, [fp, #-16]
 600:	ldrb	r3, [r3]
 604:	cmp	r3, #38	; 0x26
 608:	bne	614 <eb_channel+0x80>
 60c:	mvn	r3, #0
 610:	b	654 <eb_channel+0xc0>
 614:	ldr	r3, [fp, #-20]	; 0xffffffec
 618:	cmp	r3, #0
 61c:	beq	650 <eb_channel+0xbc>
 620:	ldr	r3, [fp, #-20]	; 0xffffffec
 624:	ldr	r3, [r3, #24]
 628:	cmp	r3, #0
 62c:	beq	650 <eb_channel+0xbc>
 630:	ldr	r1, [fp, #-20]	; 0xffffffec
 634:	ldr	r0, [fp, #-8]
 638:	bl	3dc <find_channel_membership@plt>
 63c:	mov	r3, r0
 640:	cmp	r3, #0
 644:	beq	650 <eb_channel+0xbc>
 648:	mov	r3, #1
 64c:	b	654 <eb_channel+0xc0>
 650:	mov	r3, #0
 654:	mov	r0, r3
 658:	sub	sp, fp, #4
 65c:	ldr	fp, [sp]
 660:	add	sp, sp, #4
 664:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00000668 <_fini>:
 668:	push	{r3, lr}
 66c:	pop	{r3, pc}
