
../repos/charybdis/modules/.libs/m_accept.so:     file format elf32-littlearm


Disassembly of section .init:

00000654 <_init>:
 654:	push	{r3, lr}
 658:	bl	710 <call_weak_fn>
 65c:	pop	{r3, pc}

Disassembly of section .plt:

00000660 <.plt>:
 660:	push	{lr}		; (str lr, [sp, #-4]!)
 664:	ldr	lr, [pc, #4]	; 670 <.plt+0x10>
 668:	add	lr, pc, lr
 66c:	ldr	pc, [lr, #8]!
 670:	.word	0x00011990

00000674 <__cxa_finalize@plt>:
 674:	add	ip, pc, #0, 12
 678:	add	ip, ip, #69632	; 0x11000
 67c:	ldr	pc, [ip, #2448]!	; 0x990

00000680 <sendto_one@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2440]!	; 0x988

0000068c <rb_free_rb_dlink_node@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2432]!	; 0x980

00000698 <strcpy@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2424]!	; 0x978

000006a4 <__gmon_start__@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2416]!	; 0x970

000006b0 <rb_make_rb_dlink_node@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2408]!	; 0x968

000006bc <sendto_one_numeric@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2400]!	; 0x960

000006c8 <strlen@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2392]!	; 0x958

000006d4 <snprintf@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2384]!	; 0x950

000006e0 <rb_strtok_r@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2376]!	; 0x948

000006ec <find_named_person@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2368]!	; 0x940

000006f8 <strncat@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2360]!	; 0x938

00000704 <__assert_fail@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00000710 <call_weak_fn>:
     710:	ldr	r3, [pc, #20]	; 72c <call_weak_fn+0x1c>
     714:	ldr	r2, [pc, #20]	; 730 <call_weak_fn+0x20>
     718:	add	r3, pc, r3
     71c:	ldr	r2, [r3, r2]
     720:	cmp	r2, #0
     724:	bxeq	lr
     728:	b	6a4 <__gmon_start__@plt>
     72c:	.word	0x000118e0
     730:	.word	0x00000048

00000734 <deregister_tm_clones>:
     734:	ldr	r0, [pc, #44]	; 768 <deregister_tm_clones+0x34>
     738:	ldr	r3, [pc, #44]	; 76c <deregister_tm_clones+0x38>
     73c:	add	r0, pc, r0
     740:	add	r3, pc, r3
     744:	cmp	r3, r0
     748:	ldr	r3, [pc, #32]	; 770 <deregister_tm_clones+0x3c>
     74c:	add	r3, pc, r3
     750:	bxeq	lr
     754:	ldr	r2, [pc, #24]	; 774 <deregister_tm_clones+0x40>
     758:	ldr	r3, [r3, r2]
     75c:	cmp	r3, #0
     760:	bxeq	lr
     764:	bx	r3
     768:	.word	0x0001198c
     76c:	.word	0x00011988
     770:	.word	0x000118ac
     774:	.word	0x00000044

00000778 <register_tm_clones>:
     778:	ldr	r0, [pc, #56]	; 7b8 <register_tm_clones+0x40>
     77c:	ldr	r3, [pc, #56]	; 7bc <register_tm_clones+0x44>
     780:	add	r0, pc, r0
     784:	add	r3, pc, r3
     788:	sub	r1, r3, r0
     78c:	ldr	r3, [pc, #44]	; 7c0 <register_tm_clones+0x48>
     790:	asr	r1, r1, #2
     794:	add	r3, pc, r3
     798:	add	r1, r1, r1, lsr #31
     79c:	asrs	r1, r1, #1
     7a0:	bxeq	lr
     7a4:	ldr	r2, [pc, #24]	; 7c4 <register_tm_clones+0x4c>
     7a8:	ldr	r3, [r3, r2]
     7ac:	cmp	r3, #0
     7b0:	bxeq	lr
     7b4:	bx	r3
     7b8:	.word	0x00011948
     7bc:	.word	0x00011944
     7c0:	.word	0x00011864
     7c4:	.word	0x0000004c

000007c8 <__do_global_dtors_aux>:
     7c8:	ldr	r3, [pc, #76]	; 81c <__do_global_dtors_aux+0x54>
     7cc:	ldr	r2, [pc, #76]	; 820 <__do_global_dtors_aux+0x58>
     7d0:	add	r3, pc, r3
     7d4:	add	r2, pc, r2
     7d8:	ldrb	r3, [r3]
     7dc:	cmp	r3, #0
     7e0:	bxne	lr
     7e4:	ldr	r3, [pc, #56]	; 824 <__do_global_dtors_aux+0x5c>
     7e8:	push	{r4, lr}
     7ec:	ldr	r3, [r2, r3]
     7f0:	cmp	r3, #0
     7f4:	beq	804 <__do_global_dtors_aux+0x3c>
     7f8:	ldr	r3, [pc, #40]	; 828 <__do_global_dtors_aux+0x60>
     7fc:	ldr	r0, [pc, r3]
     800:	bl	674 <__cxa_finalize@plt>
     804:	bl	734 <deregister_tm_clones>
     808:	ldr	r3, [pc, #28]	; 82c <__do_global_dtors_aux+0x64>
     80c:	mov	r2, #1
     810:	add	r3, pc, r3
     814:	strb	r2, [r3]
     818:	pop	{r4, pc}
     81c:	.word	0x000118f8
     820:	.word	0x00011824
     824:	.word	0x00000040
     828:	.word	0x00011854
     82c:	.word	0x000118b8

00000830 <frame_dummy>:
     830:	b	778 <register_tm_clones>

00000834 <m_accept>:
     834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     838:	add	fp, sp, #28
     83c:	sub	sp, sp, #12
     840:	mov	r4, r2
     844:	mov	r0, #0
     848:	str	r0, [sp, #8]
     84c:	ldr	r0, [fp, #8]
     850:	ldr	r1, [r0, #4]
     854:	ldrb	r0, [r1]
     858:	cmp	r0, #42	; 0x2a
     85c:	bne	870 <m_accept+0x3c>
     860:	mov	r0, r4
     864:	bl	ad4 <list_accepts>
     868:	sub	sp, fp, #28
     86c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     870:	mov	r0, r4
     874:	bl	c30 <build_nicklist>
     878:	ldr	r0, [pc, #540]	; a9c <m_accept+0x268>
     87c:	add	r0, pc, r0
     880:	ldr	r1, [pc, #536]	; aa0 <m_accept+0x26c>
     884:	add	r1, pc, r1
     888:	add	r2, sp, #8
     88c:	bl	6e0 <rb_strtok_r@plt>
     890:	cmp	r0, #0
     894:	beq	970 <m_accept+0x13c>
     898:	mov	sl, r0
     89c:	add	r0, r4, #88	; 0x58
     8a0:	str	r0, [sp, #4]
     8a4:	ldr	r6, [pc, #504]	; aa4 <m_accept+0x270>
     8a8:	add	r6, pc, r6
     8ac:	ldr	r7, [pc, #500]	; aa8 <m_accept+0x274>
     8b0:	add	r7, pc, r7
     8b4:	add	r5, sp, #8
     8b8:	ldr	r0, [pc, #492]	; aac <m_accept+0x278>
     8bc:	ldr	r0, [pc, r0]
     8c0:	add	r9, r0, #88	; 0x58
     8c4:	b	900 <m_accept+0xcc>
     8c8:	ldr	r0, [r4, #432]	; 0x1b0
     8cc:	add	r1, r0, #316	; 0x13c
     8d0:	mov	r0, r8
     8d4:	bl	e74 <rb_dlinkFindDestroy>
     8d8:	add	r1, r8, #408	; 0x198
     8dc:	mov	r0, r4
     8e0:	bl	e74 <rb_dlinkFindDestroy>
     8e4:	mov	r0, #0
     8e8:	mov	r1, r7
     8ec:	mov	r2, r5
     8f0:	bl	6e0 <rb_strtok_r@plt>
     8f4:	mov	sl, r0
     8f8:	cmp	r0, #0
     8fc:	beq	970 <m_accept+0x13c>
     900:	mov	r0, sl
     904:	bl	6ec <find_named_person@plt>
     908:	cmp	r0, #0
     90c:	beq	958 <m_accept+0x124>
     910:	mov	r8, r0
     914:	cmp	r0, r4
     918:	beq	8c8 <m_accept+0x94>
     91c:	ldr	r0, [r4, #432]	; 0x1b0
     920:	add	r1, r0, #316	; 0x13c
     924:	mov	r0, r8
     928:	bl	dc8 <rb_dlinkFind>
     92c:	cmp	r0, #0
     930:	bne	8c8 <m_accept+0x94>
     934:	add	r0, r8, #88	; 0x58
     938:	str	r0, [sp]
     93c:	mov	r0, r4
     940:	ldr	r1, [pc, #360]	; ab0 <m_accept+0x27c>
     944:	add	r1, pc, r1
     948:	mov	r2, r9
     94c:	ldr	r3, [sp, #4]
     950:	bl	680 <sendto_one@plt>
     954:	b	8e4 <m_accept+0xb0>
     958:	mov	r0, r4
     95c:	movw	r1, #401	; 0x191
     960:	mov	r2, r6
     964:	mov	r3, sl
     968:	bl	6bc <sendto_one_numeric@plt>
     96c:	b	8e4 <m_accept+0xb0>
     970:	ldr	r0, [r4, #432]	; 0x1b0
     974:	ldr	r9, [r0, #324]	; 0x144
     978:	ldr	r0, [pc, #308]	; ab4 <m_accept+0x280>
     97c:	add	r0, pc, r0
     980:	ldr	r1, [pc, #304]	; ab8 <m_accept+0x284>
     984:	add	r1, pc, r1
     988:	add	r2, sp, #8
     98c:	bl	6e0 <rb_strtok_r@plt>
     990:	cmp	r0, #0
     994:	beq	a74 <m_accept+0x240>
     998:	mov	r8, r0
     99c:	add	r0, r4, #88	; 0x58
     9a0:	str	r0, [sp, #4]
     9a4:	ldr	r7, [pc, #272]	; abc <m_accept+0x288>
     9a8:	add	r7, pc, r7
     9ac:	add	r5, sp, #8
     9b0:	ldr	r0, [pc, #264]	; ac0 <m_accept+0x28c>
     9b4:	ldr	r0, [pc, r0]
     9b8:	add	r6, r0, #88	; 0x58
     9bc:	b	a00 <m_accept+0x1cc>
     9c0:	add	r0, sl, #88	; 0x58
     9c4:	str	r0, [sp]
     9c8:	mov	r0, r4
     9cc:	ldr	r1, [pc, #244]	; ac8 <m_accept+0x294>
     9d0:	add	r1, pc, r1
     9d4:	mov	r2, r6
     9d8:	ldr	r3, [sp, #4]
     9dc:	bl	680 <sendto_one@plt>
     9e0:	mov	r0, #0
     9e4:	mov	r1, r7
     9e8:	mov	r2, r5
     9ec:	bl	6e0 <rb_strtok_r@plt>
     9f0:	mov	r8, r0
     9f4:	add	r9, r9, #1
     9f8:	cmp	r0, #0
     9fc:	beq	a74 <m_accept+0x240>
     a00:	mov	r0, r8
     a04:	bl	6ec <find_named_person@plt>
     a08:	cmp	r0, #0
     a0c:	beq	a58 <m_accept+0x224>
     a10:	mov	sl, r0
     a14:	cmp	r0, r4
     a18:	beq	9c0 <m_accept+0x18c>
     a1c:	ldr	r0, [r4, #432]	; 0x1b0
     a20:	add	r1, r0, #316	; 0x13c
     a24:	mov	r0, sl
     a28:	bl	dc8 <rb_dlinkFind>
     a2c:	cmp	r0, #0
     a30:	bne	9c0 <m_accept+0x18c>
     a34:	ldr	r0, [pc, #144]	; acc <m_accept+0x298>
     a38:	ldr	r0, [pc, r0]
     a3c:	ldr	r0, [r0, #96]	; 0x60
     a40:	cmp	r9, r0
     a44:	bge	a7c <m_accept+0x248>
     a48:	mov	r0, r4
     a4c:	mov	r1, sl
     a50:	bl	ef8 <add_accept>
     a54:	b	9e0 <m_accept+0x1ac>
     a58:	mov	r0, r4
     a5c:	movw	r1, #401	; 0x191
     a60:	ldr	r2, [pc, #92]	; ac4 <m_accept+0x290>
     a64:	add	r2, pc, r2
     a68:	mov	r3, r8
     a6c:	bl	6bc <sendto_one_numeric@plt>
     a70:	b	9e0 <m_accept+0x1ac>
     a74:	sub	sp, fp, #28
     a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a7c:	ldr	r1, [pc, #76]	; ad0 <m_accept+0x29c>
     a80:	add	r1, pc, r1
     a84:	mov	r0, r4
     a88:	mov	r2, r6
     a8c:	ldr	r3, [sp, #4]
     a90:	bl	680 <sendto_one@plt>
     a94:	sub	sp, fp, #28
     a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a9c:	.word	0x00011a4d
     aa0:	.word	0x00000887
     aa4:	.word	0x00000865
     aa8:	.word	0x0000085b
     aac:	.word	0x0001178c
     ab0:	.word	0x000007e2
     ab4:	.word	0x0001174d
     ab8:	.word	0x00000787
     abc:	.word	0x00000763
     ac0:	.word	0x00011694
     ac4:	.word	0x000006a9
     ac8:	.word	0x00000780
     acc:	.word	0x00011614
     ad0:	.word	0x000006fe

00000ad4 <list_accepts>:
     ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ad8:	add	fp, sp, #28
     adc:	sub	sp, sp, #532	; 0x214
     ae0:	mov	r5, r0
     ae4:	mov	r8, #0
     ae8:	strb	r8, [sp, #16]
     aec:	add	r0, r0, #88	; 0x58
     af0:	str	r0, [sp, #12]
     af4:	ldr	r0, [r5, #432]	; 0x1b0
     af8:	ldr	r7, [r0, #316]	; 0x13c
     afc:	cmp	r7, #0
     b00:	beq	bb4 <list_accepts+0xe0>
     b04:	ldr	r0, [sp, #12]
     b08:	bl	6c8 <strlen@plt>
     b0c:	add	r9, r0, #10
     b10:	add	sl, sp, #16
     b14:	ldr	r0, [pc, #248]	; c14 <list_accepts+0x140>
     b18:	ldr	r0, [pc, r0]
     b1c:	add	r0, r0, #88	; 0x58
     b20:	str	r0, [sp, #8]
     b24:	mov	r6, #0
     b28:	b	b80 <list_accepts+0xac>
     b2c:	str	sl, [sp]
     b30:	mov	r0, r5
     b34:	ldr	r1, [pc, #220]	; c18 <list_accepts+0x144>
     b38:	add	r1, pc, r1
     b3c:	ldr	r2, [sp, #8]
     b40:	ldr	r3, [sp, #12]
     b44:	bl	680 <sendto_one@plt>
     b48:	mov	r6, #0
     b4c:	strb	r6, [sp, #16]
     b50:	mov	r8, #0
     b54:	add	r0, sl, r6
     b58:	rsb	r1, r6, #512	; 0x200
     b5c:	ldr	r2, [pc, #184]	; c1c <list_accepts+0x148>
     b60:	add	r2, pc, r2
     b64:	mov	r3, r4
     b68:	bl	6d4 <snprintf@plt>
     b6c:	add	r6, r0, r6
     b70:	add	r8, r8, #1
     b74:	ldr	r7, [r7, #8]
     b78:	cmp	r7, #0
     b7c:	beq	bb4 <list_accepts+0xe0>
     b80:	ldr	r0, [r7]
     b84:	cmp	r0, #0
     b88:	beq	b74 <list_accepts+0xa0>
     b8c:	add	r4, r0, #88	; 0x58
     b90:	mov	r0, r4
     b94:	bl	6c8 <strlen@plt>
     b98:	cmp	r8, #14
     b9c:	bgt	b2c <list_accepts+0x58>
     ba0:	add	r1, r9, r6
     ba4:	add	r0, r1, r0
     ba8:	cmp	r0, #512	; 0x200
     bac:	bls	b54 <list_accepts+0x80>
     bb0:	b	b2c <list_accepts+0x58>
     bb4:	ldrb	r0, [sp, #16]
     bb8:	cmp	r0, #0
     bbc:	ldr	r4, [sp, #12]
     bc0:	beq	bec <list_accepts+0x118>
     bc4:	add	r0, sp, #16
     bc8:	str	r0, [sp]
     bcc:	ldr	r0, [pc, #76]	; c20 <list_accepts+0x14c>
     bd0:	ldr	r0, [pc, r0]
     bd4:	add	r2, r0, #88	; 0x58
     bd8:	ldr	r1, [pc, #68]	; c24 <list_accepts+0x150>
     bdc:	add	r1, pc, r1
     be0:	mov	r0, r5
     be4:	mov	r3, r4
     be8:	bl	680 <sendto_one@plt>
     bec:	ldr	r0, [pc, #52]	; c28 <list_accepts+0x154>
     bf0:	ldr	r0, [pc, r0]
     bf4:	add	r2, r0, #88	; 0x58
     bf8:	ldr	r1, [pc, #44]	; c2c <list_accepts+0x158>
     bfc:	add	r1, pc, r1
     c00:	mov	r0, r5
     c04:	mov	r3, r4
     c08:	bl	680 <sendto_one@plt>
     c0c:	sub	sp, fp, #28
     c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     c14:	.word	0x00011530
     c18:	.word	0x00000666
     c1c:	.word	0x0000064c
     c20:	.word	0x00011478
     c24:	.word	0x000005c2
     c28:	.word	0x00011458
     c2c:	.word	0x000005b4

00000c30 <build_nicklist>:
     c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c34:	add	fp, sp, #28
     c38:	sub	sp, sp, #12
     c3c:	mov	r4, r1
     c40:	str	r0, [fp, #-40]	; 0xffffffd8
     c44:	mov	r0, r1
     c48:	bl	6c8 <strlen@plt>
     c4c:	add	r0, r0, #8
     c50:	bic	r0, r0, #7
     c54:	sub	r0, sp, r0
     c58:	mov	sp, r0
     c5c:	mov	r1, r4
     c60:	bl	698 <strcpy@plt>
     c64:	ldr	r1, [pc, #320]	; dac <build_nicklist+0x17c>
     c68:	add	r1, pc, r1
     c6c:	mov	r8, #0
     c70:	strb	r8, [r1]
     c74:	ldr	r6, [pc, #308]	; db0 <build_nicklist+0x180>
     c78:	add	r6, pc, r6
     c7c:	strb	r8, [r6]
     c80:	ldr	r1, [pc, #300]	; db4 <build_nicklist+0x184>
     c84:	add	r1, pc, r1
     c88:	sub	r2, fp, #36	; 0x24
     c8c:	bl	6e0 <rb_strtok_r@plt>
     c90:	cmp	r0, #0
     c94:	beq	da4 <build_nicklist+0x174>
     c98:	ldr	r7, [pc, #280]	; db8 <build_nicklist+0x188>
     c9c:	add	r7, pc, r7
     ca0:	sub	r4, fp, #36	; 0x24
     ca4:	mov	r9, #0
     ca8:	b	cdc <build_nicklist+0xac>
     cac:	ldr	r0, [fp, #-40]	; 0xffffffd8
     cb0:	movw	r1, #401	; 0x191
     cb4:	ldr	r2, [pc, #256]	; dbc <build_nicklist+0x18c>
     cb8:	add	r2, pc, r2
     cbc:	mov	r3, r5
     cc0:	bl	6bc <sendto_one_numeric@plt>
     cc4:	mov	r0, #0
     cc8:	mov	r1, r7
     ccc:	mov	r2, r4
     cd0:	bl	6e0 <rb_strtok_r@plt>
     cd4:	cmp	r0, #0
     cd8:	beq	da4 <build_nicklist+0x174>
     cdc:	mov	r5, r0
     ce0:	ldrb	sl, [r5], #1
     ce4:	cmp	sl, #45	; 0x2d
     ce8:	movne	r5, r0
     cec:	mov	r0, r5
     cf0:	bl	6ec <find_named_person@plt>
     cf4:	cmp	r0, #0
     cf8:	beq	cac <build_nicklist+0x7c>
     cfc:	cmp	sl, #45	; 0x2d
     d00:	bne	d4c <build_nicklist+0x11c>
     d04:	ldrb	r0, [r6]
     d08:	cmp	r0, #0
     d0c:	beq	d24 <build_nicklist+0xf4>
     d10:	mov	r0, r6
     d14:	bl	6c8 <strlen@plt>
     d18:	add	r0, r6, r0
     d1c:	mov	r1, #44	; 0x2c
     d20:	strh	r1, [r0]
     d24:	movw	r0, #511	; 0x1ff
     d28:	sub	r2, r0, r9
     d2c:	mov	r0, r6
     d30:	mov	r1, r5
     d34:	bl	6f8 <strncat@plt>
     d38:	mov	r0, r5
     d3c:	bl	6c8 <strlen@plt>
     d40:	add	r0, r9, r0
     d44:	add	r9, r0, #1
     d48:	b	cc4 <build_nicklist+0x94>
     d4c:	ldr	r1, [pc, #108]	; dc0 <build_nicklist+0x190>
     d50:	add	r1, pc, r1
     d54:	ldrb	r0, [r1]
     d58:	cmp	r0, #0
     d5c:	beq	d7c <build_nicklist+0x14c>
     d60:	mov	r0, r1
     d64:	bl	6c8 <strlen@plt>
     d68:	ldr	r1, [pc, #84]	; dc4 <build_nicklist+0x194>
     d6c:	add	r1, pc, r1
     d70:	add	r0, r1, r0
     d74:	mov	r2, #44	; 0x2c
     d78:	strh	r2, [r0]
     d7c:	movw	r0, #511	; 0x1ff
     d80:	sub	r2, r0, r8
     d84:	mov	r0, r1
     d88:	mov	r1, r5
     d8c:	bl	6f8 <strncat@plt>
     d90:	mov	r0, r5
     d94:	bl	6c8 <strlen@plt>
     d98:	add	r0, r8, r0
     d9c:	add	r8, r0, #1
     da0:	b	cc4 <build_nicklist+0x94>
     da4:	sub	sp, fp, #28
     da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     dac:	.word	0x00011461
     db0:	.word	0x00011651
     db4:	.word	0x00000487
     db8:	.word	0x0000046f
     dbc:	.word	0x00000455
     dc0:	.word	0x00011379
     dc4:	.word	0x0001135d

00000dc8 <rb_dlinkFind>:
     dc8:	push	{fp, lr}
     dcc:	mov	fp, sp
     dd0:	cmp	r1, #0
     dd4:	beq	e1c <rb_dlinkFind+0x54>
     dd8:	cmp	r0, #0
     ddc:	beq	e3c <rb_dlinkFind+0x74>
     de0:	ldr	r2, [r1]
     de4:	mov	r1, #0
     de8:	cmp	r2, #0
     dec:	beq	e08 <rb_dlinkFind+0x40>
     df0:	ldr	r3, [r2]
     df4:	cmp	r3, r0
     df8:	beq	e10 <rb_dlinkFind+0x48>
     dfc:	ldr	r2, [r2, #8]
     e00:	cmp	r2, #0
     e04:	bne	df0 <rb_dlinkFind+0x28>
     e08:	mov	r0, r1
     e0c:	pop	{fp, pc}
     e10:	mov	r1, r2
     e14:	mov	r0, r1
     e18:	pop	{fp, pc}
     e1c:	ldr	r0, [pc, #56]	; e5c <rb_dlinkFind+0x94>
     e20:	add	r0, pc, r0
     e24:	ldr	r1, [pc, #52]	; e60 <rb_dlinkFind+0x98>
     e28:	add	r1, pc, r1
     e2c:	ldr	r3, [pc, #48]	; e64 <rb_dlinkFind+0x9c>
     e30:	add	r3, pc, r3
     e34:	movw	r2, #310	; 0x136
     e38:	bl	704 <__assert_fail@plt>
     e3c:	ldr	r0, [pc, #36]	; e68 <rb_dlinkFind+0xa0>
     e40:	add	r0, pc, r0
     e44:	ldr	r1, [pc, #32]	; e6c <rb_dlinkFind+0xa4>
     e48:	add	r1, pc, r1
     e4c:	ldr	r3, [pc, #28]	; e70 <rb_dlinkFind+0xa8>
     e50:	add	r3, pc, r3
     e54:	movw	r2, #311	; 0x137
     e58:	bl	704 <__assert_fail@plt>
     e5c:	.word	0x000003b1
     e60:	.word	0x000003b6
     e64:	.word	0x000003ca
     e68:	.word	0x000003ef
     e6c:	.word	0x00000396
     e70:	.word	0x000003aa

00000e74 <rb_dlinkFindDestroy>:
     e74:	push	{fp, lr}
     e78:	mov	fp, sp
     e7c:	cmp	r1, #0
     e80:	beq	ea0 <rb_dlinkFindDestroy+0x2c>
     e84:	cmp	r0, #0
     e88:	beq	ec0 <rb_dlinkFindDestroy+0x4c>
     e8c:	bl	f3c <rb_dlinkFindDelete>
     e90:	cmp	r0, #0
     e94:	popeq	{fp, pc}
     e98:	pop	{fp, lr}
     e9c:	b	68c <rb_free_rb_dlink_node@plt>
     ea0:	ldr	r0, [pc, #56]	; ee0 <rb_dlinkFindDestroy+0x6c>
     ea4:	add	r0, pc, r0
     ea8:	ldr	r1, [pc, #52]	; ee4 <rb_dlinkFindDestroy+0x70>
     eac:	add	r1, pc, r1
     eb0:	ldr	r3, [pc, #48]	; ee8 <rb_dlinkFindDestroy+0x74>
     eb4:	add	r3, pc, r3
     eb8:	movw	r2, #287	; 0x11f
     ebc:	bl	704 <__assert_fail@plt>
     ec0:	ldr	r0, [pc, #36]	; eec <rb_dlinkFindDestroy+0x78>
     ec4:	add	r0, pc, r0
     ec8:	ldr	r1, [pc, #32]	; ef0 <rb_dlinkFindDestroy+0x7c>
     ecc:	add	r1, pc, r1
     ed0:	ldr	r3, [pc, #28]	; ef4 <rb_dlinkFindDestroy+0x80>
     ed4:	add	r3, pc, r3
     ed8:	mov	r2, #288	; 0x120
     edc:	bl	704 <__assert_fail@plt>
     ee0:	.word	0x0000032d
     ee4:	.word	0x00000332
     ee8:	.word	0x00000388
     eec:	.word	0x0000036b
     ef0:	.word	0x00000312
     ef4:	.word	0x00000368

00000ef8 <add_accept>:
     ef8:	push	{r4, r5, fp, lr}
     efc:	add	fp, sp, #8
     f00:	mov	r4, r1
     f04:	mov	r5, r0
     f08:	bl	6b0 <rb_make_rb_dlink_node@plt>
     f0c:	mov	r1, r0
     f10:	ldr	r0, [r5, #432]	; 0x1b0
     f14:	add	r2, r0, #316	; 0x13c
     f18:	mov	r0, r4
     f1c:	bl	1014 <rb_dlinkAdd>
     f20:	add	r4, r4, #408	; 0x198
     f24:	bl	6b0 <rb_make_rb_dlink_node@plt>
     f28:	mov	r1, r0
     f2c:	mov	r0, r5
     f30:	mov	r2, r4
     f34:	pop	{r4, r5, fp, lr}
     f38:	b	1014 <rb_dlinkAdd>

00000f3c <rb_dlinkFindDelete>:
     f3c:	push	{fp, lr}
     f40:	mov	fp, sp
     f44:	cmp	r1, #0
     f48:	beq	fbc <rb_dlinkFindDelete+0x80>
     f4c:	mov	ip, r0
     f50:	cmp	r0, #0
     f54:	beq	fdc <rb_dlinkFindDelete+0xa0>
     f58:	ldr	r3, [r1]
     f5c:	mov	r0, r3
     f60:	cmp	r3, #0
     f64:	beq	fb8 <rb_dlinkFindDelete+0x7c>
     f68:	ldr	r2, [r0]
     f6c:	ldr	r3, [r0, #8]
     f70:	cmp	r2, ip
     f74:	bne	f5c <rb_dlinkFindDelete+0x20>
     f78:	add	r2, r3, #4
     f7c:	cmp	r3, #0
     f80:	addeq	r2, r1, #4
     f84:	ldr	r3, [r0, #4]
     f88:	str	r3, [r2]
     f8c:	ldmib	r0, {r2, ip}
     f90:	cmp	r2, #0
     f94:	mov	r3, r1
     f98:	addne	r3, r2, #8
     f9c:	str	ip, [r3]
     fa0:	mov	r2, #0
     fa4:	str	r2, [r0, #4]
     fa8:	str	r2, [r0, #8]
     fac:	ldr	r2, [r1, #8]
     fb0:	sub	r2, r2, #1
     fb4:	str	r2, [r1, #8]
     fb8:	pop	{fp, pc}
     fbc:	ldr	r0, [pc, #56]	; ffc <rb_dlinkFindDelete+0xc0>
     fc0:	add	r0, pc, r0
     fc4:	ldr	r1, [pc, #52]	; 1000 <rb_dlinkFindDelete+0xc4>
     fc8:	add	r1, pc, r1
     fcc:	ldr	r3, [pc, #48]	; 1004 <rb_dlinkFindDelete+0xc8>
     fd0:	add	r3, pc, r3
     fd4:	movw	r2, #258	; 0x102
     fd8:	bl	704 <__assert_fail@plt>
     fdc:	ldr	r0, [pc, #36]	; 1008 <rb_dlinkFindDelete+0xcc>
     fe0:	add	r0, pc, r0
     fe4:	ldr	r1, [pc, #32]	; 100c <rb_dlinkFindDelete+0xd0>
     fe8:	add	r1, pc, r1
     fec:	ldr	r3, [pc, #28]	; 1010 <rb_dlinkFindDelete+0xd4>
     ff0:	add	r3, pc, r3
     ff4:	movw	r2, #259	; 0x103
     ff8:	bl	704 <__assert_fail@plt>
     ffc:	.word	0x00000211
    1000:	.word	0x00000216
    1004:	.word	0x0000029d
    1008:	.word	0x0000024f
    100c:	.word	0x000001f6
    1010:	.word	0x0000027d

00001014 <rb_dlinkAdd>:
    1014:	push	{fp, lr}
    1018:	mov	fp, sp
    101c:	cmp	r0, #0
    1020:	beq	1080 <rb_dlinkAdd+0x6c>
    1024:	cmp	r1, #0
    1028:	beq	10a0 <rb_dlinkAdd+0x8c>
    102c:	cmp	r2, #0
    1030:	beq	10c0 <rb_dlinkAdd+0xac>
    1034:	mov	r3, #0
    1038:	stm	r1, {r0, r3}
    103c:	ldr	r0, [r2]
    1040:	str	r0, [r1, #8]
    1044:	ldr	r0, [r2]
    1048:	cmp	r0, #0
    104c:	beq	105c <rb_dlinkAdd+0x48>
    1050:	add	r0, r0, #4
    1054:	str	r1, [r0]
    1058:	b	106c <rb_dlinkAdd+0x58>
    105c:	mov	r0, r2
    1060:	ldr	r3, [r0, #4]!
    1064:	cmp	r3, #0
    1068:	streq	r1, [r0]
    106c:	str	r1, [r2]
    1070:	ldr	r0, [r2, #8]
    1074:	add	r0, r0, #1
    1078:	str	r0, [r2, #8]
    107c:	pop	{fp, pc}
    1080:	ldr	r0, [pc, #88]	; 10e0 <rb_dlinkAdd+0xcc>
    1084:	add	r0, pc, r0
    1088:	ldr	r1, [pc, #84]	; 10e4 <rb_dlinkAdd+0xd0>
    108c:	add	r1, pc, r1
    1090:	ldr	r3, [pc, #80]	; 10e8 <rb_dlinkAdd+0xd4>
    1094:	add	r3, pc, r3
    1098:	mov	r2, #143	; 0x8f
    109c:	bl	704 <__assert_fail@plt>
    10a0:	ldr	r0, [pc, #68]	; 10ec <rb_dlinkAdd+0xd8>
    10a4:	add	r0, pc, r0
    10a8:	ldr	r1, [pc, #64]	; 10f0 <rb_dlinkAdd+0xdc>
    10ac:	add	r1, pc, r1
    10b0:	ldr	r3, [pc, #60]	; 10f4 <rb_dlinkAdd+0xe0>
    10b4:	add	r3, pc, r3
    10b8:	mov	r2, #144	; 0x90
    10bc:	bl	704 <__assert_fail@plt>
    10c0:	ldr	r0, [pc, #48]	; 10f8 <rb_dlinkAdd+0xe4>
    10c4:	add	r0, pc, r0
    10c8:	ldr	r1, [pc, #44]	; 10fc <rb_dlinkAdd+0xe8>
    10cc:	add	r1, pc, r1
    10d0:	ldr	r3, [pc, #40]	; 1100 <rb_dlinkAdd+0xec>
    10d4:	add	r3, pc, r3
    10d8:	mov	r2, #145	; 0x91
    10dc:	bl	704 <__assert_fail@plt>
    10e0:	.word	0x000001ab
    10e4:	.word	0x00000152
    10e8:	.word	0x00000214
    10ec:	.word	0x0000023f
    10f0:	.word	0x00000132
    10f4:	.word	0x000001f4
    10f8:	.word	0x0000010d
    10fc:	.word	0x00000112
    1100:	.word	0x000001d4

Disassembly of section .fini:

00001104 <_fini>:
    1104:	push	{r3, lr}
    1108:	pop	{r3, pc}
